Type: UnityEngine.XR.Interaction.Toolkit.Utilities.ExposedRegistrationList`1

Method: System.Int32 get_count()

Disassembly:
	0x02D11824 BL 0x2EECE50
	0x02D11828 STR X21, [X19 + 0x10]
	0x02D1182C LDR X8, [X20 + 0x20]
	0x02D11830 LDR X8, [X8 + 0xC0]
	0x02D11834 LDR X0, [X8 + 0x8]
	0x02D11838 LDRB W8, [X0 + 0x135]
	0x02D1183C TBNZ X8, 0x0, 0x2D11844
	0x02D11840 BL 0x1C5C684

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {10}
	004 Move X8, [X1+32]
	005 Move X8, [X8+192]
	006 Move X1, [X8]
	007 Move X30, [X31+16]
	008 Call 0x28BA738, X0
	009 Return X0
	010 Call 0x1C17F20

Method: System.Void Add(T item)

Disassembly:
	0x02D11844 BL 0x1C16F10
	0x02D11848 LDR X8, [X20 + 0x20]
	0x02D1184C MOV X20, X0
	0x02D11850 LDR X8, [X8 + 0xC0]
	0x02D11854 LDR X1, [X8 + 0x90]
	0x02D11858 BL 0x2AA4804
	0x02D1185C STR X20, [X19 + 0x18]
	0x02D11860 MOV X0, X19
	0x02D11864 LDP X20, X19, [X31 + 0x10]
	0x02D11868 MOV X1, X31
	0x02D1186C LDP X30, X21, [X31], #0x20
	0x02D11870 B 0x33BDD8C
	0x02D11874 SUB X31, X31, 0x40
	0x02D11878 STP X30, X21, [X31 + 0x20]
	0x02D1187C STP X20, X19, [X31 + 0x30]
	0x02D11880 MOV X20, X2
	0x02D11884 LDR X2, [X0 + 0x18]
	0x02D11888 CBZ X2, 0x2D1192C
	0x02D1188C LDR X8, [X20 + 0x20]
	0x02D11890 MOV X19, X1
	0x02D11894 MOV X21, X0
	0x02D11898 ADD X3, X31, 0x18
	0x02D1189C LDR X8, [X8 + 0xC0]
	0x02D118A0 ADD X4, X31, 0x8
	0x02D118A4 LDR X1, [X8 + 0x18]
	0x02D118A8 LDR X0, [X1]
	0x02D118AC STR X19, [X31 + 0x18]
	0x02D118B0 LDR X8, [X1 + 0x10]
	0x02D118B4 BLR X8
	0x02D118B8 LDRB W8, [X31 + 0x8]
	0x02D118BC CBNZ W8, 0x2D1191C
	0x02D118C0 LDR X2, [X21 + 0x10]
	0x02D118C4 CBZ X2, 0x2D1192C
	0x02D118C8 LDR X8, [X20 + 0x20]
	0x02D118CC LDR X21, [X21 + 0x18]
	0x02D118D0 ADD X3, X31, 0x18
	0x02D118D4 ADD X4, X31, 0x8
	0x02D118D8 LDR X8, [X8 + 0xC0]
	0x02D118DC LDR X1, [X8 + 0x28]
	0x02D118E0 LDR X0, [X1]
	0x02D118E4 STR X19, [X31 + 0x18]
	0x02D118E8 LDR X8, [X1 + 0x10]
	0x02D118EC BLR X8
	0x02D118F0 CBZ X21, 0x2D1192C
	0x02D118F4 LDR X8, [X20 + 0x20]
	0x02D118F8 LDR X4, [X31 + 0x8]
	0x02D118FC ADD X3, X31, 0x8
	0x02D11900 MOV X2, X21
	0x02D11904 LDR X8, [X8 + 0xC0]
	0x02D11908 LDR X1, [X8 + 0x38]
	0x02D1190C LDR X0, [X1]
	0x02D11910 STP X19, X4, [X31 + 0x8]
	0x02D11914 LDR X8, [X1 + 0x10]
	0x02D11918 BLR X8
	0x02D1191C LDP X20, X19, [X31 + 0x30]
	0x02D11920 LDP X30, X21, [X31 + 0x20]
	0x02D11924 ADD X31, X31, 0x40
	0x02D11928 RET
	0x02D1192C BL 0x1C16F20
	0x02D11930 SUB X31, X31, 0x40
	0x02D11934 STP X30, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x16CB000
	007 Move W8, [X22+1940]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x13E3000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1940], W8
	020 Compare X20, 0
	021 JumpIfEqual {58}
	022 Move X9, 0x13E3000
	023 Move X9, [X9+1432]
	024 Move X8, [X20]
	025 Move X0, [X9]
	026 Move W10, [X8+304]
	027 Move W9, [X0+304]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X8, [X8+200]
	030 Add X8, X8, X9
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X20
	038 Move X1, X31
	039 Move X2, X31
	040 Call Object.op_Equality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {58}
	045 Compare X21, 0
	046 JumpIfEqual {73}
	047 Move X8, [X21]
	048 Move X0, X21
	049 Move X1, X20
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X3, [X8+408]
	053 Move X2, [X8+416]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X30, [X31+48]
	057 CallNoReturn X3
	058 Move X0, 0x13E8000
	059 Move X0, [X0+1320]
	060 Call 0x1C17D08
	061 Call 0x1C17F10
	062 Move X20, X0
	063 Move X0, 0x140E000
	064 Move X0, [X0+3280]
	065 Call 0x1C17D08
	066 Move X1, X0
	067 Move X0, X20
	068 Move X2, X31
	069 Call ArgumentNullException..ctor, X0, X1
	070 Move X0, X20
	071 Move X1, X19
	072 Call 0x1C17DEC
	073 Call 0x1C17F20

Method: System.Boolean Remove(T item)

Disassembly:
	0x02D11938 STP X20, X19, [X31 + 0x30]
	0x02D1193C STR X31, [X31]
	0x02D11940 MOV X19, X2
	0x02D11944 LDR X2, [X0 + 0x18]
	0x02D11948 CBZ X2, 0x2D119E0
	0x02D1194C LDR X8, [X19 + 0x20]
	0x02D11950 MOV X21, X1

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {9}
	004 Move X8, [X0]
	005 Move X3, [X8+424]
	006 Move X2, [X8+432]
	007 Move X30, [X31+16]
	008 CallNoReturn X3
	009 Call 0x1C17F20

Method: System.Void MoveTo(T item, System.Int32 newIndex)

Disassembly:
	0x02D11954 MOV X20, X0
	0x02D11958 ADD X3, X31, 0x8
	0x02D1195C LDR X8, [X8 + 0xC0]
	0x02D11960 ADD X4, X31, 0x1C
	0x02D11964 LDR X1, [X8 + 0x40]
	0x02D11968 ADD X8, X31, 0x0
	0x02D1196C LDR X0, [X1]
	0x02D11970 STP X21, X8, [X31 + 0x8]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {10}
	004 Move X8, [X3+32]
	005 Move X8, [X8+192]
	006 Move X3, [X8+40]
	007 Move X30, [X31+16]
	008 Call 0x28BAABC, X0, X1, X2
	009 Return 
	010 Call 0x1C17F20

Method: System.Void Clear()

Disassembly:
	0x02D11974 LDR X8, [X1 + 0x10]
	0x02D11978 BLR X8
	0x02D1197C LDRB W8, [X31 + 0x1C]
	0x02D11980 CBZ W8, 0x2D119D0
	0x02D11984 LDR X2, [X20 + 0x18]
	0x02D11988 CBZ X2, 0x2D119E0
	0x02D1198C LDR X8, [X19 + 0x20]
	0x02D11990 ADD X3, X31, 0x8

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {10}
	004 Move X8, [X1+32]
	005 Move X8, [X8+192]
	006 Move X1, [X8+48]
	007 Move X30, [X31+16]
	008 Call 0x28BABDC, X0
	009 Return 
	010 Call 0x1C17F20

Method: System.Void GetAll(System.Collections.Generic.List`1<T> results)

Disassembly:
	0x02D11994 ADD X4, X31, 0x1C
	0x02D11998 LDR X8, [X8 + 0xC0]
	0x02D1199C LDR X1, [X8 + 0x50]
	0x02D119A0 LDR X0, [X1]
	0x02D119A4 STR X21, [X31 + 0x8]
	0x02D119A8 LDR X8, [X1 + 0x10]
	0x02D119AC BLR X8

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {9}
	004 Move X8, [X0]
	005 Move X3, [X8+456]
	006 Move X2, [X8+464]
	007 Move X30, [X31+16]
	008 CallNoReturn X3
	009 Call 0x1C17F20

Method: T GetAt(System.Int32 index)

Disassembly:
	0x02D119B0 LDR X0, [X20 + 0x10]
	0x02D119B4 CBZ X0, 0x2D119E0
	0x02D119B8 LDR X8, [X19 + 0x20]
	0x02D119BC LDR X1, [X31]
	0x02D119C0 LDR X8, [X8 + 0xC0]
	0x02D119C4 LDR X2, [X8 + 0x58]
	0x02D119C8 LDR X8, [X2]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {9}
	004 Move X8, [X0]
	005 Move X3, [X8+472]
	006 Move X2, [X8+480]
	007 Move X30, [X31+16]
	008 CallNoReturn X3
	009 Call 0x1C17F20

Method: System.Void RegisterReferences(System.Collections.Generic.List`1<TObject> references, UnityEngine.Object context = null)

Disassembly:
	0x0212FF58 SUB X5, X29, 0x18
	0x0212FF5C LDR W9, [X9 + 0x28]
	0x0212FF60 MOV X2, X27
	0x0212FF64 MOV X4, X31
	0x0212FF68 CMP W9, 0x0
	0x0212FF6C CSEL X3, X10, X25, LT
	0x0212FF70 BL 0x1C17728
	0x0212FF74 LDUR W8, [X29 - 0x18]
	0x0212FF78 ADD W9, W23, W20
	0x0212FF7C CMP W9, W8
	0x0212FF80 B.GT 0x2130144
	0x0212FF84 LDR X0, [X19 + 0x20]
	0x0212FF88 LDRB W8, [X0 + 0x135]
	0x0212FF8C TBNZ X8, 0x0, 0x212FF94
	0x0212FF90 BL 0x1C5C684
	0x0212FF94 LDR X8, [X0 + 0xC0]
	0x0212FF98 MOV X0, X21
	0x0212FF9C LDR X1, [X8 + 0x68]
	0x0212FFA0 BL 0x2DFA338
	0x0212FFA4 LDR W8, [X21]
	0x0212FFA8 ADD W25, W8, W23
	0x0212FFAC CMP W0, W25
	0x0212FFB0 B.GE 0x213000C
	0x0212FFB4 ADRP X8, 0x1FC4000
	0x0212FFB8 LDR X8, [X8 + 0x5A8]
	0x0212FFBC LDR X0, [X8]
	0x0212FFC0 LDR W8, [X0 + 0xE0]
	0x0212FFC4 CBNZ W8, 0x212FFCC
	0x0212FFC8 BL 0x1C16DFC
	0x0212FFCC MOVZ W1, 0xA
	0x0212FFD0 MOV W0, W25
	0x0212FFD4 MOV X2, X31
	0x0212FFD8 BL 0x337EDF0
	0x0212FFDC LDR X8, [X19 + 0x20]
	0x0212FFE0 MOV W25, W0
	0x0212FFE4 LDRB W9, [X8 + 0x135]
	0x0212FFE8 TBNZ X9, 0x0, 0x212FFF8
	0x0212FFEC MOV X0, X8
	0x0212FFF0 BL 0x1C5C684
	0x0212FFF4 MOV X8, X0
	0x0212FFF8 LDR X8, [X8 + 0xC0]
	0x0212FFFC MOV X0, X21
	0x02130000 MOV W1, W25
	0x02130004 LDR X2, [X8 + 0x28]
	0x02130008 BL 0x2DFA384
	0x0213000C LDR X0, [X19 + 0x20]
	0x02130010 LDRB W8, [X0 + 0x135]
	0x02130014 TBNZ X8, 0x0, 0x213001C
	0x02130018 BL 0x1C5C684
	0x0213001C LDR W8, [X21]
	0x02130020 CMP W22, W8
	0x02130024 B.GE 0x213006C
	0x02130028 LDR X0, [X19 + 0x20]
	0x0213002C LDP X26, X25, [X21 + 0x8]
	0x02130030 LDRB W9, [X0 + 0x135]
	0x02130034 TBNZ X9, 0x0, 0x2130040
	0x02130038 BL 0x1C5C684
	0x0213003C LDR W8, [X21]
	0x02130040 ADRP X9, 0x1FEB000
	0x02130044 LDR X9, [X9 + 0x6A0]
	0x02130048 ADD W5, W22, W23
	0x0213004C SUB W6, W8, W22
	0x02130050 MOV X0, X26
	0x02130054 LDR X7, [X9]
	0x02130058 MOV X1, X25
	0x0213005C MOV W2, W22
	0x02130060 MOV X3, X26
	0x02130064 MOV X4, X25
	0x02130068 BL 0x23EDF68
	0x0213006C CMP W23, 0x1
	0x02130070 B.LT 0x2130104
	0x02130074 MOV W26, W23
	0x02130078 SUB X27, X29, 0x28
	0x0213007C SUB X28, X29, 0xC
	0x02130080 LDR X8, [X19 + 0x38]
	0x02130084 LDR X0, [X8]
	0x02130088 LDRB W9, [X0 + 0x135]
	0x0213008C TBNZ X9, 0x0, 0x2130098
	0x02130090 BL 0x1C5C684
	0x02130094 LDR X8, [X19 + 0x38]
	0x02130098 LDR X9, [X8]
	0x0213009C LDUR X10, [X29 - 0x28]
	0x021300A0 LDR X1, [X8 + 0x10]
	0x021300A4 SUB X4, X29, 0x20
	0x021300A8 LDR W9, [X9 + 0x28]
	0x021300AC SUB X5, X29, 0x18
	0x021300B0 MOV X2, X24
	0x021300B4 STUR W20, [X29 - 0xC]
	0x021300B8 CMP W9, 0x0
	0x021300BC CSEL X3, X10, X27, LT
	0x021300C0 STUR X28, [X29 - 0x20]
	0x021300C4 BL 0x1C17728
	0x021300C8 LDR X0, [X19 + 0x20]
	0x021300CC LDUR X25, [X29 - 0x18]
	0x021300D0 LDRB W8, [X0 + 0x135]
	0x021300D4 TBNZ X8, 0x0, 0x21300DC
	0x021300D8 BL 0x1C5C684
	0x021300DC LDR X8, [X0 + 0xC0]
	0x021300E0 MOV X0, X25
	0x021300E4 LDR X1, [X8 + 0x20]
	0x021300E8 BL 0x2DFBBE4
	0x021300EC LDR X8, [X21 + 0x8]
	0x021300F0 SUBS X26, X26, 0x1
	0x021300F4 ADD W20, W20, 0x1
	0x021300F8 STR X0, [X8, W22, SXTW]
	0x021300FC ADD W22, W22, 0x1
	0x02130100 B.NE 0x2130080
	0x02130104 LDR W8, [X21]
	0x02130108 ADD W8, W8, W23
	0x0213010C STR W8, [X21]
	0x02130110 LDUR X8, [X29 - 0x30]
	0x02130114 LDR X8, [X8 + 0x28]
	0x02130118 LDUR X9, [X29 - 0x8]
	0x0213011C CMP X8, X9
	0x02130120 B.NE 0x2130228
	0x02130124 ADD X31, X29, 0x0
	0x02130128 LDP X20, X19, [X31 + 0x50]
	0x0213012C LDP X22, X21, [X31 + 0x40]
	0x02130130 LDP X24, X23, [X31 + 0x30]
	0x02130134 LDP X26, X25, [X31 + 0x20]
	0x02130138 LDP X28, X27, [X31 + 0x10]
	0x0213013C LDP X29, X30, [X31], #0x60
	0x02130140 RET
	0x02130144 STUR W23, [X29 - 0x18]
	0x02130148 ADRP X21, 0x1FC3000
	0x0213014C LDR X21, [X21 + 0x758]
	0x02130150 MOV X0, X21
	0x02130154 BL 0x1C16D08
	0x02130158 SUB X1, X29, 0x18
	0x0213015C BL 0x1C16E04
	0x02130160 MOV X22, X0
	0x02130164 MOV X0, X21
	0x02130168 STUR W20, [X29 - 0x20]
	0x0213016C BL 0x1C16D08
	0x02130170 SUB X1, X29, 0x20
	0x02130174 BL 0x1C16E04
	0x02130178 LDR X8, [X19 + 0x38]
	0x0213017C MOV X20, X0
	0x02130180 MOV W1, W31
	0x02130184 MOV X0, X8
	0x02130188 BL 0x199B988
	0x0213018C LDR X8, [X19 + 0x38]
	0x02130190 LDUR X10, [X29 - 0x28]
	0x02130194 MOV X2, X26
	0x02130198 LDP X9, X1, [X8]
	0x0213019C LDR W9, [X9 + 0x28]
	0x021301A0 CMP W9, 0x0
	0x021301A4 CSEL X3, X10, X25, LT
	0x021301A8 BL 0x199BDE4
	0x021301AC STUR W0, [X29 - 0xC]
	0x021301B0 MOV X0, X21
	0x021301B4 BL 0x1C16D08
	0x021301B8 SUB X1, X29, 0xC
	0x021301BC BL 0x1C16E04
	0x021301C0 MOV X21, X0
	0x021301C4 ADRP X0, 0x1FEB000
	0x021301C8 LDR X0, [X0 + 0x6A8]
	0x021301CC BL 0x1C16D08
	0x021301D0 MOV X1, X22
	0x021301D4 MOV X2, X20
	0x021301D8 MOV X3, X21
	0x021301DC MOV X4, X31
	0x021301E0 BL 0x3227C18
	0x021301E4 MOV X20, X0
	0x021301E8 ADRP X0, 0x1FCB000
	0x021301EC LDR X0, [X0 + 0x760]
	0x021301F0 BL 0x1C16D08
	0x021301F4 BL 0x1C16F10
	0x021301F8 MOV X21, X0
	0x021301FC ADRP X0, 0x1FEB000
	0x02130200 LDR X0, [X0 + 0x648]
	0x02130204 BL 0x1C16D08
	0x02130208 MOV X1, X0
	0x0213020C MOV X0, X21
	0x02130210 MOV X2, X20
	0x02130214 MOV X3, X31
	0x02130218 BL 0x3311888
	0x0213021C MOV X0, X21
	0x02130220 MOV X1, X19
	0x02130224 BL 0x1C16DEC
	0x02130228 BL 0x3EB1B20
	0x0213022C STP X29, X30, [X31 - 0x60]!
	0x02130230 STP X28, X27, [X31 + 0x10]
	0x02130234 STP X26, X25, [X31 + 0x20]
	0x02130238 STP X24, X23, [X31 + 0x30]
	0x0213023C STP X22, X21, [X31 + 0x40]
	0x02130240 STP X20, X19, [X31 + 0x50]
	0x02130244 ADD X29, X31, 0x0
	0x02130248 SUB X31, X31, 0x40
	0x0213024C MRS X20, 0xC000
	0x02130250 LDR X8, [X20 + 0x28]
	0x02130254 MOV X19, X4
	0x02130258 MOV W24, W2
	0x0213025C MOV W23, W1
	0x02130260 STUR X8, [X29 - 0x8]
	0x02130264 STUR X3, [X29 - 0x28]
	0x02130268 LDR X8, [X4 + 0x38]
	0x0213026C MOV X21, X0
	0x02130270 CBNZ X8, 0x2130280
	0x02130274 MOV X0, X19
	0x02130278 BL 0x1C5C6E0
	0x0213027C LDR X8, [X19 + 0x38]
	0x02130280 LDR X0, [X8]
	0x02130284 LDRB W8, [X0 + 0x135]
	0x02130288 TBNZ X8, 0x0, 0x2130290
	0x0213028C BL 0x1C5C684
	0x02130290 LDR W8, [X0 + 0xFC]
	0x02130294 ADD X9, X31, 0x0
	0x02130298 ADD W8, W8, 0x10
	0x0213029C ADD X8, X8, 0xF
	0x021302A0 AND X8, X8, 0x1FFFFFFFF
	0x021302A4 SUB X22, X9, X8
	0x021302A8 ADD X31, X22, 0x0
	0x021302AC TBNZ X23, 0x1F, 0x2130438
	0x021302B0 LDR X0, [X19 + 0x20]
	0x021302B4 LDRB W8, [X0 + 0x135]
	0x021302B8 TBNZ X8, 0x0, 0x21302C0
	0x021302BC BL 0x1C5C684
	0x021302C0 LDR W8, [X21]
	0x021302C4 CMP W8, W23
	0x021302C8 B.LE 0x2130438
	0x021302CC LDR X0, [X19 + 0x20]
	0x021302D0 STUR X20, [X29 - 0x38]
	0x021302D4 LDRB W9, [X0 + 0x135]
	0x021302D8 TBNZ X9, 0x0, 0x21302E4
	0x021302DC BL 0x1C5C684
	0x021302E0 LDR W8, [X21]
	0x021302E4 ADD W9, W24, W23
	0x021302E8 CMP W9, W8
	0x021302EC B.GE 0x2130458
	0x021302F0 CMP W24, 0x2
	0x021302F4 B.LT 0x2130404
	0x021302F8 MOVZ W28, 0x1
	0x021302FC MOVZ W27, 0x2
	0x02130300 SUB X20, X29, 0x28
	0x02130304 STUR W24, [X29 - 0x2C]
	0x02130308 MOV W23, W27
	0x0213030C LDR X0, [X19 + 0x20]
	0x02130310 SUB W24, W23, 0x2
	0x02130314 LDRB W8, [X0 + 0x135]
	0x02130318 TBNZ X8, 0x0, 0x2130320
	0x0213031C BL 0x1C5C684
	0x02130320 LDR X8, [X0 + 0xC0]
	0x02130324 MOV X0, X21
	0x02130328 MOV W1, W24
	0x0213032C SUB W23, W23, 0x1
	0x02130330 LDR X2, [X8 + 0xA8]
	0x02130334 BL 0x2DFA48C
	0x02130338 LDR X8, [X19 + 0x20]
	0x0213033C MOV X25, X0
	0x02130340 LDRB W9, [X8 + 0x135]
	0x02130344 TBNZ X9, 0x0, 0x2130354
	0x02130348 MOV X0, X8
	0x0213034C BL 0x1C5C684
	0x02130350 MOV X8, X0
	0x02130354 LDR X8, [X8 + 0xC0]
	0x02130358 MOV X0, X21
	0x0213035C MOV W1, W23
	0x02130360 LDR X2, [X8 + 0xA8]
	0x02130364 BL 0x2DFA48C
	0x02130368 LDR X9, [X19 + 0x38]
	0x0213036C MOV X26, X0
	0x02130370 LDR X8, [X9]
	0x02130374 LDRB W10, [X8 + 0x135]
	0x02130378 TBNZ X10, 0x0, 0x213038C
	0x0213037C MOV X0, X8
	0x02130380 BL 0x1C5C684
	0x02130384 LDR X9, [X19 + 0x38]
	0x02130388 MOV X8, X0
	0x0213038C LDP X10, X1, [X9]
	0x02130390 LDUR X11, [X29 - 0x28]
	0x02130394 SUB X4, X29, 0x20
	0x02130398 SUB X5, X29, 0xC
	0x0213039C LDR W10, [X10 + 0x28]
	0x021303A0 MOV X0, X8
	0x021303A4 MOV X2, X22
	0x021303A8 STP X25, X26, [X29 - 0x20]
	0x021303AC CMP W10, 0x0
	0x021303B0 CSEL X3, X11, X20, LT
	0x021303B4 BL 0x1C17728
	0x021303B8 LDUR W8, [X29 - 0xC]
	0x021303BC TBZ X8, 0x1F, 0x21303F0
	0x021303C0 LDR X0, [X19 + 0x20]
	0x021303C4 LDRB W8, [X0 + 0x135]
	0x021303C8 TBNZ X8, 0x0, 0x21303D0
	0x021303CC BL 0x1C5C684
	0x021303D0 LDR X8, [X0 + 0xC0]
	0x021303D4 MOV X0, X21
	0x021303D8 MOV W1, W23
	0x021303DC MOV W2, W24
	0x021303E0 LDR X3, [X8 + 0xA0]
	0x021303E4 BL 0x2DFB700
	0x021303E8 CMP W23, 0x2
	0x021303EC B.GE 0x213030C
	0x021303F0 LDUR W24, [X29 - 0x2C]
	0x021303F4 ADD W28, W28, 0x1
	0x021303F8 ADD W27, W27, 0x1
	0x021303FC CMP W28, W24
	0x02130400 B.NE 0x2130308
	0x02130404 LDUR X8, [X29 - 0x38]
	0x02130408 LDR X8, [X8 + 0x28]
	0x0213040C LDUR X9, [X29 - 0x8]
	0x02130410 CMP X8, X9
	0x02130414 B.NE 0x2130494
	0x02130418 ADD X31, X29, 0x0
	0x0213041C LDP X20, X19, [X31 + 0x50]
	0x02130420 LDP X22, X21, [X31 + 0x40]
	0x02130424 LDP X24, X23, [X31 + 0x30]
	0x02130428 LDP X26, X25, [X31 + 0x20]
	0x0213042C LDP X28, X27, [X31 + 0x10]
	0x02130430 LDP X29, X30, [X31], #0x60
	0x02130434 RET
	0x02130438 ADRP X0, 0x1FCB000
	0x0213043C LDR X0, [X0 + 0x760]
	0x02130440 BL 0x1C16D08
	0x02130444 BL 0x1C16F10
	0x02130448 MOV X20, X0
	0x0213044C ADRP X0, 0x1FEB000
	0x02130450 LDR X0, [X0 + 0x658]
	0x02130454 B 0x2130474
	0x02130458 ADRP X0, 0x1FCB000
	0x0213045C LDR X0, [X0 + 0x760]
	0x02130460 BL 0x1C16D08
	0x02130464 BL 0x1C16F10
	0x02130468 MOV X20, X0
	0x0213046C ADRP X0, 0x1FEB000
	0x02130470 LDR X0, [X0 + 0x648]
	0x02130474 BL 0x1C16D08
	0x02130478 MOV X1, X0
	0x0213047C MOV X0, X20
	0x02130480 MOV X2, X31
	0x02130484 BL 0x3316014
	0x02130488 MOV X0, X20
	0x0213048C MOV X1, X19
	0x02130490 BL 0x1C16DEC
	0x02130494 BL 0x3EB1B20
	0x02130498 SUB X31, X31, 0x60
	0x0213049C STP X4, X30, [X31 + 0x8]
	0x021304A0 STP X26, X25, [X31 + 0x20]
	0x021304A4 STP X24, X23, [X31 + 0x30]
	0x021304A8 STP X22, X21, [X31 + 0x40]
	0x021304AC STP X20, X19, [X31 + 0x50]
	0x021304B0 STR X3, [X31]
	0x021304B4 LDR X8, [X5 + 0x38]
	0x021304B8 MOV X19, X5
	0x021304BC MOV W20, W2
	0x021304C0 MOV W22, W1
	0x021304C4 MOV X21, X0
	0x021304C8 CBNZ X8, 0x21304D4
	0x021304CC MOV X0, X19
	0x021304D0 BL 0x1C5C6E0
	0x021304D4 TBNZ X22, 0x1F, 0x21305FC
	0x021304D8 LDR X0, [X19 + 0x20]
	0x021304DC LDRB W8, [X0 + 0x135]
	0x021304E0 TBNZ X8, 0x0, 0x21304E8
	0x021304E4 BL 0x1C5C684
	0x021304E8 LDR W8, [X21]
	0x021304EC CMP W8, W22
	0x021304F0 B.LE 0x21305FC
	0x021304F4 LDR X0, [X19 + 0x20]
	0x021304F8 LDRB W9, [X0 + 0x135]
	0x021304FC TBNZ X9, 0x0, 0x2130508
	0x02130500 BL 0x1C5C684
	0x02130504 LDR W8, [X21]
	0x02130508 ADD W9, W20, W22
	0x0213050C CMP W9, W8
	0x02130510 B.GE 0x213061C
	0x02130514 CMP W20, 0x2
	0x02130518 B.LT 0x21305E0
	0x0213051C MOVZ W25, 0x1
	0x02130520 MOVZ W26, 0x2
	0x02130524 MOV W22, W26
	0x02130528 LDR X0, [X19 + 0x20]
	0x0213052C SUB W23, W22, 0x2
	0x02130530 LDRB W8, [X0 + 0x135]
	0x02130534 TBNZ X8, 0x0, 0x213053C
	0x02130538 BL 0x1C5C684
	0x0213053C LDR X8, [X0 + 0xC0]
	0x02130540 MOV X0, X21
	0x02130544 MOV W1, W23
	0x02130548 SUB W22, W22, 0x1
	0x0213054C LDR X2, [X8 + 0xA8]
	0x02130550 BL 0x2DFA48C
	0x02130554 LDR X8, [X19 + 0x20]
	0x02130558 MOV X24, X0
	0x0213055C LDRB W9, [X8 + 0x135]
	0x02130560 TBNZ X9, 0x0, 0x2130570
	0x02130564 MOV X0, X8
	0x02130568 BL 0x1C5C684
	0x0213056C MOV X8, X0
	0x02130570 LDR X8, [X8 + 0xC0]
	0x02130574 MOV X0, X21
	0x02130578 MOV W1, W22
	0x0213057C LDR X2, [X8 + 0xA8]
	0x02130580 BL 0x2DFA48C
	0x02130584 LDR X8, [X19 + 0x38]
	0x02130588 MOV X2, X0
	0x0213058C ADD X0, X31, 0x0
	0x02130590 MOV X1, X24
	0x02130594 LDR X3, [X8 + 0x8]
	0x02130598 BL 0x37E4500
	0x0213059C TBZ X0, 0x1F, 0x21305D0
	0x021305A0 LDR X0, [X19 + 0x20]
	0x021305A4 LDRB W8, [X0 + 0x135]
	0x021305A8 TBNZ X8, 0x0, 0x21305B0
	0x021305AC BL 0x1C5C684
	0x021305B0 LDR X8, [X0 + 0xC0]
	0x021305B4 MOV X0, X21
	0x021305B8 MOV W1, W22
	0x021305BC MOV W2, W23
	0x021305C0 LDR X3, [X8 + 0xA0]
	0x021305C4 BL 0x2DFB700

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X8, [X3+56]
	015 Move X19, X3
	016 Move X20, X2
	017 Move X22, X1
	018 Move X21, X0
	019 Compare X8, 0
	020 JumpIfNotEqual {44}
	021 Move X0, 0x1FC5000
	022 Move X0, [X0+2600]
	023 Call 0x1C17CF4
	024 Move X0, 0x1FC5000
	025 Move X0, [X0+2512]
	026 Call 0x1C17CF4
	027 Move X0, 0x1FC5000
	028 Move X0, [X0+1432]
	029 Call 0x1C17CF4
	030 Move X0, 0x1FC5000
	031 Move X0, [X0+1728]
	032 Call 0x1C17CF4
	033 Move X0, 0x1FED000
	034 Move X0, [X0+1680]
	035 Call 0x1C17CF4
	036 Move X0, 0x1FED000
	037 Move X0, [X0+1688]
	038 Call 0x1C17CF4
	039 Move X8, [X19+56]
	040 Compare X8, 0
	041 JumpIfNotEqual {44}
	042 Move X0, X19
	043 Call 0x1C5D6E0
	044 Move [X31+32], X31
	045 Move [X31+40], X31
	046 Move [X31+48], X31
	047 Compare X22, 0
	048 JumpIfEqual {409}
	049 Move X8, [X19+56]
	050 Move X0, X22
	051 Move X1, [X8+8]
	052 Add X8, X31, 8
	053 Call List`1<Object>.GetEnumerator, X0
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 Move X8, [X31+24]
	056 Move X25, 0x1FC4000
	057 Move X26, 0x1FC4000
	058 Move X27, 0x1FC4000
	059 Move X29, 0x1FC4000
	060 Move X25, [X25+1432]
	061 Move X26, [X26+2512]
	062 Move X27, [X27+1728]
	063 Move X29, [X29+2600]
	064 Move [X31+2], V0
	065 Move [X31+48], X8
	066 Move X28, 0x1FEC000
	067 Move X28, [X28+1680]
	068 Move X8, [X19+56]
	069 Move X1, [X8+48]
	070 Add X0, X31, 32
	071 Call Enumerator<Object>.MoveNext, X0
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {343}
	076 Move X0, [X25]
	077 Move X22, [X31+48]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Move X0, X22
	083 Move X1, X31
	084 Move X2, X31
	085 Call Object.op_Inequality, X0, X1
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {128}
	090 Move X8, [X19+32]
	091 Move X8, [X8+192]
	092 Move X1, [X8+8]
	093 Move W8, [X1+309]
	094 Move TEMP, X8
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfEqual {101}
	098 Move X0, X1
	099 Call 0x1C5D684
	100 Move X1, X0
	101 Move X0, X22
	102 Call 0x1C17E00
	103 Move X8, [X19+32]
	104 Move X23, X0
	105 Move X8, [X8+192]
	106 Move X24, [X8+8]
	107 Move W8, [X24+309]
	108 Move TEMP, X8
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfEqual {115}
	112 Move X0, X24
	113 Call 0x1C5D684
	114 Move X24, X0
	115 Compare X23, 0
	116 JumpIfEqual {128}
	117 Move X0, X23
	118 Move X1, X24
	119 Call 0x1C17E00
	120 Move X1, X0
	121 Compare X1, 0
	122 JumpIfEqual {379}
	123 Move X8, [X19+32]
	124 Move X8, [X8+192]
	125 Move X2, [X8+80]
	126 Move X0, X21
	127 Call 0x2D11844, X0, X1
	128 Move X0, [X25]
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Move X0, X20
	134 Move X1, X31
	135 Move X2, X31
	136 Call Object.op_Inequality, X0, X1
	137 Move W8, W0
	138 Move X0, [X26]
	139 Move TEMP, X8
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfNotEqual {250}
	143 Move W1, 5
	144 Call 0x1C17D6C
	145 Move X23, X0
	146 Compare X0, 0
	147 JumpIfEqual {369}
	148 Compare X22, 0
	149 JumpIfEqual {156}
	150 Move X8, [X23]
	151 Move X1, [X8+64]
	152 Move X0, X22
	153 Call 0x1C17E00
	154 Compare X0, 0
	155 JumpIfEqual {388}
	156 Move W8, [X23+24]
	157 Compare W8, 0
	158 JumpIfEqual {370}
	159 Move [X23+32], X22
	160 Move X8, [X19+32]
	161 Move X0, [X27]
	162 Move X8, [X8+192]
	163 Move W9, [X0+224]
	164 Move X24, [X8+88]
	165 Compare W9, 0
	166 JumpIfNotEqual {168}
	167 Call 0x1C17DFC
	168 Move X0, X24
	169 Move X1, X31
	170 Call Type.GetTypeFromHandle, X0
	171 Compare X0, 0
	172 JumpIfEqual {365}
	173 Move X8, [X0]
	174 Move X9, [X8+424]
	175 Move X1, [X8+432]
	176 NotImplemented "Instruction BLR not yet implemented."
	177 Move X24, X0
	178 Compare X0, 0
	179 JumpIfEqual {186}
	180 Move X8, [X23]
	181 Move X1, [X8+64]
	182 Move X0, X24
	183 Call 0x1C17E00
	184 Compare X0, 0
	185 JumpIfEqual {391}
	186 Move W8, [X23+24]
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move [X23+40], X24
	189 Compare X20, 0
	190 JumpIfEqual {198}
	191 Move X8, [X23]
	192 Move X1, [X8+64]
	193 Move X0, X20
	194 Call 0x1C17E00
	195 Compare X0, 0
	196 JumpIfEqual {400}
	197 Move W8, [X23+24]
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move [X23+48], X20
	200 Compare X22, 0
	201 JumpIfEqual {209}
	202 Move X8, [X23]
	203 Move X1, [X8+64]
	204 Move X0, X22
	205 Call 0x1C17E00
	206 Compare X0, 0
	207 JumpIfEqual {397}
	208 Move W8, [X23+24]
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move [X23+56], X22
	211 Move X8, [X19+32]
	212 Move X8, [X8+192]
	213 Move X0, [X8+96]
	214 Move X1, X31
	215 Call Type.GetTypeFromHandle, X0
	216 Compare X0, 0
	217 JumpIfEqual {368}
	218 Move X8, [X0]
	219 Move X9, [X8+424]
	220 Move X1, [X8+432]
	221 NotImplemented "Instruction BLR not yet implemented."
	222 Move X22, X0
	223 Compare X0, 0
	224 JumpIfEqual {231}
	225 Move X8, [X23]
	226 Move X1, [X8+64]
	227 Move X0, X22
	228 Call 0x1C17E00
	229 Compare X0, 0
	230 JumpIfEqual {394}
	231 Move W8, [X23+24]
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Move [X23+64], X22
	234 Move X8, 0x1FEC000
	235 Move X8, [X8+1688]
	236 Move X0, [X8]
	237 Move X1, X23
	238 Move X2, X31
	239 Call String.Format, X0, X1
	240 Move X22, X0
	241 Move X0, [X29]
	242 Move W8, [X0+224]
	243 Compare W8, 0
	244 JumpIfNotEqual {246}
	245 Call 0x1C17DFC
	246 Move X0, X22
	247 Move X1, X20
	248 Move X2, X31
	249 Call Debug.LogError, X0, X1
	250 Move W1, 4
	251 Call 0x1C17D6C
	252 Move X23, X0
	253 Compare X0, 0
	254 JumpIfEqual {374}
	255 Compare X22, 0
	256 JumpIfEqual {263}
	257 Move X8, [X23]
	258 Move X1, [X8+64]
	259 Move X0, X22
	260 Call 0x1C17E00
	261 Compare X0, 0
	262 JumpIfEqual {406}
	263 Move W8, [X23+24]
	264 Compare W8, 0
	265 JumpIfEqual {375}
	266 Move [X23+32], X22
	267 Move X8, [X19+32]
	268 Move X0, [X27]
	269 Move X8, [X8+192]
	270 Move W9, [X0+224]
	271 Move X24, [X8+88]
	272 Compare W9, 0
	273 JumpIfNotEqual {275}
	274 Call 0x1C17DFC
	275 Move X0, X24
	276 Move X1, X31
	277 Call Type.GetTypeFromHandle, X0
	278 Compare X0, 0
	279 JumpIfEqual {367}
	280 Move X8, [X0]
	281 Move X9, [X8+424]
	282 Move X1, [X8+432]
	283 NotImplemented "Instruction BLR not yet implemented."
	284 Move X24, X0
	285 Compare X0, 0
	286 JumpIfEqual {293}
	287 Move X8, [X23]
	288 Move X1, [X8+64]
	289 Move X0, X24
	290 Call 0x1C17E00
	291 Compare X0, 0
	292 JumpIfEqual {382}
	293 Move W8, [X23+24]
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Move [X23+40], X24
	296 Compare X22, 0
	297 JumpIfEqual {305}
	298 Move X8, [X23]
	299 Move X1, [X8+64]
	300 Move X0, X22
	301 Call 0x1C17E00
	302 Compare X0, 0
	303 JumpIfEqual {385}
	304 Move W8, [X23+24]
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Move [X23+48], X22
	307 Move X8, [X19+32]
	308 Move X8, [X8+192]
	309 Move X0, [X8+96]
	310 Move X1, X31
	311 Call Type.GetTypeFromHandle, X0
	312 Compare X0, 0
	313 JumpIfEqual {366}
	314 Move X8, [X0]
	315 Move X9, [X8+424]
	316 Move X1, [X8+432]
	317 NotImplemented "Instruction BLR not yet implemented."
	318 Move X22, X0
	319 Compare X0, 0
	320 JumpIfEqual {327}
	321 Move X8, [X23]
	322 Move X1, [X8+64]
	323 Move X0, X22
	324 Call 0x1C17E00
	325 Compare X0, 0
	326 JumpIfEqual {403}
	327 Move W8, [X23+24]
	328 NotImplemented "Instruction CMP not yet implemented."
	329 Move [X23+56], X22
	330 Move X0, [X28]
	331 Move X1, X23
	332 Move X2, X31
	333 Call String.Format, X0, X1
	334 Move X22, X0
	335 Move X0, [X29]
	336 Move W8, [X0+224]
	337 Compare W8, 0
	338 JumpIfNotEqual {340}
	339 Call 0x1C17DFC
	340 Move X0, X22
	341 Move X1, X31
	342 Call Debug.LogError, X0
	343 Move X21, X31
	344 Move X8, [X19+56]
	345 Add X0, X31, 32
	346 Move X1, [X8+56]
	347 Call Enumerator<Object>.Dispose, X0
	348 Compare X21, 0
	349 JumpIfNotEqual {410}
	350 Move X20, [X31+144]
	351 Move X19, [X31+152]
	352 Move X22, [X31+128]
	353 Move X21, [X31+136]
	354 Move X24, [X31+112]
	355 Move X23, [X31+120]
	356 Move X26, [X31+96]
	357 Move X25, [X31+104]
	358 Move X28, [X31+80]
	359 Move X27, [X31+88]
	360 Move X29, [X31+64]
	361 Move X30, [X31+72]
	362 Add X31, X31, 160
	363 Return 
	364 Call 0x1C17F28
	365 Call 0x1C17F20
	366 Call 0x1C17F20
	367 Call 0x1C17F20
	368 Call 0x1C17F20
	369 Call 0x1C17F20
	370 Call 0x1C17F28
	371 Call 0x1C17F28
	372 Call 0x1C17F28
	373 Call 0x1C17F28
	374 Call 0x1C17F20
	375 Call 0x1C17F28
	376 Call 0x1C17F28
	377 Call 0x1C17F28
	378 Call 0x1C17F28
	379 Move X0, X23
	380 Move X1, X24
	381 Call 0x1C181E0
	382 Call 0x1C17F44
	383 Move X1, X31
	384 Call 0x1C17DEC
	385 Call 0x1C17F44
	386 Move X1, X31
	387 Call 0x1C17DEC
	388 Call 0x1C17F44
	389 Move X1, X31
	390 Call 0x1C17DEC
	391 Call 0x1C17F44
	392 Move X1, X31
	393 Call 0x1C17DEC
	394 Call 0x1C17F44
	395 Move X1, X31
	396 Call 0x1C17DEC
	397 Call 0x1C17F44
	398 Move X1, X31
	399 Call 0x1C17DEC
	400 Call 0x1C17F44
	401 Move X1, X31
	402 Call 0x1C17DEC
	403 Call 0x1C17F44
	404 Move X1, X31
	405 Call 0x1C17DEC
	406 Call 0x1C17F44
	407 Move X1, X31
	408 Call 0x1C17DEC
	409 Call 0x1C17F20
	410 Move X0, X21
	411 Call 0x1C17F18
	412 Move X20, X0
	413 NotImplemented "Instruction CMP not yet implemented."
	414 Move X0, X20
	415 Call 0x3EB2AD0
	416 Move X21, [X0]
	417 Call 0x3EB2AE0
	418 Move X21, X31
	419 Move X20, X0
	420 Move X8, [X19+56]
	421 Move X1, [X8+56]
	422 Add X0, X31, 32
	423 Call Enumerator<Object>.Dispose, X0
	424 Compare X21, 0
	425 JumpIfNotEqual {428}
	426 Move X0, X20
	427 Call 0x1D2D690
	428 Move X0, X21
	429 Call 0x1C17F18
	430 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x02D119CC BLR X8
	0x02D119D0 LDP X20, X19, [X31 + 0x30]
	0x02D119D4 LDP X30, X21, [X31 + 0x20]
	0x02D119D8 ADD X31, X31, 0x40

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+104]
	004 Call 0x25EA604, X0
	005 Return 

