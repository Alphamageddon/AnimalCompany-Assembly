Type: UnityEngine.XR.Interaction.Toolkit.Utilities.BurstMathUtility/Scale_00000934$PostfixBurstDelegate

Method: System.Void .ctor(System.Object param_0, System.IntPtr param_1)

Disassembly:
	0x03B8CC88 MOV X21, X0
	0x03B8CC8C TBNZ X8, 0x0, 0x3B8CCB0
	0x03B8CC90 ADRP X0, 0x567000
	0x03B8CC94 LDR X0, [X0 + 0xA90]
	0x03B8CC98 BL 0x1C16CF4
	0x03B8CC9C ADRP X0, 0x567000
	0x03B8CCA0 LDR X0, [X0 + 0x5A0]
	0x03B8CCA4 BL 0x1C16CF4
	0x03B8CCA8 MOVZ W8, 0x1
	0x03B8CCAC STRB W8, [X29 + 0xB61]
	0x03B8CCB0 LDR X0, [X28]
	0x03B8CCB4 MOV X1, X26
	0x03B8CCB8 STR X31, [X31 + 0x28]
	0x03B8CCBC BL 0x1C16E04
	0x03B8CCC0 LDR X8, [X28]
	0x03B8CCC4 STR X0, [X31]
	0x03B8CCC8 MOV X1, X25
	0x03B8CCCC MOV X0, X8
	0x03B8CCD0 BL 0x1C16E04
	0x03B8CCD4 LDR X8, [X28]
	0x03B8CCD8 STR X0, [X31 + 0x8]
	0x03B8CCDC MOV X1, X24
	0x03B8CCE0 MOV X0, X8
	0x03B8CCE4 BL 0x1C16E04
	0x03B8CCE8 LDR X8, [X27]
	0x03B8CCEC STR X0, [X31 + 0x10]
	0x03B8CCF0 MOV X1, X23
	0x03B8CCF4 MOV X0, X8
	0x03B8CCF8 BL 0x1C16E04
	0x03B8CCFC LDR X8, [X27]
	0x03B8CD00 STR X0, [X31 + 0x18]
	0x03B8CD04 MOV X1, X22
	0x03B8CD08 MOV X0, X8
	0x03B8CD0C BL 0x1C16E04
	0x03B8CD10 STR X0, [X31 + 0x20]
	0x03B8CD14 ADD X1, X31, 0x0
	0x03B8CD18 MOV X0, X21
	0x03B8CD1C MOV X2, X20
	0x03B8CD20 MOV X3, X19
	0x03B8CD24 BL 0x1C16CB0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+8]
	006 Move [X0+32], X1
	007 Move [X0+40], X2
	008 Move X19, X0
	009 Move X20, X1
	010 Move [X0+16], X8
	011 Move W21, [X2+82]
	012 Move [X0+64], X0
	013 Move X0, X2
	014 Call 0x1C17D84
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {22}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, -33083392
	021 Add X8, X8, 2044
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, -33083392
	024 Add X8, X8, 2020
	025 Move [X19+24], X8
	026 Compare X20, 0
	027 JumpIfEqual {40}
	028 Move X8, [X19+16]
	029 Move X9, [X19+32]
	030 Move [X19+24], X8
	031 Move [X19+64], X9
	032 Move X8, -33083392
	033 Add X8, X8, 1924
	034 Move [X19+56], X8
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return 
	040 Move X1, -50790400
	041 Add X1, X1, 3811
	042 Move X0, X31
	043 Call 0x1C17F3C
	044 Move X1, X31
	045 Call 0x1C17DEC

Method: System.Void Invoke(in UnityEngine.Vector3 a, in UnityEngine.Vector3 b, out UnityEngine.Vector3 result)

Disassembly:
	0x03B8CD28 LDP X20, X19, [X31 + 0x80]
	0x03B8CD2C LDP X22, X21, [X31 + 0x70]
	0x03B8CD30 LDP X24, X23, [X31 + 0x60]
	0x03B8CD34 LDP X26, X25, [X31 + 0x50]
	0x03B8CD38 LDP X28, X27, [X31 + 0x40]

ISIL:
	001 Move X8, [X0+64]
	002 Move X5, [X0+24]
	003 Move X4, [X0+40]
	004 Move X0, X8
	005 CallNoReturn X5

Method: System.IAsyncResult BeginInvoke(in UnityEngine.Vector3 a, in UnityEngine.Vector3 b, out UnityEngine.Vector3 result, System.AsyncCallback param_3, System.Object param_4)

Disassembly:
	0x03B8CD3C LDP X29, X30, [X31 + 0x30]
	0x03B8CD40 ADD X31, X31, 0x90
	0x03B8CD44 RET
	0x03B8CD48 MOV X0, X1
	0x03B8CD4C MOV X1, X31
	0x03B8CD50 B 0x1C16CB4
	0x03B8CD54 STP X30, X23, [X31 - 0x30]!
	0x03B8CD58 STP X22, X21, [X31 + 0x10]
	0x03B8CD5C STP X20, X19, [X31 + 0x20]
	0x03B8CD60 ADRP X20, 0x856000
	0x03B8CD64 ADRP X23, 0x5D0000
	0x03B8CD68 LDRB W8, [X20 + 0xB62]
	0x03B8CD6C LDR X23, [X23 + 0x288]
	0x03B8CD70 MOV X19, X0
	0x03B8CD74 TBNZ X8, 0x0, 0x3B8CDB0
	0x03B8CD78 ADRP X0, 0x58F000
	0x03B8CD7C LDR X0, [X0 + 0x848]
	0x03B8CD80 BL 0x1C16CF4
	0x03B8CD84 ADRP X0, 0x5D0000
	0x03B8CD88 LDR X0, [X0 + 0x2A0]
	0x03B8CD8C BL 0x1C16CF4
	0x03B8CD90 ADRP X0, 0x5D0000
	0x03B8CD94 LDR X0, [X0 + 0x288]
	0x03B8CD98 BL 0x1C16CF4
	0x03B8CD9C ADRP X0, 0x5D0000
	0x03B8CDA0 LDR X0, [X0 + 0x2A8]
	0x03B8CDA4 BL 0x1C16CF4
	0x03B8CDA8 MOVZ W8, 0x1
	0x03B8CDAC STRB W8, [X20 + 0xB62]
	0x03B8CDB0 LDR X8, [X23]
	0x03B8CDB4 LDR W9, [X8 + 0xE0]
	0x03B8CDB8 CBNZ W9, 0x3B8CDC8
	0x03B8CDBC MOV X0, X8
	0x03B8CDC0 BL 0x1C16DFC
	0x03B8CDC4 LDR X8, [X23]
	0x03B8CDC8 LDR X9, [X8 + 0xB8]
	0x03B8CDCC LDR X10, [X9]
	0x03B8CDD0 CBNZ X10, 0x3B8CE40
	0x03B8CDD4 LDR W10, [X8 + 0xE0]
	0x03B8CDD8 CBNZ W10, 0x3B8CDEC
	0x03B8CDDC MOV X0, X8
	0x03B8CDE0 BL 0x1C16DFC
	0x03B8CDE4 LDR X8, [X23]
	0x03B8CDE8 LDR X9, [X8 + 0xB8]
	0x03B8CDEC ADRP X8, 0x58F000
	0x03B8CDF0 LDR X20, [X9 + 0x8]
	0x03B8CDF4 LDR X8, [X8 + 0x848]
	0x03B8CDF8 LDR X0, [X8]
	0x03B8CDFC ADRP X8, 0x5D0000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+48], X26
	004 Move [X31+56], X25
	005 Move [X31+64], X24
	006 Move [X31+72], X23
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Move X26, 0x857000
	012 Move X25, 0x568000
	013 Move W8, [X26+2900]
	014 Move X25, [X25+1440]
	015 Move X19, X5
	016 Move X20, X4
	017 Move X22, X3
	018 Move X23, X2
	019 Move X24, X1
	020 Move X21, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x568000
	026 Move X0, [X0+1440]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X26+2900], W8
	030 Move X0, [X25]
	031 Move X1, X24
	032 Move [X31+24], X31
	033 Call 0x1C17E04
	034 Move X8, [X25]
	035 Move [X31], X0
	036 Move X1, X23
	037 Move X0, X8
	038 Call 0x1C17E04
	039 Move X8, [X25]
	040 Move [X31+8], X0
	041 Move X1, X22
	042 Move X0, X8
	043 Call 0x1C17E04
	044 Move [X31+16], X0
	045 Add X1, X31, 0
	046 Move X0, X21
	047 Move X2, X20
	048 Move X3, X19
	049 Call 0x1C17CB0
	050 Move X20, [X31+96]
	051 Move X19, [X31+104]
	052 Move X22, [X31+80]
	053 Move X21, [X31+88]
	054 Move X24, [X31+64]
	055 Move X23, [X31+72]
	056 Move X26, [X31+48]
	057 Move X25, [X31+56]
	058 Move X30, [X31+32]
	059 Add X31, X31, 112
	060 Return X0

Method: System.Void EndInvoke(System.IAsyncResult param_0)

Disassembly:
	0x03B8CE00 LDR X8, [X8 + 0x2A0]
	0x03B8CE04 LDR X21, [X8]
	0x03B8CE08 ADRP X8, 0x5D0000

ISIL:
	001 Move X0, X1
	002 Move X1, X31
	003 Call 0x1C17CB4
	004 Return 

