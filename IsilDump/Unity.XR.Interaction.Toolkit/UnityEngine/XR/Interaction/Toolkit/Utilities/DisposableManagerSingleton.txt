Type: UnityEngine.XR.Interaction.Toolkit.Utilities.DisposableManagerSingleton

Method: UnityEngine.XR.Interaction.Toolkit.Utilities.DisposableManagerSingleton get_instance()

Disassembly:
	0x03B8E774 ADRP X0, 0x5CD000

ISIL:
No ISIL was generated
Method: UnityEngine.XR.Interaction.Toolkit.Utilities.DisposableManagerSingleton Initialize()

Disassembly:
	0x03B8E778 LDR X0, [X0 + 0x778]
	0x03B8E77C BL 0x1C16CF4
	0x03B8E780 ADRP X0, 0x5CD000
	0x03B8E784 LDR X0, [X0 + 0x780]
	0x03B8E788 BL 0x1C16CF4
	0x03B8E78C ADRP X0, 0x5CD000
	0x03B8E790 LDR X0, [X0 + 0x788]
	0x03B8E794 BL 0x1C16CF4
	0x03B8E798 ADRP X0, 0x5CC000
	0x03B8E79C LDR X0, [X0 + 0x8D8]
	0x03B8E7A0 BL 0x1C16CF4
	0x03B8E7A4 ADRP X0, 0x5CD000
	0x03B8E7A8 LDR X0, [X0 + 0x798]
	0x03B8E7AC BL 0x1C16CF4
	0x03B8E7B0 ADRP X0, 0x565000
	0x03B8E7B4 LDR X0, [X0 + 0x598]
	0x03B8E7B8 BL 0x1C16CF4
	0x03B8E7BC MOVZ W8, 0x1
	0x03B8E7C0 STRB W8, [X21 + 0xB7A]
	0x03B8E7C4 STP X31, X31, [X31 + 0x20]
	0x03B8E7C8 STR X31, [X31 + 0x30]
	0x03B8E7CC CBZ X20, 0x3B8E9F0
	0x03B8E7D0 ADRP X10, 0x5CC000
	0x03B8E7D4 LDR X8, [X20]
	0x03B8E7D8 LDR X10, [X10 + 0x8D8]
	0x03B8E7DC LDRH W9, [X8 + 0x12E]
	0x03B8E7E0 LDR X1, [X10]
	0x03B8E7E4 CBZ X9, 0x3B8E808
	0x03B8E7E8 LDR X10, [X8 + 0xB0]
	0x03B8E7EC ADD X10, X10, 0x8
	0x03B8E7F0 LDUR X11, [X10 - 0x8]
	0x03B8E7F4 CMP X11, X1
	0x03B8E7F8 B.EQ 0x3B8E818
	0x03B8E7FC SUBS X9, X9, 0x1
	0x03B8E800 ADD X10, X10, 0x10
	0x03B8E804 B.NE 0x3B8E7F0
	0x03B8E808 MOVZ W2, 0x5
	0x03B8E80C MOV X0, X20
	0x03B8E810 BL 0x1C5C788
	0x03B8E814 B 0x3B8E828
	0x03B8E818 LDR W9, [X10]
	0x03B8E81C ADD W9, W9, 0x5
	0x03B8E820 ADD X8, X8, W9, 0x4, SXTW
	0x03B8E824 ADD X0, X8, 0x138
	0x03B8E828 LDP X8, X1, [X0]
	0x03B8E82C MOV X0, X20
	0x03B8E830 BLR X8
	0x03B8E834 CBZ X0, 0x3B8E9F0
	0x03B8E838 ADRP X8, 0x5CD000
	0x03B8E83C LDR X8, [X8 + 0x798]
	0x03B8E840 ADRP X25, 0x5CD000
	0x03B8E844 ADRP X26, 0x565000
	0x03B8E848 ADRP X22, 0x5CD000
	0x03B8E84C LDR X1, [X8]
	0x03B8E850 LDR X25, [X25 + 0x780]
	0x03B8E854 LDR X26, [X26 + 0x598]
	0x03B8E858 LDR X22, [X22 + 0x778]
	0x03B8E85C ADD X8, X31, 0x8
	0x03B8E860 BL 0x301CB58
	0x03B8E864 LDUR V0, [X31 + 0x8]
	0x03B8E868 LDR X8, [X31 + 0x18]
	0x03B8E86C ADRP X20, 0x5CE000
	0x03B8E870 LDR X20, [X20 + 0x3D0]
	0x03B8E874 MOVN W9, 0x80800000
	0x03B8E878 MOV W23, W31
	0x03B8E87C MOV X24, X31
	0x03B8E880 FMOV S11, W31
	0x03B8E884 ADRP X27, 0x854000
	0x03B8E888 MOVZ W28, 0x1
	0x03B8E88C FMOV S12, W31
	0x03B8E890 FMOV S13, W9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x855000
	006 Move X20, 0x5CF000
	007 Move X21, 0x566000
	008 Move W8, [X19+2928]
	009 Move X20, [X20+744]
	010 Move X21, [X21+1432]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x5CF000
	016 Move X0, [X0+744]
	017 Call 0x1C17CF4
	018 Move X0, 0x5CF000
	019 Move X0, [X0+752]
	020 Call 0x1C17CF4
	021 Move X0, 0x566000
	022 Move X0, [X0+2648]
	023 Call 0x1C17CF4
	024 Move X0, 0x566000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move X0, 0x5CF000
	028 Move X0, [X0+760]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X19+2928], W8
	032 Move X8, [X20]
	033 Move X0, [X21]
	034 Move X8, [X8+184]
	035 Move W9, [X0+224]
	036 Move X19, [X8]
	037 Compare W9, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Move X2, X31
	043 Call Object.op_Equality, X0, X1
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {76}
	048 Move X8, 0x566000
	049 Move X8, [X8+2648]
	050 Move X0, [X8]
	051 Call 0x1C17F10
	052 Move X8, 0x5CF000
	053 Move X8, [X8+760]
	054 Move X2, X31
	055 Move X19, X0
	056 Move X1, [X8]
	057 Call GameObject..ctor, X0, X1
	058 Move X0, [X21]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X19
	064 Move X1, X31
	065 Call Object.DontDestroyOnLoad, X0
	066 Compare X19, 0
	067 JumpIfEqual {84}
	068 Move X8, 0x5CF000
	069 Move X8, [X8+752]
	070 Move X0, X19
	071 Move X1, [X8]
	072 Call 0x21E61FC, X0
	073 Move X8, [X20]
	074 Move X8, [X8+184]
	075 Move [X8], X0
	076 Move X8, [X20]
	077 Move X20, [X31+16]
	078 Move X19, [X31+24]
	079 Move X8, [X8+184]
	080 Move X0, [X8]
	081 Move X30, [X31+32]
	082 Move X21, [X31+40]
	083 Return X0
	084 Call 0x1C17F20

Method: System.Void Awake()

Disassembly:
	0x03B8E894 STR V0, [X31 + 0x2]
	0x03B8E898 STR X8, [X31 + 0x30]
	0x03B8E89C FMOV S14, W31
	0x03B8E8A0 LDR X1, [X25]
	0x03B8E8A4 ADD X0, X31, 0x20
	0x03B8E8A8 BL 0x2BC4350
	0x03B8E8AC TBZ X0, 0x0, 0x3B8E998
	0x03B8E8B0 LDR X0, [X26]
	0x03B8E8B4 LDR X21, [X31 + 0x30]
	0x03B8E8B8 LDR W8, [X0 + 0xE0]
	0x03B8E8BC CBNZ W8, 0x3B8E8C4
	0x03B8E8C0 BL 0x1C16DFC
	0x03B8E8C4 MOV X0, X21
	0x03B8E8C8 MOV X1, X31
	0x03B8E8CC MOV X2, X31
	0x03B8E8D0 BL 0x3C3883C
	0x03B8E8D4 TBNZ X0, 0x0, 0x3B8E8A0
	0x03B8E8D8 CBZ X21, 0x3B8E9E4
	0x03B8E8DC MOV X0, X21
	0x03B8E8E0 MOV X1, X31
	0x03B8E8E4 BL 0x3C32ECC
	0x03B8E8E8 CBZ X0, 0x3B8E9E8
	0x03B8E8EC MOV X1, X31
	0x03B8E8F0 BL 0x3C35834
	0x03B8E8F4 TBZ X0, 0x0, 0x3B8E8A0
	0x03B8E8F8 MOV X0, X21
	0x03B8E8FC MOV X1, X31
	0x03B8E900 BL 0x3C8F70C
	0x03B8E904 TBZ X0, 0x0, 0x3B8E8A0
	0x03B8E908 MOV X0, X21
	0x03B8E90C MOV X1, X31
	0x03B8E910 BL 0x3C8F78C
	0x03B8E914 TBZ X0, 0x0, 0x3B8E93C
	0x03B8E918 LDRB W8, [X27 + 0xBFA]
	0x03B8E91C CBNZ W8, 0x3B8E92C
	0x03B8E920 MOV X0, X20
	0x03B8E924 BL 0x1C16CF4
	0x03B8E928 STRB W28, [X27 + 0xBFA]
	0x03B8E92C LDR X8, [X20]
	0x03B8E930 LDR X8, [X8 + 0xB8]
	0x03B8E934 LDRB W8, [X8]
	0x03B8E938 CBZ W8, 0x3B8E8A0
	0x03B8E93C MOV X0, X21
	0x03B8E940 MOV X1, X31
	0x03B8E944 BL 0x3C32E90
	0x03B8E948 CBZ X0, 0x3B8E9EC
	0x03B8E94C MOV X1, X31
	0x03B8E950 BL 0x3C3F58C
	0x03B8E954 FSUB S3, S10, S0
	0x03B8E958 FSUB S4, S9, S1
	0x03B8E95C FSUB S5, S8, S2
	0x03B8E960 FMUL S3, S3, S3
	0x03B8E964 FMUL S4, S4, S4
	0x03B8E968 FADD S3, S3, S4
	0x03B8E96C FMUL S4, S5, S5
	0x03B8E970 FADD S3, S4, S3
	0x03B8E974 FCMP S3, S13
	0x03B8E978 B.GE 0x3B8E8A0
	0x03B8E97C MOVZ W23, 0x1
	0x03B8E980 MOV V11.16B, V2.16B
	0x03B8E984 MOV V12.16B, V1.16B
	0x03B8E988 MOV V14.16B, V0.16B
	0x03B8E98C MOV X24, X21
	0x03B8E990 MOV V13.16B, V3.16B
	0x03B8E994 B 0x3B8E8A0
	0x03B8E998 LDR X1, [X22]
	0x03B8E99C ADD X0, X31, 0x20
	0x03B8E9A0 BL 0x2BC434C
	0x03B8E9A4 STP S14, S12, [X19]
	0x03B8E9A8 STP S11, S13, [X19 + 0x8]
	0x03B8E9AC AND W0, W23, 0x1
	0x03B8E9B0 STR X24, [X19 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x855000
	007 Move X21, 0x5CF000
	008 Move X22, 0x566000
	009 Move W8, [X20+2929]
	010 Move X21, [X21+744]
	011 Move X22, [X22+1432]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x5CF000
	018 Move X0, [X0+744]
	019 Call 0x1C17CF4
	020 Move X0, 0x566000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+2929], W8
	025 Move X8, [X21]
	026 Move X0, [X22]
	027 Move X8, [X8+184]
	028 Move W9, [X0+224]
	029 Move X20, [X8]
	030 Compare W9, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X20
	034 Move X1, X31
	035 Move X2, X31
	036 Call Object.op_Inequality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {71}
	041 Move X8, [X21]
	042 Move X0, [X22]
	043 Move X8, [X8+184]
	044 Move W9, [X0+224]
	045 Move X20, [X8]
	046 Compare W9, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X0, X20
	050 Move X1, X19
	051 Move X2, X31
	052 Call Object.op_Inequality, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {71}
	057 Move X0, [X22]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X19
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X1, X31
	068 Move X30, [X31+48]
	069 Call Object.Destroy, X0
	070 Return 
	071 Move X8, [X21]
	072 Move X0, [X22]
	073 Move X8, [X8+184]
	074 Move W9, [X0+224]
	075 Move X20, [X8]
	076 Compare W9, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X0, X20
	080 Move X1, X31
	081 Move X2, X31
	082 Call Object.op_Equality, X0, X1
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {90}
	087 Move X8, [X21]
	088 Move X8, [X8+184]
	089 Move [X8], X19
	090 Move X20, [X31+32]
	091 Move X19, [X31+40]
	092 Move X22, [X31+16]
	093 Move X21, [X31+24]
	094 Move X30, [X31+48]
	095 Return 

Method: System.Void OnDestroy()

Disassembly:
	0x03B8E9B4 LDP X20, X19, [X31 + 0xC0]

ISIL:
No ISIL was generated
Method: System.Void OnApplicationQuit()

Disassembly:
	0x03B8EBA0 ADRP X25, 0x5CD000

ISIL:
	001 Call DisposableManagerSingleton.DisposeAll, X0
	002 Return 

Method: System.Void DisposeAll()

Disassembly:
	0x03B8E9B8 LDP X22, X21, [X31 + 0xB0]
	0x03B8E9BC LDP X24, X23, [X31 + 0xA0]
	0x03B8E9C0 LDP X26, X25, [X31 + 0x90]
	0x03B8E9C4 LDP X28, X27, [X31 + 0x80]
	0x03B8E9C8 LDR X30, [X31 + 0x78]
	0x03B8E9CC LDP D9, D8, [X31 + 0x68]
	0x03B8E9D0 LDP D11, D10, [X31 + 0x58]
	0x03B8E9D4 LDP D13, D12, [X31 + 0x48]
	0x03B8E9D8 LDR V14, [X31 + 0x40]
	0x03B8E9DC ADD X31, X31, 0xD0
	0x03B8E9E0 RET
	0x03B8E9E4 BL 0x1C16F20
	0x03B8E9E8 BL 0x1C16F20
	0x03B8E9EC BL 0x1C16F20
	0x03B8E9F0 BL 0x1C16F20
	0x03B8E9F4 B 0x3B8EA24
	0x03B8E9F8 B 0x3B8EA24
	0x03B8E9FC B 0x3B8EA24
	0x03B8EA00 B 0x3B8EA24
	0x03B8EA04 B 0x3B8EA24
	0x03B8EA08 B 0x3B8EA24
	0x03B8EA0C B 0x3B8EA24
	0x03B8EA10 B 0x3B8EA24
	0x03B8EA14 B 0x3B8EA24
	0x03B8EA18 B 0x3B8EA24
	0x03B8EA1C B 0x3B8EA24
	0x03B8EA20 B 0x3B8EA24
	0x03B8EA24 MOV X20, X0
	0x03B8EA28 CMP W1, 0x1
	0x03B8EA2C B.NE 0x3B8EA58
	0x03B8EA30 MOV X0, X20
	0x03B8EA34 BL 0x3EB1AD0
	0x03B8EA38 LDR X21, [X0]
	0x03B8EA3C BL 0x3EB1AE0
	0x03B8EA40 LDR X1, [X22]
	0x03B8EA44 ADD X0, X31, 0x20
	0x03B8EA48 BL 0x2BC434C
	0x03B8EA4C CBZ X21, 0x3B8E9A4
	0x03B8EA50 MOV X0, X21
	0x03B8EA54 BL 0x1C16F18
	0x03B8EA58 MOV X21, X31
	0x03B8EA5C B 0x3B8EA64
	0x03B8EA60 MOV X20, X0
	0x03B8EA64 LDR X1, [X22]
	0x03B8EA68 ADD X0, X31, 0x20
	0x03B8EA6C BL 0x2BC434C
	0x03B8EA70 CBNZ X21, 0x3B8EA7C
	0x03B8EA74 MOV X0, X20
	0x03B8EA78 BL 0x1D2C690
	0x03B8EA7C MOV X0, X21
	0x03B8EA80 BL 0x1C16F18
	0x03B8EA84 BL 0x1990590
	0x03B8EA88 SUB X31, X31, 0xD0
	0x03B8EA8C STR D14, [X31 + 0x40]
	0x03B8EA90 STP D13, D12, [X31 + 0x48]
	0x03B8EA94 STP D11, D10, [X31 + 0x58]
	0x03B8EA98 STP D9, D8, [X31 + 0x68]
	0x03B8EA9C STR X30, [X31 + 0x78]
	0x03B8EAA0 STP X28, X27, [X31 + 0x80]
	0x03B8EAA4 STP X26, X25, [X31 + 0x90]
	0x03B8EAA8 STP X24, X23, [X31 + 0xA0]
	0x03B8EAAC STP X22, X21, [X31 + 0xB0]
	0x03B8EAB0 STP X20, X19, [X31 + 0xC0]
	0x03B8EAB4 ADRP X21, 0x854000
	0x03B8EAB8 LDRB W8, [X21 + 0xB7B]
	0x03B8EABC MOV X19, X1
	0x03B8EAC0 MOV V8.16B, V2.16B
	0x03B8EAC4 MOV V9.16B, V1.16B
	0x03B8EAC8 MOV V10.16B, V0.16B
	0x03B8EACC MOV X20, X0
	0x03B8EAD0 TBNZ X8, 0x0, 0x3B8EB24
	0x03B8EAD4 ADRP X0, 0x5CD000
	0x03B8EAD8 LDR X0, [X0 + 0x778]
	0x03B8EADC BL 0x1C16CF4
	0x03B8EAE0 ADRP X0, 0x5CD000
	0x03B8EAE4 LDR X0, [X0 + 0x780]
	0x03B8EAE8 BL 0x1C16CF4
	0x03B8EAEC ADRP X0, 0x5CD000
	0x03B8EAF0 LDR X0, [X0 + 0x788]
	0x03B8EAF4 BL 0x1C16CF4
	0x03B8EAF8 ADRP X0, 0x5CC000
	0x03B8EAFC LDR X0, [X0 + 0x8D8]
	0x03B8EB00 BL 0x1C16CF4
	0x03B8EB04 ADRP X0, 0x5CD000
	0x03B8EB08 LDR X0, [X0 + 0x798]
	0x03B8EB0C BL 0x1C16CF4
	0x03B8EB10 ADRP X0, 0x565000
	0x03B8EB14 LDR X0, [X0 + 0x598]
	0x03B8EB18 BL 0x1C16CF4
	0x03B8EB1C MOVZ W8, 0x1
	0x03B8EB20 STRB W8, [X21 + 0xB7B]
	0x03B8EB24 STP X31, X31, [X31 + 0x20]
	0x03B8EB28 STR X31, [X31 + 0x30]
	0x03B8EB2C CBZ X20, 0x3B8ED4C
	0x03B8EB30 ADRP X10, 0x5CC000
	0x03B8EB34 LDR X8, [X20]
	0x03B8EB38 LDR X10, [X10 + 0x8D8]
	0x03B8EB3C LDRH W9, [X8 + 0x12E]
	0x03B8EB40 LDR X1, [X10]
	0x03B8EB44 CBZ X9, 0x3B8EB68
	0x03B8EB48 LDR X10, [X8 + 0xB0]
	0x03B8EB4C ADD X10, X10, 0x8
	0x03B8EB50 LDUR X11, [X10 - 0x8]
	0x03B8EB54 CMP X11, X1
	0x03B8EB58 B.EQ 0x3B8EB78
	0x03B8EB5C SUBS X9, X9, 0x1
	0x03B8EB60 ADD X10, X10, 0x10
	0x03B8EB64 B.NE 0x3B8EB50
	0x03B8EB68 MOVZ W2, 0x5
	0x03B8EB6C MOV X0, X20
	0x03B8EB70 BL 0x1C5C788
	0x03B8EB74 B 0x3B8EB88
	0x03B8EB78 LDR W9, [X10]
	0x03B8EB7C ADD W9, W9, 0x5
	0x03B8EB80 ADD X8, X8, W9, 0x4, SXTW
	0x03B8EB84 ADD X0, X8, 0x138
	0x03B8EB88 LDP X8, X1, [X0]
	0x03B8EB8C MOV X0, X20
	0x03B8EB90 BLR X8
	0x03B8EB94 CBZ X0, 0x3B8ED4C
	0x03B8EB98 ADRP X8, 0x5CD000
	0x03B8EB9C LDR X8, [X8 + 0x798]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x855000
	011 Move W8, [X20+2930]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0x5CF000
	018 Move X0, [X0+768]
	019 Call 0x1C17CF4
	020 Move X0, 0x5CF000
	021 Move X0, [X0+776]
	022 Call 0x1C17CF4
	023 Move X0, 0x566000
	024 Move X0, [X0+3584]
	025 Call 0x1C17CF4
	026 Move X0, 0x5CF000
	027 Move X0, [X0+784]
	028 Call 0x1C17CF4
	029 Move X0, 0x5CF000
	030 Move X0, [X0+792]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+2930], W8
	034 Move X8, [X19+32]
	035 Compare X8, 0
	036 JumpIfEqual {133}
	037 Move X20, [X8+16]
	038 Compare X20, 0
	039 JumpIfEqual {133}
	040 Move X24, 0x5CF000
	041 Move X25, 0x5CF000
	042 Move X26, 0x566000
	043 Move X23, 0x5CF000
	044 Move X24, [X24+784]
	045 Move X25, [X25+792]
	046 Move X26, [X26+3584]
	047 Move X23, [X23+776]
	048 Move W21, W31
	049 Move X8, [X20]
	050 Move X1, [X24]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Compare X9, 0
	053 JumpIfEqual {60}
	054 Move X10, [X8+176]
	055 Add X10, X10, 8
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Subtract X9, X9, 1
	059 Add X10, X10, 16
	060 Move X0, X20
	061 Move W2, W31
	062 Call 0x1C5D788
	063 NotImplemented "Instruction LDRSW not yet implemented."
	064 Add X8, X8, X9
	065 Add X0, X8, 312
	066 Move X8, [X0]
	067 Move X1, [X0+8]
	068 Move X0, X20
	069 NotImplemented "Instruction BLR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X20]
	072 Move X1, [X25]
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 Compare X9, 0
	075 JumpIfEqual {82}
	076 Move X10, [X8+176]
	077 Add X10, X10, 8
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Subtract X9, X9, 1
	081 Add X10, X10, 16
	082 Move X0, X20
	083 Move W2, W31
	084 Call 0x1C5D788
	085 NotImplemented "Instruction LDRSW not yet implemented."
	086 Add X8, X8, X9
	087 Add X0, X8, 312
	088 Move X8, [X0]
	089 Move X2, [X0+8]
	090 Move X0, X20
	091 Move W1, W21
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Compare X0, 0
	094 JumpIfEqual {133}
	095 Move X8, [X0]
	096 Move X1, [X26]
	097 Move X22, X0
	098 NotImplemented "Instruction LDRH not yet implemented."
	099 Compare X9, 0
	100 JumpIfEqual {107}
	101 Move X10, [X8+176]
	102 Add X10, X10, 8
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Subtract X9, X9, 1
	106 Add X10, X10, 16
	107 Move X0, X22
	108 Move W2, W31
	109 Call 0x1C5D788
	110 NotImplemented "Instruction LDRSW not yet implemented."
	111 Add X8, X8, X9
	112 Add X0, X8, 312
	113 Move X8, [X0]
	114 Move X1, [X0+8]
	115 Move X0, X22
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Add W21, W21, 1
	118 Move X0, [X19+32]
	119 Compare X0, 0
	120 JumpIfEqual {133}
	121 Move X1, [X23]
	122 Move X20, [X31+64]
	123 Move X19, [X31+72]
	124 Move X22, [X31+48]
	125 Move X21, [X31+56]
	126 Move X24, [X31+32]
	127 Move X23, [X31+40]
	128 Move X26, [X31+16]
	129 Move X25, [X31+24]
	130 Move X30, [X31+80]
	131 Call 0x2D590EC, X0
	132 Return 
	133 Call 0x1C17F20

Method: System.Void RegisterDisposable(System.IDisposable disposableToRegister)

Disassembly:
	0x03B8EBA4 ADRP X26, 0x565000
	0x03B8EBA8 ADRP X22, 0x5CD000
	0x03B8EBAC LDR X1, [X8]
	0x03B8EBB0 LDR X25, [X25 + 0x780]
	0x03B8EBB4 LDR X26, [X26 + 0x598]
	0x03B8EBB8 LDR X22, [X22 + 0x778]
	0x03B8EBBC ADD X8, X31, 0x8
	0x03B8EBC0 BL 0x301CB58
	0x03B8EBC4 LDUR V0, [X31 + 0x8]
	0x03B8EBC8 LDR X8, [X31 + 0x18]
	0x03B8EBCC ADRP X20, 0x5CE000
	0x03B8EBD0 LDR X20, [X20 + 0x3D0]
	0x03B8EBD4 MOVN W9, 0x80800000
	0x03B8EBD8 MOV W23, W31
	0x03B8EBDC MOV X24, X31
	0x03B8EBE0 FMOV S11, W31
	0x03B8EBE4 ADRP X27, 0x854000
	0x03B8EBE8 MOVZ W28, 0x1
	0x03B8EBEC FMOV S12, W31
	0x03B8EBF0 FMOV S13, W9
	0x03B8EBF4 STR V0, [X31 + 0x2]
	0x03B8EBF8 STR X8, [X31 + 0x30]
	0x03B8EBFC FMOV S14, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x855000
	005 Move W8, [X20+2931]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x5CF000
	012 Move X0, [X0+800]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2931], W8
	016 Call DisposableManagerSingleton.Initialize
	017 Compare X0, 0
	018 JumpIfEqual {31}
	019 Move X0, [X0+32]
	020 Compare X0, 0
	021 JumpIfEqual {31}
	022 Move X8, 0x5CF000
	023 Move X8, [X8+800]
	024 Move X1, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X2, [X8]
	028 Move X30, [X31+32]
	029 Call 0x2D58DD8, X0, X1
	030 Return 
	031 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03B8EC00 LDR X1, [X25]
	0x03B8EC04 ADD X0, X31, 0x20
	0x03B8EC08 BL 0x2BC4350
	0x03B8EC0C TBZ X0, 0x0, 0x3B8ECF8
	0x03B8EC10 LDR X0, [X26]
	0x03B8EC14 LDR X21, [X31 + 0x30]
	0x03B8EC18 LDR W8, [X0 + 0xE0]
	0x03B8EC1C CBNZ W8, 0x3B8EC24
	0x03B8EC20 BL 0x1C16DFC
	0x03B8EC24 MOV X0, X21
	0x03B8EC28 MOV X1, X31
	0x03B8EC2C MOV X2, X31
	0x03B8EC30 BL 0x3C3883C
	0x03B8EC34 TBNZ X0, 0x0, 0x3B8EC00
	0x03B8EC38 CBZ X21, 0x3B8ED44
	0x03B8EC3C MOV X0, X21
	0x03B8EC40 MOV X1, X31
	0x03B8EC44 BL 0x3C32ECC
	0x03B8EC48 CBZ X0, 0x3B8ED48
	0x03B8EC4C MOV X1, X31
	0x03B8EC50 BL 0x3C35834
	0x03B8EC54 TBZ X0, 0x0, 0x3B8EC00
	0x03B8EC58 MOV X0, X21
	0x03B8EC5C MOV X1, X31
	0x03B8EC60 BL 0x3C8F70C
	0x03B8EC64 TBZ X0, 0x0, 0x3B8EC00
	0x03B8EC68 MOV X0, X21
	0x03B8EC6C MOV X1, X31
	0x03B8EC70 BL 0x3C8F78C
	0x03B8EC74 TBZ X0, 0x0, 0x3B8EC9C
	0x03B8EC78 LDRB W8, [X27 + 0xBFA]
	0x03B8EC7C CBNZ W8, 0x3B8EC8C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x855000
	007 Move X22, 0x5CF000
	008 Move X20, 0x5CF000
	009 Move W8, [X21+2932]
	010 Move X22, [X22+808]
	011 Move X20, [X20+816]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x5CF000
	018 Move X0, [X0+816]
	019 Call 0x1C17CF4
	020 Move X0, 0x5CF000
	021 Move X0, [X0+808]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2932], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X2, [X20]
	028 Move W1, W31
	029 Move X20, X0
	030 Call 0x2D58B9C, X0, X1
	031 Move [X19+32], X20
	032 Move X0, X19
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X1, X31
	038 Move X30, [X31+48]
	039 Call MonoBehaviour..ctor, X0
	040 Return 

