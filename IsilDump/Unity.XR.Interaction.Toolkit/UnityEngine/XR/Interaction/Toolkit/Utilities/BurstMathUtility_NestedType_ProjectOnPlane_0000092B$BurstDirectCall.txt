Type: UnityEngine.XR.Interaction.Toolkit.Utilities.BurstMathUtility/ProjectOnPlane_0000092B$BurstDirectCall

Method: System.Void GetFunctionPointerDiscard(ref System.IntPtr param_0)

Disassembly:
	0x03B8AC0C LDR X9, [X8 + 0xB8]
	0x03B8AC10 STR X0, [X9]
	0x03B8AC14 LDR W9, [X8 + 0xE0]
	0x03B8AC18 CBNZ W9, 0x3B8AC28
	0x03B8AC1C MOV X0, X8
	0x03B8AC20 BL 0x1C16DFC
	0x03B8AC24 LDR X8, [X23]
	0x03B8AC28 LDR X8, [X8 + 0xB8]
	0x03B8AC2C LDP X22, X21, [X31 + 0x10]
	0x03B8AC30 LDR X8, [X8]
	0x03B8AC34 STR X8, [X19]
	0x03B8AC38 LDP X20, X19, [X31 + 0x20]
	0x03B8AC3C LDP X30, X23, [X31], #0x30
	0x03B8AC40 RET
	0x03B8AC44 STR X30, [X31 - 0x20]!
	0x03B8AC48 STP X20, X19, [X31 + 0x10]
	0x03B8AC4C ADRP X20, 0x858000
	0x03B8AC50 ADRP X19, 0x5D2000
	0x03B8AC54 LDRB W8, [X20 + 0xB3D]
	0x03B8AC58 LDR X19, [X19 + 0xD0]
	0x03B8AC5C TBNZ X8, 0x0, 0x3B8AC74
	0x03B8AC60 ADRP X0, 0x5D2000
	0x03B8AC64 LDR X0, [X0 + 0xD0]
	0x03B8AC68 BL 0x1C16CF4
	0x03B8AC6C MOVZ W8, 0x1
	0x03B8AC70 STRB W8, [X20 + 0xB3D]
	0x03B8AC74 LDR X0, [X19]
	0x03B8AC78 STR X31, [X31 + 0x8]
	0x03B8AC7C LDR W8, [X0 + 0xE0]
	0x03B8AC80 CBNZ W8, 0x3B8AC88
	0x03B8AC84 BL 0x1C16DFC
	0x03B8AC88 ADD X0, X31, 0x8
	0x03B8AC8C BL 0x3B8AB28
	0x03B8AC90 LDR X0, [X31 + 0x8]
	0x03B8AC94 LDP X20, X19, [X31 + 0x10]
	0x03B8AC98 LDR X30, [X31], #0x20
	0x03B8AC9C RET
	0x03B8ACA0 STP X30, X21, [X31 - 0x20]!
	0x03B8ACA4 STP X20, X19, [X31 + 0x10]
	0x03B8ACA8 ADRP X21, 0x858000
	0x03B8ACAC ADRP X19, 0x5D2000
	0x03B8ACB0 ADRP X20, 0x591000
	0x03B8ACB4 LDRB W8, [X21 + 0xB3E]
	0x03B8ACB8 LDR X19, [X19 + 0x1F0]
	0x03B8ACBC LDR X20, [X20 + 0x848]
	0x03B8ACC0 TBNZ X8, 0x0, 0x3B8ACF0
	0x03B8ACC4 ADRP X0, 0x591000
	0x03B8ACC8 LDR X0, [X0 + 0x848]
	0x03B8ACCC BL 0x1C16CF4
	0x03B8ACD0 ADRP X0, 0x5D2000
	0x03B8ACD4 LDR X0, [X0 + 0x1F0]
	0x03B8ACD8 BL 0x1C16CF4
	0x03B8ACDC ADRP X0, 0x5D2000
	0x03B8ACE0 LDR X0, [X0 + 0xD0]
	0x03B8ACE4 BL 0x1C16CF4
	0x03B8ACE8 MOVZ W8, 0x1
	0x03B8ACEC STRB W8, [X21 + 0xB3E]
	0x03B8ACF0 LDR X0, [X20]
	0x03B8ACF4 ADRP X20, 0x5D2000
	0x03B8ACF8 LDR X19, [X19]
	0x03B8ACFC LDR W8, [X0 + 0xE0]
	0x03B8AD00 LDR X20, [X20 + 0xD0]
	0x03B8AD04 CBNZ W8, 0x3B8AD0C
	0x03B8AD08 BL 0x1C16DFC
	0x03B8AD0C MOV X0, X19
	0x03B8AD10 MOV X1, X31
	0x03B8AD14 BL 0x36FA754
	0x03B8AD18 LDR X8, [X20]
	0x03B8AD1C MOV X19, X0
	0x03B8AD20 LDR W9, [X8 + 0xE0]
	0x03B8AD24 CBNZ W9, 0x3B8AD34

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x859000
	008 Move X23, 0x5D3000
	009 Move W8, [X20+2856]
	010 Move X23, [X23+176]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x592000
	017 Move X0, [X0+2120]
	018 Call 0x1C17CF4
	019 Move X0, 0x5D3000
	020 Move X0, [X0+384]
	021 Call 0x1C17CF4
	022 Move X0, 0x5D3000
	023 Move X0, [X0+176]
	024 Call 0x1C17CF4
	025 Move X0, 0x5D3000
	026 Move X0, [X0+392]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+2856], W8
	030 Move X8, [X23]
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {37}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X8, [X23]
	037 Move X9, [X8+184]
	038 Move X10, [X9]
	039 Compare X10, 0
	040 JumpIfNotEqual {70}
	041 Move W10, [X8+224]
	042 Compare W10, 0
	043 JumpIfNotEqual {48}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X8, [X23]
	047 Move X9, [X8+184]
	048 Move X8, 0x592000
	049 Move X20, [X9+8]
	050 Move X8, [X8+2120]
	051 Move X0, [X8]
	052 Move X8, 0x5D3000
	053 Move X8, [X8+384]
	054 Move X21, [X8]
	055 Move X8, 0x5D3000
	056 Move X8, [X8+392]
	057 Move W9, [X0+224]
	058 Move X22, [X8]
	059 Compare W9, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X21
	064 Move X2, X22
	065 Move X3, X31
	066 Call BurstCompiler.GetILPPMethodFunctionPointer2, X0, X1, X2
	067 Move X8, [X23]
	068 Move X9, [X8+184]
	069 Move [X9], X0
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {76}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move X8, [X23]
	076 Move X8, [X8+184]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X8, [X8]
	080 Move [X19], X8
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X30, [X31+48]
	084 Move X23, [X31+56]
	085 Return 

Method: System.IntPtr GetFunctionPointer()

Disassembly:
	0x03B8AD28 MOV X0, X8
	0x03B8AD2C BL 0x1C16DFC
	0x03B8AD30 LDR X8, [X20]
	0x03B8AD34 LDR X8, [X8 + 0xB8]
	0x03B8AD38 STR X19, [X8 + 0x8]
	0x03B8AD3C LDP X20, X19, [X31 + 0x10]
	0x03B8AD40 LDP X30, X21, [X31], #0x20
	0x03B8AD44 RET
	0x03B8AD48 RET
	0x03B8AD4C B 0x3B8ACA0
	0x03B8AD50 STP X30, X21, [X31 - 0x20]!
	0x03B8AD54 STP X20, X19, [X31 + 0x10]
	0x03B8AD58 LDR X8, [X2 + 0x8]
	0x03B8AD5C STP X1, X2, [X0 + 0x20]
	0x03B8AD60 MOV X19, X0
	0x03B8AD64 MOV X20, X1
	0x03B8AD68 STR X8, [X0 + 0x10]
	0x03B8AD6C LDRB W21, [X2 + 0x52]
	0x03B8AD70 STR X0, [X0 + 0x40]
	0x03B8AD74 MOV X0, X2
	0x03B8AD78 BL 0x1C16D84
	0x03B8AD7C TBZ X0, 0x0, 0x3B8AD94
	0x03B8AD80 CMP W21, 0x3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x859000
	005 Move X19, 0x5D3000
	006 Move W8, [X20+2857]
	007 Move X19, [X19+176]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x5D3000
	013 Move X0, [X0+176]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2857], W8
	017 Move X0, [X19]
	018 Move [X31+8], X31
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Add X0, X31, 8
	024 Call ProjectOnPlane_0000092B$BurstDirectCall.GetFunctionPointerDiscard, X0
	025 Move X0, [X31+8]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Void Constructor()

Disassembly:
	0x03B8AD84 B.NE 0x3B8ADB0
	0x03B8AD88 ADRP X8, 0xFFFFFFFFFE074000
	0x03B8AD8C ADD X8, X8, 0x540
	0x03B8AD90 B 0x3B8ADA4
	0x03B8AD94 CMP W21, 0x2
	0x03B8AD98 B.NE 0x3B8ADAC
	0x03B8AD9C ADRP X8, 0xFFFFFFFFFE074000
	0x03B8ADA0 ADD X8, X8, 0x52C
	0x03B8ADA4 STR X8, [X19 + 0x18]
	0x03B8ADA8 B 0x3B8ADC0
	0x03B8ADAC CBZ X20, 0x3B8ADD8
	0x03B8ADB0 LDR X8, [X19 + 0x10]
	0x03B8ADB4 LDR X9, [X19 + 0x20]
	0x03B8ADB8 STR X8, [X19 + 0x18]
	0x03B8ADBC STR X9, [X19 + 0x40]
	0x03B8ADC0 ADRP X8, 0xFFFFFFFFFE074000
	0x03B8ADC4 ADD X8, X8, 0x4B8
	0x03B8ADC8 STR X8, [X19 + 0x38]
	0x03B8ADCC LDP X20, X19, [X31 + 0x10]
	0x03B8ADD0 LDP X30, X21, [X31], #0x20
	0x03B8ADD4 RET
	0x03B8ADD8 ADRP X1, 0xFFFFFFFFFCF91000
	0x03B8ADDC ADD X1, X1, 0xEE3
	0x03B8ADE0 MOV X0, X31
	0x03B8ADE4 BL 0x1C16F3C
	0x03B8ADE8 MOV X1, X31
	0x03B8ADEC BL 0x1C16DEC
	0x03B8ADF0 LDR X8, [X0 + 0x40]
	0x03B8ADF4 LDR X4, [X0 + 0x18]
	0x03B8ADF8 LDR X3, [X0 + 0x28]
	0x03B8ADFC MOV X0, X8
	0x03B8AE00 BR X4
	0x03B8AE04 SUB X31, X31, 0x70
	0x03B8AE08 STR X30, [X31 + 0x20]
	0x03B8AE0C STP X26, X25, [X31 + 0x30]
	0x03B8AE10 STP X24, X23, [X31 + 0x40]
	0x03B8AE14 STP X22, X21, [X31 + 0x50]
	0x03B8AE18 STP X20, X19, [X31 + 0x60]
	0x03B8AE1C ADRP X26, 0x858000
	0x03B8AE20 STR S0, [X31 + 0x2C]
	0x03B8AE24 ADRP X25, 0x569000
	0x03B8AE28 ADRP X24, 0x569000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x859000
	006 Move X19, 0x5D3000
	007 Move X20, 0x592000
	008 Move W8, [X21+2858]
	009 Move X19, [X19+400]
	010 Move X20, [X20+2120]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x592000
	016 Move X0, [X0+2120]
	017 Call 0x1C17CF4
	018 Move X0, 0x5D3000
	019 Move X0, [X0+400]
	020 Call 0x1C17CF4
	021 Move X0, 0x5D3000
	022 Move X0, [X0+176]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2858], W8
	026 Move X0, [X20]
	027 Move X20, 0x5D3000
	028 Move X19, [X19]
	029 Move W8, [X0+224]
	030 Move X20, [X20+176]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X31
	036 Call BurstCompiler.CompileILPPMethod2, X0
	037 Move X8, [X20]
	038 Move X19, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {45}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X8, [X20]
	045 Move X8, [X8+184]
	046 Move [X8+8], X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 

Method: System.Void Initialize()

Disassembly:
	0x03B8AE2C LDRB W8, [X26 + 0xB40]

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x03B8AE30 LDR X25, [X25 + 0x5A0]

ISIL:
	001 Call ProjectOnPlane_0000092B$BurstDirectCall.Constructor
	002 Return 

Method: System.Void Invoke(in UnityEngine.Vector3 vector, in UnityEngine.Vector3 planeNormal, out UnityEngine.Vector3 projectedVector)

Disassembly:
	0x03B88090 MOV X1, X19
	0x03B88094 LDP X20, X19, [X31 + 0x20]
	0x03B88098 LDP X22, X21, [X31 + 0x10]
	0x03B8809C LDR X30, [X31], #0x30
	0x03B880A0 BR X2
	0x03B880A4 LDP S0, S2, [X20]
	0x03B880A8 LDR V1, [X20 + 0x8]
	0x03B880AC FABS S5, S0
	0x03B880B0 FABS S3, S2
	0x03B880B4 FCMP S5, S3
	0x03B880B8 FABS S4, S1
	0x03B880BC B.PL 0x3B880F0
	0x03B880C0 FCMP S5, S4
	0x03B880C4 B.PL 0x3B880F0
	0x03B880C8 FMOV S3, W31
	0x03B880CC FMUL S0, S0, S3
	0x03B880D0 FMUL S4, S2, S3
	0x03B880D4 FMUL S3, S1, S3
	0x03B880D8 FSUB S2, S0, S2
	0x03B880DC FSUB S3, S4, S3
	0x03B880E0 FSUB S0, S1, S0
	0x03B880E4 STP S3, S0, [X19]
	0x03B880E8 STR S2, [X19 + 0x8]
	0x03B880EC B 0x3B88144
	0x03B880F0 FCMP S4, S3
	0x03B880F4 B.LE 0x3B88120
	0x03B880F8 FMOV S3, W31
	0x03B880FC FMUL S2, S2, S3
	0x03B88100 FMUL S4, S1, S3
	0x03B88104 FMUL S3, S0, S3
	0x03B88108 FSUB S0, S0, S2
	0x03B8810C FSUB S1, S2, S1
	0x03B88110 FSUB S2, S4, S3
	0x03B88114 STP S1, S2, [X19]
	0x03B88118 STR S0, [X19 + 0x8]
	0x03B8811C B 0x3B88144
	0x03B88120 FMOV S3, W31
	0x03B88124 FMUL S4, S0, S3
	0x03B88128 FMUL S1, S1, S3
	0x03B8812C FMUL S3, S2, S3
	0x03B88130 FSUB S3, S4, S3
	0x03B88134 FSUB S2, S2, S1
	0x03B88138 FSUB S0, S1, S0
	0x03B8813C STP S2, S0, [X19]
	0x03B88140 STR S3, [X19 + 0x8]
	0x03B88144 LDP X20, X19, [X31 + 0x20]
	0x03B88148 LDP X22, X21, [X31 + 0x10]
	0x03B8814C LDR X30, [X31], #0x30
	0x03B88150 RET
	0x03B88154 SUB X31, X31, 0x50
	0x03B88158 STR X30, [X31 + 0x30]
	0x03B8815C STP X20, X19, [X31 + 0x40]
	0x03B88160 STR W31, [X31 + 0x28]
	0x03B88164 STR X31, [X31 + 0x20]
	0x03B88168 LDP S0, S1, [X0]
	0x03B8816C LDR V2, [X0 + 0x8]
	0x03B88170 MOV X0, X31
	0x03B88174 MOV X19, X2
	0x03B88178 MOV X20, X1
	0x03B8817C BL 0x3887BE4
	0x03B88180 STP S0, S1, [X31 + 0x10]
	0x03B88184 STR S2, [X31 + 0x18]
	0x03B88188 LDP S0, S1, [X20]
	0x03B8818C LDR V2, [X20 + 0x8]
	0x03B88190 MOV X0, X31
	0x03B88194 BL 0x3887BE4
	0x03B88198 ADD X0, X31, 0x10
	0x03B8819C ADD X1, X31, 0x0
	0x03B881A0 ADD X2, X31, 0x20
	0x03B881A4 STP S0, S1, [X31]
	0x03B881A8 STR S2, [X31 + 0x8]
	0x03B881AC BL 0x3B86A10
	0x03B881B0 LDP S0, S1, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X22, 0x85B000
	009 Move X23, 0x594000
	010 Move W8, [X22+2859]
	011 Move X23, [X23+2120]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x594000
	020 Move X0, [X0+2120]
	021 Call 0x1C17CF4
	022 Move X0, 0x5D5000
	023 Move X0, [X0+176]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+2859], W8
	027 Move X0, [X23]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X31
	033 Call BurstCompiler.get_IsEnabled
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {60}
	038 Move X8, 0x5D5000
	039 Move X8, [X8+176]
	040 Move X0, [X8]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Call ProjectOnPlane_0000092B$BurstDirectCall.GetFunctionPointer
	046 Compare X0, 0
	047 JumpIfEqual {60}
	048 Move X3, X0
	049 Move X0, X21
	050 Move X1, X20
	051 Move X2, X19
	052 Move X20, [X31+80]
	053 Move X19, [X31+88]
	054 Move X22, [X31+64]
	055 Move X21, [X31+72]
	056 Move X30, [X31+48]
	057 Move X23, [X31+56]
	058 Add X31, X31, 96
	059 CallNoReturn X3
	060 Move [X31+40], W31
	061 Move [X31+32], X31
	062 Move S0, [X21]
	063 Move S1, [X21+4]
	064 Move V2, [X21+8]
	065 Move X0, X31
	066 Call float3.op_Implicit, X0
	067 Move [X31+16], S0
	068 Move [X31+24], S1
	069 Move [X31+24], S2
	070 Move S0, [X20]
	071 Move S1, [X20+4]
	072 Move V2, [X20+8]
	073 Move X0, X31
	074 Call float3.op_Implicit, X0
	075 Add X0, X31, 16
	076 Add X1, X31, 0
	077 Add X2, X31, 32
	078 Move [X31], S0
	079 Move [X31+8], S1
	080 Move [X31+8], S2
	081 Call BurstMathUtility.ProjectOnPlane, X0, X1, X2
	082 Move S0, [X31+32]
	083 Move S1, [X31+36]
	084 Move V2, [X31+40]
	085 Move X0, X31
	086 Call float3.op_Implicit, X0
	087 Move [X19], S0
	088 Move [X19+8], S1
	089 Move [X19+8], S2
	090 Move X20, [X31+80]
	091 Move X19, [X31+88]
	092 Move X22, [X31+64]
	093 Move X21, [X31+72]
	094 Move X30, [X31+48]
	095 Move X23, [X31+56]
	096 Add X31, X31, 96
	097 Return 

