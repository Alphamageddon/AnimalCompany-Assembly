Type: UnityEngine.XR.Interaction.Toolkit.Utilities.BurstMathUtility/OrthogonalUpVector_00000926$PostfixBurstDelegate

Method: System.Void .ctor(System.Object param_0, System.IntPtr param_1)

Disassembly:
	0x03B89804 MOV X0, X8
	0x03B89808 BL 0x1C16E04
	0x03B8980C LDR X8, [X25]
	0x03B89810 STR X0, [X31 + 0x8]
	0x03B89814 MOV X1, X22
	0x03B89818 MOV X0, X8
	0x03B8981C BL 0x1C16E04
	0x03B89820 STR X0, [X31 + 0x10]
	0x03B89824 ADD X1, X31, 0x0
	0x03B89828 MOV X0, X21
	0x03B8982C MOV X2, X20
	0x03B89830 MOV X3, X19
	0x03B89834 BL 0x1C16CB0
	0x03B89838 LDP X20, X19, [X31 + 0x60]
	0x03B8983C LDP X22, X21, [X31 + 0x50]
	0x03B89840 LDP X24, X23, [X31 + 0x40]
	0x03B89844 LDP X26, X25, [X31 + 0x30]
	0x03B89848 LDR X30, [X31 + 0x20]
	0x03B8984C ADD X31, X31, 0x70
	0x03B89850 RET
	0x03B89854 MOV X0, X1
	0x03B89858 MOV X1, X31
	0x03B8985C B 0x1C16CB4
	0x03B89860 STP X30, X23, [X31 - 0x30]!
	0x03B89864 STP X22, X21, [X31 + 0x10]
	0x03B89868 STP X20, X19, [X31 + 0x20]
	0x03B8986C ADRP X20, 0x859000
	0x03B89870 ADRP X23, 0x5D3000
	0x03B89874 LDRB W8, [X20 + 0xB23]
	0x03B89878 LDR X23, [X23 + 0xA8]
	0x03B8987C MOV X19, X0
	0x03B89880 TBNZ X8, 0x0, 0x3B898BC
	0x03B89884 ADRP X0, 0x592000
	0x03B89888 LDR X0, [X0 + 0x848]
	0x03B8988C BL 0x1C16CF4
	0x03B89890 ADRP X0, 0x5D3000
	0x03B89894 LDR X0, [X0 + 0x168]
	0x03B89898 BL 0x1C16CF4
	0x03B8989C ADRP X0, 0x5D3000
	0x03B898A0 LDR X0, [X0 + 0xA8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+8]
	006 Move [X0+32], X1
	007 Move [X0+40], X2
	008 Move X19, X0
	009 Move X20, X1
	010 Move [X0+16], X8
	011 Move W21, [X2+82]
	012 Move [X0+64], X0
	013 Move X0, X2
	014 Call 0x1C17D84
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {22}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, -33075200
	021 Add X8, X8, 3756
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, -33075200
	024 Add X8, X8, 3732
	025 Move [X19+24], X8
	026 Compare X20, 0
	027 JumpIfEqual {40}
	028 Move X8, [X19+16]
	029 Move X9, [X19+32]
	030 Move [X19+24], X8
	031 Move [X19+64], X9
	032 Move X8, -33075200
	033 Add X8, X8, 3636
	034 Move [X19+56], X8
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return 
	040 Move X1, -50778112
	041 Add X1, X1, 3811
	042 Move X0, X31
	043 Call 0x1C17F3C
	044 Move X1, X31
	045 Call 0x1C17DEC

Method: System.Void Invoke(in UnityEngine.Vector3 forward, in UnityEngine.Vector3 referenceUp, out UnityEngine.Vector3 orthogonalUp)

Disassembly:
	0x03B898A4 BL 0x1C16CF4
	0x03B898A8 ADRP X0, 0x5D3000
	0x03B898AC LDR X0, [X0 + 0x170]
	0x03B898B0 BL 0x1C16CF4
	0x03B898B4 MOVZ W8, 0x1

ISIL:
	001 Move X8, [X0+64]
	002 Move X5, [X0+24]
	003 Move X4, [X0+40]
	004 Move X0, X8
	005 CallNoReturn X5

Method: System.IAsyncResult BeginInvoke(in UnityEngine.Vector3 forward, in UnityEngine.Vector3 referenceUp, out UnityEngine.Vector3 orthogonalUp, System.AsyncCallback param_3, System.Object param_4)

Disassembly:
	0x03B898B8 STRB W8, [X20 + 0xB23]
	0x03B898BC LDR X8, [X23]
	0x03B898C0 LDR W9, [X8 + 0xE0]
	0x03B898C4 CBNZ W9, 0x3B898D4
	0x03B898C8 MOV X0, X8
	0x03B898CC BL 0x1C16DFC
	0x03B898D0 LDR X8, [X23]
	0x03B898D4 LDR X9, [X8 + 0xB8]
	0x03B898D8 LDR X10, [X9]
	0x03B898DC CBNZ X10, 0x3B8994C
	0x03B898E0 LDR W10, [X8 + 0xE0]
	0x03B898E4 CBNZ W10, 0x3B898F8
	0x03B898E8 MOV X0, X8
	0x03B898EC BL 0x1C16DFC
	0x03B898F0 LDR X8, [X23]
	0x03B898F4 LDR X9, [X8 + 0xB8]
	0x03B898F8 ADRP X8, 0x592000
	0x03B898FC LDR X20, [X9 + 0x8]
	0x03B89900 LDR X8, [X8 + 0x848]
	0x03B89904 LDR X0, [X8]
	0x03B89908 ADRP X8, 0x5D3000
	0x03B8990C LDR X8, [X8 + 0x168]
	0x03B89910 LDR X21, [X8]
	0x03B89914 ADRP X8, 0x5D3000
	0x03B89918 LDR X8, [X8 + 0x170]
	0x03B8991C LDR W9, [X0 + 0xE0]
	0x03B89920 LDR X22, [X8]
	0x03B89924 CBNZ W9, 0x3B8992C
	0x03B89928 BL 0x1C16DFC
	0x03B8992C MOV X0, X20
	0x03B89930 MOV X1, X21
	0x03B89934 MOV X2, X22
	0x03B89938 MOV X3, X31
	0x03B8993C BL 0x36FAD70
	0x03B89940 LDR X8, [X23]
	0x03B89944 LDR X9, [X8 + 0xB8]
	0x03B89948 STR X0, [X9]
	0x03B8994C LDR W9, [X8 + 0xE0]
	0x03B89950 CBNZ W9, 0x3B89960
	0x03B89954 MOV X0, X8
	0x03B89958 BL 0x1C16DFC
	0x03B8995C LDR X8, [X23]
	0x03B89960 LDR X8, [X8 + 0xB8]
	0x03B89964 LDP X22, X21, [X31 + 0x10]
	0x03B89968 LDR X8, [X8]
	0x03B8996C STR X8, [X19]
	0x03B89970 LDP X20, X19, [X31 + 0x20]
	0x03B89974 LDP X30, X23, [X31], #0x30
	0x03B89978 RET

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+48], X26
	004 Move [X31+56], X25
	005 Move [X31+64], X24
	006 Move [X31+72], X23
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Move X26, 0x85A000
	012 Move X25, 0x56B000
	013 Move W8, [X26+2830]
	014 Move X25, [X25+1440]
	015 Move X19, X5
	016 Move X20, X4
	017 Move X22, X3
	018 Move X23, X2
	019 Move X24, X1
	020 Move X21, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x56B000
	026 Move X0, [X0+1440]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X26+2830], W8
	030 Move X0, [X25]
	031 Move X1, X24
	032 Move [X31+24], X31
	033 Call 0x1C17E04
	034 Move X8, [X25]
	035 Move [X31], X0
	036 Move X1, X23
	037 Move X0, X8
	038 Call 0x1C17E04
	039 Move X8, [X25]
	040 Move [X31+8], X0
	041 Move X1, X22
	042 Move X0, X8
	043 Call 0x1C17E04
	044 Move [X31+16], X0
	045 Add X1, X31, 0
	046 Move X0, X21
	047 Move X2, X20
	048 Move X3, X19
	049 Call 0x1C17CB0
	050 Move X20, [X31+96]
	051 Move X19, [X31+104]
	052 Move X22, [X31+80]
	053 Move X21, [X31+88]
	054 Move X24, [X31+64]
	055 Move X23, [X31+72]
	056 Move X26, [X31+48]
	057 Move X25, [X31+56]
	058 Move X30, [X31+32]
	059 Add X31, X31, 112
	060 Return X0

Method: System.Void EndInvoke(System.IAsyncResult param_0)

Disassembly:
	0x03B8997C STR X30, [X31 - 0x20]!
	0x03B89980 STP X20, X19, [X31 + 0x10]
	0x03B89984 ADRP X20, 0x859000

ISIL:
	001 Move X0, X1
	002 Move X1, X31
	003 Call 0x1C17CB4
	004 Return 

