Type: UnityEngine.XR.Interaction.Toolkit.Utilities.TeleportationMonitor

Method: System.Void add_teleported(System.Action`1<UnityEngine.Pose> value)

Disassembly:
	0x03B8FEB8 LDR X28, [X28 + 0x4B8]
	0x03B8FEBC LDR X27, [X27 + 0x4A8]
	0x03B8FEC0 LDR X22, [X22 + 0x600]
	0x03B8FEC4 LDR W8, [X0 + 0xE0]
	0x03B8FEC8 LDR X26, [X26 + 0x498]
	0x03B8FECC LDR X25, [X25 + 0x4D0]
	0x03B8FED0 LDR X24, [X24 + 0x4C0]
	0x03B8FED4 LDR X23, [X23 + 0x4B0]
	0x03B8FED8 CBNZ W8, 0x3B8FEE4
	0x03B8FEDC BL 0x1C16DFC
	0x03B8FEE0 LDR X0, [X21]
	0x03B8FEE4 LDR X8, [X0 + 0xB8]
	0x03B8FEE8 LDR X0, [X29]
	0x03B8FEEC LDR X19, [X8]
	0x03B8FEF0 BL 0x1C16F10
	0x03B8FEF4 LDR X2, [X20]
	0x03B8FEF8 MOV X1, X19
	0x03B8FEFC MOV X3, X31
	0x03B8FF00 MOV X20, X0
	0x03B8FF04 BL 0x2D27AA8
	0x03B8FF08 LDR X0, [X28]
	0x03B8FF0C BL 0x1C16F10
	0x03B8FF10 LDR X7, [X27]
	0x03B8FF14 MOVZ W5, 0x1
	0x03B8FF18 MOVZ W6, 0x2710
	0x03B8FF1C MOV X1, X20
	0x03B8FF20 MOV X2, X31
	0x03B8FF24 MOV X3, X31
	0x03B8FF28 MOV X4, X31
	0x03B8FF2C MOV X19, X0
	0x03B8FF30 BL 0x2EF0EC8
	0x03B8FF34 LDR X8, [X22]
	0x03B8FF38 LDR X8, [X8 + 0xB8]
	0x03B8FF3C STR X19, [X8]
	0x03B8FF40 LDR X8, [X21]
	0x03B8FF44 LDR X0, [X26]
	0x03B8FF48 LDR X8, [X8 + 0xB8]
	0x03B8FF4C LDR X19, [X8]
	0x03B8FF50 BL 0x1C16F10
	0x03B8FF54 LDR X2, [X25]
	0x03B8FF58 MOV X1, X19
	0x03B8FF5C MOV X3, X31
	0x03B8FF60 MOV X20, X0
	0x03B8FF64 BL 0x2D27AA8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x854000
	009 Move W8, [X21+2940]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5CC000
	017 Move X0, [X0+1544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2940], W8
	021 Move X24, 0x5CC000
	022 Add X20, X20, 16
	023 Move X21, [X20]
	024 Move X24, [X24+1544]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_teleported(System.Action`1<UnityEngine.Pose> value)

Disassembly:
	0x03B8FF68 LDR X0, [X24]
	0x03B8FF6C BL 0x1C16F10
	0x03B8FF70 LDR X7, [X23]
	0x03B8FF74 MOVZ W5, 0x1
	0x03B8FF78 MOVZ W6, 0x2710
	0x03B8FF7C MOV X1, X20
	0x03B8FF80 MOV X2, X31
	0x03B8FF84 MOV X3, X31
	0x03B8FF88 MOV X4, X31
	0x03B8FF8C MOV X19, X0
	0x03B8FF90 BL 0x2EF0EC8
	0x03B8FF94 LDR X8, [X22]
	0x03B8FF98 LDP X22, X21, [X31 + 0x40]
	0x03B8FF9C LDP X24, X23, [X31 + 0x30]
	0x03B8FFA0 LDP X26, X25, [X31 + 0x20]
	0x03B8FFA4 LDR X8, [X8 + 0xB8]
	0x03B8FFA8 LDP X28, X27, [X31 + 0x10]
	0x03B8FFAC STR X19, [X8 + 0x8]
	0x03B8FFB0 LDP X20, X19, [X31 + 0x50]
	0x03B8FFB4 LDP X29, X30, [X31], #0x60
	0x03B8FFB8 RET
	0x03B8FFBC STR X30, [X31 - 0x20]!
	0x03B8FFC0 STP X20, X19, [X31 + 0x10]
	0x03B8FFC4 ADRP X19, 0x853000
	0x03B8FFC8 ADRP X20, 0x5CD000
	0x03B8FFCC LDRB W8, [X19 + 0xB86]
	0x03B8FFD0 LDR X20, [X20 + 0x490]
	0x03B8FFD4 TBNZ X8, 0x0, 0x3B8FFEC
	0x03B8FFD8 ADRP X0, 0x5CD000
	0x03B8FFDC LDR X0, [X0 + 0x490]
	0x03B8FFE0 BL 0x1C16CF4
	0x03B8FFE4 MOVZ W8, 0x1
	0x03B8FFE8 STRB W8, [X19 + 0xB86]
	0x03B8FFEC LDR X0, [X20]
	0x03B8FFF0 BL 0x1C16F10
	0x03B8FFF4 MOV X1, X31
	0x03B8FFF8 MOV X19, X0
	0x03B8FFFC BL 0x33BDD8C
	0x03B90000 LDR X8, [X20]
	0x03B90004 LDR X8, [X8 + 0xB8]
	0x03B90008 STR X19, [X8]
	0x03B9000C LDP X20, X19, [X31 + 0x10]
	0x03B90010 LDR X30, [X31], #0x20
	0x03B90014 RET

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x854000
	009 Move W8, [X21+2941]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5CC000
	017 Move X0, [X0+1544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2941], W8
	021 Move X24, 0x5CC000
	022 Add X20, X20, 16
	023 Move X21, [X20]
	024 Move X24, [X24+1544]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void AddInteractor(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor)

Disassembly:
	0x03B90018 MOV X1, X31
	0x03B9001C B 0x33BDD8C
	0x03B90020 STP X30, X21, [X31 - 0x20]!
	0x03B90024 STP X20, X19, [X31 + 0x10]
	0x03B90028 ADRP X20, 0x852000
	0x03B9002C ADRP X21, 0x5CC000
	0x03B90030 ADRP X19, 0x5CC000
	0x03B90034 LDRB W8, [X20 + 0xB87]
	0x03B90038 LDR X21, [X21 + 0x4D8]
	0x03B9003C LDR X19, [X19 + 0x4E0]
	0x03B90040 TBNZ X8, 0x0, 0x3B90064
	0x03B90044 ADRP X0, 0x5CC000
	0x03B90048 LDR X0, [X0 + 0x4E0]
	0x03B9004C BL 0x1C16CF4
	0x03B90050 ADRP X0, 0x5CC000
	0x03B90054 LDR X0, [X0 + 0x4D8]
	0x03B90058 BL 0x1C16CF4
	0x03B9005C MOVZ W8, 0x1
	0x03B90060 STRB W8, [X20 + 0xB87]
	0x03B90064 LDR X0, [X21]
	0x03B90068 BL 0x1C16F10
	0x03B9006C LDR X1, [X19]
	0x03B90070 MOV X19, X0
	0x03B90074 BL 0x2AA4804
	0x03B90078 MOV X0, X19
	0x03B9007C LDP X20, X19, [X31 + 0x10]
	0x03B90080 LDP X30, X21, [X31], #0x20
	0x03B90084 RET
	0x03B90088 STP X30, X21, [X31 - 0x20]!
	0x03B9008C STP X20, X19, [X31 + 0x10]
	0x03B90090 ADRP X20, 0x852000
	0x03B90094 ADRP X21, 0x5CC000
	0x03B90098 ADRP X19, 0x5CC000
	0x03B9009C LDRB W8, [X20 + 0xB88]
	0x03B900A0 LDR X21, [X21 + 0x4E8]
	0x03B900A4 LDR X19, [X19 + 0x4F0]
	0x03B900A8 TBNZ X8, 0x0, 0x3B900CC
	0x03B900AC ADRP X0, 0x5CC000
	0x03B900B0 LDR X0, [X0 + 0x4F0]
	0x03B900B4 BL 0x1C16CF4
	0x03B900B8 ADRP X0, 0x5CC000
	0x03B900BC LDR X0, [X0 + 0x4E8]
	0x03B900C0 BL 0x1C16CF4
	0x03B900C4 MOVZ W8, 0x1
	0x03B900C8 STRB W8, [X20 + 0xB88]
	0x03B900CC LDR X0, [X21]
	0x03B900D0 BL 0x1C16F10
	0x03B900D4 LDR X1, [X19]
	0x03B900D8 MOV X19, X0
	0x03B900DC BL 0x2AA7868
	0x03B900E0 MOV X0, X19
	0x03B900E4 LDP X20, X19, [X31 + 0x10]
	0x03B900E8 LDP X30, X21, [X31], #0x20
	0x03B900EC RET
	0x03B900F0 STR X30, [X31 - 0x40]!
	0x03B900F4 STP X24, X23, [X31 + 0x10]
	0x03B900F8 STP X22, X21, [X31 + 0x20]
	0x03B900FC STP X20, X19, [X31 + 0x30]
	0x03B90100 ADRP X21, 0x852000
	0x03B90104 LDRB W8, [X21 + 0xB89]
	0x03B90108 MOV X19, X1
	0x03B9010C MOV X20, X0
	0x03B90110 TBNZ X8, 0x0, 0x3B90128
	0x03B90114 ADRP X0, 0x5CA000
	0x03B90118 LDR X0, [X0 + 0xDE8]
	0x03B9011C BL 0x1C16CF4
	0x03B90120 MOVZ W8, 0x1
	0x03B90124 STRB W8, [X21 + 0xB89]
	0x03B90128 ADRP X24, 0x5CA000
	0x03B9012C LDR X21, [X20 + 0x10]!
	0x03B90130 LDR X24, [X24 + 0xDE8]
	0x03B90134 MOV X0, X21
	0x03B90138 MOV X1, X19
	0x03B9013C MOV X2, X31
	0x03B90140 BL 0x33C0DE4
	0x03B90144 CBZ X0, 0x3B90164
	0x03B90148 LDR X23, [X24]
	0x03B9014C MOV X22, X0
	0x03B90150 MOV X1, X23
	0x03B90154 BL 0x1C16E00
	0x03B90158 MOV X1, X0
	0x03B9015C CBNZ X0, 0x3B90168
	0x03B90160 B 0x3B90194
	0x03B90164 MOV X1, X31
	0x03B90168 MOV X0, X20
	0x03B9016C MOV X2, X21
	0x03B90170 BL 0x1C24138
	0x03B90174 CMP X21, X0
	0x03B90178 MOV X21, X0
	0x03B9017C B.NE 0x3B90134
	0x03B90180 LDP X20, X19, [X31 + 0x30]
	0x03B90184 LDP X22, X21, [X31 + 0x20]
	0x03B90188 LDP X24, X23, [X31 + 0x10]
	0x03B9018C LDR X30, [X31], #0x40
	0x03B90190 RET
	0x03B90194 MOV X0, X22
	0x03B90198 MOV X1, X23
	0x03B9019C BL 0x1C171E0
	0x03B901A0 STR X30, [X31 - 0x40]!
	0x03B901A4 STP X24, X23, [X31 + 0x10]
	0x03B901A8 STP X22, X21, [X31 + 0x20]
	0x03B901AC STP X20, X19, [X31 + 0x30]
	0x03B901B0 ADRP X21, 0x852000
	0x03B901B4 LDRB W8, [X21 + 0xB8A]
	0x03B901B8 MOV X19, X1
	0x03B901BC MOV X20, X0
	0x03B901C0 TBNZ X8, 0x0, 0x3B901D8
	0x03B901C4 ADRP X0, 0x5CA000
	0x03B901C8 LDR X0, [X0 + 0xDE8]
	0x03B901CC BL 0x1C16CF4
	0x03B901D0 MOVZ W8, 0x1
	0x03B901D4 STRB W8, [X21 + 0xB8A]
	0x03B901D8 ADRP X24, 0x5CA000
	0x03B901DC LDR X21, [X20 + 0x10]!
	0x03B901E0 LDR X24, [X24 + 0xDE8]
	0x03B901E4 MOV X0, X21
	0x03B901E8 MOV X1, X19
	0x03B901EC MOV X2, X31
	0x03B901F0 BL 0x33C0FDC
	0x03B901F4 CBZ X0, 0x3B90214
	0x03B901F8 LDR X23, [X24]
	0x03B901FC MOV X22, X0
	0x03B90200 MOV X1, X23
	0x03B90204 BL 0x1C16E00
	0x03B90208 MOV X1, X0
	0x03B9020C CBNZ X0, 0x3B90218
	0x03B90210 B 0x3B90244
	0x03B90214 MOV X1, X31
	0x03B90218 MOV X0, X20
	0x03B9021C MOV X2, X21
	0x03B90220 BL 0x1C24138
	0x03B90224 CMP X21, X0
	0x03B90228 MOV X21, X0
	0x03B9022C B.NE 0x3B901E4
	0x03B90230 LDP X20, X19, [X31 + 0x30]
	0x03B90234 LDP X22, X21, [X31 + 0x20]
	0x03B90238 LDP X24, X23, [X31 + 0x10]
	0x03B9023C LDR X30, [X31], #0x40
	0x03B90240 RET
	0x03B90244 MOV X0, X22
	0x03B90248 MOV X1, X23
	0x03B9024C BL 0x1C171E0
	0x03B90250 STR X30, [X31 - 0x40]!
	0x03B90254 STP X24, X23, [X31 + 0x10]
	0x03B90258 STP X22, X21, [X31 + 0x20]
	0x03B9025C STP X20, X19, [X31 + 0x30]
	0x03B90260 ADRP X21, 0x852000
	0x03B90264 LDRB W8, [X21 + 0xB8B]
	0x03B90268 MOV X19, X1
	0x03B9026C MOV X20, X0
	0x03B90270 TBNZ X8, 0x0, 0x3B90288
	0x03B90274 ADRP X0, 0x5CA000
	0x03B90278 LDR X0, [X0 + 0xDE8]
	0x03B9027C BL 0x1C16CF4
	0x03B90280 MOVZ W8, 0x1
	0x03B90284 STRB W8, [X21 + 0xB8B]
	0x03B90288 ADRP X24, 0x5CA000
	0x03B9028C LDR X21, [X20 + 0x18]!
	0x03B90290 LDR X24, [X24 + 0xDE8]
	0x03B90294 MOV X0, X21
	0x03B90298 MOV X1, X19
	0x03B9029C MOV X2, X31
	0x03B902A0 BL 0x33C0DE4
	0x03B902A4 CBZ X0, 0x3B902C4
	0x03B902A8 LDR X23, [X24]
	0x03B902AC MOV X22, X0
	0x03B902B0 MOV X1, X23
	0x03B902B4 BL 0x1C16E00
	0x03B902B8 MOV X1, X0
	0x03B902BC CBNZ X0, 0x3B902C8
	0x03B902C0 B 0x3B902F4
	0x03B902C4 MOV X1, X31
	0x03B902C8 MOV X0, X20
	0x03B902CC MOV X2, X21
	0x03B902D0 BL 0x1C24138
	0x03B902D4 CMP X21, X0
	0x03B902D8 MOV X21, X0
	0x03B902DC B.NE 0x3B90294
	0x03B902E0 LDP X20, X19, [X31 + 0x30]
	0x03B902E4 LDP X22, X21, [X31 + 0x20]
	0x03B902E8 LDP X24, X23, [X31 + 0x10]
	0x03B902EC LDR X30, [X31], #0x40
	0x03B902F0 RET
	0x03B902F4 MOV X0, X22
	0x03B902F8 MOV X1, X23
	0x03B902FC BL 0x1C171E0
	0x03B90300 STR X30, [X31 - 0x40]!
	0x03B90304 STP X24, X23, [X31 + 0x10]
	0x03B90308 STP X22, X21, [X31 + 0x20]
	0x03B9030C STP X20, X19, [X31 + 0x30]
	0x03B90310 ADRP X21, 0x852000
	0x03B90314 LDRB W8, [X21 + 0xB8C]
	0x03B90318 MOV X19, X1
	0x03B9031C MOV X20, X0
	0x03B90320 TBNZ X8, 0x0, 0x3B90338
	0x03B90324 ADRP X0, 0x5CA000
	0x03B90328 LDR X0, [X0 + 0xDE8]
	0x03B9032C BL 0x1C16CF4
	0x03B90330 MOVZ W8, 0x1
	0x03B90334 STRB W8, [X21 + 0xB8C]
	0x03B90338 ADRP X24, 0x5CA000
	0x03B9033C LDR X21, [X20 + 0x18]!
	0x03B90340 LDR X24, [X24 + 0xDE8]
	0x03B90344 MOV X0, X21
	0x03B90348 MOV X1, X19
	0x03B9034C MOV X2, X31
	0x03B90350 BL 0x33C0FDC
	0x03B90354 CBZ X0, 0x3B90374
	0x03B90358 LDR X23, [X24]
	0x03B9035C MOV X22, X0
	0x03B90360 MOV X1, X23
	0x03B90364 BL 0x1C16E00
	0x03B90368 MOV X1, X0
	0x03B9036C CBNZ X0, 0x3B90378
	0x03B90370 B 0x3B903A4
	0x03B90374 MOV X1, X31
	0x03B90378 MOV X0, X20
	0x03B9037C MOV X2, X21
	0x03B90380 BL 0x1C24138
	0x03B90384 CMP X21, X0
	0x03B90388 MOV X21, X0
	0x03B9038C B.NE 0x3B90344
	0x03B90390 LDP X20, X19, [X31 + 0x30]
	0x03B90394 LDP X22, X21, [X31 + 0x20]
	0x03B90398 LDP X24, X23, [X31 + 0x10]
	0x03B9039C LDR X30, [X31], #0x40
	0x03B903A0 RET
	0x03B903A4 MOV X0, X22
	0x03B903A8 MOV X1, X23
	0x03B903AC BL 0x1C171E0
	0x03B903B0 LDR X0, [X0 + 0x20]
	0x03B903B4 RET
	0x03B903B8 STR X1, [X0 + 0x20]
	0x03B903BC RET
	0x03B903C0 STR X30, [X31 - 0x30]!
	0x03B903C4 STP X22, X21, [X31 + 0x10]
	0x03B903C8 STP X20, X19, [X31 + 0x20]
	0x03B903CC ADRP X22, 0x852000
	0x03B903D0 ADRP X21, 0x563000
	0x03B903D4 LDRB W8, [X22 + 0xB8D]
	0x03B903D8 LDR X21, [X21 + 0x598]
	0x03B903DC MOV X20, X1
	0x03B903E0 MOV X19, X0
	0x03B903E4 TBNZ X8, 0x0, 0x3B90420
	0x03B903E8 ADRP X0, 0x5CC000
	0x03B903EC LDR X0, [X0 + 0x4F8]
	0x03B903F0 BL 0x1C16CF4
	0x03B903F4 ADRP X0, 0x5CA000
	0x03B903F8 LDR X0, [X0 + 0x780]
	0x03B903FC BL 0x1C16CF4
	0x03B90400 ADRP X0, 0x5CB000
	0x03B90404 LDR X0, [X0 + 0x828]
	0x03B90408 BL 0x1C16CF4
	0x03B9040C ADRP X0, 0x563000
	0x03B90410 LDR X0, [X0 + 0x598]
	0x03B90414 BL 0x1C16CF4
	0x03B90418 MOVZ W8, 0x1
	0x03B9041C STRB W8, [X22 + 0xB8D]
	0x03B90420 LDR X0, [X21]
	0x03B90424 STR X31, [X31 + 0x8]
	0x03B90428 LDR X21, [X19 + 0x20]
	0x03B9042C LDR W8, [X0 + 0xE0]
	0x03B90430 CBNZ W8, 0x3B90438

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0x853000
	015 Move W8, [X21+2942]
	016 Move X19, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {63}
	022 Move X0, 0x5CC000
	023 Move X0, [X0+3192]
	024 Call 0x1C17CF4
	025 Move X0, 0x5CD000
	026 Move X0, [X0+984]
	027 Call 0x1C17CF4
	028 Move X0, 0x5CD000
	029 Move X0, [X0+992]
	030 Call 0x1C17CF4
	031 Move X0, 0x5CB000
	032 Move X0, [X0+760]
	033 Call 0x1C17CF4
	034 Move X0, 0x5CD000
	035 Move X0, [X0+1000]
	036 Call 0x1C17CF4
	037 Move X0, 0x5CD000
	038 Move X0, [X0+1008]
	039 Call 0x1C17CF4
	040 Move X0, 0x5CC000
	041 Move X0, [X0+2696]
	042 Call 0x1C17CF4
	043 Move X0, 0x5CD000
	044 Move X0, [X0+1016]
	045 Call 0x1C17CF4
	046 Move X0, 0x5CC000
	047 Move X0, [X0+2712]
	048 Call 0x1C17CF4
	049 Move X0, 0x564000
	050 Move X0, [X0+1432]
	051 Call 0x1C17CF4
	052 Move X0, 0x5CD000
	053 Move X0, [X0+1024]
	054 Call 0x1C17CF4
	055 Move X0, 0x5CD000
	056 Move X0, [X0+1032]
	057 Call 0x1C17CF4
	058 Move X0, 0x5CB000
	059 Move X0, [X0+1536]
	060 Call 0x1C17CF4
	061 Move W8, 1
	062 Move [X21+2942], W8
	063 Move [X31], X31
	064 Move [X31+8], X31
	065 Compare X19, 0
	066 JumpIfEqual {286}
	067 Move X10, 0x5CB000
	068 Move X8, [X19]
	069 Move X10, [X10+760]
	070 Move X21, 0x564000
	071 NotImplemented "Instruction LDRH not yet implemented."
	072 Move X1, [X10]
	073 Move X21, [X21+1432]
	074 Compare X9, 0
	075 JumpIfEqual {82}
	076 Move X10, [X8+176]
	077 Add X10, X10, 8
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Subtract X9, X9, 1
	081 Add X10, X10, 16
	082 Move W2, 5
	083 Move X0, X19
	084 Call 0x1C5D788
	085 Move W9, [X10]
	086 Add W9, W9, 5
	087 Add X8, X8, W9
	088 Add X0, X8, 312
	089 Move X8, [X0]
	090 Move X1, [X0+8]
	091 Move X0, X19
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Move X8, [X21]
	094 Move X21, X0
	095 Move W9, [X8+224]
	096 Compare W9, 0
	097 JumpIfNotEqual {100}
	098 Move X0, X8
	099 Call 0x1C17DFC
	100 Move X0, X21
	101 Move X1, X31
	102 Move X2, X31
	103 Call Object.op_Equality, X0, X1
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfEqual {270}
	108 Move X24, 0x5CB000
	109 Move X24, [X24+1536]
	110 Move X0, [X24]
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {115}
	114 Call 0x1C17DFC
	115 Call TeleportationMonitor.FindTeleportationProviders
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {270}
	120 Move X0, [X24]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {126}
	124 Call 0x1C17DFC
	125 Move X0, [X24]
	126 Move X8, [X0+184]
	127 Move X25, [X8+16]
	128 Compare X25, 0
	129 JumpIfEqual {284}
	130 Move X8, [X25+24]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X28, 0x5CD000
	133 Move X29, 0x5CC000
	134 Move X28, [X28+1008]
	135 Move X29, [X29+3192]
	136 Move X26, X31
	137 And X8, X8, 0
	138 Add X27, X25, 32
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X0, [X24]
	141 Move X22, [X27]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1C17DFC
	146 Add X1, X31, 8
	147 Move X0, X22
	148 Call TeleportationMonitor.TryGetOriginTransform, X0, X1
	149 Move TEMP, X0
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfNotEqual {267}
	153 Compare X21, 0
	154 JumpIfEqual {284}
	155 Move X1, [X31+8]
	156 Move X0, X21
	157 Move X2, X31
	158 Call Transform.IsChildOf, X0, X1
	159 Move TEMP, X0
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfNotEqual {267}
	163 Move X0, [X20+24]
	164 Compare X0, 0
	165 JumpIfNotEqual {183}
	166 Move X0, [X24]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {172}
	170 Call 0x1C17DFC
	171 Move X0, [X24]
	172 Move X8, [X0+184]
	173 Move X0, [X8]
	174 Compare X0, 0
	175 JumpIfEqual {284}
	176 Move X8, 0x5CD000
	177 Move X8, [X8+1000]
	178 Move X1, [X8]
	179 Call 0x2EF1FD0, X0
	180 Move [X20+24], X0
	181 Compare X0, 0
	182 JumpIfEqual {284}
	183 Move X8, 0x5CD000
	184 Move X8, [X8+992]
	185 Add X2, X31, 0
	186 Move X1, X22
	187 Move X3, [X8]
	188 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	189 Move TEMP, X0
	190 And TEMP, TEMP, 1
	191 Compare TEMP, 1
	192 JumpIfEqual {212}
	193 Move X8, 0x5CC000
	194 Move X8, [X8+2712]
	195 Move X0, [X8]
	196 Call 0x1C17F10
	197 Move X8, 0x5CC000
	198 Move X8, [X8+2696]
	199 Move X23, X0
	200 Move X1, [X8]
	201 Call List`1<Object>..ctor, X0
	202 Move [X31], X23
	203 Move X0, [X20+24]
	204 Compare X0, 0
	205 JumpIfEqual {284}
	206 Move X8, 0x5CD000
	207 Move X8, [X8+984]
	208 Move X1, X22
	209 Move X2, X23
	210 Move X3, [X8]
	211 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	212 Move X0, [X31]
	213 Compare X0, 0
	214 JumpIfEqual {284}
	215 Move W10, [X0+28]
	216 Move X8, [X0+16]
	217 Move X9, [X28]
	218 Add W10, W10, 1
	219 Move [X0+28], W10
	220 Compare X8, 0
	221 JumpIfEqual {284}
	222 NotImplemented "Instruction LDRSW not yet implemented."
	223 Move W11, [X8+24]
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Add W9, W10, 1
	226 Add X8, X8, X10
	227 Move [X0+24], W9
	228 Move [X8+32], X19
	229 Move X8, [X9+32]
	230 Move X1, X19
	231 Move X8, [X8+192]
	232 Move X2, [X8+112]
	233 Call List`1<Object>.AddWithResize, X0, X1
	234 Move X8, [X31]
	235 Compare X8, 0
	236 JumpIfEqual {284}
	237 Move W8, [X8+24]
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Move X0, [X29]
	240 Call 0x1C17F10
	241 Move X8, 0x5CD000
	242 Move X8, [X8+1024]
	243 Move X1, X20
	244 Move X3, X31
	245 Move X23, X0
	246 Move X2, [X8]
	247 Call Action`1<Object>..ctor, X0, X1, X2
	248 Compare X22, 0
	249 JumpIfEqual {284}
	250 Move X0, X22
	251 Move X1, X23
	252 Move X2, X31
	253 Call LocomotionProvider.add_beginLocomotion, X0, X1
	254 Move X0, [X29]
	255 Call 0x1C17F10
	256 Move X8, 0x5CD000
	257 Move X8, [X8+1032]
	258 Move X1, X20
	259 Move X3, X31
	260 Move X23, X0
	261 Move X2, [X8]
	262 Call Action`1<Object>..ctor, X0, X1, X2
	263 Move X0, X22
	264 Move X1, X23
	265 Move X2, X31
	266 Call LocomotionProvider.add_endLocomotion, X0, X1
	267 Move W8, [X25+24]
	268 Add X26, X26, 1
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Move X20, [X31+96]
	271 Move X19, [X31+104]
	272 Move X22, [X31+80]
	273 Move X21, [X31+88]
	274 Move X24, [X31+64]
	275 Move X23, [X31+72]
	276 Move X26, [X31+48]
	277 Move X25, [X31+56]
	278 Move X28, [X31+32]
	279 Move X27, [X31+40]
	280 Move X29, [X31+16]
	281 Move X30, [X31+24]
	282 Add X31, X31, 112
	283 Return 
	284 Call 0x1C17F20
	285 Call 0x1C17F28
	286 Move X0, 0x569000
	287 Move X0, [X0+1320]
	288 Call 0x1C17D08
	289 Call 0x1C17F10
	290 Move X19, X0
	291 Move X0, 0x5CD000
	292 Move X0, [X0+1040]
	293 Call 0x1C17D08
	294 Move X1, X0
	295 Move X0, X19
	296 Move X2, X31
	297 Call ArgumentNullException..ctor, X0, X1
	298 Move X0, 0x5CD000
	299 Move X0, [X0+1048]
	300 Call 0x1C17D08
	301 Move X1, X0
	302 Move X0, X19
	303 Call 0x1C17DEC

Method: System.Void RemoveInteractor(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor)

Disassembly:
	0x03B905E8 ADD X2, X31, 0x38
	0x03B905EC MOV X1, X20
	0x03B905F0 LDR X3, [X8]
	0x03B905F4 BL 0x2AA6B2C
	0x03B905F8 TBZ X0, 0x0, 0x3B906FC
	0x03B905FC LDR X0, [X19 + 0x28]
	0x03B90600 CBZ X0, 0x3B90710
	0x03B90604 ADRP X8, 0x5CB000
	0x03B90608 LDR X8, [X8 + 0x7C0]
	0x03B9060C MOV X1, X20
	0x03B90610 LDR X2, [X8]
	0x03B90614 BL 0x2AA64F8
	0x03B90618 LDR X8, [X31 + 0x38]
	0x03B9061C CBZ X8, 0x3B906FC
	0x03B90620 LDR X0, [X19 + 0x28]
	0x03B90624 CBZ X0, 0x3B90710
	0x03B90628 ADRP X8, 0x5CB000
	0x03B9062C LDR X8, [X8 + 0x8D8]
	0x03B90630 LDR X1, [X8]
	0x03B90634 ADD X8, X31, 0x0
	0x03B90638 BL 0x2AA54BC
	0x03B9063C ADRP X21, 0x5CB000
	0x03B90640 ADRP X22, 0x563000
	0x03B90644 LDR X21, [X21 + 0x8E8]
	0x03B90648 LDR X22, [X22 + 0x598]
	0x03B9064C LDR X1, [X21]
	0x03B90650 ADD X0, X31, 0x0
	0x03B90654 BL 0x2C0A728
	0x03B90658 TBZ X0, 0x0, 0x3B906AC
	0x03B9065C LDR X8, [X31 + 0x18]
	0x03B90660 LDR X9, [X31 + 0x38]
	0x03B90664 CMP X9, X8
	0x03B90668 B.NE 0x3B9064C
	0x03B9066C LDR X0, [X22]
	0x03B90670 LDR X20, [X31 + 0x10]
	0x03B90674 LDR W8, [X0 + 0xE0]
	0x03B90678 CBNZ W8, 0x3B90680
	0x03B9067C BL 0x1C16DFC
	0x03B90680 MOV X0, X20
	0x03B90684 MOV X1, X31
	0x03B90688 MOV X2, X31
	0x03B9068C BL 0x3C354F8
	0x03B90690 TBZ X0, 0x0, 0x3B9064C
	0x03B90694 ADRP X8, 0x5CB000
	0x03B90698 LDR X8, [X8 + 0x8E0]
	0x03B9069C ADD X0, X31, 0x0
	0x03B906A0 LDR X1, [X8]
	0x03B906A4 BL 0x2C0A83C
	0x03B906A8 B 0x3B906FC
	0x03B906AC ADRP X8, 0x5CB000
	0x03B906B0 LDR X8, [X8 + 0x8E0]
	0x03B906B4 ADD X0, X31, 0x0
	0x03B906B8 LDR X1, [X8]
	0x03B906BC BL 0x2C0A83C
	0x03B906C0 LDR X0, [X19 + 0x30]
	0x03B906C4 CBZ X0, 0x3B90710
	0x03B906C8 ADRP X8, 0x5CC000
	0x03B906CC LDR X1, [X31 + 0x38]
	0x03B906D0 LDR X8, [X8 + 0x508]
	0x03B906D4 LDR X2, [X8]
	0x03B906D8 BL 0x2DBE67C
	0x03B906DC TBZ X0, 0x0, 0x3B906FC
	0x03B906E0 LDR X8, [X19 + 0x18]
	0x03B906E4 CBZ X8, 0x3B906FC
	0x03B906E8 LDR X1, [X31 + 0x38]
	0x03B906EC LDR X9, [X8 + 0x18]
	0x03B906F0 LDR X0, [X8 + 0x40]
	0x03B906F4 LDR X2, [X8 + 0x28]
	0x03B906F8 BLR X9
	0x03B906FC LDP X20, X19, [X31 + 0x50]
	0x03B90700 LDP X22, X21, [X31 + 0x40]
	0x03B90704 LDR X30, [X31 + 0x30]
	0x03B90708 ADD X31, X31, 0x60
	0x03B9070C RET
	0x03B90710 BL 0x1C16F20
	0x03B90714 B 0x3B9071C
	0x03B90718 B 0x3B9071C
	0x03B9071C MOV X20, X0
	0x03B90720 CMP W1, 0x1
	0x03B90724 B.NE 0x3B90758
	0x03B90728 MOV X0, X20
	0x03B9072C BL 0x3EB1AD0
	0x03B90730 LDR X21, [X0]
	0x03B90734 BL 0x3EB1AE0
	0x03B90738 ADRP X8, 0x5CB000
	0x03B9073C LDR X8, [X8 + 0x8E0]
	0x03B90740 ADD X0, X31, 0x0
	0x03B90744 LDR X1, [X8]
	0x03B90748 BL 0x2C0A83C
	0x03B9074C CBZ X21, 0x3B906C0
	0x03B90750 MOV X0, X21
	0x03B90754 BL 0x1C16F18
	0x03B90758 MOV X21, X31
	0x03B9075C B 0x3B90764
	0x03B90760 MOV X20, X0
	0x03B90764 ADRP X8, 0x5CB000
	0x03B90768 LDR X8, [X8 + 0x8E0]
	0x03B9076C LDR X1, [X8]
	0x03B90770 ADD X0, X31, 0x0
	0x03B90774 BL 0x2C0A83C
	0x03B90778 CBNZ X21, 0x3B90784
	0x03B9077C MOV X0, X20
	0x03B90780 BL 0x1D2C690
	0x03B90784 MOV X0, X21
	0x03B90788 BL 0x1C16F18
	0x03B9078C BL 0x1990590
	0x03B90790 SUB X31, X31, 0x80
	0x03B90794 STP X30, X25, [X31 + 0x40]
	0x03B90798 STP X24, X23, [X31 + 0x50]
	0x03B9079C STP X22, X21, [X31 + 0x60]
	0x03B907A0 STP X20, X19, [X31 + 0x70]
	0x03B907A4 ADRP X20, 0x852000
	0x03B907A8 ADRP X22, 0x5CA000
	0x03B907AC ADRP X21, 0x5CC000
	0x03B907B0 LDRB W8, [X20 + 0xB8F]
	0x03B907B4 LDR X22, [X22 + 0x2C8]
	0x03B907B8 LDR X21, [X21 + 0x510]
	0x03B907BC MOV X19, X0
	0x03B907C0 TBNZ X8, 0x0, 0x3B90898
	0x03B907C4 ADRP X0, 0x565000
	0x03B907C8 LDR X0, [X0 + 0x6D0]
	0x03B907CC BL 0x1C16CF4
	0x03B907D0 ADRP X0, 0x5CC000
	0x03B907D4 LDR X0, [X0 + 0x4F8]
	0x03B907D8 BL 0x1C16CF4
	0x03B907DC ADRP X0, 0x5CA000
	0x03B907E0 LDR X0, [X0 + 0x660]
	0x03B907E4 BL 0x1C16CF4
	0x03B907E8 ADRP X0, 0x5CA000
	0x03B907EC LDR X0, [X0 + 0x668]
	0x03B907F0 BL 0x1C16CF4
	0x03B907F4 ADRP X0, 0x5CA000
	0x03B907F8 LDR X0, [X0 + 0x670]
	0x03B907FC BL 0x1C16CF4
	0x03B90800 ADRP X0, 0x5CB000
	0x03B90804 LDR X0, [X0 + 0x828]
	0x03B90808 BL 0x1C16CF4
	0x03B9080C ADRP X0, 0x5CA000
	0x03B90810 LDR X0, [X0 + 0x678]
	0x03B90814 BL 0x1C16CF4
	0x03B90818 ADRP X0, 0x5CC000
	0x03B9081C LDR X0, [X0 + 0x518]
	0x03B90820 BL 0x1C16CF4
	0x03B90824 ADRP X0, 0x5CC000
	0x03B90828 LDR X0, [X0 + 0x520]
	0x03B9082C BL 0x1C16CF4
	0x03B90830 ADRP X0, 0x5CC000
	0x03B90834 LDR X0, [X0 + 0x528]
	0x03B90838 BL 0x1C16CF4
	0x03B9083C ADRP X0, 0x5C3000
	0x03B90840 LDR X0, [X0 + 0x890]
	0x03B90844 BL 0x1C16CF4
	0x03B90848 ADRP X0, 0x5CC000
	0x03B9084C LDR X0, [X0 + 0x530]
	0x03B90850 BL 0x1C16CF4
	0x03B90854 ADRP X0, 0x563000
	0x03B90858 LDR X0, [X0 + 0x598]
	0x03B9085C BL 0x1C16CF4
	0x03B90860 ADRP X0, 0x5CA000
	0x03B90864 LDR X0, [X0 + 0x2C8]
	0x03B90868 BL 0x1C16CF4
	0x03B9086C ADRP X0, 0x5CC000
	0x03B90870 LDR X0, [X0 + 0x510]
	0x03B90874 BL 0x1C16CF4
	0x03B90878 ADRP X0, 0x5CC000
	0x03B9087C LDR X0, [X0 + 0x538]
	0x03B90880 BL 0x1C16CF4
	0x03B90884 ADRP X0, 0x5CA000
	0x03B90888 LDR X0, [X0 + 0xE50]
	0x03B9088C BL 0x1C16CF4
	0x03B90890 MOVZ W8, 0x1
	0x03B90894 STRB W8, [X20 + 0xB8F]
	0x03B90898 STP X31, X31, [X31 + 0x20]
	0x03B9089C STR X31, [X31 + 0x30]
	0x03B908A0 STR X31, [X31 + 0x18]
	0x03B908A4 LDR X0, [X22]
	0x03B908A8 LDR X20, [X19 + 0x38]
	0x03B908AC BL 0x1C16F10
	0x03B908B0 LDR X2, [X21]
	0x03B908B4 MOV X1, X31
	0x03B908B8 MOV X3, X31
	0x03B908BC MOV X21, X0
	0x03B908C0 BL 0x24AD1FC
	0x03B908C4 CBZ X20, 0x3B90B80
	0x03B908C8 ADRP X8, 0x5CC000
	0x03B908CC LDR X8, [X8 + 0x518]
	0x03B908D0 MOV X0, X20
	0x03B908D4 MOV X1, X21
	0x03B908D8 LDR X2, [X8]
	0x03B908DC BL 0x2DC077C
	0x03B908E0 LDR X8, [X19 + 0x38]
	0x03B908E4 CBZ X8, 0x3B90B80
	0x03B908E8 LDR W8, [X8 + 0x20]
	0x03B908EC CBZ W8, 0x3B90B54
	0x03B908F0 ADRP X8, 0x563000
	0x03B908F4 LDR X8, [X8 + 0x598]
	0x03B908F8 LDR X20, [X19 + 0x20]
	0x03B908FC LDR X0, [X8]
	0x03B90900 LDR W8, [X0 + 0xE0]
	0x03B90904 CBNZ W8, 0x3B9090C
	0x03B90908 BL 0x1C16DFC
	0x03B9090C MOV X0, X20
	0x03B90910 MOV X1, X31
	0x03B90914 MOV X2, X31
	0x03B90918 BL 0x3C3883C
	0x03B9091C TBNZ X0, 0x0, 0x3B90B54
	0x03B90920 ADRP X22, 0x5CA000
	0x03B90924 LDR X22, [X22 + 0xE50]
	0x03B90928 LDR X0, [X22]
	0x03B9092C LDR W8, [X0 + 0xE0]
	0x03B90930 CBNZ W8, 0x3B9093C
	0x03B90934 BL 0x1C16DFC
	0x03B90938 LDR X0, [X22]
	0x03B9093C LDR X8, [X0 + 0xB8]
	0x03B90940 LDR X8, [X8]
	0x03B90944 CBZ X8, 0x3B90B80
	0x03B90948 LDP W2, W9, [X8 + 0x18]
	0x03B9094C ADD W9, W9, 0x1
	0x03B90950 CMP W2, 0x1
	0x03B90954 STP W31, W9, [X8 + 0x18]
	0x03B90958 B.LT 0x3B9096C
	0x03B9095C LDR X0, [X8 + 0x10]
	0x03B90960 MOV W1, W31
	0x03B90964 MOV X3, X31
	0x03B90968 BL 0x339FA34
	0x03B9096C LDR X0, [X19 + 0x38]
	0x03B90970 CBZ X0, 0x3B90B80
	0x03B90974 ADRP X8, 0x5CA000
	0x03B90978 LDR X8, [X8 + 0x678]
	0x03B9097C LDR X1, [X8]
	0x03B90980 ADD X8, X31, 0x0
	0x03B90984 BL 0x2DBE924
	0x03B90988 LDR V0, [X31]
	0x03B9098C LDR X8, [X31 + 0x10]
	0x03B90990 ADRP X21, 0x5CA000
	0x03B90994 ADRP X23, 0x5CC000
	0x03B90998 ADRP X24, 0x5CC000
	0x03B9099C LDR X21, [X21 + 0x668]
	0x03B909A0 LDR X23, [X23 + 0x528]
	0x03B909A4 LDR X24, [X24 + 0x4F8]
	0x03B909A8 STR V0, [X31 + 0x2]
	0x03B909AC STR X8, [X31 + 0x30]
	0x03B909B0 ADRP X25, 0x5CB000
	0x03B909B4 LDR X25, [X25 + 0x828]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X21, 0x853000
	015 Move W8, [X21+2943]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {69}
	022 Move X0, 0x5CC000
	023 Move X0, [X0+3192]
	024 Call 0x1C17CF4
	025 Move X0, 0x5CD000
	026 Move X0, [X0+1064]
	027 Call 0x1C17CF4
	028 Move X0, 0x5CD000
	029 Move X0, [X0+1072]
	030 Call 0x1C17CF4
	031 Move X0, 0x5CD000
	032 Move X0, [X0+1080]
	033 Call 0x1C17CF4
	034 Move X0, 0x5CD000
	035 Move X0, [X0+1088]
	036 Call 0x1C17CF4
	037 Move X0, 0x5CD000
	038 Move X0, [X0+1096]
	039 Call 0x1C17CF4
	040 Move X0, 0x5CD000
	041 Move X0, [X0+1104]
	042 Call 0x1C17CF4
	043 Move X0, 0x5CD000
	044 Move X0, [X0+1112]
	045 Call 0x1C17CF4
	046 Move X0, 0x5CD000
	047 Move X0, [X0+1120]
	048 Call 0x1C17CF4
	049 Move X0, 0x5CD000
	050 Move X0, [X0+1128]
	051 Call 0x1C17CF4
	052 Move X0, 0x5CD000
	053 Move X0, [X0+1016]
	054 Call 0x1C17CF4
	055 Move X0, 0x564000
	056 Move X0, [X0+1432]
	057 Call 0x1C17CF4
	058 Move X0, 0x5CD000
	059 Move X0, [X0+1024]
	060 Call 0x1C17CF4
	061 Move X0, 0x5CD000
	062 Move X0, [X0+1032]
	063 Call 0x1C17CF4
	064 Move X0, 0x5CB000
	065 Move X0, [X0+1536]
	066 Call 0x1C17CF4
	067 Move W8, 1
	068 Move [X21+2943], W8
	069 NotImplemented "Instruction MOVI not yet implemented."
	070 Move [X31+80], X31
	071 Move [X31+48], V0
	072 Move [X31+56], V0
	073 Compare X20, 0
	074 JumpIfEqual {228}
	075 Move X0, [X19+24]
	076 Compare X0, 0
	077 JumpIfEqual {191}
	078 Move X8, 0x5CD000
	079 Move X8, [X8+1064]
	080 Move X26, 0x5CD000
	081 Move X27, 0x5CD000
	082 Move X28, 0x564000
	083 Move X29, 0x5CC000
	084 Move X26, [X26+1080]
	085 Move X27, [X27+1128]
	086 Move X28, [X28+1432]
	087 Move X29, [X29+3192]
	088 Move X1, [X8]
	089 Move X24, 0x5CD000
	090 Move X24, [X24+1032]
	091 Add X8, X31, 8
	092 Call Dictionary`2<Object, Object>.GetEnumerator, X0
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 Move X8, [X31+40]
	096 Move W25, W31
	097 Move [X31+48], V0
	098 Move [X31+56], V1
	099 Move [X31+80], X8
	100 Move X1, [X26]
	101 Add X0, X31, 48
	102 Call Enumerator<Object, Object>.MoveNext, X0
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfNotEqual {163}
	107 Move X21, [X31+72]
	108 Compare X21, 0
	109 JumpIfEqual {226}
	110 Move X22, [X31+64]
	111 Move X2, [X27]
	112 Move X0, X21
	113 Move X1, X20
	114 Call List`1<Object>.Remove, X0, X1
	115 Move TEMP, X0
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfNotEqual {161}
	119 Move W8, [X21+24]
	120 Compare W8, 0
	121 JumpIfNotEqual {161}
	122 Move X0, [X28]
	123 Move W8, [X0+224]
	124 Compare W8, 0
	125 JumpIfNotEqual {127}
	126 Call 0x1C17DFC
	127 Move X0, X22
	128 Move X1, X31
	129 Move X2, X31
	130 Call Object.op_Inequality, X0, X1
	131 Move TEMP, X0
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfNotEqual {161}
	135 Move X0, [X29]
	136 Call 0x1C17F10
	137 Move X8, 0x5CD000
	138 Move X8, [X8+1024]
	139 Move X23, X0
	140 Move X2, [X8]
	141 Move X1, X19
	142 Move X3, X31
	143 Call Action`1<Object>..ctor, X0, X1, X2
	144 Compare X22, 0
	145 JumpIfEqual {227}
	146 Move X0, X22
	147 Move X1, X23
	148 Move X2, X31
	149 Call LocomotionProvider.remove_beginLocomotion, X0, X1
	150 Move X0, [X29]
	151 Call 0x1C17F10
	152 Move X2, [X24]
	153 Move X23, X0
	154 Move X1, X19
	155 Move X3, X31
	156 Call Action`1<Object>..ctor, X0, X1, X2
	157 Move X0, X22
	158 Move X1, X23
	159 Move X2, X31
	160 Call LocomotionProvider.remove_endLocomotion, X0, X1
	161 Move W8, [X21+24]
	162 Add W25, W8, W25
	163 Move X8, 0x5CD000
	164 Move X8, [X8+1072]
	165 Add X0, X31, 48
	166 Move X1, [X8]
	167 Call Enumerator<Object, Object>.Dispose, X0
	168 Compare W25, 0
	169 JumpIfNotEqual {212}
	170 Move X8, [X19+24]
	171 Compare X8, 0
	172 JumpIfEqual {191}
	173 Move X20, 0x5CB000
	174 Move X20, [X20+1536]
	175 Move X0, [X20]
	176 Move W8, [X0+224]
	177 Compare W8, 0
	178 JumpIfNotEqual {181}
	179 Call 0x1C17DFC
	180 Move X0, [X20]
	181 Move X8, [X0+184]
	182 Move X0, [X8]
	183 Compare X0, 0
	184 JumpIfEqual {246}
	185 Move X8, 0x5CD000
	186 Move X1, [X19+24]
	187 Move X8, [X8+1120]
	188 Move X2, [X8]
	189 Call 0x2EF20B8, X0, X1
	190 Move [X19+24], X31
	191 Move X8, [X19+32]
	192 Compare X8, 0
	193 JumpIfEqual {212}
	194 Move X20, 0x5CB000
	195 Move X20, [X20+1536]
	196 Move X0, [X20]
	197 Move W8, [X0+224]
	198 Compare W8, 0
	199 JumpIfNotEqual {202}
	200 Call 0x1C17DFC
	201 Move X0, [X20]
	202 Move X8, [X0+184]
	203 Move X0, [X8+8]
	204 Compare X0, 0
	205 JumpIfEqual {246}
	206 Move X8, 0x5CD000
	207 Move X1, [X19+32]
	208 Move X8, [X8+1112]
	209 Move X2, [X8]
	210 Call 0x2EF20B8, X0, X1
	211 Move [X19+32], X31
	212 Move X20, [X31+176]
	213 Move X19, [X31+184]
	214 Move X22, [X31+160]
	215 Move X21, [X31+168]
	216 Move X24, [X31+144]
	217 Move X23, [X31+152]
	218 Move X26, [X31+128]
	219 Move X25, [X31+136]
	220 Move X28, [X31+112]
	221 Move X27, [X31+120]
	222 Move X29, [X31+96]
	223 Move X30, [X31+104]
	224 Add X31, X31, 192
	225 Return 
	226 Call 0x1C17F20
	227 Call 0x1C17F20
	228 Move X0, 0x569000
	229 Move X0, [X0+1320]
	230 Call 0x1C17D08
	231 Call 0x1C17F10
	232 Move X19, X0
	233 Move X0, 0x5CD000
	234 Move X0, [X0+1040]
	235 Call 0x1C17D08
	236 Move X1, X0
	237 Move X0, X19
	238 Move X2, X31
	239 Call ArgumentNullException..ctor, X0, X1
	240 Move X0, 0x5CD000
	241 Move X0, [X0+1136]
	242 Call 0x1C17D08
	243 Move X1, X0
	244 Move X0, X19
	245 Call 0x1C17DEC
	246 Call 0x1C17F20
	247 Move X20, X0
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Move X0, X20
	250 Call 0x3EB2AD0
	251 Move X21, [X0]
	252 Call 0x3EB2AE0
	253 Move X8, 0x5CD000
	254 Move X8, [X8+1072]
	255 Add X0, X31, 48
	256 Move X1, [X8]
	257 Call Enumerator<Object, Object>.Dispose, X0
	258 Compare X21, 0
	259 JumpIfEqual {168}
	260 Move X0, X21
	261 Call 0x1C17F18
	262 Move X21, X31
	263 Move X20, X0
	264 Move X8, 0x5CD000
	265 Move X8, [X8+1072]
	266 Move X1, [X8]
	267 Add X0, X31, 48
	268 Call Enumerator<Object, Object>.Dispose, X0
	269 Compare X21, 0
	270 JumpIfNotEqual {273}
	271 Move X0, X20
	272 Call 0x1D2D690
	273 Move X0, X21
	274 Call 0x1C17F18
	275 Call 0x1991590

Method: System.Boolean TryGetOriginTransform(UnityEngine.XR.Interaction.Toolkit.LocomotionProvider locomotionProvider, out UnityEngine.Transform originTransform)

Disassembly:
	0x03B90528 ADRP X0, 0x5CB000
	0x03B9052C LDR X0, [X0 + 0x7C0]
	0x03B90530 BL 0x1C16CF4
	0x03B90534 ADRP X0, 0x5CB000
	0x03B90538 LDR X0, [X0 + 0x770]
	0x03B9053C BL 0x1C16CF4
	0x03B90540 ADRP X0, 0x5CB000
	0x03B90544 LDR X0, [X0 + 0x8E0]
	0x03B90548 BL 0x1C16CF4
	0x03B9054C ADRP X0, 0x5CB000
	0x03B90550 LDR X0, [X0 + 0x8E8]
	0x03B90554 BL 0x1C16CF4
	0x03B90558 ADRP X0, 0x5CB000
	0x03B9055C LDR X0, [X0 + 0x8F0]
	0x03B90560 BL 0x1C16CF4
	0x03B90564 ADRP X0, 0x5CC000
	0x03B90568 LDR X0, [X0 + 0x500]
	0x03B9056C BL 0x1C16CF4
	0x03B90570 ADRP X0, 0x5CC000
	0x03B90574 LDR X0, [X0 + 0x508]
	0x03B90578 BL 0x1C16CF4
	0x03B9057C ADRP X0, 0x5CB000
	0x03B90580 LDR X0, [X0 + 0x8F8]
	0x03B90584 BL 0x1C16CF4
	0x03B90588 ADRP X0, 0x5CB000
	0x03B9058C LDR X0, [X0 + 0x900]
	0x03B90590 BL 0x1C16CF4
	0x03B90594 ADRP X0, 0x563000
	0x03B90598 LDR X0, [X0 + 0x598]
	0x03B9059C BL 0x1C16CF4
	0x03B905A0 MOVZ W8, 0x1
	0x03B905A4 STRB W8, [X21 + 0xB8E]
	0x03B905A8 MOVI V0.2D, 0x0
	0x03B905AC STR X31, [X31 + 0x38]
	0x03B905B0 STR X31, [X31 + 0x20]
	0x03B905B4 STP V0, V0, [X31]
	0x03B905B8 LDR X0, [X19 + 0x38]
	0x03B905BC CBZ X0, 0x3B90710
	0x03B905C0 ADRP X8, 0x5CC000
	0x03B905C4 LDR X8, [X8 + 0x500]
	0x03B905C8 MOV X1, X20
	0x03B905CC LDR X2, [X8]
	0x03B905D0 BL 0x2DBE67C
	0x03B905D4 TBNZ X0, 0x0, 0x3B906FC
	0x03B905D8 LDR X0, [X19 + 0x28]
	0x03B905DC CBZ X0, 0x3B90710
	0x03B905E0 ADRP X8, 0x5CB000
	0x03B905E4 LDR X8, [X8 + 0x770]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x853000
	007 Move X22, 0x564000
	008 Move W8, [X21+2944]
	009 Move X22, [X22+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x564000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move X0, 0x5CB000
	020 Move X0, [X0+1536]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2944], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X20
	030 Move X1, X31
	031 Move X2, X31
	032 Call Object.op_Inequality, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {56}
	037 Compare X20, 0
	038 JumpIfEqual {64}
	039 Move X8, 0x5CB000
	040 Move X8, [X8+1536]
	041 Move X20, [X20+48]
	042 Move X0, [X8]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X20
	048 Move X1, X19
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+48]
	054 Call TeleportationMonitor.TryGetOriginTransform, X0, X1
	055 Return X0
	056 Move [X19], X31
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move W0, W31
	062 Move X30, [X31+48]
	063 Return X0
	064 Call 0x1C17F20

Method: System.Boolean TryGetOriginTransform(UnityEngine.XR.Interaction.Toolkit.LocomotionSystem system, out UnityEngine.Transform originTransform)

Disassembly:
	0x03B909B8 LDR X1, [X21]
	0x03B909BC ADD X0, X31, 0x20
	0x03B909C0 BL 0x2BC3C64
	0x03B909C4 TBZ X0, 0x0, 0x3B90AA8
	0x03B909C8 LDR X0, [X19 + 0x20]
	0x03B909CC CBZ X0, 0x3B90B6C
	0x03B909D0 LDR X20, [X31 + 0x30]
	0x03B909D4 ADD X2, X31, 0x18
	0x03B909D8 MOV X1, X20
	0x03B909DC MOV X3, X31
	0x03B909E0 BL 0x3B72C1C
	0x03B909E4 TBZ X0, 0x0, 0x3B909B8
	0x03B909E8 LDR X0, [X22]
	0x03B909EC LDR W8, [X0 + 0xE0]
	0x03B909F0 CBNZ W8, 0x3B909FC
	0x03B909F4 BL 0x1C16DFC
	0x03B909F8 LDR X0, [X22]
	0x03B909FC LDR X8, [X0 + 0xB8]
	0x03B90A00 LDR X0, [X8]
	0x03B90A04 CBZ X0, 0x3B90B74
	0x03B90A08 LDR W10, [X0 + 0x1C]
	0x03B90A0C LDR X8, [X0 + 0x10]
	0x03B90A10 LDR X9, [X23]
	0x03B90A14 ADD W10, W10, 0x1
	0x03B90A18 STR W10, [X0 + 0x1C]
	0x03B90A1C CBZ X8, 0x3B90B78
	0x03B90A20 LDRSW X10, [X0 + 0x18]
	0x03B90A24 LDR W11, [X8 + 0x18]
	0x03B90A28 CMP W10, W11
	0x03B90A2C B.CS 0x3B90A44
	0x03B90A30 ADD W9, W10, 0x1
	0x03B90A34 ADD X8, X8, X10, 0x3, LSL
	0x03B90A38 STR W9, [X0 + 0x18]
	0x03B90A3C STR X20, [X8 + 0x20]
	0x03B90A40 B 0x3B90A58
	0x03B90A44 LDR X8, [X9 + 0x20]
	0x03B90A48 LDR X8, [X8 + 0xC0]
	0x03B90A4C LDR X2, [X8 + 0x70]
	0x03B90A50 MOV X1, X20
	0x03B90A54 BL 0x301BF90
	0x03B90A58 LDR X0, [X19 + 0x28]
	0x03B90A5C CBZ X0, 0x3B90B70
	0x03B90A60 LDR X2, [X31 + 0x18]
	0x03B90A64 LDR X3, [X24]
	0x03B90A68 MOV X1, X20
	0x03B90A6C BL 0x2AA5084
	0x03B90A70 LDR X0, [X19 + 0x30]
	0x03B90A74 CBZ X0, 0x3B90B7C
	0x03B90A78 LDR X1, [X31 + 0x18]
	0x03B90A7C LDR X2, [X25]
	0x03B90A80 BL 0x2DBEF30
	0x03B90A84 TBZ X0, 0x0, 0x3B909B8
	0x03B90A88 LDR X8, [X19 + 0x10]
	0x03B90A8C CBZ X8, 0x3B909B8
	0x03B90A90 LDR X1, [X31 + 0x18]
	0x03B90A94 LDR X0, [X8 + 0x40]
	0x03B90A98 LDR X9, [X8 + 0x18]
	0x03B90A9C LDR X2, [X8 + 0x28]
	0x03B90AA0 BLR X9
	0x03B90AA4 B 0x3B909B8
	0x03B90AA8 ADRP X8, 0x5CA000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x853000
	007 Move X21, 0x564000
	008 Move W8, [X22+2945]
	009 Move X21, [X21+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x564000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2945], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X31
	028 Move X2, X31
	029 Call Object.op_Inequality, X0, X1
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {72}
	034 Compare X20, 0
	035 JumpIfEqual {82}
	036 Move X0, [X21]
	037 Move X20, [X20+48]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X1, X31
	044 Move X2, X31
	045 Call Object.op_Inequality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {72}
	050 Compare X20, 0
	051 JumpIfEqual {82}
	052 Move X0, [X21]
	053 Move X20, [X20+56]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, X20
	059 Move X1, X31
	060 Move X2, X31
	061 Call Object.op_Inequality, X0, X1
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {72}
	066 Compare X20, 0
	067 JumpIfEqual {82}
	068 Move X0, X20
	069 Move X1, X31
	070 Call GameObject.get_transform, X0
	071 Move W8, 1
	072 Move X0, X31
	073 Move W8, W31
	074 Move [X19], X0
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move W0, W8
	080 Move X30, [X31+48]
	081 Return X0
	082 Call 0x1C17F20

Method: System.Boolean FindTeleportationProviders()

Disassembly:
	0x03B90434 BL 0x1C16DFC
	0x03B90438 MOV X0, X21
	0x03B9043C MOV X1, X31
	0x03B90440 MOV X2, X31
	0x03B90444 BL 0x3C3883C
	0x03B90448 TBNZ X0, 0x0, 0x3B904E4
	0x03B9044C LDR X0, [X19 + 0x20]
	0x03B90450 CBZ X0, 0x3B904F4
	0x03B90454 ADD X2, X31, 0x8
	0x03B90458 MOV X1, X20
	0x03B9045C MOV X3, X31
	0x03B90460 BL 0x3B72C1C
	0x03B90464 TBZ X0, 0x0, 0x3B904C8
	0x03B90468 LDR X0, [X19 + 0x28]
	0x03B9046C CBZ X0, 0x3B904F4
	0x03B90470 ADRP X8, 0x5CC000
	0x03B90474 LDR X2, [X31 + 0x8]
	0x03B90478 LDR X8, [X8 + 0x4F8]
	0x03B9047C MOV X1, X20
	0x03B90480 LDR X3, [X8]
	0x03B90484 BL 0x2AA5084
	0x03B90488 LDR X0, [X19 + 0x30]
	0x03B9048C CBZ X0, 0x3B904F4
	0x03B90490 ADRP X8, 0x5CB000
	0x03B90494 LDR X1, [X31 + 0x8]
	0x03B90498 LDR X8, [X8 + 0x828]
	0x03B9049C LDR X2, [X8]
	0x03B904A0 BL 0x2DBEF30
	0x03B904A4 TBZ X0, 0x0, 0x3B904E4
	0x03B904A8 LDR X8, [X19 + 0x10]
	0x03B904AC CBZ X8, 0x3B904E4
	0x03B904B0 LDR X1, [X31 + 0x8]
	0x03B904B4 LDR X9, [X8 + 0x18]
	0x03B904B8 LDR X0, [X8 + 0x40]
	0x03B904BC LDR X2, [X8 + 0x28]
	0x03B904C0 BLR X9
	0x03B904C4 B 0x3B904E4
	0x03B904C8 LDR X0, [X19 + 0x38]
	0x03B904CC CBZ X0, 0x3B904F4
	0x03B904D0 ADRP X8, 0x5CA000
	0x03B904D4 LDR X8, [X8 + 0x780]
	0x03B904D8 MOV X1, X20
	0x03B904DC LDR X2, [X8]
	0x03B904E0 BL 0x2DBEF30
	0x03B904E4 LDP X20, X19, [X31 + 0x20]
	0x03B904E8 LDP X22, X21, [X31 + 0x10]
	0x03B904EC LDR X30, [X31], #0x30
	0x03B904F0 RET
	0x03B904F4 BL 0x1C16F20
	0x03B904F8 SUB X31, X31, 0x60
	0x03B904FC STR X30, [X31 + 0x30]
	0x03B90500 STP X22, X21, [X31 + 0x40]
	0x03B90504 STP X20, X19, [X31 + 0x50]
	0x03B90508 ADRP X21, 0x852000
	0x03B9050C LDRB W8, [X21 + 0xB8E]
	0x03B90510 MOV X20, X1
	0x03B90514 MOV X19, X0
	0x03B90518 TBNZ X8, 0x0, 0x3B905A8
	0x03B9051C ADRP X0, 0x5CB000
	0x03B90520 LDR X0, [X0 + 0x8D8]
	0x03B90524 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x853000
	005 Move X20, 0x5CB000
	006 Move W8, [X19+2946]
	007 Move X20, [X20+1536]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x5CD000
	013 Move X0, [X0+1056]
	014 Call 0x1C17CF4
	015 Move X0, 0x564000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move X0, 0x5CB000
	019 Move X0, [X0+1536]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+2946], W8
	023 Move X8, [X20]
	024 Move W9, [X8+224]
	025 Compare W9, 0
	026 JumpIfNotEqual {30}
	027 Move X0, X8
	028 Call 0x1C17DFC
	029 Move X8, [X20]
	030 Move X9, [X8+184]
	031 Move X9, [X9+16]
	032 Compare X9, 0
	033 JumpIfNotEqual {55}
	034 Move X8, 0x564000
	035 Move X8, [X8+1432]
	036 Move X0, [X8]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X8, 0x5CD000
	042 Move X8, [X8+1056]
	043 Move X0, [X8]
	044 Call 0x222E200
	045 Move X8, [X20]
	046 Move X19, X0
	047 Move W9, [X8+224]
	048 Compare W9, 0
	049 JumpIfNotEqual {53}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Move X8, [X20]
	053 Move X9, [X8+184]
	054 Move [X9+16], X19
	055 Move W9, [X8+224]
	056 Compare W9, 0
	057 JumpIfNotEqual {61}
	058 Move X0, X8
	059 Call 0x1C17DFC
	060 Move X8, [X20]
	061 Move X8, [X8+184]
	062 Move X8, [X8+16]
	063 Compare X8, 0
	064 JumpIfEqual {72}
	065 Move W8, [X8+24]
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 NotImplemented "Instruction CSET not yet implemented."
	070 Move X30, [X31+32]
	071 Return X0
	072 Call 0x1C17F20

Method: System.Void OnBeginTeleportation(UnityEngine.XR.Interaction.Toolkit.LocomotionSystem locomotionSystem)

Disassembly:
	0x03B90AAC LDR X8, [X8 + 0x660]
	0x03B90AB0 ADD X0, X31, 0x20
	0x03B90AB4 LDR X1, [X8]
	0x03B90AB8 BL 0x2BC3C60
	0x03B90ABC LDR X0, [X22]
	0x03B90AC0 LDR W8, [X0 + 0xE0]
	0x03B90AC4 CBNZ W8, 0x3B90AD0
	0x03B90AC8 BL 0x1C16DFC
	0x03B90ACC LDR X0, [X22]
	0x03B90AD0 ADRP X9, 0x565000
	0x03B90AD4 LDR X8, [X0 + 0xB8]
	0x03B90AD8 LDR X9, [X9 + 0x6D0]
	0x03B90ADC LDR X20, [X8]
	0x03B90AE0 LDR X0, [X9]
	0x03B90AE4 BL 0x1C16F10
	0x03B90AE8 ADRP X8, 0x5CC000
	0x03B90AEC LDR X8, [X8 + 0x538]
	0x03B90AF0 MOV X1, X19
	0x03B90AF4 MOV X3, X31
	0x03B90AF8 MOV X21, X0
	0x03B90AFC LDR X2, [X8]
	0x03B90B00 BL 0x2A6B948
	0x03B90B04 CBZ X20, 0x3B90B80
	0x03B90B08 ADRP X8, 0x5CC000
	0x03B90B0C LDR X8, [X8 + 0x530]
	0x03B90B10 MOV X0, X20
	0x03B90B14 MOV X1, X21
	0x03B90B18 LDR X2, [X8]
	0x03B90B1C BL 0x301CAA0
	0x03B90B20 LDR X8, [X22]
	0x03B90B24 LDR X8, [X8 + 0xB8]
	0x03B90B28 LDR X8, [X8]
	0x03B90B2C CBZ X8, 0x3B90B80
	0x03B90B30 LDP W2, W9, [X8 + 0x18]
	0x03B90B34 ADD W9, W9, 0x1
	0x03B90B38 CMP W2, 0x1
	0x03B90B3C STP W31, W9, [X8 + 0x18]
	0x03B90B40 B.LT 0x3B90B54
	0x03B90B44 LDR X0, [X8 + 0x10]
	0x03B90B48 MOV W1, W31
	0x03B90B4C MOV X3, X31
	0x03B90B50 BL 0x339FA34
	0x03B90B54 LDP X20, X19, [X31 + 0x70]
	0x03B90B58 LDP X22, X21, [X31 + 0x60]
	0x03B90B5C LDP X24, X23, [X31 + 0x50]
	0x03B90B60 LDP X30, X25, [X31 + 0x40]
	0x03B90B64 ADD X31, X31, 0x80
	0x03B90B68 RET
	0x03B90B6C BL 0x1C16F20
	0x03B90B70 BL 0x1C16F20
	0x03B90B74 BL 0x1C16F20
	0x03B90B78 BL 0x1C16F20
	0x03B90B7C BL 0x1C16F20
	0x03B90B80 BL 0x1C16F20
	0x03B90B84 B 0x3B90BAC
	0x03B90B88 B 0x3B90BAC
	0x03B90B8C B 0x3B90BAC
	0x03B90B90 B 0x3B90BAC
	0x03B90B94 B 0x3B90BAC
	0x03B90B98 B 0x3B90BAC
	0x03B90B9C B 0x3B90BAC
	0x03B90BA0 B 0x3B90BAC
	0x03B90BA4 B 0x3B90BAC
	0x03B90BA8 B 0x3B90BAC
	0x03B90BAC MOV X20, X0
	0x03B90BB0 CMP W1, 0x1
	0x03B90BB4 B.NE 0x3B90BE8
	0x03B90BB8 MOV X0, X20
	0x03B90BBC BL 0x3EB1AD0
	0x03B90BC0 LDR X21, [X0]
	0x03B90BC4 BL 0x3EB1AE0
	0x03B90BC8 ADRP X8, 0x5CA000
	0x03B90BCC LDR X8, [X8 + 0x660]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X21, 0x853000
	008 Move X22, 0x5CB000
	009 Move W8, [X21+2947]
	010 Move X22, [X22+1536]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x5CD000
	018 Move X0, [X0+1144]
	019 Call 0x1C17CF4
	020 Move X0, 0x5CD000
	021 Move X0, [X0+1152]
	022 Call 0x1C17CF4
	023 Move X0, 0x5CB000
	024 Move X0, [X0+1536]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+2947], W8
	028 Move X0, [X22]
	029 Move [X31+72], X31
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Add X1, X31, 72
	035 Move X0, X19
	036 Call TeleportationMonitor.TryGetOriginTransform, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {81}
	041 Move X21, [X20+32]
	042 Compare X21, 0
	043 JumpIfNotEqual {60}
	044 Move X0, [X22]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X22]
	050 Move X8, [X0+184]
	051 Move X0, [X8+8]
	052 Compare X0, 0
	053 JumpIfEqual {88}
	054 Move X8, 0x5CD000
	055 Move X8, [X8+1152]
	056 Move X1, [X8]
	057 Call 0x2EF1FD0, X0
	058 Move X21, X0
	059 Move [X20+32], X0
	060 Move X0, [X31+72]
	061 Add X8, X31, 32
	062 Move X1, X31
	063 Call TransformExtensions.GetWorldPose, X0
	064 Move V0, [X31+2]
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 Move [X31], V0
	067 Move [X31+12], V1
	068 Compare X21, 0
	069 JumpIfEqual {88}
	070 Move X8, 0x5CD000
	071 Move X8, [X8+1144]
	072 Move V0, [X31]
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 Add X2, X31, 32
	075 Move X3, [X8]
	076 Move X0, X21
	077 Move X1, X19
	078 Move [X31+2], V0
	079 Move [X31+44], V1
	080 Call Dictionary`2<Object, Pose>.set_Item, X0, X1, X2
	081 Move X20, [X31+96]
	082 Move X19, [X31+104]
	083 Move X22, [X31+80]
	084 Move X21, [X31+88]
	085 Move X30, [X31+64]
	086 Add X31, X31, 112
	087 Return 
	088 Call 0x1C17F20

Method: System.Void OnEndTeleportation(UnityEngine.XR.Interaction.Toolkit.LocomotionSystem locomotionSystem)

Disassembly:
	0x03B90BD0 ADD X0, X31, 0x20
	0x03B90BD4 LDR X1, [X8]
	0x03B90BD8 BL 0x2BC3C60
	0x03B90BDC CBZ X21, 0x3B90ABC
	0x03B90BE0 MOV X0, X21
	0x03B90BE4 BL 0x1C16F18
	0x03B90BE8 MOV X21, X31
	0x03B90BEC B 0x3B90BF4
	0x03B90BF0 MOV X20, X0
	0x03B90BF4 ADRP X8, 0x5CA000
	0x03B90BF8 LDR X8, [X8 + 0x660]
	0x03B90BFC LDR X1, [X8]
	0x03B90C00 ADD X0, X31, 0x20
	0x03B90C04 BL 0x2BC3C60
	0x03B90C08 CBNZ X21, 0x3B90C14
	0x03B90C0C MOV X0, X20
	0x03B90C10 BL 0x1D2C690
	0x03B90C14 MOV X0, X21
	0x03B90C18 BL 0x1C16F18
	0x03B90C1C BL 0x1990590
	0x03B90C20 STP X30, X21, [X31 - 0x20]!
	0x03B90C24 STP X20, X19, [X31 + 0x10]
	0x03B90C28 ADRP X21, 0x852000
	0x03B90C2C LDRB W8, [X21 + 0xB90]
	0x03B90C30 MOV X19, X1
	0x03B90C34 MOV X20, X0
	0x03B90C38 TBNZ X8, 0x0, 0x3B90C50
	0x03B90C3C ADRP X0, 0x5CC000
	0x03B90C40 LDR X0, [X0 + 0x500]
	0x03B90C44 BL 0x1C16CF4
	0x03B90C48 MOVZ W8, 0x1
	0x03B90C4C STRB W8, [X21 + 0xB90]
	0x03B90C50 LDR X0, [X20 + 0x38]
	0x03B90C54 CBZ X0, 0x3B90C74
	0x03B90C58 ADRP X8, 0x5CC000
	0x03B90C5C LDR X8, [X8 + 0x500]
	0x03B90C60 MOV X1, X19
	0x03B90C64 LDP X20, X19, [X31 + 0x10]
	0x03B90C68 LDR X2, [X8]
	0x03B90C6C LDP X30, X21, [X31], #0x20
	0x03B90C70 B 0x2DBE67C
	0x03B90C74 BL 0x1C16F20
	0x03B90C78 SUB X31, X31, 0x70
	0x03B90C7C STP X29, X30, [X31 + 0x10]
	0x03B90C80 STP X28, X27, [X31 + 0x20]
	0x03B90C84 STP X26, X25, [X31 + 0x30]
	0x03B90C88 STP X24, X23, [X31 + 0x40]
	0x03B90C8C STP X22, X21, [X31 + 0x50]
	0x03B90C90 STP X20, X19, [X31 + 0x60]
	0x03B90C94 ADRP X21, 0x852000
	0x03B90C98 ADRP X23, 0x5CA000
	0x03B90C9C ADRP X22, 0x5CC000
	0x03B90CA0 LDRB W8, [X21 + 0xB91]
	0x03B90CA4 LDR X23, [X23 + 0x2C8]
	0x03B90CA8 LDR X22, [X22 + 0x510]
	0x03B90CAC MOV X19, X1
	0x03B90CB0 MOV X20, X0
	0x03B90CB4 TBNZ X8, 0x0, 0x3B90D50
	0x03B90CB8 ADRP X0, 0x5CC000
	0x03B90CBC LDR X0, [X0 + 0x4F8]
	0x03B90CC0 BL 0x1C16CF4
	0x03B90CC4 ADRP X0, 0x5CB000
	0x03B90CC8 LDR X0, [X0 + 0x828]
	0x03B90CCC BL 0x1C16CF4
	0x03B90CD0 ADRP X0, 0x5CB000
	0x03B90CD4 LDR X0, [X0 + 0x350]
	0x03B90CD8 BL 0x1C16CF4
	0x03B90CDC ADRP X0, 0x5CC000
	0x03B90CE0 LDR X0, [X0 + 0x518]
	0x03B90CE4 BL 0x1C16CF4
	0x03B90CE8 ADRP X0, 0x5CC000
	0x03B90CEC LDR X0, [X0 + 0x500]
	0x03B90CF0 BL 0x1C16CF4
	0x03B90CF4 ADRP X0, 0x5CC000
	0x03B90CF8 LDR X0, [X0 + 0x520]
	0x03B90CFC BL 0x1C16CF4
	0x03B90D00 ADRP X0, 0x5CA000
	0x03B90D04 LDR X0, [X0 + 0x8D8]
	0x03B90D08 BL 0x1C16CF4
	0x03B90D0C ADRP X0, 0x5C3000
	0x03B90D10 LDR X0, [X0 + 0x898]
	0x03B90D14 BL 0x1C16CF4
	0x03B90D18 ADRP X0, 0x5C3000
	0x03B90D1C LDR X0, [X0 + 0x8A0]
	0x03B90D20 BL 0x1C16CF4
	0x03B90D24 ADRP X0, 0x563000
	0x03B90D28 LDR X0, [X0 + 0x598]
	0x03B90D2C BL 0x1C16CF4
	0x03B90D30 ADRP X0, 0x5CA000
	0x03B90D34 LDR X0, [X0 + 0x2C8]
	0x03B90D38 BL 0x1C16CF4
	0x03B90D3C ADRP X0, 0x5CC000
	0x03B90D40 LDR X0, [X0 + 0x510]
	0x03B90D44 BL 0x1C16CF4
	0x03B90D48 MOVZ W8, 0x1
	0x03B90D4C STRB W8, [X21 + 0xB91]
	0x03B90D50 STR X31, [X31 + 0x8]
	0x03B90D54 LDR X0, [X23]
	0x03B90D58 LDR X21, [X20 + 0x38]
	0x03B90D5C BL 0x1C16F10
	0x03B90D60 LDR X2, [X22]
	0x03B90D64 MOV X1, X31
	0x03B90D68 MOV X3, X31
	0x03B90D6C MOV X22, X0
	0x03B90D70 BL 0x24AD1FC
	0x03B90D74 CBZ X21, 0x3B90FEC
	0x03B90D78 ADRP X8, 0x5CC000
	0x03B90D7C LDR X8, [X8 + 0x518]
	0x03B90D80 MOV X0, X21
	0x03B90D84 MOV X1, X22
	0x03B90D88 LDR X2, [X8]
	0x03B90D8C BL 0x2DC077C
	0x03B90D90 LDR X8, [X20 + 0x38]
	0x03B90D94 CBZ X8, 0x3B90FEC
	0x03B90D98 LDR W8, [X8 + 0x20]
	0x03B90D9C CBZ W8, 0x3B90FCC
	0x03B90DA0 ADRP X23, 0x563000
	0x03B90DA4 LDR X23, [X23 + 0x598]
	0x03B90DA8 LDR X21, [X20 + 0x20]
	0x03B90DAC LDR X0, [X23]
	0x03B90DB0 LDR W8, [X0 + 0xE0]
	0x03B90DB4 CBNZ W8, 0x3B90DBC
	0x03B90DB8 BL 0x1C16DFC
	0x03B90DBC MOV X0, X21
	0x03B90DC0 MOV X1, X31
	0x03B90DC4 MOV X2, X31
	0x03B90DC8 BL 0x3C3883C
	0x03B90DCC TBNZ X0, 0x0, 0x3B90FCC
	0x03B90DD0 CBZ X19, 0x3B90FEC

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+144], D15
	003 Move [X31+152], D14
	004 Move [X31+160], D13
	005 Move [X31+168], D12
	006 Move [X31+176], D11
	007 Move [X31+184], D10
	008 Move [X31+192], D9
	009 Move [X31+200], D8
	010 Move [X31+208], X30
	011 Move [X31+224], X22
	012 Move [X31+232], X21
	013 Move [X31+240], X20
	014 Move [X31+248], X19
	015 Move X22, 0x853000
	016 Move X21, 0x5CB000
	017 Move W8, [X22+2948]
	018 Move X21, [X21+1536]
	019 Move X20, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0x5CD000
	026 Move X0, [X0+1160]
	027 Call 0x1C17CF4
	028 Move X0, 0x5CB000
	029 Move X0, [X0+1536]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+2948], W8
	033 Move X0, [X21]
	034 Move [X31+216], X31
	035 Move [X31+48], X31
	036 Move [X31+56], X31
	037 Move [X31+72], W31
	038 Move [X31+64], X31
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Add X1, X31, 216
	044 Move X0, X20
	045 Call TeleportationMonitor.TryGetOriginTransform, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {145}
	050 Move X0, [X19+32]
	051 Compare X0, 0
	052 JumpIfEqual {145}
	053 Move X8, 0x5CD000
	054 Move X8, [X8+1160]
	055 Add X2, X31, 48
	056 Move X1, X20
	057 Move X3, [X8]
	058 Call Dictionary`2<Object, Pose>.TryGetValue, X0, X1, X2
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {145}
	063 Move X20, [X31+216]
	064 Compare X20, 0
	065 JumpIfEqual {160}
	066 Move X0, X20
	067 Move X1, X31
	068 Call Transform.get_position, X0
	069 Move S15, [X31+48]
	070 Move S8, [X31+52]
	071 Move V9, [X31+56]
	072 Move X0, X20
	073 Move X1, X31
	074 Move [X31+8], S1
	075 Move [X31+16], S0
	076 Move V10, V2
	077 Call Transform.get_rotation, X0
	078 Move V11, V2
	079 Move S2, [X31+68]
	080 Move S4, [X31+72]
	081 Move V12, V0
	082 Move V13, V1
	083 Move S0, [X31+60]
	084 Move S1, [X31+64]
	085 Move V14, V3
	086 Move V3, V4
	087 Move X0, X31
	088 Call Quaternion.Inverse, X0
	089 Move X19, [X19+16]
	090 Compare X19, 0
	091 JumpIfEqual {145}
	092 Multiply S5, S12, S0
	093 Multiply S19, S13, S0
	094 Multiply S23, S11, S0
	095 Multiply S24, S14, S0
	096 Move V0, [X31+8]
	097 Multiply S6, S13, S1
	098 Multiply S16, S12, S1
	099 Multiply S25, S14, S1
	100 Multiply S26, S11, S1
	101 Subtract S1, S0, S8
	102 Move V0, [X31+12]
	103 Multiply S4, S14, S3
	104 Multiply S17, S14, S2
	105 Multiply S18, S11, S3
	106 Multiply S20, S13, S3
	107 Multiply S3, S12, S3
	108 Multiply S21, S13, S2
	109 Subtract S4, S4, S5
	110 Add S5, S17, S18
	111 Add S17, S25, S20
	112 Add S3, S24, S3
	113 Multiply S7, S11, S2
	114 Multiply S22, S12, S2
	115 Subtract S4, S4, S6
	116 Add S5, S16, S5
	117 Add S16, S23, S17
	118 Add S3, S21, S3
	119 Subtract S2, S10, S9
	120 Subtract S0, S0, S15
	121 Subtract S6, S4, S7
	122 Subtract S5, S5, S19
	123 Subtract S4, S16, S22
	124 Subtract S3, S3, S26
	125 Add X0, X31, 16
	126 Move X1, X31
	127 Move [X31+16], X31
	128 Move [X31+24], X31
	129 Move [X31+40], W31
	130 Move [X31+32], X31
	131 Call Pose..ctor, X0, X1, X2
	132 NotImplemented "Instruction LDUR not yet implemented."
	133 Move V1, [X31+1]
	134 Add X1, X31, 112
	135 Move [X31+92], V0
	136 Move [X31+5], V1
	137 Move V0, [X31+5]
	138 NotImplemented "Instruction LDUR not yet implemented."
	139 Move X8, [X19+24]
	140 Move X0, [X19+64]
	141 Move [X31+7], V0
	142 Move [X31+124], V1
	143 Move X2, [X19+40]
	144 NotImplemented "Instruction BLR not yet implemented."
	145 Move X20, [X31+240]
	146 Move X19, [X31+248]
	147 Move X22, [X31+224]
	148 Move X21, [X31+232]
	149 Move X30, [X31+208]
	150 Move D9, [X31+192]
	151 Move D8, [X31+200]
	152 Move D11, [X31+176]
	153 Move D10, [X31+184]
	154 Move D13, [X31+160]
	155 Move D12, [X31+168]
	156 Move D15, [X31+144]
	157 Move D14, [X31+152]
	158 Add X31, X31, 256
	159 Return 
	160 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03B90DD4 ADRP X24, 0x5CA000
	0x03B90DD8 LDR X8, [X19]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x03B90DDC LDR X24, [X24 + 0x8D8]
	0x03B90DE0 LDRH W9, [X8 + 0x12E]
	0x03B90DE4 LDR X1, [X24]
	0x03B90DE8 CBZ X9, 0x3B90E0C
	0x03B90DEC LDR X10, [X8 + 0xB0]
	0x03B90DF0 ADD X10, X10, 0x8
	0x03B90DF4 LDUR X11, [X10 - 0x8]
	0x03B90DF8 CMP X11, X1
	0x03B90DFC B.EQ 0x3B90E1C
	0x03B90E00 SUBS X9, X9, 0x1
	0x03B90E04 ADD X10, X10, 0x10
	0x03B90E08 B.NE 0x3B90DF4
	0x03B90E0C MOVZ W2, 0x5
	0x03B90E10 MOV X0, X19
	0x03B90E14 BL 0x1C5C788
	0x03B90E18 B 0x3B90E2C
	0x03B90E1C LDR W9, [X10]
	0x03B90E20 ADD W9, W9, 0x5
	0x03B90E24 ADD X8, X8, W9, 0x4, SXTW
	0x03B90E28 ADD X0, X8, 0x138
	0x03B90E2C LDP X8, X1, [X0]
	0x03B90E30 MOV X0, X19
	0x03B90E34 BLR X8
	0x03B90E38 CBZ X0, 0x3B90FEC
	0x03B90E3C LDR W25, [X0 + 0x18]
	0x03B90E40 CMP W25, 0x1
	0x03B90E44 B.LT 0x3B90FCC
	0x03B90E48 ADRP X26, 0x5C3000
	0x03B90E4C ADRP X27, 0x5CB000
	0x03B90E50 ADRP X28, 0x5CB000
	0x03B90E54 LDR X26, [X26 + 0x8A0]
	0x03B90E58 LDR X27, [X27 + 0x350]
	0x03B90E5C LDR X28, [X28 + 0x828]
	0x03B90E60 MOV W21, W31
	0x03B90E64 MOV X29, X31
	0x03B90E68 LDR X8, [X19]
	0x03B90E6C LDR X1, [X24]
	0x03B90E70 LDRH W9, [X8 + 0x12E]
	0x03B90E74 CBZ X9, 0x3B90E98
	0x03B90E78 LDR X10, [X8 + 0xB0]
	0x03B90E7C ADD X10, X10, 0x8
	0x03B90E80 LDUR X11, [X10 - 0x8]
	0x03B90E84 CMP X11, X1
	0x03B90E88 B.EQ 0x3B90EA8
	0x03B90E8C SUBS X9, X9, 0x1
	0x03B90E90 ADD X10, X10, 0x10
	0x03B90E94 B.NE 0x3B90E80
	0x03B90E98 MOVZ W2, 0x5
	0x03B90E9C MOV X0, X19
	0x03B90EA0 BL 0x1C5C788
	0x03B90EA4 B 0x3B90EB8
	0x03B90EA8 LDR W9, [X10]
	0x03B90EAC ADD W9, W9, 0x5
	0x03B90EB0 ADD X8, X8, W9, 0x4, SXTW
	0x03B90EB4 ADD X0, X8, 0x138
	0x03B90EB8 LDP X8, X1, [X0]
	0x03B90EBC MOV X0, X19
	0x03B90EC0 BLR X8
	0x03B90EC4 CBZ X0, 0x3B90FEC
	0x03B90EC8 LDR X2, [X26]
	0x03B90ECC MOV W1, W21
	0x03B90ED0 BL 0x301BCCC
	0x03B90ED4 LDR X8, [X23]
	0x03B90ED8 MOV X22, X0
	0x03B90EDC LDR W9, [X8 + 0xE0]
	0x03B90EE0 CBNZ W9, 0x3B90EEC
	0x03B90EE4 MOV X0, X8
	0x03B90EE8 BL 0x1C16DFC
	0x03B90EEC MOV X0, X22
	0x03B90EF0 MOV X1, X31
	0x03B90EF4 MOV X2, X31
	0x03B90EF8 BL 0x3C3883C
	0x03B90EFC TBNZ X0, 0x0, 0x3B90FC0
	0x03B90F00 LDR X0, [X20 + 0x38]
	0x03B90F04 CBZ X0, 0x3B90FEC
	0x03B90F08 LDR X2, [X27]
	0x03B90F0C MOV X1, X22
	0x03B90F10 BL 0x2DBE4B0
	0x03B90F14 TBZ X0, 0x0, 0x3B90FC0
	0x03B90F18 LDR X0, [X20 + 0x20]
	0x03B90F1C CBZ X0, 0x3B90FEC
	0x03B90F20 ADD X2, X31, 0x8
	0x03B90F24 MOV X1, X22
	0x03B90F28 MOV X3, X31
	0x03B90F2C BL 0x3B72C1C
	0x03B90F30 TBZ X0, 0x0, 0x3B90FC0
	0x03B90F34 LDR X8, [X31 + 0x8]
	0x03B90F38 CMP X8, X19
	0x03B90F3C B.NE 0x3B90FC0
	0x03B90F40 LDR X0, [X20 + 0x38]
	0x03B90F44 CBZ X0, 0x3B90FEC
	0x03B90F48 ADRP X8, 0x5CC000
	0x03B90F4C LDR X8, [X8 + 0x500]
	0x03B90F50 MOV X1, X22
	0x03B90F54 LDR X2, [X8]
	0x03B90F58 BL 0x2DBE67C
	0x03B90F5C LDR X0, [X20 + 0x28]
	0x03B90F60 CBZ X0, 0x3B90FEC
	0x03B90F64 ADRP X8, 0x5CC000
	0x03B90F68 LDR X8, [X8 + 0x4F8]
	0x03B90F6C MOV X1, X22
	0x03B90F70 MOV X2, X19
	0x03B90F74 LDR X3, [X8]
	0x03B90F78 BL 0x2AA5084
	0x03B90F7C LDR X0, [X20 + 0x30]
	0x03B90F80 CBZ X0, 0x3B90FEC
	0x03B90F84 LDR X2, [X28]
	0x03B90F88 MOV X1, X19
	0x03B90F8C BL 0x2DBEF30
	0x03B90F90 TBZ X0, 0x0, 0x3B90FC0
	0x03B90F94 LDR X22, [X20 + 0x10]
	0x03B90F98 CMP X22, 0x0
	0x03B90F9C CSEL X8, X29, X22, EQ
	0x03B90FA0 CBZ X22, 0x3B90FC0
	0x03B90FA4 CBZ X8, 0x3B90FEC
	0x03B90FA8 LDR X9, [X8 + 0x18]
	0x03B90FAC LDR X0, [X8 + 0x40]
	0x03B90FB0 LDR X2, [X8 + 0x28]
	0x03B90FB4 MOV X1, X19
	0x03B90FB8 BLR X9

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X19, 0x853000
	014 Move X21, 0x5CD000
	015 Move W8, [X19+2949]
	016 Move X21, [X21+1168]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {53}
	021 Move X0, 0x5CD000
	022 Move X0, [X0+1176]
	023 Call 0x1C17CF4
	024 Move X0, 0x5CD000
	025 Move X0, [X0+1184]
	026 Call 0x1C17CF4
	027 Move X0, 0x5CD000
	028 Move X0, [X0+1192]
	029 Call 0x1C17CF4
	030 Move X0, 0x5CD000
	031 Move X0, [X0+1200]
	032 Call 0x1C17CF4
	033 Move X0, 0x5CD000
	034 Move X0, [X0+1208]
	035 Call 0x1C17CF4
	036 Move X0, 0x5CD000
	037 Move X0, [X0+1216]
	038 Call 0x1C17CF4
	039 Move X0, 0x5CB000
	040 Move X0, [X0+1536]
	041 Call 0x1C17CF4
	042 Move X0, 0x5CD000
	043 Move X0, [X0+1224]
	044 Call 0x1C17CF4
	045 Move X0, 0x5CD000
	046 Move X0, [X0+1232]
	047 Call 0x1C17CF4
	048 Move X0, 0x5CD000
	049 Move X0, [X0+1168]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X19+2949], W8
	053 Move X29, 0x5CD000
	054 Move X20, 0x5CD000
	055 Move X29, [X29+1184]
	056 Move X20, [X20+1224]
	057 Move X0, [X21]
	058 Move X28, 0x5CD000
	059 Move X27, 0x5CD000
	060 Move X22, 0x5CB000
	061 Move X26, 0x5CD000
	062 Move X25, 0x5CD000
	063 Move X24, 0x5CD000
	064 Move X23, 0x5CD000
	065 Move X28, [X28+1208]
	066 Move X27, [X27+1192]
	067 Move X22, [X22+1536]
	068 Move W8, [X0+224]
	069 Move X26, [X26+1176]
	070 Move X25, [X25+1232]
	071 Move X24, [X24+1216]
	072 Move X23, [X23+1200]
	073 Compare W8, 0
	074 JumpIfNotEqual {77}
	075 Call 0x1C17DFC
	076 Move X0, [X21]
	077 Move X8, [X0+184]
	078 Move X0, [X29]
	079 Move X19, [X8]
	080 Call 0x1C17F10
	081 Move X2, [X20]
	082 Move X1, X19
	083 Move X3, X31
	084 Move X20, X0
	085 Call Func`1<Object>..ctor, X0, X1, X2
	086 Move X0, [X28]
	087 Call 0x1C17F10
	088 Move X7, [X27]
	089 Move W5, 1
	090 Move W6, 0x2710
	091 Move X1, X20
	092 Move X2, X31
	093 Move X3, X31
	094 Move X4, X31
	095 Move X19, X0
	096 Call 0x2EF1EC8, X0, X1, X2, X3, X4, X5, X6
	097 Move X8, [X22]
	098 Move X8, [X8+184]
	099 Move [X8], X19
	100 Move X8, [X21]
	101 Move X0, [X26]
	102 Move X8, [X8+184]
	103 Move X19, [X8]
	104 Call 0x1C17F10
	105 Move X2, [X25]
	106 Move X1, X19
	107 Move X3, X31
	108 Move X20, X0
	109 Call Func`1<Object>..ctor, X0, X1, X2
	110 Move X0, [X24]
	111 Call 0x1C17F10
	112 Move X7, [X23]
	113 Move W5, 1
	114 Move W6, 0x2710
	115 Move X1, X20
	116 Move X2, X31
	117 Move X3, X31
	118 Move X4, X31
	119 Move X19, X0
	120 Call 0x2EF1EC8, X0, X1, X2, X3, X4, X5, X6
	121 Move X8, [X22]
	122 Move X22, [X31+64]
	123 Move X21, [X31+72]
	124 Move X24, [X31+48]
	125 Move X23, [X31+56]
	126 Move X26, [X31+32]
	127 Move X25, [X31+40]
	128 Move X8, [X8+184]
	129 Move X28, [X31+16]
	130 Move X27, [X31+24]
	131 Move [X8+8], X19
	132 Move X20, [X31+80]
	133 Move X19, [X31+88]
	134 Move X29, [X31+96]
	135 Move X30, [X31+104]
	136 Return 

