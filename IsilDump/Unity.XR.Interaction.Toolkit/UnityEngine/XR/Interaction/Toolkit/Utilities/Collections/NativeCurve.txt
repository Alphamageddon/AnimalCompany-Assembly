Type: UnityEngine.XR.Interaction.Toolkit.Utilities.Collections.NativeCurve

Method: System.Boolean get_isCreated()

Disassembly:
	0x03B96F5C AND W8, W0, 0x1
	0x03B96F60 STRB W8, [X19 + 0x31]
	0x03B96F64 TBZ X0, 0x0, 0x3B96FD8
	0x03B96F68 LDRB W8, [X19 + 0x30]
	0x03B96F6C AND W25, W23, 0x1
	0x03B96F70 EOR W8, W8, 0x1
	0x03B96F74 ORR W8, W8, W25, 0x0
	0x03B96F78 CBZ W8, 0x3B9717C
	0x03B96F7C ADRP X8, 0x5C6000
	0x03B96F80 LDR X8, [X8 + 0x7E0]
	0x03B96F84 ADD X1, X31, 0x28
	0x03B96F88 MOV X0, X20
	0x03B96F8C LDR X2, [X8]
	0x03B96F90 BL 0x21A4990
	0x03B96F94 LDR X8, [X19 + 0x20]
	0x03B96F98 CBZ X8, 0x3B972C0
	0x03B96F9C TBZ X0, 0x0, 0x3B96FE0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x84D000
	005 Move W8, [X20+3039]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x588000
	012 Move X0, [X0+352]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3039], W8
	016 Move X8, [X19]
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction CSET not yet implemented."
	021 Move X30, [X31+32]
	022 Return X0

Method: System.Void InitializeValues(System.Int32 count, Unity.Collections.Allocator allocator = 4)

Disassembly:
	0x03B96FA0 MOVZ W9, 0x1
	0x03B96FA4 STRB W9, [X8 + 0x10]
	0x03B96FA8 LDR X1, [X31 + 0x28]
	0x03B96FAC MOV X0, X8
	0x03B96FB0 BL 0x3B97664
	0x03B96FB4 LDR X0, [X24]
	0x03B96FB8 LDR X23, [X31 + 0x28]
	0x03B96FBC LDR W8, [X0 + 0xE0]
	0x03B96FC0 CBNZ W8, 0x3B96FC8
	0x03B96FC4 BL 0x1C16DFC
	0x03B96FC8 MOV X0, X23
	0x03B96FCC MOV X1, X31
	0x03B96FD0 BL 0x3C394A8
	0x03B96FD4 B 0x3B96FE4
	0x03B96FD8 AND W25, W23, 0x1
	0x03B96FDC B 0x3B97184
	0x03B96FE0 STRB W31, [X8 + 0x10]
	0x03B96FE4 ADRP X8, 0x5C6000
	0x03B96FE8 LDR X8, [X8 + 0x7F0]
	0x03B96FEC ADD X1, X31, 0x18
	0x03B96FF0 MOV X0, X20
	0x03B96FF4 LDR X2, [X8]
	0x03B96FF8 BL 0x21A4990
	0x03B96FFC LDR X8, [X19 + 0x28]
	0x03B97000 CBZ X8, 0x3B972C0
	0x03B97004 TBZ X0, 0x0, 0x3B97050
	0x03B97008 MOVZ W9, 0x1
	0x03B9700C STRB W9, [X8 + 0x10]
	0x03B97010 LDR X23, [X31 + 0x18]
	0x03B97014 CBZ X23, 0x3B972C0
	0x03B97018 LDR W9, [X23 + 0x30]
	0x03B9701C STR W9, [X8 + 0x14]
	0x03B97020 LDR W9, [X23 + 0x2C]
	0x03B97024 STR W9, [X8 + 0x18]
	0x03B97028 LDRB W9, [X23 + 0x28]
	0x03B9702C STRB W9, [X8 + 0x1C]
	0x03B97030 LDR X0, [X24]
	0x03B97034 LDR W8, [X0 + 0xE0]
	0x03B97038 CBNZ W8, 0x3B97040
	0x03B9703C BL 0x1C16DFC
	0x03B97040 MOV X0, X23
	0x03B97044 MOV X1, X31
	0x03B97048 BL 0x3C394A8
	0x03B9704C B 0x3B97054

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0x84D000
	008 Move W8, [X22+3040]
	009 Move W20, W2
	010 Move W21, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x588000
	017 Move X0, [X0+344]
	018 Call 0x1C17CF4
	019 Move X0, 0x588000
	020 Move X0, [X0+296]
	021 Call 0x1C17CF4
	022 Move X0, 0x588000
	023 Move X0, [X0+352]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+3040], W8
	027 Move X22, 0x588000
	028 Move X8, [X19]
	029 Move X22, [X22+296]
	030 Compare X8, 0
	031 JumpIfEqual {37}
	032 Move X8, 0x587000
	033 Move X8, [X8+344]
	034 Move X0, X19
	035 Move X1, [X8]
	036 Call NativeArray`1<Single>.Dispose, X0
	037 Move X4, [X22]
	038 Add X0, X31, 0
	039 Move W1, W21
	040 Move W2, W20
	041 Move W3, W31
	042 Move [X31], X31
	043 Move [X31+8], X31
	044 Call NativeArray`1<Single>..ctor, X0, X1, X2, X3
	045 Move V0, [X31]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X30, [X31+16]
	049 Move [X19], V0
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Add X31, X31, 64
	053 Return 

Method: System.Void Update(UnityEngine.AnimationCurve curve, System.Int32 resolution)

Disassembly:
	0x03B97050 STRB W31, [X8 + 0x10]
	0x03B97054 ADRP X8, 0x5C5000
	0x03B97058 LDR X8, [X8 + 0x7E8]
	0x03B9705C ADD X1, X31, 0x10
	0x03B97060 MOV X0, X20
	0x03B97064 LDR X2, [X8]
	0x03B97068 BL 0x21A4990
	0x03B9706C LDR X8, [X19 + 0x18]
	0x03B97070 CBZ X8, 0x3B972C0
	0x03B97074 TBZ X0, 0x0, 0x3B970B0
	0x03B97078 MOVZ W9, 0x1
	0x03B9707C STRB W9, [X8 + 0x10]
	0x03B97080 LDR X1, [X31 + 0x10]
	0x03B97084 MOV X0, X8
	0x03B97088 BL 0x3B976EC
	0x03B9708C LDR X0, [X24]
	0x03B97090 LDR X23, [X31 + 0x10]
	0x03B97094 LDR W8, [X0 + 0xE0]
	0x03B97098 CBNZ W8, 0x3B970A0
	0x03B9709C BL 0x1C16DFC
	0x03B970A0 MOV X0, X23
	0x03B970A4 MOV X1, X31
	0x03B970A8 BL 0x3C394A8
	0x03B970AC B 0x3B970B4
	0x03B970B0 STRB W31, [X8 + 0x10]
	0x03B970B4 ADRP X26, 0x5C5000
	0x03B970B8 LDR X26, [X26 + 0x7F8]
	0x03B970BC ADD X23, X19, 0x48
	0x03B970C0 MOV X0, X20
	0x03B970C4 MOV X1, X23
	0x03B970C8 LDR X2, [X26]
	0x03B970CC BL 0x21A4990
	0x03B970D0 TBZ X0, 0x0, 0x3B9717C
	0x03B970D4 CBZ X22, 0x3B972C0
	0x03B970D8 LDR X2, [X26]
	0x03B970DC ADD X1, X31, 0x8
	0x03B970E0 MOV X0, X22
	0x03B970E4 BL 0x21A4990
	0x03B970E8 TBNZ X0, 0x0, 0x3B97168
	0x03B970EC CBZ X21, 0x3B972C0
	0x03B970F0 MOV X0, X21
	0x03B970F4 MOV X1, X31
	0x03B970F8 BL 0x3C389D4
	0x03B970FC MOV X21, X0
	0x03B97100 MOV X0, X20
	0x03B97104 MOV X1, X31
	0x03B97108 BL 0x3C389D4
	0x03B9710C ADRP X8, 0x5C5000
	0x03B97110 LDR X8, [X8 + 0x810]
	0x03B97114 ADRP X9, 0x5C5000
	0x03B97118 LDR X9, [X9 + 0x818]
	0x03B9711C MOV X3, X0
	0x03B97120 LDR X8, [X8]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x84C000
	008 Move W8, [X22+3041]
	009 Move W21, W2
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x587000
	017 Move X0, [X0+352]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3041], W8
	021 Compare X19, 0
	022 JumpIfEqual {53}
	023 Move X0, X19
	024 Move X1, X31
	025 Call AnimationCurve.get_preWrapMode, X0
	026 Move [X20+16], W0
	027 Move X0, X19
	028 Move X1, X31
	029 Call AnimationCurve.get_postWrapMode, X0
	030 Move X8, [X20]
	031 Move [X20+20], W0
	032 Compare X8, 0
	033 JumpIfEqual {36}
	034 Move W8, [X20+8]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W2, 4
	037 Move X0, X20
	038 Move W1, W21
	039 Call NativeCurve.InitializeValues, X0, X1, X2
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X22, X31
	042 NotImplemented "Instruction SCVTF not yet implemented."
	043 Move W21, W21
	044 NotImplemented "Instruction SCVTF not yet implemented."
	045 NotImplemented "Instruction FDIV not yet implemented."
	046 Move X0, X19
	047 Move X1, X31
	048 Call AnimationCurve.Evaluate, X0, V0
	049 Move X8, [X20]
	050 Move [X8], S0
	051 Add X22, X22, 1
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X30, [X31+8]
	058 Move V8, [X31+48]
	059 Return 

Method: System.Single Evaluate(System.Single t)

Disassembly:
	0x03B97124 MOV X1, X21
	0x03B97128 LDR X2, [X9]
	0x03B9712C MOV X4, X31
	0x03B97130 MOV X0, X8
	0x03B97134 BL 0x32277C4
	0x03B97138 ADRP X8, 0x55C000
	0x03B9713C LDR X8, [X8 + 0xA28]
	0x03B97140 MOV X21, X0
	0x03B97144 LDR X8, [X8]
	0x03B97148 LDR W9, [X8 + 0xE0]
	0x03B9714C CBNZ W9, 0x3B97158
	0x03B97150 MOV X0, X8
	0x03B97154 BL 0x1C16DFC
	0x03B97158 MOV X0, X21
	0x03B9715C MOV X1, X20
	0x03B97160 MOV X2, X31
	0x03B97164 BL 0x3C06B0C
	0x03B97168 LDR X0, [X23]
	0x03B9716C CBZ X0, 0x3B972C0
	0x03B97170 MOV W1, W31
	0x03B97174 MOV X2, X31
	0x03B97178 BL 0x3C32410
	0x03B9717C LDRB W8, [X19 + 0x31]
	0x03B97180 CBNZ W8, 0x3B9729C
	0x03B97184 LDRB W8, [X19 + 0x30]
	0x03B97188 ORR W8, W25, W8, 0x0
	0x03B9718C CBZ W8, 0x3B9729C
	0x03B97190 LDR X8, [X19 + 0x18]
	0x03B97194 CBZ X8, 0x3B972C0
	0x03B97198 LDRB W8, [X8 + 0x10]
	0x03B9719C CBZ W8, 0x3B9729C
	0x03B971A0 MOV X0, X20
	0x03B971A4 MOV X1, X31
	0x03B971A8 BL 0x3C32ECC
	0x03B971AC CBZ X0, 0x3B972C0
	0x03B971B0 ADRP X8, 0x5C1000
	0x03B971B4 LDR X8, [X8 + 0xB78]
	0x03B971B8 MOV X20, X0
	0x03B971BC LDR X1, [X8]
	0x03B971C0 BL 0x21E51FC
	0x03B971C4 LDR X8, [X19 + 0x18]
	0x03B971C8 STR X0, [X19 + 0x38]
	0x03B971CC CBZ X8, 0x3B972C0
	0x03B971D0 MOV X1, X0
	0x03B971D4 MOV X0, X8
	0x03B971D8 BL 0x3B977D8
	0x03B971DC LDR X8, [X19 + 0x20]
	0x03B971E0 CBZ X8, 0x3B972C0
	0x03B971E4 LDRB W8, [X8 + 0x10]
	0x03B971E8 CBZ W8, 0x3B97214
	0x03B971EC ADRP X8, 0x5C5000
	0x03B971F0 LDR X8, [X8 + 0x800]
	0x03B971F4 MOV X0, X20
	0x03B971F8 LDR X1, [X8]
	0x03B971FC BL 0x21E51FC
	0x03B97200 LDR X8, [X19 + 0x20]
	0x03B97204 CBZ X8, 0x3B972C0
	0x03B97208 MOV X1, X0
	0x03B9720C MOV X0, X8
	0x03B97210 BL 0x3B978B8
	0x03B97214 LDR X8, [X19 + 0x28]
	0x03B97218 CBZ X8, 0x3B972C0
	0x03B9721C LDRB W8, [X8 + 0x10]
	0x03B97220 CBZ W8, 0x3B97260
	0x03B97224 ADRP X8, 0x5C5000
	0x03B97228 LDR X8, [X8 + 0x808]
	0x03B9722C MOV X0, X20
	0x03B97230 LDR X1, [X8]
	0x03B97234 BL 0x21E51FC
	0x03B97238 LDR X8, [X19 + 0x28]
	0x03B9723C STR X0, [X19 + 0x40]
	0x03B97240 CBZ X8, 0x3B972C0
	0x03B97244 CBZ X0, 0x3B972C0
	0x03B97248 LDR W9, [X8 + 0x14]
	0x03B9724C STR W9, [X0 + 0x30]
	0x03B97250 LDR W9, [X8 + 0x18]
	0x03B97254 STR W9, [X0 + 0x2C]
	0x03B97258 LDRB W8, [X8 + 0x1C]
	0x03B9725C STRB W8, [X0 + 0x28]
	0x03B97260 LDR X0, [X24]
	0x03B97264 LDR X20, [X19 + 0x48]
	0x03B97268 LDR W8, [X0 + 0xE0]
	0x03B9726C CBNZ W8, 0x3B97274
	0x03B97270 BL 0x1C16DFC
	0x03B97274 MOV X0, X20
	0x03B97278 MOV X1, X31
	0x03B9727C MOV X2, X31
	0x03B97280 BL 0x3C354F8
	0x03B97284 TBZ X0, 0x0, 0x3B9729C
	0x03B97288 LDR X0, [X19 + 0x48]
	0x03B9728C CBZ X0, 0x3B972C0
	0x03B97290 MOVZ W1, 0x1
	0x03B97294 MOV X2, X31
	0x03B97298 BL 0x3C32410
	0x03B9729C LDRB W8, [X19 + 0x31]
	0x03B972A0 STRB W8, [X19 + 0x30]
	0x03B972A4 LDP X20, X19, [X31 + 0x60]
	0x03B972A8 LDP X22, X21, [X31 + 0x50]
	0x03B972AC LDP X24, X23, [X31 + 0x40]
	0x03B972B0 LDP X26, X25, [X31 + 0x30]
	0x03B972B4 LDR X30, [X31 + 0x20]
	0x03B972B8 ADD X31, X31, 0x70
	0x03B972BC RET

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W21, [X0+8]
	008 Move X19, X0
	009 Subtract W20, W21, 1
	010 Move X8, [X19]
	011 Move V0, [X8]
	012 Move V8, V0
	013 NotImplemented "Instruction FCMP not yet implemented."
	014 Move W8, [X19+16]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move S0, 1
	018 NotImplemented "Instruction FCMP not yet implemented."
	019 Move W8, [X19+20]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X22, 0x84B000
	023 Move W8, [X22+1392]
	024 Compare W8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, 0x55D000
	027 Move X0, [X0+1448]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+1392], W8
	031 Move X8, 0x55D000
	032 Move X8, [X8+1448]
	033 Move X0, [X8]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move S0, 0.5
	039 Multiply S0, S8, S0
	040 NotImplemented "Instruction FRINTM not yet implemented."
	041 Add S0, S0, S0
	042 Subtract S0, S8, S0
	043 Move W9, S0
	044 Move W8, 0x7F800000
	045 And W9, W9, 0x7FFFFFFF
	046 Move S1, 2
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction FCCMP not yet implemented."
	049 NotImplemented "Instruction FCSEL not yet implemented."
	050 Move W9, S0
	051 Move S1, -1
	052 And W9, W9, 0x7FFFFFFF
	053 Move S2, W31
	054 Add S1, S0, S1
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction FCCMP not yet implemented."
	057 Move S0, 1
	058 NotImplemented "Instruction FABS not yet implemented."
	059 Subtract S0, S0, S1
	060 NotImplemented "Instruction FCSEL not yet implemented."
	061 NotImplemented "Instruction FABS not yet implemented."
	062 Move S1, 1
	063 Move S8, 1
	064 Call 0x3EB2BA0
	065 Subtract S8, S8, S0
	066 Move S1, 1
	067 Move V0, V8
	068 Call 0x3EB2BA0
	069 Move V8, V0
	070 NotImplemented "Instruction SCVTF not yet implemented."
	071 Move W8, 0x7F800000
	072 Multiply S0, S8, S0
	073 Move S1, W8
	074 Move W9, 0x80000000
	075 NotImplemented "Instruction FCVTZS not yet implemented."
	076 NotImplemented "Instruction FCMP not yet implemented."
	077 Move X10, [X19]
	078 NotImplemented "Instruction CSEL not yet implemented."
	079 Add W9, W8, 1
	080 NotImplemented "Instruction CMP not yet implemented."
	081 NotImplemented "Instruction CSINC not yet implemented."
	082 Move V1, [X10]
	083 Move V2, [X10]
	084 NotImplemented "Instruction SCVTF not yet implemented."
	085 Subtract S0, S0, S3
	086 Subtract S2, S2, S1
	087 Multiply S0, S2, S0
	088 Add S0, S1, S0
	089 Move X20, [X31+32]
	090 Move X19, [X31+40]
	091 Move X22, [X31+16]
	092 Move X21, [X31+24]
	093 Move X30, [X31+8]
	094 Move V8, [X31+48]
	095 Return V0
	096 Move X8, [X19]
	097 Move V0, [X8]

Method: System.Void Dispose()

Disassembly:
	0x03B972C0 BL 0x1C16F20
	0x03B972C4 SUB X31, X31, 0xF0
	0x03B972C8 STP D15, D14, [X31 + 0x90]
	0x03B972CC STP D13, D12, [X31 + 0xA0]
	0x03B972D0 STP D11, D10, [X31 + 0xB0]
	0x03B972D4 STP D9, D8, [X31 + 0xC0]
	0x03B972D8 STP X30, X21, [X31 + 0xD0]
	0x03B972DC STP X20, X19, [X31 + 0xE0]
	0x03B972E0 ADRP X21, 0x84B000
	0x03B972E4 LDRB W8, [X21 + 0xBED]
	0x03B972E8 MOV V8.16B, V2.16B
	0x03B972EC MOV V9.16B, V1.16B
	0x03B972F0 MOV V10.16B, V0.16B
	0x03B972F4 MOV X20, X1
	0x03B972F8 MOV X19, X0
	0x03B972FC TBNZ X8, 0x0, 0x3B97314
	0x03B97300 ADRP X0, 0x55C000
	0x03B97304 LDR X0, [X0 + 0x598]
	0x03B97308 BL 0x1C16CF4
	0x03B9730C MOVZ W8, 0x1
	0x03B97310 STRB W8, [X21 + 0xBED]
	0x03B97314 STR W31, [X31 + 0x88]
	0x03B97318 STR X31, [X31 + 0x80]
	0x03B9731C STR W31, [X31 + 0x78]
	0x03B97320 STR X31, [X31 + 0x70]
	0x03B97324 STR W31, [X31 + 0x68]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x84C000
	005 Move W8, [X20+3042]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x587000
	012 Move X0, [X0+344]
	013 Call 0x1C17CF4
	014 Move X0, 0x587000
	015 Move X0, [X0+352]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3042], W8
	019 Move X8, [X19]
	020 Compare X8, 0
	021 JumpIfEqual {31}
	022 Move X8, 0x587000
	023 Move X8, [X8+344]
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, [X8]
	028 Move X30, [X31+32]
	029 Call NativeArray`1<Single>.Dispose, X0
	030 Return 
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return 

Method: System.Single Repeat(System.Single t, System.Single length)

Disassembly:
	0x03B97328 STR X31, [X31 + 0x60]
	0x03B9732C STR W31, [X31 + 0x58]
	0x03B97330 STR X31, [X31 + 0x50]
	0x03B97334 STR W31, [X31 + 0x48]
	0x03B97338 STR X31, [X31 + 0x40]
	0x03B9733C STR W31, [X31 + 0x38]
	0x03B97340 STR X31, [X31 + 0x30]
	0x03B97344 STR W31, [X31 + 0x28]
	0x03B97348 STR X31, [X31 + 0x20]
	0x03B9734C LDRB W8, [X19 + 0x31]
	0x03B97350 CBNZ W8, 0x3B975B0
	0x03B97354 LDR X0, [X19 + 0x38]
	0x03B97358 CBZ X0, 0x3B975D0
	0x03B9735C MOV X1, X31
	0x03B97360 BL 0x3E244BC
	0x03B97364 CMP W0, 0x2
	0x03B97368 B.NE 0x3B975B0
	0x03B9736C LDR V11, [X19 + 0x50]
	0x03B97370 MOV X0, X31
	0x03B97374 BL 0x3C3C714
	0x03B97378 FADD S0, S11, S0
	0x03B9737C FMOV S1, 0.5
	0x03B97380 FCMP S0, S1
	0x03B97384 STR S0, [X19 + 0x50]
	0x03B97388 B.MI 0x3B975B0
	0x03B9738C LDR X0, [X19 + 0x38]
	0x03B97390 STR W31, [X19 + 0x50]
	0x03B97394 CBZ X0, 0x3B975D0
	0x03B97398 MOV X1, X31
	0x03B9739C BL 0x3C32E90
	0x03B973A0 CBZ X20, 0x3B975D0
	0x03B973A4 MOV X21, X0
	0x03B973A8 MOV X0, X20
	0x03B973AC MOV X1, X31
	0x03B973B0 BL 0x3C3F58C
	0x03B973B4 MOV X0, X20
	0x03B973B8 MOV X1, X31

ISIL:
	001 Move [X31-32], D9
	002 Move [X31-24], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X19
	005 Move X19, 0x84B000
	006 Move W8, [X19+1392]
	007 Move V8, V1
	008 Move V9, V0
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x55D000
	012 Move X0, [X0+1448]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X19+1392], W8
	016 Move X8, 0x55D000
	017 Move X8, [X8+1448]
	018 Move X0, [X8]
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 NotImplemented "Instruction FDIV not yet implemented."
	024 NotImplemented "Instruction FRINTM not yet implemented."
	025 Multiply S0, S0, S8
	026 Subtract S0, S9, S0
	027 Move W9, S0
	028 Move W8, 0x7F800000
	029 And W9, W9, 0x7FFFFFFF
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction FCCMP not yet implemented."
	032 NotImplemented "Instruction FCSEL not yet implemented."
	033 Move W9, S0
	034 And W9, W9, 0x7FFFFFFF
	035 Move X30, [X31+16]
	036 Move X19, [X31+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move S1, W31
	039 NotImplemented "Instruction FCCMP not yet implemented."
	040 NotImplemented "Instruction FCSEL not yet implemented."
	041 Move D9, [X31+32]
	042 Move D8, [X31+40]
	043 Return V0

Method: System.Single PingPong(System.Single t, System.Single length)

Disassembly:
	0x03B973BC MOV V15.16B, V0.16B
	0x03B973C0 STR S1, [X31 + 0x10]
	0x03B973C4 MOV V11.16B, V2.16B
	0x03B973C8 BL 0x3C3FA04
	0x03B973CC STP S1, S0, [X31 + 0x18]
	0x03B973D0 STR S2, [X31 + 0x14]
	0x03B973D4 CBZ X21, 0x3B975D0
	0x03B973D8 MOV X0, X21
	0x03B973DC MOV X1, X31
	0x03B973E0 BL 0x3C3F58C
	0x03B973E4 MOV X0, X21
	0x03B973E8 MOV X1, X31
	0x03B973EC MOV V14.16B, V0.16B
	0x03B973F0 MOV V12.16B, V1.16B
	0x03B973F4 MOV V13.16B, V2.16B
	0x03B973F8 BL 0x3C3FA04
	0x03B973FC STP S1, S0, [X31 + 0x8]
	0x03B97400 STP S15, S2, [X31]
	0x03B97404 MOV V0.16B, V15.16B
	0x03B97408 LDR V15, [X31 + 0x10]
	0x03B9740C MOV V2.16B, V11.16B
	0x03B97410 MOV X0, X31
	0x03B97414 MOV V1.16B, V15.16B
	0x03B97418 BL 0x3887BE4
	0x03B9741C STP S0, S1, [X31 + 0x80]
	0x03B97420 STR S2, [X31 + 0x88]
	0x03B97424 LDP S1, S0, [X31 + 0x18]
	0x03B97428 LDR V2, [X31 + 0x14]
	0x03B9742C MOV X0, X31
	0x03B97430 BL 0x3887BE4
	0x03B97434 STP S0, S1, [X31 + 0x70]
	0x03B97438 STR S2, [X31 + 0x78]
	0x03B9743C MOV V0.16B, V14.16B
	0x03B97440 MOV V1.16B, V12.16B
	0x03B97444 MOV V2.16B, V13.16B
	0x03B97448 MOV X0, X31
	0x03B9744C BL 0x3887BE4
	0x03B97450 STP S0, S1, [X31 + 0x60]
	0x03B97454 ADD X0, X31, 0x80
	0x03B97458 ADD X1, X31, 0x70
	0x03B9745C ADD X2, X31, 0x60
	0x03B97460 MOV V0.16B, V10.16B

ISIL:
	001 Move [X31-48], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X19
	006 Move X19, 0x84B000
	007 Move W8, [X19+1392]
	008 Move V8, V1
	009 Move V9, V0
	010 Compare W8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, 0x55D000
	013 Move X0, [X0+1448]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1392], W8
	017 Move X8, 0x55D000
	018 Move X8, [X8+1448]
	019 Add S10, S8, S8
	020 Move X0, [X8]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 NotImplemented "Instruction FDIV not yet implemented."
	026 NotImplemented "Instruction FRINTM not yet implemented."
	027 Multiply S0, S10, S0
	028 Subtract S0, S9, S0
	029 Move W9, S0
	030 Move W8, 0x7F800000
	031 And W9, W9, 0x7FFFFFFF
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction FCCMP not yet implemented."
	034 NotImplemented "Instruction FCSEL not yet implemented."
	035 Move W9, S0
	036 And W9, W9, 0x7FFFFFFF
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move S1, W31
	039 NotImplemented "Instruction FCCMP not yet implemented."
	040 NotImplemented "Instruction FCSEL not yet implemented."
	041 NotImplemented "Instruction FABD not yet implemented."
	042 Subtract S0, S8, S0
	043 Move X30, [X31+32]
	044 Move X19, [X31+40]
	045 Move D9, [X31+16]
	046 Move D8, [X31+24]
	047 Move V10, [X31+48]
	048 Return V0

