Type: UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1

Method: System.Void .ctor(System.Func`1<T> createFunc, System.Action`1<T> actionOnGet = null, System.Action`1<T> actionOnRelease = null, System.Action`1<T> actionOnDestroy = null, System.Boolean collectionCheck = True, System.Int32 maxSize = 10000)

Disassembly:
	0x02EF1EC8 MOV X19, X0
	0x02EF1ECC TBNZ X8, 0x0, 0x2EF1EE4
	0x02EF1ED0 ADRP X0, 0x122E000
	0x02EF1ED4 LDR X0, [X0 + 0x158]
	0x02EF1ED8 BL 0x1C16CF4
	0x02EF1EDC MOVZ W8, 0x1
	0x02EF1EE0 STRB W8, [X23 + 0xB86]
	0x02EF1EE4 LDR X8, [X21 + 0x20]
	0x02EF1EE8 LDR X8, [X8 + 0xC0]
	0x02EF1EEC LDR X8, [X8 + 0x8]
	0x02EF1EF0 LDR W23, [X8 + 0xFC]
	0x02EF1EF4 ADD X8, X31, 0x0
	0x02EF1EF8 ADD X9, X23, 0xF
	0x02EF1EFC AND X9, X9, 0x1FFFFFFFF
	0x02EF1F00 SUB X24, X8, X9
	0x02EF1F04 ADD X31, X24, 0x0
	0x02EF1F08 LDR X0, [X25]
	0x02EF1F0C LDR W8, [X0 + 0xE0]
	0x02EF1F10 CBNZ W8, 0x2EF1F18
	0x02EF1F14 BL 0x1C16DFC
	0x02EF1F18 MOV X0, X19
	0x02EF1F1C MOV X1, X31
	0x02EF1F20 BL 0x33671B0
	0x02EF1F24 LDR X8, [X21 + 0x20]
	0x02EF1F28 MOVZ W1, 0x4
	0x02EF1F2C LDR X8, [X8 + 0xC0]
	0x02EF1F30 LDR X8, [X8]
	0x02EF1F34 LDR X25, [X8 + 0x80]
	0x02EF1F38 MOV X0, X25
	0x02EF1F3C BL 0x1C16D14
	0x02EF1F40 MOV X0, X19
	0x02EF1F44 MOV X1, X25
	0x02EF1F48 BL 0x1C16D18
	0x02EF1F4C STR W22, [X0]
	0x02EF1F50 LDR X21, [X21 + 0x20]
	0x02EF1F54 MOV X0, X24
	0x02EF1F58 MOV X2, X23
	0x02EF1F5C LDR X8, [X21 + 0xC0]
	0x02EF1F60 LDR X8, [X8 + 0x8]
	0x02EF1F64 LDR W8, [X8 + 0x28]
	0x02EF1F68 CMP W8, 0x0
	0x02EF1F6C SUB X8, X29, 0x10
	0x02EF1F70 CSEL X1, X20, X8, LT
	0x02EF1F74 BL 0x3EB1AC0
	0x02EF1F78 LDR X8, [X21 + 0xC0]
	0x02EF1F7C MOV X0, X19
	0x02EF1F80 MOV X2, X24
	0x02EF1F84 MOV W3, W23
	0x02EF1F88 LDR X8, [X8]
	0x02EF1F8C LDR X8, [X8 + 0x80]
	0x02EF1F90 ADD X1, X8, 0x20
	0x02EF1F94 BL 0x1C16D1C
	0x02EF1F98 LDR X8, [X26 + 0x28]
	0x02EF1F9C LDUR X9, [X29 - 0x8]
	0x02EF1FA0 CMP X8, X9
	0x02EF1FA4 B.NE 0x2EF1FC4
	0x02EF1FA8 ADD X31, X29, 0x0
	0x02EF1FAC LDP X20, X19, [X31 + 0x40]
	0x02EF1FB0 LDP X22, X21, [X31 + 0x30]
	0x02EF1FB4 LDP X24, X23, [X31 + 0x20]
	0x02EF1FB8 LDP X26, X25, [X31 + 0x10]
	0x02EF1FBC LDP X29, X30, [X31], #0x50

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, X1
	011 Move X1, X31
	012 Move X19, X7
	013 Move W20, W6
	014 Move W24, W5
	015 Move X21, X4
	016 Move X23, X3
	017 Move X25, X2
	018 Move X22, X0
	019 Call Object..ctor, X0
	020 Compare X26, 0
	021 JumpIfEqual {40}
	022 NotImplemented "Instruction CMP not yet implemented."
	023 And W8, W24, 1
	024 Move [X22+16], X26
	025 Move [X22+24], X25
	026 Move [X22+32], X23
	027 Move [X22+40], X21
	028 Move [X22+48], W20
	029 Move [X22+72], W8
	030 Move X20, [X31+64]
	031 Move X19, [X31+72]
	032 Move X22, [X31+48]
	033 Move X21, [X31+56]
	034 Move X24, [X31+32]
	035 Move X23, [X31+40]
	036 Move X26, [X31+16]
	037 Move X25, [X31+24]
	038 Move X30, [X31+80]
	039 Return 
	040 Move X0, 0x1208000
	041 Move X0, [X0+1320]
	042 Call 0x1C17D08
	043 Call 0x1C17F10
	044 Move X20, X0
	045 Move X0, 0x122C000
	046 Move X0, [X0+3488]
	047 Call 0x1C17D08
	048 Move X1, X0
	049 Move X0, X20
	050 Move X2, X31
	051 Call ArgumentNullException..ctor, X0, X1
	052 Move X0, 0x120B000
	053 Move X0, [X0+1400]
	054 Call 0x1C17D08
	055 Call 0x1C17F10
	056 Move X20, X0
	057 Move X0, 0x122F000
	058 Move X0, [X0+328]
	059 Call 0x1C17D08
	060 Move X21, X0
	061 Move X0, 0x122C000
	062 Move X0, [X0+3504]
	063 Call 0x1C17D08
	064 Move X2, X0
	065 Move X0, X20
	066 Move X1, X21
	067 Move X3, X31
	068 Call ArgumentException..ctor, X0, X1, X2
	069 Move X0, X20
	070 Move X1, X19
	071 Call 0x1C17DEC

Method: System.Int32 get_countInactive()

Disassembly:
	0x02EF1FC0 RET
	0x02EF1FC4 BL 0x3EB1B20

ISIL:
	001 Move W0, [X0+76]
	002 Return X0

Method: System.Void set_countInactive(System.Int32 value)

Disassembly:
	0x02EF1FC8 STR X30, [X31 - 0x30]!
	0x02EF1FCC STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X0+76], W1
	002 Return 

Method: T Get()

Disassembly:
	0x02EF1FD0 STP X20, X19, [X31 + 0x20]
	0x02EF1FD4 LDR X8, [X2 + 0x8]
	0x02EF1FD8 STP X1, X2, [X0 + 0x20]
	0x02EF1FDC MOV X19, X0
	0x02EF1FE0 MOV X20, X2
	0x02EF1FE4 STR X8, [X0 + 0x10]
	0x02EF1FE8 LDRB W22, [X2 + 0x52]
	0x02EF1FEC STR X0, [X0 + 0x40]
	0x02EF1FF0 MOV X0, X2
	0x02EF1FF4 MOV X21, X1
	0x02EF1FF8 BL 0x1C16D84
	0x02EF1FFC TBZ X0, 0x0, 0x2EF2014
	0x02EF2000 CMP W22, 0x2
	0x02EF2004 B.NE 0x2EF2050
	0x02EF2008 ADRP X8, 0xFFFFFFFFFEB3B000
	0x02EF200C ADD X8, X8, 0x118
	0x02EF2010 B 0x2EF2094
	0x02EF2014 CMP W22, 0x1
	0x02EF2018 B.NE 0x2EF204C
	0x02EF201C LDRB W8, [X19 + 0x70]
	0x02EF2020 CBZ W8, 0x2EF2064
	0x02EF2024 MOV X0, X20
	0x02EF2028 BL 0x1C16D7C
	0x02EF202C MOV W21, W0
	0x02EF2030 MOV X0, X20
	0x02EF2034 BL 0x1C17238
	0x02EF2038 TBZ X21, 0x0, 0x2EF2070
	0x02EF203C TBZ X0, 0x0, 0x2EF2080
	0x02EF2040 ADRP X8, 0xFFFFFFFFFEB3B000
	0x02EF2044 ADD X8, X8, 0x234
	0x02EF2048 B 0x2EF2094
	0x02EF204C CBZ X21, 0x2EF20B4
	0x02EF2050 LDR X8, [X19 + 0x10]
	0x02EF2054 LDR X9, [X19 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+56]
	005 Move X19, X0
	006 Compare X8, 0
	007 JumpIfEqual {18}
	008 Move X9, [X8+16]
	009 Move X20, [X8+24]
	010 Move X10, [X19+64]
	011 Move [X19+56], X9
	012 Move [X8+16], X10
	013 Move [X19+64], X8
	014 Move [X8+24], X31
	015 Move W8, [X19+76]
	016 Subtract W8, W8, 1
	017 Move [X19+76], W8
	018 Move X8, [X19+16]
	019 Compare X8, 0
	020 JumpIfEqual {39}
	021 Move X9, [X8+24]
	022 Move X0, [X8+64]
	023 Move X1, [X8+40]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X20, X0
	026 Move X8, [X19+24]
	027 Compare X8, 0
	028 JumpIfEqual {34}
	029 Move X9, [X8+24]
	030 Move X0, [X8+64]
	031 Move X2, [X8+40]
	032 Move X1, X20
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move X0, X20
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Return X0
	039 Call 0x1C17F20

Method: UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.PooledObject`1<T> Get(out T v)

Disassembly:
	0x02EF2058 STR X8, [X19 + 0x18]
	0x02EF205C STR X9, [X19 + 0x40]
	0x02EF2060 B 0x2EF2098
	0x02EF2064 ADRP X8, 0xFFFFFFFFFEB3B000
	0x02EF2068 ADD X8, X8, 0xF4
	0x02EF206C B 0x2EF2094
	0x02EF2070 TBZ X0, 0x0, 0x2EF208C
	0x02EF2074 ADRP X8, 0xFFFFFFFFFEB3B000
	0x02EF2078 ADD X8, X8, 0x15C
	0x02EF207C B 0x2EF2094
	0x02EF2080 ADRP X8, 0xFFFFFFFFFEB3B000
	0x02EF2084 ADD X8, X8, 0x1E8
	0x02EF2088 B 0x2EF2094
	0x02EF208C ADRP X8, 0xFFFFFFFFFEB3B000
	0x02EF2090 ADD X8, X8, 0x12C
	0x02EF2094 STR X8, [X19 + 0x18]
	0x02EF2098 ADRP X8, 0xFFFFFFFFFEB3B000
	0x02EF209C ADD X8, X8, 0x9C
	0x02EF20A0 STR X8, [X19 + 0x38]
	0x02EF20A4 LDP X20, X19, [X31 + 0x20]
	0x02EF20A8 LDP X22, X21, [X31 + 0x10]
	0x02EF20AC LDR X30, [X31], #0x30
	0x02EF20B0 RET
	0x02EF20B4 ADRP X1, 0xFFFFFFFFFDC29000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X20, X1
	008 Move X19, X2
	009 Move X21, X0
	010 Move X8, [X8+192]
	011 Move X1, [X8+80]
	012 Call 0x2EF1FD0, X0
	013 Move [X20], X0
	014 Move [X31], X31
	015 Move [X31+8], X31
	016 Move X8, [X19+32]
	017 Move X1, X0
	018 Add X0, X31, 0
	019 Move X2, X21
	020 Move X8, [X8+192]
	021 Move X3, [X8+96]
	022 Call 0x24A7DC8, X0, X1, X2
	023 Move X0, [X31]
	024 Move X1, [X31+8]
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X30, [X31+16]
	028 Move X21, [X31+24]
	029 Add X31, X31, 48
	030 Return X0

Method: System.Void Release(T item)

Disassembly:
	0x02EF20B8 ADD X1, X1, 0xEE3
	0x02EF20BC MOV X0, X31
	0x02EF20C0 BL 0x1C16F3C
	0x02EF20C4 MOV X1, X31
	0x02EF20C8 BL 0x1C16DEC
	0x02EF20CC LDR X8, [X0 + 0x40]
	0x02EF20D0 LDR X4, [X0 + 0x18]
	0x02EF20D4 LDR X3, [X0 + 0x28]
	0x02EF20D8 MOV X0, X8
	0x02EF20DC BR X4
	0x02EF20E0 SUB X31, X31, 0x30
	0x02EF20E4 STP X31, X30, [X31 + 0x18]
	0x02EF20E8 STP X1, X2, [X31 + 0x8]
	0x02EF20EC ADD X1, X31, 0x8
	0x02EF20F0 MOV X2, X3
	0x02EF20F4 MOV X3, X4
	0x02EF20F8 BL 0x1C16CB0
	0x02EF20FC LDR X30, [X31 + 0x20]
	0x02EF2100 ADD X31, X31, 0x30
	0x02EF2104 RET
	0x02EF2108 MOV X0, X1
	0x02EF210C MOV X1, X31
	0x02EF2110 B 0x1C16CB4
	0x02EF2114 STR X30, [X31 - 0x30]!
	0x02EF2118 STP X22, X21, [X31 + 0x10]
	0x02EF211C STP X20, X19, [X31 + 0x20]
	0x02EF2120 LDR X8, [X2 + 0x8]
	0x02EF2124 STP X1, X2, [X0 + 0x20]
	0x02EF2128 MOV X19, X0
	0x02EF212C MOV X20, X2
	0x02EF2130 STR X8, [X0 + 0x10]
	0x02EF2134 LDRB W22, [X2 + 0x52]
	0x02EF2138 STR X0, [X0 + 0x40]
	0x02EF213C MOV X0, X2
	0x02EF2140 MOV X21, X1
	0x02EF2144 BL 0x1C16D84
	0x02EF2148 TBZ X0, 0x0, 0x2EF2160
	0x02EF214C CMP W22, 0x2
	0x02EF2150 B.NE 0x2EF219C
	0x02EF2154 ADRP X8, 0xFFFFFFFFFEB3B000
	0x02EF2158 ADD X8, X8, 0x344
	0x02EF215C B 0x2EF21E0
	0x02EF2160 CMP W22, 0x1
	0x02EF2164 B.NE 0x2EF2198
	0x02EF2168 LDRB W8, [X19 + 0x70]
	0x02EF216C CBZ W8, 0x2EF21B0
	0x02EF2170 MOV X0, X20
	0x02EF2174 BL 0x1C16D7C
	0x02EF2178 MOV W21, W0
	0x02EF217C MOV X0, X20
	0x02EF2180 BL 0x1C17238
	0x02EF2184 TBZ X21, 0x0, 0x2EF21BC
	0x02EF2188 TBZ X0, 0x0, 0x2EF21CC
	0x02EF218C ADRP X8, 0xFFFFFFFFFEB3B000
	0x02EF2190 ADD X8, X8, 0x460

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X0+32]
	007 Move X21, X2
	008 Move X20, X0
	009 Move X19, X1
	010 Compare X8, 0
	011 JumpIfEqual {17}
	012 Move X9, [X8+24]
	013 Move X0, [X8+64]
	014 Move X2, [X8+40]
	015 Move X1, X19
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move W8, [X20+76]
	018 Move W9, [X20+48]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X22, [X20+64]
	021 Compare X22, 0
	022 JumpIfEqual {38}
	023 Move X8, [X22+16]
	024 Move [X20+64], X8
	025 Move X8, [X20+40]
	026 Compare X8, 0
	027 JumpIfEqual {60}
	028 Move X3, [X8+24]
	029 Move X0, [X8+64]
	030 Move X2, [X8+40]
	031 Move X1, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 CallNoReturn X3
	038 Move X8, [X21+32]
	039 Move X8, [X8+192]
	040 Move X0, [X8+24]
	041 Move W8, [X0+309]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {47}
	046 Call 0x1C5D684
	047 Call 0x1C17F10
	048 Move X1, X31
	049 Move X22, X0
	050 Call Object..ctor, X0
	051 Compare X22, 0
	052 JumpIfEqual {66}
	053 Move [X22+24], X19
	054 Move X8, [X20+56]
	055 Move [X22+16], X8
	056 Move W8, [X20+76]
	057 Move [X20+56], X22
	058 Add W8, W8, 1
	059 Move [X20+76], W8
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X30, [X31+48]
	065 Return 
	066 Call 0x1C17F20

Method: System.Void Clear()

Disassembly:
	0x02EF2194 B 0x2EF21E0
	0x02EF2198 CBZ X21, 0x2EF2200
	0x02EF219C LDR X8, [X19 + 0x10]
	0x02EF21A0 LDR X9, [X19 + 0x20]
	0x02EF21A4 STR X8, [X19 + 0x18]
	0x02EF21A8 STR X9, [X19 + 0x40]
	0x02EF21AC B 0x2EF21E4
	0x02EF21B0 ADRP X8, 0xFFFFFFFFFEB3B000
	0x02EF21B4 ADD X8, X8, 0x320
	0x02EF21B8 B 0x2EF21E0
	0x02EF21BC TBZ X0, 0x0, 0x2EF21D8
	0x02EF21C0 ADRP X8, 0xFFFFFFFFFEB3B000
	0x02EF21C4 ADD X8, X8, 0x388
	0x02EF21C8 B 0x2EF21E0
	0x02EF21CC ADRP X8, 0xFFFFFFFFFEB3B000
	0x02EF21D0 ADD X8, X8, 0x414
	0x02EF21D4 B 0x2EF21E0
	0x02EF21D8 ADRP X8, 0xFFFFFFFFFEB3B000
	0x02EF21DC ADD X8, X8, 0x358
	0x02EF21E0 STR X8, [X19 + 0x18]
	0x02EF21E4 ADRP X8, 0xFFFFFFFFFEB3B000
	0x02EF21E8 ADD X8, X8, 0x2C8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+40]
	005 Move X19, X0
	006 Compare X8, 0
	007 JumpIfEqual {23}
	008 Move X20, [X19+56]
	009 Compare X20, 0
	010 JumpIfEqual {23}
	011 Move X1, [X20+24]
	012 Move X9, [X8+24]
	013 Move X0, [X8+64]
	014 Move X2, [X8+40]
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move X20, [X20+16]
	017 Compare X20, 0
	018 JumpIfEqual {23}
	019 Move X8, [X19+40]
	020 Compare X8, 0
	021 JumpIfNotEqual {11}
	022 Call 0x1C17F20
	023 Move [X19+76], W31
	024 Move [X19+56], X31
	025 Move [X19+64], X31
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return 

Method: System.Void Dispose()

Disassembly:
	0x02EF21EC STR X8, [X19 + 0x38]
	0x02EF21F0 LDP X20, X19, [X31 + 0x20]
	0x02EF21F4 LDP X22, X21, [X31 + 0x10]
	0x02EF21F8 LDR X30, [X31], #0x30

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+112]
	004 Call 0x2EF2194, X0
	005 Return 

