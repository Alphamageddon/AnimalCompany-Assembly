Type: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider

Method: System.Void add_beginLocomotion(System.Action`1<UnityEngine.XR.Interaction.Toolkit.LocomotionSystem> value)

Disassembly:
	0x03B7B0C4 MOV X1, X19
	0x03B7B0C8 BL 0x3B7F2E8
	0x03B7B0CC CBZ W0, 0x3B7B0E0
	0x03B7B0D0 MOV W0, W31
	0x03B7B0D4 LDP X20, X19, [X31 + 0x10]
	0x03B7B0D8 LDP X30, X21, [X31], #0x20
	0x03B7B0DC RET
	0x03B7B0E0 LDR X8, [X19 + 0x20]
	0x03B7B0E4 CBZ X8, 0x3B7B0FC
	0x03B7B0E8 LDR X1, [X19 + 0x30]
	0x03B7B0EC LDR X9, [X8 + 0x18]
	0x03B7B0F0 LDR X0, [X8 + 0x40]
	0x03B7B0F4 LDR X2, [X8 + 0x28]
	0x03B7B0F8 BLR X9
	0x03B7B0FC MOVZ W0, 0x1
	0x03B7B100 B 0x3B7B0D4
	0x03B7B104 BL 0x1C16F20
	0x03B7B108 STR X30, [X31 - 0x20]!
	0x03B7B10C STP X20, X19, [X31 + 0x10]
	0x03B7B110 ADRP X20, 0x867000
	0x03B7B114 LDRB W8, [X20 + 0xA96]
	0x03B7B118 MOV X19, X0
	0x03B7B11C TBNZ X8, 0x0, 0x3B7B140
	0x03B7B120 ADRP X0, 0x5E0000
	0x03B7B124 LDR X0, [X0 + 0xD28]
	0x03B7B128 BL 0x1C16CF4
	0x03B7B12C ADRP X0, 0x5E0000
	0x03B7B130 LDR X0, [X0 + 0xD30]
	0x03B7B134 BL 0x1C16CF4
	0x03B7B138 MOVZ W8, 0x1
	0x03B7B13C STRB W8, [X20 + 0xA96]
	0x03B7B140 MOV X0, X19
	0x03B7B144 BL 0x3B7B484
	0x03B7B148 LDR X8, [X19 + 0x48]
	0x03B7B14C MOVZ W9, 0x3
	0x03B7B150 STR W9, [X19 + 0x38]
	0x03B7B154 CBZ X8, 0x3B7B1BC
	0x03B7B158 LDP W2, W9, [X8 + 0x18]
	0x03B7B15C ADD W9, W9, 0x1
	0x03B7B160 CMP W2, 0x1
	0x03B7B164 STP W31, W9, [X8 + 0x18]
	0x03B7B168 B.LT 0x3B7B17C
	0x03B7B16C LDR X0, [X8 + 0x10]
	0x03B7B170 MOV W1, W31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x868000
	009 Move W8, [X21+2746]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5E1000
	017 Move X0, [X0+3192]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2746], W8
	021 Move X24, 0x5E1000
	022 Add X20, X20, 32
	023 Move X21, [X20]
	024 Move X24, [X24+3192]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_beginLocomotion(System.Action`1<UnityEngine.XR.Interaction.Toolkit.LocomotionSystem> value)

Disassembly:
	0x03B7B224 CBZ X9, 0x3B7B230
	0x03B7B228 LDR X21, [X9 + 0x38]
	0x03B7B22C B 0x3B7B234
	0x03B7B230 MOV X21, X31
	0x03B7B234 LDR X0, [X8]
	0x03B7B238 LDR W8, [X0 + 0xE0]
	0x03B7B23C CBNZ W8, 0x3B7B244
	0x03B7B240 BL 0x1C16DFC
	0x03B7B244 MOV X0, X21
	0x03B7B248 MOV X1, X31
	0x03B7B24C MOV X2, X31
	0x03B7B250 BL 0x3C354F8
	0x03B7B254 TBZ X0, 0x0, 0x3B7B2D4
	0x03B7B258 MOV X0, X19
	0x03B7B25C MOV X1, X20
	0x03B7B260 BL 0x3B7B3FC
	0x03B7B264 CBZ X0, 0x3B7B3F8
	0x03B7B268 CBZ X21, 0x3B7B3F8
	0x03B7B26C LDRB W23, [X0 + 0x10]
	0x03B7B270 LDRB W24, [X0 + 0x11]
	0x03B7B274 LDRB W25, [X0 + 0x12]
	0x03B7B278 MOV X0, X21
	0x03B7B27C MOV X1, X31
	0x03B7B280 BL 0x3C356F8
	0x03B7B284 CBZ X22, 0x3B7B3F8
	0x03B7B288 ADRP X10, 0x5DF000
	0x03B7B28C LDR X8, [X22]
	0x03B7B290 LDR X10, [X10 + 0x2F8]
	0x03B7B294 MOV X21, X0
	0x03B7B298 LDRH W9, [X8 + 0x12E]
	0x03B7B29C LDR X1, [X10]
	0x03B7B2A0 CBZ X9, 0x3B7B2C4
	0x03B7B2A4 LDR X10, [X8 + 0xB0]
	0x03B7B2A8 ADD X10, X10, 0x8
	0x03B7B2AC LDUR X11, [X10 - 0x8]
	0x03B7B2B0 CMP X11, X1
	0x03B7B2B4 B.EQ 0x3B7B2F0
	0x03B7B2B8 SUBS X9, X9, 0x1
	0x03B7B2BC ADD X10, X10, 0x10
	0x03B7B2C0 B.NE 0x3B7B2AC
	0x03B7B2C4 MOVZ W2, 0x5
	0x03B7B2C8 MOV X0, X22
	0x03B7B2CC BL 0x1C5C788
	0x03B7B2D0 B 0x3B7B300

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x868000
	009 Move W8, [X21+2747]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5E1000
	017 Move X0, [X0+3192]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2747], W8
	021 Move X24, 0x5E1000
	022 Add X20, X20, 32
	023 Move X21, [X20]
	024 Move X24, [X24+3192]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_endLocomotion(System.Action`1<UnityEngine.XR.Interaction.Toolkit.LocomotionSystem> value)

Disassembly:
	0x03B7B174 MOV X3, X31
	0x03B7B178 BL 0x339FA34
	0x03B7B17C LDR X8, [X19 + 0x50]
	0x03B7B180 CBZ X8, 0x3B7B1BC
	0x03B7B184 LDP W2, W9, [X8 + 0x18]
	0x03B7B188 ADD W9, W9, 0x1
	0x03B7B18C CMP W2, 0x1
	0x03B7B190 STP W31, W9, [X8 + 0x18]
	0x03B7B194 B.LT 0x3B7B1B0
	0x03B7B198 LDR X0, [X8 + 0x10]
	0x03B7B19C LDP X20, X19, [X31 + 0x10]
	0x03B7B1A0 MOV W1, W31
	0x03B7B1A4 MOV X3, X31
	0x03B7B1A8 LDR X30, [X31], #0x20
	0x03B7B1AC B 0x339FA34
	0x03B7B1B0 LDP X20, X19, [X31 + 0x10]
	0x03B7B1B4 LDR X30, [X31], #0x20
	0x03B7B1B8 RET
	0x03B7B1BC BL 0x1C16F20
	0x03B7B1C0 STR D10, [X31 - 0x60]!
	0x03B7B1C4 STP D9, D8, [X31 + 0x10]
	0x03B7B1C8 STP X30, X25, [X31 + 0x20]
	0x03B7B1CC STP X24, X23, [X31 + 0x30]
	0x03B7B1D0 STP X22, X21, [X31 + 0x40]
	0x03B7B1D4 STP X20, X19, [X31 + 0x50]
	0x03B7B1D8 ADRP X21, 0x867000
	0x03B7B1DC LDRB W8, [X21 + 0xA95]
	0x03B7B1E0 MOV X22, X2
	0x03B7B1E4 MOV X20, X1
	0x03B7B1E8 MOV X19, X0
	0x03B7B1EC TBNZ X8, 0x0, 0x3B7B210
	0x03B7B1F0 ADRP X0, 0x5DF000
	0x03B7B1F4 LDR X0, [X0 + 0x2F8]
	0x03B7B1F8 BL 0x1C16CF4
	0x03B7B1FC ADRP X0, 0x578000
	0x03B7B200 LDR X0, [X0 + 0x598]
	0x03B7B204 BL 0x1C16CF4
	0x03B7B208 MOVZ W8, 0x1
	0x03B7B20C STRB W8, [X21 + 0xA95]
	0x03B7B210 LDR X8, [X19 + 0x30]
	0x03B7B214 CBZ X8, 0x3B7B3F8
	0x03B7B218 LDR X9, [X8 + 0x30]
	0x03B7B21C ADRP X8, 0x578000
	0x03B7B220 LDR X8, [X8 + 0x598]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x868000
	009 Move W8, [X21+2748]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5E1000
	017 Move X0, [X0+3192]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2748], W8
	021 Move X24, 0x5E1000
	022 Add X20, X20, 40
	023 Move X21, [X20]
	024 Move X24, [X24+3192]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_endLocomotion(System.Action`1<UnityEngine.XR.Interaction.Toolkit.LocomotionSystem> value)

Disassembly:
	0x03B7B2D4 LDP X20, X19, [X31 + 0x50]
	0x03B7B2D8 LDP X22, X21, [X31 + 0x40]
	0x03B7B2DC LDP X24, X23, [X31 + 0x30]
	0x03B7B2E0 LDP X30, X25, [X31 + 0x20]
	0x03B7B2E4 LDP D9, D8, [X31 + 0x10]
	0x03B7B2E8 LDR V10, [X31], #0x60
	0x03B7B2EC RET
	0x03B7B2F0 LDR W9, [X10]
	0x03B7B2F4 ADD W9, W9, 0x5
	0x03B7B2F8 ADD X8, X8, W9, 0x4, SXTW
	0x03B7B2FC ADD X0, X8, 0x138
	0x03B7B300 LDP X8, X1, [X0]
	0x03B7B304 MOV X0, X22
	0x03B7B308 BLR X8
	0x03B7B30C CBZ X0, 0x3B7B3F8
	0x03B7B310 MOV X1, X31
	0x03B7B314 BL 0x3C3F58C
	0x03B7B318 MOV V10.16B, V0.16B
	0x03B7B31C MOV V9.16B, V1.16B
	0x03B7B320 MOV V8.16B, V2.16B
	0x03B7B324 CBZ W23, 0x3B7B348
	0x03B7B328 CBZ W24, 0x3B7B348
	0x03B7B32C CBZ W25, 0x3B7B348
	0x03B7B330 LDP S0, S1, [X19 + 0x58]
	0x03B7B334 LDR V2, [X19 + 0x60]
	0x03B7B338 FSUB S10, S0, S10
	0x03B7B33C FSUB S9, S1, S9
	0x03B7B340 FSUB S8, S2, S8
	0x03B7B344 B 0x3B7B3B8
	0x03B7B348 CBZ X20, 0x3B7B3F8
	0x03B7B34C MOV X0, X20
	0x03B7B350 BL 0x3B7A438
	0x03B7B354 CBZ X0, 0x3B7B3F8
	0x03B7B358 MOV V0.16B, V10.16B
	0x03B7B35C MOV V1.16B, V9.16B
	0x03B7B360 MOV V2.16B, V8.16B
	0x03B7B364 MOV X1, X31
	0x03B7B368 MOV X20, X0
	0x03B7B36C BL 0x3C40B58
	0x03B7B370 LDP S4, S3, [X19 + 0x68]
	0x03B7B374 CMP W25, 0x0
	0x03B7B378 MOV X0, X20
	0x03B7B37C MOV X1, X31
	0x03B7B380 FSUB S2, S3, S2

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x868000
	009 Move W8, [X21+2749]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5E1000
	017 Move X0, [X0+3192]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2749], W8
	021 Move X24, 0x5E1000
	022 Add X20, X20, 40
	023 Move X21, [X20]
	024 Move X24, [X24+3192]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: UnityEngine.XR.Interaction.Toolkit.LocomotionSystem get_system()

Disassembly:
	0x03B80268 LDR V9, [X19 + 0x4C]
	0x03B8026C MOV X0, X31

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_system(UnityEngine.XR.Interaction.Toolkit.LocomotionSystem value)

Disassembly:
	0x03B80270 BL 0x3C3C6C4
	0x03B80274 FADD S1, S8, S9

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.LocomotionPhase get_locomotionPhase()

Disassembly:
	0x03B80278 FCMP S1, S0
	0x03B8027C B.PL 0x3B80288

ISIL:
	001 Move W0, [X0+56]
	002 Return X0

Method: System.Void set_locomotionPhase(UnityEngine.XR.Interaction.Toolkit.LocomotionPhase value)

Disassembly:
	0x03B80280 STR W31, [X19 + 0x5C]
	0x03B80284 B 0x3B80470

ISIL:
	001 Move [X0+56], W1
	002 Return 

Method: System.Void Awake()

Disassembly:
	0x03B7BCCC MOV X1, X31
	0x03B7BCD0 MOV X2, X31
	0x03B7BCD4 BL 0x3C3883C
	0x03B7BCD8 TBNZ X0, 0x0, 0x3B7BDA0
	0x03B7BCDC MOV X21, X19
	0x03B7BCE0 LDR X22, [X21 + 0x50]!
	0x03B7BCE4 LDR X0, [X23]
	0x03B7BCE8 LDR W8, [X0 + 0xE0]
	0x03B7BCEC CBNZ W8, 0x3B7BCF4
	0x03B7BCF0 BL 0x1C16DFC
	0x03B7BCF4 MOV X0, X22
	0x03B7BCF8 MOV X1, X31
	0x03B7BCFC MOV X2, X31
	0x03B7BD00 BL 0x3C3883C
	0x03B7BD04 TBZ X0, 0x0, 0x3B7BDA0
	0x03B7BD08 LDRB W8, [X19 + 0x58]
	0x03B7BD0C CBNZ W8, 0x3B7BDA0
	0x03B7BD10 CBZ X20, 0x3B7BDB0
	0x03B7BD14 ADRP X8, 0x5E0000
	0x03B7BD18 LDR X8, [X8 + 0xD68]
	0x03B7BD1C MOV X0, X20
	0x03B7BD20 MOV X1, X21
	0x03B7BD24 LDR X2, [X8]
	0x03B7BD28 BL 0x21E6600
	0x03B7BD2C TBNZ X0, 0x0, 0x3B7BD98
	0x03B7BD30 LDR X8, [X19 + 0x30]
	0x03B7BD34 CBZ X8, 0x3B7BDB0
	0x03B7BD38 LDR X0, [X8 + 0x30]
	0x03B7BD3C CBZ X0, 0x3B7BDB0
	0x03B7BD40 MOV X1, X31
	0x03B7BD44 BL 0x3C32ECC
	0x03B7BD48 LDR X8, [X23]
	0x03B7BD4C MOV X22, X0
	0x03B7BD50 LDR W9, [X8 + 0xE0]
	0x03B7BD54 CBNZ W9, 0x3B7BD60
	0x03B7BD58 MOV X0, X8
	0x03B7BD5C BL 0x1C16DFC
	0x03B7BD60 MOV X0, X20
	0x03B7BD64 MOV X1, X22
	0x03B7BD68 MOV X2, X31
	0x03B7BD6C BL 0x3C354F8
	0x03B7BD70 TBZ X0, 0x0, 0x3B7BD98
	0x03B7BD74 LDR X8, [X19 + 0x30]
	0x03B7BD78 CBZ X8, 0x3B7BDB0
	0x03B7BD7C LDR X0, [X8 + 0x30]
	0x03B7BD80 CBZ X0, 0x3B7BDB0
	0x03B7BD84 ADRP X8, 0x59F000
	0x03B7BD88 LDR X8, [X8 + 0x930]
	0x03B7BD8C MOV X1, X21
	0x03B7BD90 LDR X2, [X8]
	0x03B7BD94 BL 0x21A4990
	0x03B7BD98 MOVZ W8, 0x1
	0x03B7BD9C STRB W8, [X19 + 0x58]
	0x03B7BDA0 LDP X20, X19, [X31 + 0x20]
	0x03B7BDA4 LDP X22, X21, [X31 + 0x10]
	0x03B7BDA8 LDP X30, X23, [X31], #0x30
	0x03B7BDAC RET
	0x03B7BDB0 BL 0x1C16F20
	0x03B7BDB4 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x868000
	007 Move X22, 0x579000
	008 Move W8, [X19+2750]
	009 Move X22, [X22+1432]
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x5E1000
	016 Move X0, [X0+3344]
	017 Call 0x1C17CF4
	018 Move X0, 0x5E1000
	019 Move X0, [X0+3352]
	020 Call 0x1C17CF4
	021 Move X0, 0x579000
	022 Move X0, [X0+1432]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X19+2750], W8
	026 Move X19, X20
	027 Add X19, X19, 48
	028 Move X21, [X19]
	029 Move X0, [X22]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X21
	035 Move X1, X31
	036 Move X2, X31
	037 Call Object.op_Equality, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {73}
	042 Move X8, 0x5E1000
	043 Move X8, [X8+3352]
	044 Move X0, X20
	045 Move X1, [X8]
	046 Call 0x21A4F50, X0
	047 Move [X20+48], X0
	048 Move X21, X0
	049 Move X0, [X22]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, X21
	055 Move X1, X31
	056 Move X2, X31
	057 Call Object.op_Equality, X0, X1
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {73}
	062 Move X8, 0x5E1000
	063 Move X8, [X8+3344]
	064 Move X0, X19
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X1, [X8]
	070 Move X30, [X31+48]
	071 Call 0x2960A30, X0
	072 Return 
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X30, [X31+48]
	078 Return 

Method: System.Boolean CanBeginLocomotion()

Disassembly:
	0x03B7CDB4 MOV V3.16B, V13.16B
	0x03B7CDB8 MOV V4.16B, V12.16B
	0x03B7CDBC MOV V5.16B, V11.16B
	0x03B7CDC0 MOV X0, X31
	0x03B7CDC4 BL 0x3C2A1AC
	0x03B7CDC8 MOV V4.16B, V9.16B
	0x03B7CDCC MOV V5.16B, V10.16B
	0x03B7CDD0 MOV V6.16B, V8.16B
	0x03B7CDD4 MOV X0, X31
	0x03B7CDD8 BL 0x3C2A9FC
	0x03B7CDDC FMUL S0, S15, S0
	0x03B7CDE0 FMUL S1, S15, S1
	0x03B7CDE4 FMUL S2, S15, S2
	0x03B7CDE8 MOV X0, X20
	0x03B7CDEC MOV X1, X31
	0x03B7CDF0 BL 0x3C40610
	0x03B7CDF4 B 0x3B7CAC0
	0x03B7CDF8 BL 0x1C16F20
	0x03B7CDFC SUB X31, X31, 0x70
	0x03B7CE00 STP D15, D14, [X31 + 0x10]
	0x03B7CE04 STP D13, D12, [X31 + 0x20]
	0x03B7CE08 STP D11, D10, [X31 + 0x30]
	0x03B7CE0C STP D9, D8, [X31 + 0x40]
	0x03B7CE10 STP X30, X21, [X31 + 0x50]
	0x03B7CE14 STP X20, X19, [X31 + 0x60]
	0x03B7CE18 ADRP X20, 0x866000
	0x03B7CE1C LDRB W8, [X20 + 0xAA7]
	0x03B7CE20 MOV V8.16B, V2.16B
	0x03B7CE24 MOV V9.16B, V1.16B
	0x03B7CE28 MOV V10.16B, V0.16B
	0x03B7CE2C MOV X19, X0
	0x03B7CE30 TBNZ X8, 0x0, 0x3B7CE54
	0x03B7CE34 ADRP X0, 0x577000
	0x03B7CE38 LDR X0, [X0 + 0x598]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x867000
	006 Move X20, 0x578000
	007 Move W8, [X21+2751]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x578000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2751], W8
	019 Move X0, [X20]
	020 Move X20, [X19+48]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Equality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {34}
	033 Move W8, W31
	034 Move X0, [X19+48]
	035 Compare X0, 0
	036 JumpIfEqual {45}
	037 Call LocomotionSystem.get_busy, X0
	038 Xor W8, W0, 1
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 And W0, W8, 1
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return X0
	045 Call 0x1C17F20

Method: System.Boolean BeginLocomotion()

Disassembly:
	0x03B7C060 RET
	0x03B7C064 STP D9, D8, [X31 - 0x30]!
	0x03B7C068 STP X30, X21, [X31 + 0x10]
	0x03B7C06C STP X20, X19, [X31 + 0x20]
	0x03B7C070 ADRP X20, 0x866000
	0x03B7C074 LDRB W8, [X20 + 0xA9F]
	0x03B7C078 MOV X19, X0
	0x03B7C07C TBNZ X8, 0x0, 0x3B7C094
	0x03B7C080 ADRP X0, 0x59F000
	0x03B7C084 LDR X0, [X0 + 0x3C0]
	0x03B7C088 BL 0x1C16CF4
	0x03B7C08C MOVZ W8, 0x1
	0x03B7C090 STRB W8, [X20 + 0xA9F]
	0x03B7C094 ADRP X20, 0x59F000
	0x03B7C098 LDR X20, [X20 + 0x3C0]
	0x03B7C09C ADD X0, X19, 0x78
	0x03B7C0A0 MOV X1, X31
	0x03B7C0A4 BL 0x3745120
	0x03B7C0A8 CBZ X0, 0x3B7C0C0
	0x03B7C0AC LDR X1, [X20]
	0x03B7C0B0 BL 0x21F5E68
	0x03B7C0B4 MOV V8.16B, V0.16B
	0x03B7C0B8 MOV V9.16B, V1.16B
	0x03B7C0BC B 0x3B7C0F4
	0x03B7C0C0 ADRP X21, 0x85D000
	0x03B7C0C4 LDRB W8, [X21 + 0x78F]
	0x03B7C0C8 CBNZ W8, 0x3B7C0E0
	0x03B7C0CC ADRP X0, 0x57F000
	0x03B7C0D0 LDR X0, [X0 + 0xF08]
	0x03B7C0D4 BL 0x1C16CF4
	0x03B7C0D8 MOVZ W8, 0x1
	0x03B7C0DC STRB W8, [X21 + 0x78F]
	0x03B7C0E0 ADRP X8, 0x57F000
	0x03B7C0E4 LDR X8, [X8 + 0xF08]
	0x03B7C0E8 LDR X8, [X8]
	0x03B7C0EC LDR X8, [X8 + 0xB8]
	0x03B7C0F0 LDP S8, S9, [X8]
	0x03B7C0F4 ADD X0, X19, 0x90
	0x03B7C0F8 MOV X1, X31
	0x03B7C0FC BL 0x3745120
	0x03B7C100 CBZ X0, 0x3B7C110
	0x03B7C104 LDR X1, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x867000
	006 Move X20, 0x578000
	007 Move W8, [X21+2752]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x578000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2752], W8
	019 Move X0, [X20]
	020 Move X20, [X19+48]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Equality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {40}
	033 Move X0, [X19+48]
	034 Compare X0, 0
	035 JumpIfEqual {55}
	036 Move X1, X19
	037 Call LocomotionSystem.RequestExclusiveOperation, X0, X1
	038 Compare W0, 0
	039 JumpIfEqual {46}
	040 Move W0, W31
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return X0
	046 Move X8, [X19+32]
	047 Compare X8, 0
	048 JumpIfEqual {54}
	049 Move X1, [X19+48]
	050 Move X9, [X8+24]
	051 Move X0, [X8+64]
	052 Move X2, [X8+40]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move W0, 1
	055 Call 0x1C17F20

Method: System.Boolean EndLocomotion()

Disassembly:
	0x03B7C484 BL 0x3BB9958
	0x03B7C488 LDP X30, X19, [X31 + 0x40]
	0x03B7C48C ADD X31, X31, 0x50
	0x03B7C490 RET
	0x03B7C494 SUB X31, X31, 0x50
	0x03B7C498 STP X30, X19, [X31 + 0x40]
	0x03B7C49C LDR X8, [X0 + 0x60]
	0x03B7C4A0 LDR V0, [X0 + 0x5]
	0x03B7C4A4 MOV X19, X0
	0x03B7C4A8 ADD X0, X31, 0x20
	0x03B7C4AC MOV X1, X31
	0x03B7C4B0 STR X8, [X31 + 0x30]
	0x03B7C4B4 STR V0, [X31 + 0x2]
	0x03B7C4B8 BL 0x3BB99F0
	0x03B7C4BC LDR X8, [X19 + 0x78]
	0x03B7C4C0 LDUR V0, [X19 + 0x68]
	0x03B7C4C4 ADD X0, X31, 0x0
	0x03B7C4C8 MOV X1, X31
	0x03B7C4CC STR X8, [X31 + 0x10]
	0x03B7C4D0 STR V0, [X31]
	0x03B7C4D4 BL 0x3BB99F0
	0x03B7C4D8 LDP X30, X19, [X31 + 0x40]
	0x03B7C4DC ADD X31, X31, 0x50
	0x03B7C4E0 RET
	0x03B7C4E4 STP D9, D8, [X31 - 0x30]!
	0x03B7C4E8 STP X30, X21, [X31 + 0x10]
	0x03B7C4EC STP X20, X19, [X31 + 0x20]
	0x03B7C4F0 ADRP X20, 0x866000
	0x03B7C4F4 LDRB W8, [X20 + 0xAA2]
	0x03B7C4F8 MOV X19, X0
	0x03B7C4FC TBNZ X8, 0x0, 0x3B7C514
	0x03B7C500 ADRP X0, 0x59F000
	0x03B7C504 LDR X0, [X0 + 0x3C0]
	0x03B7C508 BL 0x1C16CF4
	0x03B7C50C MOVZ W8, 0x1
	0x03B7C510 STRB W8, [X20 + 0xAA2]
	0x03B7C514 ADRP X20, 0x59F000
	0x03B7C518 LDR X20, [X20 + 0x3C0]
	0x03B7C51C ADD X0, X19, 0x50
	0x03B7C520 MOV X1, X31
	0x03B7C524 BL 0x3745120
	0x03B7C528 CBZ X0, 0x3B7C540

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x867000
	006 Move X20, 0x578000
	007 Move W8, [X21+2753]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x578000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2753], W8
	019 Move X0, [X20]
	020 Move X20, [X19+48]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Equality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {40}
	033 Move X0, [X19+48]
	034 Compare X0, 0
	035 JumpIfEqual {55}
	036 Move X1, X19
	037 Call LocomotionSystem.FinishExclusiveOperation, X0, X1
	038 Compare W0, 0
	039 JumpIfEqual {46}
	040 Move W0, W31
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return X0
	046 Move X8, [X19+40]
	047 Compare X8, 0
	048 JumpIfEqual {54}
	049 Move X1, [X19+48]
	050 Move X9, [X8+24]
	051 Move X0, [X8+64]
	052 Move X2, [X8+40]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move W0, 1
	055 Call 0x1C17F20

Method: System.Void add_startLocomotion(System.Action`1<UnityEngine.XR.Interaction.Toolkit.LocomotionSystem> value)

Disassembly:
	0x03B804A4 ADRP X0, 0x573000
	0x03B804A8 LDR X0, [X0 + 0x5A8]
	0x03B804AC BL 0x1C16CF4
	0x03B804B0 MOVZ W8, 0x1
	0x03B804B4 STRB W8, [X20 + 0xAD2]
	0x03B804B8 LDR V0, [X19 + 0x5C]
	0x03B804BC FCMP S0, 0x0
	0x03B804C0 B.GT 0x3B80550
	0x03B804C4 MOV X0, X19
	0x03B804C8 BL 0x3B7BDB4
	0x03B804CC TBZ X0, 0x0, 0x3B80550
	0x03B804D0 LDR W8, [X19 + 0x38]
	0x03B804D4 CBNZ W8, 0x3B804EC
	0x03B804D8 MOVZ W8, 0x1
	0x03B804DC MOV X0, X31
	0x03B804E0 STR W8, [X19 + 0x38]
	0x03B804E4 BL 0x3C3C6C4
	0x03B804E8 STR S0, [X19 + 0x60]
	0x03B804EC ADRP X8, 0x573000
	0x03B804F0 LDR X8, [X8 + 0x5A8]
	0x03B804F4 LDR X0, [X8]
	0x03B804F8 LDR W8, [X0 + 0xE0]
	0x03B804FC CBNZ W8, 0x3B80504
	0x03B80500 BL 0x1C16DFC
	0x03B80504 FCMP S8, 0x0
	0x03B80508 B.EQ 0x3B80514
	0x03B8050C B.VS 0x3B80514
	0x03B80510 STR S8, [X19 + 0x58]
	0x03B80514 LDR V0, [X19 + 0x54]
	0x03B80518 FCMP S0, 0x0
	0x03B8051C B.LE 0x3B8053C
	0x03B80520 MOV X0, X31
	0x03B80524 BL 0x3C3C6C4
	0x03B80528 LDR V1, [X19 + 0x60]
	0x03B8052C LDR V2, [X19 + 0x54]
	0x03B80530 FSUB S0, S0, S1
	0x03B80534 FCMP S0, S2
	0x03B80538 B.MI 0x3B80550
	0x03B8053C MOVZ W8, 0x2
	0x03B80540 MOV X0, X31
	0x03B80544 STR W8, [X19 + 0x38]
	0x03B80548 BL 0x3C3C6C4
	0x03B8054C STR S0, [X19 + 0x5C]
	0x03B80550 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x863000
	009 Move W8, [X21+2754]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5DC000
	017 Move X0, [X0+3192]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2754], W8
	021 Move X24, 0x5DC000
	022 Add X20, X20, 64
	023 Move X21, [X20]
	024 Move X24, [X24+3192]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_startLocomotion(System.Action`1<UnityEngine.XR.Interaction.Toolkit.LocomotionSystem> value)

Disassembly:
	0x03B80554 LDR X30, [X31 + 0x8]
	0x03B80558 LDR V8, [X31], #0x20
	0x03B8055C RET
	0x03B80560 STR D10, [X31 - 0x30]!
	0x03B80564 STP D9, D8, [X31 + 0x8]
	0x03B80568 STR X30, [X31 + 0x18]
	0x03B8056C STP X20, X19, [X31 + 0x20]
	0x03B80570 ADRP X20, 0x859000
	0x03B80574 LDRB W8, [X20 + 0x78F]
	0x03B80578 MOV V9.16B, V1.16B
	0x03B8057C MOV V10.16B, V0.16B
	0x03B80580 MOV X19, X0
	0x03B80584 CBNZ W8, 0x3B8059C
	0x03B80588 ADRP X0, 0x57B000
	0x03B8058C LDR X0, [X0 + 0xF08]
	0x03B80590 BL 0x1C16CF4
	0x03B80594 MOVZ W8, 0x1
	0x03B80598 STRB W8, [X20 + 0x78F]
	0x03B8059C ADRP X8, 0x57B000
	0x03B805A0 LDR X8, [X8 + 0xF08]
	0x03B805A4 FMOV S8, W31
	0x03B805A8 LDR X8, [X8]
	0x03B805AC LDR X8, [X8 + 0xB8]
	0x03B805B0 LDP S0, S1, [X8]
	0x03B805B4 ADRP X8, 0xFFFFFFFFFCF69000
	0x03B805B8 LDR V2, [X8 + 0xF20]
	0x03B805BC FSUB S0, S10, S0
	0x03B805C0 FSUB S1, S9, S1
	0x03B805C4 FMUL S0, S0, S0
	0x03B805C8 FMUL S1, S1, S1
	0x03B805CC FADD S0, S0, S1
	0x03B805D0 FCMP S0, S2
	0x03B805D4 B.MI 0x3B80634
	0x03B805D8 MOV V0.16B, V10.16B
	0x03B805DC MOV V1.16B, V9.16B
	0x03B805E0 MOV X0, X31
	0x03B805E4 BL 0x3BB9548
	0x03B805E8 CMP W0, 0x3
	0x03B805EC B.EQ 0x3B80614
	0x03B805F0 CMP W0, 0x2
	0x03B805F4 B.EQ 0x3B80628
	0x03B805F8 CMP W0, 0x1
	0x03B805FC B.NE 0x3B80634
	0x03B80600 LDRB W8, [X19 + 0x51]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x863000
	009 Move W8, [X21+2755]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5DC000
	017 Move X0, [X0+3192]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2755], W8
	021 Move X24, 0x5DC000
	022 Add X20, X20, 64
	023 Move X21, [X20]
	024 Move X24, [X24+3192]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void .ctor()

Disassembly:
	0x03B7C65C BL 0x1C16F10
	0x03B7C660 LDR X1, [X20]

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

