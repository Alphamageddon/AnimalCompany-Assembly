Type: UnityEngine.XR.Interaction.Toolkit.ClimbProvider

Method: UnityEngine.XR.Interaction.Toolkit.ClimbSettingsDatumProperty get_climbSettings()

Disassembly:
	0x03B7BBFC MOV X1, X31
	0x03B7BC00 BL 0x3C8FA08

ISIL:
	001 Move X0, [X0+112]
	002 Return X0

Method: System.Void set_climbSettings(UnityEngine.XR.Interaction.Toolkit.ClimbSettingsDatumProperty value)

Disassembly:
	0x03B7BC04 MOV X0, X19
	0x03B7BC08 LDP X20, X19, [X31 + 0x60]

ISIL:
	001 Move [X0+112], X1
	002 Return 

Method: System.Void Awake()

Disassembly:
	0x03B7BC0C LDP X30, X21, [X31 + 0x50]
	0x03B7BC10 LDP D9, D8, [X31 + 0x40]
	0x03B7BC14 LDP D11, D10, [X31 + 0x30]
	0x03B7BC18 LDP D13, D12, [X31 + 0x20]
	0x03B7BC1C LDP D15, D14, [X31 + 0x10]
	0x03B7BC20 ADD X31, X31, 0x70
	0x03B7BC24 B 0x3B7B484
	0x03B7BC28 LDP X20, X19, [X31 + 0x60]
	0x03B7BC2C LDP X30, X21, [X31 + 0x50]
	0x03B7BC30 LDP D9, D8, [X31 + 0x40]
	0x03B7BC34 LDP D11, D10, [X31 + 0x30]
	0x03B7BC38 LDP D13, D12, [X31 + 0x20]
	0x03B7BC3C LDP D15, D14, [X31 + 0x10]
	0x03B7BC40 ADD X31, X31, 0x70
	0x03B7BC44 RET
	0x03B7BC48 BL 0x1C16F20
	0x03B7BC4C STP X30, X23, [X31 - 0x30]!
	0x03B7BC50 STP X22, X21, [X31 + 0x10]
	0x03B7BC54 STP X20, X19, [X31 + 0x20]
	0x03B7BC58 ADRP X20, 0x867000
	0x03B7BC5C LDRB W8, [X20 + 0xA9E]
	0x03B7BC60 MOV X19, X0
	0x03B7BC64 TBNZ X8, 0x0, 0x3B7BC94
	0x03B7BC68 ADRP X0, 0x59F000
	0x03B7BC6C LDR X0, [X0 + 0x930]
	0x03B7BC70 BL 0x1C16CF4
	0x03B7BC74 ADRP X0, 0x5E0000
	0x03B7BC78 LDR X0, [X0 + 0xD68]
	0x03B7BC7C BL 0x1C16CF4
	0x03B7BC80 ADRP X0, 0x578000
	0x03B7BC84 LDR X0, [X0 + 0x598]
	0x03B7BC88 BL 0x1C16CF4
	0x03B7BC8C MOVZ W8, 0x1
	0x03B7BC90 STRB W8, [X20 + 0xA9E]
	0x03B7BC94 LDR X8, [X19 + 0x30]
	0x03B7BC98 CBZ X8, 0x3B7BDB0
	0x03B7BC9C ADRP X23, 0x578000
	0x03B7BCA0 LDR X8, [X8 + 0x30]
	0x03B7BCA4 LDR X23, [X23 + 0x598]
	0x03B7BCA8 CBZ X8, 0x3B7BCB4
	0x03B7BCAC LDR X20, [X8 + 0x38]
	0x03B7BCB0 B 0x3B7BCB8
	0x03B7BCB4 MOV X20, X31
	0x03B7BCB8 LDR X0, [X23]
	0x03B7BCBC LDR W8, [X0 + 0xE0]
	0x03B7BCC0 CBNZ W8, 0x3B7BCC8
	0x03B7BCC4 BL 0x1C16DFC
	0x03B7BCC8 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x868000
	006 Move W8, [X20+2704]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x5E1000
	013 Move X0, [X0+3320]
	014 Call 0x1C17CF4
	015 Move X0, 0x5E1000
	016 Move X0, [X0+3328]
	017 Call 0x1C17CF4
	018 Move X0, 0x5E1000
	019 Move X0, [X0+3336]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+2704], W8
	023 Move X0, X19
	024 Call LocomotionProvider.Awake, X0
	025 Move X0, [X19+112]
	026 Compare X0, 0
	027 JumpIfEqual {34}
	028 Move X8, 0x5E1000
	029 Move X8, [X8+3336]
	030 Move X1, [X8]
	031 Call DatumProperty`2<Object, Object>.get_Value, X0
	032 Compare X0, 0
	033 JumpIfNotEqual {53}
	034 Move X8, 0x5E1000
	035 Move X8, [X8+3328]
	036 Move X21, 0x5E1000
	037 Move X0, [X8]
	038 Move X21, [X21+3320]
	039 Call 0x1C17F10
	040 Move W8, 257
	041 Move W9, 1
	042 Move X1, X31
	043 Move X20, X0
	044 NotImplemented "Instruction STRH not yet implemented."
	045 Move [X0+18], W9
	046 Call Object..ctor, X0
	047 Move X0, [X21]
	048 Call 0x1C17F10
	049 Move X1, X20
	050 Move X21, X0
	051 Call ClimbSettingsDatumProperty..ctor, X0, X1
	052 Move [X19+112], X21
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Return 

Method: System.Void StartClimbGrab(UnityEngine.XR.Interaction.Toolkit.ClimbInteractable climbInteractable, UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor)

Disassembly:
	0x03B7B7F0 ADRP X8, 0x578000
	0x03B7B7F4 LDR X8, [X8 + 0x598]
	0x03B7B7F8 CBZ X9, 0x3B7B804
	0x03B7B7FC LDR X20, [X9 + 0x38]
	0x03B7B800 B 0x3B7B808
	0x03B7B804 MOV X20, X31
	0x03B7B808 LDR X0, [X8]
	0x03B7B80C LDR W8, [X0 + 0xE0]
	0x03B7B810 CBNZ W8, 0x3B7B818
	0x03B7B814 BL 0x1C16DFC
	0x03B7B818 MOV X0, X20
	0x03B7B81C MOV X1, X31
	0x03B7B820 MOV X2, X31
	0x03B7B824 BL 0x3C3883C
	0x03B7B828 TBNZ X0, 0x0, 0x3B7B934
	0x03B7B82C LDR X8, [X19]
	0x03B7B830 ADD X1, X31, 0xC
	0x03B7B834 MOV X0, X19
	0x03B7B838 LDP X9, X2, [X8 + 0x188]
	0x03B7B83C BLR X9
	0x03B7B840 LDR W8, [X19 + 0x4C]
	0x03B7B844 MOV V9.16B, V0.16B
	0x03B7B848 MOV V8.16B, V1.16B
	0x03B7B84C MOV V10.16B, V2.16B
	0x03B7B850 CBZ W8, 0x3B7B860
	0x03B7B854 CMP W8, 0x1
	0x03B7B858 B.EQ 0x3B7B8D4
	0x03B7B85C B 0x3B7B8F0
	0x03B7B860 LDRB W8, [X31 + 0xC]
	0x03B7B864 CBNZ W8, 0x3B7B8D4
	0x03B7B868 ADRP X20, 0x85D000
	0x03B7B86C LDR V11, [X19 + 0x5C]
	0x03B7B870 LDRB W8, [X20 + 0x783]
	0x03B7B874 LDR V12, [X19 + 0x60]
	0x03B7B878 CBNZ W8, 0x3B7B890
	0x03B7B87C ADRP X0, 0x578000
	0x03B7B880 LDR X0, [X0 + 0x5A0]
	0x03B7B884 BL 0x1C16CF4
	0x03B7B888 MOVZ W8, 0x1
	0x03B7B88C STRB W8, [X20 + 0x783]
	0x03B7B890 ADRP X8, 0x578000
	0x03B7B894 LDR X8, [X8 + 0x5A0]
	0x03B7B898 LDR X8, [X8]
	0x03B7B89C LDR X8, [X8 + 0xB8]
	0x03B7B8A0 LDR V0, [X8]
	0x03B7B8A4 LDUR V1, [X8 + 0x4]
	0x03B7B8A8 ADRP X8, 0xFFFFFFFFFCF6E000
	0x03B7B8AC LDR V2, [X8 + 0xF20]
	0x03B7B8B0 FSUB S0, S11, S0
	0x03B7B8B4 FSUB V1.2S, V12.2S, V1.2S
	0x03B7B8B8 FMUL S0, S0, S0
	0x00000000 INVALID
	0x03B7B8C0 FADD S0, S0, S1
	0x03B7B8C4 MOV S1, V1.S[1]
	0x03B7B8C8 FADD S0, S1, S0
	0x03B7B8CC FCMP S0, S2
	0x03B7B8D0 B.MI 0x3B7B8F0
	0x03B7B8D4 LDR X8, [X19]
	0x03B7B8D8 MOV X0, X19
	0x03B7B8DC MOV V0.16B, V9.16B
	0x03B7B8E0 MOV V1.16B, V8.16B
	0x03B7B8E4 LDP X9, X1, [X8 + 0x198]
	0x03B7B8E8 MOV V2.16B, V10.16B
	0x03B7B8EC BLR X9
	0x03B7B8F0 LDR W8, [X19 + 0x38]
	0x03B7B8F4 CMP W8, 0x2
	0x03B7B8F8 B.CC 0x3B7B914
	0x03B7B8FC B.EQ 0x3B7B924
	0x03B7B900 CMP W8, 0x3
	0x03B7B904 B.NE 0x3B7B934
	0x03B7B908 LDRB W8, [X19 + 0x59]
	0x03B7B90C UBFM W8, W8, 0x1F, 0x1E
	0x03B7B910 B 0x3B7B930
	0x03B7B914 LDRB W8, [X19 + 0x59]
	0x03B7B918 CBZ W8, 0x3B7B934
	0x03B7B91C MOVZ W8, 0x2
	0x03B7B920 B 0x3B7B930
	0x03B7B924 LDRB W8, [X19 + 0x59]
	0x03B7B928 CBNZ W8, 0x3B7B934
	0x03B7B92C MOVZ W8, 0x3
	0x03B7B930 STR W8, [X19 + 0x38]
	0x03B7B934 LDP X20, X19, [X31 + 0x40]
	0x03B7B938 LDR X30, [X31 + 0x38]
	0x03B7B93C LDP D9, D8, [X31 + 0x28]
	0x03B7B940 LDP D11, D10, [X31 + 0x18]
	0x03B7B944 LDR V12, [X31 + 0x10]
	0x03B7B948 ADD X31, X31, 0x50
	0x03B7B94C RET
	0x03B7B950 BL 0x1C16F20
	0x03B7B954 SUB X31, X31, 0x70
	0x03B7B958 STP D15, D14, [X31 + 0x10]
	0x03B7B95C STP D13, D12, [X31 + 0x20]
	0x03B7B960 STP D11, D10, [X31 + 0x30]
	0x03B7B964 STP D9, D8, [X31 + 0x40]
	0x03B7B968 STP X30, X21, [X31 + 0x50]
	0x03B7B96C STP X20, X19, [X31 + 0x60]
	0x03B7B970 ADRP X20, 0x867000
	0x03B7B974 LDRB W8, [X20 + 0xA9D]
	0x03B7B978 MOV V8.16B, V2.16B
	0x03B7B97C MOV V9.16B, V1.16B

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x868000
	007 Move W8, [X22+2705]
	008 Move X20, X2
	009 Move X21, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x5E1000
	016 Move X0, [X0+3280]
	017 Call 0x1C17CF4
	018 Move X0, 0x5E0000
	019 Move X0, [X0+1152]
	020 Call 0x1C17CF4
	021 Move X0, 0x579000
	022 Move X0, [X0+1432]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+2705], W8
	026 Move X8, [X19+48]
	027 Compare X8, 0
	028 JumpIfEqual {111}
	029 Move X9, [X8+48]
	030 Move X8, 0x579000
	031 Move X8, [X8+1432]
	032 Compare X9, 0
	033 JumpIfEqual {35}
	034 Move X22, [X9+56]
	035 Move X22, X31
	036 Move X0, [X8]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X22
	042 Move X1, X31
	043 Move X2, X31
	044 Call Object.op_Equality, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {105}
	049 Move X0, [X19+72]
	050 Compare X0, 0
	051 JumpIfEqual {111}
	052 Move X9, 0x5E0000
	053 Move X9, [X9+1152]
	054 Move W10, [X0+28]
	055 Move X8, [X0+16]
	056 Move X9, [X9]
	057 Add W10, W10, 1
	058 Move [X0+28], W10
	059 Compare X8, 0
	060 JumpIfEqual {111}
	061 NotImplemented "Instruction LDRSW not yet implemented."
	062 Move W11, [X8+24]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Add W9, W10, 1
	065 Add X8, X8, X10
	066 Move [X0+24], W9
	067 Move [X8+32], X20
	068 Move X8, [X9+32]
	069 Move X1, X20
	070 Move X8, [X8+192]
	071 Move X2, [X8+112]
	072 Call List`1<Object>.AddWithResize, X0, X1
	073 Move X0, [X19+80]
	074 Compare X0, 0
	075 JumpIfEqual {111}
	076 Move X9, 0x5E1000
	077 Move X9, [X9+3280]
	078 Move W10, [X0+28]
	079 Move X8, [X0+16]
	080 Move X9, [X9]
	081 Add W10, W10, 1
	082 Move [X0+28], W10
	083 Compare X8, 0
	084 JumpIfEqual {111}
	085 NotImplemented "Instruction LDRSW not yet implemented."
	086 Move W11, [X8+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Add W9, W10, 1
	089 Add X8, X8, X10
	090 Move [X0+24], W9
	091 Move [X8+32], X21
	092 Move X8, [X9+32]
	093 Move X1, X21
	094 Move X8, [X8+192]
	095 Move X2, [X8+112]
	096 Call List`1<Object>.AddWithResize, X0, X1
	097 Move X0, X19
	098 Move X1, X21
	099 Move X2, X20
	100 Call ClimbProvider.UpdateClimbAnchor, X0, X1, X2
	101 Move W8, [X19+56]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move W8, 1
	104 Move [X19+56], W8
	105 Move X20, [X31+32]
	106 Move X19, [X31+40]
	107 Move X22, [X31+16]
	108 Move X21, [X31+24]
	109 Move X30, [X31+48]
	110 Return 
	111 Call 0x1C17F20

Method: System.Void FinishClimbGrab(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor)

Disassembly:
	0x03B7BA34 BL 0x1C16DFC
	0x03B7BA38 MOV X0, X21
	0x03B7BA3C MOV X1, X31
	0x03B7BA40 MOV X2, X31
	0x03B7BA44 BL 0x3C354F8
	0x03B7BA48 TBZ X0, 0x0, 0x3B7BB14
	0x03B7BA4C LDR X0, [X19 + 0x50]
	0x03B7BA50 CBZ X0, 0x3B7BC48
	0x03B7BA54 MOV X1, X31
	0x03B7BA58 BL 0x3C8F70C
	0x03B7BA5C TBZ X0, 0x0, 0x3B7BB14
	0x03B7BA60 LDR X0, [X19 + 0x50]
	0x03B7BA64 CBZ X0, 0x3B7BC48
	0x03B7BA68 MOV X1, X31
	0x03B7BA6C BL 0x3C8FAA0
	0x03B7BA70 TBNZ X0, 0x0, 0x3B7BB70
	0x03B7BA74 LDRB W8, [X19 + 0x4B]
	0x03B7BA78 CBZ W8, 0x3B7BB70
	0x03B7BA7C ADRP X8, 0x578000
	0x03B7BA80 LDR X8, [X8 + 0x5F8]
	0x03B7BA84 LDP S0, S15, [X19 + 0x5C]
	0x03B7BA88 LDR V14, [X19 + 0x64]
	0x03B7BA8C LDR X0, [X8]
	0x03B7BA90 STR S0, [X31 + 0xC]
	0x03B7BA94 LDR W8, [X0 + 0xE0]
	0x03B7BA98 CBNZ W8, 0x3B7BAA0
	0x03B7BA9C BL 0x1C16DFC
	0x03B7BAA0 MOV X0, X31
	0x03B7BAA4 BL 0x3C8A660
	0x03B7BAA8 MOV X0, X31
	0x03B7BAAC MOV V8.16B, V0.16B
	0x03B7BAB0 MOV V9.16B, V1.16B
	0x03B7BAB4 MOV V10.16B, V2.16B
	0x03B7BAB8 BL 0x3C3C714
	0x03B7BABC LDR V3, [X31 + 0xC]
	0x03B7BAC0 LDRB W8, [X19 + 0x48]
	0x03B7BAC4 FMUL S1, S8, S0
	0x03B7BAC8 FMUL S2, S9, S0
	0x03B7BACC FMUL S0, S10, S0
	0x03B7BAD0 FADD S9, S3, S1
	0x03B7BAD4 FADD S10, S15, S2
	0x03B7BAD8 FADD S14, S14, S0
	0x03B7BADC STP S9, S10, [X19 + 0x5C]
	0x03B7BAE0 STR S14, [X19 + 0x64]
	0x03B7BAE4 CBZ W8, 0x3B7BAF0
	0x03B7BAE8 FMOV S9, W31
	0x03B7BAEC STR W31, [X19 + 0x5C]
	0x03B7BAF0 LDRB W8, [X19 + 0x49]
	0x03B7BAF4 CBZ W8, 0x3B7BB00
	0x03B7BAF8 FMOV S10, W31
	0x03B7BAFC STR W31, [X19 + 0x60]
	0x03B7BB00 LDRB W8, [X19 + 0x4A]
	0x03B7BB04 CBZ W8, 0x3B7BBB0
	0x03B7BB08 FMOV S14, W31
	0x03B7BB0C STR W31, [X19 + 0x64]
	0x03B7BB10 B 0x3B7BBB0
	0x03B7BB14 MOV X0, X19
	0x03B7BB18 BL 0x3B7BDB4
	0x03B7BB1C TBZ X0, 0x0, 0x3B7BC28
	0x03B7BB20 MOV X0, X19
	0x03B7BB24 BL 0x3B7B060
	0x03B7BB28 TBZ X0, 0x0, 0x3B7BC28
	0x03B7BB2C MOVZ W8, 0x1
	0x03B7BB30 STRB W8, [X19 + 0x59]
	0x03B7BB34 CBZ X20, 0x3B7BC48
	0x03B7BB38 MOV X0, X20
	0x03B7BB3C MOV X1, X31
	0x03B7BB40 BL 0x3C356F8
	0x03B7BB44 CBZ X0, 0x3B7BC48
	0x03B7BB48 MOV X1, X31
	0x03B7BB4C MOV X20, X0
	0x03B7BB50 BL 0x3C3F58C
	0x03B7BB54 FADD S0, S13, S0
	0x03B7BB58 FADD S1, S12, S1
	0x03B7BB5C FADD S2, S11, S2
	0x03B7BB60 MOV X0, X20
	0x03B7BB64 MOV X1, X31
	0x03B7BB68 BL 0x3C3F62C
	0x03B7BB6C B 0x3B7BC04
	0x03B7BB70 ADRP X20, 0x85D000
	0x03B7BB74 LDRB W8, [X20 + 0x783]
	0x03B7BB78 CBNZ W8, 0x3B7BB90
	0x03B7BB7C ADRP X0, 0x578000
	0x03B7BB80 LDR X0, [X0 + 0x5A0]
	0x03B7BB84 BL 0x1C16CF4
	0x03B7BB88 MOVZ W8, 0x1
	0x03B7BB8C STRB W8, [X20 + 0x783]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x868000
	007 Move W8, [X21+2706]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0x5E1000
	015 Move X0, [X0+3288]
	016 Call 0x1C17CF4
	017 Move X0, 0x5E1000
	018 Move X0, [X0+3296]
	019 Call 0x1C17CF4
	020 Move X0, 0x5E1000
	021 Move X0, [X0+3304]
	022 Call 0x1C17CF4
	023 Move X0, 0x5E0000
	024 Move X0, [X0+360]
	025 Call 0x1C17CF4
	026 Move X0, 0x5E1000
	027 Move X0, [X0+3312]
	028 Call 0x1C17CF4
	029 Move X0, 0x5E0000
	030 Move X0, [X0+368]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+2706], W8
	034 Move X0, [X19+72]
	035 Compare X0, 0
	036 JumpIfEqual {106}
	037 Move X8, 0x5E1000
	038 Move X8, [X8+3288]
	039 Move X1, X20
	040 Move X2, [X8]
	041 Call List`1<Object>.IndexOf, X0, X1
	042 Move TEMP, X0
	043 And TEMP, TEMP, -2147483648
	044 Compare TEMP, -2147483648
	045 JumpIfEqual {100}
	046 Move W20, W0
	047 Compare W0, 0
	048 JumpIfEqual {78}
	049 Move X8, [X19+72]
	050 Compare X8, 0
	051 JumpIfEqual {106}
	052 Move W8, [X8+24]
	053 Subtract W8, W8, 1
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X0, [X19+80]
	056 Compare X0, 0
	057 JumpIfEqual {106}
	058 Move X8, 0x5E1000
	059 Move X8, [X8+3312]
	060 Subtract W21, W20, 1
	061 Move W1, W21
	062 Move X2, [X8]
	063 Call List`1<Object>.get_Item, X0, X1
	064 Move X8, [X19+72]
	065 Compare X8, 0
	066 JumpIfEqual {106}
	067 Move X9, 0x5E0000
	068 Move X9, [X9+368]
	069 Move X22, X0
	070 Move X0, X8
	071 Move W1, W21
	072 Move X2, [X9]
	073 Call List`1<Object>.get_Item, X0, X1
	074 Move X2, X0
	075 Move X0, X19
	076 Move X1, X22
	077 Call ClimbProvider.UpdateClimbAnchor, X0, X1, X2
	078 Move X0, [X19+72]
	079 Compare X0, 0
	080 JumpIfEqual {106}
	081 Move X8, 0x5E1000
	082 Move X8, [X8+3304]
	083 Move W1, W20
	084 Move X2, [X8]
	085 Call List`1<Object>.RemoveAt, X0, X1
	086 Move X0, [X19+80]
	087 Compare X0, 0
	088 JumpIfEqual {106}
	089 Move X8, 0x5E1000
	090 Move X8, [X8+3296]
	091 Move W1, W20
	092 Move X20, [X31+32]
	093 Move X19, [X31+40]
	094 Move X22, [X31+16]
	095 Move X21, [X31+24]
	096 Move X2, [X8]
	097 Move X30, [X31+48]
	098 Call List`1<Object>.RemoveAt, X0, X1
	099 Return 
	100 Move X20, [X31+32]
	101 Move X19, [X31+40]
	102 Move X22, [X31+16]
	103 Move X21, [X31+24]
	104 Move X30, [X31+48]
	105 Return 
	106 Call 0x1C17F20

Method: System.Void UpdateClimbAnchor(UnityEngine.XR.Interaction.Toolkit.ClimbInteractable climbInteractable, UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor)

Disassembly:
	0x03B7BE28 LDP X20, X19, [X31 + 0x10]
	0x03B7BE2C AND W0, W8, 0x1
	0x03B7BE30 LDP X30, X21, [X31], #0x20
	0x03B7BE34 RET
	0x03B7BE38 BL 0x1C16F20
	0x03B7BE3C MOVZ W8, 0x1
	0x03B7BE40 MOVZ W9, 0x101
	0x03B7BE44 MOV X1, X31
	0x03B7BE48 STRB W8, [X0 + 0x48]
	0x03B7BE4C STRH W9, [X0 + 0x4A]
	0x03B7BE50 B 0x3C36C30
	0x03B7BE54 LDR X9, [X0 + 0x88]
	0x03B7BE58 LDUR V0, [X0 + 0x78]
	0x03B7BE5C STR X9, [X8 + 0x10]
	0x03B7BE60 STR V0, [X8]
	0x03B7BE64 RET
	0x03B7BE68 SUB X31, X31, 0x30
	0x03B7BE6C STR X30, [X31 + 0x20]
	0x03B7BE70 LDR X8, [X1 + 0x10]
	0x03B7BE74 LDR V0, [X1]
	0x03B7BE78 ADD X1, X0, 0x78
	0x03B7BE7C ADD X2, X31, 0x0
	0x03B7BE80 STR X8, [X31 + 0x10]
	0x03B7BE84 STR V0, [X31]
	0x03B7BE88 BL 0x3B7BE98
	0x03B7BE8C LDR X30, [X31 + 0x20]
	0x03B7BE90 ADD X31, X31, 0x30
	0x03B7BE94 RET
	0x03B7BE98 SUB X31, X31, 0x70
	0x03B7BE9C STP X30, X23, [X31 + 0x40]
	0x03B7BEA0 STP X22, X21, [X31 + 0x50]
	0x03B7BEA4 STP X20, X19, [X31 + 0x60]
	0x03B7BEA8 ADRP X23, 0x867000
	0x03B7BEAC ADRP X22, 0x578000
	0x03B7BEB0 LDRB W8, [X23 + 0xAA0]
	0x03B7BEB4 LDR X22, [X22 + 0x970]
	0x03B7BEB8 MOV X21, X2
	0x03B7BEBC MOV X19, X1
	0x03B7BEC0 MOV X20, X0
	0x03B7BEC4 TBNZ X8, 0x0, 0x3B7BEDC
	0x03B7BEC8 ADRP X0, 0x578000
	0x03B7BECC LDR X0, [X0 + 0x970]
	0x03B7BED0 BL 0x1C16CF4
	0x03B7BED4 MOVZ W8, 0x1
	0x03B7BED8 STRB W8, [X23 + 0xAA0]
	0x03B7BEDC LDR X0, [X22]
	0x03B7BEE0 LDR W8, [X0 + 0xE0]
	0x03B7BEE4 CBNZ W8, 0x3B7BEEC
	0x03B7BEE8 BL 0x1C16DFC
	0x03B7BEEC MOV X0, X31
	0x03B7BEF0 BL 0x3C018E4
	0x03B7BEF4 TBZ X0, 0x0, 0x3B7BF14
	0x03B7BEF8 LDR X8, [X19 + 0x10]
	0x03B7BEFC LDR V0, [X19]
	0x03B7BF00 ADD X0, X31, 0x20
	0x03B7BF04 MOV X1, X31
	0x03B7BF08 STR X8, [X31 + 0x30]
	0x03B7BF0C STR V0, [X31 + 0x2]
	0x03B7BF10 BL 0x3BB99F0
	0x03B7BF14 LDR X8, [X21 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x868000
	007 Move W8, [X22+2707]
	008 Move X21, X2
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x5E0000
	016 Move X0, [X0+760]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2707], W8
	020 Compare X20, 0
	021 JumpIfEqual {72}
	022 Move X0, X20
	023 Call ClimbInteractable.get_climbTransform, X0
	024 Compare X21, 0
	025 JumpIfEqual {72}
	026 Move X10, 0x5E0000
	027 Move X8, [X21]
	028 Move X10, [X10+760]
	029 Move X20, X0
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 Move X1, [X10]
	032 Compare X9, 0
	033 JumpIfEqual {40}
	034 Move X10, [X8+176]
	035 Add X10, X10, 8
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Subtract X9, X9, 1
	039 Add X10, X10, 16
	040 Move W2, 5
	041 Move X0, X21
	042 Call 0x1C5D788
	043 Move W9, [X10]
	044 Add W9, W9, 5
	045 Add X8, X8, W9
	046 Add X0, X8, 312
	047 Move X8, [X0]
	048 Move X1, [X0+8]
	049 Move X0, X21
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Compare X0, 0
	052 JumpIfEqual {72}
	053 Move X1, X31
	054 Call Transform.get_position, X0
	055 Move [X19+88], S0
	056 Move [X19+96], S1
	057 Move [X19+96], S2
	058 Compare X20, 0
	059 JumpIfEqual {72}
	060 Move X0, X20
	061 Move X1, X31
	062 Call Transform.InverseTransformPoint, X0, X1
	063 Move [X19+100], S0
	064 Move [X19+108], S1
	065 Move [X19+108], S2
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 Return 
	072 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x03B7BF18 LDR V0, [X21]
	0x03B7BF1C STR X8, [X19 + 0x10]
	0x03B7BF20 STR V0, [X19]
	0x03B7BF24 LDR X0, [X22]
	0x03B7BF28 LDR W8, [X0 + 0xE0]
	0x03B7BF2C CBNZ W8, 0x3B7BF34
	0x03B7BF30 BL 0x1C16DFC
	0x03B7BF34 MOV X0, X31
	0x03B7BF38 BL 0x3C018E4
	0x03B7BF3C TBZ X0, 0x0, 0x3B7BF6C
	0x03B7BF40 MOV X0, X20
	0x03B7BF44 MOV X1, X31
	0x03B7BF48 BL 0x3C32454
	0x03B7BF4C TBZ X0, 0x0, 0x3B7BF6C
	0x03B7BF50 LDR X8, [X19 + 0x10]
	0x03B7BF54 LDR V0, [X19]
	0x03B7BF58 ADD X0, X31, 0x0
	0x03B7BF5C MOV X1, X31
	0x03B7BF60 STR X8, [X31 + 0x10]
	0x03B7BF64 STR V0, [X31]
	0x03B7BF68 BL 0x3BB9958
	0x03B7BF6C LDP X20, X19, [X31 + 0x60]
	0x03B7BF70 LDP X22, X21, [X31 + 0x50]
	0x03B7BF74 LDP X30, X23, [X31 + 0x40]
	0x03B7BF78 ADD X31, X31, 0x70
	0x03B7BF7C RET
	0x03B7BF80 LDR X9, [X0 + 0xA0]
	0x03B7BF84 LDR V0, [X0 + 0x9]
	0x03B7BF88 STR X9, [X8 + 0x10]
	0x03B7BF8C STR V0, [X8]
	0x03B7BF90 RET
	0x03B7BF94 SUB X31, X31, 0x30
	0x03B7BF98 STR X30, [X31 + 0x20]
	0x03B7BF9C LDR X8, [X1 + 0x10]
	0x03B7BFA0 LDR V0, [X1]
	0x03B7BFA4 ADD X1, X0, 0x90
	0x03B7BFA8 ADD X2, X31, 0x0
	0x03B7BFAC STR X8, [X31 + 0x10]
	0x03B7BFB0 STR V0, [X31]
	0x03B7BFB4 BL 0x3B7BE98
	0x03B7BFB8 LDR X30, [X31 + 0x20]
	0x03B7BFBC ADD X31, X31, 0x30
	0x03B7BFC0 RET
	0x03B7BFC4 SUB X31, X31, 0x50
	0x03B7BFC8 STP X30, X19, [X31 + 0x40]
	0x03B7BFCC LDR X8, [X0 + 0x88]
	0x03B7BFD0 LDUR V0, [X0 + 0x78]
	0x03B7BFD4 MOV X19, X0
	0x03B7BFD8 ADD X0, X31, 0x20
	0x03B7BFDC MOV X1, X31
	0x03B7BFE0 STR X8, [X31 + 0x30]
	0x03B7BFE4 STR V0, [X31 + 0x2]
	0x03B7BFE8 BL 0x3BB9958
	0x03B7BFEC LDR X8, [X19 + 0xA0]
	0x03B7BFF0 LDR V0, [X19 + 0x9]
	0x03B7BFF4 ADD X0, X31, 0x0
	0x03B7BFF8 MOV X1, X31
	0x03B7BFFC STR X8, [X31 + 0x10]
	0x03B7C000 STR V0, [X31]
	0x03B7C004 BL 0x3BB9958
	0x03B7C008 LDP X30, X19, [X31 + 0x40]
	0x03B7C00C ADD X31, X31, 0x50
	0x03B7C010 RET
	0x03B7C014 SUB X31, X31, 0x50
	0x03B7C018 STP X30, X19, [X31 + 0x40]
	0x03B7C01C LDR X8, [X0 + 0x88]
	0x03B7C020 LDUR V0, [X0 + 0x78]
	0x03B7C024 MOV X19, X0
	0x03B7C028 ADD X0, X31, 0x20
	0x03B7C02C MOV X1, X31
	0x03B7C030 STR X8, [X31 + 0x30]
	0x03B7C034 STR V0, [X31 + 0x2]
	0x03B7C038 BL 0x3BB99F0
	0x03B7C03C LDR X8, [X19 + 0xA0]
	0x03B7C040 LDR V0, [X19 + 0x9]
	0x03B7C044 ADD X0, X31, 0x0
	0x03B7C048 MOV X1, X31
	0x03B7C04C STR X8, [X31 + 0x10]
	0x03B7C050 STR V0, [X31]
	0x03B7C054 BL 0x3BB99F0
	0x03B7C058 LDP X30, X19, [X31 + 0x40]
	0x03B7C05C ADD X31, X31, 0x50

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x868000
	006 Move W8, [X20+2708]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0x5E0000
	013 Move X0, [X0+360]
	014 Call 0x1C17CF4
	015 Move X0, 0x5E1000
	016 Move X0, [X0+3312]
	017 Call 0x1C17CF4
	018 Move X0, 0x5E0000
	019 Move X0, [X0+368]
	020 Call 0x1C17CF4
	021 Move X0, 0x579000
	022 Move X0, [X0+1432]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+2708], W8
	026 Move W8, [X19+56]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move [X19+56], W31
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return 
	034 Move X0, [X19+72]
	035 Compare X0, 0
	036 JumpIfEqual {104}
	037 Move W9, [X0+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X0, X19
	041 Call LocomotionProvider.BeginLocomotion, X0
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {29}
	046 Move X0, [X19+72]
	047 Move W8, 2
	048 Move [X19+56], W8
	049 Compare X0, 0
	050 JumpIfEqual {104}
	051 Move X9, 0x5E0000
	052 Move W8, [X0+24]
	053 Move X9, [X9+368]
	054 Subtract W21, W8, 1
	055 Move X2, [X9]
	056 Move W1, W21
	057 Call List`1<Object>.get_Item, X0, X1
	058 Move X8, [X19+80]
	059 Compare X8, 0
	060 JumpIfEqual {104}
	061 Move X9, 0x5E1000
	062 Move X9, [X9+3312]
	063 Move X20, X0
	064 Move X0, X8
	065 Move W1, W21
	066 Move X2, [X9]
	067 Call List`1<Object>.get_Item, X0, X1
	068 Compare X20, 0
	069 JumpIfEqual {97}
	070 Move X8, 0x578000
	071 Move X8, [X8+1432]
	072 Move X21, X0
	073 Move X0, [X8]
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Move X0, X21
	079 Move X1, X31
	080 Move X2, X31
	081 Call Object.op_Equality, X0, X1
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {97}
	086 Move X0, X19
	087 Move X2, X20
	088 Move X20, [X31+16]
	089 Move X19, [X31+24]
	090 Move X1, X21
	091 Move X30, [X31+32]
	092 Move X21, [X31+40]
	093 Call ClimbProvider.StepClimbMovement, X0, X1, X2
	094 Return 
	095 Compare W8, 0
	096 JumpIfEqual {29}
	097 Move X0, X19
	098 Move X20, [X31+16]
	099 Move X19, [X31+24]
	100 Move X30, [X31+32]
	101 Move X21, [X31+40]
	102 Call ClimbProvider.FinishLocomotion, X0
	103 Return 
	104 Call 0x1C17F20

Method: System.Void StepClimbMovement(UnityEngine.XR.Interaction.Toolkit.ClimbInteractable currentClimbInteractable, UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor currentInteractor)

Disassembly:
	0x03B7C1C0 BL 0x1C16CF4
	0x03B7C1C4 ADRP X0, 0x5DF000
	0x03B7C1C8 LDR X0, [X0 + 0xD78]
	0x03B7C1CC BL 0x1C16CF4
	0x03B7C1D0 MOVZ W8, 0x1
	0x03B7C1D4 STRB W8, [X24 + 0xAA1]
	0x03B7C1D8 LDR X0, [X23]
	0x03B7C1DC BL 0x1C16F10
	0x03B7C1E0 LDR X1, [X20]
	0x03B7C1E4 LDR X6, [X21]
	0x03B7C1E8 MOV W2, W31
	0x03B7C1EC MOV X3, X31
	0x03B7C1F0 MOV X4, X31
	0x03B7C1F4 MOV X5, X31
	0x03B7C1F8 MOV X7, X31
	0x03B7C1FC MOV X20, X0
	0x03B7C200 BL 0x3734C54
	0x03B7C204 ADD X0, X31, 0x18
	0x03B7C208 MOV X1, X20
	0x03B7C20C MOV X2, X31
	0x03B7C210 STP X31, X31, [X31 + 0x18]
	0x03B7C214 STR X31, [X31 + 0x28]
	0x03B7C218 BL 0x3745288
	0x03B7C21C LDR X8, [X31 + 0x28]
	0x03B7C220 LDUR V0, [X31 + 0x18]
	0x03B7C224 STR X8, [X19 + 0x88]
	0x03B7C228 STUR V0, [X19 + 0x78]
	0x03B7C22C LDR X0, [X23]
	0x03B7C230 BL 0x1C16F10
	0x03B7C234 LDR X1, [X22]
	0x03B7C238 LDR X6, [X21]
	0x03B7C23C MOV W2, W31
	0x03B7C240 MOV X3, X31
	0x03B7C244 MOV X4, X31
	0x03B7C248 MOV X5, X31
	0x03B7C24C MOV X7, X31
	0x03B7C250 MOV X20, X0
	0x03B7C254 BL 0x3734C54
	0x03B7C258 ADD X0, X31, 0x0
	0x03B7C25C MOV X1, X20
	0x03B7C260 MOV X2, X31
	0x03B7C264 STP X31, X31, [X31]
	0x03B7C268 STR X31, [X31 + 0x10]
	0x03B7C26C BL 0x3745288
	0x03B7C270 LDR V0, [X31]
	0x03B7C274 LDR X8, [X31 + 0x10]
	0x03B7C278 MOVZ W9, 0x3F800000
	0x03B7C27C MOVZ W10, 0x1
	0x03B7C280 MOV X0, X19
	0x03B7C284 MOV X1, X31
	0x03B7C288 STR W9, [X19 + 0x48]
	0x03B7C28C STRB W10, [X19 + 0x4C]
	0x03B7C290 STR X8, [X19 + 0xA0]
	0x03B7C294 STR V0, [X19 + 0x9]
	0x03B7C298 STRB W10, [X19 + 0x4E]
	0x03B7C29C BL 0x3C36C30
	0x03B7C2A0 LDP X20, X19, [X31 + 0x60]
	0x03B7C2A4 LDP X22, X21, [X31 + 0x50]
	0x03B7C2A8 LDP X24, X23, [X31 + 0x40]
	0x03B7C2AC LDR X30, [X31 + 0x30]
	0x03B7C2B0 ADD X31, X31, 0x70
	0x03B7C2B4 RET
	0x03B7C2B8 MOVZ W8, 0x3F800000
	0x03B7C2BC MOVZ W9, 0x1
	0x03B7C2C0 MOV X1, X31
	0x03B7C2C4 STR W8, [X0 + 0x48]
	0x03B7C2C8 STRB W9, [X0 + 0x4C]
	0x03B7C2CC STRB W9, [X0 + 0x4E]
	0x03B7C2D0 B 0x3C36C30
	0x03B7C2D4 LDR X9, [X0 + 0x60]
	0x03B7C2D8 LDR V0, [X0 + 0x5]
	0x03B7C2DC STR X9, [X8 + 0x10]
	0x03B7C2E0 STR V0, [X8]
	0x03B7C2E4 RET
	0x03B7C2E8 SUB X31, X31, 0x30
	0x03B7C2EC STR X30, [X31 + 0x20]
	0x03B7C2F0 LDR X8, [X1 + 0x10]
	0x03B7C2F4 LDR V0, [X1]
	0x03B7C2F8 ADD X1, X0, 0x50
	0x03B7C2FC ADD X2, X31, 0x0
	0x03B7C300 STR X8, [X31 + 0x10]
	0x03B7C304 STR V0, [X31]
	0x03B7C308 BL 0x3B7C318
	0x03B7C30C LDR X30, [X31 + 0x20]
	0x03B7C310 ADD X31, X31, 0x30
	0x03B7C314 RET
	0x03B7C318 SUB X31, X31, 0x70
	0x03B7C31C STP X30, X23, [X31 + 0x40]
	0x03B7C320 STP X22, X21, [X31 + 0x50]
	0x03B7C324 STP X20, X19, [X31 + 0x60]
	0x03B7C328 ADRP X23, 0x866000
	0x03B7C32C ADRP X22, 0x577000
	0x03B7C330 LDRB W8, [X23 + 0xAA3]
	0x03B7C334 LDR X22, [X22 + 0x970]
	0x03B7C338 MOV X21, X2
	0x03B7C33C MOV X19, X1
	0x03B7C340 MOV X20, X0
	0x03B7C344 TBNZ X8, 0x0, 0x3B7C35C
	0x03B7C348 ADRP X0, 0x577000
	0x03B7C34C LDR X0, [X0 + 0x970]
	0x03B7C350 BL 0x1C16CF4
	0x03B7C354 MOVZ W8, 0x1
	0x03B7C358 STRB W8, [X23 + 0xAA3]
	0x03B7C35C LDR X0, [X22]
	0x03B7C360 LDR W8, [X0 + 0xE0]
	0x03B7C364 CBNZ W8, 0x3B7C36C
	0x03B7C368 BL 0x1C16DFC
	0x03B7C36C MOV X0, X31
	0x03B7C370 BL 0x3C018E4
	0x03B7C374 TBZ X0, 0x0, 0x3B7C394
	0x03B7C378 LDR X8, [X19 + 0x10]
	0x03B7C37C LDR V0, [X19]
	0x03B7C380 ADD X0, X31, 0x20
	0x03B7C384 MOV X1, X31
	0x03B7C388 STR X8, [X31 + 0x30]
	0x03B7C38C STR V0, [X31 + 0x2]
	0x03B7C390 BL 0x3BB99F0
	0x03B7C394 LDR X8, [X21 + 0x10]
	0x03B7C398 LDR V0, [X21]
	0x03B7C39C STR X8, [X19 + 0x10]
	0x03B7C3A0 STR V0, [X19]
	0x03B7C3A4 LDR X0, [X22]
	0x03B7C3A8 LDR W8, [X0 + 0xE0]
	0x03B7C3AC CBNZ W8, 0x3B7C3B4
	0x03B7C3B0 BL 0x1C16DFC
	0x03B7C3B4 MOV X0, X31
	0x03B7C3B8 BL 0x3C018E4
	0x03B7C3BC TBZ X0, 0x0, 0x3B7C3EC
	0x03B7C3C0 MOV X0, X20
	0x03B7C3C4 MOV X1, X31
	0x03B7C3C8 BL 0x3C32454
	0x03B7C3CC TBZ X0, 0x0, 0x3B7C3EC
	0x03B7C3D0 LDR X8, [X19 + 0x10]
	0x03B7C3D4 LDR V0, [X19]
	0x03B7C3D8 ADD X0, X31, 0x0
	0x03B7C3DC MOV X1, X31
	0x03B7C3E0 STR X8, [X31 + 0x10]
	0x03B7C3E4 STR V0, [X31]
	0x03B7C3E8 BL 0x3BB9958
	0x03B7C3EC LDP X20, X19, [X31 + 0x60]
	0x03B7C3F0 LDP X22, X21, [X31 + 0x50]
	0x03B7C3F4 LDP X30, X23, [X31 + 0x40]
	0x03B7C3F8 ADD X31, X31, 0x70

ISIL:
	001 Move [X31-96], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x867000
	013 Move W8, [X21+2709]
	014 Move X22, X2
	015 Move X20, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x5DF000
	022 Move X0, [X0+760]
	023 Call 0x1C17CF4
	024 Move X0, 0x578000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2709], W8
	029 Move X8, [X19+48]
	030 Compare X8, 0
	031 JumpIfEqual {177}
	032 Move X9, [X8+48]
	033 Move X8, 0x578000
	034 Move X8, [X8+1432]
	035 Compare X9, 0
	036 JumpIfEqual {38}
	037 Move X21, [X9+56]
	038 Move X21, X31
	039 Move X0, [X8]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X21
	045 Move X1, X31
	046 Move X2, X31
	047 Call Object.op_Inequality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {84}
	052 Move X0, X19
	053 Move X1, X20
	054 Call ClimbProvider.GetActiveClimbSettings, X0, X1
	055 Compare X0, 0
	056 JumpIfEqual {177}
	057 Compare X21, 0
	058 JumpIfEqual {177}
	059 Move W23, [X0+16]
	060 Move W24, [X0+17]
	061 Move W25, [X0+18]
	062 Move X0, X21
	063 Move X1, X31
	064 Call GameObject.get_transform, X0
	065 Compare X22, 0
	066 JumpIfEqual {177}
	067 Move X10, 0x5DF000
	068 Move X8, [X22]
	069 Move X10, [X10+760]
	070 Move X21, X0
	071 NotImplemented "Instruction LDRH not yet implemented."
	072 Move X1, [X10]
	073 Compare X9, 0
	074 JumpIfEqual {81}
	075 Move X10, [X8+176]
	076 Add X10, X10, 8
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Subtract X9, X9, 1
	080 Add X10, X10, 16
	081 Move W2, 5
	082 Move X0, X22
	083 Call 0x1C5D788
	084 Move X20, [X31+80]
	085 Move X19, [X31+88]
	086 Move X22, [X31+64]
	087 Move X21, [X31+72]
	088 Move X24, [X31+48]
	089 Move X23, [X31+56]
	090 Move X30, [X31+32]
	091 Move X25, [X31+40]
	092 Move D9, [X31+16]
	093 Move D8, [X31+24]
	094 Move V10, [X31+96]
	095 Return 
	096 Move W9, [X10]
	097 Add W9, W9, 5
	098 Add X8, X8, W9
	099 Add X0, X8, 312
	100 Move X8, [X0]
	101 Move X1, [X0+8]
	102 Move X0, X22
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Compare X0, 0
	105 JumpIfEqual {177}
	106 Move X1, X31
	107 Call Transform.get_position, X0
	108 Move V10, V0
	109 Move V9, V1
	110 Move V8, V2
	111 Compare W23, 0
	112 JumpIfEqual {123}
	113 Compare W24, 0
	114 JumpIfEqual {123}
	115 Compare W25, 0
	116 JumpIfEqual {123}
	117 Move S0, [X19+88]
	118 Move S1, [X19+92]
	119 Move V2, [X19+96]
	120 Subtract S10, S0, S10
	121 Subtract S9, S1, S9
	122 Subtract S8, S2, S8
	123 Compare X20, 0
	124 JumpIfEqual {177}
	125 Move X0, X20
	126 Call ClimbInteractable.get_climbTransform, X0
	127 Compare X0, 0
	128 JumpIfEqual {177}
	129 Move V0, V10
	130 Move V1, V9
	131 Move V2, V8
	132 Move X1, X31
	133 Move X20, X0
	134 Call Transform.InverseTransformPoint, X0, X1
	135 Move S4, [X19+104]
	136 Move S3, [X19+108]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X0, X20
	139 Move X1, X31
	140 Subtract S2, S3, S2
	141 Move V3, [X19+100]
	142 Subtract S1, S4, S1
	143 Move S4, W31
	144 NotImplemented "Instruction FCSEL not yet implemented."
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Subtract S0, S3, S0
	147 NotImplemented "Instruction FCSEL not yet implemented."
	148 NotImplemented "Instruction CMP not yet implemented."
	149 NotImplemented "Instruction FCSEL not yet implemented."
	150 Call Transform.TransformVector, X0, X1
	151 Move V10, V0
	152 Move V9, V1
	153 Move V8, V2
	154 Compare X21, 0
	155 JumpIfEqual {177}
	156 Move X0, X21
	157 Move X1, X31
	158 Call Transform.get_position, X0
	159 Add S1, S9, S1
	160 Add S2, S8, S2
	161 Move X0, X21
	162 Move X20, [X31+80]
	163 Move X19, [X31+88]
	164 Move X22, [X31+64]
	165 Move X21, [X31+72]
	166 Move X24, [X31+48]
	167 Move X23, [X31+56]
	168 Move X30, [X31+32]
	169 Move X25, [X31+40]
	170 Move D9, [X31+16]
	171 Move D8, [X31+24]
	172 Add S0, S10, S0
	173 Move X1, X31
	174 Move V10, [X31+96]
	175 Call Transform.set_position, X0, X1
	176 Return 
	177 Call 0x1C17F20

Method: System.Void FinishLocomotion()

Disassembly:
	0x03B7C108 BL 0x21F5E68
	0x03B7C10C B 0x3B7C144
	0x03B7C110 ADRP X19, 0x85D000
	0x03B7C114 LDRB W8, [X19 + 0x78F]
	0x03B7C118 CBNZ W8, 0x3B7C130
	0x03B7C11C ADRP X0, 0x57F000
	0x03B7C120 LDR X0, [X0 + 0xF08]
	0x03B7C124 BL 0x1C16CF4
	0x03B7C128 MOVZ W8, 0x1
	0x03B7C12C STRB W8, [X19 + 0x78F]
	0x03B7C130 ADRP X8, 0x57F000
	0x03B7C134 LDR X8, [X8 + 0xF08]
	0x03B7C138 LDR X8, [X8]
	0x03B7C13C LDR X8, [X8 + 0xB8]
	0x03B7C140 LDP S0, S1, [X8]
	0x03B7C144 LDP X20, X19, [X31 + 0x20]
	0x03B7C148 LDP X30, X21, [X31 + 0x10]
	0x03B7C14C FADD S0, S8, S0
	0x03B7C150 FADD S1, S9, S1
	0x03B7C154 LDP D9, D8, [X31], #0x30
	0x03B7C158 RET
	0x03B7C15C SUB X31, X31, 0x70
	0x03B7C160 STR X30, [X31 + 0x30]
	0x03B7C164 STP X24, X23, [X31 + 0x40]
	0x03B7C168 STP X22, X21, [X31 + 0x50]
	0x03B7C16C STP X20, X19, [X31 + 0x60]
	0x03B7C170 ADRP X24, 0x866000
	0x03B7C174 ADRP X23, 0x57B000
	0x03B7C178 ADRP X20, 0x5DF000
	0x03B7C17C ADRP X21, 0x5CB000
	0x03B7C180 ADRP X22, 0x5DF000
	0x03B7C184 LDRB W8, [X24 + 0xAA1]
	0x03B7C188 LDR X23, [X23 + 0x3E0]
	0x03B7C18C LDR X20, [X20 + 0xD70]
	0x03B7C190 LDR X21, [X21 + 0x800]
	0x03B7C194 LDR X22, [X22 + 0xD78]
	0x03B7C198 MOV X19, X0
	0x03B7C19C TBNZ X8, 0x0, 0x3B7C1D8
	0x03B7C1A0 ADRP X0, 0x57B000
	0x03B7C1A4 LDR X0, [X0 + 0x3E0]
	0x03B7C1A8 BL 0x1C16CF4
	0x03B7C1AC ADRP X0, 0x5DF000
	0x03B7C1B0 LDR X0, [X0 + 0xD70]
	0x03B7C1B4 BL 0x1C16CF4
	0x03B7C1B8 ADRP X0, 0x5CB000
	0x03B7C1BC LDR X0, [X0 + 0x800]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x867000
	005 Move W8, [X20+2710]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x5E0000
	012 Move X0, [X0+3368]
	013 Call 0x1C17CF4
	014 Move X0, 0x5E0000
	015 Move X0, [X0+3376]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2710], W8
	019 Move X0, X19
	020 Call LocomotionProvider.EndLocomotion, X0
	021 Move X8, [X19+72]
	022 Move W9, 3
	023 Move [X19+56], W9
	024 Compare X8, 0
	025 JumpIfEqual {57}
	026 Move W2, [X8+24]
	027 Move W9, [X8+28]
	028 Add W9, W9, 1
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move [X8+24], W31
	031 Move [X8+28], W9
	032 Move X0, [X8+16]
	033 Move W1, W31
	034 Move X3, X31
	035 Call Array.Clear, X0, X1, X2
	036 Move X8, [X19+80]
	037 Compare X8, 0
	038 JumpIfEqual {57}
	039 Move W2, [X8+24]
	040 Move W9, [X8+28]
	041 Add W9, W9, 1
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move [X8+24], W31
	044 Move [X8+28], W9
	045 Move X0, [X8+16]
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move W1, W31
	049 Move X3, X31
	050 Move X30, [X31+32]
	051 Call Array.Clear, X0, X1, X2
	052 Return 
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 Return 
	057 Call 0x1C17F20

Method: UnityEngine.XR.Interaction.Toolkit.ClimbSettings GetActiveClimbSettings(UnityEngine.XR.Interaction.Toolkit.ClimbInteractable climbInteractable)

Disassembly:
	0x03B7C3FC RET
	0x03B7C400 LDR X9, [X0 + 0x78]
	0x03B7C404 LDUR V0, [X0 + 0x68]
	0x03B7C408 STR X9, [X8 + 0x10]
	0x03B7C40C STR V0, [X8]
	0x03B7C410 RET
	0x03B7C414 SUB X31, X31, 0x30
	0x03B7C418 STR X30, [X31 + 0x20]
	0x03B7C41C LDR X8, [X1 + 0x10]
	0x03B7C420 LDR V0, [X1]
	0x03B7C424 ADD X1, X0, 0x68
	0x03B7C428 ADD X2, X31, 0x0
	0x03B7C42C STR X8, [X31 + 0x10]
	0x03B7C430 STR V0, [X31]
	0x03B7C434 BL 0x3B7C318
	0x03B7C438 LDR X30, [X31 + 0x20]
	0x03B7C43C ADD X31, X31, 0x30
	0x03B7C440 RET
	0x03B7C444 SUB X31, X31, 0x50
	0x03B7C448 STP X30, X19, [X31 + 0x40]
	0x03B7C44C LDR X8, [X0 + 0x60]
	0x03B7C450 LDR V0, [X0 + 0x5]
	0x03B7C454 MOV X19, X0
	0x03B7C458 ADD X0, X31, 0x20
	0x03B7C45C MOV X1, X31
	0x03B7C460 STR X8, [X31 + 0x30]
	0x03B7C464 STR V0, [X31 + 0x2]
	0x03B7C468 BL 0x3BB9958
	0x03B7C46C LDR X8, [X19 + 0x78]
	0x03B7C470 LDUR V0, [X19 + 0x68]
	0x03B7C474 ADD X0, X31, 0x0
	0x03B7C478 MOV X1, X31
	0x03B7C47C STR X8, [X31 + 0x10]
	0x03B7C480 STR V0, [X31]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x867000
	006 Move W8, [X21+2711]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x5E0000
	014 Move X0, [X0+3336]
	015 Call 0x1C17CF4
	016 Move X0, 0x5E0000
	017 Move X0, [X0+3384]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2711], W8
	021 Compare X20, 0
	022 JumpIfEqual {44}
	023 Move X0, [X20+488]
	024 Compare X0, 0
	025 JumpIfEqual {44}
	026 Move X8, 0x5E0000
	027 Move X8, [X8+3336]
	028 Move X21, 0x5E0000
	029 Add X20, X20, 488
	030 Move X1, [X8]
	031 Move X21, [X21+3384]
	032 Call DatumProperty`2<Object, Object>.get_Value, X0
	033 Add X8, X19, 112
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CSEL not yet implemented."
	036 Move X0, [X8]
	037 Move X1, [X21]
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Call DatumProperty`2<Object, Object>.op_Implicit, X0
	043 Return X0
	044 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03B7C52C LDR X1, [X20]
	0x03B7C530 BL 0x21F5E68
	0x03B7C534 MOV V8.16B, V0.16B
	0x03B7C538 MOV V9.16B, V1.16B
	0x03B7C53C B 0x3B7C574
	0x03B7C540 ADRP X21, 0x85D000
	0x03B7C544 LDRB W8, [X21 + 0x78F]
	0x03B7C548 CBNZ W8, 0x3B7C560
	0x03B7C54C ADRP X0, 0x57F000
	0x03B7C550 LDR X0, [X0 + 0xF08]
	0x03B7C554 BL 0x1C16CF4
	0x03B7C558 MOVZ W8, 0x1
	0x03B7C55C STRB W8, [X21 + 0x78F]
	0x03B7C560 ADRP X8, 0x57F000
	0x03B7C564 LDR X8, [X8 + 0xF08]
	0x03B7C568 LDR X8, [X8]
	0x03B7C56C LDR X8, [X8 + 0xB8]
	0x03B7C570 LDP S8, S9, [X8]
	0x03B7C574 ADD X0, X19, 0x68
	0x03B7C578 MOV X1, X31
	0x03B7C57C BL 0x3745120
	0x03B7C580 CBZ X0, 0x3B7C590
	0x03B7C584 LDR X1, [X20]
	0x03B7C588 BL 0x21F5E68
	0x03B7C58C B 0x3B7C5C4
	0x03B7C590 ADRP X19, 0x85D000
	0x03B7C594 LDRB W8, [X19 + 0x78F]
	0x03B7C598 CBNZ W8, 0x3B7C5B0
	0x03B7C59C ADRP X0, 0x57F000
	0x03B7C5A0 LDR X0, [X0 + 0xF08]
	0x03B7C5A4 BL 0x1C16CF4
	0x03B7C5A8 MOVZ W8, 0x1
	0x03B7C5AC STRB W8, [X19 + 0x78F]
	0x03B7C5B0 ADRP X8, 0x57F000
	0x03B7C5B4 LDR X8, [X8 + 0xF08]
	0x03B7C5B8 LDR X8, [X8]
	0x03B7C5BC LDR X8, [X8 + 0xB8]
	0x03B7C5C0 LDP S0, S1, [X8]
	0x03B7C5C4 LDP X20, X19, [X31 + 0x20]
	0x03B7C5C8 LDP X30, X21, [X31 + 0x10]
	0x03B7C5CC FADD S0, S8, S0
	0x03B7C5D0 FADD S1, S9, S1
	0x03B7C5D4 LDP D9, D8, [X31], #0x30
	0x03B7C5D8 RET
	0x03B7C5DC SUB X31, X31, 0x70
	0x03B7C5E0 STR X30, [X31 + 0x30]
	0x03B7C5E4 STP X24, X23, [X31 + 0x40]
	0x03B7C5E8 STP X22, X21, [X31 + 0x50]
	0x03B7C5EC STP X20, X19, [X31 + 0x60]
	0x03B7C5F0 ADRP X24, 0x866000
	0x03B7C5F4 ADRP X23, 0x57B000
	0x03B7C5F8 ADRP X20, 0x5DF000
	0x03B7C5FC ADRP X21, 0x5CB000
	0x03B7C600 ADRP X22, 0x5DF000
	0x03B7C604 LDRB W8, [X24 + 0xAA4]
	0x03B7C608 LDR X23, [X23 + 0x3E0]
	0x03B7C60C LDR X20, [X20 + 0xD80]
	0x03B7C610 LDR X21, [X21 + 0x800]
	0x03B7C614 LDR X22, [X22 + 0xD88]
	0x03B7C618 MOV X19, X0
	0x03B7C61C TBNZ X8, 0x0, 0x3B7C658
	0x03B7C620 ADRP X0, 0x57B000
	0x03B7C624 LDR X0, [X0 + 0x3E0]
	0x03B7C628 BL 0x1C16CF4
	0x03B7C62C ADRP X0, 0x5DF000
	0x03B7C630 LDR X0, [X0 + 0xD88]
	0x03B7C634 BL 0x1C16CF4
	0x03B7C638 ADRP X0, 0x5DF000
	0x03B7C63C LDR X0, [X0 + 0xD80]
	0x03B7C640 BL 0x1C16CF4
	0x03B7C644 ADRP X0, 0x5CB000
	0x03B7C648 LDR X0, [X0 + 0x800]
	0x03B7C64C BL 0x1C16CF4
	0x03B7C650 MOVZ W8, 0x1
	0x03B7C654 STRB W8, [X24 + 0xAA4]
	0x03B7C658 LDR X0, [X23]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x867000
	011 Move X26, 0x5DF000
	012 Move X20, 0x5E0000
	013 Move X24, 0x5E0000
	014 Move X23, 0x5E0000
	015 Move X22, 0x5E0000
	016 Move X21, 0x5E0000
	017 Move X26, [X26+632]
	018 Move W8, [X25+2712]
	019 Move X20, [X20+3392]
	020 Move X24, [X24+3400]
	021 Move X23, [X23+3408]
	022 Move X22, [X22+3328]
	023 Move X21, [X21+3320]
	024 Move X19, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {49}
	029 Move X0, 0x5E0000
	030 Move X0, [X0+3320]
	031 Call 0x1C17CF4
	032 Move X0, 0x5E0000
	033 Move X0, [X0+3328]
	034 Call 0x1C17CF4
	035 Move X0, 0x5E0000
	036 Move X0, [X0+3392]
	037 Call 0x1C17CF4
	038 Move X0, 0x5E0000
	039 Move X0, [X0+3408]
	040 Call 0x1C17CF4
	041 Move X0, 0x5DF000
	042 Move X0, [X0+632]
	043 Call 0x1C17CF4
	044 Move X0, 0x5E0000
	045 Move X0, [X0+3400]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X25+2712], W8
	049 Move X0, [X26]
	050 Call 0x1C17F10
	051 Move X1, [X20]
	052 Move X20, X0
	053 Call List`1<Object>..ctor, X0
	054 Move [X19+72], X20
	055 Move X0, [X24]
	056 Call 0x1C17F10
	057 Move X1, [X23]
	058 Move X20, X0
	059 Call List`1<Object>..ctor, X0
	060 Move [X19+80], X20
	061 Move X0, [X22]
	062 Call 0x1C17F10
	063 Move W8, 257
	064 Move W9, 1
	065 Move X1, X31
	066 Move X20, X0
	067 NotImplemented "Instruction STRH not yet implemented."
	068 Move [X0+18], W9
	069 Call Object..ctor, X0
	070 Move X0, [X21]
	071 Call 0x1C17F10
	072 Move X1, X20
	073 Move X21, X0
	074 Call ClimbSettingsDatumProperty..ctor, X0, X1
	075 Move [X19+112], X21
	076 Move X0, X19
	077 Move X20, [X31+64]
	078 Move X19, [X31+72]
	079 Move X22, [X31+48]
	080 Move X21, [X31+56]
	081 Move X24, [X31+32]
	082 Move X23, [X31+40]
	083 Move X26, [X31+16]
	084 Move X25, [X31+24]
	085 Move X1, X31
	086 Move X30, [X31+80]
	087 Call MonoBehaviour..ctor, X0
	088 Return 

