Type: UnityEngine.XR.Interaction.Toolkit.XRGazeAssistance/GetAssistedVelocityInternal_00000691$PostfixBurstDelegate

Method: System.Void .ctor(System.Object param_0, System.IntPtr param_1)

Disassembly:
	0x03B6C0DC B 0x3B6C0F4
	0x03B6C0E0 LDR X10, [X10 + 0xC8]
	0x03B6C0E4 ADD X10, X10, X11, 0x3, LSL
	0x03B6C0E8 LDUR X10, [X10 - 0x8]
	0x03B6C0EC CMP X10, X9
	0x03B6C0F0 CSEL X0, X8, X31, EQ
	0x03B6C0F4 LDP X20, X19, [X31 + 0x10]
	0x03B6C0F8 LDR X30, [X31], #0x20
	0x03B6C0FC RET
	0x03B6C100 STR X1, [X0 + 0x18]
	0x03B6C104 RET
	0x03B6C108 MOV X1, X31
	0x03B6C10C B 0x33BDD8C
	0x03B6C110 LDR X0, [X0 + 0x18]
	0x03B6C114 RET
	0x03B6C118 STR X1, [X0 + 0x18]
	0x03B6C11C RET
	0x03B6C120 STR X30, [X31 - 0x20]!
	0x03B6C124 STP X20, X19, [X31 + 0x10]
	0x03B6C128 ADRP X20, 0x876000
	0x03B6C12C LDRB W8, [X20 + 0xA04]
	0x03B6C130 MOV X19, X0
	0x03B6C134 TBNZ X8, 0x0, 0x3B6C14C
	0x03B6C138 ADRP X0, 0x5EE000
	0x03B6C13C LDR X0, [X0 + 0x438]
	0x03B6C140 BL 0x1C16CF4
	0x03B6C144 MOVZ W8, 0x1
	0x03B6C148 STRB W8, [X20 + 0xA04]
	0x03B6C14C LDR X8, [X19 + 0x18]
	0x03B6C150 CBZ X8, 0x3B6C174
	0x03B6C154 ADRP X9, 0x5EE000
	0x03B6C158 LDR X9, [X9 + 0x438]
	0x03B6C15C LDR X10, [X8]
	0x03B6C160 LDR X9, [X9]
	0x03B6C164 LDRB W12, [X10 + 0x130]
	0x03B6C168 LDRB W11, [X9 + 0x130]
	0x03B6C16C CMP W12, W11
	0x03B6C170 B.CS 0x3B6C17C
	0x03B6C174 MOV X0, X31
	0x03B6C178 B 0x3B6C190

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+8]
	006 Move [X0+32], X1
	007 Move [X0+40], X2
	008 Move X19, X0
	009 Move X20, X1
	010 Move [X0+16], X8
	011 Move W21, [X2+82]
	012 Move [X0+64], X0
	013 Move X0, X2
	014 Call 0x1C17D84
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {22}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, -32956416
	021 Add X8, X8, 3440
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, -32956416
	024 Add X8, X8, 3412
	025 Move [X19+24], X8
	026 Compare X20, 0
	027 JumpIfEqual {40}
	028 Move X8, [X19+16]
	029 Move X9, [X19+32]
	030 Move [X19+24], X8
	031 Move [X19+64], X9
	032 Move X8, -32956416
	033 Add X8, X8, 3228
	034 Move [X19+56], X8
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return 
	040 Move X1, -50659328
	041 Add X1, X1, 3811
	042 Move X0, X31
	043 Call 0x1C17F3C
	044 Move X1, X31
	045 Call 0x1C17DEC

Method: System.Void Invoke(in UnityEngine.Vector3 source, in UnityEngine.Vector3 target, in UnityEngine.Vector3 velocity, System.Single gravity, System.Single maxAngle, System.Single requiredSpeed, System.Single maxSpeedPercent, System.Single assistPercent, System.Single epsilon, out UnityEngine.Vector3 adjustedVelocity)

Disassembly:
	0x03B6C17C LDR X10, [X10 + 0xC8]
	0x03B6C180 ADD X10, X10, X11, 0x3, LSL
	0x03B6C184 LDUR X10, [X10 - 0x8]
	0x03B6C188 CMP X10, X9
	0x03B6C18C CSEL X0, X8, X31, EQ

ISIL:
	001 Move X8, [X0+64]
	002 Move X6, [X0+24]
	003 Move X5, [X0+40]
	004 Move X0, X8
	005 CallNoReturn X6

Method: System.IAsyncResult BeginInvoke(in UnityEngine.Vector3 source, in UnityEngine.Vector3 target, in UnityEngine.Vector3 velocity, System.Single gravity, System.Single maxAngle, System.Single requiredSpeed, System.Single maxSpeedPercent, System.Single assistPercent, System.Single epsilon, out UnityEngine.Vector3 adjustedVelocity, System.AsyncCallback param_10, System.Object param_11)

Disassembly:
	0x03B6C190 LDP X20, X19, [X31 + 0x10]
	0x03B6C194 LDR X30, [X31], #0x20
	0x03B6C198 RET
	0x03B6C19C STR X1, [X0 + 0x18]
	0x03B6C1A0 RET
	0x03B6C1A4 MOV X1, X31
	0x03B6C1A8 B 0x33BDD8C
	0x03B6C1AC STP X30, X21, [X31 - 0x20]!
	0x03B6C1B0 STP X20, X19, [X31 + 0x10]
	0x03B6C1B4 ADRP X20, 0x876000
	0x03B6C1B8 ADRP X21, 0x5EF000
	0x03B6C1BC LDRB W8, [X20 + 0xA05]
	0x03B6C1C0 LDR X21, [X21 + 0x5B0]
	0x03B6C1C4 MOV X19, X0
	0x03B6C1C8 TBNZ X8, 0x0, 0x3B6C1E0
	0x03B6C1CC ADRP X0, 0x5EF000
	0x03B6C1D0 LDR X0, [X0 + 0x5B0]
	0x03B6C1D4 BL 0x1C16CF4
	0x03B6C1D8 MOVZ W8, 0x1
	0x03B6C1DC STRB W8, [X20 + 0xA05]
	0x03B6C1E0 LDR X1, [X21]
	0x03B6C1E4 MOV X0, X19
	0x03B6C1E8 LDP X20, X19, [X31 + 0x10]
	0x03B6C1EC LDP X30, X21, [X31], #0x20
	0x03B6C1F0 B 0x2729B5C
	0x03B6C1F4 STP X30, X21, [X31 - 0x20]!
	0x03B6C1F8 STP X20, X19, [X31 + 0x10]
	0x03B6C1FC ADRP X20, 0x876000
	0x03B6C200 ADRP X21, 0x5EF000
	0x03B6C204 LDRB W8, [X20 + 0xA06]
	0x03B6C208 LDR X21, [X21 + 0x5B8]
	0x03B6C20C MOV X19, X0
	0x03B6C210 TBNZ X8, 0x0, 0x3B6C228
	0x03B6C214 ADRP X0, 0x5EF000
	0x03B6C218 LDR X0, [X0 + 0x5B8]
	0x03B6C21C BL 0x1C16CF4
	0x03B6C220 MOVZ W8, 0x1
	0x03B6C224 STRB W8, [X20 + 0xA06]
	0x03B6C228 LDR X1, [X21]
	0x03B6C22C MOV X0, X19
	0x03B6C230 LDP X20, X19, [X31 + 0x10]
	0x03B6C234 LDP X30, X21, [X31], #0x20
	0x03B6C238 B 0x2729B5C
	0x03B6C23C STR X30, [X31 - 0x40]!
	0x03B6C240 STP X24, X23, [X31 + 0x10]
	0x03B6C244 STP X22, X21, [X31 + 0x20]
	0x03B6C248 STP X20, X19, [X31 + 0x30]
	0x03B6C24C ADRP X21, 0x876000
	0x03B6C250 LDRB W8, [X21 + 0xA07]
	0x03B6C254 MOV X19, X1
	0x03B6C258 MOV X20, X0
	0x03B6C25C TBNZ X8, 0x0, 0x3B6C274
	0x03B6C260 ADRP X0, 0x5EE000
	0x03B6C264 LDR X0, [X0 + 0xED0]
	0x03B6C268 BL 0x1C16CF4
	0x03B6C26C MOVZ W8, 0x1
	0x03B6C270 STRB W8, [X21 + 0xA07]
	0x03B6C274 ADRP X24, 0x5EE000
	0x03B6C278 LDR X21, [X20 + 0x20]!
	0x03B6C27C LDR X24, [X24 + 0xED0]
	0x03B6C280 MOV X0, X21
	0x03B6C284 MOV X1, X19
	0x03B6C288 MOV X2, X31
	0x03B6C28C BL 0x33C0DE4
	0x03B6C290 CBZ X0, 0x3B6C2B0
	0x03B6C294 LDR X23, [X24]
	0x03B6C298 MOV X22, X0
	0x03B6C29C MOV X1, X23
	0x03B6C2A0 BL 0x1C16E00
	0x03B6C2A4 MOV X1, X0
	0x03B6C2A8 CBNZ X0, 0x3B6C2B4
	0x03B6C2AC B 0x3B6C2E0
	0x03B6C2B0 MOV X1, X31
	0x03B6C2B4 MOV X0, X20
	0x03B6C2B8 MOV X2, X21
	0x03B6C2BC BL 0x1C24138
	0x03B6C2C0 CMP X21, X0
	0x03B6C2C4 MOV X21, X0
	0x03B6C2C8 B.NE 0x3B6C280
	0x03B6C2CC LDP X20, X19, [X31 + 0x30]
	0x03B6C2D0 LDP X22, X21, [X31 + 0x20]
	0x03B6C2D4 LDP X24, X23, [X31 + 0x10]
	0x03B6C2D8 LDR X30, [X31], #0x40
	0x03B6C2DC RET
	0x03B6C2E0 MOV X0, X22
	0x03B6C2E4 MOV X1, X23
	0x03B6C2E8 BL 0x1C171E0
	0x03B6C2EC STR X30, [X31 - 0x40]!
	0x03B6C2F0 STP X24, X23, [X31 + 0x10]
	0x03B6C2F4 STP X22, X21, [X31 + 0x20]
	0x03B6C2F8 STP X20, X19, [X31 + 0x30]
	0x03B6C2FC ADRP X21, 0x876000
	0x03B6C300 LDRB W8, [X21 + 0xA08]
	0x03B6C304 MOV X19, X1
	0x03B6C308 MOV X20, X0
	0x03B6C30C TBNZ X8, 0x0, 0x3B6C324
	0x03B6C310 ADRP X0, 0x5EE000

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X30
	003 Move [X31+128], X28
	004 Move [X31+136], X27
	005 Move [X31+144], X26
	006 Move [X31+152], X25
	007 Move [X31+160], X24
	008 Move [X31+168], X23
	009 Move [X31+176], X22
	010 Move [X31+184], X21
	011 Move [X31+192], X20
	012 Move [X31+200], X19
	013 Move [X31+120], S1
	014 Move [X31+128], S0
	015 Move [X31+104], S3
	016 Move [X31+112], S2
	017 Move X28, 0x877000
	018 Move [X31+96], S5
	019 Move [X31+104], S4
	020 Move X26, 0x588000
	021 Move X27, 0x588000
	022 Move W8, [X28+2531]
	023 Move X26, [X26+1440]
	024 Move X27, [X27+2704]
	025 Move X19, X6
	026 Move X20, X5
	027 Move X21, X4
	028 Move X23, X3
	029 Move X24, X2
	030 Move X25, X1
	031 Move X22, X0
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {44}
	036 Move X0, 0x588000
	037 Move X0, [X0+2704]
	038 Call 0x1C17CF4
	039 Move X0, 0x588000
	040 Move X0, [X0+1440]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X28+2531], W8
	044 Move X0, [X26]
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move X1, X25
	047 Move [X31+64], V0
	048 Move [X31+72], V0
	049 Move [X31+32], V0
	050 Move [X31+40], V0
	051 Call 0x1C17E04
	052 Move X8, [X26]
	053 Move [X31+8], X0
	054 Move X1, X24
	055 Move X0, X8
	056 Call 0x1C17E04
	057 Move X8, [X26]
	058 Move [X31+16], X0
	059 Move X1, X23
	060 Move X0, X8
	061 Call 0x1C17E04
	062 Move X8, [X27]
	063 Move [X31+24], X0
	064 Add X1, X31, 124
	065 Move X0, X8
	066 Call 0x1C17E04
	067 Move X8, [X27]
	068 Move [X31+32], X0
	069 Add X1, X31, 120
	070 Move X0, X8
	071 Call 0x1C17E04
	072 Move X8, [X27]
	073 Move [X31+40], X0
	074 Add X1, X31, 108
	075 Move X0, X8
	076 Call 0x1C17E04
	077 Move X8, [X27]
	078 Move [X31+48], X0
	079 Add X1, X31, 104
	080 Move X0, X8
	081 Call 0x1C17E04
	082 Move X8, [X27]
	083 Move [X31+56], X0
	084 Add X1, X31, 100
	085 Move X0, X8
	086 Call 0x1C17E04
	087 Move X8, [X27]
	088 Move [X31+64], X0
	089 Add X1, X31, 96
	090 Move X0, X8
	091 Call 0x1C17E04
	092 Move X8, [X26]
	093 Move [X31+72], X0
	094 Move X1, X21
	095 Move X0, X8
	096 Call 0x1C17E04
	097 Move [X31+80], X0
	098 Add X1, X31, 8
	099 Move X0, X22
	100 Move X2, X20
	101 Move X3, X19
	102 Call 0x1C17CB0
	103 Move X20, [X31+192]
	104 Move X19, [X31+200]
	105 Move X22, [X31+176]
	106 Move X21, [X31+184]
	107 Move X24, [X31+160]
	108 Move X23, [X31+168]
	109 Move X26, [X31+144]
	110 Move X25, [X31+152]
	111 Move X28, [X31+128]
	112 Move X27, [X31+136]
	113 Move X30, [X31+112]
	114 Add X31, X31, 208
	115 Return X0

Method: System.Void EndInvoke(System.IAsyncResult param_0)

Disassembly:
	0x03B6C314 LDR X0, [X0 + 0xED0]
	0x03B6C318 BL 0x1C16CF4
	0x03B6C31C MOVZ W8, 0x1

ISIL:
	001 Move X0, X1
	002 Move X1, X31
	003 Call 0x1C17CB4
	004 Return 

