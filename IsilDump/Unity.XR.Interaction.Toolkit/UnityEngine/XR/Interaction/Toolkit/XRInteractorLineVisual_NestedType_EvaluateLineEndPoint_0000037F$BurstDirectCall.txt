Type: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual/EvaluateLineEndPoint_0000037F$BurstDirectCall

Method: System.Void GetFunctionPointerDiscard(ref System.IntPtr param_0)

Disassembly:
	0x03B4E320 FMUL S1, S10, S10
	0x03B4E324 FADD S0, S0, S1
	0x03B4E328 FMUL S1, S9, S9
	0x03B4E32C FADD S0, S1, S0
	0x03B4E330 FSQRT S0, S0
	0x03B4E334 FMUL S8, S8, S0
	0x03B4E338 LDR X0, [X19 + 0x60]
	0x03B4E33C CBZ X0, 0x3B4E38C
	0x03B4E340 MOV X1, X31
	0x03B4E344 BL 0x3C356F8
	0x03B4E348 CBZ X0, 0x3B4E38C
	0x03B4E34C MOV V0.16B, V8.16B
	0x03B4E350 MOV V1.16B, V8.16B
	0x03B4E354 MOV V2.16B, V8.16B
	0x03B4E358 MOV X1, X31
	0x03B4E35C BL 0x3C3FC4C
	0x03B4E360 MOV X0, X19
	0x03B4E364 LDP X20, X19, [X31 + 0x70]
	0x03B4E368 LDP X22, X21, [X31 + 0x60]
	0x03B4E36C LDP X30, X23, [X31 + 0x50]
	0x03B4E370 LDP D9, D8, [X31 + 0x40]
	0x03B4E374 LDP D11, D10, [X31 + 0x30]
	0x03B4E378 LDP D13, D12, [X31 + 0x20]
	0x03B4E37C LDP D15, D14, [X31 + 0x10]
	0x03B4E380 MOVZ W1, 0x1
	0x03B4E384 ADD X31, X31, 0x80
	0x03B4E388 B 0x3B4D6D8
	0x03B4E38C BL 0x1C16F20
	0x03B4E390 STP X30, X21, [X31 - 0x20]!
	0x03B4E394 STP X20, X19, [X31 + 0x10]
	0x03B4E398 ADRP X20, 0x894000
	0x03B4E39C LDRB W8, [X20 + 0x8DA]
	0x03B4E3A0 MOV X19, X0
	0x03B4E3A4 TBNZ X8, 0x0, 0x3B4E3F8
	0x03B4E3A8 ADRP X0, 0x5D0000
	0x03B4E3AC LDR X0, [X0 + 0x1F8]
	0x03B4E3B0 BL 0x1C16CF4
	0x03B4E3B4 ADRP X0, 0x60C000
	0x03B4E3B8 LDR X0, [X0 + 0x9B0]
	0x03B4E3BC BL 0x1C16CF4
	0x03B4E3C0 ADRP X0, 0x5A5000
	0x03B4E3C4 LDR X0, [X0 + 0x598]
	0x03B4E3C8 BL 0x1C16CF4
	0x03B4E3CC ADRP X0, 0x60C000
	0x03B4E3D0 LDR X0, [X0 + 0x188]
	0x03B4E3D4 BL 0x1C16CF4
	0x03B4E3D8 ADRP X0, 0x60C000
	0x03B4E3DC LDR X0, [X0 + 0x1F0]
	0x03B4E3E0 BL 0x1C16CF4
	0x03B4E3E4 ADRP X0, 0x60C000
	0x03B4E3E8 LDR X0, [X0 + 0xAF8]
	0x03B4E3EC BL 0x1C16CF4
	0x03B4E3F0 MOVZ W8, 0x1
	0x03B4E3F4 STRB W8, [X20 + 0x8DA]
	0x03B4E3F8 MOV X0, X19
	0x03B4E3FC ADRP X20, 0x5A5000
	0x03B4E400 LDR X8, [X0 + 0x48]!
	0x03B4E404 LDR X20, [X20 + 0x598]
	0x03B4E408 CBZ X8, 0x3B4E41C
	0x03B4E40C ADRP X8, 0x5D0000
	0x03B4E410 LDR X8, [X8 + 0x1F8]
	0x03B4E414 LDR X1, [X8]
	0x03B4E418 BL 0x23F1210
	0x03B4E41C LDR X0, [X20]
	0x03B4E420 LDR X20, [X19 + 0x68]
	0x03B4E424 LDR W8, [X0 + 0xE0]
	0x03B4E428 CBNZ W8, 0x3B4E430
	0x03B4E42C BL 0x1C16DFC
	0x03B4E430 MOV X0, X20
	0x03B4E434 MOV X1, X31
	0x03B4E438 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x895000
	008 Move X23, 0x60D000
	009 Move W8, [X20+2259]
	010 Move X23, [X23+2664]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x5CE000
	017 Move X0, [X0+2120]
	018 Call 0x1C17CF4
	019 Move X0, 0x60D000
	020 Move X0, [X0+2664]
	021 Call 0x1C17CF4
	022 Move X0, 0x60D000
	023 Move X0, [X0+2776]
	024 Call 0x1C17CF4
	025 Move X0, 0x60D000
	026 Move X0, [X0+2784]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+2259], W8
	030 Move X8, [X23]
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {37}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X8, [X23]
	037 Move X9, [X8+184]
	038 Move X10, [X9]
	039 Compare X10, 0
	040 JumpIfNotEqual {70}
	041 Move W10, [X8+224]
	042 Compare W10, 0
	043 JumpIfNotEqual {48}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X8, [X23]
	047 Move X9, [X8+184]
	048 Move X8, 0x5CE000
	049 Move X20, [X9+8]
	050 Move X8, [X8+2120]
	051 Move X0, [X8]
	052 Move X8, 0x60D000
	053 Move X8, [X8+2784]
	054 Move X21, [X8]
	055 Move X8, 0x60D000
	056 Move X8, [X8+2776]
	057 Move W9, [X0+224]
	058 Move X22, [X8]
	059 Compare W9, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X21
	064 Move X2, X22
	065 Move X3, X31
	066 Call BurstCompiler.GetILPPMethodFunctionPointer2, X0, X1, X2
	067 Move X8, [X23]
	068 Move X9, [X8+184]
	069 Move [X9], X0
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {76}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move X8, [X23]
	076 Move X8, [X8+184]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X8, [X8]
	080 Move [X19], X8
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X30, [X31+48]
	084 Move X23, [X31+56]
	085 Return 

Method: System.IntPtr GetFunctionPointer()

Disassembly:
	0x03B4E43C BL 0x3C354F8
	0x03B4E440 TBZ X0, 0x0, 0x3B4E4A0
	0x03B4E444 LDR X8, [X19 + 0x68]
	0x03B4E448 CBZ X8, 0x3B4E4AC
	0x03B4E44C LDR X20, [X8 + 0x80]
	0x03B4E450 ADRP X8, 0x60C000
	0x03B4E454 LDR X8, [X8 + 0x188]
	0x03B4E458 LDR X0, [X8]
	0x03B4E45C BL 0x1C16F10
	0x03B4E460 ADRP X8, 0x60C000
	0x03B4E464 LDR X8, [X8 + 0xAF8]
	0x03B4E468 MOV X1, X19
	0x03B4E46C MOV X3, X31
	0x03B4E470 MOV X21, X0
	0x03B4E474 LDR X2, [X8]
	0x03B4E478 BL 0x2725C6C
	0x03B4E47C CBZ X20, 0x3B4E4AC
	0x03B4E480 ADRP X8, 0x60C000
	0x03B4E484 LDR X8, [X8 + 0x1F0]
	0x03B4E488 MOV X0, X20
	0x03B4E48C LDP X20, X19, [X31 + 0x10]
	0x03B4E490 MOV X1, X21
	0x03B4E494 LDR X2, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x895000
	005 Move X19, 0x60D000
	006 Move W8, [X20+2260]
	007 Move X19, [X19+2664]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x60D000
	013 Move X0, [X0+2664]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2260], W8
	017 Move X0, [X19]
	018 Move [X31+8], X31
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Add X0, X31, 8
	024 Call EvaluateLineEndPoint_0000037F$BurstDirectCall.GetFunctionPointerDiscard, X0
	025 Move X0, [X31+8]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Void Constructor()

Disassembly:
	0x03B4E498 LDP X30, X21, [X31], #0x20
	0x03B4E49C B 0x2729BA4
	0x03B4E4A0 LDP X20, X19, [X31 + 0x10]
	0x03B4E4A4 LDP X30, X21, [X31], #0x20
	0x03B4E4A8 RET
	0x03B4E4AC BL 0x1C16F20
	0x03B4E4B0 STR D8, [X31 - 0x40]!
	0x03B4E4B4 STR X30, [X31 + 0x8]
	0x03B4E4B8 STP X24, X23, [X31 + 0x10]
	0x03B4E4BC STP X22, X21, [X31 + 0x20]
	0x03B4E4C0 STP X20, X19, [X31 + 0x30]
	0x03B4E4C4 CBZ X0, 0x3B4E588
	0x03B4E4C8 MOV X19, X8
	0x03B4E4CC LDR W8, [X0 + 0x18]
	0x03B4E4D0 MOV X20, X0
	0x03B4E4D4 CMP W1, 0x1
	0x03B4E4D8 B.LT 0x3B4E548
	0x03B4E4DC MOVN W9, 0x80800000
	0x03B4E4E0 MOV W24, W31
	0x03B4E4E4 MOV X22, X31
	0x03B4E4E8 BIC W23, W1, W1, 0x1F
	0x03B4E4EC ADD X21, X20, 0x20
	0x03B4E4F0 FMOV S8, W9
	0x03B4E4F4 CMP X22, W8, UXTW
	0x03B4E4F8 B.CS 0x3B4E584
	0x03B4E4FC MOV X0, X21
	0x03B4E500 MOV X1, X31
	0x03B4E504 BL 0x3C8E684
	0x03B4E508 FCMP S0, S8
	0x03B4E50C B.PL 0x3B4E530
	0x03B4E510 LDR W8, [X20 + 0x18]
	0x03B4E514 CMP X22, X8
	0x03B4E518 B.CS 0x3B4E584
	0x03B4E51C MOV X0, X21
	0x03B4E520 MOV X1, X31
	0x03B4E524 BL 0x3C8E684
	0x03B4E528 MOV V8.16B, V0.16B
	0x03B4E52C MOV W24, W22
	0x03B4E530 LDR W8, [X20 + 0x18]
	0x03B4E534 ADD X22, X22, 0x1
	0x03B4E538 CMP X23, X22
	0x03B4E53C ADD X21, X21, 0x2C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x895000
	006 Move X19, 0x60D000
	007 Move X20, 0x5CE000
	008 Move W8, [X21+2261]
	009 Move X19, [X19+2792]
	010 Move X20, [X20+2120]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x5CE000
	016 Move X0, [X0+2120]
	017 Call 0x1C17CF4
	018 Move X0, 0x60D000
	019 Move X0, [X0+2664]
	020 Call 0x1C17CF4
	021 Move X0, 0x60D000
	022 Move X0, [X0+2792]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2261], W8
	026 Move X0, [X20]
	027 Move X20, 0x60D000
	028 Move X19, [X19]
	029 Move W8, [X0+224]
	030 Move X20, [X20+2664]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X31
	036 Call BurstCompiler.CompileILPPMethod2, X0
	037 Move X8, [X20]
	038 Move X19, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {45}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X8, [X20]
	045 Move X8, [X8+184]
	046 Move [X8+8], X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 

Method: System.Void Initialize()

Disassembly:
	0x03B4E540 B.NE 0x3B4E4F4

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x03B4E544 B 0x3B4E54C

ISIL:
	001 Call EvaluateLineEndPoint_0000037F$BurstDirectCall.Constructor
	002 Return 

Method: System.Boolean Invoke(System.Single targetLineLength, System.Boolean shouldSmoothPoint, in Unity.Mathematics.float3 unsmoothedTargetPoint, in Unity.Mathematics.float3 lastRenderPoint, ref Unity.Mathematics.float3 newRenderPoint, ref System.Single lineLength)

Disassembly:
	0x03B4C9F8 BL 0x1C16E04
	0x03B4C9FC STR X0, [X31 + 0x28]
	0x03B4CA00 ADD X1, X31, 0x0
	0x03B4CA04 MOV X0, X21
	0x03B4CA08 MOV X2, X20
	0x03B4CA0C MOV X3, X19
	0x03B4CA10 BL 0x1C16CB0
	0x03B4CA14 LDP X20, X19, [X31 + 0x90]
	0x03B4CA18 LDP X22, X21, [X31 + 0x80]
	0x03B4CA1C LDP X24, X23, [X31 + 0x70]
	0x03B4CA20 LDP X26, X25, [X31 + 0x60]
	0x03B4CA24 LDP X28, X27, [X31 + 0x50]
	0x03B4CA28 LDP X29, X30, [X31 + 0x40]
	0x03B4CA2C ADD X31, X31, 0xA0
	0x03B4CA30 RET
	0x03B4CA34 MOV X0, X1
	0x03B4CA38 MOV X1, X31
	0x03B4CA3C B 0x1C16CB4
	0x03B4CA40 STP X30, X23, [X31 - 0x30]!
	0x03B4CA44 STP X22, X21, [X31 + 0x10]
	0x03B4CA48 STP X20, X19, [X31 + 0x20]
	0x03B4CA4C ADRP X20, 0x896000
	0x03B4CA50 ADRP X23, 0x60E000
	0x03B4CA54 LDRB W8, [X20 + 0x8C9]
	0x03B4CA58 LDR X23, [X23 + 0xA18]
	0x03B4CA5C MOV X19, X0
	0x03B4CA60 TBNZ X8, 0x0, 0x3B4CA9C
	0x03B4CA64 ADRP X0, 0x5CF000
	0x03B4CA68 LDR X0, [X0 + 0x848]
	0x03B4CA6C BL 0x1C16CF4
	0x03B4CA70 ADRP X0, 0x60E000
	0x03B4CA74 LDR X0, [X0 + 0xA18]
	0x03B4CA78 BL 0x1C16CF4
	0x03B4CA7C ADRP X0, 0x60E000
	0x03B4CA80 LDR X0, [X0 + 0xAA0]
	0x03B4CA84 BL 0x1C16CF4
	0x03B4CA88 ADRP X0, 0x60E000
	0x03B4CA8C LDR X0, [X0 + 0xAA8]
	0x03B4CA90 BL 0x1C16CF4
	0x03B4CA94 MOVZ W8, 0x1
	0x03B4CA98 STRB W8, [X20 + 0x8C9]
	0x03B4CA9C LDR X8, [X23]
	0x03B4CAA0 LDR W9, [X8 + 0xE0]
	0x03B4CAA4 CBNZ W9, 0x3B4CAB4
	0x03B4CAA8 MOV X0, X8
	0x03B4CAAC BL 0x1C16DFC
	0x03B4CAB0 LDR X8, [X23]
	0x03B4CAB4 LDR X9, [X8 + 0xB8]
	0x03B4CAB8 LDR X10, [X9]
	0x03B4CABC CBNZ X10, 0x3B4CB2C
	0x03B4CAC0 LDR W10, [X8 + 0xE0]
	0x03B4CAC4 CBNZ W10, 0x3B4CAD8
	0x03B4CAC8 MOV X0, X8
	0x03B4CACC BL 0x1C16DFC
	0x03B4CAD0 LDR X8, [X23]
	0x03B4CAD4 LDR X9, [X8 + 0xB8]
	0x03B4CAD8 ADRP X8, 0x5CF000
	0x03B4CADC LDR X20, [X9 + 0x8]
	0x03B4CAE0 LDR X8, [X8 + 0x848]
	0x03B4CAE4 LDR X0, [X8]
	0x03B4CAE8 ADRP X8, 0x60E000
	0x03B4CAEC LDR X8, [X8 + 0xAA8]
	0x03B4CAF0 LDR X21, [X8]
	0x03B4CAF4 ADRP X8, 0x60E000
	0x03B4CAF8 LDR X8, [X8 + 0xAA0]

ISIL:
	001 Move [X31-80], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0x897000
	011 Move X25, 0x5D0000
	012 Move W8, [X24+2262]
	013 Move X25, [X25+2120]
	014 Move X19, X4
	015 Move X20, X3
	016 Move X21, X2
	017 Move X22, X1
	018 Move W23, W0
	019 Move V8, V0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x5D0000
	025 Move X0, [X0+2120]
	026 Call 0x1C17CF4
	027 Move X0, 0x60F000
	028 Move X0, [X0+2664]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X24+2262], W8
	032 Move X0, [X25]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X31
	038 Call BurstCompiler.get_IsEnabled
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {70}
	043 Move X8, 0x60F000
	044 Move X8, [X8+2664]
	045 Move X0, [X8]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Call EvaluateLineEndPoint_0000037F$BurstDirectCall.GetFunctionPointer
	051 Compare X0, 0
	052 JumpIfEqual {70}
	053 Move X5, X0
	054 And W0, W23, 1
	055 Move X1, X22
	056 Move X2, X21
	057 Move X3, X20
	058 Move X4, X19
	059 Move X20, [X31+64]
	060 Move X19, [X31+72]
	061 Move X22, [X31+48]
	062 Move X21, [X31+56]
	063 Move X24, [X31+32]
	064 Move X23, [X31+40]
	065 Move X30, [X31+16]
	066 Move X25, [X31+24]
	067 Move V0, V8
	068 Move V8, [X31+80]
	069 CallNoReturn X5
	070 And W0, W23, 1
	071 Move X1, X22
	072 Move X2, X21
	073 Move X3, X20
	074 Move X4, X19
	075 Move X20, [X31+64]
	076 Move X19, [X31+72]
	077 Move X22, [X31+48]
	078 Move X21, [X31+56]
	079 Move X24, [X31+32]
	080 Move X23, [X31+40]
	081 Move X30, [X31+16]
	082 Move X25, [X31+24]
	083 Move V0, V8
	084 Move X5, X31
	085 Move V8, [X31+80]
	086 Call 0x3B65EA0
	087 Return X0

