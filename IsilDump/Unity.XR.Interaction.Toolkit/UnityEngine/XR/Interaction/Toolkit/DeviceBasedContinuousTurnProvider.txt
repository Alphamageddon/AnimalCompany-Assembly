Type: UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousTurnProvider

Method: UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousTurnProvider/InputAxes get_inputBinding()

Disassembly:
	0x03B7EA3C LDRB W8, [X20 + 0xAB7]
	0x03B7EA40 LDR X21, [X21 + 0x598]

ISIL:
	001 Move W0, [X0+80]
	002 Return X0

Method: System.Void set_inputBinding(UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousTurnProvider/InputAxes value)

Disassembly:
	0x03B7EA44 MOV X19, X0
	0x03B7EA48 TBNZ X8, 0x0, 0x3B7EA78

ISIL:
	001 Move [X0+80], W1
	002 Return 

Method: System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseController> get_controllers()

Disassembly:
	0x03B7EA4C ADRP X0, 0x5DD000
	0x03B7EA50 LDR X0, [X0 + 0xC78]

ISIL:
	001 Move X0, [X0+88]
	002 Return X0

Method: System.Void set_controllers(System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseController> value)

Disassembly:
	0x03B7EA54 BL 0x1C16CF4
	0x03B7EA58 ADRP X0, 0x575000

ISIL:
	001 Move [X0+88], X1
	002 Return 

Method: System.Single get_deadzoneMin()

Disassembly:
	0x03B7EA5C LDR X0, [X0 + 0x598]
	0x03B7EA60 BL 0x1C16CF4

ISIL:
	001 Move V0, [X0+96]
	002 Return V0

Method: System.Void set_deadzoneMin(System.Single value)

Disassembly:
	0x03B7EA64 ADRP X0, 0x5DD000
	0x03B7EA68 LDR X0, [X0 + 0xDF8]

ISIL:
	001 Move [X0+96], S0
	002 Return 

Method: System.Single get_deadzoneMax()

Disassembly:
	0x03B7EA6C BL 0x1C16CF4
	0x03B7EA70 MOVZ W8, 0x1

ISIL:
	001 Move V0, [X0+100]
	002 Return V0

Method: System.Void set_deadzoneMax(System.Single value)

Disassembly:
	0x03B7EA74 STRB W8, [X20 + 0xAB7]
	0x03B7EA78 LDR X0, [X21]

ISIL:
	001 Move [X0+100], S0
	002 Return 

Method: UnityEngine.Vector2 ReadInput()

Disassembly:
	0x03B7EA7C LDR X20, [X19 + 0x68]
	0x03B7EA80 LDR W8, [X0 + 0xE0]
	0x03B7EA84 CBNZ W8, 0x3B7EA8C
	0x03B7EA88 BL 0x1C16DFC
	0x03B7EA8C MOV X0, X20
	0x03B7EA90 MOV X1, X31
	0x03B7EA94 MOV X2, X31
	0x03B7EA98 BL 0x3C354F8
	0x03B7EA9C TBZ X0, 0x0, 0x3B7EAB0
	0x03B7EAA0 LDR X8, [X19 + 0x68]
	0x03B7EAA4 CBZ X8, 0x3B7EB28
	0x03B7EAA8 MOVZ W9, 0x1
	0x03B7EAAC STRB W9, [X8 + 0x90]
	0x03B7EAB0 LDR X0, [X21]
	0x03B7EAB4 LDR X20, [X19 + 0x70]
	0x03B7EAB8 LDR W8, [X0 + 0xE0]
	0x03B7EABC CBNZ W8, 0x3B7EAC4
	0x03B7EAC0 BL 0x1C16DFC
	0x03B7EAC4 MOV X0, X20
	0x03B7EAC8 MOV X1, X31
	0x03B7EACC MOV X2, X31
	0x03B7EAD0 BL 0x3C354F8
	0x03B7EAD4 TBZ X0, 0x0, 0x3B7EAE8
	0x03B7EAD8 LDR X8, [X19 + 0x70]
	0x03B7EADC CBZ X8, 0x3B7EB28
	0x03B7EAE0 MOVZ W9, 0x1
	0x03B7EAE4 STRB W9, [X8 + 0x90]
	0x03B7EAE8 ADRP X8, 0x5DD000
	0x03B7EAEC LDR X8, [X8 + 0xC78]
	0x03B7EAF0 ADRP X20, 0x5DD000
	0x03B7EAF4 LDR X0, [X8]
	0x03B7EAF8 LDR X20, [X20 + 0xDF8]
	0x03B7EAFC BL 0x1C16F10
	0x03B7EB00 LDR X2, [X20]
	0x03B7EB04 MOV X1, X19
	0x03B7EB08 MOV X3, X31
	0x03B7EB0C MOV X20, X0
	0x03B7EB10 BL 0x2A6B948
	0x03B7EB14 MOV X0, X19
	0x03B7EB18 MOV X1, X20
	0x03B7EB1C LDP X20, X19, [X31 + 0x10]
	0x03B7EB20 LDP X30, X21, [X31], #0x20
	0x03B7EB24 B 0x3B7A224
	0x03B7EB28 BL 0x1C16F20
	0x03B7EB2C STP D15, D14, [X31 - 0x70]!
	0x03B7EB30 STP D13, D12, [X31 + 0x10]
	0x03B7EB34 STP D11, D10, [X31 + 0x20]
	0x03B7EB38 STP D9, D8, [X31 + 0x30]
	0x03B7EB3C STR X30, [X31 + 0x40]
	0x03B7EB40 STP X22, X21, [X31 + 0x50]
	0x03B7EB44 STP X20, X19, [X31 + 0x60]
	0x03B7EB48 ADRP X21, 0x864000
	0x03B7EB4C LDRB W8, [X21 + 0xAB8]
	0x03B7EB50 MOV X20, X1
	0x03B7EB54 MOV X19, X0
	0x03B7EB58 TBNZ X8, 0x0, 0x3B7EB70
	0x03B7EB5C ADRP X0, 0x575000
	0x03B7EB60 LDR X0, [X0 + 0x598]
	0x03B7EB64 BL 0x1C16CF4
	0x03B7EB68 MOVZ W8, 0x1
	0x03B7EB6C STRB W8, [X21 + 0xAB8]
	0x03B7EB70 STRB W31, [X20]
	0x03B7EB74 LDR X8, [X19 + 0x30]
	0x03B7EB78 CBZ X8, 0x3B7EE7C
	0x03B7EB7C LDR X8, [X8 + 0x30]
	0x03B7EB80 CBZ X8, 0x3B7EB8C
	0x03B7EB84 LDR X21, [X8 + 0x38]
	0x03B7EB88 B 0x3B7EB90
	0x03B7EB8C MOV X21, X31
	0x03B7EB90 LDR X0, [X19 + 0x68]
	0x03B7EB94 CBZ X0, 0x3B7EE7C
	0x03B7EB98 LDRB W22, [X19 + 0x8C]
	0x03B7EB9C BL 0x3B7E458
	0x03B7EBA0 TBZ X0, 0x0, 0x3B7EBE0
	0x03B7EBA4 LDR X0, [X19 + 0x70]
	0x03B7EBA8 CBZ X0, 0x3B7EE7C
	0x03B7EBAC BL 0x3B7E458
	0x03B7EBB0 TBZ X0, 0x0, 0x3B7EBE0
	0x03B7EBB4 ADRP X8, 0x575000
	0x03B7EBB8 LDR X8, [X8 + 0x598]
	0x03B7EBBC LDR X0, [X8]
	0x03B7EBC0 LDR W8, [X0 + 0xE0]
	0x03B7EBC4 CBNZ W8, 0x3B7EBCC
	0x03B7EBC8 BL 0x1C16DFC
	0x03B7EBCC MOV X0, X21
	0x03B7EBD0 MOV X1, X31
	0x03B7EBD4 MOV X2, X31
	0x03B7EBD8 BL 0x3C354F8
	0x03B7EBDC B 0x3B7EBE4
	0x03B7EBE0 MOV W0, W31
	0x03B7EBE4 AND W8, W0, 0x1
	0x03B7EBE8 STRB W8, [X19 + 0x8C]
	0x03B7EBEC TBZ X0, 0x0, 0x3B7ECD0
	0x03B7EBF0 LDR X8, [X19 + 0x68]
	0x03B7EBF4 CBZ X8, 0x3B7EE7C
	0x03B7EBF8 STRB W31, [X8 + 0x90]
	0x03B7EBFC LDR X8, [X19 + 0x70]
	0x03B7EC00 CBZ X8, 0x3B7EE7C
	0x03B7EC04 STRB W31, [X8 + 0x90]
	0x03B7EC08 CBZ X21, 0x3B7EE7C
	0x03B7EC0C MOV X0, X21
	0x03B7EC10 MOV X1, X31
	0x03B7EC14 BL 0x3C356F8
	0x03B7EC18 LDR X8, [X19 + 0x68]
	0x03B7EC1C CBZ X8, 0x3B7EE7C
	0x03B7EC20 MOV X21, X0
	0x03B7EC24 LDR X0, [X8 + 0x68]
	0x03B7EC28 CBZ X0, 0x3B7EE7C
	0x03B7EC2C MOV X1, X31
	0x03B7EC30 BL 0x3C3EB78
	0x03B7EC34 LDR X8, [X19 + 0x70]
	0x03B7EC38 CBZ X8, 0x3B7EE7C
	0x03B7EC3C LDR X0, [X8 + 0x68]
	0x03B7EC40 CBZ X0, 0x3B7EE7C
	0x03B7EC44 MOV X1, X31
	0x03B7EC48 MOV V8.16B, V0.16B
	0x03B7EC4C MOV V9.16B, V1.16B
	0x03B7EC50 MOV V10.16B, V2.16B
	0x03B7EC54 BL 0x3C3EB78
	0x03B7EC58 MOV V11.16B, V0.16B
	0x03B7EC5C MOV V12.16B, V1.16B
	0x03B7EC60 MOV V13.16B, V2.16B
	0x03B7EC64 FADD S0, S8, S0
	0x03B7EC68 FADD S1, S9, S1
	0x03B7EC6C FADD S2, S10, S2
	0x03B7EC70 FMOV S3, 0.5
	0x03B7EC74 STR S9, [X31 + 0x4C]
	0x03B7EC78 FMUL S9, S0, S3
	0x03B7EC7C FMUL S15, S1, S3
	0x03B7EC80 FMUL S14, S2, S3
	0x03B7EC84 CBZ W22, 0x3B7ED4C
	0x03B7EC88 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], D9
	003 Move [X31+40], D8
	004 Move [X31+48], X30
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X20, 0x865000
	013 Move W8, [X20+2733]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0x5DE000
	020 Move X0, [X0+3520]
	021 Call 0x1C17CF4
	022 Move X0, 0x5DE000
	023 Move X0, [X0+3480]
	024 Call 0x1C17CF4
	025 Move X0, 0x5DE000
	026 Move X0, [X0+3488]
	027 Call 0x1C17CF4
	028 Move X0, 0x576000
	029 Move X0, [X0+1432]
	030 Call 0x1C17CF4
	031 Move X0, 0x5DE000
	032 Move X0, [X0+688]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X20+2733], W8
	036 Move [X31+16], X31
	037 Move [X31+24], X31
	038 Move [X31+8], X31
	039 Move X8, [X19+88]
	040 Compare X8, 0
	041 JumpIfEqual {147}
	042 Move X21, 0x85C000
	043 Move W9, [X21+1935]
	044 Move W20, [X8+24]
	045 Compare W9, 0
	046 JumpIfNotEqual {52}
	047 Move X0, 0x57E000
	048 Move X0, [X0+3848]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X21+1935], W8
	052 Move X8, 0x57E000
	053 Move X8, [X8+3848]
	054 Move X8, [X8]
	055 Move X8, [X8+184]
	056 Move S8, [X8]
	057 Move S9, [X8+4]
	058 Compare W20, 0
	059 JumpIfEqual {148}
	060 Move X20, 0x5DE000
	061 Move X20, [X20+3520]
	062 Move X0, [X20]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {68}
	066 Call 0x1C17DFC
	067 Move X0, [X20]
	068 Move X8, [X0+184]
	069 Move X8, [X8]
	070 Compare X8, 0
	071 JumpIfEqual {147}
	072 NotImplemented "Instruction LDRSW not yet implemented."
	073 Move W10, [X8+24]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X0, [X19+88]
	076 Compare X0, 0
	077 JumpIfEqual {147}
	078 Add X8, X8, X9
	079 Move X23, 0x5DE000
	080 Move X24, 0x5DE000
	081 Move X25, 0x576000
	082 Move X21, [X8+32]
	083 Move X23, [X23+3488]
	084 Move X24, [X24+688]
	085 Move X25, [X25+1432]
	086 Move W20, W31
	087 Move W8, [X0+24]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X2, [X23]
	090 Move W1, W20
	091 Call List`1<Object>.get_Item, X0, X1
	092 Compare X0, 0
	093 JumpIfEqual {99}
	094 Move X9, [X0]
	095 Move X8, [X24]
	096 Move W11, [X9+304]
	097 Move W10, [X8+304]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X22, X31
	100 Move X9, [X9+200]
	101 Add X9, X9, X10
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 NotImplemented "Instruction CSEL not yet implemented."
	105 Move X0, [X25]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Move X0, X22
	111 Move X1, X31
	112 Move X2, X31
	113 Call Object.op_Inequality, X0, X1
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfNotEqual {143}
	118 Compare X22, 0
	119 JumpIfEqual {147}
	120 Move W8, [X22+37]
	121 Compare W8, 0
	122 JumpIfEqual {143}
	123 Move X0, X22
	124 Move X1, X31
	125 Call XRController.get_inputDevice, X0
	126 Move [X31+8], X0
	127 Move [X31+16], X1
	128 Add X0, X31, 8
	129 Add X2, X31, 24
	130 Move X1, X21
	131 Move X3, X31
	132 Call InputDevice.TryGetFeatureValue, X0, X1, X2
	133 Move TEMP, X0
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfNotEqual {143}
	137 Move S0, [X31+24]
	138 Move S1, [X31+28]
	139 Move X0, X19
	140 Call DeviceBasedContinuousTurnProvider.GetDeadzoneAdjustedValue, X0, X1
	141 Add S8, S8, S0
	142 Add S9, S9, S1
	143 Move X0, [X19+88]
	144 Add W20, W20, 1
	145 Compare X0, 0
	146 JumpIfNotEqual {87}
	147 Call 0x1C17F20
	148 Move V0, V8
	149 Move V1, V9
	150 Move X20, [X31+96]
	151 Move X19, [X31+104]
	152 Move X22, [X31+80]
	153 Move X21, [X31+88]
	154 Move X24, [X31+64]
	155 Move X23, [X31+72]
	156 Move X30, [X31+48]
	157 Move X25, [X31+56]
	158 Move D9, [X31+32]
	159 Move D8, [X31+40]
	160 Add X31, X31, 112
	161 Return X0
	162 Call 0x1C17F28

Method: UnityEngine.Vector2 GetDeadzoneAdjustedValue(UnityEngine.Vector2 value)

Disassembly:
	0x03B7EC8C STRB W8, [X20]
	0x03B7EC90 CBZ X21, 0x3B7EE7C
	0x03B7EC94 LDP S1, S0, [X19 + 0x94]
	0x03B7EC98 LDR V3, [X19 + 0x90]
	0x03B7EC9C MOV X0, X21
	0x03B7ECA0 MOV X1, X31
	0x03B7ECA4 FSUB S2, S0, S14
	0x03B7ECA8 FSUB S1, S1, S15
	0x03B7ECAC FSUB S0, S3, S9
	0x03B7ECB0 BL 0x3C40988
	0x03B7ECB4 LDR V3, [X19 + 0x7C]
	0x03B7ECB8 STP S9, S15, [X19 + 0x90]
	0x03B7ECBC STR S14, [X19 + 0x98]
	0x03B7ECC0 FMUL S0, S0, S3
	0x03B7ECC4 FMUL S1, S1, S3
	0x03B7ECC8 FMUL S2, S2, S3
	0x03B7ECCC B 0x3B7ED2C
	0x03B7ECD0 LDRB W8, [X19 + 0x80]
	0x03B7ECD4 CBNZ W8, 0x3B7ECF4
	0x03B7ECD8 LDR X9, [X19 + 0x68]
	0x03B7ECDC CBZ X9, 0x3B7EE7C
	0x03B7ECE0 MOVZ W8, 0x1
	0x03B7ECE4 STRB W8, [X9 + 0x90]
	0x03B7ECE8 LDR X9, [X19 + 0x70]
	0x03B7ECEC CBZ X9, 0x3B7EE7C
	0x03B7ECF0 STRB W8, [X9 + 0x90]
	0x03B7ECF4 ADRP X19, 0x85A000
	0x03B7ECF8 LDRB W8, [X19 + 0x783]
	0x03B7ECFC CBNZ W8, 0x3B7ED14
	0x03B7ED00 ADRP X0, 0x575000
	0x03B7ED04 LDR X0, [X0 + 0x5A0]
	0x03B7ED08 BL 0x1C16CF4
	0x03B7ED0C MOVZ W8, 0x1
	0x03B7ED10 STRB W8, [X19 + 0x783]
	0x03B7ED14 ADRP X8, 0x575000
	0x03B7ED18 LDR X8, [X8 + 0x5A0]
	0x03B7ED1C LDR X8, [X8]
	0x03B7ED20 LDR X8, [X8 + 0xB8]
	0x03B7ED24 LDP S0, S1, [X8]
	0x03B7ED28 LDR V2, [X8 + 0x8]
	0x03B7ED2C LDP X20, X19, [X31 + 0x60]
	0x03B7ED30 LDP X22, X21, [X31 + 0x50]
	0x03B7ED34 LDR X30, [X31 + 0x40]
	0x03B7ED38 LDP D9, D8, [X31 + 0x30]
	0x03B7ED3C LDP D11, D10, [X31 + 0x20]
	0x03B7ED40 LDP D13, D12, [X31 + 0x10]
	0x03B7ED44 LDP D15, D14, [X31], #0x70
	0x03B7ED48 RET
	0x03B7ED4C LDRB W8, [X19 + 0x8C]
	0x03B7ED50 CBZ W8, 0x3B7EC88
	0x03B7ED54 CBZ X21, 0x3B7EE7C
	0x03B7ED58 MOV X0, X21
	0x03B7ED5C MOV X1, X31
	0x03B7ED60 BL 0x3C3F74C
	0x03B7ED64 FSUB S0, S11, S8
	0x03B7ED68 FSUB S2, S13, S10
	0x03B7ED6C STR W31, [X19 + 0xA4]
	0x03B7ED70 STP S1, S0, [X19 + 0x9C]
	0x03B7ED74 STR S2, [X19 + 0xA8]
	0x03B7ED78 ADRP X20, 0x85A000
	0x03B7ED7C LDRB W8, [X20 + 0xABD]
	0x03B7ED80 CBNZ W8, 0x3B7ED98
	0x03B7ED84 ADRP X0, 0x575000
	0x03B7ED88 LDR X0, [X0 + 0x5A0]
	0x03B7ED8C BL 0x1C16CF4
	0x03B7ED90 MOVZ W8, 0x1
	0x03B7ED94 STRB W8, [X20 + 0xABD]
	0x03B7ED98 ADRP X20, 0x575000
	0x03B7ED9C LDR X20, [X20 + 0x5A0]
	0x03B7EDA0 MOV X0, X31
	0x03B7EDA4 LDR X8, [X20]
	0x03B7EDA8 LDR X8, [X8 + 0xB8]
	0x03B7EDAC LDP S1, S2, [X8 + 0x24]
	0x03B7EDB0 LDR V3, [X8 + 0x2C]
	0x03B7EDB4 MOVZ W8, 0x42B40000
	0x03B7EDB8 FMOV S0, W8
	0x03B7EDBC BL 0x3C2A758
	0x03B7EDC0 LDP S4, S5, [X19 + 0xA0]
	0x03B7EDC4 LDR V6, [X19 + 0xA8]
	0x03B7EDC8 MOV X0, X31
	0x03B7EDCC BL 0x3C2A9FC
	0x03B7EDD0 MOV X0, X21
	0x03B7EDD4 MOV X1, X31
	0x03B7EDD8 STP S0, S1, [X19 + 0xAC]
	0x03B7EDDC STR S2, [X19 + 0xB4]
	0x03B7EDE0 BL 0x3C3FBAC
	0x03B7EDE4 STR S0, [X19 + 0xB8]
	0x03B7EDE8 ADRP X21, 0x85A000
	0x03B7EDEC LDRB W8, [X21 + 0x85C]

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x85C000
	009 Move W8, [X20+2072]
	010 Move V8, V1
	011 Move V9, V0
	012 Move X19, X0
	013 Compare W8, 0
	014 JumpIfNotEqual {20}
	015 Move X0, 0x576000
	016 Move X0, [X0+1448]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2072], W8
	020 Move X8, 0x576000
	021 Move X8, [X8+1448]
	022 Move X0, [X8]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Multiply S1, S9, S9
	028 Multiply S2, S8, S8
	029 Move V0, [X19+96]
	030 Add S1, S1, S2
	031 NotImplemented "Instruction FSQRT not yet implemented."
	032 NotImplemented "Instruction FABS not yet implemented."
	033 NotImplemented "Instruction FCMP not yet implemented."
	034 Move S11, W31
	035 Move V2, [X19+100]
	036 NotImplemented "Instruction FCMP not yet implemented."
	037 Move S3, -1
	038 Move S4, 1
	039 NotImplemented "Instruction FCSEL not yet implemented."
	040 NotImplemented "Instruction FCMP not yet implemented."
	041 Subtract S1, S1, S0
	042 Subtract S0, S2, S0
	043 NotImplemented "Instruction FDIV not yet implemented."
	044 Multiply S11, S11, S0
	045 Move X19, 0x85C000
	046 Move W8, [X19+1450]
	047 Compare W8, 0
	048 JumpIfNotEqual {54}
	049 Move X0, 0x57D000
	050 Move X0, [X0+1208]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X19+1450], W8
	054 Move X8, 0x57D000
	055 Move X8, [X8+1208]
	056 Move X9, -50933760
	057 Move V0, [X9+576]
	058 NotImplemented "Instruction FABS not yet implemented."
	059 Move X8, [X8]
	060 Move S2, W31
	061 NotImplemented "Instruction FMAXNM not yet implemented."
	062 Multiply S0, S1, S0
	063 Move X8, [X8+184]
	064 Move S1, 8
	065 Move V3, [X8]
	066 Multiply S1, S3, S1
	067 NotImplemented "Instruction FCMP not yet implemented."
	068 NotImplemented "Instruction FCSEL not yet implemented."
	069 NotImplemented "Instruction FABD not yet implemented."
	070 NotImplemented "Instruction FCMP not yet implemented."
	071 Move X19, 0x85C000
	072 Move W8, [X19+1935]
	073 Compare W8, 0
	074 JumpIfNotEqual {80}
	075 Move X0, 0x57E000
	076 Move X0, [X0+3848]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X19+1935], W8
	080 Move X8, 0x57E000
	081 Move X8, [X8+3848]
	082 Move X8, [X8]
	083 Move X8, [X8+184]
	084 Move S0, [X8]
	085 Move S1, [X8+4]
	086 NotImplemented "Instruction FDIV not yet implemented."
	087 Multiply S0, S9, S1
	088 Multiply S1, S8, S1
	089 Move X20, [X31+48]
	090 Move X19, [X31+56]
	091 Move X30, [X31+32]
	092 Move D9, [X31+16]
	093 Move D8, [X31+24]
	094 Move D11, [X31+64]
	095 Move D10, [X31+72]
	096 Return X0

Method: System.Single GetDeadzoneAdjustedValue(System.Single value)

Disassembly:
	0x03B7EDF0 CBNZ W8, 0x3B7EE08
	0x03B7EDF4 ADRP X0, 0x575000
	0x03B7EDF8 LDR X0, [X0 + 0x5A8]
	0x03B7EDFC BL 0x1C16CF4
	0x03B7EE00 MOVZ W8, 0x1
	0x03B7EE04 STRB W8, [X21 + 0x85C]
	0x03B7EE08 ADRP X8, 0x575000
	0x03B7EE0C LDR X8, [X8 + 0x5A8]
	0x03B7EE10 LDR V0, [X31 + 0x4C]
	0x03B7EE14 FSUB S8, S8, S11
	0x03B7EE18 FSUB S10, S10, S13
	0x03B7EE1C LDR X0, [X8]
	0x03B7EE20 FSUB S11, S0, S12
	0x03B7EE24 LDR W8, [X0 + 0xE0]
	0x03B7EE28 CBNZ W8, 0x3B7EE30
	0x03B7EE2C BL 0x1C16DFC
	0x03B7EE30 FMUL S0, S8, S8
	0x03B7EE34 FMUL S1, S11, S11

ISIL:
	001 Move V2, [X0+96]
	002 NotImplemented "Instruction FABS not yet implemented."
	003 Move V1, V0
	004 Move S0, W31
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move V4, [X0+100]
	007 NotImplemented "Instruction FCMP not yet implemented."
	008 Move S0, -1
	009 Move S1, 1
	010 NotImplemented "Instruction FCSEL not yet implemented."
	011 NotImplemented "Instruction FCMP not yet implemented."
	012 Subtract S1, S3, S2
	013 Subtract S2, S4, S2
	014 NotImplemented "Instruction FDIV not yet implemented."
	015 Multiply S0, S0, S1
	016 Return V0

Method: System.Void .ctor()

Disassembly:
	0x03B7EE38 FMUL S2, S10, S10
	0x03B7EE3C FADD S0, S0, S1
	0x03B7EE40 FADD S0, S2, S0
	0x03B7EE44 FSQRT S0, S0
	0x03B7EE48 STP S9, S15, [X19 + 0x90]
	0x03B7EE4C STR S14, [X19 + 0x98]
	0x03B7EE50 STR S0, [X19 + 0xBC]
	0x03B7EE54 ADRP X19, 0x85A000
	0x03B7EE58 LDRB W8, [X19 + 0x783]
	0x03B7EE5C CBNZ W8, 0x3B7EE74
	0x03B7EE60 ADRP X0, 0x575000
	0x03B7EE64 LDR X0, [X0 + 0x5A0]
	0x03B7EE68 BL 0x1C16CF4
	0x03B7EE6C MOVZ W8, 0x1
	0x03B7EE70 STRB W8, [X19 + 0x783]
	0x03B7EE74 LDR X8, [X20]
	0x03B7EE78 B 0x3B7ED20
	0x03B7EE7C BL 0x1C16F20
	0x03B7EE80 SUB X31, X31, 0x90
	0x03B7EE84 STP D15, D14, [X31 + 0x20]
	0x03B7EE88 STP D13, D12, [X31 + 0x30]
	0x03B7EE8C STP D11, D10, [X31 + 0x40]
	0x03B7EE90 STP D9, D8, [X31 + 0x50]
	0x03B7EE94 STP X30, X23, [X31 + 0x60]
	0x03B7EE98 STP X22, X21, [X31 + 0x70]
	0x03B7EE9C STP X20, X19, [X31 + 0x80]
	0x03B7EEA0 ADRP X20, 0x864000
	0x03B7EEA4 LDRB W8, [X20 + 0xAB9]
	0x03B7EEA8 MOV X19, X0
	0x03B7EEAC TBNZ X8, 0x0, 0x3B7EEC4
	0x03B7EEB0 ADRP X0, 0x575000
	0x03B7EEB4 LDR X0, [X0 + 0x598]
	0x03B7EEB8 BL 0x1C16CF4
	0x03B7EEBC MOVZ W8, 0x1
	0x03B7EEC0 STRB W8, [X20 + 0xAB9]
	0x03B7EEC4 LDR X8, [X19 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x865000
	007 Move X22, 0x5DE000
	008 Move X20, 0x5DE000
	009 Move W8, [X21+2734]
	010 Move X22, [X22+3496]
	011 Move X20, [X20+3504]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x5DE000
	018 Move X0, [X0+3504]
	019 Call 0x1C17CF4
	020 Move X0, 0x5DE000
	021 Move X0, [X0+3496]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2734], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call List`1<Object>..ctor, X0
	030 Move X8, -50921472
	031 Move V0, [X8+3072]
	032 Move W8, 0x42700000
	033 Move [X19+88], X20
	034 Move [X19+72], W8
	035 Move [X19+96], D0
	036 Move X0, X19
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X1, X31
	042 Move X30, [X31+48]
	043 Call MonoBehaviour..ctor, X0
	044 Return 

Method: System.Void .cctor()

Disassembly:
	0x03B7EEC8 CBZ X8, 0x3B7F230
	0x03B7EECC LDR X9, [X8 + 0x30]
	0x03B7EED0 ADRP X8, 0x575000
	0x03B7EED4 LDR X8, [X8 + 0x598]
	0x03B7EED8 CBZ X9, 0x3B7EEE4
	0x03B7EEDC LDR X20, [X9 + 0x38]
	0x03B7EEE0 B 0x3B7EEE8
	0x03B7EEE4 MOV X20, X31
	0x03B7EEE8 LDR X0, [X8]
	0x03B7EEEC LDR W8, [X0 + 0xE0]
	0x03B7EEF0 CBNZ W8, 0x3B7EEF8
	0x03B7EEF4 BL 0x1C16DFC
	0x03B7EEF8 MOV X0, X20
	0x03B7EEFC MOV X1, X31
	0x03B7EF00 MOV X2, X31
	0x03B7EF04 BL 0x3C3883C
	0x03B7EF08 TBNZ X0, 0x0, 0x3B7F180
	0x03B7EF0C CBZ X20, 0x3B7F230
	0x03B7EF10 MOV X0, X20
	0x03B7EF14 MOV X1, X31
	0x03B7EF18 BL 0x3C356F8
	0x03B7EF1C LDR X8, [X19 + 0x68]
	0x03B7EF20 CBZ X8, 0x3B7F230
	0x03B7EF24 MOV X20, X0
	0x03B7EF28 LDR X0, [X8 + 0x68]
	0x03B7EF2C CBZ X0, 0x3B7F230
	0x03B7EF30 MOV X1, X31
	0x03B7EF34 BL 0x3C3EB78
	0x03B7EF38 LDR X8, [X19 + 0x70]
	0x03B7EF3C CBZ X8, 0x3B7F230
	0x03B7EF40 LDR X0, [X8 + 0x68]
	0x03B7EF44 CBZ X0, 0x3B7F230
	0x03B7EF48 MOV X1, X31
	0x03B7EF4C MOV V8.16B, V0.16B
	0x03B7EF50 MOV V9.16B, V1.16B
	0x03B7EF54 MOV V11.16B, V2.16B
	0x03B7EF58 BL 0x3C3EB78
	0x03B7EF5C ADRP X22, 0x575000
	0x03B7EF60 ADRP X21, 0x575000
	0x03B7EF64 LDRB W8, [X19 + 0x81]
	0x03B7EF68 LDR X22, [X22 + 0x5A8]
	0x03B7EF6C LDR X21, [X21 + 0x5A0]
	0x03B7EF70 MOV V10.16B, V0.16B
	0x03B7EF74 MOV V12.16B, V1.16B
	0x03B7EF78 MOV V13.16B, V2.16B
	0x03B7EF7C CBZ W8, 0x3B7F108
	0x03B7EF80 LDP S0, S1, [X19 + 0xAC]
	0x03B7EF84 ADRP X23, 0x85A000
	0x03B7EF88 STP S12, S10, [X31 + 0x8]
	0x03B7EF8C STP S9, S8, [X31 + 0x14]
	0x03B7EF90 FSUB S9, S10, S8
	0x03B7EF94 STR S11, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x865000
	006 Move X21, 0x5DE000
	007 Move X20, 0x57B000
	008 Move W8, [X19+2735]
	009 Move X21, [X21+3512]
	010 Move X20, [X20+344]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x57B000
	016 Move X0, [X0+344]
	017 Call 0x1C17CF4
	018 Move X0, 0x5DE000
	019 Move X0, [X0+3520]
	020 Call 0x1C17CF4
	021 Move X0, 0x5DE000
	022 Move X0, [X0+3512]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X19+2735], W8
	026 Move X0, [X21]
	027 Move W1, 2
	028 Call 0x1C17D6C
	029 Move X8, [X20]
	030 Move X19, X0
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {37}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X8, [X20]
	037 Compare X19, 0
	038 JumpIfEqual {61}
	039 Move W9, [X19+24]
	040 Compare W9, 0
	041 JumpIfEqual {60}
	042 Move X8, [X8+184]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X8, [X8+136]
	045 Move [X19+32], X8
	046 Move X8, [X20]
	047 Move X9, 0x5DE000
	048 Move X8, [X8+184]
	049 Move X8, [X8+144]
	050 Move X9, [X9+3520]
	051 Move [X19+40], X8
	052 Move X8, [X9]
	053 Move X8, [X8+184]
	054 Move [X8], X19
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Return 
	060 Call 0x1C17F28
	061 Call 0x1C17F20

