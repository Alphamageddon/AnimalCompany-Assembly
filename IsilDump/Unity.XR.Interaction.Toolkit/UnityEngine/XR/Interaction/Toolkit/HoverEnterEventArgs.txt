Type: UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs

Method: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor get_interactorObject()

Disassembly:
	0x03B6C738 BL 0x1C16CF4
	0x03B6C73C MOVZ W8, 0x1
	0x03B6C740 STRB W8, [X21 + 0xA0E]
	0x03B6C744 ADRP X24, 0x5EE000
	0x03B6C748 LDR X21, [X20 + 0x38]!
	0x03B6C74C LDR X24, [X24 + 0xCF0]
	0x03B6C750 MOV X0, X21
	0x03B6C754 MOV X1, X19
	0x03B6C758 MOV X2, X31
	0x03B6C75C BL 0x33C0FDC
	0x03B6C760 CBZ X0, 0x3B6C780
	0x03B6C764 LDR X23, [X24]
	0x03B6C768 MOV X22, X0
	0x03B6C76C MOV X1, X23
	0x03B6C770 BL 0x1C16E00
	0x03B6C774 MOV X1, X0
	0x03B6C778 CBNZ X0, 0x3B6C784
	0x03B6C77C B 0x3B6C7B0
	0x03B6C780 MOV X1, X31
	0x03B6C784 MOV X0, X20
	0x03B6C788 MOV X2, X21
	0x03B6C78C BL 0x1C24138
	0x03B6C790 CMP X21, X0
	0x03B6C794 MOV X21, X0
	0x03B6C798 B.NE 0x3B6C750
	0x03B6C79C LDP X20, X19, [X31 + 0x30]
	0x03B6C7A0 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x877000
	005 Move W8, [X20+2540]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x5EF000
	012 Move X0, [X0+800]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2540], W8
	016 Move X19, [X19+16]
	017 Compare X19, 0
	018 JumpIfEqual {30}
	019 Move X8, 0x5EF000
	020 Move X8, [X8+800]
	021 Move X0, X19
	022 Move X20, [X8]
	023 Move X1, X20
	024 Call 0x1C17E00
	025 Compare X0, 0
	026 JumpIfNotEqual {31}
	027 Move X0, X19
	028 Move X1, X20
	029 Call 0x1C181E0
	030 Move X0, X31
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return X0

Method: System.Void set_interactorObject(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor value)

Disassembly:
	0x03B6C7A4 LDP X24, X23, [X31 + 0x10]
	0x03B6C7A8 LDR X30, [X31], #0x40

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable get_interactableObject()

Disassembly:
	0x03B67278 MOV W24, W31
	0x03B6727C MOV X0, X23
	0x03B67280 MOV X1, X31
	0x03B67284 BL 0x3C0F650
	0x03B67288 CMP W24, W0
	0x03B6728C B.GE 0x3B67304
	0x03B67290 LDP V0, V1, [X31 + 0x90]
	0x03B67294 LDP V2, V3, [X31 + 0xB0]
	0x03B67298 STP V0, V1, [X31 + 0x50]
	0x03B6729C STP V2, V3, [X31 + 0x70]
	0x03B672A0 MOV X0, X19
	0x03B672A4 MOV X1, X31
	0x03B672A8 BL 0x3C32ECC
	0x03B672AC CBZ X0, 0x3B6734C
	0x03B672B0 MOV X1, X31
	0x03B672B4 BL 0x3C35734
	0x03B672B8 MOV W25, W0
	0x03B672BC LDR X0, [X29]
	0x03B672C0 LDR W8, [X0 + 0xE0]
	0x03B672C4 CBNZ W8, 0x3B672CC
	0x03B672C8 BL 0x1C16DFC
	0x03B672CC LDP V0, V1, [X31 + 0x50]
	0x03B672D0 LDP V2, V3, [X31 + 0x70]
	0x03B672D4 STP V0, V1, [X31 + 0x10]
	0x03B672D8 STP V2, V3, [X31 + 0x30]
	0x03B672DC ADD X1, X31, 0x10
	0x03B672E0 MOV X0, X23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x87C000
	005 Move W8, [X20+2541]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x5F4000
	012 Move X0, [X0+328]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2541], W8
	016 Move X19, [X19+24]
	017 Compare X19, 0
	018 JumpIfEqual {30}
	019 Move X8, 0x5F4000
	020 Move X8, [X8+328]
	021 Move X0, X19
	022 Move X20, [X8]
	023 Move X1, X20
	024 Call 0x1C17E00
	025 Compare X0, 0
	026 JumpIfNotEqual {31}
	027 Move X0, X19
	028 Move X1, X20
	029 Call 0x1C181E0
	030 Move X0, X31
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return X0

Method: System.Void set_interactableObject(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable value)

Disassembly:
	0x03B6C7AC RET
	0x03B6C7B0 MOV X0, X22

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager get_manager()

Disassembly:
	0x03B6C7B4 MOV X1, X23
	0x03B6C7B8 BL 0x1C171E0

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_manager(UnityEngine.XR.Interaction.Toolkit.XRInteractionManager value)

Disassembly:
	0x03B6C7BC STR X30, [X31 - 0x40]!
	0x03B6C7C0 STP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.Void .ctor()

Disassembly:
	0x03B6C7C4 STP X22, X21, [X31 + 0x20]
	0x03B6C7C8 STP X20, X19, [X31 + 0x30]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

