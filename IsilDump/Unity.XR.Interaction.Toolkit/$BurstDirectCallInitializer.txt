Type: $BurstDirectCallInitializer

Method: System.Void Initialize()

Disassembly:
	0x03BD901C LDR W8, [X0 + 0xE0]
	0x03BD9020 CBNZ W8, 0x3BD9028
	0x03BD9024 BL 0x1C16DFC
	0x03BD9028 LDRB W8, [X23 + 0xEC9]
	0x03BD902C CBNZ W8, 0x3BD9044
	0x03BD9030 ADRP X0, 0x584000
	0x03BD9034 LDR X0, [X0 + 0xD50]
	0x03BD9038 BL 0x1C16CF4
	0x03BD903C MOVZ W8, 0x1
	0x03BD9040 STRB W8, [X23 + 0xEC9]
	0x03BD9044 LDR X0, [X21]
	0x03BD9048 LDR W8, [X0 + 0xE0]
	0x03BD904C CBNZ W8, 0x3BD9058
	0x03BD9050 BL 0x1C16DFC
	0x03BD9054 LDR X0, [X21]
	0x03BD9058 LDR X8, [X0 + 0xB8]
	0x03BD905C LDR X8, [X8 + 0x8]
	0x03BD9060 CBZ X8, 0x3BD9140
	0x03BD9064 LDRB W8, [X8 + 0x20]
	0x03BD9068 CBZ W8, 0x3BD9130
	0x03BD906C LDR W8, [X0 + 0xE0]
	0x03BD9070 CBNZ W8, 0x3BD9078
	0x03BD9074 BL 0x1C16DFC
	0x03BD9078 LDRB W8, [X23 + 0xEC9]
	0x03BD907C CBNZ W8, 0x3BD9094
	0x03BD9080 ADRP X0, 0x584000
	0x03BD9084 LDR X0, [X0 + 0xD50]
	0x03BD9088 BL 0x1C16CF4
	0x03BD908C MOVZ W8, 0x1
	0x03BD9090 STRB W8, [X23 + 0xEC9]
	0x03BD9094 LDR X0, [X21]
	0x03BD9098 LDR W8, [X0 + 0xE0]
	0x03BD909C CBNZ W8, 0x3BD90A8
	0x03BD90A0 BL 0x1C16DFC
	0x03BD90A4 LDR X0, [X21]
	0x03BD90A8 LDR X8, [X0 + 0xB8]
	0x03BD90AC LDR X8, [X8 + 0x8]
	0x03BD90B0 CBZ X8, 0x3BD9140
	0x03BD90B4 LDR X20, [X8 + 0x18]
	0x03BD90B8 STR X20, [X19 + 0x28]
	0x03BD90BC LDR X0, [X22]
	0x03BD90C0 LDR W8, [X0 + 0xE0]
	0x03BD90C4 CBNZ W8, 0x3BD90CC
	0x03BD90C8 BL 0x1C16DFC
	0x03BD90CC MOV X0, X20
	0x03BD90D0 MOV X1, X31
	0x03BD90D4 MOV X2, X31
	0x03BD90D8 BL 0x3C3883C
	0x03BD90DC TBZ X0, 0x0, 0x3BD9118
	0x03BD90E0 ADRP X8, 0x51A000
	0x03BD90E4 LDR X8, [X8 + 0xA28]
	0x03BD90E8 LDR X0, [X8]
	0x03BD90EC LDR W8, [X0 + 0xE0]
	0x03BD90F0 CBNZ W8, 0x3BD90F8
	0x03BD90F4 BL 0x1C16DFC
	0x03BD90F8 ADRP X8, 0x584000
	0x03BD90FC LDR X8, [X8 + 0xD68]
	0x03BD9100 LDP X20, X19, [X31 + 0x20]
	0x03BD9104 LDP X22, X21, [X31 + 0x10]
	0x03BD9108 MOV X1, X31
	0x03BD910C LDR X0, [X8]
	0x03BD9110 LDP X30, X23, [X31], #0x30
	0x03BD9114 B 0x3C0649C
	0x03BD9118 LDR X0, [X19 + 0x28]
	0x03BD911C CBZ X0, 0x3BD9140
	0x03BD9120 STRH W31, [X0 + 0x1A]
	0x03BD9124 BL 0x3BD9228
	0x03BD9128 MOVZ W8, 0x1
	0x03BD912C STRB W8, [X19 + 0x30]
	0x03BD9130 LDP X20, X19, [X31 + 0x20]
	0x03BD9134 LDP X22, X21, [X31 + 0x10]
	0x03BD9138 LDP X30, X23, [X31], #0x30
	0x03BD913C RET
	0x03BD9140 BL 0x1C16F20
	0x03BD9144 STR X30, [X31 - 0x20]!
	0x03BD9148 STP X20, X19, [X31 + 0x10]
	0x03BD914C ADRP X20, 0x809000
	0x03BD9150 ADRP X19, 0x584000
	0x03BD9154 LDRB W8, [X20 + 0xEB2]
	0x03BD9158 LDR X19, [X19 + 0xD50]
	0x03BD915C TBNZ X8, 0x0, 0x3BD9180
	0x03BD9160 ADRP X0, 0x51A000
	0x03BD9164 LDR X0, [X0 + 0x598]
	0x03BD9168 BL 0x1C16CF4
	0x03BD916C ADRP X0, 0x584000
	0x03BD9170 LDR X0, [X0 + 0xD50]
	0x03BD9174 BL 0x1C16CF4
	0x03BD9178 MOVZ W8, 0x1
	0x03BD917C STRB W8, [X20 + 0xEB2]
	0x03BD9180 LDR X0, [X19]
	0x03BD9184 LDR W8, [X0 + 0xE0]
	0x03BD9188 CBNZ W8, 0x3BD9190
	0x03BD918C BL 0x1C16DFC
	0x03BD9190 ADRP X20, 0x809000
	0x03BD9194 LDRB W8, [X20 + 0xEC9]
	0x03BD9198 CBNZ W8, 0x3BD91B0
	0x03BD919C ADRP X0, 0x584000
	0x03BD91A0 LDR X0, [X0 + 0xD50]
	0x03BD91A4 BL 0x1C16CF4
	0x03BD91A8 MOVZ W8, 0x1
	0x03BD91AC STRB W8, [X20 + 0xEC9]
	0x03BD91B0 LDR X0, [X19]
	0x03BD91B4 ADRP X20, 0x51A000
	0x03BD91B8 LDR W8, [X0 + 0xE0]
	0x03BD91BC LDR X20, [X20 + 0x598]
	0x03BD91C0 CBNZ W8, 0x3BD91CC
	0x03BD91C4 BL 0x1C16DFC
	0x03BD91C8 LDR X0, [X19]
	0x03BD91CC LDR X8, [X20]
	0x03BD91D0 LDR X9, [X0 + 0xB8]
	0x03BD91D4 LDR W10, [X8 + 0xE0]
	0x03BD91D8 LDR X19, [X9 + 0x8]
	0x03BD91DC CBNZ W10, 0x3BD91E8
	0x03BD91E0 MOV X0, X8
	0x03BD91E4 BL 0x1C16DFC
	0x03BD91E8 MOV X0, X19
	0x03BD91EC MOV X1, X31
	0x03BD91F0 MOV X2, X31
	0x03BD91F4 BL 0x3C3883C
	0x03BD91F8 TBNZ X0, 0x0, 0x3BD9218
	0x03BD91FC CBZ X19, 0x3BD9224
	0x03BD9200 LDRB W8, [X19 + 0x20]
	0x03BD9204 CBZ W8, 0x3BD9218
	0x03BD9208 MOV X0, X19
	0x03BD920C LDP X20, X19, [X31 + 0x10]
	0x03BD9210 LDR X30, [X31], #0x20
	0x03BD9214 B 0x3BD8D34
	0x03BD9218 LDP X20, X19, [X31 + 0x10]
	0x03BD921C LDR X30, [X31], #0x20
	0x03BD9220 RET
	0x03BD9224 BL 0x1C16F20
	0x03BD9228 SUB X31, X31, 0x70
	0x03BD922C STR X30, [X31 + 0x40]
	0x03BD9230 STP X22, X21, [X31 + 0x50]
	0x03BD9234 STP X20, X19, [X31 + 0x60]
	0x03BD9238 ADRP X20, 0x809000
	0x03BD923C ADRP X21, 0x51A000
	0x03BD9240 LDRB W8, [X20 + 0xEBC]
	0x03BD9244 LDR X21, [X21 + 0x598]
	0x03BD9248 MOV X19, X0
	0x03BD924C TBNZ X8, 0x0, 0x3BD92AC
	0x03BD9250 ADRP X0, 0x51A000
	0x03BD9254 LDR X0, [X0 + 0xA28]
	0x03BD9258 BL 0x1C16CF4
	0x03BD925C ADRP X0, 0x584000
	0x03BD9260 LDR X0, [X0 + 0xD70]
	0x03BD9264 BL 0x1C16CF4
	0x03BD9268 ADRP X0, 0x584000
	0x03BD926C LDR X0, [X0 + 0xD78]
	0x03BD9270 BL 0x1C16CF4
	0x03BD9274 ADRP X0, 0x584000
	0x03BD9278 LDR X0, [X0 + 0xD80]
	0x03BD927C BL 0x1C16CF4
	0x03BD9280 ADRP X0, 0x584000
	0x03BD9284 LDR X0, [X0 + 0xD88]
	0x03BD9288 BL 0x1C16CF4
	0x03BD928C ADRP X0, 0x51A000
	0x03BD9290 LDR X0, [X0 + 0x598]
	0x03BD9294 BL 0x1C16CF4
	0x03BD9298 ADRP X0, 0x584000
	0x03BD929C LDR X0, [X0 + 0xD90]
	0x03BD92A0 BL 0x1C16CF4
	0x03BD92A4 MOVZ W8, 0x1
	0x03BD92A8 STRB W8, [X20 + 0xEBC]
	0x03BD92AC LDR X0, [X21]
	0x03BD92B0 STP X31, X31, [X31 + 0x20]
	0x03BD92B4 STR X31, [X31 + 0x30]
	0x03BD92B8 LDR X20, [X19 + 0x30]
	0x03BD92BC LDR W8, [X0 + 0xE0]
	0x03BD92C0 CBNZ W8, 0x3BD92C8
	0x03BD92C4 BL 0x1C16DFC
	0x03BD92C8 MOV X0, X20
	0x03BD92CC MOV X1, X31
	0x03BD92D0 MOV X2, X31
	0x03BD92D4 BL 0x3C354F8
	0x03BD92D8 TBZ X0, 0x0, 0x3BD930C
	0x03BD92DC ADRP X8, 0x51A000
	0x03BD92E0 LDR X8, [X8 + 0xA28]
	0x03BD92E4 ADRP X19, 0x584000
	0x03BD92E8 LDR X0, [X8]
	0x03BD92EC LDR W8, [X0 + 0xE0]
	0x03BD92F0 LDR X19, [X19 + 0xD90]
	0x03BD92F4 CBNZ W8, 0x3BD92FC
	0x03BD92F8 BL 0x1C16DFC
	0x03BD92FC LDR X0, [X19]
	0x03BD9300 MOV X1, X31
	0x03BD9304 BL 0x3C06A04
	0x03BD9308 B 0x3BD93D8
	0x03BD930C LDR X0, [X19 + 0x20]
	0x03BD9310 CBZ X0, 0x3BD93F0
	0x03BD9314 ADRP X8, 0x584000
	0x03BD9318 LDR X8, [X8 + 0xD88]
	0x03BD931C LDR X1, [X8]
	0x03BD9320 ADD X8, X31, 0x8
	0x03BD9324 BL 0x301CB58
	0x03BD9328 LDUR V0, [X31 + 0x8]
	0x03BD932C LDR X8, [X31 + 0x18]
	0x03BD9330 ADRP X22, 0x584000
	0x03BD9334 STR V0, [X31 + 0x2]
	0x03BD9338 STR X8, [X31 + 0x30]
	0x03BD933C LDR X22, [X22 + 0xD78]
	0x03BD9340 LDR X1, [X22]
	0x03BD9344 ADD X0, X31, 0x20
	0x03BD9348 BL 0x2BC4350
	0x03BD934C TBZ X0, 0x0, 0x3BD93C0
	0x03BD9350 LDR X0, [X21]
	0x03BD9354 LDR X20, [X31 + 0x30]
	0x03BD9358 LDR W8, [X0 + 0xE0]
	0x03BD935C CBNZ W8, 0x3BD9364
	0x03BD9360 BL 0x1C16DFC
	0x03BD9364 MOV X0, X20
	0x03BD9368 MOV X1, X31
	0x03BD936C MOV X2, X31
	0x03BD9370 BL 0x3C354F8
	0x03BD9374 TBZ X0, 0x0, 0x3BD9340
	0x03BD9378 MOV X1, X20
	0x03BD937C BL 0x3BD9A3C
	0x03BD9380 TBZ X0, 0x0, 0x3BD9340
	0x03BD9384 CBZ X20, 0x3BD93EC
	0x03BD9388 LDR X8, [X20]
	0x03BD938C LDP X9, X1, [X8 + 0x178]
	0x03BD9390 MOV X0, X20
	0x03BD9394 BLR X9
	0x03BD9398 TBZ X0, 0x0, 0x3BD9340
	0x03BD939C MOVZ W8, 0x1
	0x03BD93A0 STR X20, [X19 + 0x30]
	0x03BD93A4 STRB W8, [X19 + 0x18]
	0x03BD93A8 ADRP X8, 0x584000
	0x03BD93AC LDR X8, [X8 + 0xD70]
	0x03BD93B0 ADD X0, X31, 0x20
	0x03BD93B4 LDR X1, [X8]
	0x03BD93B8 BL 0x2BC434C
	0x03BD93BC B 0x3BD93D8
	0x03BD93C0 ADRP X8, 0x584000
	0x03BD93C4 LDR X8, [X8 + 0xD70]
	0x03BD93C8 ADD X0, X31, 0x20
	0x03BD93CC LDR X1, [X8]
	0x03BD93D0 BL 0x2BC434C
	0x03BD93D4 STR X31, [X19 + 0x30]
	0x03BD93D8 LDP X20, X19, [X31 + 0x60]
	0x03BD93DC LDP X22, X21, [X31 + 0x50]
	0x03BD93E0 LDR X30, [X31 + 0x40]
	0x03BD93E4 ADD X31, X31, 0x70
	0x03BD93E8 RET
	0x03BD93EC BL 0x1C16F20
	0x03BD93F0 BL 0x1C16F20
	0x03BD93F4 B 0x3BD9408
	0x03BD93F8 B 0x3BD9408
	0x03BD93FC B 0x3BD9408
	0x03BD9400 B 0x3BD9408
	0x03BD9404 B 0x3BD9408
	0x03BD9408 MOV X20, X0
	0x03BD940C CMP W1, 0x1
	0x03BD9410 B.NE 0x3BD9444
	0x03BD9414 MOV X0, X20
	0x03BD9418 BL 0x3EB1AD0
	0x03BD941C LDR X21, [X0]
	0x03BD9420 BL 0x3EB1AE0
	0x03BD9424 ADRP X8, 0x584000
	0x03BD9428 LDR X8, [X8 + 0xD70]
	0x03BD942C ADD X0, X31, 0x20
	0x03BD9430 LDR X1, [X8]
	0x03BD9434 BL 0x2BC434C
	0x03BD9438 CBZ X21, 0x3BD93D4
	0x03BD943C MOV X0, X21
	0x03BD9440 BL 0x1C16F18
	0x03BD9444 MOV X21, X31
	0x03BD9448 B 0x3BD9450
	0x03BD944C MOV X20, X0
	0x03BD9450 ADRP X8, 0x584000
	0x03BD9454 LDR X8, [X8 + 0xD70]
	0x03BD9458 LDR X1, [X8]
	0x03BD945C ADD X0, X31, 0x20
	0x03BD9460 BL 0x2BC434C
	0x03BD9464 CBNZ X21, 0x3BD9470
	0x03BD9468 MOV X0, X20
	0x03BD946C BL 0x1D2C690
	0x03BD9470 MOV X0, X21
	0x03BD9474 BL 0x1C16F18
	0x03BD9478 BL 0x1990590
	0x03BD947C STR X30, [X31 - 0x20]!
	0x03BD9480 STP X20, X19, [X31 + 0x10]
	0x03BD9484 ADRP X20, 0x809000
	0x03BD9488 LDRB W8, [X20 + 0xEC3]
	0x03BD948C MOV X19, X0
	0x03BD9490 TBNZ X8, 0x0, 0x3BD94C0
	0x03BD9494 ADRP X0, 0x51A000
	0x03BD9498 LDR X0, [X0 + 0xA28]
	0x03BD949C BL 0x1C16CF4
	0x03BD94A0 ADRP X0, 0x51A000
	0x03BD94A4 LDR X0, [X0 + 0x598]
	0x03BD94A8 BL 0x1C16CF4
	0x03BD94AC ADRP X0, 0x584000
	0x03BD94B0 LDR X0, [X0 + 0xD98]
	0x03BD94B4 BL 0x1C16CF4
	0x03BD94B8 MOVZ W8, 0x1
	0x03BD94BC STRB W8, [X20 + 0xEC3]
	0x03BD94C0 LDRB W8, [X19 + 0x18]
	0x03BD94C4 CBZ W8, 0x3BD9514
	0x03BD94C8 ADRP X8, 0x51A000
	0x03BD94CC LDR X8, [X8 + 0x598]
	0x03BD94D0 LDR X20, [X19 + 0x30]
	0x03BD94D4 LDR X0, [X8]
	0x03BD94D8 LDR W8, [X0 + 0xE0]
	0x03BD94DC CBNZ W8, 0x3BD94E4
	0x03BD94E0 BL 0x1C16DFC
	0x03BD94E4 MOV X0, X20
	0x03BD94E8 MOV X1, X31
	0x03BD94EC MOV X2, X31
	0x03BD94F0 BL 0x3C354F8
	0x03BD94F4 TBZ X0, 0x0, 0x3BD9548
	0x03BD94F8 LDR X0, [X19 + 0x30]
	0x03BD94FC CBZ X0, 0x3BD9554
	0x03BD9500 LDR X8, [X0]
	0x03BD9504 LDP X20, X19, [X31 + 0x10]
	0x03BD9508 LDP X2, X1, [X8 + 0x188]
	0x03BD950C LDR X30, [X31], #0x20
	0x03BD9510 BR X2
	0x03BD9514 ADRP X8, 0x51A000
	0x03BD9518 LDR X8, [X8 + 0xA28]
	0x03BD951C LDR X0, [X8]
	0x03BD9520 LDR W8, [X0 + 0xE0]
	0x03BD9524 CBNZ W8, 0x3BD952C
	0x03BD9528 BL 0x1C16DFC
	0x03BD952C ADRP X8, 0x584000
	0x03BD9530 LDR X8, [X8 + 0xD98]
	0x03BD9534 LDP X20, X19, [X31 + 0x10]
	0x03BD9538 MOV X1, X31
	0x03BD953C LDR X0, [X8]
	0x03BD9540 LDR X30, [X31], #0x20
	0x03BD9544 B 0x3C06A04
	0x03BD9548 LDP X20, X19, [X31 + 0x10]
	0x03BD954C LDR X30, [X31], #0x20
	0x03BD9550 RET
	0x03BD9554 BL 0x1C16F20
	0x03BD9558 STP X30, X21, [X31 - 0x20]!
	0x03BD955C STP X20, X19, [X31 + 0x10]
	0x03BD9560 ADRP X20, 0x809000
	0x03BD9564 ADRP X21, 0x51A000
	0x03BD9568 LDRB W8, [X20 + 0xEB5]
	0x03BD956C LDR X21, [X21 + 0x598]
	0x03BD9570 MOV X19, X0
	0x03BD9574 TBNZ X8, 0x0, 0x3BD958C
	0x03BD9578 ADRP X0, 0x51A000
	0x03BD957C LDR X0, [X0 + 0x598]
	0x03BD9580 BL 0x1C16CF4
	0x03BD9584 MOVZ W8, 0x1
	0x03BD9588 STRB W8, [X20 + 0xEB5]
	0x03BD958C LDR X0, [X21]
	0x03BD9590 LDR X20, [X19 + 0x28]
	0x03BD9594 LDR W8, [X0 + 0xE0]
	0x03BD9598 CBNZ W8, 0x3BD95A0
	0x03BD959C BL 0x1C16DFC
	0x03BD95A0 MOV X0, X20
	0x03BD95A4 MOV X1, X31
	0x03BD95A8 MOV X2, X31
	0x03BD95AC BL 0x3C354F8
	0x03BD95B0 TBZ X0, 0x0, 0x3BD95F4
	0x03BD95B4 LDR X8, [X19 + 0x28]
	0x03BD95B8 CBZ X8, 0x3BD9600
	0x03BD95BC LDR X0, [X21]
	0x03BD95C0 LDR X20, [X8 + 0x30]
	0x03BD95C4 LDR W9, [X0 + 0xE0]
	0x03BD95C8 CBNZ W9, 0x3BD95D0
	0x03BD95CC BL 0x1C16DFC
	0x03BD95D0 MOV X0, X20
	0x03BD95D4 MOV X1, X31
	0x03BD95D8 MOV X2, X31
	0x03BD95DC BL 0x3C354F8
	0x03BD95E0 TBZ X0, 0x0, 0x3BD95F4
	0x03BD95E4 LDR X0, [X19 + 0x28]
	0x03BD95E8 CBZ X0, 0x3BD9600
	0x03BD95EC BL 0x3BD9604
	0x03BD95F0 STRB W31, [X19 + 0x31]
	0x03BD95F4 LDP X20, X19, [X31 + 0x10]
	0x03BD95F8 LDP X30, X21, [X31], #0x20
	0x03BD95FC RET
	0x03BD9600 BL 0x1C16F20
	0x03BD9604 STR X30, [X31 - 0x20]!
	0x03BD9608 STP X20, X19, [X31 + 0x10]
	0x03BD960C ADRP X20, 0x809000
	0x03BD9610 LDRB W8, [X20 + 0xEC4]
	0x03BD9614 MOV X19, X0
	0x03BD9618 TBNZ X8, 0x0, 0x3BD9648
	0x03BD961C ADRP X0, 0x51A000
	0x03BD9620 LDR X0, [X0 + 0xA28]
	0x03BD9624 BL 0x1C16CF4
	0x03BD9628 ADRP X0, 0x51A000
	0x03BD962C LDR X0, [X0 + 0x598]
	0x03BD9630 BL 0x1C16CF4
	0x03BD9634 ADRP X0, 0x584000
	0x03BD9638 LDR X0, [X0 + 0xDA0]
	0x03BD963C BL 0x1C16CF4
	0x03BD9640 MOVZ W8, 0x1
	0x03BD9644 STRB W8, [X20 + 0xEC4]
	0x03BD9648 LDRB W8, [X19 + 0x18]
	0x03BD964C CBZ W8, 0x3BD969C
	0x03BD9650 ADRP X8, 0x51A000
	0x03BD9654 LDR X8, [X8 + 0x598]
	0x03BD9658 LDR X20, [X19 + 0x30]
	0x03BD965C LDR X0, [X8]
	0x03BD9660 LDR W8, [X0 + 0xE0]
	0x03BD9664 CBNZ W8, 0x3BD966C
	0x03BD9668 BL 0x1C16DFC
	0x03BD966C MOV X0, X20
	0x03BD9670 MOV X1, X31
	0x03BD9674 MOV X2, X31
	0x03BD9678 BL 0x3C354F8
	0x03BD967C TBZ X0, 0x0, 0x3BD96D0
	0x03BD9680 LDR X0, [X19 + 0x30]
	0x03BD9684 CBZ X0, 0x3BD96DC
	0x03BD9688 LDR X8, [X0]
	0x03BD968C LDP X20, X19, [X31 + 0x10]
	0x03BD9690 LDP X2, X1, [X8 + 0x198]
	0x03BD9694 LDR X30, [X31], #0x20
	0x03BD9698 BR X2
	0x03BD969C ADRP X8, 0x51A000
	0x03BD96A0 LDR X8, [X8 + 0xA28]
	0x03BD96A4 LDR X0, [X8]
	0x03BD96A8 LDR W8, [X0 + 0xE0]
	0x03BD96AC CBNZ W8, 0x3BD96B4
	0x03BD96B0 BL 0x1C16DFC
	0x03BD96B4 ADRP X8, 0x584000
	0x03BD96B8 LDR X8, [X8 + 0xDA0]
	0x03BD96BC LDP X20, X19, [X31 + 0x10]
	0x03BD96C0 MOV X1, X31
	0x03BD96C4 LDR X0, [X8]
	0x03BD96C8 LDR X30, [X31], #0x20
	0x03BD96CC B 0x3C06A04
	0x03BD96D0 LDP X20, X19, [X31 + 0x10]
	0x03BD96D4 LDR X30, [X31], #0x20
	0x03BD96D8 RET
	0x03BD96DC BL 0x1C16F20
	0x03BD96E0 STR X30, [X31 - 0x20]!
	0x03BD96E4 STP X20, X19, [X31 + 0x10]
	0x03BD96E8 ADRP X20, 0x809000
	0x03BD96EC LDRB W8, [X20 + 0xEC5]
	0x03BD96F0 MOV X19, X0
	0x03BD96F4 TBNZ X8, 0x0, 0x3BD9724
	0x03BD96F8 ADRP X0, 0x51A000
	0x03BD96FC LDR X0, [X0 + 0xA28]
	0x03BD9700 BL 0x1C16CF4
	0x03BD9704 ADRP X0, 0x51A000
	0x03BD9708 LDR X0, [X0 + 0x598]
	0x03BD970C BL 0x1C16CF4
	0x03BD9710 ADRP X0, 0x584000
	0x03BD9714 LDR X0, [X0 + 0xDA8]
	0x03BD9718 BL 0x1C16CF4
	0x03BD971C MOVZ W8, 0x1
	0x03BD9720 STRB W8, [X20 + 0xEC5]
	0x03BD9724 LDRB W8, [X19 + 0x18]
	0x03BD9728 CBZ W8, 0x3BD978C
	0x03BD972C ADRP X20, 0x51A000
	0x03BD9730 LDR X20, [X20 + 0x598]
	0x03BD9734 MOV X0, X19
	0x03BD9738 BL 0x3BD9604
	0x03BD973C LDR X0, [X20]
	0x03BD9740 LDR X20, [X19 + 0x30]
	0x03BD9744 LDR W8, [X0 + 0xE0]
	0x03BD9748 CBNZ W8, 0x3BD9750
	0x03BD974C BL 0x1C16DFC
	0x03BD9750 MOV X0, X20
	0x03BD9754 MOV X1, X31
	0x03BD9758 MOV X2, X31
	0x03BD975C BL 0x3C354F8
	0x03BD9760 TBZ X0, 0x0, 0x3BD977C
	0x03BD9764 LDR X0, [X19 + 0x30]
	0x03BD9768 CBZ X0, 0x3BD97C0
	0x03BD976C LDR X8, [X0]
	0x03BD9770 LDP X9, X1, [X8 + 0x1A8]
	0x03BD9774 BLR X9
	0x03BD9778 STR X31, [X19 + 0x30]
	0x03BD977C STRB W31, [X19 + 0x18]
	0x03BD9780 LDP X20, X19, [X31 + 0x10]
	0x03BD9784 LDR X30, [X31], #0x20
	0x03BD9788 RET
	0x03BD978C ADRP X8, 0x51A000
	0x03BD9790 LDR X8, [X8 + 0xA28]
	0x03BD9794 LDR X0, [X8]
	0x03BD9798 LDR W8, [X0 + 0xE0]
	0x03BD979C CBNZ W8, 0x3BD97A4
	0x03BD97A0 BL 0x1C16DFC
	0x03BD97A4 ADRP X8, 0x584000
	0x03BD97A8 LDR X8, [X8 + 0xDA8]
	0x03BD97AC LDP X20, X19, [X31 + 0x10]
	0x03BD97B0 MOV X1, X31
	0x03BD97B4 LDR X0, [X8]
	0x03BD97B8 LDR X30, [X31], #0x20
	0x03BD97BC B 0x3C06A04
	0x03BD97C0 BL 0x1C16F20
	0x03BD97C4 MOVZ W8, 0x1
	0x03BD97C8 MOV X1, X31
	0x03BD97CC STRB W8, [X0 + 0x20]
	0x03BD97D0 B 0x3C36D2C
	0x03BD97D4 STP X30, X21, [X31 - 0x20]!
	0x03BD97D8 STP X20, X19, [X31 + 0x10]
	0x03BD97DC ADRP X21, 0x809000
	0x03BD97E0 ADRP X20, 0x584000
	0x03BD97E4 ADRP X19, 0x584000
	0x03BD97E8 LDRB W8, [X21 + 0xEB7]
	0x03BD97EC LDR X20, [X20 + 0xDB0]
	0x03BD97F0 LDR X19, [X19 + 0xD50]
	0x03BD97F4 TBNZ X8, 0x0, 0x3BD9818
	0x03BD97F8 ADRP X0, 0x584000
	0x03BD97FC LDR X0, [X0 + 0xD50]
	0x03BD9800 BL 0x1C16CF4
	0x03BD9804 ADRP X0, 0x584000
	0x03BD9808 LDR X0, [X0 + 0xDB0]
	0x03BD980C BL 0x1C16CF4
	0x03BD9810 MOVZ W8, 0x1
	0x03BD9814 STRB W8, [X21 + 0xEB7]
	0x03BD9818 LDR X8, [X19]
	0x03BD981C LDR X9, [X20]
	0x03BD9820 LDR X8, [X8 + 0xB8]
	0x03BD9824 STR X9, [X8]
	0x03BD9828 LDR X8, [X19]
	0x03BD982C LDP X20, X19, [X31 + 0x10]
	0x03BD9830 LDR X8, [X8 + 0xB8]
	0x03BD9834 STR X31, [X8 + 0x8]
	0x03BD9838 LDP X30, X21, [X31], #0x20
	0x03BD983C RET
	0x03BD9840 MOVZ W0, 0x1
	0x03BD9844 RET
	0x03BD9848 MOVZ W0, 0x1
	0x03BD984C RET
	0x03BD9850 MOVZ W0, 0x1
	0x03BD9854 RET
	0x03BD9858 MOVZ W0, 0x1
	0x03BD985C RET
	0x03BD9860 STP X30, X21, [X31 - 0x20]!
	0x03BD9864 STP X20, X19, [X31 + 0x10]
	0x03BD9868 ADRP X20, 0x809000
	0x03BD986C ADRP X21, 0x584000
	0x03BD9870 ADRP X19, 0x584000
	0x03BD9874 LDRB W8, [X20 + 0xEB8]
	0x03BD9878 LDR X21, [X21 + 0xDB8]
	0x03BD987C LDR X19, [X19 + 0xDC0]
	0x03BD9880 TBNZ X8, 0x0, 0x3BD98A4
	0x03BD9884 ADRP X0, 0x584000
	0x03BD9888 LDR X0, [X0 + 0xDC0]
	0x03BD988C BL 0x1C16CF4
	0x03BD9890 ADRP X0, 0x584000
	0x03BD9894 LDR X0, [X0 + 0xDB8]
	0x03BD9898 BL 0x1C16CF4
	0x03BD989C MOVZ W8, 0x1
	0x03BD98A0 STRB W8, [X20 + 0xEB8]
	0x03BD98A4 LDR X0, [X21]
	0x03BD98A8 BL 0x1C16F10
	0x03BD98AC LDR X1, [X19]
	0x03BD98B0 MOV X19, X0
	0x03BD98B4 BL 0x2FDE980

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x80A000
	005 Move X19, 0x582000
	006 Move W8, [X20+3750]
	007 Move X19, [X19+1880]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {155}
	012 Move X0, 0x584000
	013 Move X0, [X0+3584]
	014 Call 0x1C17CF4
	015 Move X0, 0x584000
	016 Move X0, [X0+200]
	017 Call 0x1C17CF4
	018 Move X0, 0x582000
	019 Move X0, [X0+2584]
	020 Call 0x1C17CF4
	021 Move X0, 0x584000
	022 Move X0, [X0+1696]
	023 Call 0x1C17CF4
	024 Move X0, 0x585000
	025 Move X0, [X0+928]
	026 Call 0x1C17CF4
	027 Move X0, 0x584000
	028 Move X0, [X0+3768]
	029 Call 0x1C17CF4
	030 Move X0, 0x585000
	031 Move X0, [X0+944]
	032 Call 0x1C17CF4
	033 Move X0, 0x584000
	034 Move X0, [X0+3576]
	035 Call 0x1C17CF4
	036 Move X0, 0x584000
	037 Move X0, [X0+3592]
	038 Call 0x1C17CF4
	039 Move X0, 0x582000
	040 Move X0, [X0+2600]
	041 Call 0x1C17CF4
	042 Move X0, 0x584000
	043 Move X0, [X0+1440]
	044 Call 0x1C17CF4
	045 Move X0, 0x584000
	046 Move X0, [X0+1528]
	047 Call 0x1C17CF4
	048 Move X0, 0x584000
	049 Move X0, [X0+3600]
	050 Call 0x1C17CF4
	051 Move X0, 0x582000
	052 Move X0, [X0+1880]
	053 Call 0x1C17CF4
	054 Move X0, 0x584000
	055 Move X0, [X0+1672]
	056 Call 0x1C17CF4
	057 Move X0, 0x582000
	058 Move X0, [X0+2664]
	059 Call 0x1C17CF4
	060 Move X0, 0x584000
	061 Move X0, [X0+3752]
	062 Call 0x1C17CF4
	063 Move X0, 0x584000
	064 Move X0, [X0+3776]
	065 Call 0x1C17CF4
	066 Move X0, 0x584000
	067 Move X0, [X0+224]
	068 Call 0x1C17CF4
	069 Move X0, 0x584000
	070 Move X0, [X0+232]
	071 Call 0x1C17CF4
	072 Move X0, 0x584000
	073 Move X0, [X0+208]
	074 Call 0x1C17CF4
	075 Move X0, 0x584000
	076 Move X0, [X0+216]
	077 Call 0x1C17CF4
	078 Move X0, 0x584000
	079 Move X0, [X0+1680]
	080 Call 0x1C17CF4
	081 Move X0, 0x583000
	082 Move X0, [X0+1328]
	083 Call 0x1C17CF4
	084 Move X0, 0x584000
	085 Move X0, [X0+664]
	086 Call 0x1C17CF4
	087 Move X0, 0x584000
	088 Move X0, [X0+656]
	089 Call 0x1C17CF4
	090 Move X0, 0x584000
	091 Move X0, [X0+648]
	092 Call 0x1C17CF4
	093 Move X0, 0x584000
	094 Move X0, [X0+1488]
	095 Call 0x1C17CF4
	096 Move X0, 0x584000
	097 Move X0, [X0+3744]
	098 Call 0x1C17CF4
	099 Move X0, 0x584000
	100 Move X0, [X0+184]
	101 Call 0x1C17CF4
	102 Move X0, 0x584000
	103 Move X0, [X0+192]
	104 Call 0x1C17CF4
	105 Move X0, 0x584000
	106 Move X0, [X0+152]
	107 Call 0x1C17CF4
	108 Move X0, 0x584000
	109 Move X0, [X0+160]
	110 Call 0x1C17CF4
	111 Move X0, 0x584000
	112 Move X0, [X0+136]
	113 Call 0x1C17CF4
	114 Move X0, 0x584000
	115 Move X0, [X0+144]
	116 Call 0x1C17CF4
	117 Move X0, 0x584000
	118 Move X0, [X0+256]
	119 Call 0x1C17CF4
	120 Move X0, 0x584000
	121 Move X0, [X0+168]
	122 Call 0x1C17CF4
	123 Move X0, 0x584000
	124 Move X0, [X0+176]
	125 Call 0x1C17CF4
	126 Move X0, 0x584000
	127 Move X0, [X0+1664]
	128 Call 0x1C17CF4
	129 Move X0, 0x584000
	130 Move X0, [X0+1688]
	131 Call 0x1C17CF4
	132 Move X0, 0x584000
	133 Move X0, [X0+1656]
	134 Call 0x1C17CF4
	135 Move X0, 0x584000
	136 Move X0, [X0+240]
	137 Call 0x1C17CF4
	138 Move X0, 0x584000
	139 Move X0, [X0+248]
	140 Call 0x1C17CF4
	141 Move X0, 0x585000
	142 Move X0, [X0+936]
	143 Call 0x1C17CF4
	144 Move X0, 0x585000
	145 Move X0, [X0+920]
	146 Call 0x1C17CF4
	147 Move X0, 0x585000
	148 Move X0, [X0+912]
	149 Call 0x1C17CF4
	150 Move X0, 0x582000
	151 Move X0, [X0+1888]
	152 Call 0x1C17CF4
	153 Move W8, 1
	154 Move [X20+3750], W8
	155 Move X0, [X19]
	156 Move X20, 0x582000
	157 Move W8, [X0+224]
	158 Move X20, [X20+1888]
	159 Compare W8, 0
	160 JumpIfNotEqual {162}
	161 Call 0x1C17DFC
	162 Move X19, 0x582000
	163 Move X19, [X19+2584]
	164 Move X0, X31
	165 Call EaseAttachBurst_00000291$BurstDirectCall.Initialize
	166 Move X0, [X20]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {171}
	170 Call 0x1C17DFC
	171 Move X20, 0x582000
	172 Move X20, [X20+2600]
	173 Move X0, X31
	174 Call StepSmoothingBurst_00000292$BurstDirectCall.Initialize
	175 Move X0, [X19]
	176 Move W8, [X0+224]
	177 Compare W8, 0
	178 JumpIfNotEqual {180}
	179 Call 0x1C17DFC
	180 Move X19, 0x582000
	181 Move X19, [X19+2664]
	182 Move X0, X31
	183 Call CalculateLineCurveRenderPoints_0000037D$BurstDirectCall.Initialize
	184 Move X0, [X20]
	185 Move W8, [X0+224]
	186 Compare W8, 0
	187 JumpIfNotEqual {189}
	188 Call 0x1C17DFC
	189 Move X20, 0x583000
	190 Move X20, [X20+1328]
	191 Move X0, X31
	192 Call ComputeNewRenderPoints_0000037E$BurstDirectCall.Initialize
	193 Move X0, [X19]
	194 Move W8, [X0+224]
	195 Compare W8, 0
	196 JumpIfNotEqual {198}
	197 Call 0x1C17DFC
	198 Move X19, 0x584000
	199 Move X19, [X19+136]
	200 Move X0, X31
	201 Call EvaluateLineEndPoint_0000037F$BurstDirectCall.Initialize
	202 Move X0, [X20]
	203 Move W8, [X0+224]
	204 Compare W8, 0
	205 JumpIfNotEqual {207}
	206 Call 0x1C17DFC
	207 Move X20, 0x584000
	208 Move X20, [X20+144]
	209 Move X0, X31
	210 Call GetAssistedVelocityInternal_00000691$BurstDirectCall.Initialize
	211 Move X0, [X19]
	212 Move W8, [X0+224]
	213 Compare W8, 0
	214 JumpIfNotEqual {216}
	215 Call 0x1C17DFC
	216 Move X19, 0x584000
	217 Move X19, [X19+152]
	218 Move X0, X31
	219 Call OrthogonalUpVector_00000926$BurstDirectCall.Initialize
	220 Move X0, [X20]
	221 Move W8, [X0+224]
	222 Compare W8, 0
	223 JumpIfNotEqual {225}
	224 Call 0x1C17DFC
	225 Move X20, 0x584000
	226 Move X20, [X20+160]
	227 Move X0, X31
	228 Call OrthogonalUpVector_00000927$BurstDirectCall.Initialize
	229 Move X0, [X19]
	230 Move W8, [X0+224]
	231 Compare W8, 0
	232 JumpIfNotEqual {234}
	233 Call 0x1C17DFC
	234 Move X19, 0x584000
	235 Move X19, [X19+168]
	236 Move X0, X31
	237 Call OrthogonalLookRotation_00000928$BurstDirectCall.Initialize
	238 Move X0, [X20]
	239 Move W8, [X0+224]
	240 Compare W8, 0
	241 JumpIfNotEqual {243}
	242 Call 0x1C17DFC
	243 Move X20, 0x584000
	244 Move X20, [X20+176]
	245 Move X0, X31
	246 Call OrthogonalLookRotation_00000929$BurstDirectCall.Initialize
	247 Move X0, [X19]
	248 Move W8, [X0+224]
	249 Compare W8, 0
	250 JumpIfNotEqual {252}
	251 Call 0x1C17DFC
	252 Move X19, 0x584000
	253 Move X19, [X19+184]
	254 Move X0, X31
	255 Call ProjectOnPlane_0000092A$BurstDirectCall.Initialize
	256 Move X0, [X20]
	257 Move W8, [X0+224]
	258 Compare W8, 0
	259 JumpIfNotEqual {261}
	260 Call 0x1C17DFC
	261 Move X20, 0x584000
	262 Move X20, [X20+192]
	263 Move X0, X31
	264 Call ProjectOnPlane_0000092B$BurstDirectCall.Initialize
	265 Move X0, [X19]
	266 Move W8, [X0+224]
	267 Compare W8, 0
	268 JumpIfNotEqual {270}
	269 Call 0x1C17DFC
	270 Move X19, 0x584000
	271 Move X19, [X19+200]
	272 Move X0, X31
	273 Call LookRotationWithForwardProjectedOnPlane_0000092C$BurstDirectCall.Initialize
	274 Move X0, [X20]
	275 Move W8, [X0+224]
	276 Compare W8, 0
	277 JumpIfNotEqual {279}
	278 Call 0x1C17DFC
	279 Move X20, 0x584000
	280 Move X20, [X20+208]
	281 Move X0, X31
	282 Call LookRotationWithForwardProjectedOnPlane_0000092D$BurstDirectCall.Initialize
	283 Move X0, [X19]
	284 Move W8, [X0+224]
	285 Compare W8, 0
	286 JumpIfNotEqual {288}
	287 Call 0x1C17DFC
	288 Move X19, 0x584000
	289 Move X19, [X19+216]
	290 Move X0, X31
	291 Call Angle_0000092E$BurstDirectCall.Initialize
	292 Move X0, [X20]
	293 Move W8, [X0+224]
	294 Compare W8, 0
	295 JumpIfNotEqual {297}
	296 Call 0x1C17DFC
	297 Move X20, 0x584000
	298 Move X20, [X20+224]
	299 Move X0, X31
	300 Call FastVectorEquals_0000092F$BurstDirectCall.Initialize
	301 Move X0, [X19]
	302 Move W8, [X0+224]
	303 Compare W8, 0
	304 JumpIfNotEqual {306}
	305 Call 0x1C17DFC
	306 Move X19, 0x584000
	307 Move X19, [X19+232]
	308 Move X0, X31
	309 Call FastVectorEquals_00000930$BurstDirectCall.Initialize
	310 Move X0, [X20]
	311 Move W8, [X0+224]
	312 Compare W8, 0
	313 JumpIfNotEqual {315}
	314 Call 0x1C17DFC
	315 Move X20, 0x584000
	316 Move X20, [X20+240]
	317 Move X0, X31
	318 Call FastSafeDivide_00000931$BurstDirectCall.Initialize
	319 Move X0, [X19]
	320 Move W8, [X0+224]
	321 Compare W8, 0
	322 JumpIfNotEqual {324}
	323 Call 0x1C17DFC
	324 Move X19, 0x584000
	325 Move X19, [X19+248]
	326 Move X0, X31
	327 Call FastSafeDivide_00000932$BurstDirectCall.Initialize
	328 Move X0, [X20]
	329 Move W8, [X0+224]
	330 Compare W8, 0
	331 JumpIfNotEqual {333}
	332 Call 0x1C17DFC
	333 Move X20, 0x584000
	334 Move X20, [X20+256]
	335 Move X0, X31
	336 Call Scale_00000933$BurstDirectCall.Initialize
	337 Move X0, [X19]
	338 Move W8, [X0+224]
	339 Compare W8, 0
	340 JumpIfNotEqual {342}
	341 Call 0x1C17DFC
	342 Move X19, 0x584000
	343 Move X19, [X19+648]
	344 Move X0, X31
	345 Call Scale_00000934$BurstDirectCall.Initialize
	346 Move X0, [X20]
	347 Move W8, [X0+224]
	348 Compare W8, 0
	349 JumpIfNotEqual {351}
	350 Call 0x1C17DFC
	351 Move X20, 0x584000
	352 Move X20, [X20+656]
	353 Move X0, X31
	354 Call Orthogonal_00000936$BurstDirectCall.Initialize
	355 Move X0, [X19]
	356 Move W8, [X0+224]
	357 Compare W8, 0
	358 JumpIfNotEqual {360}
	359 Call 0x1C17DFC
	360 Move X19, 0x584000
	361 Move X19, [X19+664]
	362 Move X0, X31
	363 Call GetSphereOverlapParameters_00000937$BurstDirectCall.Initialize
	364 Move X0, [X20]
	365 Move W8, [X0+224]
	366 Compare W8, 0
	367 JumpIfNotEqual {369}
	368 Call 0x1C17DFC
	369 Move X20, 0x584000
	370 Move X20, [X20+1440]
	371 Move X0, X31
	372 Call GetConecastParameters_00000938$BurstDirectCall.Initialize
	373 Move X0, [X19]
	374 Move W8, [X0+224]
	375 Compare W8, 0
	376 JumpIfNotEqual {378}
	377 Call 0x1C17DFC
	378 Move X19, 0x584000
	379 Move X19, [X19+1528]
	380 Move X0, X31
	381 Call GetConecastOffset_00000939$BurstDirectCall.Initialize
	382 Move X0, [X20]
	383 Move W8, [X0+224]
	384 Compare W8, 0
	385 JumpIfNotEqual {387}
	386 Call 0x1C17DFC
	387 Move X20, 0x584000
	388 Move X20, [X20+1488]
	389 Move X0, X31
	390 Call ComputeNewTweenTarget_000009C6$BurstDirectCall.Initialize
	391 Move X0, [X19]
	392 Move W8, [X0+224]
	393 Compare W8, 0
	394 JumpIfNotEqual {396}
	395 Call 0x1C17DFC
	396 Move X19, 0x584000
	397 Move X19, [X19+1656]
	398 Move X0, X31
	399 Call ComputeNewTweenTarget_000009D2$BurstDirectCall.Initialize
	400 Move X0, [X20]
	401 Move W8, [X0+224]
	402 Compare W8, 0
	403 JumpIfNotEqual {405}
	404 Call 0x1C17DFC
	405 Move X20, 0x584000
	406 Move X20, [X20+1664]
	407 Move X0, X31
	408 Call IsNewTargetWithinThreshold_000009D3$BurstDirectCall.Initialize
	409 Move X0, [X19]
	410 Move W8, [X0+224]
	411 Compare W8, 0
	412 JumpIfNotEqual {414}
	413 Call 0x1C17DFC
	414 Move X19, 0x584000
	415 Move X19, [X19+1672]
	416 Move X0, X31
	417 Call SampleQuadraticBezierPoint_000009F3$BurstDirectCall.Initialize
	418 Move X0, [X20]
	419 Move W8, [X0+224]
	420 Compare W8, 0
	421 JumpIfNotEqual {423}
	422 Call 0x1C17DFC
	423 Move X20, 0x584000
	424 Move X20, [X20+1680]
	425 Move X0, X31
	426 Call SampleCubicBezierPoint_000009F4$BurstDirectCall.Initialize
	427 Move X0, [X19]
	428 Move W8, [X0+224]
	429 Compare W8, 0
	430 JumpIfNotEqual {432}
	431 Call 0x1C17DFC
	432 Move X19, 0x584000
	433 Move X19, [X19+1688]
	434 Move X0, X31
	435 Call ElevateQuadraticToCubicBezier_000009F5$BurstDirectCall.Initialize
	436 Move X0, [X20]
	437 Move W8, [X0+224]
	438 Compare W8, 0
	439 JumpIfNotEqual {441}
	440 Call 0x1C17DFC
	441 Move X20, 0x584000
	442 Move X20, [X20+1696]
	443 Move X0, X31
	444 Call GenerateCubicBezierCurve_000009F6$BurstDirectCall.Initialize
	445 Move X0, [X19]
	446 Move W8, [X0+224]
	447 Compare W8, 0
	448 JumpIfNotEqual {450}
	449 Call 0x1C17DFC
	450 Move X19, 0x584000
	451 Move X19, [X19+3576]
	452 Move X0, X31
	453 Call SampleProjectilePoint_000009F7$BurstDirectCall.Initialize
	454 Move X0, [X20]
	455 Move W8, [X0+224]
	456 Compare W8, 0
	457 JumpIfNotEqual {459}
	458 Call 0x1C17DFC
	459 Move X20, 0x584000
	460 Move X20, [X20+3584]
	461 Move X0, X31
	462 Call CalculateProjectileFlightTime_000009F8$BurstDirectCall.Initialize
	463 Move X0, [X19]
	464 Move W8, [X0+224]
	465 Compare W8, 0
	466 JumpIfNotEqual {468}
	467 Call 0x1C17DFC
	468 Move X19, 0x584000
	469 Move X19, [X19+3592]
	470 Move X0, X31
	471 Call ComputeNewObjectPosition_00000BF7$BurstDirectCall.Initialize
	472 Move X0, [X20]
	473 Move W8, [X0+224]
	474 Compare W8, 0
	475 JumpIfNotEqual {477}
	476 Call 0x1C17DFC
	477 Move X20, 0x584000
	478 Move X20, [X20+3600]
	479 Move X0, X31
	480 Call AdjustPositionForPermittedAxesBurst_00000BFB$BurstDirectCall.Initialize
	481 Move X0, [X19]
	482 Move W8, [X0+224]
	483 Compare W8, 0
	484 JumpIfNotEqual {486}
	485 Call 0x1C17DFC
	486 Move X19, 0x584000
	487 Move X19, [X19+3752]
	488 Move X0, X31
	489 Call ComputeNewOneHandedScale_00000BFD$BurstDirectCall.Initialize
	490 Move X0, [X20]
	491 Move W8, [X0+224]
	492 Compare W8, 0
	493 JumpIfNotEqual {495}
	494 Call 0x1C17DFC
	495 Move X20, 0x584000
	496 Move X20, [X20+3776]
	497 Move X0, X31
	498 Call ComputeNewTwoHandedScale_00000BFE$BurstDirectCall.Initialize
	499 Move X0, [X19]
	500 Move W8, [X0+224]
	501 Compare W8, 0
	502 JumpIfNotEqual {504}
	503 Call 0x1C17DFC
	504 Move X19, 0x584000
	505 Move X19, [X19+3744]
	506 Move X0, X31
	507 Call FastCalculateRadiusOffset_00000C20$BurstDirectCall.Initialize
	508 Move X0, [X20]
	509 Move W8, [X0+224]
	510 Compare W8, 0
	511 JumpIfNotEqual {513}
	512 Call 0x1C17DFC
	513 Move X20, 0x584000
	514 Move X20, [X20+3768]
	515 Move X0, X31
	516 Call FastComputeNewTrackedPose_00000C21$BurstDirectCall.Initialize
	517 Move X0, [X19]
	518 Move W8, [X0+224]
	519 Compare W8, 0
	520 JumpIfNotEqual {522}
	521 Call 0x1C17DFC
	522 Move X19, 0x585000
	523 Move X19, [X19+912]
	524 Move X0, X31
	525 Call IsWithinRadius_00000C22$BurstDirectCall.Initialize
	526 Move X0, [X20]
	527 Move W8, [X0+224]
	528 Compare W8, 0
	529 JumpIfNotEqual {531}
	530 Call 0x1C17DFC
	531 Move X20, 0x585000
	532 Move X20, [X20+920]
	533 Move X0, X31
	534 Call CalculateScaleToFit_00000C23$BurstDirectCall.Initialize
	535 Move X0, [X19]
	536 Move W8, [X0+224]
	537 Compare W8, 0
	538 JumpIfNotEqual {540}
	539 Call 0x1C17DFC
	540 Move X19, 0x585000
	541 Move X19, [X19+936]
	542 Move X0, X31
	543 Call StabilizeTransform_00000D3D$BurstDirectCall.Initialize
	544 Move X0, [X20]
	545 Move W8, [X0+224]
	546 Compare W8, 0
	547 JumpIfNotEqual {549}
	548 Call 0x1C17DFC
	549 Move X20, 0x585000
	550 Move X20, [X20+944]
	551 Move X0, X31
	552 Call StabilizePosition_00000D3E$BurstDirectCall.Initialize
	553 Move X0, [X19]
	554 Move W8, [X0+224]
	555 Compare W8, 0
	556 JumpIfNotEqual {558}
	557 Call 0x1C17DFC
	558 Move X19, 0x585000
	559 Move X19, [X19+928]
	560 Move X0, X31
	561 Call StabilizeOptimalRotation_00000D3F$BurstDirectCall.Initialize
	562 Move X0, [X20]
	563 Move W8, [X0+224]
	564 Compare W8, 0
	565 JumpIfNotEqual {567}
	566 Call 0x1C17DFC
	567 Move X0, X31
	568 Call CalculateStabilizedLerp_00000D40$BurstDirectCall.Initialize
	569 Move X0, [X19]
	570 Move W8, [X0+224]
	571 Compare W8, 0
	572 JumpIfNotEqual {574}
	573 Call 0x1C17DFC
	574 Move X20, [X31+16]
	575 Move X19, [X31+24]
	576 Move X0, X31
	577 Move X30, [X31+32]
	578 Call CalculateRotationParams_00000D41$BurstDirectCall.Initialize
	579 Return 
	580 Move X1, X0
	581 Move W2, 120
	582 Move X0, X8
	583 Call 0x3EB2AC0
	584 Return 
	585 Move W0, [X0+120]
	586 Return 
	587 Move V0, [X0+124]
	588 Return 
	589 Move V1, [X0+32]
	590 Move V0, [X0+48]
	591 Move V3, [X0]
	592 Move V2, [X0+16]
	593 Move [X8+32], V1
	594 Move [X8+40], V0
	595 Move [X8], V3
	596 Move [X8+8], V2
	597 Return 
	598 Move X1, X0
	599 Move W2, 88
	600 Move X0, X8
	601 Call 0x3EB2AC0
	602 Return 
	603 Move X1, X0
	604 Move W2, 96
	605 Move X0, X8
	606 Call 0x3EB2AC0
	607 Return 
	608 Move X1, X0
	609 Move W2, 120
	610 Move X0, X8
	611 Call 0x3EB2AC0
	612 Return 

