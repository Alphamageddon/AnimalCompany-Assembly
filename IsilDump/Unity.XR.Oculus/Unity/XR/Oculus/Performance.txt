Type: Unity.XR.Oculus.Performance

Method: System.Boolean TrySetCPULevel(System.Int32 level)

Disassembly:
	0x03BDD2E8 BL 0x1C16DFC
	0x03BDD2EC BL 0x3BDC620
	0x03BDD2F0 LDR X1, [X19]
	0x03BDD2F4 ADD X2, X31, 0xC
	0x03BDD2F8 MOV X3, X31
	0x03BDD2FC BL 0x3E66F20

ISIL:
	001 Move [X31-16], X30
	002 Call Internal.SetCPULevel, X0
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Move X30, [X31+16]
	006 Return X0

Method: System.Boolean TrySetGPULevel(System.Int32 level)

Disassembly:
	0x03BDD304 LDP X20, X19, [X31 + 0x10]
	0x03BDD308 LDR X30, [X31], #0x20
	0x03BDD30C RET
	0x03BDD310 STR X30, [X31 - 0x20]!
	0x03BDD314 STP X20, X19, [X31 + 0x10]
	0x03BDD318 ADRP X20, 0x805000

ISIL:
	001 Move [X31-16], X30
	002 Call Internal.SetGPULevel, X0
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Move X30, [X31+16]
	006 Return X0

Method: System.Boolean TryGetAvailableDisplayRefreshRates(out System.Single[] refreshRates)

Disassembly:
	0x03BDD320 LDRB W8, [X20 + 0xEFD]
	0x03BDD324 LDR X19, [X19 + 0x30]
	0x03BDD328 TBNZ X8, 0x0, 0x3BDD34C
	0x03BDD32C ADRP X0, 0x581000
	0x03BDD330 LDR X0, [X0 + 0x30]
	0x03BDD334 BL 0x1C16CF4
	0x03BDD338 ADRP X0, 0x581000
	0x03BDD33C LDR X0, [X0 + 0xB8]
	0x03BDD340 BL 0x1C16CF4
	0x03BDD344 MOVZ W8, 0x1
	0x03BDD348 STRB W8, [X20 + 0xEFD]
	0x03BDD34C LDR X0, [X19]
	0x03BDD350 STR W31, [X31 + 0xC]
	0x03BDD354 ADRP X19, 0x581000
	0x03BDD358 LDR W8, [X0 + 0xE0]
	0x03BDD35C LDR X19, [X19 + 0xB8]
	0x03BDD360 CBNZ W8, 0x3BDD368
	0x03BDD364 BL 0x1C16DFC
	0x03BDD368 BL 0x3BDC620
	0x03BDD36C LDR X1, [X19]
	0x03BDD370 ADD X2, X31, 0xC
	0x03BDD374 MOV X3, X31
	0x03BDD378 BL 0x3E66F20
	0x03BDD37C LDR V0, [X31 + 0xC]
	0x03BDD380 LDP X20, X19, [X31 + 0x10]
	0x03BDD384 LDR X30, [X31], #0x20
	0x03BDD388 RET
	0x03BDD38C STR X30, [X31 - 0x20]!
	0x03BDD390 STP X20, X19, [X31 + 0x10]
	0x03BDD394 ADRP X20, 0x805000
	0x03BDD398 ADRP X19, 0x581000
	0x03BDD39C LDRB W8, [X20 + 0xEFE]
	0x03BDD3A0 LDR X19, [X19 + 0x30]
	0x03BDD3A4 TBNZ X8, 0x0, 0x3BDD3C8
	0x03BDD3A8 ADRP X0, 0x581000
	0x03BDD3AC LDR X0, [X0 + 0x30]
	0x03BDD3B0 BL 0x1C16CF4
	0x03BDD3B4 ADRP X0, 0x581000
	0x03BDD3B8 LDR X0, [X0 + 0xC0]
	0x03BDD3BC BL 0x1C16CF4
	0x03BDD3C0 MOVZ W8, 0x1
	0x03BDD3C4 STRB W8, [X20 + 0xEFE]
	0x03BDD3C8 LDR X0, [X19]
	0x03BDD3CC STR W31, [X31 + 0xC]
	0x03BDD3D0 ADRP X19, 0x581000
	0x03BDD3D4 LDR W8, [X0 + 0xE0]
	0x03BDD3D8 LDR X19, [X19 + 0xC0]
	0x03BDD3DC CBNZ W8, 0x3BDD3E4
	0x03BDD3E0 BL 0x1C16DFC
	0x03BDD3E4 BL 0x3BDC620
	0x03BDD3E8 LDR X1, [X19]
	0x03BDD3EC ADD X2, X31, 0xC
	0x03BDD3F0 MOV X3, X31
	0x03BDD3F4 BL 0x3E66F20
	0x03BDD3F8 LDR V0, [X31 + 0xC]
	0x03BDD3FC LDP X20, X19, [X31 + 0x10]
	0x03BDD400 LDR X30, [X31], #0x20
	0x03BDD404 RET
	0x03BDD408 AND W0, W0, 0x1
	0x03BDD40C B 0x3BDDC20
	0x03BDD410 AND W0, W0, 0x1
	0x03BDD414 B 0x3BDDC20
	0x03BDD418 STR X30, [X31 - 0x20]!
	0x03BDD41C STP X20, X19, [X31 + 0x10]
	0x03BDD420 ADRP X20, 0x805000
	0x03BDD424 ADRP X19, 0x581000
	0x03BDD428 LDRB W8, [X20 + 0xEFF]
	0x03BDD42C LDR X19, [X19 + 0x30]
	0x03BDD430 TBNZ X8, 0x0, 0x3BDD454
	0x03BDD434 ADRP X0, 0x581000
	0x03BDD438 LDR X0, [X0 + 0x30]
	0x03BDD43C BL 0x1C16CF4
	0x03BDD440 ADRP X0, 0x581000
	0x03BDD444 LDR X0, [X0 + 0xC8]
	0x03BDD448 BL 0x1C16CF4
	0x03BDD44C MOVZ W8, 0x1
	0x03BDD450 STRB W8, [X20 + 0xEFF]
	0x03BDD454 LDR X0, [X19]
	0x03BDD458 STR W31, [X31 + 0xC]
	0x03BDD45C ADRP X19, 0x581000
	0x03BDD460 LDR W8, [X0 + 0xE0]
	0x03BDD464 LDR X19, [X19 + 0xC8]
	0x03BDD468 CBNZ W8, 0x3BDD470
	0x03BDD46C BL 0x1C16DFC
	0x03BDD470 BL 0x3BDC620
	0x03BDD474 LDR X1, [X19]
	0x03BDD478 ADD X2, X31, 0xC
	0x03BDD47C MOV X3, X31
	0x03BDD480 BL 0x3E66F20
	0x03BDD484 LDR V0, [X31 + 0xC]
	0x03BDD488 LDP X20, X19, [X31 + 0x10]
	0x03BDD48C LDR X30, [X31], #0x20
	0x03BDD490 RET
	0x03BDD494 STR X30, [X31 - 0x20]!
	0x03BDD498 STP X20, X19, [X31 + 0x10]
	0x03BDD49C ADRP X20, 0x805000
	0x03BDD4A0 ADRP X19, 0x581000
	0x03BDD4A4 LDRB W8, [X20 + 0xF00]
	0x03BDD4A8 LDR X19, [X19 + 0x30]
	0x03BDD4AC TBNZ X8, 0x0, 0x3BDD4D0
	0x03BDD4B0 ADRP X0, 0x581000
	0x03BDD4B4 LDR X0, [X0 + 0x30]
	0x03BDD4B8 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x806000
	009 Move X23, 0x582000
	010 Move W8, [X20+3816]
	011 Move X23, [X23+40]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x53F000
	018 Move X0, [X0+2128]
	019 Call 0x1C17CF4
	020 Move X0, 0x582000
	021 Move X0, [X0+40]
	022 Call 0x1C17CF4
	023 Move X0, 0x517000
	024 Move X0, [X0+1592]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+3816], W8
	028 Move X8, [X23]
	029 Move [X31+12], W31
	030 Move X8, [X8+184]
	031 Move X8, [X8]
	032 Compare X8, 0
	033 JumpIfEqual {37}
	034 Move X8, [X8+24]
	035 Compare X8, 0
	036 JumpIfNotEqual {104}
	037 Move X21, 0x517000
	038 Move X21, [X21+1592]
	039 Move W1, W31
	040 Move X0, [X21]
	041 Call 0x1C17D6C
	042 Move X8, [X23]
	043 Add X1, X31, 12
	044 Move X8, [X8+184]
	045 Move [X8], X0
	046 Move X0, X31
	047 Move [X31+12], W31
	048 Call Internal.GetDisplayAvailableFrequencies, X0, X1
	049 Move W20, [X31+12]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {104}
	055 Move X24, 0x53F000
	056 Move X24, [X24+2128]
	057 Move X0, [X24]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move W0, W20
	063 ShiftRight W0, 30
	064 And W0, W0, 0x1FFFFFFF
	065 Move X1, X31
	066 Call Marshal.AllocHGlobal, X0
	067 Add X1, X31, 12
	068 Move X20, X0
	069 Call Internal.GetDisplayAvailableFrequencies, X0, X1
	070 Move W1, [X31+12]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {96}
	076 Move X0, [X21]
	077 Call 0x1C17D6C
	078 Move X8, [X23]
	079 Move X8, [X8+184]
	080 Move [X8], X0
	081 Move X8, [X23]
	082 Move X0, [X24]
	083 Move W21, [X31+12]
	084 Move X8, [X8+184]
	085 Move W9, [X0+224]
	086 Move X22, [X8]
	087 Compare W9, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X0, X20
	091 Move X1, X22
	092 Move W2, W31
	093 Move W3, W21
	094 Move X4, X31
	095 Call Marshal.Copy, X0, X1, X2, X3
	096 Move X0, [X24]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Move X0, X20
	102 Move X1, X31
	103 Call Marshal.FreeHGlobal, X0
	104 Move X8, [X23]
	105 Move X8, [X8+184]
	106 Move X8, [X8]
	107 Move [X19], X8
	108 Move X8, [X23]
	109 Move X8, [X8+184]
	110 Move X8, [X8]
	111 Compare X8, 0
	112 JumpIfEqual {124}
	113 Move W8, [X8+24]
	114 Move X20, [X31+48]
	115 Move X19, [X31+56]
	116 Move X22, [X31+32]
	117 Move X21, [X31+40]
	118 Move X24, [X31+16]
	119 Move X23, [X31+24]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 NotImplemented "Instruction CSET not yet implemented."
	122 Move X30, [X31+64]
	123 Return X0
	124 Call 0x1C17F20

Method: System.Boolean TrySetDisplayRefreshRate(System.Single refreshRate)

Disassembly:
	0x03BDD4C0 LDR X0, [X0 + 0xD0]

ISIL:
	001 Call Internal.SetDisplayFrequency, V0
	002 Return X0

Method: System.Boolean TryGetDisplayRefreshRate(out System.Single refreshRate)

Disassembly:
	0x03BDD4C8 MOVZ W8, 0x1

ISIL:
	001 Call Internal.GetDisplayFrequency, X0
	002 Return X0

