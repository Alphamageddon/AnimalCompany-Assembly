Type: Unity.XR.Oculus.OculusRestarter

Method: System.Void .cctor()

Disassembly:
	0x03BDF604 STP X24, X23, [X31 + 0x20]
	0x03BDF608 STP X22, X21, [X31 + 0x30]
	0x03BDF60C STP X20, X19, [X31 + 0x40]
	0x03BDF610 ADRP X24, 0x804000
	0x03BDF614 ADRP X23, 0x57F000
	0x03BDF618 ADRP X20, 0x57C000
	0x03BDF61C ADRP X19, 0x519000
	0x03BDF620 ADRP X22, 0x57F000
	0x03BDF624 ADRP X21, 0x57F000
	0x03BDF628 LDRB W8, [X24 + 0x6]
	0x03BDF62C LDR X23, [X23 + 0x168]
	0x03BDF630 LDR X20, [X20 + 0xFA8]
	0x03BDF634 LDR X19, [X19 + 0x478]
	0x03BDF638 LDR X22, [X22 + 0x170]
	0x03BDF63C LDR X21, [X21 + 0x178]
	0x03BDF640 TBNZ X8, 0x0, 0x3BDF688
	0x03BDF644 ADRP X0, 0x57C000
	0x03BDF648 LDR X0, [X0 + 0xFA8]
	0x03BDF64C BL 0x1C16CF4
	0x03BDF650 ADRP X0, 0x519000
	0x03BDF654 LDR X0, [X0 + 0x478]
	0x03BDF658 BL 0x1C16CF4
	0x03BDF65C ADRP X0, 0x57F000
	0x03BDF660 LDR X0, [X0 + 0x170]
	0x03BDF664 BL 0x1C16CF4
	0x03BDF668 ADRP X0, 0x57F000
	0x03BDF66C LDR X0, [X0 + 0x168]
	0x03BDF670 BL 0x1C16CF4
	0x03BDF674 ADRP X0, 0x57F000
	0x03BDF678 LDR X0, [X0 + 0x178]
	0x03BDF67C BL 0x1C16CF4
	0x03BDF680 MOVZ W8, 0x1
	0x03BDF684 STRB W8, [X24 + 0x6]
	0x03BDF688 LDR X1, [X23]
	0x03BDF68C LDR X2, [X20]
	0x03BDF690 ADD X0, X31, 0x18
	0x03BDF694 STR X31, [X31 + 0x18]
	0x03BDF698 BL 0x2E0D4D8
	0x03BDF69C LDR X8, [X19]
	0x03BDF6A0 LDR X9, [X31 + 0x18]
	0x03BDF6A4 ADD X0, X31, 0x8
	0x03BDF6A8 LDR X8, [X8 + 0xB8]
	0x03BDF6AC STR X9, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x804000
	006 Move X20, 0x580000
	007 Move X19, 0x580000
	008 Move W8, [X21+4088]
	009 Move X20, [X20+256]
	010 Move X19, [X19+264]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x580000
	016 Move X0, [X0+264]
	017 Call 0x1C17CF4
	018 Move X0, 0x580000
	019 Move X0, [X0+256]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+4088], W8
	023 Move X8, [X19]
	024 Move X9, [X20]
	025 Move X20, 0x805000
	026 Move X8, [X8+184]
	027 Move [X8], X9
	028 Move X0, [X19]
	029 Move X8, [X0+184]
	030 Move [X8+8], X31
	031 Move [X8+16], W31
	032 Move W8, [X20+16]
	033 Compare W8, 0
	034 JumpIfNotEqual {40}
	035 Move X0, X19
	036 Call 0x1C17CF4
	037 Move X0, [X19]
	038 Move W8, 1
	039 Move [X20+16], W8
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {45}
	043 Call 0x1C17DFC
	044 Move X0, [X19]
	045 Move X8, [X0+184]
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move W9, 0x40A00000
	049 Move [X8+20], W9
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Return 

Method: System.Void ResetCallbacks()

Disassembly:
	0x03BDF6B0 LDR X1, [X22]
	0x03BDF6B4 LDR X2, [X20]
	0x03BDF6B8 STR X31, [X31 + 0x8]
	0x03BDF6BC BL 0x2E0D4D8
	0x03BDF6C0 LDR X8, [X19]
	0x03BDF6C4 LDR X9, [X31 + 0x8]
	0x03BDF6C8 ADD X0, X31, 0x0
	0x03BDF6CC LDR X8, [X8 + 0xB8]
	0x03BDF6D0 STR X9, [X8 + 0x8]
	0x03BDF6D4 LDR X1, [X21]
	0x03BDF6D8 LDR X2, [X20]
	0x03BDF6DC STR X31, [X31]
	0x03BDF6E0 BL 0x2E0D4D8
	0x03BDF6E4 LDR X8, [X19]
	0x03BDF6E8 LDR X9, [X31]
	0x03BDF6EC LDP X20, X19, [X31 + 0x40]
	0x03BDF6F0 LDP X22, X21, [X31 + 0x30]
	0x03BDF6F4 LDR X8, [X8 + 0xB8]
	0x03BDF6F8 LDP X24, X23, [X31 + 0x20]
	0x03BDF6FC LDR X30, [X31 + 0x10]
	0x03BDF700 STR X9, [X8 + 0x10]
	0x03BDF704 ADD X31, X31, 0x50
	0x03BDF708 RET
	0x03BDF70C STR X30, [X31 - 0x10]!
	0x03BDF710 BL 0x3BDAF40

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x804000
	006 Move X20, 0x580000
	007 Move W8, [X21+4089]
	008 Move X20, [X20+264]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x580000
	015 Move X0, [X0+264]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+4089], W8
	019 NotImplemented "Instruction MOVI not yet implemented."
	020 Move [X19+32], V0
	021 Move [X19+40], V0
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move [X8+16], W31
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return 

Method: System.Boolean get_isRunning()

Disassembly:
	0x03BDF714 LDR X30, [X31], #0x10
	0x03BDF718 B 0x3BDF524
	0x03BDF71C LDR X0, [X0 + 0x1C0]
	0x03BDF720 RET

ISIL:
	001 Move X8, [X0+64]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Single get_TimeBetweenRestartAttempts()

Disassembly:
	0x03BDF724 STR X1, [X0 + 0x1C0]
	0x03BDF728 RET
	0x03BDF72C LDR X0, [X0 + 0x1C8]
	0x03BDF730 RET
	0x03BDF734 STR X1, [X0 + 0x1C8]
	0x03BDF738 RET
	0x03BDF73C LDR X0, [X0 + 0x1D0]
	0x03BDF740 RET
	0x03BDF744 STR X1, [X0 + 0x1D0]
	0x03BDF748 RET
	0x03BDF74C LDR X0, [X0 + 0x1D8]
	0x03BDF750 RET
	0x03BDF754 STR X1, [X0 + 0x1D8]
	0x03BDF758 RET
	0x03BDF75C LDR X0, [X0 + 0x1E0]
	0x03BDF760 RET
	0x03BDF764 STR X1, [X0 + 0x1E0]
	0x03BDF768 RET
	0x03BDF76C LDR X0, [X0 + 0x1E8]
	0x03BDF770 RET
	0x03BDF774 STR X1, [X0 + 0x1E8]
	0x03BDF778 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x804000
	005 Move X19, 0x580000
	006 Move W8, [X20+4090]
	007 Move X19, [X19+264]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x580000
	013 Move X0, [X0+264]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+4090], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move V0, [X8+20]
	027 Move X30, [X31+32]
	028 Return V0

Method: System.Void set_TimeBetweenRestartAttempts(System.Single value)

Disassembly:
	0x03BDF77C LDR X0, [X0 + 0x1F0]
	0x03BDF780 RET
	0x03BDF784 STR X1, [X0 + 0x1F0]
	0x03BDF788 RET
	0x03BDF78C LDR X0, [X0 + 0x1F8]
	0x03BDF790 RET
	0x03BDF794 STR X1, [X0 + 0x1F8]
	0x03BDF798 RET
	0x03BDF79C LDR X0, [X0 + 0x200]
	0x03BDF7A0 RET
	0x03BDF7A4 STR X1, [X0 + 0x200]
	0x03BDF7A8 RET
	0x03BDF7AC LDR X0, [X0 + 0x208]
	0x03BDF7B0 RET
	0x03BDF7B4 STR X1, [X0 + 0x208]
	0x03BDF7B8 RET
	0x03BDF7BC LDR X0, [X0 + 0x210]
	0x03BDF7C0 RET
	0x03BDF7C4 STR X1, [X0 + 0x210]
	0x03BDF7C8 RET
	0x03BDF7CC LDR X0, [X0 + 0x218]
	0x03BDF7D0 RET
	0x03BDF7D4 STR X1, [X0 + 0x218]
	0x03BDF7D8 RET
	0x03BDF7DC LDR X0, [X0 + 0x220]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x804000
	006 Move X19, 0x580000
	007 Move W8, [X20+4091]
	008 Move X19, [X19+264]
	009 Move V8, V0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x580000
	015 Move X0, [X0+264]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+4091], W8
	019 Move X0, [X19]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X19]
	025 Move X8, [X0+184]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+8]
	029 Move [X8+20], S8
	030 Move V8, [X31+32]
	031 Return 

Method: System.Int32 get_PauseAndRestartAttempts()

Disassembly:
	0x03BDF7E0 RET
	0x03BDF7E4 STR X1, [X0 + 0x220]
	0x03BDF7E8 RET
	0x03BDF7EC LDR X0, [X0 + 0x228]
	0x03BDF7F0 RET
	0x03BDF7F4 STR X1, [X0 + 0x228]
	0x03BDF7F8 RET
	0x03BDF7FC LDR X0, [X0 + 0x230]
	0x03BDF800 RET
	0x03BDF804 STR X1, [X0 + 0x230]
	0x03BDF808 RET
	0x03BDF80C LDR X0, [X0 + 0x238]
	0x03BDF810 RET
	0x03BDF814 STR X1, [X0 + 0x238]
	0x03BDF818 RET
	0x03BDF81C LDR X0, [X0 + 0x240]
	0x03BDF820 RET
	0x03BDF824 STR X1, [X0 + 0x240]
	0x03BDF828 RET
	0x03BDF82C LDR X0, [X0 + 0x248]
	0x03BDF830 RET
	0x03BDF834 STR X1, [X0 + 0x248]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x804000
	005 Move X19, 0x580000
	006 Move W8, [X20+4092]
	007 Move X19, [X19+264]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x580000
	013 Move X0, [X0+264]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+4092], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, [X8+16]
	027 Move X30, [X31+32]
	028 Return X0

Method: Unity.XR.Oculus.OculusRestarter get_Instance()

Disassembly:
	0x03BDF838 RET
	0x03BDF83C LDR X0, [X0 + 0x250]
	0x03BDF840 RET
	0x03BDF844 STR X1, [X0 + 0x250]
	0x03BDF848 RET
	0x03BDF84C LDR X0, [X0 + 0x258]
	0x03BDF850 RET
	0x03BDF854 STR X1, [X0 + 0x258]
	0x03BDF858 RET
	0x03BDF85C LDR X0, [X0 + 0x260]
	0x03BDF860 RET
	0x03BDF864 STR X1, [X0 + 0x260]
	0x03BDF868 RET
	0x03BDF86C LDR X0, [X0 + 0x268]
	0x03BDF870 RET
	0x03BDF874 STR X1, [X0 + 0x268]
	0x03BDF878 RET
	0x03BDF87C LDR X0, [X0 + 0x270]
	0x03BDF880 RET
	0x03BDF884 STR X1, [X0 + 0x270]
	0x03BDF888 RET
	0x03BDF88C STP X29, X30, [X31 - 0x60]!
	0x03BDF890 STP X28, X27, [X31 + 0x10]
	0x03BDF894 STP X26, X25, [X31 + 0x20]
	0x03BDF898 STP X24, X23, [X31 + 0x30]
	0x03BDF89C STP X22, X21, [X31 + 0x40]
	0x03BDF8A0 STP X20, X19, [X31 + 0x50]
	0x03BDF8A4 ADRP X22, 0x804000
	0x03BDF8A8 ADRP X21, 0x565000
	0x03BDF8AC ADRP X26, 0x565000
	0x03BDF8B0 ADRP X28, 0x568000
	0x03BDF8B4 ADRP X29, 0x567000
	0x03BDF8B8 ADRP X27, 0x569000
	0x03BDF8BC ADRP X25, 0x569000
	0x03BDF8C0 ADRP X20, 0x565000
	0x03BDF8C4 ADRP X24, 0x569000
	0x03BDF8C8 ADRP X23, 0x565000
	0x03BDF8CC LDR X21, [X21 + 0xEB8]
	0x03BDF8D0 LDR X26, [X26 + 0xE18]
	0x03BDF8D4 LDR X28, [X28 + 0xFF8]
	0x03BDF8D8 LDR X29, [X29 + 0x58]
	0x03BDF8DC LDR X27, [X27]
	0x03BDF8E0 LDR X25, [X25 + 0x8]
	0x03BDF8E4 LDR X20, [X20 + 0xDD0]
	0x03BDF8E8 LDR X24, [X24 + 0x10]
	0x03BDF8EC LDR X23, [X23 + 0xED8]
	0x03BDF8F0 LDRB W8, [X22 + 0x9]
	0x03BDF8F4 MOV X19, X0
	0x03BDF8F8 TBNZ X8, 0x0, 0x3BDFA48
	0x03BDF8FC ADRP X0, 0x565000
	0x03BDF900 LDR X0, [X0 + 0xE18]
	0x03BDF904 BL 0x1C16CF4
	0x03BDF908 ADRP X0, 0x567000
	0x03BDF90C LDR X0, [X0 + 0x58]
	0x03BDF910 BL 0x1C16CF4
	0x03BDF914 ADRP X0, 0x565000
	0x03BDF918 LDR X0, [X0 + 0xED8]
	0x03BDF91C BL 0x1C16CF4
	0x03BDF920 ADRP X0, 0x565000
	0x03BDF924 LDR X0, [X0 + 0xDD0]
	0x03BDF928 BL 0x1C16CF4
	0x03BDF92C ADRP X0, 0x57F000
	0x03BDF930 LDR X0, [X0 + 0x180]
	0x03BDF934 BL 0x1C16CF4
	0x03BDF938 ADRP X0, 0x565000
	0x03BDF93C LDR X0, [X0 + 0xE08]
	0x03BDF940 BL 0x1C16CF4
	0x03BDF944 ADRP X0, 0x569000
	0x03BDF948 LDR X0, [X0 + 0xD58]
	0x03BDF94C BL 0x1C16CF4
	0x03BDF950 ADRP X0, 0x57F000
	0x03BDF954 LDR X0, [X0 + 0x188]
	0x03BDF958 BL 0x1C16CF4
	0x03BDF95C ADRP X0, 0x565000
	0x03BDF960 LDR X0, [X0 + 0xDF8]
	0x03BDF964 BL 0x1C16CF4
	0x03BDF968 ADRP X0, 0x569000
	0x03BDF96C LDR X0, [X0]
	0x03BDF970 BL 0x1C16CF4
	0x03BDF974 ADRP X0, 0x565000
	0x03BDF978 LDR X0, [X0 + 0xDE8]
	0x03BDF97C BL 0x1C16CF4
	0x03BDF980 ADRP X0, 0x569000
	0x03BDF984 LDR X0, [X0 + 0x8]
	0x03BDF988 BL 0x1C16CF4
	0x03BDF98C ADRP X0, 0x57F000
	0x03BDF990 LDR X0, [X0 + 0x190]
	0x03BDF994 BL 0x1C16CF4
	0x03BDF998 ADRP X0, 0x569000
	0x03BDF99C LDR X0, [X0 + 0xD48]
	0x03BDF9A0 BL 0x1C16CF4
	0x03BDF9A4 ADRP X0, 0x565000
	0x03BDF9A8 LDR X0, [X0 + 0xDD8]
	0x03BDF9AC BL 0x1C16CF4
	0x03BDF9B0 ADRP X0, 0x569000
	0x03BDF9B4 LDR X0, [X0 + 0xD40]
	0x03BDF9B8 BL 0x1C16CF4
	0x03BDF9BC ADRP X0, 0x57F000
	0x03BDF9C0 LDR X0, [X0 + 0x198]
	0x03BDF9C4 BL 0x1C16CF4
	0x03BDF9C8 ADRP X0, 0x565000
	0x03BDF9CC LDR X0, [X0 + 0xEA0]
	0x03BDF9D0 BL 0x1C16CF4
	0x03BDF9D4 ADRP X0, 0x569000
	0x03BDF9D8 LDR X0, [X0 + 0xD60]
	0x03BDF9DC BL 0x1C16CF4
	0x03BDF9E0 ADRP X0, 0x569000
	0x03BDF9E4 LDR X0, [X0 + 0xD38]
	0x03BDF9E8 BL 0x1C16CF4
	0x03BDF9EC ADRP X0, 0x57F000
	0x03BDF9F0 LDR X0, [X0 + 0x1A0]
	0x03BDF9F4 BL 0x1C16CF4
	0x03BDF9F8 ADRP X0, 0x57F000
	0x03BDF9FC LDR X0, [X0 + 0x1A8]
	0x03BDFA00 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x804000
	006 Move X21, 0x580000
	007 Move W8, [X19+4093]
	008 Move X21, [X21+264]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0x580000
	014 Move X0, [X0+272]
	015 Call 0x1C17CF4
	016 Move X0, 0x580000
	017 Move X0, [X0+280]
	018 Call 0x1C17CF4
	019 Move X0, 0x515000
	020 Move X0, [X0+2648]
	021 Call 0x1C17CF4
	022 Move X0, 0x515000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move X0, 0x580000
	026 Move X0, [X0+264]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X19+4093], W8
	030 Move X0, [X21]
	031 Move X20, 0x515000
	032 Move W8, [X0+224]
	033 Move X20, [X20+1432]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X21]
	038 Move X8, [X20]
	039 Move X9, [X0+184]
	040 Move W10, [X8+224]
	041 Move X19, [X9+8]
	042 Compare W10, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X0, X19
	047 Move X1, X31
	048 Move X2, X31
	049 Call Object.op_Equality, X0, X1
	050 Move X8, [X21]
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {124}
	055 Move W9, [X8+224]
	056 Compare W9, 0
	057 JumpIfNotEqual {61}
	058 Move X0, X8
	059 Call 0x1C17DFC
	060 Move X8, [X21]
	061 Move X8, [X8+184]
	062 Move X1, X31
	063 Move X0, [X8]
	064 Call GameObject.Find, X0
	065 Move X8, [X20]
	066 Move X19, X0
	067 Move W9, [X8+224]
	068 Compare W9, 0
	069 JumpIfNotEqual {72}
	070 Move X0, X8
	071 Call 0x1C17DFC
	072 Move X0, X19
	073 Move X1, X31
	074 Move X2, X31
	075 Call Object.op_Equality, X0, X1
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {107}
	080 Move X0, [X21]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {86}
	084 Call 0x1C17DFC
	085 Move X0, [X21]
	086 Move X9, 0x515000
	087 Move X8, [X0+184]
	088 Move X9, [X9+2648]
	089 Move X20, [X8]
	090 Move X0, [X9]
	091 Call 0x1C17F10
	092 Move X1, X20
	093 Move X2, X31
	094 Move X19, X0
	095 Call GameObject..ctor, X0, X1
	096 Compare X19, 0
	097 JumpIfEqual {137}
	098 Move W1, 61
	099 Move X0, X19
	100 Move X2, X31
	101 Call Object.set_hideFlags, X0, X1
	102 Move X8, 0x580000
	103 Move X8, [X8+272]
	104 Move X0, X19
	105 Move X1, [X8]
	106 Call 0x21E61FC, X0
	107 Compare X19, 0
	108 JumpIfEqual {137}
	109 Move X8, 0x580000
	110 Move X8, [X8+280]
	111 Move X0, X19
	112 Move X1, [X8]
	113 Call 0x21E62E4, X0
	114 Move X8, [X21]
	115 Move X19, X0
	116 Move W9, [X8+224]
	117 Compare W9, 0
	118 JumpIfNotEqual {122}
	119 Move X0, X8
	120 Call 0x1C17DFC
	121 Move X8, [X21]
	122 Move X9, [X8+184]
	123 Move [X9+8], X19
	124 Move W9, [X8+224]
	125 Compare W9, 0
	126 JumpIfNotEqual {130}
	127 Move X0, X8
	128 Call 0x1C17DFC
	129 Move X8, [X21]
	130 Move X8, [X8+184]
	131 Move X20, [X31+16]
	132 Move X19, [X31+24]
	133 Move X0, [X8+8]
	134 Move X30, [X31+32]
	135 Move X21, [X31+40]
	136 Return X0
	137 Call 0x1C17F20

Method: System.Void PauseAndRestart()

Disassembly:
	0x03BDFA04 ADRP X0, 0x565000
	0x03BDFA08 LDR X0, [X0 + 0xEB8]
	0x03BDFA0C BL 0x1C16CF4
	0x03BDFA10 ADRP X0, 0x569000
	0x03BDFA14 LDR X0, [X0 + 0xD50]
	0x03BDFA18 BL 0x1C16CF4
	0x03BDFA1C ADRP X0, 0x569000
	0x03BDFA20 LDR X0, [X0 + 0x10]
	0x03BDFA24 BL 0x1C16CF4
	0x03BDFA28 ADRP X0, 0x57F000
	0x03BDFA2C LDR X0, [X0 + 0x1B0]
	0x03BDFA30 BL 0x1C16CF4
	0x03BDFA34 ADRP X0, 0x568000
	0x03BDFA38 LDR X0, [X0 + 0xFF8]
	0x03BDFA3C BL 0x1C16CF4
	0x03BDFA40 MOVZ W8, 0x1
	0x03BDFA44 STRB W8, [X22 + 0x9]
	0x03BDFA48 MOV X0, X19
	0x03BDFA4C MOV X1, X31
	0x03BDFA50 BL 0x37DB448
	0x03BDFA54 LDR X1, [X21]
	0x03BDFA58 LDR X2, [X26]
	0x03BDFA5C MOV X0, X19
	0x03BDFA60 BL 0x21FC754
	0x03BDFA64 STR X0, [X19 + 0x1C0]
	0x03BDFA68 LDR X1, [X28]
	0x03BDFA6C LDR X2, [X29]
	0x03BDFA70 MOV X0, X19
	0x03BDFA74 BL 0x21FC754
	0x03BDFA78 STR X0, [X19 + 0x1C8]
	0x03BDFA7C LDR X1, [X27]
	0x03BDFA80 LDR X2, [X26]
	0x03BDFA84 MOV X0, X19
	0x03BDFA88 BL 0x21FC754
	0x03BDFA8C STR X0, [X19 + 0x1D0]
	0x03BDFA90 LDR X1, [X25]
	0x03BDFA94 LDR X2, [X20]
	0x03BDFA98 MOV X0, X19
	0x03BDFA9C BL 0x21FC754
	0x03BDFAA0 STR X0, [X19 + 0x1D8]
	0x03BDFAA4 LDR X1, [X24]
	0x03BDFAA8 LDR X2, [X23]
	0x03BDFAAC MOV X0, X19
	0x03BDFAB0 BL 0x21FC754
	0x03BDFAB4 STR X0, [X19 + 0x1E0]
	0x03BDFAB8 ADRP X8, 0x565000
	0x03BDFABC LDR X8, [X8 + 0xDD8]
	0x03BDFAC0 LDR X2, [X20]
	0x03BDFAC4 MOV X0, X19
	0x03BDFAC8 LDR X1, [X8]
	0x03BDFACC BL 0x21FC754
	0x03BDFAD0 STR X0, [X19 + 0x1E8]
	0x03BDFAD4 ADRP X8, 0x565000
	0x03BDFAD8 LDR X8, [X8 + 0xEA0]
	0x03BDFADC LDR X2, [X20]
	0x03BDFAE0 MOV X0, X19
	0x03BDFAE4 LDR X1, [X8]
	0x03BDFAE8 BL 0x21FC754
	0x03BDFAEC STR X0, [X19 + 0x1F0]
	0x03BDFAF0 ADRP X8, 0x57F000
	0x03BDFAF4 LDR X8, [X8 + 0x1A8]
	0x03BDFAF8 LDR X2, [X20]
	0x03BDFAFC MOV X0, X19
	0x03BDFB00 LDR X1, [X8]
	0x03BDFB04 BL 0x21FC754
	0x03BDFB08 STR X0, [X19 + 0x1F8]
	0x03BDFB0C ADRP X8, 0x569000
	0x03BDFB10 LDR X8, [X8 + 0xD48]
	0x03BDFB14 LDR X2, [X20]
	0x03BDFB18 MOV X0, X19
	0x03BDFB1C LDR X1, [X8]
	0x03BDFB20 BL 0x21FC754

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x804000
	006 Move X20, 0x515000
	007 Move W8, [X21+4094]
	008 Move X20, [X20+2600]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x515000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x580000
	018 Move X0, [X0+264]
	019 Call 0x1C17CF4
	020 Move X0, 0x580000
	021 Move X0, [X0+288]
	022 Call 0x1C17CF4
	023 Move X0, 0x580000
	024 Move X0, [X0+296]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+4094], W8
	028 Move X0, [X20]
	029 Move X20, [X19+72]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfEqual {45}
	033 Compare X20, 0
	034 JumpIfEqual {48}
	035 Move X8, 0x580000
	036 Move X8, [X8+296]
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X1, X31
	040 Move X0, [X8]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Call Debug.LogError, X0
	044 Return 
	045 Call 0x1C17DFC
	046 Compare X20, 0
	047 JumpIfNotEqual {35}
	048 Move X8, 0x580000
	049 Move X8, [X8+288]
	050 Move X1, X31
	051 Move X0, [X8]
	052 Call Debug.Log, X0
	053 Move X20, 0x580000
	054 Move X20, [X20+264]
	055 Move X0, [X20]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X21, 0x805000
	061 Move W8, [X21+17]
	062 Compare W8, 0
	063 JumpIfNotEqual {69}
	064 Move X0, 0x580000
	065 Move X0, [X0+264]
	066 Call 0x1C17CF4
	067 Move W8, 1
	068 Move [X21+17], W8
	069 Move X0, [X20]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {75}
	073 Call 0x1C17DFC
	074 Move X0, [X20]
	075 Move X8, [X0+184]
	076 Move X0, X19
	077 Move V0, [X8+20]
	078 Call OculusRestarter.PauseAndRestartCoroutine, X0, V0
	079 Move X1, X0
	080 Move X0, X19
	081 Move X2, X31
	082 Call MonoBehaviour.StartCoroutine, X0, X1
	083 Move [X19+72], X0
	084 Move X20, [X31+16]
	085 Move X19, [X31+24]
	086 Move X30, [X31+32]
	087 Move X21, [X31+40]
	088 Return 

Method: System.Collections.IEnumerator PauseAndRestartCoroutine(System.Single pauseTimeInSeconds)

Disassembly:
	0x03BDFB24 STR X0, [X19 + 0x200]
	0x03BDFB28 ADRP X8, 0x569000
	0x03BDFB2C LDR X8, [X8 + 0xD50]
	0x03BDFB30 LDR X2, [X23]
	0x03BDFB34 MOV X0, X19
	0x03BDFB38 LDR X1, [X8]
	0x03BDFB3C BL 0x21FC754
	0x03BDFB40 STR X0, [X19 + 0x208]
	0x03BDFB44 ADRP X8, 0x565000
	0x03BDFB48 LDR X8, [X8 + 0xDE8]
	0x03BDFB4C LDR X2, [X20]
	0x03BDFB50 MOV X0, X19
	0x03BDFB54 LDR X1, [X8]
	0x03BDFB58 BL 0x21FC754
	0x03BDFB5C STR X0, [X19 + 0x210]
	0x03BDFB60 ADRP X8, 0x57F000
	0x03BDFB64 LDR X8, [X8 + 0x190]
	0x03BDFB68 LDR X2, [X20]
	0x03BDFB6C MOV X0, X19
	0x03BDFB70 LDR X1, [X8]
	0x03BDFB74 BL 0x21FC754
	0x03BDFB78 STR X0, [X19 + 0x218]
	0x03BDFB7C ADRP X8, 0x57F000
	0x03BDFB80 LDR X8, [X8 + 0x188]
	0x03BDFB84 LDR X2, [X20]
	0x03BDFB88 MOV X0, X19
	0x03BDFB8C LDR X1, [X8]
	0x03BDFB90 BL 0x21FC754

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x804000
	007 Move X21, 0x580000
	008 Move W8, [X20+4095]
	009 Move X21, [X21+304]
	010 Move V8, V0
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x580000
	017 Move X0, [X0+304]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+4095], W8
	021 Move X0, [X21]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X20, X0
	025 Call Object..ctor, X0
	026 Move [X20+16], W31
	027 Move [X20+40], X19
	028 Move [X20+32], S8
	029 Move X0, X20
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X30, [X31+16]
	033 Move X21, [X31+24]
	034 Move V8, [X31+48]
	035 Return X0

Method: System.Collections.IEnumerator RestartCoroutine(System.Boolean shouldRestart)

Disassembly:
	0x03BDFBBC LDR X2, [X23]
	0x03BDFBC0 MOV X0, X19
	0x03BDFBC4 LDR X1, [X8]
	0x03BDFBC8 BL 0x21FC754
	0x03BDFBCC STR X0, [X19 + 0x230]
	0x03BDFBD0 ADRP X8, 0x565000
	0x03BDFBD4 LDR X8, [X8 + 0xDF8]
	0x03BDFBD8 LDR X2, [X20]
	0x03BDFBDC MOV X0, X19
	0x03BDFBE0 LDR X1, [X8]
	0x03BDFBE4 BL 0x21FC754
	0x03BDFBE8 STR X0, [X19 + 0x238]
	0x03BDFBEC ADRP X8, 0x57F000
	0x03BDFBF0 LDR X8, [X8 + 0x1A0]
	0x03BDFBF4 LDR X2, [X20]
	0x03BDFBF8 MOV X0, X19
	0x03BDFBFC LDR X1, [X8]
	0x03BDFC00 BL 0x21FC754
	0x03BDFC04 STR X0, [X19 + 0x240]
	0x03BDFC08 ADRP X8, 0x57F000
	0x03BDFC0C LDR X8, [X8 + 0x1B0]
	0x03BDFC10 LDR X2, [X20]
	0x03BDFC14 MOV X0, X19
	0x03BDFC18 LDR X1, [X8]
	0x03BDFC1C BL 0x21FC754
	0x03BDFC20 STR X0, [X19 + 0x248]
	0x03BDFC24 ADRP X8, 0x569000
	0x03BDFC28 LDR X8, [X8 + 0xD38]
	0x03BDFC2C LDR X2, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x805000
	007 Move X21, 0x580000
	008 Move W8, [X22]
	009 Move X21, [X21+312]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x580000
	017 Move X0, [X0+312]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22], W8
	021 Move X0, [X21]
	022 And W21, W20, 1
	023 Call 0x1C17F10
	024 Move X1, X31
	025 Move X20, X0
	026 Call Object..ctor, X0
	027 Move [X20+16], W31
	028 Move [X20+32], X19
	029 Move [X20+40], W21
	030 Move X0, X20
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X30, [X31+48]
	036 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03BDFC58 STR X0, [X19 + 0x258]
	0x03BDFC5C ADRP X8, 0x565000

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

