Type: Unity.XR.Oculus.Stats/AdaptivePerformance

Method: System.Single get_GPUAppTime()

Disassembly:
	0x03BDD9CC ADRP X12, 0xFFFFFFFFFCF10000
	0x03BDD9D0 LDR V0, [X12 + 0x708]
	0x03BDD9D4 ADRP X8, 0xFFFFFFFFFCF17000
	0x03BDD9D8 ADRP X10, 0xFFFFFFFFFCF19000
	0x03BDD9DC ADD X8, X8, 0xB90
	0x03BDD9E0 MOVZ W9, 0xE
	0x03BDD9E4 ADD X10, X10, 0xA4A
	0x03BDD9E8 MOVZ W11, 0xF
	0x03BDD9EC ADD X0, X31, 0x0
	0x03BDD9F0 STR W31, [X31 + 0x28]
	0x03BDD9F4 STP X8, X9, [X31]
	0x03BDD9F8 STP X10, X11, [X31 + 0x10]
	0x03BDD9FC STR D0, [X31 + 0x20]
	0x03BDDA00 STRB W31, [X31 + 0x2C]
	0x03BDDA04 BL 0x1C1729C
	0x03BDDA08 STR X0, [X19 + 0xF28]
	0x03BDDA0C BLR X0
	0x03BDDA10 LDP X30, X19, [X31 + 0x30]
	0x03BDDA14 ADD X31, X31, 0x40
	0x03BDDA18 RET
	0x03BDDA1C SUB X31, X31, 0x70
	0x03BDDA20 STR X30, [X31 + 0x50]
	0x03BDDA24 STP X20, X19, [X31 + 0x60]
	0x03BDDA28 ADRP X20, 0x805000
	0x03BDDA2C LDR X8, [X20 + 0xF30]
	0x03BDDA30 MOV X19, X0
	0x03BDDA34 CBNZ X8, 0x3BDDA80
	0x03BDDA38 ADRP X12, 0xFFFFFFFFFCF10000
	0x03BDDA3C LDR V0, [X12 + 0x708]
	0x03BDDA40 ADRP X8, 0xFFFFFFFFFCF17000
	0x03BDDA44 ADRP X10, 0xFFFFFFFFFCF1B000
	0x03BDDA48 ADD X8, X8, 0xB90
	0x03BDDA4C MOVZ W9, 0xE
	0x03BDDA50 ADD X10, X10, 0x8E7
	0x03BDDA54 MOVZ W11, 0x16
	0x03BDDA58 MOVZ W13, 0x20
	0x03BDDA5C ADD X0, X31, 0x20
	0x03BDDA60 STP X8, X9, [X31 + 0x20]
	0x03BDDA64 STP X10, X11, [X31 + 0x30]
	0x03BDDA68 STR W13, [X31 + 0x48]
	0x03BDDA6C STR D0, [X31 + 0x40]
	0x03BDDA70 STRB W31, [X31 + 0x4C]
	0x03BDDA74 BL 0x1C1729C
	0x03BDDA78 MOV X8, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x806000
	005 Move X19, 0x582000
	006 Move W8, [X20+3820]
	007 Move X19, [X19+48]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x582000
	013 Move X0, [X0+48]
	014 Call 0x1C17CF4
	015 Move X0, 0x582000
	016 Move X0, [X0+80]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3820], W8
	020 Move X0, [X19]
	021 Move [X31+12], W31
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Call Stats.GetOculusDisplaySubsystem
	027 Compare X0, 0
	028 JumpIfEqual {49}
	029 Move X9, 0x582000
	030 Move X9, [X9+80]
	031 Move X8, [X0]
	032 Move X1, [X9]
	033 Move W10, [X8+304]
	034 Move W9, [X1+304]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X8, [X8+200]
	037 Add X8, X8, X9
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X1, X31, 12
	041 Move X2, X31
	042 Call XRDisplaySubsystem.TryGetAppGPUTimeLastFrame, X0, X1
	043 Move V0, [X31+12]
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Return V0
	048 Call 0x1C181E0
	049 Call 0x1C17F20

Method: System.Single get_GPUCompositorTime()

Disassembly:
	0x03BDDA7C STR X0, [X20 + 0xF30]
	0x03BDDA80 LDUR V0, [X19 + 0xE]
	0x03BDDA84 LDR V1, [X19]
	0x03BDDA88 ADD X0, X31, 0x0
	0x03BDDA8C STUR V0, [X31 + 0xE]
	0x03BDDA90 STR V1, [X31]
	0x03BDDA94 BLR X8
	0x03BDDA98 LDP X20, X19, [X31 + 0x60]
	0x03BDDA9C LDR X30, [X31 + 0x50]
	0x03BDDAA0 ADD X31, X31, 0x70
	0x03BDDAA4 RET
	0x03BDDAA8 SUB X31, X31, 0x50
	0x03BDDAAC STR X30, [X31 + 0x30]
	0x03BDDAB0 STP X20, X19, [X31 + 0x40]
	0x03BDDAB4 ADRP X20, 0x805000
	0x03BDDAB8 LDR X8, [X20 + 0xF38]
	0x03BDDABC MOV W19, W0
	0x03BDDAC0 CBNZ X8, 0x3BDDB0C
	0x03BDDAC4 ADRP X12, 0xFFFFFFFFFCF10000
	0x03BDDAC8 LDR V0, [X12 + 0x708]
	0x03BDDACC ADRP X8, 0xFFFFFFFFFCF17000
	0x03BDDAD0 ADRP X10, 0xFFFFFFFFFCF25000
	0x03BDDAD4 ADD X8, X8, 0xB90
	0x03BDDAD8 MOVZ W9, 0xE
	0x03BDDADC ADD X10, X10, 0x827
	0x03BDDAE0 MOVZ W11, 0xB
	0x03BDDAE4 MOVZ W13, 0x4
	0x03BDDAE8 ADD X0, X31, 0x0
	0x03BDDAEC STP X8, X9, [X31]
	0x03BDDAF0 STP X10, X11, [X31 + 0x10]
	0x03BDDAF4 STR W13, [X31 + 0x28]
	0x03BDDAF8 STR D0, [X31 + 0x20]
	0x03BDDAFC STRB W31, [X31 + 0x2C]
	0x03BDDB00 BL 0x1C1729C
	0x03BDDB04 MOV X8, X0
	0x03BDDB08 STR X0, [X20 + 0xF38]
	0x03BDDB0C MOV W0, W19
	0x03BDDB10 BLR X8
	0x03BDDB14 LDP X20, X19, [X31 + 0x40]
	0x03BDDB18 LDR X30, [X31 + 0x30]
	0x03BDDB1C ADD X31, X31, 0x50
	0x03BDDB20 RET
	0x03BDDB24 SUB X31, X31, 0x50
	0x03BDDB28 STR X30, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x806000
	005 Move X19, 0x582000
	006 Move W8, [X20+3821]
	007 Move X19, [X19+48]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x582000
	013 Move X0, [X0+48]
	014 Call 0x1C17CF4
	015 Move X0, 0x582000
	016 Move X0, [X0+80]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3821], W8
	020 Move X0, [X19]
	021 Move [X31+12], W31
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Call Stats.GetOculusDisplaySubsystem
	027 Compare X0, 0
	028 JumpIfEqual {49}
	029 Move X9, 0x582000
	030 Move X9, [X9+80]
	031 Move X8, [X0]
	032 Move X1, [X9]
	033 Move W10, [X8+304]
	034 Move W9, [X1+304]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X8, [X8+200]
	037 Add X8, X8, X9
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X1, X31, 12
	041 Move X2, X31
	042 Call XRDisplaySubsystem.TryGetCompositorGPUTimeLastFrame, X0, X1
	043 Move V0, [X31+12]
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Return V0
	048 Call 0x1C181E0
	049 Call 0x1C17F20

Method: System.Single get_MotionToPhoton()

Disassembly:
	0x03BDDB2C STP X20, X19, [X31 + 0x40]
	0x03BDDB30 ADRP X20, 0x805000
	0x03BDDB34 LDR X8, [X20 + 0xF40]
	0x03BDDB38 MOV W19, W0
	0x03BDDB3C CBNZ X8, 0x3BDDB88
	0x03BDDB40 ADRP X12, 0xFFFFFFFFFCF10000
	0x03BDDB44 LDR V0, [X12 + 0x708]
	0x03BDDB48 ADRP X8, 0xFFFFFFFFFCF17000
	0x03BDDB4C ADRP X10, 0xFFFFFFFFFCF35000
	0x03BDDB50 ADD X8, X8, 0xB90
	0x03BDDB54 MOVZ W9, 0xE
	0x03BDDB58 ADD X10, X10, 0x68F
	0x03BDDB5C MOVZ W11, 0xB
	0x03BDDB60 MOVZ W13, 0x4
	0x03BDDB64 ADD X0, X31, 0x0
	0x03BDDB68 STP X8, X9, [X31]
	0x03BDDB6C STP X10, X11, [X31 + 0x10]
	0x03BDDB70 STR W13, [X31 + 0x28]
	0x03BDDB74 STR D0, [X31 + 0x20]
	0x03BDDB78 STRB W31, [X31 + 0x2C]
	0x03BDDB7C BL 0x1C1729C
	0x03BDDB80 MOV X8, X0
	0x03BDDB84 STR X0, [X20 + 0xF40]
	0x03BDDB88 MOV W0, W19
	0x03BDDB8C BLR X8
	0x03BDDB90 LDP X20, X19, [X31 + 0x40]
	0x03BDDB94 LDR X30, [X31 + 0x30]
	0x03BDDB98 ADD X31, X31, 0x50
	0x03BDDB9C RET
	0x03BDDBA0 SUB X31, X31, 0x50
	0x03BDDBA4 STR X30, [X31 + 0x30]
	0x03BDDBA8 STP X20, X19, [X31 + 0x40]
	0x03BDDBAC ADRP X20, 0x805000
	0x03BDDBB0 LDR X8, [X20 + 0xF48]
	0x03BDDBB4 MOV X19, X0
	0x03BDDBB8 CBNZ X8, 0x3BDDC00
	0x03BDDBBC ADRP X11, 0xFFFFFFFFFCF10000
	0x03BDDBC0 LDR V0, [X11 + 0x640]
	0x03BDDBC4 ADRP X8, 0xFFFFFFFFFCF17000
	0x03BDDBC8 ADRP X10, 0xFFFFFFFFFCF4D000
	0x03BDDBCC ADD X8, X8, 0xB90
	0x03BDDBD0 MOVZ W9, 0xE
	0x03BDDBD4 ADD X10, X10, 0x14D
	0x03BDDBD8 MOVZ W12, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x806000
	005 Move X19, 0x582000
	006 Move W8, [X20+3822]
	007 Move X19, [X19+48]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x582000
	013 Move X0, [X0+48]
	014 Call 0x1C17CF4
	015 Move X0, 0x582000
	016 Move X0, [X0+80]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3822], W8
	020 Move X0, [X19]
	021 Move [X31+12], W31
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Call Stats.GetOculusDisplaySubsystem
	027 Compare X0, 0
	028 JumpIfEqual {49}
	029 Move X9, 0x582000
	030 Move X9, [X9+80]
	031 Move X8, [X0]
	032 Move X1, [X9]
	033 Move W10, [X8+304]
	034 Move W9, [X1+304]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X8, [X8+200]
	037 Add X8, X8, X9
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X1, X31, 12
	041 Move X2, X31
	042 Call XRDisplaySubsystem.TryGetMotionToPhoton, X0, X1
	043 Move V0, [X31+12]
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Return V0
	048 Call 0x1C181E0
	049 Call 0x1C17F20

Method: System.Single get_RefreshRate()

Disassembly:
	0x03BDDBDC ADD X0, X31, 0x0
	0x03BDDBE0 STP X8, X9, [X31]
	0x03BDDBE4 STP X10, X9, [X31 + 0x10]
	0x03BDDBE8 STR W12, [X31 + 0x28]
	0x03BDDBEC STR D0, [X31 + 0x20]
	0x03BDDBF0 STRB W31, [X31 + 0x2C]
	0x03BDDBF4 BL 0x1C1729C
	0x03BDDBF8 MOV X8, X0
	0x03BDDBFC STR X0, [X20 + 0xF48]
	0x03BDDC00 ADD X9, X19, 0x20
	0x03BDDC04 CMP X19, 0x0
	0x03BDDC08 CSEL X0, X31, X9, EQ
	0x03BDDC0C BLR X8
	0x03BDDC10 LDP X20, X19, [X31 + 0x40]
	0x03BDDC14 LDR X30, [X31 + 0x30]
	0x03BDDC18 ADD X31, X31, 0x50
	0x03BDDC1C RET
	0x03BDDC20 SUB X31, X31, 0x50
	0x03BDDC24 STR X30, [X31 + 0x30]
	0x03BDDC28 STP X20, X19, [X31 + 0x40]
	0x03BDDC2C ADRP X20, 0x805000
	0x03BDDC30 LDR X8, [X20 + 0xF50]
	0x03BDDC34 MOV W19, W0
	0x03BDDC38 CBNZ X8, 0x3BDDC84
	0x03BDDC3C ADRP X12, 0xFFFFFFFFFCF10000
	0x03BDDC40 LDR V0, [X12 + 0x708]
	0x03BDDC44 ADRP X8, 0xFFFFFFFFFCF17000
	0x03BDDC48 ADRP X10, 0xFFFFFFFFFCF27000
	0x03BDDC4C ADD X8, X8, 0xB90
	0x03BDDC50 MOVZ W9, 0xE
	0x03BDDC54 ADD X10, X10, 0xAB3
	0x03BDDC58 MOVZ W11, 0x11
	0x03BDDC5C MOVZ W13, 0x4
	0x03BDDC60 ADD X0, X31, 0x0
	0x03BDDC64 STP X8, X9, [X31]
	0x03BDDC68 STP X10, X11, [X31 + 0x10]
	0x03BDDC6C STR W13, [X31 + 0x28]
	0x03BDDC70 STR D0, [X31 + 0x20]
	0x03BDDC74 STRB W31, [X31 + 0x2C]
	0x03BDDC78 BL 0x1C1729C
	0x03BDDC7C MOV X8, X0
	0x03BDDC80 STR X0, [X20 + 0xF50]
	0x03BDDC84 AND W0, W19, 0x1
	0x03BDDC88 BLR X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x806000
	005 Move X19, 0x582000
	006 Move W8, [X20+3823]
	007 Move X19, [X19+48]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x582000
	013 Move X0, [X0+48]
	014 Call 0x1C17CF4
	015 Move X0, 0x582000
	016 Move X0, [X0+80]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3823], W8
	020 Move X0, [X19]
	021 Move [X31+12], W31
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Call Stats.GetOculusDisplaySubsystem
	027 Compare X0, 0
	028 JumpIfEqual {49}
	029 Move X9, 0x582000
	030 Move X9, [X9+80]
	031 Move X8, [X0]
	032 Move X1, [X9]
	033 Move W10, [X8+304]
	034 Move W9, [X1+304]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X8, [X8+200]
	037 Add X8, X8, X9
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X1, X31, 12
	041 Move X2, X31
	042 Call XRDisplaySubsystem.TryGetDisplayRefreshRate, X0, X1
	043 Move V0, [X31+12]
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Return V0
	048 Call 0x1C181E0
	049 Call 0x1C17F20

Method: System.Single get_BatteryTemp()

Disassembly:
	0x03BDDC8C LDP X20, X19, [X31 + 0x40]
	0x03BDDC90 LDR X30, [X31 + 0x30]
	0x03BDDC94 ADD X31, X31, 0x50
	0x03BDDC98 RET
	0x03BDDC9C SUB X31, X31, 0x50
	0x03BDDCA0 STR X30, [X31 + 0x30]
	0x03BDDCA4 STP X20, X19, [X31 + 0x40]
	0x03BDDCA8 ADRP X20, 0x805000
	0x03BDDCAC LDR X8, [X20 + 0xF58]
	0x03BDDCB0 MOV W19, W0
	0x03BDDCB4 CBNZ X8, 0x3BDDD00
	0x03BDDCB8 ADRP X12, 0xFFFFFFFFFCF10000
	0x03BDDCBC LDR V0, [X12 + 0x708]
	0x03BDDCC0 ADRP X8, 0xFFFFFFFFFCF17000
	0x03BDDCC4 ADRP X10, 0xFFFFFFFFFCF49000
	0x03BDDCC8 ADD X8, X8, 0xB90
	0x03BDDCCC MOVZ W9, 0xE
	0x03BDDCD0 ADD X10, X10, 0x73B
	0x03BDDCD4 MOVZ W11, 0x10
	0x03BDDCD8 MOVZ W13, 0x4
	0x03BDDCDC ADD X0, X31, 0x0
	0x03BDDCE0 STP X8, X9, [X31]
	0x03BDDCE4 STP X10, X11, [X31 + 0x10]
	0x03BDDCE8 STR W13, [X31 + 0x28]
	0x03BDDCEC STR D0, [X31 + 0x20]
	0x03BDDCF0 STRB W31, [X31 + 0x2C]
	0x03BDDCF4 BL 0x1C1729C
	0x03BDDCF8 MOV X8, X0
	0x03BDDCFC STR X0, [X20 + 0xF58]
	0x03BDDD00 AND W0, W19, 0x1
	0x03BDDD04 BLR X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x806000
	005 Move X19, 0x582000
	006 Move W8, [X20+3824]
	007 Move X19, [X19+48]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x582000
	013 Move X0, [X0+48]
	014 Call 0x1C17CF4
	015 Move X0, 0x582000
	016 Move X0, [X0+88]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3824], W8
	020 Move X0, [X19]
	021 Move [X31+12], W31
	022 Move X19, 0x582000
	023 Move W8, [X0+224]
	024 Move X19, [X19+88]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Call Stats.GetOculusDisplaySubsystem
	029 Move X1, [X19]
	030 Add X2, X31, 12
	031 Move X3, X31
	032 Call XRStats.TryGetStat, X0, X1, X2
	033 Move V0, [X31+12]
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return V0

Method: System.Single get_BatteryLevel()

Disassembly:
	0x03BDDD08 LDP X20, X19, [X31 + 0x40]
	0x03BDDD0C LDR X30, [X31 + 0x30]
	0x03BDDD10 ADD X31, X31, 0x50
	0x03BDDD14 RET
	0x03BDDD18 SUB X31, X31, 0x50
	0x03BDDD1C STR X30, [X31 + 0x30]
	0x03BDDD20 STP X20, X19, [X31 + 0x40]
	0x03BDDD24 ADRP X20, 0x805000
	0x03BDDD28 LDR X8, [X20 + 0xF60]
	0x03BDDD2C MOV W19, W0
	0x03BDDD30 CBNZ X8, 0x3BDDD7C
	0x03BDDD34 ADRP X12, 0xFFFFFFFFFCF10000
	0x03BDDD38 LDR V0, [X12 + 0x708]
	0x03BDDD3C ADRP X8, 0xFFFFFFFFFCF17000
	0x03BDDD40 ADRP X10, 0xFFFFFFFFFCF2D000
	0x03BDDD44 ADD X8, X8, 0xB90
	0x03BDDD48 MOVZ W9, 0xE
	0x03BDDD4C ADD X10, X10, 0xB01
	0x03BDDD50 MOVZ W11, 0x16
	0x03BDDD54 MOVZ W13, 0x4
	0x03BDDD58 ADD X0, X31, 0x0
	0x03BDDD5C STP X8, X9, [X31]
	0x03BDDD60 STP X10, X11, [X31 + 0x10]
	0x03BDDD64 STR W13, [X31 + 0x28]
	0x03BDDD68 STR D0, [X31 + 0x20]
	0x03BDDD6C STRB W31, [X31 + 0x2C]
	0x03BDDD70 BL 0x1C1729C
	0x03BDDD74 MOV X8, X0
	0x03BDDD78 STR X0, [X20 + 0xF60]
	0x03BDDD7C AND W0, W19, 0x1
	0x03BDDD80 BLR X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x806000
	005 Move X19, 0x582000
	006 Move W8, [X20+3825]
	007 Move X19, [X19+48]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x582000
	013 Move X0, [X0+48]
	014 Call 0x1C17CF4
	015 Move X0, 0x568000
	016 Move X0, [X0+3808]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3825], W8
	020 Move X0, [X19]
	021 Move [X31+12], W31
	022 Move X19, 0x568000
	023 Move W8, [X0+224]
	024 Move X19, [X19+3808]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Call Stats.GetOculusDisplaySubsystem
	029 Move X1, [X19]
	030 Add X2, X31, 12
	031 Move X3, X31
	032 Call XRStats.TryGetStat, X0, X1, X2
	033 Move V0, [X31+12]
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return V0

Method: System.Boolean get_PowerSavingMode()

Disassembly:
	0x03BDDD84 LDP X20, X19, [X31 + 0x40]
	0x03BDDD88 LDR X30, [X31 + 0x30]
	0x03BDDD8C CMP W0, 0x0
	0x03BDDD90 CSET W0, NE
	0x03BDDD94 ADD X31, X31, 0x50
	0x03BDDD98 RET
	0x03BDDD9C SUB X31, X31, 0x40
	0x03BDDDA0 STP X30, X19, [X31 + 0x30]
	0x03BDDDA4 ADRP X19, 0x805000
	0x03BDDDA8 LDR X8, [X19 + 0xF68]
	0x03BDDDAC CBNZ X8, 0x3BDDDF4
	0x03BDDDB0 ADRP X12, 0xFFFFFFFFFCF10000
	0x03BDDDB4 LDR V0, [X12 + 0x708]
	0x03BDDDB8 ADRP X8, 0xFFFFFFFFFCF17000
	0x03BDDDBC ADRP X10, 0xFFFFFFFFFCF45000
	0x03BDDDC0 ADD X8, X8, 0xB90
	0x03BDDDC4 MOVZ W9, 0xE
	0x03BDDDC8 ADD X10, X10, 0x8CF
	0x03BDDDCC MOVZ W11, 0x13
	0x03BDDDD0 ADD X0, X31, 0x0
	0x03BDDDD4 STR W31, [X31 + 0x28]
	0x03BDDDD8 STP X8, X9, [X31]
	0x03BDDDDC STP X10, X11, [X31 + 0x10]
	0x03BDDDE0 STR D0, [X31 + 0x20]
	0x03BDDDE4 STRB W31, [X31 + 0x2C]
	0x03BDDDE8 BL 0x1C1729C
	0x03BDDDEC MOV X8, X0
	0x03BDDDF0 STR X0, [X19 + 0xF68]
	0x03BDDDF4 BLR X8
	0x03BDDDF8 LDP X30, X19, [X31 + 0x30]
	0x03BDDDFC CMP W0, 0x0
	0x03BDDE00 CSET W0, NE
	0x03BDDE04 ADD X31, X31, 0x40

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x806000
	005 Move X19, 0x582000
	006 Move W8, [X20+3826]
	007 Move X19, [X19+48]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x582000
	013 Move X0, [X0+48]
	014 Call 0x1C17CF4
	015 Move X0, 0x582000
	016 Move X0, [X0+96]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3826], W8
	020 Move X0, [X19]
	021 Move [X31+12], W31
	022 Move X19, 0x582000
	023 Move W8, [X0+224]
	024 Move X19, [X19+96]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Call Stats.GetOculusDisplaySubsystem
	029 Move X1, [X19]
	030 Add X2, X31, 12
	031 Move X3, X31
	032 Call XRStats.TryGetStat, X0, X1, X2
	033 Move V0, [X31+12]
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 NotImplemented "Instruction FCMP not yet implemented."
	037 NotImplemented "Instruction CSET not yet implemented."
	038 Move X30, [X31+32]
	039 Return X0

Method: System.Single get_AdaptivePerformanceScale()

Disassembly:
	0x03BDDE08 RET
	0x03BDDE0C SUB X31, X31, 0x40
	0x03BDDE10 STP X30, X19, [X31 + 0x30]
	0x03BDDE14 ADRP X19, 0x805000
	0x03BDDE18 LDR X8, [X19 + 0xF70]
	0x03BDDE1C CBNZ X8, 0x3BDDE64
	0x03BDDE20 ADRP X12, 0xFFFFFFFFFCF10000
	0x03BDDE24 LDR V0, [X12 + 0x708]
	0x03BDDE28 ADRP X8, 0xFFFFFFFFFCF17000
	0x03BDDE2C ADRP X10, 0xFFFFFFFFFCF1B000
	0x03BDDE30 ADD X8, X8, 0xB90
	0x03BDDE34 MOVZ W9, 0xE
	0x03BDDE38 ADD X10, X10, 0x8FE
	0x03BDDE3C MOVZ W11, 0x15
	0x03BDDE40 ADD X0, X31, 0x0
	0x03BDDE44 STR W31, [X31 + 0x28]
	0x03BDDE48 STP X8, X9, [X31]
	0x03BDDE4C STP X10, X11, [X31 + 0x10]
	0x03BDDE50 STR D0, [X31 + 0x20]
	0x03BDDE54 STRB W31, [X31 + 0x2C]
	0x03BDDE58 BL 0x1C1729C
	0x03BDDE5C MOV X8, X0
	0x03BDDE60 STR X0, [X19 + 0xF70]
	0x03BDDE64 BLR X8
	0x03BDDE68 LDP X30, X19, [X31 + 0x30]
	0x03BDDE6C CMP W0, 0x0
	0x03BDDE70 CSET W0, NE
	0x03BDDE74 ADD X31, X31, 0x40
	0x03BDDE78 RET
	0x03BDDE7C SUB X31, X31, 0x50
	0x03BDDE80 STP X30, X21, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x806000
	005 Move X19, 0x582000
	006 Move W8, [X20+3827]
	007 Move X19, [X19+48]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x582000
	013 Move X0, [X0+48]
	014 Call 0x1C17CF4
	015 Move X0, 0x582000
	016 Move X0, [X0+104]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3827], W8
	020 Move X0, [X19]
	021 Move [X31+12], W31
	022 Move X19, 0x582000
	023 Move W8, [X0+224]
	024 Move X19, [X19+104]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Call Stats.GetOculusDisplaySubsystem
	029 Move X1, [X19]
	030 Add X2, X31, 12
	031 Move X3, X31
	032 Call XRStats.TryGetStat, X0, X1, X2
	033 Move V0, [X31+12]
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return V0

Method: System.Int32 get_CPULevel()

Disassembly:
	0x03BDDE84 STP X20, X19, [X31 + 0x40]
	0x03BDDE88 ADRP X21, 0x805000
	0x03BDDE8C LDR X8, [X21 + 0xF78]
	0x03BDDE90 MOV X19, X1
	0x03BDDE94 MOV W20, W0
	0x03BDDE98 CBNZ X8, 0x3BDDEE4
	0x03BDDE9C ADRP X12, 0xFFFFFFFFFCF10000
	0x03BDDEA0 LDR V0, [X12 + 0x708]
	0x03BDDEA4 ADRP X8, 0xFFFFFFFFFCF17000
	0x03BDDEA8 ADRP X10, 0xFFFFFFFFFCF45000
	0x03BDDEAC ADD X8, X8, 0xB90
	0x03BDDEB0 MOVZ W9, 0xE
	0x03BDDEB4 ADD X10, X10, 0x8E3
	0x03BDDEB8 MOVZ W11, 0x15
	0x03BDDEBC MOVZ W13, 0xC
	0x03BDDEC0 ADD X0, X31, 0x0
	0x03BDDEC4 STP X8, X9, [X31]
	0x03BDDEC8 STP X10, X11, [X31 + 0x10]
	0x03BDDECC STR W13, [X31 + 0x28]
	0x03BDDED0 STR D0, [X31 + 0x20]
	0x03BDDED4 STRB W31, [X31 + 0x2C]
	0x03BDDED8 BL 0x1C1729C
	0x03BDDEDC MOV X8, X0
	0x03BDDEE0 STR X0, [X21 + 0xF78]
	0x03BDDEE4 MOV W0, W20
	0x03BDDEE8 MOV X1, X19
	0x03BDDEEC BLR X8
	0x03BDDEF0 LDP X20, X19, [X31 + 0x40]
	0x03BDDEF4 LDP X30, X21, [X31 + 0x30]
	0x03BDDEF8 CMP W0, 0x0
	0x03BDDEFC CSET W0, NE
	0x03BDDF00 ADD X31, X31, 0x50
	0x03BDDF04 RET
	0x03BDDF08 SUB X31, X31, 0x40
	0x03BDDF0C STP X30, X19, [X31 + 0x30]
	0x03BDDF10 ADRP X19, 0x805000
	0x03BDDF14 LDR X8, [X19 + 0xF80]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x806000
	005 Move X19, 0x582000
	006 Move W8, [X20+3828]
	007 Move X19, [X19+48]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x582000
	013 Move X0, [X0+48]
	014 Call 0x1C17CF4
	015 Move X0, 0x582000
	016 Move X0, [X0+112]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3828], W8
	020 Move X0, [X19]
	021 Move [X31+12], W31
	022 Move X19, 0x582000
	023 Move W8, [X0+224]
	024 Move X19, [X19+112]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Call Stats.GetOculusDisplaySubsystem
	029 Move X1, [X19]
	030 Add X2, X31, 12
	031 Move X3, X31
	032 Call XRStats.TryGetStat, X0, X1, X2
	033 Move V0, [X31+12]
	034 Move W8, 0x7F800000
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move S1, W8
	038 NotImplemented "Instruction FCVTZS not yet implemented."
	039 NotImplemented "Instruction FCMP not yet implemented."
	040 Move W9, 0x80000000
	041 NotImplemented "Instruction CSEL not yet implemented."
	042 Move X30, [X31+32]
	043 Return X0

Method: System.Int32 get_GPULevel()

Disassembly:
	0x03BDDF18 CBNZ X8, 0x3BDDF60
	0x03BDDF1C ADRP X12, 0xFFFFFFFFFCF10000
	0x03BDDF20 LDR V0, [X12 + 0x708]
	0x03BDDF24 ADRP X8, 0xFFFFFFFFFCF17000
	0x03BDDF28 ADRP X10, 0xFFFFFFFFFCF35000
	0x03BDDF2C ADD X8, X8, 0xB90
	0x03BDDF30 MOVZ W9, 0xE
	0x03BDDF34 ADD X10, X10, 0x69B
	0x03BDDF38 MOVZ W11, 0x12
	0x03BDDF3C ADD X0, X31, 0x0
	0x03BDDF40 STR W31, [X31 + 0x28]
	0x03BDDF44 STP X8, X9, [X31]
	0x03BDDF48 STP X10, X11, [X31 + 0x10]
	0x03BDDF4C STR D0, [X31 + 0x20]
	0x03BDDF50 STRB W31, [X31 + 0x2C]
	0x03BDDF54 BL 0x1C1729C
	0x03BDDF58 MOV X8, X0
	0x03BDDF5C STR X0, [X19 + 0xF80]
	0x03BDDF60 BLR X8
	0x03BDDF64 LDP X30, X19, [X31 + 0x30]
	0x03BDDF68 CMP W0, 0x0
	0x03BDDF6C CSET W0, NE
	0x03BDDF70 ADD X31, X31, 0x40
	0x03BDDF74 RET
	0x03BDDF78 SUB X31, X31, 0x50
	0x03BDDF7C STR X30, [X31 + 0x30]
	0x03BDDF80 STP X20, X19, [X31 + 0x40]
	0x03BDDF84 ADRP X20, 0x805000
	0x03BDDF88 LDR X8, [X20 + 0xF88]
	0x03BDDF8C MOV W19, W0
	0x03BDDF90 CBNZ X8, 0x3BDDFDC
	0x03BDDF94 ADRP X12, 0xFFFFFFFFFCF10000
	0x03BDDF98 LDR V0, [X12 + 0x708]
	0x03BDDF9C ADRP X8, 0xFFFFFFFFFCF17000
	0x03BDDFA0 ADRP X10, 0xFFFFFFFFFCF49000
	0x03BDDFA4 ADD X8, X8, 0xB90
	0x03BDDFA8 MOVZ W9, 0xE

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x806000
	005 Move X19, 0x582000
	006 Move W8, [X20+3829]
	007 Move X19, [X19+48]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x582000
	013 Move X0, [X0+48]
	014 Call 0x1C17CF4
	015 Move X0, 0x582000
	016 Move X0, [X0+120]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3829], W8
	020 Move X0, [X19]
	021 Move [X31+12], W31
	022 Move X19, 0x582000
	023 Move W8, [X0+224]
	024 Move X19, [X19+120]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Call Stats.GetOculusDisplaySubsystem
	029 Move X1, [X19]
	030 Add X2, X31, 12
	031 Move X3, X31
	032 Call XRStats.TryGetStat, X0, X1, X2
	033 Move V0, [X31+12]
	034 Move W8, 0x7F800000
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move S1, W8
	038 NotImplemented "Instruction FCVTZS not yet implemented."
	039 NotImplemented "Instruction FCMP not yet implemented."
	040 Move W9, 0x80000000
	041 NotImplemented "Instruction CSEL not yet implemented."
	042 Move X30, [X31+32]
	043 Return X0

