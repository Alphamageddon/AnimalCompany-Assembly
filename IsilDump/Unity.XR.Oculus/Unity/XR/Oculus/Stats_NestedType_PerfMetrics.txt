Type: Unity.XR.Oculus.Stats/PerfMetrics

Method: System.Single get_AppCPUTime()

Disassembly:
	0x03BDDFAC ADD X10, X10, 0x74C
	0x03BDDFB0 MOVZ W11, 0x12
	0x03BDDFB4 MOVZ W13, 0x4
	0x03BDDFB8 ADD X0, X31, 0x0
	0x03BDDFBC STP X8, X9, [X31]
	0x03BDDFC0 STP X10, X11, [X31 + 0x10]
	0x03BDDFC4 STR W13, [X31 + 0x28]
	0x03BDDFC8 STR D0, [X31 + 0x20]
	0x03BDDFCC STRB W31, [X31 + 0x2C]
	0x03BDDFD0 BL 0x1C1729C
	0x03BDDFD4 MOV X8, X0
	0x03BDDFD8 STR X0, [X20 + 0xF88]
	0x03BDDFDC AND W0, W19, 0x1
	0x03BDDFE0 BLR X8
	0x03BDDFE4 LDP X20, X19, [X31 + 0x40]
	0x03BDDFE8 LDR X30, [X31 + 0x30]
	0x03BDDFEC ADD X31, X31, 0x50
	0x03BDDFF0 RET
	0x03BDDFF4 B 0x3BDDFF8
	0x03BDDFF8 SUB X31, X31, 0x40
	0x03BDDFFC STP X30, X19, [X31 + 0x30]
	0x03BDE000 ADRP X19, 0x804000
	0x03BDE004 LDR X8, [X19 + 0xF90]
	0x03BDE008 CBNZ X8, 0x3BDE050
	0x03BDE00C ADRP X12, 0xFFFFFFFFFCF0F000
	0x03BDE010 LDR V0, [X12 + 0x708]
	0x03BDE014 ADRP X8, 0xFFFFFFFFFCF16000
	0x03BDE018 ADRP X10, 0xFFFFFFFFFCF1C000
	0x03BDE01C ADD X8, X8, 0xB90
	0x03BDE020 MOVZ W9, 0xE
	0x03BDE024 ADD X10, X10, 0xBAB

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x806000
	005 Move X19, 0x582000
	006 Move W8, [X20+3830]
	007 Move X19, [X19+48]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x582000
	013 Move X0, [X0+48]
	014 Call 0x1C17CF4
	015 Move X0, 0x582000
	016 Move X0, [X0+128]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3830], W8
	020 Move X0, [X19]
	021 Move [X31+12], W31
	022 Move X19, 0x582000
	023 Move W8, [X0+224]
	024 Move X19, [X19+128]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Call Stats.GetOculusDisplaySubsystem
	029 Move X1, [X19]
	030 Add X2, X31, 12
	031 Move X3, X31
	032 Call XRStats.TryGetStat, X0, X1, X2
	033 Move V0, [X31+12]
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return V0

Method: System.Single get_AppGPUTime()

Disassembly:
	0x03BDE028 MOVZ W11, 0x10
	0x03BDE02C ADD X0, X31, 0x0
	0x03BDE030 STR W31, [X31 + 0x28]
	0x03BDE034 STP X8, X9, [X31]
	0x03BDE038 STP X10, X11, [X31 + 0x10]
	0x03BDE03C STR D0, [X31 + 0x20]
	0x03BDE040 STRB W31, [X31 + 0x2C]
	0x03BDE044 BL 0x1C1729C
	0x03BDE048 MOV X8, X0
	0x03BDE04C STR X0, [X19 + 0xF90]
	0x03BDE050 BLR X8
	0x03BDE054 LDP X30, X19, [X31 + 0x30]
	0x03BDE058 CMP W0, 0x0
	0x03BDE05C CSET W0, NE
	0x03BDE060 ADD X31, X31, 0x40
	0x03BDE064 RET
	0x03BDE068 SUB X31, X31, 0x50
	0x03BDE06C STP X30, X21, [X31 + 0x30]
	0x03BDE070 STP X20, X19, [X31 + 0x40]
	0x03BDE074 ADRP X21, 0x804000
	0x03BDE078 LDR X8, [X21 + 0xF98]
	0x03BDE07C MOV X19, X1
	0x03BDE080 MOV X20, X0
	0x03BDE084 CBNZ X8, 0x3BDE0D0
	0x03BDE088 ADRP X12, 0xFFFFFFFFFCF0F000
	0x03BDE08C LDR V0, [X12 + 0x708]
	0x03BDE090 ADRP X8, 0xFFFFFFFFFCF16000
	0x03BDE094 ADRP X10, 0xFFFFFFFFFCF37000
	0x03BDE098 ADD X8, X8, 0xB90
	0x03BDE09C MOVZ W9, 0xE
	0x03BDE0A0 ADD X10, X10, 0xEF1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x805000
	005 Move X19, 0x581000
	006 Move W8, [X20+3831]
	007 Move X19, [X19+48]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x581000
	013 Move X0, [X0+48]
	014 Call 0x1C17CF4
	015 Move X0, 0x581000
	016 Move X0, [X0+136]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3831], W8
	020 Move X0, [X19]
	021 Move [X31+12], W31
	022 Move X19, 0x581000
	023 Move W8, [X0+224]
	024 Move X19, [X19+136]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Call Stats.GetOculusDisplaySubsystem
	029 Move X1, [X19]
	030 Add X2, X31, 12
	031 Move X3, X31
	032 Call XRStats.TryGetStat, X0, X1, X2
	033 Move V0, [X31+12]
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return V0

Method: System.Single get_CompositorCPUTime()

Disassembly:
	0x03BDE0A4 MOVZ W11, 0x1E
	0x03BDE0A8 MOVZ W13, 0x10
	0x03BDE0AC ADD X0, X31, 0x0
	0x03BDE0B0 STP X8, X9, [X31]
	0x03BDE0B4 STP X10, X11, [X31 + 0x10]
	0x03BDE0B8 STR W13, [X31 + 0x28]
	0x03BDE0BC STR D0, [X31 + 0x20]
	0x03BDE0C0 STRB W31, [X31 + 0x2C]
	0x03BDE0C4 BL 0x1C1729C
	0x03BDE0C8 MOV X8, X0
	0x03BDE0CC STR X0, [X21 + 0xF98]
	0x03BDE0D0 MOV X0, X20
	0x03BDE0D4 MOV X1, X19
	0x03BDE0D8 BLR X8
	0x03BDE0DC LDP X20, X19, [X31 + 0x40]
	0x03BDE0E0 LDP X30, X21, [X31 + 0x30]
	0x03BDE0E4 CMP W0, 0x0
	0x03BDE0E8 CSET W0, NE
	0x03BDE0EC ADD X31, X31, 0x50
	0x03BDE0F0 RET
	0x03BDE0F4 SUB X31, X31, 0x50
	0x03BDE0F8 STR D8, [X31 + 0x30]
	0x03BDE0FC STP X30, X19, [X31 + 0x40]
	0x03BDE100 ADRP X19, 0x804000
	0x03BDE104 LDR X8, [X19 + 0xFA0]
	0x03BDE108 MOV V8.16B, V0.16B
	0x03BDE10C CBNZ X8, 0x3BDE158
	0x03BDE110 ADRP X12, 0xFFFFFFFFFCF0F000
	0x03BDE114 LDR V0, [X12 + 0x708]
	0x03BDE118 ADRP X8, 0xFFFFFFFFFCF16000
	0x03BDE11C ADRP X10, 0xFFFFFFFFFCF22000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x805000
	005 Move X19, 0x581000
	006 Move W8, [X20+3832]
	007 Move X19, [X19+48]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x581000
	013 Move X0, [X0+48]
	014 Call 0x1C17CF4
	015 Move X0, 0x581000
	016 Move X0, [X0+144]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3832], W8
	020 Move X0, [X19]
	021 Move [X31+12], W31
	022 Move X19, 0x581000
	023 Move W8, [X0+224]
	024 Move X19, [X19+144]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Call Stats.GetOculusDisplaySubsystem
	029 Move X1, [X19]
	030 Add X2, X31, 12
	031 Move X3, X31
	032 Call XRStats.TryGetStat, X0, X1, X2
	033 Move V0, [X31+12]
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return V0

Method: System.Single get_CompositorGPUTime()

Disassembly:
	0x03BDE120 ADD X8, X8, 0xB90
	0x03BDE124 MOVZ W9, 0xE
	0x03BDE128 ADD X10, X10, 0x6E7
	0x03BDE12C MOVZ W11, 0x13
	0x03BDE130 MOVZ W13, 0x4
	0x03BDE134 ADD X0, X31, 0x0
	0x03BDE138 STP X8, X9, [X31]
	0x03BDE13C STP X10, X11, [X31 + 0x10]
	0x03BDE140 STR W13, [X31 + 0x28]
	0x03BDE144 STR D0, [X31 + 0x20]
	0x03BDE148 STRB W31, [X31 + 0x2C]
	0x03BDE14C BL 0x1C1729C
	0x03BDE150 MOV X8, X0
	0x03BDE154 STR X0, [X19 + 0xFA0]
	0x03BDE158 MOV V0.16B, V8.16B
	0x03BDE15C BLR X8
	0x03BDE160 LDP X30, X19, [X31 + 0x40]
	0x03BDE164 LDR V8, [X31 + 0x30]
	0x03BDE168 CMP W0, 0x0
	0x03BDE16C CSET W0, NE
	0x03BDE170 ADD X31, X31, 0x50
	0x03BDE174 RET
	0x03BDE178 SUB X31, X31, 0x50
	0x03BDE17C STR X30, [X31 + 0x30]
	0x03BDE180 STP X20, X19, [X31 + 0x40]
	0x03BDE184 ADRP X20, 0x804000
	0x03BDE188 LDR X8, [X20 + 0xFA8]
	0x03BDE18C MOV X19, X0
	0x03BDE190 CBNZ X8, 0x3BDE1DC
	0x03BDE194 ADRP X12, 0xFFFFFFFFFCF0F000
	0x03BDE198 LDR V0, [X12 + 0x708]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x805000
	005 Move X19, 0x581000
	006 Move W8, [X20+3833]
	007 Move X19, [X19+48]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x581000
	013 Move X0, [X0+48]
	014 Call 0x1C17CF4
	015 Move X0, 0x581000
	016 Move X0, [X0+152]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3833], W8
	020 Move X0, [X19]
	021 Move [X31+12], W31
	022 Move X19, 0x581000
	023 Move W8, [X0+224]
	024 Move X19, [X19+152]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Call Stats.GetOculusDisplaySubsystem
	029 Move X1, [X19]
	030 Add X2, X31, 12
	031 Move X3, X31
	032 Call XRStats.TryGetStat, X0, X1, X2
	033 Move V0, [X31+12]
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return V0

Method: System.Single get_GPUUtilization()

Disassembly:
	0x03BDE19C ADRP X8, 0xFFFFFFFFFCF16000
	0x03BDE1A0 ADRP X10, 0xFFFFFFFFFCF34000
	0x03BDE1A4 ADD X8, X8, 0xB90
	0x03BDE1A8 MOVZ W9, 0xE
	0x03BDE1AC ADD X10, X10, 0x6AE
	0x03BDE1B0 MOVZ W11, 0x13
	0x03BDE1B4 MOVZ W13, 0x8
	0x03BDE1B8 ADD X0, X31, 0x0
	0x03BDE1BC STP X8, X9, [X31]
	0x03BDE1C0 STP X10, X11, [X31 + 0x10]
	0x03BDE1C4 STR W13, [X31 + 0x28]
	0x03BDE1C8 STR D0, [X31 + 0x20]
	0x03BDE1CC STRB W31, [X31 + 0x2C]
	0x03BDE1D0 BL 0x1C1729C
	0x03BDE1D4 MOV X8, X0
	0x03BDE1D8 STR X0, [X20 + 0xFA8]
	0x03BDE1DC MOV X0, X19
	0x03BDE1E0 BLR X8
	0x03BDE1E4 LDP X20, X19, [X31 + 0x40]
	0x03BDE1E8 LDR X30, [X31 + 0x30]
	0x03BDE1EC CMP W0, 0x0
	0x03BDE1F0 CSET W0, NE
	0x03BDE1F4 ADD X31, X31, 0x50
	0x03BDE1F8 RET
	0x03BDE1FC SUB X31, X31, 0x40
	0x03BDE200 STP X30, X19, [X31 + 0x30]
	0x03BDE204 ADRP X19, 0x804000
	0x03BDE208 LDR X8, [X19 + 0xFB0]
	0x03BDE20C CBNZ X8, 0x3BDE254
	0x03BDE210 ADRP X12, 0xFFFFFFFFFCF0F000
	0x03BDE214 LDR V0, [X12 + 0x708]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x805000
	005 Move X19, 0x581000
	006 Move W8, [X20+3834]
	007 Move X19, [X19+48]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x581000
	013 Move X0, [X0+48]
	014 Call 0x1C17CF4
	015 Move X0, 0x581000
	016 Move X0, [X0+160]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3834], W8
	020 Move X0, [X19]
	021 Move [X31+12], W31
	022 Move X19, 0x581000
	023 Move W8, [X0+224]
	024 Move X19, [X19+160]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Call Stats.GetOculusDisplaySubsystem
	029 Move X1, [X19]
	030 Add X2, X31, 12
	031 Move X3, X31
	032 Call XRStats.TryGetStat, X0, X1, X2
	033 Move V0, [X31+12]
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return V0

Method: System.Single get_CPUUtilizationAverage()

Disassembly:
	0x03BDE218 ADRP X8, 0xFFFFFFFFFCF16000
	0x03BDE21C ADRP X10, 0xFFFFFFFFFCF3A000
	0x03BDE220 ADD X8, X8, 0xB90
	0x03BDE224 MOVZ W9, 0xE
	0x03BDE228 ADD X10, X10, 0xD3
	0x03BDE22C MOVZ W11, 0x14
	0x03BDE230 ADD X0, X31, 0x0
	0x03BDE234 STR W31, [X31 + 0x28]
	0x03BDE238 STP X8, X9, [X31]
	0x03BDE23C STP X10, X11, [X31 + 0x10]
	0x03BDE240 STR D0, [X31 + 0x20]
	0x03BDE244 STRB W31, [X31 + 0x2C]
	0x03BDE248 BL 0x1C1729C
	0x03BDE24C MOV X8, X0
	0x03BDE250 STR X0, [X19 + 0xFB0]
	0x03BDE254 BLR X8
	0x03BDE258 LDP X30, X19, [X31 + 0x30]
	0x03BDE25C ADD X31, X31, 0x40
	0x03BDE260 RET
	0x03BDE264 SUB X31, X31, 0x40
	0x03BDE268 STP X30, X19, [X31 + 0x30]
	0x03BDE26C ADRP X19, 0x804000
	0x03BDE270 LDR X8, [X19 + 0xFB8]
	0x03BDE274 CBNZ X8, 0x3BDE2BC
	0x03BDE278 ADRP X12, 0xFFFFFFFFFCF0F000
	0x03BDE27C LDR V0, [X12 + 0x708]
	0x03BDE280 ADRP X8, 0xFFFFFFFFFCF16000
	0x03BDE284 ADRP X10, 0xFFFFFFFFFCF22000
	0x03BDE288 ADD X8, X8, 0xB90
	0x03BDE28C MOVZ W9, 0xE
	0x03BDE290 ADD X10, X10, 0x6FB

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x805000
	005 Move X19, 0x581000
	006 Move W8, [X20+3835]
	007 Move X19, [X19+48]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x581000
	013 Move X0, [X0+48]
	014 Call 0x1C17CF4
	015 Move X0, 0x581000
	016 Move X0, [X0+168]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3835], W8
	020 Move X0, [X19]
	021 Move [X31+12], W31
	022 Move X19, 0x581000
	023 Move W8, [X0+224]
	024 Move X19, [X19+168]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Call Stats.GetOculusDisplaySubsystem
	029 Move X1, [X19]
	030 Add X2, X31, 12
	031 Move X3, X31
	032 Call XRStats.TryGetStat, X0, X1, X2
	033 Move V0, [X31+12]
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return V0

Method: System.Single get_CPUUtilizationWorst()

Disassembly:
	0x03BDE294 MOVZ W11, 0x19
	0x03BDE298 ADD X0, X31, 0x0
	0x03BDE29C STR W31, [X31 + 0x28]
	0x03BDE2A0 STP X8, X9, [X31]
	0x03BDE2A4 STP X10, X11, [X31 + 0x10]
	0x03BDE2A8 STR D0, [X31 + 0x20]
	0x03BDE2AC STRB W31, [X31 + 0x2C]
	0x03BDE2B0 BL 0x1C1729C
	0x03BDE2B4 MOV X8, X0
	0x03BDE2B8 STR X0, [X19 + 0xFB8]
	0x03BDE2BC BLR X8
	0x03BDE2C0 LDP X30, X19, [X31 + 0x30]
	0x03BDE2C4 CMP W0, 0x0
	0x03BDE2C8 CSET W0, NE
	0x03BDE2CC ADD X31, X31, 0x40
	0x03BDE2D0 RET
	0x03BDE2D4 SUB X31, X31, 0x50
	0x03BDE2D8 STR X30, [X31 + 0x30]
	0x03BDE2DC STP X20, X19, [X31 + 0x40]
	0x03BDE2E0 ADRP X20, 0x804000
	0x03BDE2E4 LDR X8, [X20 + 0xFC0]
	0x03BDE2E8 MOV W19, W0
	0x03BDE2EC CBNZ X8, 0x3BDE338
	0x03BDE2F0 ADRP X12, 0xFFFFFFFFFCF0F000
	0x03BDE2F4 LDR V0, [X12 + 0x708]
	0x03BDE2F8 ADRP X8, 0xFFFFFFFFFCF16000
	0x03BDE2FC ADRP X10, 0xFFFFFFFFFCF2E000
	0x03BDE300 ADD X8, X8, 0xB90
	0x03BDE304 MOVZ W9, 0xE
	0x03BDE308 ADD X10, X10, 0x5BC
	0x03BDE30C MOVZ W11, 0x15

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x805000
	005 Move X19, 0x581000
	006 Move W8, [X20+3836]
	007 Move X19, [X19+48]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x581000
	013 Move X0, [X0+48]
	014 Call 0x1C17CF4
	015 Move X0, 0x581000
	016 Move X0, [X0+176]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3836], W8
	020 Move X0, [X19]
	021 Move [X31+12], W31
	022 Move X19, 0x581000
	023 Move W8, [X0+224]
	024 Move X19, [X19+176]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Call Stats.GetOculusDisplaySubsystem
	029 Move X1, [X19]
	030 Add X2, X31, 12
	031 Move X3, X31
	032 Call XRStats.TryGetStat, X0, X1, X2
	033 Move V0, [X31+12]
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return V0

Method: System.Single get_CPUClockFrequency()

Disassembly:
	0x03BDE310 MOVZ W13, 0x4
	0x03BDE314 ADD X0, X31, 0x0
	0x03BDE318 STP X8, X9, [X31]
	0x03BDE31C STP X10, X11, [X31 + 0x10]
	0x03BDE320 STR W13, [X31 + 0x28]
	0x03BDE324 STR D0, [X31 + 0x20]
	0x03BDE328 STRB W31, [X31 + 0x2C]
	0x03BDE32C BL 0x1C1729C
	0x03BDE330 MOV X8, X0
	0x03BDE334 STR X0, [X20 + 0xFC0]
	0x03BDE338 MOV W0, W19
	0x03BDE33C BLR X8
	0x03BDE340 LDP X20, X19, [X31 + 0x40]
	0x03BDE344 LDR X30, [X31 + 0x30]
	0x03BDE348 ADD X31, X31, 0x50
	0x03BDE34C RET
	0x03BDE350 SUB X31, X31, 0x40
	0x03BDE354 STP X30, X19, [X31 + 0x30]
	0x03BDE358 ADRP X19, 0x804000
	0x03BDE35C LDR X8, [X19 + 0xFC8]
	0x03BDE360 CBNZ X8, 0x3BDE3A8
	0x03BDE364 ADRP X12, 0xFFFFFFFFFCF0F000
	0x03BDE368 LDR V0, [X12 + 0x708]
	0x03BDE36C ADRP X8, 0xFFFFFFFFFCF16000
	0x03BDE370 ADRP X10, 0xFFFFFFFFFCF2C000
	0x03BDE374 ADD X8, X8, 0xB90
	0x03BDE378 MOVZ W9, 0xE
	0x03BDE37C ADD X10, X10, 0xB18
	0x03BDE380 MOVZ W11, 0x15
	0x03BDE384 ADD X0, X31, 0x0
	0x03BDE388 STR W31, [X31 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x805000
	005 Move X19, 0x581000
	006 Move W8, [X20+3837]
	007 Move X19, [X19+48]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x581000
	013 Move X0, [X0+48]
	014 Call 0x1C17CF4
	015 Move X0, 0x581000
	016 Move X0, [X0+184]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3837], W8
	020 Move X0, [X19]
	021 Move [X31+12], W31
	022 Move X19, 0x581000
	023 Move W8, [X0+224]
	024 Move X19, [X19+184]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Call Stats.GetOculusDisplaySubsystem
	029 Move X1, [X19]
	030 Add X2, X31, 12
	031 Move X3, X31
	032 Call XRStats.TryGetStat, X0, X1, X2
	033 Move V0, [X31+12]
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return V0

Method: System.Single get_GPUClockFrequency()

Disassembly:
	0x03BDE38C STP X8, X9, [X31]
	0x03BDE390 STP X10, X11, [X31 + 0x10]
	0x03BDE394 STR D0, [X31 + 0x20]
	0x03BDE398 STRB W31, [X31 + 0x2C]
	0x03BDE39C BL 0x1C1729C
	0x03BDE3A0 MOV X8, X0
	0x03BDE3A4 STR X0, [X19 + 0xFC8]
	0x03BDE3A8 BLR X8
	0x03BDE3AC LDP X30, X19, [X31 + 0x30]
	0x03BDE3B0 ADD X31, X31, 0x40
	0x03BDE3B4 RET
	0x03BDE3B8 SUB X31, X31, 0x50
	0x03BDE3BC STR X30, [X31 + 0x30]
	0x03BDE3C0 STP X20, X19, [X31 + 0x40]
	0x03BDE3C4 ADRP X20, 0x804000
	0x03BDE3C8 LDR X8, [X20 + 0xFD0]
	0x03BDE3CC MOV W19, W0
	0x03BDE3D0 CBNZ X8, 0x3BDE41C
	0x03BDE3D4 ADRP X12, 0xFFFFFFFFFCF0F000
	0x03BDE3D8 LDR V0, [X12 + 0x708]
	0x03BDE3DC ADRP X8, 0xFFFFFFFFFCF16000
	0x03BDE3E0 ADRP X10, 0xFFFFFFFFFCF16000
	0x03BDE3E4 ADD X8, X8, 0xB90
	0x03BDE3E8 MOVZ W9, 0xE
	0x03BDE3EC ADD X10, X10, 0xB9F
	0x03BDE3F0 MOVZ W11, 0x17
	0x03BDE3F4 MOVZ W13, 0x4
	0x03BDE3F8 ADD X0, X31, 0x0
	0x03BDE3FC STP X8, X9, [X31]
	0x03BDE400 STP X10, X11, [X31 + 0x10]
	0x03BDE404 STR W13, [X31 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x805000
	005 Move X19, 0x581000
	006 Move W8, [X20+3838]
	007 Move X19, [X19+48]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x581000
	013 Move X0, [X0+48]
	014 Call 0x1C17CF4
	015 Move X0, 0x581000
	016 Move X0, [X0+192]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3838], W8
	020 Move X0, [X19]
	021 Move [X31+12], W31
	022 Move X19, 0x581000
	023 Move W8, [X0+224]
	024 Move X19, [X19+192]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Call Stats.GetOculusDisplaySubsystem
	029 Move X1, [X19]
	030 Add X2, X31, 12
	031 Move X3, X31
	032 Call XRStats.TryGetStat, X0, X1, X2
	033 Move V0, [X31+12]
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return V0

Method: System.Void EnablePerfMetrics(System.Boolean enable)

Disassembly:
	0x03BDE408 STR D0, [X31 + 0x20]
	0x03BDE40C STRB W31, [X31 + 0x2C]

ISIL:
	001 And W0, W0, 1
	002 Call Internal.EnablePerfMetrics, X0
	003 Return 

