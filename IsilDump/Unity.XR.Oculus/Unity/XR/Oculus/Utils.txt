Type: Unity.XR.Oculus.Utils

Method: System.Void SetColorScaleAndOffset(UnityEngine.Vector4 colorScale, UnityEngine.Vector4 colorOffset)

Disassembly:
	0x03BDB704 BL 0x1C16CF4
	0x03BDB708 ADRP X0, 0x582000
	0x03BDB70C LDR X0, [X0 + 0xF70]
	0x03BDB710 BL 0x1C16CF4
	0x03BDB714 ADRP X0, 0x582000
	0x03BDB718 LDR X0, [X0 + 0xF78]
	0x03BDB71C BL 0x1C16CF4
	0x03BDB720 ADRP X0, 0x582000
	0x03BDB724 LDR X0, [X0 + 0xF80]
	0x03BDB728 BL 0x1C16CF4
	0x03BDB72C ADRP X0, 0x582000
	0x03BDB730 LDR X0, [X0 + 0xF88]
	0x03BDB734 BL 0x1C16CF4
	0x03BDB738 MOVZ W8, 0x1
	0x03BDB73C STRB W8, [X20 + 0xEE0]
	0x03BDB740 BL 0x3BDBA14

ISIL:
	001 Move [X31-48], D11
	002 Move [X31-40], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move V8, V7
	007 Move V9, V6
	008 Move V10, V5
	009 Move V11, V4
	010 Call Internal.SetColorScale, V0, V1, V2, V3
	011 Move V2, V9
	012 Move V3, V8
	013 Move X30, [X31+32]
	014 Move D9, [X31+16]
	015 Move D8, [X31+24]
	016 Move V0, V11
	017 Move V1, V10
	018 Move D11, [X31+48]
	019 Move D10, [X31+56]
	020 Call Internal.SetColorOffset, V0, V1, V2, V3
	021 Return 

Method: Unity.XR.Oculus.SystemHeadset GetSystemHeadsetType()

Disassembly:
	0x03BDB74C LDR X21, [X21 + 0xF50]

ISIL:
	001 Call Internal.GetSystemHeadsetType
	002 Return X0

Method: System.Void PermissionGrantedCallback(System.String permissionName)

Disassembly:
	0x03BDB754 LDR W8, [X0 + 0xE0]
	0x03BDB758 CBNZ W8, 0x3BDB760
	0x03BDB75C BL 0x1C16DFC
	0x03BDB760 BL 0x3BDB538
	0x03BDB764 CBZ W0, 0x3BDB780
	0x03BDB768 MOV W0, W31
	0x03BDB76C LDP X20, X19, [X31 + 0x70]
	0x03BDB770 LDP X22, X21, [X31 + 0x60]
	0x03BDB774 LDR X30, [X31 + 0x50]
	0x03BDB778 ADD X31, X31, 0x80
	0x03BDB77C RET
	0x03BDB780 ADRP X8, 0x582000
	0x03BDB784 LDR X8, [X8 + 0xF48]
	0x03BDB788 LDR X0, [X8]
	0x03BDB78C LDR W8, [X0 + 0xE0]
	0x03BDB790 CBNZ W8, 0x3BDB798
	0x03BDB794 BL 0x1C16DFC
	0x03BDB798 BL 0x3BDB1BC
	0x03BDB79C ADRP X20, 0x808000
	0x03BDB7A0 LDRB W8, [X20 + 0xF]
	0x03BDB7A4 CBNZ W8, 0x3BDB7BC
	0x03BDB7A8 ADRP X0, 0x582000
	0x03BDB7AC LDR X0, [X0 + 0xF90]
	0x03BDB7B0 BL 0x1C16CF4
	0x03BDB7B4 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x808000
	006 Move X21, 0x583000
	007 Move W8, [X20+3788]
	008 Move X21, [X21+3728]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x583000
	015 Move X0, [X0+3728]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3788], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X2, X31
	022 Call String.op_Equality, X0, X1
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {34}
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move W0, 1
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call Internal.SetEyeTrackedFoveatedRenderingEnabled, X0
	033 Return 
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return 

Method: System.Boolean IsEyeTrackingPermissionGranted()

Disassembly:
	0x03BDB7C0 LDR X8, [X8 + 0xF90]
	0x03BDB7C4 ADRP X9, 0x518000
	0x03BDB7C8 LDR X8, [X8]
	0x03BDB7CC LDR X9, [X9 + 0x598]
	0x03BDB7D0 LDR X8, [X8 + 0xB8]
	0x03BDB7D4 LDR X0, [X9]
	0x03BDB7D8 LDR X20, [X8]
	0x03BDB7DC LDR W9, [X0 + 0xE0]
	0x03BDB7E0 CBNZ W9, 0x3BDB7E8
	0x03BDB7E4 BL 0x1C16DFC
	0x03BDB7E8 MOV X0, X20
	0x03BDB7EC MOV X1, X31
	0x03BDB7F0 MOV X2, X31
	0x03BDB7F4 BL 0x3C354F8
	0x03BDB7F8 TBZ X0, 0x0, 0x3BDB8D0
	0x03BDB7FC CBZ X20, 0x3BDBA10
	0x03BDB800 LDRB W8, [X20 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x808000
	005 Move X20, 0x583000
	006 Move W8, [X19+3789]
	007 Move X20, [X20+3728]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x583000
	013 Move X0, [X0+3728]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3789], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X1, X31
	021 Move X30, [X31+32]
	022 Call Permission.HasUserAuthorizedPermission, X0
	023 Return X0

Method: System.Boolean get_useDynamicFoveatedRendering()

Disassembly:
	0x03BDB804 MOV X0, X31

ISIL:
	001 Call Internal.GetTiledMultiResSupported
	002 Return X0

Method: System.Void set_useDynamicFoveatedRendering(System.Boolean value)

Disassembly:
	0x03BDB80C LDRB W8, [X20 + 0x22]
	0x03BDB810 STRH W8, [X31 + 0x58]
	0x03BDB814 LDR W22, [X20 + 0x1C]
	0x03BDB818 BL 0x3C113A8
	0x03BDB81C CMP W0, 0x1
	0x03BDB820 CSET W8, EQ
	0x03BDB824 STRH W8, [X31 + 0x2C]
	0x03BDB828 LDRB W8, [X20 + 0x23]
	0x03BDB82C LDRH W0, [X31 + 0x58]
	0x03BDB830 LDRH W16, [X31 + 0x5C]
	0x03BDB834 LDRH W1, [X31 + 0x2C]
	0x03BDB838 STRH W8, [X31 + 0x28]
	0x03BDB83C LDRB W8, [X20 + 0x24]
	0x03BDB840 LDRH W2, [X31 + 0x28]
	0x03BDB844 STRH W8, [X31 + 0x24]
	0x03BDB848 LDRB W9, [X20 + 0x25]
	0x03BDB84C STRH W9, [X31 + 0x20]
	0x03BDB850 LDRB W10, [X20 + 0x26]
	0x03BDB854 STRH W10, [X31 + 0x1C]
	0x03BDB858 LDRB W11, [X20 + 0x27]
	0x03BDB85C STRH W11, [X31 + 0x18]
	0x03BDB860 LDRB W12, [X20 + 0x2C]
	0x03BDB864 LDR W13, [X20 + 0x28]
	0x03BDB868 STRH W12, [X31 + 0x14]
	0x03BDB86C LDRB W14, [X20 + 0x2D]
	0x03BDB870 STRH W14, [X31 + 0x10]
	0x03BDB874 LDRB W15, [X20 + 0x2E]
	0x03BDB878 STRH W15, [X31 + 0xC]
	0x03BDB87C LDRB W17, [X20 + 0x2F]
	0x03BDB880 STRH W17, [X31 + 0x8]
	0x03BDB884 LDRB W3, [X20 + 0x21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x808000
	005 Move W8, [X20+3790]
	006 Move W19, W0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x519000
	012 Move X0, [X0+2600]
	013 Call 0x1C17CF4
	014 Move X0, 0x583000
	015 Move X0, [X0+3736]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3790], W8
	019 Call Internal.GetTiledMultiResSupported
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {36}
	024 Move X8, 0x519000
	025 Move X8, [X8+2600]
	026 Move X20, 0x583000
	027 Move X0, [X8]
	028 Move W8, [X0+224]
	029 Move X20, [X20+3736]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, [X20]
	034 Move X1, X31
	035 Call Debug.LogWarning, X0
	036 And W0, W19, 1
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Call Internal.SetTiledMultiResDynamic, X0
	041 Return 

Method: System.Int32 get_foveatedRenderingLevel()

Disassembly:
	0x03BDB890 STRH W16, [X31 + 0x30]
	0x03BDB894 STRH W22, [X31 + 0x34]
	0x03BDB898 STRH W1, [X31 + 0x36]
	0x03BDB89C STRH W2, [X31 + 0x38]
	0x03BDB8A0 STRH W8, [X31 + 0x3A]
	0x03BDB8A4 STRH W9, [X31 + 0x3C]
	0x03BDB8A8 STRH W10, [X31 + 0x3E]
	0x03BDB8AC STRH W11, [X31 + 0x40]
	0x03BDB8B0 STRH W12, [X31 + 0x42]
	0x03BDB8B4 STRH W14, [X31 + 0x44]
	0x03BDB8B8 STRH W15, [X31 + 0x46]
	0x03BDB8BC STRH W17, [X31 + 0x48]
	0x03BDB8C0 STRH W3, [X31 + 0x4]
	0x03BDB8C4 STRH W3, [X31 + 0x4A]
	0x03BDB8C8 STRH W13, [X31 + 0x4C]
	0x03BDB8CC BL 0x3BDDA1C
	0x03BDB8D0 LDR X0, [X21]
	0x03BDB8D4 LDR W8, [X0 + 0xE0]
	0x03BDB8D8 CBNZ W8, 0x3BDB8E4
	0x03BDB8DC BL 0x1C16DFC
	0x03BDB8E0 LDR X0, [X21]
	0x03BDB8E4 ADRP X9, 0x582000
	0x03BDB8E8 ADRP X10, 0x582000
	0x03BDB8EC LDR X8, [X0 + 0xB8]
	0x03BDB8F0 LDR X9, [X9 + 0xF88]
	0x03BDB8F4 LDR X10, [X10 + 0xF58]
	0x03BDB8F8 MOV X0, X19
	0x03BDB8FC LDR X1, [X8]
	0x03BDB900 LDR X2, [X9]
	0x03BDB904 LDR X3, [X10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x808000
	004 Move W8, [X19+3791]
	005 Move TEMP, X8
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfEqual {17}
	009 Move X0, 0x519000
	010 Move X0, [X0+2600]
	011 Call 0x1C17CF4
	012 Move X0, 0x583000
	013 Move X0, [X0+3744]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3791], W8
	017 Call Internal.GetTiledMultiResSupported
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {26}
	022 Move X30, [X31+16]
	023 Move X19, [X31+24]
	024 Call Internal.GetTiledMultiResLevel
	025 Return X0
	026 Move X8, 0x519000
	027 Move X8, [X8+2600]
	028 Move X19, 0x583000
	029 Move X0, [X8]
	030 Move W8, [X0+224]
	031 Move X19, [X19+3744]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, [X19]
	036 Move X1, X31
	037 Call Debug.LogWarning, X0
	038 Move TEMP, 0
	039 Not TEMP
	040 Move W0, TEMP
	041 Move X30, [X31+16]
	042 Move X19, [X31+24]
	043 Return X0

Method: System.Void set_foveatedRenderingLevel(System.Int32 value)

Disassembly:
	0x03BDB90C LDR X8, [X21]
	0x03BDB910 ADRP X9, 0x582000
	0x03BDB914 ADRP X10, 0x582000
	0x03BDB918 MOV X0, X19
	0x03BDB91C LDR X8, [X8 + 0xB8]
	0x03BDB920 LDR X9, [X9 + 0xF80]
	0x03BDB924 LDR X10, [X10 + 0xF60]
	0x03BDB928 LDR X1, [X8 + 0x8]
	0x03BDB92C LDR X2, [X9]
	0x03BDB930 LDR X3, [X10]
	0x03BDB934 BL 0x22ADA1C
	0x03BDB938 MOV X0, X19
	0x03BDB93C BL 0x3BDB5CC
	0x03BDB940 CBNZ X0, 0x3BDB950
	0x03BDB944 MOV X0, X19
	0x03BDB948 BL 0x3BDB630
	0x03BDB94C CBZ X0, 0x3BDB9C4
	0x03BDB950 MOV X0, X19
	0x03BDB954 BL 0x3BDB5CC
	0x03BDB958 CBZ X0, 0x3BDB970
	0x03BDB95C MOV X0, X19
	0x03BDB960 BL 0x3BDB630
	0x03BDB964 CBZ X0, 0x3BDB994
	0x03BDB968 BL 0x3BDBD60
	0x03BDB96C B 0x3BDB9F0
	0x03BDB970 ADRP X8, 0x518000
	0x03BDB974 LDR X8, [X8 + 0xA28]
	0x03BDB978 LDR X0, [X8]
	0x03BDB97C LDR W8, [X0 + 0xE0]
	0x03BDB980 CBNZ W8, 0x3BDB988
	0x03BDB984 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x808000
	005 Move W8, [X20+3792]
	006 Move W19, W0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x519000
	012 Move X0, [X0+2600]
	013 Call 0x1C17CF4
	014 Move X0, 0x583000
	015 Move X0, [X0+3752]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3792], W8
	019 Call Internal.GetTiledMultiResSupported
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {36}
	024 Move X8, 0x519000
	025 Move X8, [X8+2600]
	026 Move X20, 0x583000
	027 Move X0, [X8]
	028 Move W8, [X0+224]
	029 Move X20, [X20+3752]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, [X20]
	034 Move X1, X31
	035 Call Debug.LogWarning, X0
	036 Move W0, W19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Call Internal.SetTiledMultiResLevel, X0
	041 Return 

Method: System.Boolean get_eyeTrackedFoveatedRenderingSupported()

Disassembly:
	0x03BDB98C LDR X8, [X8 + 0xF70]

ISIL:
	001 Call Internal.GetEyeTrackedFoveatedRenderingSupported
	002 Return X0

Method: System.Boolean get_eyeTrackedFoveatedRenderingEnabled()

Disassembly:
	0x03BDB994 ADRP X8, 0x518000
	0x03BDB998 LDR X8, [X8 + 0xA28]
	0x03BDB99C LDR X0, [X8]
	0x03BDB9A0 LDR W8, [X0 + 0xE0]
	0x03BDB9A4 CBNZ W8, 0x3BDB9AC
	0x03BDB9A8 BL 0x1C16DFC
	0x03BDB9AC ADRP X8, 0x582000
	0x03BDB9B0 LDR X8, [X8 + 0xF68]

ISIL:
	001 Move [X31-16], X30
	002 Call Internal.GetEyeTrackedFoveatedRenderingSupported
	003 Move TEMP, X0
	004 And TEMP, TEMP, 1
	005 Compare TEMP, 1
	006 JumpIfNotEqual {10}
	007 Move X30, [X31+16]
	008 Call Internal.GetEyeTrackedFoveatedRenderingEnabled
	009 Return X0
	010 Move W0, W31
	011 Move X30, [X31+16]
	012 Return X0

Method: System.Void set_eyeTrackedFoveatedRenderingEnabled(System.Boolean value)

Disassembly:
	0x03BDB9B8 MOV X1, X31
	0x03BDB9BC BL 0x3C0649C
	0x03BDB9C0 B 0x3BDB9F0
	0x03BDB9C4 ADRP X8, 0x518000
	0x03BDB9C8 LDR X8, [X8 + 0xA28]
	0x03BDB9CC LDR X0, [X8]
	0x03BDB9D0 LDR W8, [X0 + 0xE0]
	0x03BDB9D4 CBNZ W8, 0x3BDB9DC
	0x03BDB9D8 BL 0x1C16DFC
	0x03BDB9DC ADRP X8, 0x582000
	0x03BDB9E0 LDR X8, [X8 + 0xF78]
	0x03BDB9E4 MOV X1, X31
	0x03BDB9E8 LDR X0, [X8]
	0x03BDB9EC BL 0x3C06A04
	0x03BDB9F0 MOV X0, X19
	0x03BDB9F4 BL 0x3BDB5CC
	0x03BDB9F8 CBZ X0, 0x3BDB76C
	0x03BDB9FC MOV X0, X19
	0x03BDBA00 BL 0x3BDB630
	0x03BDBA04 CMP X0, 0x0
	0x03BDBA08 CSET W0, NE
	0x03BDBA0C B 0x3BDB76C
	0x03BDBA10 BL 0x1C16F20
	0x03BDBA14 STR X30, [X31 - 0x30]!
	0x03BDBA18 STP X22, X21, [X31 + 0x10]
	0x03BDBA1C STP X20, X19, [X31 + 0x20]
	0x03BDBA20 ADRP X20, 0x807000
	0x03BDBA24 ADRP X19, 0x518000
	0x03BDBA28 LDRB W8, [X20 + 0xEE6]
	0x03BDBA2C LDR X19, [X19 + 0x970]
	0x03BDBA30 TBNZ X8, 0x0, 0x3BDBACC
	0x03BDBA34 ADRP X0, 0x518000
	0x03BDBA38 LDR X0, [X0 + 0x970]
	0x03BDBA3C BL 0x1C16CF4
	0x03BDBA40 ADRP X0, 0x518000
	0x03BDBA44 LDR X0, [X0 + 0xA28]
	0x03BDBA48 BL 0x1C16CF4
	0x03BDBA4C ADRP X0, 0x520000
	0x03BDBA50 LDR X0, [X0 + 0x600]
	0x03BDBA54 BL 0x1C16CF4
	0x03BDBA58 ADRP X0, 0x545000
	0x03BDBA5C LDR X0, [X0 + 0x3B0]
	0x03BDBA60 BL 0x1C16CF4
	0x03BDBA64 ADRP X0, 0x582000
	0x03BDBA68 LDR X0, [X0 + 0xF98]
	0x03BDBA6C BL 0x1C16CF4
	0x03BDBA70 ADRP X0, 0x582000
	0x03BDBA74 LDR X0, [X0 + 0xFA0]
	0x03BDBA78 BL 0x1C16CF4
	0x03BDBA7C ADRP X0, 0x550000
	0x03BDBA80 LDR X0, [X0 + 0x5E8]
	0x03BDBA84 BL 0x1C16CF4
	0x03BDBA88 ADRP X0, 0x582000
	0x03BDBA8C LDR X0, [X0 + 0xFA8]
	0x03BDBA90 BL 0x1C16CF4
	0x03BDBA94 ADRP X0, 0x550000
	0x03BDBA98 LDR X0, [X0 + 0x5F0]
	0x03BDBA9C BL 0x1C16CF4
	0x03BDBAA0 ADRP X0, 0x582000
	0x03BDBAA4 LDR X0, [X0 + 0xFB0]
	0x03BDBAA8 BL 0x1C16CF4
	0x03BDBAAC ADRP X0, 0x582000
	0x03BDBAB0 LDR X0, [X0 + 0xFB8]
	0x03BDBAB4 BL 0x1C16CF4
	0x03BDBAB8 ADRP X0, 0x520000
	0x03BDBABC LDR X0, [X0 + 0x5E8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x808000
	005 Move W8, [X20+3793]
	006 Move W19, W0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {25}
	011 Move X0, 0x51A000
	012 Move X0, [X0+3688]
	013 Call 0x1C17CF4
	014 Move X0, 0x55C000
	015 Move X0, [X0+1864]
	016 Call 0x1C17CF4
	017 Move X0, 0x583000
	018 Move X0, [X0+3760]
	019 Call 0x1C17CF4
	020 Move X0, 0x583000
	021 Move X0, [X0+3728]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+3793], W8
	025 Call Internal.GetEyeTrackedFoveatedRenderingSupported
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {40}
	030 Move TEMP, X19
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {44}
	034 Call Utils.IsEyeTrackingPermissionGranted
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {50}
	039 Move W0, 1
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Return 
	044 Move W0, W31
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Call Internal.SetEyeTrackedFoveatedRenderingEnabled, X0
	049 Return 
	050 Move X8, 0x55C000
	051 Move X8, [X8+1864]
	052 Move X0, [X8]
	053 Call 0x1C17F10
	054 Move X1, X31
	055 Move X19, X0
	056 Call PermissionCallbacks..ctor, X0
	057 Move X8, 0x51A000
	058 Move X8, [X8+3688]
	059 Move X0, [X8]
	060 Call 0x1C17F10
	061 Move X8, 0x583000
	062 Move X8, [X8+3760]
	063 Move X1, X31
	064 Move X3, X31
	065 Move X20, X0
	066 Move X2, [X8]
	067 Call Action`1<Object>..ctor, X0, X1, X2
	068 Compare X19, 0
	069 JumpIfEqual {84}
	070 Move X0, X19
	071 Move X1, X20
	072 Move X2, X31
	073 Call PermissionCallbacks.add_PermissionGranted, X0, X1
	074 Move X8, 0x583000
	075 Move X8, [X8+3728]
	076 Move X1, X19
	077 Move X20, [X31+16]
	078 Move X19, [X31+24]
	079 Move X2, X31
	080 Move X0, [X8]
	081 Move X30, [X31+32]
	082 Call Permission.RequestUserPermission, X0, X1
	083 Return 
	084 Call 0x1C17F20

Method: System.Boolean SetFoveationLevel(System.Int32 level)

Disassembly:
	0x03BDBAC0 BL 0x1C16CF4
	0x03BDBAC4 MOVZ W8, 0x1
	0x03BDBAC8 STRB W8, [X20 + 0xEE6]
	0x03BDBACC LDR X0, [X19]
	0x03BDBAD0 ADRP X19, 0x582000
	0x03BDBAD4 ADRP X20, 0x520000
	0x03BDBAD8 LDR W8, [X0 + 0xE0]
	0x03BDBADC LDR X19, [X19 + 0xFA0]
	0x03BDBAE0 LDR X20, [X20 + 0x600]
	0x03BDBAE4 CBNZ W8, 0x3BDBAEC
	0x03BDBAE8 BL 0x1C16DFC
	0x03BDBAEC MOV X0, X31
	0x03BDBAF0 BL 0x3C019E8
	0x03BDBAF4 LDR X8, [X20]
	0x03BDBAF8 LDR X19, [X19]
	0x03BDBAFC MOV X20, X0
	0x03BDBB00 LDR W9, [X8 + 0xE0]
	0x03BDBB04 CBNZ W9, 0x3BDBB10
	0x03BDBB08 MOV X0, X8
	0x03BDBB0C BL 0x1C16DFC
	0x03BDBB10 MOV X0, X20
	0x03BDBB14 MOV X1, X19
	0x03BDBB18 MOV X2, X31
	0x03BDBB1C BL 0x3632B2C
	0x03BDBB20 CBZ X0, 0x3BDBD28
	0x03BDBB24 MOV X1, X31
	0x03BDBB28 MOV X19, X0
	0x03BDBB2C BL 0x362F808
	0x03BDBB30 TBZ X0, 0x0, 0x3BDBD14
	0x03BDBB34 LDR X8, [X19]
	0x03BDBB38 MOV X0, X19
	0x03BDBB3C LDP X9, X1, [X8 + 0x188]
	0x03BDBB40 BLR X9
	0x03BDBB44 CBZ X0, 0x3BDBD28
	0x03BDBB48 ADRP X8, 0x550000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x808000
	005 Move W8, [X19+3794]
	006 Move W20, W0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x519000
	012 Move X0, [X0+2600]
	013 Call 0x1C17CF4
	014 Move X0, 0x583000
	015 Move X0, [X0+3752]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+3794], W8
	019 Call Internal.GetTiledMultiResSupported
	020 Move W19, W0
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {27}
	025 Move W0, W20
	026 Call Internal.SetTiledMultiResLevel, X0
	027 Move X8, 0x519000
	028 Move X8, [X8+2600]
	029 Move X20, 0x583000
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Move X20, [X20+3752]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, [X20]
	037 Move X1, X31
	038 Call Debug.LogWarning, X0
	039 And W0, W19, 1
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Return X0

Method: System.Boolean EnableDynamicFFR(System.Boolean enable)

Disassembly:
	0x03BDBB4C LDR X8, [X8 + 0x5E8]
	0x03BDBB50 MOV X2, X31
	0x03BDBB54 LDR X1, [X8]
	0x03BDBB58 BL 0x362FAB4
	0x03BDBB5C CBZ X0, 0x3BDBD28
	0x03BDBB60 MOV X1, X31
	0x03BDBB64 BL 0x362F62C
	0x03BDBB68 MOV X1, X31
	0x03BDBB6C BL 0x337BA10
	0x03BDBB70 LDR X8, [X19]
	0x03BDBB74 MOV W20, W0
	0x03BDBB78 MOV X0, X19
	0x03BDBB7C LDP X9, X1, [X8 + 0x188]
	0x03BDBB80 BLR X9
	0x03BDBB84 CBZ X0, 0x3BDBD28
	0x03BDBB88 ADRP X8, 0x550000
	0x03BDBB8C LDR X8, [X8 + 0x5F0]
	0x03BDBB90 MOV X2, X31
	0x03BDBB94 LDR X1, [X8]
	0x03BDBB98 BL 0x362FAB4
	0x03BDBB9C CBZ X0, 0x3BDBD28
	0x03BDBBA0 MOV X1, X31
	0x03BDBBA4 BL 0x362F62C
	0x03BDBBA8 MOV X1, X31
	0x03BDBBAC BL 0x337BA10
	0x03BDBBB0 LDR X8, [X19]
	0x03BDBBB4 MOV W21, W0
	0x03BDBBB8 MOV X0, X19
	0x03BDBBBC LDP X9, X1, [X8 + 0x188]
	0x03BDBBC0 BLR X9
	0x03BDBBC4 CBZ X0, 0x3BDBD28
	0x03BDBBC8 ADRP X8, 0x582000
	0x03BDBBCC LDR X8, [X8 + 0xFB8]
	0x03BDBBD0 MOV X2, X31
	0x03BDBBD4 LDR X1, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x808000
	005 Move W8, [X19+3795]
	006 Move W20, W0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x519000
	012 Move X0, [X0+2600]
	013 Call 0x1C17CF4
	014 Move X0, 0x583000
	015 Move X0, [X0+3736]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+3795], W8
	019 Call Internal.GetTiledMultiResSupported
	020 Move W19, W0
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {27}
	025 And W0, W20, 1
	026 Call Internal.SetTiledMultiResDynamic, X0
	027 Move X8, 0x519000
	028 Move X8, [X8+2600]
	029 Move X20, 0x583000
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Move X20, [X20+3736]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, [X20]
	037 Move X1, X31
	038 Call Debug.LogWarning, X0
	039 And W0, W19, 1
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Return X0

Method: System.Int32 GetFoveationLevel()

Disassembly:
	0x03BDBBD8 BL 0x362FAB4
	0x03BDBBDC CBZ X0, 0x3BDBD28
	0x03BDBBE0 MOV X1, X31
	0x03BDBBE4 BL 0x362F62C
	0x03BDBBE8 MOV X1, X31
	0x03BDBBEC BL 0x337BA10
	0x03BDBBF0 LDR X8, [X19]
	0x03BDBBF4 MOV W22, W0
	0x03BDBBF8 MOV X0, X19
	0x03BDBBFC LDP X9, X1, [X8 + 0x188]
	0x03BDBC00 BLR X9
	0x03BDBC04 CBZ X0, 0x3BDBD28
	0x03BDBC08 ADRP X8, 0x520000
	0x03BDBC0C LDR X8, [X8 + 0x5E8]
	0x03BDBC10 MOV X2, X31
	0x03BDBC14 LDR X1, [X8]
	0x03BDBC18 BL 0x362FAB4
	0x03BDBC1C CBZ X0, 0x3BDBD28
	0x03BDBC20 MOV X1, X31
	0x03BDBC24 BL 0x362F62C
	0x03BDBC28 CMP W20, 0x7E5
	0x03BDBC2C B.NE 0x3BDBC6C
	0x03BDBC30 CMP W21, 0x3
	0x03BDBC34 B.LT 0x3BDBC48
	0x03BDBC38 MOVZ W0, 0x1
	0x03BDBC3C B.NE 0x3BDBD18
	0x03BDBC40 CMP W22, 0x3
	0x03BDBC44 B.GT 0x3BDBD18
	0x03BDBC48 ADRP X8, 0x518000
	0x03BDBC4C LDR X8, [X8 + 0xA28]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x808000
	004 Move W8, [X19+3796]
	005 Move TEMP, X8
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfEqual {17}
	009 Move X0, 0x519000
	010 Move X0, [X0+2600]
	011 Call 0x1C17CF4
	012 Move X0, 0x583000
	013 Move X0, [X0+3744]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3796], W8
	017 Call Internal.GetTiledMultiResSupported
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {26}
	022 Move X30, [X31+16]
	023 Move X19, [X31+24]
	024 Call Internal.GetTiledMultiResLevel
	025 Return X0
	026 Move X8, 0x519000
	027 Move X8, [X8+2600]
	028 Move X19, 0x583000
	029 Move X0, [X8]
	030 Move W8, [X0+224]
	031 Move X19, [X19+3744]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, [X19]
	036 Move X1, X31
	037 Call Debug.LogWarning, X0
	038 Move TEMP, 0
	039 Not TEMP
	040 Move W0, TEMP
	041 Move X30, [X31+16]
	042 Move X19, [X31+24]
	043 Return X0

