Type: Unity.XR.Oculus.OculusRestarter/<PauseAndRestartCoroutine>d__22

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x03BDFB94 STR X0, [X19 + 0x220]
	0x03BDFB98 ADRP X8, 0x569000
	0x03BDFB9C LDR X8, [X8 + 0xD58]
	0x03BDFBA0 LDR X2, [X20]
	0x03BDFBA4 MOV X0, X19
	0x03BDFBA8 LDR X1, [X8]
	0x03BDFBAC BL 0x21FC754
	0x03BDFBB0 STR X0, [X19 + 0x228]
	0x03BDFBB4 ADRP X8, 0x569000
	0x03BDFBB8 LDR X8, [X8 + 0xD60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x03BDFC60 LDR X8, [X8 + 0xE08]
	0x03BDFC64 LDR X2, [X20]
	0x03BDFC68 MOV X0, X19
	0x03BDFC6C LDR X1, [X8]
	0x03BDFC70 BL 0x21FC754
	0x03BDFC74 STR X0, [X19 + 0x260]
	0x03BDFC78 ADRP X8, 0x57F000

ISIL:
	001 Move W8, [X0+16]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Add W31, W8, 3
	004 Call <PauseAndRestartCoroutine>d__22.<>m__Finally1, X0
	005 Return 
	006 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x03BDFC7C LDR X8, [X8 + 0x198]
	0x03BDFC80 LDR X2, [X20]
	0x03BDFC84 MOV X0, X19
	0x03BDFC88 LDR X1, [X8]
	0x03BDFC8C BL 0x21FC754
	0x03BDFC90 STR X0, [X19 + 0x268]
	0x03BDFC94 ADRP X8, 0x57F000
	0x03BDFC98 LDR X8, [X8 + 0x180]
	0x03BDFC9C LDR X2, [X20]
	0x03BDFCA0 MOV X0, X19
	0x03BDFCA4 LDR X1, [X8]
	0x03BDFCA8 BL 0x21FC754
	0x03BDFCAC STR X0, [X19 + 0x270]
	0x03BDFCB0 LDP X20, X19, [X31 + 0x50]
	0x03BDFCB4 LDP X22, X21, [X31 + 0x40]
	0x03BDFCB8 LDP X24, X23, [X31 + 0x30]
	0x03BDFCBC LDP X26, X25, [X31 + 0x20]
	0x03BDFCC0 LDP X28, X27, [X31 + 0x10]
	0x03BDFCC4 LDP X29, X30, [X31], #0x60
	0x03BDFCC8 RET
	0x03BDFCCC MOV X1, X31
	0x03BDFCD0 B 0x37DB5B8
	0x03BDFCD4 LDR X0, [X0 + 0x190]
	0x03BDFCD8 RET
	0x03BDFCDC STR X1, [X0 + 0x190]
	0x03BDFCE0 RET
	0x03BDFCE4 LDR X0, [X0 + 0x198]
	0x03BDFCE8 RET
	0x03BDFCEC STR X1, [X0 + 0x198]
	0x03BDFCF0 RET
	0x03BDFCF4 LDR X0, [X0 + 0x1A0]
	0x03BDFCF8 RET
	0x03BDFCFC STR X1, [X0 + 0x1A0]
	0x03BDFD00 RET
	0x03BDFD04 LDR X0, [X0 + 0x1A8]
	0x03BDFD08 RET
	0x03BDFD0C STR X1, [X0 + 0x1A8]
	0x03BDFD10 RET
	0x03BDFD14 LDR X0, [X0 + 0x1B0]
	0x03BDFD18 RET
	0x03BDFD1C STR X1, [X0 + 0x1B0]
	0x03BDFD20 RET
	0x03BDFD24 LDR X0, [X0 + 0x1B8]
	0x03BDFD28 RET
	0x03BDFD2C STR X1, [X0 + 0x1B8]
	0x03BDFD30 RET
	0x03BDFD34 LDR X0, [X0 + 0x1C0]
	0x03BDFD38 RET
	0x03BDFD3C STR X1, [X0 + 0x1C0]
	0x03BDFD40 RET
	0x03BDFD44 LDR X0, [X0 + 0x1C8]
	0x03BDFD48 RET
	0x03BDFD4C STR X1, [X0 + 0x1C8]
	0x03BDFD50 RET
	0x03BDFD54 LDR X0, [X0 + 0x1D0]
	0x03BDFD58 RET
	0x03BDFD5C STR X1, [X0 + 0x1D0]
	0x03BDFD60 RET
	0x03BDFD64 LDR X0, [X0 + 0x1D8]
	0x03BDFD68 RET
	0x03BDFD6C STR X1, [X0 + 0x1D8]
	0x03BDFD70 RET
	0x03BDFD74 LDR X0, [X0 + 0x1E0]
	0x03BDFD78 RET
	0x03BDFD7C STR X1, [X0 + 0x1E0]
	0x03BDFD80 RET
	0x03BDFD84 LDR X0, [X0 + 0x1E8]
	0x03BDFD88 RET
	0x03BDFD8C STR X1, [X0 + 0x1E8]
	0x03BDFD90 RET
	0x03BDFD94 LDR X0, [X0 + 0x1F0]
	0x03BDFD98 RET
	0x03BDFD9C STR X1, [X0 + 0x1F0]
	0x03BDFDA0 RET
	0x03BDFDA4 LDR X0, [X0 + 0x1F8]
	0x03BDFDA8 RET
	0x03BDFDAC STR X1, [X0 + 0x1F8]
	0x03BDFDB0 RET
	0x03BDFDB4 LDR X0, [X0 + 0x200]
	0x03BDFDB8 RET
	0x03BDFDBC STR X1, [X0 + 0x200]
	0x03BDFDC0 RET
	0x03BDFDC4 LDR X0, [X0 + 0x208]
	0x03BDFDC8 RET
	0x03BDFDCC STR X1, [X0 + 0x208]
	0x03BDFDD0 RET
	0x03BDFDD4 LDR X0, [X0 + 0x210]
	0x03BDFDD8 RET
	0x03BDFDDC STR X1, [X0 + 0x210]
	0x03BDFDE0 RET
	0x03BDFDE4 LDR X0, [X0 + 0x218]
	0x03BDFDE8 RET
	0x03BDFDEC STR X1, [X0 + 0x218]
	0x03BDFDF0 RET
	0x03BDFDF4 LDR X0, [X0 + 0x220]
	0x03BDFDF8 RET
	0x03BDFDFC STR X1, [X0 + 0x220]
	0x03BDFE00 RET
	0x03BDFE04 LDR X0, [X0 + 0x228]
	0x03BDFE08 RET
	0x03BDFE0C STR X1, [X0 + 0x228]
	0x03BDFE10 RET
	0x03BDFE14 LDR X0, [X0 + 0x230]
	0x03BDFE18 RET
	0x03BDFE1C STR X1, [X0 + 0x230]
	0x03BDFE20 RET
	0x03BDFE24 STP X29, X30, [X31 - 0x60]!
	0x03BDFE28 STP X28, X27, [X31 + 0x10]
	0x03BDFE2C STP X26, X25, [X31 + 0x20]
	0x03BDFE30 STP X24, X23, [X31 + 0x30]
	0x03BDFE34 STP X22, X21, [X31 + 0x40]
	0x03BDFE38 STP X20, X19, [X31 + 0x50]
	0x03BDFE3C ADRP X22, 0x804000
	0x03BDFE40 ADRP X29, 0x565000
	0x03BDFE44 ADRP X21, 0x565000
	0x03BDFE48 ADRP X28, 0x53C000
	0x03BDFE4C ADRP X24, 0x565000
	0x03BDFE50 ADRP X26, 0x53C000
	0x03BDFE54 ADRP X25, 0x53C000
	0x03BDFE58 ADRP X23, 0x53C000
	0x03BDFE5C ADRP X27, 0x565000
	0x03BDFE60 ADRP X20, 0x565000
	0x03BDFE64 LDR X29, [X29 + 0xE70]
	0x03BDFE68 LDR X21, [X21 + 0xE38]
	0x03BDFE6C LDR X28, [X28 + 0x138]
	0x03BDFE70 LDR X24, [X24 + 0xE30]
	0x03BDFE74 LDR X26, [X26 + 0x120]
	0x03BDFE78 LDR X25, [X25 + 0x118]
	0x03BDFE7C LDR X23, [X23 + 0x328]
	0x03BDFE80 LDR X27, [X27 + 0xE18]
	0x03BDFE84 LDR X20, [X20 + 0xDD0]
	0x03BDFE88 LDRB W8, [X22 + 0xA]
	0x03BDFE8C MOV X19, X0
	0x03BDFE90 TBNZ X8, 0x0, 0x3BDFFE0
	0x03BDFE94 ADRP X0, 0x565000
	0x03BDFE98 LDR X0, [X0 + 0xE30]
	0x03BDFE9C BL 0x1C16CF4
	0x03BDFEA0 ADRP X0, 0x565000
	0x03BDFEA4 LDR X0, [X0 + 0xE18]
	0x03BDFEA8 BL 0x1C16CF4
	0x03BDFEAC ADRP X0, 0x567000
	0x03BDFEB0 LDR X0, [X0 + 0x58]
	0x03BDFEB4 BL 0x1C16CF4
	0x03BDFEB8 ADRP X0, 0x565000
	0x03BDFEBC LDR X0, [X0 + 0xED8]
	0x03BDFEC0 BL 0x1C16CF4
	0x03BDFEC4 ADRP X0, 0x565000
	0x03BDFEC8 LDR X0, [X0 + 0xE38]
	0x03BDFECC BL 0x1C16CF4
	0x03BDFED0 ADRP X0, 0x565000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], D8
	003 Move [X31+40], X30
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, 0x805000
	007 Move W8, [X20+1]
	008 Move X19, X0
	009 Move [X31+24], X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x515000
	015 Move X0, [X0+2504]
	016 Call 0x1C17CF4
	017 Move X0, 0x515000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move X0, 0x580000
	021 Move X0, [X0+264]
	022 Call 0x1C17CF4
	023 Move X0, 0x518000
	024 Move X0, [X0+3120]
	025 Call 0x1C17CF4
	026 Move X0, 0x580000
	027 Move X0, [X0+320]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+1], W8
	031 Add X8, X31, 24
	032 Move [X31+8], X31
	033 Move [X31+16], X8
	034 Move W8, [X19+16]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Compare W8, 0
	037 JumpIfNotEqual {133}
	038 Move TEMP, 2
	039 Not TEMP
	040 Move W8, TEMP
	041 Move [X19+16], W8
	042 Move X8, 0x518000
	043 Move V8, [X19+32]
	044 Move X8, [X8+3120]
	045 Move X0, [X8]
	046 Call 0x1C17F10
	047 Move X19, X0
	048 Move V0, V8
	049 Move X1, X31
	050 Call WaitForSeconds..ctor, X0, V0
	051 Move X8, [X31+24]
	052 Move W0, 1
	053 Move [X8+24], X19
	054 Move [X8+16], W0
	055 Move TEMP, 2
	056 Not TEMP
	057 Move W8, TEMP
	058 Move [X19+16], W8
	059 Move X20, 0x580000
	060 Move X20, [X20+264]
	061 Move X19, [X19+40]
	062 Move X0, [X20]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {68}
	066 Call 0x1C17DFC
	067 Move X0, [X20]
	068 Move X8, [X0+184]
	069 Move W9, [X8+16]
	070 Add W9, W9, 1
	071 Move [X8+16], W9
	072 Compare X19, 0
	073 JumpIfEqual {140}
	074 Move X8, [X19+64]
	075 Compare X8, 0
	076 JumpIfEqual {123}
	077 Move X8, 0x515000
	078 Move X8, [X8+2504]
	079 Move X19, [X8]
	080 Move X8, [X19+56]
	081 Compare X8, 0
	082 JumpIfNotEqual {86}
	083 Move X0, X19
	084 Call 0x1C5D6E0
	085 Move X8, [X19+56]
	086 Move X0, [X8+16]
	087 Move W8, [X0+309]
	088 Move TEMP, X8
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfEqual {93}
	092 Call 0x1C5D684
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Move X8, [X19+56]
	098 Move X0, [X8+16]
	099 Move W8, [X0+309]
	100 Move TEMP, X8
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {105}
	104 Call 0x1C5D684
	105 Move X9, 0x580000
	106 Move X8, [X0+184]
	107 Move X9, [X9+320]
	108 Move X1, [X8]
	109 Move X0, [X9]
	110 Move X2, X31
	111 Call String.Format, X0, X1
	112 Move X8, 0x515000
	113 Move X8, [X8+2600]
	114 Move X19, X0
	115 Move X0, [X8]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {120}
	119 Call 0x1C17DFC
	120 Move X0, X19
	121 Move X1, X31
	122 Call Debug.LogError, X0
	123 Move W1, 1
	124 Move X0, X19
	125 Call OculusRestarter.RestartCoroutine, X0, X1
	126 Move X1, X0
	127 Move X0, X19
	128 Move X2, X31
	129 Call MonoBehaviour.StartCoroutine, X0, X1
	130 Move [X19+64], X0
	131 Move X0, [X31+24]
	132 Call <PauseAndRestartCoroutine>d__22.<>m__Finally1, X0
	133 Move W0, W31
	134 Move X20, [X31+48]
	135 Move X19, [X31+56]
	136 Move X30, [X31+40]
	137 Move V8, [X31+32]
	138 Add X31, X31, 64
	139 Return X0
	140 Call 0x1C17F20
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Call 0x3EB2AD0
	143 Move X19, [X0]
	144 Move [X31+8], X19
	145 Call 0x3EB2AE0
	146 Compare X19, 0
	147 JumpIfEqual {133}
	148 Add X8, X31, 8
	149 Add X0, X8, 8
	150 Call 0x1C02B0C
	151 Move X0, X19
	152 Call 0x1C17F18
	153 Compare X19, 0
	154 JumpIfNotEqual {156}
	155 Call 0x1D2D690
	156 Move X0, [X31+24]
	157 Move W8, [X0+16]
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Add W31, W8, 3
	160 Call <PauseAndRestartCoroutine>d__22.<>m__Finally1, X0
	161 Move X0, X19
	162 Call 0x1C17F18
	163 Call 0x1991590

Method: System.Void <>m__Finally1()

Disassembly:
	0x03BDFED4 LDR X0, [X0 + 0xDD0]
	0x03BDFED8 BL 0x1C16CF4
	0x03BDFEDC ADRP X0, 0x569000
	0x03BDFEE0 LDR X0, [X0]
	0x03BDFEE4 BL 0x1C16CF4
	0x03BDFEE8 ADRP X0, 0x54E000
	0x03BDFEEC LDR X0, [X0 + 0x3D0]
	0x03BDFEF0 BL 0x1C16CF4
	0x03BDFEF4 ADRP X0, 0x565000
	0x03BDFEF8 LDR X0, [X0 + 0xDC8]
	0x03BDFEFC BL 0x1C16CF4
	0x03BDFF00 ADRP X0, 0x569000
	0x03BDFF04 LDR X0, [X0 + 0x8]
	0x03BDFF08 BL 0x1C16CF4
	0x03BDFF0C ADRP X0, 0x565000
	0x03BDFF10 LDR X0, [X0 + 0xDD8]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+40]
	003 Move TEMP, 0
	004 Not TEMP
	005 Move W9, TEMP
	006 Move [X0+16], W9
	007 Compare X8, 0
	008 JumpIfEqual {20}
	009 Move X9, [X8+56]
	010 Move [X8+72], X31
	011 Compare X9, 0
	012 JumpIfEqual {18}
	013 Move X2, [X9+24]
	014 Move X0, [X9+64]
	015 Move X1, [X9+40]
	016 Move X30, [X31+16]
	017 CallNoReturn X2
	018 Move X30, [X31+16]
	019 Return 
	020 Call 0x1C17F20

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x03BDFF14 BL 0x1C16CF4
	0x03BDFF18 ADRP X0, 0x53C000

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x03BDFF1C LDR X0, [X0 + 0x320]
	0x03BDFF20 BL 0x1C16CF4
	0x03BDFF24 ADRP X0, 0x53C000
	0x03BDFF28 LDR X0, [X0 + 0x110]
	0x03BDFF2C BL 0x1C16CF4
	0x03BDFF30 ADRP X0, 0x53C000
	0x03BDFF34 LDR X0, [X0 + 0x118]
	0x03BDFF38 BL 0x1C16CF4
	0x03BDFF3C ADRP X0, 0x53C000
	0x03BDFF40 LDR X0, [X0 + 0x328]
	0x03BDFF44 BL 0x1C16CF4
	0x03BDFF48 ADRP X0, 0x565000
	0x03BDFF4C LDR X0, [X0 + 0xEA0]
	0x03BDFF50 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x515000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x580000
	011 Move X0, [X0+328]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x03BDFF54 ADRP X0, 0x565000
	0x03BDFF58 LDR X0, [X0 + 0xE70]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

