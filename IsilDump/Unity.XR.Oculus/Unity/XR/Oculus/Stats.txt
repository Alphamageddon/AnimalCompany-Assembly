Type: Unity.XR.Oculus.Stats

Method: System.String get_PluginVersion()

Disassembly:
	0x03BDD4D0 LDR X0, [X19]
	0x03BDD4D4 STR W31, [X31 + 0xC]
	0x03BDD4D8 ADRP X19, 0x581000
	0x03BDD4DC LDR W8, [X0 + 0xE0]
	0x03BDD4E0 LDR X19, [X19 + 0xD0]
	0x03BDD4E4 CBNZ W8, 0x3BDD4EC
	0x03BDD4E8 BL 0x1C16DFC
	0x03BDD4EC BL 0x3BDC620
	0x03BDD4F0 LDR X1, [X19]
	0x03BDD4F4 ADD X2, X31, 0xC
	0x03BDD4F8 MOV X3, X31
	0x03BDD4FC BL 0x3E66F20
	0x03BDD500 LDR V0, [X31 + 0xC]
	0x03BDD504 LDP X20, X19, [X31 + 0x10]
	0x03BDD508 LDR X30, [X31], #0x20
	0x03BDD50C RET
	0x03BDD510 STR X30, [X31 - 0x20]!
	0x03BDD514 STP X20, X19, [X31 + 0x10]
	0x03BDD518 ADRP X20, 0x805000
	0x03BDD51C ADRP X19, 0x581000
	0x03BDD520 LDRB W8, [X20 + 0xF01]
	0x03BDD524 LDR X19, [X19 + 0x30]
	0x03BDD528 TBNZ X8, 0x0, 0x3BDD54C
	0x03BDD52C ADRP X0, 0x581000
	0x03BDD530 LDR X0, [X0 + 0x30]
	0x03BDD534 BL 0x1C16CF4
	0x03BDD538 ADRP X0, 0x581000
	0x03BDD53C LDR X0, [X0 + 0xD8]
	0x03BDD540 BL 0x1C16CF4
	0x03BDD544 MOVZ W8, 0x1
	0x03BDD548 STRB W8, [X20 + 0xF01]
	0x03BDD54C LDR X0, [X19]
	0x03BDD550 STR W31, [X31 + 0xC]
	0x03BDD554 ADRP X19, 0x581000
	0x03BDD558 LDR W8, [X0 + 0xE0]
	0x03BDD55C LDR X19, [X19 + 0xD8]
	0x03BDD560 CBNZ W8, 0x3BDD568
	0x03BDD564 BL 0x1C16DFC
	0x03BDD568 BL 0x3BDC620
	0x03BDD56C LDR X1, [X19]
	0x03BDD570 ADD X2, X31, 0xC
	0x03BDD574 MOV X3, X31
	0x03BDD578 BL 0x3E66F20
	0x03BDD57C LDR V0, [X31 + 0xC]
	0x03BDD580 LDP X20, X19, [X31 + 0x10]
	0x03BDD584 LDR X30, [X31], #0x20
	0x03BDD588 RET
	0x03BDD58C STR X30, [X31 - 0x20]!
	0x03BDD590 STP X20, X19, [X31 + 0x10]
	0x03BDD594 ADRP X20, 0x805000
	0x03BDD598 ADRP X19, 0x581000
	0x03BDD59C LDRB W8, [X20 + 0xF02]
	0x03BDD5A0 LDR X19, [X19 + 0x30]
	0x03BDD5A4 TBNZ X8, 0x0, 0x3BDD5C8
	0x03BDD5A8 ADRP X0, 0x581000
	0x03BDD5AC LDR X0, [X0 + 0x30]
	0x03BDD5B0 BL 0x1C16CF4
	0x03BDD5B4 ADRP X0, 0x581000
	0x03BDD5B8 LDR X0, [X0 + 0xE0]
	0x03BDD5BC BL 0x1C16CF4
	0x03BDD5C0 MOVZ W8, 0x1
	0x03BDD5C4 STRB W8, [X20 + 0xF02]
	0x03BDD5C8 LDR X0, [X19]
	0x03BDD5CC STR W31, [X31 + 0xC]
	0x03BDD5D0 ADRP X19, 0x581000
	0x03BDD5D4 LDR W8, [X0 + 0xE0]
	0x03BDD5D8 LDR X19, [X19 + 0xE0]
	0x03BDD5DC CBNZ W8, 0x3BDD5E4
	0x03BDD5E0 BL 0x1C16DFC
	0x03BDD5E4 BL 0x3BDC620
	0x03BDD5E8 LDR X1, [X19]
	0x03BDD5EC ADD X2, X31, 0xC
	0x03BDD5F0 MOV X3, X31
	0x03BDD5F4 BL 0x3E66F20
	0x03BDD5F8 LDR V0, [X31 + 0xC]
	0x03BDD5FC LDP X20, X19, [X31 + 0x10]
	0x03BDD600 LDR X30, [X31], #0x20
	0x03BDD604 RET
	0x03BDD608 STR X30, [X31 - 0x20]!
	0x03BDD60C STP X20, X19, [X31 + 0x10]
	0x03BDD610 ADRP X20, 0x805000
	0x03BDD614 ADRP X19, 0x581000
	0x03BDD618 LDRB W8, [X20 + 0xF03]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x806000
	006 Move X20, 0x519000
	007 Move X21, 0x582000
	008 Move W8, [X19+3817]
	009 Move X20, [X20+632]
	010 Move X21, [X21+48]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x563000
	016 Move X0, [X0+1576]
	017 Call 0x1C17CF4
	018 Move X0, 0x517000
	019 Move X0, [X0+1560]
	020 Call 0x1C17CF4
	021 Move X0, 0x582000
	022 Move X0, [X0+48]
	023 Call 0x1C17CF4
	024 Move X0, 0x519000
	025 Move X0, [X0+632]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X19+3817], W8
	029 Move X8, [X20]
	030 Move X0, [X21]
	031 Move X8, [X8+184]
	032 Move W9, [X0+224]
	033 Move X19, [X8]
	034 Compare W9, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X21]
	038 Move X8, [X0+184]
	039 Move X0, X19
	040 Move X2, X31
	041 Move X1, [X8+8]
	042 Call String.Equals, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {82}
	047 Move X8, 0x517000
	048 Move X8, [X8+1560]
	049 Move W1, 256
	050 Move X0, [X8]
	051 Call 0x1C17D6C
	052 Move X19, X0
	053 Call Internal.GetOVRPVersion, X0
	054 Move X8, 0x563000
	055 Move X8, [X8+1576]
	056 Move X0, X19
	057 Move W1, W31
	058 Move X2, [X8]
	059 Call Array.IndexOf, X0, X1
	060 Move W20, W0
	061 Move X0, X31
	062 Call Encoding.get_ASCII
	063 Compare X0, 0
	064 JumpIfEqual {96}
	065 Move X8, [X0]
	066 Move X1, X19
	067 Move W2, W31
	068 Move W3, W20
	069 Move X9, [X8+904]
	070 Move X4, [X8+912]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X8, [X21]
	073 Move X19, X0
	074 Move W9, [X8+224]
	075 Compare W9, 0
	076 JumpIfNotEqual {80}
	077 Move X0, X8
	078 Call 0x1C17DFC
	079 Move X8, [X21]
	080 Move X9, [X8+184]
	081 Move [X9+8], X19
	082 Move X8, [X21]
	083 Move W9, [X8+224]
	084 Compare W9, 0
	085 JumpIfNotEqual {89}
	086 Move X0, X8
	087 Call 0x1C17DFC
	088 Move X8, [X21]
	089 Move X8, [X8+184]
	090 Move X20, [X31+16]
	091 Move X19, [X31+24]
	092 Move X0, [X8+8]
	093 Move X30, [X31+32]
	094 Move X21, [X31+40]
	095 Return X0
	096 Call 0x1C17F20

Method: UnityEngine.IntegratedSubsystem GetOculusDisplaySubsystem()

Disassembly:
	0x03BDD620 TBNZ X8, 0x0, 0x3BDD644
	0x03BDD624 ADRP X0, 0x581000
	0x03BDD628 LDR X0, [X0 + 0x30]
	0x03BDD62C BL 0x1C16CF4
	0x03BDD630 ADRP X0, 0x581000
	0x03BDD634 LDR X0, [X0 + 0xE8]
	0x03BDD638 BL 0x1C16CF4
	0x03BDD63C MOVZ W8, 0x1
	0x03BDD640 STRB W8, [X20 + 0xF03]
	0x03BDD644 LDR X0, [X19]
	0x03BDD648 STR W31, [X31 + 0xC]
	0x03BDD64C ADRP X19, 0x581000
	0x03BDD650 LDR W8, [X0 + 0xE0]
	0x03BDD654 LDR X19, [X19 + 0xE8]
	0x03BDD658 CBNZ W8, 0x3BDD660
	0x03BDD65C BL 0x1C16DFC
	0x03BDD660 BL 0x3BDC620
	0x03BDD664 LDR X1, [X19]
	0x03BDD668 ADD X2, X31, 0xC
	0x03BDD66C MOV X3, X31
	0x03BDD670 BL 0x3E66F20
	0x03BDD674 LDR V0, [X31 + 0xC]
	0x03BDD678 LDP X20, X19, [X31 + 0x10]
	0x03BDD67C LDR X30, [X31], #0x20
	0x03BDD680 RET
	0x03BDD684 STR X30, [X31 - 0x20]!
	0x03BDD688 STP X20, X19, [X31 + 0x10]
	0x03BDD68C ADRP X20, 0x805000
	0x03BDD690 ADRP X19, 0x581000
	0x03BDD694 LDRB W8, [X20 + 0xF04]
	0x03BDD698 LDR X19, [X19 + 0x30]
	0x03BDD69C TBNZ X8, 0x0, 0x3BDD6C0
	0x03BDD6A0 ADRP X0, 0x581000
	0x03BDD6A4 LDR X0, [X0 + 0x30]
	0x03BDD6A8 BL 0x1C16CF4
	0x03BDD6AC ADRP X0, 0x581000
	0x03BDD6B0 LDR X0, [X0 + 0xF0]
	0x03BDD6B4 BL 0x1C16CF4
	0x03BDD6B8 MOVZ W8, 0x1
	0x03BDD6BC STRB W8, [X20 + 0xF04]
	0x03BDD6C0 LDR X0, [X19]
	0x03BDD6C4 STR W31, [X31 + 0xC]
	0x03BDD6C8 ADRP X19, 0x581000
	0x03BDD6CC LDR W8, [X0 + 0xE0]
	0x03BDD6D0 LDR X19, [X19 + 0xF0]
	0x03BDD6D4 CBNZ W8, 0x3BDD6DC
	0x03BDD6D8 BL 0x1C16DFC
	0x03BDD6DC BL 0x3BDC620
	0x03BDD6E0 LDR X1, [X19]
	0x03BDD6E4 ADD X2, X31, 0xC
	0x03BDD6E8 MOV X3, X31
	0x03BDD6EC BL 0x3E66F20
	0x03BDD6F0 LDR V0, [X31 + 0xC]
	0x03BDD6F4 LDP X20, X19, [X31 + 0x10]
	0x03BDD6F8 LDR X30, [X31], #0x20
	0x03BDD6FC RET
	0x03BDD700 STR X30, [X31 - 0x20]!
	0x03BDD704 STP X20, X19, [X31 + 0x10]
	0x03BDD708 ADRP X20, 0x805000
	0x03BDD70C ADRP X19, 0x581000
	0x03BDD710 LDRB W8, [X20 + 0xF05]
	0x03BDD714 LDR X19, [X19 + 0x30]
	0x03BDD718 TBNZ X8, 0x0, 0x3BDD73C
	0x03BDD71C ADRP X0, 0x581000
	0x03BDD720 LDR X0, [X0 + 0x30]
	0x03BDD724 BL 0x1C16CF4
	0x03BDD728 ADRP X0, 0x581000
	0x03BDD72C LDR X0, [X0 + 0xF8]
	0x03BDD730 BL 0x1C16CF4
	0x03BDD734 MOVZ W8, 0x1
	0x03BDD738 STRB W8, [X20 + 0xF05]
	0x03BDD73C LDR X0, [X19]
	0x03BDD740 STR W31, [X31 + 0xC]
	0x03BDD744 ADRP X19, 0x581000
	0x03BDD748 LDR W8, [X0 + 0xE0]
	0x03BDD74C LDR X19, [X19 + 0xF8]
	0x03BDD750 CBNZ W8, 0x3BDD758
	0x03BDD754 BL 0x1C16DFC
	0x03BDD758 BL 0x3BDC620
	0x03BDD75C LDR X1, [X19]
	0x03BDD760 ADD X2, X31, 0xC
	0x03BDD764 MOV X3, X31
	0x03BDD768 BL 0x3E66F20
	0x03BDD76C LDR V0, [X31 + 0xC]
	0x03BDD770 LDP X20, X19, [X31 + 0x10]
	0x03BDD774 LDR X30, [X31], #0x20
	0x03BDD778 RET
	0x03BDD77C AND W0, W0, 0x1
	0x03BDD780 B 0x3BDDC9C
	0x03BDD784 AND W0, W0, 0x1
	0x03BDD788 B 0x3BDDC9C
	0x03BDD78C SUB X31, X31, 0x60
	0x03BDD790 STP D11, D10, [X31 + 0x30]
	0x03BDD794 STP D9, D8, [X31 + 0x40]
	0x03BDD798 STP X30, X19, [X31 + 0x50]
	0x03BDD79C ADRP X19, 0x805000
	0x03BDD7A0 LDR X0, [X19 + 0xF08]
	0x03BDD7A4 MOV V8.16B, V3.16B
	0x03BDD7A8 MOV V9.16B, V2.16B
	0x03BDD7AC MOV V10.16B, V1.16B
	0x03BDD7B0 MOV V11.16B, V0.16B
	0x03BDD7B4 CBNZ X0, 0x3BDD7FC
	0x03BDD7B8 ADRP X12, 0xFFFFFFFFFCF10000
	0x03BDD7BC LDR V0, [X12 + 0x708]
	0x03BDD7C0 ADRP X8, 0xFFFFFFFFFCF17000
	0x03BDD7C4 ADRP X10, 0xFFFFFFFFFCF1D000
	0x03BDD7C8 ADD X8, X8, 0xB90
	0x03BDD7CC MOVZ W9, 0xE
	0x03BDD7D0 ADD X10, X10, 0xB9D
	0x03BDD7D4 MOVZ W11, 0xD
	0x03BDD7D8 MOVZ W13, 0x10
	0x03BDD7DC ADD X0, X31, 0x0
	0x03BDD7E0 STP X8, X9, [X31]
	0x03BDD7E4 STP X10, X11, [X31 + 0x10]
	0x03BDD7E8 STR W13, [X31 + 0x28]
	0x03BDD7EC STR D0, [X31 + 0x20]
	0x03BDD7F0 STRB W31, [X31 + 0x2C]
	0x03BDD7F4 BL 0x1C1729C
	0x03BDD7F8 STR X0, [X19 + 0xF08]
	0x03BDD7FC MOV V0.16B, V11.16B
	0x03BDD800 MOV V1.16B, V10.16B
	0x03BDD804 MOV V2.16B, V9.16B
	0x03BDD808 MOV V3.16B, V8.16B
	0x03BDD80C BLR X0
	0x03BDD810 LDP X30, X19, [X31 + 0x50]
	0x03BDD814 LDP D9, D8, [X31 + 0x40]
	0x03BDD818 LDP D11, D10, [X31 + 0x30]
	0x03BDD81C ADD X31, X31, 0x60
	0x03BDD820 RET
	0x03BDD824 SUB X31, X31, 0x60
	0x03BDD828 STP D11, D10, [X31 + 0x30]
	0x03BDD82C STP D9, D8, [X31 + 0x40]
	0x03BDD830 STP X30, X19, [X31 + 0x50]
	0x03BDD834 ADRP X19, 0x805000
	0x03BDD838 LDR X0, [X19 + 0xF10]
	0x03BDD83C MOV V8.16B, V3.16B
	0x03BDD840 MOV V9.16B, V2.16B
	0x03BDD844 MOV V10.16B, V1.16B
	0x03BDD848 MOV V11.16B, V0.16B
	0x03BDD84C CBNZ X0, 0x3BDD890
	0x03BDD850 ADRP X11, 0xFFFFFFFFFCF10000
	0x03BDD854 LDR V0, [X11 + 0x708]
	0x03BDD858 ADRP X8, 0xFFFFFFFFFCF17000
	0x03BDD85C ADRP X10, 0xFFFFFFFFFCF27000
	0x03BDD860 ADD X8, X8, 0xB90
	0x03BDD864 MOVZ W9, 0xE
	0x03BDD868 ADD X10, X10, 0xA96
	0x03BDD86C MOVZ W12, 0x10
	0x03BDD870 ADD X0, X31, 0x0
	0x03BDD874 STP X8, X9, [X31]
	0x03BDD878 STP X10, X9, [X31 + 0x10]
	0x03BDD87C STR W12, [X31 + 0x28]
	0x03BDD880 STR D0, [X31 + 0x20]
	0x03BDD884 STRB W31, [X31 + 0x2C]
	0x03BDD888 BL 0x1C1729C
	0x03BDD88C STR X0, [X19 + 0xF10]
	0x03BDD890 MOV V0.16B, V11.16B
	0x03BDD894 MOV V1.16B, V10.16B
	0x03BDD898 MOV V2.16B, V9.16B
	0x03BDD89C MOV V3.16B, V8.16B
	0x03BDD8A0 BLR X0
	0x03BDD8A4 LDP X30, X19, [X31 + 0x50]
	0x03BDD8A8 LDP D9, D8, [X31 + 0x40]
	0x03BDD8AC LDP D11, D10, [X31 + 0x30]
	0x03BDD8B0 ADD X31, X31, 0x60
	0x03BDD8B4 RET
	0x03BDD8B8 SUB X31, X31, 0x40
	0x03BDD8BC STP X30, X19, [X31 + 0x30]
	0x03BDD8C0 ADRP X19, 0x805000
	0x03BDD8C4 LDR X8, [X19 + 0xF18]
	0x03BDD8C8 CBNZ X8, 0x3BDD910
	0x03BDD8CC ADRP X12, 0xFFFFFFFFFCF10000
	0x03BDD8D0 LDR V0, [X12 + 0x708]
	0x03BDD8D4 ADRP X8, 0xFFFFFFFFFCF17000
	0x03BDD8D8 ADRP X10, 0xFFFFFFFFFCF2B000
	0x03BDD8DC ADD X8, X8, 0xB90
	0x03BDD8E0 MOVZ W9, 0xE
	0x03BDD8E4 ADD X10, X10, 0x914
	0x03BDD8E8 MOVZ W11, 0x14
	0x03BDD8EC ADD X0, X31, 0x0
	0x03BDD8F0 STR W31, [X31 + 0x28]
	0x03BDD8F4 STP X8, X9, [X31]
	0x03BDD8F8 STP X10, X11, [X31 + 0x10]
	0x03BDD8FC STR D0, [X31 + 0x20]
	0x03BDD900 STRB W31, [X31 + 0x2C]
	0x03BDD904 BL 0x1C1729C
	0x03BDD908 MOV X8, X0
	0x03BDD90C STR X0, [X19 + 0xF18]
	0x03BDD910 BLR X8
	0x03BDD914 LDP X30, X19, [X31 + 0x30]
	0x03BDD918 CMP W0, 0x0
	0x03BDD91C CSET W0, NE
	0x03BDD920 ADD X31, X31, 0x40
	0x03BDD924 RET
	0x03BDD928 SUB X31, X31, 0x50
	0x03BDD92C STR X30, [X31 + 0x30]
	0x03BDD930 STP X20, X19, [X31 + 0x40]
	0x03BDD934 ADRP X20, 0x805000
	0x03BDD938 LDR X8, [X20 + 0xF20]
	0x03BDD93C MOV X19, X0
	0x03BDD940 CBNZ X8, 0x3BDD98C
	0x03BDD944 ADRP X12, 0xFFFFFFFFFCF10000
	0x03BDD948 LDR V0, [X12 + 0x640]
	0x03BDD94C ADRP X8, 0xFFFFFFFFFCF17000
	0x03BDD950 ADRP X10, 0xFFFFFFFFFCF27000
	0x03BDD954 ADD X8, X8, 0xB90
	0x03BDD958 MOVZ W9, 0xE

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X19, 0x806000
	009 Move X21, 0x582000
	010 Move W8, [X19+3818]
	011 Move X21, [X21+48]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {57}
	016 Move X0, 0x517000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0x574000
	020 Move X0, [X0+1768]
	021 Call 0x1C17CF4
	022 Move X0, 0x574000
	023 Move X0, [X0+1776]
	024 Call 0x1C17CF4
	025 Move X0, 0x574000
	026 Move X0, [X0+1784]
	027 Call 0x1C17CF4
	028 Move X0, 0x582000
	029 Move X0, [X0+56]
	030 Call 0x1C17CF4
	031 Move X0, 0x574000
	032 Move X0, [X0+1792]
	033 Call 0x1C17CF4
	034 Move X0, 0x574000
	035 Move X0, [X0+1824]
	036 Call 0x1C17CF4
	037 Move X0, 0x574000
	038 Move X0, [X0+1816]
	039 Call 0x1C17CF4
	040 Move X0, 0x582000
	041 Move X0, [X0+48]
	042 Call 0x1C17CF4
	043 Move X0, 0x582000
	044 Move X0, [X0+64]
	045 Call 0x1C17CF4
	046 Move X0, 0x53F000
	047 Move X0, [X0+192]
	048 Call 0x1C17CF4
	049 Move X0, 0x581000
	050 Move X0, [X0+3976]
	051 Call 0x1C17CF4
	052 Move X0, 0x582000
	053 Move X0, [X0+72]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X19+3818], W8
	057 Move X0, [X21]
	058 Move [X31+32], X31
	059 Move [X31+40], X31
	060 Move [X31+48], X31
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {66}
	064 Call 0x1C17DFC
	065 Move X0, [X21]
	066 Move X8, [X0+184]
	067 Move X19, [X8]
	068 Compare X19, 0
	069 JumpIfEqual {76}
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {187}
	073 Call 0x1C17DFC
	074 Move X8, [X21]
	075 Move X8, [X8+184]
	076 Move X8, 0x574000
	077 Move X8, [X8+1816]
	078 Move X0, [X8]
	079 Call 0x1C17F10
	080 Move X8, 0x574000
	081 Move X8, [X8+1824]
	082 Move X19, X0
	083 Move X1, [X8]
	084 Call List`1<Object>..ctor, X0
	085 Move X8, 0x53F000
	086 Move X8, [X8+192]
	087 Move X0, [X8]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Move X8, 0x582000
	093 Move X8, [X8+64]
	094 Move X0, X19
	095 Move X1, [X8]
	096 Call 0x2299534, X0
	097 Compare X19, 0
	098 JumpIfEqual {198}
	099 Move X8, 0x574000
	100 Move X8, [X8+1792]
	101 Move X0, X19
	102 Move X1, [X8]
	103 Add X8, X31, 8
	104 Call List`1<Object>.GetEnumerator, X0
	105 NotImplemented "Instruction LDUR not yet implemented."
	106 Move X8, [X31+24]
	107 Move X20, 0x574000
	108 Move X22, 0x582000
	109 Move X20, [X20+1776]
	110 Move X22, [X22+56]
	111 Move [X31+2], V0
	112 Move [X31+48], X8
	113 Move X23, 0x581000
	114 Move X23, [X23+3976]
	115 Move X1, [X20]
	116 Add X0, X31, 32
	117 Call Enumerator<Object>.MoveNext, X0
	118 Move TEMP, X0
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfNotEqual {162}
	122 Move X19, [X31+48]
	123 Compare X19, 0
	124 JumpIfEqual {196}
	125 Move X1, [X22]
	126 Move X0, X19
	127 Call 0x2E140FC, X0
	128 Compare X0, 0
	129 JumpIfEqual {197}
	130 Move X1, X31
	131 Call IntegratedSubsystemDescriptor.get_id, X0
	132 Move X1, [X23]
	133 Move X2, X31
	134 Call String.op_Equality, X0, X1
	135 Move TEMP, X0
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfNotEqual {115}
	139 Move X0, X19
	140 Move X1, X31
	141 Call IntegratedSubsystem.get_running, X0
	142 Move TEMP, X0
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfNotEqual {115}
	146 Move X0, [X21]
	147 Move W8, [X0+224]
	148 Compare W8, 0
	149 JumpIfNotEqual {152}
	150 Call 0x1C17DFC
	151 Move X0, [X21]
	152 Move X8, [X0+184]
	153 Move X9, 0x574000
	154 Add X0, X31, 32
	155 Move [X8], X19
	156 Move X8, [X21]
	157 Move X8, [X8+184]
	158 Move X9, [X9+1768]
	159 Move X19, [X8]
	160 Move X1, [X9]
	161 Call Enumerator<Object>.Dispose, X0
	162 Move X8, 0x574000
	163 Move X8, [X8+1768]
	164 Add X0, X31, 32
	165 Move X1, [X8]
	166 Call Enumerator<Object>.Dispose, X0
	167 Move X8, 0x517000
	168 Move X8, [X8+2600]
	169 Move X0, [X8]
	170 Move W8, [X0+224]
	171 Compare W8, 0
	172 JumpIfNotEqual {174}
	173 Call 0x1C17DFC
	174 Move X8, 0x582000
	175 Move X8, [X8+72]
	176 Move X1, X31
	177 Move X0, [X8]
	178 Call Debug.LogError, X0
	179 Move X0, [X21]
	180 Move W8, [X0+224]
	181 Compare W8, 0
	182 JumpIfNotEqual {185}
	183 Call 0x1C17DFC
	184 Move X0, [X21]
	185 Move X8, [X0+184]
	186 Move X19, [X8]
	187 Move X0, X19
	188 Move X20, [X31+96]
	189 Move X19, [X31+104]
	190 Move X22, [X31+80]
	191 Move X21, [X31+88]
	192 Move X30, [X31+64]
	193 Move X23, [X31+72]
	194 Add X31, X31, 112
	195 Return X0
	196 Call 0x1C17F20
	197 Call 0x1C17F20
	198 Call 0x1C17F20
	199 Move X19, X0
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move X0, X19
	202 Call 0x3EB2AD0
	203 Move X20, [X0]
	204 Call 0x3EB2AE0
	205 Move X8, 0x574000
	206 Move X8, [X8+1768]
	207 Add X0, X31, 32
	208 Move X1, [X8]
	209 Call Enumerator<Object>.Dispose, X0
	210 Compare X20, 0
	211 JumpIfEqual {167}
	212 Move X0, X20
	213 Call 0x1C17F18
	214 Move X20, X31
	215 Move X19, X0
	216 Move X8, 0x574000
	217 Move X8, [X8+1768]
	218 Move X1, [X8]
	219 Add X0, X31, 32
	220 Call Enumerator<Object>.Dispose, X0
	221 Compare X20, 0
	222 JumpIfNotEqual {225}
	223 Move X0, X19
	224 Call 0x1D2D690
	225 Move X0, X20
	226 Call 0x1C17F18
	227 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x03BDD95C ADD X10, X10, 0xAA5
	0x03BDD960 MOVZ W11, 0xD

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x03BDD964 MOVZ W13, 0x8
	0x03BDD968 ADD X0, X31, 0x0
	0x03BDD96C STP X8, X9, [X31]
	0x03BDD970 STP X10, X11, [X31 + 0x10]
	0x03BDD974 STR W13, [X31 + 0x28]
	0x03BDD978 STR D0, [X31 + 0x20]
	0x03BDD97C STRB W31, [X31 + 0x2C]
	0x03BDD980 BL 0x1C1729C
	0x03BDD984 MOV X8, X0
	0x03BDD988 STR X0, [X20 + 0xF20]
	0x03BDD98C ADD X9, X19, 0x14
	0x03BDD990 CMP X19, 0x0
	0x03BDD994 CSEL X0, X31, X9, EQ
	0x03BDD998 BLR X8
	0x03BDD99C LDP X20, X19, [X31 + 0x40]
	0x03BDD9A0 LDR X30, [X31 + 0x30]
	0x03BDD9A4 CMP W0, 0x0
	0x03BDD9A8 CSET W0, NE
	0x03BDD9AC ADD X31, X31, 0x50
	0x03BDD9B0 RET
	0x03BDD9B4 B 0x3BDD9B8
	0x03BDD9B8 SUB X31, X31, 0x40
	0x03BDD9BC STP X30, X19, [X31 + 0x30]
	0x03BDD9C0 ADRP X19, 0x805000
	0x03BDD9C4 LDR X0, [X19 + 0xF28]
	0x03BDD9C8 CBNZ X0, 0x3BDDA0C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x806000
	006 Move X21, 0x519000
	007 Move X19, 0x582000
	008 Move W8, [X20+3819]
	009 Move X21, [X21+632]
	010 Move X19, [X19+48]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x582000
	016 Move X0, [X0+48]
	017 Call 0x1C17CF4
	018 Move X0, 0x519000
	019 Move X0, [X0+632]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3819], W8
	023 Move X8, [X21]
	024 Move X9, [X19]
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X8, [X8+184]
	028 Move X9, [X9+184]
	029 Move X8, [X8]
	030 Move [X9+8], X8
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return 

