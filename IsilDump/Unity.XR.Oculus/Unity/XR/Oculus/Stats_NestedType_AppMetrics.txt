Type: Unity.XR.Oculus.Stats/AppMetrics

Method: System.Single get_AppQueueAheadTime()

Disassembly:
	0x03BDE418 STR X0, [X20 + 0xFD0]
	0x03BDE41C AND W0, W19, 0x1
	0x03BDE420 BLR X8
	0x03BDE424 LDP X20, X19, [X31 + 0x40]
	0x03BDE428 LDR X30, [X31 + 0x30]
	0x03BDE42C ADD X31, X31, 0x50
	0x03BDE430 RET
	0x03BDE434 SUB X31, X31, 0x40
	0x03BDE438 STP X30, X19, [X31 + 0x30]
	0x03BDE43C ADRP X19, 0x804000
	0x03BDE440 LDR X8, [X19 + 0xFD8]
	0x03BDE444 CBNZ X8, 0x3BDE48C
	0x03BDE448 ADRP X12, 0xFFFFFFFFFCF0F000
	0x03BDE44C LDR V0, [X12 + 0x708]
	0x03BDE450 ADRP X8, 0xFFFFFFFFFCF16000
	0x03BDE454 ADRP X10, 0xFFFFFFFFFCF18000
	0x03BDE458 ADD X8, X8, 0xB90
	0x03BDE45C MOVZ W9, 0xE
	0x03BDE460 ADD X10, X10, 0xA5A
	0x03BDE464 MOVZ W11, 0x27
	0x03BDE468 ADD X0, X31, 0x0
	0x03BDE46C STR W31, [X31 + 0x28]
	0x03BDE470 STP X8, X9, [X31]
	0x03BDE474 STP X10, X11, [X31 + 0x10]
	0x03BDE478 STR D0, [X31 + 0x20]
	0x03BDE47C STRB W31, [X31 + 0x2C]
	0x03BDE480 BL 0x1C1729C
	0x03BDE484 MOV X8, X0
	0x03BDE488 STR X0, [X19 + 0xFD8]
	0x03BDE48C BLR X8
	0x03BDE490 LDP X30, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x805000
	005 Move X19, 0x581000
	006 Move W8, [X20+3839]
	007 Move X19, [X19+48]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x581000
	013 Move X0, [X0+48]
	014 Call 0x1C17CF4
	015 Move X0, 0x581000
	016 Move X0, [X0+200]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3839], W8
	020 Move X0, [X19]
	021 Move [X31+12], W31
	022 Move X19, 0x581000
	023 Move W8, [X0+224]
	024 Move X19, [X19+200]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Call Stats.GetOculusDisplaySubsystem
	029 Move X1, [X19]
	030 Add X2, X31, 12
	031 Move X3, X31
	032 Call XRStats.TryGetStat, X0, X1, X2
	033 Move V0, [X31+12]
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return V0

Method: System.Single get_AppCPUElapsedTime()

Disassembly:
	0x03BDE494 CMP W0, 0x0
	0x03BDE498 CSET W0, NE
	0x03BDE49C ADD X31, X31, 0x40
	0x03BDE4A0 RET
	0x03BDE4A4 SUB X31, X31, 0x40
	0x03BDE4A8 STP X30, X19, [X31 + 0x30]
	0x03BDE4AC ADRP X19, 0x804000
	0x03BDE4B0 LDR X8, [X19 + 0xFE0]
	0x03BDE4B4 CBNZ X8, 0x3BDE4FC
	0x03BDE4B8 ADRP X12, 0xFFFFFFFFFCF0F000
	0x03BDE4BC LDR V0, [X12 + 0x708]
	0x03BDE4C0 ADRP X8, 0xFFFFFFFFFCF16000
	0x03BDE4C4 ADRP X10, 0xFFFFFFFFFCF16000
	0x03BDE4C8 ADD X8, X8, 0xB90
	0x03BDE4CC MOVZ W9, 0xE
	0x03BDE4D0 ADD X10, X10, 0xBB7
	0x03BDE4D4 MOVZ W11, 0x25
	0x03BDE4D8 ADD X0, X31, 0x0
	0x03BDE4DC STR W31, [X31 + 0x28]
	0x03BDE4E0 STP X8, X9, [X31]
	0x03BDE4E4 STP X10, X11, [X31 + 0x10]
	0x03BDE4E8 STR D0, [X31 + 0x20]
	0x03BDE4EC STRB W31, [X31 + 0x2C]
	0x03BDE4F0 BL 0x1C1729C
	0x03BDE4F4 MOV X8, X0
	0x03BDE4F8 STR X0, [X19 + 0xFE0]
	0x03BDE4FC BLR X8
	0x03BDE500 LDP X30, X19, [X31 + 0x30]
	0x03BDE504 CMP W0, 0x0
	0x03BDE508 CSET W0, NE
	0x03BDE50C ADD X31, X31, 0x40

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x805000
	005 Move X19, 0x581000
	006 Move W8, [X20+3840]
	007 Move X19, [X19+48]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x581000
	013 Move X0, [X0+48]
	014 Call 0x1C17CF4
	015 Move X0, 0x581000
	016 Move X0, [X0+208]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3840], W8
	020 Move X0, [X19]
	021 Move [X31+12], W31
	022 Move X19, 0x581000
	023 Move W8, [X0+224]
	024 Move X19, [X19+208]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Call Stats.GetOculusDisplaySubsystem
	029 Move X1, [X19]
	030 Add X2, X31, 12
	031 Move X3, X31
	032 Call XRStats.TryGetStat, X0, X1, X2
	033 Move V0, [X31+12]
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return V0

Method: System.Single get_CompositorDroppedFrames()

Disassembly:
	0x03BDE510 RET
	0x03BDE514 SUB X31, X31, 0x50
	0x03BDE518 STR X30, [X31 + 0x30]
	0x03BDE51C STP X20, X19, [X31 + 0x40]
	0x03BDE520 ADRP X20, 0x804000
	0x03BDE524 LDR X8, [X20 + 0xFE8]
	0x03BDE528 MOV W19, W0
	0x03BDE52C CBNZ X8, 0x3BDE578
	0x03BDE530 ADRP X12, 0xFFFFFFFFFCF0F000
	0x03BDE534 LDR V0, [X12 + 0x708]
	0x03BDE538 ADRP X8, 0xFFFFFFFFFCF16000
	0x03BDE53C ADRP X10, 0xFFFFFFFFFCF18000
	0x03BDE540 ADD X8, X8, 0xB90
	0x03BDE544 MOVZ W9, 0xE
	0x03BDE548 ADD X10, X10, 0xA82
	0x03BDE54C MOVZ W11, 0x25
	0x03BDE550 MOVZ W13, 0x4
	0x03BDE554 ADD X0, X31, 0x0
	0x03BDE558 STP X8, X9, [X31]
	0x03BDE55C STP X10, X11, [X31 + 0x10]
	0x03BDE560 STR W13, [X31 + 0x28]
	0x03BDE564 STR D0, [X31 + 0x20]
	0x03BDE568 STRB W31, [X31 + 0x2C]
	0x03BDE56C BL 0x1C1729C
	0x03BDE570 MOV X8, X0
	0x03BDE574 STR X0, [X20 + 0xFE8]
	0x03BDE578 AND W0, W19, 0x1
	0x03BDE57C BLR X8
	0x03BDE580 LDP X20, X19, [X31 + 0x40]
	0x03BDE584 LDR X30, [X31 + 0x30]
	0x03BDE588 ADD X31, X31, 0x50

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x805000
	005 Move X19, 0x581000
	006 Move W8, [X20+3841]
	007 Move X19, [X19+48]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x581000
	013 Move X0, [X0+48]
	014 Call 0x1C17CF4
	015 Move X0, 0x581000
	016 Move X0, [X0+216]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3841], W8
	020 Move X0, [X19]
	021 Move [X31+12], W31
	022 Move X19, 0x581000
	023 Move W8, [X0+224]
	024 Move X19, [X19+216]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Call Stats.GetOculusDisplaySubsystem
	029 Move X1, [X19]
	030 Add X2, X31, 12
	031 Move X3, X31
	032 Call XRStats.TryGetStat, X0, X1, X2
	033 Move V0, [X31+12]
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return V0

Method: System.Single get_CompositorLatency()

Disassembly:
	0x03BDE58C RET
	0x03BDE590 B 0x3BDE594
	0x03BDE594 SUB X31, X31, 0x40
	0x03BDE598 STP X30, X19, [X31 + 0x30]
	0x03BDE59C ADRP X19, 0x804000
	0x03BDE5A0 LDR X8, [X19 + 0xFF0]
	0x03BDE5A4 CBNZ X8, 0x3BDE5EC
	0x03BDE5A8 ADRP X12, 0xFFFFFFFFFCF0F000
	0x03BDE5AC LDR V0, [X12 + 0x708]
	0x03BDE5B0 ADRP X8, 0xFFFFFFFFFCF16000
	0x03BDE5B4 ADRP X10, 0xFFFFFFFFFCF20000
	0x03BDE5B8 ADD X8, X8, 0xB90
	0x03BDE5BC MOVZ W9, 0xE
	0x03BDE5C0 ADD X10, X10, 0x64B
	0x03BDE5C4 MOVZ W11, 0x17
	0x03BDE5C8 ADD X0, X31, 0x0
	0x03BDE5CC STR W31, [X31 + 0x28]
	0x03BDE5D0 STP X8, X9, [X31]
	0x03BDE5D4 STP X10, X11, [X31 + 0x10]
	0x03BDE5D8 STR D0, [X31 + 0x20]
	0x03BDE5DC STRB W31, [X31 + 0x2C]
	0x03BDE5E0 BL 0x1C1729C
	0x03BDE5E4 MOV X8, X0
	0x03BDE5E8 STR X0, [X19 + 0xFF0]
	0x03BDE5EC BLR X8
	0x03BDE5F0 LDP X30, X19, [X31 + 0x30]
	0x03BDE5F4 CMP W0, 0x0
	0x03BDE5F8 CSET W0, NE
	0x03BDE5FC ADD X31, X31, 0x40
	0x03BDE600 RET
	0x03BDE604 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x805000
	005 Move X19, 0x581000
	006 Move W8, [X20+3842]
	007 Move X19, [X19+48]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x581000
	013 Move X0, [X0+48]
	014 Call 0x1C17CF4
	015 Move X0, 0x581000
	016 Move X0, [X0+224]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3842], W8
	020 Move X0, [X19]
	021 Move [X31+12], W31
	022 Move X19, 0x581000
	023 Move W8, [X0+224]
	024 Move X19, [X19+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Call Stats.GetOculusDisplaySubsystem
	029 Move X1, [X19]
	030 Add X2, X31, 12
	031 Move X3, X31
	032 Call XRStats.TryGetStat, X0, X1, X2
	033 Move V0, [X31+12]
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return V0

Method: System.Single get_CompositorCPUTime()

Disassembly:
	0x03BDE608 STP X20, X19, [X31 + 0x10]
	0x03BDE60C ADRP X21, 0x804000
	0x03BDE610 ADRP X20, 0x580000
	0x03BDE614 ADRP X19, 0x580000
	0x03BDE618 LDRB W8, [X21 + 0xFF8]
	0x03BDE61C LDR X20, [X20 + 0x100]
	0x03BDE620 LDR X19, [X19 + 0x108]
	0x03BDE624 TBNZ X8, 0x0, 0x3BDE648
	0x03BDE628 ADRP X0, 0x580000
	0x03BDE62C LDR X0, [X0 + 0x108]
	0x03BDE630 BL 0x1C16CF4
	0x03BDE634 ADRP X0, 0x580000
	0x03BDE638 LDR X0, [X0 + 0x100]
	0x03BDE63C BL 0x1C16CF4
	0x03BDE640 MOVZ W8, 0x1
	0x03BDE644 STRB W8, [X21 + 0xFF8]
	0x03BDE648 LDR X8, [X19]
	0x03BDE64C LDR X9, [X20]
	0x03BDE650 ADRP X20, 0x805000
	0x03BDE654 LDR X8, [X8 + 0xB8]
	0x03BDE658 STR X9, [X8]
	0x03BDE65C LDR X0, [X19]
	0x03BDE660 LDR X8, [X0 + 0xB8]
	0x03BDE664 STR X31, [X8 + 0x8]
	0x03BDE668 STR W31, [X8 + 0x10]
	0x03BDE66C LDRB W8, [X20 + 0x10]
	0x03BDE670 CBNZ W8, 0x3BDE688
	0x03BDE674 MOV X0, X19
	0x03BDE678 BL 0x1C16CF4
	0x03BDE67C LDR X0, [X19]
	0x03BDE680 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x805000
	005 Move X19, 0x581000
	006 Move W8, [X20+3843]
	007 Move X19, [X19+48]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x581000
	013 Move X0, [X0+48]
	014 Call 0x1C17CF4
	015 Move X0, 0x581000
	016 Move X0, [X0+232]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3843], W8
	020 Move X0, [X19]
	021 Move [X31+12], W31
	022 Move X19, 0x581000
	023 Move W8, [X0+224]
	024 Move X19, [X19+232]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Call Stats.GetOculusDisplaySubsystem
	029 Move X1, [X19]
	030 Add X2, X31, 12
	031 Move X3, X31
	032 Call XRStats.TryGetStat, X0, X1, X2
	033 Move V0, [X31+12]
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return V0

Method: System.Single get_CPUStartToGPUEnd()

Disassembly:
	0x03BDE684 STRB W8, [X20 + 0x10]
	0x03BDE688 LDR W8, [X0 + 0xE0]
	0x03BDE68C CBNZ W8, 0x3BDE698
	0x03BDE690 BL 0x1C16DFC
	0x03BDE694 LDR X0, [X19]
	0x03BDE698 LDR X8, [X0 + 0xB8]
	0x03BDE69C LDP X20, X19, [X31 + 0x10]
	0x03BDE6A0 MOVZ W9, 0x40A00000
	0x03BDE6A4 STR W9, [X8 + 0x14]
	0x03BDE6A8 LDP X30, X21, [X31], #0x20
	0x03BDE6AC RET
	0x03BDE6B0 STP X30, X21, [X31 - 0x20]!
	0x03BDE6B4 STP X20, X19, [X31 + 0x10]
	0x03BDE6B8 ADRP X21, 0x804000
	0x03BDE6BC ADRP X20, 0x580000
	0x03BDE6C0 LDRB W8, [X21 + 0xFF9]
	0x03BDE6C4 LDR X20, [X20 + 0x108]
	0x03BDE6C8 MOV X19, X0
	0x03BDE6CC TBNZ X8, 0x0, 0x3BDE6E4
	0x03BDE6D0 ADRP X0, 0x580000
	0x03BDE6D4 LDR X0, [X0 + 0x108]
	0x03BDE6D8 BL 0x1C16CF4
	0x03BDE6DC MOVZ W8, 0x1
	0x03BDE6E0 STRB W8, [X21 + 0xFF9]
	0x03BDE6E4 MOVI V0.2D, 0x0
	0x03BDE6E8 STP V0, V0, [X19 + 0x20]
	0x03BDE6EC LDR X0, [X20]
	0x03BDE6F0 LDR W8, [X0 + 0xE0]
	0x03BDE6F4 CBNZ W8, 0x3BDE700
	0x03BDE6F8 BL 0x1C16DFC
	0x03BDE6FC LDR X0, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x805000
	005 Move X19, 0x581000
	006 Move W8, [X20+3844]
	007 Move X19, [X19+48]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x581000
	013 Move X0, [X0+48]
	014 Call 0x1C17CF4
	015 Move X0, 0x581000
	016 Move X0, [X0+240]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3844], W8
	020 Move X0, [X19]
	021 Move [X31+12], W31
	022 Move X19, 0x581000
	023 Move W8, [X0+224]
	024 Move X19, [X19+240]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Call Stats.GetOculusDisplaySubsystem
	029 Move X1, [X19]
	030 Add X2, X31, 12
	031 Move X3, X31
	032 Call XRStats.TryGetStat, X0, X1, X2
	033 Move V0, [X31+12]
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return V0

Method: System.Single get_GPUEndToVsync()

Disassembly:
	0x03BDE700 LDR X8, [X0 + 0xB8]
	0x03BDE704 LDP X20, X19, [X31 + 0x10]
	0x03BDE708 STR W31, [X8 + 0x10]
	0x03BDE70C LDP X30, X21, [X31], #0x20
	0x03BDE710 RET
	0x03BDE714 LDR X8, [X0 + 0x40]
	0x03BDE718 CMP X8, 0x0
	0x03BDE71C CSET W0, NE
	0x03BDE720 RET
	0x03BDE724 STR X30, [X31 - 0x20]!
	0x03BDE728 STP X20, X19, [X31 + 0x10]
	0x03BDE72C ADRP X20, 0x804000
	0x03BDE730 ADRP X19, 0x580000
	0x03BDE734 LDRB W8, [X20 + 0xFFA]
	0x03BDE738 LDR X19, [X19 + 0x108]
	0x03BDE73C TBNZ X8, 0x0, 0x3BDE754
	0x03BDE740 ADRP X0, 0x580000
	0x03BDE744 LDR X0, [X0 + 0x108]
	0x03BDE748 BL 0x1C16CF4
	0x03BDE74C MOVZ W8, 0x1
	0x03BDE750 STRB W8, [X20 + 0xFFA]
	0x03BDE754 LDR X0, [X19]
	0x03BDE758 LDR W8, [X0 + 0xE0]
	0x03BDE75C CBNZ W8, 0x3BDE768
	0x03BDE760 BL 0x1C16DFC
	0x03BDE764 LDR X0, [X19]
	0x03BDE768 LDR X8, [X0 + 0xB8]
	0x03BDE76C LDP X20, X19, [X31 + 0x10]
	0x03BDE770 LDR V0, [X8 + 0x14]
	0x03BDE774 LDR X30, [X31], #0x20
	0x03BDE778 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x805000
	005 Move X19, 0x581000
	006 Move W8, [X20+3845]
	007 Move X19, [X19+48]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x581000
	013 Move X0, [X0+48]
	014 Call 0x1C17CF4
	015 Move X0, 0x581000
	016 Move X0, [X0+248]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3845], W8
	020 Move X0, [X19]
	021 Move [X31+12], W31
	022 Move X19, 0x581000
	023 Move W8, [X0+224]
	024 Move X19, [X19+248]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Call Stats.GetOculusDisplaySubsystem
	029 Move X1, [X19]
	030 Add X2, X31, 12
	031 Move X3, X31
	032 Call XRStats.TryGetStat, X0, X1, X2
	033 Move V0, [X31+12]
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return V0

Method: System.Void EnableAppMetrics(System.Boolean enable)

Disassembly:
	0x03BDE77C STR D8, [X31 - 0x20]!
	0x03BDE780 STR X30, [X31 + 0x8]

ISIL:
	001 And W0, W0, 1
	002 Call Internal.EnableAppMetrics, X0
	003 Return 

