Type: Unity.XR.Oculus.OculusRestarter/<RestartCoroutine>d__23

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x03BDFC30 MOV X0, X19
	0x03BDFC34 LDR X1, [X8]
	0x03BDFC38 BL 0x21FC754
	0x03BDFC3C STR X0, [X19 + 0x250]
	0x03BDFC40 ADRP X8, 0x569000
	0x03BDFC44 LDR X8, [X8 + 0xD40]
	0x03BDFC48 LDR X2, [X23]
	0x03BDFC4C MOV X0, X19
	0x03BDFC50 LDR X1, [X8]
	0x03BDFC54 BL 0x21FC754

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x03BDFF5C BL 0x1C16CF4
	0x03BDFF60 ADRP X0, 0x53C000
	0x03BDFF64 LDR X0, [X0 + 0x120]
	0x03BDFF68 BL 0x1C16CF4
	0x03BDFF6C ADRP X0, 0x565000
	0x03BDFF70 LDR X0, [X0 + 0xE28]
	0x03BDFF74 BL 0x1C16CF4
	0x03BDFF78 ADRP X0, 0x53C000
	0x03BDFF7C LDR X0, [X0 + 0x128]
	0x03BDFF80 BL 0x1C16CF4
	0x03BDFF84 ADRP X0, 0x565000

ISIL:
	001 Move W8, [X0+16]
	002 Add W8, W8, 3
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move W9, 1
	005 NotImplemented "Instruction LSLV not yet implemented."
	006 Move W9, 113
	007 And W31, W8, W9
	008 Call <RestartCoroutine>d__23.<>m__Finally1, X0
	009 Return 
	010 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x03BDFF88 LDR X0, [X0 + 0xE48]
	0x03BDFF8C BL 0x1C16CF4
	0x03BDFF90 ADRP X0, 0x53C000
	0x03BDFF94 LDR X0, [X0 + 0x130]
	0x03BDFF98 BL 0x1C16CF4
	0x03BDFF9C ADRP X0, 0x53C000
	0x03BDFFA0 LDR X0, [X0 + 0x138]
	0x03BDFFA4 BL 0x1C16CF4
	0x03BDFFA8 ADRP X0, 0x53C000
	0x03BDFFAC LDR X0, [X0 + 0x330]
	0x03BDFFB0 BL 0x1C16CF4
	0x03BDFFB4 ADRP X0, 0x57F000
	0x03BDFFB8 LDR X0, [X0 + 0x1A8]
	0x03BDFFBC BL 0x1C16CF4
	0x03BDFFC0 ADRP X0, 0x569000
	0x03BDFFC4 LDR X0, [X0 + 0x10]
	0x03BDFFC8 BL 0x1C16CF4
	0x03BDFFCC ADRP X0, 0x568000
	0x03BDFFD0 LDR X0, [X0 + 0xFF8]
	0x03BDFFD4 BL 0x1C16CF4
	0x03BDFFD8 MOVZ W8, 0x1
	0x03BDFFDC STRB W8, [X22 + 0xA]
	0x03BDFFE0 MOV X0, X19
	0x03BDFFE4 MOV X1, X31
	0x03BDFFE8 BL 0x37DB700
	0x03BDFFEC LDR X1, [X29]
	0x03BDFFF0 LDR X2, [X21]
	0x03BDFFF4 MOV X0, X19
	0x03BDFFF8 BL 0x21FC754
	0x03BDFFFC STR X0, [X19 + 0x190]
	0x03BE0000 LDR X1, [X28]
	0x03BE0004 LDR X2, [X24]
	0x03BE0008 MOV X0, X19
	0x03BE000C BL 0x21FC754
	0x03BE0010 STR X0, [X19 + 0x198]
	0x03BE0014 LDR X1, [X26]
	0x03BE0018 LDR X2, [X24]
	0x03BE001C MOV X0, X19
	0x03BE0020 BL 0x21FC754
	0x03BE0024 STR X0, [X19 + 0x1E0]
	0x03BE0028 LDR X1, [X25]
	0x03BE002C LDR X2, [X24]
	0x03BE0030 MOV X0, X19
	0x03BE0034 BL 0x21FC754
	0x03BE0038 STR X0, [X19 + 0x1A0]
	0x03BE003C LDR X1, [X23]
	0x03BE0040 LDR X2, [X27]
	0x03BE0044 MOV X0, X19
	0x03BE0048 BL 0x21FC754
	0x03BE004C STR X0, [X19 + 0x1A8]
	0x03BE0050 ADRP X8, 0x53B000
	0x03BE0054 LDR X8, [X8 + 0x320]
	0x03BE0058 LDR X2, [X27]
	0x03BE005C MOV X0, X19
	0x03BE0060 LDR X1, [X8]
	0x03BE0064 BL 0x21FC754
	0x03BE0068 STR X0, [X19 + 0x1B0]
	0x03BE006C ADRP X8, 0x564000
	0x03BE0070 LDR X8, [X8 + 0xE28]
	0x03BE0074 LDR X2, [X27]
	0x03BE0078 MOV X0, X19
	0x03BE007C LDR X1, [X8]
	0x03BE0080 BL 0x21FC754
	0x03BE0084 STR X0, [X19 + 0x1B8]
	0x03BE0088 ADRP X8, 0x54D000
	0x03BE008C LDR X8, [X8 + 0x3D0]
	0x03BE0090 LDR X2, [X27]
	0x03BE0094 MOV X0, X19
	0x03BE0098 LDR X1, [X8]
	0x03BE009C BL 0x21FC754
	0x03BE00A0 STR X0, [X19 + 0x1C0]
	0x03BE00A4 ADRP X8, 0x53B000
	0x03BE00A8 LDR X8, [X8 + 0x330]
	0x03BE00AC LDR X2, [X27]
	0x03BE00B0 MOV X0, X19
	0x03BE00B4 LDR X1, [X8]
	0x03BE00B8 BL 0x21FC754
	0x03BE00BC STR X0, [X19 + 0x1C8]
	0x03BE00C0 ADRP X8, 0x53B000
	0x03BE00C4 LDR X8, [X8 + 0x130]
	0x03BE00C8 LDR X2, [X27]
	0x03BE00CC MOV X0, X19
	0x03BE00D0 LDR X1, [X8]
	0x03BE00D4 BL 0x21FC754
	0x03BE00D8 STR X0, [X19 + 0x1D0]
	0x03BE00DC ADRP X8, 0x53B000
	0x03BE00E0 LDR X8, [X8 + 0x128]
	0x03BE00E4 LDR X2, [X27]
	0x03BE00E8 MOV X0, X19
	0x03BE00EC LDR X1, [X8]
	0x03BE00F0 BL 0x21FC754
	0x03BE00F4 STR X0, [X19 + 0x1D8]
	0x03BE00F8 ADRP X8, 0x53B000
	0x03BE00FC LDR X8, [X8 + 0x110]
	0x03BE0100 LDR X2, [X27]
	0x03BE0104 MOV X0, X19
	0x03BE0108 LDR X1, [X8]
	0x03BE010C BL 0x21FC754
	0x03BE0110 STR X0, [X19 + 0x1F0]
	0x03BE0114 ADRP X8, 0x564000
	0x03BE0118 LDR X8, [X8 + 0xE48]
	0x03BE011C LDR X2, [X27]
	0x03BE0120 MOV X0, X19
	0x03BE0124 LDR X1, [X8]
	0x03BE0128 BL 0x21FC754
	0x03BE012C STR X0, [X19 + 0x1E8]
	0x03BE0130 ADRP X8, 0x567000
	0x03BE0134 LDR X8, [X8 + 0xFF8]
	0x03BE0138 MOV X0, X19
	0x03BE013C LDR X1, [X8]
	0x03BE0140 ADRP X8, 0x566000
	0x03BE0144 LDR X8, [X8 + 0x58]
	0x03BE0148 LDR X2, [X8]
	0x03BE014C BL 0x21FC754
	0x03BE0150 STR X0, [X19 + 0x1F8]
	0x03BE0154 ADRP X8, 0x568000
	0x03BE0158 LDR X8, [X8]
	0x03BE015C LDR X2, [X27]
	0x03BE0160 MOV X0, X19
	0x03BE0164 LDR X1, [X8]
	0x03BE0168 BL 0x21FC754
	0x03BE016C STR X0, [X19 + 0x200]
	0x03BE0170 ADRP X8, 0x568000
	0x03BE0174 LDR X8, [X8 + 0x8]
	0x03BE0178 LDR X2, [X20]
	0x03BE017C MOV X0, X19
	0x03BE0180 LDR X1, [X8]
	0x03BE0184 BL 0x21FC754
	0x03BE0188 STR X0, [X19 + 0x208]
	0x03BE018C ADRP X8, 0x568000
	0x03BE0190 LDR X8, [X8 + 0x10]
	0x03BE0194 MOV X0, X19
	0x03BE0198 LDR X1, [X8]
	0x03BE019C ADRP X8, 0x564000
	0x03BE01A0 LDR X8, [X8 + 0xED8]
	0x03BE01A4 LDR X2, [X8]
	0x03BE01A8 BL 0x21FC754
	0x03BE01AC STR X0, [X19 + 0x210]
	0x03BE01B0 ADRP X8, 0x564000
	0x03BE01B4 LDR X8, [X8 + 0xDC8]
	0x03BE01B8 LDR X2, [X20]
	0x03BE01BC MOV X0, X19
	0x03BE01C0 LDR X1, [X8]
	0x03BE01C4 BL 0x21FC754
	0x03BE01C8 STR X0, [X19 + 0x218]
	0x03BE01CC ADRP X8, 0x564000
	0x03BE01D0 LDR X8, [X8 + 0xDD8]
	0x03BE01D4 LDR X2, [X20]
	0x03BE01D8 MOV X0, X19
	0x03BE01DC LDR X1, [X8]
	0x03BE01E0 BL 0x21FC754
	0x03BE01E4 STR X0, [X19 + 0x220]
	0x03BE01E8 ADRP X8, 0x564000
	0x03BE01EC LDR X8, [X8 + 0xEA0]
	0x03BE01F0 LDR X2, [X20]
	0x03BE01F4 MOV X0, X19
	0x03BE01F8 LDR X1, [X8]
	0x03BE01FC BL 0x21FC754
	0x03BE0200 STR X0, [X19 + 0x228]
	0x03BE0204 ADRP X8, 0x57E000
	0x03BE0208 LDR X8, [X8 + 0x1A8]
	0x03BE020C LDR X2, [X20]
	0x03BE0210 MOV X0, X19
	0x03BE0214 LDR X1, [X8]
	0x03BE0218 BL 0x21FC754
	0x03BE021C STR X0, [X19 + 0x230]
	0x03BE0220 LDP X20, X19, [X31 + 0x50]
	0x03BE0224 LDP X22, X21, [X31 + 0x40]
	0x03BE0228 LDP X24, X23, [X31 + 0x30]
	0x03BE022C LDP X26, X25, [X31 + 0x20]
	0x03BE0230 LDP X28, X27, [X31 + 0x10]
	0x03BE0234 LDP X29, X30, [X31], #0x60
	0x03BE0238 RET
	0x03BE023C MOV X1, X31
	0x03BE0240 B 0x37DB970
	0x03BE0244 LDR X0, [X0 + 0x170]
	0x03BE0248 RET
	0x03BE024C STR X1, [X0 + 0x170]
	0x03BE0250 RET
	0x03BE0254 LDR X0, [X0 + 0x178]
	0x03BE0258 RET
	0x03BE025C STR X1, [X0 + 0x178]
	0x03BE0260 RET
	0x03BE0264 LDR X0, [X0 + 0x180]
	0x03BE0268 RET
	0x03BE026C STR X1, [X0 + 0x180]
	0x03BE0270 RET
	0x03BE0274 LDR X0, [X0 + 0x188]
	0x03BE0278 RET
	0x03BE027C STR X1, [X0 + 0x188]
	0x03BE0280 RET
	0x03BE0284 STR X30, [X31 - 0x60]!
	0x03BE0288 STP X28, X27, [X31 + 0x10]
	0x03BE028C STP X26, X25, [X31 + 0x20]
	0x03BE0290 STP X24, X23, [X31 + 0x30]
	0x03BE0294 STP X22, X21, [X31 + 0x40]
	0x03BE0298 STP X20, X19, [X31 + 0x50]
	0x03BE029C ADRP X28, 0x803000
	0x03BE02A0 ADRP X26, 0x567000
	0x03BE02A4 ADRP X27, 0x566000
	0x03BE02A8 ADRP X24, 0x568000
	0x03BE02AC ADRP X25, 0x564000
	0x03BE02B0 ADRP X22, 0x568000
	0x03BE02B4 ADRP X23, 0x564000
	0x03BE02B8 ADRP X20, 0x568000
	0x03BE02BC ADRP X21, 0x564000
	0x03BE02C0 LDR X26, [X26 + 0xFF8]
	0x03BE02C4 LDR X27, [X27 + 0x58]
	0x03BE02C8 LDR X24, [X24]
	0x03BE02CC LDRB W8, [X28 + 0xB]
	0x03BE02D0 LDR X25, [X25 + 0xE18]
	0x03BE02D4 LDR X22, [X22 + 0x8]
	0x03BE02D8 LDR X23, [X23 + 0xDD0]
	0x03BE02DC LDR X20, [X20 + 0x10]
	0x03BE02E0 LDR X21, [X21 + 0xED8]
	0x03BE02E4 MOV X19, X0
	0x03BE02E8 TBNZ X8, 0x0, 0x3BE0354
	0x03BE02EC ADRP X0, 0x564000
	0x03BE02F0 LDR X0, [X0 + 0xE18]
	0x03BE02F4 BL 0x1C16CF4
	0x03BE02F8 ADRP X0, 0x566000
	0x03BE02FC LDR X0, [X0 + 0x58]
	0x03BE0300 BL 0x1C16CF4
	0x03BE0304 ADRP X0, 0x564000
	0x03BE0308 LDR X0, [X0 + 0xED8]
	0x03BE030C BL 0x1C16CF4
	0x03BE0310 ADRP X0, 0x564000
	0x03BE0314 LDR X0, [X0 + 0xDD0]
	0x03BE0318 BL 0x1C16CF4
	0x03BE031C ADRP X0, 0x568000
	0x03BE0320 LDR X0, [X0]
	0x03BE0324 BL 0x1C16CF4
	0x03BE0328 ADRP X0, 0x568000
	0x03BE032C LDR X0, [X0 + 0x8]
	0x03BE0330 BL 0x1C16CF4
	0x03BE0334 ADRP X0, 0x568000
	0x03BE0338 LDR X0, [X0 + 0x10]
	0x03BE033C BL 0x1C16CF4
	0x03BE0340 ADRP X0, 0x567000
	0x03BE0344 LDR X0, [X0 + 0xFF8]
	0x03BE0348 BL 0x1C16CF4
	0x03BE034C MOVZ W8, 0x1
	0x03BE0350 STRB W8, [X28 + 0xB]
	0x03BE0354 MOV X0, X19
	0x03BE0358 MOV X1, X31
	0x03BE035C BL 0x37729C8
	0x03BE0360 LDR X1, [X26]
	0x03BE0364 LDR X2, [X27]
	0x03BE0368 MOV X0, X19
	0x03BE036C BL 0x21FC754
	0x03BE0370 STR X0, [X19 + 0x170]
	0x03BE0374 LDR X1, [X24]
	0x03BE0378 LDR X2, [X25]
	0x03BE037C MOV X0, X19
	0x03BE0380 BL 0x21FC754
	0x03BE0384 STR X0, [X19 + 0x178]
	0x03BE0388 LDR X1, [X22]
	0x03BE038C LDR X2, [X23]
	0x03BE0390 MOV X0, X19
	0x03BE0394 BL 0x21FC754
	0x03BE0398 STR X0, [X19 + 0x180]
	0x03BE039C LDR X1, [X20]
	0x03BE03A0 LDR X2, [X21]
	0x03BE03A4 MOV X0, X19
	0x03BE03A8 BL 0x21FC754
	0x03BE03AC STR X0, [X19 + 0x188]
	0x03BE03B0 LDP X20, X19, [X31 + 0x50]
	0x03BE03B4 LDP X22, X21, [X31 + 0x40]
	0x03BE03B8 LDP X24, X23, [X31 + 0x30]
	0x03BE03BC LDP X26, X25, [X31 + 0x20]
	0x03BE03C0 LDP X28, X27, [X31 + 0x10]
	0x03BE03C4 LDR X30, [X31], #0x60

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, 0x805000
	007 Move W8, [X20+2]
	008 Move X19, X0
	009 Move [X31+24], X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0x515000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x515000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move X0, 0x580000
	021 Move X0, [X0+264]
	022 Call 0x1C17CF4
	023 Move X0, 0x57F000
	024 Move X0, [X0+3408]
	025 Call 0x1C17CF4
	026 Move X0, 0x580000
	027 Move X0, [X0+336]
	028 Call 0x1C17CF4
	029 Move X0, 0x580000
	030 Move X0, [X0+344]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+2], W8
	034 Add X8, X31, 24
	035 Move [X31+16], X8
	036 Move W8, [X19+16]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X20, [X19+32]
	039 Move X9, -50626560
	040 Add X9, X9, 3503
	041 NotImplemented "Instruction ADR not yet implemented."
	042 Move W11, [X9]
	043 Add X10, X10, X11
	044 CallNoReturn X10
	045 Move W8, 1
	046 Move [X19+24], X31
	047 Move [X19+16], W8
	048 Move TEMP, 2
	049 Not TEMP
	050 Move W8, TEMP
	051 Move [X19+16], W8
	052 Compare X20, 0
	053 JumpIfEqual {261}
	054 Move X8, [X20+40]
	055 Compare X8, 0
	056 JumpIfEqual {62}
	057 Move X0, [X8+64]
	058 Move X1, [X8+40]
	059 Move X9, [X8+24]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move X19, [X31+24]
	062 Move W8, [X19+40]
	063 Compare W8, 0
	064 JumpIfEqual {251}
	065 Move X19, 0x57E000
	066 Move X19, [X19+3408]
	067 Move X0, [X19]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X20, 0x803000
	073 Move W8, [X20+3785]
	074 Compare W8, 0
	075 JumpIfNotEqual {81}
	076 Move X0, 0x57E000
	077 Move X0, [X0+3408]
	078 Call 0x1C17CF4
	079 Move W8, 1
	080 Move [X20+3785], W8
	081 Move X0, [X19]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {87}
	085 Call 0x1C17DFC
	086 Move X0, [X19]
	087 Move X8, [X0+184]
	088 Move X8, [X8+8]
	089 Compare X8, 0
	090 JumpIfEqual {269}
	091 Move X0, [X8+24]
	092 Compare X0, 0
	093 JumpIfEqual {270}
	094 Move X1, X31
	095 Call XRManagerSettings.InitializeLoader, X0
	096 Move X8, [X31+24]
	097 Move W9, 3
	098 Move [X8+24], X0
	099 Move TEMP, 2
	100 Not TEMP
	101 Move W8, TEMP
	102 Move [X19+16], W8
	103 Move X19, 0x57E000
	104 Move X19, [X19+3408]
	105 Move X0, [X19]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Move X21, 0x803000
	111 Move W8, [X21+3785]
	112 Compare W8, 0
	113 JumpIfNotEqual {119}
	114 Move X0, 0x57E000
	115 Move X0, [X0+3408]
	116 Call 0x1C17CF4
	117 Move W8, 1
	118 Move [X21+3785], W8
	119 Move X0, [X19]
	120 Move W8, [X0+224]
	121 Compare W8, 0
	122 JumpIfNotEqual {125}
	123 Call 0x1C17DFC
	124 Move X0, [X19]
	125 Move X8, [X0+184]
	126 Move X8, [X8+8]
	127 Compare X8, 0
	128 JumpIfEqual {262}
	129 Move X0, [X8+24]
	130 Compare X0, 0
	131 JumpIfEqual {264}
	132 Move X1, X31
	133 Call XRManagerSettings.StartSubsystems, X0
	134 Move W8, [X21+3785]
	135 Compare W8, 0
	136 JumpIfNotEqual {142}
	137 Move X0, 0x57E000
	138 Move X0, [X0+3408]
	139 Call 0x1C17CF4
	140 Move W8, 1
	141 Move [X21+3785], W8
	142 Move X0, [X19]
	143 Move W8, [X0+224]
	144 Compare W8, 0
	145 JumpIfNotEqual {148}
	146 Call 0x1C17DFC
	147 Move X0, [X19]
	148 Move X8, [X0+184]
	149 Move X8, [X8+8]
	150 Compare X8, 0
	151 JumpIfEqual {266}
	152 Move X8, [X8+24]
	153 Compare X8, 0
	154 JumpIfEqual {267}
	155 Move X9, 0x514000
	156 Move X9, [X9+1432]
	157 Move X19, [X8+48]
	158 Move X0, [X9]
	159 Move W9, [X0+224]
	160 Compare W9, 0
	161 JumpIfNotEqual {163}
	162 Call 0x1C17DFC
	163 Move X0, X19
	164 Move X1, X31
	165 Move X2, X31
	166 Call Object.op_Equality, X0, X1
	167 Move X9, 0x514000
	168 Move X9, [X9+2600]
	169 Move W8, W0
	170 Move X0, [X9]
	171 Move W9, [X0+224]
	172 Move TEMP, X8
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfNotEqual {224}
	176 Compare W9, 0
	177 JumpIfNotEqual {179}
	178 Call 0x1C17DFC
	179 Move X8, 0x57F000
	180 Move X8, [X8+336]
	181 Move X0, [X8]
	182 Move X1, X31
	183 Call Debug.LogError, X0
	184 Move TEMP, 2
	185 Not TEMP
	186 Move W8, TEMP
	187 Move [X19+16], W8
	188 Move X19, 0x57E000
	189 Move X19, [X19+3408]
	190 Move X0, [X19]
	191 Move W8, [X0+224]
	192 Compare W8, 0
	193 JumpIfNotEqual {195}
	194 Call 0x1C17DFC
	195 Move X20, 0x803000
	196 Move W8, [X20+3785]
	197 Compare W8, 0
	198 JumpIfNotEqual {204}
	199 Move X0, 0x57E000
	200 Move X0, [X0+3408]
	201 Call 0x1C17CF4
	202 Move W8, 1
	203 Move [X20+3785], W8
	204 Move X0, [X19]
	205 Move W8, [X0+224]
	206 Compare W8, 0
	207 JumpIfNotEqual {210}
	208 Call 0x1C17DFC
	209 Move X0, [X19]
	210 Move X8, [X0+184]
	211 Move X8, [X8+8]
	212 Compare X8, 0
	213 JumpIfEqual {263}
	214 Move X0, [X8+24]
	215 Compare X0, 0
	216 JumpIfEqual {265}
	217 Move X1, X31
	218 Call XRManagerSettings.DeinitializeLoader, X0
	219 Move X8, [X31+24]
	220 Move W9, 2
	221 Move [X8+24], X31
	222 Move [X8+16], W9
	223 Move W8, 1
	224 Compare W9, 0
	225 JumpIfNotEqual {227}
	226 Call 0x1C17DFC
	227 Move X8, 0x57F000
	228 Move X8, [X8+344]
	229 Move X0, [X8]
	230 Move X1, X31
	231 Call Debug.Log, X0
	232 Move X19, 0x57F000
	233 Move X19, [X19+264]
	234 Move X0, [X19]
	235 Move W8, [X0+224]
	236 Compare W8, 0
	237 JumpIfNotEqual {240}
	238 Call 0x1C17DFC
	239 Move X0, [X19]
	240 Move X8, [X0+184]
	241 Move [X8+16], W31
	242 Compare X20, 0
	243 JumpIfEqual {268}
	244 Move X8, [X20+32]
	245 Compare X8, 0
	246 JumpIfEqual {251}
	247 Move X0, [X8+64]
	248 Move X1, [X8+40]
	249 Move X9, [X8+24]
	250 NotImplemented "Instruction BLR not yet implemented."
	251 Move X0, [X31+24]
	252 Call <RestartCoroutine>d__23.<>m__Finally1, X0
	253 Move W8, W31
	254 Move X20, [X31+48]
	255 Move X19, [X31+56]
	256 Move X30, [X31+32]
	257 Move X21, [X31+40]
	258 Move W0, W8
	259 Add X31, X31, 64
	260 Return X0
	261 Call 0x1C17F20
	262 Call 0x1C17F20
	263 Call 0x1C17F20
	264 Call 0x1C17F20
	265 Call 0x1C17F20
	266 Call 0x1C17F20
	267 Call 0x1C17F20
	268 Call 0x1C17F20
	269 Call 0x1C17F20
	270 Call 0x1C17F20
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Call 0x3EB2AD0
	273 Move X19, [X0]
	274 Move [X31+8], X19
	275 Call 0x3EB2AE0
	276 Compare X19, 0
	277 JumpIfEqual {253}
	278 Add X8, X31, 8
	279 Add X0, X8, 8
	280 Call 0x1C02B2C
	281 Move X0, X19
	282 Call 0x1C17F18
	283 Compare X19, 0
	284 JumpIfNotEqual {286}
	285 Call 0x1D2D690
	286 Move X0, [X31+24]
	287 Move W8, [X0+16]
	288 Add W8, W8, 3
	289 NotImplemented "Instruction CMP not yet implemented."
	290 Move W9, 1
	291 NotImplemented "Instruction LSLV not yet implemented."
	292 Move W9, 113
	293 And W31, W8, W9
	294 Call <RestartCoroutine>d__23.<>m__Finally1, X0
	295 Move X0, X19
	296 Call 0x1C17F18
	297 Call 0x1991590

Method: System.Void <>m__Finally1()

Disassembly:
	0x03BE03C8 RET
	0x03BE03CC MOV X1, X31
	0x03BE03D0 B 0x377A868
	0x03BE03D4 LDR X0, [X0 + 0x170]
	0x03BE03D8 RET
	0x03BE03DC STR X1, [X0 + 0x170]
	0x03BE03E0 RET
	0x03BE03E4 LDR X0, [X0 + 0x178]
	0x03BE03E8 RET
	0x03BE03EC STR X1, [X0 + 0x178]
	0x03BE03F0 RET
	0x03BE03F4 LDR X0, [X0 + 0x180]
	0x03BE03F8 RET
	0x03BE03FC STR X1, [X0 + 0x180]
	0x03BE0400 RET
	0x03BE0404 STP X30, X25, [X31 - 0x40]!
	0x03BE0408 STP X24, X23, [X31 + 0x10]
	0x03BE040C STP X22, X21, [X31 + 0x20]
	0x03BE0410 STP X20, X19, [X31 + 0x30]
	0x03BE0414 ADRP X25, 0x803000
	0x03BE0418 ADRP X24, 0x57E000
	0x03BE041C ADRP X22, 0x564000
	0x03BE0420 ADRP X23, 0x54D000
	0x03BE0424 ADRP X20, 0x564000
	0x03BE0428 ADRP X21, 0x564000
	0x03BE042C LDRB W8, [X25 + 0xC]
	0x03BE0430 LDR X24, [X24 + 0x1B8]
	0x03BE0434 LDR X22, [X22 + 0xE18]
	0x03BE0438 LDR X23, [X23 + 0x3D0]
	0x03BE043C LDR X20, [X20 + 0xE40]
	0x03BE0440 LDR X21, [X21 + 0xE38]
	0x03BE0444 MOV X19, X0
	0x03BE0448 TBNZ X8, 0x0, 0x3BE0490
	0x03BE044C ADRP X0, 0x564000
	0x03BE0450 LDR X0, [X0 + 0xE18]
	0x03BE0454 BL 0x1C16CF4
	0x03BE0458 ADRP X0, 0x564000
	0x03BE045C LDR X0, [X0 + 0xE38]
	0x03BE0460 BL 0x1C16CF4
	0x03BE0464 ADRP X0, 0x54D000
	0x03BE0468 LDR X0, [X0 + 0x3D0]
	0x03BE046C BL 0x1C16CF4
	0x03BE0470 ADRP X0, 0x57E000
	0x03BE0474 LDR X0, [X0 + 0x1B8]
	0x03BE0478 BL 0x1C16CF4
	0x03BE047C ADRP X0, 0x564000
	0x03BE0480 LDR X0, [X0 + 0xE40]
	0x03BE0484 BL 0x1C16CF4
	0x03BE0488 MOVZ W8, 0x1
	0x03BE048C STRB W8, [X25 + 0xC]
	0x03BE0490 MOV X0, X19
	0x03BE0494 MOV X1, X31
	0x03BE0498 BL 0x37729C8
	0x03BE049C LDR X1, [X24]
	0x03BE04A0 LDR X2, [X22]
	0x03BE04A4 MOV X0, X19
	0x03BE04A8 BL 0x21FC754
	0x03BE04AC STR X0, [X19 + 0x170]
	0x03BE04B0 LDR X1, [X23]
	0x03BE04B4 LDR X2, [X22]
	0x03BE04B8 MOV X0, X19
	0x03BE04BC BL 0x21FC754
	0x03BE04C0 STR X0, [X19 + 0x178]
	0x03BE04C4 LDR X1, [X20]
	0x03BE04C8 LDR X2, [X21]
	0x03BE04CC MOV X0, X19
	0x03BE04D0 BL 0x21FC754
	0x03BE04D4 STR X0, [X19 + 0x180]
	0x03BE04D8 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x804000
	006 Move W8, [X19+3]
	007 Move X20, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x514000
	013 Move X0, [X0+1432]
	014 Call 0x1C17CF4
	015 Move X0, 0x57E000
	016 Move X0, [X0+3408]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+3], W8
	020 Move X19, [X20+32]
	021 Move TEMP, 0
	022 Not TEMP
	023 Move W8, TEMP
	024 Move [X20+16], W8
	025 Compare X19, 0
	026 JumpIfEqual {92}
	027 Move X20, 0x57E000
	028 Move X8, [X19+56]
	029 Move X20, [X20+3408]
	030 Move [X19+64], X31
	031 Compare X8, 0
	032 JumpIfEqual {37}
	033 Move X9, [X8+24]
	034 Move X0, [X8+64]
	035 Move X1, [X8+40]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X0, [X20]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X21, 0x803000
	043 Move W8, [X21+3785]
	044 Compare W8, 0
	045 JumpIfNotEqual {51}
	046 Move X0, 0x57E000
	047 Move X0, [X0+3408]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X21+3785], W8
	051 Move X0, [X20]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {57}
	055 Call 0x1C17DFC
	056 Move X0, [X20]
	057 Move X8, [X0+184]
	058 Move X8, [X8+8]
	059 Compare X8, 0
	060 JumpIfEqual {92}
	061 Move X8, [X8+24]
	062 Compare X8, 0
	063 JumpIfEqual {92}
	064 Move X9, 0x514000
	065 Move X9, [X9+1432]
	066 Move X20, [X8+48]
	067 Move X0, [X9]
	068 Move W9, [X0+224]
	069 Compare W9, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X0, X20
	073 Move X1, X31
	074 Move X2, X31
	075 Call Object.op_Equality, X0, X1
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {87}
	080 Move X0, X19
	081 Move X20, [X31+16]
	082 Move X19, [X31+24]
	083 Move X30, [X31+32]
	084 Move X21, [X31+40]
	085 Call OculusRestarter.PauseAndRestart, X0
	086 Return 
	087 Move X20, [X31+16]
	088 Move X19, [X31+24]
	089 Move X30, [X31+32]
	090 Move X21, [X31+40]
	091 Return 
	092 Call 0x1C17F20

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x03BE04DC LDP X22, X21, [X31 + 0x20]
	0x03BE04E0 LDP X24, X23, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x03BE04E4 LDP X30, X25, [X31], #0x40
	0x03BE04E8 RET
	0x03BE04EC MOV X1, X31
	0x03BE04F0 B 0x377A868
	0x03BE04F4 MOV X1, X31
	0x03BE04F8 B 0x37DB840
	0x03BE04FC MOV X1, X31
	0x03BE0500 B 0x37DB840
	0x03BE0504 LDR X0, [X0 + 0x278]
	0x03BE0508 RET
	0x03BE050C STR X1, [X0 + 0x278]
	0x03BE0510 RET
	0x03BE0514 LDR X0, [X0 + 0x280]
	0x03BE0518 RET

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x514000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x57F000
	011 Move X0, [X0+352]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x03BE051C STR X1, [X0 + 0x280]
	0x03BE0520 RET

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

