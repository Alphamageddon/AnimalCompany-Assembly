Type: Unity.XR.Oculus.NativeMethods/Internal

Method: System.Void SetColorScale(System.Single x, System.Single y, System.Single z, System.Single w)

Disassembly:
	0x03BDE78C ADRP X19, 0x580000
	0x03BDE790 LDRB W8, [X20 + 0xFFB]
	0x03BDE794 LDR X19, [X19 + 0x108]
	0x03BDE798 MOV V8.16B, V0.16B
	0x03BDE79C TBNZ X8, 0x0, 0x3BDE7B4
	0x03BDE7A0 ADRP X0, 0x580000
	0x03BDE7A4 LDR X0, [X0 + 0x108]
	0x03BDE7A8 BL 0x1C16CF4
	0x03BDE7AC MOVZ W8, 0x1
	0x03BDE7B0 STRB W8, [X20 + 0xFFB]
	0x03BDE7B4 LDR X0, [X19]
	0x03BDE7B8 LDR W8, [X0 + 0xE0]
	0x03BDE7BC CBNZ W8, 0x3BDE7C8
	0x03BDE7C0 BL 0x1C16DFC
	0x03BDE7C4 LDR X0, [X19]
	0x03BDE7C8 LDR X8, [X0 + 0xB8]
	0x03BDE7CC LDP X20, X19, [X31 + 0x10]
	0x03BDE7D0 LDR X30, [X31 + 0x8]
	0x03BDE7D4 STR S8, [X8 + 0x14]
	0x03BDE7D8 LDR V8, [X31], #0x20
	0x03BDE7DC RET
	0x03BDE7E0 STR X30, [X31 - 0x20]!
	0x03BDE7E4 STP X20, X19, [X31 + 0x10]
	0x03BDE7E8 ADRP X20, 0x804000
	0x03BDE7EC ADRP X19, 0x580000
	0x03BDE7F0 LDRB W8, [X20 + 0xFFC]
	0x03BDE7F4 LDR X19, [X19 + 0x108]
	0x03BDE7F8 TBNZ X8, 0x0, 0x3BDE810
	0x03BDE7FC ADRP X0, 0x580000
	0x03BDE800 LDR X0, [X0 + 0x108]
	0x03BDE804 BL 0x1C16CF4
	0x03BDE808 MOVZ W8, 0x1
	0x03BDE80C STRB W8, [X20 + 0xFFC]
	0x03BDE810 LDR X0, [X19]
	0x03BDE814 LDR W8, [X0 + 0xE0]
	0x03BDE818 CBNZ W8, 0x3BDE824
	0x03BDE81C BL 0x1C16DFC
	0x03BDE820 LDR X0, [X19]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], D11
	003 Move [X31+56], D10
	004 Move [X31+64], D9
	005 Move [X31+72], D8
	006 Move [X31+80], X30
	007 Move [X31+88], X19
	008 Move X19, 0x805000
	009 Move X0, [X19+3848]
	010 Move V8, V3
	011 Move V9, V2
	012 Move V10, V1
	013 Move V11, V0
	014 Compare X0, 0
	015 JumpIfNotEqual {35}
	016 Move X12, -51314688
	017 Move V0, [X12+1800]
	018 Move X8, -51286016
	019 Move X10, -51261440
	020 Add X8, X8, 2960
	021 Move W9, 14
	022 Add X10, X10, 2973
	023 Move W11, 13
	024 Move W13, 16
	025 Add X0, X31, 0
	026 Move [X31], X8
	027 Move [X31+8], X9
	028 Move [X31+16], X10
	029 Move [X31+24], X11
	030 Move [X31+40], W13
	031 Move [X31+32], D0
	032 Move [X31+44], W31
	033 Call 0x1C1829C
	034 Move [X19+3848], X0
	035 Move V0, V11
	036 Move V1, V10
	037 Move V2, V9
	038 Move V3, V8
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X30, [X31+80]
	041 Move X19, [X31+88]
	042 Move D9, [X31+64]
	043 Move D8, [X31+72]
	044 Move D11, [X31+48]
	045 Move D10, [X31+56]
	046 Add X31, X31, 96
	047 Return 

Method: System.Void SetColorOffset(System.Single x, System.Single y, System.Single z, System.Single w)

Disassembly:
	0x03BDE824 LDR X8, [X0 + 0xB8]
	0x03BDE828 LDP X20, X19, [X31 + 0x10]
	0x03BDE82C LDR W0, [X8 + 0x10]
	0x03BDE830 LDR X30, [X31], #0x20
	0x03BDE834 RET
	0x03BDE838 STP X30, X21, [X31 - 0x20]!
	0x03BDE83C STP X20, X19, [X31 + 0x10]
	0x03BDE840 ADRP X19, 0x804000
	0x03BDE844 ADRP X21, 0x580000
	0x03BDE848 LDRB W8, [X19 + 0xFFD]
	0x03BDE84C LDR X21, [X21 + 0x108]
	0x03BDE850 TBNZ X8, 0x0, 0x3BDE898
	0x03BDE854 ADRP X0, 0x580000
	0x03BDE858 LDR X0, [X0 + 0x110]
	0x03BDE85C BL 0x1C16CF4
	0x03BDE860 ADRP X0, 0x580000
	0x03BDE864 LDR X0, [X0 + 0x118]
	0x03BDE868 BL 0x1C16CF4
	0x03BDE86C ADRP X0, 0x515000
	0x03BDE870 LDR X0, [X0 + 0xA58]
	0x03BDE874 BL 0x1C16CF4
	0x03BDE878 ADRP X0, 0x515000
	0x03BDE87C LDR X0, [X0 + 0x598]
	0x03BDE880 BL 0x1C16CF4
	0x03BDE884 ADRP X0, 0x580000
	0x03BDE888 LDR X0, [X0 + 0x108]
	0x03BDE88C BL 0x1C16CF4
	0x03BDE890 MOVZ W8, 0x1
	0x03BDE894 STRB W8, [X19 + 0xFFD]
	0x03BDE898 LDR X0, [X21]
	0x03BDE89C ADRP X20, 0x515000
	0x03BDE8A0 LDR W8, [X0 + 0xE0]
	0x03BDE8A4 LDR X20, [X20 + 0x598]
	0x03BDE8A8 CBNZ W8, 0x3BDE8B4
	0x03BDE8AC BL 0x1C16DFC
	0x03BDE8B0 LDR X0, [X21]
	0x03BDE8B4 LDR X8, [X20]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], D11
	003 Move [X31+56], D10
	004 Move [X31+64], D9
	005 Move [X31+72], D8
	006 Move [X31+80], X30
	007 Move [X31+88], X19
	008 Move X19, 0x805000
	009 Move X0, [X19+3856]
	010 Move V8, V3
	011 Move V9, V2
	012 Move V10, V1
	013 Move V11, V0
	014 Compare X0, 0
	015 JumpIfNotEqual {34}
	016 Move X11, -51314688
	017 Move V0, [X11+1800]
	018 Move X8, -51286016
	019 Move X10, -51220480
	020 Add X8, X8, 2960
	021 Move W9, 14
	022 Add X10, X10, 2710
	023 Move W12, 16
	024 Add X0, X31, 0
	025 Move [X31], X8
	026 Move [X31+8], X9
	027 Move [X31+16], X10
	028 Move [X31+24], X9
	029 Move [X31+40], W12
	030 Move [X31+32], D0
	031 Move [X31+44], W31
	032 Call 0x1C1829C
	033 Move [X19+3856], X0
	034 Move V0, V11
	035 Move V1, V10
	036 Move V2, V9
	037 Move V3, V8
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move X30, [X31+80]
	040 Move X19, [X31+88]
	041 Move D9, [X31+64]
	042 Move D8, [X31+72]
	043 Move D11, [X31+48]
	044 Move D10, [X31+56]
	045 Add X31, X31, 96
	046 Return 

Method: System.Boolean GetIsSupportedDevice()

Disassembly:
	0x03BDE8B8 LDR X9, [X0 + 0xB8]
	0x03BDE8BC LDR W10, [X8 + 0xE0]
	0x03BDE8C0 LDR X19, [X9 + 0x8]
	0x03BDE8C4 CBNZ W10, 0x3BDE8D0
	0x03BDE8C8 MOV X0, X8
	0x03BDE8CC BL 0x1C16DFC
	0x03BDE8D0 MOV X0, X19
	0x03BDE8D4 MOV X1, X31
	0x03BDE8D8 MOV X2, X31
	0x03BDE8DC BL 0x3C3883C
	0x03BDE8E0 LDR X8, [X21]
	0x03BDE8E4 TBZ X0, 0x0, 0x3BDE9D8
	0x03BDE8E8 LDR W9, [X8 + 0xE0]
	0x03BDE8EC CBNZ W9, 0x3BDE8FC
	0x03BDE8F0 MOV X0, X8
	0x03BDE8F4 BL 0x1C16DFC
	0x03BDE8F8 LDR X8, [X21]
	0x03BDE8FC LDR X8, [X8 + 0xB8]
	0x03BDE900 MOV X1, X31
	0x03BDE904 LDR X0, [X8]
	0x03BDE908 BL 0x3C35B9C
	0x03BDE90C LDR X8, [X20]
	0x03BDE910 MOV X19, X0
	0x03BDE914 LDR W9, [X8 + 0xE0]
	0x03BDE918 CBNZ W9, 0x3BDE924
	0x03BDE91C MOV X0, X8
	0x03BDE920 BL 0x1C16DFC
	0x03BDE924 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0x805000
	005 Move X8, [X19+3864]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -51314688
	009 Move V0, [X12+1800]
	010 Move X8, -51286016
	011 Move X10, -51204096
	012 Add X8, X8, 2960
	013 Move W9, 14
	014 Add X10, X10, 2324
	015 Move W11, 20
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+3864], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Add X31, X31, 64
	033 Return X0

Method: System.Boolean LoadOVRPlugin(System.String ovrpPath)

Disassembly:
	0x03BDE928 MOV X1, X31
	0x03BDE92C MOV X2, X31
	0x03BDE930 BL 0x3C3883C
	0x03BDE934 TBZ X0, 0x0, 0x3BDE99C
	0x03BDE938 LDR X0, [X21]
	0x03BDE93C LDR W8, [X0 + 0xE0]
	0x03BDE940 CBNZ W8, 0x3BDE94C
	0x03BDE944 BL 0x1C16DFC
	0x03BDE948 LDR X0, [X21]
	0x03BDE94C ADRP X9, 0x515000
	0x03BDE950 LDR X8, [X0 + 0xB8]
	0x03BDE954 LDR X9, [X9 + 0xA58]
	0x03BDE958 LDR X20, [X8]
	0x03BDE95C LDR X0, [X9]
	0x03BDE960 BL 0x1C16F10
	0x03BDE964 MOV X1, X20
	0x03BDE968 MOV X2, X31
	0x03BDE96C MOV X19, X0
	0x03BDE970 BL 0x3C35934
	0x03BDE974 CBZ X19, 0x3BDEA00
	0x03BDE978 MOVZ W1, 0x3D
	0x03BDE97C MOV X0, X19
	0x03BDE980 MOV X2, X31
	0x03BDE984 BL 0x3C396EC
	0x03BDE988 ADRP X8, 0x580000
	0x03BDE98C LDR X8, [X8 + 0x110]
	0x03BDE990 MOV X0, X19
	0x03BDE994 LDR X1, [X8]
	0x03BDE998 BL 0x21E51FC
	0x03BDE99C CBZ X19, 0x3BDEA00
	0x03BDE9A0 ADRP X8, 0x580000
	0x03BDE9A4 LDR X8, [X8 + 0x118]
	0x03BDE9A8 MOV X0, X19
	0x03BDE9AC LDR X1, [X8]
	0x03BDE9B0 BL 0x21E52E4

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0x805000
	006 Move X8, [X20+3872]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -51314688
	011 Move V0, [X12+1600]
	012 Move X8, -51286016
	013 Move X10, -51220480
	014 Add X8, X8, 2960
	015 Move W9, 14
	016 Add X10, X10, 2725
	017 Move W11, 13
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3872], X0
	030 Add X9, X19, 20
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CSEL not yet implemented."
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move X20, [X31+64]
	035 Move X19, [X31+72]
	036 Move X30, [X31+48]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CSET not yet implemented."
	039 Add X31, X31, 80
	040 Return X0

Method: System.Void UnloadOVRPlugin()

Disassembly:
	0x03BDE9B8 MOV X19, X0
	0x03BDE9BC LDR W9, [X8 + 0xE0]
	0x03BDE9C0 CBNZ W9, 0x3BDE9D0
	0x03BDE9C4 MOV X0, X8
	0x03BDE9C8 BL 0x1C16DFC
	0x03BDE9CC LDR X8, [X21]
	0x03BDE9D0 LDR X9, [X8 + 0xB8]
	0x03BDE9D4 STR X19, [X9 + 0x8]
	0x03BDE9D8 LDR W9, [X8 + 0xE0]
	0x03BDE9DC CBNZ W9, 0x3BDE9EC
	0x03BDE9E0 MOV X0, X8
	0x03BDE9E4 BL 0x1C16DFC
	0x03BDE9E8 LDR X8, [X21]
	0x03BDE9EC LDR X8, [X8 + 0xB8]
	0x03BDE9F0 LDP X20, X19, [X31 + 0x10]
	0x03BDE9F4 LDR X0, [X8 + 0x8]
	0x03BDE9F8 LDP X30, X21, [X31], #0x20
	0x03BDE9FC RET
	0x03BDEA00 BL 0x1C16F20
	0x03BDEA04 STP X30, X21, [X31 - 0x20]!
	0x03BDEA08 STP X20, X19, [X31 + 0x10]
	0x03BDEA0C ADRP X21, 0x804000
	0x03BDEA10 ADRP X20, 0x515000
	0x03BDEA14 LDRB W8, [X21 + 0xFFE]
	0x03BDEA18 LDR X20, [X20 + 0xA28]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0x805000
	005 Move X0, [X19+3880]
	006 Compare X0, 0
	007 JumpIfNotEqual {26}
	008 Move X12, -51314688
	009 Move V0, [X12+1800]
	010 Move X8, -51286016
	011 Move X10, -51277824
	012 Add X8, X8, 2960
	013 Move W9, 14
	014 Add X10, X10, 2634
	015 Move W11, 15
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move [X19+3880], X0
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move X30, [X31+48]
	028 Move X19, [X31+56]
	029 Add X31, X31, 64
	030 Return 

Method: System.Void SetUserDefinedSettings(Unity.XR.Oculus.NativeMethods/UserDefinedSettings settings)

Disassembly:
	0x03BDEA1C MOV X19, X0
	0x03BDEA20 TBNZ X8, 0x0, 0x3BDEA5C
	0x03BDEA24 ADRP X0, 0x515000
	0x03BDEA28 LDR X0, [X0 + 0xA28]
	0x03BDEA2C BL 0x1C16CF4
	0x03BDEA30 ADRP X0, 0x580000
	0x03BDEA34 LDR X0, [X0 + 0x108]
	0x03BDEA38 BL 0x1C16CF4
	0x03BDEA3C ADRP X0, 0x580000
	0x03BDEA40 LDR X0, [X0 + 0x120]
	0x03BDEA44 BL 0x1C16CF4
	0x03BDEA48 ADRP X0, 0x580000
	0x03BDEA4C LDR X0, [X0 + 0x128]
	0x03BDEA50 BL 0x1C16CF4
	0x03BDEA54 MOVZ W8, 0x1
	0x03BDEA58 STRB W8, [X21 + 0xFFE]
	0x03BDEA5C LDR X0, [X20]
	0x03BDEA60 LDR X20, [X19 + 0x48]
	0x03BDEA64 LDR W8, [X0 + 0xE0]
	0x03BDEA68 CBZ W8, 0x3BDEA8C
	0x03BDEA6C CBZ X20, 0x3BDEA94
	0x03BDEA70 ADRP X8, 0x580000
	0x03BDEA74 LDR X8, [X8 + 0x128]
	0x03BDEA78 LDP X20, X19, [X31 + 0x10]
	0x03BDEA7C MOV X1, X31
	0x03BDEA80 LDR X0, [X8]
	0x03BDEA84 LDP X30, X21, [X31], #0x20
	0x03BDEA88 B 0x3C0649C
	0x03BDEA8C BL 0x1C16DFC
	0x03BDEA90 CBNZ X20, 0x3BDEA70
	0x03BDEA94 ADRP X8, 0x580000
	0x03BDEA98 LDR X8, [X8 + 0x120]
	0x03BDEA9C MOV X1, X31
	0x03BDEAA0 LDR X0, [X8]
	0x03BDEAA4 BL 0x3C06048

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+80], X30
	003 Move [X31+96], X20
	004 Move [X31+104], X19
	005 Move X20, 0x805000
	006 Move X8, [X20+3888]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -51314688
	011 Move V0, [X12+1800]
	012 Move X8, -51286016
	013 Move X10, -51269632
	014 Add X8, X8, 2960
	015 Move W9, 14
	016 Add X10, X10, 2279
	017 Move W11, 22
	018 Move W13, 32
	019 Add X0, X31, 32
	020 Move [X31+32], X8
	021 Move [X31+40], X9
	022 Move [X31+48], X10
	023 Move [X31+56], X11
	024 Move [X31+72], W13
	025 Move [X31+64], D0
	026 Move [X31+76], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3888], X0
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 Move V1, [X19]
	032 Add X0, X31, 0
	033 Move [X31+14], V0
	034 Move [X31], V1
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move X20, [X31+96]
	037 Move X19, [X31+104]
	038 Move X30, [X31+80]
	039 Add X31, X31, 112
	040 Return 

Method: System.Int32 SetCPULevel(System.Int32 cpuLevel)

Disassembly:
	0x03BDEAA8 ADRP X20, 0x580000
	0x03BDEAAC LDR X20, [X20 + 0x108]
	0x03BDEAB0 LDR X0, [X20]
	0x03BDEAB4 LDR W8, [X0 + 0xE0]
	0x03BDEAB8 CBNZ W8, 0x3BDEAC0
	0x03BDEABC BL 0x1C16DFC
	0x03BDEAC0 ADRP X21, 0x805000
	0x03BDEAC4 LDRB W8, [X21 + 0x11]
	0x03BDEAC8 CBNZ W8, 0x3BDEAE0
	0x03BDEACC ADRP X0, 0x580000
	0x03BDEAD0 LDR X0, [X0 + 0x108]
	0x03BDEAD4 BL 0x1C16CF4
	0x03BDEAD8 MOVZ W8, 0x1
	0x03BDEADC STRB W8, [X21 + 0x11]
	0x03BDEAE0 LDR X0, [X20]
	0x03BDEAE4 LDR W8, [X0 + 0xE0]
	0x03BDEAE8 CBNZ W8, 0x3BDEAF4
	0x03BDEAEC BL 0x1C16DFC
	0x03BDEAF0 LDR X0, [X20]
	0x03BDEAF4 LDR X8, [X0 + 0xB8]
	0x03BDEAF8 MOV X0, X19
	0x03BDEAFC LDR V0, [X8 + 0x14]
	0x03BDEB00 BL 0x3BDEB24
	0x03BDEB04 MOV X1, X0
	0x03BDEB08 MOV X0, X19
	0x03BDEB0C MOV X2, X31
	0x03BDEB10 BL 0x3C366FC
	0x03BDEB14 STR X0, [X19 + 0x48]
	0x03BDEB18 LDP X20, X19, [X31 + 0x10]
	0x03BDEB1C LDP X30, X21, [X31], #0x20
	0x03BDEB20 RET

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0x805000
	006 Move X8, [X20+3896]
	007 Move W19, W0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -51314688
	011 Move V0, [X12+1800]
	012 Move X8, -51286016
	013 Move X10, -51228672
	014 Add X8, X8, 2960
	015 Move W9, 14
	016 Add X10, X10, 2087
	017 Move W11, 11
	018 Move W13, 4
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3896], X0
	030 Move W0, W19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Int32 SetGPULevel(System.Int32 gpuLevel)

Disassembly:
	0x03BDEB24 STR D8, [X31 - 0x30]!
	0x03BDEB28 STP X30, X21, [X31 + 0x10]
	0x03BDEB2C STP X20, X19, [X31 + 0x20]
	0x03BDEB30 ADRP X20, 0x804000
	0x03BDEB34 ADRP X21, 0x580000
	0x03BDEB38 LDRB W8, [X20 + 0xFFF]
	0x03BDEB3C LDR X21, [X21 + 0x130]
	0x03BDEB40 MOV V8.16B, V0.16B
	0x03BDEB44 MOV X19, X0
	0x03BDEB48 TBNZ X8, 0x0, 0x3BDEB60
	0x03BDEB4C ADRP X0, 0x580000
	0x03BDEB50 LDR X0, [X0 + 0x130]
	0x03BDEB54 BL 0x1C16CF4
	0x03BDEB58 MOVZ W8, 0x1
	0x03BDEB5C STRB W8, [X20 + 0xFFF]
	0x03BDEB60 LDR X0, [X21]
	0x03BDEB64 BL 0x1C16F10
	0x03BDEB68 MOV X1, X31
	0x03BDEB6C MOV X20, X0
	0x03BDEB70 BL 0x33BDD8C
	0x03BDEB74 STR W31, [X20 + 0x10]
	0x03BDEB78 STR X19, [X20 + 0x28]
	0x03BDEB7C STR S8, [X20 + 0x20]
	0x03BDEB80 MOV X0, X20
	0x03BDEB84 LDP X20, X19, [X31 + 0x20]
	0x03BDEB88 LDP X30, X21, [X31 + 0x10]
	0x03BDEB8C LDR V8, [X31], #0x30
	0x03BDEB90 RET
	0x03BDEB94 STR X30, [X31 - 0x20]!
	0x03BDEB98 STP X20, X19, [X31 + 0x10]
	0x03BDEB9C MOV W19, W1

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0x805000
	006 Move X8, [X20+3904]
	007 Move W19, W0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -51314688
	011 Move V0, [X12+1800]
	012 Move X8, -51286016
	013 Move X10, -51163136
	014 Add X8, X8, 2960
	015 Move W9, 14
	016 Add X10, X10, 1679
	017 Move W11, 11
	018 Move W13, 4
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3904], X0
	030 Move W0, W19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Void GetOVRPVersion(System.Byte[] version)

Disassembly:
	0x03BDEBA0 MOV X1, X31
	0x03BDEBA4 MOV X20, X0
	0x03BDEBA8 BL 0x33BDD8C
	0x03BDEBAC STR W19, [X20 + 0x10]
	0x03BDEBB0 LDP X20, X19, [X31 + 0x10]
	0x03BDEBB4 LDR X30, [X31], #0x20
	0x03BDEBB8 RET
	0x03BDEBBC STR X30, [X31 - 0x30]!
	0x03BDEBC0 STP X22, X21, [X31 + 0x10]
	0x03BDEBC4 STP X20, X19, [X31 + 0x20]
	0x03BDEBC8 ADRP X22, 0x805000
	0x03BDEBCC ADRP X21, 0x580000
	0x03BDEBD0 LDRB W8, [X22]
	0x03BDEBD4 LDR X21, [X21 + 0x138]
	0x03BDEBD8 MOV W20, W1
	0x03BDEBDC MOV X19, X0
	0x03BDEBE0 TBNZ X8, 0x0, 0x3BDEBF8
	0x03BDEBE4 ADRP X0, 0x580000
	0x03BDEBE8 LDR X0, [X0 + 0x138]
	0x03BDEBEC BL 0x1C16CF4
	0x03BDEBF0 MOVZ W8, 0x1
	0x03BDEBF4 STRB W8, [X22]
	0x03BDEBF8 LDR X0, [X21]
	0x03BDEBFC AND W21, W20, 0x1
	0x03BDEC00 BL 0x1C16F10
	0x03BDEC04 MOV X1, X31
	0x03BDEC08 MOV X20, X0
	0x03BDEC0C BL 0x33BDD8C
	0x03BDEC10 STR W31, [X20 + 0x10]
	0x03BDEC14 STR X19, [X20 + 0x20]
	0x03BDEC18 STRB W21, [X20 + 0x28]
	0x03BDEC1C MOV X0, X20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0x805000
	006 Move X8, [X20+3912]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {29}
	010 Move X11, -51314688
	011 Move V0, [X11+1600]
	012 Move X8, -51286016
	013 Move X10, -51064832
	014 Add X8, X8, 2960
	015 Move W9, 14
	016 Add X10, X10, 333
	017 Move W12, 8
	018 Add X0, X31, 0
	019 Move [X31], X8
	020 Move [X31+8], X9
	021 Move [X31+16], X10
	022 Move [X31+24], X9
	023 Move [X31+40], W12
	024 Move [X31+32], D0
	025 Move [X31+44], W31
	026 Call 0x1C1829C
	027 Move X8, X0
	028 Move [X20+3912], X0
	029 Add X9, X19, 32
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSEL not yet implemented."
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move X20, [X31+64]
	034 Move X19, [X31+72]
	035 Move X30, [X31+48]
	036 Add X31, X31, 80
	037 Return 

Method: System.Void EnablePerfMetrics(System.Boolean enable)

Disassembly:
	0x03BDEC20 LDP X20, X19, [X31 + 0x20]
	0x03BDEC24 LDP X22, X21, [X31 + 0x10]
	0x03BDEC28 LDR X30, [X31], #0x30
	0x03BDEC2C RET
	0x03BDEC30 STR X30, [X31 - 0x20]!
	0x03BDEC34 STP X20, X19, [X31 + 0x10]
	0x03BDEC38 MOV W19, W1
	0x03BDEC3C MOV X1, X31
	0x03BDEC40 MOV X20, X0
	0x03BDEC44 BL 0x33BDD8C
	0x03BDEC48 STR W19, [X20 + 0x10]
	0x03BDEC4C LDP X20, X19, [X31 + 0x10]
	0x03BDEC50 LDR X30, [X31], #0x20
	0x03BDEC54 RET
	0x03BDEC58 MOV X1, X31
	0x03BDEC5C B 0x3C36C30
	0x03BDEC60 LDR W8, [X0 + 0x10]
	0x03BDEC64 CMP W8, 0x1
	0x03BDEC68 B.EQ 0x3BDEC74
	0x03BDEC6C ADDS W31, W8, 0x3
	0x03BDEC70 B.NE 0x3BDEC78
	0x03BDEC74 B 0x3BDEED4
	0x03BDEC78 RET
	0x03BDEC7C SUB X31, X31, 0x40
	0x03BDEC80 STR D8, [X31 + 0x20]
	0x03BDEC84 STR X30, [X31 + 0x28]
	0x03BDEC88 STP X20, X19, [X31 + 0x30]
	0x03BDEC8C ADRP X20, 0x805000
	0x03BDEC90 LDRB W8, [X20 + 0x1]
	0x03BDEC94 MOV X19, X0
	0x03BDEC98 STR X0, [X31 + 0x18]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0x805000
	006 Move X8, [X20+3920]
	007 Move W19, W0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -51314688
	011 Move V0, [X12+1800]
	012 Move X8, -51286016
	013 Move X10, -51220480
	014 Add X8, X8, 2960
	015 Move W9, 14
	016 Add X10, X10, 2739
	017 Move W11, 17
	018 Move W13, 4
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3920], X0
	030 And W0, W19, 1
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.Void EnableAppMetrics(System.Boolean enable)

Disassembly:
	0x03BDEC9C TBNZ X8, 0x0, 0x3BDECE4
	0x03BDECA0 ADRP X0, 0x515000
	0x03BDECA4 LDR X0, [X0 + 0x9C8]
	0x03BDECA8 BL 0x1C16CF4
	0x03BDECAC ADRP X0, 0x515000
	0x03BDECB0 LDR X0, [X0 + 0xA28]
	0x03BDECB4 BL 0x1C16CF4
	0x03BDECB8 ADRP X0, 0x580000
	0x03BDECBC LDR X0, [X0 + 0x108]
	0x03BDECC0 BL 0x1C16CF4
	0x03BDECC4 ADRP X0, 0x518000
	0x03BDECC8 LDR X0, [X0 + 0xC30]
	0x03BDECCC BL 0x1C16CF4
	0x03BDECD0 ADRP X0, 0x580000
	0x03BDECD4 LDR X0, [X0 + 0x140]
	0x03BDECD8 BL 0x1C16CF4
	0x03BDECDC MOVZ W8, 0x1
	0x03BDECE0 STRB W8, [X20 + 0x1]
	0x03BDECE4 ADD X8, X31, 0x18
	0x03BDECE8 STP X31, X8, [X31 + 0x8]
	0x03BDECEC LDR W8, [X19 + 0x10]
	0x03BDECF0 CMP W8, 0x1
	0x03BDECF4 B.EQ 0x3BDED3C
	0x03BDECF8 CBNZ W8, 0x3BDEE40
	0x03BDECFC MOVN W8, 0x2
	0x03BDED00 STR W8, [X19 + 0x10]
	0x03BDED04 ADRP X8, 0x518000
	0x03BDED08 LDR V8, [X19 + 0x20]
	0x03BDED0C LDR X8, [X8 + 0xC30]
	0x03BDED10 LDR X0, [X8]
	0x03BDED14 BL 0x1C16F10

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0x805000
	006 Move X8, [X20+3928]
	007 Move W19, W0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -51314688
	011 Move V0, [X12+1800]
	012 Move X8, -51286016
	013 Move X10, -51081216
	014 Add X8, X8, 2960
	015 Move W9, 14
	016 Add X10, X10, 1851
	017 Move W11, 16
	018 Move W13, 4
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3928], X0
	030 And W0, W19, 1
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.Boolean SetDeveloperModeStrict(System.Boolean active)

Disassembly:
	0x03BDED18 MOV X19, X0
	0x03BDED1C MOV V0.16B, V8.16B
	0x03BDED20 MOV X1, X31
	0x03BDED24 BL 0x3C3A634
	0x03BDED28 LDR X8, [X31 + 0x18]
	0x03BDED2C MOVZ W0, 0x1
	0x03BDED30 STR X19, [X8 + 0x18]
	0x03BDED34 STR W0, [X8 + 0x10]
	0x03BDED38 B 0x3BDEE44
	0x03BDED3C MOVN W8, 0x2
	0x03BDED40 STR W8, [X19 + 0x10]
	0x03BDED44 ADRP X20, 0x580000
	0x03BDED48 LDR X20, [X20 + 0x108]
	0x03BDED4C LDR X19, [X19 + 0x28]
	0x03BDED50 LDR X0, [X20]
	0x03BDED54 LDR W8, [X0 + 0xE0]
	0x03BDED58 CBNZ W8, 0x3BDED64
	0x03BDED5C BL 0x1C16DFC
	0x03BDED60 LDR X0, [X20]
	0x03BDED64 LDR X8, [X0 + 0xB8]
	0x03BDED68 LDR W9, [X8 + 0x10]
	0x03BDED6C ADD W9, W9, 0x1
	0x03BDED70 STR W9, [X8 + 0x10]
	0x03BDED74 CBZ X19, 0x3BDEE58
	0x03BDED78 LDR X8, [X19 + 0x40]
	0x03BDED7C CBZ X8, 0x3BDEE18
	0x03BDED80 ADRP X8, 0x515000
	0x03BDED84 LDR X8, [X8 + 0x9C8]
	0x03BDED88 LDR X19, [X8]
	0x03BDED8C LDR X8, [X19 + 0x38]
	0x03BDED90 CBNZ X8, 0x3BDEDA0
	0x03BDED94 MOV X0, X19
	0x03BDED98 BL 0x1C5C6E0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0x805000
	006 Move X8, [X20+3936]
	007 Move W19, W0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -51314688
	011 Move V0, [X12+1800]
	012 Move X8, -51286016
	013 Move X10, -51195904
	014 Add X8, X8, 2960
	015 Move W9, 14
	016 Add X10, X10, 2817
	017 Move W11, 22
	018 Move W13, 4
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3936], X0
	030 And W0, W19, 1
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.Boolean GetAppHasInputFocus()

Disassembly:
	0x03BDED9C LDR X8, [X19 + 0x38]
	0x03BDEDA0 LDR X0, [X8 + 0x10]
	0x03BDEDA4 LDRB W8, [X0 + 0x135]
	0x03BDEDA8 TBNZ X8, 0x0, 0x3BDEDB0
	0x03BDEDAC BL 0x1C5C684
	0x03BDEDB0 LDR W8, [X0 + 0xE0]
	0x03BDEDB4 CBNZ W8, 0x3BDEDBC
	0x03BDEDB8 BL 0x1C16DFC
	0x03BDEDBC LDR X8, [X19 + 0x38]
	0x03BDEDC0 LDR X0, [X8 + 0x10]
	0x03BDEDC4 LDRB W8, [X0 + 0x135]
	0x03BDEDC8 TBNZ X8, 0x0, 0x3BDEDD0
	0x03BDEDCC BL 0x1C5C684
	0x03BDEDD0 ADRP X9, 0x580000
	0x03BDEDD4 LDR X8, [X0 + 0xB8]
	0x03BDEDD8 LDR X9, [X9 + 0x140]
	0x03BDEDDC LDR X1, [X8]
	0x03BDEDE0 LDR X0, [X9]
	0x03BDEDE4 MOV X2, X31
	0x03BDEDE8 BL 0x3227C5C
	0x03BDEDEC ADRP X8, 0x515000
	0x03BDEDF0 LDR X8, [X8 + 0xA28]
	0x03BDEDF4 MOV X19, X0
	0x03BDEDF8 LDR X0, [X8]
	0x03BDEDFC LDR W8, [X0 + 0xE0]
	0x03BDEE00 CBNZ W8, 0x3BDEE08
	0x03BDEE04 BL 0x1C16DFC
	0x03BDEE08 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0x805000
	005 Move X8, [X19+3944]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -51314688
	009 Move V0, [X12+1800]
	010 Move X8, -51286016
	011 Move X10, -51097600
	012 Add X8, X8, 2960
	013 Move W9, 14
	014 Add X10, X10, 2255
	015 Move W11, 19
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+3944], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Add X31, X31, 64
	033 Return X0

Method: System.Boolean GetBoundaryConfigured()

Disassembly:
	0x03BDEE0C MOV X1, X31
	0x03BDEE10 BL 0x3C0649C
	0x03BDEE14 B 0x3BDEE38
	0x03BDEE18 MOVZ W1, 0x1
	0x03BDEE1C MOV X0, X19
	0x03BDEE20 BL 0x3BDEBBC
	0x03BDEE24 MOV X1, X0
	0x03BDEE28 MOV X0, X19
	0x03BDEE2C MOV X2, X31
	0x03BDEE30 BL 0x3C366FC
	0x03BDEE34 STR X0, [X19 + 0x40]
	0x03BDEE38 LDR X0, [X31 + 0x18]
	0x03BDEE3C BL 0x3BDEED4
	0x03BDEE40 MOV W0, W31
	0x03BDEE44 LDP X20, X19, [X31 + 0x30]
	0x03BDEE48 LDR X30, [X31 + 0x28]
	0x03BDEE4C LDR V8, [X31 + 0x20]
	0x03BDEE50 ADD X31, X31, 0x40
	0x03BDEE54 RET
	0x03BDEE58 BL 0x1C16F20
	0x03BDEE5C B 0x3BDEE74
	0x03BDEE60 B 0x3BDEE74
	0x03BDEE64 B 0x3BDEE74
	0x03BDEE68 B 0x3BDEE74
	0x03BDEE6C B 0x3BDEE74
	0x03BDEE70 B 0x3BDEE74
	0x03BDEE74 CMP W1, 0x1
	0x03BDEE78 B.NE 0x3BDEEA8

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0x805000
	005 Move X8, [X19+3952]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -51314688
	009 Move V0, [X12+1800]
	010 Move X8, -51286016
	011 Move X10, -51269632
	012 Add X8, X8, 2960
	013 Move W9, 14
	014 Add X10, X10, 2302
	015 Move W11, 21
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+3952], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Add X31, X31, 64
	033 Return X0

Method: System.Boolean GetBoundaryDimensions(Unity.XR.Oculus.Boundary/BoundaryType boundaryType, out UnityEngine.Vector3 dimensions)

Disassembly:
	0x03BDEE7C BL 0x3EB1AD0
	0x03BDEE80 LDR X19, [X0]
	0x03BDEE84 STR X19, [X31 + 0x8]
	0x03BDEE88 BL 0x3EB1AE0
	0x03BDEE8C CBZ X19, 0x3BDEE40
	0x03BDEE90 ADD X8, X31, 0x8
	0x03BDEE94 ADD X0, X8, 0x8
	0x03BDEE98 BL 0x1C01B0C
	0x03BDEE9C MOV X0, X19
	0x03BDEEA0 BL 0x1C16F18
	0x03BDEEA4 CBNZ X19, 0x3BDEEAC
	0x03BDEEA8 BL 0x1D2C690
	0x03BDEEAC LDR X0, [X31 + 0x18]
	0x03BDEEB0 LDR W8, [X0 + 0x10]
	0x03BDEEB4 CMP W8, 0x1
	0x03BDEEB8 B.EQ 0x3BDEEC4
	0x03BDEEBC ADDS W31, W8, 0x3
	0x03BDEEC0 B.NE 0x3BDEEC8
	0x03BDEEC4 BL 0x3BDEED4
	0x03BDEEC8 MOV X0, X19
	0x03BDEECC BL 0x1C16F18
	0x03BDEED0 BL 0x1990590
	0x03BDEED4 STR X30, [X31 - 0x10]!
	0x03BDEED8 LDR X8, [X0 + 0x28]
	0x03BDEEDC MOVN W9, 0x0
	0x03BDEEE0 STR W9, [X0 + 0x10]
	0x03BDEEE4 CBZ X8, 0x3BDEF10
	0x03BDEEE8 LDR X9, [X8 + 0x38]
	0x03BDEEEC STR X31, [X8 + 0x48]
	0x03BDEEF0 CBZ X9, 0x3BDEF08
	0x03BDEEF4 LDR X2, [X9 + 0x18]
	0x03BDEEF8 LDR X0, [X9 + 0x40]
	0x03BDEEFC LDR X1, [X9 + 0x28]
	0x03BDEF00 LDR X30, [X31], #0x10
	0x03BDEF04 BR X2

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0x805000
	007 Move X8, [X21+3960]
	008 Move X19, X1
	009 Move W20, W0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -51314688
	013 Move V0, [X12+1800]
	014 Move X8, -51286016
	015 Move X10, -51097600
	016 Add X8, X8, 2960
	017 Move W9, 14
	018 Add X10, X10, 2275
	019 Move W11, 21
	020 Move W13, 12
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+3960], X0
	032 Move W0, W20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CSET not yet implemented."
	041 Add X31, X31, 80
	042 Return X0

Method: System.Boolean GetBoundaryVisible()

Disassembly:
	0x03BDEF08 LDR X30, [X31], #0x10
	0x03BDEF0C RET
	0x03BDEF10 BL 0x1C16F20
	0x03BDEF14 LDR X0, [X0 + 0x18]
	0x03BDEF18 RET
	0x03BDEF1C STP X30, X19, [X31 - 0x10]!
	0x03BDEF20 ADRP X0, 0x515000
	0x03BDEF24 LDR X0, [X0 + 0xB40]
	0x03BDEF28 BL 0x1C16D08
	0x03BDEF2C BL 0x1C16F10
	0x03BDEF30 MOV X1, X31
	0x03BDEF34 MOV X19, X0
	0x03BDEF38 BL 0x3380310
	0x03BDEF3C ADRP X0, 0x580000
	0x03BDEF40 LDR X0, [X0 + 0x148]
	0x03BDEF44 BL 0x1C16D08
	0x03BDEF48 MOV X1, X0
	0x03BDEF4C MOV X0, X19
	0x03BDEF50 BL 0x1C16DEC
	0x03BDEF54 LDR X0, [X0 + 0x18]
	0x03BDEF58 RET
	0x03BDEF5C LDR W8, [X0 + 0x10]
	0x03BDEF60 ADD W8, W8, 0x3
	0x03BDEF64 CMP W8, 0x6
	0x03BDEF68 B.HI 0x3BDEF84
	0x03BDEF6C MOVZ W9, 0x1
	0x03BDEF70 LSLV W8, W9, W8
	0x03BDEF74 MOVZ W9, 0x71

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0x805000
	005 Move X8, [X19+3968]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -51314688
	009 Move V0, [X12+1800]
	010 Move X8, -51286016
	011 Move X10, -51163136
	012 Add X8, X8, 2960
	013 Move W9, 14
	014 Add X10, X10, 1691
	015 Move W11, 18
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+3968], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Add X31, X31, 64
	033 Return X0

Method: System.Void SetBoundaryVisible(System.Boolean boundaryVisible)

Disassembly:
	0x03BDEF78 ANDS W31, W8, W9, 0x0
	0x03BDEF7C B.EQ 0x3BDEF84
	0x03BDEF80 B 0x3BDF3C8
	0x03BDEF84 RET
	0x03BDEF88 SUB X31, X31, 0x40
	0x03BDEF8C STP X30, X21, [X31 + 0x20]
	0x03BDEF90 STP X20, X19, [X31 + 0x30]
	0x03BDEF94 ADRP X20, 0x805000
	0x03BDEF98 LDRB W8, [X20 + 0x2]
	0x03BDEF9C MOV X19, X0
	0x03BDEFA0 STR X0, [X31 + 0x18]
	0x03BDEFA4 TBNZ X8, 0x0, 0x3BDEFF8
	0x03BDEFA8 ADRP X0, 0x515000
	0x03BDEFAC LDR X0, [X0 + 0xA28]
	0x03BDEFB0 BL 0x1C16CF4
	0x03BDEFB4 ADRP X0, 0x515000
	0x03BDEFB8 LDR X0, [X0 + 0x598]
	0x03BDEFBC BL 0x1C16CF4
	0x03BDEFC0 ADRP X0, 0x580000
	0x03BDEFC4 LDR X0, [X0 + 0x108]
	0x03BDEFC8 BL 0x1C16CF4
	0x03BDEFCC ADRP X0, 0x57F000
	0x03BDEFD0 LDR X0, [X0 + 0xD50]
	0x03BDEFD4 BL 0x1C16CF4
	0x03BDEFD8 ADRP X0, 0x580000
	0x03BDEFDC LDR X0, [X0 + 0x150]
	0x03BDEFE0 BL 0x1C16CF4
	0x03BDEFE4 ADRP X0, 0x580000
	0x03BDEFE8 LDR X0, [X0 + 0x158]
	0x03BDEFEC BL 0x1C16CF4
	0x03BDEFF0 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0x805000
	006 Move X8, [X20+3976]
	007 Move W19, W0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -51314688
	011 Move V0, [X12+1800]
	012 Move X8, -51286016
	013 Move X10, -51081216
	014 Add X8, X8, 2960
	015 Move W9, 14
	016 Add X10, X10, 1868
	017 Move W11, 18
	018 Move W13, 4
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3976], X0
	030 And W0, W19, 1
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.Boolean GetAppShouldQuit()

Disassembly:
	0x03BDEFF8 ADD X8, X31, 0x18
	0x03BDEFFC STR X8, [X31 + 0x10]
	0x03BDF000 LDR W8, [X19 + 0x10]
	0x03BDF004 CMP W8, 0x3
	0x03BDF008 B.HI 0x3BDF2E4
	0x03BDF00C LDR X20, [X19 + 0x20]
	0x03BDF010 ADRP X9, 0xFFFFFFFFFCFB8000
	0x03BDF014 ADD X9, X9, 0xDAF
	0x03BDF018 ADR X10, 0x10
	0x03BDF01C LDRB W11, [X9, X8, LSL]
	0x03BDF020 ADD X10, X10, X11, 0x2, LSL
	0x03BDF024 BR X10
	0x03BDF028 MOVZ W8, 0x1
	0x03BDF02C STR X31, [X19 + 0x18]
	0x03BDF030 STR W8, [X19 + 0x10]
	0x03BDF034 B 0x3BDF2E8
	0x03BDF038 MOVN W8, 0x2
	0x03BDF03C STR W8, [X19 + 0x10]
	0x03BDF040 CBZ X20, 0x3BDF2FC
	0x03BDF044 LDR X8, [X20 + 0x28]
	0x03BDF048 CBZ X8, 0x3BDF060
	0x03BDF04C LDR X0, [X8 + 0x40]
	0x03BDF050 LDR X1, [X8 + 0x28]
	0x03BDF054 LDR X9, [X8 + 0x18]
	0x03BDF058 BLR X9
	0x03BDF05C LDR X19, [X31 + 0x18]
	0x03BDF060 LDRB W8, [X19 + 0x28]
	0x03BDF064 CBZ W8, 0x3BDF2DC

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0x804000
	005 Move X8, [X19+3984]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -51318784
	009 Move V0, [X12+1800]
	010 Move X8, -51290112
	011 Move X10, -51265536
	012 Add X8, X8, 2960
	013 Move W9, 14
	014 Add X10, X10, 2987
	015 Move W11, 16
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+3984], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Add X31, X31, 64
	033 Return X0

Method: System.Boolean GetDisplayAvailableFrequencies(System.IntPtr ptr, ref System.Int32 numFrequencies)

Disassembly:
	0x03BDF068 ADRP X19, 0x57E000
	0x03BDF06C LDR X19, [X19 + 0xD50]
	0x03BDF070 LDR X0, [X19]
	0x03BDF074 LDR W8, [X0 + 0xE0]
	0x03BDF078 CBNZ W8, 0x3BDF080
	0x03BDF07C BL 0x1C16DFC
	0x03BDF080 ADRP X20, 0x803000
	0x03BDF084 LDRB W8, [X20 + 0xEC9]
	0x03BDF088 CBNZ W8, 0x3BDF0A0
	0x03BDF08C ADRP X0, 0x57E000
	0x03BDF090 LDR X0, [X0 + 0xD50]
	0x03BDF094 BL 0x1C16CF4
	0x03BDF098 MOVZ W8, 0x1
	0x03BDF09C STRB W8, [X20 + 0xEC9]
	0x03BDF0A0 LDR X0, [X19]
	0x03BDF0A4 LDR W8, [X0 + 0xE0]
	0x03BDF0A8 CBNZ W8, 0x3BDF0B4
	0x03BDF0AC BL 0x1C16DFC
	0x03BDF0B0 LDR X0, [X19]
	0x03BDF0B4 LDR X8, [X0 + 0xB8]
	0x03BDF0B8 LDR X8, [X8 + 0x8]
	0x03BDF0BC CBZ X8, 0x3BDF31C
	0x03BDF0C0 LDR X0, [X8 + 0x18]
	0x03BDF0C4 CBZ X0, 0x3BDF320
	0x03BDF0C8 MOV X1, X31
	0x03BDF0CC BL 0x3BD9B88
	0x03BDF0D0 LDR X8, [X31 + 0x18]
	0x03BDF0D4 MOVZ W9, 0x3
	0x03BDF0D8 STR X0, [X8 + 0x18]
	0x03BDF0DC B 0x3BDF274
	0x03BDF0E0 MOVN W8, 0x2
	0x03BDF0E4 STR W8, [X19 + 0x10]
	0x03BDF0E8 ADRP X19, 0x57E000
	0x03BDF0EC LDR X19, [X19 + 0xD50]
	0x03BDF0F0 LDR X0, [X19]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0x804000
	007 Move X8, [X21+3992]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -51318784
	013 Move V0, [X12+1800]
	014 Move X8, -51290112
	015 Move X10, -51154944
	016 Add X8, X8, 2960
	017 Move W9, 14
	018 Add X10, X10, 3825
	019 Move W11, 30
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+3992], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CSET not yet implemented."
	041 Add X31, X31, 80
	042 Return X0

Method: System.Boolean SetDisplayFrequency(System.Single refreshRate)

Disassembly:
	0x03BDF0F4 LDR W8, [X0 + 0xE0]
	0x03BDF0F8 CBNZ W8, 0x3BDF100
	0x03BDF0FC BL 0x1C16DFC
	0x03BDF100 ADRP X21, 0x803000
	0x03BDF104 LDRB W8, [X21 + 0xEC9]
	0x03BDF108 CBNZ W8, 0x3BDF120
	0x03BDF10C ADRP X0, 0x57E000
	0x03BDF110 LDR X0, [X0 + 0xD50]
	0x03BDF114 BL 0x1C16CF4
	0x03BDF118 MOVZ W8, 0x1
	0x03BDF11C STRB W8, [X21 + 0xEC9]
	0x03BDF120 LDR X0, [X19]
	0x03BDF124 LDR W8, [X0 + 0xE0]
	0x03BDF128 CBNZ W8, 0x3BDF134
	0x03BDF12C BL 0x1C16DFC
	0x03BDF130 LDR X0, [X19]
	0x03BDF134 LDR X8, [X0 + 0xB8]
	0x03BDF138 LDR X8, [X8 + 0x8]
	0x03BDF13C CBZ X8, 0x3BDF300
	0x03BDF140 LDR X0, [X8 + 0x18]
	0x03BDF144 CBZ X0, 0x3BDF308
	0x03BDF148 MOV X1, X31
	0x03BDF14C BL 0x3BD947C
	0x03BDF150 LDRB W8, [X21 + 0xEC9]
	0x03BDF154 CBNZ W8, 0x3BDF16C
	0x03BDF158 ADRP X0, 0x57E000
	0x03BDF15C LDR X0, [X0 + 0xD50]
	0x03BDF160 BL 0x1C16CF4
	0x03BDF164 MOVZ W8, 0x1
	0x03BDF168 STRB W8, [X21 + 0xEC9]
	0x03BDF16C LDR X0, [X19]
	0x03BDF170 LDR W8, [X0 + 0xE0]
	0x03BDF174 CBNZ W8, 0x3BDF180

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], D8
	003 Move [X31+64], X30
	004 Move [X31+72], X19
	005 Move X19, 0x804000
	006 Move X8, [X19+4000]
	007 Move V8, V0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -51318784
	011 Move V0, [X12+1800]
	012 Move X8, -51290112
	013 Move X10, -51240960
	014 Add X8, X8, 2960
	015 Move W9, 14
	016 Add X10, X10, 1767
	017 Move W11, 19
	018 Move W13, 4
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X19+4000], X0
	030 Move V0, V8
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X30, [X31+64]
	033 Move X19, [X31+72]
	034 Move V8, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.Boolean GetDisplayFrequency(out System.Single refreshRate)

Disassembly:
	0x03BDF178 BL 0x1C16DFC
	0x03BDF17C LDR X0, [X19]
	0x03BDF180 LDR X8, [X0 + 0xB8]
	0x03BDF184 LDR X8, [X8 + 0x8]
	0x03BDF188 CBZ X8, 0x3BDF310
	0x03BDF18C LDR X8, [X8 + 0x18]
	0x03BDF190 CBZ X8, 0x3BDF314
	0x03BDF194 ADRP X9, 0x514000
	0x03BDF198 LDR X9, [X9 + 0x598]
	0x03BDF19C LDR X19, [X8 + 0x30]
	0x03BDF1A0 LDR X0, [X9]
	0x03BDF1A4 LDR W9, [X0 + 0xE0]
	0x03BDF1A8 CBNZ W9, 0x3BDF1B0
	0x03BDF1AC BL 0x1C16DFC
	0x03BDF1B0 MOV X0, X19
	0x03BDF1B4 MOV X1, X31
	0x03BDF1B8 MOV X2, X31
	0x03BDF1BC BL 0x3C3883C
	0x03BDF1C0 ADRP X9, 0x514000
	0x03BDF1C4 LDR X9, [X9 + 0xA28]
	0x03BDF1C8 MOV W8, W0
	0x03BDF1CC LDR X0, [X9]
	0x03BDF1D0 LDR W9, [X0 + 0xE0]
	0x03BDF1D4 TBZ X8, 0x0, 0x3BDF280
	0x03BDF1D8 CBNZ W9, 0x3BDF1E0
	0x03BDF1DC BL 0x1C16DFC
	0x03BDF1E0 ADRP X8, 0x57F000
	0x03BDF1E4 LDR X8, [X8 + 0x150]
	0x03BDF1E8 LDR X0, [X8]
	0x03BDF1EC MOV X1, X31
	0x03BDF1F0 BL 0x3C0649C
	0x03BDF1F4 B 0x3BDF2C0
	0x03BDF1F8 MOVN W8, 0x2

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0x804000
	006 Move X8, [X20+4008]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -51318784
	011 Move V0, [X12+1800]
	012 Move X8, -51290112
	013 Move X10, -51167232
	014 Add X8, X8, 2960
	015 Move W9, 14
	016 Add X10, X10, 1710
	017 Move W11, 19
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+4008], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: Unity.XR.Oculus.SystemHeadset GetSystemHeadsetType()

Disassembly:
	0x03BDF1FC STR W8, [X19 + 0x10]
	0x03BDF200 ADRP X19, 0x57E000
	0x03BDF204 LDR X19, [X19 + 0xD50]
	0x03BDF208 LDR X0, [X19]
	0x03BDF20C LDR W8, [X0 + 0xE0]
	0x03BDF210 CBNZ W8, 0x3BDF218
	0x03BDF214 BL 0x1C16DFC
	0x03BDF218 ADRP X20, 0x803000
	0x03BDF21C LDRB W8, [X20 + 0xEC9]
	0x03BDF220 CBNZ W8, 0x3BDF238
	0x03BDF224 ADRP X0, 0x57E000
	0x03BDF228 LDR X0, [X0 + 0xD50]
	0x03BDF22C BL 0x1C16CF4
	0x03BDF230 MOVZ W8, 0x1
	0x03BDF234 STRB W8, [X20 + 0xEC9]
	0x03BDF238 LDR X0, [X19]
	0x03BDF23C LDR W8, [X0 + 0xE0]
	0x03BDF240 CBNZ W8, 0x3BDF24C
	0x03BDF244 BL 0x1C16DFC
	0x03BDF248 LDR X0, [X19]
	0x03BDF24C LDR X8, [X0 + 0xB8]
	0x03BDF250 LDR X8, [X8 + 0x8]
	0x03BDF254 CBZ X8, 0x3BDF304
	0x03BDF258 LDR X0, [X8 + 0x18]
	0x03BDF25C CBZ X0, 0x3BDF30C
	0x03BDF260 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0x804000
	005 Move X8, [X19+4016]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -51318784
	009 Move V0, [X12+1800]
	010 Move X8, -51290112
	011 Move X10, -51142656
	012 Add X8, X8, 2960
	013 Move W9, 14
	014 Add X10, X10, 211
	015 Move W11, 20
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+4016], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.Boolean GetTiledMultiResSupported()

Disassembly:
	0x03BDF264 BL 0x3BD96E0
	0x03BDF268 LDR X8, [X31 + 0x18]
	0x03BDF26C MOVZ W9, 0x2
	0x03BDF270 STR X31, [X8 + 0x18]
	0x03BDF274 STR W9, [X8 + 0x10]
	0x03BDF278 MOVZ W8, 0x1
	0x03BDF27C B 0x3BDF2E8
	0x03BDF280 CBNZ W9, 0x3BDF288
	0x03BDF284 BL 0x1C16DFC
	0x03BDF288 ADRP X8, 0x57F000
	0x03BDF28C LDR X8, [X8 + 0x158]
	0x03BDF290 LDR X0, [X8]
	0x03BDF294 MOV X1, X31
	0x03BDF298 BL 0x3C06048
	0x03BDF29C ADRP X19, 0x57F000
	0x03BDF2A0 LDR X19, [X19 + 0x108]
	0x03BDF2A4 LDR X0, [X19]
	0x03BDF2A8 LDR W8, [X0 + 0xE0]
	0x03BDF2AC CBNZ W8, 0x3BDF2B8
	0x03BDF2B0 BL 0x1C16DFC
	0x03BDF2B4 LDR X0, [X19]
	0x03BDF2B8 LDR X8, [X0 + 0xB8]
	0x03BDF2BC STR W31, [X8 + 0x10]
	0x03BDF2C0 CBZ X20, 0x3BDF318
	0x03BDF2C4 LDR X8, [X20 + 0x20]
	0x03BDF2C8 CBZ X8, 0x3BDF2DC
	0x03BDF2CC LDR X0, [X8 + 0x40]
	0x03BDF2D0 LDR X1, [X8 + 0x28]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0x804000
	005 Move X8, [X19+4024]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -51318784
	009 Move V0, [X12+1800]
	010 Move X8, -51290112
	011 Move X10, -51240960
	012 Add X8, X8, 2960
	013 Move W9, 14
	014 Add X10, X10, 1787
	015 Move W11, 25
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+4024], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Add X31, X31, 64
	033 Return X0

Method: System.Void SetTiledMultiResLevel(System.Int32 level)

Disassembly:
	0x03BDF2D4 LDR X9, [X8 + 0x18]
	0x03BDF2D8 BLR X9
	0x03BDF2DC LDR X0, [X31 + 0x18]
	0x03BDF2E0 BL 0x3BDF3C8
	0x03BDF2E4 MOV W8, W31
	0x03BDF2E8 LDP X20, X19, [X31 + 0x30]
	0x03BDF2EC LDP X30, X21, [X31 + 0x20]
	0x03BDF2F0 MOV W0, W8
	0x03BDF2F4 ADD X31, X31, 0x40
	0x03BDF2F8 RET
	0x03BDF2FC BL 0x1C16F20
	0x03BDF300 BL 0x1C16F20
	0x03BDF304 BL 0x1C16F20
	0x03BDF308 BL 0x1C16F20
	0x03BDF30C BL 0x1C16F20
	0x03BDF310 BL 0x1C16F20
	0x03BDF314 BL 0x1C16F20
	0x03BDF318 BL 0x1C16F20
	0x03BDF31C BL 0x1C16F20
	0x03BDF320 BL 0x1C16F20
	0x03BDF324 B 0x3BDF358
	0x03BDF328 B 0x3BDF358
	0x03BDF32C B 0x3BDF358
	0x03BDF330 B 0x3BDF358
	0x03BDF334 B 0x3BDF358
	0x03BDF338 B 0x3BDF358
	0x03BDF33C B 0x3BDF358
	0x03BDF340 B 0x3BDF358
	0x03BDF344 B 0x3BDF358
	0x03BDF348 B 0x3BDF358
	0x03BDF34C B 0x3BDF358

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0x804000
	006 Move X8, [X20+4032]
	007 Move W19, W0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -51318784
	011 Move V0, [X12+1800]
	012 Move X8, -51290112
	013 Move X10, -51191808
	014 Add X8, X8, 2960
	015 Move W9, 14
	016 Add X10, X10, 1468
	017 Move W11, 21
	018 Move W13, 4
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+4032], X0
	030 Move W0, W19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.Int32 GetTiledMultiResLevel()

Disassembly:
	0x03BDF350 B 0x3BDF358
	0x03BDF354 B 0x3BDF358
	0x03BDF358 CMP W1, 0x1
	0x03BDF35C B.NE 0x3BDF38C
	0x03BDF360 BL 0x3EB1AD0
	0x03BDF364 LDR X19, [X0]
	0x03BDF368 STR X19, [X31 + 0x8]
	0x03BDF36C BL 0x3EB1AE0
	0x03BDF370 CBZ X19, 0x3BDF2E4
	0x03BDF374 ADD X8, X31, 0x8
	0x03BDF378 ADD X0, X8, 0x8
	0x03BDF37C BL 0x1C01B2C
	0x03BDF380 MOV X0, X19
	0x03BDF384 BL 0x1C16F18
	0x03BDF388 CBNZ X19, 0x3BDF390
	0x03BDF38C BL 0x1D2C690
	0x03BDF390 LDR X0, [X31 + 0x18]
	0x03BDF394 LDR W8, [X0 + 0x10]
	0x03BDF398 ADD W8, W8, 0x3
	0x03BDF39C CMP W8, 0x6
	0x03BDF3A0 B.HI 0x3BDF3BC
	0x03BDF3A4 MOVZ W9, 0x1
	0x03BDF3A8 LSLV W8, W9, W8
	0x03BDF3AC MOVZ W9, 0x71
	0x03BDF3B0 ANDS W31, W8, W9, 0x0
	0x03BDF3B4 B.EQ 0x3BDF3BC

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0x804000
	005 Move X8, [X19+4040]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -51318784
	009 Move V0, [X12+1800]
	010 Move X8, -51290112
	011 Move X10, -51200000
	012 Add X8, X8, 2960
	013 Move W9, 14
	014 Add X10, X10, 2840
	015 Move W11, 21
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+4040], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.Void SetTiledMultiResDynamic(System.Boolean isDynamic)

Disassembly:
	0x03BDF3B8 BL 0x3BDF3C8
	0x03BDF3BC MOV X0, X19
	0x03BDF3C0 BL 0x1C16F18
	0x03BDF3C4 BL 0x1990590
	0x03BDF3C8 STP X30, X21, [X31 - 0x20]!
	0x03BDF3CC STP X20, X19, [X31 + 0x10]
	0x03BDF3D0 ADRP X19, 0x804000
	0x03BDF3D4 LDRB W8, [X19 + 0x3]
	0x03BDF3D8 MOV X20, X0
	0x03BDF3DC TBNZ X8, 0x0, 0x3BDF400
	0x03BDF3E0 ADRP X0, 0x514000
	0x03BDF3E4 LDR X0, [X0 + 0x598]
	0x03BDF3E8 BL 0x1C16CF4
	0x03BDF3EC ADRP X0, 0x57E000
	0x03BDF3F0 LDR X0, [X0 + 0xD50]
	0x03BDF3F4 BL 0x1C16CF4
	0x03BDF3F8 MOVZ W8, 0x1
	0x03BDF3FC STRB W8, [X19 + 0x3]
	0x03BDF400 LDR X19, [X20 + 0x20]
	0x03BDF404 MOVN W8, 0x0
	0x03BDF408 STR W8, [X20 + 0x10]
	0x03BDF40C CBZ X19, 0x3BDF4D8
	0x03BDF410 ADRP X20, 0x57E000
	0x03BDF414 LDR X8, [X19 + 0x38]
	0x03BDF418 LDR X20, [X20 + 0xD50]
	0x03BDF41C STR X31, [X19 + 0x40]
	0x03BDF420 CBZ X8, 0x3BDF434
	0x03BDF424 LDR X9, [X8 + 0x18]
	0x03BDF428 LDR X0, [X8 + 0x40]
	0x03BDF42C LDR X1, [X8 + 0x28]
	0x03BDF430 BLR X9

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0x804000
	006 Move X8, [X20+4048]
	007 Move W19, W0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -51318784
	011 Move V0, [X12+1800]
	012 Move X8, -51290112
	013 Move X10, -51290112
	014 Add X8, X8, 2960
	015 Move W9, 14
	016 Add X10, X10, 2975
	017 Move W11, 23
	018 Move W13, 4
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+4048], X0
	030 And W0, W19, 1
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.Boolean GetEyeTrackedFoveatedRenderingSupported()

Disassembly:
	0x03BDF434 LDR X0, [X20]
	0x03BDF438 LDR W8, [X0 + 0xE0]
	0x03BDF43C CBNZ W8, 0x3BDF444
	0x03BDF440 BL 0x1C16DFC
	0x03BDF444 ADRP X21, 0x803000
	0x03BDF448 LDRB W8, [X21 + 0xEC9]
	0x03BDF44C CBNZ W8, 0x3BDF464
	0x03BDF450 ADRP X0, 0x57E000
	0x03BDF454 LDR X0, [X0 + 0xD50]
	0x03BDF458 BL 0x1C16CF4
	0x03BDF45C MOVZ W8, 0x1
	0x03BDF460 STRB W8, [X21 + 0xEC9]
	0x03BDF464 LDR X0, [X20]
	0x03BDF468 LDR W8, [X0 + 0xE0]
	0x03BDF46C CBNZ W8, 0x3BDF478
	0x03BDF470 BL 0x1C16DFC
	0x03BDF474 LDR X0, [X20]
	0x03BDF478 LDR X8, [X0 + 0xB8]
	0x03BDF47C LDR X8, [X8 + 0x8]
	0x03BDF480 CBZ X8, 0x3BDF4D8
	0x03BDF484 LDR X8, [X8 + 0x18]
	0x03BDF488 CBZ X8, 0x3BDF4D8
	0x03BDF48C ADRP X9, 0x514000
	0x03BDF490 LDR X9, [X9 + 0x598]
	0x03BDF494 LDR X20, [X8 + 0x30]
	0x03BDF498 LDR X0, [X9]
	0x03BDF49C LDR W9, [X0 + 0xE0]
	0x03BDF4A0 CBNZ W9, 0x3BDF4A8

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0x804000
	005 Move X8, [X19+4056]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -51318784
	009 Move V0, [X12+1800]
	010 Move X8, -51290112
	011 Move X10, -51281920
	012 Add X8, X8, 2960
	013 Move W9, 14
	014 Add X10, X10, 2650
	015 Move W11, 39
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+4056], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Add X31, X31, 64
	033 Return X0

Method: System.Boolean GetEyeTrackedFoveatedRenderingEnabled()

Disassembly:
	0x03BDF4A4 BL 0x1C16DFC
	0x03BDF4A8 MOV X0, X20
	0x03BDF4AC MOV X1, X31
	0x03BDF4B0 MOV X2, X31
	0x03BDF4B4 BL 0x3C3883C
	0x03BDF4B8 TBZ X0, 0x0, 0x3BDF4CC
	0x03BDF4BC MOV X0, X19
	0x03BDF4C0 LDP X20, X19, [X31 + 0x10]
	0x03BDF4C4 LDP X30, X21, [X31], #0x20
	0x03BDF4C8 B 0x3BDEA04
	0x03BDF4CC LDP X20, X19, [X31 + 0x10]
	0x03BDF4D0 LDP X30, X21, [X31], #0x20
	0x03BDF4D4 RET
	0x03BDF4D8 BL 0x1C16F20
	0x03BDF4DC LDR X0, [X0 + 0x18]
	0x03BDF4E0 RET
	0x03BDF4E4 STP X30, X19, [X31 - 0x10]!
	0x03BDF4E8 ADRP X0, 0x514000
	0x03BDF4EC LDR X0, [X0 + 0xB40]
	0x03BDF4F0 BL 0x1C16D08
	0x03BDF4F4 BL 0x1C16F10
	0x03BDF4F8 MOV X1, X31
	0x03BDF4FC MOV X19, X0
	0x03BDF500 BL 0x3380310
	0x03BDF504 ADRP X0, 0x57F000
	0x03BDF508 LDR X0, [X0 + 0x160]
	0x03BDF50C BL 0x1C16D08
	0x03BDF510 MOV X1, X0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0x804000
	005 Move X8, [X19+4064]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -51318784
	009 Move V0, [X12+1800]
	010 Move X8, -51290112
	011 Move X10, -51290112
	012 Add X8, X8, 2960
	013 Move W9, 14
	014 Add X10, X10, 2999
	015 Move W11, 37
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+4064], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Add X31, X31, 64
	033 Return X0

Method: System.Void SetEyeTrackedFoveatedRenderingEnabled(System.Boolean isEnabled)

Disassembly:
	0x03BDF514 MOV X0, X19
	0x03BDF518 BL 0x1C16DEC
	0x03BDF51C LDR X0, [X0 + 0x18]
	0x03BDF520 RET
	0x03BDF524 STP X30, X19, [X31 - 0x10]!
	0x03BDF528 ADRP X19, 0x804000
	0x03BDF52C LDRB W8, [X19 + 0x4]
	0x03BDF530 TBNZ X8, 0x0, 0x3BDF548
	0x03BDF534 ADRP X0, 0x57F000
	0x03BDF538 LDR X0, [X0 + 0x108]
	0x03BDF53C BL 0x1C16CF4
	0x03BDF540 MOVZ W8, 0x1
	0x03BDF544 STRB W8, [X19 + 0x4]
	0x03BDF548 BL 0x3BDE594
	0x03BDF54C TBZ X0, 0x0, 0x3BDF578
	0x03BDF550 ADRP X8, 0x57F000
	0x03BDF554 LDR X8, [X8 + 0x108]
	0x03BDF558 LDR X0, [X8]
	0x03BDF55C LDR W8, [X0 + 0xE0]
	0x03BDF560 CBNZ W8, 0x3BDF568
	0x03BDF564 BL 0x1C16DFC
	0x03BDF568 BL 0x3BDE838
	0x03BDF56C CBZ X0, 0x3BDF580
	0x03BDF570 LDP X30, X19, [X31], #0x10
	0x03BDF574 B 0x3BDEA04
	0x03BDF578 LDP X30, X19, [X31], #0x10
	0x03BDF57C RET
	0x03BDF580 BL 0x1C16F20
	0x03BDF584 STP X30, X21, [X31 - 0x20]!
	0x03BDF588 STP X20, X19, [X31 + 0x10]
	0x03BDF58C ADRP X20, 0x804000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0x804000
	006 Move X8, [X20+4072]
	007 Move W19, W0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -51318784
	011 Move V0, [X12+1800]
	012 Move X8, -51290112
	013 Move X10, -51281920
	014 Add X8, X8, 2960
	015 Move W9, 14
	016 Add X10, X10, 2690
	017 Move W11, 37
	018 Move W13, 4
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+4072], X0
	030 And W0, W19, 1
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.Boolean GetShouldRestartSession()

Disassembly:
	0x03BDF594 LDRB W8, [X20 + 0x5]
	0x03BDF598 LDR X21, [X21 + 0xF90]
	0x03BDF59C MOV X19, X0
	0x03BDF5A0 TBNZ X8, 0x0, 0x3BDF5B8
	0x03BDF5A4 ADRP X0, 0x57E000
	0x03BDF5A8 LDR X0, [X0 + 0xF90]
	0x03BDF5AC BL 0x1C16CF4
	0x03BDF5B0 MOVZ W8, 0x1
	0x03BDF5B4 STRB W8, [X20 + 0x5]
	0x03BDF5B8 LDR X8, [X21]
	0x03BDF5BC LDR X8, [X8 + 0xB8]
	0x03BDF5C0 STR X19, [X8]
	0x03BDF5C4 LDP X20, X19, [X31 + 0x10]
	0x03BDF5C8 LDP X30, X21, [X31], #0x20
	0x03BDF5CC RET
	0x03BDF5D0 ADRP X8, 0xFFFFFFFFFCF0E000
	0x03BDF5D4 LDR V0, [X8 + 0x5B8]
	0x03BDF5D8 MOVZ W9, 0x1
	0x03BDF5DC MOV X1, X31
	0x03BDF5E0 STRB W9, [X0 + 0x20]
	0x03BDF5E4 STRB W9, [X0 + 0x22]
	0x03BDF5E8 STRB W9, [X0 + 0x24]
	0x03BDF5EC STRB W9, [X0 + 0x26]
	0x03BDF5F0 STR D0, [X0 + 0x18]
	0x03BDF5F4 STRB W9, [X0 + 0x30]
	0x03BDF5F8 B 0x3C36D2C
	0x03BDF5FC SUB X31, X31, 0x50
	0x03BDF600 STR X30, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0x804000
	005 Move X8, [X19+4080]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -51318784
	009 Move V0, [X12+1800]
	010 Move X8, -51290112
	011 Move X10, -51249152
	012 Add X8, X8, 2960
	013 Move W9, 14
	014 Add X10, X10, 1611
	015 Move W11, 23
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+4080], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Add X31, X31, 64
	033 Return X0

