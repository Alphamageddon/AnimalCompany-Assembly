Type: Unity.XR.Oculus.NativeMethods

Method: System.Void SetColorScale(System.Single x, System.Single y, System.Single z, System.Single w)

Disassembly:
	0x03BDB744 TBZ X0, 0x0, 0x3BDB768

ISIL:
	001 Call Internal.SetColorScale, V0, V1, V2, V3
	002 Return 

Method: System.Void SetColorOffset(System.Single x, System.Single y, System.Single z, System.Single w)

Disassembly:
	0x03BDB748 ADRP X21, 0x582000

ISIL:
	001 Call Internal.SetColorOffset, V0, V1, V2, V3
	002 Return 

Method: System.Boolean GetIsSupportedDevice()

Disassembly:
	0x03BDC5C8 MOV X19, X0

ISIL:
	001 Call Internal.GetIsSupportedDevice
	002 Return X0

Method: System.Boolean LoadOVRPlugin(System.String ovrpPath)

Disassembly:
	0x03BDD1B8 ADRP X0, 0x581000

ISIL:
	001 Call Internal.LoadOVRPlugin, X0
	002 Return X0

Method: System.Void UnloadOVRPlugin()

Disassembly:
	0x03BDE9B4 LDR X8, [X21]

ISIL:
No ISIL was generated
Method: System.Void SetUserDefinedSettings(Unity.XR.Oculus.NativeMethods/UserDefinedSettings settings)

Disassembly:
	0x03BDCD34 LDR X0, [X0 + 0xEE0]
	0x03BDCD38 BL 0x1C16CF4
	0x03BDCD3C MOVZ W8, 0x1
	0x03BDCD40 STRB W8, [X20 + 0xEF1]
	0x03BDCD44 LDR X0, [X19]
	0x03BDCD48 STR W31, [X31 + 0xC]
	0x03BDCD4C ADRP X19, 0x568000
	0x03BDCD50 LDR W8, [X0 + 0xE0]
	0x03BDCD54 LDR X19, [X19 + 0xEE0]
	0x03BDCD58 CBNZ W8, 0x3BDCD60
	0x03BDCD5C BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 NotImplemented "Instruction LDUR not yet implemented."
	004 Move V1, [X0]
	005 Add X0, X31, 0
	006 Move [X31+14], V0
	007 Move [X31], V1
	008 Call Internal.SetUserDefinedSettings, X0
	009 Move X30, [X31+32]
	010 Add X31, X31, 48
	011 Return 

Method: System.Int32 SetCPULevel(System.Int32 cpuLevel)

Disassembly:
	0x03BDD300 LDR V0, [X31 + 0xC]

ISIL:
	001 Call Internal.SetCPULevel, X0
	002 Return X0

Method: System.Int32 SetGPULevel(System.Int32 gpuLevel)

Disassembly:
	0x03BDD31C ADRP X19, 0x581000

ISIL:
	001 Call Internal.SetGPULevel, X0
	002 Return X0

Method: System.Void GetOVRPVersion(System.Byte[] version)

Disassembly:
	0x03BDD61C LDR X19, [X19 + 0x30]

ISIL:
	001 Call Internal.GetOVRPVersion, X0
	002 Return 

Method: System.Void EnablePerfMetrics(System.Boolean enable)

Disassembly:
	0x03BDE410 BL 0x1C1729C
	0x03BDE414 MOV X8, X0

ISIL:
	001 And W0, W0, 1
	002 Call Internal.EnablePerfMetrics, X0
	003 Return 

Method: System.Void EnableAppMetrics(System.Boolean enable)

Disassembly:
	0x03BDE784 STP X20, X19, [X31 + 0x10]
	0x03BDE788 ADRP X20, 0x804000

ISIL:
	001 And W0, W0, 1
	002 Call Internal.EnableAppMetrics, X0
	003 Return 

Method: System.Boolean SetDeveloperModeStrict(System.Boolean active)

Disassembly:
	0x03BDC13C RET
	0x03BDC140 B 0x3BDC144

ISIL:
	001 And W0, W0, 1
	002 Call Internal.SetDeveloperModeStrict, X0
	003 Return X0

Method: System.Boolean GetHasInputFocus()

Disassembly:
	0x03BDBF3C MOVZ W8, 0x1

ISIL:
	001 Call Internal.GetAppHasInputFocus
	002 Return X0

Method: System.Boolean GetBoundaryConfigured()

Disassembly:
	0x03BDBFEC LDR X0, [X20]

ISIL:
	001 Call Internal.GetBoundaryConfigured
	002 Return X0

Method: System.Boolean GetBoundaryDimensions(Unity.XR.Oculus.Boundary/BoundaryType boundaryType, out UnityEngine.Vector3 dimensions)

Disassembly:
	0x03BDBFF4 CBNZ W8, 0x3BDBFFC

ISIL:
	001 Call Internal.GetBoundaryDimensions, X0, X1
	002 Return X0

Method: System.Boolean GetBoundaryVisible()

Disassembly:
	0x03BDBFFC MOV X0, X19

ISIL:
	001 Call Internal.GetBoundaryVisible
	002 Return X0

Method: System.Void SetBoundaryVisible(System.Boolean boundaryVisible)

Disassembly:
	0x03BDC008 MOV X1, X31
	0x03BDC00C LDR X30, [X31], #0x30

ISIL:
	001 And W0, W0, 1
	002 Call Internal.SetBoundaryVisible, X0
	003 Return 

Method: System.Boolean GetAppShouldQuit()

Disassembly:
	0x03BDEFF4 STRB W8, [X20 + 0x2]

ISIL:
No ISIL was generated
Method: System.Boolean GetDisplayAvailableFrequencies(System.IntPtr ptr, ref System.Int32 numFrequencies)

Disassembly:
	0x03BDD4BC ADRP X0, 0x581000

ISIL:
	001 Call Internal.GetDisplayAvailableFrequencies, X0, X1
	002 Return X0

Method: System.Boolean SetDisplayFrequency(System.Single refreshRate)

Disassembly:
	0x03BDD4C4 BL 0x1C16CF4

ISIL:
	001 Call Internal.SetDisplayFrequency, V0
	002 Return X0

Method: System.Boolean GetDisplayFrequency(out System.Single refreshRate)

Disassembly:
	0x03BDD4CC STRB W8, [X20 + 0xF00]

ISIL:
	001 Call Internal.GetDisplayFrequency, X0
	002 Return X0

Method: Unity.XR.Oculus.SystemHeadset GetSystemHeadsetType()

Disassembly:
	0x03BDB750 LDR X0, [X21]

ISIL:
	001 Call Internal.GetSystemHeadsetType
	002 Return X0

Method: System.Boolean GetTiledMultiResSupported()

Disassembly:
	0x03BDB808 STRH W8, [X31 + 0x5C]

ISIL:
	001 Call Internal.GetTiledMultiResSupported
	002 Return X0

Method: System.Void SetTiledMultiResLevel(System.Int32 level)

Disassembly:
	0x03BDB988 ADRP X8, 0x582000

ISIL:
	001 Call Internal.SetTiledMultiResLevel, X0
	002 Return 

Method: System.Int32 GetTiledMultiResLevel()

Disassembly:
	0x03BDB908 BL 0x22ADA1C

ISIL:
	001 Call Internal.GetTiledMultiResLevel
	002 Return X0

Method: System.Void SetTiledMultiResDynamic(System.Boolean isDynamic)

Disassembly:
	0x03BDB888 STRH W0, [X31 + 0x32]
	0x03BDB88C ADD X0, X31, 0x30

ISIL:
	001 And W0, W0, 1
	002 Call Internal.SetTiledMultiResDynamic, X0
	003 Return 

Method: System.Boolean GetEyeTrackedFoveatedRenderingSupported()

Disassembly:
	0x03BDB990 B 0x3BDB9B4

ISIL:
	001 Call Internal.GetEyeTrackedFoveatedRenderingSupported
	002 Return X0

Method: System.Boolean GetEyeTrackedFoveatedRenderingEnabled()

Disassembly:
	0x03BDB9B4 LDR X0, [X8]

ISIL:
	001 Call Internal.GetEyeTrackedFoveatedRenderingEnabled
	002 Return X0

Method: System.Void SetEyeTrackedFoveatedRenderingEnabled(System.Boolean isEnabled)

Disassembly:
	0x03BDB7B8 STRB W8, [X20 + 0xF]
	0x03BDB7BC ADRP X8, 0x582000

ISIL:
	001 And W0, W0, 1
	002 Call Internal.SetEyeTrackedFoveatedRenderingEnabled, X0
	003 Return 

Method: System.Boolean GetShouldRestartSession()

Disassembly:
	0x03BDF590 ADRP X21, 0x57E000

ISIL:
No ISIL was generated
