Type: Unity.XR.Oculus.OculusLoader

Method: Unity.XR.Oculus.OculusLoader/DeviceSupportedResult IsDeviceSupported()

Disassembly:
	0x03BDC538 LDR W9, [X0 + 0xE0]
	0x03BDC53C LDR X19, [X8]
	0x03BDC540 CBNZ W9, 0x3BDC54C
	0x03BDC544 BL 0x1C16DFC
	0x03BDC548 LDR X0, [X21]
	0x03BDC54C LDR X8, [X0 + 0xB8]
	0x03BDC550 MOV X0, X19
	0x03BDC554 MOV X2, X31
	0x03BDC558 LDR X1, [X8 + 0x8]
	0x03BDC55C BL 0x3226C14
	0x03BDC560 TBZ X0, 0x0, 0x3BDC5EC
	0x03BDC564 ADRP X8, 0x517000
	0x03BDC568 LDR X8, [X8 + 0x618]
	0x03BDC56C MOVZ W1, 0x100
	0x03BDC570 LDR X0, [X8]
	0x03BDC574 BL 0x1C16D6C
	0x03BDC578 MOV X19, X0
	0x03BDC57C BL 0x3BDDBA0
	0x03BDC580 ADRP X8, 0x563000
	0x03BDC584 LDR X8, [X8 + 0x628]
	0x03BDC588 MOV X0, X19
	0x03BDC58C MOV W1, W31
	0x03BDC590 LDR X2, [X8]
	0x03BDC594 BL 0x22E7408
	0x03BDC598 MOV W20, W0
	0x03BDC59C MOV X0, X31
	0x03BDC5A0 BL 0x3242EC8
	0x03BDC5A4 CBZ X0, 0x3BDC618
	0x03BDC5A8 LDR X8, [X0]
	0x03BDC5AC MOV X1, X19
	0x03BDC5B0 MOV W2, W31
	0x03BDC5B4 MOV W3, W20
	0x03BDC5B8 LDR X9, [X8 + 0x388]
	0x03BDC5BC LDR X4, [X8 + 0x390]
	0x03BDC5C0 BLR X9
	0x03BDC5C4 LDR X8, [X21]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Call Internal.GetIsSupportedDevice
	004 And W31, W0, 1
	005 Move W8, 2
	006 NotImplemented "Instruction CSEL not yet implemented."
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X19, X0
	012 Move X0, X19
	013 Call 0x3EB2AD0
	014 Move X19, X0
	015 Move X0, 0x557000
	016 Move X0, [X0+3664]
	017 Call 0x1C17D08
	018 Move X8, [X19]
	019 Move X1, [X8]
	020 Call 0x1C18270
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {27}
	025 Call 0x3EB2AE0
	026 Move W0, 1
	027 Move W0, 8
	028 Call 0x3EB2AF0
	029 Move X8, [X19]
	030 Move [X0], X8
	031 Move X1, 0x2D9000
	032 Add X1, X1, 3672
	033 Move X2, X31
	034 Call 0x3EB2B00
	035 Move X19, X0
	036 Call 0x3EB2AE0
	037 Move X0, X19
	038 Call 0x1D2D690
	039 Call 0x1991590

Method: UnityEngine.XR.XRDisplaySubsystem get_displaySubsystem()

Disassembly:
	0x03BDC5CC LDR W9, [X8 + 0xE0]
	0x03BDC5D0 CBNZ W9, 0x3BDC5E0
	0x03BDC5D4 MOV X0, X8
	0x03BDC5D8 BL 0x1C16DFC
	0x03BDC5DC LDR X8, [X21]
	0x03BDC5E0 LDR X9, [X8 + 0xB8]
	0x03BDC5E4 STR X19, [X9 + 0x8]
	0x03BDC5E8 B 0x3BDC5F0
	0x03BDC5EC LDR X8, [X21]
	0x03BDC5F0 LDR W9, [X8 + 0xE0]
	0x03BDC5F4 CBNZ W9, 0x3BDC604
	0x03BDC5F8 MOV X0, X8
	0x03BDC5FC BL 0x1C16DFC
	0x03BDC600 LDR X8, [X21]
	0x03BDC604 LDR X8, [X8 + 0xB8]
	0x03BDC608 LDP X20, X19, [X31 + 0x10]
	0x03BDC60C LDR X0, [X8 + 0x8]
	0x03BDC610 LDP X30, X21, [X31], #0x20
	0x03BDC614 RET
	0x03BDC618 BL 0x1C16F20
	0x03BDC61C B 0x3BDDBA0
	0x03BDC620 SUB X31, X31, 0x70
	0x03BDC624 STP X30, X23, [X31 + 0x40]
	0x03BDC628 STP X22, X21, [X31 + 0x50]
	0x03BDC62C STP X20, X19, [X31 + 0x60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x807000
	006 Move X21, 0x582000
	007 Move W8, [X20+3806]
	008 Move X21, [X21+3896]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x582000
	015 Move X0, [X0+3896]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3806], W8
	019 Move X1, [X21]
	020 Move X9, [X19]
	021 NotImplemented "Instruction LDRH not yet implemented."
	022 Add X8, X9, X8
	023 Move X0, [X8+320]
	024 Call 0x1C17DF8
	025 Move X1, X0
	026 Move X2, [X0+8]
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 CallNoReturn X2

Method: UnityEngine.XR.XRInputSubsystem get_inputSubsystem()

Disassembly:
	0x03BDC630 ADRP X19, 0x806000
	0x03BDC634 ADRP X21, 0x582000
	0x03BDC638 LDRB W8, [X19 + 0xEEA]
	0x03BDC63C LDR X21, [X21 + 0x30]
	0x03BDC640 TBNZ X8, 0x0, 0x3BDC6E8
	0x03BDC644 ADRP X0, 0x517000
	0x03BDC648 LDR X0, [X0 + 0xA28]
	0x03BDC64C BL 0x1C16CF4
	0x03BDC650 ADRP X0, 0x574000
	0x03BDC654 LDR X0, [X0 + 0x6E8]
	0x03BDC658 BL 0x1C16CF4
	0x03BDC65C ADRP X0, 0x574000
	0x03BDC660 LDR X0, [X0 + 0x6F0]
	0x03BDC664 BL 0x1C16CF4
	0x03BDC668 ADRP X0, 0x574000
	0x03BDC66C LDR X0, [X0 + 0x6F8]
	0x03BDC670 BL 0x1C16CF4
	0x03BDC674 ADRP X0, 0x582000
	0x03BDC678 LDR X0, [X0 + 0x38]
	0x03BDC67C BL 0x1C16CF4
	0x03BDC680 ADRP X0, 0x574000
	0x03BDC684 LDR X0, [X0 + 0x700]
	0x03BDC688 BL 0x1C16CF4
	0x03BDC68C ADRP X0, 0x574000
	0x03BDC690 LDR X0, [X0 + 0x720]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x807000
	006 Move X21, 0x582000
	007 Move W8, [X20+3807]
	008 Move X21, [X21+3904]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x582000
	015 Move X0, [X0+3904]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3807], W8
	019 Move X1, [X21]
	020 Move X9, [X19]
	021 NotImplemented "Instruction LDRH not yet implemented."
	022 Add X8, X9, X8
	023 Move X0, [X8+320]
	024 Call 0x1C17DF8
	025 Move X1, X0
	026 Move X2, [X0+8]
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 CallNoReturn X2

Method: System.Boolean Initialize()

Disassembly:
	0x03BDC694 BL 0x1C16CF4
	0x03BDC698 ADRP X0, 0x574000
	0x03BDC69C LDR X0, [X0 + 0x718]
	0x03BDC6A0 BL 0x1C16CF4
	0x03BDC6A4 ADRP X0, 0x582000
	0x03BDC6A8 LDR X0, [X0 + 0x30]
	0x03BDC6AC BL 0x1C16CF4
	0x03BDC6B0 ADRP X0, 0x582000
	0x03BDC6B4 LDR X0, [X0 + 0x40]
	0x03BDC6B8 BL 0x1C16CF4
	0x03BDC6BC ADRP X0, 0x53F000
	0x03BDC6C0 LDR X0, [X0 + 0xC0]
	0x03BDC6C4 BL 0x1C16CF4
	0x03BDC6C8 ADRP X0, 0x581000
	0x03BDC6CC LDR X0, [X0 + 0xF88]
	0x03BDC6D0 BL 0x1C16CF4
	0x03BDC6D4 ADRP X0, 0x582000
	0x03BDC6D8 LDR X0, [X0 + 0x48]
	0x03BDC6DC BL 0x1C16CF4
	0x03BDC6E0 MOVZ W8, 0x1
	0x03BDC6E4 STRB W8, [X19 + 0xEEA]
	0x03BDC6E8 LDR X0, [X21]
	0x03BDC6EC STP X31, X31, [X31 + 0x20]
	0x03BDC6F0 STR X31, [X31 + 0x30]
	0x03BDC6F4 LDR W8, [X0 + 0xE0]
	0x03BDC6F8 CBNZ W8, 0x3BDC704
	0x03BDC6FC BL 0x1C16DFC
	0x03BDC700 LDR X0, [X21]
	0x03BDC704 LDR X8, [X0 + 0xB8]
	0x03BDC708 LDR X19, [X8]
	0x03BDC70C CBZ X19, 0x3BDC728
	0x03BDC710 LDR W8, [X0 + 0xE0]
	0x03BDC714 CBNZ W8, 0x3BDC8A8
	0x03BDC718 BL 0x1C16DFC
	0x03BDC71C LDR X8, [X21]
	0x03BDC720 LDR X8, [X8 + 0xB8]
	0x03BDC724 B 0x3BDC8A4
	0x03BDC728 ADRP X8, 0x574000
	0x03BDC72C LDR X8, [X8 + 0x718]
	0x03BDC730 LDR X0, [X8]
	0x03BDC734 BL 0x1C16F10
	0x03BDC738 ADRP X8, 0x574000
	0x03BDC73C LDR X8, [X8 + 0x720]
	0x03BDC740 MOV X19, X0
	0x03BDC744 LDR X1, [X8]
	0x03BDC748 BL 0x301B7C4
	0x03BDC74C ADRP X8, 0x53F000
	0x03BDC750 LDR X8, [X8 + 0xC0]
	0x03BDC754 LDR X0, [X8]
	0x03BDC758 LDR W8, [X0 + 0xE0]
	0x03BDC75C CBNZ W8, 0x3BDC764
	0x03BDC760 BL 0x1C16DFC
	0x03BDC764 ADRP X8, 0x582000
	0x03BDC768 LDR X8, [X8 + 0x40]
	0x03BDC76C MOV X0, X19
	0x03BDC770 LDR X1, [X8]
	0x03BDC774 BL 0x2298534
	0x03BDC778 CBZ X19, 0x3BDC8C8
	0x03BDC77C ADRP X8, 0x574000
	0x03BDC780 LDR X8, [X8 + 0x700]
	0x03BDC784 MOV X0, X19
	0x03BDC788 LDR X1, [X8]
	0x03BDC78C ADD X8, X31, 0x8
	0x03BDC790 BL 0x301CB58
	0x03BDC794 LDUR V0, [X31 + 0x8]
	0x03BDC798 LDR X8, [X31 + 0x18]
	0x03BDC79C ADRP X20, 0x574000
	0x03BDC7A0 ADRP X22, 0x582000
	0x03BDC7A4 LDR X20, [X20 + 0x6F0]
	0x03BDC7A8 LDR X22, [X22 + 0x38]
	0x03BDC7AC STR V0, [X31 + 0x2]
	0x03BDC7B0 STR X8, [X31 + 0x30]
	0x03BDC7B4 ADRP X23, 0x581000
	0x03BDC7B8 LDR X23, [X23 + 0xF88]
	0x03BDC7BC LDR X1, [X20]
	0x03BDC7C0 ADD X0, X31, 0x20
	0x03BDC7C4 BL 0x2BC4350
	0x03BDC7C8 TBZ X0, 0x0, 0x3BDC84C
	0x03BDC7CC LDR X19, [X31 + 0x30]
	0x03BDC7D0 CBZ X19, 0x3BDC8C0
	0x03BDC7D4 LDR X1, [X22]
	0x03BDC7D8 MOV X0, X19
	0x03BDC7DC BL 0x2E130FC
	0x03BDC7E0 CBZ X0, 0x3BDC8C4
	0x03BDC7E4 MOV X1, X31
	0x03BDC7E8 BL 0x3C98A5C
	0x03BDC7EC LDR X1, [X23]
	0x03BDC7F0 MOV X2, X31
	0x03BDC7F4 BL 0x321BA08
	0x03BDC7F8 TBZ X0, 0x0, 0x3BDC7BC
	0x03BDC7FC MOV X0, X19
	0x03BDC800 MOV X1, X31
	0x03BDC804 BL 0x3C989A8
	0x03BDC808 TBZ X0, 0x0, 0x3BDC7BC
	0x03BDC80C LDR X0, [X21]
	0x03BDC810 LDR W8, [X0 + 0xE0]
	0x03BDC814 CBNZ W8, 0x3BDC820
	0x03BDC818 BL 0x1C16DFC
	0x03BDC81C LDR X0, [X21]
	0x03BDC820 LDR X8, [X0 + 0xB8]
	0x03BDC824 ADRP X9, 0x574000
	0x03BDC828 ADD X0, X31, 0x20
	0x03BDC82C STR X19, [X8]
	0x03BDC830 LDR X8, [X21]
	0x03BDC834 LDR X8, [X8 + 0xB8]
	0x03BDC838 LDR X9, [X9 + 0x6E8]
	0x03BDC83C LDR X19, [X8]
	0x03BDC840 LDR X1, [X9]
	0x03BDC844 BL 0x2BC434C
	0x03BDC848 B 0x3BDC8A8
	0x03BDC84C ADRP X8, 0x574000
	0x03BDC850 LDR X8, [X8 + 0x6E8]
	0x03BDC854 ADD X0, X31, 0x20
	0x03BDC858 LDR X1, [X8]
	0x03BDC85C BL 0x2BC434C
	0x03BDC860 ADRP X8, 0x517000
	0x03BDC864 LDR X8, [X8 + 0xA28]
	0x03BDC868 LDR X0, [X8]
	0x03BDC86C LDR W8, [X0 + 0xE0]
	0x03BDC870 CBNZ W8, 0x3BDC878
	0x03BDC874 BL 0x1C16DFC
	0x03BDC878 ADRP X8, 0x582000
	0x03BDC87C LDR X8, [X8 + 0x48]
	0x03BDC880 MOV X1, X31
	0x03BDC884 LDR X0, [X8]
	0x03BDC888 BL 0x3C0649C
	0x03BDC88C LDR X0, [X21]
	0x03BDC890 LDR W8, [X0 + 0xE0]
	0x03BDC894 CBNZ W8, 0x3BDC8A0
	0x03BDC898 BL 0x1C16DFC
	0x03BDC89C LDR X0, [X21]
	0x03BDC8A0 LDR X8, [X0 + 0xB8]
	0x03BDC8A4 LDR X19, [X8]
	0x03BDC8A8 MOV X0, X19
	0x03BDC8AC LDP X20, X19, [X31 + 0x60]
	0x03BDC8B0 LDP X22, X21, [X31 + 0x50]
	0x03BDC8B4 LDP X30, X23, [X31 + 0x40]
	0x03BDC8B8 ADD X31, X31, 0x70
	0x03BDC8BC RET
	0x03BDC8C0 BL 0x1C16F20
	0x03BDC8C4 BL 0x1C16F20
	0x03BDC8C8 BL 0x1C16F20
	0x03BDC8CC B 0x3BDC8E8
	0x03BDC8D0 B 0x3BDC8E8
	0x03BDC8D4 B 0x3BDC8E8
	0x03BDC8D8 B 0x3BDC8E8
	0x03BDC8DC B 0x3BDC8E8
	0x03BDC8E0 B 0x3BDC8E8
	0x03BDC8E4 B 0x3BDC8E8
	0x03BDC8E8 MOV X19, X0
	0x03BDC8EC CMP W1, 0x1
	0x03BDC8F0 B.NE 0x3BDC924
	0x03BDC8F4 MOV X0, X19
	0x03BDC8F8 BL 0x3EB1AD0
	0x03BDC8FC LDR X20, [X0]
	0x03BDC900 BL 0x3EB1AE0
	0x03BDC904 ADRP X8, 0x574000
	0x03BDC908 LDR X8, [X8 + 0x6E8]
	0x03BDC90C ADD X0, X31, 0x20
	0x03BDC910 LDR X1, [X8]
	0x03BDC914 BL 0x2BC434C
	0x03BDC918 CBZ X20, 0x3BDC860
	0x03BDC91C MOV X0, X20
	0x03BDC920 BL 0x1C16F18
	0x03BDC924 MOV X20, X31
	0x03BDC928 B 0x3BDC930
	0x03BDC92C MOV X19, X0
	0x03BDC930 ADRP X8, 0x574000
	0x03BDC934 LDR X8, [X8 + 0x6E8]
	0x03BDC938 LDR X1, [X8]
	0x03BDC93C ADD X0, X31, 0x20
	0x03BDC940 BL 0x2BC434C
	0x03BDC944 CBNZ X20, 0x3BDC950
	0x03BDC948 MOV X0, X19
	0x03BDC94C BL 0x1D2C690
	0x03BDC950 MOV X0, X20
	0x03BDC954 BL 0x1C16F18
	0x03BDC958 BL 0x1990590
	0x03BDC95C MOV X1, X31
	0x03BDC960 B 0x33BDD8C
	0x03BDC964 STP X30, X21, [X31 - 0x20]!
	0x03BDC968 STP X20, X19, [X31 + 0x10]
	0x03BDC96C ADRP X20, 0x806000
	0x03BDC970 ADRP X21, 0x519000
	0x03BDC974 ADRP X19, 0x582000
	0x03BDC978 LDRB W8, [X20 + 0xEEB]
	0x03BDC97C LDR X21, [X21 + 0x278]
	0x03BDC980 LDR X19, [X19 + 0x30]
	0x03BDC984 TBNZ X8, 0x0, 0x3BDC9A8
	0x03BDC988 ADRP X0, 0x582000
	0x03BDC98C LDR X0, [X0 + 0x30]
	0x03BDC990 BL 0x1C16CF4
	0x03BDC994 ADRP X0, 0x519000
	0x03BDC998 LDR X0, [X0 + 0x278]
	0x03BDC99C BL 0x1C16CF4
	0x03BDC9A0 MOVZ W8, 0x1
	0x03BDC9A4 STRB W8, [X20 + 0xEEB]
	0x03BDC9A8 LDR X8, [X21]
	0x03BDC9AC LDR X9, [X19]
	0x03BDC9B0 LDP X20, X19, [X31 + 0x10]
	0x03BDC9B4 LDR X8, [X8 + 0xB8]
	0x03BDC9B8 LDR X9, [X9 + 0xB8]
	0x03BDC9BC LDR X8, [X8]
	0x03BDC9C0 STR X8, [X9 + 0x8]
	0x03BDC9C4 LDP X30, X21, [X31], #0x20
	0x03BDC9C8 RET
	0x03BDC9CC STR X30, [X31 - 0x20]!
	0x03BDC9D0 STP X20, X19, [X31 + 0x10]
	0x03BDC9D4 ADRP X20, 0x806000
	0x03BDC9D8 ADRP X19, 0x582000
	0x03BDC9DC LDRB W8, [X20 + 0xEEC]
	0x03BDC9E0 LDR X19, [X19 + 0x30]
	0x03BDC9E4 TBNZ X8, 0x0, 0x3BDCA08
	0x03BDC9E8 ADRP X0, 0x582000
	0x03BDC9EC LDR X0, [X0 + 0x30]
	0x03BDC9F0 BL 0x1C16CF4
	0x03BDC9F4 ADRP X0, 0x582000
	0x03BDC9F8 LDR X0, [X0 + 0x50]
	0x03BDC9FC BL 0x1C16CF4
	0x03BDCA00 MOVZ W8, 0x1
	0x03BDCA04 STRB W8, [X20 + 0xEEC]
	0x03BDCA08 LDR X0, [X19]
	0x03BDCA0C STR W31, [X31 + 0xC]
	0x03BDCA10 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+80], X30
	003 Move [X31+96], X22
	004 Move [X31+104], X21
	005 Move [X31+112], X20
	006 Move [X31+120], X19
	007 Move X20, 0x807000
	008 Move W8, [X20+3808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {49}
	014 Move X0, 0x518000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x582000
	018 Move X0, [X0+3912]
	019 Call 0x1C17CF4
	020 Move X0, 0x518000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move X0, 0x582000
	024 Move X0, [X0+3920]
	025 Call 0x1C17CF4
	026 Move X0, 0x582000
	027 Move X0, [X0+3928]
	028 Call 0x1C17CF4
	029 Move X0, 0x582000
	030 Move X0, [X0+3936]
	031 Call 0x1C17CF4
	032 Move X0, 0x582000
	033 Move X0, [X0+3944]
	034 Call 0x1C17CF4
	035 Move X0, 0x582000
	036 Move X0, [X0+3952]
	037 Call 0x1C17CF4
	038 Move X0, 0x582000
	039 Move X0, [X0+3960]
	040 Call 0x1C17CF4
	041 Move X0, 0x582000
	042 Move X0, [X0+3968]
	043 Call 0x1C17CF4
	044 Move X0, 0x582000
	045 Move X0, [X0+3976]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X20+3808], W8
	049 Call OculusLoader.CheckUnityVersionCompatibility, X0
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {64}
	054 Move X21, 0x582000
	055 Move X21, [X21+3920]
	056 Move X0, [X21]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Call OculusLoader.IsDeviceSupported
	062 Compare W0, 0
	063 JumpIfEqual {72}
	064 Move W0, W31
	065 Move X20, [X31+112]
	066 Move X19, [X31+120]
	067 Move X22, [X31+96]
	068 Move X21, [X31+104]
	069 Move X30, [X31+80]
	070 Add X31, X31, 128
	071 Return X0
	072 Move X8, 0x582000
	073 Move X8, [X8+3912]
	074 Move X0, [X8]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Call InputLayoutLoader.RegisterInputLayouts
	080 Move X20, 0x808000
	081 Move W8, [X20+15]
	082 Compare W8, 0
	083 JumpIfNotEqual {89}
	084 Move X0, 0x582000
	085 Move X0, [X0+3984]
	086 Call 0x1C17CF4
	087 Move W8, 1
	088 Move [X20+15], W8
	089 Move X8, 0x582000
	090 Move X8, [X8+3984]
	091 Move X9, 0x518000
	092 Move X8, [X8]
	093 Move X9, [X9+1432]
	094 Move X8, [X8+184]
	095 Move X0, [X9]
	096 Move X20, [X8]
	097 Move W9, [X0+224]
	098 Compare W9, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Move X0, X20
	102 Move X1, X31
	103 Move X2, X31
	104 Call Object.op_Inequality, X0, X1
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {163}
	109 Compare X20, 0
	110 JumpIfEqual {248}
	111 Move W8, [X20+32]
	112 Move X0, X31
	113 NotImplemented "Instruction STRH not yet implemented."
	114 Move W8, [X20+34]
	115 NotImplemented "Instruction STRH not yet implemented."
	116 Move W22, [X20+28]
	117 Call QualitySettings.get_activeColorSpace
	118 NotImplemented "Instruction CMP not yet implemented."
	119 NotImplemented "Instruction CSET not yet implemented."
	120 NotImplemented "Instruction STRH not yet implemented."
	121 Move W8, [X20+35]
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 NotImplemented "Instruction LDRH not yet implemented."
	124 NotImplemented "Instruction LDRH not yet implemented."
	125 NotImplemented "Instruction STRH not yet implemented."
	126 Move W8, [X20+36]
	127 NotImplemented "Instruction LDRH not yet implemented."
	128 NotImplemented "Instruction STRH not yet implemented."
	129 Move W9, [X20+37]
	130 NotImplemented "Instruction STRH not yet implemented."
	131 Move W10, [X20+38]
	132 NotImplemented "Instruction STRH not yet implemented."
	133 Move W11, [X20+39]
	134 NotImplemented "Instruction STRH not yet implemented."
	135 Move W12, [X20+44]
	136 Move W13, [X20+40]
	137 NotImplemented "Instruction STRH not yet implemented."
	138 Move W14, [X20+45]
	139 NotImplemented "Instruction STRH not yet implemented."
	140 Move W15, [X20+46]
	141 NotImplemented "Instruction STRH not yet implemented."
	142 Move W17, [X20+47]
	143 NotImplemented "Instruction STRH not yet implemented."
	144 Move W3, [X20+33]
	145 NotImplemented "Instruction STRH not yet implemented."
	146 Add X0, X31, 48
	147 NotImplemented "Instruction STRH not yet implemented."
	148 NotImplemented "Instruction STRH not yet implemented."
	149 NotImplemented "Instruction STRH not yet implemented."
	150 NotImplemented "Instruction STRH not yet implemented."
	151 NotImplemented "Instruction STRH not yet implemented."
	152 NotImplemented "Instruction STRH not yet implemented."
	153 NotImplemented "Instruction STRH not yet implemented."
	154 NotImplemented "Instruction STRH not yet implemented."
	155 NotImplemented "Instruction STRH not yet implemented."
	156 NotImplemented "Instruction STRH not yet implemented."
	157 NotImplemented "Instruction STRH not yet implemented."
	158 NotImplemented "Instruction STRH not yet implemented."
	159 NotImplemented "Instruction STRH not yet implemented."
	160 NotImplemented "Instruction STRH not yet implemented."
	161 NotImplemented "Instruction STRH not yet implemented."
	162 Call Internal.SetUserDefinedSettings, X0
	163 Move X0, [X21]
	164 Move W8, [X0+224]
	165 Compare W8, 0
	166 JumpIfNotEqual {169}
	167 Call 0x1C17DFC
	168 Move X0, [X21]
	169 Move X9, 0x582000
	170 Move X10, 0x582000
	171 Move X8, [X0+184]
	172 Move X9, [X9+3976]
	173 Move X10, [X10+3928]
	174 Move X0, X19
	175 Move X1, [X8]
	176 Move X2, [X9]
	177 Move X3, [X10]
	178 Call 0x22AEA1C, X0, X1, X2
	179 Move X8, [X21]
	180 Move X9, 0x582000
	181 Move X10, 0x582000
	182 Move X0, X19
	183 Move X8, [X8+184]
	184 Move X9, [X9+3968]
	185 Move X10, [X10+3936]
	186 Move X1, [X8+8]
	187 Move X2, [X9]
	188 Move X3, [X10]
	189 Call 0x22AEA1C, X0, X1, X2
	190 Move X0, X19
	191 Call OculusLoader.get_displaySubsystem, X0
	192 Compare X0, 0
	193 JumpIfNotEqual {198}
	194 Move X0, X19
	195 Call OculusLoader.get_inputSubsystem, X0
	196 Compare X0, 0
	197 JumpIfEqual {228}
	198 Move X0, X19
	199 Call OculusLoader.get_displaySubsystem, X0
	200 Compare X0, 0
	201 JumpIfEqual {207}
	202 Move X0, X19
	203 Call OculusLoader.get_inputSubsystem, X0
	204 Compare X0, 0
	205 JumpIfEqual {216}
	206 Call RegisterUpdateCallback.Initialize
	207 Move X8, 0x518000
	208 Move X8, [X8+2600]
	209 Move X0, [X8]
	210 Move W8, [X0+224]
	211 Compare W8, 0
	212 JumpIfNotEqual {214}
	213 Call 0x1C17DFC
	214 Move X8, 0x582000
	215 Move X8, [X8+3952]
	216 Move X8, 0x518000
	217 Move X8, [X8+2600]
	218 Move X0, [X8]
	219 Move W8, [X0+224]
	220 Compare W8, 0
	221 JumpIfNotEqual {223}
	222 Call 0x1C17DFC
	223 Move X8, 0x582000
	224 Move X8, [X8+3944]
	225 Move X0, [X8]
	226 Move X1, X31
	227 Call Debug.LogError, X0
	228 Move X8, 0x518000
	229 Move X8, [X8+2600]
	230 Move X0, [X8]
	231 Move W8, [X0+224]
	232 Compare W8, 0
	233 JumpIfNotEqual {235}
	234 Call 0x1C17DFC
	235 Move X8, 0x582000
	236 Move X8, [X8+3960]
	237 Move X1, X31
	238 Move X0, [X8]
	239 Call Debug.LogWarning, X0
	240 Move X0, X19
	241 Call OculusLoader.get_displaySubsystem, X0
	242 Compare X0, 0
	243 JumpIfEqual {65}
	244 Move X0, X19
	245 Call OculusLoader.get_inputSubsystem, X0
	246 NotImplemented "Instruction CMP not yet implemented."
	247 NotImplemented "Instruction CSET not yet implemented."
	248 Call 0x1C17F20

Method: System.Boolean Start()

Disassembly:
	0x03BDCE00 LDR X30, [X31], #0x20
	0x03BDCE04 RET
	0x03BDCE08 STR X30, [X31 - 0x20]!
	0x03BDCE0C STP X20, X19, [X31 + 0x10]
	0x03BDCE10 ADRP X20, 0x806000
	0x03BDCE14 ADRP X19, 0x582000
	0x03BDCE18 LDRB W8, [X20 + 0xEF3]
	0x03BDCE1C LDR X19, [X19 + 0x30]
	0x03BDCE20 TBNZ X8, 0x0, 0x3BDCE44
	0x03BDCE24 ADRP X0, 0x582000
	0x03BDCE28 LDR X0, [X0 + 0x30]
	0x03BDCE2C BL 0x1C16CF4
	0x03BDCE30 ADRP X0, 0x582000
	0x03BDCE34 LDR X0, [X0 + 0x68]
	0x03BDCE38 BL 0x1C16CF4
	0x03BDCE3C MOVZ W8, 0x1
	0x03BDCE40 STRB W8, [X20 + 0xEF3]
	0x03BDCE44 LDR X0, [X19]
	0x03BDCE48 STR W31, [X31 + 0xC]
	0x03BDCE4C ADRP X19, 0x582000
	0x03BDCE50 LDR W8, [X0 + 0xE0]
	0x03BDCE54 LDR X19, [X19 + 0x68]
	0x03BDCE58 CBNZ W8, 0x3BDCE60
	0x03BDCE5C BL 0x1C16DFC
	0x03BDCE60 BL 0x3BDC620
	0x03BDCE64 LDR X1, [X19]
	0x03BDCE68 ADD X2, X31, 0xC
	0x03BDCE6C MOV X3, X31
	0x03BDCE70 BL 0x3E66F20
	0x03BDCE74 LDR V0, [X31 + 0xC]
	0x03BDCE78 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x807000
	007 Move X22, 0x582000
	008 Move X20, 0x582000
	009 Move W8, [X21+3809]
	010 Move X22, [X22+4040]
	011 Move X20, [X20+4048]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x582000
	018 Move X0, [X0+4040]
	019 Call 0x1C17CF4
	020 Move X0, 0x582000
	021 Move X0, [X0+4048]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3809], W8
	025 Move X1, [X22]
	026 Move X0, X19
	027 Call 0x22AF44C, X0
	028 Move X1, [X20]
	029 Move X0, X19
	030 Call 0x22AF44C, X0
	031 Call Development.OverrideDeveloperModeStart
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move W0, 1
	037 Move X30, [X31+48]
	038 Return X0

Method: System.Boolean Stop()

Disassembly:
	0x03BDCE7C LDR X30, [X31], #0x20
	0x03BDCE80 RET
	0x03BDCE84 STR X30, [X31 - 0x20]!
	0x03BDCE88 STP X20, X19, [X31 + 0x10]
	0x03BDCE8C ADRP X20, 0x806000
	0x03BDCE90 ADRP X19, 0x582000
	0x03BDCE94 LDRB W8, [X20 + 0xEF4]
	0x03BDCE98 LDR X19, [X19 + 0x30]
	0x03BDCE9C TBNZ X8, 0x0, 0x3BDCEC0
	0x03BDCEA0 ADRP X0, 0x582000
	0x03BDCEA4 LDR X0, [X0 + 0x30]
	0x03BDCEA8 BL 0x1C16CF4
	0x03BDCEAC ADRP X0, 0x582000
	0x03BDCEB0 LDR X0, [X0 + 0x70]
	0x03BDCEB4 BL 0x1C16CF4
	0x03BDCEB8 MOVZ W8, 0x1
	0x03BDCEBC STRB W8, [X20 + 0xEF4]
	0x03BDCEC0 LDR X0, [X19]
	0x03BDCEC4 STR W31, [X31 + 0xC]
	0x03BDCEC8 ADRP X19, 0x582000
	0x03BDCECC LDR W8, [X0 + 0xE0]
	0x03BDCED0 LDR X19, [X19 + 0x70]
	0x03BDCED4 CBNZ W8, 0x3BDCEDC
	0x03BDCED8 BL 0x1C16DFC
	0x03BDCEDC BL 0x3BDC620
	0x03BDCEE0 LDR X1, [X19]
	0x03BDCEE4 ADD X2, X31, 0xC
	0x03BDCEE8 MOV X3, X31
	0x03BDCEEC BL 0x3E66F20
	0x03BDCEF0 LDR V0, [X31 + 0xC]
	0x03BDCEF4 MOVZ W8, 0x7F800000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x807000
	007 Move X22, 0x582000
	008 Move X20, 0x582000
	009 Move W8, [X21+3810]
	010 Move X22, [X22+4056]
	011 Move X20, [X20+4064]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x582000
	018 Move X0, [X0+4056]
	019 Call 0x1C17CF4
	020 Move X0, 0x582000
	021 Move X0, [X0+4064]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3810], W8
	025 Move X1, [X22]
	026 Move X0, X19
	027 Call 0x22AF528, X0
	028 Move X1, [X20]
	029 Move X0, X19
	030 Call 0x22AF528, X0
	031 Call Development.OverrideDeveloperModeStop
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move W0, 1
	037 Move X30, [X31+48]
	038 Return X0

Method: System.Boolean Deinitialize()

Disassembly:
	0x03BDCEF8 LDP X20, X19, [X31 + 0x10]
	0x03BDCEFC FMOV S1, W8
	0x03BDCF00 FCVTZS W8, S0
	0x03BDCF04 FCMP S0, S1
	0x03BDCF08 MOVZ W9, 0x80000000
	0x03BDCF0C CSEL W0, W9, W8, EQ
	0x03BDCF10 LDR X30, [X31], #0x20
	0x03BDCF14 RET
	0x03BDCF18 STR X30, [X31 - 0x20]!
	0x03BDCF1C STP X20, X19, [X31 + 0x10]
	0x03BDCF20 ADRP X20, 0x806000
	0x03BDCF24 ADRP X19, 0x582000
	0x03BDCF28 LDRB W8, [X20 + 0xEF5]
	0x03BDCF2C LDR X19, [X19 + 0x30]
	0x03BDCF30 TBNZ X8, 0x0, 0x3BDCF54
	0x03BDCF34 ADRP X0, 0x582000
	0x03BDCF38 LDR X0, [X0 + 0x30]
	0x03BDCF3C BL 0x1C16CF4
	0x03BDCF40 ADRP X0, 0x582000
	0x03BDCF44 LDR X0, [X0 + 0x78]
	0x03BDCF48 BL 0x1C16CF4
	0x03BDCF4C MOVZ W8, 0x1
	0x03BDCF50 STRB W8, [X20 + 0xEF5]
	0x03BDCF54 LDR X0, [X19]
	0x03BDCF58 STR W31, [X31 + 0xC]
	0x03BDCF5C ADRP X19, 0x582000
	0x03BDCF60 LDR W8, [X0 + 0xE0]
	0x03BDCF64 LDR X19, [X19 + 0x78]
	0x03BDCF68 CBNZ W8, 0x3BDCF70
	0x03BDCF6C BL 0x1C16DFC
	0x03BDCF70 BL 0x3BDC620

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x807000
	007 Move X21, 0x582000
	008 Move X20, 0x582000
	009 Move W8, [X22+3811]
	010 Move X21, [X21+4072]
	011 Move X20, [X20+4080]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x582000
	018 Move X0, [X0+4072]
	019 Call 0x1C17CF4
	020 Move X0, 0x582000
	021 Move X0, [X0+4080]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3811], W8
	025 Call RegisterUpdateCallback.Deinitialize
	026 Move X1, [X21]
	027 Move X0, X19
	028 Call 0x22AF1BC, X0
	029 Move X1, [X20]
	030 Move X0, X19
	031 Call 0x22AF1BC, X0
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move W0, 1
	037 Move X30, [X31+48]
	038 Return X0

Method: System.Void RuntimeLoadOVRPlugin()

Disassembly:
	0x03BDD014 BL 0x3E66F20
	0x03BDD018 LDR V0, [X31 + 0xC]
	0x03BDD01C LDP X20, X19, [X31 + 0x10]
	0x03BDD020 LDR X30, [X31], #0x20
	0x03BDD024 RET
	0x03BDD028 STR X30, [X31 - 0x20]!
	0x03BDD02C STP X20, X19, [X31 + 0x10]
	0x03BDD030 ADRP X20, 0x805000
	0x03BDD034 ADRP X19, 0x581000
	0x03BDD038 LDRB W8, [X20 + 0xEF7]
	0x03BDD03C LDR X19, [X19 + 0x30]
	0x03BDD040 TBNZ X8, 0x0, 0x3BDD064
	0x03BDD044 ADRP X0, 0x581000
	0x03BDD048 LDR X0, [X0 + 0x30]
	0x03BDD04C BL 0x1C16CF4
	0x03BDD050 ADRP X0, 0x581000
	0x03BDD054 LDR X0, [X0 + 0x88]
	0x03BDD058 BL 0x1C16CF4
	0x03BDD05C MOVZ W8, 0x1
	0x03BDD060 STRB W8, [X20 + 0xEF7]
	0x03BDD064 LDR X0, [X19]
	0x03BDD068 STR W31, [X31 + 0xC]
	0x03BDD06C ADRP X19, 0x581000
	0x03BDD070 LDR W8, [X0 + 0xE0]
	0x03BDD074 LDR X19, [X19 + 0x88]
	0x03BDD078 CBNZ W8, 0x3BDD080
	0x03BDD07C BL 0x1C16DFC
	0x03BDD080 BL 0x3BDC620
	0x03BDD084 LDR X1, [X19]
	0x03BDD088 ADD X2, X31, 0xC
	0x03BDD08C MOV X3, X31
	0x03BDD090 BL 0x3E66F20
	0x03BDD094 LDR V0, [X31 + 0xC]
	0x03BDD098 LDP X20, X19, [X31 + 0x10]
	0x03BDD09C LDR X30, [X31], #0x20
	0x03BDD0A0 RET
	0x03BDD0A4 STR X30, [X31 - 0x20]!
	0x03BDD0A8 STP X20, X19, [X31 + 0x10]
	0x03BDD0AC ADRP X20, 0x805000
	0x03BDD0B0 ADRP X19, 0x581000
	0x03BDD0B4 LDRB W8, [X20 + 0xEF8]
	0x03BDD0B8 LDR X19, [X19 + 0x30]
	0x03BDD0BC TBNZ X8, 0x0, 0x3BDD0E0
	0x03BDD0C0 ADRP X0, 0x581000
	0x03BDD0C4 LDR X0, [X0 + 0x30]
	0x03BDD0C8 BL 0x1C16CF4
	0x03BDD0CC ADRP X0, 0x581000
	0x03BDD0D0 LDR X0, [X0 + 0x90]
	0x03BDD0D4 BL 0x1C16CF4
	0x03BDD0D8 MOVZ W8, 0x1
	0x03BDD0DC STRB W8, [X20 + 0xEF8]
	0x03BDD0E0 LDR X0, [X19]
	0x03BDD0E4 STR W31, [X31 + 0xC]
	0x03BDD0E8 ADRP X19, 0x581000
	0x03BDD0EC LDR W8, [X0 + 0xE0]
	0x03BDD0F0 LDR X19, [X19 + 0x90]
	0x03BDD0F4 CBNZ W8, 0x3BDD0FC
	0x03BDD0F8 BL 0x1C16DFC
	0x03BDD0FC BL 0x3BDC620
	0x03BDD100 LDR X1, [X19]
	0x03BDD104 ADD X2, X31, 0xC
	0x03BDD108 MOV X3, X31
	0x03BDD10C BL 0x3E66F20
	0x03BDD110 LDR V0, [X31 + 0xC]
	0x03BDD114 LDP X20, X19, [X31 + 0x10]
	0x03BDD118 LDR X30, [X31], #0x20
	0x03BDD11C RET
	0x03BDD120 STR X30, [X31 - 0x20]!
	0x03BDD124 STP X20, X19, [X31 + 0x10]
	0x03BDD128 ADRP X20, 0x805000
	0x03BDD12C ADRP X19, 0x581000
	0x03BDD130 LDRB W8, [X20 + 0xEF9]
	0x03BDD134 LDR X19, [X19 + 0x30]
	0x03BDD138 TBNZ X8, 0x0, 0x3BDD15C
	0x03BDD13C ADRP X0, 0x581000
	0x03BDD140 LDR X0, [X0 + 0x30]
	0x03BDD144 BL 0x1C16CF4
	0x03BDD148 ADRP X0, 0x581000
	0x03BDD14C LDR X0, [X0 + 0x98]
	0x03BDD150 BL 0x1C16CF4
	0x03BDD154 MOVZ W8, 0x1
	0x03BDD158 STRB W8, [X20 + 0xEF9]
	0x03BDD15C LDR X0, [X19]
	0x03BDD160 STR W31, [X31 + 0xC]
	0x03BDD164 ADRP X19, 0x581000
	0x03BDD168 LDR W8, [X0 + 0xE0]
	0x03BDD16C LDR X19, [X19 + 0x98]
	0x03BDD170 CBNZ W8, 0x3BDD178
	0x03BDD174 BL 0x1C16DFC
	0x03BDD178 BL 0x3BDC620
	0x03BDD17C LDR X1, [X19]
	0x03BDD180 ADD X2, X31, 0xC
	0x03BDD184 MOV X3, X31
	0x03BDD188 BL 0x3E66F20
	0x03BDD18C LDR V0, [X31 + 0xC]
	0x03BDD190 LDP X20, X19, [X31 + 0x10]
	0x03BDD194 LDR X30, [X31], #0x20
	0x03BDD198 RET
	0x03BDD19C STR X30, [X31 - 0x20]!
	0x03BDD1A0 STP X20, X19, [X31 + 0x10]
	0x03BDD1A4 ADRP X20, 0x805000
	0x03BDD1A8 ADRP X19, 0x581000
	0x03BDD1AC LDRB W8, [X20 + 0xEFA]
	0x03BDD1B0 LDR X19, [X19 + 0x30]
	0x03BDD1B4 TBNZ X8, 0x0, 0x3BDD1D8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x806000
	005 Move X20, 0x581000
	006 Move W8, [X19+3812]
	007 Move X20, [X20+3920]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {32}
	012 Move X0, 0x517000
	013 Move X0, [X0+2416]
	014 Call 0x1C17CF4
	015 Move X0, 0x517000
	016 Move X0, [X0+2600]
	017 Call 0x1C17CF4
	018 Move X0, 0x581000
	019 Move X0, [X0+3920]
	020 Call 0x1C17CF4
	021 Move X0, 0x581000
	022 Move X0, [X0+4088]
	023 Call 0x1C17CF4
	024 Move X0, 0x582000
	025 Move X0, [X0]
	026 Call 0x1C17CF4
	027 Move X0, 0x517000
	028 Move X0, [X0+2440]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X19+3812], W8
	032 Move X0, [X20]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Call OculusLoader.IsDeviceSupported
	038 Compare W0, 0
	039 JumpIfEqual {66}
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X8, 0x517000
	042 Move X8, [X8+2600]
	043 Move X0, [X8]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X8, 0x582000
	049 Move X8, [X8]
	050 Move X1, X31
	051 Move X0, [X8]
	052 Call Debug.LogError, X0
	053 Move X8, 0x517000
	054 Move X8, [X8+2416]
	055 Move X0, [X8]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X0, X31
	063 Move X30, [X31+32]
	064 Call Application.Quit
	065 Return 
	066 Move X8, 0x517000
	067 Move X8, [X8+2440]
	068 Move X0, [X8]
	069 Call Internal.LoadOVRPlugin, X0
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {86}
	074 Move X8, 0x517000
	075 Move X8, [X8+2600]
	076 Move X0, [X8]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X8, 0x581000
	082 Move X8, [X8+4088]
	083 Move X0, [X8]
	084 Move X1, X31
	085 Call Debug.LogError, X0
	086 Move X20, [X31+16]
	087 Move X19, [X31+24]
	088 Move X30, [X31+32]
	089 Return 
	090 Move X19, X0
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X0, X19
	093 Call 0x3EB2AD0
	094 Move X19, X0
	095 Move X0, 0x51D000
	096 Move X0, [X0+3264]
	097 Call 0x1C17D08
	098 Move X8, [X19]
	099 Move X1, [X8]
	100 Call 0x1C18270
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {110}
	105 Move X20, [X31+16]
	106 Move X19, [X31+24]
	107 Move X30, [X31+32]
	108 Call 0x3EB2AE0
	109 Return 
	110 Move W0, 8
	111 Call 0x3EB2AF0
	112 Move X8, [X19]
	113 Move [X0], X8
	114 Move X1, 0x2D8000
	115 Add X1, X1, 3672
	116 Move X2, X31
	117 Call 0x3EB2B00
	118 Move X19, X0
	119 Call 0x3EB2AE0
	120 Move X0, X19
	121 Call 0x1D2D690
	122 Call 0x1991590

Method: Unity.XR.Oculus.OculusSettings GetSettings()

Disassembly:
	0x03BDD1BC LDR X0, [X0 + 0x30]
	0x03BDD1C0 BL 0x1C16CF4
	0x03BDD1C4 ADRP X0, 0x581000
	0x03BDD1C8 LDR X0, [X0 + 0xA0]
	0x03BDD1CC BL 0x1C16CF4
	0x03BDD1D0 MOVZ W8, 0x1
	0x03BDD1D4 STRB W8, [X20 + 0xEFA]
	0x03BDD1D8 LDR X0, [X19]
	0x03BDD1DC STR W31, [X31 + 0xC]
	0x03BDD1E0 ADRP X19, 0x581000
	0x03BDD1E4 LDR W8, [X0 + 0xE0]
	0x03BDD1E8 LDR X19, [X19 + 0xA0]
	0x03BDD1EC CBNZ W8, 0x3BDD1F4
	0x03BDD1F0 BL 0x1C16DFC
	0x03BDD1F4 BL 0x3BDC620
	0x03BDD1F8 LDR X1, [X19]
	0x03BDD1FC ADD X2, X31, 0xC
	0x03BDD200 MOV X3, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x806000
	005 Move X20, 0x581000
	006 Move W8, [X19+3813]
	007 Move X20, [X20+3984]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x581000
	013 Move X0, [X0+3984]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3813], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move X0, [X8]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Boolean CheckUnityVersionCompatibility()

Disassembly:
	0x03BDCA14 CBNZ W8, 0x3BDCA1C
	0x03BDCA18 BL 0x1C16DFC
	0x03BDCA1C BL 0x3BDC620
	0x03BDCA20 CBZ X0, 0x3BDCA78
	0x03BDCA24 ADRP X9, 0x582000
	0x03BDCA28 LDR X9, [X9 + 0x50]
	0x03BDCA2C LDR X8, [X0]
	0x03BDCA30 LDR X1, [X9]
	0x03BDCA34 LDRB W10, [X8 + 0x130]
	0x03BDCA38 LDRB W9, [X1 + 0x130]
	0x03BDCA3C CMP W10, W9
	0x03BDCA40 B.CC 0x3BDCA74
	0x03BDCA44 LDR X8, [X8 + 0xC8]
	0x03BDCA48 ADD X8, X8, X9, 0x3, LSL
	0x03BDCA4C LDUR X8, [X8 - 0x8]
	0x03BDCA50 CMP X8, X1
	0x03BDCA54 B.NE 0x3BDCA74
	0x03BDCA58 ADD X1, X31, 0xC
	0x03BDCA5C MOV X2, X31
	0x03BDCA60 BL 0x3E65CE8
	0x03BDCA64 LDR V0, [X31 + 0xC]
	0x03BDCA68 LDP X20, X19, [X31 + 0x10]
	0x03BDCA6C LDR X30, [X31], #0x20
	0x03BDCA70 RET
	0x03BDCA74 BL 0x1C171E0
	0x03BDCA78 BL 0x1C16F20
	0x03BDCA7C STR X30, [X31 - 0x20]!
	0x03BDCA80 STP X20, X19, [X31 + 0x10]
	0x03BDCA84 ADRP X20, 0x806000
	0x03BDCA88 ADRP X19, 0x582000
	0x03BDCA8C LDRB W8, [X20 + 0xEED]
	0x03BDCA90 LDR X19, [X19 + 0x30]
	0x03BDCA94 TBNZ X8, 0x0, 0x3BDCAB8
	0x03BDCA98 ADRP X0, 0x582000
	0x03BDCA9C LDR X0, [X0 + 0x30]
	0x03BDCAA0 BL 0x1C16CF4
	0x03BDCAA4 ADRP X0, 0x582000
	0x03BDCAA8 LDR X0, [X0 + 0x50]
	0x03BDCAAC BL 0x1C16CF4
	0x03BDCAB0 MOVZ W8, 0x1
	0x03BDCAB4 STRB W8, [X20 + 0xEED]
	0x03BDCAB8 LDR X0, [X19]
	0x03BDCABC STR W31, [X31 + 0xC]
	0x03BDCAC0 LDR W8, [X0 + 0xE0]
	0x03BDCAC4 CBNZ W8, 0x3BDCACC
	0x03BDCAC8 BL 0x1C16DFC
	0x03BDCACC BL 0x3BDC620
	0x03BDCAD0 CBZ X0, 0x3BDCB28
	0x03BDCAD4 ADRP X9, 0x582000
	0x03BDCAD8 LDR X9, [X9 + 0x50]
	0x03BDCADC LDR X8, [X0]
	0x03BDCAE0 LDR X1, [X9]
	0x03BDCAE4 LDRB W10, [X8 + 0x130]
	0x03BDCAE8 LDRB W9, [X1 + 0x130]
	0x03BDCAEC CMP W10, W9
	0x03BDCAF0 B.CC 0x3BDCB24
	0x03BDCAF4 LDR X8, [X8 + 0xC8]
	0x03BDCAF8 ADD X8, X8, X9, 0x3, LSL
	0x03BDCAFC LDUR X8, [X8 - 0x8]
	0x03BDCB00 CMP X8, X1
	0x03BDCB04 B.NE 0x3BDCB24
	0x03BDCB08 ADD X1, X31, 0xC
	0x03BDCB0C MOV X2, X31
	0x03BDCB10 BL 0x3E65D2C
	0x03BDCB14 LDR V0, [X31 + 0xC]
	0x03BDCB18 LDP X20, X19, [X31 + 0x10]
	0x03BDCB1C LDR X30, [X31], #0x20
	0x03BDCB20 RET
	0x03BDCB24 BL 0x1C171E0
	0x03BDCB28 BL 0x1C16F20
	0x03BDCB2C STR X30, [X31 - 0x20]!
	0x03BDCB30 STP X20, X19, [X31 + 0x10]
	0x03BDCB34 ADRP X20, 0x806000
	0x03BDCB38 ADRP X19, 0x582000
	0x03BDCB3C LDRB W8, [X20 + 0xEEE]
	0x03BDCB40 LDR X19, [X19 + 0x30]
	0x03BDCB44 TBNZ X8, 0x0, 0x3BDCB68
	0x03BDCB48 ADRP X0, 0x582000
	0x03BDCB4C LDR X0, [X0 + 0x30]
	0x03BDCB50 BL 0x1C16CF4
	0x03BDCB54 ADRP X0, 0x582000
	0x03BDCB58 LDR X0, [X0 + 0x50]
	0x03BDCB5C BL 0x1C16CF4
	0x03BDCB60 MOVZ W8, 0x1
	0x03BDCB64 STRB W8, [X20 + 0xEEE]
	0x03BDCB68 LDR X0, [X19]
	0x03BDCB6C STR W31, [X31 + 0xC]
	0x03BDCB70 LDR W8, [X0 + 0xE0]
	0x03BDCB74 CBNZ W8, 0x3BDCB7C
	0x03BDCB78 BL 0x1C16DFC
	0x03BDCB7C BL 0x3BDC620
	0x03BDCB80 CBZ X0, 0x3BDCBD8
	0x03BDCB84 ADRP X9, 0x582000
	0x03BDCB88 LDR X9, [X9 + 0x50]
	0x03BDCB8C LDR X8, [X0]
	0x03BDCB90 LDR X1, [X9]
	0x03BDCB94 LDRB W10, [X8 + 0x130]
	0x03BDCB98 LDRB W9, [X1 + 0x130]
	0x03BDCB9C CMP W10, W9
	0x03BDCBA0 B.CC 0x3BDCBD4
	0x03BDCBA4 LDR X8, [X8 + 0xC8]
	0x03BDCBA8 ADD X8, X8, X9, 0x3, LSL
	0x03BDCBAC LDUR X8, [X8 - 0x8]
	0x03BDCBB0 CMP X8, X1
	0x03BDCBB4 B.NE 0x3BDCBD4
	0x03BDCBB8 ADD X1, X31, 0xC
	0x03BDCBBC MOV X2, X31
	0x03BDCBC0 BL 0x3E65DB4
	0x03BDCBC4 LDR V0, [X31 + 0xC]
	0x03BDCBC8 LDP X20, X19, [X31 + 0x10]
	0x03BDCBCC LDR X30, [X31], #0x20
	0x03BDCBD0 RET
	0x03BDCBD4 BL 0x1C171E0
	0x03BDCBD8 BL 0x1C16F20
	0x03BDCBDC STR X30, [X31 - 0x20]!
	0x03BDCBE0 STP X20, X19, [X31 + 0x10]
	0x03BDCBE4 ADRP X20, 0x806000
	0x03BDCBE8 ADRP X19, 0x582000
	0x03BDCBEC LDRB W8, [X20 + 0xEEF]
	0x03BDCBF0 LDR X19, [X19 + 0x30]
	0x03BDCBF4 TBNZ X8, 0x0, 0x3BDCC18
	0x03BDCBF8 ADRP X0, 0x582000
	0x03BDCBFC LDR X0, [X0 + 0x30]
	0x03BDCC00 BL 0x1C16CF4
	0x03BDCC04 ADRP X0, 0x582000
	0x03BDCC08 LDR X0, [X0 + 0x50]
	0x03BDCC0C BL 0x1C16CF4
	0x03BDCC10 MOVZ W8, 0x1
	0x03BDCC14 STRB W8, [X20 + 0xEEF]
	0x03BDCC18 LDR X0, [X19]
	0x03BDCC1C STR W31, [X31 + 0xC]
	0x03BDCC20 LDR W8, [X0 + 0xE0]
	0x03BDCC24 CBNZ W8, 0x3BDCC2C
	0x03BDCC28 BL 0x1C16DFC
	0x03BDCC2C BL 0x3BDC620
	0x03BDCC30 CBZ X0, 0x3BDCC88
	0x03BDCC34 ADRP X9, 0x582000
	0x03BDCC38 LDR X9, [X9 + 0x50]
	0x03BDCC3C LDR X8, [X0]
	0x03BDCC40 LDR X1, [X9]
	0x03BDCC44 LDRB W10, [X8 + 0x130]
	0x03BDCC48 LDRB W9, [X1 + 0x130]
	0x03BDCC4C CMP W10, W9
	0x03BDCC50 B.CC 0x3BDCC84
	0x03BDCC54 LDR X8, [X8 + 0xC8]
	0x03BDCC58 ADD X8, X8, X9, 0x3, LSL
	0x03BDCC5C LDUR X8, [X8 - 0x8]
	0x03BDCC60 CMP X8, X1
	0x03BDCC64 B.NE 0x3BDCC84
	0x03BDCC68 ADD X1, X31, 0xC
	0x03BDCC6C MOV X2, X31
	0x03BDCC70 BL 0x3E65D70
	0x03BDCC74 LDR V0, [X31 + 0xC]
	0x03BDCC78 LDP X20, X19, [X31 + 0x10]
	0x03BDCC7C LDR X30, [X31], #0x20
	0x03BDCC80 RET
	0x03BDCC84 BL 0x1C171E0
	0x03BDCC88 BL 0x1C16F20
	0x03BDCC8C STR X30, [X31 - 0x20]!
	0x03BDCC90 STP X20, X19, [X31 + 0x10]
	0x03BDCC94 ADRP X20, 0x806000
	0x03BDCC98 ADRP X19, 0x582000
	0x03BDCC9C LDRB W8, [X20 + 0xEF0]
	0x03BDCCA0 LDR X19, [X19 + 0x30]
	0x03BDCCA4 TBNZ X8, 0x0, 0x3BDCCC8
	0x03BDCCA8 ADRP X0, 0x582000
	0x03BDCCAC LDR X0, [X0 + 0x30]
	0x03BDCCB0 BL 0x1C16CF4
	0x03BDCCB4 ADRP X0, 0x582000
	0x03BDCCB8 LDR X0, [X0 + 0x58]
	0x03BDCCBC BL 0x1C16CF4
	0x03BDCCC0 MOVZ W8, 0x1
	0x03BDCCC4 STRB W8, [X20 + 0xEF0]
	0x03BDCCC8 LDR X0, [X19]
	0x03BDCCCC STR W31, [X31 + 0xC]
	0x03BDCCD0 ADRP X19, 0x582000
	0x03BDCCD4 LDR W8, [X0 + 0xE0]
	0x03BDCCD8 LDR X19, [X19 + 0x58]
	0x03BDCCDC CBNZ W8, 0x3BDCCE4
	0x03BDCCE0 BL 0x1C16DFC
	0x03BDCCE4 BL 0x3BDC620
	0x03BDCCE8 LDR X1, [X19]
	0x03BDCCEC ADD X2, X31, 0xC
	0x03BDCCF0 MOV X3, X31
	0x03BDCCF4 BL 0x3E66F20
	0x03BDCCF8 LDR V0, [X31 + 0xC]
	0x03BDCCFC LDP X20, X19, [X31 + 0x10]
	0x03BDCD00 LDR X30, [X31], #0x20
	0x03BDCD04 RET
	0x03BDCD08 STR X30, [X31 - 0x20]!
	0x03BDCD0C STP X20, X19, [X31 + 0x10]
	0x03BDCD10 ADRP X20, 0x806000
	0x03BDCD14 ADRP X19, 0x582000
	0x03BDCD18 LDRB W8, [X20 + 0xEF1]
	0x03BDCD1C LDR X19, [X19 + 0x30]
	0x03BDCD20 TBNZ X8, 0x0, 0x3BDCD44
	0x03BDCD24 ADRP X0, 0x582000
	0x03BDCD28 LDR X0, [X0 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x807000
	007 Move X19, 0x518000
	008 Move W8, [X20+3814]
	009 Move X19, [X19+2416]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {52}
	014 Move X0, 0x518000
	015 Move X0, [X0+2416]
	016 Call 0x1C17CF4
	017 Move X0, 0x518000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move X0, 0x520000
	021 Move X0, [X0+1536]
	022 Call 0x1C17CF4
	023 Move X0, 0x545000
	024 Move X0, [X0+944]
	025 Call 0x1C17CF4
	026 Move X0, 0x582000
	027 Move X0, [X0+3992]
	028 Call 0x1C17CF4
	029 Move X0, 0x582000
	030 Move X0, [X0+4000]
	031 Call 0x1C17CF4
	032 Move X0, 0x550000
	033 Move X0, [X0+1512]
	034 Call 0x1C17CF4
	035 Move X0, 0x582000
	036 Move X0, [X0+4008]
	037 Call 0x1C17CF4
	038 Move X0, 0x550000
	039 Move X0, [X0+1520]
	040 Call 0x1C17CF4
	041 Move X0, 0x582000
	042 Move X0, [X0+4016]
	043 Call 0x1C17CF4
	044 Move X0, 0x582000
	045 Move X0, [X0+4024]
	046 Call 0x1C17CF4
	047 Move X0, 0x520000
	048 Move X0, [X0+1512]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X20+3814], W8
	052 Move X0, [X19]
	053 Move X19, 0x582000
	054 Move X20, 0x520000
	055 Move W8, [X0+224]
	056 Move X19, [X19+4000]
	057 Move X20, [X20+1536]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X31
	062 Call Application.get_unityVersion
	063 Move X8, [X20]
	064 Move X19, [X19]
	065 Move X20, X0
	066 Move W9, [X8+224]
	067 Compare W9, 0
	068 JumpIfNotEqual {71}
	069 Move X0, X8
	070 Call 0x1C17DFC
	071 Move X0, X20
	072 Move X1, X19
	073 Move X2, X31
	074 Call Regex.Match, X0, X1
	075 Compare X0, 0
	076 JumpIfEqual {218}
	077 Move X1, X31
	078 Move X19, X0
	079 Call Group.get_Success, X0
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {211}
	084 Move X8, [X19]
	085 Move X0, X19
	086 Move X9, [X8+392]
	087 Move X1, [X8+400]
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Compare X0, 0
	090 JumpIfEqual {218}
	091 Move X8, 0x550000
	092 Move X8, [X8+1512]
	093 Move X2, X31
	094 Move X1, [X8]
	095 Call GroupCollection.get_Item, X0, X1
	096 Compare X0, 0
	097 JumpIfEqual {218}
	098 Move X1, X31
	099 Call Capture.get_Value, X0
	100 Move X1, X31
	101 Call Int32.Parse, X0
	102 Move X8, [X19]
	103 Move W20, W0
	104 Move X0, X19
	105 Move X9, [X8+392]
	106 Move X1, [X8+400]
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Compare X0, 0
	109 JumpIfEqual {218}
	110 Move X8, 0x550000
	111 Move X8, [X8+1520]
	112 Move X2, X31
	113 Move X1, [X8]
	114 Call GroupCollection.get_Item, X0, X1
	115 Compare X0, 0
	116 JumpIfEqual {218}
	117 Move X1, X31
	118 Call Capture.get_Value, X0
	119 Move X1, X31
	120 Call Int32.Parse, X0
	121 Move X8, [X19]
	122 Move W21, W0
	123 Move X0, X19
	124 Move X9, [X8+392]
	125 Move X1, [X8+400]
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Compare X0, 0
	128 JumpIfEqual {218}
	129 Move X8, 0x582000
	130 Move X8, [X8+4024]
	131 Move X2, X31
	132 Move X1, [X8]
	133 Call GroupCollection.get_Item, X0, X1
	134 Compare X0, 0
	135 JumpIfEqual {218}
	136 Move X1, X31
	137 Call Capture.get_Value, X0
	138 Move X1, X31
	139 Call Int32.Parse, X0
	140 Move X8, [X19]
	141 Move W22, W0
	142 Move X0, X19
	143 Move X9, [X8+392]
	144 Move X1, [X8+400]
	145 NotImplemented "Instruction BLR not yet implemented."
	146 Compare X0, 0
	147 JumpIfEqual {218}
	148 Move X8, 0x520000
	149 Move X8, [X8+1512]
	150 Move X2, X31
	151 Move X1, [X8]
	152 Call GroupCollection.get_Item, X0, X1
	153 Compare X0, 0
	154 JumpIfEqual {218}
	155 Move X1, X31
	156 Call Capture.get_Value, X0
	157 NotImplemented "Instruction CMP not yet implemented."
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move W0, 1
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move X8, 0x518000
	162 Move X8, [X8+2600]
	163 Move X0, [X8]
	164 Move W8, [X0+224]
	165 Compare W8, 0
	166 JumpIfNotEqual {168}
	167 Call 0x1C17DFC
	168 Move X8, 0x582000
	169 Move X8, [X8+4016]
	170 Move X2, X0
	171 NotImplemented "Instruction CMP not yet implemented."
	172 NotImplemented "Instruction CMP not yet implemented."
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X8, 0x518000
	175 Move X8, [X8+2600]
	176 Move X0, [X8]
	177 Move W8, [X0+224]
	178 Compare W8, 0
	179 JumpIfNotEqual {181}
	180 Call 0x1C17DFC
	181 Move X8, 0x582000
	182 Move X8, [X8+4008]
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move W0, 1
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Compare W22, 0
	187 JumpIfNotEqual {212}
	188 Move X8, 0x545000
	189 Move X8, [X8+944]
	190 Move X0, X2
	191 Move X2, X31
	192 Move X1, [X8]
	193 Call String.op_Equality, X0, X1
	194 Move TEMP, X0
	195 And TEMP, TEMP, 1
	196 Compare TEMP, 1
	197 JumpIfNotEqual {211}
	198 Move X8, 0x518000
	199 Move X8, [X8+2600]
	200 Move X0, [X8]
	201 Move W8, [X0+224]
	202 Compare W8, 0
	203 JumpIfNotEqual {205}
	204 Call 0x1C17DFC
	205 Move X8, 0x582000
	206 Move X8, [X8+3992]
	207 Move X0, [X8]
	208 Move X1, X31
	209 Call Debug.LogWarning, X0
	210 Move W0, W31
	211 Move W0, 1
	212 Move X20, [X31+32]
	213 Move X19, [X31+40]
	214 Move X22, [X31+16]
	215 Move X21, [X31+24]
	216 Move X30, [X31+48]
	217 Return X0
	218 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03BDD204 BL 0x3E66F20
	0x03BDD208 LDR V0, [X31 + 0xC]

ISIL:
	001 Move X1, X31
	002 Call XRLoaderHelper..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x03BDD20C LDP X20, X19, [X31 + 0x10]
	0x03BDD210 LDR X30, [X31], #0x20
	0x03BDD214 RET
	0x03BDD218 STR X30, [X31 - 0x20]!
	0x03BDD21C STP X20, X19, [X31 + 0x10]
	0x03BDD220 ADRP X20, 0x805000
	0x03BDD224 ADRP X19, 0x581000
	0x03BDD228 LDRB W8, [X20 + 0xEFB]
	0x03BDD22C LDR X19, [X19 + 0x30]
	0x03BDD230 TBNZ X8, 0x0, 0x3BDD254
	0x03BDD234 ADRP X0, 0x581000
	0x03BDD238 LDR X0, [X0 + 0x30]
	0x03BDD23C BL 0x1C16CF4
	0x03BDD240 ADRP X0, 0x581000
	0x03BDD244 LDR X0, [X0 + 0xA8]
	0x03BDD248 BL 0x1C16CF4
	0x03BDD24C MOVZ W8, 0x1
	0x03BDD250 STRB W8, [X20 + 0xEFB]
	0x03BDD254 LDR X0, [X19]
	0x03BDD258 STR W31, [X31 + 0xC]
	0x03BDD25C ADRP X19, 0x581000
	0x03BDD260 LDR W8, [X0 + 0xE0]
	0x03BDD264 LDR X19, [X19 + 0xA8]
	0x03BDD268 CBNZ W8, 0x3BDD270
	0x03BDD26C BL 0x1C16DFC
	0x03BDD270 BL 0x3BDC620
	0x03BDD274 LDR X1, [X19]
	0x03BDD278 ADD X2, X31, 0xC
	0x03BDD27C MOV X3, X31
	0x03BDD280 BL 0x3E66F20
	0x03BDD284 LDR V0, [X31 + 0xC]
	0x03BDD288 LDP X20, X19, [X31 + 0x10]
	0x03BDD28C LDR X30, [X31], #0x20
	0x03BDD290 RET
	0x03BDD294 STR X30, [X31 - 0x20]!
	0x03BDD298 STP X20, X19, [X31 + 0x10]
	0x03BDD29C ADRP X20, 0x805000
	0x03BDD2A0 ADRP X19, 0x581000
	0x03BDD2A4 LDRB W8, [X20 + 0xEFC]
	0x03BDD2A8 LDR X19, [X19 + 0x30]
	0x03BDD2AC TBNZ X8, 0x0, 0x3BDD2D0
	0x03BDD2B0 ADRP X0, 0x581000
	0x03BDD2B4 LDR X0, [X0 + 0x30]
	0x03BDD2B8 BL 0x1C16CF4
	0x03BDD2BC ADRP X0, 0x581000
	0x03BDD2C0 LDR X0, [X0 + 0xB0]
	0x03BDD2C4 BL 0x1C16CF4
	0x03BDD2C8 MOVZ W8, 0x1
	0x03BDD2CC STRB W8, [X20 + 0xEFC]
	0x03BDD2D0 LDR X0, [X19]
	0x03BDD2D4 STR W31, [X31 + 0xC]
	0x03BDD2D8 ADRP X19, 0x581000
	0x03BDD2DC LDR W8, [X0 + 0xE0]
	0x03BDD2E0 LDR X19, [X19 + 0xB0]
	0x03BDD2E4 CBNZ W8, 0x3BDD2EC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x806000
	009 Move X24, 0x582000
	010 Move X19, 0x582000
	011 Move X20, 0x581000
	012 Move X22, 0x582000
	013 Move X21, 0x582000
	014 Move W8, [X23+3815]
	015 Move X24, [X24+8]
	016 Move X19, [X19+16]
	017 Move X20, [X20+3920]
	018 Move X22, [X22+24]
	019 Move X21, [X21+32]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {41}
	024 Move X0, 0x582000
	025 Move X0, [X0+32]
	026 Call 0x1C17CF4
	027 Move X0, 0x582000
	028 Move X0, [X0+16]
	029 Call 0x1C17CF4
	030 Move X0, 0x582000
	031 Move X0, [X0+8]
	032 Call 0x1C17CF4
	033 Move X0, 0x582000
	034 Move X0, [X0+24]
	035 Call 0x1C17CF4
	036 Move X0, 0x581000
	037 Move X0, [X0+3920]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X23+3815], W8
	041 Move X0, [X24]
	042 Call 0x1C17F10
	043 Move X1, [X19]
	044 Move X19, X0
	045 Call List`1<Object>..ctor, X0
	046 Move X8, [X20]
	047 Move X8, [X8+184]
	048 Move [X8], X19
	049 Move X0, [X22]
	050 Call 0x1C17F10
	051 Move X1, [X21]
	052 Move X19, X0
	053 Call List`1<Object>..ctor, X0
	054 Move X8, [X20]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X24, [X31+16]
	058 Move X23, [X31+24]
	059 Move X8, [X8+184]
	060 Move [X8+8], X19
	061 Move X20, [X31+48]
	062 Move X19, [X31+56]
	063 Move X30, [X31+64]
	064 Return 

