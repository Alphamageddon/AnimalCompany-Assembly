Type: UnityEngine.XR.Management.XRManagerSettings/<InitializeLoader>d__24

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x03BDABE8 ADRP X0, 0x519000
	0x03BDABEC LDR X0, [X0 + 0xA28]
	0x03BDABF0 BL 0x1C16CF4
	0x03BDABF4 ADRP X0, 0x583000
	0x03BDABF8 LDR X0, [X0 + 0xEA0]
	0x03BDABFC BL 0x1C16CF4
	0x03BDAC00 MOVZ W8, 0x1
	0x03BDAC04 STRB W8, [X19 + 0xED4]
	0x03BDAC08 BL 0x3BDE264
	0x03BDAC0C TBZ X0, 0x0, 0x3BDAC18

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x03BDB2C4 ADRP X20, 0x56D000
	0x03BDB2C8 ADRP X22, 0x540000
	0x03BDB2CC LDR W8, [X0 + 0xE0]
	0x03BDB2D0 LDR X23, [X23 + 0x18]
	0x03BDB2D4 LDR X24, [X24 + 0xF18]
	0x03BDB2D8 LDR X20, [X20 + 0xFB0]
	0x03BDB2DC LDR X22, [X22 + 0x270]

ISIL:
	001 Move W8, [X0+16]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Add W31, W8, 3
	004 Call <InitializeLoader>d__24.<>m__Finally1, X0
	005 Return 
	006 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x03BDB2E0 CBNZ W8, 0x3BDB2E8
	0x03BDB2E4 BL 0x1C16DFC
	0x03BDB2E8 ADRP X21, 0x582000
	0x03BDB2EC ADRP X19, 0x582000
	0x03BDB2F0 ADRP X29, 0x582000
	0x03BDB2F4 ADRP X28, 0x582000
	0x03BDB2F8 ADRP X27, 0x582000
	0x03BDB2FC ADRP X26, 0x582000
	0x03BDB300 ADRP X25, 0x582000
	0x03BDB304 LDR X21, [X21 + 0xEF0]
	0x03BDB308 LDR X19, [X19 + 0xF20]
	0x03BDB30C LDR X29, [X29 + 0xF00]
	0x03BDB310 LDR X28, [X28 + 0xF28]
	0x03BDB314 LDR X27, [X27 + 0xEF8]
	0x03BDB318 LDR X26, [X26 + 0xF10]
	0x03BDB31C LDR X25, [X25 + 0xF08]
	0x03BDB320 LDR X1, [X23]
	0x03BDB324 ADD X0, X31, 0x58
	0x03BDB328 MOVZ W2, 0x1
	0x03BDB32C MOV X3, X31
	0x03BDB330 BL 0x3755CF8
	0x03BDB334 LDR X1, [X24]
	0x03BDB338 STR X0, [X31 + 0x58]
	0x03BDB33C ADD X0, X31, 0x58
	0x03BDB340 MOVZ W2, 0x1
	0x03BDB344 MOV X3, X31
	0x03BDB348 BL 0x375606C
	0x03BDB34C LDR X2, [X20]
	0x03BDB350 MOV X1, X0
	0x03BDB354 ADD X0, X31, 0x48
	0x03BDB358 STP X31, X31, [X31 + 0x48]
	0x03BDB35C BL 0x243321C
	0x03BDB360 LDR X0, [X22]
	0x03BDB364 LDR W8, [X0 + 0xE0]
	0x03BDB368 CBNZ W8, 0x3BDB370
	0x03BDB36C BL 0x1C16DFC
	0x03BDB370 LDP X1, X2, [X31 + 0x48]
	0x03BDB374 LDR X3, [X21]
	0x03BDB378 MOV X0, X31
	0x03BDB37C BL 0x220C738
	0x03BDB380 LDR X1, [X23]
	0x03BDB384 ADD X0, X31, 0x58
	0x03BDB388 MOVZ W2, 0x1
	0x03BDB38C MOV X3, X31
	0x03BDB390 STR X31, [X31 + 0x58]
	0x03BDB394 BL 0x3755CF8
	0x03BDB398 LDR X1, [X19]
	0x03BDB39C STR X0, [X31 + 0x58]
	0x03BDB3A0 ADD X0, X31, 0x58
	0x03BDB3A4 MOVZ W2, 0x1
	0x03BDB3A8 MOV X3, X31
	0x03BDB3AC BL 0x375606C
	0x03BDB3B0 LDR X2, [X20]
	0x03BDB3B4 MOV X1, X0
	0x03BDB3B8 ADD X0, X31, 0x38
	0x03BDB3BC STP X31, X31, [X31 + 0x38]
	0x03BDB3C0 BL 0x243321C
	0x03BDB3C4 LDP X1, X2, [X31 + 0x38]
	0x03BDB3C8 LDR X3, [X29]
	0x03BDB3CC MOV X0, X31
	0x03BDB3D0 BL 0x220C738
	0x03BDB3D4 LDR X1, [X23]
	0x03BDB3D8 ADD X0, X31, 0x58
	0x03BDB3DC MOVZ W2, 0x1
	0x03BDB3E0 MOV X3, X31
	0x03BDB3E4 STR X31, [X31 + 0x58]
	0x03BDB3E8 BL 0x3755CF8
	0x03BDB3EC LDR X1, [X28]
	0x03BDB3F0 STR X0, [X31 + 0x58]
	0x03BDB3F4 ADD X0, X31, 0x58
	0x03BDB3F8 MOVZ W2, 0x1
	0x03BDB3FC MOV X3, X31
	0x03BDB400 BL 0x375606C
	0x03BDB404 LDR X2, [X20]
	0x03BDB408 MOV X1, X0
	0x03BDB40C ADD X0, X31, 0x28
	0x03BDB410 STP X31, X31, [X31 + 0x28]
	0x03BDB414 BL 0x243321C
	0x03BDB418 LDP X1, X2, [X31 + 0x28]
	0x03BDB41C LDR X3, [X27]
	0x03BDB420 MOV X0, X31
	0x03BDB424 BL 0x220C738
	0x03BDB428 LDR X1, [X23]
	0x03BDB42C ADD X0, X31, 0x58
	0x03BDB430 MOVZ W2, 0x1
	0x03BDB434 MOV X3, X31
	0x03BDB438 STR X31, [X31 + 0x58]
	0x03BDB43C BL 0x3755CF8
	0x03BDB440 LDR X1, [X26]
	0x03BDB444 STR X0, [X31 + 0x58]
	0x03BDB448 ADD X0, X31, 0x58
	0x03BDB44C MOVZ W2, 0x1
	0x03BDB450 MOV X3, X31
	0x03BDB454 BL 0x375606C
	0x03BDB458 LDR X2, [X20]
	0x03BDB45C MOV X1, X0
	0x03BDB460 ADD X0, X31, 0x18
	0x03BDB464 STP X31, X31, [X31 + 0x18]
	0x03BDB468 BL 0x243321C
	0x03BDB46C LDP X1, X2, [X31 + 0x18]
	0x03BDB470 LDR X3, [X25]
	0x03BDB474 MOV X0, X31
	0x03BDB478 BL 0x220C738
	0x03BDB47C LDR X1, [X23]
	0x03BDB480 ADD X0, X31, 0x58
	0x03BDB484 MOVZ W2, 0x1
	0x03BDB488 MOV X3, X31
	0x03BDB48C STR X31, [X31 + 0x58]
	0x03BDB490 BL 0x3755CF8
	0x03BDB494 ADRP X8, 0x582000
	0x03BDB498 LDR X8, [X8 + 0xF30]
	0x03BDB49C STR X0, [X31 + 0x58]
	0x03BDB4A0 ADD X0, X31, 0x58
	0x03BDB4A4 MOVZ W2, 0x1
	0x03BDB4A8 LDR X1, [X8]
	0x03BDB4AC MOV X3, X31
	0x03BDB4B0 BL 0x375606C
	0x03BDB4B4 LDR X2, [X20]
	0x03BDB4B8 MOV X1, X0
	0x03BDB4BC ADD X0, X31, 0x8
	0x03BDB4C0 STP X31, X31, [X31 + 0x8]
	0x03BDB4C4 BL 0x243321C
	0x03BDB4C8 ADRP X8, 0x582000
	0x03BDB4CC LDP X1, X2, [X31 + 0x8]
	0x03BDB4D0 LDR X8, [X8 + 0xEE0]
	0x03BDB4D4 MOV X0, X31
	0x03BDB4D8 LDR X3, [X8]
	0x03BDB4DC BL 0x220C738
	0x03BDB4E0 ADRP X8, 0x582000
	0x03BDB4E4 LDR X8, [X8 + 0xEE8]
	0x03BDB4E8 MOV X0, X31
	0x03BDB4EC MOV X1, X31
	0x03BDB4F0 MOV X2, X31
	0x03BDB4F4 LDR X3, [X8]
	0x03BDB4F8 BL 0x220C738
	0x03BDB4FC ADRP X8, 0x582000
	0x03BDB500 LDR X8, [X8 + 0xED8]
	0x03BDB504 MOV X0, X31
	0x03BDB508 MOV X1, X31
	0x03BDB50C MOV X2, X31
	0x03BDB510 LDR X3, [X8]
	0x03BDB514 BL 0x220C738
	0x03BDB518 LDP X20, X19, [X31 + 0xB0]
	0x03BDB51C LDP X22, X21, [X31 + 0xA0]
	0x03BDB520 LDP X24, X23, [X31 + 0x90]
	0x03BDB524 LDP X26, X25, [X31 + 0x80]
	0x03BDB528 LDP X28, X27, [X31 + 0x70]
	0x03BDB52C LDP X29, X30, [X31 + 0x60]
	0x03BDB530 ADD X31, X31, 0xC0
	0x03BDB534 RET
	0x03BDB538 STP X30, X19, [X31 - 0x10]!
	0x03BDB53C BL 0x3BDD8B8
	0x03BDB540 ANDS W31, W0, 0x1
	0x03BDB544 MOVZ W8, 0x2
	0x03BDB548 CSEL W0, W31, W8, NE
	0x03BDB54C LDP X30, X19, [X31], #0x10
	0x03BDB550 RET
	0x03BDB554 CMP W1, 0x1
	0x03BDB558 MOV X19, X0
	0x03BDB55C B.NE 0x3BDB5BC
	0x03BDB560 MOV X0, X19
	0x03BDB564 BL 0x3EB1AD0
	0x03BDB568 MOV X19, X0
	0x03BDB56C ADRP X0, 0x557000
	0x03BDB570 LDR X0, [X0 + 0xE50]
	0x03BDB574 BL 0x1C16D08
	0x03BDB578 LDR X8, [X19]
	0x03BDB57C LDR X1, [X8]
	0x03BDB580 BL 0x1C17270
	0x03BDB584 TBZ X0, 0x0, 0x3BDB594
	0x03BDB588 BL 0x3EB1AE0
	0x03BDB58C MOVZ W0, 0x1
	0x03BDB590 B 0x3BDB54C
	0x03BDB594 MOVZ W0, 0x8
	0x03BDB598 BL 0x3EB1AF0
	0x03BDB59C LDR X8, [X19]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+80], X30
	003 Move [X31+88], X0
	004 Move [X31+96], X20
	005 Move [X31+104], X19
	006 Move X20, 0x808000
	007 Move W8, [X20+3783]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {33}
	013 Move X0, 0x519000
	014 Move X0, [X0+2600]
	015 Call 0x1C17CF4
	016 Move X0, 0x583000
	017 Move X0, [X0+3448]
	018 Call 0x1C17CF4
	019 Move X0, 0x583000
	020 Move X0, [X0+3456]
	021 Call 0x1C17CF4
	022 Move X0, 0x583000
	023 Move X0, [X0+3464]
	024 Call 0x1C17CF4
	025 Move X0, 0x519000
	026 Move X0, [X0+1432]
	027 Call 0x1C17CF4
	028 Move X0, 0x583000
	029 Move X0, [X0+3472]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+3783], W8
	033 Add X8, X31, 88
	034 Move [X31+72], X8
	035 Move W8, [X19+16]
	036 Move X20, [X19+32]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Compare W8, 0
	039 JumpIfNotEqual {74}
	040 Move TEMP, 0
	041 Not TEMP
	042 Move W8, TEMP
	043 Move [X19+16], W8
	044 Compare X20, 0
	045 JumpIfEqual {168}
	046 Move X8, 0x519000
	047 Move X8, [X8+1432]
	048 Move X19, [X20+48]
	049 Move X0, [X8]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, X19
	055 Move X1, X31
	056 Move X2, X31
	057 Call Object.op_Inequality, X0, X1
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {79}
	062 Move X8, 0x519000
	063 Move X8, [X8+2600]
	064 Move X0, [X8]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X8, 0x583000
	070 Move X8, [X8+3472]
	071 Move X0, [X8]
	072 Move X1, X31
	073 Call Debug.LogWarning, X0
	074 Move W0, W31
	075 Move TEMP, 2
	076 Not TEMP
	077 Move W8, TEMP
	078 Move [X19+16], W8
	079 Move X0, [X20+32]
	080 Compare X0, 0
	081 JumpIfEqual {170}
	082 Move X8, 0x583000
	083 Move X8, [X8+3464]
	084 Move X1, [X8]
	085 Add X8, X31, 8
	086 Call List`1<Object>.GetEnumerator, X0
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 Move X8, [X31+24]
	089 Move X19, [X31+88]
	090 Move TEMP, 2
	091 Not TEMP
	092 Move W9, TEMP
	093 Move [X31+2], V0
	094 Move [X31+48], X8
	095 Move [X19+56], X8
	096 Move [X19+40], V0
	097 Move [X19+16], W9
	098 Move X8, 0x583000
	099 Move X8, [X8+3448]
	100 Add X0, X19, 40
	101 Move X1, [X8]
	102 Call Enumerator<Object>.MoveNext, X0
	103 Move W8, W0
	104 Move X0, [X31+88]
	105 Move TEMP, X8
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {150}
	109 Move X8, 0x519000
	110 Move X8, [X8+1432]
	111 Move X19, [X0+56]
	112 Move X8, [X8]
	113 Move W9, [X8+224]
	114 Compare W9, 0
	115 JumpIfNotEqual {118}
	116 Move X0, X8
	117 Call 0x1C17DFC
	118 Move X0, X19
	119 Move X1, X31
	120 Move X2, X31
	121 Call Object.op_Inequality, X0, X1
	122 Move TEMP, X0
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {159}
	126 Compare X20, 0
	127 JumpIfEqual {171}
	128 Move X1, X19
	129 Call XRManagerSettings.CheckGraphicsAPICompatibility, X0, X1
	130 Move TEMP, X0
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfNotEqual {159}
	134 Compare X19, 0
	135 JumpIfEqual {172}
	136 Move X8, [X19]
	137 Move X9, [X8+376]
	138 Move X1, [X8+384]
	139 Move X0, X19
	140 NotImplemented "Instruction BLR not yet implemented."
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {159}
	145 Move W8, 1
	146 Move [X20+48], X19
	147 Move [X20+24], W8
	148 Move X0, [X31+88]
	149 Call <InitializeLoader>d__24.<>m__Finally1, X0
	150 Call <InitializeLoader>d__24.<>m__Finally1, X0
	151 Move X8, [X31+88]
	152 Move [X8+40], X31
	153 Move [X8+48], X31
	154 Move [X8+56], X31
	155 Compare X20, 0
	156 JumpIfEqual {169}
	157 Move W0, W31
	158 Move [X20+48], X31
	159 Move X8, [X31+88]
	160 Move W0, 1
	161 Move [X8+24], X31
	162 Move [X8+16], W0
	163 Move X20, [X31+96]
	164 Move X19, [X31+104]
	165 Move X30, [X31+80]
	166 Add X31, X31, 112
	167 Return X0
	168 Call 0x1C17F20
	169 Call 0x1C17F20
	170 Call 0x1C17F20
	171 Call 0x1C17F20
	172 Call 0x1C17F20
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Call 0x3EB2AD0
	175 Move X19, [X0]
	176 Move [X31+64], X19
	177 Call 0x3EB2AE0
	178 Compare X19, 0
	179 JumpIfEqual {74}
	180 Add X8, X31, 64
	181 Add X0, X8, 8
	182 Call 0x1C029C8
	183 Move X0, X19
	184 Call 0x1C17F18
	185 Compare X19, 0
	186 JumpIfNotEqual {188}
	187 Call 0x1D2D690
	188 Move X0, [X31+88]
	189 Move W8, [X0+16]
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Add W31, W8, 3
	192 Call <InitializeLoader>d__24.<>m__Finally1, X0
	193 Move X0, X19
	194 Call 0x1C17F18
	195 Call 0x1991590

Method: System.Void <>m__Finally1()

Disassembly:
	0x03BDB5A0 STR X8, [X0]
	0x03BDB5A4 ADRP X1, 0x2D9000
	0x03BDB5A8 ADD X1, X1, 0xE58
	0x03BDB5AC MOV X2, X31
	0x03BDB5B0 BL 0x3EB1B00
	0x03BDB5B4 MOV X19, X0
	0x03BDB5B8 BL 0x3EB1AE0
	0x03BDB5BC MOV X0, X19
	0x03BDB5C0 BL 0x1D2C690
	0x03BDB5C4 BL 0x1990590
	0x03BDB5C8 B 0x3BDD8B8
	0x03BDB5CC STP X30, X21, [X31 - 0x20]!
	0x03BDB5D0 STP X20, X19, [X31 + 0x10]
	0x03BDB5D4 ADRP X20, 0x807000
	0x03BDB5D8 ADRP X21, 0x582000
	0x03BDB5DC LDRB W8, [X20 + 0xEDE]
	0x03BDB5E0 LDR X21, [X21 + 0xF38]
	0x03BDB5E4 MOV X19, X0
	0x03BDB5E8 TBNZ X8, 0x0, 0x3BDB600
	0x03BDB5EC ADRP X0, 0x582000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x808000
	006 Move X20, 0x583000
	007 Move W8, [X21+3784]
	008 Move X20, [X20+3440]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x583000
	015 Move X0, [X0+3440]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3784], W8
	019 Move TEMP, 0
	020 Not TEMP
	021 Move W8, TEMP
	022 Move [X19+16], W8
	023 Move X1, [X20]
	024 Add X0, X19, 40
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call Enumerator<Object>.Dispose, X0
	030 Return 

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x03BDB5F0 LDR X0, [X0 + 0xF38]
	0x03BDB5F4 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x03BDB5F8 MOVZ W8, 0x1
	0x03BDB5FC STRB W8, [X20 + 0xEDE]
	0x03BDB600 LDR X1, [X21]
	0x03BDB604 LDR X9, [X19]
	0x03BDB608 LDRH W8, [X1 + 0x50]
	0x03BDB60C ADD X8, X9, X8, 0x4, LSL
	0x03BDB610 LDR X0, [X8 + 0x140]
	0x03BDB614 BL 0x1C16DF8
	0x03BDB618 MOV X1, X0
	0x03BDB61C LDR X2, [X0 + 0x8]
	0x03BDB620 MOV X0, X19
	0x03BDB624 LDP X20, X19, [X31 + 0x10]
	0x03BDB628 LDP X30, X21, [X31], #0x20
	0x03BDB62C BR X2

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x519000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x583000
	011 Move X0, [X0+3704]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x03BDB630 STP X30, X21, [X31 - 0x20]!
	0x03BDB634 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

