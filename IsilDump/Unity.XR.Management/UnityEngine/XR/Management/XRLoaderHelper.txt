Type: UnityEngine.XR.Management.XRLoaderHelper

Method: T GetLoadedSubsystem()

Disassembly:
	0x022AF334 B.NE 0x22AF2F0
	0x022AF338 B 0x22AF480
	0x022AF33C ADRP X8, 0x1E6D000
	0x022AF340 LDR X0, [X23]
	0x022AF344 LDR X8, [X8 + 0x248]
	0x022AF348 LDR W9, [X0 + 0xE0]
	0x022AF34C LDR X22, [X8]
	0x022AF350 CBNZ W9, 0x22AF358
	0x022AF354 BL 0x1C16DFC
	0x022AF358 MOV X0, X22
	0x022AF35C MOV X1, X31
	0x022AF360 BL 0x338C698
	0x022AF364 MOV X1, X0
	0x022AF368 MOV X0, X21
	0x022AF36C MOV X2, X31
	0x022AF370 BL 0x3395194
	0x022AF374 TBZ X0, 0x0, 0x22AF488
	0x022AF378 MOV X0, X20
	0x022AF37C MOV X1, X31
	0x022AF380 BL 0x3BEE690
	0x022AF384 B 0x22AF6C4
	0x022AF388 ADRP X8, 0x1E6D000
	0x022AF38C LDR X0, [X23]
	0x022AF390 LDR X8, [X8 + 0x698]
	0x022AF394 LDR W9, [X0 + 0xE0]
	0x022AF398 LDR X22, [X8]
	0x022AF39C CBNZ W9, 0x22AF3A4
	0x022AF3A0 BL 0x1C16DFC
	0x022AF3A4 MOV X0, X22
	0x022AF3A8 MOV X1, X31
	0x022AF3AC BL 0x338C698
	0x022AF3B0 MOV X1, X0
	0x022AF3B4 MOV X0, X21
	0x022AF3B8 MOV X2, X31
	0x022AF3BC BL 0x3395194
	0x022AF3C0 TBZ X0, 0x0, 0x22AF740
	0x022AF3C4 MOV X0, X20
	0x022AF3C8 MOV X1, X31
	0x022AF3CC BL 0x3BEED78
	0x022AF3D0 ADRP X8, 0x1E6D000
	0x022AF3D4 LDR X8, [X8 + 0xA08]
	0x022AF3D8 MOV W23, W0
	0x022AF3DC MOV W1, W23
	0x022AF3E0 LDR X8, [X8]
	0x022AF3E4 MOV X0, X8
	0x022AF3E8 BL 0x1C16D6C
	0x022AF3EC CMP W23, 0x1
	0x022AF3F0 MOV X21, X0
	0x022AF3F4 B.LT 0x22AF480
	0x022AF3F8 ADRP X27, 0x1E6D000
	0x022AF3FC LDR X27, [X27 + 0xA10]
	0x022AF400 MOV X22, X31
	0x022AF404 MOV W25, W23
	0x022AF408 ADD X26, X21, 0x20
	0x022AF40C MOV X0, X20
	0x022AF410 MOV W1, W22
	0x022AF414 MOV X2, X31
	0x022AF418 BL 0x3BEADA0
	0x022AF41C LDR X8, [X27]
	0x022AF420 MOV X23, X0
	0x022AF424 MOV X0, X8
	0x022AF428 BL 0x1C16F10
	0x022AF42C MOV X1, X23
	0x022AF430 MOV X2, X31
	0x022AF434 MOV X24, X0
	0x022AF438 BL 0x3BF1930
	0x022AF43C CBZ X21, 0x22AF728
	0x022AF440 CBZ X24, 0x22AF458
	0x022AF444 LDR X8, [X21]
	0x022AF448 MOV X0, X24

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X1+56]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {23}
	011 Move X0, 0x1E6E000
	012 Move X0, [X0+2560]
	013 Call 0x1C17CF4
	014 Move X0, 0x1E45000
	015 Move X0, [X0+1728]
	016 Call 0x1C17CF4
	017 Move X8, [X19+56]
	018 Compare X8, 0
	019 JumpIfNotEqual {23}
	020 Move X0, X19
	021 Call 0x1C5D6E0
	022 Move X8, [X19+56]
	023 Move X9, 0x1E45000
	024 Move X9, [X9+1728]
	025 Move [X31+8], X31
	026 Move X21, [X8]
	027 Move X0, [X9]
	028 Move W9, [X0+224]
	029 Compare W9, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X21
	033 Move X1, X31
	034 Call Type.GetTypeFromHandle, X0
	035 Move X8, [X20+24]
	036 Compare X8, 0
	037 JumpIfEqual {86}
	038 Move X9, 0x1E6E000
	039 Move X9, [X9+2560]
	040 Move X1, X0
	041 Add X2, X31, 8
	042 Move X0, X8
	043 Move X3, [X9]
	044 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	045 Move X8, [X19+56]
	046 Move X20, [X31+8]
	047 Move X1, [X8+8]
	048 Move W8, [X1+309]
	049 Move TEMP, X8
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {56}
	053 Move X0, X1
	054 Call 0x1C5D684
	055 Move X1, X0
	056 Move X0, X20
	057 Call 0x1C17E00
	058 Move X8, [X19+56]
	059 Move X20, X0
	060 Move X19, [X8+8]
	061 Move W8, [X19+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {69}
	066 Move X0, X19
	067 Call 0x1C5D684
	068 Move X19, X0
	069 Compare X20, 0
	070 JumpIfEqual {79}
	071 Move X0, X20
	072 Move X1, X19
	073 Call 0x1C17E00
	074 Compare X0, 0
	075 JumpIfNotEqual {80}
	076 Move X0, X20
	077 Move X1, X19
	078 Call 0x1C181E0
	079 Move X0, X31
	080 Move X20, [X31+32]
	081 Move X19, [X31+40]
	082 Move X30, [X31+16]
	083 Move X21, [X31+24]
	084 Add X31, X31, 48
	085 Return X0
	086 Call 0x1C17F20

Method: System.Void StartSubsystem()

Disassembly:
	0x022AF44C LDR X1, [X8 + 0x40]
	0x022AF450 BL 0x1C16E00
	0x022AF454 CBZ X0, 0x22AF730
	0x022AF458 LDR W8, [X21 + 0x18]
	0x022AF45C CMP X22, X8
	0x022AF460 B.CS 0x22AF72C
	0x022AF464 MOV X0, X23
	0x022AF468 MOV X1, X31
	0x022AF46C STR X24, [X26, X22, LSL #3]
	0x022AF470 BL 0x3BEBA40
	0x022AF474 ADD X22, X22, 0x1
	0x022AF478 CMP X25, X22
	0x022AF47C B.NE 0x22AF40C
	0x022AF480 LDR X8, [X19 + 0x38]
	0x022AF484 B 0x22AF6CC
	0x022AF488 ADRP X8, 0x1E6B000
	0x022AF48C LDR X0, [X23]
	0x022AF490 LDR X8, [X8 + 0xD68]
	0x022AF494 LDR W9, [X0 + 0xE0]
	0x022AF498 LDR X22, [X8]
	0x022AF49C CBNZ W9, 0x22AF4A4
	0x022AF4A0 BL 0x1C16DFC
	0x022AF4A4 MOV X0, X22
	0x022AF4A8 MOV X1, X31
	0x022AF4AC BL 0x338C698
	0x022AF4B0 MOV X1, X0
	0x022AF4B4 MOV X0, X21
	0x022AF4B8 MOV X2, X31
	0x022AF4BC BL 0x3395194
	0x022AF4C0 TBZ X0, 0x0, 0x22AF500
	0x022AF4C4 ADRP X8, 0x1E44000
	0x022AF4C8 LDR X8, [X8 + 0xA28]
	0x022AF4CC LDR X0, [X8]
	0x022AF4D0 LDR W8, [X0 + 0xE0]
	0x022AF4D4 CBNZ W8, 0x22AF4DC
	0x022AF4D8 BL 0x1C16DFC
	0x022AF4DC ADRP X8, 0x1E6D000
	0x022AF4E0 LDR X8, [X8 + 0xA18]
	0x022AF4E4 MOV X1, X31
	0x022AF4E8 LDR X0, [X8]
	0x022AF4EC BL 0x3C06A04
	0x022AF4F0 MOV X0, X20
	0x022AF4F4 MOV X1, X31
	0x022AF4F8 BL 0x3BEE550
	0x022AF4FC B 0x22AF6C4
	0x022AF500 ADRP X8, 0x1E6B000
	0x022AF504 LDR X0, [X23]
	0x022AF508 LDR X8, [X8 + 0xD90]
	0x022AF50C LDR W9, [X0 + 0xE0]
	0x022AF510 LDR X22, [X8]
	0x022AF514 CBNZ W9, 0x22AF51C
	0x022AF518 BL 0x1C16DFC
	0x022AF51C MOV X0, X22
	0x022AF520 MOV X1, X31
	0x022AF524 BL 0x338C698

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X19, X0
	006 Compare X8, 0
	007 JumpIfNotEqual {18}
	008 Move X0, 0x1E6E000
	009 Move X0, [X0+2552]
	010 Move X20, X1
	011 Call 0x1C17CF4
	012 Move X8, [X20+56]
	013 Compare X8, 0
	014 JumpIfNotEqual {18}
	015 Move X0, X20
	016 Call 0x1C5D6E0
	017 Move X8, [X20+56]
	018 Move X1, [X8]
	019 Move X9, [X19]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Add X8, X9, X8
	022 Move X0, [X8+320]
	023 Call 0x1C17DF8
	024 Move X8, [X0+8]
	025 Move X1, X0
	026 Move X0, X19
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Compare X0, 0
	029 JumpIfEqual {47}
	030 Move X10, 0x1E6E000
	031 Move X8, [X0]
	032 Move X10, [X10+2552]
	033 Move X19, X0
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 Move X1, [X10]
	036 Compare X9, 0
	037 JumpIfEqual {44}
	038 Move X10, [X8+176]
	039 Add X10, X10, 8
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Subtract X9, X9, 1
	043 Add X10, X10, 16
	044 Move X0, X19
	045 Move W2, W31
	046 Call 0x1C5D788
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Return 
	051 NotImplemented "Instruction LDRSW not yet implemented."
	052 Add X8, X8, X9
	053 Add X0, X8, 312
	054 Move X2, [X0]
	055 Move X1, [X0+8]
	056 Move X0, X19
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X30, [X31+32]
	060 CallNoReturn X2

Method: System.Void StopSubsystem()

Disassembly:
	0x022AF528 MOV X1, X0
	0x022AF52C MOV X0, X21
	0x022AF530 MOV X2, X31
	0x022AF534 BL 0x3395194
	0x022AF538 TBZ X0, 0x0, 0x22AF54C
	0x022AF53C MOV X0, X20
	0x022AF540 MOV X1, X31
	0x022AF544 BL 0x3BEE5F0
	0x022AF548 B 0x22AF6C4
	0x022AF54C ADRP X8, 0x1E6B000
	0x022AF550 LDR X0, [X23]
	0x022AF554 LDR X8, [X8 + 0xD78]
	0x022AF558 LDR W9, [X0 + 0xE0]
	0x022AF55C LDR X22, [X8]
	0x022AF560 CBNZ W9, 0x22AF568
	0x022AF564 BL 0x1C16DFC
	0x022AF568 MOV X0, X22
	0x022AF56C MOV X1, X31
	0x022AF570 BL 0x338C698
	0x022AF574 MOV X1, X0
	0x022AF578 MOV X0, X21
	0x022AF57C MOV X2, X31
	0x022AF580 BL 0x3395194
	0x022AF584 TBZ X0, 0x0, 0x22AF598
	0x022AF588 MOV X0, X20
	0x022AF58C MOV X1, X31
	0x022AF590 BL 0x3BEE4B0
	0x022AF594 B 0x22AF6C4
	0x022AF598 ADRP X8, 0x1E6B000
	0x022AF59C LDR X0, [X23]
	0x022AF5A0 LDR X8, [X8 + 0xD88]
	0x022AF5A4 LDR W9, [X0 + 0xE0]
	0x022AF5A8 LDR X22, [X8]
	0x022AF5AC CBNZ W9, 0x22AF5B4
	0x022AF5B0 BL 0x1C16DFC
	0x022AF5B4 MOV X0, X22
	0x022AF5B8 MOV X1, X31
	0x022AF5BC BL 0x338C698
	0x022AF5C0 MOV X1, X0
	0x022AF5C4 MOV X0, X21
	0x022AF5C8 MOV X2, X31
	0x022AF5CC BL 0x3395194
	0x022AF5D0 TBZ X0, 0x0, 0x22AF5E4
	0x022AF5D4 MOV X0, X20
	0x022AF5D8 MOV X1, X31
	0x022AF5DC BL 0x3BEE410
	0x022AF5E0 B 0x22AF6C4
	0x022AF5E4 ADRP X8, 0x1E6C000
	0x022AF5E8 LDR X0, [X23]
	0x022AF5EC LDR X8, [X8 + 0xA80]
	0x022AF5F0 LDR W9, [X0 + 0xE0]
	0x022AF5F4 LDR X22, [X8]
	0x022AF5F8 CBNZ W9, 0x22AF600
	0x022AF5FC BL 0x1C16DFC
	0x022AF600 MOV X0, X22
	0x022AF604 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X19, X0
	006 Compare X8, 0
	007 JumpIfNotEqual {18}
	008 Move X0, 0x1E6E000
	009 Move X0, [X0+2552]
	010 Move X20, X1
	011 Call 0x1C17CF4
	012 Move X8, [X20+56]
	013 Compare X8, 0
	014 JumpIfNotEqual {18}
	015 Move X0, X20
	016 Call 0x1C5D6E0
	017 Move X8, [X20+56]
	018 Move X1, [X8]
	019 Move X9, [X19]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Add X8, X9, X8
	022 Move X0, [X8+320]
	023 Call 0x1C17DF8
	024 Move X8, [X0+8]
	025 Move X1, X0
	026 Move X0, X19
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Compare X0, 0
	029 JumpIfEqual {47}
	030 Move X10, 0x1E6E000
	031 Move X8, [X0]
	032 Move X10, [X10+2552]
	033 Move X19, X0
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 Move X1, [X10]
	036 Compare X9, 0
	037 JumpIfEqual {44}
	038 Move X10, [X8+176]
	039 Add X10, X10, 8
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Subtract X9, X9, 1
	043 Add X10, X10, 16
	044 Move W2, 1
	045 Move X0, X19
	046 Call 0x1C5D788
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Return 
	051 Move W9, [X10]
	052 Add W9, W9, 1
	053 Add X8, X8, W9
	054 Add X0, X8, 312
	055 Move X2, [X0]
	056 Move X1, [X0+8]
	057 Move X0, X19
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X30, [X31+32]
	061 CallNoReturn X2

Method: System.Void DestroySubsystem()

Disassembly:
	0x022AF1BC ADRP X23, 0x1E44000
	0x022AF1C0 LDR X23, [X23 + 0x6C0]
	0x022AF1C4 LDR X21, [X8]
	0x022AF1C8 LDR X0, [X23]
	0x022AF1CC LDR W9, [X0 + 0xE0]
	0x022AF1D0 CBNZ W9, 0x22AF1D8
	0x022AF1D4 BL 0x1C16DFC
	0x022AF1D8 MOV X0, X21
	0x022AF1DC MOV X1, X31
	0x022AF1E0 BL 0x338C698
	0x022AF1E4 CBZ X0, 0x22AF728
	0x022AF1E8 LDR X8, [X0]
	0x022AF1EC LDR X9, [X8 + 0x428]
	0x022AF1F0 LDR X1, [X8 + 0x430]
	0x022AF1F4 BLR X9
	0x022AF1F8 ADRP X8, 0x1E6D000
	0x022AF1FC LDR X8, [X8 + 0x6A0]
	0x022AF200 MOV X21, X0
	0x022AF204 LDR X8, [X8]
	0x022AF208 LDR W9, [X8 + 0xE0]
	0x022AF20C CBNZ W9, 0x22AF218
	0x022AF210 MOV X0, X8
	0x022AF214 BL 0x1C16DFC
	0x022AF218 MOV X0, X21
	0x022AF21C MOV X1, X31
	0x022AF220 BL 0x3BF3054
	0x022AF224 TBZ X0, 0x0, 0x22AF274
	0x022AF228 ADRP X8, 0x1E6B000
	0x022AF22C LDR X0, [X23]
	0x022AF230 LDR X8, [X8 + 0xD80]
	0x022AF234 LDR W9, [X0 + 0xE0]
	0x022AF238 LDR X22, [X8]
	0x022AF23C CBNZ W9, 0x22AF244
	0x022AF240 BL 0x1C16DFC
	0x022AF244 MOV X0, X22
	0x022AF248 MOV X1, X31
	0x022AF24C BL 0x338C698
	0x022AF250 MOV X1, X0
	0x022AF254 MOV X0, X21
	0x022AF258 MOV X2, X31
	0x022AF25C BL 0x3395194
	0x022AF260 TBZ X0, 0x0, 0x22AF33C
	0x022AF264 MOV X0, X20
	0x022AF268 MOV X1, X31
	0x022AF26C BL 0x3BEE730
	0x022AF270 B 0x22AF6C4
	0x022AF274 ADRP X8, 0x1E6C000
	0x022AF278 LDR X0, [X23]
	0x022AF27C LDR X8, [X8 + 0xB60]
	0x022AF280 LDR W9, [X0 + 0xE0]
	0x022AF284 LDR X22, [X8]
	0x022AF288 CBNZ W9, 0x22AF290
	0x022AF28C BL 0x1C16DFC
	0x022AF290 MOV X0, X22
	0x022AF294 MOV X1, X31
	0x022AF298 BL 0x338C698
	0x022AF29C MOV X1, X0
	0x022AF2A0 MOV X0, X21
	0x022AF2A4 MOV X2, X31
	0x022AF2A8 BL 0x3395194
	0x022AF2AC TBZ X0, 0x0, 0x22AF388
	0x022AF2B0 MOV X0, X20
	0x022AF2B4 MOV X1, X31
	0x022AF2B8 BL 0x3BEED78
	0x022AF2BC ADRP X8, 0x1E44000
	0x022AF2C0 LDR X8, [X8 + 0xAC8]
	0x022AF2C4 MOV W23, W0
	0x022AF2C8 MOV W1, W23
	0x022AF2CC LDR X8, [X8]
	0x022AF2D0 MOV X0, X8
	0x022AF2D4 BL 0x1C16D6C
	0x022AF2D8 CMP W23, 0x1
	0x022AF2DC MOV X21, X0
	0x022AF2E0 B.LT 0x22AF480
	0x022AF2E4 MOV X22, X31
	0x022AF2E8 MOV W24, W23
	0x022AF2EC ADD X25, X21, 0x20
	0x022AF2F0 MOV X0, X20
	0x022AF2F4 MOV W1, W22
	0x022AF2F8 MOV X2, X31
	0x022AF2FC BL 0x3BEADA0
	0x022AF300 MOV X1, X31
	0x022AF304 MOV X23, X0
	0x022AF308 BL 0x3BEBB38
	0x022AF30C CBZ X21, 0x22AF728
	0x022AF310 LDR W8, [X21 + 0x18]
	0x022AF314 CMP X22, X8
	0x022AF318 B.CS 0x22AF72C
	0x022AF31C STR X0, [X25, X22, LSL #3]
	0x022AF320 MOV X0, X23
	0x022AF324 MOV X1, X31
	0x022AF328 BL 0x3BEBA40
	0x022AF32C ADD X22, X22, 0x1
	0x022AF330 CMP X24, X22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+56]
	006 Move X21, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {28}
	010 Move X0, 0x1E6E000
	011 Move X0, [X0+2536]
	012 Call 0x1C17CF4
	013 Move X0, 0x1E6E000
	014 Move X0, [X0+2544]
	015 Call 0x1C17CF4
	016 Move X0, 0x1E6E000
	017 Move X0, [X0+2552]
	018 Call 0x1C17CF4
	019 Move X0, 0x1E45000
	020 Move X0, [X0+1728]
	021 Call 0x1C17CF4
	022 Move X8, [X21+56]
	023 Compare X8, 0
	024 JumpIfNotEqual {28}
	025 Move X0, X21
	026 Call 0x1C5D6E0
	027 Move X8, [X21+56]
	028 Move X1, [X8]
	029 Move X9, [X20]
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 Add X8, X9, X8
	032 Move X0, [X8+320]
	033 Call 0x1C17DF8
	034 Move X8, [X0+8]
	035 Move X1, X0
	036 Move X0, X20
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Compare X0, 0
	039 JumpIfEqual {91}
	040 Move X8, 0x1E45000
	041 Move X8, [X8+1728]
	042 Move X19, X0
	043 Move X0, [X8]
	044 Move X8, [X21+56]
	045 Move W9, [X0+224]
	046 Move X21, [X8+16]
	047 Compare W9, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, X21
	051 Move X1, X31
	052 Call Type.GetTypeFromHandle, X0
	053 Move X8, [X20+24]
	054 Compare X8, 0
	055 JumpIfEqual {108}
	056 Move X9, 0x1E6E000
	057 Move X9, [X9+2536]
	058 Move X21, X0
	059 Move X0, X8
	060 Move X1, X21
	061 Move X2, [X9]
	062 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {75}
	067 Move X0, [X20+24]
	068 Compare X0, 0
	069 JumpIfEqual {108}
	070 Move X8, 0x1E6E000
	071 Move X8, [X8+2544]
	072 Move X1, X21
	073 Move X2, [X8]
	074 Call Dictionary`2<Object, Object>.Remove, X0, X1
	075 Move X10, 0x1E6E000
	076 Move X8, [X19]
	077 Move X10, [X10+2552]
	078 NotImplemented "Instruction LDRH not yet implemented."
	079 Move X1, [X10]
	080 Compare X9, 0
	081 JumpIfEqual {88}
	082 Move X10, [X8+176]
	083 Add X10, X10, 8
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Subtract X9, X9, 1
	087 Add X10, X10, 16
	088 Move W2, 2
	089 Move X0, X19
	090 Call 0x1C5D788
	091 Move X20, [X31+16]
	092 Move X19, [X31+24]
	093 Move X30, [X31+32]
	094 Move X21, [X31+40]
	095 Return 
	096 Move W9, [X10]
	097 Add W9, W9, 2
	098 Add X8, X8, W9
	099 Add X0, X8, 312
	100 Move X2, [X0]
	101 Move X1, [X0+8]
	102 Move X0, X19
	103 Move X20, [X31+16]
	104 Move X19, [X31+24]
	105 Move X30, [X31+32]
	106 Move X21, [X31+40]
	107 CallNoReturn X2
	108 Call 0x1C17F20

Method: System.Void CreateSubsystem(System.Collections.Generic.List`1<TDescriptor> descriptors, System.String id)

Disassembly:
	0x022AEA1C ADRP X0, 0x1E6D000
	0x022AEA20 LDR X0, [X0 + 0xA78]
	0x022AEA24 BL 0x1C16CF4
	0x022AEA28 ADRP X0, 0x1E6C000
	0x022AEA2C LDR X0, [X0 + 0xD78]
	0x022AEA30 BL 0x1C16CF4
	0x022AEA34 ADRP X0, 0x1E6C000
	0x022AEA38 LDR X0, [X0 + 0xD80]
	0x022AEA3C BL 0x1C16CF4
	0x022AEA40 ADRP X0, 0x1E6C000
	0x022AEA44 LDR X0, [X0 + 0xD88]
	0x022AEA48 BL 0x1C16CF4
	0x022AEA4C ADRP X0, 0x1E6C000
	0x022AEA50 LDR X0, [X0 + 0xD90]
	0x022AEA54 BL 0x1C16CF4
	0x022AEA58 ADRP X0, 0x1E6D000
	0x022AEA5C LDR X0, [X0 + 0xA80]
	0x022AEA60 BL 0x1C16CF4
	0x022AEA64 ADRP X0, 0x1E45000
	0x022AEA68 LDR X0, [X0 + 0xAC8]
	0x022AEA6C BL 0x1C16CF4
	0x022AEA70 ADRP X0, 0x1E6D000
	0x022AEA74 LDR X0, [X0 + 0xB60]
	0x022AEA78 BL 0x1C16CF4
	0x022AEA7C ADRP X0, 0x1E45000
	0x022AEA80 LDR X0, [X0 + 0x6C0]
	0x022AEA84 BL 0x1C16CF4
	0x022AEA88 ADRP X0, 0x1E6E000
	0x022AEA8C LDR X0, [X0 + 0xA18]
	0x022AEA90 BL 0x1C16CF4
	0x022AEA94 LDR X8, [X19 + 0x38]
	0x022AEA98 CBNZ X8, 0x22AEAA8
	0x022AEA9C MOV X0, X19
	0x022AEAA0 BL 0x1C5C6E0
	0x022AEAA4 LDR X8, [X19 + 0x38]
	0x022AEAA8 ADRP X23, 0x1E45000
	0x022AEAAC LDR X23, [X23 + 0x6C0]
	0x022AEAB0 LDR X21, [X8]
	0x022AEAB4 LDR X0, [X23]
	0x022AEAB8 LDR W9, [X0 + 0xE0]
	0x022AEABC CBNZ W9, 0x22AEAC4
	0x022AEAC0 BL 0x1C16DFC
	0x022AEAC4 MOV X0, X21
	0x022AEAC8 MOV X1, X31
	0x022AEACC BL 0x338C698
	0x022AEAD0 CBZ X0, 0x22AF01C
	0x022AEAD4 LDR X8, [X0]
	0x022AEAD8 LDR X9, [X8 + 0x428]
	0x022AEADC LDR X1, [X8 + 0x430]
	0x022AEAE0 BLR X9
	0x022AEAE4 ADRP X8, 0x1E6E000
	0x022AEAE8 LDR X8, [X8 + 0x6A0]
	0x022AEAEC MOV X21, X0
	0x022AEAF0 LDR X8, [X8]
	0x022AEAF4 LDR W9, [X8 + 0xE0]
	0x022AEAF8 CBNZ W9, 0x22AEB04
	0x022AEAFC MOV X0, X8
	0x022AEB00 BL 0x1C16DFC
	0x022AEB04 MOV X0, X21
	0x022AEB08 MOV X1, X31
	0x022AEB0C BL 0x3BF3054
	0x022AEB10 TBZ X0, 0x0, 0x22AEB60
	0x022AEB14 ADRP X8, 0x1E6C000
	0x022AEB18 LDR X0, [X23]
	0x022AEB1C LDR X8, [X8 + 0xD80]
	0x022AEB20 LDR W9, [X0 + 0xE0]
	0x022AEB24 LDR X22, [X8]
	0x022AEB28 CBNZ W9, 0x22AEB30
	0x022AEB2C BL 0x1C16DFC
	0x022AEB30 MOV X0, X22
	0x022AEB34 MOV X1, X31
	0x022AEB38 BL 0x338C698
	0x022AEB3C MOV X1, X0
	0x022AEB40 MOV X0, X21
	0x022AEB44 MOV X2, X31
	0x022AEB48 BL 0x3395194
	0x022AEB4C TBZ X0, 0x0, 0x22AEC28
	0x022AEB50 MOV X0, X20
	0x022AEB54 MOV X1, X31
	0x022AEB58 BL 0x3BEE730
	0x022AEB5C B 0x22AEFB0
	0x022AEB60 ADRP X8, 0x1E6D000
	0x022AEB64 LDR X0, [X23]
	0x022AEB68 LDR X8, [X8 + 0xB60]
	0x022AEB6C LDR W9, [X0 + 0xE0]
	0x022AEB70 LDR X22, [X8]
	0x022AEB74 CBNZ W9, 0x22AEB7C
	0x022AEB78 BL 0x1C16DFC
	0x022AEB7C MOV X0, X22
	0x022AEB80 MOV X1, X31
	0x022AEB84 BL 0x338C698
	0x022AEB88 MOV X1, X0
	0x022AEB8C MOV X0, X21
	0x022AEB90 MOV X2, X31
	0x022AEB94 BL 0x3395194
	0x022AEB98 TBZ X0, 0x0, 0x22AEC74
	0x022AEB9C MOV X0, X20
	0x022AEBA0 MOV X1, X31
	0x022AEBA4 BL 0x3BEED78
	0x022AEBA8 ADRP X8, 0x1E45000
	0x022AEBAC LDR X8, [X8 + 0xAC8]
	0x022AEBB0 MOV W23, W0
	0x022AEBB4 MOV W1, W23
	0x022AEBB8 LDR X8, [X8]
	0x022AEBBC MOV X0, X8
	0x022AEBC0 BL 0x1C16D6C
	0x022AEBC4 CMP W23, 0x1
	0x022AEBC8 MOV X21, X0
	0x022AEBCC B.LT 0x22AED6C
	0x022AEBD0 MOV X22, X31
	0x022AEBD4 MOV W24, W23
	0x022AEBD8 ADD X25, X21, 0x20
	0x022AEBDC MOV X0, X20
	0x022AEBE0 MOV W1, W22
	0x022AEBE4 MOV X2, X31
	0x022AEBE8 BL 0x3BEADA0
	0x022AEBEC MOV X1, X31
	0x022AEBF0 MOV X23, X0
	0x022AEBF4 BL 0x3BEBB38
	0x022AEBF8 CBZ X21, 0x22AF01C
	0x022AEBFC LDR W8, [X21 + 0x18]
	0x022AEC00 CMP X22, X8
	0x022AEC04 B.CS 0x22AF020
	0x022AEC08 STR X0, [X25, X22, LSL #3]
	0x022AEC0C MOV X0, X23
	0x022AEC10 MOV X1, X31
	0x022AEC14 BL 0x3BEBA40
	0x022AEC18 ADD X22, X22, 0x1
	0x022AEC1C CMP X24, X22
	0x022AEC20 B.NE 0x22AEBDC
	0x022AEC24 B 0x22AED6C
	0x022AEC28 ADRP X8, 0x1E6E000
	0x022AEC2C LDR X0, [X23]
	0x022AEC30 LDR X8, [X8 + 0x248]
	0x022AEC34 LDR W9, [X0 + 0xE0]
	0x022AEC38 LDR X22, [X8]
	0x022AEC3C CBNZ W9, 0x22AEC44
	0x022AEC40 BL 0x1C16DFC
	0x022AEC44 MOV X0, X22
	0x022AEC48 MOV X1, X31
	0x022AEC4C BL 0x338C698
	0x022AEC50 MOV X1, X0
	0x022AEC54 MOV X0, X21
	0x022AEC58 MOV X2, X31
	0x022AEC5C BL 0x3395194
	0x022AEC60 TBZ X0, 0x0, 0x22AED74
	0x022AEC64 MOV X0, X20
	0x022AEC68 MOV X1, X31
	0x022AEC6C BL 0x3BEE690
	0x022AEC70 B 0x22AEFB0
	0x022AEC74 ADRP X8, 0x1E6E000
	0x022AEC78 LDR X0, [X23]
	0x022AEC7C LDR X8, [X8 + 0x698]
	0x022AEC80 LDR W9, [X0 + 0xE0]
	0x022AEC84 LDR X22, [X8]
	0x022AEC88 CBNZ W9, 0x22AEC90
	0x022AEC8C BL 0x1C16DFC
	0x022AEC90 MOV X0, X22
	0x022AEC94 MOV X1, X31
	0x022AEC98 BL 0x338C698
	0x022AEC9C MOV X1, X0
	0x022AECA0 MOV X0, X21
	0x022AECA4 MOV X2, X31
	0x022AECA8 BL 0x3395194
	0x022AECAC TBZ X0, 0x0, 0x22AF034
	0x022AECB0 MOV X0, X20
	0x022AECB4 MOV X1, X31
	0x022AECB8 BL 0x3BEED78
	0x022AECBC ADRP X8, 0x1E6E000
	0x022AECC0 LDR X8, [X8 + 0xA08]
	0x022AECC4 MOV W23, W0
	0x022AECC8 MOV W1, W23
	0x022AECCC LDR X8, [X8]
	0x022AECD0 MOV X0, X8
	0x022AECD4 BL 0x1C16D6C
	0x022AECD8 CMP W23, 0x1
	0x022AECDC MOV X21, X0
	0x022AECE0 B.LT 0x22AED6C
	0x022AECE4 ADRP X27, 0x1E6E000
	0x022AECE8 LDR X27, [X27 + 0xA10]
	0x022AECEC MOV X22, X31
	0x022AECF0 MOV W25, W23
	0x022AECF4 ADD X26, X21, 0x20
	0x022AECF8 MOV X0, X20
	0x022AECFC MOV W1, W22
	0x022AED00 MOV X2, X31
	0x022AED04 BL 0x3BEADA0
	0x022AED08 LDR X8, [X27]
	0x022AED0C MOV X23, X0
	0x022AED10 MOV X0, X8
	0x022AED14 BL 0x1C16F10
	0x022AED18 MOV X1, X23
	0x022AED1C MOV X2, X31

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X8, [X3+56]
	009 Move X19, X3
	010 Move X21, X2
	011 Move X22, X1
	012 Move X20, X0
	013 Compare X8, 0
	014 JumpIfNotEqual {32}
	015 Move X0, 0x1E6F000
	016 Move X0, [X0+2520]
	017 Call 0x1C17CF4
	018 Move X0, 0x1E6F000
	019 Move X0, [X0+1864]
	020 Call 0x1C17CF4
	021 Move X0, 0x1E6E000
	022 Move X0, [X0+192]
	023 Call 0x1C17CF4
	024 Move X0, 0x1E46000
	025 Move X0, [X0+1728]
	026 Call 0x1C17CF4
	027 Move X8, [X19+56]
	028 Compare X8, 0
	029 JumpIfNotEqual {32}
	030 Move X0, X19
	031 Call 0x1C5D6E0
	032 Move [X31+32], X31
	033 Move [X31+40], X31
	034 Move [X31+48], X31
	035 Compare X22, 0
	036 JumpIfEqual {165}
	037 Move X8, 0x1E6E000
	038 Move X8, [X8+192]
	039 Move X0, [X8]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X8, [X19+56]
	045 Move X0, X22
	046 Move X1, [X8+8]
	047 Call 0x2299468, X0
	048 Move W8, [X22+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X8, [X19+56]
	051 Move X0, X22
	052 Move X1, [X8+24]
	053 Add X8, X31, 8
	054 Call List`1<Object>.GetEnumerator, X0
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 Move X8, [X31+24]
	057 Move X23, 0x1E6F000
	058 Move [X31+2], V0
	059 Move [X31+48], X8
	060 Move X23, [X23+1864]
	061 Move X8, [X19+56]
	062 Move X1, [X8+88]
	063 Add X0, X31, 32
	064 Call Enumerator<Object>.MoveNext, X0
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {149}
	069 Move X22, [X31+48]
	070 Compare X22, 0
	071 JumpIfEqual {164}
	072 Move X8, [X22]
	073 Move X1, [X23]
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 Compare X9, 0
	076 JumpIfEqual {83}
	077 Move X10, [X8+176]
	078 Add X10, X10, 8
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Subtract X9, X9, 1
	082 Add X10, X10, 16
	083 Move X0, X22
	084 Move W2, W31
	085 Call 0x1C5D788
	086 NotImplemented "Instruction LDRSW not yet implemented."
	087 Add X8, X8, X9
	088 Add X0, X8, 312
	089 Move X8, [X0]
	090 Move X1, [X0+8]
	091 Move X0, X22
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Move W2, 1
	094 Move X1, X21
	095 Move X3, X31
	096 Call String.Compare, X0, X1, X2
	097 Compare W0, 0
	098 JumpIfEqual {102}
	099 Move X22, X31
	100 Compare X22, 0
	101 JumpIfEqual {61}
	102 Move X8, [X22]
	103 Move X1, [X23]
	104 NotImplemented "Instruction LDRH not yet implemented."
	105 Compare X9, 0
	106 JumpIfEqual {113}
	107 Move X10, [X8+176]
	108 Add X10, X10, 8
	109 NotImplemented "Instruction LDUR not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Subtract X9, X9, 1
	112 Add X10, X10, 16
	113 Move W2, 1
	114 Move X0, X22
	115 Call 0x1C5D788
	116 Move W9, [X10]
	117 Add W9, W9, 1
	118 Add X8, X8, W9
	119 Add X0, X8, 312
	120 Move X8, [X0]
	121 Move X1, [X0+8]
	122 Move X0, X22
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move X22, X0
	125 Compare X22, 0
	126 JumpIfEqual {61}
	127 Move X8, 0x1E46000
	128 Move X8, [X8+1728]
	129 Move X20, [X20+24]
	130 Move X0, [X8]
	131 Move X8, [X19+56]
	132 Move W9, [X0+224]
	133 Move X21, [X8+80]
	134 Compare W9, 0
	135 JumpIfNotEqual {137}
	136 Call 0x1C17DFC
	137 Move X0, X21
	138 Move X1, X31
	139 Call Type.GetTypeFromHandle, X0
	140 Move X1, X0
	141 Compare X20, 0
	142 JumpIfEqual {182}
	143 Move X8, 0x1E6F000
	144 Move X8, [X8+2520]
	145 Move X3, [X8]
	146 Move X0, X20
	147 Move X2, X22
	148 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	149 Move X21, X31
	150 Move X8, [X19+56]
	151 Add X0, X31, 32
	152 Move X1, [X8+96]
	153 Call Enumerator<Object>.Dispose, X0
	154 Compare X21, 0
	155 JumpIfNotEqual {180}
	156 Move X20, [X31+96]
	157 Move X19, [X31+104]
	158 Move X22, [X31+80]
	159 Move X21, [X31+88]
	160 Move X30, [X31+64]
	161 Move X23, [X31+72]
	162 Add X31, X31, 112
	163 Return 
	164 Call 0x1C17F20
	165 Move X0, 0x1E4B000
	166 Move X0, [X0+1320]
	167 Call 0x1C17D08
	168 Call 0x1C17F10
	169 Move X20, X0
	170 Move X0, 0x1E6F000
	171 Move X0, [X0+2528]
	172 Call 0x1C17D08
	173 Move X1, X0
	174 Move X0, X20
	175 Move X2, X31
	176 Call ArgumentNullException..ctor, X0, X1
	177 Move X0, X20
	178 Move X1, X19
	179 Call 0x1C17DEC
	180 Move X0, X21
	181 Call 0x1C17F18
	182 Call 0x1C17F20
	183 Move X20, X0
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move X0, X20
	186 Call 0x3EB2AD0
	187 Move X21, [X0]
	188 Call 0x3EB2AE0
	189 Move X21, X31
	190 Move X20, X0
	191 Move X8, [X19+56]
	192 Move X1, [X8+96]
	193 Add X0, X31, 32
	194 Call Enumerator<Object>.Dispose, X0
	195 Compare X21, 0
	196 JumpIfNotEqual {199}
	197 Move X0, X20
	198 Call 0x1D2D690
	199 Move X0, X21
	200 Call 0x1C17F18
	201 Call 0x1991590

Method: System.Void CreateIntegratedSubsystem(System.Collections.Generic.List`1<TDescriptor> descriptors, System.String id)

Disassembly:
	0x022AE97C LDP X20, X19, [X31 + 0x40]
	0x022AE980 LDP X22, X21, [X31 + 0x30]
	0x022AE984 LDP X24, X23, [X31 + 0x20]
	0x022AE988 LDR X25, [X31 + 0x10]
	0x022AE98C LDP X29, X30, [X31], #0x50
	0x022AE990 RET
	0x022AE994 BL 0x3EB1B20
	0x022AE998 STP X30, X27, [X31 - 0x50]!
	0x022AE99C STP X26, X25, [X31 + 0x10]
	0x022AE9A0 STP X24, X23, [X31 + 0x20]
	0x022AE9A4 STP X22, X21, [X31 + 0x30]
	0x022AE9A8 STP X20, X19, [X31 + 0x40]
	0x022AE9AC LDR X8, [X1 + 0x38]
	0x022AE9B0 MOV X19, X1
	0x022AE9B4 MOV X20, X0
	0x022AE9B8 CBNZ X8, 0x22AEAA8
	0x022AE9BC ADRP X0, 0x1E6E000
	0x022AE9C0 LDR X0, [X0 + 0xA08]
	0x022AE9C4 BL 0x1C16CF4
	0x022AE9C8 ADRP X0, 0x1E6E000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X19, X2
	008 Move X20, X1
	009 Move X21, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {16}
	012 Move X0, X3
	013 Move X22, X3
	014 Call 0x1C5D6E0
	015 Move X8, [X22+56]
	016 Move X3, [X8+8]
	017 Move X0, X21
	018 Move X1, X20
	019 Move X2, X19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X22, [X31+16]
	023 Move X21, [X31+24]
	024 Move X30, [X31+48]
	025 Call 0x22AEA1C, X0, X1, X2
	026 Return 

Method: System.Void CreateStandaloneSubsystem(System.Collections.Generic.List`1<TDescriptor> descriptors, System.String id)

Disassembly:
	0x022AE9CC LDR X0, [X0 + 0x698]
	0x022AE9D0 BL 0x1C16CF4
	0x022AE9D4 ADRP X0, 0x1E6E000
	0x022AE9D8 LDR X0, [X0 + 0xA10]
	0x022AE9DC BL 0x1C16CF4
	0x022AE9E0 ADRP X0, 0x1E6E000
	0x022AE9E4 LDR X0, [X0 + 0x6A0]
	0x022AE9E8 BL 0x1C16CF4
	0x022AE9EC ADRP X0, 0x1E6E000
	0x022AE9F0 LDR X0, [X0 + 0x248]
	0x022AE9F4 BL 0x1C16CF4
	0x022AE9F8 ADRP X0, 0x1E6C000
	0x022AE9FC LDR X0, [X0 + 0xD68]
	0x022AEA00 BL 0x1C16CF4
	0x022AEA04 ADRP X0, 0x1E6C000
	0x022AEA08 LDR X0, [X0 + 0xD70]
	0x022AEA0C BL 0x1C16CF4
	0x022AEA10 ADRP X0, 0x1E45000
	0x022AEA14 LDR X0, [X0 + 0xA28]
	0x022AEA18 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X19, X2
	008 Move X20, X1
	009 Move X21, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {16}
	012 Move X0, X3
	013 Move X22, X3
	014 Call 0x1C5D6E0
	015 Move X8, [X22+56]
	016 Move X3, [X8+8]
	017 Move X0, X21
	018 Move X1, X20
	019 Move X2, X19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X22, [X31+16]
	023 Move X21, [X31+24]
	024 Move X30, [X31+48]

Method: System.Boolean Deinitialize()

Disassembly:
	0x03BDA8D0 ADRP X8, 0x519000
	0x03BDA8D4 LDR X8, [X8 + 0xA28]
	0x03BDA8D8 ADRP X19, 0x583000
	0x03BDA8DC LDR X0, [X8]
	0x03BDA8E0 LDR W8, [X0 + 0xE0]
	0x03BDA8E4 LDR X19, [X19 + 0xEA0]
	0x03BDA8E8 CBNZ W8, 0x3BDA8F0
	0x03BDA8EC BL 0x1C16DFC
	0x03BDA8F0 LDR X0, [X19]
	0x03BDA8F4 MOV X1, X31
	0x03BDA8F8 BL 0x3C06A04
	0x03BDA8FC MOVN W0, 0x0
	0x03BDA900 LDP X30, X19, [X31], #0x10
	0x03BDA904 RET
	0x03BDA908 B 0x3BDE350
	0x03BDA90C STR X30, [X31 - 0x20]!
	0x03BDA910 STP X20, X19, [X31 + 0x10]
	0x03BDA914 ADRP X20, 0x808000
	0x03BDA918 LDRB W8, [X20 + 0xED0]
	0x03BDA91C MOV W19, W0
	0x03BDA920 TBNZ X8, 0x0, 0x3BDA944
	0x03BDA924 ADRP X0, 0x519000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x809000
	005 Move W8, [X20+3769]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x584000
	012 Move X0, [X0+3528]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3769], W8
	016 Move X0, [X19+24]
	017 Compare X0, 0
	018 JumpIfEqual {28}
	019 Move X8, 0x584000
	020 Move X8, [X8+3528]
	021 Move X1, [X8]
	022 Call Dictionary`2<Object, Object>.Clear, X0
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move W0, 1
	026 Move X30, [X31+32]
	027 Return X0
	028 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03BDA928 LDR X0, [X0 + 0xA28]
	0x03BDA92C BL 0x1C16CF4
	0x03BDA930 ADRP X0, 0x583000
	0x03BDA934 LDR X0, [X0 + 0xEA8]
	0x03BDA938 BL 0x1C16CF4
	0x03BDA93C MOVZ W8, 0x1
	0x03BDA940 STRB W8, [X20 + 0xED0]
	0x03BDA944 BL 0x3BDE264
	0x03BDA948 TBNZ X0, 0x0, 0x3BDA978
	0x03BDA94C ADRP X8, 0x519000
	0x03BDA950 LDR X8, [X8 + 0xA28]
	0x03BDA954 ADRP X20, 0x583000
	0x03BDA958 LDR X0, [X8]
	0x03BDA95C LDR W8, [X0 + 0xE0]
	0x03BDA960 LDR X20, [X20 + 0xEA8]
	0x03BDA964 CBNZ W8, 0x3BDA96C
	0x03BDA968 BL 0x1C16DFC
	0x03BDA96C LDR X0, [X20]
	0x03BDA970 MOV X1, X31
	0x03BDA974 BL 0x3C06A04
	0x03BDA978 MOV W0, W19
	0x03BDA97C LDP X20, X19, [X31 + 0x10]
	0x03BDA980 LDR X30, [X31], #0x20
	0x03BDA984 B 0x3BDE2D4
	0x03BDA988 B 0x3BDE2D4
	0x03BDA98C B 0x3BDE434
	0x03BDA990 B 0x3BDE434
	0x03BDA994 STR X30, [X31 - 0x10]!
	0x03BDA998 BL 0x3BDE434
	0x03BDA99C TBZ X0, 0x0, 0x3BDA9A8
	0x03BDA9A0 LDR X30, [X31], #0x10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x809000
	007 Move X22, 0x584000
	008 Move X20, 0x584000
	009 Move W8, [X21+3770]
	010 Move X22, [X22+3536]
	011 Move X20, [X20+3544]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x584000
	018 Move X0, [X0+3544]
	019 Call 0x1C17CF4
	020 Move X0, 0x584000
	021 Move X0, [X0+3536]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3770], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call Dictionary`2<Object, Object>..ctor, X0
	030 Move [X19+24], X20
	031 Move X0, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+48]
	038 Call ScriptableObject..ctor, X0
	039 Return 

