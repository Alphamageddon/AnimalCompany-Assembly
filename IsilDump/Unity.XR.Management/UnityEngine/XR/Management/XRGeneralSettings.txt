Type: UnityEngine.XR.Management.XRGeneralSettings

Method: UnityEngine.XR.Management.XRManagerSettings get_Manager()

Disassembly:
	0x03BD99D8 LDP X20, X19, [X31 + 0x10]
	0x03BD99DC LDR X8, [X8 + 0xB8]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_Manager(UnityEngine.XR.Management.XRManagerSettings value)

Disassembly:
	0x03BD99E0 LDRB W0, [X8]
	0x03BD99E4 LDR X30, [X31], #0x20

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: UnityEngine.XR.Management.XRGeneralSettings get_Instance()

Disassembly:
	0x03BD99E8 RET
	0x03BD99EC LDRB W0, [X0 + 0x1A]
	0x03BD99F0 RET
	0x03BD99F4 AND W8, W1, 0x1
	0x03BD99F8 STRB W8, [X0 + 0x1A]
	0x03BD99FC RET
	0x03BD9A00 LDRB W0, [X0 + 0x1B]
	0x03BD9A04 RET
	0x03BD9A08 AND W8, W1, 0x1
	0x03BD9A0C STRB W8, [X0 + 0x1B]
	0x03BD9A10 RET
	0x03BD9A14 LDR X0, [X0 + 0x20]
	0x03BD9A18 RET
	0x03BD9A1C LDR X0, [X0 + 0x20]
	0x03BD9A20 RET
	0x03BD9A24 LDRB W0, [X0 + 0x18]
	0x03BD9A28 RET
	0x03BD9A2C LDR X0, [X0 + 0x30]
	0x03BD9A30 RET
	0x03BD9A34 STR X1, [X0 + 0x30]
	0x03BD9A38 RET
	0x03BD9A3C SUB X31, X31, 0x40

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x80A000
	005 Move X19, 0x585000
	006 Move W8, [X20+3758]
	007 Move X19, [X19+3408]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x585000
	013 Move X0, [X0+3408]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3758], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+8]
	027 Move X30, [X31+32]
	028 Return X0

Method: UnityEngine.XR.Management.XRManagerSettings get_AssignedSettings()

Disassembly:
	0x03BD9A40 STR X30, [X31 + 0x20]
	0x03BD9A44 STP X20, X19, [X31 + 0x30]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Boolean get_InitManagerOnStart()

Disassembly:
	0x03BD9A48 ADRP X20, 0x809000
	0x03BD9A4C LDRB W8, [X20 + 0xEC2]

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void Awake()

Disassembly:
	0x03BD9A50 MOV X19, X1
	0x03BD9A54 TBNZ X8, 0x0, 0x3BD9A9C
	0x03BD9A58 ADRP X0, 0x51A000
	0x03BD9A5C LDR X0, [X0 + 0xA28]
	0x03BD9A60 BL 0x1C16CF4
	0x03BD9A64 ADRP X0, 0x584000
	0x03BD9A68 LDR X0, [X0 + 0xDE8]
	0x03BD9A6C BL 0x1C16CF4
	0x03BD9A70 ADRP X0, 0x584000
	0x03BD9A74 LDR X0, [X0 + 0xDF0]
	0x03BD9A78 BL 0x1C16CF4
	0x03BD9A7C ADRP X0, 0x584000
	0x03BD9A80 LDR X0, [X0 + 0xDF8]
	0x03BD9A84 BL 0x1C16CF4
	0x03BD9A88 ADRP X0, 0x584000
	0x03BD9A8C LDR X0, [X0 + 0xE00]
	0x03BD9A90 BL 0x1C16CF4
	0x03BD9A94 MOVZ W8, 0x1
	0x03BD9A98 STRB W8, [X20 + 0xEC2]
	0x03BD9A9C MOV X0, X31
	0x03BD9AA0 BL 0x3C3BACC
	0x03BD9AA4 CBZ X19, 0x3BD9B84
	0x03BD9AA8 LDR X8, [X19]
	0x03BD9AAC MOV W20, W0
	0x03BD9AB0 MOV X0, X19
	0x03BD9AB4 MOV W1, W31
	0x03BD9AB8 LDP X9, X2, [X8 + 0x1C8]
	0x03BD9ABC BLR X9
	0x03BD9AC0 CBZ X0, 0x3BD9B84
	0x03BD9AC4 LDR W8, [X0 + 0x18]
	0x03BD9AC8 CMP W8, 0x1
	0x03BD9ACC B.LT 0x3BD9AE8
	0x03BD9AD0 ADRP X8, 0x584000
	0x03BD9AD4 LDR X8, [X8 + 0xDF0]
	0x03BD9AD8 MOV W1, W20
	0x03BD9ADC LDR X2, [X8]
	0x03BD9AE0 BL 0x2FDF4F0
	0x03BD9AE4 TBZ X0, 0x0, 0x3BD9AF0
	0x03BD9AE8 MOVZ W0, 0x1
	0x03BD9AEC B 0x3BD9B74
	0x03BD9AF0 MOV X0, X19
	0x03BD9AF4 MOV X1, X31
	0x03BD9AF8 BL 0x3C389D4
	0x03BD9AFC ADRP X8, 0x584000
	0x03BD9B00 LDR X8, [X8 + 0xDE8]
	0x03BD9B04 MOV X19, X0
	0x03BD9B08 MOVN X9, 0x0
	0x03BD9B0C ADD X0, X31, 0x8
	0x03BD9B10 LDR X8, [X8]
	0x03BD9B14 MOV X1, X31
	0x03BD9B18 STR W20, [X31 + 0x18]
	0x03BD9B1C STP X8, X9, [X31 + 0x8]
	0x03BD9B20 BL 0x33B162C
	0x03BD9B24 ADRP X8, 0x584000
	0x03BD9B28 LDR X8, [X8 + 0xE00]
	0x03BD9B2C MOV X2, X0
	0x03BD9B30 MOV X1, X19
	0x03BD9B34 MOV X3, X31
	0x03BD9B38 LDR X8, [X8]
	0x03BD9B3C MOV X0, X8
	0x03BD9B40 BL 0x3227BD4
	0x03BD9B44 ADRP X8, 0x51A000
	0x03BD9B48 LDR X8, [X8 + 0xA28]
	0x03BD9B4C MOV X19, X0
	0x03BD9B50 LDR X8, [X8]
	0x03BD9B54 LDR W9, [X8 + 0xE0]
	0x03BD9B58 CBNZ W9, 0x3BD9B64
	0x03BD9B5C MOV X0, X8
	0x03BD9B60 BL 0x1C16DFC
	0x03BD9B64 MOV X0, X19
	0x03BD9B68 MOV X1, X31
	0x03BD9B6C BL 0x3C06A04
	0x03BD9B70 MOV W0, W31
	0x03BD9B74 LDP X20, X19, [X31 + 0x30]
	0x03BD9B78 LDR X30, [X31 + 0x20]
	0x03BD9B7C ADD X31, X31, 0x40
	0x03BD9B80 RET
	0x03BD9B84 BL 0x1C16F20
	0x03BD9B88 STP X30, X21, [X31 - 0x20]!
	0x03BD9B8C STP X20, X19, [X31 + 0x10]
	0x03BD9B90 ADRP X20, 0x809000
	0x03BD9B94 ADRP X21, 0x584000
	0x03BD9B98 LDRB W8, [X20 + 0xEBD]
	0x03BD9B9C LDR X21, [X21 + 0xE08]
	0x03BD9BA0 MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x80A000
	008 Move X20, 0x51B000
	009 Move W8, [X21+3759]
	010 Move X20, [X20+2600]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0x51C000
	017 Move X0, [X0+3696]
	018 Call 0x1C17CF4
	019 Move X0, 0x51B000
	020 Move X0, [X0+2416]
	021 Call 0x1C17CF4
	022 Move X0, 0x51B000
	023 Move X0, [X0+2600]
	024 Call 0x1C17CF4
	025 Move X0, 0x51B000
	026 Move X0, [X0+1432]
	027 Call 0x1C17CF4
	028 Move X0, 0x585000
	029 Move X0, [X0+3416]
	030 Call 0x1C17CF4
	031 Move X0, 0x585000
	032 Move X0, [X0+3408]
	033 Call 0x1C17CF4
	034 Move X0, 0x585000
	035 Move X0, [X0+3424]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+3759], W8
	039 Move X0, [X20]
	040 Move X21, 0x585000
	041 Move X20, 0x585000
	042 Move W8, [X0+224]
	043 Move X21, [X21+3424]
	044 Move X20, [X20+3408]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, [X21]
	049 Move X22, 0x51C000
	050 Move X23, 0x585000
	051 Move X21, 0x51B000
	052 Move X22, [X22+3696]
	053 Move X23, [X23+3416]
	054 Move X21, [X21+2416]
	055 Move X1, X31
	056 Call Debug.Log, X0
	057 Move X0, [X20]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {63}
	061 Call 0x1C17DFC
	062 Move X0, [X20]
	063 Move X8, [X0+184]
	064 Move [X8+8], X19
	065 Move X0, [X22]
	066 Move X22, 0x51B000
	067 Move X22, [X22+1432]
	068 Call 0x1C17F10
	069 Move X2, [X23]
	070 Move X1, X31
	071 Move X3, X31
	072 Move X19, X0
	073 Call Action..ctor, X0, X1, X2
	074 Move X0, [X21]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X0, X19
	080 Move X1, X31
	081 Call Application.add_quitting, X0
	082 Move X8, [X20]
	083 Move X0, [X22]
	084 Move X8, [X8+184]
	085 Move W9, [X0+224]
	086 Move X19, [X8+8]
	087 Compare W9, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X0, X19
	091 Move X20, [X31+32]
	092 Move X19, [X31+40]
	093 Move X22, [X31+16]
	094 Move X21, [X31+24]
	095 Move X1, X31
	096 Move X30, [X31+48]
	097 Move X23, [X31+56]
	098 Call Object.DontDestroyOnLoad, X0
	099 Return 

Method: System.Void Quit()

Disassembly:
	0x03BD9BA4 TBNZ X8, 0x0, 0x3BD9BBC
	0x03BD9BA8 ADRP X0, 0x584000
	0x03BD9BAC LDR X0, [X0 + 0xE08]
	0x03BD9BB0 BL 0x1C16CF4
	0x03BD9BB4 MOVZ W8, 0x1
	0x03BD9BB8 STRB W8, [X20 + 0xEBD]
	0x03BD9BBC LDR X0, [X21]
	0x03BD9BC0 BL 0x1C16F10
	0x03BD9BC4 MOV X1, X31
	0x03BD9BC8 MOV X20, X0
	0x03BD9BCC BL 0x33BDD8C
	0x03BD9BD0 STR W31, [X20 + 0x10]
	0x03BD9BD4 STR X19, [X20 + 0x20]
	0x03BD9BD8 MOV X0, X20
	0x03BD9BDC LDP X20, X19, [X31 + 0x10]
	0x03BD9BE0 LDP X30, X21, [X31], #0x20
	0x03BD9BE4 RET
	0x03BD9BE8 STR X30, [X31 - 0x20]!
	0x03BD9BEC STP X20, X19, [X31 + 0x10]
	0x03BD9BF0 MOV W19, W1
	0x03BD9BF4 MOV X1, X31
	0x03BD9BF8 MOV X20, X0
	0x03BD9BFC BL 0x33BDD8C
	0x03BD9C00 STR W19, [X20 + 0x10]
	0x03BD9C04 LDP X20, X19, [X31 + 0x10]
	0x03BD9C08 LDR X30, [X31], #0x20
	0x03BD9C0C RET
	0x03BD9C10 STP X30, X23, [X31 - 0x30]!
	0x03BD9C14 STP X22, X21, [X31 + 0x10]
	0x03BD9C18 STP X20, X19, [X31 + 0x20]
	0x03BD9C1C ADRP X22, 0x809000
	0x03BD9C20 ADRP X23, 0x51A000
	0x03BD9C24 LDRB W8, [X22 + 0xEBE]
	0x03BD9C28 LDR X23, [X23 + 0x598]
	0x03BD9C2C MOV W20, W2
	0x03BD9C30 MOV X19, X1
	0x03BD9C34 MOV X21, X0
	0x03BD9C38 TBNZ X8, 0x0, 0x3BD9C8C
	0x03BD9C3C ADRP X0, 0x584000
	0x03BD9C40 LDR X0, [X0 + 0xE10]
	0x03BD9C44 BL 0x1C16CF4
	0x03BD9C48 ADRP X0, 0x584000
	0x03BD9C4C LDR X0, [X0 + 0xE18]
	0x03BD9C50 BL 0x1C16CF4
	0x03BD9C54 ADRP X0, 0x584000
	0x03BD9C58 LDR X0, [X0 + 0xE20]
	0x03BD9C5C BL 0x1C16CF4
	0x03BD9C60 ADRP X0, 0x584000
	0x03BD9C64 LDR X0, [X0 + 0xE28]
	0x03BD9C68 BL 0x1C16CF4
	0x03BD9C6C ADRP X0, 0x584000
	0x03BD9C70 LDR X0, [X0 + 0xE30]
	0x03BD9C74 BL 0x1C16CF4
	0x03BD9C78 ADRP X0, 0x51A000
	0x03BD9C7C LDR X0, [X0 + 0x598]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x80A000
	005 Move X19, 0x585000
	006 Move W8, [X20+3760]
	007 Move X19, [X19+3408]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x51B000
	013 Move X0, [X0+1432]
	014 Call 0x1C17CF4
	015 Move X0, 0x585000
	016 Move X0, [X0+3408]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3760], W8
	020 Move X0, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X20, 0x80A000
	026 Move W8, [X20+3785]
	027 Compare W8, 0
	028 JumpIfNotEqual {34}
	029 Move X0, 0x585000
	030 Move X0, [X0+3408]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+3785], W8
	034 Move X0, [X19]
	035 Move X20, 0x51B000
	036 Move W8, [X0+224]
	037 Move X20, [X20+1432]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X19]
	042 Move X8, [X20]
	043 Move X9, [X0+184]
	044 Move W10, [X8+224]
	045 Move X19, [X9+8]
	046 Compare W10, 0
	047 JumpIfNotEqual {50}
	048 Move X0, X8
	049 Call 0x1C17DFC
	050 Move X0, X19
	051 Move X1, X31
	052 Move X2, X31
	053 Call Object.op_Equality, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {62}
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X30, [X31+32]
	061 Return 
	062 Compare X19, 0
	063 JumpIfEqual {68}
	064 Move X0, X19
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X30, [X31+32]
	068 Call 0x1C17F20

Method: System.Void Start()

Disassembly:
	0x03BD9D30 LDP X30, X23, [X31], #0x30

ISIL:
No ISIL was generated
Method: System.Void OnDestroy()

Disassembly:
	0x03BD9DE4 ADRP X8, 0x584000

ISIL:
	001 Call XRGeneralSettings.DeInitXRSDK, X0
	002 Return 

Method: System.Void AttemptInitializeXRSDKOnLoad()

Disassembly:
	0x03BD9DE8 LDR X8, [X8 + 0xE20]
	0x03BD9DEC MOV X1, X19
	0x03BD9DF0 LDR X2, [X8]
	0x03BD9DF4 BL 0x301C318
	0x03BD9DF8 TBZ X0, 0x0, 0x3BD9E20
	0x03BD9DFC LDR X0, [X20 + 0x20]
	0x03BD9E00 CBZ X0, 0x3BD9E30
	0x03BD9E04 ADRP X8, 0x584000
	0x03BD9E08 LDR X8, [X8 + 0xE38]
	0x03BD9E0C MOV X1, X19
	0x03BD9E10 LDP X20, X19, [X31 + 0x10]
	0x03BD9E14 LDR X2, [X8]
	0x03BD9E18 LDP X30, X21, [X31], #0x20
	0x03BD9E1C B 0x301D7A8
	0x03BD9E20 LDP X20, X19, [X31 + 0x10]
	0x03BD9E24 MOVZ W0, 0x1
	0x03BD9E28 LDP X30, X21, [X31], #0x20
	0x03BD9E2C RET
	0x03BD9E30 BL 0x1C16F20
	0x03BD9E34 SUB X31, X31, 0x50
	0x03BD9E38 STP X30, X23, [X31 + 0x20]
	0x03BD9E3C STP X22, X21, [X31 + 0x30]
	0x03BD9E40 STP X20, X19, [X31 + 0x40]
	0x03BD9E44 ADRP X22, 0x809000
	0x03BD9E48 ADRP X23, 0x584000
	0x03BD9E4C ADRP X21, 0x584000
	0x03BD9E50 LDRB W8, [X22 + 0xEC0]
	0x03BD9E54 LDR X23, [X23 + 0xE40]
	0x03BD9E58 LDR X21, [X21 + 0xE48]
	0x03BD9E5C MOV X20, X1
	0x03BD9E60 MOV X19, X0
	0x03BD9E64 TBNZ X8, 0x0, 0x3BD9EC4
	0x03BD9E68 ADRP X0, 0x584000
	0x03BD9E6C LDR X0, [X0 + 0xD70]
	0x03BD9E70 BL 0x1C16CF4
	0x03BD9E74 ADRP X0, 0x584000
	0x03BD9E78 LDR X0, [X0 + 0xD78]
	0x03BD9E7C BL 0x1C16CF4
	0x03BD9E80 ADRP X0, 0x584000
	0x03BD9E84 LDR X0, [X0 + 0xD80]
	0x03BD9E88 BL 0x1C16CF4
	0x03BD9E8C ADRP X0, 0x584000
	0x03BD9E90 LDR X0, [X0 + 0xE50]
	0x03BD9E94 BL 0x1C16CF4
	0x03BD9E98 ADRP X0, 0x584000
	0x03BD9E9C LDR X0, [X0 + 0xD88]
	0x03BD9EA0 BL 0x1C16CF4
	0x03BD9EA4 ADRP X0, 0x584000
	0x03BD9EA8 LDR X0, [X0 + 0xE48]
	0x03BD9EAC BL 0x1C16CF4
	0x03BD9EB0 ADRP X0, 0x584000
	0x03BD9EB4 LDR X0, [X0 + 0xE40]
	0x03BD9EB8 BL 0x1C16CF4
	0x03BD9EBC MOVZ W8, 0x1
	0x03BD9EC0 STRB W8, [X22 + 0xEC0]
	0x03BD9EC4 STP X31, X31, [X31 + 0x8]
	0x03BD9EC8 STR X31, [X31 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x80A000
	005 Move X19, 0x585000
	006 Move W8, [X20+3761]
	007 Move X19, [X19+3408]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x51B000
	013 Move X0, [X0+1432]
	014 Call 0x1C17CF4
	015 Move X0, 0x585000
	016 Move X0, [X0+3408]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3761], W8
	020 Move X0, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X20, 0x80A000
	026 Move W8, [X20+3785]
	027 Compare W8, 0
	028 JumpIfNotEqual {34}
	029 Move X0, 0x585000
	030 Move X0, [X0+3408]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+3785], W8
	034 Move X0, [X19]
	035 Move X20, 0x51B000
	036 Move W8, [X0+224]
	037 Move X20, [X20+1432]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X19]
	042 Move X8, [X20]
	043 Move X9, [X0+184]
	044 Move W10, [X8+224]
	045 Move X19, [X9+8]
	046 Compare W10, 0
	047 JumpIfNotEqual {50}
	048 Move X0, X8
	049 Call 0x1C17DFC
	050 Move X0, X19
	051 Move X1, X31
	052 Move X2, X31
	053 Call Object.op_Equality, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {67}
	058 Compare X19, 0
	059 JumpIfEqual {71}
	060 Move W8, [X19+32]
	061 Compare W8, 0
	062 JumpIfEqual {67}
	063 Move X0, X19
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X30, [X31+32]
	067 Move X20, [X31+16]
	068 Move X19, [X31+24]
	069 Move X30, [X31+32]
	070 Return 
	071 Call 0x1C17F20

Method: System.Void AttemptStartXRSDKOnBeforeSplashScreen()

Disassembly:
	0x03BDA144 MOV X19, X0
	0x03BDA148 CMP W1, 0x1
	0x03BDA14C B.NE 0x3BDA178
	0x03BDA150 MOV X0, X19
	0x03BDA154 BL 0x3EB1AD0
	0x03BDA158 LDR X20, [X0]
	0x03BDA15C BL 0x3EB1AE0
	0x03BDA160 LDR X1, [X21]
	0x03BDA164 ADD X0, X31, 0x8
	0x03BDA168 BL 0x2BC434C
	0x03BDA16C CBZ X20, 0x3BDA110
	0x03BDA170 MOV X0, X20
	0x03BDA174 BL 0x1C16F18
	0x03BDA178 MOV X20, X31
	0x03BDA17C B 0x3BDA184
	0x03BDA180 MOV X19, X0
	0x03BDA184 LDR X1, [X21]
	0x03BDA188 ADD X0, X31, 0x8
	0x03BDA18C BL 0x2BC434C
	0x03BDA190 CBNZ X20, 0x3BDA19C
	0x03BDA194 MOV X0, X19
	0x03BDA198 BL 0x1D2C690
	0x03BDA19C MOV X0, X20
	0x03BDA1A0 BL 0x1C16F18
	0x03BDA1A4 BL 0x1990590
	0x03BDA1A8 LDRB W8, [X0 + 0x1A]
	0x03BDA1AC CBZ W8, 0x3BDA1BC
	0x03BDA1B0 LDRB W8, [X0 + 0x1B]
	0x03BDA1B4 CBZ W8, 0x3BDA1BC
	0x03BDA1B8 B 0x3BD947C
	0x03BDA1BC RET
	0x03BDA1C0 LDRB W8, [X0 + 0x1A]
	0x03BDA1C4 CBZ W8, 0x3BDA1D4
	0x03BDA1C8 LDRB W8, [X0 + 0x1B]
	0x03BDA1CC CBZ W8, 0x3BDA1D4
	0x03BDA1D0 B 0x3BD9604
	0x03BDA1D4 RET
	0x03BDA1D8 LDRB W8, [X0 + 0x1A]
	0x03BDA1DC CBZ W8, 0x3BDA1E4
	0x03BDA1E0 B 0x3BD96E0
	0x03BDA1E4 RET
	0x03BDA1E8 LDR X0, [X0 + 0x20]
	0x03BDA1EC RET
	0x03BDA1F0 STR X1, [X0 + 0x20]
	0x03BDA1F4 RET
	0x03BDA1F8 LDR X0, [X0 + 0x28]
	0x03BDA1FC RET
	0x03BDA200 STR X30, [X31 - 0x40]!
	0x03BDA204 STP X24, X23, [X31 + 0x10]
	0x03BDA208 STP X22, X21, [X31 + 0x20]
	0x03BDA20C STP X20, X19, [X31 + 0x30]
	0x03BDA210 ADRP X23, 0x808000
	0x03BDA214 ADRP X24, 0x583000
	0x03BDA218 ADRP X20, 0x583000
	0x03BDA21C ADRP X22, 0x583000
	0x03BDA220 ADRP X21, 0x583000
	0x03BDA224 LDRB W8, [X23 + 0xEC6]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x809000
	005 Move X19, 0x584000
	006 Move W8, [X20+3762]
	007 Move X19, [X19+3408]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x51A000
	013 Move X0, [X0+1432]
	014 Call 0x1C17CF4
	015 Move X0, 0x584000
	016 Move X0, [X0+3408]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3762], W8
	020 Move X0, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X20, 0x809000
	026 Move W8, [X20+3785]
	027 Compare W8, 0
	028 JumpIfNotEqual {34}
	029 Move X0, 0x584000
	030 Move X0, [X0+3408]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+3785], W8
	034 Move X0, [X19]
	035 Move X20, 0x51A000
	036 Move W8, [X0+224]
	037 Move X20, [X20+1432]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X19]
	042 Move X8, [X20]
	043 Move X9, [X0+184]
	044 Move W10, [X8+224]
	045 Move X19, [X9+8]
	046 Compare W10, 0
	047 JumpIfNotEqual {50}
	048 Move X0, X8
	049 Call 0x1C17DFC
	050 Move X0, X19
	051 Move X1, X31
	052 Move X2, X31
	053 Call Object.op_Equality, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {69}
	058 Compare X19, 0
	059 JumpIfEqual {73}
	060 Move W8, [X19+32]
	061 Compare W8, 0
	062 JumpIfEqual {69}
	063 Move X0, X19
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X30, [X31+32]
	067 Call XRGeneralSettings.StartXRSDK, X0
	068 Return 
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Return 
	073 Call 0x1C17F20

Method: System.Void InitXRSDK()

Disassembly:
	0x03BD9ECC LDR X0, [X23]
	0x03BD9ED0 LDR X22, [X19 + 0x20]
	0x03BD9ED4 BL 0x1C16F10
	0x03BD9ED8 LDR X2, [X21]
	0x03BD9EDC MOV X1, X22
	0x03BD9EE0 MOV X21, X0
	0x03BD9EE4 BL 0x301B8E0
	0x03BD9EE8 LDR X8, [X19 + 0x20]
	0x03BD9EEC CBZ X8, 0x3BD9F9C
	0x03BD9EF0 LDP W2, W9, [X8 + 0x18]
	0x03BD9EF4 ADD W9, W9, 0x1
	0x03BD9EF8 CMP W2, 0x1
	0x03BD9EFC STP W31, W9, [X8 + 0x18]
	0x03BD9F00 B.LT 0x3BD9F14
	0x03BD9F04 LDR X0, [X8 + 0x10]
	0x03BD9F08 MOV W1, W31
	0x03BD9F0C MOV X3, X31
	0x03BD9F10 BL 0x339FA34
	0x03BD9F14 CBZ X20, 0x3BD9F9C
	0x03BD9F18 ADRP X8, 0x584000
	0x03BD9F1C LDR X8, [X8 + 0xD88]
	0x03BD9F20 ADRP X23, 0x584000
	0x03BD9F24 ADRP X22, 0x584000
	0x03BD9F28 MOV X0, X20
	0x03BD9F2C LDR X1, [X8]
	0x03BD9F30 LDR X23, [X23 + 0xD78]
	0x03BD9F34 LDR X22, [X22 + 0xD70]
	0x03BD9F38 ADD X8, X31, 0x8
	0x03BD9F3C BL 0x301CB58
	0x03BD9F40 LDR X1, [X23]
	0x03BD9F44 ADD X0, X31, 0x8
	0x03BD9F48 BL 0x2BC4350
	0x03BD9F4C TBZ X0, 0x0, 0x3BD9F70
	0x03BD9F50 LDR X1, [X31 + 0x18]
	0x03BD9F54 MOVN W2, 0x0
	0x03BD9F58 MOV X0, X19
	0x03BD9F5C BL 0x3BD9C10
	0x03BD9F60 TBNZ X0, 0x0, 0x3BD9F40
	0x03BD9F64 STR X21, [X19 + 0x20]
	0x03BD9F68 MOVZ W19, 0x4
	0x03BD9F6C B 0x3BD9F74
	0x03BD9F70 MOVZ W19, 0x5
	0x03BD9F74 LDR X1, [X22]
	0x03BD9F78 ADD X0, X31, 0x8
	0x03BD9F7C BL 0x2BC434C
	0x03BD9F80 CMP W19, 0x4
	0x03BD9F84 LDP X20, X19, [X31 + 0x40]
	0x03BD9F88 LDP X22, X21, [X31 + 0x30]
	0x03BD9F8C LDP X30, X23, [X31 + 0x20]
	0x03BD9F90 CSET W0, NE
	0x03BD9F94 ADD X31, X31, 0x50
	0x03BD9F98 RET
	0x03BD9F9C BL 0x1C16F20
	0x03BD9FA0 B 0x3BD9FA4
	0x03BD9FA4 MOV X20, X0
	0x03BD9FA8 CMP W1, 0x1
	0x03BD9FAC B.NE 0x3BD9FD8
	0x03BD9FB0 MOV X0, X20
	0x03BD9FB4 BL 0x3EB1AD0
	0x03BD9FB8 LDR X19, [X0]
	0x03BD9FBC BL 0x3EB1AE0
	0x03BD9FC0 LDR X1, [X22]
	0x03BD9FC4 ADD X0, X31, 0x8
	0x03BD9FC8 BL 0x2BC434C
	0x03BD9FCC CBZ X19, 0x3BD9F80
	0x03BD9FD0 MOV X0, X19
	0x03BD9FD4 BL 0x1C16F18
	0x03BD9FD8 MOV X19, X31
	0x03BD9FDC B 0x3BD9FE4
	0x03BD9FE0 MOV X20, X0
	0x03BD9FE4 LDR X1, [X22]
	0x03BD9FE8 ADD X0, X31, 0x8
	0x03BD9FEC BL 0x2BC434C
	0x03BD9FF0 CBNZ X19, 0x3BD9FFC
	0x03BD9FF4 MOV X0, X20
	0x03BD9FF8 BL 0x1D2C690
	0x03BD9FFC MOV X0, X19
	0x03BDA000 BL 0x1C16F18
	0x03BDA004 BL 0x1990590
	0x03BDA008 SUB X31, X31, 0x60
	0x03BDA00C STR X30, [X31 + 0x20]
	0x03BDA010 STP X24, X23, [X31 + 0x30]
	0x03BDA014 STP X22, X21, [X31 + 0x40]
	0x03BDA018 STP X20, X19, [X31 + 0x50]
	0x03BDA01C ADRP X20, 0x808000
	0x03BDA020 LDRB W8, [X20 + 0xEC1]
	0x03BDA024 MOV X19, X0
	0x03BDA028 TBNZ X8, 0x0, 0x3BDA07C
	0x03BDA02C ADRP X0, 0x583000
	0x03BDA030 LDR X0, [X0 + 0xD70]
	0x03BDA034 BL 0x1C16CF4
	0x03BDA038 ADRP X0, 0x583000
	0x03BDA03C LDR X0, [X0 + 0xD78]
	0x03BDA040 BL 0x1C16CF4
	0x03BDA044 ADRP X0, 0x583000
	0x03BDA048 LDR X0, [X0 + 0xD80]
	0x03BDA04C BL 0x1C16CF4
	0x03BDA050 ADRP X0, 0x583000
	0x03BDA054 LDR X0, [X0 + 0xE58]
	0x03BDA058 BL 0x1C16CF4
	0x03BDA05C ADRP X0, 0x583000
	0x03BDA060 LDR X0, [X0 + 0xE10]
	0x03BDA064 BL 0x1C16CF4
	0x03BDA068 ADRP X0, 0x583000
	0x03BDA06C LDR X0, [X0 + 0xD88]
	0x03BDA070 BL 0x1C16CF4
	0x03BDA074 MOVZ W8, 0x1
	0x03BDA078 STRB W8, [X20 + 0xEC1]
	0x03BDA07C STP X31, X31, [X31 + 0x8]
	0x03BDA080 STR X31, [X31 + 0x18]
	0x03BDA084 LDR X0, [X19 + 0x20]
	0x03BDA088 CBZ X0, 0x3BDA130
	0x03BDA08C ADRP X8, 0x583000
	0x03BDA090 LDR X8, [X8 + 0xD88]
	0x03BDA094 ADRP X22, 0x583000
	0x03BDA098 LDR X22, [X22 + 0xD78]
	0x03BDA09C ADRP X23, 0x583000
	0x03BDA0A0 LDR X1, [X8]
	0x03BDA0A4 ADRP X24, 0x583000
	0x03BDA0A8 ADRP X21, 0x583000
	0x03BDA0AC LDR X23, [X23 + 0xE10]
	0x03BDA0B0 LDR X24, [X24 + 0xE58]
	0x03BDA0B4 LDR X21, [X21 + 0xD70]
	0x03BDA0B8 ADD X8, X31, 0x8
	0x03BDA0BC BL 0x301CB58
	0x03BDA0C0 LDR X1, [X22]
	0x03BDA0C4 ADD X0, X31, 0x8
	0x03BDA0C8 BL 0x2BC4350
	0x03BDA0CC TBZ X0, 0x0, 0x3BDA104
	0x03BDA0D0 LDR X0, [X19 + 0x28]
	0x03BDA0D4 CBZ X0, 0x3BDA128
	0x03BDA0D8 LDR X20, [X31 + 0x18]
	0x03BDA0DC LDR X2, [X23]
	0x03BDA0E0 MOV X1, X20
	0x03BDA0E4 BL 0x2DBE4B0
	0x03BDA0E8 TBNZ X0, 0x0, 0x3BDA0C0
	0x03BDA0EC LDR X0, [X19 + 0x28]
	0x03BDA0F0 CBZ X0, 0x3BDA12C
	0x03BDA0F4 LDR X2, [X24]
	0x03BDA0F8 MOV X1, X20
	0x03BDA0FC BL 0x2DBEF30
	0x03BDA100 B 0x3BDA0C0
	0x03BDA104 LDR X1, [X21]
	0x03BDA108 ADD X0, X31, 0x8
	0x03BDA10C BL 0x2BC434C
	0x03BDA110 LDP X20, X19, [X31 + 0x50]
	0x03BDA114 LDP X22, X21, [X31 + 0x40]
	0x03BDA118 LDP X24, X23, [X31 + 0x30]
	0x03BDA11C LDR X30, [X31 + 0x20]
	0x03BDA120 ADD X31, X31, 0x60
	0x03BDA124 RET
	0x03BDA128 BL 0x1C16F20
	0x03BDA12C BL 0x1C16F20
	0x03BDA130 BL 0x1C16F20
	0x03BDA134 B 0x3BDA144
	0x03BDA138 B 0x3BDA144
	0x03BDA13C B 0x3BDA144
	0x03BDA140 B 0x3BDA144

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x80A000
	008 Move X21, 0x585000
	009 Move W8, [X20+3763]
	010 Move X21, [X21+3408]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x51B000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0x51B000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move X0, 0x585000
	023 Move X0, [X0+3408]
	024 Call 0x1C17CF4
	025 Move X0, 0x585000
	026 Move X0, [X0+3432]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+3763], W8
	030 Move X0, [X21]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X23, 0x80A000
	036 Move W8, [X23+3785]
	037 Compare W8, 0
	038 JumpIfNotEqual {44}
	039 Move X0, 0x585000
	040 Move X0, [X0+3408]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X23+3785], W8
	044 Move X0, [X21]
	045 Move X22, 0x51B000
	046 Move W8, [X0+224]
	047 Move X22, [X22+1432]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X21]
	052 Move X8, [X22]
	053 Move X9, [X0+184]
	054 Move W10, [X8+224]
	055 Move X20, [X9+8]
	056 Compare W10, 0
	057 JumpIfNotEqual {60}
	058 Move X0, X8
	059 Call 0x1C17DFC
	060 Move X0, X20
	061 Move X1, X31
	062 Move X2, X31
	063 Call Object.op_Equality, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {194}
	068 Move X0, [X21]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move W8, [X23+3785]
	074 Compare W8, 0
	075 JumpIfNotEqual {81}
	076 Move X0, 0x585000
	077 Move X0, [X0+3408]
	078 Call 0x1C17CF4
	079 Move W8, 1
	080 Move [X23+3785], W8
	081 Move X0, [X21]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {87}
	085 Call 0x1C17DFC
	086 Move X0, [X21]
	087 Move X8, [X0+184]
	088 Move X8, [X8+8]
	089 Compare X8, 0
	090 JumpIfEqual {201}
	091 Move X0, [X22]
	092 Move X20, [X8+24]
	093 Move W9, [X0+224]
	094 Compare W9, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Move X0, X20
	098 Move X1, X31
	099 Move X2, X31
	100 Call Object.op_Equality, X0, X1
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {194}
	105 Move X0, [X21]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Move W8, [X23+3785]
	111 Compare W8, 0
	112 JumpIfNotEqual {118}
	113 Move X0, 0x584000
	114 Move X0, [X0+3408]
	115 Call 0x1C17CF4
	116 Move W8, 1
	117 Move [X23+3785], W8
	118 Move X0, [X21]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {124}
	122 Call 0x1C17DFC
	123 Move X0, [X21]
	124 Move X8, [X0+184]
	125 Move X8, [X8+8]
	126 Compare X8, 0
	127 JumpIfEqual {201}
	128 Move W8, [X8+32]
	129 Compare W8, 0
	130 JumpIfEqual {194}
	131 Move W8, [X0+224]
	132 Compare W8, 0
	133 JumpIfNotEqual {135}
	134 Call 0x1C17DFC
	135 Move W8, [X23+3785]
	136 Compare W8, 0
	137 JumpIfNotEqual {143}
	138 Move X0, 0x584000
	139 Move X0, [X0+3408]
	140 Call 0x1C17CF4
	141 Move W8, 1
	142 Move [X23+3785], W8
	143 Move X0, [X21]
	144 Move W8, [X0+224]
	145 Compare W8, 0
	146 JumpIfNotEqual {149}
	147 Call 0x1C17DFC
	148 Move X0, [X21]
	149 Move X8, [X0+184]
	150 Move X8, [X8+8]
	151 Compare X8, 0
	152 JumpIfEqual {201}
	153 Move X20, [X8+24]
	154 Move [X19+40], X20
	155 Move X0, [X22]
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X0, X20
	161 Move X1, X31
	162 Move X2, X31
	163 Call Object.op_Equality, X0, X1
	164 Move TEMP, X0
	165 And TEMP, TEMP, 1
	166 Compare TEMP, 1
	167 JumpIfNotEqual {187}
	168 Move X8, 0x51A000
	169 Move X8, [X8+2600]
	170 Move X0, [X8]
	171 Move W8, [X0+224]
	172 Compare W8, 0
	173 JumpIfNotEqual {175}
	174 Call 0x1C17DFC
	175 Move X8, 0x584000
	176 Move X8, [X8+3432]
	177 Move X20, [X31+32]
	178 Move X19, [X31+40]
	179 Move X22, [X31+16]
	180 Move X21, [X31+24]
	181 Move X1, X31
	182 Move X0, [X8]
	183 Move X30, [X31+48]
	184 Move X23, [X31+56]
	185 Call Debug.LogError, X0
	186 Return 
	187 Move X0, [X19+40]
	188 Compare X0, 0
	189 JumpIfEqual {201}
	190 NotImplemented "Instruction STRH not yet implemented."
	191 Call XRManagerSettings.InitializeLoaderSync, X0
	192 Move W8, 1
	193 Move [X19+48], W8
	194 Move X20, [X31+32]
	195 Move X19, [X31+40]
	196 Move X22, [X31+16]
	197 Move X21, [X31+24]
	198 Move X30, [X31+48]
	199 Move X23, [X31+56]
	200 Return 
	201 Call 0x1C17F20

Method: System.Void StartXRSDK()

Disassembly:
	0x03BD9D34 RET
	0x03BD9D38 CBZ X0, 0x3BD9D9C
	0x03BD9D3C ADRP X9, 0x584000
	0x03BD9D40 LDR X9, [X9 + 0xE18]
	0x03BD9D44 LDR W10, [X0 + 0x1C]
	0x03BD9D48 LDR X8, [X0 + 0x10]
	0x03BD9D4C LDR X9, [X9]
	0x03BD9D50 ADD W10, W10, 0x1
	0x03BD9D54 STR W10, [X0 + 0x1C]
	0x03BD9D58 CBZ X8, 0x3BD9D9C
	0x03BD9D5C LDRSW X10, [X0 + 0x18]
	0x03BD9D60 LDR W11, [X8 + 0x18]
	0x03BD9D64 CMP W10, W11
	0x03BD9D68 B.CS 0x3BD9D80
	0x03BD9D6C ADD W9, W10, 0x1
	0x03BD9D70 ADD X8, X8, X10, 0x3, LSL
	0x03BD9D74 STR W9, [X0 + 0x18]
	0x03BD9D78 STR X19, [X8 + 0x20]
	0x03BD9D7C B 0x3BD9D94
	0x03BD9D80 LDR X8, [X9 + 0x20]
	0x03BD9D84 MOV X1, X19
	0x03BD9D88 LDR X8, [X8 + 0xC0]
	0x03BD9D8C LDR X2, [X8 + 0x70]
	0x03BD9D90 BL 0x301BF90
	0x03BD9D94 MOVZ W0, 0x1
	0x03BD9D98 B 0x3BD9D28
	0x03BD9D9C BL 0x1C16F20
	0x03BD9DA0 STP X30, X21, [X31 - 0x20]!
	0x03BD9DA4 STP X20, X19, [X31 + 0x10]
	0x03BD9DA8 ADRP X21, 0x809000
	0x03BD9DAC LDRB W8, [X21 + 0xEBF]
	0x03BD9DB0 MOV X19, X1
	0x03BD9DB4 MOV X20, X0
	0x03BD9DB8 TBNZ X8, 0x0, 0x3BD9DDC
	0x03BD9DBC ADRP X0, 0x584000
	0x03BD9DC0 LDR X0, [X0 + 0xE20]
	0x03BD9DC4 BL 0x1C16CF4
	0x03BD9DC8 ADRP X0, 0x584000
	0x03BD9DCC LDR X0, [X0 + 0xE38]
	0x03BD9DD0 BL 0x1C16CF4
	0x03BD9DD4 MOVZ W8, 0x1
	0x03BD9DD8 STRB W8, [X21 + 0xEBF]
	0x03BD9DDC LDR X0, [X20 + 0x20]
	0x03BD9DE0 CBZ X0, 0x3BD9E30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x80A000
	006 Move X21, 0x51B000
	007 Move W8, [X20+3764]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x51B000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3764], W8
	019 Move X0, [X21]
	020 Move X20, [X19+40]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Inequality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {56}
	033 Move X8, [X19+40]
	034 Compare X8, 0
	035 JumpIfEqual {61}
	036 Move X0, [X21]
	037 Move X20, [X8+48]
	038 Move W9, [X0+224]
	039 Compare W9, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X1, X31
	044 Move X2, X31
	045 Call Object.op_Inequality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {56}
	050 Move X0, [X19+40]
	051 Compare X0, 0
	052 JumpIfEqual {61}
	053 Call XRManagerSettings.StartSubsystems, X0
	054 Move W8, 1
	055 Move [X19+49], W8
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 Return 
	061 Call 0x1C17F20

Method: System.Void StopXRSDK()

Disassembly:
	0x03BDA558 CBZ X19, 0x3BDA3D0
	0x03BDA55C ADD X8, X31, 0x40
	0x03BDA560 ADD X0, X8, 0x8
	0x03BDA564 BL 0x1C019C8
	0x03BDA568 MOV X0, X19
	0x03BDA56C BL 0x1C16F18
	0x03BDA570 CBNZ X19, 0x3BDA578
	0x03BDA574 BL 0x1D2C690
	0x03BDA578 LDR X0, [X31 + 0x58]
	0x03BDA57C LDR W8, [X0 + 0x10]
	0x03BDA580 CMP W8, 0x1
	0x03BDA584 B.EQ 0x3BDA590
	0x03BDA588 ADDS W31, W8, 0x3
	0x03BDA58C B.NE 0x3BDA594
	0x03BDA590 BL 0x3BDA5A0
	0x03BDA594 MOV X0, X19
	0x03BDA598 BL 0x1C16F18
	0x03BDA59C BL 0x1990590
	0x03BDA5A0 STP X30, X21, [X31 - 0x20]!
	0x03BDA5A4 STP X20, X19, [X31 + 0x10]
	0x03BDA5A8 ADRP X21, 0x808000
	0x03BDA5AC ADRP X20, 0x583000
	0x03BDA5B0 LDRB W8, [X21 + 0xEC8]
	0x03BDA5B4 LDR X20, [X20 + 0xD70]
	0x03BDA5B8 MOV X19, X0
	0x03BDA5BC TBNZ X8, 0x0, 0x3BDA5D4
	0x03BDA5C0 ADRP X0, 0x583000
	0x03BDA5C4 LDR X0, [X0 + 0xD70]
	0x03BDA5C8 BL 0x1C16CF4
	0x03BDA5CC MOVZ W8, 0x1
	0x03BDA5D0 STRB W8, [X21 + 0xEC8]
	0x03BDA5D4 MOVN W8, 0x0
	0x03BDA5D8 STR W8, [X19 + 0x10]
	0x03BDA5DC LDR X1, [X20]
	0x03BDA5E0 ADD X0, X19, 0x28
	0x03BDA5E4 LDP X20, X19, [X31 + 0x10]
	0x03BDA5E8 LDP X30, X21, [X31], #0x20
	0x03BDA5EC B 0x2BC434C
	0x03BDA5F0 LDR X0, [X0 + 0x18]
	0x03BDA5F4 RET
	0x03BDA5F8 STP X30, X19, [X31 - 0x10]!
	0x03BDA5FC ADRP X0, 0x519000
	0x03BDA600 LDR X0, [X0 + 0xB40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x809000
	006 Move X21, 0x51A000
	007 Move W8, [X20+3765]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x51A000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3765], W8
	019 Move X0, [X21]
	020 Move X20, [X19+40]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Inequality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {55}
	033 Move X8, [X19+40]
	034 Compare X8, 0
	035 JumpIfEqual {60}
	036 Move X0, [X21]
	037 Move X20, [X8+48]
	038 Move W9, [X0+224]
	039 Compare W9, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X1, X31
	044 Move X2, X31
	045 Call Object.op_Inequality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {55}
	050 Move X0, [X19+40]
	051 Compare X0, 0
	052 JumpIfEqual {60}
	053 Call XRManagerSettings.StopSubsystems, X0
	054 Move [X19+49], W31
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Return 
	060 Call 0x1C17F20

Method: System.Void DeInitXRSDK()

Disassembly:
	0x03BD9C80 BL 0x1C16CF4
	0x03BD9C84 MOVZ W8, 0x1
	0x03BD9C88 STRB W8, [X22 + 0xEBE]
	0x03BD9C8C LDR X0, [X23]
	0x03BD9C90 LDR W8, [X0 + 0xE0]
	0x03BD9C94 CBNZ W8, 0x3BD9C9C
	0x03BD9C98 BL 0x1C16DFC
	0x03BD9C9C MOV X0, X19
	0x03BD9CA0 MOV X1, X31
	0x03BD9CA4 MOV X2, X31
	0x03BD9CA8 BL 0x3C3883C
	0x03BD9CAC TBNZ X0, 0x0, 0x3BD9D24
	0x03BD9CB0 LDR X0, [X21 + 0x20]
	0x03BD9CB4 CBZ X0, 0x3BD9D9C
	0x03BD9CB8 ADRP X8, 0x584000
	0x03BD9CBC LDR X8, [X8 + 0xE20]
	0x03BD9CC0 MOV X1, X19
	0x03BD9CC4 LDR X2, [X8]
	0x03BD9CC8 BL 0x301C318
	0x03BD9CCC TBNZ X0, 0x0, 0x3BD9D24
	0x03BD9CD0 LDR X0, [X21 + 0x28]
	0x03BD9CD4 CBZ X0, 0x3BD9D9C
	0x03BD9CD8 ADRP X8, 0x584000
	0x03BD9CDC LDR X8, [X8 + 0xE10]
	0x03BD9CE0 MOV X1, X19
	0x03BD9CE4 LDR X2, [X8]
	0x03BD9CE8 BL 0x2DBE4B0
	0x03BD9CEC TBZ X0, 0x0, 0x3BD9D24
	0x03BD9CF0 LDR X0, [X21 + 0x20]
	0x03BD9CF4 TBNZ X20, 0x1F, 0x3BD9D38
	0x03BD9CF8 CBZ X0, 0x3BD9D9C
	0x03BD9CFC LDR W8, [X0 + 0x18]
	0x03BD9D00 CMP W8, W20
	0x03BD9D04 B.LE 0x3BD9D3C
	0x03BD9D08 ADRP X8, 0x584000
	0x03BD9D0C LDR X8, [X8 + 0xE28]
	0x03BD9D10 MOV W1, W20
	0x03BD9D14 MOV X2, X19
	0x03BD9D18 LDR X3, [X8]
	0x03BD9D1C BL 0x301CEEC
	0x03BD9D20 B 0x3BD9D94
	0x03BD9D24 MOV W0, W31
	0x03BD9D28 LDP X20, X19, [X31 + 0x20]
	0x03BD9D2C LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x80A000
	006 Move X21, 0x51B000
	007 Move W8, [X20+3766]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x51B000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3766], W8
	019 Move X0, [X21]
	020 Move X20, [X19+40]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Inequality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {56}
	033 Move X8, [X19+40]
	034 Compare X8, 0
	035 JumpIfEqual {61}
	036 Move X0, [X21]
	037 Move X20, [X8+48]
	038 Move W9, [X0+224]
	039 Compare W9, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X1, X31
	044 Move X2, X31
	045 Call Object.op_Inequality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {56}
	050 Move X0, [X19+40]
	051 Compare X0, 0
	052 JumpIfEqual {61}
	053 Call XRManagerSettings.DeinitializeLoader, X0
	054 Move [X19+40], X31
	055 Move [X19+48], W31
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 Return 
	061 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03BDA7C4 STP X20, X19, [X31 + 0x10]
	0x03BDA7C8 ADRP X19, 0x808000
	0x03BDA7CC ADRP X20, 0x583000
	0x03BDA7D0 LDRB W8, [X19 + 0xECD]

ISIL:
	001 Move W8, 1
	002 Move X1, X31
	003 Move [X0+32], W8
	004 Call ScriptableObject..ctor, X0
	005 Return 

Method: System.Void .cctor()

Disassembly:
	0x03BDA7D4 LDR X20, [X20 + 0xE90]
	0x03BDA7D8 TBNZ X8, 0x0, 0x3BDA7F0
	0x03BDA7DC ADRP X0, 0x583000
	0x03BDA7E0 LDR X0, [X0 + 0xE90]
	0x03BDA7E4 BL 0x1C16CF4
	0x03BDA7E8 MOVZ W8, 0x1
	0x03BDA7EC STRB W8, [X19 + 0xECD]
	0x03BDA7F0 LDR X0, [X20]
	0x03BDA7F4 LDP X20, X19, [X31 + 0x10]
	0x03BDA7F8 MOV X1, X31
	0x03BDA7FC LDR X30, [X31], #0x20
	0x03BDA800 B 0x3BF5904
	0x03BDA804 B 0x3BDE264
	0x03BDA808 B 0x3BDE264
	0x03BDA80C STR X30, [X31 - 0x20]!
	0x03BDA810 STP X20, X19, [X31 + 0x10]
	0x03BDA814 ADRP X20, 0x808000
	0x03BDA818 LDRB W8, [X20 + 0xECE]
	0x03BDA81C MOV W19, W0
	0x03BDA820 TBNZ X8, 0x0, 0x3BDA844
	0x03BDA824 ADRP X0, 0x519000
	0x03BDA828 LDR X0, [X0 + 0xA28]
	0x03BDA82C BL 0x1C16CF4
	0x03BDA830 ADRP X0, 0x583000
	0x03BDA834 LDR X0, [X0 + 0xE98]
	0x03BDA838 BL 0x1C16CF4
	0x03BDA83C MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x809000
	006 Move X20, 0x584000
	007 Move X19, 0x584000
	008 Move W8, [X21+3767]
	009 Move X20, [X20+3504]
	010 Move X19, [X19+3408]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x584000
	016 Move X0, [X0+3408]
	017 Call 0x1C17CF4
	018 Move X0, 0x584000
	019 Move X0, [X0+3504]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+3767], W8
	023 Move X8, [X19]
	024 Move X9, [X20]
	025 Move X8, [X8+184]
	026 Move [X8], X9
	027 Move X8, [X19]
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X8, [X8+184]
	031 Move [X8+8], X31
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return 

