Type: UnityEngine.XR.Management.XRManagerSettings

Method: System.Boolean get_automaticLoading()

Disassembly:
	0x03BDA9EC LDR X0, [X0 + 0xEB0]
	0x03BDA9F0 BL 0x1C16CF4

ISIL:
	001 Move W0, [X0+26]
	002 Return X0

Method: System.Void set_automaticLoading(System.Boolean value)

Disassembly:
	0x03BDA9F4 ADRP X0, 0x583000
	0x03BDA9F8 LDR X0, [X0 + 0xE90]
	0x03BDA9FC BL 0x1C16CF4

ISIL:
	001 And W8, W1, 1
	002 Move [X0+26], W8
	003 Return 

Method: System.Boolean get_automaticRunning()

Disassembly:
	0x03BDAA00 MOVZ W8, 0x1
	0x03BDAA04 STRB W8, [X20 + 0xED1]

ISIL:
	001 Move W0, [X0+27]
	002 Return X0

Method: System.Void set_automaticRunning(System.Boolean value)

Disassembly:
	0x03BDAA08 BL 0x3BDE434
	0x03BDAA0C TBZ X0, 0x0, 0x3BDAA24
	0x03BDAA10 TBZ X19, 0x0, 0x3BDAA30

ISIL:
	001 And W8, W1, 1
	002 Move [X0+27], W8
	003 Return 

Method: System.Collections.Generic.List`1<UnityEngine.XR.Management.XRLoader> get_loaders()

Disassembly:
	0x03BDAA14 BL 0x3BDA7C0
	0x03BDAA18 TBZ X0, 0x0, 0x3BDAA40

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Collections.Generic.IReadOnlyList`1<UnityEngine.XR.Management.XRLoader> get_activeLoaders()

Disassembly:
	0x03BDAA1C MOVZ W0, 0x1
	0x03BDAA20 B 0x3BDAA34

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Boolean get_isInitializationComplete()

Disassembly:
	0x03BDAA24 LDP X20, X19, [X31 + 0x10]
	0x03BDAA28 LDR X30, [X31], #0x20

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: UnityEngine.XR.Management.XRLoader get_activeLoader()

Disassembly:
	0x03BDAA2C RET
	0x03BDAA30 MOV W0, W31

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_activeLoader(UnityEngine.XR.Management.XRLoader value)

Disassembly:
	0x03BDAA34 LDP X20, X19, [X31 + 0x10]
	0x03BDAA38 LDR X30, [X31], #0x20

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: T ActiveLoaderAs()

Disassembly:
	0x022AF608 BL 0x338C698
	0x022AF60C MOV X1, X0
	0x022AF610 MOV X0, X21
	0x022AF614 MOV X2, X31
	0x022AF618 BL 0x3395194
	0x022AF61C TBZ X0, 0x0, 0x22AF630
	0x022AF620 MOV X0, X20
	0x022AF624 MOV X1, X31
	0x022AF628 BL 0x3BEE370
	0x022AF62C B 0x22AF6C4
	0x022AF630 ADRP X8, 0x1E6C000
	0x022AF634 LDR X0, [X23]
	0x022AF638 LDR X8, [X8 + 0xA78]
	0x022AF63C LDR W9, [X0 + 0xE0]
	0x022AF640 LDR X22, [X8]
	0x022AF644 CBNZ W9, 0x22AF64C
	0x022AF648 BL 0x1C16DFC
	0x022AF64C MOV X0, X22
	0x022AF650 MOV X1, X31
	0x022AF654 BL 0x338C698
	0x022AF658 MOV X1, X0
	0x022AF65C MOV X0, X21
	0x022AF660 MOV X2, X31
	0x022AF664 BL 0x3395194
	0x022AF668 TBZ X0, 0x0, 0x22AF67C
	0x022AF66C MOV X0, X20
	0x022AF670 MOV X1, X31
	0x022AF674 BL 0x3BEE2D0
	0x022AF678 B 0x22AF6C4
	0x022AF67C ADRP X8, 0x1E6B000
	0x022AF680 LDR X0, [X23]
	0x022AF684 LDR X8, [X8 + 0xD70]
	0x022AF688 LDR W9, [X0 + 0xE0]
	0x022AF68C LDR X22, [X8]
	0x022AF690 CBNZ W9, 0x22AF698
	0x022AF694 BL 0x1C16DFC
	0x022AF698 MOV X0, X22
	0x022AF69C MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X19, X1
	006 Move X20, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {12}
	009 Move X0, X19
	010 Call 0x1C5D6E0
	011 Move X8, [X19+56]
	012 Move X1, [X8]
	013 Move X20, [X20+48]
	014 Move W8, [X1+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {22}
	019 Move X0, X1
	020 Call 0x1C5D684
	021 Move X1, X0
	022 Move X0, X20
	023 Call 0x1C17E00
	024 Move X8, [X19+56]
	025 Move X20, X0
	026 Move X19, [X8]
	027 Move W8, [X19+309]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {35}
	032 Move X0, X19
	033 Call 0x1C5D684
	034 Move X19, X0
	035 Compare X20, 0
	036 JumpIfEqual {45}
	037 Move X0, X20
	038 Move X1, X19
	039 Call 0x1C17E00
	040 Compare X0, 0
	041 JumpIfNotEqual {46}
	042 Move X0, X20
	043 Move X1, X19
	044 Call 0x1C181E0
	045 Move X0, X31
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Return X0

Method: System.Void InitializeLoaderSync()

Disassembly:
	0x03BDA228 LDR X24, [X24 + 0xE40]
	0x03BDA22C LDR X20, [X20 + 0xE60]
	0x03BDA230 LDR X22, [X22 + 0xE68]
	0x03BDA234 LDR X21, [X21 + 0xE70]
	0x03BDA238 MOV X19, X0
	0x03BDA23C TBNZ X8, 0x0, 0x3BDA278
	0x03BDA240 ADRP X0, 0x583000
	0x03BDA244 LDR X0, [X0 + 0xE70]
	0x03BDA248 BL 0x1C16CF4
	0x03BDA24C ADRP X0, 0x583000
	0x03BDA250 LDR X0, [X0 + 0xE68]
	0x03BDA254 BL 0x1C16CF4
	0x03BDA258 ADRP X0, 0x583000
	0x03BDA25C LDR X0, [X0 + 0xE60]
	0x03BDA260 BL 0x1C16CF4
	0x03BDA264 ADRP X0, 0x583000
	0x03BDA268 LDR X0, [X0 + 0xE40]
	0x03BDA26C BL 0x1C16CF4
	0x03BDA270 MOVZ W8, 0x1
	0x03BDA274 STRB W8, [X23 + 0xEC6]
	0x03BDA278 LDR X0, [X24]
	0x03BDA27C BL 0x1C16F10
	0x03BDA280 LDR X1, [X20]
	0x03BDA284 MOV X20, X0
	0x03BDA288 BL 0x301B7C4
	0x03BDA28C STR X20, [X19 + 0x20]
	0x03BDA290 LDR X0, [X22]
	0x03BDA294 BL 0x1C16F10
	0x03BDA298 LDR X1, [X21]
	0x03BDA29C MOV X20, X0
	0x03BDA2A0 BL 0x2DBDE08
	0x03BDA2A4 STR X20, [X19 + 0x28]
	0x03BDA2A8 MOV X0, X19
	0x03BDA2AC LDP X20, X19, [X31 + 0x30]
	0x03BDA2B0 LDP X22, X21, [X31 + 0x20]
	0x03BDA2B4 LDP X24, X23, [X31 + 0x10]
	0x03BDA2B8 MOV X1, X31
	0x03BDA2BC LDR X30, [X31], #0x40
	0x03BDA2C0 B 0x3C36D2C
	0x03BDA2C4 LDR W8, [X0 + 0x10]
	0x03BDA2C8 CMP W8, 0x1
	0x03BDA2CC B.EQ 0x3BDA2D8
	0x03BDA2D0 ADDS W31, W8, 0x3
	0x03BDA2D4 B.NE 0x3BDA2DC
	0x03BDA2D8 B 0x3BDA5A0
	0x03BDA2DC RET
	0x03BDA2E0 SUB X31, X31, 0x70
	0x03BDA2E4 STP X30, X0, [X31 + 0x50]
	0x03BDA2E8 STP X20, X19, [X31 + 0x60]
	0x03BDA2EC ADRP X20, 0x808000
	0x03BDA2F0 LDRB W8, [X20 + 0xEC7]
	0x03BDA2F4 MOV X19, X0
	0x03BDA2F8 TBNZ X8, 0x0, 0x3BDA34C
	0x03BDA2FC ADRP X0, 0x519000
	0x03BDA300 LDR X0, [X0 + 0xA28]
	0x03BDA304 BL 0x1C16CF4
	0x03BDA308 ADRP X0, 0x583000
	0x03BDA30C LDR X0, [X0 + 0xD78]
	0x03BDA310 BL 0x1C16CF4
	0x03BDA314 ADRP X0, 0x583000
	0x03BDA318 LDR X0, [X0 + 0xD80]
	0x03BDA31C BL 0x1C16CF4
	0x03BDA320 ADRP X0, 0x583000
	0x03BDA324 LDR X0, [X0 + 0xD88]
	0x03BDA328 BL 0x1C16CF4
	0x03BDA32C ADRP X0, 0x519000
	0x03BDA330 LDR X0, [X0 + 0x598]
	0x03BDA334 BL 0x1C16CF4
	0x03BDA338 ADRP X0, 0x583000
	0x03BDA33C LDR X0, [X0 + 0xD90]
	0x03BDA340 BL 0x1C16CF4
	0x03BDA344 MOVZ W8, 0x1
	0x03BDA348 STRB W8, [X20 + 0xEC7]
	0x03BDA34C ADD X8, X31, 0x58
	0x03BDA350 STR X8, [X31 + 0x48]
	0x03BDA354 LDR W8, [X19 + 0x10]
	0x03BDA358 LDR X20, [X19 + 0x20]
	0x03BDA35C CMP W8, 0x1
	0x03BDA360 B.EQ 0x3BDA3D8
	0x03BDA364 CBNZ W8, 0x3BDA3D0
	0x03BDA368 MOVN W8, 0x0
	0x03BDA36C STR W8, [X19 + 0x10]
	0x03BDA370 CBZ X20, 0x3BDA4F8
	0x03BDA374 ADRP X8, 0x519000
	0x03BDA378 LDR X8, [X8 + 0x598]
	0x03BDA37C LDR X19, [X20 + 0x30]
	0x03BDA380 LDR X0, [X8]
	0x03BDA384 LDR W8, [X0 + 0xE0]
	0x03BDA388 CBNZ W8, 0x3BDA390
	0x03BDA38C BL 0x1C16DFC
	0x03BDA390 MOV X0, X19
	0x03BDA394 MOV X1, X31
	0x03BDA398 MOV X2, X31
	0x03BDA39C BL 0x3C354F8
	0x03BDA3A0 TBZ X0, 0x0, 0x3BDA3E4
	0x03BDA3A4 ADRP X8, 0x519000
	0x03BDA3A8 LDR X8, [X8 + 0xA28]
	0x03BDA3AC LDR X0, [X8]
	0x03BDA3B0 LDR W8, [X0 + 0xE0]
	0x03BDA3B4 CBNZ W8, 0x3BDA3BC
	0x03BDA3B8 BL 0x1C16DFC
	0x03BDA3BC ADRP X8, 0x583000
	0x03BDA3C0 LDR X8, [X8 + 0xD90]
	0x03BDA3C4 LDR X0, [X8]
	0x03BDA3C8 MOV X1, X31
	0x03BDA3CC BL 0x3C06A04
	0x03BDA3D0 MOV W0, W31
	0x03BDA3D4 B 0x3BDA4E8
	0x03BDA3D8 MOVN W8, 0x2
	0x03BDA3DC STR W8, [X19 + 0x10]
	0x03BDA3E0 B 0x3BDA424
	0x03BDA3E4 LDR X0, [X20 + 0x20]
	0x03BDA3E8 CBZ X0, 0x3BDA500
	0x03BDA3EC ADRP X8, 0x583000
	0x03BDA3F0 LDR X8, [X8 + 0xD88]
	0x03BDA3F4 LDR X1, [X8]
	0x03BDA3F8 ADD X8, X31, 0x8
	0x03BDA3FC BL 0x301CB58
	0x03BDA400 LDUR V0, [X31 + 0x8]
	0x03BDA404 LDR X8, [X31 + 0x18]
	0x03BDA408 LDR X19, [X31 + 0x58]
	0x03BDA40C MOVN W9, 0x2
	0x03BDA410 STR V0, [X31 + 0x2]
	0x03BDA414 STR X8, [X31 + 0x30]
	0x03BDA418 STR X8, [X19 + 0x38]
	0x03BDA41C STUR V0, [X19 + 0x28]
	0x03BDA420 STR W9, [X19 + 0x10]
	0x03BDA424 ADRP X8, 0x583000
	0x03BDA428 LDR X8, [X8 + 0xD78]
	0x03BDA42C ADD X0, X19, 0x28
	0x03BDA430 LDR X1, [X8]
	0x03BDA434 BL 0x2BC4350
	0x03BDA438 MOV W8, W0
	0x03BDA43C LDR X0, [X31 + 0x58]
	0x03BDA440 TBZ X8, 0x0, 0x3BDA4B8
	0x03BDA444 ADRP X8, 0x519000
	0x03BDA448 LDR X8, [X8 + 0x598]
	0x03BDA44C LDR X19, [X0 + 0x38]
	0x03BDA450 LDR X8, [X8]
	0x03BDA454 LDR W9, [X8 + 0xE0]
	0x03BDA458 CBNZ W9, 0x3BDA464
	0x03BDA45C MOV X0, X8
	0x03BDA460 BL 0x1C16DFC
	0x03BDA464 MOV X0, X19
	0x03BDA468 MOV X1, X31
	0x03BDA46C MOV X2, X31
	0x03BDA470 BL 0x3C354F8
	0x03BDA474 TBZ X0, 0x0, 0x3BDA4D8
	0x03BDA478 CBZ X20, 0x3BDA504

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X20, 0x809000
	008 Move X21, 0x51A000
	009 Move W8, [X20+3772]
	010 Move X21, [X21+1432]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0x51A000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0x584000
	020 Move X0, [X0+3440]
	021 Call 0x1C17CF4
	022 Move X0, 0x584000
	023 Move X0, [X0+3448]
	024 Call 0x1C17CF4
	025 Move X0, 0x584000
	026 Move X0, [X0+3456]
	027 Call 0x1C17CF4
	028 Move X0, 0x584000
	029 Move X0, [X0+3464]
	030 Call 0x1C17CF4
	031 Move X0, 0x51A000
	032 Move X0, [X0+1432]
	033 Call 0x1C17CF4
	034 Move X0, 0x584000
	035 Move X0, [X0+3472]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+3772], W8
	039 Move X0, [X21]
	040 Move [X31+32], X31
	041 Move [X31+40], X31
	042 Move [X31+48], X31
	043 Move X20, [X19+48]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X20
	049 Move X1, X31
	050 Move X2, X31
	051 Call Object.op_Inequality, X0, X1
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {68}
	056 Move X8, 0x51A000
	057 Move X8, [X8+2600]
	058 Move X19, 0x584000
	059 Move X0, [X8]
	060 Move W8, [X0+224]
	061 Move X19, [X19+3472]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X0, [X19]
	066 Move X1, X31
	067 Call Debug.LogWarning, X0
	068 Move X0, [X19+32]
	069 Compare X0, 0
	070 JumpIfEqual {142}
	071 Move X8, 0x584000
	072 Move X8, [X8+3464]
	073 Move X1, [X8]
	074 Add X8, X31, 8
	075 Call List`1<Object>.GetEnumerator, X0
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 Move X8, [X31+24]
	078 Move X22, 0x584000
	079 Move [X31+2], V0
	080 Move [X31+48], X8
	081 Move X22, [X22+3448]
	082 Move X1, [X22]
	083 Add X0, X31, 32
	084 Call Enumerator<Object>.MoveNext, X0
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {128}
	089 Move X0, [X21]
	090 Move X20, [X31+48]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X0, X20
	096 Move X1, X31
	097 Move X2, X31
	098 Call Object.op_Inequality, X0, X1
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {82}
	103 Move X1, X20
	104 Call XRManagerSettings.CheckGraphicsAPICompatibility, X0, X1
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {82}
	109 Compare X20, 0
	110 JumpIfEqual {141}
	111 Move X8, [X20]
	112 Move X9, [X8+376]
	113 Move X1, [X8+384]
	114 Move X0, X20
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {82}
	120 Move W8, 1
	121 Move [X19+48], X20
	122 Move [X19+24], W8
	123 Move X8, 0x584000
	124 Move X8, [X8+3440]
	125 Add X0, X31, 32
	126 Move X1, [X8]
	127 Call Enumerator<Object>.Dispose, X0
	128 Move X8, 0x584000
	129 Move X8, [X8+3440]
	130 Add X0, X31, 32
	131 Move X1, [X8]
	132 Call Enumerator<Object>.Dispose, X0
	133 Move [X19+48], X31
	134 Move X20, [X31+96]
	135 Move X19, [X31+104]
	136 Move X22, [X31+80]
	137 Move X21, [X31+88]
	138 Move X30, [X31+64]
	139 Add X31, X31, 112
	140 Return 
	141 Call 0x1C17F20
	142 Call 0x1C17F20
	143 Move X20, X0
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X0, X20
	146 Call 0x3EB2AD0
	147 Move X21, [X0]
	148 Call 0x3EB2AE0
	149 Move X8, 0x584000
	150 Move X8, [X8+3440]
	151 Add X0, X31, 32
	152 Move X1, [X8]
	153 Call Enumerator<Object>.Dispose, X0
	154 Compare X21, 0
	155 JumpIfEqual {133}
	156 Move X0, X21
	157 Call 0x1C17F18
	158 Move X21, X31
	159 Move X20, X0
	160 Move X8, 0x584000
	161 Move X8, [X8+3440]
	162 Move X1, [X8]
	163 Add X0, X31, 32
	164 Call Enumerator<Object>.Dispose, X0
	165 Compare X21, 0
	166 JumpIfNotEqual {169}
	167 Move X0, X20
	168 Call 0x1D2D690
	169 Move X0, X21
	170 Call 0x1C17F18
	171 Call 0x1991590

Method: System.Collections.IEnumerator InitializeLoader()

Disassembly:
	0x03BDAB88 MOV W19, W0
	0x03BDAB8C TBZ X0, 0x0, 0x3BDAB9C
	0x03BDAB90 AND W0, W20, 0x1
	0x03BDAB94 BL 0x3BDE3B8
	0x03BDAB98 B 0x3BDABC8
	0x03BDAB9C ADRP X8, 0x519000
	0x03BDABA0 LDR X8, [X8 + 0xA28]
	0x03BDABA4 ADRP X20, 0x583000
	0x03BDABA8 LDR X0, [X8]
	0x03BDABAC LDR W8, [X0 + 0xE0]
	0x03BDABB0 LDR X20, [X20 + 0xE98]
	0x03BDABB4 CBNZ W8, 0x3BDABBC
	0x03BDABB8 BL 0x1C16DFC
	0x03BDABBC LDR X0, [X20]
	0x03BDABC0 MOV X1, X31
	0x03BDABC4 BL 0x3C06A04
	0x03BDABC8 AND W0, W19, 0x1
	0x03BDABCC LDP X20, X19, [X31 + 0x10]
	0x03BDABD0 LDR X30, [X31], #0x20
	0x03BDABD4 RET
	0x03BDABD8 STP X30, X19, [X31 - 0x10]!
	0x03BDABDC ADRP X19, 0x808000
	0x03BDABE0 LDRB W8, [X19 + 0xED4]
	0x03BDABE4 TBNZ X8, 0x0, 0x3BDAC08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x809000
	006 Move X21, 0x584000
	007 Move W8, [X20+3773]
	008 Move X21, [X21+3592]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x584000
	015 Move X0, [X0+3592]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3773], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move [X20+16], W31
	025 Move [X20+32], X19
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Boolean TryAddLoader(UnityEngine.XR.Management.XRLoader loader, System.Int32 index = -1)

Disassembly:
	0x03BDAC10 LDP X30, X19, [X31], #0x10
	0x03BDAC14 B 0x3BDE350
	0x03BDAC18 ADRP X8, 0x519000
	0x03BDAC1C LDR X8, [X8 + 0xA28]
	0x03BDAC20 ADRP X19, 0x583000
	0x03BDAC24 LDR X0, [X8]
	0x03BDAC28 LDR W8, [X0 + 0xE0]
	0x03BDAC2C LDR X19, [X19 + 0xEA0]
	0x03BDAC30 CBNZ W8, 0x3BDAC38
	0x03BDAC34 BL 0x1C16DFC
	0x03BDAC38 LDR X0, [X19]
	0x03BDAC3C MOV X1, X31
	0x03BDAC40 BL 0x3C06A04
	0x03BDAC44 MOVN W0, 0x0
	0x03BDAC48 LDP X30, X19, [X31], #0x10
	0x03BDAC4C RET
	0x03BDAC50 STR X30, [X31 - 0x30]!
	0x03BDAC54 STP X22, X21, [X31 + 0x10]
	0x03BDAC58 STP X20, X19, [X31 + 0x20]
	0x03BDAC5C ADRP X20, 0x808000
	0x03BDAC60 ADRP X21, 0x583000
	0x03BDAC64 LDRB W8, [X20 + 0xED5]
	0x03BDAC68 LDR X21, [X21 + 0xEB8]
	0x03BDAC6C MOV X19, X0
	0x03BDAC70 TBNZ X8, 0x0, 0x3BDAC94
	0x03BDAC74 ADRP X0, 0x51A000
	0x03BDAC78 LDR X0, [X0 + 0xE70]
	0x03BDAC7C BL 0x1C16CF4
	0x03BDAC80 ADRP X0, 0x583000
	0x03BDAC84 LDR X0, [X0 + 0xEB8]
	0x03BDAC88 BL 0x1C16CF4
	0x03BDAC8C MOVZ W8, 0x1
	0x03BDAC90 STRB W8, [X20 + 0xED5]
	0x03BDAC94 LDR X8, [X21]
	0x03BDAC98 ADRP X22, 0x51A000
	0x03BDAC9C LDR X8, [X8 + 0xB8]
	0x03BDACA0 LDR X20, [X8]
	0x03BDACA4 LDR X22, [X22 + 0xE70]
	0x03BDACA8 MOV X0, X20
	0x03BDACAC MOV X1, X19
	0x03BDACB0 MOV X2, X31
	0x03BDACB4 BL 0x33C0DE4
	0x03BDACB8 MOV X8, X0
	0x03BDACBC CBZ X0, 0x3BDACD0
	0x03BDACC0 LDR X1, [X22]
	0x03BDACC4 LDR X9, [X8]
	0x03BDACC8 CMP X9, X1
	0x03BDACCC B.NE 0x3BDAD00
	0x03BDACD0 LDR X9, [X21]
	0x03BDACD4 MOV X1, X8
	0x03BDACD8 MOV X2, X20
	0x03BDACDC LDR X0, [X9 + 0xB8]
	0x03BDACE0 BL 0x1C24138
	0x03BDACE4 CMP X20, X0
	0x03BDACE8 MOV X20, X0
	0x03BDACEC B.NE 0x3BDACA8
	0x03BDACF0 LDP X20, X19, [X31 + 0x20]
	0x03BDACF4 LDP X22, X21, [X31 + 0x10]
	0x03BDACF8 LDR X30, [X31], #0x30
	0x03BDACFC RET
	0x03BDAD00 MOV X0, X8
	0x03BDAD04 BL 0x1C171E0
	0x03BDAD08 STR X30, [X31 - 0x30]!
	0x03BDAD0C STP X22, X21, [X31 + 0x10]
	0x03BDAD10 STP X20, X19, [X31 + 0x20]
	0x03BDAD14 ADRP X20, 0x808000
	0x03BDAD18 ADRP X21, 0x583000
	0x03BDAD1C LDRB W8, [X20 + 0xED6]
	0x03BDAD20 LDR X21, [X21 + 0xEB8]
	0x03BDAD24 MOV X19, X0
	0x03BDAD28 TBNZ X8, 0x0, 0x3BDAD4C
	0x03BDAD2C ADRP X0, 0x51A000
	0x03BDAD30 LDR X0, [X0 + 0xE70]
	0x03BDAD34 BL 0x1C16CF4
	0x03BDAD38 ADRP X0, 0x583000
	0x03BDAD3C LDR X0, [X0 + 0xEB8]
	0x03BDAD40 BL 0x1C16CF4
	0x03BDAD44 MOVZ W8, 0x1
	0x03BDAD48 STRB W8, [X20 + 0xED6]
	0x03BDAD4C LDR X8, [X21]
	0x03BDAD50 ADRP X22, 0x51A000
	0x03BDAD54 LDR X8, [X8 + 0xB8]
	0x03BDAD58 LDR X20, [X8]
	0x03BDAD5C LDR X22, [X22 + 0xE70]
	0x03BDAD60 MOV X0, X20
	0x03BDAD64 MOV X1, X19
	0x03BDAD68 MOV X2, X31
	0x03BDAD6C BL 0x33C0FDC
	0x03BDAD70 MOV X8, X0
	0x03BDAD74 CBZ X0, 0x3BDAD88
	0x03BDAD78 LDR X1, [X22]
	0x03BDAD7C LDR X9, [X8]
	0x03BDAD80 CMP X9, X1
	0x03BDAD84 B.NE 0x3BDADB8
	0x03BDAD88 LDR X9, [X21]
	0x03BDAD8C MOV X1, X8
	0x03BDAD90 MOV X2, X20
	0x03BDAD94 LDR X0, [X9 + 0xB8]
	0x03BDAD98 BL 0x1C24138
	0x03BDAD9C CMP X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x809000
	008 Move X23, 0x51A000
	009 Move W8, [X22+3774]
	010 Move X23, [X23+1432]
	011 Move W20, W2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {38}
	018 Move X0, 0x584000
	019 Move X0, [X0+3600]
	020 Call 0x1C17CF4
	021 Move X0, 0x584000
	022 Move X0, [X0+3608]
	023 Call 0x1C17CF4
	024 Move X0, 0x584000
	025 Move X0, [X0+3616]
	026 Call 0x1C17CF4
	027 Move X0, 0x584000
	028 Move X0, [X0+3624]
	029 Call 0x1C17CF4
	030 Move X0, 0x584000
	031 Move X0, [X0+3632]
	032 Call 0x1C17CF4
	033 Move X0, 0x51A000
	034 Move X0, [X0+1432]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X22+3774], W8
	038 Move X0, [X23]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X19
	044 Move X1, X31
	045 Move X2, X31
	046 Call Object.op_Equality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {90}
	051 Move X0, [X21+32]
	052 Compare X0, 0
	053 JumpIfEqual {122}
	054 Move X8, 0x584000
	055 Move X8, [X8+3616]
	056 Move X1, X19
	057 Move X2, [X8]
	058 Call List`1<Object>.Contains, X0, X1
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {90}
	063 Move X0, [X21+40]
	064 Compare X0, 0
	065 JumpIfEqual {122}
	066 Move X8, 0x584000
	067 Move X8, [X8+3600]
	068 Move X1, X19
	069 Move X2, [X8]
	070 Call HashSet`1<Object>.Contains, X0, X1
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {90}
	075 Move X0, [X21+32]
	076 Move TEMP, X20
	077 And TEMP, TEMP, -2147483648
	078 Compare TEMP, -2147483648
	079 JumpIfEqual {98}
	080 Compare X0, 0
	081 JumpIfEqual {122}
	082 Move W8, [X0+24]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X8, 0x584000
	085 Move X8, [X8+3624]
	086 Move W1, W20
	087 Move X2, X19
	088 Move X3, [X8]
	089 Call List`1<Object>.Insert, X0, X1, X2
	090 Move W0, W31
	091 Move X20, [X31+32]
	092 Move X19, [X31+40]
	093 Move X22, [X31+16]
	094 Move X21, [X31+24]
	095 Move X30, [X31+48]
	096 Move X23, [X31+56]
	097 Return X0
	098 Compare X0, 0
	099 JumpIfEqual {122}
	100 Move X9, 0x584000
	101 Move X9, [X9+3608]
	102 Move W10, [X0+28]
	103 Move X8, [X0+16]
	104 Move X9, [X9]
	105 Add W10, W10, 1
	106 Move [X0+28], W10
	107 Compare X8, 0
	108 JumpIfEqual {122}
	109 NotImplemented "Instruction LDRSW not yet implemented."
	110 Move W11, [X8+24]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Add W9, W10, 1
	113 Add X8, X8, X10
	114 Move [X0+24], W9
	115 Move [X8+32], X19
	116 Move X8, [X9+32]
	117 Move X1, X19
	118 Move X8, [X8+192]
	119 Move X2, [X8+112]
	120 Call List`1<Object>.AddWithResize, X0, X1
	121 Move W0, 1
	122 Call 0x1C17F20

Method: System.Boolean TryRemoveLoader(UnityEngine.XR.Management.XRLoader loader)

Disassembly:
	0x03BDADA0 MOV X20, X0
	0x03BDADA4 B.NE 0x3BDAD60
	0x03BDADA8 LDP X20, X19, [X31 + 0x20]
	0x03BDADAC LDP X22, X21, [X31 + 0x10]
	0x03BDADB0 LDR X30, [X31], #0x30
	0x03BDADB4 RET
	0x03BDADB8 MOV X0, X8
	0x03BDADBC BL 0x1C171E0
	0x03BDADC0 STR X30, [X31 - 0x30]!
	0x03BDADC4 STP X22, X21, [X31 + 0x10]
	0x03BDADC8 STP X20, X19, [X31 + 0x20]
	0x03BDADCC ADRP X20, 0x808000
	0x03BDADD0 ADRP X21, 0x583000
	0x03BDADD4 LDRB W8, [X20 + 0xED7]
	0x03BDADD8 LDR X21, [X21 + 0xEB8]
	0x03BDADDC MOV X19, X0
	0x03BDADE0 TBNZ X8, 0x0, 0x3BDAE04
	0x03BDADE4 ADRP X0, 0x51A000
	0x03BDADE8 LDR X0, [X0 + 0xE70]
	0x03BDADEC BL 0x1C16CF4
	0x03BDADF0 ADRP X0, 0x583000
	0x03BDADF4 LDR X0, [X0 + 0xEB8]
	0x03BDADF8 BL 0x1C16CF4
	0x03BDADFC MOVZ W8, 0x1
	0x03BDAE00 STRB W8, [X20 + 0xED7]
	0x03BDAE04 LDR X8, [X21]
	0x03BDAE08 ADRP X22, 0x51A000
	0x03BDAE0C LDR X8, [X8 + 0xB8]
	0x03BDAE10 LDR X20, [X8 + 0x8]
	0x03BDAE14 LDR X22, [X22 + 0xE70]
	0x03BDAE18 MOV X0, X20
	0x03BDAE1C MOV X1, X19
	0x03BDAE20 MOV X2, X31
	0x03BDAE24 BL 0x33C0DE4
	0x03BDAE28 MOV X8, X0
	0x03BDAE2C CBZ X0, 0x3BDAE40
	0x03BDAE30 LDR X1, [X22]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x809000
	006 Move W8, [X21+3775]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x584000
	014 Move X0, [X0+3616]
	015 Call 0x1C17CF4
	016 Move X0, 0x584000
	017 Move X0, [X0+3640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3775], W8
	021 Move X0, [X20+32]
	022 Compare X0, 0
	023 JumpIfEqual {52}
	024 Move X8, 0x584000
	025 Move X8, [X8+3616]
	026 Move X1, X19
	027 Move X2, [X8]
	028 Call List`1<Object>.Contains, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {46}
	033 Move X0, [X20+32]
	034 Compare X0, 0
	035 JumpIfEqual {52}
	036 Move X8, 0x584000
	037 Move X8, [X8+3640]
	038 Move X1, X19
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X2, [X8]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Call List`1<Object>.Remove, X0, X1
	045 Return X0
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move W0, 1
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return X0
	052 Call 0x1C17F20

Method: System.Boolean TrySetLoaders(System.Collections.Generic.List`1<UnityEngine.XR.Management.XRLoader> reorderedLoaders)

Disassembly:
	0x03BDAE34 LDR X9, [X8]
	0x03BDAE38 CMP X9, X1
	0x03BDAE3C B.NE 0x3BDAE74
	0x03BDAE40 LDR X9, [X21]
	0x03BDAE44 MOV X1, X8
	0x03BDAE48 MOV X2, X20
	0x03BDAE4C LDR X9, [X9 + 0xB8]
	0x03BDAE50 ADD X0, X9, 0x8
	0x03BDAE54 BL 0x1C24138
	0x03BDAE58 CMP X20, X0
	0x03BDAE5C MOV X20, X0
	0x03BDAE60 B.NE 0x3BDAE18
	0x03BDAE64 LDP X20, X19, [X31 + 0x20]
	0x03BDAE68 LDP X22, X21, [X31 + 0x10]
	0x03BDAE6C LDR X30, [X31], #0x30
	0x03BDAE70 RET
	0x03BDAE74 MOV X0, X8
	0x03BDAE78 BL 0x1C171E0
	0x03BDAE7C STR X30, [X31 - 0x30]!
	0x03BDAE80 STP X22, X21, [X31 + 0x10]
	0x03BDAE84 STP X20, X19, [X31 + 0x20]
	0x03BDAE88 ADRP X20, 0x808000
	0x03BDAE8C ADRP X21, 0x583000
	0x03BDAE90 LDRB W8, [X20 + 0xED8]
	0x03BDAE94 LDR X21, [X21 + 0xEB8]
	0x03BDAE98 MOV X19, X0
	0x03BDAE9C TBNZ X8, 0x0, 0x3BDAEC0
	0x03BDAEA0 ADRP X0, 0x51A000
	0x03BDAEA4 LDR X0, [X0 + 0xE70]
	0x03BDAEA8 BL 0x1C16CF4
	0x03BDAEAC ADRP X0, 0x583000
	0x03BDAEB0 LDR X0, [X0 + 0xEB8]
	0x03BDAEB4 BL 0x1C16CF4
	0x03BDAEB8 MOVZ W8, 0x1
	0x03BDAEBC STRB W8, [X20 + 0xED8]
	0x03BDAEC0 LDR X8, [X21]
	0x03BDAEC4 ADRP X22, 0x51A000
	0x03BDAEC8 LDR X8, [X8 + 0xB8]
	0x03BDAECC LDR X20, [X8 + 0x8]
	0x03BDAED0 LDR X22, [X22 + 0xE70]
	0x03BDAED4 MOV X0, X20
	0x03BDAED8 MOV X1, X19
	0x03BDAEDC MOV X2, X31
	0x03BDAEE0 BL 0x33C0FDC
	0x03BDAEE4 MOV X8, X0
	0x03BDAEE8 CBZ X0, 0x3BDAEFC
	0x03BDAEEC LDR X1, [X22]
	0x03BDAEF0 LDR X9, [X8]
	0x03BDAEF4 CMP X9, X1
	0x03BDAEF8 B.NE 0x3BDAF30
	0x03BDAEFC LDR X9, [X21]
	0x03BDAF00 MOV X1, X8
	0x03BDAF04 MOV X2, X20
	0x03BDAF08 LDR X9, [X9 + 0xB8]
	0x03BDAF0C ADD X0, X9, 0x8
	0x03BDAF10 BL 0x1C24138
	0x03BDAF14 CMP X20, X0
	0x03BDAF18 MOV X20, X0
	0x03BDAF1C B.NE 0x3BDAED4
	0x03BDAF20 LDP X20, X19, [X31 + 0x20]
	0x03BDAF24 LDP X22, X21, [X31 + 0x10]
	0x03BDAF28 LDR X30, [X31], #0x30
	0x03BDAF2C RET
	0x03BDAF30 MOV X0, X8
	0x03BDAF34 BL 0x1C171E0
	0x03BDAF38 B 0x3BDDD9C
	0x03BDAF3C B 0x3BDDD9C
	0x03BDAF40 STR X30, [X31 - 0x20]!
	0x03BDAF44 STP X20, X19, [X31 + 0x10]
	0x03BDAF48 ADRP X20, 0x808000
	0x03BDAF4C ADRP X19, 0x583000
	0x03BDAF50 LDRB W8, [X20 + 0xED9]
	0x03BDAF54 LDR X19, [X19 + 0xEB8]
	0x03BDAF58 TBNZ X8, 0x0, 0x3BDAF70
	0x03BDAF5C ADRP X0, 0x583000
	0x03BDAF60 LDR X0, [X0 + 0xEB8]
	0x03BDAF64 BL 0x1C16CF4
	0x03BDAF68 MOVZ W8, 0x1
	0x03BDAF6C STRB W8, [X20 + 0xED9]
	0x03BDAF70 BL 0x3BDDD9C
	0x03BDAF74 LDR X8, [X19]
	0x03BDAF78 LDR X8, [X8 + 0xB8]
	0x03BDAF7C LDRB W9, [X8 + 0x10]
	0x03BDAF80 TBZ X0, 0x0, 0x3BDAFA8
	0x03BDAF84 CBNZ W9, 0x3BDAFA0
	0x03BDAF88 LDR X8, [X8]
	0x03BDAF8C CBZ X8, 0x3BDAFA0
	0x03BDAF90 LDR X9, [X8 + 0x18]
	0x03BDAF94 LDR X0, [X8 + 0x40]
	0x03BDAF98 LDR X1, [X8 + 0x28]
	0x03BDAF9C BLR X9
	0x03BDAFA0 MOVZ W8, 0x1
	0x03BDAFA4 B 0x3BDAFC8
	0x03BDAFA8 CBZ W9, 0x3BDAFC4
	0x03BDAFAC LDR X8, [X8 + 0x8]
	0x03BDAFB0 CBZ X8, 0x3BDAFC8
	0x03BDAFB4 LDR X9, [X8 + 0x18]
	0x03BDAFB8 LDR X0, [X8 + 0x40]
	0x03BDAFBC LDR X1, [X8 + 0x28]
	0x03BDAFC0 BLR X9
	0x03BDAFC4 MOV W8, W31
	0x03BDAFC8 LDR X9, [X19]
	0x03BDAFCC LDP X20, X19, [X31 + 0x10]
	0x03BDAFD0 LDR X9, [X9 + 0xB8]
	0x03BDAFD4 STRB W8, [X9 + 0x10]
	0x03BDAFD8 LDR X30, [X31], #0x20
	0x03BDAFDC RET
	0x03BDAFE0 MOV X1, X31
	0x03BDAFE4 B 0x33BDD8C
	0x03BDAFE8 B 0x3BDDE0C
	0x03BDAFEC B 0x3BDDE0C
	0x03BDAFF0 B 0x3BDDE7C
	0x03BDAFF4 B 0x3BDDE7C
	0x03BDAFF8 B 0x3BDDF08
	0x03BDAFFC B 0x3BDDF08
	0x03BDB000 AND W0, W0, 0x1
	0x03BDB004 B 0x3BDDF78

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X22, 0x809000
	009 Move X23, 0x584000
	010 Move X21, 0x584000
	011 Move W8, [X22+3776]
	012 Move X23, [X23+3648]
	013 Move X21, [X21+3656]
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {43}
	020 Move X0, 0x584000
	021 Move X0, [X0+3440]
	022 Call 0x1C17CF4
	023 Move X0, 0x584000
	024 Move X0, [X0+3448]
	025 Call 0x1C17CF4
	026 Move X0, 0x584000
	027 Move X0, [X0+3456]
	028 Call 0x1C17CF4
	029 Move X0, 0x584000
	030 Move X0, [X0+3664]
	031 Call 0x1C17CF4
	032 Move X0, 0x584000
	033 Move X0, [X0+3464]
	034 Call 0x1C17CF4
	035 Move X0, 0x584000
	036 Move X0, [X0+3656]
	037 Call 0x1C17CF4
	038 Move X0, 0x584000
	039 Move X0, [X0+3648]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X22+3776], W8
	043 Move [X31+8], X31
	044 Move [X31+16], X31
	045 Move [X31+24], X31
	046 Move X0, [X23]
	047 Move X22, [X19+32]
	048 Call 0x1C17F10
	049 Move X2, [X21]
	050 Move X1, X22
	051 Move X21, X0
	052 Call List`1<Object>..ctor, X0, X1
	053 Move X8, [X19+32]
	054 Compare X8, 0
	055 JumpIfEqual {111}
	056 Move W2, [X8+24]
	057 Move W9, [X8+28]
	058 Add W9, W9, 1
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move [X8+24], W31
	061 Move [X8+28], W9
	062 Move X0, [X8+16]
	063 Move W1, W31
	064 Move X3, X31
	065 Call Array.Clear, X0, X1, X2
	066 Compare X20, 0
	067 JumpIfEqual {111}
	068 Move X8, 0x584000
	069 Move X8, [X8+3464]
	070 Move X23, 0x584000
	071 Move X22, 0x584000
	072 Move X0, X20
	073 Move X1, [X8]
	074 Move X23, [X23+3448]
	075 Move X22, [X22+3440]
	076 Add X8, X31, 8
	077 Call List`1<Object>.GetEnumerator, X0
	078 Move X1, [X23]
	079 Add X0, X31, 8
	080 Call Enumerator<Object>.MoveNext, X0
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {97}
	085 Move X1, [X31+24]
	086 Move TEMP, 0
	087 Not TEMP
	088 Move W2, TEMP
	089 Move X0, X19
	090 Call XRManagerSettings.TryAddLoader, X0, X1, X2
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfEqual {78}
	095 Move [X19+32], X21
	096 Move W19, 4
	097 Move W19, 5
	098 Move X1, [X22]
	099 Add X0, X31, 8
	100 Call Enumerator<Object>.Dispose, X0
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X20, [X31+64]
	103 Move X19, [X31+72]
	104 Move X22, [X31+48]
	105 Move X21, [X31+56]
	106 Move X30, [X31+32]
	107 Move X23, [X31+40]
	108 NotImplemented "Instruction CSET not yet implemented."
	109 Add X31, X31, 80
	110 Return X0
	111 Call 0x1C17F20
	112 Move X20, X0
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X0, X20
	115 Call 0x3EB2AD0
	116 Move X19, [X0]
	117 Call 0x3EB2AE0
	118 Move X1, [X22]
	119 Add X0, X31, 8
	120 Call Enumerator<Object>.Dispose, X0
	121 Compare X19, 0
	122 JumpIfEqual {101}
	123 Move X0, X19
	124 Call 0x1C17F18
	125 Move X19, X31
	126 Move X20, X0
	127 Move X1, [X22]
	128 Add X0, X31, 8
	129 Call Enumerator<Object>.Dispose, X0
	130 Compare X19, 0
	131 JumpIfNotEqual {134}
	132 Move X0, X20
	133 Call 0x1D2D690
	134 Move X0, X19
	135 Call 0x1C17F18
	136 Call 0x1991590

Method: System.Void Awake()

Disassembly:
	0x03BDB008 AND W0, W0, 0x1
	0x03BDB00C B 0x3BDDF78
	0x03BDB010 STP X30, X21, [X31 - 0x20]!
	0x03BDB014 STP X20, X19, [X31 + 0x10]
	0x03BDB018 ADRP X21, 0x807000
	0x03BDB01C ADRP X20, 0x582000
	0x03BDB020 LDRB W8, [X21 + 0xEDA]
	0x03BDB024 LDR X20, [X20 + 0xEC0]
	0x03BDB028 MOV W19, W0
	0x03BDB02C TBNZ X8, 0x0, 0x3BDB044
	0x03BDB030 ADRP X0, 0x582000
	0x03BDB034 LDR X0, [X0 + 0xEC0]
	0x03BDB038 BL 0x1C16CF4
	0x03BDB03C MOVZ W8, 0x1
	0x03BDB040 STRB W8, [X21 + 0xEDA]
	0x03BDB044 LDR X8, [X20]
	0x03BDB048 ANDS W31, W19, 0x1
	0x03BDB04C LDP X20, X19, [X31 + 0x10]
	0x03BDB050 MOVZ W9, 0x1
	0x03BDB054 LDR X8, [X8 + 0xB8]
	0x03BDB058 CINC W9, W9, NE
	0x03BDB05C STR W9, [X8]
	0x03BDB060 LDP X30, X21, [X31], #0x20
	0x03BDB064 RET
	0x03BDB068 STR X30, [X31 - 0x20]!
	0x03BDB06C STP X20, X19, [X31 + 0x10]
	0x03BDB070 ADRP X19, 0x807000
	0x03BDB074 ADRP X20, 0x582000
	0x03BDB078 LDRB W8, [X19 + 0xEDB]
	0x03BDB07C LDR X20, [X20 + 0xEC0]
	0x03BDB080 TBNZ X8, 0x0, 0x3BDB0B0
	0x03BDB084 ADRP X0, 0x518000
	0x03BDB088 LDR X0, [X0 + 0xA28]
	0x03BDB08C BL 0x1C16CF4
	0x03BDB090 ADRP X0, 0x582000
	0x03BDB094 LDR X0, [X0 + 0xEC0]
	0x03BDB098 BL 0x1C16CF4
	0x03BDB09C ADRP X0, 0x582000
	0x03BDB0A0 LDR X0, [X0 + 0xEC8]
	0x03BDB0A4 BL 0x1C16CF4
	0x03BDB0A8 MOVZ W8, 0x1
	0x03BDB0AC STRB W8, [X19 + 0xEDB]
	0x03BDB0B0 LDR X8, [X20]
	0x03BDB0B4 LDR X8, [X8 + 0xB8]
	0x03BDB0B8 LDR W8, [X8]
	0x03BDB0BC CBZ W8, 0x3BDB0CC
	0x03BDB0C0 CMP W8, 0x2
	0x03BDB0C4 CSET W0, EQ
	0x03BDB0C8 B 0x3BDB0F4
	0x03BDB0CC ADRP X8, 0x518000
	0x03BDB0D0 LDR X8, [X8 + 0xA28]
	0x03BDB0D4 LDR X0, [X8]
	0x03BDB0D8 LDR W8, [X0 + 0xE0]
	0x03BDB0DC CBNZ W8, 0x3BDB0E4
	0x03BDB0E0 BL 0x1C16DFC
	0x03BDB0E4 MOV X0, X31
	0x03BDB0E8 BL 0x3C072C4
	0x03BDB0EC TBZ X0, 0x0, 0x3BDB0FC
	0x03BDB0F0 MOVZ W0, 0x1
	0x03BDB0F4 BL 0x3BDDD18
	0x03BDB0F8 TBZ X0, 0x0, 0x3BDB108
	0x03BDB0FC LDP X20, X19, [X31 + 0x10]
	0x03BDB100 LDR X30, [X31], #0x20
	0x03BDB104 RET
	0x03BDB108 ADRP X8, 0x518000
	0x03BDB10C LDR X8, [X8 + 0xA28]
	0x03BDB110 LDR X0, [X8]
	0x03BDB114 LDR W8, [X0 + 0xE0]
	0x03BDB118 CBNZ W8, 0x3BDB120
	0x03BDB11C BL 0x1C16DFC
	0x03BDB120 ADRP X8, 0x582000
	0x03BDB124 LDR X8, [X8 + 0xEC8]
	0x03BDB128 LDP X20, X19, [X31 + 0x10]
	0x03BDB12C MOV X1, X31
	0x03BDB130 LDR X0, [X8]
	0x03BDB134 LDR X30, [X31], #0x20
	0x03BDB138 B 0x3C0649C
	0x03BDB13C AND W0, W0, 0x1
	0x03BDB140 B 0x3BDDD18
	0x03BDB144 STP X30, X19, [X31 - 0x10]!
	0x03BDB148 ADRP X19, 0x807000
	0x03BDB14C LDRB W8, [X19 + 0xEDC]
	0x03BDB150 TBNZ X8, 0x0, 0x3BDB174
	0x03BDB154 ADRP X0, 0x518000
	0x03BDB158 LDR X0, [X0 + 0xA28]
	0x03BDB15C BL 0x1C16CF4
	0x03BDB160 ADRP X0, 0x582000
	0x03BDB164 LDR X0, [X0 + 0xED0]
	0x03BDB168 BL 0x1C16CF4
	0x03BDB16C MOVZ W8, 0x1
	0x03BDB170 STRB W8, [X19 + 0xEDC]
	0x03BDB174 MOV W0, W31
	0x03BDB178 BL 0x3BDDD18
	0x03BDB17C TBZ X0, 0x0, 0x3BDB188
	0x03BDB180 LDP X30, X19, [X31], #0x10
	0x03BDB184 RET
	0x03BDB188 ADRP X8, 0x518000
	0x03BDB18C LDR X8, [X8 + 0xA28]
	0x03BDB190 ADRP X19, 0x582000
	0x03BDB194 LDR X0, [X8]
	0x03BDB198 LDR W8, [X0 + 0xE0]
	0x03BDB19C LDR X19, [X19 + 0xED0]
	0x03BDB1A0 CBNZ W8, 0x3BDB1A8
	0x03BDB1A4 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X20, 0x808000
	010 Move W8, [X20+3777]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x583000
	017 Move X0, [X0+3440]
	018 Call 0x1C17CF4
	019 Move X0, 0x583000
	020 Move X0, [X0+3448]
	021 Call 0x1C17CF4
	022 Move X0, 0x583000
	023 Move X0, [X0+3456]
	024 Call 0x1C17CF4
	025 Move X0, 0x583000
	026 Move X0, [X0+3672]
	027 Call 0x1C17CF4
	028 Move X0, 0x583000
	029 Move X0, [X0+3600]
	030 Call 0x1C17CF4
	031 Move X0, 0x583000
	032 Move X0, [X0+3464]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X20+3777], W8
	036 Move [X31+8], X31
	037 Move [X31+16], X31
	038 Move [X31+24], X31
	039 Move X0, [X19+32]
	040 Compare X0, 0
	041 JumpIfEqual {93}
	042 Move X8, 0x583000
	043 Move X8, [X8+3464]
	044 Move X22, 0x583000
	045 Move X22, [X22+3448]
	046 Move X23, 0x583000
	047 Move X1, [X8]
	048 Move X24, 0x583000
	049 Move X21, 0x583000
	050 Move X23, [X23+3600]
	051 Move X24, [X24+3672]
	052 Move X21, [X21+3440]
	053 Add X8, X31, 8
	054 Call List`1<Object>.GetEnumerator, X0
	055 Move X1, [X22]
	056 Add X0, X31, 8
	057 Call Enumerator<Object>.MoveNext, X0
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {79}
	062 Move X0, [X19+40]
	063 Compare X0, 0
	064 JumpIfEqual {91}
	065 Move X20, [X31+24]
	066 Move X2, [X23]
	067 Move X1, X20
	068 Call HashSet`1<Object>.Contains, X0, X1
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {55}
	073 Move X0, [X19+40]
	074 Compare X0, 0
	075 JumpIfEqual {92}
	076 Move X2, [X24]
	077 Move X1, X20
	078 Call HashSet`1<Object>.Add, X0, X1
	079 Move X1, [X21]
	080 Add X0, X31, 8
	081 Call Enumerator<Object>.Dispose, X0
	082 Move X20, [X31+80]
	083 Move X19, [X31+88]
	084 Move X22, [X31+64]
	085 Move X21, [X31+72]
	086 Move X24, [X31+48]
	087 Move X23, [X31+56]
	088 Move X30, [X31+32]
	089 Add X31, X31, 96
	090 Return 
	091 Call 0x1C17F20
	092 Call 0x1C17F20
	093 Call 0x1C17F20
	094 Move X19, X0
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X0, X19
	097 Call 0x3EB2AD0
	098 Move X20, [X0]
	099 Call 0x3EB2AE0
	100 Move X1, [X21]
	101 Add X0, X31, 8
	102 Call Enumerator<Object>.Dispose, X0
	103 Compare X20, 0
	104 JumpIfEqual {82}
	105 Move X0, X20
	106 Call 0x1C17F18
	107 Move X20, X31
	108 Move X19, X0
	109 Move X1, [X21]
	110 Add X0, X31, 8
	111 Call Enumerator<Object>.Dispose, X0
	112 Compare X20, 0
	113 JumpIfNotEqual {116}
	114 Move X0, X19
	115 Call 0x1D2D690
	116 Move X0, X20
	117 Call 0x1C17F18
	118 Call 0x1991590

Method: System.Boolean CheckGraphicsAPICompatibility(UnityEngine.XR.Management.XRLoader loader)

Disassembly:
	0x03BDAA3C B 0x3BDE514
	0x03BDAA40 ADRP X8, 0x55C000
	0x03BDAA44 LDR X8, [X8 + 0x748]
	0x03BDAA48 LDR X0, [X8]
	0x03BDAA4C BL 0x1C16F10
	0x03BDAA50 MOV X1, X31
	0x03BDAA54 MOV X19, X0
	0x03BDAA58 BL 0x3BF578C
	0x03BDAA5C ADRP X8, 0x51A000
	0x03BDAA60 LDR X8, [X8 + 0xE68]
	0x03BDAA64 LDR X0, [X8]
	0x03BDAA68 BL 0x1C16F10
	0x03BDAA6C ADRP X8, 0x583000
	0x03BDAA70 LDR X8, [X8 + 0xEB0]
	0x03BDAA74 MOV X1, X31
	0x03BDAA78 MOV X3, X31
	0x03BDAA7C MOV X20, X0
	0x03BDAA80 LDR X2, [X8]
	0x03BDAA84 BL 0x2A6B948
	0x03BDAA88 CBZ X19, 0x3BDAABC
	0x03BDAA8C MOV X0, X19
	0x03BDAA90 MOV X1, X20
	0x03BDAA94 MOV X2, X31
	0x03BDAA98 BL 0x3BF536C
	0x03BDAA9C ADRP X8, 0x583000
	0x03BDAAA0 LDR X8, [X8 + 0xE90]
	0x03BDAAA4 MOV X1, X19
	0x03BDAAA8 LDP X20, X19, [X31 + 0x10]
	0x03BDAAAC MOV X2, X31
	0x03BDAAB0 LDR X0, [X8]
	0x03BDAAB4 LDR X30, [X31], #0x20
	0x03BDAAB8 B 0x3BF5BD4
	0x03BDAABC BL 0x1C16F20
	0x03BDAAC0 STR X30, [X31 - 0x20]!
	0x03BDAAC4 STP X20, X19, [X31 + 0x10]
	0x03BDAAC8 ADRP X19, 0x808000
	0x03BDAACC LDRB W8, [X19 + 0xED2]
	0x03BDAAD0 MOV W20, W0
	0x03BDAAD4 TBNZ X8, 0x0, 0x3BDAAF8
	0x03BDAAD8 ADRP X0, 0x519000
	0x03BDAADC LDR X0, [X0 + 0xA28]
	0x03BDAAE0 BL 0x1C16CF4
	0x03BDAAE4 ADRP X0, 0x583000
	0x03BDAAE8 LDR X0, [X0 + 0xEA8]
	0x03BDAAEC BL 0x1C16CF4
	0x03BDAAF0 MOVZ W8, 0x1
	0x03BDAAF4 STRB W8, [X19 + 0xED2]
	0x03BDAAF8 BL 0x3BDE264
	0x03BDAAFC MOV W19, W0
	0x03BDAB00 TBZ X0, 0x0, 0x3BDAB10
	0x03BDAB04 MOV W0, W20
	0x03BDAB08 BL 0x3BDE2D4
	0x03BDAB0C B 0x3BDAB3C
	0x03BDAB10 ADRP X8, 0x519000
	0x03BDAB14 LDR X8, [X8 + 0xA28]
	0x03BDAB18 ADRP X20, 0x583000
	0x03BDAB1C LDR X0, [X8]
	0x03BDAB20 LDR W8, [X0 + 0xE0]
	0x03BDAB24 LDR X20, [X20 + 0xEA8]
	0x03BDAB28 CBNZ W8, 0x3BDAB30
	0x03BDAB2C BL 0x1C16DFC
	0x03BDAB30 LDR X0, [X20]
	0x03BDAB34 MOV X1, X31
	0x03BDAB38 BL 0x3C06A04
	0x03BDAB3C AND W0, W19, 0x1
	0x03BDAB40 LDP X20, X19, [X31 + 0x10]
	0x03BDAB44 LDR X30, [X31], #0x20
	0x03BDAB48 RET
	0x03BDAB4C STR X30, [X31 - 0x20]!
	0x03BDAB50 STP X20, X19, [X31 + 0x10]
	0x03BDAB54 ADRP X19, 0x808000
	0x03BDAB58 LDRB W8, [X19 + 0xED3]
	0x03BDAB5C MOV W20, W0
	0x03BDAB60 TBNZ X8, 0x0, 0x3BDAB84
	0x03BDAB64 ADRP X0, 0x519000
	0x03BDAB68 LDR X0, [X0 + 0xA28]
	0x03BDAB6C BL 0x1C16CF4
	0x03BDAB70 ADRP X0, 0x583000
	0x03BDAB74 LDR X0, [X0 + 0xE98]
	0x03BDAB78 BL 0x1C16CF4
	0x03BDAB7C MOVZ W8, 0x1
	0x03BDAB80 STRB W8, [X19 + 0xED3]
	0x03BDAB84 BL 0x3BDE264

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+48], X20
	004 Move [X31+56], X19
	005 Move X20, 0x809000
	006 Move W8, [X20+3778]
	007 Move X19, X1
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {29}
	012 Move X0, 0x51A000
	013 Move X0, [X0+2600]
	014 Call 0x1C17CF4
	015 Move X0, 0x584000
	016 Move X0, [X0+3560]
	017 Call 0x1C17CF4
	018 Move X0, 0x584000
	019 Move X0, [X0+3568]
	020 Call 0x1C17CF4
	021 Move X0, 0x584000
	022 Move X0, [X0+3576]
	023 Call 0x1C17CF4
	024 Move X0, 0x584000
	025 Move X0, [X0+3584]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+3778], W8
	029 Move X0, X31
	030 Call SystemInfo.get_graphicsDeviceType
	031 Compare X19, 0
	032 JumpIfEqual {96}
	033 Move X8, [X19]
	034 Move W20, W0
	035 Move X0, X19
	036 Move W1, W31
	037 Move X9, [X8+456]
	038 Move X2, [X8+464]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Compare X0, 0
	041 JumpIfEqual {96}
	042 Move W8, [X0+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X8, 0x584000
	045 Move X8, [X8+3568]
	046 Move W1, W20
	047 Move X2, [X8]
	048 Call List`1<Int32Enum>.Contains, X0, X1
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {54}
	053 Move W0, 1
	054 Move X0, X19
	055 Move X1, X31
	056 Call Object.get_name, X0
	057 Move X8, 0x584000
	058 Move X8, [X8+3560]
	059 Move X19, X0
	060 Move TEMP, 0
	061 Not TEMP
	062 Move X9, TEMP
	063 Add X0, X31, 8
	064 Move X8, [X8]
	065 Move X1, X31
	066 Move [X31+24], W20
	067 Move [X31+8], X8
	068 Move [X31+16], X9
	069 Call Enum.ToString, X0
	070 Move X8, 0x584000
	071 Move X8, [X8+3584]
	072 Move X2, X0
	073 Move X1, X19
	074 Move X3, X31
	075 Move X8, [X8]
	076 Move X0, X8
	077 Call String.Format, X0, X1, X2
	078 Move X8, 0x51A000
	079 Move X8, [X8+2600]
	080 Move X19, X0
	081 Move X8, [X8]
	082 Move W9, [X8+224]
	083 Compare W9, 0
	084 JumpIfNotEqual {87}
	085 Move X0, X8
	086 Call 0x1C17DFC
	087 Move X0, X19
	088 Move X1, X31
	089 Call Debug.LogWarning, X0
	090 Move W0, W31
	091 Move X20, [X31+48]
	092 Move X19, [X31+56]
	093 Move X30, [X31+32]
	094 Add X31, X31, 64
	095 Return X0
	096 Call 0x1C17F20

Method: System.Void StartSubsystems()

Disassembly:
	0x03BDA47C MOV X1, X19
	0x03BDA480 BL 0x3BD9A3C
	0x03BDA484 TBZ X0, 0x0, 0x3BDA4D8
	0x03BDA488 CBZ X19, 0x3BDA508
	0x03BDA48C LDR X8, [X19]
	0x03BDA490 LDP X9, X1, [X8 + 0x178]
	0x03BDA494 MOV X0, X19
	0x03BDA498 BLR X9
	0x03BDA49C TBZ X0, 0x0, 0x3BDA4D8
	0x03BDA4A0 MOVZ W8, 0x1
	0x03BDA4A4 STR X19, [X20 + 0x30]
	0x03BDA4A8 STRB W8, [X20 + 0x18]
	0x03BDA4AC LDR X0, [X31 + 0x58]
	0x03BDA4B0 BL 0x3BDA5A0
	0x03BDA4B4 B 0x3BDA3D0
	0x03BDA4B8 BL 0x3BDA5A0
	0x03BDA4BC LDR X8, [X31 + 0x58]
	0x03BDA4C0 STP X31, X31, [X8 + 0x28]
	0x03BDA4C4 STR X31, [X8 + 0x38]
	0x03BDA4C8 CBZ X20, 0x3BDA4FC
	0x03BDA4CC MOV W0, W31
	0x03BDA4D0 STR X31, [X20 + 0x30]
	0x03BDA4D4 B 0x3BDA4E8
	0x03BDA4D8 LDR X8, [X31 + 0x58]
	0x03BDA4DC MOVZ W0, 0x1
	0x03BDA4E0 STR X31, [X8 + 0x18]
	0x03BDA4E4 STR W0, [X8 + 0x10]
	0x03BDA4E8 LDP X20, X19, [X31 + 0x60]
	0x03BDA4EC LDR X30, [X31 + 0x50]
	0x03BDA4F0 ADD X31, X31, 0x70
	0x03BDA4F4 RET
	0x03BDA4F8 BL 0x1C16F20
	0x03BDA4FC BL 0x1C16F20
	0x03BDA500 BL 0x1C16F20
	0x03BDA504 BL 0x1C16F20
	0x03BDA508 BL 0x1C16F20
	0x03BDA50C B 0x3BDA540
	0x03BDA510 B 0x3BDA540
	0x03BDA514 B 0x3BDA540
	0x03BDA518 B 0x3BDA540
	0x03BDA51C B 0x3BDA540
	0x03BDA520 B 0x3BDA540
	0x03BDA524 B 0x3BDA540
	0x03BDA528 B 0x3BDA540
	0x03BDA52C B 0x3BDA540
	0x03BDA530 B 0x3BDA540
	0x03BDA534 B 0x3BDA540
	0x03BDA538 B 0x3BDA540
	0x03BDA53C B 0x3BDA540
	0x03BDA540 CMP W1, 0x1
	0x03BDA544 B.NE 0x3BDA574
	0x03BDA548 BL 0x3EB1AD0
	0x03BDA54C LDR X19, [X0]
	0x03BDA550 STR X19, [X31 + 0x40]
	0x03BDA554 BL 0x3EB1AE0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x809000
	005 Move W8, [X20+3779]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x51A000
	012 Move X0, [X0+2600]
	013 Call 0x1C17CF4
	014 Move X0, 0x51A000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x584000
	018 Move X0, [X0+3480]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3779], W8
	022 Move W8, [X19+24]
	023 Compare W8, 0
	024 JumpIfEqual {51}
	025 Move X8, 0x51A000
	026 Move X8, [X8+1432]
	027 Move X20, [X19+48]
	028 Move X0, [X8]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X20
	034 Move X1, X31
	035 Move X2, X31
	036 Call Object.op_Inequality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {67}
	041 Move X0, [X19+48]
	042 Compare X0, 0
	043 JumpIfEqual {71}
	044 Move X8, [X0]
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X2, [X8+392]
	048 Move X1, [X8+400]
	049 Move X30, [X31+32]
	050 CallNoReturn X2
	051 Move X8, 0x51A000
	052 Move X8, [X8+2600]
	053 Move X0, [X8]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X8, 0x584000
	059 Move X8, [X8+3480]
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X1, X31
	063 Move X0, [X8]
	064 Move X30, [X31+32]
	065 Call Debug.LogWarning, X0
	066 Return 
	067 Move X20, [X31+16]
	068 Move X19, [X31+24]
	069 Move X30, [X31+32]
	070 Return 
	071 Call 0x1C17F20

Method: System.Void StopSubsystems()

Disassembly:
	0x03BDA604 BL 0x1C16D08
	0x03BDA608 BL 0x1C16F10
	0x03BDA60C MOV X1, X31
	0x03BDA610 MOV X19, X0
	0x03BDA614 BL 0x3380310
	0x03BDA618 ADRP X0, 0x583000
	0x03BDA61C LDR X0, [X0 + 0xE78]
	0x03BDA620 BL 0x1C16D08
	0x03BDA624 MOV X1, X0
	0x03BDA628 MOV X0, X19
	0x03BDA62C BL 0x1C16DEC
	0x03BDA630 LDR X0, [X0 + 0x18]
	0x03BDA634 RET
	0x03BDA638 STP X30, X23, [X31 - 0x30]!
	0x03BDA63C STP X22, X21, [X31 + 0x10]
	0x03BDA640 STP X20, X19, [X31 + 0x20]
	0x03BDA644 ADRP X23, 0x808000
	0x03BDA648 ADRP X22, 0x519000
	0x03BDA64C ADRP X20, 0x583000
	0x03BDA650 ADRP X21, 0x583000
	0x03BDA654 MOV X19, X8
	0x03BDA658 LDRB W8, [X23 + 0xECA]
	0x03BDA65C LDR X22, [X22 + 0x618]
	0x03BDA660 LDR X20, [X20 + 0xE80]
	0x03BDA664 LDR X21, [X21 + 0xE88]
	0x03BDA668 TBNZ X8, 0x0, 0x3BDA698
	0x03BDA66C ADRP X0, 0x519000
	0x03BDA670 LDR X0, [X0 + 0x618]
	0x03BDA674 BL 0x1C16CF4
	0x03BDA678 ADRP X0, 0x583000
	0x03BDA67C LDR X0, [X0 + 0xE80]
	0x03BDA680 BL 0x1C16CF4
	0x03BDA684 ADRP X0, 0x583000
	0x03BDA688 LDR X0, [X0 + 0xE88]
	0x03BDA68C BL 0x1C16CF4
	0x03BDA690 MOVZ W8, 0x1
	0x03BDA694 STRB W8, [X23 + 0xECA]
	0x03BDA698 LDR X0, [X22]
	0x03BDA69C MOVZ W1, 0x4B7
	0x03BDA6A0 BL 0x1C16D6C
	0x03BDA6A4 LDR X1, [X20]
	0x03BDA6A8 MOV X2, X31
	0x03BDA6AC MOV X20, X0
	0x03BDA6B0 BL 0x32C5BD8
	0x03BDA6B4 LDR X0, [X22]
	0x03BDA6B8 MOVZ W1, 0x414
	0x03BDA6BC BL 0x1C16D6C
	0x03BDA6C0 LDR X1, [X21]
	0x03BDA6C4 MOV X2, X31
	0x03BDA6C8 MOV X21, X0
	0x03BDA6CC BL 0x32C5BD8
	0x03BDA6D0 ADRP X8, 0xFFFFFFFFFCF14000
	0x03BDA6D4 LDR V0, [X8 + 0x248]
	0x03BDA6D8 STP X20, X21, [X19]
	0x03BDA6DC STRB W31, [X19 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x809000
	005 Move W8, [X20+3780]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x51A000
	012 Move X0, [X0+2600]
	013 Call 0x1C17CF4
	014 Move X0, 0x51A000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x584000
	018 Move X0, [X0+3488]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3780], W8
	022 Move W8, [X19+24]
	023 Compare W8, 0
	024 JumpIfEqual {51}
	025 Move X8, 0x51A000
	026 Move X8, [X8+1432]
	027 Move X20, [X19+48]
	028 Move X0, [X8]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X20
	034 Move X1, X31
	035 Move X2, X31
	036 Call Object.op_Inequality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {67}
	041 Move X0, [X19+48]
	042 Compare X0, 0
	043 JumpIfEqual {71}
	044 Move X8, [X0]
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X2, [X8+408]
	048 Move X1, [X8+416]
	049 Move X30, [X31+32]
	050 CallNoReturn X2
	051 Move X8, 0x51A000
	052 Move X8, [X8+2600]
	053 Move X0, [X8]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X8, 0x584000
	059 Move X8, [X8+3488]
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X1, X31
	063 Move X0, [X8]
	064 Move X30, [X31+32]
	065 Call Debug.LogWarning, X0
	066 Return 
	067 Move X20, [X31+16]
	068 Move X19, [X31+24]
	069 Move X30, [X31+32]
	070 Return 
	071 Call 0x1C17F20

Method: System.Void DeinitializeLoader()

Disassembly:
	0x03BDA6E0 STUR W31, [X19 + 0x19]
	0x03BDA6E4 STR D0, [X19 + 0x10]
	0x03BDA6E8 STR W31, [X19 + 0x1C]
	0x03BDA6EC LDP X20, X19, [X31 + 0x20]
	0x03BDA6F0 LDP X22, X21, [X31 + 0x10]
	0x03BDA6F4 LDP X30, X23, [X31], #0x30
	0x03BDA6F8 RET
	0x03BDA6FC MOV X1, X31
	0x03BDA700 B 0x33BDD8C
	0x03BDA704 STP D11, D10, [X31 - 0x30]!
	0x03BDA708 STP D9, D8, [X31 + 0x10]
	0x03BDA70C STR X30, [X31 + 0x20]
	0x03BDA710 MOV V8.16B, V7.16B
	0x03BDA714 MOV V9.16B, V6.16B
	0x03BDA718 MOV V10.16B, V5.16B
	0x03BDA71C MOV V11.16B, V4.16B
	0x03BDA720 BL 0x3BDD78C
	0x03BDA724 MOV V2.16B, V9.16B
	0x03BDA728 MOV V3.16B, V8.16B
	0x03BDA72C LDR X30, [X31 + 0x20]
	0x03BDA730 LDP D9, D8, [X31 + 0x10]
	0x03BDA734 MOV V0.16B, V11.16B
	0x03BDA738 MOV V1.16B, V10.16B
	0x03BDA73C LDP D11, D10, [X31], #0x30
	0x03BDA740 B 0x3BDD824
	0x03BDA744 B 0x3BDD78C
	0x03BDA748 B 0x3BDD824
	0x03BDA74C B 0x3BDE1FC
	0x03BDA750 B 0x3BDE1FC
	0x03BDA754 STP X30, X21, [X31 - 0x20]!
	0x03BDA758 STP X20, X19, [X31 + 0x10]
	0x03BDA75C ADRP X20, 0x808000
	0x03BDA760 ADRP X21, 0x583000
	0x03BDA764 LDRB W8, [X20 + 0xECC]
	0x03BDA768 LDR X21, [X21 + 0xE90]
	0x03BDA76C MOV X19, X0
	0x03BDA770 TBNZ X8, 0x0, 0x3BDA788
	0x03BDA774 ADRP X0, 0x583000
	0x03BDA778 LDR X0, [X0 + 0xE90]
	0x03BDA77C BL 0x1C16CF4
	0x03BDA780 MOVZ W8, 0x1
	0x03BDA784 STRB W8, [X20 + 0xECC]
	0x03BDA788 LDR X1, [X21]
	0x03BDA78C MOV X0, X19
	0x03BDA790 MOV X2, X31
	0x03BDA794 BL 0x321BA08
	0x03BDA798 TBZ X0, 0x0, 0x3BDA7AC
	0x03BDA79C LDP X20, X19, [X31 + 0x10]
	0x03BDA7A0 MOVZ W0, 0x1
	0x03BDA7A4 LDP X30, X21, [X31], #0x20
	0x03BDA7A8 B 0x3BDE514
	0x03BDA7AC LDP X20, X19, [X31 + 0x10]
	0x03BDA7B0 LDP X30, X21, [X31], #0x20
	0x03BDA7B4 RET
	0x03BDA7B8 AND W0, W0, 0x1
	0x03BDA7BC B 0x3BDE514
	0x03BDA7C0 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x809000
	005 Move W8, [X20+3781]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x51A000
	012 Move X0, [X0+2600]
	013 Call 0x1C17CF4
	014 Move X0, 0x51A000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x584000
	018 Move X0, [X0+3496]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3781], W8
	022 Move W8, [X19+24]
	023 Compare W8, 0
	024 JumpIfEqual {56}
	025 Move X20, 0x51A000
	026 Move X20, [X20+1432]
	027 Move X0, X19
	028 Call XRManagerSettings.StopSubsystems, X0
	029 Move X0, [X20]
	030 Move X20, [X19+48]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X20
	036 Move X1, X31
	037 Move X2, X31
	038 Call Object.op_Inequality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {51}
	043 Move X0, [X19+48]
	044 Compare X0, 0
	045 JumpIfEqual {72}
	046 Move X8, [X0]
	047 Move X9, [X8+424]
	048 Move X1, [X8+432]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move [X19+48], X31
	051 Move [X19+24], W31
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Return 
	056 Move X8, 0x51A000
	057 Move X8, [X8+2600]
	058 Move X0, [X8]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X8, 0x584000
	064 Move X8, [X8+3496]
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X1, X31
	068 Move X0, [X8]
	069 Move X30, [X31+32]
	070 Call Debug.LogWarning, X0
	071 Return 
	072 Call 0x1C17F20

Method: System.Void Start()

Disassembly:
	0x03BDB1A8 LDR X0, [X19]
	0x03BDB1AC MOV X1, X31
	0x03BDB1B0 LDP X30, X19, [X31], #0x10
	0x03BDB1B4 B 0x3C0649C
	0x03BDB1B8 B 0x3BDB1BC
	0x03BDB1BC SUB X31, X31, 0xC0

ISIL:
	001 Move W8, [X0+26]
	002 Compare W8, 0
	003 JumpIfEqual {9}
	004 Move W8, [X0+27]
	005 Compare W8, 0
	006 JumpIfEqual {9}
	007 Call XRManagerSettings.StartSubsystems, X0
	008 Return 
	009 Return 

Method: System.Void OnDisable()

Disassembly:
	0x03BDB1C0 STP X29, X30, [X31 + 0x60]
	0x03BDB1C4 STP X28, X27, [X31 + 0x70]
	0x03BDB1C8 STP X26, X25, [X31 + 0x80]
	0x03BDB1CC STP X24, X23, [X31 + 0x90]
	0x03BDB1D0 STP X22, X21, [X31 + 0xA0]
	0x03BDB1D4 STP X20, X19, [X31 + 0xB0]

ISIL:
	001 Move W8, [X0+26]
	002 Compare W8, 0
	003 JumpIfEqual {9}
	004 Move W8, [X0+27]
	005 Compare W8, 0
	006 JumpIfEqual {9}
	007 Call XRManagerSettings.StopSubsystems, X0
	008 Return 
	009 Return 

Method: System.Void OnDestroy()

Disassembly:
	0x03BDB1D8 ADRP X20, 0x807000
	0x03BDB1DC ADRP X19, 0x540000
	0x03BDB1E0 LDRB W8, [X20 + 0xEDD]
	0x03BDB1E4 LDR X19, [X19 + 0xEC0]

ISIL:
	001 Move W8, [X0+26]
	002 Compare W8, 0
	003 JumpIfEqual {6}
	004 Call XRManagerSettings.DeinitializeLoader, X0
	005 Return 
	006 Return 

Method: System.Collections.Generic.List`1<UnityEngine.XR.Management.XRLoader> get_currentLoaders()

Disassembly:
	0x03BDB1E8 TBNZ X8, 0x0, 0x3BDB2B4
	0x03BDB1EC ADRP X0, 0x540000

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_currentLoaders(System.Collections.Generic.List`1<UnityEngine.XR.Management.XRLoader> value)

Disassembly:
	0x03BDB1F0 LDR X0, [X0 + 0xEC0]
	0x03BDB1F4 BL 0x1C16CF4

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.Collections.Generic.HashSet`1<UnityEngine.XR.Management.XRLoader> get_registeredLoaders()

Disassembly:
	0x03BDB1F8 ADRP X0, 0x582000
	0x03BDB1FC LDR X0, [X0 + 0xED8]

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03BDB200 BL 0x1C16CF4
	0x03BDB204 ADRP X0, 0x582000
	0x03BDB208 LDR X0, [X0 + 0xEE0]
	0x03BDB20C BL 0x1C16CF4
	0x03BDB210 ADRP X0, 0x582000
	0x03BDB214 LDR X0, [X0 + 0xEE8]
	0x03BDB218 BL 0x1C16CF4
	0x03BDB21C ADRP X0, 0x582000
	0x03BDB220 LDR X0, [X0 + 0xEF0]
	0x03BDB224 BL 0x1C16CF4
	0x03BDB228 ADRP X0, 0x582000
	0x03BDB22C LDR X0, [X0 + 0xEF8]
	0x03BDB230 BL 0x1C16CF4
	0x03BDB234 ADRP X0, 0x582000
	0x03BDB238 LDR X0, [X0 + 0xF00]
	0x03BDB23C BL 0x1C16CF4
	0x03BDB240 ADRP X0, 0x582000
	0x03BDB244 LDR X0, [X0 + 0xF08]
	0x03BDB248 BL 0x1C16CF4
	0x03BDB24C ADRP X0, 0x540000
	0x03BDB250 LDR X0, [X0 + 0x270]
	0x03BDB254 BL 0x1C16CF4
	0x03BDB258 ADRP X0, 0x56D000
	0x03BDB25C LDR X0, [X0 + 0xFB0]
	0x03BDB260 BL 0x1C16CF4
	0x03BDB264 ADRP X0, 0x582000
	0x03BDB268 LDR X0, [X0 + 0xF10]
	0x03BDB26C BL 0x1C16CF4
	0x03BDB270 ADRP X0, 0x582000
	0x03BDB274 LDR X0, [X0 + 0xF18]
	0x03BDB278 BL 0x1C16CF4
	0x03BDB27C ADRP X0, 0x582000
	0x03BDB280 LDR X0, [X0 + 0xF20]
	0x03BDB284 BL 0x1C16CF4
	0x03BDB288 ADRP X0, 0x582000
	0x03BDB28C LDR X0, [X0 + 0xF28]
	0x03BDB290 BL 0x1C16CF4
	0x03BDB294 ADRP X0, 0x582000
	0x03BDB298 LDR X0, [X0 + 0xF30]
	0x03BDB29C BL 0x1C16CF4
	0x03BDB2A0 ADRP X0, 0x56E000
	0x03BDB2A4 LDR X0, [X0 + 0x18]
	0x03BDB2A8 BL 0x1C16CF4
	0x03BDB2AC MOVZ W8, 0x1
	0x03BDB2B0 STRB W8, [X20 + 0xEDD]
	0x03BDB2B4 LDR X0, [X19]
	0x03BDB2B8 STR X31, [X31 + 0x58]
	0x03BDB2BC ADRP X23, 0x56E000
	0x03BDB2C0 ADRP X24, 0x582000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x808000
	009 Move X24, 0x583000
	010 Move X20, 0x583000
	011 Move X22, 0x583000
	012 Move X21, 0x583000
	013 Move W8, [X23+3782]
	014 Move X24, [X24+3648]
	015 Move X20, [X20+3680]
	016 Move X22, [X22+3688]
	017 Move X21, [X21+3696]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x583000
	024 Move X0, [X0+3696]
	025 Call 0x1C17CF4
	026 Move X0, 0x583000
	027 Move X0, [X0+3688]
	028 Call 0x1C17CF4
	029 Move X0, 0x583000
	030 Move X0, [X0+3680]
	031 Call 0x1C17CF4
	032 Move X0, 0x583000
	033 Move X0, [X0+3648]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+3782], W8
	037 Move X0, [X24]
	038 Call 0x1C17F10
	039 Move X1, [X20]
	040 Move X20, X0
	041 Call List`1<Object>..ctor, X0
	042 Move [X19+32], X20
	043 Move X0, [X22]
	044 Call 0x1C17F10
	045 Move X1, [X21]
	046 Move X20, X0
	047 Call HashSet`1<Object>..ctor, X0
	048 Move [X19+40], X20
	049 Move X0, X19
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move X1, X31
	057 Move X30, [X31+64]
	058 Call ScriptableObject..ctor, X0
	059 Return 

