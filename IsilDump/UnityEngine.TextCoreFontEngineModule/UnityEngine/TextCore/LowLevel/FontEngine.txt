Type: UnityEngine.TextCore.LowLevel.FontEngine

Method: UnityEngine.TextCore.LowLevel.FontEngineError InitializeFontEngine()

Disassembly:
	0x03C9D624 STR W28, [X31 + 0x40]
	0x03C9D628 STR W27, [X31 + 0x48]
	0x03C9D62C ADRP X29, 0x4BB000
	0x03C9D630 LDR X29, [X29 + 0xBC0]
	0x03C9D634 STR W23, [X31 + 0xBC]
	0x03C9D638 LDR X8, [X29]
	0x03C9D63C LDR W9, [X8 + 0xE0]
	0x03C9D640 CBNZ W9, 0x3C9D650
	0x03C9D644 MOV X0, X8
	0x03C9D648 BL 0x1C16DFC
	0x03C9D64C LDR X8, [X29]
	0x03C9D650 LDR X9, [X8 + 0xB8]
	0x03C9D654 LDR X9, [X9 + 0x8]
	0x03C9D658 CBZ X9, 0x3C9D688
	0x03C9D65C LDR W10, [X8 + 0xE0]
	0x03C9D660 CBNZ W10, 0x3C9D67C
	0x03C9D664 MOV X0, X8
	0x03C9D668 BL 0x1C16DFC
	0x03C9D66C LDR X8, [X29]
	0x03C9D670 LDR X9, [X8 + 0xB8]
	0x03C9D674 LDR X9, [X9 + 0x8]
	0x03C9D678 CBZ X9, 0x3C9DDAC
	0x03C9D67C LDR W9, [X9 + 0x18]
	0x03C9D680 CMP W23, W9
	0x03C9D684 B.LE 0x3C9D6D0
	0x03C9D688 ADD W0, W23, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x74B000
	005 Move X20, 0x4BC000
	006 Move W8, [X19+482]
	007 Move X20, [X20+3008]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4BC000
	013 Move X0, [X0+3008]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+482], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X19, 0x74B000
	023 Move X0, [X19+488]
	024 Compare X0, 0
	025 JumpIfNotEqual {30}
	026 Move X0, -52015104
	027 Add X0, X0, 2108
	028 Call 0x1C17CB8
	029 Move [X19+488], X0
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 CallNoReturn X0

Method: System.Int32 InitializeFontEngine_Internal()

Disassembly:
	0x03C9D68C MOV X1, X31
	0x03C9D690 BL 0x3C2B340
	0x03C9D694 ADRP X8, 0x47F000
	0x03C9D698 LDR X8, [X8 + 0xD08]
	0x03C9D69C MOV W1, W0
	0x03C9D6A0 LDR X8, [X8]
	0x03C9D6A4 MOV X0, X8
	0x03C9D6A8 BL 0x1C16D6C
	0x03C9D6AC LDR X8, [X29]
	0x03C9D6B0 MOV X27, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x74B000
	004 Move X0, [X19+488]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -52015104
	008 Add X0, X0, 2108
	009 Call 0x1C17CB8
	010 Move [X19+488], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: UnityEngine.TextCore.LowLevel.FontEngineError LoadFontFace(System.String filePath, System.Int32 pointSize, System.Int32 faceIndex)

Disassembly:
	0x03C9D6B4 LDR W9, [X8 + 0xE0]
	0x03C9D6B8 CBNZ W9, 0x3C9D6C8
	0x03C9D6BC MOV X0, X8
	0x03C9D6C0 BL 0x1C16DFC
	0x03C9D6C4 LDR X8, [X29]
	0x03C9D6C8 LDR X9, [X8 + 0xB8]
	0x03C9D6CC STR X27, [X9 + 0x8]
	0x03C9D6D0 STR X22, [X31 + 0x38]
	0x03C9D6D4 CBZ X21, 0x3C9DDAC
	0x03C9D6D8 LDR W22, [X21 + 0x18]
	0x03C9D6DC STR W22, [X31 + 0xB8]
	0x03C9D6E0 CBZ X20, 0x3C9DDAC
	0x03C9D6E4 LDR W19, [X20 + 0x18]
	0x03C9D6E8 STR W19, [X31 + 0x7C]
	0x03C9D6EC LDR W9, [X8 + 0xE0]
	0x03C9D6F0 CBNZ W9, 0x3C9D700
	0x03C9D6F4 MOV X0, X8
	0x03C9D6F8 BL 0x1C16DFC
	0x03C9D6FC LDR X8, [X29]
	0x03C9D700 LDR X9, [X8 + 0xB8]
	0x03C9D704 STR X24, [X31 + 0x30]
	0x03C9D708 LDR X10, [X9 + 0x20]
	0x03C9D70C CBZ X10, 0x3C9DDAC
	0x03C9D710 LDR W10, [X10 + 0x18]
	0x03C9D714 ADD W11, W19, W22
	0x03C9D718 ADD W24, W11, W23
	0x03C9D71C CMP W24, W10
	0x03C9D720 B.GT 0x3C9D750
	0x03C9D724 LDR W10, [X8 + 0xE0]
	0x03C9D728 CBNZ W10, 0x3C9D73C
	0x03C9D72C MOV X0, X8
	0x03C9D730 BL 0x1C16DFC
	0x03C9D734 LDR X8, [X29]
	0x03C9D738 LDR X9, [X8 + 0xB8]
	0x03C9D73C LDR X9, [X9 + 0x28]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x74B000
	008 Move X23, 0x4BC000
	009 Move W8, [X22+496]
	010 Move X23, [X23+3008]
	011 Move W19, W2
	012 Move W20, W1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x4BC000
	019 Move X0, [X0+3008]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+496], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X22, 0x74B000
	029 Move X3, [X22+504]
	030 Compare X3, 0
	031 JumpIfNotEqual {37}
	032 Move X0, -51965952
	033 Add X0, X0, 2496
	034 Call 0x1C17CB8
	035 Move X3, X0
	036 Move [X22+504], X0
	037 Move X0, X21
	038 Move W1, W20
	039 Move W2, W19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Move X23, [X31+56]
	046 CallNoReturn X3

Method: System.Int32 LoadFontFace_With_Size_And_FaceIndex_Internal(System.String filePath, System.Int32 pointSize, System.Int32 faceIndex)

Disassembly:
	0x03C9D740 CBZ X9, 0x3C9DDAC
	0x03C9D744 LDR W9, [X9 + 0x18]
	0x03C9D748 CMP W24, W9
	0x03C9D74C B.LE 0x3C9D7B4
	0x03C9D750 ADD W0, W24, 0x1
	0x03C9D754 MOV X1, X31
	0x03C9D758 BL 0x3C2B340
	0x03C9D75C ADRP X24, 0x4C4000
	0x03C9D760 LDR X24, [X24 + 0x200]
	0x03C9D764 MOV W27, W0
	0x03C9D768 MOV W1, W27
	0x03C9D76C LDR X8, [X24]
	0x03C9D770 MOV X0, X8
	0x03C9D774 BL 0x1C16D6C
	0x03C9D778 LDR X8, [X29]
	0x03C9D77C MOV X28, X0
	0x03C9D780 LDR W9, [X8 + 0xE0]
	0x03C9D784 CBNZ W9, 0x3C9D794
	0x03C9D788 MOV X0, X8
	0x03C9D78C BL 0x1C16DFC
	0x03C9D790 LDR X8, [X29]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x74B000
	007 Move X3, [X22+504]
	008 Move W19, W2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51965952
	014 Add X0, X0, 2496
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+504], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move W2, W19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: UnityEngine.TextCore.LowLevel.FontEngineError LoadFontFace(UnityEngine.Font font, System.Int32 pointSize)

Disassembly:
	0x03C9D794 LDR X8, [X8 + 0xB8]
	0x03C9D798 MOV W1, W27
	0x03C9D79C STR X28, [X8 + 0x20]
	0x03C9D7A0 LDR X0, [X24]
	0x03C9D7A4 BL 0x1C16D6C
	0x03C9D7A8 LDR X8, [X29]
	0x03C9D7AC LDR X9, [X8 + 0xB8]
	0x03C9D7B0 STR X0, [X9 + 0x28]
	0x03C9D7B4 LDR W9, [X8 + 0xE0]
	0x03C9D7B8 CBNZ W9, 0x3C9D7C8
	0x03C9D7BC MOV X0, X8
	0x03C9D7C0 BL 0x1C16DFC
	0x03C9D7C4 LDR X8, [X29]
	0x03C9D7C8 LDR X9, [X8 + 0xB8]
	0x03C9D7CC LDR X9, [X9 + 0x18]
	0x03C9D7D0 CBZ X9, 0x3C9DDAC
	0x03C9D7D4 LDR W9, [X9 + 0x18]
	0x03C9D7D8 CMP W23, W9
	0x03C9D7DC B.LE 0x3C9D828
	0x03C9D7E0 ADD W0, W23, 0x1
	0x03C9D7E4 MOV X1, X31
	0x03C9D7E8 BL 0x3C2B340
	0x03C9D7EC ADRP X8, 0x4C4000
	0x03C9D7F0 LDR X8, [X8 + 0x218]
	0x03C9D7F4 MOV W1, W0
	0x03C9D7F8 LDR X8, [X8]
	0x03C9D7FC MOV X0, X8
	0x03C9D800 BL 0x1C16D6C
	0x03C9D804 LDR X8, [X29]
	0x03C9D808 MOV X27, X0
	0x03C9D80C LDR W9, [X8 + 0xE0]
	0x03C9D810 CBNZ W9, 0x3C9D820
	0x03C9D814 MOV X0, X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x74B000
	007 Move X22, 0x4BC000
	008 Move W8, [X21+512]
	009 Move X22, [X22+3008]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x4BC000
	017 Move X0, [X0+3008]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+512], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X21, 0x74B000
	027 Move X2, [X21+520]
	028 Compare X2, 0
	029 JumpIfNotEqual {35}
	030 Move X0, -51916800
	031 Add X0, X0, 1204
	032 Call 0x1C17CB8
	033 Move X2, X0
	034 Move [X21+520], X0
	035 Move X0, X20
	036 Move W1, W19
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 CallNoReturn X2

Method: System.Int32 LoadFontFace_With_Size_FromFont_Internal(UnityEngine.Font font, System.Int32 pointSize)

Disassembly:
	0x03C9D818 BL 0x1C16DFC
	0x03C9D81C LDR X8, [X29]
	0x03C9D820 LDR X9, [X8 + 0xB8]
	0x03C9D824 STR X27, [X9 + 0x18]
	0x03C9D828 CMP W19, W23
	0x03C9D82C CSEL W9, W23, W19, LT
	0x03C9D830 CMP W9, W22
	0x03C9D834 CSEL W9, W9, W22, GT
	0x03C9D838 CMP W9, 0x1
	0x03C9D83C B.LT 0x3C9D978
	0x03C9D840 STR W25, [X31 + 0x2C]
	0x03C9D844 ADRP X28, 0x4BB000
	0x03C9D848 ADRP X25, 0x4C4000
	0x03C9D84C LDR X28, [X28 + 0x860]
	0x03C9D850 LDR X25, [X25 + 0x210]
	0x03C9D854 MOV W8, W9
	0x03C9D858 MOV X27, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x74B000
	006 Move X2, [X21+520]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51916800
	012 Add X0, X0, 1204
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+520], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: UnityEngine.TextCore.LowLevel.FontEngineError LoadFontFace(UnityEngine.Font font, System.Int32 pointSize, System.Int32 faceIndex)

Disassembly:
	0x03C9D85C MOVZ W19, 0x20
	0x03C9D860 SUB X24, X8, 0x1
	0x03C9D864 CMP X27, W23, SXTW
	0x03C9D868 B.GE 0x3C9D8B4
	0x03C9D86C LDR X0, [X29]
	0x03C9D870 LDR W8, [X0 + 0xE0]
	0x03C9D874 CBNZ W8, 0x3C9D880
	0x03C9D878 BL 0x1C16DFC
	0x03C9D87C LDR X0, [X29]
	0x03C9D880 LDR X8, [X0 + 0xB8]
	0x03C9D884 LDR X2, [X28]
	0x03C9D888 MOV X0, X26
	0x03C9D88C MOV W1, W27
	0x03C9D890 LDR X22, [X8 + 0x8]
	0x03C9D894 BL 0x30C13A8
	0x03C9D898 CBZ X22, 0x3C9DDAC
	0x03C9D89C LDR W8, [X22 + 0x18]
	0x03C9D8A0 CMP X27, X8
	0x03C9D8A4 B.CS 0x3C9DDB0
	0x03C9D8A8 ADD X8, X22, X27, 0x2, LSL
	0x03C9D8AC STR W0, [X8 + 0x20]
	0x03C9D8B0 LDR W22, [X31 + 0xB8]
	0x03C9D8B4 CMP X27, W22, SXTW
	0x03C9D8B8 B.GE 0x3C9D900
	0x03C9D8BC LDR X0, [X29]
	0x03C9D8C0 LDR W8, [X0 + 0xE0]
	0x03C9D8C4 CBNZ W8, 0x3C9D8D0
	0x03C9D8C8 BL 0x1C16DFC
	0x03C9D8CC LDR X0, [X29]
	0x03C9D8D0 LDR X8, [X0 + 0xB8]
	0x03C9D8D4 LDR X2, [X25]
	0x03C9D8D8 MOV X0, X21
	0x03C9D8DC MOV W1, W27
	0x03C9D8E0 LDR X23, [X8 + 0x20]
	0x03C9D8E4 BL 0x2FC5398

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x74B000
	008 Move X23, 0x4BC000
	009 Move W8, [X22+528]
	010 Move X23, [X23+3008]
	011 Move W19, W2
	012 Move W20, W1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x4BC000
	019 Move X0, [X0+3008]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+528], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X22, 0x74B000
	029 Move X3, [X22+536]
	030 Compare X3, 0
	031 JumpIfNotEqual {37}
	032 Move X0, -52023296
	033 Add X0, X0, 2334
	034 Call 0x1C17CB8
	035 Move X3, X0
	036 Move [X22+536], X0
	037 Move X0, X21
	038 Move W1, W20
	039 Move W2, W19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Move X23, [X31+56]
	046 CallNoReturn X3

Method: System.Int32 LoadFontFace_With_Size_and_FaceIndex_FromFont_Internal(UnityEngine.Font font, System.Int32 pointSize, System.Int32 faceIndex)

Disassembly:
	0x03C9D8E8 CBZ X23, 0x3C9DDAC
	0x03C9D8EC LDR W8, [X23 + 0x18]
	0x03C9D8F0 CMP X27, X8
	0x03C9D8F4 B.CS 0x3C9DDB0
	0x03C9D8F8 ADD X8, X23, X19
	0x03C9D8FC STP X0, X1, [X8]
	0x03C9D900 LDRSW X8, [X31 + 0x7C]
	0x03C9D904 CMP X27, X8
	0x03C9D908 B.GE 0x3C9D950
	0x03C9D90C LDR X0, [X29]
	0x03C9D910 LDR W8, [X0 + 0xE0]
	0x03C9D914 CBNZ W8, 0x3C9D920
	0x03C9D918 BL 0x1C16DFC
	0x03C9D91C LDR X0, [X29]
	0x03C9D920 LDR X8, [X0 + 0xB8]
	0x03C9D924 LDR X2, [X25]
	0x03C9D928 MOV X0, X20
	0x03C9D92C MOV W1, W27
	0x03C9D930 LDR X23, [X8 + 0x28]
	0x03C9D934 BL 0x2FC5398
	0x03C9D938 CBZ X23, 0x3C9DDAC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x74B000
	007 Move X3, [X22+536]
	008 Move W19, W2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -52023296
	014 Add X0, X0, 2334
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+536], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move W2, W19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: UnityEngine.TextCore.LowLevel.FontEngineError LoadFontFace(System.String familyName, System.String styleName, System.Int32 pointSize)

Disassembly:
	0x03C9D93C LDR W8, [X23 + 0x18]
	0x03C9D940 CMP X27, X8
	0x03C9D944 B.CS 0x3C9DDB0
	0x03C9D948 ADD X8, X23, X19
	0x03C9D94C STP X0, X1, [X8]
	0x03C9D950 CMP X24, X27
	0x03C9D954 B.EQ 0x3C9D970
	0x03C9D958 LDR W23, [X31 + 0xBC]
	0x03C9D95C ADD X27, X27, 0x1
	0x03C9D960 ADD X19, X19, 0x10
	0x03C9D964 B 0x3C9D864
	0x03C9D968 MOV W10, W31
	0x03C9D96C B 0x3C9DD84
	0x03C9D970 LDR X8, [X29]
	0x03C9D974 LDR W25, [X31 + 0x2C]
	0x03C9D978 LDR W9, [X8 + 0xE0]
	0x03C9D97C CBNZ W9, 0x3C9D98C
	0x03C9D980 MOV X0, X8
	0x03C9D984 BL 0x1C16DFC
	0x03C9D988 LDR X8, [X29]
	0x03C9D98C LDR X9, [X8 + 0xB8]
	0x03C9D990 ADRP X22, 0x74A000
	0x03C9D994 LDR X8, [X22 + 0x298]
	0x03C9D998 LDR X28, [X9 + 0x8]
	0x03C9D99C LDP X27, X26, [X9 + 0x20]
	0x03C9D9A0 LDR X19, [X9 + 0x18]
	0x03C9D9A4 CBNZ X8, 0x3C9D9BC
	0x03C9D9A8 ADRP X0, 0xFFFFFFFFFCE70000
	0x03C9D9AC ADD X0, X0, 0xA41
	0x03C9D9B0 BL 0x1C16CB8
	0x03C9D9B4 MOV X8, X0
	0x03C9D9B8 STR X0, [X22 + 0x298]
	0x03C9D9BC ADD X9, X31, 0xBC
	0x03C9D9C0 STP X19, X9, [X31 + 0x8]
	0x03C9D9C4 LDR X9, [X31 + 0x38]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x74B000
	008 Move X23, 0x4BC000
	009 Move W8, [X22+544]
	010 Move X23, [X23+3008]
	011 Move W19, W2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x4BC000
	019 Move X0, [X0+3008]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+544], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X22, 0x74B000
	029 Move X3, [X22+552]
	030 Compare X3, 0
	031 JumpIfNotEqual {37}
	032 Move X0, -51957760
	033 Add X0, X0, 3203
	034 Call 0x1C17CB8
	035 Move X3, X0
	036 Move [X22+552], X0
	037 Move X0, X21
	038 Move X1, X20
	039 Move W2, W19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Move X23, [X31+56]
	046 CallNoReturn X3

Method: System.Int32 LoadFontFace_With_Size_by_FamilyName_and_StyleName_Internal(System.String familyName, System.String styleName, System.Int32 pointSize)

Disassembly:
	0x03C9D9C8 LDR W1, [X31 + 0x40]
	0x03C9D9CC LDR W2, [X31 + 0x48]
	0x03C9D9D0 ADD X4, X31, 0xB8
	0x03C9D9D4 ADD X6, X31, 0x7C
	0x03C9D9D8 MOV X0, X28
	0x03C9D9DC MOV X3, X27
	0x03C9D9E0 MOV X5, X26
	0x03C9D9E4 MOV W7, W25
	0x03C9D9E8 STR X9, [X31]
	0x03C9D9EC BLR X8
	0x03C9D9F0 LDR X8, [X29]
	0x03C9D9F4 MOV W19, W0
	0x03C9D9F8 LDR X9, [X8 + 0xB8]
	0x03C9D9FC LDR X9, [X9]
	0x03C9DA00 CBZ X9, 0x3C9DA38
	0x03C9DA04 LDR W10, [X8 + 0xE0]
	0x03C9DA08 CBNZ W10, 0x3C9DA24
	0x03C9DA0C MOV X0, X8
	0x03C9DA10 BL 0x1C16DFC
	0x03C9DA14 LDR X8, [X29]
	0x03C9DA18 LDR X9, [X8 + 0xB8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x74B000
	007 Move X3, [X22+552]
	008 Move W19, W2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51957760
	014 Add X0, X0, 3203
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+552], X0
	018 Move X0, X21
	019 Move X1, X20
	020 Move W2, W19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Boolean TryGetSystemFontReference(System.String familyName, System.String styleName, out UnityEngine.TextCore.LowLevel.FontReference fontRef)

Disassembly:
	0x03C9DA1C LDR X9, [X9]
	0x03C9DA20 CBZ X9, 0x3C9DDAC
	0x03C9DA24 LDR W10, [X31 + 0xBC]
	0x03C9DA28 LDR W9, [X9 + 0x18]
	0x03C9DA2C CMP W10, W9
	0x03C9DA30 B.GE 0x3C9DA3C
	0x03C9DA34 B 0x3C9DA88
	0x03C9DA38 LDR W10, [X31 + 0xBC]
	0x03C9DA3C ADD W0, W10, 0x1
	0x03C9DA40 MOV X1, X31
	0x03C9DA44 BL 0x3C2B340
	0x03C9DA48 ADRP X8, 0x4C4000
	0x03C9DA4C LDR X8, [X8 + 0x220]
	0x03C9DA50 MOV W1, W0
	0x03C9DA54 LDR X8, [X8]
	0x03C9DA58 MOV X0, X8
	0x03C9DA5C BL 0x1C16D6C
	0x03C9DA60 LDR X8, [X29]
	0x03C9DA64 MOV X23, X0
	0x03C9DA68 LDR W9, [X8 + 0xE0]
	0x03C9DA6C CBNZ W9, 0x3C9DA7C
	0x03C9DA70 MOV X0, X8
	0x03C9DA74 BL 0x1C16DFC
	0x03C9DA78 LDR X8, [X29]
	0x03C9DA7C LDR X8, [X8 + 0xB8]
	0x03C9DA80 STR X23, [X8]
	0x03C9DA84 LDR X8, [X29]
	0x03C9DA88 LDR W9, [X8 + 0xE0]
	0x03C9DA8C CBNZ W9, 0x3C9DA9C
	0x03C9DA90 MOV X0, X8
	0x03C9DA94 BL 0x1C16DFC
	0x03C9DA98 LDR X8, [X29]
	0x03C9DA9C LDR X8, [X8 + 0xB8]
	0x03C9DAA0 LDR X9, [X8]
	0x03C9DAA4 CBZ X9, 0x3C9DDAC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x74B000
	008 Move X23, 0x4BC000
	009 Move W8, [X22+560]
	010 Move X23, [X23+3008]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x4BC000
	019 Move X0, [X0+3008]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+560], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X22, 0x74B000
	029 Move X3, [X22+568]
	030 Compare X3, 0
	031 JumpIfNotEqual {37}
	032 Move X0, -52031488
	033 Add X0, X0, 2935
	034 Call 0x1C17CB8
	035 Move X3, X0
	036 Move [X22+568], X0
	037 Move X0, X21
	038 Move X1, X20
	039 Move X2, X19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Move X23, [X31+56]
	046 CallNoReturn X3

Method: System.Boolean TryGetSystemFontReference_Internal(System.String familyName, System.String styleName, out UnityEngine.TextCore.LowLevel.FontReference fontRef)

Disassembly:
	0x03C9DAA8 LDR W8, [X31 + 0xBC]
	0x03C9DAAC LDR W10, [X9 + 0x18]
	0x03C9DAB0 STR W19, [X31 + 0x38]
	0x03C9DAB4 CMP W8, W10
	0x03C9DAB8 B.CS 0x3C9DDB0
	0x03C9DABC SXTW X10, W8
	0x03C9DAC0 ADD X9, X9, X10, 0x3, LSL
	0x03C9DAC4 STR X31, [X9 + 0x20]
	0x03C9DAC8 LDR W9, [X21 + 0x1C]
	0x03C9DACC ADD W9, W9, 0x1
	0x03C9DAD0 STP W31, W9, [X21 + 0x18]
	0x03C9DAD4 LDR W9, [X20 + 0x1C]
	0x03C9DAD8 ADD W9, W9, 0x1
	0x03C9DADC STP W31, W9, [X20 + 0x18]
	0x03C9DAE0 LDR W9, [X31 + 0x7C]
	0x03C9DAE4 LDR W10, [X31 + 0xB8]
	0x03C9DAE8 CMP W9, W8
	0x03C9DAEC CSEL W9, W8, W9, LT
	0x03C9DAF0 CMP W9, W10
	0x03C9DAF4 CSEL W9, W9, W10, GT
	0x03C9DAF8 CMP W9, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x74B000
	007 Move X3, [X22+568]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -52031488
	014 Add X0, X0, 2935
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+568], X0
	018 Move X0, X21
	019 Move X1, X20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: UnityEngine.TextCore.FaceInfo GetFaceInfo()

Disassembly:
	0x03C9DAFC B.LT 0x3C9DD5C
	0x03C9DB00 ADD X10, X31, 0x80
	0x03C9DB04 ADD X10, X10, 0x14
	0x03C9DB08 STR X10, [X31 + 0x48]
	0x03C9DB0C ADRP X22, 0x4BB000
	0x03C9DB10 LDR X22, [X22 + 0xBC8]
	0x03C9DB14 MOV W9, W9
	0x03C9DB18 UBFM X9, X9, 0x3C, 0x3B
	0x03C9DB1C MOV X24, X31
	0x03C9DB20 MOV X25, X31
	0x03C9DB24 MOV X26, X31
	0x03C9DB28 SUB X19, X9, 0x10
	0x03C9DB2C STR X20, [X31 + 0x40]
	0x03C9DB30 CMP X26, W8, SXTW
	0x03C9DB34 B.GE 0x3C9DC20
	0x03C9DB38 LDR X0, [X29]
	0x03C9DB3C LDR W8, [X0 + 0xE0]
	0x03C9DB40 CBNZ W8, 0x3C9DB4C
	0x03C9DB44 BL 0x1C16DFC
	0x03C9DB48 LDR X0, [X29]
	0x03C9DB4C LDR X9, [X0 + 0xB8]
	0x03C9DB50 LDR X8, [X9 + 0x18]
	0x03C9DB54 CBZ X8, 0x3C9DDAC
	0x03C9DB58 LDR W10, [X8 + 0x18]
	0x03C9DB5C CMP X26, X10
	0x03C9DB60 B.CS 0x3C9DDB0
	0x03C9DB64 ADD X8, X8, X24
	0x03C9DB68 LDR X27, [X9]
	0x03C9DB6C LDR W9, [X8 + 0x44]
	0x03C9DB70 LDUR V0, [X8 + 0x34]
	0x03C9DB74 LDUR V1, [X8 + 0x24]
	0x03C9DB78 MOV X20, X29
	0x03C9DB7C MOV X29, X22
	0x03C9DB80 LDR W22, [X8 + 0x20]
	0x03C9DB84 STR W9, [X31 + 0x70]
	0x03C9DB88 STP V1, V0, [X31 + 0x50]
	0x03C9DB8C LDR V8, [X8 + 0x48]
	0x03C9DB90 LDR W28, [X8 + 0x4C]
	0x03C9DB94 ADRP X8, 0x4BB000
	0x03C9DB98 LDR X8, [X8 + 0xC08]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+96], X30
	003 Move [X31+104], X21
	004 Move [X31+112], X20
	005 Move [X31+120], X19
	006 Move X21, 0x74B000
	007 Move X20, 0x4BC000
	008 Move X19, X8
	009 Move W8, [X21+576]
	010 Move X20, [X20+3008]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x4BC000
	016 Move X0, [X0+3008]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+576], W8
	020 Move X0, [X20]
	021 NotImplemented "Instruction MOVI not yet implemented."
	022 Move [X31+64], V0
	023 Move [X31+72], V0
	024 Move [X31+32], V0
	025 Move [X31+40], V0
	026 Move [X31], V0
	027 Move [X31+8], V0
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X20, 0x74B000
	033 Move X8, [X20+584]
	034 Compare X8, 0
	035 JumpIfNotEqual {41}
	036 Move X0, -52006912
	037 Add X0, X0, 2874
	038 Call 0x1C17CB8
	039 Move X8, X0
	040 Move [X20+584], X0
	041 Add X0, X31, 0
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Add X1, X31, 0
	044 Move W2, 96
	045 Move X0, X19
	046 Call 0x3EB2AC0
	047 Move X20, [X31+112]
	048 Move X19, [X31+120]
	049 Move X30, [X31+96]
	050 Move X21, [X31+104]
	051 Add X31, X31, 128
	052 Return X0

Method: System.Int32 GetFaceInfo_Internal(ref UnityEngine.TextCore.FaceInfo faceInfo)

Disassembly:
	0x03C9DB9C LDR X0, [X8]
	0x03C9DBA0 BL 0x1C16F10
	0x03C9DBA4 MOV X1, X31
	0x03C9DBA8 MOV X23, X0
	0x03C9DBAC BL 0x33BDD8C
	0x03C9DBB0 STR W22, [X23 + 0x10]
	0x03C9DBB4 LDR W8, [X31 + 0x60]
	0x03C9DBB8 LDP V0, V1, [X31 + 0x50]
	0x03C9DBBC STR W8, [X23 + 0x24]
	0x03C9DBC0 STUR V0, [X23 + 0x14]
	0x03C9DBC4 LDR W8, [X31 + 0x70]
	0x03C9DBC8 LDR V0, [X31 + 0x5]
	0x03C9DBCC STR W8, [X31 + 0xA0]
	0x03C9DBD0 LDR X8, [X31 + 0x48]
	0x03C9DBD4 STP V0, V1, [X31 + 0x80]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x74B000
	005 Move X1, [X20+584]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -52006912
	010 Add X0, X0, 2874
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+584], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.UInt32 GetGlyphIndex(System.UInt32 unicode)

Disassembly:
	0x03C9DBD8 LDR V0, [X8]
	0x03C9DBDC STR S8, [X23 + 0x38]
	0x03C9DBE0 STR W28, [X23 + 0x3C]
	0x03C9DBE4 STUR V0, [X23 + 0x28]
	0x03C9DBE8 CBZ X27, 0x3C9DDAC
	0x03C9DBEC LDR X8, [X27]
	0x03C9DBF0 MOV X0, X23
	0x03C9DBF4 LDR X1, [X8 + 0x40]
	0x03C9DBF8 BL 0x1C16E00
	0x03C9DBFC CBZ X0, 0x3C9DDB4
	0x03C9DC00 LDR W8, [X27 + 0x18]
	0x03C9DC04 CMP X26, X8
	0x03C9DC08 B.CS 0x3C9DDB0
	0x03C9DC0C MOV X22, X29
	0x03C9DC10 MOV X29, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x74B000
	005 Move X1, [X20+592]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51990528
	010 Add X0, X0, 2756
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+592], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Boolean TryGetGlyphWithUnicodeValue(System.UInt32 unicode, UnityEngine.TextCore.LowLevel.GlyphLoadFlags flags, out UnityEngine.TextCore.Glyph glyph)

Disassembly:
	0x03C9DC14 LDR X20, [X31 + 0x40]
	0x03C9DC18 ADD X8, X27, X26, 0x3, LSL
	0x03C9DC1C STR X23, [X8 + 0x20]
	0x03C9DC20 LDRSW X8, [X31 + 0xB8]
	0x03C9DC24 CMP X26, X8
	0x03C9DC28 B.GE 0x3C9DCB0
	0x03C9DC2C LDR X0, [X29]
	0x03C9DC30 LDR W8, [X0 + 0xE0]
	0x03C9DC34 CBNZ W8, 0x3C9DC40
	0x03C9DC38 BL 0x1C16DFC
	0x03C9DC3C LDR X0, [X29]
	0x03C9DC40 LDR X8, [X0 + 0xB8]
	0x03C9DC44 LDR X8, [X8 + 0x20]
	0x03C9DC48 CBZ X8, 0x3C9DDAC
	0x03C9DC4C LDR W9, [X8 + 0x18]
	0x03C9DC50 CMP X26, X9
	0x03C9DC54 B.CS 0x3C9DDB0
	0x03C9DC58 ADD X8, X8, X25
	0x03C9DC5C LDR W10, [X21 + 0x1C]
	0x03C9DC60 LDP X1, X2, [X8 + 0x20]
	0x03C9DC64 LDR X8, [X21 + 0x10]
	0x03C9DC68 LDR X9, [X22]
	0x03C9DC6C ADD W10, W10, 0x1
	0x03C9DC70 STR W10, [X21 + 0x1C]
	0x03C9DC74 CBZ X8, 0x3C9DDAC
	0x03C9DC78 LDRSW X10, [X21 + 0x18]
	0x03C9DC7C LDR W11, [X8 + 0x18]
	0x03C9DC80 CMP W10, W11
	0x03C9DC84 B.CS 0x3C9DC9C
	0x03C9DC88 ADD W9, W10, 0x1
	0x03C9DC8C ADD X8, X8, X10, 0x4, LSL
	0x03C9DC90 STR W9, [X21 + 0x18]
	0x03C9DC94 STP X1, X2, [X8 + 0x20]
	0x03C9DC98 B 0x3C9DCB0
	0x03C9DC9C LDR X8, [X9 + 0x20]
	0x03C9DCA0 MOV X0, X21
	0x03C9DCA4 LDR X8, [X8 + 0xC0]
	0x03C9DCA8 LDR X3, [X8 + 0x70]
	0x03C9DCAC BL 0x2FC569C
	0x03C9DCB0 LDRSW X8, [X31 + 0x7C]
	0x03C9DCB4 CMP X26, X8
	0x03C9DCB8 B.GE 0x3C9DD40
	0x03C9DCBC LDR X0, [X29]
	0x03C9DCC0 LDR W8, [X0 + 0xE0]
	0x03C9DCC4 CBNZ W8, 0x3C9DCD0
	0x03C9DCC8 BL 0x1C16DFC
	0x03C9DCCC LDR X0, [X29]
	0x03C9DCD0 LDR X8, [X0 + 0xB8]
	0x03C9DCD4 LDR X8, [X8 + 0x28]
	0x03C9DCD8 CBZ X8, 0x3C9DDAC
	0x03C9DCDC LDR W9, [X8 + 0x18]
	0x03C9DCE0 CMP X26, X9
	0x03C9DCE4 B.CS 0x3C9DDB0
	0x03C9DCE8 ADD X8, X8, X25
	0x03C9DCEC LDR W10, [X20 + 0x1C]
	0x03C9DCF0 LDP X1, X2, [X8 + 0x20]
	0x03C9DCF4 LDR X8, [X20 + 0x10]
	0x03C9DCF8 LDR X9, [X22]
	0x03C9DCFC ADD W10, W10, 0x1
	0x03C9DD00 STR W10, [X20 + 0x1C]
	0x03C9DD04 CBZ X8, 0x3C9DDAC
	0x03C9DD08 LDRSW X10, [X20 + 0x18]
	0x03C9DD0C LDR W11, [X8 + 0x18]
	0x03C9DD10 CMP W10, W11
	0x03C9DD14 B.CS 0x3C9DD2C
	0x03C9DD18 ADD W9, W10, 0x1
	0x03C9DD1C ADD X8, X8, X10, 0x4, LSL
	0x03C9DD20 STR W9, [X20 + 0x18]
	0x03C9DD24 STP X1, X2, [X8 + 0x20]
	0x03C9DD28 B 0x3C9DD40
	0x03C9DD2C LDR X8, [X9 + 0x20]
	0x03C9DD30 MOV X0, X20
	0x03C9DD34 LDR X8, [X8 + 0xC0]
	0x03C9DD38 LDR X3, [X8 + 0x70]
	0x03C9DD3C BL 0x2FC569C
	0x03C9DD40 CMP X19, X25
	0x03C9DD44 B.EQ 0x3C9DD5C
	0x03C9DD48 LDR W8, [X31 + 0xBC]
	0x03C9DD4C ADD X26, X26, 0x1
	0x03C9DD50 ADD X25, X25, 0x10
	0x03C9DD54 ADD X24, X24, 0x34

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+160], D8
	003 Move [X31+176], X30
	004 Move [X31+184], X23
	005 Move [X31+192], X22
	006 Move [X31+200], X21
	007 Move [X31+208], X20
	008 Move [X31+216], X19
	009 Move X23, 0x74B000
	010 Move X22, 0x4BC000
	011 Move W8, [X23+600]
	012 Move X22, [X22+3008]
	013 Move X19, X2
	014 Move W20, W1
	015 Move W21, W0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x4BC000
	021 Move X0, [X0+3008]
	022 Call 0x1C17CF4
	023 Move X0, 0x4BC000
	024 Move X0, [X0+3080]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+600], W8
	028 Move X0, [X22]
	029 NotImplemented "Instruction MOVI not yet implemented."
	030 Move [X31+96], W31
	031 Move [X31+64], V0
	032 Move [X31+72], V0
	033 Move [X31+3], V0
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X22, 0x74B000
	039 Move X8, [X22+608]
	040 Compare X8, 0
	041 JumpIfNotEqual {47}
	042 Move X0, -51933184
	043 Add X0, X0, 579
	044 Call 0x1C17CB8
	045 Move X8, X0
	046 Move [X22+608], X0
	047 Add X2, X31, 48
	048 Move W0, W21
	049 Move W1, W20
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move W20, W0
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {87}
	056 Move X9, 0x4BC000
	057 Move W22, [X31+48]
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 Move W8, [X31+84]
	061 Move V8, [X31+88]
	062 Move W23, [X31+92]
	063 Move X9, [X9+3080]
	064 Move [X31], V0
	065 Move [X31+8], V1
	066 Move [X31+32], W8
	067 Move X0, [X9]
	068 Call 0x1C17F10
	069 Move X1, X31
	070 Move X21, X0
	071 Call Object..ctor, X0
	072 Move [X21+16], W22
	073 Move W8, [X31+16]
	074 Move V0, [X31]
	075 Move [X21+36], W8
	076 Move [X21+20], V0
	077 Move W8, [X31+32]
	078 Move V1, [X31]
	079 Move V0, [X31+16]
	080 Move [X31+144], W8
	081 Move [X31+112], V1
	082 Move [X31+120], V0
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 Move [X21+56], S8
	085 Move [X21+60], W23
	086 Move [X21+40], V0
	087 Move X21, X31
	088 And W0, W20, 1
	089 Move [X19], X21
	090 Move X20, [X31+208]
	091 Move X19, [X31+216]
	092 Move X22, [X31+192]
	093 Move X21, [X31+200]
	094 Move X30, [X31+176]
	095 Move X23, [X31+184]
	096 Move V8, [X31+160]
	097 Add X31, X31, 224
	098 Return X0

Method: System.Boolean TryGetGlyphWithUnicodeValue_Internal(System.UInt32 unicode, UnityEngine.TextCore.LowLevel.GlyphLoadFlags loadFlags, ref UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct glyphStruct)

Disassembly:
	0x03C9DD58 B 0x3C9DB30
	0x03C9DD5C LDR X0, [X29]
	0x03C9DD60 LDR W8, [X0 + 0xE0]
	0x03C9DD64 CBNZ W8, 0x3C9DD70
	0x03C9DD68 BL 0x1C16DFC
	0x03C9DD6C LDR X0, [X29]
	0x03C9DD70 LDR X8, [X0 + 0xB8]
	0x03C9DD74 LDR X9, [X31 + 0x30]
	0x03C9DD78 LDR W10, [X31 + 0x38]
	0x03C9DD7C LDR X8, [X8]
	0x03C9DD80 STR X8, [X9]
	0x03C9DD84 LDP X20, X19, [X31 + 0x110]
	0x03C9DD88 LDP X22, X21, [X31 + 0x100]
	0x03C9DD8C LDP X24, X23, [X31 + 0xF0]
	0x03C9DD90 LDP X26, X25, [X31 + 0xE0]
	0x03C9DD94 LDP X28, X27, [X31 + 0xD0]
	0x03C9DD98 LDP X29, X30, [X31 + 0xC0]
	0x03C9DD9C LDR V8, [X31 + 0xB0]
	0x03C9DDA0 AND W0, W10, 0x1
	0x03C9DDA4 ADD X31, X31, 0x120
	0x03C9DDA8 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x74B000
	007 Move X3, [X22+608]
	008 Move X19, X2
	009 Move W20, W1
	010 Move W21, W0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51933184
	014 Add X0, X0, 579
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+608], X0
	018 Move W0, W21
	019 Move W1, W20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Boolean TryGetGlyphWithIndexValue(System.UInt32 glyphIndex, UnityEngine.TextCore.LowLevel.GlyphLoadFlags flags, out UnityEngine.TextCore.Glyph glyph)

Disassembly:
	0x03C9DDAC BL 0x1C16F20
	0x03C9DDB0 BL 0x1C16F28
	0x03C9DDB4 BL 0x1C16F44
	0x03C9DDB8 MOV X1, X31
	0x03C9DDBC BL 0x1C16DEC
	0x03C9DDC0 CMP W0, W1
	0x03C9DDC4 B.GE 0x3C9DDD4
	0x03C9DDC8 CMP W1, W2
	0x03C9DDCC CSEL W0, W2, W1, LT
	0x03C9DDD0 RET
	0x03C9DDD4 CMP W0, W2
	0x03C9DDD8 CSEL W0, W2, W0, LT
	0x03C9DDDC RET
	0x03C9DDE0 STP X29, X30, [X31 - 0x60]!
	0x03C9DDE4 STP X28, X27, [X31 + 0x10]
	0x03C9DDE8 STP X26, X25, [X31 + 0x20]
	0x03C9DDEC STP X24, X23, [X31 + 0x30]
	0x03C9DDF0 STP X22, X21, [X31 + 0x40]
	0x03C9DDF4 STP X20, X19, [X31 + 0x50]
	0x03C9DDF8 ADRP X8, 0x74A000
	0x03C9DDFC LDP X29, X27, [X31 + 0x68]
	0x03C9DE00 LDR X8, [X8 + 0x298]
	0x03C9DE04 LDR X28, [X31 + 0x60]
	0x03C9DE08 MOV W19, W7
	0x03C9DE0C MOV X20, X6
	0x03C9DE10 MOV X21, X5
	0x03C9DE14 MOV X22, X4
	0x03C9DE18 MOV X23, X3
	0x03C9DE1C MOV W24, W2
	0x03C9DE20 MOV W25, W1
	0x03C9DE24 MOV X26, X0
	0x03C9DE28 CBNZ X8, 0x3C9DE44
	0x03C9DE2C ADRP X0, 0xFFFFFFFFFCE70000
	0x03C9DE30 ADD X0, X0, 0xA41
	0x03C9DE34 BL 0x1C16CB8
	0x03C9DE38 MOV X8, X0
	0x03C9DE3C ADRP X9, 0x74A000
	0x03C9DE40 STR X0, [X9 + 0x298]
	0x03C9DE44 STP X29, X27, [X31 + 0x68]
	0x03C9DE48 STR X28, [X31 + 0x60]
	0x03C9DE4C MOV X0, X26
	0x03C9DE50 MOV W1, W25
	0x03C9DE54 MOV W2, W24
	0x03C9DE58 MOV X3, X23
	0x03C9DE5C MOV X4, X22
	0x03C9DE60 MOV X5, X21
	0x03C9DE64 MOV X6, X20
	0x03C9DE68 MOV W7, W19
	0x03C9DE6C LDP X20, X19, [X31 + 0x50]
	0x03C9DE70 LDP X22, X21, [X31 + 0x40]
	0x03C9DE74 LDP X24, X23, [X31 + 0x30]
	0x03C9DE78 LDP X26, X25, [X31 + 0x20]
	0x03C9DE7C LDP X28, X27, [X31 + 0x10]
	0x03C9DE80 LDP X29, X30, [X31], #0x60
	0x03C9DE84 BR X8
	0x03C9DE88 SUB X31, X31, 0x30
	0x03C9DE8C STP X30, X21, [X31 + 0x10]
	0x03C9DE90 STP X20, X19, [X31 + 0x20]
	0x03C9DE94 ADRP X21, 0x74A000
	0x03C9DE98 ADRP X20, 0x4BB000
	0x03C9DE9C LDRB W8, [X21 + 0x2A0]
	0x03C9DEA0 LDR X20, [X20 + 0xBC0]
	0x03C9DEA4 MOV X19, X0
	0x03C9DEA8 TBNZ X8, 0x0, 0x3C9DECC
	0x03C9DEAC ADRP X0, 0x4C4000
	0x03C9DEB0 LDR X0, [X0 + 0x228]
	0x03C9DEB4 BL 0x1C16CF4
	0x03C9DEB8 ADRP X0, 0x4BB000
	0x03C9DEBC LDR X0, [X0 + 0xBC0]
	0x03C9DEC0 BL 0x1C16CF4
	0x03C9DEC4 MOVZ W8, 0x1
	0x03C9DEC8 STRB W8, [X21 + 0x2A0]
	0x03C9DECC LDR X0, [X20]
	0x03C9DED0 STR W31, [X31 + 0xC]
	0x03C9DED4 LDR W8, [X0 + 0xE0]
	0x03C9DED8 CBNZ W8, 0x3C9DEE0
	0x03C9DEDC BL 0x1C16DFC
	0x03C9DEE0 ADRP X21, 0x74A000
	0x03C9DEE4 LDR X8, [X21 + 0x2A8]
	0x03C9DEE8 CBNZ X8, 0x3C9DF00
	0x03C9DEEC ADRP X0, 0xFFFFFFFFFCE82000

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+160], D8
	003 Move [X31+176], X30
	004 Move [X31+184], X23
	005 Move [X31+192], X22
	006 Move [X31+200], X21
	007 Move [X31+208], X20
	008 Move [X31+216], X19
	009 Move X23, 0x74B000
	010 Move X22, 0x4BC000
	011 Move W8, [X23+616]
	012 Move X22, [X22+3008]
	013 Move X19, X2
	014 Move W20, W1
	015 Move W21, W0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x4BC000
	021 Move X0, [X0+3008]
	022 Call 0x1C17CF4
	023 Move X0, 0x4BC000
	024 Move X0, [X0+3080]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+616], W8
	028 Move X0, [X22]
	029 NotImplemented "Instruction MOVI not yet implemented."
	030 Move [X31+96], W31
	031 Move [X31+64], V0
	032 Move [X31+72], V0
	033 Move [X31+3], V0
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X22, 0x74B000
	039 Move X8, [X22+624]
	040 Compare X8, 0
	041 JumpIfNotEqual {47}
	042 Move X0, -52039680
	043 Add X0, X0, 2756
	044 Call 0x1C17CB8
	045 Move X8, X0
	046 Move [X22+624], X0
	047 Add X2, X31, 48
	048 Move W0, W21
	049 Move W1, W20
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move W20, W0
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {87}
	056 Move X9, 0x4BC000
	057 Move W22, [X31+48]
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 Move W8, [X31+84]
	061 Move V8, [X31+88]
	062 Move W23, [X31+92]
	063 Move X9, [X9+3080]
	064 Move [X31], V0
	065 Move [X31+8], V1
	066 Move [X31+32], W8
	067 Move X0, [X9]
	068 Call 0x1C17F10
	069 Move X1, X31
	070 Move X21, X0
	071 Call Object..ctor, X0
	072 Move [X21+16], W22
	073 Move W8, [X31+16]
	074 Move V0, [X31]
	075 Move [X21+36], W8
	076 Move [X21+20], V0
	077 Move W8, [X31+32]
	078 Move V1, [X31]
	079 Move V0, [X31+16]
	080 Move [X31+144], W8
	081 Move [X31+112], V1
	082 Move [X31+120], V0
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 Move [X21+56], S8
	085 Move [X21+60], W23
	086 Move [X21+40], V0
	087 Move X21, X31
	088 And W0, W20, 1
	089 Move [X19], X21
	090 Move X20, [X31+208]
	091 Move X19, [X31+216]
	092 Move X22, [X31+192]
	093 Move X21, [X31+200]
	094 Move X30, [X31+176]
	095 Move X23, [X31+184]
	096 Move V8, [X31+160]
	097 Add X31, X31, 224
	098 Return X0

Method: System.Boolean TryGetGlyphWithIndexValue_Internal(System.UInt32 glyphIndex, UnityEngine.TextCore.LowLevel.GlyphLoadFlags loadFlags, ref UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct glyphStruct)

Disassembly:
	0x03C9DEF0 ADD X0, X0, 0x744
	0x03C9DEF4 BL 0x1C16CB8
	0x03C9DEF8 MOV X8, X0
	0x03C9DEFC STR X0, [X21 + 0x2A8]
	0x03C9DF00 ADD X1, X31, 0xC
	0x03C9DF04 MOV X0, X19
	0x03C9DF08 BLR X8
	0x03C9DF0C LDR W1, [X31 + 0xC]
	0x03C9DF10 CBZ W1, 0x3C9DFBC
	0x03C9DF14 LDR X0, [X20]
	0x03C9DF18 ADRP X19, 0x4C4000
	0x03C9DF1C LDR W8, [X0 + 0xE0]
	0x03C9DF20 LDR X19, [X19 + 0x228]
	0x03C9DF24 CBNZ W8, 0x3C9DF34
	0x03C9DF28 BL 0x1C16DFC
	0x03C9DF2C LDR W1, [X31 + 0xC]
	0x03C9DF30 LDR X0, [X20]
	0x03C9DF34 LDR X8, [X0 + 0xB8]
	0x03C9DF38 LDR X2, [X19]
	0x03C9DF3C ADD X0, X8, 0x30
	0x03C9DF40 BL 0x21E41EC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x74B000
	007 Move X3, [X22+624]
	008 Move X19, X2
	009 Move W20, W1
	010 Move W21, W0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -52039680
	014 Add X0, X0, 2756
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+624], X0
	018 Move W0, W21
	019 Move W1, W20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetTextureUploadMode(System.Boolean shouldUploadImmediately)

Disassembly:
	0x03C9DF44 LDR X8, [X20]
	0x03C9DF48 ADRP X21, 0x74A000
	0x03C9DF4C LDR X9, [X8 + 0xB8]
	0x03C9DF50 LDR X8, [X21 + 0x2B0]
	0x03C9DF54 LDR X19, [X9 + 0x30]
	0x03C9DF58 CBNZ X8, 0x3C9DF70
	0x03C9DF5C ADRP X0, 0xFFFFFFFFFCE8C000
	0x03C9DF60 ADD X0, X0, 0x277
	0x03C9DF64 BL 0x1C16CB8
	0x03C9DF68 MOV X8, X0
	0x03C9DF6C STR X0, [X21 + 0x2B0]
	0x03C9DF70 MOV X0, X19
	0x03C9DF74 BLR X8
	0x03C9DF78 LDR X8, [X20]
	0x03C9DF7C LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x74B000
	005 Move X1, [X20+632]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -52047872
	010 Add X0, X0, 3493
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+632], X0
	014 And W0, W19, 1
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Boolean TryAddGlyphToTexture(System.UInt32 glyphIndex, System.Int32 padding, UnityEngine.TextCore.LowLevel.GlyphPackingMode packingMode, System.Collections.Generic.List`1<UnityEngine.TextCore.GlyphRect> freeGlyphRects, System.Collections.Generic.List`1<UnityEngine.TextCore.GlyphRect> usedGlyphRects, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, UnityEngine.Texture2D texture, out UnityEngine.TextCore.Glyph glyph)

Disassembly:
	0x03C9DF80 LDR X8, [X8 + 0x30]
	0x03C9DF84 CBZ X8, 0x3C9DFD0
	0x03C9DF88 LDRSW X9, [X31 + 0xC]
	0x03C9DF8C LDR W10, [X8 + 0x18]
	0x03C9DF90 CMP W9, W10
	0x03C9DF94 B.CS 0x3C9DFD4
	0x03C9DF98 MOVZ W10, 0x2C
	0x03C9DF9C MOVI V0.2D, 0x0
	0x03C9DFA0 MADD X8, X9, X10, X8
	0x03C9DFA4 STUR V0, [X8 + 0x3C]
	0x03C9DFA8 STP V0, V0, [X8 + 0x20]
	0x03C9DFAC LDR X8, [X20]
	0x03C9DFB0 LDR X8, [X8 + 0xB8]
	0x03C9DFB4 LDR X0, [X8 + 0x30]
	0x03C9DFB8 B 0x3C9DFC0
	0x03C9DFBC MOV X0, X31
	0x03C9DFC0 LDP X20, X19, [X31 + 0x20]
	0x03C9DFC4 LDP X30, X21, [X31 + 0x10]
	0x03C9DFC8 ADD X31, X31, 0x30
	0x03C9DFCC RET
	0x03C9DFD0 BL 0x1C16F20
	0x03C9DFD4 BL 0x1C16F28
	0x03C9DFD8 STP X30, X21, [X31 - 0x20]!
	0x03C9DFDC STP X20, X19, [X31 + 0x10]
	0x03C9DFE0 ADRP X21, 0x74A000
	0x03C9DFE4 LDR X2, [X21 + 0x2A8]
	0x03C9DFE8 MOV X19, X1
	0x03C9DFEC MOV X20, X0
	0x03C9DFF0 CBNZ X2, 0x3C9E008
	0x03C9DFF4 ADRP X0, 0xFFFFFFFFFCE82000
	0x03C9DFF8 ADD X0, X0, 0x744
	0x03C9DFFC BL 0x1C16CB8
	0x03C9E000 MOV X2, X0
	0x03C9E004 STR X0, [X21 + 0x2A8]
	0x03C9E008 MOV X0, X20
	0x03C9E00C MOV X1, X19
	0x03C9E010 LDP X20, X19, [X31 + 0x10]
	0x03C9E014 LDP X30, X21, [X31], #0x20
	0x03C9E018 BR X2
	0x03C9E01C STR X30, [X31 - 0x20]!
	0x03C9E020 STP X20, X19, [X31 + 0x10]
	0x03C9E024 ADRP X20, 0x749000
	0x03C9E028 LDR X1, [X20 + 0x2B0]
	0x03C9E02C MOV X19, X0
	0x03C9E030 CBNZ X1, 0x3C9E048
	0x03C9E034 ADRP X0, 0xFFFFFFFFFCE8B000
	0x03C9E038 ADD X0, X0, 0x277
	0x03C9E03C BL 0x1C16CB8
	0x03C9E040 MOV X1, X0
	0x03C9E044 STR X0, [X20 + 0x2B0]
	0x03C9E048 MOV X0, X19
	0x03C9E04C LDP X20, X19, [X31 + 0x10]
	0x03C9E050 LDR X30, [X31], #0x20
	0x03C9E054 BR X1
	0x03C9E058 STR X30, [X31 - 0x30]!
	0x03C9E05C STP X22, X21, [X31 + 0x10]
	0x03C9E060 STP X20, X19, [X31 + 0x20]
	0x03C9E064 ADRP X20, 0x749000
	0x03C9E068 STR X0, [X31 + 0x8]
	0x03C9E06C ADRP X21, 0x4BA000
	0x03C9E070 LDRB W8, [X20 + 0x2A1]
	0x03C9E074 LDR X21, [X21 + 0xBC0]
	0x03C9E078 MOV X19, X1
	0x03C9E07C TBNZ X8, 0x0, 0x3C9E0AC
	0x03C9E080 ADRP X0, 0x4C3000
	0x03C9E084 LDR X0, [X0 + 0x230]
	0x03C9E088 BL 0x1C16CF4
	0x03C9E08C ADRP X0, 0x4C3000
	0x03C9E090 LDR X0, [X0 + 0x228]
	0x03C9E094 BL 0x1C16CF4
	0x03C9E098 ADRP X0, 0x4BA000
	0x03C9E09C LDR X0, [X0 + 0xBC0]
	0x03C9E0A0 BL 0x1C16CF4
	0x03C9E0A4 MOVZ W8, 0x1
	0x03C9E0A8 STRB W8, [X20 + 0x2A1]
	0x03C9E0AC LDR X0, [X21]
	0x03C9E0B0 ADRP X20, 0x4C3000
	0x03C9E0B4 LDR W8, [X0 + 0xE0]
	0x03C9E0B8 LDR X20, [X20 + 0x230]
	0x03C9E0BC CBNZ W8, 0x3C9E0C8
	0x03C9E0C0 BL 0x1C16DFC
	0x03C9E0C4 LDR X0, [X21]
	0x03C9E0C8 LDR X8, [X0 + 0xB8]
	0x03C9E0CC LDR X2, [X20]
	0x03C9E0D0 ADD X0, X31, 0x8
	0x03C9E0D4 ADD X1, X8, 0x8
	0x03C9E0D8 BL 0x21E3E5C
	0x03C9E0DC LDR X8, [X21]
	0x03C9E0E0 ADRP X22, 0x749000
	0x03C9E0E4 LDR X9, [X8 + 0xB8]
	0x03C9E0E8 LDR X8, [X22 + 0x2A8]
	0x03C9E0EC LDR X20, [X9 + 0x8]
	0x03C9E0F0 CBNZ X8, 0x3C9E108
	0x03C9E0F4 ADRP X0, 0xFFFFFFFFFCE81000
	0x03C9E0F8 ADD X0, X0, 0x744
	0x03C9E0FC BL 0x1C16CB8
	0x03C9E100 MOV X8, X0
	0x03C9E104 STR X0, [X22 + 0x2A8]
	0x03C9E108 MOV X0, X20
	0x03C9E10C MOV X1, X19
	0x03C9E110 BLR X8
	0x03C9E114 LDR W1, [X19]
	0x03C9E118 CBZ W1, 0x3C9E1C4
	0x03C9E11C LDR X0, [X21]
	0x03C9E120 ADRP X20, 0x4C3000
	0x03C9E124 LDR W8, [X0 + 0xE0]
	0x03C9E128 LDR X20, [X20 + 0x228]
	0x03C9E12C CBNZ W8, 0x3C9E13C
	0x03C9E130 BL 0x1C16DFC
	0x03C9E134 LDR W1, [X19]
	0x03C9E138 LDR X0, [X21]
	0x03C9E13C LDR X8, [X0 + 0xB8]
	0x03C9E140 LDR X2, [X20]
	0x03C9E144 ADD X0, X8, 0x30
	0x03C9E148 BL 0x21E41EC
	0x03C9E14C LDR X8, [X21]
	0x03C9E150 ADRP X22, 0x749000
	0x03C9E154 LDR X9, [X8 + 0xB8]
	0x03C9E158 LDR X8, [X22 + 0x2B0]
	0x03C9E15C LDR X20, [X9 + 0x30]
	0x03C9E160 CBNZ X8, 0x3C9E178
	0x03C9E164 ADRP X0, 0xFFFFFFFFFCE8B000
	0x03C9E168 ADD X0, X0, 0x277
	0x03C9E16C BL 0x1C16CB8
	0x03C9E170 MOV X8, X0
	0x03C9E174 STR X0, [X22 + 0x2B0]
	0x03C9E178 MOV X0, X20
	0x03C9E17C BLR X8
	0x03C9E180 LDR X8, [X21]
	0x03C9E184 LDR X8, [X8 + 0xB8]
	0x03C9E188 LDR X8, [X8 + 0x30]
	0x03C9E18C CBZ X8, 0x3C9E1D8
	0x03C9E190 LDRSW X9, [X19]
	0x03C9E194 LDR W10, [X8 + 0x18]
	0x03C9E198 CMP W9, W10
	0x03C9E19C B.CS 0x3C9E1DC
	0x03C9E1A0 MOVZ W10, 0x2C
	0x03C9E1A4 MOVI V0.2D, 0x0
	0x03C9E1A8 MADD X8, X9, X10, X8
	0x03C9E1AC STUR V0, [X8 + 0x3C]
	0x03C9E1B0 STP V0, V0, [X8 + 0x20]
	0x03C9E1B4 LDR X8, [X21]
	0x03C9E1B8 LDR X8, [X8 + 0xB8]
	0x03C9E1BC LDR X0, [X8 + 0x30]
	0x03C9E1C0 B 0x3C9E1C8
	0x03C9E1C4 MOV X0, X31
	0x03C9E1C8 LDP X20, X19, [X31 + 0x20]
	0x03C9E1CC LDP X22, X21, [X31 + 0x10]
	0x03C9E1D0 LDR X30, [X31], #0x30
	0x03C9E1D4 RET
	0x03C9E1D8 BL 0x1C16F20
	0x03C9E1DC BL 0x1C16F28
	0x03C9E1E0 STR X30, [X31 - 0x20]!
	0x03C9E1E4 STP X20, X19, [X31 + 0x10]
	0x03C9E1E8 ADRP X20, 0x749000
	0x03C9E1EC LDR X1, [X20 + 0x2B8]
	0x03C9E1F0 MOV X19, X0
	0x03C9E1F4 CBNZ X1, 0x3C9E20C
	0x03C9E1F8 ADRP X0, 0xFFFFFFFFFCE7B000
	0x03C9E1FC ADD X0, X0, 0x526
	0x03C9E200 BL 0x1C16CB8
	0x03C9E204 MOV X1, X0
	0x03C9E208 STR X0, [X20 + 0x2B8]
	0x03C9E20C MOV X0, X19
	0x03C9E210 LDP X20, X19, [X31 + 0x10]
	0x03C9E214 LDR X30, [X31], #0x20
	0x03C9E218 BR X1
	0x03C9E21C STP X30, X25, [X31 - 0x40]!
	0x03C9E220 STP X24, X23, [X31 + 0x10]
	0x03C9E224 STP X22, X21, [X31 + 0x20]
	0x03C9E228 STP X20, X19, [X31 + 0x30]
	0x03C9E22C ADRP X24, 0x749000
	0x03C9E230 ADRP X25, 0x4C3000
	0x03C9E234 ADRP X20, 0x4BA000
	0x03C9E238 ADRP X23, 0x4C3000
	0x03C9E23C ADRP X22, 0x4C3000
	0x03C9E240 ADRP X21, 0x4BA000
	0x03C9E244 ADRP X19, 0x4BA000
	0x03C9E248 LDR X25, [X25 + 0x220]
	0x03C9E24C LDRB W8, [X24 + 0x2C0]
	0x03C9E250 LDR X20, [X20 + 0xBC0]
	0x03C9E254 LDR X23, [X23 + 0x218]
	0x03C9E258 LDR X22, [X22 + 0x200]
	0x03C9E25C LDR X21, [X21 + 0xCB8]
	0x03C9E260 LDR X19, [X19 + 0xCB0]
	0x03C9E264 TBNZ X8, 0x0, 0x3C9E2B8
	0x03C9E268 ADRP X0, 0x4BA000
	0x03C9E26C LDR X0, [X0 + 0xCB0]
	0x03C9E270 BL 0x1C16CF4
	0x03C9E274 ADRP X0, 0x4BA000
	0x03C9E278 LDR X0, [X0 + 0xCB8]
	0x03C9E27C BL 0x1C16CF4
	0x03C9E280 ADRP X0, 0x4BA000
	0x03C9E284 LDR X0, [X0 + 0xBC0]
	0x03C9E288 BL 0x1C16CF4
	0x03C9E28C ADRP X0, 0x4C3000
	0x03C9E290 LDR X0, [X0 + 0x218]
	0x03C9E294 BL 0x1C16CF4
	0x03C9E298 ADRP X0, 0x4C3000
	0x03C9E29C LDR X0, [X0 + 0x200]
	0x03C9E2A0 BL 0x1C16CF4
	0x03C9E2A4 ADRP X0, 0x4C3000
	0x03C9E2A8 LDR X0, [X0 + 0x220]
	0x03C9E2AC BL 0x1C16CF4
	0x03C9E2B0 MOVZ W8, 0x1
	0x03C9E2B4 STRB W8, [X24 + 0x2C0]
	0x03C9E2B8 LDR X0, [X25]
	0x03C9E2BC MOVZ W1, 0x10
	0x03C9E2C0 BL 0x1C16D6C
	0x03C9E2C4 LDR X8, [X20]
	0x03C9E2C8 MOVZ W1, 0x10
	0x03C9E2CC LDR X8, [X8 + 0xB8]
	0x03C9E2D0 STR X0, [X8]
	0x03C9E2D4 LDR X0, [X23]
	0x03C9E2D8 BL 0x1C16D6C
	0x03C9E2DC LDR X8, [X20]
	0x03C9E2E0 MOVZ W1, 0x10
	0x03C9E2E4 LDR X8, [X8 + 0xB8]
	0x03C9E2E8 STR X0, [X8 + 0x10]
	0x03C9E2EC LDR X0, [X23]
	0x03C9E2F0 BL 0x1C16D6C
	0x03C9E2F4 LDR X8, [X20]
	0x03C9E2F8 MOVZ W1, 0x10
	0x03C9E2FC LDR X8, [X8 + 0xB8]
	0x03C9E300 STR X0, [X8 + 0x18]
	0x03C9E304 LDR X0, [X22]
	0x03C9E308 BL 0x1C16D6C
	0x03C9E30C LDR X8, [X20]
	0x03C9E310 MOVZ W1, 0x10
	0x03C9E314 LDR X8, [X8 + 0xB8]
	0x03C9E318 STR X0, [X8 + 0x20]
	0x03C9E31C LDR X0, [X22]
	0x03C9E320 BL 0x1C16D6C
	0x03C9E324 LDR X8, [X20]
	0x03C9E328 LDR X8, [X8 + 0xB8]
	0x03C9E32C STR X0, [X8 + 0x28]
	0x03C9E330 LDR X0, [X21]
	0x03C9E334 BL 0x1C16F10
	0x03C9E338 LDR X1, [X19]
	0x03C9E33C MOV X19, X0
	0x03C9E340 BL 0x2B0E7A4
	0x03C9E344 LDR X8, [X20]
	0x03C9E348 LDP X22, X21, [X31 + 0x20]
	0x03C9E34C LDP X24, X23, [X31 + 0x10]
	0x03C9E350 LDR X8, [X8 + 0xB8]
	0x03C9E354 STR X19, [X8 + 0x38]
	0x03C9E358 LDP X20, X19, [X31 + 0x30]
	0x03C9E35C LDP X30, X25, [X31], #0x40
	0x03C9E360 RET
	0x03C9E364 LDR V0, [X0]
	0x03C9E368 RET
	0x03C9E36C STR S0, [X0]
	0x03C9E370 RET
	0x03C9E374 LDR V0, [X0 + 0x4]
	0x03C9E378 RET
	0x03C9E37C STR S0, [X0 + 0x4]
	0x03C9E380 RET
	0x03C9E384 LDR V0, [X0 + 0x8]
	0x03C9E388 RET
	0x03C9E38C LDR V0, [X0 + 0xC]
	0x03C9E390 RET
	0x03C9E394 FADD S0, S0, S4
	0x03C9E398 FADD S1, S1, S5
	0x03C9E39C FADD S2, S2, S6
	0x03C9E3A0 FADD S3, S3, S7
	0x03C9E3A4 RET
	0x03C9E3A8 SUB X31, X31, 0x30
	0x03C9E3AC STP X30, X21, [X31 + 0x10]
	0x03C9E3B0 STP X20, X19, [X31 + 0x20]
	0x03C9E3B4 ADRP X21, 0x749000
	0x03C9E3B8 ADRP X20, 0x4C3000
	0x03C9E3BC LDRB W8, [X21 + 0x2C1]
	0x03C9E3C0 LDR X20, [X20 + 0x238]
	0x03C9E3C4 MOV X19, X0
	0x03C9E3C8 TBNZ X8, 0x0, 0x3C9E3E0
	0x03C9E3CC ADRP X0, 0x4C3000
	0x03C9E3D0 LDR X0, [X0 + 0x238]
	0x03C9E3D4 BL 0x1C16CF4
	0x03C9E3D8 MOVZ W8, 0x1
	0x03C9E3DC STRB W8, [X21 + 0x2C1]
	0x03C9E3E0 LDR V0, [X19]
	0x03C9E3E4 LDR X0, [X20]
	0x03C9E3E8 ADD X1, X31, 0x0
	0x03C9E3EC STR V0, [X31]
	0x03C9E3F0 BL 0x1C16E04
	0x03C9E3F4 MOV X1, X31
	0x03C9E3F8 BL 0x33D55D8
	0x03C9E3FC LDP X20, X19, [X31 + 0x20]
	0x03C9E400 LDP X30, X21, [X31 + 0x10]
	0x03C9E404 ADD X31, X31, 0x30
	0x03C9E408 RET
	0x03C9E40C SUB X31, X31, 0x40
	0x03C9E410 STR X30, [X31 + 0x10]
	0x03C9E414 STP X22, X21, [X31 + 0x20]
	0x03C9E418 STP X20, X19, [X31 + 0x30]
	0x03C9E41C ADRP X22, 0x749000
	0x03C9E420 ADRP X21, 0x4C3000
	0x03C9E424 LDRB W8, [X22 + 0x2C2]
	0x03C9E428 LDR X21, [X21 + 0x238]
	0x03C9E42C MOV X19, X1
	0x03C9E430 MOV X20, X0
	0x03C9E434 TBNZ X8, 0x0, 0x3C9E44C
	0x03C9E438 ADRP X0, 0x4C3000
	0x03C9E43C LDR X0, [X0 + 0x238]
	0x03C9E440 BL 0x1C16CF4
	0x03C9E444 MOVZ W8, 0x1
	0x03C9E448 STRB W8, [X22 + 0x2C2]
	0x03C9E44C LDR V0, [X20]
	0x03C9E450 LDR X0, [X21]
	0x03C9E454 ADD X1, X31, 0x0
	0x03C9E458 STR V0, [X31]
	0x03C9E45C BL 0x1C16E04
	0x03C9E460 MOV X1, X19
	0x03C9E464 MOV X2, X31
	0x03C9E468 BL 0x33D55D0
	0x03C9E46C LDP X20, X19, [X31 + 0x30]
	0x03C9E470 LDP X22, X21, [X31 + 0x20]
	0x03C9E474 LDR X30, [X31 + 0x10]
	0x03C9E478 AND W0, W0, 0x1
	0x03C9E47C ADD X31, X31, 0x40
	0x03C9E480 RET
	0x03C9E484 SUB X31, X31, 0x60
	0x03C9E488 STP D11, D10, [X31 + 0x20]
	0x03C9E48C STP D9, D8, [X31 + 0x30]
	0x03C9E490 STP X30, X21, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 336
	002 Move [X31+224], D8
	003 Move [X31+240], X29
	004 Move [X31+248], X30
	005 Move [X31+256], X28
	006 Move [X31+264], X27
	007 Move [X31+272], X26
	008 Move [X31+280], X25
	009 Move [X31+288], X24
	010 Move [X31+296], X23
	011 Move [X31+304], X22
	012 Move [X31+312], X21
	013 Move [X31+320], X20
	014 Move [X31+328], X19
	015 Move X21, 0x74B000
	016 Move W8, [X21+640]
	017 Move X23, X7
	018 Move X22, X6
	019 Move W26, W5
	020 Move X19, X4
	021 Move X20, X3
	022 Move W24, W2
	023 Move W25, W1
	024 Move W27, W0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {52}
	029 Move X0, 0x4BC000
	030 Move X0, [X0+3008]
	031 Call 0x1C17CF4
	032 Move X0, 0x4C5000
	033 Move X0, [X0+512]
	034 Call 0x1C17CF4
	035 Move X0, 0x4BC000
	036 Move X0, [X0+3080]
	037 Call 0x1C17CF4
	038 Move X0, 0x4BC000
	039 Move X0, [X0+3016]
	040 Call 0x1C17CF4
	041 Move X0, 0x4BC000
	042 Move X0, [X0+3728]
	043 Call 0x1C17CF4
	044 Move X0, 0x4C4000
	045 Move X0, [X0+520]
	046 Call 0x1C17CF4
	047 Move X0, 0x4C4000
	048 Move X0, [X0+528]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X21+640], W8
	052 NotImplemented "Instruction MOVI not yet implemented."
	053 Move [X31+160], W31
	054 Move [X31+128], V0
	055 Move [X31+136], V0
	056 Move [X31+7], V0
	057 Compare X20, 0
	058 JumpIfEqual {359}
	059 NotImplemented "Instruction LDRSW not yet implemented."
	060 Move [X31+44], W27
	061 Move [X31+48], W25
	062 Move [X31+52], W24
	063 Move [X31+56], X22
	064 Move [X31+236], W21
	065 Compare X19, 0
	066 JumpIfEqual {359}
	067 Move X29, 0x4BB000
	068 Move X29, [X29+3008]
	069 NotImplemented "Instruction LDRSW not yet implemented."
	070 Move X8, [X29]
	071 Move [X31+232], W22
	072 Move W9, [X8+224]
	073 Compare W9, 0
	074 JumpIfNotEqual {78}
	075 Move X0, X8
	076 Call 0x1C17DFC
	077 Move X8, [X29]
	078 Move X9, [X8+184]
	079 Move [X31+32], X23
	080 Move X10, [X9+32]
	081 Compare X10, 0
	082 JumpIfEqual {359}
	083 Move W10, [X10+24]
	084 Add W23, W22, W21
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move W10, [X8+224]
	087 Compare W10, 0
	088 JumpIfNotEqual {93}
	089 Move X0, X8
	090 Call 0x1C17DFC
	091 Move X8, [X29]
	092 Move X9, [X8+184]
	093 Move X9, [X9+40]
	094 Compare X9, 0
	095 JumpIfEqual {359}
	096 Move W9, [X9+24]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X24, 0x4C4000
	099 Move X24, [X24+512]
	100 Add W0, W23, 1
	101 Move X1, X31
	102 Call Mathf.NextPowerOfTwo, X0
	103 Move X8, [X24]
	104 Move W27, W0
	105 Move W1, W27
	106 Move X0, X8
	107 Call 0x1C17D6C
	108 Move X8, [X29]
	109 Move X28, X0
	110 Move W9, [X8+224]
	111 Compare W9, 0
	112 JumpIfNotEqual {116}
	113 Move X0, X8
	114 Call 0x1C17DFC
	115 Move X8, [X29]
	116 Move X8, [X8+184]
	117 Move W1, W27
	118 Move [X8+32], X28
	119 Move X0, [X24]
	120 Call 0x1C17D6C
	121 Move X8, [X29]
	122 Move X9, [X8+184]
	123 Move [X9+40], X0
	124 NotImplemented "Instruction CMP not yet implemented."
	125 NotImplemented "Instruction CSEL not yet implemented."
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X28, 0x4C4000
	128 Move X28, [X28+528]
	129 Move X27, X31
	130 Move W23, W9
	131 Move W24, 32
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X0, [X29]
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {139}
	137 Call 0x1C17DFC
	138 Move X0, [X29]
	139 Move X8, [X0+184]
	140 Move X2, [X28]
	141 Move X0, X20
	142 Move W1, W27
	143 Move X25, [X8+32]
	144 Call List`1<GlyphRect>.get_Item, X0, X1
	145 Compare X25, 0
	146 JumpIfEqual {359}
	147 Move W8, [X25+24]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Add X8, X25, X24
	150 Move [X8], X0
	151 Move [X8+8], X1
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move X0, [X29]
	154 Move W8, [X0+224]
	155 Compare W8, 0
	156 JumpIfNotEqual {159}
	157 Call 0x1C17DFC
	158 Move X0, [X29]
	159 Move X8, [X0+184]
	160 Move X2, [X28]
	161 Move X0, X19
	162 Move W1, W27
	163 Move X25, [X8+40]
	164 Call List`1<GlyphRect>.get_Item, X0, X1
	165 Compare X25, 0
	166 JumpIfEqual {359}
	167 Move W8, [X25+24]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Add X8, X25, X24
	170 Move [X8], X0
	171 Move [X8+8], X1
	172 Add X27, X27, 1
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Add X24, X24, 16
	175 Move X8, [X29]
	176 Move W9, [X8+224]
	177 Compare W9, 0
	178 JumpIfNotEqual {182}
	179 Move X0, X8
	180 Call 0x1C17DFC
	181 Move X8, [X29]
	182 Move X9, [X8+184]
	183 Move X21, 0x74A000
	184 Move X22, [X31+56]
	185 Move X8, [X21+648]
	186 Move X28, [X9+32]
	187 Move X27, [X9+40]
	188 Compare X8, 0
	189 JumpIfNotEqual {195}
	190 Move X0, -52060160
	191 Add X0, X0, 2836
	192 Call 0x1C17CB8
	193 Move X8, X0
	194 Move [X21+648], X0
	195 Move W0, [X31+44]
	196 Move W1, [X31+48]
	197 Move W2, [X31+52]
	198 Add X9, X31, 112
	199 Add X4, X31, 236
	200 Add X6, X31, 232
	201 Move X3, X28
	202 Move X5, X27
	203 Move W7, W26
	204 Move [X31], X22
	205 Move [X31+8], X9
	206 NotImplemented "Instruction BLR not yet implemented."
	207 Move W22, W0
	208 Move TEMP, X0
	209 And TEMP, TEMP, 1
	210 Compare TEMP, 1
	211 JumpIfNotEqual {341}
	212 Move X9, 0x4BB000
	213 Move W21, [X31+112]
	214 NotImplemented "Instruction LDUR not yet implemented."
	215 NotImplemented "Instruction LDUR not yet implemented."
	216 Move W8, [X31+148]
	217 Move V8, [X31+152]
	218 Move W24, [X31+156]
	219 Move X9, [X9+3080]
	220 Move [X31+64], V0
	221 Move [X31+72], V1
	222 Move [X31+96], W8
	223 Move X0, [X9]
	224 Call 0x1C17F10
	225 Move X1, X31
	226 Move X23, X0
	227 Call Object..ctor, X0
	228 Move [X23+16], W21
	229 Move W8, [X31+80]
	230 Move V0, [X31+4]
	231 Move [X23+36], W8
	232 Move [X23+20], V0
	233 Move W8, [X31+96]
	234 Move V1, [X31+64]
	235 Move V0, [X31+80]
	236 Move [X31+208], W8
	237 Move [X31+176], V1
	238 Move [X31+184], V0
	239 NotImplemented "Instruction LDUR not yet implemented."
	240 Move X8, [X31+32]
	241 Move [X23+56], S8
	242 Move [X23+60], W24
	243 Move [X23+40], V0
	244 Move [X8], X23
	245 Move W8, [X20+28]
	246 Add W8, W8, 1
	247 Move [X20+24], W31
	248 Move [X20+28], W8
	249 Move W8, [X19+28]
	250 Add W8, W8, 1
	251 Move [X19+24], W31
	252 Move [X19+28], W8
	253 Move W9, [X31+232]
	254 Move W8, [X31+236]
	255 NotImplemented "Instruction CMP not yet implemented."
	256 NotImplemented "Instruction CSEL not yet implemented."
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Move X25, 0x4BB000
	259 Move X25, [X25+3016]
	260 Move W9, W9
	261 Move X21, X31
	262 Move W23, 32
	263 Subtract X24, X9, 1
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Move X0, [X29]
	266 Move W8, [X0+224]
	267 Compare W8, 0
	268 JumpIfNotEqual {271}
	269 Call 0x1C17DFC
	270 Move X0, [X29]
	271 Move X8, [X0+184]
	272 Move X8, [X8+32]
	273 Compare X8, 0
	274 JumpIfEqual {359}
	275 Move W9, [X8+24]
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Add X8, X8, X23
	278 Move W10, [X20+28]
	279 Move X1, [X8]
	280 Move X2, [X8+8]
	281 Move X8, [X20+16]
	282 Move X9, [X25]
	283 Add W10, W10, 1
	284 Move [X20+28], W10
	285 Compare X8, 0
	286 JumpIfEqual {359}
	287 NotImplemented "Instruction LDRSW not yet implemented."
	288 Move W11, [X8+24]
	289 NotImplemented "Instruction CMP not yet implemented."
	290 Add W9, W10, 1
	291 Add X8, X8, X10
	292 Move [X20+24], W9
	293 Move [X8+32], X1
	294 Move [X8+40], X2
	295 Move X8, [X9+32]
	296 Move X0, X20
	297 Move X8, [X8+192]
	298 Move X3, [X8+112]
	299 Call List`1<GlyphRect>.AddWithResize, X0, X1
	300 NotImplemented "Instruction LDRSW not yet implemented."
	301 NotImplemented "Instruction CMP not yet implemented."
	302 Move X0, [X29]
	303 Move W8, [X0+224]
	304 Compare W8, 0
	305 JumpIfNotEqual {308}
	306 Call 0x1C17DFC
	307 Move X0, [X29]
	308 Move X8, [X0+184]
	309 Move X8, [X8+40]
	310 Compare X8, 0
	311 JumpIfEqual {359}
	312 Move W9, [X8+24]
	313 NotImplemented "Instruction CMP not yet implemented."
	314 Add X8, X8, X23
	315 Move W10, [X19+28]
	316 Move X1, [X8]
	317 Move X2, [X8+8]
	318 Move X8, [X19+16]
	319 Move X9, [X25]
	320 Add W10, W10, 1
	321 Move [X19+28], W10
	322 Compare X8, 0
	323 JumpIfEqual {359}
	324 NotImplemented "Instruction LDRSW not yet implemented."
	325 Move W11, [X8+24]
	326 NotImplemented "Instruction CMP not yet implemented."
	327 Add W9, W10, 1
	328 Add X8, X8, X10
	329 Move [X19+24], W9
	330 Move [X8+32], X1
	331 Move [X8+40], X2
	332 Move X8, [X9+32]
	333 Move X0, X19
	334 Move X8, [X8+192]
	335 Move X3, [X8+112]
	336 Call List`1<GlyphRect>.AddWithResize, X0, X1
	337 NotImplemented "Instruction CMP not yet implemented."
	338 Move W8, [X31+236]
	339 Add X21, X21, 1
	340 Add X23, X23, 16
	341 Move X8, [X31+32]
	342 Move [X8], X31
	343 And W0, W22, 1
	344 Move X20, [X31+320]
	345 Move X19, [X31+328]
	346 Move X22, [X31+304]
	347 Move X21, [X31+312]
	348 Move X24, [X31+288]
	349 Move X23, [X31+296]
	350 Move X26, [X31+272]
	351 Move X25, [X31+280]
	352 Move X28, [X31+256]
	353 Move X27, [X31+264]
	354 Move X29, [X31+240]
	355 Move X30, [X31+248]
	356 Move V8, [X31+224]
	357 Add X31, X31, 336
	358 Return X0
	359 Call 0x1C17F20
	360 Call 0x1C17F28

Method: System.Boolean TryAddGlyphToTexture_Internal(System.UInt32 glyphIndex, System.Int32 padding, UnityEngine.TextCore.LowLevel.GlyphPackingMode packingMode, out UnityEngine.TextCore.GlyphRect[] freeGlyphRects, ref System.Int32 freeGlyphRectCount, out UnityEngine.TextCore.GlyphRect[] usedGlyphRects, ref System.Int32 usedGlyphRectCount, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, UnityEngine.Texture2D texture, out UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct glyph)

Disassembly:
	0x03C9E494 STP X20, X19, [X31 + 0x50]
	0x03C9E498 ADRP X21, 0x749000
	0x03C9E49C ADRP X20, 0x4C3000
	0x03C9E4A0 LDRB W8, [X21 + 0x2C3]
	0x03C9E4A4 LDR X20, [X20 + 0x238]
	0x03C9E4A8 MOV V8.16B, V3.16B
	0x03C9E4AC MOV V9.16B, V2.16B
	0x03C9E4B0 MOV V10.16B, V1.16B
	0x03C9E4B4 MOV V11.16B, V0.16B
	0x03C9E4B8 MOV X19, X0
	0x03C9E4BC TBNZ X8, 0x0, 0x3C9E4D4
	0x03C9E4C0 ADRP X0, 0x4C3000
	0x03C9E4C4 LDR X0, [X0 + 0x238]
	0x03C9E4C8 BL 0x1C16CF4
	0x03C9E4CC MOVZ W8, 0x1
	0x03C9E4D0 STRB W8, [X21 + 0x2C3]
	0x03C9E4D4 LDR V0, [X19]
	0x03C9E4D8 LDR X0, [X20]
	0x03C9E4DC ADD X1, X31, 0x10
	0x03C9E4E0 STR V0, [X31 + 0x1]
	0x03C9E4E4 BL 0x1C16E04
	0x03C9E4E8 MOV X19, X0
	0x03C9E4EC LDR X0, [X20]
	0x03C9E4F0 ADD X1, X31, 0x0
	0x03C9E4F4 STP S11, S10, [X31]
	0x03C9E4F8 STP S9, S8, [X31 + 0x8]
	0x03C9E4FC BL 0x1C16E04
	0x03C9E500 MOV X1, X0
	0x03C9E504 MOV X0, X19
	0x03C9E508 MOV X2, X31
	0x03C9E50C BL 0x33D55D0
	0x03C9E510 LDP X20, X19, [X31 + 0x50]
	0x03C9E514 LDP X30, X21, [X31 + 0x40]
	0x03C9E518 LDP D9, D8, [X31 + 0x30]
	0x03C9E51C LDP D11, D10, [X31 + 0x20]
	0x03C9E520 AND W0, W0, 0x1
	0x03C9E524 ADD X31, X31, 0x60
	0x03C9E528 RET
	0x03C9E52C LDR W0, [X0]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X29, 0x74A000
	014 Move X8, [X29+648]
	015 Move X27, [X31+96]
	016 Move X28, [X31+104]
	017 Move W19, W7
	018 Move X20, X6
	019 Move X21, X5
	020 Move X22, X4
	021 Move X23, X3
	022 Move W24, W2
	023 Move W25, W1
	024 Move W26, W0
	025 Compare X8, 0
	026 JumpIfNotEqual {32}
	027 Move X0, -52060160
	028 Add X0, X0, 2836
	029 Call 0x1C17CB8
	030 Move X8, X0
	031 Move [X29+648], X0
	032 Move [X31+96], X27
	033 Move [X31+104], X28
	034 Move W0, W26
	035 Move W1, W25
	036 Move W2, W24
	037 Move X3, X23
	038 Move X4, X22
	039 Move X5, X21
	040 Move X6, X20
	041 Move W7, W19
	042 Move X20, [X31+80]
	043 Move X19, [X31+88]
	044 Move X22, [X31+64]
	045 Move X21, [X31+72]
	046 Move X24, [X31+48]
	047 Move X23, [X31+56]
	048 Move X26, [X31+32]
	049 Move X25, [X31+40]
	050 Move X28, [X31+16]
	051 Move X27, [X31+24]
	052 Move X29, [X31+96]
	053 Move X30, [X31+104]
	054 CallNoReturn X8

Method: System.Boolean TryAddGlyphsToTexture(System.Collections.Generic.List`1<System.UInt32> glyphIndexes, System.Int32 padding, UnityEngine.TextCore.LowLevel.GlyphPackingMode packingMode, System.Collections.Generic.List`1<UnityEngine.TextCore.GlyphRect> freeGlyphRects, System.Collections.Generic.List`1<UnityEngine.TextCore.GlyphRect> usedGlyphRects, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, UnityEngine.Texture2D texture, out UnityEngine.TextCore.Glyph[] glyphs)

Disassembly:
	0x03C9E530 RET
	0x03C9E534 LDP S0, S1, [X0 + 0x4]
	0x03C9E538 LDP S2, S3, [X0 + 0xC]
	0x03C9E53C RET
	0x03C9E540 SUB X31, X31, 0x40
	0x03C9E544 STP X30, X21, [X31 + 0x20]
	0x03C9E548 STP X20, X19, [X31 + 0x30]
	0x03C9E54C ADRP X21, 0x749000
	0x03C9E550 ADRP X20, 0x4C3000
	0x03C9E554 LDRB W8, [X21 + 0x2C4]
	0x03C9E558 LDR X20, [X20 + 0x240]
	0x03C9E55C MOV X19, X0
	0x03C9E560 TBNZ X8, 0x0, 0x3C9E578
	0x03C9E564 ADRP X0, 0x4C3000
	0x03C9E568 LDR X0, [X0 + 0x240]
	0x03C9E56C BL 0x1C16CF4
	0x03C9E570 MOVZ W8, 0x1
	0x03C9E574 STRB W8, [X21 + 0x2C4]
	0x03C9E578 LDR W8, [X19 + 0x10]
	0x03C9E57C LDR V0, [X19]
	0x03C9E580 LDR X0, [X20]
	0x03C9E584 ADD X1, X31, 0x0
	0x03C9E588 STR W8, [X31 + 0x10]
	0x03C9E58C STR V0, [X31]
	0x03C9E590 BL 0x1C16E04
	0x03C9E594 MOV X1, X31
	0x03C9E598 BL 0x33D55D8
	0x03C9E59C LDP X20, X19, [X31 + 0x30]
	0x03C9E5A0 LDP X30, X21, [X31 + 0x20]
	0x03C9E5A4 ADD X31, X31, 0x40
	0x03C9E5A8 RET
	0x03C9E5AC SUB X31, X31, 0x50
	0x03C9E5B0 STR X30, [X31 + 0x20]
	0x03C9E5B4 STP X22, X21, [X31 + 0x30]
	0x03C9E5B8 STP X20, X19, [X31 + 0x40]
	0x03C9E5BC ADRP X22, 0x749000
	0x03C9E5C0 ADRP X21, 0x4C3000
	0x03C9E5C4 LDRB W8, [X22 + 0x2C5]
	0x03C9E5C8 LDR X21, [X21 + 0x240]
	0x03C9E5CC MOV X19, X1
	0x03C9E5D0 MOV X20, X0
	0x03C9E5D4 TBNZ X8, 0x0, 0x3C9E5EC
	0x03C9E5D8 ADRP X0, 0x4C3000
	0x03C9E5DC LDR X0, [X0 + 0x240]
	0x03C9E5E0 BL 0x1C16CF4
	0x03C9E5E4 MOVZ W8, 0x1
	0x03C9E5E8 STRB W8, [X22 + 0x2C5]
	0x03C9E5EC LDR W8, [X20 + 0x10]
	0x03C9E5F0 LDR V0, [X20]
	0x03C9E5F4 LDR X0, [X21]
	0x03C9E5F8 ADD X1, X31, 0x0
	0x03C9E5FC STR W8, [X31 + 0x10]
	0x03C9E600 STR V0, [X31]
	0x03C9E604 BL 0x1C16E04
	0x03C9E608 MOV X1, X19
	0x03C9E60C MOV X2, X31
	0x03C9E610 BL 0x33D55D0
	0x03C9E614 LDP X20, X19, [X31 + 0x40]
	0x03C9E618 LDP X22, X21, [X31 + 0x30]
	0x03C9E61C LDR X30, [X31 + 0x20]
	0x03C9E620 AND W0, W0, 0x1
	0x03C9E624 ADD X31, X31, 0x50
	0x03C9E628 RET
	0x03C9E62C SUB X31, X31, 0x70
	0x03C9E630 STR X30, [X31 + 0x40]
	0x03C9E634 STP X22, X21, [X31 + 0x50]
	0x03C9E638 STP X20, X19, [X31 + 0x60]
	0x03C9E63C ADRP X22, 0x749000
	0x03C9E640 ADRP X21, 0x4C3000
	0x03C9E644 LDRB W8, [X22 + 0x2C6]
	0x03C9E648 LDR X21, [X21 + 0x240]
	0x03C9E64C MOV X19, X1
	0x03C9E650 MOV X20, X0
	0x03C9E654 TBNZ X8, 0x0, 0x3C9E66C
	0x03C9E658 ADRP X0, 0x4C3000
	0x03C9E65C LDR X0, [X0 + 0x240]
	0x03C9E660 BL 0x1C16CF4
	0x03C9E664 MOVZ W8, 0x1
	0x03C9E668 STRB W8, [X22 + 0x2C6]
	0x03C9E66C LDR W8, [X20 + 0x10]
	0x03C9E670 LDR V0, [X20]
	0x03C9E674 LDR X0, [X21]
	0x03C9E678 ADD X1, X31, 0x20
	0x03C9E67C STR W8, [X31 + 0x30]
	0x03C9E680 STR V0, [X31 + 0x2]
	0x03C9E684 BL 0x1C16E04
	0x03C9E688 MOV X20, X0
	0x03C9E68C LDR W8, [X19 + 0x10]
	0x03C9E690 LDR V0, [X19]
	0x03C9E694 LDR X0, [X21]
	0x03C9E698 ADD X1, X31, 0x0
	0x03C9E69C STR W8, [X31 + 0x10]
	0x03C9E6A0 STR V0, [X31]
	0x03C9E6A4 BL 0x1C16E04
	0x03C9E6A8 MOV X1, X0
	0x03C9E6AC MOV X0, X20
	0x03C9E6B0 MOV X2, X31
	0x03C9E6B4 BL 0x33D55D0
	0x03C9E6B8 LDP X20, X19, [X31 + 0x60]
	0x03C9E6BC LDP X22, X21, [X31 + 0x50]
	0x03C9E6C0 LDR X30, [X31 + 0x40]
	0x03C9E6C4 AND W0, W0, 0x1
	0x03C9E6C8 ADD X31, X31, 0x70
	0x03C9E6CC RET
	0x03C9E6D0 LDR W9, [X0 + 0x10]
	0x03C9E6D4 LDR V0, [X0]
	0x03C9E6D8 STR W9, [X8 + 0x10]
	0x03C9E6DC STR V0, [X8]
	0x03C9E6E0 RET
	0x03C9E6E4 LDR W9, [X0 + 0x24]
	0x03C9E6E8 LDUR V0, [X0 + 0x14]
	0x03C9E6EC STR W9, [X8 + 0x10]
	0x03C9E6F0 STR V0, [X8]
	0x03C9E6F4 RET
	0x03C9E6F8 LDR W0, [X0 + 0x28]
	0x03C9E6FC RET
	0x03C9E700 SUB X31, X31, 0x50
	0x03C9E704 STP X30, X21, [X31 + 0x30]
	0x03C9E708 STP X20, X19, [X31 + 0x40]
	0x03C9E70C ADRP X21, 0x749000
	0x03C9E710 ADRP X20, 0x480000
	0x03C9E714 LDRB W8, [X21 + 0x2C7]
	0x03C9E718 LDR X20, [X20 + 0x4C8]
	0x03C9E71C MOV X19, X0
	0x03C9E720 TBNZ X8, 0x0, 0x3C9E738
	0x03C9E724 ADRP X0, 0x480000
	0x03C9E728 LDR X0, [X0 + 0x4C8]
	0x03C9E72C BL 0x1C16CF4
	0x03C9E730 MOVZ W8, 0x1
	0x03C9E734 STRB W8, [X21 + 0x2C7]
	0x03C9E738 LDUR V0, [X19 + 0x1C]
	0x03C9E73C LDP V2, V1, [X19]
	0x03C9E740 LDR X0, [X20]
	0x03C9E744 ADD X1, X31, 0x0
	0x03C9E748 STUR V0, [X31 + 0x1C]
	0x03C9E74C STP V2, V1, [X31]
	0x03C9E750 BL 0x1C16E04
	0x03C9E754 MOV X1, X31
	0x03C9E758 BL 0x33D55D8
	0x03C9E75C LDP X20, X19, [X31 + 0x40]
	0x03C9E760 LDP X30, X21, [X31 + 0x30]
	0x03C9E764 ADD X31, X31, 0x50
	0x03C9E768 RET
	0x03C9E76C SUB X31, X31, 0x60
	0x03C9E770 STR X30, [X31 + 0x30]
	0x03C9E774 STP X22, X21, [X31 + 0x40]
	0x03C9E778 STP X20, X19, [X31 + 0x50]
	0x03C9E77C ADRP X22, 0x749000
	0x03C9E780 ADRP X21, 0x480000
	0x03C9E784 LDRB W8, [X22 + 0x2C8]
	0x03C9E788 LDR X21, [X21 + 0x4C8]
	0x03C9E78C MOV X19, X1
	0x03C9E790 MOV X20, X0
	0x03C9E794 TBNZ X8, 0x0, 0x3C9E7AC
	0x03C9E798 ADRP X0, 0x480000
	0x03C9E79C LDR X0, [X0 + 0x4C8]
	0x03C9E7A0 BL 0x1C16CF4
	0x03C9E7A4 MOVZ W8, 0x1
	0x03C9E7A8 STRB W8, [X22 + 0x2C8]
	0x03C9E7AC LDUR V0, [X20 + 0x1C]
	0x03C9E7B0 LDP V2, V1, [X20]
	0x03C9E7B4 LDR X0, [X21]
	0x03C9E7B8 ADD X1, X31, 0x0
	0x03C9E7BC STUR V0, [X31 + 0x1C]
	0x03C9E7C0 STP V2, V1, [X31]
	0x03C9E7C4 BL 0x1C16E04
	0x03C9E7C8 MOV X1, X19
	0x03C9E7CC MOV X2, X31
	0x03C9E7D0 BL 0x33D55D0
	0x03C9E7D4 LDP X20, X19, [X31 + 0x50]
	0x03C9E7D8 LDP X22, X21, [X31 + 0x40]
	0x03C9E7DC LDR X30, [X31 + 0x30]
	0x03C9E7E0 AND W0, W0, 0x1
	0x03C9E7E4 ADD X31, X31, 0x60
	0x03C9E7E8 RET
	0x03C9E7EC SUB X31, X31, 0x90
	0x03C9E7F0 STR X30, [X31 + 0x60]
	0x03C9E7F4 STP X22, X21, [X31 + 0x70]
	0x03C9E7F8 STP X20, X19, [X31 + 0x80]
	0x03C9E7FC ADRP X22, 0x749000
	0x03C9E800 ADRP X21, 0x480000
	0x03C9E804 LDRB W8, [X22 + 0x2C9]
	0x03C9E808 LDR X21, [X21 + 0x4C8]
	0x03C9E80C MOV X19, X1
	0x03C9E810 MOV X20, X0
	0x03C9E814 TBNZ X8, 0x0, 0x3C9E82C
	0x03C9E818 ADRP X0, 0x480000
	0x03C9E81C LDR X0, [X0 + 0x4C8]
	0x03C9E820 BL 0x1C16CF4
	0x03C9E824 MOVZ W8, 0x1
	0x03C9E828 STRB W8, [X22 + 0x2C9]
	0x03C9E82C LDUR V0, [X20 + 0x1C]
	0x03C9E830 LDP V2, V1, [X20]
	0x03C9E834 LDR X0, [X21]
	0x03C9E838 ADD X1, X31, 0x30
	0x03C9E83C STUR V0, [X31 + 0x4C]
	0x03C9E840 STP V2, V1, [X31 + 0x30]
	0x03C9E844 BL 0x1C16E04
	0x03C9E848 MOV X20, X0
	0x03C9E84C LDUR V0, [X19 + 0x1C]
	0x03C9E850 LDP V2, V1, [X19]
	0x03C9E854 LDR X0, [X21]
	0x03C9E858 ADD X1, X31, 0x0
	0x03C9E85C STUR V0, [X31 + 0x1C]
	0x03C9E860 STP V2, V1, [X31]
	0x03C9E864 BL 0x1C16E04
	0x03C9E868 MOV X1, X0
	0x03C9E86C MOV X0, X20
	0x03C9E870 MOV X2, X31
	0x03C9E874 BL 0x33D55D0
	0x03C9E878 LDP X20, X19, [X31 + 0x80]
	0x03C9E87C LDP X22, X21, [X31 + 0x70]
	0x03C9E880 LDR X30, [X31 + 0x60]
	0x03C9E884 AND W0, W0, 0x1
	0x03C9E888 ADD X31, X31, 0x90
	0x03C9E88C RET
	0x03C9E890 LDR V0, [X0]
	0x03C9E894 RET
	0x03C9E898 LDR V0, [X0 + 0x4]
	0x03C9E89C RET
	0x03C9E8A0 LDR V0, [X0]
	0x03C9E8A4 RET
	0x03C9E8A8 LDR V0, [X0 + 0x4]
	0x03C9E8AC RET
	0x03C9E8B0 LDR W0, [X0]
	0x03C9E8B4 RET
	0x03C9E8B8 LDP S0, S1, [X0 + 0x4]
	0x03C9E8BC RET
	0x03C9E8C0 LDR W0, [X0 + 0xC]
	0x03C9E8C4 RET
	0x03C9E8C8 LDP S0, S1, [X0 + 0x10]
	0x03C9E8CC RET
	0x03C9E8D0 LDR W0, [X0]
	0x03C9E8D4 RET
	0x03C9E8D8 LDP S0, S1, [X0 + 0x4]
	0x03C9E8DC RET
	0x03C9E8E0 LDR W0, [X0 + 0xC]
	0x03C9E8E4 RET
	0x03C9E8E8 LDP S0, S1, [X0 + 0x10]
	0x03C9E8EC RET
	0x03C9E8F0 LDR X0, [X0]
	0x03C9E8F4 RET
	0x03C9E8F8 LDR W0, [X0 + 0x8]
	0x03C9E8FC RET
	0x03C9E900 STP X30, X19, [X31 - 0x10]!
	0x03C9E904 MOV X1, X31
	0x03C9E908 MOV X19, X0
	0x03C9E90C BL 0x33BDD8C
	0x03C9E910 MOVZ W8, 0x1
	0x03C9E914 MOVZ W9, 0x3F800000
	0x03C9E918 STRB W8, [X19 + 0x10]
	0x03C9E91C STR W9, [X19 + 0x2C]
	0x03C9E920 LDP X30, X19, [X31], #0x10
	0x03C9E924 RET
	0x03C9E928 MOV X1, X31
	0x03C9E92C B 0x33BDD8C
	0x03C9E930 STR S0, [X0 + 0x2C]
	0x03C9E934 RET
	0x03C9E938 STR X30, [X31 - 0x30]!
	0x03C9E93C STP X22, X21, [X31 + 0x10]
	0x03C9E940 STP X20, X19, [X31 + 0x20]
	0x03C9E944 MOV W22, W1
	0x03C9E948 MOV X1, X31
	0x03C9E94C MOV X20, X3
	0x03C9E950 MOV X21, X2
	0x03C9E954 MOV X19, X0
	0x03C9E958 BL 0x33BDD8C
	0x03C9E95C MOVZ W8, 0x1
	0x03C9E960 STR W22, [X19 + 0x14]
	0x03C9E964 STRB W8, [X19 + 0x10]
	0x03C9E968 STP X21, X20, [X19 + 0x18]
	0x03C9E96C CBZ X20, 0x3C9E994
	0x03C9E970 MOV X0, X20
	0x03C9E974 MOV X1, X31
	0x03C9E978 BL 0x3C9C494
	0x03C9E97C MOVZ W8, 0x3F800000
	0x03C9E980 STP W0, W8, [X19 + 0x28]
	0x03C9E984 LDP X20, X19, [X31 + 0x20]
	0x03C9E988 LDP X22, X21, [X31 + 0x10]
	0x03C9E98C LDR X30, [X31], #0x30
	0x03C9E990 RET
	0x03C9E994 BL 0x1C16F20
	0x03C9E998 STR W1, [X0 + 0x14]
	0x03C9E99C RET
	0x03C9E9A0 STR X1, [X0 + 0x18]
	0x03C9E9A4 RET
	0x03C9E9A8 STR X1, [X0 + 0x20]
	0x03C9E9AC RET
	0x03C9E9B0 STR W1, [X0 + 0x28]
	0x03C9E9B4 RET
	0x03C9E9B8 STP X30, X21, [X31 - 0x20]!
	0x03C9E9BC STP X20, X19, [X31 + 0x10]
	0x03C9E9C0 MOV W20, W1
	0x03C9E9C4 MOV X1, X31
	0x03C9E9C8 MOV W19, W2
	0x03C9E9CC MOV X21, X0
	0x03C9E9D0 BL 0x33BDD8C
	0x03C9E9D4 MOVZ W9, 0x3F800000
	0x03C9E9D8 STR W20, [X21 + 0x14]
	0x03C9E9DC STP W19, W9, [X21 + 0x28]
	0x03C9E9E0 LDP X20, X19, [X31 + 0x10]
	0x03C9E9E4 MOVZ W8, 0x1
	0x03C9E9E8 STP X31, X31, [X21 + 0x18]
	0x03C9E9EC STRB W8, [X21 + 0x10]
	0x03C9E9F0 LDP X30, X21, [X31], #0x20
	0x03C9E9F4 RET
	0x03C9E9F8 EOR W8, W1, W0, 0x0
	0x03C9E9FC CMP W8, 0x0
	0x03C9EA00 CSET W0, EQ
	0x03C9EA04 RET
	0x03C9EA08 AND W8, W0, 0xFF
	0x03C9EA0C AND W12, W1, 0xFF
	0x03C9EA10 UCVTF S0, W8
	0x03C9EA14 MOVZ W8, 0x437F0000
	0x03C9EA18 FMOV S1, W8
	0x03C9EA1C UCVTF S2, W12
	0x03C9EA20 UBFM W9, W0, 0x8, 0xF
	0x03C9EA24 UBFM W10, W0, 0x10, 0x17
	0x03C9EA28 UBFM W13, W1, 0x8, 0xF
	0x03C9EA2C UBFM W14, W1, 0x10, 0x17
	0x03C9EA30 FDIV S0, S0, S1
	0x03C9EA34 FDIV S2, S2, S1
	0x03C9EA38 UCVTF S3, W9
	0x03C9EA3C UCVTF S4, W13
	0x03C9EA40 UCVTF S5, W10
	0x03C9EA44 FMUL S0, S0, S2
	0x03C9EA48 UCVTF S2, W14
	0x03C9EA4C UBFM X11, X0, 0x18, 0x1F
	0x03C9EA50 UBFM X15, X1, 0x18, 0x1F
	0x03C9EA54 FDIV S3, S3, S1
	0x03C9EA58 FDIV S4, S4, S1
	0x03C9EA5C FDIV S5, S5, S1
	0x03C9EA60 FDIV S2, S2, S1
	0x03C9EA64 FMUL S3, S3, S4
	0x03C9EA68 UCVTF S4, W11
	0x03C9EA6C FMUL S2, S5, S2
	0x03C9EA70 UCVTF S5, W15
	0x03C9EA74 FDIV S4, S4, S1
	0x03C9EA78 FDIV S5, S5, S1
	0x03C9EA7C FMUL S4, S4, S5
	0x03C9EA80 FMUL S0, S0, S1
	0x03C9EA84 FMUL S3, S3, S1
	0x03C9EA88 FMUL S2, S2, S1
	0x03C9EA8C FMUL S1, S4, S1
	0x03C9EA90 FCVTZS W8, S0
	0x03C9EA94 FCVTZS W9, S3
	0x03C9EA98 FCVTZS W10, S2
	0x03C9EA9C FCVTZS W11, S1
	0x03C9EAA0 MOV W0, W8
	0x03C9EAA4 MOV W8, W9
	0x03C9EAA8 MOV W9, W10
	0x03C9EAAC MOV W10, W11
	0x03C9EAB0 BFM X0, X9, 0x30, 0x7
	0x03C9EAB4 BFM X0, X10, 0x28, 0x7
	0x03C9EAB8 BFM X0, X8, 0x38, 0x7
	0x03C9EABC RET
	0x03C9EAC0 STR X30, [X31 - 0x10]!
	0x03C9EAC4 ADD X1, X0, 0x40
	0x03C9EAC8 MOVZ W2, 0x58
	0x03C9EACC MOV X0, X8
	0x03C9EAD0 BL 0x3EB1AC0
	0x03C9EAD4 LDR X30, [X31], #0x10
	0x03C9EAD8 RET
	0x03C9EADC STR X30, [X31 - 0x10]!
	0x03C9EAE0 ADD X0, X0, 0x40
	0x03C9EAE4 MOVZ W2, 0x58
	0x03C9EAE8 BL 0x3EB1B30
	0x03C9EAEC LDR X30, [X31], #0x10
	0x03C9EAF0 RET
	0x03C9EAF4 LDR X0, [X0 + 0x98]
	0x03C9EAF8 RET
	0x03C9EAFC STR X1, [X0 + 0x98]
	0x03C9EB00 RET
	0x03C9EB04 LDR W0, [X0 + 0xA8]
	0x03C9EB08 RET
	0x03C9EB0C STR W1, [X0 + 0xA8]
	0x03C9EB10 RET
	0x03C9EB14 STR X30, [X31 - 0x10]!
	0x03C9EB18 ADD X1, X0, 0xB0
	0x03C9EB1C MOVZ W2, 0x60
	0x03C9EB20 MOV X0, X8
	0x03C9EB24 BL 0x3EB1AC0
	0x03C9EB28 LDR X30, [X31], #0x10
	0x03C9EB2C RET
	0x03C9EB30 STR X30, [X31 - 0x10]!
	0x03C9EB34 ADD X0, X0, 0xB0
	0x03C9EB38 MOVZ W2, 0x60
	0x03C9EB3C BL 0x3EB1B30
	0x03C9EB40 LDR X30, [X31], #0x10
	0x03C9EB44 RET
	0x03C9EB48 STP X30, X19, [X31 - 0x10]!
	0x03C9EB4C MOV X19, X0
	0x03C9EB50 LDR W0, [X0 + 0x110]
	0x03C9EB54 CBNZ W0, 0x3C9EB70
	0x03C9EB58 ADD X0, X19, 0xB0
	0x03C9EB5C MOV X1, X31
	0x03C9EB60 BL 0x3C9BF68
	0x03C9EB64 MOV X1, X31
	0x03C9EB68 BL 0x3CCBE90
	0x03C9EB6C STR W0, [X19 + 0x110]
	0x03C9EB70 LDP X30, X19, [X31], #0x10
	0x03C9EB74 RET
	0x03C9EB78 STR W1, [X0 + 0x110]
	0x03C9EB7C RET
	0x03C9EB80 STP X30, X19, [X31 - 0x10]!
	0x03C9EB84 MOV X19, X0
	0x03C9EB88 LDR W0, [X0 + 0x114]
	0x03C9EB8C CBNZ W0, 0x3C9EBA8
	0x03C9EB90 ADD X0, X19, 0xB0
	0x03C9EB94 MOV X1, X31
	0x03C9EB98 BL 0x3C9BF78
	0x03C9EB9C MOV X1, X31
	0x03C9EBA0 BL 0x3CCBE90
	0x03C9EBA4 STR W0, [X19 + 0x114]
	0x03C9EBA8 LDP X30, X19, [X31], #0x10
	0x03C9EBAC RET
	0x03C9EBB0 STR W1, [X0 + 0x114]
	0x03C9EBB4 RET
	0x03C9EBB8 LDR X0, [X0 + 0x118]
	0x03C9EBBC RET
	0x03C9EBC0 STR X1, [X0 + 0x118]
	0x03C9EBC4 RET
	0x03C9EBC8 STP X30, X19, [X31 - 0x10]!
	0x03C9EBCC MOV X19, X0
	0x03C9EBD0 LDR X0, [X0 + 0x120]
	0x03C9EBD4 CBNZ X0, 0x3C9EBE4
	0x03C9EBD8 MOV X0, X19
	0x03C9EBDC BL 0x3C9EBEC
	0x03C9EBE0 LDR X0, [X19 + 0x120]
	0x03C9EBE4 LDP X30, X19, [X31], #0x10
	0x03C9EBE8 RET
	0x03C9EBEC SUB X31, X31, 0x70
	0x03C9EBF0 STR X30, [X31 + 0x40]
	0x03C9EBF4 STP X22, X21, [X31 + 0x50]
	0x03C9EBF8 STP X20, X19, [X31 + 0x60]
	0x03C9EBFC ADRP X20, 0x749000
	0x03C9EC00 LDRB W8, [X20 + 0x2D5]
	0x03C9EC04 MOV X19, X0
	0x03C9EC08 TBNZ X8, 0x0, 0x3C9EC5C
	0x03C9EC0C ADRP X0, 0x4C3000
	0x03C9EC10 LDR X0, [X0 + 0x248]
	0x03C9EC14 BL 0x1C16CF4
	0x03C9EC18 ADRP X0, 0x4BA000
	0x03C9EC1C LDR X0, [X0 + 0xC90]
	0x03C9EC20 BL 0x1C16CF4
	0x03C9EC24 ADRP X0, 0x4C3000
	0x03C9EC28 LDR X0, [X0 + 0x250]
	0x03C9EC2C BL 0x1C16CF4
	0x03C9EC30 ADRP X0, 0x4C3000
	0x03C9EC34 LDR X0, [X0 + 0x258]
	0x03C9EC38 BL 0x1C16CF4
	0x03C9EC3C ADRP X0, 0x4C3000
	0x03C9EC40 LDR X0, [X0 + 0x260]
	0x03C9EC44 BL 0x1C16CF4
	0x03C9EC48 ADRP X0, 0x4C3000
	0x03C9EC4C LDR X0, [X0 + 0x268]
	0x03C9EC50 BL 0x1C16CF4
	0x03C9EC54 MOVZ W8, 0x1
	0x03C9EC58 STRB W8, [X20 + 0x2D5]
	0x03C9EC5C ADRP X21, 0x4C3000
	0x03C9EC60 LDR X21, [X21 + 0x248]
	0x03C9EC64 MOV X0, X19
	0x03C9EC68 STP X31, X31, [X31 + 0x20]
	0x03C9EC6C STR W31, [X31 + 0x30]
	0x03C9EC70 BL 0x3C9FE90
	0x03C9EC74 MOV X0, X19
	0x03C9EC78 BL 0x3C9FEC8
	0x03C9EC7C ADD X20, X19, 0xB0
	0x03C9EC80 MOV X0, X20
	0x03C9EC84 MOV X1, X31
	0x03C9EC88 BL 0x3C9BFC8
	0x03C9EC8C FCMP S0, 0x0
	0x03C9EC90 B.NE 0x3C9ED24
	0x03C9EC94 LDR X0, [X19 + 0x130]
	0x03C9EC98 CBZ X0, 0x3C9EF88
	0x03C9EC9C LDR X2, [X21]
	0x03C9ECA0 MOVZ W1, 0x58
	0x03C9ECA4 BL 0x2B0F250
	0x03C9ECA8 TBZ X0, 0x0, 0x3C9ED24
	0x03C9ECAC LDR X0, [X19 + 0x130]
	0x03C9ECB0 CBZ X0, 0x3C9EF88
	0x03C9ECB4 ADRP X8, 0x4C3000
	0x03C9ECB8 LDR X8, [X8 + 0x250]
	0x03C9ECBC MOVZ W1, 0x58
	0x03C9ECC0 LDR X2, [X8]
	0x03C9ECC4 BL 0x2B0EFBC
	0x03C9ECC8 CBZ X0, 0x3C9EF88
	0x03C9ECCC LDR X8, [X19 + 0x120]
	0x03C9ECD0 CBZ X8, 0x3C9EF88
	0x03C9ECD4 ADRP X9, 0x4BA000
	0x03C9ECD8 LDR W1, [X0 + 0x28]
	0x03C9ECDC LDR X9, [X9 + 0xC90]
	0x03C9ECE0 MOV X0, X8
	0x03C9ECE4 LDR X2, [X9]
	0x03C9ECE8 BL 0x2B0EFBC
	0x03C9ECEC CBZ X0, 0x3C9EF88
	0x03C9ECF0 ADD X8, X31, 0x8
	0x03C9ECF4 MOV X1, X31
	0x03C9ECF8 BL 0x3C9C4A4
	0x03C9ECFC LDUR V0, [X31 + 0x8]
	0x03C9ED00 LDR W8, [X31 + 0x18]
	0x03C9ED04 ADD X0, X31, 0x20
	0x03C9ED08 MOV X1, X31
	0x03C9ED0C STR V0, [X31 + 0x2]
	0x03C9ED10 STR W8, [X31 + 0x30]
	0x03C9ED14 BL 0x3C9C2E4
	0x03C9ED18 MOV X0, X20
	0x03C9ED1C MOV X1, X31
	0x03C9ED20 BL 0x3C9BFD0
	0x03C9ED24 MOV X0, X20
	0x03C9ED28 MOV X1, X31
	0x03C9ED2C BL 0x3C9BFD8
	0x03C9ED30 FCMP S0, 0x0
	0x03C9ED34 B.NE 0x3C9EDC8
	0x03C9ED38 LDR X0, [X19 + 0x130]
	0x03C9ED3C CBZ X0, 0x3C9EF88
	0x03C9ED40 LDR X2, [X21]
	0x03C9ED44 MOVZ W1, 0x78
	0x03C9ED48 BL 0x2B0F250
	0x03C9ED4C TBZ X0, 0x0, 0x3C9EDC8
	0x03C9ED50 LDR X0, [X19 + 0x130]
	0x03C9ED54 CBZ X0, 0x3C9EF88
	0x03C9ED58 ADRP X8, 0x4C3000
	0x03C9ED5C LDR X8, [X8 + 0x250]
	0x03C9ED60 MOVZ W1, 0x78
	0x03C9ED64 LDR X2, [X8]
	0x03C9ED68 BL 0x2B0EFBC
	0x03C9ED6C CBZ X0, 0x3C9EF88
	0x03C9ED70 LDR X8, [X19 + 0x120]
	0x03C9ED74 CBZ X8, 0x3C9EF88
	0x03C9ED78 ADRP X9, 0x4BA000
	0x03C9ED7C LDR W1, [X0 + 0x28]
	0x03C9ED80 LDR X9, [X9 + 0xC90]
	0x03C9ED84 MOV X0, X8
	0x03C9ED88 LDR X2, [X9]
	0x03C9ED8C BL 0x2B0EFBC
	0x03C9ED90 CBZ X0, 0x3C9EF88
	0x03C9ED94 ADD X8, X31, 0x8
	0x03C9ED98 MOV X1, X31
	0x03C9ED9C BL 0x3C9C4A4
	0x03C9EDA0 LDUR V0, [X31 + 0x8]
	0x03C9EDA4 LDR W8, [X31 + 0x18]
	0x03C9EDA8 ADD X0, X31, 0x20
	0x03C9EDAC MOV X1, X31
	0x03C9EDB0 STR V0, [X31 + 0x2]
	0x03C9EDB4 STR W8, [X31 + 0x30]
	0x03C9EDB8 BL 0x3C9C2E4
	0x03C9EDBC MOV X0, X20

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+176], D8
	003 Move [X31+192], X29
	004 Move [X31+200], X30
	005 Move [X31+208], X28
	006 Move [X31+216], X27
	007 Move [X31+224], X26
	008 Move [X31+232], X25
	009 Move [X31+240], X24
	010 Move [X31+248], X23
	011 Move [X31+256], X22
	012 Move [X31+264], X21
	013 Move [X31+272], X20
	014 Move [X31+280], X19
	015 Move X19, 0x74A000
	016 Move W8, [X19+656]
	017 Move X24, X7
	018 Move X22, X6
	019 Move W25, W5
	020 Move X20, X4
	021 Move X21, X3
	022 Move W27, W2
	023 Move W28, W1
	024 Move X26, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {67}
	029 Move X0, 0x4BB000
	030 Move X0, [X0+3008]
	031 Call 0x1C17CF4
	032 Move X0, 0x4C4000
	033 Move X0, [X0+536]
	034 Call 0x1C17CF4
	035 Move X0, 0x4C4000
	036 Move X0, [X0+512]
	037 Call 0x1C17CF4
	038 Move X0, 0x4C4000
	039 Move X0, [X0+544]
	040 Call 0x1C17CF4
	041 Move X0, 0x4BB000
	042 Move X0, [X0+3080]
	043 Call 0x1C17CF4
	044 Move X0, 0x4BB000
	045 Move X0, [X0+3016]
	046 Call 0x1C17CF4
	047 Move X0, 0x4BB000
	048 Move X0, [X0+3728]
	049 Call 0x1C17CF4
	050 Move X0, 0x4BB000
	051 Move X0, [X0+2136]
	052 Call 0x1C17CF4
	053 Move X0, 0x4C4000
	054 Move X0, [X0+520]
	055 Call 0x1C17CF4
	056 Move X0, 0x4C4000
	057 Move X0, [X0+528]
	058 Call 0x1C17CF4
	059 Move X0, 0x4BB000
	060 Move X0, [X0+2144]
	061 Call 0x1C17CF4
	062 Move X0, 0x47F000
	063 Move X0, [X0+3336]
	064 Call 0x1C17CF4
	065 Move W8, 1
	066 Move [X19+656], W8
	067 Move [X24], X31
	068 Compare X26, 0
	069 JumpIfEqual {292}
	070 Move W23, [X26+24]
	071 Compare W23, 0
	072 JumpIfEqual {292}
	073 Move [X31+64], W28
	074 Move [X31+72], W27
	075 Move X29, 0x4BB000
	076 Move X29, [X29+3008]
	077 Move [X31+188], W23
	078 Move X8, [X29]
	079 Move W9, [X8+224]
	080 Compare W9, 0
	081 JumpIfNotEqual {85}
	082 Move X0, X8
	083 Call 0x1C17DFC
	084 Move X8, [X29]
	085 Move X9, [X8+184]
	086 Move X9, [X9+8]
	087 Compare X9, 0
	088 JumpIfEqual {101}
	089 Move W10, [X8+224]
	090 Compare W10, 0
	091 JumpIfNotEqual {99}
	092 Move X0, X8
	093 Call 0x1C17DFC
	094 Move X8, [X29]
	095 Move X9, [X8+184]
	096 Move X9, [X9+8]
	097 Compare X9, 0
	098 JumpIfEqual {585}
	099 Move W9, [X9+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Add W0, W23, 1
	102 Move X1, X31
	103 Call Mathf.NextPowerOfTwo, X0
	104 Move X8, 0x47F000
	105 Move X8, [X8+3336]
	106 Move W1, W0
	107 Move X8, [X8]
	108 Move X0, X8
	109 Call 0x1C17D6C
	110 Move X8, [X29]
	111 Move X27, X0
	112 Move W9, [X8+224]
	113 Compare W9, 0
	114 JumpIfNotEqual {118}
	115 Move X0, X8
	116 Call 0x1C17DFC
	117 Move X8, [X29]
	118 Move X9, [X8+184]
	119 Move [X9+8], X27
	120 Move [X31+56], X22
	121 Compare X21, 0
	122 JumpIfEqual {585}
	123 Move W22, [X21+24]
	124 Move [X31+184], W22
	125 Compare X20, 0
	126 JumpIfEqual {585}
	127 Move W19, [X20+24]
	128 Move [X31+124], W19
	129 Move W9, [X8+224]
	130 Compare W9, 0
	131 JumpIfNotEqual {135}
	132 Move X0, X8
	133 Call 0x1C17DFC
	134 Move X8, [X29]
	135 Move X9, [X8+184]
	136 Move [X31+48], X24
	137 Move X10, [X9+32]
	138 Compare X10, 0
	139 JumpIfEqual {585}
	140 Move W10, [X10+24]
	141 Add W11, W19, W22
	142 Add W24, W11, W23
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move W10, [X8+224]
	145 Compare W10, 0
	146 JumpIfNotEqual {151}
	147 Move X0, X8
	148 Call 0x1C17DFC
	149 Move X8, [X29]
	150 Move X9, [X8+184]
	151 Move X9, [X9+40]
	152 Compare X9, 0
	153 JumpIfEqual {585}
	154 Move W9, [X9+24]
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Add W0, W24, 1
	157 Move X1, X31
	158 Call Mathf.NextPowerOfTwo, X0
	159 Move X24, 0x4C4000
	160 Move X24, [X24+512]
	161 Move W27, W0
	162 Move W1, W27
	163 Move X8, [X24]
	164 Move X0, X8
	165 Call 0x1C17D6C
	166 Move X8, [X29]
	167 Move X28, X0
	168 Move W9, [X8+224]
	169 Compare W9, 0
	170 JumpIfNotEqual {174}
	171 Move X0, X8
	172 Call 0x1C17DFC
	173 Move X8, [X29]
	174 Move X8, [X8+184]
	175 Move W1, W27
	176 Move [X8+32], X28
	177 Move X0, [X24]
	178 Call 0x1C17D6C
	179 Move X8, [X29]
	180 Move X9, [X8+184]
	181 Move [X9+40], X0
	182 Move W9, [X8+224]
	183 Compare W9, 0
	184 JumpIfNotEqual {188}
	185 Move X0, X8
	186 Call 0x1C17DFC
	187 Move X8, [X29]
	188 Move X9, [X8+184]
	189 Move X9, [X9+24]
	190 Compare X9, 0
	191 JumpIfEqual {585}
	192 Move W9, [X9+24]
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Add W0, W23, 1
	195 Move X1, X31
	196 Call Mathf.NextPowerOfTwo, X0
	197 Move X8, 0x4C4000
	198 Move X8, [X8+536]
	199 Move W1, W0
	200 Move X8, [X8]
	201 Move X0, X8
	202 Call 0x1C17D6C
	203 Move X8, [X29]
	204 Move X27, X0
	205 Move W9, [X8+224]
	206 Compare W9, 0
	207 JumpIfNotEqual {211}
	208 Move X0, X8
	209 Call 0x1C17DFC
	210 Move X8, [X29]
	211 Move X9, [X8+184]
	212 Move [X9+24], X27
	213 NotImplemented "Instruction CMP not yet implemented."
	214 NotImplemented "Instruction CSEL not yet implemented."
	215 NotImplemented "Instruction CMP not yet implemented."
	216 NotImplemented "Instruction CSEL not yet implemented."
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Move [X31+44], W25
	219 Move X28, 0x4BB000
	220 Move X25, 0x4C4000
	221 Move X28, [X28+2144]
	222 Move X25, [X25+528]
	223 Move W8, W9
	224 Move X27, X31
	225 Move W19, 32
	226 Subtract X24, X8, 1
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move X0, [X29]
	229 Move W8, [X0+224]
	230 Compare W8, 0
	231 JumpIfNotEqual {234}
	232 Call 0x1C17DFC
	233 Move X0, [X29]
	234 Move X8, [X0+184]
	235 Move X2, [X28]
	236 Move X0, X26
	237 Move W1, W27
	238 Move X22, [X8+8]
	239 Call List`1<UInt32>.get_Item, X0, X1
	240 Compare X22, 0
	241 JumpIfEqual {585}
	242 Move W8, [X22+24]
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Add X8, X22, X27
	245 Move [X8+32], W0
	246 Move W22, [X31+184]
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Move X0, [X29]
	249 Move W8, [X0+224]
	250 Compare W8, 0
	251 JumpIfNotEqual {254}
	252 Call 0x1C17DFC
	253 Move X0, [X29]
	254 Move X8, [X0+184]
	255 Move X2, [X25]
	256 Move X0, X21
	257 Move W1, W27
	258 Move X23, [X8+32]
	259 Call List`1<GlyphRect>.get_Item, X0, X1
	260 Compare X23, 0
	261 JumpIfEqual {585}
	262 Move W8, [X23+24]
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Add X8, X23, X19
	265 Move [X8], X0
	266 Move [X8+8], X1
	267 NotImplemented "Instruction LDRSW not yet implemented."
	268 NotImplemented "Instruction CMP not yet implemented."
	269 Move X0, [X29]
	270 Move W8, [X0+224]
	271 Compare W8, 0
	272 JumpIfNotEqual {275}
	273 Call 0x1C17DFC
	274 Move X0, [X29]
	275 Move X8, [X0+184]
	276 Move X2, [X25]
	277 Move X0, X20
	278 Move W1, W27
	279 Move X23, [X8+40]
	280 Call List`1<GlyphRect>.get_Item, X0, X1
	281 Compare X23, 0
	282 JumpIfEqual {585}
	283 Move W8, [X23+24]
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Add X8, X23, X19
	286 Move [X8], X0
	287 Move [X8+8], X1
	288 NotImplemented "Instruction CMP not yet implemented."
	289 Move W23, [X31+188]
	290 Add X27, X27, 1
	291 Add X19, X19, 16
	292 Move W10, W31
	293 Move X8, [X29]
	294 Move W25, [X31+44]
	295 Move W9, [X8+224]
	296 Compare W9, 0
	297 JumpIfNotEqual {301}
	298 Move X0, X8
	299 Call 0x1C17DFC
	300 Move X8, [X29]
	301 Move X9, [X8+184]
	302 Move X22, 0x74A000
	303 Move X8, [X22+664]
	304 Move X28, [X9+8]
	305 Move X27, [X9+32]
	306 Move X26, [X9+40]
	307 Move X19, [X9+24]
	308 Compare X8, 0
	309 JumpIfNotEqual {315}
	310 Move X0, -51970048
	311 Add X0, X0, 2625
	312 Call 0x1C17CB8
	313 Move X8, X0
	314 Move [X22+664], X0
	315 Add X9, X31, 188
	316 Move [X31+8], X19
	317 Move [X31+16], X9
	318 Move X9, [X31+56]
	319 Move W1, [X31+64]
	320 Move W2, [X31+72]
	321 Add X4, X31, 184
	322 Add X6, X31, 124
	323 Move X0, X28
	324 Move X3, X27
	325 Move X5, X26
	326 Move W7, W25
	327 Move [X31], X9
	328 NotImplemented "Instruction BLR not yet implemented."
	329 Move X8, [X29]
	330 Move W19, W0
	331 Move X9, [X8+184]
	332 Move X9, [X9]
	333 Compare X9, 0
	334 JumpIfEqual {348}
	335 Move W10, [X8+224]
	336 Compare W10, 0
	337 JumpIfNotEqual {345}
	338 Move X0, X8
	339 Call 0x1C17DFC
	340 Move X8, [X29]
	341 Move X9, [X8+184]
	342 Move X9, [X9]
	343 Compare X9, 0
	344 JumpIfEqual {585}
	345 Move W10, [X31+188]
	346 Move W9, [X9+24]
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Move W10, [X31+188]
	349 Add W0, W10, 1
	350 Move X1, X31
	351 Call Mathf.NextPowerOfTwo, X0
	352 Move X8, 0x4C4000
	353 Move X8, [X8+544]
	354 Move W1, W0
	355 Move X8, [X8]
	356 Move X0, X8
	357 Call 0x1C17D6C
	358 Move X8, [X29]
	359 Move X23, X0
	360 Move W9, [X8+224]
	361 Compare W9, 0
	362 JumpIfNotEqual {366}
	363 Move X0, X8
	364 Call 0x1C17DFC
	365 Move X8, [X29]
	366 Move X8, [X8+184]
	367 Move [X8], X23
	368 Move X8, [X29]
	369 Move W9, [X8+224]
	370 Compare W9, 0
	371 JumpIfNotEqual {375}
	372 Move X0, X8
	373 Call 0x1C17DFC
	374 Move X8, [X29]
	375 Move X8, [X8+184]
	376 Move X9, [X8]
	377 Compare X9, 0
	378 JumpIfEqual {585}
	379 Move W8, [X31+188]
	380 Move W10, [X9+24]
	381 Move [X31+56], W19
	382 NotImplemented "Instruction CMP not yet implemented."
	383 Move X10, W8
	384 Add X9, X9, X10
	385 Move [X9+32], X31
	386 Move W9, [X21+28]
	387 Add W9, W9, 1
	388 Move [X21+24], W31
	389 Move [X21+28], W9
	390 Move W9, [X20+28]
	391 Add W9, W9, 1
	392 Move [X20+24], W31
	393 Move [X20+28], W9
	394 Move W9, [X31+124]
	395 Move W10, [X31+184]
	396 NotImplemented "Instruction CMP not yet implemented."
	397 NotImplemented "Instruction CSEL not yet implemented."
	398 NotImplemented "Instruction CMP not yet implemented."
	399 NotImplemented "Instruction CSEL not yet implemented."
	400 NotImplemented "Instruction CMP not yet implemented."
	401 Add X10, X31, 128
	402 Add X10, X10, 20
	403 Move [X31+72], X10
	404 Move X22, 0x4BB000
	405 Move X22, [X22+3016]
	406 Move W9, W9
	407 Move X9, X9
	408 ShiftRight X9, 60
	409 And X9, X9, 0x7FFFFFF
	410 Move X24, X31
	411 Move X25, X31
	412 Move X26, X31
	413 Subtract X19, X9, 16
	414 Move [X31+64], X20
	415 NotImplemented "Instruction CMP not yet implemented."
	416 Move X0, [X29]
	417 Move W8, [X0+224]
	418 Compare W8, 0
	419 JumpIfNotEqual {422}
	420 Call 0x1C17DFC
	421 Move X0, [X29]
	422 Move X9, [X0+184]
	423 Move X8, [X9+24]
	424 Compare X8, 0
	425 JumpIfEqual {585}
	426 Move W10, [X8+24]
	427 NotImplemented "Instruction CMP not yet implemented."
	428 Add X8, X8, X24
	429 Move X27, [X9]
	430 Move W9, [X8+68]
	431 NotImplemented "Instruction LDUR not yet implemented."
	432 NotImplemented "Instruction LDUR not yet implemented."
	433 Move X20, X29
	434 Move X29, X22
	435 Move W22, [X8+32]
	436 Move [X31+112], W9
	437 Move [X31+80], V1
	438 Move [X31+88], V0
	439 Move V8, [X8+72]
	440 Move W28, [X8+76]
	441 Move X8, 0x4BB000
	442 Move X8, [X8+3080]
	443 Move X0, [X8]
	444 Call 0x1C17F10
	445 Move X1, X31
	446 Move X23, X0
	447 Call Object..ctor, X0
	448 Move [X23+16], W22
	449 Move W8, [X31+96]
	450 Move V0, [X31+80]
	451 Move V1, [X31+96]
	452 Move [X23+36], W8
	453 Move [X23+20], V0
	454 Move W8, [X31+112]
	455 Move V0, [X31+5]
	456 Move [X31+160], W8
	457 Move X8, [X31+72]
	458 Move [X31+128], V0
	459 Move [X31+136], V1
	460 Move V0, [X8]
	461 Move [X23+56], S8
	462 Move [X23+60], W28
	463 Move [X23+40], V0
	464 Compare X27, 0
	465 JumpIfEqual {585}
	466 Move X8, [X27]
	467 Move X0, X23
	468 Move X1, [X8+64]
	469 Call 0x1C17E00
	470 Compare X0, 0
	471 JumpIfEqual {587}
	472 Move W8, [X27+24]
	473 NotImplemented "Instruction CMP not yet implemented."
	474 Move X22, X29
	475 Move X29, X20
	476 Move X20, [X31+64]
	477 Add X8, X27, X26
	478 Move [X8+32], X23
	479 NotImplemented "Instruction LDRSW not yet implemented."
	480 NotImplemented "Instruction CMP not yet implemented."
	481 Move X0, [X29]
	482 Move W8, [X0+224]
	483 Compare W8, 0
	484 JumpIfNotEqual {487}
	485 Call 0x1C17DFC
	486 Move X0, [X29]
	487 Move X8, [X0+184]
	488 Move X8, [X8+32]
	489 Compare X8, 0
	490 JumpIfEqual {585}
	491 Move W9, [X8+24]
	492 NotImplemented "Instruction CMP not yet implemented."
	493 Add X8, X8, X25
	494 Move W10, [X21+28]
	495 Move X1, [X8+32]
	496 Move X2, [X8+40]
	497 Move X8, [X21+16]
	498 Move X9, [X22]
	499 Add W10, W10, 1
	500 Move [X21+28], W10
	501 Compare X8, 0
	502 JumpIfEqual {585}
	503 NotImplemented "Instruction LDRSW not yet implemented."
	504 Move W11, [X8+24]
	505 NotImplemented "Instruction CMP not yet implemented."
	506 Add W9, W10, 1
	507 Add X8, X8, X10
	508 Move [X21+24], W9
	509 Move [X8+32], X1
	510 Move [X8+40], X2
	511 Move X8, [X9+32]
	512 Move X0, X21
	513 Move X8, [X8+192]
	514 Move X3, [X8+112]
	515 Call List`1<GlyphRect>.AddWithResize, X0, X1
	516 NotImplemented "Instruction LDRSW not yet implemented."
	517 NotImplemented "Instruction CMP not yet implemented."
	518 Move X0, [X29]
	519 Move W8, [X0+224]
	520 Compare W8, 0
	521 JumpIfNotEqual {524}
	522 Call 0x1C17DFC
	523 Move X0, [X29]
	524 Move X8, [X0+184]
	525 Move X8, [X8+40]
	526 Compare X8, 0
	527 JumpIfEqual {585}
	528 Move W9, [X8+24]
	529 NotImplemented "Instruction CMP not yet implemented."
	530 Add X8, X8, X25
	531 Move W10, [X20+28]
	532 Move X1, [X8+32]
	533 Move X2, [X8+40]
	534 Move X8, [X20+16]
	535 Move X9, [X22]
	536 Add W10, W10, 1
	537 Move [X20+28], W10
	538 Compare X8, 0
	539 JumpIfEqual {585}
	540 NotImplemented "Instruction LDRSW not yet implemented."
	541 Move W11, [X8+24]
	542 NotImplemented "Instruction CMP not yet implemented."
	543 Add W9, W10, 1
	544 Add X8, X8, X10
	545 Move [X20+24], W9
	546 Move [X8+32], X1
	547 Move [X8+40], X2
	548 Move X8, [X9+32]
	549 Move X0, X20
	550 Move X8, [X8+192]
	551 Move X3, [X8+112]
	552 Call List`1<GlyphRect>.AddWithResize, X0, X1
	553 NotImplemented "Instruction CMP not yet implemented."
	554 Move W8, [X31+188]
	555 Add X26, X26, 1
	556 Add X25, X25, 16
	557 Add X24, X24, 52
	558 Move X0, [X29]
	559 Move W8, [X0+224]
	560 Compare W8, 0
	561 JumpIfNotEqual {564}
	562 Call 0x1C17DFC
	563 Move X0, [X29]
	564 Move X8, [X0+184]
	565 Move X9, [X31+48]
	566 Move W10, [X31+56]
	567 Move X8, [X8]
	568 Move [X9], X8
	569 Move X20, [X31+272]
	570 Move X19, [X31+280]
	571 Move X22, [X31+256]
	572 Move X21, [X31+264]
	573 Move X24, [X31+240]
	574 Move X23, [X31+248]
	575 Move X26, [X31+224]
	576 Move X25, [X31+232]
	577 Move X28, [X31+208]
	578 Move X27, [X31+216]
	579 Move X29, [X31+192]
	580 Move X30, [X31+200]
	581 Move V8, [X31+176]
	582 And W0, W10, 1
	583 Add X31, X31, 288
	584 Return X0
	585 Call 0x1C17F20
	586 Call 0x1C17F28
	587 Call 0x1C17F44
	588 Move X1, X31
	589 Call 0x1C17DEC

Method: System.Boolean TryAddGlyphsToTexture_Internal(System.UInt32[] glyphIndex, System.Int32 padding, UnityEngine.TextCore.LowLevel.GlyphPackingMode packingMode, out UnityEngine.TextCore.GlyphRect[] freeGlyphRects, ref System.Int32 freeGlyphRectCount, out UnityEngine.TextCore.GlyphRect[] usedGlyphRects, ref System.Int32 usedGlyphRectCount, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, UnityEngine.Texture2D texture, out UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct[] glyphs, ref System.Int32 glyphCount)

Disassembly:
	0x03C9EDE0 MOV X0, X20
	0x03C9EDE4 MOV X1, X31
	0x03C9EDE8 BL 0x3C9BFA0
	0x03C9EDEC MOV X0, X20
	0x03C9EDF0 MOV X1, X31
	0x03C9EDF4 BL 0x3C9C068
	0x03C9EDF8 FCMP S0, 0x0
	0x03C9EDFC B.NE 0x3C9EE20
	0x03C9EE00 MOV X0, X20
	0x03C9EE04 MOV X1, X31
	0x03C9EE08 BL 0x3C9BFC8
	0x03C9EE0C FMOV S1, 2.5
	0x03C9EE10 FDIV S0, S0, S1
	0x03C9EE14 MOV X0, X20
	0x03C9EE18 MOV X1, X31
	0x03C9EE1C BL 0x3C9C070
	0x03C9EE20 LDR W8, [X19 + 0x158]
	0x03C9EE24 CBNZ W8, 0x3C9EEB4
	0x03C9EE28 ADRP X22, 0x4C3000
	0x03C9EE2C LDR X22, [X22 + 0x268]
	0x03C9EE30 LDR X21, [X19 + 0x28]
	0x03C9EE34 LDR X0, [X22]
	0x03C9EE38 LDR W8, [X0 + 0xE0]
	0x03C9EE3C CBNZ W8, 0x3C9EE44
	0x03C9EE40 BL 0x1C16DFC
	0x03C9EE44 CBZ X21, 0x3C9EF88
	0x03C9EE48 LDR X8, [X22]
	0x03C9EE4C MOV X0, X21
	0x03C9EE50 MOV X2, X31
	0x03C9EE54 LDR X8, [X8 + 0xB8]
	0x03C9EE58 LDR W1, [X8 + 0x6C]
	0x03C9EE5C BL 0x3C14D08
	0x03C9EE60 TBZ X0, 0x0, 0x3C9EEB4
	0x03C9EE64 LDR X0, [X22]
	0x03C9EE68 LDR X21, [X19 + 0x28]
	0x03C9EE6C LDR W8, [X0 + 0xE0]
	0x03C9EE70 CBNZ W8, 0x3C9EE78
	0x03C9EE74 BL 0x1C16DFC
	0x03C9EE78 CBZ X21, 0x3C9EF88
	0x03C9EE7C LDR X8, [X22]
	0x03C9EE80 MOV X0, X21
	0x03C9EE84 MOV X2, X31

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X8, 0x74A000
	014 Move X29, [X31+104]
	015 Move X27, [X31+112]
	016 Move X8, [X8+664]
	017 Move X28, [X31+96]
	018 Move W19, W7
	019 Move X20, X6
	020 Move X21, X5
	021 Move X22, X4
	022 Move X23, X3
	023 Move W24, W2
	024 Move W25, W1
	025 Move X26, X0
	026 Compare X8, 0
	027 JumpIfNotEqual {34}
	028 Move X0, -51970048
	029 Add X0, X0, 2625
	030 Call 0x1C17CB8
	031 Move X8, X0
	032 Move X9, 0x74A000
	033 Move [X9+664], X0
	034 Move [X31+104], X29
	035 Move [X31+112], X27
	036 Move [X31+96], X28
	037 Move X0, X26
	038 Move W1, W25
	039 Move W2, W24
	040 Move X3, X23
	041 Move X4, X22
	042 Move X5, X21
	043 Move X6, X20
	044 Move W7, W19
	045 Move X20, [X31+80]
	046 Move X19, [X31+88]
	047 Move X22, [X31+64]
	048 Move X21, [X31+72]
	049 Move X24, [X31+48]
	050 Move X23, [X31+56]
	051 Move X26, [X31+32]
	052 Move X25, [X31+40]
	053 Move X28, [X31+16]
	054 Move X27, [X31+24]
	055 Move X29, [X31+96]
	056 Move X30, [X31+104]
	057 CallNoReturn X8

Method: UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[] GetGlyphPairAdjustmentTable(System.UInt32[] glyphIndexes)

Disassembly:
	0x03C9EE88 LDR X8, [X8 + 0xB8]
	0x03C9EE8C LDR W1, [X8 + 0x6C]
	0x03C9EE90 BL 0x3C15F98
	0x03C9EE94 MOVZ W9, 0x7F800000
	0x03C9EE98 FCVTZS W8, S0
	0x03C9EE9C FMOV S1, W9
	0x03C9EEA0 SUB W8, W8, 0x1
	0x03C9EEA4 FCMP S0, S1
	0x03C9EEA8 MOVN W9, 0x80000000
	0x03C9EEAC CSEL W8, W9, W8, EQ
	0x03C9EEB0 STR W8, [X19 + 0x158]
	0x03C9EEB4 ADRP X22, 0x4C3000
	0x03C9EEB8 ADRP X21, 0x4C3000
	0x03C9EEBC LDR X22, [X22 + 0x258]
	0x03C9EEC0 LDR X21, [X21 + 0x260]
	0x03C9EEC4 MOV X0, X19
	0x03C9EEC8 MOV X1, X31
	0x03C9EECC BL 0x3C389D4
	0x03C9EED0 MOV X1, X31
	0x03C9EED4 BL 0x3CCBE90
	0x03C9EED8 STR W0, [X19 + 0x24]
	0x03C9EEDC MOV X0, X20
	0x03C9EEE0 MOV X1, X31
	0x03C9EEE4 BL 0x3C9BF68
	0x03C9EEE8 MOV X1, X31
	0x03C9EEEC BL 0x3CCBE90
	0x03C9EEF0 STR W0, [X19 + 0x110]
	0x03C9EEF4 MOV X0, X20
	0x03C9EEF8 MOV X1, X31
	0x03C9EEFC BL 0x3C9BF78
	0x03C9EF00 MOV X1, X31
	0x03C9EF04 BL 0x3CCBE90
	0x03C9EF08 STR W0, [X19 + 0x114]
	0x03C9EF0C MOV X0, X19
	0x03C9EF10 MOV X1, X31
	0x03C9EF14 BL 0x3C389D4
	0x03C9EF18 LDR X8, [X22]
	0x03C9EF1C MOV X20, X0
	0x03C9EF20 LDR W9, [X8 + 0xE0]
	0x03C9EF24 CBNZ W9, 0x3C9EF34
	0x03C9EF28 MOV X0, X8
	0x03C9EF2C BL 0x1C16DFC
	0x03C9EF30 LDR X8, [X22]
	0x03C9EF34 LDR X8, [X8 + 0xB8]
	0x03C9EF38 MOV X0, X20
	0x03C9EF3C MOV X2, X31
	0x03C9EF40 LDR X1, [X8 + 0x48]
	0x03C9EF44 BL 0x321B938
	0x03C9EF48 MOV X1, X31
	0x03C9EF4C BL 0x3CCBE90
	0x03C9EF50 STR W0, [X19 + 0x30]
	0x03C9EF54 LDR X0, [X21]
	0x03C9EF58 LDR W8, [X0 + 0xE0]
	0x03C9EF5C CBNZ W8, 0x3C9EF64
	0x03C9EF60 BL 0x1C16DFC
	0x03C9EF64 MOV X0, X19
	0x03C9EF68 MOV X1, X31
	0x03C9EF6C BL 0x3CCB7B8
	0x03C9EF70 STRB W31, [X19 + 0x19A]
	0x03C9EF74 LDP X20, X19, [X31 + 0x60]
	0x03C9EF78 LDP X22, X21, [X31 + 0x50]
	0x03C9EF7C LDR X30, [X31 + 0x40]
	0x03C9EF80 ADD X31, X31, 0x70
	0x03C9EF84 RET
	0x03C9EF88 BL 0x1C16F20
	0x03C9EF8C LDR X0, [X0 + 0x128]
	0x03C9EF90 RET
	0x03C9EF94 STR X1, [X0 + 0x128]
	0x03C9EF98 RET
	0x03C9EF9C STP X30, X19, [X31 - 0x10]!
	0x03C9EFA0 MOV X19, X0
	0x03C9EFA4 LDR X0, [X0 + 0x130]
	0x03C9EFA8 CBNZ X0, 0x3C9EFB8
	0x03C9EFAC MOV X0, X19
	0x03C9EFB0 BL 0x3C9EBEC
	0x03C9EFB4 LDR X0, [X19 + 0x130]
	0x03C9EFB8 LDP X30, X19, [X31], #0x10
	0x03C9EFBC RET
	0x03C9EFC0 STP X30, X21, [X31 - 0x20]!
	0x03C9EFC4 STP X20, X19, [X31 + 0x10]
	0x03C9EFC8 ADRP X21, 0x749000
	0x03C9EFCC ADRP X20, 0x455000
	0x03C9EFD0 LDRB W8, [X21 + 0x2CC]
	0x03C9EFD4 LDR X20, [X20 + 0x598]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x74A000
	007 Move X20, 0x4BB000
	008 Move W8, [X21+672]
	009 Move X20, [X20+3008]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x4C4000
	016 Move X0, [X0+552]
	017 Call 0x1C17CF4
	018 Move X0, 0x4BB000
	019 Move X0, [X0+3008]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+672], W8
	023 Move X0, [X20]
	024 Move [X31+12], W31
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X21, 0x74A000
	030 Move X8, [X21+680]
	031 Compare X8, 0
	032 JumpIfNotEqual {38}
	033 Move X0, -51896320
	034 Add X0, X0, 1860
	035 Call 0x1C17CB8
	036 Move X8, X0
	037 Move [X21+680], X0
	038 Add X1, X31, 12
	039 Move X0, X19
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move W1, [X31+12]
	042 Compare W1, 0
	043 JumpIfEqual {88}
	044 Move X0, [X20]
	045 Move X19, 0x4C4000
	046 Move W8, [X0+224]
	047 Move X19, [X19+552]
	048 Compare W8, 0
	049 JumpIfNotEqual {53}
	050 Call 0x1C17DFC
	051 Move W1, [X31+12]
	052 Move X0, [X20]
	053 Move X8, [X0+184]
	054 Move X2, [X19]
	055 Add X0, X8, 48
	056 Call 0x21E51EC, X0, X1
	057 Move X8, [X20]
	058 Move X21, 0x74A000
	059 Move X9, [X8+184]
	060 Move X8, [X21+688]
	061 Move X19, [X9+48]
	062 Compare X8, 0
	063 JumpIfNotEqual {69}
	064 Move X0, -51855360
	065 Add X0, X0, 631
	066 Call 0x1C17CB8
	067 Move X8, X0
	068 Move [X21+688], X0
	069 Move X0, X19
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move X8, [X20]
	072 Move X8, [X8+184]
	073 Move X8, [X8+48]
	074 Compare X8, 0
	075 JumpIfEqual {95}
	076 NotImplemented "Instruction LDRSW not yet implemented."
	077 Move W10, [X8+24]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move W10, 44
	080 NotImplemented "Instruction MOVI not yet implemented."
	081 NotImplemented "Instruction MADD not yet implemented."
	082 Move [X8+60], V0
	083 Move [X8+32], V0
	084 Move [X8+40], V0
	085 Move X8, [X20]
	086 Move X8, [X8+184]
	087 Move X0, [X8+48]
	088 Move X0, X31
	089 Move X20, [X31+32]
	090 Move X19, [X31+40]
	091 Move X30, [X31+16]
	092 Move X21, [X31+24]
	093 Add X31, X31, 48
	094 Return X0
	095 Call 0x1C17F20
	096 Call 0x1C17F28

Method: UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[] GetGlyphPairAdjustmentRecords(System.Collections.Generic.List`1<System.UInt32> glyphIndexes, out System.Int32 recordCount)

Disassembly:
	0x03C9F058 STR X1, [X0 + 0x140]
	0x03C9F05C RET
	0x03C9F060 LDR W8, [X0 + 0x148]
	0x03C9F064 ADD W0, W8, 0x1
	0x03C9F068 RET
	0x03C9F06C LDRB W0, [X0 + 0x14C]
	0x03C9F070 RET
	0x03C9F074 AND W8, W1, 0x1
	0x03C9F078 STRB W8, [X0 + 0x14C]
	0x03C9F07C RET
	0x03C9F080 LDRB W0, [X0 + 0x14D]
	0x03C9F084 RET
	0x03C9F088 AND W8, W1, 0x1
	0x03C9F08C STRB W8, [X0 + 0x14D]
	0x03C9F090 RET
	0x03C9F094 LDR W0, [X0 + 0x150]
	0x03C9F098 RET
	0x03C9F09C STR W1, [X0 + 0x150]
	0x03C9F0A0 RET
	0x03C9F0A4 LDR W0, [X0 + 0x154]
	0x03C9F0A8 RET
	0x03C9F0AC STR W1, [X0 + 0x154]
	0x03C9F0B0 RET
	0x03C9F0B4 LDR W0, [X0 + 0x158]
	0x03C9F0B8 RET
	0x03C9F0BC STR W1, [X0 + 0x158]
	0x03C9F0C0 RET
	0x03C9F0C4 LDR W0, [X0 + 0x15C]
	0x03C9F0C8 RET
	0x03C9F0CC STR W1, [X0 + 0x15C]
	0x03C9F0D0 RET
	0x03C9F0D4 LDR X0, [X0 + 0x160]
	0x03C9F0D8 RET
	0x03C9F0DC STR X1, [X0 + 0x160]
	0x03C9F0E0 RET
	0x03C9F0E4 LDR X0, [X0 + 0x168]
	0x03C9F0E8 RET
	0x03C9F0EC STR X1, [X0 + 0x168]
	0x03C9F0F0 RET
	0x03C9F0F4 LDR X0, [X0 + 0x170]
	0x03C9F0F8 RET
	0x03C9F0FC STR X1, [X0 + 0x170]
	0x03C9F100 RET
	0x03C9F104 LDR X0, [X0 + 0x178]
	0x03C9F108 RET
	0x03C9F10C STR X1, [X0 + 0x178]
	0x03C9F110 RET
	0x03C9F114 LDR X0, [X0 + 0x180]
	0x03C9F118 RET
	0x03C9F11C STR X1, [X0 + 0x180]
	0x03C9F120 RET
	0x03C9F124 LDR V0, [X0 + 0x188]
	0x03C9F128 RET
	0x03C9F12C STR S0, [X0 + 0x188]
	0x03C9F130 RET
	0x03C9F134 LDR V0, [X0 + 0x18C]
	0x03C9F138 RET
	0x03C9F13C STR S0, [X0 + 0x18C]
	0x03C9F140 RET
	0x03C9F144 LDR V0, [X0 + 0x190]
	0x03C9F148 RET
	0x03C9F14C STR S0, [X0 + 0x190]
	0x03C9F150 RET
	0x03C9F154 LDR V0, [X0 + 0x194]
	0x03C9F158 RET
	0x03C9F15C STR S0, [X0 + 0x194]
	0x03C9F160 RET
	0x03C9F164 LDRB W0, [X0 + 0x198]
	0x03C9F168 RET
	0x03C9F16C STRB W1, [X0 + 0x198]
	0x03C9F170 RET
	0x03C9F174 LDRB W0, [X0 + 0x199]
	0x03C9F178 RET
	0x03C9F17C STRB W1, [X0 + 0x199]
	0x03C9F180 RET
	0x03C9F184 SUB X31, X31, 0x60
	0x03C9F188 STP X30, X23, [X31 + 0x30]
	0x03C9F18C STP X22, X21, [X31 + 0x40]
	0x03C9F190 STP X20, X19, [X31 + 0x50]
	0x03C9F194 ADRP X23, 0x748000
	0x03C9F198 ADRP X22, 0x4B9000
	0x03C9F19C LDRB W8, [X23 + 0x2CD]
	0x03C9F1A0 LDR X22, [X22 + 0xBC0]
	0x03C9F1A4 MOV W20, W2
	0x03C9F1A8 MOV X19, X1
	0x03C9F1AC MOV X21, X0
	0x03C9F1B0 TBNZ X8, 0x0, 0x3C9F210
	0x03C9F1B4 ADRP X0, 0x454000
	0x03C9F1B8 LDR X0, [X0 + 0xA28]
	0x03C9F1BC BL 0x1C16CF4
	0x03C9F1C0 ADRP X0, 0x4C2000
	0x03C9F1C4 LDR X0, [X0 + 0x258]
	0x03C9F1C8 BL 0x1C16CF4
	0x03C9F1CC ADRP X0, 0x4B9000
	0x03C9F1D0 LDR X0, [X0 + 0xBC0]
	0x03C9F1D4 BL 0x1C16CF4
	0x03C9F1D8 ADRP X0, 0x454000
	0x03C9F1DC LDR X0, [X0 + 0xAC8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x749000
	007 Move [X31+8], X0
	008 Move X21, 0x4BA000
	009 Move W8, [X20+673]
	010 Move X21, [X21+3008]
	011 Move X19, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x4C3000
	017 Move X0, [X0+560]
	018 Call 0x1C17CF4
	019 Move X0, 0x4C3000
	020 Move X0, [X0+552]
	021 Call 0x1C17CF4
	022 Move X0, 0x4BA000
	023 Move X0, [X0+3008]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+673], W8
	027 Move X0, [X21]
	028 Move X20, 0x4C3000
	029 Move W8, [X0+224]
	030 Move X20, [X20+560]
	031 Compare W8, 0
	032 JumpIfNotEqual {35}
	033 Call 0x1C17DFC
	034 Move X0, [X21]
	035 Move X8, [X0+184]
	036 Move X2, [X20]
	037 Add X0, X31, 8
	038 Add X1, X8, 8
	039 Call 0x21E4E5C, X0, X1
	040 Move X8, [X21]
	041 Move X22, 0x749000
	042 Move X9, [X8+184]
	043 Move X8, [X22+680]
	044 Move X20, [X9+8]
	045 Compare X8, 0
	046 JumpIfNotEqual {52}
	047 Move X0, -51900416
	048 Add X0, X0, 1860
	049 Call 0x1C17CB8
	050 Move X8, X0
	051 Move [X22+680], X0
	052 Move X0, X20
	053 Move X1, X19
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move W1, [X19]
	056 Compare W1, 0
	057 JumpIfEqual {102}
	058 Move X0, [X21]
	059 Move X20, 0x4C3000
	060 Move W8, [X0+224]
	061 Move X20, [X20+552]
	062 Compare W8, 0
	063 JumpIfNotEqual {67}
	064 Call 0x1C17DFC
	065 Move W1, [X19]
	066 Move X0, [X21]
	067 Move X8, [X0+184]
	068 Move X2, [X20]
	069 Add X0, X8, 48
	070 Call 0x21E51EC, X0, X1
	071 Move X8, [X21]
	072 Move X22, 0x749000
	073 Move X9, [X8+184]
	074 Move X8, [X22+688]
	075 Move X20, [X9+48]
	076 Compare X8, 0
	077 JumpIfNotEqual {83}
	078 Move X0, -51859456
	079 Add X0, X0, 631
	080 Call 0x1C17CB8
	081 Move X8, X0
	082 Move [X22+688], X0
	083 Move X0, X20
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Move X8, [X21]
	086 Move X8, [X8+184]
	087 Move X8, [X8+48]
	088 Compare X8, 0
	089 JumpIfEqual {109}
	090 NotImplemented "Instruction LDRSW not yet implemented."
	091 Move W10, [X8+24]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move W10, 44
	094 NotImplemented "Instruction MOVI not yet implemented."
	095 NotImplemented "Instruction MADD not yet implemented."
	096 Move [X8+60], V0
	097 Move [X8+32], V0
	098 Move [X8+40], V0
	099 Move X8, [X21]
	100 Move X8, [X8+184]
	101 Move X0, [X8+48]
	102 Move X0, X31
	103 Move X20, [X31+32]
	104 Move X19, [X31+40]
	105 Move X22, [X31+16]
	106 Move X21, [X31+24]
	107 Move X30, [X31+48]
	108 Return X0
	109 Call 0x1C17F20
	110 Call 0x1C17F28

Method: System.Int32 PopulatePairAdjustmentRecordMarshallingArray_from_KernTable(System.UInt32[] glyphIndexes, out System.Int32 recordCount)

Disassembly:
	0x03C9EFD8 MOV X19, X0
	0x03C9EFDC TBNZ X8, 0x0, 0x3C9EFF4
	0x03C9EFE0 ADRP X0, 0x455000
	0x03C9EFE4 LDR X0, [X0 + 0x598]
	0x03C9EFE8 BL 0x1C16CF4
	0x03C9EFEC MOVZ W8, 0x1
	0x03C9EFF0 STRB W8, [X21 + 0x2CC]
	0x03C9EFF4 LDR X0, [X20]
	0x03C9EFF8 LDR X20, [X19 + 0x138]
	0x03C9EFFC LDR W8, [X0 + 0xE0]
	0x03C9F000 CBNZ W8, 0x3C9F008
	0x03C9F004 BL 0x1C16DFC
	0x03C9F008 MOV X0, X20
	0x03C9F00C MOV X1, X31
	0x03C9F010 MOV X2, X31
	0x03C9F014 BL 0x3C3883C
	0x03C9F018 TBZ X0, 0x0, 0x3C9F038

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x74A000
	006 Move X2, [X21+680]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51896320
	012 Add X0, X0, 1860
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+680], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Int32 GetPairAdjustmentRecordsFromMarshallingArray(out UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[] glyphPairAdjustmentRecords)

Disassembly:
	0x03C9F01C LDR X8, [X19 + 0x140]
	0x03C9F020 CBZ X8, 0x3C9F048
	0x03C9F024 LDR W9, [X8 + 0x18]
	0x03C9F028 CBZ W9, 0x3C9F04C
	0x03C9F02C LDR X0, [X8 + 0x20]
	0x03C9F030 STR X0, [X19 + 0x138]
	0x03C9F034 B 0x3C9F03C
	0x03C9F038 LDR X0, [X19 + 0x138]
	0x03C9F03C LDP X20, X19, [X31 + 0x10]
	0x03C9F040 LDP X30, X21, [X31], #0x20
	0x03C9F044 RET
	0x03C9F048 BL 0x1C16F20
	0x03C9F04C BL 0x1C16F28
	0x03C9F050 LDR X0, [X0 + 0x140]
	0x03C9F054 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x749000
	005 Move X1, [X20+688]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51859456
	010 Add X0, X0, 631
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+688], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void GenericListToMarshallingArray(ref System.Collections.Generic.List`1<T> srcList, ref T[] dstArray)

Disassembly:
	0x021E4E5C ADD X31, X31, 0x90
	0x021E4E60 RET
	0x021E4E64 BL 0x1C16F20
	0x021E4E68 MOV X0, X23
	0x021E4E6C BL 0x1C16F18
	0x021E4E70 BL 0x1C16F28
	0x021E4E74 MOV X20, X0
	0x021E4E78 MOV X23, X31
	0x021E4E7C B 0x21E4E84
	0x021E4E80 MOV X20, X0
	0x021E4E84 LDR X8, [X19 + 0x38]
	0x021E4E88 LDR X1, [X8 + 0x50]
	0x021E4E8C ADD X0, X31, 0x20
	0x021E4E90 BL 0x2BC434C
	0x021E4E94 CBNZ X23, 0x21E4EA0
	0x021E4E98 MOV X0, X20
	0x021E4E9C BL 0x1D2C690
	0x021E4EA0 MOV X0, X23
	0x021E4EA4 BL 0x1C16F18
	0x021E4EA8 BL 0x1990590
	0x021E4EAC SUB X31, X31, 0xA0
	0x021E4EB0 STR X30, [X31 + 0x60]
	0x021E4EB4 STP X24, X23, [X31 + 0x70]
	0x021E4EB8 STP X22, X21, [X31 + 0x80]
	0x021E4EBC STP X20, X19, [X31 + 0x90]
	0x021E4EC0 STR W0, [X31 + 0x68]
	0x021E4EC4 LDR X8, [X3 + 0x38]
	0x021E4EC8 MOV X19, X3
	0x021E4ECC MOV W22, W2
	0x021E4ED0 MOV X20, X1
	0x021E4ED4 CBNZ X8, 0x21E4F24
	0x021E4ED8 ADRP X0, 0x1F15000
	0x021E4EDC LDR X0, [X0 + 0xDD0]
	0x021E4EE0 BL 0x1C16CF4
	0x021E4EE4 ADRP X0, 0x1F15000
	0x021E4EE8 LDR X0, [X0 + 0xDD8]
	0x021E4EEC BL 0x1C16CF4
	0x021E4EF0 ADRP X0, 0x1F15000
	0x021E4EF4 LDR X0, [X0 + 0xDE0]
	0x021E4EF8 BL 0x1C16CF4
	0x021E4EFC ADRP X0, 0x1F36000
	0x021E4F00 LDR X0, [X0 + 0x538]
	0x021E4F04 BL 0x1C16CF4
	0x021E4F08 ADRP X0, 0x1F15000
	0x021E4F0C LDR X0, [X0 + 0xDE8]
	0x021E4F10 BL 0x1C16CF4
	0x021E4F14 LDR X8, [X19 + 0x38]
	0x021E4F18 CBNZ X8, 0x21E4F24
	0x021E4F1C MOV X0, X19
	0x021E4F20 BL 0x1C5C6E0
	0x021E4F24 STP X31, X31, [X31 + 0x40]
	0x021E4F28 STR X31, [X31 + 0x50]
	0x021E4F2C ADRP X21, 0x1F36000
	0x021E4F30 LDR X21, [X21 + 0x538]
	0x021E4F34 STP X31, X31, [X31 + 0x20]
	0x021E4F38 STR X31, [X31 + 0x30]
	0x021E4F3C LDR X0, [X21]
	0x021E4F40 LDR W8, [X0 + 0xE0]
	0x021E4F44 CBNZ W8, 0x21E4F50
	0x021E4F48 BL 0x1C16DFC
	0x021E4F4C LDR X0, [X21]
	0x021E4F50 LDR X8, [X0 + 0xB8]
	0x021E4F54 ADD X0, X31, 0x68
	0x021E4F58 MOV X2, X31
	0x021E4F5C LDR X23, [X8]
	0x021E4F60 MOV X1, X23
	0x021E4F64 BL 0x3C465DC
	0x021E4F68 CBZ X20, 0x21E5164
	0x021E4F6C LDP W2, W8, [X20 + 0x18]
	0x021E4F70 ADD W8, W8, 0x1
	0x021E4F74 CMP W2, 0x1
	0x021E4F78 STP W31, W8, [X20 + 0x18]
	0x021E4F7C B.LT 0x21E4F90

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X8, [X2+56]
	010 Move X19, X2
	011 Move X20, X1
	012 Move X21, X0
	013 Compare X8, 0
	014 JumpIfNotEqual {17}
	015 Move X0, X19
	016 Call 0x1C5D6E0
	017 Move X8, [X21]
	018 Compare X8, 0
	019 JumpIfEqual {84}
	020 Move W24, [X8+24]
	021 Move X22, [X20]
	022 Move X25, W24
	023 Compare X22, 0
	024 JumpIfEqual {27}
	025 Move W8, [X22+24]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Add W0, W25, 1
	028 Move X1, X31
	029 Call Mathf.NextPowerOfTwo, X0
	030 Move X9, [X20]
	031 Move X8, [X19+56]
	032 Move W22, W0
	033 Compare X9, 0
	034 JumpIfEqual {40}
	035 Move X2, [X8+40]
	036 Move X0, X20
	037 Move W1, W22
	038 Call Array.Resize, X0, X1
	039 Move X22, [X20]
	040 Move X0, [X8+32]
	041 Move W8, [X0+309]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {47}
	046 Call 0x1C5D684
	047 Move W1, W22
	048 Call 0x1C17D6C
	049 Move X22, X0
	050 Move [X20], X0
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X23, X31
	053 Move X0, [X21]
	054 Compare X0, 0
	055 JumpIfEqual {84}
	056 Move X8, [X19+56]
	057 Move W1, W23
	058 Move X2, [X8+48]
	059 Call List`1<UInt32>.get_Item, X0, X1
	060 Compare X22, 0
	061 JumpIfEqual {84}
	062 Move W8, [X22+24]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Add X8, X22, X23
	065 Move [X8+32], W0
	066 Move X22, [X20]
	067 Add X23, X23, 1
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Compare X22, 0
	070 JumpIfEqual {84}
	071 Move W8, [X22+24]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Add X8, X22, X25
	074 Move X20, [X31+48]
	075 Move X19, [X31+56]
	076 Move X22, [X31+32]
	077 Move X21, [X31+40]
	078 Move X24, [X31+16]
	079 Move X23, [X31+24]
	080 Move [X8+32], W31
	081 Move X30, [X31+64]
	082 Move X25, [X31+72]
	083 Return 
	084 Call 0x1C17F20
	085 Call 0x1C17F28

Method: System.Void SetMarshallingArraySize(ref T[] marshallingArray, System.Int32 recordCount)

Disassembly:
	0x021E51EC BL 0x1D2C690
	0x021E51F0 MOV X0, X19
	0x021E51F4 BL 0x1C16F18
	0x021E51F8 BL 0x1990590
	0x021E51FC STP X30, X21, [X31 - 0x20]!
	0x021E5200 STP X20, X19, [X31 + 0x10]
	0x021E5204 LDR X8, [X1 + 0x38]
	0x021E5208 MOV X19, X1
	0x021E520C MOV X20, X0
	0x021E5210 CBNZ X8, 0x21E5234
	0x021E5214 ADRP X0, 0x1F0E000
	0x021E5218 LDR X0, [X0 + 0x6C0]
	0x021E521C BL 0x1C16CF4
	0x021E5220 LDR X8, [X19 + 0x38]
	0x021E5224 CBNZ X8, 0x21E5234
	0x021E5228 MOV X0, X19
	0x021E522C BL 0x1C5C6E0
	0x021E5230 LDR X8, [X19 + 0x38]
	0x021E5234 ADRP X9, 0x1F0E000
	0x021E5238 LDR X9, [X9 + 0x6C0]
	0x021E523C LDR X21, [X8]
	0x021E5240 LDR X0, [X9]
	0x021E5244 LDR W9, [X0 + 0xE0]
	0x021E5248 CBNZ W9, 0x21E5250
	0x021E524C BL 0x1C16DFC
	0x021E5250 MOV X0, X21
	0x021E5254 MOV X1, X31
	0x021E5258 BL 0x338C698
	0x021E525C MOV X1, X0
	0x021E5260 MOV X0, X20
	0x021E5264 MOV X2, X31
	0x021E5268 BL 0x3C356B4
	0x021E526C LDR X8, [X19 + 0x38]
	0x021E5270 MOV X20, X0
	0x021E5274 LDR X1, [X8 + 0x8]
	0x021E5278 LDRB W8, [X1 + 0x135]
	0x021E527C TBNZ X8, 0x0, 0x21E528C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X20, X2
	007 Move W21, W1
	008 Move X19, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X20
	012 Call 0x1C5D6E0
	013 Move X8, [X19]
	014 Compare X8, 0
	015 JumpIfEqual {18}
	016 Move W8, [X8+24]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Add W0, W21, 1
	019 Move X1, X31
	020 Call Mathf.NextPowerOfTwo, X0
	021 Move X9, [X19]
	022 Move X8, [X20+56]
	023 Move W20, W0
	024 Compare X9, 0
	025 JumpIfEqual {35}
	026 Move X2, [X8+16]
	027 Move X0, X19
	028 Move W1, W20
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call Array.Resize, X0, X1
	034 Return 
	035 Move X0, [X8+8]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move W1, W20
	043 Call 0x1C17D6C
	044 Move [X19], X0
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Return 

Method: System.Void ResetAtlasTexture(UnityEngine.Texture2D texture)

Disassembly:
	0x03C9F1E0 BL 0x1C16CF4
	0x03C9F1E4 ADRP X0, 0x4C2000
	0x03C9F1E8 LDR X0, [X0 + 0x270]
	0x03C9F1EC BL 0x1C16CF4
	0x03C9F1F0 ADRP X0, 0x47C000
	0x03C9F1F4 LDR X0, [X0 + 0x6F8]
	0x03C9F1F8 BL 0x1C16CF4
	0x03C9F1FC ADRP X0, 0x4C2000
	0x03C9F200 LDR X0, [X0 + 0x278]
	0x03C9F204 BL 0x1C16CF4
	0x03C9F208 MOVZ W8, 0x1
	0x03C9F20C STRB W8, [X23 + 0x2CD]
	0x03C9F210 LDR X0, [X22]
	0x03C9F214 MOVI V0.2D, 0x0
	0x03C9F218 STP V0, V0, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x749000
	005 Move X1, [X20+696]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51924992
	010 Add X0, X0, 1318
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+696], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void .cctor()

Disassembly:
	0x03C9F21C LDR W8, [X0 + 0xE0]
	0x03C9F220 CBNZ W8, 0x3C9F228
	0x03C9F224 BL 0x1C16DFC
	0x03C9F228 ADD X2, X31, 0x10
	0x03C9F22C MOV X0, X21
	0x03C9F230 MOV X1, X19
	0x03C9F234 MOV X3, X31
	0x03C9F238 BL 0x3C9CA1C
	0x03C9F23C TBZ X0, 0x0, 0x3C9F290
	0x03C9F240 ADRP X8, 0x4C2000
	0x03C9F244 LDR X8, [X8 + 0x258]
	0x03C9F248 LDR X19, [X31 + 0x28]
	0x03C9F24C LDR W21, [X31 + 0x20]
	0x03C9F250 LDR X0, [X8]
	0x03C9F254 LDR W8, [X0 + 0xE0]
	0x03C9F258 CBNZ W8, 0x3C9F260
	0x03C9F25C BL 0x1C16DFC
	0x03C9F260 MOVZ W8, 0x1
	0x03C9F264 MOVZ W3, 0x9
	0x03C9F268 MOVZ W4, 0x1045
	0x03C9F26C MOVZ W5, 0x400
	0x03C9F270 MOVZ W6, 0x400
	0x03C9F274 MOVZ W7, 0x2
	0x03C9F278 MOV X0, X19
	0x03C9F27C MOV W1, W21
	0x03C9F280 MOV W2, W20
	0x03C9F284 STRB W8, [X31]
	0x03C9F288 BL 0x3C9F35C
	0x03C9F28C B 0x3C9F340
	0x03C9F290 ADRP X8, 0x454000
	0x03C9F294 LDR X8, [X8 + 0xAC8]
	0x03C9F298 MOVZ W1, 0x5
	0x03C9F29C LDR X0, [X8]
	0x03C9F2A0 BL 0x1C16D6C
	0x03C9F2A4 CBZ X0, 0x3C9F358
	0x03C9F2A8 LDR W8, [X0 + 0x18]
	0x03C9F2AC CBZ W8, 0x3C9F354
	0x03C9F2B0 ADRP X9, 0x4C2000
	0x03C9F2B4 LDR X9, [X9 + 0x278]
	0x03C9F2B8 CMP W8, 0x1
	0x03C9F2BC LDR X9, [X9]
	0x03C9F2C0 STR X9, [X0 + 0x20]
	0x03C9F2C4 B.EQ 0x3C9F354
	0x03C9F2C8 CMP W8, 0x2
	0x03C9F2CC STR X21, [X0 + 0x28]
	0x03C9F2D0 B.LS 0x3C9F354
	0x03C9F2D4 ADRP X9, 0x4C2000
	0x03C9F2D8 LDR X9, [X9 + 0x270]
	0x03C9F2DC CMP W8, 0x3
	0x03C9F2E0 LDR X9, [X9]
	0x03C9F2E4 STR X9, [X0 + 0x30]
	0x03C9F2E8 B.EQ 0x3C9F354
	0x03C9F2EC CMP W8, 0x4
	0x03C9F2F0 STR X19, [X0 + 0x38]
	0x03C9F2F4 B.LS 0x3C9F354
	0x03C9F2F8 ADRP X8, 0x47C000
	0x03C9F2FC LDR X8, [X8 + 0x6F8]
	0x03C9F300 MOV X1, X31
	0x03C9F304 LDR X8, [X8]
	0x03C9F308 STR X8, [X0 + 0x40]
	0x03C9F30C BL 0x32278CC
	0x03C9F310 ADRP X8, 0x454000
	0x03C9F314 LDR X8, [X8 + 0xA28]
	0x03C9F318 MOV X19, X0
	0x03C9F31C LDR X8, [X8]
	0x03C9F320 LDR W9, [X8 + 0xE0]
	0x03C9F324 CBNZ W9, 0x3C9F330
	0x03C9F328 MOV X0, X8
	0x03C9F32C BL 0x1C16DFC
	0x03C9F330 MOV X0, X19
	0x03C9F334 MOV X1, X31
	0x03C9F338 BL 0x3C06048
	0x03C9F33C MOV X0, X31
	0x03C9F340 LDP X20, X19, [X31 + 0x50]
	0x03C9F344 LDP X22, X21, [X31 + 0x40]
	0x03C9F348 LDP X30, X23, [X31 + 0x30]
	0x03C9F34C ADD X31, X31, 0x60
	0x03C9F350 RET
	0x03C9F354 BL 0x1C16F28
	0x03C9F358 BL 0x1C16F20
	0x03C9F35C STR X30, [X31 - 0x60]!
	0x03C9F360 STP X28, X27, [X31 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0x749000
	010 Move X25, 0x4C3000
	011 Move X20, 0x4BA000
	012 Move X23, 0x4C3000
	013 Move X22, 0x4C3000
	014 Move X21, 0x4BA000
	015 Move X19, 0x4BA000
	016 Move X25, [X25+544]
	017 Move W8, [X24+704]
	018 Move X20, [X20+3008]
	019 Move X23, [X23+536]
	020 Move X22, [X22+512]
	021 Move X21, [X21+3256]
	022 Move X19, [X19+3248]
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {47}
	027 Move X0, 0x4BA000
	028 Move X0, [X0+3248]
	029 Call 0x1C17CF4
	030 Move X0, 0x4BA000
	031 Move X0, [X0+3256]
	032 Call 0x1C17CF4
	033 Move X0, 0x4BA000
	034 Move X0, [X0+3008]
	035 Call 0x1C17CF4
	036 Move X0, 0x4C3000
	037 Move X0, [X0+536]
	038 Call 0x1C17CF4
	039 Move X0, 0x4C3000
	040 Move X0, [X0+512]
	041 Call 0x1C17CF4
	042 Move X0, 0x4C3000
	043 Move X0, [X0+544]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X24+704], W8
	047 Move X0, [X25]
	048 Move W1, 16
	049 Call 0x1C17D6C
	050 Move X8, [X20]
	051 Move W1, 16
	052 Move X8, [X8+184]
	053 Move [X8], X0
	054 Move X0, [X23]
	055 Call 0x1C17D6C
	056 Move X8, [X20]
	057 Move W1, 16
	058 Move X8, [X8+184]
	059 Move [X8+16], X0
	060 Move X0, [X23]
	061 Call 0x1C17D6C
	062 Move X8, [X20]
	063 Move W1, 16
	064 Move X8, [X8+184]
	065 Move [X8+24], X0
	066 Move X0, [X22]
	067 Call 0x1C17D6C
	068 Move X8, [X20]
	069 Move W1, 16
	070 Move X8, [X8+184]
	071 Move [X8+32], X0
	072 Move X0, [X22]
	073 Call 0x1C17D6C
	074 Move X8, [X20]
	075 Move X8, [X8+184]
	076 Move [X8+40], X0
	077 Move X0, [X21]
	078 Call 0x1C17F10
	079 Move X1, [X19]
	080 Move X19, X0
	081 Call Dictionary`2<UInt32, Object>..ctor, X0
	082 Move X8, [X20]
	083 Move X22, [X31+32]
	084 Move X21, [X31+40]
	085 Move X24, [X31+16]
	086 Move X23, [X31+24]
	087 Move X8, [X8+184]
	088 Move [X8+56], X19
	089 Move X20, [X31+48]
	090 Move X19, [X31+56]
	091 Move X30, [X31+64]
	092 Move X25, [X31+72]
	093 Return 

