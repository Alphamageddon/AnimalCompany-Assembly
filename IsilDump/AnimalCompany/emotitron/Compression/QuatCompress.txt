Type: emotitron.Compression.QuatCompress

Method: System.Void .cctor()

Disassembly:
	0x01D329D0 CBNZ W8, 0x1D329DC
	0x01D329D4 BL 0x1C16DFC
	0x01D329D8 LDR X0, [X19]
	0x01D329DC LDR X8, [X0 + 0xB8]
	0x01D329E0 LDP X20, X19, [X31 + 0x10]
	0x01D329E4 LDR X0, [X8]
	0x01D329E8 LDR X30, [X31], #0x20
	0x01D329EC RET
	0x01D329F0 STP X30, X21, [X31 - 0x20]!
	0x01D329F4 STP X20, X19, [X31 + 0x10]
	0x01D329F8 ADRP X21, 0x26A6000
	0x01D329FC ADRP X20, 0x23C1000
	0x01D32A00 LDRB W8, [X21 + 0x6C7]
	0x01D32A04 LDR X20, [X20 + 0x648]
	0x01D32A08 MOV X19, X0
	0x01D32A0C TBNZ X8, 0x0, 0x1D32A24
	0x01D32A10 ADRP X0, 0x23C1000
	0x01D32A14 LDR X0, [X0 + 0x648]
	0x01D32A18 BL 0x1C16CF4
	0x01D32A1C MOVZ W8, 0x1
	0x01D32A20 STRB W8, [X21 + 0x6C7]
	0x01D32A24 LDR X0, [X20]
	0x01D32A28 LDR W8, [X0 + 0xE0]
	0x01D32A2C CBNZ W8, 0x1D32A38
	0x01D32A30 BL 0x1C16DFC
	0x01D32A34 LDR X0, [X20]
	0x01D32A38 LDR X8, [X0 + 0xB8]
	0x01D32A3C STR X19, [X8]
	0x01D32A40 LDP X20, X19, [X31 + 0x10]
	0x01D32A44 LDP X30, X21, [X31], #0x20
	0x01D32A48 RET
	0x01D32A4C STR X30, [X31 - 0x20]!
	0x01D32A50 STP X20, X19, [X31 + 0x10]
	0x01D32A54 ADRP X20, 0x26A6000
	0x01D32A58 ADRP X19, 0x23C1000
	0x01D32A5C LDRB W8, [X20 + 0x6C8]
	0x01D32A60 LDR X19, [X19 + 0x648]
	0x01D32A64 TBNZ X8, 0x0, 0x1D32A88
	0x01D32A68 ADRP X0, 0x23C1000
	0x01D32A6C LDR X0, [X0 + 0x648]
	0x01D32A70 BL 0x1C16CF4
	0x01D32A74 ADRP X0, 0x23C1000
	0x01D32A78 LDR X0, [X0 + 0x650]
	0x01D32A7C BL 0x1C16CF4
	0x01D32A80 MOVZ W8, 0x1
	0x01D32A84 STRB W8, [X20 + 0x6C8]
	0x01D32A88 LDR X0, [X19]
	0x01D32A8C LDR W8, [X0 + 0xE0]
	0x01D32A90 CBNZ W8, 0x1D32A98
	0x01D32A94 BL 0x1C16DFC
	0x01D32A98 ADRP X20, 0x26A6000
	0x01D32A9C LDRB W8, [X20 + 0x787]
	0x01D32AA0 CBNZ W8, 0x1D32AB8
	0x01D32AA4 ADRP X0, 0x23C1000
	0x01D32AA8 LDR X0, [X0 + 0x648]
	0x01D32AAC BL 0x1C16CF4
	0x01D32AB0 MOVZ W8, 0x1
	0x01D32AB4 STRB W8, [X20 + 0x787]
	0x01D32AB8 LDR X0, [X19]
	0x01D32ABC LDR W8, [X0 + 0xE0]
	0x01D32AC0 CBNZ W8, 0x1D32ACC
	0x01D32AC4 BL 0x1C16DFC
	0x01D32AC8 LDR X0, [X19]
	0x01D32ACC LDR X8, [X0 + 0xB8]
	0x01D32AD0 LDR X8, [X8]
	0x01D32AD4 CBZ X8, 0x1D32AF0
	0x01D32AD8 LDR X8, [X8 + 0x68]
	0x01D32ADC CBZ X8, 0x1D32AF0
	0x01D32AE0 LDR W0, [X8 + 0x4C]
	0x01D32AE4 LDP X20, X19, [X31 + 0x10]
	0x01D32AE8 LDR X30, [X31], #0x20
	0x01D32AEC RET
	0x01D32AF0 BL 0x1C16F20
	0x01D32AF4 STR X30, [X31 - 0x20]!
	0x01D32AF8 STP X20, X19, [X31 + 0x10]
	0x01D32AFC ADRP X20, 0x26A6000
	0x01D32B00 ADRP X19, 0x23C1000
	0x01D32B04 LDRB W8, [X20 + 0x6C9]
	0x01D32B08 LDR X19, [X19 + 0x658]
	0x01D32B0C TBNZ X8, 0x0, 0x1D32B24
	0x01D32B10 ADRP X0, 0x23C1000
	0x01D32B14 LDR X0, [X0 + 0x658]
	0x01D32B18 BL 0x1C16CF4
	0x01D32B1C MOVZ W8, 0x1
	0x01D32B20 STRB W8, [X20 + 0x6C9]
	0x01D32B24 LDR X0, [X19]
	0x01D32B28 LDR W8, [X0 + 0xE0]
	0x01D32B2C CBNZ W8, 0x1D32B34
	0x01D32B30 BL 0x1C16DFC
	0x01D32B34 ADRP X20, 0x26A6000
	0x01D32B38 LDRB W8, [X20 + 0x788]
	0x01D32B3C CBNZ W8, 0x1D32B54
	0x01D32B40 ADRP X0, 0x23C1000
	0x01D32B44 LDR X0, [X0 + 0x658]
	0x01D32B48 BL 0x1C16CF4
	0x01D32B4C MOVZ W8, 0x1
	0x01D32B50 STRB W8, [X20 + 0x788]
	0x01D32B54 LDR X0, [X19]
	0x01D32B58 LDR W8, [X0 + 0xE0]
	0x01D32B5C CBNZ W8, 0x1D32B68
	0x01D32B60 BL 0x1C16DFC
	0x01D32B64 LDR X0, [X19]
	0x01D32B68 LDR X8, [X0 + 0xB8]
	0x01D32B6C LDP X20, X19, [X31 + 0x10]
	0x01D32B70 LDR X0, [X8]
	0x01D32B74 LDR X30, [X31], #0x20
	0x01D32B78 RET
	0x01D32B7C STR X30, [X31 - 0x20]!
	0x01D32B80 STP X20, X19, [X31 + 0x10]
	0x01D32B84 ADRP X20, 0x26A6000
	0x01D32B88 ADRP X19, 0x23C1000
	0x01D32B8C LDRB W8, [X20 + 0x6CA]
	0x01D32B90 LDR X19, [X19 + 0x658]
	0x01D32B94 TBNZ X8, 0x0, 0x1D32BAC
	0x01D32B98 ADRP X0, 0x23C1000
	0x01D32B9C LDR X0, [X0 + 0x658]
	0x01D32BA0 BL 0x1C16CF4
	0x01D32BA4 MOVZ W8, 0x1
	0x01D32BA8 STRB W8, [X20 + 0x6CA]
	0x01D32BAC LDR X0, [X19]
	0x01D32BB0 LDR W8, [X0 + 0xE0]
	0x01D32BB4 CBNZ W8, 0x1D32BBC

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+224], X29
	003 Move [X31+232], X30
	004 Move [X31+240], X24
	005 Move [X31+248], X23
	006 Move [X31+256], X22
	007 Move [X31+264], X21
	008 Move [X31+272], X20
	009 Move [X31+280], X19
	010 Move X21, 0x26A7000
	011 Move X22, 0x23C2000
	012 Move X19, 0x23C2000
	013 Move X20, 0x23C2000
	014 Move W8, [X21+1719]
	015 Move X22, [X22+1560]
	016 Move X19, [X19+1584]
	017 Move X20, [X20+1592]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0x23C2000
	023 Move X0, [X0+1560]
	024 Call 0x1C17CF4
	025 Move X0, 0x23C2000
	026 Move X0, [X0+1600]
	027 Call 0x1C17CF4
	028 Move X0, 0x23C2000
	029 Move X0, [X0+1584]
	030 Call 0x1C17CF4
	031 Move X0, 0x23C2000
	032 Move X0, [X0+1592]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+1719], W8
	036 Move X0, [X22]
	037 Move W1, 8
	038 Call 0x1C17D6C
	039 Move X8, [X19]
	040 Move W1, 23
	041 Move X8, [X8+184]
	042 Move [X8], X0
	043 Move X0, [X20]
	044 Call 0x1C17D6C
	045 Move X8, [X19]
	046 Move X8, [X8+184]
	047 Move [X8+8], X0
	048 Compare X0, 0
	049 JumpIfEqual {136}
	050 Move X8, 0x23C2000
	051 Move X8, [X8+1600]
	052 Move W10, [X0+24]
	053 Move X9, X31
	054 Add X11, X0, 32
	055 Move W12, 1
	056 Move S0, 1
	057 NotImplemented "Instruction CMP not yet implemented."
	058 NotImplemented "Instruction LSLV not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction CINC not yet implemented."
	061 NotImplemented "Instruction SBFM not yet implemented."
	062 NotImplemented "Instruction SCVTF not yet implemented."
	063 NotImplemented "Instruction FDIV not yet implemented."
	064 Move [X11], S1
	065 Add X9, X9, 1
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, [X8]
	068 Move W1, 65
	069 Call 0x1C17D6C
	070 Move X8, [X19]
	071 Move W23, 0xAAAB
	072 Move W20, 14
	073 Move W21, 16
	074 Move X8, [X8+184]
	075 Move W22, 1184
	076 NotImplemented "Instruction MOVK not yet implemented."
	077 Move [X8+16], X0
	078 NotImplemented "Instruction UMADDL not yet implemented."
	079 Move X24, [X8+16]
	080 Subtract W8, W21, 2
	081 Move X9, X9
	082 ShiftRight X9, 33
	083 And X9, X9, 0x7FFFFFFF
	084 NotImplemented "Instruction UMADDL not yet implemented."
	085 Subtract W9, W9, W9
	086 Move X3, X8
	087 ShiftRight X3, 33
	088 And X3, X3, 0x7FFFFFFF
	089 Add W8, W21, W9
	090 Subtract W9, W8, 2
	091 NotImplemented "Instruction CMP not yet implemented."
	092 NotImplemented "Instruction CINC not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 NotImplemented "Instruction MOVI not yet implemented."
	095 NotImplemented "Instruction CINC not yet implemented."
	096 Add X0, X31, 80
	097 Move [X31+144], X31
	098 Move [X31+112], V0
	099 Move [X31+120], V0
	100 Move [X31+80], V0
	101 Move [X31+88], V0
	102 Call Cache..ctor, X0, X1, X2, X3
	103 Add X0, X31, 152
	104 Add X1, X31, 80
	105 Move W2, 72
	106 Call 0x3EB2AC0
	107 Compare X24, 0
	108 JumpIfEqual {136}
	109 Add X0, X31, 8
	110 Add X1, X31, 152
	111 Move W2, 72
	112 Call 0x3EB2AC0
	113 Move W8, [X24+24]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Add X0, X24, X22
	116 Add X1, X31, 8
	117 Move W2, 72
	118 Call 0x3EB2AC0
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X8, [X19]
	121 Add X21, X21, 1
	122 Add X22, X22, 72
	123 Add W20, W20, 1
	124 Move X8, [X8+184]
	125 Move X20, [X31+272]
	126 Move X19, [X31+280]
	127 Move X22, [X31+256]
	128 Move X21, [X31+264]
	129 Move X24, [X31+240]
	130 Move X23, [X31+248]
	131 Move X29, [X31+224]
	132 Move X30, [X31+232]
	133 Add X31, X31, 288
	134 Return 
	135 Call 0x1C17F28
	136 Call 0x1C17F20

Method: System.UInt64 Compress(UnityEngine.Quaternion rot, emotitron.Compression.PrimitivePresets preset)

Disassembly:
	0x01D32C04 STR X30, [X31 - 0x20]!
	0x01D32C08 STP X20, X19, [X31 + 0x10]
	0x01D32C0C ADRP X20, 0x26A6000
	0x01D32C10 ADRP X19, 0x23C1000
	0x01D32C14 LDRB W8, [X20 + 0x6CB]
	0x01D32C18 LDR X19, [X19 + 0x648]
	0x01D32C1C TBNZ X8, 0x0, 0x1D32C34
	0x01D32C20 ADRP X0, 0x23C1000
	0x01D32C24 LDR X0, [X0 + 0x648]
	0x01D32C28 BL 0x1C16CF4
	0x01D32C2C MOVZ W8, 0x1
	0x01D32C30 STRB W8, [X20 + 0x6CB]
	0x01D32C34 LDR X0, [X19]
	0x01D32C38 LDR W8, [X0 + 0xE0]
	0x01D32C3C CBNZ W8, 0x1D32C48
	0x01D32C40 BL 0x1C16DFC
	0x01D32C44 LDR X0, [X19]
	0x01D32C48 LDR X8, [X0 + 0xB8]
	0x01D32C4C LDR X0, [X8 + 0x50]
	0x01D32C50 CBZ X0, 0x1D32C64
	0x01D32C54 LDP X20, X19, [X31 + 0x10]
	0x01D32C58 MOV X1, X31
	0x01D32C5C LDR X30, [X31], #0x20
	0x01D32C60 B 0x35C0BC4
	0x01D32C64 BL 0x1C16F20
	0x01D32C68 STR X30, [X31 - 0x20]!
	0x01D32C6C STP X20, X19, [X31 + 0x10]
	0x01D32C70 ADRP X20, 0x26A6000
	0x01D32C74 ADRP X19, 0x23C1000
	0x01D32C78 LDRB W8, [X20 + 0x6CC]
	0x01D32C7C LDR X19, [X19 + 0x648]
	0x01D32C80 TBNZ X8, 0x0, 0x1D32C98
	0x01D32C84 ADRP X0, 0x23C1000
	0x01D32C88 LDR X0, [X0 + 0x648]
	0x01D32C8C BL 0x1C16CF4
	0x01D32C90 MOVZ W8, 0x1
	0x01D32C94 STRB W8, [X20 + 0x6CC]
	0x01D32C98 LDR X0, [X19]
	0x01D32C9C LDR W8, [X0 + 0xE0]
	0x01D32CA0 CBNZ W8, 0x1D32CAC
	0x01D32CA4 BL 0x1C16DFC
	0x01D32CA8 LDR X0, [X19]
	0x01D32CAC LDR X8, [X0 + 0xB8]
	0x01D32CB0 LDP X20, X19, [X31 + 0x10]
	0x01D32CB4 LDRB W0, [X8 + 0x1A]
	0x01D32CB8 LDR X30, [X31], #0x20
	0x01D32CBC RET
	0x01D32CC0 STP X30, X27, [X31 - 0x50]!
	0x01D32CC4 STP X26, X25, [X31 + 0x10]
	0x01D32CC8 STP X24, X23, [X31 + 0x20]
	0x01D32CCC STP X22, X21, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], D11
	003 Move [X31+88], D10
	004 Move [X31+96], D9
	005 Move [X31+104], D8
	006 Move [X31+112], X30
	007 Move [X31+120], X21
	008 Move [X31+128], X20
	009 Move [X31+136], X19
	010 Move X21, 0x26A7000
	011 Move X20, 0x23C2000
	012 Move W8, [X21+1720]
	013 Move X20, [X20+1584]
	014 Move W19, W0
	015 Move V8, V3
	016 Move V9, V2
	017 Move V10, V1
	018 Move V11, V0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x23C2000
	024 Move X0, [X0+1584]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+1720], W8
	028 Move X0, [X20]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X20]
	034 Move X8, [X0+184]
	035 Move X8, [X8+16]
	036 Compare X8, 0
	037 JumpIfEqual {62}
	038 Move W9, [X8+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W9, 72
	041 NotImplemented "Instruction SMADDL not yet implemented."
	042 Add X1, X8, 32
	043 Add X0, X31, 8
	044 Move W2, 72
	045 Call 0x3EB2AC0
	046 Add X0, X31, 8
	047 Move V0, V11
	048 Move V1, V10
	049 Move V2, V9
	050 Move V3, V8
	051 Call QuatCompress.Compress, X0, X1
	052 Move X20, [X31+128]
	053 Move X19, [X31+136]
	054 Move X30, [X31+112]
	055 Move X21, [X31+120]
	056 Move D9, [X31+96]
	057 Move D8, [X31+104]
	058 Move D11, [X31+80]
	059 Move D10, [X31+88]
	060 Add X31, X31, 144
	061 Return X0
	062 Call 0x1C17F20
	063 Call 0x1C17F28

Method: System.UInt64 Compress(UnityEngine.Quaternion rot, System.Int32 bits)

Disassembly:
	0x01D32E4C BL 0x338C698
	0x01D32E50 LDR X8, [X20]
	0x01D32E54 MOV X20, X0
	0x01D32E58 MOV X0, X8
	0x01D32E5C BL 0x1C16F10
	0x01D32E60 MOV X1, X20
	0x01D32E64 MOV X2, X31
	0x01D32E68 MOV X19, X0
	0x01D32E6C BL 0x35D1E90
	0x01D32E70 LDR X0, [X21]
	0x01D32E74 BL 0x1C16F10
	0x01D32E78 MOV X1, X19
	0x01D32E7C MOV X20, X0
	0x01D32E80 BL 0x1D33168
	0x01D32E84 LDR X8, [X22]
	0x01D32E88 LDR X8, [X8 + 0xB8]
	0x01D32E8C STR X20, [X8 + 0x10]
	0x01D32E90 CBZ X20, 0x1D33100
	0x01D32E94 ADRP X23, 0x23C1000
	0x01D32E98 LDR X8, [X20]
	0x01D32E9C LDR X23, [X23 + 0x6A8]
	0x01D32EA0 ADRP X24, 0x23C1000
	0x01D32EA4 LDRH W9, [X8 + 0x12E]
	0x01D32EA8 LDR X1, [X23]
	0x01D32EAC LDR X24, [X24 + 0x670]
	0x01D32EB0 CBZ X9, 0x1D32ED4
	0x01D32EB4 LDR X10, [X8 + 0xB0]
	0x01D32EB8 ADD X10, X10, 0x8
	0x01D32EBC LDUR X11, [X10 - 0x8]
	0x01D32EC0 CMP X11, X1
	0x01D32EC4 B.EQ 0x1D32EE4
	0x01D32EC8 SUBS X9, X9, 0x1
	0x01D32ECC ADD X10, X10, 0x10
	0x01D32ED0 B.NE 0x1D32EBC
	0x01D32ED4 MOVZ W2, 0x1
	0x01D32ED8 MOV X0, X20
	0x01D32EDC BL 0x1C5C788
	0x01D32EE0 B 0x1D32EF4
	0x01D32EE4 LDR W9, [X10]
	0x01D32EE8 ADD W9, W9, 0x1
	0x01D32EEC ADD X8, X8, W9, 0x4, SXTW
	0x01D32EF0 ADD X0, X8, 0x138
	0x01D32EF4 LDP X8, X2, [X0]
	0x01D32EF8 MOVZ W1, 0x1
	0x01D32EFC MOV X0, X20
	0x01D32F00 MOVZ W25, 0x1
	0x01D32F04 BLR X8
	0x01D32F08 LDR X8, [X22]
	0x01D32F0C LDR X0, [X24]
	0x01D32F10 LDR X8, [X8 + 0xB8]
	0x01D32F14 LDR X21, [X8 + 0x10]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], D11
	003 Move [X31+88], D10
	004 Move [X31+96], D9
	005 Move [X31+104], D8
	006 Move [X31+112], X30
	007 Move [X31+120], X21
	008 Move [X31+128], X20
	009 Move [X31+136], X19
	010 Move X21, 0x26A7000
	011 Move X20, 0x23C2000
	012 Move W8, [X21+1721]
	013 Move X20, [X20+1584]
	014 Move W19, W0
	015 Move V8, V3
	016 Move V9, V2
	017 Move V10, V1
	018 Move V11, V0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x23C2000
	024 Move X0, [X0+1584]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+1721], W8
	028 Move X0, [X20]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X20]
	034 Move X8, [X0+184]
	035 Move X8, [X8+16]
	036 Compare X8, 0
	037 JumpIfEqual {62}
	038 Move W9, [X8+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W9, 72
	041 NotImplemented "Instruction SMADDL not yet implemented."
	042 Add X1, X8, 32
	043 Add X0, X31, 8
	044 Move W2, 72
	045 Call 0x3EB2AC0
	046 Add X0, X31, 8
	047 Move V0, V11
	048 Move V1, V10
	049 Move V2, V9
	050 Move V3, V8
	051 Call QuatCompress.Compress, X0, X1
	052 Move X20, [X31+128]
	053 Move X19, [X31+136]
	054 Move X30, [X31+112]
	055 Move X21, [X31+120]
	056 Move D9, [X31+96]
	057 Move D8, [X31+104]
	058 Move D11, [X31+80]
	059 Move D10, [X31+88]
	060 Add X31, X31, 144
	061 Return X0
	062 Call 0x1C17F20
	063 Call 0x1C17F28

Method: System.UInt64 Compress(UnityEngine.Quaternion rot, emotitron.Compression.QuatCompress/Cache cache)

Disassembly:
	0x01D32CD0 STP X20, X19, [X31 + 0x40]
	0x01D32CD4 ADRP X20, 0x26A6000
	0x01D32CD8 ADRP X22, 0x23C1000
	0x01D32CDC LDRB W8, [X20 + 0x6CD]
	0x01D32CE0 LDR X22, [X22 + 0x648]
	0x01D32CE4 MOV X19, X0
	0x01D32CE8 TBNZ X8, 0x0, 0x1D32DA8
	0x01D32CEC ADRP X0, 0x23C1000
	0x01D32CF0 LDR X0, [X0 + 0x660]
	0x01D32CF4 BL 0x1C16CF4
	0x01D32CF8 ADRP X0, 0x23C1000
	0x01D32CFC LDR X0, [X0 + 0x668]
	0x01D32D00 BL 0x1C16CF4
	0x01D32D04 ADRP X0, 0x23C1000
	0x01D32D08 LDR X0, [X0 + 0x670]
	0x01D32D0C BL 0x1C16CF4
	0x01D32D10 ADRP X0, 0x23C1000
	0x01D32D14 LDR X0, [X0 + 0x648]
	0x01D32D18 BL 0x1C16CF4
	0x01D32D1C ADRP X0, 0x23C1000
	0x01D32D20 LDR X0, [X0 + 0x678]
	0x01D32D24 BL 0x1C16CF4
	0x01D32D28 ADRP X0, 0x23C1000
	0x01D32D2C LDR X0, [X0 + 0x680]
	0x01D32D30 BL 0x1C16CF4
	0x01D32D34 ADRP X0, 0x23C1000
	0x01D32D38 LDR X0, [X0 + 0x688]
	0x01D32D3C BL 0x1C16CF4
	0x01D32D40 ADRP X0, 0x23C1000
	0x01D32D44 LDR X0, [X0 + 0x690]
	0x01D32D48 BL 0x1C16CF4
	0x01D32D4C ADRP X0, 0x23C1000
	0x01D32D50 LDR X0, [X0 + 0x698]
	0x01D32D54 BL 0x1C16CF4
	0x01D32D58 ADRP X0, 0x23C1000
	0x01D32D5C LDR X0, [X0 + 0x6A0]
	0x01D32D60 BL 0x1C16CF4
	0x01D32D64 ADRP X0, 0x23C1000
	0x01D32D68 LDR X0, [X0 + 0x6A8]
	0x01D32D6C BL 0x1C16CF4
	0x01D32D70 ADRP X0, 0x23C1000
	0x01D32D74 LDR X0, [X0 + 0x6B0]
	0x01D32D78 BL 0x1C16CF4
	0x01D32D7C ADRP X0, 0x23C1000
	0x01D32D80 LDR X0, [X0 + 0x6B8]
	0x01D32D84 BL 0x1C16CF4
	0x01D32D88 ADRP X0, 0x23C1000
	0x01D32D8C LDR X0, [X0 + 0x598]
	0x01D32D90 BL 0x1C16CF4
	0x01D32D94 ADRP X0, 0x23C1000
	0x01D32D98 LDR X0, [X0 + 0x6C0]
	0x01D32D9C BL 0x1C16CF4
	0x01D32DA0 MOVZ W8, 0x1
	0x01D32DA4 STRB W8, [X20 + 0x6CD]
	0x01D32DA8 LDR X0, [X22]
	0x01D32DAC ADRP X20, 0x23C1000
	0x01D32DB0 LDR W8, [X0 + 0xE0]
	0x01D32DB4 LDR X20, [X20 + 0x598]
	0x01D32DB8 CBNZ W8, 0x1D32DC4
	0x01D32DBC BL 0x1C16DFC
	0x01D32DC0 LDR X0, [X22]
	0x01D32DC4 LDR X8, [X20]
	0x01D32DC8 LDR X9, [X0 + 0xB8]
	0x01D32DCC LDR W10, [X8 + 0xE0]
	0x01D32DD0 LDR X20, [X9 + 0x8]
	0x01D32DD4 CBNZ W10, 0x1D32DE0
	0x01D32DD8 MOV X0, X8
	0x01D32DDC BL 0x1C16DFC
	0x01D32DE0 MOV X0, X20
	0x01D32DE4 MOV X1, X31
	0x01D32DE8 MOV X2, X31
	0x01D32DEC BL 0x3C354F8
	0x01D32DF0 TBNZ X0, 0x0, 0x1D33104
	0x01D32DF4 LDR X0, [X22]
	0x01D32DF8 ADRP X20, 0x23C1000
	0x01D32DFC ADRP X21, 0x23C1000
	0x01D32E00 LDR W8, [X0 + 0xE0]
	0x01D32E04 LDR X20, [X20 + 0x668]
	0x01D32E08 LDR X21, [X21 + 0x6C0]
	0x01D32E0C CBNZ W8, 0x1D32E18
	0x01D32E10 BL 0x1C16DFC
	0x01D32E14 LDR X0, [X22]
	0x01D32E18 LDR X8, [X0 + 0xB8]
	0x01D32E1C STR X19, [X8 + 0x8]
	0x01D32E20 LDR X0, [X21]
	0x01D32E24 LDR X19, [X20]
	0x01D32E28 ADRP X20, 0x23C1000
	0x01D32E2C ADRP X21, 0x23C1000
	0x01D32E30 LDR W8, [X0 + 0xE0]
	0x01D32E34 LDR X20, [X20 + 0x678]
	0x01D32E38 LDR X21, [X21 + 0x660]
	0x01D32E3C CBNZ W8, 0x1D32E44
	0x01D32E40 BL 0x1C16DFC
	0x01D32E44 MOV X0, X19
	0x01D32E48 MOV X1, X31

ISIL:
	001 NotImplemented "Instruction FABS not yet implemented."
	002 NotImplemented "Instruction FABS not yet implemented."
	003 NotImplemented "Instruction FABS not yet implemented."
	004 NotImplemented "Instruction FABS not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 NotImplemented "Instruction CSET not yet implemented."
	007 NotImplemented "Instruction FCSEL not yet implemented."
	008 NotImplemented "Instruction FCMP not yet implemented."
	009 Move W8, 3
	010 Move W9, 2
	011 NotImplemented "Instruction FCSEL not yet implemented."
	012 NotImplemented "Instruction CSEL not yet implemented."
	013 NotImplemented "Instruction FCMP not yet implemented."
	014 NotImplemented "Instruction CSEL not yet implemented."
	015 NotImplemented "Instruction CMP not yet implemented."
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Compare W8, 0
	018 JumpIfNotEqual {23}
	019 Move V4, V0
	020 Move V0, V1
	021 Move V4, V2
	022 Move V4, V1
	023 Move V4, V3
	024 Move V3, V2
	025 Move V2, V1
	026 Move S6, [X0+60]
	027 Move S5, [X0+64]
	028 Move V1, [X0+68]
	029 Move W13, [X0+28]
	030 Move W11, [X0+32]
	031 Move W12, [X0+12]
	032 Move W9, [X0+16]
	033 Move W10, [X0+20]
	034 Move W14, [X0+24]
	035 NotImplemented "Instruction FCVT not yet implemented."
	036 NotImplemented "Instruction FCMP not yet implemented."
	037 NotImplemented "Instruction FCVT not yet implemented."
	038 Multiply D0, D0, D4
	039 NotImplemented "Instruction UCVTF not yet implemented."
	040 NotImplemented "Instruction FCVT not yet implemented."
	041 NotImplemented "Instruction FCVT not yet implemented."
	042 Add D0, D0, D4
	043 NotImplemented "Instruction UCVTF not yet implemented."
	044 Multiply D2, D2, D5
	045 NotImplemented "Instruction UCVTF not yet implemented."
	046 NotImplemented "Instruction FCVTZS not yet implemented."
	047 NotImplemented "Instruction FCVTZU not yet implemented."
	048 NotImplemented "Instruction FCMP not yet implemented."
	049 Add D0, D2, D4
	050 NotImplemented "Instruction CSEL not yet implemented."
	051 NotImplemented "Instruction FCVTZS not yet implemented."
	052 NotImplemented "Instruction FCVTZU not yet implemented."
	053 NotImplemented "Instruction FCMP not yet implemented."
	054 NotImplemented "Instruction FCVT not yet implemented."
	055 NotImplemented "Instruction FCVT not yet implemented."
	056 NotImplemented "Instruction CSEL not yet implemented."
	057 Multiply D1, D3, D1
	058 NotImplemented "Instruction LSLV not yet implemented."
	059 Or X11, X12, X11
	060 Add D0, D1, D5
	061 NotImplemented "Instruction UCVTF not yet implemented."
	062 Multiply D0, D0, D4
	063 NotImplemented "Instruction FCVT not yet implemented."
	064 NotImplemented "Instruction FCVT not yet implemented."
	065 NotImplemented "Instruction UCVTF not yet implemented."
	066 Subtract D0, D6, D0
	067 Multiply D2, D2, D4
	068 NotImplemented "Instruction UCVTF not yet implemented."
	069 NotImplemented "Instruction FCVTZS not yet implemented."
	070 NotImplemented "Instruction FCVTZU not yet implemented."
	071 NotImplemented "Instruction FCMP not yet implemented."
	072 Subtract D0, D5, D2
	073 NotImplemented "Instruction CSEL not yet implemented."
	074 NotImplemented "Instruction FCVTZS not yet implemented."
	075 NotImplemented "Instruction FCVTZU not yet implemented."
	076 NotImplemented "Instruction FCMP not yet implemented."
	077 NotImplemented "Instruction FCVT not yet implemented."
	078 NotImplemented "Instruction FCVT not yet implemented."
	079 NotImplemented "Instruction CSEL not yet implemented."
	080 Multiply D1, D3, D1
	081 NotImplemented "Instruction LSLV not yet implemented."
	082 Or X11, X12, X11
	083 Subtract D0, D6, D1
	084 NotImplemented "Instruction FCVTZS not yet implemented."
	085 NotImplemented "Instruction FCVTZU not yet implemented."
	086 NotImplemented "Instruction FCMP not yet implemented."
	087 NotImplemented "Instruction CSEL not yet implemented."
	088 Move W8, W8
	089 NotImplemented "Instruction LSLV not yet implemented."
	090 Or X9, X11, X9
	091 NotImplemented "Instruction LSLV not yet implemented."
	092 Or X0, X9, X8
	093 Return X0

Method: System.UInt64 CompressToULong(UnityEngine.Quaternion rotation, System.Int32 totalBits = 64)

Disassembly:
	0x01D32F18 BL 0x1C16F10
	0x01D32F1C MOV X1, X21
	0x01D32F20 MOV X2, X19
	0x01D32F24 MOV X3, X31
	0x01D32F28 MOV X4, X31
	0x01D32F2C MOV X20, X0
	0x01D32F30 BL 0x35D1D80
	0x01D32F34 ADRP X19, 0x26A6000
	0x01D32F38 LDRB W8, [X19 + 0x78A]
	0x01D32F3C CBNZ W8, 0x1D32F50
	0x01D32F40 ADRP X0, 0x23C1000
	0x01D32F44 LDR X0, [X0 + 0x648]
	0x01D32F48 BL 0x1C16CF4
	0x01D32F4C STRB W25, [X19 + 0x78A]
	0x01D32F50 LDR X0, [X22]
	0x01D32F54 LDR W8, [X0 + 0xE0]
	0x01D32F58 CBNZ W8, 0x1D32F64
	0x01D32F5C BL 0x1C16DFC
	0x01D32F60 LDR X0, [X22]
	0x01D32F64 LDR X8, [X0 + 0xB8]
	0x01D32F68 STR X20, [X8]
	0x01D32F6C LDR X8, [X22]
	0x01D32F70 LDR X8, [X8 + 0xB8]
	0x01D32F74 LDR X19, [X8 + 0x10]
	0x01D32F78 CBZ X19, 0x1D33100
	0x01D32F7C ADRP X27, 0x23C1000
	0x01D32F80 LDR X27, [X27 + 0x680]
	0x01D32F84 LDR X8, [X19]
	0x01D32F88 ADRP X26, 0x23C1000
	0x01D32F8C ADRP X25, 0x23C1000
	0x01D32F90 ADRP X21, 0x23C1000
	0x01D32F94 LDR X26, [X26 + 0x6A0]
	0x01D32F98 LDR X25, [X25 + 0x688]
	0x01D32F9C LDR X21, [X21 + 0x6B8]
	0x01D32FA0 LDR X1, [X23]
	0x01D32FA4 ADRP X20, 0x23C1000
	0x01D32FA8 ADRP X24, 0x23C1000
	0x01D32FAC ADRP X23, 0x23C1000
	0x01D32FB0 LDRH W9, [X8 + 0x12E]
	0x01D32FB4 LDR X20, [X20 + 0x6B0]
	0x01D32FB8 LDR X24, [X24 + 0x698]
	0x01D32FBC LDR X23, [X23 + 0x690]
	0x01D32FC0 CBZ X9, 0x1D32FE4
	0x01D32FC4 LDR X10, [X8 + 0xB0]
	0x01D32FC8 ADD X10, X10, 0x8
	0x01D32FCC LDUR X11, [X10 - 0x8]
	0x01D32FD0 CMP X11, X1
	0x01D32FD4 B.EQ 0x1D32FF4
	0x01D32FD8 SUBS X9, X9, 0x1
	0x01D32FDC ADD X10, X10, 0x10
	0x01D32FE0 B.NE 0x1D32FCC
	0x01D32FE4 MOVZ W2, 0x1
	0x01D32FE8 MOV X0, X19
	0x01D32FEC BL 0x1C5C788

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], D11
	003 Move [X31+88], D10
	004 Move [X31+96], D9
	005 Move [X31+104], D8
	006 Move [X31+112], X30
	007 Move [X31+120], X21
	008 Move [X31+128], X20
	009 Move [X31+136], X19
	010 Move X21, 0x26A7000
	011 Move X20, 0x23C2000
	012 Move W8, [X21+1722]
	013 Move X20, [X20+1584]
	014 Move W19, W0
	015 Move V8, V3
	016 Move V9, V2
	017 Move V10, V1
	018 Move V11, V0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x23C2000
	024 Move X0, [X0+1584]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+1722], W8
	028 Move X0, [X20]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W9, 16
	031 NotImplemented "Instruction CSEL not yet implemented."
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X20]
	037 Move X8, [X0+184]
	038 Move X8, [X8+16]
	039 Compare X8, 0
	040 JumpIfEqual {65}
	041 Move W9, [X8+24]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move W9, 72
	044 NotImplemented "Instruction UMADDL not yet implemented."
	045 Add X1, X8, 32
	046 Add X0, X31, 8
	047 Move W2, 72
	048 Call 0x3EB2AC0
	049 Add X0, X31, 8
	050 Move V0, V11
	051 Move V1, V10
	052 Move V2, V9
	053 Move V3, V8
	054 Call QuatCompress.Compress, X0, X1
	055 Move X20, [X31+128]
	056 Move X19, [X31+136]
	057 Move X30, [X31+112]
	058 Move X21, [X31+120]
	059 Move D9, [X31+96]
	060 Move D8, [X31+104]
	061 Move D11, [X31+80]
	062 Move D10, [X31+88]
	063 Add X31, X31, 144
	064 Return X0
	065 Call 0x1C17F20
	066 Call 0x1C17F28

Method: System.UInt32 CompressToUint(UnityEngine.Quaternion rot)

Disassembly:
	0x01D32FF0 B 0x1D33004
	0x01D32FF4 LDR W9, [X10]
	0x01D32FF8 ADD W9, W9, 0x1
	0x01D32FFC ADD X8, X8, W9, 0x4, SXTW
	0x01D33000 ADD X0, X8, 0x138
	0x01D33004 LDP X8, X2, [X0]
	0x01D33008 MOV X0, X19
	0x01D3300C MOV W1, W31
	0x01D33010 BLR X8
	0x01D33014 LDR X0, [X27]
	0x01D33018 BL 0x1C16F10
	0x01D3301C MOV X1, X31
	0x01D33020 MOV X19, X0
	0x01D33024 BL 0x35C0CEC
	0x01D33028 LDR X8, [X22]
	0x01D3302C LDR X8, [X8 + 0xB8]
	0x01D33030 STR X19, [X8 + 0x50]
	0x01D33034 LDR X0, [X26]
	0x01D33038 BL 0x1C16F10
	0x01D3303C LDR X1, [X25]
	0x01D33040 MOV X19, X0
	0x01D33044 BL 0x2991A90
	0x01D33048 LDR X8, [X22]
	0x01D3304C LDR X8, [X8 + 0xB8]
	0x01D33050 STR X19, [X8 + 0x40]
	0x01D33054 LDR X0, [X21]
	0x01D33058 BL 0x1C16F10
	0x01D3305C LDR X1, [X20]
	0x01D33060 MOV X19, X0
	0x01D33064 BL 0x301B7C4
	0x01D33068 LDR X8, [X22]
	0x01D3306C LDR X8, [X8 + 0xB8]
	0x01D33070 STR X19, [X8 + 0x48]
	0x01D33074 LDR X0, [X24]
	0x01D33078 BL 0x1C16F10
	0x01D3307C LDR X1, [X23]
	0x01D33080 MOV X19, X0
	0x01D33084 BL 0x2991A90
	0x01D33088 LDR X8, [X22]
	0x01D3308C MOV X0, X31
	0x01D33090 LDR X8, [X8 + 0xB8]
	0x01D33094 STR X19, [X8 + 0x58]
	0x01D33098 BL 0x33E3C68
	0x01D3309C LDR X8, [X22]
	0x01D330A0 LDR X8, [X8 + 0xB8]
	0x01D330A4 STR X0, [X8 + 0x60]
	0x01D330A8 LDR X0, [X21]
	0x01D330AC BL 0x1C16F10

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], D11
	003 Move [X31+88], D10
	004 Move [X31+96], D9
	005 Move [X31+104], D8
	006 Move [X31+112], X30
	007 Move [X31+128], X20
	008 Move [X31+136], X19
	009 Move X20, 0x26A6000
	010 Move X19, 0x23C1000
	011 Move W8, [X20+1723]
	012 Move X19, [X19+1584]
	013 Move V8, V3
	014 Move V9, V2
	015 Move V10, V1
	016 Move V11, V0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x23C1000
	022 Move X0, [X0+1584]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1723], W8
	026 Move X0, [X19]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X19]
	032 Move X8, [X0+184]
	033 Move X8, [X8+16]
	034 Compare X8, 0
	035 JumpIfEqual {57}
	036 Move W9, [X8+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Add X1, X8, 2336
	039 Add X0, X31, 8
	040 Move W2, 72
	041 Call 0x3EB2AC0
	042 Add X0, X31, 8
	043 Move V0, V11
	044 Move V1, V10
	045 Move V2, V9
	046 Move V3, V8
	047 Call QuatCompress.Compress, X0, X1
	048 Move X20, [X31+128]
	049 Move X19, [X31+136]
	050 Move X30, [X31+112]
	051 Move D9, [X31+96]
	052 Move D8, [X31+104]
	053 Move D11, [X31+80]
	054 Move D10, [X31+88]
	055 Add X31, X31, 144
	056 Return X0
	057 Call 0x1C17F20
	058 Call 0x1C17F28

Method: System.UInt16 CompressToUShort(UnityEngine.Quaternion rot)

Disassembly:
	0x01D330B0 LDR X1, [X20]
	0x01D330B4 MOV X19, X0
	0x01D330B8 BL 0x301B7C4
	0x01D330BC LDR X8, [X22]
	0x01D330C0 LDR X8, [X8 + 0xB8]
	0x01D330C4 STR X19, [X8 + 0x20]
	0x01D330C8 LDR X0, [X21]
	0x01D330CC BL 0x1C16F10
	0x01D330D0 LDR X1, [X20]
	0x01D330D4 MOV X19, X0
	0x01D330D8 BL 0x301B7C4
	0x01D330DC LDR X8, [X22]
	0x01D330E0 LDP X22, X21, [X31 + 0x30]
	0x01D330E4 LDP X24, X23, [X31 + 0x20]
	0x01D330E8 LDP X26, X25, [X31 + 0x10]
	0x01D330EC LDR X8, [X8 + 0xB8]
	0x01D330F0 STR X19, [X8 + 0x28]
	0x01D330F4 LDP X20, X19, [X31 + 0x40]
	0x01D330F8 LDP X30, X27, [X31], #0x50
	0x01D330FC RET
	0x01D33100 BL 0x1C16F20
	0x01D33104 ADRP X0, 0x23C0000
	0x01D33108 LDR X0, [X0 + 0x598]
	0x01D3310C BL 0x1C16D08
	0x01D33110 BL 0x19903D0
	0x01D33114 MOV X0, X19
	0x01D33118 MOV X1, X31
	0x01D3311C BL 0x3C394A8
	0x01D33120 ADRP X0, 0x23C0000
	0x01D33124 LDR X0, [X0 + 0x5B0]
	0x01D33128 BL 0x1C16D08
	0x01D3312C BL 0x1C16F10
	0x01D33130 MOV X19, X0
	0x01D33134 ADRP X0, 0x23C0000
	0x01D33138 LDR X0, [X0 + 0x6C8]
	0x01D3313C BL 0x1C16D08
	0x01D33140 MOV X1, X0
	0x01D33144 MOV X0, X19
	0x01D33148 MOV X2, X31
	0x01D3314C BL 0x337DF1C
	0x01D33150 ADRP X0, 0x23C0000
	0x01D33154 LDR X0, [X0 + 0x6D0]
	0x01D33158 BL 0x1C16D08
	0x01D3315C MOV X1, X0
	0x01D33160 MOV X0, X19
	0x01D33164 BL 0x1C16DEC
	0x01D33168 STP X30, X23, [X31 - 0x30]!
	0x01D3316C STP X22, X21, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], D11
	003 Move [X31+88], D10
	004 Move [X31+96], D9
	005 Move [X31+104], D8
	006 Move [X31+112], X30
	007 Move [X31+128], X20
	008 Move [X31+136], X19
	009 Move X20, 0x26A6000
	010 Move X19, 0x23C1000
	011 Move W8, [X20+1724]
	012 Move X19, [X19+1584]
	013 Move V8, V3
	014 Move V9, V2
	015 Move V10, V1
	016 Move V11, V0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x23C1000
	022 Move X0, [X0+1584]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1724], W8
	026 Move X0, [X19]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X19]
	032 Move X8, [X0+184]
	033 Move X8, [X8+16]
	034 Compare X8, 0
	035 JumpIfEqual {57}
	036 Move W9, [X8+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Add X1, X8, 1184
	039 Add X0, X31, 8
	040 Move W2, 72
	041 Call 0x3EB2AC0
	042 Add X0, X31, 8
	043 Move V0, V11
	044 Move V1, V10
	045 Move V2, V9
	046 Move V3, V8
	047 Call QuatCompress.Compress, X0, X1
	048 Move X20, [X31+128]
	049 Move X19, [X31+136]
	050 Move X30, [X31+112]
	051 Move D9, [X31+96]
	052 Move D8, [X31+104]
	053 Move D11, [X31+80]
	054 Move D10, [X31+88]
	055 Add X31, X31, 144
	056 Return X0
	057 Call 0x1C17F20
	058 Call 0x1C17F28

Method: System.Byte[] CompressToByteArray(UnityEngine.Quaternion rot, System.Int32 bytecount = 5)

Disassembly:
	0x01D33170 STP X20, X19, [X31 + 0x20]
	0x01D33174 ADRP X21, 0x26A5000
	0x01D33178 ADRP X23, 0x23C0000
	0x01D3317C ADRP X22, 0x23C0000
	0x01D33180 LDRB W8, [X21 + 0x70F]
	0x01D33184 LDR X23, [X23 + 0x6D8]
	0x01D33188 LDR X22, [X22 + 0x6E0]
	0x01D3318C MOV X19, X1
	0x01D33190 MOV X20, X0
	0x01D33194 TBNZ X8, 0x0, 0x1D331B8
	0x01D33198 ADRP X0, 0x23C0000
	0x01D3319C LDR X0, [X0 + 0x6D8]
	0x01D331A0 BL 0x1C16CF4
	0x01D331A4 ADRP X0, 0x23C0000
	0x01D331A8 LDR X0, [X0 + 0x6E0]
	0x01D331AC BL 0x1C16CF4
	0x01D331B0 MOVZ W8, 0x1
	0x01D331B4 STRB W8, [X21 + 0x70F]
	0x01D331B8 LDR X0, [X23]
	0x01D331BC BL 0x1C16F10
	0x01D331C0 MOVZ W1, 0x80
	0x01D331C4 MOV X2, X31
	0x01D331C8 MOV X21, X0
	0x01D331CC BL 0x1D670B0
	0x01D331D0 LDR X0, [X22]
	0x01D331D4 LDR W8, [X0 + 0xE0]
	0x01D331D8 CBNZ W8, 0x1D331E0
	0x01D331DC BL 0x1C16DFC
	0x01D331E0 MOV X0, X20
	0x01D331E4 MOV X1, X19
	0x01D331E8 MOV X2, X21
	0x01D331EC LDP X20, X19, [X31 + 0x20]
	0x01D331F0 LDP X22, X21, [X31 + 0x10]
	0x01D331F4 MOV X3, X31
	0x01D331F8 LDP X30, X23, [X31], #0x30
	0x01D331FC B 0x35C55C8

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x26A6000
	010 Move X20, 0x23C1000
	011 Move W8, [X21+1725]
	012 Move X20, [X20+1584]
	013 Move W19, W0
	014 Move V8, V3
	015 Move V9, V2
	016 Move V10, V1
	017 Move V11, V0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x23C1000
	023 Move X0, [X0+1584]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+1725], W8
	027 Move X0, [X20]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X20]
	033 Move X8, [X0+184]
	034 Move V2, V9
	035 Move V3, V8
	036 Move W1, W19
	037 Move X0, [X8]
	038 Move X20, [X31+48]
	039 Move X19, [X31+56]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Move D9, [X31+16]
	043 Move D8, [X31+24]
	044 Move V0, V11
	045 Move V1, V10
	046 Move D11, [X31+64]
	047 Move D10, [X31+72]

Method: System.Byte[] CompressToByteArrayNonAlloc(UnityEngine.Quaternion rot, System.Byte[] arr, System.Int32 bytecount = -1)

Disassembly:
	0x01D33200 MOV X3, X31
	0x01D33204 MOV X4, X31
	0x01D33208 B 0x35D1D80
	0x01D3320C STR X30, [X31 - 0x20]!
	0x01D33210 STP X20, X19, [X31 + 0x10]
	0x01D33214 ADRP X20, 0x26A5000
	0x01D33218 ADRP X19, 0x23C0000
	0x01D3321C LDRB W8, [X20 + 0x6CE]
	0x01D33220 LDR X19, [X19 + 0x648]
	0x01D33224 TBNZ X8, 0x0, 0x1D3323C
	0x01D33228 ADRP X0, 0x23C0000
	0x01D3322C LDR X0, [X0 + 0x648]
	0x01D33230 BL 0x1C16CF4
	0x01D33234 MOVZ W8, 0x1
	0x01D33238 STRB W8, [X20 + 0x6CE]
	0x01D3323C LDR X0, [X19]
	0x01D33240 LDR W8, [X0 + 0xE0]
	0x01D33244 CBNZ W8, 0x1D33250
	0x01D33248 BL 0x1C16DFC
	0x01D3324C LDR X0, [X19]
	0x01D33250 LDR X8, [X0 + 0xB8]
	0x01D33254 LDP X20, X19, [X31 + 0x10]
	0x01D33258 STR X31, [X8 + 0x8]
	0x01D3325C LDR X30, [X31], #0x20
	0x01D33260 RET
	0x01D33264 STR X30, [X31 - 0x20]!
	0x01D33268 STP X20, X19, [X31 + 0x10]
	0x01D3326C ADRP X19, 0x26A5000
	0x01D33270 ADRP X20, 0x23C0000
	0x01D33274 LDRB W8, [X19 + 0x6CF]
	0x01D33278 LDR X20, [X20 + 0x648]
	0x01D3327C TBNZ X8, 0x0, 0x1D33294
	0x01D33280 ADRP X0, 0x23C0000
	0x01D33284 LDR X0, [X0 + 0x648]
	0x01D33288 BL 0x1C16CF4
	0x01D3328C MOVZ W8, 0x1
	0x01D33290 STRB W8, [X19 + 0x6CF]
	0x01D33294 LDR X0, [X20]
	0x01D33298 LDR W8, [X0 + 0xE0]
	0x01D3329C CBNZ W8, 0x1D332A4
	0x01D332A0 BL 0x1C16DFC
	0x01D332A4 BL 0x1D332B4
	0x01D332A8 LDP X20, X19, [X31 + 0x10]
	0x01D332AC LDR X30, [X31], #0x20
	0x01D332B0 B 0x1D33470
	0x01D332B4 STR X30, [X31 - 0x30]!
	0x01D332B8 STP X22, X21, [X31 + 0x10]
	0x01D332BC STP X20, X19, [X31 + 0x20]
	0x01D332C0 ADRP X19, 0x26A5000
	0x01D332C4 ADRP X20, 0x23C0000
	0x01D332C8 LDRB W8, [X19 + 0x6D0]
	0x01D332CC LDR X20, [X20 + 0x648]
	0x01D332D0 TBNZ X8, 0x0, 0x1D33318
	0x01D332D4 ADRP X0, 0x23C0000
	0x01D332D8 LDR X0, [X0 + 0x648]
	0x01D332DC BL 0x1C16CF4
	0x01D332E0 ADRP X0, 0x23C0000

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x26A6000
	010 Move W8, [X21+1726]
	011 Move W20, W1
	012 Move X19, X0
	013 Move V8, V3
	014 Move V9, V2
	015 Move V10, V1
	016 Move V11, V0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x23C1000
	022 Move X0, [X0+1584]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+1726], W8
	026 Add W31, W20, 1
	027 Compare X19, 0
	028 JumpIfEqual {73}
	029 Move W20, [X19+24]
	030 Move X8, 0x23C1000
	031 Move X8, [X8+1584]
	032 Move X0, [X8]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move W21, W20
	038 ShiftRight W21, 29
	039 And W21, W21, 0xFFFFFFF
	040 Move V0, V11
	041 Move V1, V10
	042 Move V2, V9
	043 Move V3, V8
	044 Move W0, W21
	045 Call QuatCompress.CompressToULong, X0, X1
	046 Subtract W8, W20, 1
	047 Compare X19, 0
	048 JumpIfEqual {73}
	049 Move W9, [X19+24]
	050 Subtract W10, W21, 8
	051 NotImplemented "Instruction CMP not yet implemented."
	052 And W11, W10, 56
	053 Add X12, X19, W8
	054 Subtract W8, W8, 1
	055 NotImplemented "Instruction LSRV not yet implemented."
	056 Subtract W10, W10, 8
	057 Move [X12+32], W11
	058 Move TEMP, X8
	059 And TEMP, TEMP, -2147483648
	060 Compare TEMP, -2147483648
	061 JumpIfNotEqual {51}
	062 Move X0, X19
	063 Move X20, [X31+48]
	064 Move X19, [X31+56]
	065 Move X30, [X31+32]
	066 Move X21, [X31+40]
	067 Move D9, [X31+16]
	068 Move D8, [X31+24]
	069 Move D11, [X31+64]
	070 Move D10, [X31+72]
	071 Return X0
	072 Call 0x1C17F28
	073 Call 0x1C17F20

Method: UnityEngine.Quaternion Decompress(System.UInt64 buffer, emotitron.Compression.PrimitivePresets preset)

Disassembly:
	0x01D332E4 LDR X0, [X0 + 0x6E8]
	0x01D332E8 BL 0x1C16CF4
	0x01D332EC ADRP X0, 0x23C0000
	0x01D332F0 LDR X0, [X0 + 0x6F0]
	0x01D332F4 BL 0x1C16CF4
	0x01D332F8 ADRP X0, 0x23C0000
	0x01D332FC LDR X0, [X0 + 0x6F8]
	0x01D33300 BL 0x1C16CF4
	0x01D33304 ADRP X0, 0x23C0000
	0x01D33308 LDR X0, [X0 + 0x700]
	0x01D3330C BL 0x1C16CF4
	0x01D33310 MOVZ W8, 0x1
	0x01D33314 STRB W8, [X19 + 0x6D0]
	0x01D33318 LDR X0, [X20]
	0x01D3331C STR X31, [X31 + 0x8]
	0x01D33320 LDR W8, [X0 + 0xE0]
	0x01D33324 CBNZ W8, 0x1D33330
	0x01D33328 BL 0x1C16DFC
	0x01D3332C LDR X0, [X20]
	0x01D33330 LDR X8, [X0 + 0xB8]
	0x01D33334 LDR X0, [X8 + 0x40]
	0x01D33338 CBZ X0, 0x1D3346C
	0x01D3333C ADRP X8, 0x23C0000
	0x01D33340 LDR X8, [X8 + 0x6F0]
	0x01D33344 LDR X1, [X8]
	0x01D33348 BL 0x299207C
	0x01D3334C CMP W0, 0x1
	0x01D33350 B.LT 0x1D3345C
	0x01D33354 LDR X0, [X20]
	0x01D33358 LDR W8, [X0 + 0xE0]
	0x01D3335C CBNZ W8, 0x1D33368
	0x01D33360 BL 0x1C16DFC
	0x01D33364 LDR X0, [X20]
	0x01D33368 LDR X8, [X0 + 0xB8]
	0x01D3336C LDR X8, [X8 + 0x48]
	0x01D33370 CBZ X8, 0x1D3346C
	0x01D33374 LDP W2, W9, [X8 + 0x18]
	0x01D33378 ADD W9, W9, 0x1
	0x01D3337C CMP W2, 0x1
	0x01D33380 STP W31, W9, [X8 + 0x18]
	0x01D33384 B.LT 0x1D33398
	0x01D33388 LDR X0, [X8 + 0x10]
	0x01D3338C MOV W1, W31

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+80], X30
	003 Move [X31+96], X22
	004 Move [X31+104], X21
	005 Move [X31+112], X20
	006 Move [X31+120], X19
	007 Move X22, 0x26A6000
	008 Move X21, 0x23C1000
	009 Move W8, [X22+1727]
	010 Move X21, [X21+1584]
	011 Move W20, W1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x23C1000
	018 Move X0, [X0+1584]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+1727], W8
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X21]
	028 Move X8, [X0+184]
	029 Move X8, [X8+16]
	030 Compare X8, 0
	031 JumpIfEqual {50}
	032 Move W9, [X8+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W9, 72
	035 NotImplemented "Instruction SMADDL not yet implemented."
	036 Add X1, X8, 32
	037 Add X0, X31, 8
	038 Move W2, 72
	039 Call 0x3EB2AC0
	040 Add X1, X31, 8
	041 Move X0, X19
	042 Call QuatCompress.Decompress, X0, X1
	043 Move X20, [X31+112]
	044 Move X19, [X31+120]
	045 Move X22, [X31+96]
	046 Move X21, [X31+104]
	047 Move X30, [X31+80]
	048 Add X31, X31, 128
	049 Return X0
	050 Call 0x1C17F20
	051 Call 0x1C17F28

Method: UnityEngine.Quaternion Decompress(System.UInt64 buffer, System.Int32 bits)

Disassembly:
	0x01D334F0 LDR W9, [X8 + 0xE0]
	0x01D334F4 CBNZ W9, 0x1D33504
	0x01D334F8 MOV X0, X8
	0x01D334FC BL 0x1C16DFC
	0x01D33500 LDR X8, [X21]
	0x01D33504 LDR X8, [X8 + 0xB8]
	0x01D33508 LDR X19, [X8 + 0x50]
	0x01D3350C TBZ X20, 0x0, 0x1D33528
	0x01D33510 CBZ X19, 0x1D33550
	0x01D33514 LDR X1, [X31 + 0x8]
	0x01D33518 MOV X0, X19
	0x01D3351C MOV X2, X31
	0x01D33520 BL 0x35C0908
	0x01D33524 B 0x1D334BC
	0x01D33528 MOV X0, X31
	0x01D3352C BL 0x3C3C714
	0x01D33530 CBZ X19, 0x1D33550
	0x01D33534 MOV X0, X19
	0x01D33538 MOV X1, X31
	0x01D3353C BL 0x35C09A0
	0x01D33540 LDP X20, X19, [X31 + 0x20]
	0x01D33544 LDP X22, X21, [X31 + 0x10]
	0x01D33548 LDR X30, [X31], #0x30
	0x01D3354C RET
	0x01D33550 BL 0x1C16F20
	0x01D33554 STP X30, X21, [X31 - 0x20]!
	0x01D33558 STP X20, X19, [X31 + 0x10]
	0x01D3355C ADRP X20, 0x26A5000
	0x01D33560 ADRP X21, 0x23C0000
	0x01D33564 LDRB W8, [X20 + 0x6D4]
	0x01D33568 LDR X21, [X21 + 0x648]
	0x01D3356C MOV X19, X0
	0x01D33570 TBNZ X8, 0x0, 0x1D33588
	0x01D33574 ADRP X0, 0x23C0000
	0x01D33578 LDR X0, [X0 + 0x648]
	0x01D3357C BL 0x1C16CF4
	0x01D33580 MOVZ W8, 0x1
	0x01D33584 STRB W8, [X20 + 0x6D4]
	0x01D33588 LDR X0, [X21]
	0x01D3358C LDR W8, [X0 + 0xE0]
	0x01D33590 CBNZ W8, 0x1D33598
	0x01D33594 BL 0x1C16DFC
	0x01D33598 MOV X1, X19

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+80], X30
	003 Move [X31+96], X22
	004 Move [X31+104], X21
	005 Move [X31+112], X20
	006 Move [X31+120], X19
	007 Move X22, 0x26A6000
	008 Move X21, 0x23C1000
	009 Move W8, [X22+1728]
	010 Move X21, [X21+1584]
	011 Move W20, W1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x23C1000
	018 Move X0, [X0+1584]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+1728], W8
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X21]
	028 Move X8, [X0+184]
	029 Move X8, [X8+16]
	030 Compare X8, 0
	031 JumpIfEqual {50}
	032 Move W9, [X8+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W9, 72
	035 NotImplemented "Instruction SMADDL not yet implemented."
	036 Add X1, X8, 32
	037 Add X0, X31, 8
	038 Move W2, 72
	039 Call 0x3EB2AC0
	040 Add X1, X31, 8
	041 Move X0, X19
	042 Call QuatCompress.Decompress, X0, X1
	043 Move X20, [X31+112]
	044 Move X19, [X31+120]
	045 Move X22, [X31+96]
	046 Move X21, [X31+104]
	047 Move X30, [X31+80]
	048 Add X31, X31, 128
	049 Return X0
	050 Call 0x1C17F20
	051 Call 0x1C17F28

Method: UnityEngine.Quaternion Decompress(System.UInt64 buffer, emotitron.Compression.QuatCompress/Cache cache)

Disassembly:
	0x01D33390 MOV X3, X31
	0x01D33394 BL 0x339FA34
	0x01D33398 ADRP X21, 0x23C0000
	0x01D3339C ADRP X22, 0x23C0000
	0x01D333A0 LDR X21, [X21 + 0x6E8]
	0x01D333A4 LDR X22, [X22 + 0x6F8]
	0x01D333A8 LDR X0, [X20]
	0x01D333AC LDR W8, [X0 + 0xE0]
	0x01D333B0 CBNZ W8, 0x1D333BC
	0x01D333B4 BL 0x1C16DFC
	0x01D333B8 LDR X0, [X20]
	0x01D333BC LDR X8, [X0 + 0xB8]
	0x01D333C0 LDR X0, [X8 + 0x40]
	0x01D333C4 CBZ X0, 0x1D3346C
	0x01D333C8 LDR X2, [X21]
	0x01D333CC ADD X1, X31, 0x8
	0x01D333D0 BL 0x2992E94
	0x01D333D4 LDR X8, [X20]
	0x01D333D8 MOV W19, W0
	0x01D333DC LDR W9, [X8 + 0xE0]
	0x01D333E0 CBNZ W9, 0x1D333F0
	0x01D333E4 MOV X0, X8
	0x01D333E8 BL 0x1C16DFC
	0x01D333EC LDR X8, [X20]
	0x01D333F0 LDR X8, [X8 + 0xB8]
	0x01D333F4 TBZ X19, 0x0, 0x1D33454
	0x01D333F8 LDR X0, [X8 + 0x48]
	0x01D333FC CBZ X0, 0x1D3346C
	0x01D33400 LDR W10, [X0 + 0x1C]
	0x01D33404 LDR X1, [X31 + 0x8]
	0x01D33408 LDR X8, [X0 + 0x10]
	0x01D3340C LDR X9, [X22]
	0x01D33410 ADD W10, W10, 0x1
	0x01D33414 STR W10, [X0 + 0x1C]
	0x01D33418 CBZ X8, 0x1D3346C
	0x01D3341C LDRSW X10, [X0 + 0x18]
	0x01D33420 LDR W11, [X8 + 0x18]
	0x01D33424 CMP W10, W11
	0x01D33428 B.CS 0x1D33440
	0x01D3342C ADD W9, W10, 0x1
	0x01D33430 ADD X8, X8, X10, 0x3, LSL
	0x01D33434 STR W9, [X0 + 0x18]
	0x01D33438 STR X1, [X8 + 0x20]
	0x01D3343C B 0x1D333A8
	0x01D33440 LDR X8, [X9 + 0x20]
	0x01D33444 LDR X8, [X8 + 0xC0]
	0x01D33448 LDR X2, [X8 + 0x70]
	0x01D3344C BL 0x301BF90
	0x01D33450 B 0x1D333A8
	0x01D33454 LDR X0, [X8 + 0x48]
	0x01D33458 BL 0x1D33554
	0x01D3345C LDP X20, X19, [X31 + 0x20]
	0x01D33460 LDP X22, X21, [X31 + 0x10]
	0x01D33464 LDR X30, [X31], #0x30
	0x01D33468 RET
	0x01D3346C BL 0x1C16F20
	0x01D33470 STR X30, [X31 - 0x30]!
	0x01D33474 STP X22, X21, [X31 + 0x10]
	0x01D33478 STP X20, X19, [X31 + 0x20]
	0x01D3347C ADRP X19, 0x26A5000
	0x01D33480 LDRB W8, [X19 + 0x6D1]
	0x01D33484 TBNZ X8, 0x0, 0x1D334A8
	0x01D33488 ADRP X0, 0x23C0000
	0x01D3348C LDR X0, [X0 + 0x648]
	0x01D33490 BL 0x1C16CF4
	0x01D33494 ADRP X0, 0x23C0000
	0x01D33498 LDR X0, [X0 + 0x708]
	0x01D3349C BL 0x1C16CF4
	0x01D334A0 MOVZ W8, 0x1
	0x01D334A4 STRB W8, [X19 + 0x6D1]
	0x01D334A8 ADRP X21, 0x23C0000
	0x01D334AC ADRP X22, 0x23C0000
	0x01D334B0 LDR X21, [X21 + 0x648]
	0x01D334B4 LDR X22, [X22 + 0x708]
	0x01D334B8 STR X31, [X31 + 0x8]
	0x01D334BC LDR X0, [X21]
	0x01D334C0 LDR W8, [X0 + 0xE0]
	0x01D334C4 CBNZ W8, 0x1D334D0
	0x01D334C8 BL 0x1C16DFC
	0x01D334CC LDR X0, [X21]
	0x01D334D0 LDR X8, [X0 + 0xB8]
	0x01D334D4 LDR X0, [X8 + 0x58]
	0x01D334D8 CBZ X0, 0x1D33550
	0x01D334DC LDR X2, [X22]
	0x01D334E0 ADD X1, X31, 0x8
	0x01D334E4 BL 0x2992E94
	0x01D334E8 LDR X8, [X21]
	0x01D334EC MOV W20, W0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x26A6000
	009 Move X21, 0x23C1000
	010 Move W8, [X22+1729]
	011 Move X21, [X21+1448]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x23C1000
	019 Move X0, [X0+1448]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1729], W8
	023 NotImplemented "Instruction LDUR not yet implemented."
	024 NotImplemented "Instruction MOVI not yet implemented."
	025 Move W8, [X20+36]
	026 Move V0, [X20+40]
	027 And V1, V1, V5
	028 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	029 Move W12, [X20+24]
	030 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	031 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 Move X0, [X21]
	034 NotImplemented "Instruction INVALID not yet implemented."
	035 Move W9, [X20]
	036 Move W10, [X20+4]
	037 And W8, W8, W19
	038 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	039 Move W11, [X20+8]
	040 Move X8, W8
	041 And V0, V0, V1
	042 Move V2, [X20+48]
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 Subtract X8, X8, X12
	045 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	046 NotImplemented "Instruction SCVTF not yet implemented."
	047 Move W8, [X0+224]
	048 NotImplemented "Instruction USUBW not yet implemented."
	049 Add W9, W10, W9
	050 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	051 Add W9, W9, W11
	052 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	053 NotImplemented "Instruction LSRV not yet implemented."
	054 Multiply S8, S2, S5
	055 NotImplemented "Instruction INVALID not yet implemented."
	056 Compare W8, 0
	057 JumpIfNotEqual {61}
	058 Move [X31], V2
	059 Call 0x1C17DFC
	060 Move V2, [X31]
	061 NotImplemented "Instruction FCVT not yet implemented."
	062 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	063 Multiply D0, D0, D0
	064 NotImplemented "Instruction INVALID not yet implemented."
	065 Add D0, D0, D1
	066 Move D1, V1.D[1]
	067 Move D3, 1
	068 Add D0, D0, D1
	069 Subtract D0, D3, D0
	070 NotImplemented "Instruction FSQRT not yet implemented."
	071 NotImplemented "Instruction INVALID not yet implemented."
	072 Move S1, V2.S[1]
	073 Compare W19, 0
	074 JumpIfEqual {79}
	075 Move V0, V8
	076 NotImplemented "Instruction CMP not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move V8, V3
	079 Move V0, V3
	080 Move V8, V2
	081 Move V2, V3
	082 Move V3, V1
	083 Move V8, V2
	084 Move V2, V1
	085 Move V1, V8
	086 Move X20, [X31+48]
	087 Move X19, [X31+56]
	088 Move X22, [X31+32]
	089 Move X21, [X31+40]
	090 Move X30, [X31+24]
	091 Move V8, [X31+16]
	092 Add X31, X31, 64
	093 Return X0

Method: UnityEngine.Quaternion DecompressToQuat(System.Byte[] arr, System.Int32 bytecount = 5, System.Int32 startIndex = 0)

Disassembly:
	0x01D3359C LDP X20, X19, [X31 + 0x10]
	0x01D335A0 MOVZ W0, 0x1
	0x01D335A4 MOVZ W2, 0x1
	0x01D335A8 LDP X30, X21, [X31], #0x20
	0x01D335AC B 0x1D3360C
	0x01D335B0 STP X30, X21, [X31 - 0x20]!
	0x01D335B4 STP X20, X19, [X31 + 0x10]
	0x01D335B8 ADRP X20, 0x26A5000
	0x01D335BC ADRP X21, 0x23C0000
	0x01D335C0 LDRB W8, [X20 + 0x6D2]
	0x01D335C4 LDR X21, [X21 + 0x648]
	0x01D335C8 MOV X19, X0
	0x01D335CC TBNZ X8, 0x0, 0x1D335E4
	0x01D335D0 ADRP X0, 0x23C0000
	0x01D335D4 LDR X0, [X0 + 0x648]
	0x01D335D8 BL 0x1C16CF4
	0x01D335DC MOVZ W8, 0x1
	0x01D335E0 STRB W8, [X20 + 0x6D2]
	0x01D335E4 LDR X0, [X21]
	0x01D335E8 LDR W8, [X0 + 0xE0]
	0x01D335EC CBNZ W8, 0x1D335F4
	0x01D335F0 BL 0x1C16DFC
	0x01D335F4 MOV X1, X19
	0x01D335F8 LDP X20, X19, [X31 + 0x10]
	0x01D335FC MOVZ W0, 0x1
	0x01D33600 MOVZ W2, 0x1
	0x01D33604 LDP X30, X21, [X31], #0x20
	0x01D33608 B 0x1D3360C
	0x01D3360C SUB X31, X31, 0xC0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x26A6000
	008 Move X23, 0x23C1000
	009 Move W8, [X22+1730]
	010 Move X23, [X23+1584]
	011 Move W20, W2
	012 Move W19, W1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x23C1000
	019 Move X0, [X0+1584]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1730], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X21
	029 Move W1, W19
	030 Move W2, W20
	031 Call QuatCompress.ConvertByteArrayToULongBuffer, X0, X1, X2
	032 Move W1, W19
	033 ShiftRight W1, 29
	034 And W1, W1, 0xFFFFFFF
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Move X23, [X31+56]
	041 Call QuatCompress.DecompressToQuat, X0, X1
	042 Return X0

Method: UnityEngine.Quaternion DecompressToQuat(System.UInt64 buffer, System.Int32 totalBits = 64)

Disassembly:
	0x01D3369C BL 0x1C16CF4
	0x01D336A0 ADRP X0, 0x23C0000
	0x01D336A4 LDR X0, [X0 + 0x748]
	0x01D336A8 BL 0x1C16CF4
	0x01D336AC ADRP X0, 0x23C0000
	0x01D336B0 LDR X0, [X0 + 0x6A8]
	0x01D336B4 BL 0x1C16CF4
	0x01D336B8 ADRP X0, 0x23C0000
	0x01D336BC LDR X0, [X0 + 0x750]
	0x01D336C0 BL 0x1C16CF4
	0x01D336C4 ADRP X0, 0x23C0000
	0x01D336C8 LDR X0, [X0 + 0x758]
	0x01D336CC BL 0x1C16CF4
	0x01D336D0 ADRP X0, 0x23C0000
	0x01D336D4 LDR X0, [X0 + 0x760]
	0x01D336D8 BL 0x1C16CF4
	0x01D336DC ADRP X0, 0x23C0000
	0x01D336E0 LDR X0, [X0 + 0x768]
	0x01D336E4 BL 0x1C16CF4
	0x01D336E8 ADRP X0, 0x23C0000
	0x01D336EC LDR X0, [X0 + 0x770]
	0x01D336F0 BL 0x1C16CF4
	0x01D336F4 ADRP X0, 0x23C0000
	0x01D336F8 LDR X0, [X0 + 0x778]
	0x01D336FC BL 0x1C16CF4
	0x01D33700 ADRP X0, 0x23C0000
	0x01D33704 LDR X0, [X0 + 0x780]
	0x01D33708 BL 0x1C16CF4
	0x01D3370C ADRP X0, 0x23C0000
	0x01D33710 LDR X0, [X0 + 0x788]
	0x01D33714 BL 0x1C16CF4
	0x01D33718 ADRP X0, 0x23C0000
	0x01D3371C LDR X0, [X0 + 0x790]
	0x01D33720 BL 0x1C16CF4
	0x01D33724 ADRP X0, 0x23C0000
	0x01D33728 LDR X0, [X0 + 0x798]
	0x01D3372C BL 0x1C16CF4
	0x01D33730 ADRP X0, 0x23C0000
	0x01D33734 LDR X0, [X0 + 0x7A0]
	0x01D33738 BL 0x1C16CF4
	0x01D3373C ADRP X0, 0x23C0000
	0x01D33740 LDR X0, [X0 + 0x7A8]
	0x01D33744 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+80], X30
	003 Move [X31+96], X22
	004 Move [X31+104], X21
	005 Move [X31+112], X20
	006 Move [X31+120], X19
	007 Move X22, 0x26A6000
	008 Move X21, 0x23C1000
	009 Move W8, [X22+1731]
	010 Move X21, [X21+1584]
	011 Move W20, W1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x23C1000
	018 Move X0, [X0+1584]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+1731], W8
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X21]
	028 Move X8, [X0+184]
	029 Move X8, [X8+16]
	030 Compare X8, 0
	031 JumpIfEqual {50}
	032 Move W9, [X8+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W9, 72
	035 NotImplemented "Instruction SMADDL not yet implemented."
	036 Add X1, X8, 32
	037 Add X0, X31, 8
	038 Move W2, 72
	039 Call 0x3EB2AC0
	040 Add X1, X31, 8
	041 Move X0, X19
	042 Call QuatCompress.Decompress, X0, X1
	043 Move X20, [X31+112]
	044 Move X19, [X31+120]
	045 Move X22, [X31+96]
	046 Move X21, [X31+104]
	047 Move X30, [X31+80]
	048 Add X31, X31, 128
	049 Return X0
	050 Call 0x1C17F20
	051 Call 0x1C17F28

Method: UnityEngine.Quaternion DecompressToQuat(System.UInt32 buffer, System.Int32 bits = 32)

Disassembly:
	0x01D33748 ADRP X0, 0x23C0000
	0x01D3374C LDR X0, [X0 + 0x7B0]
	0x01D33750 BL 0x1C16CF4
	0x01D33754 ADRP X0, 0x23C0000
	0x01D33758 LDR X0, [X0 + 0x7B8]
	0x01D3375C BL 0x1C16CF4
	0x01D33760 ADRP X0, 0x23C0000
	0x01D33764 LDR X0, [X0 + 0x7C0]
	0x01D33768 BL 0x1C16CF4
	0x01D3376C ADRP X0, 0x23C0000
	0x01D33770 LDR X0, [X0 + 0x7C8]
	0x01D33774 BL 0x1C16CF4
	0x01D33778 MOVZ W8, 0x1
	0x01D3377C STRB W8, [X19 + 0x6D8]
	0x01D33780 STP X31, X31, [X31 + 0x40]
	0x01D33784 STR X31, [X31 + 0x50]
	0x01D33788 CBZ X22, 0x1D34878
	0x01D3378C ADRP X19, 0x23C0000
	0x01D33790 LDR X8, [X22]
	0x01D33794 LDR X19, [X19 + 0x740]
	0x01D33798 LDRH W9, [X8 + 0x12E]
	0x01D3379C LDR X1, [X19]
	0x01D337A0 CBZ X9, 0x1D337C4
	0x01D337A4 LDR X10, [X8 + 0xB0]
	0x01D337A8 ADD X10, X10, 0x8
	0x01D337AC LDUR X11, [X10 - 0x8]
	0x01D337B0 CMP X11, X1
	0x01D337B4 B.EQ 0x1D337D4
	0x01D337B8 SUBS X9, X9, 0x1
	0x01D337BC ADD X10, X10, 0x10
	0x01D337C0 B.NE 0x1D337AC
	0x01D337C4 MOV X0, X22
	0x01D337C8 MOV W2, W31
	0x01D337CC BL 0x1C5C788
	0x01D337D0 B 0x1D337E0
	0x01D337D4 LDRSW X9, [X10]
	0x01D337D8 ADD X8, X8, X9, 0x4, LSL
	0x01D337DC ADD X0, X8, 0x138
	0x01D337E0 LDP X8, X1, [X0]
	0x01D337E4 MOV X0, X22
	0x01D337E8 BLR X8
	0x01D337EC CBZ W0, 0x1D34878
	0x01D337F0 MOV X0, X31

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+80], X30
	003 Move [X31+96], X22
	004 Move [X31+104], X21
	005 Move [X31+112], X20
	006 Move [X31+120], X19
	007 Move X22, 0x26A6000
	008 Move X21, 0x23C1000
	009 Move W8, [X22+1732]
	010 Move X21, [X21+1584]
	011 Move W20, W1
	012 Move W19, W0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x23C1000
	018 Move X0, [X0+1584]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+1732], W8
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X21]
	028 Move X8, [X0+184]
	029 Move X8, [X8+16]
	030 Compare X8, 0
	031 JumpIfEqual {50}
	032 Move W9, [X8+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W9, 72
	035 NotImplemented "Instruction SMADDL not yet implemented."
	036 Add X1, X8, 32
	037 Add X0, X31, 8
	038 Move W2, 72
	039 Call 0x3EB2AC0
	040 Move W0, W19
	041 Add X1, X31, 8
	042 Call QuatCompress.Decompress, X0, X1
	043 Move X20, [X31+112]
	044 Move X19, [X31+120]
	045 Move X22, [X31+96]
	046 Move X21, [X31+104]
	047 Move X30, [X31+80]
	048 Add X31, X31, 128
	049 Return X0
	050 Call 0x1C17F20
	051 Call 0x1C17F28

Method: UnityEngine.Quaternion DecompressToQuat(System.Int16 buffer, System.Int32 bits = 16)

Disassembly:
	0x01D337F4 BL 0x33E3C68
	0x01D337F8 ADRP X20, 0x23C0000
	0x01D337FC LDR X20, [X20 + 0x648]
	0x01D33800 MOV X23, X0
	0x01D33804 LDR X8, [X20]
	0x01D33808 LDR W9, [X8 + 0xE0]
	0x01D3380C CBNZ W9, 0x1D3381C
	0x01D33810 MOV X0, X8
	0x01D33814 BL 0x1C16DFC
	0x01D33818 LDR X8, [X20]
	0x01D3381C LDR X9, [X8 + 0xB8]
	0x01D33820 LDR X10, [X9 + 0x60]
	0x01D33824 CMP X23, X10
	0x01D33828 B.NE 0x1D348B4
	0x01D3382C LDR W10, [X8 + 0xE0]
	0x01D33830 CBNZ W10, 0x1D3384C
	0x01D33834 MOV X0, X8
	0x01D33838 BL 0x1C16DFC
	0x01D3383C ADRP X8, 0x23C0000
	0x01D33840 LDR X8, [X8 + 0x648]
	0x01D33844 LDR X8, [X8]
	0x01D33848 LDR X9, [X8 + 0xB8]
	0x01D3384C LDRB W10, [X9 + 0x18]
	0x01D33850 CBNZ W10, 0x1D349B4
	0x01D33854 LDR W10, [X8 + 0xE0]
	0x01D33858 CBNZ W10, 0x1D33874
	0x01D3385C MOV X0, X8
	0x01D33860 BL 0x1C16DFC
	0x01D33864 ADRP X8, 0x23C0000
	0x01D33868 LDR X8, [X8 + 0x648]
	0x01D3386C LDR X8, [X8]
	0x01D33870 LDR X9, [X8 + 0xB8]
	0x01D33874 LDRB W9, [X9 + 0x1A]
	0x01D33878 CBNZ W9, 0x1D34ADC
	0x01D3387C STR X31, [X31 + 0x30]
	0x01D33880 TBZ X21, 0x0, 0x1D338EC
	0x01D33884 ADRP X20, 0x23C0000
	0x01D33888 LDR X20, [X20 + 0x788]
	0x01D3388C LDR X0, [X20]
	0x01D33890 LDR W8, [X0 + 0xE0]
	0x01D33894 CBNZ W8, 0x1D3389C
	0x01D33898 BL 0x1C16DFC
	0x01D3389C MOVZ W0, 0x3

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+80], X30
	003 Move [X31+96], X22
	004 Move [X31+104], X21
	005 Move [X31+112], X20
	006 Move [X31+120], X19
	007 Move X22, 0x26A6000
	008 Move X21, 0x23C1000
	009 Move W8, [X22+1733]
	010 Move X21, [X21+1584]
	011 Move W20, W1
	012 Move W19, W0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x23C1000
	018 Move X0, [X0+1584]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+1733], W8
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X21]
	028 Move X8, [X0+184]
	029 Move X8, [X8+16]
	030 Compare X8, 0
	031 JumpIfEqual {50}
	032 Move W9, [X8+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W9, 72
	035 NotImplemented "Instruction SMADDL not yet implemented."
	036 Add X1, X8, 32
	037 Add X0, X31, 8
	038 Move W2, 72
	039 Call 0x3EB2AC0
	040 NotImplemented "Instruction SXTH not yet implemented."
	041 Add X1, X31, 8
	042 Call QuatCompress.Decompress, X0, X1
	043 Move X20, [X31+112]
	044 Move X19, [X31+120]
	045 Move X22, [X31+96]
	046 Move X21, [X31+104]
	047 Move X30, [X31+80]
	048 Add X31, X31, 128
	049 Return X0
	050 Call 0x1C17F20
	051 Call 0x1C17F28

Method: System.UInt64 ConvertByteArrayToULongBuffer(System.Byte[] arr, System.Int32 bytecount = -1, System.Int32 startIndex = 0)

Disassembly:
	0x01D33610 STP X29, X30, [X31 + 0x60]
	0x01D33614 STP X28, X27, [X31 + 0x70]
	0x01D33618 STP X26, X25, [X31 + 0x80]
	0x01D3361C STP X24, X23, [X31 + 0x90]
	0x01D33620 STP X22, X21, [X31 + 0xA0]
	0x01D33624 STP X20, X19, [X31 + 0xB0]
	0x01D33628 ADRP X19, 0x26A5000
	0x01D3362C LDRB W8, [X19 + 0x6D8]
	0x01D33630 MOV W27, W2
	0x01D33634 MOV X22, X1
	0x01D33638 MOV W21, W0
	0x01D3363C TBNZ X8, 0x0, 0x1D33780
	0x01D33640 ADRP X0, 0x23C0000
	0x01D33644 LDR X0, [X0 + 0x648]
	0x01D33648 BL 0x1C16CF4
	0x01D3364C ADRP X0, 0x23C0000
	0x01D33650 LDR X0, [X0 + 0x710]
	0x01D33654 BL 0x1C16CF4
	0x01D33658 ADRP X0, 0x23C0000
	0x01D3365C LDR X0, [X0 + 0x718]
	0x01D33660 BL 0x1C16CF4
	0x01D33664 ADRP X0, 0x23C0000
	0x01D33668 LDR X0, [X0 + 0x720]
	0x01D3366C BL 0x1C16CF4
	0x01D33670 ADRP X0, 0x23C0000
	0x01D33674 LDR X0, [X0 + 0x728]
	0x01D33678 BL 0x1C16CF4
	0x01D3367C ADRP X0, 0x23C0000
	0x01D33680 LDR X0, [X0 + 0x730]
	0x01D33684 BL 0x1C16CF4
	0x01D33688 ADRP X0, 0x23C0000
	0x01D3368C LDR X0, [X0 + 0x738]
	0x01D33690 BL 0x1C16CF4
	0x01D33694 ADRP X0, 0x23C0000
	0x01D33698 LDR X0, [X0 + 0x740]

ISIL:
	001 Move [X31-16], X30
	002 Add W31, W1, 1
	003 Compare X0, 0
	004 JumpIfEqual {36}
	005 Move W1, [X0+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Compare X0, 0
	008 JumpIfEqual {36}
	009 Move W11, [X0+24]
	010 Move W10, W2
	011 Move W13, W1
	012 Move X9, X31
	013 Move X8, X31
	014 Move X12, X10
	015 ShiftRight X12, 32
	016 And X12, X12, 0x7FFFFFFF
	017 Move X13, X13
	018 ShiftRight X13, 61
	019 And X13, X13, 0xFFFFFFF
	020 Move X14, 1
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Add X15, X0, X12
	023 Move W15, [X15+32]
	024 And X16, X9, 63
	025 Add X9, X9, 8
	026 Add X12, X12, X14
	027 NotImplemented "Instruction LSLV not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Or X8, X15, X8
	030 Add X10, X10, 1
	031 Move X8, X31
	032 Move X0, X8
	033 Move X30, [X31+16]
	034 Return X0
	035 Call 0x1C17F28
	036 Call 0x1C17F20

Method: emotitron.Compression.QuatCompress/Cache DivideBitsAmongChannels(System.Int32 totalbits)

Disassembly:
	0x01D32BB8 BL 0x1C16DFC
	0x01D32BBC ADRP X20, 0x26A6000
	0x01D32BC0 LDRB W8, [X20 + 0x789]
	0x01D32BC4 CBNZ W8, 0x1D32BDC
	0x01D32BC8 ADRP X0, 0x23C1000
	0x01D32BCC LDR X0, [X0 + 0x658]
	0x01D32BD0 BL 0x1C16CF4
	0x01D32BD4 MOVZ W8, 0x1
	0x01D32BD8 STRB W8, [X20 + 0x789]
	0x01D32BDC LDR X0, [X19]
	0x01D32BE0 LDR W8, [X0 + 0xE0]
	0x01D32BE4 CBNZ W8, 0x1D32BF0
	0x01D32BE8 BL 0x1C16DFC
	0x01D32BEC LDR X0, [X19]
	0x01D32BF0 LDR X8, [X0 + 0xB8]
	0x01D32BF4 LDP X20, X19, [X31 + 0x10]
	0x01D32BF8 LDR X0, [X8 + 0x20]
	0x01D32BFC LDR X30, [X31], #0x20
	0x01D32C00 RET

ISIL:
	001 Move W10, 0x5556
	002 Subtract W9, W0, 2
	003 NotImplemented "Instruction MOVK not yet implemented."
	004 NotImplemented "Instruction SMADDL not yet implemented."
	005 Move X11, X10
	006 ShiftRight X11, 63
	007 And X11, X11, 0x7FFFFFFF
	008 Move X10, X10
	009 ShiftRight X10, 32
	010 And X10, X10, 0x7FFFFFFF
	011 Add W3, W10, W11
	012 Subtract W10, W3, W3
	013 Add W9, W10, W9
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction CINC not yet implemented."
	016 NotImplemented "Instruction CMP not yet implemented."
	017 NotImplemented "Instruction MOVI not yet implemented."
	018 NotImplemented "Instruction CINC not yet implemented."
	019 Move X0, X8
	020 Move [X8+64], X31
	021 Move [X8+32], V0
	022 Move [X8+40], V0
	023 Move [X8], V0
	024 Move [X8+8], V0
	025 Call Cache..ctor, X0, X1, X2, X3
	026 Return X0

