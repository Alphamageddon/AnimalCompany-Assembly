Type: DynamicBoneControl

Method: System.Void OnEnable()

Disassembly:
	0x01C8924C LDR W9, [X8 + 0xE0]
	0x01C89250 CBNZ W9, 0x1C8925C
	0x01C89254 MOV X0, X8
	0x01C89258 BL 0x1B6E8F8
	0x01C8925C MOV X0, X23
	0x01C89260 MOV X1, X31
	0x01C89264 MOV X2, X31
	0x01C89268 BL 0x3A9D6EC
	0x01C8926C TBZ X0, 0x0, 0x1C893A4
	0x01C89270 MOV X0, X25
	0x01C89274 MOV X1, X31
	0x01C89278 BL 0x3AF6430
	0x01C8927C MOV X23, X0
	0x01C89280 MOV X0, X19
	0x01C89284 MOV X1, X31
	0x01C89288 BL 0x3A9B084
	0x01C8928C CBZ X0, 0x1C8942C
	0x01C89290 MOV X1, X31
	0x01C89294 BL 0x3AA7658
	0x01C89298 CBZ X23, 0x1C8942C
	0x01C8929C LDR V4, [X19 + 0x88]
	0x01C892A0 MOV V3.16B, V0.16B
	0x01C892A4 MOV V7.16B, V1.16B
	0x01C892A8 MOV V6.16B, V2.16B
	0x01C892AC MOVZ W8, 0x447A0000
	0x01C892B0 FMOV S5, 1
	0x01C892B4 FMOV S0, W8
	0x01C892B8 MOV X0, X23
	0x01C892BC MOV V1.16B, V3.16B
	0x01C892C0 MOV V2.16B, V7.16B
	0x01C892C4 MOV V3.16B, V6.16B
	0x01C892C8 MOV X1, X31
	0x01C892CC BL 0x3AF72F4
	0x01C892D0 B 0x1C893A4
	0x01C892D4 ADRP X8, 0x259A000
	0x01C892D8 LDRB W8, [X8 + 0x43F]
	0x01C892DC LDR V9, [X31 + 0x14]
	0x01C892E0 LDR V10, [X31 + 0xC]
	0x01C892E4 CBNZ W8, 0x1C892FC
	0x01C892E8 MOV X0, X21
	0x01C892EC BL 0x1B6E7F0
	0x01C892F0 MOVZ W8, 0x1
	0x01C892F4 ADRP X9, 0x259A000
	0x01C892F8 STRB W8, [X9 + 0x43F]
	0x01C892FC LDR X8, [X21]
	0x01C89300 LDR X8, [X8 + 0xB8]
	0x01C89304 LDP S8, S11, [X8]
	0x01C89308 LDR V12, [X8 + 0x8]
	0x01C8930C ADRP X9, 0x22C4000
	0x01C89310 LDR X8, [X23]
	0x01C89314 LDR V13, [X19 + 0x9C]
	0x01C89318 LDR X9, [X9 + 0x4B8]
	0x01C8931C ADRP X10, 0x22C4000
	0x01C89320 LDR X1, [X9]
	0x01C89324 LDRH W9, [X8 + 0x12E]
	0x01C89328 LDR X10, [X10 + 0x4C8]
	0x01C8932C LDR X25, [X10]
	0x01C89330 CBZ X9, 0x1C89354
	0x01C89334 LDR X10, [X8 + 0xB0]
	0x01C89338 ADD X10, X10, 0x8
	0x01C8933C LDUR X11, [X10 - 0x8]
	0x01C89340 CMP X11, X1
	0x01C89344 B.EQ 0x1C89364
	0x01C89348 SUBS X9, X9, 0x1
	0x01C8934C ADD X10, X10, 0x10
	0x01C89350 B.NE 0x1C8933C
	0x01C89354 MOV X0, X23
	0x01C89358 MOV W2, W31
	0x01C8935C BL 0x1BB4284
	0x01C89360 B 0x1C89370
	0x01C89364 LDRSW X9, [X10]
	0x01C89368 ADD X8, X8, X9, 0x4, LSL
	0x01C8936C ADD X0, X8, 0x138
	0x01C89370 LDP X8, X5, [X0]
	0x01C89374 LDR V1, [X31 + 0x10]
	0x01C89378 FMUL S3, S8, S13
	0x01C8937C FMUL S4, S11, S13
	0x01C89380 FMUL S5, S12, S13
	0x01C89384 MOV X0, X23
	0x01C89388 MOV W1, W24
	0x01C8938C MOV V0.16B, V9.16B
	0x01C89390 MOV V2.16B, V10.16B
	0x01C89394 MOV X2, X31
	0x01C89398 MOV X3, X31
	0x01C8939C MOV X4, X25
	0x01C893A0 BLR X8
	0x01C893A4 LDR W8, [X20 + 0x18]
	0x01C893A8 ADD W26, W26, 0x1
	0x01C893AC CMP W26, W8
	0x01C893B0 B.LT 0x1C890DC
	0x01C893B4 LDR X20, [X19 + 0x90]
	0x01C893B8 CBZ X20, 0x1C893E8
	0x01C893BC MOV X0, X19
	0x01C893C0 MOV X1, X31
	0x01C893C4 BL 0x3A9B084
	0x01C893C8 CBZ X0, 0x1C8942C
	0x01C893CC MOV X1, X31
	0x01C893D0 BL 0x3AA7658
	0x01C893D4 FMOV S3, 1
	0x01C893D8 MOVZ W1, 0x1
	0x01C893DC MOV X0, X20
	0x01C893E0 MOV X2, X31
	0x01C893E4 BL 0x1CC35DC
	0x01C893E8 LDR X0, [X19 + 0x38]
	0x01C893EC CBZ X0, 0x1C8942C
	0x01C893F0 LDR X1, [X19 + 0x40]
	0x01C893F4 MOV X2, X31
	0x01C893F8 BL 0x1D8C548
	0x01C893FC LDP X20, X19, [X31 + 0xB0]
	0x01C89400 LDP X22, X21, [X31 + 0xA0]
	0x01C89404 LDP X24, X23, [X31 + 0x90]
	0x01C89408 LDP X26, X25, [X31 + 0x80]
	0x01C8940C LDP X28, X27, [X31 + 0x70]
	0x01C89410 LDP X29, X30, [X31 + 0x60]
	0x01C89414 LDP D9, D8, [X31 + 0x50]
	0x01C89418 LDP D11, D10, [X31 + 0x40]
	0x01C8941C LDP D13, D12, [X31 + 0x30]
	0x01C89420 LDP D15, D14, [X31 + 0x20]
	0x01C89424 ADD X31, X31, 0xC0
	0x01C89428 RET
	0x01C8942C BL 0x1B6EA1C
	0x01C89430 BL 0x1B6EA24
	0x01C89434 STP X30, X19, [X31 - 0x10]!
	0x01C89438 MOV X19, X0
	0x01C8943C FMOV S0, 1
	0x01C89440 FMOV S1, W31
	0x01C89444 FMOV S2, W31
	0x01C89448 FMOV S3, 1
	0x01C8944C MOV X0, X31
	0x01C89450 BL 0x3A75B14
	0x01C89454 MOV X0, X19
	0x01C89458 MOV X1, X31
	0x01C8945C BL 0x3A9B084
	0x01C89460 CBZ X0, 0x1C8947C
	0x01C89464 MOV X1, X31
	0x01C89468 BL 0x3AA7658
	0x01C8946C LDR V3, [X19 + 0x88]
	0x01C89470 MOV X0, X31
	0x01C89474 LDP X30, X19, [X31], #0x10
	0x01C89478 B 0x3A7567C
	0x01C8947C BL 0x1B6EA1C
	0x01C89480 MOVZ W8, 0x20
	0x01C89484 MOVZ W9, 0x41C80000
	0x01C89488 MOV X1, X31
	0x01C8948C STRB W8, [X0 + 0x98]
	0x01C89490 STR W9, [X0 + 0x9C]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+96], X28
	012 Move [X31+104], X27
	013 Move [X31+112], X26
	014 Move [X31+120], X25
	015 Move [X31+128], X24
	016 Move [X31+136], X23
	017 Move [X31+144], X22
	018 Move [X31+152], X21
	019 Move [X31+160], X20
	020 Move [X31+168], X19
	021 Move X20, 0x259B000
	022 Move W8, [X20+880]
	023 Move X19, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {36}
	028 Move X0, 0x22C5000
	029 Move X0, [X0+1128]
	030 Call 0x1B6F7F0
	031 Move X0, 0x22C5000
	032 Move X0, [X0+1136]
	033 Call 0x1B6F7F0
	034 Move W8, 1
	035 Move [X20+880], W8
	036 Move X21, [X19+48]
	037 Compare X21, 0
	038 JumpIfEqual {172}
	039 Move W8, [X21+24]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X23, 0x22C5000
	042 Move X24, 0x22C5000
	043 Move X23, [X23+1128]
	044 Move X24, [X24+1136]
	045 Move W22, W31
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Add X8, X21, W22
	048 Move X25, [X8+32]
	049 Compare X25, 0
	050 JumpIfEqual {172}
	051 Move X8, [X25+24]
	052 Compare X8, 0
	053 JumpIfEqual {172}
	054 Move X0, [X23]
	055 Move W1, [X8+24]
	056 Call 0x1B6F868
	057 Move X8, [X25+24]
	058 Move [X25+32], X0
	059 Compare X8, 0
	060 JumpIfEqual {172}
	061 Move W26, 4
	062 Move W9, [X8+24]
	063 Subtract X27, X26, 4
	064 NotImplemented "Instruction CMP not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X0, [X8]
	067 Compare X0, 0
	068 JumpIfEqual {172}
	069 Move X28, [X25+32]
	070 Move X1, X31
	071 Call Transform.get_parent, X0
	072 Move X8, [X25+24]
	073 Compare X8, 0
	074 JumpIfEqual {172}
	075 Move W9, [X8+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X19, X0
	078 Move X0, [X8]
	079 Compare X0, 0
	080 JumpIfEqual {172}
	081 Move X1, X31
	082 Call Transform.get_position, X0
	083 Move X8, [X25+24]
	084 Compare X8, 0
	085 JumpIfEqual {172}
	086 Move W9, [X8+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X0, [X8]
	089 Compare X0, 0
	090 JumpIfEqual {172}
	091 Move X1, X31
	092 Move V8, V0
	093 Move V9, V1
	094 Move V10, V2
	095 Call Transform.get_localPosition, X0
	096 Move X8, [X25+24]
	097 Compare X8, 0
	098 JumpIfEqual {172}
	099 Move W9, [X8+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X0, [X8]
	102 Compare X0, 0
	103 JumpIfEqual {172}
	104 Move X1, X31
	105 Move V11, V0
	106 Move V12, V1
	107 Move V13, V2
	108 Call Transform.get_localRotation, X0
	109 Move X0, [X24]
	110 Move V14, V0
	111 Move V15, V1
	112 Move [X31+88], S10
	113 Move [X31+96], S8
	114 Move V8, V2
	115 Move V10, V9
	116 Move V9, V3
	117 Call 0x1B6FA0C
	118 Move S2, [X31+88]
	119 Move S0, [X31+92]
	120 Move X1, X19
	121 Move V1, V10
	122 Move V3, V11
	123 Move V4, V12
	124 Move V5, V13
	125 Move X20, X0
	126 Move [X31+8], S8
	127 Move [X31+16], S9
	128 Move [X31], S14
	129 Move [X31+8], S15
	130 Call Node..ctor, X0, X1, X2, X3, X4
	131 Compare X28, 0
	132 JumpIfEqual {172}
	133 Compare X20, 0
	134 JumpIfEqual {141}
	135 Move X8, [X28]
	136 Move X0, X20
	137 Move X1, [X8+64]
	138 Call 0x1B6F8FC
	139 Compare X0, 0
	140 JumpIfEqual {174}
	141 Move W8, [X28+24]
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move [X28], X20
	144 Move X8, [X25+24]
	145 Add X26, X26, 1
	146 Compare X8, 0
	147 JumpIfNotEqual {62}
	148 Move W8, [X21+24]
	149 Add W22, W22, 1
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X20, [X31+160]
	152 Move X19, [X31+168]
	153 Move X22, [X31+144]
	154 Move X21, [X31+152]
	155 Move X24, [X31+128]
	156 Move X23, [X31+136]
	157 Move X26, [X31+112]
	158 Move X25, [X31+120]
	159 Move X28, [X31+96]
	160 Move X27, [X31+104]
	161 Move X30, [X31+80]
	162 Move D9, [X31+64]
	163 Move D8, [X31+72]
	164 Move D11, [X31+48]
	165 Move D10, [X31+56]
	166 Move D13, [X31+32]
	167 Move D12, [X31+40]
	168 Move D15, [X31+16]
	169 Move D14, [X31+24]
	170 Add X31, X31, 176
	171 Return 
	172 Call 0x1B6FA1C
	173 Call 0x1B6FA24
	174 Call 0x1B6FA40
	175 Move X1, X31
	176 Call 0x1B6F8E8

Method: System.Void LateUpdate()

Disassembly:
	0x01C8967C CBNZ W8, 0x1C89684
	0x01C89680 BL 0x1B6E8F8
	0x01C89684 ADRP X20, 0x259A000
	0x01C89688 LDRB W8, [X20 + 0x443]
	0x01C8968C CBNZ W8, 0x1C896A4
	0x01C89690 ADRP X0, 0x22C4000
	0x01C89694 LDR X0, [X0 + 0x4E8]
	0x01C89698 BL 0x1B6E7F0
	0x01C8969C MOVZ W8, 0x1
	0x01C896A0 STRB W8, [X20 + 0x443]
	0x01C896A4 LDR X0, [X19]
	0x01C896A8 LDR W8, [X0 + 0xE0]
	0x01C896AC CBNZ W8, 0x1C896B8
	0x01C896B0 BL 0x1B6E8F8
	0x01C896B4 LDR X0, [X19]
	0x01C896B8 LDR X8, [X0 + 0xB8]
	0x01C896BC LDR X8, [X8]
	0x01C896C0 CBZ X8, 0x1C896DC
	0x01C896C4 LDR X8, [X8 + 0x68]
	0x01C896C8 CBZ X8, 0x1C896DC
	0x01C896CC LDR W0, [X8 + 0x4C]
	0x01C896D0 LDP X20, X19, [X31 + 0x10]
	0x01C896D4 LDR X30, [X31], #0x20
	0x01C896D8 RET
	0x01C896DC BL 0x1B6EA1C
	0x01C896E0 STR X30, [X31 - 0x20]!
	0x01C896E4 STP X20, X19, [X31 + 0x10]
	0x01C896E8 ADRP X20, 0x259A000
	0x01C896EC ADRP X19, 0x22C4000
	0x01C896F0 LDRB W8, [X20 + 0x379]
	0x01C896F4 LDR X19, [X19 + 0x4F8]
	0x01C896F8 TBNZ X8, 0x0, 0x1C89710
	0x01C896FC ADRP X0, 0x22C4000
	0x01C89700 LDR X0, [X0 + 0x4F8]
	0x01C89704 BL 0x1B6E7F0
	0x01C89708 MOVZ W8, 0x1
	0x01C8970C STRB W8, [X20 + 0x379]
	0x01C89710 LDR X0, [X19]
	0x01C89714 LDR W8, [X0 + 0xE0]
	0x01C89718 CBNZ W8, 0x1C89720
	0x01C8971C BL 0x1B6E8F8
	0x01C89720 ADRP X20, 0x259A000
	0x01C89724 LDRB W8, [X20 + 0x444]
	0x01C89728 CBNZ W8, 0x1C89740
	0x01C8972C ADRP X0, 0x22C4000
	0x01C89730 LDR X0, [X0 + 0x4F8]
	0x01C89734 BL 0x1B6E7F0
	0x01C89738 MOVZ W8, 0x1
	0x01C8973C STRB W8, [X20 + 0x444]
	0x01C89740 LDR X0, [X19]
	0x01C89744 LDR W8, [X0 + 0xE0]
	0x01C89748 CBNZ W8, 0x1C89754
	0x01C8974C BL 0x1B6E8F8
	0x01C89750 LDR X0, [X19]
	0x01C89754 LDR X8, [X0 + 0xB8]
	0x01C89758 LDP X20, X19, [X31 + 0x10]
	0x01C8975C LDR X0, [X8]
	0x01C89760 LDR X30, [X31], #0x20
	0x01C89764 RET
	0x01C89768 STR X30, [X31 - 0x20]!
	0x01C8976C STP X20, X19, [X31 + 0x10]
	0x01C89770 ADRP X20, 0x259A000
	0x01C89774 ADRP X19, 0x22C4000
	0x01C89778 LDRB W8, [X20 + 0x37A]
	0x01C8977C LDR X19, [X19 + 0x4F8]
	0x01C89780 TBNZ X8, 0x0, 0x1C89798
	0x01C89784 ADRP X0, 0x22C4000
	0x01C89788 LDR X0, [X0 + 0x4F8]
	0x01C8978C BL 0x1B6E7F0
	0x01C89790 MOVZ W8, 0x1
	0x01C89794 STRB W8, [X20 + 0x37A]
	0x01C89798 LDR X0, [X19]
	0x01C8979C LDR W8, [X0 + 0xE0]
	0x01C897A0 CBNZ W8, 0x1C897A8
	0x01C897A4 BL 0x1B6E8F8
	0x01C897A8 ADRP X20, 0x259A000
	0x01C897AC LDRB W8, [X20 + 0x445]
	0x01C897B0 CBNZ W8, 0x1C897C8
	0x01C897B4 ADRP X0, 0x22C4000
	0x01C897B8 LDR X0, [X0 + 0x4F8]
	0x01C897BC BL 0x1B6E7F0
	0x01C897C0 MOVZ W8, 0x1
	0x01C897C4 STRB W8, [X20 + 0x445]
	0x01C897C8 LDR X0, [X19]
	0x01C897CC LDR W8, [X0 + 0xE0]
	0x01C897D0 CBNZ W8, 0x1C897DC
	0x01C897D4 BL 0x1B6E8F8
	0x01C897D8 LDR X0, [X19]
	0x01C897DC LDR X8, [X0 + 0xB8]
	0x01C897E0 LDP X20, X19, [X31 + 0x10]
	0x01C897E4 LDR X0, [X8 + 0x20]
	0x01C897E8 LDR X30, [X31], #0x20
	0x01C897EC RET
	0x01C897F0 STR X30, [X31 - 0x20]!
	0x01C897F4 STP X20, X19, [X31 + 0x10]
	0x01C897F8 ADRP X20, 0x259A000
	0x01C897FC ADRP X19, 0x22C4000
	0x01C89800 LDRB W8, [X20 + 0x37B]
	0x01C89804 LDR X19, [X19 + 0x4E8]
	0x01C89808 TBNZ X8, 0x0, 0x1C89820
	0x01C8980C ADRP X0, 0x22C4000
	0x01C89810 LDR X0, [X0 + 0x4E8]
	0x01C89814 BL 0x1B6E7F0
	0x01C89818 MOVZ W8, 0x1
	0x01C8981C STRB W8, [X20 + 0x37B]
	0x01C89820 LDR X0, [X19]
	0x01C89824 LDR W8, [X0 + 0xE0]
	0x01C89828 CBNZ W8, 0x1C89834
	0x01C8982C BL 0x1B6E8F8
	0x01C89830 LDR X0, [X19]
	0x01C89834 LDR X8, [X0 + 0xB8]
	0x01C89838 LDR X0, [X8 + 0x50]
	0x01C8983C CBZ X0, 0x1C89850
	0x01C89840 LDP X20, X19, [X31 + 0x10]
	0x01C89844 MOV X1, X31
	0x01C89848 LDR X30, [X31], #0x20
	0x01C8984C B 0x3429DD4
	0x01C89850 BL 0x1B6EA1C
	0x01C89854 STR X30, [X31 - 0x20]!
	0x01C89858 STP X20, X19, [X31 + 0x10]
	0x01C8985C ADRP X20, 0x259A000
	0x01C89860 ADRP X19, 0x22C4000
	0x01C89864 LDRB W8, [X20 + 0x37C]
	0x01C89868 LDR X19, [X19 + 0x4E8]
	0x01C8986C TBNZ X8, 0x0, 0x1C89884
	0x01C89870 ADRP X0, 0x22C4000
	0x01C89874 LDR X0, [X0 + 0x4E8]
	0x01C89878 BL 0x1B6E7F0
	0x01C8987C MOVZ W8, 0x1
	0x01C89880 STRB W8, [X20 + 0x37C]
	0x01C89884 LDR X0, [X19]
	0x01C89888 LDR W8, [X0 + 0xE0]
	0x01C8988C CBNZ W8, 0x1C89898
	0x01C89890 BL 0x1B6E8F8
	0x01C89894 LDR X0, [X19]
	0x01C89898 LDR X8, [X0 + 0xB8]
	0x01C8989C LDP X20, X19, [X31 + 0x10]
	0x01C898A0 LDRB W0, [X8 + 0x1A]
	0x01C898A4 LDR X30, [X31], #0x20
	0x01C898A8 RET
	0x01C898AC STP X30, X27, [X31 - 0x50]!
	0x01C898B0 STP X26, X25, [X31 + 0x10]
	0x01C898B4 STP X24, X23, [X31 + 0x20]
	0x01C898B8 STP X22, X21, [X31 + 0x30]
	0x01C898BC STP X20, X19, [X31 + 0x40]
	0x01C898C0 ADRP X20, 0x259A000
	0x01C898C4 ADRP X22, 0x22C4000
	0x01C898C8 LDRB W8, [X20 + 0x37D]
	0x01C898CC LDR X22, [X22 + 0x4E8]
	0x01C898D0 MOV X19, X0
	0x01C898D4 TBNZ X8, 0x0, 0x1C89994
	0x01C898D8 ADRP X0, 0x22C4000
	0x01C898DC LDR X0, [X0 + 0x500]
	0x01C898E0 BL 0x1B6E7F0
	0x01C898E4 ADRP X0, 0x22C4000
	0x01C898E8 LDR X0, [X0 + 0x508]
	0x01C898EC BL 0x1B6E7F0
	0x01C898F0 ADRP X0, 0x22C4000
	0x01C898F4 LDR X0, [X0 + 0x510]
	0x01C898F8 BL 0x1B6E7F0
	0x01C898FC ADRP X0, 0x22C4000
	0x01C89900 LDR X0, [X0 + 0x4E8]
	0x01C89904 BL 0x1B6E7F0
	0x01C89908 ADRP X0, 0x22C4000
	0x01C8990C LDR X0, [X0 + 0x518]
	0x01C89910 BL 0x1B6E7F0
	0x01C89914 ADRP X0, 0x22C4000
	0x01C89918 LDR X0, [X0 + 0x520]
	0x01C8991C BL 0x1B6E7F0
	0x01C89920 ADRP X0, 0x22C4000
	0x01C89924 LDR X0, [X0 + 0x528]
	0x01C89928 BL 0x1B6E7F0
	0x01C8992C ADRP X0, 0x22C4000
	0x01C89930 LDR X0, [X0 + 0x530]
	0x01C89934 BL 0x1B6E7F0
	0x01C89938 ADRP X0, 0x22C4000
	0x01C8993C LDR X0, [X0 + 0x538]
	0x01C89940 BL 0x1B6E7F0
	0x01C89944 ADRP X0, 0x22C4000
	0x01C89948 LDR X0, [X0 + 0x540]
	0x01C8994C BL 0x1B6E7F0
	0x01C89950 ADRP X0, 0x22C4000
	0x01C89954 LDR X0, [X0 + 0x548]
	0x01C89958 BL 0x1B6E7F0
	0x01C8995C ADRP X0, 0x22C4000
	0x01C89960 LDR X0, [X0 + 0x550]
	0x01C89964 BL 0x1B6E7F0
	0x01C89968 ADRP X0, 0x22C4000
	0x01C8996C LDR X0, [X0 + 0x558]
	0x01C89970 BL 0x1B6E7F0
	0x01C89974 ADRP X0, 0x22C4000
	0x01C89978 LDR X0, [X0 + 0x478]
	0x01C8997C BL 0x1B6E7F0
	0x01C89980 ADRP X0, 0x22C4000
	0x01C89984 LDR X0, [X0 + 0x560]
	0x01C89988 BL 0x1B6E7F0
	0x01C8998C MOVZ W8, 0x1
	0x01C89990 STRB W8, [X20 + 0x37D]
	0x01C89994 LDR X0, [X22]
	0x01C89998 ADRP X20, 0x22C4000
	0x01C8999C LDR W8, [X0 + 0xE0]
	0x01C899A0 LDR X20, [X20 + 0x478]
	0x01C899A4 CBNZ W8, 0x1C899B0
	0x01C899A8 BL 0x1B6E8F8
	0x01C899AC LDR X0, [X22]
	0x01C899B0 LDR X8, [X20]
	0x01C899B4 LDR X9, [X0 + 0xB8]
	0x01C899B8 LDR W10, [X8 + 0xE0]
	0x01C899BC LDR X20, [X9 + 0x8]
	0x01C899C0 CBNZ W10, 0x1C899CC
	0x01C899C4 MOV X0, X8
	0x01C899C8 BL 0x1B6E8F8
	0x01C899CC MOV X0, X20
	0x01C899D0 MOV X1, X31
	0x01C899D4 MOV X2, X31
	0x01C899D8 BL 0x3A9D6EC
	0x01C899DC TBNZ X0, 0x0, 0x1C89CF0
	0x01C899E0 LDR X0, [X22]
	0x01C899E4 ADRP X20, 0x22C4000
	0x01C899E8 ADRP X21, 0x22C4000
	0x01C899EC LDR W8, [X0 + 0xE0]
	0x01C899F0 LDR X20, [X20 + 0x508]
	0x01C899F4 LDR X21, [X21 + 0x560]
	0x01C899F8 CBNZ W8, 0x1C89A04
	0x01C899FC BL 0x1B6E8F8
	0x01C89A00 LDR X0, [X22]
	0x01C89A04 LDR X8, [X0 + 0xB8]
	0x01C89A08 STR X19, [X8 + 0x8]
	0x01C89A0C LDR X0, [X21]
	0x01C89A10 LDR X19, [X20]
	0x01C89A14 ADRP X20, 0x22C4000
	0x01C89A18 ADRP X21, 0x22C4000
	0x01C89A1C LDR W8, [X0 + 0xE0]
	0x01C89A20 LDR X20, [X20 + 0x518]
	0x01C89A24 LDR X21, [X21 + 0x500]
	0x01C89A28 CBNZ W8, 0x1C89A30
	0x01C89A2C BL 0x1B6E8F8
	0x01C89A30 MOV X0, X19
	0x01C89A34 MOV X1, X31
	0x01C89A38 BL 0x31F5D3C
	0x01C89A3C LDR X8, [X20]
	0x01C89A40 MOV X20, X0
	0x01C89A44 MOV X0, X8
	0x01C89A48 BL 0x1B6EA0C
	0x01C89A4C MOV X1, X20
	0x01C89A50 MOV X2, X31
	0x01C89A54 MOV X19, X0
	0x01C89A58 BL 0x343B0A0
	0x01C89A5C LDR X0, [X21]
	0x01C89A60 BL 0x1B6EA0C
	0x01C89A64 MOV X1, X19
	0x01C89A68 MOV X20, X0
	0x01C89A6C BL 0x1C89D54
	0x01C89A70 LDR X8, [X22]
	0x01C89A74 LDR X8, [X8 + 0xB8]
	0x01C89A78 STR X20, [X8 + 0x10]
	0x01C89A7C CBZ X20, 0x1C89CEC
	0x01C89A80 ADRP X23, 0x22C4000
	0x01C89A84 LDR X8, [X20]
	0x01C89A88 LDR X23, [X23 + 0x548]
	0x01C89A8C ADRP X24, 0x22C4000
	0x01C89A90 LDRH W9, [X8 + 0x12E]
	0x01C89A94 LDR X1, [X23]
	0x01C89A98 LDR X24, [X24 + 0x510]
	0x01C89A9C CBZ X9, 0x1C89AC0
	0x01C89AA0 LDR X10, [X8 + 0xB0]
	0x01C89AA4 ADD X10, X10, 0x8
	0x01C89AA8 LDUR X11, [X10 - 0x8]
	0x01C89AAC CMP X11, X1
	0x01C89AB0 B.EQ 0x1C89AD0
	0x01C89AB4 SUBS X9, X9, 0x1
	0x01C89AB8 ADD X10, X10, 0x10
	0x01C89ABC B.NE 0x1C89AA8
	0x01C89AC0 MOVZ W2, 0x1
	0x01C89AC4 MOV X0, X20
	0x01C89AC8 BL 0x1BB4284
	0x01C89ACC B 0x1C89AE0
	0x01C89AD0 LDR W9, [X10]
	0x01C89AD4 ADD W9, W9, 0x1
	0x01C89AD8 ADD X8, X8, W9, 0x4, SXTW
	0x01C89ADC ADD X0, X8, 0x138
	0x01C89AE0 LDP X8, X2, [X0]
	0x01C89AE4 MOVZ W1, 0x1
	0x01C89AE8 MOV X0, X20
	0x01C89AEC MOVZ W25, 0x1
	0x01C89AF0 BLR X8
	0x01C89AF4 LDR X8, [X22]
	0x01C89AF8 LDR X0, [X24]

ISIL:
	001 Move [X31-128], D15
	002 Move [X31-120], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+72], X25
	011 Move [X31+80], X24
	012 Move [X31+88], X23
	013 Move [X31+96], X22
	014 Move [X31+104], X21
	015 Move [X31+112], X20
	016 Move [X31+120], X19
	017 Move X20, 0x259B000
	018 Move W8, [X20+881]
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x22C5000
	025 Move X0, [X0+1144]
	026 Call 0x1B6F7F0
	027 Move W8, 1
	028 Move [X20+881], W8
	029 Move W8, [X19+32]
	030 Compare W8, 0
	031 JumpIfEqual {310}
	032 Move X20, [X19+48]
	033 Compare X20, 0
	034 JumpIfEqual {327}
	035 Move W8, [X20+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X9, -18739200
	038 Move X22, 0x22C5000
	039 Move V15, [X9+2804]
	040 Move X22, [X22+1144]
	041 Move W21, W31
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Add X8, X20, W21
	044 Move X23, [X8+32]
	045 Compare X23, 0
	046 JumpIfEqual {327}
	047 Move X8, [X23+24]
	048 Compare X8, 0
	049 JumpIfEqual {327}
	050 Move TEMP, 0
	051 Not TEMP
	052 Move W19, TEMP
	053 Move X10, [X8+24]
	054 Add W9, W19, 1
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X10, [X23+32]
	058 Compare X10, 0
	059 JumpIfEqual {327}
	060 Move W11, [X10+24]
	061 Add W19, W19, 1
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X11, W9
	064 Add X9, X10, X11
	065 Move X9, [X9+32]
	066 Compare X9, 0
	067 JumpIfEqual {327}
	068 Add X8, X8, X11
	069 Move X0, [X8+32]
	070 Compare X0, 0
	071 JumpIfEqual {327}
	072 Move S2, [X9+56]
	073 Move S3, [X9+60]
	074 Move S0, [X9+48]
	075 Move S1, [X9+52]
	076 Move X1, X31
	077 Call Transform.set_localRotation, X0, X1
	078 Move X8, [X23+24]
	079 Compare X8, 0
	080 JumpIfNotEqual {53}
	081 And X9, X10, 0
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move W10, W31
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X24, W10
	086 Add X8, X8, X24
	087 Move X0, [X8+32]
	088 Compare X0, 0
	089 JumpIfEqual {327}
	090 Move X1, X31
	091 Call Transform.get_parent, X0
	092 Move X8, [X22]
	093 Move X19, X0
	094 Move W9, [X8+224]
	095 Compare W9, 0
	096 JumpIfNotEqual {99}
	097 Move X0, X8
	098 Call 0x1B6F8F8
	099 Move X0, X19
	100 Move X1, X31
	101 Move X2, X31
	102 Call Object.op_Inequality, X0, X1
	103 Move X8, [X23+32]
	104 Compare X8, 0
	105 JumpIfEqual {327}
	106 Move W9, [X8+24]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Add X9, X8, X24
	109 Move X9, [X9+32]
	110 Compare X9, 0
	111 JumpIfEqual {327}
	112 Move S8, [X9+36]
	113 Move S9, [X9+40]
	114 Move V10, [X9+44]
	115 Move TEMP, X0
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfNotEqual {133}
	119 Compare X19, 0
	120 JumpIfEqual {327}
	121 Move X0, X19
	122 Move V0, V8
	123 Move V1, V9
	124 Move V2, V10
	125 Move X1, X31
	126 Call Transform.TransformPoint, X0, X1
	127 Move X8, [X23+32]
	128 Compare X8, 0
	129 JumpIfEqual {327}
	130 Move V8, V0
	131 Move V9, V1
	132 Move V10, V2
	133 Move W9, [X8+24]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Add X8, X8, X24
	136 Move X19, [X8+32]
	137 Move X0, X31
	138 Call Time.get_deltaTime
	139 Compare X19, 0
	140 JumpIfEqual {327}
	141 Move S5, [X23+68]
	142 Move S6, [X23+72]
	143 Move V4, [X23+64]
	144 Move V3, V0
	145 Move X0, X19
	146 Move V0, V8
	147 Move V1, V9
	148 Move V2, V10
	149 Call Node.Update, X0, X1, V0, V1, V2, V3
	150 Move X8, [X23+24]
	151 Compare X8, 0
	152 JumpIfEqual {327}
	153 Move W9, [X8+24]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X9, [X23+32]
	156 Compare X9, 0
	157 JumpIfEqual {327}
	158 Move W10, [X9+24]
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Add X9, X9, X24
	161 Move X9, [X9+32]
	162 Compare X9, 0
	163 JumpIfEqual {327}
	164 Add X8, X8, X24
	165 Move X0, [X8+32]
	166 Compare X0, 0
	167 JumpIfEqual {327}
	168 Move S1, [X9+28]
	169 Move S2, [X9+32]
	170 Move V0, [X9+24]
	171 Move X1, X31
	172 Call Transform.set_position, X0, X1
	173 Move X8, [X23+24]
	174 Compare X8, 0
	175 JumpIfEqual {327}
	176 Move X9, [X8+24]
	177 Add W10, W24, 1
	178 NotImplemented "Instruction CMP not yet implemented."
	179 And X9, X9, 0
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move X19, X31
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Add X8, X8, X19
	184 Move X0, [X8+32]
	185 Subtract W8, W9, 1
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Compare X0, 0
	188 JumpIfEqual {327}
	189 Move X1, X31
	190 Call Transform.get_position, X0
	191 Move X8, [X23+24]
	192 Compare X8, 0
	193 JumpIfEqual {327}
	194 Move W9, [X8+24]
	195 Add X24, X19, 1
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Move X25, W24
	198 Add X8, X8, X25
	199 Move X0, [X8+32]
	200 Compare X0, 0
	201 JumpIfEqual {327}
	202 Move X1, X31
	203 Move V11, V0
	204 Move V12, V1
	205 Move V13, V2
	206 Call Transform.get_position, X0
	207 Move X8, [X23+24]
	208 Compare X8, 0
	209 JumpIfEqual {327}
	210 Move W9, [X8+24]
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Add X8, X8, X19
	213 Move S3, [X23+40]
	214 Move S4, [X23+44]
	215 Move V5, [X23+48]
	216 Move X19, [X8+32]
	217 Move V8, V0
	218 Move V9, V1
	219 Move V10, V2
	220 Subtract S0, S0, S11
	221 Subtract S1, S1, S12
	222 Subtract S2, S2, S13
	223 Move X0, X31
	224 Call Quaternion.LookRotation, X0, X1
	225 Move V12, V0
	226 Move V14, V1
	227 Move V11, V2
	228 Move S0, [X23+52]
	229 Move S1, [X23+56]
	230 Move V2, [X23+60]
	231 Move X0, X31
	232 Move V13, V3
	233 Multiply S0, S0, S15
	234 Multiply S1, S1, S15
	235 Multiply S2, S2, S15
	236 Call Quaternion.Internal_FromEulerRad, X0
	237 Compare X19, 0
	238 JumpIfEqual {327}
	239 Multiply S4, S13, S3
	240 Multiply S5, S12, S0
	241 Multiply S7, S11, S2
	242 Multiply S17, S13, S2
	243 Multiply S18, S11, S3
	244 Multiply S19, S14, S0
	245 Multiply S20, S14, S3
	246 Multiply S21, S14, S2
	247 Multiply S22, S12, S2
	248 Multiply S2, S12, S3
	249 Multiply S3, S11, S0
	250 Multiply S0, S13, S0
	251 Multiply S23, S13, S1
	252 Multiply S6, S14, S1
	253 Multiply S16, S12, S1
	254 Multiply S24, S11, S1
	255 Subtract S1, S4, S5
	256 Add S4, S17, S18
	257 Add S5, S23, S20
	258 Add S0, S0, S2
	259 Subtract S1, S1, S6
	260 Add S2, S16, S4
	261 Add S4, S3, S5
	262 Add S0, S21, S0
	263 Subtract S3, S1, S7
	264 Subtract S2, S2, S19
	265 Subtract S1, S4, S22
	266 Subtract S0, S0, S24
	267 Move X0, X19
	268 Move X1, X31
	269 Call Transform.set_rotation, X0, X1
	270 Move X8, [X23+24]
	271 Compare X8, 0
	272 JumpIfEqual {327}
	273 Move W9, [X8+24]
	274 NotImplemented "Instruction CMP not yet implemented."
	275 Add X8, X8, X25
	276 Move X0, [X8+32]
	277 Compare X0, 0
	278 JumpIfEqual {327}
	279 Move V0, V8
	280 Move V1, V9
	281 Move V2, V10
	282 Move X1, X31
	283 Call Transform.set_position, X0, X1
	284 Move X19, X24
	285 Move X8, [X23+32]
	286 Compare X8, 0
	287 JumpIfEqual {327}
	288 Move W9, [X8+24]
	289 NotImplemented "Instruction CMP not yet implemented."
	290 Add X8, X8, X19
	291 Move X8, [X8+32]
	292 Compare X8, 0
	293 JumpIfEqual {327}
	294 Compare X0, 0
	295 JumpIfEqual {327}
	296 Move S1, [X8+28]
	297 Move S2, [X8+32]
	298 Move V0, [X8+24]
	299 Move X1, X31
	300 Call Transform.set_position, X0, X1
	301 Add X19, X19, 1
	302 Move X8, [X23+24]
	303 Compare X8, 0
	304 JumpIfEqual {327}
	305 Move W9, [X8+24]
	306 NotImplemented "Instruction CMP not yet implemented."
	307 Move W8, [X20+24]
	308 Add W21, W21, 1
	309 NotImplemented "Instruction CMP not yet implemented."
	310 Move X20, [X31+112]
	311 Move X19, [X31+120]
	312 Move X22, [X31+96]
	313 Move X21, [X31+104]
	314 Move X24, [X31+80]
	315 Move X23, [X31+88]
	316 Move X30, [X31+64]
	317 Move X25, [X31+72]
	318 Move D9, [X31+48]
	319 Move D8, [X31+56]
	320 Move D11, [X31+32]
	321 Move D10, [X31+40]
	322 Move D13, [X31+16]
	323 Move D12, [X31+24]
	324 Move D15, [X31+128]
	325 Move D14, [X31+136]
	326 Return 
	327 Call 0x1B6FA1C
	328 Call 0x1B6FA24

Method: System.Void .ctor()

Disassembly:
	0x01C89D8C BL 0x1B6E7F0
	0x01C89D90 ADRP X0, 0x22C4000
	0x01C89D94 LDR X0, [X0 + 0x580]
	0x01C89D98 BL 0x1B6E7F0

ISIL:
	001 Move W8, 1
	002 Move X1, X31
	003 Move [X0+32], W8
	004 Call MonoBehaviour..ctor, X0
	005 Return 

