Type: Fusion.CodeGen.ReaderWriter@AnimalCompany_SpawnedLoot

Method: AnimalCompany.SpawnedLoot Read(System.Byte* data, System.Int32 index)

Disassembly:
	0x01D7A3CC FMOV S0, W31
	0x01D7A3D0 FMOV S2, W31
	0x01D7A3D4 MOV X0, X31
	0x01D7A3D8 BL 0x3C2A574
	0x01D7A3DC CBZ X20, 0x1D7A438
	0x01D7A3E0 MOV X0, X20

ISIL:
	001 Add W8, W2, W2
	002 Move W8, W8
	003 ShiftRight W8, 30
	004 And W8, W8, 0x1FFFFFFF
	005 Add X8, X1, W8
	006 Move X0, [X8]
	007 Move W1, [X8+8]
	008 Return X0

Method: AnimalCompany.SpawnedLoot ReadRef(System.Byte* data, System.Int32 index)

Disassembly:
	0x01D7A3E4 MOV X1, X31
	0x01D7A3E8 BL 0x3C3F8B8
	0x01D7A3EC B 0x1D7A278
	0x01D7A3F0 LDR X1, [X22]

ISIL:
	001 Add W8, W2, W2
	002 Move W8, W8
	003 ShiftRight W8, 30
	004 And W8, W8, 0x1FFFFFFF
	005 Add X0, X1, W8
	006 Return X0

Method: System.Void Write(System.Byte* data, System.Int32 index, AnimalCompany.SpawnedLoot val)

Disassembly:
	0x01D7A3F4 ADD X0, X31, 0x20
	0x01D7A3F8 BL 0x2BC434C
	0x01D7A3FC LDP X20, X19, [X31 + 0xA0]
	0x01D7A400 LDP X22, X21, [X31 + 0x90]
	0x01D7A404 LDP X30, X23, [X31 + 0x80]
	0x01D7A408 LDP D9, D8, [X31 + 0x70]

ISIL:
	001 Add W8, W2, W2
	002 Move W8, W8
	003 ShiftRight W8, 30
	004 And W8, W8, 0x1FFFFFFF
	005 Add X8, X1, W8
	006 Move [X8], X3
	007 Move [X8+8], W4
	008 Return 

Method: System.Int32 GetElementWordCount()

Disassembly:
	0x01D7A40C LDP D11, D10, [X31 + 0x60]
	0x01D7A410 LDP D13, D12, [X31 + 0x50]

ISIL:
	001 Move W0, 3
	002 Return X0

Method: System.Int32 GetElementHashCode(AnimalCompany.SpawnedLoot val)

Disassembly:
	0x01D7A414 LDP D15, D14, [X31 + 0x40]
	0x01D7A418 ADD X31, X31, 0xB0
	0x01D7A41C RET
	0x01D7A420 BL 0x1C16F20
	0x01D7A424 BL 0x1C16F20
	0x01D7A428 BL 0x1C16F20
	0x01D7A42C BL 0x1C16F20
	0x01D7A430 BL 0x1C16F20
	0x01D7A434 BL 0x1C16F20
	0x01D7A438 BL 0x1C16F20
	0x01D7A43C BL 0x1C16F20
	0x01D7A440 B 0x1D7A490
	0x01D7A444 B 0x1D7A490
	0x01D7A448 B 0x1D7A490
	0x01D7A44C B 0x1D7A490
	0x01D7A450 B 0x1D7A490
	0x01D7A454 B 0x1D7A490
	0x01D7A458 B 0x1D7A490
	0x01D7A45C B 0x1D7A490
	0x01D7A460 B 0x1D7A490
	0x01D7A464 B 0x1D7A490
	0x01D7A468 B 0x1D7A490
	0x01D7A46C B 0x1D7A490
	0x01D7A470 B 0x1D7A490
	0x01D7A474 B 0x1D7A490
	0x01D7A478 B 0x1D7A490
	0x01D7A47C B 0x1D7A490
	0x01D7A480 B 0x1D7A490
	0x01D7A484 B 0x1D7A490
	0x01D7A488 B 0x1D7A490
	0x01D7A48C B 0x1D7A490
	0x01D7A490 MOV X19, X0
	0x01D7A494 CMP W1, 0x1
	0x01D7A498 B.NE 0x1D7A4C4
	0x01D7A49C MOV X0, X19
	0x01D7A4A0 BL 0x3EB1AD0
	0x01D7A4A4 LDR X20, [X0]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 NotImplemented "Instruction MRS not yet implemented."
	009 Move X8, [X21+40]
	010 Move X22, 0x265F000
	011 Move X23, 0x237D000
	012 Move X19, X2
	013 Move [X31+40], X8
	014 Move W8, [X22+2350]
	015 Move X23, [X23+936]
	016 Move X20, X1
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x237D000
	022 Move X0, [X0+936]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+2350], W8
	026 Move X8, [X23]
	027 Move TEMP, 0
	028 Not TEMP
	029 Move X9, TEMP
	030 Add X0, X31, 8
	031 Move X1, X31
	032 Move [X31+16], X9
	033 Move [X31+24], X20
	034 Move [X31+8], X8
	035 Move [X31+32], W19
	036 Call ValueType.GetHashCode, X0
	037 Move X8, [X21+40]
	038 Move X9, [X31+40]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X20, [X31+80]
	041 Move X19, [X31+88]
	042 Move X22, [X31+64]
	043 Move X21, [X31+72]
	044 Move X30, [X31+48]
	045 Move X23, [X31+56]
	046 Add X31, X31, 96
	047 Return X0
	048 Call 0x3EB2B20

Method: Fusion.IElementReaderWriter`1<AnimalCompany.SpawnedLoot> GetInstance()

Disassembly:
	0x01D7A4A8 BL 0x3EB1AE0
	0x01D7A4AC LDR X1, [X22]
	0x01D7A4B0 ADD X0, X31, 0x20
	0x01D7A4B4 BL 0x2BC434C
	0x01D7A4B8 CBZ X20, 0x1D7A3FC
	0x01D7A4BC MOV X0, X20
	0x01D7A4C0 BL 0x1C16F18
	0x01D7A4C4 MOV X20, X31
	0x01D7A4C8 B 0x1D7A4D0
	0x01D7A4CC MOV X19, X0
	0x01D7A4D0 LDR X1, [X22]
	0x01D7A4D4 ADD X0, X31, 0x20
	0x01D7A4D8 BL 0x2BC434C
	0x01D7A4DC CBNZ X20, 0x1D7A4E8
	0x01D7A4E0 MOV X0, X19
	0x01D7A4E4 BL 0x1D2C690
	0x01D7A4E8 MOV X0, X20
	0x01D7A4EC BL 0x1C16F18
	0x01D7A4F0 BL 0x1990590
	0x01D7A4F4 STP X30, X23, [X31 - 0x30]!
	0x01D7A4F8 STP X22, X21, [X31 + 0x10]
	0x01D7A4FC STP X20, X19, [X31 + 0x20]
	0x01D7A500 ADRP X20, 0x265E000
	0x01D7A504 LDRB W8, [X20 + 0x93B]
	0x01D7A508 MOV X19, X0
	0x01D7A50C TBNZ X8, 0x0, 0x1D7A530
	0x01D7A510 ADRP X0, 0x237B000
	0x01D7A514 LDR X0, [X0 + 0x4A0]
	0x01D7A518 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x265F000
	005 Move X19, 0x237D000
	006 Move W8, [X20+2351]
	007 Move X19, [X19+944]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x237D000
	013 Move X0, [X0+944]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2351], W8
	017 Move X0, [X19]
	018 Move X8, [X0+184]
	019 Move X8, [X8]
	020 Compare X8, 0
	021 JumpIfNotEqual {31}
	022 Add X1, X31, 8
	023 Move [X31+8], W31
	024 Call 0x1C17E04
	025 Move X8, [X19]
	026 Move X8, [X8+184]
	027 Move [X8], X0
	028 Move X8, [X19]
	029 Move X8, [X8+184]
	030 Move X8, [X8]
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X0, X8
	034 Move X30, [X31+32]
	035 Return X0

