Type: Fusion.CodeGen.ReaderWriter@UnityEngine_Vector3

Method: UnityEngine.Vector3 Read(System.Byte* data, System.Int32 index)

Disassembly:
	0x01D16CEC LDR X8, [X9 + 0x20]
	0x01D16CF0 LDR X8, [X8 + 0xC0]
	0x01D16CF4 LDR X2, [X8 + 0x70]
	0x01D16CF8 MOV X0, X24
	0x01D16CFC MOV X1, X26
	0x01D16D00 BL 0x2E46518

ISIL:
	001 Add W8, W2, W2
	002 Move W8, W8
	003 ShiftRight W8, 30
	004 And W8, W8, 0x1FFFFFFF
	005 Add X8, X1, W8
	006 Move S0, [X8]
	007 Move S1, [X8+4]
	008 Move V2, [X8+8]
	009 Return X0

Method: UnityEngine.Vector3 ReadRef(System.Byte* data, System.Int32 index)

Disassembly:
	0x01D16D04 B 0x1D16A44
	0x01D16D08 ADRP X8, 0x223B000
	0x01D16D0C LDR X8, [X8 + 0x648]
	0x01D16D10 ADD X0, X31, 0x210

ISIL:
	001 Add W8, W2, W2
	002 Move W8, W8
	003 ShiftRight W8, 30
	004 And W8, W8, 0x1FFFFFFF
	005 Add X0, X1, W8
	006 Return X0

Method: System.Void Write(System.Byte* data, System.Int32 index, UnityEngine.Vector3 val)

Disassembly:
	0x01D16D14 LDR X1, [X8]
	0x01D16D18 BL 0x2A5A4D8
	0x01D16D1C ADRP X8, 0x223B000
	0x01D16D20 LDR X8, [X8 + 0x728]
	0x01D16D24 LDR X0, [X8]
	0x01D16D28 BL 0x1B6EA0C

ISIL:
	001 Add W8, W2, W2
	002 Move W8, W8
	003 ShiftRight W8, 30
	004 And W8, W8, 0x1FFFFFFF
	005 Add X8, X1, W8
	006 Move [X8], S0
	007 Move [X8+8], S1
	008 Move [X8+8], S2
	009 Return 

Method: System.Int32 GetElementWordCount()

Disassembly:
	0x01D16D2C ADRP X8, 0x223B000
	0x01D16D30 LDR X8, [X8 + 0x6E8]

ISIL:
	001 Move W0, 3
	002 Return X0

Method: System.Int32 GetElementHashCode(UnityEngine.Vector3 val)

Disassembly:
	0x01D16D34 MOV X25, X0
	0x01D16D38 LDR X1, [X8]
	0x01D16D3C BL 0x2D9ABB0
	0x01D16D40 CBZ X24, 0x1D17498
	0x01D16D44 ADRP X8, 0x223B000
	0x01D16D48 LDR X8, [X8 + 0x6D0]
	0x01D16D4C MOV X0, X24
	0x01D16D50 LDR X1, [X8]
	0x01D16D54 ADD X8, X31, 0x378
	0x01D16D58 BL 0x2E470E0
	0x01D16D5C ADD X8, X31, 0x279
	0x01D16D60 LDUR V0, [X8 + 0xFF]
	0x01D16D64 LDR X8, [X31 + 0x388]
	0x01D16D68 ADRP X19, 0x223B000
	0x01D16D6C ADRP X24, 0x223B000
	0x01D16D70 LDR X19, [X19 + 0x650]
	0x01D16D74 LDR X24, [X24 + 0x790]
	0x01D16D78 ADRP X20, 0x250D000
	0x01D16D7C MOVZ W27, 0x1
	0x01D16D80 STR V0, [X29 + 0xF]
	0x01D16D84 STR X8, [X31 + 0x190]
	0x01D16D88 MOVZ W28, 0x68
	0x01D16D8C LDR X1, [X19]
	0x01D16D90 ADD X0, X31, 0x180
	0x01D16D94 BL 0x2A14F30

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Add X8, X31, 0
	007 Add X0, X31, 0
	008 Move X1, X31
	009 Move [X31], S0
	010 Move [X31+8], S1
	011 Or X19, X8, 7
	012 Add X20, X8, 8
	013 Move [X31+8], S2
	014 Call Single.GetHashCode, X0
	015 Move W21, W0
	016 Move X0, X19
	017 Move X1, X31
	018 Call Single.GetHashCode, X0
	019 Move W19, W0
	020 Move X0, X20
	021 Move X1, X31
	022 Call Single.GetHashCode, X0
	023 Xor W8, W21, W19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X30, [X31+16]
	027 Move X21, [X31+24]
	028 Xor W0, W8, W0
	029 Add X31, X31, 48
	030 Return X0

Method: Fusion.IElementReaderWriter`1<UnityEngine.Vector3> GetInstance()

Disassembly:
	0x01D16D98 TBZ X0, 0x0, 0x1D16EA8
	0x01D16D9C LDR X1, [X31 + 0x190]
	0x01D16DA0 MOVI V0.2D, 0x0
	0x01D16DA4 STP V0, V0, [X29 + 0x80]
	0x01D16DA8 STP V0, V0, [X29 + 0xA0]
	0x01D16DAC STP V0, V0, [X29 + 0xC0]
	0x01D16DB0 STR X31, [X31 + 0x170]
	0x01D16DB4 ADD X0, X31, 0x110
	0x01D16DB8 MOV X2, X31
	0x01D16DBC BL 0x3A82D7C
	0x01D16DC0 ADD X0, X31, 0x110
	0x01D16DC4 MOV W1, W31
	0x01D16DC8 MOV X2, X31
	0x01D16DCC BL 0x3A82E0C
	0x01D16DD0 LDRB W8, [X20 + 0x80C]
	0x01D16DD4 CBNZ W8, 0x1D16DE4
	0x01D16DD8 MOV X0, X24
	0x01D16DDC BL 0x1B6E7F0
	0x01D16DE0 STRB W27, [X20 + 0x80C]
	0x01D16DE4 LDR X8, [X24]
	0x01D16DE8 LDR X8, [X8 + 0xB8]
	0x01D16DEC LDP V1, V0, [X8 + 0x60]
	0x01D16DF0 LDP V2, V3, [X8 + 0x40]
	0x01D16DF4 STP V1, V0, [X29 + 0x20]
	0x01D16DF8 STP V2, V3, [X31 + 0x90]
	0x01D16DFC ADD X0, X31, 0x110
	0x01D16E00 ADD X1, X31, 0x90
	0x01D16E04 MOV X2, X31
	0x01D16E08 BL 0x3A82E14

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x250E000
	005 Move X19, 0x223C000
	006 Move W8, [X20+2050]
	007 Move X19, [X19+1512]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x223C000
	013 Move X0, [X0+1512]
	014 Call 0x1B6F7F0
	015 Move W8, 1
	016 Move [X20+2050], W8
	017 Move X0, [X19]
	018 Move X8, [X0+184]
	019 Move X8, [X8]
	020 Compare X8, 0
	021 JumpIfNotEqual {31}
	022 Add X1, X31, 8
	023 Move [X31+8], W31
	024 Call 0x1B6F900
	025 Move X8, [X19]
	026 Move X8, [X8+184]
	027 Move [X8], X0
	028 Move X8, [X19]
	029 Move X8, [X8+184]
	030 Move X8, [X8]
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X0, X8
	034 Move X30, [X31+32]
	035 Return X0

