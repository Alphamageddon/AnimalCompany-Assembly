Type: Fusion.CodeGen.ReaderWriter@UnityEngine_Vector3

Method: UnityEngine.Vector3 Read(System.Byte* data, System.Int32 index)

Disassembly:
	0x01D7A76C FMOV S1, 1
	0x01D7A770 FMOV S2, W31
	0x01D7A774 FMOV S3, 1
	0x01D7A778 MOV X0, X31
	0x01D7A77C BL 0x3C0D030
	0x01D7A780 LDRB W8, [X20 + 0x783]

ISIL:
	001 Add W8, W2, W2
	002 Move W8, W8
	003 ShiftRight W8, 30
	004 And W8, W8, 0x1FFFFFFF
	005 Add X8, X1, W8
	006 Move S0, [X8]
	007 Move S1, [X8+4]
	008 Move V2, [X8+8]
	009 Return X0

Method: UnityEngine.Vector3 ReadRef(System.Byte* data, System.Int32 index)

Disassembly:
	0x01D7A784 CBNZ W8, 0x1D7A79C
	0x01D7A788 ADRP X0, 0x2379000
	0x01D7A78C LDR X0, [X0 + 0x5A0]
	0x01D7A790 BL 0x1C16CF4

ISIL:
	001 Add W8, W2, W2
	002 Move W8, W8
	003 ShiftRight W8, 30
	004 And W8, W8, 0x1FFFFFFF
	005 Add X0, X1, W8
	006 Return X0

Method: System.Void Write(System.Byte* data, System.Int32 index, UnityEngine.Vector3 val)

Disassembly:
	0x01D7A794 MOVZ W8, 0x1
	0x01D7A798 STRB W8, [X20 + 0x783]
	0x01D7A79C LDR X8, [X21]
	0x01D7A7A0 LDR V3, [X19 + 0x24]
	0x01D7A7A4 FMOV S4, 1
	0x01D7A7A8 FMOV S5, 1

ISIL:
	001 Add W8, W2, W2
	002 Move W8, W8
	003 ShiftRight W8, 30
	004 And W8, W8, 0x1FFFFFFF
	005 Add X8, X1, W8
	006 Move [X8], S0
	007 Move [X8+8], S1
	008 Move [X8+8], S2
	009 Return 

Method: System.Int32 GetElementWordCount()

Disassembly:
	0x01D7A7AC LDR X8, [X8 + 0xB8]
	0x01D7A7B0 FADD S3, S3, S3

ISIL:
	001 Move W0, 3
	002 Return X0

Method: System.Int32 GetElementHashCode(UnityEngine.Vector3 val)

Disassembly:
	0x01D7A7B4 MOV X0, X31
	0x01D7A7B8 LDP S0, S1, [X8]
	0x01D7A7BC LDR V2, [X8 + 0x8]
	0x01D7A7C0 BL 0x3C0CCD8
	0x01D7A7C4 LDP X20, X19, [X31 + 0x90]
	0x01D7A7C8 LDP X30, X21, [X31 + 0x80]
	0x01D7A7CC ADD X31, X31, 0xA0
	0x01D7A7D0 RET
	0x01D7A7D4 BL 0x1C16F20
	0x01D7A7D8 STR X30, [X31 - 0x30]!
	0x01D7A7DC STP X22, X21, [X31 + 0x10]
	0x01D7A7E0 STP X20, X19, [X31 + 0x20]
	0x01D7A7E4 ADRP X22, 0x265E000
	0x01D7A7E8 ADRP X21, 0x237B000
	0x01D7A7EC ADRP X20, 0x237B000
	0x01D7A7F0 LDRB W8, [X22 + 0x93E]
	0x01D7A7F4 LDR X21, [X21 + 0x7B8]
	0x01D7A7F8 LDR X20, [X20 + 0x7C0]
	0x01D7A7FC MOV X19, X0
	0x01D7A800 TBNZ X8, 0x0, 0x1D7A824
	0x01D7A804 ADRP X0, 0x237B000
	0x01D7A808 LDR X0, [X0 + 0x7C0]
	0x01D7A80C BL 0x1C16CF4
	0x01D7A810 ADRP X0, 0x237B000
	0x01D7A814 LDR X0, [X0 + 0x7B8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Add X8, X31, 0
	007 Add X0, X31, 0
	008 Move X1, X31
	009 Move [X31], S0
	010 Move [X31+8], S1
	011 Or X19, X8, 7
	012 Add X20, X8, 8
	013 Move [X31+8], S2
	014 Call Single.GetHashCode, X0
	015 Move W21, W0
	016 Move X0, X19
	017 Move X1, X31
	018 Call Single.GetHashCode, X0
	019 Move W19, W0
	020 Move X0, X20
	021 Move X1, X31
	022 Call Single.GetHashCode, X0
	023 Xor W8, W21, W19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X30, [X31+16]
	027 Move X21, [X31+24]
	028 Xor W0, W8, W0
	029 Add X31, X31, 48
	030 Return X0

Method: Fusion.IElementReaderWriter`1<UnityEngine.Vector3> GetInstance()

Disassembly:
	0x01D7A818 BL 0x1C16CF4
	0x01D7A81C MOVZ W8, 0x1
	0x01D7A820 STRB W8, [X22 + 0x93E]
	0x01D7A824 ADRP X8, 0xFFFFFFFFFED73000
	0x01D7A828 ADRP X9, 0xFFFFFFFFFED72000
	0x01D7A82C LDR V0, [X8 + 0x588]
	0x01D7A830 LDR V1, [X9 + 0xD7]
	0x01D7A834 MOVZ W8, 0x3F800000
	0x01D7A838 STR W8, [X19 + 0x48]
	0x01D7A83C STR D0, [X19 + 0x20]
	0x01D7A840 STUR V1, [X19 + 0x28]
	0x01D7A844 LDR X0, [X21]
	0x01D7A848 BL 0x1C16F10
	0x01D7A84C LDR X1, [X20]
	0x01D7A850 MOV X20, X0
	0x01D7A854 BL 0x301B7C4
	0x01D7A858 STR X20, [X19 + 0x50]
	0x01D7A85C MOV X0, X19
	0x01D7A860 LDP X20, X19, [X31 + 0x20]
	0x01D7A864 LDP X22, X21, [X31 + 0x10]
	0x01D7A868 MOV X1, X31
	0x01D7A86C LDR X30, [X31], #0x30
	0x01D7A870 B 0x3C36C30
	0x01D7A874 STP X30, X21, [X31 - 0x20]!
	0x01D7A878 STP X20, X19, [X31 + 0x10]
	0x01D7A87C ADRP X20, 0x265E000
	0x01D7A880 LDRB W8, [X20 + 0x93F]
	0x01D7A884 MOV X19, X0
	0x01D7A888 TBNZ X8, 0x0, 0x1D7A8B8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x265F000
	005 Move X19, 0x237D000
	006 Move W8, [X20+2356]
	007 Move X19, [X19+992]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x237D000
	013 Move X0, [X0+992]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2356], W8
	017 Move X0, [X19]
	018 Move X8, [X0+184]
	019 Move X8, [X8]
	020 Compare X8, 0
	021 JumpIfNotEqual {31}
	022 Add X1, X31, 8
	023 Move [X31+8], W31
	024 Call 0x1C17E04
	025 Move X8, [X19]
	026 Move X8, [X8+184]
	027 Move [X8], X0
	028 Move X8, [X19]
	029 Move X8, [X8+184]
	030 Move X8, [X8]
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X0, X8
	034 Move X30, [X31+32]
	035 Return X0

