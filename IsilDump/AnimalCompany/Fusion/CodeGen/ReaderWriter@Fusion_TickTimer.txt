Type: Fusion.CodeGen.ReaderWriter@Fusion_TickTimer

Method: Fusion.TickTimer Read(System.Byte* data, System.Int32 index)

Disassembly:
	0x01D7A668 FMIN S1, S0, S3
	0x01D7A66C FCMP S0, S10
	0x01D7A670 FCSEL S8, S1, S10, PL

ISIL:
	001 Move W8, W2
	002 ShiftRight W8, 30
	003 And W8, W8, 0x1FFFFFFF
	004 Move W0, [X1]
	005 Return X0

Method: Fusion.TickTimer ReadRef(System.Byte* data, System.Int32 index)

Disassembly:
	0x01D7A674 CBZ X19, 0x1D7A6B8
	0x01D7A678 MOV X0, X19
	0x01D7A67C MOV X1, X31

ISIL:
	001 Move W8, W2
	002 ShiftRight W8, 30
	003 And W8, W8, 0x1FFFFFFF
	004 Add X0, X1, W8
	005 Return X0

Method: System.Void Write(System.Byte* data, System.Int32 index, Fusion.TickTimer val)

Disassembly:
	0x01D7A680 BL 0x3C3E7F0
	0x01D7A684 MOV X0, X19
	0x01D7A688 MOV V0.16B, V8.16B

ISIL:
	001 Move W8, W2
	002 ShiftRight W8, 30
	003 And W8, W8, 0x1FFFFFFF
	004 Move [X1], W3
	005 Return 

Method: System.Int32 GetElementWordCount()

Disassembly:
	0x01D7A68C MOV X1, X31
	0x01D7A690 BL 0x3C3E880

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Int32 GetElementHashCode(Fusion.TickTimer val)

Disassembly:
	0x01D7A694 FCMP S8, S10
	0x01D7A698 CSET W8, NE
	0x01D7A69C FCMP S8, 0x0
	0x01D7A6A0 LDP X30, X19, [X31 + 0x20]
	0x01D7A6A4 LDP D9, D8, [X31 + 0x10]
	0x01D7A6A8 CSET W9, NE
	0x01D7A6AC AND W0, W8, W9, 0x0
	0x01D7A6B0 LDR V10, [X31], #0x30
	0x01D7A6B4 RET
	0x01D7A6B8 BL 0x1C16F20
	0x01D7A6BC SUB X31, X31, 0xA0
	0x01D7A6C0 STP X30, X21, [X31 + 0x80]
	0x01D7A6C4 STP X20, X19, [X31 + 0x90]
	0x01D7A6C8 MOV X1, X31
	0x01D7A6CC MOV X19, X0
	0x01D7A6D0 BL 0x3C32E90
	0x01D7A6D4 CBZ X0, 0x1D7A7D4
	0x01D7A6D8 ADD X8, X31, 0x40
	0x01D7A6DC MOV X1, X31
	0x01D7A6E0 BL 0x3C3F1C8
	0x01D7A6E4 LDP V0, V1, [X31 + 0x40]
	0x01D7A6E8 LDP V2, V3, [X31 + 0x60]
	0x01D7A6EC ADD X0, X31, 0x0
	0x01D7A6F0 MOV X1, X31
	0x01D7A6F4 STP V0, V1, [X31]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, 0x265F000
	007 Move X21, 0x237D000
	008 Move W8, [X20+2354]
	009 Move X21, [X21+976]
	010 Move X19, X1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x237D000
	016 Move X0, [X0+976]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2354], W8
	020 Move X8, [X21]
	021 Move TEMP, 0
	022 Not TEMP
	023 Move X9, TEMP
	024 Add X0, X31, 8
	025 Move X1, X31
	026 Move [X31+8], X8
	027 Move [X31+16], X9
	028 Move [X31+24], W19
	029 Call ValueType.GetHashCode, X0
	030 Move X20, [X31+48]
	031 Move X19, [X31+56]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Add X31, X31, 64
	035 Return X0

Method: Fusion.IElementReaderWriter`1<Fusion.TickTimer> GetInstance()

Disassembly:
	0x01D7A6F8 STP V2, V3, [X31 + 0x20]
	0x01D7A6FC BL 0x3C0D150
	0x01D7A700 FMOV S0, 1
	0x01D7A704 FMOV S1, W31
	0x01D7A708 FMOV S2, W31
	0x01D7A70C FMOV S3, 1
	0x01D7A710 MOV X0, X31
	0x01D7A714 BL 0x3C0D030
	0x01D7A718 ADRP X20, 0x265E000
	0x01D7A71C LDRB W8, [X20 + 0x783]
	0x01D7A720 CBNZ W8, 0x1D7A738
	0x01D7A724 ADRP X0, 0x2379000
	0x01D7A728 LDR X0, [X0 + 0x5A0]
	0x01D7A72C BL 0x1C16CF4
	0x01D7A730 MOVZ W8, 0x1
	0x01D7A734 STRB W8, [X20 + 0x783]
	0x01D7A738 ADRP X21, 0x2379000
	0x01D7A73C LDR X21, [X21 + 0x5A0]
	0x01D7A740 LDR V3, [X19 + 0x20]
	0x01D7A744 FMOV S4, 1
	0x01D7A748 FMOV S5, 1
	0x01D7A74C LDR X8, [X21]
	0x01D7A750 FADD S3, S3, S3
	0x01D7A754 MOV X0, X31
	0x01D7A758 LDR X8, [X8 + 0xB8]
	0x01D7A75C LDP S0, S1, [X8]
	0x01D7A760 LDR V2, [X8 + 0x8]
	0x01D7A764 BL 0x3C0CCD8
	0x01D7A768 FMOV S0, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x265F000
	005 Move X19, 0x237D000
	006 Move W8, [X20+2355]
	007 Move X19, [X19+984]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x237D000
	013 Move X0, [X0+984]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2355], W8
	017 Move X0, [X19]
	018 Move X8, [X0+184]
	019 Move X8, [X8]
	020 Compare X8, 0
	021 JumpIfNotEqual {31}
	022 Add X1, X31, 8
	023 Move [X31+8], W31
	024 Call 0x1C17E04
	025 Move X8, [X19]
	026 Move X8, [X8+184]
	027 Move [X8], X0
	028 Move X8, [X19]
	029 Move X8, [X8+184]
	030 Move X8, [X8]
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X0, X8
	034 Move X30, [X31+32]
	035 Return X0

