Type: Fusion.CodeGen.ReaderWriter@Fusion_TickTimer

Method: Fusion.TickTimer Read(System.Byte* data, System.Int32 index)

Disassembly:
	0x01D16BE8 MOV X0, X25
	0x01D16BEC MOV X2, X28
	0x01D16BF0 BL 0x2D9B470

ISIL:
	001 Move W8, W2
	002 ShiftRight W8, 30
	003 And W8, W8, 0x1FFFFFFF
	004 Move W0, [X1]
	005 Return X0

Method: Fusion.TickTimer ReadRef(System.Byte* data, System.Int32 index)

Disassembly:
	0x01D16BF4 LDR W8, [X26 + 0x18]
	0x01D16BF8 ADD W27, W27, 0x1
	0x01D16BFC CMP W27, W8

ISIL:
	001 Move W8, W2
	002 ShiftRight W8, 30
	003 And W8, W8, 0x1FFFFFFF
	004 Add X0, X1, W8
	005 Return X0

Method: System.Void Write(System.Byte* data, System.Int32 index, Fusion.TickTimer val)

Disassembly:
	0x01D16C00 B.LT 0x1D16A90
	0x01D16C04 ADRP X8, 0x223B000
	0x01D16C08 LDR X8, [X8 + 0x738]

ISIL:
	001 Move W8, W2
	002 ShiftRight W8, 30
	003 And W8, W8, 0x1FFFFFFF
	004 Move [X1], W3
	005 Return 

Method: System.Int32 GetElementWordCount()

Disassembly:
	0x01D16C0C LDR X0, [X8]
	0x01D16C10 BL 0x1B6EA0C

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Int32 GetElementHashCode(Fusion.TickTimer val)

Disassembly:
	0x01D16C14 MOV X26, X0
	0x01D16C18 MOV X1, X31
	0x01D16C1C BL 0x3A7F844
	0x01D16C20 LDR X8, [X31 + 0x20]
	0x01D16C24 LDR W8, [X8 + 0x20]
	0x01D16C28 CMP W23, W8
	0x01D16C2C B.GT 0x1D16C4C
	0x01D16C30 CBZ X26, 0x1D174E4
	0x01D16C34 MOV X0, X26
	0x01D16C38 MOV W1, W31
	0x01D16C3C MOV X2, X31
	0x01D16C40 BL 0x3A7F8C4
	0x01D16C44 LDR X8, [X31 + 0x20]
	0x01D16C48 LDR W8, [X8 + 0x20]
	0x01D16C4C CMP W23, W8
	0x01D16C50 B.LE 0x1D16C68
	0x01D16C54 CBZ X26, 0x1D174E0
	0x01D16C58 MOVZ W1, 0x1
	0x01D16C5C MOV X0, X26
	0x01D16C60 MOV X2, X31
	0x01D16C64 BL 0x3A7F8C4
	0x01D16C68 CBZ X25, 0x1D174D8
	0x01D16C6C ADRP X8, 0x223B000
	0x01D16C70 LDR X8, [X8 + 0x6E0]
	0x01D16C74 LDR X1, [X8]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, 0x250E000
	007 Move X21, 0x223C000
	008 Move W8, [X20+2048]
	009 Move X21, [X21+1496]
	010 Move X19, X1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x223C000
	016 Move X0, [X0+1496]
	017 Call 0x1B6F7F0
	018 Move W8, 1
	019 Move [X20+2048], W8
	020 Move X8, [X21]
	021 Move TEMP, 0
	022 Not TEMP
	023 Move X9, TEMP
	024 Add X0, X31, 8
	025 Move X1, X31
	026 Move [X31+8], X8
	027 Move [X31+16], X9
	028 Move [X31+24], W19
	029 Call ValueType.GetHashCode, X0
	030 Move X20, [X31+48]
	031 Move X19, [X31+56]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Add X31, X31, 64
	035 Return X0

Method: Fusion.IElementReaderWriter`1<Fusion.TickTimer> GetInstance()

Disassembly:
	0x01D16C78 MOV X0, X25
	0x01D16C7C ADRP X25, 0x223B000
	0x01D16C80 LDR X25, [X25 + 0x658]
	0x01D16C84 BL 0x2D9D9A4
	0x01D16C88 MOV X1, X0
	0x01D16C8C CBZ X26, 0x1D174D0
	0x01D16C90 MOVZ W2, 0x1
	0x01D16C94 MOVZ W3, 0x1
	0x01D16C98 MOV X0, X26
	0x01D16C9C MOV X4, X31
	0x01D16CA0 BL 0x3A82A18
	0x01D16CA4 CBZ X24, 0x1D174DC
	0x01D16CA8 ADRP X9, 0x223B000
	0x01D16CAC LDR W10, [X24 + 0x1C]
	0x01D16CB0 LDR X8, [X24 + 0x10]
	0x01D16CB4 LDR X9, [X9 + 0x6A8]
	0x01D16CB8 ADD W10, W10, 0x1
	0x01D16CBC LDR X9, [X9]
	0x01D16CC0 STR W10, [X24 + 0x1C]
	0x01D16CC4 CBZ X8, 0x1D174D4
	0x01D16CC8 LDRSW X10, [X24 + 0x18]
	0x01D16CCC LDR W11, [X8 + 0x18]
	0x01D16CD0 CMP W10, W11
	0x01D16CD4 B.CS 0x1D16CEC
	0x01D16CD8 ADD W9, W10, 0x1
	0x01D16CDC ADD X8, X8, X10, 0x3, LSL
	0x01D16CE0 STR W9, [X24 + 0x18]
	0x01D16CE4 STR X26, [X8 + 0x20]
	0x01D16CE8 B 0x1D16A44

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x250E000
	005 Move X19, 0x223C000
	006 Move W8, [X20+2049]
	007 Move X19, [X19+1504]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x223C000
	013 Move X0, [X0+1504]
	014 Call 0x1B6F7F0
	015 Move W8, 1
	016 Move [X20+2049], W8
	017 Move X0, [X19]
	018 Move X8, [X0+184]
	019 Move X8, [X8]
	020 Compare X8, 0
	021 JumpIfNotEqual {31}
	022 Add X1, X31, 8
	023 Move [X31+8], W31
	024 Call 0x1B6F900
	025 Move X8, [X19]
	026 Move X8, [X8+184]
	027 Move [X8], X0
	028 Move X8, [X19]
	029 Move X8, [X8+184]
	030 Move X8, [X8]
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X0, X8
	034 Move X30, [X31+32]
	035 Return X0

