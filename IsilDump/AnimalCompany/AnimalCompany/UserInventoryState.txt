Type: AnimalCompany.UserInventoryState

Method: SpatialSys.ObservableState.StatePrimitiveSet`1<System.String> get_avatarItems()

Disassembly:
	0x01D4F824 B 0x1D363F0
	0x01D4F828 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Void set_avatarItems(SpatialSys.ObservableState.StatePrimitiveSet`1<System.String> value)

Disassembly:
	0x01D4F82C LDP X22, X21, [X31 + 0x20]
	0x01D4F830 LDP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X0+72], X1
	002 Return 

Method: System.Void FromApiModel(System.String[] apiModelRaw)

Disassembly:
	0x01D4F834 LDR X30, [X31], #0x40
	0x01D4F838 RET
	0x01D4F83C BL 0x1C16F20
	0x01D4F840 BL 0x1C16F28
	0x01D4F844 BL 0x1C16F44
	0x01D4F848 MOV X1, X31
	0x01D4F84C BL 0x1C16DEC
	0x01D4F850 STP X30, X21, [X31 - 0x20]!
	0x01D4F854 STP X20, X19, [X31 + 0x10]
	0x01D4F858 ADRP X21, 0x2689000
	0x01D4F85C LDRB W8, [X21 + 0x7AC]
	0x01D4F860 MOV X20, X1
	0x01D4F864 MOV X19, X0
	0x01D4F868 TBNZ X8, 0x0, 0x1D4F8A4
	0x01D4F86C ADRP X0, 0x23A4000
	0x01D4F870 LDR X0, [X0 + 0x648]
	0x01D4F874 BL 0x1C16CF4
	0x01D4F878 ADRP X0, 0x23A4000
	0x01D4F87C LDR X0, [X0 + 0x958]
	0x01D4F880 BL 0x1C16CF4
	0x01D4F884 ADRP X0, 0x23A5000
	0x01D4F888 LDR X0, [X0 + 0xB50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x268A000
	006 Move W8, [X21+1951]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x23A5000
	014 Move X0, [X0+3624]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1951], W8
	018 Move X0, [X20+72]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x23A5000
	022 Move X8, [X8+3624]
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call StatePrimitiveSet`1<Object>.AssignValues, X0, X1
	030 Return 
	031 Call 0x1C17F20

Method: System.Void FromApiModel(AnimalCompany.API.ApiUserInventory apiModel)

Disassembly:
	0x01D4DE48 CMP W8, W9
	0x01D4DE4C B.NE 0x1D4DD04
	0x01D4DE50 ADRP X8, 0x23A7000
	0x01D4DE54 LDR X0, [X20 + 0x48]
	0x01D4DE58 LDR X8, [X8 + 0x1F8]
	0x01D4DE5C LDR X1, [X8]
	0x01D4DE60 BL 0x265C594
	0x01D4DE64 MOV X1, X0
	0x01D4DE68 ADRP X8, 0x23A6000
	0x01D4DE6C LDR X8, [X8 + 0x900]
	0x01D4DE70 LDR X2, [X8]
	0x01D4DE74 MOV X0, X23
	0x01D4DE78 BL 0x265C3F4
	0x01D4DE7C MOV X22, X31
	0x01D4DE80 MOVZ W23, 0x7
	0x01D4DE84 CBNZ X21, 0x1D4DE98
	0x01D4DE88 B 0x1D4DEF8
	0x01D4DE8C MOV X22, X31
	0x01D4DE90 MOVZ W23, 0x8
	0x01D4DE94 CBZ X21, 0x1D4DEF8
	0x01D4DE98 ADRP X10, 0x23A6000
	0x01D4DE9C LDR X8, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x268C000
	006 Move W8, [X21+1952]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x23A7000
	014 Move X0, [X0+3624]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1952], W8
	018 Move X0, [X20+72]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x23A7000
	022 Move X8, [X8+3624]
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call StatePrimitiveSet`1<Object>.AssignValues, X0, X1
	030 Return 
	031 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01D4F88C BL 0x1C16CF4
	0x01D4F890 ADRP X0, 0x23A5000

ISIL:
	001 Move X1, X31
	002 Call StateObject..ctor, X0
	003 Return 

