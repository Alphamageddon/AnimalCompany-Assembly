Type: AnimalCompany.AuthCommands/<LoginAsync>d__4

Method: System.Void MoveNext()

Disassembly:
	0x01D4B2B4 STP V0, V0, [X24 + 0x40]
	0x01D4B2B8 STP V0, V0, [X24 + 0x20]
	0x01D4B2BC STR W8, [X31 + 0xA0]
	0x01D4B2C0 MOVZ W22, 0x3
	0x01D4B2C4 B 0x1D4A8DC
	0x01D4B2C8 MOVZ W0, 0x8
	0x01D4B2CC BL 0x3EB1AF0
	0x01D4B2D0 LDR X8, [X20]
	0x01D4B2D4 STR X8, [X0]
	0x01D4B2D8 ADRP X1, 0x2169000
	0x01D4B2DC ADD X1, X1, 0xE58
	0x01D4B2E0 MOV X2, X31
	0x01D4B2E4 BL 0x3EB1B00
	0x01D4B2E8 B 0x1D4B614
	0x01D4B2EC B 0x1D4ADDC
	0x01D4B2F0 B 0x1D4ADDC
	0x01D4B2F4 MOV X21, X1
	0x01D4B2F8 MOV X20, X0
	0x01D4B2FC BL 0x3EB1AE0
	0x01D4B300 B 0x1D4B420
	0x01D4B304 B 0x1D4ADDC
	0x01D4B308 MOV X8, X1
	0x01D4B30C MOV X20, X0
	0x01D4B310 B 0x1D4B424
	0x01D4B314 MOV X20, X0
	0x01D4B318 MOV W8, W1
	0x01D4B31C CMP W1, 0x1
	0x01D4B320 B.NE 0x1D4B424
	0x01D4B324 MOV X0, X20
	0x01D4B328 BL 0x3EB1AD0
	0x01D4B32C MOV X20, X0
	0x01D4B330 ADRP X0, 0x23A8000
	0x01D4B334 LDR X0, [X0 + 0x7D0]
	0x01D4B338 BL 0x1C16D08
	0x01D4B33C LDR X8, [X20]
	0x01D4B340 LDR X1, [X8]
	0x01D4B344 BL 0x1C17270
	0x01D4B348 TBZ X0, 0x0, 0x1D4B3EC
	0x01D4B34C LDR X8, [X20]
	0x01D4B350 LDRSW X9, [X31 + 0xA0]
	0x01D4B354 ADD X20, X31, 0x88
	0x01D4B358 STR X8, [X20, X9, LSL #3]
	0x01D4B35C ADD W8, W9, 0x1
	0x01D4B360 STR W8, [X31 + 0xA0]
	0x01D4B364 BL 0x3EB1AE0
	0x01D4B368 LDR W8, [X31 + 0xA0]
	0x01D4B36C SUB W8, W8, 0x1
	0x01D4B370 LDR X20, [X20, W8, SXTW]
	0x01D4B374 ADRP X0, 0x23A8000
	0x01D4B378 LDR X0, [X0 + 0x788]
	0x01D4B37C BL 0x1C16D08
	0x01D4B380 LDR W8, [X0 + 0xE0]
	0x01D4B384 CBNZ W8, 0x1D4B38C
	0x01D4B388 BL 0x1C16DFC
	0x01D4B38C ADRP X0, 0x23A9000
	0x01D4B390 LDR X0, [X0 + 0x9B8]
	0x01D4B394 BL 0x1C16D08
	0x01D4B398 MOV X21, X0
	0x01D4B39C ADRP X0, 0x23A9000
	0x01D4B3A0 LDR X0, [X0 + 0x718]
	0x01D4B3A4 BL 0x1C16D08
	0x01D4B3A8 MOV X22, X0
	0x01D4B3AC ADRP X0, 0x23A9000
	0x01D4B3B0 LDR X0, [X0 + 0x978]
	0x01D4B3B4 BL 0x1C16D08
	0x01D4B3B8 MOV X5, X0
	0x01D4B3BC MOVZ W0, 0x800
	0x01D4B3C0 MOVZ W6, 0x6B
	0x01D4B3C4 MOV X1, X21
	0x01D4B3C8 MOV X2, X20
	0x01D4B3CC MOV X3, X31
	0x01D4B3D0 MOV X4, X22
	0x01D4B3D4 MOV X7, X31
	0x01D4B3D8 BL 0x35C2674
	0x01D4B3DC LDR W8, [X31 + 0xA0]
	0x01D4B3E0 SUB W8, W8, 0x1
	0x01D4B3E4 STR W8, [X31 + 0xA0]
	0x01D4B3E8 B 0x1D4A86C
	0x01D4B3EC MOVZ W0, 0x8
	0x01D4B3F0 BL 0x3EB1AF0
	0x01D4B3F4 LDR X8, [X20]
	0x01D4B3F8 STR X8, [X0]
	0x01D4B3FC ADRP X1, 0x2169000
	0x01D4B400 ADD X1, X1, 0xE58
	0x01D4B404 MOV X2, X31
	0x01D4B408 BL 0x3EB1B00
	0x01D4B40C B 0x1D4B614
	0x01D4B410 B 0x1D4ADDC
	0x01D4B414 MOV X21, X1
	0x01D4B418 MOV X20, X0
	0x01D4B41C BL 0x3EB1AE0
	0x01D4B420 MOV W8, W21
	0x01D4B424 CMP W8, 0x1
	0x01D4B428 B.NE 0x1D4B558
	0x01D4B42C MOV X0, X20
	0x01D4B430 BL 0x3EB1AD0
	0x01D4B434 MOV X20, X0
	0x01D4B438 ADRP X0, 0x23A8000
	0x01D4B43C LDR X0, [X0 + 0x7D0]
	0x01D4B440 BL 0x1C16D08
	0x01D4B444 LDR X8, [X20]
	0x01D4B448 LDR X1, [X8]
	0x01D4B44C BL 0x1C17270
	0x01D4B450 TBZ X0, 0x0, 0x1D4B510
	0x01D4B454 LDR X8, [X20]
	0x01D4B458 LDRSW X9, [X31 + 0xA0]
	0x01D4B45C ADD X20, X31, 0x88
	0x01D4B460 STR X8, [X20, X9, LSL #3]
	0x01D4B464 ADD W8, W9, 0x1
	0x01D4B468 STR W8, [X31 + 0xA0]
	0x01D4B46C BL 0x3EB1AE0
	0x01D4B470 LDR W8, [X31 + 0xA0]
	0x01D4B474 SUB W8, W8, 0x1
	0x01D4B478 LDR X20, [X20, W8, SXTW]
	0x01D4B47C ADRP X0, 0x23A8000
	0x01D4B480 LDR X0, [X0 + 0x788]
	0x01D4B484 BL 0x1C16D08
	0x01D4B488 LDR W8, [X0 + 0xE0]
	0x01D4B48C CBNZ W8, 0x1D4B494
	0x01D4B490 BL 0x1C16DFC
	0x01D4B494 ADRP X0, 0x23A9000
	0x01D4B498 LDR X0, [X0 + 0x9C0]
	0x01D4B49C BL 0x1C16D08
	0x01D4B4A0 MOV X21, X0
	0x01D4B4A4 ADRP X0, 0x23A9000
	0x01D4B4A8 LDR X0, [X0 + 0x718]
	0x01D4B4AC BL 0x1C16D08
	0x01D4B4B0 MOV X22, X0
	0x01D4B4B4 ADRP X0, 0x23A9000
	0x01D4B4B8 LDR X0, [X0 + 0x978]
	0x01D4B4BC BL 0x1C16D08
	0x01D4B4C0 MOV X5, X0
	0x01D4B4C4 MOVZ W0, 0x800
	0x01D4B4C8 MOVZ W6, 0x94
	0x01D4B4CC MOV X1, X21
	0x01D4B4D0 MOV X2, X20
	0x01D4B4D4 MOV X3, X31
	0x01D4B4D8 MOV X4, X22
	0x01D4B4DC MOV X7, X31
	0x01D4B4E0 BL 0x35C2674
	0x01D4B4E4 LDR W8, [X31 + 0xA0]
	0x01D4B4E8 MOVI V0.2D, 0x0
	0x01D4B4EC MOV W21, W31
	0x01D4B4F0 STR X31, [X31 + 0x150]
	0x01D4B4F4 SUB W8, W8, 0x1
	0x01D4B4F8 STP V0, V0, [X24 + 0x60]
	0x01D4B4FC STP V0, V0, [X24 + 0x40]
	0x01D4B500 STP V0, V0, [X24 + 0x20]
	0x01D4B504 STR W8, [X31 + 0xA0]
	0x01D4B508 MOVZ W22, 0x2
	0x01D4B50C B 0x1D4A8DC
	0x01D4B510 MOVZ W0, 0x8
	0x01D4B514 BL 0x3EB1AF0
	0x01D4B518 LDR X8, [X20]
	0x01D4B51C STR X8, [X0]
	0x01D4B520 ADRP X1, 0x2169000
	0x01D4B524 ADD X1, X1, 0xE58
	0x01D4B528 MOV X2, X31
	0x01D4B52C BL 0x3EB1B00
	0x01D4B530 B 0x1D4B614
	0x01D4B534 B 0x1D4B550
	0x01D4B538 MOV X21, X1
	0x01D4B53C MOV X20, X0
	0x01D4B540 BL 0x3EB1AE0
	0x01D4B544 MOV W8, W21
	0x01D4B548 B 0x1D4B558
	0x01D4B54C B 0x1D4ADDC
	0x01D4B550 MOV X20, X0
	0x01D4B554 MOV W8, W1
	0x01D4B558 MOVZ W9, 0x1
	0x01D4B55C CMP W8, W9
	0x01D4B560 B.NE 0x1D4B61C
	0x01D4B564 MOV X0, X20
	0x01D4B568 BL 0x3EB1AD0
	0x01D4B56C MOV X20, X0
	0x01D4B570 ADRP X0, 0x23A8000
	0x01D4B574 LDR X0, [X0 + 0x7D0]
	0x01D4B578 BL 0x1C16D08
	0x01D4B57C LDR X8, [X20]
	0x01D4B580 LDR X1, [X8]
	0x01D4B584 BL 0x1C17270
	0x01D4B588 TBZ X0, 0x0, 0x1D4B5F4
	0x01D4B58C LDR X8, [X20]
	0x01D4B590 LDRSW X9, [X31 + 0xA0]
	0x01D4B594 ADD X20, X31, 0x88
	0x01D4B598 STR X8, [X20, X9, LSL #3]
	0x01D4B59C ADD W8, W9, 0x1
	0x01D4B5A0 STR W8, [X31 + 0xA0]
	0x01D4B5A4 BL 0x3EB1AE0
	0x01D4B5A8 LDR W8, [X31 + 0xA0]
	0x01D4B5AC ADRP X0, 0x23A8000
	0x01D4B5B0 SUB W8, W8, 0x1
	0x01D4B5B4 LDR X20, [X20, W8, SXTW]
	0x01D4B5B8 MOVN W8, 0x1
	0x01D4B5BC STR W8, [X19], #0x8
	0x01D4B5C0 LDR X0, [X0 + 0xA68]
	0x01D4B5C4 BL 0x1C16D08
	0x01D4B5C8 LDR W8, [X0 + 0xE0]
	0x01D4B5CC CBNZ W8, 0x1D4B5D4
	0x01D4B5D0 BL 0x1C16DFC
	0x01D4B5D4 ADRP X0, 0x23A9000
	0x01D4B5D8 LDR X0, [X0 + 0x9C8]
	0x01D4B5DC BL 0x1C16D08
	0x01D4B5E0 MOV X2, X0
	0x01D4B5E4 MOV X0, X19
	0x01D4B5E8 MOV X1, X20
	0x01D4B5EC BL 0x263C08C
	0x01D4B5F0 B 0x1D4A938
	0x01D4B5F4 MOVZ W0, 0x8
	0x01D4B5F8 BL 0x3EB1AF0
	0x01D4B5FC LDR X8, [X20]
	0x01D4B600 STR X8, [X0]
	0x01D4B604 ADRP X1, 0x2169000
	0x01D4B608 ADD X1, X1, 0xE58
	0x01D4B60C MOV X2, X31
	0x01D4B610 BL 0x3EB1B00
	0x01D4B614 MOV X20, X0
	0x01D4B618 BL 0x3EB1AE0
	0x01D4B61C MOV X0, X20
	0x01D4B620 BL 0x1D2C690
	0x01D4B624 BL 0x1990590
	0x01D4B628 STR X30, [X31 - 0x30]!
	0x01D4B62C STP X22, X21, [X31 + 0x10]
	0x01D4B630 STP X20, X19, [X31 + 0x20]
	0x01D4B634 ADRP X22, 0x268D000
	0x01D4B638 ADRP X21, 0x23A8000
	0x01D4B63C LDRB W8, [X22 + 0x782]
	0x01D4B640 LDR X21, [X21 + 0xA68]
	0x01D4B644 MOV X19, X1
	0x01D4B648 MOV X20, X0
	0x01D4B64C TBNZ X8, 0x0, 0x1D4B670
	0x01D4B650 ADRP X0, 0x23A9000
	0x01D4B654 LDR X0, [X0 + 0x9D0]
	0x01D4B658 BL 0x1C16CF4
	0x01D4B65C ADRP X0, 0x23A8000
	0x01D4B660 LDR X0, [X0 + 0xA68]
	0x01D4B664 BL 0x1C16CF4
	0x01D4B668 MOVZ W8, 0x1
	0x01D4B66C STRB W8, [X22 + 0x782]
	0x01D4B670 LDR X0, [X21]
	0x01D4B674 ADRP X21, 0x23A9000
	0x01D4B678 LDR W8, [X0 + 0xE0]
	0x01D4B67C LDR X21, [X21 + 0x9D0]
	0x01D4B680 CBNZ W8, 0x1D4B688
	0x01D4B684 BL 0x1C16DFC
	0x01D4B688 LDR X2, [X21]
	0x01D4B68C ADD X0, X20, 0x8
	0x01D4B690 MOV X1, X19
	0x01D4B694 LDP X20, X19, [X31 + 0x20]
	0x01D4B698 LDP X22, X21, [X31 + 0x10]
	0x01D4B69C LDR X30, [X31], #0x30
	0x01D4B6A0 B 0x263BD50
	0x01D4B6A4 STR X30, [X31 - 0x20]!
	0x01D4B6A8 STP X20, X19, [X31 + 0x10]
	0x01D4B6AC MOV X19, X1
	0x01D4B6B0 MOV X1, X31
	0x01D4B6B4 MOV X20, X0
	0x01D4B6B8 BL 0x1D36B98
	0x01D4B6BC ADD X0, X20, 0x18
	0x01D4B6C0 MOVZ W2, 0x70
	0x01D4B6C4 MOV X1, X19
	0x01D4B6C8 BL 0x3EB1B30
	0x01D4B6CC LDP X20, X19, [X31 + 0x10]
	0x01D4B6D0 LDR X30, [X31], #0x20
	0x01D4B6D4 RET
	0x01D4B6D8 SUB X31, X31, 0x190
	0x01D4B6DC STR X29, [X31 + 0x140]
	0x01D4B6E0 STP X30, X25, [X31 + 0x150]
	0x01D4B6E4 STP X24, X23, [X31 + 0x160]
	0x01D4B6E8 STP X22, X21, [X31 + 0x170]
	0x01D4B6EC STP X20, X19, [X31 + 0x180]
	0x01D4B6F0 ADRP X22, 0x268D000
	0x01D4B6F4 ADRP X21, 0x23A9000
	0x01D4B6F8 LDRB W8, [X22 + 0x794]
	0x01D4B6FC LDR X21, [X21 + 0x550]
	0x01D4B700 MOV X19, X1
	0x01D4B704 MOV X20, X0
	0x01D4B708 TBNZ X8, 0x0, 0x1D4B780
	0x01D4B70C ADRP X0, 0x23A8000
	0x01D4B710 LDR X0, [X0 + 0x970]
	0x01D4B714 BL 0x1C16CF4
	0x01D4B718 ADRP X0, 0x23A9000
	0x01D4B71C LDR X0, [X0 + 0x918]
	0x01D4B720 BL 0x1C16CF4
	0x01D4B724 ADRP X0, 0x23A8000
	0x01D4B728 LDR X0, [X0 + 0xF28]
	0x01D4B72C BL 0x1C16CF4
	0x01D4B730 ADRP X0, 0x23A8000
	0x01D4B734 LDR X0, [X0 + 0x820]
	0x01D4B738 BL 0x1C16CF4
	0x01D4B73C ADRP X0, 0x23A9000
	0x01D4B740 LDR X0, [X0 + 0x178]
	0x01D4B744 BL 0x1C16CF4
	0x01D4B748 ADRP X0, 0x23A8000
	0x01D4B74C LDR X0, [X0 + 0xE30]
	0x01D4B750 BL 0x1C16CF4
	0x01D4B754 ADRP X0, 0x23A8000
	0x01D4B758 LDR X0, [X0 + 0x910]
	0x01D4B75C BL 0x1C16CF4
	0x01D4B760 ADRP X0, 0x23A9000
	0x01D4B764 LDR X0, [X0 + 0x550]
	0x01D4B768 BL 0x1C16CF4
	0x01D4B76C ADRP X0, 0x23A9000
	0x01D4B770 LDR X0, [X0 + 0x558]
	0x01D4B774 BL 0x1C16CF4
	0x01D4B778 MOVZ W8, 0x1
	0x01D4B77C STRB W8, [X22 + 0x794]
	0x01D4B780 LDR X0, [X21]
	0x01D4B784 LDR X22, [X20 + 0x20]
	0x01D4B788 BL 0x1C16F10
	0x01D4B78C MOV X1, X31
	0x01D4B790 MOV X21, X0
	0x01D4B794 BL 0x1D36B98
	0x01D4B798 LDR X8, [X21]
	0x01D4B79C STR X22, [X21 + 0x18]
	0x01D4B7A0 MOV X0, X21
	0x01D4B7A4 MOV X1, X19
	0x01D4B7A8 LDP X9, X2, [X8 + 0x1A8]
	0x01D4B7AC BLR X9
	0x01D4B7B0 CBZ X19, 0x1D4BB4C
	0x01D4B7B4 LDR X8, [X19 + 0xB8]
	0x01D4B7B8 CBZ X8, 0x1D4BB4C
	0x01D4B7BC LDR X22, [X8 + 0x70]
	0x01D4B7C0 ADD X21, X20, 0x28
	0x01D4B7C4 ADD X0, X31, 0xF0
	0x01D4B7C8 MOVZ W2, 0x50
	0x01D4B7CC MOV X1, X21
	0x01D4B7D0 BL 0x3EB1AC0
	0x01D4B7D4 LDR X23, [X20 + 0x20]
	0x01D4B7D8 CBZ X23, 0x1D4BB4C
	0x01D4B7DC ADRP X24, 0x23A9000
	0x01D4B7E0 LDR X8, [X23]
	0x01D4B7E4 LDR X24, [X24 + 0x918]
	0x01D4B7E8 LDRH W9, [X8 + 0x12E]
	0x01D4B7EC LDR X1, [X24]
	0x01D4B7F0 CBZ X9, 0x1D4B814
	0x01D4B7F4 LDR X10, [X8 + 0xB0]
	0x01D4B7F8 ADD X10, X10, 0x8
	0x01D4B7FC LDUR X11, [X10 - 0x8]
	0x01D4B800 CMP X11, X1
	0x01D4B804 B.EQ 0x1D4B824
	0x01D4B808 SUBS X9, X9, 0x1
	0x01D4B80C ADD X10, X10, 0x10
	0x01D4B810 B.NE 0x1D4B7FC
	0x01D4B814 MOVZ W2, 0x4
	0x01D4B818 MOV X0, X23
	0x01D4B81C BL 0x1C5C788
	0x01D4B820 B 0x1D4B834
	0x01D4B824 LDR W9, [X10]
	0x01D4B828 ADD W9, W9, 0x4
	0x01D4B82C ADD X8, X8, W9, 0x4, SXTW
	0x01D4B830 ADD X0, X8, 0x138
	0x01D4B834 LDP X8, X1, [X0]
	0x01D4B838 MOV X0, X23
	0x01D4B83C BLR X8
	0x01D4B840 CBZ X0, 0x1D4BB4C
	0x01D4B844 ADRP X25, 0x23A8000
	0x01D4B848 LDR X8, [X0]
	0x01D4B84C LDR X25, [X25 + 0xF28]
	0x01D4B850 MOV X23, X0
	0x01D4B854 LDRH W9, [X8 + 0x12E]
	0x01D4B858 LDR X1, [X25]
	0x01D4B85C CBZ X9, 0x1D4B880
	0x01D4B860 LDR X10, [X8 + 0xB0]
	0x01D4B864 ADD X10, X10, 0x8
	0x01D4B868 LDUR X11, [X10 - 0x8]
	0x01D4B86C CMP X11, X1
	0x01D4B870 B.EQ 0x1D4B890
	0x01D4B874 SUBS X9, X9, 0x1
	0x01D4B878 ADD X10, X10, 0x10
	0x01D4B87C B.NE 0x1D4B868
	0x01D4B880 MOVZ W2, 0x9
	0x01D4B884 MOV X0, X23
	0x01D4B888 BL 0x1C5C788
	0x01D4B88C B 0x1D4B8A0
	0x01D4B890 LDR W9, [X10]
	0x01D4B894 ADD W9, W9, 0x9
	0x01D4B898 ADD X8, X8, W9, 0x4, SXTW
	0x01D4B89C ADD X0, X8, 0x138
	0x01D4B8A0 LDP X8, X1, [X0]
	0x01D4B8A4 MOV X0, X23
	0x01D4B8A8 BLR X8
	0x01D4B8AC CBZ X22, 0x1D4BB4C
	0x01D4B8B0 MOV X23, X0
	0x01D4B8B4 ADD X0, X31, 0xA0
	0x01D4B8B8 ADD X1, X31, 0xF0
	0x01D4B8BC MOVZ W2, 0x50
	0x01D4B8C0 BL 0x3EB1AC0
	0x01D4B8C4 ADD X1, X31, 0xA0
	0x01D4B8C8 MOV X0, X22
	0x01D4B8CC MOV X2, X23
	0x01D4B8D0 BL 0x1D4BB78
	0x01D4B8D4 LDR X8, [X19 + 0xB8]
	0x01D4B8D8 CBZ X8, 0x1D4BB4C
	0x01D4B8DC LDR X22, [X8 + 0x78]
	0x01D4B8E0 ADD X0, X31, 0x50
	0x01D4B8E4 MOVZ W2, 0x50
	0x01D4B8E8 MOV X1, X21
	0x01D4B8EC BL 0x3EB1AC0
	0x01D4B8F0 LDR X21, [X20 + 0x20]
	0x01D4B8F4 CBZ X21, 0x1D4BB4C
	0x01D4B8F8 LDR X8, [X21]
	0x01D4B8FC LDR X1, [X24]
	0x01D4B900 LDRH W9, [X8 + 0x12E]
	0x01D4B904 CBZ X9, 0x1D4B928
	0x01D4B908 LDR X10, [X8 + 0xB0]
	0x01D4B90C ADD X10, X10, 0x8
	0x01D4B910 LDUR X11, [X10 - 0x8]
	0x01D4B914 CMP X11, X1
	0x01D4B918 B.EQ 0x1D4B938
	0x01D4B91C SUBS X9, X9, 0x1
	0x01D4B920 ADD X10, X10, 0x10
	0x01D4B924 B.NE 0x1D4B910
	0x01D4B928 MOVZ W2, 0x4
	0x01D4B92C MOV X0, X21
	0x01D4B930 BL 0x1C5C788
	0x01D4B934 B 0x1D4B948
	0x01D4B938 LDR W9, [X10]
	0x01D4B93C ADD W9, W9, 0x4
	0x01D4B940 ADD X8, X8, W9, 0x4, SXTW
	0x01D4B944 ADD X0, X8, 0x138
	0x01D4B948 LDP X8, X1, [X0]
	0x01D4B94C MOV X0, X21
	0x01D4B950 BLR X8
	0x01D4B954 CBZ X0, 0x1D4BB4C
	0x01D4B958 LDR X8, [X0]
	0x01D4B95C LDR X1, [X25]
	0x01D4B960 MOV X21, X0
	0x01D4B964 LDRH W9, [X8 + 0x12E]
	0x01D4B968 CBZ X9, 0x1D4B98C
	0x01D4B96C LDR X10, [X8 + 0xB0]
	0x01D4B970 ADD X10, X10, 0x8
	0x01D4B974 LDUR X11, [X10 - 0x8]
	0x01D4B978 CMP X11, X1
	0x01D4B97C B.EQ 0x1D4B99C
	0x01D4B980 SUBS X9, X9, 0x1
	0x01D4B984 ADD X10, X10, 0x10
	0x01D4B988 B.NE 0x1D4B974
	0x01D4B98C MOVZ W2, 0x9
	0x01D4B990 MOV X0, X21
	0x01D4B994 BL 0x1C5C788
	0x01D4B998 B 0x1D4B9AC
	0x01D4B99C LDR W9, [X10]
	0x01D4B9A0 ADD W9, W9, 0x9
	0x01D4B9A4 ADD X8, X8, W9, 0x4, SXTW
	0x01D4B9A8 ADD X0, X8, 0x138
	0x01D4B9AC LDP X8, X1, [X0]
	0x01D4B9B0 MOV X0, X21
	0x01D4B9B4 BLR X8
	0x01D4B9B8 CBZ X22, 0x1D4BB4C
	0x01D4B9BC ADRP X23, 0x23A9000
	0x01D4B9C0 ADRP X24, 0x23A8000
	0x01D4B9C4 LDR X23, [X23 + 0x558]
	0x01D4B9C8 LDR X24, [X24 + 0x970]
	0x01D4B9CC MOV X21, X0
	0x01D4B9D0 ADD X0, X31, 0x0
	0x01D4B9D4 ADD X1, X31, 0x50
	0x01D4B9D8 MOVZ W2, 0x50
	0x01D4B9DC BL 0x3EB1AC0
	0x01D4B9E0 ADD X1, X31, 0x0
	0x01D4B9E4 MOV X0, X22
	0x01D4B9E8 MOV X2, X21
	0x01D4B9EC BL 0x1D4BB78
	0x01D4B9F0 LDR X0, [X23]
	0x01D4B9F4 LDR X21, [X20 + 0x78]
	0x01D4B9F8 BL 0x1C16F10
	0x01D4B9FC MOV X1, X31
	0x01D4BA00 MOV X20, X0
	0x01D4BA04 BL 0x1D36B98
	0x01D4BA08 LDR X8, [X20]
	0x01D4BA0C STR X21, [X20 + 0x18]
	0x01D4BA10 MOV X0, X20
	0x01D4BA14 MOV X1, X19
	0x01D4BA18 LDP X9, X2, [X8 + 0x1A8]
	0x01D4BA1C BLR X9
	0x01D4BA20 LDR X0, [X24]
	0x01D4BA24 LDR W8, [X0 + 0xE0]
	0x01D4BA28 CBNZ W8, 0x1D4BA30
	0x01D4BA2C BL 0x1C16DFC
	0x01D4BA30 ADRP X20, 0x23A8000
	0x01D4BA34 LDR X20, [X20 + 0xE30]
	0x01D4BA38 MOV X0, X31
	0x01D4BA3C BL 0x3C03278
	0x01D4BA40 TBZ X0, 0x0, 0x1D4BA60
	0x01D4BA44 LDR X8, [X19 + 0xB8]
	0x01D4BA48 CBZ X8, 0x1D4BB4C
	0x01D4BA4C LDR X0, [X8 + 0x98]
	0x01D4BA50 CBZ X0, 0x1D4BB4C
	0x01D4BA54 LDR X2, [X20]
	0x01D4BA58 MOVZ W1, 0x1
	0x01D4BA5C BL 0x26518D0
	0x01D4BA60 LDR X8, [X19 + 0xB8]
	0x01D4BA64 CBZ X8, 0x1D4BB4C
	0x01D4BA68 ADRP X9, 0x23A9000
	0x01D4BA6C LDR X9, [X9 + 0x178]
	0x01D4BA70 LDR X0, [X8 + 0x98]
	0x01D4BA74 LDR X1, [X9]
	0x01D4BA78 BL 0x2651A74
	0x01D4BA7C TBZ X0, 0x0, 0x1D4BA9C
	0x01D4BA80 LDR X8, [X19 + 0xA8]
	0x01D4BA84 CBZ X8, 0x1D4BB4C
	0x01D4BA88 LDR X0, [X8 + 0x58]
	0x01D4BA8C CBZ X0, 0x1D4BB4C
	0x01D4BA90 LDR W8, [X0 + 0x4C]
	0x01D4BA94 CMP W8, 0x3
	0x01D4BA98 B.LE 0x1D4BAFC
	0x01D4BA9C MOV X0, X31
	0x01D4BAA0 BL 0x3C30A30
	0x01D4BAA4 ADRP X8, 0xFFFFFFFFFED9F000
	0x01D4BAA8 LDR V1, [X8 + 0x330]
	0x01D4BAAC FCMP S0, S1
	0x01D4BAB0 B.PL 0x1D4BAD0
	0x01D4BAB4 LDR X8, [X19 + 0xA8]
	0x01D4BAB8 CBZ X8, 0x1D4BB4C
	0x01D4BABC LDR X0, [X8 + 0x58]
	0x01D4BAC0 CBZ X0, 0x1D4BB4C
	0x01D4BAC4 LDR W8, [X0 + 0x4C]
	0x01D4BAC8 CMP W8, 0x2
	0x01D4BACC B.LE 0x1D4BB0C
	0x01D4BAD0 ADRP X8, 0xFFFFFFFFFED9F000
	0x01D4BAD4 LDR V1, [X8 + 0x40C]
	0x01D4BAD8 FCMP S0, S1
	0x01D4BADC B.PL 0x1D4BB20
	0x01D4BAE0 LDR X8, [X19 + 0xA8]
	0x01D4BAE4 CBZ X8, 0x1D4BB4C
	0x01D4BAE8 LDR X0, [X8 + 0x58]
	0x01D4BAEC CBZ X0, 0x1D4BB4C
	0x01D4BAF0 LDR W8, [X0 + 0x4C]
	0x01D4BAF4 CMP W8, 0x3
	0x01D4BAF8 B.GT 0x1D4BB20
	0x01D4BAFC ADRP X8, 0x23A8000
	0x01D4BB00 LDR X8, [X8 + 0x910]
	0x01D4BB04 MOVZ W1, 0x4
	0x01D4BB08 B 0x1D4BB18
	0x01D4BB0C ADRP X8, 0x23A8000
	0x01D4BB10 LDR X8, [X8 + 0x910]
	0x01D4BB14 MOVZ W1, 0x3
	0x01D4BB18 LDR X2, [X8]
	0x01D4BB1C BL 0x265A224
	0x01D4BB20 LDR X0, [X19 + 0xB0]
	0x01D4BB24 CBZ X0, 0x1D4BB4C
	0x01D4BB28 LDR X2, [X20]
	0x01D4BB2C LDP X20, X19, [X31 + 0x180]
	0x01D4BB30 LDP X22, X21, [X31 + 0x170]
	0x01D4BB34 LDP X24, X23, [X31 + 0x160]
	0x01D4BB38 LDP X30, X25, [X31 + 0x150]
	0x01D4BB3C LDR X29, [X31 + 0x140]
	0x01D4BB40 MOVZ W1, 0x1
	0x01D4BB44 ADD X31, X31, 0x190
	0x01D4BB48 B 0x26518D0
	0x01D4BB4C BL 0x1C16F20
	0x01D4BB50 STR X30, [X31 - 0x20]!
	0x01D4BB54 STP X20, X19, [X31 + 0x10]
	0x01D4BB58 MOV X19, X1
	0x01D4BB5C MOV X1, X31
	0x01D4BB60 MOV X20, X0
	0x01D4BB64 BL 0x1D36B98
	0x01D4BB68 STR X19, [X20 + 0x18]
	0x01D4BB6C LDP X20, X19, [X31 + 0x10]
	0x01D4BB70 LDR X30, [X31], #0x20
	0x01D4BB74 RET
	0x01D4BB78 SUB X31, X31, 0x50
	0x01D4BB7C STP D9, D8, [X31 + 0x10]
	0x01D4BB80 STP X30, X23, [X31 + 0x20]
	0x01D4BB84 STP X22, X21, [X31 + 0x30]
	0x01D4BB88 STP X20, X19, [X31 + 0x40]
	0x01D4BB8C ADRP X23, 0x268D000
	0x01D4BB90 ADRP X22, 0x23A9000
	0x01D4BB94 LDRB W8, [X23 + 0x7A1]
	0x01D4BB98 LDR X22, [X22 + 0x9F0]
	0x01D4BB9C MOV X21, X2
	0x01D4BBA0 MOV X19, X1
	0x01D4BBA4 MOV X20, X0
	0x01D4BBA8 TBNZ X8, 0x0, 0x1D4BBFC
	0x01D4BBAC ADRP X0, 0x23A9000
	0x01D4BBB0 LDR X0, [X0 + 0x9F0]
	0x01D4BBB4 BL 0x1C16CF4
	0x01D4BBB8 ADRP X0, 0x23A9000
	0x01D4BBBC LDR X0, [X0 + 0x9F8]
	0x01D4BBC0 BL 0x1C16CF4
	0x01D4BBC4 ADRP X0, 0x23A8000
	0x01D4BBC8 LDR X0, [X0 + 0x920]
	0x01D4BBCC BL 0x1C16CF4
	0x01D4BBD0 ADRP X0, 0x23A9000
	0x01D4BBD4 LDR X0, [X0 + 0xA00]
	0x01D4BBD8 BL 0x1C16CF4
	0x01D4BBDC ADRP X0, 0x23A8000
	0x01D4BBE0 LDR X0, [X0 + 0x900]
	0x01D4BBE4 BL 0x1C16CF4
	0x01D4BBE8 ADRP X0, 0x23A9000
	0x01D4BBEC LDR X0, [X0 + 0xA08]
	0x01D4BBF0 BL 0x1C16CF4
	0x01D4BBF4 MOVZ W8, 0x1
	0x01D4BBF8 STRB W8, [X23 + 0x7A1]
	0x01D4BBFC LDR X0, [X22]
	0x01D4BC00 STP X31, X31, [X31]
	0x01D4BC04 LDR X22, [X20 + 0x48]
	0x01D4BC08 LDR W8, [X0 + 0xE0]
	0x01D4BC0C CBNZ W8, 0x1D4BC14
	0x01D4BC10 BL 0x1C16DFC
	0x01D4BC14 MOV X0, X31
	0x01D4BC18 BL 0x3361584
	0x01D4BC1C CBZ X22, 0x1D4BDE4
	0x01D4BC20 ADRP X8, 0x23A8000
	0x01D4BC24 LDR X8, [X8 + 0x920]
	0x01D4BC28 ADRP X23, 0x23A9000
	0x01D4BC2C MOV X1, X0
	0x01D4BC30 MOV X0, X22
	0x01D4BC34 LDR X2, [X8]
	0x01D4BC38 LDR X23, [X23 + 0xA08]
	0x01D4BC3C BL 0x2655E78
	0x01D4BC40 LDR X1, [X19]
	0x01D4BC44 LDR X0, [X23]
	0x01D4BC48 MOV X2, X31
	0x01D4BC4C BL 0x321B938
	0x01D4BC50 ADD X1, X31, 0x0
	0x01D4BC54 MOV X2, X31
	0x01D4BC58 BL 0x3C26394
	0x01D4BC5C TBZ X0, 0x0, 0x1D4BC84
	0x01D4BC60 LDR X0, [X20 + 0x50]
	0x01D4BC64 CBZ X0, 0x1D4BDE4
	0x01D4BC68 ADRP X8, 0x23A9000
	0x01D4BC6C LDP S2, S3, [X31 + 0x8]
	0x01D4BC70 LDP S0, S1, [X31]
	0x01D4BC74 LDR X8, [X8 + 0xA00]
	0x01D4BC78 LDR X1, [X8]
	0x01D4BC7C BL 0x2653AC4
	0x01D4BC80 B 0x1D4BD0C
	0x01D4BC84 MOV X0, X31
	0x01D4BC88 BL 0x3C3086C
	0x01D4BC8C CBZ X21, 0x1D4BDE4
	0x01D4BC90 LDR X8, [X21]
	0x01D4BC94 MOV X23, X1
	0x01D4BC98 MOV X22, X0
	0x01D4BC9C MOV X0, X21
	0x01D4BCA0 LDP X9, X1, [X8 + 0x158]
	0x01D4BCA4 BLR X9
	0x01D4BCA8 MOV X1, X31
	0x01D4BCAC BL 0x3C30830
	0x01D4BCB0 LDR X21, [X20 + 0x50]
	0x01D4BCB4 MOV X0, X31
	0x01D4BCB8 BL 0x3C30A30
	0x01D4BCBC MOV X0, X31
	0x01D4BCC0 MOV V8.16B, V0.16B
	0x01D4BCC4 BL 0x3C30A30
	0x01D4BCC8 MOV X0, X31
	0x01D4BCCC MOV V9.16B, V0.16B
	0x01D4BCD0 BL 0x3C30A30
	0x01D4BCD4 CBZ X21, 0x1D4BDE4
	0x01D4BCD8 ADRP X8, 0x23A9000
	0x01D4BCDC LDR X8, [X8 + 0xA00]
	0x01D4BCE0 MOV V2.16B, V0.16B
	0x01D4BCE4 FMOV S3, 1
	0x01D4BCE8 MOV X0, X21
	0x01D4BCEC LDR X1, [X8]
	0x01D4BCF0 MOV V0.16B, V8.16B
	0x01D4BCF4 MOV V1.16B, V9.16B
	0x01D4BCF8 BL 0x2653AC4
	0x01D4BCFC MOV X0, X22
	0x01D4BD00 MOV X1, X23
	0x01D4BD04 MOV X2, X31
	0x01D4BD08 BL 0x3C308EC
	0x01D4BD0C LDR X0, [X20 + 0x58]
	0x01D4BD10 CBZ X0, 0x1D4BDE4
	0x01D4BD14 ADRP X21, 0x23A8000
	0x01D4BD18 LDR X21, [X21 + 0x900]
	0x01D4BD1C LDR X1, [X19 + 0x8]
	0x01D4BD20 LDR X2, [X21]
	0x01D4BD24 BL 0x265C3F4
	0x01D4BD28 LDR X0, [X20 + 0x60]
	0x01D4BD2C CBZ X0, 0x1D4BDE4
	0x01D4BD30 LDR X1, [X19 + 0x10]
	0x01D4BD34 LDR X2, [X21]
	0x01D4BD38 BL 0x265C3F4
	0x01D4BD3C LDR X0, [X20 + 0x68]
	0x01D4BD40 CBZ X0, 0x1D4BDE4
	0x01D4BD44 LDR X1, [X19 + 0x18]
	0x01D4BD48 LDR X2, [X21]
	0x01D4BD4C BL 0x265C3F4
	0x01D4BD50 LDR X0, [X20 + 0x70]
	0x01D4BD54 CBZ X0, 0x1D4BDE4
	0x01D4BD58 LDR X1, [X19 + 0x20]
	0x01D4BD5C LDR X2, [X21]
	0x01D4BD60 BL 0x265C3F4
	0x01D4BD64 LDR X0, [X20 + 0x78]
	0x01D4BD68 CBZ X0, 0x1D4BDE4
	0x01D4BD6C LDR X1, [X19 + 0x28]
	0x01D4BD70 LDR X2, [X21]
	0x01D4BD74 BL 0x265C3F4
	0x01D4BD78 LDR X0, [X20 + 0x80]
	0x01D4BD7C CBZ X0, 0x1D4BDE4
	0x01D4BD80 LDR X1, [X19 + 0x30]
	0x01D4BD84 LDR X2, [X21]
	0x01D4BD88 BL 0x265C3F4
	0x01D4BD8C LDR X0, [X20 + 0x88]
	0x01D4BD90 CBZ X0, 0x1D4BDE4
	0x01D4BD94 LDR X1, [X19 + 0x38]
	0x01D4BD98 LDR X2, [X21]
	0x01D4BD9C BL 0x265C3F4
	0x01D4BDA0 LDR X0, [X20 + 0x90]
	0x01D4BDA4 CBZ X0, 0x1D4BDE4
	0x01D4BDA8 LDR X1, [X19 + 0x40]
	0x01D4BDAC LDR X2, [X21]
	0x01D4BDB0 ADRP X21, 0x23A9000
	0x01D4BDB4 LDR X21, [X21 + 0x9F8]
	0x01D4BDB8 BL 0x265C3F4
	0x01D4BDBC LDR X0, [X20 + 0x98]
	0x01D4BDC0 LDR X1, [X19 + 0x48]
	0x01D4BDC4 LDR X2, [X21]
	0x01D4BDC8 BL 0x222E4AC
	0x01D4BDCC LDP X20, X19, [X31 + 0x40]
	0x01D4BDD0 LDP X22, X21, [X31 + 0x30]
	0x01D4BDD4 LDP X30, X23, [X31 + 0x20]
	0x01D4BDD8 LDP D9, D8, [X31 + 0x10]
	0x01D4BDDC ADD X31, X31, 0x50
	0x01D4BDE0 RET
	0x01D4BDE4 BL 0x1C16F20
	0x01D4BDE8 STR X30, [X31 - 0x20]!
	0x01D4BDEC STP X20, X19, [X31 + 0x10]
	0x01D4BDF0 MOV X19, X1
	0x01D4BDF4 MOV X1, X31
	0x01D4BDF8 MOV X20, X0
	0x01D4BDFC BL 0x1D36B98
	0x01D4BE00 STR X19, [X20 + 0x18]
	0x01D4BE04 LDP X20, X19, [X31 + 0x10]
	0x01D4BE08 LDR X30, [X31], #0x20
	0x01D4BE0C RET
	0x01D4BE10 STP X30, X25, [X31 - 0x40]!
	0x01D4BE14 STP X24, X23, [X31 + 0x10]
	0x01D4BE18 STP X22, X21, [X31 + 0x20]
	0x01D4BE1C STP X20, X19, [X31 + 0x30]
	0x01D4BE20 ADRP X21, 0x268D000
	0x01D4BE24 LDRB W8, [X21 + 0x795]
	0x01D4BE28 MOV X20, X1
	0x01D4BE2C MOV X19, X0
	0x01D4BE30 TBNZ X8, 0x0, 0x1D4BE90
	0x01D4BE34 ADRP X0, 0x23A9000
	0x01D4BE38 LDR X0, [X0 + 0x918]
	0x01D4BE3C BL 0x1C16CF4
	0x01D4BE40 ADRP X0, 0x23A8000
	0x01D4BE44 LDR X0, [X0 + 0xF28]
	0x01D4BE48 BL 0x1C16CF4
	0x01D4BE4C ADRP X0, 0x23A9000
	0x01D4BE50 LDR X0, [X0 + 0xA10]
	0x01D4BE54 BL 0x1C16CF4
	0x01D4BE58 ADRP X0, 0x23A9000
	0x01D4BE5C LDR X0, [X0 + 0xA18]
	0x01D4BE60 BL 0x1C16CF4
	0x01D4BE64 ADRP X0, 0x23A8000
	0x01D4BE68 LDR X0, [X0 + 0xE30]
	0x01D4BE6C BL 0x1C16CF4
	0x01D4BE70 ADRP X0, 0x23A8000
	0x01D4BE74 LDR X0, [X0 + 0xE40]
	0x01D4BE78 BL 0x1C16CF4
	0x01D4BE7C ADRP X0, 0x23A8000
	0x01D4BE80 LDR X0, [X0 + 0x900]
	0x01D4BE84 BL 0x1C16CF4
	0x01D4BE88 MOVZ W8, 0x1
	0x01D4BE8C STRB W8, [X21 + 0x795]
	0x01D4BE90 CBZ X20, 0x1D4CD24
	0x01D4BE94 LDR X9, [X20 + 0xB8]
	0x01D4BE98 CBZ X9, 0x1D4CD24
	0x01D4BE9C LDR X22, [X19 + 0x18]
	0x01D4BEA0 CBZ X22, 0x1D4CD24
	0x01D4BEA4 ADRP X23, 0x23A9000
	0x01D4BEA8 LDR X8, [X22]
	0x01D4BEAC LDR X23, [X23 + 0x918]
	0x01D4BEB0 LDR X21, [X9 + 0x48]
	0x01D4BEB4 LDRH W9, [X8 + 0x12E]
	0x01D4BEB8 LDR X1, [X23]
	0x01D4BEBC CBZ X9, 0x1D4BEE0
	0x01D4BEC0 LDR X10, [X8 + 0xB0]
	0x01D4BEC4 ADD X10, X10, 0x8
	0x01D4BEC8 LDUR X11, [X10 - 0x8]
	0x01D4BECC CMP X11, X1
	0x01D4BED0 B.EQ 0x1D4BEF0
	0x01D4BED4 SUBS X9, X9, 0x1
	0x01D4BED8 ADD X10, X10, 0x10
	0x01D4BEDC B.NE 0x1D4BEC8
	0x01D4BEE0 MOV X0, X22
	0x01D4BEE4 MOV W2, W31
	0x01D4BEE8 BL 0x1C5C788
	0x01D4BEEC B 0x1D4BEFC
	0x01D4BEF0 LDRSW X9, [X10]
	0x01D4BEF4 ADD X8, X8, X9, 0x4, LSL
	0x01D4BEF8 ADD X0, X8, 0x138
	0x01D4BEFC LDP X8, X1, [X0]
	0x01D4BF00 MOV X0, X22
	0x01D4BF04 BLR X8
	0x01D4BF08 CBZ X21, 0x1D4CD24
	0x01D4BF0C ADRP X25, 0x23A8000
	0x01D4BF10 LDR X25, [X25 + 0x900]
	0x01D4BF14 MOV X1, X0
	0x01D4BF18 MOV X0, X21
	0x01D4BF1C LDR X2, [X25]
	0x01D4BF20 BL 0x265C3F4
	0x01D4BF24 LDR X9, [X20 + 0xB8]
	0x01D4BF28 CBZ X9, 0x1D4CD24
	0x01D4BF2C LDR X22, [X19 + 0x18]
	0x01D4BF30 CBZ X22, 0x1D4CD24
	0x01D4BF34 LDR X8, [X22]
	0x01D4BF38 LDR X21, [X9 + 0x50]
	0x01D4BF3C LDR X1, [X23]
	0x01D4BF40 LDRH W9, [X8 + 0x12E]
	0x01D4BF44 CBZ X9, 0x1D4BF68
	0x01D4BF48 LDR X10, [X8 + 0xB0]
	0x01D4BF4C ADD X10, X10, 0x8
	0x01D4BF50 LDUR X11, [X10 - 0x8]
	0x01D4BF54 CMP X11, X1
	0x01D4BF58 B.EQ 0x1D4BF78
	0x01D4BF5C SUBS X9, X9, 0x1
	0x01D4BF60 ADD X10, X10, 0x10
	0x01D4BF64 B.NE 0x1D4BF50
	0x01D4BF68 MOVZ W2, 0x4
	0x01D4BF6C MOV X0, X22
	0x01D4BF70 BL 0x1C5C788
	0x01D4BF74 B 0x1D4BF88
	0x01D4BF78 LDR W9, [X10]
	0x01D4BF7C ADD W9, W9, 0x4
	0x01D4BF80 ADD X8, X8, W9, 0x4, SXTW
	0x01D4BF84 ADD X0, X8, 0x138
	0x01D4BF88 LDP X8, X1, [X0]
	0x01D4BF8C MOV X0, X22
	0x01D4BF90 BLR X8
	0x01D4BF94 CBZ X0, 0x1D4CD24
	0x01D4BF98 ADRP X24, 0x23A8000
	0x01D4BF9C LDR X8, [X0]
	0x01D4BFA0 LDR X24, [X24 + 0xF28]
	0x01D4BFA4 MOV X22, X0
	0x01D4BFA8 LDRH W9, [X8 + 0x12E]
	0x01D4BFAC LDR X1, [X24]
	0x01D4BFB0 CBZ X9, 0x1D4BFD4
	0x01D4BFB4 LDR X10, [X8 + 0xB0]
	0x01D4BFB8 ADD X10, X10, 0x8
	0x01D4BFBC LDUR X11, [X10 - 0x8]
	0x01D4BFC0 CMP X11, X1
	0x01D4BFC4 B.EQ 0x1D4BFE4
	0x01D4BFC8 SUBS X9, X9, 0x1
	0x01D4BFCC ADD X10, X10, 0x10
	0x01D4BFD0 B.NE 0x1D4BFBC
	0x01D4BFD4 MOVZ W2, 0x9
	0x01D4BFD8 MOV X0, X22
	0x01D4BFDC BL 0x1C5C788
	0x01D4BFE0 B 0x1D4BFF4
	0x01D4BFE4 LDR W9, [X10]
	0x01D4BFE8 ADD W9, W9, 0x9
	0x01D4BFEC ADD X8, X8, W9, 0x4, SXTW
	0x01D4BFF0 ADD X0, X8, 0x138
	0x01D4BFF4 LDP X8, X1, [X0]
	0x01D4BFF8 MOV X0, X22
	0x01D4BFFC BLR X8
	0x01D4C000 CBZ X21, 0x1D4CD24
	0x01D4C004 LDR X2, [X25]
	0x01D4C008 MOV X1, X0
	0x01D4C00C MOV X0, X21
	0x01D4C010 BL 0x265C3F4
	0x01D4C014 LDR X9, [X20 + 0xB8]
	0x01D4C018 CBZ X9, 0x1D4CD24
	0x01D4C01C LDR X22, [X19 + 0x18]
	0x01D4C020 CBZ X22, 0x1D4CD24
	0x01D4C024 LDR X8, [X22]
	0x01D4C028 LDR X21, [X9 + 0x58]
	0x01D4C02C LDR X1, [X23]
	0x01D4C030 LDRH W9, [X8 + 0x12E]
	0x01D4C034 CBZ X9, 0x1D4C058
	0x01D4C038 LDR X10, [X8 + 0xB0]
	0x01D4C03C ADD X10, X10, 0x8
	0x01D4C040 LDUR X11, [X10 - 0x8]
	0x01D4C044 CMP X11, X1
	0x01D4C048 B.EQ 0x1D4C068
	0x01D4C04C SUBS X9, X9, 0x1
	0x01D4C050 ADD X10, X10, 0x10
	0x01D4C054 B.NE 0x1D4C040
	0x01D4C058 MOVZ W2, 0x4
	0x01D4C05C MOV X0, X22
	0x01D4C060 BL 0x1C5C788
	0x01D4C064 B 0x1D4C078
	0x01D4C068 LDR W9, [X10]
	0x01D4C06C ADD W9, W9, 0x4
	0x01D4C070 ADD X8, X8, W9, 0x4, SXTW
	0x01D4C074 ADD X0, X8, 0x138
	0x01D4C078 LDP X8, X1, [X0]
	0x01D4C07C MOV X0, X22
	0x01D4C080 BLR X8
	0x01D4C084 CBZ X0, 0x1D4CD24
	0x01D4C088 LDR X8, [X0]
	0x01D4C08C LDR X1, [X24]
	0x01D4C090 MOV X22, X0
	0x01D4C094 LDRH W9, [X8 + 0x12E]
	0x01D4C098 CBZ X9, 0x1D4C0BC
	0x01D4C09C LDR X10, [X8 + 0xB0]
	0x01D4C0A0 ADD X10, X10, 0x8
	0x01D4C0A4 LDUR X11, [X10 - 0x8]
	0x01D4C0A8 CMP X11, X1
	0x01D4C0AC B.EQ 0x1D4C0CC
	0x01D4C0B0 SUBS X9, X9, 0x1
	0x01D4C0B4 ADD X10, X10, 0x10
	0x01D4C0B8 B.NE 0x1D4C0A4
	0x01D4C0BC MOVZ W2, 0x11
	0x01D4C0C0 MOV X0, X22
	0x01D4C0C4 BL 0x1C5C788
	0x01D4C0C8 B 0x1D4C0DC
	0x01D4C0CC LDR W9, [X10]
	0x01D4C0D0 ADD W9, W9, 0x11
	0x01D4C0D4 ADD X8, X8, W9, 0x4, SXTW
	0x01D4C0D8 ADD X0, X8, 0x138
	0x01D4C0DC LDP X8, X1, [X0]
	0x01D4C0E0 MOV X0, X22
	0x01D4C0E4 BLR X8
	0x01D4C0E8 CBZ X21, 0x1D4CD24
	0x01D4C0EC LDR X2, [X25]
	0x01D4C0F0 MOV X1, X0
	0x01D4C0F4 MOV X0, X21
	0x01D4C0F8 BL 0x265C3F4
	0x01D4C0FC LDR X9, [X20 + 0xB8]
	0x01D4C100 CBZ X9, 0x1D4CD24
	0x01D4C104 LDR X22, [X19 + 0x18]
	0x01D4C108 CBZ X22, 0x1D4CD24
	0x01D4C10C LDR X8, [X22]
	0x01D4C110 LDR X21, [X9 + 0x60]
	0x01D4C114 LDR X1, [X23]
	0x01D4C118 LDRH W9, [X8 + 0x12E]
	0x01D4C11C CBZ X9, 0x1D4C140
	0x01D4C120 LDR X10, [X8 + 0xB0]
	0x01D4C124 ADD X10, X10, 0x8
	0x01D4C128 LDUR X11, [X10 - 0x8]
	0x01D4C12C CMP X11, X1
	0x01D4C130 B.EQ 0x1D4C150
	0x01D4C134 SUBS X9, X9, 0x1
	0x01D4C138 ADD X10, X10, 0x10
	0x01D4C13C B.NE 0x1D4C128
	0x01D4C140 MOVZ W2, 0x4
	0x01D4C144 MOV X0, X22
	0x01D4C148 BL 0x1C5C788
	0x01D4C14C B 0x1D4C160
	0x01D4C150 LDR W9, [X10]
	0x01D4C154 ADD W9, W9, 0x4
	0x01D4C158 ADD X8, X8, W9, 0x4, SXTW
	0x01D4C15C ADD X0, X8, 0x138
	0x01D4C160 LDP X8, X1, [X0]
	0x01D4C164 MOV X0, X22
	0x01D4C168 BLR X8
	0x01D4C16C CBZ X0, 0x1D4CD24
	0x01D4C170 LDR X8, [X0]
	0x01D4C174 LDR X1, [X24]
	0x01D4C178 MOV X22, X0
	0x01D4C17C LDRH W9, [X8 + 0x12E]
	0x01D4C180 CBZ X9, 0x1D4C1A4
	0x01D4C184 LDR X10, [X8 + 0xB0]
	0x01D4C188 ADD X10, X10, 0x8
	0x01D4C18C LDUR X11, [X10 - 0x8]
	0x01D4C190 CMP X11, X1
	0x01D4C194 B.EQ 0x1D4C1B4
	0x01D4C198 SUBS X9, X9, 0x1
	0x01D4C19C ADD X10, X10, 0x10
	0x01D4C1A0 B.NE 0x1D4C18C
	0x01D4C1A4 MOVZ W2, 0x3
	0x01D4C1A8 MOV X0, X22
	0x01D4C1AC BL 0x1C5C788
	0x01D4C1B0 B 0x1D4C1C4
	0x01D4C1B4 LDR W9, [X10]
	0x01D4C1B8 ADD W9, W9, 0x3
	0x01D4C1BC ADD X8, X8, W9, 0x4, SXTW
	0x01D4C1C0 ADD X0, X8, 0x138
	0x01D4C1C4 LDP X8, X1, [X0]
	0x01D4C1C8 MOV X0, X22
	0x01D4C1CC BLR X8
	0x01D4C1D0 CBZ X21, 0x1D4CD24
	0x01D4C1D4 LDR X2, [X25]
	0x01D4C1D8 MOV X1, X0
	0x01D4C1DC MOV X0, X21
	0x01D4C1E0 BL 0x265C3F4
	0x01D4C1E4 LDR X21, [X19 + 0x18]
	0x01D4C1E8 CBZ X21, 0x1D4CD24
	0x01D4C1EC LDR X8, [X21]
	0x01D4C1F0 LDR X1, [X23]
	0x01D4C1F4 LDRH W9, [X8 + 0x12E]
	0x01D4C1F8 CBZ X9, 0x1D4C21C
	0x01D4C1FC LDR X10, [X8 + 0xB0]
	0x01D4C200 ADD X10, X10, 0x8
	0x01D4C204 LDUR X11, [X10 - 0x8]
	0x01D4C208 CMP X11, X1
	0x01D4C20C B.EQ 0x1D4C22C
	0x01D4C210 SUBS X9, X9, 0x1
	0x01D4C214 ADD X10, X10, 0x10
	0x01D4C218 B.NE 0x1D4C204
	0x01D4C21C MOVZ W2, 0x4
	0x01D4C220 MOV X0, X21
	0x01D4C224 BL 0x1C5C788
	0x01D4C228 B 0x1D4C23C
	0x01D4C22C LDR W9, [X10]
	0x01D4C230 ADD W9, W9, 0x4
	0x01D4C234 ADD X8, X8, W9, 0x4, SXTW
	0x01D4C238 ADD X0, X8, 0x138
	0x01D4C23C LDP X8, X1, [X0]
	0x01D4C240 MOV X0, X21
	0x01D4C244 BLR X8
	0x01D4C248 CBZ X0, 0x1D4CD24
	0x01D4C24C LDR X8, [X0]
	0x01D4C250 LDR X1, [X24]
	0x01D4C254 MOV X21, X0
	0x01D4C258 LDRH W9, [X8 + 0x12E]
	0x01D4C25C CBZ X9, 0x1D4C280
	0x01D4C260 LDR X10, [X8 + 0xB0]
	0x01D4C264 ADD X10, X10, 0x8
	0x01D4C268 LDUR X11, [X10 - 0x8]
	0x01D4C26C CMP X11, X1
	0x01D4C270 B.EQ 0x1D4C290
	0x01D4C274 SUBS X9, X9, 0x1
	0x01D4C278 ADD X10, X10, 0x10
	0x01D4C27C B.NE 0x1D4C268
	0x01D4C280 MOVZ W2, 0x3
	0x01D4C284 MOV X0, X21
	0x01D4C288 BL 0x1C5C788
	0x01D4C28C B 0x1D4C2A0
	0x01D4C290 LDR W9, [X10]
	0x01D4C294 ADD W9, W9, 0x3
	0x01D4C298 ADD X8, X8, W9, 0x4, SXTW
	0x01D4C29C ADD X0, X8, 0x138
	0x01D4C2A0 LDP X8, X1, [X0]
	0x01D4C2A4 MOV X0, X21
	0x01D4C2A8 BLR X8
	0x01D4C2AC MOV X1, X31
	0x01D4C2B0 BL 0x32277A8
	0x01D4C2B4 TBZ X0, 0x0, 0x1D4C3A0
	0x01D4C2B8 LDR X9, [X20 + 0xB8]
	0x01D4C2BC CBZ X9, 0x1D4CD24
	0x01D4C2C0 LDR X22, [X19 + 0x18]
	0x01D4C2C4 CBZ X22, 0x1D4CD24
	0x01D4C2C8 LDR X8, [X22]
	0x01D4C2CC LDR X21, [X9 + 0x60]
	0x01D4C2D0 LDR X1, [X23]
	0x01D4C2D4 LDRH W9, [X8 + 0x12E]
	0x01D4C2D8 CBZ X9, 0x1D4C2FC
	0x01D4C2DC LDR X10, [X8 + 0xB0]
	0x01D4C2E0 ADD X10, X10, 0x8
	0x01D4C2E4 LDUR X11, [X10 - 0x8]
	0x01D4C2E8 CMP X11, X1
	0x01D4C2EC B.EQ 0x1D4C30C
	0x01D4C2F0 SUBS X9, X9, 0x1
	0x01D4C2F4 ADD X10, X10, 0x10
	0x01D4C2F8 B.NE 0x1D4C2E4
	0x01D4C2FC MOVZ W2, 0x4
	0x01D4C300 MOV X0, X22
	0x01D4C304 BL 0x1C5C788
	0x01D4C308 B 0x1D4C31C
	0x01D4C30C LDR W9, [X10]
	0x01D4C310 ADD W9, W9, 0x4
	0x01D4C314 ADD X8, X8, W9, 0x4, SXTW
	0x01D4C318 ADD X0, X8, 0x138
	0x01D4C31C LDP X8, X1, [X0]
	0x01D4C320 MOV X0, X22
	0x01D4C324 BLR X8
	0x01D4C328 CBZ X0, 0x1D4CD24
	0x01D4C32C LDR X8, [X0]
	0x01D4C330 LDR X1, [X24]
	0x01D4C334 MOV X22, X0
	0x01D4C338 LDRH W9, [X8 + 0x12E]
	0x01D4C33C CBZ X9, 0x1D4C360
	0x01D4C340 LDR X10, [X8 + 0xB0]
	0x01D4C344 ADD X10, X10, 0x8
	0x01D4C348 LDUR X11, [X10 - 0x8]
	0x01D4C34C CMP X11, X1
	0x01D4C350 B.EQ 0x1D4C370
	0x01D4C354 SUBS X9, X9, 0x1
	0x01D4C358 ADD X10, X10, 0x10
	0x01D4C35C B.NE 0x1D4C348
	0x01D4C360 MOVZ W2, 0x11
	0x01D4C364 MOV X0, X22
	0x01D4C368 BL 0x1C5C788
	0x01D4C36C B 0x1D4C380
	0x01D4C370 LDR W9, [X10]
	0x01D4C374 ADD W9, W9, 0x11
	0x01D4C378 ADD X8, X8, W9, 0x4, SXTW
	0x01D4C37C ADD X0, X8, 0x138
	0x01D4C380 LDP X8, X1, [X0]
	0x01D4C384 MOV X0, X22
	0x01D4C388 BLR X8
	0x01D4C38C CBZ X21, 0x1D4CD24
	0x01D4C390 LDR X2, [X25]
	0x01D4C394 MOV X1, X0
	0x01D4C398 MOV X0, X21
	0x01D4C39C BL 0x265C3F4
	0x01D4C3A0 LDR X9, [X20 + 0xB8]
	0x01D4C3A4 CBZ X9, 0x1D4CD24
	0x01D4C3A8 LDR X22, [X19 + 0x18]
	0x01D4C3AC CBZ X22, 0x1D4CD24
	0x01D4C3B0 LDR X8, [X22]
	0x01D4C3B4 LDR X21, [X9 + 0x68]
	0x01D4C3B8 LDR X1, [X23]
	0x01D4C3BC LDRH W9, [X8 + 0x12E]
	0x01D4C3C0 CBZ X9, 0x1D4C3E4
	0x01D4C3C4 LDR X10, [X8 + 0xB0]
	0x01D4C3C8 ADD X10, X10, 0x8
	0x01D4C3CC LDUR X11, [X10 - 0x8]
	0x01D4C3D0 CMP X11, X1
	0x01D4C3D4 B.EQ 0x1D4C3F4
	0x01D4C3D8 SUBS X9, X9, 0x1
	0x01D4C3DC ADD X10, X10, 0x10
	0x01D4C3E0 B.NE 0x1D4C3CC
	0x01D4C3E4 MOVZ W2, 0x4
	0x01D4C3E8 MOV X0, X22
	0x01D4C3EC BL 0x1C5C788
	0x01D4C3F0 B 0x1D4C404
	0x01D4C3F4 LDR W9, [X10]
	0x01D4C3F8 ADD W9, W9, 0x4
	0x01D4C3FC ADD X8, X8, W9, 0x4, SXTW
	0x01D4C400 ADD X0, X8, 0x138
	0x01D4C404 LDP X8, X1, [X0]
	0x01D4C408 MOV X0, X22
	0x01D4C40C BLR X8
	0x01D4C410 CBZ X0, 0x1D4CD24
	0x01D4C414 LDR X8, [X0]
	0x01D4C418 LDR X1, [X24]
	0x01D4C41C MOV X22, X0
	0x01D4C420 LDRH W9, [X8 + 0x12E]
	0x01D4C424 CBZ X9, 0x1D4C448
	0x01D4C428 LDR X10, [X8 + 0xB0]
	0x01D4C42C ADD X10, X10, 0x8
	0x01D4C430 LDUR X11, [X10 - 0x8]
	0x01D4C434 CMP X11, X1
	0x01D4C438 B.EQ 0x1D4C458
	0x01D4C43C SUBS X9, X9, 0x1
	0x01D4C440 ADD X10, X10, 0x10
	0x01D4C444 B.NE 0x1D4C430
	0x01D4C448 MOVZ W2, 0x1
	0x01D4C44C MOV X0, X22
	0x01D4C450 BL 0x1C5C788
	0x01D4C454 B 0x1D4C468
	0x01D4C458 LDR W9, [X10]
	0x01D4C45C ADD W9, W9, 0x1
	0x01D4C460 ADD X8, X8, W9, 0x4, SXTW
	0x01D4C464 ADD X0, X8, 0x138
	0x01D4C468 LDP X8, X1, [X0]
	0x01D4C46C MOV X0, X22
	0x01D4C470 BLR X8
	0x01D4C474 CBZ X21, 0x1D4CD24
	0x01D4C478 LDR X2, [X25]
	0x01D4C47C MOV X1, X0
	0x01D4C480 MOV X0, X21
	0x01D4C484 BL 0x265C3F4
	0x01D4C488 LDR X21, [X19 + 0x18]
	0x01D4C48C CBZ X21, 0x1D4CD24
	0x01D4C490 LDR X8, [X21]
	0x01D4C494 LDR X1, [X23]
	0x01D4C498 LDRH W9, [X8 + 0x12E]
	0x01D4C49C CBZ X9, 0x1D4C4C0
	0x01D4C4A0 LDR X10, [X8 + 0xB0]
	0x01D4C4A4 ADD X10, X10, 0x8
	0x01D4C4A8 LDUR X11, [X10 - 0x8]
	0x01D4C4AC CMP X11, X1
	0x01D4C4B0 B.EQ 0x1D4C4D0
	0x01D4C4B4 SUBS X9, X9, 0x1
	0x01D4C4B8 ADD X10, X10, 0x10
	0x01D4C4BC B.NE 0x1D4C4A8
	0x01D4C4C0 MOVZ W2, 0x4
	0x01D4C4C4 MOV X0, X21
	0x01D4C4C8 BL 0x1C5C788
	0x01D4C4CC B 0x1D4C4E0
	0x01D4C4D0 LDR W9, [X10]
	0x01D4C4D4 ADD W9, W9, 0x4
	0x01D4C4D8 ADD X8, X8, W9, 0x4, SXTW
	0x01D4C4DC ADD X0, X8, 0x138
	0x01D4C4E0 LDP X8, X1, [X0]
	0x01D4C4E4 MOV X0, X21
	0x01D4C4E8 BLR X8
	0x01D4C4EC CBZ X0, 0x1D4CD24
	0x01D4C4F0 LDR X8, [X0]
	0x01D4C4F4 LDR X1, [X24]
	0x01D4C4F8 MOV X21, X0
	0x01D4C4FC LDRH W9, [X8 + 0x12E]
	0x01D4C500 CBZ X9, 0x1D4C524
	0x01D4C504 LDR X10, [X8 + 0xB0]
	0x01D4C508 ADD X10, X10, 0x8
	0x01D4C50C LDUR X11, [X10 - 0x8]
	0x01D4C510 CMP X11, X1
	0x01D4C514 B.EQ 0x1D4C534
	0x01D4C518 SUBS X9, X9, 0x1
	0x01D4C51C ADD X10, X10, 0x10
	0x01D4C520 B.NE 0x1D4C50C
	0x01D4C524 MOVZ W2, 0xC
	0x01D4C528 MOV X0, X21
	0x01D4C52C BL 0x1C5C788
	0x01D4C530 B 0x1D4C544
	0x01D4C534 LDR W9, [X10]
	0x01D4C538 ADD W9, W9, 0xC
	0x01D4C53C ADD X8, X8, W9, 0x4, SXTW
	0x01D4C540 ADD X0, X8, 0x138
	0x01D4C544 LDP X8, X1, [X0]
	0x01D4C548 MOV X0, X21
	0x01D4C54C BLR X8
	0x01D4C550 MOV X1, X31
	0x01D4C554 BL 0x32277A8
	0x01D4C558 TBNZ X0, 0x0, 0x1D4C65C
	0x01D4C55C LDR X21, [X19 + 0x18]
	0x01D4C560 CBZ X21, 0x1D4C7A8
	0x01D4C564 LDR X8, [X21]
	0x01D4C568 LDR X1, [X23]
	0x01D4C56C LDRH W9, [X8 + 0x12E]
	0x01D4C570 CBZ X9, 0x1D4C594
	0x01D4C574 LDR X10, [X8 + 0xB0]
	0x01D4C578 ADD X10, X10, 0x8
	0x01D4C57C LDUR X11, [X10 - 0x8]
	0x01D4C580 CMP X11, X1
	0x01D4C584 B.EQ 0x1D4C5A4
	0x01D4C588 SUBS X9, X9, 0x1
	0x01D4C58C ADD X10, X10, 0x10
	0x01D4C590 B.NE 0x1D4C57C
	0x01D4C594 MOVZ W2, 0x4
	0x01D4C598 MOV X0, X21
	0x01D4C59C BL 0x1C5C788
	0x01D4C5A0 B 0x1D4C5B4
	0x01D4C5A4 LDR W9, [X10]
	0x01D4C5A8 ADD W9, W9, 0x4
	0x01D4C5AC ADD X8, X8, W9, 0x4, SXTW
	0x01D4C5B0 ADD X0, X8, 0x138
	0x01D4C5B4 LDP X8, X1, [X0]
	0x01D4C5B8 MOV X0, X21
	0x01D4C5BC BLR X8
	0x01D4C5C0 MOV X21, X0
	0x01D4C5C4 CBZ X0, 0x1D4C7B4
	0x01D4C5C8 LDR X8, [X21]
	0x01D4C5CC LDR X1, [X24]
	0x01D4C5D0 LDRH W9, [X8 + 0x12E]
	0x01D4C5D4 CBZ X9, 0x1D4C5F8
	0x01D4C5D8 LDR X10, [X8 + 0xB0]
	0x01D4C5DC ADD X10, X10, 0x8
	0x01D4C5E0 LDUR X11, [X10 - 0x8]
	0x01D4C5E4 CMP X11, X1
	0x01D4C5E8 B.EQ 0x1D4C608
	0x01D4C5EC SUBS X9, X9, 0x1
	0x01D4C5F0 ADD X10, X10, 0x10
	0x01D4C5F4 B.NE 0x1D4C5E0
	0x01D4C5F8 MOVZ W2, 0xC
	0x01D4C5FC MOV X0, X21
	0x01D4C600 BL 0x1C5C788
	0x01D4C604 B 0x1D4C618
	0x01D4C608 LDR W9, [X10]
	0x01D4C60C ADD W9, W9, 0xC
	0x01D4C610 ADD X8, X8, W9, 0x4, SXTW
	0x01D4C614 ADD X0, X8, 0x138
	0x01D4C618 LDP X8, X1, [X0]
	0x01D4C61C MOV X0, X21
	0x01D4C620 BLR X8
	0x01D4C624 ADRP X8, 0x23A8000

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Subtract X31, X31, 464
	012 Move X20, 0x268E000
	013 Move W8, [X20+1921]
	014 Move X19, X0
	015 Add X24, X31, 208
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {130}
	020 Move X0, 0x23A9000
	021 Move X0, [X0+1608]
	022 Call 0x1C17CF4
	023 Move X0, 0x23A9000
	024 Move X0, [X0+2416]
	025 Call 0x1C17CF4
	026 Move X0, 0x23AA000
	027 Move X0, [X0+2248]
	028 Call 0x1C17CF4
	029 Move X0, 0x23AA000
	030 Move X0, [X0+2256]
	031 Call 0x1C17CF4
	032 Move X0, 0x23AA000
	033 Move X0, [X0+2264]
	034 Call 0x1C17CF4
	035 Move X0, 0x23AA000
	036 Move X0, [X0+2272]
	037 Call 0x1C17CF4
	038 Move X0, 0x23AA000
	039 Move X0, [X0+2280]
	040 Call 0x1C17CF4
	041 Move X0, 0x23AA000
	042 Move X0, [X0+2288]
	043 Call 0x1C17CF4
	044 Move X0, 0x23A9000
	045 Move X0, [X0+2664]
	046 Call 0x1C17CF4
	047 Move X0, 0x23AA000
	048 Move X0, [X0+2296]
	049 Call 0x1C17CF4
	050 Move X0, 0x23AA000
	051 Move X0, [X0+2304]
	052 Call 0x1C17CF4
	053 Move X0, 0x23AA000
	054 Move X0, [X0+2312]
	055 Call 0x1C17CF4
	056 Move X0, 0x23AA000
	057 Move X0, [X0+2320]
	058 Call 0x1C17CF4
	059 Move X0, 0x23AA000
	060 Move X0, [X0+2328]
	061 Call 0x1C17CF4
	062 Move X0, 0x23AA000
	063 Move X0, [X0+2072]
	064 Call 0x1C17CF4
	065 Move X0, 0x23A9000
	066 Move X0, [X0+1928]
	067 Call 0x1C17CF4
	068 Move X0, 0x23A9000
	069 Move X0, [X0+2760]
	070 Call 0x1C17CF4
	071 Move X0, 0x23AA000
	072 Move X0, [X0+2336]
	073 Call 0x1C17CF4
	074 Move X0, 0x23AA000
	075 Move X0, [X0+2344]
	076 Call 0x1C17CF4
	077 Move X0, 0x23AA000
	078 Move X0, [X0+1952]
	079 Call 0x1C17CF4
	080 Move X0, 0x23AA000
	081 Move X0, [X0+2352]
	082 Call 0x1C17CF4
	083 Move X0, 0x23AA000
	084 Move X0, [X0+2360]
	085 Call 0x1C17CF4
	086 Move X0, 0x23AA000
	087 Move X0, [X0+2368]
	088 Call 0x1C17CF4
	089 Move X0, 0x23AA000
	090 Move X0, [X0+2376]
	091 Call 0x1C17CF4
	092 Move X0, 0x23AA000
	093 Move X0, [X0+1960]
	094 Call 0x1C17CF4
	095 Move X0, 0x23AA000
	096 Move X0, [X0+1968]
	097 Call 0x1C17CF4
	098 Move X0, 0x23AA000
	099 Move X0, [X0+2384]
	100 Call 0x1C17CF4
	101 Move X0, 0x23AA000
	102 Move X0, [X0+2392]
	103 Call 0x1C17CF4
	104 Move X0, 0x23AA000
	105 Move X0, [X0+2400]
	106 Call 0x1C17CF4
	107 Move X0, 0x23AA000
	108 Move X0, [X0+2408]
	109 Call 0x1C17CF4
	110 Move X0, 0x23AA000
	111 Move X0, [X0+2416]
	112 Call 0x1C17CF4
	113 Move X0, 0x23AA000
	114 Move X0, [X0+1816]
	115 Call 0x1C17CF4
	116 Move X0, 0x23AA000
	117 Move X0, [X0+2424]
	118 Call 0x1C17CF4
	119 Move X0, 0x23AA000
	120 Move X0, [X0+2432]
	121 Call 0x1C17CF4
	122 Move X0, 0x23AA000
	123 Move X0, [X0+2440]
	124 Call 0x1C17CF4
	125 Move X0, 0x23AA000
	126 Move X0, [X0+2448]
	127 Call 0x1C17CF4
	128 Move W8, 1
	129 Move [X20+1921], W8
	130 NotImplemented "Instruction MOVI not yet implemented."
	131 Move [X31+336], X31
	132 Move [X31+208], X31
	133 Move [X31+216], X31
	134 Move [X31+224], X31
	135 Move [X31+192], X31
	136 Move [X31+200], X31
	137 Move [X31+176], X31
	138 Move [X31+184], X31
	139 Move [X31+168], X31
	140 Move [X24+96], V0
	141 Move [X24+104], V0
	142 Move [X24+64], V0
	143 Move [X24+72], V0
	144 Move [X24+32], V0
	145 Move [X24+40], V0
	146 Move [X31+160], W31
	147 Move W26, [X19]
	148 Move X25, 0x23A9000
	149 Move X25, [X25+2664]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X8, -19251200
	152 Add X8, X8, 1508
	153 NotImplemented "Instruction ADR not yet implemented."
	154 Move W10, [X8]
	155 Add X9, X9, X10
	156 CallNoReturn X9
	157 Move X8, [X19+168]
	158 Move TEMP, 0
	159 Not TEMP
	160 Move W26, TEMP
	161 Move [X31+200], X8
	162 Move [X19+168], X31
	163 Move [X19], W26
	164 Move X8, 0x23AA000
	165 Move X8, [X8+1952]
	166 Move X1, [X8]
	167 Add X8, X31, 352
	168 Add X0, X31, 200
	169 Call TaskAwaiter`1<AuthResult>.GetResult, X0
	170 Move V0, [X24+9]
	171 Move X8, [X31+368]
	172 Move X9, 0x23AA000
	173 Move X9, [X9+2440]
	174 Move [X24], V0
	175 Move [X31+224], X8
	176 Move [X19+48], X8
	177 Move [X19+2], V0
	178 Move V0, [X24]
	179 Move X1, [X9]
	180 Move [X31+128], X8
	181 Move [X31+7], V0
	182 Add X0, X31, 112
	183 Call AuthCommands.LogAuthEvent, X0, X1
	184 Move X8, [X19+184]
	185 Move TEMP, 0
	186 Not TEMP
	187 Move W26, TEMP
	188 Move [X31+184], X8
	189 Move [X19+184], X31
	190 Move [X19], W26
	191 Move X8, [X19+176]
	192 Move TEMP, 0
	193 Not TEMP
	194 Move W26, TEMP
	195 Move [X31+192], X8
	196 Move [X19+176], X31
	197 Move [X19], W26
	198 Move [X19+32], X31
	199 Move [X19+40], X31
	200 Move [X19+48], X31
	201 Move X8, 0x23A9000
	202 Move X8, [X8+1608]
	203 Move X0, [X8]
	204 Move W8, [X0+224]
	205 Compare W8, 0
	206 JumpIfNotEqual {208}
	207 Call 0x1C17DFC
	208 Call App.get_platform
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move X8, 0x23A9000
	211 Move X8, [X8+2416]
	212 Move X0, [X8]
	213 Move W8, [X0+224]
	214 Compare W8, 0
	215 JumpIfNotEqual {217}
	216 Call 0x1C17DFC
	217 Move X0, X31
	218 Call Application.get_isEditor
	219 Move TEMP, X0
	220 And TEMP, TEMP, 1
	221 Compare TEMP, 1
	222 JumpIfNotEqual {600}
	223 Move X8, [X19+32]
	224 Compare X8, 0
	225 JumpIfEqual {307}
	226 NotImplemented "Instruction MOVI not yet implemented."
	227 Move [X19+160], X31
	228 Move [X19+56], X8
	229 Move [X19+128], V0
	230 Move [X19+136], V0
	231 Move [X19+96], V0
	232 Move [X19+104], V0
	233 Move [X19+64], V0
	234 Move [X19+72], V0
	235 Move X8, 0x23A9000
	236 Move X8, [X8+1608]
	237 Move X0, [X8]
	238 Move W8, [X0+224]
	239 Compare W8, 0
	240 JumpIfNotEqual {242}
	241 Call 0x1C17DFC
	242 Call App.get_api
	243 Compare X0, 0
	244 JumpIfEqual {751}
	245 Move X1, [X19+32]
	246 Move X2, X31
	247 Move X3, X31
	248 Move X4, X31
	249 Call AnimalCompanyAPI.GetAccountAsync, X0, X1, X2, X3
	250 Compare X0, 0
	251 JumpIfEqual {752}
	252 Move X8, 0x23AA000
	253 Move X8, [X8+2400]
	254 Move X1, [X8]
	255 Call Task`1<Object>.GetAwaiter, X0
	256 Move X8, 0x23AA000
	257 Move X8, [X8+2368]
	258 Move [X31+192], X0
	259 Move X1, [X8]
	260 Add X0, X31, 192
	261 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	262 Move TEMP, X0
	263 And TEMP, TEMP, 1
	264 Compare TEMP, 1
	265 JumpIfNotEqual {342}
	266 Move X8, 0x23AA000
	267 Move X8, [X8+2336]
	268 Add X0, X31, 192
	269 Move X1, [X8]
	270 Call TaskAwaiter`1<Object>.GetResult, X0
	271 Move [X19+64], X0
	272 Move X8, 0x23A9000
	273 Move X8, [X8+1608]
	274 Move X0, [X8]
	275 Move W8, [X0+224]
	276 Compare W8, 0
	277 JumpIfNotEqual {279}
	278 Call 0x1C17DFC
	279 Call App.get_api
	280 Move X8, 0x23A9000
	281 Move X21, [X19+32]
	282 Move X8, [X8+2760]
	283 Move X20, X0
	284 Move X0, [X8]
	285 Move W1, 1
	286 Call 0x1C17D6C
	287 Move X23, [X19+32]
	288 Compare X23, 0
	289 JumpIfEqual {744}
	290 Move X10, 0x23AA000
	291 Move X8, [X23]
	292 Move X10, [X10+2072]
	293 Move X22, X0
	294 NotImplemented "Instruction LDRH not yet implemented."
	295 Move X1, [X10]
	296 Compare X9, 0
	297 JumpIfEqual {304}
	298 Move X10, [X8+176]
	299 Add X10, X10, 8
	300 NotImplemented "Instruction LDUR not yet implemented."
	301 NotImplemented "Instruction CMP not yet implemented."
	302 Subtract X9, X9, 1
	303 Add X10, X10, 16
	304 Move W2, 10
	305 Move X0, X23
	306 Call 0x1C5D788
	307 Move W22, [X19+40]
	308 Compare W22, 0
	309 JumpIfEqual {333}
	310 NotImplemented "Instruction CMP not yet implemented."
	311 Move X8, 0x23A9000
	312 Move X8, [X8+1928]
	313 Move X0, [X8]
	314 Move W8, [X0+224]
	315 Compare W8, 0
	316 JumpIfNotEqual {318}
	317 Call 0x1C17DFC
	318 Move X8, 0x23AA000
	319 Move X8, [X8+2448]
	320 Move X9, 0x23AA000
	321 Move X10, 0x23AA000
	322 Move X9, [X9+1816]
	323 Move X10, [X10+2424]
	324 Move X1, [X8]
	325 Move X3, [X9]
	326 Move X4, [X10]
	327 Move W0, 2048
	328 Move W5, 75
	329 Move X2, X31
	330 Move X6, X31
	331 Call Log.Error, X0, X1, X2, X3, X4, X5
	332 Move W22, [X19+40]
	333 NotImplemented "Instruction MOVI not yet implemented."
	334 Move W21, W31
	335 Move [X31+336], X31
	336 Move [X24+96], V0
	337 Move [X24+104], V0
	338 Move [X24+64], V0
	339 Move [X24+72], V0
	340 Move [X24+32], V0
	341 Move [X24+40], V0
	342 Move W8, 1
	343 Move [X19], W8
	344 Move X8, [X31+192]
	345 Move [X19+176], X8
	346 Move X0, [X25]
	347 Move W8, [X0+224]
	348 Compare W8, 0
	349 JumpIfNotEqual {351}
	350 Call 0x1C17DFC
	351 Move X8, 0x23AA000
	352 Move X8, [X8+2272]
	353 Add X0, X19, 8
	354 Move X3, [X8]
	355 Add X1, X31, 192
	356 Move X2, X19
	357 Call AsyncTaskMethodBuilder`1<LoginResult>.AwaitUnsafeOnCompleted, X0, X1, X2
	358 Move W9, [X10]
	359 Add W9, W9, 10
	360 Add X8, X8, W9
	361 Add X0, X8, 312
	362 Move X8, [X0]
	363 Move X1, [X0+8]
	364 Move X0, X23
	365 NotImplemented "Instruction BLR not yet implemented."
	366 Compare X22, 0
	367 JumpIfEqual {745}
	368 Move W8, [X22+24]
	369 Compare W8, 0
	370 JumpIfEqual {746}
	371 Move [X22+32], X0
	372 Compare X20, 0
	373 JumpIfEqual {747}
	374 Move X0, X20
	375 Move X1, X21
	376 Move X2, X22
	377 Move X3, X31
	378 Move X4, X31
	379 Call AnimalCompanyAPI.GetAvatarsAsync, X0, X1, X2, X3
	380 Compare X0, 0
	381 JumpIfEqual {748}
	382 Move X8, 0x23AA000
	383 Move X8, [X8+2384]
	384 Move X1, [X8]
	385 Call Task`1<GetAvatarsResponse>.GetAwaiter, X0
	386 Move X8, 0x23AA000
	387 Move X8, [X8+2360]
	388 Move [X31+184], X0
	389 Move X1, [X8]
	390 Add X0, X31, 184
	391 Call TaskAwaiter`1<GetAvatarsResponse>.get_IsCompleted, X0
	392 Move TEMP, X0
	393 And TEMP, TEMP, 1
	394 Compare TEMP, 1
	395 JumpIfNotEqual {557}
	396 Move X8, 0x23AA000
	397 Move X8, [X8+2344]
	398 Move X1, [X8]
	399 Add X0, X31, 184
	400 Call TaskAwaiter`1<GetAvatarsResponse>.GetResult, X0
	401 Compare X1, 0
	402 JumpIfEqual {743}
	403 Move X8, [X1+24]
	404 Compare X8, 0
	405 JumpIfEqual {412}
	406 Compare W8, 0
	407 JumpIfEqual {753}
	408 Add X1, X1, 32
	409 Add X0, X19, 72
	410 Move W2, 80
	411 Call 0x3EB2B30
	412 NotImplemented "Instruction CMP not yet implemented."
	413 Move X8, [X19+192]
	414 Move TEMP, 0
	415 Not TEMP
	416 Move W26, TEMP
	417 Move [X31+176], X8
	418 Move [X19+192], X31
	419 Move [X19], W26
	420 Move X8, 0x23AA000
	421 Move X8, [X8+2352]
	422 Move X1, [X8]
	423 Add X0, X31, 176
	424 Call TaskAwaiter`1<ApiUserInventory>.GetResult, X0
	425 Move [X19+152], X0
	426 NotImplemented "Instruction CMP not yet implemented."
	427 Move X8, [X19+200]
	428 Move TEMP, 0
	429 Not TEMP
	430 Move W9, TEMP
	431 Move [X31+168], X8
	432 Move [X19+200], X31
	433 Move [X19], W9
	434 Add X0, X31, 168
	435 Move X1, X31
	436 Call TaskAwaiter.GetResult, X0
	437 Add X1, X19, 56
	438 Add X0, X31, 240
	439 Move W2, 104
	440 Call 0x3EB2AC0
	441 Move W22, [X19+160]
	442 Move W21, [X19+164]
	443 Move X20, 0x23AA000
	444 Move X20, [X20+2288]
	445 Move TEMP, 1
	446 Not TEMP
	447 Move W8, TEMP
	448 Add X0, X31, 8
	449 Add X1, X31, 240
	450 Move W2, 104
	451 Move [X19+8], W8
	452 Call 0x3EB2AC0
	453 Move X0, [X25]
	454 Move W8, [X0+224]
	455 Compare W8, 0
	456 JumpIfNotEqual {458}
	457 Call 0x1C17DFC
	458 Move X20, [X20]
	459 Add X0, X31, 352
	460 Add X1, X31, 8
	461 Move W2, 104
	462 Call 0x3EB2AC0
	463 Add X1, X31, 352
	464 Move X0, X19
	465 Move X2, X20
	466 Move [X31+456], W22
	467 Move [X31+460], W21
	468 Call AsyncTaskMethodBuilder`1<LoginResult>.SetResult, X0, X1
	469 Add X31, X31, 464
	470 Move X20, [X31+64]
	471 Move X19, [X31+72]
	472 Move X22, [X31+48]
	473 Move X21, [X31+56]
	474 Move X24, [X31+32]
	475 Move X23, [X31+40]
	476 Move X26, [X31+16]
	477 Move X25, [X31+24]
	478 Move X29, [X31+80]
	479 Move X30, [X31+88]
	480 Return 
	481 Move X8, 0x23AA000
	482 Move X8, [X8+2416]
	483 Move X0, [X8]
	484 Call 0x1C17F10
	485 Move X20, X0
	486 Move X1, X31
	487 Call Object..ctor, X0
	488 Call AuthCommands.GetAuthDeviceID
	489 Compare X20, 0
	490 JumpIfEqual {749}
	491 Move [X20+16], X0
	492 Move X21, [X19+64]
	493 Compare X21, 0
	494 JumpIfEqual {750}
	495 Move X22, 0x23AA000
	496 Move X8, [X21]
	497 Move X22, [X22+2328]
	498 NotImplemented "Instruction LDRH not yet implemented."
	499 Move X1, [X22]
	500 Compare X9, 0
	501 JumpIfEqual {508}
	502 Move X10, [X8+176]
	503 Add X10, X10, 8
	504 NotImplemented "Instruction LDUR not yet implemented."
	505 NotImplemented "Instruction CMP not yet implemented."
	506 Subtract X9, X9, 1
	507 Add X10, X10, 16
	508 Move W2, 1
	509 Move X0, X21
	510 Call 0x1C5D788
	511 Move X8, 0x23A9000
	512 Move X8, [X8+1608]
	513 Move X0, [X8]
	514 Move W8, [X0+224]
	515 Compare W8, 0
	516 JumpIfNotEqual {518}
	517 Call 0x1C17DFC
	518 Call App.get_api
	519 Compare X0, 0
	520 JumpIfEqual {754}
	521 Move X1, [X19+32]
	522 Move X2, X31
	523 Move X3, X31
	524 Call AnimalCompanyAPI.GetInventoryAsync, X0, X1, X2
	525 Compare X0, 0
	526 JumpIfEqual {755}
	527 Move X8, 0x23AA000
	528 Move X8, [X8+2392]
	529 Move X1, [X8]
	530 Call Task`1<ApiUserInventory>.GetAwaiter, X0
	531 Move X8, 0x23AA000
	532 Move X8, [X8+2376]
	533 Move [X31+176], X0
	534 Move X1, [X8]
	535 Add X0, X31, 176
	536 Call TaskAwaiter`1<ApiUserInventory>.get_IsCompleted, X0
	537 Move TEMP, X0
	538 And TEMP, TEMP, 1
	539 Compare TEMP, 1
	540 JumpIfEqual {420}
	541 Move W8, 3
	542 Move [X19], W8
	543 Move X8, [X31+176]
	544 Move [X19+192], X8
	545 Move X0, [X25]
	546 Move W8, [X0+224]
	547 Compare W8, 0
	548 JumpIfNotEqual {550}
	549 Call 0x1C17DFC
	550 Move X8, 0x23AA000
	551 Move X8, [X8+2264]
	552 Add X0, X19, 8
	553 Move X3, [X8]
	554 Add X1, X31, 176
	555 Move X2, X19
	556 Call AsyncTaskMethodBuilder`1<LoginResult>.AwaitUnsafeOnCompleted, X0, X1, X2
	557 Move W8, 2
	558 Move [X19], W8
	559 Move X8, [X31+184]
	560 Move [X19+184], X8
	561 Move X0, [X25]
	562 Move W8, [X0+224]
	563 Compare W8, 0
	564 JumpIfNotEqual {566}
	565 Call 0x1C17DFC
	566 Move X8, 0x23AA000
	567 Move X8, [X8+2248]
	568 Add X0, X19, 8
	569 Move X3, [X8]
	570 Add X1, X31, 184
	571 Move X2, X19
	572 Call AsyncTaskMethodBuilder`1<LoginResult>.AwaitUnsafeOnCompleted, X0, X1, X2
	573 Move W9, [X10]
	574 Add W9, W9, 1
	575 Add X8, X8, W9
	576 Add X0, X8, 312
	577 Move X8, [X0]
	578 Move X1, [X0+8]
	579 Move X0, X21
	580 NotImplemented "Instruction BLR not yet implemented."
	581 Compare X0, 0
	582 JumpIfEqual {695}
	583 Move X21, [X19+64]
	584 Compare X21, 0
	585 JumpIfEqual {758}
	586 Move X8, [X21]
	587 Move X1, [X22]
	588 NotImplemented "Instruction LDRH not yet implemented."
	589 Compare X9, 0
	590 JumpIfEqual {597}
	591 Move X10, [X8+176]
	592 Add X10, X10, 8
	593 NotImplemented "Instruction LDUR not yet implemented."
	594 NotImplemented "Instruction CMP not yet implemented."
	595 Subtract X9, X9, 1
	596 Add X10, X10, 16
	597 Move W2, 1
	598 Move X0, X21
	599 Call 0x1C5D788
	600 Move X8, 0x23AA000
	601 Move X8, [X8+2312]
	602 Move X0, [X8]
	603 Call 0x1C17F10
	604 Move X8, 0x23AA000
	605 Move X8, [X8+2296]
	606 Move X20, X0
	607 Move X2, [X8]
	608 Move X1, X31
	609 Move X3, X31
	610 Call Func`1<Object>..ctor, X0, X1, X2
	611 Move X0, X20
	612 Call AuthCommands.AuthRetryLoop, X0
	613 Compare X0, 0
	614 JumpIfEqual {759}
	615 Move X8, 0x23AA000
	616 Move X8, [X8+1968]
	617 Move X1, [X8]
	618 Call Task`1<AuthResult>.GetAwaiter, X0
	619 Move X8, 0x23AA000
	620 Move X8, [X8+1960]
	621 Move [X31+200], X0
	622 Move X1, [X8]
	623 Add X0, X31, 200
	624 Call TaskAwaiter`1<AuthResult>.get_IsCompleted, X0
	625 Move TEMP, X0
	626 And TEMP, TEMP, 1
	627 Compare TEMP, 1
	628 JumpIfEqual {164}
	629 Move [X19], W31
	630 Move X8, [X31+200]
	631 Move [X19+168], X8
	632 Move X0, [X25]
	633 Move W8, [X0+224]
	634 Compare W8, 0
	635 JumpIfNotEqual {637}
	636 Call 0x1C17DFC
	637 Move X8, 0x23AA000
	638 Move X8, [X8+2256]
	639 Add X0, X19, 8
	640 Move X3, [X8]
	641 Add X1, X31, 200
	642 Move X2, X19
	643 Call AsyncTaskMethodBuilder`1<LoginResult>.AwaitUnsafeOnCompleted, X0, X1, X2
	644 Move W9, [X10]
	645 Add W9, W9, 1
	646 Add X8, X8, W9
	647 Add X0, X8, 312
	648 Move X8, [X0]
	649 Move X1, [X0+8]
	650 Move X0, X21
	651 NotImplemented "Instruction BLR not yet implemented."
	652 Move X8, 0x23AA000
	653 Move X8, [X8+2320]
	654 Move X21, X0
	655 Move X0, [X8]
	656 Call 0x1C17F10
	657 Move X8, 0x23AA000
	658 Move X8, [X8+2408]
	659 Move X22, X0
	660 Move X2, [X8]
	661 Move X1, X20
	662 Move X3, X31
	663 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	664 Move X8, 0x23AA000
	665 Move X8, [X8+2304]
	666 Move X2, [X8]
	667 Move X0, X21
	668 Move X1, X22
	669 Call Enumerable.Any, X0, X1
	670 Move TEMP, X0
	671 And TEMP, TEMP, 1
	672 Compare TEMP, 1
	673 JumpIfNotEqual {695}
	674 Move X8, 0x23A9000
	675 Move X8, [X8+1928]
	676 Move X0, [X8]
	677 Move W8, [X0+224]
	678 Compare W8, 0
	679 JumpIfNotEqual {681}
	680 Call 0x1C17DFC
	681 Move X8, 0x23AA000
	682 Move X8, [X8+2432]
	683 Move X9, 0x23AA000
	684 Move X10, 0x23AA000
	685 Move X9, [X9+1816]
	686 Move X10, [X10+2424]
	687 Move X1, [X8]
	688 Move X3, [X9]
	689 Move X4, [X10]
	690 Move W0, 2048
	691 Move W5, 125
	692 Move X2, X31
	693 Move X6, X31
	694 Call Log.Debug, X0, X1, X2, X3, X4, X5
	695 Move X8, 0x23A9000
	696 Move X8, [X8+1608]
	697 Move X0, [X8]
	698 Move W8, [X0+224]
	699 Compare W8, 0
	700 JumpIfNotEqual {702}
	701 Call 0x1C17DFC
	702 Call App.get_api
	703 Move X21, [X19+56]
	704 Move X20, X0
	705 Call AuthCommands.GetAuthDeviceID
	706 Compare X20, 0
	707 JumpIfEqual {756}
	708 Move X2, X0
	709 Move X0, X20
	710 Move X1, X21
	711 Move X3, X31
	712 Move X4, X31
	713 Move X5, X31
	714 Call AnimalCompanyAPI.LinkDeviceAsync, X0, X1, X2, X3, X4
	715 Compare X0, 0
	716 JumpIfEqual {757}
	717 Move X1, X31
	718 Call Task.GetAwaiter, X0
	719 Move [X31+168], X0
	720 Add X0, X31, 168
	721 Move X1, X31
	722 Call TaskAwaiter.get_IsCompleted, X0
	723 Move TEMP, X0
	724 And TEMP, TEMP, 1
	725 Compare TEMP, 1
	726 JumpIfEqual {434}
	727 Move W8, 4
	728 Move [X19], W8
	729 Move X8, [X31+168]
	730 Move [X19+200], X8
	731 Move X0, [X25]
	732 Move W8, [X0+224]
	733 Compare W8, 0
	734 JumpIfNotEqual {736}
	735 Call 0x1C17DFC
	736 Move X8, 0x23AA000
	737 Move X8, [X8+2280]
	738 Add X0, X19, 8
	739 Move X3, [X8]
	740 Add X1, X31, 168
	741 Move X2, X19
	742 Call AsyncTaskMethodBuilder`1<LoginResult>.AwaitUnsafeOnCompleted, X0, X1, X2
	743 Call 0x1C17F20
	744 Call 0x1C17F20
	745 Call 0x1C17F20
	746 Call 0x1C17F28
	747 Call 0x1C17F20
	748 Call 0x1C17F20
	749 Call 0x1C17F20
	750 Call 0x1C17F20
	751 Call 0x1C17F20
	752 Call 0x1C17F20
	753 Call 0x1C17F28
	754 Call 0x1C17F20
	755 Call 0x1C17F20
	756 Call 0x1C17F20
	757 Call 0x1C17F20
	758 Call 0x1C17F20
	759 Call 0x1C17F20
	760 Move X20, X0
	761 Move W26, 3
	762 Move X20, X0
	763 Move W26, 2
	764 Move X20, X0
	765 Move W8, W1
	766 Move X20, X0
	767 Move W8, W1
	768 NotImplemented "Instruction CMP not yet implemented."
	769 Move X0, X20
	770 Call 0x3EB2AD0
	771 Move X20, X0
	772 Move X0, 0x23A9000
	773 Move X0, [X0+2000]
	774 Call 0x1C17D08
	775 Move X8, [X20]
	776 Move X1, [X8]
	777 Call 0x1C18270
	778 Move TEMP, X0
	779 And TEMP, TEMP, 1
	780 Compare TEMP, 1
	781 JumpIfNotEqual {871}
	782 Move X8, [X20]
	783 NotImplemented "Instruction LDRSW not yet implemented."
	784 Add X20, X31, 136
	785 Move [X20], X8
	786 Add W8, W9, 1
	787 Move [X31+160], W8
	788 Call 0x3EB2AE0
	789 Move W8, [X31+160]
	790 Subtract W8, W8, 1
	791 Move X20, [X20]
	792 Move X0, 0x23AA000
	793 Move X0, [X0+2208]
	794 Call 0x1C17D08
	795 Compare X20, 0
	796 JumpIfEqual {805}
	797 Move X8, [X20]
	798 Move W9, [X0+304]
	799 Move W10, [X8+304]
	800 NotImplemented "Instruction CMP not yet implemented."
	801 Move X8, [X8+200]
	802 Add X8, X8, X9
	803 NotImplemented "Instruction LDUR not yet implemented."
	804 NotImplemented "Instruction CMP not yet implemented."
	805 Move X0, 0x23A9000
	806 Move X0, [X0+1928]
	807 Call 0x1C17D08
	808 Move W8, [X0+224]
	809 Compare W8, 0
	810 JumpIfNotEqual {812}
	811 Call 0x1C17DFC
	812 Move X0, 0x23AA000
	813 Move X0, [X0+2456]
	814 Call 0x1C17D08
	815 Move X21, X0
	816 Move X0, 0x23AA000
	817 Move X0, [X0+1816]
	818 Call 0x1C17D08
	819 Move X22, X0
	820 Move X0, 0x23AA000
	821 Move X0, [X0+2424]
	822 Call 0x1C17D08
	823 Move X5, X0
	824 Move W0, 2048
	825 Move W6, 94
	826 Move X1, X21
	827 Move X2, X20
	828 Move X3, X31
	829 Move X4, X22
	830 Move X7, X31
	831 Call Log.Error, X0, X1, X2, X3, X4, X5, X6
	832 Move W8, [X31+160]
	833 NotImplemented "Instruction MOVI not yet implemented."
	834 Move W21, W31
	835 Move [X31+336], X31
	836 Subtract W8, W8, 1
	837 Move [X24+96], V0
	838 Move [X24+104], V0
	839 Move [X24+64], V0
	840 Move [X24+72], V0
	841 Move [X24+32], V0
	842 Move [X24+40], V0
	843 Move [X31+160], W8
	844 Move W22, 11
	845 Move X0, 0x23A9000
	846 Move X0, [X0+1928]
	847 Call 0x1C17D08
	848 Move W8, [X0+224]
	849 Compare W8, 0
	850 JumpIfNotEqual {852}
	851 Call 0x1C17DFC
	852 Move X0, 0x23AA000
	853 Move X0, [X0+2464]
	854 Call 0x1C17D08
	855 Move X20, X0
	856 Move X0, 0x23AA000
	857 Move X0, [X0+1816]
	858 Call 0x1C17D08
	859 Move X21, X0
	860 Move X0, 0x23AA000
	861 Move X0, [X0+2424]
	862 Call 0x1C17D08
	863 Move X4, X0
	864 Move W0, 2048
	865 Move W5, 90
	866 Move X1, X20
	867 Move X2, X31
	868 Move X3, X21
	869 Move X6, X31
	870 Call Log.Debug, X0, X1, X2, X3, X4, X5
	871 Move W0, 8
	872 Call 0x3EB2AF0
	873 Move X8, [X20]
	874 Move [X0], X8
	875 Move X1, 0x216A000
	876 Add X1, X1, 3672
	877 Move X2, X31
	878 Call 0x3EB2B00
	879 Move X21, X1
	880 Move X20, X0
	881 Call 0x3EB2AE0
	882 Move X20, X0
	883 Move W8, W1
	884 NotImplemented "Instruction CMP not yet implemented."
	885 Move X0, X20
	886 Call 0x3EB2AD0
	887 Move X20, X0
	888 Move X0, 0x23A8000
	889 Move X0, [X0+2000]
	890 Call 0x1C17D08
	891 Move X8, [X20]
	892 Move X1, [X8]
	893 Call 0x1C18270
	894 Move TEMP, X0
	895 And TEMP, TEMP, 1
	896 Compare TEMP, 1
	897 JumpIfNotEqual {938}
	898 Move X8, [X20]
	899 NotImplemented "Instruction LDRSW not yet implemented."
	900 Add X20, X31, 136
	901 Move [X20], X8
	902 Add W8, W9, 1
	903 Move [X31+160], W8
	904 Call 0x3EB2AE0
	905 Move W8, [X31+160]
	906 Subtract W8, W8, 1
	907 Move X20, [X20]
	908 Move X0, 0x23A8000
	909 Move X0, [X0+1928]
	910 Call 0x1C17D08
	911 Move W8, [X0+224]
	912 Compare W8, 0
	913 JumpIfNotEqual {915}
	914 Call 0x1C17DFC
	915 Move X0, 0x23A9000
	916 Move X0, [X0+2472]
	917 Call 0x1C17D08
	918 Move X21, X0
	919 Move X0, 0x23A9000
	920 Move X0, [X0+1816]
	921 Call 0x1C17D08
	922 Move X22, X0
	923 Move X0, 0x23A9000
	924 Move X0, [X0+2424]
	925 Call 0x1C17D08
	926 Move X5, X0
	927 Move W0, 2048
	928 Move W6, 115
	929 Move X1, X21
	930 Move X2, X20
	931 Move X3, X31
	932 Move X4, X22
	933 Move X7, X31
	934 Call Log.Error, X0, X1, X2, X3, X4, X5, X6
	935 Move W8, [X31+160]
	936 Subtract W8, W8, 1
	937 Move [X31+160], W8
	938 Move W0, 8
	939 Call 0x3EB2AF0
	940 Move X8, [X20]
	941 Move [X0], X8
	942 Move X1, 0x2169000
	943 Add X1, X1, 3672
	944 Move X2, X31
	945 Call 0x3EB2B00
	946 Move X21, X1
	947 Move X20, X0
	948 Call 0x3EB2AE0
	949 Move X20, X0
	950 Move W8, W1
	951 NotImplemented "Instruction CMP not yet implemented."
	952 Move X0, X20
	953 Call 0x3EB2AD0
	954 Move X20, X0
	955 Move X0, 0x23A8000
	956 Move X0, [X0+2000]
	957 Call 0x1C17D08
	958 Move X8, [X20]
	959 Move X1, [X8]
	960 Call 0x1C18270
	961 Move TEMP, X0
	962 And TEMP, TEMP, 1
	963 Compare TEMP, 1
	964 JumpIfNotEqual {1057}
	965 Move X8, [X20]
	966 NotImplemented "Instruction LDRSW not yet implemented."
	967 Add X20, X31, 136
	968 Move [X20], X8
	969 Add W8, W9, 1
	970 Move [X31+160], W8
	971 Call 0x3EB2AE0
	972 Move W8, [X31+160]
	973 Subtract W8, W8, 1
	974 Move X20, [X20]
	975 Move X0, 0x23A9000
	976 Move X0, [X0+2208]
	977 Call 0x1C17D08
	978 Compare X20, 0
	979 JumpIfEqual {988}
	980 Move X8, [X20]
	981 Move W9, [X0+304]
	982 Move W10, [X8+304]
	983 NotImplemented "Instruction CMP not yet implemented."
	984 Move X8, [X8+200]
	985 Add X8, X8, X9
	986 NotImplemented "Instruction LDUR not yet implemented."
	987 NotImplemented "Instruction CMP not yet implemented."
	988 Move X0, 0x23A8000
	989 Move X0, [X0+1928]
	990 Call 0x1C17D08
	991 Move W8, [X0+224]
	992 Compare W8, 0
	993 JumpIfNotEqual {995}
	994 Call 0x1C17DFC
	995 Move X0, 0x23A9000
	996 Move X0, [X0+2480]
	997 Call 0x1C17D08
	998 Move X21, X0
	999 Move X0, 0x23A9000
	1000 Move X0, [X0+1816]
	1001 Call 0x1C17D08
	1002 Move X22, X0
	1003 Move X0, 0x23A9000
	1004 Move X0, [X0+2424]
	1005 Call 0x1C17D08
	1006 Move X5, X0
	1007 Move W0, 2048
	1008 Move W6, 140
	1009 Move X1, X21
	1010 Move X2, X20
	1011 Move X3, X31
	1012 Move X4, X22
	1013 Move X7, X31
	1014 Call Log.Error, X0, X1, X2, X3, X4, X5, X6
	1015 Move W8, [X31+160]
	1016 Subtract W8, W8, 1
	1017 Move [X31+160], W8
	1018 Move X0, 0x23A8000
	1019 Move X0, [X0+1928]
	1020 Call 0x1C17D08
	1021 Move W8, [X0+224]
	1022 Compare W8, 0
	1023 JumpIfNotEqual {1025}
	1024 Call 0x1C17DFC
	1025 Move X0, 0x23A9000
	1026 Move X0, [X0+2464]
	1027 Call 0x1C17D08
	1028 Move X20, X0
	1029 Move X0, 0x23A9000
	1030 Move X0, [X0+1816]
	1031 Call 0x1C17D08
	1032 Move X21, X0
	1033 Move X0, 0x23A9000
	1034 Move X0, [X0+2424]
	1035 Call 0x1C17D08
	1036 Move X4, X0
	1037 Move W0, 2048
	1038 Move W5, 136
	1039 Move X1, X20
	1040 Move X2, X31
	1041 Move X3, X21
	1042 Move X6, X31
	1043 Call Log.Debug, X0, X1, X2, X3, X4, X5
	1044 Move W8, [X31+160]
	1045 NotImplemented "Instruction MOVI not yet implemented."
	1046 Move W21, W31
	1047 Move [X31+336], X31
	1048 Subtract W8, W8, 1
	1049 Move [X24+96], V0
	1050 Move [X24+104], V0
	1051 Move [X24+64], V0
	1052 Move [X24+72], V0
	1053 Move [X24+32], V0
	1054 Move [X24+40], V0
	1055 Move [X31+160], W8
	1056 Move W22, 3
	1057 Move W0, 8
	1058 Call 0x3EB2AF0
	1059 Move X8, [X20]
	1060 Move [X0], X8
	1061 Move X1, 0x2169000
	1062 Add X1, X1, 3672
	1063 Move X2, X31
	1064 Call 0x3EB2B00
	1065 Move X21, X1
	1066 Move X20, X0
	1067 Call 0x3EB2AE0
	1068 Move X8, X1
	1069 Move X20, X0
	1070 Move X20, X0
	1071 Move W8, W1
	1072 NotImplemented "Instruction CMP not yet implemented."
	1073 Move X0, X20
	1074 Call 0x3EB2AD0
	1075 Move X20, X0
	1076 Move X0, 0x23A8000
	1077 Move X0, [X0+2000]
	1078 Call 0x1C17D08
	1079 Move X8, [X20]
	1080 Move X1, [X8]
	1081 Call 0x1C18270
	1082 Move TEMP, X0
	1083 And TEMP, TEMP, 1
	1084 Compare TEMP, 1
	1085 JumpIfNotEqual {1126}
	1086 Move X8, [X20]
	1087 NotImplemented "Instruction LDRSW not yet implemented."
	1088 Add X20, X31, 136
	1089 Move [X20], X8
	1090 Add W8, W9, 1
	1091 Move [X31+160], W8
	1092 Call 0x3EB2AE0
	1093 Move W8, [X31+160]
	1094 Subtract W8, W8, 1
	1095 Move X20, [X20]
	1096 Move X0, 0x23A8000
	1097 Move X0, [X0+1928]
	1098 Call 0x1C17D08
	1099 Move W8, [X0+224]
	1100 Compare W8, 0
	1101 JumpIfNotEqual {1103}
	1102 Call 0x1C17DFC
	1103 Move X0, 0x23A9000
	1104 Move X0, [X0+2488]
	1105 Call 0x1C17D08
	1106 Move X21, X0
	1107 Move X0, 0x23A9000
	1108 Move X0, [X0+1816]
	1109 Call 0x1C17D08
	1110 Move X22, X0
	1111 Move X0, 0x23A9000
	1112 Move X0, [X0+2424]
	1113 Call 0x1C17D08
	1114 Move X5, X0
	1115 Move W0, 2048
	1116 Move W6, 107
	1117 Move X1, X21
	1118 Move X2, X20
	1119 Move X3, X31
	1120 Move X4, X22
	1121 Move X7, X31
	1122 Call Log.Error, X0, X1, X2, X3, X4, X5, X6
	1123 Move W8, [X31+160]
	1124 Subtract W8, W8, 1
	1125 Move [X31+160], W8
	1126 Move W0, 8
	1127 Call 0x3EB2AF0
	1128 Move X8, [X20]
	1129 Move [X0], X8
	1130 Move X1, 0x2169000
	1131 Add X1, X1, 3672
	1132 Move X2, X31
	1133 Call 0x3EB2B00
	1134 Move X21, X1
	1135 Move X20, X0
	1136 Call 0x3EB2AE0
	1137 Move W8, W21
	1138 NotImplemented "Instruction CMP not yet implemented."
	1139 Move X0, X20
	1140 Call 0x3EB2AD0
	1141 Move X20, X0
	1142 Move X0, 0x23A8000
	1143 Move X0, [X0+2000]
	1144 Call 0x1C17D08
	1145 Move X8, [X20]
	1146 Move X1, [X8]
	1147 Call 0x1C18270
	1148 Move TEMP, X0
	1149 And TEMP, TEMP, 1
	1150 Compare TEMP, 1
	1151 JumpIfNotEqual {1202}
	1152 Move X8, [X20]
	1153 NotImplemented "Instruction LDRSW not yet implemented."
	1154 Add X20, X31, 136
	1155 Move [X20], X8
	1156 Add W8, W9, 1
	1157 Move [X31+160], W8
	1158 Call 0x3EB2AE0
	1159 Move W8, [X31+160]
	1160 Subtract W8, W8, 1
	1161 Move X20, [X20]
	1162 Move X0, 0x23A8000
	1163 Move X0, [X0+1928]
	1164 Call 0x1C17D08
	1165 Move W8, [X0+224]
	1166 Compare W8, 0
	1167 JumpIfNotEqual {1169}
	1168 Call 0x1C17DFC
	1169 Move X0, 0x23A9000
	1170 Move X0, [X0+2496]
	1171 Call 0x1C17D08
	1172 Move X21, X0
	1173 Move X0, 0x23A9000
	1174 Move X0, [X0+1816]
	1175 Call 0x1C17D08
	1176 Move X22, X0
	1177 Move X0, 0x23A9000
	1178 Move X0, [X0+2424]
	1179 Call 0x1C17D08
	1180 Move X5, X0
	1181 Move W0, 2048
	1182 Move W6, 148
	1183 Move X1, X21
	1184 Move X2, X20
	1185 Move X3, X31
	1186 Move X4, X22
	1187 Move X7, X31
	1188 Call Log.Error, X0, X1, X2, X3, X4, X5, X6
	1189 Move W8, [X31+160]
	1190 NotImplemented "Instruction MOVI not yet implemented."
	1191 Move W21, W31
	1192 Move [X31+336], X31
	1193 Subtract W8, W8, 1
	1194 Move [X24+96], V0
	1195 Move [X24+104], V0
	1196 Move [X24+64], V0
	1197 Move [X24+72], V0
	1198 Move [X24+32], V0
	1199 Move [X24+40], V0
	1200 Move [X31+160], W8
	1201 Move W22, 2
	1202 Move W0, 8
	1203 Call 0x3EB2AF0
	1204 Move X8, [X20]
	1205 Move [X0], X8
	1206 Move X1, 0x2169000
	1207 Add X1, X1, 3672
	1208 Move X2, X31
	1209 Call 0x3EB2B00
	1210 Move X21, X1
	1211 Move X20, X0
	1212 Call 0x3EB2AE0
	1213 Move W8, W21
	1214 Move X20, X0
	1215 Move W8, W1
	1216 Move W9, 1
	1217 NotImplemented "Instruction CMP not yet implemented."
	1218 Move X0, X20
	1219 Call 0x3EB2AD0
	1220 Move X20, X0
	1221 Move X0, 0x23A8000
	1222 Move X0, [X0+2000]
	1223 Call 0x1C17D08
	1224 Move X8, [X20]
	1225 Move X1, [X8]
	1226 Call 0x1C18270
	1227 Move TEMP, X0
	1228 And TEMP, TEMP, 1
	1229 Compare TEMP, 1
	1230 JumpIfNotEqual {1259}
	1231 Move X8, [X20]
	1232 NotImplemented "Instruction LDRSW not yet implemented."
	1233 Add X20, X31, 136
	1234 Move [X20], X8
	1235 Add W8, W9, 1
	1236 Move [X31+160], W8
	1237 Call 0x3EB2AE0
	1238 Move W8, [X31+160]
	1239 Move X0, 0x23A8000
	1240 Subtract W8, W8, 1
	1241 Move X20, [X20]
	1242 Move TEMP, 1
	1243 Not TEMP
	1244 Move W8, TEMP
	1245 Move [X19+8], W8
	1246 Move X0, [X0+2664]
	1247 Call 0x1C17D08
	1248 Move W8, [X0+224]
	1249 Compare W8, 0
	1250 JumpIfNotEqual {1252}
	1251 Call 0x1C17DFC
	1252 Move X0, 0x23A9000
	1253 Move X0, [X0+2504]
	1254 Call 0x1C17D08
	1255 Move X2, X0
	1256 Move X0, X19
	1257 Move X1, X20
	1258 Call AsyncTaskMethodBuilder`1<LoginResult>.SetException, X0, X1
	1259 Move W0, 8
	1260 Call 0x3EB2AF0
	1261 Move X8, [X20]
	1262 Move [X0], X8
	1263 Move X1, 0x2169000
	1264 Add X1, X1, 3672
	1265 Move X2, X31
	1266 Call 0x3EB2B00
	1267 Move X20, X0
	1268 Call 0x3EB2AE0
	1269 Move X0, X20
	1270 Call 0x1D2D690
	1271 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x01D4C628 LDR X8, [X8 + 0xA10]
	0x01D4C62C LDR X1, [X8]
	0x01D4C630 BL 0x2211230
	0x01D4C634 LDR X8, [X20 + 0xB8]
	0x01D4C638 CBZ X8, 0x1D4C7C0
	0x01D4C63C LDR X8, [X8 + 0x98]
	0x01D4C640 CBZ X8, 0x1D4C7CC
	0x01D4C644 ADRP X9, 0x23A7000
	0x01D4C648 LDR X9, [X9 + 0xE30]
	0x01D4C64C AND W1, W0, 0x1
	0x01D4C650 LDR X2, [X9]
	0x01D4C654 MOV X0, X8
	0x01D4C658 BL 0x26518D0
	0x01D4C65C LDR X21, [X19 + 0x18]
	0x01D4C660 CBZ X21, 0x1D4CD24
	0x01D4C664 LDR X8, [X21]
	0x01D4C668 LDR X1, [X23]
	0x01D4C66C LDRH W9, [X8 + 0x12E]
	0x01D4C670 CBZ X9, 0x1D4C694
	0x01D4C674 LDR X10, [X8 + 0xB0]
	0x01D4C678 ADD X10, X10, 0x8
	0x01D4C67C LDUR X11, [X10 - 0x8]
	0x01D4C680 CMP X11, X1
	0x01D4C684 B.EQ 0x1D4C6A4
	0x01D4C688 SUBS X9, X9, 0x1
	0x01D4C68C ADD X10, X10, 0x10
	0x01D4C690 B.NE 0x1D4C67C
	0x01D4C694 MOVZ W2, 0x6
	0x01D4C698 MOV X0, X21
	0x01D4C69C BL 0x1C5C788
	0x01D4C6A0 B 0x1D4C6B4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x268D000
	007 Move X21, 0x23A8000
	008 Move W8, [X22+1922]
	009 Move X21, [X21+2664]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x23A9000
	017 Move X0, [X0+2512]
	018 Call 0x1C17CF4
	019 Move X0, 0x23A8000
	020 Move X0, [X0+2664]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1922], W8
	024 Move X0, [X21]
	025 Move X21, 0x23A9000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2512]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<LoginResult>.SetStateMachine, X0, X1
	040 Return 

