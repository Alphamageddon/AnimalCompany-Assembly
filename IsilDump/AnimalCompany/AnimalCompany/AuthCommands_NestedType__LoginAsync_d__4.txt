Type: AnimalCompany.AuthCommands/<LoginAsync>d__4

Method: System.Void MoveNext()

Disassembly:
	0x01C964D8 MOVZ W2, 0x4
	0x01C964DC MOV X0, X22
	0x01C964E0 BL 0x1BB4284
	0x01C964E4 B 0x1C964F8
	0x01C964E8 LDR W9, [X10]
	0x01C964EC ADD W9, W9, 0x4
	0x01C964F0 ADD X8, X8, W9, 0x4, SXTW
	0x01C964F4 ADD X0, X8, 0x138
	0x01C964F8 LDP X8, X1, [X0]
	0x01C964FC MOV X0, X22
	0x01C96500 BLR X8
	0x01C96504 CBZ X0, 0x1C97374
	0x01C96508 ADRP X24, 0x22B8000
	0x01C9650C LDR X8, [X0]
	0x01C96510 LDR X24, [X24 + 0x68]
	0x01C96514 MOV X22, X0
	0x01C96518 LDRH W9, [X8 + 0x12E]
	0x01C9651C LDR X1, [X24]
	0x01C96520 CBZ X9, 0x1C96544
	0x01C96524 LDR X10, [X8 + 0xB0]
	0x01C96528 ADD X10, X10, 0x8
	0x01C9652C LDUR X11, [X10 - 0x8]
	0x01C96530 CMP X11, X1
	0x01C96534 B.EQ 0x1C96554
	0x01C96538 SUBS X9, X9, 0x1
	0x01C9653C ADD X10, X10, 0x10
	0x01C96540 B.NE 0x1C9652C
	0x01C96544 MOVZ W2, 0x9
	0x01C96548 MOV X0, X22
	0x01C9654C BL 0x1BB4284
	0x01C96550 B 0x1C96564
	0x01C96554 LDR W9, [X10]
	0x01C96558 ADD W9, W9, 0x9
	0x01C9655C ADD X8, X8, W9, 0x4, SXTW
	0x01C96560 ADD X0, X8, 0x138
	0x01C96564 LDP X8, X1, [X0]
	0x01C96568 MOV X0, X22
	0x01C9656C BLR X8
	0x01C96570 CBZ X21, 0x1C97374
	0x01C96574 ADRP X25, 0x22B7000
	0x01C96578 LDR X25, [X25 + 0x7A0]
	0x01C9657C MOV X1, X0
	0x01C96580 MOV X0, X21
	0x01C96584 LDR X2, [X25]
	0x01C96588 BL 0x24BFC34
	0x01C9658C LDR X9, [X19 + 0xA8]
	0x01C96590 CBZ X9, 0x1C97374
	0x01C96594 LDR X22, [X20 + 0x20]
	0x01C96598 CBZ X22, 0x1C97374
	0x01C9659C LDR X8, [X22]
	0x01C965A0 LDR X21, [X9 + 0x50]
	0x01C965A4 LDR X1, [X23]
	0x01C965A8 LDRH W9, [X8 + 0x12E]
	0x01C965AC CBZ X9, 0x1C965D0
	0x01C965B0 LDR X10, [X8 + 0xB0]
	0x01C965B4 ADD X10, X10, 0x8
	0x01C965B8 LDUR X11, [X10 - 0x8]
	0x01C965BC CMP X11, X1
	0x01C965C0 B.EQ 0x1C965E0
	0x01C965C4 SUBS X9, X9, 0x1
	0x01C965C8 ADD X10, X10, 0x10
	0x01C965CC B.NE 0x1C965B8
	0x01C965D0 MOVZ W2, 0x4
	0x01C965D4 MOV X0, X22
	0x01C965D8 BL 0x1BB4284
	0x01C965DC B 0x1C965F0
	0x01C965E0 LDR W9, [X10]
	0x01C965E4 ADD W9, W9, 0x4
	0x01C965E8 ADD X8, X8, W9, 0x4, SXTW
	0x01C965EC ADD X0, X8, 0x138
	0x01C965F0 LDP X8, X1, [X0]
	0x01C965F4 MOV X0, X22
	0x01C965F8 BLR X8
	0x01C965FC CBZ X0, 0x1C97374
	0x01C96600 LDR X8, [X0]
	0x01C96604 LDR X1, [X24]
	0x01C96608 MOV X22, X0
	0x01C9660C LDRH W9, [X8 + 0x12E]
	0x01C96610 CBZ X9, 0x1C96634
	0x01C96614 LDR X10, [X8 + 0xB0]
	0x01C96618 ADD X10, X10, 0x8
	0x01C9661C LDUR X11, [X10 - 0x8]
	0x01C96620 CMP X11, X1
	0x01C96624 B.EQ 0x1C96644
	0x01C96628 SUBS X9, X9, 0x1
	0x01C9662C ADD X10, X10, 0x10
	0x01C96630 B.NE 0x1C9661C
	0x01C96634 MOVZ W2, 0x11
	0x01C96638 MOV X0, X22
	0x01C9663C BL 0x1BB4284
	0x01C96640 B 0x1C96654
	0x01C96644 LDR W9, [X10]
	0x01C96648 ADD W9, W9, 0x11
	0x01C9664C ADD X8, X8, W9, 0x4, SXTW
	0x01C96650 ADD X0, X8, 0x138
	0x01C96654 LDP X8, X1, [X0]
	0x01C96658 MOV X0, X22
	0x01C9665C BLR X8
	0x01C96660 CBZ X21, 0x1C97374
	0x01C96664 LDR X2, [X25]
	0x01C96668 MOV X1, X0
	0x01C9666C MOV X0, X21
	0x01C96670 BL 0x24BFC34
	0x01C96674 LDR X9, [X19 + 0xA8]
	0x01C96678 CBZ X9, 0x1C97374
	0x01C9667C LDR X22, [X20 + 0x20]
	0x01C96680 CBZ X22, 0x1C97374
	0x01C96684 LDR X8, [X22]
	0x01C96688 LDR X21, [X9 + 0x58]
	0x01C9668C LDR X1, [X23]
	0x01C96690 LDRH W9, [X8 + 0x12E]
	0x01C96694 CBZ X9, 0x1C966B8
	0x01C96698 LDR X10, [X8 + 0xB0]
	0x01C9669C ADD X10, X10, 0x8
	0x01C966A0 LDUR X11, [X10 - 0x8]
	0x01C966A4 CMP X11, X1
	0x01C966A8 B.EQ 0x1C966C8
	0x01C966AC SUBS X9, X9, 0x1
	0x01C966B0 ADD X10, X10, 0x10
	0x01C966B4 B.NE 0x1C966A0
	0x01C966B8 MOVZ W2, 0x4
	0x01C966BC MOV X0, X22
	0x01C966C0 BL 0x1BB4284
	0x01C966C4 B 0x1C966D8
	0x01C966C8 LDR W9, [X10]
	0x01C966CC ADD W9, W9, 0x4
	0x01C966D0 ADD X8, X8, W9, 0x4, SXTW
	0x01C966D4 ADD X0, X8, 0x138
	0x01C966D8 LDP X8, X1, [X0]
	0x01C966DC MOV X0, X22
	0x01C966E0 BLR X8
	0x01C966E4 CBZ X0, 0x1C97374
	0x01C966E8 LDR X8, [X0]
	0x01C966EC LDR X1, [X24]
	0x01C966F0 MOV X22, X0
	0x01C966F4 LDRH W9, [X8 + 0x12E]
	0x01C966F8 CBZ X9, 0x1C9671C
	0x01C966FC LDR X10, [X8 + 0xB0]
	0x01C96700 ADD X10, X10, 0x8
	0x01C96704 LDUR X11, [X10 - 0x8]
	0x01C96708 CMP X11, X1
	0x01C9670C B.EQ 0x1C9672C
	0x01C96710 SUBS X9, X9, 0x1
	0x01C96714 ADD X10, X10, 0x10
	0x01C96718 B.NE 0x1C96704
	0x01C9671C MOVZ W2, 0x3
	0x01C96720 MOV X0, X22
	0x01C96724 BL 0x1BB4284
	0x01C96728 B 0x1C9673C
	0x01C9672C LDR W9, [X10]
	0x01C96730 ADD W9, W9, 0x3
	0x01C96734 ADD X8, X8, W9, 0x4, SXTW
	0x01C96738 ADD X0, X8, 0x138
	0x01C9673C LDP X8, X1, [X0]
	0x01C96740 MOV X0, X22
	0x01C96744 BLR X8
	0x01C96748 CBZ X21, 0x1C97374
	0x01C9674C LDR X2, [X25]
	0x01C96750 MOV X1, X0
	0x01C96754 MOV X0, X21
	0x01C96758 BL 0x24BFC34
	0x01C9675C LDR X21, [X20 + 0x20]
	0x01C96760 CBZ X21, 0x1C97374
	0x01C96764 LDR X8, [X21]
	0x01C96768 LDR X1, [X23]
	0x01C9676C LDRH W9, [X8 + 0x12E]
	0x01C96770 CBZ X9, 0x1C96794
	0x01C96774 LDR X10, [X8 + 0xB0]
	0x01C96778 ADD X10, X10, 0x8
	0x01C9677C LDUR X11, [X10 - 0x8]
	0x01C96780 CMP X11, X1
	0x01C96784 B.EQ 0x1C967A4
	0x01C96788 SUBS X9, X9, 0x1
	0x01C9678C ADD X10, X10, 0x10
	0x01C96790 B.NE 0x1C9677C
	0x01C96794 MOVZ W2, 0x4
	0x01C96798 MOV X0, X21
	0x01C9679C BL 0x1BB4284
	0x01C967A0 B 0x1C967B4
	0x01C967A4 LDR W9, [X10]
	0x01C967A8 ADD W9, W9, 0x4
	0x01C967AC ADD X8, X8, W9, 0x4, SXTW
	0x01C967B0 ADD X0, X8, 0x138
	0x01C967B4 LDP X8, X1, [X0]
	0x01C967B8 MOV X0, X21
	0x01C967BC BLR X8
	0x01C967C0 CBZ X0, 0x1C97374
	0x01C967C4 LDR X8, [X0]
	0x01C967C8 LDR X1, [X24]
	0x01C967CC MOV X21, X0
	0x01C967D0 LDRH W9, [X8 + 0x12E]
	0x01C967D4 CBZ X9, 0x1C967F8
	0x01C967D8 LDR X10, [X8 + 0xB0]
	0x01C967DC ADD X10, X10, 0x8
	0x01C967E0 LDUR X11, [X10 - 0x8]
	0x01C967E4 CMP X11, X1
	0x01C967E8 B.EQ 0x1C96808
	0x01C967EC SUBS X9, X9, 0x1
	0x01C967F0 ADD X10, X10, 0x10
	0x01C967F4 B.NE 0x1C967E0
	0x01C967F8 MOVZ W2, 0x3
	0x01C967FC MOV X0, X21
	0x01C96800 BL 0x1BB4284
	0x01C96804 B 0x1C96818
	0x01C96808 LDR W9, [X10]
	0x01C9680C ADD W9, W9, 0x3
	0x01C96810 ADD X8, X8, W9, 0x4, SXTW
	0x01C96814 ADD X0, X8, 0x138
	0x01C96818 LDP X8, X1, [X0]
	0x01C9681C MOV X0, X21
	0x01C96820 BLR X8
	0x01C96824 MOV X1, X31
	0x01C96828 BL 0x30905F0
	0x01C9682C TBZ X0, 0x0, 0x1C96918
	0x01C96830 LDR X9, [X19 + 0xA8]
	0x01C96834 CBZ X9, 0x1C97374
	0x01C96838 LDR X22, [X20 + 0x20]
	0x01C9683C CBZ X22, 0x1C97374
	0x01C96840 LDR X8, [X22]
	0x01C96844 LDR X21, [X9 + 0x58]
	0x01C96848 LDR X1, [X23]
	0x01C9684C LDRH W9, [X8 + 0x12E]
	0x01C96850 CBZ X9, 0x1C96874
	0x01C96854 LDR X10, [X8 + 0xB0]
	0x01C96858 ADD X10, X10, 0x8
	0x01C9685C LDUR X11, [X10 - 0x8]
	0x01C96860 CMP X11, X1
	0x01C96864 B.EQ 0x1C96884
	0x01C96868 SUBS X9, X9, 0x1
	0x01C9686C ADD X10, X10, 0x10
	0x01C96870 B.NE 0x1C9685C
	0x01C96874 MOVZ W2, 0x4
	0x01C96878 MOV X0, X22
	0x01C9687C BL 0x1BB4284
	0x01C96880 B 0x1C96894
	0x01C96884 LDR W9, [X10]
	0x01C96888 ADD W9, W9, 0x4
	0x01C9688C ADD X8, X8, W9, 0x4, SXTW
	0x01C96890 ADD X0, X8, 0x138
	0x01C96894 LDP X8, X1, [X0]
	0x01C96898 MOV X0, X22
	0x01C9689C BLR X8
	0x01C968A0 CBZ X0, 0x1C97374
	0x01C968A4 LDR X8, [X0]
	0x01C968A8 LDR X1, [X24]
	0x01C968AC MOV X22, X0
	0x01C968B0 LDRH W9, [X8 + 0x12E]
	0x01C968B4 CBZ X9, 0x1C968D8
	0x01C968B8 LDR X10, [X8 + 0xB0]
	0x01C968BC ADD X10, X10, 0x8
	0x01C968C0 LDUR X11, [X10 - 0x8]
	0x01C968C4 CMP X11, X1
	0x01C968C8 B.EQ 0x1C968E8
	0x01C968CC SUBS X9, X9, 0x1
	0x01C968D0 ADD X10, X10, 0x10
	0x01C968D4 B.NE 0x1C968C0
	0x01C968D8 MOVZ W2, 0x11
	0x01C968DC MOV X0, X22
	0x01C968E0 BL 0x1BB4284
	0x01C968E4 B 0x1C968F8
	0x01C968E8 LDR W9, [X10]
	0x01C968EC ADD W9, W9, 0x11
	0x01C968F0 ADD X8, X8, W9, 0x4, SXTW
	0x01C968F4 ADD X0, X8, 0x138
	0x01C968F8 LDP X8, X1, [X0]
	0x01C968FC MOV X0, X22
	0x01C96900 BLR X8
	0x01C96904 CBZ X21, 0x1C97374
	0x01C96908 LDR X2, [X25]
	0x01C9690C MOV X1, X0
	0x01C96910 MOV X0, X21
	0x01C96914 BL 0x24BFC34
	0x01C96918 LDR X9, [X19 + 0xA8]
	0x01C9691C CBZ X9, 0x1C97374
	0x01C96920 LDR X22, [X20 + 0x20]
	0x01C96924 CBZ X22, 0x1C97374
	0x01C96928 LDR X8, [X22]
	0x01C9692C LDR X21, [X9 + 0x60]
	0x01C96930 LDR X1, [X23]
	0x01C96934 LDRH W9, [X8 + 0x12E]
	0x01C96938 CBZ X9, 0x1C9695C
	0x01C9693C LDR X10, [X8 + 0xB0]
	0x01C96940 ADD X10, X10, 0x8
	0x01C96944 LDUR X11, [X10 - 0x8]
	0x01C96948 CMP X11, X1
	0x01C9694C B.EQ 0x1C9696C
	0x01C96950 SUBS X9, X9, 0x1
	0x01C96954 ADD X10, X10, 0x10
	0x01C96958 B.NE 0x1C96944
	0x01C9695C MOVZ W2, 0x4
	0x01C96960 MOV X0, X22
	0x01C96964 BL 0x1BB4284
	0x01C96968 B 0x1C9697C
	0x01C9696C LDR W9, [X10]
	0x01C96970 ADD W9, W9, 0x4
	0x01C96974 ADD X8, X8, W9, 0x4, SXTW
	0x01C96978 ADD X0, X8, 0x138
	0x01C9697C LDP X8, X1, [X0]
	0x01C96980 MOV X0, X22
	0x01C96984 BLR X8
	0x01C96988 CBZ X0, 0x1C97374
	0x01C9698C LDR X8, [X0]
	0x01C96990 LDR X1, [X24]
	0x01C96994 MOV X22, X0
	0x01C96998 LDRH W9, [X8 + 0x12E]
	0x01C9699C CBZ X9, 0x1C969C0
	0x01C969A0 LDR X10, [X8 + 0xB0]
	0x01C969A4 ADD X10, X10, 0x8
	0x01C969A8 LDUR X11, [X10 - 0x8]
	0x01C969AC CMP X11, X1
	0x01C969B0 B.EQ 0x1C969D0
	0x01C969B4 SUBS X9, X9, 0x1
	0x01C969B8 ADD X10, X10, 0x10
	0x01C969BC B.NE 0x1C969A8
	0x01C969C0 MOVZ W2, 0x1
	0x01C969C4 MOV X0, X22
	0x01C969C8 BL 0x1BB4284
	0x01C969CC B 0x1C969E0
	0x01C969D0 LDR W9, [X10]
	0x01C969D4 ADD W9, W9, 0x1
	0x01C969D8 ADD X8, X8, W9, 0x4, SXTW
	0x01C969DC ADD X0, X8, 0x138
	0x01C969E0 LDP X8, X1, [X0]
	0x01C969E4 MOV X0, X22
	0x01C969E8 BLR X8
	0x01C969EC CBZ X21, 0x1C97374
	0x01C969F0 LDR X2, [X25]
	0x01C969F4 MOV X1, X0
	0x01C969F8 MOV X0, X21
	0x01C969FC BL 0x24BFC34
	0x01C96A00 LDR X21, [X20 + 0x20]
	0x01C96A04 CBZ X21, 0x1C97374
	0x01C96A08 LDR X8, [X21]
	0x01C96A0C LDR X1, [X23]
	0x01C96A10 LDRH W9, [X8 + 0x12E]
	0x01C96A14 CBZ X9, 0x1C96A38
	0x01C96A18 LDR X10, [X8 + 0xB0]
	0x01C96A1C ADD X10, X10, 0x8
	0x01C96A20 LDUR X11, [X10 - 0x8]
	0x01C96A24 CMP X11, X1
	0x01C96A28 B.EQ 0x1C96A48
	0x01C96A2C SUBS X9, X9, 0x1
	0x01C96A30 ADD X10, X10, 0x10
	0x01C96A34 B.NE 0x1C96A20
	0x01C96A38 MOVZ W2, 0x4
	0x01C96A3C MOV X0, X21
	0x01C96A40 BL 0x1BB4284
	0x01C96A44 B 0x1C96A58
	0x01C96A48 LDR W9, [X10]
	0x01C96A4C ADD W9, W9, 0x4
	0x01C96A50 ADD X8, X8, W9, 0x4, SXTW
	0x01C96A54 ADD X0, X8, 0x138
	0x01C96A58 LDP X8, X1, [X0]
	0x01C96A5C MOV X0, X21
	0x01C96A60 BLR X8
	0x01C96A64 CBZ X0, 0x1C97374
	0x01C96A68 LDR X8, [X0]
	0x01C96A6C LDR X1, [X24]
	0x01C96A70 MOV X21, X0
	0x01C96A74 LDRH W9, [X8 + 0x12E]
	0x01C96A78 CBZ X9, 0x1C96A9C
	0x01C96A7C LDR X10, [X8 + 0xB0]
	0x01C96A80 ADD X10, X10, 0x8
	0x01C96A84 LDUR X11, [X10 - 0x8]
	0x01C96A88 CMP X11, X1
	0x01C96A8C B.EQ 0x1C96AAC
	0x01C96A90 SUBS X9, X9, 0x1
	0x01C96A94 ADD X10, X10, 0x10
	0x01C96A98 B.NE 0x1C96A84
	0x01C96A9C MOVZ W2, 0xC
	0x01C96AA0 MOV X0, X21
	0x01C96AA4 BL 0x1BB4284
	0x01C96AA8 B 0x1C96ABC
	0x01C96AAC LDR W9, [X10]
	0x01C96AB0 ADD W9, W9, 0xC
	0x01C96AB4 ADD X8, X8, W9, 0x4, SXTW
	0x01C96AB8 ADD X0, X8, 0x138
	0x01C96ABC LDP X8, X1, [X0]
	0x01C96AC0 ADRP X22, 0x22B8000
	0x01C96AC4 LDR X22, [X22 + 0x80]
	0x01C96AC8 MOV X0, X21
	0x01C96ACC BLR X8
	0x01C96AD0 MOV X1, X31
	0x01C96AD4 BL 0x30905F0
	0x01C96AD8 TBNZ X0, 0x0, 0x1C96BD4
	0x01C96ADC LDR X21, [X20 + 0x20]
	0x01C96AE0 CBZ X21, 0x1C96E08
	0x01C96AE4 LDR X8, [X21]
	0x01C96AE8 LDR X1, [X23]
	0x01C96AEC LDRH W9, [X8 + 0x12E]
	0x01C96AF0 CBZ X9, 0x1C96B14
	0x01C96AF4 LDR X10, [X8 + 0xB0]
	0x01C96AF8 ADD X10, X10, 0x8
	0x01C96AFC LDUR X11, [X10 - 0x8]
	0x01C96B00 CMP X11, X1
	0x01C96B04 B.EQ 0x1C96B24
	0x01C96B08 SUBS X9, X9, 0x1
	0x01C96B0C ADD X10, X10, 0x10
	0x01C96B10 B.NE 0x1C96AFC
	0x01C96B14 MOVZ W2, 0x4
	0x01C96B18 MOV X0, X21
	0x01C96B1C BL 0x1BB4284
	0x01C96B20 B 0x1C96B34
	0x01C96B24 LDR W9, [X10]
	0x01C96B28 ADD W9, W9, 0x4
	0x01C96B2C ADD X8, X8, W9, 0x4, SXTW
	0x01C96B30 ADD X0, X8, 0x138
	0x01C96B34 LDP X8, X1, [X0]
	0x01C96B38 MOV X0, X21
	0x01C96B3C BLR X8
	0x01C96B40 MOV X21, X0
	0x01C96B44 CBZ X0, 0x1C96E18
	0x01C96B48 LDR X8, [X21]
	0x01C96B4C LDR X1, [X24]
	0x01C96B50 LDRH W9, [X8 + 0x12E]
	0x01C96B54 CBZ X9, 0x1C96B78
	0x01C96B58 LDR X10, [X8 + 0xB0]
	0x01C96B5C ADD X10, X10, 0x8
	0x01C96B60 LDUR X11, [X10 - 0x8]
	0x01C96B64 CMP X11, X1
	0x01C96B68 B.EQ 0x1C96B88
	0x01C96B6C SUBS X9, X9, 0x1
	0x01C96B70 ADD X10, X10, 0x10
	0x01C96B74 B.NE 0x1C96B60
	0x01C96B78 MOVZ W2, 0xC
	0x01C96B7C MOV X0, X21
	0x01C96B80 BL 0x1BB4284
	0x01C96B84 B 0x1C96B98
	0x01C96B88 LDR W9, [X10]
	0x01C96B8C ADD W9, W9, 0xC
	0x01C96B90 ADD X8, X8, W9, 0x4, SXTW
	0x01C96B94 ADD X0, X8, 0x138
	0x01C96B98 LDP X8, X1, [X0]
	0x01C96B9C MOV X0, X21
	0x01C96BA0 BLR X8
	0x01C96BA4 ADRP X8, 0x22B8000
	0x01C96BA8 LDR X8, [X8 + 0x70]
	0x01C96BAC LDR X1, [X8]
	0x01C96BB0 BL 0x20F6FA4
	0x01C96BB4 LDR X8, [X19 + 0xA8]
	0x01C96BB8 CBZ X8, 0x1C96E2C
	0x01C96BBC LDR X8, [X8 + 0x70]
	0x01C96BC0 CBZ X8, 0x1C96E38
	0x01C96BC4 LDR X2, [X22]
	0x01C96BC8 AND W1, W0, 0x1
	0x01C96BCC MOV X0, X8
	0x01C96BD0 BL 0x24B96A4
	0x01C96BD4 LDR X21, [X20 + 0x20]
	0x01C96BD8 CBZ X21, 0x1C97374
	0x01C96BDC LDR X8, [X21]
	0x01C96BE0 LDR X1, [X23]
	0x01C96BE4 LDRH W9, [X8 + 0x12E]
	0x01C96BE8 CBZ X9, 0x1C96C0C
	0x01C96BEC LDR X10, [X8 + 0xB0]
	0x01C96BF0 ADD X10, X10, 0x8
	0x01C96BF4 LDUR X11, [X10 - 0x8]
	0x01C96BF8 CMP X11, X1
	0x01C96BFC B.EQ 0x1C96C1C
	0x01C96C00 SUBS X9, X9, 0x1
	0x01C96C04 ADD X10, X10, 0x10
	0x01C96C08 B.NE 0x1C96BF4
	0x01C96C0C MOVZ W2, 0x6
	0x01C96C10 MOV X0, X21
	0x01C96C14 BL 0x1BB4284
	0x01C96C18 B 0x1C96C2C
	0x01C96C1C LDR W9, [X10]
	0x01C96C20 ADD W9, W9, 0x6
	0x01C96C24 ADD X8, X8, W9, 0x4, SXTW
	0x01C96C28 ADD X0, X8, 0x138
	0x01C96C2C LDP X8, X1, [X0]
	0x01C96C30 MOV X0, X21
	0x01C96C34 BLR X8
	0x01C96C38 MOV X1, X31
	0x01C96C3C BL 0x30905F0
	0x01C96C40 TBNZ X0, 0x0, 0x1C96CE4
	0x01C96C44 LDR X21, [X20 + 0x20]
	0x01C96C48 CBZ X21, 0x1C96E10
	0x01C96C4C LDR X8, [X21]
	0x01C96C50 LDR X1, [X23]
	0x01C96C54 LDRH W9, [X8 + 0x12E]
	0x01C96C58 CBZ X9, 0x1C96C7C
	0x01C96C5C LDR X10, [X8 + 0xB0]
	0x01C96C60 ADD X10, X10, 0x8
	0x01C96C64 LDUR X11, [X10 - 0x8]
	0x01C96C68 CMP X11, X1
	0x01C96C6C B.EQ 0x1C96C8C
	0x01C96C70 SUBS X9, X9, 0x1
	0x01C96C74 ADD X10, X10, 0x10
	0x01C96C78 B.NE 0x1C96C64
	0x01C96C7C MOVZ W2, 0x6
	0x01C96C80 MOV X0, X21
	0x01C96C84 BL 0x1BB4284
	0x01C96C88 B 0x1C96C9C
	0x01C96C8C LDR W9, [X10]
	0x01C96C90 ADD W9, W9, 0x6
	0x01C96C94 ADD X8, X8, W9, 0x4, SXTW
	0x01C96C98 ADD X0, X8, 0x138
	0x01C96C9C LDP X8, X1, [X0]
	0x01C96CA0 MOV X0, X21
	0x01C96CA4 BLR X8
	0x01C96CA8 ADRP X8, 0x22B8000
	0x01C96CAC LDR X8, [X8 + 0x78]
	0x01C96CB0 LDR X1, [X8]
	0x01C96CB4 BL 0x20F706C
	0x01C96CB8 MOV X1, X0
	0x01C96CBC LDR X8, [X19 + 0xA8]
	0x01C96CC0 CBZ X8, 0x1C96E1C
	0x01C96CC4 LDR X8, [X8 + 0x68]
	0x01C96CC8 CBZ X8, 0x1C96E24
	0x01C96CCC LDR X0, [X8 + 0x48]
	0x01C96CD0 CBZ X0, 0x1C96E34
	0x01C96CD4 ADRP X8, 0x22B8000
	0x01C96CD8 LDR X8, [X8 + 0x88]
	0x01C96CDC LDR X2, [X8]
	0x01C96CE0 BL 0x24BB894
	0x01C96CE4 ADRP X8, 0x22B7000
	0x01C96CE8 LDR X8, [X8 + 0x800]
	0x01C96CEC LDR X0, [X8]
	0x01C96CF0 LDR W8, [X0 + 0xE0]
	0x01C96CF4 CBNZ W8, 0x1C96CFC
	0x01C96CF8 BL 0x1B6E8F8
	0x01C96CFC MOV X0, X31
	0x01C96D00 BL 0x3A6BF90
	0x01C96D04 TBZ X0, 0x0, 0x1C96D24
	0x01C96D08 LDR X8, [X19 + 0xA8]
	0x01C96D0C CBZ X8, 0x1C97374
	0x01C96D10 LDR X0, [X8 + 0x70]
	0x01C96D14 CBZ X0, 0x1C97374
	0x01C96D18 LDR X2, [X22]
	0x01C96D1C MOVZ W1, 0x1
	0x01C96D20 BL 0x24B96A4
	0x01C96D24 LDR X8, [X19 + 0xA8]
	0x01C96D28 CBZ X8, 0x1C97374
	0x01C96D2C ADRP X9, 0x22B7000
	0x01C96D30 LDR X9, [X9 + 0xD00]
	0x01C96D34 LDR X0, [X8 + 0x70]
	0x01C96D38 LDR X1, [X9]
	0x01C96D3C BL 0x24B9848
	0x01C96D40 TBZ X0, 0x0, 0x1C96D60
	0x01C96D44 LDR X8, [X19 + 0xB8]
	0x01C96D48 CBZ X8, 0x1C97374
	0x01C96D4C LDR X0, [X8 + 0x58]
	0x01C96D50 CBZ X0, 0x1C97374
	0x01C96D54 LDR W8, [X0 + 0x4C]
	0x01C96D58 CMP W8, 0x3
	0x01C96D5C B.LE 0x1C96DC0
	0x01C96D60 MOV X0, X31
	0x01C96D64 BL 0x3A98D98
	0x01C96D68 ADRP X8, 0xFFFFFFFFFEE13000
	0x01C96D6C LDR V1, [X8 + 0xD08]
	0x01C96D70 FCMP S0, S1
	0x01C96D74 B.PL 0x1C96D94
	0x01C96D78 LDR X8, [X19 + 0xB8]
	0x01C96D7C CBZ X8, 0x1C97374
	0x01C96D80 LDR X0, [X8 + 0x58]
	0x01C96D84 CBZ X0, 0x1C97374
	0x01C96D88 LDR W8, [X0 + 0x4C]
	0x01C96D8C CMP W8, 0x2
	0x01C96D90 B.LE 0x1C96DD0
	0x01C96D94 ADRP X8, 0xFFFFFFFFFEE13000
	0x01C96D98 LDR V1, [X8 + 0xDE0]
	0x01C96D9C FCMP S0, S1
	0x01C96DA0 B.PL 0x1C96DE4
	0x01C96DA4 LDR X8, [X19 + 0xB8]
	0x01C96DA8 CBZ X8, 0x1C97374
	0x01C96DAC LDR X0, [X8 + 0x58]
	0x01C96DB0 CBZ X0, 0x1C97374
	0x01C96DB4 LDR W8, [X0 + 0x4C]
	0x01C96DB8 CMP W8, 0x3
	0x01C96DBC B.GT 0x1C96DE4
	0x01C96DC0 ADRP X8, 0x22B7000
	0x01C96DC4 LDR X8, [X8 + 0x7B0]
	0x01C96DC8 MOVZ W1, 0x4
	0x01C96DCC B 0x1C96DDC
	0x01C96DD0 ADRP X8, 0x22B7000
	0x01C96DD4 LDR X8, [X8 + 0x7B0]
	0x01C96DD8 MOVZ W1, 0x3
	0x01C96DDC LDR X2, [X8]
	0x01C96DE0 BL 0x24BDA64
	0x01C96DE4 LDR X0, [X19 + 0x98]
	0x01C96DE8 CBZ X0, 0x1C97374
	0x01C96DEC LDR X2, [X22]
	0x01C96DF0 LDP X20, X19, [X31 + 0x30]
	0x01C96DF4 LDP X22, X21, [X31 + 0x20]
	0x01C96DF8 LDP X24, X23, [X31 + 0x10]
	0x01C96DFC MOVZ W1, 0x1
	0x01C96E00 LDP X30, X25, [X31], #0x40
	0x01C96E04 B 0x24B96A4
	0x01C96E08 MOV X25, X23
	0x01C96E0C BL 0x1B6EA1C
	0x01C96E10 MOV X25, X22
	0x01C96E14 BL 0x1B6EA1C
	0x01C96E18 BL 0x1B6EA1C
	0x01C96E1C MOV X25, X22
	0x01C96E20 BL 0x1B6EA1C
	0x01C96E24 MOV X25, X22
	0x01C96E28 BL 0x1B6EA1C
	0x01C96E2C MOV X25, X23
	0x01C96E30 BL 0x1B6EA1C
	0x01C96E34 BL 0x1B6EA1C
	0x01C96E38 BL 0x1B6EA1C
	0x01C96E3C B 0x1C97130
	0x01C96E40 B 0x1C96E68
	0x01C96E44 B 0x1C9712C
	0x01C96E48 B 0x1C96E68
	0x01C96E4C B 0x1C96E64
	0x01C96E50 B 0x1C96E68
	0x01C96E54 B 0x1C97130
	0x01C96E58 B 0x1C9712C
	0x01C96E5C B 0x1C96E64
	0x01C96E60 B 0x1C9712C
	0x01C96E64 MOV X25, X22
	0x01C96E68 MOV X21, X0
	0x01C96E6C CMP W1, 0x1
	0x01C96E70 B.NE 0x1C97468
	0x01C96E74 MOV X0, X21
	0x01C96E78 BL 0x3D19840
	0x01C96E7C MOV X21, X0
	0x01C96E80 ADRP X0, 0x22B7000
	0x01C96E84 LDR X0, [X0 + 0x670]
	0x01C96E88 BL 0x1B6E804
	0x01C96E8C LDR X8, [X21]
	0x01C96E90 LDR X1, [X8]
	0x01C96E94 BL 0x1B6ED6C
	0x01C96E98 TBZ X0, 0x0, 0x1C970FC
	0x01C96E9C LDR X21, [X21]
	0x01C96EA0 BL 0x3D19850
	0x01C96EA4 ADRP X0, 0x22B7000
	0x01C96EA8 LDR X0, [X0 + 0x5C0]
	0x01C96EAC BL 0x1B6E804
	0x01C96EB0 BL 0x1B6EA0C
	0x01C96EB4 MOV X22, X0
	0x01C96EB8 ADRP X0, 0x22B7000
	0x01C96EBC LDR X0, [X0 + 0x5B8]
	0x01C96EC0 BL 0x1B6E804
	0x01C96EC4 MOV X1, X0
	0x01C96EC8 MOV X0, X22
	0x01C96ECC BL 0x28F9A14
	0x01C96ED0 LDR X23, [X20 + 0x20]
	0x01C96ED4 CBZ X23, 0x1C97374
	0x01C96ED8 ADRP X0, 0x22B7000
	0x01C96EDC LDR X0, [X0 + 0xFE0]
	0x01C96EE0 BL 0x1B6E804
	0x01C96EE4 LDR X8, [X23]
	0x01C96EE8 MOV X1, X0
	0x01C96EEC LDRH W9, [X8 + 0x12E]
	0x01C96EF0 CBZ X9, 0x1C96F14
	0x01C96EF4 LDR X10, [X8 + 0xB0]
	0x01C96EF8 ADD X10, X10, 0x8
	0x01C96EFC LDUR X11, [X10 - 0x8]
	0x01C96F00 CMP X11, X1
	0x01C96F04 B.EQ 0x1C96F24
	0x01C96F08 SUBS X9, X9, 0x1
	0x01C96F0C ADD X10, X10, 0x10
	0x01C96F10 B.NE 0x1C96EFC
	0x01C96F14 MOVZ W2, 0x4
	0x01C96F18 MOV X0, X23
	0x01C96F1C BL 0x1BB4284
	0x01C96F20 B 0x1C96F34
	0x01C96F24 LDR W9, [X10]
	0x01C96F28 ADD W9, W9, 0x4
	0x01C96F2C ADD X8, X8, W9, 0x4, SXTW
	0x01C96F30 ADD X0, X8, 0x138
	0x01C96F34 LDP X8, X1, [X0]
	0x01C96F38 MOV X0, X23
	0x01C96F3C BLR X8
	0x01C96F40 CBZ X0, 0x1C97374
	0x01C96F44 MOV X23, X0
	0x01C96F48 ADRP X0, 0x22B8000
	0x01C96F4C LDR X0, [X0 + 0x68]
	0x01C96F50 BL 0x1B6E804
	0x01C96F54 LDR X8, [X23]
	0x01C96F58 MOV X1, X0
	0x01C96F5C LDRH W9, [X8 + 0x12E]
	0x01C96F60 CBZ X9, 0x1C96F84
	0x01C96F64 LDR X10, [X8 + 0xB0]
	0x01C96F68 ADD X10, X10, 0x8
	0x01C96F6C LDUR X11, [X10 - 0x8]
	0x01C96F70 CMP X11, X1
	0x01C96F74 B.EQ 0x1C96F94
	0x01C96F78 SUBS X9, X9, 0x1
	0x01C96F7C ADD X10, X10, 0x10
	0x01C96F80 B.NE 0x1C96F6C
	0x01C96F84 MOVZ W2, 0x9
	0x01C96F88 MOV X0, X23
	0x01C96F8C BL 0x1BB4284
	0x01C96F90 B 0x1C96FA4
	0x01C96F94 LDR W9, [X10]
	0x01C96F98 ADD W9, W9, 0x9
	0x01C96F9C ADD X8, X8, W9, 0x4, SXTW
	0x01C96FA0 ADD X0, X8, 0x138
	0x01C96FA4 LDP X8, X1, [X0]
	0x01C96FA8 MOV X0, X23
	0x01C96FAC BLR X8
	0x01C96FB0 CBZ X22, 0x1C97374
	0x01C96FB4 MOV X23, X0
	0x01C96FB8 ADRP X0, 0x22B8000
	0x01C96FBC LDR X0, [X0 + 0x90]
	0x01C96FC0 BL 0x1B6E804
	0x01C96FC4 MOV X24, X0
	0x01C96FC8 ADRP X0, 0x22B7000
	0x01C96FCC LDR X0, [X0 + 0x5B0]
	0x01C96FD0 BL 0x1B6E804
	0x01C96FD4 MOV X3, X0
	0x01C96FD8 MOV X0, X22
	0x01C96FDC MOV X1, X24
	0x01C96FE0 MOV X2, X23
	0x01C96FE4 BL 0x28FA2A8
	0x01C96FE8 LDR X20, [X20 + 0x20]
	0x01C96FEC CBZ X20, 0x1C97374
	0x01C96FF0 ADRP X0, 0x22B7000
	0x01C96FF4 LDR X0, [X0 + 0xFE0]
	0x01C96FF8 BL 0x1B6E804
	0x01C96FFC LDR X8, [X20]
	0x01C97000 MOV X1, X0
	0x01C97004 LDRH W9, [X8 + 0x12E]
	0x01C97008 CBZ X9, 0x1C9702C
	0x01C9700C LDR X10, [X8 + 0xB0]
	0x01C97010 ADD X10, X10, 0x8
	0x01C97014 LDUR X11, [X10 - 0x8]
	0x01C97018 CMP X11, X1
	0x01C9701C B.EQ 0x1C9703C
	0x01C97020 SUBS X9, X9, 0x1
	0x01C97024 ADD X10, X10, 0x10
	0x01C97028 B.NE 0x1C97014
	0x01C9702C MOVZ W2, 0x6
	0x01C97030 MOV X0, X20
	0x01C97034 BL 0x1BB4284
	0x01C97038 B 0x1C9704C
	0x01C9703C LDR W9, [X10]
	0x01C97040 ADD W9, W9, 0x6
	0x01C97044 ADD X8, X8, W9, 0x4, SXTW
	0x01C97048 ADD X0, X8, 0x138
	0x01C9704C LDP X8, X1, [X0]
	0x01C97050 MOV X0, X20
	0x01C97054 BLR X8
	0x01C97058 MOV X20, X0
	0x01C9705C ADRP X0, 0x22B7000
	0x01C97060 LDR X0, [X0 + 0x98]
	0x01C97064 BL 0x1B6E804
	0x01C97068 MOV X23, X0
	0x01C9706C ADRP X0, 0x22B6000
	0x01C97070 LDR X0, [X0 + 0x5B0]
	0x01C97074 BL 0x1B6E804
	0x01C97078 MOV X3, X0
	0x01C9707C MOV X0, X22
	0x01C97080 MOV X1, X23
	0x01C97084 MOV X2, X20
	0x01C97088 BL 0x28FA2A8
	0x01C9708C ADRP X0, 0x22B6000
	0x01C97090 LDR X0, [X0 + 0x628]
	0x01C97094 BL 0x1B6E804
	0x01C97098 LDR W8, [X0 + 0xE0]
	0x01C9709C CBNZ W8, 0x1C970A4
	0x01C970A0 BL 0x1B6E8F8
	0x01C970A4 ADRP X0, 0x22B7000
	0x01C970A8 LDR X0, [X0 + 0xA0]
	0x01C970AC BL 0x1B6E804
	0x01C970B0 MOV X20, X0
	0x01C970B4 ADRP X0, 0x22B7000
	0x01C970B8 LDR X0, [X0 + 0xA8]
	0x01C970BC BL 0x1B6E804
	0x01C970C0 MOV X23, X0
	0x01C970C4 ADRP X0, 0x22B7000
	0x01C970C8 LDR X0, [X0 + 0xB0]
	0x01C970CC BL 0x1B6E804
	0x01C970D0 MOV X5, X0
	0x01C970D4 MOVZ W0, 0x800
	0x01C970D8 MOVZ W6, 0x37
	0x01C970DC MOV X1, X20
	0x01C970E0 MOV X2, X21
	0x01C970E4 MOV X3, X22
	0x01C970E8 MOV X4, X23
	0x01C970EC MOV X7, X31
	0x01C970F0 BL 0x342B884
	0x01C970F4 MOV X22, X25
	0x01C970F8 B 0x1C96CE4
	0x01C970FC MOVZ W0, 0x8
	0x01C97100 BL 0x3D19860
	0x01C97104 LDR X8, [X21]
	0x01C97108 STR X8, [X0]
	0x01C9710C ADRP X1, 0x2085000
	0x01C97110 ADD X1, X1, 0xBD8
	0x01C97114 MOV X2, X31
	0x01C97118 BL 0x3D19870
	0x01C9711C B 0x1C97460
	0x01C97120 MOV X21, X0
	0x01C97124 BL 0x3D19850
	0x01C97128 B 0x1C97468
	0x01C9712C MOV X25, X23
	0x01C97130 MOV X21, X0
	0x01C97134 CMP W1, 0x1
	0x01C97138 B.NE 0x1C97468
	0x01C9713C MOV X0, X21
	0x01C97140 BL 0x3D19840
	0x01C97144 MOV X21, X0
	0x01C97148 ADRP X0, 0x22B6000
	0x01C9714C LDR X0, [X0 + 0x670]
	0x01C97150 BL 0x1B6E804
	0x01C97154 LDR X8, [X21]
	0x01C97158 LDR X1, [X8]
	0x01C9715C BL 0x1B6ED6C
	0x01C97160 TBZ X0, 0x0, 0x1C97440
	0x01C97164 LDR X21, [X21]
	0x01C97168 BL 0x3D19850
	0x01C9716C ADRP X0, 0x22B6000
	0x01C97170 LDR X0, [X0 + 0x5C0]
	0x01C97174 BL 0x1B6E804
	0x01C97178 BL 0x1B6EA0C
	0x01C9717C MOV X22, X0
	0x01C97180 ADRP X0, 0x22B6000
	0x01C97184 LDR X0, [X0 + 0x5B8]
	0x01C97188 BL 0x1B6E804
	0x01C9718C MOV X1, X0
	0x01C97190 MOV X0, X22
	0x01C97194 BL 0x28F9A14
	0x01C97198 LDR X23, [X20 + 0x20]
	0x01C9719C CBZ X23, 0x1C97374
	0x01C971A0 ADRP X0, 0x22B6000
	0x01C971A4 LDR X0, [X0 + 0xFE0]
	0x01C971A8 BL 0x1B6E804
	0x01C971AC LDR X8, [X23]
	0x01C971B0 MOV X1, X0
	0x01C971B4 LDRH W9, [X8 + 0x12E]
	0x01C971B8 CBZ X9, 0x1C971DC
	0x01C971BC LDR X10, [X8 + 0xB0]
	0x01C971C0 ADD X10, X10, 0x8
	0x01C971C4 LDUR X11, [X10 - 0x8]
	0x01C971C8 CMP X11, X1
	0x01C971CC B.EQ 0x1C971EC
	0x01C971D0 SUBS X9, X9, 0x1
	0x01C971D4 ADD X10, X10, 0x10
	0x01C971D8 B.NE 0x1C971C4
	0x01C971DC MOVZ W2, 0x4
	0x01C971E0 MOV X0, X23
	0x01C971E4 BL 0x1BB4284
	0x01C971E8 B 0x1C971FC
	0x01C971EC LDR W9, [X10]
	0x01C971F0 ADD W9, W9, 0x4
	0x01C971F4 ADD X8, X8, W9, 0x4, SXTW
	0x01C971F8 ADD X0, X8, 0x138
	0x01C971FC LDP X8, X1, [X0]
	0x01C97200 MOV X0, X23
	0x01C97204 BLR X8
	0x01C97208 CBZ X0, 0x1C97374
	0x01C9720C MOV X23, X0
	0x01C97210 ADRP X0, 0x22B7000
	0x01C97214 LDR X0, [X0 + 0x68]
	0x01C97218 BL 0x1B6E804
	0x01C9721C LDR X8, [X23]
	0x01C97220 MOV X1, X0
	0x01C97224 LDRH W9, [X8 + 0x12E]
	0x01C97228 CBZ X9, 0x1C9724C
	0x01C9722C LDR X10, [X8 + 0xB0]
	0x01C97230 ADD X10, X10, 0x8
	0x01C97234 LDUR X11, [X10 - 0x8]
	0x01C97238 CMP X11, X1
	0x01C9723C B.EQ 0x1C9725C
	0x01C97240 SUBS X9, X9, 0x1
	0x01C97244 ADD X10, X10, 0x10
	0x01C97248 B.NE 0x1C97234
	0x01C9724C MOVZ W2, 0x9
	0x01C97250 MOV X0, X23
	0x01C97254 BL 0x1BB4284
	0x01C97258 B 0x1C9726C
	0x01C9725C LDR W9, [X10]
	0x01C97260 ADD W9, W9, 0x9
	0x01C97264 ADD X8, X8, W9, 0x4, SXTW
	0x01C97268 ADD X0, X8, 0x138
	0x01C9726C LDP X8, X1, [X0]
	0x01C97270 MOV X0, X23
	0x01C97274 BLR X8
	0x01C97278 CBZ X22, 0x1C97374
	0x01C9727C MOV X23, X0
	0x01C97280 ADRP X0, 0x22B7000
	0x01C97284 LDR X0, [X0 + 0x90]
	0x01C97288 BL 0x1B6E804
	0x01C9728C MOV X24, X0
	0x01C97290 ADRP X0, 0x22B6000
	0x01C97294 LDR X0, [X0 + 0x5B0]
	0x01C97298 BL 0x1B6E804
	0x01C9729C MOV X3, X0
	0x01C972A0 MOV X0, X22
	0x01C972A4 MOV X1, X24
	0x01C972A8 MOV X2, X23
	0x01C972AC BL 0x28FA2A8
	0x01C972B0 LDR X23, [X20 + 0x20]
	0x01C972B4 CBZ X23, 0x1C97374
	0x01C972B8 ADRP X0, 0x22B6000
	0x01C972BC LDR X0, [X0 + 0xFE0]
	0x01C972C0 BL 0x1B6E804
	0x01C972C4 LDR X8, [X23]
	0x01C972C8 MOV X1, X0
	0x01C972CC LDRH W9, [X8 + 0x12E]
	0x01C972D0 CBZ X9, 0x1C972F4
	0x01C972D4 LDR X10, [X8 + 0xB0]
	0x01C972D8 ADD X10, X10, 0x8
	0x01C972DC LDUR X11, [X10 - 0x8]
	0x01C972E0 CMP X11, X1
	0x01C972E4 B.EQ 0x1C97304
	0x01C972E8 SUBS X9, X9, 0x1
	0x01C972EC ADD X10, X10, 0x10
	0x01C972F0 B.NE 0x1C972DC
	0x01C972F4 MOVZ W2, 0x4
	0x01C972F8 MOV X0, X23
	0x01C972FC BL 0x1BB4284
	0x01C97300 B 0x1C97314
	0x01C97304 LDR W9, [X10]
	0x01C97308 ADD W9, W9, 0x4
	0x01C9730C ADD X8, X8, W9, 0x4, SXTW
	0x01C97310 ADD X0, X8, 0x138
	0x01C97314 LDP X8, X1, [X0]
	0x01C97318 MOV X0, X23
	0x01C9731C BLR X8
	0x01C97320 CBZ X0, 0x1C97374
	0x01C97324 MOV X23, X0
	0x01C97328 ADRP X0, 0x22B7000
	0x01C9732C LDR X0, [X0 + 0x68]
	0x01C97330 BL 0x1B6E804
	0x01C97334 LDR X8, [X23]
	0x01C97338 MOV X1, X0
	0x01C9733C LDRH W9, [X8 + 0x12E]
	0x01C97340 CBZ X9, 0x1C97364
	0x01C97344 LDR X10, [X8 + 0xB0]
	0x01C97348 ADD X10, X10, 0x8
	0x01C9734C LDUR X11, [X10 - 0x8]
	0x01C97350 CMP X11, X1
	0x01C97354 B.EQ 0x1C97378
	0x01C97358 SUBS X9, X9, 0x1

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+192], X30
	003 Move [X31+208], X24
	004 Move [X31+216], X23
	005 Move [X31+224], X22
	006 Move [X31+232], X21
	007 Move [X31+240], X20
	008 Move [X31+248], X19
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X23+40]
	011 Move X20, 0x258E000
	012 Move X19, X0
	013 Move [X31+184], X8
	014 Move W8, [X20+981]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {102}
	019 Move X0, 0x22B8000
	020 Move X0, [X0+1256]
	021 Call 0x1B6F7F0
	022 Move X0, 0x22B8000
	023 Move X0, [X0+2048]
	024 Call 0x1B6F7F0
	025 Move X0, 0x22B8000
	026 Move X0, [X0+4000]
	027 Call 0x1B6F7F0
	028 Move X0, 0x22B8000
	029 Move X0, [X0+4008]
	030 Call 0x1B6F7F0
	031 Move X0, 0x22B8000
	032 Move X0, [X0+4016]
	033 Call 0x1B6F7F0
	034 Move X0, 0x22B8000
	035 Move X0, [X0+4024]
	036 Call 0x1B6F7F0
	037 Move X0, 0x22B8000
	038 Move X0, [X0+2288]
	039 Call 0x1B6F7F0
	040 Move X0, 0x22B8000
	041 Move X0, [X0+4032]
	042 Call 0x1B6F7F0
	043 Move X0, 0x22B8000
	044 Move X0, [X0+4040]
	045 Call 0x1B6F7F0
	046 Move X0, 0x22B8000
	047 Move X0, [X0+4048]
	048 Call 0x1B6F7F0
	049 Move X0, 0x22B8000
	050 Move X0, [X0+4056]
	051 Call 0x1B6F7F0
	052 Move X0, 0x22B8000
	053 Move X0, [X0+4064]
	054 Call 0x1B6F7F0
	055 Move X0, 0x22B8000
	056 Move X0, [X0+1576]
	057 Call 0x1B6F7F0
	058 Move X0, 0x22B8000
	059 Move X0, [X0+4072]
	060 Call 0x1B6F7F0
	061 Move X0, 0x22B8000
	062 Move X0, [X0+3656]
	063 Call 0x1B6F7F0
	064 Move X0, 0x22B8000
	065 Move X0, [X0+4080]
	066 Call 0x1B6F7F0
	067 Move X0, 0x22B8000
	068 Move X0, [X0+3664]
	069 Call 0x1B6F7F0
	070 Move X0, 0x22B8000
	071 Move X0, [X0+3672]
	072 Call 0x1B6F7F0
	073 Move X0, 0x22B8000
	074 Move X0, [X0+4088]
	075 Call 0x1B6F7F0
	076 Move X0, 0x22B9000
	077 Move X0, [X0]
	078 Call 0x1B6F7F0
	079 Move X0, 0x22B9000
	080 Move X0, [X0+8]
	081 Call 0x1B6F7F0
	082 Move X0, 0x22B9000
	083 Move X0, [X0+16]
	084 Call 0x1B6F7F0
	085 Move X0, 0x22B9000
	086 Move X0, [X0+24]
	087 Call 0x1B6F7F0
	088 Move X0, 0x22B9000
	089 Move X0, [X0+32]
	090 Call 0x1B6F7F0
	091 Move X0, 0x22B9000
	092 Move X0, [X0+40]
	093 Call 0x1B6F7F0
	094 Move X0, 0x22B8000
	095 Move X0, [X0+3560]
	096 Call 0x1B6F7F0
	097 Move X0, 0x22B9000
	098 Move X0, [X0+48]
	099 Call 0x1B6F7F0
	100 Move W8, 1
	101 Move [X20+981], W8
	102 Move [X31+128], X31
	103 Move [X31+136], X31
	104 Move [X31+176], W31
	105 Move [X31+168], X31
	106 Move [X31+112], X31
	107 Move [X31+120], X31
	108 Move [X31+104], X31
	109 Move [X31+96], W31
	110 Move W8, [X19]
	111 Move X24, 0x22B8000
	112 Move X24, [X24+2288]
	113 Add X21, X31, 144
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X9, -18776064
	116 Add X9, X9, 3640
	117 NotImplemented "Instruction ADR not yet implemented."
	118 Move W11, [X9]
	119 Add X10, X10, X11
	120 CallNoReturn X10
	121 Move X8, [X19+56]
	122 Move TEMP, 0
	123 Not TEMP
	124 Move W9, TEMP
	125 Move [X31+120], X8
	126 Move [X19+56], X31
	127 Move [X19], W9
	128 Move X8, 0x22B8000
	129 Move X8, [X8+3656]
	130 Move X1, [X8]
	131 Add X8, X31, 144
	132 Add X0, X31, 120
	133 Call TaskAwaiter`1<AuthResult>.GetResult, X0
	134 Move X11, 0x22B9000
	135 Move X20, [X31+144]
	136 NotImplemented "Instruction LDUR not yet implemented."
	137 Move W9, [X31+152]
	138 Move W10, [X31+164]
	139 Move X11, [X11+32]
	140 Move [X31+168], X8
	141 Move [X31+48], X20
	142 Move [X31+176], W10
	143 Move X1, [X11]
	144 Move [X31+56], W9
	145 Move [X31+60], X8
	146 Move [X31+68], W10
	147 Add X0, X31, 48
	148 Call AuthCommands.LogAuthEvent, X0, X1
	149 Compare X20, 0
	150 JumpIfEqual {209}
	151 Move X8, 0x22B8000
	152 Move X8, [X8+2048]
	153 Move X0, [X8]
	154 Move W8, [X0+224]
	155 Compare W8, 0
	156 JumpIfNotEqual {158}
	157 Call 0x1B6F8F8
	158 Move X0, X31
	159 Call Application.get_isEditor
	160 Move TEMP, X0
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfEqual {209}
	164 Move X8, [X19+64]
	165 Move TEMP, 0
	166 Not TEMP
	167 Move W9, TEMP
	168 Move [X31+112], X8
	169 Move [X19+64], X31
	170 Move [X19], W9
	171 Move X8, [X19+72]
	172 Move TEMP, 0
	173 Not TEMP
	174 Move W9, TEMP
	175 Move [X31+104], X8
	176 Move [X19+72], X31
	177 Move [X19], W9
	178 Move X8, [X19+56]
	179 Move TEMP, 0
	180 Not TEMP
	181 Move W9, TEMP
	182 Move [X31+120], X8
	183 Move [X19+56], X31
	184 Move [X19], W9
	185 Move X8, 0x22B8000
	186 Move X8, [X8+1256]
	187 Move [X31+176], W31
	188 Move [X31+168], X31
	189 Move X0, [X8]
	190 Move W8, [X0+224]
	191 Compare W8, 0
	192 JumpIfNotEqual {194}
	193 Call 0x1B6F8F8
	194 Call App.get_platform
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move X8, 0x22B8000
	197 Move X8, [X8+2048]
	198 Move X0, [X8]
	199 Move W8, [X0+224]
	200 Compare W8, 0
	201 JumpIfNotEqual {203}
	202 Call 0x1B6F8F8
	203 Move X0, X31
	204 Call Application.get_isEditor
	205 Move TEMP, X0
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfNotEqual {544}
	209 Call AuthCommands.AuthenticateWithDevice
	210 Compare X0, 0
	211 JumpIfEqual {590}
	212 Move X8, 0x22B8000
	213 Move X8, [X8+3672]
	214 Move X1, [X8]
	215 Call Task`1<AuthResult>.GetAwaiter, X0
	216 Move X8, 0x22B8000
	217 Move X8, [X8+3664]
	218 Move [X31+120], X0
	219 Move X1, [X8]
	220 Add X0, X31, 120
	221 Call TaskAwaiter`1<AuthResult>.get_IsCompleted, X0
	222 Move TEMP, X0
	223 And TEMP, TEMP, 1
	224 Compare TEMP, 1
	225 JumpIfNotEqual {319}
	226 Move X8, 0x22B8000
	227 Move X8, [X8+3656]
	228 Move X1, [X8]
	229 Add X8, X31, 144
	230 Add X0, X31, 120
	231 Call TaskAwaiter`1<AuthResult>.GetResult, X0
	232 Move X10, 0x22B9000
	233 Move X20, [X31+144]
	234 NotImplemented "Instruction LDUR not yet implemented."
	235 Move W21, [X31+152]
	236 Move W9, [X31+164]
	237 Move X10, [X10+48]
	238 Move [X31+168], X8
	239 Move [X31+24], X20
	240 Move [X31+176], W9
	241 Move X1, [X10]
	242 Move [X31+32], W21
	243 Move [X31+36], X8
	244 Move [X31+44], W9
	245 Add X0, X31, 24
	246 Call AuthCommands.LogAuthEvent, X0, X1
	247 Compare X20, 0
	248 JumpIfEqual {351}
	249 Move [X19+40], X31
	250 Move [X19+48], X31
	251 Move [X19+32], X20
	252 Move X8, 0x22B8000
	253 Move X8, [X8+1256]
	254 Move X0, [X8]
	255 Move W8, [X0+224]
	256 Compare W8, 0
	257 JumpIfNotEqual {259}
	258 Call 0x1B6F8F8
	259 Call App.get_api
	260 Compare X0, 0
	261 JumpIfEqual {591}
	262 Move X1, X20
	263 Move X2, X31
	264 Move X3, X31
	265 Move X4, X31
	266 Call AnimalCompanyAPI.GetAccountAsync, X0, X1, X2, X3
	267 Compare X0, 0
	268 JumpIfEqual {592}
	269 Move X8, 0x22B8000
	270 Move X8, [X8+4088]
	271 Move X1, [X8]
	272 Call Task`1<Object>.GetAwaiter, X0
	273 Move X8, 0x22B8000
	274 Move X8, [X8+4080]
	275 Move [X31+112], X0
	276 Move X1, [X8]
	277 Add X0, X31, 112
	278 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	279 Move TEMP, X0
	280 And TEMP, TEMP, 1
	281 Compare TEMP, 1
	282 JumpIfNotEqual {335}
	283 Move X8, 0x22B8000
	284 Move X8, [X8+4072]
	285 Add X0, X31, 112
	286 Move X1, [X8]
	287 Call TaskAwaiter`1<Object>.GetResult, X0
	288 Move [X19+40], X0
	289 Move X8, 0x22B9000
	290 Move X8, [X8+8]
	291 Move X0, [X8]
	292 Call 0x1B6FA0C
	293 Move X20, X0
	294 Move X1, X31
	295 Call Object..ctor, X0
	296 Call AuthCommands.GetAuthDeviceID
	297 Compare X20, 0
	298 JumpIfEqual {588}
	299 Move [X20+16], X0
	300 Move X21, [X19+40]
	301 Compare X21, 0
	302 JumpIfEqual {589}
	303 Move X22, 0x22B8000
	304 Move X8, [X21]
	305 Move X22, [X22+4064]
	306 NotImplemented "Instruction LDRH not yet implemented."
	307 Move X1, [X22]
	308 Compare X9, 0
	309 JumpIfEqual {316}
	310 Move X10, [X8+176]
	311 Add X10, X10, 8
	312 NotImplemented "Instruction LDUR not yet implemented."
	313 NotImplemented "Instruction CMP not yet implemented."
	314 Subtract X9, X9, 1
	315 Add X10, X10, 16
	316 Move W2, 1
	317 Move X0, X21
	318 Call 0x1BB5284
	319 Move W8, 1
	320 Move [X19], W8
	321 Move X8, [X31+120]
	322 Move [X19+56], X8
	323 Move X0, [X24]
	324 Move W8, [X0+224]
	325 Compare W8, 0
	326 JumpIfNotEqual {328}
	327 Call 0x1B6F8F8
	328 Move X8, 0x22B8000
	329 Move X8, [X8+4000]
	330 Add X0, X19, 8
	331 Move X3, [X8]
	332 Add X1, X31, 120
	333 Move X2, X19
	334 Call AsyncTaskMethodBuilder`1<LoginResult>.AwaitUnsafeOnCompleted, X0, X1, X2
	335 Move W8, 2
	336 Move [X19], W8
	337 Move X8, [X31+112]
	338 Move [X19+64], X8
	339 Move X0, [X24]
	340 Move W8, [X0+224]
	341 Compare W8, 0
	342 JumpIfNotEqual {344}
	343 Call 0x1B6F8F8
	344 Move X8, 0x22B8000
	345 Move X8, [X8+4008]
	346 Add X0, X19, 8
	347 Move X3, [X8]
	348 Add X1, X31, 112
	349 Move X2, X19
	350 Call AsyncTaskMethodBuilder`1<LoginResult>.AwaitUnsafeOnCompleted, X0, X1, X2
	351 Compare W21, 0
	352 JumpIfEqual {375}
	353 NotImplemented "Instruction CMP not yet implemented."
	354 Move X8, 0x22B8000
	355 Move X8, [X8+1576]
	356 Move X0, [X8]
	357 Move W8, [X0+224]
	358 Compare W8, 0
	359 JumpIfNotEqual {361}
	360 Call 0x1B6F8F8
	361 Move X8, 0x22B9000
	362 Move X8, [X8+40]
	363 Move X9, 0x22B8000
	364 Move X10, 0x22B9000
	365 Move X9, [X9+3560]
	366 Move X10, [X10+16]
	367 Move X1, [X8]
	368 Move X3, [X9]
	369 Move X4, [X10]
	370 Move W0, 2048
	371 Move W5, 70
	372 Move X2, X31
	373 Move X6, X31
	374 Call Log.Error, X0, X1, X2, X3, X4, X5
	375 Move W20, W31
	376 Move [X31+128], X31
	377 Move [X31+136], X31
	378 Move W9, [X10]
	379 Add W9, W9, 1
	380 Add X8, X8, W9
	381 Add X0, X8, 312
	382 Move X8, [X0]
	383 Move X1, [X0+8]
	384 Move X0, X21
	385 NotImplemented "Instruction BLR not yet implemented."
	386 Compare X0, 0
	387 JumpIfEqual {456}
	388 Move X21, [X19+40]
	389 Compare X21, 0
	390 JumpIfEqual {595}
	391 Move X8, [X21]
	392 Move X1, [X22]
	393 NotImplemented "Instruction LDRH not yet implemented."
	394 Compare X9, 0
	395 JumpIfEqual {402}
	396 Move X10, [X8+176]
	397 Add X10, X10, 8
	398 NotImplemented "Instruction LDUR not yet implemented."
	399 NotImplemented "Instruction CMP not yet implemented."
	400 Subtract X9, X9, 1
	401 Add X10, X10, 16
	402 Move W2, 1
	403 Move X0, X21
	404 Call 0x1BB5284
	405 Move W9, [X10]
	406 Add W9, W9, 1
	407 Add X8, X8, W9
	408 Add X0, X8, 312
	409 Move X8, [X0]
	410 Move X1, [X0+8]
	411 Move X0, X21
	412 NotImplemented "Instruction BLR not yet implemented."
	413 Move X8, 0x22B8000
	414 Move X8, [X8+4056]
	415 Move X21, X0
	416 Move X0, [X8]
	417 Call 0x1B6FA0C
	418 Move X8, 0x22B9000
	419 Move X8, [X8]
	420 Move X22, X0
	421 Move X2, [X8]
	422 Move X1, X20
	423 Move X3, X31
	424 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	425 Move X8, 0x22B8000
	426 Move X8, [X8+4040]
	427 Move X2, [X8]
	428 Move X0, X21
	429 Move X1, X22
	430 Call Enumerable.Any, X0, X1
	431 Move TEMP, X0
	432 And TEMP, TEMP, 1
	433 Compare TEMP, 1
	434 JumpIfNotEqual {456}
	435 Move X8, 0x22B8000
	436 Move X8, [X8+1576]
	437 Move X0, [X8]
	438 Move W8, [X0+224]
	439 Compare W8, 0
	440 JumpIfNotEqual {442}
	441 Call 0x1B6F8F8
	442 Move X8, 0x22B9000
	443 Move X8, [X8+24]
	444 Move X9, 0x22B8000
	445 Move X10, 0x22B9000
	446 Move X9, [X9+3560]
	447 Move X10, [X10+16]
	448 Move X1, [X8]
	449 Move X3, [X9]
	450 Move X4, [X10]
	451 Move W0, 2048
	452 Move W5, 100
	453 Move X2, X31
	454 Move X6, X31
	455 Call Log.Debug, X0, X1, X2, X3, X4, X5
	456 Move X8, 0x22B8000
	457 Move X8, [X8+1256]
	458 Move X0, [X8]
	459 Move W8, [X0+224]
	460 Compare W8, 0
	461 JumpIfNotEqual {463}
	462 Call 0x1B6F8F8
	463 Call App.get_api
	464 Move X21, [X19+32]
	465 Move X20, X0
	466 Call AuthCommands.GetAuthDeviceID
	467 Compare X20, 0
	468 JumpIfEqual {593}
	469 Move X2, X0
	470 Move X0, X20
	471 Move X1, X21
	472 Move X3, X31
	473 Move X4, X31
	474 Move X5, X31
	475 Call AnimalCompanyAPI.LinkDeviceAsync, X0, X1, X2, X3, X4
	476 Compare X0, 0
	477 JumpIfEqual {594}
	478 Move X1, X31
	479 Call Task.GetAwaiter, X0
	480 Move [X31+104], X0
	481 Add X0, X31, 104
	482 Move X1, X31
	483 Call TaskAwaiter.get_IsCompleted, X0
	484 Move TEMP, X0
	485 And TEMP, TEMP, 1
	486 Compare TEMP, 1
	487 JumpIfNotEqual {528}
	488 Add X0, X31, 104
	489 Move X1, X31
	490 Call TaskAwaiter.GetResult, X0
	491 Move V0, [X19+2]
	492 Move [X31+8], V0
	493 Move W21, [X19+48]
	494 Move W20, [X19+52]
	495 Move TEMP, 1
	496 Not TEMP
	497 Move W8, TEMP
	498 Move [X19+8], W8
	499 Move V0, [X31+8]
	500 Move X0, [X24]
	501 Move X22, 0x22B8000
	502 Move [X31], V0
	503 Move W8, [X0+224]
	504 Move X22, [X22+4024]
	505 Compare W8, 0
	506 JumpIfNotEqual {508}
	507 Call 0x1B6F8F8
	508 Move V0, [X31]
	509 Move X2, [X22]
	510 Add X1, X31, 144
	511 Move X0, X19
	512 Move [X31+9], V0
	513 Move [X31+160], W21
	514 Move [X31+164], W20
	515 Call AsyncTaskMethodBuilder`1<LoginResult>.SetResult, X0, X1
	516 Move X8, [X23+40]
	517 Move X9, [X31+184]
	518 NotImplemented "Instruction CMP not yet implemented."
	519 Move X20, [X31+240]
	520 Move X19, [X31+248]
	521 Move X22, [X31+224]
	522 Move X21, [X31+232]
	523 Move X24, [X31+208]
	524 Move X23, [X31+216]
	525 Move X30, [X31+192]
	526 Add X31, X31, 256
	527 Return 
	528 Move W8, 3
	529 Move [X19], W8
	530 Move X8, [X31+104]
	531 Move [X19+72], X8
	532 Move X0, [X24]
	533 Move W8, [X0+224]
	534 Compare W8, 0
	535 JumpIfNotEqual {537}
	536 Call 0x1B6F8F8
	537 Move X8, 0x22B8000
	538 Move X8, [X8+4016]
	539 Add X0, X19, 8
	540 Move X3, [X8]
	541 Add X1, X31, 104
	542 Move X2, X19
	543 Call AsyncTaskMethodBuilder`1<LoginResult>.AwaitUnsafeOnCompleted, X0, X1, X2
	544 Move X8, 0x22B8000
	545 Move X8, [X8+4048]
	546 Move X0, [X8]
	547 Call 0x1B6FA0C
	548 Move X8, 0x22B8000
	549 Move X8, [X8+4032]
	550 Move X20, X0
	551 Move X2, [X8]
	552 Move X1, X31
	553 Move X3, X31
	554 Call Func`1<Object>..ctor, X0, X1, X2
	555 Move X0, X20
	556 Call AuthCommands.AuthRetryLoop, X0
	557 Compare X0, 0
	558 JumpIfEqual {596}
	559 Move X8, 0x22B8000
	560 Move X8, [X8+3672]
	561 Move X1, [X8]
	562 Call Task`1<AuthResult>.GetAwaiter, X0
	563 Move X8, 0x22B8000
	564 Move X8, [X8+3664]
	565 Move [X31+120], X0
	566 Move X1, [X8]
	567 Add X0, X31, 120
	568 Call TaskAwaiter`1<AuthResult>.get_IsCompleted, X0
	569 Move TEMP, X0
	570 And TEMP, TEMP, 1
	571 Compare TEMP, 1
	572 JumpIfEqual {128}
	573 Move [X19], W31
	574 Move X8, [X31+120]
	575 Move [X19+56], X8
	576 Move X0, [X24]
	577 Move W8, [X0+224]
	578 Compare W8, 0
	579 JumpIfNotEqual {581}
	580 Call 0x1B6F8F8
	581 Move X8, 0x22B8000
	582 Move X8, [X8+4000]
	583 Add X0, X19, 8
	584 Move X3, [X8]
	585 Add X1, X31, 120
	586 Move X2, X19
	587 Call AsyncTaskMethodBuilder`1<LoginResult>.AwaitUnsafeOnCompleted, X0, X1, X2
	588 Call 0x1B6FA1C
	589 Call 0x1B6FA1C
	590 Call 0x1B6FA1C
	591 Call 0x1B6FA1C
	592 Call 0x1B6FA1C
	593 Call 0x1B6FA1C
	594 Call 0x1B6FA1C
	595 Call 0x1B6FA1C
	596 Call 0x1B6FA1C
	597 Call 0x3D1A880
	598 Move X20, X0
	599 NotImplemented "Instruction CMP not yet implemented."
	600 Move X0, X20
	601 Call 0x3D1A840
	602 Move X20, X0
	603 Move X0, 0x22B8000
	604 Move X0, [X0+1648]
	605 Call 0x1B6F804
	606 Move X8, [X20]
	607 Move X1, [X8]
	608 Call 0x1B6FD6C
	609 Move TEMP, X0
	610 And TEMP, TEMP, 1
	611 Compare TEMP, 1
	612 JumpIfNotEqual {694}
	613 Move X8, [X20]
	614 NotImplemented "Instruction LDRSW not yet implemented."
	615 Add X20, X31, 72
	616 Move [X20], X8
	617 Add W8, W9, 1
	618 Move [X31+96], W8
	619 Call 0x3D1A850
	620 Move W8, [X31+96]
	621 Subtract W8, W8, 1
	622 Move X20, [X20]
	623 Move X0, 0x22B8000
	624 Move X0, [X0+3784]
	625 Call 0x1B6F804
	626 Compare X20, 0
	627 JumpIfEqual {636}
	628 Move X8, [X20]
	629 Move W9, [X0+304]
	630 Move W10, [X8+304]
	631 NotImplemented "Instruction CMP not yet implemented."
	632 Move X8, [X8+200]
	633 Add X8, X8, X9
	634 NotImplemented "Instruction LDUR not yet implemented."
	635 NotImplemented "Instruction CMP not yet implemented."
	636 Move X0, 0x22B8000
	637 Move X0, [X0+1576]
	638 Call 0x1B6F804
	639 Move W8, [X0+224]
	640 Compare W8, 0
	641 JumpIfNotEqual {643}
	642 Call 0x1B6F8F8
	643 Move X0, 0x22B9000
	644 Move X0, [X0+56]
	645 Call 0x1B6F804
	646 Move X21, X0
	647 Move X0, 0x22B8000
	648 Move X0, [X0+3560]
	649 Call 0x1B6F804
	650 Move X22, X0
	651 Move X0, 0x22B9000
	652 Move X0, [X0+16]
	653 Call 0x1B6F804
	654 Move X5, X0
	655 Move W0, 2048
	656 Move W6, 89
	657 Move X1, X21
	658 Move X2, X20
	659 Move X3, X31
	660 Move X4, X22
	661 Move X7, X31
	662 Call Log.Error, X0, X1, X2, X3, X4, X5, X6
	663 Move W8, [X31+96]
	664 Move W20, W31
	665 Move [X31+128], X31
	666 Move [X31+136], X31
	667 Move W21, 11
	668 Move X0, 0x22B8000
	669 Move X0, [X0+1576]
	670 Call 0x1B6F804
	671 Move W8, [X0+224]
	672 Compare W8, 0
	673 JumpIfNotEqual {675}
	674 Call 0x1B6F8F8
	675 Move X0, 0x22B9000
	676 Move X0, [X0+64]
	677 Call 0x1B6F804
	678 Move X20, X0
	679 Move X0, 0x22B8000
	680 Move X0, [X0+3560]
	681 Call 0x1B6F804
	682 Move X21, X0
	683 Move X0, 0x22B9000
	684 Move X0, [X0+16]
	685 Call 0x1B6F804
	686 Move X4, X0
	687 Move W0, 2048
	688 Move W5, 85
	689 Move X1, X20
	690 Move X2, X31
	691 Move X3, X21
	692 Move X6, X31
	693 Call Log.Debug, X0, X1, X2, X3, X4, X5
	694 Move W0, 8
	695 Call 0x3D1A860
	696 Move X8, [X20]
	697 Move [X0], X8
	698 Move X1, 0x2087000
	699 Add X1, X1, 3032
	700 Move X2, X31
	701 Call 0x3D1A870
	702 Move X21, X1
	703 Move X20, X0
	704 Call 0x3D1A850
	705 Move X20, X0
	706 Move X20, X0
	707 NotImplemented "Instruction CMP not yet implemented."
	708 Move X0, X20
	709 Call 0x3D1A840
	710 Move X20, X0
	711 Move X0, 0x22B8000
	712 Move X0, [X0+1648]
	713 Call 0x1B6F804
	714 Move X8, [X20]
	715 Move X1, [X8]
	716 Call 0x1B6FD6C
	717 Move TEMP, X0
	718 And TEMP, TEMP, 1
	719 Compare TEMP, 1
	720 JumpIfNotEqual {805}
	721 Move X8, [X20]
	722 NotImplemented "Instruction LDRSW not yet implemented."
	723 Add X20, X31, 72
	724 Move [X20], X8
	725 Add W8, W9, 1
	726 Move [X31+96], W8
	727 Call 0x3D1A850
	728 Move W8, [X31+96]
	729 Subtract W8, W8, 1
	730 Move X20, [X20]
	731 Move X0, 0x22B7000
	732 Move X0, [X0+3784]
	733 Call 0x1B6F804
	734 Compare X20, 0
	735 JumpIfEqual {744}
	736 Move X8, [X20]
	737 Move W9, [X0+304]
	738 Move W10, [X8+304]
	739 NotImplemented "Instruction CMP not yet implemented."
	740 Move X8, [X8+200]
	741 Add X8, X8, X9
	742 NotImplemented "Instruction LDUR not yet implemented."
	743 NotImplemented "Instruction CMP not yet implemented."
	744 Move X0, 0x22B7000
	745 Move X0, [X0+1576]
	746 Call 0x1B6F804
	747 Move W8, [X0+224]
	748 Compare W8, 0
	749 JumpIfNotEqual {751}
	750 Call 0x1B6F8F8
	751 Move X0, 0x22B8000
	752 Move X0, [X0+72]
	753 Call 0x1B6F804
	754 Move X21, X0
	755 Move X0, 0x22B7000
	756 Move X0, [X0+3560]
	757 Call 0x1B6F804
	758 Move X22, X0
	759 Move X0, 0x22B8000
	760 Move X0, [X0+16]
	761 Call 0x1B6F804
	762 Move X5, X0
	763 Move W0, 2048
	764 Move W6, 115
	765 Move X1, X21
	766 Move X2, X20
	767 Move X3, X31
	768 Move X4, X22
	769 Move X7, X31
	770 Call Log.Error, X0, X1, X2, X3, X4, X5, X6
	771 Move W8, [X31+96]
	772 Subtract W8, W8, 1
	773 Move [X31+96], W8
	774 Move X0, 0x22B7000
	775 Move X0, [X0+1576]
	776 Call 0x1B6F804
	777 Move W8, [X0+224]
	778 Compare W8, 0
	779 JumpIfNotEqual {781}
	780 Call 0x1B6F8F8
	781 Move X0, 0x22B8000
	782 Move X0, [X0+64]
	783 Call 0x1B6F804
	784 Move X20, X0
	785 Move X0, 0x22B7000
	786 Move X0, [X0+3560]
	787 Call 0x1B6F804
	788 Move X21, X0
	789 Move X0, 0x22B8000
	790 Move X0, [X0+16]
	791 Call 0x1B6F804
	792 Move X4, X0
	793 Move W0, 2048
	794 Move W5, 111
	795 Move X1, X20
	796 Move X2, X31
	797 Move X3, X21
	798 Move X6, X31
	799 Call Log.Debug, X0, X1, X2, X3, X4, X5
	800 Move W8, [X31+96]
	801 Move W20, W31
	802 Move [X31+128], X31
	803 Move [X31+136], X31
	804 Move W21, 3
	805 Move W0, 8
	806 Call 0x3D1A860
	807 Move X8, [X20]
	808 Move [X0], X8
	809 Move X1, 0x2086000
	810 Add X1, X1, 3032
	811 Move X2, X31
	812 Call 0x3D1A870
	813 Move X21, X1
	814 Move X20, X0
	815 Call 0x3D1A850
	816 Move W1, W21
	817 Move X20, X0
	818 NotImplemented "Instruction CMP not yet implemented."
	819 Move X0, X20
	820 Call 0x3D1A840
	821 Move X20, X0
	822 Move X0, 0x22B7000
	823 Move X0, [X0+1648]
	824 Call 0x1B6F804
	825 Move X8, [X20]
	826 Move X1, [X8]
	827 Call 0x1B6FD6C
	828 Move TEMP, X0
	829 And TEMP, TEMP, 1
	830 Compare TEMP, 1
	831 JumpIfNotEqual {876}
	832 Move X8, [X20]
	833 NotImplemented "Instruction LDRSW not yet implemented."
	834 Add X20, X31, 72
	835 Move [X20], X8
	836 Add W8, W9, 1
	837 Move [X31+96], W8
	838 Call 0x3D1A850
	839 Move W8, [X31+96]
	840 Subtract W8, W8, 1
	841 Move X20, [X20]
	842 Move X0, 0x22B7000
	843 Move X0, [X0+1576]
	844 Call 0x1B6F804
	845 Move W8, [X0+224]
	846 Compare W8, 0
	847 JumpIfNotEqual {849}
	848 Call 0x1B6F8F8
	849 Move X0, 0x22B8000
	850 Move X0, [X0+80]
	851 Call 0x1B6F804
	852 Move X21, X0
	853 Move X0, 0x22B7000
	854 Move X0, [X0+3560]
	855 Call 0x1B6F804
	856 Move X22, X0
	857 Move X0, 0x22B8000
	858 Move X0, [X0+16]
	859 Call 0x1B6F804
	860 Move X5, X0
	861 Move W0, 2048
	862 Move W6, 123
	863 Move X1, X21
	864 Move X2, X20
	865 Move X3, X31
	866 Move X4, X22
	867 Move X7, X31
	868 Call Log.Error, X0, X1, X2, X3, X4, X5, X6
	869 Move W8, [X31+96]
	870 Move W20, W31
	871 Move [X31+128], X31
	872 Move [X31+136], X31
	873 Move W21, 2
	874 Subtract W8, W8, 1
	875 Move [X31+96], W8
	876 Move W0, 8
	877 Call 0x3D1A860
	878 Move X8, [X20]
	879 Move [X0], X8
	880 Move X1, 0x2086000
	881 Add X1, X1, 3032
	882 Move X2, X31
	883 Call 0x3D1A870
	884 Move X21, X1
	885 Move X20, X0
	886 Call 0x3D1A850
	887 Move W1, W21
	888 Move X20, X0
	889 Move W8, 1
	890 NotImplemented "Instruction CMP not yet implemented."
	891 Move X0, X20
	892 Call 0x3D1A840
	893 Move X20, X0
	894 Move X0, 0x22B7000
	895 Move X0, [X0+1648]
	896 Call 0x1B6F804
	897 Move X8, [X20]
	898 Move X1, [X8]
	899 Call 0x1B6FD6C
	900 Move TEMP, X0
	901 And TEMP, TEMP, 1
	902 Compare TEMP, 1
	903 JumpIfNotEqual {932}
	904 Move X8, [X20]
	905 NotImplemented "Instruction LDRSW not yet implemented."
	906 Add X20, X31, 72
	907 Move [X20], X8
	908 Add W8, W9, 1
	909 Move [X31+96], W8
	910 Call 0x3D1A850
	911 Move W8, [X31+96]
	912 Move X0, 0x22B7000
	913 Subtract W8, W8, 1
	914 Move X20, [X20]
	915 Move TEMP, 1
	916 Not TEMP
	917 Move W8, TEMP
	918 Move [X19+8], W8
	919 Move X0, [X0+2288]
	920 Call 0x1B6F804
	921 Move W8, [X0+224]
	922 Compare W8, 0
	923 JumpIfNotEqual {925}
	924 Call 0x1B6F8F8
	925 Move X0, 0x22B8000
	926 Move X0, [X0+88]
	927 Call 0x1B6F804
	928 Move X2, X0
	929 Move X0, X19
	930 Move X1, X20
	931 Call AsyncTaskMethodBuilder`1<LoginResult>.SetException, X0, X1
	932 Move W0, 8
	933 Call 0x3D1A860
	934 Move X8, [X20]
	935 Move [X0], X8
	936 Move X1, 0x2086000
	937 Add X1, X1, 3032
	938 Move X2, X31
	939 Call 0x3D1A870
	940 Move X20, X0
	941 Call 0x3D1A850
	942 Move X0, X20
	943 Call 0x1C8518C
	944 Call 0x18F56A8

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x01C9735C ADD X10, X10, 0x10
	0x01C97360 B.NE 0x1C9734C
	0x01C97364 MOVZ W2, 0xC
	0x01C97368 MOV X0, X23
	0x01C9736C BL 0x1BB4284
	0x01C97370 B 0x1C97388
	0x01C97374 BL 0x1B6EA1C
	0x01C97378 LDR W9, [X10]
	0x01C9737C ADD W9, W9, 0xC
	0x01C97380 ADD X8, X8, W9, 0x4, SXTW
	0x01C97384 ADD X0, X8, 0x138
	0x01C97388 LDP X8, X1, [X0]
	0x01C9738C MOV X0, X23
	0x01C97390 BLR X8
	0x01C97394 MOV X23, X0
	0x01C97398 ADRP X0, 0x22B7000
	0x01C9739C LDR X0, [X0 + 0xB8]
	0x01C973A0 BL 0x1B6E804
	0x01C973A4 MOV X24, X0
	0x01C973A8 ADRP X0, 0x22B6000
	0x01C973AC LDR X0, [X0 + 0x5B0]
	0x01C973B0 BL 0x1B6E804
	0x01C973B4 MOV X3, X0
	0x01C973B8 MOV X0, X22
	0x01C973BC MOV X1, X24
	0x01C973C0 MOV X2, X23
	0x01C973C4 BL 0x28FA2A8
	0x01C973C8 ADRP X0, 0x22B6000
	0x01C973CC LDR X0, [X0 + 0x628]
	0x01C973D0 BL 0x1B6E804
	0x01C973D4 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x258D000
	007 Move X21, 0x22B7000
	008 Move W8, [X22+982]
	009 Move X21, [X21+2288]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x22B8000
	017 Move X0, [X0+96]
	018 Call 0x1B6F7F0
	019 Move X0, 0x22B7000
	020 Move X0, [X0+2288]
	021 Call 0x1B6F7F0
	022 Move W8, 1
	023 Move [X22+982], W8
	024 Move X0, [X21]
	025 Move X21, 0x22B8000
	026 Move W8, [X0+224]
	027 Move X21, [X21+96]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1B6F8F8
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<LoginResult>.SetStateMachine, X0, X1
	040 Return 

