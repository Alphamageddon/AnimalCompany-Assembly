Type: AnimalCompany.TermsAgreements/<AgreeToTerms>d__14

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01E05048 MOV X20, X0
	0x01E0504C TBNZ X8, 0x0, 0x1E05070
	0x01E05050 ADRP X0, 0x22F1000
	0x01E05054 LDR X0, [X0 + 0xA78]
	0x01E05058 BL 0x1C16CF4
	0x01E0505C ADRP X0, 0x22F4000
	0x01E05060 LDR X0, [X0 + 0x908]
	0x01E05064 BL 0x1C16CF4
	0x01E05068 MOVZ W8, 0x1
	0x01E0506C STRB W8, [X22 + 0xD93]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01E05400 LDP S8, S9, [X21 + 0x28]

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01E05404 LDP S14, S13, [X21 + 0x30]
	0x01E05408 LDP S11, S10, [X21 + 0x38]
	0x01E0540C LDR W8, [X0 + 0xE0]
	0x01E05410 LDR V12, [X21 + 0x40]
	0x01E05414 CBNZ W8, 0x1E05420
	0x01E05418 BL 0x1C16DFC
	0x01E0541C LDR X0, [X22]
	0x01E05420 LDR X8, [X0 + 0xB8]
	0x01E05424 MOV X0, X19
	0x01E05428 MOV W1, W20
	0x01E0542C MOV V0.16B, V8.16B
	0x01E05430 MOV V1.16B, V9.16B
	0x01E05434 MOV V3.16B, V13.16B
	0x01E05438 MOV V4.16B, V11.16B
	0x01E0543C MOV V5.16B, V10.16B
	0x01E05440 MOV V6.16B, V12.16B
	0x01E05444 LDP X20, X19, [X31 + 0x50]
	0x01E05448 LDP X22, X21, [X31 + 0x40]
	0x01E0544C LDR X30, [X31 + 0x38]
	0x01E05450 LDP D9, D8, [X31 + 0x28]
	0x01E05454 LDP D11, D10, [X31 + 0x18]
	0x01E05458 LDP D13, D12, [X31 + 0x8]
	0x01E0545C MOVZ W9, 0x1
	0x01E05460 STRB W9, [X8 + 0x20]
	0x01E05464 MOV V2.16B, V14.16B
	0x01E05468 LDR V14, [X31], #0x60
	0x01E0546C B 0x1E04FFC
	0x01E05470 STP D15, D14, [X31 - 0x70]!
	0x01E05474 STP D13, D12, [X31 + 0x10]
	0x01E05478 STP D11, D10, [X31 + 0x20]
	0x01E0547C STP D9, D8, [X31 + 0x30]
	0x01E05480 STR X30, [X31 + 0x40]
	0x01E05484 STP X22, X21, [X31 + 0x50]
	0x01E05488 STP X20, X19, [X31 + 0x60]
	0x01E0548C MOV X19, X0
	0x01E05490 LDR X0, [X0 + 0x80]
	0x01E05494 CBZ X0, 0x1E05618
	0x01E05498 MOV X1, X31
	0x01E0549C BL 0x3C8E9A0
	0x01E054A0 ADRP X21, 0x25D3000
	0x01E054A4 LDRB W8, [X21 + 0x784]
	0x01E054A8 MOV V8.16B, V0.16B
	0x01E054AC MOV V9.16B, V1.16B
	0x01E054B0 MOV V10.16B, V2.16B
	0x01E054B4 CBNZ W8, 0x1E054CC
	0x01E054B8 ADRP X0, 0x22EE000
	0x01E054BC LDR X0, [X0 + 0x5A8]
	0x01E054C0 BL 0x1C16CF4
	0x01E054C4 MOVZ W8, 0x1
	0x01E054C8 STRB W8, [X21 + 0x784]
	0x01E054CC ADRP X22, 0x22EE000
	0x01E054D0 LDR X22, [X22 + 0x5A8]
	0x01E054D4 LDR X0, [X22]
	0x01E054D8 LDR W8, [X0 + 0xE0]
	0x01E054DC CBNZ W8, 0x1E054E4
	0x01E054E0 BL 0x1C16DFC
	0x01E054E4 LDR X0, [X19 + 0x80]
	0x01E054E8 CBZ X0, 0x1E05618
	0x01E054EC LDR X20, [X19 + 0x88]
	0x01E054F0 LDP S14, S15, [X19 + 0x98]
	0x01E054F4 MOV X1, X31
	0x01E054F8 BL 0x3C8E9A0
	0x01E054FC LDRB W8, [X21 + 0x784]
	0x01E05500 MOV V11.16B, V0.16B
	0x01E05504 MOV V12.16B, V1.16B
	0x01E05508 MOV V13.16B, V2.16B
	0x01E0550C CBNZ W8, 0x1E05524
	0x01E05510 ADRP X0, 0x22EE000
	0x01E05514 LDR X0, [X0 + 0x5A8]
	0x01E05518 BL 0x1C16CF4
	0x01E0551C MOVZ W8, 0x1
	0x01E05520 STRB W8, [X21 + 0x784]
	0x01E05524 LDR X0, [X22]
	0x01E05528 LDR W8, [X0 + 0xE0]
	0x01E0552C CBNZ W8, 0x1E05534
	0x01E05530 BL 0x1C16DFC
	0x01E05534 FCMP S14, S15
	0x01E05538 FMOV S0, W31
	0x01E0553C B.EQ 0x1E05574
	0x01E05540 FMUL S1, S11, S11
	0x01E05544 FMUL S2, S12, S12
	0x01E05548 FMUL S3, S13, S13
	0x01E0554C FADD S1, S1, S2
	0x01E05550 FADD S1, S3, S1
	0x01E05554 FSQRT S1, S1
	0x01E05558 FSUB S1, S1, S14
	0x01E0555C FSUB S2, S15, S14
	0x01E05560 FDIV S1, S1, S2
	0x01E05564 FCMP S1, 0x0
	0x01E05568 B.MI 0x1E05574
	0x01E0556C FMOV S0, 1
	0x01E05570 FMIN S0, S1, S0
	0x01E05574 CBZ X20, 0x1E05618
	0x01E05578 FMUL S1, S8, S8
	0x01E0557C FMUL S2, S9, S9
	0x01E05580 FADD S1, S1, S2
	0x01E05584 FMUL S2, S10, S10
	0x01E05588 FADD S1, S2, S1
	0x01E0558C MOV X0, X20
	0x01E05590 MOV X1, X31
	0x01E05594 FSQRT S8, S1
	0x01E05598 BL 0x3BFC8DC
	0x01E0559C ADRP X8, 0xFFFFFFFFFECE5000
	0x01E055A0 LDR V0, [X8 + 0xBC]
	0x01E055A4 FCMP S8, S0
	0x01E055A8 B.PL 0x1E055F4
	0x01E055AC ADRP X8, 0xFFFFFFFFFECE5000
	0x01E055B0 LDR V0, [X19 + 0xA0]
	0x01E055B4 LDR V1, [X8 + 0x30C]
	0x01E055B8 FCMP S0, S1
	0x01E055BC B.LE 0x1E055F4
	0x01E055C0 LDR X20, [X19 + 0x90]
	0x01E055C4 MOV X0, X19
	0x01E055C8 MOV X1, X31
	0x01E055CC BL 0x3C32E90
	0x01E055D0 CBZ X0, 0x1E05618
	0x01E055D4 MOV X1, X31
	0x01E055D8 BL 0x3C3F58C
	0x01E055DC CBZ X20, 0x1E05618
	0x01E055E0 FMOV S3, 1
	0x01E055E4 MOV X0, X20
	0x01E055E8 MOV W1, W31
	0x01E055EC MOV X2, X31
	0x01E055F0 BL 0x1DD0FA8
	0x01E055F4 STR S8, [X19 + 0xA0]
	0x01E055F8 LDP X20, X19, [X31 + 0x60]
	0x01E055FC LDP X22, X21, [X31 + 0x50]
	0x01E05600 LDR X30, [X31 + 0x40]
	0x01E05604 LDP D9, D8, [X31 + 0x30]
	0x01E05608 LDP D11, D10, [X31 + 0x20]
	0x01E0560C LDP D13, D12, [X31 + 0x10]
	0x01E05610 LDP D15, D14, [X31], #0x70
	0x01E05614 RET
	0x01E05618 BL 0x1C16F20
	0x01E0561C ADRP X8, 0xFFFFFFFFFECE9000
	0x01E05620 LDR V0, [X8 + 0x98]
	0x01E05624 MOV X1, X31
	0x01E05628 STR D0, [X0 + 0x98]
	0x01E0562C B 0x1E74F04
	0x01E05630 RET
	0x01E05634 RET
	0x01E05638 STR X30, [X31 - 0x30]!
	0x01E0563C STP X22, X21, [X31 + 0x10]
	0x01E05640 STP X20, X19, [X31 + 0x20]
	0x01E05644 ADRP X21, 0x25D3000
	0x01E05648 ADRP X22, 0x22F2000
	0x01E0564C ADRP X20, 0x22EE000
	0x01E05650 LDRB W8, [X21 + 0xD97]
	0x01E05654 LDR X22, [X22 + 0xAB8]
	0x01E05658 LDR X20, [X20 + 0x598]
	0x01E0565C MOV X19, X0
	0x01E05660 TBNZ X8, 0x0, 0x1E0569C
	0x01E05664 ADRP X0, 0x22F2000
	0x01E05668 LDR X0, [X0 + 0xAB8]
	0x01E0566C BL 0x1C16CF4
	0x01E05670 ADRP X0, 0x22EE000
	0x01E05674 LDR X0, [X0 + 0xA28]
	0x01E05678 BL 0x1C16CF4
	0x01E0567C ADRP X0, 0x22EE000
	0x01E05680 LDR X0, [X0 + 0x598]
	0x01E05684 BL 0x1C16CF4
	0x01E05688 ADRP X0, 0x22F4000
	0x01E0568C LDR X0, [X0 + 0x930]
	0x01E05690 BL 0x1C16CF4
	0x01E05694 MOVZ W8, 0x1
	0x01E05698 STRB W8, [X21 + 0xD97]
	0x01E0569C LDR X1, [X22]
	0x01E056A0 MOV X0, X19
	0x01E056A4 BL 0x21A3894
	0x01E056A8 LDR X8, [X20]
	0x01E056AC MOV X20, X0
	0x01E056B0 LDR W9, [X8 + 0xE0]
	0x01E056B4 CBNZ W9, 0x1E056C0
	0x01E056B8 MOV X0, X8
	0x01E056BC BL 0x1C16DFC
	0x01E056C0 MOV X0, X20
	0x01E056C4 MOV X1, X31
	0x01E056C8 MOV X2, X31
	0x01E056CC BL 0x3C3883C
	0x01E056D0 TBZ X0, 0x0, 0x1E05740
	0x01E056D4 MOV X0, X19
	0x01E056D8 MOV X1, X31
	0x01E056DC BL 0x3C32ECC
	0x01E056E0 CBZ X0, 0x1E05788
	0x01E056E4 MOV X1, X31
	0x01E056E8 BL 0x3C389D4
	0x01E056EC ADRP X8, 0x22F4000
	0x01E056F0 LDR X8, [X8 + 0x930]
	0x01E056F4 MOV X1, X0
	0x01E056F8 MOV X2, X31
	0x01E056FC LDR X8, [X8]
	0x01E05700 MOV X0, X8
	0x01E05704 BL 0x321B938
	0x01E05708 ADRP X8, 0x22EE000
	0x01E0570C LDR X8, [X8 + 0xA28]
	0x01E05710 MOV X19, X0
	0x01E05714 LDR X8, [X8]
	0x01E05718 LDR W9, [X8 + 0xE0]
	0x01E0571C CBNZ W9, 0x1E05728
	0x01E05720 MOV X0, X8
	0x01E05724 BL 0x1C16DFC
	0x01E05728 MOV X0, X19
	0x01E0572C LDP X20, X19, [X31 + 0x20]
	0x01E05730 LDP X22, X21, [X31 + 0x10]
	0x01E05734 MOV X1, X31
	0x01E05738 LDR X30, [X31], #0x30
	0x01E0573C B 0x3C06A04
	0x01E05740 LDR X19, [X19 + 0x20]
	0x01E05744 CBZ X19, 0x1E05788
	0x01E05748 LDR W1, [X19 + 0x18]
	0x01E0574C MOV W0, W31
	0x01E05750 MOV X2, X31
	0x01E05754 BL 0x3C309A8
	0x01E05758 LDR W8, [X19 + 0x18]
	0x01E0575C CMP W0, W8
	0x01E05760 B.CS 0x1E0578C
	0x01E05764 CBZ X20, 0x1E05788
	0x01E05768 ADD X8, X19, W0, 0x3, SXTW
	0x01E0576C LDR X1, [X8 + 0x20]
	0x01E05770 MOV X0, X20
	0x01E05774 LDP X20, X19, [X31 + 0x20]
	0x01E05778 LDP X22, X21, [X31 + 0x10]
	0x01E0577C MOV X2, X31
	0x01E05780 LDR X30, [X31], #0x30
	0x01E05784 B 0x3BFCA38
	0x01E05788 BL 0x1C16F20
	0x01E0578C BL 0x1C16F28
	0x01E05790 MOV X1, X31
	0x01E05794 B 0x3C36C30
	0x01E05798 STR X30, [X31 - 0x30]!
	0x01E0579C STP X22, X21, [X31 + 0x10]
	0x01E057A0 STP X20, X19, [X31 + 0x20]
	0x01E057A4 ADRP X21, 0x25D3000
	0x01E057A8 ADRP X22, 0x22F2000
	0x01E057AC ADRP X20, 0x22EE000
	0x01E057B0 LDRB W8, [X21 + 0xD98]
	0x01E057B4 LDR X22, [X22 + 0xAB8]
	0x01E057B8 LDR X20, [X20 + 0x598]
	0x01E057BC MOV X19, X0
	0x01E057C0 TBNZ X8, 0x0, 0x1E057FC
	0x01E057C4 ADRP X0, 0x22F2000
	0x01E057C8 LDR X0, [X0 + 0xAB8]
	0x01E057CC BL 0x1C16CF4
	0x01E057D0 ADRP X0, 0x22EE000
	0x01E057D4 LDR X0, [X0 + 0xA28]
	0x01E057D8 BL 0x1C16CF4
	0x01E057DC ADRP X0, 0x22EE000
	0x01E057E0 LDR X0, [X0 + 0x598]
	0x01E057E4 BL 0x1C16CF4
	0x01E057E8 ADRP X0, 0x22F4000
	0x01E057EC LDR X0, [X0 + 0x938]
	0x01E057F0 BL 0x1C16CF4
	0x01E057F4 MOVZ W8, 0x1
	0x01E057F8 STRB W8, [X21 + 0xD98]
	0x01E057FC LDR X1, [X22]
	0x01E05800 MOV X0, X19
	0x01E05804 BL 0x21A3894
	0x01E05808 LDR X8, [X20]
	0x01E0580C MOV X20, X0
	0x01E05810 LDR W9, [X8 + 0xE0]
	0x01E05814 CBNZ W9, 0x1E05820
	0x01E05818 MOV X0, X8
	0x01E0581C BL 0x1C16DFC
	0x01E05820 MOV X0, X20
	0x01E05824 MOV X1, X31
	0x01E05828 MOV X2, X31
	0x01E0582C BL 0x3C3883C
	0x01E05830 TBZ X0, 0x0, 0x1E058A0
	0x01E05834 MOV X0, X19
	0x01E05838 MOV X1, X31
	0x01E0583C BL 0x3C32ECC
	0x01E05840 CBZ X0, 0x1E058C8
	0x01E05844 MOV X1, X31
	0x01E05848 BL 0x3C389D4
	0x01E0584C ADRP X8, 0x22F4000
	0x01E05850 LDR X8, [X8 + 0x938]
	0x01E05854 MOV X1, X0
	0x01E05858 MOV X2, X31
	0x01E0585C LDR X8, [X8]
	0x01E05860 MOV X0, X8
	0x01E05864 BL 0x321B938
	0x01E05868 ADRP X8, 0x22EE000
	0x01E0586C LDR X8, [X8 + 0xA28]
	0x01E05870 MOV X19, X0
	0x01E05874 LDR X8, [X8]
	0x01E05878 LDR W9, [X8 + 0xE0]
	0x01E0587C CBNZ W9, 0x1E05888
	0x01E05880 MOV X0, X8
	0x01E05884 BL 0x1C16DFC
	0x01E05888 MOV X0, X19
	0x01E0588C LDP X20, X19, [X31 + 0x20]
	0x01E05890 LDP X22, X21, [X31 + 0x10]
	0x01E05894 MOV X1, X31
	0x01E05898 LDR X30, [X31], #0x30
	0x01E0589C B 0x3C06A04
	0x01E058A0 LDP S0, S1, [X19 + 0x20]
	0x01E058A4 MOV X0, X31
	0x01E058A8 BL 0x3C30968
	0x01E058AC CBZ X20, 0x1E058C8
	0x01E058B0 MOV X0, X20
	0x01E058B4 LDP X20, X19, [X31 + 0x20]
	0x01E058B8 LDP X22, X21, [X31 + 0x10]
	0x01E058BC MOV X1, X31
	0x01E058C0 LDR X30, [X31], #0x30
	0x01E058C4 B 0x3BFC928
	0x01E058C8 BL 0x1C16F20
	0x01E058CC FMOV V0.2S, 0x0
	0x01E058D0 MOV X1, X31
	0x01E058D4 STR D0, [X0 + 0x20]
	0x01E058D8 B 0x3C36C30
	0x01E058DC STR X30, [X31 - 0x30]!
	0x01E058E0 STP X22, X21, [X31 + 0x10]
	0x01E058E4 STP X20, X19, [X31 + 0x20]
	0x01E058E8 ADRP X21, 0x25D3000
	0x01E058EC ADRP X22, 0x22F2000
	0x01E058F0 ADRP X20, 0x22EE000
	0x01E058F4 LDRB W8, [X21 + 0xD99]
	0x01E058F8 LDR X22, [X22 + 0xAB8]
	0x01E058FC LDR X20, [X20 + 0x598]
	0x01E05900 MOV X19, X0
	0x01E05904 TBNZ X8, 0x0, 0x1E05940
	0x01E05908 ADRP X0, 0x22F2000
	0x01E0590C LDR X0, [X0 + 0xAB8]
	0x01E05910 BL 0x1C16CF4
	0x01E05914 ADRP X0, 0x22EE000
	0x01E05918 LDR X0, [X0 + 0xA28]
	0x01E0591C BL 0x1C16CF4
	0x01E05920 ADRP X0, 0x22EE000
	0x01E05924 LDR X0, [X0 + 0x598]
	0x01E05928 BL 0x1C16CF4
	0x01E0592C ADRP X0, 0x22F4000
	0x01E05930 LDR X0, [X0 + 0x940]
	0x01E05934 BL 0x1C16CF4
	0x01E05938 MOVZ W8, 0x1
	0x01E0593C STRB W8, [X21 + 0xD99]
	0x01E05940 LDR X1, [X22]
	0x01E05944 MOV X0, X19
	0x01E05948 BL 0x21A3894
	0x01E0594C LDR X8, [X20]
	0x01E05950 MOV X20, X0
	0x01E05954 LDR W9, [X8 + 0xE0]
	0x01E05958 CBNZ W9, 0x1E05964
	0x01E0595C MOV X0, X8
	0x01E05960 BL 0x1C16DFC
	0x01E05964 MOV X0, X20
	0x01E05968 MOV X1, X31
	0x01E0596C MOV X2, X31
	0x01E05970 BL 0x3C3883C
	0x01E05974 TBZ X0, 0x0, 0x1E059E4
	0x01E05978 MOV X0, X19
	0x01E0597C MOV X1, X31
	0x01E05980 BL 0x3C32ECC
	0x01E05984 CBZ X0, 0x1E05A0C
	0x01E05988 MOV X1, X31
	0x01E0598C BL 0x3C389D4
	0x01E05990 ADRP X8, 0x22F4000
	0x01E05994 LDR X8, [X8 + 0x940]
	0x01E05998 MOV X1, X0
	0x01E0599C MOV X2, X31
	0x01E059A0 LDR X8, [X8]
	0x01E059A4 MOV X0, X8
	0x01E059A8 BL 0x321B938
	0x01E059AC ADRP X8, 0x22EE000
	0x01E059B0 LDR X8, [X8 + 0xA28]
	0x01E059B4 MOV X19, X0
	0x01E059B8 LDR X8, [X8]
	0x01E059BC LDR W9, [X8 + 0xE0]
	0x01E059C0 CBNZ W9, 0x1E059CC
	0x01E059C4 MOV X0, X8
	0x01E059C8 BL 0x1C16DFC
	0x01E059CC MOV X0, X19
	0x01E059D0 LDP X20, X19, [X31 + 0x20]
	0x01E059D4 LDP X22, X21, [X31 + 0x10]
	0x01E059D8 MOV X1, X31
	0x01E059DC LDR X30, [X31], #0x30
	0x01E059E0 B 0x3C06A04
	0x01E059E4 LDP S0, S1, [X19 + 0x20]
	0x01E059E8 MOV X0, X31
	0x01E059EC BL 0x3C30968
	0x01E059F0 CBZ X20, 0x1E05A0C
	0x01E059F4 MOV X0, X20
	0x01E059F8 LDP X20, X19, [X31 + 0x20]
	0x01E059FC LDP X22, X21, [X31 + 0x10]
	0x01E05A00 MOV X1, X31
	0x01E05A04 LDR X30, [X31], #0x30
	0x01E05A08 B 0x3BFC8DC
	0x01E05A0C BL 0x1C16F20
	0x01E05A10 FMOV V0.2S, 0x0
	0x01E05A14 MOV X1, X31
	0x01E05A18 STR D0, [X0 + 0x20]
	0x01E05A1C B 0x3C36C30
	0x01E05A20 STP X30, X21, [X31 - 0x20]!
	0x01E05A24 STP X20, X19, [X31 + 0x10]
	0x01E05A28 ADRP X21, 0x25D3000
	0x01E05A2C ADRP X20, 0x22EE000
	0x01E05A30 LDRB W8, [X21 + 0xD9A]
	0x01E05A34 LDR X20, [X20 + 0x598]
	0x01E05A38 MOV X19, X0
	0x01E05A3C TBNZ X8, 0x0, 0x1E05A60
	0x01E05A40 ADRP X0, 0x22F4000
	0x01E05A44 LDR X0, [X0 + 0x948]
	0x01E05A48 BL 0x1C16CF4
	0x01E05A4C ADRP X0, 0x22EE000
	0x01E05A50 LDR X0, [X0 + 0x598]
	0x01E05A54 BL 0x1C16CF4
	0x01E05A58 MOVZ W8, 0x1
	0x01E05A5C STRB W8, [X21 + 0xD9A]
	0x01E05A60 LDR X0, [X20]
	0x01E05A64 LDR X20, [X19 + 0x28]
	0x01E05A68 LDR W8, [X0 + 0xE0]
	0x01E05A6C CBNZ W8, 0x1E05A74
	0x01E05A70 BL 0x1C16DFC
	0x01E05A74 MOV X0, X20
	0x01E05A78 MOV X1, X31
	0x01E05A7C MOV X2, X31
	0x01E05A80 BL 0x3C3883C
	0x01E05A84 TBZ X0, 0x0, 0x1E05AA4
	0x01E05A88 ADRP X8, 0x22F4000
	0x01E05A8C LDR X8, [X8 + 0x948]
	0x01E05A90 MOV X0, X19
	0x01E05A94 LDR X1, [X8]
	0x01E05A98 BL 0x21A3894
	0x01E05A9C STR X0, [X19 + 0x28]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+32], D10
	003 Move [X31+40], D9
	004 Move [X31+48], D8
	005 Move [X31+56], X30
	006 Move [X31+64], X28
	007 Move [X31+72], X27
	008 Move [X31+80], X26
	009 Move [X31+88], X25
	010 Move [X31+96], X24
	011 Move [X31+104], X23
	012 Move [X31+112], X22
	013 Move [X31+120], X21
	014 Move [X31+128], X20
	015 Move [X31+136], X19
	016 Move X20, 0x25D4000
	017 Move W8, [X20+3470]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {34}
	023 Move X0, 0x22F4000
	024 Move X0, [X0+344]
	025 Call 0x1C17CF4
	026 Move X0, 0x22F5000
	027 Move X0, [X0+2240]
	028 Call 0x1C17CF4
	029 Move X0, 0x22F5000
	030 Move X0, [X0+2248]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+3470], W8
	034 Move [X31+28], W31
	035 Move [X31+24], W31
	036 Move [X31+8], X31
	037 Move [X31+16], X31
	038 Move W8, [X19+16]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X23, [X19+40]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W0, W31
	043 Compare W8, 0
	044 JumpIfNotEqual {298}
	045 Move X8, [X19+32]
	046 Move TEMP, 0
	047 Not TEMP
	048 Move W9, TEMP
	049 Move [X19+16], W9
	050 Move [X19+48], W31
	051 Compare X8, 0
	052 JumpIfEqual {316}
	053 Move X0, [X8+32]
	054 Compare X0, 0
	055 JumpIfEqual {317}
	056 Move X1, X31
	057 Call Component.get_gameObject, X0
	058 Compare X0, 0
	059 JumpIfEqual {318}
	060 Move W1, 1
	061 Move X2, X31
	062 Call GameObject.SetActive, X0, X1
	063 Compare X23, 0
	064 JumpIfEqual {319}
	065 Move X8, [X19+32]
	066 Compare X8, 0
	067 JumpIfEqual {320}
	068 Move X0, [X23+56]
	069 Compare X0, 0
	070 JumpIfEqual {321}
	071 Move X9, [X0]
	072 Move X1, [X8+24]
	073 Move X8, [X9+1368]
	074 Move X2, [X9+1376]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move X0, [X23+64]
	077 Compare X0, 0
	078 JumpIfEqual {323}
	079 Move V0, [X19+48]
	080 Move X1, X31
	081 Call Image.set_fillAmount, X0, V0
	082 Move X8, [X19+32]
	083 Compare X8, 0
	084 JumpIfEqual {325}
	085 Move X0, [X23+48]
	086 Compare X0, 0
	087 JumpIfEqual {326}
	088 Move X8, [X8+32]
	089 Move [X0+32], X8
	090 Move S0, 1
	091 Move X1, X31
	092 Call ScrollRect.set_verticalNormalizedPosition, X0, V0
	093 Move TEMP, 0
	094 Not TEMP
	095 Move W8, TEMP
	096 Move [X19+16], W8
	097 Move V0, [X19+48]
	098 Move S1, 1
	099 NotImplemented "Instruction FCMP not yet implemented."
	100 Move W0, 4
	101 Move X1, X31
	102 Call InputDevices.GetDeviceAtXRNode, X0
	103 Compare X23, 0
	104 JumpIfEqual {322}
	105 Move [X23+88], X0
	106 Move [X23+96], X1
	107 Move W0, 5
	108 Move X1, X31
	109 Call InputDevices.GetDeviceAtXRNode, X0
	110 Move X24, [X23+120]
	111 Move [X23+104], X0
	112 Move [X23+112], X1
	113 Compare X24, 0
	114 JumpIfEqual {324}
	115 Move X8, [X24+24]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X28, 0x22F5000
	118 Move X28, [X28+2248]
	119 Move W25, W31
	120 Move X26, X31
	121 And X8, X8, 0
	122 Add X27, X24, 32
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X0, [X28]
	125 Move W20, [X27]
	126 Move X22, [X23+88]
	127 Move X21, [X23+96]
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {132}
	131 Call 0x1C17DFC
	132 Add X3, X31, 28
	133 Move S0, -1
	134 Move X0, X22
	135 Move X1, X21
	136 Move W2, W20
	137 Move X4, X31
	138 Call InputHelpers.IsPressed, X0, X1, X2, V0
	139 Move W9, [X31+28]
	140 Move X8, [X28]
	141 And W10, W25, 1
	142 Move X21, [X23+104]
	143 Move X22, [X23+112]
	144 Or W9, W9, W10
	145 Move W10, [X8+224]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 NotImplemented "Instruction CSET not yet implemented."
	148 And W31, W0, 1
	149 NotImplemented "Instruction CSEL not yet implemented."
	150 Compare W10, 0
	151 JumpIfNotEqual {154}
	152 Move X0, X8
	153 Call 0x1C17DFC
	154 Add X3, X31, 24
	155 Move S0, -1
	156 Move X0, X21
	157 Move X1, X22
	158 Move W2, W20
	159 Move X4, X31
	160 Call InputHelpers.IsPressed, X0, X1, X2, V0
	161 Move W9, [X31+24]
	162 And W10, W25, 1
	163 Move W8, [X24+24]
	164 Add X26, X26, 1
	165 Or W9, W9, W10
	166 NotImplemented "Instruction CMP not yet implemented."
	167 NotImplemented "Instruction CSET not yet implemented."
	168 And W31, W0, 1
	169 NotImplemented "Instruction CSEL not yet implemented."
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move W0, W31
	172 Move TEMP, 0
	173 Not TEMP
	174 Move W8, TEMP
	175 Move [X19+16], W8
	176 Move X8, [X19+32]
	177 Compare X8, 0
	178 JumpIfEqual {315}
	179 Move X0, [X8+32]
	180 Compare X0, 0
	181 JumpIfEqual {315}
	182 Move X1, X31
	183 Call Component.get_gameObject, X0
	184 Compare X0, 0
	185 JumpIfEqual {315}
	186 Move W1, W31
	187 Move X2, X31
	188 Call GameObject.SetActive, X0, X1
	189 Move W8, 2
	190 Move [X19+24], X31
	191 Move [X19+16], W8
	192 Move W0, 1
	193 Move W25, W31
	194 Move X0, [X23+80]
	195 Compare X0, 0
	196 JumpIfEqual {327}
	197 Move X20, 0x22F5000
	198 Move X20, [X20+2240]
	199 Move X1, [X20]
	200 Call InputAction.ReadValue, X0
	201 Move V9, [X19+48]
	202 Move V8, V0
	203 Move X0, X31
	204 Call Time.get_deltaTime
	205 Move X8, -20029440
	206 Move V1, [X8+780]
	207 Move S2, 0.5
	208 NotImplemented "Instruction FCMP not yet implemented."
	209 NotImplemented "Instruction CSET not yet implemented."
	210 Or W8, W25, W8
	211 Multiply S2, S0, S1
	212 NotImplemented "Instruction FNMUL not yet implemented."
	213 And W31, W8, 1
	214 NotImplemented "Instruction FCSEL not yet implemented."
	215 Move S1, 1
	216 Add S0, S9, S0
	217 Move S2, W31
	218 NotImplemented "Instruction FMIN not yet implemented."
	219 NotImplemented "Instruction FCMP not yet implemented."
	220 NotImplemented "Instruction FCSEL not yet implemented."
	221 Move [X19+48], S0
	222 Move X21, 0x22F4000
	223 Move X21, [X21+344]
	224 Move X0, [X21]
	225 Move W8, [X0+224]
	226 Compare W8, 0
	227 JumpIfNotEqual {230}
	228 Call 0x1C17DFC
	229 Move X0, [X21]
	230 Move X8, [X0+184]
	231 Add X0, X23, 88
	232 Move X1, [X8+136]
	233 Add X2, X31, 16
	234 Move X3, X31
	235 Call InputDevice.TryGetFeatureValue, X0, X1, X2
	236 Move W8, W0
	237 Move X0, [X21]
	238 Move V0, [X31+20]
	239 Move S1, W31
	240 And W31, W8, 1
	241 Move W9, [X0+224]
	242 Add S0, S0, S1
	243 NotImplemented "Instruction FCSEL not yet implemented."
	244 Compare W9, 0
	245 JumpIfNotEqual {248}
	246 Call 0x1C17DFC
	247 Move X0, [X21]
	248 Move X8, [X0+184]
	249 Add X0, X23, 104
	250 Move X1, [X8+136]
	251 Add X2, X31, 8
	252 Move X3, X31
	253 Call InputDevice.TryGetFeatureValue, X0, X1, X2
	254 Move V0, [X31+12]
	255 Move X8, [X23+72]
	256 And W31, W0, 1
	257 Add S0, S8, S0
	258 NotImplemented "Instruction FCSEL not yet implemented."
	259 Compare X8, 0
	260 JumpIfEqual {328}
	261 Move X1, [X20]
	262 Move X0, X8
	263 Call InputAction.ReadValue, X0
	264 Move X20, [X23+48]
	265 Compare X20, 0
	266 JumpIfEqual {329}
	267 Move V8, V0
	268 Move X0, X20
	269 Move X1, X31
	270 Call ScrollRect.get_verticalNormalizedPosition, X0
	271 Move V9, V0
	272 Move X0, X31
	273 Call Time.get_deltaTime
	274 Move X8, -20029440
	275 Move V1, [X8+188]
	276 Add S2, S10, S8
	277 Multiply S1, S2, S1
	278 Multiply S0, S1, S0
	279 Add S0, S9, S0
	280 Move X0, X20
	281 Move X1, X31
	282 Call ScrollRect.set_verticalNormalizedPosition, X0, V0
	283 Move V0, [X19+48]
	284 Move S1, 1
	285 NotImplemented "Instruction FMIN not yet implemented."
	286 NotImplemented "Instruction FCMP not yet implemented."
	287 Move S0, W31
	288 NotImplemented "Instruction FCSEL not yet implemented."
	289 Move [X19+48], S0
	290 Move X0, [X23+64]
	291 Compare X0, 0
	292 JumpIfEqual {330}
	293 Move X1, X31
	294 Call Image.set_fillAmount, X0, V0
	295 Move W0, 1
	296 Move [X19+24], X31
	297 Move [X19+16], W0
	298 Move X20, [X31+128]
	299 Move X19, [X31+136]
	300 Move X22, [X31+112]
	301 Move X21, [X31+120]
	302 Move X24, [X31+96]
	303 Move X23, [X31+104]
	304 Move X26, [X31+80]
	305 Move X25, [X31+88]
	306 Move X28, [X31+64]
	307 Move X27, [X31+72]
	308 Move X30, [X31+56]
	309 Move D9, [X31+40]
	310 Move D8, [X31+48]
	311 Move V10, [X31+32]
	312 Add X31, X31, 144
	313 Return X0
	314 Call 0x1C17F28
	315 Call 0x1C17F20
	316 Call 0x1C17F20
	317 Call 0x1C17F20
	318 Call 0x1C17F20
	319 Call 0x1C17F20
	320 Call 0x1C17F20
	321 Call 0x1C17F20
	322 Call 0x1C17F20
	323 Call 0x1C17F20
	324 Call 0x1C17F20
	325 Call 0x1C17F20
	326 Call 0x1C17F20
	327 Call 0x1C17F20
	328 Call 0x1C17F20
	329 Call 0x1C17F20
	330 Call 0x1C17F20
	331 Move X19, X0
	332 NotImplemented "Instruction CMP not yet implemented."
	333 Move X0, X19
	334 Call 0x3EB2AD0
	335 Move X19, X0
	336 Move X0, 0x22EF000
	337 Move X0, [X0+2000]
	338 Call 0x1C17D08
	339 Move X8, [X19]
	340 Move X1, [X8]
	341 Call 0x1C18270
	342 Move TEMP, X0
	343 And TEMP, TEMP, 1
	344 Compare TEMP, 1
	345 JumpIfNotEqual {368}
	346 Move X19, [X19]
	347 Call 0x3EB2AE0
	348 Move X0, 0x22EF000
	349 Move X0, [X0+1928]
	350 Call 0x1C17D08
	351 Move W8, [X0+224]
	352 Compare W8, 0
	353 JumpIfNotEqual {355}
	354 Call 0x1C17DFC
	355 Move X0, 0x22F5000
	356 Move X0, [X0+2256]
	357 Call 0x1C17D08
	358 Move X20, X0
	359 Move X0, 0x22F5000
	360 Move X0, [X0+2264]
	361 Call 0x1C17D08
	362 Move X21, X0
	363 Move X0, 0x22F5000
	364 Move X0, [X0+2272]
	365 Call 0x1C17D08
	366 Move X4, X0
	367 Move W5, 116
	368 Move W0, 8
	369 Call 0x3EB2AF0
	370 Move X8, [X19]
	371 Move [X0], X8
	372 Move X1, 0x20B0000
	373 Add X1, X1, 3672
	374 Move X2, X31
	375 Call 0x3EB2B00
	376 Move X19, X0
	377 Call 0x3EB2AE0
	378 Move X19, X0
	379 NotImplemented "Instruction CMP not yet implemented."
	380 Move X0, X19
	381 Call 0x3EB2AD0
	382 Move X19, X0
	383 Move X0, 0x22EF000
	384 Move X0, [X0+2000]
	385 Call 0x1C17D08
	386 Move X8, [X19]
	387 Move X1, [X8]
	388 Call 0x1C18270
	389 Move TEMP, X0
	390 And TEMP, TEMP, 1
	391 Compare TEMP, 1
	392 JumpIfNotEqual {422}
	393 Move X19, [X19]
	394 Call 0x3EB2AE0
	395 Move X0, 0x22EF000
	396 Move X0, [X0+1928]
	397 Call 0x1C17D08
	398 Move W8, [X0+224]
	399 Compare W8, 0
	400 JumpIfNotEqual {402}
	401 Call 0x1C17DFC
	402 Move X0, 0x22F5000
	403 Move X0, [X0+2256]
	404 Call 0x1C17D08
	405 Move X20, X0
	406 Move X0, 0x22F5000
	407 Move X0, [X0+2264]
	408 Call 0x1C17D08
	409 Move X21, X0
	410 Move X0, 0x22F5000
	411 Move X0, [X0+2272]
	412 Call 0x1C17D08
	413 Move X4, X0
	414 Move W5, 170
	415 Move X0, X20
	416 Move X1, X19
	417 Move X2, X31
	418 Move X3, X21
	419 Move X6, X31
	420 Call Log.Error, X0, X1, X2, X3, X4, X5
	421 Move W0, W31
	422 Move W0, 8
	423 Call 0x3EB2AF0
	424 Move X8, [X19]
	425 Move [X0], X8
	426 Move X1, 0x20B0000
	427 Add X1, X1, 3672
	428 Move X2, X31
	429 Call 0x3EB2B00
	430 Move X19, X0
	431 Call 0x3EB2AE0
	432 Move X0, X19
	433 Call 0x1D2D690
	434 Call 0x1991590

Method: SpatialSys.CommandLib.Command System.Collections.Generic.IEnumerator<SpatialSys.CommandLib.Command>.get_Current()

Disassembly:
	0x01E05AA0 B 0x1E05AA8
	0x01E05AA4 LDR X0, [X19 + 0x28]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01E05AA8 LDP X20, X19, [X31 + 0x10]
	0x01E05AAC LDP X30, X21, [X31], #0x20
	0x01E05AB0 RET
	0x01E05AB4 STP X30, X21, [X31 - 0x20]!
	0x01E05AB8 STP X20, X19, [X31 + 0x10]
	0x01E05ABC ADRP X21, 0x25D3000
	0x01E05AC0 LDRB W8, [X21 + 0xD9B]
	0x01E05AC4 MOV X20, X1
	0x01E05AC8 MOV X19, X0
	0x01E05ACC TBNZ X8, 0x0, 0x1E05AF0
	0x01E05AD0 ADRP X0, 0x22F3000
	0x01E05AD4 LDR X0, [X0 + 0x38]
	0x01E05AD8 BL 0x1C16CF4
	0x01E05ADC ADRP X0, 0x22F0000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x22EF000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x22F5000
	011 Move X0, [X0+2280]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01E05AE0 LDR X0, [X0 + 0x768]
	0x01E05AE4 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

