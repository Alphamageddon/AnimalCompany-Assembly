Type: AnimalCompany.AnimalLabCartCommands/PruchaseAndSpawnDraftAvatarCommand/<ExecuteAsync>d__0

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01D5A068 BL 0x1C16CF4
	0x01D5A06C ADRP X0, 0x239A000
	0x01D5A070 LDR X0, [X0 + 0xAC0]
	0x01D5A074 BL 0x1C16CF4
	0x01D5A078 ADRP X0, 0x2399000
	0x01D5A07C LDR X0, [X0 + 0xDC8]
	0x01D5A080 BL 0x1C16CF4
	0x01D5A084 ADRP X0, 0x239B000
	0x01D5A088 LDR X0, [X0 + 0x3B8]
	0x01D5A08C BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01D5A2F8 ADD X9, X31, 0x0

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01D5A2FC CSEL X8, X9, X8, NE
	0x01D5A300 LDR X22, [X8]
	0x01D5A304 CBZ X22, 0x1D5A414
	0x01D5A308 LDR X8, [X22 + 0x48]
	0x01D5A30C CBZ X8, 0x1D5A410
	0x01D5A310 LDR X0, [X8 + 0x50]
	0x01D5A314 BL 0x1D5D508
	0x01D5A318 TBNZ X0, 0x0, 0x1D5A1C0
	0x01D5A31C CBZ X19, 0x1D5A418
	0x01D5A320 ADRP X8, 0x239A000
	0x01D5A324 LDR X8, [X8 + 0xA90]
	0x01D5A328 LDR X2, [X8]
	0x01D5A32C MOV X0, X19
	0x01D5A330 MOV X1, X22
	0x01D5A334 BL 0x2DBEF30
	0x01D5A338 B 0x1D5A1C0
	0x01D5A33C LDR X0, [X27]
	0x01D5A340 LDR X2, [X29]
	0x01D5A344 MOV X1, X22
	0x01D5A348 MOV X3, X31
	0x01D5A34C BL 0x32274B8
	0x01D5A350 MOV X22, X0
	0x01D5A354 LDR X0, [X23]
	0x01D5A358 LDR W8, [X0 + 0xE0]
	0x01D5A35C CBNZ W8, 0x1D5A364
	0x01D5A360 BL 0x1C16DFC
	0x01D5A364 MOV X0, X22
	0x01D5A368 MOV X1, X31
	0x01D5A36C BL 0x3C0649C
	0x01D5A370 B 0x1D5A1C0
	0x01D5A374 MOV X22, X31
	0x01D5A378 CBZ X20, 0x1D5A3DC
	0x01D5A37C LDR X8, [X20]
	0x01D5A380 ADRP X10, 0x2399000
	0x01D5A384 LDRH W9, [X8 + 0x12E]
	0x01D5A388 LDR X10, [X10 + 0xE00]
	0x01D5A38C LDR X1, [X10]
	0x01D5A390 CBZ X9, 0x1D5A3B4
	0x01D5A394 LDR X10, [X8 + 0xB0]
	0x01D5A398 ADD X10, X10, 0x8
	0x01D5A39C LDUR X11, [X10 - 0x8]
	0x01D5A3A0 CMP X11, X1
	0x01D5A3A4 B.EQ 0x1D5A3C4
	0x01D5A3A8 SUBS X9, X9, 0x1
	0x01D5A3AC ADD X10, X10, 0x10
	0x01D5A3B0 B.NE 0x1D5A39C
	0x01D5A3B4 MOV X0, X20
	0x01D5A3B8 MOV W2, W31
	0x01D5A3BC BL 0x1C5C788
	0x01D5A3C0 B 0x1D5A3D0
	0x01D5A3C4 LDRSW X9, [X10]
	0x01D5A3C8 ADD X8, X8, X9, 0x4, LSL
	0x01D5A3CC ADD X0, X8, 0x138
	0x01D5A3D0 LDP X8, X1, [X0]
	0x01D5A3D4 MOV X0, X20
	0x01D5A3D8 BLR X8
	0x01D5A3DC CBNZ X22, 0x1D5A424
	0x01D5A3E0 MOV X0, X19
	0x01D5A3E4 LDP X20, X19, [X31 + 0x60]
	0x01D5A3E8 LDP X22, X21, [X31 + 0x50]
	0x01D5A3EC LDP X24, X23, [X31 + 0x40]
	0x01D5A3F0 LDP X26, X25, [X31 + 0x30]
	0x01D5A3F4 LDP X28, X27, [X31 + 0x20]
	0x01D5A3F8 LDP X29, X30, [X31 + 0x10]
	0x01D5A3FC ADD X31, X31, 0x70
	0x01D5A400 RET
	0x01D5A404 BL 0x1C16F20
	0x01D5A408 BL 0x1C16F20
	0x01D5A40C BL 0x1C16F20
	0x01D5A410 BL 0x1C16F20
	0x01D5A414 BL 0x1C16F20
	0x01D5A418 BL 0x1C16F20
	0x01D5A41C BL 0x1C16F20
	0x01D5A420 BL 0x1C16F20
	0x01D5A424 MOV X0, X22
	0x01D5A428 BL 0x1C16F18
	0x01D5A42C B 0x1D5A464
	0x01D5A430 B 0x1D5A464
	0x01D5A434 B 0x1D5A464
	0x01D5A438 B 0x1D5A464
	0x01D5A43C B 0x1D5A464
	0x01D5A440 B 0x1D5A464
	0x01D5A444 B 0x1D5A464
	0x01D5A448 B 0x1D5A464
	0x01D5A44C B 0x1D5A464
	0x01D5A450 B 0x1D5A464
	0x01D5A454 B 0x1D5A464
	0x01D5A458 B 0x1D5A464
	0x01D5A45C B 0x1D5A464
	0x01D5A460 B 0x1D5A464
	0x01D5A464 MOV X21, X0
	0x01D5A468 CMP W1, 0x1
	0x01D5A46C B.NE 0x1D5A484
	0x01D5A470 MOV X0, X21
	0x01D5A474 BL 0x3EB1AD0
	0x01D5A478 LDR X22, [X0]
	0x01D5A47C BL 0x3EB1AE0
	0x01D5A480 B 0x1D5A378
	0x01D5A484 MOV X22, X31
	0x01D5A488 B 0x1D5A490
	0x01D5A48C MOV X21, X0
	0x01D5A490 CBZ X20, 0x1D5A4F4
	0x01D5A494 LDR X8, [X20]
	0x01D5A498 ADRP X10, 0x2399000
	0x01D5A49C LDRH W9, [X8 + 0x12E]
	0x01D5A4A0 LDR X10, [X10 + 0xE00]
	0x01D5A4A4 LDR X1, [X10]
	0x01D5A4A8 CBZ X9, 0x1D5A4CC
	0x01D5A4AC LDR X10, [X8 + 0xB0]
	0x01D5A4B0 ADD X10, X10, 0x8
	0x01D5A4B4 LDUR X11, [X10 - 0x8]
	0x01D5A4B8 CMP X11, X1
	0x01D5A4BC B.EQ 0x1D5A4DC
	0x01D5A4C0 SUBS X9, X9, 0x1
	0x01D5A4C4 ADD X10, X10, 0x10
	0x01D5A4C8 B.NE 0x1D5A4B4
	0x01D5A4CC MOV X0, X20
	0x01D5A4D0 MOV W2, W31
	0x01D5A4D4 BL 0x1C5C788
	0x01D5A4D8 B 0x1D5A4E8
	0x01D5A4DC LDRSW X9, [X10]
	0x01D5A4E0 ADD X8, X8, X9, 0x4, LSL
	0x01D5A4E4 ADD X0, X8, 0x138
	0x01D5A4E8 LDP X8, X1, [X0]
	0x01D5A4EC MOV X0, X20
	0x01D5A4F0 BLR X8
	0x01D5A4F4 CBNZ X22, 0x1D5A500
	0x01D5A4F8 MOV X0, X21
	0x01D5A4FC BL 0x1D2C690
	0x01D5A500 MOV X0, X22
	0x01D5A504 BL 0x1C16F18
	0x01D5A508 BL 0x1990590
	0x01D5A50C SUB X31, X31, 0x40
	0x01D5A510 STP X30, X21, [X31 + 0x20]
	0x01D5A514 STP X20, X19, [X31 + 0x30]
	0x01D5A518 ADRP X20, 0x267E000
	0x01D5A51C LDRB W8, [X20 + 0x830]
	0x01D5A520 MOV X19, X0
	0x01D5A524 TBNZ X8, 0x0, 0x1D5A56C
	0x01D5A528 ADRP X0, 0x239A000
	0x01D5A52C LDR X0, [X0 + 0xA70]
	0x01D5A530 BL 0x1C16CF4
	0x01D5A534 ADRP X0, 0x239A000
	0x01D5A538 LDR X0, [X0 + 0xA78]
	0x01D5A53C BL 0x1C16CF4
	0x01D5A540 ADRP X0, 0x239A000
	0x01D5A544 LDR X0, [X0 + 0xA80]
	0x01D5A548 BL 0x1C16CF4
	0x01D5A54C ADRP X0, 0x239A000
	0x01D5A550 LDR X0, [X0 + 0xA98]
	0x01D5A554 BL 0x1C16CF4
	0x01D5A558 ADRP X0, 0x2399000
	0x01D5A55C LDR X0, [X0 + 0xDC8]
	0x01D5A560 BL 0x1C16CF4
	0x01D5A564 MOVZ W8, 0x1
	0x01D5A568 STRB W8, [X20 + 0x830]
	0x01D5A56C STP X31, X31, [X31 + 0x8]
	0x01D5A570 STR X31, [X31 + 0x18]
	0x01D5A574 CBZ X19, 0x1D5A604
	0x01D5A578 ADRP X8, 0x239A000
	0x01D5A57C LDR X8, [X8 + 0xA98]
	0x01D5A580 ADRP X21, 0x239A000
	0x01D5A584 ADRP X20, 0x239A000
	0x01D5A588 MOV X0, X19
	0x01D5A58C LDR X1, [X8]
	0x01D5A590 LDR X21, [X21 + 0xA78]
	0x01D5A594 LDR X20, [X20 + 0xA70]
	0x01D5A598 ADD X8, X31, 0x8
	0x01D5A59C BL 0x2DBE924
	0x01D5A5A0 LDR X1, [X21]
	0x01D5A5A4 ADD X0, X31, 0x8
	0x01D5A5A8 BL 0x2BC3C64
	0x01D5A5AC TBZ X0, 0x0, 0x1D5A5D4
	0x01D5A5B0 LDR X8, [X31 + 0x18]
	0x01D5A5B4 CBZ X8, 0x1D5A5FC
	0x01D5A5B8 LDR X8, [X8 + 0x48]
	0x01D5A5BC CBZ X8, 0x1D5A600
	0x01D5A5C0 LDR X0, [X8 + 0x50]
	0x01D5A5C4 BL 0x1D5B090
	0x01D5A5C8 TBZ X0, 0x0, 0x1D5A5A0
	0x01D5A5CC MOVZ W19, 0x4
	0x01D5A5D0 B 0x1D5A5D8
	0x01D5A5D4 MOVZ W19, 0x5
	0x01D5A5D8 LDR X1, [X20]
	0x01D5A5DC ADD X0, X31, 0x8
	0x01D5A5E0 BL 0x2BC3C60
	0x01D5A5E4 CMP W19, 0x4
	0x01D5A5E8 LDP X20, X19, [X31 + 0x30]
	0x01D5A5EC LDP X30, X21, [X31 + 0x20]
	0x01D5A5F0 CSET W0, NE
	0x01D5A5F4 ADD X31, X31, 0x40
	0x01D5A5F8 RET
	0x01D5A5FC BL 0x1C16F20
	0x01D5A600 BL 0x1C16F20
	0x01D5A604 BL 0x1C16F20
	0x01D5A608 B 0x1D5A614
	0x01D5A60C B 0x1D5A614
	0x01D5A610 B 0x1D5A614
	0x01D5A614 MOV X19, X0
	0x01D5A618 CMP W1, 0x1
	0x01D5A61C B.NE 0x1D5A650
	0x01D5A620 MOV X0, X19
	0x01D5A624 BL 0x3EB1AD0
	0x01D5A628 LDR X20, [X0]
	0x01D5A62C BL 0x3EB1AE0
	0x01D5A630 ADRP X8, 0x239A000
	0x01D5A634 LDR X8, [X8 + 0xA70]
	0x01D5A638 ADD X0, X31, 0x8
	0x01D5A63C LDR X1, [X8]
	0x01D5A640 BL 0x2BC3C60
	0x01D5A644 CBNZ X20, 0x1D5A658
	0x01D5A648 MOV W19, W31
	0x01D5A64C B 0x1D5A5E4
	0x01D5A650 MOV X20, X31
	0x01D5A654 B 0x1D5A664
	0x01D5A658 MOV X0, X20
	0x01D5A65C BL 0x1C16F18
	0x01D5A660 MOV X19, X0
	0x01D5A664 ADRP X8, 0x239A000
	0x01D5A668 LDR X8, [X8 + 0xA70]
	0x01D5A66C LDR X1, [X8]
	0x01D5A670 ADD X0, X31, 0x8
	0x01D5A674 BL 0x2BC3C60
	0x01D5A678 CBNZ X20, 0x1D5A684
	0x01D5A67C MOV X0, X19
	0x01D5A680 BL 0x1D2C690
	0x01D5A684 MOV X0, X20
	0x01D5A688 BL 0x1C16F18
	0x01D5A68C BL 0x1990590
	0x01D5A690 LDR X0, [X0 + 0x18]
	0x01D5A694 RET
	0x01D5A698 STP X30, X19, [X31 - 0x10]!
	0x01D5A69C ADRP X0, 0x2399000
	0x01D5A6A0 LDR X0, [X0 + 0xB40]
	0x01D5A6A4 BL 0x1C16D08
	0x01D5A6A8 BL 0x1C16F10
	0x01D5A6AC MOV X1, X31
	0x01D5A6B0 MOV X19, X0
	0x01D5A6B4 BL 0x3380310
	0x01D5A6B8 ADRP X0, 0x239B000
	0x01D5A6BC LDR X0, [X0 + 0x3C8]
	0x01D5A6C0 BL 0x1C16D08
	0x01D5A6C4 MOV X1, X0
	0x01D5A6C8 MOV X0, X19
	0x01D5A6CC BL 0x1C16DEC
	0x01D5A6D0 LDR X0, [X0 + 0x18]
	0x01D5A6D4 RET
	0x01D5A6D8 STP X30, X19, [X31 - 0x10]!
	0x01D5A6DC MOV X19, X0
	0x01D5A6E0 LDR X0, [X0 + 0x20]
	0x01D5A6E4 TBZ X1, 0x0, 0x1D5A71C
	0x01D5A6E8 CBZ X0, 0x1D5A75C
	0x01D5A6EC LDR X8, [X0]
	0x01D5A6F0 LDP S2, S3, [X19 + 0x48]
	0x01D5A6F4 LDP S0, S1, [X19 + 0x40]
	0x01D5A6F8 LDR X9, [X8 + 0x2A8]
	0x01D5A6FC LDR X1, [X8 + 0x2B0]
	0x01D5A700 BLR X9
	0x01D5A704 LDR X0, [X19 + 0x28]
	0x01D5A708 CBZ X0, 0x1D5A75C
	0x01D5A70C LDR X8, [X0]
	0x01D5A710 LDP S2, S3, [X19 + 0x48]
	0x01D5A714 LDP S0, S1, [X19 + 0x40]
	0x01D5A718 B 0x1D5A74C
	0x01D5A71C CBZ X0, 0x1D5A75C
	0x01D5A720 LDR X8, [X0]
	0x01D5A724 LDP S2, S3, [X19 + 0x38]
	0x01D5A728 LDP S0, S1, [X19 + 0x30]
	0x01D5A72C LDR X9, [X8 + 0x2A8]
	0x01D5A730 LDR X1, [X8 + 0x2B0]
	0x01D5A734 BLR X9
	0x01D5A738 LDR X0, [X19 + 0x28]
	0x01D5A73C CBZ X0, 0x1D5A75C
	0x01D5A740 LDR X8, [X0]
	0x01D5A744 LDP S2, S3, [X19 + 0x38]
	0x01D5A748 LDP S0, S1, [X19 + 0x30]
	0x01D5A74C LDR X2, [X8 + 0x2A8]
	0x01D5A750 LDR X1, [X8 + 0x2B0]
	0x01D5A754 LDP X30, X19, [X31], #0x10
	0x01D5A758 BR X2
	0x01D5A75C BL 0x1C16F20
	0x01D5A760 MOV X1, X31
	0x01D5A764 B 0x3C36C30
	0x01D5A768 STR X30, [X31 - 0x40]!
	0x01D5A76C STP X24, X23, [X31 + 0x10]
	0x01D5A770 STP X22, X21, [X31 + 0x20]
	0x01D5A774 STP X20, X19, [X31 + 0x30]
	0x01D5A778 ADRP X20, 0x267E000
	0x01D5A77C LDRB W8, [X20 + 0x804]
	0x01D5A780 MOV X19, X0
	0x01D5A784 TBNZ X8, 0x0, 0x1D5A7B4
	0x01D5A788 ADRP X0, 0x239A000
	0x01D5A78C LDR X0, [X0 + 0xE70]
	0x01D5A790 BL 0x1C16CF4
	0x01D5A794 ADRP X0, 0x239B000
	0x01D5A798 LDR X0, [X0 + 0x3D0]
	0x01D5A79C BL 0x1C16CF4
	0x01D5A7A0 ADRP X0, 0x239B000
	0x01D5A7A4 LDR X0, [X0 + 0x3D8]
	0x01D5A7A8 BL 0x1C16CF4
	0x01D5A7AC MOVZ W8, 0x1
	0x01D5A7B0 STRB W8, [X20 + 0x804]
	0x01D5A7B4 LDR X24, [X19 + 0x48]
	0x01D5A7B8 CBZ X24, 0x1D5A90C
	0x01D5A7BC ADRP X22, 0x239A000
	0x01D5A7C0 LDR X22, [X22 + 0xE70]
	0x01D5A7C4 ADRP X23, 0x239B000
	0x01D5A7C8 LDR X20, [X24 + 0x20]
	0x01D5A7CC LDR X0, [X22]
	0x01D5A7D0 LDR X23, [X23 + 0x3D0]
	0x01D5A7D4 BL 0x1C16F10
	0x01D5A7D8 LDR X2, [X23]
	0x01D5A7DC MOV X1, X19
	0x01D5A7E0 MOV X3, X31
	0x01D5A7E4 MOV X21, X0
	0x01D5A7E8 BL 0x3314368
	0x01D5A7EC MOV X0, X20
	0x01D5A7F0 MOV X1, X21
	0x01D5A7F4 MOV X2, X31
	0x01D5A7F8 BL 0x33C0DE4
	0x01D5A7FC LDR X1, [X22]
	0x01D5A800 CBZ X0, 0x1D5A824
	0x01D5A804 LDR X8, [X0]
	0x01D5A808 CMP X8, X1
	0x01D5A80C B.NE 0x1D5A8F0
	0x01D5A810 STR X0, [X24 + 0x20]
	0x01D5A814 LDR X8, [X0]
	0x01D5A818 CMP X8, X1
	0x01D5A81C B.EQ 0x1D5A828
	0x01D5A820 B 0x1D5A8F0
	0x01D5A824 STR X0, [X24 + 0x20]
	0x01D5A828 LDR X24, [X19 + 0x50]
	0x01D5A82C CBZ X24, 0x1D5A90C
	0x01D5A830 LDR X20, [X24 + 0x20]
	0x01D5A834 MOV X0, X1
	0x01D5A838 BL 0x1C16F10
	0x01D5A83C LDR X2, [X23]
	0x01D5A840 MOV X1, X19
	0x01D5A844 MOV X3, X31
	0x01D5A848 MOV X21, X0
	0x01D5A84C BL 0x3314368
	0x01D5A850 MOV X0, X20
	0x01D5A854 MOV X1, X21
	0x01D5A858 MOV X2, X31
	0x01D5A85C BL 0x33C0DE4
	0x01D5A860 LDR X1, [X22]
	0x01D5A864 CBZ X0, 0x1D5A888
	0x01D5A868 LDR X8, [X0]
	0x01D5A86C CMP X8, X1
	0x01D5A870 B.NE 0x1D5A8F0
	0x01D5A874 STR X0, [X24 + 0x20]
	0x01D5A878 LDR X8, [X0]
	0x01D5A87C CMP X8, X1
	0x01D5A880 B.EQ 0x1D5A88C
	0x01D5A884 B 0x1D5A8F0
	0x01D5A888 STR X0, [X24 + 0x20]
	0x01D5A88C LDR X23, [X19 + 0x58]
	0x01D5A890 CBZ X23, 0x1D5A90C
	0x01D5A894 ADRP X21, 0x239B000
	0x01D5A898 LDR X20, [X23 + 0x20]
	0x01D5A89C LDR X21, [X21 + 0x3D8]
	0x01D5A8A0 MOV X0, X1
	0x01D5A8A4 BL 0x1C16F10
	0x01D5A8A8 LDR X2, [X21]
	0x01D5A8AC MOV X1, X19
	0x01D5A8B0 MOV X3, X31
	0x01D5A8B4 MOV X21, X0
	0x01D5A8B8 BL 0x3314368
	0x01D5A8BC MOV X0, X20
	0x01D5A8C0 MOV X1, X21
	0x01D5A8C4 MOV X2, X31
	0x01D5A8C8 BL 0x33C0DE4
	0x01D5A8CC CBZ X0, 0x1D5A8F4
	0x01D5A8D0 LDR X1, [X22]
	0x01D5A8D4 LDR X8, [X0]
	0x01D5A8D8 CMP X8, X1
	0x01D5A8DC B.NE 0x1D5A8F0
	0x01D5A8E0 STR X0, [X23 + 0x20]
	0x01D5A8E4 LDR X8, [X0]
	0x01D5A8E8 CMP X8, X1
	0x01D5A8EC B.EQ 0x1D5A8F8
	0x01D5A8F0 BL 0x1C171E0
	0x01D5A8F4 STR X0, [X23 + 0x20]
	0x01D5A8F8 LDP X20, X19, [X31 + 0x30]
	0x01D5A8FC LDP X22, X21, [X31 + 0x20]
	0x01D5A900 LDP X24, X23, [X31 + 0x10]
	0x01D5A904 LDR X30, [X31], #0x40
	0x01D5A908 RET
	0x01D5A90C BL 0x1C16F20
	0x01D5A910 STR X30, [X31 - 0x40]!
	0x01D5A914 STP X24, X23, [X31 + 0x10]
	0x01D5A918 STP X22, X21, [X31 + 0x20]
	0x01D5A91C STP X20, X19, [X31 + 0x30]
	0x01D5A920 ADRP X23, 0x267E000
	0x01D5A924 ADRP X24, 0x2399000
	0x01D5A928 ADRP X19, 0x239B000
	0x01D5A92C ADRP X22, 0x2399000
	0x01D5A930 ADRP X21, 0x2399000
	0x01D5A934 LDRB W8, [X23 + 0x805]
	0x01D5A938 LDR X24, [X24 + 0xDA0]
	0x01D5A93C LDR X19, [X19 + 0x3E0]
	0x01D5A940 LDR X22, [X22 + 0xDB0]
	0x01D5A944 LDR X21, [X21 + 0x648]
	0x01D5A948 MOV X20, X0
	0x01D5A94C TBNZ X8, 0x0, 0x1D5A988
	0x01D5A950 ADRP X0, 0x239B000
	0x01D5A954 LDR X0, [X0 + 0x3E0]
	0x01D5A958 BL 0x1C16CF4
	0x01D5A95C ADRP X0, 0x2399000
	0x01D5A960 LDR X0, [X0 + 0x648]
	0x01D5A964 BL 0x1C16CF4
	0x01D5A968 ADRP X0, 0x2399000
	0x01D5A96C LDR X0, [X0 + 0xDB0]
	0x01D5A970 BL 0x1C16CF4
	0x01D5A974 ADRP X0, 0x2399000
	0x01D5A978 LDR X0, [X0 + 0xDA0]
	0x01D5A97C BL 0x1C16CF4
	0x01D5A980 MOVZ W8, 0x1
	0x01D5A984 STRB W8, [X23 + 0x805]
	0x01D5A988 LDR X0, [X24]
	0x01D5A98C BL 0x1C16F10
	0x01D5A990 LDR X2, [X19]
	0x01D5A994 MOV X1, X20
	0x01D5A998 MOV X3, X31
	0x01D5A99C MOV X19, X0
	0x01D5A9A0 BL 0x35C52F0
	0x01D5A9A4 LDR X0, [X22]
	0x01D5A9A8 MOVZ W1, 0x1
	0x01D5A9AC BL 0x1C16D6C
	0x01D5A9B0 LDR X8, [X21]
	0x01D5A9B4 MOV X20, X0
	0x01D5A9B8 LDR W9, [X8 + 0xE0]
	0x01D5A9BC CBNZ W9, 0x1D5A9C8
	0x01D5A9C0 MOV X0, X8
	0x01D5A9C4 BL 0x1C16DFC
	0x01D5A9C8 ADRP X22, 0x267E000
	0x01D5A9CC LDRB W8, [X22 + 0x787]
	0x01D5A9D0 CBNZ W8, 0x1D5A9E8
	0x01D5A9D4 ADRP X0, 0x2399000
	0x01D5A9D8 LDR X0, [X0 + 0x648]
	0x01D5A9DC BL 0x1C16CF4
	0x01D5A9E0 MOVZ W8, 0x1
	0x01D5A9E4 STRB W8, [X22 + 0x787]
	0x01D5A9E8 LDR X0, [X21]
	0x01D5A9EC LDR W8, [X0 + 0xE0]
	0x01D5A9F0 CBNZ W8, 0x1D5A9FC
	0x01D5A9F4 BL 0x1C16DFC
	0x01D5A9F8 LDR X0, [X21]
	0x01D5A9FC LDR X8, [X0 + 0xB8]
	0x01D5AA00 LDR X8, [X8]
	0x01D5AA04 CBZ X8, 0x1D5AA5C
	0x01D5AA08 LDR X8, [X8 + 0xB8]
	0x01D5AA0C CBZ X8, 0x1D5AA5C
	0x01D5AA10 CBZ X20, 0x1D5AA5C
	0x01D5AA14 LDR X21, [X8 + 0x80]
	0x01D5AA18 CBZ X21, 0x1D5AA30
	0x01D5AA1C LDR X8, [X20]
	0x01D5AA20 MOV X0, X21
	0x01D5AA24 LDR X1, [X8 + 0x40]
	0x01D5AA28 BL 0x1C16E00
	0x01D5AA2C CBZ X0, 0x1D5AA64
	0x01D5AA30 LDR W8, [X20 + 0x18]
	0x01D5AA34 CBZ W8, 0x1D5AA60
	0x01D5AA38 STR X21, [X20 + 0x20]
	0x01D5AA3C MOV X0, X19
	0x01D5AA40 MOV X1, X20
	0x01D5AA44 LDP X20, X19, [X31 + 0x30]
	0x01D5AA48 LDP X22, X21, [X31 + 0x20]
	0x01D5AA4C LDP X24, X23, [X31 + 0x10]
	0x01D5AA50 MOV X2, X31
	0x01D5AA54 LDR X30, [X31], #0x40
	0x01D5AA58 B 0x1D363F0
	0x01D5AA5C BL 0x1C16F20
	0x01D5AA60 BL 0x1C16F28
	0x01D5AA64 BL 0x1C16F44
	0x01D5AA68 MOV X1, X31
	0x01D5AA6C BL 0x1C16DEC
	0x01D5AA70 STP X30, X23, [X31 - 0x30]!
	0x01D5AA74 STP X22, X21, [X31 + 0x10]
	0x01D5AA78 STP X20, X19, [X31 + 0x20]
	0x01D5AA7C ADRP X22, 0x267E000
	0x01D5AA80 ADRP X23, 0x2399000
	0x01D5AA84 ADRP X20, 0x239B000
	0x01D5AA88 ADRP X21, 0x2399000
	0x01D5AA8C LDRB W8, [X22 + 0x806]
	0x01D5AA90 LDR X23, [X23 + 0xDA0]
	0x01D5AA94 LDR X20, [X20 + 0x3E0]
	0x01D5AA98 LDR X21, [X21 + 0x648]
	0x01D5AA9C MOV X19, X0
	0x01D5AAA0 TBNZ X8, 0x0, 0x1D5AAD0
	0x01D5AAA4 ADRP X0, 0x239B000
	0x01D5AAA8 LDR X0, [X0 + 0x3E0]
	0x01D5AAAC BL 0x1C16CF4
	0x01D5AAB0 ADRP X0, 0x2399000
	0x01D5AAB4 LDR X0, [X0 + 0x648]
	0x01D5AAB8 BL 0x1C16CF4
	0x01D5AABC ADRP X0, 0x2399000
	0x01D5AAC0 LDR X0, [X0 + 0xDA0]
	0x01D5AAC4 BL 0x1C16CF4
	0x01D5AAC8 MOVZ W8, 0x1
	0x01D5AACC STRB W8, [X22 + 0x806]
	0x01D5AAD0 LDR X0, [X23]
	0x01D5AAD4 BL 0x1C16F10
	0x01D5AAD8 LDR X2, [X20]
	0x01D5AADC MOV X1, X19
	0x01D5AAE0 MOV X3, X31
	0x01D5AAE4 MOV X20, X0
	0x01D5AAE8 BL 0x35C52F0
	0x01D5AAEC LDR X0, [X21]
	0x01D5AAF0 LDR W8, [X0 + 0xE0]
	0x01D5AAF4 CBNZ W8, 0x1D5AAFC
	0x01D5AAF8 BL 0x1C16DFC
	0x01D5AAFC MOV X0, X20
	0x01D5AB00 LDP X20, X19, [X31 + 0x20]
	0x01D5AB04 LDP X22, X21, [X31 + 0x10]
	0x01D5AB08 MOV X1, X31
	0x01D5AB0C LDP X30, X23, [X31], #0x30
	0x01D5AB10 B 0x1D36978
	0x01D5AB14 B 0x1D5AB18
	0x01D5AB18 SUB X31, X31, 0x70
	0x01D5AB1C STP X29, X30, [X31 + 0x10]
	0x01D5AB20 STP X28, X27, [X31 + 0x20]
	0x01D5AB24 STP X26, X25, [X31 + 0x30]
	0x01D5AB28 STP X24, X23, [X31 + 0x40]
	0x01D5AB2C STP X22, X21, [X31 + 0x50]
	0x01D5AB30 STP X20, X19, [X31 + 0x60]
	0x01D5AB34 ADRP X20, 0x267E000
	0x01D5AB38 LDRB W8, [X20 + 0x807]
	0x01D5AB3C MOV X19, X0
	0x01D5AB40 TBNZ X8, 0x0, 0x1D5ABE8
	0x01D5AB44 ADRP X0, 0x2399000
	0x01D5AB48 LDR X0, [X0 + 0x648]
	0x01D5AB4C BL 0x1C16CF4
	0x01D5AB50 ADRP X0, 0x239B000
	0x01D5AB54 LDR X0, [X0 + 0x3E8]
	0x01D5AB58 BL 0x1C16CF4
	0x01D5AB5C ADRP X0, 0x239B000
	0x01D5AB60 LDR X0, [X0 + 0x2E8]
	0x01D5AB64 BL 0x1C16CF4
	0x01D5AB68 ADRP X0, 0x239B000
	0x01D5AB6C LDR X0, [X0 + 0x3F0]
	0x01D5AB70 BL 0x1C16CF4
	0x01D5AB74 ADRP X0, 0x239B000
	0x01D5AB78 LDR X0, [X0 + 0x3F8]
	0x01D5AB7C BL 0x1C16CF4
	0x01D5AB80 ADRP X0, 0x239B000
	0x01D5AB84 LDR X0, [X0 + 0x400]
	0x01D5AB88 BL 0x1C16CF4
	0x01D5AB8C ADRP X0, 0x239B000
	0x01D5AB90 LDR X0, [X0 + 0x408]
	0x01D5AB94 BL 0x1C16CF4
	0x01D5AB98 ADRP X0, 0x2399000
	0x01D5AB9C LDR X0, [X0 + 0x598]
	0x01D5ABA0 BL 0x1C16CF4
	0x01D5ABA4 ADRP X0, 0x2399000
	0x01D5ABA8 LDR X0, [X0 + 0xDC8]
	0x01D5ABAC BL 0x1C16CF4
	0x01D5ABB0 ADRP X0, 0x239A000
	0x01D5ABB4 LDR X0, [X0 + 0xB50]
	0x01D5ABB8 BL 0x1C16CF4
	0x01D5ABBC ADRP X0, 0x239B000
	0x01D5ABC0 LDR X0, [X0 + 0x410]
	0x01D5ABC4 BL 0x1C16CF4
	0x01D5ABC8 ADRP X0, 0x239B000
	0x01D5ABCC LDR X0, [X0 + 0x418]
	0x01D5ABD0 BL 0x1C16CF4
	0x01D5ABD4 ADRP X0, 0x239B000
	0x01D5ABD8 LDR X0, [X0 + 0x420]
	0x01D5ABDC BL 0x1C16CF4
	0x01D5ABE0 MOVZ W8, 0x1
	0x01D5ABE4 STRB W8, [X20 + 0x807]
	0x01D5ABE8 STR W31, [X31 + 0xC]
	0x01D5ABEC LDR X9, [X19 + 0x88]
	0x01D5ABF0 CBZ X9, 0x1D5B070
	0x01D5ABF4 LDR X8, [X19 + 0x80]
	0x01D5ABF8 CBZ X8, 0x1D5B070
	0x01D5ABFC ADRP X22, 0x2399000
	0x01D5AC00 ADRP X23, 0x239B000
	0x01D5AC04 ADRP X26, 0x239B000
	0x01D5AC08 ADRP X27, 0x239B000
	0x01D5AC0C ADRP X28, 0x239B000
	0x01D5AC10 ADRP X24, 0x239B000
	0x01D5AC14 LDR X22, [X22 + 0x598]
	0x01D5AC18 LDR X23, [X23 + 0x408]
	0x01D5AC1C LDR X26, [X26 + 0x3F0]
	0x01D5AC20 LDR X27, [X27 + 0x400]
	0x01D5AC24 LDR X28, [X28 + 0x3E8]
	0x01D5AC28 LDR X24, [X24 + 0x410]
	0x01D5AC2C LDR W9, [X9 + 0x18]
	0x01D5AC30 ADRP X25, 0x239B000
	0x01D5AC34 LDR X25, [X25 + 0x418]
	0x01D5AC38 SUB W29, W9, 0x1
	0x01D5AC3C LDR W8, [X8 + 0x20]
	0x01D5AC40 ADD W29, W29, 0x1
	0x01D5AC44 CMP W29, W8
	0x01D5AC48 B.GE 0x1D5ACD8
	0x01D5AC4C LDR X0, [X22]
	0x01D5AC50 LDP X21, X20, [X19 + 0x38]
	0x01D5AC54 LDR W8, [X0 + 0xE0]
	0x01D5AC58 CBNZ W8, 0x1D5AC60
	0x01D5AC5C BL 0x1C16DFC
	0x01D5AC60 LDR X2, [X23]
	0x01D5AC64 MOV X0, X21
	0x01D5AC68 MOV X1, X20
	0x01D5AC6C BL 0x222D488
	0x01D5AC70 LDR X8, [X19 + 0x88]
	0x01D5AC74 CBZ X8, 0x1D5B070
	0x01D5AC78 LDR W11, [X8 + 0x1C]
	0x01D5AC7C LDR X9, [X8 + 0x10]
	0x01D5AC80 LDR X10, [X26]
	0x01D5AC84 ADD W11, W11, 0x1
	0x01D5AC88 STR W11, [X8 + 0x1C]
	0x01D5AC8C CBZ X9, 0x1D5B070
	0x01D5AC90 LDRSW X11, [X8 + 0x18]
	0x01D5AC94 LDR W12, [X9 + 0x18]
	0x01D5AC98 MOV X1, X0
	0x01D5AC9C CMP W11, W12
	0x01D5ACA0 B.CS 0x1D5ACB8
	0x01D5ACA4 ADD W10, W11, 0x1
	0x01D5ACA8 ADD X9, X9, X11, 0x3, LSL
	0x01D5ACAC STR W10, [X8 + 0x18]
	0x01D5ACB0 STR X1, [X9 + 0x20]
	0x01D5ACB4 B 0x1D5ACCC
	0x01D5ACB8 LDR X9, [X10 + 0x20]
	0x01D5ACBC MOV X0, X8
	0x01D5ACC0 LDR X9, [X9 + 0xC0]
	0x01D5ACC4 LDR X2, [X9 + 0x70]
	0x01D5ACC8 BL 0x301BF90
	0x01D5ACCC LDR X8, [X19 + 0x80]
	0x01D5ACD0 CBNZ X8, 0x1D5AC3C
	0x01D5ACD4 B 0x1D5B070
	0x01D5ACD8 MOV X20, X19
	0x01D5ACDC STR W31, [X20 + 0x78]!
	0x01D5ACE0 ADRP X29, 0x239B000
	0x01D5ACE4 LDR X0, [X20 + 0x10]
	0x01D5ACE8 LDR X29, [X29 + 0x420]
	0x01D5ACEC CBZ X0, 0x1D5B070
	0x01D5ACF0 MOV W26, W31
	0x01D5ACF4 MOV W21, W31
	0x01D5ACF8 LDR W8, [X0 + 0x18]
	0x01D5ACFC CMP W21, W8
	0x01D5AD00 B.GE 0x1D5AEB0
	0x01D5AD04 LDR X8, [X19 + 0x80]
	0x01D5AD08 CBZ X8, 0x1D5B070
	0x01D5AD0C LDR X2, [X27]
	0x01D5AD10 LDR W22, [X8 + 0x20]
	0x01D5AD14 MOV W1, W21
	0x01D5AD18 BL 0x301BCCC
	0x01D5AD1C CBZ X0, 0x1D5B070
	0x01D5AD20 MOV X1, X31
	0x01D5AD24 BL 0x3C32ECC
	0x01D5AD28 CBZ X0, 0x1D5B070
	0x01D5AD2C CMP W21, W22
	0x01D5AD30 B.GE 0x1D5ADF8
	0x01D5AD34 MOVZ W1, 0x1
	0x01D5AD38 MOV X2, X31
	0x01D5AD3C BL 0x3C357B4
	0x01D5AD40 LDR X0, [X19 + 0x80]
	0x01D5AD44 LDR X2, [X28]
	0x01D5AD48 MOV W1, W21
	0x01D5AD4C BL 0x21C0AA4
	0x01D5AD50 CBZ X0, 0x1D5B070
	0x01D5AD54 MOV X22, X0
	0x01D5AD58 LDR X0, [X0 + 0x70]
	0x01D5AD5C LDR X1, [X24]
	0x01D5AD60 LDR W23, [X19 + 0x78]
	0x01D5AD64 BL 0x26581F4
	0x01D5AD68 LDR X8, [X19 + 0x88]
	0x01D5AD6C ADD W9, W0, W23
	0x01D5AD70 STR W9, [X19 + 0x78]
	0x01D5AD74 CBZ X8, 0x1D5B070
	0x01D5AD78 LDR X2, [X27]
	0x01D5AD7C MOV X0, X8
	0x01D5AD80 MOV W1, W21
	0x01D5AD84 BL 0x301BCCC
	0x01D5AD88 CBZ X0, 0x1D5B070
	0x01D5AD8C LDR X8, [X22 + 0x50]
	0x01D5AD90 CBZ X8, 0x1D5B070
	0x01D5AD94 LDR X0, [X0 + 0x20]
	0x01D5AD98 CBZ X0, 0x1D5B070
	0x01D5AD9C LDR X9, [X0]
	0x01D5ADA0 LDR X1, [X8 + 0x50]
	0x01D5ADA4 LDR X8, [X9 + 0x558]
	0x01D5ADA8 LDR X2, [X9 + 0x560]
	0x01D5ADAC BLR X8
	0x01D5ADB0 LDR X0, [X19 + 0x88]
	0x01D5ADB4 CBZ X0, 0x1D5B070
	0x01D5ADB8 LDR X2, [X27]
	0x01D5ADBC MOV W1, W21
	0x01D5ADC0 BL 0x301BCCC
	0x01D5ADC4 CBZ X0, 0x1D5B070
	0x01D5ADC8 LDR X8, [X22 + 0x70]
	0x01D5ADCC CBZ X8, 0x1D5B070
	0x01D5ADD0 LDR W8, [X8 + 0x4C]
	0x01D5ADD4 LDR X23, [X0 + 0x28]
	0x01D5ADD8 CBZ W8, 0x1D5AE08
	0x01D5ADDC ADD X0, X31, 0xC
	0x01D5ADE0 MOV X1, X31
	0x01D5ADE4 STR W8, [X31 + 0xC]
	0x01D5ADE8 BL 0x337B6E0
	0x01D5ADEC MOV X1, X0
	0x01D5ADF0 CBNZ X23, 0x1D5AE10
	0x01D5ADF4 B 0x1D5B070
	0x01D5ADF8 MOV W1, W31
	0x01D5ADFC MOV X2, X31
	0x01D5AE00 BL 0x3C357B4
	0x01D5AE04 B 0x1D5AEA0
	0x01D5AE08 LDR X1, [X29]
	0x01D5AE0C CBZ X23, 0x1D5B070
	0x01D5AE10 LDR X8, [X23]
	0x01D5AE14 MOV X0, X23
	0x01D5AE18 LDR X9, [X8 + 0x558]
	0x01D5AE1C LDR X2, [X8 + 0x560]
	0x01D5AE20 BLR X9
	0x01D5AE24 LDR X8, [X22 + 0x48]
	0x01D5AE28 CBZ X8, 0x1D5B070
	0x01D5AE2C LDR X0, [X8 + 0x50]
	0x01D5AE30 BL 0x1D5B090
	0x01D5AE34 LDR X8, [X19 + 0x88]
	0x01D5AE38 CBZ X8, 0x1D5B070
	0x01D5AE3C LDR X2, [X27]
	0x01D5AE40 MOV W22, W0
	0x01D5AE44 MOV X0, X8
	0x01D5AE48 MOV W1, W21
	0x01D5AE4C BL 0x301BCCC
	0x01D5AE50 CBZ X0, 0x1D5B070
	0x01D5AE54 TBZ X22, 0x0, 0x1D5AE98
	0x01D5AE58 LDR X0, [X0 + 0x28]
	0x01D5AE5C CBZ X0, 0x1D5B070
	0x01D5AE60 LDR X8, [X0]
	0x01D5AE64 LDR X1, [X25]
	0x01D5AE68 LDR X9, [X8 + 0x558]
	0x01D5AE6C LDR X2, [X8 + 0x560]
	0x01D5AE70 BLR X9
	0x01D5AE74 LDR X0, [X19 + 0x88]
	0x01D5AE78 CBZ X0, 0x1D5B070
	0x01D5AE7C LDR X2, [X27]
	0x01D5AE80 MOV W1, W21
	0x01D5AE84 BL 0x301BCCC
	0x01D5AE88 CBZ X0, 0x1D5B070
	0x01D5AE8C MOVZ W1, 0x1
	0x01D5AE90 MOVZ W26, 0x1
	0x01D5AE94 B 0x1D5AE9C
	0x01D5AE98 MOV W1, W31
	0x01D5AE9C BL 0x1D5A6D8
	0x01D5AEA0 LDR X0, [X19 + 0x88]
	0x01D5AEA4 ADD W21, W21, 0x1
	0x01D5AEA8 CBNZ X0, 0x1D5ACF8
	0x01D5AEAC B 0x1D5B070
	0x01D5AEB0 LDR X21, [X19 + 0x60]
	0x01D5AEB4 MOV X0, X20
	0x01D5AEB8 MOV X1, X31
	0x01D5AEBC BL 0x337B6E0
	0x01D5AEC0 CBZ X21, 0x1D5B070
	0x01D5AEC4 LDR X8, [X21]
	0x01D5AEC8 MOV X1, X0
	0x01D5AECC MOV X0, X21
	0x01D5AED0 LDR X9, [X8 + 0x558]
	0x01D5AED4 LDR X2, [X8 + 0x560]
	0x01D5AED8 BLR X9
	0x01D5AEDC ADRP X22, 0x2399000
	0x01D5AEE0 LDR X8, [X19 + 0x80]
	0x01D5AEE4 LDR X22, [X22 + 0x648]
	0x01D5AEE8 CBZ X8, 0x1D5B070
	0x01D5AEEC LDR X0, [X22]
	0x01D5AEF0 LDR W21, [X8 + 0x20]
	0x01D5AEF4 LDR W9, [X0 + 0xE0]
	0x01D5AEF8 CBNZ W9, 0x1D5AF00
	0x01D5AEFC BL 0x1C16DFC
	0x01D5AF00 ADRP X20, 0x267E000
	0x01D5AF04 LDRB W8, [X20 + 0x787]
	0x01D5AF08 CBNZ W8, 0x1D5AF20
	0x01D5AF0C ADRP X0, 0x2399000
	0x01D5AF10 LDR X0, [X0 + 0x648]
	0x01D5AF14 BL 0x1C16CF4
	0x01D5AF18 MOVZ W8, 0x1
	0x01D5AF1C STRB W8, [X20 + 0x787]
	0x01D5AF20 LDR X0, [X22]
	0x01D5AF24 LDR W8, [X0 + 0xE0]
	0x01D5AF28 CBNZ W8, 0x1D5AF34
	0x01D5AF2C BL 0x1C16DFC
	0x01D5AF30 LDR X0, [X22]
	0x01D5AF34 LDR X8, [X0 + 0xB8]
	0x01D5AF38 LDR X8, [X8]
	0x01D5AF3C CBZ X8, 0x1D5B070
	0x01D5AF40 LDR X8, [X8 + 0xB8]
	0x01D5AF44 CBZ X8, 0x1D5B070
	0x01D5AF48 LDR X8, [X8 + 0x80]
	0x01D5AF4C CBZ X8, 0x1D5B070
	0x01D5AF50 LDR X0, [X8 + 0x50]
	0x01D5AF54 LDR X1, [X24]
	0x01D5AF58 BL 0x26581F4
	0x01D5AF5C LDR X8, [X19 + 0x48]
	0x01D5AF60 CBZ X8, 0x1D5B070
	0x01D5AF64 LDR W22, [X19 + 0x78]
	0x01D5AF68 MOV W20, W0
	0x01D5AF6C CMP W21, 0x0
	0x01D5AF70 MOV X0, X8
	0x01D5AF74 MOV X1, X31
	0x01D5AF78 CSET W23, GT
	0x01D5AF7C BL 0x3C32ECC
	0x01D5AF80 ORR W8, W26, W23, 0x0
	0x01D5AF84 TBZ X8, 0x0, 0x1D5AF90
	0x01D5AF88 MOV W1, W31
	0x01D5AF8C B 0x1D5AF9C
	0x01D5AF90 LDRB W8, [X19 + 0x30]
	0x01D5AF94 CMP W8, 0x0
	0x01D5AF98 CSET W1, EQ
	0x01D5AF9C CBZ X0, 0x1D5B070
	0x01D5AFA0 MOV X2, X31
	0x01D5AFA4 BL 0x3C357B4
	0x01D5AFA8 LDR X0, [X19 + 0x50]
	0x01D5AFAC CBZ X0, 0x1D5B070
	0x01D5AFB0 CMP W20, W22
	0x01D5AFB4 CSET W23, GE
	0x01D5AFB8 CMP W21, 0x0
	0x01D5AFBC MOV X1, X31

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+32], D10
	003 Move [X31+48], D9
	004 Move [X31+56], D8
	005 Move [X31+64], X30
	006 Move [X31+72], X27
	007 Move [X31+80], X26
	008 Move [X31+88], X25
	009 Move [X31+96], X24
	010 Move [X31+104], X23
	011 Move [X31+112], X22
	012 Move [X31+120], X21
	013 Move [X31+128], X20
	014 Move [X31+136], X19
	015 Move X20, 0x267F000
	016 Move W8, [X20+2051]
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {159}
	022 Move X0, 0x239A000
	023 Move X0, [X0+2896]
	024 Call 0x1C17CF4
	025 Move X0, 0x239A000
	026 Move X0, [X0+1608]
	027 Call 0x1C17CF4
	028 Move X0, 0x239A000
	029 Move X0, [X0+2736]
	030 Call 0x1C17CF4
	031 Move X0, 0x239C000
	032 Move X0, [X0+680]
	033 Call 0x1C17CF4
	034 Move X0, 0x239C000
	035 Move X0, [X0+688]
	036 Call 0x1C17CF4
	037 Move X0, 0x239C000
	038 Move X0, [X0+696]
	039 Call 0x1C17CF4
	040 Move X0, 0x239C000
	041 Move X0, [X0+704]
	042 Call 0x1C17CF4
	043 Move X0, 0x239A000
	044 Move X0, [X0+1808]
	045 Call 0x1C17CF4
	046 Move X0, 0x239A000
	047 Move X0, [X0+1816]
	048 Call 0x1C17CF4
	049 Move X0, 0x239A000
	050 Move X0, [X0+1824]
	051 Call 0x1C17CF4
	052 Move X0, 0x239C000
	053 Move X0, [X0+712]
	054 Call 0x1C17CF4
	055 Move X0, 0x239A000
	056 Move X0, [X0+3768]
	057 Call 0x1C17CF4
	058 Move X0, 0x239C000
	059 Move X0, [X0+720]
	060 Call 0x1C17CF4
	061 Move X0, 0x239C000
	062 Move X0, [X0+728]
	063 Call 0x1C17CF4
	064 Move X0, 0x239C000
	065 Move X0, [X0+736]
	066 Call 0x1C17CF4
	067 Move X0, 0x239C000
	068 Move X0, [X0+744]
	069 Call 0x1C17CF4
	070 Move X0, 0x239A000
	071 Move X0, [X0+1928]
	072 Call 0x1C17CF4
	073 Move X0, 0x239C000
	074 Move X0, [X0+752]
	075 Call 0x1C17CF4
	076 Move X0, 0x239C000
	077 Move X0, [X0+760]
	078 Call 0x1C17CF4
	079 Move X0, 0x239C000
	080 Move X0, [X0+768]
	081 Call 0x1C17CF4
	082 Move X0, 0x239C000
	083 Move X0, [X0+776]
	084 Call 0x1C17CF4
	085 Move X0, 0x239C000
	086 Move X0, [X0+784]
	087 Call 0x1C17CF4
	088 Move X0, 0x239C000
	089 Move X0, [X0+792]
	090 Call 0x1C17CF4
	091 Move X0, 0x239C000
	092 Move X0, [X0+672]
	093 Call 0x1C17CF4
	094 Move X0, 0x239C000
	095 Move X0, [X0+800]
	096 Call 0x1C17CF4
	097 Move X0, 0x239C000
	098 Move X0, [X0+808]
	099 Call 0x1C17CF4
	100 Move X0, 0x239C000
	101 Move X0, [X0+816]
	102 Call 0x1C17CF4
	103 Move X0, 0x239C000
	104 Move X0, [X0+824]
	105 Call 0x1C17CF4
	106 Move X0, 0x239C000
	107 Move X0, [X0+832]
	108 Call 0x1C17CF4
	109 Move X0, 0x239C000
	110 Move X0, [X0+840]
	111 Call 0x1C17CF4
	112 Move X0, 0x239C000
	113 Move X0, [X0+848]
	114 Call 0x1C17CF4
	115 Move X0, 0x239C000
	116 Move X0, [X0+664]
	117 Call 0x1C17CF4
	118 Move X0, 0x239C000
	119 Move X0, [X0+856]
	120 Call 0x1C17CF4
	121 Move X0, 0x239C000
	122 Move X0, [X0+864]
	123 Call 0x1C17CF4
	124 Move X0, 0x239C000
	125 Move X0, [X0+872]
	126 Call 0x1C17CF4
	127 Move X0, 0x239B000
	128 Move X0, [X0+136]
	129 Call 0x1C17CF4
	130 Move X0, 0x239C000
	131 Move X0, [X0+880]
	132 Call 0x1C17CF4
	133 Move X0, 0x239C000
	134 Move X0, [X0+888]
	135 Call 0x1C17CF4
	136 Move X0, 0x239B000
	137 Move X0, [X0+1392]
	138 Call 0x1C17CF4
	139 Move X0, 0x239C000
	140 Move X0, [X0+896]
	141 Call 0x1C17CF4
	142 Move X0, 0x239C000
	143 Move X0, [X0+904]
	144 Call 0x1C17CF4
	145 Move X0, 0x239C000
	146 Move X0, [X0+912]
	147 Call 0x1C17CF4
	148 Move X0, 0x239C000
	149 Move X0, [X0+920]
	150 Call 0x1C17CF4
	151 Move X0, 0x239C000
	152 Move X0, [X0+928]
	153 Call 0x1C17CF4
	154 Move X0, 0x239C000
	155 Move X0, [X0+936]
	156 Call 0x1C17CF4
	157 Move W8, 1
	158 Move [X20+2051], W8
	159 Move [X31+40], X31
	160 Move [X31+24], X31
	161 Move W8, [X19+16]
	162 NotImplemented "Instruction CMP not yet implemented."
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Compare W8, 0
	165 JumpIfNotEqual {896}
	166 Move TEMP, 0
	167 Not TEMP
	168 Move W8, TEMP
	169 Move [X19+16], W8
	170 Move X8, 0x239C000
	171 Move X8, [X8+832]
	172 Move X0, [X8]
	173 Call 0x1C17F10
	174 Move X1, X31
	175 Move X20, X0
	176 Call Object..ctor, X0
	177 Move [X19+32], X20
	178 Move X8, 0x239C000
	179 Move X8, [X8+800]
	180 Move X0, [X8]
	181 Call 0x1C17F10
	182 Move X8, 0x239C000
	183 Move X8, [X8+792]
	184 Move X1, X31
	185 Move X21, X0
	186 Move X2, [X8]
	187 Call 0x26B0B18, X0, X1
	188 Compare X20, 0
	189 JumpIfEqual {912}
	190 Move [X20+16], X21
	191 Move X20, 0x239A000
	192 Move X20, [X20+1608]
	193 Move X0, [X20]
	194 Move W8, [X0+224]
	195 Compare W8, 0
	196 JumpIfNotEqual {198}
	197 Call 0x1C17DFC
	198 Move X21, 0x267F000
	199 Move W8, [X21+1927]
	200 Compare W8, 0
	201 JumpIfNotEqual {207}
	202 Move X0, 0x239A000
	203 Move X0, [X0+1608]
	204 Call 0x1C17CF4
	205 Move W8, 1
	206 Move [X21+1927], W8
	207 Move X0, [X20]
	208 Move W8, [X0+224]
	209 Compare W8, 0
	210 JumpIfNotEqual {213}
	211 Call 0x1C17DFC
	212 Move X0, [X20]
	213 Move X8, [X0+184]
	214 Move X8, [X8]
	215 Compare X8, 0
	216 JumpIfEqual {912}
	217 Move X8, [X8+184]
	218 Compare X8, 0
	219 JumpIfEqual {912}
	220 Move X9, [X19+32]
	221 Compare X9, 0
	222 JumpIfEqual {912}
	223 Move X9, [X9+16]
	224 Compare X9, 0
	225 JumpIfEqual {912}
	226 Move X0, [X8+120]
	227 Compare X0, 0
	228 JumpIfEqual {912}
	229 Move X8, [X0]
	230 Move X1, [X9+96]
	231 Move X9, [X8+1016]
	232 Move X2, [X8+1024]
	233 NotImplemented "Instruction BLR not yet implemented."
	234 Call AvatarItemUtil.GetItemsToPurchaseForDraftAvatar
	235 Move [X19+40], X0
	236 Call AvatarItemUtil.ValidateCart, X0
	237 Move TEMP, X0
	238 And TEMP, TEMP, 1
	239 Compare TEMP, 1
	240 JumpIfNotEqual {875}
	241 Move X8, [X19+40]
	242 Compare X8, 0
	243 JumpIfEqual {912}
	244 Move W8, [X8+32]
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Move X8, 0x239C000
	247 Move X8, [X8+848]
	248 Move X0, [X8]
	249 Call 0x1C17F10
	250 Move X1, X31
	251 Move X20, X0
	252 Call Object..ctor, X0
	253 Move X24, 0x239C000
	254 Move X24, [X24+664]
	255 Move X21, [X19+40]
	256 Move X0, [X24]
	257 Move W8, [X0+224]
	258 Compare W8, 0
	259 JumpIfNotEqual {262}
	260 Call 0x1C17DFC
	261 Move X0, [X24]
	262 Move X8, [X0+184]
	263 Move X22, [X8+8]
	264 Compare X22, 0
	265 JumpIfNotEqual {287}
	266 Move W8, [X0+224]
	267 Compare W8, 0
	268 JumpIfNotEqual {271}
	269 Call 0x1C17DFC
	270 Move X0, [X24]
	271 Move X9, 0x239C000
	272 Move X8, [X0+184]
	273 Move X9, [X9+736]
	274 Move X23, [X8]
	275 Move X0, [X9]
	276 Call 0x1C17F10
	277 Move X8, 0x239C000
	278 Move X8, [X8+808]
	279 Move X1, X23
	280 Move X3, X31
	281 Move X22, X0
	282 Move X2, [X8]
	283 Call Func`2<Object, Object>..ctor, X0, X1, X2
	284 Move X8, [X24]
	285 Move X8, [X8+184]
	286 Move [X8+8], X22
	287 Move X8, 0x239C000
	288 Move X8, [X8+712]
	289 Move X0, X21
	290 Move X1, X22
	291 Move X2, [X8]
	292 Call Enumerable.Select, X0, X1
	293 Move X8, 0x239A000
	294 Move X8, [X8+3768]
	295 Move X1, [X8]
	296 Call Enumerable.ToArray, X0
	297 Compare X20, 0
	298 JumpIfEqual {912}
	299 Move [X20+16], X0
	300 Move X8, 0x239C000
	301 Move X8, [X8+776]
	302 Move X0, [X8]
	303 Call 0x1C17F10
	304 Move X8, 0x239C000
	305 Move X8, [X8+840]
	306 Move X1, X20
	307 Move X3, X31
	308 Move X21, X0
	309 Move X2, [X8]
	310 Call TaskGenerator`1<PurchaseAvatarItemsResponse>..ctor, X0, X1, X2
	311 Move X8, 0x239C000
	312 Move X8, [X8+680]
	313 Move X0, X21
	314 Move W1, W31
	315 Move X2, X31
	316 Move X3, [X8]
	317 Call Commands.Task, X0, X1, X2
	318 Move [X19+56], X0
	319 Move [X19+24], X0
	320 Move W0, 1
	321 Move [X19+16], W0
	322 Move X8, [X19+48]
	323 Move TEMP, 0
	324 Not TEMP
	325 Move W9, TEMP
	326 Move [X19+16], W9
	327 Compare X8, 0
	328 JumpIfEqual {912}
	329 Move X8, [X8+88]
	330 Move TEMP, X8
	331 And TEMP, TEMP, 1
	332 Compare TEMP, 1
	333 JumpIfEqual {502}
	334 Move X9, 0x239C000
	335 Move X9, [X9+728]
	336 Move X8, X8
	337 ShiftRight X8, 32
	338 And X8, X8, 0x7FFFFFFF
	339 Add X1, X31, 0
	340 Move [X31], W8
	341 Move X0, [X9]
	342 Call 0x1C17E04
	343 Move X8, 0x239C000
	344 Move X8, [X8+872]
	345 Move X1, X0
	346 Move X2, X31
	347 Move X8, [X8]
	348 Move X0, X8
	349 Call String.Format, X0, X1
	350 Move X8, 0x239A000
	351 Move X8, [X8+1928]
	352 Move X19, X0
	353 Move X8, [X8]
	354 Move W9, [X8+224]
	355 Compare W9, 0
	356 JumpIfNotEqual {359}
	357 Move X0, X8
	358 Call 0x1C17DFC
	359 Move X8, 0x239C000
	360 Move X9, 0x239B000
	361 Move X8, [X8+912]
	362 Move X9, [X9+136]
	363 Move W0, 0x2000
	364 Move W5, 94
	365 Move X3, [X8]
	366 Move X4, [X9]
	367 Move X1, X19
	368 Move X2, X31
	369 Move X6, X31
	370 Call Log.Error, X0, X1, X2, X3, X4, X5
	371 Move X8, 0x239A000
	372 Move X8, [X8+2736]
	373 Move W1, 1
	374 Move X0, [X8]
	375 Call 0x1C17D6C
	376 Move X8, 0x239C000
	377 Move X8, [X8+704]
	378 Move X19, X0
	379 Move X8, [X8]
	380 Move X0, X8
	381 Call 0x1C17F10
	382 Move X1, X31
	383 Move X20, X0
	384 Call BaseAction..ctor, X0
	385 Compare X19, 0
	386 JumpIfEqual {912}
	387 Compare X20, 0
	388 JumpIfEqual {395}
	389 Move X8, [X19]
	390 Move X0, X20
	391 Move X1, [X8+64]
	392 Call 0x1C17E00
	393 Compare X0, 0
	394 JumpIfEqual {913}
	395 Move W8, [X19+24]
	396 Compare W8, 0
	397 JumpIfEqual {916}
	398 Move [X19+32], X20
	399 Move X8, 0x239A000
	400 Move X8, [X8+1608]
	401 Move X0, [X8]
	402 Move W8, [X0+224]
	403 Compare W8, 0
	404 JumpIfNotEqual {406}
	405 Call 0x1C17DFC
	406 Move X0, X19
	407 Move X1, X31
	408 Call App.ExecuteActionOrDelay, X0
	409 Move X8, 0x239C000
	410 Move X8, [X8+784]
	411 Move X0, [X8]
	412 Move W8, [X0+224]
	413 Compare W8, 0
	414 JumpIfNotEqual {416}
	415 Call 0x1C17DFC
	416 Add X1, X31, 24
	417 Move W0, 2
	418 Move X2, X31
	419 Call TeleportTarget.TryGetTeleportTarget, X0, X1
	420 Move TEMP, X0
	421 And TEMP, TEMP, 1
	422 Compare TEMP, 1
	423 JumpIfNotEqual {896}
	424 Move X19, 0x267F000
	425 Move W8, [X19+1938]
	426 Compare W8, 0
	427 JumpIfNotEqual {433}
	428 Move X0, 0x239B000
	429 Move X0, [X0+1440]
	430 Call 0x1C17CF4
	431 Move W8, 1
	432 Move [X19+1938], W8
	433 Move X8, 0x239B000
	434 Move X8, [X8+1440]
	435 Move X8, [X8]
	436 Move X8, [X8+184]
	437 Move X8, [X8]
	438 Compare X8, 0
	439 JumpIfEqual {912}
	440 Move X0, [X31+24]
	441 Compare X0, 0
	442 JumpIfEqual {912}
	443 Move X19, [X8+32]
	444 Move X1, X31
	445 Call Transform.get_position, X0
	446 Compare X19, 0
	447 JumpIfEqual {912}
	448 Move X0, X19
	449 Move W1, W31
	450 Move X2, X31
	451 Call PlayerController.Respawn, X0, X1, X2
	452 Move X8, [X19+56]
	453 Move TEMP, 0
	454 Not TEMP
	455 Move W9, TEMP
	456 Move [X19+16], W9
	457 Compare X8, 0
	458 JumpIfEqual {912}
	459 Move W9, [X8+88]
	460 Move TEMP, X9
	461 And TEMP, TEMP, 1
	462 Compare TEMP, 1
	463 JumpIfEqual {751}
	464 Move X9, 0x239C000
	465 Move X9, [X9+720]
	466 Move W8, [X8+92]
	467 Move TEMP, 0
	468 Not TEMP
	469 Move X10, TEMP
	470 Add X0, X31, 0
	471 Move X9, [X9]
	472 Move X1, X31
	473 Move [X31+16], W8
	474 Move [X31], X9
	475 Move [X31+8], X10
	476 Call Enum.ToString, X0
	477 Move X8, 0x239C000
	478 Move X8, [X8+896]
	479 Move X1, X0
	480 Move X2, X31
	481 Move X8, [X8]
	482 Move X0, X8
	483 Call String.Concat, X0, X1
	484 Move X8, 0x239A000
	485 Move X8, [X8+1928]
	486 Move X19, X0
	487 Move X8, [X8]
	488 Move W9, [X8+224]
	489 Compare W9, 0
	490 JumpIfNotEqual {493}
	491 Move X0, X8
	492 Call 0x1C17DFC
	493 Move X8, 0x239C000
	494 Move X9, 0x239B000
	495 Move X8, [X8+912]
	496 Move X9, [X9+136]
	497 Move W0, 64
	498 Move W5, 47
	499 Move X3, [X8]
	500 Move X4, [X9]
	501 Move X1, X19
	502 Move X8, 0x239A000
	503 Move X8, [X8+2736]
	504 Move W1, 1
	505 Move X0, [X8]
	506 Call 0x1C17D6C
	507 Move X8, [X19+32]
	508 Compare X8, 0
	509 JumpIfEqual {912}
	510 Move X8, [X8+16]
	511 Compare X8, 0
	512 JumpIfEqual {912}
	513 Move X22, [X8+96]
	514 Move X8, 0x239C000
	515 Move X8, [X8+696]
	516 Move X20, X0
	517 Move X0, [X8]
	518 Call 0x1C17F10
	519 Move X1, X31
	520 Move X21, X0
	521 Call BaseAction..ctor, X0
	522 Move [X21+24], X22
	523 Compare X20, 0
	524 JumpIfEqual {912}
	525 Move X8, [X20]
	526 Move X0, X21
	527 Move X1, [X8+64]
	528 Call 0x1C17E00
	529 Compare X0, 0
	530 JumpIfEqual {913}
	531 Move W8, [X20+24]
	532 Compare W8, 0
	533 JumpIfEqual {916}
	534 Move [X20+32], X21
	535 Move X8, 0x239A000
	536 Move X8, [X8+1608]
	537 Move X0, [X8]
	538 Move W8, [X0+224]
	539 Compare W8, 0
	540 JumpIfNotEqual {542}
	541 Call 0x1C17DFC
	542 Move X0, X20
	543 Move X1, X31
	544 Call App.ExecuteActionOrDelay, X0
	545 Move X20, 0x267F000
	546 Move W8, [X20+1938]
	547 Compare W8, 0
	548 JumpIfNotEqual {554}
	549 Move X0, 0x239B000
	550 Move X0, [X0+1440]
	551 Call 0x1C17CF4
	552 Move W8, 1
	553 Move [X20+1938], W8
	554 Move X21, 0x239B000
	555 Move X21, [X21+1440]
	556 Move X8, [X21]
	557 Move X8, [X8+184]
	558 Move X0, [X8]
	559 Compare X0, 0
	560 JumpIfEqual {912}
	561 Move X1, X31
	562 Call Component.get_transform, X0
	563 Compare X0, 0
	564 JumpIfEqual {912}
	565 Move X1, X31
	566 Call Transform.get_position, X0
	567 Move X22, 0x267F000
	568 Move W8, [X22+1939]
	569 Move V8, V0
	570 Move V9, V1
	571 Move V10, V2
	572 Compare W8, 0
	573 JumpIfNotEqual {579}
	574 Move X0, 0x239B000
	575 Move X0, [X0+1448]
	576 Call 0x1C17CF4
	577 Move W8, 1
	578 Move [X22+1939], W8
	579 Move X8, 0x239B000
	580 Move X8, [X8+1448]
	581 Move W0, 128
	582 Move V0, V8
	583 Move V1, V9
	584 Move X8, [X8]
	585 Move V2, V10
	586 Move X1, X31
	587 Move X8, [X8+184]
	588 Move S3, [X8]
	589 Move S4, [X8+4]
	590 Move S5, [X8+8]
	591 Move S6, [X8+12]
	592 Call NetworkVFX.PlayVFX, X0, X1, X2
	593 Move X8, 0x239C000
	594 Move X8, [X8+784]
	595 Move X0, [X8]
	596 Move W8, [X0+224]
	597 Compare W8, 0
	598 JumpIfNotEqual {600}
	599 Call 0x1C17DFC
	600 Add X1, X31, 40
	601 Move W0, 2
	602 Move X2, X31
	603 Call TeleportTarget.TryGetTeleportTarget, X0, X1
	604 Move TEMP, X0
	605 And TEMP, TEMP, 1
	606 Compare TEMP, 1
	607 JumpIfNotEqual {633}
	608 Move W8, [X20+1938]
	609 Compare W8, 0
	610 JumpIfNotEqual {616}
	611 Move X0, 0x239B000
	612 Move X0, [X0+1440]
	613 Call 0x1C17CF4
	614 Move W8, 1
	615 Move [X20+1938], W8
	616 Move X8, [X21]
	617 Move X8, [X8+184]
	618 Move X8, [X8]
	619 Compare X8, 0
	620 JumpIfEqual {912}
	621 Move X0, [X31+40]
	622 Compare X0, 0
	623 JumpIfEqual {912}
	624 Move X20, [X8+32]
	625 Move X1, X31
	626 Call Transform.get_position, X0
	627 Compare X20, 0
	628 JumpIfEqual {912}
	629 Move X0, X20
	630 Move W1, W31
	631 Move X2, X31
	632 Call PlayerController.Respawn, X0, X1, X2
	633 Move X8, 0x239A000
	634 Move X8, [X8+1928]
	635 Move X0, [X8]
	636 Move W8, [X0+224]
	637 Compare W8, 0
	638 JumpIfNotEqual {640}
	639 Call 0x1C17DFC
	640 Move X8, 0x239C000
	641 Move X9, 0x239C000
	642 Move X10, 0x239B000
	643 Move X8, [X8+880]
	644 Move X9, [X9+912]
	645 Move X10, [X10+136]
	646 Move W0, 0x2000
	647 Move X1, [X8]
	648 Move X3, [X9]
	649 Move X4, [X10]
	650 Move W5, 81
	651 Move X2, X31
	652 Move X6, X31
	653 Call Log.Debug, X0, X1, X2, X3, X4, X5
	654 Move X26, 0x239A000
	655 Move X26, [X26+2896]
	656 Move X0, [X26]
	657 Move W8, [X0+224]
	658 Compare W8, 0
	659 JumpIfNotEqual {661}
	660 Call 0x1C17DFC
	661 Move X8, 0x239C000
	662 Move X8, [X8+888]
	663 Move X1, X31
	664 Move X0, [X8]
	665 Call Analytics.Track, X0
	666 Move X8, [X19+40]
	667 Compare X8, 0
	668 JumpIfEqual {912}
	669 Move W8, [X8+32]
	670 NotImplemented "Instruction CMP not yet implemented."
	671 Move X8, 0x239A000
	672 Move X8, [X8+1824]
	673 Move X0, [X8]
	674 Call 0x1C17F10
	675 Move X8, 0x239A000
	676 Move X8, [X8+1816]
	677 Move X20, X0
	678 Move X1, [X8]
	679 Call Dictionary`2<Object, Object>..ctor, X0
	680 Move X27, 0x239C000
	681 Move X27, [X27+664]
	682 Move X22, [X19+40]
	683 Move X0, [X27]
	684 Move W8, [X0+224]
	685 Compare W8, 0
	686 JumpIfNotEqual {689}
	687 Call 0x1C17DFC
	688 Move X0, [X27]
	689 Move X8, [X0+184]
	690 Move X9, 0x239C000
	691 Move X10, 0x239C000
	692 Move X9, [X9+928]
	693 Move X10, [X10+936]
	694 Move X24, [X8+16]
	695 Move X8, 0x239C000
	696 Move X23, [X9]
	697 Move X21, [X10]
	698 Move X8, [X8+904]
	699 Move X19, [X8]
	700 Compare X24, 0
	701 JumpIfNotEqual {723}
	702 Move W8, [X0+224]
	703 Compare W8, 0
	704 JumpIfNotEqual {707}
	705 Call 0x1C17DFC
	706 Move X0, [X27]
	707 Move X9, 0x239C000
	708 Move X8, [X0+184]
	709 Move X9, [X9+736]
	710 Move X25, [X8]
	711 Move X0, [X9]
	712 Call 0x1C17F10
	713 Move X8, 0x239C000
	714 Move X8, [X8+816]
	715 Move X1, X25
	716 Move X3, X31
	717 Move X24, X0
	718 Move X2, [X8]
	719 Call Func`2<Object, Object>..ctor, X0, X1, X2
	720 Move X8, [X27]
	721 Move X8, [X8+184]
	722 Move [X8+16], X24
	723 Move X8, 0x239C000
	724 Move X8, [X8+712]
	725 Move X0, X22
	726 Move X1, X24
	727 Move X2, [X8]
	728 Call Enumerable.Select, X0, X1
	729 Move X1, X0
	730 Move X0, X23
	731 Move X2, X31
	732 Call String.Join, X0, X1
	733 Compare X20, 0
	734 JumpIfEqual {912}
	735 Move X8, 0x239A000
	736 Move X8, [X8+1808]
	737 Move X2, X0
	738 Move X0, X20
	739 Move X1, X21
	740 Move X3, [X8]
	741 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	742 Move X0, [X26]
	743 Move W8, [X0+224]
	744 Compare W8, 0
	745 JumpIfNotEqual {747}
	746 Call 0x1C17DFC
	747 Move X0, X19
	748 Move X1, X20
	749 Move X2, X31
	750 Call Analytics.Track, X0, X1
	751 Move X20, 0x267F000
	752 Move W8, [X20+1938]
	753 Compare W8, 0
	754 JumpIfNotEqual {760}
	755 Move X0, 0x239B000
	756 Move X0, [X0+1440]
	757 Call 0x1C17CF4
	758 Move W8, 1
	759 Move [X20+1938], W8
	760 Move X8, 0x239B000
	761 Move X8, [X8+1440]
	762 Move X8, [X8]
	763 Move X8, [X8+184]
	764 Move X0, [X8]
	765 Compare X0, 0
	766 JumpIfEqual {912}
	767 Move X1, X31
	768 Call Component.get_transform, X0
	769 Compare X0, 0
	770 JumpIfEqual {912}
	771 Move X1, X31
	772 Call Transform.get_position, X0
	773 Move X8, 0x239B000
	774 Move X8, [X8+1392]
	775 Move S3, 1
	776 Move X1, X31
	777 Move X0, [X8]
	778 Call SFXManager.PlaySFXAsRPC, X0, X1, V0
	779 Move X22, 0x239A000
	780 Move X22, [X22+2736]
	781 Move W1, 1
	782 Move X0, [X22]
	783 Call 0x1C17D6C
	784 Move X8, [X19+56]
	785 Compare X8, 0
	786 JumpIfEqual {912}
	787 Move X23, [X8+104]
	788 Move X8, 0x239C000
	789 Move X8, [X8+856]
	790 Move X20, X0
	791 Move X0, [X8]
	792 Call 0x1C17F10
	793 Move X1, X31
	794 Move X21, X0
	795 Call BaseAction..ctor, X0
	796 Move [X21+24], X23
	797 Compare X20, 0
	798 JumpIfEqual {912}
	799 Move X8, [X20]
	800 Move X0, X21
	801 Move X1, [X8+64]
	802 Call 0x1C17E00
	803 Compare X0, 0
	804 JumpIfEqual {913}
	805 Move W8, [X20+24]
	806 Compare W8, 0
	807 JumpIfEqual {916}
	808 Move [X20+32], X21
	809 Move X8, 0x239A000
	810 Move X8, [X8+1608]
	811 Move X0, [X8]
	812 Move W8, [X0+224]
	813 Compare W8, 0
	814 JumpIfNotEqual {816}
	815 Call 0x1C17DFC
	816 Move X0, X20
	817 Move X1, X31
	818 Call App.ExecuteActionOrDelay, X0
	819 Move X0, [X22]
	820 Move W1, 1
	821 Call 0x1C17D6C
	822 Move X8, [X19+56]
	823 Compare X8, 0
	824 JumpIfEqual {912}
	825 Move V8, [X8+96]
	826 Move X8, 0x239C000
	827 Move X8, [X8+864]
	828 Move X20, X0
	829 Move X0, [X8]
	830 Call 0x1C17F10
	831 Move X1, X31
	832 Move X21, X0
	833 Call BaseAction..ctor, X0
	834 Move [X21+20], D8
	835 Compare X20, 0
	836 JumpIfEqual {912}
	837 Move X8, [X20]
	838 Move X0, X21
	839 Move X1, [X8+64]
	840 Call 0x1C17E00
	841 Compare X0, 0
	842 JumpIfEqual {913}
	843 Move W8, [X20+24]
	844 Compare W8, 0
	845 JumpIfEqual {916}
	846 Move X0, X20
	847 Move X1, X31
	848 Move [X20+32], X21
	849 Call App.ExecuteActionOrDelay, X0
	850 Move [X19+56], X31
	851 Move X8, 0x239C000
	852 Move X20, [X19+32]
	853 Move X8, [X8+768]
	854 Move X0, [X8]
	855 Call 0x1C17F10
	856 Move X8, 0x239C000
	857 Move X8, [X8+824]
	858 Move X1, X20
	859 Move X3, X31
	860 Move X21, X0
	861 Move X2, [X8]
	862 Call TaskGenerator`1<UpdateAvatarResponse>..ctor, X0, X1, X2
	863 Move X8, 0x239C000
	864 Move X8, [X8+688]
	865 Move X0, X21
	866 Move W1, W31
	867 Move X2, X31
	868 Move X3, [X8]
	869 Call Commands.Task, X0, X1, X2
	870 Move W8, 2
	871 Move [X19+48], X0
	872 Move [X19+24], X0
	873 Move [X19+16], W8
	874 Move W0, 1
	875 Move X8, 0x239A000
	876 Move X8, [X8+1928]
	877 Move X0, [X8]
	878 Move W8, [X0+224]
	879 Compare W8, 0
	880 JumpIfNotEqual {882}
	881 Call 0x1C17DFC
	882 Move X8, 0x239C000
	883 Move X9, 0x239C000
	884 Move X10, 0x239B000
	885 Move X8, [X8+920]
	886 Move X9, [X9+912]
	887 Move X10, [X10+136]
	888 Move W0, 0x2000
	889 Move X1, [X8]
	890 Move X3, [X9]
	891 Move X4, [X10]
	892 Move W5, 28
	893 Move X2, X31
	894 Move X6, X31
	895 Call Log.Error, X0, X1, X2, X3, X4, X5
	896 Move W0, W31
	897 Move X20, [X31+128]
	898 Move X19, [X31+136]
	899 Move X22, [X31+112]
	900 Move X21, [X31+120]
	901 Move X24, [X31+96]
	902 Move X23, [X31+104]
	903 Move X26, [X31+80]
	904 Move X25, [X31+88]
	905 Move X30, [X31+64]
	906 Move X27, [X31+72]
	907 Move D9, [X31+48]
	908 Move D8, [X31+56]
	909 Move V10, [X31+32]
	910 Add X31, X31, 144
	911 Return X0
	912 Call 0x1C17F20
	913 Call 0x1C17F44
	914 Move X1, X31
	915 Call 0x1C17DEC
	916 Call 0x1C17F28

Method: SpatialSys.CommandLib.Command System.Collections.Generic.IEnumerator<SpatialSys.CommandLib.Command>.get_Current()

Disassembly:
	0x01D5B690 ADRP X8, 0x239A000
	0x01D5B694 LDR X8, [X8 + 0x460]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01D5B698 MOV X1, X19
	0x01D5B69C MOV X3, X31
	0x01D5B6A0 MOV X21, X0
	0x01D5B6A4 LDR X2, [X8]
	0x01D5B6A8 BL 0x3314368
	0x01D5B6AC MOV X0, X21
	0x01D5B6B0 MOV W1, W31
	0x01D5B6B4 MOV X2, X31
	0x01D5B6B8 BL 0x35BAC40
	0x01D5B6BC MOV X21, X0
	0x01D5B6C0 CBZ X0, 0x1D5B6D8
	0x01D5B6C4 LDR X8, [X20]
	0x01D5B6C8 MOV X0, X21
	0x01D5B6CC LDR X1, [X8 + 0x40]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x2399000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x239B000
	011 Move X0, [X0+968]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01D5B6D0 BL 0x1C16E00
	0x01D5B6D4 CBZ X0, 0x1D5B73C

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

