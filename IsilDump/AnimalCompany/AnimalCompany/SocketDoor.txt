Type: AnimalCompany.SocketDoor

Method: System.Void Update()

Disassembly:
	0x01E06470 TBZ X0, 0x0, 0x1E06488
	0x01E06474 LDR V0, [X31 + 0x38]
	0x01E06478 FCMP S8, S0
	0x01E0647C B.MI 0x1E064DC
	0x01E06480 FSUB S8, S8, S0
	0x01E06484 B 0x1E06464
	0x01E06488 LDR X1, [X22]
	0x01E0648C ADD X0, X31, 0x20
	0x01E06490 BL 0x2BD1F58
	0x01E06494 LDR X0, [X24]
	0x01E06498 LDR W8, [X0 + 0xE0]
	0x01E0649C CBNZ W8, 0x1E064A4
	0x01E064A0 BL 0x1C16DFC
	0x01E064A4 LDR X0, [X23]
	0x01E064A8 MOV X1, X31
	0x01E064AC BL 0x3C06A04
	0x01E064B0 LDR W8, [X19 + 0x18]
	0x01E064B4 CMP W8, 0x0
	0x01E064B8 B.LE 0x1E064F0
	0x01E064BC ADRP X8, 0x22F3000
	0x01E064C0 LDR X8, [X8 + 0x988]
	0x01E064C4 MOV X0, X19
	0x01E064C8 MOV W1, W31
	0x01E064CC LDR X2, [X8]
	0x01E064D0 BL 0x30D42D8
	0x01E064D4 MOV X19, X0
	0x01E064D8 B 0x1E064F4
	0x01E064DC LDR X1, [X22]
	0x01E064E0 LDR X19, [X31 + 0x30]
	0x01E064E4 ADD X0, X31, 0x20
	0x01E064E8 BL 0x2BD1F58
	0x01E064EC B 0x1E064F4
	0x01E064F0 MOV X19, X31
	0x01E064F4 MOV X0, X19
	0x01E064F8 LDP X20, X19, [X31 + 0x80]
	0x01E064FC LDP X22, X21, [X31 + 0x70]
	0x01E06500 LDP X24, X23, [X31 + 0x60]
	0x01E06504 LDP X26, X25, [X31 + 0x50]
	0x01E06508 LDR X30, [X31 + 0x48]
	0x01E0650C LDR V8, [X31 + 0x40]
	0x01E06510 ADD X31, X31, 0x90
	0x01E06514 RET
	0x01E06518 BL 0x1C16F20
	0x01E0651C CMP W1, 0x1
	0x01E06520 MOV X20, X0
	0x01E06524 B.NE 0x1E0654C
	0x01E06528 MOV X0, X20
	0x01E0652C BL 0x3EB1AD0
	0x01E06530 LDR X21, [X0]
	0x01E06534 BL 0x3EB1AE0
	0x01E06538 LDR X1, [X22]
	0x01E0653C ADD X0, X31, 0x20
	0x01E06540 BL 0x2BD1F58
	0x01E06544 CBZ X21, 0x1E06494
	0x01E06548 B 0x1E0659C
	0x01E0654C MOV X21, X31
	0x01E06550 B 0x1E06558
	0x01E06554 MOV X20, X0
	0x01E06558 LDR X1, [X22]
	0x01E0655C ADD X0, X31, 0x20
	0x01E06560 BL 0x2BD1F58
	0x01E06564 CBZ X21, 0x1E065C0
	0x01E06568 MOV X0, X21
	0x01E0656C BL 0x1C16F18
	0x01E06570 CMP W1, 0x1
	0x01E06574 MOV X20, X0
	0x01E06578 B.NE 0x1E065A4
	0x01E0657C MOV X0, X20
	0x01E06580 BL 0x3EB1AD0
	0x01E06584 LDR X21, [X0]
	0x01E06588 BL 0x3EB1AE0
	0x01E0658C LDR X1, [X22]
	0x01E06590 ADD X0, X31, 0x20
	0x01E06594 BL 0x2BD1F58
	0x01E06598 CBZ X21, 0x1E06438
	0x01E0659C MOV X0, X21
	0x01E065A0 BL 0x1C16F18
	0x01E065A4 MOV X21, X31
	0x01E065A8 B 0x1E065B0
	0x01E065AC MOV X20, X0
	0x01E065B0 LDR X1, [X22]
	0x01E065B4 ADD X0, X31, 0x20
	0x01E065B8 BL 0x2BD1F58
	0x01E065BC CBNZ X21, 0x1E065C8
	0x01E065C0 MOV X0, X20
	0x01E065C4 BL 0x1D2C690
	0x01E065C8 MOV X0, X21
	0x01E065CC BL 0x1C16F18
	0x01E065D0 BL 0x1990590
	0x01E065D4 SUB X31, X31, 0x120
	0x01E065D8 STP D9, D8, [X31 + 0xC0]
	0x01E065DC STP X29, X30, [X31 + 0xD0]
	0x01E065E0 STP X26, X25, [X31 + 0xE0]
	0x01E065E4 STP X24, X23, [X31 + 0xF0]
	0x01E065E8 STP X22, X21, [X31 + 0x100]
	0x01E065EC STP X20, X19, [X31 + 0x110]
	0x01E065F0 ADRP X23, 0x25D2000
	0x01E065F4 LDRB W8, [X23 + 0xDA2]
	0x01E065F8 MOV V8.16B, V0.16B
	0x01E065FC MOV X19, X4
	0x01E06600 MOV X21, X3
	0x01E06604 MOV X22, X2
	0x01E06608 MOV X20, X1
	0x01E0660C TBNZ X8, 0x0, 0x1E06648
	0x01E06610 ADRP X0, 0x22F3000
	0x01E06614 LDR X0, [X0 + 0x998]
	0x01E06618 BL 0x1C16CF4

ISIL:
	001 Move [X31-112], D15
	002 Move [X31-104], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, X0
	015 Move X0, [X0+128]
	016 Compare X0, 0
	017 JumpIfEqual {125}
	018 Move X1, X31
	019 Call Rigidbody.get_angularVelocity, X0
	020 Move X21, 0x25D3000
	021 Move W8, [X21+1924]
	022 Move V8, V0
	023 Move V9, V1
	024 Move V10, V2
	025 Compare W8, 0
	026 JumpIfNotEqual {32}
	027 Move X0, 0x22EE000
	028 Move X0, [X0+1448]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+1924], W8
	032 Move X22, 0x22EE000
	033 Move X22, [X22+1448]
	034 Move X0, [X22]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, [X19+128]
	040 Compare X0, 0
	041 JumpIfEqual {125}
	042 Move X20, [X19+136]
	043 Move S14, [X19+152]
	044 Move S15, [X19+156]
	045 Move X1, X31
	046 Call Rigidbody.get_angularVelocity, X0
	047 Move W8, [X21+1924]
	048 Move V11, V0
	049 Move V12, V1
	050 Move V13, V2
	051 Compare W8, 0
	052 JumpIfNotEqual {58}
	053 Move X0, 0x22EE000
	054 Move X0, [X0+1448]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X21+1924], W8
	058 Move X0, [X22]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 NotImplemented "Instruction FCMP not yet implemented."
	064 Move S0, W31
	065 Multiply S1, S11, S11
	066 Multiply S2, S12, S12
	067 Multiply S3, S13, S13
	068 Add S1, S1, S2
	069 Add S1, S3, S1
	070 NotImplemented "Instruction FSQRT not yet implemented."
	071 Subtract S1, S1, S14
	072 Subtract S2, S15, S14
	073 NotImplemented "Instruction FDIV not yet implemented."
	074 NotImplemented "Instruction FCMP not yet implemented."
	075 Move S0, 1
	076 NotImplemented "Instruction FMIN not yet implemented."
	077 Compare X20, 0
	078 JumpIfEqual {125}
	079 Multiply S1, S8, S8
	080 Multiply S2, S9, S9
	081 Add S1, S1, S2
	082 Multiply S2, S10, S10
	083 Add S1, S2, S1
	084 Move X0, X20
	085 Move X1, X31
	086 NotImplemented "Instruction FSQRT not yet implemented."
	087 Call AudioSource.set_volume, X0, V0
	088 Move X8, -20033536
	089 Move V0, [X8+188]
	090 NotImplemented "Instruction FCMP not yet implemented."
	091 Move X8, -20033536
	092 Move V0, [X19+160]
	093 Move V1, [X8+780]
	094 NotImplemented "Instruction FCMP not yet implemented."
	095 Move X20, [X19+144]
	096 Move X0, X19
	097 Move X1, X31
	098 Call Component.get_transform, X0
	099 Compare X0, 0
	100 JumpIfEqual {125}
	101 Move X1, X31
	102 Call Transform.get_position, X0
	103 Compare X20, 0
	104 JumpIfEqual {125}
	105 Move S3, 1
	106 Move X0, X20
	107 Move W1, W31
	108 Move X2, X31
	109 Call RandomSFX.Play, X0, X1, V0, X2
	110 Move [X19+160], S8
	111 Move X20, [X31+96]
	112 Move X19, [X31+104]
	113 Move X22, [X31+80]
	114 Move X21, [X31+88]
	115 Move X30, [X31+64]
	116 Move D9, [X31+48]
	117 Move D8, [X31+56]
	118 Move D11, [X31+32]
	119 Move D10, [X31+40]
	120 Move D13, [X31+16]
	121 Move D12, [X31+24]
	122 Move D15, [X31+112]
	123 Move D14, [X31+120]
	124 Return 
	125 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01E0661C ADRP X0, 0x22F3000
	0x01E06620 LDR X0, [X0 + 0x9A0]
	0x01E06624 BL 0x1C16CF4
	0x01E06628 ADRP X0, 0x22F3000
	0x01E0662C LDR X0, [X0 + 0x9A8]

ISIL:
	001 Move X8, -20017152
	002 Move V0, [X8+152]
	003 Move X1, X31
	004 Move [X0+152], D0
	005 Call NetworkBehaviour..ctor, X0
	006 Return 

Method: System.Void CopyBackingFieldsToState(System.Boolean param_0)

Disassembly:
	0x01E06630 BL 0x1C16CF4

ISIL:
	001 Return 

Method: System.Void CopyStateToBackingFields()

Disassembly:
	0x01E06634 ADRP X0, 0x22F3000

ISIL:
	001 Return 

