Type: AnimalCompany.TeleportationMachine

Method: System.Single get_charge()

Disassembly:
	0x01CAFC3C B 0x1D8A710
	0x01CAFC40 BL 0x1B6EA1C
	0x01CAFC44 STR X30, [X31 - 0x20]!
	0x01CAFC48 STP X20, X19, [X31 + 0x10]
	0x01CAFC4C ADRP X20, 0x2574000
	0x01CAFC50 LDRB W8, [X20 + 0x4AC]
	0x01CAFC54 MOV X19, X0
	0x01CAFC58 TBNZ X8, 0x0, 0x1CAFC7C
	0x01CAFC5C ADRP X0, 0x229F000
	0x01CAFC60 LDR X0, [X0 + 0x1C0]
	0x01CAFC64 BL 0x1B6E7F0
	0x01CAFC68 ADRP X0, 0x229F000
	0x01CAFC6C LDR X0, [X0 + 0xA90]
	0x01CAFC70 BL 0x1B6E7F0
	0x01CAFC74 MOVZ W8, 0x1
	0x01CAFC78 STRB W8, [X20 + 0x4AC]
	0x01CAFC7C LDRB W8, [X19 + 0x58]
	0x01CAFC80 CBZ W8, 0x1CAFCE8
	0x01CAFC84 STRB W31, [X19 + 0x58]
	0x01CAFC88 MOV X0, X19
	0x01CAFC8C BL 0x1CAECFC
	0x01CAFC90 CBNZ W0, 0x1CAFD24
	0x01CAFC94 FMOV S0, W31
	0x01CAFC98 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move V0, [X8]
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return V0
	010 Move X0, 0x229F000
	011 Move X0, [X0+1168]
	012 Call 0x1B6F804
	013 Call 0x1B6FA0C
	014 Move X19, X0
	015 Move X0, 0x22A0000
	016 Move X0, [X0+2528]
	017 Call 0x1B6F804
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x22A0000
	023 Move X0, [X0+2536]
	024 Call 0x1B6F804
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1B6F8E8

Method: System.Void set_charge(System.Single value)

Disassembly:
	0x01CAFC9C BL 0x1CAEC9C
	0x01CAFCA0 MOVZ W1, 0x1
	0x01CAFCA4 MOV X0, X19
	0x01CAFCA8 BL 0x1CAED5C
	0x01CAFCAC LDR X0, [X19 + 0xB0]
	0x01CAFCB0 CBZ X0, 0x1CAFE20
	0x01CAFCB4 LDR X20, [X19 + 0x98]
	0x01CAFCB8 MOV X1, X31
	0x01CAFCBC BL 0x3AA7658
	0x01CAFCC0 CBZ X20, 0x1CAFE20
	0x01CAFCC4 FMOV S3, 1
	0x01CAFCC8 MOVZ W1, 0x1
	0x01CAFCCC MOV X0, X20
	0x01CAFCD0 MOV X2, X31
	0x01CAFCD4 BL 0x1CC35DC
	0x01CAFCD8 MOV X0, X19
	0x01CAFCDC LDP X20, X19, [X31 + 0x10]
	0x01CAFCE0 LDR X30, [X31], #0x20
	0x01CAFCE4 B 0x1CAFE24
	0x01CAFCE8 ADRP X20, 0x229F000
	0x01CAFCEC LDR X20, [X20 + 0x1C0]
	0x01CAFCF0 LDR X0, [X20]
	0x01CAFCF4 LDR W8, [X0 + 0xE0]
	0x01CAFCF8 CBNZ W8, 0x1CAFD00

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move [X8], S0
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 
	010 Move X0, 0x229F000
	011 Move X0, [X0+1168]
	012 Call 0x1B6F804
	013 Call 0x1B6FA0C
	014 Move X19, X0
	015 Move X0, 0x22A0000
	016 Move X0, [X0+2528]
	017 Call 0x1B6F804
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x22A0000
	023 Move X0, [X0+2544]
	024 Call 0x1B6F804
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1B6F8E8

Method: AnimalCompany.TeleportationMachine/TeleportationState get_state()

Disassembly:
	0x01CAFCFC BL 0x1B6E8F8
	0x01CAFD00 MOV X0, X19
	0x01CAFD04 MOV X1, X31
	0x01CAFD08 BL 0x1D697C8
	0x01CAFD0C LDR X0, [X19 + 0x38]
	0x01CAFD10 CBZ X0, 0x1CAFE20
	0x01CAFD14 MOV X1, X31
	0x01CAFD18 BL 0x1D87040
	0x01CAFD1C CMP W0, 0x4
	0x01CAFD20 B.NE 0x1CAFD30
	0x01CAFD24 LDP X20, X19, [X31 + 0x10]
	0x01CAFD28 LDR X30, [X31], #0x20
	0x01CAFD2C RET
	0x01CAFD30 LDR X0, [X19 + 0x40]
	0x01CAFD34 CBZ X0, 0x1CAFE20
	0x01CAFD38 MOV X1, X31
	0x01CAFD3C BL 0x1D9F538
	0x01CAFD40 ANDS W31, W0, 0x7
	0x01CAFD44 B.EQ 0x1CAFDA8
	0x01CAFD48 TBNZ X0, 0x0, 0x1CAFC88
	0x01CAFD4C LDR X8, [X19 + 0x38]
	0x01CAFD50 CBZ X8, 0x1CAFE20
	0x01CAFD54 LDR X0, [X8 + 0x50]
	0x01CAFD58 CBZ X0, 0x1CAFE20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move W0, [X8+4]
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0
	010 Move X0, 0x229F000
	011 Move X0, [X0+1168]
	012 Call 0x1B6F804
	013 Call 0x1B6FA0C
	014 Move X19, X0
	015 Move X0, 0x22A0000
	016 Move X0, [X0+2552]
	017 Call 0x1B6F804
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x22A0000
	023 Move X0, [X0+2560]
	024 Call 0x1B6F804
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1B6F8E8

Method: System.Void set_state(AnimalCompany.TeleportationMachine/TeleportationState value)

Disassembly:
	0x01CAFD5C MOV X1, X31
	0x01CAFD60 BL 0x1DBEFE4
	0x01CAFD64 TBZ X0, 0x0, 0x1CAFD24
	0x01CAFD68 LDR X8, [X19 + 0x38]
	0x01CAFD6C CBZ X8, 0x1CAFE20
	0x01CAFD70 LDR X0, [X8 + 0x50]
	0x01CAFD74 MOVZ W1, 0x8
	0x01CAFD78 MOV X2, X31
	0x01CAFD7C BL 0x1DD601C
	0x01CAFD80 MOV X20, X0
	0x01CAFD84 MOVZ W0, 0x1
	0x01CAFD88 MOV X1, X31
	0x01CAFD8C BL 0x1D29EBC
	0x01CAFD90 LDR X8, [X19 + 0x40]
	0x01CAFD94 CBZ X8, 0x1CAFE20
	0x01CAFD98 LDR X8, [X8 + 0x20]
	0x01CAFD9C CBZ X8, 0x1CAFDE0
	0x01CAFDA0 LDR W0, [X8]
	0x01CAFDA4 B 0x1CAFDE4
	0x01CAFDA8 LDR X0, [X20]
	0x01CAFDAC LDR X19, [X19 + 0x40]
	0x01CAFDB0 LDR W8, [X0 + 0xE0]
	0x01CAFDB4 CBNZ W8, 0x1CAFDBC
	0x01CAFDB8 BL 0x1B6E8F8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move [X8+4], W1
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 
	010 Move X0, 0x229F000
	011 Move X0, [X0+1168]
	012 Call 0x1B6F804
	013 Call 0x1B6FA0C
	014 Move X19, X0
	015 Move X0, 0x22A0000
	016 Move X0, [X0+2552]
	017 Call 0x1B6F804
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x22A0000
	023 Move X0, [X0+2568]
	024 Call 0x1B6F804
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1B6F8E8

Method: System.Void Start()

Disassembly:
	0x01CAFDBC ADRP X8, 0x229F000
	0x01CAFDC0 LDR X8, [X8 + 0xA90]
	0x01CAFDC4 MOV X1, X19
	0x01CAFDC8 LDP X20, X19, [X31 + 0x10]
	0x01CAFDCC MOVZ W2, 0x7
	0x01CAFDD0 LDR X0, [X8]
	0x01CAFDD4 MOV X3, X31
	0x01CAFDD8 LDR X30, [X31], #0x20
	0x01CAFDDC B 0x1D69640
	0x01CAFDE0 MOV X0, X31
	0x01CAFDE4 LDR W1, [X19 + 0x68]
	0x01CAFDE8 MOVZ W2, 0x1
	0x01CAFDEC MOV X3, X31
	0x01CAFDF0 BL 0x1DA8258
	0x01CAFDF4 STUR X0, [X20 + 0x1C]
	0x01CAFDF8 CBZ X20, 0x1CAFE20
	0x01CAFDFC MOVZ W8, 0x40
	0x01CAFE00 STR W8, [X20 + 0xC]
	0x01CAFE04 LDR X0, [X19 + 0x38]
	0x01CAFE08 CBZ X0, 0x1CAFE20
	0x01CAFE0C MOV X1, X20
	0x01CAFE10 LDP X20, X19, [X31 + 0x10]
	0x01CAFE14 MOV X2, X31
	0x01CAFE18 LDR X30, [X31], #0x20
	0x01CAFE1C B 0x1D8A710
	0x01CAFE20 BL 0x1B6EA1C
	0x01CAFE24 STP X30, X21, [X31 - 0x20]!
	0x01CAFE28 STP X20, X19, [X31 + 0x10]
	0x01CAFE2C ADRP X20, 0x2574000
	0x01CAFE30 LDRB W8, [X20 + 0x4AD]
	0x01CAFE34 MOV X19, X0
	0x01CAFE38 TBNZ X8, 0x0, 0x1CAFE5C
	0x01CAFE3C ADRP X0, 0x229F000
	0x01CAFE40 LDR X0, [X0 + 0x1C0]
	0x01CAFE44 BL 0x1B6E7F0
	0x01CAFE48 ADRP X0, 0x229F000
	0x01CAFE4C LDR X0, [X0 + 0xA98]
	0x01CAFE50 BL 0x1B6E7F0
	0x01CAFE54 MOVZ W8, 0x1
	0x01CAFE58 STRB W8, [X20 + 0x4AD]
	0x01CAFE5C LDRB W8, [X19 + 0x58]
	0x01CAFE60 CBZ W8, 0x1CAFE80
	0x01CAFE64 STRB W31, [X19 + 0x58]
	0x01CAFE68 LDR X0, [X19 + 0x90]
	0x01CAFE6C CBZ X0, 0x1CAFFB8
	0x01CAFE70 LDP X20, X19, [X31 + 0x10]
	0x01CAFE74 MOV X1, X31
	0x01CAFE78 LDP X30, X21, [X31], #0x20
	0x01CAFE7C B 0x3AEF478
	0x01CAFE80 ADRP X21, 0x229F000
	0x01CAFE84 LDR X21, [X21 + 0x1C0]
	0x01CAFE88 LDR X0, [X21]
	0x01CAFE8C LDR W8, [X0 + 0xE0]
	0x01CAFE90 CBNZ W8, 0x1CAFE98

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2575000
	008 Move W8, [X20+1195]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x22A0000
	015 Move X0, [X0+1856]
	016 Call 0x1B6F7F0
	017 Move X0, 0x22A0000
	018 Move X0, [X0+2576]
	019 Call 0x1B6F7F0
	020 Move W8, 1
	021 Move [X20+1195], W8
	022 Move X22, [X19+208]
	023 Compare X22, 0
	024 JumpIfEqual {67}
	025 Move X23, 0x22A0000
	026 Move X23, [X23+1856]
	027 Move X21, 0x22A0000
	028 Move X20, [X22+32]
	029 Move X0, [X23]
	030 Move X21, [X21+2576]
	031 Call 0x1B6FA0C
	032 Move X2, [X21]
	033 Move X1, X19
	034 Move X3, X31
	035 Move X21, X0
	036 Call Action`2<Int32Enum, Int32Enum>..ctor, X0, X1, X2
	037 Move X0, X20
	038 Move X1, X21
	039 Move X2, X31
	040 Call Delegate.Combine, X0, X1
	041 Compare X0, 0
	042 JumpIfEqual {59}
	043 Move X20, [X23]
	044 Move X19, X0
	045 Move X1, X20
	046 Call 0x1B6F8FC
	047 Compare X0, 0
	048 JumpIfEqual {56}
	049 Move [X22+32], X0
	050 Move X20, [X23]
	051 Move X0, X19
	052 Move X1, X20
	053 Call 0x1B6F8FC
	054 Compare X0, 0
	055 JumpIfNotEqual {60}
	056 Move X0, X19
	057 Move X1, X20
	058 Call 0x1B6FCDC
	059 Move [X22+32], X31
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X30, [X31+48]
	065 Move X23, [X31+56]
	066 Return 
	067 Call 0x1B6FA1C

Method: System.Void Render()

Disassembly:
	0x01CAFE94 BL 0x1B6E8F8
	0x01CAFE98 MOV X0, X19
	0x01CAFE9C MOV X1, X31
	0x01CAFEA0 BL 0x1D697C8
	0x01CAFEA4 LDR X0, [X19 + 0x38]
	0x01CAFEA8 CBZ X0, 0x1CAFFB8
	0x01CAFEAC MOV X1, X31
	0x01CAFEB0 BL 0x1D87040
	0x01CAFEB4 CMP W0, 0x4
	0x01CAFEB8 B.NE 0x1CAFEC8
	0x01CAFEBC LDP X20, X19, [X31 + 0x10]
	0x01CAFEC0 LDP X30, X21, [X31], #0x20
	0x01CAFEC4 RET
	0x01CAFEC8 LDR X0, [X19 + 0x40]
	0x01CAFECC CBZ X0, 0x1CAFFB8
	0x01CAFED0 MOV X1, X31
	0x01CAFED4 BL 0x1D9F538
	0x01CAFED8 TBNZ X0, 0x0, 0x1CAFF14
	0x01CAFEDC LDR X0, [X21]
	0x01CAFEE0 LDR X19, [X19 + 0x40]
	0x01CAFEE4 LDR W8, [X0 + 0xE0]
	0x01CAFEE8 CBNZ W8, 0x1CAFEF0
	0x01CAFEEC BL 0x1B6E8F8
	0x01CAFEF0 ADRP X8, 0x229F000
	0x01CAFEF4 LDR X8, [X8 + 0xA98]
	0x01CAFEF8 MOV X1, X19
	0x01CAFEFC LDP X20, X19, [X31 + 0x10]
	0x01CAFF00 MOVZ W2, 0x1
	0x01CAFF04 LDR X0, [X8]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X0
	006 Call TeleportationMachine.get_state, X0
	007 Move X19, [X20+184]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move V8, [X20+192]
	010 Move X0, X20
	011 Call TeleportationMachine.get_charge, X0
	012 Compare X19, 0
	013 JumpIfEqual {32}
	014 Move S1, 1
	015 NotImplemented "Instruction FCMP not yet implemented."
	016 NotImplemented "Instruction FMIN not yet implemented."
	017 Move S1, W31
	018 NotImplemented "Instruction FCSEL not yet implemented."
	019 Multiply S0, S8, S0
	020 Add S0, S0, S1
	021 Move S0, W31
	022 Compare X19, 0
	023 JumpIfEqual {32}
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+8]
	028 Move X1, X31
	029 Move V8, [X31+32]
	030 Call Light.set_intensity, X0, V0
	031 Return 
	032 Call 0x1B6FA1C

Method: System.Void FixedUpdateNetwork()

Disassembly:
	0x01CAFF08 MOV X3, X31
	0x01CAFF0C LDP X30, X21, [X31], #0x20
	0x01CAFF10 B 0x1D69640
	0x01CAFF14 LDR X8, [X19 + 0x38]
	0x01CAFF18 CBZ X8, 0x1CAFFB8
	0x01CAFF1C MOV W20, W0
	0x01CAFF20 LDR X0, [X8 + 0x50]
	0x01CAFF24 CBZ X0, 0x1CAFFB8
	0x01CAFF28 MOV X1, X31
	0x01CAFF2C BL 0x1DBEFE4
	0x01CAFF30 TBZ X0, 0x0, 0x1CAFFAC
	0x01CAFF34 LDR X8, [X19 + 0x38]
	0x01CAFF38 CBZ X8, 0x1CAFFB8
	0x01CAFF3C LDR X0, [X8 + 0x50]
	0x01CAFF40 MOVZ W1, 0x8
	0x01CAFF44 MOV X2, X31
	0x01CAFF48 BL 0x1DD601C
	0x01CAFF4C MOV X21, X0
	0x01CAFF50 MOVZ W0, 0x1
	0x01CAFF54 MOV X1, X31
	0x01CAFF58 BL 0x1D29EBC
	0x01CAFF5C LDR X8, [X19 + 0x40]
	0x01CAFF60 CBZ X8, 0x1CAFFB8
	0x01CAFF64 LDR X8, [X8 + 0x20]
	0x01CAFF68 CBZ X8, 0x1CAFF74
	0x01CAFF6C LDR W0, [X8]
	0x01CAFF70 B 0x1CAFF78
	0x01CAFF74 MOV X0, X31
	0x01CAFF78 LDR W1, [X19 + 0x68]
	0x01CAFF7C MOVZ W2, 0x2
	0x01CAFF80 MOV X3, X31
	0x01CAFF84 BL 0x1DA8258
	0x01CAFF88 STUR X0, [X21 + 0x1C]
	0x01CAFF8C CBZ X21, 0x1CAFFB8
	0x01CAFF90 MOVZ W8, 0x40
	0x01CAFF94 STR W8, [X21 + 0xC]
	0x01CAFF98 LDR X0, [X19 + 0x38]
	0x01CAFF9C CBZ X0, 0x1CAFFB8
	0x01CAFFA0 MOV X1, X21
	0x01CAFFA4 MOV X2, X31
	0x01CAFFA8 BL 0x1D8A710
	0x01CAFFAC ANDS W31, W20, 0x7
	0x01CAFFB0 B.NE 0x1CAFE68
	0x01CAFFB4 B 0x1CAFEBC
	0x01CAFFB8 BL 0x1B6EA1C
	0x01CAFFBC STR X30, [X31 - 0x30]!
	0x01CAFFC0 STP X22, X21, [X31 + 0x10]
	0x01CAFFC4 STP X20, X19, [X31 + 0x20]
	0x01CAFFC8 ADRP X22, 0x2574000
	0x01CAFFCC ADRP X21, 0x229F000
	0x01CAFFD0 LDRB W8, [X22 + 0x4B7]
	0x01CAFFD4 LDR X21, [X21 + 0xA38]
	0x01CAFFD8 MOV X19, X1
	0x01CAFFDC MOV W20, W0
	0x01CAFFE0 TBNZ X8, 0x0, 0x1CB0004
	0x01CAFFE4 ADRP X0, 0x229F000
	0x01CAFFE8 LDR X0, [X0 + 0xAA0]
	0x01CAFFEC BL 0x1B6E7F0
	0x01CAFFF0 ADRP X0, 0x229F000
	0x01CAFFF4 LDR X0, [X0 + 0xA38]
	0x01CAFFF8 BL 0x1B6E7F0
	0x01CAFFFC MOVZ W8, 0x1
	0x01CB0000 STRB W8, [X22 + 0x4B7]
	0x01CB0004 LDR X0, [X21]
	0x01CB0008 LDR W8, [X0 + 0xE0]
	0x01CB000C CBNZ W8, 0x1CB0018
	0x01CB0010 BL 0x1B6E8F8
	0x01CB0014 LDR X0, [X21]
	0x01CB0018 LDR X8, [X0 + 0xB8]
	0x01CB001C LDR X0, [X8]
	0x01CB0020 CBZ X0, 0x1CB0048
	0x01CB0024 ADRP X8, 0x229E000
	0x01CB0028 LDR X8, [X8 + 0xAA0]
	0x01CB002C MOV W1, W20
	0x01CB0030 MOV X2, X19
	0x01CB0034 LDP X20, X19, [X31 + 0x20]
	0x01CB0038 LDR X3, [X8]
	0x01CB003C LDP X22, X21, [X31 + 0x10]
	0x01CB0040 LDR X30, [X31], #0x30
	0x01CB0044 B 0x2895B8C
	0x01CB0048 BL 0x1B6EA1C
	0x01CB004C B 0x1CAFC44
	0x01CB0050 STP X30, X19, [X31 - 0x10]!
	0x01CB0054 MOV X19, X0

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X1, X31
	006 Move X19, X0
	007 Call NetworkBehaviour.FixedUpdateNetwork, X0
	008 Move X0, [X19+64]
	009 Compare X0, 0
	010 JumpIfEqual {89}
	011 Move X1, X31
	012 Call NetworkObject.get_HasStateAuthority, X0
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {56}
	017 Move X0, X19
	018 Call TeleportationMachine.get_state, X0
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X0, X19
	022 Call TeleportationMachine.get_charge, X0
	023 Move X0, X31
	024 Move V8, V0
	025 Call Time.get_fixedDeltaTime
	026 Move V1, [X19+132]
	027 Move X0, X19
	028 NotImplemented "Instruction FDIV not yet implemented."
	029 Add S0, S8, S0
	030 Call TeleportationMachine.set_charge, X0, V0
	031 Move X0, X19
	032 Call TeleportationMachine.get_charge, X0
	033 Move S1, 1
	034 NotImplemented "Instruction FCMP not yet implemented."
	035 Move W1, 2
	036 Move X0, X19
	037 Call TeleportationMachine.set_state, X0, X1
	038 Move X0, X19
	039 Call TeleportationMachine.MasterTeleport, X0
	040 Move X0, X19
	041 Call TeleportationMachine.RPC_Teleport, X0
	042 Move X0, X19
	043 Call TeleportationMachine.get_charge, X0
	044 Move X0, X31
	045 Move V8, V0
	046 Call Time.get_fixedDeltaTime
	047 Move V1, [X19+136]
	048 Move X0, X19
	049 NotImplemented "Instruction FDIV not yet implemented."
	050 Add S0, S8, S0
	051 Call TeleportationMachine.set_charge, X0, V0
	052 Move X0, X19
	053 Call TeleportationMachine.get_charge, X0
	054 Move S1, 1
	055 NotImplemented "Instruction FCMP not yet implemented."
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+8]
	059 Move V8, [X31+32]
	060 Return 
	061 Move X0, X19
	062 Move W1, W31
	063 Call TeleportationMachine.set_state, X0, X1
	064 Move X20, [X19+168]
	065 Move X0, X19
	066 Move X1, X31
	067 Call Component.get_transform, X0
	068 Compare X0, 0
	069 JumpIfEqual {89}
	070 Move X1, X31
	071 Call Transform.get_position, X0
	072 Compare X20, 0
	073 JumpIfEqual {89}
	074 Move S3, 1
	075 Move W1, 1
	076 Move X0, X20
	077 Move X2, X31
	078 Call RandomSFX.Play, X0, X1, V0, X2
	079 Move X0, X19
	080 Call TeleportationMachine.RPC_RechargeFinished, X0
	081 Move X0, X19
	082 Move X20, [X31+16]
	083 Move X19, [X31+24]
	084 Move X30, [X31+8]
	085 Move S0, W31
	086 Move V8, [X31+32]
	087 Call TeleportationMachine.set_charge, X0, V0
	088 Return 
	089 Call 0x1B6FA1C

Method: System.Void RPC_RequestActivation()

Disassembly:
	0x01CB0C44 LDR X2, [X8]
	0x01CB0C48 LDR X3, [X9]
	0x01CB0C4C MOV X1, X31
	0x01CB0C50 MOV X5, X31
	0x01CB0C54 BL 0x342B554
	0x01CB0C58 LDR X0, [X21]
	0x01CB0C5C LDR W8, [X0 + 0xE0]
	0x01CB0C60 CBNZ W8, 0x1CB0C6C
	0x01CB0C64 BL 0x1B6E8F8
	0x01CB0C68 LDR X0, [X21]
	0x01CB0C6C LDR X8, [X0 + 0xB8]
	0x01CB0C70 LDR X0, [X8]
	0x01CB0C74 CBZ X0, 0x1CB0CA0
	0x01CB0C78 ADRP X8, 0x229E000
	0x01CB0C7C LDR X8, [X8 + 0xB18]
	0x01CB0C80 LDRH W1, [X19 + 0x44]
	0x01CB0C84 MOV X2, X19
	0x01CB0C88 LDR X3, [X8]
	0x01CB0C8C BL 0x2843E2C
	0x01CB0C90 LDP X20, X19, [X31 + 0x20]
	0x01CB0C94 LDP X30, X21, [X31 + 0x10]
	0x01CB0C98 ADD X31, X31, 0x30
	0x01CB0C9C RET
	0x01CB0CA0 BL 0x1B6EA1C
	0x01CB0CA4 SUB X31, X31, 0x60
	0x01CB0CA8 STR X30, [X31 + 0x10]
	0x01CB0CAC STP X26, X25, [X31 + 0x20]
	0x01CB0CB0 STP X24, X23, [X31 + 0x30]
	0x01CB0CB4 STP X22, X21, [X31 + 0x40]
	0x01CB0CB8 STP X20, X19, [X31 + 0x50]
	0x01CB0CBC ADRP X21, 0x2573000
	0x01CB0CC0 ADRP X20, 0x229D000
	0x01CB0CC4 LDRB W8, [X21 + 0x4BF]
	0x01CB0CC8 LDR X20, [X20 + 0x800]
	0x01CB0CCC MOV X19, X0
	0x01CB0CD0 TBNZ X8, 0x0, 0x1CB0D30
	0x01CB0CD4 ADRP X0, 0x229D000
	0x01CB0CD8 LDR X0, [X0 + 0x800]
	0x01CB0CDC BL 0x1B6E7F0
	0x01CB0CE0 ADRP X0, 0x229E000
	0x01CB0CE4 LDR X0, [X0 + 0xB48]
	0x01CB0CE8 BL 0x1B6E7F0
	0x01CB0CEC ADRP X0, 0x229E000
	0x01CB0CF0 LDR X0, [X0 + 0xB50]
	0x01CB0CF4 BL 0x1B6E7F0
	0x01CB0CF8 ADRP X0, 0x229E000
	0x01CB0CFC LDR X0, [X0 + 0xB58]
	0x01CB0D00 BL 0x1B6E7F0
	0x01CB0D04 ADRP X0, 0x229E000
	0x01CB0D08 LDR X0, [X0 + 0xB60]
	0x01CB0D0C BL 0x1B6E7F0
	0x01CB0D10 ADRP X0, 0x229E000
	0x01CB0D14 LDR X0, [X0 + 0xB68]
	0x01CB0D18 BL 0x1B6E7F0
	0x01CB0D1C ADRP X0, 0x229D000
	0x01CB0D20 LDR X0, [X0 + 0x478]
	0x01CB0D24 BL 0x1B6E7F0
	0x01CB0D28 MOVZ W8, 0x1
	0x01CB0D2C STRB W8, [X21 + 0x4BF]
	0x01CB0D30 LDR X0, [X20]
	0x01CB0D34 STP X31, X31, [X31]
	0x01CB0D38 LDR W8, [X0 + 0xE0]
	0x01CB0D3C CBNZ W8, 0x1CB0D44
	0x01CB0D40 BL 0x1B6E8F8
	0x01CB0D44 MOV X0, X31
	0x01CB0D48 BL 0x3A6A5FC
	0x01CB0D4C TBNZ X0, 0x0, 0x1CB0E74
	0x01CB0D50 ADRP X23, 0x229D000
	0x01CB0D54 LDR X23, [X23 + 0x478]
	0x01CB0D58 LDR X0, [X23]
	0x01CB0D5C LDR W8, [X0 + 0xE0]
	0x01CB0D60 CBNZ W8, 0x1CB0D68
	0x01CB0D64 BL 0x1B6E8F8
	0x01CB0D68 ADRP X8, 0x229E000
	0x01CB0D6C LDR X8, [X8 + 0xB68]
	0x01CB0D70 MOVZ W0, 0x1
	0x01CB0D74 LDR X1, [X8]
	0x01CB0D78 BL 0x2114C74
	0x01CB0D7C ADRP X8, 0x229E000
	0x01CB0D80 LDR X8, [X8 + 0xB60]
	0x01CB0D84 MOV X21, X0
	0x01CB0D88 LDR X8, [X8]
	0x01CB0D8C MOV X0, X8
	0x01CB0D90 BL 0x1B6EA0C
	0x01CB0D94 ADRP X8, 0x229E000
	0x01CB0D98 LDR X8, [X8 + 0xB58]
	0x01CB0D9C MOV X20, X0
	0x01CB0DA0 LDR X1, [X8]
	0x01CB0DA4 BL 0x2BBA47C
	0x01CB0DA8 CBZ X21, 0x1CB0E90
	0x01CB0DAC LDR X8, [X21 + 0x18]
	0x01CB0DB0 CMP W8, 0x1
	0x01CB0DB4 B.LT 0x1CB0E24
	0x01CB0DB8 ADRP X26, 0x229E000
	0x01CB0DBC LDR X26, [X26 + 0xB48]
	0x01CB0DC0 MOV X24, X31
	0x01CB0DC4 AND X8, X8, 0x0
	0x01CB0DC8 ADD X25, X21, 0x20
	0x01CB0DCC CMP X24, W8, UXTW
	0x01CB0DD0 B.CS 0x1CB0E94
	0x01CB0DD4 LDR X0, [X23]
	0x01CB0DD8 LDR X22, [X25, X24, LSL #3]
	0x01CB0DDC LDR W8, [X0 + 0xE0]
	0x01CB0DE0 CBNZ W8, 0x1CB0DE8
	0x01CB0DE4 BL 0x1B6E8F8
	0x01CB0DE8 MOV X0, X22
	0x01CB0DEC MOV X1, X19
	0x01CB0DF0 MOV X2, X31
	0x01CB0DF4 BL 0x3AA0AF0
	0x01CB0DF8 TBNZ X0, 0x0, 0x1CB0E14
	0x01CB0DFC CBZ X22, 0x1CB0E90
	0x01CB0E00 CBZ X20, 0x1CB0E90
	0x01CB0E04 LDR X2, [X26]
	0x01CB0E08 LDRH W1, [X22 + 0x44]
	0x01CB0E0C MOV X0, X20
	0x01CB0E10 BL 0x2BBB5C4
	0x01CB0E14 LDR W8, [X21 + 0x18]
	0x01CB0E18 ADD X24, X24, 0x1
	0x01CB0E1C CMP X24, W8, SXTW
	0x01CB0E20 B.LT 0x1CB0DCC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2574000
	005 Move W8, [X20+1196]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x229F000
	012 Move X0, [X0+448]
	013 Call 0x1B6F7F0
	014 Move X0, 0x229F000
	015 Move X0, [X0+2704]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X20+1196], W8
	019 Move W8, [X19+88]
	020 Compare W8, 0
	021 JumpIfEqual {50}
	022 Move [X19+88], W31
	023 Move X0, X19
	024 Call TeleportationMachine.get_state, X0
	025 Compare W0, 0
	026 JumpIfNotEqual {66}
	027 Move S0, W31
	028 Move X0, X19
	029 Call TeleportationMachine.set_charge, X0, V0
	030 Move W1, 1
	031 Move X0, X19
	032 Call TeleportationMachine.set_state, X0, X1
	033 Move X0, [X19+176]
	034 Compare X0, 0
	035 JumpIfEqual {147}
	036 Move X20, [X19+152]
	037 Move X1, X31
	038 Call Transform.get_position, X0
	039 Compare X20, 0
	040 JumpIfEqual {147}
	041 Move S3, 1
	042 Move W1, 1
	043 Move X0, X20
	044 Move X2, X31
	045 Call RandomSFX.Play, X0, X1, V0, X2
	046 Move X0, X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X20, 0x229F000
	051 Move X20, [X20+448]
	052 Move X0, [X20]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1B6F8F8
	057 Move X0, X19
	058 Move X1, X31
	059 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	060 Move X0, [X19+56]
	061 Compare X0, 0
	062 JumpIfEqual {147}
	063 Move X1, X31
	064 Call NetworkRunner.get_Stage, X0
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 Return 
	070 Move X0, [X19+64]
	071 Compare X0, 0
	072 JumpIfEqual {147}
	073 Move X1, X31
	074 Call NetworkObject.GetLocalAuthorityMask, X0
	075 And W31, W0, 7
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {23}
	080 Move X8, [X19+56]
	081 Compare X8, 0
	082 JumpIfEqual {147}
	083 Move X0, [X8+80]
	084 Compare X0, 0
	085 JumpIfEqual {147}
	086 Move X1, X31
	087 Call Simulation.HasAnyActiveConnections, X0
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {66}
	092 Move X8, [X19+56]
	093 Compare X8, 0
	094 JumpIfEqual {147}
	095 Move X0, [X8+80]
	096 Move W1, 8
	097 Move X2, X31
	098 Call SimulationMessage.Allocate, X0, X1
	099 Move X20, X0
	100 Move W0, 1
	101 Move X1, X31
	102 Call Assert.Check, X0
	103 Move X8, [X19+64]
	104 Compare X8, 0
	105 JumpIfEqual {147}
	106 Move X8, [X8+32]
	107 Compare X8, 0
	108 JumpIfEqual {127}
	109 Move W0, [X8]
	110 Move X0, [X20]
	111 Move X19, [X19+64]
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {116}
	115 Call 0x1B6F8F8
	116 Move X8, 0x229F000
	117 Move X8, [X8+2704]
	118 Move X1, X19
	119 Move X20, [X31+16]
	120 Move X19, [X31+24]
	121 Move W2, 7
	122 Move X0, [X8]
	123 Move X3, X31
	124 Move X30, [X31+32]
	125 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	126 Return 
	127 Move X0, X31
	128 Move W1, [X19+104]
	129 Move W2, 1
	130 Move X3, X31
	131 Call RpcHeader.Create, X0, X1, X2
	132 Move [X20+28], X0
	133 Compare X20, 0
	134 JumpIfEqual {147}
	135 Move W8, 64
	136 Move [X20+12], W8
	137 Move X0, [X19+56]
	138 Compare X0, 0
	139 JumpIfEqual {147}
	140 Move X1, X20
	141 Move X20, [X31+16]
	142 Move X19, [X31+24]
	143 Move X2, X31
	144 Move X30, [X31+32]
	145 Call NetworkRunner.SendRpc, X0, X1
	146 Return 
	147 Call 0x1B6FA1C

Method: System.Void RPC_PlayChargingParticles()

Disassembly:
	0x01CB0E24 ADRP X22, 0x229E000
	0x01CB0E28 LDRH W21, [X19 + 0x44]
	0x01CB0E2C LDR X22, [X22 + 0xB50]
	0x01CB0E30 ANDS W31, W21, 0xFFFF
	0x01CB0E34 B.EQ 0x1CB0E50
	0x01CB0E38 CBZ X20, 0x1CB0E90
	0x01CB0E3C LDR X2, [X22]
	0x01CB0E40 MOV X0, X20
	0x01CB0E44 MOV W1, W21
	0x01CB0E48 BL 0x2BBAB24
	0x01CB0E4C TBZ X0, 0x0, 0x1CB0E70
	0x01CB0E50 MOV X0, X31
	0x01CB0E54 BL 0x31DFE80
	0x01CB0E58 STP X0, X1, [X31]
	0x01CB0E5C ADD X0, X31, 0x0
	0x01CB0E60 MOV X1, X31
	0x01CB0E64 BL 0x31E1EE0
	0x01CB0E68 MOV W21, W0
	0x01CB0E6C B 0x1CB0E30
	0x01CB0E70 STRH W21, [X19 + 0x44]
	0x01CB0E74 LDP X20, X19, [X31 + 0x50]
	0x01CB0E78 LDP X22, X21, [X31 + 0x40]
	0x01CB0E7C LDP X24, X23, [X31 + 0x30]
	0x01CB0E80 LDP X26, X25, [X31 + 0x20]
	0x01CB0E84 LDR X30, [X31 + 0x10]
	0x01CB0E88 ADD X31, X31, 0x60
	0x01CB0E8C RET
	0x01CB0E90 BL 0x1B6EA1C
	0x01CB0E94 BL 0x1B6EA24
	0x01CB0E98 STR X30, [X31 - 0x30]!
	0x01CB0E9C STP X22, X21, [X31 + 0x10]
	0x01CB0EA0 STP X20, X19, [X31 + 0x20]
	0x01CB0EA4 ADRP X22, 0x2573000
	0x01CB0EA8 ADRP X21, 0x229E000
	0x01CB0EAC LDRB W8, [X22 + 0x4C0]
	0x01CB0EB0 LDR X21, [X21 + 0xB08]
	0x01CB0EB4 MOV X19, X1
	0x01CB0EB8 MOV W20, W0
	0x01CB0EBC TBNZ X8, 0x0, 0x1CB0EE0
	0x01CB0EC0 ADRP X0, 0x229E000
	0x01CB0EC4 LDR X0, [X0 + 0xB10]
	0x01CB0EC8 BL 0x1B6E7F0
	0x01CB0ECC ADRP X0, 0x229E000
	0x01CB0ED0 LDR X0, [X0 + 0xB08]
	0x01CB0ED4 BL 0x1B6E7F0
	0x01CB0ED8 MOVZ W8, 0x1
	0x01CB0EDC STRB W8, [X22 + 0x4C0]
	0x01CB0EE0 LDR X0, [X21]
	0x01CB0EE4 LDR W8, [X0 + 0xE0]
	0x01CB0EE8 CBNZ W8, 0x1CB0EF4
	0x01CB0EEC BL 0x1B6E8F8
	0x01CB0EF0 LDR X0, [X21]
	0x01CB0EF4 LDR X8, [X0 + 0xB8]
	0x01CB0EF8 LDR X0, [X8]
	0x01CB0EFC CBZ X0, 0x1CB0F24
	0x01CB0F00 ADRP X8, 0x229E000
	0x01CB0F04 LDR X8, [X8 + 0xB10]
	0x01CB0F08 MOV W1, W20
	0x01CB0F0C MOV X2, X19
	0x01CB0F10 LDP X20, X19, [X31 + 0x20]
	0x01CB0F14 LDR X3, [X8]
	0x01CB0F18 LDP X22, X21, [X31 + 0x10]
	0x01CB0F1C LDR X30, [X31], #0x30
	0x01CB0F20 B 0x2845864
	0x01CB0F24 BL 0x1B6EA1C
	0x01CB0F28 MOV X1, X31
	0x01CB0F2C B 0x3A9EEE4
	0x01CB0F30 STR X30, [X31 - 0x30]!
	0x01CB0F34 STP X22, X21, [X31 + 0x10]
	0x01CB0F38 STP X20, X19, [X31 + 0x20]
	0x01CB0F3C ADRP X21, 0x2573000
	0x01CB0F40 ADRP X22, 0x229E000
	0x01CB0F44 ADRP X19, 0x229E000
	0x01CB0F48 ADRP X20, 0x229E000
	0x01CB0F4C LDRB W8, [X21 + 0x4C1]
	0x01CB0F50 LDR X22, [X22 + 0xB70]
	0x01CB0F54 LDR X19, [X19 + 0xB78]
	0x01CB0F58 LDR X20, [X20 + 0xB08]
	0x01CB0F5C TBNZ X8, 0x0, 0x1CB0F8C
	0x01CB0F60 ADRP X0, 0x229E000
	0x01CB0F64 LDR X0, [X0 + 0xB78]
	0x01CB0F68 BL 0x1B6E7F0
	0x01CB0F6C ADRP X0, 0x229E000
	0x01CB0F70 LDR X0, [X0 + 0xB70]
	0x01CB0F74 BL 0x1B6E7F0
	0x01CB0F78 ADRP X0, 0x229E000
	0x01CB0F7C LDR X0, [X0 + 0xB08]
	0x01CB0F80 BL 0x1B6E7F0
	0x01CB0F84 MOVZ W8, 0x1
	0x01CB0F88 STRB W8, [X21 + 0x4C1]
	0x01CB0F8C LDR X0, [X22]
	0x01CB0F90 BL 0x1B6EA0C
	0x01CB0F94 LDR X1, [X19]
	0x01CB0F98 MOV X19, X0
	0x01CB0F9C BL 0x2843588
	0x01CB0FA0 LDR X8, [X20]
	0x01CB0FA4 LDP X22, X21, [X31 + 0x10]
	0x01CB0FA8 LDR X8, [X8 + 0xB8]
	0x01CB0FAC STR X19, [X8]
	0x01CB0FB0 LDP X20, X19, [X31 + 0x20]
	0x01CB0FB4 LDR X30, [X31], #0x30
	0x01CB0FB8 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2574000
	006 Move W8, [X20+1197]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x229F000
	013 Move X0, [X0+448]
	014 Call 0x1B6F7F0
	015 Move X0, 0x229F000
	016 Move X0, [X0+2712]
	017 Call 0x1B6F7F0
	018 Move W8, 1
	019 Move [X20+1197], W8
	020 Move W8, [X19+88]
	021 Compare W8, 0
	022 JumpIfEqual {34}
	023 Move [X19+88], W31
	024 Move X0, [X19+144]
	025 Compare X0, 0
	026 JumpIfEqual {130}
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X1, X31
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call ParticleSystem.Play, X0
	033 Return 
	034 Move X21, 0x229F000
	035 Move X21, [X21+448]
	036 Move X0, [X21]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1B6F8F8
	041 Move X0, X19
	042 Move X1, X31
	043 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	044 Move X0, [X19+56]
	045 Compare X0, 0
	046 JumpIfEqual {130}
	047 Move X1, X31
	048 Call NetworkRunner.get_Stage, X0
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Return 
	055 Move X0, [X19+64]
	056 Compare X0, 0
	057 JumpIfEqual {130}
	058 Move X1, X31
	059 Call NetworkObject.GetLocalAuthorityMask, X0
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {82}
	064 Move X0, [X21]
	065 Move X19, [X19+64]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1B6F8F8
	070 Move X8, 0x229F000
	071 Move X8, [X8+2712]
	072 Move X1, X19
	073 Move X20, [X31+16]
	074 Move X19, [X31+24]
	075 Move W2, 1
	076 Move X0, [X8]
	077 Move X3, X31
	078 Move X30, [X31+32]
	079 Move X21, [X31+40]
	080 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	081 Return 
	082 Move X8, [X19+56]
	083 Compare X8, 0
	084 JumpIfEqual {130}
	085 Move W20, W0
	086 Move X0, [X8+80]
	087 Compare X0, 0
	088 JumpIfEqual {130}
	089 Move X1, X31
	090 Call Simulation.HasAnyActiveConnections, X0
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {129}
	095 Move X8, [X19+56]
	096 Compare X8, 0
	097 JumpIfEqual {130}
	098 Move X0, [X8+80]
	099 Move W1, 8
	100 Move X2, X31
	101 Call SimulationMessage.Allocate, X0, X1
	102 Move X21, X0
	103 Move W0, 1
	104 Move X1, X31
	105 Call Assert.Check, X0
	106 Move X8, [X19+64]
	107 Compare X8, 0
	108 JumpIfEqual {130}
	109 Move X8, [X8+32]
	110 Compare X8, 0
	111 JumpIfEqual {113}
	112 Move W0, [X8]
	113 Move X0, X31
	114 Move W1, [X19+104]
	115 Move W2, 2
	116 Move X3, X31
	117 Call RpcHeader.Create, X0, X1, X2
	118 Move [X21+28], X0
	119 Compare X21, 0
	120 JumpIfEqual {130}
	121 Move W8, 64
	122 Move [X21+12], W8
	123 Move X0, [X19+56]
	124 Compare X0, 0
	125 JumpIfEqual {130}
	126 Move X1, X21
	127 Move X2, X31
	128 Call NetworkRunner.SendRpc, X0, X1
	129 And W31, W20, 7
	130 Call 0x1B6FA1C

Method: System.Void MasterTeleport()

Disassembly:
	0x01CB0058 FMOV S0, W31
	0x01CB005C FMOV S1, W31
	0x01CB0060 FMOV S2, 1
	0x01CB0064 FMOV S3, 1
	0x01CB0068 MOV X0, X31
	0x01CB006C BL 0x3A75B14
	0x01CB0070 MOV X0, X19
	0x01CB0074 MOV X1, X31
	0x01CB0078 BL 0x3A9B084
	0x01CB007C CBZ X0, 0x1CB0098
	0x01CB0080 MOV X1, X31
	0x01CB0084 BL 0x3AA7658
	0x01CB0088 LDR V3, [X19 + 0x80]
	0x01CB008C MOV X0, X31
	0x01CB0090 LDP X30, X19, [X31], #0x10
	0x01CB0094 B 0x3A7567C
	0x01CB0098 BL 0x1B6EA1C
	0x01CB009C FMOV V0.2S, 0x0
	0x01CB00A0 MOVZ W8, 0x40C00000
	0x01CB00A4 MOVZ W9, 0x44160000
	0x01CB00A8 MOV X1, X31
	0x01CB00AC STR D0, [X0 + 0x80]
	0x01CB00B0 STR W8, [X0 + 0x88]
	0x01CB00B4 STR W9, [X0 + 0xC0]
	0x01CB00B8 B 0x1D661D8
	0x01CB00BC STP X30, X19, [X31 - 0x10]!
	0x01CB00C0 LDR V0, [X0 + 0xC4]
	0x01CB00C4 MOV X19, X0
	0x01CB00C8 BL 0x1CAEC9C
	0x01CB00CC LDR W1, [X19 + 0xC8]
	0x01CB00D0 MOV X0, X19
	0x01CB00D4 LDP X30, X19, [X31], #0x10
	0x01CB00D8 B 0x1CAED5C
	0x01CB00DC STP X30, X19, [X31 - 0x10]!
	0x01CB00E0 MOV X19, X0
	0x01CB00E4 BL 0x1CAEC3C
	0x01CB00E8 MOV X0, X19
	0x01CB00EC STR S0, [X19 + 0xC4]
	0x01CB00F0 BL 0x1CAECFC
	0x01CB00F4 STR W0, [X19 + 0xC8]
	0x01CB00F8 LDP X30, X19, [X31], #0x10
	0x01CB00FC RET
	0x01CB0100 STR X30, [X31 - 0x20]!
	0x01CB0104 STP X20, X19, [X31 + 0x10]
	0x01CB0108 ADRP X20, 0x2573000
	0x01CB010C LDRB W8, [X20 + 0x4B1]
	0x01CB0110 MOV X19, X0
	0x01CB0114 TBNZ X8, 0x0, 0x1CB012C
	0x01CB0118 ADRP X0, 0x229E000
	0x01CB011C LDR X0, [X0 + 0xAA8]
	0x01CB0120 BL 0x1B6E7F0
	0x01CB0124 MOVZ W8, 0x1
	0x01CB0128 STRB W8, [X20 + 0x4B1]
	0x01CB012C MOVZ W0, 0x1
	0x01CB0130 MOV X1, X31
	0x01CB0134 MOVZ W20, 0x1
	0x01CB0138 BL 0x1D29EBC
	0x01CB013C CBZ X19, 0x1CB0190
	0x01CB0140 ADRP X9, 0x229E000
	0x01CB0144 LDR X9, [X9 + 0xAA8]
	0x01CB0148 STRB W20, [X19 + 0x58]
	0x01CB014C LDR X8, [X19]
	0x01CB0150 LDR X1, [X9]
	0x01CB0154 LDRB W10, [X8 + 0x130]
	0x01CB0158 LDRB W9, [X1 + 0x130]
	0x01CB015C CMP W10, W9
	0x01CB0160 B.CC 0x1CB0188
	0x01CB0164 LDR X8, [X8 + 0xC8]
	0x01CB0168 ADD X8, X8, X9, 0x3, LSL
	0x01CB016C LDUR X8, [X8 - 0x8]
	0x01CB0170 CMP X8, X1
	0x01CB0174 B.NE 0x1CB0188
	0x01CB0178 MOV X0, X19
	0x01CB017C LDP X20, X19, [X31 + 0x10]
	0x01CB0180 LDR X30, [X31], #0x20
	0x01CB0184 B 0x1CAFC44
	0x01CB0188 MOV X0, X19
	0x01CB018C BL 0x1B6ECDC
	0x01CB0190 BL 0x1B6EA1C
	0x01CB0194 STR X30, [X31 - 0x20]!
	0x01CB0198 STP X20, X19, [X31 + 0x10]
	0x01CB019C ADRP X20, 0x2573000
	0x01CB01A0 LDRB W8, [X20 + 0x4B2]
	0x01CB01A4 MOV X19, X0
	0x01CB01A8 TBNZ X8, 0x0, 0x1CB01C0
	0x01CB01AC ADRP X0, 0x229E000
	0x01CB01B0 LDR X0, [X0 + 0xAA8]
	0x01CB01B4 BL 0x1B6E7F0
	0x01CB01B8 MOVZ W8, 0x1
	0x01CB01BC STRB W8, [X20 + 0x4B2]
	0x01CB01C0 MOVZ W0, 0x1
	0x01CB01C4 MOV X1, X31
	0x01CB01C8 MOVZ W20, 0x1
	0x01CB01CC BL 0x1D29EBC
	0x01CB01D0 CBZ X19, 0x1CB0224
	0x01CB01D4 ADRP X9, 0x229E000
	0x01CB01D8 LDR X9, [X9 + 0xAA8]
	0x01CB01DC STRB W20, [X19 + 0x58]
	0x01CB01E0 LDR X8, [X19]
	0x01CB01E4 LDR X1, [X9]
	0x01CB01E8 LDRB W10, [X8 + 0x130]
	0x01CB01EC LDRB W9, [X1 + 0x130]
	0x01CB01F0 CMP W10, W9
	0x01CB01F4 B.CC 0x1CB021C
	0x01CB01F8 LDR X8, [X8 + 0xC8]
	0x01CB01FC ADD X8, X8, X9, 0x3, LSL
	0x01CB0200 LDUR X8, [X8 - 0x8]
	0x01CB0204 CMP X8, X1
	0x01CB0208 B.NE 0x1CB021C
	0x01CB020C MOV X0, X19
	0x01CB0210 LDP X20, X19, [X31 + 0x10]
	0x01CB0214 LDR X30, [X31], #0x20
	0x01CB0218 B 0x1CAFE24
	0x01CB021C MOV X0, X19
	0x01CB0220 BL 0x1B6ECDC
	0x01CB0224 BL 0x1B6EA1C
	0x01CB0228 STR X30, [X31 - 0x20]!
	0x01CB022C STP X20, X19, [X31 + 0x10]
	0x01CB0230 ADRP X20, 0x2573000
	0x01CB0234 LDRB W8, [X20 + 0x4B3]
	0x01CB0238 MOV X19, X0
	0x01CB023C TBNZ X8, 0x0, 0x1CB0254
	0x01CB0240 ADRP X0, 0x229E000
	0x01CB0244 LDR X0, [X0 + 0xAA8]
	0x01CB0248 BL 0x1B6E7F0
	0x01CB024C MOVZ W8, 0x1
	0x01CB0250 STRB W8, [X20 + 0x4B3]
	0x01CB0254 MOVZ W0, 0x1
	0x01CB0258 MOV X1, X31
	0x01CB025C MOVZ W20, 0x1
	0x01CB0260 BL 0x1D29EBC
	0x01CB0264 CBZ X19, 0x1CB02B8
	0x01CB0268 ADRP X9, 0x229E000
	0x01CB026C LDR X9, [X9 + 0xAA8]
	0x01CB0270 STRB W20, [X19 + 0x58]
	0x01CB0274 LDR X8, [X19]
	0x01CB0278 LDR X1, [X9]
	0x01CB027C LDRB W10, [X8 + 0x130]
	0x01CB0280 LDRB W9, [X1 + 0x130]
	0x01CB0284 CMP W10, W9
	0x01CB0288 B.CC 0x1CB02B0
	0x01CB028C LDR X8, [X8 + 0xC8]
	0x01CB0290 ADD X8, X8, X9, 0x3, LSL
	0x01CB0294 LDUR X8, [X8 - 0x8]
	0x01CB0298 CMP X8, X1
	0x01CB029C B.NE 0x1CB02B0
	0x01CB02A0 MOV X0, X19
	0x01CB02A4 LDP X20, X19, [X31 + 0x10]
	0x01CB02A8 LDR X30, [X31], #0x20
	0x01CB02AC B 0x1CAF4AC
	0x01CB02B0 MOV X0, X19
	0x01CB02B4 BL 0x1B6ECDC
	0x01CB02B8 BL 0x1B6EA1C
	0x01CB02BC STR X30, [X31 - 0x20]!
	0x01CB02C0 STP X20, X19, [X31 + 0x10]
	0x01CB02C4 ADRP X20, 0x2573000
	0x01CB02C8 LDRB W8, [X20 + 0x4B4]
	0x01CB02CC MOV X19, X0
	0x01CB02D0 TBNZ X8, 0x0, 0x1CB02E8
	0x01CB02D4 ADRP X0, 0x229E000
	0x01CB02D8 LDR X0, [X0 + 0xAA8]
	0x01CB02DC BL 0x1B6E7F0
	0x01CB02E0 MOVZ W8, 0x1
	0x01CB02E4 STRB W8, [X20 + 0x4B4]
	0x01CB02E8 MOVZ W0, 0x1
	0x01CB02EC MOV X1, X31
	0x01CB02F0 MOVZ W20, 0x1
	0x01CB02F4 BL 0x1D29EBC
	0x01CB02F8 CBZ X19, 0x1CB034C
	0x01CB02FC ADRP X9, 0x229E000
	0x01CB0300 LDR X9, [X9 + 0xAA8]
	0x01CB0304 STRB W20, [X19 + 0x58]
	0x01CB0308 LDR X8, [X19]
	0x01CB030C LDR X1, [X9]
	0x01CB0310 LDRB W10, [X8 + 0x130]
	0x01CB0314 LDRB W9, [X1 + 0x130]
	0x01CB0318 CMP W10, W9
	0x01CB031C B.CC 0x1CB0344
	0x01CB0320 LDR X8, [X8 + 0xC8]
	0x01CB0324 ADD X8, X8, X9, 0x3, LSL
	0x01CB0328 LDUR X8, [X8 - 0x8]
	0x01CB032C CMP X8, X1
	0x01CB0330 B.NE 0x1CB0344
	0x01CB0334 MOV X0, X19
	0x01CB0338 LDP X20, X19, [X31 + 0x10]
	0x01CB033C LDR X30, [X31], #0x20
	0x01CB0340 B 0x1CAFAC8
	0x01CB0344 MOV X0, X19
	0x01CB0348 BL 0x1B6ECDC
	0x01CB034C BL 0x1B6EA1C
	0x01CB0350 SUB X31, X31, 0x40
	0x01CB0354 STP X30, X21, [X31 + 0x20]
	0x01CB0358 STP X20, X19, [X31 + 0x30]
	0x01CB035C ADRP X21, 0x2573000
	0x01CB0360 ADRP X20, 0x229E000
	0x01CB0364 LDRB W8, [X21 + 0x4B5]
	0x01CB0368 LDR X20, [X20 + 0xA38]
	0x01CB036C MOV X19, X0
	0x01CB0370 TBNZ X8, 0x0, 0x1CB03C4
	0x01CB0374 ADRP X0, 0x229D000
	0x01CB0378 LDR X0, [X0 + 0x8B8]
	0x01CB037C BL 0x1B6E7F0
	0x01CB0380 ADRP X0, 0x229E000
	0x01CB0384 LDR X0, [X0 + 0xAB0]
	0x01CB0388 BL 0x1B6E7F0
	0x01CB038C ADRP X0, 0x229E000
	0x01CB0390 LDR X0, [X0 + 0xAB8]
	0x01CB0394 BL 0x1B6E7F0
	0x01CB0398 ADRP X0, 0x229E000
	0x01CB039C LDR X0, [X0 + 0xAC0]
	0x01CB03A0 BL 0x1B6E7F0
	0x01CB03A4 ADRP X0, 0x229E000
	0x01CB03A8 LDR X0, [X0 + 0xA38]
	0x01CB03AC BL 0x1B6E7F0
	0x01CB03B0 ADRP X0, 0x229E000
	0x01CB03B4 LDR X0, [X0 + 0xAC8]
	0x01CB03B8 BL 0x1B6E7F0
	0x01CB03BC MOVZ W8, 0x1
	0x01CB03C0 STRB W8, [X21 + 0x4B5]
	0x01CB03C4 LDR X0, [X20]
	0x01CB03C8 LDR W8, [X0 + 0xE0]
	0x01CB03CC CBNZ W8, 0x1CB03D8
	0x01CB03D0 BL 0x1B6E8F8
	0x01CB03D4 LDR X0, [X20]
	0x01CB03D8 LDR X8, [X0 + 0xB8]
	0x01CB03DC LDR X0, [X8]
	0x01CB03E0 CBZ X0, 0x1CB04D4
	0x01CB03E4 ADRP X8, 0x229E000
	0x01CB03E8 LDR X8, [X8 + 0xAB8]
	0x01CB03EC LDR W1, [X19 + 0x20]
	0x01CB03F0 LDR X2, [X8]
	0x01CB03F4 BL 0x2894380
	0x01CB03F8 TBZ X0, 0x0, 0x1CB047C
	0x01CB03FC ADRP X8, 0x229E000
	0x01CB0400 LDR X8, [X8 + 0xAC0]
	0x01CB0404 MOVN X9, 0x0
	0x01CB0408 ADD X0, X31, 0x8
	0x01CB040C MOV X1, X31
	0x01CB0410 LDR X8, [X8]
	0x01CB0414 STP X8, X9, [X31 + 0x8]
	0x01CB0418 LDR W8, [X19 + 0x20]
	0x01CB041C STR W8, [X31 + 0x18]
	0x01CB0420 BL 0x321AF98
	0x01CB0424 ADRP X8, 0x229E000
	0x01CB0428 LDR X8, [X8 + 0xAC8]
	0x01CB042C MOV X1, X0
	0x01CB0430 MOV X2, X31
	0x01CB0434 LDR X8, [X8]
	0x01CB0438 MOV X0, X8
	0x01CB043C BL 0x3084780
	0x01CB0440 ADRP X8, 0x229D000
	0x01CB0444 LDR X8, [X8 + 0x8B8]
	0x01CB0448 MOV X19, X0
	0x01CB044C LDR X8, [X8]
	0x01CB0450 LDR W9, [X8 + 0xE0]
	0x01CB0454 CBNZ W9, 0x1CB0460
	0x01CB0458 MOV X0, X8
	0x01CB045C BL 0x1B6E8F8
	0x01CB0460 MOV X0, X19
	0x01CB0464 MOV X1, X31
	0x01CB0468 BL 0x3A6F5F8
	0x01CB046C LDP X20, X19, [X31 + 0x30]
	0x01CB0470 LDP X30, X21, [X31 + 0x20]
	0x01CB0474 ADD X31, X31, 0x40
	0x01CB0478 RET
	0x01CB047C LDR X0, [X20]
	0x01CB0480 LDR W8, [X0 + 0xE0]
	0x01CB0484 CBNZ W8, 0x1CB0490
	0x01CB0488 BL 0x1B6E8F8
	0x01CB048C LDR X0, [X20]
	0x01CB0490 LDR X8, [X0 + 0xB8]
	0x01CB0494 LDR W21, [X19 + 0x20]
	0x01CB0498 MOV X0, X19
	0x01CB049C MOV X1, X31
	0x01CB04A0 LDR X20, [X8]
	0x01CB04A4 BL 0x3A9B084
	0x01CB04A8 CBZ X20, 0x1CB04D4

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+64], D12
	003 Move [X31+80], D11
	004 Move [X31+88], D10
	005 Move [X31+96], D9
	006 Move [X31+104], D8
	007 Move [X31+112], X30
	008 Move [X31+120], X25
	009 Move [X31+128], X24
	010 Move [X31+136], X23
	011 Move [X31+144], X22
	012 Move [X31+152], X21
	013 Move [X31+160], X20
	014 Move [X31+168], X19
	015 Move X20, 0x2574000
	016 Move W8, [X20+1198]
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {57}
	022 Move X0, 0x229F000
	023 Move X0, [X0+616]
	024 Call 0x1B6F7F0
	025 Move X0, 0x229F000
	026 Move X0, [X0+2584]
	027 Call 0x1B6F7F0
	028 Move X0, 0x229F000
	029 Move X0, [X0+2592]
	030 Call 0x1B6F7F0
	031 Move X0, 0x229F000
	032 Move X0, [X0+2600]
	033 Call 0x1B6F7F0
	034 Move X0, 0x229F000
	035 Move X0, [X0+1792]
	036 Call 0x1B6F7F0
	037 Move X0, 0x229F000
	038 Move X0, [X0+2608]
	039 Call 0x1B6F7F0
	040 Move X0, 0x229F000
	041 Move X0, [X0+1784]
	042 Call 0x1B6F7F0
	043 Move X0, 0x229F000
	044 Move X0, [X0+1776]
	045 Call 0x1B6F7F0
	046 Move X0, 0x229E000
	047 Move X0, [X0+1144]
	048 Call 0x1B6F7F0
	049 Move X0, 0x229E000
	050 Move X0, [X0+1216]
	051 Call 0x1B6F7F0
	052 Move X0, 0x229F000
	053 Move X0, [X0+2616]
	054 Call 0x1B6F7F0
	055 Move W8, 1
	056 Move [X20+1198], W8
	057 Move X0, X19
	058 Move X1, X31
	059 Move [X31+72], X31
	060 Move [X31+32], X31
	061 Move [X31+40], X31
	062 Move [X31+48], X31
	063 Move [X31+24], X31
	064 Call Component.get_transform, X0
	065 Compare X0, 0
	066 JumpIfEqual {273}
	067 Move X22, 0x229E000
	068 Move X20, 0x229F000
	069 Move X21, 0x229F000
	070 Move X22, [X22+1216]
	071 Move X20, [X20+1776]
	072 Move X21, [X21+1784]
	073 Move X1, X31
	074 Call Transform.get_position, X0
	075 Move X0, [X22]
	076 Move V10, [X19+128]
	077 Move V8, V0
	078 Move V9, V1
	079 Move W8, [X0+224]
	080 Move V11, V2
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1B6F8F8
	084 Move V0, V8
	085 Move V1, V9
	086 Move V2, V11
	087 Move V3, V10
	088 Move X0, X31
	089 Call Physics.OverlapSphere, X0, V0
	090 Move X8, [X20]
	091 Move X20, X0
	092 Move X0, X8
	093 Call 0x1B6FA0C
	094 Move X1, [X21]
	095 Move X19, X0
	096 Call List`1<Object>..ctor, X0
	097 Compare X20, 0
	098 JumpIfEqual {273}
	099 Move W8, [X20+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X23, 0x229E000
	102 Move X24, 0x229F000
	103 Move X25, 0x229F000
	104 Move X23, [X23+1144]
	105 Move X24, [X24+616]
	106 Move X25, [X25+1792]
	107 Move W22, W31
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Add X8, X20, W22
	110 Move X0, [X8+32]
	111 Compare X0, 0
	112 JumpIfEqual {273}
	113 Move X1, X31
	114 Call Collider.get_attachedRigidbody, X0
	115 Move X8, [X23]
	116 Move X21, X0
	117 Move W9, [X8+224]
	118 Compare W9, 0
	119 JumpIfNotEqual {122}
	120 Move X0, X8
	121 Call 0x1B6F8F8
	122 Move X0, X21
	123 Move X1, X31
	124 Move X2, X31
	125 Call Object.op_Equality, X0, X1
	126 Move TEMP, X0
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfEqual {172}
	130 Compare X21, 0
	131 JumpIfEqual {273}
	132 Move X1, [X24]
	133 Move X0, X21
	134 Call 0x2090DE8, X0
	135 Move X8, [X23]
	136 Move X21, X0
	137 Move W9, [X8+224]
	138 Compare W9, 0
	139 JumpIfNotEqual {142}
	140 Move X0, X8
	141 Call 0x1B6F8F8
	142 Move X0, X21
	143 Move X1, X31
	144 Move X2, X31
	145 Call Object.op_Inequality, X0, X1
	146 Move TEMP, X0
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfNotEqual {172}
	150 Compare X19, 0
	151 JumpIfEqual {273}
	152 Move W10, [X19+28]
	153 Move X8, [X19+16]
	154 Move X9, [X25]
	155 Add W10, W10, 1
	156 Move [X19+28], W10
	157 Compare X8, 0
	158 JumpIfEqual {273}
	159 NotImplemented "Instruction LDRSW not yet implemented."
	160 Move W11, [X8+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Add W9, W10, 1
	163 Add X8, X8, X10
	164 Move [X19+24], W9
	165 Move [X8+32], X21
	166 Move X8, [X9+32]
	167 Move X0, X19
	168 Move X1, X21
	169 Move X8, [X8+192]
	170 Move X2, [X8+112]
	171 Call List`1<Object>.AddWithResize, X0, X1
	172 Move W8, [X20+24]
	173 Add W22, W22, 1
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move X8, 0x229F000
	176 Move X8, [X8+2616]
	177 Move X0, [X8]
	178 Move W8, [X0+224]
	179 Compare W8, 0
	180 JumpIfNotEqual {182}
	181 Call 0x1B6F8F8
	182 Add X1, X31, 72
	183 Move W0, 1
	184 Call TeleportTarget.TryGetTeleportTarget, X0, X1
	185 Move TEMP, X0
	186 And TEMP, TEMP, 1
	187 Compare TEMP, 1
	188 JumpIfNotEqual {258}
	189 Compare X19, 0
	190 JumpIfEqual {273}
	191 Move X8, 0x229F000
	192 Move X8, [X8+2608]
	193 Move X0, X19
	194 Move X1, [X8]
	195 Add X8, X31, 0
	196 Call List`1<Object>.GetEnumerator, X0
	197 Move V0, [X31]
	198 Move X8, [X31+16]
	199 Move X20, 0x229F000
	200 Move X20, [X20+2592]
	201 Move [X31+2], V0
	202 Move [X31+48], X8
	203 Move S12, W31
	204 Move X1, [X20]
	205 Add X0, X31, 32
	206 Call Enumerator<Object>.MoveNext, X0
	207 Move TEMP, X0
	208 And TEMP, TEMP, 1
	209 Compare TEMP, 1
	210 JumpIfNotEqual {253}
	211 Move X19, [X31+48]
	212 Compare X19, 0
	213 JumpIfEqual {275}
	214 Move X0, X19
	215 Move X1, X31
	216 Call GrabbableItem.get_attachedAnchorId, X0
	217 Move [X31+24], X0
	218 Add X0, X31, 24
	219 Move X1, X31
	220 Call NetworkBehaviourId.get_IsValid, X0
	221 Move TEMP, X0
	222 And TEMP, TEMP, 1
	223 Compare TEMP, 1
	224 JumpIfEqual {204}
	225 Move X0, [X31+72]
	226 Compare X0, 0
	227 JumpIfEqual {276}
	228 Move X1, X31
	229 Call Component.get_transform, X0
	230 Compare X0, 0
	231 JumpIfEqual {277}
	232 Move X1, X31
	233 Call Transform.get_position, X0
	234 Move V8, V0
	235 Move V9, V1
	236 Move V10, V2
	237 Move S0, -0.5
	238 Move S1, 0.5
	239 Move X0, X31
	240 Call Random.Range, V0, V1
	241 Move V11, V0
	242 Move S0, -0.5
	243 Move S1, 0.5
	244 Move X0, X31
	245 Call Random.Range, V0, V1
	246 Add S3, S8, S11
	247 Add S1, S9, S12
	248 Add S2, S10, S0
	249 Move X0, X19
	250 Move V0, V3
	251 Move X1, X31
	252 Call GrabbableItem.RPC_Teleport, X0, X1
	253 Move X8, 0x229F000
	254 Move X8, [X8+2584]
	255 Add X0, X31, 32
	256 Move X1, [X8]
	257 Call Enumerator<Object>.Dispose, X0
	258 Move X20, [X31+160]
	259 Move X19, [X31+168]
	260 Move X22, [X31+144]
	261 Move X21, [X31+152]
	262 Move X24, [X31+128]
	263 Move X23, [X31+136]
	264 Move X30, [X31+112]
	265 Move X25, [X31+120]
	266 Move D9, [X31+96]
	267 Move D8, [X31+104]
	268 Move D11, [X31+80]
	269 Move D10, [X31+88]
	270 Move V12, [X31+64]
	271 Add X31, X31, 176
	272 Return 
	273 Call 0x1B6FA1C
	274 Call 0x1B6FA24
	275 Call 0x1B6FA1C
	276 Call 0x1B6FA1C
	277 Call 0x1B6FA1C
	278 Move X19, X0
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Move X0, X19
	281 Call 0x3D1A840
	282 Move X20, [X0]
	283 Call 0x3D1A850
	284 Move X8, 0x229F000
	285 Move X8, [X8+2584]
	286 Add X0, X31, 32
	287 Move X1, [X8]
	288 Call Enumerator<Object>.Dispose, X0
	289 Compare X20, 0
	290 JumpIfEqual {258}
	291 Move X0, X20
	292 Call 0x1B6FA14
	293 Move X20, X31
	294 Move X19, X0
	295 Move X8, 0x229F000
	296 Move X8, [X8+2584]
	297 Move X1, [X8]
	298 Add X0, X31, 32
	299 Call Enumerator<Object>.Dispose, X0
	300 Compare X20, 0
	301 JumpIfNotEqual {304}
	302 Move X0, X19
	303 Call 0x1C8518C
	304 Move X0, X20
	305 Call 0x1B6FA14
	306 Call 0x18F56A8

Method: System.Void RPC_Teleport()

Disassembly:
	0x01CB04AC ADRP X8, 0x229E000
	0x01CB04B0 LDR X8, [X8 + 0xAB0]
	0x01CB04B4 MOV X2, X0
	0x01CB04B8 MOV X0, X20
	0x01CB04BC MOV W1, W21
	0x01CB04C0 LDR X3, [X8]
	0x01CB04C4 LDP X20, X19, [X31 + 0x30]
	0x01CB04C8 LDP X30, X21, [X31 + 0x20]
	0x01CB04CC ADD X31, X31, 0x40
	0x01CB04D0 B 0x289418C
	0x01CB04D4 BL 0x1B6EA1C
	0x01CB04D8 STP X30, X21, [X31 - 0x20]!
	0x01CB04DC STP X20, X19, [X31 + 0x10]
	0x01CB04E0 ADRP X21, 0x2573000
	0x01CB04E4 ADRP X20, 0x229E000
	0x01CB04E8 LDRB W8, [X21 + 0x4B6]
	0x01CB04EC LDR X20, [X20 + 0xA38]
	0x01CB04F0 MOV X19, X0
	0x01CB04F4 TBNZ X8, 0x0, 0x1CB0524
	0x01CB04F8 ADRP X0, 0x229E000
	0x01CB04FC LDR X0, [X0 + 0xAB8]
	0x01CB0500 BL 0x1B6E7F0
	0x01CB0504 ADRP X0, 0x229E000
	0x01CB0508 LDR X0, [X0 + 0xAD0]
	0x01CB050C BL 0x1B6E7F0
	0x01CB0510 ADRP X0, 0x229E000
	0x01CB0514 LDR X0, [X0 + 0xA38]
	0x01CB0518 BL 0x1B6E7F0
	0x01CB051C MOVZ W8, 0x1
	0x01CB0520 STRB W8, [X21 + 0x4B6]
	0x01CB0524 LDR X0, [X20]
	0x01CB0528 LDR W8, [X0 + 0xE0]
	0x01CB052C CBNZ W8, 0x1CB0538
	0x01CB0530 BL 0x1B6E8F8
	0x01CB0534 LDR X0, [X20]
	0x01CB0538 LDR X8, [X0 + 0xB8]
	0x01CB053C LDR X0, [X8]
	0x01CB0540 CBZ X0, 0x1CB05A4
	0x01CB0544 ADRP X8, 0x229E000
	0x01CB0548 LDR X8, [X8 + 0xAB8]
	0x01CB054C LDR W1, [X19 + 0x20]
	0x01CB0550 LDR X2, [X8]
	0x01CB0554 BL 0x2894380
	0x01CB0558 TBZ X0, 0x0, 0x1CB0598
	0x01CB055C LDR X0, [X20]
	0x01CB0560 LDR W8, [X0 + 0xE0]
	0x01CB0564 CBNZ W8, 0x1CB0570
	0x01CB0568 BL 0x1B6E8F8
	0x01CB056C LDR X0, [X20]
	0x01CB0570 LDR X8, [X0 + 0xB8]
	0x01CB0574 LDR X0, [X8]
	0x01CB0578 CBZ X0, 0x1CB05A4
	0x01CB057C ADRP X8, 0x229E000
	0x01CB0580 LDR W1, [X19 + 0x20]
	0x01CB0584 LDR X8, [X8 + 0xAD0]
	0x01CB0588 LDP X20, X19, [X31 + 0x10]
	0x01CB058C LDR X2, [X8]
	0x01CB0590 LDP X30, X21, [X31], #0x20
	0x01CB0594 B 0x2895578
	0x01CB0598 LDP X20, X19, [X31 + 0x10]
	0x01CB059C LDP X30, X21, [X31], #0x20
	0x01CB05A0 RET
	0x01CB05A4 BL 0x1B6EA1C
	0x01CB05A8 MOV X1, X31
	0x01CB05AC B 0x3A9EEE4
	0x01CB05B0 STR X30, [X31 - 0x30]!
	0x01CB05B4 STP X22, X21, [X31 + 0x10]
	0x01CB05B8 STP X20, X19, [X31 + 0x20]
	0x01CB05BC ADRP X21, 0x2573000
	0x01CB05C0 ADRP X22, 0x229E000
	0x01CB05C4 ADRP X19, 0x229E000
	0x01CB05C8 ADRP X20, 0x229E000
	0x01CB05CC LDRB W8, [X21 + 0x4B8]
	0x01CB05D0 LDR X22, [X22 + 0xAD8]
	0x01CB05D4 LDR X19, [X19 + 0xAE0]
	0x01CB05D8 LDR X20, [X20 + 0xA38]
	0x01CB05DC TBNZ X8, 0x0, 0x1CB060C
	0x01CB05E0 ADRP X0, 0x229E000
	0x01CB05E4 LDR X0, [X0 + 0xAE0]
	0x01CB05E8 BL 0x1B6E7F0
	0x01CB05EC ADRP X0, 0x229E000
	0x01CB05F0 LDR X0, [X0 + 0xAD8]
	0x01CB05F4 BL 0x1B6E7F0
	0x01CB05F8 ADRP X0, 0x229E000
	0x01CB05FC LDR X0, [X0 + 0xA38]
	0x01CB0600 BL 0x1B6E7F0
	0x01CB0604 MOVZ W8, 0x1
	0x01CB0608 STRB W8, [X21 + 0x4B8]
	0x01CB060C LDR X0, [X22]
	0x01CB0610 BL 0x1B6EA0C
	0x01CB0614 LDR X1, [X19]
	0x01CB0618 MOV X19, X0
	0x01CB061C BL 0x28938D4
	0x01CB0620 LDR X8, [X20]
	0x01CB0624 LDP X22, X21, [X31 + 0x10]
	0x01CB0628 LDR X8, [X8 + 0xB8]
	0x01CB062C STR X19, [X8]
	0x01CB0630 LDP X20, X19, [X31 + 0x20]
	0x01CB0634 LDR X30, [X31], #0x30
	0x01CB0638 RET
	0x01CB063C STR X30, [X31 - 0x30]!
	0x01CB0640 STP X22, X21, [X31 + 0x10]
	0x01CB0644 STP X20, X19, [X31 + 0x20]
	0x01CB0648 ADRP X20, 0x2573000
	0x01CB064C ADRP X22, 0x229E000
	0x01CB0650 ADRP X21, 0x229D000
	0x01CB0654 LDRB W8, [X20 + 0x4B9]
	0x01CB0658 LDR X22, [X22 + 0xAE8]
	0x01CB065C LDR X21, [X21 + 0x478]
	0x01CB0660 MOV X19, X0
	0x01CB0664 TBNZ X8, 0x0, 0x1CB06A0
	0x01CB0668 ADRP X0, 0x229D000
	0x01CB066C LDR X0, [X0 + 0x800]
	0x01CB0670 BL 0x1B6E7F0
	0x01CB0674 ADRP X0, 0x229E000
	0x01CB0678 LDR X0, [X0 + 0xAE8]
	0x01CB067C BL 0x1B6E7F0
	0x01CB0680 ADRP X0, 0x229D000
	0x01CB0684 LDR X0, [X0 + 0x478]
	0x01CB0688 BL 0x1B6E7F0
	0x01CB068C ADRP X0, 0x229E000
	0x01CB0690 LDR X0, [X0 + 0xAF0]
	0x01CB0694 BL 0x1B6E7F0
	0x01CB0698 MOVZ W8, 0x1
	0x01CB069C STRB W8, [X20 + 0x4B9]
	0x01CB06A0 LDR X8, [X22]
	0x01CB06A4 LDR X0, [X21]
	0x01CB06A8 LDR X8, [X8 + 0xB8]
	0x01CB06AC LDR W9, [X0 + 0xE0]
	0x01CB06B0 LDR X20, [X8]
	0x01CB06B4 CBNZ W9, 0x1CB06BC
	0x01CB06B8 BL 0x1B6E8F8
	0x01CB06BC MOV X0, X20
	0x01CB06C0 MOV X1, X31
	0x01CB06C4 MOV X2, X31
	0x01CB06C8 BL 0x3A9D6EC
	0x01CB06CC TBZ X0, 0x0, 0x1CB070C
	0x01CB06D0 MOV X0, X19
	0x01CB06D4 MOV X1, X31
	0x01CB06D8 BL 0x3A9B0C0
	0x01CB06DC LDR X8, [X21]
	0x01CB06E0 MOV X19, X0
	0x01CB06E4 LDR W9, [X8 + 0xE0]
	0x01CB06E8 CBNZ W9, 0x1CB06F4
	0x01CB06EC MOV X0, X8
	0x01CB06F0 BL 0x1B6E8F8
	0x01CB06F4 MOV X0, X19
	0x01CB06F8 LDP X20, X19, [X31 + 0x20]
	0x01CB06FC LDP X22, X21, [X31 + 0x10]
	0x01CB0700 MOV X1, X31
	0x01CB0704 LDR X30, [X31], #0x30
	0x01CB0708 B 0x3AA15F4
	0x01CB070C LDR X8, [X22]
	0x01CB0710 ADRP X9, 0x229D000
	0x01CB0714 ADRP X21, 0x229E000
	0x01CB0718 LDR X8, [X8 + 0xB8]
	0x01CB071C LDR X9, [X9 + 0x800]
	0x01CB0720 STR X19, [X8]
	0x01CB0724 LDR X0, [X9]
	0x01CB0728 LDR X20, [X19 + 0x28]
	0x01CB072C LDR W8, [X0 + 0xE0]
	0x01CB0730 LDR X21, [X21 + 0xAF0]
	0x01CB0734 CBNZ W8, 0x1CB073C
	0x01CB0738 BL 0x1B6E8F8
	0x01CB073C MOV X0, X31
	0x01CB0740 BL 0x3A6A728
	0x01CB0744 LDR X8, [X21]
	0x01CB0748 MOV X1, X0
	0x01CB074C MOV X2, X31
	0x01CB0750 MOV X0, X8
	0x01CB0754 BL 0x3084780
	0x01CB0758 CBZ X20, 0x1CB07A0
	0x01CB075C LDR X8, [X20]
	0x01CB0760 MOV X1, X0
	0x01CB0764 MOV X0, X20
	0x01CB0768 LDR X9, [X8 + 0x558]
	0x01CB076C LDR X2, [X8 + 0x560]
	0x01CB0770 BLR X9
	0x01CB0774 LDR X0, [X19 + 0x30]
	0x01CB0778 CBZ X0, 0x1CB07A0
	0x01CB077C MOV X1, X31
	0x01CB0780 BL 0x3A9B0C0
	0x01CB0784 CBZ X0, 0x1CB07A0
	0x01CB0788 LDP X20, X19, [X31 + 0x20]
	0x01CB078C LDP X22, X21, [X31 + 0x10]
	0x01CB0790 MOV W1, W31
	0x01CB0794 MOV X2, X31
	0x01CB0798 LDR X30, [X31], #0x30
	0x01CB079C B 0x3A9D9A8
	0x01CB07A0 BL 0x1B6EA1C
	0x01CB07A4 STR X30, [X31 - 0x30]!
	0x01CB07A8 STP X22, X21, [X31 + 0x10]
	0x01CB07AC STP X20, X19, [X31 + 0x20]
	0x01CB07B0 ADRP X22, 0x2573000
	0x01CB07B4 ADRP X21, 0x229E000
	0x01CB07B8 ADRP X20, 0x229D000
	0x01CB07BC LDRB W8, [X22 + 0x4BA]
	0x01CB07C0 LDR X21, [X21 + 0xAE8]
	0x01CB07C4 LDR X20, [X20 + 0x478]
	0x01CB07C8 MOV X19, X0
	0x01CB07CC TBNZ X8, 0x0, 0x1CB07F0
	0x01CB07D0 ADRP X0, 0x229E000
	0x01CB07D4 LDR X0, [X0 + 0xAE8]
	0x01CB07D8 BL 0x1B6E7F0
	0x01CB07DC ADRP X0, 0x229D000
	0x01CB07E0 LDR X0, [X0 + 0x478]
	0x01CB07E4 BL 0x1B6E7F0
	0x01CB07E8 MOVZ W8, 0x1
	0x01CB07EC STRB W8, [X22 + 0x4BA]
	0x01CB07F0 LDR X8, [X21]
	0x01CB07F4 LDR X0, [X20]
	0x01CB07F8 LDR X8, [X8 + 0xB8]
	0x01CB07FC LDR W9, [X0 + 0xE0]
	0x01CB0800 LDR X20, [X8]
	0x01CB0804 CBNZ W9, 0x1CB080C
	0x01CB0808 BL 0x1B6E8F8
	0x01CB080C MOV X0, X20
	0x01CB0810 MOV X1, X19
	0x01CB0814 MOV X2, X31
	0x01CB0818 BL 0x3AA0AF0
	0x01CB081C TBZ X0, 0x0, 0x1CB082C
	0x01CB0820 LDR X8, [X21]
	0x01CB0824 LDR X8, [X8 + 0xB8]
	0x01CB0828 STR X31, [X8]
	0x01CB082C LDP X20, X19, [X31 + 0x20]
	0x01CB0830 LDP X22, X21, [X31 + 0x10]
	0x01CB0834 LDR X30, [X31], #0x30
	0x01CB0838 RET
	0x01CB083C STR X30, [X31 - 0x30]!
	0x01CB0840 STP X22, X21, [X31 + 0x10]
	0x01CB0844 STP X20, X19, [X31 + 0x20]
	0x01CB0848 ADRP X22, 0x2573000
	0x01CB084C ADRP X21, 0x229E000
	0x01CB0850 LDRB W8, [X22 + 0x4BB]
	0x01CB0854 LDR X21, [X21 + 0xAE8]
	0x01CB0858 MOV W20, W1
	0x01CB085C MOV X19, X0
	0x01CB0860 TBNZ X8, 0x0, 0x1CB0878
	0x01CB0864 ADRP X0, 0x229E000
	0x01CB0868 LDR X0, [X0 + 0xAE8]
	0x01CB086C BL 0x1B6E7F0
	0x01CB0870 MOVZ W8, 0x1
	0x01CB0874 STRB W8, [X22 + 0x4BB]
	0x01CB0878 LDR X8, [X21]
	0x01CB087C LDR X8, [X8 + 0xB8]
	0x01CB0880 LDR X8, [X8]
	0x01CB0884 CBZ X8, 0x1CB092C
	0x01CB0888 LDR X0, [X8 + 0x20]
	0x01CB088C CBZ X0, 0x1CB092C
	0x01CB0890 AND W1, W20, 0x1
	0x01CB0894 MOV X2, X31
	0x01CB0898 BL 0x3A9D9A8
	0x01CB089C MOV X0, X19
	0x01CB08A0 MOV X1, X31
	0x01CB08A4 BL 0x30905F0
	0x01CB08A8 LDR X8, [X21]
	0x01CB08AC LDR X8, [X8 + 0xB8]
	0x01CB08B0 LDR X8, [X8]
	0x01CB08B4 CBZ X8, 0x1CB092C
	0x01CB08B8 MOV W20, W0
	0x01CB08BC LDR X0, [X8 + 0x30]
	0x01CB08C0 CBZ X0, 0x1CB092C
	0x01CB08C4 MOV X1, X31
	0x01CB08C8 BL 0x3A9B0C0
	0x01CB08CC CBZ X0, 0x1CB092C
	0x01CB08D0 EOR W8, W20, 0x1
	0x01CB08D4 AND W1, W8, 0x1
	0x01CB08D8 MOV X2, X31
	0x01CB08DC BL 0x3A9D9A8
	0x01CB08E0 TBZ X20, 0x0, 0x1CB08F4
	0x01CB08E4 LDP X20, X19, [X31 + 0x20]
	0x01CB08E8 LDP X22, X21, [X31 + 0x10]
	0x01CB08EC LDR X30, [X31], #0x30
	0x01CB08F0 RET
	0x01CB08F4 LDR X8, [X21]
	0x01CB08F8 LDR X8, [X8 + 0xB8]
	0x01CB08FC LDR X8, [X8]
	0x01CB0900 CBZ X8, 0x1CB092C
	0x01CB0904 LDR X0, [X8 + 0x30]
	0x01CB0908 CBZ X0, 0x1CB092C
	0x01CB090C LDR X8, [X0]
	0x01CB0910 MOV X1, X19
	0x01CB0914 LDP X20, X19, [X31 + 0x20]
	0x01CB0918 LDP X22, X21, [X31 + 0x10]
	0x01CB091C LDR X3, [X8 + 0x558]
	0x01CB0920 LDR X2, [X8 + 0x560]
	0x01CB0924 LDR X30, [X31], #0x30
	0x01CB0928 BR X3
	0x01CB092C BL 0x1B6EA1C
	0x01CB0930 MOV X1, X31
	0x01CB0934 B 0x3A9EEE4
	0x01CB0938 STP X30, X21, [X31 - 0x20]!
	0x01CB093C STP X20, X19, [X31 + 0x10]
	0x01CB0940 ADRP X21, 0x2573000
	0x01CB0944 ADRP X20, 0x229D000
	0x01CB0948 LDRB W8, [X21 + 0x4BC]
	0x01CB094C LDR X20, [X20 + 0x478]
	0x01CB0950 MOV X19, X0
	0x01CB0954 TBNZ X8, 0x0, 0x1CB096C
	0x01CB0958 ADRP X0, 0x229D000
	0x01CB095C LDR X0, [X0 + 0x478]
	0x01CB0960 BL 0x1B6E7F0
	0x01CB0964 MOVZ W8, 0x1
	0x01CB0968 STRB W8, [X21 + 0x4BC]
	0x01CB096C MOV X0, X31
	0x01CB0970 BL 0x3A6D538
	0x01CB0974 LDR X8, [X20]
	0x01CB0978 MOV X20, X0
	0x01CB097C LDR W9, [X8 + 0xE0]
	0x01CB0980 CBNZ W9, 0x1CB098C
	0x01CB0984 MOV X0, X8
	0x01CB0988 BL 0x1B6E8F8
	0x01CB098C MOV X0, X20
	0x01CB0990 MOV X1, X31
	0x01CB0994 BL 0x3AA0BFC
	0x01CB0998 TBZ X0, 0x0, 0x1CB09E4
	0x01CB099C MOV X0, X19
	0x01CB09A0 MOV X1, X31
	0x01CB09A4 BL 0x3A9B084
	0x01CB09A8 MOV X19, X0
	0x01CB09AC MOV X0, X31
	0x01CB09B0 BL 0x3A6D538
	0x01CB09B4 CBZ X0, 0x1CB09F0
	0x01CB09B8 MOV X1, X31
	0x01CB09BC BL 0x3A9B084
	0x01CB09C0 CBZ X0, 0x1CB09F0
	0x01CB09C4 MOV X1, X31
	0x01CB09C8 BL 0x3AA7658
	0x01CB09CC CBZ X19, 0x1CB09F0
	0x01CB09D0 MOV X0, X19
	0x01CB09D4 LDP X20, X19, [X31 + 0x10]
	0x01CB09D8 MOV X1, X31
	0x01CB09DC LDP X30, X21, [X31], #0x20
	0x01CB09E0 B 0x3AA76F8
	0x01CB09E4 LDP X20, X19, [X31 + 0x10]
	0x01CB09E8 LDP X30, X21, [X31], #0x20
	0x01CB09EC RET
	0x01CB09F0 BL 0x1B6EA1C
	0x01CB09F4 MOV X1, X31
	0x01CB09F8 B 0x3A9EEE4
	0x01CB09FC STR X30, [X31 - 0x20]!
	0x01CB0A00 STP X20, X19, [X31 + 0x10]
	0x01CB0A04 ADRP X20, 0x2573000
	0x01CB0A08 LDRB W8, [X20 + 0x4BD]
	0x01CB0A0C MOV X19, X1
	0x01CB0A10 TBNZ X8, 0x0, 0x1CB0A40
	0x01CB0A14 ADRP X0, 0x229D000
	0x01CB0A18 LDR X0, [X0 + 0x800]
	0x01CB0A1C BL 0x1B6E7F0
	0x01CB0A20 ADRP X0, 0x229E000
	0x01CB0A24 LDR X0, [X0 + 0xAF8]
	0x01CB0A28 BL 0x1B6E7F0
	0x01CB0A2C ADRP X0, 0x229E000
	0x01CB0A30 LDR X0, [X0 + 0xB00]
	0x01CB0A34 BL 0x1B6E7F0
	0x01CB0A38 MOVZ W8, 0x1
	0x01CB0A3C STRB W8, [X20 + 0x4BD]
	0x01CB0A40 CBZ X19, 0x1CB0AA0
	0x01CB0A44 ADRP X8, 0x229E000
	0x01CB0A48 LDR X8, [X8 + 0xAF8]
	0x01CB0A4C MOV X0, X19
	0x01CB0A50 MOV X2, X31
	0x01CB0A54 LDR X1, [X8]
	0x01CB0A58 BL 0x3A9B614
	0x01CB0A5C TBZ X0, 0x0, 0x1CB0A94
	0x01CB0A60 ADRP X8, 0x229D000
	0x01CB0A64 LDR X8, [X8 + 0x800]
	0x01CB0A68 LDR X0, [X8]
	0x01CB0A6C LDR W8, [X0 + 0xE0]
	0x01CB0A70 CBNZ W8, 0x1CB0A78
	0x01CB0A74 BL 0x1B6E8F8
	0x01CB0A78 ADRP X8, 0x229E000
	0x01CB0A7C LDR X8, [X8 + 0xB00]
	0x01CB0A80 LDP X20, X19, [X31 + 0x10]
	0x01CB0A84 MOV X1, X31
	0x01CB0A88 LDR X0, [X8]
	0x01CB0A8C LDR X30, [X31], #0x20
	0x01CB0A90 B 0x3A6A750
	0x01CB0A94 LDP X20, X19, [X31 + 0x10]
	0x01CB0A98 LDR X30, [X31], #0x20
	0x01CB0A9C RET
	0x01CB0AA0 BL 0x1B6EA1C
	0x01CB0AA4 MOV X1, X31
	0x01CB0AA8 B 0x3A9EEE4
	0x01CB0AAC LDRH W0, [X0 + 0x44]
	0x01CB0AB0 RET
	0x01CB0AB4 SUB X31, X31, 0x30
	0x01CB0AB8 STP X30, X21, [X31 + 0x10]
	0x01CB0ABC STP X20, X19, [X31 + 0x20]
	0x01CB0AC0 ADRP X20, 0x2573000
	0x01CB0AC4 ADRP X21, 0x229E000

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+16], D14
	003 Move [X31+32], D13
	004 Move [X31+40], D12
	005 Move [X31+48], D11
	006 Move [X31+56], D10
	007 Move [X31+64], D9
	008 Move [X31+72], D8
	009 Move [X31+80], X29
	010 Move [X31+88], X30
	011 Move [X31+96], X28
	012 Move [X31+104], X27
	013 Move [X31+112], X26
	014 Move [X31+120], X25
	015 Move [X31+128], X24
	016 Move [X31+136], X23
	017 Move [X31+144], X22
	018 Move [X31+152], X21
	019 Move [X31+160], X20
	020 Move [X31+168], X19
	021 Move X20, 0x2574000
	022 Move W8, [X20+1199]
	023 Move X19, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {78}
	028 Move X0, 0x229E000
	029 Move X0, [X0+1456]
	030 Call 0x1B6F7F0
	031 Move X0, 0x229E000
	032 Move X0, [X0+1464]
	033 Call 0x1B6F7F0
	034 Move X0, 0x229E000
	035 Move X0, [X0+1472]
	036 Call 0x1B6F7F0
	037 Move X0, 0x229E000
	038 Move X0, [X0+1576]
	039 Call 0x1B6F7F0
	040 Move X0, 0x229F000
	041 Move X0, [X0+448]
	042 Call 0x1B6F7F0
	043 Move X0, 0x229E000
	044 Move X0, [X0+2328]
	045 Call 0x1B6F7F0
	046 Move X0, 0x229F000
	047 Move X0, [X0+2616]
	048 Call 0x1B6F7F0
	049 Move X0, 0x229E000
	050 Move X0, [X0+1152]
	051 Call 0x1B6F7F0
	052 Move X0, 0x229F000
	053 Move X0, [X0+2624]
	054 Call 0x1B6F7F0
	055 Move X0, 0x229F000
	056 Move X0, [X0+2632]
	057 Call 0x1B6F7F0
	058 Move X0, 0x229F000
	059 Move X0, [X0+2640]
	060 Call 0x1B6F7F0
	061 Move X0, 0x229F000
	062 Move X0, [X0+2648]
	063 Call 0x1B6F7F0
	064 Move X0, 0x229F000
	065 Move X0, [X0+2656]
	066 Call 0x1B6F7F0
	067 Move X0, 0x229F000
	068 Move X0, [X0+2664]
	069 Call 0x1B6F7F0
	070 Move X0, 0x229F000
	071 Move X0, [X0+2672]
	072 Call 0x1B6F7F0
	073 Move X0, 0x229F000
	074 Move X0, [X0+2680]
	075 Call 0x1B6F7F0
	076 Move W8, 1
	077 Move [X20+1199], W8
	078 Move [X31+24], X31
	079 Move W8, [X19+88]
	080 Compare W8, 0
	081 JumpIfEqual {328}
	082 Move [X19+88], W31
	083 Move X0, [X19+176]
	084 Compare X0, 0
	085 JumpIfEqual {450}
	086 Move X20, [X19+160]
	087 Move X1, X31
	088 Call Transform.get_position, X0
	089 Compare X20, 0
	090 JumpIfEqual {450}
	091 Move S3, 1
	092 Move X0, X20
	093 Move W1, W31
	094 Move X2, X31
	095 Call RandomSFX.Play, X0, X1, V0, X2
	096 Move X0, X31
	097 Call Camera.get_main
	098 Compare X0, 0
	099 JumpIfEqual {450}
	100 Move X1, X31
	101 Call Component.get_transform, X0
	102 Compare X0, 0
	103 JumpIfEqual {450}
	104 Move X20, 0x229E000
	105 Move X21, 0x229E000
	106 Move X20, [X20+1472]
	107 Move X21, [X21+1464]
	108 Move X1, X31
	109 Call Transform.get_position, X0
	110 Move X0, [X20]
	111 Move V8, V0
	112 Move V9, V1
	113 Move V10, V2
	114 Call 0x1B6FA0C
	115 Move X1, [X21]
	116 Move X20, X0
	117 Call Dictionary`2<Object, Object>..ctor, X0
	118 Move X0, X19
	119 Move X1, X31
	120 Call Component.get_transform, X0
	121 Compare X0, 0
	122 JumpIfEqual {450}
	123 Move X1, X31
	124 Call Transform.get_position, X0
	125 Move X25, 0x2574000
	126 Move W8, [X25+1286]
	127 Move V11, V0
	128 Move V12, V1
	129 Move V13, V2
	130 Compare W8, 0
	131 JumpIfNotEqual {137}
	132 Move X0, 0x229E000
	133 Move X0, [X0+1160]
	134 Call 0x1B6F7F0
	135 Move W8, 1
	136 Move [X25+1286], W8
	137 Move X26, 0x229E000
	138 Move X26, [X26+1160]
	139 Move X21, 0x229E000
	140 Subtract S14, S8, S11
	141 Subtract S12, S9, S12
	142 Move X0, [X26]
	143 Subtract S11, S10, S13
	144 Move W8, [X0+224]
	145 Move X21, [X21+2328]
	146 Compare W8, 0
	147 JumpIfNotEqual {149}
	148 Call 0x1B6F8F8
	149 Multiply S0, S14, S14
	150 Multiply S1, S12, S12
	151 Move X0, [X21]
	152 Multiply S2, S11, S11
	153 Add S0, S0, S1
	154 Add S0, S2, S0
	155 NotImplemented "Instruction FSQRT not yet implemented."
	156 Add X1, X31, 12
	157 Move [X31+12], S0
	158 Call 0x1B6F900
	159 Compare X20, 0
	160 JumpIfEqual {450}
	161 Move X8, 0x229F000
	162 Move X28, 0x229E000
	163 Move X8, [X8+2656]
	164 Move X28, [X28+1456]
	165 Move X24, 0x229E000
	166 Move X29, 0x229F000
	167 Move X23, 0x229E000
	168 Move X24, [X24+1152]
	169 Move X29, [X29+2640]
	170 Move X23, [X23+1576]
	171 Move X1, [X8]
	172 Move X3, [X28]
	173 Move X27, 0x229F000
	174 Move X22, 0x229F000
	175 Move X21, 0x229F000
	176 Move X27, [X27+2680]
	177 Move X22, [X22+2632]
	178 Move X21, [X21+2672]
	179 Move X2, X0
	180 Move X0, X20
	181 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	182 Move X0, [X24]
	183 Add X1, X31, 0
	184 Move [X31], S8
	185 Move [X31+8], S9
	186 Move [X31+8], S10
	187 Call 0x1B6F900
	188 Move X1, [X29]
	189 Move X3, [X28]
	190 Move X2, X0
	191 Move X0, X20
	192 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	193 Move X0, [X23]
	194 Move W8, [X0+224]
	195 Compare W8, 0
	196 JumpIfNotEqual {198}
	197 Call 0x1B6F8F8
	198 Move X1, [X27]
	199 Move X3, [X22]
	200 Move X4, [X21]
	201 Move W0, 32
	202 Move W5, 152
	203 Move X2, X20
	204 Move X6, X31
	205 Call Log.Debug, X0, X1, X2, X3, X4, X5
	206 Move X0, X19
	207 Move X1, X31
	208 Call Component.get_transform, X0
	209 Compare X0, 0
	210 JumpIfEqual {450}
	211 Move X1, X31
	212 Call Transform.get_position, X0
	213 Move W8, [X25+1286]
	214 Move V11, V0
	215 Move V12, V1
	216 Move V13, V2
	217 Compare W8, 0
	218 JumpIfNotEqual {224}
	219 Move X0, 0x229E000
	220 Move X0, [X0+1160]
	221 Call 0x1B6F7F0
	222 Move W8, 1
	223 Move [X25+1286], W8
	224 Move X0, [X26]
	225 Subtract S11, S8, S11
	226 Subtract S9, S9, S12
	227 Subtract S8, S10, S13
	228 Move W8, [X0+224]
	229 Compare W8, 0
	230 JumpIfNotEqual {232}
	231 Call 0x1B6F8F8
	232 Multiply S0, S11, S11
	233 Multiply S1, S9, S9
	234 Move V2, [X19+128]
	235 Add S0, S0, S1
	236 Multiply S1, S8, S8
	237 Add S0, S1, S0
	238 NotImplemented "Instruction FSQRT not yet implemented."
	239 NotImplemented "Instruction FCMP not yet implemented."
	240 Move X8, 0x229F000
	241 Move X8, [X8+2616]
	242 Move X0, [X8]
	243 Move W8, [X0+224]
	244 Compare W8, 0
	245 JumpIfNotEqual {247}
	246 Call 0x1B6F8F8
	247 Add X1, X31, 24
	248 Move W0, 1
	249 Call TeleportTarget.TryGetTeleportTarget, X0, X1
	250 Move TEMP, X0
	251 And TEMP, TEMP, 1
	252 Compare TEMP, 1
	253 JumpIfNotEqual {366}
	254 Move X0, [X31+24]
	255 Compare X0, 0
	256 JumpIfEqual {450}
	257 Move X1, X31
	258 Call Transform.get_position, X0
	259 Move X0, [X24]
	260 Add X1, X31, 0
	261 Move [X31], S0
	262 Move [X31+8], S1
	263 Move [X31+8], S2
	264 Call 0x1B6F900
	265 Move X8, 0x229F000
	266 Move X8, [X8+2648]
	267 Move X1, X0
	268 Move X2, X31
	269 Move X8, [X8]
	270 Move X0, X8
	271 Call String.Format, X0, X1
	272 Move X8, [X23]
	273 Move X20, X0
	274 Move W9, [X8+224]
	275 Compare W9, 0
	276 JumpIfNotEqual {279}
	277 Move X0, X8
	278 Call 0x1B6F8F8
	279 Move X3, [X22]
	280 Move X4, [X21]
	281 Move W0, 32
	282 Move W5, 161
	283 Move X1, X20
	284 Move X2, X31
	285 Move X6, X31
	286 Call Log.Debug, X0, X1, X2, X3, X4, X5
	287 Move X20, 0x2574000
	288 Move W8, [X20+1289]
	289 Compare W8, 0
	290 JumpIfNotEqual {296}
	291 Move X0, 0x229F000
	292 Move X0, [X0+2688]
	293 Call 0x1B6F7F0
	294 Move W8, 1
	295 Move [X20+1289], W8
	296 Move X8, 0x229F000
	297 Move X8, [X8+2688]
	298 Move X8, [X8]
	299 Move X8, [X8+184]
	300 Move X8, [X8]
	301 Compare X8, 0
	302 JumpIfEqual {450}
	303 Move X0, [X31+24]
	304 Compare X0, 0
	305 JumpIfEqual {450}
	306 Move X20, [X8+32]
	307 Move X1, X31
	308 Call Transform.get_position, X0
	309 Compare X20, 0
	310 JumpIfEqual {450}
	311 Move X0, X20
	312 Move W1, W31
	313 Move X2, X31
	314 Call PlayerController.Respawn, X0, X1, X2
	315 Move X0, [X31+24]
	316 Compare X0, 0
	317 JumpIfEqual {450}
	318 Move X19, [X19+160]
	319 Move X1, X31
	320 Call Transform.get_position, X0
	321 Compare X19, 0
	322 JumpIfEqual {450}
	323 Move S3, 1
	324 Move X0, X19
	325 Move W1, W31
	326 Move X2, X31
	327 Call RandomSFX.Play, X0, X1, V0, X2
	328 Move X21, 0x229F000
	329 Move X21, [X21+448]
	330 Move X0, [X21]
	331 Move W8, [X0+224]
	332 Compare W8, 0
	333 JumpIfNotEqual {335}
	334 Call 0x1B6F8F8
	335 Move X0, X19
	336 Move X1, X31
	337 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	338 Move X0, [X19+56]
	339 Compare X0, 0
	340 JumpIfEqual {450}
	341 Move X1, X31
	342 Call NetworkRunner.get_Stage, X0
	343 NotImplemented "Instruction CMP not yet implemented."
	344 Move X0, [X19+64]
	345 Compare X0, 0
	346 JumpIfEqual {450}
	347 Move X1, X31
	348 Call NetworkObject.GetLocalAuthorityMask, X0
	349 Move TEMP, X0
	350 And TEMP, TEMP, 1
	351 Compare TEMP, 1
	352 JumpIfEqual {402}
	353 Move X0, [X21]
	354 Move X19, [X19+64]
	355 Move W8, [X0+224]
	356 Compare W8, 0
	357 JumpIfNotEqual {359}
	358 Call 0x1B6F8F8
	359 Move X8, 0x229F000
	360 Move X8, [X8+2624]
	361 Move W2, 1
	362 Move X1, X19
	363 Move X3, X31
	364 Move X0, [X8]
	365 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	366 Move X0, [X23]
	367 Move W8, [X0+224]
	368 Compare W8, 0
	369 JumpIfNotEqual {371}
	370 Call 0x1B6F8F8
	371 Move X8, 0x229F000
	372 Move X8, [X8+2664]
	373 Move X3, [X22]
	374 Move X4, [X21]
	375 Move W0, 32
	376 Move X1, [X8]
	377 Move W5, 167
	378 Move X2, X31
	379 Move X6, X31
	380 Call Log.Error, X0, X1, X2, X3, X4, X5
	381 Move X20, [X31+160]
	382 Move X19, [X31+168]
	383 Move X22, [X31+144]
	384 Move X21, [X31+152]
	385 Move X24, [X31+128]
	386 Move X23, [X31+136]
	387 Move X26, [X31+112]
	388 Move X25, [X31+120]
	389 Move X28, [X31+96]
	390 Move X27, [X31+104]
	391 Move X29, [X31+80]
	392 Move X30, [X31+88]
	393 Move D9, [X31+64]
	394 Move D8, [X31+72]
	395 Move D11, [X31+48]
	396 Move D10, [X31+56]
	397 Move D13, [X31+32]
	398 Move D12, [X31+40]
	399 Move V14, [X31+16]
	400 Add X31, X31, 176
	401 Return 
	402 Move X8, [X19+56]
	403 Compare X8, 0
	404 JumpIfEqual {450}
	405 Move W20, W0
	406 Move X0, [X8+80]
	407 Compare X0, 0
	408 JumpIfEqual {450}
	409 Move X1, X31
	410 Call Simulation.HasAnyActiveConnections, X0
	411 Move TEMP, X0
	412 And TEMP, TEMP, 1
	413 Compare TEMP, 1
	414 JumpIfNotEqual {449}
	415 Move X8, [X19+56]
	416 Compare X8, 0
	417 JumpIfEqual {450}
	418 Move X0, [X8+80]
	419 Move W1, 8
	420 Move X2, X31
	421 Call SimulationMessage.Allocate, X0, X1
	422 Move X21, X0
	423 Move W0, 1
	424 Move X1, X31
	425 Call Assert.Check, X0
	426 Move X8, [X19+64]
	427 Compare X8, 0
	428 JumpIfEqual {450}
	429 Move X8, [X8+32]
	430 Compare X8, 0
	431 JumpIfEqual {433}
	432 Move W0, [X8]
	433 Move X0, X31
	434 Move W1, [X19+104]
	435 Move W2, 3
	436 Move X3, X31
	437 Call RpcHeader.Create, X0, X1, X2
	438 Move [X21+28], X0
	439 Compare X21, 0
	440 JumpIfEqual {450}
	441 Move W8, 64
	442 Move [X21+12], W8
	443 Move X0, [X19+56]
	444 Compare X0, 0
	445 JumpIfEqual {450}
	446 Move X1, X21
	447 Move X2, X31
	448 Call NetworkRunner.SendRpc, X0, X1
	449 And W31, W20, 7
	450 Call 0x1B6FA1C

Method: System.Void RPC_RechargeFinished()

Disassembly:
	0x01CB0AC8 LDRB W8, [X20 + 0x4BE]
	0x01CB0ACC LDR X21, [X21 + 0xB08]
	0x01CB0AD0 MOV X19, X0
	0x01CB0AD4 TBNZ X8, 0x0, 0x1CB0B58
	0x01CB0AD8 ADRP X0, 0x229E000
	0x01CB0ADC LDR X0, [X0 + 0xB10]
	0x01CB0AE0 BL 0x1B6E7F0
	0x01CB0AE4 ADRP X0, 0x229E000
	0x01CB0AE8 LDR X0, [X0 + 0xB18]
	0x01CB0AEC BL 0x1B6E7F0
	0x01CB0AF0 ADRP X0, 0x229E000
	0x01CB0AF4 LDR X0, [X0 + 0xB20]
	0x01CB0AF8 BL 0x1B6E7F0
	0x01CB0AFC ADRP X0, 0x229D000
	0x01CB0B00 LDR X0, [X0 + 0x628]
	0x01CB0B04 BL 0x1B6E7F0
	0x01CB0B08 ADRP X0, 0x229E000
	0x01CB0B0C LDR X0, [X0 + 0xB08]
	0x01CB0B10 BL 0x1B6E7F0
	0x01CB0B14 ADRP X0, 0x229D000
	0x01CB0B18 LDR X0, [X0 + 0x478]
	0x01CB0B1C BL 0x1B6E7F0
	0x01CB0B20 ADRP X0, 0x229E000
	0x01CB0B24 LDR X0, [X0 + 0xB28]
	0x01CB0B28 BL 0x1B6E7F0
	0x01CB0B2C ADRP X0, 0x229E000
	0x01CB0B30 LDR X0, [X0 + 0xB30]
	0x01CB0B34 BL 0x1B6E7F0
	0x01CB0B38 ADRP X0, 0x229E000
	0x01CB0B3C LDR X0, [X0 + 0xB38]
	0x01CB0B40 BL 0x1B6E7F0
	0x01CB0B44 ADRP X0, 0x229E000
	0x01CB0B48 LDR X0, [X0 + 0xB40]
	0x01CB0B4C BL 0x1B6E7F0
	0x01CB0B50 MOVZ W8, 0x1
	0x01CB0B54 STRB W8, [X20 + 0x4BE]
	0x01CB0B58 LDR X0, [X21]
	0x01CB0B5C STR X31, [X31 + 0x8]
	0x01CB0B60 LDR W8, [X0 + 0xE0]
	0x01CB0B64 CBNZ W8, 0x1CB0B70
	0x01CB0B68 BL 0x1B6E8F8
	0x01CB0B6C LDR X0, [X21]
	0x01CB0B70 LDR X8, [X0 + 0xB8]
	0x01CB0B74 LDR X0, [X8]
	0x01CB0B78 CBZ X0, 0x1CB0CA0
	0x01CB0B7C ADRP X8, 0x229E000
	0x01CB0B80 LDR X8, [X8 + 0xB10]
	0x01CB0B84 LDRH W1, [X19 + 0x44]
	0x01CB0B88 ADD X2, X31, 0x8
	0x01CB0B8C LDR X3, [X8]
	0x01CB0B90 BL 0x2845864
	0x01CB0B94 TBZ X0, 0x0, 0x1CB0C58
	0x01CB0B98 ADRP X8, 0x229D000
	0x01CB0B9C LDR X8, [X8 + 0x478]
	0x01CB0BA0 LDR X20, [X31 + 0x8]
	0x01CB0BA4 LDR X0, [X8]
	0x01CB0BA8 LDR W8, [X0 + 0xE0]
	0x01CB0BAC CBNZ W8, 0x1CB0BB4
	0x01CB0BB0 BL 0x1B6E8F8
	0x01CB0BB4 MOV X0, X20
	0x01CB0BB8 MOV X1, X31
	0x01CB0BBC MOV X2, X31
	0x01CB0BC0 BL 0x3A9D6EC
	0x01CB0BC4 TBZ X0, 0x0, 0x1CB0C58
	0x01CB0BC8 ADRP X9, 0x229E000
	0x01CB0BCC LDRH W8, [X19 + 0x44]
	0x01CB0BD0 LDR X9, [X9 + 0xB20]
	0x01CB0BD4 ADD X1, X31, 0x4
	0x01CB0BD8 STRH W8, [X31 + 0x4]
	0x01CB0BDC LDR X0, [X9]
	0x01CB0BE0 BL 0x1B6E900
	0x01CB0BE4 ADRP X8, 0x229E000
	0x01CB0BE8 LDR X8, [X8 + 0xB38]
	0x01CB0BEC ADRP X9, 0x229E000
	0x01CB0BF0 LDR X9, [X9 + 0xB40]
	0x01CB0BF4 MOV X2, X0
	0x01CB0BF8 LDR X8, [X8]
	0x01CB0BFC MOV X3, X31
	0x01CB0C00 LDR X1, [X9]
	0x01CB0C04 MOV X0, X8
	0x01CB0C08 BL 0x3090A1C
	0x01CB0C0C ADRP X8, 0x229D000
	0x01CB0C10 LDR X8, [X8 + 0x628]
	0x01CB0C14 MOV X20, X0
	0x01CB0C18 LDR X8, [X8]
	0x01CB0C1C LDR W9, [X8 + 0xE0]
	0x01CB0C20 CBNZ W9, 0x1CB0C2C
	0x01CB0C24 MOV X0, X8
	0x01CB0C28 BL 0x1B6E8F8
	0x01CB0C2C ADRP X8, 0x229E000
	0x01CB0C30 ADRP X9, 0x229E000
	0x01CB0C34 LDR X8, [X8 + 0xB28]
	0x01CB0C38 LDR X9, [X9 + 0xB30]
	0x01CB0C3C MOVZ W4, 0x1B
	0x01CB0C40 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2574000
	005 Move W8, [X20+1200]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x229F000
	012 Move X0, [X0+448]
	013 Call 0x1B6F7F0
	014 Move X0, 0x229F000
	015 Move X0, [X0+2696]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X20+1200], W8
	019 Move W8, [X19+88]
	020 Compare W8, 0
	021 JumpIfEqual {23}
	022 Move [X19+88], W31
	023 Move X20, 0x229F000
	024 Move X20, [X20+448]
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1B6F8F8
	030 Move X0, X19
	031 Move X1, X31
	032 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	033 Move X0, [X19+56]
	034 Compare X0, 0
	035 JumpIfEqual {119}
	036 Move X1, X31
	037 Call NetworkRunner.get_Stage, X0
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return 
	043 Move X0, [X19+64]
	044 Compare X0, 0
	045 JumpIfEqual {119}
	046 Move X1, X31
	047 Call NetworkObject.GetLocalAuthorityMask, X0
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {69}
	052 Move X0, [X20]
	053 Move X19, [X19+64]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1B6F8F8
	058 Move X8, 0x229F000
	059 Move X8, [X8+2696]
	060 Move X1, X19
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move W2, 1
	064 Move X0, [X8]
	065 Move X3, X31
	066 Move X30, [X31+32]
	067 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	068 Return 
	069 Move X8, [X19+56]
	070 Compare X8, 0
	071 JumpIfEqual {119}
	072 Move X0, [X8+80]
	073 Compare X0, 0
	074 JumpIfEqual {119}
	075 Move X1, X31
	076 Call Simulation.HasAnyActiveConnections, X0
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {39}
	081 Move X8, [X19+56]
	082 Compare X8, 0
	083 JumpIfEqual {119}
	084 Move X0, [X8+80]
	085 Move W1, 8
	086 Move X2, X31
	087 Call SimulationMessage.Allocate, X0, X1
	088 Move X20, X0
	089 Move W0, 1
	090 Move X1, X31
	091 Call Assert.Check, X0
	092 Move X8, [X19+64]
	093 Compare X8, 0
	094 JumpIfEqual {119}
	095 Move X8, [X8+32]
	096 Compare X8, 0
	097 JumpIfEqual {99}
	098 Move W0, [X8]
	099 Move X0, X31
	100 Move W1, [X19+104]
	101 Move W2, 4
	102 Move X3, X31
	103 Call RpcHeader.Create, X0, X1, X2
	104 Move [X20+28], X0
	105 Compare X20, 0
	106 JumpIfEqual {119}
	107 Move W8, 64
	108 Move [X20+12], W8
	109 Move X0, [X19+56]
	110 Compare X0, 0
	111 JumpIfEqual {119}
	112 Move X1, X20
	113 Move X20, [X31+16]
	114 Move X19, [X31+24]
	115 Move X2, X31
	116 Move X30, [X31+32]
	117 Call NetworkRunner.SendRpc, X0, X1
	118 Return 
	119 Call 0x1B6FA1C

Method: System.Void HandleKeyInput(UnityEngine.KeyCode keyCode, AnimalCompany.TerminalKeyType keyType)

Disassembly:
	0x01CB104C LDRB W8, [X20 + 0x4C3]

ISIL:
	001 Call TeleportationMachine.RPC_RequestActivation, X0
	002 Return 

Method: System.Void OnDrawGizmos()

Disassembly:
	0x01CB1050 MOV X19, X0
	0x01CB1054 TBNZ X8, 0x0, 0x1CB109C
	0x01CB1058 ADRP X0, 0x229D000
	0x01CB105C LDR X0, [X0 + 0x248]
	0x01CB1060 BL 0x1B6E7F0
	0x01CB1064 ADRP X0, 0x229D000
	0x01CB1068 LDR X0, [X0 + 0x250]
	0x01CB106C BL 0x1B6E7F0
	0x01CB1070 ADRP X0, 0x229D000
	0x01CB1074 LDR X0, [X0 + 0xB88]
	0x01CB1078 BL 0x1B6E7F0
	0x01CB107C ADRP X0, 0x229D000
	0x01CB1080 LDR X0, [X0 + 0xB90]
	0x01CB1084 BL 0x1B6E7F0
	0x01CB1088 ADRP X0, 0x229D000
	0x01CB108C LDR X0, [X0 + 0xB98]
	0x01CB1090 BL 0x1B6E7F0
	0x01CB1094 MOVZ W8, 0x1
	0x01CB1098 STRB W8, [X20 + 0x4C3]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move S0, W31
	005 Move S1, W31
	006 Move S2, 1
	007 Move S3, 1
	008 Move X0, X31
	009 Call Gizmos.set_color, X0
	010 Move X0, X19
	011 Move X1, X31
	012 Call Component.get_transform, X0
	013 Compare X0, 0
	014 JumpIfEqual {23}
	015 Move X1, X31
	016 Call Transform.get_position, X0
	017 Move V3, [X19+128]
	018 Move X0, X31
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Call Gizmos.DrawWireSphere, X0, V0
	022 Return 
	023 Call 0x1B6FA1C

Method: System.Void .ctor()

Disassembly:
	0x01CB109C MOV X0, X19
	0x01CB10A0 MOV X1, X31
	0x01CB10A4 BL 0x1D65284
	0x01CB10A8 LDR X0, [X19 + 0x40]
	0x01CB10AC CBZ X0, 0x1CB1210
	0x01CB10B0 LDRB W8, [X0 + 0x60]
	0x01CB10B4 TBNZ X8, 0x1, 0x1CB1210
	0x01CB10B8 MOV X1, X31

ISIL:
	001 Move V0, 0
	002 Move W8, 0x40C00000
	003 Move W9, 0x44160000
	004 Move X1, X31
	005 Move [X0+128], D0
	006 Move [X0+136], W8
	007 Move [X0+192], W9
	008 Call NetworkBehaviour..ctor, X0
	009 Return 

Method: System.Void CopyBackingFieldsToState(System.Boolean param_0)

Disassembly:
	0x01CB10BC BL 0x1D9E780
	0x01CB10C0 TBZ X0, 0x0, 0x1CB1210
	0x01CB10C4 LDR X24, [X19 + 0x88]
	0x01CB10C8 CBZ X24, 0x1CB1230
	0x01CB10CC LDR W8, [X24 + 0x18]
	0x01CB10D0 CMP W8, 0x1
	0x01CB10D4 B.LT 0x1CB1210
	0x01CB10D8 ADRP X29, 0x229D000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move V0, [X0+196]
	004 Move X19, X0
	005 Call TeleportationMachine.set_charge, X0, V0
	006 Move W1, [X19+200]
	007 Move X0, X19
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Call TeleportationMachine.set_state, X0, X1
	011 Return 

Method: System.Void CopyStateToBackingFields()

Disassembly:
	0x01CB10DC ADRP X27, 0x229D000
	0x01CB10E0 ADRP X28, 0x229D000
	0x01CB10E4 LDR X29, [X29 + 0x250]
	0x01CB10E8 LDR X27, [X27 + 0xB88]
	0x01CB10EC LDR X28, [X28 + 0xB90]
	0x01CB10F0 MOV X25, X31
	0x01CB10F4 ADD X26, X24, 0x20
	0x01CB10F8 ADRP X8, 0x229D000
	0x01CB10FC LDR X8, [X8 + 0xB98]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call TeleportationMachine.get_charge, X0
	005 Move X0, X19
	006 Move [X19+196], S0
	007 Call TeleportationMachine.get_state, X0
	008 Move [X19+200], W0
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return 

Method: System.Void RPC_RequestActivation@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01CB1100 LDR X0, [X8]
	0x01CB1104 BL 0x1B6EA0C
	0x01CB1108 MOV X1, X31
	0x01CB110C MOV X21, X0
	0x01CB1110 BL 0x32276F8
	0x01CB1114 LDR W8, [X24 + 0x18]
	0x01CB1118 CMP X25, X8
	0x01CB111C B.CS 0x1CB1234
	0x01CB1120 CBZ X21, 0x1CB1230
	0x01CB1124 LDR X8, [X26, X25, LSL #3]
	0x01CB1128 STR X8, [X21 + 0x10]
	0x01CB112C LDR X0, [X19 + 0x80]
	0x01CB1130 CBZ X0, 0x1CB1230
	0x01CB1134 LDR X20, [X19 + 0x38]
	0x01CB1138 MOV X1, X31
	0x01CB113C BL 0x3A9B0C0
	0x01CB1140 LDR X8, [X21 + 0x10]
	0x01CB1144 CBZ X8, 0x1CB1230
	0x01CB1148 MOV X22, X0
	0x01CB114C MOV X0, X8
	0x01CB1150 MOV X1, X31
	0x01CB1154 BL 0x3A9B084
	0x01CB1158 CBZ X0, 0x1CB1230
	0x01CB115C MOV X1, X31
	0x01CB1160 BL 0x3AA7658
	0x01CB1164 ADRP X8, 0x229D000
	0x01CB1168 LDR X8, [X8 + 0x248]
	0x01CB116C ADD X0, X31, 0x40
	0x01CB1170 STP X31, X31, [X31 + 0x40]
	0x01CB1174 LDR X1, [X8]
	0x01CB1178 BL 0x22DC630
	0x01CB117C LDR X0, [X21 + 0x10]
	0x01CB1180 CBZ X0, 0x1CB1230
	0x01CB1184 MOV X1, X31
	0x01CB1188 BL 0x3A9B084
	0x01CB118C CBZ X0, 0x1CB1230
	0x01CB1190 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2573000
	005 Move W8, [X20+1201]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x229E000
	012 Move X0, [X0+2728]
	013 Call 0x1B6F7F0
	014 Move W8, 1
	015 Move [X20+1201], W8
	016 Move W0, 1
	017 Move X1, X31
	018 Move W20, 1
	019 Call Assert.Check, X0
	020 Compare X19, 0
	021 JumpIfEqual {42}
	022 Move X9, 0x229E000
	023 Move X9, [X9+2728]
	024 Move [X19+88], W20
	025 Move X8, [X19]
	026 Move X1, [X9]
	027 Move W10, [X8+304]
	028 Move W9, [X1+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, [X8+200]
	031 Add X8, X8, X9
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Call TeleportationMachine.RPC_RequestActivation, X0
	039 Return 
	040 Move X0, X19
	041 Call 0x1B6FCDC
	042 Call 0x1B6FA1C

Method: System.Void RPC_PlayChargingParticles@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01CB1194 BL 0x3AA5FBC
	0x01CB1198 LDR X1, [X29]
	0x01CB119C ADD X0, X31, 0x28
	0x01CB11A0 STP X31, X31, [X31 + 0x28]
	0x01CB11A4 STR W31, [X31 + 0x38]
	0x01CB11A8 BL 0x22D82D0
	0x01CB11AC LDR X0, [X27]
	0x01CB11B0 BL 0x1B6EA0C
	0x01CB11B4 LDR X2, [X28]
	0x01CB11B8 MOV X1, X21
	0x01CB11BC MOV X3, X31
	0x01CB11C0 MOV X23, X0
	0x01CB11C4 BL 0x1DA90FC
	0x01CB11C8 CBZ X20, 0x1CB1230
	0x01CB11CC LDUR V0, [X31 + 0x28]
	0x01CB11D0 LDR W8, [X31 + 0x38]
	0x01CB11D4 LDP X2, X3, [X31 + 0x40]
	0x01CB11D8 ADD X4, X31, 0x10
	0x01CB11DC MOV X0, X20
	0x01CB11E0 MOV X1, X22
	0x01CB11E4 MOV X5, X31
	0x01CB11E8 MOV X6, X23
	0x01CB11EC MOV W7, W31
	0x01CB11F0 STR V0, [X31 + 0x1]
	0x01CB11F4 STR W8, [X31 + 0x20]
	0x01CB11F8 STR X31, [X31]
	0x01CB11FC BL 0x1D98EB8
	0x01CB1200 LDRSW X8, [X24 + 0x18]
	0x01CB1204 ADD X25, X25, 0x1
	0x01CB1208 CMP X25, X8
	0x01CB120C B.LT 0x1CB10F8
	0x01CB1210 LDP X20, X19, [X31 + 0xA0]
	0x01CB1214 LDP X22, X21, [X31 + 0x90]
	0x01CB1218 LDP X24, X23, [X31 + 0x80]
	0x01CB121C LDP X26, X25, [X31 + 0x70]
	0x01CB1220 LDP X28, X27, [X31 + 0x60]
	0x01CB1224 LDP X29, X30, [X31 + 0x50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2573000
	005 Move W8, [X20+1202]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x229E000
	012 Move X0, [X0+2728]
	013 Call 0x1B6F7F0
	014 Move W8, 1
	015 Move [X20+1202], W8
	016 Move W0, 1
	017 Move X1, X31
	018 Move W20, 1
	019 Call Assert.Check, X0
	020 Compare X19, 0
	021 JumpIfEqual {42}
	022 Move X9, 0x229E000
	023 Move X9, [X9+2728]
	024 Move [X19+88], W20
	025 Move X8, [X19]
	026 Move X1, [X9]
	027 Move W10, [X8+304]
	028 Move W9, [X1+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, [X8+200]
	031 Add X8, X8, X9
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Call TeleportationMachine.RPC_PlayChargingParticles, X0
	039 Return 
	040 Move X0, X19
	041 Call 0x1B6FCDC
	042 Call 0x1B6FA1C

Method: System.Void RPC_Teleport@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01CB1228 ADD X31, X31, 0xB0
	0x01CB122C RET
	0x01CB1230 BL 0x1B6EA1C
	0x01CB1234 BL 0x1B6EA24
	0x01CB1238 MOV X1, X31
	0x01CB123C B 0x32276F8
	0x01CB1240 MOV X1, X31
	0x01CB1244 B 0x1D661D8
	0x01CB1248 RET
	0x01CB124C RET
	0x01CB1250 STP X30, X21, [X31 - 0x20]!
	0x01CB1254 STP X20, X19, [X31 + 0x10]
	0x01CB1258 ADRP X21, 0x2572000
	0x01CB125C LDRB W8, [X21 + 0x4C4]
	0x01CB1260 MOV X20, X2
	0x01CB1264 MOV X19, X0
	0x01CB1268 TBNZ X8, 0x0, 0x1CB1280
	0x01CB126C ADRP X0, 0x229D000
	0x01CB1270 LDR X0, [X0 + 0xBA0]
	0x01CB1274 BL 0x1B6E7F0
	0x01CB1278 MOVZ W8, 0x1
	0x01CB127C STRB W8, [X21 + 0x4C4]
	0x01CB1280 CBZ X20, 0x1CB12D8
	0x01CB1284 ADRP X8, 0x229D000
	0x01CB1288 LDR X8, [X8 + 0xBA0]
	0x01CB128C LDR X21, [X8]
	0x01CB1290 LDR X8, [X21 + 0x38]
	0x01CB1294 CBNZ X8, 0x1CB12A0
	0x01CB1298 MOV X0, X21
	0x01CB129C BL 0x1BB41DC
	0x01CB12A0 MOV X0, X20
	0x01CB12A4 MOV X1, X31
	0x01CB12A8 BL 0x3A9B0C0
	0x01CB12AC CBZ X0, 0x1CB12D8
	0x01CB12B0 LDR X8, [X21 + 0x38]
	0x01CB12B4 LDR X1, [X8]
	0x01CB12B8 BL 0x20CF154

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2573000
	005 Move W8, [X20+1203]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x229E000
	012 Move X0, [X0+2728]
	013 Call 0x1B6F7F0
	014 Move W8, 1
	015 Move [X20+1203], W8
	016 Move W0, 1
	017 Move X1, X31
	018 Move W20, 1
	019 Call Assert.Check, X0
	020 Compare X19, 0
	021 JumpIfEqual {42}
	022 Move X9, 0x229E000
	023 Move X9, [X9+2728]
	024 Move [X19+88], W20
	025 Move X8, [X19]
	026 Move X1, [X9]
	027 Move W10, [X8+304]
	028 Move W9, [X1+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, [X8+200]
	031 Add X8, X8, X9
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Call TeleportationMachine.RPC_Teleport, X0
	039 Return 
	040 Move X0, X19
	041 Call 0x1B6FCDC
	042 Call 0x1B6FA1C

Method: System.Void RPC_RechargeFinished@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01CB12BC LDR X8, [X19 + 0x10]
	0x01CB12C0 CBZ X8, 0x1CB12D8
	0x01CB12C4 CBZ X0, 0x1CB12D8
	0x01CB12C8 LDRH W1, [X8 + 0x44]
	0x01CB12CC LDP X20, X19, [X31 + 0x10]
	0x01CB12D0 LDP X30, X21, [X31], #0x20
	0x01CB12D4 B 0x1CB1348
	0x01CB12D8 BL 0x1B6EA1C
	0x01CB12DC B 0x1CB1348
	0x01CB12E0 MOV X1, X31
	0x01CB12E4 B 0x32276F8
	0x01CB12E8 STP X30, X19, [X31 - 0x10]!
	0x01CB12EC LDR X8, [X0 + 0x50]
	0x01CB12F0 CBZ X8, 0x1CB1300
	0x01CB12F4 LDRH W0, [X8]
	0x01CB12F8 LDP X30, X19, [X31], #0x10
	0x01CB12FC RET
	0x01CB1300 ADRP X0, 0x229C000
	0x01CB1304 LDR X0, [X0 + 0x490]
	0x01CB1308 BL 0x1B6E804
	0x01CB130C BL 0x1B6EA0C
	0x01CB1310 MOV X19, X0
	0x01CB1314 ADRP X0, 0x229D000
	0x01CB1318 LDR X0, [X0 + 0xBA8]
	0x01CB131C BL 0x1B6E804
	0x01CB1320 MOV X1, X0
	0x01CB1324 MOV X0, X19
	0x01CB1328 MOV X2, X31
	0x01CB132C BL 0x31E7550
	0x01CB1330 ADRP X0, 0x229D000
	0x01CB1334 LDR X0, [X0 + 0xBB0]
	0x01CB1338 BL 0x1B6E804
	0x01CB133C MOV X1, X0
	0x01CB1340 MOV X0, X19
	0x01CB1344 BL 0x1B6E8E8
	0x01CB1348 STP X30, X19, [X31 - 0x10]!
	0x01CB134C LDR X8, [X0 + 0x50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2573000
	005 Move W8, [X20+1204]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x229E000
	012 Move X0, [X0+2728]
	013 Call 0x1B6F7F0
	014 Move W8, 1
	015 Move [X20+1204], W8
	016 Move W0, 1
	017 Move X1, X31
	018 Move W20, 1
	019 Call Assert.Check, X0
	020 Compare X19, 0
	021 JumpIfEqual {42}
	022 Move X9, 0x229E000
	023 Move X9, [X9+2728]
	024 Move [X19+88], W20
	025 Move X8, [X19]
	026 Move X1, [X9]
	027 Move W10, [X8+304]
	028 Move W9, [X1+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, [X8+200]
	031 Add X8, X8, X9
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Call TeleportationMachine.RPC_RechargeFinished, X0
	039 Return 
	040 Move X0, X19
	041 Call 0x1B6FCDC
	042 Call 0x1B6FA1C

