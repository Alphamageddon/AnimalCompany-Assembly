Type: AnimalCompany.TeleportationMachine

Method: System.Single get_charge()

Disassembly:
	0x01DA6B0C MOV X19, X0
	0x01DA6B10 TBNZ X8, 0x0, 0x1DA6B34
	0x01DA6B14 ADRP X0, 0x2350000
	0x01DA6B18 LDR X0, [X0 + 0xA78]
	0x01DA6B1C BL 0x1C16CF4
	0x01DA6B20 ADRP X0, 0x2351000
	0x01DA6B24 LDR X0, [X0 + 0x4A8]
	0x01DA6B28 BL 0x1C16CF4
	0x01DA6B2C MOVZ W8, 0x1
	0x01DA6B30 STRB W8, [X20 + 0xA99]
	0x01DA6B34 LDRB W8, [X19 + 0x58]
	0x01DA6B38 CBZ W8, 0x1DA6BA0
	0x01DA6B3C STRB W31, [X19 + 0x58]
	0x01DA6B40 MOV X0, X19
	0x01DA6B44 BL 0x1DA5BCC
	0x01DA6B48 CBNZ W0, 0x1DA6BDC
	0x01DA6B4C FMOV S0, W31
	0x01DA6B50 MOV X0, X19
	0x01DA6B54 BL 0x1DA5B6C
	0x01DA6B58 MOVZ W1, 0x1
	0x01DA6B5C MOV X0, X19
	0x01DA6B60 BL 0x1DA5C2C
	0x01DA6B64 LDR X0, [X19 + 0xB0]
	0x01DA6B68 CBZ X0, 0x1DA6CCC

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move V0, [X8]
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return V0
	010 Move X0, 0x234E000
	011 Move X0, [X0+1456]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0x2352000
	016 Move X0, [X0+1032]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x2352000
	023 Move X0, [X0+1040]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: System.Void set_charge(System.Single value)

Disassembly:
	0x01DA6B6C LDR X20, [X19 + 0x98]
	0x01DA6B70 MOV X1, X31
	0x01DA6B74 BL 0x3C3F58C
	0x01DA6B78 CBZ X20, 0x1DA6CCC
	0x01DA6B7C FMOV S3, 1
	0x01DA6B80 MOVZ W1, 0x1
	0x01DA6B84 MOV X0, X20
	0x01DA6B88 MOV X2, X31
	0x01DA6B8C BL 0x1DD0FA8
	0x01DA6B90 MOV X0, X19
	0x01DA6B94 LDP X20, X19, [X31 + 0x10]
	0x01DA6B98 LDR X30, [X31], #0x20
	0x01DA6B9C B 0x1DA6CD0
	0x01DA6BA0 ADRP X20, 0x2350000
	0x01DA6BA4 LDR X20, [X20 + 0xA78]
	0x01DA6BA8 LDR X0, [X20]
	0x01DA6BAC LDR W8, [X0 + 0xE0]
	0x01DA6BB0 CBNZ W8, 0x1DA6BB8
	0x01DA6BB4 BL 0x1C16DFC
	0x01DA6BB8 MOV X0, X19
	0x01DA6BBC MOV X1, X31
	0x01DA6BC0 BL 0x1E77B08
	0x01DA6BC4 LDR X0, [X19 + 0x38]
	0x01DA6BC8 CBZ X0, 0x1DA6CCC

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move [X8], S0
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 
	010 Move X0, 0x234E000
	011 Move X0, [X0+1456]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0x2352000
	016 Move X0, [X0+1032]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x2352000
	023 Move X0, [X0+1048]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: AnimalCompany.TeleportationMachine/TeleportationState get_state()

Disassembly:
	0x01DA6BCC MOV X1, X31
	0x01DA6BD0 BL 0x1E9E538
	0x01DA6BD4 CMP W0, 0x4
	0x01DA6BD8 B.NE 0x1DA6BE8
	0x01DA6BDC LDP X20, X19, [X31 + 0x10]
	0x01DA6BE0 LDR X30, [X31], #0x20
	0x01DA6BE4 RET
	0x01DA6BE8 LDR X0, [X19 + 0x40]
	0x01DA6BEC CBZ X0, 0x1DA6CCC
	0x01DA6BF0 MOV X1, X31
	0x01DA6BF4 BL 0x1E94078
	0x01DA6BF8 ANDS W31, W0, 0x7
	0x01DA6BFC B.EQ 0x1DA6C54
	0x01DA6C00 TBNZ X0, 0x0, 0x1DA6B40
	0x01DA6C04 LDR X8, [X19 + 0x38]
	0x01DA6C08 CBZ X8, 0x1DA6CCC
	0x01DA6C0C LDR X0, [X8 + 0x50]
	0x01DA6C10 CBZ X0, 0x1DA6CCC
	0x01DA6C14 MOV X1, X31
	0x01DA6C18 BL 0x1EC4D00
	0x01DA6C1C TBZ X0, 0x0, 0x1DA6BDC
	0x01DA6C20 LDR X8, [X19 + 0x38]
	0x01DA6C24 CBZ X8, 0x1DA6CCC
	0x01DA6C28 LDR X0, [X8 + 0x50]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move W0, [X8+4]
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0
	010 Move X0, 0x234E000
	011 Move X0, [X0+1456]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0x2352000
	016 Move X0, [X0+1056]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x2352000
	023 Move X0, [X0+1064]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: System.Void set_state(AnimalCompany.TeleportationMachine/TeleportationState value)

Disassembly:
	0x01DA6C2C MOVZ W1, 0x8
	0x01DA6C30 MOV X2, X31
	0x01DA6C34 BL 0x1ED9318
	0x01DA6C38 LDR X8, [X19 + 0x40]
	0x01DA6C3C CBZ X8, 0x1DA6CCC
	0x01DA6C40 LDR X8, [X8 + 0x20]
	0x01DA6C44 MOV X20, X0
	0x01DA6C48 CBZ X8, 0x1DA6C8C
	0x01DA6C4C LDR W0, [X8]
	0x01DA6C50 B 0x1DA6C90
	0x01DA6C54 LDR X0, [X20]
	0x01DA6C58 LDR X19, [X19 + 0x40]
	0x01DA6C5C LDR W8, [X0 + 0xE0]
	0x01DA6C60 CBNZ W8, 0x1DA6C68
	0x01DA6C64 BL 0x1C16DFC
	0x01DA6C68 ADRP X8, 0x2351000
	0x01DA6C6C LDR X8, [X8 + 0x4A8]
	0x01DA6C70 MOV X1, X19
	0x01DA6C74 LDP X20, X19, [X31 + 0x10]
	0x01DA6C78 MOVZ W2, 0x7
	0x01DA6C7C LDR X0, [X8]
	0x01DA6C80 MOV X3, X31
	0x01DA6C84 LDR X30, [X31], #0x20
	0x01DA6C88 B 0x1E77B00

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move [X8+4], W1
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 
	010 Move X0, 0x234E000
	011 Move X0, [X0+1456]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0x2352000
	016 Move X0, [X0+1056]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x2352000
	023 Move X0, [X0+1072]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: System.Void Start()

Disassembly:
	0x01DA6C8C MOV X0, X31
	0x01DA6C90 LDR W1, [X19 + 0x68]
	0x01DA6C94 MOVZ W2, 0x1
	0x01DA6C98 MOV X3, X31
	0x01DA6C9C BL 0x1E9C23C
	0x01DA6CA0 STUR X0, [X20 + 0x1C]
	0x01DA6CA4 CBZ X20, 0x1DA6CCC
	0x01DA6CA8 MOVZ W8, 0x40
	0x01DA6CAC STR W8, [X20 + 0xC]
	0x01DA6CB0 LDR X0, [X19 + 0x38]
	0x01DA6CB4 CBZ X0, 0x1DA6CCC
	0x01DA6CB8 MOV X1, X20
	0x01DA6CBC LDP X20, X19, [X31 + 0x10]
	0x01DA6CC0 MOV X2, X31
	0x01DA6CC4 LDR X30, [X31], #0x20
	0x01DA6CC8 B 0x1EA1E24
	0x01DA6CCC BL 0x1C16F20
	0x01DA6CD0 STP X30, X21, [X31 - 0x20]!
	0x01DA6CD4 STP X20, X19, [X31 + 0x10]
	0x01DA6CD8 ADRP X20, 0x2632000
	0x01DA6CDC LDRB W8, [X20 + 0xA9A]
	0x01DA6CE0 MOV X19, X0
	0x01DA6CE4 TBNZ X8, 0x0, 0x1DA6D08
	0x01DA6CE8 ADRP X0, 0x2350000
	0x01DA6CEC LDR X0, [X0 + 0xA78]
	0x01DA6CF0 BL 0x1C16CF4
	0x01DA6CF4 ADRP X0, 0x2351000
	0x01DA6CF8 LDR X0, [X0 + 0x4B0]
	0x01DA6CFC BL 0x1C16CF4
	0x01DA6D00 MOVZ W8, 0x1
	0x01DA6D04 STRB W8, [X20 + 0xA9A]
	0x01DA6D08 LDRB W8, [X19 + 0x58]
	0x01DA6D0C CBZ W8, 0x1DA6D2C
	0x01DA6D10 STRB W31, [X19 + 0x58]
	0x01DA6D14 LDR X0, [X19 + 0x90]
	0x01DA6D18 CBZ X0, 0x1DA6E58
	0x01DA6D1C LDP X20, X19, [X31 + 0x10]
	0x01DA6D20 MOV X1, X31
	0x01DA6D24 LDP X30, X21, [X31], #0x20
	0x01DA6D28 B 0x3C873AC
	0x01DA6D2C ADRP X21, 0x2350000
	0x01DA6D30 LDR X21, [X21 + 0xA78]
	0x01DA6D34 LDR X0, [X21]
	0x01DA6D38 LDR W8, [X0 + 0xE0]
	0x01DA6D3C CBNZ W8, 0x1DA6D44
	0x01DA6D40 BL 0x1C16DFC
	0x01DA6D44 MOV X0, X19
	0x01DA6D48 MOV X1, X31
	0x01DA6D4C BL 0x1E77B08
	0x01DA6D50 LDR X0, [X19 + 0x38]
	0x01DA6D54 CBZ X0, 0x1DA6E58
	0x01DA6D58 MOV X1, X31
	0x01DA6D5C BL 0x1E9E538
	0x01DA6D60 CMP W0, 0x4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2633000
	008 Move W8, [X20+2712]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2351000
	015 Move X0, [X0+1144]
	016 Call 0x1C17CF4
	017 Move X0, 0x2352000
	018 Move X0, [X0+1080]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2712], W8
	022 Move X22, [X19+208]
	023 Compare X22, 0
	024 JumpIfEqual {67}
	025 Move X23, 0x2351000
	026 Move X23, [X23+1144]
	027 Move X21, 0x2352000
	028 Move X20, [X22+32]
	029 Move X0, [X23]
	030 Move X21, [X21+1080]
	031 Call 0x1C17F10
	032 Move X2, [X21]
	033 Move X1, X19
	034 Move X3, X31
	035 Move X21, X0
	036 Call Action`2<Int32Enum, Int32Enum>..ctor, X0, X1, X2
	037 Move X0, X20
	038 Move X1, X21
	039 Move X2, X31
	040 Call Delegate.Combine, X0, X1
	041 Compare X0, 0
	042 JumpIfEqual {59}
	043 Move X20, [X23]
	044 Move X19, X0
	045 Move X1, X20
	046 Call 0x1C17E00
	047 Compare X0, 0
	048 JumpIfEqual {56}
	049 Move [X22+32], X0
	050 Move X20, [X23]
	051 Move X0, X19
	052 Move X1, X20
	053 Call 0x1C17E00
	054 Compare X0, 0
	055 JumpIfNotEqual {60}
	056 Move X0, X19
	057 Move X1, X20
	058 Call 0x1C181E0
	059 Move [X22+32], X31
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X30, [X31+48]
	065 Move X23, [X31+56]
	066 Return 
	067 Call 0x1C17F20

Method: System.Void Render()

Disassembly:
	0x01DA6D64 B.NE 0x1DA6D74
	0x01DA6D68 LDP X20, X19, [X31 + 0x10]
	0x01DA6D6C LDP X30, X21, [X31], #0x20
	0x01DA6D70 RET
	0x01DA6D74 LDR X0, [X19 + 0x40]
	0x01DA6D78 CBZ X0, 0x1DA6E58
	0x01DA6D7C MOV X1, X31
	0x01DA6D80 BL 0x1E94078
	0x01DA6D84 TBNZ X0, 0x0, 0x1DA6DC0
	0x01DA6D88 LDR X0, [X21]
	0x01DA6D8C LDR X19, [X19 + 0x40]
	0x01DA6D90 LDR W8, [X0 + 0xE0]
	0x01DA6D94 CBNZ W8, 0x1DA6D9C
	0x01DA6D98 BL 0x1C16DFC
	0x01DA6D9C ADRP X8, 0x2351000
	0x01DA6DA0 LDR X8, [X8 + 0x4B0]
	0x01DA6DA4 MOV X1, X19
	0x01DA6DA8 LDP X20, X19, [X31 + 0x10]
	0x01DA6DAC MOVZ W2, 0x1
	0x01DA6DB0 LDR X0, [X8]
	0x01DA6DB4 MOV X3, X31
	0x01DA6DB8 LDP X30, X21, [X31], #0x20
	0x01DA6DBC B 0x1E77B00
	0x01DA6DC0 LDR X8, [X19 + 0x38]
	0x01DA6DC4 CBZ X8, 0x1DA6E58
	0x01DA6DC8 MOV W20, W0
	0x01DA6DCC LDR X0, [X8 + 0x50]
	0x01DA6DD0 CBZ X0, 0x1DA6E58
	0x01DA6DD4 MOV X1, X31

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X0
	006 Call TeleportationMachine.get_state, X0
	007 Move X19, [X20+184]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move V8, [X20+192]
	010 Move X0, X20
	011 Call TeleportationMachine.get_charge, X0
	012 Compare X19, 0
	013 JumpIfEqual {32}
	014 Move S1, 1
	015 NotImplemented "Instruction FCMP not yet implemented."
	016 NotImplemented "Instruction FMIN not yet implemented."
	017 Move S1, W31
	018 NotImplemented "Instruction FCSEL not yet implemented."
	019 Multiply S0, S8, S0
	020 Add S0, S0, S1
	021 Move S0, W31
	022 Compare X19, 0
	023 JumpIfEqual {32}
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+8]
	028 Move X1, X31
	029 Move V8, [X31+32]
	030 Call Light.set_intensity, X0, V0
	031 Return 
	032 Call 0x1C17F20

Method: System.Void FixedUpdateNetwork()

Disassembly:
	0x01DA6DD8 BL 0x1EC4D00
	0x01DA6DDC TBZ X0, 0x0, 0x1DA6E4C
	0x01DA6DE0 LDR X8, [X19 + 0x38]
	0x01DA6DE4 CBZ X8, 0x1DA6E58
	0x01DA6DE8 LDR X0, [X8 + 0x50]
	0x01DA6DEC MOVZ W1, 0x8
	0x01DA6DF0 MOV X2, X31
	0x01DA6DF4 BL 0x1ED9318
	0x01DA6DF8 LDR X8, [X19 + 0x40]
	0x01DA6DFC CBZ X8, 0x1DA6E58
	0x01DA6E00 LDR X8, [X8 + 0x20]
	0x01DA6E04 MOV X21, X0
	0x01DA6E08 CBZ X8, 0x1DA6E14
	0x01DA6E0C LDR W0, [X8]
	0x01DA6E10 B 0x1DA6E18
	0x01DA6E14 MOV X0, X31
	0x01DA6E18 LDR W1, [X19 + 0x68]
	0x01DA6E1C MOVZ W2, 0x2
	0x01DA6E20 MOV X3, X31
	0x01DA6E24 BL 0x1E9C23C
	0x01DA6E28 STUR X0, [X21 + 0x1C]
	0x01DA6E2C CBZ X21, 0x1DA6E58
	0x01DA6E30 MOVZ W8, 0x40
	0x01DA6E34 STR W8, [X21 + 0xC]
	0x01DA6E38 LDR X0, [X19 + 0x38]
	0x01DA6E3C CBZ X0, 0x1DA6E58
	0x01DA6E40 MOV X1, X21
	0x01DA6E44 MOV X2, X31
	0x01DA6E48 BL 0x1EA1E24
	0x01DA6E4C ANDS W31, W20, 0x7
	0x01DA6E50 B.NE 0x1DA6D14
	0x01DA6E54 B 0x1DA6D68
	0x01DA6E58 BL 0x1C16F20
	0x01DA6E5C STR X30, [X31 - 0x30]!
	0x01DA6E60 STP X22, X21, [X31 + 0x10]
	0x01DA6E64 STP X20, X19, [X31 + 0x20]
	0x01DA6E68 ADRP X22, 0x2632000
	0x01DA6E6C ADRP X21, 0x234F000
	0x01DA6E70 LDRB W8, [X22 + 0xAA4]
	0x01DA6E74 LDR X21, [X21 + 0x310]
	0x01DA6E78 MOV X19, X1
	0x01DA6E7C MOV W20, W0
	0x01DA6E80 TBNZ X8, 0x0, 0x1DA6EA4
	0x01DA6E84 ADRP X0, 0x2351000
	0x01DA6E88 LDR X0, [X0 + 0x4B8]
	0x01DA6E8C BL 0x1C16CF4
	0x01DA6E90 ADRP X0, 0x234F000
	0x01DA6E94 LDR X0, [X0 + 0x310]
	0x01DA6E98 BL 0x1C16CF4
	0x01DA6E9C MOVZ W8, 0x1
	0x01DA6EA0 STRB W8, [X22 + 0xAA4]
	0x01DA6EA4 LDR X0, [X21]
	0x01DA6EA8 LDR W8, [X0 + 0xE0]
	0x01DA6EAC CBNZ W8, 0x1DA6EB8
	0x01DA6EB0 BL 0x1C16DFC
	0x01DA6EB4 LDR X0, [X21]
	0x01DA6EB8 LDR X8, [X0 + 0xB8]
	0x01DA6EBC LDR X0, [X8]
	0x01DA6EC0 CBZ X0, 0x1DA6EE8
	0x01DA6EC4 ADRP X8, 0x2351000
	0x01DA6EC8 LDR X8, [X8 + 0x4B8]
	0x01DA6ECC MOV W1, W20
	0x01DA6ED0 MOV X2, X19
	0x01DA6ED4 LDP X20, X19, [X31 + 0x20]
	0x01DA6ED8 LDR X3, [X8]
	0x01DA6EDC LDP X22, X21, [X31 + 0x10]
	0x01DA6EE0 LDR X30, [X31], #0x30
	0x01DA6EE4 B 0x2A46818
	0x01DA6EE8 BL 0x1C16F20
	0x01DA6EEC B 0x1DA6AFC
	0x01DA6EF0 STP X30, X19, [X31 - 0x10]!
	0x01DA6EF4 MOV X19, X0
	0x01DA6EF8 FMOV S0, W31
	0x01DA6EFC FMOV S1, W31
	0x01DA6F00 FMOV S2, 1
	0x01DA6F04 FMOV S3, 1
	0x01DA6F08 MOV X0, X31
	0x01DA6F0C BL 0x3C0D030
	0x01DA6F10 MOV X0, X19
	0x01DA6F14 MOV X1, X31
	0x01DA6F18 BL 0x3C32E90
	0x01DA6F1C CBZ X0, 0x1DA6F38
	0x01DA6F20 MOV X1, X31
	0x01DA6F24 BL 0x3C3F58C

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X1, X31
	006 Move X19, X0
	007 Call NetworkBehaviour.FixedUpdateNetwork, X0
	008 Move X0, [X19+64]
	009 Compare X0, 0
	010 JumpIfEqual {89}
	011 Move X1, X31
	012 Call NetworkObject.get_HasStateAuthority, X0
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {56}
	017 Move X0, X19
	018 Call TeleportationMachine.get_state, X0
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X0, X19
	022 Call TeleportationMachine.get_charge, X0
	023 Move X0, X31
	024 Move V8, V0
	025 Call Time.get_fixedDeltaTime
	026 Move V1, [X19+132]
	027 Move X0, X19
	028 NotImplemented "Instruction FDIV not yet implemented."
	029 Add S0, S8, S0
	030 Call TeleportationMachine.set_charge, X0, V0
	031 Move X0, X19
	032 Call TeleportationMachine.get_charge, X0
	033 Move S1, 1
	034 NotImplemented "Instruction FCMP not yet implemented."
	035 Move W1, 2
	036 Move X0, X19
	037 Call TeleportationMachine.set_state, X0, X1
	038 Move X0, X19
	039 Call TeleportationMachine.MasterTeleport, X0
	040 Move X0, X19
	041 Call TeleportationMachine.RPC_Teleport, X0
	042 Move X0, X19
	043 Call TeleportationMachine.get_charge, X0
	044 Move X0, X31
	045 Move V8, V0
	046 Call Time.get_fixedDeltaTime
	047 Move V1, [X19+136]
	048 Move X0, X19
	049 NotImplemented "Instruction FDIV not yet implemented."
	050 Add S0, S8, S0
	051 Call TeleportationMachine.set_charge, X0, V0
	052 Move X0, X19
	053 Call TeleportationMachine.get_charge, X0
	054 Move S1, 1
	055 NotImplemented "Instruction FCMP not yet implemented."
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+8]
	059 Move V8, [X31+32]
	060 Return 
	061 Move X0, X19
	062 Move W1, W31
	063 Call TeleportationMachine.set_state, X0, X1
	064 Move X20, [X19+168]
	065 Move X0, X19
	066 Move X1, X31
	067 Call Component.get_transform, X0
	068 Compare X0, 0
	069 JumpIfEqual {89}
	070 Move X1, X31
	071 Call Transform.get_position, X0
	072 Compare X20, 0
	073 JumpIfEqual {89}
	074 Move S3, 1
	075 Move W1, 1
	076 Move X0, X20
	077 Move X2, X31
	078 Call RandomSFX.Play, X0, X1, V0, X2
	079 Move X0, X19
	080 Call TeleportationMachine.RPC_RechargeFinished, X0
	081 Move X0, X19
	082 Move X20, [X31+16]
	083 Move X19, [X31+24]
	084 Move X30, [X31+8]
	085 Move S0, W31
	086 Move V8, [X31+32]
	087 Call TeleportationMachine.set_charge, X0, V0
	088 Return 
	089 Call 0x1C17F20

Method: System.Void RPC_RequestActivation()

Disassembly:
	0x01DA7AFC BL 0x33C0DE4
	0x01DA7B00 CBZ X0, 0x1DA7B3C
	0x01DA7B04 LDR X21, [X23]
	0x01DA7B08 MOV X20, X0
	0x01DA7B0C MOV X1, X21
	0x01DA7B10 BL 0x1C16E00
	0x01DA7B14 CBZ X0, 0x1DA7B30
	0x01DA7B18 STR X0, [X22 + 0x20]
	0x01DA7B1C LDR X21, [X23]
	0x01DA7B20 MOV X0, X20
	0x01DA7B24 MOV X1, X21
	0x01DA7B28 BL 0x1C16E00
	0x01DA7B2C CBNZ X0, 0x1DA7B40
	0x01DA7B30 MOV X0, X20
	0x01DA7B34 MOV X1, X21
	0x01DA7B38 B 0x1DA7BAC
	0x01DA7B3C STR X31, [X22 + 0x20]
	0x01DA7B40 LDR X22, [X19 + 0xB0]
	0x01DA7B44 CBZ X22, 0x1DA7C4C
	0x01DA7B48 ADRP X23, 0x234D000
	0x01DA7B4C LDR X23, [X23 + 0xE70]
	0x01DA7B50 ADRP X21, 0x2350000
	0x01DA7B54 LDR X20, [X22 + 0x1D0]
	0x01DA7B58 LDR X0, [X23]
	0x01DA7B5C LDR X21, [X21 + 0x578]
	0x01DA7B60 BL 0x1C16F10
	0x01DA7B64 LDR X2, [X21]
	0x01DA7B68 MOV X1, X19
	0x01DA7B6C MOV X3, X31
	0x01DA7B70 MOV X21, X0
	0x01DA7B74 BL 0x3314368
	0x01DA7B78 MOV X0, X20
	0x01DA7B7C MOV X1, X21
	0x01DA7B80 MOV X2, X31
	0x01DA7B84 BL 0x33C0DE4
	0x01DA7B88 CBZ X0, 0x1DA7BB0
	0x01DA7B8C LDR X1, [X23]
	0x01DA7B90 LDR X8, [X0]
	0x01DA7B94 CMP X8, X1
	0x01DA7B98 B.NE 0x1DA7BAC
	0x01DA7B9C STR X0, [X22 + 0x1D0]
	0x01DA7BA0 LDR X8, [X0]
	0x01DA7BA4 CMP X8, X1
	0x01DA7BA8 B.EQ 0x1DA7BB4
	0x01DA7BAC BL 0x1C171E0
	0x01DA7BB0 STR X0, [X22 + 0x1D0]
	0x01DA7BB4 LDR X22, [X19 + 0xB0]
	0x01DA7BB8 CBZ X22, 0x1DA7C4C
	0x01DA7BBC ADRP X23, 0x2350000
	0x01DA7BC0 LDR X23, [X23 + 0x258]
	0x01DA7BC4 ADRP X21, 0x2350000
	0x01DA7BC8 LDR X20, [X22 + 0x210]
	0x01DA7BCC LDR X0, [X23]
	0x01DA7BD0 LDR X21, [X21 + 0x568]
	0x01DA7BD4 BL 0x1C16F10
	0x01DA7BD8 LDR X2, [X21]
	0x01DA7BDC MOV X1, X19
	0x01DA7BE0 MOV X3, X31
	0x01DA7BE4 MOV X21, X0
	0x01DA7BE8 BL 0x2A6B948
	0x01DA7BEC MOV X0, X20
	0x01DA7BF0 MOV X1, X21
	0x01DA7BF4 MOV X2, X31
	0x01DA7BF8 BL 0x33C0DE4
	0x01DA7BFC CBZ X0, 0x1DA7C38
	0x01DA7C00 LDR X20, [X23]
	0x01DA7C04 MOV X19, X0
	0x01DA7C08 MOV X1, X20
	0x01DA7C0C BL 0x1C16E00
	0x01DA7C10 CBZ X0, 0x1DA7C2C
	0x01DA7C14 STR X0, [X22 + 0x210]
	0x01DA7C18 LDR X20, [X23]
	0x01DA7C1C MOV X0, X19
	0x01DA7C20 MOV X1, X20
	0x01DA7C24 BL 0x1C16E00
	0x01DA7C28 CBNZ X0, 0x1DA7C3C
	0x01DA7C2C MOV X0, X19
	0x01DA7C30 MOV X1, X20
	0x01DA7C34 BL 0x1C171E0
	0x01DA7C38 STR X31, [X22 + 0x210]
	0x01DA7C3C LDP X20, X19, [X31 + 0x20]
	0x01DA7C40 LDP X22, X21, [X31 + 0x10]
	0x01DA7C44 LDP X30, X23, [X31], #0x30
	0x01DA7C48 RET
	0x01DA7C4C BL 0x1C16F20
	0x01DA7C50 STP X30, X23, [X31 - 0x30]!
	0x01DA7C54 STP X22, X21, [X31 + 0x10]
	0x01DA7C58 STP X20, X19, [X31 + 0x20]
	0x01DA7C5C ADRP X20, 0x2631000
	0x01DA7C60 ADRP X21, 0x234F000
	0x01DA7C64 LDRB W8, [X20 + 0xAA9]
	0x01DA7C68 LDR X21, [X21 + 0xA78]
	0x01DA7C6C MOV X19, X0
	0x01DA7C70 TBNZ X8, 0x0, 0x1DA7CDC
	0x01DA7C74 ADRP X0, 0x2350000
	0x01DA7C78 LDR X0, [X0 + 0x258]
	0x01DA7C7C BL 0x1C16CF4
	0x01DA7C80 ADRP X0, 0x234E000
	0x01DA7C84 LDR X0, [X0 + 0x6D0]
	0x01DA7C88 BL 0x1C16CF4
	0x01DA7C8C ADRP X0, 0x234D000
	0x01DA7C90 LDR X0, [X0 + 0xE70]
	0x01DA7C94 BL 0x1C16CF4
	0x01DA7C98 ADRP X0, 0x234E000
	0x01DA7C9C LDR X0, [X0 + 0x5A8]
	0x01DA7CA0 BL 0x1C16CF4
	0x01DA7CA4 ADRP X0, 0x234F000
	0x01DA7CA8 LDR X0, [X0 + 0xA78]
	0x01DA7CAC BL 0x1C16CF4
	0x01DA7CB0 ADRP X0, 0x2350000
	0x01DA7CB4 LDR X0, [X0 + 0x568]
	0x01DA7CB8 BL 0x1C16CF4
	0x01DA7CBC ADRP X0, 0x2350000
	0x01DA7CC0 LDR X0, [X0 + 0x570]
	0x01DA7CC4 BL 0x1C16CF4
	0x01DA7CC8 ADRP X0, 0x2350000
	0x01DA7CCC LDR X0, [X0 + 0x578]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2632000
	005 Move W8, [X20+2713]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x2350000
	012 Move X0, [X0+2680]
	013 Call 0x1C17CF4
	014 Move X0, 0x2351000
	015 Move X0, [X0+1192]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2713], W8
	019 Move W8, [X19+88]
	020 Compare W8, 0
	021 JumpIfEqual {50}
	022 Move [X19+88], W31
	023 Move X0, X19
	024 Call TeleportationMachine.get_state, X0
	025 Compare W0, 0
	026 JumpIfNotEqual {66}
	027 Move S0, W31
	028 Move X0, X19
	029 Call TeleportationMachine.set_charge, X0, V0
	030 Move W1, 1
	031 Move X0, X19
	032 Call TeleportationMachine.set_state, X0, X1
	033 Move X0, [X19+176]
	034 Compare X0, 0
	035 JumpIfEqual {144}
	036 Move X20, [X19+152]
	037 Move X1, X31
	038 Call Transform.get_position, X0
	039 Compare X20, 0
	040 JumpIfEqual {144}
	041 Move S3, 1
	042 Move W1, 1
	043 Move X0, X20
	044 Move X2, X31
	045 Call RandomSFX.Play, X0, X1, V0, X2
	046 Move X0, X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X20, 0x2350000
	051 Move X20, [X20+2680]
	052 Move X0, [X20]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X0, X19
	058 Move X1, X31
	059 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	060 Move X0, [X19+56]
	061 Compare X0, 0
	062 JumpIfEqual {144}
	063 Move X1, X31
	064 Call NetworkRunner.get_Stage, X0
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 Return 
	070 Move X0, [X19+64]
	071 Compare X0, 0
	072 JumpIfEqual {144}
	073 Move X1, X31
	074 Call NetworkObject.GetLocalAuthorityMask, X0
	075 And W31, W0, 7
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {23}
	080 Move X8, [X19+56]
	081 Compare X8, 0
	082 JumpIfEqual {144}
	083 Move X0, [X8+80]
	084 Compare X0, 0
	085 JumpIfEqual {144}
	086 Move X1, X31
	087 Call Simulation.HasAnyActiveConnections, X0
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {66}
	092 Move X8, [X19+56]
	093 Compare X8, 0
	094 JumpIfEqual {144}
	095 Move X0, [X8+80]
	096 Move W1, 8
	097 Move X2, X31
	098 Call SimulationMessage.Allocate, X0, X1
	099 Move X8, [X19+64]
	100 Compare X8, 0
	101 JumpIfEqual {144}
	102 Move X8, [X8+32]
	103 Move X20, X0
	104 Compare X8, 0
	105 JumpIfEqual {124}
	106 Move W0, [X8]
	107 Move X0, [X20]
	108 Move X19, [X19+64]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 Move X8, 0x2351000
	114 Move X8, [X8+1192]
	115 Move X1, X19
	116 Move X20, [X31+16]
	117 Move X19, [X31+24]
	118 Move W2, 7
	119 Move X0, [X8]
	120 Move X3, X31
	121 Move X30, [X31+32]
	122 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	123 Return 
	124 Move X0, X31
	125 Move W1, [X19+104]
	126 Move W2, 1
	127 Move X3, X31
	128 Call RpcHeader.Create, X0, X1, X2
	129 Move [X20+28], X0
	130 Compare X20, 0
	131 JumpIfEqual {144}
	132 Move W8, 64
	133 Move [X20+12], W8
	134 Move X0, [X19+56]
	135 Compare X0, 0
	136 JumpIfEqual {144}
	137 Move X1, X20
	138 Move X20, [X31+16]
	139 Move X19, [X31+24]
	140 Move X2, X31
	141 Move X30, [X31+32]
	142 Call NetworkRunner.SendRpc, X0, X1
	143 Return 
	144 Call 0x1C17F20

Method: System.Void RPC_PlayChargingParticles()

Disassembly:
	0x01DA7CD0 BL 0x1C16CF4
	0x01DA7CD4 MOVZ W8, 0x1
	0x01DA7CD8 STRB W8, [X20 + 0xAA9]
	0x01DA7CDC LDR X0, [X21]
	0x01DA7CE0 LDR W8, [X0 + 0xE0]
	0x01DA7CE4 CBNZ W8, 0x1DA7CEC
	0x01DA7CE8 BL 0x1C16DFC
	0x01DA7CEC CBZ X19, 0x1DA7EB8
	0x01DA7CF0 LDR W8, [X19 + 0x30]
	0x01DA7CF4 LDR X22, [X19 + 0x80]
	0x01DA7CF8 ORR W8, W8, 0x8
	0x01DA7CFC STR W8, [X19 + 0x30]
	0x01DA7D00 CBZ X22, 0x1DA7EB8
	0x01DA7D04 ADRP X23, 0x234E000
	0x01DA7D08 LDR X23, [X23 + 0x6D0]
	0x01DA7D0C ADRP X21, 0x2350000
	0x01DA7D10 LDR X20, [X22 + 0x20]
	0x01DA7D14 LDR X0, [X23]
	0x01DA7D18 LDR X21, [X21 + 0x570]
	0x01DA7D1C BL 0x1C16F10
	0x01DA7D20 LDR X2, [X21]
	0x01DA7D24 MOV X1, X19
	0x01DA7D28 MOV X3, X31
	0x01DA7D2C MOV X21, X0
	0x01DA7D30 BL 0x2A6B948
	0x01DA7D34 MOV X0, X20
	0x01DA7D38 MOV X1, X21
	0x01DA7D3C MOV X2, X31
	0x01DA7D40 BL 0x33C0FDC
	0x01DA7D44 CBZ X0, 0x1DA7D78
	0x01DA7D48 LDR X21, [X23]
	0x01DA7D4C MOV X20, X0
	0x01DA7D50 MOV X1, X21
	0x01DA7D54 BL 0x1C16E00
	0x01DA7D58 CBZ X0, 0x1DA7E68
	0x01DA7D5C STR X0, [X22 + 0x20]
	0x01DA7D60 LDR X21, [X23]
	0x01DA7D64 MOV X0, X20
	0x01DA7D68 MOV X1, X21
	0x01DA7D6C BL 0x1C16E00
	0x01DA7D70 CBNZ X0, 0x1DA7D7C
	0x01DA7D74 B 0x1DA7E68
	0x01DA7D78 STR X31, [X22 + 0x20]
	0x01DA7D7C LDR X22, [X19 + 0xB0]
	0x01DA7D80 CBZ X22, 0x1DA7EB8
	0x01DA7D84 ADRP X23, 0x234D000
	0x01DA7D88 LDR X23, [X23 + 0xE70]
	0x01DA7D8C ADRP X21, 0x2350000
	0x01DA7D90 LDR X20, [X22 + 0x1D0]
	0x01DA7D94 LDR X0, [X23]
	0x01DA7D98 LDR X21, [X21 + 0x578]
	0x01DA7D9C BL 0x1C16F10
	0x01DA7DA0 LDR X2, [X21]
	0x01DA7DA4 MOV X1, X19
	0x01DA7DA8 MOV X3, X31
	0x01DA7DAC MOV X21, X0
	0x01DA7DB0 BL 0x3314368
	0x01DA7DB4 MOV X0, X20
	0x01DA7DB8 MOV X1, X21
	0x01DA7DBC MOV X2, X31
	0x01DA7DC0 BL 0x33C0FDC
	0x01DA7DC4 CBZ X0, 0x1DA7DEC
	0x01DA7DC8 LDR X1, [X23]
	0x01DA7DCC LDR X8, [X0]
	0x01DA7DD0 CMP X8, X1
	0x01DA7DD4 B.NE 0x1DA7E70
	0x01DA7DD8 STR X0, [X22 + 0x1D0]
	0x01DA7DDC LDR X8, [X0]
	0x01DA7DE0 CMP X8, X1
	0x01DA7DE4 B.EQ 0x1DA7DF0
	0x01DA7DE8 B 0x1DA7E70
	0x01DA7DEC STR X0, [X22 + 0x1D0]
	0x01DA7DF0 LDR X22, [X19 + 0xB0]
	0x01DA7DF4 CBZ X22, 0x1DA7EB8
	0x01DA7DF8 ADRP X23, 0x2350000
	0x01DA7DFC LDR X23, [X23 + 0x258]
	0x01DA7E00 ADRP X21, 0x2350000
	0x01DA7E04 LDR X20, [X22 + 0x210]
	0x01DA7E08 LDR X0, [X23]
	0x01DA7E0C LDR X21, [X21 + 0x568]
	0x01DA7E10 BL 0x1C16F10
	0x01DA7E14 LDR X2, [X21]
	0x01DA7E18 MOV X1, X19
	0x01DA7E1C MOV X3, X31
	0x01DA7E20 MOV X21, X0
	0x01DA7E24 BL 0x2A6B948
	0x01DA7E28 MOV X0, X20
	0x01DA7E2C MOV X1, X21
	0x01DA7E30 MOV X2, X31
	0x01DA7E34 BL 0x33C0FDC
	0x01DA7E38 CBZ X0, 0x1DA7E74
	0x01DA7E3C LDR X21, [X23]
	0x01DA7E40 MOV X20, X0
	0x01DA7E44 MOV X1, X21
	0x01DA7E48 BL 0x1C16E00
	0x01DA7E4C CBZ X0, 0x1DA7E68
	0x01DA7E50 STR X0, [X22 + 0x210]
	0x01DA7E54 LDR X21, [X23]
	0x01DA7E58 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2632000
	006 Move W8, [X20+2714]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x2350000
	013 Move X0, [X0+2680]
	014 Call 0x1C17CF4
	015 Move X0, 0x2351000
	016 Move X0, [X0+1200]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2714], W8
	020 Move W8, [X19+88]
	021 Compare W8, 0
	022 JumpIfEqual {34}
	023 Move [X19+88], W31
	024 Move X0, [X19+144]
	025 Compare X0, 0
	026 JumpIfEqual {127}
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X1, X31
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call ParticleSystem.Play, X0
	033 Return 
	034 Move X21, 0x2350000
	035 Move X21, [X21+2680]
	036 Move X0, [X21]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X19
	042 Move X1, X31
	043 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	044 Move X0, [X19+56]
	045 Compare X0, 0
	046 JumpIfEqual {127}
	047 Move X1, X31
	048 Call NetworkRunner.get_Stage, X0
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Return 
	055 Move X0, [X19+64]
	056 Compare X0, 0
	057 JumpIfEqual {127}
	058 Move X1, X31
	059 Call NetworkObject.GetLocalAuthorityMask, X0
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {82}
	064 Move X0, [X21]
	065 Move X19, [X19+64]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X8, 0x2351000
	071 Move X8, [X8+1200]
	072 Move X1, X19
	073 Move X20, [X31+16]
	074 Move X19, [X31+24]
	075 Move W2, 1
	076 Move X0, [X8]
	077 Move X3, X31
	078 Move X30, [X31+32]
	079 Move X21, [X31+40]
	080 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	081 Return 
	082 Move X8, [X19+56]
	083 Compare X8, 0
	084 JumpIfEqual {127}
	085 Move W20, W0
	086 Move X0, [X8+80]
	087 Compare X0, 0
	088 JumpIfEqual {127}
	089 Move X1, X31
	090 Call Simulation.HasAnyActiveConnections, X0
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {126}
	095 Move X8, [X19+56]
	096 Compare X8, 0
	097 JumpIfEqual {127}
	098 Move X0, [X8+80]
	099 Move W1, 8
	100 Move X2, X31
	101 Call SimulationMessage.Allocate, X0, X1
	102 Move X8, [X19+64]
	103 Compare X8, 0
	104 JumpIfEqual {127}
	105 Move X8, [X8+32]
	106 Move X21, X0
	107 Compare X8, 0
	108 JumpIfEqual {110}
	109 Move W0, [X8]
	110 Move X0, X31
	111 Move W1, [X19+104]
	112 Move W2, 2
	113 Move X3, X31
	114 Call RpcHeader.Create, X0, X1, X2
	115 Move [X21+28], X0
	116 Compare X21, 0
	117 JumpIfEqual {127}
	118 Move W8, 64
	119 Move [X21+12], W8
	120 Move X0, [X19+56]
	121 Compare X0, 0
	122 JumpIfEqual {127}
	123 Move X1, X21
	124 Move X2, X31
	125 Call NetworkRunner.SendRpc, X0, X1
	126 And W31, W20, 7
	127 Call 0x1C17F20

Method: System.Void MasterTeleport()

Disassembly:
	0x01DA6F28 LDR V3, [X19 + 0x80]
	0x01DA6F2C MOV X0, X31
	0x01DA6F30 LDP X30, X19, [X31], #0x10
	0x01DA6F34 B 0x3C0CB98
	0x01DA6F38 BL 0x1C16F20
	0x01DA6F3C FMOV V0.2S, 0x0
	0x01DA6F40 MOVZ W8, 0x40C00000
	0x01DA6F44 MOVZ W9, 0x44160000
	0x01DA6F48 MOV X1, X31
	0x01DA6F4C STR D0, [X0 + 0x80]
	0x01DA6F50 STR W8, [X0 + 0x88]
	0x01DA6F54 STR W9, [X0 + 0xC0]
	0x01DA6F58 B 0x1E74F04
	0x01DA6F5C STP X30, X19, [X31 - 0x10]!
	0x01DA6F60 LDR V0, [X0 + 0xC4]
	0x01DA6F64 MOV X19, X0
	0x01DA6F68 BL 0x1DA5B6C
	0x01DA6F6C LDR W1, [X19 + 0xC8]
	0x01DA6F70 MOV X0, X19
	0x01DA6F74 LDP X30, X19, [X31], #0x10
	0x01DA6F78 B 0x1DA5C2C
	0x01DA6F7C STP X30, X19, [X31 - 0x10]!
	0x01DA6F80 MOV X19, X0
	0x01DA6F84 BL 0x1DA5B0C
	0x01DA6F88 MOV X0, X19
	0x01DA6F8C STR S0, [X19 + 0xC4]
	0x01DA6F90 BL 0x1DA5BCC
	0x01DA6F94 STR W0, [X19 + 0xC8]
	0x01DA6F98 LDP X30, X19, [X31], #0x10
	0x01DA6F9C RET
	0x01DA6FA0 STR X30, [X31 - 0x20]!
	0x01DA6FA4 STP X20, X19, [X31 + 0x10]
	0x01DA6FA8 ADRP X20, 0x2632000
	0x01DA6FAC LDRB W8, [X20 + 0xA9E]
	0x01DA6FB0 MOV X19, X0
	0x01DA6FB4 TBNZ X8, 0x0, 0x1DA6FCC
	0x01DA6FB8 ADRP X0, 0x2351000
	0x01DA6FBC LDR X0, [X0 + 0x4C0]
	0x01DA6FC0 BL 0x1C16CF4
	0x01DA6FC4 MOVZ W8, 0x1
	0x01DA6FC8 STRB W8, [X20 + 0xA9E]
	0x01DA6FCC CBZ X19, 0x1DA7024
	0x01DA6FD0 ADRP X9, 0x2351000
	0x01DA6FD4 LDR X9, [X9 + 0x4C0]
	0x01DA6FD8 MOVZ W8, 0x1
	0x01DA6FDC STRB W8, [X19 + 0x58]
	0x01DA6FE0 LDR X8, [X19]
	0x01DA6FE4 LDR X1, [X9]
	0x01DA6FE8 LDRB W10, [X8 + 0x130]
	0x01DA6FEC LDRB W9, [X1 + 0x130]
	0x01DA6FF0 CMP W10, W9
	0x01DA6FF4 B.CC 0x1DA701C
	0x01DA6FF8 LDR X8, [X8 + 0xC8]
	0x01DA6FFC ADD X8, X8, X9, 0x3, LSL
	0x01DA7000 LDUR X8, [X8 - 0x8]
	0x01DA7004 CMP X8, X1
	0x01DA7008 B.NE 0x1DA701C
	0x01DA700C MOV X0, X19
	0x01DA7010 LDP X20, X19, [X31 + 0x10]
	0x01DA7014 LDR X30, [X31], #0x20
	0x01DA7018 B 0x1DA6AFC
	0x01DA701C MOV X0, X19
	0x01DA7020 BL 0x1C171E0
	0x01DA7024 BL 0x1C16F20
	0x01DA7028 STR X30, [X31 - 0x20]!
	0x01DA702C STP X20, X19, [X31 + 0x10]
	0x01DA7030 ADRP X20, 0x2631000
	0x01DA7034 LDRB W8, [X20 + 0xA9F]
	0x01DA7038 MOV X19, X0
	0x01DA703C TBNZ X8, 0x0, 0x1DA7054
	0x01DA7040 ADRP X0, 0x2350000
	0x01DA7044 LDR X0, [X0 + 0x4C0]
	0x01DA7048 BL 0x1C16CF4
	0x01DA704C MOVZ W8, 0x1
	0x01DA7050 STRB W8, [X20 + 0xA9F]
	0x01DA7054 CBZ X19, 0x1DA70AC
	0x01DA7058 ADRP X9, 0x2350000
	0x01DA705C LDR X9, [X9 + 0x4C0]
	0x01DA7060 MOVZ W8, 0x1
	0x01DA7064 STRB W8, [X19 + 0x58]
	0x01DA7068 LDR X8, [X19]
	0x01DA706C LDR X1, [X9]
	0x01DA7070 LDRB W10, [X8 + 0x130]
	0x01DA7074 LDRB W9, [X1 + 0x130]
	0x01DA7078 CMP W10, W9
	0x01DA707C B.CC 0x1DA70A4
	0x01DA7080 LDR X8, [X8 + 0xC8]
	0x01DA7084 ADD X8, X8, X9, 0x3, LSL
	0x01DA7088 LDUR X8, [X8 - 0x8]
	0x01DA708C CMP X8, X1
	0x01DA7090 B.NE 0x1DA70A4
	0x01DA7094 MOV X0, X19
	0x01DA7098 LDP X20, X19, [X31 + 0x10]
	0x01DA709C LDR X30, [X31], #0x20
	0x01DA70A0 B 0x1DA6CD0
	0x01DA70A4 MOV X0, X19
	0x01DA70A8 BL 0x1C171E0
	0x01DA70AC BL 0x1C16F20
	0x01DA70B0 STR X30, [X31 - 0x20]!
	0x01DA70B4 STP X20, X19, [X31 + 0x10]
	0x01DA70B8 ADRP X20, 0x2631000
	0x01DA70BC LDRB W8, [X20 + 0xAA0]
	0x01DA70C0 MOV X19, X0
	0x01DA70C4 TBNZ X8, 0x0, 0x1DA70DC
	0x01DA70C8 ADRP X0, 0x2350000
	0x01DA70CC LDR X0, [X0 + 0x4C0]
	0x01DA70D0 BL 0x1C16CF4
	0x01DA70D4 MOVZ W8, 0x1
	0x01DA70D8 STRB W8, [X20 + 0xAA0]
	0x01DA70DC CBZ X19, 0x1DA7134
	0x01DA70E0 ADRP X9, 0x2350000
	0x01DA70E4 LDR X9, [X9 + 0x4C0]
	0x01DA70E8 MOVZ W8, 0x1
	0x01DA70EC STRB W8, [X19 + 0x58]
	0x01DA70F0 LDR X8, [X19]
	0x01DA70F4 LDR X1, [X9]
	0x01DA70F8 LDRB W10, [X8 + 0x130]
	0x01DA70FC LDRB W9, [X1 + 0x130]
	0x01DA7100 CMP W10, W9
	0x01DA7104 B.CC 0x1DA712C
	0x01DA7108 LDR X8, [X8 + 0xC8]
	0x01DA710C ADD X8, X8, X9, 0x3, LSL
	0x01DA7110 LDUR X8, [X8 - 0x8]
	0x01DA7114 CMP X8, X1
	0x01DA7118 B.NE 0x1DA712C
	0x01DA711C MOV X0, X19
	0x01DA7120 LDP X20, X19, [X31 + 0x10]
	0x01DA7124 LDR X30, [X31], #0x20
	0x01DA7128 B 0x1DA637C
	0x01DA712C MOV X0, X19
	0x01DA7130 BL 0x1C171E0
	0x01DA7134 BL 0x1C16F20
	0x01DA7138 STR X30, [X31 - 0x20]!
	0x01DA713C STP X20, X19, [X31 + 0x10]
	0x01DA7140 ADRP X20, 0x2631000
	0x01DA7144 LDRB W8, [X20 + 0xAA1]
	0x01DA7148 MOV X19, X0
	0x01DA714C TBNZ X8, 0x0, 0x1DA7164
	0x01DA7150 ADRP X0, 0x2350000
	0x01DA7154 LDR X0, [X0 + 0x4C0]
	0x01DA7158 BL 0x1C16CF4
	0x01DA715C MOVZ W8, 0x1
	0x01DA7160 STRB W8, [X20 + 0xAA1]
	0x01DA7164 CBZ X19, 0x1DA71BC
	0x01DA7168 ADRP X9, 0x2350000
	0x01DA716C LDR X9, [X9 + 0x4C0]
	0x01DA7170 MOVZ W8, 0x1
	0x01DA7174 STRB W8, [X19 + 0x58]
	0x01DA7178 LDR X8, [X19]
	0x01DA717C LDR X1, [X9]
	0x01DA7180 LDRB W10, [X8 + 0x130]
	0x01DA7184 LDRB W9, [X1 + 0x130]
	0x01DA7188 CMP W10, W9
	0x01DA718C B.CC 0x1DA71B4
	0x01DA7190 LDR X8, [X8 + 0xC8]
	0x01DA7194 ADD X8, X8, X9, 0x3, LSL
	0x01DA7198 LDUR X8, [X8 - 0x8]
	0x01DA719C CMP X8, X1
	0x01DA71A0 B.NE 0x1DA71B4
	0x01DA71A4 MOV X0, X19
	0x01DA71A8 LDP X20, X19, [X31 + 0x10]
	0x01DA71AC LDR X30, [X31], #0x20
	0x01DA71B0 B 0x1DA698C
	0x01DA71B4 MOV X0, X19
	0x01DA71B8 BL 0x1C171E0
	0x01DA71BC BL 0x1C16F20
	0x01DA71C0 SUB X31, X31, 0x40
	0x01DA71C4 STP X30, X21, [X31 + 0x20]
	0x01DA71C8 STP X20, X19, [X31 + 0x30]
	0x01DA71CC ADRP X21, 0x2631000
	0x01DA71D0 ADRP X20, 0x234E000
	0x01DA71D4 LDRB W8, [X21 + 0xAA2]
	0x01DA71D8 LDR X20, [X20 + 0x310]
	0x01DA71DC MOV X19, X0
	0x01DA71E0 TBNZ X8, 0x0, 0x1DA7234
	0x01DA71E4 ADRP X0, 0x234C000
	0x01DA71E8 LDR X0, [X0 + 0xA28]
	0x01DA71EC BL 0x1C16CF4
	0x01DA71F0 ADRP X0, 0x2350000
	0x01DA71F4 LDR X0, [X0 + 0x4C8]
	0x01DA71F8 BL 0x1C16CF4
	0x01DA71FC ADRP X0, 0x2350000
	0x01DA7200 LDR X0, [X0 + 0x4D0]
	0x01DA7204 BL 0x1C16CF4
	0x01DA7208 ADRP X0, 0x2350000
	0x01DA720C LDR X0, [X0 + 0x4D8]
	0x01DA7210 BL 0x1C16CF4
	0x01DA7214 ADRP X0, 0x234E000
	0x01DA7218 LDR X0, [X0 + 0x310]
	0x01DA721C BL 0x1C16CF4
	0x01DA7220 ADRP X0, 0x2350000
	0x01DA7224 LDR X0, [X0 + 0x4E0]
	0x01DA7228 BL 0x1C16CF4
	0x01DA722C MOVZ W8, 0x1
	0x01DA7230 STRB W8, [X21 + 0xAA2]
	0x01DA7234 LDR X0, [X20]
	0x01DA7238 LDR W8, [X0 + 0xE0]
	0x01DA723C CBNZ W8, 0x1DA7248
	0x01DA7240 BL 0x1C16DFC
	0x01DA7244 LDR X0, [X20]
	0x01DA7248 LDR X8, [X0 + 0xB8]
	0x01DA724C LDR X0, [X8]
	0x01DA7250 CBZ X0, 0x1DA7344
	0x01DA7254 ADRP X8, 0x2350000
	0x01DA7258 LDR X8, [X8 + 0x4D0]
	0x01DA725C LDR W1, [X19 + 0x20]
	0x01DA7260 LDR X2, [X8]
	0x01DA7264 BL 0x2A4500C
	0x01DA7268 TBZ X0, 0x0, 0x1DA72EC
	0x01DA726C ADRP X8, 0x2350000
	0x01DA7270 LDR X8, [X8 + 0x4D8]
	0x01DA7274 MOVN X9, 0x0
	0x01DA7278 ADD X0, X31, 0x8
	0x01DA727C MOV X1, X31
	0x01DA7280 LDR X8, [X8]
	0x01DA7284 STP X8, X9, [X31 + 0x8]
	0x01DA7288 LDR W8, [X19 + 0x20]
	0x01DA728C STR W8, [X31 + 0x18]
	0x01DA7290 BL 0x33B162C
	0x01DA7294 ADRP X8, 0x2350000
	0x01DA7298 LDR X8, [X8 + 0x4E0]
	0x01DA729C MOV X1, X0
	0x01DA72A0 MOV X2, X31
	0x01DA72A4 LDR X8, [X8]
	0x01DA72A8 MOV X0, X8
	0x01DA72AC BL 0x321B938
	0x01DA72B0 ADRP X8, 0x234C000
	0x01DA72B4 LDR X8, [X8 + 0xA28]
	0x01DA72B8 MOV X19, X0
	0x01DA72BC LDR X8, [X8]
	0x01DA72C0 LDR W9, [X8 + 0xE0]
	0x01DA72C4 CBNZ W9, 0x1DA72D0
	0x01DA72C8 MOV X0, X8
	0x01DA72CC BL 0x1C16DFC
	0x01DA72D0 MOV X0, X19
	0x01DA72D4 MOV X1, X31
	0x01DA72D8 BL 0x3C06A04
	0x01DA72DC LDP X20, X19, [X31 + 0x30]
	0x01DA72E0 LDP X30, X21, [X31 + 0x20]
	0x01DA72E4 ADD X31, X31, 0x40
	0x01DA72E8 RET
	0x01DA72EC LDR X0, [X20]
	0x01DA72F0 LDR W8, [X0 + 0xE0]
	0x01DA72F4 CBNZ W8, 0x1DA7300
	0x01DA72F8 BL 0x1C16DFC
	0x01DA72FC LDR X0, [X20]
	0x01DA7300 LDR X8, [X0 + 0xB8]
	0x01DA7304 LDR W21, [X19 + 0x20]
	0x01DA7308 MOV X0, X19
	0x01DA730C MOV X1, X31
	0x01DA7310 LDR X20, [X8]
	0x01DA7314 BL 0x3C32E90
	0x01DA7318 CBZ X20, 0x1DA7344
	0x01DA731C ADRP X8, 0x2350000
	0x01DA7320 LDR X8, [X8 + 0x4C8]
	0x01DA7324 MOV X2, X0
	0x01DA7328 MOV X0, X20
	0x01DA732C MOV W1, W21
	0x01DA7330 LDR X3, [X8]
	0x01DA7334 LDP X20, X19, [X31 + 0x30]
	0x01DA7338 LDP X30, X21, [X31 + 0x20]
	0x01DA733C ADD X31, X31, 0x40
	0x01DA7340 B 0x2A44E18
	0x01DA7344 BL 0x1C16F20
	0x01DA7348 STP X30, X21, [X31 - 0x20]!
	0x01DA734C STP X20, X19, [X31 + 0x10]
	0x01DA7350 ADRP X21, 0x2631000
	0x01DA7354 ADRP X20, 0x234E000
	0x01DA7358 LDRB W8, [X21 + 0xAA3]
	0x01DA735C LDR X20, [X20 + 0x310]
	0x01DA7360 MOV X19, X0
	0x01DA7364 TBNZ X8, 0x0, 0x1DA7394
	0x01DA7368 ADRP X0, 0x2350000
	0x01DA736C LDR X0, [X0 + 0x4D0]
	0x01DA7370 BL 0x1C16CF4
	0x01DA7374 ADRP X0, 0x2350000
	0x01DA7378 LDR X0, [X0 + 0x4E8]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+64], D12
	003 Move [X31+80], D11
	004 Move [X31+88], D10
	005 Move [X31+96], D9
	006 Move [X31+104], D8
	007 Move [X31+112], X30
	008 Move [X31+120], X25
	009 Move [X31+128], X24
	010 Move [X31+136], X23
	011 Move [X31+144], X22
	012 Move [X31+152], X21
	013 Move [X31+160], X20
	014 Move [X31+168], X19
	015 Move X20, 0x2633000
	016 Move W8, [X20+2715]
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {57}
	022 Move X0, 0x2351000
	023 Move X0, [X0+3000]
	024 Call 0x1C17CF4
	025 Move X0, 0x2352000
	026 Move X0, [X0+1088]
	027 Call 0x1C17CF4
	028 Move X0, 0x2352000
	029 Move X0, [X0+1096]
	030 Call 0x1C17CF4
	031 Move X0, 0x2352000
	032 Move X0, [X0+1104]
	033 Call 0x1C17CF4
	034 Move X0, 0x2352000
	035 Move X0, [X0+144]
	036 Call 0x1C17CF4
	037 Move X0, 0x2352000
	038 Move X0, [X0+1112]
	039 Call 0x1C17CF4
	040 Move X0, 0x2352000
	041 Move X0, [X0+136]
	042 Call 0x1C17CF4
	043 Move X0, 0x2352000
	044 Move X0, [X0+128]
	045 Call 0x1C17CF4
	046 Move X0, 0x234E000
	047 Move X0, [X0+1432]
	048 Call 0x1C17CF4
	049 Move X0, 0x234E000
	050 Move X0, [X0+1528]
	051 Call 0x1C17CF4
	052 Move X0, 0x2350000
	053 Move X0, [X0+784]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X20+2715], W8
	057 Move X0, X19
	058 Move X1, X31
	059 Move [X31+72], X31
	060 Move [X31+32], X31
	061 Move [X31+40], X31
	062 Move [X31+48], X31
	063 Move [X31+24], X31
	064 Call Component.get_transform, X0
	065 Compare X0, 0
	066 JumpIfEqual {273}
	067 Move X22, 0x234D000
	068 Move X20, 0x2351000
	069 Move X21, 0x2351000
	070 Move X22, [X22+1528]
	071 Move X20, [X20+128]
	072 Move X21, [X21+136]
	073 Move X1, X31
	074 Call Transform.get_position, X0
	075 Move X0, [X22]
	076 Move V10, [X19+128]
	077 Move V8, V0
	078 Move V9, V1
	079 Move W8, [X0+224]
	080 Move V11, V2
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move V0, V8
	085 Move V1, V9
	086 Move V2, V11
	087 Move V3, V10
	088 Move X0, X31
	089 Call Physics.OverlapSphere, X0, V0
	090 Move X8, [X20]
	091 Move X20, X0
	092 Move X0, X8
	093 Call 0x1C17F10
	094 Move X1, [X21]
	095 Move X19, X0
	096 Call List`1<Object>..ctor, X0
	097 Compare X20, 0
	098 JumpIfEqual {273}
	099 Move W8, [X20+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X23, 0x234D000
	102 Move X24, 0x2350000
	103 Move X25, 0x2351000
	104 Move X23, [X23+1432]
	105 Move X24, [X24+3000]
	106 Move X25, [X25+144]
	107 Move W22, W31
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Add X8, X20, W22
	110 Move X0, [X8+32]
	111 Compare X0, 0
	112 JumpIfEqual {273}
	113 Move X1, X31
	114 Call Collider.get_attachedRigidbody, X0
	115 Move X8, [X23]
	116 Move X21, X0
	117 Move W9, [X8+224]
	118 Compare W9, 0
	119 JumpIfNotEqual {122}
	120 Move X0, X8
	121 Call 0x1C17DFC
	122 Move X0, X21
	123 Move X1, X31
	124 Move X2, X31
	125 Call Object.op_Equality, X0, X1
	126 Move TEMP, X0
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfEqual {172}
	130 Compare X21, 0
	131 JumpIfEqual {273}
	132 Move X1, [X24]
	133 Move X0, X21
	134 Call 0x21A4894, X0
	135 Move X8, [X23]
	136 Move X21, X0
	137 Move W9, [X8+224]
	138 Compare W9, 0
	139 JumpIfNotEqual {142}
	140 Move X0, X8
	141 Call 0x1C17DFC
	142 Move X0, X21
	143 Move X1, X31
	144 Move X2, X31
	145 Call Object.op_Inequality, X0, X1
	146 Move TEMP, X0
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfNotEqual {172}
	150 Compare X19, 0
	151 JumpIfEqual {273}
	152 Move W10, [X19+28]
	153 Move X8, [X19+16]
	154 Move X9, [X25]
	155 Add W10, W10, 1
	156 Move [X19+28], W10
	157 Compare X8, 0
	158 JumpIfEqual {273}
	159 NotImplemented "Instruction LDRSW not yet implemented."
	160 Move W11, [X8+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Add W9, W10, 1
	163 Add X8, X8, X10
	164 Move [X19+24], W9
	165 Move [X8+32], X21
	166 Move X8, [X9+32]
	167 Move X0, X19
	168 Move X1, X21
	169 Move X8, [X8+192]
	170 Move X2, [X8+112]
	171 Call List`1<Object>.AddWithResize, X0, X1
	172 Move W8, [X20+24]
	173 Add W22, W22, 1
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move X8, 0x234F000
	176 Move X8, [X8+784]
	177 Move X0, [X8]
	178 Move W8, [X0+224]
	179 Compare W8, 0
	180 JumpIfNotEqual {182}
	181 Call 0x1C17DFC
	182 Add X1, X31, 72
	183 Move W0, 1
	184 Call TeleportTarget.TryGetTeleportTarget, X0, X1
	185 Move TEMP, X0
	186 And TEMP, TEMP, 1
	187 Compare TEMP, 1
	188 JumpIfNotEqual {258}
	189 Compare X19, 0
	190 JumpIfEqual {273}
	191 Move X8, 0x2351000
	192 Move X8, [X8+1112]
	193 Move X0, X19
	194 Move X1, [X8]
	195 Add X8, X31, 0
	196 Call List`1<Object>.GetEnumerator, X0
	197 Move V0, [X31]
	198 Move X8, [X31+16]
	199 Move X20, 0x2351000
	200 Move X20, [X20+1096]
	201 Move [X31+2], V0
	202 Move [X31+48], X8
	203 Move S12, W31
	204 Move X1, [X20]
	205 Add X0, X31, 32
	206 Call Enumerator<Object>.MoveNext, X0
	207 Move TEMP, X0
	208 And TEMP, TEMP, 1
	209 Compare TEMP, 1
	210 JumpIfNotEqual {253}
	211 Move X19, [X31+48]
	212 Compare X19, 0
	213 JumpIfEqual {275}
	214 Move X0, X19
	215 Move X1, X31
	216 Call GrabbableItem.get_attachedAnchorId, X0
	217 Move [X31+24], X0
	218 Add X0, X31, 24
	219 Move X1, X31
	220 Call NetworkBehaviourId.get_IsValid, X0
	221 Move TEMP, X0
	222 And TEMP, TEMP, 1
	223 Compare TEMP, 1
	224 JumpIfEqual {204}
	225 Move X0, [X31+72]
	226 Compare X0, 0
	227 JumpIfEqual {276}
	228 Move X1, X31
	229 Call Component.get_transform, X0
	230 Compare X0, 0
	231 JumpIfEqual {277}
	232 Move X1, X31
	233 Call Transform.get_position, X0
	234 Move V8, V0
	235 Move V9, V1
	236 Move V10, V2
	237 Move S0, -0.5
	238 Move S1, 0.5
	239 Move X0, X31
	240 Call Random.Range, V0, V1
	241 Move V11, V0
	242 Move S0, -0.5
	243 Move S1, 0.5
	244 Move X0, X31
	245 Call Random.Range, V0, V1
	246 Add S3, S8, S11
	247 Add S1, S9, S12
	248 Add S2, S10, S0
	249 Move X0, X19
	250 Move V0, V3
	251 Move X1, X31
	252 Call GrabbableItem.RPC_Teleport, X0, X1
	253 Move X8, 0x2351000
	254 Move X8, [X8+1088]
	255 Add X0, X31, 32
	256 Move X1, [X8]
	257 Call Enumerator<Object>.Dispose, X0
	258 Move X20, [X31+160]
	259 Move X19, [X31+168]
	260 Move X22, [X31+144]
	261 Move X21, [X31+152]
	262 Move X24, [X31+128]
	263 Move X23, [X31+136]
	264 Move X30, [X31+112]
	265 Move X25, [X31+120]
	266 Move D9, [X31+96]
	267 Move D8, [X31+104]
	268 Move D11, [X31+80]
	269 Move D10, [X31+88]
	270 Move V12, [X31+64]
	271 Add X31, X31, 176
	272 Return 
	273 Call 0x1C17F20
	274 Call 0x1C17F28
	275 Call 0x1C17F20
	276 Call 0x1C17F20
	277 Call 0x1C17F20
	278 Move X19, X0
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Move X0, X19
	281 Call 0x3EB2AD0
	282 Move X20, [X0]
	283 Call 0x3EB2AE0
	284 Move X8, 0x2351000
	285 Move X8, [X8+1088]
	286 Add X0, X31, 32
	287 Move X1, [X8]
	288 Call Enumerator<Object>.Dispose, X0
	289 Compare X20, 0
	290 JumpIfEqual {258}
	291 Move X0, X20
	292 Call 0x1C17F18
	293 Move X20, X31
	294 Move X19, X0
	295 Move X8, 0x2351000
	296 Move X8, [X8+1088]
	297 Move X1, [X8]
	298 Add X0, X31, 32
	299 Call Enumerator<Object>.Dispose, X0
	300 Compare X20, 0
	301 JumpIfNotEqual {304}
	302 Move X0, X19
	303 Call 0x1D2D690
	304 Move X0, X20
	305 Call 0x1C17F18
	306 Call 0x1991590

Method: System.Void RPC_Teleport()

Disassembly:
	0x01DA737C BL 0x1C16CF4
	0x01DA7380 ADRP X0, 0x234E000
	0x01DA7384 LDR X0, [X0 + 0x310]
	0x01DA7388 BL 0x1C16CF4
	0x01DA738C MOVZ W8, 0x1
	0x01DA7390 STRB W8, [X21 + 0xAA3]
	0x01DA7394 LDR X0, [X20]
	0x01DA7398 LDR W8, [X0 + 0xE0]
	0x01DA739C CBNZ W8, 0x1DA73A8
	0x01DA73A0 BL 0x1C16DFC
	0x01DA73A4 LDR X0, [X20]
	0x01DA73A8 LDR X8, [X0 + 0xB8]
	0x01DA73AC LDR X0, [X8]
	0x01DA73B0 CBZ X0, 0x1DA7414
	0x01DA73B4 ADRP X8, 0x2350000
	0x01DA73B8 LDR X8, [X8 + 0x4D0]
	0x01DA73BC LDR W1, [X19 + 0x20]
	0x01DA73C0 LDR X2, [X8]
	0x01DA73C4 BL 0x2A4500C
	0x01DA73C8 TBZ X0, 0x0, 0x1DA7408
	0x01DA73CC LDR X0, [X20]
	0x01DA73D0 LDR W8, [X0 + 0xE0]
	0x01DA73D4 CBNZ W8, 0x1DA73E0
	0x01DA73D8 BL 0x1C16DFC
	0x01DA73DC LDR X0, [X20]
	0x01DA73E0 LDR X8, [X0 + 0xB8]
	0x01DA73E4 LDR X0, [X8]
	0x01DA73E8 CBZ X0, 0x1DA7414
	0x01DA73EC ADRP X8, 0x2350000
	0x01DA73F0 LDR W1, [X19 + 0x20]
	0x01DA73F4 LDR X8, [X8 + 0x4E8]
	0x01DA73F8 LDP X20, X19, [X31 + 0x10]
	0x01DA73FC LDR X2, [X8]
	0x01DA7400 LDP X30, X21, [X31], #0x20
	0x01DA7404 B 0x2A46204
	0x01DA7408 LDP X20, X19, [X31 + 0x10]
	0x01DA740C LDP X30, X21, [X31], #0x20
	0x01DA7410 RET
	0x01DA7414 BL 0x1C16F20
	0x01DA7418 MOV X1, X31
	0x01DA741C B 0x3C36C30
	0x01DA7420 STR X30, [X31 - 0x30]!
	0x01DA7424 STP X22, X21, [X31 + 0x10]
	0x01DA7428 STP X20, X19, [X31 + 0x20]
	0x01DA742C ADRP X21, 0x2631000
	0x01DA7430 ADRP X22, 0x2350000
	0x01DA7434 ADRP X19, 0x2350000
	0x01DA7438 ADRP X20, 0x234E000
	0x01DA743C LDRB W8, [X21 + 0xAA5]
	0x01DA7440 LDR X22, [X22 + 0x4F0]
	0x01DA7444 LDR X19, [X19 + 0x4F8]
	0x01DA7448 LDR X20, [X20 + 0x310]
	0x01DA744C TBNZ X8, 0x0, 0x1DA747C
	0x01DA7450 ADRP X0, 0x2350000
	0x01DA7454 LDR X0, [X0 + 0x4F8]
	0x01DA7458 BL 0x1C16CF4
	0x01DA745C ADRP X0, 0x2350000
	0x01DA7460 LDR X0, [X0 + 0x4F0]
	0x01DA7464 BL 0x1C16CF4
	0x01DA7468 ADRP X0, 0x234E000
	0x01DA746C LDR X0, [X0 + 0x310]
	0x01DA7470 BL 0x1C16CF4
	0x01DA7474 MOVZ W8, 0x1
	0x01DA7478 STRB W8, [X21 + 0xAA5]
	0x01DA747C LDR X0, [X22]
	0x01DA7480 BL 0x1C16F10
	0x01DA7484 LDR X1, [X19]
	0x01DA7488 MOV X19, X0
	0x01DA748C BL 0x2A44560
	0x01DA7490 LDR X8, [X20]
	0x01DA7494 LDP X22, X21, [X31 + 0x10]
	0x01DA7498 LDR X8, [X8 + 0xB8]
	0x01DA749C STR X19, [X8]
	0x01DA74A0 LDP X20, X19, [X31 + 0x20]
	0x01DA74A4 LDR X30, [X31], #0x30
	0x01DA74A8 RET
	0x01DA74AC SUB X31, X31, 0x1B0
	0x01DA74B0 STR X29, [X31 + 0x180]
	0x01DA74B4 STP X30, X21, [X31 + 0x190]
	0x01DA74B8 STP X20, X19, [X31 + 0x1A0]
	0x01DA74BC ADRP X20, 0x2631000
	0x01DA74C0 ADRP X21, 0x234C000
	0x01DA74C4 LDRB W8, [X20 + 0xAA6]
	0x01DA74C8 LDR X21, [X21 + 0x598]
	0x01DA74CC MOV X19, X0
	0x01DA74D0 TBNZ X8, 0x0, 0x1DA74E8
	0x01DA74D4 ADRP X0, 0x234C000
	0x01DA74D8 LDR X0, [X0 + 0x598]
	0x01DA74DC BL 0x1C16CF4
	0x01DA74E0 MOVZ W8, 0x1
	0x01DA74E4 STRB W8, [X20 + 0xAA6]
	0x01DA74E8 LDR X0, [X21]
	0x01DA74EC LDR X20, [X19 + 0x20]
	0x01DA74F0 LDR W8, [X0 + 0xE0]
	0x01DA74F4 CBNZ W8, 0x1DA74FC
	0x01DA74F8 BL 0x1C16DFC
	0x01DA74FC MOV X0, X20
	0x01DA7500 MOV X1, X31
	0x01DA7504 MOV X2, X31
	0x01DA7508 BL 0x3C3883C
	0x01DA750C TBNZ X0, 0x0, 0x1DA7604
	0x01DA7510 LDR X0, [X21]
	0x01DA7514 LDR X20, [X19 + 0x30]
	0x01DA7518 LDR W8, [X0 + 0xE0]
	0x01DA751C CBNZ W8, 0x1DA7524
	0x01DA7520 BL 0x1C16DFC
	0x01DA7524 MOV X0, X20
	0x01DA7528 MOV X1, X31
	0x01DA752C MOV X2, X31
	0x01DA7530 BL 0x3C3883C
	0x01DA7534 TBNZ X0, 0x0, 0x1DA7604
	0x01DA7538 LDR X0, [X19 + 0x30]
	0x01DA753C CBZ X0, 0x1DA7618
	0x01DA7540 MOV X1, X31
	0x01DA7544 BL 0x3C32E90
	0x01DA7548 CBZ X0, 0x1DA7618
	0x01DA754C ADD X8, X31, 0x140
	0x01DA7550 MOV X1, X31
	0x01DA7554 BL 0x3C3FF0C
	0x01DA7558 LDP V0, V1, [X31 + 0x140]
	0x01DA755C LDP V2, V3, [X31 + 0x160]
	0x01DA7560 STP V0, V1, [X31 + 0x100]
	0x01DA7564 STP V2, V3, [X31 + 0x120]
	0x01DA7568 LDR X0, [X19 + 0x20]
	0x01DA756C CBZ X0, 0x1DA7618
	0x01DA7570 ADD X8, X31, 0x140
	0x01DA7574 MOV X1, X31
	0x01DA7578 BL 0x3C3F1C8
	0x01DA757C LDP V0, V1, [X31 + 0x140]
	0x01DA7580 LDP V2, V3, [X31 + 0x160]
	0x01DA7584 ADD X8, X31, 0xC0
	0x01DA7588 ADD X0, X31, 0x80
	0x01DA758C STP V0, V1, [X31 + 0x40]
	0x01DA7590 LDP V0, V1, [X31 + 0x100]
	0x01DA7594 STP V2, V3, [X31 + 0x60]
	0x01DA7598 LDP V2, V3, [X31 + 0x120]
	0x01DA759C ADD X1, X31, 0x40
	0x01DA75A0 MOV X2, X31
	0x01DA75A4 STP V0, V1, [X31 + 0x80]
	0x01DA75A8 STP V2, V3, [X31 + 0xA0]
	0x01DA75AC BL 0x3C27F74
	0x01DA75B0 LDP V0, V1, [X31 + 0xC0]
	0x01DA75B4 LDP V2, V3, [X31 + 0xE0]
	0x01DA75B8 STP V0, V1, [X31 + 0x140]
	0x01DA75BC STP V2, V3, [X31 + 0x160]
	0x01DA75C0 LDR X0, [X19 + 0x30]
	0x01DA75C4 CBZ X0, 0x1DA7618
	0x01DA75C8 MOV X1, X31
	0x01DA75CC BL 0x3C1341C
	0x01DA75D0 LDR W1, [X19 + 0x28]
	0x01DA75D4 LDP V0, V1, [X31 + 0x140]
	0x01DA75D8 LDP V2, V3, [X31 + 0x160]
	0x01DA75DC STP V0, V1, [X31 + 0xC0]
	0x01DA75E0 STP V2, V3, [X31 + 0xE0]
	0x01DA75E4 CBZ X0, 0x1DA7618
	0x01DA75E8 LDP V0, V1, [X31 + 0xC0]
	0x01DA75EC LDP V2, V3, [X31 + 0xE0]
	0x01DA75F0 ADD X2, X31, 0x0
	0x01DA75F4 MOV X3, X31
	0x01DA75F8 STP V0, V1, [X31]
	0x01DA75FC STP V2, V3, [X31 + 0x20]
	0x01DA7600 BL 0x3C15D84
	0x01DA7604 LDP X20, X19, [X31 + 0x1A0]
	0x01DA7608 LDP X30, X21, [X31 + 0x190]
	0x01DA760C LDR X29, [X31 + 0x180]
	0x01DA7610 ADD X31, X31, 0x1B0
	0x01DA7614 RET
	0x01DA7618 BL 0x1C16F20
	0x01DA761C STP X30, X21, [X31 - 0x20]!
	0x01DA7620 STP X20, X19, [X31 + 0x10]
	0x01DA7624 ADRP X20, 0x2631000
	0x01DA7628 ADRP X21, 0x234F000
	0x01DA762C LDRB W8, [X20 + 0xAA7]
	0x01DA7630 LDR X21, [X21 + 0xBE0]
	0x01DA7634 MOV X19, X0
	0x01DA7638 TBNZ X8, 0x0, 0x1DA7650
	0x01DA763C ADRP X0, 0x234F000
	0x01DA7640 LDR X0, [X0 + 0xBE0]
	0x01DA7644 BL 0x1C16CF4
	0x01DA7648 MOVZ W8, 0x1
	0x01DA764C STRB W8, [X20 + 0xAA7]
	0x01DA7650 LDR X0, [X21]
	0x01DA7654 MOV X1, X31
	0x01DA7658 BL 0x3C124EC
	0x01DA765C STR W0, [X19 + 0x28]
	0x01DA7660 MOV X0, X19
	0x01DA7664 LDP X20, X19, [X31 + 0x10]
	0x01DA7668 MOV X1, X31
	0x01DA766C LDP X30, X21, [X31], #0x20
	0x01DA7670 B 0x3C36C30
	0x01DA7674 LDR X8, [X0 + 0x20]
	0x01DA7678 CBZ X8, 0x1DA768C
	0x01DA767C LDR X3, [X8 + 0x18]
	0x01DA7680 LDR X0, [X8 + 0x40]
	0x01DA7684 LDR X2, [X8 + 0x28]
	0x01DA7688 BR X3
	0x01DA768C RET
	0x01DA7690 LDR X8, [X0 + 0x28]
	0x01DA7694 CBZ X8, 0x1DA76A8
	0x01DA7698 LDR X3, [X8 + 0x18]
	0x01DA769C LDR X0, [X8 + 0x40]
	0x01DA76A0 LDR X2, [X8 + 0x28]
	0x01DA76A4 BR X3
	0x01DA76A8 RET
	0x01DA76AC MOV X1, X31
	0x01DA76B0 B 0x3C36C30
	0x01DA76B4 STP X30, X19, [X31 - 0x10]!
	0x01DA76B8 LDR X8, [X0 + 0x50]
	0x01DA76BC CBZ X8, 0x1DA76D4
	0x01DA76C0 LDR W8, [X8]
	0x01DA76C4 CMP W8, 0x0
	0x01DA76C8 CSET W0, NE
	0x01DA76CC LDP X30, X19, [X31], #0x10
	0x01DA76D0 RET
	0x01DA76D4 ADRP X0, 0x234C000
	0x01DA76D8 LDR X0, [X0 + 0x5B0]
	0x01DA76DC BL 0x1C16D08
	0x01DA76E0 BL 0x1C16F10
	0x01DA76E4 MOV X19, X0
	0x01DA76E8 ADRP X0, 0x2350000
	0x01DA76EC LDR X0, [X0 + 0x500]
	0x01DA76F0 BL 0x1C16D08
	0x01DA76F4 MOV X1, X0
	0x01DA76F8 MOV X0, X19
	0x01DA76FC MOV X2, X31
	0x01DA7700 BL 0x337DF1C
	0x01DA7704 ADRP X0, 0x2350000
	0x01DA7708 LDR X0, [X0 + 0x508]
	0x01DA770C BL 0x1C16D08
	0x01DA7710 MOV X1, X0
	0x01DA7714 MOV X0, X19
	0x01DA7718 BL 0x1C16DEC
	0x01DA771C STP X30, X19, [X31 - 0x10]!
	0x01DA7720 LDR X8, [X0 + 0x50]
	0x01DA7724 CBZ X8, 0x1DA7738
	0x01DA7728 AND W9, W1, 0x1
	0x01DA772C STR W9, [X8]
	0x01DA7730 LDP X30, X19, [X31], #0x10
	0x01DA7734 RET
	0x01DA7738 ADRP X0, 0x234C000
	0x01DA773C LDR X0, [X0 + 0x5B0]
	0x01DA7740 BL 0x1C16D08
	0x01DA7744 BL 0x1C16F10
	0x01DA7748 MOV X19, X0
	0x01DA774C ADRP X0, 0x2350000
	0x01DA7750 LDR X0, [X0 + 0x500]
	0x01DA7754 BL 0x1C16D08
	0x01DA7758 MOV X1, X0
	0x01DA775C MOV X0, X19
	0x01DA7760 MOV X2, X31
	0x01DA7764 BL 0x337DF1C
	0x01DA7768 ADRP X0, 0x2350000
	0x01DA776C LDR X0, [X0 + 0x510]
	0x01DA7770 BL 0x1C16D08
	0x01DA7774 MOV X1, X0
	0x01DA7778 MOV X0, X19
	0x01DA777C BL 0x1C16DEC
	0x01DA7780 STP X30, X19, [X31 - 0x10]!
	0x01DA7784 LDR X8, [X0 + 0x50]
	0x01DA7788 CBZ X8, 0x1DA7798
	0x01DA778C LDR W0, [X8 + 0x4]
	0x01DA7790 LDP X30, X19, [X31], #0x10
	0x01DA7794 RET
	0x01DA7798 ADRP X0, 0x234C000
	0x01DA779C LDR X0, [X0 + 0x5B0]
	0x01DA77A0 BL 0x1C16D08
	0x01DA77A4 BL 0x1C16F10
	0x01DA77A8 MOV X19, X0
	0x01DA77AC ADRP X0, 0x2350000
	0x01DA77B0 LDR X0, [X0 + 0x518]
	0x01DA77B4 BL 0x1C16D08
	0x01DA77B8 MOV X1, X0
	0x01DA77BC MOV X0, X19
	0x01DA77C0 MOV X2, X31
	0x01DA77C4 BL 0x337DF1C
	0x01DA77C8 ADRP X0, 0x2350000
	0x01DA77CC LDR X0, [X0 + 0x520]
	0x01DA77D0 BL 0x1C16D08
	0x01DA77D4 MOV X1, X0
	0x01DA77D8 MOV X0, X19
	0x01DA77DC BL 0x1C16DEC
	0x01DA77E0 STP X30, X19, [X31 - 0x10]!
	0x01DA77E4 LDR X8, [X0 + 0x50]
	0x01DA77E8 CBZ X8, 0x1DA77F8
	0x01DA77EC STR W1, [X8 + 0x4]
	0x01DA77F0 LDP X30, X19, [X31], #0x10
	0x01DA77F4 RET
	0x01DA77F8 ADRP X0, 0x234C000
	0x01DA77FC LDR X0, [X0 + 0x5B0]
	0x01DA7800 BL 0x1C16D08
	0x01DA7804 BL 0x1C16F10
	0x01DA7808 MOV X19, X0
	0x01DA780C ADRP X0, 0x2350000
	0x01DA7810 LDR X0, [X0 + 0x518]
	0x01DA7814 BL 0x1C16D08
	0x01DA7818 MOV X1, X0
	0x01DA781C MOV X0, X19
	0x01DA7820 MOV X2, X31
	0x01DA7824 BL 0x337DF1C
	0x01DA7828 ADRP X0, 0x2350000
	0x01DA782C LDR X0, [X0 + 0x528]
	0x01DA7830 BL 0x1C16D08
	0x01DA7834 MOV X1, X0
	0x01DA7838 MOV X0, X19
	0x01DA783C BL 0x1C16DEC
	0x01DA7840 STP X30, X19, [X31 - 0x10]!
	0x01DA7844 LDR X8, [X0 + 0x50]
	0x01DA7848 CBZ X8, 0x1DA7858
	0x01DA784C LDR V0, [X8 + 0x8]
	0x01DA7850 LDP X30, X19, [X31], #0x10
	0x01DA7854 RET
	0x01DA7858 ADRP X0, 0x234C000
	0x01DA785C LDR X0, [X0 + 0x5B0]
	0x01DA7860 BL 0x1C16D08
	0x01DA7864 BL 0x1C16F10
	0x01DA7868 MOV X19, X0
	0x01DA786C ADRP X0, 0x2350000
	0x01DA7870 LDR X0, [X0 + 0x530]
	0x01DA7874 BL 0x1C16D08
	0x01DA7878 MOV X1, X0
	0x01DA787C MOV X0, X19
	0x01DA7880 MOV X2, X31
	0x01DA7884 BL 0x337DF1C
	0x01DA7888 ADRP X0, 0x2350000
	0x01DA788C LDR X0, [X0 + 0x538]
	0x01DA7890 BL 0x1C16D08
	0x01DA7894 MOV X1, X0
	0x01DA7898 MOV X0, X19
	0x01DA789C BL 0x1C16DEC
	0x01DA78A0 STP X30, X19, [X31 - 0x10]!
	0x01DA78A4 LDR X8, [X0 + 0x50]
	0x01DA78A8 CBZ X8, 0x1DA78B8
	0x01DA78AC STR S0, [X8 + 0x8]
	0x01DA78B0 LDP X30, X19, [X31], #0x10
	0x01DA78B4 RET
	0x01DA78B8 ADRP X0, 0x234C000
	0x01DA78BC LDR X0, [X0 + 0x5B0]
	0x01DA78C0 BL 0x1C16D08
	0x01DA78C4 BL 0x1C16F10
	0x01DA78C8 MOV X19, X0
	0x01DA78CC ADRP X0, 0x2350000
	0x01DA78D0 LDR X0, [X0 + 0x530]
	0x01DA78D4 BL 0x1C16D08
	0x01DA78D8 MOV X1, X0
	0x01DA78DC MOV X0, X19
	0x01DA78E0 MOV X2, X31
	0x01DA78E4 BL 0x337DF1C
	0x01DA78E8 ADRP X0, 0x2350000
	0x01DA78EC LDR X0, [X0 + 0x540]
	0x01DA78F0 BL 0x1C16D08
	0x01DA78F4 MOV X1, X0
	0x01DA78F8 MOV X0, X19
	0x01DA78FC BL 0x1C16DEC
	0x01DA7900 STP X30, X19, [X31 - 0x10]!
	0x01DA7904 LDR X8, [X0 + 0x50]
	0x01DA7908 CBZ X8, 0x1DA7918
	0x01DA790C LDR W0, [X8 + 0xC]
	0x01DA7910 LDP X30, X19, [X31], #0x10
	0x01DA7914 RET
	0x01DA7918 ADRP X0, 0x234C000
	0x01DA791C LDR X0, [X0 + 0x5B0]
	0x01DA7920 BL 0x1C16D08
	0x01DA7924 BL 0x1C16F10
	0x01DA7928 MOV X19, X0
	0x01DA792C ADRP X0, 0x2350000
	0x01DA7930 LDR X0, [X0 + 0x548]
	0x01DA7934 BL 0x1C16D08
	0x01DA7938 MOV X1, X0
	0x01DA793C MOV X0, X19
	0x01DA7940 MOV X2, X31
	0x01DA7944 BL 0x337DF1C
	0x01DA7948 ADRP X0, 0x2350000
	0x01DA794C LDR X0, [X0 + 0x550]
	0x01DA7950 BL 0x1C16D08
	0x01DA7954 MOV X1, X0
	0x01DA7958 MOV X0, X19
	0x01DA795C BL 0x1C16DEC
	0x01DA7960 STP X30, X19, [X31 - 0x10]!
	0x01DA7964 LDR X8, [X0 + 0x50]
	0x01DA7968 CBZ X8, 0x1DA7978
	0x01DA796C STR W1, [X8 + 0xC]
	0x01DA7970 LDP X30, X19, [X31], #0x10
	0x01DA7974 RET
	0x01DA7978 ADRP X0, 0x234C000
	0x01DA797C LDR X0, [X0 + 0x5B0]
	0x01DA7980 BL 0x1C16D08
	0x01DA7984 BL 0x1C16F10
	0x01DA7988 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+16], D14
	003 Move [X31+32], D13
	004 Move [X31+40], D12
	005 Move [X31+48], D11
	006 Move [X31+56], D10
	007 Move [X31+64], D9
	008 Move [X31+72], D8
	009 Move [X31+80], X29
	010 Move [X31+88], X30
	011 Move [X31+96], X28
	012 Move [X31+104], X27
	013 Move [X31+112], X26
	014 Move [X31+120], X25
	015 Move [X31+128], X24
	016 Move [X31+136], X23
	017 Move [X31+144], X22
	018 Move [X31+152], X21
	019 Move [X31+160], X20
	020 Move [X31+168], X19
	021 Move X20, 0x2632000
	022 Move W8, [X20+2716]
	023 Move X19, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {78}
	028 Move X0, 0x234D000
	029 Move X0, [X0+1808]
	030 Call 0x1C17CF4
	031 Move X0, 0x234D000
	032 Move X0, [X0+1816]
	033 Call 0x1C17CF4
	034 Move X0, 0x234D000
	035 Move X0, [X0+1824]
	036 Call 0x1C17CF4
	037 Move X0, 0x234D000
	038 Move X0, [X0+1928]
	039 Call 0x1C17CF4
	040 Move X0, 0x2350000
	041 Move X0, [X0+2680]
	042 Call 0x1C17CF4
	043 Move X0, 0x234D000
	044 Move X0, [X0+2704]
	045 Call 0x1C17CF4
	046 Move X0, 0x234F000
	047 Move X0, [X0+784]
	048 Call 0x1C17CF4
	049 Move X0, 0x234D000
	050 Move X0, [X0+1440]
	051 Call 0x1C17CF4
	052 Move X0, 0x2351000
	053 Move X0, [X0+1120]
	054 Call 0x1C17CF4
	055 Move X0, 0x2351000
	056 Move X0, [X0+1128]
	057 Call 0x1C17CF4
	058 Move X0, 0x2351000
	059 Move X0, [X0+1136]
	060 Call 0x1C17CF4
	061 Move X0, 0x2351000
	062 Move X0, [X0+1144]
	063 Call 0x1C17CF4
	064 Move X0, 0x2351000
	065 Move X0, [X0+1152]
	066 Call 0x1C17CF4
	067 Move X0, 0x2351000
	068 Move X0, [X0+1160]
	069 Call 0x1C17CF4
	070 Move X0, 0x2351000
	071 Move X0, [X0+1168]
	072 Call 0x1C17CF4
	073 Move X0, 0x2351000
	074 Move X0, [X0+1176]
	075 Call 0x1C17CF4
	076 Move W8, 1
	077 Move [X20+2716], W8
	078 Move [X31+24], X31
	079 Move W8, [X19+88]
	080 Compare W8, 0
	081 JumpIfEqual {328}
	082 Move [X19+88], W31
	083 Move X0, [X19+176]
	084 Compare X0, 0
	085 JumpIfEqual {447}
	086 Move X20, [X19+160]
	087 Move X1, X31
	088 Call Transform.get_position, X0
	089 Compare X20, 0
	090 JumpIfEqual {447}
	091 Move S3, 1
	092 Move X0, X20
	093 Move W1, W31
	094 Move X2, X31
	095 Call RandomSFX.Play, X0, X1, V0, X2
	096 Move X0, X31
	097 Call Camera.get_main
	098 Compare X0, 0
	099 JumpIfEqual {447}
	100 Move X1, X31
	101 Call Component.get_transform, X0
	102 Compare X0, 0
	103 JumpIfEqual {447}
	104 Move X20, 0x234D000
	105 Move X21, 0x234D000
	106 Move X20, [X20+1824]
	107 Move X21, [X21+1816]
	108 Move X1, X31
	109 Call Transform.get_position, X0
	110 Move X0, [X20]
	111 Move V8, V0
	112 Move V9, V1
	113 Move V10, V2
	114 Call 0x1C17F10
	115 Move X1, [X21]
	116 Move X20, X0
	117 Call Dictionary`2<Object, Object>..ctor, X0
	118 Move X0, X19
	119 Move X1, X31
	120 Call Component.get_transform, X0
	121 Compare X0, 0
	122 JumpIfEqual {447}
	123 Move X1, X31
	124 Call Transform.get_position, X0
	125 Move X25, 0x2632000
	126 Move W8, [X25+2140]
	127 Move V11, V0
	128 Move V12, V1
	129 Move V13, V2
	130 Compare W8, 0
	131 JumpIfNotEqual {137}
	132 Move X0, 0x234D000
	133 Move X0, [X0+1448]
	134 Call 0x1C17CF4
	135 Move W8, 1
	136 Move [X25+2140], W8
	137 Move X26, 0x234D000
	138 Move X26, [X26+1448]
	139 Move X21, 0x234D000
	140 Subtract S14, S8, S11
	141 Subtract S12, S9, S12
	142 Move X0, [X26]
	143 Subtract S11, S10, S13
	144 Move W8, [X0+224]
	145 Move X21, [X21+2704]
	146 Compare W8, 0
	147 JumpIfNotEqual {149}
	148 Call 0x1C17DFC
	149 Multiply S0, S14, S14
	150 Multiply S1, S12, S12
	151 Move X0, [X21]
	152 Multiply S2, S11, S11
	153 Add S0, S0, S1
	154 Add S0, S2, S0
	155 NotImplemented "Instruction FSQRT not yet implemented."
	156 Add X1, X31, 12
	157 Move [X31+12], S0
	158 Call 0x1C17E04
	159 Compare X20, 0
	160 JumpIfEqual {447}
	161 Move X8, 0x2351000
	162 Move X28, 0x234D000
	163 Move X8, [X8+1152]
	164 Move X28, [X28+1808]
	165 Move X24, 0x234D000
	166 Move X29, 0x2351000
	167 Move X23, 0x234D000
	168 Move X24, [X24+1440]
	169 Move X29, [X29+1128]
	170 Move X23, [X23+1928]
	171 Move X1, [X8]
	172 Move X3, [X28]
	173 Move X27, 0x2351000
	174 Move X22, 0x2351000
	175 Move X21, 0x2351000
	176 Move X27, [X27+1176]
	177 Move X22, [X22+1144]
	178 Move X21, [X21+1168]
	179 Move X2, X0
	180 Move X0, X20
	181 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	182 Move X0, [X24]
	183 Add X1, X31, 0
	184 Move [X31], S8
	185 Move [X31+8], S9
	186 Move [X31+8], S10
	187 Call 0x1C17E04
	188 Move X1, [X29]
	189 Move X3, [X28]
	190 Move X2, X0
	191 Move X0, X20
	192 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	193 Move X0, [X23]
	194 Move W8, [X0+224]
	195 Compare W8, 0
	196 JumpIfNotEqual {198}
	197 Call 0x1C17DFC
	198 Move X1, [X27]
	199 Move X3, [X22]
	200 Move X4, [X21]
	201 Move W0, 32
	202 Move W5, 152
	203 Move X2, X20
	204 Move X6, X31
	205 Call Log.Debug, X0, X1, X2, X3, X4, X5
	206 Move X0, X19
	207 Move X1, X31
	208 Call Component.get_transform, X0
	209 Compare X0, 0
	210 JumpIfEqual {447}
	211 Move X1, X31
	212 Call Transform.get_position, X0
	213 Move W8, [X25+2140]
	214 Move V11, V0
	215 Move V12, V1
	216 Move V13, V2
	217 Compare W8, 0
	218 JumpIfNotEqual {224}
	219 Move X0, 0x234D000
	220 Move X0, [X0+1448]
	221 Call 0x1C17CF4
	222 Move W8, 1
	223 Move [X25+2140], W8
	224 Move X0, [X26]
	225 Subtract S11, S8, S11
	226 Subtract S9, S9, S12
	227 Subtract S8, S10, S13
	228 Move W8, [X0+224]
	229 Compare W8, 0
	230 JumpIfNotEqual {232}
	231 Call 0x1C17DFC
	232 Multiply S0, S11, S11
	233 Multiply S1, S9, S9
	234 Move V2, [X19+128]
	235 Add S0, S0, S1
	236 Multiply S1, S8, S8
	237 Add S0, S1, S0
	238 NotImplemented "Instruction FSQRT not yet implemented."
	239 NotImplemented "Instruction FCMP not yet implemented."
	240 Move X8, 0x234F000
	241 Move X8, [X8+784]
	242 Move X0, [X8]
	243 Move W8, [X0+224]
	244 Compare W8, 0
	245 JumpIfNotEqual {247}
	246 Call 0x1C17DFC
	247 Add X1, X31, 24
	248 Move W0, 1
	249 Call TeleportTarget.TryGetTeleportTarget, X0, X1
	250 Move TEMP, X0
	251 And TEMP, TEMP, 1
	252 Compare TEMP, 1
	253 JumpIfNotEqual {366}
	254 Move X0, [X31+24]
	255 Compare X0, 0
	256 JumpIfEqual {447}
	257 Move X1, X31
	258 Call Transform.get_position, X0
	259 Move X0, [X24]
	260 Add X1, X31, 0
	261 Move [X31], S0
	262 Move [X31+8], S1
	263 Move [X31+8], S2
	264 Call 0x1C17E04
	265 Move X8, 0x2351000
	266 Move X8, [X8+1136]
	267 Move X1, X0
	268 Move X2, X31
	269 Move X8, [X8]
	270 Move X0, X8
	271 Call String.Format, X0, X1
	272 Move X8, [X23]
	273 Move X20, X0
	274 Move W9, [X8+224]
	275 Compare W9, 0
	276 JumpIfNotEqual {279}
	277 Move X0, X8
	278 Call 0x1C17DFC
	279 Move X3, [X22]
	280 Move X4, [X21]
	281 Move W0, 32
	282 Move W5, 161
	283 Move X1, X20
	284 Move X2, X31
	285 Move X6, X31
	286 Call Log.Debug, X0, X1, X2, X3, X4, X5
	287 Move X20, 0x2632000
	288 Move W8, [X20+1938]
	289 Compare W8, 0
	290 JumpIfNotEqual {296}
	291 Move X0, 0x234E000
	292 Move X0, [X0+1440]
	293 Call 0x1C17CF4
	294 Move W8, 1
	295 Move [X20+1938], W8
	296 Move X8, 0x234E000
	297 Move X8, [X8+1440]
	298 Move X8, [X8]
	299 Move X8, [X8+184]
	300 Move X8, [X8]
	301 Compare X8, 0
	302 JumpIfEqual {447}
	303 Move X0, [X31+24]
	304 Compare X0, 0
	305 JumpIfEqual {447}
	306 Move X20, [X8+32]
	307 Move X1, X31
	308 Call Transform.get_position, X0
	309 Compare X20, 0
	310 JumpIfEqual {447}
	311 Move X0, X20
	312 Move W1, W31
	313 Move X2, X31
	314 Call PlayerController.Respawn, X0, X1, X2
	315 Move X0, [X31+24]
	316 Compare X0, 0
	317 JumpIfEqual {447}
	318 Move X19, [X19+160]
	319 Move X1, X31
	320 Call Transform.get_position, X0
	321 Compare X19, 0
	322 JumpIfEqual {447}
	323 Move S3, 1
	324 Move X0, X19
	325 Move W1, W31
	326 Move X2, X31
	327 Call RandomSFX.Play, X0, X1, V0, X2
	328 Move X21, 0x2350000
	329 Move X21, [X21+2680]
	330 Move X0, [X21]
	331 Move W8, [X0+224]
	332 Compare W8, 0
	333 JumpIfNotEqual {335}
	334 Call 0x1C17DFC
	335 Move X0, X19
	336 Move X1, X31
	337 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	338 Move X0, [X19+56]
	339 Compare X0, 0
	340 JumpIfEqual {447}
	341 Move X1, X31
	342 Call NetworkRunner.get_Stage, X0
	343 NotImplemented "Instruction CMP not yet implemented."
	344 Move X0, [X19+64]
	345 Compare X0, 0
	346 JumpIfEqual {447}
	347 Move X1, X31
	348 Call NetworkObject.GetLocalAuthorityMask, X0
	349 Move TEMP, X0
	350 And TEMP, TEMP, 1
	351 Compare TEMP, 1
	352 JumpIfEqual {402}
	353 Move X0, [X21]
	354 Move X19, [X19+64]
	355 Move W8, [X0+224]
	356 Compare W8, 0
	357 JumpIfNotEqual {359}
	358 Call 0x1C17DFC
	359 Move X8, 0x2351000
	360 Move X8, [X8+1120]
	361 Move W2, 1
	362 Move X1, X19
	363 Move X3, X31
	364 Move X0, [X8]
	365 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	366 Move X0, [X23]
	367 Move W8, [X0+224]
	368 Compare W8, 0
	369 JumpIfNotEqual {371}
	370 Call 0x1C17DFC
	371 Move X8, 0x2351000
	372 Move X8, [X8+1160]
	373 Move X3, [X22]
	374 Move X4, [X21]
	375 Move W0, 32
	376 Move X1, [X8]
	377 Move W5, 167
	378 Move X2, X31
	379 Move X6, X31
	380 Call Log.Error, X0, X1, X2, X3, X4, X5
	381 Move X20, [X31+160]
	382 Move X19, [X31+168]
	383 Move X22, [X31+144]
	384 Move X21, [X31+152]
	385 Move X24, [X31+128]
	386 Move X23, [X31+136]
	387 Move X26, [X31+112]
	388 Move X25, [X31+120]
	389 Move X28, [X31+96]
	390 Move X27, [X31+104]
	391 Move X29, [X31+80]
	392 Move X30, [X31+88]
	393 Move D9, [X31+64]
	394 Move D8, [X31+72]
	395 Move D11, [X31+48]
	396 Move D10, [X31+56]
	397 Move D13, [X31+32]
	398 Move D12, [X31+40]
	399 Move V14, [X31+16]
	400 Add X31, X31, 176
	401 Return 
	402 Move X8, [X19+56]
	403 Compare X8, 0
	404 JumpIfEqual {447}
	405 Move W20, W0
	406 Move X0, [X8+80]
	407 Compare X0, 0
	408 JumpIfEqual {447}
	409 Move X1, X31
	410 Call Simulation.HasAnyActiveConnections, X0
	411 Move TEMP, X0
	412 And TEMP, TEMP, 1
	413 Compare TEMP, 1
	414 JumpIfNotEqual {446}
	415 Move X8, [X19+56]
	416 Compare X8, 0
	417 JumpIfEqual {447}
	418 Move X0, [X8+80]
	419 Move W1, 8
	420 Move X2, X31
	421 Call SimulationMessage.Allocate, X0, X1
	422 Move X8, [X19+64]
	423 Compare X8, 0
	424 JumpIfEqual {447}
	425 Move X8, [X8+32]
	426 Move X21, X0
	427 Compare X8, 0
	428 JumpIfEqual {430}
	429 Move W0, [X8]
	430 Move X0, X31
	431 Move W1, [X19+104]
	432 Move W2, 3
	433 Move X3, X31
	434 Call RpcHeader.Create, X0, X1, X2
	435 Move [X21+28], X0
	436 Compare X21, 0
	437 JumpIfEqual {447}
	438 Move W8, 64
	439 Move [X21+12], W8
	440 Move X0, [X19+56]
	441 Compare X0, 0
	442 JumpIfEqual {447}
	443 Move X1, X21
	444 Move X2, X31
	445 Call NetworkRunner.SendRpc, X0, X1
	446 And W31, W20, 7
	447 Call 0x1C17F20

Method: System.Void RPC_RechargeFinished()

Disassembly:
	0x01DA798C ADRP X0, 0x2350000
	0x01DA7990 LDR X0, [X0 + 0x548]
	0x01DA7994 BL 0x1C16D08
	0x01DA7998 MOV X1, X0
	0x01DA799C MOV X0, X19
	0x01DA79A0 MOV X2, X31
	0x01DA79A4 BL 0x337DF1C
	0x01DA79A8 ADRP X0, 0x2350000
	0x01DA79AC LDR X0, [X0 + 0x558]
	0x01DA79B0 BL 0x1C16D08
	0x01DA79B4 MOV X1, X0
	0x01DA79B8 MOV X0, X19
	0x01DA79BC BL 0x1C16DEC
	0x01DA79C0 STP X30, X23, [X31 - 0x30]!
	0x01DA79C4 STP X22, X21, [X31 + 0x10]
	0x01DA79C8 STP X20, X19, [X31 + 0x20]
	0x01DA79CC ADRP X21, 0x2631000
	0x01DA79D0 ADRP X22, 0x234F000
	0x01DA79D4 ADRP X20, 0x2350000
	0x01DA79D8 LDRB W8, [X21 + 0xAA8]
	0x01DA79DC LDR X22, [X22 + 0xBB8]
	0x01DA79E0 LDR X20, [X20 + 0x250]
	0x01DA79E4 MOV X19, X0
	0x01DA79E8 TBNZ X8, 0x0, 0x1DA7A60
	0x01DA79EC ADRP X0, 0x2350000
	0x01DA79F0 LDR X0, [X0 + 0x258]
	0x01DA79F4 BL 0x1C16CF4
	0x01DA79F8 ADRP X0, 0x234E000
	0x01DA79FC LDR X0, [X0 + 0x6D0]
	0x01DA7A00 BL 0x1C16CF4
	0x01DA7A04 ADRP X0, 0x234D000
	0x01DA7A08 LDR X0, [X0 + 0xE70]
	0x01DA7A0C BL 0x1C16CF4
	0x01DA7A10 ADRP X0, 0x2350000
	0x01DA7A14 LDR X0, [X0 + 0x560]
	0x01DA7A18 BL 0x1C16CF4
	0x01DA7A1C ADRP X0, 0x234F000
	0x01DA7A20 LDR X0, [X0 + 0xBB8]
	0x01DA7A24 BL 0x1C16CF4
	0x01DA7A28 ADRP X0, 0x2350000
	0x01DA7A2C LDR X0, [X0 + 0x250]
	0x01DA7A30 BL 0x1C16CF4
	0x01DA7A34 ADRP X0, 0x2350000
	0x01DA7A38 LDR X0, [X0 + 0x568]
	0x01DA7A3C BL 0x1C16CF4
	0x01DA7A40 ADRP X0, 0x2350000
	0x01DA7A44 LDR X0, [X0 + 0x570]
	0x01DA7A48 BL 0x1C16CF4
	0x01DA7A4C ADRP X0, 0x2350000
	0x01DA7A50 LDR X0, [X0 + 0x578]
	0x01DA7A54 BL 0x1C16CF4
	0x01DA7A58 MOVZ W8, 0x1
	0x01DA7A5C STRB W8, [X21 + 0xAA8]
	0x01DA7A60 LDR X1, [X22]
	0x01DA7A64 MOV X0, X19
	0x01DA7A68 BL 0x21A3894
	0x01DA7A6C STR X0, [X19 + 0xB0]
	0x01DA7A70 LDR X1, [X20]
	0x01DA7A74 MOV X0, X19
	0x01DA7A78 BL 0x21A3894
	0x01DA7A7C LDR X8, [X19 + 0x90]
	0x01DA7A80 STR X0, [X19 + 0xB8]
	0x01DA7A84 CBZ X8, 0x1DA7C4C
	0x01DA7A88 ADRP X9, 0x2350000
	0x01DA7A8C LDR X9, [X9 + 0x560]
	0x01DA7A90 MOV X0, X8
	0x01DA7A94 LDR X1, [X9]
	0x01DA7A98 BL 0x21A3AF8
	0x01DA7A9C LDR X8, [X19 + 0x80]
	0x01DA7AA0 STR X0, [X19 + 0xD0]
	0x01DA7AA4 CBZ X8, 0x1DA7C4C
	0x01DA7AA8 MOV X0, X8
	0x01DA7AAC MOV W1, W31
	0x01DA7AB0 MOV X2, X31
	0x01DA7AB4 BL 0x3C32410
	0x01DA7AB8 LDR X22, [X19 + 0x80]
	0x01DA7ABC CBZ X22, 0x1DA7C4C
	0x01DA7AC0 ADRP X23, 0x234E000
	0x01DA7AC4 LDR X23, [X23 + 0x6D0]
	0x01DA7AC8 ADRP X21, 0x2350000
	0x01DA7ACC LDR X20, [X22 + 0x20]
	0x01DA7AD0 LDR X0, [X23]
	0x01DA7AD4 LDR X21, [X21 + 0x570]
	0x01DA7AD8 BL 0x1C16F10
	0x01DA7ADC LDR X2, [X21]
	0x01DA7AE0 MOV X1, X19
	0x01DA7AE4 MOV X3, X31
	0x01DA7AE8 MOV X21, X0
	0x01DA7AEC BL 0x2A6B948
	0x01DA7AF0 MOV X0, X20
	0x01DA7AF4 MOV X1, X21
	0x01DA7AF8 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2632000
	005 Move W8, [X20+2717]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x2350000
	012 Move X0, [X0+2680]
	013 Call 0x1C17CF4
	014 Move X0, 0x2351000
	015 Move X0, [X0+1184]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2717], W8
	019 Move W8, [X19+88]
	020 Compare W8, 0
	021 JumpIfEqual {23}
	022 Move [X19+88], W31
	023 Move X20, 0x2350000
	024 Move X20, [X20+2680]
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move X1, X31
	032 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	033 Move X0, [X19+56]
	034 Compare X0, 0
	035 JumpIfEqual {116}
	036 Move X1, X31
	037 Call NetworkRunner.get_Stage, X0
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return 
	043 Move X0, [X19+64]
	044 Compare X0, 0
	045 JumpIfEqual {116}
	046 Move X1, X31
	047 Call NetworkObject.GetLocalAuthorityMask, X0
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {69}
	052 Move X0, [X20]
	053 Move X19, [X19+64]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X8, 0x2351000
	059 Move X8, [X8+1184]
	060 Move X1, X19
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move W2, 1
	064 Move X0, [X8]
	065 Move X3, X31
	066 Move X30, [X31+32]
	067 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	068 Return 
	069 Move X8, [X19+56]
	070 Compare X8, 0
	071 JumpIfEqual {116}
	072 Move X0, [X8+80]
	073 Compare X0, 0
	074 JumpIfEqual {116}
	075 Move X1, X31
	076 Call Simulation.HasAnyActiveConnections, X0
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {39}
	081 Move X8, [X19+56]
	082 Compare X8, 0
	083 JumpIfEqual {116}
	084 Move X0, [X8+80]
	085 Move W1, 8
	086 Move X2, X31
	087 Call SimulationMessage.Allocate, X0, X1
	088 Move X8, [X19+64]
	089 Compare X8, 0
	090 JumpIfEqual {116}
	091 Move X8, [X8+32]
	092 Move X20, X0
	093 Compare X8, 0
	094 JumpIfEqual {96}
	095 Move W0, [X8]
	096 Move X0, X31
	097 Move W1, [X19+104]
	098 Move W2, 4
	099 Move X3, X31
	100 Call RpcHeader.Create, X0, X1, X2
	101 Move [X20+28], X0
	102 Compare X20, 0
	103 JumpIfEqual {116}
	104 Move W8, 64
	105 Move [X20+12], W8
	106 Move X0, [X19+56]
	107 Compare X0, 0
	108 JumpIfEqual {116}
	109 Move X1, X20
	110 Move X20, [X31+16]
	111 Move X19, [X31+24]
	112 Move X2, X31
	113 Move X30, [X31+32]
	114 Call NetworkRunner.SendRpc, X0, X1
	115 Return 
	116 Call 0x1C17F20

Method: System.Void HandleKeyInput(UnityEngine.KeyCode keyCode, AnimalCompany.TerminalKeyType keyType)

Disassembly:
	0x01DA7EEC BL 0x3C35734

ISIL:
	001 Call TeleportationMachine.RPC_RequestActivation, X0
	002 Return 

Method: System.Void OnDrawGizmos()

Disassembly:
	0x01DA7EF0 CMP W0, 0x1F
	0x01DA7EF4 B.NE 0x1DA7F8C
	0x01DA7EF8 LDR X0, [X19 + 0x40]
	0x01DA7EFC CBZ X0, 0x1DA7F8C
	0x01DA7F00 LDRB W8, [X0 + 0x60]
	0x01DA7F04 TBNZ X8, 0x1, 0x1DA7F8C
	0x01DA7F08 MOV X1, X31
	0x01DA7F0C BL 0x1E93668
	0x01DA7F10 TBZ X0, 0x0, 0x1DA7F8C
	0x01DA7F14 LDR X0, [X19 + 0xB8]
	0x01DA7F18 CBZ X0, 0x1DA7FA0
	0x01DA7F1C BL 0x1DA0F8C
	0x01DA7F20 TBNZ X0, 0x0, 0x1DA7F8C
	0x01DA7F24 MOV X0, X20
	0x01DA7F28 MOV X1, X31
	0x01DA7F2C BL 0x3C89FC0
	0x01DA7F30 LDR X8, [X19 + 0xB0]
	0x01DA7F34 CBZ X8, 0x1DA7FA0
	0x01DA7F38 LDR X0, [X8 + 0xB0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move S0, W31
	005 Move S1, W31
	006 Move S2, 1
	007 Move S3, 1
	008 Move X0, X31
	009 Call Gizmos.set_color, X0
	010 Move X0, X19
	011 Move X1, X31
	012 Call Component.get_transform, X0
	013 Compare X0, 0
	014 JumpIfEqual {23}
	015 Move X1, X31
	016 Call Transform.get_position, X0
	017 Move V3, [X19+128]
	018 Move X0, X31
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Call Gizmos.DrawWireSphere, X0, V0
	022 Return 
	023 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01DA7F3C CBZ X0, 0x1DA7FA0
	0x01DA7F40 MOV X1, X31
	0x01DA7F44 MOV V8.16B, V0.16B
	0x01DA7F48 MOV V9.16B, V1.16B
	0x01DA7F4C MOV V10.16B, V2.16B
	0x01DA7F50 BL 0x3C3FA04
	0x01DA7F54 FMUL S0, S8, S0
	0x01DA7F58 FMUL S1, S9, S1

ISIL:
	001 Move V0, 0
	002 Move W8, 0x40C00000
	003 Move W9, 0x44160000
	004 Move X1, X31
	005 Move [X0+128], D0
	006 Move [X0+136], W8
	007 Move [X0+192], W9
	008 Call NetworkBehaviour..ctor, X0
	009 Return 

Method: System.Void CopyBackingFieldsToState(System.Boolean param_0)

Disassembly:
	0x01DA7F5C FMUL S2, S10, S2
	0x01DA7F60 FADD S0, S0, S1
	0x01DA7F64 FADD S0, S2, S0
	0x01DA7F68 FMOV S1, -10
	0x01DA7F6C FCMP S0, S1
	0x01DA7F70 B.PL 0x1DA7F8C
	0x01DA7F74 MOV X0, X19
	0x01DA7F78 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move V0, [X0+196]
	004 Move X19, X0
	005 Call TeleportationMachine.set_charge, X0, V0
	006 Move W1, [X19+200]
	007 Move X0, X19
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Call TeleportationMachine.set_state, X0, X1
	011 Return 

Method: System.Void CopyStateToBackingFields()

Disassembly:
	0x01DA7F7C LDR X30, [X31 + 0x18]
	0x01DA7F80 LDP D9, D8, [X31 + 0x8]
	0x01DA7F84 LDR V10, [X31], #0x30
	0x01DA7F88 B 0x1DA7FA4
	0x01DA7F8C LDP X20, X19, [X31 + 0x20]
	0x01DA7F90 LDR X30, [X31 + 0x18]
	0x01DA7F94 LDP D9, D8, [X31 + 0x8]
	0x01DA7F98 LDR V10, [X31], #0x30
	0x01DA7F9C RET

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call TeleportationMachine.get_charge, X0
	005 Move X0, X19
	006 Move [X19+196], S0
	007 Call TeleportationMachine.get_state, X0
	008 Move [X19+200], W0
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return 

Method: System.Void RPC_RequestActivation@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01DA7FA0 BL 0x1C16F20
	0x01DA7FA4 SUB X31, X31, 0x80
	0x01DA7FA8 STP D13, D12, [X31 + 0x30]
	0x01DA7FAC STP D11, D10, [X31 + 0x40]
	0x01DA7FB0 STP D9, D8, [X31 + 0x50]
	0x01DA7FB4 STR X30, [X31 + 0x60]
	0x01DA7FB8 STP X20, X19, [X31 + 0x70]
	0x01DA7FBC ADRP X20, 0x2631000
	0x01DA7FC0 LDRB W8, [X20 + 0xAAE]
	0x01DA7FC4 MOV X19, X0
	0x01DA7FC8 TBNZ X8, 0x0, 0x1DA7FEC
	0x01DA7FCC ADRP X0, 0x234C000
	0x01DA7FD0 LDR X0, [X0 + 0x5D8]
	0x01DA7FD4 BL 0x1C16CF4
	0x01DA7FD8 ADRP X0, 0x234C000
	0x01DA7FDC LDR X0, [X0 + 0x5F8]
	0x01DA7FE0 BL 0x1C16CF4
	0x01DA7FE4 MOVZ W8, 0x1
	0x01DA7FE8 STRB W8, [X20 + 0xAAE]
	0x01DA7FEC MOVI V0.2D, 0x0
	0x01DA7FF0 MOV X0, X19
	0x01DA7FF4 STUR V0, [X31 + 0x1C]
	0x01DA7FF8 STP V0, V0, [X31]
	0x01DA7FFC BL 0x1DA7780
	0x01DA8000 CBNZ W0, 0x1DA8180
	0x01DA8004 LDR X8, [X19 + 0xB0]
	0x01DA8008 CBZ X8, 0x1DA81A4
	0x01DA800C LDR X0, [X8 + 0xB0]
	0x01DA8010 CBZ X0, 0x1DA81A4
	0x01DA8014 MOV X1, X31
	0x01DA8018 BL 0x3C3F58C
	0x01DA801C LDR X8, [X19 + 0xB0]
	0x01DA8020 CBZ X8, 0x1DA81A4
	0x01DA8024 LDR X0, [X8 + 0xB0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2632000
	005 Move W8, [X20+2718]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2351000
	012 Move X0, [X0+1216]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2718], W8
	016 Compare X19, 0
	017 JumpIfEqual {39}
	018 Move X9, 0x2351000
	019 Move X9, [X9+1216]
	020 Move W8, 1
	021 Move [X19+88], W8
	022 Move X8, [X19]
	023 Move X1, [X9]
	024 Move W10, [X8+304]
	025 Move W9, [X1+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, [X8+200]
	028 Add X8, X8, X9
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Call TeleportationMachine.RPC_RequestActivation, X0
	036 Return 
	037 Move X0, X19
	038 Call 0x1C181E0
	039 Call 0x1C17F20

Method: System.Void RPC_PlayChargingParticles@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01DA8028 CBZ X0, 0x1DA81A4
	0x01DA802C MOV X1, X31
	0x01DA8030 MOV V8.16B, V0.16B
	0x01DA8034 MOV V9.16B, V1.16B
	0x01DA8038 MOV V10.16B, V2.16B
	0x01DA803C BL 0x3C3FA04
	0x01DA8040 ADRP X20, 0x234B000
	0x01DA8044 LDR X20, [X20 + 0x5D8]
	0x01DA8048 MOV V11.16B, V0.16B
	0x01DA804C MOV V12.16B, V1.16B
	0x01DA8050 MOV V13.16B, V2.16B
	0x01DA8054 LDR X0, [X20]
	0x01DA8058 LDR W8, [X0 + 0xE0]
	0x01DA805C CBNZ W8, 0x1DA8068
	0x01DA8060 BL 0x1C16DFC
	0x01DA8064 LDR X0, [X20]
	0x01DA8068 LDR X8, [X0 + 0xB8]
	0x01DA806C MOV X1, X31
	0x01DA8070 LDR W0, [X8]
	0x01DA8074 BL 0x3C35CB8
	0x01DA8078 ADRP X8, 0x234B000
	0x01DA807C LDR X8, [X8 + 0x5F8]
	0x01DA8080 MOV W20, W0
	0x01DA8084 LDR X8, [X8]
	0x01DA8088 LDR W9, [X8 + 0xE0]
	0x01DA808C CBNZ W9, 0x1DA8098
	0x01DA8090 MOV X0, X8
	0x01DA8094 BL 0x1C16DFC
	0x01DA8098 ADRP X8, 0xFFFFFFFFFED42000
	0x01DA809C LDR V6, [X8 + 0x35C]
	0x01DA80A0 ADD X0, X31, 0x0
	0x01DA80A4 MOV V0.16B, V8.16B
	0x01DA80A8 MOV V1.16B, V9.16B
	0x01DA80AC MOV V2.16B, V10.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2631000
	005 Move W8, [X20+2719]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2350000
	012 Move X0, [X0+1216]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2719], W8
	016 Compare X19, 0
	017 JumpIfEqual {39}
	018 Move X9, 0x2350000
	019 Move X9, [X9+1216]
	020 Move W8, 1
	021 Move [X19+88], W8
	022 Move X8, [X19]
	023 Move X1, [X9]
	024 Move W10, [X8+304]
	025 Move W9, [X1+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, [X8+200]
	028 Add X8, X8, X9
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Call TeleportationMachine.RPC_PlayChargingParticles, X0
	036 Return 
	037 Move X0, X19
	038 Call 0x1C181E0
	039 Call 0x1C17F20

Method: System.Void RPC_Teleport@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01DA80B0 MOV V3.16B, V11.16B
	0x01DA80B4 MOV V4.16B, V12.16B
	0x01DA80B8 MOV V5.16B, V13.16B
	0x01DA80BC MOV W1, W20
	0x01DA80C0 MOV X2, X31
	0x01DA80C4 BL 0x3C8B18C
	0x01DA80C8 TBZ X0, 0x0, 0x1DA8180
	0x01DA80CC ADD X0, X31, 0x0
	0x01DA80D0 MOV X1, X31
	0x01DA80D4 BL 0x3C8E66C
	0x01DA80D8 ADD X0, X31, 0x0
	0x01DA80DC MOV X1, X31
	0x01DA80E0 BL 0x3C8E678
	0x01DA80E4 MOV X0, X19
	0x01DA80E8 MOV X1, X31
	0x01DA80EC MOV V8.16B, V0.16B
	0x01DA80F0 MOV V9.16B, V1.16B
	0x01DA80F4 MOV V10.16B, V2.16B
	0x01DA80F8 BL 0x3C32E90
	0x01DA80FC CBZ X0, 0x1DA81A4
	0x01DA8100 MOV X1, X31
	0x01DA8104 FNEG S10, S10
	0x01DA8108 FNEG S9, S9
	0x01DA810C FNEG S8, S8
	0x01DA8110 BL 0x3C3F988
	0x01DA8114 MOV V3.16B, V0.16B
	0x01DA8118 MOV V4.16B, V1.16B
	0x01DA811C MOV V5.16B, V2.16B
	0x01DA8120 MOV V0.16B, V8.16B
	0x01DA8124 MOV V1.16B, V9.16B
	0x01DA8128 MOV V2.16B, V10.16B
	0x01DA812C MOV X0, X31
	0x01DA8130 BL 0x3C2A810
	0x01DA8134 LDR X19, [X19 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2631000
	005 Move W8, [X20+2720]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2350000
	012 Move X0, [X0+1216]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2720], W8
	016 Compare X19, 0
	017 JumpIfEqual {39}
	018 Move X9, 0x2350000
	019 Move X9, [X9+1216]
	020 Move W8, 1
	021 Move [X19+88], W8
	022 Move X8, [X19]
	023 Move X1, [X9]
	024 Move W10, [X8+304]
	025 Move W9, [X1+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, [X8+200]
	028 Add X8, X8, X9
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Call TeleportationMachine.RPC_Teleport, X0
	036 Return 
	037 Move X0, X19
	038 Call 0x1C181E0
	039 Call 0x1C17F20

Method: System.Void RPC_RechargeFinished@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01DA8138 ADD X0, X31, 0x0
	0x01DA813C MOV X1, X31
	0x01DA8140 MOV V8.16B, V0.16B
	0x01DA8144 MOV V9.16B, V1.16B
	0x01DA8148 MOV V10.16B, V2.16B
	0x01DA814C MOV V11.16B, V3.16B
	0x01DA8150 BL 0x3C8E66C
	0x01DA8154 CBZ X19, 0x1DA81A4
	0x01DA8158 MOVZ W2, 0x1
	0x01DA815C MOV X0, X19
	0x01DA8160 MOV V3.16B, V8.16B
	0x01DA8164 MOV V4.16B, V9.16B
	0x01DA8168 MOV V5.16B, V10.16B
	0x01DA816C MOV V6.16B, V11.16B
	0x01DA8170 MOV X1, X31
	0x01DA8174 MOVZ W20, 0x1
	0x01DA8178 BL 0x1DA15B0
	0x01DA817C B 0x1DA8184
	0x01DA8180 MOV W20, W31
	0x01DA8184 MOV W0, W20
	0x01DA8188 LDP X20, X19, [X31 + 0x70]
	0x01DA818C LDR X30, [X31 + 0x60]
	0x01DA8190 LDP D9, D8, [X31 + 0x50]
	0x01DA8194 LDP D11, D10, [X31 + 0x40]
	0x01DA8198 LDP D13, D12, [X31 + 0x30]
	0x01DA819C ADD X31, X31, 0x80
	0x01DA81A0 RET
	0x01DA81A4 BL 0x1C16F20
	0x01DA81A8 STP X30, X19, [X31 - 0x10]!
	0x01DA81AC MOV X1, X31
	0x01DA81B0 MOV X19, X0
	0x01DA81B4 BL 0x1E73F88
	0x01DA81B8 MOV X0, X31
	0x01DA81BC BL 0x3C3C6C4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2631000
	005 Move W8, [X20+2721]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2350000
	012 Move X0, [X0+1216]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2721], W8
	016 Compare X19, 0
	017 JumpIfEqual {39}
	018 Move X9, 0x2350000
	019 Move X9, [X9+1216]
	020 Move W8, 1
	021 Move [X19+88], W8
	022 Move X8, [X19]
	023 Move X1, [X9]
	024 Move W10, [X8+304]
	025 Move W9, [X1+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, [X8+200]
	028 Add X8, X8, X9
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Call TeleportationMachine.RPC_RechargeFinished, X0
	036 Return 
	037 Move X0, X19
	038 Call 0x1C181E0
	039 Call 0x1C17F20

