Type: AnimalCompany.Flashlight

Method: AnimalCompany.GrabbableItem get_grabbable()

Disassembly:
	0x01C9E858 MOV X0, X8
	0x01C9E85C BL 0x3A9DE68

ISIL:
	001 Move X0, [X0+128]
	002 Return X0

Method: UnityEngine.Light get_light()

Disassembly:
	0x01C9E860 ORR W0, W0, W20, 0x0
	0x01C9E864 MOV X1, X31

ISIL:
	001 Move X0, [X0+152]
	002 Return X0

Method: System.Boolean get_isOn()

Disassembly:
	0x01C9E868 BL 0x3A9DE6C
	0x01C9E86C STR W0, [X19 + 0x140]
	0x01C9E870 LDR X8, [X23]
	0x01C9E874 LDR X0, [X22]
	0x01C9E878 LDR X8, [X8 + 0xB8]
	0x01C9E87C LDR X20, [X8 + 0x30]
	0x01C9E880 BL 0x1B6EA0C
	0x01C9E884 LDR X2, [X21]
	0x01C9E888 MOV X1, X19
	0x01C9E88C MOV X3, X31
	0x01C9E890 MOV X21, X0
	0x01C9E894 BL 0x27EC89C
	0x01C9E898 MOV X0, X20
	0x01C9E89C MOV X1, X21
	0x01C9E8A0 MOV X2, X31
	0x01C9E8A4 BL 0x322A750
	0x01C9E8A8 LDR X20, [X22]
	0x01C9E8AC CBZ X0, 0x1C9E8F0
	0x01C9E8B0 MOV X1, X20
	0x01C9E8B4 MOV X21, X0
	0x01C9E8B8 BL 0x1B6E8FC
	0x01C9E8BC CBZ X0, 0x1C9EA34
	0x01C9E8C0 LDR X8, [X23]
	0x01C9E8C4 LDR X8, [X8 + 0xB8]
	0x01C9E8C8 STR X0, [X8 + 0x30]
	0x01C9E8CC LDR X20, [X22]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {12}
	006 Move W8, [X8]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return X0
	012 Move X0, 0x22B0000
	013 Move X0, [X0+1168]
	014 Call 0x1B6F804
	015 Call 0x1B6FA0C
	016 Move X19, X0
	017 Move X0, 0x22B1000
	018 Move X0, [X0+760]
	019 Call 0x1B6F804
	020 Move X1, X0
	021 Move X0, X19
	022 Move X2, X31
	023 Call InvalidOperationException..ctor, X0, X1
	024 Move X0, 0x22B1000
	025 Move X0, [X0+768]
	026 Call 0x1B6F804
	027 Move X1, X0
	028 Move X0, X19
	029 Call 0x1B6F8E8

Method: System.Void set_isOn(System.Boolean value)

Disassembly:
	0x01C9E8D0 MOV X0, X21
	0x01C9E8D4 MOV X1, X20
	0x01C9E8D8 BL 0x1B6E8FC
	0x01C9E8DC CBZ X0, 0x1C9EA34
	0x01C9E8E0 LDR X8, [X23]
	0x01C9E8E4 LDR X20, [X22]
	0x01C9E8E8 LDR X8, [X8 + 0xB8]
	0x01C9E8EC B 0x1C9E8FC
	0x01C9E8F0 LDR X8, [X23]
	0x01C9E8F4 LDR X8, [X8 + 0xB8]
	0x01C9E8F8 STR X31, [X8 + 0x30]
	0x01C9E8FC ADRP X24, 0x22B0000
	0x01C9E900 LDR X21, [X8 + 0x38]
	0x01C9E904 LDR X24, [X24 + 0x3F8]
	0x01C9E908 MOV X0, X20
	0x01C9E90C BL 0x1B6EA0C
	0x01C9E910 LDR X2, [X24]
	0x01C9E914 MOV X1, X19
	0x01C9E918 MOV X3, X31
	0x01C9E91C MOV X20, X0
	0x01C9E920 BL 0x27EC89C
	0x01C9E924 MOV X0, X21
	0x01C9E928 MOV X1, X20
	0x01C9E92C MOV X2, X31
	0x01C9E930 BL 0x322A750

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {11}
	006 And W9, W1, 1
	007 Move [X8], W9
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return 
	011 Move X0, 0x22B0000
	012 Move X0, [X0+1168]
	013 Call 0x1B6F804
	014 Call 0x1B6FA0C
	015 Move X19, X0
	016 Move X0, 0x22B1000
	017 Move X0, [X0+760]
	018 Call 0x1B6F804
	019 Move X1, X0
	020 Move X0, X19
	021 Move X2, X31
	022 Call InvalidOperationException..ctor, X0, X1
	023 Move X0, 0x22B1000
	024 Move X0, [X0+776]
	025 Call 0x1B6F804
	026 Move X1, X0
	027 Move X0, X19
	028 Call 0x1B6F8E8

Method: System.Void Awake()

Disassembly:
	0x01C9E934 CBZ X0, 0x1C9E978
	0x01C9E938 LDR X21, [X22]
	0x01C9E93C MOV X20, X0
	0x01C9E940 MOV X1, X21
	0x01C9E944 BL 0x1B6E8FC
	0x01C9E948 CBZ X0, 0x1C9E96C
	0x01C9E94C LDR X8, [X23]
	0x01C9E950 LDR X8, [X8 + 0xB8]
	0x01C9E954 STR X0, [X8 + 0x38]
	0x01C9E958 LDR X21, [X22]
	0x01C9E95C MOV X0, X20
	0x01C9E960 MOV X1, X21
	0x01C9E964 BL 0x1B6E8FC
	0x01C9E968 CBNZ X0, 0x1C9E984
	0x01C9E96C MOV X0, X20
	0x01C9E970 MOV X1, X21
	0x01C9E974 BL 0x1B6ECDC
	0x01C9E978 LDR X8, [X23]
	0x01C9E97C LDR X8, [X8 + 0xB8]
	0x01C9E980 STR X31, [X8 + 0x38]
	0x01C9E984 ADRP X22, 0x22B0000
	0x01C9E988 LDR X22, [X22 + 0x1A0]
	0x01C9E98C ADRP X23, 0x22B0000
	0x01C9E990 ADRP X21, 0x22B0000
	0x01C9E994 LDR X8, [X22]
	0x01C9E998 LDR X8, [X8 + 0xB8]
	0x01C9E99C LDR X23, [X23 + 0x3E0]
	0x01C9E9A0 LDR X20, [X8]
	0x01C9E9A4 LDR X0, [X23]
	0x01C9E9A8 LDR X21, [X21 + 0x3F0]
	0x01C9E9AC BL 0x1B6EA0C
	0x01C9E9B0 LDR X2, [X21]
	0x01C9E9B4 MOV X1, X19
	0x01C9E9B8 MOV X3, X31
	0x01C9E9BC MOV X21, X0
	0x01C9E9C0 BL 0x27EBEA4
	0x01C9E9C4 MOV X0, X20
	0x01C9E9C8 MOV X1, X21
	0x01C9E9CC MOV X2, X31
	0x01C9E9D0 BL 0x322A750
	0x01C9E9D4 CBZ X0, 0x1C9EA14
	0x01C9E9D8 LDR X20, [X23]
	0x01C9E9DC MOV X19, X0
	0x01C9E9E0 MOV X1, X20
	0x01C9E9E4 BL 0x1B6E8FC
	0x01C9E9E8 CBZ X0, 0x1C9EA0C
	0x01C9E9EC LDR X8, [X22]
	0x01C9E9F0 LDR X8, [X8 + 0xB8]
	0x01C9E9F4 STR X0, [X8]
	0x01C9E9F8 LDR X20, [X23]
	0x01C9E9FC MOV X0, X19
	0x01C9EA00 MOV X1, X20
	0x01C9EA04 BL 0x1B6E8FC
	0x01C9EA08 CBNZ X0, 0x1C9EA20
	0x01C9EA0C MOV X0, X19
	0x01C9EA10 B 0x1C9EA38
	0x01C9EA14 LDR X8, [X22]
	0x01C9EA18 LDR X8, [X8 + 0xB8]
	0x01C9EA1C STR X31, [X8]
	0x01C9EA20 LDP X20, X19, [X31 + 0x30]
	0x01C9EA24 LDP X22, X21, [X31 + 0x20]
	0x01C9EA28 LDP X24, X23, [X31 + 0x10]
	0x01C9EA2C LDR X30, [X31], #0x40
	0x01C9EA30 RET
	0x01C9EA34 MOV X0, X21
	0x01C9EA38 MOV X1, X20
	0x01C9EA3C BL 0x1B6ECDC
	0x01C9EA40 STR X30, [X31 - 0x40]!
	0x01C9EA44 STP X24, X23, [X31 + 0x10]
	0x01C9EA48 STP X22, X21, [X31 + 0x20]
	0x01C9EA4C STP X20, X19, [X31 + 0x30]
	0x01C9EA50 ADRP X20, 0x2585000
	0x01C9EA54 ADRP X21, 0x22B0000
	0x01C9EA58 LDRB W8, [X20 + 0x412]
	0x01C9EA5C LDR X21, [X21 + 0x1C0]
	0x01C9EA60 MOV X19, X0
	0x01C9EA64 TBNZ X8, 0x0, 0x1C9EAE8
	0x01C9EA68 ADRP X0, 0x22B0000
	0x01C9EA6C LDR X0, [X0 + 0x3E0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2586000
	008 Move W8, [X20+1032]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x22B1000
	015 Move X0, [X0+368]
	016 Call 0x1B6F7F0
	017 Move X0, 0x22B1000
	018 Move X0, [X0+784]
	019 Call 0x1B6F7F0
	020 Move X0, 0x22B1000
	021 Move X0, [X0+792]
	022 Call 0x1B6F7F0
	023 Move W8, 1
	024 Move [X20+1032], W8
	025 Move X23, [X19+128]
	026 Compare X23, 0
	027 JumpIfEqual {87}
	028 Move X22, 0x22B1000
	029 Move X22, [X22+368]
	030 Move X21, 0x22B1000
	031 Move X20, [X23+400]
	032 Move X0, [X22]
	033 Move X21, [X21+792]
	034 Call 0x1B6FA0C
	035 Move X2, [X21]
	036 Move X1, X19
	037 Move X3, X31
	038 Move X21, X0
	039 Call Action..ctor, X0, X1, X2
	040 Move X0, X20
	041 Move X1, X21
	042 Move X2, X31
	043 Call Delegate.Combine, X0, X1
	044 Move X1, [X22]
	045 Compare X0, 0
	046 JumpIfEqual {52}
	047 Move X8, [X0]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move [X23+400], X0
	050 Move X8, [X0]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move [X23+400], X0
	053 Move X23, [X19+128]
	054 Compare X23, 0
	055 JumpIfEqual {87}
	056 Move X21, 0x22B1000
	057 Move X20, [X23+424]
	058 Move X21, [X21+784]
	059 Move X0, X1
	060 Call 0x1B6FA0C
	061 Move X2, [X21]
	062 Move X1, X19
	063 Move X3, X31
	064 Move X21, X0
	065 Call Action..ctor, X0, X1, X2
	066 Move X0, X20
	067 Move X1, X21
	068 Move X2, X31
	069 Call Delegate.Combine, X0, X1
	070 Compare X0, 0
	071 JumpIfEqual {79}
	072 Move X1, [X22]
	073 Move X8, [X0]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move [X23+424], X0
	076 Move X8, [X0]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Call 0x1B6FCDC
	079 Move [X23+424], X0
	080 Move X20, [X31+32]
	081 Move X19, [X31+40]
	082 Move X22, [X31+16]
	083 Move X21, [X31+24]
	084 Move X30, [X31+48]
	085 Move X23, [X31+56]
	086 Return 
	087 Call 0x1B6FA1C

Method: System.Void OnDestroy()

Disassembly:
	0x01C9EA70 BL 0x1B6E7F0
	0x01C9EA74 ADRP X0, 0x22B0000
	0x01C9EA78 LDR X0, [X0 + 0x3E8]
	0x01C9EA7C BL 0x1B6E7F0
	0x01C9EA80 ADRP X0, 0x22B0000
	0x01C9EA84 LDR X0, [X0 + 0x1A0]
	0x01C9EA88 BL 0x1B6E7F0
	0x01C9EA8C ADRP X0, 0x22B0000
	0x01C9EA90 LDR X0, [X0 + 0x3F0]
	0x01C9EA94 BL 0x1B6E7F0
	0x01C9EA98 ADRP X0, 0x22B0000
	0x01C9EA9C LDR X0, [X0 + 0x3F8]
	0x01C9EAA0 BL 0x1B6E7F0
	0x01C9EAA4 ADRP X0, 0x22B0000
	0x01C9EAA8 LDR X0, [X0 + 0x400]
	0x01C9EAAC BL 0x1B6E7F0
	0x01C9EAB0 ADRP X0, 0x22B0000
	0x01C9EAB4 LDR X0, [X0 + 0x3C8]
	0x01C9EAB8 BL 0x1B6E7F0
	0x01C9EABC ADRP X0, 0x22B0000
	0x01C9EAC0 LDR X0, [X0 + 0x408]
	0x01C9EAC4 BL 0x1B6E7F0
	0x01C9EAC8 ADRP X0, 0x22B0000
	0x01C9EACC LDR X0, [X0 + 0x1C0]
	0x01C9EAD0 BL 0x1B6E7F0
	0x01C9EAD4 ADRP X0, 0x22AF000
	0x01C9EAD8 LDR X0, [X0 + 0xF78]
	0x01C9EADC BL 0x1B6E7F0
	0x01C9EAE0 MOVZ W8, 0x1
	0x01C9EAE4 STRB W8, [X20 + 0x412]
	0x01C9EAE8 LDR X0, [X21]
	0x01C9EAEC LDR W8, [X0 + 0xE0]
	0x01C9EAF0 CBNZ W8, 0x1C9EAF8
	0x01C9EAF4 BL 0x1B6E8F8
	0x01C9EAF8 CBZ X19, 0x1C9ED40
	0x01C9EAFC LDR W8, [X19 + 0x30]
	0x01C9EB00 ADRP X22, 0x22AF000
	0x01C9EB04 LDR X22, [X22 + 0xF78]
	0x01C9EB08 ADRP X23, 0x22B0000
	0x01C9EB0C ORR W8, W8, 0x8
	0x01C9EB10 STR W8, [X19 + 0x30]
	0x01C9EB14 LDR X8, [X22]
	0x01C9EB18 ADRP X21, 0x22B0000
	0x01C9EB1C LDR X8, [X8 + 0xB8]
	0x01C9EB20 LDR X23, [X23 + 0x3E8]
	0x01C9EB24 LDR X20, [X8 + 0x30]
	0x01C9EB28 LDR X0, [X23]
	0x01C9EB2C LDR X21, [X21 + 0x400]
	0x01C9EB30 BL 0x1B6EA0C
	0x01C9EB34 LDR X2, [X21]
	0x01C9EB38 MOV X1, X19
	0x01C9EB3C MOV X3, X31
	0x01C9EB40 MOV X21, X0
	0x01C9EB44 BL 0x27EC89C
	0x01C9EB48 MOV X0, X20
	0x01C9EB4C MOV X1, X21
	0x01C9EB50 MOV X2, X31
	0x01C9EB54 BL 0x322A948
	0x01C9EB58 LDR X20, [X23]
	0x01C9EB5C CBZ X0, 0x1C9EBA0
	0x01C9EB60 MOV X1, X20
	0x01C9EB64 MOV X21, X0
	0x01C9EB68 BL 0x1B6E8FC
	0x01C9EB6C CBZ X0, 0x1C9ED44
	0x01C9EB70 LDR X8, [X22]
	0x01C9EB74 LDR X8, [X8 + 0xB8]
	0x01C9EB78 STR X0, [X8 + 0x30]
	0x01C9EB7C LDR X20, [X23]
	0x01C9EB80 MOV X0, X21
	0x01C9EB84 MOV X1, X20
	0x01C9EB88 BL 0x1B6E8FC
	0x01C9EB8C CBZ X0, 0x1C9ED44
	0x01C9EB90 LDR X8, [X22]
	0x01C9EB94 LDR X20, [X23]
	0x01C9EB98 LDR X8, [X8 + 0xB8]
	0x01C9EB9C B 0x1C9EBAC
	0x01C9EBA0 LDR X8, [X22]
	0x01C9EBA4 LDR X8, [X8 + 0xB8]
	0x01C9EBA8 STR X31, [X8 + 0x30]
	0x01C9EBAC ADRP X24, 0x22B0000
	0x01C9EBB0 LDR X21, [X8 + 0x38]
	0x01C9EBB4 LDR X24, [X24 + 0x3F8]
	0x01C9EBB8 MOV X0, X20
	0x01C9EBBC BL 0x1B6EA0C
	0x01C9EBC0 LDR X2, [X24]
	0x01C9EBC4 MOV X1, X19
	0x01C9EBC8 MOV X3, X31
	0x01C9EBCC MOV X20, X0
	0x01C9EBD0 BL 0x27EC89C
	0x01C9EBD4 MOV X0, X21
	0x01C9EBD8 MOV X1, X20
	0x01C9EBDC MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2586000
	008 Move X21, 0x22B1000
	009 Move W8, [X20+1033]
	010 Move X21, [X21+448]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x22B1000
	017 Move X0, [X0+368]
	018 Call 0x1B6F7F0
	019 Move X0, 0x22B1000
	020 Move X0, [X0+784]
	021 Call 0x1B6F7F0
	022 Move X0, 0x22B1000
	023 Move X0, [X0+792]
	024 Call 0x1B6F7F0
	025 Move X0, 0x22B1000
	026 Move X0, [X0+448]
	027 Call 0x1B6F7F0
	028 Move W8, 1
	029 Move [X20+1033], W8
	030 Move X0, [X21]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1B6F8F8
	035 Compare X19, 0
	036 JumpIfEqual {102}
	037 Move W8, [X19+48]
	038 Move X23, [X19+128]
	039 Or W8, W8, 8
	040 Move [X19+48], W8
	041 Compare X23, 0
	042 JumpIfEqual {102}
	043 Move X22, 0x22B1000
	044 Move X22, [X22+368]
	045 Move X21, 0x22B1000
	046 Move X20, [X23+400]
	047 Move X0, [X22]
	048 Move X21, [X21+792]
	049 Call 0x1B6FA0C
	050 Move X2, [X21]
	051 Move X1, X19
	052 Move X3, X31
	053 Move X21, X0
	054 Call Action..ctor, X0, X1, X2
	055 Move X0, X20
	056 Move X1, X21
	057 Move X2, X31
	058 Call Delegate.Remove, X0, X1
	059 Move X1, [X22]
	060 Compare X0, 0
	061 JumpIfEqual {67}
	062 Move X8, [X0]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move [X23+400], X0
	065 Move X8, [X0]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move [X23+400], X0
	068 Move X23, [X19+128]
	069 Compare X23, 0
	070 JumpIfEqual {102}
	071 Move X21, 0x22B1000
	072 Move X20, [X23+424]
	073 Move X21, [X21+784]
	074 Move X0, X1
	075 Call 0x1B6FA0C
	076 Move X2, [X21]
	077 Move X1, X19
	078 Move X3, X31
	079 Move X21, X0
	080 Call Action..ctor, X0, X1, X2
	081 Move X0, X20
	082 Move X1, X21
	083 Move X2, X31
	084 Call Delegate.Remove, X0, X1
	085 Compare X0, 0
	086 JumpIfEqual {94}
	087 Move X1, [X22]
	088 Move X8, [X0]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move [X23+424], X0
	091 Move X8, [X0]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Call 0x1B6FCDC
	094 Move [X23+424], X0
	095 Move X20, [X31+32]
	096 Move X19, [X31+40]
	097 Move X22, [X31+16]
	098 Move X21, [X31+24]
	099 Move X30, [X31+48]
	100 Move X23, [X31+56]
	101 Return 
	102 Call 0x1B6FA1C

Method: System.Void Spawned()

Disassembly:
	0x01C9EBE0 BL 0x322A948
	0x01C9EBE4 CBZ X0, 0x1C9EC20
	0x01C9EBE8 LDR X21, [X23]
	0x01C9EBEC MOV X20, X0
	0x01C9EBF0 MOV X1, X21
	0x01C9EBF4 BL 0x1B6E8FC
	0x01C9EBF8 CBZ X0, 0x1C9ECB4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call NetworkBehaviour.Spawned, X0
	006 Move X0, X19
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]

Method: System.Void RPC_ToggleOnOff()

Disassembly:
	0x01C9ED48 MOV X1, X20
	0x01C9ED4C BL 0x1B6ECDC
	0x01C9ED50 STR D10, [X31 - 0x40]!
	0x01C9ED54 STP D9, D8, [X31 + 0x10]
	0x01C9ED58 STP X30, X21, [X31 + 0x20]
	0x01C9ED5C STP X20, X19, [X31 + 0x30]
	0x01C9ED60 ADRP X21, 0x2585000
	0x01C9ED64 ADRP X20, 0x22AF000
	0x01C9ED68 LDRB W8, [X21 + 0x413]
	0x01C9ED6C LDR X20, [X20 + 0x478]
	0x01C9ED70 MOV V8.16B, V2.16B
	0x01C9ED74 MOV V9.16B, V1.16B
	0x01C9ED78 MOV V10.16B, V0.16B
	0x01C9ED7C MOV X19, X0
	0x01C9ED80 TBNZ X8, 0x0, 0x1C9EDA4
	0x01C9ED84 ADRP X0, 0x22AF000
	0x01C9ED88 LDR X0, [X0 + 0x478]
	0x01C9ED8C BL 0x1B6E7F0
	0x01C9ED90 ADRP X0, 0x22B0000
	0x01C9ED94 LDR X0, [X0 + 0x198]
	0x01C9ED98 BL 0x1B6E7F0
	0x01C9ED9C MOVZ W8, 0x1
	0x01C9EDA0 STRB W8, [X21 + 0x413]
	0x01C9EDA4 LDR X0, [X20]
	0x01C9EDA8 LDR X20, [X19 + 0x120]
	0x01C9EDAC LDR W8, [X0 + 0xE0]
	0x01C9EDB0 CBNZ W8, 0x1C9EDB8
	0x01C9EDB4 BL 0x1B6E8F8
	0x01C9EDB8 MOV X0, X20
	0x01C9EDBC MOV X1, X31
	0x01C9EDC0 MOV X2, X31
	0x01C9EDC4 BL 0x3AA0AF0
	0x01C9EDC8 TBNZ X0, 0x0, 0x1C9EE6C
	0x01C9EDCC LDR X8, [X19 + 0x120]
	0x01C9EDD0 CBZ X8, 0x1C9EE80
	0x01C9EDD4 LDR X0, [X8 + 0x40]
	0x01C9EDD8 CBZ X0, 0x1C9EE6C
	0x01C9EDDC LDRB W8, [X0 + 0x60]
	0x01C9EDE0 TBNZ X8, 0x1, 0x1C9EE6C
	0x01C9EDE4 MOV X1, X31
	0x01C9EDE8 BL 0x1D9E6A0
	0x01C9EDEC TBZ X0, 0x0, 0x1C9EE6C
	0x01C9EDF0 ADRP X19, 0x22B0000
	0x01C9EDF4 LDR X19, [X19 + 0x198]
	0x01C9EDF8 LDR X0, [X19]
	0x01C9EDFC LDR W8, [X0 + 0xE0]
	0x01C9EE00 CBNZ W8, 0x1C9EE08
	0x01C9EE04 BL 0x1B6E8F8
	0x01C9EE08 ADRP X20, 0x2585000
	0x01C9EE0C LDRB W8, [X20 + 0x44F]
	0x01C9EE10 CBNZ W8, 0x1C9EE28
	0x01C9EE14 ADRP X0, 0x22B0000
	0x01C9EE18 LDR X0, [X0 + 0x198]
	0x01C9EE1C BL 0x1B6E7F0
	0x01C9EE20 MOVZ W8, 0x1
	0x01C9EE24 STRB W8, [X20 + 0x44F]
	0x01C9EE28 LDR X0, [X19]
	0x01C9EE2C LDR W8, [X0 + 0xE0]
	0x01C9EE30 CBNZ W8, 0x1C9EE3C
	0x01C9EE34 BL 0x1B6E8F8
	0x01C9EE38 LDR X0, [X19]
	0x01C9EE3C LDR X8, [X0 + 0xB8]
	0x01C9EE40 LDR X0, [X8]
	0x01C9EE44 CBZ X0, 0x1C9EE80
	0x01C9EE48 MOV V1.16B, V9.16B
	0x01C9EE4C MOV V2.16B, V8.16B
	0x01C9EE50 LDP X20, X19, [X31 + 0x30]
	0x01C9EE54 LDP X30, X21, [X31 + 0x20]
	0x01C9EE58 LDP D9, D8, [X31 + 0x10]
	0x01C9EE5C MOV V0.16B, V10.16B
	0x01C9EE60 MOV X1, X31
	0x01C9EE64 LDR V10, [X31], #0x40
	0x01C9EE68 B 0x1CC2E64
	0x01C9EE6C LDP X20, X19, [X31 + 0x30]
	0x01C9EE70 LDP X30, X21, [X31 + 0x20]
	0x01C9EE74 LDP D9, D8, [X31 + 0x10]
	0x01C9EE78 LDR V10, [X31], #0x40
	0x01C9EE7C RET
	0x01C9EE80 BL 0x1B6EA1C
	0x01C9EE84 STR X30, [X31 - 0x30]!
	0x01C9EE88 STP X22, X21, [X31 + 0x10]
	0x01C9EE8C STP X20, X19, [X31 + 0x20]
	0x01C9EE90 ADRP X22, 0x2585000
	0x01C9EE94 LDRB W8, [X22 + 0x415]
	0x01C9EE98 MOV W20, W2
	0x01C9EE9C MOV X21, X1
	0x01C9EEA0 MOV X19, X0
	0x01C9EEA4 TBNZ X8, 0x0, 0x1C9EEBC
	0x01C9EEA8 ADRP X0, 0x22AF000
	0x01C9EEAC LDR X0, [X0 + 0x478]
	0x01C9EEB0 BL 0x1B6E7F0
	0x01C9EEB4 MOVZ W8, 0x1
	0x01C9EEB8 STRB W8, [X22 + 0x415]
	0x01C9EEBC MOV X0, X31
	0x01C9EEC0 BL 0x1D9CB50
	0x01C9EEC4 AND X1, X0, 0x0
	0x01C9EEC8 MOV X0, X19
	0x01C9EECC BL 0x1C9E510
	0x01C9EED0 MOV X0, X19
	0x01C9EED4 MOV X1, X21
	0x01C9EED8 BL 0x1C9E17C
	0x01C9EEDC TBZ X20, 0x0, 0x1C9EF48
	0x01C9EEE0 ADRP X8, 0x22AF000
	0x01C9EEE4 LDR X8, [X8 + 0x478]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2586000
	005 Move W8, [X20+1034]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x22B1000
	012 Move X0, [X0+448]
	013 Call 0x1B6F7F0
	014 Move X0, 0x22B1000
	015 Move X0, [X0+808]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X20+1034], W8
	019 Move W8, [X19+88]
	020 Compare W8, 0
	021 JumpIfEqual {33}
	022 Move [X19+88], W31
	023 Move X0, X19
	024 Call Flashlight.get_isOn, X0
	025 NotImplemented "Instruction ORN not yet implemented."
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 And W1, W8, 1
	030 Move X30, [X31+32]
	031 Call Flashlight.set_isOn, X0, X1
	032 Return 
	033 Move X20, 0x22B1000
	034 Move X20, [X20+448]
	035 Move X0, [X20]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1B6F8F8
	040 Move X0, X19
	041 Move X1, X31
	042 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	043 Move X0, [X19+56]
	044 Compare X0, 0
	045 JumpIfEqual {130}
	046 Move X1, X31
	047 Call NetworkRunner.get_Stage, X0
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Return 
	053 Move X0, [X19+64]
	054 Compare X0, 0
	055 JumpIfEqual {130}
	056 Move X1, X31
	057 Call NetworkObject.GetLocalAuthorityMask, X0
	058 And W31, W0, 7
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {23}
	063 Move X8, [X19+56]
	064 Compare X8, 0
	065 JumpIfEqual {130}
	066 Move X0, [X8+80]
	067 Compare X0, 0
	068 JumpIfEqual {130}
	069 Move X1, X31
	070 Call Simulation.HasAnyActiveConnections, X0
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {49}
	075 Move X8, [X19+56]
	076 Compare X8, 0
	077 JumpIfEqual {130}
	078 Move X0, [X8+80]
	079 Move W1, 8
	080 Move X2, X31
	081 Call SimulationMessage.Allocate, X0, X1
	082 Move X20, X0
	083 Move W0, 1
	084 Move X1, X31
	085 Call Assert.Check, X0
	086 Move X8, [X19+64]
	087 Compare X8, 0
	088 JumpIfEqual {130}
	089 Move X8, [X8+32]
	090 Compare X8, 0
	091 JumpIfEqual {110}
	092 Move W0, [X8]
	093 Move X0, [X20]
	094 Move X19, [X19+64]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1B6F8F8
	099 Move X8, 0x22B1000
	100 Move X8, [X8+808]
	101 Move X1, X19
	102 Move X20, [X31+16]
	103 Move X19, [X31+24]
	104 Move W2, 7
	105 Move X0, [X8]
	106 Move X3, X31
	107 Move X30, [X31+32]
	108 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	109 Return 
	110 Move X0, X31
	111 Move W1, [X19+104]
	112 Move W2, 1
	113 Move X3, X31
	114 Call RpcHeader.Create, X0, X1, X2
	115 Move [X20+28], X0
	116 Compare X20, 0
	117 JumpIfEqual {130}
	118 Move W8, 64
	119 Move [X20+12], W8
	120 Move X0, [X19+56]
	121 Compare X0, 0
	122 JumpIfEqual {130}
	123 Move X1, X20
	124 Move X20, [X31+16]
	125 Move X19, [X31+24]
	126 Move X2, X31
	127 Move X30, [X31+32]
	128 Call NetworkRunner.SendRpc, X0, X1
	129 Return 
	130 Call 0x1B6FA1C

Method: System.Void HandleToggleUse()

Disassembly:
	0x01C9EEE8 LDR X20, [X19 + 0xB0]

ISIL:
	001 Call Flashlight.RPC_ToggleOnOff, X0
	002 Return 

Method: System.Void HandleInBackpackChanged()

Disassembly:
	0x01C9EEEC LDR X0, [X8]
	0x01C9EEF0 LDR W8, [X0 + 0xE0]
	0x01C9EEF4 CBNZ W8, 0x1C9EEFC
	0x01C9EEF8 BL 0x1B6E8F8
	0x01C9EEFC MOV X0, X20
	0x01C9EF00 MOV X1, X31
	0x01C9EF04 MOV X2, X31
	0x01C9EF08 BL 0x3A9D6EC
	0x01C9EF0C TBZ X0, 0x0, 0x1C9EF48
	0x01C9EF10 LDR X20, [X19 + 0xB0]
	0x01C9EF14 MOV X0, X19
	0x01C9EF18 MOV X1, X31
	0x01C9EF1C BL 0x3A9B084
	0x01C9EF20 CBZ X0, 0x1C9EF58
	0x01C9EF24 MOV X1, X31
	0x01C9EF28 BL 0x3AA7658
	0x01C9EF2C MOV X0, X20
	0x01C9EF30 LDP X20, X19, [X31 + 0x20]
	0x01C9EF34 LDP X22, X21, [X31 + 0x10]
	0x01C9EF38 FMOV S3, 1
	0x01C9EF3C MOV X1, X31
	0x01C9EF40 LDR X30, [X31], #0x30
	0x01C9EF44 B 0x1CC181C
	0x01C9EF48 LDP X20, X19, [X31 + 0x20]
	0x01C9EF4C LDP X22, X21, [X31 + 0x10]
	0x01C9EF50 LDR X30, [X31], #0x30
	0x01C9EF54 RET
	0x01C9EF58 BL 0x1B6EA1C
	0x01C9EF5C STP X30, X23, [X31 - 0x30]!
	0x01C9EF60 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+64]
	006 Compare X0, 0
	007 JumpIfEqual {42}
	008 Move W8, [X0+96]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 2
	011 Compare TEMP, 2
	012 JumpIfEqual {42}
	013 Move X1, X31
	014 Call NetworkObject.get_HasStateAuthority, X0
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {42}
	019 Move X0, X19
	020 Call Flashlight.get_isOn, X0
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {42}
	025 Move X0, [X19+128]
	026 Compare X0, 0
	027 JumpIfEqual {46}
	028 Call GrabbableItem.get_backpackId, X0
	029 Move [X31+8], X0
	030 Add X0, X31, 8
	031 Move X1, X31
	032 Call NetworkBehaviourId.get_IsValid, X0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {42}
	037 Move X0, X19
	038 Move W1, W31
	039 Call Flashlight.set_isOn, X0, X1
	040 Move X0, X19
	041 Call Flashlight.HandleIsOnChanged, X0
	042 Move X30, [X31+16]
	043 Move X19, [X31+24]
	044 Add X31, X31, 32
	045 Return 
	046 Call 0x1B6FA1C

Method: System.Void HandleIsOnChanged()

Disassembly:
	0x01C9EBFC LDR X8, [X22]
	0x01C9EC00 LDR X8, [X8 + 0xB8]
	0x01C9EC04 STR X0, [X8 + 0x38]
	0x01C9EC08 LDR X21, [X23]
	0x01C9EC0C MOV X0, X20
	0x01C9EC10 MOV X1, X21
	0x01C9EC14 BL 0x1B6E8FC
	0x01C9EC18 CBNZ X0, 0x1C9EC2C
	0x01C9EC1C B 0x1C9ECB4
	0x01C9EC20 LDR X8, [X22]
	0x01C9EC24 LDR X8, [X8 + 0xB8]
	0x01C9EC28 STR X31, [X8 + 0x38]
	0x01C9EC2C ADRP X22, 0x22B0000
	0x01C9EC30 LDR X22, [X22 + 0x1A0]
	0x01C9EC34 ADRP X23, 0x22B0000
	0x01C9EC38 ADRP X21, 0x22B0000
	0x01C9EC3C LDR X8, [X22]
	0x01C9EC40 LDR X8, [X8 + 0xB8]
	0x01C9EC44 LDR X23, [X23 + 0x3E0]
	0x01C9EC48 LDR X20, [X8]
	0x01C9EC4C LDR X0, [X23]
	0x01C9EC50 LDR X21, [X21 + 0x3F0]
	0x01C9EC54 BL 0x1B6EA0C
	0x01C9EC58 LDR X2, [X21]
	0x01C9EC5C MOV X1, X19
	0x01C9EC60 MOV X3, X31
	0x01C9EC64 MOV X21, X0
	0x01C9EC68 BL 0x27EBEA4
	0x01C9EC6C MOV X0, X20
	0x01C9EC70 MOV X1, X21
	0x01C9EC74 MOV X2, X31
	0x01C9EC78 BL 0x322A948
	0x01C9EC7C CBZ X0, 0x1C9ECC0
	0x01C9EC80 LDR X21, [X23]
	0x01C9EC84 MOV X20, X0
	0x01C9EC88 MOV X1, X21
	0x01C9EC8C BL 0x1B6E8FC
	0x01C9EC90 CBZ X0, 0x1C9ECB4
	0x01C9EC94 LDR X8, [X22]
	0x01C9EC98 LDR X8, [X8 + 0xB8]
	0x01C9EC9C STR X0, [X8]
	0x01C9ECA0 LDR X21, [X23]
	0x01C9ECA4 MOV X0, X20
	0x01C9ECA8 MOV X1, X21
	0x01C9ECAC BL 0x1B6E8FC
	0x01C9ECB0 CBNZ X0, 0x1C9ECCC
	0x01C9ECB4 MOV X0, X20
	0x01C9ECB8 MOV X1, X21
	0x01C9ECBC BL 0x1B6ECDC
	0x01C9ECC0 LDR X8, [X22]
	0x01C9ECC4 LDR X8, [X8 + 0xB8]
	0x01C9ECC8 STR X31, [X8]
	0x01C9ECCC LDR X8, [X19 + 0x80]
	0x01C9ECD0 CBZ X8, 0x1C9ED40
	0x01C9ECD4 LDR W8, [X8 + 0x28]
	0x01C9ECD8 CMP W8, 0x2
	0x01C9ECDC B.NE 0x1C9ED2C
	0x01C9ECE0 ADRP X20, 0x22B0000
	0x01C9ECE4 LDR X20, [X20 + 0x3C8]
	0x01C9ECE8 LDR X0, [X20]
	0x01C9ECEC LDR W8, [X0 + 0xE0]
	0x01C9ECF0 CBNZ W8, 0x1C9ECFC
	0x01C9ECF4 BL 0x1B6E8F8
	0x01C9ECF8 LDR X0, [X20]
	0x01C9ECFC LDR X8, [X0 + 0xB8]
	0x01C9ED00 LDR X0, [X8]
	0x01C9ED04 CBZ X0, 0x1C9ED40
	0x01C9ED08 ADRP X8, 0x22B0000
	0x01C9ED0C LDR X8, [X8 + 0x408]
	0x01C9ED10 MOV X1, X19
	0x01C9ED14 LDP X20, X19, [X31 + 0x30]
	0x01C9ED18 LDP X22, X21, [X31 + 0x20]
	0x01C9ED1C LDR X2, [X8]
	0x01C9ED20 LDP X24, X23, [X31 + 0x10]
	0x01C9ED24 LDR X30, [X31], #0x40
	0x01C9ED28 B 0x2BD3B48
	0x01C9ED2C LDP X20, X19, [X31 + 0x30]
	0x01C9ED30 LDP X22, X21, [X31 + 0x20]
	0x01C9ED34 LDP X24, X23, [X31 + 0x10]
	0x01C9ED38 LDR X30, [X31], #0x40
	0x01C9ED3C RET
	0x01C9ED40 BL 0x1B6EA1C
	0x01C9ED44 MOV X0, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2586000
	007 Move W8, [X20+1035]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x22B1000
	014 Move X0, [X0+800]
	015 Call 0x1B6F7F0
	016 Move W8, 1
	017 Move [X20+1035], W8
	018 Move X20, [X19+152]
	019 Move X0, X19
	020 Call Flashlight.get_isOn, X0
	021 Compare X20, 0
	022 JumpIfEqual {103}
	023 And W1, W0, 1
	024 Move X0, X20
	025 Move X2, X31
	026 Call Behaviour.set_enabled, X0, X1
	027 Move X20, [X19+144]
	028 Move X0, X19
	029 Call Flashlight.get_isOn, X0
	030 Compare X20, 0
	031 JumpIfEqual {103}
	032 And W1, W0, 1
	033 Move X0, X20
	034 Move X2, X31
	035 Call Renderer.set_enabled, X0, X1
	036 Move X0, [X19+136]
	037 Compare X0, 0
	038 JumpIfEqual {103}
	039 Move X1, X31
	040 Call Renderer.get_materials, X0
	041 Compare X0, 0
	042 JumpIfEqual {103}
	043 Move W9, [X0+24]
	044 Move X8, X0
	045 Compare W9, 0
	046 JumpIfEqual {104}
	047 Move X22, 0x22B1000
	048 Move X22, [X22+800]
	049 Move X20, [X8+32]
	050 Move X0, [X22]
	051 Move W9, [X0+224]
	052 Compare W9, 0
	053 JumpIfNotEqual {56}
	054 Call 0x1B6F8F8
	055 Move X0, [X22]
	056 Move X8, [X0+184]
	057 Move X0, X19
	058 Move W21, [X8]
	059 Call Flashlight.get_isOn, X0
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {75}
	064 Move X0, [X22]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {70}
	068 Call 0x1B6F8F8
	069 Move X0, [X22]
	070 Move X8, [X0+184]
	071 Move S0, [X8+4]
	072 Move S1, [X8+8]
	073 Move S2, [X8+12]
	074 Move S3, [X8+16]
	075 Move S2, W31
	076 Move S3, 1
	077 Move S1, W31
	078 Move S0, W31
	079 Compare X20, 0
	080 JumpIfEqual {103}
	081 Move X0, X20
	082 Move W1, W21
	083 Move X2, X31
	084 Call Material.SetColor, X0, X1, X2
	085 Move X20, [X19+160]
	086 Move X0, X19
	087 Move X1, X31
	088 Call Component.get_transform, X0
	089 Compare X0, 0
	090 JumpIfEqual {103}
	091 Move X1, X31
	092 Call Transform.get_position, X0
	093 Move X0, X20
	094 Move X20, [X31+32]
	095 Move X19, [X31+40]
	096 Move X22, [X31+16]
	097 Move X21, [X31+24]
	098 Move S3, 1
	099 Move X1, X31
	100 Move X30, [X31+48]
	101 Call SFXManager.PlaySFX, X0, X1, V0
	102 Return 
	103 Call 0x1B6FA1C
	104 Call 0x1B6FA24

Method: System.Void .ctor()

Disassembly:
	0x01C9EFC4 AND W2, W21, 0x1
	0x01C9EFC8 MOV X0, X19

ISIL:
	001 Move X1, X31
	002 Call NetworkBehaviour..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x01C9EFCC MOV X1, X20
	0x01C9EFD0 LDP X20, X19, [X31 + 0x20]
	0x01C9EFD4 LDP X22, X21, [X31 + 0x10]
	0x01C9EFD8 LDP X30, X23, [X31], #0x30
	0x01C9EFDC B 0x1C9EE84
	0x01C9EFE0 ADRP X22, 0x22B0000
	0x01C9EFE4 LDR X22, [X22 + 0x1C0]
	0x01C9EFE8 LDR X0, [X22]
	0x01C9EFEC LDR W8, [X0 + 0xE0]
	0x01C9EFF0 CBNZ W8, 0x1C9EFF8
	0x01C9EFF4 BL 0x1B6E8F8
	0x01C9EFF8 MOV X0, X19
	0x01C9EFFC MOV X1, X31
	0x01C9F000 BL 0x1D697C8
	0x01C9F004 LDR X0, [X19 + 0x38]
	0x01C9F008 CBZ X0, 0x1C9F14C
	0x01C9F00C MOV X1, X31
	0x01C9F010 BL 0x1D87040
	0x01C9F014 CMP W0, 0x4
	0x01C9F018 B.NE 0x1C9F02C
	0x01C9F01C LDP X20, X19, [X31 + 0x20]
	0x01C9F020 LDP X22, X21, [X31 + 0x10]
	0x01C9F024 LDP X30, X23, [X31], #0x30
	0x01C9F028 RET
	0x01C9F02C LDR X0, [X19 + 0x40]
	0x01C9F030 CBZ X0, 0x1C9F14C
	0x01C9F034 MOV X1, X31
	0x01C9F038 BL 0x1D9F538
	0x01C9F03C ANDS W31, W0, 0x7

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2586000
	006 Move X21, 0x22B1000
	007 Move X19, 0x22B1000
	008 Move W8, [X20+1036]
	009 Move X21, [X21+832]
	010 Move X19, [X19+800]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x22B1000
	016 Move X0, [X0+800]
	017 Call 0x1B6F7F0
	018 Move X0, 0x22B1000
	019 Move X0, [X0+832]
	020 Call 0x1B6F7F0
	021 Move W8, 1
	022 Move [X20+1036], W8
	023 Move X0, [X21]
	024 Move X1, X31
	025 Call Shader.PropertyToID, X0
	026 Move X8, [X19]
	027 Move X9, -18825216
	028 Move V0, [X9+110]
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X8, [X8+184]
	032 Move [X8], W0
	033 Move [X8+4], V0
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return 

Method: System.Void CopyBackingFieldsToState(System.Boolean param_0)

Disassembly:
	0x01C9F040 B.EQ 0x1C9F0A8
	0x01C9F044 MOV W8, W0

ISIL:
	001 Move W1, [X0+168]
	002 Call Flashlight.set_isOn, X0, X1
	003 Return 

Method: System.Void CopyStateToBackingFields()

Disassembly:
	0x01C9F048 LDR X0, [X19 + 0x38]
	0x01C9F04C TBNZ X8, 0x0, 0x1C9F0E4
	0x01C9F050 CBZ X0, 0x1C9F14C
	0x01C9F054 LDR X0, [X0 + 0x50]
	0x01C9F058 CBZ X0, 0x1C9F14C
	0x01C9F05C MOV X1, X31
	0x01C9F060 BL 0x1DBEFE4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call Flashlight.get_isOn, X0
	005 And W8, W0, 1
	006 Move [X19+168], W8
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 

Method: System.Void RPC_ToggleOnOff@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01C9F064 TBZ X0, 0x0, 0x1C9F01C
	0x01C9F068 LDR X8, [X19 + 0x38]
	0x01C9F06C CBZ X8, 0x1C9F14C
	0x01C9F070 LDR X0, [X8 + 0x50]
	0x01C9F074 MOVZ W1, 0x14
	0x01C9F078 MOV X2, X31
	0x01C9F07C BL 0x1DD601C
	0x01C9F080 MOV X22, X0
	0x01C9F084 MOVZ W0, 0x1
	0x01C9F088 MOV X1, X31
	0x01C9F08C BL 0x1D29EBC
	0x01C9F090 LDR X8, [X19 + 0x40]
	0x01C9F094 CBZ X8, 0x1C9F14C
	0x01C9F098 LDR X8, [X8 + 0x20]
	0x01C9F09C CBZ X8, 0x1C9F0FC
	0x01C9F0A0 LDR W0, [X8]
	0x01C9F0A4 B 0x1C9F100
	0x01C9F0A8 LDR X0, [X22]
	0x01C9F0AC LDR X19, [X19 + 0x40]
	0x01C9F0B0 LDR W8, [X0 + 0xE0]
	0x01C9F0B4 CBNZ W8, 0x1C9F0BC
	0x01C9F0B8 BL 0x1B6E8F8
	0x01C9F0BC ADRP X8, 0x22AF000
	0x01C9F0C0 LDR X8, [X8 + 0x410]
	0x01C9F0C4 MOV X1, X19
	0x01C9F0C8 LDP X20, X19, [X31 + 0x20]
	0x01C9F0CC LDP X22, X21, [X31 + 0x10]
	0x01C9F0D0 LDR X0, [X8]
	0x01C9F0D4 MOVZ W2, 0x7
	0x01C9F0D8 MOV X3, X31
	0x01C9F0DC LDP X30, X23, [X31], #0x30
	0x01C9F0E0 B 0x1D69640
	0x01C9F0E4 MOV W1, W31
	0x01C9F0E8 MOV W2, W31
	0x01C9F0EC MOV X3, X31
	0x01C9F0F0 BL 0x1DA84F4
	0x01C9F0F4 MOV X22, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2585000
	005 Move W8, [X20+1037]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x22B0000
	012 Move X0, [X0+800]
	013 Call 0x1B6F7F0
	014 Move W8, 1
	015 Move [X20+1037], W8
	016 Move W0, 1
	017 Move X1, X31
	018 Move W20, 1
	019 Call Assert.Check, X0
	020 Compare X19, 0
	021 JumpIfEqual {42}
	022 Move X9, 0x22B0000
	023 Move X9, [X9+800]
	024 Move [X19+88], W20
	025 Move X8, [X19]
	026 Move X1, [X9]
	027 Move W10, [X8+304]
	028 Move W9, [X1+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, [X8+200]
	031 Add X8, X8, X9
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Call Flashlight.RPC_ToggleOnOff, X0
	039 Return 
	040 Move X0, X19
	041 Call 0x1B6FCDC
	042 Call 0x1B6FA1C

