Type: AnimalCompany.Flashlight

Method: AnimalCompany.GrabbableItem get_grabbable()

Disassembly:
	0x01D8EFD0 LDR W8, [X0 + 0xE0]
	0x01D8EFD4 CBNZ W8, 0x1D8EFDC

ISIL:
	001 Move X0, [X0+128]
	002 Return X0

Method: UnityEngine.Light get_light()

Disassembly:
	0x01D8EFD8 BL 0x1C16DFC
	0x01D8EFDC MOV X0, X21

ISIL:
	001 Move X0, [X0+152]
	002 Return X0

Method: System.Boolean get_isOn()

Disassembly:
	0x01D8EFE0 MOV X1, X31
	0x01D8EFE4 MOV X2, X31
	0x01D8EFE8 BL 0x3C354F8
	0x01D8EFEC TBZ X0, 0x0, 0x1D8F008
	0x01D8EFF0 LDR X8, [X20 + 0x150]
	0x01D8EFF4 CBZ X8, 0x1D8F024
	0x01D8EFF8 LDR W8, [X8 + 0x80]
	0x01D8EFFC CMP W8, 0x0
	0x01D8F000 CSET W8, NE
	0x01D8F004 B 0x1D8F00C
	0x01D8F008 MOVZ W8, 0x1
	0x01D8F00C STR W8, [X19]
	0x01D8F010 LDP X20, X19, [X31 + 0x20]
	0x01D8F014 LDP X22, X21, [X31 + 0x10]
	0x01D8F018 AND W0, W0, 0x1
	0x01D8F01C LDR X30, [X31], #0x30
	0x01D8F020 RET
	0x01D8F024 BL 0x1C16F20
	0x01D8F028 STR X30, [X31 - 0x20]!
	0x01D8F02C STP X20, X19, [X31 + 0x10]
	0x01D8F030 ADRP X20, 0x2649000
	0x01D8F034 ADRP X19, 0x2367000
	0x01D8F038 LDRB W8, [X20 + 0x9EC]
	0x01D8F03C LDR X19, [X19 + 0xD18]
	0x01D8F040 TBNZ X8, 0x0, 0x1D8F058
	0x01D8F044 ADRP X0, 0x2367000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {12}
	006 Move W8, [X8]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return X0
	012 Move X0, 0x2365000
	013 Move X0, [X0+1456]
	014 Call 0x1C17D08
	015 Call 0x1C17F10
	016 Move X19, X0
	017 Move X0, 0x2368000
	018 Move X0, [X0+3136]
	019 Call 0x1C17D08
	020 Move X1, X0
	021 Move X0, X19
	022 Move X2, X31
	023 Call InvalidOperationException..ctor, X0, X1
	024 Move X0, 0x2368000
	025 Move X0, [X0+3144]
	026 Call 0x1C17D08
	027 Move X1, X0
	028 Move X0, X19
	029 Call 0x1C17DEC

Method: System.Void set_isOn(System.Boolean value)

Disassembly:
	0x01D8F048 LDR X0, [X0 + 0xD18]
	0x01D8F04C BL 0x1C16CF4
	0x01D8F050 MOVZ W8, 0x1
	0x01D8F054 STRB W8, [X20 + 0x9EC]
	0x01D8F058 LDR X0, [X19]
	0x01D8F05C LDR W8, [X0 + 0xE0]
	0x01D8F060 CBNZ W8, 0x1D8F06C
	0x01D8F064 BL 0x1C16DFC
	0x01D8F068 LDR X0, [X19]
	0x01D8F06C LDR X8, [X0 + 0xB8]
	0x01D8F070 LDP X20, X19, [X31 + 0x10]
	0x01D8F074 LDR X0, [X8]
	0x01D8F078 LDR X30, [X31], #0x20
	0x01D8F07C RET
	0x01D8F080 STP X30, X25, [X31 - 0x40]!
	0x01D8F084 STP X24, X23, [X31 + 0x10]
	0x01D8F088 STP X22, X21, [X31 + 0x20]
	0x01D8F08C STP X20, X19, [X31 + 0x30]
	0x01D8F090 ADRP X24, 0x2649000
	0x01D8F094 ADRP X25, 0x2367000
	0x01D8F098 ADRP X20, 0x2367000
	0x01D8F09C ADRP X23, 0x2367000
	0x01D8F0A0 ADRP X22, 0x2367000
	0x01D8F0A4 ADRP X21, 0x2367000
	0x01D8F0A8 LDRB W8, [X24 + 0x9ED]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {11}
	006 And W9, W1, 1
	007 Move [X8], W9
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return 
	011 Move X0, 0x2365000
	012 Move X0, [X0+1456]
	013 Call 0x1C17D08
	014 Call 0x1C17F10
	015 Move X19, X0
	016 Move X0, 0x2368000
	017 Move X0, [X0+3136]
	018 Call 0x1C17D08
	019 Move X1, X0
	020 Move X0, X19
	021 Move X2, X31
	022 Call InvalidOperationException..ctor, X0, X1
	023 Move X0, 0x2368000
	024 Move X0, [X0+3152]
	025 Call 0x1C17D08
	026 Move X1, X0
	027 Move X0, X19
	028 Call 0x1C17DEC

Method: System.Void Awake()

Disassembly:
	0x01D8F0AC LDR X25, [X25 + 0xB98]
	0x01D8F0B0 LDR X20, [X20 + 0xD20]
	0x01D8F0B4 LDR X23, [X23 + 0xD28]
	0x01D8F0B8 LDR X22, [X22 + 0xD30]
	0x01D8F0BC LDR X21, [X21 + 0xD38]
	0x01D8F0C0 MOV X19, X0
	0x01D8F0C4 TBNZ X8, 0x0, 0x1D8F13C
	0x01D8F0C8 ADRP X0, 0x2367000
	0x01D8F0CC LDR X0, [X0 + 0xD40]
	0x01D8F0D0 BL 0x1C16CF4
	0x01D8F0D4 ADRP X0, 0x2367000
	0x01D8F0D8 LDR X0, [X0 + 0xD30]
	0x01D8F0DC BL 0x1C16CF4
	0x01D8F0E0 ADRP X0, 0x2367000
	0x01D8F0E4 LDR X0, [X0 + 0xA58]
	0x01D8F0E8 BL 0x1C16CF4
	0x01D8F0EC ADRP X0, 0x2367000
	0x01D8F0F0 LDR X0, [X0 + 0xD20]
	0x01D8F0F4 BL 0x1C16CF4
	0x01D8F0F8 ADRP X0, 0x2367000
	0x01D8F0FC LDR X0, [X0 + 0xB98]
	0x01D8F100 BL 0x1C16CF4
	0x01D8F104 ADRP X0, 0x2367000
	0x01D8F108 LDR X0, [X0 + 0xD48]
	0x01D8F10C BL 0x1C16CF4
	0x01D8F110 ADRP X0, 0x2367000
	0x01D8F114 LDR X0, [X0 + 0xD50]
	0x01D8F118 BL 0x1C16CF4
	0x01D8F11C ADRP X0, 0x2367000
	0x01D8F120 LDR X0, [X0 + 0xD38]
	0x01D8F124 BL 0x1C16CF4
	0x01D8F128 ADRP X0, 0x2367000
	0x01D8F12C LDR X0, [X0 + 0xD28]
	0x01D8F130 BL 0x1C16CF4
	0x01D8F134 MOVZ W8, 0x1
	0x01D8F138 STRB W8, [X24 + 0x9ED]
	0x01D8F13C LDR X1, [X25]
	0x01D8F140 MOV X0, X19
	0x01D8F144 BL 0x21A3894
	0x01D8F148 STR X0, [X19 + 0x168]
	0x01D8F14C LDR X1, [X20]
	0x01D8F150 MOV X0, X19
	0x01D8F154 BL 0x21A3894
	0x01D8F158 STR X0, [X19 + 0x170]
	0x01D8F15C LDR X8, [X23]
	0x01D8F160 LDR X0, [X22]
	0x01D8F164 LDR X8, [X8 + 0xB8]
	0x01D8F168 LDR X20, [X8 + 0x28]
	0x01D8F16C BL 0x1C16F10
	0x01D8F170 LDR X2, [X21]
	0x01D8F174 MOV X1, X19
	0x01D8F178 MOV X3, X31
	0x01D8F17C MOV X21, X0
	0x01D8F180 BL 0x2A6BD48
	0x01D8F184 MOV X0, X20
	0x01D8F188 MOV X1, X21
	0x01D8F18C MOV X2, X31
	0x01D8F190 BL 0x33C0DE4
	0x01D8F194 LDR X20, [X22]
	0x01D8F198 CBZ X0, 0x1D8F1DC
	0x01D8F19C MOV X1, X20
	0x01D8F1A0 MOV X21, X0
	0x01D8F1A4 BL 0x1C16E00
	0x01D8F1A8 CBZ X0, 0x1D8F320
	0x01D8F1AC LDR X8, [X23]
	0x01D8F1B0 LDR X8, [X8 + 0xB8]
	0x01D8F1B4 STR X0, [X8 + 0x28]
	0x01D8F1B8 LDR X20, [X22]
	0x01D8F1BC MOV X0, X21
	0x01D8F1C0 MOV X1, X20
	0x01D8F1C4 BL 0x1C16E00
	0x01D8F1C8 CBZ X0, 0x1D8F320
	0x01D8F1CC LDR X8, [X23]
	0x01D8F1D0 LDR X20, [X22]
	0x01D8F1D4 LDR X8, [X8 + 0xB8]
	0x01D8F1D8 B 0x1D8F1E8
	0x01D8F1DC LDR X8, [X23]
	0x01D8F1E0 LDR X8, [X8 + 0xB8]
	0x01D8F1E4 STR X31, [X8 + 0x28]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x264A000
	008 Move W8, [X20+2531]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x2366000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move X0, 0x2368000
	018 Move X0, [X0+3160]
	019 Call 0x1C17CF4
	020 Move X0, 0x2368000
	021 Move X0, [X0+3168]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+2531], W8
	025 Move X23, [X19+128]
	026 Compare X23, 0
	027 JumpIfEqual {87}
	028 Move X22, 0x2366000
	029 Move X22, [X22+3696]
	030 Move X21, 0x2368000
	031 Move X20, [X23+464]
	032 Move X0, [X22]
	033 Move X21, [X21+3168]
	034 Call 0x1C17F10
	035 Move X2, [X21]
	036 Move X1, X19
	037 Move X3, X31
	038 Move X21, X0
	039 Call Action..ctor, X0, X1, X2
	040 Move X0, X20
	041 Move X1, X21
	042 Move X2, X31
	043 Call Delegate.Combine, X0, X1
	044 Move X1, [X22]
	045 Compare X0, 0
	046 JumpIfEqual {52}
	047 Move X8, [X0]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move [X23+464], X0
	050 Move X8, [X0]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move [X23+464], X0
	053 Move X23, [X19+128]
	054 Compare X23, 0
	055 JumpIfEqual {87}
	056 Move X21, 0x2368000
	057 Move X20, [X23+488]
	058 Move X21, [X21+3160]
	059 Move X0, X1
	060 Call 0x1C17F10
	061 Move X2, [X21]
	062 Move X1, X19
	063 Move X3, X31
	064 Move X21, X0
	065 Call Action..ctor, X0, X1, X2
	066 Move X0, X20
	067 Move X1, X21
	068 Move X2, X31
	069 Call Delegate.Combine, X0, X1
	070 Compare X0, 0
	071 JumpIfEqual {79}
	072 Move X1, [X22]
	073 Move X8, [X0]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move [X23+488], X0
	076 Move X8, [X0]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Call 0x1C181E0
	079 Move [X23+488], X0
	080 Move X20, [X31+32]
	081 Move X19, [X31+40]
	082 Move X22, [X31+16]
	083 Move X21, [X31+24]
	084 Move X30, [X31+48]
	085 Move X23, [X31+56]
	086 Return 
	087 Call 0x1C17F20

Method: System.Void OnDestroy()

Disassembly:
	0x01D8F1E8 ADRP X24, 0x2367000
	0x01D8F1EC LDR X21, [X8 + 0x30]
	0x01D8F1F0 LDR X24, [X24 + 0xD50]
	0x01D8F1F4 MOV X0, X20
	0x01D8F1F8 BL 0x1C16F10
	0x01D8F1FC LDR X2, [X24]
	0x01D8F200 MOV X1, X19
	0x01D8F204 MOV X3, X31
	0x01D8F208 MOV X20, X0
	0x01D8F20C BL 0x2A6BD48
	0x01D8F210 MOV X0, X21
	0x01D8F214 MOV X1, X20
	0x01D8F218 MOV X2, X31
	0x01D8F21C BL 0x33C0DE4
	0x01D8F220 CBZ X0, 0x1D8F264
	0x01D8F224 LDR X21, [X22]
	0x01D8F228 MOV X20, X0
	0x01D8F22C MOV X1, X21
	0x01D8F230 BL 0x1C16E00
	0x01D8F234 CBZ X0, 0x1D8F258
	0x01D8F238 LDR X8, [X23]
	0x01D8F23C LDR X8, [X8 + 0xB8]
	0x01D8F240 STR X0, [X8 + 0x30]
	0x01D8F244 LDR X21, [X22]
	0x01D8F248 MOV X0, X20
	0x01D8F24C MOV X1, X21
	0x01D8F250 BL 0x1C16E00
	0x01D8F254 CBNZ X0, 0x1D8F270
	0x01D8F258 MOV X0, X20
	0x01D8F25C MOV X1, X21
	0x01D8F260 BL 0x1C171E0
	0x01D8F264 LDR X8, [X23]
	0x01D8F268 LDR X8, [X8 + 0xB8]
	0x01D8F26C STR X31, [X8 + 0x30]
	0x01D8F270 ADRP X22, 0x2367000
	0x01D8F274 LDR X22, [X22 + 0xA58]
	0x01D8F278 ADRP X23, 0x2367000
	0x01D8F27C ADRP X21, 0x2367000
	0x01D8F280 LDR X8, [X22]
	0x01D8F284 LDR X8, [X8 + 0xB8]
	0x01D8F288 LDR X23, [X23 + 0xD40]
	0x01D8F28C LDR X20, [X8]
	0x01D8F290 LDR X0, [X23]
	0x01D8F294 LDR X21, [X21 + 0xD48]
	0x01D8F298 BL 0x1C16F10
	0x01D8F29C LDR X2, [X21]
	0x01D8F2A0 MOV X1, X19
	0x01D8F2A4 MOV X3, X31
	0x01D8F2A8 MOV X21, X0
	0x01D8F2AC BL 0x2A6B350
	0x01D8F2B0 MOV X0, X20
	0x01D8F2B4 MOV X1, X21
	0x01D8F2B8 MOV X2, X31
	0x01D8F2BC BL 0x33C0DE4
	0x01D8F2C0 CBZ X0, 0x1D8F300
	0x01D8F2C4 LDR X20, [X23]
	0x01D8F2C8 MOV X19, X0
	0x01D8F2CC MOV X1, X20
	0x01D8F2D0 BL 0x1C16E00
	0x01D8F2D4 CBZ X0, 0x1D8F2F8
	0x01D8F2D8 LDR X8, [X22]
	0x01D8F2DC LDR X8, [X8 + 0xB8]
	0x01D8F2E0 STR X0, [X8]
	0x01D8F2E4 LDR X20, [X23]
	0x01D8F2E8 MOV X0, X19
	0x01D8F2EC MOV X1, X20
	0x01D8F2F0 BL 0x1C16E00
	0x01D8F2F4 CBNZ X0, 0x1D8F30C
	0x01D8F2F8 MOV X0, X19
	0x01D8F2FC B 0x1D8F324
	0x01D8F300 LDR X8, [X22]
	0x01D8F304 LDR X8, [X8 + 0xB8]
	0x01D8F308 STR X31, [X8]
	0x01D8F30C LDP X20, X19, [X31 + 0x30]
	0x01D8F310 LDP X22, X21, [X31 + 0x20]
	0x01D8F314 LDP X24, X23, [X31 + 0x10]
	0x01D8F318 LDP X30, X25, [X31], #0x40
	0x01D8F31C RET
	0x01D8F320 MOV X0, X21
	0x01D8F324 MOV X1, X20
	0x01D8F328 BL 0x1C171E0
	0x01D8F32C STR X30, [X31 - 0x40]!
	0x01D8F330 STP X24, X23, [X31 + 0x10]
	0x01D8F334 STP X22, X21, [X31 + 0x20]
	0x01D8F338 STP X20, X19, [X31 + 0x30]
	0x01D8F33C ADRP X20, 0x2649000
	0x01D8F340 ADRP X21, 0x2367000
	0x01D8F344 LDRB W8, [X20 + 0x9EE]
	0x01D8F348 LDR X21, [X21 + 0xA78]
	0x01D8F34C MOV X19, X0
	0x01D8F350 TBNZ X8, 0x0, 0x1D8F3D4
	0x01D8F354 ADRP X0, 0x2367000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x264A000
	008 Move X21, 0x2368000
	009 Move W8, [X20+2532]
	010 Move X21, [X21+2680]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x2366000
	017 Move X0, [X0+3696]
	018 Call 0x1C17CF4
	019 Move X0, 0x2368000
	020 Move X0, [X0+3160]
	021 Call 0x1C17CF4
	022 Move X0, 0x2368000
	023 Move X0, [X0+3168]
	024 Call 0x1C17CF4
	025 Move X0, 0x2368000
	026 Move X0, [X0+2680]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+2532], W8
	030 Move X0, [X21]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Compare X19, 0
	036 JumpIfEqual {102}
	037 Move W8, [X19+48]
	038 Move X23, [X19+128]
	039 Or W8, W8, 8
	040 Move [X19+48], W8
	041 Compare X23, 0
	042 JumpIfEqual {102}
	043 Move X22, 0x2366000
	044 Move X22, [X22+3696]
	045 Move X21, 0x2368000
	046 Move X20, [X23+464]
	047 Move X0, [X22]
	048 Move X21, [X21+3168]
	049 Call 0x1C17F10
	050 Move X2, [X21]
	051 Move X1, X19
	052 Move X3, X31
	053 Move X21, X0
	054 Call Action..ctor, X0, X1, X2
	055 Move X0, X20
	056 Move X1, X21
	057 Move X2, X31
	058 Call Delegate.Remove, X0, X1
	059 Move X1, [X22]
	060 Compare X0, 0
	061 JumpIfEqual {67}
	062 Move X8, [X0]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move [X23+464], X0
	065 Move X8, [X0]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move [X23+464], X0
	068 Move X23, [X19+128]
	069 Compare X23, 0
	070 JumpIfEqual {102}
	071 Move X21, 0x2368000
	072 Move X20, [X23+488]
	073 Move X21, [X21+3160]
	074 Move X0, X1
	075 Call 0x1C17F10
	076 Move X2, [X21]
	077 Move X1, X19
	078 Move X3, X31
	079 Move X21, X0
	080 Call Action..ctor, X0, X1, X2
	081 Move X0, X20
	082 Move X1, X21
	083 Move X2, X31
	084 Call Delegate.Remove, X0, X1
	085 Compare X0, 0
	086 JumpIfEqual {94}
	087 Move X1, [X22]
	088 Move X8, [X0]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move [X23+488], X0
	091 Move X8, [X0]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Call 0x1C181E0
	094 Move [X23+488], X0
	095 Move X20, [X31+32]
	096 Move X19, [X31+40]
	097 Move X22, [X31+16]
	098 Move X21, [X31+24]
	099 Move X30, [X31+48]
	100 Move X23, [X31+56]
	101 Return 
	102 Call 0x1C17F20

Method: System.Void Spawned()

Disassembly:
	0x01D8F358 LDR X0, [X0 + 0xD40]
	0x01D8F35C BL 0x1C16CF4
	0x01D8F360 ADRP X0, 0x2367000
	0x01D8F364 LDR X0, [X0 + 0xD30]
	0x01D8F368 BL 0x1C16CF4
	0x01D8F36C ADRP X0, 0x2367000
	0x01D8F370 LDR X0, [X0 + 0xA58]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call NetworkBehaviour.Spawned, X0
	006 Move X0, X19
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]

Method: System.Void RPC_ToggleOnOff()

Disassembly:
	0x01D8F4E8 LDR X8, [X22]
	0x01D8F4EC LDR X8, [X8 + 0xB8]
	0x01D8F4F0 STR X0, [X8 + 0x30]
	0x01D8F4F4 LDR X21, [X23]
	0x01D8F4F8 MOV X0, X20
	0x01D8F4FC MOV X1, X21
	0x01D8F500 BL 0x1C16E00
	0x01D8F504 CBNZ X0, 0x1D8F518
	0x01D8F508 B 0x1D8F5A0
	0x01D8F50C LDR X8, [X22]
	0x01D8F510 LDR X8, [X8 + 0xB8]
	0x01D8F514 STR X31, [X8 + 0x30]
	0x01D8F518 ADRP X22, 0x2367000
	0x01D8F51C LDR X22, [X22 + 0xA58]
	0x01D8F520 ADRP X23, 0x2367000
	0x01D8F524 ADRP X21, 0x2367000
	0x01D8F528 LDR X8, [X22]
	0x01D8F52C LDR X8, [X8 + 0xB8]
	0x01D8F530 LDR X23, [X23 + 0xD40]
	0x01D8F534 LDR X20, [X8]
	0x01D8F538 LDR X0, [X23]
	0x01D8F53C LDR X21, [X21 + 0xD48]
	0x01D8F540 BL 0x1C16F10
	0x01D8F544 LDR X2, [X21]
	0x01D8F548 MOV X1, X19
	0x01D8F54C MOV X3, X31
	0x01D8F550 MOV X21, X0
	0x01D8F554 BL 0x2A6B350
	0x01D8F558 MOV X0, X20
	0x01D8F55C MOV X1, X21
	0x01D8F560 MOV X2, X31
	0x01D8F564 BL 0x33C0FDC
	0x01D8F568 CBZ X0, 0x1D8F5AC
	0x01D8F56C LDR X21, [X23]
	0x01D8F570 MOV X20, X0
	0x01D8F574 MOV X1, X21
	0x01D8F578 BL 0x1C16E00
	0x01D8F57C CBZ X0, 0x1D8F5A0
	0x01D8F580 LDR X8, [X22]
	0x01D8F584 LDR X8, [X8 + 0xB8]
	0x01D8F588 STR X0, [X8]
	0x01D8F58C LDR X21, [X23]
	0x01D8F590 MOV X0, X20
	0x01D8F594 MOV X1, X21
	0x01D8F598 BL 0x1C16E00
	0x01D8F59C CBNZ X0, 0x1D8F5B8
	0x01D8F5A0 MOV X0, X20
	0x01D8F5A4 MOV X1, X21
	0x01D8F5A8 BL 0x1C171E0
	0x01D8F5AC LDR X8, [X22]
	0x01D8F5B0 LDR X8, [X8 + 0xB8]
	0x01D8F5B4 STR X31, [X8]
	0x01D8F5B8 LDR X8, [X19 + 0x80]
	0x01D8F5BC CBZ X8, 0x1D8F62C
	0x01D8F5C0 LDR W8, [X8 + 0x28]
	0x01D8F5C4 CMP W8, 0x2
	0x01D8F5C8 B.NE 0x1D8F618
	0x01D8F5CC ADRP X20, 0x2367000
	0x01D8F5D0 LDR X20, [X20 + 0xD18]
	0x01D8F5D4 LDR X0, [X20]
	0x01D8F5D8 LDR W8, [X0 + 0xE0]
	0x01D8F5DC CBNZ W8, 0x1D8F5E8
	0x01D8F5E0 BL 0x1C16DFC
	0x01D8F5E4 LDR X0, [X20]
	0x01D8F5E8 LDR X8, [X0 + 0xB8]
	0x01D8F5EC LDR X0, [X8]
	0x01D8F5F0 CBZ X0, 0x1D8F62C
	0x01D8F5F4 ADRP X8, 0x2367000
	0x01D8F5F8 LDR X8, [X8 + 0xD58]
	0x01D8F5FC MOV X1, X19
	0x01D8F600 LDP X20, X19, [X31 + 0x30]
	0x01D8F604 LDP X22, X21, [X31 + 0x20]
	0x01D8F608 LDR X2, [X8]
	0x01D8F60C LDP X24, X23, [X31 + 0x10]
	0x01D8F610 LDR X30, [X31], #0x40
	0x01D8F614 B 0x2DBE67C
	0x01D8F618 LDP X20, X19, [X31 + 0x30]
	0x01D8F61C LDP X22, X21, [X31 + 0x20]
	0x01D8F620 LDP X24, X23, [X31 + 0x10]
	0x01D8F624 LDR X30, [X31], #0x40
	0x01D8F628 RET
	0x01D8F62C BL 0x1C16F20
	0x01D8F630 MOV X0, X21
	0x01D8F634 MOV X1, X20
	0x01D8F638 BL 0x1C171E0
	0x01D8F63C ADD X8, X0, 0x184
	0x01D8F640 LDR V3, [X8]
	0x01D8F644 LDR V4, [X8 + 0x8]
	0x01D8F648 MOV V0.S[1], V1.S[0]
	0x01D8F64C FADD V0.2S, V0.2S, V3.2S
	0x01D8F650 FADD S1, S2, S4
	0x01D8F654 STR D0, [X8]
	0x01D8F658 STR S1, [X8 + 0x8]
	0x01D8F65C RET
	0x01D8F660 STR X30, [X31 - 0x30]!
	0x01D8F664 STP X22, X21, [X31 + 0x10]
	0x01D8F668 STP X20, X19, [X31 + 0x20]
	0x01D8F66C ADRP X22, 0x2649000
	0x01D8F670 LDRB W8, [X22 + 0x9F0]
	0x01D8F674 MOV W20, W2
	0x01D8F678 MOV X21, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x264A000
	005 Move W8, [X20+2533]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x2368000
	012 Move X0, [X0+2680]
	013 Call 0x1C17CF4
	014 Move X0, 0x2368000
	015 Move X0, [X0+3184]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2533], W8
	019 Move W8, [X19+88]
	020 Compare W8, 0
	021 JumpIfEqual {33}
	022 Move [X19+88], W31
	023 Move X0, X19
	024 Call Flashlight.get_isOn, X0
	025 NotImplemented "Instruction ORN not yet implemented."
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 And W1, W8, 1
	030 Move X30, [X31+32]
	031 Call Flashlight.set_isOn, X0, X1
	032 Return 
	033 Move X20, 0x2368000
	034 Move X20, [X20+2680]
	035 Move X0, [X20]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	043 Move X0, [X19+56]
	044 Compare X0, 0
	045 JumpIfEqual {127}
	046 Move X1, X31
	047 Call NetworkRunner.get_Stage, X0
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Return 
	053 Move X0, [X19+64]
	054 Compare X0, 0
	055 JumpIfEqual {127}
	056 Move X1, X31
	057 Call NetworkObject.GetLocalAuthorityMask, X0
	058 And W31, W0, 7
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {23}
	063 Move X8, [X19+56]
	064 Compare X8, 0
	065 JumpIfEqual {127}
	066 Move X0, [X8+80]
	067 Compare X0, 0
	068 JumpIfEqual {127}
	069 Move X1, X31
	070 Call Simulation.HasAnyActiveConnections, X0
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {49}
	075 Move X8, [X19+56]
	076 Compare X8, 0
	077 JumpIfEqual {127}
	078 Move X0, [X8+80]
	079 Move W1, 8
	080 Move X2, X31
	081 Call SimulationMessage.Allocate, X0, X1
	082 Move X8, [X19+64]
	083 Compare X8, 0
	084 JumpIfEqual {127}
	085 Move X8, [X8+32]
	086 Move X20, X0
	087 Compare X8, 0
	088 JumpIfEqual {107}
	089 Move W0, [X8]
	090 Move X0, [X20]
	091 Move X19, [X19+64]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move X8, 0x2368000
	097 Move X8, [X8+3184]
	098 Move X1, X19
	099 Move X20, [X31+16]
	100 Move X19, [X31+24]
	101 Move W2, 7
	102 Move X0, [X8]
	103 Move X3, X31
	104 Move X30, [X31+32]
	105 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	106 Return 
	107 Move X0, X31
	108 Move W1, [X19+104]
	109 Move W2, 1
	110 Move X3, X31
	111 Call RpcHeader.Create, X0, X1, X2
	112 Move [X20+28], X0
	113 Compare X20, 0
	114 JumpIfEqual {127}
	115 Move W8, 64
	116 Move [X20+12], W8
	117 Move X0, [X19+56]
	118 Compare X0, 0
	119 JumpIfEqual {127}
	120 Move X1, X20
	121 Move X20, [X31+16]
	122 Move X19, [X31+24]
	123 Move X2, X31
	124 Move X30, [X31+32]
	125 Call NetworkRunner.SendRpc, X0, X1
	126 Return 
	127 Call 0x1C17F20

Method: System.Void HandleToggleUse()

Disassembly:
	0x01D8F67C MOV X19, X0

ISIL:
	001 Call Flashlight.RPC_ToggleOnOff, X0
	002 Return 

Method: System.Void HandleInBackpackChanged()

Disassembly:
	0x01D8F680 TBNZ X8, 0x0, 0x1D8F698
	0x01D8F684 ADRP X0, 0x2364000
	0x01D8F688 LDR X0, [X0 + 0x598]
	0x01D8F68C BL 0x1C16CF4
	0x01D8F690 MOVZ W8, 0x1
	0x01D8F694 STRB W8, [X22 + 0x9F0]
	0x01D8F698 MOV X0, X31
	0x01D8F69C BL 0x1E91B08
	0x01D8F6A0 AND X1, X0, 0x0
	0x01D8F6A4 MOV X0, X19
	0x01D8F6A8 BL 0x1D8ED4C
	0x01D8F6AC MOV X0, X19
	0x01D8F6B0 MOV X1, X21
	0x01D8F6B4 BL 0x1D8E8F0
	0x01D8F6B8 TBZ X20, 0x0, 0x1D8F724
	0x01D8F6BC ADRP X8, 0x2364000
	0x01D8F6C0 LDR X8, [X8 + 0x598]
	0x01D8F6C4 LDR X20, [X19 + 0xD8]
	0x01D8F6C8 LDR X0, [X8]
	0x01D8F6CC LDR W8, [X0 + 0xE0]
	0x01D8F6D0 CBNZ W8, 0x1D8F6D8
	0x01D8F6D4 BL 0x1C16DFC
	0x01D8F6D8 MOV X0, X20
	0x01D8F6DC MOV X1, X31
	0x01D8F6E0 MOV X2, X31
	0x01D8F6E4 BL 0x3C354F8
	0x01D8F6E8 TBZ X0, 0x0, 0x1D8F724
	0x01D8F6EC LDR X20, [X19 + 0xD8]
	0x01D8F6F0 MOV X0, X19
	0x01D8F6F4 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+64]
	006 Compare X0, 0
	007 JumpIfEqual {42}
	008 Move W8, [X0+96]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 2
	011 Compare TEMP, 2
	012 JumpIfEqual {42}
	013 Move X1, X31
	014 Call NetworkObject.get_HasStateAuthority, X0
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {42}
	019 Move X0, X19
	020 Call Flashlight.get_isOn, X0
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {42}
	025 Move X0, [X19+128]
	026 Compare X0, 0
	027 JumpIfEqual {46}
	028 Call GrabbableItem.get_backpackId, X0
	029 Move [X31+8], X0
	030 Add X0, X31, 8
	031 Move X1, X31
	032 Call NetworkBehaviourId.get_IsValid, X0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {42}
	037 Move X0, X19
	038 Move W1, W31
	039 Call Flashlight.set_isOn, X0, X1
	040 Move X0, X19
	041 Call Flashlight.HandleIsOnChanged, X0
	042 Move X30, [X31+16]
	043 Move X19, [X31+24]
	044 Add X31, X31, 32
	045 Return 
	046 Call 0x1C17F20

Method: System.Void HandleIsOnChanged()

Disassembly:
	0x01D8F374 BL 0x1C16CF4
	0x01D8F378 ADRP X0, 0x2367000
	0x01D8F37C LDR X0, [X0 + 0xD48]
	0x01D8F380 BL 0x1C16CF4
	0x01D8F384 ADRP X0, 0x2367000
	0x01D8F388 LDR X0, [X0 + 0xD50]
	0x01D8F38C BL 0x1C16CF4
	0x01D8F390 ADRP X0, 0x2367000
	0x01D8F394 LDR X0, [X0 + 0xD38]
	0x01D8F398 BL 0x1C16CF4
	0x01D8F39C ADRP X0, 0x2367000
	0x01D8F3A0 LDR X0, [X0 + 0xD18]
	0x01D8F3A4 BL 0x1C16CF4
	0x01D8F3A8 ADRP X0, 0x2367000
	0x01D8F3AC LDR X0, [X0 + 0xD58]
	0x01D8F3B0 BL 0x1C16CF4
	0x01D8F3B4 ADRP X0, 0x2367000
	0x01D8F3B8 LDR X0, [X0 + 0xA78]
	0x01D8F3BC BL 0x1C16CF4
	0x01D8F3C0 ADRP X0, 0x2367000
	0x01D8F3C4 LDR X0, [X0 + 0xD28]
	0x01D8F3C8 BL 0x1C16CF4
	0x01D8F3CC MOVZ W8, 0x1
	0x01D8F3D0 STRB W8, [X20 + 0x9EE]
	0x01D8F3D4 LDR X0, [X21]
	0x01D8F3D8 LDR W8, [X0 + 0xE0]
	0x01D8F3DC CBNZ W8, 0x1D8F3E4
	0x01D8F3E0 BL 0x1C16DFC
	0x01D8F3E4 CBZ X19, 0x1D8F62C
	0x01D8F3E8 LDR W8, [X19 + 0x30]
	0x01D8F3EC ADRP X22, 0x2367000
	0x01D8F3F0 LDR X22, [X22 + 0xD28]
	0x01D8F3F4 ADRP X23, 0x2367000
	0x01D8F3F8 ORR W8, W8, 0x8
	0x01D8F3FC STR W8, [X19 + 0x30]
	0x01D8F400 LDR X8, [X22]
	0x01D8F404 ADRP X21, 0x2367000
	0x01D8F408 LDR X8, [X8 + 0xB8]
	0x01D8F40C LDR X23, [X23 + 0xD30]
	0x01D8F410 LDR X20, [X8 + 0x28]
	0x01D8F414 LDR X0, [X23]
	0x01D8F418 LDR X21, [X21 + 0xD38]
	0x01D8F41C BL 0x1C16F10
	0x01D8F420 LDR X2, [X21]
	0x01D8F424 MOV X1, X19
	0x01D8F428 MOV X3, X31
	0x01D8F42C MOV X21, X0
	0x01D8F430 BL 0x2A6BD48
	0x01D8F434 MOV X0, X20
	0x01D8F438 MOV X1, X21
	0x01D8F43C MOV X2, X31
	0x01D8F440 BL 0x33C0FDC
	0x01D8F444 LDR X20, [X23]
	0x01D8F448 CBZ X0, 0x1D8F48C
	0x01D8F44C MOV X1, X20
	0x01D8F450 MOV X21, X0
	0x01D8F454 BL 0x1C16E00
	0x01D8F458 CBZ X0, 0x1D8F630
	0x01D8F45C LDR X8, [X22]
	0x01D8F460 LDR X8, [X8 + 0xB8]
	0x01D8F464 STR X0, [X8 + 0x28]
	0x01D8F468 LDR X20, [X23]
	0x01D8F46C MOV X0, X21
	0x01D8F470 MOV X1, X20
	0x01D8F474 BL 0x1C16E00
	0x01D8F478 CBZ X0, 0x1D8F630
	0x01D8F47C LDR X8, [X22]
	0x01D8F480 LDR X20, [X23]
	0x01D8F484 LDR X8, [X8 + 0xB8]
	0x01D8F488 B 0x1D8F498
	0x01D8F48C LDR X8, [X22]
	0x01D8F490 LDR X8, [X8 + 0xB8]
	0x01D8F494 STR X31, [X8 + 0x28]
	0x01D8F498 ADRP X24, 0x2367000
	0x01D8F49C LDR X21, [X8 + 0x30]
	0x01D8F4A0 LDR X24, [X24 + 0xD50]
	0x01D8F4A4 MOV X0, X20
	0x01D8F4A8 BL 0x1C16F10
	0x01D8F4AC LDR X2, [X24]
	0x01D8F4B0 MOV X1, X19
	0x01D8F4B4 MOV X3, X31
	0x01D8F4B8 MOV X20, X0
	0x01D8F4BC BL 0x2A6BD48
	0x01D8F4C0 MOV X0, X21
	0x01D8F4C4 MOV X1, X20
	0x01D8F4C8 MOV X2, X31
	0x01D8F4CC BL 0x33C0FDC
	0x01D8F4D0 CBZ X0, 0x1D8F50C
	0x01D8F4D4 LDR X21, [X23]
	0x01D8F4D8 MOV X20, X0
	0x01D8F4DC MOV X1, X21
	0x01D8F4E0 BL 0x1C16E00
	0x01D8F4E4 CBZ X0, 0x1D8F5A0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x264A000
	007 Move W8, [X20+2534]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2368000
	014 Move X0, [X0+3176]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+2534], W8
	018 Move X20, [X19+152]
	019 Move X0, X19
	020 Call Flashlight.get_isOn, X0
	021 Compare X20, 0
	022 JumpIfEqual {115}
	023 And W1, W0, 1
	024 Move X0, X20
	025 Move X2, X31
	026 Call Behaviour.set_enabled, X0, X1
	027 Move X8, [X19+160]
	028 Compare X8, 0
	029 JumpIfEqual {115}
	030 Move X20, [X8+48]
	031 Move X0, X19
	032 Call Flashlight.get_isOn, X0
	033 Compare X20, 0
	034 JumpIfEqual {115}
	035 And W1, W0, 1
	036 Move X0, X20
	037 Move X2, X31
	038 Call Collider.set_enabled, X0, X1
	039 Move X20, [X19+144]
	040 Move X0, X19
	041 Call Flashlight.get_isOn, X0
	042 Compare X20, 0
	043 JumpIfEqual {115}
	044 And W1, W0, 1
	045 Move X0, X20
	046 Move X2, X31
	047 Call Renderer.set_enabled, X0, X1
	048 Move X0, [X19+136]
	049 Compare X0, 0
	050 JumpIfEqual {115}
	051 Move X1, X31
	052 Call Renderer.get_materials, X0
	053 Compare X0, 0
	054 JumpIfEqual {115}
	055 Move W9, [X0+24]
	056 Move X8, X0
	057 Compare W9, 0
	058 JumpIfEqual {116}
	059 Move X22, 0x2368000
	060 Move X22, [X22+3176]
	061 Move X20, [X8+32]
	062 Move X0, [X22]
	063 Move W9, [X0+224]
	064 Compare W9, 0
	065 JumpIfNotEqual {68}
	066 Call 0x1C17DFC
	067 Move X0, [X22]
	068 Move X8, [X0+184]
	069 Move X0, X19
	070 Move W21, [X8]
	071 Call Flashlight.get_isOn, X0
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {87}
	076 Move X0, [X22]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {82}
	080 Call 0x1C17DFC
	081 Move X0, [X22]
	082 Move X8, [X0+184]
	083 Move S0, [X8+4]
	084 Move S1, [X8+8]
	085 Move S2, [X8+12]
	086 Move S3, [X8+16]
	087 Move S2, W31
	088 Move S3, 1
	089 Move S1, W31
	090 Move S0, W31
	091 Compare X20, 0
	092 JumpIfEqual {115}
	093 Move X0, X20
	094 Move W1, W21
	095 Move X2, X31
	096 Call Material.SetColor, X0, X1, X2
	097 Move X20, [X19+168]
	098 Move X0, X19
	099 Move X1, X31
	100 Call Component.get_transform, X0
	101 Compare X0, 0
	102 JumpIfEqual {115}
	103 Move X1, X31
	104 Call Transform.get_position, X0
	105 Move X0, X20
	106 Move X20, [X31+32]
	107 Move X19, [X31+40]
	108 Move X22, [X31+16]
	109 Move X21, [X31+24]
	110 Move S3, 1
	111 Move X1, X31
	112 Move X30, [X31+48]
	113 Call SFXManager.PlaySFX, X0, X1, V0
	114 Return 
	115 Call 0x1C17F20
	116 Call 0x1C17F28

Method: System.Void .ctor()

Disassembly:
	0x01D8F758 MOV X19, X0
	0x01D8F75C TBNZ X8, 0x0, 0x1D8F780

ISIL:
	001 Move X1, X31
	002 Call NetworkBehaviour..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x01D8F760 ADRP X0, 0x2367000
	0x01D8F764 LDR X0, [X0 + 0xA78]
	0x01D8F768 BL 0x1C16CF4
	0x01D8F76C ADRP X0, 0x2367000
	0x01D8F770 LDR X0, [X0 + 0xD60]
	0x01D8F774 BL 0x1C16CF4
	0x01D8F778 MOVZ W8, 0x1
	0x01D8F77C STRB W8, [X23 + 0x9EF]
	0x01D8F780 LDRB W8, [X19 + 0x58]
	0x01D8F784 CBZ W8, 0x1D8F7BC
	0x01D8F788 STRB W31, [X19 + 0x58]
	0x01D8F78C LDR X0, [X19 + 0x40]
	0x01D8F790 CBZ X0, 0x1D8F91C
	0x01D8F794 UBFM X1, X22, 0x20, 0x3F
	0x01D8F798 MOV X2, X31
	0x01D8F79C BL 0x1E94228
	0x01D8F7A0 AND W2, W21, 0x1
	0x01D8F7A4 MOV X0, X19
	0x01D8F7A8 MOV X1, X20
	0x01D8F7AC LDP X20, X19, [X31 + 0x20]
	0x01D8F7B0 LDP X22, X21, [X31 + 0x10]
	0x01D8F7B4 LDP X30, X23, [X31], #0x30
	0x01D8F7B8 B 0x1D8F660
	0x01D8F7BC ADRP X22, 0x2367000
	0x01D8F7C0 LDR X22, [X22 + 0xA78]
	0x01D8F7C4 LDR X0, [X22]
	0x01D8F7C8 LDR W8, [X0 + 0xE0]
	0x01D8F7CC CBNZ W8, 0x1D8F7D4
	0x01D8F7D0 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x264A000
	006 Move X21, 0x2368000
	007 Move X19, 0x2368000
	008 Move W8, [X20+2535]
	009 Move X21, [X21+3208]
	010 Move X19, [X19+3176]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x2368000
	016 Move X0, [X0+3176]
	017 Call 0x1C17CF4
	018 Move X0, 0x2368000
	019 Move X0, [X0+3208]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+2535], W8
	023 Move X0, [X21]
	024 Move X1, X31
	025 Call Shader.PropertyToID, X0
	026 Move X8, [X19]
	027 Move X9, -19546112
	028 Move V0, [X9+212]
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X8, [X8+184]
	032 Move [X8], W0
	033 Move [X8+4], V0
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return 

Method: System.Void CopyBackingFieldsToState(System.Boolean param_0)

Disassembly:
	0x01D8F7D4 MOV X0, X19
	0x01D8F7D8 MOV X1, X31

ISIL:
	001 Move W1, [X0+176]
	002 Call Flashlight.set_isOn, X0, X1
	003 Return 

Method: System.Void CopyStateToBackingFields()

Disassembly:
	0x01D8F7DC BL 0x1E77B08
	0x01D8F7E0 LDR X0, [X19 + 0x38]
	0x01D8F7E4 CBZ X0, 0x1D8F91C
	0x01D8F7E8 MOV X1, X31
	0x01D8F7EC BL 0x1E9E538
	0x01D8F7F0 CMP W0, 0x4
	0x01D8F7F4 B.NE 0x1D8F808

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call Flashlight.get_isOn, X0
	005 And W8, W0, 1
	006 Move [X19+176], W8
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 

Method: System.Void RPC_ToggleOnOff@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01D8F7F8 LDP X20, X19, [X31 + 0x20]
	0x01D8F7FC LDP X22, X21, [X31 + 0x10]
	0x01D8F800 LDP X30, X23, [X31], #0x30
	0x01D8F804 RET
	0x01D8F808 LDR X0, [X19 + 0x40]
	0x01D8F80C CBZ X0, 0x1D8F91C
	0x01D8F810 MOV X1, X31
	0x01D8F814 BL 0x1E94078
	0x01D8F818 ANDS W31, W0, 0x7
	0x01D8F81C B.EQ 0x1D8F878
	0x01D8F820 MOV W8, W0
	0x01D8F824 LDR X0, [X19 + 0x38]
	0x01D8F828 TBNZ X8, 0x0, 0x1D8F8B4
	0x01D8F82C CBZ X0, 0x1D8F91C
	0x01D8F830 LDR X0, [X0 + 0x50]
	0x01D8F834 CBZ X0, 0x1D8F91C
	0x01D8F838 MOV X1, X31
	0x01D8F83C BL 0x1EC4D00
	0x01D8F840 TBZ X0, 0x0, 0x1D8F7F8
	0x01D8F844 LDR X8, [X19 + 0x38]
	0x01D8F848 CBZ X8, 0x1D8F91C
	0x01D8F84C LDR X0, [X8 + 0x50]
	0x01D8F850 MOVZ W1, 0x14
	0x01D8F854 MOV X2, X31
	0x01D8F858 BL 0x1ED9318
	0x01D8F85C LDR X8, [X19 + 0x40]
	0x01D8F860 CBZ X8, 0x1D8F91C
	0x01D8F864 LDR X8, [X8 + 0x20]
	0x01D8F868 MOV X22, X0
	0x01D8F86C CBZ X8, 0x1D8F8CC
	0x01D8F870 LDR W0, [X8]
	0x01D8F874 B 0x1D8F8D0
	0x01D8F878 LDR X0, [X22]
	0x01D8F87C LDR X19, [X19 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x264A000
	005 Move W8, [X20+2536]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2368000
	012 Move X0, [X0+3176]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2536], W8
	016 Compare X19, 0
	017 JumpIfEqual {39}
	018 Move X9, 0x2368000
	019 Move X9, [X9+3176]
	020 Move W8, 1
	021 Move [X19+88], W8
	022 Move X8, [X19]
	023 Move X1, [X9]
	024 Move W10, [X8+304]
	025 Move W9, [X1+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, [X8+200]
	028 Add X8, X8, X9
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Call Flashlight.RPC_ToggleOnOff, X0
	036 Return 
	037 Move X0, X19
	038 Call 0x1C181E0
	039 Call 0x1C17F20

