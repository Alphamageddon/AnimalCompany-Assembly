Type: AnimalCompany.LocalPlayerSetup

Method: System.Void Start()

Disassembly:
	0x01DB1F4C LDR X8, [X23]
	0x01DB1F50 LDR X8, [X8 + 0xB8]
	0x01DB1F54 STR X20, [X8 + 0x8]
	0x01DB1F58 ADRP X8, 0x2346000
	0x01DB1F5C LDR X8, [X8 + 0xA98]
	0x01DB1F60 MOV X0, X19
	0x01DB1F64 MOV X1, X20
	0x01DB1F68 LDR X2, [X8]
	0x01DB1F6C BL 0x21C570C
	0x01DB1F70 LDR X8, [X22]
	0x01DB1F74 MOV X19, X0
	0x01DB1F78 LDR W9, [X8 + 0xE0]
	0x01DB1F7C CBNZ W9, 0x1DB1F8C
	0x01DB1F80 MOV X0, X8
	0x01DB1F84 BL 0x1C16DFC
	0x01DB1F88 LDR X8, [X22]
	0x01DB1F8C LDR X8, [X8 + 0xB8]
	0x01DB1F90 STR X19, [X8 + 0x8]
	0x01DB1F94 MOV X0, X19
	0x01DB1F98 LDP X20, X19, [X31 + 0x20]
	0x01DB1F9C LDP X22, X21, [X31 + 0x10]
	0x01DB1FA0 LDP X30, X23, [X31], #0x30
	0x01DB1FA4 RET
	0x01DB1FA8 BL 0x1C16F20
	0x01DB1FAC STP X30, X21, [X31 - 0x20]!
	0x01DB1FB0 STP X20, X19, [X31 + 0x10]
	0x01DB1FB4 ADRP X19, 0x2627000
	0x01DB1FB8 ADRP X20, 0x2344000
	0x01DB1FBC LDRB W8, [X19 + 0xAFA]
	0x01DB1FC0 LDR X20, [X20 + 0x9A0]
	0x01DB1FC4 TBNZ X8, 0x0, 0x1DB1FE8
	0x01DB1FC8 ADRP X0, 0x2344000
	0x01DB1FCC LDR X0, [X0 + 0x9A0]
	0x01DB1FD0 BL 0x1C16CF4
	0x01DB1FD4 ADRP X0, 0x2342000
	0x01DB1FD8 LDR X0, [X0 + 0x598]
	0x01DB1FDC BL 0x1C16CF4
	0x01DB1FE0 MOVZ W8, 0x1
	0x01DB1FE4 STRB W8, [X19 + 0xAFA]
	0x01DB1FE8 LDR X0, [X20]
	0x01DB1FEC ADRP X21, 0x2342000
	0x01DB1FF0 LDR W8, [X0 + 0xE0]
	0x01DB1FF4 LDR X21, [X21 + 0x598]
	0x01DB1FF8 CBNZ W8, 0x1DB2000
	0x01DB1FFC BL 0x1C16DFC
	0x01DB2000 BL 0x1DB1DCC
	0x01DB2004 LDR X8, [X21]
	0x01DB2008 MOV X19, X0
	0x01DB200C LDR W9, [X8 + 0xE0]
	0x01DB2010 CBNZ W9, 0x1DB201C
	0x01DB2014 MOV X0, X8
	0x01DB2018 BL 0x1C16DFC
	0x01DB201C MOV X0, X19
	0x01DB2020 MOV X1, X31
	0x01DB2024 MOV X2, X31
	0x01DB2028 BL 0x3C354F8
	0x01DB202C TBZ X0, 0x0, 0x1DB20A4
	0x01DB2030 LDR X0, [X20]
	0x01DB2034 LDR W8, [X0 + 0xE0]
	0x01DB2038 CBNZ W8, 0x1DB2040
	0x01DB203C BL 0x1C16DFC
	0x01DB2040 BL 0x1DB1DCC
	0x01DB2044 CBZ X0, 0x1DB20B4
	0x01DB2048 LDR X8, [X21]
	0x01DB204C LDR X19, [X0 + 0x40]
	0x01DB2050 LDR W9, [X8 + 0xE0]
	0x01DB2054 CBNZ W9, 0x1DB2060
	0x01DB2058 MOV X0, X8
	0x01DB205C BL 0x1C16DFC
	0x01DB2060 MOV X0, X19
	0x01DB2064 MOV X1, X31
	0x01DB2068 MOV X2, X31
	0x01DB206C BL 0x3C354F8
	0x01DB2070 TBZ X0, 0x0, 0x1DB20A4
	0x01DB2074 LDR X0, [X20]
	0x01DB2078 LDR W8, [X0 + 0xE0]
	0x01DB207C CBNZ W8, 0x1DB2084
	0x01DB2080 BL 0x1C16DFC
	0x01DB2084 BL 0x1DB1DCC
	0x01DB2088 CBZ X0, 0x1DB20B4
	0x01DB208C LDR X8, [X0 + 0x40]
	0x01DB2090 CBZ X8, 0x1DB20B4
	0x01DB2094 LDR X8, [X8 + 0x20]
	0x01DB2098 CBZ X8, 0x1DB20A4
	0x01DB209C LDR W0, [X8]
	0x01DB20A0 B 0x1DB20A8
	0x01DB20A4 MOV W0, W31
	0x01DB20A8 LDP X20, X19, [X31 + 0x10]
	0x01DB20AC LDP X30, X21, [X31], #0x20
	0x01DB20B0 RET
	0x01DB20B4 BL 0x1C16F20
	0x01DB20B8 STR X30, [X31 - 0x10]!
	0x01DB20BC LDR X8, [X0 + 0x40]
	0x01DB20C0 CBZ X8, 0x1DB20E0
	0x01DB20C4 LDR X8, [X8 + 0x20]
	0x01DB20C8 CBZ X8, 0x1DB20D4
	0x01DB20CC LDR W0, [X8]
	0x01DB20D0 B 0x1DB20D8
	0x01DB20D4 MOV W0, W31
	0x01DB20D8 LDR X30, [X31], #0x10
	0x01DB20DC RET
	0x01DB20E0 BL 0x1C16F20
	0x01DB20E4 LDR X0, [X0 + 0x1A0]
	0x01DB20E8 RET
	0x01DB20EC STR X1, [X0 + 0x1A0]
	0x01DB20F0 RET
	0x01DB20F4 LDR V0, [X0 + 0x1A8]
	0x01DB20F8 LDR V1, [X0 + 0x1AC]
	0x01DB20FC LDR V2, [X0 + 0x1B0]
	0x01DB2100 LDR V3, [X0 + 0x1B4]
	0x01DB2104 RET
	0x01DB2108 STR S0, [X0 + 0x1A8]
	0x01DB210C STR S1, [X0 + 0x1AC]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2628000
	008 Move X21, 0x2343000
	009 Move W8, [X20+2803]
	010 Move X21, [X21+2416]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0x2346000
	017 Move X0, [X0+2608]
	018 Call 0x1C17CF4
	019 Move X0, 0x2343000
	020 Move X0, [X0+2416]
	021 Call 0x1C17CF4
	022 Move X0, 0x2347000
	023 Move X0, [X0+2488]
	024 Call 0x1C17CF4
	025 Move X0, 0x2347000
	026 Move X0, [X0+2496]
	027 Call 0x1C17CF4
	028 Move X0, 0x2347000
	029 Move X0, [X0+2504]
	030 Call 0x1C17CF4
	031 Move X0, 0x2347000
	032 Move X0, [X0+2512]
	033 Call 0x1C17CF4
	034 Move X0, 0x2346000
	035 Move X0, [X0+3368]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+2803], W8
	039 Move X0, [X21]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X31
	045 Call Application.get_isEditor
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {77}
	050 Move W8, [X19+32]
	051 Compare W8, 0
	052 JumpIfEqual {77}
	053 Move X0, [X19+40]
	054 Compare X0, 0
	055 JumpIfEqual {135}
	056 Move X8, 0x2347000
	057 Move X8, [X8+2488]
	058 Move X1, [X8]
	059 Call 0x21E62E4, X0
	060 Compare X0, 0
	061 JumpIfEqual {135}
	062 Move W1, 1
	063 Move X2, X31
	064 Call Behaviour.set_enabled, X0, X1
	065 Move X0, [X19+40]
	066 Compare X0, 0
	067 JumpIfEqual {135}
	068 Move X8, 0x2346000
	069 Move X8, [X8+2504]
	070 Move X1, [X8]
	071 Call 0x21E62E4, X0
	072 Compare X0, 0
	073 JumpIfEqual {135}
	074 Move W1, 1
	075 Move X2, X31
	076 Call Behaviour.set_enabled, X0, X1
	077 Move X0, [X19+40]
	078 Compare X0, 0
	079 JumpIfEqual {135}
	080 Move X8, 0x2346000
	081 Move X8, [X8+2496]
	082 Move X23, 0x2345000
	083 Move X22, 0x2345000
	084 Move X21, 0x2346000
	085 Move X1, [X8]
	086 Move X23, [X23+3368]
	087 Move X22, [X22+2608]
	088 Move X21, [X21+2512]
	089 Call 0x21E62E4, X0
	090 Move [X19+48], X0
	091 Move X8, [X23]
	092 Move X0, [X22]
	093 Move X8, [X8+184]
	094 Move X20, [X8+16]
	095 Call 0x1C17F10
	096 Move X2, [X21]
	097 Move X1, X19
	098 Move X3, X31
	099 Move X21, X0
	100 Call Action`1<Object>..ctor, X0, X1, X2
	101 Move X0, X20
	102 Move X1, X21
	103 Move X2, X31
	104 Call Delegate.Combine, X0, X1
	105 Compare X0, 0
	106 JumpIfEqual {125}
	107 Move X20, [X22]
	108 Move X19, X0
	109 Move X1, X20
	110 Call 0x1C17E00
	111 Compare X0, 0
	112 JumpIfEqual {122}
	113 Move X8, [X23]
	114 Move X8, [X8+184]
	115 Move [X8+16], X0
	116 Move X20, [X22]
	117 Move X0, X19
	118 Move X1, X20
	119 Call 0x1C17E00
	120 Compare X0, 0
	121 JumpIfNotEqual {128}
	122 Move X0, X19
	123 Move X1, X20
	124 Call 0x1C181E0
	125 Move X8, [X23]
	126 Move X8, [X8+184]
	127 Move [X8+16], X31
	128 Move X20, [X31+32]
	129 Move X19, [X31+40]
	130 Move X22, [X31+16]
	131 Move X21, [X31+24]
	132 Move X30, [X31+48]
	133 Move X23, [X31+56]
	134 Return 
	135 Call 0x1C17F20

Method: System.Void OnDestroy()

Disassembly:
	0x01DB2110 STR S2, [X0 + 0x1B0]
	0x01DB2114 STR S3, [X0 + 0x1B4]
	0x01DB2118 RET
	0x01DB211C LDR X0, [X0 + 0x1B8]
	0x01DB2120 RET
	0x01DB2124 STR X1, [X0 + 0x1B8]
	0x01DB2128 RET
	0x01DB212C SUB X31, X31, 0x30
	0x01DB2130 STP X30, X21, [X31 + 0x10]
	0x01DB2134 STP X20, X19, [X31 + 0x20]
	0x01DB2138 ADRP X20, 0x2626000
	0x01DB213C LDRB W8, [X20 + 0xAFB]
	0x01DB2140 MOV X19, X0
	0x01DB2144 TBNZ X8, 0x0, 0x1DB2180
	0x01DB2148 ADRP X0, 0x2341000
	0x01DB214C LDR X0, [X0 + 0x648]
	0x01DB2150 BL 0x1C16CF4
	0x01DB2154 ADRP X0, 0x2341000
	0x01DB2158 LDR X0, [X0 + 0xF68]
	0x01DB215C BL 0x1C16CF4
	0x01DB2160 ADRP X0, 0x2342000
	0x01DB2164 LDR X0, [X0 + 0xD70]
	0x01DB2168 BL 0x1C16CF4
	0x01DB216C ADRP X0, 0x2341000
	0x01DB2170 LDR X0, [X0 + 0xFE8]
	0x01DB2174 BL 0x1C16CF4
	0x01DB2178 MOVZ W8, 0x1
	0x01DB217C STRB W8, [X20 + 0xAFB]
	0x01DB2180 STR X31, [X31 + 0x8]
	0x01DB2184 LDR X8, [X19 + 0x198]
	0x01DB2188 CBZ X8, 0x1DB2214
	0x01DB218C ADRP X20, 0x2341000
	0x01DB2190 LDR X20, [X20 + 0x648]
	0x01DB2194 LDR X0, [X20]
	0x01DB2198 LDR W8, [X0 + 0xE0]
	0x01DB219C CBNZ W8, 0x1DB21A4
	0x01DB21A0 BL 0x1C16DFC
	0x01DB21A4 ADRP X21, 0x2626000
	0x01DB21A8 LDRB W8, [X21 + 0x787]
	0x01DB21AC CBNZ W8, 0x1DB21C4
	0x01DB21B0 ADRP X0, 0x2341000
	0x01DB21B4 LDR X0, [X0 + 0x648]
	0x01DB21B8 BL 0x1C16CF4
	0x01DB21BC MOVZ W8, 0x1
	0x01DB21C0 STRB W8, [X21 + 0x787]
	0x01DB21C4 LDR X0, [X20]
	0x01DB21C8 LDR W8, [X0 + 0xE0]
	0x01DB21CC CBNZ W8, 0x1DB21D8
	0x01DB21D0 BL 0x1C16DFC
	0x01DB21D4 LDR X0, [X20]
	0x01DB21D8 LDR X8, [X0 + 0xB8]
	0x01DB21DC LDR X8, [X8]
	0x01DB21E0 CBZ X8, 0x1DB22D4
	0x01DB21E4 LDR X8, [X8 + 0xE0]
	0x01DB21E8 CBZ X8, 0x1DB22D4
	0x01DB21EC LDR X0, [X8 + 0x78]
	0x01DB21F0 CBZ X0, 0x1DB22D4
	0x01DB21F4 ADRP X8, 0x2342000
	0x01DB21F8 LDR X8, [X8 + 0xD70]
	0x01DB21FC LDR X1, [X19 + 0x198]
	0x01DB2200 LDR X2, [X8]
	0x01DB2204 BL 0x262DAD8
	0x01DB2208 TBZ X0, 0x0, 0x1DB221C
	0x01DB220C MOVZ W0, 0x1
	0x01DB2210 B 0x1DB22C4
	0x01DB2214 MOV W0, W31
	0x01DB2218 B 0x1DB22C4
	0x01DB221C LDR X0, [X20]
	0x01DB2220 LDR W8, [X0 + 0xE0]
	0x01DB2224 CBNZ W8, 0x1DB222C
	0x01DB2228 BL 0x1C16DFC
	0x01DB222C LDRB W8, [X21 + 0x787]
	0x01DB2230 CBNZ W8, 0x1DB2248
	0x01DB2234 ADRP X0, 0x2341000
	0x01DB2238 LDR X0, [X0 + 0x648]
	0x01DB223C BL 0x1C16CF4
	0x01DB2240 MOVZ W8, 0x1
	0x01DB2244 STRB W8, [X21 + 0x787]
	0x01DB2248 LDR X0, [X20]
	0x01DB224C LDR W8, [X0 + 0xE0]
	0x01DB2250 CBNZ W8, 0x1DB225C
	0x01DB2254 BL 0x1C16DFC
	0x01DB2258 LDR X0, [X20]
	0x01DB225C LDR X8, [X0 + 0xB8]
	0x01DB2260 LDR X8, [X8]
	0x01DB2264 CBZ X8, 0x1DB22D4
	0x01DB2268 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2627000
	008 Move W8, [X20+2804]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x2345000
	015 Move X0, [X0+2608]
	016 Call 0x1C17CF4
	017 Move X0, 0x2346000
	018 Move X0, [X0+2512]
	019 Call 0x1C17CF4
	020 Move X0, 0x2345000
	021 Move X0, [X0+3368]
	022 Call 0x1C17CF4
	023 Move X0, 0x2342000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+2804], W8
	028 Move X21, 0x2627000
	029 Move X22, 0x2345000
	030 Move X20, 0x2342000
	031 Move W8, [X21+2751]
	032 Move X22, [X22+3368]
	033 Move X20, [X20+1432]
	034 Compare W8, 0
	035 JumpIfNotEqual {41}
	036 Move X0, 0x2345000
	037 Move X0, [X0+3368]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+2751], W8
	041 Move X8, [X22]
	042 Move X0, [X20]
	043 Move X8, [X8+184]
	044 Move W9, [X0+224]
	045 Move X20, [X8+56]
	046 Compare W9, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X0, X20
	050 Move X1, X31
	051 Move X2, X31
	052 Call Object.op_Inequality, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {98}
	057 Move X8, [X22]
	058 Move X23, 0x2345000
	059 Move X8, [X8+184]
	060 Move X23, [X23+2608]
	061 Move X20, [X8+16]
	062 Move X0, [X23]
	063 Call 0x1C17F10
	064 Move X8, 0x2346000
	065 Move X8, [X8+2512]
	066 Move X1, X19
	067 Move X3, X31
	068 Move X21, X0
	069 Move X2, [X8]
	070 Call Action`1<Object>..ctor, X0, X1, X2
	071 Move X0, X20
	072 Move X1, X21
	073 Move X2, X31
	074 Call Delegate.Remove, X0, X1
	075 Compare X0, 0
	076 JumpIfEqual {95}
	077 Move X20, [X23]
	078 Move X19, X0
	079 Move X1, X20
	080 Call 0x1C17E00
	081 Compare X0, 0
	082 JumpIfEqual {92}
	083 Move X8, [X22]
	084 Move X8, [X8+184]
	085 Move [X8+16], X0
	086 Move X20, [X23]
	087 Move X0, X19
	088 Move X1, X20
	089 Call 0x1C17E00
	090 Compare X0, 0
	091 JumpIfNotEqual {98}
	092 Move X0, X19
	093 Move X1, X20
	094 Call 0x1C181E0
	095 Move X8, [X22]
	096 Move X8, [X8+184]
	097 Move [X8+16], X31
	098 Move X20, [X31+32]
	099 Move X19, [X31+40]
	100 Move X22, [X31+16]
	101 Move X21, [X31+24]
	102 Move X30, [X31+48]
	103 Move X23, [X31+56]
	104 Return 

Method: System.Void OnConnected(Fusion.NetworkRunner runner)

Disassembly:
	0x01DB226C CBZ X8, 0x1DB22D4
	0x01DB2270 LDR X8, [X8 + 0xA0]
	0x01DB2274 CBZ X8, 0x1DB22D4
	0x01DB2278 LDR X0, [X8 + 0x48]
	0x01DB227C CBZ X0, 0x1DB22D4
	0x01DB2280 ADRP X8, 0x2341000
	0x01DB2284 LDR X1, [X19 + 0x198]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X2, X31
	006 Move X30, [X31+16]
	007 Call HardwareRig.StartWithRunner, X0, X1
	008 Return 
	009 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01DB2288 LDR X8, [X8 + 0xF68]
	0x01DB228C ADD X2, X31, 0x8
	0x01DB2290 LDR X3, [X8]
	0x01DB2294 BL 0x2609E34

ISIL:
	001 Move W8, 1
	002 Move X1, X31
	003 Move [X0+32], W8
	004 Call MonoBehaviour..ctor, X0
	005 Return 

