Type: AnimalCompany.HandInteractor

Method: AnimalCompany.HandSide get_handSide()

Disassembly:
	0x01D99E88 MOV X2, X31
	0x01D99E8C BL 0x3C354F8

ISIL:
	001 Move W0, [X0+128]
	002 Return X0

Method: AnimalCompany.AttachedItemAnchor get_itemAnchor()

Disassembly:
	0x01D99E90 TBNZ X0, 0x0, 0x1D99EA8
	0x01D99E94 LDR W8, [X20 + 0x18]

ISIL:
	001 Move X0, [X0+136]
	002 Return X0

Method: System.Void Spawned()

Disassembly:
	0x01D99E98 ADD W23, W23, 0x1
	0x01D99E9C CMP W23, W8
	0x01D99EA0 B.LT 0x1D99DFC
	0x01D99EA4 B 0x1D99F0C
	0x01D99EA8 ADRP X8, 0xFFFFFFFFFED51000
	0x01D99EAC ADRP X9, 0xFFFFFFFFFED51000
	0x01D99EB0 LDR W0, [X19 + 0x80]
	0x01D99EB4 LDR V0, [X8 + 0x44C]
	0x01D99EB8 LDR V1, [X9 + 0x2C8]
	0x01D99EBC MOV X1, X31
	0x01D99EC0 BL 0x1DC2324
	0x01D99EC4 CBZ X21, 0x1D99F28
	0x01D99EC8 LDR X8, [X21 + 0x40]
	0x01D99ECC LDR X0, [X19 + 0x88]
	0x01D99ED0 CBZ X8, 0x1D99EE4
	0x01D99ED4 LDR X8, [X8 + 0x20]
	0x01D99ED8 CBZ X8, 0x1D99EE4
	0x01D99EDC LDR W1, [X8]
	0x01D99EE0 B 0x1D99EE8
	0x01D99EE4 MOV X1, X31
	0x01D99EE8 CBZ X0, 0x1D99F28
	0x01D99EEC LDR W8, [X21 + 0x68]
	0x01D99EF0 MOVZ W3, 0x1
	0x01D99EF4 MOV W2, W31
	0x01D99EF8 BFM X1, X8, 0x20, 0x1F
	0x01D99EFC MOV X4, X31
	0x01D99F00 MOV X5, X31
	0x01D99F04 MOV X6, X31
	0x01D99F08 BL 0x1D88C7C
	0x01D99F0C LDP X20, X19, [X31 + 0x50]
	0x01D99F10 LDP X22, X21, [X31 + 0x40]
	0x01D99F14 LDP X24, X23, [X31 + 0x30]
	0x01D99F18 LDP X30, X25, [X31 + 0x20]
	0x01D99F1C LDP D9, D8, [X31 + 0x10]
	0x01D99F20 LDR V10, [X31], #0x60
	0x01D99F24 RET
	0x01D99F28 BL 0x1C16F20
	0x01D99F2C BL 0x1C16F28
	0x01D99F30 SUB X31, X31, 0x20
	0x01D99F34 STP X30, X19, [X31 + 0x10]
	0x01D99F38 MOV X19, X0
	0x01D99F3C LDR X0, [X0 + 0x88]
	0x01D99F40 CBZ X0, 0x1D99F74
	0x01D99F44 MOV X1, X31
	0x01D99F48 BL 0x1D880C4
	0x01D99F4C STR X0, [X31 + 0x8]
	0x01D99F50 ADD X0, X31, 0x8
	0x01D99F54 MOV X1, X31
	0x01D99F58 BL 0x1E74DE4
	0x01D99F5C TBNZ X0, 0x0, 0x1D99F68
	0x01D99F60 MOV X0, X19
	0x01D99F64 BL 0x1D99C00
	0x01D99F68 LDP X30, X19, [X31 + 0x10]
	0x01D99F6C ADD X31, X31, 0x20
	0x01D99F70 RET
	0x01D99F74 BL 0x1C16F20
	0x01D99F78 MOV X1, X31
	0x01D99F7C B 0x1E74F04
	0x01D99F80 STP D13, D12, [X31 - 0x60]!
	0x01D99F84 STP D11, D10, [X31 + 0x10]
	0x01D99F88 STP D9, D8, [X31 + 0x20]
	0x01D99F8C STR X30, [X31 + 0x30]
	0x01D99F90 STP X22, X21, [X31 + 0x40]
	0x01D99F94 STP X20, X19, [X31 + 0x50]
	0x01D99F98 CBZ X1, 0x1D9A110
	0x01D99F9C MOV X19, X0
	0x01D99FA0 MOV X0, X1
	0x01D99FA4 MOV X1, X31
	0x01D99FA8 MOV X20, X2
	0x01D99FAC BL 0x3C32E90
	0x01D99FB0 CBZ X0, 0x1D9A110
	0x01D99FB4 MOV X1, X31
	0x01D99FB8 BL 0x3C3F58C
	0x01D99FBC MOV X0, X19
	0x01D99FC0 MOV X1, X31
	0x01D99FC4 MOV V8.16B, V0.16B
	0x01D99FC8 MOV V9.16B, V1.16B
	0x01D99FCC MOV V10.16B, V2.16B
	0x01D99FD0 BL 0x3C32E90
	0x01D99FD4 CBZ X0, 0x1D9A110
	0x01D99FD8 MOV X1, X31
	0x01D99FDC BL 0x3C3F58C
	0x01D99FE0 ADRP X21, 0x263F000
	0x01D99FE4 LDRB W8, [X21 + 0x85C]
	0x01D99FE8 MOV V11.16B, V0.16B
	0x01D99FEC MOV V12.16B, V1.16B
	0x01D99FF0 MOV V13.16B, V2.16B
	0x01D99FF4 CBNZ W8, 0x1D9A00C
	0x01D99FF8 ADRP X0, 0x235A000
	0x01D99FFC LDR X0, [X0 + 0x5A8]
	0x01D9A000 BL 0x1C16CF4
	0x01D9A004 MOVZ W8, 0x1
	0x01D9A008 STRB W8, [X21 + 0x85C]
	0x01D9A00C ADRP X22, 0x2359000
	0x01D9A010 LDR X22, [X22 + 0x5A8]
	0x01D9A014 FSUB S11, S8, S11
	0x01D9A018 FSUB S9, S9, S12
	0x01D9A01C FSUB S8, S10, S13
	0x01D9A020 LDR X0, [X22]
	0x01D9A024 LDR W8, [X0 + 0xE0]
	0x01D9A028 CBNZ W8, 0x1D9A030
	0x01D9A02C BL 0x1C16DFC
	0x01D9A030 FMUL S0, S11, S11
	0x01D9A034 FMUL S1, S9, S9
	0x01D9A038 FADD S0, S0, S1
	0x01D9A03C FMUL S1, S8, S8
	0x01D9A040 FADD S0, S1, S0
	0x01D9A044 FSQRT S0, S0
	0x01D9A048 STR S0, [X31 + 0x3C]
	0x01D9A04C CBZ X20, 0x1D9A110
	0x01D9A050 MOV X0, X20
	0x01D9A054 MOV X1, X31
	0x01D9A058 BL 0x3C32E90
	0x01D9A05C CBZ X0, 0x1D9A110
	0x01D9A060 MOV X1, X31
	0x01D9A064 BL 0x3C3F58C
	0x01D9A068 MOV X0, X19
	0x01D9A06C MOV X1, X31
	0x01D9A070 MOV V8.16B, V0.16B
	0x01D9A074 MOV V9.16B, V1.16B
	0x01D9A078 MOV V10.16B, V2.16B
	0x01D9A07C BL 0x3C32E90
	0x01D9A080 CBZ X0, 0x1D9A110
	0x01D9A084 MOV X1, X31
	0x01D9A088 BL 0x3C3F58C
	0x01D9A08C LDRB W8, [X21 + 0x85C]
	0x01D9A090 MOV V11.16B, V0.16B
	0x01D9A094 MOV V12.16B, V1.16B
	0x01D9A098 MOV V13.16B, V2.16B
	0x01D9A09C CBNZ W8, 0x1D9A0B4
	0x01D9A0A0 ADRP X0, 0x2359000
	0x01D9A0A4 LDR X0, [X0 + 0x5A8]
	0x01D9A0A8 BL 0x1C16CF4
	0x01D9A0AC MOVZ W8, 0x1
	0x01D9A0B0 STRB W8, [X21 + 0x85C]
	0x01D9A0B4 LDR X0, [X22]
	0x01D9A0B8 FSUB S11, S8, S11
	0x01D9A0BC FSUB S9, S9, S12
	0x01D9A0C0 FSUB S8, S10, S13
	0x01D9A0C4 LDR W8, [X0 + 0xE0]
	0x01D9A0C8 CBNZ W8, 0x1D9A0D0
	0x01D9A0CC BL 0x1C16DFC
	0x01D9A0D0 FMUL S0, S11, S11
	0x01D9A0D4 FMUL S1, S9, S9
	0x01D9A0D8 FADD S0, S0, S1
	0x01D9A0DC FMUL S1, S8, S8
	0x01D9A0E0 FADD S0, S1, S0
	0x01D9A0E4 FSQRT S0, S0
	0x01D9A0E8 ADD X0, X31, 0x3C
	0x01D9A0EC MOV X1, X31
	0x01D9A0F0 BL 0x338FCB8
	0x01D9A0F4 LDP X20, X19, [X31 + 0x50]
	0x01D9A0F8 LDP X22, X21, [X31 + 0x40]
	0x01D9A0FC LDR X30, [X31 + 0x30]
	0x01D9A100 LDP D9, D8, [X31 + 0x20]
	0x01D9A104 LDP D11, D10, [X31 + 0x10]
	0x01D9A108 LDP D13, D12, [X31], #0x60
	0x01D9A10C RET
	0x01D9A110 BL 0x1C16F20
	0x01D9A114 RET
	0x01D9A118 RET
	0x01D9A11C STP X30, X19, [X31 - 0x10]!
	0x01D9A120 LDR X8, [X0 + 0x50]
	0x01D9A124 CBZ X8, 0x1D9A134
	0x01D9A128 LDR W0, [X8]
	0x01D9A12C LDP X30, X19, [X31], #0x10
	0x01D9A130 RET
	0x01D9A134 ADRP X0, 0x2359000
	0x01D9A138 LDR X0, [X0 + 0x5B0]
	0x01D9A13C BL 0x1C16D08
	0x01D9A140 BL 0x1C16F10
	0x01D9A144 MOV X19, X0
	0x01D9A148 ADRP X0, 0x235C000
	0x01D9A14C LDR X0, [X0 + 0xF80]
	0x01D9A150 BL 0x1C16D08
	0x01D9A154 MOV X1, X0
	0x01D9A158 MOV X0, X19
	0x01D9A15C MOV X2, X31
	0x01D9A160 BL 0x337DF1C
	0x01D9A164 ADRP X0, 0x235C000
	0x01D9A168 LDR X0, [X0 + 0xF88]
	0x01D9A16C BL 0x1C16D08
	0x01D9A170 MOV X1, X0
	0x01D9A174 MOV X0, X19
	0x01D9A178 BL 0x1C16DEC
	0x01D9A17C STP X30, X19, [X31 - 0x10]!
	0x01D9A180 LDR X8, [X0 + 0x50]
	0x01D9A184 CBZ X8, 0x1D9A194
	0x01D9A188 STR W1, [X8]
	0x01D9A18C LDP X30, X19, [X31], #0x10
	0x01D9A190 RET
	0x01D9A194 ADRP X0, 0x2359000
	0x01D9A198 LDR X0, [X0 + 0x5B0]
	0x01D9A19C BL 0x1C16D08
	0x01D9A1A0 BL 0x1C16F10
	0x01D9A1A4 MOV X19, X0
	0x01D9A1A8 ADRP X0, 0x235C000
	0x01D9A1AC LDR X0, [X0 + 0xF80]
	0x01D9A1B0 BL 0x1C16D08
	0x01D9A1B4 MOV X1, X0
	0x01D9A1B8 MOV X0, X19
	0x01D9A1BC MOV X2, X31
	0x01D9A1C0 BL 0x337DF1C
	0x01D9A1C4 ADRP X0, 0x235C000
	0x01D9A1C8 LDR X0, [X0 + 0xF90]
	0x01D9A1CC BL 0x1C16D08
	0x01D9A1D0 MOV X1, X0
	0x01D9A1D4 MOV X0, X19
	0x01D9A1D8 BL 0x1C16DEC
	0x01D9A1DC STP X30, X19, [X31 - 0x10]!
	0x01D9A1E0 LDR X8, [X0 + 0x50]
	0x01D9A1E4 CBZ X8, 0x1D9A1F4
	0x01D9A1E8 LDR V0, [X8 + 0x4]
	0x01D9A1EC LDP X30, X19, [X31], #0x10
	0x01D9A1F0 RET
	0x01D9A1F4 ADRP X0, 0x2359000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x2640000
	009 Move W8, [X20+2611]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x235C000
	016 Move X0, [X0+3696]
	017 Call 0x1C17CF4
	018 Move X0, 0x235E000
	019 Move X0, [X0+3912]
	020 Call 0x1C17CF4
	021 Move X0, 0x235E000
	022 Move X0, [X0+3920]
	023 Call 0x1C17CF4
	024 Move X0, 0x235E000
	025 Move X0, [X0+3480]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+2611], W8
	029 Move X0, X19
	030 Move X1, X31
	031 Call NetworkBehaviour.Spawned, X0
	032 Move X0, [X19+64]
	033 Compare X0, 0
	034 JumpIfEqual {213}
	035 Move W8, [X0+96]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 2
	038 Compare TEMP, 2
	039 JumpIfEqual {213}
	040 Move X1, X31
	041 Call NetworkObject.get_HasInputAuthority, X0
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {213}
	046 Move X22, 0x235E000
	047 Move X22, [X22+3480]
	048 Move W9, [X19+128]
	049 Move X8, [X22]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X8, [X8+184]
	052 Move X23, 0x235C000
	053 Move X20, [X8+152]
	054 Move X23, [X23+3696]
	055 Move X0, [X23]
	056 Call 0x1C17F10
	057 Move X8, 0x235E000
	058 Move X8, [X8+3920]
	059 Move X1, X19
	060 Move X3, X31
	061 Move X21, X0
	062 Move X2, [X8]
	063 Call Action..ctor, X0, X1, X2
	064 Move X0, X20
	065 Move X1, X21
	066 Move X2, X31
	067 Call Delegate.Combine, X0, X1
	068 Move X1, [X23]
	069 Compare X0, 0
	070 JumpIfEqual {104}
	071 Move X8, [X0]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X8, [X22]
	074 Move X8, [X8+184]
	075 Move [X8+152], X0
	076 Move X9, [X0]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X23, 0x235C000
	079 Move X20, [X8+136]
	080 Move X23, [X23+3696]
	081 Move X0, [X23]
	082 Call 0x1C17F10
	083 Move X8, 0x235E000
	084 Move X8, [X8+3920]
	085 Move X1, X19
	086 Move X3, X31
	087 Move X21, X0
	088 Move X2, [X8]
	089 Call Action..ctor, X0, X1, X2
	090 Move X0, X20
	091 Move X1, X21
	092 Move X2, X31
	093 Call Delegate.Combine, X0, X1
	094 Move X1, [X23]
	095 Compare X0, 0
	096 JumpIfEqual {131}
	097 Move X8, [X0]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X8, [X22]
	100 Move X8, [X8+184]
	101 Move [X8+136], X0
	102 Move X9, [X0]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X8, [X22]
	105 Move X8, [X8+184]
	106 Move [X8+152], X0
	107 Move X20, [X8+120]
	108 Move X0, X1
	109 Call 0x1C17F10
	110 Move X24, 0x235D000
	111 Move X24, [X24+3912]
	112 Move X1, X19
	113 Move X3, X31
	114 Move X21, X0
	115 Move X2, [X24]
	116 Call Action..ctor, X0, X1, X2
	117 Move X0, X20
	118 Move X1, X21
	119 Move X2, X31
	120 Call Delegate.Combine, X0, X1
	121 Move X1, [X23]
	122 Compare X0, 0
	123 JumpIfEqual {158}
	124 Move X8, [X0]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X8, [X22]
	127 Move X8, [X8+184]
	128 Move [X8+120], X0
	129 Move X9, [X0]
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move X8, [X22]
	132 Move X8, [X8+184]
	133 Move [X8+136], X0
	134 Move X20, [X8+104]
	135 Move X0, X1
	136 Call 0x1C17F10
	137 Move X24, 0x235D000
	138 Move X24, [X24+3912]
	139 Move X1, X19
	140 Move X3, X31
	141 Move X21, X0
	142 Move X2, [X24]
	143 Call Action..ctor, X0, X1, X2
	144 Move X0, X20
	145 Move X1, X21
	146 Move X2, X31
	147 Call Delegate.Combine, X0, X1
	148 Move X1, [X23]
	149 Compare X0, 0
	150 JumpIfEqual {181}
	151 Move X8, [X0]
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move X8, [X22]
	154 Move X8, [X8+184]
	155 Move [X8+104], X0
	156 Move X9, [X0]
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move X8, [X22]
	159 Move X8, [X8+184]
	160 Move [X8+120], X0
	161 Move X20, [X8+88]
	162 Move X0, X1
	163 Call 0x1C17F10
	164 Move X2, [X24]
	165 Move X1, X19
	166 Move X3, X31
	167 Move X21, X0
	168 Call Action..ctor, X0, X1, X2
	169 Move X0, X20
	170 Move X1, X21
	171 Move X2, X31
	172 Call Delegate.Combine, X0, X1
	173 Compare X0, 0
	174 JumpIfEqual {207}
	175 Move X1, [X23]
	176 Move X8, [X0]
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move X8, [X22]
	179 Move X8, [X8+184]
	180 Move [X8+88], X0
	181 Move X8, [X22]
	182 Move X8, [X8+184]
	183 Move [X8+104], X0
	184 Move X20, [X8+72]
	185 Move X0, X1
	186 Call 0x1C17F10
	187 Move X2, [X24]
	188 Move X1, X19
	189 Move X3, X31
	190 Move X21, X0
	191 Call Action..ctor, X0, X1, X2
	192 Move X0, X20
	193 Move X1, X21
	194 Move X2, X31
	195 Call Delegate.Combine, X0, X1
	196 Compare X0, 0
	197 JumpIfEqual {210}
	198 Move X1, [X23]
	199 Move X8, [X0]
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move X8, [X22]
	202 Move X8, [X8+184]
	203 Move [X8+72], X0
	204 Move X8, [X0]
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Call 0x1C181E0
	207 Move X8, [X22]
	208 Move X8, [X8+184]
	209 Move [X8+88], X0
	210 Move X8, [X22]
	211 Move X8, [X8+184]
	212 Move [X8+72], X0
	213 Move X20, [X31+48]
	214 Move X19, [X31+56]
	215 Move X22, [X31+32]
	216 Move X21, [X31+40]
	217 Move X24, [X31+16]
	218 Move X23, [X31+24]
	219 Move X30, [X31+64]
	220 Return 

Method: System.Void Despawned(Fusion.NetworkRunner runner, System.Boolean hasState)

Disassembly:
	0x01D9A1F8 LDR X0, [X0 + 0x5B0]
	0x01D9A1FC BL 0x1C16D08
	0x01D9A200 BL 0x1C16F10
	0x01D9A204 MOV X19, X0
	0x01D9A208 ADRP X0, 0x235C000
	0x01D9A20C LDR X0, [X0 + 0xF98]
	0x01D9A210 BL 0x1C16D08
	0x01D9A214 MOV X1, X0
	0x01D9A218 MOV X0, X19
	0x01D9A21C MOV X2, X31
	0x01D9A220 BL 0x337DF1C
	0x01D9A224 ADRP X0, 0x235C000
	0x01D9A228 LDR X0, [X0 + 0xFA0]
	0x01D9A22C BL 0x1C16D08
	0x01D9A230 MOV X1, X0
	0x01D9A234 MOV X0, X19
	0x01D9A238 BL 0x1C16DEC
	0x01D9A23C STP X30, X19, [X31 - 0x10]!
	0x01D9A240 LDR X8, [X0 + 0x50]
	0x01D9A244 CBZ X8, 0x1D9A254
	0x01D9A248 STR S0, [X8 + 0x4]
	0x01D9A24C LDP X30, X19, [X31], #0x10
	0x01D9A250 RET
	0x01D9A254 ADRP X0, 0x2359000
	0x01D9A258 LDR X0, [X0 + 0x5B0]
	0x01D9A25C BL 0x1C16D08
	0x01D9A260 BL 0x1C16F10
	0x01D9A264 MOV X19, X0
	0x01D9A268 ADRP X0, 0x235C000
	0x01D9A26C LDR X0, [X0 + 0xF98]
	0x01D9A270 BL 0x1C16D08
	0x01D9A274 MOV X1, X0
	0x01D9A278 MOV X0, X19
	0x01D9A27C MOV X2, X31
	0x01D9A280 BL 0x337DF1C
	0x01D9A284 ADRP X0, 0x235C000
	0x01D9A288 LDR X0, [X0 + 0xFA8]
	0x01D9A28C BL 0x1C16D08
	0x01D9A290 MOV X1, X0
	0x01D9A294 MOV X0, X19
	0x01D9A298 BL 0x1C16DEC
	0x01D9A29C STP X30, X19, [X31 - 0x10]!
	0x01D9A2A0 LDR X8, [X0 + 0x50]
	0x01D9A2A4 CBZ X8, 0x1D9A2BC
	0x01D9A2A8 LDR W8, [X8 + 0x8]
	0x01D9A2AC CMP W8, 0x0
	0x01D9A2B0 CSET W0, NE
	0x01D9A2B4 LDP X30, X19, [X31], #0x10
	0x01D9A2B8 RET
	0x01D9A2BC ADRP X0, 0x2359000
	0x01D9A2C0 LDR X0, [X0 + 0x5B0]
	0x01D9A2C4 BL 0x1C16D08
	0x01D9A2C8 BL 0x1C16F10
	0x01D9A2CC MOV X19, X0
	0x01D9A2D0 ADRP X0, 0x235C000
	0x01D9A2D4 LDR X0, [X0 + 0xFB0]
	0x01D9A2D8 BL 0x1C16D08
	0x01D9A2DC MOV X1, X0
	0x01D9A2E0 MOV X0, X19
	0x01D9A2E4 MOV X2, X31
	0x01D9A2E8 BL 0x337DF1C
	0x01D9A2EC ADRP X0, 0x235C000
	0x01D9A2F0 LDR X0, [X0 + 0xFB8]
	0x01D9A2F4 BL 0x1C16D08
	0x01D9A2F8 MOV X1, X0
	0x01D9A2FC MOV X0, X19
	0x01D9A300 BL 0x1C16DEC
	0x01D9A304 STP X30, X19, [X31 - 0x10]!
	0x01D9A308 LDR X8, [X0 + 0x50]
	0x01D9A30C CBZ X8, 0x1D9A320
	0x01D9A310 AND W9, W1, 0x1
	0x01D9A314 STR W9, [X8 + 0x8]
	0x01D9A318 LDP X30, X19, [X31], #0x10
	0x01D9A31C RET
	0x01D9A320 ADRP X0, 0x2359000
	0x01D9A324 LDR X0, [X0 + 0x5B0]
	0x01D9A328 BL 0x1C16D08
	0x01D9A32C BL 0x1C16F10
	0x01D9A330 MOV X19, X0
	0x01D9A334 ADRP X0, 0x235C000
	0x01D9A338 LDR X0, [X0 + 0xFB0]
	0x01D9A33C BL 0x1C16D08
	0x01D9A340 MOV X1, X0
	0x01D9A344 MOV X0, X19
	0x01D9A348 MOV X2, X31
	0x01D9A34C BL 0x337DF1C
	0x01D9A350 ADRP X0, 0x235C000
	0x01D9A354 LDR X0, [X0 + 0xFC0]
	0x01D9A358 BL 0x1C16D08
	0x01D9A35C MOV X1, X0
	0x01D9A360 MOV X0, X19
	0x01D9A364 BL 0x1C16DEC
	0x01D9A368 STP X30, X23, [X31 - 0x30]!
	0x01D9A36C STP X22, X21, [X31 + 0x10]
	0x01D9A370 STP X20, X19, [X31 + 0x20]
	0x01D9A374 ADRP X20, 0x263E000
	0x01D9A378 ADRP X21, 0x235C000
	0x01D9A37C LDRB W8, [X20 + 0xA39]
	0x01D9A380 LDR X21, [X21 + 0xBB8]
	0x01D9A384 MOV X19, X0
	0x01D9A388 TBNZ X8, 0x0, 0x1D9A3C4
	0x01D9A38C ADRP X0, 0x235A000
	0x01D9A390 LDR X0, [X0 + 0xE70]
	0x01D9A394 BL 0x1C16CF4
	0x01D9A398 ADRP X0, 0x235C000
	0x01D9A39C LDR X0, [X0 + 0xBB8]
	0x01D9A3A0 BL 0x1C16CF4
	0x01D9A3A4 ADRP X0, 0x235C000
	0x01D9A3A8 LDR X0, [X0 + 0xFC8]
	0x01D9A3AC BL 0x1C16CF4
	0x01D9A3B0 ADRP X0, 0x235C000
	0x01D9A3B4 LDR X0, [X0 + 0xFD0]
	0x01D9A3B8 BL 0x1C16CF4
	0x01D9A3BC MOVZ W8, 0x1
	0x01D9A3C0 STRB W8, [X20 + 0xA39]
	0x01D9A3C4 LDR X1, [X21]
	0x01D9A3C8 MOV X0, X19
	0x01D9A3CC BL 0x21A3894
	0x01D9A3D0 STR X0, [X19 + 0xC0]
	0x01D9A3D4 CBZ X0, 0x1D9A4C4
	0x01D9A3D8 ADRP X23, 0x235A000
	0x01D9A3DC LDR X23, [X23 + 0xE70]
	0x01D9A3E0 MOV X20, X0
	0x01D9A3E4 LDR X21, [X0 + 0x1D0]
	0x01D9A3E8 ADRP X22, 0x235C000
	0x01D9A3EC LDR X0, [X23]
	0x01D9A3F0 LDR X22, [X22 + 0xFD0]
	0x01D9A3F4 BL 0x1C16F10
	0x01D9A3F8 LDR X2, [X22]
	0x01D9A3FC MOV X1, X19
	0x01D9A400 MOV X3, X31
	0x01D9A404 MOV X22, X0
	0x01D9A408 BL 0x3314368
	0x01D9A40C MOV X0, X21
	0x01D9A410 MOV X1, X22
	0x01D9A414 MOV X2, X31
	0x01D9A418 BL 0x33C0DE4
	0x01D9A41C LDR X1, [X23]
	0x01D9A420 CBZ X0, 0x1D9A444
	0x01D9A424 LDR X8, [X0]
	0x01D9A428 CMP X8, X1
	0x01D9A42C B.NE 0x1D9A4AC
	0x01D9A430 STR X0, [X20 + 0x1D0]
	0x01D9A434 LDR X8, [X0]
	0x01D9A438 CMP X8, X1
	0x01D9A43C B.EQ 0x1D9A448
	0x01D9A440 B 0x1D9A4AC
	0x01D9A444 STR X0, [X20 + 0x1D0]
	0x01D9A448 LDR X22, [X19 + 0xC0]
	0x01D9A44C CBZ X22, 0x1D9A4C4
	0x01D9A450 ADRP X21, 0x235C000
	0x01D9A454 LDR X20, [X22 + 0x1C8]
	0x01D9A458 LDR X21, [X21 + 0xFC8]
	0x01D9A45C MOV X0, X1
	0x01D9A460 BL 0x1C16F10
	0x01D9A464 LDR X2, [X21]
	0x01D9A468 MOV X1, X19
	0x01D9A46C MOV X3, X31
	0x01D9A470 MOV X21, X0
	0x01D9A474 BL 0x3314368
	0x01D9A478 MOV X0, X20
	0x01D9A47C MOV X1, X21
	0x01D9A480 MOV X2, X31
	0x01D9A484 BL 0x33C0DE4
	0x01D9A488 CBZ X0, 0x1D9A4B0
	0x01D9A48C LDR X1, [X23]
	0x01D9A490 LDR X8, [X0]
	0x01D9A494 CMP X8, X1
	0x01D9A498 B.NE 0x1D9A4AC
	0x01D9A49C STR X0, [X22 + 0x1C8]
	0x01D9A4A0 LDR X8, [X0]
	0x01D9A4A4 CMP X8, X1
	0x01D9A4A8 B.EQ 0x1D9A4B4
	0x01D9A4AC BL 0x1C171E0
	0x01D9A4B0 STR X0, [X22 + 0x1C8]
	0x01D9A4B4 LDP X20, X19, [X31 + 0x20]
	0x01D9A4B8 LDP X22, X21, [X31 + 0x10]
	0x01D9A4BC LDP X30, X23, [X31], #0x30
	0x01D9A4C0 RET
	0x01D9A4C4 BL 0x1C16F20
	0x01D9A4C8 STP X30, X23, [X31 - 0x30]!
	0x01D9A4CC STP X22, X21, [X31 + 0x10]
	0x01D9A4D0 STP X20, X19, [X31 + 0x20]
	0x01D9A4D4 ADRP X20, 0x263E000
	0x01D9A4D8 ADRP X21, 0x235C000
	0x01D9A4DC LDRB W8, [X20 + 0xA3A]
	0x01D9A4E0 LDR X21, [X21 + 0xA78]
	0x01D9A4E4 MOV X19, X0
	0x01D9A4E8 TBNZ X8, 0x0, 0x1D9A524
	0x01D9A4EC ADRP X0, 0x235A000
	0x01D9A4F0 LDR X0, [X0 + 0xE70]
	0x01D9A4F4 BL 0x1C16CF4
	0x01D9A4F8 ADRP X0, 0x235C000
	0x01D9A4FC LDR X0, [X0 + 0xFC8]
	0x01D9A500 BL 0x1C16CF4
	0x01D9A504 ADRP X0, 0x235C000
	0x01D9A508 LDR X0, [X0 + 0xFD0]
	0x01D9A50C BL 0x1C16CF4
	0x01D9A510 ADRP X0, 0x235C000
	0x01D9A514 LDR X0, [X0 + 0xA78]
	0x01D9A518 BL 0x1C16CF4
	0x01D9A51C MOVZ W8, 0x1
	0x01D9A520 STRB W8, [X20 + 0xA3A]
	0x01D9A524 LDR X0, [X21]
	0x01D9A528 LDR W8, [X0 + 0xE0]
	0x01D9A52C CBNZ W8, 0x1D9A534

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0x263F000
	010 Move X22, 0x235D000
	011 Move X23, 0x235B000
	012 Move X25, 0x235D000
	013 Move W8, [X24+2612]
	014 Move X22, [X22+3480]
	015 Move X23, [X23+3696]
	016 Move X25, [X25+3920]
	017 Move W21, W2
	018 Move X20, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0x235B000
	025 Move X0, [X0+3696]
	026 Call 0x1C17CF4
	027 Move X0, 0x235D000
	028 Move X0, [X0+3912]
	029 Call 0x1C17CF4
	030 Move X0, 0x235D000
	031 Move X0, [X0+3920]
	032 Call 0x1C17CF4
	033 Move X0, 0x235D000
	034 Move X0, [X0+3480]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X24+2612], W8
	038 And W2, W21, 1
	039 Move X0, X19
	040 Move X1, X20
	041 Move X3, X31
	042 Call NetworkBehaviour.Despawned, X0, X1, X2
	043 Move X8, [X22]
	044 Move X0, [X23]
	045 Move X8, [X8+184]
	046 Move X20, [X8+152]
	047 Call 0x1C17F10
	048 Move X2, [X25]
	049 Move X1, X19
	050 Move X3, X31
	051 Move X21, X0
	052 Call Action..ctor, X0, X1, X2
	053 Move X0, X20
	054 Move X1, X21
	055 Move X2, X31
	056 Call Delegate.Remove, X0, X1
	057 Move X1, [X23]
	058 Compare X0, 0
	059 JumpIfEqual {67}
	060 Move X8, [X0]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X8, [X22]
	063 Move X8, [X8+184]
	064 Move [X8+152], X0
	065 Move X9, [X0]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X8, [X22]
	068 Move X8, [X8+184]
	069 Move [X8+152], X0
	070 Move X24, 0x235D000
	071 Move X20, [X8+120]
	072 Move X24, [X24+3912]
	073 Move X0, X1
	074 Call 0x1C17F10
	075 Move X2, [X24]
	076 Move X1, X19
	077 Move X3, X31
	078 Move X21, X0
	079 Call Action..ctor, X0, X1, X2
	080 Move X0, X20
	081 Move X1, X21
	082 Move X2, X31
	083 Call Delegate.Remove, X0, X1
	084 Move X1, [X23]
	085 Compare X0, 0
	086 JumpIfEqual {94}
	087 Move X8, [X0]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X8, [X22]
	090 Move X8, [X8+184]
	091 Move [X8+120], X0
	092 Move X9, [X0]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X8, [X22]
	095 Move X8, [X8+184]
	096 Move [X8+120], X0
	097 Move X20, [X8+88]
	098 Move X0, X1
	099 Call 0x1C17F10
	100 Move X2, [X24]
	101 Move X1, X19
	102 Move X3, X31
	103 Move X21, X0
	104 Call Action..ctor, X0, X1, X2
	105 Move X0, X20
	106 Move X1, X21
	107 Move X2, X31
	108 Call Delegate.Remove, X0, X1
	109 Move X1, [X23]
	110 Compare X0, 0
	111 JumpIfEqual {119}
	112 Move X8, [X0]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X8, [X22]
	115 Move X8, [X8+184]
	116 Move [X8+88], X0
	117 Move X9, [X0]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X8, [X22]
	120 Move X8, [X8+184]
	121 Move [X8+88], X0
	122 Move X20, [X8+136]
	123 Move X0, X1
	124 Call 0x1C17F10
	125 Move X2, [X25]
	126 Move X1, X19
	127 Move X3, X31
	128 Move X21, X0
	129 Call Action..ctor, X0, X1, X2
	130 Move X0, X20
	131 Move X1, X21
	132 Move X2, X31
	133 Call Delegate.Remove, X0, X1
	134 Move X1, [X23]
	135 Compare X0, 0
	136 JumpIfEqual {144}
	137 Move X8, [X0]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X8, [X22]
	140 Move X8, [X8+184]
	141 Move [X8+136], X0
	142 Move X9, [X0]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X8, [X22]
	145 Move X8, [X8+184]
	146 Move [X8+136], X0
	147 Move X20, [X8+104]
	148 Move X0, X1
	149 Call 0x1C17F10
	150 Move X2, [X24]
	151 Move X1, X19
	152 Move X3, X31
	153 Move X21, X0
	154 Call Action..ctor, X0, X1, X2
	155 Move X0, X20
	156 Move X1, X21
	157 Move X2, X31
	158 Call Delegate.Remove, X0, X1
	159 Move X1, [X23]
	160 Compare X0, 0
	161 JumpIfEqual {169}
	162 Move X8, [X0]
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move X8, [X22]
	165 Move X8, [X8+184]
	166 Move [X8+104], X0
	167 Move X9, [X0]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X8, [X22]
	170 Move X8, [X8+184]
	171 Move [X8+104], X0
	172 Move X20, [X8+72]
	173 Move X0, X1
	174 Call 0x1C17F10
	175 Move X2, [X24]
	176 Move X1, X19
	177 Move X3, X31
	178 Move X21, X0
	179 Call Action..ctor, X0, X1, X2
	180 Move X0, X20
	181 Move X1, X21
	182 Move X2, X31
	183 Call Delegate.Remove, X0, X1
	184 Compare X0, 0
	185 JumpIfEqual {195}
	186 Move X1, [X23]
	187 Move X8, [X0]
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X8, [X22]
	190 Move X8, [X8+184]
	191 Move [X8+72], X0
	192 Move X8, [X0]
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Call 0x1C181E0
	195 Move X8, [X22]
	196 Move X8, [X8+184]
	197 Move [X8+72], X0
	198 Move X20, [X31+48]
	199 Move X19, [X31+56]
	200 Move X22, [X31+32]
	201 Move X21, [X31+40]
	202 Move X24, [X31+16]
	203 Move X23, [X31+24]
	204 Move X30, [X31+64]
	205 Move X25, [X31+72]
	206 Return 

Method: System.Void Awake()

Disassembly:
	0x01D9A530 BL 0x1C16DFC
	0x01D9A534 CBZ X19, 0x1D9A634
	0x01D9A538 LDR W8, [X19 + 0x30]
	0x01D9A53C LDR X23, [X19 + 0xC0]
	0x01D9A540 ORR W8, W8, 0x8
	0x01D9A544 STR W8, [X19 + 0x30]
	0x01D9A548 CBZ X23, 0x1D9A634
	0x01D9A54C ADRP X22, 0x235A000
	0x01D9A550 LDR X22, [X22 + 0xE70]
	0x01D9A554 ADRP X21, 0x235C000
	0x01D9A558 LDR X20, [X23 + 0x1D0]
	0x01D9A55C LDR X0, [X22]
	0x01D9A560 LDR X21, [X21 + 0xFD0]
	0x01D9A564 BL 0x1C16F10
	0x01D9A568 LDR X2, [X21]
	0x01D9A56C MOV X1, X19
	0x01D9A570 MOV X3, X31
	0x01D9A574 MOV X21, X0
	0x01D9A578 BL 0x3314368
	0x01D9A57C MOV X0, X20
	0x01D9A580 MOV X1, X21
	0x01D9A584 MOV X2, X31
	0x01D9A588 BL 0x33C0FDC
	0x01D9A58C LDR X1, [X22]
	0x01D9A590 CBZ X0, 0x1D9A5B4
	0x01D9A594 LDR X8, [X0]
	0x01D9A598 CMP X8, X1
	0x01D9A59C B.NE 0x1D9A61C
	0x01D9A5A0 STR X0, [X23 + 0x1D0]
	0x01D9A5A4 LDR X8, [X0]
	0x01D9A5A8 CMP X8, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x263F000
	007 Move X22, 0x235D000
	008 Move X20, 0x235D000
	009 Move W8, [X21+2613]
	010 Move X22, [X22+3928]
	011 Move X20, [X20+3936]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x235D000
	018 Move X0, [X0+3936]
	019 Call 0x1C17CF4
	020 Move X0, 0x235D000
	021 Move X0, [X0+3928]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2613], W8
	025 Move X1, [X22]
	026 Move X0, X19
	027 Call 0x21A4894, X0
	028 Move [X19+136], X0
	029 Move X1, [X20]
	030 Move X0, X19
	031 Call 0x21A4F50, X0
	032 Move [X19+144], X0
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return 

Method: System.Void TestGrab()

Disassembly:
	0x01D9A5AC B.EQ 0x1D9A5B8

ISIL:
No ISIL was generated
Method: System.Boolean IsByBackAttachment()

Disassembly:
	0x01D9A640 MOV X19, X0
	0x01D9A644 BL 0x1E73F88
	0x01D9A648 MOV X0, X19
	0x01D9A64C BL 0x1D9A664
	0x01D9A650 MOV X0, X19
	0x01D9A654 BL 0x1D9A6E8
	0x01D9A658 MOV X0, X19
	0x01D9A65C LDP X30, X19, [X31], #0x10
	0x01D9A660 B 0x1D9A7D4
	0x01D9A664 STR D8, [X31 - 0x30]!
	0x01D9A668 STP X30, X21, [X31 + 0x10]
	0x01D9A66C STP X20, X19, [X31 + 0x20]
	0x01D9A670 MOV X19, X0
	0x01D9A674 MOV X0, X31
	0x01D9A678 BL 0x3C3C6C4
	0x01D9A67C LDR X8, [X19 + 0x38]
	0x01D9A680 CBZ X8, 0x1D9A6E4
	0x01D9A684 LDR X8, [X8 + 0x50]
	0x01D9A688 MOV V8.16B, V0.16B
	0x01D9A68C CBZ X8, 0x1D9A698
	0x01D9A690 LDR W21, [X8 + 0x48]
	0x01D9A694 B 0x1D9A69C
	0x01D9A698 MOV W21, W31
	0x01D9A69C MOV X0, X19
	0x01D9A6A0 BL 0x1D9A11C
	0x01D9A6A4 LDR X8, [X19 + 0x38]
	0x01D9A6A8 CBZ X8, 0x1D9A6E4
	0x01D9A6AC MOV W20, W0
	0x01D9A6B0 MOV X0, X8
	0x01D9A6B4 MOV X1, X31
	0x01D9A6B8 BL 0x1E9E9D0
	0x01D9A6BC SUB W8, W21, W20
	0x01D9A6C0 SCVTF S0, W8
	0x01D9A6C4 SCVTF S1, W0
	0x01D9A6C8 FDIV S0, S0, S1
	0x01D9A6CC FSUB S0, S8, S0
	0x01D9A6D0 STR S0, [X19 + 0xCC]
	0x01D9A6D4 LDP X20, X19, [X31 + 0x20]
	0x01D9A6D8 LDP X30, X21, [X31 + 0x10]
	0x01D9A6DC LDR V8, [X31], #0x30
	0x01D9A6E0 RET
	0x01D9A6E4 BL 0x1C16F20
	0x01D9A6E8 STR X30, [X31 - 0x20]!
	0x01D9A6EC STP X20, X19, [X31 + 0x10]
	0x01D9A6F0 MOV X19, X0
	0x01D9A6F4 BL 0x1D9AA80
	0x01D9A6F8 MOV X0, X19
	0x01D9A6FC BL 0x1D9A29C
	0x01D9A700 LDR X8, [X19 + 0x90]
	0x01D9A704 CBZ X8, 0x1D9A7D0
	0x01D9A708 MOV W20, W0
	0x01D9A70C MOV X0, X8
	0x01D9A710 MOV X1, X31
	0x01D9A714 BL 0x3BFCC80
	0x01D9A718 AND W8, W0, 0x1
	0x01D9A71C AND W9, W20, 0x1
	0x01D9A720 CMP W9, W8
	0x01D9A724 B.EQ 0x1D9A758
	0x01D9A728 MOV X0, X19
	0x01D9A72C BL 0x1D9A29C
	0x01D9A730 LDR X8, [X19 + 0x90]
	0x01D9A734 CBZ X8, 0x1D9A7D0
	0x01D9A738 TBZ X0, 0x0, 0x1D9A74C
	0x01D9A73C MOV X0, X8
	0x01D9A740 MOV X1, X31
	0x01D9A744 BL 0x3BFCAC0

ISIL:
	001 Move [X31-48], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x263F000
	008 Move W8, [X20+2614]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x235C000
	015 Move X0, [X0+1992]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2614], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call Component.get_transform, X0
	022 Compare X0, 0
	023 JumpIfEqual {79}
	024 Move X19, 0x235C000
	025 Move X19, [X19+1992]
	026 Move X1, X31
	027 Call Transform.get_position, X0
	028 Move X0, [X19]
	029 Move V8, V0
	030 Move V9, V1
	031 Move V10, V2
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X20, 0x263F000
	037 Move W8, [X20+2141]
	038 Compare W8, 0
	039 JumpIfNotEqual {45}
	040 Move X0, 0x235C000
	041 Move X0, [X0+1992]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X20+2141], W8
	045 Move X0, [X19]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {51}
	049 Call 0x1C17DFC
	050 Move X0, [X19]
	051 Move X8, [X0+184]
	052 Move X0, [X8]
	053 Compare X0, 0
	054 JumpIfEqual {79}
	055 Move X1, X31
	056 Call PlayerController.get_backAttachAnchor, X0
	057 Compare X0, 0
	058 JumpIfEqual {79}
	059 Move X1, X31
	060 Call Transform.get_position, X0
	061 Subtract S0, S8, S0
	062 Subtract S1, S9, S1
	063 Subtract S2, S10, S2
	064 Multiply S0, S0, S0
	065 Multiply S1, S1, S1
	066 Multiply S2, S2, S2
	067 Add S0, S0, S1
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X30, [X31+24]
	071 Move D9, [X31+8]
	072 Move D8, [X31+16]
	073 Add S0, S2, S0
	074 Move S1, 0.25
	075 NotImplemented "Instruction FCMP not yet implemented."
	076 NotImplemented "Instruction CSET not yet implemented."
	077 Move V10, [X31+48]
	078 Return X0
	079 Call 0x1C17F20

Method: System.Boolean ReattachToAnchorIfFree(AnimalCompany.AttachedItemAnchor anchor)

Disassembly:
	0x01D9A748 B 0x1D9A758
	0x01D9A74C MOV X0, X8
	0x01D9A750 MOV X1, X31
	0x01D9A754 BL 0x3BFCC44
	0x01D9A758 MOV X0, X19
	0x01D9A75C BL 0x1D9A29C
	0x01D9A760 LDR X8, [X19 + 0x98]
	0x01D9A764 CBZ X8, 0x1D9A7D0
	0x01D9A768 MOV W20, W0
	0x01D9A76C MOV X0, X8
	0x01D9A770 MOV X1, X31
	0x01D9A774 BL 0x3BFCC80
	0x01D9A778 AND W8, W0, 0x1
	0x01D9A77C AND W9, W20, 0x1
	0x01D9A780 CMP W9, W8
	0x01D9A784 B.EQ 0x1D9A7B0
	0x01D9A788 MOV X0, X19
	0x01D9A78C BL 0x1D9A29C
	0x01D9A790 LDR X8, [X19 + 0x98]
	0x01D9A794 CBZ X8, 0x1D9A7D0
	0x01D9A798 TBZ X0, 0x0, 0x1D9A7BC
	0x01D9A79C LDP X20, X19, [X31 + 0x10]
	0x01D9A7A0 MOV X0, X8
	0x01D9A7A4 MOV X1, X31
	0x01D9A7A8 LDR X30, [X31], #0x20
	0x01D9A7AC B 0x3BFCAC0
	0x01D9A7B0 LDP X20, X19, [X31 + 0x10]
	0x01D9A7B4 LDR X30, [X31], #0x20
	0x01D9A7B8 RET
	0x01D9A7BC LDP X20, X19, [X31 + 0x10]
	0x01D9A7C0 MOV X0, X8
	0x01D9A7C4 MOV X1, X31
	0x01D9A7C8 LDR X30, [X31], #0x20
	0x01D9A7CC B 0x3BFCC44
	0x01D9A7D0 BL 0x1C16F20
	0x01D9A7D4 STP D11, D10, [X31 - 0x40]!
	0x01D9A7D8 STP D9, D8, [X31 + 0x10]
	0x01D9A7DC STP X30, X21, [X31 + 0x20]
	0x01D9A7E0 STP X20, X19, [X31 + 0x30]
	0x01D9A7E4 MOV X21, X0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {50}
	008 Move X19, X1
	009 Move X21, X0
	010 Move X0, X1
	011 Move X1, X31
	012 Call AttachedItemAnchor.get_grabbedItem, X0
	013 Move [X31+8], X0
	014 Add X0, X31, 8
	015 Move X1, X31
	016 Call NetworkBehaviourId.get_IsValid, X0
	017 Move W20, W0
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {42}
	022 Move X0, [X21+136]
	023 Compare X0, 0
	024 JumpIfEqual {50}
	025 Move X1, X31
	026 Call AttachedItemAnchor.get_grabbedItem, X0
	027 Move X8, [X21+136]
	028 Compare X8, 0
	029 JumpIfEqual {50}
	030 Move X21, X0
	031 Move X0, X8
	032 Move X1, X31
	033 Call AttachedItemAnchor.UnattachItem, X0
	034 Move W2, 1
	035 Move X0, X19
	036 Move X1, X21
	037 Move W3, W31
	038 Move X4, X31
	039 Move X5, X31
	040 Move X6, X31
	041 Call AttachedItemAnchor.RPC_TryGrabItem, X0, X1, X2, X3, X4
	042 NotImplemented "Instruction ORN not yet implemented."
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X30, [X31+16]
	046 Move X21, [X31+24]
	047 And W0, W8, 1
	048 Add X31, X31, 48
	049 Return X0
	050 Call 0x1C17F20

Method: System.Boolean CheckAndAttach()

Disassembly:
	0x01D9A7E8 LDR X0, [X0 + 0xA0]
	0x01D9A7EC CBZ X0, 0x1D9A858
	0x01D9A7F0 MOV X1, X31
	0x01D9A7F4 BL 0x3C1341C
	0x01D9A7F8 LDR W19, [X21 + 0xE4]
	0x01D9A7FC LDP S8, S9, [X21 + 0xD4]
	0x01D9A800 LDP S10, S11, [X21 + 0xDC]
	0x01D9A804 MOV X20, X0
	0x01D9A808 MOV X0, X21
	0x01D9A80C BL 0x1D9A1DC
	0x01D9A810 FMOV S1, -0.5
	0x01D9A814 FADD S0, S0, S1
	0x01D9A818 FMOV S1, 20
	0x01D9A81C FMUL S0, S0, S1
	0x01D9A820 BL 0x3EB1B90
	0x01D9A824 CBZ X20, 0x1D9A858
	0x01D9A828 FMUL S3, S11, S0
	0x01D9A82C FMUL S2, S10, S0
	0x01D9A830 FMUL S1, S9, S0
	0x01D9A834 FMUL S0, S8, S0
	0x01D9A838 MOV X0, X20
	0x01D9A83C MOV W1, W19
	0x01D9A840 LDP X20, X19, [X31 + 0x30]
	0x01D9A844 LDP X30, X21, [X31 + 0x20]
	0x01D9A848 LDP D9, D8, [X31 + 0x10]
	0x01D9A84C MOV X2, X31
	0x01D9A850 LDP D11, D10, [X31], #0x40
	0x01D9A854 B 0x3C14988
	0x01D9A858 BL 0x1C16F20
	0x01D9A85C STR D8, [X31 - 0x20]!
	0x01D9A860 STR X30, [X31 + 0x8]
	0x01D9A864 STP X20, X19, [X31 + 0x10]
	0x01D9A868 MOV X1, X31
	0x01D9A86C MOV X19, X0
	0x01D9A870 BL 0x1E73D04
	0x01D9A874 MOV X0, X19
	0x01D9A878 BL 0x1D9A29C
	0x01D9A87C MOV W20, W0
	0x01D9A880 MOV X0, X19
	0x01D9A884 BL 0x1D9A1DC
	0x01D9A888 MOV V8.16B, V0.16B
	0x01D9A88C TBZ X20, 0x0, 0x1D9A920
	0x01D9A890 LDR X0, [X19 + 0x38]
	0x01D9A894 CBZ X0, 0x1D9A990
	0x01D9A898 MOV X1, X31
	0x01D9A89C BL 0x1E9E550
	0x01D9A8A0 ADRP X8, 0xFFFFFFFFFED50000
	0x01D9A8A4 LDR V1, [X8 + 0x2CC]
	0x01D9A8A8 FMOV S2, 1
	0x01D9A8AC MOV X0, X19
	0x01D9A8B0 FMUL S0, S0, S1
	0x01D9A8B4 FADD S0, S8, S0
	0x01D9A8B8 FMIN S1, S0, S2
	0x01D9A8BC FCMP S0, 0x0
	0x01D9A8C0 FMOV S0, W31
	0x01D9A8C4 FCSEL S0, S1, S0, PL
	0x01D9A8C8 BL 0x1D9A23C
	0x01D9A8CC MOV X0, X19
	0x01D9A8D0 BL 0x1D9A1DC
	0x01D9A8D4 FCMP S0, 0x0
	0x01D9A8D8 B.HI 0x1D9A980
	0x01D9A8DC MOV X0, X19
	0x01D9A8E0 MOV W1, W31
	0x01D9A8E4 BL 0x1D9A304
	0x01D9A8E8 LDR X20, [X19 + 0xA8]
	0x01D9A8EC MOV X0, X19
	0x01D9A8F0 MOV X1, X31
	0x01D9A8F4 BL 0x3C32E90
	0x01D9A8F8 CBZ X0, 0x1D9A990
	0x01D9A8FC MOV X1, X31
	0x01D9A900 BL 0x3C3F58C
	0x01D9A904 MOV X0, X20
	0x01D9A908 LDP X20, X19, [X31 + 0x10]
	0x01D9A90C LDR X30, [X31 + 0x8]
	0x01D9A910 FMOV S3, 0.5
	0x01D9A914 MOV X1, X31
	0x01D9A918 LDR V8, [X31], #0x20
	0x01D9A91C B 0x1DC15C4
	0x01D9A920 FMOV S0, 1
	0x01D9A924 FCMP S8, S0
	0x01D9A928 B.PL 0x1D9A980
	0x01D9A92C MOV X0, X19
	0x01D9A930 BL 0x1D9A1DC
	0x01D9A934 LDR X0, [X19 + 0x38]
	0x01D9A938 CBZ X0, 0x1D9A990
	0x01D9A93C MOV X1, X31
	0x01D9A940 MOV V8.16B, V0.16B
	0x01D9A944 BL 0x1E9E550
	0x01D9A948 ADRP X8, 0xFFFFFFFFFED50000
	0x01D9A94C LDR V1, [X8 + 0x35C]
	0x01D9A950 MOV X0, X19
	0x01D9A954 LDP X20, X19, [X31 + 0x10]
	0x01D9A958 LDR X30, [X31 + 0x8]
	0x01D9A95C FMUL S0, S0, S1
	0x01D9A960 FMOV S2, 1
	0x01D9A964 FADD S0, S8, S0
	0x01D9A968 FMIN S1, S0, S2
	0x01D9A96C FCMP S0, 0x0
	0x01D9A970 FMOV S0, W31
	0x01D9A974 FCSEL S0, S1, S0, PL
	0x01D9A978 LDR V8, [X31], #0x20
	0x01D9A97C B 0x1D9A23C
	0x01D9A980 LDP X20, X19, [X31 + 0x10]
	0x01D9A984 LDR X30, [X31 + 0x8]
	0x01D9A988 LDR V8, [X31], #0x20
	0x01D9A98C RET
	0x01D9A990 BL 0x1C16F20
	0x01D9A994 STR X30, [X31 - 0x20]!
	0x01D9A998 STP X20, X19, [X31 + 0x10]
	0x01D9A99C MOV X19, X0
	0x01D9A9A0 BL 0x1D9A29C
	0x01D9A9A4 TBZ X0, 0x0, 0x1D9A9BC
	0x01D9A9A8 MOV X0, X19
	0x01D9A9AC LDP X20, X19, [X31 + 0x10]
	0x01D9A9B0 MOV W1, W31
	0x01D9A9B4 LDR X30, [X31], #0x20
	0x01D9A9B8 B 0x1D9A304
	0x01D9A9BC MOV X0, X19
	0x01D9A9C0 BL 0x1D9A1DC
	0x01D9A9C4 FMOV S1, 0.25
	0x01D9A9C8 FCMP S0, S1
	0x01D9A9CC B.LE 0x1D9A9F4
	0x01D9A9D0 MOVZ W1, 0x1
	0x01D9A9D4 MOV X0, X19
	0x01D9A9D8 BL 0x1D9A304
	0x01D9A9DC LDR X8, [X19 + 0x38]
	0x01D9A9E0 CBZ X8, 0x1D9AA3C
	0x01D9A9E4 LDR X8, [X8 + 0x50]
	0x01D9A9E8 CBZ X8, 0x1D9AA28
	0x01D9A9EC LDR W1, [X8 + 0x48]
	0x01D9A9F0 B 0x1D9AA2C
	0x01D9A9F4 LDR X20, [X19 + 0xB0]
	0x01D9A9F8 MOV X0, X19
	0x01D9A9FC MOV X1, X31
	0x01D9AA00 BL 0x3C32E90
	0x01D9AA04 CBZ X0, 0x1D9AA3C
	0x01D9AA08 MOV X1, X31
	0x01D9AA0C BL 0x3C3F58C
	0x01D9AA10 MOV X0, X20
	0x01D9AA14 LDP X20, X19, [X31 + 0x10]
	0x01D9AA18 FMOV S3, 0.5
	0x01D9AA1C MOV X1, X31
	0x01D9AA20 LDR X30, [X31], #0x20
	0x01D9AA24 B 0x1DC15C4
	0x01D9AA28 MOV W1, W31
	0x01D9AA2C MOV X0, X19
	0x01D9AA30 LDP X20, X19, [X31 + 0x10]
	0x01D9AA34 LDR X30, [X31], #0x20
	0x01D9AA38 B 0x1D9A17C
	0x01D9AA3C BL 0x1C16F20
	0x01D9AA40 STP X30, X19, [X31 - 0x10]!
	0x01D9AA44 MOV X19, X0
	0x01D9AA48 BL 0x1D9A29C
	0x01D9AA4C TBZ X0, 0x0, 0x1D9AA64
	0x01D9AA50 LDR X0, [X19 + 0xC0]
	0x01D9AA54 CBZ X0, 0x1D9AA7C
	0x01D9AA58 MOV X1, X31
	0x01D9AA5C BL 0x1D8D0A8
	0x01D9AA60 TBZ X0, 0x0, 0x1D9AA6C
	0x01D9AA64 LDP X30, X19, [X31], #0x10
	0x01D9AA68 RET
	0x01D9AA6C MOV X0, X19
	0x01D9AA70 MOV W1, W31
	0x01D9AA74 LDP X30, X19, [X31], #0x10
	0x01D9AA78 B 0x1D9A304
	0x01D9AA7C BL 0x1C16F20
	0x01D9AA80 STR D10, [X31 - 0x60]!
	0x01D9AA84 STP D9, D8, [X31 + 0x10]
	0x01D9AA88 STP X30, X25, [X31 + 0x20]
	0x01D9AA8C STP X24, X23, [X31 + 0x30]
	0x01D9AA90 STP X22, X21, [X31 + 0x40]
	0x01D9AA94 STP X20, X19, [X31 + 0x50]
	0x01D9AA98 ADRP X20, 0x263E000
	0x01D9AA9C LDRB W8, [X20 + 0xA3B]
	0x01D9AAA0 MOV X19, X0
	0x01D9AAA4 TBNZ X8, 0x0, 0x1D9AAC8
	0x01D9AAA8 ADRP X0, 0x235C000
	0x01D9AAAC LDR X0, [X0 + 0xFD8]
	0x01D9AAB0 BL 0x1C16CF4
	0x01D9AAB4 ADRP X0, 0x235C000
	0x01D9AAB8 LDR X0, [X0 + 0xFE0]
	0x01D9AABC BL 0x1C16CF4
	0x01D9AAC0 MOVZ W8, 0x1
	0x01D9AAC4 STRB W8, [X20 + 0xA3B]
	0x01D9AAC8 MOV X0, X19
	0x01D9AACC BL 0x1D9A29C
	0x01D9AAD0 TBZ X0, 0x0, 0x1D9AC20
	0x01D9AAD4 MOV X0, X31
	0x01D9AAD8 BL 0x3C3C6C4
	0x01D9AADC LDR X22, [X19 + 0x88]
	0x01D9AAE0 CBZ X22, 0x1D9AD10
	0x01D9AAE4 LDR V1, [X19 + 0xCC]
	0x01D9AAE8 ADRP X23, 0x235C000
	0x01D9AAEC ADRP X21, 0x2359000
	0x01D9AAF0 LDR X23, [X23 + 0xFE0]
	0x01D9AAF4 LDR X21, [X21 + 0x5A0]
	0x01D9AAF8 FMOV S2, 3
	0x01D9AAFC FSUB S0, S0, S1
	0x01D9AB00 FMOV S3, -1
	0x01D9AB04 FMUL S0, S0, S2
	0x01D9AB08 MOV W20, W31
	0x01D9AB0C FMOV S9, W31
	0x01D9AB10 ADRP X24, 0x263E000
	0x01D9AB14 FADD S10, S0, S3
	0x01D9AB18 MOVZ W25, 0x1
	0x01D9AB1C LDR W8, [X22 + 0x18]
	0x01D9AB20 CMP W20, W8
	0x01D9AB24 B.GE 0x1D9AD14
	0x01D9AB28 SCVTF S0, W20
	0x01D9AB2C SCVTF S1, W8
	0x01D9AB30 FDIV S0, S0, S1
	0x01D9AB34 FADD S8, S10, S0
	0x01D9AB38 FMOV S1, 1
	0x01D9AB3C MOV V0.16B, V8.16B
	0x01D9AB40 BL 0x3EB1BA0
	0x01D9AB44 LDR X2, [X23]
	0x01D9AB48 FCMP S8, 0x0
	0x01D9AB4C MOV X0, X22
	0x01D9AB50 MOV W1, W20
	0x01D9AB54 FCSEL S8, S0, S9, GT
	0x01D9AB58 BL 0x301BCCC
	0x01D9AB5C CBZ X0, 0x1D9AD10
	0x01D9AB60 MOV X1, X31
	0x01D9AB64 BL 0x3C32E90
	0x01D9AB68 LDRB W8, [X24 + 0xABD]
	0x01D9AB6C MOV X22, X0
	0x01D9AB70 CBNZ W8, 0x1D9AB80
	0x01D9AB74 MOV X0, X21
	0x01D9AB78 BL 0x1C16CF4
	0x01D9AB7C STRB W25, [X24 + 0xABD]
	0x01D9AB80 CBZ X22, 0x1D9AD10
	0x01D9AB84 LDR X8, [X21]
	0x01D9AB88 MOV X0, X22
	0x01D9AB8C MOV X1, X31
	0x01D9AB90 LDR X8, [X8 + 0xB8]
	0x01D9AB94 LDP S1, S0, [X8 + 0x28]
	0x01D9AB98 LDR V3, [X8 + 0x24]
	0x01D9AB9C FMUL S2, S8, S0
	0x01D9ABA0 FMUL S1, S8, S1
	0x01D9ABA4 FMUL S0, S8, S3
	0x01D9ABA8 BL 0x3C3EC04
	0x01D9ABAC LDR X0, [X19 + 0x88]
	0x01D9ABB0 CBZ X0, 0x1D9AD10
	0x01D9ABB4 LDR X2, [X23]
	0x01D9ABB8 MOV W1, W20
	0x01D9ABBC BL 0x301BCCC
	0x01D9ABC0 CBZ X0, 0x1D9AD10
	0x01D9ABC4 MOV X1, X31
	0x01D9ABC8 BL 0x3C1341C
	0x01D9ABCC CBZ X0, 0x1D9AD10
	0x01D9ABD0 LDR W1, [X19 + 0xD0]
	0x01D9ABD4 MOV V0.16B, V8.16B
	0x01D9ABD8 MOV X2, X31
	0x01D9ABDC BL 0x3C15CD8
	0x01D9ABE0 LDR X0, [X19 + 0x88]
	0x01D9ABE4 CBZ X0, 0x1D9AD10
	0x01D9ABE8 LDR X2, [X23]
	0x01D9ABEC MOV W1, W20
	0x01D9ABF0 BL 0x301BCCC
	0x01D9ABF4 CBZ X0, 0x1D9AD10
	0x01D9ABF8 MOV X1, X31
	0x01D9ABFC BL 0x3C32ECC

ISIL:
	001 Move [X31-112], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0x263F000
	015 Move W8, [X20+2615]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {41}
	021 Move X0, 0x235D000
	022 Move X0, [X0+2672]
	023 Call 0x1C17CF4
	024 Move X0, 0x235D000
	025 Move X0, [X0+3928]
	026 Call 0x1C17CF4
	027 Move X0, 0x235A000
	028 Move X0, [X0+1496]
	029 Call 0x1C17CF4
	030 Move X0, 0x235A000
	031 Move X0, [X0+1432]
	032 Call 0x1C17CF4
	033 Move X0, 0x235A000
	034 Move X0, [X0+1528]
	035 Call 0x1C17CF4
	036 Move X0, 0x235C000
	037 Move X0, [X0+1992]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X20+2615], W8
	041 Move [X31+8], X31
	042 Move X0, [X19+64]
	043 Compare X0, 0
	044 JumpIfEqual {286}
	045 Move W8, [X0+96]
	046 Move TEMP, X8
	047 And TEMP, TEMP, 2
	048 Compare TEMP, 2
	049 JumpIfEqual {286}
	050 Move X1, X31
	051 Call NetworkObject.get_HasInputAuthority, X0
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {286}
	056 Move X8, [X19+136]
	057 Compare X8, 0
	058 JumpIfEqual {329}
	059 Move X24, 0x235A000
	060 Move X24, [X24+1432]
	061 Move X20, [X8+192]
	062 Move X0, [X24]
	063 Move W9, [X0+224]
	064 Compare W9, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X0, X20
	068 Move X1, X31
	069 Move X2, X31
	070 Call Object.op_Inequality, X0, X1
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {286}
	075 Move X8, [X19+136]
	076 Compare X8, 0
	077 JumpIfEqual {329}
	078 Move X8, [X8+192]
	079 Compare X8, 0
	080 JumpIfEqual {329}
	081 Move W8, [X8+140]
	082 Compare W8, 0
	083 JumpIfEqual {145}
	084 Move X0, X19
	085 Move X1, X31
	086 Call Component.get_transform, X0
	087 Compare X0, 0
	088 JumpIfEqual {329}
	089 Move X1, X31
	090 Call Transform.get_position, X0
	091 Move X20, 0x235C000
	092 Move X20, [X20+1992]
	093 Move X0, [X20]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Move X21, 0x263F000
	099 Move W8, [X21+2141]
	100 Compare W8, 0
	101 JumpIfNotEqual {107}
	102 Move X0, 0x235C000
	103 Move X0, [X0+1992]
	104 Call 0x1C17CF4
	105 Move W8, 1
	106 Move [X21+2141], W8
	107 Move X0, [X20]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {113}
	111 Call 0x1C17DFC
	112 Move X0, [X20]
	113 Move X8, [X0+184]
	114 Move X0, [X8]
	115 Compare X0, 0
	116 JumpIfEqual {329}
	117 Move X1, X31
	118 Call PlayerController.get_backAttachAnchor, X0
	119 Compare X0, 0
	120 JumpIfEqual {329}
	121 Move X1, X31
	122 Call Transform.get_position, X0
	123 Move X0, X19
	124 Call HandInteractor.IsByBackAttachment, X0
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {145}
	129 Move X8, [X19+144]
	130 Compare X8, 0
	131 JumpIfEqual {329}
	132 Move X0, [X8+416]
	133 Compare X0, 0
	134 JumpIfEqual {329}
	135 Move X1, X31
	136 Call AttachedItemAnchor.get_grabbedItem, X0
	137 Move [X31+8], X0
	138 Add X0, X31, 8
	139 Move X1, X31
	140 Call NetworkBehaviourId.get_IsValid, X0
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {302}
	145 Move X8, [X19+136]
	146 Compare X8, 0
	147 JumpIfEqual {329}
	148 Move X0, [X8+192]
	149 Compare X0, 0
	150 JumpIfEqual {329}
	151 Move X1, X31
	152 Call GrabbableItem.get_allowAttachToItem, X0
	153 Move TEMP, X0
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfNotEqual {286}
	157 Move X0, X19
	158 Move X1, X31
	159 Call Component.get_transform, X0
	160 Compare X0, 0
	161 JumpIfEqual {329}
	162 Move X1, X31
	163 Call Transform.get_position, X0
	164 Move X20, 0x235A000
	165 Move X20, [X20+1496]
	166 Move V8, V0
	167 Move V9, V1
	168 Move V10, V2
	169 Move X0, [X20]
	170 Move W8, [X0+224]
	171 Compare W8, 0
	172 JumpIfNotEqual {175}
	173 Call 0x1C17DFC
	174 Move X0, [X20]
	175 Move X8, [X0+184]
	176 Move X1, X31
	177 Move W0, [X8+16]
	178 Call LayerMask.op_Implicit, X0
	179 Move X8, [X20]
	180 Move W20, W0
	181 Move X1, X31
	182 Move X8, [X8+184]
	183 Move W8, [X8+20]
	184 Move X0, X8
	185 Call LayerMask.op_Implicit, X0
	186 Move X8, 0x235A000
	187 Move X8, [X8+1528]
	188 Move W21, W0
	189 Move X8, [X8]
	190 Move W9, [X8+224]
	191 Compare W9, 0
	192 JumpIfNotEqual {195}
	193 Move X0, X8
	194 Call 0x1C17DFC
	195 Move X8, -19591168
	196 Move V3, [X8+860]
	197 Or W0, W21, W20
	198 Move W1, 2
	199 Move V0, V8
	200 Move V1, V9
	201 Move V2, V10
	202 Move X2, X31
	203 Call Physics.OverlapSphere, X0, V0, X1, X2
	204 Compare X0, 0
	205 JumpIfEqual {329}
	206 Move W8, [X0+24]
	207 Move X20, X0
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Move X26, 0x235D000
	210 Move X27, 0x235D000
	211 Move X26, [X26+3928]
	212 Move X27, [X27+2672]
	213 Move W25, W31
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Add X8, X20, W25
	216 Move X0, [X8+32]
	217 Compare X0, 0
	218 JumpIfEqual {329}
	219 Move X1, [X26]
	220 Call 0x21A4894, X0
	221 Move X8, [X24]
	222 Move X21, X0
	223 Move W9, [X8+224]
	224 Compare W9, 0
	225 JumpIfNotEqual {228}
	226 Move X0, X8
	227 Call 0x1C17DFC
	228 Move X0, X21
	229 Move X1, X31
	230 Move X2, X31
	231 Call Object.op_Inequality, X0, X1
	232 Move TEMP, X0
	233 And TEMP, TEMP, 1
	234 Compare TEMP, 1
	235 JumpIfNotEqual {282}
	236 Move X0, [X24]
	237 Move X22, [X19+136]
	238 Move W8, [X0+224]
	239 Compare W8, 0
	240 JumpIfNotEqual {242}
	241 Call 0x1C17DFC
	242 Move X0, X21
	243 Move X1, X22
	244 Move X2, X31
	245 Call Object.op_Inequality, X0, X1
	246 Move TEMP, X0
	247 And TEMP, TEMP, 1
	248 Compare TEMP, 1
	249 JumpIfNotEqual {282}
	250 Compare X21, 0
	251 JumpIfEqual {329}
	252 Move W8, [X21+128]
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Move X1, [X27]
	255 Move X0, X21
	256 Call 0x21A4F50, X0
	257 Move X8, [X19+136]
	258 Compare X8, 0
	259 JumpIfEqual {329}
	260 Move X22, X0
	261 Move X0, [X24]
	262 Move X23, [X8+192]
	263 Move W9, [X0+224]
	264 Compare W9, 0
	265 JumpIfNotEqual {267}
	266 Call 0x1C17DFC
	267 Move X0, X22
	268 Move X1, X23
	269 Move X2, X31
	270 Call Object.op_Equality, X0, X1
	271 Move TEMP, X0
	272 And TEMP, TEMP, 1
	273 Compare TEMP, 1
	274 JumpIfEqual {282}
	275 Move X0, X19
	276 Move X1, X21
	277 Call HandInteractor.ReattachToAnchorIfFree, X0, X1
	278 Move TEMP, X0
	279 And TEMP, TEMP, 1
	280 Compare TEMP, 1
	281 JumpIfEqual {328}
	282 Move W8, [X20+24]
	283 Add W25, W25, 1
	284 Move W21, W31
	285 NotImplemented "Instruction CMP not yet implemented."
	286 Move W21, W31
	287 Move W0, W21
	288 Move X20, [X31+96]
	289 Move X19, [X31+104]
	290 Move X22, [X31+80]
	291 Move X21, [X31+88]
	292 Move X24, [X31+64]
	293 Move X23, [X31+72]
	294 Move X26, [X31+48]
	295 Move X25, [X31+56]
	296 Move X30, [X31+32]
	297 Move X27, [X31+40]
	298 Move D9, [X31+16]
	299 Move D8, [X31+24]
	300 Move V10, [X31+112]
	301 Return X0
	302 Move X0, [X19+136]
	303 Compare X0, 0
	304 JumpIfEqual {329}
	305 Move X1, X31
	306 Call AttachedItemAnchor.get_grabbedItem, X0
	307 Move X8, [X19+136]
	308 Compare X8, 0
	309 JumpIfEqual {329}
	310 Move X20, X0
	311 Move X0, X8
	312 Move X1, X31
	313 Call AttachedItemAnchor.UnattachItem, X0
	314 Move X8, [X19+144]
	315 Compare X8, 0
	316 JumpIfEqual {329}
	317 Move X0, [X8+416]
	318 Compare X0, 0
	319 JumpIfEqual {329}
	320 Move W2, 1
	321 Move X1, X20
	322 Move W3, W31
	323 Move X4, X31
	324 Move X5, X31
	325 Move X6, X31
	326 Move W21, 1
	327 Call AttachedItemAnchor.RPC_TryGrabItem, X0, X1, X2, X3, X4
	328 Move W21, 1
	329 Call 0x1C17F20
	330 Call 0x1C17F28

Method: System.Void HandleGrabButtonPressed()

Disassembly:
	0x01D9A5B0 B 0x1D9A61C
	0x01D9A5B4 STR X0, [X23 + 0x1D0]
	0x01D9A5B8 LDR X23, [X19 + 0xC0]
	0x01D9A5BC CBZ X23, 0x1D9A634
	0x01D9A5C0 ADRP X21, 0x235C000
	0x01D9A5C4 LDR X20, [X23 + 0x1C8]
	0x01D9A5C8 LDR X21, [X21 + 0xFC8]
	0x01D9A5CC MOV X0, X1
	0x01D9A5D0 BL 0x1C16F10
	0x01D9A5D4 LDR X2, [X21]
	0x01D9A5D8 MOV X1, X19
	0x01D9A5DC MOV X3, X31
	0x01D9A5E0 MOV X21, X0
	0x01D9A5E4 BL 0x3314368
	0x01D9A5E8 MOV X0, X20
	0x01D9A5EC MOV X1, X21
	0x01D9A5F0 MOV X2, X31
	0x01D9A5F4 BL 0x33C0FDC
	0x01D9A5F8 CBZ X0, 0x1D9A620
	0x01D9A5FC LDR X1, [X22]
	0x01D9A600 LDR X8, [X0]
	0x01D9A604 CMP X8, X1
	0x01D9A608 B.NE 0x1D9A61C
	0x01D9A60C STR X0, [X23 + 0x1C8]
	0x01D9A610 LDR X8, [X0]
	0x01D9A614 CMP X8, X1
	0x01D9A618 B.EQ 0x1D9A624
	0x01D9A61C BL 0x1C171E0
	0x01D9A620 STR X0, [X23 + 0x1C8]
	0x01D9A624 LDP X20, X19, [X31 + 0x20]
	0x01D9A628 LDP X22, X21, [X31 + 0x10]
	0x01D9A62C LDP X30, X23, [X31], #0x30
	0x01D9A630 RET
	0x01D9A634 BL 0x1C16F20
	0x01D9A638 STP X30, X19, [X31 - 0x10]!
	0x01D9A63C MOV X1, X31

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+136]
	006 Compare X0, 0
	007 JumpIfEqual {46}
	008 Move X1, X31
	009 Call AttachedItemAnchor.get_grabbedItem, X0
	010 Move [X31+8], X0
	011 Add X0, X31, 8
	012 Move X1, X31
	013 Call NetworkBehaviourId.get_IsValid, X0
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {40}
	018 Move X0, X19
	019 Call HandInteractor.CheckAndAttach, X0
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {42}
	024 Move X8, -19591168
	025 Move X9, -19591168
	026 Move W0, [X19+128]
	027 Move V0, [X8+1100]
	028 Move V1, [X9+712]
	029 Move X1, X31
	030 Call XRInputManager.SendHapticImpulse, X0, V0, V1
	031 Move X0, [X19+136]
	032 Compare X0, 0
	033 JumpIfEqual {46}
	034 Move S0, [X0+168]
	035 Move S1, [X0+172]
	036 Move V2, [X0+176]
	037 Move W1, W31
	038 Move X2, X31
	039 Call AttachedItemAnchor.DropWithThrowVelocity, X0, X1, X2
	040 Move X0, X19
	041 Call HandInteractor.CheckAndTryGrab, X0
	042 Move X30, [X31+16]
	043 Move X19, [X31+24]
	044 Add X31, X31, 32
	045 Return 
	046 Call 0x1C17F20

Method: System.Void HandleAltGrabButtonPressed()

Disassembly:
	0x01D9AF30 LDR X21, [X8 + 0xC8]
	0x01D9AF34 LDR W9, [X0 + 0xE0]
	0x01D9AF38 CBNZ W9, 0x1D9AF40
	0x01D9AF3C BL 0x1C16DFC
	0x01D9AF40 MOV X0, X21
	0x01D9AF44 MOV X1, X31
	0x01D9AF48 MOV X2, X31
	0x01D9AF4C BL 0x3C354F8
	0x01D9AF50 TBZ X0, 0x0, 0x1D9AFAC
	0x01D9AF54 LDR X8, [X19 + 0xC0]
	0x01D9AF58 CBZ X8, 0x1D9B154
	0x01D9AF5C LDR X8, [X8 + 0x150]
	0x01D9AF60 CBZ X8, 0x1D9B154
	0x01D9AF64 LDR X8, [X8 + 0xC8]
	0x01D9AF68 CBZ X8, 0x1D9B154
	0x01D9AF6C LDR X0, [X22]
	0x01D9AF70 LDR X21, [X8 + 0x150]
	0x01D9AF74 LDR W9, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+136]
	006 Compare X0, 0
	007 JumpIfEqual {24}
	008 Move X1, X31
	009 Call AttachedItemAnchor.get_grabbedItem, X0
	010 Move [X31+8], X0
	011 Add X0, X31, 8
	012 Move X1, X31
	013 Call NetworkBehaviourId.get_IsValid, X0
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {20}
	018 Move X0, X19
	019 Call HandInteractor.CheckAndTryGrab, X0
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 Add X31, X31, 32
	023 Return 
	024 Call 0x1C17F20

Method: System.Void CheckAndTryGrab()

Disassembly:
	0x01D9AC00 CBZ X0, 0x1D9AD10
	0x01D9AC04 MOVZ W1, 0x1
	0x01D9AC08 MOV X2, X31
	0x01D9AC0C BL 0x3C357B4
	0x01D9AC10 LDR X22, [X19 + 0x88]
	0x01D9AC14 ADD W20, W20, 0x1
	0x01D9AC18 CBNZ X22, 0x1D9AB1C
	0x01D9AC1C B 0x1D9AD10
	0x01D9AC20 LDR X0, [X19 + 0x88]
	0x01D9AC24 CBZ X0, 0x1D9AD10
	0x01D9AC28 ADRP X23, 0x235C000
	0x01D9AC2C ADRP X21, 0x2359000
	0x01D9AC30 LDR X23, [X23 + 0xFE0]
	0x01D9AC34 LDR X21, [X21 + 0x5A0]
	0x01D9AC38 MOV W20, W31
	0x01D9AC3C ADRP X24, 0x263E000
	0x01D9AC40 MOVZ W25, 0x1
	0x01D9AC44 LDR W8, [X0 + 0x18]
	0x01D9AC48 CMP W20, W8
	0x01D9AC4C B.GE 0x1D9AD14
	0x01D9AC50 LDR X2, [X23]
	0x01D9AC54 MOV W1, W20
	0x01D9AC58 BL 0x301BCCC
	0x01D9AC5C CBZ X0, 0x1D9AD10
	0x01D9AC60 MOV X1, X31
	0x01D9AC64 BL 0x3C32E90
	0x01D9AC68 LDRB W8, [X24 + 0x783]
	0x01D9AC6C MOV X22, X0
	0x01D9AC70 CBNZ W8, 0x1D9AC80
	0x01D9AC74 MOV X0, X21
	0x01D9AC78 BL 0x1C16CF4
	0x01D9AC7C STRB W25, [X24 + 0x783]
	0x01D9AC80 CBZ X22, 0x1D9AD10
	0x01D9AC84 LDR X8, [X21]
	0x01D9AC88 MOV X0, X22
	0x01D9AC8C MOV X1, X31
	0x01D9AC90 LDR X8, [X8 + 0xB8]
	0x01D9AC94 LDP S1, S2, [X8 + 0x4]
	0x01D9AC98 LDR V0, [X8]
	0x01D9AC9C BL 0x3C3EC04
	0x01D9ACA0 LDR X0, [X19 + 0x88]
	0x01D9ACA4 CBZ X0, 0x1D9AD10
	0x01D9ACA8 LDR X2, [X23]
	0x01D9ACAC MOV W1, W20
	0x01D9ACB0 BL 0x301BCCC
	0x01D9ACB4 CBZ X0, 0x1D9AD10
	0x01D9ACB8 MOV X1, X31
	0x01D9ACBC BL 0x3C1341C
	0x01D9ACC0 CBZ X0, 0x1D9AD10
	0x01D9ACC4 LDR W1, [X19 + 0xD0]
	0x01D9ACC8 FMOV S0, W31
	0x01D9ACCC MOV X2, X31
	0x01D9ACD0 BL 0x3C15CD8
	0x01D9ACD4 LDR X0, [X19 + 0x88]
	0x01D9ACD8 CBZ X0, 0x1D9AD10
	0x01D9ACDC LDR X2, [X23]
	0x01D9ACE0 MOV W1, W20
	0x01D9ACE4 BL 0x301BCCC
	0x01D9ACE8 CBZ X0, 0x1D9AD10
	0x01D9ACEC MOV X1, X31
	0x01D9ACF0 BL 0x3C32ECC
	0x01D9ACF4 CBZ X0, 0x1D9AD10
	0x01D9ACF8 MOV W1, W31
	0x01D9ACFC MOV X2, X31
	0x01D9AD00 BL 0x3C357B4
	0x01D9AD04 LDR X0, [X19 + 0x88]
	0x01D9AD08 ADD W20, W20, 0x1
	0x01D9AD0C CBNZ X0, 0x1D9AC44
	0x01D9AD10 BL 0x1C16F20
	0x01D9AD14 LDP X20, X19, [X31 + 0x50]
	0x01D9AD18 LDP X22, X21, [X31 + 0x40]
	0x01D9AD1C LDP X24, X23, [X31 + 0x30]
	0x01D9AD20 LDP X30, X25, [X31 + 0x20]
	0x01D9AD24 LDP D9, D8, [X31 + 0x10]
	0x01D9AD28 LDR V10, [X31], #0x60
	0x01D9AD2C RET
	0x01D9AD30 STR D10, [X31 - 0x30]!
	0x01D9AD34 STP D9, D8, [X31 + 0x8]
	0x01D9AD38 STR X30, [X31 + 0x18]
	0x01D9AD3C STP X20, X19, [X31 + 0x20]
	0x01D9AD40 MOV X19, X0
	0x01D9AD44 BL 0x1D9A29C
	0x01D9AD48 TBZ X0, 0x0, 0x1D9AE0C
	0x01D9AD4C MOV X0, X19
	0x01D9AD50 BL 0x1D9AA80
	0x01D9AD54 LDR X8, [X19 + 0xC0]
	0x01D9AD58 CBZ X8, 0x1D9AE20
	0x01D9AD5C LDR X0, [X8 + 0x168]
	0x01D9AD60 CBZ X0, 0x1D9AE20
	0x01D9AD64 LDR X19, [X19 + 0x90]
	0x01D9AD68 MOV X1, X31
	0x01D9AD6C BL 0x3C8E868
	0x01D9AD70 ADRP X20, 0x263E000
	0x01D9AD74 LDRB W8, [X20 + 0x784]
	0x01D9AD78 MOV V8.16B, V0.16B
	0x01D9AD7C MOV V9.16B, V1.16B
	0x01D9AD80 MOV V10.16B, V2.16B
	0x01D9AD84 CBNZ W8, 0x1D9AD9C
	0x01D9AD88 ADRP X0, 0x2359000
	0x01D9AD8C LDR X0, [X0 + 0x5A8]
	0x01D9AD90 BL 0x1C16CF4
	0x01D9AD94 MOVZ W8, 0x1
	0x01D9AD98 STRB W8, [X20 + 0x784]
	0x01D9AD9C ADRP X8, 0x2359000
	0x01D9ADA0 LDR X8, [X8 + 0x5A8]
	0x01D9ADA4 LDR X0, [X8]
	0x01D9ADA8 LDR W8, [X0 + 0xE0]
	0x01D9ADAC CBNZ W8, 0x1D9ADB4
	0x01D9ADB0 BL 0x1C16DFC
	0x01D9ADB4 CBZ X19, 0x1D9AE20
	0x01D9ADB8 FMUL S0, S8, S8
	0x01D9ADBC FMUL S1, S9, S9
	0x01D9ADC0 FMUL S2, S10, S10
	0x01D9ADC4 FADD S0, S0, S1
	0x01D9ADC8 ADRP X8, 0xFFFFFFFFFED50000
	0x01D9ADCC FADD S0, S2, S0
	0x01D9ADD0 LDR V2, [X8 + 0x35C]
	0x01D9ADD4 FMOV S1, 10
	0x01D9ADD8 FSQRT S0, S0
	0x01D9ADDC FDIV S0, S0, S1
	0x01D9ADE0 FMOV S1, 1
	0x01D9ADE4 MOV X0, X19
	0x01D9ADE8 LDP X20, X19, [X31 + 0x20]
	0x01D9ADEC LDR X30, [X31 + 0x18]
	0x01D9ADF0 LDP D9, D8, [X31 + 0x8]
	0x01D9ADF4 FMIN S0, S0, S1
	0x01D9ADF8 FMUL S0, S0, S2
	0x01D9ADFC FADD S0, S0, S2
	0x01D9AE00 MOV X1, X31
	0x01D9AE04 LDR V10, [X31], #0x30
	0x01D9AE08 B 0x3BFC8DC
	0x01D9AE0C LDP X20, X19, [X31 + 0x20]
	0x01D9AE10 LDR X30, [X31 + 0x18]
	0x01D9AE14 LDP D9, D8, [X31 + 0x8]
	0x01D9AE18 LDR V10, [X31], #0x30
	0x01D9AE1C RET
	0x01D9AE20 BL 0x1C16F20
	0x01D9AE24 STP X30, X19, [X31 - 0x10]!
	0x01D9AE28 MOV X19, X0
	0x01D9AE2C BL 0x1D9A29C
	0x01D9AE30 TBZ X0, 0x0, 0x1D9AE5C
	0x01D9AE34 LDR X0, [X19 + 0x40]
	0x01D9AE38 CBZ X0, 0x1D9AE5C
	0x01D9AE3C LDRB W8, [X0 + 0x60]
	0x01D9AE40 TBNZ X8, 0x1, 0x1D9AE5C
	0x01D9AE44 MOV X1, X31
	0x01D9AE48 BL 0x1E93668
	0x01D9AE4C TBZ X0, 0x0, 0x1D9AE5C
	0x01D9AE50 MOV X0, X19
	0x01D9AE54 LDP X30, X19, [X31], #0x10
	0x01D9AE58 B 0x1D9AE64
	0x01D9AE5C LDP X30, X19, [X31], #0x10
	0x01D9AE60 RET
	0x01D9AE64 STR X30, [X31 - 0x40]!
	0x01D9AE68 STP X24, X23, [X31 + 0x10]
	0x01D9AE6C STP X22, X21, [X31 + 0x20]
	0x01D9AE70 STP X20, X19, [X31 + 0x30]
	0x01D9AE74 ADRP X20, 0x263E000
	0x01D9AE78 LDRB W8, [X20 + 0xA3C]
	0x01D9AE7C MOV X19, X0
	0x01D9AE80 TBNZ X8, 0x0, 0x1D9AEA4
	0x01D9AE84 ADRP X0, 0x2359000
	0x01D9AE88 LDR X0, [X0 + 0x598]
	0x01D9AE8C BL 0x1C16CF4
	0x01D9AE90 ADRP X0, 0x235B000
	0x01D9AE94 LDR X0, [X0 + 0x7C8]
	0x01D9AE98 BL 0x1C16CF4
	0x01D9AE9C MOVZ W8, 0x1
	0x01D9AEA0 STRB W8, [X20 + 0xA3C]
	0x01D9AEA4 LDR X0, [X19 + 0xC0]
	0x01D9AEA8 CBZ X0, 0x1D9B154
	0x01D9AEAC MOV X1, X31
	0x01D9AEB0 BL 0x1D8EEF0
	0x01D9AEB4 TBZ X0, 0x0, 0x1D9B140
	0x01D9AEB8 MOV X0, X19
	0x01D9AEBC BL 0x1D9A29C
	0x01D9AEC0 TBZ X0, 0x0, 0x1D9B140
	0x01D9AEC4 LDR X0, [X19 + 0xC0]
	0x01D9AEC8 CBZ X0, 0x1D9B154
	0x01D9AECC MOV X1, X31
	0x01D9AED0 BL 0x1D89D0C
	0x01D9AED4 TBZ X0, 0x0, 0x1D9B140
	0x01D9AED8 LDR X20, [X19 + 0xC0]
	0x01D9AEDC CBZ X20, 0x1D9B154
	0x01D9AEE0 ADRP X22, 0x2359000
	0x01D9AEE4 LDR X22, [X22 + 0x598]
	0x01D9AEE8 LDR X21, [X20 + 0x150]
	0x01D9AEEC LDR X0, [X22]
	0x01D9AEF0 LDR W8, [X0 + 0xE0]
	0x01D9AEF4 CBNZ W8, 0x1D9AEFC
	0x01D9AEF8 BL 0x1C16DFC
	0x01D9AEFC MOV X0, X21
	0x01D9AF00 MOV X1, X31
	0x01D9AF04 MOV X2, X31
	0x01D9AF08 BL 0x3C354F8
	0x01D9AF0C TBZ X0, 0x0, 0x1D9B140
	0x01D9AF10 LDR X8, [X19 + 0xC0]
	0x01D9AF14 CBZ X8, 0x1D9B154
	0x01D9AF18 LDR X8, [X8 + 0x150]
	0x01D9AF1C CBZ X8, 0x1D9B154
	0x01D9AF20 LDR W9, [X8 + 0x80]
	0x01D9AF24 CMP W9, 0x3
	0x01D9AF28 B.NE 0x1D9AFAC
	0x01D9AF2C LDR X0, [X22]

ISIL:
	001 Move [X31-96], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0x263F000
	013 Move W8, [X20+2616]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0x235D000
	020 Move X0, [X0+3944]
	021 Call 0x1C17CF4
	022 Move X0, 0x235D000
	023 Move X0, [X0+3952]
	024 Call 0x1C17CF4
	025 Move X0, 0x235D000
	026 Move X0, [X0+3000]
	027 Call 0x1C17CF4
	028 Move X0, 0x235D000
	029 Move X0, [X0+3960]
	030 Call 0x1C17CF4
	031 Move X0, 0x235A000
	032 Move X0, [X0+1432]
	033 Call 0x1C17CF4
	034 Move X0, 0x235A000
	035 Move X0, [X0+1528]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+2616], W8
	039 Move X0, X19
	040 Move [X31+8], X31
	041 Call HandInteractor.IsByBackAttachment, X0
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {92}
	046 Move X8, [X19+144]
	047 Compare X8, 0
	048 JumpIfEqual {240}
	049 Move X0, [X8+416]
	050 Compare X0, 0
	051 JumpIfEqual {240}
	052 Move X1, X31
	053 Call AttachedItemAnchor.get_grabbedItem, X0
	054 Move [X31+8], X0
	055 Add X0, X31, 8
	056 Move X1, X31
	057 Call NetworkBehaviourId.get_IsValid, X0
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {92}
	062 Move X8, [X19+144]
	063 Compare X8, 0
	064 JumpIfEqual {240}
	065 Move X0, [X8+416]
	066 Compare X0, 0
	067 JumpIfEqual {240}
	068 Move X1, X31
	069 Call AttachedItemAnchor.get_grabbedItem, X0
	070 Move X8, [X19+144]
	071 Compare X8, 0
	072 JumpIfEqual {240}
	073 Move X20, X0
	074 Move X0, [X8+416]
	075 Compare X0, 0
	076 JumpIfEqual {240}
	077 Move X1, X31
	078 Call AttachedItemAnchor.UnattachItem, X0
	079 Move X8, -19591168
	080 Move X9, -19591168
	081 Move W0, [X19+128]
	082 Move V0, [X8+1100]
	083 Move V1, [X9+712]
	084 Move X1, X31
	085 Call XRInputManager.SendHapticImpulse, X0, V0, V1
	086 Move X0, [X19+136]
	087 Compare X0, 0
	088 JumpIfEqual {240}
	089 Move W2, 1
	090 Move W3, 1
	091 Move X1, X20
	092 Move X0, X19
	093 Move X1, X31
	094 Call Component.get_transform, X0
	095 Compare X0, 0
	096 JumpIfEqual {240}
	097 Move X20, 0x235A000
	098 Move X23, 0x235D000
	099 Move X21, 0x235D000
	100 Move X22, 0x235D000
	101 Move X20, [X20+1528]
	102 Move X23, [X23+3952]
	103 Move X21, [X21+3960]
	104 Move X22, [X22+3944]
	105 Move X1, X31
	106 Call Transform.get_position, X0
	107 Move W0, [X19+132]
	108 Move X1, X31
	109 Move V8, V0
	110 Move V9, V1
	111 Move V10, V2
	112 Call LayerMask.op_Implicit, X0
	113 Move X8, [X20]
	114 Move W20, W0
	115 Move W9, [X8+224]
	116 Compare W9, 0
	117 JumpIfNotEqual {120}
	118 Move X0, X8
	119 Call 0x1C17DFC
	120 Move S3, 0.5
	121 Move W1, 1
	122 Move V0, V8
	123 Move V1, V9
	124 Move V2, V10
	125 Move W0, W20
	126 Move X2, X31
	127 Call Physics.OverlapSphere, X0, V0, X1, X2
	128 Move X8, [X23]
	129 Move X20, X0
	130 Move X0, X8
	131 Call 0x1C17F10
	132 Move X2, [X21]
	133 Move X1, X19
	134 Move X3, X31
	135 Move X21, X0
	136 Call Comparison`1<Object>..ctor, X0, X1, X2
	137 Move X2, [X22]
	138 Move X0, X20
	139 Move X1, X21
	140 Call 0x2158D70, X0, X1
	141 Compare X20, 0
	142 JumpIfEqual {240}
	143 Move W8, [X20+24]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X24, 0x235A000
	146 Move X25, 0x235D000
	147 Move X24, [X24+1432]
	148 Move X25, [X25+3000]
	149 Move W23, W31
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Add X8, X20, W23
	152 Move X21, [X8+32]
	153 Compare X21, 0
	154 JumpIfEqual {240}
	155 Move X0, X21
	156 Move X1, X31
	157 Call Collider.get_attachedRigidbody, X0
	158 Move X8, [X24]
	159 Move X22, X0
	160 Move W9, [X8+224]
	161 Compare W9, 0
	162 JumpIfNotEqual {165}
	163 Move X0, X8
	164 Call 0x1C17DFC
	165 Move X0, X22
	166 Move X1, X31
	167 Move X2, X31
	168 Call Object.op_Inequality, X0, X1
	169 Move TEMP, X0
	170 And TEMP, TEMP, 1
	171 Compare TEMP, 1
	172 JumpIfNotEqual {179}
	173 Move X0, X21
	174 Move X1, X31
	175 Call Collider.get_attachedRigidbody, X0
	176 Compare X0, 0
	177 JumpIfEqual {240}
	178 Move X21, X0
	179 Move X1, [X25]
	180 Move X0, X21
	181 Call 0x21A4894, X0
	182 Move X8, [X24]
	183 Move X21, X0
	184 Move W9, [X8+224]
	185 Compare W9, 0
	186 JumpIfNotEqual {189}
	187 Move X0, X8
	188 Call 0x1C17DFC
	189 Move X0, X21
	190 Move X1, X31
	191 Move X2, X31
	192 Call Object.op_Inequality, X0, X1
	193 Move TEMP, X0
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfEqual {200}
	197 Move W8, [X20+24]
	198 Add W23, W23, 1
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Move X8, -19591168
	201 Move X9, -19591168
	202 Move W0, [X19+128]
	203 Move V0, [X8+1100]
	204 Move V1, [X9+712]
	205 Move X1, X31
	206 Call XRInputManager.SendHapticImpulse, X0, V0, V1
	207 Compare X21, 0
	208 JumpIfEqual {240}
	209 Move X8, [X21+64]
	210 Move X0, [X19+136]
	211 Compare X8, 0
	212 JumpIfEqual {217}
	213 Move X8, [X8+32]
	214 Compare X8, 0
	215 JumpIfEqual {217}
	216 Move W1, [X8]
	217 Move X1, X31
	218 Compare X0, 0
	219 JumpIfEqual {240}
	220 Move W8, [X21+104]
	221 Move W3, 1
	222 Move W2, W31
	223 NotImplemented "Instruction BFM not yet implemented."
	224 Move X4, X31
	225 Move X5, X31
	226 Move X6, X31
	227 Call AttachedItemAnchor.RPC_TryGrabItem, X0, X1, X2, X3, X4
	228 Move X20, [X31+80]
	229 Move X19, [X31+88]
	230 Move X22, [X31+64]
	231 Move X21, [X31+72]
	232 Move X24, [X31+48]
	233 Move X23, [X31+56]
	234 Move X30, [X31+32]
	235 Move X25, [X31+40]
	236 Move D9, [X31+16]
	237 Move D8, [X31+24]
	238 Move V10, [X31+96]
	239 Return 
	240 Call 0x1C17F20
	241 Call 0x1C17F28

Method: System.Void .ctor()

Disassembly:
	0x01D9AF78 CBNZ W9, 0x1D9AF80
	0x01D9AF7C BL 0x1C16DFC

ISIL:
	001 Move X1, X31
	002 Call NetworkBehaviour..ctor, X0
	003 Return 

Method: System.Int32 <CheckAndTryGrab>b__17_0(UnityEngine.Collider a, UnityEngine.Collider b)

Disassembly:
	0x01D9AF80 MOV X0, X21
	0x01D9AF84 MOV X1, X31
	0x01D9AF88 MOV X2, X31
	0x01D9AF8C BL 0x3C354F8
	0x01D9AF90 TBZ X0, 0x0, 0x1D9AFAC
	0x01D9AF94 LDR X8, [X19 + 0xC0]
	0x01D9AF98 CBZ X8, 0x1D9B154
	0x01D9AF9C LDR X8, [X8 + 0x150]
	0x01D9AFA0 CBZ X8, 0x1D9B154
	0x01D9AFA4 LDR X20, [X8 + 0xC8]
	0x01D9AFA8 CBZ X20, 0x1D9B154
	0x01D9AFAC LDR X8, [X20 + 0x150]
	0x01D9AFB0 CBZ X8, 0x1D9B154
	0x01D9AFB4 LDR X0, [X8 + 0x40]
	0x01D9AFB8 CBZ X0, 0x1D9B140
	0x01D9AFBC LDRB W8, [X0 + 0x60]
	0x01D9AFC0 TBNZ X8, 0x1, 0x1D9B140
	0x01D9AFC4 MOV X1, X31
	0x01D9AFC8 BL 0x1E93668
	0x01D9AFCC TBZ X0, 0x0, 0x1D9B140
	0x01D9AFD0 ADRP X23, 0x235B000
	0x01D9AFD4 LDR X23, [X23 + 0x7C8]
	0x01D9AFD8 LDR X0, [X23]
	0x01D9AFDC LDR W8, [X0 + 0xE0]
	0x01D9AFE0 CBNZ W8, 0x1D9AFE8
	0x01D9AFE4 BL 0x1C16DFC
	0x01D9AFE8 ADRP X24, 0x263E000
	0x01D9AFEC LDRB W8, [X24 + 0x85D]
	0x01D9AFF0 CBNZ W8, 0x1D9B008
	0x01D9AFF4 ADRP X0, 0x235B000
	0x01D9AFF8 LDR X0, [X0 + 0x7C8]
	0x01D9AFFC BL 0x1C16CF4
	0x01D9B000 MOVZ W8, 0x1
	0x01D9B004 STRB W8, [X24 + 0x85D]
	0x01D9B008 LDR X0, [X23]
	0x01D9B00C LDR W8, [X0 + 0xE0]
	0x01D9B010 CBNZ W8, 0x1D9B01C
	0x01D9B014 BL 0x1C16DFC
	0x01D9B018 LDR X0, [X23]
	0x01D9B01C LDR X8, [X22]
	0x01D9B020 LDR X9, [X0 + 0xB8]
	0x01D9B024 LDR W10, [X8 + 0xE0]
	0x01D9B028 LDR X21, [X9]
	0x01D9B02C CBNZ W10, 0x1D9B038
	0x01D9B030 MOV X0, X8
	0x01D9B034 BL 0x1C16DFC
	0x01D9B038 MOV X0, X21
	0x01D9B03C MOV X1, X31
	0x01D9B040 MOV X2, X31
	0x01D9B044 BL 0x3C354F8
	0x01D9B048 TBZ X0, 0x0, 0x1D9B140
	0x01D9B04C LDR X0, [X23]
	0x01D9B050 LDR W8, [X0 + 0xE0]
	0x01D9B054 CBNZ W8, 0x1D9B05C
	0x01D9B058 BL 0x1C16DFC
	0x01D9B05C LDRB W8, [X24 + 0x85D]
	0x01D9B060 CBNZ W8, 0x1D9B078
	0x01D9B064 ADRP X0, 0x235A000
	0x01D9B068 LDR X0, [X0 + 0x7C8]
	0x01D9B06C BL 0x1C16CF4
	0x01D9B070 MOVZ W8, 0x1
	0x01D9B074 STRB W8, [X24 + 0x85D]
	0x01D9B078 LDR X0, [X23]
	0x01D9B07C LDR W8, [X0 + 0xE0]
	0x01D9B080 CBNZ W8, 0x1D9B08C
	0x01D9B084 BL 0x1C16DFC
	0x01D9B088 LDR X0, [X23]
	0x01D9B08C LDR X8, [X0 + 0xB8]
	0x01D9B090 LDR X8, [X8]
	0x01D9B094 CBZ X8, 0x1D9B154
	0x01D9B098 LDR X0, [X22]
	0x01D9B09C LDR X21, [X8 + 0x30]
	0x01D9B0A0 LDR W9, [X0 + 0xE0]
	0x01D9B0A4 CBNZ W9, 0x1D9B0AC
	0x01D9B0A8 BL 0x1C16DFC
	0x01D9B0AC MOV X0, X21
	0x01D9B0B0 MOV X1, X31
	0x01D9B0B4 MOV X2, X31
	0x01D9B0B8 BL 0x3C354F8
	0x01D9B0BC TBZ X0, 0x0, 0x1D9B140
	0x01D9B0C0 LDR X0, [X23]
	0x01D9B0C4 LDR W8, [X0 + 0xE0]
	0x01D9B0C8 CBNZ W8, 0x1D9B0D0
	0x01D9B0CC BL 0x1C16DFC
	0x01D9B0D0 LDRB W8, [X24 + 0x85D]
	0x01D9B0D4 CBNZ W8, 0x1D9B0EC
	0x01D9B0D8 ADRP X0, 0x235A000
	0x01D9B0DC LDR X0, [X0 + 0x7C8]
	0x01D9B0E0 BL 0x1C16CF4
	0x01D9B0E4 MOVZ W8, 0x1
	0x01D9B0E8 STRB W8, [X24 + 0x85D]
	0x01D9B0EC LDR X0, [X23]
	0x01D9B0F0 LDR W8, [X0 + 0xE0]
	0x01D9B0F4 CBNZ W8, 0x1D9B100
	0x01D9B0F8 BL 0x1C16DFC
	0x01D9B0FC LDR X0, [X23]
	0x01D9B100 LDR X8, [X0 + 0xB8]
	0x01D9B104 LDR X8, [X8]
	0x01D9B108 CBZ X8, 0x1D9B154
	0x01D9B10C LDR X0, [X8 + 0x30]
	0x01D9B110 CBZ X0, 0x1D9B154

ISIL:
	001 Move [X31-96], D13
	002 Move [X31-88], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Compare X1, 0
	013 JumpIfEqual {121}
	014 Move X19, X0
	015 Move X0, X1
	016 Move X1, X31
	017 Move X20, X2
	018 Call Component.get_transform, X0
	019 Compare X0, 0
	020 JumpIfEqual {121}
	021 Move X1, X31
	022 Call Transform.get_position, X0
	023 Move X0, X19
	024 Move X1, X31
	025 Move V8, V0
	026 Move V9, V1
	027 Move V10, V2
	028 Call Component.get_transform, X0
	029 Compare X0, 0
	030 JumpIfEqual {121}
	031 Move X1, X31
	032 Call Transform.get_position, X0
	033 Move X21, 0x263F000
	034 Move W8, [X21+2140]
	035 Move V11, V0
	036 Move V12, V1
	037 Move V13, V2
	038 Compare W8, 0
	039 JumpIfNotEqual {45}
	040 Move X0, 0x235A000
	041 Move X0, [X0+1448]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X21+2140], W8
	045 Move X22, 0x2359000
	046 Move X22, [X22+1448]
	047 Subtract S11, S8, S11
	048 Subtract S9, S9, S12
	049 Subtract S8, S10, S13
	050 Move X0, [X22]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Multiply S0, S11, S11
	056 Multiply S1, S9, S9
	057 Add S0, S0, S1
	058 Multiply S1, S8, S8
	059 Add S0, S1, S0
	060 NotImplemented "Instruction FSQRT not yet implemented."
	061 Move [X31+60], S0
	062 Compare X20, 0
	063 JumpIfEqual {121}
	064 Move X0, X20
	065 Move X1, X31
	066 Call Component.get_transform, X0
	067 Compare X0, 0
	068 JumpIfEqual {121}
	069 Move X1, X31
	070 Call Transform.get_position, X0
	071 Move X0, X19
	072 Move X1, X31
	073 Move V8, V0
	074 Move V9, V1
	075 Move V10, V2
	076 Call Component.get_transform, X0
	077 Compare X0, 0
	078 JumpIfEqual {121}
	079 Move X1, X31
	080 Call Transform.get_position, X0
	081 Move W8, [X21+2140]
	082 Move V11, V0
	083 Move V12, V1
	084 Move V13, V2
	085 Compare W8, 0
	086 JumpIfNotEqual {92}
	087 Move X0, 0x2359000
	088 Move X0, [X0+1448]
	089 Call 0x1C17CF4
	090 Move W8, 1
	091 Move [X21+2140], W8
	092 Move X0, [X22]
	093 Subtract S11, S8, S11
	094 Subtract S9, S9, S12
	095 Subtract S8, S10, S13
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Multiply S0, S11, S11
	101 Multiply S1, S9, S9
	102 Add S0, S0, S1
	103 Multiply S1, S8, S8
	104 Add S0, S1, S0
	105 NotImplemented "Instruction FSQRT not yet implemented."
	106 Add X0, X31, 60
	107 Move X1, X31
	108 Call Single.CompareTo, X0, V0
	109 Move X20, [X31+80]
	110 Move X19, [X31+88]
	111 Move X22, [X31+64]
	112 Move X21, [X31+72]
	113 Move X30, [X31+48]
	114 Move D9, [X31+32]
	115 Move D8, [X31+40]
	116 Move D11, [X31+16]
	117 Move D10, [X31+24]
	118 Move D13, [X31+96]
	119 Move D12, [X31+104]
	120 Return X0
	121 Call 0x1C17F20

Method: System.Void CopyBackingFieldsToState(System.Boolean param_0)

Disassembly:
	0x01D9B114 MOV X1, X31

ISIL:
	001 Return 

Method: System.Void CopyStateToBackingFields()

Disassembly:
	0x01D9B118 BL 0x3C8E868

ISIL:
	001 Return 

