Type: AnimalCompany.AnimalLabScaleOnEnable

Method: System.Void OnEnable()

Disassembly:
	0x01D5EE88 CBZ X9, 0x1D5F144
	0x01D5EE8C LDR X8, [X19 + 0x78]
	0x01D5EE90 CBZ X8, 0x1D5F144
	0x01D5EE94 LDR X0, [X9 + 0x60]
	0x01D5EE98 CBZ X0, 0x1D5F144
	0x01D5EE9C LDR X9, [X0]
	0x01D5EEA0 LDR X1, [X8 + 0x60]
	0x01D5EEA4 ADRP X22, 0x2395000
	0x01D5EEA8 LDR X8, [X9 + 0x3F8]
	0x01D5EEAC LDR X2, [X9 + 0x400]
	0x01D5EEB0 LDR X22, [X22 + 0x648]
	0x01D5EEB4 BLR X8
	0x01D5EEB8 ADRP X23, 0x267A000
	0x01D5EEBC CBZ X20, 0x1D5EF60
	0x01D5EEC0 LDR X0, [X22]
	0x01D5EEC4 LDR W8, [X0 + 0xE0]
	0x01D5EEC8 CBNZ W8, 0x1D5EED0
	0x01D5EECC BL 0x1C16DFC
	0x01D5EED0 LDRB W8, [X23 + 0x787]
	0x01D5EED4 CBNZ W8, 0x1D5EEEC
	0x01D5EED8 ADRP X0, 0x2395000
	0x01D5EEDC LDR X0, [X0 + 0x648]
	0x01D5EEE0 BL 0x1C16CF4
	0x01D5EEE4 MOVZ W8, 0x1
	0x01D5EEE8 STRB W8, [X23 + 0x787]
	0x01D5EEEC LDR X0, [X22]
	0x01D5EEF0 LDR W8, [X0 + 0xE0]
	0x01D5EEF4 CBNZ W8, 0x1D5EF00
	0x01D5EEF8 BL 0x1C16DFC
	0x01D5EEFC LDR X0, [X22]
	0x01D5EF00 LDR X8, [X0 + 0xB8]
	0x01D5EF04 LDR X8, [X8]
	0x01D5EF08 CBZ X8, 0x1D5F144
	0x01D5EF0C LDR X9, [X8 + 0xC8]
	0x01D5EF10 CBZ X9, 0x1D5F144
	0x01D5EF14 LDR X8, [X20 + 0x48]
	0x01D5EF18 CBZ X8, 0x1D5F144
	0x01D5EF1C LDR X0, [X9 + 0x50]
	0x01D5EF20 CBZ X0, 0x1D5F144
	0x01D5EF24 ADRP X9, 0x2397000
	0x01D5EF28 LDR X9, [X9 + 0x548]
	0x01D5EF2C LDR X1, [X8 + 0x50]
	0x01D5EF30 LDR X2, [X9]
	0x01D5EF34 BL 0x26098A0
	0x01D5EF38 TBZ X0, 0x0, 0x1D5EF60
	0x01D5EF3C LDR X8, [X20 + 0x50]
	0x01D5EF40 CBZ X8, 0x1D5F144
	0x01D5EF44 LDR X0, [X8 + 0x50]
	0x01D5EF48 CBZ X0, 0x1D5F144
	0x01D5EF4C MOV X1, X31
	0x01D5EF50 BL 0x322B760
	0x01D5EF54 MOV X21, X0
	0x01D5EF58 MOVZ W24, 0x1
	0x01D5EF5C B 0x1D5EF70
	0x01D5EF60 ADRP X8, 0x2397000
	0x01D5EF64 LDR X8, [X8 + 0x648]
	0x01D5EF68 MOV W24, W31
	0x01D5EF6C LDR X21, [X8]
	0x01D5EF70 LDR X25, [X19 + 0x38]
	0x01D5EF74 CBZ X25, 0x1D5F144
	0x01D5EF78 LDR W8, [X25 + 0x18]
	0x01D5EF7C CMP W8, 0x1
	0x01D5EF80 B.LT 0x1D5EFC0
	0x01D5EF84 MOV W26, W31
	0x01D5EF88 CMP W26, W8
	0x01D5EF8C B.CS 0x1D5F148
	0x01D5EF90 ADD X8, X25, W26, 0x3, SXTW
	0x01D5EF94 LDR X0, [X8 + 0x20]
	0x01D5EF98 CBZ X0, 0x1D5F144
	0x01D5EF9C LDR X8, [X0]
	0x01D5EFA0 MOV X1, X21
	0x01D5EFA4 LDR X9, [X8 + 0x558]
	0x01D5EFA8 LDR X2, [X8 + 0x560]
	0x01D5EFAC BLR X9
	0x01D5EFB0 LDR W8, [X25 + 0x18]
	0x01D5EFB4 ADD W26, W26, 0x1
	0x01D5EFB8 CMP W26, W8
	0x01D5EFBC B.LT 0x1D5EF88
	0x01D5EFC0 CBZ W24, 0x1D5F12C
	0x01D5EFC4 LDR X0, [X22]
	0x01D5EFC8 LDR W8, [X0 + 0xE0]
	0x01D5EFCC CBNZ W8, 0x1D5EFD4
	0x01D5EFD0 BL 0x1C16DFC
	0x01D5EFD4 LDRB W8, [X23 + 0x787]
	0x01D5EFD8 CBNZ W8, 0x1D5EFF0
	0x01D5EFDC ADRP X0, 0x2395000
	0x01D5EFE0 LDR X0, [X0 + 0x648]
	0x01D5EFE4 BL 0x1C16CF4
	0x01D5EFE8 MOVZ W8, 0x1
	0x01D5EFEC STRB W8, [X23 + 0x787]
	0x01D5EFF0 LDR X0, [X22]
	0x01D5EFF4 LDR W8, [X0 + 0xE0]
	0x01D5EFF8 CBNZ W8, 0x1D5F004
	0x01D5EFFC BL 0x1C16DFC
	0x01D5F000 LDR X0, [X22]
	0x01D5F004 LDR X8, [X19 + 0x78]
	0x01D5F008 CBZ X8, 0x1D5F144
	0x01D5F00C LDR X9, [X0 + 0xB8]
	0x01D5F010 LDR X1, [X8 + 0x60]
	0x01D5F014 MOV X2, X20
	0x01D5F018 LDR X0, [X9]
	0x01D5F01C BL 0x1D4D200
	0x01D5F020 LDR X8, [X19 + 0x78]
	0x01D5F024 CBZ X8, 0x1D5F144
	0x01D5F028 LDR X0, [X19 + 0x20]
	0x01D5F02C CBZ X0, 0x1D5F144
	0x01D5F030 LDR X1, [X8 + 0x60]
	0x01D5F034 MOV X2, X31
	0x01D5F038 BL 0x1E1F0D8
	0x01D5F03C LDR X0, [X19 + 0x48]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x267B000
	008 Move X20, 0x2398000
	009 Move W8, [X21+2083]
	010 Move X20, [X20+1448]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x2398000
	017 Move X0, [X0+1456]
	018 Call 0x1C17CF4
	019 Move X0, 0x2397000
	020 Move X0, [X0+3696]
	021 Call 0x1C17CF4
	022 Move X0, 0x2398000
	023 Move X0, [X0+1464]
	024 Call 0x1C17CF4
	025 Move X0, 0x2398000
	026 Move X0, [X0+1472]
	027 Call 0x1C17CF4
	028 Move X0, 0x2398000
	029 Move X0, [X0+1448]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+2083], W8
	033 Move X0, [X20]
	034 Move W20, [X19+32]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move W0, W20
	040 Move X1, X31
	041 Call LeanTween.cancel, X0
	042 Move X0, X19
	043 Move X1, X31
	044 Call Component.get_transform, X0
	045 Move X21, 0x267B000
	046 Move W8, [X21+1923]
	047 Move X20, X0
	048 Compare W8, 0
	049 JumpIfNotEqual {55}
	050 Move X0, 0x2396000
	051 Move X0, [X0+1440]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X21+1923], W8
	055 Compare X20, 0
	056 JumpIfEqual {127}
	057 Move X8, 0x2396000
	058 Move X8, [X8+1440]
	059 Move X0, X20
	060 Move X1, X31
	061 Move X8, [X8]
	062 Move X8, [X8+184]
	063 Move S1, [X8+4]
	064 Move S2, [X8+8]
	065 Move V0, [X8]
	066 Call Transform.set_localScale, X0, X1
	067 Move X8, -19345408
	068 Move V2, [X8+684]
	069 Move S0, W31
	070 Move S1, 1
	071 Move X0, X31
	072 Call LeanTween.value, V0, V1, V2
	073 Compare X0, 0
	074 JumpIfEqual {127}
	075 Move X20, 0x2398000
	076 Move X21, 0x2398000
	077 Move X20, [X20+1456]
	078 Move X21, [X21+1464]
	079 Move X1, X31
	080 Call LTDescr.setEaseOutBack, X0
	081 Move X8, [X20]
	082 Move X20, X0
	083 Move X0, X8
	084 Call 0x1C17F10
	085 Move X2, [X21]
	086 Move X1, X19
	087 Move X3, X31
	088 Move X21, X0
	089 Call Action`1<Single>..ctor, X0, X1, X2
	090 Compare X20, 0
	091 JumpIfEqual {127}
	092 Move X22, 0x2397000
	093 Move X23, 0x2398000
	094 Move X22, [X22+3696]
	095 Move X23, [X23+1472]
	096 Move X0, X20
	097 Move X1, X21
	098 Move X2, X31
	099 Call LTDescr.setOnUpdate, X0, X1
	100 Move X8, [X22]
	101 Move X20, X0
	102 Move X0, X8
	103 Call 0x1C17F10
	104 Move X2, [X23]
	105 Move X1, X19
	106 Move X3, X31
	107 Move X21, X0
	108 Call Action..ctor, X0, X1, X2
	109 Compare X20, 0
	110 JumpIfEqual {127}
	111 Move X0, X20
	112 Move X1, X21
	113 Move X2, X31
	114 Call LTDescr.setOnComplete, X0, X1
	115 Compare X0, 0
	116 JumpIfEqual {127}
	117 Move X1, X31
	118 Call LTDescr.get_id, X0
	119 Move [X19+32], W0
	120 Move X20, [X31+32]
	121 Move X19, [X31+40]
	122 Move X22, [X31+16]
	123 Move X21, [X31+24]
	124 Move X30, [X31+48]
	125 Move X23, [X31+56]
	126 Return 
	127 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01D5F040 CBZ X0, 0x1D5F144
	0x01D5F044 MOV X1, X31

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

Method: System.Void <OnEnable>b__1_0(System.Single val)

Disassembly:
	0x01D5F048 BL 0x3C32ECC
	0x01D5F04C ADRP X8, 0x2396000
	0x01D5F050 LDR X8, [X8 + 0x5A8]
	0x01D5F054 MOV X20, X0
	0x01D5F058 LDR X8, [X8]
	0x01D5F05C LDR W9, [X8 + 0xE0]
	0x01D5F060 CBNZ W9, 0x1D5F06C
	0x01D5F064 MOV X0, X8
	0x01D5F068 BL 0x1C16DFC
	0x01D5F06C MOV X0, X20
	0x01D5F070 MOV X1, X31
	0x01D5F074 BL 0x31AD0B4
	0x01D5F078 LDR V2, [X19 + 0x40]
	0x01D5F07C MOVZ W8, 0xC3B40000

ISIL:
	001 Move [X31-16], D8
	002 Move [X31+8], X30
	003 Move X1, X31
	004 Move V8, V0
	005 Call Component.get_transform, X0
	006 Compare X0, 0
	007 JumpIfEqual {16}
	008 Move X30, [X31+8]
	009 Move V0, V8
	010 Move V1, V8
	011 Move V2, V8
	012 Move X1, X31
	013 Move V8, [X31+16]
	014 Call Transform.set_localScale, X0, X1
	015 Return 
	016 Call 0x1C17F20

Method: System.Void <OnEnable>b__1_1()

Disassembly:
	0x01D5F080 FMOV S0, W31
	0x01D5F084 FMOV S1, W8
	0x01D5F088 MOV X0, X31
	0x01D5F08C BL 0x31B22EC
	0x01D5F090 CBZ X0, 0x1D5F144
	0x01D5F094 MOVZ W1, 0x2
	0x01D5F098 MOV X2, X31
	0x01D5F09C BL 0x31C50D0
	0x01D5F0A0 ADRP X8, 0x2396000
	0x01D5F0A4 LDR X8, [X8 + 0x5B0]
	0x01D5F0A8 MOV X20, X0
	0x01D5F0AC LDR X8, [X8]
	0x01D5F0B0 MOV X0, X8
	0x01D5F0B4 BL 0x1C16F10
	0x01D5F0B8 ADRP X8, 0x2396000
	0x01D5F0BC LDR X8, [X8 + 0x640]
	0x01D5F0C0 MOV X1, X19
	0x01D5F0C4 MOV X3, X31
	0x01D5F0C8 MOV X21, X0
	0x01D5F0CC LDR X2, [X8]
	0x01D5F0D0 BL 0x2A6DA40
	0x01D5F0D4 CBZ X20, 0x1D5F144
	0x01D5F0D8 MOV X0, X20
	0x01D5F0DC MOV X1, X21
	0x01D5F0E0 MOV X2, X31
	0x01D5F0E4 BL 0x31C8070

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Call Component.get_transform, X0
	006 Move X20, 0x267A000
	007 Move W8, [X20+2139]
	008 Move X19, X0
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x2395000
	012 Move X0, [X0+1440]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2139], W8
	016 Compare X19, 0
	017 JumpIfEqual {32}
	018 Move X8, 0x2395000
	019 Move X8, [X8+1440]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X1, X31
	024 Move X8, [X8]
	025 Move X8, [X8+184]
	026 Move S1, [X8+16]
	027 Move S2, [X8+20]
	028 Move V0, [X8+12]
	029 Move X30, [X31+32]
	030 Call Transform.set_localScale, X0, X1
	031 Return 
	032 Call 0x1C17F20

