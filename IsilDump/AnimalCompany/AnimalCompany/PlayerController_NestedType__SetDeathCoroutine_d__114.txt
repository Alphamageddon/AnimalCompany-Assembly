Type: AnimalCompany.PlayerController/<SetDeathCoroutine>d__114

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01DC34B0 B 0x1DC34B8
	0x01DC34B4 CBZ X8, 0x1DC3610
	0x01DC34B8 LDR X9, [X8 + 0x20]
	0x01DC34BC CBZ X9, 0x1DC3610
	0x01DC34C0 LDR W22, [X9 + 0x28]
	0x01DC34C4 ADRP X24, 0x2615000
	0x01DC34C8 CMP W22, 0x1
	0x01DC34CC B.LT 0x1DC354C
	0x01DC34D0 LDRB W9, [X24 + 0x793]
	0x01DC34D4 CBNZ W9, 0x1DC34F4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01DC537C STR X0, [X8 + 0x8]

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01DC5380 LDR X20, [X23]
	0x01DC5384 MOV X0, X21
	0x01DC5388 MOV X1, X20
	0x01DC538C BL 0x1C16E00
	0x01DC5390 CBZ X0, 0x1DC5E1C
	0x01DC5394 LDR X8, [X22]
	0x01DC5398 LDR X20, [X23]
	0x01DC539C LDR X8, [X8 + 0xB8]
	0x01DC53A0 B 0x1DC53B0
	0x01DC53A4 LDR X8, [X22]
	0x01DC53A8 LDR X8, [X8 + 0xB8]
	0x01DC53AC STR X31, [X8 + 0x8]
	0x01DC53B0 ADRP X24, 0x2333000
	0x01DC53B4 LDR X21, [X8 + 0x18]
	0x01DC53B8 LDR X24, [X24 + 0x1A8]
	0x01DC53BC MOV X0, X20
	0x01DC53C0 BL 0x1C16F10
	0x01DC53C4 LDR X2, [X24]
	0x01DC53C8 MOV X1, X19
	0x01DC53CC MOV X3, X31
	0x01DC53D0 MOV X20, X0
	0x01DC53D4 BL 0x2A6DA40
	0x01DC53D8 MOV X0, X21
	0x01DC53DC MOV X1, X20
	0x01DC53E0 MOV X2, X31
	0x01DC53E4 BL 0x33C0DE4
	0x01DC53E8 LDR X20, [X23]
	0x01DC53EC CBZ X0, 0x1DC5430
	0x01DC53F0 MOV X1, X20
	0x01DC53F4 MOV X21, X0
	0x01DC53F8 BL 0x1C16E00
	0x01DC53FC CBZ X0, 0x1DC5E1C
	0x01DC5400 LDR X8, [X22]
	0x01DC5404 LDR X8, [X8 + 0xB8]
	0x01DC5408 STR X0, [X8 + 0x18]
	0x01DC540C LDR X20, [X23]
	0x01DC5410 MOV X0, X21
	0x01DC5414 MOV X1, X20
	0x01DC5418 BL 0x1C16E00
	0x01DC541C CBZ X0, 0x1DC5E1C
	0x01DC5420 LDR X8, [X22]
	0x01DC5424 LDR X20, [X23]
	0x01DC5428 LDR X8, [X8 + 0xB8]
	0x01DC542C B 0x1DC543C
	0x01DC5430 LDR X8, [X22]
	0x01DC5434 LDR X8, [X8 + 0xB8]
	0x01DC5438 STR X31, [X8 + 0x18]
	0x01DC543C ADRP X24, 0x2333000
	0x01DC5440 LDR X21, [X8 + 0x10]
	0x01DC5444 LDR X24, [X24 + 0x200]
	0x01DC5448 MOV X0, X20
	0x01DC544C BL 0x1C16F10
	0x01DC5450 LDR X2, [X24]
	0x01DC5454 MOV X1, X19
	0x01DC5458 MOV X3, X31
	0x01DC545C MOV X20, X0
	0x01DC5460 BL 0x2A6DA40
	0x01DC5464 MOV X0, X21
	0x01DC5468 MOV X1, X20
	0x01DC546C MOV X2, X31
	0x01DC5470 BL 0x33C0DE4
	0x01DC5474 LDR X20, [X23]
	0x01DC5478 CBZ X0, 0x1DC54BC
	0x01DC547C MOV X1, X20
	0x01DC5480 MOV X21, X0
	0x01DC5484 BL 0x1C16E00
	0x01DC5488 CBZ X0, 0x1DC5E1C
	0x01DC548C LDR X8, [X22]
	0x01DC5490 LDR X8, [X8 + 0xB8]
	0x01DC5494 STR X0, [X8 + 0x10]
	0x01DC5498 LDR X20, [X23]
	0x01DC549C MOV X0, X21
	0x01DC54A0 MOV X1, X20
	0x01DC54A4 BL 0x1C16E00
	0x01DC54A8 CBZ X0, 0x1DC5E1C
	0x01DC54AC LDR X8, [X22]
	0x01DC54B0 LDR X20, [X23]
	0x01DC54B4 LDR X8, [X8 + 0xB8]
	0x01DC54B8 B 0x1DC54C8
	0x01DC54BC LDR X8, [X22]
	0x01DC54C0 LDR X8, [X8 + 0xB8]
	0x01DC54C4 STR X31, [X8 + 0x10]
	0x01DC54C8 ADRP X24, 0x2333000
	0x01DC54CC LDR X21, [X8 + 0x20]
	0x01DC54D0 LDR X24, [X24 + 0x1D8]
	0x01DC54D4 MOV X0, X20
	0x01DC54D8 BL 0x1C16F10
	0x01DC54DC LDR X2, [X24]
	0x01DC54E0 MOV X1, X19
	0x01DC54E4 MOV X3, X31
	0x01DC54E8 MOV X20, X0
	0x01DC54EC BL 0x2A6DA40
	0x01DC54F0 MOV X0, X21
	0x01DC54F4 MOV X1, X20
	0x01DC54F8 MOV X2, X31
	0x01DC54FC BL 0x33C0DE4
	0x01DC5500 CBZ X0, 0x1DC5544
	0x01DC5504 LDR X21, [X23]
	0x01DC5508 MOV X20, X0
	0x01DC550C MOV X1, X21
	0x01DC5510 BL 0x1C16E00
	0x01DC5514 CBZ X0, 0x1DC5E2C
	0x01DC5518 LDR X8, [X22]
	0x01DC551C LDR X8, [X8 + 0xB8]
	0x01DC5520 STR X0, [X8 + 0x20]
	0x01DC5524 LDR X21, [X23]
	0x01DC5528 MOV X0, X20
	0x01DC552C MOV X1, X21
	0x01DC5530 BL 0x1C16E00
	0x01DC5534 CBZ X0, 0x1DC5E2C
	0x01DC5538 LDR X8, [X22]
	0x01DC553C LDR X8, [X8 + 0xB8]
	0x01DC5540 B 0x1DC5550
	0x01DC5544 LDR X8, [X22]
	0x01DC5548 LDR X8, [X8 + 0xB8]
	0x01DC554C STR X31, [X8 + 0x20]
	0x01DC5550 ADRP X23, 0x232F000
	0x01DC5554 LDR X23, [X23 + 0xE70]
	0x01DC5558 ADRP X24, 0x2333000
	0x01DC555C LDR X20, [X8 + 0xA8]
	0x01DC5560 LDR X0, [X23]
	0x01DC5564 LDR X24, [X24 + 0x1C0]
	0x01DC5568 BL 0x1C16F10
	0x01DC556C LDR X2, [X24]
	0x01DC5570 MOV X1, X19
	0x01DC5574 MOV X3, X31
	0x01DC5578 MOV X21, X0
	0x01DC557C BL 0x3314368
	0x01DC5580 MOV X0, X20
	0x01DC5584 MOV X1, X21
	0x01DC5588 MOV X2, X31
	0x01DC558C BL 0x33C0DE4
	0x01DC5590 LDR X1, [X23]
	0x01DC5594 CBZ X0, 0x1DC55C0
	0x01DC5598 LDR X8, [X0]
	0x01DC559C CMP X8, X1
	0x01DC55A0 B.NE 0x1DC5E34
	0x01DC55A4 LDR X8, [X22]
	0x01DC55A8 LDR X8, [X8 + 0xB8]
	0x01DC55AC STR X0, [X8 + 0xA8]
	0x01DC55B0 LDR X9, [X0]
	0x01DC55B4 CMP X9, X1
	0x01DC55B8 B.EQ 0x1DC55CC
	0x01DC55BC B 0x1DC5E34
	0x01DC55C0 LDR X8, [X22]
	0x01DC55C4 LDR X8, [X8 + 0xB8]
	0x01DC55C8 STR X0, [X8 + 0xA8]
	0x01DC55CC LDR X20, [X8 + 0xE8]
	0x01DC55D0 MOV X0, X1
	0x01DC55D4 BL 0x1C16F10
	0x01DC55D8 LDR X2, [X24]
	0x01DC55DC MOV X1, X19
	0x01DC55E0 MOV X3, X31
	0x01DC55E4 MOV X21, X0
	0x01DC55E8 BL 0x3314368
	0x01DC55EC MOV X0, X20
	0x01DC55F0 MOV X1, X21
	0x01DC55F4 MOV X2, X31
	0x01DC55F8 BL 0x33C0DE4
	0x01DC55FC LDR X1, [X23]
	0x01DC5600 CBZ X0, 0x1DC562C
	0x01DC5604 LDR X8, [X0]
	0x01DC5608 CMP X8, X1
	0x01DC560C B.NE 0x1DC5E34
	0x01DC5610 LDR X8, [X22]
	0x01DC5614 LDR X8, [X8 + 0xB8]
	0x01DC5618 STR X0, [X8 + 0xE8]
	0x01DC561C LDR X9, [X0]
	0x01DC5620 CMP X9, X1
	0x01DC5624 B.EQ 0x1DC5638
	0x01DC5628 B 0x1DC5E34
	0x01DC562C LDR X8, [X22]
	0x01DC5630 LDR X8, [X8 + 0xB8]
	0x01DC5634 STR X0, [X8 + 0xE8]
	0x01DC5638 LDR X20, [X8 + 0x128]
	0x01DC563C MOV X0, X1
	0x01DC5640 BL 0x1C16F10
	0x01DC5644 LDR X2, [X24]
	0x01DC5648 MOV X1, X19
	0x01DC564C MOV X3, X31
	0x01DC5650 MOV X21, X0
	0x01DC5654 BL 0x3314368
	0x01DC5658 MOV X0, X20
	0x01DC565C MOV X1, X21
	0x01DC5660 MOV X2, X31
	0x01DC5664 BL 0x33C0DE4
	0x01DC5668 LDR X1, [X23]
	0x01DC566C CBZ X0, 0x1DC5698
	0x01DC5670 LDR X8, [X0]
	0x01DC5674 CMP X8, X1
	0x01DC5678 B.NE 0x1DC5E34
	0x01DC567C LDR X8, [X22]
	0x01DC5680 LDR X8, [X8 + 0xB8]
	0x01DC5684 STR X0, [X8 + 0x128]
	0x01DC5688 LDR X9, [X0]
	0x01DC568C CMP X9, X1
	0x01DC5690 B.EQ 0x1DC56A4
	0x01DC5694 B 0x1DC5E34
	0x01DC5698 LDR X8, [X22]
	0x01DC569C LDR X8, [X8 + 0xB8]
	0x01DC56A0 STR X0, [X8 + 0x128]
	0x01DC56A4 ADRP X24, 0x2333000
	0x01DC56A8 LDR X20, [X8 + 0xB0]
	0x01DC56AC LDR X24, [X24 + 0x1C8]
	0x01DC56B0 MOV X0, X1
	0x01DC56B4 BL 0x1C16F10
	0x01DC56B8 LDR X2, [X24]
	0x01DC56BC MOV X1, X19
	0x01DC56C0 MOV X3, X31
	0x01DC56C4 MOV X21, X0
	0x01DC56C8 BL 0x3314368
	0x01DC56CC MOV X0, X20
	0x01DC56D0 MOV X1, X21
	0x01DC56D4 MOV X2, X31
	0x01DC56D8 BL 0x33C0DE4
	0x01DC56DC LDR X1, [X23]
	0x01DC56E0 CBZ X0, 0x1DC570C
	0x01DC56E4 LDR X8, [X0]
	0x01DC56E8 CMP X8, X1
	0x01DC56EC B.NE 0x1DC5E34
	0x01DC56F0 LDR X8, [X22]
	0x01DC56F4 LDR X8, [X8 + 0xB8]
	0x01DC56F8 STR X0, [X8 + 0xB0]
	0x01DC56FC LDR X9, [X0]
	0x01DC5700 CMP X9, X1
	0x01DC5704 B.EQ 0x1DC5718
	0x01DC5708 B 0x1DC5E34
	0x01DC570C LDR X8, [X22]
	0x01DC5710 LDR X8, [X8 + 0xB8]
	0x01DC5714 STR X0, [X8 + 0xB0]
	0x01DC5718 LDR X20, [X8 + 0xF0]
	0x01DC571C MOV X0, X1
	0x01DC5720 BL 0x1C16F10
	0x01DC5724 LDR X2, [X24]
	0x01DC5728 MOV X1, X19
	0x01DC572C MOV X3, X31
	0x01DC5730 MOV X21, X0
	0x01DC5734 BL 0x3314368
	0x01DC5738 MOV X0, X20
	0x01DC573C MOV X1, X21
	0x01DC5740 MOV X2, X31
	0x01DC5744 BL 0x33C0DE4
	0x01DC5748 LDR X1, [X23]
	0x01DC574C CBZ X0, 0x1DC5778
	0x01DC5750 LDR X8, [X0]
	0x01DC5754 CMP X8, X1
	0x01DC5758 B.NE 0x1DC5E34
	0x01DC575C LDR X8, [X22]
	0x01DC5760 LDR X8, [X8 + 0xB8]
	0x01DC5764 STR X0, [X8 + 0xF0]
	0x01DC5768 LDR X9, [X0]
	0x01DC576C CMP X9, X1
	0x01DC5770 B.EQ 0x1DC5784
	0x01DC5774 B 0x1DC5E34
	0x01DC5778 LDR X8, [X22]
	0x01DC577C LDR X8, [X8 + 0xB8]
	0x01DC5780 STR X0, [X8 + 0xF0]
	0x01DC5784 LDR X20, [X8 + 0x130]
	0x01DC5788 MOV X0, X1
	0x01DC578C BL 0x1C16F10
	0x01DC5790 LDR X2, [X24]
	0x01DC5794 MOV X1, X19
	0x01DC5798 MOV X3, X31
	0x01DC579C MOV X21, X0
	0x01DC57A0 BL 0x3314368
	0x01DC57A4 MOV X0, X20
	0x01DC57A8 MOV X1, X21
	0x01DC57AC MOV X2, X31
	0x01DC57B0 BL 0x33C0DE4
	0x01DC57B4 LDR X1, [X23]
	0x01DC57B8 CBZ X0, 0x1DC57E4
	0x01DC57BC LDR X8, [X0]
	0x01DC57C0 CMP X8, X1
	0x01DC57C4 B.NE 0x1DC5E34
	0x01DC57C8 LDR X8, [X22]
	0x01DC57CC LDR X8, [X8 + 0xB8]
	0x01DC57D0 STR X0, [X8 + 0x130]
	0x01DC57D4 LDR X9, [X0]
	0x01DC57D8 CMP X9, X1
	0x01DC57DC B.EQ 0x1DC57F0
	0x01DC57E0 B 0x1DC5E34
	0x01DC57E4 LDR X8, [X22]
	0x01DC57E8 LDR X8, [X8 + 0xB8]
	0x01DC57EC STR X0, [X8 + 0x130]
	0x01DC57F0 ADRP X24, 0x2333000
	0x01DC57F4 LDR X20, [X8 + 0xB8]
	0x01DC57F8 LDR X24, [X24 + 0x1F0]
	0x01DC57FC MOV X0, X1
	0x01DC5800 BL 0x1C16F10
	0x01DC5804 LDR X2, [X24]
	0x01DC5808 MOV X1, X19
	0x01DC580C MOV X3, X31
	0x01DC5810 MOV X21, X0
	0x01DC5814 BL 0x3314368
	0x01DC5818 MOV X0, X20
	0x01DC581C MOV X1, X21
	0x01DC5820 MOV X2, X31
	0x01DC5824 BL 0x33C0DE4
	0x01DC5828 LDR X1, [X23]
	0x01DC582C CBZ X0, 0x1DC5858
	0x01DC5830 LDR X8, [X0]
	0x01DC5834 CMP X8, X1
	0x01DC5838 B.NE 0x1DC5E34
	0x01DC583C LDR X8, [X22]
	0x01DC5840 LDR X8, [X8 + 0xB8]
	0x01DC5844 STR X0, [X8 + 0xB8]
	0x01DC5848 LDR X9, [X0]
	0x01DC584C CMP X9, X1
	0x01DC5850 B.EQ 0x1DC5864
	0x01DC5854 B 0x1DC5E34
	0x01DC5858 LDR X8, [X22]
	0x01DC585C LDR X8, [X8 + 0xB8]
	0x01DC5860 STR X0, [X8 + 0xB8]
	0x01DC5864 LDR X20, [X8 + 0xF8]
	0x01DC5868 MOV X0, X1
	0x01DC586C BL 0x1C16F10
	0x01DC5870 LDR X2, [X24]
	0x01DC5874 MOV X1, X19
	0x01DC5878 MOV X3, X31
	0x01DC587C MOV X21, X0
	0x01DC5880 BL 0x3314368
	0x01DC5884 MOV X0, X20
	0x01DC5888 MOV X1, X21
	0x01DC588C MOV X2, X31
	0x01DC5890 BL 0x33C0DE4
	0x01DC5894 LDR X1, [X23]
	0x01DC5898 CBZ X0, 0x1DC58C4
	0x01DC589C LDR X8, [X0]
	0x01DC58A0 CMP X8, X1
	0x01DC58A4 B.NE 0x1DC5E34
	0x01DC58A8 LDR X8, [X22]
	0x01DC58AC LDR X8, [X8 + 0xB8]
	0x01DC58B0 STR X0, [X8 + 0xF8]
	0x01DC58B4 LDR X9, [X0]
	0x01DC58B8 CMP X9, X1
	0x01DC58BC B.EQ 0x1DC58D0
	0x01DC58C0 B 0x1DC5E34
	0x01DC58C4 LDR X8, [X22]
	0x01DC58C8 LDR X8, [X8 + 0xB8]
	0x01DC58CC STR X0, [X8 + 0xF8]
	0x01DC58D0 LDR X20, [X8 + 0x138]
	0x01DC58D4 MOV X0, X1
	0x01DC58D8 BL 0x1C16F10
	0x01DC58DC LDR X2, [X24]
	0x01DC58E0 MOV X1, X19
	0x01DC58E4 MOV X3, X31
	0x01DC58E8 MOV X21, X0
	0x01DC58EC BL 0x3314368
	0x01DC58F0 MOV X0, X20
	0x01DC58F4 MOV X1, X21
	0x01DC58F8 MOV X2, X31
	0x01DC58FC BL 0x33C0DE4
	0x01DC5900 LDR X1, [X23]
	0x01DC5904 CBZ X0, 0x1DC5930
	0x01DC5908 LDR X8, [X0]
	0x01DC590C CMP X8, X1
	0x01DC5910 B.NE 0x1DC5E34
	0x01DC5914 LDR X8, [X22]
	0x01DC5918 LDR X8, [X8 + 0xB8]
	0x01DC591C STR X0, [X8 + 0x138]
	0x01DC5920 LDR X9, [X0]
	0x01DC5924 CMP X9, X1
	0x01DC5928 B.EQ 0x1DC593C
	0x01DC592C B 0x1DC5E34
	0x01DC5930 LDR X8, [X22]
	0x01DC5934 LDR X8, [X8 + 0xB8]
	0x01DC5938 STR X0, [X8 + 0x138]
	0x01DC593C ADRP X24, 0x2333000
	0x01DC5940 LDR X20, [X8 + 0xC0]
	0x01DC5944 LDR X24, [X24 + 0x1F8]
	0x01DC5948 MOV X0, X1
	0x01DC594C BL 0x1C16F10
	0x01DC5950 LDR X2, [X24]
	0x01DC5954 MOV X1, X19
	0x01DC5958 MOV X3, X31
	0x01DC595C MOV X21, X0
	0x01DC5960 BL 0x3314368
	0x01DC5964 MOV X0, X20
	0x01DC5968 MOV X1, X21
	0x01DC596C MOV X2, X31
	0x01DC5970 BL 0x33C0DE4
	0x01DC5974 LDR X1, [X23]
	0x01DC5978 CBZ X0, 0x1DC59A4
	0x01DC597C LDR X8, [X0]
	0x01DC5980 CMP X8, X1
	0x01DC5984 B.NE 0x1DC5E34
	0x01DC5988 LDR X8, [X22]
	0x01DC598C LDR X8, [X8 + 0xB8]
	0x01DC5990 STR X0, [X8 + 0xC0]
	0x01DC5994 LDR X9, [X0]
	0x01DC5998 CMP X9, X1
	0x01DC599C B.EQ 0x1DC59B0
	0x01DC59A0 B 0x1DC5E34
	0x01DC59A4 LDR X8, [X22]
	0x01DC59A8 LDR X8, [X8 + 0xB8]
	0x01DC59AC STR X0, [X8 + 0xC0]
	0x01DC59B0 LDR X20, [X8 + 0x100]
	0x01DC59B4 MOV X0, X1
	0x01DC59B8 BL 0x1C16F10
	0x01DC59BC LDR X2, [X24]
	0x01DC59C0 MOV X1, X19
	0x01DC59C4 MOV X3, X31
	0x01DC59C8 MOV X21, X0
	0x01DC59CC BL 0x3314368
	0x01DC59D0 MOV X0, X20
	0x01DC59D4 MOV X1, X21
	0x01DC59D8 MOV X2, X31
	0x01DC59DC BL 0x33C0DE4
	0x01DC59E0 LDR X1, [X23]
	0x01DC59E4 CBZ X0, 0x1DC5A10
	0x01DC59E8 LDR X8, [X0]
	0x01DC59EC CMP X8, X1
	0x01DC59F0 B.NE 0x1DC5E34
	0x01DC59F4 LDR X8, [X22]
	0x01DC59F8 LDR X8, [X8 + 0xB8]
	0x01DC59FC STR X0, [X8 + 0x100]
	0x01DC5A00 LDR X9, [X0]
	0x01DC5A04 CMP X9, X1
	0x01DC5A08 B.EQ 0x1DC5A1C
	0x01DC5A0C B 0x1DC5E34
	0x01DC5A10 LDR X8, [X22]
	0x01DC5A14 LDR X8, [X8 + 0xB8]
	0x01DC5A18 STR X0, [X8 + 0x100]
	0x01DC5A1C LDR X20, [X8 + 0x140]
	0x01DC5A20 MOV X0, X1
	0x01DC5A24 BL 0x1C16F10
	0x01DC5A28 LDR X2, [X24]
	0x01DC5A2C MOV X1, X19
	0x01DC5A30 MOV X3, X31
	0x01DC5A34 MOV X21, X0
	0x01DC5A38 BL 0x3314368
	0x01DC5A3C MOV X0, X20
	0x01DC5A40 MOV X1, X21
	0x01DC5A44 MOV X2, X31
	0x01DC5A48 BL 0x33C0DE4
	0x01DC5A4C LDR X1, [X23]
	0x01DC5A50 CBZ X0, 0x1DC5A7C
	0x01DC5A54 LDR X8, [X0]
	0x01DC5A58 CMP X8, X1
	0x01DC5A5C B.NE 0x1DC5E34
	0x01DC5A60 LDR X8, [X22]
	0x01DC5A64 LDR X8, [X8 + 0xB8]
	0x01DC5A68 STR X0, [X8 + 0x140]
	0x01DC5A6C LDR X9, [X0]
	0x01DC5A70 CMP X9, X1
	0x01DC5A74 B.EQ 0x1DC5A88
	0x01DC5A78 B 0x1DC5E34
	0x01DC5A7C LDR X8, [X22]
	0x01DC5A80 LDR X8, [X8 + 0xB8]
	0x01DC5A84 STR X0, [X8 + 0x140]
	0x01DC5A88 ADRP X24, 0x2333000
	0x01DC5A8C LDR X20, [X8 + 0x88]
	0x01DC5A90 LDR X24, [X24 + 0x1B0]
	0x01DC5A94 MOV X0, X1
	0x01DC5A98 BL 0x1C16F10
	0x01DC5A9C LDR X2, [X24]
	0x01DC5AA0 MOV X1, X19
	0x01DC5AA4 MOV X3, X31
	0x01DC5AA8 MOV X21, X0
	0x01DC5AAC BL 0x3314368
	0x01DC5AB0 MOV X0, X20
	0x01DC5AB4 MOV X1, X21
	0x01DC5AB8 MOV X2, X31
	0x01DC5ABC BL 0x33C0DE4
	0x01DC5AC0 LDR X1, [X23]
	0x01DC5AC4 CBZ X0, 0x1DC5AF0
	0x01DC5AC8 LDR X8, [X0]
	0x01DC5ACC CMP X8, X1
	0x01DC5AD0 B.NE 0x1DC5E34
	0x01DC5AD4 LDR X8, [X22]
	0x01DC5AD8 LDR X8, [X8 + 0xB8]
	0x01DC5ADC STR X0, [X8 + 0x88]
	0x01DC5AE0 LDR X9, [X0]
	0x01DC5AE4 CMP X9, X1
	0x01DC5AE8 B.EQ 0x1DC5AFC
	0x01DC5AEC B 0x1DC5E34
	0x01DC5AF0 LDR X8, [X22]
	0x01DC5AF4 LDR X8, [X8 + 0xB8]
	0x01DC5AF8 STR X0, [X8 + 0x88]
	0x01DC5AFC LDR X20, [X8 + 0xC8]
	0x01DC5B00 MOV X0, X1
	0x01DC5B04 BL 0x1C16F10
	0x01DC5B08 LDR X2, [X24]
	0x01DC5B0C MOV X1, X19
	0x01DC5B10 MOV X3, X31
	0x01DC5B14 MOV X21, X0
	0x01DC5B18 BL 0x3314368
	0x01DC5B1C MOV X0, X20
	0x01DC5B20 MOV X1, X21
	0x01DC5B24 MOV X2, X31
	0x01DC5B28 BL 0x33C0DE4
	0x01DC5B2C LDR X1, [X23]
	0x01DC5B30 CBZ X0, 0x1DC5B5C
	0x01DC5B34 LDR X8, [X0]
	0x01DC5B38 CMP X8, X1
	0x01DC5B3C B.NE 0x1DC5E34
	0x01DC5B40 LDR X8, [X22]
	0x01DC5B44 LDR X8, [X8 + 0xB8]
	0x01DC5B48 STR X0, [X8 + 0xC8]
	0x01DC5B4C LDR X9, [X0]
	0x01DC5B50 CMP X9, X1
	0x01DC5B54 B.EQ 0x1DC5B68
	0x01DC5B58 B 0x1DC5E34
	0x01DC5B5C LDR X8, [X22]
	0x01DC5B60 LDR X8, [X8 + 0xB8]
	0x01DC5B64 STR X0, [X8 + 0xC8]
	0x01DC5B68 ADRP X24, 0x2333000
	0x01DC5B6C LDR X20, [X8 + 0x90]
	0x01DC5B70 LDR X24, [X24 + 0x1B8]
	0x01DC5B74 MOV X0, X1
	0x01DC5B78 BL 0x1C16F10
	0x01DC5B7C LDR X2, [X24]
	0x01DC5B80 MOV X1, X19
	0x01DC5B84 MOV X3, X31
	0x01DC5B88 MOV X21, X0
	0x01DC5B8C BL 0x3314368
	0x01DC5B90 MOV X0, X20
	0x01DC5B94 MOV X1, X21
	0x01DC5B98 MOV X2, X31
	0x01DC5B9C BL 0x33C0DE4
	0x01DC5BA0 LDR X1, [X23]
	0x01DC5BA4 CBZ X0, 0x1DC5BD0
	0x01DC5BA8 LDR X8, [X0]
	0x01DC5BAC CMP X8, X1
	0x01DC5BB0 B.NE 0x1DC5E34
	0x01DC5BB4 LDR X8, [X22]
	0x01DC5BB8 LDR X8, [X8 + 0xB8]
	0x01DC5BBC STR X0, [X8 + 0x90]
	0x01DC5BC0 LDR X9, [X0]
	0x01DC5BC4 CMP X9, X1
	0x01DC5BC8 B.EQ 0x1DC5BDC
	0x01DC5BCC B 0x1DC5E34
	0x01DC5BD0 LDR X8, [X22]
	0x01DC5BD4 LDR X8, [X8 + 0xB8]
	0x01DC5BD8 STR X0, [X8 + 0x90]
	0x01DC5BDC LDR X20, [X8 + 0xD0]
	0x01DC5BE0 MOV X0, X1
	0x01DC5BE4 BL 0x1C16F10
	0x01DC5BE8 LDR X2, [X24]
	0x01DC5BEC MOV X1, X19
	0x01DC5BF0 MOV X3, X31
	0x01DC5BF4 MOV X21, X0
	0x01DC5BF8 BL 0x3314368
	0x01DC5BFC MOV X0, X20
	0x01DC5C00 MOV X1, X21
	0x01DC5C04 MOV X2, X31
	0x01DC5C08 BL 0x33C0DE4
	0x01DC5C0C LDR X1, [X23]
	0x01DC5C10 CBZ X0, 0x1DC5C3C
	0x01DC5C14 LDR X8, [X0]
	0x01DC5C18 CMP X8, X1
	0x01DC5C1C B.NE 0x1DC5E34
	0x01DC5C20 LDR X8, [X22]
	0x01DC5C24 LDR X8, [X8 + 0xB8]
	0x01DC5C28 STR X0, [X8 + 0xD0]
	0x01DC5C2C LDR X9, [X0]
	0x01DC5C30 CMP X9, X1
	0x01DC5C34 B.EQ 0x1DC5C48
	0x01DC5C38 B 0x1DC5E34
	0x01DC5C3C LDR X8, [X22]
	0x01DC5C40 LDR X8, [X8 + 0xB8]
	0x01DC5C44 STR X0, [X8 + 0xD0]
	0x01DC5C48 ADRP X24, 0x2333000
	0x01DC5C4C LDR X20, [X8 + 0x98]
	0x01DC5C50 LDR X24, [X24 + 0x1E0]
	0x01DC5C54 MOV X0, X1
	0x01DC5C58 BL 0x1C16F10
	0x01DC5C5C LDR X2, [X24]
	0x01DC5C60 MOV X1, X19
	0x01DC5C64 MOV X3, X31
	0x01DC5C68 MOV X21, X0
	0x01DC5C6C BL 0x3314368
	0x01DC5C70 MOV X0, X20
	0x01DC5C74 MOV X1, X21
	0x01DC5C78 MOV X2, X31
	0x01DC5C7C BL 0x33C0DE4
	0x01DC5C80 LDR X1, [X23]
	0x01DC5C84 CBZ X0, 0x1DC5CB0
	0x01DC5C88 LDR X8, [X0]
	0x01DC5C8C CMP X8, X1
	0x01DC5C90 B.NE 0x1DC5E34
	0x01DC5C94 LDR X8, [X22]
	0x01DC5C98 LDR X8, [X8 + 0xB8]
	0x01DC5C9C STR X0, [X8 + 0x98]
	0x01DC5CA0 LDR X9, [X0]
	0x01DC5CA4 CMP X9, X1
	0x01DC5CA8 B.EQ 0x1DC5CBC
	0x01DC5CAC B 0x1DC5E34
	0x01DC5CB0 LDR X8, [X22]
	0x01DC5CB4 LDR X8, [X8 + 0xB8]
	0x01DC5CB8 STR X0, [X8 + 0x98]
	0x01DC5CBC LDR X20, [X8 + 0xD8]
	0x01DC5CC0 MOV X0, X1
	0x01DC5CC4 BL 0x1C16F10
	0x01DC5CC8 LDR X2, [X24]
	0x01DC5CCC MOV X1, X19
	0x01DC5CD0 MOV X3, X31
	0x01DC5CD4 MOV X21, X0
	0x01DC5CD8 BL 0x3314368
	0x01DC5CDC MOV X0, X20
	0x01DC5CE0 MOV X1, X21
	0x01DC5CE4 MOV X2, X31
	0x01DC5CE8 BL 0x33C0DE4
	0x01DC5CEC LDR X1, [X23]
	0x01DC5CF0 CBZ X0, 0x1DC5D1C
	0x01DC5CF4 LDR X8, [X0]
	0x01DC5CF8 CMP X8, X1
	0x01DC5CFC B.NE 0x1DC5E34
	0x01DC5D00 LDR X8, [X22]
	0x01DC5D04 LDR X8, [X8 + 0xB8]
	0x01DC5D08 STR X0, [X8 + 0xD8]
	0x01DC5D0C LDR X9, [X0]
	0x01DC5D10 CMP X9, X1
	0x01DC5D14 B.EQ 0x1DC5D28
	0x01DC5D18 B 0x1DC5E34
	0x01DC5D1C LDR X8, [X22]
	0x01DC5D20 LDR X8, [X8 + 0xB8]
	0x01DC5D24 STR X0, [X8 + 0xD8]
	0x01DC5D28 ADRP X24, 0x2333000
	0x01DC5D2C LDR X20, [X8 + 0xA0]
	0x01DC5D30 LDR X24, [X24 + 0x1E8]
	0x01DC5D34 MOV X0, X1
	0x01DC5D38 BL 0x1C16F10
	0x01DC5D3C LDR X2, [X24]
	0x01DC5D40 MOV X1, X19
	0x01DC5D44 MOV X3, X31
	0x01DC5D48 MOV X21, X0
	0x01DC5D4C BL 0x3314368
	0x01DC5D50 MOV X0, X20
	0x01DC5D54 MOV X1, X21
	0x01DC5D58 MOV X2, X31
	0x01DC5D5C BL 0x33C0DE4
	0x01DC5D60 LDR X1, [X23]
	0x01DC5D64 CBZ X0, 0x1DC5D90
	0x01DC5D68 LDR X8, [X0]
	0x01DC5D6C CMP X8, X1
	0x01DC5D70 B.NE 0x1DC5E34
	0x01DC5D74 LDR X8, [X22]
	0x01DC5D78 LDR X8, [X8 + 0xB8]
	0x01DC5D7C STR X0, [X8 + 0xA0]
	0x01DC5D80 LDR X9, [X0]
	0x01DC5D84 CMP X9, X1
	0x01DC5D88 B.EQ 0x1DC5D9C
	0x01DC5D8C B 0x1DC5E34
	0x01DC5D90 LDR X8, [X22]
	0x01DC5D94 LDR X8, [X8 + 0xB8]
	0x01DC5D98 STR X0, [X8 + 0xA0]
	0x01DC5D9C LDR X20, [X8 + 0xE0]
	0x01DC5DA0 MOV X0, X1
	0x01DC5DA4 BL 0x1C16F10
	0x01DC5DA8 LDR X2, [X24]
	0x01DC5DAC MOV X1, X19
	0x01DC5DB0 MOV X3, X31
	0x01DC5DB4 MOV X21, X0
	0x01DC5DB8 BL 0x3314368
	0x01DC5DBC MOV X0, X20
	0x01DC5DC0 MOV X1, X21
	0x01DC5DC4 MOV X2, X31
	0x01DC5DC8 BL 0x33C0DE4
	0x01DC5DCC CBZ X0, 0x1DC5DFC

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], D10
	003 Move [X31+40], D9
	004 Move [X31+48], D8
	005 Move [X31+56], X30
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X20, 0x2614000
	011 Move W8, [X20+2961]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0x232F000
	018 Move X0, [X0+2896]
	019 Call 0x1C17CF4
	020 Move X0, 0x232F000
	021 Move X0, [X0+1808]
	022 Call 0x1C17CF4
	023 Move X0, 0x232F000
	024 Move X0, [X0+1816]
	025 Call 0x1C17CF4
	026 Move X0, 0x232F000
	027 Move X0, [X0+1824]
	028 Call 0x1C17CF4
	029 Move X0, 0x2331000
	030 Move X0, [X0+1992]
	031 Call 0x1C17CF4
	032 Move X0, 0x2334000
	033 Move X0, [X0+136]
	034 Call 0x1C17CF4
	035 Move X0, 0x2334000
	036 Move X0, [X0+216]
	037 Call 0x1C17CF4
	038 Move X0, 0x2334000
	039 Move X0, [X0+360]
	040 Call 0x1C17CF4
	041 Move X0, 0x2331000
	042 Move X0, [X0+784]
	043 Call 0x1C17CF4
	044 Move X0, 0x232F000
	045 Move X0, [X0+1440]
	046 Call 0x1C17CF4
	047 Move X0, 0x2332000
	048 Move X0, [X0+3120]
	049 Call 0x1C17CF4
	050 Move X0, 0x2333000
	051 Move X0, [X0+1128]
	052 Call 0x1C17CF4
	053 Move X0, 0x2334000
	054 Move X0, [X0+368]
	055 Call 0x1C17CF4
	056 Move X0, 0x2334000
	057 Move X0, [X0+376]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+2961], W8
	061 Move [X31+16], X31
	062 Move [X31+24], X31
	063 Move W8, [X19+16]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X20, [X19+32]
	066 Move X9, -19492864
	067 Add X9, X9, 2349
	068 NotImplemented "Instruction ADR not yet implemented."
	069 Move W11, [X9]
	070 Add X10, X10, X11
	071 CallNoReturn X10
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W8, TEMP
	075 Move [X19+16], W8
	076 Compare X20, 0
	077 JumpIfEqual {478}
	078 Move W21, 1
	079 Move [X20+140], W21
	080 Move [X19+24], X31
	081 Move [X19+16], W21
	082 Move TEMP, 0
	083 Not TEMP
	084 Move W8, TEMP
	085 Move [X19+16], W8
	086 Move TEMP, 0
	087 Not TEMP
	088 Move W8, TEMP
	089 Move [X19+16], W8
	090 Move X8, 0x2334000
	091 Move X8, [X8+360]
	092 Move X0, [X8]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Move W0, W31
	098 Move X1, X31
	099 Call SpectatorManager.SetSpectator, X0
	100 Compare X20, 0
	101 JumpIfEqual {476}
	102 Move W1, 100
	103 Move X0, X20
	104 Call PlayerController.SetCurrentHealth, X0, X1
	105 Move [X20+140], W31
	106 Move X19, 0x2331000
	107 Move X19, [X19+1992]
	108 Move X0, [X19]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {114}
	112 Call 0x1C17DFC
	113 Move X0, [X19]
	114 Move X8, [X0+184]
	115 Move X8, [X8+32]
	116 Compare X8, 0
	117 JumpIfEqual {123}
	118 Move X0, [X8+64]
	119 Move X9, [X8+24]
	120 Move X2, [X8+40]
	121 Move W1, W31
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Move X0, [X20+56]
	124 Compare X0, 0
	125 JumpIfEqual {477}
	126 Move S0, W31
	127 Move S1, W31
	128 Move S2, W31
	129 Move W1, W31
	130 Call PlayerView.SetRagdoll, X0, X1, X2
	131 Move X19, 0x2334000
	132 Move X19, [X19+136]
	133 Move X8, [X19]
	134 Move X8, [X8+184]
	135 Move W8, [X8]
	136 Compare W8, 0
	137 JumpIfEqual {340}
	138 Move X8, 0x2331000
	139 Move X8, [X8+784]
	140 Move X0, [X8]
	141 Move W8, [X0+224]
	142 Compare W8, 0
	143 JumpIfNotEqual {145}
	144 Call 0x1C17DFC
	145 Add X1, X31, 24
	146 Move W0, W31
	147 Move X2, X31
	148 Call TeleportTarget.TryGetTeleportTarget, X0, X1
	149 Move X8, [X19]
	150 Move X8, [X8+184]
	151 Move X19, [X8+8]
	152 Move TEMP, X0
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfNotEqual {372}
	156 Move X0, [X31+24]
	157 Compare X0, 0
	158 JumpIfEqual {485}
	159 Move X1, X31
	160 Call Transform.get_position, X0
	161 Move X0, [X31+24]
	162 Compare X0, 0
	163 JumpIfEqual {487}
	164 Move V8, V0
	165 Move V9, V1
	166 Move V10, V2
	167 Move X1, X31
	168 Call Transform.get_rotation, X0
	169 Compare X19, 0
	170 JumpIfEqual {488}
	171 Move V4, V0
	172 Move V5, V1
	173 Move V6, V2
	174 Move V7, V3
	175 Move X0, X19
	176 Move V0, V8
	177 Move V1, V9
	178 Move V2, V10
	179 Move V3, V4
	180 Move V4, V5
	181 Move V5, V6
	182 Move V6, V7
	183 Move X1, X31
	184 Call Transform.SetPositionAndRotation, X0, X1, X2
	185 Move TEMP, 0
	186 Not TEMP
	187 Move W8, TEMP
	188 Move [X19+16], W8
	189 Move X8, 0x2334000
	190 Move X8, [X8+360]
	191 Move X0, [X8]
	192 Move W8, [X0+224]
	193 Compare W8, 0
	194 JumpIfNotEqual {196}
	195 Call 0x1C17DFC
	196 Move W0, W31
	197 Move X1, X31
	198 Call SpectatorManager.SetSpectator, X0
	199 Move X8, 0x2334000
	200 Move X8, [X8+216]
	201 Move X0, [X8]
	202 Move W8, [X0+224]
	203 Compare W8, 0
	204 JumpIfNotEqual {206}
	205 Call 0x1C17DFC
	206 Move S0, 1
	207 Move S1, 0.5
	208 Move S2, 1
	209 Move W3, 1
	210 Move X0, X31
	211 Move X1, X31
	212 Move X2, X31
	213 Move X4, X31
	214 Call ScreenEffectManager.FadeInOut, V0, V1, V2, X0, X1, X2, X3
	215 Move X8, 0x2332000
	216 Move X8, [X8+3120]
	217 Move X0, [X8]
	218 Call 0x1C17F10
	219 Move X8, -19767296
	220 Move V0, [X8+52]
	221 Move X1, X31
	222 Move X20, X0
	223 Call WaitForSeconds..ctor, X0, V0
	224 Move [X19+24], X20
	225 Move W8, 4
	226 Move TEMP, 0
	227 Not TEMP
	228 Move W8, TEMP
	229 Move [X19+16], W8
	230 Move X21, 0x2331000
	231 Move X21, [X21+1992]
	232 Move X0, [X21]
	233 Move W8, [X0+224]
	234 Compare W8, 0
	235 JumpIfNotEqual {238}
	236 Call 0x1C17DFC
	237 Move X0, [X21]
	238 Move X8, [X0+184]
	239 Move X8, [X8+32]
	240 Compare X8, 0
	241 JumpIfEqual {247}
	242 Move X0, [X8+64]
	243 Move X9, [X8+24]
	244 Move X2, [X8+40]
	245 Move W1, 1
	246 NotImplemented "Instruction BLR not yet implemented."
	247 Move X8, 0x232F000
	248 Move X8, [X8+1824]
	249 Move X0, [X8]
	250 Call 0x1C17F10
	251 Move X8, 0x232F000
	252 Move X8, [X8+1816]
	253 Move X21, X0
	254 Move X1, [X8]
	255 Call Dictionary`2<Object, Object>..ctor, X0
	256 Compare X20, 0
	257 JumpIfEqual {479}
	258 Move X0, X20
	259 Move X1, X31
	260 Call Component.get_transform, X0
	261 Compare X0, 0
	262 JumpIfEqual {480}
	263 Move X1, X31
	264 Call Transform.get_position, X0
	265 Move X8, 0x232F000
	266 Move X8, [X8+1440]
	267 Move [X31], S0
	268 Move [X31+8], S1
	269 Move [X31+8], S2
	270 Move X0, [X8]
	271 Add X1, X31, 0
	272 Call 0x1C17E04
	273 Compare X21, 0
	274 JumpIfEqual {481}
	275 Move X8, 0x2333000
	276 Move X8, [X8+1128]
	277 Move X22, 0x232F000
	278 Move X22, [X22+1808]
	279 Move X2, X0
	280 Move X1, [X8]
	281 Move X3, [X22]
	282 Move X0, X21
	283 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	284 Move X8, 0x2334000
	285 Move X2, [X19+40]
	286 Move X8, [X8+368]
	287 Move X3, [X22]
	288 Move X1, [X8]
	289 Move X0, X21
	290 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	291 Move X8, 0x232F000
	292 Move X8, [X8+2896]
	293 Move X0, [X8]
	294 Move W8, [X0+224]
	295 Compare W8, 0
	296 JumpIfNotEqual {298}
	297 Call 0x1C17DFC
	298 Move X8, 0x2334000
	299 Move X8, [X8+376]
	300 Move X0, [X8]
	301 Move X1, X21
	302 Call Analytics.Track, X0, X1
	303 Move X0, [X20+56]
	304 Compare X0, 0
	305 JumpIfEqual {482}
	306 Move S1, [X19+52]
	307 Move S2, [X19+56]
	308 Move V0, [X19+48]
	309 Move W1, 1
	310 Call PlayerView.SetRagdoll, X0, X1, X2
	311 Move X8, 0x2334000
	312 Move X8, [X8+136]
	313 Move X8, [X8]
	314 Move X8, [X8+184]
	315 Move W8, [X8]
	316 Compare W8, 0
	317 JumpIfEqual {397}
	318 Move X8, 0x2334000
	319 Move X8, [X8+360]
	320 Move X0, [X8]
	321 Move W8, [X0+224]
	322 Compare W8, 0
	323 JumpIfNotEqual {325}
	324 Call 0x1C17DFC
	325 Move W0, 1
	326 Move X1, X31
	327 Move W21, 1
	328 Call SpectatorManager.SetSpectator, X0
	329 Move X8, 0x2332000
	330 Move X8, [X8+3120]
	331 Move X0, [X8]
	332 Call 0x1C17F10
	333 Move S0, 4
	334 Move X1, X31
	335 Move X20, X0
	336 Call WaitForSeconds..ctor, X0, V0
	337 Move W8, 2
	338 Move [X19+24], X20
	339 Move [X19+16], W8
	340 Move X0, [X20+32]
	341 Compare X0, 0
	342 JumpIfEqual {483}
	343 Move W1, 1
	344 Move X2, X31
	345 Call Behaviour.set_enabled, X0, X1
	346 Move X0, [X20+48]
	347 Compare X0, 0
	348 JumpIfEqual {484}
	349 Move W1, 1
	350 Move X2, X31
	351 Call Rigidbody.set_useGravity, X0, X1
	352 Move X8, 0x2331000
	353 Move X8, [X8+784]
	354 Move X0, [X8]
	355 Move W8, [X0+224]
	356 Compare W8, 0
	357 JumpIfNotEqual {359}
	358 Call 0x1C17DFC
	359 Add X1, X31, 16
	360 Move W0, W31
	361 Move X2, X31
	362 Call TeleportTarget.TryGetTeleportTarget, X0, X1
	363 Move TEMP, X0
	364 And TEMP, TEMP, 1
	365 Compare TEMP, 1
	366 JumpIfNotEqual {455}
	367 Move X1, [X31+16]
	368 Move X0, X20
	369 Move W2, W31
	370 Call PlayerController.Respawn, X0, X1, X2
	371 Move W21, W31
	372 Move V8, [X20+268]
	373 Move V9, [X20+272]
	374 Move V10, [X20+276]
	375 Move V0, [X20+280]
	376 Move V1, [X20+284]
	377 Move V2, [X20+288]
	378 Move X0, X31
	379 Call Quaternion.LookRotation, X0
	380 Compare X19, 0
	381 JumpIfEqual {486}
	382 Move V4, V0
	383 Move V5, V1
	384 Move V6, V2
	385 Move V7, V3
	386 Move X0, X19
	387 Move V0, V8
	388 Move V1, V9
	389 Move V2, V10
	390 Move V3, V4
	391 Move V4, V5
	392 Move V5, V6
	393 Move V6, V7
	394 Move X1, X31
	395 Call Transform.SetPositionAndRotation, X0, X1, X2
	396 Move W21, W31
	397 Compare X20, 0
	398 JumpIfEqual {489}
	399 Move X0, [X20+32]
	400 Compare X0, 0
	401 JumpIfEqual {490}
	402 Move W1, W31
	403 Move X2, X31
	404 Call Behaviour.set_enabled, X0, X1
	405 Move X22, 0x2614000
	406 Move W8, [X22+1923]
	407 Move X21, [X20+48]
	408 Compare W8, 0
	409 JumpIfNotEqual {415}
	410 Move X0, 0x232F000
	411 Move X0, [X0+1440]
	412 Call 0x1C17CF4
	413 Move W8, 1
	414 Move [X22+1923], W8
	415 Compare X21, 0
	416 JumpIfEqual {491}
	417 Move X8, 0x232F000
	418 Move X8, [X8+1440]
	419 Move X8, [X8]
	420 Move X8, [X8+184]
	421 Move S1, [X8+4]
	422 Move S2, [X8+8]
	423 Move V0, [X8]
	424 Move X0, X21
	425 Move X1, X31
	426 Call Rigidbody.set_velocity, X0, X1
	427 Move X0, [X20+48]
	428 Compare X0, 0
	429 JumpIfEqual {492}
	430 Move W1, W31
	431 Move X2, X31
	432 Call Rigidbody.set_useGravity, X0, X1
	433 Move X8, 0x2334000
	434 Move X8, [X8+360]
	435 Move X0, [X8]
	436 Move W8, [X0+224]
	437 Compare W8, 0
	438 JumpIfNotEqual {440}
	439 Call 0x1C17DFC
	440 Move W0, 1
	441 Move X1, X31
	442 Call SpectatorManager.SetSpectator, X0
	443 Move X8, 0x2332000
	444 Move X8, [X8+3120]
	445 Move X0, [X8]
	446 Call 0x1C17F10
	447 Move S0, 8
	448 Move X1, X31
	449 Move X20, X0
	450 Call WaitForSeconds..ctor, X0, V0
	451 Move W8, 3
	452 Move [X19+24], X20
	453 Move [X19+16], W8
	454 Move W21, 1
	455 Move V0, [X20+268]
	456 Move V1, [X20+272]
	457 Move V2, [X20+276]
	458 Move V3, [X20+280]
	459 Move V4, [X20+284]
	460 Move V5, [X20+288]
	461 Move X0, X20
	462 Move W1, W31
	463 Call PlayerController.Respawn, X0, X1, X2, X3
	464 Move W21, W31
	465 Move W0, W21
	466 Move X20, [X31+80]
	467 Move X19, [X31+88]
	468 Move X22, [X31+64]
	469 Move X21, [X31+72]
	470 Move X30, [X31+56]
	471 Move D9, [X31+40]
	472 Move D8, [X31+48]
	473 Move V10, [X31+32]
	474 Add X31, X31, 96
	475 Return X0
	476 Call 0x1C17F20
	477 Call 0x1C17F20
	478 Call 0x1C17F20
	479 Call 0x1C17F20
	480 Call 0x1C17F20
	481 Call 0x1C17F20
	482 Call 0x1C17F20
	483 Call 0x1C17F20
	484 Call 0x1C17F20
	485 Call 0x1C17F20
	486 Call 0x1C17F20
	487 Call 0x1C17F20
	488 Call 0x1C17F20
	489 Call 0x1C17F20
	490 Call 0x1C17F20
	491 Call 0x1C17F20
	492 Call 0x1C17F20
	493 Move X21, X0
	494 NotImplemented "Instruction CMP not yet implemented."
	495 Move X0, X21
	496 Call 0x3EB2AD0
	497 Move X20, X0
	498 Move X0, 0x232F000
	499 Move X0, [X0+2000]
	500 Call 0x1C17D08
	501 Move X8, [X20]
	502 Move X1, [X8]
	503 Call 0x1C18270
	504 Move TEMP, X0
	505 And TEMP, TEMP, 1
	506 Compare TEMP, 1
	507 JumpIfNotEqual {531}
	508 Move X20, [X20]
	509 Call 0x3EB2AE0
	510 Move X0, 0x232F000
	511 Move X0, [X0+1928]
	512 Call 0x1C17D08
	513 Move W8, [X0+224]
	514 Compare W8, 0
	515 JumpIfNotEqual {517}
	516 Call 0x1C17DFC
	517 Move X0, 0x2334000
	518 Move X0, [X0+384]
	519 Call 0x1C17D08
	520 Move X21, X0
	521 Move X0, 0x2334000
	522 Move X0, [X0+392]
	523 Call 0x1C17D08
	524 Move X3, X0
	525 Move W4, 448
	526 Move X0, X20
	527 Move X1, X31
	528 Move X2, X21
	529 Move X5, X31
	530 Call Log.Error, X0, X1, X2, X3, X4
	531 Move W0, 8
	532 Call 0x3EB2AF0
	533 Move X8, [X20]
	534 Move [X0], X8
	535 Move X1, 0x20F0000
	536 Add X1, X1, 3672
	537 Move X2, X31
	538 Call 0x3EB2B00
	539 Move X21, X0
	540 Call 0x3EB2AE0
	541 NotImplemented "Instruction CMP not yet implemented."
	542 Move X21, X0
	543 Move X0, X21
	544 Call 0x3EB2AD0
	545 Move X20, X0
	546 Move X0, 0x232F000
	547 Move X0, [X0+2000]
	548 Call 0x1C17D08
	549 Move X8, [X20]
	550 Move X1, [X8]
	551 Call 0x1C18270
	552 Move TEMP, X0
	553 And TEMP, TEMP, 1
	554 Compare TEMP, 1
	555 JumpIfNotEqual {579}
	556 Move X20, [X20]
	557 Call 0x3EB2AE0
	558 Move X0, 0x232F000
	559 Move X0, [X0+1928]
	560 Call 0x1C17D08
	561 Move W8, [X0+224]
	562 Compare W8, 0
	563 JumpIfNotEqual {565}
	564 Call 0x1C17DFC
	565 Move X0, 0x2334000
	566 Move X0, [X0+384]
	567 Call 0x1C17D08
	568 Move X21, X0
	569 Move X0, 0x2334000
	570 Move X0, [X0+392]
	571 Call 0x1C17D08
	572 Move X3, X0
	573 Move W4, 459
	574 Move X0, X20
	575 Move X1, X31
	576 Move X2, X21
	577 Move X5, X31
	578 Call Log.Error, X0, X1, X2, X3, X4
	579 Move W0, 8
	580 Call 0x3EB2AF0
	581 Move X8, [X20]
	582 Move [X0], X8
	583 Move X1, 0x20F0000
	584 Add X1, X1, 3672
	585 Move X2, X31
	586 Call 0x3EB2B00
	587 Move X21, X0
	588 Call 0x3EB2AE0
	589 Move X21, X0
	590 NotImplemented "Instruction CMP not yet implemented."
	591 Move X0, X21
	592 Call 0x3EB2AD0
	593 Move X21, X0
	594 Move X0, 0x232F000
	595 Move X0, [X0+2000]
	596 Call 0x1C17D08
	597 Move X8, [X21]
	598 Move X1, [X8]
	599 Call 0x1C18270
	600 Move TEMP, X0
	601 And TEMP, TEMP, 1
	602 Compare TEMP, 1
	603 JumpIfNotEqual {627}
	604 Move X21, [X21]
	605 Call 0x3EB2AE0
	606 Move X0, 0x232F000
	607 Move X0, [X0+1928]
	608 Call 0x1C17D08
	609 Move W8, [X0+224]
	610 Compare W8, 0
	611 JumpIfNotEqual {613}
	612 Call 0x1C17DFC
	613 Move X0, 0x2334000
	614 Move X0, [X0+384]
	615 Call 0x1C17D08
	616 Move X22, X0
	617 Move X0, 0x2334000
	618 Move X0, [X0+392]
	619 Call 0x1C17D08
	620 Move X3, X0
	621 Move W4, 426
	622 Move X0, X21
	623 Move X1, X31
	624 Move X2, X22
	625 Move X5, X31
	626 Call Log.Error, X0, X1, X2, X3, X4
	627 Move W0, 8
	628 Call 0x3EB2AF0
	629 Move X8, [X21]
	630 Move [X0], X8
	631 Move X1, 0x20F0000
	632 Add X1, X1, 3672
	633 Move X2, X31
	634 Call 0x3EB2B00
	635 Move X21, X0
	636 Call 0x3EB2AE0
	637 Move X21, X0
	638 NotImplemented "Instruction CMP not yet implemented."
	639 Move X0, X21
	640 Call 0x3EB2AD0
	641 Move X19, X0
	642 Move X0, 0x232F000
	643 Move X0, [X0+2000]
	644 Call 0x1C17D08
	645 Move X8, [X19]
	646 Move X1, [X8]
	647 Call 0x1C18270
	648 Move TEMP, X0
	649 And TEMP, TEMP, 1
	650 Compare TEMP, 1
	651 JumpIfNotEqual {675}
	652 Move X19, [X19]
	653 Call 0x3EB2AE0
	654 Move X0, 0x232F000
	655 Move X0, [X0+1928]
	656 Call 0x1C17D08
	657 Move W8, [X0+224]
	658 Compare W8, 0
	659 JumpIfNotEqual {661}
	660 Call 0x1C17DFC
	661 Move X0, 0x2334000
	662 Move X0, [X0+384]
	663 Call 0x1C17D08
	664 Move X20, X0
	665 Move X0, 0x2334000
	666 Move X0, [X0+392]
	667 Call 0x1C17D08
	668 Move X3, X0
	669 Move W4, 502
	670 Move X0, X19
	671 Move X1, X31
	672 Move X2, X20
	673 Move X5, X31
	674 Call Log.Error, X0, X1, X2, X3, X4
	675 Move W0, 8
	676 Call 0x3EB2AF0
	677 Move X8, [X19]
	678 Move [X0], X8
	679 Move X1, 0x20F0000
	680 Add X1, X1, 3672
	681 Move X2, X31
	682 Call 0x3EB2B00
	683 Move X21, X0
	684 Call 0x3EB2AE0
	685 Move X0, X21
	686 Call 0x1D2D690
	687 Call 0x1991590

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x01DC60DC LDR X21, [X8 + 0x20]
	0x01DC60E0 LDR X24, [X24 + 0x1D8]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01DC60E4 MOV X0, X20
	0x01DC60E8 BL 0x1C16F10
	0x01DC60EC LDR X2, [X24]
	0x01DC60F0 MOV X1, X19
	0x01DC60F4 MOV X3, X31
	0x01DC60F8 MOV X20, X0
	0x01DC60FC BL 0x2A6DA40
	0x01DC6100 MOV X0, X21
	0x01DC6104 MOV X1, X20
	0x01DC6108 MOV X2, X31
	0x01DC610C BL 0x33C0FDC
	0x01DC6110 CBZ X0, 0x1DC6154
	0x01DC6114 LDR X21, [X23]
	0x01DC6118 MOV X20, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x232E000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2333000
	011 Move X0, [X0+400]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01DC611C MOV X1, X21
	0x01DC6120 BL 0x1C16E00

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

