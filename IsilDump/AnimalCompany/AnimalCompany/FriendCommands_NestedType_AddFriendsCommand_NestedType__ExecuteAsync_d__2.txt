Type: AnimalCompany.FriendCommands/AddFriendsCommand/<ExecuteAsync>d__2

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01D3ECEC LDR X0, [X20 + 0x60]
	0x01D3ECF0 LDR X8, [X8 + 0x50]
	0x01D3ECF4 LDR X1, [X8]
	0x01D3ECF8 BL 0x21B2678
	0x01D3ECFC TBZ X0, 0x0, 0x1D3EE84
	0x01D3ED00 ADRP X8, 0x23B6000
	0x01D3ED04 LDR X0, [X20 + 0x60]
	0x01D3ED08 LDR X8, [X8 + 0x58]
	0x01D3ED0C LDR X1, [X8]
	0x01D3ED10 BL 0x21BD4C4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01D3EDA0 LDR X8, [X8 + 0xFB8]

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01D3EDA4 LDR X0, [X8]
	0x01D3EDA8 BL 0x1C16F10
	0x01D3EDAC ADRP X8, 0x23B6000
	0x01D3EDB0 LDR X8, [X8 + 0xC0]
	0x01D3EDB4 MOV X1, X20
	0x01D3EDB8 MOV X3, X31
	0x01D3EDBC MOV X21, X0
	0x01D3EDC0 LDR X2, [X8]
	0x01D3EDC4 BL 0x35BFCF0
	0x01D3EDC8 ADRP X8, 0x23B6000
	0x01D3EDCC LDR X8, [X8 + 0xC8]
	0x01D3EDD0 MOV X1, X21
	0x01D3EDD4 MOV W2, W31
	0x01D3EDD8 MOV X3, X31
	0x01D3EDDC LDR X0, [X8]
	0x01D3EDE0 MOV X4, X31
	0x01D3EDE4 BL 0x35BC358
	0x01D3EDE8 STR X0, [X19 + 0x18]
	0x01D3EDEC MOVZ W0, 0x1
	0x01D3EDF0 STR W0, [X19 + 0x10]
	0x01D3EDF4 B 0x1D3EE88
	0x01D3EDF8 MOVN W8, 0x0
	0x01D3EDFC STR W8, [X19 + 0x10]
	0x01D3EE00 ADRP X8, 0x23B5000
	0x01D3EE04 LDR X8, [X8 + 0xAB0]
	0x01D3EE08 MOVZ W1, 0x1
	0x01D3EE0C LDR X0, [X8]
	0x01D3EE10 BL 0x1C16D6C
	0x01D3EE14 CBZ X20, 0x1D3EE98
	0x01D3EE18 ADRP X8, 0x23B6000
	0x01D3EE1C LDR X21, [X20 + 0x60]
	0x01D3EE20 LDR X8, [X8 + 0xB8]
	0x01D3EE24 MOV X19, X0
	0x01D3EE28 LDR X0, [X8]
	0x01D3EE2C BL 0x1C16F10
	0x01D3EE30 MOV X1, X31
	0x01D3EE34 MOV X20, X0
	0x01D3EE38 BL 0x33BDD8C
	0x01D3EE3C STR X21, [X20 + 0x18]
	0x01D3EE40 CBZ X19, 0x1D3EE98
	0x01D3EE44 LDR X8, [X19]
	0x01D3EE48 MOV X0, X20
	0x01D3EE4C LDR X1, [X8 + 0x40]
	0x01D3EE50 BL 0x1C16E00
	0x01D3EE54 CBZ X0, 0x1D3EE9C
	0x01D3EE58 LDR W8, [X19 + 0x18]
	0x01D3EE5C CBZ W8, 0x1D3EEA8
	0x01D3EE60 STR X20, [X19 + 0x20]
	0x01D3EE64 ADRP X8, 0x23B5000
	0x01D3EE68 LDR X8, [X8 + 0x648]
	0x01D3EE6C LDR X0, [X8]
	0x01D3EE70 LDR W8, [X0 + 0xE0]
	0x01D3EE74 CBNZ W8, 0x1D3EE7C
	0x01D3EE78 BL 0x1C16DFC
	0x01D3EE7C MOV X0, X19
	0x01D3EE80 BL 0x1D35B1C
	0x01D3EE84 MOV W0, W31
	0x01D3EE88 LDP X20, X19, [X31 + 0x20]
	0x01D3EE8C LDP X30, X21, [X31 + 0x10]
	0x01D3EE90 ADD X31, X31, 0x30
	0x01D3EE94 RET
	0x01D3EE98 BL 0x1C16F20
	0x01D3EE9C BL 0x1C16F44
	0x01D3EEA0 MOV X1, X31
	0x01D3EEA4 BL 0x1C16DEC
	0x01D3EEA8 BL 0x1C16F28
	0x01D3EEAC LDR X0, [X0 + 0x18]
	0x01D3EEB0 RET
	0x01D3EEB4 STP X30, X19, [X31 - 0x10]!
	0x01D3EEB8 ADRP X0, 0x23B5000
	0x01D3EEBC LDR X0, [X0 + 0xB40]
	0x01D3EEC0 BL 0x1C16D08
	0x01D3EEC4 BL 0x1C16F10
	0x01D3EEC8 MOV X1, X31
	0x01D3EECC MOV X19, X0
	0x01D3EED0 BL 0x3380310
	0x01D3EED4 ADRP X0, 0x23B6000
	0x01D3EED8 LDR X0, [X0 + 0xD8]
	0x01D3EEDC BL 0x1C16D08
	0x01D3EEE0 MOV X1, X0
	0x01D3EEE4 MOV X0, X19
	0x01D3EEE8 BL 0x1C16DEC
	0x01D3EEEC LDR X0, [X0 + 0x18]
	0x01D3EEF0 RET
	0x01D3EEF4 STP X30, X21, [X31 - 0x20]!
	0x01D3EEF8 STP X20, X19, [X31 + 0x10]
	0x01D3EEFC ADRP X20, 0x269A000
	0x01D3EF00 ADRP X21, 0x23B6000
	0x01D3EF04 LDRB W8, [X20 + 0x736]
	0x01D3EF08 LDR X21, [X21 + 0xE0]
	0x01D3EF0C MOV X19, X0
	0x01D3EF10 TBNZ X8, 0x0, 0x1D3EF28
	0x01D3EF14 ADRP X0, 0x23B6000
	0x01D3EF18 LDR X0, [X0 + 0xE0]
	0x01D3EF1C BL 0x1C16CF4
	0x01D3EF20 MOVZ W8, 0x1
	0x01D3EF24 STRB W8, [X20 + 0x736]
	0x01D3EF28 LDR X0, [X21]
	0x01D3EF2C BL 0x1C16F10
	0x01D3EF30 MOV X1, X31
	0x01D3EF34 MOV X20, X0
	0x01D3EF38 BL 0x33BDD8C
	0x01D3EF3C STR W31, [X20 + 0x10]
	0x01D3EF40 STR X19, [X20 + 0x20]
	0x01D3EF44 MOV X0, X20
	0x01D3EF48 LDP X20, X19, [X31 + 0x10]
	0x01D3EF4C LDP X30, X21, [X31], #0x20
	0x01D3EF50 RET
	0x01D3EF54 STR X30, [X31 - 0x20]!
	0x01D3EF58 STP X20, X19, [X31 + 0x10]
	0x01D3EF5C MOV W19, W1
	0x01D3EF60 MOV X1, X31
	0x01D3EF64 MOV X20, X0
	0x01D3EF68 BL 0x33BDD8C
	0x01D3EF6C STR W19, [X20 + 0x10]
	0x01D3EF70 LDP X20, X19, [X31 + 0x10]
	0x01D3EF74 LDR X30, [X31], #0x20
	0x01D3EF78 RET
	0x01D3EF7C STR X30, [X31 - 0x30]!
	0x01D3EF80 STP X22, X21, [X31 + 0x10]
	0x01D3EF84 STP X20, X19, [X31 + 0x20]
	0x01D3EF88 ADRP X22, 0x269A000
	0x01D3EF8C ADRP X21, 0x23B5000
	0x01D3EF90 LDRB W8, [X22 + 0x737]
	0x01D3EF94 LDR X21, [X21 + 0x648]
	0x01D3EF98 MOV X19, X1
	0x01D3EF9C MOV X20, X0
	0x01D3EFA0 TBNZ X8, 0x0, 0x1D3EFC4
	0x01D3EFA4 ADRP X0, 0x23B5000
	0x01D3EFA8 LDR X0, [X0 + 0x648]
	0x01D3EFAC BL 0x1C16CF4
	0x01D3EFB0 ADRP X0, 0x23B5000
	0x01D3EFB4 LDR X0, [X0 + 0xAC8]
	0x01D3EFB8 BL 0x1C16CF4
	0x01D3EFBC MOVZ W8, 0x1
	0x01D3EFC0 STRB W8, [X22 + 0x737]
	0x01D3EFC4 LDR X0, [X21]
	0x01D3EFC8 ADRP X22, 0x23B5000
	0x01D3EFCC LDR W8, [X0 + 0xE0]
	0x01D3EFD0 LDR X22, [X22 + 0xAC8]
	0x01D3EFD4 CBNZ W8, 0x1D3EFDC
	0x01D3EFD8 BL 0x1C16DFC
	0x01D3EFDC BL 0x1D32AF4
	0x01D3EFE0 MOV X21, X0
	0x01D3EFE4 BL 0x1D32B7C
	0x01D3EFE8 LDR X8, [X22]
	0x01D3EFEC MOV X22, X0
	0x01D3EFF0 MOVZ W1, 0x1
	0x01D3EFF4 MOV X0, X8
	0x01D3EFF8 BL 0x1C16D6C
	0x01D3EFFC CBZ X0, 0x1D3F044

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x269B000
	007 Move W8, [X20+1833]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0x23B6000
	014 Move X0, [X0+4064]
	015 Call 0x1C17CF4
	016 Move X0, 0x23B6000
	017 Move X0, [X0+1608]
	018 Call 0x1C17CF4
	019 Move X0, 0x23B6000
	020 Move X0, [X0+3944]
	021 Call 0x1C17CF4
	022 Move X0, 0x23B6000
	023 Move X0, [X0+4072]
	024 Call 0x1C17CF4
	025 Move X0, 0x23B6000
	026 Move X0, [X0+4024]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+1833], W8
	030 Move [X31+8], X31
	031 Move W8, [X19+16]
	032 Subtract W9, W8, 2
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X20, [X19+32]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Compare W8, 0
	037 JumpIfNotEqual {73}
	038 Move TEMP, 0
	039 Not TEMP
	040 Move W8, TEMP
	041 Move [X19+16], W8
	042 Compare X20, 0
	043 JumpIfEqual {170}
	044 Move X8, [X20+88]
	045 Compare X8, 0
	046 JumpIfEqual {170}
	047 Move X8, [X8+24]
	048 Compare X8, 0
	049 JumpIfEqual {73}
	050 Move X8, 0x23B6000
	051 Move X8, [X8+4024]
	052 Move X0, [X8]
	053 Call 0x1C17F10
	054 Move X8, 0x23B6000
	055 Move X8, [X8+4064]
	056 Move X1, X20
	057 Move X3, X31
	058 Move X21, X0
	059 Move X2, [X8]
	060 Call TaskGenerator..ctor, X0, X1, X2
	061 Move X0, X21
	062 Move W1, W31
	063 Move X2, X31
	064 Move X3, X31
	065 Call Commands.Task, X0, X1, X2
	066 Move W21, 1
	067 Move [X19+24], X0
	068 Move [X19+16], W21
	069 Move TEMP, 0
	070 Not TEMP
	071 Move W8, TEMP
	072 Move [X19+16], W8
	073 Move W21, W31
	074 Move TEMP, 0
	075 Not TEMP
	076 Move W8, TEMP
	077 Move [X19+16], W8
	078 Compare X20, 0
	079 JumpIfEqual {170}
	080 Move X9, [X20+88]
	081 Move W8, W31
	082 Move [X19+48], W31
	083 Move [X19+40], X9
	084 Move X21, 0x23B6000
	085 Move X21, [X21+1608]
	086 Add X8, X9, W8
	087 Move X20, [X8+32]
	088 Move X0, [X21]
	089 Move W9, [X0+224]
	090 Compare W9, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 Move X22, 0x269B000
	094 Move W8, [X22+1927]
	095 Compare W8, 0
	096 JumpIfNotEqual {102}
	097 Move X0, 0x23B6000
	098 Move X0, [X0+1608]
	099 Call 0x1C17CF4
	100 Move W8, 1
	101 Move [X22+1927], W8
	102 Move X0, [X21]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {108}
	106 Call 0x1C17DFC
	107 Move X0, [X21]
	108 Move X8, [X0+184]
	109 Move X8, [X8]
	110 Compare X8, 0
	111 JumpIfEqual {170}
	112 Move X8, [X8+184]
	113 Compare X8, 0
	114 JumpIfEqual {170}
	115 Move X8, [X8+160]
	116 Compare X8, 0
	117 JumpIfEqual {170}
	118 Move X0, [X8+72]
	119 Compare X0, 0
	120 JumpIfEqual {170}
	121 Move X8, 0x23B6000
	122 Move X8, [X8+3944]
	123 Add X2, X31, 8
	124 Move X1, X20
	125 Move X3, [X8]
	126 Call StateDictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	127 Move TEMP, X0
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfNotEqual {149}
	131 Move X8, [X31+8]
	132 Compare X8, 0
	133 JumpIfEqual {170}
	134 Move X8, [X8+104]
	135 Compare X8, 0
	136 JumpIfEqual {170}
	137 Move W8, [X8+76]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move W8, [X19+48]
	140 Move X9, [X19+40]
	141 Add W8, W8, 1
	142 Move [X19+48], W8
	143 Compare X9, 0
	144 JumpIfEqual {170}
	145 Move W10, [X9+24]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move W21, W31
	148 Move [X19+40], X31
	149 Move W1, 1
	150 Move X0, X20
	151 Move W21, 1
	152 Call FriendCommands.UpdateFriendshipState, X0, X1
	153 Move W8, 3
	154 Move [X19+24], X0
	155 Move [X19+16], W8
	156 Move X0, X20
	157 Move W1, W31
	158 Call FriendCommands.UpdateFriendshipState, X0, X1
	159 Move W8, 2
	160 Move [X19+24], X0
	161 Move [X19+16], W8
	162 Move W21, 1
	163 Move W0, W21
	164 Move X20, [X31+32]
	165 Move X19, [X31+40]
	166 Move X22, [X31+16]
	167 Move X21, [X31+24]
	168 Move X30, [X31+48]
	169 Return X0
	170 Call 0x1C17F20
	171 Call 0x1C17F28

Method: SpatialSys.CommandLib.Command System.Collections.Generic.IEnumerator<SpatialSys.CommandLib.Command>.get_Current()

Disassembly:
	0x01D3F000 LDR W8, [X0 + 0x18]
	0x01D3F004 MOV X2, X0

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01D3F008 CBZ W8, 0x1D3F048
	0x01D3F00C LDR X8, [X20 + 0x58]
	0x01D3F010 STR X8, [X2 + 0x20]
	0x01D3F014 CBZ X21, 0x1D3F044
	0x01D3F018 MOV X0, X21
	0x01D3F01C MOV X1, X22
	0x01D3F020 MOV X6, X19
	0x01D3F024 LDP X20, X19, [X31 + 0x20]
	0x01D3F028 LDP X22, X21, [X31 + 0x10]
	0x01D3F02C MOV X3, X31
	0x01D3F030 MOV X4, X31
	0x01D3F034 MOV X5, X31
	0x01D3F038 MOV X7, X31
	0x01D3F03C LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x23B5000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x23B5000
	011 Move X0, [X0+4080]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01D3F040 B 0x1D6BECC
	0x01D3F044 BL 0x1C16F20

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

