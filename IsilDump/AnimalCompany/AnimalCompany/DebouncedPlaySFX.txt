Type: AnimalCompany.DebouncedPlaySFX

Method: System.Void Awake()

Disassembly:
	0x01E0345C ADD X0, X31, 0x8
	0x01E03460 LDR X1, [X8]
	0x01E03464 BL 0x2BC434C
	0x01E03468 CBZ X20, 0x1E0340C

ISIL:
	001 Move V0, [X0+48]
	002 NotImplemented "Instruction FNEG not yet implemented."
	003 Move [X0+52], S0
	004 Return 

Method: System.Void OnEnable()

Disassembly:
	0x01E0346C MOV X0, X20
	0x01E03470 BL 0x1C16F18
	0x01E03474 MOV X20, X31
	0x01E03478 B 0x1E03480
	0x01E0347C MOV X19, X0
	0x01E03480 ADRP X8, 0x22F6000
	0x01E03484 LDR X8, [X8 + 0x7C8]
	0x01E03488 LDR X1, [X8]
	0x01E0348C ADD X0, X31, 0x8
	0x01E03490 BL 0x2BC434C
	0x01E03494 CBNZ X20, 0x1E034A0
	0x01E03498 MOV X0, X19
	0x01E0349C BL 0x1D2C690
	0x01E034A0 MOV X0, X20
	0x01E034A4 BL 0x1C16F18
	0x01E034A8 BL 0x1990590
	0x01E034AC ADRP X8, 0xFFFFFFFFFECE8000
	0x01E034B0 LDR V0, [X8 + 0xA7]
	0x01E034B4 MOVZ W8, 0x3333
	0x01E034B8 MOVK W8, 0x3F730000
	0x01E034BC MOV X1, X31
	0x01E034C0 STR W8, [X0 + 0x18]
	0x01E034C4 STR V0, [X0 + 0x3]
	0x01E034C8 B 0x3C36D2C
	0x01E034CC STR X30, [X31 - 0x30]!
	0x01E034D0 STP X22, X21, [X31 + 0x10]
	0x01E034D4 STP X20, X19, [X31 + 0x20]
	0x01E034D8 ADRP X21, 0x25D5000
	0x01E034DC ADRP X22, 0x22F6000
	0x01E034E0 ADRP X19, 0x22F6000
	0x01E034E4 ADRP X20, 0x22F6000
	0x01E034E8 LDRB W8, [X21 + 0xD80]
	0x01E034EC LDR X22, [X22 + 0x7E8]
	0x01E034F0 LDR X19, [X19 + 0x7F0]
	0x01E034F4 LDR X20, [X20 + 0x7F8]
	0x01E034F8 TBNZ X8, 0x0, 0x1E03528
	0x01E034FC ADRP X0, 0x22F6000
	0x01E03500 LDR X0, [X0 + 0x7F0]
	0x01E03504 BL 0x1C16CF4
	0x01E03508 ADRP X0, 0x22F6000
	0x01E0350C LDR X0, [X0 + 0x7E8]
	0x01E03510 BL 0x1C16CF4
	0x01E03514 ADRP X0, 0x22F6000
	0x01E03518 LDR X0, [X0 + 0x7F8]
	0x01E0351C BL 0x1C16CF4
	0x01E03520 MOVZ W8, 0x1
	0x01E03524 STRB W8, [X21 + 0xD80]
	0x01E03528 LDR X0, [X22]
	0x01E0352C BL 0x1C16F10
	0x01E03530 LDR X1, [X19]
	0x01E03534 MOV X19, X0
	0x01E03538 BL 0x2AA4804
	0x01E0353C LDR X0, [X20]
	0x01E03540 LDR W8, [X0 + 0xE0]
	0x01E03544 CBNZ W8, 0x1E03550
	0x01E03548 BL 0x1C16DFC
	0x01E0354C LDR X0, [X20]
	0x01E03550 LDR X8, [X0 + 0xB8]
	0x01E03554 LDP X22, X21, [X31 + 0x10]
	0x01E03558 STR X19, [X8]
	0x01E0355C LDP X20, X19, [X31 + 0x20]
	0x01E03560 LDR X30, [X31], #0x30
	0x01E03564 RET
	0x01E03568 STR X30, [X31 - 0x30]!
	0x01E0356C STP X22, X21, [X31 + 0x10]
	0x01E03570 STP X20, X19, [X31 + 0x20]
	0x01E03574 ADRP X21, 0x25D5000
	0x01E03578 ADRP X22, 0x22F6000
	0x01E0357C LDRB W8, [X21 + 0xD81]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x25D6000
	008 Move X20, 0x22F1000
	009 Move W8, [X21+3443]
	010 Move X20, [X20+1432]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x22F3000
	017 Move X0, [X0+1744]
	018 Call 0x1C17CF4
	019 Move X0, 0x22F7000
	020 Move X0, [X0+1920]
	021 Call 0x1C17CF4
	022 Move X0, 0x22F1000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+3443], W8
	027 Move X0, [X20]
	028 Move X20, [X19+32]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X20
	034 Move X1, X31
	035 Move X2, X31
	036 Call Object.op_Equality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {79}
	041 Move X22, [X19+32]
	042 Compare X22, 0
	043 JumpIfEqual {86}
	044 Move X23, 0x22F3000
	045 Move X20, [X22+32]
	046 Move X23, [X23+1744]
	047 Move X0, [X23]
	048 Call 0x1C17F10
	049 Move X8, 0x22F7000
	050 Move X8, [X8+1920]
	051 Move X1, X19
	052 Move X3, X31
	053 Move X21, X0
	054 Move X2, [X8]
	055 Call Action`1<Object>..ctor, X0, X1, X2
	056 Move X0, X20
	057 Move X1, X21
	058 Move X2, X31
	059 Call Delegate.Combine, X0, X1
	060 Compare X0, 0
	061 JumpIfEqual {78}
	062 Move X20, [X23]
	063 Move X19, X0
	064 Move X1, X20
	065 Call 0x1C17E00
	066 Compare X0, 0
	067 JumpIfEqual {75}
	068 Move [X22+32], X0
	069 Move X20, [X23]
	070 Move X0, X19
	071 Move X1, X20
	072 Call 0x1C17E00
	073 Compare X0, 0
	074 JumpIfNotEqual {79}
	075 Move X0, X19
	076 Move X1, X20
	077 Call 0x1C181E0
	078 Move [X22+32], X31
	079 Move X20, [X31+32]
	080 Move X19, [X31+40]
	081 Move X22, [X31+16]
	082 Move X21, [X31+24]
	083 Move X30, [X31+48]
	084 Move X23, [X31+56]
	085 Return 
	086 Call 0x1C17F20

Method: System.Void OnDisable()

Disassembly:
	0x01E03580 LDR X22, [X22 + 0x7F8]
	0x01E03584 MOV X19, X1
	0x01E03588 MOV X20, X0
	0x01E0358C TBNZ X8, 0x0, 0x1E035D4
	0x01E03590 ADRP X0, 0x22F6000
	0x01E03594 LDR X0, [X0 + 0x800]
	0x01E03598 BL 0x1C16CF4
	0x01E0359C ADRP X0, 0x22F6000
	0x01E035A0 LDR X0, [X0 + 0x808]
	0x01E035A4 BL 0x1C16CF4
	0x01E035A8 ADRP X0, 0x22F0000
	0x01E035AC LDR X0, [X0 + 0x598]
	0x01E035B0 BL 0x1C16CF4
	0x01E035B4 ADRP X0, 0x22F6000
	0x01E035B8 LDR X0, [X0 + 0x810]
	0x01E035BC BL 0x1C16CF4
	0x01E035C0 ADRP X0, 0x22F6000
	0x01E035C4 LDR X0, [X0 + 0x7F8]
	0x01E035C8 BL 0x1C16CF4
	0x01E035CC MOVZ W8, 0x1
	0x01E035D0 STRB W8, [X21 + 0xD81]
	0x01E035D4 LDR X0, [X22]
	0x01E035D8 LDR W8, [X0 + 0xE0]
	0x01E035DC CBNZ W8, 0x1E035E8
	0x01E035E0 BL 0x1C16DFC
	0x01E035E4 LDR X0, [X22]
	0x01E035E8 LDR X8, [X0 + 0xB8]
	0x01E035EC LDR X0, [X8]
	0x01E035F0 CBZ X0, 0x1E036AC
	0x01E035F4 ADRP X8, 0x22F6000
	0x01E035F8 LDR X8, [X8 + 0x800]
	0x01E035FC MOV X1, X20
	0x01E03600 MOV X2, X19
	0x01E03604 LDR X3, [X8]
	0x01E03608 BL 0x2AA6B2C
	0x01E0360C TBZ X0, 0x0, 0x1E03620
	0x01E03610 ADRP X8, 0x22F0000
	0x01E03614 LDR X8, [X8 + 0x598]
	0x01E03618 LDR X21, [X19]
	0x01E0361C B 0x1E03680
	0x01E03620 ADRP X8, 0x22F6000
	0x01E03624 LDR X8, [X8 + 0x810]
	0x01E03628 MOV X0, X20
	0x01E0362C LDR X1, [X8]
	0x01E03630 BL 0x2241FB8
	0x01E03634 LDR X8, [X22]
	0x01E03638 MOV X21, X0
	0x01E0363C LDR W9, [X8 + 0xE0]
	0x01E03640 CBNZ W9, 0x1E03650
	0x01E03644 MOV X0, X8
	0x01E03648 BL 0x1C16DFC
	0x01E0364C LDR X8, [X22]
	0x01E03650 LDR X8, [X8 + 0xB8]
	0x01E03654 LDR X0, [X8]
	0x01E03658 CBZ X0, 0x1E036AC
	0x01E0365C ADRP X8, 0x22F6000
	0x01E03660 LDR X8, [X8 + 0x808]
	0x01E03664 MOV X1, X20
	0x01E03668 MOV X2, X21
	0x01E0366C LDR X3, [X8]
	0x01E03670 BL 0x2AA5084
	0x01E03674 STR X21, [X19]
	0x01E03678 ADRP X8, 0x22F0000
	0x01E0367C LDR X8, [X8 + 0x598]
	0x01E03680 LDR X0, [X8]
	0x01E03684 LDR W8, [X0 + 0xE0]
	0x01E03688 CBNZ W8, 0x1E03690
	0x01E0368C BL 0x1C16DFC
	0x01E03690 MOV X0, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x25D6000
	008 Move X20, 0x22F1000
	009 Move W8, [X21+3444]
	010 Move X20, [X20+1432]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x22F3000
	017 Move X0, [X0+1744]
	018 Call 0x1C17CF4
	019 Move X0, 0x22F7000
	020 Move X0, [X0+1920]
	021 Call 0x1C17CF4
	022 Move X0, 0x22F1000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+3444], W8
	027 Move X0, [X20]
	028 Move X20, [X19+32]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X20
	034 Move X1, X31
	035 Move X2, X31
	036 Call Object.op_Equality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {79}
	041 Move X22, [X19+32]
	042 Compare X22, 0
	043 JumpIfEqual {86}
	044 Move X23, 0x22F3000
	045 Move X20, [X22+32]
	046 Move X23, [X23+1744]
	047 Move X0, [X23]
	048 Call 0x1C17F10
	049 Move X8, 0x22F7000
	050 Move X8, [X8+1920]
	051 Move X1, X19
	052 Move X3, X31
	053 Move X21, X0
	054 Move X2, [X8]
	055 Call Action`1<Object>..ctor, X0, X1, X2
	056 Move X0, X20
	057 Move X1, X21
	058 Move X2, X31
	059 Call Delegate.Remove, X0, X1
	060 Compare X0, 0
	061 JumpIfEqual {78}
	062 Move X20, [X23]
	063 Move X19, X0
	064 Move X1, X20
	065 Call 0x1C17E00
	066 Compare X0, 0
	067 JumpIfEqual {75}
	068 Move [X22+32], X0
	069 Move X20, [X23]
	070 Move X0, X19
	071 Move X1, X20
	072 Call 0x1C17E00
	073 Compare X0, 0
	074 JumpIfNotEqual {79}
	075 Move X0, X19
	076 Move X1, X20
	077 Call 0x1C181E0
	078 Move [X22+32], X31
	079 Move X20, [X31+32]
	080 Move X19, [X31+40]
	081 Move X22, [X31+16]
	082 Move X21, [X31+24]
	083 Move X30, [X31+48]
	084 Move X23, [X31+56]
	085 Return 
	086 Call 0x1C17F20

Method: System.Void PlaySFX(UnityEngine.Collider other)

Disassembly:
	0x01E03694 LDP X20, X19, [X31 + 0x20]
	0x01E03698 LDP X22, X21, [X31 + 0x10]
	0x01E0369C MOV X1, X31
	0x01E036A0 MOV X2, X31
	0x01E036A4 LDR X30, [X31], #0x30
	0x01E036A8 B 0x3C354F8
	0x01E036AC BL 0x1C16F20
	0x01E036B0 STR X30, [X31 - 0x30]!
	0x01E036B4 STP X22, X21, [X31 + 0x10]
	0x01E036B8 STP X20, X19, [X31 + 0x20]
	0x01E036BC ADRP X21, 0x25D5000
	0x01E036C0 ADRP X22, 0x22F6000
	0x01E036C4 ADRP X19, 0x22F6000
	0x01E036C8 ADRP X20, 0x22F6000
	0x01E036CC LDRB W8, [X21 + 0xD82]
	0x01E036D0 LDR X22, [X22 + 0x7E8]
	0x01E036D4 LDR X19, [X19 + 0x7F0]
	0x01E036D8 LDR X20, [X20 + 0x7F8]
	0x01E036DC TBNZ X8, 0x0, 0x1E0370C
	0x01E036E0 ADRP X0, 0x22F6000
	0x01E036E4 LDR X0, [X0 + 0x7F0]
	0x01E036E8 BL 0x1C16CF4
	0x01E036EC ADRP X0, 0x22F6000
	0x01E036F0 LDR X0, [X0 + 0x7E8]
	0x01E036F4 BL 0x1C16CF4
	0x01E036F8 ADRP X0, 0x22F6000
	0x01E036FC LDR X0, [X0 + 0x7F8]
	0x01E03700 BL 0x1C16CF4
	0x01E03704 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], D9
	002 Move [X31-24], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X19
	005 Compare X1, 0
	006 JumpIfEqual {35}
	007 Move X19, X0
	008 Move X0, X1
	009 Move X1, X31
	010 Call Component.get_gameObject, X0
	011 Compare X0, 0
	012 JumpIfEqual {35}
	013 Move X1, X31
	014 Call GameObject.get_layer, X0
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move S9, [X19+48]
	017 Move S8, [X19+52]
	018 Move X0, X31
	019 Call Time.get_time
	020 Add S1, S8, S9
	021 NotImplemented "Instruction FCMP not yet implemented."
	022 Move X0, [X19+40]
	023 Compare X0, 0
	024 JumpIfEqual {35}
	025 Move X1, X31
	026 Call AudioSource.Play, X0
	027 Move X0, X31
	028 Call Time.get_time
	029 Move [X19+52], S0
	030 Move X30, [X31+16]
	031 Move X19, [X31+24]
	032 Move D9, [X31+32]
	033 Move D8, [X31+40]
	034 Return 
	035 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01E03708 STRB W8, [X21 + 0xD82]
	0x01E0370C LDR X0, [X22]
	0x01E03710 BL 0x1C16F10
	0x01E03714 LDR X1, [X19]

ISIL:
	001 Move W8, 0x42700000
	002 Move X1, X31
	003 Move [X0+48], W8
	004 Call MonoBehaviour..ctor, X0
	005 Return 

