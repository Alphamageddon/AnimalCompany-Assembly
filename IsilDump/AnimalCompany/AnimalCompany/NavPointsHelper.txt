Type: AnimalCompany.NavPointsHelper

Method: System.Void ApplyRotation()

Disassembly:
	0x01CD3FD0 STUR V0, [X8 + 0x14]
	0x01CD3FD4 LDP X30, X21, [X31], #0x20
	0x01CD3FD8 RET
	0x01CD3FDC STR D8, [X31 - 0x30]!
	0x01CD3FE0 STP X30, X21, [X31 + 0x10]
	0x01CD3FE4 STP X20, X19, [X31 + 0x20]
	0x01CD3FE8 ADRP X21, 0x2550000
	0x01CD3FEC ADRP X20, 0x227A000
	0x01CD3FF0 LDRB W8, [X21 + 0x5E9]
	0x01CD3FF4 LDR X20, [X20 + 0x478]
	0x01CD3FF8 MOV V8.16B, V0.16B
	0x01CD3FFC MOV X19, X0
	0x01CD4000 TBNZ X8, 0x0, 0x1CD4024
	0x01CD4004 ADRP X0, 0x227A000
	0x01CD4008 LDR X0, [X0 + 0x6A0]
	0x01CD400C BL 0x1B6E7F0
	0x01CD4010 ADRP X0, 0x2279000
	0x01CD4014 LDR X0, [X0 + 0x478]
	0x01CD4018 BL 0x1B6E7F0
	0x01CD401C MOVZ W8, 0x1
	0x01CD4020 STRB W8, [X21 + 0x5E9]
	0x01CD4024 LDR X0, [X20]
	0x01CD4028 LDR X20, [X19 + 0x30]
	0x01CD402C LDR W8, [X0 + 0xE0]
	0x01CD4030 CBNZ W8, 0x1CD4038
	0x01CD4034 BL 0x1B6E8F8
	0x01CD4038 MOV X0, X20
	0x01CD403C MOV X1, X31
	0x01CD4040 MOV X2, X31
	0x01CD4044 BL 0x3AA0AF0
	0x01CD4048 TBZ X0, 0x0, 0x1CD4080
	0x01CD404C ADRP X8, 0x227A000
	0x01CD4050 LDR X8, [X8 + 0x6A0]
	0x01CD4054 LDR W19, [X19 + 0x4C]
	0x01CD4058 LDR X0, [X8]
	0x01CD405C LDR W8, [X0 + 0xE0]
	0x01CD4060 CBNZ W8, 0x1CD4068

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Call NavPointsHelper.GetNavPoints, X0
	008 Compare X0, 0
	009 JumpIfEqual {41}
	010 Move W8, [X0+24]
	011 Move X20, X0
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move W22, W31
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Add X8, X20, W22
	016 Move X0, [X8+32]
	017 Compare X0, 0
	018 JumpIfEqual {41}
	019 Move X1, X31
	020 Call Component.get_transform, X0
	021 Move S0, [X19+36]
	022 Move S1, [X19+40]
	023 Move V2, [X19+44]
	024 Move X21, X0
	025 Move X0, X31
	026 Call Quaternion.LookRotation, X0
	027 Compare X21, 0
	028 JumpIfEqual {41}
	029 Move X0, X21
	030 Move X1, X31
	031 Call Transform.set_rotation, X0, X1
	032 Move W8, [X20+24]
	033 Add W22, W22, 1
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Return 
	041 Call 0x1B6FA1C
	042 Call 0x1B6FA24

Method: System.Void ApplyRotaionTowardsPoint()

Disassembly:
	0x01CD40B0 FMOV S0, W31
	0x01CD40B4 FCSEL S2, S1, S2, PL
	0x01CD40B8 FMOV S1, W31
	0x01CD40BC MOV X1, X31
	0x01CD40C0 LDR V8, [X31], #0x30
	0x01CD40C4 B 0x3AA6D0C
	0x01CD40C8 BL 0x1B6EA1C
	0x01CD40CC STP X30, X23, [X31 - 0x30]!
	0x01CD40D0 STP X22, X21, [X31 + 0x10]
	0x01CD40D4 STP X20, X19, [X31 + 0x20]
	0x01CD40D8 ADRP X20, 0x254F000
	0x01CD40DC ADRP X21, 0x227A000
	0x01CD40E0 LDRB W8, [X20 + 0x5EA]
	0x01CD40E4 LDR X21, [X21 + 0x6A0]
	0x01CD40E8 MOV X19, X0
	0x01CD40EC TBNZ X8, 0x0, 0x1CD4134
	0x01CD40F0 ADRP X0, 0x227A000
	0x01CD40F4 LDR X0, [X0 + 0x6C8]
	0x01CD40F8 BL 0x1B6E7F0
	0x01CD40FC ADRP X0, 0x227A000
	0x01CD4100 LDR X0, [X0 + 0x170]
	0x01CD4104 BL 0x1B6E7F0
	0x01CD4108 ADRP X0, 0x227B000
	0x01CD410C LDR X0, [X0 + 0xB00]
	0x01CD4110 BL 0x1B6E7F0
	0x01CD4114 ADRP X0, 0x227B000
	0x01CD4118 LDR X0, [X0 + 0xB08]
	0x01CD411C BL 0x1B6E7F0
	0x01CD4120 ADRP X0, 0x227A000
	0x01CD4124 LDR X0, [X0 + 0x6A0]
	0x01CD4128 BL 0x1B6E7F0
	0x01CD412C MOVZ W8, 0x1
	0x01CD4130 STRB W8, [X20 + 0x5EA]
	0x01CD4134 LDR X0, [X21]
	0x01CD4138 LDR W8, [X0 + 0xE0]
	0x01CD413C CBNZ W8, 0x1CD4144
	0x01CD4140 BL 0x1B6E8F8
	0x01CD4144 ADRP X8, 0xFFFFFFFFFEDD5000
	0x01CD4148 LDR V2, [X8 + 0xCA4]
	0x01CD414C FMOV S0, W31
	0x01CD4150 FMOV S1, 1
	0x01CD4154 MOV X0, X31
	0x01CD4158 BL 0x301B3D8
	0x01CD415C CBZ X0, 0x1CD4218
	0x01CD4160 ADRP X20, 0x227A000
	0x01CD4164 ADRP X21, 0x227B000
	0x01CD4168 LDR X20, [X20 + 0x6C8]
	0x01CD416C LDR X21, [X21 + 0xB00]
	0x01CD4170 MOV X1, X31
	0x01CD4174 BL 0x302ED48
	0x01CD4178 LDR X8, [X20]
	0x01CD417C MOV X20, X0
	0x01CD4180 MOV X0, X8
	0x01CD4184 BL 0x1B6EA0C
	0x01CD4188 LDR X2, [X21]
	0x01CD418C MOV X1, X19
	0x01CD4190 MOV X3, X31
	0x01CD4194 MOV X21, X0

ISIL:
	001 Move [X31-80], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, X0
	011 Call NavPointsHelper.GetNavPoints, X0
	012 Compare X0, 0
	013 JumpIfEqual {67}
	014 Move W8, [X0+24]
	015 Move X20, X0
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W23, W31
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Add X8, X20, W23
	020 Move X22, [X8+32]
	021 Compare X22, 0
	022 JumpIfEqual {67}
	023 Move X0, X22
	024 Move X1, X31
	025 Call Component.get_transform, X0
	026 Move S0, [X19+48]
	027 Move S1, [X19+52]
	028 Move V2, [X19+56]
	029 Move X21, X0
	030 Move X0, X31
	031 Call Extensions.Flatten, X0
	032 Move X0, X22
	033 Move X1, X31
	034 Move V8, V0
	035 Move V9, V1
	036 Move V10, V2
	037 Call Component.get_transform, X0
	038 Compare X0, 0
	039 JumpIfEqual {67}
	040 Move X1, X31
	041 Call Transform.get_position, X0
	042 Move X0, X31
	043 Call Extensions.Flatten, X0
	044 Subtract S0, S8, S0
	045 Subtract S1, S9, S1
	046 Subtract S2, S10, S2
	047 Move X0, X31
	048 Call Quaternion.LookRotation, X0
	049 Compare X21, 0
	050 JumpIfEqual {67}
	051 Move X0, X21
	052 Move X1, X31
	053 Call Transform.set_rotation, X0, X1
	054 Move W8, [X20+24]
	055 Add W23, W23, 1
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X20, [X31+64]
	058 Move X19, [X31+72]
	059 Move X22, [X31+48]
	060 Move X21, [X31+56]
	061 Move X30, [X31+32]
	062 Move X23, [X31+40]
	063 Move D9, [X31+16]
	064 Move D8, [X31+24]
	065 Move V10, [X31+80]
	066 Return 
	067 Call 0x1B6FA1C
	068 Call 0x1B6FA24

Method: System.Void ApplyLayer()

Disassembly:
	0x01CD4198 BL 0x27EE464
	0x01CD419C CBZ X20, 0x1CD4218
	0x01CD41A0 ADRP X22, 0x227A000
	0x01CD41A4 ADRP X23, 0x227B000
	0x01CD41A8 LDR X22, [X22 + 0x170]
	0x01CD41AC LDR X23, [X23 + 0xB08]
	0x01CD41B0 MOV X0, X20
	0x01CD41B4 MOV X1, X21
	0x01CD41B8 MOV X2, X31
	0x01CD41BC BL 0x303115C
	0x01CD41C0 LDR X8, [X22]
	0x01CD41C4 MOV X20, X0
	0x01CD41C8 MOV X0, X8
	0x01CD41CC BL 0x1B6EA0C
	0x01CD41D0 LDR X2, [X23]
	0x01CD41D4 MOV X1, X19
	0x01CD41D8 MOV X3, X31
	0x01CD41DC MOV X21, X0
	0x01CD41E0 BL 0x317DB24
	0x01CD41E4 CBZ X20, 0x1CD4218
	0x01CD41E8 MOV X0, X20
	0x01CD41EC MOV X1, X21
	0x01CD41F0 MOV X2, X31
	0x01CD41F4 BL 0x30310C4
	0x01CD41F8 CBZ X0, 0x1CD4218
	0x01CD41FC MOV X1, X31
	0x01CD4200 BL 0x3028CC0
	0x01CD4204 STR W0, [X19 + 0x4C]
	0x01CD4208 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Call NavPointsHelper.GetNavPoints, X0
	005 Compare X0, 0
	006 JumpIfEqual {30}
	007 Move W8, [X0+24]
	008 Move X19, X0
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W20, W31
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Add X8, X19, W20
	013 Move X0, [X8+32]
	014 Compare X0, 0
	015 JumpIfEqual {30}
	016 Move X1, X31
	017 Call Component.get_gameObject, X0
	018 Compare X0, 0
	019 JumpIfEqual {30}
	020 Move W1, 15
	021 Move X2, X31
	022 Call GameObject.set_layer, X0, X1
	023 Move W8, [X19+24]
	024 Add W20, W20, 1
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return 
	030 Call 0x1B6FA1C
	031 Call 0x1B6FA24

Method: System.Void StickToGround()

Disassembly:
	0x01CD420C LDP X22, X21, [X31 + 0x10]
	0x01CD4210 LDP X30, X23, [X31], #0x30
	0x01CD4214 RET
	0x01CD4218 BL 0x1B6EA1C
	0x01CD421C STR D8, [X31 - 0x30]!
	0x01CD4220 STP X30, X21, [X31 + 0x10]
	0x01CD4224 STP X20, X19, [X31 + 0x20]
	0x01CD4228 ADRP X21, 0x254F000
	0x01CD422C ADRP X20, 0x2279000
	0x01CD4230 LDRB W8, [X21 + 0x5EB]
	0x01CD4234 LDR X20, [X20 + 0x478]
	0x01CD4238 MOV V8.16B, V0.16B
	0x01CD423C MOV X19, X0
	0x01CD4240 TBNZ X8, 0x0, 0x1CD4264
	0x01CD4244 ADRP X0, 0x227A000
	0x01CD4248 LDR X0, [X0 + 0x6A0]
	0x01CD424C BL 0x1B6E7F0
	0x01CD4250 ADRP X0, 0x2279000
	0x01CD4254 LDR X0, [X0 + 0x478]
	0x01CD4258 BL 0x1B6E7F0
	0x01CD425C MOVZ W8, 0x1
	0x01CD4260 STRB W8, [X21 + 0x5EB]
	0x01CD4264 LDR X0, [X20]
	0x01CD4268 LDR X20, [X19 + 0x30]
	0x01CD426C LDR W8, [X0 + 0xE0]
	0x01CD4270 CBNZ W8, 0x1CD4278
	0x01CD4274 BL 0x1B6E8F8
	0x01CD4278 MOV X0, X20
	0x01CD427C MOV X1, X31
	0x01CD4280 MOV X2, X31
	0x01CD4284 BL 0x3AA0AF0
	0x01CD4288 TBZ X0, 0x0, 0x1CD42C0
	0x01CD428C ADRP X8, 0x227A000
	0x01CD4290 LDR X8, [X8 + 0x6A0]
	0x01CD4294 LDR W19, [X19 + 0x4C]
	0x01CD4298 LDR X0, [X8]
	0x01CD429C LDR W8, [X0 + 0xE0]
	0x01CD42A0 CBNZ W8, 0x1CD42A8
	0x01CD42A4 BL 0x1B6E8F8
	0x01CD42A8 MOV W0, W19
	0x01CD42AC LDP X20, X19, [X31 + 0x20]
	0x01CD42B0 LDP X30, X21, [X31 + 0x10]
	0x01CD42B4 MOV X1, X31
	0x01CD42B8 LDR V8, [X31], #0x30
	0x01CD42BC B 0x301675C
	0x01CD42C0 LDR X0, [X19 + 0x30]
	0x01CD42C4 CBZ X0, 0x1CD430C
	0x01CD42C8 ADRP X8, 0xFFFFFFFFFEDD5000
	0x01CD42CC ADRP X9, 0xFFFFFFFFFEDD5000
	0x01CD42D0 LDR V2, [X8 + 0xD38]
	0x01CD42D4 LDR V3, [X9 + 0x9EC]
	0x01CD42D8 FMOV S1, 1
	0x01CD42DC FMIN S1, S8, S1
	0x01CD42E0 LDP X20, X19, [X31 + 0x20]
	0x01CD42E4 LDP X30, X21, [X31 + 0x10]
	0x01CD42E8 FMUL S1, S1, S2
	0x01CD42EC FCMP S8, 0x0
	0x01CD42F0 FADD S1, S1, S3
	0x01CD42F4 FMOV S0, W31
	0x01CD42F8 FCSEL S2, S1, S3, PL
	0x01CD42FC FMOV S1, W31
	0x01CD4300 MOV X1, X31
	0x01CD4304 LDR V8, [X31], #0x30
	0x01CD4308 B 0x3AA6D0C
	0x01CD430C BL 0x1B6EA1C
	0x01CD4310 STP X30, X21, [X31 - 0x20]!
	0x01CD4314 STP X20, X19, [X31 + 0x10]
	0x01CD4318 ADRP X20, 0x254F000
	0x01CD431C LDRB W8, [X20 + 0x5EC]
	0x01CD4320 MOV X19, X0
	0x01CD4324 TBNZ X8, 0x0, 0x1CD433C
	0x01CD4328 ADRP X0, 0x227B000
	0x01CD432C LDR X0, [X0 + 0xAF8]
	0x01CD4330 BL 0x1B6E7F0
	0x01CD4334 MOVZ W8, 0x1
	0x01CD4338 STRB W8, [X20 + 0x5EC]
	0x01CD433C LDR X0, [X19 + 0x38]
	0x01CD4340 CBZ X0, 0x1CD43EC
	0x01CD4344 ADRP X21, 0x227B000
	0x01CD4348 LDR X21, [X21 + 0xAF8]
	0x01CD434C MOV X1, X31
	0x01CD4350 BL 0x3A7BCC8
	0x01CD4354 LDR X8, [X21]
	0x01CD4358 MOV X20, X0
	0x01CD435C LDR W9, [X8 + 0xE0]
	0x01CD4360 CBNZ W9, 0x1CD436C
	0x01CD4364 MOV X0, X8
	0x01CD4368 BL 0x1B6E8F8
	0x01CD436C CBZ X20, 0x1CD43EC
	0x01CD4370 LDR X8, [X21]
	0x01CD4374 FMOV S0, W31
	0x01CD4378 FMOV S1, W31
	0x01CD437C FMOV S2, W31
	0x01CD4380 LDR X8, [X8 + 0xB8]
	0x01CD4384 FMOV S3, 1
	0x01CD4388 MOV X0, X20
	0x01CD438C MOV X2, X31
	0x01CD4390 LDR W1, [X8]
	0x01CD4394 BL 0x3A7D234
	0x01CD4398 ADRP X20, 0x254F000
	0x01CD439C LDRB W8, [X20 + 0x43F]
	0x01CD43A0 LDR X19, [X19 + 0x30]
	0x01CD43A4 CBNZ W8, 0x1CD43BC
	0x01CD43A8 ADRP X0, 0x2279000
	0x01CD43AC LDR X0, [X0 + 0x480]
	0x01CD43B0 BL 0x1B6E7F0
	0x01CD43B4 MOVZ W8, 0x1
	0x01CD43B8 STRB W8, [X20 + 0x43F]
	0x01CD43BC CBZ X19, 0x1CD43EC
	0x01CD43C0 ADRP X8, 0x2279000
	0x01CD43C4 LDR X8, [X8 + 0x480]
	0x01CD43C8 MOV X0, X19
	0x01CD43CC LDP X20, X19, [X31 + 0x10]
	0x01CD43D0 MOV X1, X31
	0x01CD43D4 LDR X8, [X8]
	0x01CD43D8 LDR X8, [X8 + 0xB8]
	0x01CD43DC LDP S1, S2, [X8 + 0x4]
	0x01CD43E0 LDR V0, [X8]
	0x01CD43E4 LDP X30, X21, [X31], #0x20
	0x01CD43E8 B 0x3AA6D0C
	0x01CD43EC BL 0x1B6EA1C
	0x01CD43F0 STP X30, X19, [X31 - 0x10]!
	0x01CD43F4 LDR X8, [X0 + 0x50]
	0x01CD43F8 CBZ X8, 0x1CD4410
	0x01CD43FC LDR W8, [X8]
	0x01CD4400 CMP W8, 0x0
	0x01CD4404 CSET W0, NE
	0x01CD4408 LDP X30, X19, [X31], #0x10
	0x01CD440C RET
	0x01CD4410 ADRP X0, 0x2279000
	0x01CD4414 LDR X0, [X0 + 0x490]
	0x01CD4418 BL 0x1B6E804
	0x01CD441C BL 0x1B6EA0C
	0x01CD4420 MOV X19, X0
	0x01CD4424 ADRP X0, 0x227B000
	0x01CD4428 LDR X0, [X0 + 0xB10]
	0x01CD442C BL 0x1B6E804
	0x01CD4430 MOV X1, X0
	0x01CD4434 MOV X0, X19
	0x01CD4438 MOV X2, X31
	0x01CD443C BL 0x31E7550
	0x01CD4440 ADRP X0, 0x227B000
	0x01CD4444 LDR X0, [X0 + 0xB18]
	0x01CD4448 BL 0x1B6E804
	0x01CD444C MOV X1, X0
	0x01CD4450 MOV X0, X19
	0x01CD4454 BL 0x1B6E8E8
	0x01CD4458 STP X30, X19, [X31 - 0x10]!
	0x01CD445C LDR X8, [X0 + 0x50]
	0x01CD4460 CBZ X8, 0x1CD4474
	0x01CD4464 AND W9, W1, 0x1
	0x01CD4468 STR W9, [X8]
	0x01CD446C LDP X30, X19, [X31], #0x10
	0x01CD4470 RET
	0x01CD4474 ADRP X0, 0x2279000
	0x01CD4478 LDR X0, [X0 + 0x490]
	0x01CD447C BL 0x1B6E804
	0x01CD4480 BL 0x1B6EA0C
	0x01CD4484 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+64], D15
	003 Move [X31+72], D14
	004 Move [X31+80], D13
	005 Move [X31+88], D12
	006 Move [X31+96], D11
	007 Move [X31+104], D10
	008 Move [X31+112], D9
	009 Move [X31+120], D8
	010 Move [X31+128], X29
	011 Move [X31+136], X30
	012 Move [X31+144], X28
	013 Move [X31+152], X27
	014 Move [X31+160], X26
	015 Move [X31+168], X25
	016 Move [X31+176], X24
	017 Move [X31+184], X23
	018 Move [X31+192], X22
	019 Move [X31+200], X21
	020 Move [X31+208], X20
	021 Move [X31+216], X19
	022 Move X20, 0x2550000
	023 Move W8, [X20+1506]
	024 Move X19, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {37}
	029 Move X0, 0x227B000
	030 Move X0, [X0+984]
	031 Call 0x1B6F7F0
	032 Move X0, 0x227A000
	033 Move X0, [X0+1216]
	034 Call 0x1B6F7F0
	035 Move W8, 1
	036 Move [X20+1506], W8
	037 NotImplemented "Instruction MOVI not yet implemented."
	038 Move X0, X19
	039 Move [X31+44], V0
	040 Move [X31+16], V0
	041 Move [X31+24], V0
	042 Call NavPointsHelper.GetNavPoints, X0
	043 Compare X0, 0
	044 JumpIfEqual {194}
	045 Move W8, [X0+24]
	046 Move X19, X0
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X24, 0x227B000
	049 Move X25, 0x227A000
	050 Move X20, 0x227A000
	051 Move X9, -19046400
	052 Move X24, [X24+984]
	053 Move X25, [X25+1216]
	054 Move X20, [X20+1152]
	055 Move V0, [X9+2736]
	056 Move W23, W31
	057 Move X26, 0x2550000
	058 Move W27, 1
	059 Move X28, 0x2550000
	060 Move W29, 0x447A0000
	061 Move [X31+8], S0
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Add X8, X19, W23
	064 Move X21, [X8+32]
	065 Compare X21, 0
	066 JumpIfEqual {194}
	067 Move X0, X21
	068 Move X1, X31
	069 Call Component.get_transform, X0
	070 Compare X0, 0
	071 JumpIfEqual {194}
	072 Move X1, X31
	073 Call Transform.get_position, X0
	074 Move W8, [X26+1090]
	075 Move V9, V1
	076 Move V10, V2
	077 Move [X31+12], S0
	078 Compare W8, 0
	079 JumpIfNotEqual {83}
	080 Move X0, X20
	081 Call 0x1B6F7F0
	082 Move [X26+1090], W27
	083 Move X8, [X20]
	084 Move W9, [X28+1296]
	085 Move X8, [X8+184]
	086 Move S8, [X8+24]
	087 Move S14, [X8+28]
	088 Move V15, [X8+32]
	089 Compare W9, 0
	090 JumpIfNotEqual {96}
	091 Move X0, X20
	092 Call 0x1B6F7F0
	093 Move X8, [X20]
	094 Move [X28+1296], W27
	095 Move X8, [X8+184]
	096 Move X0, [X24]
	097 Move S12, [X8+36]
	098 Move S11, [X8+40]
	099 Move V13, [X8+44]
	100 Move W9, [X0+224]
	101 Compare W9, 0
	102 JumpIfNotEqual {105}
	103 Call 0x1B6F8F8
	104 Move X0, [X24]
	105 Move X8, [X0+184]
	106 Move X1, X31
	107 Move W0, [X8]
	108 Call LayerMask.op_Implicit, X0
	109 Move X8, [X25]
	110 Move W22, W0
	111 Move W9, [X8+224]
	112 Compare W9, 0
	113 JumpIfNotEqual {116}
	114 Move X0, X8
	115 Call 0x1B6F8F8
	116 Move V3, [X31+12]
	117 Move S2, 0.5
	118 Multiply S0, S8, S2
	119 Multiply S1, S14, S2
	120 Multiply S2, S15, S2
	121 Add S0, S3, S0
	122 Add S1, S9, S1
	123 Add S2, S10, S2
	124 Add X0, X31, 16
	125 Move S6, W29
	126 Move V3, V12
	127 Move V4, V11
	128 Move V5, V13
	129 Move W1, W22
	130 Move X2, X31
	131 Call Physics.Raycast, X0, X1, X2, V0, X3
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfNotEqual {169}
	136 Move X0, X21
	137 Move X1, X31
	138 Call Component.get_transform, X0
	139 Move X21, X0
	140 Add X0, X31, 16
	141 Move X1, X31
	142 Call RaycastHit.get_point, X0
	143 Move W8, [X26+1090]
	144 Move V8, V0
	145 Move V9, V1
	146 Move V10, V2
	147 Compare W8, 0
	148 JumpIfNotEqual {152}
	149 Move X0, X20
	150 Call 0x1B6F7F0
	151 Move [X26+1090], W27
	152 Compare X21, 0
	153 JumpIfEqual {194}
	154 Move X8, [X20]
	155 Move V3, [X31+8]
	156 Move X0, X21
	157 Move X1, X31
	158 Move X8, [X8+184]
	159 Move S1, [X8+28]
	160 Move S0, [X8+32]
	161 Move V2, [X8+24]
	162 Multiply S0, S0, S3
	163 Multiply S1, S1, S3
	164 Multiply S3, S2, S3
	165 Add S2, S10, S0
	166 Add S1, S9, S1
	167 Add S0, S8, S3
	168 Call Transform.set_position, X0, X1
	169 Move W8, [X19+24]
	170 Add W23, W23, 1
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move X20, [X31+208]
	173 Move X19, [X31+216]
	174 Move X22, [X31+192]
	175 Move X21, [X31+200]
	176 Move X24, [X31+176]
	177 Move X23, [X31+184]
	178 Move X26, [X31+160]
	179 Move X25, [X31+168]
	180 Move X28, [X31+144]
	181 Move X27, [X31+152]
	182 Move X29, [X31+128]
	183 Move X30, [X31+136]
	184 Move D9, [X31+112]
	185 Move D8, [X31+120]
	186 Move D11, [X31+96]
	187 Move D10, [X31+104]
	188 Move D13, [X31+80]
	189 Move D12, [X31+88]
	190 Move D15, [X31+64]
	191 Move D14, [X31+72]
	192 Add X31, X31, 224
	193 Return 
	194 Call 0x1B6FA1C
	195 Call 0x1B6FA24

Method: AnimalCompany.GameGen.NavPoint[] GetNavPoints()

Disassembly:
	0x01CD4064 BL 0x1B6E8F8
	0x01CD4068 MOV W0, W19
	0x01CD406C LDP X20, X19, [X31 + 0x20]
	0x01CD4070 LDP X30, X21, [X31 + 0x10]
	0x01CD4074 MOV X1, X31
	0x01CD4078 LDR V8, [X31], #0x30
	0x01CD407C B 0x301675C
	0x01CD4080 LDR X0, [X19 + 0x30]
	0x01CD4084 CBZ X0, 0x1CD40C8
	0x01CD4088 ADRP X8, 0xFFFFFFFFFEDD5000
	0x01CD408C LDR V3, [X8 + 0x9EC]
	0x01CD4090 FMOV S1, 1
	0x01CD4094 FMIN S1, S8, S1
	0x01CD4098 LDP X20, X19, [X31 + 0x20]
	0x01CD409C LDP X30, X21, [X31 + 0x10]
	0x01CD40A0 FMOV S2, W31
	0x01CD40A4 FMUL S1, S1, S3
	0x01CD40A8 FCMP S8, 0x0
	0x01CD40AC FADD S1, S1, S2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2550000
	006 Move X21, 0x227C000
	007 Move W8, [X20+1507]
	008 Move X21, [X21+2728]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x227C000
	015 Move X0, [X0+2728]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X20+1507], W8
	019 Move X2, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move W1, 1
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Call 0x2091B0C, X0, X1
	027 Return X0

Method: System.Void .ctor()

Disassembly:
	0x01CD4488 ADRP X0, 0x227B000
	0x01CD448C LDR X0, [X0 + 0xB10]
	0x01CD4490 BL 0x1B6E804
	0x01CD4494 MOV X1, X0
	0x01CD4498 MOV X0, X19
	0x01CD449C MOV X2, X31
	0x01CD44A0 BL 0x31E7550
	0x01CD44A4 ADRP X0, 0x227B000
	0x01CD44A8 LDR X0, [X0 + 0xB20]
	0x01CD44AC BL 0x1B6E804
	0x01CD44B0 MOV X1, X0
	0x01CD44B4 MOV X0, X19
	0x01CD44B8 BL 0x1B6E8E8
	0x01CD44BC STP X30, X19, [X31 - 0x10]!
	0x01CD44C0 LDR X8, [X0 + 0x50]
	0x01CD44C4 CBZ X8, 0x1CD44DC
	0x01CD44C8 LDR W8, [X8 + 0x4]
	0x01CD44CC CMP W8, 0x0
	0x01CD44D0 CSET W0, NE
	0x01CD44D4 LDP X30, X19, [X31], #0x10
	0x01CD44D8 RET
	0x01CD44DC ADRP X0, 0x2279000
	0x01CD44E0 LDR X0, [X0 + 0x490]
	0x01CD44E4 BL 0x1B6E804
	0x01CD44E8 BL 0x1B6EA0C
	0x01CD44EC MOV X19, X0
	0x01CD44F0 ADRP X0, 0x227B000
	0x01CD44F4 LDR X0, [X0 + 0xB28]
	0x01CD44F8 BL 0x1B6E804
	0x01CD44FC MOV X1, X0
	0x01CD4500 MOV X0, X19
	0x01CD4504 MOV X2, X31
	0x01CD4508 BL 0x31E7550
	0x01CD450C ADRP X0, 0x227B000
	0x01CD4510 LDR X0, [X0 + 0xB30]
	0x01CD4514 BL 0x1B6E804
	0x01CD4518 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2550000
	006 Move W8, [X20+1295]
	007 Move X19, X0
	008 Compare W8, 0
	009 JumpIfNotEqual {15}
	010 Move X0, 0x227A000
	011 Move X0, [X0+1152]
	012 Call 0x1B6F7F0
	013 Move W8, 1
	014 Move [X20+1295], W8
	015 Move X20, 0x227A000
	016 Move X20, [X20+1152]
	017 Move X21, 0x2550000
	018 Move X8, [X20]
	019 Move X9, [X8+184]
	020 Move V0, [X9+72]
	021 Move V1, [X9+80]
	022 Move [X19+36], D0
	023 Move [X19+44], S1
	024 Move W9, [X21+1087]
	025 Compare W9, 0
	026 JumpIfNotEqual {32}
	027 Move X0, X20
	028 Call 0x1B6F7F0
	029 Move X8, [X20]
	030 Move W9, 1
	031 Move [X21+1087], W9
	032 Move X8, [X8+184]
	033 Move X0, X19
	034 Move X1, X31
	035 Move V0, [X8]
	036 Move V1, [X8+8]
	037 Move [X19+48], D0
	038 Move [X19+56], S1
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Call MonoBehaviour..ctor, X0
	044 Return 

