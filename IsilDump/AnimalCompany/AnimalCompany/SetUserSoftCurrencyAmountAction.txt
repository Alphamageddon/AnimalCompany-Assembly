Type: AnimalCompany.SetUserSoftCurrencyAmountAction

Method: System.Void .ctor(System.Int32 amount)

Disassembly:
	0x01C98474 TBNZ X8, 0x0, 0x1C984A4
	0x01C98478 ADRP X0, 0x22B6000
	0x01C9847C LDR X0, [X0 + 0x138]
	0x01C98480 BL 0x1B6E7F0
	0x01C98484 ADRP X0, 0x22B6000
	0x01C98488 LDR X0, [X0 + 0x140]
	0x01C9848C BL 0x1B6E7F0
	0x01C98490 ADRP X0, 0x22B6000
	0x01C98494 LDR X0, [X0 + 0x148]
	0x01C98498 BL 0x1B6E7F0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+20], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void Execute(AnimalCompany.AppState state)

Disassembly:
	0x01C9849C MOVZ W8, 0x1
	0x01C984A0 STRB W8, [X20 + 0x3E1]
	0x01C984A4 MOVZ W0, 0x130
	0x01C984A8 MOV X1, X31
	0x01C984AC BL 0x3AECD78
	0x01C984B0 TBZ X0, 0x0, 0x1C984BC
	0x01C984B4 MOVZ W21, 0x1
	0x01C984B8 B 0x1C984CC
	0x01C984BC MOVZ W0, 0x12F
	0x01C984C0 MOV X1, X31
	0x01C984C4 BL 0x3AECD78
	0x01C984C8 AND W21, W0, 0x1
	0x01C984CC CMP W21, 0x0
	0x01C984D0 MOVZ W8, 0x30
	0x01C984D4 MOVZ W9, 0x2C
	0x01C984D8 CSEL X8, X9, X8, EQ
	0x01C984DC LDR V0, [X19, X8, LSL]
	0x01C984E0 MOVZ W0, 0x61
	0x01C984E4 MOV X1, X31
	0x01C984E8 STR V0, [X31 + 0x2]
	0x01C984EC BL 0x3AECD78
	0x01C984F0 TBNZ X0, 0x0, 0x1C98504
	0x01C984F4 MOVZ W0, 0x114
	0x01C984F8 MOV X1, X31
	0x01C984FC BL 0x3AECD78
	0x01C98500 TBZ X0, 0x0, 0x1C9859C
	0x01C98504 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x258C000
	006 Move W8, [X21+984]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x22B7000
	014 Move X0, [X0+136]
	015 Call 0x1B6F7F0
	016 Move W8, 1
	017 Move [X21+984], W8
	018 Compare X20, 0
	019 JumpIfEqual {39}
	020 Move X8, [X20+168]
	021 Compare X8, 0
	022 JumpIfEqual {39}
	023 Move X8, [X8+104]
	024 Compare X8, 0
	025 JumpIfEqual {39}
	026 Move X0, [X8+72]
	027 Compare X0, 0
	028 JumpIfEqual {39}
	029 Move X8, 0x22B7000
	030 Move X8, [X8+136]
	031 Move W1, [X19+20]
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X2, [X8]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Call StatePrimitive`1<Int32>.set_value, X0, X1
	038 Return 
	039 Call 0x1B6FA1C

