Type: AnimalCompany.AnimalLabColorEditor

Method: System.Void Awake()

Disassembly:
	0x01D5C848 LDP X20, X19, [X31 + 0x10]
	0x01D5C84C LDR X30, [X31], #0x20
	0x01D5C850 RET
	0x01D5C854 STP X30, X21, [X31 - 0x20]!
	0x01D5C858 STP X20, X19, [X31 + 0x10]
	0x01D5C85C ADRP X21, 0x267C000
	0x01D5C860 ADRP X20, 0x2397000
	0x01D5C864 LDRB W8, [X21 + 0x817]
	0x01D5C868 LDR X20, [X20 + 0x898]
	0x01D5C86C MOV X19, X0
	0x01D5C870 TBNZ X8, 0x0, 0x1D5C888
	0x01D5C874 ADRP X0, 0x2397000
	0x01D5C878 LDR X0, [X0 + 0x898]
	0x01D5C87C BL 0x1C16CF4
	0x01D5C880 MOVZ W8, 0x1
	0x01D5C884 STRB W8, [X21 + 0x817]
	0x01D5C888 LDR X0, [X20]
	0x01D5C88C LDR W8, [X0 + 0xE0]
	0x01D5C890 CBNZ W8, 0x1D5C898
	0x01D5C894 BL 0x1C16DFC
	0x01D5C898 ADRP X21, 0x267C000
	0x01D5C89C LDRB W8, [X21 + 0x78B]
	0x01D5C8A0 CBNZ W8, 0x1D5C8B8
	0x01D5C8A4 ADRP X0, 0x2397000
	0x01D5C8A8 LDR X0, [X0 + 0x898]
	0x01D5C8AC BL 0x1C16CF4
	0x01D5C8B0 MOVZ W8, 0x1
	0x01D5C8B4 STRB W8, [X21 + 0x78B]
	0x01D5C8B8 LDR X0, [X20]
	0x01D5C8BC LDR W8, [X0 + 0xE0]
	0x01D5C8C0 CBNZ W8, 0x1D5C8CC
	0x01D5C8C4 BL 0x1C16DFC
	0x01D5C8C8 LDR X0, [X20]
	0x01D5C8CC LDR X8, [X0 + 0xB8]
	0x01D5C8D0 MOV X0, X19
	0x01D5C8D4 MOV X1, X31
	0x01D5C8D8 LDR X8, [X8]
	0x01D5C8DC STR X8, [X19 + 0x30]
	0x01D5C8E0 LDP X20, X19, [X31 + 0x10]
	0x01D5C8E4 LDP X30, X21, [X31], #0x20
	0x01D5C8E8 B 0x3C36C30
	0x01D5C8EC STR X30, [X31 - 0x20]!
	0x01D5C8F0 STP X20, X19, [X31 + 0x10]
	0x01D5C8F4 ADRP X19, 0x267C000
	0x01D5C8F8 ADRP X20, 0x2399000
	0x01D5C8FC LDRB W8, [X19 + 0x818]
	0x01D5C900 LDR X20, [X20 + 0x4E0]
	0x01D5C904 TBNZ X8, 0x0, 0x1D5C91C
	0x01D5C908 ADRP X0, 0x2399000
	0x01D5C90C LDR X0, [X0 + 0x4E0]
	0x01D5C910 BL 0x1C16CF4
	0x01D5C914 MOVZ W8, 0x1
	0x01D5C918 STRB W8, [X19 + 0x818]
	0x01D5C91C LDR X0, [X20]
	0x01D5C920 BL 0x1C16F10
	0x01D5C924 MOV X1, X31
	0x01D5C928 MOV X19, X0
	0x01D5C92C BL 0x33BDD8C
	0x01D5C930 LDR X8, [X20]
	0x01D5C934 LDR X8, [X8 + 0xB8]
	0x01D5C938 STR X19, [X8]
	0x01D5C93C LDP X20, X19, [X31 + 0x10]
	0x01D5C940 LDR X30, [X31], #0x20
	0x01D5C944 RET
	0x01D5C948 MOV X1, X31
	0x01D5C94C B 0x33BDD8C
	0x01D5C950 STP X30, X21, [X31 - 0x20]!
	0x01D5C954 STP X20, X19, [X31 + 0x10]
	0x01D5C958 ADRP X20, 0x267C000
	0x01D5C95C ADRP X21, 0x2397000
	0x01D5C960 LDRB W8, [X20 + 0x819]
	0x01D5C964 LDR X21, [X21 + 0x648]
	0x01D5C968 MOV X19, X1
	0x01D5C96C TBNZ X8, 0x0, 0x1D5C990
	0x01D5C970 ADRP X0, 0x2397000
	0x01D5C974 LDR X0, [X0 + 0x648]
	0x01D5C978 BL 0x1C16CF4
	0x01D5C97C ADRP X0, 0x2399000
	0x01D5C980 LDR X0, [X0 + 0x4E8]
	0x01D5C984 BL 0x1C16CF4
	0x01D5C988 MOVZ W8, 0x1
	0x01D5C98C STRB W8, [X20 + 0x819]
	0x01D5C990 LDR X0, [X21]
	0x01D5C994 LDR W8, [X0 + 0xE0]
	0x01D5C998 CBNZ W8, 0x1D5C9A0
	0x01D5C99C BL 0x1C16DFC
	0x01D5C9A0 MOV X0, X31
	0x01D5C9A4 BL 0x1D32AF4
	0x01D5C9A8 MOV X20, X0
	0x01D5C9AC MOV X0, X31
	0x01D5C9B0 BL 0x1D32B7C
	0x01D5C9B4 CBZ X20, 0x1D5C9E0
	0x01D5C9B8 ADRP X8, 0x2399000
	0x01D5C9BC LDR X8, [X8 + 0x4E8]
	0x01D5C9C0 MOV X1, X0
	0x01D5C9C4 MOV X0, X20
	0x01D5C9C8 MOV X3, X19
	0x01D5C9CC LDR X2, [X8]
	0x01D5C9D0 LDP X20, X19, [X31 + 0x10]
	0x01D5C9D4 MOV X4, X31
	0x01D5C9D8 LDP X30, X21, [X31], #0x20
	0x01D5C9DC B 0x1D68EEC
	0x01D5C9E0 BL 0x1C16F20
	0x01D5C9E4 STP X30, X21, [X31 - 0x20]!
	0x01D5C9E8 STP X20, X19, [X31 + 0x10]
	0x01D5C9EC ADRP X20, 0x267C000
	0x01D5C9F0 ADRP X21, 0x2397000
	0x01D5C9F4 LDRB W8, [X20 + 0x81A]
	0x01D5C9F8 LDR X21, [X21 + 0x648]
	0x01D5C9FC MOV X19, X1
	0x01D5CA00 TBNZ X8, 0x0, 0x1D5CA18
	0x01D5CA04 ADRP X0, 0x2397000
	0x01D5CA08 LDR X0, [X0 + 0x648]
	0x01D5CA0C BL 0x1C16CF4
	0x01D5CA10 MOVZ W8, 0x1
	0x01D5CA14 STRB W8, [X20 + 0x81A]
	0x01D5CA18 LDR X0, [X21]
	0x01D5CA1C LDR W8, [X0 + 0xE0]
	0x01D5CA20 CBNZ W8, 0x1D5CA28
	0x01D5CA24 BL 0x1C16DFC
	0x01D5CA28 MOV X0, X31
	0x01D5CA2C BL 0x1D32AF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x267D000
	008 Move W8, [X20+2059]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x239A000
	015 Move X0, [X0+1160]
	016 Call 0x1C17CF4
	017 Move X0, 0x239A000
	018 Move X0, [X0+1168]
	019 Call 0x1C17CF4
	020 Move X0, 0x239A000
	021 Move X0, [X0+1176]
	022 Call 0x1C17CF4
	023 Move X0, 0x239A000
	024 Move X0, [X0+1184]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+2059], W8
	028 Move X23, [X19+40]
	029 Compare X23, 0
	030 JumpIfEqual {142}
	031 Move X22, 0x239A000
	032 Move X22, [X22+1184]
	033 Move X21, 0x239A000
	034 Move X20, [X23+32]
	035 Move X0, [X22]
	036 Move X21, [X21+1176]
	037 Call 0x1C17F10
	038 Move X2, [X21]
	039 Move X1, X19
	040 Move X3, X31
	041 Move X21, X0
	042 Call Func`2<Single, Boolean>..ctor, X0, X1, X2
	043 Move X0, X20
	044 Move X1, X21
	045 Move X2, X31
	046 Call Delegate.Combine, X0, X1
	047 Compare X0, 0
	048 JumpIfEqual {62}
	049 Move X21, [X22]
	050 Move X20, X0
	051 Move X1, X21
	052 Call 0x1C17E00
	053 Compare X0, 0
	054 JumpIfEqual {95}
	055 Move [X23+32], X0
	056 Move X21, [X22]
	057 Move X0, X20
	058 Move X1, X21
	059 Call 0x1C17E00
	060 Compare X0, 0
	061 JumpIfNotEqual {63}
	062 Move [X23+32], X31
	063 Move X23, [X19+48]
	064 Compare X23, 0
	065 JumpIfEqual {142}
	066 Move X0, [X22]
	067 Move X21, 0x239A000
	068 Move X20, [X23+32]
	069 Move X21, [X21+1168]
	070 Call 0x1C17F10
	071 Move X2, [X21]
	072 Move X1, X19
	073 Move X3, X31
	074 Move X21, X0
	075 Call Func`2<Single, Boolean>..ctor, X0, X1, X2
	076 Move X0, X20
	077 Move X1, X21
	078 Move X2, X31
	079 Call Delegate.Combine, X0, X1
	080 Compare X0, 0
	081 JumpIfEqual {98}
	082 Move X21, [X22]
	083 Move X20, X0
	084 Move X1, X21
	085 Call 0x1C17E00
	086 Compare X0, 0
	087 JumpIfEqual {95}
	088 Move [X23+32], X0
	089 Move X21, [X22]
	090 Move X0, X20
	091 Move X1, X21
	092 Call 0x1C17E00
	093 Compare X0, 0
	094 JumpIfNotEqual {99}
	095 Move X0, X20
	096 Move X1, X21
	097 Call 0x1C181E0
	098 Move [X23+32], X31
	099 Move X23, [X19+56]
	100 Compare X23, 0
	101 JumpIfEqual {142}
	102 Move X0, [X22]
	103 Move X21, 0x239A000
	104 Move X20, [X23+32]
	105 Move X21, [X21+1160]
	106 Call 0x1C17F10
	107 Move X2, [X21]
	108 Move X1, X19
	109 Move X3, X31
	110 Move X21, X0
	111 Call Func`2<Single, Boolean>..ctor, X0, X1, X2
	112 Move X0, X20
	113 Move X1, X21
	114 Move X2, X31
	115 Call Delegate.Combine, X0, X1
	116 Compare X0, 0
	117 JumpIfEqual {134}
	118 Move X20, [X22]
	119 Move X19, X0
	120 Move X1, X20
	121 Call 0x1C17E00
	122 Compare X0, 0
	123 JumpIfEqual {131}
	124 Move [X23+32], X0
	125 Move X20, [X22]
	126 Move X0, X19
	127 Move X1, X20
	128 Call 0x1C17E00
	129 Compare X0, 0
	130 JumpIfNotEqual {135}
	131 Move X0, X19
	132 Move X1, X20
	133 Call 0x1C181E0
	134 Move [X23+32], X31
	135 Move X20, [X31+32]
	136 Move X19, [X31+40]
	137 Move X22, [X31+16]
	138 Move X21, [X31+24]
	139 Move X30, [X31+48]
	140 Move X23, [X31+56]
	141 Return 
	142 Call 0x1C17F20

Method: System.Void OnEnable()

Disassembly:
	0x01D5CA30 MOV X20, X0
	0x01D5CA34 MOV X0, X31
	0x01D5CA38 BL 0x1D32B7C
	0x01D5CA3C CBZ X20, 0x1D5CA60
	0x01D5CA40 MOV X1, X0
	0x01D5CA44 MOV X0, X20
	0x01D5CA48 MOV X3, X19
	0x01D5CA4C LDP X20, X19, [X31 + 0x10]
	0x01D5CA50 MOV X2, X31
	0x01D5CA54 MOV X4, X31
	0x01D5CA58 LDP X30, X21, [X31], #0x20
	0x01D5CA5C B 0x1D6BCE4
	0x01D5CA60 BL 0x1C16F20
	0x01D5CA64 RET
	0x01D5CA68 STR D10, [X31 - 0x50]!
	0x01D5CA6C STP D9, D8, [X31 + 0x10]
	0x01D5CA70 STP X30, X23, [X31 + 0x20]
	0x01D5CA74 STP X22, X21, [X31 + 0x30]
	0x01D5CA78 STP X20, X19, [X31 + 0x40]
	0x01D5CA7C ADRP X20, 0x267C000
	0x01D5CA80 LDRB W8, [X20 + 0x81B]
	0x01D5CA84 MOV X19, X0
	0x01D5CA88 TBNZ X8, 0x0, 0x1D5CB9C
	0x01D5CA8C ADRP X0, 0x2397000
	0x01D5CA90 LDR X0, [X0 + 0xB50]
	0x01D5CA94 BL 0x1C16CF4
	0x01D5CA98 ADRP X0, 0x2397000
	0x01D5CA9C LDR X0, [X0 + 0x648]
	0x01D5CAA0 BL 0x1C16CF4
	0x01D5CAA4 ADRP X0, 0x2397000
	0x01D5CAA8 LDR X0, [X0 + 0xAB0]
	0x01D5CAAC BL 0x1C16CF4
	0x01D5CAB0 ADRP X0, 0x2399000
	0x01D5CAB4 LDR X0, [X0 + 0x4F0]
	0x01D5CAB8 BL 0x1C16CF4
	0x01D5CABC ADRP X0, 0x2398000
	0x01D5CAC0 LDR X0, [X0 + 0x4E0]
	0x01D5CAC4 BL 0x1C16CF4
	0x01D5CAC8 ADRP X0, 0x2397000
	0x01D5CACC LDR X0, [X0 + 0x710]
	0x01D5CAD0 BL 0x1C16CF4
	0x01D5CAD4 ADRP X0, 0x2397000
	0x01D5CAD8 LDR X0, [X0 + 0x718]
	0x01D5CADC BL 0x1C16CF4
	0x01D5CAE0 ADRP X0, 0x2397000
	0x01D5CAE4 LDR X0, [X0 + 0x720]
	0x01D5CAE8 BL 0x1C16CF4
	0x01D5CAEC ADRP X0, 0x2397000
	0x01D5CAF0 LDR X0, [X0 + 0x918]
	0x01D5CAF4 BL 0x1C16CF4
	0x01D5CAF8 ADRP X0, 0x2398000
	0x01D5CAFC LDR X0, [X0 + 0x508]
	0x01D5CB00 BL 0x1C16CF4
	0x01D5CB04 ADRP X0, 0x2399000
	0x01D5CB08 LDR X0, [X0 + 0x4F8]
	0x01D5CB0C BL 0x1C16CF4
	0x01D5CB10 ADRP X0, 0x2399000
	0x01D5CB14 LDR X0, [X0 + 0x500]
	0x01D5CB18 BL 0x1C16CF4
	0x01D5CB1C ADRP X0, 0x2398000
	0x01D5CB20 LDR X0, [X0 + 0x518]
	0x01D5CB24 BL 0x1C16CF4
	0x01D5CB28 ADRP X0, 0x2399000
	0x01D5CB2C LDR X0, [X0 + 0x508]
	0x01D5CB30 BL 0x1C16CF4
	0x01D5CB34 ADRP X0, 0x2399000
	0x01D5CB38 LDR X0, [X0 + 0x510]
	0x01D5CB3C BL 0x1C16CF4
	0x01D5CB40 ADRP X0, 0x2399000
	0x01D5CB44 LDR X0, [X0 + 0x4E0]
	0x01D5CB48 BL 0x1C16CF4
	0x01D5CB4C ADRP X0, 0x2398000
	0x01D5CB50 LDR X0, [X0 + 0x550]
	0x01D5CB54 BL 0x1C16CF4
	0x01D5CB58 ADRP X0, 0x2399000
	0x01D5CB5C LDR X0, [X0 + 0x4E8]
	0x01D5CB60 BL 0x1C16CF4
	0x01D5CB64 ADRP X0, 0x2398000
	0x01D5CB68 LDR X0, [X0 + 0x570]
	0x01D5CB6C BL 0x1C16CF4
	0x01D5CB70 ADRP X0, 0x2399000
	0x01D5CB74 LDR X0, [X0 + 0x518]
	0x01D5CB78 BL 0x1C16CF4
	0x01D5CB7C ADRP X0, 0x2398000
	0x01D5CB80 LDR X0, [X0 + 0x580]
	0x01D5CB84 BL 0x1C16CF4
	0x01D5CB88 ADRP X0, 0x2399000
	0x01D5CB8C LDR X0, [X0 + 0x520]
	0x01D5CB90 BL 0x1C16CF4
	0x01D5CB94 MOVZ W8, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x267D000
	009 Move X24, 0x2398000
	010 Move X19, 0x239A000
	011 Move X22, 0x2398000
	012 Move X21, 0x2398000
	013 Move W8, [X23+2060]
	014 Move X24, [X24+3488]
	015 Move X19, [X19+1192]
	016 Move X22, [X22+3504]
	017 Move X21, [X21+1608]
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x239A000
	024 Move X0, [X0+1192]
	025 Call 0x1C17CF4
	026 Move X0, 0x2398000
	027 Move X0, [X0+1608]
	028 Call 0x1C17CF4
	029 Move X0, 0x2398000
	030 Move X0, [X0+3504]
	031 Call 0x1C17CF4
	032 Move X0, 0x2398000
	033 Move X0, [X0+3488]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+2060], W8
	037 Move X0, [X24]
	038 Call 0x1C17F10
	039 Move X2, [X19]
	040 Move X1, X20
	041 Move X3, X31
	042 Move X19, X0
	043 Call ObserverDelegate..ctor, X0, X1, X2
	044 Move X0, [X22]
	045 Move W1, 1
	046 Call 0x1C17D6C
	047 Move X8, [X21]
	048 Move X20, X0
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Move X22, 0x267D000
	055 Move W8, [X22+1927]
	056 Compare W8, 0
	057 JumpIfNotEqual {63}
	058 Move X0, 0x2398000
	059 Move X0, [X0+1608]
	060 Call 0x1C17CF4
	061 Move W8, 1
	062 Move [X22+1927], W8
	063 Move X0, [X21]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {69}
	067 Call 0x1C17DFC
	068 Move X0, [X21]
	069 Move X8, [X0+184]
	070 Move X8, [X8]
	071 Compare X8, 0
	072 JumpIfEqual {106}
	073 Move X8, [X8+184]
	074 Compare X8, 0
	075 JumpIfEqual {106}
	076 Move X8, [X8+120]
	077 Compare X8, 0
	078 JumpIfEqual {106}
	079 Compare X20, 0
	080 JumpIfEqual {106}
	081 Move X21, [X8+80]
	082 Compare X21, 0
	083 JumpIfEqual {90}
	084 Move X8, [X20]
	085 Move X0, X21
	086 Move X1, [X8+64]
	087 Call 0x1C17E00
	088 Compare X0, 0
	089 JumpIfEqual {108}
	090 Move W8, [X20+24]
	091 Compare W8, 0
	092 JumpIfEqual {107}
	093 Move [X20+32], X21
	094 Move X0, X19
	095 Move X1, X20
	096 Move X20, [X31+48]
	097 Move X19, [X31+56]
	098 Move X22, [X31+32]
	099 Move X21, [X31+40]
	100 Move X24, [X31+16]
	101 Move X23, [X31+24]
	102 Move X2, X31
	103 Move X30, [X31+64]
	104 Call App.RegisterObserver, X0, X1
	105 Return 
	106 Call 0x1C17F20
	107 Call 0x1C17F28
	108 Call 0x1C17F44
	109 Move X1, X31
	110 Call 0x1C17DEC

Method: System.Void OnDisable()

Disassembly:
	0x01D5CB98 STRB W8, [X20 + 0x81B]
	0x01D5CB9C LDR W8, [X19 + 0x10]
	0x01D5CBA0 CMP W8, 0x2
	0x01D5CBA4 B.EQ 0x1D5CCE4
	0x01D5CBA8 CMP W8, 0x1
	0x01D5CBAC B.EQ 0x1D5CD98
	0x01D5CBB0 CBNZ W8, 0x1D5CE44
	0x01D5CBB4 MOVN W8, 0x0
	0x01D5CBB8 STR W8, [X19 + 0x10]
	0x01D5CBBC ADRP X8, 0x2397000
	0x01D5CBC0 LDR X8, [X8 + 0xAB0]
	0x01D5CBC4 MOVZ W1, 0x1
	0x01D5CBC8 LDR X0, [X8]
	0x01D5CBCC BL 0x1C16D6C
	0x01D5CBD0 ADRP X8, 0x2397000
	0x01D5CBD4 LDR X8, [X8 + 0x918]
	0x01D5CBD8 MOV X20, X0
	0x01D5CBDC LDR X8, [X8]
	0x01D5CBE0 MOV X0, X8
	0x01D5CBE4 BL 0x1C16F10
	0x01D5CBE8 MOV W1, W31
	0x01D5CBEC MOV X21, X0
	0x01D5CBF0 BL 0x1D4D028
	0x01D5CBF4 CBZ X20, 0x1D5D12C
	0x01D5CBF8 CBZ X21, 0x1D5CC10
	0x01D5CBFC LDR X8, [X20]
	0x01D5CC00 MOV X0, X21
	0x01D5CC04 LDR X1, [X8 + 0x40]
	0x01D5CC08 BL 0x1C16E00
	0x01D5CC0C CBZ X0, 0x1D5D134
	0x01D5CC10 LDR W8, [X20 + 0x18]
	0x01D5CC14 CBZ W8, 0x1D5D130
	0x01D5CC18 STR X21, [X20 + 0x20]
	0x01D5CC1C ADRP X8, 0x2397000
	0x01D5CC20 LDR X8, [X8 + 0x648]
	0x01D5CC24 LDR X0, [X8]
	0x01D5CC28 LDR W8, [X0 + 0xE0]
	0x01D5CC2C CBNZ W8, 0x1D5CC34
	0x01D5CC30 BL 0x1C16DFC
	0x01D5CC34 MOV X0, X20
	0x01D5CC38 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x267D000
	008 Move X23, 0x2398000
	009 Move X20, 0x239A000
	010 Move X21, 0x2398000
	011 Move W8, [X22+2061]
	012 Move X23, [X23+3488]
	013 Move X20, [X20+1192]
	014 Move X21, [X21+1608]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x239A000
	021 Move X0, [X0+1192]
	022 Call 0x1C17CF4
	023 Move X0, 0x2398000
	024 Move X0, [X0+1608]
	025 Call 0x1C17CF4
	026 Move X0, 0x2398000
	027 Move X0, [X0+3488]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+2061], W8
	031 Move X0, [X23]
	032 Call 0x1C17F10
	033 Move X2, [X20]
	034 Move X1, X19
	035 Move X3, X31
	036 Move X20, X0
	037 Call ObserverDelegate..ctor, X0, X1, X2
	038 Move X0, [X21]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X20
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X1, X31
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Call App.DeregisterObserver, X0
	052 Return 

Method: System.Void OnDraftAvatarColorChanged(SpatialSys.ObservableState.StateChangedEventArgs args)

Disassembly:
	0x01D5CC3C BL 0x1D351C4
	0x01D5CC40 ADRP X22, 0x2399000
	0x01D5CC44 LDR X22, [X22 + 0x4E0]
	0x01D5CC48 LDR X0, [X22]
	0x01D5CC4C LDR W8, [X0 + 0xE0]
	0x01D5CC50 CBNZ W8, 0x1D5CC5C
	0x01D5CC54 BL 0x1C16DFC
	0x01D5CC58 LDR X0, [X22]
	0x01D5CC5C LDR X8, [X0 + 0xB8]
	0x01D5CC60 LDR X20, [X8 + 0x8]
	0x01D5CC64 CBNZ X20, 0x1D5CCB8
	0x01D5CC68 LDR W8, [X0 + 0xE0]
	0x01D5CC6C CBNZ W8, 0x1D5CC78
	0x01D5CC70 BL 0x1C16DFC
	0x01D5CC74 LDR X0, [X22]
	0x01D5CC78 ADRP X9, 0x2399000
	0x01D5CC7C LDR X8, [X0 + 0xB8]
	0x01D5CC80 LDR X9, [X9 + 0x500]
	0x01D5CC84 LDR X21, [X8]
	0x01D5CC88 LDR X0, [X9]
	0x01D5CC8C BL 0x1C16F10
	0x01D5CC90 ADRP X8, 0x2399000
	0x01D5CC94 LDR X8, [X8 + 0x508]
	0x01D5CC98 MOV X1, X21
	0x01D5CC9C MOV X3, X31
	0x01D5CCA0 MOV X20, X0
	0x01D5CCA4 LDR X2, [X8]
	0x01D5CCA8 BL 0x26954A8
	0x01D5CCAC LDR X8, [X22]
	0x01D5CCB0 LDR X8, [X8 + 0xB8]
	0x01D5CCB4 STR X20, [X8 + 0x8]
	0x01D5CCB8 ADRP X8, 0x2399000
	0x01D5CCBC LDR X8, [X8 + 0x4F0]
	0x01D5CCC0 MOV X0, X20
	0x01D5CCC4 MOV W1, W31
	0x01D5CCC8 MOV X2, X31
	0x01D5CCCC LDR X3, [X8]
	0x01D5CCD0 BL 0x21A2D7C
	0x01D5CCD4 STP X0, X0, [X19 + 0x18]
	0x01D5CCD8 MOVZ W0, 0x1
	0x01D5CCDC STR W0, [X19 + 0x10]
	0x01D5CCE0 B 0x1D5D114
	0x01D5CCE4 LDR X0, [X19 + 0x28]
	0x01D5CCE8 MOVN W8, 0x0
	0x01D5CCEC STR W8, [X19 + 0x10]
	0x01D5CCF0 CBZ X0, 0x1D5D12C
	0x01D5CCF4 MOV X1, X31
	0x01D5CCF8 BL 0x35BA460
	0x01D5CCFC TBNZ X0, 0x0, 0x1D5CD8C
	0x01D5CD00 ADRP X8, 0x2397000
	0x01D5CD04 LDR X8, [X8 + 0xAB0]
	0x01D5CD08 MOVZ W1, 0x1
	0x01D5CD0C LDR X0, [X8]
	0x01D5CD10 BL 0x1C16D6C
	0x01D5CD14 LDR X8, [X19 + 0x28]
	0x01D5CD18 CBZ X8, 0x1D5D12C
	0x01D5CD1C LDR X22, [X8 + 0x58]
	0x01D5CD20 ADRP X8, 0x2398000
	0x01D5CD24 LDR X8, [X8 + 0x550]
	0x01D5CD28 MOV X20, X0
	0x01D5CD2C LDR X0, [X8]
	0x01D5CD30 BL 0x1C16F10
	0x01D5CD34 MOV X1, X31
	0x01D5CD38 MOV X21, X0
	0x01D5CD3C BL 0x1D36B98
	0x01D5CD40 STR X22, [X21 + 0x18]
	0x01D5CD44 CBZ X20, 0x1D5D12C
	0x01D5CD48 LDR X8, [X20]
	0x01D5CD4C MOV X0, X21
	0x01D5CD50 LDR X1, [X8 + 0x40]
	0x01D5CD54 BL 0x1C16E00
	0x01D5CD58 CBZ X0, 0x1D5D134
	0x01D5CD5C LDR W8, [X20 + 0x18]
	0x01D5CD60 CBZ W8, 0x1D5D130
	0x01D5CD64 STR X21, [X20 + 0x20]
	0x01D5CD68 ADRP X8, 0x2397000
	0x01D5CD6C LDR X8, [X8 + 0x648]
	0x01D5CD70 LDR X0, [X8]
	0x01D5CD74 LDR W8, [X0 + 0xE0]
	0x01D5CD78 CBNZ W8, 0x1D5CD80
	0x01D5CD7C BL 0x1C16DFC
	0x01D5CD80 MOV X0, X20
	0x01D5CD84 MOV X1, X31
	0x01D5CD88 BL 0x1D335B0
	0x01D5CD8C MOV W0, W31
	0x01D5CD90 STR X31, [X19 + 0x28]
	0x01D5CD94 B 0x1D5D114
	0x01D5CD98 LDR X8, [X19 + 0x20]
	0x01D5CD9C MOVN W9, 0x0
	0x01D5CDA0 STR W9, [X19 + 0x10]
	0x01D5CDA4 CBZ X8, 0x1D5D12C
	0x01D5CDA8 LDR X8, [X8 + 0x58]
	0x01D5CDAC TBNZ X8, 0x0, 0x1D5CE4C
	0x01D5CDB0 ADRP X9, 0x2397000
	0x01D5CDB4 LDR X9, [X9 + 0xAB0]
	0x01D5CDB8 UBFM X8, X8, 0x20, 0x3F
	0x01D5CDBC SUB W8, W8, 0x4
	0x01D5CDC0 CMP W8, 0x2
	0x01D5CDC4 LDR X0, [X9]
	0x01D5CDC8 MOVZ W1, 0x1
	0x01D5CDCC CSET W21, HI
	0x01D5CDD0 BL 0x1C16D6C
	0x01D5CDD4 ADRP X8, 0x2397000
	0x01D5CDD8 LDR X8, [X8 + 0x918]
	0x01D5CDDC MOV X19, X0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x267D000
	009 Move X20, 0x2398000
	010 Move W8, [X21+2062]
	011 Move X20, [X20+1608]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x2398000
	018 Move X0, [X0+1608]
	019 Call 0x1C17CF4
	020 Move X0, 0x2399000
	021 Move X0, [X0+2840]
	022 Call 0x1C17CF4
	023 Move X0, 0x239A000
	024 Move X0, [X0+1200]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+2062], W8
	028 Move X0, [X20]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X21, 0x267D000
	034 Move W8, [X21+1927]
	035 Compare W8, 0
	036 JumpIfNotEqual {42}
	037 Move X0, 0x2398000
	038 Move X0, [X0+1608]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X21+1927], W8
	042 Move X0, [X20]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {48}
	046 Call 0x1C17DFC
	047 Move X0, [X20]
	048 Move X8, [X0+184]
	049 Move X8, [X8]
	050 Compare X8, 0
	051 JumpIfEqual {125}
	052 Move X8, [X8+184]
	053 Compare X8, 0
	054 JumpIfEqual {125}
	055 Move X8, [X8+120]
	056 Compare X8, 0
	057 JumpIfEqual {125}
	058 Move X8, [X8+80]
	059 Compare X8, 0
	060 JumpIfEqual {125}
	061 Move X21, 0x239A000
	062 Move X21, [X21+1200]
	063 Move S0, [X8+76]
	064 Move S9, [X8+80]
	065 Move V8, [X8+84]
	066 Move X20, [X19+64]
	067 Move X1, [X21]
	068 Move W8, 0x437F0000
	069 Move S1, W8
	070 Multiply S0, S0, S1
	071 Add X0, X31, 12
	072 Move X2, X31
	073 Move [X31+12], S0
	074 Call Single.ToString, X0, X1
	075 Compare X20, 0
	076 JumpIfEqual {125}
	077 Move X8, [X20]
	078 Move X1, X0
	079 Move X0, X20
	080 Move X9, [X8+1368]
	081 Move X2, [X8+1376]
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move X1, [X21]
	084 Move X20, [X19+72]
	085 Move W8, 0x437F0000
	086 Move S0, W8
	087 Multiply S0, S9, S0
	088 Add X0, X31, 12
	089 Move X2, X31
	090 Move [X31+12], S0
	091 Call Single.ToString, X0, X1
	092 Compare X20, 0
	093 JumpIfEqual {125}
	094 Move X8, [X20]
	095 Move X1, X0
	096 Move X0, X20
	097 Move X9, [X8+1368]
	098 Move X2, [X8+1376]
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move X1, [X21]
	101 Move X19, [X19+80]
	102 Move W8, 0x437F0000
	103 Move S0, W8
	104 Multiply S0, S8, S0
	105 Add X0, X31, 12
	106 Move X2, X31
	107 Move [X31+12], S0
	108 Call Single.ToString, X0, X1
	109 Compare X19, 0
	110 JumpIfEqual {125}
	111 Move X8, [X19]
	112 Move X1, X0
	113 Move X0, X19
	114 Move X9, [X8+1368]
	115 Move X2, [X8+1376]
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Move X20, [X31+48]
	118 Move X19, [X31+56]
	119 Move X30, [X31+32]
	120 Move X21, [X31+40]
	121 Move D9, [X31+16]
	122 Move D8, [X31+24]
	123 Add X31, X31, 64
	124 Return 
	125 Call 0x1C17F20

Method: System.Boolean ScrollRed(System.Single value)

Disassembly:
	0x01D5CDE0 LDR X8, [X8]
	0x01D5CDE4 MOV X0, X8
	0x01D5CDE8 BL 0x1C16F10
	0x01D5CDEC MOV W1, W21
	0x01D5CDF0 MOV X20, X0
	0x01D5CDF4 BL 0x1D4D028
	0x01D5CDF8 CBZ X19, 0x1D5D12C
	0x01D5CDFC CBZ X20, 0x1D5CE14
	0x01D5CE00 LDR X8, [X19]
	0x01D5CE04 MOV X0, X20
	0x01D5CE08 LDR X1, [X8 + 0x40]
	0x01D5CE0C BL 0x1C16E00
	0x01D5CE10 CBZ X0, 0x1D5D134
	0x01D5CE14 LDR W8, [X19 + 0x18]
	0x01D5CE18 CBZ W8, 0x1D5D130
	0x01D5CE1C STR X20, [X19 + 0x20]
	0x01D5CE20 ADRP X8, 0x2397000
	0x01D5CE24 LDR X8, [X8 + 0x648]
	0x01D5CE28 LDR X0, [X8]
	0x01D5CE2C LDR W8, [X0 + 0xE0]
	0x01D5CE30 CBNZ W8, 0x1D5CE38
	0x01D5CE34 BL 0x1C16DFC
	0x01D5CE38 MOV X0, X19
	0x01D5CE3C MOV X1, X31
	0x01D5CE40 BL 0x1D351C4
	0x01D5CE44 MOV W0, W31
	0x01D5CE48 B 0x1D5D114
	0x01D5CE4C ADRP X8, 0x2397000
	0x01D5CE50 LDR X8, [X8 + 0xAB0]
	0x01D5CE54 MOVZ W1, 0x1
	0x01D5CE58 LDR X0, [X8]
	0x01D5CE5C BL 0x1C16D6C
	0x01D5CE60 ADRP X8, 0x2397000
	0x01D5CE64 LDR X8, [X8 + 0x918]
	0x01D5CE68 MOV X20, X0
	0x01D5CE6C LDR X8, [X8]
	0x01D5CE70 MOV X0, X8
	0x01D5CE74 BL 0x1C16F10
	0x01D5CE78 MOV W1, W31
	0x01D5CE7C MOV X21, X0
	0x01D5CE80 BL 0x1D4D028
	0x01D5CE84 CBZ X20, 0x1D5D12C
	0x01D5CE88 CBZ X21, 0x1D5CEA0
	0x01D5CE8C LDR X8, [X20]
	0x01D5CE90 MOV X0, X21
	0x01D5CE94 LDR X1, [X8 + 0x40]
	0x01D5CE98 BL 0x1C16E00
	0x01D5CE9C CBZ X0, 0x1D5D134
	0x01D5CEA0 LDR W8, [X20 + 0x18]
	0x01D5CEA4 CBZ W8, 0x1D5D130
	0x01D5CEA8 STR X21, [X20 + 0x20]
	0x01D5CEAC ADRP X8, 0x2397000
	0x01D5CEB0 LDR X8, [X8 + 0x648]
	0x01D5CEB4 LDR X0, [X8]
	0x01D5CEB8 LDR W8, [X0 + 0xE0]
	0x01D5CEBC CBNZ W8, 0x1D5CEC4
	0x01D5CEC0 BL 0x1C16DFC
	0x01D5CEC4 MOV X0, X20
	0x01D5CEC8 MOV X1, X31
	0x01D5CECC BL 0x1D351C4
	0x01D5CED0 ADRP X20, 0x267C000
	0x01D5CED4 LDRB W8, [X20 + 0x792]
	0x01D5CED8 CBNZ W8, 0x1D5CEF0
	0x01D5CEDC ADRP X0, 0x2398000
	0x01D5CEE0 LDR X0, [X0 + 0x5A0]
	0x01D5CEE4 BL 0x1C16CF4
	0x01D5CEE8 MOVZ W8, 0x1
	0x01D5CEEC STRB W8, [X20 + 0x792]
	0x01D5CEF0 ADRP X21, 0x2398000
	0x01D5CEF4 LDR X21, [X21 + 0x5A0]
	0x01D5CEF8 LDR X8, [X21]
	0x01D5CEFC LDR X8, [X8 + 0xB8]
	0x01D5CF00 LDR X0, [X8]
	0x01D5CF04 CBZ X0, 0x1D5D12C
	0x01D5CF08 MOV X1, X31
	0x01D5CF0C BL 0x3C32E90
	0x01D5CF10 CBZ X0, 0x1D5D12C
	0x01D5CF14 MOV X1, X31
	0x01D5CF18 BL 0x3C3F58C
	0x01D5CF1C ADRP X22, 0x267C000
	0x01D5CF20 LDRB W8, [X22 + 0x793]
	0x01D5CF24 MOV V8.16B, V0.16B
	0x01D5CF28 MOV V9.16B, V1.16B
	0x01D5CF2C MOV V10.16B, V2.16B
	0x01D5CF30 CBNZ W8, 0x1D5CF48
	0x01D5CF34 ADRP X0, 0x2398000
	0x01D5CF38 LDR X0, [X0 + 0x5A8]
	0x01D5CF3C BL 0x1C16CF4
	0x01D5CF40 MOVZ W8, 0x1
	0x01D5CF44 STRB W8, [X22 + 0x793]
	0x01D5CF48 ADRP X8, 0x2398000
	0x01D5CF4C LDR X8, [X8 + 0x5A8]
	0x01D5CF50 MOVZ W0, 0x21
	0x01D5CF54 MOV V0.16B, V8.16B
	0x01D5CF58 MOV V1.16B, V9.16B
	0x01D5CF5C LDR X8, [X8]
	0x01D5CF60 MOV V2.16B, V10.16B
	0x01D5CF64 MOV X1, X31
	0x01D5CF68 LDR X8, [X8 + 0xB8]
	0x01D5CF6C LDP S3, S4, [X8]
	0x01D5CF70 LDP S5, S6, [X8 + 0x8]
	0x01D5CF74 BL 0x1E04F44
	0x01D5CF78 LDRB W8, [X20 + 0x792]
	0x01D5CF7C CBNZ W8, 0x1D5CF94
	0x01D5CF80 ADRP X0, 0x2398000
	0x01D5CF84 LDR X0, [X0 + 0x5A0]
	0x01D5CF88 BL 0x1C16CF4
	0x01D5CF8C MOVZ W8, 0x1
	0x01D5CF90 STRB W8, [X20 + 0x792]
	0x01D5CF94 LDR X8, [X21]
	0x01D5CF98 LDR X8, [X8 + 0xB8]
	0x01D5CF9C LDR X0, [X8]
	0x01D5CFA0 CBZ X0, 0x1D5D12C
	0x01D5CFA4 MOV X1, X31
	0x01D5CFA8 BL 0x3C32E90

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x267D000
	009 Move X20, 0x2398000
	010 Move W8, [X21+2063]
	011 Move X20, [X20+1608]
	012 Move V8, V0
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x2398000
	019 Move X0, [X0+1608]
	020 Call 0x1C17CF4
	021 Move X0, 0x2398000
	022 Move X0, [X0+2736]
	023 Call 0x1C17CF4
	024 Move X0, 0x239A000
	025 Move X0, [X0+1208]
	026 Call 0x1C17CF4
	027 Move X0, 0x2399000
	028 Move X0, [X0+2840]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+2063], W8
	032 Move X0, [X20]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X21, 0x267D000
	038 Move W8, [X21+1927]
	039 Compare W8, 0
	040 JumpIfNotEqual {46}
	041 Move X0, 0x2398000
	042 Move X0, [X0+1608]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X21+1927], W8
	046 Move X0, [X20]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X20]
	052 Move X8, [X0+184]
	053 Move X8, [X8]
	054 Compare X8, 0
	055 JumpIfEqual {130}
	056 Move X8, [X8+184]
	057 Compare X8, 0
	058 JumpIfEqual {130}
	059 Move X8, [X8+120]
	060 Compare X8, 0
	061 JumpIfEqual {130}
	062 Move X8, [X8+80]
	063 Compare X8, 0
	064 JumpIfEqual {130}
	065 Move X9, 0x2398000
	066 Move X9, [X9+2736]
	067 Move X20, 0x239A000
	068 Move X20, [X20+1208]
	069 Move V1, [X19+32]
	070 Move V0, [X8+76]
	071 Move X0, [X9]
	072 Move V9, [X8+80]
	073 Move V10, [X8+88]
	074 Multiply S1, S1, S8
	075 Move S2, 1
	076 Add S0, S0, S1
	077 NotImplemented "Instruction FMIN not yet implemented."
	078 NotImplemented "Instruction FCMP not yet implemented."
	079 Move S0, W31
	080 Move W1, 1
	081 NotImplemented "Instruction FCSEL not yet implemented."
	082 Call 0x1C17D6C
	083 Move X8, [X20]
	084 Move X19, X0
	085 Move X0, X8
	086 Call 0x1C17F10
	087 Move X1, X31
	088 Move X20, X0
	089 Call BaseAction..ctor, X0
	090 Move X8, [X20]
	091 Move [X20+20], S8
	092 Move [X20+24], D9
	093 Move [X20+32], S10
	094 Move X9, [X8+408]
	095 Move X2, [X8+416]
	096 Move W1, 1
	097 Move X0, X20
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Compare X19, 0
	100 JumpIfEqual {130}
	101 Move X20, X0
	102 Compare X0, 0
	103 JumpIfEqual {110}
	104 Move X8, [X19]
	105 Move X0, X20
	106 Move X1, [X8+64]
	107 Call 0x1C17E00
	108 Compare X0, 0
	109 JumpIfEqual {132}
	110 Move W8, [X19+24]
	111 Compare W8, 0
	112 JumpIfEqual {131}
	113 Move X0, X19
	114 Move X1, X31
	115 Move [X19+32], X20
	116 Call App.ExecuteActionOrDelay, X0
	117 NotImplemented "Instruction FCMP not yet implemented."
	118 Move S0, 1
	119 NotImplemented "Instruction FCMP not yet implemented."
	120 NotImplemented "Instruction CSET not yet implemented."
	121 Move W0, W31
	122 Move X20, [X31+48]
	123 Move X19, [X31+56]
	124 Move X30, [X31+32]
	125 Move X21, [X31+40]
	126 Move D9, [X31+16]
	127 Move D8, [X31+24]
	128 Move V10, [X31+64]
	129 Return X0
	130 Call 0x1C17F20
	131 Call 0x1C17F28
	132 Call 0x1C17F44
	133 Move X1, X31
	134 Call 0x1C17DEC

Method: System.Boolean ScrollGreen(System.Single value)

Disassembly:
	0x01D5CFAC CBZ X0, 0x1D5D12C
	0x01D5CFB0 MOV X1, X31
	0x01D5CFB4 BL 0x3C3F58C
	0x01D5CFB8 ADRP X8, 0x2398000
	0x01D5CFBC LDR X8, [X8 + 0x570]
	0x01D5CFC0 FMOV S3, 1
	0x01D5CFC4 MOV X1, X31
	0x01D5CFC8 LDR X0, [X8]
	0x01D5CFCC BL 0x1DC239C
	0x01D5CFD0 ADRP X8, 0x2397000
	0x01D5CFD4 LDR X8, [X8 + 0x720]
	0x01D5CFD8 LDR X0, [X8]
	0x01D5CFDC BL 0x1C16F10
	0x01D5CFE0 ADRP X8, 0x2397000
	0x01D5CFE4 LDR X8, [X8 + 0x718]
	0x01D5CFE8 MOV X20, X0
	0x01D5CFEC LDR X1, [X8]
	0x01D5CFF0 BL 0x2AA4804
	0x01D5CFF4 CBZ X20, 0x1D5D12C
	0x01D5CFF8 ADRP X8, 0x2399000
	0x01D5CFFC ADRP X9, 0x2399000
	0x01D5D000 ADRP X10, 0x2396000
	0x01D5D004 LDR X8, [X8 + 0x518]
	0x01D5D008 LDR X9, [X9 + 0x4E8]
	0x01D5D00C B 0x3EB14F4
	0x01D5D010 MOV X0, X20
	0x01D5D014 LDR X1, [X8]
	0x01D5D018 LDR X2, [X9]
	0x01D5D01C LDR X3, [X10]
	0x01D5D020 BL 0x2AA5098
	0x01D5D024 ADRP X8, 0x2396000
	0x01D5D028 LDR X8, [X8 + 0xB50]
	0x01D5D02C LDR X0, [X8]
	0x01D5D030 LDR W8, [X0 + 0xE0]
	0x01D5D034 CBNZ W8, 0x1D5D03C
	0x01D5D038 BL 0x1C16DFC
	0x01D5D03C ADRP X8, 0x2398000
	0x01D5D040 LDR X8, [X8 + 0x520]
	0x01D5D044 MOV X1, X20
	0x01D5D048 MOV X2, X31
	0x01D5D04C LDR X0, [X8]
	0x01D5D050 BL 0x1DC4DD0
	0x01D5D054 ADRP X23, 0x2398000
	0x01D5D058 LDR X23, [X23 + 0x4E0]
	0x01D5D05C LDR X0, [X23]
	0x01D5D060 LDR W8, [X0 + 0xE0]
	0x01D5D064 CBNZ W8, 0x1D5D070
	0x01D5D068 BL 0x1C16DFC
	0x01D5D06C LDR X0, [X23]
	0x01D5D070 LDR X8, [X0 + 0xB8]
	0x01D5D074 LDR X21, [X8 + 0x10]
	0x01D5D078 ADRP X8, 0x2397000
	0x01D5D07C LDR X8, [X8 + 0x580]
	0x01D5D080 LDR X20, [X8]
	0x01D5D084 CBNZ X21, 0x1D5D0D8
	0x01D5D088 LDR W8, [X0 + 0xE0]
	0x01D5D08C CBNZ W8, 0x1D5D098
	0x01D5D090 BL 0x1C16DFC
	0x01D5D094 LDR X0, [X23]
	0x01D5D098 ADRP X9, 0x2397000
	0x01D5D09C LDR X8, [X0 + 0xB8]
	0x01D5D0A0 LDR X9, [X9 + 0x518]
	0x01D5D0A4 LDR X22, [X8]
	0x01D5D0A8 LDR X0, [X9]
	0x01D5D0AC BL 0x1C16F10
	0x01D5D0B0 ADRP X8, 0x2398000
	0x01D5D0B4 LDR X8, [X8 + 0x510]
	0x01D5D0B8 MOV X1, X22
	0x01D5D0BC MOV X3, X31
	0x01D5D0C0 MOV X21, X0
	0x01D5D0C4 LDR X2, [X8]
	0x01D5D0C8 BL 0x2695248
	0x01D5D0CC LDR X8, [X23]
	0x01D5D0D0 LDR X8, [X8 + 0xB8]
	0x01D5D0D4 STR X21, [X8 + 0x10]
	0x01D5D0D8 ADRP X8, 0x2397000
	0x01D5D0DC LDR X8, [X8 + 0x4E0]
	0x01D5D0E0 MOV X0, X20
	0x01D5D0E4 MOV X1, X21
	0x01D5D0E8 MOV W2, W31
	0x01D5D0EC LDR X4, [X8]
	0x01D5D0F0 MOV X3, X31
	0x01D5D0F4 BL 0x21A3304
	0x01D5D0F8 STR X0, [X19 + 0x28]
	0x01D5D0FC CBZ X0, 0x1D5D12C
	0x01D5D100 MOVZ W8, 0x2
	0x01D5D104 STRB W31, [X0 + 0x14]
	0x01D5D108 STR X0, [X19 + 0x18]
	0x01D5D10C STR W8, [X19 + 0x10]
	0x01D5D110 MOVZ W0, 0x1
	0x01D5D114 LDP X20, X19, [X31 + 0x40]
	0x01D5D118 LDP X22, X21, [X31 + 0x30]
	0x01D5D11C LDP X30, X23, [X31 + 0x20]
	0x01D5D120 LDP D9, D8, [X31 + 0x10]
	0x01D5D124 LDR V10, [X31], #0x50
	0x01D5D128 RET
	0x01D5D12C BL 0x1C16F20
	0x01D5D130 BL 0x1C16F28
	0x01D5D134 BL 0x1C16F44
	0x01D5D138 MOV X1, X31
	0x01D5D13C BL 0x1C16DEC
	0x01D5D140 LDR X0, [X0 + 0x18]
	0x01D5D144 RET
	0x01D5D148 STP X30, X19, [X31 - 0x10]!
	0x01D5D14C ADRP X0, 0x2396000
	0x01D5D150 LDR X0, [X0 + 0xB40]
	0x01D5D154 BL 0x1C16D08
	0x01D5D158 BL 0x1C16F10
	0x01D5D15C MOV X1, X31
	0x01D5D160 MOV X19, X0
	0x01D5D164 BL 0x3380310
	0x01D5D168 ADRP X0, 0x2398000
	0x01D5D16C LDR X0, [X0 + 0x528]

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x267D000
	009 Move X20, 0x2398000
	010 Move W8, [X21+2064]
	011 Move X20, [X20+1608]
	012 Move V8, V0
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x2398000
	019 Move X0, [X0+1608]
	020 Call 0x1C17CF4
	021 Move X0, 0x2398000
	022 Move X0, [X0+2736]
	023 Call 0x1C17CF4
	024 Move X0, 0x239A000
	025 Move X0, [X0+1208]
	026 Call 0x1C17CF4
	027 Move X0, 0x2399000
	028 Move X0, [X0+2840]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+2064], W8
	032 Move X0, [X20]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X21, 0x267C000
	038 Move W8, [X21+1927]
	039 Compare W8, 0
	040 JumpIfNotEqual {46}
	041 Move X0, 0x2397000
	042 Move X0, [X0+1608]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X21+1927], W8
	046 Move X0, [X20]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X20]
	052 Move X8, [X0+184]
	053 Move X8, [X8]
	054 Compare X8, 0
	055 JumpIfEqual {130}
	056 Move X8, [X8+184]
	057 Compare X8, 0
	058 JumpIfEqual {130}
	059 Move X8, [X8+120]
	060 Compare X8, 0
	061 JumpIfEqual {130}
	062 Move X8, [X8+80]
	063 Compare X8, 0
	064 JumpIfEqual {130}
	065 Move X9, 0x2397000
	066 Move X9, [X9+2736]
	067 Move X20, 0x2399000
	068 Move X20, [X20+1208]
	069 Move V1, [X19+32]
	070 Move S9, [X8+76]
	071 Move S0, [X8+80]
	072 Move X0, [X9]
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 Multiply S1, S1, S8
	075 Move S2, 1
	076 Add S0, S0, S1
	077 NotImplemented "Instruction FMIN not yet implemented."
	078 NotImplemented "Instruction FCMP not yet implemented."
	079 Move S0, W31
	080 Move W1, 1
	081 NotImplemented "Instruction FCSEL not yet implemented."
	082 Call 0x1C17D6C
	083 Move X8, [X20]
	084 Move X19, X0
	085 Move X0, X8
	086 Call 0x1C17F10
	087 Move X1, X31
	088 Move X20, X0
	089 Call BaseAction..ctor, X0
	090 Move X8, [X20]
	091 Move [X20+20], S9
	092 Move [X20+28], S8
	093 Move [X20+28], D10
	094 Move W1, 1
	095 Move X9, [X8+408]
	096 Move X2, [X8+416]
	097 Move X0, X20
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Compare X19, 0
	100 JumpIfEqual {130}
	101 Move X20, X0
	102 Compare X0, 0
	103 JumpIfEqual {110}
	104 Move X8, [X19]
	105 Move X0, X20
	106 Move X1, [X8+64]
	107 Call 0x1C17E00
	108 Compare X0, 0
	109 JumpIfEqual {132}
	110 Move W8, [X19+24]
	111 Compare W8, 0
	112 JumpIfEqual {131}
	113 Move X0, X19
	114 Move X1, X31
	115 Move [X19+32], X20
	116 Call App.ExecuteActionOrDelay, X0
	117 NotImplemented "Instruction FCMP not yet implemented."
	118 Move S0, 1
	119 NotImplemented "Instruction FCMP not yet implemented."
	120 NotImplemented "Instruction CSET not yet implemented."
	121 Move W0, W31
	122 Move X20, [X31+48]
	123 Move X19, [X31+56]
	124 Move X30, [X31+32]
	125 Move X21, [X31+40]
	126 Move D9, [X31+16]
	127 Move D8, [X31+24]
	128 Move V10, [X31+64]
	129 Return X0
	130 Call 0x1C17F20
	131 Call 0x1C17F28
	132 Call 0x1C17F44
	133 Move X1, X31
	134 Call 0x1C17DEC

Method: System.Boolean ScrollBlue(System.Single value)

Disassembly:
	0x01D5D170 BL 0x1C16D08
	0x01D5D174 MOV X1, X0
	0x01D5D178 MOV X0, X19
	0x01D5D17C BL 0x1C16DEC
	0x01D5D180 LDR X0, [X0 + 0x18]
	0x01D5D184 RET
	0x01D5D188 STP X30, X23, [X31 - 0x30]!
	0x01D5D18C STP X22, X21, [X31 + 0x10]
	0x01D5D190 STP X20, X19, [X31 + 0x20]
	0x01D5D194 ADRP X20, 0x267B000
	0x01D5D198 LDRB W8, [X20 + 0x81C]
	0x01D5D19C MOV X19, X0
	0x01D5D1A0 TBNZ X8, 0x0, 0x1D5D1F4
	0x01D5D1A4 ADRP X0, 0x2397000
	0x01D5D1A8 LDR X0, [X0 + 0xE70]
	0x01D5D1AC BL 0x1C16CF4
	0x01D5D1B0 ADRP X0, 0x2398000
	0x01D5D1B4 LDR X0, [X0 + 0x530]
	0x01D5D1B8 BL 0x1C16CF4
	0x01D5D1BC ADRP X0, 0x2398000
	0x01D5D1C0 LDR X0, [X0 + 0x538]
	0x01D5D1C4 BL 0x1C16CF4
	0x01D5D1C8 ADRP X0, 0x2396000
	0x01D5D1CC LDR X0, [X0 + 0x648]
	0x01D5D1D0 BL 0x1C16CF4
	0x01D5D1D4 ADRP X0, 0x2396000
	0x01D5D1D8 LDR X0, [X0 + 0xDB0]
	0x01D5D1DC BL 0x1C16CF4
	0x01D5D1E0 ADRP X0, 0x2396000
	0x01D5D1E4 LDR X0, [X0 + 0xDA0]
	0x01D5D1E8 BL 0x1C16CF4
	0x01D5D1EC MOVZ W8, 0x1
	0x01D5D1F0 STRB W8, [X20 + 0x81C]
	0x01D5D1F4 LDR X22, [X19 + 0x30]
	0x01D5D1F8 CBZ X22, 0x1D5D37C
	0x01D5D1FC ADRP X23, 0x2397000
	0x01D5D200 LDR X23, [X23 + 0xE70]
	0x01D5D204 ADRP X21, 0x2398000
	0x01D5D208 LDR X20, [X22 + 0x20]
	0x01D5D20C LDR X0, [X23]
	0x01D5D210 LDR X21, [X21 + 0x538]
	0x01D5D214 BL 0x1C16F10
	0x01D5D218 LDR X2, [X21]
	0x01D5D21C MOV X1, X19
	0x01D5D220 MOV X3, X31
	0x01D5D224 MOV X21, X0
	0x01D5D228 BL 0x3314368
	0x01D5D22C MOV X0, X20
	0x01D5D230 MOV X1, X21
	0x01D5D234 MOV X2, X31
	0x01D5D238 BL 0x33C0DE4
	0x01D5D23C CBZ X0, 0x1D5D264
	0x01D5D240 LDR X1, [X23]
	0x01D5D244 LDR X8, [X0]
	0x01D5D248 CMP X8, X1
	0x01D5D24C B.NE 0x1D5D260
	0x01D5D250 STR X0, [X22 + 0x20]
	0x01D5D254 LDR X8, [X0]
	0x01D5D258 CMP X8, X1
	0x01D5D25C B.EQ 0x1D5D268
	0x01D5D260 BL 0x1C171E0
	0x01D5D264 STR X0, [X22 + 0x20]
	0x01D5D268 ADRP X20, 0x2396000
	0x01D5D26C ADRP X21, 0x2398000
	0x01D5D270 ADRP X23, 0x2396000
	0x01D5D274 ADRP X22, 0x2396000
	0x01D5D278 LDR X20, [X20 + 0xDA0]
	0x01D5D27C LDR X21, [X21 + 0x530]
	0x01D5D280 LDR X23, [X23 + 0xDB0]
	0x01D5D284 LDR X22, [X22 + 0x648]
	0x01D5D288 MOV X0, X19
	0x01D5D28C MOV W1, W31
	0x01D5D290 BL 0x1D5D390
	0x01D5D294 LDR X0, [X20]
	0x01D5D298 BL 0x1C16F10
	0x01D5D29C LDR X2, [X21]
	0x01D5D2A0 MOV X1, X19
	0x01D5D2A4 MOV X3, X31
	0x01D5D2A8 MOV X20, X0
	0x01D5D2AC BL 0x35C52F0
	0x01D5D2B0 LDR X0, [X23]
	0x01D5D2B4 MOVZ W1, 0x1
	0x01D5D2B8 BL 0x1C16D6C
	0x01D5D2BC LDR X8, [X22]
	0x01D5D2C0 MOV X21, X0
	0x01D5D2C4 LDR W9, [X8 + 0xE0]
	0x01D5D2C8 CBNZ W9, 0x1D5D2D4
	0x01D5D2CC MOV X0, X8
	0x01D5D2D0 BL 0x1C16DFC
	0x01D5D2D4 ADRP X23, 0x267B000
	0x01D5D2D8 LDRB W8, [X23 + 0x787]
	0x01D5D2DC CBNZ W8, 0x1D5D2F4
	0x01D5D2E0 ADRP X0, 0x2396000
	0x01D5D2E4 LDR X0, [X0 + 0x648]
	0x01D5D2E8 BL 0x1C16CF4
	0x01D5D2EC MOVZ W8, 0x1
	0x01D5D2F0 STRB W8, [X23 + 0x787]
	0x01D5D2F4 LDR X0, [X22]
	0x01D5D2F8 LDR W8, [X0 + 0xE0]
	0x01D5D2FC CBNZ W8, 0x1D5D308
	0x01D5D300 BL 0x1C16DFC
	0x01D5D304 LDR X0, [X22]
	0x01D5D308 LDR X8, [X0 + 0xB8]
	0x01D5D30C LDR X8, [X8]
	0x01D5D310 CBZ X8, 0x1D5D37C
	0x01D5D314 LDR X8, [X8 + 0xB8]
	0x01D5D318 CBZ X8, 0x1D5D37C
	0x01D5D31C CBZ X21, 0x1D5D37C
	0x01D5D320 LDR X22, [X8 + 0x88]
	0x01D5D324 CBZ X22, 0x1D5D33C
	0x01D5D328 LDR X8, [X21]
	0x01D5D32C MOV X0, X22
	0x01D5D330 LDR X1, [X8 + 0x40]

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x267C000
	009 Move X20, 0x2397000
	010 Move W8, [X21+2065]
	011 Move X20, [X20+1608]
	012 Move V8, V0
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x2397000
	019 Move X0, [X0+1608]
	020 Call 0x1C17CF4
	021 Move X0, 0x2397000
	022 Move X0, [X0+2736]
	023 Call 0x1C17CF4
	024 Move X0, 0x2399000
	025 Move X0, [X0+1208]
	026 Call 0x1C17CF4
	027 Move X0, 0x2398000
	028 Move X0, [X0+2840]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+2065], W8
	032 Move X0, [X20]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X21, 0x267C000
	038 Move W8, [X21+1927]
	039 Compare W8, 0
	040 JumpIfNotEqual {46}
	041 Move X0, 0x2397000
	042 Move X0, [X0+1608]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X21+1927], W8
	046 Move X0, [X20]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X20]
	052 Move X8, [X0+184]
	053 Move X8, [X8]
	054 Compare X8, 0
	055 JumpIfEqual {130}
	056 Move X8, [X8+184]
	057 Compare X8, 0
	058 JumpIfEqual {130}
	059 Move X8, [X8+120]
	060 Compare X8, 0
	061 JumpIfEqual {130}
	062 Move X8, [X8+80]
	063 Compare X8, 0
	064 JumpIfEqual {130}
	065 Move X9, 0x2397000
	066 Move X9, [X9+2736]
	067 Move X20, 0x2399000
	068 Move X20, [X20+1208]
	069 Move V0, [X19+32]
	070 Move S1, [X8+84]
	071 Move S10, [X8+88]
	072 Move X0, [X9]
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 Multiply S0, S0, S8
	075 Move S2, 1
	076 Add S0, S1, S0
	077 NotImplemented "Instruction FMIN not yet implemented."
	078 NotImplemented "Instruction FCMP not yet implemented."
	079 Move S0, W31
	080 Move W1, 1
	081 NotImplemented "Instruction FCSEL not yet implemented."
	082 Call 0x1C17D6C
	083 Move X8, [X20]
	084 Move X19, X0
	085 Move X0, X8
	086 Call 0x1C17F10
	087 Move X1, X31
	088 Move X20, X0
	089 Call BaseAction..ctor, X0
	090 Move X8, [X20]
	091 Move [X20+20], D9
	092 Move [X20+28], S8
	093 Move [X20+36], S10
	094 Move W1, 1
	095 Move X9, [X8+408]
	096 Move X2, [X8+416]
	097 Move X0, X20
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Compare X19, 0
	100 JumpIfEqual {130}
	101 Move X20, X0
	102 Compare X0, 0
	103 JumpIfEqual {110}
	104 Move X8, [X19]
	105 Move X0, X20
	106 Move X1, [X8+64]
	107 Call 0x1C17E00
	108 Compare X0, 0
	109 JumpIfEqual {132}
	110 Move W8, [X19+24]
	111 Compare W8, 0
	112 JumpIfEqual {131}
	113 Move X0, X19
	114 Move X1, X31
	115 Move [X19+32], X20
	116 Call App.ExecuteActionOrDelay, X0
	117 NotImplemented "Instruction FCMP not yet implemented."
	118 Move S0, 1
	119 NotImplemented "Instruction FCMP not yet implemented."
	120 NotImplemented "Instruction CSET not yet implemented."
	121 Move W0, W31
	122 Move X20, [X31+48]
	123 Move X19, [X31+56]
	124 Move X30, [X31+32]
	125 Move X21, [X31+40]
	126 Move D9, [X31+16]
	127 Move D8, [X31+24]
	128 Move V10, [X31+64]
	129 Return X0
	130 Call 0x1C17F20
	131 Call 0x1C17F28
	132 Call 0x1C17F44
	133 Move X1, X31
	134 Call 0x1C17DEC

Method: System.Void .ctor()

Disassembly:
	0x01D5D334 BL 0x1C16E00
	0x01D5D338 CBZ X0, 0x1D5D384
	0x01D5D33C LDR W8, [X21 + 0x18]
	0x01D5D340 CBZ W8, 0x1D5D380
	0x01D5D344 MOV X0, X20

ISIL:
	001 Move W8, 0xCCCD
	002 NotImplemented "Instruction MOVK not yet implemented."
	003 Move X1, X31
	004 Move [X0+32], W8
	005 Call MonoBehaviour..ctor, X0
	006 Return 

