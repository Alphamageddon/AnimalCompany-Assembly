Type: AnimalCompany.TriggerUtilities

Method: System.Boolean TryGetNetPlayerFromCollider(UnityEngine.Collider col, out AnimalCompany.NetPlayer netPlayer)

Disassembly:
	0x01CF37FC BL 0x1DA8294
	0x01CF3800 STUR X0, [X21 + 0x1C]
	0x01CF3804 STRB W19, [X21 + 0x24]
	0x01CF3808 STP S14, S13, [X21 + 0x28]
	0x01CF380C STP S12, S11, [X21 + 0x30]
	0x01CF3810 STP S10, S9, [X21 + 0x38]
	0x01CF3814 STR S8, [X21 + 0x40]
	0x01CF3818 CBZ X21, 0x1CF3844
	0x01CF381C LDR W8, [X21 + 0x14]
	0x01CF3820 MOVZ W9, 0x140
	0x01CF3824 MOV X0, X20
	0x01CF3828 MOV X1, X21
	0x01CF382C ORR W8, W8, 0x4
	0x01CF3830 MOV X2, X31
	0x01CF3834 STR W9, [X21 + 0xC]
	0x01CF3838 STR W8, [X21 + 0x14]
	0x01CF383C BL 0x1D8A710
	0x01CF3840 B 0x1CF36C0
	0x01CF3844 BL 0x1B6EA1C
	0x01CF3848 ADRP X0, 0x225C000
	0x01CF384C LDR X0, [X0 + 0x718]
	0x01CF3850 BL 0x1B6E804

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2531000
	006 Move W8, [X21+1738]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x225E000
	014 Move X0, [X0+760]
	015 Call 0x1B6F7F0
	016 Move W8, 1
	017 Move [X21+1738], W8
	018 Compare X20, 0
	019 JumpIfEqual {31}
	020 Move X8, 0x225E000
	021 Move X8, [X8+760]
	022 Move X0, X20
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call 0x2091EE4, X0, X1
	030 Return X0
	031 Call 0x1B6FA1C

Method: System.Boolean TryGetItemFromCollider(UnityEngine.Collider col, out AnimalCompany.GrabbableItem grabbableItem)

Disassembly:
	0x01CF35DC LDP D11, D10, [X31 + 0x18]
	0x01CF35E0 LDP D13, D12, [X31 + 0x8]
	0x01CF35E4 MOV V0.16B, V14.16B
	0x01CF35E8 LDR V14, [X31], #0x50
	0x01CF35EC B 0x1CF35F4
	0x01CF35F0 BL 0x1B6EA1C
	0x01CF35F4 SUB X31, X31, 0x70
	0x01CF35F8 STR D14, [X31 + 0x10]
	0x01CF35FC STP D13, D12, [X31 + 0x18]
	0x01CF3600 STP D11, D10, [X31 + 0x28]
	0x01CF3604 STP D9, D8, [X31 + 0x38]
	0x01CF3608 STR X30, [X31 + 0x48]
	0x01CF360C STP X22, X21, [X31 + 0x50]
	0x01CF3610 STP X20, X19, [X31 + 0x60]
	0x01CF3614 ADRP X21, 0x2530000
	0x01CF3618 ADRP X22, 0x225B000
	0x01CF361C LDRB W8, [X21 + 0x6DA]
	0x01CF3620 LDR X22, [X22 + 0x1C0]
	0x01CF3624 MOV V8.16B, V6.16B
	0x01CF3628 MOV V9.16B, V5.16B
	0x01CF362C MOV V10.16B, V4.16B
	0x01CF3630 MOV V11.16B, V3.16B
	0x01CF3634 MOV V12.16B, V2.16B
	0x01CF3638 MOV V13.16B, V1.16B
	0x01CF363C MOV V14.16B, V0.16B
	0x01CF3640 MOV W19, W1
	0x01CF3644 MOV X20, X0
	0x01CF3648 TBNZ X8, 0x0, 0x1CF3684
	0x01CF364C ADRP X0, 0x225B000
	0x01CF3650 LDR X0, [X0 + 0x1C0]
	0x01CF3654 BL 0x1B6E7F0
	0x01CF3658 ADRP X0, 0x225D000
	0x01CF365C LDR X0, [X0 + 0x6C0]
	0x01CF3660 BL 0x1B6E7F0
	0x01CF3664 ADRP X0, 0x225D000
	0x01CF3668 LDR X0, [X0 + 0x6D0]
	0x01CF366C BL 0x1B6E7F0
	0x01CF3670 ADRP X0, 0x225D000
	0x01CF3674 LDR X0, [X0 + 0x6D8]
	0x01CF3678 BL 0x1B6E7F0
	0x01CF367C MOVZ W8, 0x1
	0x01CF3680 STRB W8, [X21 + 0x6DA]
	0x01CF3684 LDR X0, [X22]
	0x01CF3688 STR X31, [X31 + 0x8]
	0x01CF368C LDR W8, [X0 + 0xE0]
	0x01CF3690 CBNZ W8, 0x1CF369C
	0x01CF3694 BL 0x1B6E8F8
	0x01CF3698 LDR X0, [X22]
	0x01CF369C LDR X8, [X0 + 0xB8]
	0x01CF36A0 LDRB W9, [X8 + 0x20]
	0x01CF36A4 CBZ W9, 0x1CF3764
	0x01CF36A8 LDR W9, [X0 + 0xE0]
	0x01CF36AC CBNZ W9, 0x1CF36BC
	0x01CF36B0 BL 0x1B6E8F8
	0x01CF36B4 LDR X8, [X22]
	0x01CF36B8 LDR X8, [X8 + 0xB8]
	0x01CF36BC STRB W31, [X8 + 0x20]
	0x01CF36C0 ADRP X8, 0x225D000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2531000
	007 Move W8, [X21+1739]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x225C000
	015 Move X0, [X0+616]
	016 Call 0x1B6F7F0
	017 Move X0, 0x225B000
	018 Move X0, [X0+1144]
	019 Call 0x1B6F7F0
	020 Move W8, 1
	021 Move [X21+1739], W8
	022 Move [X19], X31
	023 Compare X20, 0
	024 JumpIfEqual {73}
	025 Move X22, 0x225B000
	026 Move X22, [X22+1144]
	027 Move X0, X20
	028 Move X1, X31
	029 Call Collider.get_attachedRigidbody, X0
	030 Move X8, [X22]
	031 Move X21, X0
	032 Move W9, [X8+224]
	033 Compare W9, 0
	034 JumpIfNotEqual {37}
	035 Move X0, X8
	036 Call 0x1B6F8F8
	037 Move X0, X21
	038 Move X1, X31
	039 Move X2, X31
	040 Call Object.op_Inequality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {51}
	045 Move X0, X20
	046 Move X1, X31
	047 Call Collider.get_attachedRigidbody, X0
	048 Compare X0, 0
	049 JumpIfEqual {73}
	050 Move X20, X0
	051 Move X8, 0x225C000
	052 Move X8, [X8+616]
	053 Move X0, X20
	054 Move X1, [X8]
	055 Call 0x2090DE8, X0
	056 Move [X19], X0
	057 Move X20, X0
	058 Move X0, [X22]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1B6F8F8
	063 Move X0, X20
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X1, X31
	069 Move X2, X31
	070 Move X30, [X31+48]
	071 Call Object.op_Inequality, X0, X1
	072 Return X0
	073 Call 0x1B6FA1C

Method: System.Void .ctor()

Disassembly:
	0x01CF3854 BL 0x1B6EA0C
	0x01CF3858 MOV X19, X0

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

