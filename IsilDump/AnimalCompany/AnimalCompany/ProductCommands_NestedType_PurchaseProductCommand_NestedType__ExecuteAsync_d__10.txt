Type: AnimalCompany.ProductCommands/PurchaseProductCommand/<ExecuteAsync>d__10

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01D46498 LDR X8, [X8 + 0x560]
	0x01D4649C LDR X20, [X8]
	0x01D464A0 CBNZ X21, 0x1D464F4
	0x01D464A4 LDR W8, [X0 + 0xE0]
	0x01D464A8 CBNZ W8, 0x1D464B4
	0x01D464AC BL 0x1C16DFC
	0x01D464B0 LDR X0, [X23]
	0x01D464B4 ADRP X9, 0x23AE000
	0x01D464B8 LDR X8, [X0 + 0xB8]
	0x01D464BC LDR X9, [X9 + 0x510]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01D46E9C LDR X8, [X22]

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01D46EA0 LDR W9, [X8 + 0xE0]
	0x01D46EA4 CBNZ W9, 0x1D46EB0
	0x01D46EA8 MOV X0, X8
	0x01D46EAC BL 0x1C16DFC
	0x01D46EB0 ADRP X23, 0x23AE000
	0x01D46EB4 ADRP X24, 0x23AE000
	0x01D46EB8 LDR X23, [X23 + 0x600]
	0x01D46EBC LDR X24, [X24 + 0x88]
	0x01D46EC0 MOVZ W0, 0x4000
	0x01D46EC4 MOVZ W5, 0x48
	0x01D46EC8 LDR X3, [X23]
	0x01D46ECC LDR X4, [X24]
	0x01D46ED0 MOV X1, X20
	0x01D46ED4 MOV X2, X31
	0x01D46ED8 MOV X6, X31
	0x01D46EDC BL 0x35C2158
	0x01D46EE0 LDR X0, [X25 + 0x20]
	0x01D46EE4 CBZ X0, 0x1D47288
	0x01D46EE8 STR X25, [X31 + 0x8]
	0x01D46EEC ADRP X8, 0x23AE000
	0x01D46EF0 LDR X8, [X8 + 0x410]
	0x01D46EF4 LDR X1, [X8]
	0x01D46EF8 BL 0x29B47A4
	0x01D46EFC MOV X20, X0
	0x01D46F00 CBZ X0, 0x1D4728C
	0x01D46F04 ADRP X25, 0x23AD000
	0x01D46F08 ADRP X26, 0x23AE000
	0x01D46F0C ADRP X27, 0x23AD000
	0x01D46F10 ADRP X28, 0x23AE000
	0x01D46F14 ADRP X29, 0x23AE000
	0x01D46F18 ADRP X19, 0x23AE000
	0x01D46F1C LDR X25, [X25 + 0xE18]
	0x01D46F20 LDR X26, [X26 + 0x418]
	0x01D46F24 LDR X27, [X27 + 0xAC8]
	0x01D46F28 LDR X28, [X28 + 0x5F0]
	0x01D46F2C LDR X29, [X29 + 0x610]
	0x01D46F30 LDR X19, [X19 + 0x608]
	0x01D46F34 LDR X8, [X20]
	0x01D46F38 LDR X1, [X25]
	0x01D46F3C LDRH W9, [X8 + 0x12E]
	0x01D46F40 CBZ X9, 0x1D46F64
	0x01D46F44 LDR X10, [X8 + 0xB0]
	0x01D46F48 ADD X10, X10, 0x8
	0x01D46F4C LDUR X11, [X10 - 0x8]
	0x01D46F50 CMP X11, X1
	0x01D46F54 B.EQ 0x1D46F74
	0x01D46F58 SUBS X9, X9, 0x1
	0x01D46F5C ADD X10, X10, 0x10
	0x01D46F60 B.NE 0x1D46F4C
	0x01D46F64 MOV X0, X20
	0x01D46F68 MOV W2, W31
	0x01D46F6C BL 0x1C5C788
	0x01D46F70 B 0x1D46F80
	0x01D46F74 LDRSW X9, [X10]
	0x01D46F78 ADD X8, X8, X9, 0x4, LSL
	0x01D46F7C ADD X0, X8, 0x138
	0x01D46F80 LDP X8, X1, [X0]
	0x01D46F84 MOV X0, X20
	0x01D46F88 BLR X8
	0x01D46F8C TBZ X0, 0x0, 0x1D47090
	0x01D46F90 LDR X8, [X20]
	0x01D46F94 LDR X1, [X26]
	0x01D46F98 LDRH W9, [X8 + 0x12E]
	0x01D46F9C CBZ X9, 0x1D46FC0
	0x01D46FA0 LDR X10, [X8 + 0xB0]
	0x01D46FA4 ADD X10, X10, 0x8
	0x01D46FA8 LDUR X11, [X10 - 0x8]
	0x01D46FAC CMP X11, X1
	0x01D46FB0 B.EQ 0x1D46FD0
	0x01D46FB4 SUBS X9, X9, 0x1
	0x01D46FB8 ADD X10, X10, 0x10
	0x01D46FBC B.NE 0x1D46FA8
	0x01D46FC0 MOV X0, X20
	0x01D46FC4 MOV W2, W31
	0x01D46FC8 BL 0x1C5C788
	0x01D46FCC B 0x1D46FDC
	0x01D46FD0 LDRSW X9, [X10]
	0x01D46FD4 ADD X8, X8, X9, 0x4, LSL
	0x01D46FD8 ADD X0, X8, 0x138
	0x01D46FDC LDP X8, X1, [X0]
	0x01D46FE0 MOV X0, X20
	0x01D46FE4 BLR X8
	0x01D46FE8 MOV X21, X0
	0x01D46FEC LDR X0, [X27]
	0x01D46FF0 MOVZ W1, 0x5
	0x01D46FF4 BL 0x1C16D6C
	0x01D46FF8 CBZ X0, 0x1D47278
	0x01D46FFC LDR W8, [X0 + 0x18]
	0x01D47000 CBZ W8, 0x1D4727C
	0x01D47004 LDR X9, [X28]
	0x01D47008 STR X9, [X0 + 0x20]
	0x01D4700C CBZ X21, 0x1D47270
	0x01D47010 CMP W8, 0x1
	0x01D47014 B.LS 0x1D47280
	0x01D47018 LDR X9, [X21 + 0x20]
	0x01D4701C CMP W8, 0x2
	0x01D47020 STR X9, [X0 + 0x28]
	0x01D47024 B.EQ 0x1D47274
	0x01D47028 LDR X9, [X29]
	0x01D4702C CMP W8, 0x3
	0x01D47030 STR X9, [X0 + 0x30]
	0x01D47034 B.LS 0x1D47284
	0x01D47038 LDR X9, [X21 + 0x28]
	0x01D4703C CMP W8, 0x4
	0x01D47040 STR X9, [X0 + 0x38]
	0x01D47044 B.EQ 0x1D4726C
	0x01D47048 LDR X8, [X19]
	0x01D4704C STR X8, [X0 + 0x40]
	0x01D47050 MOV X1, X31
	0x01D47054 BL 0x32278CC
	0x01D47058 MOV X21, X0
	0x01D4705C LDR X0, [X22]
	0x01D47060 LDR W8, [X0 + 0xE0]
	0x01D47064 CBNZ W8, 0x1D4706C
	0x01D47068 BL 0x1C16DFC
	0x01D4706C LDR X3, [X23]
	0x01D47070 LDR X4, [X24]
	0x01D47074 MOVZ W0, 0x4000
	0x01D47078 MOVZ W5, 0x4B
	0x01D4707C MOV X1, X21
	0x01D47080 MOV X2, X31
	0x01D47084 MOV X6, X31
	0x01D47088 BL 0x35C2158
	0x01D4708C B 0x1D46F34
	0x01D47090 LDR X25, [X31 + 0x8]
	0x01D47094 MOV X21, X31
	0x01D47098 MOVZ W19, 0x9
	0x01D4709C CBZ X20, 0x1D47234
	0x01D470A0 ADRP X10, 0x23AC000
	0x01D470A4 LDR X8, [X20]
	0x01D470A8 LDR X10, [X10 + 0xE00]
	0x01D470AC LDRH W9, [X8 + 0x12E]
	0x01D470B0 LDR X1, [X10]
	0x01D470B4 CBZ X9, 0x1D470D8
	0x01D470B8 LDR X10, [X8 + 0xB0]
	0x01D470BC ADD X10, X10, 0x8
	0x01D470C0 LDUR X11, [X10 - 0x8]
	0x01D470C4 CMP X11, X1
	0x01D470C8 B.EQ 0x1D4721C
	0x01D470CC SUBS X9, X9, 0x1
	0x01D470D0 ADD X10, X10, 0x10
	0x01D470D4 B.NE 0x1D470C0
	0x01D470D8 MOV X0, X20
	0x01D470DC MOV W2, W31
	0x01D470E0 BL 0x1C5C788
	0x01D470E4 B 0x1D47228
	0x01D470E8 MOV X8, X31
	0x01D470EC ADRP X24, 0x23AD000
	0x01D470F0 LDR X24, [X24 + 0x478]
	0x01D470F4 ADD X1, X31, 0x10
	0x01D470F8 STR X8, [X31 + 0x10]
	0x01D470FC LDR X0, [X24]
	0x01D47100 BL 0x1C16E04
	0x01D47104 LDR X3, [X19]
	0x01D47108 MOV X2, X0
	0x01D4710C MOV X0, X22
	0x01D47110 MOV X1, X23
	0x01D47114 BL 0x2AA5098
	0x01D47118 LDR X8, [X20]
	0x01D4711C MOV X0, X20
	0x01D47120 LDP X9, X1, [X8 + 0x178]
	0x01D47124 BLR X9
	0x01D47128 ADRP X8, 0x23AD000
	0x01D4712C LDR X8, [X8 + 0x4A8]
	0x01D47130 LDR X23, [X8]
	0x01D47134 CBZ X0, 0x1D4715C
	0x01D47138 ADRP X8, 0x23AD000
	0x01D4713C LDR W1, [X0 + 0x14]
	0x01D47140 LDR X8, [X8 + 0x470]
	0x01D47144 ADD X0, X31, 0x10
	0x01D47148 STR X31, [X31 + 0x10]
	0x01D4714C LDR X2, [X8]
	0x01D47150 BL 0x24341FC
	0x01D47154 LDR X8, [X31 + 0x10]
	0x01D47158 B 0x1D47160
	0x01D4715C MOV X8, X31
	0x01D47160 LDR X0, [X24]
	0x01D47164 ADD X1, X31, 0x10
	0x01D47168 STR X8, [X31 + 0x10]
	0x01D4716C BL 0x1C16E04
	0x01D47170 LDR X3, [X19]
	0x01D47174 MOV X2, X0
	0x01D47178 MOV X0, X22
	0x01D4717C MOV X1, X23
	0x01D47180 BL 0x2AA5098
	0x01D47184 LDR X8, [X20]
	0x01D47188 MOV X0, X20
	0x01D4718C LDP X9, X1, [X8 + 0x178]
	0x01D47190 BLR X9
	0x01D47194 ADRP X8, 0x23AD000
	0x01D47198 LDR X8, [X8 + 0x480]
	0x01D4719C LDR X1, [X8]
	0x01D471A0 CBZ X0, 0x1D471AC
	0x01D471A4 LDR X2, [X0 + 0x18]
	0x01D471A8 B 0x1D471B0
	0x01D471AC MOV X2, X31
	0x01D471B0 LDR X3, [X19]
	0x01D471B4 MOV X0, X22
	0x01D471B8 BL 0x2AA5098
	0x01D471BC ADRP X8, 0x23AC000
	0x01D471C0 LDR X8, [X8 + 0x788]
	0x01D471C4 LDR X0, [X8]
	0x01D471C8 LDR W8, [X0 + 0xE0]
	0x01D471CC CBNZ W8, 0x1D471D4
	0x01D471D0 BL 0x1C16DFC
	0x01D471D4 ADRP X8, 0x23AD000
	0x01D471D8 ADRP X9, 0x23AD000
	0x01D471DC LDR X8, [X8 + 0x600]
	0x01D471E0 LDR X9, [X9 + 0x88]
	0x01D471E4 MOVZ W0, 0x4000
	0x01D471E8 MOVZ W5, 0x3C
	0x01D471EC LDR X3, [X8]
	0x01D471F0 LDR X4, [X9]
	0x01D471F4 MOV X1, X21
	0x01D471F8 MOV X2, X22
	0x01D471FC MOV X6, X31
	0x01D47200 BL 0x35C25CC
	0x01D47204 LDR X0, [X25 + 0x18]
	0x01D47208 CBZ X0, 0x1D47288
	0x01D4720C LDR X8, [X0]
	0x01D47210 LDP X9, X1, [X8 + 0x1B8]
	0x01D47214 BLR X9
	0x01D47218 B 0x1D47244
	0x01D4721C LDRSW X9, [X10]
	0x01D47220 ADD X8, X8, X9, 0x4, LSL
	0x01D47224 ADD X0, X8, 0x138
	0x01D47228 LDP X8, X1, [X0]
	0x01D4722C MOV X0, X20
	0x01D47230 BLR X8
	0x01D47234 CBNZ X21, 0x1D47290
	0x01D47238 CMP W19, 0x9
	0x01D4723C B.EQ 0x1D47244
	0x01D47240 CBNZ W19, 0x1D4724C
	0x01D47244 MOVZ W8, 0x1
	0x01D47248 STRB W8, [X25 + 0x28]
	0x01D4724C LDP X20, X19, [X31 + 0x70]
	0x01D47250 LDP X22, X21, [X31 + 0x60]
	0x01D47254 LDP X24, X23, [X31 + 0x50]
	0x01D47258 LDP X26, X25, [X31 + 0x40]
	0x01D4725C LDP X28, X27, [X31 + 0x30]
	0x01D47260 LDP X29, X30, [X31 + 0x20]
	0x01D47264 ADD X31, X31, 0x80
	0x01D47268 RET
	0x01D4726C BL 0x1C16F28
	0x01D47270 BL 0x1C16F20
	0x01D47274 BL 0x1C16F28
	0x01D47278 BL 0x1C16F20
	0x01D4727C BL 0x1C16F28
	0x01D47280 BL 0x1C16F28
	0x01D47284 BL 0x1C16F28
	0x01D47288 BL 0x1C16F20
	0x01D4728C BL 0x1C16F20
	0x01D47290 MOV X0, X21
	0x01D47294 BL 0x1C16F18
	0x01D47298 B 0x1D472C0
	0x01D4729C B 0x1D472C0
	0x01D472A0 B 0x1D472C0
	0x01D472A4 B 0x1D472C0
	0x01D472A8 B 0x1D472C0
	0x01D472AC B 0x1D472C0
	0x01D472B0 B 0x1D472C0
	0x01D472B4 B 0x1D472C0
	0x01D472B8 B 0x1D472C0
	0x01D472BC B 0x1D472C0
	0x01D472C0 LDR X25, [X31 + 0x8]
	0x01D472C4 MOV X22, X0
	0x01D472C8 CMP W1, 0x1
	0x01D472CC B.NE 0x1D472EC
	0x01D472D0 MOV X0, X22
	0x01D472D4 BL 0x3EB1AD0
	0x01D472D8 LDR X21, [X0]
	0x01D472DC BL 0x3EB1AE0
	0x01D472E0 MOV W19, W31
	0x01D472E4 CBNZ X20, 0x1D470A0
	0x01D472E8 B 0x1D47234
	0x01D472EC MOV X21, X31
	0x01D472F0 B 0x1D472F8
	0x01D472F4 MOV X22, X0
	0x01D472F8 CBZ X20, 0x1D4735C
	0x01D472FC ADRP X10, 0x23AC000
	0x01D47300 LDR X8, [X20]
	0x01D47304 LDR X10, [X10 + 0xE00]
	0x01D47308 LDRH W9, [X8 + 0x12E]
	0x01D4730C LDR X1, [X10]
	0x01D47310 CBZ X9, 0x1D47334
	0x01D47314 LDR X10, [X8 + 0xB0]
	0x01D47318 ADD X10, X10, 0x8
	0x01D4731C LDUR X11, [X10 - 0x8]
	0x01D47320 CMP X11, X1
	0x01D47324 B.EQ 0x1D47344
	0x01D47328 SUBS X9, X9, 0x1
	0x01D4732C ADD X10, X10, 0x10
	0x01D47330 B.NE 0x1D4731C
	0x01D47334 MOV X0, X20
	0x01D47338 MOV W2, W31
	0x01D4733C BL 0x1C5C788
	0x01D47340 B 0x1D47350
	0x01D47344 LDRSW X9, [X10]
	0x01D47348 ADD X8, X8, X9, 0x4, LSL
	0x01D4734C ADD X0, X8, 0x138
	0x01D47350 LDP X8, X1, [X0]
	0x01D47354 MOV X0, X20
	0x01D47358 BLR X8
	0x01D4735C CBNZ X21, 0x1D47368
	0x01D47360 MOV X0, X22
	0x01D47364 BL 0x1D2C690
	0x01D47368 MOV X0, X21
	0x01D4736C BL 0x1C16F18
	0x01D47370 BL 0x1990590
	0x01D47374 RET
	0x01D47378 STR X30, [X31 - 0x40]!
	0x01D4737C STP X24, X23, [X31 + 0x10]
	0x01D47380 STP X22, X21, [X31 + 0x20]
	0x01D47384 STP X20, X19, [X31 + 0x30]
	0x01D47388 ADRP X20, 0x2691000
	0x01D4738C LDRB W8, [X20 + 0x771]
	0x01D47390 MOV X19, X0
	0x01D47394 TBNZ X8, 0x0, 0x1D47490
	0x01D47398 ADRP X0, 0x23AC000
	0x01D4739C LDR X0, [X0 + 0x648]
	0x01D473A0 BL 0x1C16CF4
	0x01D473A4 ADRP X0, 0x23AC000
	0x01D473A8 LDR X0, [X0 + 0x970]
	0x01D473AC BL 0x1C16CF4
	0x01D473B0 ADRP X0, 0x23AC000
	0x01D473B4 LDR X0, [X0 + 0xAB0]
	0x01D473B8 BL 0x1C16CF4
	0x01D473BC ADRP X0, 0x23AD000
	0x01D473C0 LDR X0, [X0 + 0x618]
	0x01D473C4 BL 0x1C16CF4
	0x01D473C8 ADRP X0, 0x23AD000
	0x01D473CC LDR X0, [X0 + 0x620]
	0x01D473D0 BL 0x1C16CF4
	0x01D473D4 ADRP X0, 0x23AD000
	0x01D473D8 LDR X0, [X0 + 0x628]
	0x01D473DC BL 0x1C16CF4
	0x01D473E0 ADRP X0, 0x23AD000
	0x01D473E4 LDR X0, [X0 + 0x630]
	0x01D473E8 BL 0x1C16CF4
	0x01D473EC ADRP X0, 0x23AC000
	0x01D473F0 LDR X0, [X0 + 0xEB8]
	0x01D473F4 BL 0x1C16CF4
	0x01D473F8 ADRP X0, 0x23AD000
	0x01D473FC LDR X0, [X0 + 0x638]
	0x01D47400 BL 0x1C16CF4
	0x01D47404 ADRP X0, 0x23AD000
	0x01D47408 LDR X0, [X0 + 0x640]
	0x01D4740C BL 0x1C16CF4
	0x01D47410 ADRP X0, 0x23AD000
	0x01D47414 LDR X0, [X0 + 0x648]
	0x01D47418 BL 0x1C16CF4
	0x01D4741C ADRP X0, 0x23AD000
	0x01D47420 LDR X0, [X0 + 0x650]
	0x01D47424 BL 0x1C16CF4
	0x01D47428 ADRP X0, 0x23AD000
	0x01D4742C LDR X0, [X0 + 0x658]
	0x01D47430 BL 0x1C16CF4
	0x01D47434 ADRP X0, 0x23AD000
	0x01D47438 LDR X0, [X0 + 0x660]
	0x01D4743C BL 0x1C16CF4
	0x01D47440 ADRP X0, 0x23AD000
	0x01D47444 LDR X0, [X0 + 0x668]
	0x01D47448 BL 0x1C16CF4
	0x01D4744C ADRP X0, 0x23AD000
	0x01D47450 LDR X0, [X0 + 0x670]
	0x01D47454 BL 0x1C16CF4
	0x01D47458 ADRP X0, 0x23AD000
	0x01D4745C LDR X0, [X0 + 0x678]
	0x01D47460 BL 0x1C16CF4
	0x01D47464 ADRP X0, 0x23AD000
	0x01D47468 LDR X0, [X0 + 0x5C8]
	0x01D4746C BL 0x1C16CF4
	0x01D47470 ADRP X0, 0x23AD000
	0x01D47474 LDR X0, [X0 + 0x680]
	0x01D47478 BL 0x1C16CF4
	0x01D4747C ADRP X0, 0x23AD000
	0x01D47480 LDR X0, [X0 + 0x688]
	0x01D47484 BL 0x1C16CF4
	0x01D47488 MOVZ W8, 0x1
	0x01D4748C STRB W8, [X20 + 0x771]
	0x01D47490 LDR W8, [X19 + 0x10]
	0x01D47494 CMP W8, 0x3
	0x01D47498 B.HI 0x1D4783C
	0x01D4749C LDR X20, [X19 + 0x20]
	0x01D474A0 ADRP X9, 0xFFFFFFFFFEDA7000
	0x01D474A4 ADD X9, X9, 0x5D6
	0x01D474A8 ADR X10, 0x10
	0x01D474AC LDRB W11, [X9, X8, LSL]
	0x01D474B0 ADD X10, X10, X11, 0x2, LSL
	0x01D474B4 BR X10
	0x01D474B8 MOVN W8, 0x0
	0x01D474BC STR W8, [X19 + 0x10]
	0x01D474C0 ADRP X8, 0x23AD000
	0x01D474C4 LDR X8, [X8 + 0x678]
	0x01D474C8 LDR X0, [X8]
	0x01D474CC BL 0x1C16F10
	0x01D474D0 MOV X1, X31
	0x01D474D4 MOV X21, X0
	0x01D474D8 BL 0x33BDD8C
	0x01D474DC STR X21, [X19 + 0x28]
	0x01D474E0 CBZ X21, 0x1D47938
	0x01D474E4 LDR X8, [X19 + 0x20]
	0x01D474E8 MOVZ W9, 0x32
	0x01D474EC STR X8, [X21 + 0x18]
	0x01D474F0 STR W9, [X19 + 0x30]
	0x01D474F4 B 0x1D475C0
	0x01D474F8 LDR X8, [X19 + 0x38]
	0x01D474FC MOVN W9, 0x0
	0x01D47500 STR W9, [X19 + 0x10]
	0x01D47504 CBZ X8, 0x1D47938
	0x01D47508 LDR X0, [X8 + 0x58]
	0x01D4750C CBZ X0, 0x1D478F8
	0x01D47510 LDR X8, [X0 + 0x18]
	0x01D47514 CBZ X8, 0x1D478F8
	0x01D47518 ADRP X8, 0x23AD000
	0x01D4751C LDR X8, [X8 + 0x630]
	0x01D47520 LDR X1, [X8]
	0x01D47524 BL 0x21D511C
	0x01D47528 ADRP X8, 0x23AC000
	0x01D4752C LDR X8, [X8 + 0xAB0]
	0x01D47530 MOVZ W1, 0x1
	0x01D47534 LDR X0, [X8]
	0x01D47538 BL 0x1C16D6C
	0x01D4753C LDR X8, [X19 + 0x38]
	0x01D47540 CBZ X8, 0x1D47938
	0x01D47544 LDR X22, [X8 + 0x58]
	0x01D47548 ADRP X8, 0x23AD000
	0x01D4754C LDR X8, [X8 + 0x688]
	0x01D47550 MOV X20, X0
	0x01D47554 LDR X0, [X8]
	0x01D47558 BL 0x1C16F10
	0x01D4755C MOV X1, X31
	0x01D47560 MOV X21, X0
	0x01D47564 BL 0x33BDD8C
	0x01D47568 STR X22, [X21 + 0x18]
	0x01D4756C CBZ X20, 0x1D47938
	0x01D47570 LDR X8, [X20]
	0x01D47574 MOV X0, X21
	0x01D47578 LDR X1, [X8 + 0x40]
	0x01D4757C BL 0x1C16E00
	0x01D47580 CBZ X0, 0x1D4793C
	0x01D47584 LDR W8, [X20 + 0x18]
	0x01D47588 CBZ W8, 0x1D47948
	0x01D4758C STR X21, [X20 + 0x20]
	0x01D47590 ADRP X8, 0x23AC000
	0x01D47594 LDR X8, [X8 + 0x648]
	0x01D47598 LDR X0, [X8]
	0x01D4759C LDR W8, [X0 + 0xE0]
	0x01D475A0 CBNZ W8, 0x1D475A8
	0x01D475A4 BL 0x1C16DFC
	0x01D475A8 MOV X0, X20
	0x01D475AC BL 0x1D335B0
	0x01D475B0 B 0x1D475D4
	0x01D475B4 MOVN W8, 0x0
	0x01D475B8 STR W8, [X19 + 0x10]
	0x01D475BC STR X31, [X19 + 0x38]
	0x01D475C0 CBZ X20, 0x1D47938
	0x01D475C4 MOV X0, X20
	0x01D475C8 MOV X1, X31
	0x01D475CC BL 0x35B9A94
	0x01D475D0 TBZ X0, 0x0, 0x1D47844
	0x01D475D4 ADRP X8, 0x23AC000
	0x01D475D8 LDR X8, [X8 + 0x970]
	0x01D475DC LDR X0, [X8]
	0x01D475E0 LDR W8, [X0 + 0xE0]
	0x01D475E4 CBNZ W8, 0x1D475EC
	0x01D475E8 BL 0x1C16DFC
	0x01D475EC MOV X0, X31
	0x01D475F0 BL 0x3C03278
	0x01D475F4 TBNZ X0, 0x0, 0x1D4783C
	0x01D475F8 LDR X23, [X19 + 0x28]
	0x01D475FC CBZ X23, 0x1D47938
	0x01D47600 STRB W31, [X23 + 0x28]
	0x01D47604 ADRP X20, 0x23AC000
	0x01D47608 LDR X20, [X20 + 0x648]
	0x01D4760C LDR X0, [X20]
	0x01D47610 LDR W8, [X0 + 0xE0]
	0x01D47614 CBNZ W8, 0x1D4761C
	0x01D47618 BL 0x1C16DFC
	0x01D4761C ADRP X21, 0x2691000
	0x01D47620 LDRB W8, [X21 + 0x787]
	0x01D47624 CBNZ W8, 0x1D4763C
	0x01D47628 ADRP X0, 0x23AC000
	0x01D4762C LDR X0, [X0 + 0x648]
	0x01D47630 BL 0x1C16CF4
	0x01D47634 MOVZ W8, 0x1
	0x01D47638 STRB W8, [X21 + 0x787]
	0x01D4763C LDR X0, [X20]
	0x01D47640 LDR W8, [X0 + 0xE0]
	0x01D47644 CBNZ W8, 0x1D47650
	0x01D47648 BL 0x1C16DFC
	0x01D4764C LDR X0, [X20]
	0x01D47650 LDR X8, [X0 + 0xB8]
	0x01D47654 LDR X8, [X8]
	0x01D47658 CBZ X8, 0x1D47938
	0x01D4765C LDR X8, [X8 + 0xC0]
	0x01D47660 CBZ X8, 0x1D47938
	0x01D47664 LDR X0, [X8 + 0x48]
	0x01D47668 CBZ X0, 0x1D47938
	0x01D4766C ADRP X8, 0x23AD000
	0x01D47670 LDR X8, [X8 + 0x648]
	0x01D47674 LDR X1, [X8]
	0x01D47678 BL 0x2608758
	0x01D4767C ADRP X24, 0x23AD000
	0x01D47680 LDR X24, [X24 + 0x5C8]
	0x01D47684 MOV X20, X0
	0x01D47688 LDR X8, [X24]
	0x01D4768C LDR W9, [X8 + 0xE0]
	0x01D47690 CBNZ W9, 0x1D476A0
	0x01D47694 MOV X0, X8
	0x01D47698 BL 0x1C16DFC
	0x01D4769C LDR X8, [X24]
	0x01D476A0 LDR X9, [X8 + 0xB8]
	0x01D476A4 LDR X21, [X9 + 0x10]
	0x01D476A8 CBNZ X21, 0x1D47700
	0x01D476AC LDR W9, [X8 + 0xE0]
	0x01D476B0 CBNZ W9, 0x1D476C0
	0x01D476B4 MOV X0, X8
	0x01D476B8 BL 0x1C16DFC
	0x01D476BC LDR X8, [X24]
	0x01D476C0 ADRP X9, 0x23AD000
	0x01D476C4 LDR X8, [X8 + 0xB8]
	0x01D476C8 LDR X9, [X9 + 0x638]
	0x01D476CC LDR X22, [X8]
	0x01D476D0 LDR X0, [X9]
	0x01D476D4 BL 0x1C16F10
	0x01D476D8 ADRP X8, 0x23AD000
	0x01D476DC LDR X8, [X8 + 0x660]
	0x01D476E0 MOV X1, X22
	0x01D476E4 MOV X3, X31
	0x01D476E8 MOV X21, X0
	0x01D476EC LDR X2, [X8]
	0x01D476F0 BL 0x2D30578
	0x01D476F4 LDR X8, [X24]
	0x01D476F8 LDR X8, [X8 + 0xB8]
	0x01D476FC STR X21, [X8 + 0x10]
	0x01D47700 ADRP X8, 0x23AD000
	0x01D47704 LDR X8, [X8 + 0x628]
	0x01D47708 MOV X0, X20
	0x01D4770C MOV X1, X21
	0x01D47710 LDR X2, [X8]
	0x01D47714 BL 0x21CF224
	0x01D47718 ADRP X8, 0x23AC000
	0x01D4771C LDR X8, [X8 + 0xEB8]
	0x01D47720 LDR X1, [X8]
	0x01D47724 BL 0x21D577C
	0x01D47728 STR X0, [X23 + 0x10]
	0x01D4772C LDR X8, [X19 + 0x28]
	0x01D47730 CBZ X8, 0x1D47938
	0x01D47734 LDR X0, [X8 + 0x10]
	0x01D47738 MOV X1, X31
	0x01D4773C STR X31, [X8 + 0x20]
	0x01D47740 BL 0x34E4688
	0x01D47744 ADRP X8, 0x23AD000
	0x01D47748 LDR X22, [X19 + 0x28]
	0x01D4774C LDR X8, [X8 + 0x618]
	0x01D47750 MOV X20, X0
	0x01D47754 LDR X8, [X8]
	0x01D47758 MOV X0, X8
	0x01D4775C BL 0x1C16F10
	0x01D47760 ADRP X8, 0x23AD000
	0x01D47764 LDR X8, [X8 + 0x670]
	0x01D47768 MOV X1, X22
	0x01D4776C MOV X3, X31
	0x01D47770 MOV X21, X0
	0x01D47774 LDR X2, [X8]
	0x01D47778 BL 0x28F118C
	0x01D4777C CBZ X20, 0x1D47938
	0x01D47780 ADRP X8, 0x23AD000
	0x01D47784 LDR X8, [X8 + 0x640]
	0x01D47788 MOV X0, X20
	0x01D4778C MOV X1, X21
	0x01D47790 LDR X2, [X8]
	0x01D47794 BL 0x25C95D0
	0x01D47798 B 0x1D477A4
	0x01D4779C MOVN W8, 0x0
	0x01D477A0 STR W8, [X19 + 0x10]
	0x01D477A4 LDR X8, [X19 + 0x28]
	0x01D477A8 CBZ X8, 0x1D47938
	0x01D477AC LDRB W8, [X8 + 0x28]
	0x01D477B0 CBZ W8, 0x1D478EC
	0x01D477B4 ADRP X8, 0x23AC000
	0x01D477B8 LDR X8, [X8 + 0xAB0]
	0x01D477BC MOVZ W1, 0x1
	0x01D477C0 LDR X0, [X8]
	0x01D477C4 BL 0x1C16D6C
	0x01D477C8 LDR X8, [X19 + 0x28]
	0x01D477CC CBZ X8, 0x1D47938
	0x01D477D0 LDR X21, [X8 + 0x20]
	0x01D477D4 ADRP X8, 0x23AD000
	0x01D477D8 LDR X8, [X8 + 0x680]
	0x01D477DC MOV X19, X0
	0x01D477E0 LDR X0, [X8]
	0x01D477E4 BL 0x1C16F10
	0x01D477E8 MOV X1, X31
	0x01D477EC MOV X20, X0
	0x01D477F0 BL 0x33BDD8C
	0x01D477F4 STR X21, [X20 + 0x18]
	0x01D477F8 CBZ X19, 0x1D47938
	0x01D477FC LDR X8, [X19]
	0x01D47800 MOV X0, X20
	0x01D47804 LDR X1, [X8 + 0x40]
	0x01D47808 BL 0x1C16E00
	0x01D4780C CBZ X0, 0x1D4793C
	0x01D47810 LDR W8, [X19 + 0x18]
	0x01D47814 CBZ W8, 0x1D47948
	0x01D47818 STR X20, [X19 + 0x20]
	0x01D4781C ADRP X8, 0x23AC000
	0x01D47820 LDR X8, [X8 + 0x648]
	0x01D47824 LDR X0, [X8]
	0x01D47828 LDR W8, [X0 + 0xE0]
	0x01D4782C CBNZ W8, 0x1D47834
	0x01D47830 BL 0x1C16DFC
	0x01D47834 MOV X0, X19
	0x01D47838 BL 0x1D335B0
	0x01D4783C MOV W0, W31
	0x01D47840 B 0x1D47924
	0x01D47844 ADRP X22, 0x23AD000
	0x01D47848 LDR X22, [X22 + 0x5C8]
	0x01D4784C LDR X0, [X22]
	0x01D47850 LDR W8, [X0 + 0xE0]
	0x01D47854 CBNZ W8, 0x1D47860

ISIL:
	001 Move [X31-80], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x2693000
	011 Move W8, [X20+1897]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {136}
	017 Move X0, 0x23AE000
	018 Move X0, [X0+2896]
	019 Call 0x1C17CF4
	020 Move X0, 0x23AE000
	021 Move X0, [X0+1608]
	022 Call 0x1C17CF4
	023 Move X0, 0x23AE000
	024 Move X0, [X0+2736]
	025 Call 0x1C17CF4
	026 Move X0, 0x23AF000
	027 Move X0, [X0+1232]
	028 Call 0x1C17CF4
	029 Move X0, 0x23AF000
	030 Move X0, [X0+1240]
	031 Call 0x1C17CF4
	032 Move X0, 0x23AF000
	033 Move X0, [X0+1248]
	034 Call 0x1C17CF4
	035 Move X0, 0x23AF000
	036 Move X0, [X0+1256]
	037 Call 0x1C17CF4
	038 Move X0, 0x23AE000
	039 Move X0, [X0+1808]
	040 Call 0x1C17CF4
	041 Move X0, 0x23AE000
	042 Move X0, [X0+1816]
	043 Call 0x1C17CF4
	044 Move X0, 0x23AE000
	045 Move X0, [X0+1824]
	046 Call 0x1C17CF4
	047 Move X0, 0x23AE000
	048 Move X0, [X0+2000]
	049 Call 0x1C17CF4
	050 Move X0, 0x23AE000
	051 Move X0, [X0+1928]
	052 Call 0x1C17CF4
	053 Move X0, 0x23AF000
	054 Move X0, [X0+1264]
	055 Call 0x1C17CF4
	056 Move X0, 0x23AF000
	057 Move X0, [X0+1272]
	058 Call 0x1C17CF4
	059 Move X0, 0x23AF000
	060 Move X0, [X0+1280]
	061 Call 0x1C17CF4
	062 Move X0, 0x23AF000
	063 Move X0, [X0+1288]
	064 Call 0x1C17CF4
	065 Move X0, 0x23AF000
	066 Move X0, [X0+1296]
	067 Call 0x1C17CF4
	068 Move X0, 0x23AF000
	069 Move X0, [X0+1304]
	070 Call 0x1C17CF4
	071 Move X0, 0x23AF000
	072 Move X0, [X0+1312]
	073 Call 0x1C17CF4
	074 Move X0, 0x23AF000
	075 Move X0, [X0+1320]
	076 Call 0x1C17CF4
	077 Move X0, 0x23AF000
	078 Move X0, [X0+1328]
	079 Call 0x1C17CF4
	080 Move X0, 0x23AF000
	081 Move X0, [X0+1336]
	082 Call 0x1C17CF4
	083 Move X0, 0x23AF000
	084 Move X0, [X0+1344]
	085 Call 0x1C17CF4
	086 Move X0, 0x23AF000
	087 Move X0, [X0+1352]
	088 Call 0x1C17CF4
	089 Move X0, 0x23AF000
	090 Move X0, [X0+1112]
	091 Call 0x1C17CF4
	092 Move X0, 0x23AF000
	093 Move X0, [X0+1360]
	094 Call 0x1C17CF4
	095 Move X0, 0x23AF000
	096 Move X0, [X0+1368]
	097 Call 0x1C17CF4
	098 Move X0, 0x23AE000
	099 Move X0, [X0+1376]
	100 Call 0x1C17CF4
	101 Move X0, 0x23AE000
	102 Move X0, [X0+136]
	103 Call 0x1C17CF4
	104 Move X0, 0x23AE000
	105 Move X0, [X0+1160]
	106 Call 0x1C17CF4
	107 Move X0, 0x23AE000
	108 Move X0, [X0+1168]
	109 Call 0x1C17CF4
	110 Move X0, 0x23AE000
	111 Move X0, [X0+1384]
	112 Call 0x1C17CF4
	113 Move X0, 0x23AE000
	114 Move X0, [X0+1392]
	115 Call 0x1C17CF4
	116 Move X0, 0x23AE000
	117 Move X0, [X0+1400]
	118 Call 0x1C17CF4
	119 Move X0, 0x23AE000
	120 Move X0, [X0+1096]
	121 Call 0x1C17CF4
	122 Move X0, 0x23AE000
	123 Move X0, [X0+1408]
	124 Call 0x1C17CF4
	125 Move X0, 0x23AE000
	126 Move X0, [X0+1416]
	127 Call 0x1C17CF4
	128 Move X0, 0x23AE000
	129 Move X0, [X0+1424]
	130 Call 0x1C17CF4
	131 Move X0, 0x23AE000
	132 Move X0, [X0+1432]
	133 Call 0x1C17CF4
	134 Move W8, 1
	135 Move [X20+1897], W8
	136 Move W8, [X19+16]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X20, [X19+32]
	139 Move X9, -19234816
	140 Add X9, X9, 1484
	141 NotImplemented "Instruction ADR not yet implemented."
	142 NotImplemented "Instruction LDRH not yet implemented."
	143 Add X10, X10, X11
	144 CallNoReturn X10
	145 Move TEMP, 0
	146 Not TEMP
	147 Move W8, TEMP
	148 Move [X19+16], W8
	149 Move X8, 0x23AE000
	150 Move X8, [X8+1352]
	151 Move X0, [X8]
	152 Call 0x1C17F10
	153 Move X1, X31
	154 Move X21, X0
	155 Call Object..ctor, X0
	156 Move [X19+40], X21
	157 Compare X21, 0
	158 JumpIfEqual {688}
	159 Move X8, [X19+32]
	160 Move [X21+16], X8
	161 Compare X20, 0
	162 JumpIfEqual {688}
	163 Move X8, 0x23AE000
	164 Move X1, [X20+88]
	165 Move X8, [X8+1424]
	166 Move X2, X31
	167 Move X0, [X8]
	168 Call String.Concat, X0, X1
	169 Move X8, 0x23AD000
	170 Move X8, [X8+1928]
	171 Move X21, X0
	172 Move X8, [X8]
	173 Move W9, [X8+224]
	174 Compare W9, 0
	175 JumpIfNotEqual {178}
	176 Move X0, X8
	177 Call 0x1C17DFC
	178 Move X8, 0x23AE000
	179 Move X9, 0x23AE000
	180 Move X8, [X8+1160]
	181 Move X9, [X9+136]
	182 Move W0, 0x4000
	183 Move W5, 31
	184 Move X3, [X8]
	185 Move X4, [X9]
	186 Move X1, X21
	187 Move X2, X31
	188 Move X6, X31
	189 Call Log.Info, X0, X1, X2, X3, X4, X5
	190 Move X8, 0x23AD000
	191 Move X8, [X8+1824]
	192 Move X0, [X8]
	193 Call 0x1C17F10
	194 Move X8, 0x23AD000
	195 Move X8, [X8+1816]
	196 Move X21, X0
	197 Move X1, [X8]
	198 Call Dictionary`2<Object, Object>..ctor, X0
	199 Compare X21, 0
	200 JumpIfEqual {688}
	201 Move X8, 0x23AE000
	202 Move X9, 0x23AD000
	203 Move X2, [X20+88]
	204 Move X8, [X8+1096]
	205 Move X9, [X9+1808]
	206 Move X0, X21
	207 Move X1, [X8]
	208 Move X3, [X9]
	209 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	210 Move X8, 0x23AD000
	211 Move X8, [X8+2896]
	212 Move X0, [X8]
	213 Move W8, [X0+224]
	214 Compare W8, 0
	215 JumpIfNotEqual {217}
	216 Call 0x1C17DFC
	217 Move X8, 0x23AE000
	218 Move X8, [X8+1400]
	219 Move X1, X21
	220 Move X2, X31
	221 Move X0, [X8]
	222 Call Analytics.Track, X0, X1
	223 Move X8, [X19+40]
	224 Compare X8, 0
	225 JumpIfEqual {688}
	226 Move [X8+32], W31
	227 Move [X8+24], X31
	228 Move X0, [X20+88]
	229 Move X1, X31
	230 Call IAP.LaunchCheckoutFlow, X0
	231 Move X8, 0x23AE000
	232 Move X22, [X19+40]
	233 Move X8, [X8+1232]
	234 Move X20, X0
	235 Move X8, [X8]
	236 Move X0, X8
	237 Call 0x1C17F10
	238 Move X8, 0x23AE000
	239 Move X8, [X8+1336]
	240 Move X1, X22
	241 Move X3, X31
	242 Move X21, X0
	243 Move X2, [X8]
	244 Call Callback<Object>..ctor, X0, X1, X2
	245 Compare X20, 0
	246 JumpIfEqual {688}
	247 Move X8, 0x23AE000
	248 Move X8, [X8+1264]
	249 Move X0, X20
	250 Move X1, X21
	251 Move X2, [X8]
	252 Call Request`1<Object>.OnComplete, X0, X1
	253 Move TEMP, 0
	254 Not TEMP
	255 Move W8, TEMP
	256 Move [X19+16], W8
	257 Move X20, [X19+40]
	258 Compare X20, 0
	259 JumpIfEqual {688}
	260 Move W8, [X20+32]
	261 Compare W8, 0
	262 JumpIfEqual {515}
	263 Move X8, 0x23AE000
	264 Move X8, [X8+1312]
	265 Move X0, [X8]
	266 Call 0x1C17F10
	267 Move X8, 0x23AE000
	268 Move X8, [X8+1344]
	269 Move X1, X20
	270 Move X3, X31
	271 Move X21, X0
	272 Move X2, [X8]
	273 Call TaskGenerator`1<ValidatePurchaseMetaQuestResponse>..ctor, X0, X1, X2
	274 Move X8, 0x23AE000
	275 Move X9, 0x23AE000
	276 Move X8, [X8+1416]
	277 Move X9, [X9+1256]
	278 Move X1, X21
	279 Move W2, W31
	280 Move X0, [X8]
	281 Move X4, [X9]
	282 Move X3, X31
	283 Call Commands.Task, X0, X1, X2, X3
	284 Move [X19+48], X0
	285 Move [X19+24], X0
	286 Move W8, 2
	287 Move X8, [X19+48]
	288 Move TEMP, 0
	289 Not TEMP
	290 Move W9, TEMP
	291 Move [X19+16], W9
	292 Compare X8, 0
	293 JumpIfEqual {688}
	294 Move W8, [X8+88]
	295 Move TEMP, X8
	296 And TEMP, TEMP, 1
	297 Compare TEMP, 1
	298 JumpIfEqual {518}
	299 Compare X20, 0
	300 JumpIfEqual {688}
	301 Move W8, 2
	302 Move [X20+100], W8
	303 Move X8, 0x23AD000
	304 Move X8, [X8+1824]
	305 Move X0, [X8]
	306 Call 0x1C17F10
	307 Move X8, 0x23AD000
	308 Move X8, [X8+1816]
	309 Move X19, X0
	310 Move X1, [X8]
	311 Call Dictionary`2<Object, Object>..ctor, X0
	312 Compare X19, 0
	313 JumpIfEqual {688}
	314 Move X8, 0x23AE000
	315 Move X9, 0x23AD000
	316 Move X2, [X20+88]
	317 Move X8, [X8+1168]
	318 Move X9, [X9+1808]
	319 Move X0, X19
	320 Move X1, [X8]
	321 Move X3, [X9]
	322 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	323 Move X8, 0x23AD000
	324 Move X8, [X8+1928]
	325 Move X0, [X8]
	326 Move W8, [X0+224]
	327 Compare W8, 0
	328 JumpIfNotEqual {330}
	329 Call 0x1C17DFC
	330 Move X21, 0x23AE000
	331 Move X8, 0x23AE000
	332 Move X9, 0x23AE000
	333 Move X21, [X21+1384]
	334 Move X8, [X8+1160]
	335 Move X9, [X9+136]
	336 Move W0, 0x4000
	337 Move X1, [X21]
	338 Move X3, [X8]
	339 Move X4, [X9]
	340 Move W5, 81
	341 Move X2, X19
	342 Move X6, X31
	343 Call Log.Error, X0, X1, X2, X3, X4, X5
	344 Move X8, 0x23AD000
	345 Move X8, [X8+2000]
	346 Move X0, [X8]
	347 Call 0x1C17F10
	348 Move X1, [X21]
	349 Move X2, X31
	350 Move X19, X0
	351 Call Exception..ctor, X0, X1
	352 Move X0, X20
	353 Move X1, X19
	354 Move X2, X31
	355 Call Command.Abort, X0, X1
	356 Move X0, [X19+56]
	357 Move TEMP, 0
	358 Not TEMP
	359 Move W8, TEMP
	360 Move [X19+16], W8
	361 Compare X0, 0
	362 JumpIfEqual {688}
	363 Move X1, X31
	364 Call Command.get_isAborted, X0
	365 Move TEMP, X0
	366 And TEMP, TEMP, 1
	367 Compare TEMP, 1
	368 JumpIfEqual {410}
	369 Move X8, 0x23AD000
	370 Move X8, [X8+2736]
	371 Move W1, 1
	372 Move X0, [X8]
	373 Call 0x1C17D6C
	374 Move X8, [X19+56]
	375 Compare X8, 0
	376 JumpIfEqual {688}
	377 Move X22, [X8+88]
	378 Move X8, 0x23AE000
	379 Move X8, [X8+1360]
	380 Move X20, X0
	381 Move X0, [X8]
	382 Call 0x1C17F10
	383 Move X1, X22
	384 Move X2, X31
	385 Move X21, X0
	386 Call UpdateUserAccountAction..ctor, X0, X1
	387 Compare X20, 0
	388 JumpIfEqual {688}
	389 Compare X21, 0
	390 JumpIfEqual {397}
	391 Move X8, [X20]
	392 Move X0, X21
	393 Move X1, [X8+64]
	394 Call 0x1C17E00
	395 Compare X0, 0
	396 JumpIfEqual {690}
	397 Move W8, [X20+24]
	398 Compare W8, 0
	399 JumpIfEqual {689}
	400 Move [X20+32], X21
	401 Move X8, 0x23AD000
	402 Move X8, [X8+1608]
	403 Move X0, [X8]
	404 Move W8, [X0+224]
	405 Compare W8, 0
	406 JumpIfNotEqual {408}
	407 Call 0x1C17DFC
	408 Move X0, X20
	409 Call App.ExecuteAction, X0
	410 Move X23, 0x23AE000
	411 Move X23, [X23+1112]
	412 Move X0, [X23]
	413 Move W8, [X0+224]
	414 Compare W8, 0
	415 JumpIfNotEqual {418}
	416 Call 0x1C17DFC
	417 Move X0, [X23]
	418 Move X8, [X0+184]
	419 Move X21, [X8+16]
	420 Move X8, 0x23AE000
	421 Move X8, [X8+1376]
	422 Move X20, [X8]
	423 Compare X21, 0
	424 JumpIfNotEqual {446}
	425 Move W8, [X0+224]
	426 Compare W8, 0
	427 JumpIfNotEqual {430}
	428 Call 0x1C17DFC
	429 Move X0, [X23]
	430 Move X9, 0x23AE000
	431 Move X8, [X0+184]
	432 Move X9, [X9+1296]
	433 Move X22, [X8]
	434 Move X0, [X9]
	435 Call 0x1C17F10
	436 Move X8, 0x23AE000
	437 Move X8, [X8+1328]
	438 Move X1, X22
	439 Move X3, X31
	440 Move X21, X0
	441 Move X2, [X8]
	442 Call 0x2696118, X0, X1, X2
	443 Move X8, [X23]
	444 Move X8, [X8+184]
	445 Move [X8+16], X21
	446 Move X8, 0x23AE000
	447 Move X8, [X8+1240]
	448 Move X0, X20
	449 Move X1, X21
	450 Move W2, W31
	451 Move X4, [X8]
	452 Move X3, X31
	453 Call 0x21A422C, X0, X1, X2, X3
	454 Move [X19+64], X0
	455 Compare X0, 0
	456 JumpIfEqual {688}
	457 Move [X0+20], W31
	458 Move [X19+24], X0
	459 Move W8, 4
	460 Move X0, [X19+64]
	461 Move TEMP, 0
	462 Not TEMP
	463 Move W8, TEMP
	464 Move [X19+16], W8
	465 Compare X0, 0
	466 JumpIfEqual {688}
	467 Move X1, X31
	468 Call Command.get_isAborted, X0
	469 Move TEMP, X0
	470 And TEMP, TEMP, 1
	471 Compare TEMP, 1
	472 JumpIfEqual {514}
	473 Move X8, 0x23AD000
	474 Move X8, [X8+2736]
	475 Move W1, 1
	476 Move X0, [X8]
	477 Call 0x1C17D6C
	478 Move X8, [X19+64]
	479 Compare X8, 0
	480 JumpIfEqual {688}
	481 Move X21, [X8+88]
	482 Move X8, 0x23AE000
	483 Move X8, [X8+1368]
	484 Move X19, X0
	485 Move X0, [X8]
	486 Call 0x1C17F10
	487 Move X1, X21
	488 Move X2, X31
	489 Move X20, X0
	490 Call UpdateUserInventoryAction..ctor, X0, X1
	491 Compare X19, 0
	492 JumpIfEqual {688}
	493 Compare X20, 0
	494 JumpIfEqual {501}
	495 Move X8, [X19]
	496 Move X0, X20
	497 Move X1, [X8+64]
	498 Call 0x1C17E00
	499 Compare X0, 0
	500 JumpIfEqual {690}
	501 Move W8, [X19+24]
	502 Compare W8, 0
	503 JumpIfEqual {689}
	504 Move [X19+32], X20
	505 Move X8, 0x23AD000
	506 Move X8, [X8+1608]
	507 Move X0, [X8]
	508 Move W8, [X0+224]
	509 Compare W8, 0
	510 JumpIfNotEqual {512}
	511 Call 0x1C17DFC
	512 Move X0, X19
	513 Call App.ExecuteAction, X0
	514 Move W0, W31
	515 Move W0, 1
	516 Move [X19+24], X31
	517 Move [X19+16], W0
	518 Move X8, 0x23AD000
	519 Move X8, [X8+1824]
	520 Move X0, [X8]
	521 Call 0x1C17F10
	522 Move X8, 0x23AD000
	523 Move X8, [X8+1816]
	524 Move X21, X0
	525 Move X1, [X8]
	526 Call Dictionary`2<Object, Object>..ctor, X0
	527 Compare X20, 0
	528 JumpIfEqual {688}
	529 Compare X21, 0
	530 JumpIfEqual {688}
	531 Move X8, 0x23AE000
	532 Move X9, 0x23AD000
	533 Move X2, [X20+88]
	534 Move X8, [X8+1096]
	535 Move X9, [X9+1808]
	536 Move X0, X21
	537 Move X1, [X8]
	538 Move X3, [X9]
	539 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	540 Move X8, 0x23AD000
	541 Move X8, [X8+2896]
	542 Move X0, [X8]
	543 Move W8, [X0+224]
	544 Compare W8, 0
	545 JumpIfNotEqual {547}
	546 Call 0x1C17DFC
	547 Move X8, 0x23AE000
	548 Move X8, [X8+1432]
	549 Move X1, X21
	550 Move X2, X31
	551 Move X0, [X8]
	552 Call Analytics.Track, X0, X1
	553 Move X20, 0x2692000
	554 Move W8, [X20+1938]
	555 Compare W8, 0
	556 JumpIfNotEqual {562}
	557 Move X0, 0x23AE000
	558 Move X0, [X0+1440]
	559 Call 0x1C17CF4
	560 Move W8, 1
	561 Move [X20+1938], W8
	562 Move X21, 0x23AE000
	563 Move X21, [X21+1440]
	564 Move X8, [X21]
	565 Move X8, [X8+184]
	566 Move X0, [X8]
	567 Compare X0, 0
	568 JumpIfEqual {688}
	569 Move X1, X31
	570 Call Component.get_transform, X0
	571 Compare X0, 0
	572 JumpIfEqual {688}
	573 Move X1, X31
	574 Call Transform.get_position, X0
	575 Move X22, 0x2692000
	576 Move W8, [X22+1939]
	577 Move V8, V0
	578 Move V9, V1
	579 Move V10, V2
	580 Compare W8, 0
	581 JumpIfNotEqual {587}
	582 Move X0, 0x23AE000
	583 Move X0, [X0+1448]
	584 Call 0x1C17CF4
	585 Move W8, 1
	586 Move [X22+1939], W8
	587 Move X8, 0x23AE000
	588 Move X8, [X8+1448]
	589 Move W0, 33
	590 Move V0, V8
	591 Move V1, V9
	592 Move X8, [X8]
	593 Move V2, V10
	594 Move X1, X31
	595 Move X8, [X8+184]
	596 Move S3, [X8]
	597 Move S4, [X8+4]
	598 Move S5, [X8+8]
	599 Move S6, [X8+12]
	600 Call NetworkVFX.PlayVFX, X0, X1, X2
	601 Move W8, [X20+1938]
	602 Compare W8, 0
	603 JumpIfNotEqual {609}
	604 Move X0, 0x23AE000
	605 Move X0, [X0+1440]
	606 Call 0x1C17CF4
	607 Move W8, 1
	608 Move [X20+1938], W8
	609 Move X8, [X21]
	610 Move X8, [X8+184]
	611 Move X0, [X8]
	612 Compare X0, 0
	613 JumpIfEqual {688}
	614 Move X1, X31
	615 Call Component.get_transform, X0
	616 Compare X0, 0
	617 JumpIfEqual {688}
	618 Move X1, X31
	619 Call Transform.get_position, X0
	620 Move X8, 0x23AE000
	621 Move X8, [X8+1392]
	622 Move S3, 1
	623 Move X1, X31
	624 Move X0, [X8]
	625 Call SFXManager.PlaySFXAsRPC, X0, X1, V0
	626 Move X23, 0x23AE000
	627 Move X23, [X23+1112]
	628 Move X0, [X23]
	629 Move W8, [X0+224]
	630 Compare W8, 0
	631 JumpIfNotEqual {634}
	632 Call 0x1C17DFC
	633 Move X0, [X23]
	634 Move X8, [X0+184]
	635 Move X21, [X8+8]
	636 Move X8, 0x23AE000
	637 Move X8, [X8+1408]
	638 Move X20, [X8]
	639 Compare X21, 0
	640 JumpIfNotEqual {662}
	641 Move W8, [X0+224]
	642 Compare W8, 0
	643 JumpIfNotEqual {646}
	644 Call 0x1C17DFC
	645 Move X0, [X23]
	646 Move X9, 0x23AE000
	647 Move X8, [X0+184]
	648 Move X9, [X9+1304]
	649 Move X22, [X8]
	650 Move X0, [X9]
	651 Call 0x1C17F10
	652 Move X8, 0x23AE000
	653 Move X8, [X8+1320]
	654 Move X1, X22
	655 Move X3, X31
	656 Move X21, X0
	657 Move X2, [X8]
	658 Call TaskGenerator`1<Object>..ctor, X0, X1, X2
	659 Move X8, [X23]
	660 Move X8, [X8+184]
	661 Move [X8+8], X21
	662 Move X8, 0x23AE000
	663 Move X8, [X8+1248]
	664 Move X0, X20
	665 Move X1, X21
	666 Move W2, W31
	667 Move X4, [X8]
	668 Move X3, X31
	669 Call Commands.Task, X0, X1, X2, X3
	670 Move [X19+56], X0
	671 Compare X0, 0
	672 JumpIfEqual {688}
	673 Move W8, 3
	674 Move [X0+20], W31
	675 Move [X19+24], X0
	676 Move [X19+16], W8
	677 Move W0, 1
	678 Move X20, [X31+64]
	679 Move X19, [X31+72]
	680 Move X22, [X31+48]
	681 Move X21, [X31+56]
	682 Move X30, [X31+32]
	683 Move X23, [X31+40]
	684 Move D9, [X31+16]
	685 Move D8, [X31+24]
	686 Move V10, [X31+80]
	687 Return X0
	688 Call 0x1C17F20
	689 Call 0x1C17F28
	690 Call 0x1C17F44
	691 Move X1, X31
	692 Call 0x1C17DEC

Method: SpatialSys.CommandLib.Command System.Collections.Generic.IEnumerator<SpatialSys.CommandLib.Command>.get_Current()

Disassembly:
	0x01D47858 BL 0x1C16DFC
	0x01D4785C LDR X0, [X22]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01D47860 LDR X8, [X0 + 0xB8]
	0x01D47864 LDR X20, [X8 + 0x8]
	0x01D47868 CBNZ X20, 0x1D478BC
	0x01D4786C LDR W8, [X0 + 0xE0]
	0x01D47870 CBNZ W8, 0x1D4787C
	0x01D47874 BL 0x1C16DFC
	0x01D47878 LDR X0, [X22]
	0x01D4787C ADRP X9, 0x23AD000
	0x01D47880 LDR X8, [X0 + 0xB8]
	0x01D47884 LDR X9, [X9 + 0x658]
	0x01D47888 LDR X21, [X8]
	0x01D4788C LDR X0, [X9]
	0x01D47890 BL 0x1C16F10
	0x01D47894 ADRP X8, 0x23AD000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x23AD000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x23AE000
	011 Move X0, [X0+1456]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01D47898 LDR X8, [X8 + 0x668]
	0x01D4789C MOV X1, X21

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

