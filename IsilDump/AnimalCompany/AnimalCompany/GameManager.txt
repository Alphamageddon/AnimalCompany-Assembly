Type: AnimalCompany.GameManager

Method: AnimalCompany.GameManager get_instance()

Disassembly:
	0x01CD33EC MOV V9.16B, V1.16B
	0x01CD33F0 MOV V10.16B, V2.16B
	0x01CD33F4 CBNZ W8, 0x1CD3404
	0x01CD33F8 MOV X0, X20
	0x01CD33FC BL 0x1B6E7F0
	0x01CD3400 STRB W27, [X26 + 0x442]
	0x01CD3404 CBZ X21, 0x1CD3480
	0x01CD3408 LDR X8, [X20]
	0x01CD340C LDR V3, [X31 + 0x8]
	0x01CD3410 MOV X0, X21
	0x01CD3414 MOV X1, X31
	0x01CD3418 LDR X8, [X8 + 0xB8]
	0x01CD341C LDP S1, S0, [X8 + 0x1C]
	0x01CD3420 LDR V2, [X8 + 0x18]
	0x01CD3424 FMUL S0, S0, S3
	0x01CD3428 FMUL S1, S1, S3
	0x01CD342C FMUL S3, S2, S3
	0x01CD3430 FADD S2, S10, S0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x2551000
	005 Move X20, 0x227C000
	006 Move W8, [X19+1496]
	007 Move X20, [X20+3984]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x227C000
	013 Move X0, [X0+3984]
	014 Call 0x1B6F7F0
	015 Move W8, 1
	016 Move [X19+1496], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move X0, [X8]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Boolean get_isDebug()

Disassembly:
	0x01CD3434 FADD S1, S9, S1
	0x01CD3438 FADD S0, S8, S3
	0x01CD343C BL 0x3AA76F8
	0x01CD3440 LDR W8, [X19 + 0x18]
	0x01CD3444 ADD W23, W23, 0x1
	0x01CD3448 CMP W23, W8
	0x01CD344C B.LT 0x1CD32C8
	0x01CD3450 LDP X20, X19, [X31 + 0xD0]
	0x01CD3454 LDP X22, X21, [X31 + 0xC0]
	0x01CD3458 LDP X24, X23, [X31 + 0xB0]
	0x01CD345C LDP X26, X25, [X31 + 0xA0]
	0x01CD3460 LDP X28, X27, [X31 + 0x90]
	0x01CD3464 LDP X29, X30, [X31 + 0x80]
	0x01CD3468 LDP D9, D8, [X31 + 0x70]
	0x01CD346C LDP D11, D10, [X31 + 0x60]
	0x01CD3470 LDP D13, D12, [X31 + 0x50]
	0x01CD3474 LDP D15, D14, [X31 + 0x40]
	0x01CD3478 ADD X31, X31, 0xE0
	0x01CD347C RET
	0x01CD3480 BL 0x1B6EA1C
	0x01CD3484 BL 0x1B6EA24
	0x01CD3488 STP X30, X21, [X31 - 0x20]!
	0x01CD348C STP X20, X19, [X31 + 0x10]
	0x01CD3490 ADRP X20, 0x2550000
	0x01CD3494 LDRB W8, [X20 + 0x50F]
	0x01CD3498 MOV X19, X0
	0x01CD349C CBNZ W8, 0x1CD34B4
	0x01CD34A0 ADRP X0, 0x227A000
	0x01CD34A4 LDR X0, [X0 + 0x480]
	0x01CD34A8 BL 0x1B6E7F0
	0x01CD34AC MOVZ W8, 0x1
	0x01CD34B0 STRB W8, [X20 + 0x50F]
	0x01CD34B4 ADRP X20, 0x227A000
	0x01CD34B8 LDR X20, [X20 + 0x480]
	0x01CD34BC ADRP X21, 0x2550000
	0x01CD34C0 LDR X8, [X20]
	0x01CD34C4 LDR X9, [X8 + 0xB8]
	0x01CD34C8 LDR V0, [X9 + 0x48]
	0x01CD34CC LDR V1, [X9 + 0x50]
	0x01CD34D0 STUR D0, [X19 + 0x24]
	0x01CD34D4 STR S1, [X19 + 0x2C]
	0x01CD34D8 LDRB W9, [X21 + 0x43F]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2551000
	006 Move X20, 0x227C000
	007 Move X19, 0x227B000
	008 Move W8, [X21+1497]
	009 Move X20, [X20+3984]
	010 Move X19, [X19+1144]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x227C000
	016 Move X0, [X0+3984]
	017 Call 0x1B6F7F0
	018 Move X0, 0x227B000
	019 Move X0, [X0+1144]
	020 Call 0x1B6F7F0
	021 Move W8, 1
	022 Move [X21+1497], W8
	023 Move X8, [X20]
	024 Move X0, [X19]
	025 Move X8, [X8+184]
	026 Move W9, [X0+224]
	027 Move X19, [X8]
	028 Compare W9, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1B6F8F8
	031 Move X0, X19
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Equality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {40}
	039 Move W0, W31
	040 Move X8, [X20]
	041 Move X8, [X8+184]
	042 Move X8, [X8]
	043 Compare X8, 0
	044 JumpIfEqual {53}
	045 Move W8, [X8+56]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CSET not yet implemented."
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Return X0
	053 Call 0x1B6FA1C

Method: UnityEngine.Transform get_masterClientAOIOrigin()

Disassembly:
	0x01CD34DC CBNZ W9, 0x1CD34F4
	0x01CD34E0 MOV X0, X20

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void Awake()

Disassembly:
	0x01CD34E4 BL 0x1B6E7F0
	0x01CD34E8 LDR X8, [X20]
	0x01CD34EC MOVZ W9, 0x1
	0x01CD34F0 STRB W9, [X21 + 0x43F]
	0x01CD34F4 LDR X8, [X8 + 0xB8]
	0x01CD34F8 MOV X0, X19
	0x01CD34FC MOV X1, X31
	0x01CD3500 LDR V0, [X8]
	0x01CD3504 LDR V1, [X8 + 0x8]
	0x01CD3508 STR D0, [X19 + 0x30]
	0x01CD350C STR S1, [X19 + 0x38]
	0x01CD3510 LDP X20, X19, [X31 + 0x10]
	0x01CD3514 LDP X30, X21, [X31], #0x20
	0x01CD3518 B 0x3A9EEE4
	0x01CD351C STP X30, X19, [X31 - 0x10]!
	0x01CD3520 LDR X8, [X0 + 0x50]
	0x01CD3524 CBZ X8, 0x1CD3534
	0x01CD3528 LDR W0, [X8]
	0x01CD352C LDP X30, X19, [X31], #0x10
	0x01CD3530 RET
	0x01CD3534 ADRP X0, 0x227A000
	0x01CD3538 LDR X0, [X0 + 0x490]
	0x01CD353C BL 0x1B6E804
	0x01CD3540 BL 0x1B6EA0C
	0x01CD3544 MOV X19, X0
	0x01CD3548 ADRP X0, 0x227C000
	0x01CD354C LDR X0, [X0 + 0xAB0]
	0x01CD3550 BL 0x1B6E804
	0x01CD3554 MOV X1, X0
	0x01CD3558 MOV X0, X19
	0x01CD355C MOV X2, X31
	0x01CD3560 BL 0x31E7550
	0x01CD3564 ADRP X0, 0x227C000
	0x01CD3568 LDR X0, [X0 + 0xAB8]
	0x01CD356C BL 0x1B6E804
	0x01CD3570 MOV X1, X0
	0x01CD3574 MOV X0, X19
	0x01CD3578 BL 0x1B6E8E8
	0x01CD357C STP X30, X19, [X31 - 0x10]!
	0x01CD3580 LDR X8, [X0 + 0x50]
	0x01CD3584 CBZ X8, 0x1CD3594
	0x01CD3588 STR W1, [X8]
	0x01CD358C LDP X30, X19, [X31], #0x10
	0x01CD3590 RET
	0x01CD3594 ADRP X0, 0x227A000
	0x01CD3598 LDR X0, [X0 + 0x490]
	0x01CD359C BL 0x1B6E804
	0x01CD35A0 BL 0x1B6EA0C
	0x01CD35A4 MOV X19, X0
	0x01CD35A8 ADRP X0, 0x227C000
	0x01CD35AC LDR X0, [X0 + 0xAB0]
	0x01CD35B0 BL 0x1B6E804
	0x01CD35B4 MOV X1, X0
	0x01CD35B8 MOV X0, X19
	0x01CD35BC MOV X2, X31
	0x01CD35C0 BL 0x31E7550
	0x01CD35C4 ADRP X0, 0x227C000
	0x01CD35C8 LDR X0, [X0 + 0xAC0]
	0x01CD35CC BL 0x1B6E804
	0x01CD35D0 MOV X1, X0
	0x01CD35D4 MOV X0, X19
	0x01CD35D8 BL 0x1B6E8E8
	0x01CD35DC STP X30, X19, [X31 - 0x10]!
	0x01CD35E0 MOV X1, X31
	0x01CD35E4 MOV X19, X0
	0x01CD35E8 BL 0x1D65284
	0x01CD35EC LDR X0, [X19 + 0x40]
	0x01CD35F0 CBZ X0, 0x1CD3628
	0x01CD35F4 LDRB W8, [X0 + 0x60]
	0x01CD35F8 TBNZ X8, 0x1, 0x1CD3628
	0x01CD35FC MOV X1, X31
	0x01CD3600 BL 0x1D9E780
	0x01CD3604 TBZ X0, 0x0, 0x1CD3628
	0x01CD3608 LDR X0, [X19 + 0x38]
	0x01CD360C LDR V0, [X19 + 0x80]
	0x01CD3610 MOV X1, X31
	0x01CD3614 BL 0x1D9CEB8
	0x01CD3618 AND X1, X0, 0x0
	0x01CD361C MOV X0, X19
	0x01CD3620 LDP X30, X19, [X31], #0x10
	0x01CD3624 B 0x1CD357C
	0x01CD3628 LDP X30, X19, [X31], #0x10
	0x01CD362C RET
	0x01CD3630 SUB X31, X31, 0x20
	0x01CD3634 STP X30, X19, [X31 + 0x10]
	0x01CD3638 MOV X1, X31
	0x01CD363C MOV X19, X0
	0x01CD3640 BL 0x1D65000
	0x01CD3644 LDR X0, [X19 + 0x40]
	0x01CD3648 CBZ X0, 0x1CD3694
	0x01CD364C LDRB W8, [X0 + 0x60]
	0x01CD3650 TBNZ X8, 0x1, 0x1CD3694
	0x01CD3654 MOV X1, X31
	0x01CD3658 BL 0x1D9E780
	0x01CD365C TBZ X0, 0x0, 0x1CD3694
	0x01CD3660 MOV X0, X19
	0x01CD3664 BL 0x1CD351C
	0x01CD3668 STR W0, [X31 + 0x8]
	0x01CD366C LDR X1, [X19 + 0x38]
	0x01CD3670 ADD X0, X31, 0x8
	0x01CD3674 MOV X2, X31
	0x01CD3678 BL 0x1D9CBCC
	0x01CD367C TBZ X0, 0x0, 0x1CD3694
	0x01CD3680 LDR X0, [X19 + 0x38]
	0x01CD3684 CBZ X0, 0x1CD36A0
	0x01CD3688 LDR X1, [X19 + 0x40]
	0x01CD368C MOV X2, X31
	0x01CD3690 BL 0x1D8C548
	0x01CD3694 LDP X30, X19, [X31 + 0x10]
	0x01CD3698 ADD X31, X31, 0x20
	0x01CD369C RET
	0x01CD36A0 BL 0x1B6EA1C
	0x01CD36A4 MOVZ W8, 0x41200000
	0x01CD36A8 MOV X1, X31
	0x01CD36AC STR W8, [X0 + 0x80]
	0x01CD36B0 B 0x1D661D8
	0x01CD36B4 LDR W1, [X0 + 0x84]
	0x01CD36B8 B 0x1CD357C
	0x01CD36BC STP X30, X19, [X31 - 0x10]!
	0x01CD36C0 MOV X19, X0
	0x01CD36C4 BL 0x1CD351C
	0x01CD36C8 STR W0, [X19 + 0x84]
	0x01CD36CC LDP X30, X19, [X31], #0x10
	0x01CD36D0 RET
	0x01CD36D4 LDRB W8, [X0 + 0x28]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2551000
	009 Move X20, 0x227B000
	010 Move W8, [X21+1498]
	011 Move X20, [X20+1576]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {43}
	017 Move X0, 0x227D000
	018 Move X0, [X0+2632]
	019 Call 0x1B6F7F0
	020 Move X0, 0x227D000
	021 Move X0, [X0+2640]
	022 Call 0x1B6F7F0
	023 Move X0, 0x227C000
	024 Move X0, [X0+3984]
	025 Call 0x1B6F7F0
	026 Move X0, 0x227B000
	027 Move X0, [X0+1576]
	028 Call 0x1B6F7F0
	029 Move X0, 0x227B000
	030 Move X0, [X0+1144]
	031 Call 0x1B6F7F0
	032 Move X0, 0x227D000
	033 Move X0, [X0+2648]
	034 Call 0x1B6F7F0
	035 Move X0, 0x227D000
	036 Move X0, [X0+2656]
	037 Call 0x1B6F7F0
	038 Move X0, 0x227C000
	039 Move X0, [X0+2864]
	040 Call 0x1B6F7F0
	041 Move W8, 1
	042 Move [X21+1498], W8
	043 Move X0, [X20]
	044 Move X24, 0x227D000
	045 Move X23, 0x227D000
	046 Move X20, 0x227C000
	047 Move X22, 0x227C000
	048 Move X21, 0x227B000
	049 Move X24, [X24+2656]
	050 Move W8, [X0+224]
	051 Move X23, [X23+2648]
	052 Move X20, [X20+2864]
	053 Move X22, [X22+3984]
	054 Move X21, [X21+1144]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1B6F8F8
	058 Move X0, [X24]
	059 Move X2, [X23]
	060 Move X3, [X20]
	061 Move W4, 30
	062 Move X1, X31
	063 Move X5, X31
	064 Call Log.Info, X0, X1, X2, X3, X4
	065 Move X8, [X22]
	066 Move X0, [X21]
	067 Move X8, [X8+184]
	068 Move W9, [X0+224]
	069 Move X20, [X8]
	070 Compare W9, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1B6F8F8
	073 Move X0, X20
	074 Move X1, X31
	075 Move X2, X31
	076 Call Object.op_Equality, X0, X1
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {84}
	081 Move X8, [X22]
	082 Move X8, [X8+184]
	083 Move [X8], X19
	084 Move X0, X19
	085 Move X1, X31
	086 Call Component.get_gameObject, X0
	087 Move X8, [X21]
	088 Move X20, X0
	089 Move W9, [X8+224]
	090 Compare W9, 0
	091 JumpIfNotEqual {94}
	092 Move X0, X8
	093 Call 0x1B6F8F8
	094 Move X0, X20
	095 Move X1, X31
	096 Call Object.Destroy, X0
	097 Move X22, [X19+40]
	098 Compare X22, 0
	099 JumpIfEqual {143}
	100 Move X23, 0x227D000
	101 Move X23, [X23+2632]
	102 Move X21, 0x227D000
	103 Move X20, [X22+32]
	104 Move X0, [X23]
	105 Move X21, [X21+2640]
	106 Call 0x1B6FA0C
	107 Move X2, [X21]
	108 Move X1, X19
	109 Move X3, X31
	110 Move X21, X0
	111 Call Action`1<Object>..ctor, X0, X1, X2
	112 Move X0, X20
	113 Move X1, X21
	114 Move X2, X31
	115 Call Delegate.Combine, X0, X1
	116 Compare X0, 0
	117 JumpIfEqual {134}
	118 Move X20, [X23]
	119 Move X19, X0
	120 Move X1, X20
	121 Call 0x1B6F8FC
	122 Compare X0, 0
	123 JumpIfEqual {131}
	124 Move [X22+32], X0
	125 Move X20, [X23]
	126 Move X0, X19
	127 Move X1, X20
	128 Call 0x1B6F8FC
	129 Compare X0, 0
	130 JumpIfNotEqual {135}
	131 Move X0, X19
	132 Move X1, X20
	133 Call 0x1B6FCDC
	134 Move [X22+32], X31
	135 Move X20, [X31+48]
	136 Move X19, [X31+56]
	137 Move X22, [X31+32]
	138 Move X21, [X31+40]
	139 Move X24, [X31+16]
	140 Move X23, [X31+24]
	141 Move X30, [X31+64]
	142 Return 
	143 Call 0x1B6FA1C

Method: System.Void OnDestroy()

Disassembly:
	0x01CD36D8 ANDS W31, W8, 0x1
	0x01CD36DC CSET W0, EQ
	0x01CD36E0 RET
	0x01CD36E4 MOV X1, X31
	0x01CD36E8 B 0x3A9EFE0
	0x01CD36EC STP X30, X21, [X31 - 0x20]!
	0x01CD36F0 STP X20, X19, [X31 + 0x10]
	0x01CD36F4 ADRP X21, 0x2550000
	0x01CD36F8 ADRP X20, 0x227B000
	0x01CD36FC LDRB W8, [X21 + 0x5E4]
	0x01CD3700 LDR X20, [X20 + 0x6A0]
	0x01CD3704 MOV X19, X0
	0x01CD3708 TBNZ X8, 0x0, 0x1CD3720
	0x01CD370C ADRP X0, 0x227B000
	0x01CD3710 LDR X0, [X0 + 0x6A0]
	0x01CD3714 BL 0x1B6E7F0
	0x01CD3718 MOVZ W8, 0x1
	0x01CD371C STRB W8, [X21 + 0x5E4]
	0x01CD3720 LDR X0, [X20]
	0x01CD3724 LDR W19, [X19 + 0x4C]
	0x01CD3728 LDR W8, [X0 + 0xE0]
	0x01CD372C CBNZ W8, 0x1CD3734
	0x01CD3730 BL 0x1B6E8F8
	0x01CD3734 MOV W0, W19
	0x01CD3738 LDP X20, X19, [X31 + 0x10]
	0x01CD373C MOV X1, X31
	0x01CD3740 LDP X30, X21, [X31], #0x20
	0x01CD3744 B 0x301675C
	0x01CD3748 STR X1, [X0 + 0x20]
	0x01CD374C STP W2, W3, [X0 + 0x28]
	0x01CD3750 RET
	0x01CD3754 STR X30, [X31 - 0x30]!
	0x01CD3758 STP X22, X21, [X31 + 0x10]
	0x01CD375C STP X20, X19, [X31 + 0x20]
	0x01CD3760 ADRP X21, 0x2550000
	0x01CD3764 LDRB W8, [X21 + 0x5E5]
	0x01CD3768 MOV X20, X1
	0x01CD376C MOV X19, X0
	0x01CD3770 TBNZ X8, 0x0, 0x1CD37A0
	0x01CD3774 ADRP X0, 0x227C000
	0x01CD3778 LDR X0, [X0 + 0xAC8]
	0x01CD377C BL 0x1B6E7F0
	0x01CD3780 ADRP X0, 0x227A000
	0x01CD3784 LDR X0, [X0 + 0x478]
	0x01CD3788 BL 0x1B6E7F0
	0x01CD378C ADRP X0, 0x227B000
	0x01CD3790 LDR X0, [X0 + 0xAF8]
	0x01CD3794 BL 0x1B6E7F0
	0x01CD3798 MOVZ W8, 0x1
	0x01CD379C STRB W8, [X21 + 0x5E5]
	0x01CD37A0 MOV X0, X31
	0x01CD37A4 BL 0x3AA47CC
	0x01CD37A8 LDR V1, [X19 + 0x48]
	0x01CD37AC ADRP X8, 0xFFFFFFFFFEDD6000
	0x01CD37B0 LDR V2, [X8 + 0xD30]
	0x01CD37B4 FSUB S0, S0, S1
	0x01CD37B8 FCMP S0, S2
	0x01CD37BC B.MI 0x1CD38AC
	0x01CD37C0 CBZ X20, 0x1CD38BC
	0x01CD37C4 MOV X0, X20
	0x01CD37C8 MOV X1, X31
	0x01CD37CC BL 0x3AF6430

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2551000
	008 Move X21, 0x227C000
	009 Move W8, [X20+1499]
	010 Move X21, [X21+3984]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x227D000
	017 Move X0, [X0+2632]
	018 Call 0x1B6F7F0
	019 Move X0, 0x227D000
	020 Move X0, [X0+2640]
	021 Call 0x1B6F7F0
	022 Move X0, 0x227C000
	023 Move X0, [X0+3984]
	024 Call 0x1B6F7F0
	025 Move W8, 1
	026 Move [X20+1499], W8
	027 Move X8, [X21]
	028 Move X8, [X8+184]
	029 Move [X8], X31
	030 Move X22, [X19+40]
	031 Compare X22, 0
	032 JumpIfEqual {75}
	033 Move X23, 0x227D000
	034 Move X23, [X23+2632]
	035 Move X21, 0x227D000
	036 Move X20, [X22+32]
	037 Move X0, [X23]
	038 Move X21, [X21+2640]
	039 Call 0x1B6FA0C
	040 Move X2, [X21]
	041 Move X1, X19
	042 Move X3, X31
	043 Move X21, X0
	044 Call Action`1<Object>..ctor, X0, X1, X2
	045 Move X0, X20
	046 Move X1, X21
	047 Move X2, X31
	048 Call Delegate.Remove, X0, X1
	049 Compare X0, 0
	050 JumpIfEqual {67}
	051 Move X20, [X23]
	052 Move X19, X0
	053 Move X1, X20
	054 Call 0x1B6F8FC
	055 Compare X0, 0
	056 JumpIfEqual {64}
	057 Move [X22+32], X0
	058 Move X20, [X23]
	059 Move X0, X19
	060 Move X1, X20
	061 Call 0x1B6F8FC
	062 Compare X0, 0
	063 JumpIfNotEqual {68}
	064 Move X0, X19
	065 Move X1, X20
	066 Call 0x1B6FCDC
	067 Move [X22+32], X31
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move X30, [X31+48]
	073 Move X23, [X31+56]
	074 Return 
	075 Call 0x1B6FA1C

Method: System.Void OnPlayerCollisionEnter1(AnimalCompany.PlayerController playerController)

Disassembly:
	0x01CD37D0 ADRP X22, 0x227A000
	0x01CD37D4 LDR X22, [X22 + 0x478]
	0x01CD37D8 MOV X21, X0
	0x01CD37DC LDR X8, [X22]
	0x01CD37E0 LDR W9, [X8 + 0xE0]
	0x01CD37E4 CBNZ W9, 0x1CD37F0
	0x01CD37E8 MOV X0, X8
	0x01CD37EC BL 0x1B6E8F8
	0x01CD37F0 MOV X0, X21
	0x01CD37F4 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {12}
	004 Move X8, [X0+48]
	005 Move W2, 1
	006 Move X0, X1
	007 Move X3, X31
	008 Move X1, X8
	009 Move X30, [X31+16]
	010 Call PlayerController.Respawn, X0, X1, X2
	011 Return 
	012 Call 0x1B6FA1C

Method: System.Boolean TrySpendMoney(System.Int32 amount)

Disassembly:
	0x01CD37F8 MOV X2, X31
	0x01CD37FC BL 0x3AA0AF0
	0x01CD3800 TBNZ X0, 0x0, 0x1CD38AC
	0x01CD3804 MOV X0, X20
	0x01CD3808 MOV X1, X31
	0x01CD380C BL 0x3A9B0C0
	0x01CD3810 CBZ X0, 0x1CD38BC
	0x01CD3814 ADRP X8, 0x227B000
	0x01CD3818 LDR X8, [X8 + 0xAF8]
	0x01CD381C MOV X2, X31
	0x01CD3820 LDR X1, [X8]
	0x01CD3824 BL 0x3A9B68C
	0x01CD3828 TBZ X0, 0x0, 0x1CD38AC
	0x01CD382C MOV X0, X20
	0x01CD3830 MOV X1, X31
	0x01CD3834 BL 0x3AF6430
	0x01CD3838 CBZ X0, 0x1CD38BC
	0x01CD383C MOV X1, X31
	0x01CD3840 BL 0x3A9B0C0
	0x01CD3844 CBZ X0, 0x1CD38BC
	0x01CD3848 ADRP X8, 0x227C000
	0x01CD384C LDR X8, [X8 + 0xAC8]
	0x01CD3850 LDR X1, [X8]
	0x01CD3854 BL 0x20CF4D0
	0x01CD3858 LDR X8, [X22]
	0x01CD385C MOV X20, X0
	0x01CD3860 LDR W9, [X8 + 0xE0]
	0x01CD3864 CBNZ W9, 0x1CD3870
	0x01CD3868 MOV X0, X8
	0x01CD386C BL 0x1B6E8F8
	0x01CD3870 MOV X0, X20
	0x01CD3874 MOV X1, X31
	0x01CD3878 MOV X2, X31
	0x01CD387C BL 0x3A9D6EC
	0x01CD3880 TBZ X0, 0x0, 0x1CD38AC
	0x01CD3884 MOV X0, X31
	0x01CD3888 BL 0x3AA47CC
	0x01CD388C LDR X0, [X19 + 0x20]
	0x01CD3890 STR S0, [X19 + 0x48]
	0x01CD3894 CBZ X0, 0x1CD38BC
	0x01CD3898 LDR W1, [X19 + 0x2C]
	0x01CD389C LDP X20, X19, [X31 + 0x20]
	0x01CD38A0 LDP X22, X21, [X31 + 0x10]
	0x01CD38A4 LDR X30, [X31], #0x30
	0x01CD38A8 B 0x1CD38C0
	0x01CD38AC LDP X20, X19, [X31 + 0x20]
	0x01CD38B0 LDP X22, X21, [X31 + 0x10]
	0x01CD38B4 LDR X30, [X31], #0x30
	0x01CD38B8 RET
	0x01CD38BC BL 0x1B6EA1C
	0x01CD38C0 SUB X31, X31, 0x90
	0x01CD38C4 STR D8, [X31 + 0x60]
	0x01CD38C8 STP X30, X21, [X31 + 0x70]
	0x01CD38CC STP X20, X19, [X31 + 0x80]
	0x01CD38D0 ADRP X21, 0x2550000
	0x01CD38D4 LDRB W8, [X21 + 0x5FA]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2551000
	006 Move X20, 0x227B000
	007 Move W8, [X21+1500]
	008 Move X20, [X20+1256]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x227B000
	015 Move X0, [X0+1256]
	016 Call 0x1B6F7F0
	017 Move X0, 0x227D000
	018 Move X0, [X0+2664]
	019 Call 0x1B6F7F0
	020 Move W8, 1
	021 Move [X21+1500], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1B6F8F8
	027 Move X21, 0x2551000
	028 Move W8, [X21+1091]
	029 Compare W8, 0
	030 JumpIfNotEqual {36}
	031 Move X0, 0x227B000
	032 Move X0, [X0+1256]
	033 Call 0x1B6F7F0
	034 Move W8, 1
	035 Move [X21+1091], W8
	036 Move X0, [X20]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1B6F8F8
	041 Move X0, [X20]
	042 Move X8, [X0+184]
	043 Move X8, [X8]
	044 Compare X8, 0
	045 JumpIfEqual {68}
	046 Move X8, [X8+168]
	047 Compare X8, 0
	048 JumpIfEqual {68}
	049 Move X8, [X8+104]
	050 Compare X8, 0
	051 JumpIfEqual {68}
	052 Move X9, 0x227D000
	053 Move X9, [X9+2664]
	054 Move X0, [X8+72]
	055 Move X1, [X9]
	056 Call StatePrimitive`1<Int32>.op_Implicit, X0
	057 Move W20, W0
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move W0, W19
	060 Call GameManager.SubtractPlayerMoney, X0
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 NotImplemented "Instruction CSET not yet implemented."
	065 Move X30, [X31+32]
	066 Move X21, [X31+40]
	067 Return X0
	068 Call 0x1B6FA1C

Method: System.Void AddPlayerMoney(System.Int32 amount)

Disassembly:
	0x01CD3B3C BL 0x1D697C8
	0x01CD3B40 LDR X0, [X19 + 0x38]
	0x01CD3B44 CBZ X0, 0x1CD3C78
	0x01CD3B48 MOV X1, X31
	0x01CD3B4C BL 0x1D87040
	0x01CD3B50 CMP W0, 0x4
	0x01CD3B54 B.EQ 0x1CD3BFC
	0x01CD3B58 LDR X0, [X19 + 0x40]
	0x01CD3B5C CBZ X0, 0x1CD3C78
	0x01CD3B60 MOV X1, X31
	0x01CD3B64 BL 0x1D9F538
	0x01CD3B68 ANDS W31, W0, 0x7
	0x01CD3B6C B.EQ 0x1CD3BCC
	0x01CD3B70 LDR X8, [X19 + 0x38]
	0x01CD3B74 CBZ X8, 0x1CD3C78
	0x01CD3B78 LDR X0, [X8 + 0x50]
	0x01CD3B7C CBZ X0, 0x1CD3C78
	0x01CD3B80 MOV X1, X31
	0x01CD3B84 BL 0x1DBEFE4
	0x01CD3B88 TBZ X0, 0x0, 0x1CD3938
	0x01CD3B8C LDR X8, [X19 + 0x38]
	0x01CD3B90 CBZ X8, 0x1CD3C78
	0x01CD3B94 LDR X0, [X8 + 0x50]
	0x01CD3B98 MOVZ W1, 0xC
	0x01CD3B9C MOV X2, X31
	0x01CD3BA0 BL 0x1DD601C
	0x01CD3BA4 MOV X21, X0
	0x01CD3BA8 MOVZ W0, 0x1
	0x01CD3BAC MOV X1, X31
	0x01CD3BB0 BL 0x1D29EBC
	0x01CD3BB4 LDR X8, [X19 + 0x40]
	0x01CD3BB8 CBZ X8, 0x1CD3C78
	0x01CD3BBC LDR X8, [X8 + 0x20]
	0x01CD3BC0 CBZ X8, 0x1CD3C10
	0x01CD3BC4 LDR W0, [X8]
	0x01CD3BC8 B 0x1CD3C14
	0x01CD3BCC LDR X0, [X21]
	0x01CD3BD0 LDR X19, [X19 + 0x40]
	0x01CD3BD4 LDR W8, [X0 + 0xE0]
	0x01CD3BD8 CBNZ W8, 0x1CD3BE0
	0x01CD3BDC BL 0x1B6E8F8
	0x01CD3BE0 ADRP X8, 0x227C000
	0x01CD3BE4 LDR X8, [X8 + 0xAE0]
	0x01CD3BE8 MOVZ W2, 0x7
	0x01CD3BEC MOV X1, X19
	0x01CD3BF0 MOV X3, X31
	0x01CD3BF4 LDR X0, [X8]
	0x01CD3BF8 BL 0x1D69640
	0x01CD3BFC LDP X20, X19, [X31 + 0x80]
	0x01CD3C00 LDP X30, X21, [X31 + 0x70]
	0x01CD3C04 LDR V8, [X31 + 0x60]
	0x01CD3C08 ADD X31, X31, 0x90
	0x01CD3C0C RET
	0x01CD3C10 MOV X0, X31
	0x01CD3C14 LDR W1, [X19 + 0x68]
	0x01CD3C18 MOVZ W2, 0x5
	0x01CD3C1C MOV X3, X31
	0x01CD3C20 BL 0x1DA8258
	0x01CD3C24 STUR X0, [X21 + 0x1C]
	0x01CD3C28 STR W20, [X21 + 0x24]
	0x01CD3C2C CBZ X21, 0x1CD3C78
	0x01CD3C30 MOVZ W8, 0x60
	0x01CD3C34 STR W8, [X21 + 0xC]
	0x01CD3C38 LDR X0, [X19 + 0x38]
	0x01CD3C3C CBZ X0, 0x1CD3C78
	0x01CD3C40 MOV X1, X21
	0x01CD3C44 MOV X2, X31
	0x01CD3C48 BL 0x1D8A710
	0x01CD3C4C B 0x1CD3938
	0x01CD3C50 MOV X0, X19
	0x01CD3C54 BL 0x1CD6628
	0x01CD3C58 LDR X0, [X19 + 0x38]
	0x01CD3C5C FMOV S0, 5
	0x01CD3C60 MOV X1, X31
	0x01CD3C64 BL 0x1D9CEB8
	0x01CD3C68 AND X1, X0, 0x0
	0x01CD3C6C MOV X0, X19
	0x01CD3C70 BL 0x1CD4A64
	0x01CD3C74 B 0x1CD3BFC
	0x01CD3C78 BL 0x1B6EA1C
	0x01CD3C7C BL 0x1B6EA24
	0x01CD3C80 STP X30, X23, [X31 - 0x30]!
	0x01CD3C84 STP X22, X21, [X31 + 0x10]
	0x01CD3C88 STP X20, X19, [X31 + 0x20]
	0x01CD3C8C ADRP X21, 0x2550000
	0x01CD3C90 ADRP X20, 0x227B000
	0x01CD3C94 LDRB W8, [X21 + 0x5E6]
	0x01CD3C98 LDR X20, [X20 + 0x6A0]
	0x01CD3C9C MOV X19, X0
	0x01CD3CA0 TBNZ X8, 0x0, 0x1CD3CF4
	0x01CD3CA4 ADRP X0, 0x227B000
	0x01CD3CA8 LDR X0, [X0 + 0x6C8]
	0x01CD3CAC BL 0x1B6E7F0
	0x01CD3CB0 ADRP X0, 0x227B000
	0x01CD3CB4 LDR X0, [X0 + 0x170]
	0x01CD3CB8 BL 0x1B6E7F0
	0x01CD3CBC ADRP X0, 0x227C000
	0x01CD3CC0 LDR X0, [X0 + 0xAE8]
	0x01CD3CC4 BL 0x1B6E7F0
	0x01CD3CC8 ADRP X0, 0x227C000
	0x01CD3CCC LDR X0, [X0 + 0xAF0]
	0x01CD3CD0 BL 0x1B6E7F0
	0x01CD3CD4 ADRP X0, 0x227C000
	0x01CD3CD8 LDR X0, [X0 + 0xAF8]
	0x01CD3CDC BL 0x1B6E7F0
	0x01CD3CE0 ADRP X0, 0x227B000
	0x01CD3CE4 LDR X0, [X0 + 0x6A0]
	0x01CD3CE8 BL 0x1B6E7F0
	0x01CD3CEC MOVZ W8, 0x1
	0x01CD3CF0 STRB W8, [X21 + 0x5E6]
	0x01CD3CF4 LDR X0, [X20]
	0x01CD3CF8 LDR W20, [X19 + 0x4C]
	0x01CD3CFC LDR W8, [X0 + 0xE0]
	0x01CD3D00 CBNZ W8, 0x1CD3D08
	0x01CD3D04 BL 0x1B6E8F8
	0x01CD3D08 MOV W0, W20
	0x01CD3D0C MOV X1, X31
	0x01CD3D10 BL 0x301675C
	0x01CD3D14 LDR X0, [X19 + 0x38]
	0x01CD3D18 CBZ X0, 0x1CD3E3C
	0x01CD3D1C ADRP X21, 0x227C000
	0x01CD3D20 LDR X21, [X21 + 0xAF8]
	0x01CD3D24 MOV X1, X31
	0x01CD3D28 BL 0x3A7BCC8
	0x01CD3D2C LDR X8, [X21]
	0x01CD3D30 MOV X20, X0
	0x01CD3D34 LDR W9, [X8 + 0xE0]
	0x01CD3D38 CBNZ W9, 0x1CD3D48
	0x01CD3D3C MOV X0, X8
	0x01CD3D40 BL 0x1B6E8F8
	0x01CD3D44 LDR X8, [X21]
	0x01CD3D48 CBZ X20, 0x1CD3E3C
	0x01CD3D4C LDR X8, [X8 + 0xB8]
	0x01CD3D50 MOV X0, X20
	0x01CD3D54 MOV X2, X31
	0x01CD3D58 LDP S2, S3, [X8 + 0xC]
	0x01CD3D5C LDP S0, S1, [X8 + 0x4]
	0x01CD3D60 LDR W1, [X8]
	0x01CD3D64 BL 0x3A7D234
	0x01CD3D68 ADRP X8, 0xFFFFFFFFFEDD6000
	0x01CD3D6C LDR V2, [X8 + 0xD30]
	0x01CD3D70 FMOV S0, W31
	0x01CD3D74 FMOV S1, 1
	0x01CD3D78 MOV X0, X31
	0x01CD3D7C BL 0x301B3D8
	0x01CD3D80 CBZ X0, 0x1CD3E3C
	0x01CD3D84 ADRP X20, 0x227B000
	0x01CD3D88 ADRP X21, 0x227C000
	0x01CD3D8C LDR X20, [X20 + 0x6C8]
	0x01CD3D90 LDR X21, [X21 + 0xAE8]
	0x01CD3D94 MOV X1, X31
	0x01CD3D98 BL 0x302ED48
	0x01CD3D9C LDR X8, [X20]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X20, 0x2551000
	011 Move W8, [X20+1501]
	012 Move W19, W0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {49}
	017 Move X0, 0x227B000
	018 Move X0, [X0+2464]
	019 Call 0x1B6F7F0
	020 Move X0, 0x227B000
	021 Move X0, [X0+1256]
	022 Call 0x1B6F7F0
	023 Move X0, 0x227B000
	024 Move X0, [X0+2472]
	025 Call 0x1B6F7F0
	026 Move X0, 0x227B000
	027 Move X0, [X0+1528]
	028 Call 0x1B6F7F0
	029 Move X0, 0x227D000
	030 Move X0, [X0+2672]
	031 Call 0x1B6F7F0
	032 Move X0, 0x227D000
	033 Move X0, [X0+2664]
	034 Call 0x1B6F7F0
	035 Move X0, 0x227C000
	036 Move X0, [X0+1984]
	037 Call 0x1B6F7F0
	038 Move X0, 0x227C000
	039 Move X0, [X0+1992]
	040 Call 0x1B6F7F0
	041 Move X0, 0x227D000
	042 Move X0, [X0+2688]
	043 Call 0x1B6F7F0
	044 Move X0, 0x227D000
	045 Move X0, [X0+2696]
	046 Call 0x1B6F7F0
	047 Move W8, 1
	048 Move [X20+1501], W8
	049 Move TEMP, X19
	050 And TEMP, TEMP, -2147483648
	051 Compare TEMP, -2147483648
	052 JumpIfEqual {167}
	053 Move X8, 0x227B000
	054 Move X8, [X8+2472]
	055 Move X21, 0x227B000
	056 Move W1, 1
	057 Move X0, [X8]
	058 Move X21, [X21+1256]
	059 Call 0x1B6F868
	060 Move X8, [X21]
	061 Move X20, X0
	062 Move W9, [X8+224]
	063 Compare W9, 0
	064 JumpIfNotEqual {67}
	065 Move X0, X8
	066 Call 0x1B6F8F8
	067 Move X22, 0x2551000
	068 Move W8, [X22+1091]
	069 Compare W8, 0
	070 JumpIfNotEqual {76}
	071 Move X0, 0x227B000
	072 Move X0, [X0+1256]
	073 Call 0x1B6F7F0
	074 Move W8, 1
	075 Move [X22+1091], W8
	076 Move X0, [X21]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {82}
	080 Call 0x1B6F8F8
	081 Move X0, [X21]
	082 Move X8, [X0+184]
	083 Move X8, [X8]
	084 Compare X8, 0
	085 JumpIfEqual {177}
	086 Move X8, [X8+168]
	087 Compare X8, 0
	088 JumpIfEqual {177}
	089 Move X8, [X8+104]
	090 Compare X8, 0
	091 JumpIfEqual {177}
	092 Move X9, 0x227D000
	093 Move X9, [X9+2664]
	094 Move X0, [X8+72]
	095 Move X21, 0x227D000
	096 Move X1, [X9]
	097 Move X21, [X21+2672]
	098 Call StatePrimitive`1<Int32>.op_Implicit, X0
	099 Move X8, [X21]
	100 Move W22, W0
	101 Move X0, X8
	102 Call 0x1B6FA0C
	103 Add W1, W22, W19
	104 Move X2, X31
	105 Move X21, X0
	106 Call SetUserSoftCurrencyAmountAction..ctor, X0, X1
	107 Compare X20, 0
	108 JumpIfEqual {177}
	109 Compare X21, 0
	110 JumpIfEqual {117}
	111 Move X8, [X20]
	112 Move X0, X21
	113 Move X1, [X8+64]
	114 Call 0x1B6F8FC
	115 Compare X0, 0
	116 JumpIfEqual {179}
	117 Move W8, [X20+24]
	118 Compare W8, 0
	119 JumpIfEqual {178}
	120 Move X22, 0x227C000
	121 Move X23, 0x227B000
	122 Move X24, 0x227D000
	123 Move X25, 0x227C000
	124 Move X22, [X22+1984]
	125 Move X23, [X23+1528]
	126 Move X24, [X24+2688]
	127 Move X25, [X25+1992]
	128 Move X0, X20
	129 Move X1, X31
	130 Move [X20+32], X21
	131 Call App.ExecuteActionOrDelay, X0
	132 Move X0, [X22]
	133 Move W1, 1
	134 Call 0x1B6F868
	135 Move X20, X0
	136 Move X0, [X23]
	137 Add X1, X31, 28
	138 Move [X31+28], W19
	139 Call 0x1B6F900
	140 Move X1, [X24]
	141 Move X3, [X25]
	142 Move X2, X0
	143 Add X0, X31, 0
	144 Move [X31], X31
	145 Move [X31+8], X31
	146 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	147 Compare X20, 0
	148 JumpIfEqual {177}
	149 Move W8, [X20+24]
	150 Compare W8, 0
	151 JumpIfEqual {178}
	152 Move V0, [X31]
	153 Move X8, 0x227B000
	154 Move X8, [X8+2464]
	155 Move X19, 0x227D000
	156 Move [X20+2], V0
	157 Move X0, [X8]
	158 Move W8, [X0+224]
	159 Move X19, [X19+2696]
	160 Compare W8, 0
	161 JumpIfNotEqual {163}
	162 Call 0x1B6F8F8
	163 Move X0, [X19]
	164 Move X1, X20
	165 Move X2, X31
	166 Call Analytics.Track, X0, X1
	167 Move X20, [X31+80]
	168 Move X19, [X31+88]
	169 Move X22, [X31+64]
	170 Move X21, [X31+72]
	171 Move X24, [X31+48]
	172 Move X23, [X31+56]
	173 Move X30, [X31+32]
	174 Move X25, [X31+40]
	175 Add X31, X31, 96
	176 Return 
	177 Call 0x1B6FA1C
	178 Call 0x1B6FA24
	179 Call 0x1B6FA40
	180 Move X1, X31
	181 Call 0x1B6F8E8

Method: System.Void SubtractPlayerMoney(System.Int32 amount)

Disassembly:
	0x01CD38D8 MOV W20, W1
	0x01CD38DC MOV X19, X0
	0x01CD38E0 TBNZ X8, 0x0, 0x1CD391C
	0x01CD38E4 ADRP X0, 0x227C000
	0x01CD38E8 LDR X0, [X0 + 0xAD0]
	0x01CD38EC BL 0x1B6E7F0
	0x01CD38F0 ADRP X0, 0x227C000
	0x01CD38F4 LDR X0, [X0 + 0xAD8]
	0x01CD38F8 BL 0x1B6E7F0
	0x01CD38FC ADRP X0, 0x227B000
	0x01CD3900 LDR X0, [X0 + 0x1C0]
	0x01CD3904 BL 0x1B6E7F0
	0x01CD3908 ADRP X0, 0x227C000
	0x01CD390C LDR X0, [X0 + 0xAE0]
	0x01CD3910 BL 0x1B6E7F0
	0x01CD3914 MOVZ W8, 0x1
	0x01CD3918 STRB W8, [X21 + 0x5FA]
	0x01CD391C STP X31, X31, [X31 + 0x40]
	0x01CD3920 STR X31, [X31 + 0x50]
	0x01CD3924 STP X31, X31, [X31 + 0x20]
	0x01CD3928 STR X31, [X31 + 0x30]
	0x01CD392C LDRB W8, [X19 + 0x58]
	0x01CD3930 CBZ W8, 0x1CD3B1C
	0x01CD3934 STRB W31, [X19 + 0x58]
	0x01CD3938 LDR X8, [X19 + 0xB8]
	0x01CD393C CBZ X8, 0x1CD3C78
	0x01CD3940 LDR W9, [X8 + 0x18]
	0x01CD3944 CMP W9, W20
	0x01CD3948 B.LS 0x1CD3C7C
	0x01CD394C SXTW X21, W20
	0x01CD3950 ADD X8, X8, X21, 0x3, LSL
	0x01CD3954 LDR X0, [X8 + 0x20]
	0x01CD3958 CBZ X0, 0x1CD3C78
	0x01CD395C BL 0x1CD3C80
	0x01CD3960 MOV X0, X19
	0x01CD3964 BL 0x1CD4588
	0x01CD3968 TBNZ X0, 0x0, 0x1CD3BFC
	0x01CD396C LDR X8, [X19 + 0xC0]
	0x01CD3970 CBZ X8, 0x1CD3C78
	0x01CD3974 LDR W9, [X8 + 0x18]
	0x01CD3978 CMP W9, W20
	0x01CD397C B.LS 0x1CD3C7C
	0x01CD3980 ADD X8, X8, X21, 0x3, LSL
	0x01CD3984 LDR X21, [X8 + 0x20]
	0x01CD3988 MOV X0, X19
	0x01CD398C MOV X1, X31
	0x01CD3990 BL 0x3A9B084
	0x01CD3994 CBZ X0, 0x1CD3C78
	0x01CD3998 MOV X1, X31
	0x01CD399C BL 0x3AA7658
	0x01CD39A0 FMOV S3, 1
	0x01CD39A4 MOV X0, X21
	0x01CD39A8 MOV X1, X31
	0x01CD39AC BL 0x1CCD9CC
	0x01CD39B0 LDR X0, [X19 + 0x40]
	0x01CD39B4 CBZ X0, 0x1CD3BFC
	0x01CD39B8 LDRB W8, [X0 + 0x60]
	0x01CD39BC TBNZ X8, 0x1, 0x1CD3BFC
	0x01CD39C0 MOV X1, X31
	0x01CD39C4 BL 0x1D9E780
	0x01CD39C8 TBZ X0, 0x0, 0x1CD3BFC
	0x01CD39CC ADD X8, X31, 0x8
	0x01CD39D0 MOV X0, X19
	0x01CD39D4 BL 0x1CD4714
	0x01CD39D8 ADRP X9, 0x227C000
	0x01CD39DC LDUR V0, [X31 + 0x8]
	0x01CD39E0 LDR X8, [X31 + 0x18]
	0x01CD39E4 LDR X9, [X9 + 0xAD8]
	0x01CD39E8 ADD X0, X31, 0x40
	0x01CD39EC MOVZ W2, 0x1
	0x01CD39F0 MOV W1, W20
	0x01CD39F4 LDR X3, [X9]
	0x01CD39F8 STR V0, [X31 + 0x4]
	0x01CD39FC STR X8, [X31 + 0x50]
	0x01CD3A00 BL 0x22AD29C
	0x01CD3A04 ADD X8, X31, 0x8
	0x01CD3A08 MOV X0, X19
	0x01CD3A0C BL 0x1CD47CC
	0x01CD3A10 LDUR V0, [X31 + 0x8]
	0x01CD3A14 LDR X8, [X31 + 0x18]
	0x01CD3A18 MOV X1, X31
	0x01CD3A1C STR V0, [X31 + 0x2]
	0x01CD3A20 STR X8, [X31 + 0x30]
	0x01CD3A24 LDR X0, [X19 + 0x38]
	0x01CD3A28 FMOV S0, 5
	0x01CD3A2C BL 0x1D9CEB8
	0x01CD3A30 ADRP X8, 0x227C000
	0x01CD3A34 LDR X8, [X8 + 0xAD0]
	0x01CD3A38 AND X2, X0, 0x0
	0x01CD3A3C ADD X0, X31, 0x20
	0x01CD3A40 MOV W1, W20
	0x01CD3A44 LDR X3, [X8]
	0x01CD3A48 BL 0x22B0C90
	0x01CD3A4C MOV X0, X19
	0x01CD3A50 BL 0x1CD4B84
	0x01CD3A54 ADRP X8, 0xFFFFFFFFFEDD6000
	0x01CD3A58 LDR V1, [X8 + 0xAF8]
	0x01CD3A5C MOV X0, X19
	0x01CD3A60 FADD S0, S0, S1
	0x01CD3A64 BL 0x1CD4BE4
	0x01CD3A68 MOV X0, X19
	0x01CD3A6C BL 0x1CD43F0
	0x01CD3A70 TBNZ X0, 0x0, 0x1CD3BFC
	0x01CD3A74 MOV X0, X19
	0x01CD3A78 BL 0x1CD4AC4
	0x01CD3A7C CMP W0, W20
	0x01CD3A80 B.NE 0x1CD3BFC
	0x01CD3A84 MOV X0, X19
	0x01CD3A88 BL 0x1CD4B84
	0x01CD3A8C ADRP X8, 0xFFFFFFFFFEDD6000
	0x01CD3A90 LDR V1, [X8 + 0xD0C]
	0x01CD3A94 MOV X0, X19
	0x01CD3A98 FADD S0, S0, S1
	0x01CD3A9C BL 0x1CD4BE4
	0x01CD3AA0 MOV X0, X19
	0x01CD3AA4 BL 0x1CD4B84
	0x01CD3AA8 MOVZ W8, 0x42C80000
	0x01CD3AAC FMOV S1, W8
	0x01CD3AB0 FCMP S0, S1
	0x01CD3AB4 B.GE 0x1CD3C50
	0x01CD3AB8 FMOV S0, 2
	0x01CD3ABC FMOV S1, 5
	0x01CD3AC0 MOV X0, X31
	0x01CD3AC4 BL 0x3A98CD0
	0x01CD3AC8 MOV X0, X19
	0x01CD3ACC MOV V8.16B, V0.16B
	0x01CD3AD0 BL 0x1CD5B8C
	0x01CD3AD4 ADRP X8, 0xFFFFFFFFFEDD6000
	0x01CD3AD8 LDR X0, [X19 + 0x38]
	0x01CD3ADC LDR V0, [X8 + 0x9E8]
	0x01CD3AE0 MOV X1, X31
	0x01CD3AE4 BL 0x1D9CEB8
	0x01CD3AE8 AND X1, X0, 0x0
	0x01CD3AEC MOV X0, X19
	0x01CD3AF0 BL 0x1CD49A4
	0x01CD3AF4 ADRP X8, 0xFFFFFFFFFEDD6000
	0x01CD3AF8 LDR V0, [X8 + 0x9C0]
	0x01CD3AFC LDR X0, [X19 + 0x38]
	0x01CD3B00 MOV X1, X31
	0x01CD3B04 FADD S0, S8, S0
	0x01CD3B08 BL 0x1D9CEB8
	0x01CD3B0C AND X1, X0, 0x0
	0x01CD3B10 MOV X0, X19
	0x01CD3B14 BL 0x1CD48E4
	0x01CD3B18 B 0x1CD3BFC
	0x01CD3B1C ADRP X21, 0x227B000
	0x01CD3B20 LDR X21, [X21 + 0x1C0]
	0x01CD3B24 LDR X0, [X21]
	0x01CD3B28 LDR W8, [X0 + 0xE0]
	0x01CD3B2C CBNZ W8, 0x1CD3B34
	0x01CD3B30 BL 0x1B6E8F8
	0x01CD3B34 MOV X0, X19
	0x01CD3B38 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X20, 0x2551000
	011 Move W8, [X20+1502]
	012 Move W19, W0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {49}
	017 Move X0, 0x227B000
	018 Move X0, [X0+2464]
	019 Call 0x1B6F7F0
	020 Move X0, 0x227B000
	021 Move X0, [X0+1256]
	022 Call 0x1B6F7F0
	023 Move X0, 0x227B000
	024 Move X0, [X0+2472]
	025 Call 0x1B6F7F0
	026 Move X0, 0x227B000
	027 Move X0, [X0+1528]
	028 Call 0x1B6F7F0
	029 Move X0, 0x227D000
	030 Move X0, [X0+2672]
	031 Call 0x1B6F7F0
	032 Move X0, 0x227D000
	033 Move X0, [X0+2664]
	034 Call 0x1B6F7F0
	035 Move X0, 0x227C000
	036 Move X0, [X0+1984]
	037 Call 0x1B6F7F0
	038 Move X0, 0x227C000
	039 Move X0, [X0+1992]
	040 Call 0x1B6F7F0
	041 Move X0, 0x227D000
	042 Move X0, [X0+2680]
	043 Call 0x1B6F7F0
	044 Move X0, 0x227D000
	045 Move X0, [X0+2688]
	046 Call 0x1B6F7F0
	047 Move W8, 1
	048 Move [X20+1502], W8
	049 Move TEMP, X19
	050 And TEMP, TEMP, -2147483648
	051 Compare TEMP, -2147483648
	052 JumpIfEqual {167}
	053 Move X8, 0x227B000
	054 Move X8, [X8+2472]
	055 Move X21, 0x227B000
	056 Move W1, 1
	057 Move X0, [X8]
	058 Move X21, [X21+1256]
	059 Call 0x1B6F868
	060 Move X8, [X21]
	061 Move X20, X0
	062 Move W9, [X8+224]
	063 Compare W9, 0
	064 JumpIfNotEqual {67}
	065 Move X0, X8
	066 Call 0x1B6F8F8
	067 Move X22, 0x2551000
	068 Move W8, [X22+1091]
	069 Compare W8, 0
	070 JumpIfNotEqual {76}
	071 Move X0, 0x227B000
	072 Move X0, [X0+1256]
	073 Call 0x1B6F7F0
	074 Move W8, 1
	075 Move [X22+1091], W8
	076 Move X0, [X21]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {82}
	080 Call 0x1B6F8F8
	081 Move X0, [X21]
	082 Move X8, [X0+184]
	083 Move X8, [X8]
	084 Compare X8, 0
	085 JumpIfEqual {177}
	086 Move X8, [X8+168]
	087 Compare X8, 0
	088 JumpIfEqual {177}
	089 Move X8, [X8+104]
	090 Compare X8, 0
	091 JumpIfEqual {177}
	092 Move X9, 0x227D000
	093 Move X9, [X9+2664]
	094 Move X0, [X8+72]
	095 Move X21, 0x227D000
	096 Move X1, [X9]
	097 Move X21, [X21+2672]
	098 Call StatePrimitive`1<Int32>.op_Implicit, X0
	099 Move X8, [X21]
	100 Move W22, W0
	101 Move X0, X8
	102 Call 0x1B6FA0C
	103 Subtract W1, W22, W19
	104 Move X2, X31
	105 Move X21, X0
	106 Call SetUserSoftCurrencyAmountAction..ctor, X0, X1
	107 Compare X20, 0
	108 JumpIfEqual {177}
	109 Compare X21, 0
	110 JumpIfEqual {117}
	111 Move X8, [X20]
	112 Move X0, X21
	113 Move X1, [X8+64]
	114 Call 0x1B6F8FC
	115 Compare X0, 0
	116 JumpIfEqual {179}
	117 Move W8, [X20+24]
	118 Compare W8, 0
	119 JumpIfEqual {178}
	120 Move X22, 0x227C000
	121 Move X23, 0x227B000
	122 Move X24, 0x227D000
	123 Move X25, 0x227C000
	124 Move X22, [X22+1984]
	125 Move X23, [X23+1528]
	126 Move X24, [X24+2688]
	127 Move X25, [X25+1992]
	128 Move X0, X20
	129 Move X1, X31
	130 Move [X20+32], X21
	131 Call App.ExecuteActionOrDelay, X0
	132 Move X0, [X22]
	133 Move W1, 1
	134 Call 0x1B6F868
	135 Move X20, X0
	136 Move X0, [X23]
	137 Add X1, X31, 28
	138 Move [X31+28], W19
	139 Call 0x1B6F900
	140 Move X1, [X24]
	141 Move X3, [X25]
	142 Move X2, X0
	143 Add X0, X31, 0
	144 Move [X31], X31
	145 Move [X31+8], X31
	146 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	147 Compare X20, 0
	148 JumpIfEqual {177}
	149 Move W8, [X20+24]
	150 Compare W8, 0
	151 JumpIfEqual {178}
	152 Move V0, [X31]
	153 Move X8, 0x227B000
	154 Move X8, [X8+2464]
	155 Move X19, 0x227D000
	156 Move [X20+2], V0
	157 Move X0, [X8]
	158 Move W8, [X0+224]
	159 Move X19, [X19+2680]
	160 Compare W8, 0
	161 JumpIfNotEqual {163}
	162 Call 0x1B6F8F8
	163 Move X0, [X19]
	164 Move X1, X20
	165 Move X2, X31
	166 Call Analytics.Track, X0, X1
	167 Move X20, [X31+80]
	168 Move X19, [X31+88]
	169 Move X22, [X31+64]
	170 Move X21, [X31+72]
	171 Move X24, [X31+48]
	172 Move X23, [X31+56]
	173 Move X30, [X31+32]
	174 Move X25, [X31+40]
	175 Add X31, X31, 96
	176 Return 
	177 Call 0x1B6FA1C
	178 Call 0x1B6FA24
	179 Call 0x1B6FA40
	180 Move X1, X31
	181 Call 0x1B6F8E8

Method: System.Void .ctor()

Disassembly:
	0x01CD3DA0 MOV X20, X0
	0x01CD3DA4 MOV X0, X8

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

