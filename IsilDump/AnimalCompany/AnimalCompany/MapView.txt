Type: AnimalCompany.MapView

Method: System.Void Awake()

Disassembly:
	0x01CB51AC LDR X3, [X0 + 0x18]
	0x01CB51B0 LDR X2, [X0 + 0x28]
	0x01CB51B4 MOV X0, X8
	0x01CB51B8 BR X3
	0x01CB51BC SUB X31, X31, 0x20
	0x01CB51C0 STP X31, X30, [X31 + 0x8]
	0x01CB51C4 STR X1, [X31]
	0x01CB51C8 ADD X1, X31, 0x0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call MapView.SetupMobIconPool, X0
	005 Move X0, X19
	006 Call MapView.SetupLootIconPool, X0
	007 Move X0, X19
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Call MapView.SetupPlayerIconPool, X0
	011 Return 

Method: System.Void SetupPlayerIconPool()

Disassembly:
	0x01CB54D4 MOV X1, X21
	0x01CB54D8 MOV X2, X31
	0x01CB54DC BL 0x30310C4
	0x01CB54E0 CBZ X0, 0x1CB552C
	0x01CB54E4 MOV X1, X31
	0x01CB54E8 BL 0x3028CC0
	0x01CB54EC LDR X8, [X19 + 0x40]
	0x01CB54F0 STR W0, [X19 + 0x48]
	0x01CB54F4 CBZ X8, 0x1CB552C
	0x01CB54F8 LDR X8, [X8 + 0x20]
	0x01CB54FC CBZ X8, 0x1CB5514
	0x01CB5500 LDP W2, W1, [X19 + 0x20]
	0x01CB5504 LDR X9, [X8 + 0x18]
	0x01CB5508 LDR X0, [X8 + 0x40]
	0x01CB550C LDR X3, [X8 + 0x28]
	0x01CB5510 BLR X9
	0x01CB5514 MOV X0, X31
	0x01CB5518 BL 0x3AA47CC
	0x01CB551C STR S0, [X19 + 0x4C]
	0x01CB5520 LDP X20, X19, [X31 + 0x10]
	0x01CB5524 LDP X30, X21, [X31], #0x20
	0x01CB5528 RET
	0x01CB552C BL 0x1B6EA1C
	0x01CB5530 LDR X8, [X0 + 0x20]
	0x01CB5534 CBZ X8, 0x1CB5548
	0x01CB5538 LDR X4, [X8 + 0x18]
	0x01CB553C LDR X0, [X8 + 0x40]
	0x01CB5540 LDR X3, [X8 + 0x28]
	0x01CB5544 BR X4
	0x01CB5548 RET
	0x01CB554C MOV X1, X31
	0x01CB5550 B 0x3A9EEE4
	0x01CB5554 STR D8, [X31 - 0x30]!
	0x01CB5558 STP X30, X21, [X31 + 0x10]
	0x01CB555C STP X20, X19, [X31 + 0x20]
	0x01CB5560 ADRP X21, 0x256E000
	0x01CB5564 ADRP X20, 0x2298000
	0x01CB5568 LDRB W8, [X21 + 0x4E0]
	0x01CB556C LDR X20, [X20 + 0x478]
	0x01CB5570 MOV V8.16B, V0.16B
	0x01CB5574 MOV X19, X0
	0x01CB5578 TBNZ X8, 0x0, 0x1CB559C
	0x01CB557C ADRP X0, 0x2299000
	0x01CB5580 LDR X0, [X0 + 0x6A0]
	0x01CB5584 BL 0x1B6E7F0
	0x01CB5588 ADRP X0, 0x2298000
	0x01CB558C LDR X0, [X0 + 0x478]
	0x01CB5590 BL 0x1B6E7F0
	0x01CB5594 MOVZ W8, 0x1
	0x01CB5598 STRB W8, [X21 + 0x4E0]
	0x01CB559C LDR X0, [X20]
	0x01CB55A0 LDR X20, [X19 + 0x30]
	0x01CB55A4 LDR W8, [X0 + 0xE0]
	0x01CB55A8 CBNZ W8, 0x1CB55B0
	0x01CB55AC BL 0x1B6E8F8
	0x01CB55B0 MOV X0, X20
	0x01CB55B4 MOV X1, X31
	0x01CB55B8 MOV X2, X31
	0x01CB55BC BL 0x3AA0AF0
	0x01CB55C0 TBZ X0, 0x0, 0x1CB55F8
	0x01CB55C4 ADRP X8, 0x2299000
	0x01CB55C8 LDR X8, [X8 + 0x6A0]
	0x01CB55CC LDR W19, [X19 + 0x48]
	0x01CB55D0 LDR X0, [X8]
	0x01CB55D4 LDR W8, [X0 + 0xE0]
	0x01CB55D8 CBNZ W8, 0x1CB55E0
	0x01CB55DC BL 0x1B6E8F8
	0x01CB55E0 MOV W0, W19
	0x01CB55E4 LDP X20, X19, [X31 + 0x20]
	0x01CB55E8 LDP X30, X21, [X31 + 0x10]
	0x01CB55EC MOV X1, X31
	0x01CB55F0 LDR V8, [X31], #0x30
	0x01CB55F4 B 0x301675C
	0x01CB55F8 LDR X0, [X19 + 0x30]
	0x01CB55FC CBZ X0, 0x1CB5644
	0x01CB5600 ADRP X8, 0xFFFFFFFFFEDF4000
	0x01CB5604 ADRP X9, 0xFFFFFFFFFEDF4000
	0x01CB5608 LDR V2, [X8 + 0xCE8]
	0x01CB560C LDR V3, [X9 + 0xBC4]
	0x01CB5610 FMOV S1, 1
	0x01CB5614 FMIN S1, S8, S1
	0x01CB5618 LDP X20, X19, [X31 + 0x20]
	0x01CB561C LDP X30, X21, [X31 + 0x10]
	0x01CB5620 FMUL S1, S1, S2
	0x01CB5624 FCMP S8, 0x0
	0x01CB5628 FADD S1, S1, S3
	0x01CB562C FMOV S0, W31
	0x01CB5630 FCSEL S1, S1, S3, PL
	0x01CB5634 FMOV S2, W31
	0x01CB5638 MOV X1, X31
	0x01CB563C LDR V8, [X31], #0x30
	0x01CB5640 B 0x3AA6D0C
	0x01CB5644 BL 0x1B6EA1C
	0x01CB5648 STP X30, X21, [X31 - 0x20]!
	0x01CB564C STP X20, X19, [X31 + 0x10]
	0x01CB5650 ADRP X21, 0x256E000
	0x01CB5654 ADRP X20, 0x2298000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x256F000
	012 Move X21, 0x229A000
	013 Move W8, [X20+1231]
	014 Move X21, [X21+3536]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x229A000
	021 Move X0, [X0+3544]
	022 Call 0x1B6F7F0
	023 Move X0, 0x229A000
	024 Move X0, [X0+3536]
	025 Call 0x1B6F7F0
	026 Move X0, 0x229A000
	027 Move X0, [X0+2136]
	028 Call 0x1B6F7F0
	029 Move X0, 0x2299000
	030 Move X0, [X0+1144]
	031 Call 0x1B6F7F0
	032 Move W8, 1
	033 Move [X20+1231], W8
	034 Move X0, [X21]
	035 Move W1, 12
	036 Call 0x1B6F868
	037 Move [X19+88], X0
	038 Compare X0, 0
	039 JumpIfEqual {101}
	040 Move X23, 0x2299000
	041 Move X24, 0x229A000
	042 Move X25, 0x229A000
	043 Move X23, [X23+1144]
	044 Move X24, [X24+2136]
	045 Move X25, [X25+3544]
	046 Move X20, X0
	047 Move W26, 4
	048 NotImplemented "Instruction LDRSW not yet implemented."
	049 Subtract X27, X26, 4
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, [X19+32]
	052 Compare X0, 0
	053 JumpIfEqual {101}
	054 Move X1, X31
	055 Call Component.get_gameObject, X0
	056 Move X8, [X19+56]
	057 Compare X8, 0
	058 JumpIfEqual {101}
	059 Move X21, X0
	060 Move X0, X8
	061 Move X1, X31
	062 Call Component.get_transform, X0
	063 Move X8, [X23]
	064 Move X22, X0
	065 Move W9, [X8+224]
	066 Compare W9, 0
	067 JumpIfNotEqual {70}
	068 Move X0, X8
	069 Call 0x1B6F8F8
	070 Move X2, [X24]
	071 Move X0, X21
	072 Move X1, X22
	073 Call 0x2115E50, X0, X1
	074 Compare X0, 0
	075 JumpIfEqual {101}
	076 Move X1, [X25]
	077 Call 0x20CFEF0, X0
	078 Move X21, X0
	079 Compare X0, 0
	080 JumpIfEqual {87}
	081 Move X8, [X20]
	082 Move X0, X21
	083 Move X1, [X8+64]
	084 Call 0x1B6F8FC
	085 Compare X0, 0
	086 JumpIfEqual {114}
	087 Move W8, [X20+24]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move [X20], X21
	090 Move X8, [X19+88]
	091 Compare X8, 0
	092 JumpIfEqual {101}
	093 Move W9, [X8+24]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X1, [X8]
	096 Call MapView.DeactivateMapIcon, X0, X1
	097 Move X20, [X19+88]
	098 Add X26, X26, 1
	099 Compare X20, 0
	100 JumpIfNotEqual {48}
	101 Call 0x1B6FA1C
	102 Move X20, [X31+64]
	103 Move X19, [X31+72]
	104 Move X22, [X31+48]
	105 Move X21, [X31+56]
	106 Move X24, [X31+32]
	107 Move X23, [X31+40]
	108 Move X26, [X31+16]
	109 Move X25, [X31+24]
	110 Move X30, [X31+80]
	111 Move X27, [X31+88]
	112 Return 
	113 Call 0x1B6FA24
	114 Call 0x1B6FA40
	115 Move X1, X31
	116 Call 0x1B6F8E8

Method: System.Void SetupMobIconPool()

Disassembly:
	0x01CB51CC BL 0x1B6E7AC
	0x01CB51D0 LDR X30, [X31 + 0x10]
	0x01CB51D4 ADD X31, X31, 0x20
	0x01CB51D8 RET
	0x01CB51DC STR X30, [X31 - 0x10]!
	0x01CB51E0 MOV X0, X1
	0x01CB51E4 MOV X1, X31
	0x01CB51E8 BL 0x1B6E7B0
	0x01CB51EC CBZ X0, 0x1CB5200
	0x01CB51F0 BL 0x1B6E904
	0x01CB51F4 LDRB W0, [X0]
	0x01CB51F8 LDR X30, [X31], #0x10
	0x01CB51FC RET
	0x01CB5200 BL 0x1B6EA1C
	0x01CB5204 STP X30, X21, [X31 - 0x20]!
	0x01CB5208 STP X20, X19, [X31 + 0x10]
	0x01CB520C ADRP X21, 0x256E000
	0x01CB5210 ADRP X20, 0x2299000
	0x01CB5214 LDRB W8, [X21 + 0x4DD]
	0x01CB5218 LDR X20, [X20 + 0x6A0]
	0x01CB521C MOV X19, X0
	0x01CB5220 TBNZ X8, 0x0, 0x1CB5238
	0x01CB5224 ADRP X0, 0x2299000
	0x01CB5228 LDR X0, [X0 + 0x6A0]
	0x01CB522C BL 0x1B6E7F0
	0x01CB5230 MOVZ W8, 0x1
	0x01CB5234 STRB W8, [X21 + 0x4DD]
	0x01CB5238 LDR X0, [X20]
	0x01CB523C LDR W19, [X19 + 0x48]
	0x01CB5240 LDR W8, [X0 + 0xE0]
	0x01CB5244 CBNZ W8, 0x1CB524C
	0x01CB5248 BL 0x1B6E8F8
	0x01CB524C MOV W0, W19
	0x01CB5250 LDP X20, X19, [X31 + 0x10]
	0x01CB5254 MOV X1, X31
	0x01CB5258 LDP X30, X21, [X31], #0x20
	0x01CB525C B 0x301675C
	0x01CB5260 STR X30, [X31 - 0x30]!
	0x01CB5264 STP X22, X21, [X31 + 0x10]
	0x01CB5268 STP X20, X19, [X31 + 0x20]
	0x01CB526C ADRP X21, 0x256E000
	0x01CB5270 LDRB W8, [X21 + 0x4DE]
	0x01CB5274 MOV X20, X1
	0x01CB5278 MOV X19, X0
	0x01CB527C TBNZ X8, 0x0, 0x1CB52A0
	0x01CB5280 ADRP X0, 0x2299000
	0x01CB5284 LDR X0, [X0 + 0xE48]
	0x01CB5288 BL 0x1B6E7F0
	0x01CB528C ADRP X0, 0x2298000
	0x01CB5290 LDR X0, [X0 + 0x478]
	0x01CB5294 BL 0x1B6E7F0
	0x01CB5298 MOVZ W8, 0x1
	0x01CB529C STRB W8, [X21 + 0x4DE]
	0x01CB52A0 CBZ X20, 0x1CB5354
	0x01CB52A4 ADRP X22, 0x2298000
	0x01CB52A8 LDR X22, [X22 + 0x478]
	0x01CB52AC MOV X0, X20
	0x01CB52B0 MOV X1, X31
	0x01CB52B4 BL 0x3AF6430
	0x01CB52B8 LDR X8, [X22]
	0x01CB52BC MOV X21, X0
	0x01CB52C0 LDR W9, [X8 + 0xE0]
	0x01CB52C4 CBNZ W9, 0x1CB52D0
	0x01CB52C8 MOV X0, X8
	0x01CB52CC BL 0x1B6E8F8
	0x01CB52D0 MOV X0, X21
	0x01CB52D4 MOV X1, X31
	0x01CB52D8 MOV X2, X31
	0x01CB52DC BL 0x3AA0AF0
	0x01CB52E0 TBNZ X0, 0x0, 0x1CB5344
	0x01CB52E4 MOV X0, X20
	0x01CB52E8 MOV X1, X31
	0x01CB52EC BL 0x3A9B0C0
	0x01CB52F0 CBZ X0, 0x1CB5354
	0x01CB52F4 ADRP X8, 0x2299000
	0x01CB52F8 LDR X8, [X8 + 0xE48]
	0x01CB52FC LDR X1, [X8]
	0x01CB5300 BL 0x20CEEF0
	0x01CB5304 LDR X8, [X22]
	0x01CB5308 MOV X20, X0
	0x01CB530C LDR W9, [X8 + 0xE0]
	0x01CB5310 CBNZ W9, 0x1CB531C
	0x01CB5314 MOV X0, X8
	0x01CB5318 BL 0x1B6E8F8
	0x01CB531C MOV X0, X20
	0x01CB5320 MOV X1, X31
	0x01CB5324 MOV X2, X31
	0x01CB5328 BL 0x3A9D6EC
	0x01CB532C TBZ X0, 0x0, 0x1CB5344
	0x01CB5330 MOV X0, X19
	0x01CB5334 LDP X20, X19, [X31 + 0x20]
	0x01CB5338 LDP X22, X21, [X31 + 0x10]
	0x01CB533C LDR X30, [X31], #0x30
	0x01CB5340 B 0x1CB5358
	0x01CB5344 LDP X20, X19, [X31 + 0x20]
	0x01CB5348 LDP X22, X21, [X31 + 0x10]
	0x01CB534C LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x256F000
	012 Move X21, 0x229A000
	013 Move W8, [X20+1232]
	014 Move X21, [X21+3536]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x229A000
	021 Move X0, [X0+3544]
	022 Call 0x1B6F7F0
	023 Move X0, 0x229A000
	024 Move X0, [X0+3536]
	025 Call 0x1B6F7F0
	026 Move X0, 0x229A000
	027 Move X0, [X0+2136]
	028 Call 0x1B6F7F0
	029 Move X0, 0x2299000
	030 Move X0, [X0+1144]
	031 Call 0x1B6F7F0
	032 Move W8, 1
	033 Move [X20+1232], W8
	034 Move X0, [X21]
	035 Move W1, 15
	036 Call 0x1B6F868
	037 Move [X19+96], X0
	038 Compare X0, 0
	039 JumpIfEqual {101}
	040 Move X23, 0x2299000
	041 Move X24, 0x229A000
	042 Move X25, 0x229A000
	043 Move X23, [X23+1144]
	044 Move X24, [X24+2136]
	045 Move X25, [X25+3544]
	046 Move X20, X0
	047 Move W26, 4
	048 NotImplemented "Instruction LDRSW not yet implemented."
	049 Subtract X27, X26, 4
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, [X19+40]
	052 Compare X0, 0
	053 JumpIfEqual {101}
	054 Move X1, X31
	055 Call Component.get_gameObject, X0
	056 Move X8, [X19+56]
	057 Compare X8, 0
	058 JumpIfEqual {101}
	059 Move X21, X0
	060 Move X0, X8
	061 Move X1, X31
	062 Call Component.get_transform, X0
	063 Move X8, [X23]
	064 Move X22, X0
	065 Move W9, [X8+224]
	066 Compare W9, 0
	067 JumpIfNotEqual {70}
	068 Move X0, X8
	069 Call 0x1B6F8F8
	070 Move X2, [X24]
	071 Move X0, X21
	072 Move X1, X22
	073 Call 0x2115E50, X0, X1
	074 Compare X0, 0
	075 JumpIfEqual {101}
	076 Move X1, [X25]
	077 Call 0x20CFEF0, X0
	078 Move X21, X0
	079 Compare X0, 0
	080 JumpIfEqual {87}
	081 Move X8, [X20]
	082 Move X0, X21
	083 Move X1, [X8+64]
	084 Call 0x1B6F8FC
	085 Compare X0, 0
	086 JumpIfEqual {114}
	087 Move W8, [X20+24]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move [X20], X21
	090 Move X8, [X19+96]
	091 Compare X8, 0
	092 JumpIfEqual {101}
	093 Move W9, [X8+24]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X1, [X8]
	096 Call MapView.DeactivateMapIcon, X0, X1
	097 Move X20, [X19+96]
	098 Add X26, X26, 1
	099 Compare X20, 0
	100 JumpIfNotEqual {48}
	101 Call 0x1B6FA1C
	102 Move X20, [X31+64]
	103 Move X19, [X31+72]
	104 Move X22, [X31+48]
	105 Move X21, [X31+56]
	106 Move X24, [X31+32]
	107 Move X23, [X31+40]
	108 Move X26, [X31+16]
	109 Move X25, [X31+24]
	110 Move X30, [X31+80]
	111 Move X27, [X31+88]
	112 Return 
	113 Call 0x1B6FA24
	114 Call 0x1B6FA40
	115 Move X1, X31
	116 Call 0x1B6F8E8

Method: System.Void SetupLootIconPool()

Disassembly:
	0x01CB5350 RET
	0x01CB5354 BL 0x1B6EA1C
	0x01CB5358 STP X30, X21, [X31 - 0x20]!
	0x01CB535C STP X20, X19, [X31 + 0x10]
	0x01CB5360 ADRP X20, 0x256E000
	0x01CB5364 LDRB W8, [X20 + 0x4DF]
	0x01CB5368 MOV X19, X0
	0x01CB536C TBNZ X8, 0x0, 0x1CB53B4
	0x01CB5370 ADRP X0, 0x2299000
	0x01CB5374 LDR X0, [X0 + 0x6C8]
	0x01CB5378 BL 0x1B6E7F0
	0x01CB537C ADRP X0, 0x2299000
	0x01CB5380 LDR X0, [X0 + 0x170]
	0x01CB5384 BL 0x1B6E7F0
	0x01CB5388 ADRP X0, 0x2299000
	0x01CB538C LDR X0, [X0 + 0x6A0]
	0x01CB5390 BL 0x1B6E7F0
	0x01CB5394 ADRP X0, 0x2299000
	0x01CB5398 LDR X0, [X0 + 0xE50]
	0x01CB539C BL 0x1B6E7F0
	0x01CB53A0 ADRP X0, 0x2299000
	0x01CB53A4 LDR X0, [X0 + 0xE58]
	0x01CB53A8 BL 0x1B6E7F0
	0x01CB53AC MOVZ W8, 0x1
	0x01CB53B0 STRB W8, [X20 + 0x4DF]
	0x01CB53B4 MOV X0, X31
	0x01CB53B8 BL 0x3AA47CC
	0x01CB53BC LDR V1, [X19 + 0x4C]
	0x01CB53C0 FSUB S0, S0, S1
	0x01CB53C4 FMOV S1, 0.25
	0x01CB53C8 FCMP S0, S1
	0x01CB53CC B.MI 0x1CB5520
	0x01CB53D0 LDR X20, [X19 + 0x38]
	0x01CB53D4 MOV X0, X19
	0x01CB53D8 MOV X1, X31
	0x01CB53DC BL 0x3A9B084
	0x01CB53E0 CBZ X0, 0x1CB552C
	0x01CB53E4 MOV X1, X31
	0x01CB53E8 BL 0x3AA7658
	0x01CB53EC CBZ X20, 0x1CB552C
	0x01CB53F0 FMOV S3, 1
	0x01CB53F4 MOVZ W1, 0x1
	0x01CB53F8 MOV X0, X20
	0x01CB53FC MOV X2, X31
	0x01CB5400 BL 0x1CC35DC
	0x01CB5404 ADRP X8, 0x2299000
	0x01CB5408 LDR X8, [X8 + 0x6A0]
	0x01CB540C LDR W20, [X19 + 0x48]
	0x01CB5410 LDR X0, [X8]
	0x01CB5414 LDR W8, [X0 + 0xE0]
	0x01CB5418 CBNZ W8, 0x1CB5420
	0x01CB541C BL 0x1B6E8F8
	0x01CB5420 MOV W0, W20
	0x01CB5424 MOV X1, X31
	0x01CB5428 BL 0x301675C
	0x01CB542C ADRP X8, 0xFFFFFFFFFEDF4000
	0x01CB5430 LDR V2, [X8 + 0xE20]
	0x01CB5434 FMOV S0, W31
	0x01CB5438 FMOV S1, 1
	0x01CB543C MOV X0, X31
	0x01CB5440 BL 0x301B3D8
	0x01CB5444 CBZ X0, 0x1CB552C
	0x01CB5448 MOV X1, X31
	0x01CB544C BL 0x302ED48
	0x01CB5450 ADRP X8, 0x2299000
	0x01CB5454 LDR X8, [X8 + 0x6C8]
	0x01CB5458 MOV X20, X0
	0x01CB545C LDR X8, [X8]
	0x01CB5460 MOV X0, X8
	0x01CB5464 BL 0x1B6EA0C
	0x01CB5468 ADRP X8, 0x2299000
	0x01CB546C LDR X8, [X8 + 0xE50]
	0x01CB5470 MOV X1, X19
	0x01CB5474 MOV X3, X31
	0x01CB5478 MOV X21, X0
	0x01CB547C LDR X2, [X8]
	0x01CB5480 BL 0x27EE464
	0x01CB5484 CBZ X20, 0x1CB552C
	0x01CB5488 MOV X0, X20
	0x01CB548C MOV X1, X21
	0x01CB5490 MOV X2, X31
	0x01CB5494 BL 0x303115C
	0x01CB5498 ADRP X8, 0x2299000
	0x01CB549C LDR X8, [X8 + 0x170]
	0x01CB54A0 MOV X20, X0
	0x01CB54A4 LDR X8, [X8]
	0x01CB54A8 MOV X0, X8
	0x01CB54AC BL 0x1B6EA0C
	0x01CB54B0 ADRP X8, 0x2299000
	0x01CB54B4 LDR X8, [X8 + 0xE58]
	0x01CB54B8 MOV X1, X19
	0x01CB54BC MOV X3, X31
	0x01CB54C0 MOV X21, X0
	0x01CB54C4 LDR X2, [X8]
	0x01CB54C8 BL 0x317DB24
	0x01CB54CC CBZ X20, 0x1CB552C
	0x01CB54D0 MOV X0, X20

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x256F000
	012 Move X21, 0x229A000
	013 Move W8, [X20+1233]
	014 Move X21, [X21+3536]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x229A000
	021 Move X0, [X0+3544]
	022 Call 0x1B6F7F0
	023 Move X0, 0x229A000
	024 Move X0, [X0+3536]
	025 Call 0x1B6F7F0
	026 Move X0, 0x229A000
	027 Move X0, [X0+2136]
	028 Call 0x1B6F7F0
	029 Move X0, 0x2299000
	030 Move X0, [X0+1144]
	031 Call 0x1B6F7F0
	032 Move W8, 1
	033 Move [X20+1233], W8
	034 Move X0, [X21]
	035 Move W1, 40
	036 Call 0x1B6F868
	037 Move [X19+104], X0
	038 Compare X0, 0
	039 JumpIfEqual {101}
	040 Move X23, 0x2299000
	041 Move X24, 0x229A000
	042 Move X25, 0x229A000
	043 Move X23, [X23+1144]
	044 Move X24, [X24+2136]
	045 Move X25, [X25+3544]
	046 Move X20, X0
	047 Move W26, 4
	048 NotImplemented "Instruction LDRSW not yet implemented."
	049 Subtract X27, X26, 4
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, [X19+48]
	052 Compare X0, 0
	053 JumpIfEqual {101}
	054 Move X1, X31
	055 Call Component.get_gameObject, X0
	056 Move X8, [X19+56]
	057 Compare X8, 0
	058 JumpIfEqual {101}
	059 Move X21, X0
	060 Move X0, X8
	061 Move X1, X31
	062 Call Component.get_transform, X0
	063 Move X8, [X23]
	064 Move X22, X0
	065 Move W9, [X8+224]
	066 Compare W9, 0
	067 JumpIfNotEqual {70}
	068 Move X0, X8
	069 Call 0x1B6F8F8
	070 Move X2, [X24]
	071 Move X0, X21
	072 Move X1, X22
	073 Call 0x2115E50, X0, X1
	074 Compare X0, 0
	075 JumpIfEqual {101}
	076 Move X1, [X25]
	077 Call 0x20CFEF0, X0
	078 Move X21, X0
	079 Compare X0, 0
	080 JumpIfEqual {87}
	081 Move X8, [X20]
	082 Move X0, X21
	083 Move X1, [X8+64]
	084 Call 0x1B6F8FC
	085 Compare X0, 0
	086 JumpIfEqual {114}
	087 Move W8, [X20+24]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move [X20], X21
	090 Move X8, [X19+104]
	091 Compare X8, 0
	092 JumpIfEqual {101}
	093 Move W9, [X8+24]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X1, [X8]
	096 Call MapView.DeactivateMapIcon, X0, X1
	097 Move X20, [X19+104]
	098 Add X26, X26, 1
	099 Compare X20, 0
	100 JumpIfNotEqual {48}
	101 Call 0x1B6FA1C
	102 Move X20, [X31+64]
	103 Move X19, [X31+72]
	104 Move X22, [X31+48]
	105 Move X21, [X31+56]
	106 Move X24, [X31+32]
	107 Move X23, [X31+40]
	108 Move X26, [X31+16]
	109 Move X25, [X31+24]
	110 Move X30, [X31+80]
	111 Move X27, [X31+88]
	112 Return 
	113 Call 0x1B6FA24
	114 Call 0x1B6FA40
	115 Move X1, X31
	116 Call 0x1B6F8E8

Method: System.Void DeactivateMapIcon(AnimalCompany.MapIconView icon)

Disassembly:
	0x01CB5658 LDRB W8, [X21 + 0x4E1]
	0x01CB565C LDR X20, [X20 + 0x478]
	0x01CB5660 MOV X19, X0
	0x01CB5664 TBNZ X8, 0x0, 0x1CB567C
	0x01CB5668 ADRP X0, 0x2298000
	0x01CB566C LDR X0, [X0 + 0x478]
	0x01CB5670 BL 0x1B6E7F0
	0x01CB5674 MOVZ W8, 0x1
	0x01CB5678 STRB W8, [X21 + 0x4E1]
	0x01CB567C LDR X0, [X20]
	0x01CB5680 LDR X20, [X19 + 0x30]
	0x01CB5684 LDR W8, [X0 + 0xE0]
	0x01CB5688 CBNZ W8, 0x1CB5690
	0x01CB568C BL 0x1B6E8F8
	0x01CB5690 MOV X0, X20
	0x01CB5694 MOV X1, X31
	0x01CB5698 MOV X2, X31
	0x01CB569C BL 0x3AA0AF0
	0x01CB56A0 TBZ X0, 0x0, 0x1CB56B0
	0x01CB56A4 LDP X20, X19, [X31 + 0x10]
	0x01CB56A8 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {31}
	005 Move X19, X1
	006 Move X0, X1
	007 Move X1, X31
	008 Call Component.get_gameObject, X0
	009 Compare X0, 0
	010 JumpIfEqual {31}
	011 Move X1, X31
	012 Call GameObject.get_activeSelf, X0
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {28}
	017 Move X0, X19
	018 Move X1, X31
	019 Call Component.get_gameObject, X0
	020 Compare X0, 0
	021 JumpIfEqual {31}
	022 Move W1, W31
	023 Move X2, X31
	024 Move X30, [X31+16]
	025 Move X19, [X31+24]
	026 Call GameObject.SetActive, X0, X1
	027 Return 
	028 Move X30, [X31+16]
	029 Move X19, [X31+24]
	030 Return 
	031 Call 0x1B6FA1C

Method: System.Void Update()

Disassembly:
	0x01CB56AC RET
	0x01CB56B0 ADRP X20, 0x256E000
	0x01CB56B4 LDRB W8, [X20 + 0x43F]
	0x01CB56B8 LDR X19, [X19 + 0x30]
	0x01CB56BC CBNZ W8, 0x1CB56D4
	0x01CB56C0 ADRP X0, 0x2298000
	0x01CB56C4 LDR X0, [X0 + 0x480]
	0x01CB56C8 BL 0x1B6E7F0
	0x01CB56CC MOVZ W8, 0x1
	0x01CB56D0 STRB W8, [X20 + 0x43F]
	0x01CB56D4 CBZ X19, 0x1CB5704
	0x01CB56D8 ADRP X8, 0x2298000
	0x01CB56DC LDR X8, [X8 + 0x480]
	0x01CB56E0 MOV X0, X19
	0x01CB56E4 LDP X20, X19, [X31 + 0x10]
	0x01CB56E8 MOV X1, X31
	0x01CB56EC LDR X8, [X8]
	0x01CB56F0 LDR X8, [X8 + 0xB8]
	0x01CB56F4 LDP S1, S2, [X8 + 0x4]
	0x01CB56F8 LDR V0, [X8]
	0x01CB56FC LDP X30, X21, [X31], #0x20
	0x01CB5700 B 0x3AA6D0C
	0x01CB5704 BL 0x1B6EA1C
	0x01CB5708 MOV X1, X31
	0x01CB570C B 0x3A9EEE4
	0x01CB5710 MOV X1, X31
	0x01CB5714 B 0x3A9EEE4
	0x01CB5718 SUB X31, X31, 0xD0
	0x01CB571C STP D13, D12, [X31 + 0x80]
	0x01CB5720 STP D11, D10, [X31 + 0x90]
	0x01CB5724 STP D9, D8, [X31 + 0xA0]
	0x01CB5728 STP X30, X21, [X31 + 0xB0]
	0x01CB572C STP X20, X19, [X31 + 0xC0]
	0x01CB5730 MOVI V0.2D, 0x0
	0x01CB5734 STP V0, V0, [X31 + 0x60]
	0x01CB5738 STP V0, V0, [X31 + 0x40]
	0x01CB573C LDUR V10, [X0 + 0x3C]
	0x01CB5740 LDR V9, [X0 + 0x44]
	0x01CB5744 MOV X19, X0
	0x01CB5748 MOVZ W0, 0x77
	0x01CB574C MOV X1, X31
	0x01CB5750 BL 0x3AECD78
	0x01CB5754 FMOV V8.2S, 0x0
	0x01CB5758 TBZ X0, 0x0, 0x1CB57C4
	0x01CB575C ADRP X20, 0x256E000
	0x01CB5760 LDRB W8, [X20 + 0x50E]
	0x01CB5764 CBNZ W8, 0x1CB577C
	0x01CB5768 ADRP X0, 0x2298000
	0x01CB576C LDR X0, [X0 + 0x480]
	0x01CB5770 BL 0x1B6E7F0
	0x01CB5774 MOVZ W8, 0x1
	0x01CB5778 STRB W8, [X20 + 0x50E]
	0x01CB577C ADRP X20, 0x2298000

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x256F000
	007 Move X20, 0x2299000
	008 Move W8, [X21+1234]
	009 Move X20, [X20+1144]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2299000
	016 Move X0, [X0+1144]
	017 Call 0x1B6F7F0
	018 Move W8, 1
	019 Move [X21+1234], W8
	020 Move X0, [X20]
	021 Move X20, [X19+72]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1B6F8F8
	026 Move X0, X20
	027 Move X1, X31
	028 Move X2, X31
	029 Call Object.op_Inequality, X0, X1
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {64}
	034 Move X20, [X19+72]
	035 Move X0, X19
	036 Move X1, X31
	037 Call Component.get_transform, X0
	038 Compare X0, 0
	039 JumpIfEqual {70}
	040 Move X1, X31
	041 Call Transform.get_position, X0
	042 Move X0, X19
	043 Move X1, X31
	044 Move V8, V0
	045 Call Component.get_transform, X0
	046 Compare X0, 0
	047 JumpIfEqual {70}
	048 Move X1, X31
	049 Call Transform.get_position, X0
	050 Compare X20, 0
	051 JumpIfEqual {70}
	052 Move X0, X20
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X30, [X31+16]
	056 Move X21, [X31+24]
	057 Move S0, -2
	058 Multiply S1, S2, S0
	059 Multiply S0, S8, S0
	060 Move X1, X31
	061 Move V8, [X31+48]
	062 Call RectTransform.set_anchoredPosition, X0, X1
	063 Return 
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X30, [X31+16]
	067 Move X21, [X31+24]
	068 Move V8, [X31+48]
	069 Return 
	070 Call 0x1B6FA1C

Method: System.Void UpdateLootLocations(System.Collections.Generic.IEnumerable`1<AnimalCompany.GrabbableItem> items)

Disassembly:
	0x01CB4B94 BL 0x3A6A728
	0x01CB4B98 LDR X8, [X23]
	0x01CB4B9C MOV X1, X0
	0x01CB4BA0 MOV X2, X31
	0x01CB4BA4 MOV X0, X8
	0x01CB4BA8 BL 0x3084780
	0x01CB4BAC CBZ X19, 0x1CB4BD8
	0x01CB4BB0 LDR X8, [X19]
	0x01CB4BB4 MOV X1, X0
	0x01CB4BB8 MOV X0, X19
	0x01CB4BBC LDP X20, X19, [X31 + 0x30]
	0x01CB4BC0 LDR X3, [X8 + 0x558]
	0x01CB4BC4 LDR X2, [X8 + 0x560]
	0x01CB4BC8 LDP X22, X21, [X31 + 0x20]
	0x01CB4BCC LDP X24, X23, [X31 + 0x10]
	0x01CB4BD0 LDR X30, [X31], #0x40
	0x01CB4BD4 BR X3
	0x01CB4BD8 BL 0x1B6EA1C
	0x01CB4BDC BL 0x1B6EA24
	0x01CB4BE0 BL 0x1B6EA40
	0x01CB4BE4 MOV X1, X31
	0x01CB4BE8 BL 0x1B6E8E8
	0x01CB4BEC MOV X0, X21
	0x01CB4BF0 MOV X1, X22
	0x01CB4BF4 BL 0x1B6ECDC
	0x01CB4BF8 STP X30, X23, [X31 - 0x30]!
	0x01CB4BFC STP X22, X21, [X31 + 0x10]
	0x01CB4C00 STP X20, X19, [X31 + 0x20]
	0x01CB4C04 ADRP X22, 0x256F000
	0x01CB4C08 ADRP X23, 0x2299000
	0x01CB4C0C ADRP X20, 0x229A000
	0x01CB4C10 ADRP X21, 0x2299000
	0x01CB4C14 LDRB W8, [X22 + 0x4D7]
	0x01CB4C18 LDR X23, [X23 + 0xB90]
	0x01CB4C1C LDR X20, [X20 + 0xE18]
	0x01CB4C20 LDR X21, [X21 + 0x4E8]
	0x01CB4C24 MOV X19, X0
	0x01CB4C28 TBNZ X8, 0x0, 0x1CB4C58
	0x01CB4C2C ADRP X0, 0x2299000
	0x01CB4C30 LDR X0, [X0 + 0x4E8]
	0x01CB4C34 BL 0x1B6E7F0
	0x01CB4C38 ADRP X0, 0x2299000
	0x01CB4C3C LDR X0, [X0 + 0xB90]
	0x01CB4C40 BL 0x1B6E7F0
	0x01CB4C44 ADRP X0, 0x229A000
	0x01CB4C48 LDR X0, [X0 + 0xE18]
	0x01CB4C4C BL 0x1B6E7F0
	0x01CB4C50 MOVZ W8, 0x1
	0x01CB4C54 STRB W8, [X22 + 0x4D7]
	0x01CB4C58 LDR X0, [X23]
	0x01CB4C5C BL 0x1B6EA0C
	0x01CB4C60 LDR X2, [X20]
	0x01CB4C64 MOV X1, X19
	0x01CB4C68 MOV X3, X31
	0x01CB4C6C MOV X20, X0
	0x01CB4C70 BL 0x342E500
	0x01CB4C74 LDR X0, [X21]
	0x01CB4C78 LDR W8, [X0 + 0xE0]
	0x01CB4C7C CBNZ W8, 0x1CB4C84
	0x01CB4C80 BL 0x1B6E8F8
	0x01CB4C84 MOV X0, X20
	0x01CB4C88 LDP X20, X19, [X31 + 0x20]
	0x01CB4C8C LDP X22, X21, [X31 + 0x10]
	0x01CB4C90 MOV X1, X31
	0x01CB4C94 LDP X30, X23, [X31], #0x30
	0x01CB4C98 B 0x1C8D564
	0x01CB4C9C STR X30, [X31 - 0x20]!
	0x01CB4CA0 STP X20, X19, [X31 + 0x10]
	0x01CB4CA4 ADRP X20, 0x256F000
	0x01CB4CA8 ADRP X19, 0x2299000
	0x01CB4CAC LDRB W8, [X20 + 0x4D8]
	0x01CB4CB0 LDR X19, [X19 + 0x4E8]
	0x01CB4CB4 TBNZ X8, 0x0, 0x1CB4D08
	0x01CB4CB8 ADRP X0, 0x2299000
	0x01CB4CBC LDR X0, [X0 + 0x4E8]
	0x01CB4CC0 BL 0x1B6E7F0
	0x01CB4CC4 ADRP X0, 0x229A000
	0x01CB4CC8 LDR X0, [X0 + 0xE28]
	0x01CB4CCC BL 0x1B6E7F0
	0x01CB4CD0 ADRP X0, 0x2299000
	0x01CB4CD4 LDR X0, [X0 + 0xD00]
	0x01CB4CD8 BL 0x1B6E7F0
	0x01CB4CDC ADRP X0, 0x229A000
	0x01CB4CE0 LDR X0, [X0 + 0xE10]
	0x01CB4CE4 BL 0x1B6E7F0
	0x01CB4CE8 ADRP X0, 0x229A000
	0x01CB4CEC LDR X0, [X0 + 0xE30]
	0x01CB4CF0 BL 0x1B6E7F0
	0x01CB4CF4 ADRP X0, 0x229A000
	0x01CB4CF8 LDR X0, [X0 + 0xE38]
	0x01CB4CFC BL 0x1B6E7F0
	0x01CB4D00 MOVZ W8, 0x1
	0x01CB4D04 STRB W8, [X20 + 0x4D8]
	0x01CB4D08 LDR X0, [X19]
	0x01CB4D0C LDR W8, [X0 + 0xE0]
	0x01CB4D10 CBNZ W8, 0x1CB4D18
	0x01CB4D14 BL 0x1B6E8F8
	0x01CB4D18 ADRP X20, 0x256F000
	0x01CB4D1C LDRB W8, [X20 + 0x443]
	0x01CB4D20 CBNZ W8, 0x1CB4D38
	0x01CB4D24 ADRP X0, 0x2299000
	0x01CB4D28 LDR X0, [X0 + 0x4E8]
	0x01CB4D2C BL 0x1B6E7F0
	0x01CB4D30 MOVZ W8, 0x1
	0x01CB4D34 STRB W8, [X20 + 0x443]
	0x01CB4D38 LDR X0, [X19]
	0x01CB4D3C LDR W8, [X0 + 0xE0]
	0x01CB4D40 CBNZ W8, 0x1CB4D4C
	0x01CB4D44 BL 0x1B6E8F8
	0x01CB4D48 LDR X0, [X19]
	0x01CB4D4C LDR X8, [X0 + 0xB8]
	0x01CB4D50 LDR X8, [X8]
	0x01CB4D54 CBZ X8, 0x1CB4E48
	0x01CB4D58 LDR X8, [X8 + 0xB0]
	0x01CB4D5C CBZ X8, 0x1CB4E48
	0x01CB4D60 ADRP X9, 0x2299000
	0x01CB4D64 LDR X9, [X9 + 0xD00]
	0x01CB4D68 LDR X0, [X8 + 0x48]
	0x01CB4D6C LDR X1, [X9]
	0x01CB4D70 BL 0x24B9848
	0x01CB4D74 TBZ X0, 0x0, 0x1CB4DE8
	0x01CB4D78 LDR X0, [X19]
	0x01CB4D7C LDR W8, [X0 + 0xE0]
	0x01CB4D80 CBNZ W8, 0x1CB4D88
	0x01CB4D84 BL 0x1B6E8F8
	0x01CB4D88 LDRB W8, [X20 + 0x443]
	0x01CB4D8C CBNZ W8, 0x1CB4DA4
	0x01CB4D90 ADRP X0, 0x2299000
	0x01CB4D94 LDR X0, [X0 + 0x4E8]
	0x01CB4D98 BL 0x1B6E7F0
	0x01CB4D9C MOVZ W8, 0x1
	0x01CB4DA0 STRB W8, [X20 + 0x443]
	0x01CB4DA4 LDR X0, [X19]
	0x01CB4DA8 LDR W8, [X0 + 0xE0]
	0x01CB4DAC CBNZ W8, 0x1CB4DB8
	0x01CB4DB0 BL 0x1B6E8F8
	0x01CB4DB4 LDR X0, [X19]
	0x01CB4DB8 LDR X8, [X0 + 0xB8]
	0x01CB4DBC LDR X8, [X8]
	0x01CB4DC0 CBZ X8, 0x1CB4E48
	0x01CB4DC4 LDR X8, [X8 + 0xB0]
	0x01CB4DC8 CBZ X8, 0x1CB4E48
	0x01CB4DCC LDR X0, [X8 + 0x50]
	0x01CB4DD0 ADRP X8, 0x229A000
	0x01CB4DD4 LDR X8, [X8 + 0xE28]
	0x01CB4DD8 LDR X1, [X8]
	0x01CB4DDC BL 0x24BFDD4
	0x01CB4DE0 MOV X1, X0
	0x01CB4DE4 B 0x1CB4DF4
	0x01CB4DE8 ADRP X8, 0x229A000
	0x01CB4DEC LDR X8, [X8 + 0xE30]
	0x01CB4DF0 LDR X1, [X8]
	0x01CB4DF4 ADRP X8, 0x229A000
	0x01CB4DF8 LDR X8, [X8 + 0xE10]
	0x01CB4DFC LDR X8, [X8]
	0x01CB4E00 LDR X8, [X8 + 0xB8]
	0x01CB4E04 LDR X8, [X8]
	0x01CB4E08 CBZ X8, 0x1CB4E48
	0x01CB4E0C ADRP X9, 0x229A000
	0x01CB4E10 LDR X9, [X9 + 0xE38]
	0x01CB4E14 LDR X19, [X8 + 0x38]
	0x01CB4E18 MOV X2, X31
	0x01CB4E1C LDR X0, [X9]
	0x01CB4E20 BL 0x3084780
	0x01CB4E24 CBZ X19, 0x1CB4E48
	0x01CB4E28 LDR X8, [X19]
	0x01CB4E2C MOV X1, X0
	0x01CB4E30 MOV X0, X19
	0x01CB4E34 LDP X20, X19, [X31 + 0x10]
	0x01CB4E38 LDR X3, [X8 + 0x558]
	0x01CB4E3C LDR X2, [X8 + 0x560]
	0x01CB4E40 LDR X30, [X31], #0x20
	0x01CB4E44 BR X3
	0x01CB4E48 BL 0x1B6EA1C
	0x01CB4E4C STR X30, [X31 - 0x30]!
	0x01CB4E50 STP X22, X21, [X31 + 0x10]
	0x01CB4E54 STP X20, X19, [X31 + 0x20]
	0x01CB4E58 ADRP X22, 0x256F000
	0x01CB4E5C LDRB W8, [X22 + 0x4D9]
	0x01CB4E60 MOV W20, W2
	0x01CB4E64 MOV W21, W1
	0x01CB4E68 MOV X19, X0
	0x01CB4E6C TBNZ X8, 0x0, 0x1CB4E90
	0x01CB4E70 ADRP X0, 0x229A000
	0x01CB4E74 LDR X0, [X0 + 0xE40]
	0x01CB4E78 BL 0x1B6E7F0
	0x01CB4E7C ADRP X0, 0x2299000
	0x01CB4E80 LDR X0, [X0 + 0x818]
	0x01CB4E84 BL 0x1B6E7F0
	0x01CB4E88 MOVZ W8, 0x1
	0x01CB4E8C STRB W8, [X22 + 0x4D9]
	0x01CB4E90 SUB W8, W21, 0x30
	0x01CB4E94 CMP W8, 0xA
	0x01CB4E98 B.CC 0x1CB4ECC
	0x01CB4E9C SUB W8, W21, 0x61
	0x01CB4EA0 CMP W8, 0x19
	0x01CB4EA4 B.LS 0x1CB4ECC
	0x01CB4EA8 CMP W20, 0x2
	0x01CB4EAC B.EQ 0x1CB4F14
	0x01CB4EB0 CMP W20, 0x4
	0x01CB4EB4 B.EQ 0x1CB4F04
	0x01CB4EB8 CMP W20, 0x3
	0x01CB4EBC B.NE 0x1CB4F1C
	0x01CB4EC0 MOV X0, X19
	0x01CB4EC4 BL 0x1CB4F70
	0x01CB4EC8 B 0x1CB4F1C
	0x01CB4ECC ADRP X8, 0x229A000
	0x01CB4ED0 LDR X8, [X8 + 0xE40]
	0x01CB4ED4 STRH W21, [X31 + 0xC]
	0x01CB4ED8 LDR X0, [X8]
	0x01CB4EDC LDR W8, [X0 + 0xE0]
	0x01CB4EE0 CBNZ W8, 0x1CB4EE8
	0x01CB4EE4 BL 0x1B6E8F8
	0x01CB4EE8 ADD X0, X31, 0xC
	0x01CB4EEC MOV X1, X31
	0x01CB4EF0 BL 0x31737D0
	0x01CB4EF4 MOV X1, X0
	0x01CB4EF8 MOV X0, X19
	0x01CB4EFC BL 0x1CB4F2C
	0x01CB4F00 B 0x1CB4F1C
	0x01CB4F04 ADRP X8, 0x2299000
	0x01CB4F08 LDR X8, [X8 + 0x818]
	0x01CB4F0C LDR X8, [X8]
	0x01CB4F10 STR X8, [X19 + 0x28]
	0x01CB4F14 MOV X0, X19
	0x01CB4F18 BL 0x1CB4FB4
	0x01CB4F1C LDP X20, X19, [X31 + 0x20]
	0x01CB4F20 LDP X22, X21, [X31 + 0x10]
	0x01CB4F24 LDR X30, [X31], #0x30
	0x01CB4F28 RET
	0x01CB4F2C STP X30, X19, [X31 - 0x10]!
	0x01CB4F30 MOV X19, X0
	0x01CB4F34 LDR X0, [X0 + 0x28]
	0x01CB4F38 CBZ X0, 0x1CB4F6C
	0x01CB4F3C LDR W8, [X0 + 0x10]
	0x01CB4F40 LDR W9, [X19 + 0x20]
	0x01CB4F44 CMP W8, W9
	0x01CB4F48 B.GE 0x1CB4F64
	0x01CB4F4C MOV X2, X31
	0x01CB4F50 BL 0x3084780
	0x01CB4F54 STR X0, [X19 + 0x28]
	0x01CB4F58 MOV X0, X19
	0x01CB4F5C LDP X30, X19, [X31], #0x10
	0x01CB4F60 B 0x1CB5048
	0x01CB4F64 LDP X30, X19, [X31], #0x10
	0x01CB4F68 RET
	0x01CB4F6C BL 0x1B6EA1C
	0x01CB4F70 STP X30, X19, [X31 - 0x10]!
	0x01CB4F74 MOV X19, X0
	0x01CB4F78 LDR X0, [X0 + 0x28]
	0x01CB4F7C CBZ X0, 0x1CB4FB0
	0x01CB4F80 LDR W8, [X0 + 0x10]
	0x01CB4F84 SUBS W2, W8, 0x1
	0x01CB4F88 B.LT 0x1CB4FA8
	0x01CB4F8C MOV W1, W31
	0x01CB4F90 MOV X3, X31
	0x01CB4F94 BL 0x3091C2C
	0x01CB4F98 STR X0, [X19 + 0x28]
	0x01CB4F9C MOV X0, X19
	0x01CB4FA0 LDP X30, X19, [X31], #0x10
	0x01CB4FA4 B 0x1CB5048
	0x01CB4FA8 LDP X30, X19, [X31], #0x10
	0x01CB4FAC RET
	0x01CB4FB0 BL 0x1B6EA1C
	0x01CB4FB4 STP X30, X21, [X31 - 0x20]!
	0x01CB4FB8 STP X20, X19, [X31 + 0x10]
	0x01CB4FBC ADRP X20, 0x256F000
	0x01CB4FC0 ADRP X21, 0x229A000
	0x01CB4FC4 LDRB W8, [X20 + 0x4DA]
	0x01CB4FC8 LDR X21, [X21 + 0xE10]
	0x01CB4FCC MOV X19, X0
	0x01CB4FD0 TBNZ X8, 0x0, 0x1CB4FF4
	0x01CB4FD4 ADRP X0, 0x229A000
	0x01CB4FD8 LDR X0, [X0 + 0xE10]
	0x01CB4FDC BL 0x1B6E7F0
	0x01CB4FE0 ADRP X0, 0x2299000
	0x01CB4FE4 LDR X0, [X0 + 0x818]
	0x01CB4FE8 BL 0x1B6E7F0
	0x01CB4FEC MOVZ W8, 0x1
	0x01CB4FF0 STRB W8, [X20 + 0x4DA]
	0x01CB4FF4 LDR X8, [X21]
	0x01CB4FF8 LDR X8, [X8 + 0xB8]
	0x01CB4FFC LDR X8, [X8 + 0x8]
	0x01CB5000 CBZ X8, 0x1CB503C
	0x01CB5004 LDR X1, [X19 + 0x28]
	0x01CB5008 LDR X9, [X8 + 0x18]
	0x01CB500C LDR X0, [X8 + 0x40]
	0x01CB5010 LDR X2, [X8 + 0x28]
	0x01CB5014 BLR X9
	0x01CB5018 TBZ X0, 0x0, 0x1CB503C
	0x01CB501C ADRP X8, 0x2298000
	0x01CB5020 LDR X8, [X8 + 0x818]
	0x01CB5024 MOV X0, X19
	0x01CB5028 LDR X8, [X8]
	0x01CB502C STR X8, [X19 + 0x28]
	0x01CB5030 LDP X20, X19, [X31 + 0x10]
	0x01CB5034 LDP X30, X21, [X31], #0x20
	0x01CB5038 B 0x1CB5048
	0x01CB503C LDP X20, X19, [X31 + 0x10]
	0x01CB5040 LDP X30, X21, [X31], #0x20
	0x01CB5044 RET
	0x01CB5048 STP X30, X21, [X31 - 0x20]!
	0x01CB504C STP X20, X19, [X31 + 0x10]
	0x01CB5050 ADRP X19, 0x256E000
	0x01CB5054 ADRP X21, 0x2298000
	0x01CB5058 LDRB W8, [X19 + 0x4DB]
	0x01CB505C LDR X21, [X21 + 0xBD8]
	0x01CB5060 MOV X20, X0
	0x01CB5064 TBNZ X8, 0x0, 0x1CB507C
	0x01CB5068 ADRP X0, 0x2298000
	0x01CB506C LDR X0, [X0 + 0xBD8]
	0x01CB5070 BL 0x1B6E7F0
	0x01CB5074 MOVZ W8, 0x1
	0x01CB5078 STRB W8, [X19 + 0x4DB]
	0x01CB507C LDP X0, X19, [X20 + 0x28]
	0x01CB5080 LDR X1, [X21]
	0x01CB5084 MOV X2, X31
	0x01CB5088 BL 0x3084780
	0x01CB508C CBZ X19, 0x1CB50B0
	0x01CB5090 LDR X8, [X19]
	0x01CB5094 MOV X1, X0
	0x01CB5098 MOV X0, X19
	0x01CB509C LDP X20, X19, [X31 + 0x10]
	0x01CB50A0 LDR X3, [X8 + 0x558]
	0x01CB50A4 LDR X2, [X8 + 0x560]
	0x01CB50A8 LDP X30, X21, [X31], #0x20
	0x01CB50AC BR X3
	0x01CB50B0 BL 0x1B6EA1C
	0x01CB50B4 STP X30, X21, [X31 - 0x20]!
	0x01CB50B8 STP X20, X19, [X31 + 0x10]
	0x01CB50BC ADRP X21, 0x256E000
	0x01CB50C0 ADRP X20, 0x2298000
	0x01CB50C4 LDRB W8, [X21 + 0x4DC]
	0x01CB50C8 LDR X20, [X20 + 0x818]
	0x01CB50CC MOV X19, X0
	0x01CB50D0 TBNZ X8, 0x0, 0x1CB50E8

ISIL:
	001 Move [X31-128], D12
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X27
	008 Move [X31+64], X26
	009 Move [X31+72], X25
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Move X21, 0x2570000
	017 Move W8, [X21+1235]
	018 Move X20, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0x229B000
	025 Move X0, [X0+1136]
	026 Call 0x1B6F7F0
	027 Move X0, 0x229B000
	028 Move X0, [X0+3512]
	029 Call 0x1B6F7F0
	030 Move X0, 0x229B000
	031 Move X0, [X0+3520]
	032 Call 0x1B6F7F0
	033 Move X0, 0x229B000
	034 Move X0, [X0+1144]
	035 Call 0x1B6F7F0
	036 Move W8, 1
	037 Move [X21+1235], W8
	038 Compare X20, 0
	039 JumpIfEqual {271}
	040 Move X10, 0x229B000
	041 Move X8, [X20]
	042 Move X10, [X10+3512]
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move X1, [X10]
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move X0, X20
	054 Move W2, W31
	055 Call 0x1BB5284
	056 NotImplemented "Instruction LDRSW not yet implemented."
	057 Add X8, X8, X9
	058 Add X0, X8, 312
	059 Move X8, [X0]
	060 Move X1, [X0+8]
	061 Move X24, 0x229B000
	062 Move X24, [X24+1136]
	063 Move X0, X20
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move X20, X0
	066 Compare X0, 0
	067 JumpIfEqual {297}
	068 Move X25, 0x229B000
	069 Move X26, 0x229B000
	070 Move X25, [X25+1144]
	071 Move X26, [X26+3520]
	072 Move W23, W31
	073 Move X27, W23
	074 Move X8, [X20]
	075 Move X1, [X25]
	076 NotImplemented "Instruction LDRH not yet implemented."
	077 Compare X9, 0
	078 JumpIfEqual {85}
	079 Move X10, [X8+176]
	080 Add X10, X10, 8
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Subtract X9, X9, 1
	084 Add X10, X10, 16
	085 Move X0, X20
	086 Move W2, W31
	087 Call 0x1BB5284
	088 NotImplemented "Instruction LDRSW not yet implemented."
	089 Add X8, X8, X9
	090 Add X0, X8, 312
	091 Move X8, [X0]
	092 Move X1, [X0+8]
	093 Move X0, X20
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfNotEqual {227}
	099 Move X8, [X20]
	100 Move X1, [X26]
	101 NotImplemented "Instruction LDRH not yet implemented."
	102 Compare X9, 0
	103 JumpIfEqual {110}
	104 Move X10, [X8+176]
	105 Add X10, X10, 8
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Subtract X9, X9, 1
	109 Add X10, X10, 16
	110 Move X0, X20
	111 Move W2, W31
	112 Call 0x1BB5284
	113 NotImplemented "Instruction LDRSW not yet implemented."
	114 Add X8, X8, X9
	115 Add X0, X8, 312
	116 Move X8, [X0]
	117 Move X1, [X0+8]
	118 Move X0, X20
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move X8, [X19+104]
	121 Compare X8, 0
	122 JumpIfEqual {289}
	123 Move W8, [X8+24]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X22, X0
	126 Compare X0, 0
	127 JumpIfEqual {290}
	128 Move X0, X22
	129 Move X1, X31
	130 Call GrabbableItem.get_isAttached, X0
	131 Move TEMP, X0
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfEqual {74}
	135 Move X0, X22
	136 Move X1, X31
	137 Call GrabbableItem.get_isVisible, X0
	138 Move TEMP, X0
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfNotEqual {74}
	142 Move X8, [X19+104]
	143 Compare X8, 0
	144 JumpIfEqual {292}
	145 Move W9, [X8+24]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Add X8, X8, X27
	148 Move X21, [X8+32]
	149 Move X0, X22
	150 Move X1, X31
	151 Call Component.get_transform, X0
	152 Compare X0, 0
	153 JumpIfEqual {291}
	154 Move X1, X31
	155 Call Transform.get_position, X0
	156 Move W8, [X19+80]
	157 Move V8, V0
	158 Move V9, V2
	159 Compare W8, 0
	160 JumpIfEqual {170}
	161 Move X0, X19
	162 Move X1, X31
	163 Call Component.get_transform, X0
	164 Compare X0, 0
	165 JumpIfEqual {296}
	166 Move X1, X31
	167 Call Transform.get_position, X0
	168 Subtract S8, S8, S0
	169 Subtract S9, S9, S2
	170 Move X0, X22
	171 Move X1, X31
	172 Call Component.get_transform, X0
	173 Compare X0, 0
	174 JumpIfEqual {293}
	175 Move X1, X31
	176 Call Transform.get_position, X0
	177 Move V10, V0
	178 Move V11, V1
	179 Move V12, V2
	180 Move X0, X19
	181 Move X1, X31
	182 Call Component.get_transform, X0
	183 Compare X0, 0
	184 JumpIfEqual {295}
	185 Move X1, X31
	186 Call Transform.get_position, X0
	187 Move V3, [X19+84]
	188 Subtract S0, S10, S0
	189 Subtract S1, S11, S1
	190 Subtract S2, S12, S2
	191 Multiply S0, S0, S0
	192 Multiply S1, S1, S1
	193 Add S0, S0, S1
	194 Multiply S1, S2, S2
	195 Add S0, S1, S0
	196 Multiply S1, S3, S3
	197 NotImplemented "Instruction FCMP not yet implemented."
	198 Compare X21, 0
	199 JumpIfEqual {300}
	200 Move X0, [X21+48]
	201 Compare X0, 0
	202 JumpIfEqual {302}
	203 Add S1, S9, S9
	204 Add S0, S8, S8
	205 Move X1, X31
	206 Call RectTransform.set_anchoredPosition, X0, X1
	207 Move X0, X21
	208 Move X1, X31
	209 Call Component.get_gameObject, X0
	210 Compare X0, 0
	211 JumpIfEqual {301}
	212 Move X1, X31
	213 Call GameObject.get_activeSelf, X0
	214 Move TEMP, X0
	215 And TEMP, TEMP, 1
	216 Compare TEMP, 1
	217 JumpIfEqual {226}
	218 Move X0, X21
	219 Move X1, X31
	220 Call Component.get_gameObject, X0
	221 Compare X0, 0
	222 JumpIfEqual {303}
	223 Move W1, 1
	224 Move X2, X31
	225 Call GameObject.SetActive, X0, X1
	226 Add W23, W23, 1
	227 Move X21, X31
	228 Move W22, 5
	229 Compare X20, 0
	230 JumpIfEqual {252}
	231 Move X8, [X20]
	232 Move X1, [X24]
	233 NotImplemented "Instruction LDRH not yet implemented."
	234 Compare X9, 0
	235 JumpIfEqual {242}
	236 Move X10, [X8+176]
	237 Add X10, X10, 8
	238 NotImplemented "Instruction LDUR not yet implemented."
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Subtract X9, X9, 1
	241 Add X10, X10, 16
	242 Move X0, X20
	243 Move W2, W31
	244 Call 0x1BB5284
	245 NotImplemented "Instruction LDRSW not yet implemented."
	246 Add X8, X8, X9
	247 Add X0, X8, 312
	248 Move X8, [X0]
	249 Move X1, [X0+8]
	250 Move X0, X20
	251 NotImplemented "Instruction BLR not yet implemented."
	252 Compare X21, 0
	253 JumpIfNotEqual {298}
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Compare W22, 0
	256 JumpIfNotEqual {272}
	257 Move X8, [X19+104]
	258 Compare X8, 0
	259 JumpIfEqual {271}
	260 Move X20, W23
	261 Move X9, [X8+24]
	262 NotImplemented "Instruction CMP not yet implemented."
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Add X8, X8, X20
	265 Move X1, [X8+32]
	266 Call MapView.DeactivateMapIcon, X0, X1
	267 Move X8, [X19+104]
	268 Add X20, X20, 1
	269 Compare X8, 0
	270 JumpIfNotEqual {261}
	271 Call 0x1B6FA1C
	272 Move X20, [X31+112]
	273 Move X19, [X31+120]
	274 Move X22, [X31+96]
	275 Move X21, [X31+104]
	276 Move X24, [X31+80]
	277 Move X23, [X31+88]
	278 Move X26, [X31+64]
	279 Move X25, [X31+72]
	280 Move X30, [X31+48]
	281 Move X27, [X31+56]
	282 Move D9, [X31+32]
	283 Move D8, [X31+40]
	284 Move D11, [X31+16]
	285 Move D10, [X31+24]
	286 Move V12, [X31+128]
	287 Return 
	288 Call 0x1B6FA24
	289 Call 0x1B6FA1C
	290 Call 0x1B6FA1C
	291 Call 0x1B6FA1C
	292 Call 0x1B6FA1C
	293 Call 0x1B6FA1C
	294 Call 0x1B6FA24
	295 Call 0x1B6FA1C
	296 Call 0x1B6FA1C
	297 Call 0x1B6FA1C
	298 Move X0, X21
	299 Call 0x1B6FA14
	300 Call 0x1B6FA1C
	301 Call 0x1B6FA1C
	302 Call 0x1B6FA1C
	303 Call 0x1B6FA1C
	304 Move W23, W31
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Call 0x3D1A840
	307 Move X21, [X0]
	308 Call 0x3D1A850
	309 Move W22, W31
	310 Compare X20, 0
	311 JumpIfNotEqual {231}
	312 Move X19, X0
	313 Move X21, X31
	314 Move X19, X0
	315 Compare X20, 0
	316 JumpIfEqual {338}
	317 Move X8, [X20]
	318 Move X1, [X24]
	319 NotImplemented "Instruction LDRH not yet implemented."
	320 Compare X9, 0
	321 JumpIfEqual {328}
	322 Move X10, [X8+176]
	323 Add X10, X10, 8
	324 NotImplemented "Instruction LDUR not yet implemented."
	325 NotImplemented "Instruction CMP not yet implemented."
	326 Subtract X9, X9, 1
	327 Add X10, X10, 16
	328 Move X0, X20
	329 Move W2, W31
	330 Call 0x1BB5284
	331 NotImplemented "Instruction LDRSW not yet implemented."
	332 Add X8, X8, X9
	333 Add X0, X8, 312
	334 Move X8, [X0]
	335 Move X1, [X0+8]
	336 Move X0, X20
	337 NotImplemented "Instruction BLR not yet implemented."
	338 Compare X21, 0
	339 JumpIfNotEqual {342}
	340 Move X0, X19
	341 Call 0x1C8518C
	342 Move X0, X21
	343 Call 0x1B6FA14
	344 Call 0x18F56A8

Method: System.Void UpdateMobLocations(System.Collections.Generic.IEnumerable`1<AnimalCompany.MobController> mobs, System.Collections.Generic.IEnumerable`1<AnimalCompany.PrototypeOne.MobControllerMine> mines)

Disassembly:
	0x01CB4190 AND W1, W19, 0x1
	0x01CB4194 MOV X2, X31
	0x01CB4198 LDP X30, X19, [X31], #0x10
	0x01CB419C B 0x3A9D9A8
	0x01CB41A0 BL 0x1B6EA1C
	0x01CB41A4 MOV X1, X31
	0x01CB41A8 B 0x3A9EEE4
	0x01CB41AC STP X30, X19, [X31 - 0x10]!
	0x01CB41B0 MOV X19, X0
	0x01CB41B4 BL 0x1CB41CC
	0x01CB41B8 MOV X0, X19
	0x01CB41BC BL 0x1CB4350
	0x01CB41C0 MOV X0, X19
	0x01CB41C4 LDP X30, X19, [X31], #0x10
	0x01CB41C8 B 0x1CB44D4
	0x01CB41CC STP X30, X27, [X31 - 0x50]!
	0x01CB41D0 STP X26, X25, [X31 + 0x10]
	0x01CB41D4 STP X24, X23, [X31 + 0x20]
	0x01CB41D8 STP X22, X21, [X31 + 0x30]
	0x01CB41DC STP X20, X19, [X31 + 0x40]
	0x01CB41E0 ADRP X20, 0x256F000
	0x01CB41E4 ADRP X21, 0x229A000
	0x01CB41E8 LDRB W8, [X20 + 0x4D0]
	0x01CB41EC LDR X21, [X21 + 0xDD0]
	0x01CB41F0 MOV X19, X0
	0x01CB41F4 TBNZ X8, 0x0, 0x1CB4230
	0x01CB41F8 ADRP X0, 0x229A000
	0x01CB41FC LDR X0, [X0 + 0xDD8]
	0x01CB4200 BL 0x1B6E7F0
	0x01CB4204 ADRP X0, 0x229A000
	0x01CB4208 LDR X0, [X0 + 0xDD0]
	0x01CB420C BL 0x1B6E7F0
	0x01CB4210 ADRP X0, 0x229A000
	0x01CB4214 LDR X0, [X0 + 0x858]
	0x01CB4218 BL 0x1B6E7F0
	0x01CB421C ADRP X0, 0x2299000
	0x01CB4220 LDR X0, [X0 + 0x478]
	0x01CB4224 BL 0x1B6E7F0
	0x01CB4228 MOVZ W8, 0x1
	0x01CB422C STRB W8, [X20 + 0x4D0]
	0x01CB4230 LDR X0, [X21]
	0x01CB4234 MOVZ W1, 0xF
	0x01CB4238 BL 0x1B6E868
	0x01CB423C STR X0, [X19 + 0x60]
	0x01CB4240 CBZ X0, 0x1CB4324
	0x01CB4244 ADRP X23, 0x2299000
	0x01CB4248 ADRP X24, 0x229A000
	0x01CB424C ADRP X25, 0x229A000
	0x01CB4250 LDR X23, [X23 + 0x478]
	0x01CB4254 LDR X24, [X24 + 0x858]
	0x01CB4258 LDR X25, [X25 + 0xDD8]
	0x01CB425C MOV X20, X0
	0x01CB4260 MOVZ W26, 0x4
	0x01CB4264 LDRSW X8, [X20 + 0x18]
	0x01CB4268 SUB X27, X26, 0x4
	0x01CB426C CMP X27, X8
	0x01CB4270 B.GE 0x1CB4328
	0x01CB4274 LDR X0, [X19 + 0x28]
	0x01CB4278 CBZ X0, 0x1CB4324
	0x01CB427C MOV X1, X31
	0x01CB4280 BL 0x3A9B0C0
	0x01CB4284 LDR X8, [X19 + 0x38]
	0x01CB4288 CBZ X8, 0x1CB4324
	0x01CB428C MOV X21, X0
	0x01CB4290 MOV X0, X8
	0x01CB4294 MOV X1, X31
	0x01CB4298 BL 0x3A9B084
	0x01CB429C LDR X8, [X23]
	0x01CB42A0 MOV X22, X0
	0x01CB42A4 LDR W9, [X8 + 0xE0]
	0x01CB42A8 CBNZ W9, 0x1CB42B4
	0x01CB42AC MOV X0, X8
	0x01CB42B0 BL 0x1B6E8F8
	0x01CB42B4 LDR X2, [X24]
	0x01CB42B8 MOV X0, X21
	0x01CB42BC MOV X1, X22
	0x01CB42C0 BL 0x2114E50
	0x01CB42C4 CBZ X0, 0x1CB4324
	0x01CB42C8 LDR X1, [X25]
	0x01CB42CC BL 0x20CEEF0
	0x01CB42D0 MOV X21, X0
	0x01CB42D4 CBZ X0, 0x1CB42EC
	0x01CB42D8 LDR X8, [X20]
	0x01CB42DC MOV X0, X21
	0x01CB42E0 LDR X1, [X8 + 0x40]
	0x01CB42E4 BL 0x1B6E8FC
	0x01CB42E8 CBZ X0, 0x1CB4344
	0x01CB42EC LDR W8, [X20 + 0x18]
	0x01CB42F0 CMP X27, X8
	0x01CB42F4 B.CS 0x1CB4340
	0x01CB42F8 STR X21, [X20, X26, LSL #3]
	0x01CB42FC LDR X8, [X19 + 0x60]
	0x01CB4300 CBZ X8, 0x1CB4324
	0x01CB4304 LDR W9, [X8 + 0x18]
	0x01CB4308 CMP X27, X9
	0x01CB430C B.CS 0x1CB4340
	0x01CB4310 LDR X1, [X8, X26, LSL #3]
	0x01CB4314 BL 0x1CB4658
	0x01CB4318 LDR X20, [X19 + 0x60]
	0x01CB431C ADD X26, X26, 0x1
	0x01CB4320 CBNZ X20, 0x1CB4264
	0x01CB4324 BL 0x1B6EA1C
	0x01CB4328 LDP X20, X19, [X31 + 0x40]
	0x01CB432C LDP X22, X21, [X31 + 0x30]
	0x01CB4330 LDP X24, X23, [X31 + 0x20]
	0x01CB4334 LDP X26, X25, [X31 + 0x10]
	0x01CB4338 LDP X30, X27, [X31], #0x50
	0x01CB433C RET
	0x01CB4340 BL 0x1B6EA24
	0x01CB4344 BL 0x1B6EA40
	0x01CB4348 MOV X1, X31
	0x01CB434C BL 0x1B6E8E8
	0x01CB4350 STP X30, X27, [X31 - 0x50]!
	0x01CB4354 STP X26, X25, [X31 + 0x10]
	0x01CB4358 STP X24, X23, [X31 + 0x20]
	0x01CB435C STP X22, X21, [X31 + 0x30]
	0x01CB4360 STP X20, X19, [X31 + 0x40]
	0x01CB4364 ADRP X20, 0x256F000
	0x01CB4368 ADRP X21, 0x229A000
	0x01CB436C LDRB W8, [X20 + 0x4D1]
	0x01CB4370 LDR X21, [X21 + 0xDD0]
	0x01CB4374 MOV X19, X0
	0x01CB4378 TBNZ X8, 0x0, 0x1CB43B4
	0x01CB437C ADRP X0, 0x229A000
	0x01CB4380 LDR X0, [X0 + 0xDD8]
	0x01CB4384 BL 0x1B6E7F0
	0x01CB4388 ADRP X0, 0x229A000
	0x01CB438C LDR X0, [X0 + 0xDD0]
	0x01CB4390 BL 0x1B6E7F0
	0x01CB4394 ADRP X0, 0x229A000
	0x01CB4398 LDR X0, [X0 + 0x858]
	0x01CB439C BL 0x1B6E7F0
	0x01CB43A0 ADRP X0, 0x2299000
	0x01CB43A4 LDR X0, [X0 + 0x478]
	0x01CB43A8 BL 0x1B6E7F0
	0x01CB43AC MOVZ W8, 0x1
	0x01CB43B0 STRB W8, [X20 + 0x4D1]
	0x01CB43B4 LDR X0, [X21]
	0x01CB43B8 MOVZ W1, 0x28
	0x01CB43BC BL 0x1B6E868
	0x01CB43C0 STR X0, [X19 + 0x68]
	0x01CB43C4 CBZ X0, 0x1CB44A8
	0x01CB43C8 ADRP X23, 0x2299000
	0x01CB43CC ADRP X24, 0x229A000
	0x01CB43D0 ADRP X25, 0x229A000
	0x01CB43D4 LDR X23, [X23 + 0x478]
	0x01CB43D8 LDR X24, [X24 + 0x858]
	0x01CB43DC LDR X25, [X25 + 0xDD8]
	0x01CB43E0 MOV X20, X0
	0x01CB43E4 MOVZ W26, 0x4
	0x01CB43E8 LDRSW X8, [X20 + 0x18]
	0x01CB43EC SUB X27, X26, 0x4
	0x01CB43F0 CMP X27, X8
	0x01CB43F4 B.GE 0x1CB44AC
	0x01CB43F8 LDR X0, [X19 + 0x30]
	0x01CB43FC CBZ X0, 0x1CB44A8
	0x01CB4400 MOV X1, X31
	0x01CB4404 BL 0x3A9B0C0
	0x01CB4408 LDR X8, [X19 + 0x38]
	0x01CB440C CBZ X8, 0x1CB44A8
	0x01CB4410 MOV X21, X0
	0x01CB4414 MOV X0, X8
	0x01CB4418 MOV X1, X31
	0x01CB441C BL 0x3A9B084
	0x01CB4420 LDR X8, [X23]
	0x01CB4424 MOV X22, X0
	0x01CB4428 LDR W9, [X8 + 0xE0]
	0x01CB442C CBNZ W9, 0x1CB4438
	0x01CB4430 MOV X0, X8
	0x01CB4434 BL 0x1B6E8F8
	0x01CB4438 LDR X2, [X24]
	0x01CB443C MOV X0, X21
	0x01CB4440 MOV X1, X22
	0x01CB4444 BL 0x2114E50
	0x01CB4448 CBZ X0, 0x1CB44A8
	0x01CB444C LDR X1, [X25]
	0x01CB4450 BL 0x20CEEF0
	0x01CB4454 MOV X21, X0
	0x01CB4458 CBZ X0, 0x1CB4470
	0x01CB445C LDR X8, [X20]
	0x01CB4460 MOV X0, X21
	0x01CB4464 LDR X1, [X8 + 0x40]
	0x01CB4468 BL 0x1B6E8FC
	0x01CB446C CBZ X0, 0x1CB44C8
	0x01CB4470 LDR W8, [X20 + 0x18]
	0x01CB4474 CMP X27, X8
	0x01CB4478 B.CS 0x1CB44C4
	0x01CB447C STR X21, [X20, X26, LSL #3]
	0x01CB4480 LDR X8, [X19 + 0x68]
	0x01CB4484 CBZ X8, 0x1CB44A8
	0x01CB4488 LDR W9, [X8 + 0x18]
	0x01CB448C CMP X27, X9
	0x01CB4490 B.CS 0x1CB44C4
	0x01CB4494 LDR X1, [X8, X26, LSL #3]
	0x01CB4498 BL 0x1CB4658
	0x01CB449C LDR X20, [X19 + 0x68]
	0x01CB44A0 ADD X26, X26, 0x1
	0x01CB44A4 CBNZ X20, 0x1CB43E8
	0x01CB44A8 BL 0x1B6EA1C
	0x01CB44AC LDP X20, X19, [X31 + 0x40]
	0x01CB44B0 LDP X22, X21, [X31 + 0x30]
	0x01CB44B4 LDP X24, X23, [X31 + 0x20]
	0x01CB44B8 LDP X26, X25, [X31 + 0x10]
	0x01CB44BC LDP X30, X27, [X31], #0x50
	0x01CB44C0 RET
	0x01CB44C4 BL 0x1B6EA24
	0x01CB44C8 BL 0x1B6EA40
	0x01CB44CC MOV X1, X31
	0x01CB44D0 BL 0x1B6E8E8
	0x01CB44D4 STP X30, X27, [X31 - 0x50]!
	0x01CB44D8 STP X26, X25, [X31 + 0x10]
	0x01CB44DC STP X24, X23, [X31 + 0x20]
	0x01CB44E0 STP X22, X21, [X31 + 0x30]
	0x01CB44E4 STP X20, X19, [X31 + 0x40]
	0x01CB44E8 ADRP X20, 0x256F000
	0x01CB44EC ADRP X21, 0x229A000
	0x01CB44F0 LDRB W8, [X20 + 0x4CF]
	0x01CB44F4 LDR X21, [X21 + 0xDD0]
	0x01CB44F8 MOV X19, X0
	0x01CB44FC TBNZ X8, 0x0, 0x1CB4538
	0x01CB4500 ADRP X0, 0x229A000
	0x01CB4504 LDR X0, [X0 + 0xDD8]
	0x01CB4508 BL 0x1B6E7F0
	0x01CB450C ADRP X0, 0x229A000
	0x01CB4510 LDR X0, [X0 + 0xDD0]
	0x01CB4514 BL 0x1B6E7F0
	0x01CB4518 ADRP X0, 0x229A000
	0x01CB451C LDR X0, [X0 + 0x858]
	0x01CB4520 BL 0x1B6E7F0
	0x01CB4524 ADRP X0, 0x2299000
	0x01CB4528 LDR X0, [X0 + 0x478]
	0x01CB452C BL 0x1B6E7F0
	0x01CB4530 MOVZ W8, 0x1
	0x01CB4534 STRB W8, [X20 + 0x4CF]
	0x01CB4538 LDR X0, [X21]
	0x01CB453C MOVZ W1, 0xC
	0x01CB4540 BL 0x1B6E868
	0x01CB4544 STR X0, [X19 + 0x58]
	0x01CB4548 CBZ X0, 0x1CB462C
	0x01CB454C ADRP X23, 0x2299000
	0x01CB4550 ADRP X24, 0x229A000
	0x01CB4554 ADRP X25, 0x229A000
	0x01CB4558 LDR X23, [X23 + 0x478]
	0x01CB455C LDR X24, [X24 + 0x858]
	0x01CB4560 LDR X25, [X25 + 0xDD8]
	0x01CB4564 MOV X20, X0
	0x01CB4568 MOVZ W26, 0x4
	0x01CB456C LDRSW X8, [X20 + 0x18]
	0x01CB4570 SUB X27, X26, 0x4
	0x01CB4574 CMP X27, X8
	0x01CB4578 B.GE 0x1CB4630
	0x01CB457C LDR X0, [X19 + 0x20]
	0x01CB4580 CBZ X0, 0x1CB462C
	0x01CB4584 MOV X1, X31
	0x01CB4588 BL 0x3A9B0C0
	0x01CB458C LDR X8, [X19 + 0x38]
	0x01CB4590 CBZ X8, 0x1CB462C
	0x01CB4594 MOV X21, X0
	0x01CB4598 MOV X0, X8
	0x01CB459C MOV X1, X31
	0x01CB45A0 BL 0x3A9B084
	0x01CB45A4 LDR X8, [X23]
	0x01CB45A8 MOV X22, X0
	0x01CB45AC LDR W9, [X8 + 0xE0]
	0x01CB45B0 CBNZ W9, 0x1CB45BC
	0x01CB45B4 MOV X0, X8
	0x01CB45B8 BL 0x1B6E8F8
	0x01CB45BC LDR X2, [X24]
	0x01CB45C0 MOV X0, X21
	0x01CB45C4 MOV X1, X22
	0x01CB45C8 BL 0x2114E50
	0x01CB45CC CBZ X0, 0x1CB462C
	0x01CB45D0 LDR X1, [X25]
	0x01CB45D4 BL 0x20CEEF0
	0x01CB45D8 MOV X21, X0
	0x01CB45DC CBZ X0, 0x1CB45F4
	0x01CB45E0 LDR X8, [X20]
	0x01CB45E4 MOV X0, X21
	0x01CB45E8 LDR X1, [X8 + 0x40]
	0x01CB45EC BL 0x1B6E8FC
	0x01CB45F0 CBZ X0, 0x1CB464C
	0x01CB45F4 LDR W8, [X20 + 0x18]
	0x01CB45F8 CMP X27, X8
	0x01CB45FC B.CS 0x1CB4648
	0x01CB4600 STR X21, [X20, X26, LSL #3]
	0x01CB4604 LDR X8, [X19 + 0x58]
	0x01CB4608 CBZ X8, 0x1CB462C
	0x01CB460C LDR W9, [X8 + 0x18]
	0x01CB4610 CMP X27, X9
	0x01CB4614 B.CS 0x1CB4648
	0x01CB4618 LDR X1, [X8, X26, LSL #3]
	0x01CB461C BL 0x1CB4658
	0x01CB4620 LDR X20, [X19 + 0x58]
	0x01CB4624 ADD X26, X26, 0x1
	0x01CB4628 CBNZ X20, 0x1CB456C
	0x01CB462C BL 0x1B6EA1C
	0x01CB4630 LDP X20, X19, [X31 + 0x40]
	0x01CB4634 LDP X22, X21, [X31 + 0x30]
	0x01CB4638 LDP X24, X23, [X31 + 0x20]
	0x01CB463C LDP X26, X25, [X31 + 0x10]
	0x01CB4640 LDP X30, X27, [X31], #0x50
	0x01CB4644 RET
	0x01CB4648 BL 0x1B6EA24
	0x01CB464C BL 0x1B6EA40
	0x01CB4650 MOV X1, X31
	0x01CB4654 BL 0x1B6E8E8
	0x01CB4658 STP X30, X19, [X31 - 0x10]!
	0x01CB465C CBZ X1, 0x1CB46A8
	0x01CB4660 MOV X19, X1
	0x01CB4664 MOV X0, X1
	0x01CB4668 MOV X1, X31
	0x01CB466C BL 0x3A9B0C0
	0x01CB4670 CBZ X0, 0x1CB46A8
	0x01CB4674 MOV X1, X31
	0x01CB4678 BL 0x3A9D9EC
	0x01CB467C TBZ X0, 0x0, 0x1CB46A0
	0x01CB4680 MOV X0, X19
	0x01CB4684 MOV X1, X31
	0x01CB4688 BL 0x3A9B0C0
	0x01CB468C CBZ X0, 0x1CB46A8
	0x01CB4690 MOV W1, W31
	0x01CB4694 MOV X2, X31
	0x01CB4698 LDP X30, X19, [X31], #0x10
	0x01CB469C B 0x3A9D9A8
	0x01CB46A0 LDP X30, X19, [X31], #0x10
	0x01CB46A4 RET
	0x01CB46A8 BL 0x1B6EA1C
	0x01CB46AC STR D8, [X31 - 0x30]!
	0x01CB46B0 STP X30, X21, [X31 + 0x10]
	0x01CB46B4 STP X20, X19, [X31 + 0x20]
	0x01CB46B8 ADRP X21, 0x256F000
	0x01CB46BC ADRP X20, 0x2299000
	0x01CB46C0 LDRB W8, [X21 + 0x4D2]
	0x01CB46C4 LDR X20, [X20 + 0x478]
	0x01CB46C8 MOV X19, X0
	0x01CB46CC TBNZ X8, 0x0, 0x1CB46E4
	0x01CB46D0 ADRP X0, 0x2299000
	0x01CB46D4 LDR X0, [X0 + 0x478]
	0x01CB46D8 BL 0x1B6E7F0
	0x01CB46DC MOVZ W8, 0x1
	0x01CB46E0 STRB W8, [X21 + 0x4D2]
	0x01CB46E4 LDR X0, [X20]
	0x01CB46E8 LDR X20, [X19 + 0x48]
	0x01CB46EC LDR W8, [X0 + 0xE0]
	0x01CB46F0 CBNZ W8, 0x1CB46F8
	0x01CB46F4 BL 0x1B6E8F8
	0x01CB46F8 MOV X0, X20
	0x01CB46FC MOV X1, X31
	0x01CB4700 MOV X2, X31
	0x01CB4704 BL 0x3A9D6EC
	0x01CB4708 TBZ X0, 0x0, 0x1CB476C
	0x01CB470C LDR X20, [X19 + 0x48]
	0x01CB4710 MOV X0, X19
	0x01CB4714 MOV X1, X31
	0x01CB4718 BL 0x3A9B084
	0x01CB471C CBZ X0, 0x1CB477C
	0x01CB4720 MOV X1, X31
	0x01CB4724 BL 0x3AA7658
	0x01CB4728 MOV X0, X19
	0x01CB472C MOV X1, X31
	0x01CB4730 MOV V8.16B, V0.16B
	0x01CB4734 BL 0x3A9B084
	0x01CB4738 CBZ X0, 0x1CB477C
	0x01CB473C MOV X1, X31
	0x01CB4740 BL 0x3AA7658
	0x01CB4744 CBZ X20, 0x1CB477C
	0x01CB4748 MOV X0, X20
	0x01CB474C LDP X20, X19, [X31 + 0x20]
	0x01CB4750 LDP X30, X21, [X31 + 0x10]
	0x01CB4754 FMOV S0, -2
	0x01CB4758 FMUL S1, S2, S0
	0x01CB475C FMUL S0, S8, S0
	0x01CB4760 MOV X1, X31
	0x01CB4764 LDR V8, [X31], #0x30
	0x01CB4768 B 0x3AA6988
	0x01CB476C LDP X20, X19, [X31 + 0x20]
	0x01CB4770 LDP X30, X21, [X31 + 0x10]
	0x01CB4774 LDR V8, [X31], #0x30
	0x01CB4778 RET
	0x01CB477C BL 0x1B6EA1C
	0x01CB4780 STP X30, X19, [X31 - 0x10]!
	0x01CB4784 LDR X8, [X0 + 0x50]
	0x01CB4788 CBZ X8, 0x1CB4798
	0x01CB478C LDR W0, [X8 + 0x60]
	0x01CB4790 LDP X30, X19, [X31], #0x10
	0x01CB4794 RET
	0x01CB4798 ADRP X0, 0x2299000
	0x01CB479C LDR X0, [X0 + 0x490]
	0x01CB47A0 BL 0x1B6E804
	0x01CB47A4 BL 0x1B6EA0C
	0x01CB47A8 MOV X19, X0
	0x01CB47AC ADRP X0, 0x229A000
	0x01CB47B0 LDR X0, [X0 + 0xDE0]
	0x01CB47B4 BL 0x1B6E804
	0x01CB47B8 MOV X1, X0
	0x01CB47BC MOV X0, X19
	0x01CB47C0 MOV X2, X31
	0x01CB47C4 BL 0x31E7550
	0x01CB47C8 ADRP X0, 0x229A000
	0x01CB47CC LDR X0, [X0 + 0xDE8]
	0x01CB47D0 BL 0x1B6E804
	0x01CB47D4 MOV X1, X0
	0x01CB47D8 MOV X0, X19
	0x01CB47DC BL 0x1B6E8E8
	0x01CB47E0 STP X30, X19, [X31 - 0x10]!
	0x01CB47E4 LDR X8, [X0 + 0x50]
	0x01CB47E8 CBZ X8, 0x1CB4800
	0x01CB47EC LDR W8, [X8 + 0x14]
	0x01CB47F0 CMP W8, 0x0
	0x01CB47F4 CSET W0, NE
	0x01CB47F8 LDP X30, X19, [X31], #0x10
	0x01CB47FC RET
	0x01CB4800 ADRP X0, 0x2299000
	0x01CB4804 LDR X0, [X0 + 0x490]
	0x01CB4808 BL 0x1B6E804
	0x01CB480C BL 0x1B6EA0C
	0x01CB4810 MOV X19, X0
	0x01CB4814 ADRP X0, 0x229A000
	0x01CB4818 LDR X0, [X0 + 0xDF0]
	0x01CB481C BL 0x1B6E804
	0x01CB4820 MOV X1, X0
	0x01CB4824 MOV X0, X19
	0x01CB4828 MOV X2, X31
	0x01CB482C BL 0x31E7550
	0x01CB4830 ADRP X0, 0x229A000
	0x01CB4834 LDR X0, [X0 + 0xDF8]
	0x01CB4838 BL 0x1B6E804
	0x01CB483C MOV X1, X0
	0x01CB4840 MOV X0, X19
	0x01CB4844 BL 0x1B6E8E8
	0x01CB4848 STP X30, X19, [X31 - 0x10]!
	0x01CB484C LDR X8, [X0 + 0x50]
	0x01CB4850 CBZ X8, 0x1CB4864
	0x01CB4854 LDP S0, S1, [X8 + 0x4]
	0x01CB4858 LDP S2, S3, [X8 + 0xC]
	0x01CB485C LDP X30, X19, [X31], #0x10
	0x01CB4860 RET
	0x01CB4864 ADRP X0, 0x2299000
	0x01CB4868 LDR X0, [X0 + 0x490]
	0x01CB486C BL 0x1B6E804
	0x01CB4870 BL 0x1B6EA0C
	0x01CB4874 MOV X19, X0
	0x01CB4878 ADRP X0, 0x229A000
	0x01CB487C LDR X0, [X0 + 0xE00]
	0x01CB4880 BL 0x1B6E804
	0x01CB4884 MOV X1, X0
	0x01CB4888 MOV X0, X19
	0x01CB488C MOV X2, X31
	0x01CB4890 BL 0x31E7550
	0x01CB4894 ADRP X0, 0x229A000
	0x01CB4898 LDR X0, [X0 + 0xE08]
	0x01CB489C BL 0x1B6E804
	0x01CB48A0 MOV X1, X0
	0x01CB48A4 MOV X0, X19
	0x01CB48A8 BL 0x1B6E8E8
	0x01CB48AC MOVZ W8, 0x101
	0x01CB48B0 MOVZ W9, 0x42480000
	0x01CB48B4 MOV X1, X31
	0x01CB48B8 STRH W8, [X0 + 0x50]
	0x01CB48BC STR W9, [X0 + 0x54]
	0x01CB48C0 B 0x3A9EEE4
	0x01CB48C4 STR X30, [X31 - 0x40]!
	0x01CB48C8 STP X24, X23, [X31 + 0x10]
	0x01CB48CC STP X22, X21, [X31 + 0x20]
	0x01CB48D0 STP X20, X19, [X31 + 0x30]
	0x01CB48D4 ADRP X21, 0x256F000
	0x01CB48D8 ADRP X22, 0x229A000
	0x01CB48DC ADRP X20, 0x229A000
	0x01CB48E0 LDRB W8, [X21 + 0x4D6]
	0x01CB48E4 LDR X22, [X22 + 0xE10]
	0x01CB48E8 LDR X20, [X20 + 0x738]
	0x01CB48EC MOV X19, X0
	0x01CB48F0 TBNZ X8, 0x0, 0x1CB4974
	0x01CB48F4 ADRP X0, 0x229A000
	0x01CB48F8 LDR X0, [X0 + 0x740]
	0x01CB48FC BL 0x1B6E7F0
	0x01CB4900 ADRP X0, 0x2299000
	0x01CB4904 LDR X0, [X0 + 0x4E8]
	0x01CB4908 BL 0x1B6E7F0
	0x01CB490C ADRP X0, 0x2299000
	0x01CB4910 LDR X0, [X0 + 0x800]
	0x01CB4914 BL 0x1B6E7F0
	0x01CB4918 ADRP X0, 0x229A000
	0x01CB491C LDR X0, [X0 + 0x738]
	0x01CB4920 BL 0x1B6E7F0
	0x01CB4924 ADRP X0, 0x2299000
	0x01CB4928 LDR X0, [X0 + 0xBA0]
	0x01CB492C BL 0x1B6E7F0
	0x01CB4930 ADRP X0, 0x2299000
	0x01CB4934 LDR X0, [X0 + 0xB90]
	0x01CB4938 BL 0x1B6E7F0
	0x01CB493C ADRP X0, 0x229A000
	0x01CB4940 LDR X0, [X0 + 0xE18]
	0x01CB4944 BL 0x1B6E7F0
	0x01CB4948 ADRP X0, 0x229A000
	0x01CB494C LDR X0, [X0 + 0xE20]
	0x01CB4950 BL 0x1B6E7F0
	0x01CB4954 ADRP X0, 0x229A000
	0x01CB4958 LDR X0, [X0 + 0xE10]
	0x01CB495C BL 0x1B6E7F0
	0x01CB4960 ADRP X0, 0x229A000
	0x01CB4964 LDR X0, [X0 + 0xAF0]
	0x01CB4968 BL 0x1B6E7F0
	0x01CB496C MOVZ W8, 0x1
	0x01CB4970 STRB W8, [X21 + 0x4D6]
	0x01CB4974 LDR X8, [X22]
	0x01CB4978 MOV X0, X19
	0x01CB497C LDR X8, [X8 + 0xB8]
	0x01CB4980 STR X19, [X8]
	0x01CB4984 LDR X1, [X20]
	0x01CB4988 BL 0x208FDE8
	0x01CB498C STR X0, [X19 + 0x48]
	0x01CB4990 CBZ X0, 0x1CB4BD8
	0x01CB4994 ADRP X23, 0x229A000
	0x01CB4998 LDR X23, [X23 + 0x740]
	0x01CB499C MOV X20, X0
	0x01CB49A0 LDR X21, [X0 + 0x20]
	0x01CB49A4 ADRP X22, 0x229A000
	0x01CB49A8 LDR X0, [X23]
	0x01CB49AC LDR X22, [X22 + 0xE20]
	0x01CB49B0 BL 0x1B6EA0C
	0x01CB49B4 LDR X2, [X22]
	0x01CB49B8 MOV X1, X19
	0x01CB49BC MOV X3, X31
	0x01CB49C0 MOV X22, X0
	0x01CB49C4 BL 0x28D58F8
	0x01CB49C8 MOV X0, X21
	0x01CB49CC MOV X1, X22
	0x01CB49D0 MOV X2, X31
	0x01CB49D4 BL 0x322A750
	0x01CB49D8 CBZ X0, 0x1CB4A14
	0x01CB49DC LDR X22, [X23]
	0x01CB49E0 MOV X21, X0
	0x01CB49E4 MOV X1, X22
	0x01CB49E8 BL 0x1B6E8FC
	0x01CB49EC CBZ X0, 0x1CB4BEC
	0x01CB49F0 STR X0, [X20 + 0x20]
	0x01CB49F4 LDR X20, [X23]
	0x01CB49F8 MOV X0, X21
	0x01CB49FC MOV X1, X20
	0x01CB4A00 BL 0x1B6E8FC
	0x01CB4A04 CBNZ X0, 0x1CB4A18
	0x01CB4A08 MOV X0, X21
	0x01CB4A0C MOV X1, X20
	0x01CB4A10 BL 0x1B6ECDC
	0x01CB4A14 STR X31, [X20 + 0x20]
	0x01CB4A18 ADRP X8, 0x2299000
	0x01CB4A1C LDR X8, [X8 + 0xB90]
	0x01CB4A20 ADRP X20, 0x229A000
	0x01CB4A24 ADRP X21, 0x2299000
	0x01CB4A28 ADRP X23, 0x2299000
	0x01CB4A2C LDR X0, [X8]
	0x01CB4A30 LDR X20, [X20 + 0xE18]
	0x01CB4A34 LDR X21, [X21 + 0xBA0]
	0x01CB4A38 LDR X23, [X23 + 0x4E8]
	0x01CB4A3C BL 0x1B6EA0C
	0x01CB4A40 LDR X2, [X20]
	0x01CB4A44 MOV X1, X19
	0x01CB4A48 MOV X3, X31
	0x01CB4A4C MOV X20, X0
	0x01CB4A50 BL 0x342E500
	0x01CB4A54 LDR X0, [X21]
	0x01CB4A58 MOVZ W1, 0x2
	0x01CB4A5C BL 0x1B6E868
	0x01CB4A60 LDR X8, [X23]
	0x01CB4A64 MOV X21, X0
	0x01CB4A68 LDR W9, [X8 + 0xE0]
	0x01CB4A6C CBNZ W9, 0x1CB4A78
	0x01CB4A70 MOV X0, X8
	0x01CB4A74 BL 0x1B6E8F8
	0x01CB4A78 ADRP X24, 0x256F000
	0x01CB4A7C LDRB W8, [X24 + 0x443]
	0x01CB4A80 CBNZ W8, 0x1CB4A98
	0x01CB4A84 ADRP X0, 0x2299000
	0x01CB4A88 LDR X0, [X0 + 0x4E8]
	0x01CB4A8C BL 0x1B6E7F0
	0x01CB4A90 MOVZ W8, 0x1
	0x01CB4A94 STRB W8, [X24 + 0x443]
	0x01CB4A98 LDR X0, [X23]
	0x01CB4A9C LDR W8, [X0 + 0xE0]
	0x01CB4AA0 CBNZ W8, 0x1CB4AAC
	0x01CB4AA4 BL 0x1B6E8F8
	0x01CB4AA8 LDR X0, [X23]
	0x01CB4AAC LDR X8, [X0 + 0xB8]
	0x01CB4AB0 LDR X8, [X8]
	0x01CB4AB4 CBZ X8, 0x1CB4BD8
	0x01CB4AB8 LDR X8, [X8 + 0xB0]
	0x01CB4ABC CBZ X8, 0x1CB4BD8
	0x01CB4AC0 CBZ X21, 0x1CB4BD8
	0x01CB4AC4 LDR X22, [X8 + 0x48]
	0x01CB4AC8 CBZ X22, 0x1CB4AE0
	0x01CB4ACC LDR X8, [X21]
	0x01CB4AD0 MOV X0, X22
	0x01CB4AD4 LDR X1, [X8 + 0x40]
	0x01CB4AD8 BL 0x1B6E8FC
	0x01CB4ADC CBZ X0, 0x1CB4BE0
	0x01CB4AE0 LDR W8, [X21 + 0x18]
	0x01CB4AE4 CBZ W8, 0x1CB4BDC
	0x01CB4AE8 STR X22, [X21 + 0x20]
	0x01CB4AEC LDRB W8, [X24 + 0x443]
	0x01CB4AF0 CBNZ W8, 0x1CB4B08
	0x01CB4AF4 ADRP X0, 0x2299000
	0x01CB4AF8 LDR X0, [X0 + 0x4E8]
	0x01CB4AFC BL 0x1B6E7F0
	0x01CB4B00 MOVZ W8, 0x1
	0x01CB4B04 STRB W8, [X24 + 0x443]
	0x01CB4B08 LDR X0, [X23]
	0x01CB4B0C LDR W8, [X0 + 0xE0]
	0x01CB4B10 CBNZ W8, 0x1CB4B1C
	0x01CB4B14 BL 0x1B6E8F8
	0x01CB4B18 LDR X0, [X23]
	0x01CB4B1C LDR X8, [X0 + 0xB8]
	0x01CB4B20 LDR X8, [X8]
	0x01CB4B24 CBZ X8, 0x1CB4BD8
	0x01CB4B28 LDR X8, [X8 + 0xB0]
	0x01CB4B2C CBZ X8, 0x1CB4BD8
	0x01CB4B30 LDR X22, [X8 + 0x50]
	0x01CB4B34 CBZ X22, 0x1CB4B4C
	0x01CB4B38 LDR X8, [X21]
	0x01CB4B3C MOV X0, X22
	0x01CB4B40 LDR X1, [X8 + 0x40]
	0x01CB4B44 BL 0x1B6E8FC
	0x01CB4B48 CBZ X0, 0x1CB4BE0
	0x01CB4B4C LDR W8, [X21 + 0x18]
	0x01CB4B50 CMP W8, 0x1
	0x01CB4B54 B.LS 0x1CB4BDC
	0x01CB4B58 ADRP X24, 0x2299000
	0x01CB4B5C ADRP X23, 0x229A000
	0x01CB4B60 LDR X24, [X24 + 0x800]
	0x01CB4B64 LDR X23, [X23 + 0xAF0]
	0x01CB4B68 MOV X0, X20
	0x01CB4B6C MOV X1, X21
	0x01CB4B70 MOV X2, X31
	0x01CB4B74 STR X22, [X21 + 0x28]
	0x01CB4B78 BL 0x1C8CFDC
	0x01CB4B7C LDR X0, [X24]
	0x01CB4B80 LDR X19, [X19 + 0x40]
	0x01CB4B84 LDR W8, [X0 + 0xE0]
	0x01CB4B88 CBNZ W8, 0x1CB4B90
	0x01CB4B8C BL 0x1B6E8F8
	0x01CB4B90 MOV X0, X31

ISIL:
	001 Move [X31-144], D12
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X29
	007 Move [X31+56], X30
	008 Move [X31+64], X28
	009 Move [X31+72], X27
	010 Move [X31+80], X26
	011 Move [X31+88], X25
	012 Move [X31+96], X24
	013 Move [X31+104], X23
	014 Move [X31+112], X22
	015 Move [X31+120], X21
	016 Move [X31+128], X20
	017 Move [X31+136], X19
	018 Move X22, 0x2570000
	019 Move W8, [X22+1236]
	020 Move X20, X2
	021 Move X21, X1
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {50}
	027 Move X0, 0x229B000
	028 Move X0, [X0+3472]
	029 Call 0x1B6F7F0
	030 Move X0, 0x229B000
	031 Move X0, [X0+1136]
	032 Call 0x1B6F7F0
	033 Move X0, 0x229B000
	034 Move X0, [X0+3480]
	035 Call 0x1B6F7F0
	036 Move X0, 0x229B000
	037 Move X0, [X0+3488]
	038 Call 0x1B6F7F0
	039 Move X0, 0x229B000
	040 Move X0, [X0+3496]
	041 Call 0x1B6F7F0
	042 Move X0, 0x229B000
	043 Move X0, [X0+3504]
	044 Call 0x1B6F7F0
	045 Move X0, 0x229B000
	046 Move X0, [X0+1144]
	047 Call 0x1B6F7F0
	048 Move W8, 1
	049 Move [X22+1236], W8
	050 Compare X21, 0
	051 JumpIfEqual {503}
	052 Move X10, 0x229B000
	053 Move X8, [X21]
	054 Move X10, [X10+3480]
	055 NotImplemented "Instruction LDRH not yet implemented."
	056 Move X1, [X10]
	057 Compare X9, 0
	058 JumpIfEqual {65}
	059 Move X10, [X8+176]
	060 Add X10, X10, 8
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Subtract X9, X9, 1
	064 Add X10, X10, 16
	065 Move X0, X21
	066 Move W2, W31
	067 Call 0x1BB5284
	068 NotImplemented "Instruction LDRSW not yet implemented."
	069 Add X8, X8, X9
	070 Add X0, X8, 312
	071 Move X8, [X0]
	072 Move X1, [X0+8]
	073 Move X25, 0x229B000
	074 Move X24, 0x229B000
	075 Move X25, [X25+1144]
	076 Move X24, [X24+1136]
	077 Move X0, X21
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Move X21, X0
	080 Compare X0, 0
	081 JumpIfEqual {539}
	082 Move X27, 0x229B000
	083 Move X28, 0x229B000
	084 Move X27, [X27+3504]
	085 Move X28, [X28+3472]
	086 Move W26, W31
	087 Move X29, W26
	088 Move X8, [X21]
	089 Move X1, [X25]
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Compare X9, 0
	092 JumpIfEqual {99}
	093 Move X10, [X8+176]
	094 Add X10, X10, 8
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Subtract X9, X9, 1
	098 Add X10, X10, 16
	099 Move X0, X21
	100 Move W2, W31
	101 Call 0x1BB5284
	102 NotImplemented "Instruction LDRSW not yet implemented."
	103 Add X8, X8, X9
	104 Add X0, X8, 312
	105 Move X8, [X0]
	106 Move X1, [X0+8]
	107 Move X0, X21
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {252}
	113 Move X8, [X21]
	114 Move X1, [X27]
	115 NotImplemented "Instruction LDRH not yet implemented."
	116 Compare X9, 0
	117 JumpIfEqual {124}
	118 Move X10, [X8+176]
	119 Add X10, X10, 8
	120 NotImplemented "Instruction LDUR not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Subtract X9, X9, 1
	123 Add X10, X10, 16
	124 Move X0, X21
	125 Move W2, W31
	126 Call 0x1BB5284
	127 NotImplemented "Instruction LDRSW not yet implemented."
	128 Add X8, X8, X9
	129 Add X0, X8, 312
	130 Move X8, [X0]
	131 Move X1, [X0+8]
	132 Move X0, X21
	133 NotImplemented "Instruction BLR not yet implemented."
	134 Move X8, [X19+96]
	135 Compare X8, 0
	136 JumpIfEqual {522}
	137 Move W8, [X8+24]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X22, X0
	140 Compare X0, 0
	141 JumpIfEqual {159}
	142 Move X9, [X22]
	143 Move X8, [X28]
	144 Move W11, [X9+304]
	145 Move W10, [X8+304]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move X9, [X9+200]
	148 Add X9, X9, X10
	149 NotImplemented "Instruction LDUR not yet implemented."
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X0, X22
	152 Move X1, X31
	153 Call AnglerController.get_phase, X0
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X0, X22
	156 Move X1, X31
	157 Call AnglerController.get_phase, X0
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move X8, [X19+96]
	160 Compare X8, 0
	161 JumpIfEqual {525}
	162 Move W9, [X8+24]
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Compare X22, 0
	165 JumpIfEqual {526}
	166 Add X8, X8, X29
	167 Move X23, [X8+32]
	168 Move X0, X22
	169 Move X1, X31
	170 Call Component.get_transform, X0
	171 Compare X0, 0
	172 JumpIfEqual {524}
	173 Move X1, X31
	174 Call Transform.get_position, X0
	175 Move W8, [X19+80]
	176 Move V8, V0
	177 Move V9, V2
	178 Compare W8, 0
	179 JumpIfEqual {189}
	180 Move X0, X19
	181 Move X1, X31
	182 Call Component.get_transform, X0
	183 Compare X0, 0
	184 JumpIfEqual {532}
	185 Move X1, X31
	186 Call Transform.get_position, X0
	187 Subtract S8, S8, S0
	188 Subtract S9, S9, S2
	189 Move X0, X22
	190 Move X1, X31
	191 Call Component.get_transform, X0
	192 Compare X0, 0
	193 JumpIfEqual {527}
	194 Move X1, X31
	195 Call Transform.get_position, X0
	196 Move V10, V0
	197 Move V11, V1
	198 Move V12, V2
	199 Move X0, X19
	200 Move X1, X31
	201 Call Component.get_transform, X0
	202 Compare X0, 0
	203 JumpIfEqual {528}
	204 Move X1, X31
	205 Call Transform.get_position, X0
	206 Move V3, [X19+84]
	207 Subtract S0, S10, S0
	208 Subtract S1, S11, S1
	209 Subtract S2, S12, S2
	210 Multiply S0, S0, S0
	211 Multiply S1, S1, S1
	212 Add S0, S0, S1
	213 Multiply S1, S2, S2
	214 Add S0, S1, S0
	215 Multiply S1, S3, S3
	216 NotImplemented "Instruction FCMP not yet implemented."
	217 Move X0, X22
	218 Move X1, X31
	219 Call MobController.get_isDie, X0
	220 Compare X23, 0
	221 JumpIfEqual {546}
	222 And W1, W0, 1
	223 Move X0, X23
	224 Call MapIconView.SetXOut, X0, X1
	225 Move X0, [X23+48]
	226 Compare X0, 0
	227 JumpIfEqual {545}
	228 Add S1, S9, S9
	229 Add S0, S8, S8
	230 Move X1, X31
	231 Call RectTransform.set_anchoredPosition, X0, X1
	232 Move X0, X23
	233 Move X1, X31
	234 Call Component.get_gameObject, X0
	235 Compare X0, 0
	236 JumpIfEqual {547}
	237 Move X1, X31
	238 Call GameObject.get_activeSelf, X0
	239 Move TEMP, X0
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfEqual {251}
	243 Move X0, X23
	244 Move X1, X31
	245 Call Component.get_gameObject, X0
	246 Compare X0, 0
	247 JumpIfEqual {548}
	248 Move W1, 1
	249 Move X2, X31
	250 Call GameObject.SetActive, X0, X1
	251 Add W26, W26, 1
	252 Move X22, X31
	253 Move W23, 5
	254 Compare X21, 0
	255 JumpIfEqual {277}
	256 Move X8, [X21]
	257 Move X1, [X24]
	258 NotImplemented "Instruction LDRH not yet implemented."
	259 Compare X9, 0
	260 JumpIfEqual {267}
	261 Move X10, [X8+176]
	262 Add X10, X10, 8
	263 NotImplemented "Instruction LDUR not yet implemented."
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Subtract X9, X9, 1
	266 Add X10, X10, 16
	267 Move X0, X21
	268 Move W2, W31
	269 Call 0x1BB5284
	270 NotImplemented "Instruction LDRSW not yet implemented."
	271 Add X8, X8, X9
	272 Add X0, X8, 312
	273 Move X8, [X0]
	274 Move X1, [X0+8]
	275 Move X0, X21
	276 NotImplemented "Instruction BLR not yet implemented."
	277 Compare X22, 0
	278 JumpIfNotEqual {540}
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Compare W23, 0
	281 JumpIfNotEqual {504}
	282 Compare X20, 0
	283 JumpIfEqual {503}
	284 Move X10, 0x229B000
	285 Move X8, [X20]
	286 Move X10, [X10+3488]
	287 NotImplemented "Instruction LDRH not yet implemented."
	288 Move X1, [X10]
	289 Compare X9, 0
	290 JumpIfEqual {297}
	291 Move X10, [X8+176]
	292 Add X10, X10, 8
	293 NotImplemented "Instruction LDUR not yet implemented."
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Subtract X9, X9, 1
	296 Add X10, X10, 16
	297 Move X0, X20
	298 Move W2, W31
	299 Call 0x1BB5284
	300 NotImplemented "Instruction LDRSW not yet implemented."
	301 Add X8, X8, X9
	302 Add X0, X8, 312
	303 Move X8, [X0]
	304 Move X1, [X0+8]
	305 Move X0, X20
	306 NotImplemented "Instruction BLR not yet implemented."
	307 Move X20, X0
	308 Compare X0, 0
	309 JumpIfEqual {542}
	310 Move X23, 0x229B000
	311 Move X23, [X23+3496]
	312 Move X27, W26
	313 Move X8, [X20]
	314 Move X1, [X25]
	315 NotImplemented "Instruction LDRH not yet implemented."
	316 Compare X9, 0
	317 JumpIfEqual {324}
	318 Move X10, [X8+176]
	319 Add X10, X10, 8
	320 NotImplemented "Instruction LDUR not yet implemented."
	321 NotImplemented "Instruction CMP not yet implemented."
	322 Subtract X9, X9, 1
	323 Add X10, X10, 16
	324 Move X0, X20
	325 Move W2, W31
	326 Call 0x1BB5284
	327 NotImplemented "Instruction LDRSW not yet implemented."
	328 Add X8, X8, X9
	329 Add X0, X8, 312
	330 Move X8, [X0]
	331 Move X1, [X0+8]
	332 Move X0, X20
	333 NotImplemented "Instruction BLR not yet implemented."
	334 Move TEMP, X0
	335 And TEMP, TEMP, 1
	336 Compare TEMP, 1
	337 JumpIfNotEqual {459}
	338 Move X8, [X20]
	339 Move X1, [X23]
	340 NotImplemented "Instruction LDRH not yet implemented."
	341 Compare X9, 0
	342 JumpIfEqual {349}
	343 Move X10, [X8+176]
	344 Add X10, X10, 8
	345 NotImplemented "Instruction LDUR not yet implemented."
	346 NotImplemented "Instruction CMP not yet implemented."
	347 Subtract X9, X9, 1
	348 Add X10, X10, 16
	349 Move X0, X20
	350 Move W2, W31
	351 Call 0x1BB5284
	352 NotImplemented "Instruction LDRSW not yet implemented."
	353 Add X8, X8, X9
	354 Add X0, X8, 312
	355 Move X8, [X0]
	356 Move X1, [X0+8]
	357 Move X0, X20
	358 NotImplemented "Instruction BLR not yet implemented."
	359 Move X8, [X19+96]
	360 Compare X8, 0
	361 JumpIfEqual {530}
	362 Move W8, [X8+24]
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Move X22, X0
	365 Compare X0, 0
	366 JumpIfEqual {531}
	367 Move X0, X22
	368 Move X1, X31
	369 Call MobControllerMine.get_isExploded, X0
	370 Move TEMP, X0
	371 And TEMP, TEMP, 1
	372 Compare TEMP, 1
	373 JumpIfEqual {313}
	374 Move X8, [X19+96]
	375 Compare X8, 0
	376 JumpIfEqual {534}
	377 Move W9, [X8+24]
	378 NotImplemented "Instruction CMP not yet implemented."
	379 Add X8, X8, X27
	380 Move X21, [X8+32]
	381 Move X0, X22
	382 Move X1, X31
	383 Call Component.get_transform, X0
	384 Compare X0, 0
	385 JumpIfEqual {537}
	386 Move X1, X31
	387 Call Transform.get_position, X0
	388 Move W8, [X19+80]
	389 Move V8, V0
	390 Move V9, V2
	391 Compare W8, 0
	392 JumpIfEqual {402}
	393 Move X0, X19
	394 Move X1, X31
	395 Call Component.get_transform, X0
	396 Compare X0, 0
	397 JumpIfEqual {538}
	398 Move X1, X31
	399 Call Transform.get_position, X0
	400 Subtract S8, S8, S0
	401 Subtract S9, S9, S2
	402 Move X0, X22
	403 Move X1, X31
	404 Call Component.get_transform, X0
	405 Compare X0, 0
	406 JumpIfEqual {535}
	407 Move X1, X31
	408 Call Transform.get_position, X0
	409 Move V10, V0
	410 Move V11, V1
	411 Move V12, V2
	412 Move X0, X19
	413 Move X1, X31
	414 Call Component.get_transform, X0
	415 Compare X0, 0
	416 JumpIfEqual {536}
	417 Move X1, X31
	418 Call Transform.get_position, X0
	419 Move V3, [X19+84]
	420 Subtract S0, S10, S0
	421 Subtract S1, S11, S1
	422 Subtract S2, S12, S2
	423 Multiply S0, S0, S0
	424 Multiply S1, S1, S1
	425 Add S0, S0, S1
	426 Multiply S1, S2, S2
	427 Add S0, S1, S0
	428 Multiply S1, S3, S3
	429 NotImplemented "Instruction FCMP not yet implemented."
	430 Compare X21, 0
	431 JumpIfEqual {550}
	432 Move X0, [X21+48]
	433 Compare X0, 0
	434 JumpIfEqual {551}
	435 Add S1, S9, S9
	436 Add S0, S8, S8
	437 Move X1, X31
	438 Call RectTransform.set_anchoredPosition, X0, X1
	439 Move X0, X21
	440 Move X1, X31
	441 Call Component.get_gameObject, X0
	442 Compare X0, 0
	443 JumpIfEqual {549}
	444 Move X1, X31
	445 Call GameObject.get_activeSelf, X0
	446 Move TEMP, X0
	447 And TEMP, TEMP, 1
	448 Compare TEMP, 1
	449 JumpIfEqual {458}
	450 Move X0, X21
	451 Move X1, X31
	452 Call Component.get_gameObject, X0
	453 Compare X0, 0
	454 JumpIfEqual {552}
	455 Move W1, 1
	456 Move X2, X31
	457 Call GameObject.SetActive, X0, X1
	458 Add W26, W26, 1
	459 Move X21, X31
	460 Move W22, 12
	461 Compare X20, 0
	462 JumpIfEqual {484}
	463 Move X8, [X20]
	464 Move X1, [X24]
	465 NotImplemented "Instruction LDRH not yet implemented."
	466 Compare X9, 0
	467 JumpIfEqual {474}
	468 Move X10, [X8+176]
	469 Add X10, X10, 8
	470 NotImplemented "Instruction LDUR not yet implemented."
	471 NotImplemented "Instruction CMP not yet implemented."
	472 Subtract X9, X9, 1
	473 Add X10, X10, 16
	474 Move X0, X20
	475 Move W2, W31
	476 Call 0x1BB5284
	477 NotImplemented "Instruction LDRSW not yet implemented."
	478 Add X8, X8, X9
	479 Add X0, X8, 312
	480 Move X8, [X0]
	481 Move X1, [X0+8]
	482 Move X0, X20
	483 NotImplemented "Instruction BLR not yet implemented."
	484 Compare X21, 0
	485 JumpIfNotEqual {543}
	486 NotImplemented "Instruction CMP not yet implemented."
	487 Compare W22, 0
	488 JumpIfNotEqual {504}
	489 Move X8, [X19+96]
	490 Compare X8, 0
	491 JumpIfEqual {503}
	492 Move X20, W26
	493 Move X9, [X8+24]
	494 NotImplemented "Instruction CMP not yet implemented."
	495 NotImplemented "Instruction CMP not yet implemented."
	496 Add X8, X8, X20
	497 Move X1, [X8+32]
	498 Call MapView.DeactivateMapIcon, X0, X1
	499 Move X8, [X19+96]
	500 Add X20, X20, 1
	501 Compare X8, 0
	502 JumpIfNotEqual {493}
	503 Call 0x1B6FA1C
	504 Move X20, [X31+128]
	505 Move X19, [X31+136]
	506 Move X22, [X31+112]
	507 Move X21, [X31+120]
	508 Move X24, [X31+96]
	509 Move X23, [X31+104]
	510 Move X26, [X31+80]
	511 Move X25, [X31+88]
	512 Move X28, [X31+64]
	513 Move X27, [X31+72]
	514 Move X29, [X31+48]
	515 Move X30, [X31+56]
	516 Move D9, [X31+32]
	517 Move D8, [X31+40]
	518 Move D11, [X31+16]
	519 Move D10, [X31+24]
	520 Move V12, [X31+144]
	521 Return 
	522 Call 0x1B6FA1C
	523 Call 0x1B6FA24
	524 Call 0x1B6FA1C
	525 Call 0x1B6FA1C
	526 Call 0x1B6FA1C
	527 Call 0x1B6FA1C
	528 Call 0x1B6FA1C
	529 Call 0x1B6FA24
	530 Call 0x1B6FA1C
	531 Call 0x1B6FA1C
	532 Call 0x1B6FA1C
	533 Call 0x1B6FA24
	534 Call 0x1B6FA1C
	535 Call 0x1B6FA1C
	536 Call 0x1B6FA1C
	537 Call 0x1B6FA1C
	538 Call 0x1B6FA1C
	539 Call 0x1B6FA1C
	540 Move X0, X22
	541 Call 0x1B6FA14
	542 Call 0x1B6FA1C
	543 Move X0, X21
	544 Call 0x1B6FA14
	545 Call 0x1B6FA1C
	546 Call 0x1B6FA1C
	547 Call 0x1B6FA1C
	548 Call 0x1B6FA1C
	549 Call 0x1B6FA1C
	550 Call 0x1B6FA1C
	551 Call 0x1B6FA1C
	552 Call 0x1B6FA1C
	553 Move W26, W31
	554 NotImplemented "Instruction CMP not yet implemented."
	555 Call 0x3D1A840
	556 Move X21, [X0]
	557 Call 0x3D1A850
	558 Move W22, W31
	559 Compare X20, 0
	560 JumpIfNotEqual {463}
	561 Move X19, X0
	562 Move X21, X31
	563 Move X19, X0
	564 Compare X20, 0
	565 JumpIfEqual {587}
	566 Move X8, [X20]
	567 Move X1, [X24]
	568 NotImplemented "Instruction LDRH not yet implemented."
	569 Compare X9, 0
	570 JumpIfEqual {577}
	571 Move X10, [X8+176]
	572 Add X10, X10, 8
	573 NotImplemented "Instruction LDUR not yet implemented."
	574 NotImplemented "Instruction CMP not yet implemented."
	575 Subtract X9, X9, 1
	576 Add X10, X10, 16
	577 Move X0, X20
	578 Move W2, W31
	579 Call 0x1BB5284
	580 NotImplemented "Instruction LDRSW not yet implemented."
	581 Add X8, X8, X9
	582 Add X0, X8, 312
	583 Move X8, [X0]
	584 Move X1, [X0+8]
	585 Move X0, X20
	586 NotImplemented "Instruction BLR not yet implemented."
	587 Compare X21, 0
	588 JumpIfEqual {626}
	589 Move X0, X21
	590 Call 0x1B6FA14
	591 NotImplemented "Instruction CMP not yet implemented."
	592 Call 0x3D1A840
	593 Move X22, [X0]
	594 Call 0x3D1A850
	595 Move W23, W31
	596 Compare X21, 0
	597 JumpIfNotEqual {256}
	598 Move X19, X0
	599 Move X22, X31
	600 Move X19, X0
	601 Compare X21, 0
	602 JumpIfEqual {624}
	603 Move X8, [X21]
	604 Move X1, [X24]
	605 NotImplemented "Instruction LDRH not yet implemented."
	606 Compare X9, 0
	607 JumpIfEqual {614}
	608 Move X10, [X8+176]
	609 Add X10, X10, 8
	610 NotImplemented "Instruction LDUR not yet implemented."
	611 NotImplemented "Instruction CMP not yet implemented."
	612 Subtract X9, X9, 1
	613 Add X10, X10, 16
	614 Move X0, X21
	615 Move W2, W31
	616 Call 0x1BB5284
	617 NotImplemented "Instruction LDRSW not yet implemented."
	618 Add X8, X8, X9
	619 Add X0, X8, 312
	620 Move X8, [X0]
	621 Move X1, [X0+8]
	622 Move X0, X21
	623 NotImplemented "Instruction BLR not yet implemented."
	624 Compare X22, 0
	625 JumpIfNotEqual {628}
	626 Move X0, X19
	627 Call 0x1C8518C
	628 Move X0, X22
	629 Call 0x1B6FA14
	630 Call 0x18F56A8

Method: System.Void UpdatePlayerLocations(System.Collections.Generic.IEnumerable`1<AnimalCompany.NetPlayer> players, System.Int32 visiblePlayers)

Disassembly:
	0x01CB3B04 MOV W23, W31
	0x01CB3B08 CBNZ X21, 0x1CB3534
	0x01CB3B0C B 0x1CB358C
	0x01CB3B10 MOV X19, X0
	0x01CB3B14 MOV X22, X31
	0x01CB3B18 B 0x1CB3B20
	0x01CB3B1C MOV X19, X0
	0x01CB3B20 CBZ X21, 0x1CB3B7C
	0x01CB3B24 LDR X8, [X21]
	0x01CB3B28 LDR X1, [X24]
	0x01CB3B2C LDRH W9, [X8 + 0x12E]
	0x01CB3B30 CBZ X9, 0x1CB3B54
	0x01CB3B34 LDR X10, [X8 + 0xB0]
	0x01CB3B38 ADD X10, X10, 0x8
	0x01CB3B3C LDUR X11, [X10 - 0x8]
	0x01CB3B40 CMP X11, X1
	0x01CB3B44 B.EQ 0x1CB3B64
	0x01CB3B48 SUBS X9, X9, 0x1
	0x01CB3B4C ADD X10, X10, 0x10
	0x01CB3B50 B.NE 0x1CB3B3C
	0x01CB3B54 MOV X0, X21
	0x01CB3B58 MOV W2, W31
	0x01CB3B5C BL 0x1BB4284
	0x01CB3B60 B 0x1CB3B70
	0x01CB3B64 LDRSW X9, [X10]
	0x01CB3B68 ADD X8, X8, X9, 0x4, LSL
	0x01CB3B6C ADD X0, X8, 0x138
	0x01CB3B70 LDP X8, X1, [X0]
	0x01CB3B74 MOV X0, X21
	0x01CB3B78 BLR X8
	0x01CB3B7C CBNZ X22, 0x1CB3B88
	0x01CB3B80 MOV X0, X19
	0x01CB3B84 BL 0x1C8418C
	0x01CB3B88 MOV X0, X22
	0x01CB3B8C BL 0x1B6EA14
	0x01CB3B90 BL 0x18F46A8
	0x01CB3B94 STR D12, [X31 - 0x80]!
	0x01CB3B98 STP D11, D10, [X31 + 0x10]
	0x01CB3B9C STP D9, D8, [X31 + 0x20]
	0x01CB3BA0 STP X30, X27, [X31 + 0x30]
	0x01CB3BA4 STP X26, X25, [X31 + 0x40]
	0x01CB3BA8 STP X24, X23, [X31 + 0x50]
	0x01CB3BAC STP X22, X21, [X31 + 0x60]
	0x01CB3BB0 STP X20, X19, [X31 + 0x70]
	0x01CB3BB4 ADRP X21, 0x2570000
	0x01CB3BB8 LDRB W8, [X21 + 0x4D3]
	0x01CB3BBC MOV X20, X1
	0x01CB3BC0 MOV X19, X0
	0x01CB3BC4 TBNZ X8, 0x0, 0x1CB3C00
	0x01CB3BC8 ADRP X0, 0x229B000
	0x01CB3BCC LDR X0, [X0 + 0x470]
	0x01CB3BD0 BL 0x1B6E7F0
	0x01CB3BD4 ADRP X0, 0x229B000
	0x01CB3BD8 LDR X0, [X0 + 0xDB8]
	0x01CB3BDC BL 0x1B6E7F0
	0x01CB3BE0 ADRP X0, 0x229B000
	0x01CB3BE4 LDR X0, [X0 + 0xDC0]
	0x01CB3BE8 BL 0x1B6E7F0
	0x01CB3BEC ADRP X0, 0x229B000
	0x01CB3BF0 LDR X0, [X0 + 0x478]
	0x01CB3BF4 BL 0x1B6E7F0
	0x01CB3BF8 MOVZ W8, 0x1
	0x01CB3BFC STRB W8, [X21 + 0x4D3]
	0x01CB3C00 CBZ X20, 0x1CB3F54
	0x01CB3C04 ADRP X10, 0x229B000
	0x01CB3C08 LDR X8, [X20]
	0x01CB3C0C LDR X10, [X10 + 0xDB8]
	0x01CB3C10 LDRH W9, [X8 + 0x12E]
	0x01CB3C14 LDR X1, [X10]
	0x01CB3C18 CBZ X9, 0x1CB3C3C
	0x01CB3C1C LDR X10, [X8 + 0xB0]
	0x01CB3C20 ADD X10, X10, 0x8
	0x01CB3C24 LDUR X11, [X10 - 0x8]
	0x01CB3C28 CMP X11, X1
	0x01CB3C2C B.EQ 0x1CB3C4C
	0x01CB3C30 SUBS X9, X9, 0x1
	0x01CB3C34 ADD X10, X10, 0x10
	0x01CB3C38 B.NE 0x1CB3C24
	0x01CB3C3C MOV X0, X20
	0x01CB3C40 MOV W2, W31
	0x01CB3C44 BL 0x1BB4284
	0x01CB3C48 B 0x1CB3C58
	0x01CB3C4C LDRSW X9, [X10]
	0x01CB3C50 ADD X8, X8, X9, 0x4, LSL
	0x01CB3C54 ADD X0, X8, 0x138
	0x01CB3C58 LDP X8, X1, [X0]
	0x01CB3C5C ADRP X24, 0x229B000
	0x01CB3C60 LDR X24, [X24 + 0x470]
	0x01CB3C64 MOV X0, X20
	0x01CB3C68 BLR X8
	0x01CB3C6C MOV X20, X0
	0x01CB3C70 CBZ X0, 0x1CB3FA0
	0x01CB3C74 ADRP X25, 0x229B000
	0x01CB3C78 ADRP X26, 0x229B000
	0x01CB3C7C LDR X25, [X25 + 0x478]
	0x01CB3C80 LDR X26, [X26 + 0xDC0]
	0x01CB3C84 MOV W23, W31
	0x01CB3C88 SXTW X27, W23
	0x01CB3C8C LDR X8, [X20]
	0x01CB3C90 LDR X1, [X25]
	0x01CB3C94 LDRH W9, [X8 + 0x12E]
	0x01CB3C98 CBZ X9, 0x1CB3CBC
	0x01CB3C9C LDR X10, [X8 + 0xB0]
	0x01CB3CA0 ADD X10, X10, 0x8
	0x01CB3CA4 LDUR X11, [X10 - 0x8]
	0x01CB3CA8 CMP X11, X1
	0x01CB3CAC B.EQ 0x1CB3CCC
	0x01CB3CB0 SUBS X9, X9, 0x1
	0x01CB3CB4 ADD X10, X10, 0x10
	0x01CB3CB8 B.NE 0x1CB3CA4
	0x01CB3CBC MOV X0, X20
	0x01CB3CC0 MOV W2, W31
	0x01CB3CC4 BL 0x1BB4284
	0x01CB3CC8 B 0x1CB3CD8
	0x01CB3CCC LDRSW X9, [X10]
	0x01CB3CD0 ADD X8, X8, X9, 0x4, LSL
	0x01CB3CD4 ADD X0, X8, 0x138
	0x01CB3CD8 LDP X8, X1, [X0]
	0x01CB3CDC MOV X0, X20
	0x01CB3CE0 BLR X8
	0x01CB3CE4 TBZ X0, 0x0, 0x1CB3EA8
	0x01CB3CE8 LDR X8, [X20]
	0x01CB3CEC LDR X1, [X26]
	0x01CB3CF0 LDRH W9, [X8 + 0x12E]
	0x01CB3CF4 CBZ X9, 0x1CB3D18
	0x01CB3CF8 LDR X10, [X8 + 0xB0]
	0x01CB3CFC ADD X10, X10, 0x8
	0x01CB3D00 LDUR X11, [X10 - 0x8]
	0x01CB3D04 CMP X11, X1
	0x01CB3D08 B.EQ 0x1CB3D28
	0x01CB3D0C SUBS X9, X9, 0x1
	0x01CB3D10 ADD X10, X10, 0x10
	0x01CB3D14 B.NE 0x1CB3D00
	0x01CB3D18 MOV X0, X20
	0x01CB3D1C MOV W2, W31
	0x01CB3D20 BL 0x1BB4284
	0x01CB3D24 B 0x1CB3D34
	0x01CB3D28 LDRSW X9, [X10]
	0x01CB3D2C ADD X8, X8, X9, 0x4, LSL
	0x01CB3D30 ADD X0, X8, 0x138
	0x01CB3D34 LDP X8, X1, [X0]
	0x01CB3D38 MOV X0, X20
	0x01CB3D3C BLR X8
	0x01CB3D40 LDR X8, [X19 + 0x68]
	0x01CB3D44 CBZ X8, 0x1CB3F80
	0x01CB3D48 LDR W8, [X8 + 0x18]
	0x01CB3D4C CMP W23, W8
	0x01CB3D50 B.GE 0x1CB3EA8
	0x01CB3D54 MOV X22, X0
	0x01CB3D58 CBZ X0, 0x1CB3F84
	0x01CB3D5C MOV X0, X22
	0x01CB3D60 MOV X1, X31
	0x01CB3D64 BL 0x1C9CA04
	0x01CB3D68 TBNZ X0, 0x0, 0x1CB3C8C
	0x01CB3D6C MOV X0, X22
	0x01CB3D70 MOV X1, X31
	0x01CB3D74 BL 0x1C9A864
	0x01CB3D78 TBZ X0, 0x0, 0x1CB3C8C
	0x01CB3D7C LDR X8, [X19 + 0x68]
	0x01CB3D80 CBZ X8, 0x1CB3F8C
	0x01CB3D84 LDR W9, [X8 + 0x18]
	0x01CB3D88 CMP W23, W9
	0x01CB3D8C B.CS 0x1CB3F94
	0x01CB3D90 ADD X8, X8, X27, 0x3, LSL
	0x01CB3D94 LDR X21, [X8 + 0x20]
	0x01CB3D98 MOV X0, X22
	0x01CB3D9C MOV X1, X31
	0x01CB3DA0 BL 0x3A9B084
	0x01CB3DA4 CBZ X0, 0x1CB3F88
	0x01CB3DA8 MOV X1, X31
	0x01CB3DAC BL 0x3AA7658
	0x01CB3DB0 LDRB W8, [X19 + 0x50]
	0x01CB3DB4 MOV V8.16B, V0.16B
	0x01CB3DB8 MOV V9.16B, V2.16B
	0x01CB3DBC CBZ W8, 0x1CB3DE0
	0x01CB3DC0 MOV X0, X19
	0x01CB3DC4 MOV X1, X31
	0x01CB3DC8 BL 0x3A9B084
	0x01CB3DCC CBZ X0, 0x1CB3F9C
	0x01CB3DD0 MOV X1, X31
	0x01CB3DD4 BL 0x3AA7658
	0x01CB3DD8 FSUB S8, S8, S0
	0x01CB3DDC FSUB S9, S9, S2
	0x01CB3DE0 MOV X0, X22
	0x01CB3DE4 MOV X1, X31
	0x01CB3DE8 BL 0x3A9B084
	0x01CB3DEC CBZ X0, 0x1CB3F90
	0x01CB3DF0 MOV X1, X31
	0x01CB3DF4 BL 0x3AA7658
	0x01CB3DF8 MOV V10.16B, V0.16B
	0x01CB3DFC MOV V11.16B, V1.16B
	0x01CB3E00 MOV V12.16B, V2.16B
	0x01CB3E04 MOV X0, X19
	0x01CB3E08 MOV X1, X31
	0x01CB3E0C BL 0x3A9B084
	0x01CB3E10 CBZ X0, 0x1CB3F98
	0x01CB3E14 MOV X1, X31
	0x01CB3E18 BL 0x3AA7658
	0x01CB3E1C LDR V3, [X19 + 0x54]
	0x01CB3E20 FSUB S0, S10, S0
	0x01CB3E24 FSUB S1, S11, S1
	0x01CB3E28 FSUB S2, S12, S2
	0x01CB3E2C FMUL S0, S0, S0
	0x01CB3E30 FMUL S1, S1, S1
	0x01CB3E34 FADD S0, S0, S1
	0x01CB3E38 FMUL S1, S2, S2
	0x01CB3E3C FADD S0, S1, S0
	0x01CB3E40 FMUL S1, S3, S3
	0x01CB3E44 FCMP S0, S1
	0x01CB3E48 B.GT 0x1CB3C8C
	0x01CB3E4C CBZ X21, 0x1CB3FAC
	0x01CB3E50 LDR X0, [X21 + 0x30]
	0x01CB3E54 CBZ X0, 0x1CB3FB4
	0x01CB3E58 FADD S1, S9, S9
	0x01CB3E5C FADD S0, S8, S8
	0x01CB3E60 MOV X1, X31
	0x01CB3E64 BL 0x3AA6988
	0x01CB3E68 MOV X0, X21
	0x01CB3E6C MOV X1, X31
	0x01CB3E70 BL 0x3A9B0C0
	0x01CB3E74 CBZ X0, 0x1CB3FB0
	0x01CB3E78 MOV X1, X31
	0x01CB3E7C BL 0x3A9D9EC
	0x01CB3E80 TBNZ X0, 0x0, 0x1CB3EA0
	0x01CB3E84 MOV X0, X21
	0x01CB3E88 MOV X1, X31
	0x01CB3E8C BL 0x3A9B0C0
	0x01CB3E90 CBZ X0, 0x1CB3FB8
	0x01CB3E94 MOVZ W1, 0x1
	0x01CB3E98 MOV X2, X31
	0x01CB3E9C BL 0x3A9D9A8
	0x01CB3EA0 ADD W23, W23, 0x1
	0x01CB3EA4 B 0x1CB3C88
	0x01CB3EA8 MOV X21, X31
	0x01CB3EAC MOVZ W22, 0x5
	0x01CB3EB0 CBZ X20, 0x1CB3F0C
	0x01CB3EB4 LDR X8, [X20]
	0x01CB3EB8 LDR X1, [X24]
	0x01CB3EBC LDRH W9, [X8 + 0x12E]
	0x01CB3EC0 CBZ X9, 0x1CB3EE4
	0x01CB3EC4 LDR X10, [X8 + 0xB0]
	0x01CB3EC8 ADD X10, X10, 0x8
	0x01CB3ECC LDUR X11, [X10 - 0x8]
	0x01CB3ED0 CMP X11, X1
	0x01CB3ED4 B.EQ 0x1CB3EF4
	0x01CB3ED8 SUBS X9, X9, 0x1
	0x01CB3EDC ADD X10, X10, 0x10
	0x01CB3EE0 B.NE 0x1CB3ECC
	0x01CB3EE4 MOV X0, X20
	0x01CB3EE8 MOV W2, W31
	0x01CB3EEC BL 0x1BB4284
	0x01CB3EF0 B 0x1CB3F00
	0x01CB3EF4 LDRSW X9, [X10]
	0x01CB3EF8 ADD X8, X8, X9, 0x4, LSL
	0x01CB3EFC ADD X0, X8, 0x138
	0x01CB3F00 LDP X8, X1, [X0]
	0x01CB3F04 MOV X0, X20
	0x01CB3F08 BLR X8
	0x01CB3F0C CBNZ X21, 0x1CB3FA4
	0x01CB3F10 CMP W22, 0x5
	0x01CB3F14 B.EQ 0x1CB3F1C
	0x01CB3F18 CBNZ W22, 0x1CB3F58
	0x01CB3F1C LDR X8, [X19 + 0x68]
	0x01CB3F20 CBZ X8, 0x1CB3F54
	0x01CB3F24 SXTW X20, W23
	0x01CB3F28 LDR X9, [X8 + 0x18]
	0x01CB3F2C CMP X20, W9, SXTW
	0x01CB3F30 B.GE 0x1CB3F58
	0x01CB3F34 CMP W20, W9
	0x01CB3F38 B.CS 0x1CB3F7C
	0x01CB3F3C ADD X8, X8, X20, 0x3, LSL
	0x01CB3F40 LDR X1, [X8 + 0x20]
	0x01CB3F44 BL 0x1CB4658
	0x01CB3F48 LDR X8, [X19 + 0x68]
	0x01CB3F4C ADD X20, X20, 0x1
	0x01CB3F50 CBNZ X8, 0x1CB3F28
	0x01CB3F54 BL 0x1B6EA1C
	0x01CB3F58 LDP X20, X19, [X31 + 0x70]
	0x01CB3F5C LDP X22, X21, [X31 + 0x60]
	0x01CB3F60 LDP X24, X23, [X31 + 0x50]
	0x01CB3F64 LDP X26, X25, [X31 + 0x40]
	0x01CB3F68 LDP X30, X27, [X31 + 0x30]
	0x01CB3F6C LDP D9, D8, [X31 + 0x20]
	0x01CB3F70 LDP D11, D10, [X31 + 0x10]
	0x01CB3F74 LDR V12, [X31], #0x80
	0x01CB3F78 RET
	0x01CB3F7C BL 0x1B6EA24
	0x01CB3F80 BL 0x1B6EA1C
	0x01CB3F84 BL 0x1B6EA1C
	0x01CB3F88 BL 0x1B6EA1C
	0x01CB3F8C BL 0x1B6EA1C
	0x01CB3F90 BL 0x1B6EA1C
	0x01CB3F94 BL 0x1B6EA24
	0x01CB3F98 BL 0x1B6EA1C
	0x01CB3F9C BL 0x1B6EA1C
	0x01CB3FA0 BL 0x1B6EA1C
	0x01CB3FA4 MOV X0, X21
	0x01CB3FA8 BL 0x1B6EA14
	0x01CB3FAC BL 0x1B6EA1C
	0x01CB3FB0 BL 0x1B6EA1C
	0x01CB3FB4 BL 0x1B6EA1C
	0x01CB3FB8 BL 0x1B6EA1C
	0x01CB3FBC B 0x1CB4030
	0x01CB3FC0 B 0x1CB4030
	0x01CB3FC4 B 0x1CB4030
	0x01CB3FC8 B 0x1CB4030
	0x01CB3FCC B 0x1CB4030
	0x01CB3FD0 B 0x1CB4030
	0x01CB3FD4 B 0x1CB4030
	0x01CB3FD8 B 0x1CB4030
	0x01CB3FDC MOV W23, W31
	0x01CB3FE0 B 0x1CB4030
	0x01CB3FE4 B 0x1CB4030
	0x01CB3FE8 B 0x1CB4030
	0x01CB3FEC B 0x1CB4030
	0x01CB3FF0 B 0x1CB4030
	0x01CB3FF4 B 0x1CB4030
	0x01CB3FF8 B 0x1CB4030
	0x01CB3FFC B 0x1CB4030
	0x01CB4000 B 0x1CB4030
	0x01CB4004 B 0x1CB4030
	0x01CB4008 B 0x1CB4030
	0x01CB400C B 0x1CB4030
	0x01CB4010 B 0x1CB4030
	0x01CB4014 B 0x1CB4030
	0x01CB4018 B 0x1CB4030
	0x01CB401C B 0x1CB4030
	0x01CB4020 B 0x1CB4030
	0x01CB4024 B 0x1CB4030
	0x01CB4028 B 0x1CB4030
	0x01CB402C B 0x1CB4030
	0x01CB4030 CMP W1, 0x1
	0x01CB4034 B.NE 0x1CB4050
	0x01CB4038 BL 0x3D19840
	0x01CB403C LDR X21, [X0]
	0x01CB4040 BL 0x3D19850
	0x01CB4044 MOV W22, W31
	0x01CB4048 CBNZ X20, 0x1CB3EB4
	0x01CB404C B 0x1CB3F0C
	0x01CB4050 MOV X19, X0
	0x01CB4054 MOV X21, X31
	0x01CB4058 B 0x1CB4060
	0x01CB405C MOV X19, X0
	0x01CB4060 CBZ X20, 0x1CB40BC
	0x01CB4064 LDR X8, [X20]
	0x01CB4068 LDR X1, [X24]
	0x01CB406C LDRH W9, [X8 + 0x12E]
	0x01CB4070 CBZ X9, 0x1CB4094
	0x01CB4074 LDR X10, [X8 + 0xB0]
	0x01CB4078 ADD X10, X10, 0x8
	0x01CB407C LDUR X11, [X10 - 0x8]
	0x01CB4080 CMP X11, X1
	0x01CB4084 B.EQ 0x1CB40A4
	0x01CB4088 SUBS X9, X9, 0x1
	0x01CB408C ADD X10, X10, 0x10
	0x01CB4090 B.NE 0x1CB407C
	0x01CB4094 MOV X0, X20
	0x01CB4098 MOV W2, W31
	0x01CB409C BL 0x1BB4284
	0x01CB40A0 B 0x1CB40B0
	0x01CB40A4 LDRSW X9, [X10]
	0x01CB40A8 ADD X8, X8, X9, 0x4, LSL
	0x01CB40AC ADD X0, X8, 0x138
	0x01CB40B0 LDP X8, X1, [X0]
	0x01CB40B4 MOV X0, X20
	0x01CB40B8 BLR X8
	0x01CB40BC CBNZ X21, 0x1CB40C8
	0x01CB40C0 MOV X0, X19
	0x01CB40C4 BL 0x1C8418C
	0x01CB40C8 MOV X0, X21
	0x01CB40CC BL 0x1B6EA14
	0x01CB40D0 BL 0x18F46A8
	0x01CB40D4 MOV X1, X31
	0x01CB40D8 B 0x3A9EEE4
	0x01CB40DC LDR X0, [X0 + 0x30]
	0x01CB40E0 RET
	0x01CB40E4 STP X30, X21, [X31 - 0x20]!
	0x01CB40E8 STP X20, X19, [X31 + 0x10]
	0x01CB40EC ADRP X20, 0x256F000
	0x01CB40F0 ADRP X21, 0x229A000
	0x01CB40F4 LDRB W8, [X20 + 0x4CE]
	0x01CB40F8 LDR X21, [X21 + 0xDC8]
	0x01CB40FC MOV X19, X0
	0x01CB4100 TBNZ X8, 0x0, 0x1CB4118
	0x01CB4104 ADRP X0, 0x229A000
	0x01CB4108 LDR X0, [X0 + 0xDC8]
	0x01CB410C BL 0x1B6E7F0
	0x01CB4110 MOVZ W8, 0x1
	0x01CB4114 STRB W8, [X20 + 0x4CE]
	0x01CB4118 LDR X1, [X21]
	0x01CB411C MOV X0, X19
	0x01CB4120 BL 0x208FDE8
	0x01CB4124 STR X0, [X19 + 0x30]
	0x01CB4128 LDP X20, X19, [X31 + 0x10]
	0x01CB412C LDP X30, X21, [X31], #0x20
	0x01CB4130 RET
	0x01CB4134 STR X30, [X31 - 0x10]!
	0x01CB4138 LDR X0, [X0 + 0x20]
	0x01CB413C CBZ X0, 0x1CB414C
	0x01CB4140 MOV X2, X31
	0x01CB4144 LDR X30, [X31], #0x10
	0x01CB4148 B 0x3B3B024
	0x01CB414C BL 0x1B6EA1C
	0x01CB4150 STR X30, [X31 - 0x10]!
	0x01CB4154 LDR X0, [X0 + 0x20]
	0x01CB4158 CBZ X0, 0x1CB4170
	0x01CB415C LDR X8, [X0]
	0x01CB4160 LDR X2, [X8 + 0x2A8]
	0x01CB4164 LDR X1, [X8 + 0x2B0]
	0x01CB4168 LDR X30, [X31], #0x10
	0x01CB416C BR X2
	0x01CB4170 BL 0x1B6EA1C
	0x01CB4174 STP X30, X19, [X31 - 0x10]!
	0x01CB4178 LDR X0, [X0 + 0x28]
	0x01CB417C CBZ X0, 0x1CB41A0
	0x01CB4180 MOV W19, W1
	0x01CB4184 MOV X1, X31
	0x01CB4188 BL 0x3A9B0C0
	0x01CB418C CBZ X0, 0x1CB41A0

ISIL:
	001 Move [X31-128], D11
	002 Move [X31-120], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X29
	006 Move [X31+40], X30
	007 Move [X31+48], X28
	008 Move [X31+56], X27
	009 Move [X31+64], X26
	010 Move [X31+72], X25
	011 Move [X31+80], X24
	012 Move [X31+88], X23
	013 Move [X31+96], X22
	014 Move [X31+104], X21
	015 Move [X31+112], X20
	016 Move [X31+120], X19
	017 Move X21, 0x2571000
	018 Move W8, [X21+1237]
	019 Move X20, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {42}
	025 Move X0, 0x229C000
	026 Move X0, [X0+1136]
	027 Call 0x1B6F7F0
	028 Move X0, 0x229C000
	029 Move X0, [X0+3456]
	030 Call 0x1B6F7F0
	031 Move X0, 0x229C000
	032 Move X0, [X0+3464]
	033 Call 0x1B6F7F0
	034 Move X0, 0x229C000
	035 Move X0, [X0+1144]
	036 Call 0x1B6F7F0
	037 Move X0, 0x229C000
	038 Move X0, [X0+408]
	039 Call 0x1B6F7F0
	040 Move W8, 1
	041 Move [X21+1237], W8
	042 Compare X20, 0
	043 JumpIfEqual {344}
	044 Move X10, 0x229C000
	045 Move X8, [X20]
	046 Move X10, [X10+3456]
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Move X1, [X10]
	049 Compare X9, 0
	050 JumpIfEqual {57}
	051 Move X10, [X8+176]
	052 Add X10, X10, 8
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract X9, X9, 1
	056 Add X10, X10, 16
	057 Move X0, X20
	058 Move W2, W31
	059 Call 0x1BB5284
	060 NotImplemented "Instruction LDRSW not yet implemented."
	061 Add X8, X8, X9
	062 Add X0, X8, 312
	063 Move X28, 0x229C000
	064 Move X28, [X28+1144]
	065 Move X8, [X0]
	066 Move X1, [X0+8]
	067 Move X29, 0x229C000
	068 Move X21, 0x229C000
	069 Move X29, [X29+3464]
	070 Move X21, [X21+408]
	071 Move X0, X20
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move X8, -18911232
	074 Move X9, -18911232
	075 Move V10, [X8+3612]
	076 Move V11, [X9+2640]
	077 Move X20, X0
	078 Move X26, X31
	079 Move W27, 1
	080 Move X22, 0x2571000
	081 Compare X20, 0
	082 JumpIfEqual {363}
	083 Move X8, [X20]
	084 Move X1, [X28]
	085 NotImplemented "Instruction LDRH not yet implemented."
	086 Compare X9, 0
	087 JumpIfEqual {94}
	088 Move X10, [X8+176]
	089 Add X10, X10, 8
	090 NotImplemented "Instruction LDUR not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Subtract X9, X9, 1
	093 Add X10, X10, 16
	094 Move X0, X20
	095 Move W2, W31
	096 Call 0x1BB5284
	097 NotImplemented "Instruction LDRSW not yet implemented."
	098 Add X8, X8, X9
	099 Add X0, X8, 312
	100 Move X8, [X0]
	101 Move X1, [X0+8]
	102 Move X0, X20
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {298}
	108 Move X8, [X20]
	109 Move X1, [X29]
	110 NotImplemented "Instruction LDRH not yet implemented."
	111 Compare X9, 0
	112 JumpIfEqual {119}
	113 Move X10, [X8+176]
	114 Add X10, X10, 8
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Subtract X9, X9, 1
	118 Add X10, X10, 16
	119 Move X0, X20
	120 Move W2, W31
	121 Call 0x1BB5284
	122 NotImplemented "Instruction LDRSW not yet implemented."
	123 Add X8, X8, X9
	124 Add X0, X8, 312
	125 Move X8, [X0]
	126 Move X1, [X0+8]
	127 Move X0, X20
	128 NotImplemented "Instruction BLR not yet implemented."
	129 Move X8, [X19+88]
	130 Compare X8, 0
	131 JumpIfEqual {364}
	132 Move W9, [X8+24]
	133 NotImplemented "Instruction CMP not yet implemented."
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Add X8, X8, X26
	136 Move W9, [X19+81]
	137 Move X24, [X8+32]
	138 Move X23, X0
	139 Compare W9, 0
	140 JumpIfEqual {169}
	141 Compare X23, 0
	142 JumpIfEqual {367}
	143 Move X0, X23
	144 Call NetPlayer.get_channel, X0
	145 Move W25, W0
	146 Move X0, [X21]
	147 Move W8, [X0+224]
	148 Compare W8, 0
	149 JumpIfNotEqual {151}
	150 Call 0x1B6F8F8
	151 Move W8, [X22+1103]
	152 Compare W8, 0
	153 JumpIfNotEqual {157}
	154 Move X0, X21
	155 Call 0x1B6F7F0
	156 Move [X22+1103], W27
	157 Move X0, [X21]
	158 Move W8, [X0+224]
	159 Compare W8, 0
	160 JumpIfNotEqual {163}
	161 Call 0x1B6F8F8
	162 Move X0, [X21]
	163 Move X8, [X0+184]
	164 Move X8, [X8]
	165 Compare X8, 0
	166 JumpIfEqual {366}
	167 Move W8, [X8+272]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Compare X23, 0
	170 JumpIfEqual {377}
	171 Move X0, [X23+136]
	172 Compare X0, 0
	173 JumpIfEqual {372}
	174 Move X1, X31
	175 Call Transform.get_position, X0
	176 Move W8, [X19+80]
	177 Move V8, V0
	178 Move V9, V2
	179 Compare W8, 0
	180 JumpIfEqual {190}
	181 Move X0, X19
	182 Move X1, X31
	183 Call Component.get_transform, X0
	184 Compare X0, 0
	185 JumpIfEqual {376}
	186 Move X1, X31
	187 Call Transform.get_position, X0
	188 Subtract S8, S8, S0
	189 Subtract S9, S9, S2
	190 Move X0, X23
	191 Call NetPlayer.get_isDie, X0
	192 Compare X24, 0
	193 JumpIfEqual {374}
	194 And W1, W0, 1
	195 Move X0, X24
	196 Call MapIconView.SetXOut, X0, X1
	197 Move X0, X23
	198 Call NetPlayer.get_playerColor, X0
	199 Move X0, [X24+32]
	200 Compare X0, 0
	201 JumpIfEqual {373}
	202 Move X8, [X0]
	203 Move X1, [X8+688]
	204 Move X9, [X8+680]
	205 NotImplemented "Instruction BLR not yet implemented."
	206 Move X0, [X24+48]
	207 Compare X0, 0
	208 JumpIfEqual {371}
	209 Add S1, S9, S9
	210 Add S0, S8, S8
	211 Move X1, X31
	212 Call RectTransform.set_anchoredPosition, X0, X1
	213 Move X0, X23
	214 Call NetPlayer.get_isDie, X0
	215 Move X25, [X24+48]
	216 Move TEMP, X0
	217 And TEMP, TEMP, 1
	218 Compare TEMP, 1
	219 JumpIfNotEqual {242}
	220 Move X8, 0x2571000
	221 Move W8, [X8+1108]
	222 Compare W8, 0
	223 JumpIfNotEqual {229}
	224 Move X0, 0x229C000
	225 Move X0, [X0+504]
	226 Call 0x1B6F7F0
	227 Move X8, 0x2571000
	228 Move [X8+1108], W27
	229 Compare X25, 0
	230 JumpIfEqual {382}
	231 Move X8, 0x229C000
	232 Move X8, [X8+504]
	233 Move X8, [X8]
	234 Move X8, [X8+184]
	235 Move S2, [X8+8]
	236 Move S3, [X8+12]
	237 Move S0, [X8]
	238 Move S1, [X8+4]
	239 Move X0, X25
	240 Move X1, X31
	241 Call Transform.set_localRotation, X0, X1
	242 Move X0, [X23+136]
	243 Compare X0, 0
	244 JumpIfEqual {379}
	245 Move X1, X31
	246 Call Transform.get_rotation, X0
	247 Move X0, X31
	248 Call Quaternion.Internal_ToEulerRad, X0
	249 Multiply S1, S1, S10
	250 Multiply S0, S0, S10
	251 Multiply S2, S2, S10
	252 Move X0, X31
	253 Call Quaternion.Internal_MakePositive, X0
	254 Multiply S2, S1, S11
	255 Move S0, W31
	256 Move S1, W31
	257 Move X0, X31
	258 Call Quaternion.Internal_FromEulerRad, X0
	259 Compare X25, 0
	260 JumpIfEqual {378}
	261 Move X0, X25
	262 Move X1, X31
	263 Call Transform.set_localRotation, X0, X1
	264 Move X0, X24
	265 Move X1, X31
	266 Call Component.get_gameObject, X0
	267 Compare X0, 0
	268 JumpIfEqual {370}
	269 Move X1, X31
	270 Call GameObject.get_activeSelf, X0
	271 Move TEMP, X0
	272 And TEMP, TEMP, 1
	273 Compare TEMP, 1
	274 JumpIfEqual {283}
	275 Move X0, X24
	276 Move X1, X31
	277 Call Component.get_gameObject, X0
	278 Compare X0, 0
	279 JumpIfEqual {380}
	280 Move W1, 1
	281 Move X2, X31
	282 Call GameObject.SetActive, X0, X1
	283 Move X0, [X23+64]
	284 Compare X0, 0
	285 JumpIfEqual {375}
	286 Move X1, X31
	287 Call NetworkObject.get_HasInputAuthority, X0
	288 Move TEMP, X0
	289 And TEMP, TEMP, 1
	290 Compare TEMP, 1
	291 JumpIfNotEqual {297}
	292 Move X0, [X24+48]
	293 Compare X0, 0
	294 JumpIfEqual {381}
	295 Move X1, X31
	296 Call Transform.SetAsLastSibling, X0
	297 Add X26, X26, 1
	298 Move X22, X31
	299 Move W21, 5
	300 Compare X20, 0
	301 JumpIfEqual {325}
	302 Move X8, [X20]
	303 Move X10, 0x229C000
	304 NotImplemented "Instruction LDRH not yet implemented."
	305 Move X10, [X10+1136]
	306 Move X1, [X10]
	307 Compare X9, 0
	308 JumpIfEqual {315}
	309 Move X10, [X8+176]
	310 Add X10, X10, 8
	311 NotImplemented "Instruction LDUR not yet implemented."
	312 NotImplemented "Instruction CMP not yet implemented."
	313 Subtract X9, X9, 1
	314 Add X10, X10, 16
	315 Move X0, X20
	316 Move W2, W31
	317 Call 0x1BB5284
	318 NotImplemented "Instruction LDRSW not yet implemented."
	319 Add X8, X8, X9
	320 Add X0, X8, 312
	321 Move X8, [X0]
	322 Move X1, [X0+8]
	323 Move X0, X20
	324 NotImplemented "Instruction BLR not yet implemented."
	325 Compare X22, 0
	326 JumpIfNotEqual {368}
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Compare W21, 0
	329 JumpIfNotEqual {345}
	330 Move X8, [X19+88]
	331 Compare X8, 0
	332 JumpIfEqual {344}
	333 And X20, X26, 0
	334 Move W9, [X8+24]
	335 NotImplemented "Instruction CMP not yet implemented."
	336 NotImplemented "Instruction CMP not yet implemented."
	337 Add X8, X8, X20
	338 Move X1, [X8+32]
	339 Call MapView.DeactivateMapIcon, X0, X1
	340 Move X8, [X19+88]
	341 Add X20, X20, 1
	342 Compare X8, 0
	343 JumpIfNotEqual {334}
	344 Call 0x1B6FA1C
	345 Move X20, [X31+112]
	346 Move X19, [X31+120]
	347 Move X22, [X31+96]
	348 Move X21, [X31+104]
	349 Move X24, [X31+80]
	350 Move X23, [X31+88]
	351 Move X26, [X31+64]
	352 Move X25, [X31+72]
	353 Move X28, [X31+48]
	354 Move X27, [X31+56]
	355 Move X29, [X31+32]
	356 Move X30, [X31+40]
	357 Move D9, [X31+16]
	358 Move D8, [X31+24]
	359 Move D11, [X31+128]
	360 Move D10, [X31+136]
	361 Return 
	362 Call 0x1B6FA24
	363 Call 0x1B6FA1C
	364 Call 0x1B6FA1C
	365 Call 0x1B6FA24
	366 Call 0x1B6FA1C
	367 Call 0x1B6FA1C
	368 Move X0, X22
	369 Call 0x1B6FA14
	370 Call 0x1B6FA1C
	371 Call 0x1B6FA1C
	372 Call 0x1B6FA1C
	373 Call 0x1B6FA1C
	374 Call 0x1B6FA1C
	375 Call 0x1B6FA1C
	376 Call 0x1B6FA1C
	377 Call 0x1B6FA1C
	378 Call 0x1B6FA1C
	379 Call 0x1B6FA1C
	380 Call 0x1B6FA1C
	381 Call 0x1B6FA1C
	382 Call 0x1B6FA1C
	383 Move X21, X0
	384 Move X26, X31
	385 Move X21, X0
	386 NotImplemented "Instruction CMP not yet implemented."
	387 Move X0, X21
	388 Call 0x3D1A840
	389 Move X22, [X0]
	390 Call 0x3D1A850
	391 Move W21, W31
	392 Compare X20, 0
	393 JumpIfNotEqual {302}
	394 Move X22, X31
	395 Move X21, X0
	396 Compare X20, 0
	397 JumpIfEqual {421}
	398 Move X8, [X20]
	399 Move X10, 0x229B000
	400 NotImplemented "Instruction LDRH not yet implemented."
	401 Move X10, [X10+1136]
	402 Move X1, [X10]
	403 Compare X9, 0
	404 JumpIfEqual {411}
	405 Move X10, [X8+176]
	406 Add X10, X10, 8
	407 NotImplemented "Instruction LDUR not yet implemented."
	408 NotImplemented "Instruction CMP not yet implemented."
	409 Subtract X9, X9, 1
	410 Add X10, X10, 16
	411 Move X0, X20
	412 Move W2, W31
	413 Call 0x1BB5284
	414 NotImplemented "Instruction LDRSW not yet implemented."
	415 Add X8, X8, X9
	416 Add X0, X8, 312
	417 Move X8, [X0]
	418 Move X1, [X0+8]
	419 Move X0, X20
	420 NotImplemented "Instruction BLR not yet implemented."
	421 Compare X22, 0
	422 JumpIfNotEqual {425}
	423 Move X0, X21
	424 Call 0x1C8518C
	425 Move X0, X22
	426 Call 0x1B6FA14
	427 Call 0x18F56A8

Method: System.Void .ctor()

Disassembly:
	0x01CB58AC ADD X8, X31, 0x0
	0x01CB58B0 MOV X1, X31
	0x01CB58B4 BL 0x3AA7294
	0x01CB58B8 LDP V0, V1, [X31]
	0x01CB58BC LDP V2, V3, [X31 + 0x20]
	0x01CB58C0 ADD X0, X31, 0x40

ISIL:
	001 Move W8, 257
	002 Move W9, 0x42480000
	003 Move X1, X31
	004 NotImplemented "Instruction STRH not yet implemented."
	005 Move [X0+84], W9
	006 Call MonoBehaviour..ctor, X0
	007 Return 

