Type: AnimalCompany.MapView

Method: System.Void Awake()

Disassembly:
	0x01DAF630 MOVZ W8, 0x1
	0x01DAF634 STRB W8, [X21 + 0x787]
	0x01DAF638 LDR X0, [X20]
	0x01DAF63C LDR W8, [X0 + 0xE0]
	0x01DAF640 CBNZ W8, 0x1DAF64C
	0x01DAF644 BL 0x1C16DFC
	0x01DAF648 LDR X0, [X20]
	0x01DAF64C LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call MapView.SetupMobIconPool, X0
	005 Move X0, X19
	006 Call MapView.SetupLootIconPool, X0
	007 Move X0, X19
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Call MapView.SetupPlayerIconPool, X0
	011 Return 

Method: System.Void SetupPlayerIconPool()

Disassembly:
	0x01DAF958 BL 0x1C16CF4
	0x01DAF95C ADRP X0, 0x2345000
	0x01DAF960 LDR X0, [X0 + 0x178]
	0x01DAF964 BL 0x1C16CF4
	0x01DAF968 ADRP X0, 0x2348000
	0x01DAF96C LDR X0, [X0 + 0x948]
	0x01DAF970 BL 0x1C16CF4
	0x01DAF974 ADRP X0, 0x2348000
	0x01DAF978 LDR X0, [X0 + 0x950]
	0x01DAF97C BL 0x1C16CF4
	0x01DAF980 MOVZ W8, 0x1
	0x01DAF984 STRB W8, [X21 + 0xAE4]
	0x01DAF988 LDR X0, [X20]
	0x01DAF98C LDR W8, [X0 + 0xE0]
	0x01DAF990 CBNZ W8, 0x1DAF998
	0x01DAF994 BL 0x1C16DFC
	0x01DAF998 ADRP X21, 0x2629000
	0x01DAF99C LDRB W8, [X21 + 0x787]
	0x01DAF9A0 CBNZ W8, 0x1DAF9B8
	0x01DAF9A4 ADRP X0, 0x2344000
	0x01DAF9A8 LDR X0, [X0 + 0x648]
	0x01DAF9AC BL 0x1C16CF4
	0x01DAF9B0 MOVZ W8, 0x1
	0x01DAF9B4 STRB W8, [X21 + 0x787]
	0x01DAF9B8 LDR X0, [X20]
	0x01DAF9BC LDR W8, [X0 + 0xE0]
	0x01DAF9C0 CBNZ W8, 0x1DAF9CC
	0x01DAF9C4 BL 0x1C16DFC
	0x01DAF9C8 LDR X0, [X20]
	0x01DAF9CC LDR X8, [X0 + 0xB8]
	0x01DAF9D0 LDR X8, [X8]
	0x01DAF9D4 CBZ X8, 0x1DAFA78
	0x01DAF9D8 LDR X8, [X8 + 0xE0]
	0x01DAF9DC CBZ X8, 0x1DAFA78
	0x01DAF9E0 LDR X8, [X8 + 0x68]
	0x01DAF9E4 CBZ X8, 0x1DAFA78
	0x01DAF9E8 ADRP X9, 0x2345000
	0x01DAF9EC LDR X9, [X9 + 0x178]
	0x01DAF9F0 LDR X0, [X8 + 0x48]
	0x01DAF9F4 LDR X1, [X9]
	0x01DAF9F8 BL 0x2651A74
	0x01DAF9FC LDR X8, [X19 + 0x58]
	0x01DAFA00 CBZ X8, 0x1DAFA78
	0x01DAFA04 ADRP X9, 0x2348000
	0x01DAFA08 ADRP X10, 0x2348000
	0x01DAFA0C LDR X9, [X9 + 0x950]
	0x01DAFA10 LDR X10, [X10 + 0x948]
	0x01DAFA14 LDR X11, [X8]
	0x01DAFA18 ANDS W31, W0, 0x1
	0x01DAFA1C FMOV S0, W31
	0x01DAFA20 CSEL X9, X9, X10, NE
	0x01DAFA24 LDR X1, [X9]
	0x01DAFA28 LDR X9, [X11 + 0x558]
	0x01DAFA2C LDR X2, [X11 + 0x560]
	0x01DAFA30 FMOV S1, 1
	0x01DAFA34 MOV X0, X8
	0x01DAFA38 FCSEL S8, S1, S0, NE
	0x01DAFA3C FCSEL S9, S0, S1, NE
	0x01DAFA40 BLR X9
	0x01DAFA44 LDR X0, [X19 + 0x58]
	0x01DAFA48 CBZ X0, 0x1DAFA78
	0x01DAFA4C LDR X8, [X0]
	0x01DAFA50 LDP X20, X19, [X31 + 0x20]
	0x01DAFA54 LDP X30, X21, [X31 + 0x10]
	0x01DAFA58 FMOV S2, W31
	0x01DAFA5C LDR X2, [X8 + 0x2A8]
	0x01DAFA60 LDR X1, [X8 + 0x2B0]
	0x01DAFA64 FMOV S3, 1
	0x01DAFA68 MOV V0.16B, V9.16B
	0x01DAFA6C MOV V1.16B, V8.16B
	0x01DAFA70 LDP D9, D8, [X31], #0x30
	0x01DAFA74 BR X2
	0x01DAFA78 BL 0x1C16F20
	0x01DAFA7C SUB X31, X31, 0x30
	0x01DAFA80 STP X30, X21, [X31 + 0x10]
	0x01DAFA84 STP X20, X19, [X31 + 0x20]
	0x01DAFA88 ADRP X21, 0x2629000
	0x01DAFA8C ADRP X20, 0x2344000
	0x01DAFA90 LDRB W8, [X21 + 0xAE5]
	0x01DAFA94 LDR X20, [X20 + 0x648]
	0x01DAFA98 MOV X19, X0
	0x01DAFA9C TBNZ X8, 0x0, 0x1DAFACC
	0x01DAFAA0 ADRP X0, 0x2344000
	0x01DAFAA4 LDR X0, [X0 + 0x648]
	0x01DAFAA8 BL 0x1C16CF4
	0x01DAFAAC ADRP X0, 0x2345000
	0x01DAFAB0 LDR X0, [X0 + 0xB50]
	0x01DAFAB4 BL 0x1C16CF4
	0x01DAFAB8 ADRP X0, 0x2348000
	0x01DAFABC LDR X0, [X0 + 0x958]
	0x01DAFAC0 BL 0x1C16CF4
	0x01DAFAC4 MOVZ W8, 0x1
	0x01DAFAC8 STRB W8, [X21 + 0xAE5]
	0x01DAFACC LDR X0, [X20]
	0x01DAFAD0 LDR X19, [X19 + 0x50]
	0x01DAFAD4 LDR W8, [X0 + 0xE0]
	0x01DAFAD8 CBNZ W8, 0x1DAFAE0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x262A000
	012 Move X21, 0x2349000
	013 Move W8, [X20+2777]
	014 Move X21, [X21+2240]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x2349000
	021 Move X0, [X0+2248]
	022 Call 0x1C17CF4
	023 Move X0, 0x2349000
	024 Move X0, [X0+2240]
	025 Call 0x1C17CF4
	026 Move X0, 0x2349000
	027 Move X0, [X0+464]
	028 Call 0x1C17CF4
	029 Move X0, 0x2345000
	030 Move X0, [X0+1432]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+2777], W8
	034 Move X0, [X21]
	035 Move W1, 12
	036 Call 0x1C17D6C
	037 Move [X19+88], X0
	038 Compare X0, 0
	039 JumpIfEqual {101}
	040 Move X23, 0x2345000
	041 Move X24, 0x2349000
	042 Move X25, 0x2349000
	043 Move X23, [X23+1432]
	044 Move X24, [X24+464]
	045 Move X25, [X25+2248]
	046 Move X20, X0
	047 Move W26, 4
	048 NotImplemented "Instruction LDRSW not yet implemented."
	049 Subtract X27, X26, 4
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, [X19+32]
	052 Compare X0, 0
	053 JumpIfEqual {101}
	054 Move X1, X31
	055 Call Component.get_gameObject, X0
	056 Move X8, [X19+56]
	057 Compare X8, 0
	058 JumpIfEqual {101}
	059 Move X21, X0
	060 Move X0, X8
	061 Move X1, X31
	062 Call Component.get_transform, X0
	063 Move X8, [X23]
	064 Move X22, X0
	065 Move W9, [X8+224]
	066 Compare W9, 0
	067 JumpIfNotEqual {70}
	068 Move X0, X8
	069 Call 0x1C17DFC
	070 Move X2, [X24]
	071 Move X0, X21
	072 Move X1, X22
	073 Call 0x222E488, X0, X1
	074 Compare X0, 0
	075 JumpIfEqual {101}
	076 Move X1, [X25]
	077 Call 0x21E62E4, X0
	078 Move X21, X0
	079 Compare X0, 0
	080 JumpIfEqual {87}
	081 Move X8, [X20]
	082 Move X0, X21
	083 Move X1, [X8+64]
	084 Call 0x1C17E00
	085 Compare X0, 0
	086 JumpIfEqual {114}
	087 Move W8, [X20+24]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move [X20], X21
	090 Move X8, [X19+88]
	091 Compare X8, 0
	092 JumpIfEqual {101}
	093 Move W9, [X8+24]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X1, [X8]
	096 Call MapView.DeactivateMapIcon, X0, X1
	097 Move X20, [X19+88]
	098 Add X26, X26, 1
	099 Compare X20, 0
	100 JumpIfNotEqual {48}
	101 Call 0x1C17F20
	102 Move X20, [X31+64]
	103 Move X19, [X31+72]
	104 Move X22, [X31+48]
	105 Move X21, [X31+56]
	106 Move X24, [X31+32]
	107 Move X23, [X31+40]
	108 Move X26, [X31+16]
	109 Move X25, [X31+24]
	110 Move X30, [X31+80]
	111 Move X27, [X31+88]
	112 Return 
	113 Call 0x1C17F28
	114 Call 0x1C17F44
	115 Move X1, X31
	116 Call 0x1C17DEC

Method: System.Void SetupMobIconPool()

Disassembly:
	0x01DAF650 LDR X8, [X8]
	0x01DAF654 CBZ X8, 0x1DAF6D0
	0x01DAF658 LDR X8, [X8 + 0xF0]
	0x01DAF65C CBZ X8, 0x1DAF6D0
	0x01DAF660 LDR X0, [X8 + 0x48]
	0x01DAF664 ADRP X8, 0x2345000
	0x01DAF668 LDR X8, [X8 + 0x1F8]
	0x01DAF66C LDR X1, [X8]
	0x01DAF670 BL 0x265C594
	0x01DAF674 MOV X19, X0
	0x01DAF678 ADRP X8, 0x2348000
	0x01DAF67C LDR X8, [X8 + 0x8F0]
	0x01DAF680 LDR X8, [X8]
	0x01DAF684 LDR X8, [X8 + 0xB8]
	0x01DAF688 LDR X8, [X8]
	0x01DAF68C CBZ X8, 0x1DAF6D0
	0x01DAF690 ADRP X9, 0x2348000
	0x01DAF694 LDR X9, [X9 + 0x920]
	0x01DAF698 LDR X20, [X8 + 0x38]
	0x01DAF69C MOV X1, X19
	0x01DAF6A0 MOV X2, X31
	0x01DAF6A4 LDR X0, [X9]
	0x01DAF6A8 BL 0x321B938
	0x01DAF6AC CBZ X20, 0x1DAF6D0
	0x01DAF6B0 LDR X8, [X20]
	0x01DAF6B4 MOV X1, X0
	0x01DAF6B8 MOV X0, X20
	0x01DAF6BC LDP X20, X19, [X31 + 0x10]
	0x01DAF6C0 LDR X3, [X8 + 0x558]
	0x01DAF6C4 LDR X2, [X8 + 0x560]
	0x01DAF6C8 LDP X30, X21, [X31], #0x20
	0x01DAF6CC BR X3
	0x01DAF6D0 BL 0x1C16F20
	0x01DAF6D4 STP D11, D10, [X31 - 0x50]!
	0x01DAF6D8 STP D9, D8, [X31 + 0x10]
	0x01DAF6DC STR X30, [X31 + 0x20]
	0x01DAF6E0 STP X22, X21, [X31 + 0x30]
	0x01DAF6E4 STP X20, X19, [X31 + 0x40]
	0x01DAF6E8 ADRP X22, 0x2629000
	0x01DAF6EC ADRP X20, 0x2344000
	0x01DAF6F0 ADRP X21, 0x2344000
	0x01DAF6F4 LDRB W8, [X22 + 0xAE3]
	0x01DAF6F8 LDR X20, [X20 + 0x988]
	0x01DAF6FC LDR X21, [X21 + 0x648]
	0x01DAF700 MOV X19, X0
	0x01DAF704 TBNZ X8, 0x0, 0x1DAF770
	0x01DAF708 ADRP X0, 0x2344000
	0x01DAF70C LDR X0, [X0 + 0x648]
	0x01DAF710 BL 0x1C16CF4
	0x01DAF714 ADRP X0, 0x2345000
	0x01DAF718 LDR X0, [X0 + 0xF30]
	0x01DAF71C BL 0x1C16CF4
	0x01DAF720 ADRP X0, 0x2345000
	0x01DAF724 LDR X0, [X0 + 0x1F8]
	0x01DAF728 BL 0x1C16CF4
	0x01DAF72C ADRP X0, 0x2348000
	0x01DAF730 LDR X0, [X0 + 0x928]
	0x01DAF734 BL 0x1C16CF4
	0x01DAF738 ADRP X0, 0x2348000
	0x01DAF73C LDR X0, [X0 + 0x930]
	0x01DAF740 BL 0x1C16CF4
	0x01DAF744 ADRP X0, 0x2348000
	0x01DAF748 LDR X0, [X0 + 0x938]
	0x01DAF74C BL 0x1C16CF4
	0x01DAF750 ADRP X0, 0x2348000
	0x01DAF754 LDR X0, [X0 + 0x940]
	0x01DAF758 BL 0x1C16CF4
	0x01DAF75C ADRP X0, 0x2344000
	0x01DAF760 LDR X0, [X0 + 0x988]
	0x01DAF764 BL 0x1C16CF4
	0x01DAF768 MOVZ W8, 0x1
	0x01DAF76C STRB W8, [X22 + 0xAE3]
	0x01DAF770 LDR X0, [X21]
	0x01DAF774 LDR X20, [X20]
	0x01DAF778 LDR W8, [X0 + 0xE0]
	0x01DAF77C CBNZ W8, 0x1DAF784
	0x01DAF780 BL 0x1C16DFC
	0x01DAF784 ADRP X22, 0x2629000
	0x01DAF788 LDRB W8, [X22 + 0x787]
	0x01DAF78C CBNZ W8, 0x1DAF7A4
	0x01DAF790 ADRP X0, 0x2344000
	0x01DAF794 LDR X0, [X0 + 0x648]
	0x01DAF798 BL 0x1C16CF4
	0x01DAF79C MOVZ W8, 0x1
	0x01DAF7A0 STRB W8, [X22 + 0x787]
	0x01DAF7A4 LDR X0, [X21]
	0x01DAF7A8 LDR W8, [X0 + 0xE0]
	0x01DAF7AC CBNZ W8, 0x1DAF7B8
	0x01DAF7B0 BL 0x1C16DFC
	0x01DAF7B4 LDR X0, [X21]
	0x01DAF7B8 LDR X8, [X0 + 0xB8]
	0x01DAF7BC LDR X8, [X8]
	0x01DAF7C0 CBZ X8, 0x1DAF928
	0x01DAF7C4 LDR X8, [X8 + 0xE8]
	0x01DAF7C8 CBZ X8, 0x1DAF928
	0x01DAF7CC LDR X8, [X8 + 0x48]
	0x01DAF7D0 CBZ X8, 0x1DAF928

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x262A000
	012 Move X21, 0x2349000
	013 Move W8, [X20+2778]
	014 Move X21, [X21+2240]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x2349000
	021 Move X0, [X0+2248]
	022 Call 0x1C17CF4
	023 Move X0, 0x2349000
	024 Move X0, [X0+2240]
	025 Call 0x1C17CF4
	026 Move X0, 0x2349000
	027 Move X0, [X0+464]
	028 Call 0x1C17CF4
	029 Move X0, 0x2345000
	030 Move X0, [X0+1432]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+2778], W8
	034 Move X0, [X21]
	035 Move W1, 15
	036 Call 0x1C17D6C
	037 Move [X19+96], X0
	038 Compare X0, 0
	039 JumpIfEqual {101}
	040 Move X23, 0x2345000
	041 Move X24, 0x2349000
	042 Move X25, 0x2349000
	043 Move X23, [X23+1432]
	044 Move X24, [X24+464]
	045 Move X25, [X25+2248]
	046 Move X20, X0
	047 Move W26, 4
	048 NotImplemented "Instruction LDRSW not yet implemented."
	049 Subtract X27, X26, 4
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, [X19+40]
	052 Compare X0, 0
	053 JumpIfEqual {101}
	054 Move X1, X31
	055 Call Component.get_gameObject, X0
	056 Move X8, [X19+56]
	057 Compare X8, 0
	058 JumpIfEqual {101}
	059 Move X21, X0
	060 Move X0, X8
	061 Move X1, X31
	062 Call Component.get_transform, X0
	063 Move X8, [X23]
	064 Move X22, X0
	065 Move W9, [X8+224]
	066 Compare W9, 0
	067 JumpIfNotEqual {70}
	068 Move X0, X8
	069 Call 0x1C17DFC
	070 Move X2, [X24]
	071 Move X0, X21
	072 Move X1, X22
	073 Call 0x222E488, X0, X1
	074 Compare X0, 0
	075 JumpIfEqual {101}
	076 Move X1, [X25]
	077 Call 0x21E62E4, X0
	078 Move X21, X0
	079 Compare X0, 0
	080 JumpIfEqual {87}
	081 Move X8, [X20]
	082 Move X0, X21
	083 Move X1, [X8+64]
	084 Call 0x1C17E00
	085 Compare X0, 0
	086 JumpIfEqual {114}
	087 Move W8, [X20+24]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move [X20], X21
	090 Move X8, [X19+96]
	091 Compare X8, 0
	092 JumpIfEqual {101}
	093 Move W9, [X8+24]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X1, [X8]
	096 Call MapView.DeactivateMapIcon, X0, X1
	097 Move X20, [X19+96]
	098 Add X26, X26, 1
	099 Compare X20, 0
	100 JumpIfNotEqual {48}
	101 Call 0x1C17F20
	102 Move X20, [X31+64]
	103 Move X19, [X31+72]
	104 Move X22, [X31+48]
	105 Move X21, [X31+56]
	106 Move X24, [X31+32]
	107 Move X23, [X31+40]
	108 Move X26, [X31+16]
	109 Move X25, [X31+24]
	110 Move X30, [X31+80]
	111 Move X27, [X31+88]
	112 Return 
	113 Call 0x1C17F28
	114 Call 0x1C17F44
	115 Move X1, X31
	116 Call 0x1C17DEC

Method: System.Void SetupLootIconPool()

Disassembly:
	0x01DAF7D4 LDR W8, [X8 + 0x4C]
	0x01DAF7D8 CMP W8, 0x1
	0x01DAF7DC B.EQ 0x1DAF804
	0x01DAF7E0 CMP W8, 0x3
	0x01DAF7E4 B.EQ 0x1DAF820
	0x01DAF7E8 CMP W8, 0x2
	0x01DAF7EC B.NE 0x1DAF810
	0x01DAF7F0 ADRP X8, 0x2348000
	0x01DAF7F4 LDR X8, [X8 + 0x938]
	0x01DAF7F8 FMOV S9, 1
	0x01DAF7FC FMOV S8, W31
	0x01DAF800 B 0x1DAF830
	0x01DAF804 ADRP X8, 0x2348000
	0x01DAF808 LDR X8, [X8 + 0x940]
	0x01DAF80C LDR X20, [X8]
	0x01DAF810 FMOV S8, 1
	0x01DAF814 FMOV S9, 1
	0x01DAF818 FMOV S10, 1
	0x01DAF81C B 0x1DAF838
	0x01DAF820 ADRP X8, 0x2348000
	0x01DAF824 LDR X8, [X8 + 0x930]
	0x01DAF828 FMOV S8, 1
	0x01DAF82C FMOV S9, W31
	0x01DAF830 LDR X20, [X8]
	0x01DAF834 FMOV S10, W31
	0x01DAF838 LDR W8, [X0 + 0xE0]
	0x01DAF83C FMOV S11, 1
	0x01DAF840 CBNZ W8, 0x1DAF848
	0x01DAF844 BL 0x1C16DFC
	0x01DAF848 LDRB W8, [X22 + 0x787]
	0x01DAF84C CBNZ W8, 0x1DAF864
	0x01DAF850 ADRP X0, 0x2344000
	0x01DAF854 LDR X0, [X0 + 0x648]
	0x01DAF858 BL 0x1C16CF4
	0x01DAF85C MOVZ W8, 0x1
	0x01DAF860 STRB W8, [X22 + 0x787]
	0x01DAF864 LDR X0, [X21]
	0x01DAF868 LDR W8, [X0 + 0xE0]
	0x01DAF86C CBNZ W8, 0x1DAF878
	0x01DAF870 BL 0x1C16DFC
	0x01DAF874 LDR X0, [X21]
	0x01DAF878 LDR X8, [X0 + 0xB8]
	0x01DAF87C LDR X8, [X8]
	0x01DAF880 CBZ X8, 0x1DAF928
	0x01DAF884 LDR X8, [X8 + 0xE8]
	0x01DAF888 CBZ X8, 0x1DAF928
	0x01DAF88C ADRP X9, 0x2345000
	0x01DAF890 LDR X9, [X9 + 0x1F8]
	0x01DAF894 LDR X0, [X8 + 0x50]
	0x01DAF898 LDR X1, [X9]
	0x01DAF89C BL 0x265C594
	0x01DAF8A0 MOV X1, X31
	0x01DAF8A4 MOV X21, X0
	0x01DAF8A8 BL 0x32277A8
	0x01DAF8AC TBNZ X0, 0x0, 0x1DAF8D0
	0x01DAF8B0 ADRP X8, 0x2348000
	0x01DAF8B4 LDR X8, [X8 + 0x928]
	0x01DAF8B8 MOV X0, X20
	0x01DAF8BC MOV X2, X21
	0x01DAF8C0 MOV X3, X31
	0x01DAF8C4 LDR X1, [X8]
	0x01DAF8C8 BL 0x32274B8
	0x01DAF8CC MOV X20, X0
	0x01DAF8D0 LDR X0, [X19 + 0x48]
	0x01DAF8D4 CBZ X0, 0x1DAF928
	0x01DAF8D8 LDR X8, [X0]
	0x01DAF8DC MOV X1, X20
	0x01DAF8E0 LDR X9, [X8 + 0x558]
	0x01DAF8E4 LDR X2, [X8 + 0x560]
	0x01DAF8E8 BLR X9
	0x01DAF8EC LDR X0, [X19 + 0x48]
	0x01DAF8F0 CBZ X0, 0x1DAF928
	0x01DAF8F4 LDR X8, [X0]
	0x01DAF8F8 MOV V0.16B, V8.16B
	0x01DAF8FC MOV V1.16B, V9.16B
	0x01DAF900 LDP X20, X19, [X31 + 0x40]
	0x01DAF904 LDR X2, [X8 + 0x2A8]
	0x01DAF908 LDR X1, [X8 + 0x2B0]
	0x01DAF90C LDP X22, X21, [X31 + 0x30]
	0x01DAF910 LDR X30, [X31 + 0x20]
	0x01DAF914 LDP D9, D8, [X31 + 0x10]
	0x01DAF918 MOV V2.16B, V10.16B
	0x01DAF91C MOV V3.16B, V11.16B
	0x01DAF920 LDP D11, D10, [X31], #0x50
	0x01DAF924 BR X2
	0x01DAF928 BL 0x1C16F20
	0x01DAF92C STP D9, D8, [X31 - 0x30]!
	0x01DAF930 STP X30, X21, [X31 + 0x10]
	0x01DAF934 STP X20, X19, [X31 + 0x20]
	0x01DAF938 ADRP X21, 0x2629000
	0x01DAF93C ADRP X20, 0x2344000
	0x01DAF940 LDRB W8, [X21 + 0xAE4]
	0x01DAF944 LDR X20, [X20 + 0x648]
	0x01DAF948 MOV X19, X0
	0x01DAF94C TBNZ X8, 0x0, 0x1DAF988
	0x01DAF950 ADRP X0, 0x2344000
	0x01DAF954 LDR X0, [X0 + 0x648]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x262A000
	012 Move X21, 0x2349000
	013 Move W8, [X20+2779]
	014 Move X21, [X21+2240]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x2349000
	021 Move X0, [X0+2248]
	022 Call 0x1C17CF4
	023 Move X0, 0x2349000
	024 Move X0, [X0+2240]
	025 Call 0x1C17CF4
	026 Move X0, 0x2349000
	027 Move X0, [X0+464]
	028 Call 0x1C17CF4
	029 Move X0, 0x2345000
	030 Move X0, [X0+1432]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+2779], W8
	034 Move X0, [X21]
	035 Move W1, 40
	036 Call 0x1C17D6C
	037 Move [X19+104], X0
	038 Compare X0, 0
	039 JumpIfEqual {101}
	040 Move X23, 0x2345000
	041 Move X24, 0x2349000
	042 Move X25, 0x2349000
	043 Move X23, [X23+1432]
	044 Move X24, [X24+464]
	045 Move X25, [X25+2248]
	046 Move X20, X0
	047 Move W26, 4
	048 NotImplemented "Instruction LDRSW not yet implemented."
	049 Subtract X27, X26, 4
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, [X19+48]
	052 Compare X0, 0
	053 JumpIfEqual {101}
	054 Move X1, X31
	055 Call Component.get_gameObject, X0
	056 Move X8, [X19+56]
	057 Compare X8, 0
	058 JumpIfEqual {101}
	059 Move X21, X0
	060 Move X0, X8
	061 Move X1, X31
	062 Call Component.get_transform, X0
	063 Move X8, [X23]
	064 Move X22, X0
	065 Move W9, [X8+224]
	066 Compare W9, 0
	067 JumpIfNotEqual {70}
	068 Move X0, X8
	069 Call 0x1C17DFC
	070 Move X2, [X24]
	071 Move X0, X21
	072 Move X1, X22
	073 Call 0x222E488, X0, X1
	074 Compare X0, 0
	075 JumpIfEqual {101}
	076 Move X1, [X25]
	077 Call 0x21E62E4, X0
	078 Move X21, X0
	079 Compare X0, 0
	080 JumpIfEqual {87}
	081 Move X8, [X20]
	082 Move X0, X21
	083 Move X1, [X8+64]
	084 Call 0x1C17E00
	085 Compare X0, 0
	086 JumpIfEqual {114}
	087 Move W8, [X20+24]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move [X20], X21
	090 Move X8, [X19+104]
	091 Compare X8, 0
	092 JumpIfEqual {101}
	093 Move W9, [X8+24]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X1, [X8]
	096 Call MapView.DeactivateMapIcon, X0, X1
	097 Move X20, [X19+104]
	098 Add X26, X26, 1
	099 Compare X20, 0
	100 JumpIfNotEqual {48}
	101 Call 0x1C17F20
	102 Move X20, [X31+64]
	103 Move X19, [X31+72]
	104 Move X22, [X31+48]
	105 Move X21, [X31+56]
	106 Move X24, [X31+32]
	107 Move X23, [X31+40]
	108 Move X26, [X31+16]
	109 Move X25, [X31+24]
	110 Move X30, [X31+80]
	111 Move X27, [X31+88]
	112 Return 
	113 Call 0x1C17F28
	114 Call 0x1C17F44
	115 Move X1, X31
	116 Call 0x1C17DEC

Method: System.Void DeactivateMapIcon(AnimalCompany.MapIconView icon)

Disassembly:
	0x01DAFADC BL 0x1C16DFC
	0x01DAFAE0 ADRP X21, 0x2629000
	0x01DAFAE4 LDRB W8, [X21 + 0x787]
	0x01DAFAE8 CBNZ W8, 0x1DAFB00
	0x01DAFAEC ADRP X0, 0x2344000
	0x01DAFAF0 LDR X0, [X0 + 0x648]
	0x01DAFAF4 BL 0x1C16CF4
	0x01DAFAF8 MOVZ W8, 0x1
	0x01DAFAFC STRB W8, [X21 + 0x787]
	0x01DAFB00 LDR X0, [X20]
	0x01DAFB04 LDR W8, [X0 + 0xE0]
	0x01DAFB08 CBNZ W8, 0x1DAFB14
	0x01DAFB0C BL 0x1C16DFC
	0x01DAFB10 LDR X0, [X20]
	0x01DAFB14 LDR X8, [X0 + 0xB8]
	0x01DAFB18 LDR X8, [X8]
	0x01DAFB1C CBZ X8, 0x1DAFB8C
	0x01DAFB20 LDR X8, [X8 + 0xE0]
	0x01DAFB24 CBZ X8, 0x1DAFB8C
	0x01DAFB28 LDR X8, [X8 + 0x58]
	0x01DAFB2C CBZ X8, 0x1DAFB8C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {31}
	005 Move X19, X1
	006 Move X0, X1
	007 Move X1, X31
	008 Call Component.get_gameObject, X0
	009 Compare X0, 0
	010 JumpIfEqual {31}
	011 Move X1, X31
	012 Call GameObject.get_activeSelf, X0
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {28}
	017 Move X0, X19
	018 Move X1, X31
	019 Call Component.get_gameObject, X0
	020 Compare X0, 0
	021 JumpIfEqual {31}
	022 Move W1, W31
	023 Move X2, X31
	024 Move X30, [X31+16]
	025 Move X19, [X31+24]
	026 Call GameObject.SetActive, X0, X1
	027 Return 
	028 Move X30, [X31+16]
	029 Move X19, [X31+24]
	030 Return 
	031 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x01DAFB30 LDR W8, [X8 + 0x4C]
	0x01DAFB34 ADRP X20, 0x2348000
	0x01DAFB38 LDR X20, [X20 + 0x958]
	0x01DAFB3C ADD X0, X31, 0xC
	0x01DAFB40 MOV X1, X31
	0x01DAFB44 STR W8, [X31 + 0xC]
	0x01DAFB48 BL 0x337B6E0
	0x01DAFB4C LDR X8, [X20]
	0x01DAFB50 MOV X1, X0
	0x01DAFB54 MOV X2, X31
	0x01DAFB58 MOV X0, X8
	0x01DAFB5C BL 0x321B938
	0x01DAFB60 CBZ X19, 0x1DAFB8C
	0x01DAFB64 LDR X8, [X19]
	0x01DAFB68 MOV X1, X0
	0x01DAFB6C MOV X0, X19
	0x01DAFB70 LDR X9, [X8 + 0x558]
	0x01DAFB74 LDR X2, [X8 + 0x560]
	0x01DAFB78 BLR X9
	0x01DAFB7C LDP X20, X19, [X31 + 0x20]
	0x01DAFB80 LDP X30, X21, [X31 + 0x10]
	0x01DAFB84 ADD X31, X31, 0x30
	0x01DAFB88 RET
	0x01DAFB8C BL 0x1C16F20
	0x01DAFB90 STR X30, [X31 - 0x30]!
	0x01DAFB94 STP X22, X21, [X31 + 0x10]
	0x01DAFB98 STP X20, X19, [X31 + 0x20]
	0x01DAFB9C ADRP X22, 0x2629000
	0x01DAFBA0 LDRB W8, [X22 + 0xAE6]
	0x01DAFBA4 MOV W21, W2
	0x01DAFBA8 MOV W20, W1
	0x01DAFBAC MOV X19, X0
	0x01DAFBB0 TBNZ X8, 0x0, 0x1DAFBE0
	0x01DAFBB4 ADRP X0, 0x2346000
	0x01DAFBB8 LDR X0, [X0 + 0x170]
	0x01DAFBBC BL 0x1C16CF4
	0x01DAFBC0 ADRP X0, 0x2346000
	0x01DAFBC4 LDR X0, [X0 + 0x88]
	0x01DAFBC8 BL 0x1C16CF4
	0x01DAFBCC ADRP X0, 0x2344000
	0x01DAFBD0 LDR X0, [X0 + 0x988]
	0x01DAFBD4 BL 0x1C16CF4
	0x01DAFBD8 MOVZ W8, 0x1
	0x01DAFBDC STRB W8, [X22 + 0xAE6]
	0x01DAFBE0 SUB W8, W21, 0x1
	0x01DAFBE4 CMP W8, 0x4
	0x01DAFBE8 B.HI 0x1DAFCC0
	0x01DAFBEC ADRP X9, 0xFFFFFFFFFED7E000
	0x01DAFBF0 ADD X9, X9, 0x924
	0x01DAFBF4 ADR X10, 0x10
	0x01DAFBF8 LDRB W11, [X9, X8, LSL]
	0x01DAFBFC ADD X10, X10, X11, 0x2, LSL
	0x01DAFC00 BR X10

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x262A000
	007 Move X20, 0x2345000
	008 Move W8, [X21+2780]
	009 Move X20, [X20+1432]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2345000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2780], W8
	020 Move X0, [X20]
	021 Move X20, [X19+72]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X31
	028 Move X2, X31
	029 Call Object.op_Inequality, X0, X1
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {64}
	034 Move X20, [X19+72]
	035 Move X0, X19
	036 Move X1, X31
	037 Call Component.get_transform, X0
	038 Compare X0, 0
	039 JumpIfEqual {70}
	040 Move X1, X31
	041 Call Transform.get_position, X0
	042 Move X0, X19
	043 Move X1, X31
	044 Move V8, V0
	045 Call Component.get_transform, X0
	046 Compare X0, 0
	047 JumpIfEqual {70}
	048 Move X1, X31
	049 Call Transform.get_position, X0
	050 Compare X20, 0
	051 JumpIfEqual {70}
	052 Move X0, X20
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X30, [X31+16]
	056 Move X21, [X31+24]
	057 Move S0, -2
	058 Multiply S1, S2, S0
	059 Multiply S0, S8, S0
	060 Move X1, X31
	061 Move V8, [X31+48]
	062 Call RectTransform.set_anchoredPosition, X0, X1
	063 Return 
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X30, [X31+16]
	067 Move X21, [X31+24]
	068 Move V8, [X31+48]
	069 Return 
	070 Call 0x1C17F20

Method: System.Void UpdateLootLocations(System.Collections.Generic.IEnumerable`1<AnimalCompany.GrabbableItem> items, System.Collections.Generic.IEnumerable`1<AnimalCompany.Crate> crates)

Disassembly:
	0x01DAEB74 CBNZ W8, 0x1DAEB7C
	0x01DAEB78 BL 0x1C16DFC
	0x01DAEB7C MOV X0, X20
	0x01DAEB80 MOV X1, X31
	0x01DAEB84 MOV X2, X31
	0x01DAEB88 BL 0x3C354F8
	0x01DAEB8C TBZ X0, 0x0, 0x1DAEBF0
	0x01DAEB90 LDR X20, [X19 + 0x48]
	0x01DAEB94 MOV X0, X19
	0x01DAEB98 MOV X1, X31
	0x01DAEB9C BL 0x3C32E90
	0x01DAEBA0 CBZ X0, 0x1DAEC00
	0x01DAEBA4 MOV X1, X31
	0x01DAEBA8 BL 0x3C3F58C
	0x01DAEBAC MOV X0, X19
	0x01DAEBB0 MOV X1, X31
	0x01DAEBB4 MOV V8.16B, V0.16B
	0x01DAEBB8 BL 0x3C32E90
	0x01DAEBBC CBZ X0, 0x1DAEC00
	0x01DAEBC0 MOV X1, X31
	0x01DAEBC4 BL 0x3C3F58C
	0x01DAEBC8 CBZ X20, 0x1DAEC00
	0x01DAEBCC MOV X0, X20
	0x01DAEBD0 LDP X20, X19, [X31 + 0x20]
	0x01DAEBD4 LDP X30, X21, [X31 + 0x10]
	0x01DAEBD8 FMOV S0, -2
	0x01DAEBDC FMUL S1, S2, S0
	0x01DAEBE0 FMUL S0, S8, S0
	0x01DAEBE4 MOV X1, X31
	0x01DAEBE8 LDR V8, [X31], #0x30
	0x01DAEBEC B 0x3C3E880
	0x01DAEBF0 LDP X20, X19, [X31 + 0x20]
	0x01DAEBF4 LDP X30, X21, [X31 + 0x10]
	0x01DAEBF8 LDR V8, [X31], #0x30
	0x01DAEBFC RET
	0x01DAEC00 BL 0x1C16F20
	0x01DAEC04 STP X30, X19, [X31 - 0x10]!
	0x01DAEC08 LDR X8, [X0 + 0x50]
	0x01DAEC0C CBZ X8, 0x1DAEC1C
	0x01DAEC10 LDR W0, [X8 + 0x4C]
	0x01DAEC14 LDP X30, X19, [X31], #0x10
	0x01DAEC18 RET
	0x01DAEC1C ADRP X0, 0x2345000
	0x01DAEC20 LDR X0, [X0 + 0x5B0]
	0x01DAEC24 BL 0x1C16D08
	0x01DAEC28 BL 0x1C16F10
	0x01DAEC2C MOV X19, X0
	0x01DAEC30 ADRP X0, 0x2349000
	0x01DAEC34 LDR X0, [X0 + 0x8D0]
	0x01DAEC38 BL 0x1C16D08
	0x01DAEC3C MOV X1, X0
	0x01DAEC40 MOV X0, X19
	0x01DAEC44 MOV X2, X31
	0x01DAEC48 BL 0x337DF1C
	0x01DAEC4C ADRP X0, 0x2349000
	0x01DAEC50 LDR X0, [X0 + 0x8D8]
	0x01DAEC54 BL 0x1C16D08
	0x01DAEC58 MOV X1, X0
	0x01DAEC5C MOV X0, X19
	0x01DAEC60 BL 0x1C16DEC
	0x01DAEC64 STP X30, X19, [X31 - 0x10]!
	0x01DAEC68 LDR X8, [X0 + 0x50]
	0x01DAEC6C CBZ X8, 0x1DAEC84
	0x01DAEC70 LDR W8, [X8]
	0x01DAEC74 CMP W8, 0x0
	0x01DAEC78 CSET W0, NE
	0x01DAEC7C LDP X30, X19, [X31], #0x10
	0x01DAEC80 RET
	0x01DAEC84 ADRP X0, 0x2345000
	0x01DAEC88 LDR X0, [X0 + 0x5B0]
	0x01DAEC8C BL 0x1C16D08
	0x01DAEC90 BL 0x1C16F10
	0x01DAEC94 MOV X19, X0
	0x01DAEC98 ADRP X0, 0x2349000
	0x01DAEC9C LDR X0, [X0 + 0x8E0]
	0x01DAECA0 BL 0x1C16D08
	0x01DAECA4 MOV X1, X0
	0x01DAECA8 MOV X0, X19
	0x01DAECAC MOV X2, X31
	0x01DAECB0 BL 0x337DF1C
	0x01DAECB4 ADRP X0, 0x2349000
	0x01DAECB8 LDR X0, [X0 + 0x8E8]
	0x01DAECBC BL 0x1C16D08
	0x01DAECC0 MOV X1, X0
	0x01DAECC4 MOV X0, X19
	0x01DAECC8 BL 0x1C16DEC
	0x01DAECCC STR X30, [X31 - 0x10]!
	0x01DAECD0 LDR X0, [X0 + 0x40]
	0x01DAECD4 CBZ X0, 0x1DAECE4
	0x01DAECD8 MOV X1, X31
	0x01DAECDC LDR X30, [X31], #0x10
	0x01DAECE0 B 0x1E93588
	0x01DAECE4 BL 0x1C16F20
	0x01DAECE8 MOVZ W8, 0x101
	0x01DAECEC MOVZ W9, 0x42480000
	0x01DAECF0 MOV X1, X31
	0x01DAECF4 STRH W8, [X0 + 0x50]
	0x01DAECF8 STR W9, [X0 + 0x54]
	0x01DAECFC B 0x3C36C30
	0x01DAED00 STP X30, X27, [X31 - 0x50]!
	0x01DAED04 STP X26, X25, [X31 + 0x10]
	0x01DAED08 STP X24, X23, [X31 + 0x20]
	0x01DAED0C STP X22, X21, [X31 + 0x30]
	0x01DAED10 STP X20, X19, [X31 + 0x40]
	0x01DAED14 ADRP X21, 0x262A000
	0x01DAED18 ADRP X22, 0x2349000
	0x01DAED1C ADRP X20, 0x2349000
	0x01DAED20 LDRB W8, [X21 + 0xAE0]
	0x01DAED24 LDR X22, [X22 + 0x8F0]
	0x01DAED28 LDR X20, [X20 + 0xC8]
	0x01DAED2C MOV X19, X0
	0x01DAED30 TBNZ X8, 0x0, 0x1DAEDD8
	0x01DAED34 ADRP X0, 0x2348000
	0x01DAED38 LDR X0, [X0 + 0x478]
	0x01DAED3C BL 0x1C16CF4
	0x01DAED40 ADRP X0, 0x2345000
	0x01DAED44 LDR X0, [X0 + 0x648]
	0x01DAED48 BL 0x1C16CF4
	0x01DAED4C ADRP X0, 0x2345000
	0x01DAED50 LDR X0, [X0 + 0x970]
	0x01DAED54 BL 0x1C16CF4
	0x01DAED58 ADRP X0, 0x2349000
	0x01DAED5C LDR X0, [X0 + 0xC8]
	0x01DAED60 BL 0x1C16CF4
	0x01DAED64 ADRP X0, 0x2345000
	0x01DAED68 LDR X0, [X0 + 0xDB0]
	0x01DAED6C BL 0x1C16CF4
	0x01DAED70 ADRP X0, 0x2345000
	0x01DAED74 LDR X0, [X0 + 0xDA0]
	0x01DAED78 BL 0x1C16CF4
	0x01DAED7C ADRP X0, 0x2349000
	0x01DAED80 LDR X0, [X0 + 0x8F8]
	0x01DAED84 BL 0x1C16CF4
	0x01DAED88 ADRP X0, 0x2349000
	0x01DAED8C LDR X0, [X0 + 0x900]
	0x01DAED90 BL 0x1C16CF4
	0x01DAED94 ADRP X0, 0x2349000
	0x01DAED98 LDR X0, [X0 + 0x908]
	0x01DAED9C BL 0x1C16CF4
	0x01DAEDA0 ADRP X0, 0x2349000
	0x01DAEDA4 LDR X0, [X0 + 0x910]
	0x01DAEDA8 BL 0x1C16CF4
	0x01DAEDAC ADRP X0, 0x2349000
	0x01DAEDB0 LDR X0, [X0 + 0x918]
	0x01DAEDB4 BL 0x1C16CF4
	0x01DAEDB8 ADRP X0, 0x2349000
	0x01DAEDBC LDR X0, [X0 + 0x8F0]
	0x01DAEDC0 BL 0x1C16CF4
	0x01DAEDC4 ADRP X0, 0x2349000
	0x01DAEDC8 LDR X0, [X0 + 0x600]
	0x01DAEDCC BL 0x1C16CF4
	0x01DAEDD0 MOVZ W8, 0x1
	0x01DAEDD4 STRB W8, [X21 + 0xAE0]
	0x01DAEDD8 LDR X8, [X22]
	0x01DAEDDC MOV X0, X19
	0x01DAEDE0 LDR X8, [X8 + 0xB8]
	0x01DAEDE4 STR X19, [X8]
	0x01DAEDE8 LDR X1, [X20]
	0x01DAEDEC BL 0x21A3894
	0x01DAEDF0 STR X0, [X19 + 0x60]
	0x01DAEDF4 CBZ X0, 0x1DAF2BC
	0x01DAEDF8 ADRP X23, 0x2348000
	0x01DAEDFC LDR X23, [X23 + 0x478]
	0x01DAEE00 MOV X20, X0
	0x01DAEE04 LDR X21, [X0 + 0x20]
	0x01DAEE08 ADRP X22, 0x2349000
	0x01DAEE0C LDR X0, [X23]
	0x01DAEE10 LDR X22, [X22 + 0x900]
	0x01DAEE14 BL 0x1C16F10
	0x01DAEE18 LDR X2, [X22]
	0x01DAEE1C MOV X1, X19
	0x01DAEE20 MOV X3, X31
	0x01DAEE24 MOV X22, X0
	0x01DAEE28 BL 0x2A76254
	0x01DAEE2C MOV X0, X21
	0x01DAEE30 MOV X1, X22
	0x01DAEE34 MOV X2, X31
	0x01DAEE38 BL 0x33C0DE4
	0x01DAEE3C CBZ X0, 0x1DAEE78
	0x01DAEE40 LDR X22, [X23]
	0x01DAEE44 MOV X21, X0
	0x01DAEE48 MOV X1, X22
	0x01DAEE4C BL 0x1C16E00
	0x01DAEE50 CBZ X0, 0x1DAF2D0
	0x01DAEE54 STR X0, [X20 + 0x20]
	0x01DAEE58 LDR X20, [X23]
	0x01DAEE5C MOV X0, X21
	0x01DAEE60 MOV X1, X20
	0x01DAEE64 BL 0x1C16E00
	0x01DAEE68 CBNZ X0, 0x1DAEE7C
	0x01DAEE6C MOV X0, X21
	0x01DAEE70 MOV X1, X20
	0x01DAEE74 BL 0x1C171E0
	0x01DAEE78 STR X31, [X20 + 0x20]
	0x01DAEE7C ADRP X25, 0x2345000
	0x01DAEE80 LDR X25, [X25 + 0xDA0]
	0x01DAEE84 ADRP X20, 0x2349000
	0x01DAEE88 ADRP X24, 0x2345000
	0x01DAEE8C ADRP X23, 0x2345000
	0x01DAEE90 LDR X0, [X25]
	0x01DAEE94 LDR X20, [X20 + 0x8F8]
	0x01DAEE98 LDR X24, [X24 + 0xDB0]
	0x01DAEE9C LDR X23, [X23 + 0x648]
	0x01DAEEA0 BL 0x1C16F10
	0x01DAEEA4 LDR X2, [X20]
	0x01DAEEA8 MOV X1, X19
	0x01DAEEAC MOV X3, X31
	0x01DAEEB0 MOV X20, X0
	0x01DAEEB4 BL 0x35C52F0
	0x01DAEEB8 LDR X0, [X24]
	0x01DAEEBC MOVZ W1, 0x3
	0x01DAEEC0 BL 0x1C16D6C
	0x01DAEEC4 LDR X8, [X23]
	0x01DAEEC8 MOV X21, X0
	0x01DAEECC LDR W9, [X8 + 0xE0]
	0x01DAEED0 CBNZ W9, 0x1DAEEDC
	0x01DAEED4 MOV X0, X8
	0x01DAEED8 BL 0x1C16DFC
	0x01DAEEDC ADRP X26, 0x262A000
	0x01DAEEE0 LDRB W8, [X26 + 0x787]
	0x01DAEEE4 CBNZ W8, 0x1DAEEFC
	0x01DAEEE8 ADRP X0, 0x2345000
	0x01DAEEEC LDR X0, [X0 + 0x648]
	0x01DAEEF0 BL 0x1C16CF4
	0x01DAEEF4 MOVZ W8, 0x1
	0x01DAEEF8 STRB W8, [X26 + 0x787]
	0x01DAEEFC LDR X0, [X23]
	0x01DAEF00 LDR W8, [X0 + 0xE0]
	0x01DAEF04 CBNZ W8, 0x1DAEF10
	0x01DAEF08 BL 0x1C16DFC
	0x01DAEF0C LDR X0, [X23]
	0x01DAEF10 LDR X8, [X0 + 0xB8]
	0x01DAEF14 LDR X8, [X8]
	0x01DAEF18 CBZ X8, 0x1DAF2BC
	0x01DAEF1C LDR X8, [X8 + 0xE0]
	0x01DAEF20 CBZ X8, 0x1DAF2BC
	0x01DAEF24 CBZ X21, 0x1DAF2BC
	0x01DAEF28 LDR X22, [X8 + 0x48]
	0x01DAEF2C CBZ X22, 0x1DAEF44
	0x01DAEF30 LDR X8, [X21]
	0x01DAEF34 MOV X0, X22
	0x01DAEF38 LDR X1, [X8 + 0x40]
	0x01DAEF3C BL 0x1C16E00
	0x01DAEF40 CBZ X0, 0x1DAF2C4
	0x01DAEF44 LDR W8, [X21 + 0x18]
	0x01DAEF48 CBZ W8, 0x1DAF2C0
	0x01DAEF4C STR X22, [X21 + 0x20]
	0x01DAEF50 LDRB W8, [X26 + 0x787]
	0x01DAEF54 CBNZ W8, 0x1DAEF6C
	0x01DAEF58 ADRP X0, 0x2345000
	0x01DAEF5C LDR X0, [X0 + 0x648]
	0x01DAEF60 BL 0x1C16CF4
	0x01DAEF64 MOVZ W8, 0x1
	0x01DAEF68 STRB W8, [X26 + 0x787]
	0x01DAEF6C LDR X0, [X23]
	0x01DAEF70 LDR W8, [X0 + 0xE0]
	0x01DAEF74 CBNZ W8, 0x1DAEF80
	0x01DAEF78 BL 0x1C16DFC
	0x01DAEF7C LDR X0, [X23]
	0x01DAEF80 LDR X8, [X0 + 0xB8]
	0x01DAEF84 LDR X8, [X8]
	0x01DAEF88 CBZ X8, 0x1DAF2BC
	0x01DAEF8C LDR X8, [X8 + 0xE0]
	0x01DAEF90 CBZ X8, 0x1DAF2BC
	0x01DAEF94 LDR X22, [X8 + 0x50]
	0x01DAEF98 CBZ X22, 0x1DAEFB0
	0x01DAEF9C LDR X8, [X21]
	0x01DAEFA0 MOV X0, X22
	0x01DAEFA4 LDR X1, [X8 + 0x40]
	0x01DAEFA8 BL 0x1C16E00
	0x01DAEFAC CBZ X0, 0x1DAF2C4
	0x01DAEFB0 LDR W8, [X21 + 0x18]
	0x01DAEFB4 CMP W8, 0x1
	0x01DAEFB8 B.LS 0x1DAF2C0
	0x01DAEFBC STR X22, [X21 + 0x28]
	0x01DAEFC0 LDRB W8, [X26 + 0x787]
	0x01DAEFC4 CBNZ W8, 0x1DAEFDC
	0x01DAEFC8 ADRP X0, 0x2345000
	0x01DAEFCC LDR X0, [X0 + 0x648]
	0x01DAEFD0 BL 0x1C16CF4
	0x01DAEFD4 MOVZ W8, 0x1
	0x01DAEFD8 STRB W8, [X26 + 0x787]
	0x01DAEFDC LDR X0, [X23]
	0x01DAEFE0 LDR W8, [X0 + 0xE0]
	0x01DAEFE4 CBNZ W8, 0x1DAEFF0
	0x01DAEFE8 BL 0x1C16DFC
	0x01DAEFEC LDR X0, [X23]
	0x01DAEFF0 LDR X8, [X0 + 0xB8]
	0x01DAEFF4 LDR X8, [X8]
	0x01DAEFF8 CBZ X8, 0x1DAF2BC
	0x01DAEFFC LDR X22, [X8 + 0xF0]
	0x01DAF000 CBZ X22, 0x1DAF018
	0x01DAF004 LDR X8, [X21]
	0x01DAF008 MOV X0, X22
	0x01DAF00C LDR X1, [X8 + 0x40]
	0x01DAF010 BL 0x1C16E00
	0x01DAF014 CBZ X0, 0x1DAF2C4
	0x01DAF018 LDR W8, [X21 + 0x18]
	0x01DAF01C CMP W8, 0x2
	0x01DAF020 B.LS 0x1DAF2C0
	0x01DAF024 ADRP X27, 0x2348000
	0x01DAF028 LDR X27, [X27 + 0x918]
	0x01DAF02C MOV X0, X20
	0x01DAF030 MOV X1, X21
	0x01DAF034 MOV X2, X31
	0x01DAF038 STR X22, [X21 + 0x30]
	0x01DAF03C BL 0x1D363F0
	0x01DAF040 LDR X0, [X25]
	0x01DAF044 BL 0x1C16F10
	0x01DAF048 LDR X2, [X27]
	0x01DAF04C MOV X1, X19
	0x01DAF050 MOV X3, X31
	0x01DAF054 MOV X20, X0
	0x01DAF058 BL 0x35C52F0
	0x01DAF05C LDR X0, [X24]
	0x01DAF060 MOVZ W1, 0x1
	0x01DAF064 MOVZ W22, 0x1
	0x01DAF068 BL 0x1C16D6C
	0x01DAF06C LDRB W8, [X26 + 0x787]
	0x01DAF070 MOV X21, X0
	0x01DAF074 CBNZ W8, 0x1DAF088
	0x01DAF078 ADRP X0, 0x2344000
	0x01DAF07C LDR X0, [X0 + 0x648]
	0x01DAF080 BL 0x1C16CF4
	0x01DAF084 STRB W22, [X26 + 0x787]
	0x01DAF088 LDR X0, [X23]
	0x01DAF08C LDR W8, [X0 + 0xE0]
	0x01DAF090 CBNZ W8, 0x1DAF09C
	0x01DAF094 BL 0x1C16DFC
	0x01DAF098 LDR X0, [X23]
	0x01DAF09C LDR X8, [X0 + 0xB8]
	0x01DAF0A0 LDR X8, [X8]
	0x01DAF0A4 CBZ X8, 0x1DAF2BC
	0x01DAF0A8 CBZ X21, 0x1DAF2BC
	0x01DAF0AC LDR X22, [X8 + 0xE8]
	0x01DAF0B0 CBZ X22, 0x1DAF0C8
	0x01DAF0B4 LDR X8, [X21]
	0x01DAF0B8 MOV X0, X22
	0x01DAF0BC LDR X1, [X8 + 0x40]
	0x01DAF0C0 BL 0x1C16E00
	0x01DAF0C4 CBZ X0, 0x1DAF2C4
	0x01DAF0C8 LDR W8, [X21 + 0x18]
	0x01DAF0CC CBZ W8, 0x1DAF2C0
	0x01DAF0D0 ADRP X27, 0x2348000
	0x01DAF0D4 LDR X27, [X27 + 0x908]
	0x01DAF0D8 MOV X0, X20
	0x01DAF0DC MOV X1, X21
	0x01DAF0E0 MOV X2, X31
	0x01DAF0E4 STR X22, [X21 + 0x20]
	0x01DAF0E8 BL 0x1D363F0
	0x01DAF0EC LDR X0, [X25]
	0x01DAF0F0 BL 0x1C16F10
	0x01DAF0F4 LDR X2, [X27]
	0x01DAF0F8 MOV X1, X19
	0x01DAF0FC MOV X3, X31
	0x01DAF100 MOV X20, X0
	0x01DAF104 BL 0x35C52F0
	0x01DAF108 LDR X0, [X24]
	0x01DAF10C MOVZ W1, 0x1
	0x01DAF110 MOVZ W22, 0x1
	0x01DAF114 BL 0x1C16D6C
	0x01DAF118 LDRB W8, [X26 + 0x787]
	0x01DAF11C MOV X21, X0
	0x01DAF120 CBNZ W8, 0x1DAF134
	0x01DAF124 ADRP X0, 0x2344000
	0x01DAF128 LDR X0, [X0 + 0x648]
	0x01DAF12C BL 0x1C16CF4
	0x01DAF130 STRB W22, [X26 + 0x787]
	0x01DAF134 LDR X0, [X23]
	0x01DAF138 LDR W8, [X0 + 0xE0]
	0x01DAF13C CBNZ W8, 0x1DAF148
	0x01DAF140 BL 0x1C16DFC
	0x01DAF144 LDR X0, [X23]
	0x01DAF148 LDR X8, [X0 + 0xB8]
	0x01DAF14C LDR X8, [X8]
	0x01DAF150 CBZ X8, 0x1DAF2BC
	0x01DAF154 LDR X8, [X8 + 0xE0]
	0x01DAF158 CBZ X8, 0x1DAF2BC
	0x01DAF15C CBZ X21, 0x1DAF2BC
	0x01DAF160 LDR X22, [X8 + 0x58]
	0x01DAF164 CBZ X22, 0x1DAF17C
	0x01DAF168 LDR X8, [X21]
	0x01DAF16C MOV X0, X22
	0x01DAF170 LDR X1, [X8 + 0x40]
	0x01DAF174 BL 0x1C16E00
	0x01DAF178 CBZ X0, 0x1DAF2C4
	0x01DAF17C LDR W8, [X21 + 0x18]
	0x01DAF180 CBZ W8, 0x1DAF2C0
	0x01DAF184 ADRP X27, 0x2348000
	0x01DAF188 LDR X27, [X27 + 0x910]
	0x01DAF18C MOV X0, X20
	0x01DAF190 MOV X1, X21
	0x01DAF194 MOV X2, X31
	0x01DAF198 STR X22, [X21 + 0x20]
	0x01DAF19C BL 0x1D363F0
	0x01DAF1A0 LDR X0, [X25]
	0x01DAF1A4 BL 0x1C16F10
	0x01DAF1A8 LDR X2, [X27]
	0x01DAF1AC MOV X1, X19
	0x01DAF1B0 MOV X3, X31
	0x01DAF1B4 MOV X20, X0
	0x01DAF1B8 BL 0x35C52F0
	0x01DAF1BC LDR X0, [X24]
	0x01DAF1C0 MOVZ W1, 0x1
	0x01DAF1C4 MOVZ W22, 0x1
	0x01DAF1C8 BL 0x1C16D6C
	0x01DAF1CC LDRB W8, [X26 + 0x787]
	0x01DAF1D0 MOV X21, X0
	0x01DAF1D4 CBNZ W8, 0x1DAF1E8
	0x01DAF1D8 ADRP X0, 0x2344000
	0x01DAF1DC LDR X0, [X0 + 0x648]
	0x01DAF1E0 BL 0x1C16CF4
	0x01DAF1E4 STRB W22, [X26 + 0x787]
	0x01DAF1E8 LDR X0, [X23]
	0x01DAF1EC LDR W8, [X0 + 0xE0]
	0x01DAF1F0 CBNZ W8, 0x1DAF1FC
	0x01DAF1F4 BL 0x1C16DFC
	0x01DAF1F8 LDR X0, [X23]
	0x01DAF1FC LDR X8, [X0 + 0xB8]
	0x01DAF200 LDR X8, [X8]
	0x01DAF204 CBZ X8, 0x1DAF2BC
	0x01DAF208 LDR X8, [X8 + 0xE0]
	0x01DAF20C CBZ X8, 0x1DAF2BC
	0x01DAF210 CBZ X21, 0x1DAF2BC
	0x01DAF214 LDR X22, [X8 + 0x68]
	0x01DAF218 CBZ X22, 0x1DAF230
	0x01DAF21C LDR X8, [X21]
	0x01DAF220 MOV X0, X22
	0x01DAF224 LDR X1, [X8 + 0x40]
	0x01DAF228 BL 0x1C16E00
	0x01DAF22C CBZ X0, 0x1DAF2C4
	0x01DAF230 LDR W8, [X21 + 0x18]
	0x01DAF234 CBZ W8, 0x1DAF2C0
	0x01DAF238 ADRP X24, 0x2344000
	0x01DAF23C ADRP X23, 0x2348000
	0x01DAF240 LDR X24, [X24 + 0x970]
	0x01DAF244 LDR X23, [X23 + 0x600]
	0x01DAF248 MOV X0, X20
	0x01DAF24C MOV X1, X21
	0x01DAF250 MOV X2, X31
	0x01DAF254 STR X22, [X21 + 0x20]
	0x01DAF258 BL 0x1D363F0
	0x01DAF25C LDR X0, [X24]
	0x01DAF260 LDR X19, [X19 + 0x40]
	0x01DAF264 LDR W8, [X0 + 0xE0]
	0x01DAF268 CBNZ W8, 0x1DAF270
	0x01DAF26C BL 0x1C16DFC
	0x01DAF270 MOV X0, X31
	0x01DAF274 BL 0x3C01A10
	0x01DAF278 LDR X8, [X23]
	0x01DAF27C MOV X1, X0
	0x01DAF280 MOV X2, X31
	0x01DAF284 MOV X0, X8
	0x01DAF288 BL 0x321B938
	0x01DAF28C CBZ X19, 0x1DAF2BC
	0x01DAF290 LDR X8, [X19]
	0x01DAF294 MOV X1, X0
	0x01DAF298 MOV X0, X19
	0x01DAF29C LDP X20, X19, [X31 + 0x40]
	0x01DAF2A0 LDR X3, [X8 + 0x558]
	0x01DAF2A4 LDR X2, [X8 + 0x560]
	0x01DAF2A8 LDP X22, X21, [X31 + 0x30]
	0x01DAF2AC LDP X24, X23, [X31 + 0x20]
	0x01DAF2B0 LDP X26, X25, [X31 + 0x10]
	0x01DAF2B4 LDP X30, X27, [X31], #0x50
	0x01DAF2B8 BR X3
	0x01DAF2BC BL 0x1C16F20
	0x01DAF2C0 BL 0x1C16F28
	0x01DAF2C4 BL 0x1C16F44
	0x01DAF2C8 MOV X1, X31
	0x01DAF2CC BL 0x1C16DEC
	0x01DAF2D0 MOV X0, X21
	0x01DAF2D4 MOV X1, X22
	0x01DAF2D8 BL 0x1C171E0
	0x01DAF2DC STP X30, X25, [X31 - 0x40]!
	0x01DAF2E0 STP X24, X23, [X31 + 0x10]
	0x01DAF2E4 STP X22, X21, [X31 + 0x20]
	0x01DAF2E8 STP X20, X19, [X31 + 0x30]
	0x01DAF2EC ADRP X22, 0x2629000
	0x01DAF2F0 ADRP X21, 0x2344000
	0x01DAF2F4 ADRP X20, 0x2348000
	0x01DAF2F8 ADRP X24, 0x2344000
	0x01DAF2FC LDRB W8, [X22 + 0xAE1]
	0x01DAF300 LDR X21, [X21 + 0xDA0]
	0x01DAF304 LDR X20, [X20 + 0x8F8]
	0x01DAF308 LDR X24, [X24 + 0x648]
	0x01DAF30C MOV X19, X0
	0x01DAF310 TBNZ X8, 0x0, 0x1DAF364
	0x01DAF314 ADRP X0, 0x2344000
	0x01DAF318 LDR X0, [X0 + 0x648]
	0x01DAF31C BL 0x1C16CF4
	0x01DAF320 ADRP X0, 0x2344000
	0x01DAF324 LDR X0, [X0 + 0xDA0]
	0x01DAF328 BL 0x1C16CF4
	0x01DAF32C ADRP X0, 0x2348000
	0x01DAF330 LDR X0, [X0 + 0x8F8]
	0x01DAF334 BL 0x1C16CF4
	0x01DAF338 ADRP X0, 0x2348000
	0x01DAF33C LDR X0, [X0 + 0x908]
	0x01DAF340 BL 0x1C16CF4
	0x01DAF344 ADRP X0, 0x2348000
	0x01DAF348 LDR X0, [X0 + 0x910]
	0x01DAF34C BL 0x1C16CF4
	0x01DAF350 ADRP X0, 0x2348000
	0x01DAF354 LDR X0, [X0 + 0x918]
	0x01DAF358 BL 0x1C16CF4
	0x01DAF35C MOVZ W8, 0x1
	0x01DAF360 STRB W8, [X22 + 0xAE1]
	0x01DAF364 LDR X0, [X21]
	0x01DAF368 ADRP X25, 0x2348000
	0x01DAF36C ADRP X23, 0x2348000
	0x01DAF370 ADRP X22, 0x2348000
	0x01DAF374 LDR X25, [X25 + 0x918]
	0x01DAF378 LDR X23, [X23 + 0x908]
	0x01DAF37C LDR X22, [X22 + 0x910]
	0x01DAF380 BL 0x1C16F10
	0x01DAF384 LDR X2, [X20]
	0x01DAF388 MOV X1, X19
	0x01DAF38C MOV X3, X31
	0x01DAF390 MOV X20, X0
	0x01DAF394 BL 0x35C52F0
	0x01DAF398 LDR X0, [X24]
	0x01DAF39C LDR W8, [X0 + 0xE0]
	0x01DAF3A0 CBNZ W8, 0x1DAF3A8
	0x01DAF3A4 BL 0x1C16DFC
	0x01DAF3A8 MOV X0, X20
	0x01DAF3AC MOV X1, X31
	0x01DAF3B0 BL 0x1D36978
	0x01DAF3B4 LDR X0, [X21]
	0x01DAF3B8 BL 0x1C16F10
	0x01DAF3BC LDR X2, [X25]
	0x01DAF3C0 MOV X1, X19
	0x01DAF3C4 MOV X3, X31
	0x01DAF3C8 MOV X20, X0
	0x01DAF3CC BL 0x35C52F0
	0x01DAF3D0 MOV X0, X20
	0x01DAF3D4 MOV X1, X31
	0x01DAF3D8 BL 0x1D36978
	0x01DAF3DC LDR X0, [X21]
	0x01DAF3E0 BL 0x1C16F10
	0x01DAF3E4 LDR X2, [X23]
	0x01DAF3E8 MOV X1, X19
	0x01DAF3EC MOV X3, X31
	0x01DAF3F0 MOV X20, X0
	0x01DAF3F4 BL 0x35C52F0
	0x01DAF3F8 MOV X0, X20
	0x01DAF3FC MOV X1, X31
	0x01DAF400 BL 0x1D36978
	0x01DAF404 LDR X0, [X21]
	0x01DAF408 BL 0x1C16F10
	0x01DAF40C LDR X2, [X22]
	0x01DAF410 MOV X1, X19
	0x01DAF414 MOV X3, X31
	0x01DAF418 MOV X20, X0
	0x01DAF41C BL 0x35C52F0
	0x01DAF420 MOV X0, X20
	0x01DAF424 LDP X20, X19, [X31 + 0x30]
	0x01DAF428 LDP X22, X21, [X31 + 0x20]
	0x01DAF42C LDP X24, X23, [X31 + 0x10]
	0x01DAF430 MOV X1, X31
	0x01DAF434 LDP X30, X25, [X31], #0x40
	0x01DAF438 B 0x1D36978
	0x01DAF43C STP X30, X21, [X31 - 0x20]!
	0x01DAF440 STP X20, X19, [X31 + 0x10]
	0x01DAF444 ADRP X19, 0x2629000
	0x01DAF448 ADRP X20, 0x2344000
	0x01DAF44C LDRB W8, [X19 + 0xAE2]
	0x01DAF450 LDR X20, [X20 + 0x648]
	0x01DAF454 TBNZ X8, 0x0, 0x1DAF4B4
	0x01DAF458 ADRP X0, 0x2344000
	0x01DAF45C LDR X0, [X0 + 0x648]
	0x01DAF460 BL 0x1C16CF4
	0x01DAF464 ADRP X0, 0x2344000
	0x01DAF468 LDR X0, [X0 + 0xDC8]
	0x01DAF46C BL 0x1C16CF4
	0x01DAF470 ADRP X0, 0x2345000
	0x01DAF474 LDR X0, [X0 + 0x1F8]
	0x01DAF478 BL 0x1C16CF4
	0x01DAF47C ADRP X0, 0x2345000
	0x01DAF480 LDR X0, [X0 + 0x178]
	0x01DAF484 BL 0x1C16CF4
	0x01DAF488 ADRP X0, 0x2348000
	0x01DAF48C LDR X0, [X0 + 0x8F0]
	0x01DAF490 BL 0x1C16CF4
	0x01DAF494 ADRP X0, 0x2345000
	0x01DAF498 LDR X0, [X0 + 0xF88]
	0x01DAF49C BL 0x1C16CF4
	0x01DAF4A0 ADRP X0, 0x2348000
	0x01DAF4A4 LDR X0, [X0 + 0x920]
	0x01DAF4A8 BL 0x1C16CF4
	0x01DAF4AC MOVZ W8, 0x1
	0x01DAF4B0 STRB W8, [X19 + 0xAE2]
	0x01DAF4B4 LDR X0, [X20]
	0x01DAF4B8 LDR W8, [X0 + 0xE0]
	0x01DAF4BC CBNZ W8, 0x1DAF4C4
	0x01DAF4C0 BL 0x1C16DFC
	0x01DAF4C4 ADRP X21, 0x2629000
	0x01DAF4C8 LDRB W8, [X21 + 0x787]
	0x01DAF4CC CBNZ W8, 0x1DAF4E4
	0x01DAF4D0 ADRP X0, 0x2344000
	0x01DAF4D4 LDR X0, [X0 + 0x648]
	0x01DAF4D8 BL 0x1C16CF4
	0x01DAF4DC MOVZ W8, 0x1
	0x01DAF4E0 STRB W8, [X21 + 0x787]
	0x01DAF4E4 LDR X0, [X20]
	0x01DAF4E8 LDR W8, [X0 + 0xE0]
	0x01DAF4EC CBNZ W8, 0x1DAF4F8
	0x01DAF4F0 BL 0x1C16DFC
	0x01DAF4F4 LDR X0, [X20]
	0x01DAF4F8 LDR X8, [X0 + 0xB8]
	0x01DAF4FC LDR X8, [X8]
	0x01DAF500 CBZ X8, 0x1DAF6D0
	0x01DAF504 LDR X8, [X8 + 0xE0]
	0x01DAF508 CBZ X8, 0x1DAF6D0
	0x01DAF50C ADRP X9, 0x2345000
	0x01DAF510 LDR X9, [X9 + 0x178]
	0x01DAF514 LDR X0, [X8 + 0x48]
	0x01DAF518 LDR X1, [X9]
	0x01DAF51C BL 0x2651A74
	0x01DAF520 TBZ X0, 0x0, 0x1DAF594
	0x01DAF524 LDR X0, [X20]
	0x01DAF528 LDR W8, [X0 + 0xE0]
	0x01DAF52C CBNZ W8, 0x1DAF534
	0x01DAF530 BL 0x1C16DFC
	0x01DAF534 LDRB W8, [X21 + 0x787]
	0x01DAF538 CBNZ W8, 0x1DAF550
	0x01DAF53C ADRP X0, 0x2344000
	0x01DAF540 LDR X0, [X0 + 0x648]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+16], D12
	003 Move [X31+24], D11
	004 Move [X31+32], D10
	005 Move [X31+40], D9
	006 Move [X31+48], D8
	007 Move [X31+56], X30
	008 Move [X31+64], X28
	009 Move [X31+72], X27
	010 Move [X31+80], X26
	011 Move [X31+88], X25
	012 Move [X31+96], X24
	013 Move [X31+104], X23
	014 Move [X31+112], X22
	015 Move [X31+120], X21
	016 Move [X31+128], X20
	017 Move [X31+136], X19
	018 Move X22, 0x262B000
	019 Move W8, [X22+2781]
	020 Move X21, X2
	021 Move X20, X1
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {47}
	027 Move X0, 0x2346000
	028 Move X0, [X0+3584]
	029 Call 0x1C17CF4
	030 Move X0, 0x234A000
	031 Move X0, [X0+2208]
	032 Call 0x1C17CF4
	033 Move X0, 0x234A000
	034 Move X0, [X0+2216]
	035 Call 0x1C17CF4
	036 Move X0, 0x234A000
	037 Move X0, [X0+2224]
	038 Call 0x1C17CF4
	039 Move X0, 0x234A000
	040 Move X0, [X0+2232]
	041 Call 0x1C17CF4
	042 Move X0, 0x2346000
	043 Move X0, [X0+3608]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X22+2781], W8
	047 Compare X21, 0
	048 JumpIfEqual {490}
	049 Move X10, 0x234A000
	050 Move X8, [X21]
	051 Move X10, [X10+2216]
	052 NotImplemented "Instruction LDRH not yet implemented."
	053 Move X1, [X10]
	054 Compare X9, 0
	055 JumpIfEqual {62}
	056 Move X10, [X8+176]
	057 Add X10, X10, 8
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Subtract X9, X9, 1
	061 Add X10, X10, 16
	062 Move X0, X21
	063 Move W2, W31
	064 Call 0x1C5D788
	065 NotImplemented "Instruction LDRSW not yet implemented."
	066 Add X8, X8, X9
	067 Add X0, X8, 312
	068 Move X8, [X0]
	069 Move X1, [X0+8]
	070 Move X25, 0x2346000
	071 Move X24, 0x2346000
	072 Move X25, [X25+3608]
	073 Move X24, [X24+3584]
	074 Move X0, X21
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move X21, X0
	077 Compare X0, 0
	078 JumpIfEqual {526}
	079 Move X27, 0x234A000
	080 Move X27, [X27+2224]
	081 Move W26, W31
	082 Move X28, W26
	083 Move X8, [X21]
	084 Move X1, [X25]
	085 NotImplemented "Instruction LDRH not yet implemented."
	086 Compare X9, 0
	087 JumpIfEqual {94}
	088 Move X10, [X8+176]
	089 Add X10, X10, 8
	090 NotImplemented "Instruction LDUR not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Subtract X9, X9, 1
	093 Add X10, X10, 16
	094 Move X0, X21
	095 Move W2, W31
	096 Call 0x1C5D788
	097 NotImplemented "Instruction LDRSW not yet implemented."
	098 Add X8, X8, X9
	099 Add X0, X8, 312
	100 Move X8, [X0]
	101 Move X1, [X0+8]
	102 Move X0, X21
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {229}
	108 Move X8, [X21]
	109 Move X1, [X27]
	110 NotImplemented "Instruction LDRH not yet implemented."
	111 Compare X9, 0
	112 JumpIfEqual {119}
	113 Move X10, [X8+176]
	114 Add X10, X10, 8
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Subtract X9, X9, 1
	118 Add X10, X10, 16
	119 Move X0, X21
	120 Move W2, W31
	121 Call 0x1C5D788
	122 NotImplemented "Instruction LDRSW not yet implemented."
	123 Add X8, X8, X9
	124 Add X0, X8, 312
	125 Move X8, [X0]
	126 Move X1, [X0+8]
	127 Move X0, X21
	128 NotImplemented "Instruction BLR not yet implemented."
	129 Move X8, [X19+104]
	130 Compare X8, 0
	131 JumpIfEqual {509}
	132 Move W8, [X8+24]
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X23, X0
	135 Compare X0, 0
	136 JumpIfEqual {510}
	137 Move X0, X23
	138 Move X1, X31
	139 Call Crate.get_health, X0
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move X8, [X19+104]
	142 Compare X8, 0
	143 JumpIfEqual {514}
	144 Move W9, [X8+24]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Add X8, X8, X28
	147 Move X22, [X8+32]
	148 Move X0, X23
	149 Move X1, X31
	150 Call Component.get_transform, X0
	151 Compare X0, 0
	152 JumpIfEqual {515}
	153 Move X1, X31
	154 Call Transform.get_position, X0
	155 Move W8, [X19+80]
	156 Move V8, V0
	157 Move V9, V2
	158 Compare W8, 0
	159 JumpIfEqual {169}
	160 Move X0, X19
	161 Move X1, X31
	162 Call Component.get_transform, X0
	163 Compare X0, 0
	164 JumpIfEqual {519}
	165 Move X1, X31
	166 Call Transform.get_position, X0
	167 Subtract S8, S8, S0
	168 Subtract S9, S9, S2
	169 Move X0, X23
	170 Move X1, X31
	171 Call Component.get_transform, X0
	172 Compare X0, 0
	173 JumpIfEqual {517}
	174 Move X1, X31
	175 Call Transform.get_position, X0
	176 Move V10, V0
	177 Move V11, V1
	178 Move V12, V2
	179 Move X0, X19
	180 Move X1, X31
	181 Call Component.get_transform, X0
	182 Compare X0, 0
	183 JumpIfEqual {516}
	184 Move X1, X31
	185 Call Transform.get_position, X0
	186 Move V3, [X19+84]
	187 Subtract S0, S10, S0
	188 Subtract S1, S11, S1
	189 Subtract S2, S12, S2
	190 Multiply S0, S0, S0
	191 Multiply S1, S1, S1
	192 Add S0, S0, S1
	193 Multiply S1, S2, S2
	194 Add S0, S1, S0
	195 Multiply S1, S3, S3
	196 NotImplemented "Instruction FCMP not yet implemented."
	197 Compare X22, 0
	198 JumpIfEqual {532}
	199 Move X0, [X22+56]
	200 Compare X0, 0
	201 JumpIfEqual {534}
	202 Add S1, S9, S9
	203 Add S0, S8, S8
	204 Move X1, X31
	205 Call RectTransform.set_anchoredPosition, X0, X1
	206 Move W1, 1
	207 Move X0, X22
	208 Call MapIconView.SetOverlayActive, X0, X1
	209 Move X0, X22
	210 Move X1, X31
	211 Call Component.get_gameObject, X0
	212 Compare X0, 0
	213 JumpIfEqual {533}
	214 Move X1, X31
	215 Call GameObject.get_activeSelf, X0
	216 Move TEMP, X0
	217 And TEMP, TEMP, 1
	218 Compare TEMP, 1
	219 JumpIfEqual {228}
	220 Move X0, X22
	221 Move X1, X31
	222 Call Component.get_gameObject, X0
	223 Compare X0, 0
	224 JumpIfEqual {535}
	225 Move W1, 1
	226 Move X2, X31
	227 Call GameObject.SetActive, X0, X1
	228 Add W26, W26, 1
	229 Move X22, X31
	230 Move W23, 5
	231 Compare X21, 0
	232 JumpIfEqual {254}
	233 Move X8, [X21]
	234 Move X1, [X24]
	235 NotImplemented "Instruction LDRH not yet implemented."
	236 Compare X9, 0
	237 JumpIfEqual {244}
	238 Move X10, [X8+176]
	239 Add X10, X10, 8
	240 NotImplemented "Instruction LDUR not yet implemented."
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Subtract X9, X9, 1
	243 Add X10, X10, 16
	244 Move X0, X21
	245 Move W2, W31
	246 Call 0x1C5D788
	247 NotImplemented "Instruction LDRSW not yet implemented."
	248 Add X8, X8, X9
	249 Add X0, X8, 312
	250 Move X8, [X0]
	251 Move X1, [X0+8]
	252 Move X0, X21
	253 NotImplemented "Instruction BLR not yet implemented."
	254 Compare X22, 0
	255 JumpIfNotEqual {527}
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Compare W23, 0
	258 JumpIfNotEqual {491}
	259 Compare X20, 0
	260 JumpIfEqual {490}
	261 Move X10, 0x234A000
	262 Move X8, [X20]
	263 Move X10, [X10+2208]
	264 NotImplemented "Instruction LDRH not yet implemented."
	265 Move X1, [X10]
	266 Compare X9, 0
	267 JumpIfEqual {274}
	268 Move X10, [X8+176]
	269 Add X10, X10, 8
	270 NotImplemented "Instruction LDUR not yet implemented."
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Subtract X9, X9, 1
	273 Add X10, X10, 16
	274 Move X0, X20
	275 Move W2, W31
	276 Call 0x1C5D788
	277 NotImplemented "Instruction LDRSW not yet implemented."
	278 Add X8, X8, X9
	279 Add X0, X8, 312
	280 Move X8, [X0]
	281 Move X1, [X0+8]
	282 Move X0, X20
	283 NotImplemented "Instruction BLR not yet implemented."
	284 Move X20, X0
	285 Compare X0, 0
	286 JumpIfEqual {529}
	287 Move X23, 0x234A000
	288 Move X23, [X23+2232]
	289 Move X27, W26
	290 Move X8, [X20]
	291 Move X1, [X25]
	292 NotImplemented "Instruction LDRH not yet implemented."
	293 Compare X9, 0
	294 JumpIfEqual {301}
	295 Move X10, [X8+176]
	296 Add X10, X10, 8
	297 NotImplemented "Instruction LDUR not yet implemented."
	298 NotImplemented "Instruction CMP not yet implemented."
	299 Subtract X9, X9, 1
	300 Add X10, X10, 16
	301 Move X0, X20
	302 Move W2, W31
	303 Call 0x1C5D788
	304 NotImplemented "Instruction LDRSW not yet implemented."
	305 Add X8, X8, X9
	306 Add X0, X8, 312
	307 Move X8, [X0]
	308 Move X1, [X0+8]
	309 Move X0, X20
	310 NotImplemented "Instruction BLR not yet implemented."
	311 Move TEMP, X0
	312 And TEMP, TEMP, 1
	313 Compare TEMP, 1
	314 JumpIfNotEqual {446}
	315 Move X8, [X20]
	316 Move X1, [X23]
	317 NotImplemented "Instruction LDRH not yet implemented."
	318 Compare X9, 0
	319 JumpIfEqual {326}
	320 Move X10, [X8+176]
	321 Add X10, X10, 8
	322 NotImplemented "Instruction LDUR not yet implemented."
	323 NotImplemented "Instruction CMP not yet implemented."
	324 Subtract X9, X9, 1
	325 Add X10, X10, 16
	326 Move X0, X20
	327 Move W2, W31
	328 Call 0x1C5D788
	329 NotImplemented "Instruction LDRSW not yet implemented."
	330 Add X8, X8, X9
	331 Add X0, X8, 312
	332 Move X8, [X0]
	333 Move X1, [X0+8]
	334 Move X0, X20
	335 NotImplemented "Instruction BLR not yet implemented."
	336 Move X8, [X19+104]
	337 Compare X8, 0
	338 JumpIfEqual {512}
	339 Move W8, [X8+24]
	340 NotImplemented "Instruction CMP not yet implemented."
	341 Move X22, X0
	342 Compare X0, 0
	343 JumpIfEqual {513}
	344 Move X0, X22
	345 Move X1, X31
	346 Call GrabbableItem.get_isAttached, X0
	347 Move TEMP, X0
	348 And TEMP, TEMP, 1
	349 Compare TEMP, 1
	350 JumpIfEqual {290}
	351 Move X0, X22
	352 Move X1, X31
	353 Call GrabbableItem.get_isVisible, X0
	354 Move TEMP, X0
	355 And TEMP, TEMP, 1
	356 Compare TEMP, 1
	357 JumpIfNotEqual {290}
	358 Move X8, [X19+104]
	359 Compare X8, 0
	360 JumpIfEqual {521}
	361 Move W9, [X8+24]
	362 NotImplemented "Instruction CMP not yet implemented."
	363 Add X8, X8, X27
	364 Move X21, [X8+32]
	365 Move X0, X22
	366 Move X1, X31
	367 Call Component.get_transform, X0
	368 Compare X0, 0
	369 JumpIfEqual {520}
	370 Move X1, X31
	371 Call Transform.get_position, X0
	372 Move W8, [X19+80]
	373 Move V8, V0
	374 Move V9, V2
	375 Compare W8, 0
	376 JumpIfEqual {386}
	377 Move X0, X19
	378 Move X1, X31
	379 Call Component.get_transform, X0
	380 Compare X0, 0
	381 JumpIfEqual {525}
	382 Move X1, X31
	383 Call Transform.get_position, X0
	384 Subtract S8, S8, S0
	385 Subtract S9, S9, S2
	386 Move X0, X22
	387 Move X1, X31
	388 Call Component.get_transform, X0
	389 Compare X0, 0
	390 JumpIfEqual {522}
	391 Move X1, X31
	392 Call Transform.get_position, X0
	393 Move V10, V0
	394 Move V11, V1
	395 Move V12, V2
	396 Move X0, X19
	397 Move X1, X31
	398 Call Component.get_transform, X0
	399 Compare X0, 0
	400 JumpIfEqual {524}
	401 Move X1, X31
	402 Call Transform.get_position, X0
	403 Move V3, [X19+84]
	404 Subtract S0, S10, S0
	405 Subtract S1, S11, S1
	406 Subtract S2, S12, S2
	407 Multiply S0, S0, S0
	408 Multiply S1, S1, S1
	409 Add S0, S0, S1
	410 Multiply S1, S2, S2
	411 Add S0, S1, S0
	412 Multiply S1, S3, S3
	413 NotImplemented "Instruction FCMP not yet implemented."
	414 Compare X21, 0
	415 JumpIfEqual {536}
	416 Move X0, [X21+56]
	417 Compare X0, 0
	418 JumpIfEqual {538}
	419 Add S1, S9, S9
	420 Add S0, S8, S8
	421 Move X1, X31
	422 Call RectTransform.set_anchoredPosition, X0, X1
	423 Move X0, X21
	424 Move W1, W31
	425 Call MapIconView.SetOverlayActive, X0, X1
	426 Move X0, X21
	427 Move X1, X31
	428 Call Component.get_gameObject, X0
	429 Compare X0, 0
	430 JumpIfEqual {537}
	431 Move X1, X31
	432 Call GameObject.get_activeSelf, X0
	433 Move TEMP, X0
	434 And TEMP, TEMP, 1
	435 Compare TEMP, 1
	436 JumpIfEqual {445}
	437 Move X0, X21
	438 Move X1, X31
	439 Call Component.get_gameObject, X0
	440 Compare X0, 0
	441 JumpIfEqual {539}
	442 Move W1, 1
	443 Move X2, X31
	444 Call GameObject.SetActive, X0, X1
	445 Add W26, W26, 1
	446 Move X21, X31
	447 Move W22, 11
	448 Compare X20, 0
	449 JumpIfEqual {471}
	450 Move X8, [X20]
	451 Move X1, [X24]
	452 NotImplemented "Instruction LDRH not yet implemented."
	453 Compare X9, 0
	454 JumpIfEqual {461}
	455 Move X10, [X8+176]
	456 Add X10, X10, 8
	457 NotImplemented "Instruction LDUR not yet implemented."
	458 NotImplemented "Instruction CMP not yet implemented."
	459 Subtract X9, X9, 1
	460 Add X10, X10, 16
	461 Move X0, X20
	462 Move W2, W31
	463 Call 0x1C5D788
	464 NotImplemented "Instruction LDRSW not yet implemented."
	465 Add X8, X8, X9
	466 Add X0, X8, 312
	467 Move X8, [X0]
	468 Move X1, [X0+8]
	469 Move X0, X20
	470 NotImplemented "Instruction BLR not yet implemented."
	471 Compare X21, 0
	472 JumpIfNotEqual {530}
	473 NotImplemented "Instruction CMP not yet implemented."
	474 Compare W22, 0
	475 JumpIfNotEqual {491}
	476 Move X8, [X19+104]
	477 Compare X8, 0
	478 JumpIfEqual {490}
	479 Move X20, W26
	480 Move X9, [X8+24]
	481 NotImplemented "Instruction CMP not yet implemented."
	482 NotImplemented "Instruction CMP not yet implemented."
	483 Add X8, X8, X20
	484 Move X1, [X8+32]
	485 Call MapView.DeactivateMapIcon, X0, X1
	486 Move X8, [X19+104]
	487 Add X20, X20, 1
	488 Compare X8, 0
	489 JumpIfNotEqual {480}
	490 Call 0x1C17F20
	491 Move X20, [X31+128]
	492 Move X19, [X31+136]
	493 Move X22, [X31+112]
	494 Move X21, [X31+120]
	495 Move X24, [X31+96]
	496 Move X23, [X31+104]
	497 Move X26, [X31+80]
	498 Move X25, [X31+88]
	499 Move X28, [X31+64]
	500 Move X27, [X31+72]
	501 Move X30, [X31+56]
	502 Move D9, [X31+40]
	503 Move D8, [X31+48]
	504 Move D11, [X31+24]
	505 Move D10, [X31+32]
	506 Move V12, [X31+16]
	507 Add X31, X31, 144
	508 Return 
	509 Call 0x1C17F20
	510 Call 0x1C17F20
	511 Call 0x1C17F28
	512 Call 0x1C17F20
	513 Call 0x1C17F20
	514 Call 0x1C17F20
	515 Call 0x1C17F20
	516 Call 0x1C17F20
	517 Call 0x1C17F20
	518 Call 0x1C17F28
	519 Call 0x1C17F20
	520 Call 0x1C17F20
	521 Call 0x1C17F20
	522 Call 0x1C17F20
	523 Call 0x1C17F28
	524 Call 0x1C17F20
	525 Call 0x1C17F20
	526 Call 0x1C17F20
	527 Move X0, X22
	528 Call 0x1C17F18
	529 Call 0x1C17F20
	530 Move X0, X21
	531 Call 0x1C17F18
	532 Call 0x1C17F20
	533 Call 0x1C17F20
	534 Call 0x1C17F20
	535 Call 0x1C17F20
	536 Call 0x1C17F20
	537 Call 0x1C17F20
	538 Call 0x1C17F20
	539 Call 0x1C17F20
	540 Move [X31+8], X0
	541 Move W26, W31
	542 Move [X31+8], X0
	543 NotImplemented "Instruction CMP not yet implemented."
	544 Move X0, [X31+8]
	545 Call 0x3EB2AD0
	546 Move X21, [X0]
	547 Call 0x3EB2AE0
	548 Move W22, W31
	549 Compare X20, 0
	550 JumpIfNotEqual {450}
	551 Move X21, X31
	552 Move [X31+8], X0
	553 Compare X20, 0
	554 JumpIfEqual {576}
	555 Move X8, [X20]
	556 Move X1, [X24]
	557 NotImplemented "Instruction LDRH not yet implemented."
	558 Compare X9, 0
	559 JumpIfEqual {566}
	560 Move X10, [X8+176]
	561 Add X10, X10, 8
	562 NotImplemented "Instruction LDUR not yet implemented."
	563 NotImplemented "Instruction CMP not yet implemented."
	564 Subtract X9, X9, 1
	565 Add X10, X10, 16
	566 Move X0, X20
	567 Move W2, W31
	568 Call 0x1C5D788
	569 NotImplemented "Instruction LDRSW not yet implemented."
	570 Add X8, X8, X9
	571 Add X0, X8, 312
	572 Move X8, [X0]
	573 Move X1, [X0+8]
	574 Move X0, X20
	575 NotImplemented "Instruction BLR not yet implemented."
	576 Compare X21, 0
	577 JumpIfEqual {615}
	578 Move X0, X21
	579 Call 0x1C17F18
	580 NotImplemented "Instruction CMP not yet implemented."
	581 Call 0x3EB2AD0
	582 Move X22, [X0]
	583 Call 0x3EB2AE0
	584 Move W23, W31
	585 Compare X21, 0
	586 JumpIfNotEqual {233}
	587 Move [X31+8], X0
	588 Move X22, X31
	589 Move [X31+8], X0
	590 Compare X21, 0
	591 JumpIfEqual {613}
	592 Move X8, [X21]
	593 Move X1, [X24]
	594 NotImplemented "Instruction LDRH not yet implemented."
	595 Compare X9, 0
	596 JumpIfEqual {603}
	597 Move X10, [X8+176]
	598 Add X10, X10, 8
	599 NotImplemented "Instruction LDUR not yet implemented."
	600 NotImplemented "Instruction CMP not yet implemented."
	601 Subtract X9, X9, 1
	602 Add X10, X10, 16
	603 Move X0, X21
	604 Move W2, W31
	605 Call 0x1C5D788
	606 NotImplemented "Instruction LDRSW not yet implemented."
	607 Add X8, X8, X9
	608 Add X0, X8, 312
	609 Move X8, [X0]
	610 Move X1, [X0+8]
	611 Move X0, X21
	612 NotImplemented "Instruction BLR not yet implemented."
	613 Compare X22, 0
	614 JumpIfNotEqual {617}
	615 Move X0, [X31+8]
	616 Call 0x1D2D690
	617 Move X0, X22
	618 Call 0x1C17F18
	619 Call 0x1991590

Method: System.Void UpdateMobLocations(System.Collections.Generic.IEnumerable`1<AnimalCompany.MobController> mobs, System.Collections.Generic.IEnumerable`1<AnimalCompany.PrototypeOne.MobControllerMine> mines)

Disassembly:
	0x01DAE170 BL 0x3C3E880
	0x01DAE174 MOV X0, X21
	0x01DAE178 MOV W1, W31
	0x01DAE17C BL 0x1DAE5F8
	0x01DAE180 MOV X0, X21
	0x01DAE184 MOV X1, X31
	0x01DAE188 BL 0x3C32ECC
	0x01DAE18C CBZ X0, 0x1DAE30C
	0x01DAE190 MOV X1, X31
	0x01DAE194 BL 0x3C357F8
	0x01DAE198 TBNZ X0, 0x0, 0x1DAE1B8
	0x01DAE19C MOV X0, X21
	0x01DAE1A0 MOV X1, X31
	0x01DAE1A4 BL 0x3C32ECC
	0x01DAE1A8 CBZ X0, 0x1DAE314
	0x01DAE1AC MOVZ W1, 0x1
	0x01DAE1B0 MOV X2, X31
	0x01DAE1B4 BL 0x3C357B4
	0x01DAE1B8 ADD W26, W26, 0x1
	0x01DAE1BC B 0x1DADF94
	0x01DAE1C0 MOV X21, X31
	0x01DAE1C4 MOVZ W22, 0xB
	0x01DAE1C8 CBZ X20, 0x1DAE224
	0x01DAE1CC LDR X8, [X20]
	0x01DAE1D0 LDR X1, [X24]
	0x01DAE1D4 LDRH W9, [X8 + 0x12E]
	0x01DAE1D8 CBZ X9, 0x1DAE1FC
	0x01DAE1DC LDR X10, [X8 + 0xB0]
	0x01DAE1E0 ADD X10, X10, 0x8
	0x01DAE1E4 LDUR X11, [X10 - 0x8]
	0x01DAE1E8 CMP X11, X1
	0x01DAE1EC B.EQ 0x1DAE20C
	0x01DAE1F0 SUBS X9, X9, 0x1
	0x01DAE1F4 ADD X10, X10, 0x10
	0x01DAE1F8 B.NE 0x1DAE1E4
	0x01DAE1FC MOV X0, X20
	0x01DAE200 MOV W2, W31
	0x01DAE204 BL 0x1C5C788
	0x01DAE208 B 0x1DAE218
	0x01DAE20C LDRSW X9, [X10]
	0x01DAE210 ADD X8, X8, X9, 0x4, LSL
	0x01DAE214 ADD X0, X8, 0x138
	0x01DAE218 LDP X8, X1, [X0]
	0x01DAE21C MOV X0, X20
	0x01DAE220 BLR X8
	0x01DAE224 CBNZ X21, 0x1DAE2F0
	0x01DAE228 CMP W22, 0xB
	0x01DAE22C B.EQ 0x1DAE234
	0x01DAE230 CBNZ W22, 0x1DAE270
	0x01DAE234 LDR X8, [X19 + 0x68]
	0x01DAE238 CBZ X8, 0x1DAE26C
	0x01DAE23C SXTW X20, W26
	0x01DAE240 LDR X9, [X8 + 0x18]
	0x01DAE244 CMP X20, W9, SXTW
	0x01DAE248 B.GE 0x1DAE270
	0x01DAE24C CMP W20, W9
	0x01DAE250 B.CS 0x1DAE2A4
	0x01DAE254 ADD X8, X8, X20, 0x3, LSL
	0x01DAE258 LDR X1, [X8 + 0x20]
	0x01DAE25C BL 0x1DAEADC
	0x01DAE260 LDR X8, [X19 + 0x68]
	0x01DAE264 ADD X20, X20, 0x1
	0x01DAE268 CBNZ X8, 0x1DAE240
	0x01DAE26C BL 0x1C16F20
	0x01DAE270 LDP X20, X19, [X31 + 0x80]
	0x01DAE274 LDP X22, X21, [X31 + 0x70]
	0x01DAE278 LDP X24, X23, [X31 + 0x60]
	0x01DAE27C LDP X26, X25, [X31 + 0x50]
	0x01DAE280 LDP X28, X27, [X31 + 0x40]
	0x01DAE284 LDR X30, [X31 + 0x38]
	0x01DAE288 LDP D9, D8, [X31 + 0x28]
	0x01DAE28C LDP D11, D10, [X31 + 0x18]
	0x01DAE290 LDR V12, [X31 + 0x10]
	0x01DAE294 ADD X31, X31, 0x90
	0x01DAE298 RET
	0x01DAE29C BL 0x1C16F20
	0x01DAE2A0 BL 0x1C16F20
	0x01DAE2A4 BL 0x1C16F28
	0x01DAE2A8 BL 0x1C16F20
	0x01DAE2AC BL 0x1C16F20
	0x01DAE2B0 BL 0x1C16F20
	0x01DAE2B4 BL 0x1C16F20
	0x01DAE2B8 BL 0x1C16F20
	0x01DAE2BC BL 0x1C16F20
	0x01DAE2C0 BL 0x1C16F28
	0x01DAE2C4 BL 0x1C16F20
	0x01DAE2C8 BL 0x1C16F20
	0x01DAE2CC BL 0x1C16F20
	0x01DAE2D0 BL 0x1C16F20
	0x01DAE2D4 BL 0x1C16F28
	0x01DAE2D8 BL 0x1C16F20
	0x01DAE2DC BL 0x1C16F20
	0x01DAE2E0 BL 0x1C16F20
	0x01DAE2E4 MOV X0, X22
	0x01DAE2E8 BL 0x1C16F18
	0x01DAE2EC BL 0x1C16F20
	0x01DAE2F0 MOV X0, X21
	0x01DAE2F4 BL 0x1C16F18
	0x01DAE2F8 BL 0x1C16F20
	0x01DAE2FC BL 0x1C16F20
	0x01DAE300 BL 0x1C16F20
	0x01DAE304 BL 0x1C16F20
	0x01DAE308 BL 0x1C16F20
	0x01DAE30C BL 0x1C16F20
	0x01DAE310 BL 0x1C16F20
	0x01DAE314 BL 0x1C16F20
	0x01DAE318 B 0x1DAE400
	0x01DAE31C B 0x1DAE400
	0x01DAE320 B 0x1DAE400
	0x01DAE324 B 0x1DAE400
	0x01DAE328 B 0x1DAE400
	0x01DAE32C B 0x1DAE400
	0x01DAE330 B 0x1DAE400
	0x01DAE334 B 0x1DAE400
	0x01DAE338 B 0x1DAE400
	0x01DAE33C B 0x1DAE4A0
	0x01DAE340 B 0x1DAE4A0
	0x01DAE344 B 0x1DAE4A0
	0x01DAE348 B 0x1DAE4A0
	0x01DAE34C B 0x1DAE4A0
	0x01DAE350 B 0x1DAE4A0
	0x01DAE354 B 0x1DAE4A0
	0x01DAE358 B 0x1DAE4A0
	0x01DAE35C B 0x1DAE4A0
	0x01DAE360 STR X0, [X31 + 0x8]
	0x01DAE364 B 0x1DAE404
	0x01DAE368 MOV W26, W31
	0x01DAE36C B 0x1DAE4A0
	0x01DAE370 B 0x1DAE400
	0x01DAE374 B 0x1DAE400
	0x01DAE378 B 0x1DAE400
	0x01DAE37C B 0x1DAE400
	0x01DAE380 B 0x1DAE400
	0x01DAE384 B 0x1DAE400
	0x01DAE388 B 0x1DAE400
	0x01DAE38C B 0x1DAE400
	0x01DAE390 B 0x1DAE400
	0x01DAE394 B 0x1DAE400
	0x01DAE398 B 0x1DAE400
	0x01DAE39C B 0x1DAE400
	0x01DAE3A0 B 0x1DAE400
	0x01DAE3A4 B 0x1DAE400
	0x01DAE3A8 B 0x1DAE400
	0x01DAE3AC B 0x1DAE4A0
	0x01DAE3B0 B 0x1DAE4A0
	0x01DAE3B4 B 0x1DAE4A0
	0x01DAE3B8 B 0x1DAE4A0
	0x01DAE3BC B 0x1DAE4A0
	0x01DAE3C0 B 0x1DAE4A0
	0x01DAE3C4 B 0x1DAE4A0
	0x01DAE3C8 B 0x1DAE4A0
	0x01DAE3CC B 0x1DAE4A0
	0x01DAE3D0 B 0x1DAE4A0
	0x01DAE3D4 B 0x1DAE4A0
	0x01DAE3D8 B 0x1DAE4A0
	0x01DAE3DC B 0x1DAE4A0
	0x01DAE3E0 B 0x1DAE4A0
	0x01DAE3E4 B 0x1DAE400
	0x01DAE3E8 B 0x1DAE400
	0x01DAE3EC B 0x1DAE400
	0x01DAE3F0 B 0x1DAE4A0
	0x01DAE3F4 B 0x1DAE4A0
	0x01DAE3F8 B 0x1DAE4A0
	0x01DAE3FC B 0x1DAE400
	0x01DAE400 STR X0, [X31 + 0x8]
	0x01DAE404 CMP W1, 0x1
	0x01DAE408 B.NE 0x1DAE428
	0x01DAE40C LDR X0, [X31 + 0x8]
	0x01DAE410 BL 0x3EB1AD0
	0x01DAE414 LDR X21, [X0]
	0x01DAE418 BL 0x3EB1AE0
	0x01DAE41C MOV W22, W31
	0x01DAE420 CBNZ X20, 0x1DAE1CC
	0x01DAE424 B 0x1DAE224
	0x01DAE428 MOV X21, X31
	0x01DAE42C B 0x1DAE434
	0x01DAE430 STR X0, [X31 + 0x8]
	0x01DAE434 CBZ X20, 0x1DAE490
	0x01DAE438 LDR X8, [X20]
	0x01DAE43C LDR X1, [X24]
	0x01DAE440 LDRH W9, [X8 + 0x12E]
	0x01DAE444 CBZ X9, 0x1DAE468
	0x01DAE448 LDR X10, [X8 + 0xB0]
	0x01DAE44C ADD X10, X10, 0x8
	0x01DAE450 LDUR X11, [X10 - 0x8]
	0x01DAE454 CMP X11, X1
	0x01DAE458 B.EQ 0x1DAE478
	0x01DAE45C SUBS X9, X9, 0x1
	0x01DAE460 ADD X10, X10, 0x10
	0x01DAE464 B.NE 0x1DAE450
	0x01DAE468 MOV X0, X20
	0x01DAE46C MOV W2, W31
	0x01DAE470 BL 0x1C5C788
	0x01DAE474 B 0x1DAE484
	0x01DAE478 LDRSW X9, [X10]
	0x01DAE47C ADD X8, X8, X9, 0x4, LSL
	0x01DAE480 ADD X0, X8, 0x138
	0x01DAE484 LDP X8, X1, [X0]
	0x01DAE488 MOV X0, X20
	0x01DAE48C BLR X8
	0x01DAE490 CBZ X21, 0x1DAE530
	0x01DAE494 MOV X0, X21
	0x01DAE498 BL 0x1C16F18
	0x01DAE49C B 0x1DAE4A0
	0x01DAE4A0 CMP W1, 0x1
	0x01DAE4A4 B.NE 0x1DAE4C0
	0x01DAE4A8 BL 0x3EB1AD0
	0x01DAE4AC LDR X22, [X0]
	0x01DAE4B0 BL 0x3EB1AE0
	0x01DAE4B4 MOV W23, W31
	0x01DAE4B8 CBNZ X21, 0x1DADEB8
	0x01DAE4BC B 0x1DADF10
	0x01DAE4C0 STR X0, [X31 + 0x8]
	0x01DAE4C4 MOV X22, X31
	0x01DAE4C8 B 0x1DAE4D0
	0x01DAE4CC STR X0, [X31 + 0x8]
	0x01DAE4D0 CBZ X21, 0x1DAE52C
	0x01DAE4D4 LDR X8, [X21]
	0x01DAE4D8 LDR X1, [X24]
	0x01DAE4DC LDRH W9, [X8 + 0x12E]
	0x01DAE4E0 CBZ X9, 0x1DAE504
	0x01DAE4E4 LDR X10, [X8 + 0xB0]
	0x01DAE4E8 ADD X10, X10, 0x8
	0x01DAE4EC LDUR X11, [X10 - 0x8]
	0x01DAE4F0 CMP X11, X1
	0x01DAE4F4 B.EQ 0x1DAE514
	0x01DAE4F8 SUBS X9, X9, 0x1
	0x01DAE4FC ADD X10, X10, 0x10
	0x01DAE500 B.NE 0x1DAE4EC
	0x01DAE504 MOV X0, X21
	0x01DAE508 MOV W2, W31
	0x01DAE50C BL 0x1C5C788
	0x01DAE510 B 0x1DAE520
	0x01DAE514 LDRSW X9, [X10]
	0x01DAE518 ADD X8, X8, X9, 0x4, LSL
	0x01DAE51C ADD X0, X8, 0x138
	0x01DAE520 LDP X8, X1, [X0]
	0x01DAE524 MOV X0, X21
	0x01DAE528 BLR X8
	0x01DAE52C CBNZ X22, 0x1DAE538
	0x01DAE530 LDR X0, [X31 + 0x8]
	0x01DAE534 BL 0x1D2C690
	0x01DAE538 MOV X0, X22
	0x01DAE53C BL 0x1C16F18
	0x01DAE540 BL 0x1990590
	0x01DAE544 MOV X1, X31
	0x01DAE548 B 0x3C36C30
	0x01DAE54C LDR X0, [X0 + 0x38]
	0x01DAE550 RET
	0x01DAE554 STP X30, X21, [X31 - 0x20]!
	0x01DAE558 STP X20, X19, [X31 + 0x10]
	0x01DAE55C ADRP X20, 0x262A000
	0x01DAE560 ADRP X21, 0x2347000
	0x01DAE564 LDRB W8, [X20 + 0xAD8]
	0x01DAE568 LDR X21, [X21 + 0x6B8]
	0x01DAE56C MOV X19, X0
	0x01DAE570 TBNZ X8, 0x0, 0x1DAE588
	0x01DAE574 ADRP X0, 0x2347000
	0x01DAE578 LDR X0, [X0 + 0x6B8]
	0x01DAE57C BL 0x1C16CF4
	0x01DAE580 MOVZ W8, 0x1
	0x01DAE584 STRB W8, [X20 + 0xAD8]
	0x01DAE588 LDR X1, [X21]
	0x01DAE58C MOV X0, X19
	0x01DAE590 BL 0x21A3894
	0x01DAE594 LDR X8, [X19 + 0x20]
	0x01DAE598 STR X0, [X19 + 0x38]
	0x01DAE59C CBZ X8, 0x1DAE5B4
	0x01DAE5A0 LDR X8, [X8 + 0xD8]
	0x01DAE5A4 STR X8, [X19 + 0x40]
	0x01DAE5A8 LDP X20, X19, [X31 + 0x10]
	0x01DAE5AC LDP X30, X21, [X31], #0x20
	0x01DAE5B0 RET
	0x01DAE5B4 BL 0x1C16F20
	0x01DAE5B8 STR X30, [X31 - 0x10]!
	0x01DAE5BC LDR X0, [X0 + 0x20]
	0x01DAE5C0 CBZ X0, 0x1DAE5D0
	0x01DAE5C4 MOV X2, X31
	0x01DAE5C8 LDR X30, [X31], #0x10
	0x01DAE5CC B 0x3CD3398
	0x01DAE5D0 BL 0x1C16F20
	0x01DAE5D4 STR X30, [X31 - 0x10]!
	0x01DAE5D8 LDR X0, [X0 + 0x20]
	0x01DAE5DC CBZ X0, 0x1DAE5F4
	0x01DAE5E0 LDR X8, [X0]
	0x01DAE5E4 LDR X2, [X8 + 0x2A8]
	0x01DAE5E8 LDR X1, [X8 + 0x2B0]
	0x01DAE5EC LDR X30, [X31], #0x10
	0x01DAE5F0 BR X2
	0x01DAE5F4 BL 0x1C16F20
	0x01DAE5F8 STP X30, X19, [X31 - 0x10]!
	0x01DAE5FC LDR X0, [X0 + 0x28]
	0x01DAE600 CBZ X0, 0x1DAE624
	0x01DAE604 MOV W19, W1
	0x01DAE608 MOV X1, X31
	0x01DAE60C BL 0x3C32ECC
	0x01DAE610 CBZ X0, 0x1DAE624
	0x01DAE614 AND W1, W19, 0x1
	0x01DAE618 MOV X2, X31
	0x01DAE61C LDP X30, X19, [X31], #0x10
	0x01DAE620 B 0x3C357B4
	0x01DAE624 BL 0x1C16F20
	0x01DAE628 MOV X1, X31
	0x01DAE62C B 0x3C36C30
	0x01DAE630 STP X30, X19, [X31 - 0x10]!
	0x01DAE634 MOV X19, X0
	0x01DAE638 BL 0x1DAE650
	0x01DAE63C MOV X0, X19
	0x01DAE640 BL 0x1DAE7D4
	0x01DAE644 MOV X0, X19
	0x01DAE648 LDP X30, X19, [X31], #0x10
	0x01DAE64C B 0x1DAE958
	0x01DAE650 STP X30, X27, [X31 - 0x50]!
	0x01DAE654 STP X26, X25, [X31 + 0x10]
	0x01DAE658 STP X24, X23, [X31 + 0x20]
	0x01DAE65C STP X22, X21, [X31 + 0x30]
	0x01DAE660 STP X20, X19, [X31 + 0x40]
	0x01DAE664 ADRP X20, 0x262A000
	0x01DAE668 ADRP X21, 0x2349000
	0x01DAE66C LDRB W8, [X20 + 0xADA]
	0x01DAE670 LDR X21, [X21 + 0x8C0]
	0x01DAE674 MOV X19, X0
	0x01DAE678 TBNZ X8, 0x0, 0x1DAE6B4
	0x01DAE67C ADRP X0, 0x2349000
	0x01DAE680 LDR X0, [X0 + 0x8C8]
	0x01DAE684 BL 0x1C16CF4
	0x01DAE688 ADRP X0, 0x2349000
	0x01DAE68C LDR X0, [X0 + 0x8C0]
	0x01DAE690 BL 0x1C16CF4
	0x01DAE694 ADRP X0, 0x2349000
	0x01DAE698 LDR X0, [X0 + 0x1D0]
	0x01DAE69C BL 0x1C16CF4
	0x01DAE6A0 ADRP X0, 0x2345000
	0x01DAE6A4 LDR X0, [X0 + 0x598]
	0x01DAE6A8 BL 0x1C16CF4
	0x01DAE6AC MOVZ W8, 0x1
	0x01DAE6B0 STRB W8, [X20 + 0xADA]
	0x01DAE6B4 LDR X0, [X21]
	0x01DAE6B8 MOVZ W1, 0xF
	0x01DAE6BC BL 0x1C16D6C
	0x01DAE6C0 STR X0, [X19 + 0x60]
	0x01DAE6C4 CBZ X0, 0x1DAE7A8
	0x01DAE6C8 ADRP X23, 0x2345000
	0x01DAE6CC ADRP X24, 0x2349000
	0x01DAE6D0 ADRP X25, 0x2349000
	0x01DAE6D4 LDR X23, [X23 + 0x598]
	0x01DAE6D8 LDR X24, [X24 + 0x1D0]
	0x01DAE6DC LDR X25, [X25 + 0x8C8]
	0x01DAE6E0 MOV X20, X0
	0x01DAE6E4 MOVZ W26, 0x4
	0x01DAE6E8 LDRSW X8, [X20 + 0x18]
	0x01DAE6EC SUB X27, X26, 0x4
	0x01DAE6F0 CMP X27, X8
	0x01DAE6F4 B.GE 0x1DAE7AC
	0x01DAE6F8 LDR X0, [X19 + 0x28]
	0x01DAE6FC CBZ X0, 0x1DAE7A8
	0x01DAE700 MOV X1, X31
	0x01DAE704 BL 0x3C32ECC
	0x01DAE708 LDR X8, [X19 + 0x38]
	0x01DAE70C CBZ X8, 0x1DAE7A8
	0x01DAE710 MOV X21, X0
	0x01DAE714 MOV X0, X8
	0x01DAE718 MOV X1, X31
	0x01DAE71C BL 0x3C32E90
	0x01DAE720 LDR X8, [X23]
	0x01DAE724 MOV X22, X0
	0x01DAE728 LDR W9, [X8 + 0xE0]
	0x01DAE72C CBNZ W9, 0x1DAE738
	0x01DAE730 MOV X0, X8
	0x01DAE734 BL 0x1C16DFC
	0x01DAE738 LDR X2, [X24]
	0x01DAE73C MOV X0, X21
	0x01DAE740 MOV X1, X22
	0x01DAE744 BL 0x222D488
	0x01DAE748 CBZ X0, 0x1DAE7A8
	0x01DAE74C LDR X1, [X25]
	0x01DAE750 BL 0x21E52E4
	0x01DAE754 MOV X21, X0
	0x01DAE758 CBZ X0, 0x1DAE770
	0x01DAE75C LDR X8, [X20]
	0x01DAE760 MOV X0, X21
	0x01DAE764 LDR X1, [X8 + 0x40]
	0x01DAE768 BL 0x1C16E00
	0x01DAE76C CBZ X0, 0x1DAE7C8
	0x01DAE770 LDR W8, [X20 + 0x18]
	0x01DAE774 CMP X27, X8
	0x01DAE778 B.CS 0x1DAE7C4
	0x01DAE77C STR X21, [X20, X26, LSL #3]
	0x01DAE780 LDR X8, [X19 + 0x60]
	0x01DAE784 CBZ X8, 0x1DAE7A8
	0x01DAE788 LDR W9, [X8 + 0x18]
	0x01DAE78C CMP X27, X9
	0x01DAE790 B.CS 0x1DAE7C4
	0x01DAE794 LDR X1, [X8, X26, LSL #3]
	0x01DAE798 BL 0x1DAEADC
	0x01DAE79C LDR X20, [X19 + 0x60]
	0x01DAE7A0 ADD X26, X26, 0x1
	0x01DAE7A4 CBNZ X20, 0x1DAE6E8
	0x01DAE7A8 BL 0x1C16F20
	0x01DAE7AC LDP X20, X19, [X31 + 0x40]
	0x01DAE7B0 LDP X22, X21, [X31 + 0x30]
	0x01DAE7B4 LDP X24, X23, [X31 + 0x20]
	0x01DAE7B8 LDP X26, X25, [X31 + 0x10]
	0x01DAE7BC LDP X30, X27, [X31], #0x50
	0x01DAE7C0 RET
	0x01DAE7C4 BL 0x1C16F28
	0x01DAE7C8 BL 0x1C16F44
	0x01DAE7CC MOV X1, X31
	0x01DAE7D0 BL 0x1C16DEC
	0x01DAE7D4 STP X30, X27, [X31 - 0x50]!
	0x01DAE7D8 STP X26, X25, [X31 + 0x10]
	0x01DAE7DC STP X24, X23, [X31 + 0x20]
	0x01DAE7E0 STP X22, X21, [X31 + 0x30]
	0x01DAE7E4 STP X20, X19, [X31 + 0x40]
	0x01DAE7E8 ADRP X20, 0x262A000
	0x01DAE7EC ADRP X21, 0x2349000
	0x01DAE7F0 LDRB W8, [X20 + 0xADB]
	0x01DAE7F4 LDR X21, [X21 + 0x8C0]
	0x01DAE7F8 MOV X19, X0
	0x01DAE7FC TBNZ X8, 0x0, 0x1DAE838
	0x01DAE800 ADRP X0, 0x2349000
	0x01DAE804 LDR X0, [X0 + 0x8C8]
	0x01DAE808 BL 0x1C16CF4
	0x01DAE80C ADRP X0, 0x2349000
	0x01DAE810 LDR X0, [X0 + 0x8C0]
	0x01DAE814 BL 0x1C16CF4
	0x01DAE818 ADRP X0, 0x2349000
	0x01DAE81C LDR X0, [X0 + 0x1D0]
	0x01DAE820 BL 0x1C16CF4
	0x01DAE824 ADRP X0, 0x2345000
	0x01DAE828 LDR X0, [X0 + 0x598]
	0x01DAE82C BL 0x1C16CF4
	0x01DAE830 MOVZ W8, 0x1
	0x01DAE834 STRB W8, [X20 + 0xADB]
	0x01DAE838 LDR X0, [X21]
	0x01DAE83C MOVZ W1, 0x28
	0x01DAE840 BL 0x1C16D6C
	0x01DAE844 STR X0, [X19 + 0x68]
	0x01DAE848 CBZ X0, 0x1DAE92C
	0x01DAE84C ADRP X23, 0x2345000
	0x01DAE850 ADRP X24, 0x2349000
	0x01DAE854 ADRP X25, 0x2349000
	0x01DAE858 LDR X23, [X23 + 0x598]
	0x01DAE85C LDR X24, [X24 + 0x1D0]
	0x01DAE860 LDR X25, [X25 + 0x8C8]
	0x01DAE864 MOV X20, X0
	0x01DAE868 MOVZ W26, 0x4
	0x01DAE86C LDRSW X8, [X20 + 0x18]
	0x01DAE870 SUB X27, X26, 0x4
	0x01DAE874 CMP X27, X8
	0x01DAE878 B.GE 0x1DAE930
	0x01DAE87C LDR X0, [X19 + 0x30]
	0x01DAE880 CBZ X0, 0x1DAE92C
	0x01DAE884 MOV X1, X31
	0x01DAE888 BL 0x3C32ECC
	0x01DAE88C LDR X8, [X19 + 0x38]
	0x01DAE890 CBZ X8, 0x1DAE92C
	0x01DAE894 MOV X21, X0
	0x01DAE898 MOV X0, X8
	0x01DAE89C MOV X1, X31
	0x01DAE8A0 BL 0x3C32E90
	0x01DAE8A4 LDR X8, [X23]
	0x01DAE8A8 MOV X22, X0
	0x01DAE8AC LDR W9, [X8 + 0xE0]
	0x01DAE8B0 CBNZ W9, 0x1DAE8BC
	0x01DAE8B4 MOV X0, X8
	0x01DAE8B8 BL 0x1C16DFC
	0x01DAE8BC LDR X2, [X24]
	0x01DAE8C0 MOV X0, X21
	0x01DAE8C4 MOV X1, X22
	0x01DAE8C8 BL 0x222D488
	0x01DAE8CC CBZ X0, 0x1DAE92C
	0x01DAE8D0 LDR X1, [X25]
	0x01DAE8D4 BL 0x21E52E4
	0x01DAE8D8 MOV X21, X0
	0x01DAE8DC CBZ X0, 0x1DAE8F4
	0x01DAE8E0 LDR X8, [X20]
	0x01DAE8E4 MOV X0, X21
	0x01DAE8E8 LDR X1, [X8 + 0x40]
	0x01DAE8EC BL 0x1C16E00
	0x01DAE8F0 CBZ X0, 0x1DAE94C
	0x01DAE8F4 LDR W8, [X20 + 0x18]
	0x01DAE8F8 CMP X27, X8
	0x01DAE8FC B.CS 0x1DAE948
	0x01DAE900 STR X21, [X20, X26, LSL #3]
	0x01DAE904 LDR X8, [X19 + 0x68]
	0x01DAE908 CBZ X8, 0x1DAE92C
	0x01DAE90C LDR W9, [X8 + 0x18]
	0x01DAE910 CMP X27, X9
	0x01DAE914 B.CS 0x1DAE948
	0x01DAE918 LDR X1, [X8, X26, LSL #3]
	0x01DAE91C BL 0x1DAEADC
	0x01DAE920 LDR X20, [X19 + 0x68]
	0x01DAE924 ADD X26, X26, 0x1
	0x01DAE928 CBNZ X20, 0x1DAE86C
	0x01DAE92C BL 0x1C16F20
	0x01DAE930 LDP X20, X19, [X31 + 0x40]
	0x01DAE934 LDP X22, X21, [X31 + 0x30]
	0x01DAE938 LDP X24, X23, [X31 + 0x20]
	0x01DAE93C LDP X26, X25, [X31 + 0x10]
	0x01DAE940 LDP X30, X27, [X31], #0x50
	0x01DAE944 RET
	0x01DAE948 BL 0x1C16F28
	0x01DAE94C BL 0x1C16F44
	0x01DAE950 MOV X1, X31
	0x01DAE954 BL 0x1C16DEC
	0x01DAE958 STP X30, X27, [X31 - 0x50]!
	0x01DAE95C STP X26, X25, [X31 + 0x10]
	0x01DAE960 STP X24, X23, [X31 + 0x20]
	0x01DAE964 STP X22, X21, [X31 + 0x30]
	0x01DAE968 STP X20, X19, [X31 + 0x40]
	0x01DAE96C ADRP X20, 0x262A000
	0x01DAE970 ADRP X21, 0x2349000
	0x01DAE974 LDRB W8, [X20 + 0xAD9]
	0x01DAE978 LDR X21, [X21 + 0x8C0]
	0x01DAE97C MOV X19, X0
	0x01DAE980 TBNZ X8, 0x0, 0x1DAE9BC
	0x01DAE984 ADRP X0, 0x2349000
	0x01DAE988 LDR X0, [X0 + 0x8C8]
	0x01DAE98C BL 0x1C16CF4
	0x01DAE990 ADRP X0, 0x2349000
	0x01DAE994 LDR X0, [X0 + 0x8C0]
	0x01DAE998 BL 0x1C16CF4
	0x01DAE99C ADRP X0, 0x2349000
	0x01DAE9A0 LDR X0, [X0 + 0x1D0]
	0x01DAE9A4 BL 0x1C16CF4
	0x01DAE9A8 ADRP X0, 0x2345000
	0x01DAE9AC LDR X0, [X0 + 0x598]
	0x01DAE9B0 BL 0x1C16CF4
	0x01DAE9B4 MOVZ W8, 0x1
	0x01DAE9B8 STRB W8, [X20 + 0xAD9]
	0x01DAE9BC LDR X0, [X21]
	0x01DAE9C0 MOVZ W1, 0xC
	0x01DAE9C4 BL 0x1C16D6C
	0x01DAE9C8 STR X0, [X19 + 0x58]
	0x01DAE9CC CBZ X0, 0x1DAEAB0
	0x01DAE9D0 ADRP X23, 0x2345000
	0x01DAE9D4 ADRP X24, 0x2349000
	0x01DAE9D8 ADRP X25, 0x2349000
	0x01DAE9DC LDR X23, [X23 + 0x598]
	0x01DAE9E0 LDR X24, [X24 + 0x1D0]
	0x01DAE9E4 LDR X25, [X25 + 0x8C8]
	0x01DAE9E8 MOV X20, X0
	0x01DAE9EC MOVZ W26, 0x4
	0x01DAE9F0 LDRSW X8, [X20 + 0x18]
	0x01DAE9F4 SUB X27, X26, 0x4
	0x01DAE9F8 CMP X27, X8
	0x01DAE9FC B.GE 0x1DAEAB4
	0x01DAEA00 LDR X0, [X19 + 0x20]
	0x01DAEA04 CBZ X0, 0x1DAEAB0
	0x01DAEA08 MOV X1, X31
	0x01DAEA0C BL 0x3C32ECC
	0x01DAEA10 LDR X8, [X19 + 0x38]
	0x01DAEA14 CBZ X8, 0x1DAEAB0
	0x01DAEA18 MOV X21, X0
	0x01DAEA1C MOV X0, X8
	0x01DAEA20 MOV X1, X31
	0x01DAEA24 BL 0x3C32E90
	0x01DAEA28 LDR X8, [X23]
	0x01DAEA2C MOV X22, X0
	0x01DAEA30 LDR W9, [X8 + 0xE0]
	0x01DAEA34 CBNZ W9, 0x1DAEA40
	0x01DAEA38 MOV X0, X8
	0x01DAEA3C BL 0x1C16DFC
	0x01DAEA40 LDR X2, [X24]
	0x01DAEA44 MOV X0, X21
	0x01DAEA48 MOV X1, X22
	0x01DAEA4C BL 0x222D488
	0x01DAEA50 CBZ X0, 0x1DAEAB0
	0x01DAEA54 LDR X1, [X25]
	0x01DAEA58 BL 0x21E52E4
	0x01DAEA5C MOV X21, X0
	0x01DAEA60 CBZ X0, 0x1DAEA78
	0x01DAEA64 LDR X8, [X20]
	0x01DAEA68 MOV X0, X21
	0x01DAEA6C LDR X1, [X8 + 0x40]
	0x01DAEA70 BL 0x1C16E00
	0x01DAEA74 CBZ X0, 0x1DAEAD0
	0x01DAEA78 LDR W8, [X20 + 0x18]
	0x01DAEA7C CMP X27, X8
	0x01DAEA80 B.CS 0x1DAEACC
	0x01DAEA84 STR X21, [X20, X26, LSL #3]
	0x01DAEA88 LDR X8, [X19 + 0x58]
	0x01DAEA8C CBZ X8, 0x1DAEAB0
	0x01DAEA90 LDR W9, [X8 + 0x18]
	0x01DAEA94 CMP X27, X9
	0x01DAEA98 B.CS 0x1DAEACC
	0x01DAEA9C LDR X1, [X8, X26, LSL #3]
	0x01DAEAA0 BL 0x1DAEADC
	0x01DAEAA4 LDR X20, [X19 + 0x58]
	0x01DAEAA8 ADD X26, X26, 0x1
	0x01DAEAAC CBNZ X20, 0x1DAE9F0
	0x01DAEAB0 BL 0x1C16F20
	0x01DAEAB4 LDP X20, X19, [X31 + 0x40]
	0x01DAEAB8 LDP X22, X21, [X31 + 0x30]
	0x01DAEABC LDP X24, X23, [X31 + 0x20]
	0x01DAEAC0 LDP X26, X25, [X31 + 0x10]
	0x01DAEAC4 LDP X30, X27, [X31], #0x50
	0x01DAEAC8 RET
	0x01DAEACC BL 0x1C16F28
	0x01DAEAD0 BL 0x1C16F44
	0x01DAEAD4 MOV X1, X31
	0x01DAEAD8 BL 0x1C16DEC
	0x01DAEADC STP X30, X19, [X31 - 0x10]!
	0x01DAEAE0 CBZ X1, 0x1DAEB2C
	0x01DAEAE4 MOV X19, X1
	0x01DAEAE8 MOV X0, X1
	0x01DAEAEC MOV X1, X31
	0x01DAEAF0 BL 0x3C32ECC
	0x01DAEAF4 CBZ X0, 0x1DAEB2C
	0x01DAEAF8 MOV X1, X31
	0x01DAEAFC BL 0x3C357F8
	0x01DAEB00 TBZ X0, 0x0, 0x1DAEB24
	0x01DAEB04 MOV X0, X19
	0x01DAEB08 MOV X1, X31
	0x01DAEB0C BL 0x3C32ECC
	0x01DAEB10 CBZ X0, 0x1DAEB2C
	0x01DAEB14 MOV W1, W31
	0x01DAEB18 MOV X2, X31
	0x01DAEB1C LDP X30, X19, [X31], #0x10
	0x01DAEB20 B 0x3C357B4
	0x01DAEB24 LDP X30, X19, [X31], #0x10
	0x01DAEB28 RET
	0x01DAEB2C BL 0x1C16F20
	0x01DAEB30 STR D8, [X31 - 0x30]!
	0x01DAEB34 STP X30, X21, [X31 + 0x10]
	0x01DAEB38 STP X20, X19, [X31 + 0x20]
	0x01DAEB3C ADRP X21, 0x262A000
	0x01DAEB40 ADRP X20, 0x2345000
	0x01DAEB44 LDRB W8, [X21 + 0xADC]
	0x01DAEB48 LDR X20, [X20 + 0x598]
	0x01DAEB4C MOV X19, X0
	0x01DAEB50 TBNZ X8, 0x0, 0x1DAEB68
	0x01DAEB54 ADRP X0, 0x2345000
	0x01DAEB58 LDR X0, [X0 + 0x598]
	0x01DAEB5C BL 0x1C16CF4
	0x01DAEB60 MOVZ W8, 0x1
	0x01DAEB64 STRB W8, [X21 + 0xADC]
	0x01DAEB68 LDR X0, [X20]
	0x01DAEB6C LDR X20, [X19 + 0x48]
	0x01DAEB70 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-144], D12
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X29
	007 Move [X31+56], X30
	008 Move [X31+64], X28
	009 Move [X31+72], X27
	010 Move [X31+80], X26
	011 Move [X31+88], X25
	012 Move [X31+96], X24
	013 Move [X31+104], X23
	014 Move [X31+112], X22
	015 Move [X31+120], X21
	016 Move [X31+128], X20
	017 Move [X31+136], X19
	018 Move X22, 0x262B000
	019 Move W8, [X22+2782]
	020 Move X20, X2
	021 Move X21, X1
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {50}
	027 Move X0, 0x234A000
	028 Move X0, [X0+2168]
	029 Call 0x1C17CF4
	030 Move X0, 0x2346000
	031 Move X0, [X0+3584]
	032 Call 0x1C17CF4
	033 Move X0, 0x234A000
	034 Move X0, [X0+2176]
	035 Call 0x1C17CF4
	036 Move X0, 0x234A000
	037 Move X0, [X0+2184]
	038 Call 0x1C17CF4
	039 Move X0, 0x234A000
	040 Move X0, [X0+2192]
	041 Call 0x1C17CF4
	042 Move X0, 0x234A000
	043 Move X0, [X0+2200]
	044 Call 0x1C17CF4
	045 Move X0, 0x2346000
	046 Move X0, [X0+3608]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X22+2782], W8
	050 Compare X21, 0
	051 JumpIfEqual {503}
	052 Move X10, 0x234A000
	053 Move X8, [X21]
	054 Move X10, [X10+2176]
	055 NotImplemented "Instruction LDRH not yet implemented."
	056 Move X1, [X10]
	057 Compare X9, 0
	058 JumpIfEqual {65}
	059 Move X10, [X8+176]
	060 Add X10, X10, 8
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Subtract X9, X9, 1
	064 Add X10, X10, 16
	065 Move X0, X21
	066 Move W2, W31
	067 Call 0x1C5D788
	068 NotImplemented "Instruction LDRSW not yet implemented."
	069 Add X8, X8, X9
	070 Add X0, X8, 312
	071 Move X8, [X0]
	072 Move X1, [X0+8]
	073 Move X25, 0x2346000
	074 Move X24, 0x2346000
	075 Move X25, [X25+3608]
	076 Move X24, [X24+3584]
	077 Move X0, X21
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Move X21, X0
	080 Compare X0, 0
	081 JumpIfEqual {539}
	082 Move X27, 0x234A000
	083 Move X28, 0x234A000
	084 Move X27, [X27+2200]
	085 Move X28, [X28+2168]
	086 Move W26, W31
	087 Move X29, W26
	088 Move X8, [X21]
	089 Move X1, [X25]
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Compare X9, 0
	092 JumpIfEqual {99}
	093 Move X10, [X8+176]
	094 Add X10, X10, 8
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Subtract X9, X9, 1
	098 Add X10, X10, 16
	099 Move X0, X21
	100 Move W2, W31
	101 Call 0x1C5D788
	102 NotImplemented "Instruction LDRSW not yet implemented."
	103 Add X8, X8, X9
	104 Add X0, X8, 312
	105 Move X8, [X0]
	106 Move X1, [X0+8]
	107 Move X0, X21
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {252}
	113 Move X8, [X21]
	114 Move X1, [X27]
	115 NotImplemented "Instruction LDRH not yet implemented."
	116 Compare X9, 0
	117 JumpIfEqual {124}
	118 Move X10, [X8+176]
	119 Add X10, X10, 8
	120 NotImplemented "Instruction LDUR not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Subtract X9, X9, 1
	123 Add X10, X10, 16
	124 Move X0, X21
	125 Move W2, W31
	126 Call 0x1C5D788
	127 NotImplemented "Instruction LDRSW not yet implemented."
	128 Add X8, X8, X9
	129 Add X0, X8, 312
	130 Move X8, [X0]
	131 Move X1, [X0+8]
	132 Move X0, X21
	133 NotImplemented "Instruction BLR not yet implemented."
	134 Move X8, [X19+96]
	135 Compare X8, 0
	136 JumpIfEqual {522}
	137 Move W8, [X8+24]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X22, X0
	140 Compare X0, 0
	141 JumpIfEqual {159}
	142 Move X9, [X22]
	143 Move X8, [X28]
	144 Move W11, [X9+304]
	145 Move W10, [X8+304]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move X9, [X9+200]
	148 Add X9, X9, X10
	149 NotImplemented "Instruction LDUR not yet implemented."
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X0, X22
	152 Move X1, X31
	153 Call AnglerController.get_phase, X0
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X0, X22
	156 Move X1, X31
	157 Call AnglerController.get_phase, X0
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move X8, [X19+96]
	160 Compare X8, 0
	161 JumpIfEqual {525}
	162 Move W9, [X8+24]
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Compare X22, 0
	165 JumpIfEqual {526}
	166 Add X8, X8, X29
	167 Move X23, [X8+32]
	168 Move X0, X22
	169 Move X1, X31
	170 Call Component.get_transform, X0
	171 Compare X0, 0
	172 JumpIfEqual {524}
	173 Move X1, X31
	174 Call Transform.get_position, X0
	175 Move W8, [X19+80]
	176 Move V8, V0
	177 Move V9, V2
	178 Compare W8, 0
	179 JumpIfEqual {189}
	180 Move X0, X19
	181 Move X1, X31
	182 Call Component.get_transform, X0
	183 Compare X0, 0
	184 JumpIfEqual {532}
	185 Move X1, X31
	186 Call Transform.get_position, X0
	187 Subtract S8, S8, S0
	188 Subtract S9, S9, S2
	189 Move X0, X22
	190 Move X1, X31
	191 Call Component.get_transform, X0
	192 Compare X0, 0
	193 JumpIfEqual {527}
	194 Move X1, X31
	195 Call Transform.get_position, X0
	196 Move V10, V0
	197 Move V11, V1
	198 Move V12, V2
	199 Move X0, X19
	200 Move X1, X31
	201 Call Component.get_transform, X0
	202 Compare X0, 0
	203 JumpIfEqual {528}
	204 Move X1, X31
	205 Call Transform.get_position, X0
	206 Move V3, [X19+84]
	207 Subtract S0, S10, S0
	208 Subtract S1, S11, S1
	209 Subtract S2, S12, S2
	210 Multiply S0, S0, S0
	211 Multiply S1, S1, S1
	212 Add S0, S0, S1
	213 Multiply S1, S2, S2
	214 Add S0, S1, S0
	215 Multiply S1, S3, S3
	216 NotImplemented "Instruction FCMP not yet implemented."
	217 Move X0, X22
	218 Move X1, X31
	219 Call MobController.get_isDie, X0
	220 Compare X23, 0
	221 JumpIfEqual {546}
	222 And W1, W0, 1
	223 Move X0, X23
	224 Call MapIconView.SetOverlayActive, X0, X1
	225 Move X0, [X23+56]
	226 Compare X0, 0
	227 JumpIfEqual {545}
	228 Add S1, S9, S9
	229 Add S0, S8, S8
	230 Move X1, X31
	231 Call RectTransform.set_anchoredPosition, X0, X1
	232 Move X0, X23
	233 Move X1, X31
	234 Call Component.get_gameObject, X0
	235 Compare X0, 0
	236 JumpIfEqual {547}
	237 Move X1, X31
	238 Call GameObject.get_activeSelf, X0
	239 Move TEMP, X0
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfEqual {251}
	243 Move X0, X23
	244 Move X1, X31
	245 Call Component.get_gameObject, X0
	246 Compare X0, 0
	247 JumpIfEqual {548}
	248 Move W1, 1
	249 Move X2, X31
	250 Call GameObject.SetActive, X0, X1
	251 Add W26, W26, 1
	252 Move X22, X31
	253 Move W23, 5
	254 Compare X21, 0
	255 JumpIfEqual {277}
	256 Move X8, [X21]
	257 Move X1, [X24]
	258 NotImplemented "Instruction LDRH not yet implemented."
	259 Compare X9, 0
	260 JumpIfEqual {267}
	261 Move X10, [X8+176]
	262 Add X10, X10, 8
	263 NotImplemented "Instruction LDUR not yet implemented."
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Subtract X9, X9, 1
	266 Add X10, X10, 16
	267 Move X0, X21
	268 Move W2, W31
	269 Call 0x1C5D788
	270 NotImplemented "Instruction LDRSW not yet implemented."
	271 Add X8, X8, X9
	272 Add X0, X8, 312
	273 Move X8, [X0]
	274 Move X1, [X0+8]
	275 Move X0, X21
	276 NotImplemented "Instruction BLR not yet implemented."
	277 Compare X22, 0
	278 JumpIfNotEqual {540}
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Compare W23, 0
	281 JumpIfNotEqual {504}
	282 Compare X20, 0
	283 JumpIfEqual {503}
	284 Move X10, 0x234A000
	285 Move X8, [X20]
	286 Move X10, [X10+2184]
	287 NotImplemented "Instruction LDRH not yet implemented."
	288 Move X1, [X10]
	289 Compare X9, 0
	290 JumpIfEqual {297}
	291 Move X10, [X8+176]
	292 Add X10, X10, 8
	293 NotImplemented "Instruction LDUR not yet implemented."
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Subtract X9, X9, 1
	296 Add X10, X10, 16
	297 Move X0, X20
	298 Move W2, W31
	299 Call 0x1C5D788
	300 NotImplemented "Instruction LDRSW not yet implemented."
	301 Add X8, X8, X9
	302 Add X0, X8, 312
	303 Move X8, [X0]
	304 Move X1, [X0+8]
	305 Move X0, X20
	306 NotImplemented "Instruction BLR not yet implemented."
	307 Move X20, X0
	308 Compare X0, 0
	309 JumpIfEqual {542}
	310 Move X23, 0x234A000
	311 Move X23, [X23+2192]
	312 Move X27, W26
	313 Move X8, [X20]
	314 Move X1, [X25]
	315 NotImplemented "Instruction LDRH not yet implemented."
	316 Compare X9, 0
	317 JumpIfEqual {324}
	318 Move X10, [X8+176]
	319 Add X10, X10, 8
	320 NotImplemented "Instruction LDUR not yet implemented."
	321 NotImplemented "Instruction CMP not yet implemented."
	322 Subtract X9, X9, 1
	323 Add X10, X10, 16
	324 Move X0, X20
	325 Move W2, W31
	326 Call 0x1C5D788
	327 NotImplemented "Instruction LDRSW not yet implemented."
	328 Add X8, X8, X9
	329 Add X0, X8, 312
	330 Move X8, [X0]
	331 Move X1, [X0+8]
	332 Move X0, X20
	333 NotImplemented "Instruction BLR not yet implemented."
	334 Move TEMP, X0
	335 And TEMP, TEMP, 1
	336 Compare TEMP, 1
	337 JumpIfNotEqual {459}
	338 Move X8, [X20]
	339 Move X1, [X23]
	340 NotImplemented "Instruction LDRH not yet implemented."
	341 Compare X9, 0
	342 JumpIfEqual {349}
	343 Move X10, [X8+176]
	344 Add X10, X10, 8
	345 NotImplemented "Instruction LDUR not yet implemented."
	346 NotImplemented "Instruction CMP not yet implemented."
	347 Subtract X9, X9, 1
	348 Add X10, X10, 16
	349 Move X0, X20
	350 Move W2, W31
	351 Call 0x1C5D788
	352 NotImplemented "Instruction LDRSW not yet implemented."
	353 Add X8, X8, X9
	354 Add X0, X8, 312
	355 Move X8, [X0]
	356 Move X1, [X0+8]
	357 Move X0, X20
	358 NotImplemented "Instruction BLR not yet implemented."
	359 Move X8, [X19+96]
	360 Compare X8, 0
	361 JumpIfEqual {530}
	362 Move W8, [X8+24]
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Move X22, X0
	365 Compare X0, 0
	366 JumpIfEqual {531}
	367 Move X0, X22
	368 Move X1, X31
	369 Call MobControllerMine.get_isExploded, X0
	370 Move TEMP, X0
	371 And TEMP, TEMP, 1
	372 Compare TEMP, 1
	373 JumpIfEqual {313}
	374 Move X8, [X19+96]
	375 Compare X8, 0
	376 JumpIfEqual {534}
	377 Move W9, [X8+24]
	378 NotImplemented "Instruction CMP not yet implemented."
	379 Add X8, X8, X27
	380 Move X21, [X8+32]
	381 Move X0, X22
	382 Move X1, X31
	383 Call Component.get_transform, X0
	384 Compare X0, 0
	385 JumpIfEqual {537}
	386 Move X1, X31
	387 Call Transform.get_position, X0
	388 Move W8, [X19+80]
	389 Move V8, V0
	390 Move V9, V2
	391 Compare W8, 0
	392 JumpIfEqual {402}
	393 Move X0, X19
	394 Move X1, X31
	395 Call Component.get_transform, X0
	396 Compare X0, 0
	397 JumpIfEqual {538}
	398 Move X1, X31
	399 Call Transform.get_position, X0
	400 Subtract S8, S8, S0
	401 Subtract S9, S9, S2
	402 Move X0, X22
	403 Move X1, X31
	404 Call Component.get_transform, X0
	405 Compare X0, 0
	406 JumpIfEqual {535}
	407 Move X1, X31
	408 Call Transform.get_position, X0
	409 Move V10, V0
	410 Move V11, V1
	411 Move V12, V2
	412 Move X0, X19
	413 Move X1, X31
	414 Call Component.get_transform, X0
	415 Compare X0, 0
	416 JumpIfEqual {536}
	417 Move X1, X31
	418 Call Transform.get_position, X0
	419 Move V3, [X19+84]
	420 Subtract S0, S10, S0
	421 Subtract S1, S11, S1
	422 Subtract S2, S12, S2
	423 Multiply S0, S0, S0
	424 Multiply S1, S1, S1
	425 Add S0, S0, S1
	426 Multiply S1, S2, S2
	427 Add S0, S1, S0
	428 Multiply S1, S3, S3
	429 NotImplemented "Instruction FCMP not yet implemented."
	430 Compare X21, 0
	431 JumpIfEqual {550}
	432 Move X0, [X21+56]
	433 Compare X0, 0
	434 JumpIfEqual {551}
	435 Add S1, S9, S9
	436 Add S0, S8, S8
	437 Move X1, X31
	438 Call RectTransform.set_anchoredPosition, X0, X1
	439 Move X0, X21
	440 Move X1, X31
	441 Call Component.get_gameObject, X0
	442 Compare X0, 0
	443 JumpIfEqual {549}
	444 Move X1, X31
	445 Call GameObject.get_activeSelf, X0
	446 Move TEMP, X0
	447 And TEMP, TEMP, 1
	448 Compare TEMP, 1
	449 JumpIfEqual {458}
	450 Move X0, X21
	451 Move X1, X31
	452 Call Component.get_gameObject, X0
	453 Compare X0, 0
	454 JumpIfEqual {552}
	455 Move W1, 1
	456 Move X2, X31
	457 Call GameObject.SetActive, X0, X1
	458 Add W26, W26, 1
	459 Move X21, X31
	460 Move W22, 12
	461 Compare X20, 0
	462 JumpIfEqual {484}
	463 Move X8, [X20]
	464 Move X1, [X24]
	465 NotImplemented "Instruction LDRH not yet implemented."
	466 Compare X9, 0
	467 JumpIfEqual {474}
	468 Move X10, [X8+176]
	469 Add X10, X10, 8
	470 NotImplemented "Instruction LDUR not yet implemented."
	471 NotImplemented "Instruction CMP not yet implemented."
	472 Subtract X9, X9, 1
	473 Add X10, X10, 16
	474 Move X0, X20
	475 Move W2, W31
	476 Call 0x1C5D788
	477 NotImplemented "Instruction LDRSW not yet implemented."
	478 Add X8, X8, X9
	479 Add X0, X8, 312
	480 Move X8, [X0]
	481 Move X1, [X0+8]
	482 Move X0, X20
	483 NotImplemented "Instruction BLR not yet implemented."
	484 Compare X21, 0
	485 JumpIfNotEqual {543}
	486 NotImplemented "Instruction CMP not yet implemented."
	487 Compare W22, 0
	488 JumpIfNotEqual {504}
	489 Move X8, [X19+96]
	490 Compare X8, 0
	491 JumpIfEqual {503}
	492 Move X20, W26
	493 Move X9, [X8+24]
	494 NotImplemented "Instruction CMP not yet implemented."
	495 NotImplemented "Instruction CMP not yet implemented."
	496 Add X8, X8, X20
	497 Move X1, [X8+32]
	498 Call MapView.DeactivateMapIcon, X0, X1
	499 Move X8, [X19+96]
	500 Add X20, X20, 1
	501 Compare X8, 0
	502 JumpIfNotEqual {493}
	503 Call 0x1C17F20
	504 Move X20, [X31+128]
	505 Move X19, [X31+136]
	506 Move X22, [X31+112]
	507 Move X21, [X31+120]
	508 Move X24, [X31+96]
	509 Move X23, [X31+104]
	510 Move X26, [X31+80]
	511 Move X25, [X31+88]
	512 Move X28, [X31+64]
	513 Move X27, [X31+72]
	514 Move X29, [X31+48]
	515 Move X30, [X31+56]
	516 Move D9, [X31+32]
	517 Move D8, [X31+40]
	518 Move D11, [X31+16]
	519 Move D10, [X31+24]
	520 Move V12, [X31+144]
	521 Return 
	522 Call 0x1C17F20
	523 Call 0x1C17F28
	524 Call 0x1C17F20
	525 Call 0x1C17F20
	526 Call 0x1C17F20
	527 Call 0x1C17F20
	528 Call 0x1C17F20
	529 Call 0x1C17F28
	530 Call 0x1C17F20
	531 Call 0x1C17F20
	532 Call 0x1C17F20
	533 Call 0x1C17F28
	534 Call 0x1C17F20
	535 Call 0x1C17F20
	536 Call 0x1C17F20
	537 Call 0x1C17F20
	538 Call 0x1C17F20
	539 Call 0x1C17F20
	540 Move X0, X22
	541 Call 0x1C17F18
	542 Call 0x1C17F20
	543 Move X0, X21
	544 Call 0x1C17F18
	545 Call 0x1C17F20
	546 Call 0x1C17F20
	547 Call 0x1C17F20
	548 Call 0x1C17F20
	549 Call 0x1C17F20
	550 Call 0x1C17F20
	551 Call 0x1C17F20
	552 Call 0x1C17F20
	553 Move W26, W31
	554 NotImplemented "Instruction CMP not yet implemented."
	555 Call 0x3EB2AD0
	556 Move X21, [X0]
	557 Call 0x3EB2AE0
	558 Move W22, W31
	559 Compare X20, 0
	560 JumpIfNotEqual {463}
	561 Move X19, X0
	562 Move X21, X31
	563 Move X19, X0
	564 Compare X20, 0
	565 JumpIfEqual {587}
	566 Move X8, [X20]
	567 Move X1, [X24]
	568 NotImplemented "Instruction LDRH not yet implemented."
	569 Compare X9, 0
	570 JumpIfEqual {577}
	571 Move X10, [X8+176]
	572 Add X10, X10, 8
	573 NotImplemented "Instruction LDUR not yet implemented."
	574 NotImplemented "Instruction CMP not yet implemented."
	575 Subtract X9, X9, 1
	576 Add X10, X10, 16
	577 Move X0, X20
	578 Move W2, W31
	579 Call 0x1C5D788
	580 NotImplemented "Instruction LDRSW not yet implemented."
	581 Add X8, X8, X9
	582 Add X0, X8, 312
	583 Move X8, [X0]
	584 Move X1, [X0+8]
	585 Move X0, X20
	586 NotImplemented "Instruction BLR not yet implemented."
	587 Compare X21, 0
	588 JumpIfEqual {626}
	589 Move X0, X21
	590 Call 0x1C17F18
	591 NotImplemented "Instruction CMP not yet implemented."
	592 Call 0x3EB2AD0
	593 Move X22, [X0]
	594 Call 0x3EB2AE0
	595 Move W23, W31
	596 Compare X21, 0
	597 JumpIfNotEqual {256}
	598 Move X19, X0
	599 Move X22, X31
	600 Move X19, X0
	601 Compare X21, 0
	602 JumpIfEqual {624}
	603 Move X8, [X21]
	604 Move X1, [X24]
	605 NotImplemented "Instruction LDRH not yet implemented."
	606 Compare X9, 0
	607 JumpIfEqual {614}
	608 Move X10, [X8+176]
	609 Add X10, X10, 8
	610 NotImplemented "Instruction LDUR not yet implemented."
	611 NotImplemented "Instruction CMP not yet implemented."
	612 Subtract X9, X9, 1
	613 Add X10, X10, 16
	614 Move X0, X21
	615 Move W2, W31
	616 Call 0x1C5D788
	617 NotImplemented "Instruction LDRSW not yet implemented."
	618 Add X8, X8, X9
	619 Add X0, X8, 312
	620 Move X8, [X0]
	621 Move X1, [X0+8]
	622 Move X0, X21
	623 NotImplemented "Instruction BLR not yet implemented."
	624 Compare X22, 0
	625 JumpIfNotEqual {628}
	626 Move X0, X19
	627 Call 0x1D2D690
	628 Move X0, X22
	629 Call 0x1C17F18
	630 Call 0x1991590

Method: System.Void UpdatePlayerLocations(System.Collections.Generic.IEnumerable`1<AnimalCompany.NetPlayer> players, System.Int32 visiblePlayers)

Disassembly:
	0x01DADA68 LDR X8, [X20]
	0x01DADA6C LDR X1, [X24]
	0x01DADA70 LDRH W9, [X8 + 0x12E]
	0x01DADA74 CBZ X9, 0x1DADA98
	0x01DADA78 LDR X10, [X8 + 0xB0]
	0x01DADA7C ADD X10, X10, 0x8
	0x01DADA80 LDUR X11, [X10 - 0x8]
	0x01DADA84 CMP X11, X1
	0x01DADA88 B.EQ 0x1DADAA8
	0x01DADA8C SUBS X9, X9, 0x1
	0x01DADA90 ADD X10, X10, 0x10
	0x01DADA94 B.NE 0x1DADA80
	0x01DADA98 MOV X0, X20
	0x01DADA9C MOV W2, W31
	0x01DADAA0 BL 0x1C5C788
	0x01DADAA4 B 0x1DADAB4
	0x01DADAA8 LDRSW X9, [X10]
	0x01DADAAC ADD X8, X8, X9, 0x4, LSL
	0x01DADAB0 ADD X0, X8, 0x138
	0x01DADAB4 LDP X8, X1, [X0]
	0x01DADAB8 MOV X0, X20
	0x01DADABC BLR X8
	0x01DADAC0 CBZ X21, 0x1DADB60
	0x01DADAC4 MOV X0, X21
	0x01DADAC8 BL 0x1C16F18
	0x01DADACC B 0x1DADAD0
	0x01DADAD0 CMP W1, 0x1
	0x01DADAD4 B.NE 0x1DADAF0
	0x01DADAD8 BL 0x3EB1AD0
	0x01DADADC LDR X22, [X0]
	0x01DADAE0 BL 0x3EB1AE0
	0x01DADAE4 MOV W23, W31
	0x01DADAE8 CBNZ X21, 0x1DAD514
	0x01DADAEC B 0x1DAD56C
	0x01DADAF0 MOV X19, X0
	0x01DADAF4 MOV X22, X31
	0x01DADAF8 B 0x1DADB00
	0x01DADAFC MOV X19, X0
	0x01DADB00 CBZ X21, 0x1DADB5C
	0x01DADB04 LDR X8, [X21]
	0x01DADB08 LDR X1, [X24]
	0x01DADB0C LDRH W9, [X8 + 0x12E]
	0x01DADB10 CBZ X9, 0x1DADB34
	0x01DADB14 LDR X10, [X8 + 0xB0]
	0x01DADB18 ADD X10, X10, 0x8
	0x01DADB1C LDUR X11, [X10 - 0x8]
	0x01DADB20 CMP X11, X1
	0x01DADB24 B.EQ 0x1DADB44
	0x01DADB28 SUBS X9, X9, 0x1
	0x01DADB2C ADD X10, X10, 0x10
	0x01DADB30 B.NE 0x1DADB1C
	0x01DADB34 MOV X0, X21
	0x01DADB38 MOV W2, W31
	0x01DADB3C BL 0x1C5C788
	0x01DADB40 B 0x1DADB50
	0x01DADB44 LDRSW X9, [X10]
	0x01DADB48 ADD X8, X8, X9, 0x4, LSL
	0x01DADB4C ADD X0, X8, 0x138
	0x01DADB50 LDP X8, X1, [X0]
	0x01DADB54 MOV X0, X21
	0x01DADB58 BLR X8
	0x01DADB5C CBNZ X22, 0x1DADB68
	0x01DADB60 MOV X0, X19
	0x01DADB64 BL 0x1D2C690
	0x01DADB68 MOV X0, X22
	0x01DADB6C BL 0x1C16F18
	0x01DADB70 BL 0x1990590
	0x01DADB74 SUB X31, X31, 0x90
	0x01DADB78 STR D12, [X31 + 0x10]
	0x01DADB7C STP D11, D10, [X31 + 0x18]
	0x01DADB80 STP D9, D8, [X31 + 0x28]
	0x01DADB84 STR X30, [X31 + 0x38]
	0x01DADB88 STP X28, X27, [X31 + 0x40]
	0x01DADB8C STP X26, X25, [X31 + 0x50]
	0x01DADB90 STP X24, X23, [X31 + 0x60]
	0x01DADB94 STP X22, X21, [X31 + 0x70]
	0x01DADB98 STP X20, X19, [X31 + 0x80]
	0x01DADB9C ADRP X22, 0x262B000
	0x01DADBA0 LDRB W8, [X22 + 0xADD]
	0x01DADBA4 MOV X21, X2
	0x01DADBA8 MOV X20, X1
	0x01DADBAC MOV X19, X0
	0x01DADBB0 TBNZ X8, 0x0, 0x1DADC04
	0x01DADBB4 ADRP X0, 0x2346000
	0x01DADBB8 LDR X0, [X0 + 0xE00]
	0x01DADBBC BL 0x1C16CF4
	0x01DADBC0 ADRP X0, 0x234A000
	0x01DADBC4 LDR X0, [X0 + 0x8A0]
	0x01DADBC8 BL 0x1C16CF4
	0x01DADBCC ADRP X0, 0x234A000
	0x01DADBD0 LDR X0, [X0 + 0x8A8]
	0x01DADBD4 BL 0x1C16CF4
	0x01DADBD8 ADRP X0, 0x234A000
	0x01DADBDC LDR X0, [X0 + 0x8B0]
	0x01DADBE0 BL 0x1C16CF4
	0x01DADBE4 ADRP X0, 0x234A000
	0x01DADBE8 LDR X0, [X0 + 0x8B8]
	0x01DADBEC BL 0x1C16CF4
	0x01DADBF0 ADRP X0, 0x2346000
	0x01DADBF4 LDR X0, [X0 + 0xE18]
	0x01DADBF8 BL 0x1C16CF4
	0x01DADBFC MOVZ W8, 0x1
	0x01DADC00 STRB W8, [X22 + 0xADD]
	0x01DADC04 CBZ X21, 0x1DAE26C
	0x01DADC08 ADRP X10, 0x234A000
	0x01DADC0C LDR X8, [X21]
	0x01DADC10 LDR X10, [X10 + 0x8A8]
	0x01DADC14 LDRH W9, [X8 + 0x12E]
	0x01DADC18 LDR X1, [X10]
	0x01DADC1C CBZ X9, 0x1DADC40
	0x01DADC20 LDR X10, [X8 + 0xB0]
	0x01DADC24 ADD X10, X10, 0x8
	0x01DADC28 LDUR X11, [X10 - 0x8]
	0x01DADC2C CMP X11, X1
	0x01DADC30 B.EQ 0x1DADC50
	0x01DADC34 SUBS X9, X9, 0x1
	0x01DADC38 ADD X10, X10, 0x10
	0x01DADC3C B.NE 0x1DADC28
	0x01DADC40 MOV X0, X21
	0x01DADC44 MOV W2, W31
	0x01DADC48 BL 0x1C5C788
	0x01DADC4C B 0x1DADC5C
	0x01DADC50 LDRSW X9, [X10]
	0x01DADC54 ADD X8, X8, X9, 0x4, LSL
	0x01DADC58 ADD X0, X8, 0x138
	0x01DADC5C LDP X8, X1, [X0]
	0x01DADC60 ADRP X25, 0x2346000
	0x01DADC64 ADRP X24, 0x2346000
	0x01DADC68 LDR X25, [X25 + 0xE18]
	0x01DADC6C LDR X24, [X24 + 0xE00]
	0x01DADC70 MOV X0, X21
	0x01DADC74 BLR X8
	0x01DADC78 MOV X21, X0
	0x01DADC7C CBZ X0, 0x1DAE2E0
	0x01DADC80 ADRP X27, 0x234A000
	0x01DADC84 LDR X27, [X27 + 0x8B0]
	0x01DADC88 MOV W26, W31
	0x01DADC8C SXTW X28, W26
	0x01DADC90 LDR X8, [X21]
	0x01DADC94 LDR X1, [X25]
	0x01DADC98 LDRH W9, [X8 + 0x12E]
	0x01DADC9C CBZ X9, 0x1DADCC0
	0x01DADCA0 LDR X10, [X8 + 0xB0]
	0x01DADCA4 ADD X10, X10, 0x8
	0x01DADCA8 LDUR X11, [X10 - 0x8]
	0x01DADCAC CMP X11, X1
	0x01DADCB0 B.EQ 0x1DADCD0
	0x01DADCB4 SUBS X9, X9, 0x1
	0x01DADCB8 ADD X10, X10, 0x10
	0x01DADCBC B.NE 0x1DADCA8
	0x01DADCC0 MOV X0, X21
	0x01DADCC4 MOV W2, W31
	0x01DADCC8 BL 0x1C5C788
	0x01DADCCC B 0x1DADCDC
	0x01DADCD0 LDRSW X9, [X10]
	0x01DADCD4 ADD X8, X8, X9, 0x4, LSL
	0x01DADCD8 ADD X0, X8, 0x138
	0x01DADCDC LDP X8, X1, [X0]
	0x01DADCE0 MOV X0, X21
	0x01DADCE4 BLR X8
	0x01DADCE8 TBZ X0, 0x0, 0x1DADEAC
	0x01DADCEC LDR X8, [X21]
	0x01DADCF0 LDR X1, [X27]
	0x01DADCF4 LDRH W9, [X8 + 0x12E]
	0x01DADCF8 CBZ X9, 0x1DADD1C
	0x01DADCFC LDR X10, [X8 + 0xB0]
	0x01DADD00 ADD X10, X10, 0x8
	0x01DADD04 LDUR X11, [X10 - 0x8]
	0x01DADD08 CMP X11, X1
	0x01DADD0C B.EQ 0x1DADD2C
	0x01DADD10 SUBS X9, X9, 0x1
	0x01DADD14 ADD X10, X10, 0x10
	0x01DADD18 B.NE 0x1DADD04
	0x01DADD1C MOV X0, X21
	0x01DADD20 MOV W2, W31
	0x01DADD24 BL 0x1C5C788
	0x01DADD28 B 0x1DADD38
	0x01DADD2C LDRSW X9, [X10]
	0x01DADD30 ADD X8, X8, X9, 0x4, LSL
	0x01DADD34 ADD X0, X8, 0x138
	0x01DADD38 LDP X8, X1, [X0]
	0x01DADD3C MOV X0, X21
	0x01DADD40 BLR X8
	0x01DADD44 LDR X8, [X19 + 0x68]
	0x01DADD48 CBZ X8, 0x1DAE29C
	0x01DADD4C LDR W8, [X8 + 0x18]
	0x01DADD50 CMP W26, W8
	0x01DADD54 B.GE 0x1DADEAC
	0x01DADD58 MOV X23, X0
	0x01DADD5C CBZ X0, 0x1DAE2A0
	0x01DADD60 MOV X0, X23
	0x01DADD64 MOV X1, X31
	0x01DADD68 BL 0x1D8AD0C
	0x01DADD6C CMP W0, 0x1
	0x01DADD70 B.LT 0x1DADC90
	0x01DADD74 LDR X8, [X19 + 0x68]
	0x01DADD78 CBZ X8, 0x1DAE2B0
	0x01DADD7C LDR W9, [X8 + 0x18]
	0x01DADD80 CMP W26, W9
	0x01DADD84 B.CS 0x1DAE2C0
	0x01DADD88 ADD X8, X8, X28, 0x3, LSL
	0x01DADD8C LDR X22, [X8 + 0x20]
	0x01DADD90 MOV X0, X23
	0x01DADD94 MOV X1, X31
	0x01DADD98 BL 0x3C32E90
	0x01DADD9C CBZ X0, 0x1DAE2B4
	0x01DADDA0 MOV X1, X31
	0x01DADDA4 BL 0x3C3F58C
	0x01DADDA8 LDRB W8, [X19 + 0x50]
	0x01DADDAC MOV V8.16B, V0.16B
	0x01DADDB0 MOV V9.16B, V2.16B
	0x01DADDB4 CBZ W8, 0x1DADDD8
	0x01DADDB8 MOV X0, X19
	0x01DADDBC MOV X1, X31
	0x01DADDC0 BL 0x3C32E90
	0x01DADDC4 CBZ X0, 0x1DAE2C4
	0x01DADDC8 MOV X1, X31
	0x01DADDCC BL 0x3C3F58C
	0x01DADDD0 FSUB S8, S8, S0
	0x01DADDD4 FSUB S9, S9, S2
	0x01DADDD8 MOV X0, X23
	0x01DADDDC MOV X1, X31
	0x01DADDE0 BL 0x3C32E90
	0x01DADDE4 CBZ X0, 0x1DAE2BC
	0x01DADDE8 MOV X1, X31
	0x01DADDEC BL 0x3C3F58C
	0x01DADDF0 MOV V10.16B, V0.16B
	0x01DADDF4 MOV V11.16B, V1.16B
	0x01DADDF8 MOV V12.16B, V2.16B
	0x01DADDFC MOV X0, X19
	0x01DADE00 MOV X1, X31
	0x01DADE04 BL 0x3C32E90
	0x01DADE08 CBZ X0, 0x1DAE2B8
	0x01DADE0C MOV X1, X31
	0x01DADE10 BL 0x3C3F58C
	0x01DADE14 LDR V3, [X19 + 0x54]
	0x01DADE18 FSUB S0, S10, S0
	0x01DADE1C FSUB S1, S11, S1
	0x01DADE20 FSUB S2, S12, S2
	0x01DADE24 FMUL S0, S0, S0
	0x01DADE28 FMUL S1, S1, S1
	0x01DADE2C FADD S0, S0, S1
	0x01DADE30 FMUL S1, S2, S2
	0x01DADE34 FADD S0, S1, S0
	0x01DADE38 FMUL S1, S3, S3
	0x01DADE3C FCMP S0, S1
	0x01DADE40 B.GT 0x1DADC90
	0x01DADE44 CBZ X22, 0x1DAE2F8
	0x01DADE48 LDR X0, [X22 + 0x38]
	0x01DADE4C CBZ X0, 0x1DAE300
	0x01DADE50 FADD S1, S9, S9
	0x01DADE54 FADD S0, S8, S8
	0x01DADE58 MOV X1, X31
	0x01DADE5C BL 0x3C3E880
	0x01DADE60 MOVZ W1, 0x1
	0x01DADE64 MOV X0, X22
	0x01DADE68 BL 0x1DAE5F8
	0x01DADE6C MOV X0, X22
	0x01DADE70 MOV X1, X31
	0x01DADE74 BL 0x3C32ECC
	0x01DADE78 CBZ X0, 0x1DAE2FC
	0x01DADE7C MOV X1, X31
	0x01DADE80 BL 0x3C357F8
	0x01DADE84 TBNZ X0, 0x0, 0x1DADEA4
	0x01DADE88 MOV X0, X22
	0x01DADE8C MOV X1, X31
	0x01DADE90 BL 0x3C32ECC
	0x01DADE94 CBZ X0, 0x1DAE304
	0x01DADE98 MOVZ W1, 0x1
	0x01DADE9C MOV X2, X31
	0x01DADEA0 BL 0x3C357B4
	0x01DADEA4 ADD W26, W26, 0x1
	0x01DADEA8 B 0x1DADC8C
	0x01DADEAC MOV X22, X31
	0x01DADEB0 MOVZ W23, 0x5
	0x01DADEB4 CBZ X21, 0x1DADF10
	0x01DADEB8 LDR X8, [X21]
	0x01DADEBC LDR X1, [X24]
	0x01DADEC0 LDRH W9, [X8 + 0x12E]
	0x01DADEC4 CBZ X9, 0x1DADEE8
	0x01DADEC8 LDR X10, [X8 + 0xB0]
	0x01DADECC ADD X10, X10, 0x8
	0x01DADED0 LDUR X11, [X10 - 0x8]
	0x01DADED4 CMP X11, X1
	0x01DADED8 B.EQ 0x1DADEF8
	0x01DADEDC SUBS X9, X9, 0x1
	0x01DADEE0 ADD X10, X10, 0x10
	0x01DADEE4 B.NE 0x1DADED0
	0x01DADEE8 MOV X0, X21
	0x01DADEEC MOV W2, W31
	0x01DADEF0 BL 0x1C5C788
	0x01DADEF4 B 0x1DADF04
	0x01DADEF8 LDRSW X9, [X10]
	0x01DADEFC ADD X8, X8, X9, 0x4, LSL
	0x01DADF00 ADD X0, X8, 0x138
	0x01DADF04 LDP X8, X1, [X0]
	0x01DADF08 MOV X0, X21
	0x01DADF0C BLR X8
	0x01DADF10 CBNZ X22, 0x1DAE2E4
	0x01DADF14 CMP W23, 0x5
	0x01DADF18 B.EQ 0x1DADF20
	0x01DADF1C CBNZ W23, 0x1DAE270
	0x01DADF20 CBZ X20, 0x1DAE26C
	0x01DADF24 ADRP X10, 0x234A000
	0x01DADF28 LDR X8, [X20]
	0x01DADF2C LDR X10, [X10 + 0x8A0]
	0x01DADF30 LDRH W9, [X8 + 0x12E]
	0x01DADF34 LDR X1, [X10]
	0x01DADF38 CBZ X9, 0x1DADF5C
	0x01DADF3C LDR X10, [X8 + 0xB0]
	0x01DADF40 ADD X10, X10, 0x8
	0x01DADF44 LDUR X11, [X10 - 0x8]
	0x01DADF48 CMP X11, X1
	0x01DADF4C B.EQ 0x1DADF6C
	0x01DADF50 SUBS X9, X9, 0x1
	0x01DADF54 ADD X10, X10, 0x10
	0x01DADF58 B.NE 0x1DADF44
	0x01DADF5C MOV X0, X20
	0x01DADF60 MOV W2, W31
	0x01DADF64 BL 0x1C5C788
	0x01DADF68 B 0x1DADF78
	0x01DADF6C LDRSW X9, [X10]
	0x01DADF70 ADD X8, X8, X9, 0x4, LSL
	0x01DADF74 ADD X0, X8, 0x138
	0x01DADF78 LDP X8, X1, [X0]
	0x01DADF7C MOV X0, X20
	0x01DADF80 BLR X8
	0x01DADF84 MOV X20, X0
	0x01DADF88 CBZ X0, 0x1DAE2EC
	0x01DADF8C ADRP X23, 0x234A000
	0x01DADF90 LDR X23, [X23 + 0x8B8]
	0x01DADF94 SXTW X27, W26
	0x01DADF98 LDR X8, [X20]
	0x01DADF9C LDR X1, [X25]
	0x01DADFA0 LDRH W9, [X8 + 0x12E]
	0x01DADFA4 CBZ X9, 0x1DADFC8
	0x01DADFA8 LDR X10, [X8 + 0xB0]
	0x01DADFAC ADD X10, X10, 0x8
	0x01DADFB0 LDUR X11, [X10 - 0x8]
	0x01DADFB4 CMP X11, X1
	0x01DADFB8 B.EQ 0x1DADFD8
	0x01DADFBC SUBS X9, X9, 0x1
	0x01DADFC0 ADD X10, X10, 0x10
	0x01DADFC4 B.NE 0x1DADFB0
	0x01DADFC8 MOV X0, X20
	0x01DADFCC MOV W2, W31
	0x01DADFD0 BL 0x1C5C788
	0x01DADFD4 B 0x1DADFE4
	0x01DADFD8 LDRSW X9, [X10]
	0x01DADFDC ADD X8, X8, X9, 0x4, LSL
	0x01DADFE0 ADD X0, X8, 0x138
	0x01DADFE4 LDP X8, X1, [X0]
	0x01DADFE8 MOV X0, X20
	0x01DADFEC BLR X8
	0x01DADFF0 TBZ X0, 0x0, 0x1DAE1C0
	0x01DADFF4 LDR X8, [X20]
	0x01DADFF8 LDR X1, [X23]
	0x01DADFFC LDRH W9, [X8 + 0x12E]
	0x01DAE000 CBZ X9, 0x1DAE024
	0x01DAE004 LDR X10, [X8 + 0xB0]
	0x01DAE008 ADD X10, X10, 0x8
	0x01DAE00C LDUR X11, [X10 - 0x8]
	0x01DAE010 CMP X11, X1
	0x01DAE014 B.EQ 0x1DAE034
	0x01DAE018 SUBS X9, X9, 0x1
	0x01DAE01C ADD X10, X10, 0x10
	0x01DAE020 B.NE 0x1DAE00C
	0x01DAE024 MOV X0, X20
	0x01DAE028 MOV W2, W31
	0x01DAE02C BL 0x1C5C788
	0x01DAE030 B 0x1DAE040
	0x01DAE034 LDRSW X9, [X10]
	0x01DAE038 ADD X8, X8, X9, 0x4, LSL
	0x01DAE03C ADD X0, X8, 0x138
	0x01DAE040 LDP X8, X1, [X0]
	0x01DAE044 MOV X0, X20
	0x01DAE048 BLR X8
	0x01DAE04C LDR X8, [X19 + 0x68]
	0x01DAE050 CBZ X8, 0x1DAE2A8
	0x01DAE054 LDR W8, [X8 + 0x18]
	0x01DAE058 CMP W26, W8
	0x01DAE05C B.GE 0x1DAE1C0
	0x01DAE060 MOV X22, X0
	0x01DAE064 CBZ X0, 0x1DAE2AC
	0x01DAE068 MOV X0, X22
	0x01DAE06C MOV X1, X31
	0x01DAE070 BL 0x1D8D0A8
	0x01DAE074 TBNZ X0, 0x0, 0x1DADF98
	0x01DAE078 MOV X0, X22
	0x01DAE07C MOV X1, X31
	0x01DAE080 BL 0x1D89D0C
	0x01DAE084 TBZ X0, 0x0, 0x1DADF98
	0x01DAE088 LDR X8, [X19 + 0x68]
	0x01DAE08C CBZ X8, 0x1DAE2CC
	0x01DAE090 LDR W9, [X8 + 0x18]
	0x01DAE094 CMP W26, W9
	0x01DAE098 B.CS 0x1DAE2D4
	0x01DAE09C ADD X8, X8, X27, 0x3, LSL
	0x01DAE0A0 LDR X21, [X8 + 0x20]
	0x01DAE0A4 MOV X0, X22
	0x01DAE0A8 MOV X1, X31
	0x01DAE0AC BL 0x3C32E90
	0x01DAE0B0 CBZ X0, 0x1DAE2C8
	0x01DAE0B4 MOV X1, X31
	0x01DAE0B8 BL 0x3C3F58C
	0x01DAE0BC LDRB W8, [X19 + 0x50]
	0x01DAE0C0 MOV V8.16B, V0.16B
	0x01DAE0C4 MOV V9.16B, V2.16B
	0x01DAE0C8 CBZ W8, 0x1DAE0EC
	0x01DAE0CC MOV X0, X19
	0x01DAE0D0 MOV X1, X31
	0x01DAE0D4 BL 0x3C32E90
	0x01DAE0D8 CBZ X0, 0x1DAE2DC
	0x01DAE0DC MOV X1, X31
	0x01DAE0E0 BL 0x3C3F58C
	0x01DAE0E4 FSUB S8, S8, S0
	0x01DAE0E8 FSUB S9, S9, S2
	0x01DAE0EC MOV X0, X22
	0x01DAE0F0 MOV X1, X31
	0x01DAE0F4 BL 0x3C32E90
	0x01DAE0F8 CBZ X0, 0x1DAE2D0
	0x01DAE0FC MOV X1, X31
	0x01DAE100 BL 0x3C3F58C
	0x01DAE104 MOV V10.16B, V0.16B
	0x01DAE108 MOV V11.16B, V1.16B
	0x01DAE10C MOV V12.16B, V2.16B
	0x01DAE110 MOV X0, X19
	0x01DAE114 MOV X1, X31
	0x01DAE118 BL 0x3C32E90
	0x01DAE11C CBZ X0, 0x1DAE2D8
	0x01DAE120 MOV X1, X31
	0x01DAE124 BL 0x3C3F58C
	0x01DAE128 LDR V3, [X19 + 0x54]
	0x01DAE12C FSUB S0, S10, S0
	0x01DAE130 FSUB S1, S11, S1
	0x01DAE134 FSUB S2, S12, S2
	0x01DAE138 FMUL S0, S0, S0
	0x01DAE13C FMUL S1, S1, S1
	0x01DAE140 FADD S0, S0, S1
	0x01DAE144 FMUL S1, S2, S2
	0x01DAE148 FADD S0, S1, S0
	0x01DAE14C FMUL S1, S3, S3
	0x01DAE150 FCMP S0, S1
	0x01DAE154 B.GT 0x1DADF98
	0x01DAE158 CBZ X21, 0x1DAE308
	0x01DAE15C LDR X0, [X21 + 0x38]
	0x01DAE160 CBZ X0, 0x1DAE310
	0x01DAE164 FADD S1, S9, S9
	0x01DAE168 FADD S0, S8, S8
	0x01DAE16C MOV X1, X31

ISIL:
	001 Move [X31-128], D11
	002 Move [X31-120], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X29
	006 Move [X31+40], X30
	007 Move [X31+48], X28
	008 Move [X31+56], X27
	009 Move [X31+64], X26
	010 Move [X31+72], X25
	011 Move [X31+80], X24
	012 Move [X31+88], X23
	013 Move [X31+96], X22
	014 Move [X31+104], X21
	015 Move [X31+112], X20
	016 Move [X31+120], X19
	017 Move X21, 0x262C000
	018 Move W8, [X21+2783]
	019 Move X20, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {45}
	025 Move X0, 0x2347000
	026 Move X0, [X0+3584]
	027 Call 0x1C17CF4
	028 Move X0, 0x234B000
	029 Move X0, [X0+2152]
	030 Call 0x1C17CF4
	031 Move X0, 0x234B000
	032 Move X0, [X0+2160]
	033 Call 0x1C17CF4
	034 Move X0, 0x2347000
	035 Move X0, [X0+3608]
	036 Call 0x1C17CF4
	037 Move X0, 0x2347000
	038 Move X0, [X0+1432]
	039 Call 0x1C17CF4
	040 Move X0, 0x2349000
	041 Move X0, [X0+1992]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X21+2783], W8
	045 Compare X20, 0
	046 JumpIfEqual {381}
	047 Move X10, 0x234B000
	048 Move X8, [X20]
	049 Move X10, [X10+2152]
	050 NotImplemented "Instruction LDRH not yet implemented."
	051 Move X1, [X10]
	052 Compare X9, 0
	053 JumpIfEqual {60}
	054 Move X10, [X8+176]
	055 Add X10, X10, 8
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Subtract X9, X9, 1
	059 Add X10, X10, 16
	060 Move X0, X20
	061 Move W2, W31
	062 Call 0x1C5D788
	063 NotImplemented "Instruction LDRSW not yet implemented."
	064 Add X8, X8, X9
	065 Add X0, X8, 312
	066 Move X8, [X0]
	067 Move X1, [X0+8]
	068 Move X0, X20
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X20, X0
	071 Compare X0, 0
	072 JumpIfEqual {405}
	073 Move X28, 0x2347000
	074 Move X29, 0x234B000
	075 Move X27, 0x2347000
	076 Move X21, 0x2349000
	077 Move X8, -19668992
	078 Move X9, -19668992
	079 Move X28, [X28+3608]
	080 Move X29, [X29+2160]
	081 Move X27, [X27+1432]
	082 Move X21, [X21+1992]
	083 Move V10, [X8+1096]
	084 Move V11, [X9+100]
	085 Move X26, X31
	086 Move X22, 0x262C000
	087 Move X8, [X20]
	088 Move X1, [X28]
	089 NotImplemented "Instruction LDRH not yet implemented."
	090 Compare X9, 0
	091 JumpIfEqual {98}
	092 Move X10, [X8+176]
	093 Add X10, X10, 8
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Subtract X9, X9, 1
	097 Add X10, X10, 16
	098 Move X0, X20
	099 Move W2, W31
	100 Call 0x1C5D788
	101 NotImplemented "Instruction LDRSW not yet implemented."
	102 Add X8, X8, X9
	103 Add X0, X8, 312
	104 Move X8, [X0]
	105 Move X1, [X0+8]
	106 Move X0, X20
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfNotEqual {335}
	112 Move X8, [X20]
	113 Move X1, [X29]
	114 NotImplemented "Instruction LDRH not yet implemented."
	115 Compare X9, 0
	116 JumpIfEqual {123}
	117 Move X10, [X8+176]
	118 Add X10, X10, 8
	119 NotImplemented "Instruction LDUR not yet implemented."
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Subtract X9, X9, 1
	122 Add X10, X10, 16
	123 Move X0, X20
	124 Move W2, W31
	125 Call 0x1C5D788
	126 NotImplemented "Instruction LDRSW not yet implemented."
	127 Add X8, X8, X9
	128 Add X0, X8, 312
	129 Move X8, [X0]
	130 Move X1, [X0+8]
	131 Move X0, X20
	132 NotImplemented "Instruction BLR not yet implemented."
	133 Move X8, [X19+88]
	134 Compare X8, 0
	135 JumpIfEqual {400}
	136 NotImplemented "Instruction LDRSW not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X23, X0
	139 Move X0, [X27]
	140 Move W8, [X0+224]
	141 Compare W8, 0
	142 JumpIfNotEqual {144}
	143 Call 0x1C17DFC
	144 Move X0, X23
	145 Move X1, X31
	146 Move X2, X31
	147 Call Object.op_Equality, X0, X1
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfEqual {87}
	152 Compare X23, 0
	153 JumpIfEqual {401}
	154 Move X0, [X27]
	155 Move X24, [X23+144]
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X0, X24
	161 Move X1, X31
	162 Move X2, X31
	163 Call Object.op_Equality, X0, X1
	164 Move TEMP, X0
	165 And TEMP, TEMP, 1
	166 Compare TEMP, 1
	167 JumpIfEqual {87}
	168 Move X8, [X19+88]
	169 Compare X8, 0
	170 JumpIfEqual {402}
	171 Move W9, [X8+24]
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Add X8, X8, X26
	174 Move W9, [X19+81]
	175 Move X24, [X8+32]
	176 Compare W9, 0
	177 JumpIfEqual {205}
	178 Move X0, X23
	179 Call NetPlayer.get_channel, X0
	180 Move W25, W0
	181 Move X0, [X21]
	182 Move W8, [X0+224]
	183 Compare W8, 0
	184 JumpIfNotEqual {186}
	185 Call 0x1C17DFC
	186 Move W8, [X22+2141]
	187 Compare W8, 0
	188 JumpIfNotEqual {193}
	189 Move X0, X21
	190 Call 0x1C17CF4
	191 Move W8, 1
	192 Move [X22+2141], W8
	193 Move X0, [X21]
	194 Move W8, [X0+224]
	195 Compare W8, 0
	196 JumpIfNotEqual {199}
	197 Call 0x1C17DFC
	198 Move X0, [X21]
	199 Move X8, [X0+184]
	200 Move X8, [X8]
	201 Compare X8, 0
	202 JumpIfEqual {404}
	203 Move W8, [X8+304]
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Move X0, [X23+144]
	206 Compare X0, 0
	207 JumpIfEqual {413}
	208 Move X1, X31
	209 Call Transform.get_position, X0
	210 Move W8, [X19+80]
	211 Move V8, V0
	212 Move V9, V2
	213 Compare W8, 0
	214 JumpIfEqual {224}
	215 Move X0, X19
	216 Move X1, X31
	217 Call Component.get_transform, X0
	218 Compare X0, 0
	219 JumpIfEqual {414}
	220 Move X1, X31
	221 Call Transform.get_position, X0
	222 Subtract S8, S8, S0
	223 Subtract S9, S9, S2
	224 Move X0, X23
	225 Call NetPlayer.get_isDie, X0
	226 Compare X24, 0
	227 JumpIfEqual {409}
	228 And W1, W0, 1
	229 Move X0, X24
	230 Call MapIconView.SetOverlayActive, X0, X1
	231 Move X0, [X24+32]
	232 Compare X0, 0
	233 JumpIfEqual {410}
	234 Move X8, [X0]
	235 Move V0, [X23+424]
	236 Move V1, [X23+428]
	237 Move V2, [X23+432]
	238 Move X1, [X8+688]
	239 Move V3, [X23+436]
	240 Move X9, [X8+680]
	241 NotImplemented "Instruction BLR not yet implemented."
	242 Move X0, [X24+56]
	243 Compare X0, 0
	244 JumpIfEqual {412}
	245 Add S1, S9, S9
	246 Add S0, S8, S8
	247 Move X1, X31
	248 Call RectTransform.set_anchoredPosition, X0, X1
	249 Move X0, X23
	250 Call NetPlayer.get_isDie, X0
	251 Move X25, [X24+56]
	252 Move TEMP, X0
	253 And TEMP, TEMP, 1
	254 Compare TEMP, 1
	255 JumpIfNotEqual {279}
	256 Move X8, 0x262C000
	257 Move W8, [X8+1939]
	258 Compare W8, 0
	259 JumpIfNotEqual {266}
	260 Move X0, 0x2348000
	261 Move X0, [X0+1448]
	262 Call 0x1C17CF4
	263 Move X8, 0x262C000
	264 Move W9, 1
	265 Move [X8+1939], W9
	266 Compare X25, 0
	267 JumpIfEqual {419}
	268 Move X8, 0x2348000
	269 Move X8, [X8+1448]
	270 Move X8, [X8]
	271 Move X8, [X8+184]
	272 Move S2, [X8+8]
	273 Move S3, [X8+12]
	274 Move S0, [X8]
	275 Move S1, [X8+4]
	276 Move X0, X25
	277 Move X1, X31
	278 Call Transform.set_localRotation, X0, X1
	279 Move X0, [X23+144]
	280 Compare X0, 0
	281 JumpIfEqual {416}
	282 Move X1, X31
	283 Call Transform.get_rotation, X0
	284 Move X0, X31
	285 Call Quaternion.Internal_ToEulerRad, X0
	286 Multiply S1, S1, S10
	287 Multiply S0, S0, S10
	288 Multiply S2, S2, S10
	289 Move X0, X31
	290 Call Quaternion.Internal_MakePositive, X0
	291 Multiply S2, S1, S11
	292 Move S0, W31
	293 Move S1, W31
	294 Move X0, X31
	295 Call Quaternion.Internal_FromEulerRad, X0
	296 Compare X25, 0
	297 JumpIfEqual {418}
	298 Move X0, X25
	299 Move X1, X31
	300 Call Transform.set_localRotation, X0, X1
	301 Move X0, X24
	302 Move X1, X31
	303 Call Component.get_gameObject, X0
	304 Compare X0, 0
	305 JumpIfEqual {408}
	306 Move X1, X31
	307 Call GameObject.get_activeSelf, X0
	308 Move TEMP, X0
	309 And TEMP, TEMP, 1
	310 Compare TEMP, 1
	311 JumpIfEqual {320}
	312 Move X0, X24
	313 Move X1, X31
	314 Call Component.get_gameObject, X0
	315 Compare X0, 0
	316 JumpIfEqual {417}
	317 Move W1, 1
	318 Move X2, X31
	319 Call GameObject.SetActive, X0, X1
	320 Move X0, [X23+64]
	321 Compare X0, 0
	322 JumpIfEqual {411}
	323 Move X1, X31
	324 Call NetworkObject.get_HasInputAuthority, X0
	325 Move TEMP, X0
	326 And TEMP, TEMP, 1
	327 Compare TEMP, 1
	328 JumpIfNotEqual {334}
	329 Move X0, [X24+56]
	330 Compare X0, 0
	331 JumpIfEqual {415}
	332 Move X1, X31
	333 Call Transform.SetAsLastSibling, X0
	334 Add X26, X26, 1
	335 Move X22, X31
	336 Move W21, 5
	337 Compare X20, 0
	338 JumpIfEqual {362}
	339 Move X8, [X20]
	340 Move X10, 0x2347000
	341 NotImplemented "Instruction LDRH not yet implemented."
	342 Move X10, [X10+3584]
	343 Move X1, [X10]
	344 Compare X9, 0
	345 JumpIfEqual {352}
	346 Move X10, [X8+176]
	347 Add X10, X10, 8
	348 NotImplemented "Instruction LDUR not yet implemented."
	349 NotImplemented "Instruction CMP not yet implemented."
	350 Subtract X9, X9, 1
	351 Add X10, X10, 16
	352 Move X0, X20
	353 Move W2, W31
	354 Call 0x1C5D788
	355 NotImplemented "Instruction LDRSW not yet implemented."
	356 Add X8, X8, X9
	357 Add X0, X8, 312
	358 Move X8, [X0]
	359 Move X1, [X0+8]
	360 Move X0, X20
	361 NotImplemented "Instruction BLR not yet implemented."
	362 Compare X22, 0
	363 JumpIfNotEqual {406}
	364 NotImplemented "Instruction CMP not yet implemented."
	365 Compare W21, 0
	366 JumpIfNotEqual {382}
	367 Move X8, [X19+88]
	368 Compare X8, 0
	369 JumpIfEqual {381}
	370 Move X20, W26
	371 Move X9, [X8+24]
	372 NotImplemented "Instruction CMP not yet implemented."
	373 NotImplemented "Instruction CMP not yet implemented."
	374 Add X8, X8, X20
	375 Move X1, [X8+32]
	376 Call MapView.DeactivateMapIcon, X0, X1
	377 Move X8, [X19+88]
	378 Add X20, X20, 1
	379 Compare X8, 0
	380 JumpIfNotEqual {371}
	381 Call 0x1C17F20
	382 Move X20, [X31+112]
	383 Move X19, [X31+120]
	384 Move X22, [X31+96]
	385 Move X21, [X31+104]
	386 Move X24, [X31+80]
	387 Move X23, [X31+88]
	388 Move X26, [X31+64]
	389 Move X25, [X31+72]
	390 Move X28, [X31+48]
	391 Move X27, [X31+56]
	392 Move X29, [X31+32]
	393 Move X30, [X31+40]
	394 Move D9, [X31+16]
	395 Move D8, [X31+24]
	396 Move D11, [X31+128]
	397 Move D10, [X31+136]
	398 Return 
	399 Call 0x1C17F28
	400 Call 0x1C17F20
	401 Call 0x1C17F20
	402 Call 0x1C17F20
	403 Call 0x1C17F28
	404 Call 0x1C17F20
	405 Call 0x1C17F20
	406 Move X0, X22
	407 Call 0x1C17F18
	408 Call 0x1C17F20
	409 Call 0x1C17F20
	410 Call 0x1C17F20
	411 Call 0x1C17F20
	412 Call 0x1C17F20
	413 Call 0x1C17F20
	414 Call 0x1C17F20
	415 Call 0x1C17F20
	416 Call 0x1C17F20
	417 Call 0x1C17F20
	418 Call 0x1C17F20
	419 Call 0x1C17F20
	420 Move X21, X0
	421 Move X26, X31
	422 Move X21, X0
	423 NotImplemented "Instruction CMP not yet implemented."
	424 Move X0, X21
	425 Call 0x3EB2AD0
	426 Move X22, [X0]
	427 Call 0x3EB2AE0
	428 Move W21, W31
	429 Compare X20, 0
	430 JumpIfNotEqual {339}
	431 Move X22, X31
	432 Move X21, X0
	433 Compare X20, 0
	434 JumpIfEqual {458}
	435 Move X8, [X20]
	436 Move X10, 0x2346000
	437 NotImplemented "Instruction LDRH not yet implemented."
	438 Move X10, [X10+3584]
	439 Move X1, [X10]
	440 Compare X9, 0
	441 JumpIfEqual {448}
	442 Move X10, [X8+176]
	443 Add X10, X10, 8
	444 NotImplemented "Instruction LDUR not yet implemented."
	445 NotImplemented "Instruction CMP not yet implemented."
	446 Subtract X9, X9, 1
	447 Add X10, X10, 16
	448 Move X0, X20
	449 Move W2, W31
	450 Call 0x1C5D788
	451 NotImplemented "Instruction LDRSW not yet implemented."
	452 Add X8, X8, X9
	453 Add X0, X8, 312
	454 Move X8, [X0]
	455 Move X1, [X0+8]
	456 Move X0, X20
	457 NotImplemented "Instruction BLR not yet implemented."
	458 Compare X22, 0
	459 JumpIfNotEqual {462}
	460 Move X0, X21
	461 Call 0x1D2D690
	462 Move X0, X22
	463 Call 0x1C17F18
	464 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x01DAFCE8 CMP W8, W9
	0x01DAFCEC B.GE 0x1DAFD08
	0x01DAFCF0 MOV X2, X31
	0x01DAFCF4 BL 0x321B938
	0x01DAFCF8 STR X0, [X19 + 0x28]
	0x01DAFCFC MOV X0, X19

ISIL:
	001 Move W8, 257
	002 Move W9, 0x42480000
	003 Move X1, X31
	004 NotImplemented "Instruction STRH not yet implemented."
	005 Move [X0+84], W9
	006 Call MonoBehaviour..ctor, X0
	007 Return 

