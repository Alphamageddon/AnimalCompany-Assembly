Type: AnimalCompany.ScreenEffectManager

Method: System.Void Awake()

Disassembly:
	0x01CF0BA0 ADRP X0, 0x225F000
	0x01CF0BA4 LDR X0, [X0 + 0x408]
	0x01CF0BA8 BL 0x1B6E7F0
	0x01CF0BAC MOVZ W8, 0x1
	0x01CF0BB0 STRB W8, [X20 + 0x6B7]
	0x01CF0BB4 LDR X0, [X21]
	0x01CF0BB8 ADRP X20, 0x225D000
	0x01CF0BBC LDR W8, [X0 + 0xE0]
	0x01CF0BC0 LDR X20, [X20 + 0x478]
	0x01CF0BC4 CBNZ W8, 0x1CF0BD0
	0x01CF0BC8 BL 0x1B6E8F8
	0x01CF0BCC LDR X0, [X21]
	0x01CF0BD0 LDR X8, [X20]
	0x01CF0BD4 LDR X9, [X0 + 0xB8]
	0x01CF0BD8 LDR W10, [X8 + 0xE0]
	0x01CF0BDC LDR X20, [X9]
	0x01CF0BE0 CBNZ W10, 0x1CF0BEC
	0x01CF0BE4 MOV X0, X8
	0x01CF0BE8 BL 0x1B6E8F8
	0x01CF0BEC MOV X0, X20
	0x01CF0BF0 MOV X1, X19
	0x01CF0BF4 MOV X2, X31
	0x01CF0BF8 BL 0x3AA0AF0
	0x01CF0BFC TBZ X0, 0x0, 0x1CF0C1C
	0x01CF0C00 LDR X0, [X21]
	0x01CF0C04 LDR W8, [X0 + 0xE0]
	0x01CF0C08 CBNZ W8, 0x1CF0C14
	0x01CF0C0C BL 0x1B6E8F8
	0x01CF0C10 LDR X0, [X21]
	0x01CF0C14 LDR X8, [X0 + 0xB8]
	0x01CF0C18 STR X31, [X8]
	0x01CF0C1C LDP X20, X19, [X31 + 0x10]
	0x01CF0C20 LDP X30, X21, [X31], #0x20
	0x01CF0C24 RET
	0x01CF0C28 SUB X31, X31, 0x30
	0x01CF0C2C STP X30, X21, [X31 + 0x10]
	0x01CF0C30 STP X20, X19, [X31 + 0x20]
	0x01CF0C34 ADRP X20, 0x2533000
	0x01CF0C38 LDRB W8, [X20 + 0x6B8]
	0x01CF0C3C MOV X19, X0
	0x01CF0C40 TBNZ X8, 0x0, 0x1CF0C94
	0x01CF0C44 ADRP X0, 0x225E000
	0x01CF0C48 LDR X0, [X0 + 0xD68]
	0x01CF0C4C BL 0x1B6E7F0
	0x01CF0C50 ADRP X0, 0x225E000
	0x01CF0C54 LDR X0, [X0 + 0x808]
	0x01CF0C58 BL 0x1B6E7F0
	0x01CF0C5C ADRP X0, 0x2260000
	0x01CF0C60 LDR X0, [X0 + 0x5C0]
	0x01CF0C64 BL 0x1B6E7F0
	0x01CF0C68 ADRP X0, 0x225F000
	0x01CF0C6C LDR X0, [X0 + 0xDF0]
	0x01CF0C70 BL 0x1B6E7F0
	0x01CF0C74 ADRP X0, 0x2260000
	0x01CF0C78 LDR X0, [X0 + 0x2B0]
	0x01CF0C7C BL 0x1B6E7F0
	0x01CF0C80 ADRP X0, 0x225F000
	0x01CF0C84 LDR X0, [X0 + 0x408]
	0x01CF0C88 BL 0x1B6E7F0
	0x01CF0C8C MOVZ W8, 0x1
	0x01CF0C90 STRB W8, [X20 + 0x6B8]
	0x01CF0C94 STP X31, X31, [X31]
	0x01CF0C98 LDR X0, [X19 + 0x40]
	0x01CF0C9C CBZ X0, 0x1CF0FBC
	0x01CF0CA0 MOV X1, X31
	0x01CF0CA4 BL 0x3A9A5C8
	0x01CF0CA8 TBZ X0, 0x0, 0x1CF0FA4
	0x01CF0CAC BL 0x1CF09F4
	0x01CF0CB0 CBZ X0, 0x1CF0FBC
	0x01CF0CB4 ADRP X20, 0x225E000
	0x01CF0CB8 LDR X20, [X20 + 0xD68]
	0x01CF0CBC LDR X1, [X20]
	0x01CF0CC0 BL 0x2960F68
	0x01CF0CC4 CMP W0, 0x1
	0x01CF0CC8 B.LT 0x1CF0FA4
	0x01CF0CCC ADD X1, X31, 0x8
	0x01CF0CD0 MOV W0, W31
	0x01CF0CD4 MOV X2, X31
	0x01CF0CD8 BL 0x1CC3FDC
	0x01CF0CDC TBZ X0, 0x0, 0x1CF0D4C
	0x01CF0CE0 LDP S0, S1, [X31 + 0x8]
	0x01CF0CE4 FMOV S2, 0.5
	0x01CF0CE8 LDRB W9, [X19 + 0x80]
	0x01CF0CEC FABS S3, S0
	0x01CF0CF0 FABS S1, S1
	0x01CF0CF4 FCMP S3, S2
	0x01CF0CF8 CSET W8, GT
	0x01CF0CFC FCMP S1, S2
	0x01CF0D00 CSET W10, GT
	0x01CF0D04 ORR W8, W8, W10, 0x0
	0x01CF0D08 CMP W9, W8
	0x01CF0D0C B.EQ 0x1CF0E8C
	0x01CF0D10 STRB W8, [X19 + 0x80]
	0x01CF0D14 CBZ W8, 0x1CF0E8C
	0x01CF0D18 LDR W21, [X19 + 0x30]
	0x01CF0D1C FCMP S0, 0x0
	0x01CF0D20 B.LE 0x1CF0D54
	0x01CF0D24 BL 0x1CF09F4
	0x01CF0D28 CBZ X0, 0x1CF0FBC
	0x01CF0D2C LDR X1, [X20]
	0x01CF0D30 BL 0x2960F68
	0x01CF0D34 SUB W8, W0, 0x1
	0x01CF0D38 CMP W21, W8
	0x01CF0D3C B.GE 0x1CF0D64
	0x01CF0D40 LDR W8, [X19 + 0x30]
	0x01CF0D44 ADD W8, W8, 0x1
	0x01CF0D48 B 0x1CF0D80
	0x01CF0D4C STRB W31, [X19 + 0x80]
	0x01CF0D50 B 0x1CF0E8C
	0x01CF0D54 CMP W21, 0x0
	0x01CF0D58 B.LE 0x1CF0D6C
	0x01CF0D5C SUB W8, W21, 0x1
	0x01CF0D60 B 0x1CF0D80
	0x01CF0D64 MOV W8, W31
	0x01CF0D68 B 0x1CF0D80
	0x01CF0D6C BL 0x1CF09F4
	0x01CF0D70 CBZ X0, 0x1CF0FBC
	0x01CF0D74 LDR X1, [X20]
	0x01CF0D78 BL 0x2960F68
	0x01CF0D7C SUB W8, W0, 0x1
	0x01CF0D80 STR W8, [X19 + 0x30]
	0x01CF0D84 LDR V0, [X31 + 0xC]
	0x01CF0D88 FCMP S0, 0x0
	0x01CF0D8C B.LE 0x1CF0DD0
	0x01CF0D90 LDR W8, [X19 + 0x20]
	0x01CF0D94 CMP W8, 0x0
	0x01CF0D98 B.GT 0x1CF0DC8
	0x01CF0D9C ADRP X20, 0x225F000
	0x01CF0DA0 LDR X20, [X20 + 0x408]
	0x01CF0DA4 LDR X0, [X20]
	0x01CF0DA8 LDR W8, [X0 + 0xE0]
	0x01CF0DAC CBNZ W8, 0x1CF0DB8
	0x01CF0DB0 BL 0x1B6E8F8
	0x01CF0DB4 LDR X0, [X20]
	0x01CF0DB8 LDR X8, [X0 + 0xB8]
	0x01CF0DBC LDR X8, [X8 + 0x8]
	0x01CF0DC0 CBZ X8, 0x1CF0FBC
	0x01CF0DC4 LDR W8, [X8 + 0x18]
	0x01CF0DC8 SUB W8, W8, 0x1
	0x01CF0DCC B 0x1CF0E18
	0x01CF0DD0 B.PL 0x1CF0E1C
	0x01CF0DD4 ADRP X21, 0x225F000
	0x01CF0DD8 LDR X21, [X21 + 0x408]
	0x01CF0DDC LDR W20, [X19 + 0x20]
	0x01CF0DE0 LDR X0, [X21]
	0x01CF0DE4 LDR W8, [X0 + 0xE0]
	0x01CF0DE8 CBNZ W8, 0x1CF0DF4
	0x01CF0DEC BL 0x1B6E8F8
	0x01CF0DF0 LDR X0, [X21]
	0x01CF0DF4 LDR X8, [X0 + 0xB8]
	0x01CF0DF8 LDR X8, [X8 + 0x8]
	0x01CF0DFC CBZ X8, 0x1CF0FBC
	0x01CF0E00 LDR W8, [X8 + 0x18]
	0x01CF0E04 SUB W8, W8, 0x1
	0x01CF0E08 CMP W20, W8
	0x01CF0E0C B.GE 0x1CF0FB4
	0x01CF0E10 LDR W8, [X19 + 0x20]
	0x01CF0E14 ADD W8, W8, 0x1
	0x01CF0E18 STR W8, [X19 + 0x20]
	0x01CF0E1C BL 0x1CF09F4
	0x01CF0E20 CBZ X0, 0x1CF0FBC
	0x01CF0E24 ADRP X8, 0x225E000
	0x01CF0E28 LDR X8, [X8 + 0x808]
	0x01CF0E2C LDR X1, [X8]
	0x01CF0E30 BL 0x2961038
	0x01CF0E34 ADRP X8, 0x2260000
	0x01CF0E38 LDR X8, [X8 + 0x2B0]
	0x01CF0E3C MOV X21, X0
	0x01CF0E40 LDR X8, [X8]
	0x01CF0E44 MOV X0, X8
	0x01CF0E48 BL 0x1B6EA0C
	0x01CF0E4C ADRP X8, 0x2260000
	0x01CF0E50 LDR X8, [X8 + 0x5C0]
	0x01CF0E54 MOV X1, X21
	0x01CF0E58 MOV X20, X0
	0x01CF0E5C LDR X2, [X8]
	0x01CF0E60 BL 0x2E45E68
	0x01CF0E64 CBZ X20, 0x1CF0FBC
	0x01CF0E68 ADRP X8, 0x225F000
	0x01CF0E6C LDR W1, [X19 + 0x30]
	0x01CF0E70 LDR X8, [X8 + 0xDF0]
	0x01CF0E74 MOV X0, X20
	0x01CF0E78 LDR X2, [X8]
	0x01CF0E7C BL 0x2E46254
	0x01CF0E80 STR X0, [X19 + 0x28]
	0x01CF0E84 MOV X0, X19
	0x01CF0E88 BL 0x1CF0FC0
	0x01CF0E8C ADD X1, X31, 0x0
	0x01CF0E90 MOVZ W0, 0x1
	0x01CF0E94 MOV X2, X31
	0x01CF0E98 BL 0x1CC3FDC
	0x01CF0E9C TBZ X0, 0x0, 0x1CF0F70
	0x01CF0EA0 LDP S1, S0, [X31]
	0x01CF0EA4 FMOV S3, 0.5
	0x01CF0EA8 LDRB W9, [X19 + 0x81]
	0x01CF0EAC FABS S4, S1
	0x01CF0EB0 FABS S2, S0
	0x01CF0EB4 FCMP S4, S3
	0x01CF0EB8 CSET W8, GT
	0x01CF0EBC FCMP S2, S3
	0x01CF0EC0 CSET W10, GT
	0x01CF0EC4 ORR W8, W8, W10, 0x0
	0x01CF0EC8 CMP W9, W8
	0x01CF0ECC B.EQ 0x1CF0FA4
	0x01CF0ED0 STRB W8, [X19 + 0x81]
	0x01CF0ED4 CBZ W8, 0x1CF0FA4
	0x01CF0ED8 FMOV S3, 0.5
	0x01CF0EDC FCMP S4, S3
	0x01CF0EE0 B.LE 0x1CF0F08
	0x01CF0EE4 LDR V4, [X19 + 0x24]
	0x01CF0EE8 MOVZ W8, 0xC2340000
	0x01CF0EEC MOVZ W9, 0x42340000
	0x01CF0EF0 FCMP S1, 0x0
	0x01CF0EF4 FMOV S1, W8
	0x01CF0EF8 FMOV S5, W9
	0x01CF0EFC FCSEL S1, S5, S1, GE
	0x01CF0F00 FSUB S1, S4, S1
	0x01CF0F04 STR S1, [X19 + 0x24]
	0x01CF0F08 FCMP S2, S3
	0x01CF0F0C B.LE 0x1CF0F9C
	0x01CF0F10 LDR W8, [X19 + 0x20]
	0x01CF0F14 FCMP S0, 0x0
	0x01CF0F18 FMOV S0, -1
	0x01CF0F1C FMOV S1, 1
	0x01CF0F20 FCSEL S0, S1, S0, GE
	0x01CF0F24 FCVTZS W9, S0
	0x01CF0F28 SUBS W20, W8, W9
	0x01CF0F2C STR W20, [X19 + 0x20]
	0x01CF0F30 ADRP X21, 0x225F000
	0x01CF0F34 LDR X21, [X21 + 0x408]
	0x01CF0F38 LDR X0, [X21]
	0x01CF0F3C LDR W8, [X0 + 0xE0]
	0x01CF0F40 B.MI 0x1CF0F78
	0x01CF0F44 CBNZ W8, 0x1CF0F50
	0x01CF0F48 BL 0x1B6E8F8
	0x01CF0F4C LDR X0, [X21]
	0x01CF0F50 LDR X8, [X0 + 0xB8]
	0x01CF0F54 LDR X8, [X8 + 0x8]
	0x01CF0F58 CBZ X8, 0x1CF0FBC
	0x01CF0F5C LDR W8, [X8 + 0x18]
	0x01CF0F60 CMP W20, W8
	0x01CF0F64 B.LT 0x1CF0F9C
	0x01CF0F68 STR W31, [X19 + 0x20]
	0x01CF0F6C B 0x1CF0F9C
	0x01CF0F70 STRB W31, [X19 + 0x81]
	0x01CF0F74 B 0x1CF0FA4
	0x01CF0F78 CBNZ W8, 0x1CF0F84

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X20, 0x2534000
	011 Move X21, 0x2260000
	012 Move W8, [X20+1704]
	013 Move X21, [X21+880]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {57}
	019 Move X0, 0x2261000
	020 Move X0, [X0+1304]
	021 Call 0x1B6F7F0
	022 Move X0, 0x2261000
	023 Move X0, [X0+1312]
	024 Call 0x1B6F7F0
	025 Move X0, 0x2261000
	026 Move X0, [X0+1320]
	027 Call 0x1B6F7F0
	028 Move X0, 0x2261000
	029 Move X0, [X0+1328]
	030 Call 0x1B6F7F0
	031 Move X0, 0x2261000
	032 Move X0, [X0+1336]
	033 Call 0x1B6F7F0
	034 Move X0, 0x2261000
	035 Move X0, [X0+1344]
	036 Call 0x1B6F7F0
	037 Move X0, 0x225E000
	038 Move X0, [X0+1144]
	039 Call 0x1B6F7F0
	040 Move X0, 0x2260000
	041 Move X0, [X0+880]
	042 Call 0x1B6F7F0
	043 Move X0, 0x2261000
	044 Move X0, [X0+1352]
	045 Call 0x1B6F7F0
	046 Move X0, 0x225E000
	047 Move X0, [X0+1376]
	048 Call 0x1B6F7F0
	049 Move X0, 0x2261000
	050 Move X0, [X0+1360]
	051 Call 0x1B6F7F0
	052 Move X0, 0x2261000
	053 Move X0, [X0+1368]
	054 Call 0x1B6F7F0
	055 Move W8, 1
	056 Move [X20+1704], W8
	057 Move X0, [X21]
	058 Move [X31+32], X31
	059 Move [X31+40], X31
	060 Move [X31+48], X31
	061 Move X22, 0x225E000
	062 Move W8, [X0+224]
	063 Move X22, [X22+1144]
	064 Compare W8, 0
	065 JumpIfNotEqual {68}
	066 Call 0x1B6F8F8
	067 Move X0, [X21]
	068 Move X8, [X22]
	069 Move X9, [X0+184]
	070 Move W10, [X8+224]
	071 Move X20, [X9+16]
	072 Compare W10, 0
	073 JumpIfNotEqual {76}
	074 Move X0, X8
	075 Call 0x1B6F8F8
	076 Move X0, X20
	077 Move X1, X31
	078 Move X2, X31
	079 Call Object.op_Inequality, X0, X1
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {97}
	084 Move X0, X19
	085 Move X1, X31
	086 Call Component.get_gameObject, X0
	087 Move X8, [X22]
	088 Move X19, X0
	089 Move W9, [X8+224]
	090 Compare W9, 0
	091 JumpIfNotEqual {94}
	092 Move X0, X8
	093 Call 0x1B6F8F8
	094 Move X0, X19
	095 Move X1, X31
	096 Call Object.Destroy, X0
	097 Move X0, [X21]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {103}
	101 Call 0x1B6F8F8
	102 Move X0, [X21]
	103 Move X8, [X0+184]
	104 Move X0, X31
	105 Move [X8+16], X19
	106 Call GraphicsSettings.get_currentRenderPipeline
	107 Compare X0, 0
	108 JumpIfEqual {241}
	109 Move X8, 0x2261000
	110 Move X8, [X8+1360]
	111 Move X9, [X0]
	112 Move X8, [X8]
	113 Move W11, [X9+304]
	114 Move W10, [X8+304]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X11, [X9+200]
	117 Add X11, X11, X10
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X9, [X9+200]
	121 Move W1, W31
	122 Move X2, X31
	123 Add X9, X9, X10
	124 NotImplemented "Instruction LDUR not yet implemented."
	125 NotImplemented "Instruction CMP not yet implemented."
	126 NotImplemented "Instruction CSEL not yet implemented."
	127 Call UniversalRenderPipelineAsset.GetRenderer, X0, X1
	128 Move X23, 0x225E000
	129 Move X23, [X23+1376]
	130 Move X9, 0x2261000
	131 Move X20, X0
	132 Move X8, [X23]
	133 Move X9, [X9+1352]
	134 Move W10, [X8+224]
	135 Move X21, [X9]
	136 Compare W10, 0
	137 JumpIfNotEqual {140}
	138 Move X0, X8
	139 Call 0x1B6F8F8
	140 Move X0, X21
	141 Move X1, X31
	142 Call Type.GetTypeFromHandle, X0
	143 Compare X0, 0
	144 JumpIfEqual {241}
	145 Move X8, 0x2261000
	146 Move X8, [X8+1368]
	147 Move W2, 36
	148 Move X3, X31
	149 Move X1, [X8]
	150 Call Type.GetProperty, X0, X1, X2
	151 Compare X0, 0
	152 JumpIfEqual {241}
	153 Move X1, X20
	154 Move X2, X31
	155 Call PropertyInfo.GetValue, X0, X1
	156 Compare X0, 0
	157 JumpIfEqual {241}
	158 Move X8, 0x2261000
	159 Move X8, [X8+1344]
	160 Move X9, [X0]
	161 Move X8, [X8]
	162 Move W11, [X9+304]
	163 Move W10, [X8+304]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X11, [X9+200]
	166 Add X11, X11, X10
	167 NotImplemented "Instruction LDUR not yet implemented."
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X9, [X9+200]
	170 Add X9, X9, X10
	171 Move X10, 0x2261000
	172 NotImplemented "Instruction LDUR not yet implemented."
	173 Move X10, [X10+1336]
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move X1, [X10]
	176 NotImplemented "Instruction CSEL not yet implemented."
	177 Add X8, X31, 8
	178 Call List`1<Object>.GetEnumerator, X0
	179 NotImplemented "Instruction LDUR not yet implemented."
	180 Move X8, [X31+24]
	181 Move X24, 0x2261000
	182 Move X24, [X24+1312]
	183 Move [X31+2], V0
	184 Move [X31+48], X8
	185 Move X25, 0x2261000
	186 Move X25, [X25+1328]
	187 Move X1, [X24]
	188 Add X0, X31, 32
	189 Call Enumerator<Object>.MoveNext, X0
	190 Move TEMP, X0
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfNotEqual {221}
	194 Move X20, [X31+48]
	195 Compare X20, 0
	196 JumpIfEqual {240}
	197 Move X0, X20
	198 Move X1, X31
	199 Call "il2cpp_vm_object_is_inst", X0
	200 Move X21, X0
	201 Move X0, [X23]
	202 Move X22, [X25]
	203 Move W8, [X0+224]
	204 Compare W8, 0
	205 JumpIfNotEqual {207}
	206 Call 0x1B6F8F8
	207 Move X0, X22
	208 Move X1, X31
	209 Call Type.GetTypeFromHandle, X0
	210 Move X1, X0
	211 Move X0, X21
	212 Move X2, X31
	213 Call Type.op_Equality, X0, X1
	214 Move TEMP, X0
	215 And TEMP, TEMP, 1
	216 Compare TEMP, 1
	217 JumpIfNotEqual {187}
	218 Move W8, 1
	219 Move [X19+40], X20
	220 Move [X19+48], W8
	221 Move X8, 0x2261000
	222 Move X8, [X8+1304]
	223 Add X0, X31, 32
	224 Move X1, [X8]
	225 Call Enumerator<Object>.Dispose, X0
	226 Move X8, [X19+40]
	227 Compare X8, 0
	228 JumpIfEqual {241}
	229 Move [X8+24], W31
	230 Move X20, [X31+112]
	231 Move X19, [X31+120]
	232 Move X22, [X31+96]
	233 Move X21, [X31+104]
	234 Move X24, [X31+80]
	235 Move X23, [X31+88]
	236 Move X30, [X31+64]
	237 Move X25, [X31+72]
	238 Add X31, X31, 128
	239 Return 
	240 Call 0x1B6FA1C
	241 Call 0x1B6FA1C
	242 Move X20, X0
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Move X0, X20
	245 Call 0x3D1A840
	246 Move X21, [X0]
	247 Call 0x3D1A850
	248 Move X8, 0x2261000
	249 Move X8, [X8+1304]
	250 Add X0, X31, 32
	251 Move X1, [X8]
	252 Call Enumerator<Object>.Dispose, X0
	253 Compare X21, 0
	254 JumpIfEqual {226}
	255 Move X0, X21
	256 Call 0x1B6FA14
	257 Move X21, X31
	258 Move X20, X0
	259 Move X8, 0x2261000
	260 Move X8, [X8+1304]
	261 Move X1, [X8]
	262 Add X0, X31, 32
	263 Call Enumerator<Object>.Dispose, X0
	264 Compare X21, 0
	265 JumpIfNotEqual {268}
	266 Move X0, X20
	267 Call 0x1C8518C
	268 Move X0, X21
	269 Call 0x1B6FA14
	270 Call 0x18F56A8

Method: System.Void OnDestroy()

Disassembly:
	0x01CF0F7C BL 0x1B6E8F8
	0x01CF0F80 LDR X0, [X21]
	0x01CF0F84 LDR X8, [X0 + 0xB8]
	0x01CF0F88 LDR X8, [X8 + 0x8]
	0x01CF0F8C CBZ X8, 0x1CF0FBC
	0x01CF0F90 LDR W8, [X8 + 0x18]
	0x01CF0F94 SUB W8, W8, 0x1
	0x01CF0F98 STR W8, [X19 + 0x20]
	0x01CF0F9C MOV X0, X19
	0x01CF0FA0 BL 0x1CF0FC0
	0x01CF0FA4 LDP X20, X19, [X31 + 0x20]
	0x01CF0FA8 LDP X30, X21, [X31 + 0x10]
	0x01CF0FAC ADD X31, X31, 0x30
	0x01CF0FB0 RET
	0x01CF0FB4 STR W31, [X19 + 0x20]
	0x01CF0FB8 B 0x1CF0E1C
	0x01CF0FBC BL 0x1B6EA1C
	0x01CF0FC0 SUB X31, X31, 0xD0
	0x01CF0FC4 STP D15, D14, [X31 + 0x50]
	0x01CF0FC8 STP D13, D12, [X31 + 0x60]
	0x01CF0FCC STP D11, D10, [X31 + 0x70]
	0x01CF0FD0 STP D9, D8, [X31 + 0x80]
	0x01CF0FD4 STP X30, X25, [X31 + 0x90]
	0x01CF0FD8 STP X24, X23, [X31 + 0xA0]
	0x01CF0FDC STP X22, X21, [X31 + 0xB0]
	0x01CF0FE0 STP X20, X19, [X31 + 0xC0]
	0x01CF0FE4 ADRP X20, 0x2533000
	0x01CF0FE8 LDRB W8, [X20 + 0x6BE]
	0x01CF0FEC MOV X19, X0
	0x01CF0FF0 TBNZ X8, 0x0, 0x1CF1008
	0x01CF0FF4 ADRP X0, 0x225F000
	0x01CF0FF8 LDR X0, [X0 + 0x408]
	0x01CF0FFC BL 0x1B6E7F0
	0x01CF1000 MOVZ W8, 0x1
	0x01CF1004 STRB W8, [X20 + 0x6BE]
	0x01CF1008 LDR X8, [X19 + 0x28]
	0x01CF100C CBZ X8, 0x1CF1624
	0x01CF1010 LDR X0, [X8 + 0x88]
	0x01CF1014 CBZ X0, 0x1CF1624
	0x01CF1018 MOV X1, X31
	0x01CF101C BL 0x3AA7658
	0x01CF1020 LDR X8, [X19 + 0x28]
	0x01CF1024 STR D0, [X31 + 0x40]
	0x01CF1028 STR D1, [X31 + 0x30]
	0x01CF102C CBZ X8, 0x1CF1624

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2534000
	006 Move X21, 0x2260000
	007 Move W8, [X20+1705]
	008 Move X21, [X21+880]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x225E000
	015 Move X0, [X0+1144]
	016 Call 0x1B6F7F0
	017 Move X0, 0x2260000
	018 Move X0, [X0+880]
	019 Call 0x1B6F7F0
	020 Move W8, 1
	021 Move [X20+1705], W8
	022 Move X0, [X21]
	023 Move X20, 0x225E000
	024 Move W8, [X0+224]
	025 Move X20, [X20+1144]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1B6F8F8
	029 Move X0, [X21]
	030 Move X8, [X20]
	031 Move X9, [X0+184]
	032 Move W10, [X8+224]
	033 Move X20, [X9+16]
	034 Compare W10, 0
	035 JumpIfNotEqual {38}
	036 Move X0, X8
	037 Call 0x1B6F8F8
	038 Move X0, X20
	039 Move X1, X19
	040 Move X2, X31
	041 Call Object.op_Equality, X0, X1
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {54}
	046 Move X0, [X21]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1B6F8F8
	051 Move X0, [X21]
	052 Move X8, [X0+184]
	053 Move [X8+16], X31
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Return 

Method: System.Void Update()

Disassembly:
	0x01CF1030 LDR X0, [X8 + 0x88]
	0x01CF1034 CBZ X0, 0x1CF1624
	0x01CF1038 MOV X1, X31
	0x01CF103C MOV V8.16B, V2.16B
	0x01CF1040 BL 0x3AA7AD0
	0x01CF1044 MOV X0, X31
	0x01CF1048 BL 0x1CC086C
	0x01CF104C ADRP X23, 0x2532000
	0x01CF1050 LDRB W8, [X23 + 0x441]
	0x01CF1054 MOV V9.16B, V2.16B
	0x01CF1058 CBNZ W8, 0x1CF1078
	0x01CF105C ADRP X0, 0x225C000
	0x01CF1060 LDR X0, [X0 + 0x488]
	0x01CF1064 STP V1, V0, [X31 + 0x10]
	0x01CF1068 BL 0x1B6E7F0
	0x01CF106C LDP V1, V0, [X31 + 0x10]
	0x01CF1070 MOVZ W8, 0x1
	0x01CF1074 STRB W8, [X23 + 0x441]
	0x01CF1078 ADRP X24, 0x225C000
	0x01CF107C LDR X24, [X24 + 0x488]
	0x01CF1080 LDR X0, [X24]
	0x01CF1084 LDR W8, [X0 + 0xE0]
	0x01CF1088 CBNZ W8, 0x1CF1098
	0x01CF108C STP V1, V0, [X31 + 0x10]
	0x01CF1090 BL 0x1B6E8F8
	0x01CF1094 LDP V1, V0, [X31 + 0x10]
	0x01CF1098 ADRP X8, 0xFFFFFFFFFEDB8000
	0x01CF109C ADRP X21, 0x225E000
	0x01CF10A0 FMUL S2, S0, S0
	0x01CF10A4 FMUL S3, S1, S1
	0x01CF10A8 LDR V15, [X8 + 0xB64]
	0x01CF10AC ADRP X22, 0x225C000
	0x01CF10B0 LDR X21, [X21 + 0x408]
	0x01CF10B4 FADD S2, S2, S3
	0x01CF10B8 FMUL S3, S9, S9
	0x01CF10BC LDR X22, [X22 + 0x480]
	0x01CF10C0 FADD S2, S3, S2
	0x01CF10C4 FSQRT S2, S2
	0x01CF10C8 FCMP S2, S15
	0x01CF10CC B.LE 0x1CF10E4
	0x01CF10D0 MOV V0.S[1], V1.S[0]
	0x01CF10D4 UNIMPLEMENTED
	0x00000000 INVALID
	0x01CF10DC FDIV S9, S9, S2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2533000
	005 Move W8, [X20+1706]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2260000
	012 Move X0, [X0+1376]
	013 Call 0x1B6F7F0
	014 Move W8, 1
	015 Move [X20+1706], W8
	016 Move X8, [X19+56]
	017 Compare X8, 0
	018 JumpIfEqual {50}
	019 Move W8, [X8+32]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move V0, [X19+64]
	022 NotImplemented "Instruction FCMP not yet implemented."
	023 Move W8, 1
	024 Move X9, [X19+40]
	025 Compare X9, 0
	026 JumpIfEqual {50}
	027 Move W10, [X9+24]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CSET not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move [X9+24], W8
	032 Move W8, [X19+48]
	033 Compare W8, 0
	034 JumpIfEqual {43}
	035 Move X0, X19
	036 Call ScreenEffectManager.UpdateFade, X0
	037 Move X0, X19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Call ScreenEffectManager.UpdateHit, X0
	042 Return 
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Return 
	047 Move V0, [X19+72]
	048 NotImplemented "Instruction FCMP not yet implemented."
	049 NotImplemented "Instruction CSET not yet implemented."
	050 Call 0x1B6FA1C

Method: System.Void UpdateFade()

Disassembly:
	0x01CF10E0 B 0x1CF1114
	0x01CF10E4 ADRP X20, 0x2532000
	0x01CF10E8 LDRB W8, [X20 + 0x43F]
	0x01CF10EC CBNZ W8, 0x1CF1104
	0x01CF10F0 ADRP X0, 0x225C000
	0x01CF10F4 LDR X0, [X0 + 0x480]
	0x01CF10F8 BL 0x1B6E7F0
	0x01CF10FC MOVZ W8, 0x1
	0x01CF1100 STRB W8, [X20 + 0x43F]
	0x01CF1104 LDR X8, [X22]
	0x01CF1108 LDR X8, [X8 + 0xB8]
	0x01CF110C LDR V10, [X8]
	0x01CF1110 LDR V9, [X8 + 0x8]
	0x01CF1114 LDR X0, [X21]
	0x01CF1118 LDR W8, [X0 + 0xE0]
	0x01CF111C CBNZ W8, 0x1CF1128
	0x01CF1120 BL 0x1B6E8F8
	0x01CF1124 LDR X0, [X21]
	0x01CF1128 LDR X8, [X0 + 0xB8]
	0x01CF112C LDP V1, V2, [X31 + 0x30]
	0x01CF1130 ADRP X25, 0x2532000
	0x01CF1134 LDRB W9, [X25 + 0x442]
	0x01CF1138 LDR V0, [X8 + 0x18]
	0x01CF113C MOV V2.S[1], V1.S[0]
	0x01CF1140 STR V2, [X31 + 0x2]
	0x00000000 INVALID
	0x01CF1148 FMUL S0, S9, S0
	0x01CF114C FADD V9.2S, V2.2S, V1.2S
	0x01CF1150 FADD S10, S8, S0
	0x01CF1154 CBNZ W9, 0x1CF1174
	0x01CF1158 ADRP X0, 0x225C000
	0x01CF115C LDR X0, [X0 + 0x480]
	0x01CF1160 BL 0x1B6E7F0
	0x01CF1164 LDR X8, [X21]
	0x01CF1168 MOVZ W9, 0x1
	0x01CF116C STRB W9, [X25 + 0x442]
	0x01CF1170 LDR X8, [X8 + 0xB8]
	0x01CF1174 LDR X9, [X22]
	0x01CF1178 LDR V0, [X8 + 0x14]
	0x01CF117C ADRP X8, 0xFFFFFFFFFEDB8000
	0x01CF1180 LDR V1, [X19 + 0x24]
	0x01CF1184 LDR X9, [X9 + 0xB8]
	0x01CF1188 LDR V4, [X8 + 0xAF4]
	0x01CF118C MOV X0, X31
	0x01CF1190 LDR V2, [X9 + 0x18]
	0x01CF1194 LDR V3, [X9 + 0x20]
	0x01CF1198 FMUL S1, S1, S4
	0x00000000 INVALID
	0x01CF11A0 FMUL S0, S3, S0
	0x01CF11A4 FADD V9.2S, V9.2S, V2.2S
	0x01CF11A8 FADD S10, S10, S0
	0x01CF11AC FMOV S0, W31
	0x01CF11B0 FMOV S2, W31
	0x01CF11B4 BL 0x3A928DC
	0x01CF11B8 LDR V4, [X31 + 0x2]
	0x01CF11BC FSUB S6, S10, S8
	0x01CF11C0 MOV X0, X31
	0x01CF11C4 FSUB V4.2S, V9.2S, V4.2S
	0x01CF11C8 MOV S5, V4.S[1]
	0x01CF11CC BL 0x3A92D64
	0x01CF11D0 LDR X0, [X19 + 0x40]
	0x01CF11D4 CBZ X0, 0x1CF1624
	0x01CF11D8 MOV X1, X31
	0x01CF11DC MOV V10.16B, V0.16B
	0x01CF11E0 MOV V11.16B, V1.16B
	0x01CF11E4 MOV V9.16B, V2.16B
	0x01CF11E8 BL 0x3A9B084
	0x01CF11EC CBZ X0, 0x1CF1624
	0x01CF11F0 MOV X1, X31
	0x01CF11F4 BL 0x3AA7AD0
	0x01CF11F8 MOV X0, X31
	0x01CF11FC BL 0x1CC086C
	0x01CF1200 LDRB W8, [X23 + 0x441]
	0x01CF1204 MOV V12.16B, V0.16B
	0x01CF1208 MOV V13.16B, V1.16B
	0x01CF120C MOV V14.16B, V2.16B
	0x01CF1210 CBNZ W8, 0x1CF1228
	0x01CF1214 ADRP X0, 0x225C000
	0x01CF1218 LDR X0, [X0 + 0x488]
	0x01CF121C BL 0x1B6E7F0
	0x01CF1220 MOVZ W8, 0x1
	0x01CF1224 STRB W8, [X23 + 0x441]
	0x01CF1228 LDR X0, [X24]
	0x01CF122C LDR W8, [X0 + 0xE0]
	0x01CF1230 CBNZ W8, 0x1CF1238
	0x01CF1234 BL 0x1B6E8F8
	0x01CF1238 LDR V0, [X31 + 0x4]
	0x01CF123C FMUL S1, S13, S13
	0x01CF1240 FADD S2, S0, S10
	0x01CF1244 LDR V0, [X31 + 0x3]
	0x01CF1248 FADD S10, S8, S9
	0x01CF124C FADD S11, S0, S11
	0x01CF1250 FMUL S0, S12, S12
	0x01CF1254 FADD S0, S0, S1

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2533000
	008 Move W8, [X20+1707]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x2260000
	015 Move X0, [X0+1384]
	016 Call 0x1B6F7F0
	017 Move X0, 0x2260000
	018 Move X0, [X0+1392]
	019 Call 0x1B6F7F0
	020 Move X0, 0x2260000
	021 Move X0, [X0+1376]
	022 Call 0x1B6F7F0
	023 Move X0, 0x225F000
	024 Move X0, [X0+880]
	025 Call 0x1B6F7F0
	026 Move W8, 1
	027 Move [X20+1707], W8
	028 Move X0, [X19+56]
	029 Compare X0, 0
	030 JumpIfEqual {110}
	031 Move W8, [X0+32]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, 0x2260000
	034 Move X8, [X8+1392]
	035 Move X1, [X8]
	036 Call Queue`1<Object>.Peek, X0
	037 Compare X0, 0
	038 JumpIfEqual {110}
	039 Move V8, [X19+68]
	040 Move V0, [X0+20]
	041 Move X20, X0
	042 NotImplemented "Instruction FCMP not yet implemented."
	043 Move X0, X31
	044 Call Time.get_deltaTime
	045 Add S0, S8, S0
	046 Move [X19+68], S0
	047 Move V8, [X19+64]
	048 Move V9, [X20+16]
	049 Move X0, X31
	050 Call Time.get_deltaTime
	051 Move V1, [X20+20]
	052 Subtract S2, S9, S8
	053 NotImplemented "Instruction FCMP not yet implemented."
	054 NotImplemented "Instruction FABD not yet implemented."
	055 NotImplemented "Instruction FDIV not yet implemented."
	056 NotImplemented "Instruction FNEG not yet implemented."
	057 NotImplemented "Instruction FCSEL not yet implemented."
	058 Add S1, S8, S1
	059 NotImplemented "Instruction FCMP not yet implemented."
	060 NotImplemented "Instruction FCSEL not yet implemented."
	061 Move [X19+64], S0
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X30, [X31+16]
	065 Move X21, [X31+24]
	066 Move D9, [X31+48]
	067 Move D8, [X31+56]
	068 Return 
	069 Move [X19+68], W31
	070 Move V0, [X20+16]
	071 Move [X19+64], S0
	072 Move X8, [X20+24]
	073 Compare X8, 0
	074 JumpIfEqual {79}
	075 Move X9, [X8+24]
	076 Move X0, [X8+64]
	077 Move X1, [X8+40]
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Move X0, [X19+56]
	080 Compare X0, 0
	081 JumpIfEqual {110}
	082 Move X8, 0x2260000
	083 Move X8, [X8+1384]
	084 Move X1, [X8]
	085 Call Queue`1<Object>.Dequeue, X0
	086 Move X21, 0x225F000
	087 Move X21, [X21+880]
	088 Move X20, [X19+32]
	089 Move X0, [X21]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1B6F8F8
	094 Compare X20, 0
	095 JumpIfEqual {110}
	096 Move X8, [X21]
	097 Move V0, [X19+64]
	098 Move X0, X20
	099 Move X20, [X31+32]
	100 Move X19, [X31+40]
	101 Move X8, [X8+184]
	102 Move X30, [X31+16]
	103 Move X21, [X31+24]
	104 Move X2, X31
	105 Move W1, [X8]
	106 Move D9, [X31+48]
	107 Move D8, [X31+56]
	108 Call Material.SetFloat, X0, X1, V0
	109 Return 
	110 Call 0x1B6FA1C

Method: System.Void UpdateHit()

Disassembly:
	0x01CF1258 FMUL S1, S14, S14
	0x01CF125C FADD S0, S1, S0
	0x01CF1260 FSQRT S0, S0
	0x01CF1264 FCMP S0, S15
	0x01CF1268 B.LE 0x1CF1284
	0x01CF126C FDIV S1, S12, S0
	0x01CF1270 STR S1, [X31 + 0x20]
	0x01CF1274 FDIV S1, S13, S0
	0x01CF1278 STR S1, [X31 + 0x10]
	0x01CF127C FDIV S9, S14, S0
	0x01CF1280 B 0x1CF12C4
	0x01CF1284 ADRP X20, 0x2532000
	0x01CF1288 LDRB W8, [X20 + 0x43F]
	0x01CF128C CBNZ W8, 0x1CF12AC
	0x01CF1290 ADRP X0, 0x225C000
	0x01CF1294 LDR X0, [X0 + 0x480]
	0x01CF1298 MOV V9.16B, V2.16B
	0x01CF129C BL 0x1B6E7F0
	0x01CF12A0 MOV V2.16B, V9.16B
	0x01CF12A4 MOVZ W8, 0x1
	0x01CF12A8 STRB W8, [X20 + 0x43F]
	0x01CF12AC LDR X8, [X22]
	0x01CF12B0 LDR X8, [X8 + 0xB8]
	0x01CF12B4 LDR V0, [X8]
	0x01CF12B8 STR S0, [X31 + 0x20]
	0x01CF12BC LDP S0, S9, [X8 + 0x4]
	0x01CF12C0 STR S0, [X31 + 0x10]
	0x01CF12C4 LDP V1, V0, [X31 + 0x30]
	0x01CF12C8 STR S2, [X31 + 0xC]
	0x01CF12CC MOV X0, X31
	0x01CF12D0 FSUB S0, S0, S2
	0x01CF12D4 FSUB S1, S1, S11
	0x01CF12D8 FSUB S2, S8, S10
	0x01CF12DC BL 0x1CC086C
	0x01CF12E0 LDRB W8, [X23 + 0x441]
	0x01CF12E4 MOV V12.16B, V0.16B
	0x01CF12E8 MOV V13.16B, V1.16B
	0x01CF12EC MOV V14.16B, V2.16B
	0x01CF12F0 CBNZ W8, 0x1CF1308
	0x01CF12F4 ADRP X0, 0x225C000
	0x01CF12F8 LDR X0, [X0 + 0x488]
	0x01CF12FC BL 0x1B6E7F0
	0x01CF1300 MOVZ W8, 0x1
	0x01CF1304 STRB W8, [X23 + 0x441]
	0x01CF1308 LDR X0, [X24]
	0x01CF130C LDR W8, [X0 + 0xE0]
	0x01CF1310 CBNZ W8, 0x1CF1318

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2533000
	007 Move W8, [X20+1708]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x225F000
	014 Move X0, [X0+880]
	015 Call 0x1B6F7F0
	016 Move W8, 1
	017 Move [X20+1708], W8
	018 Move V8, [X19+72]
	019 NotImplemented "Instruction FCMP not yet implemented."
	020 Move X0, X31
	021 Call Time.get_deltaTime
	022 Move X8, -19165184
	023 Move V1, [X8+2820]
	024 Move S2, W31
	025 Move X21, 0x225F000
	026 NotImplemented "Instruction FDIV not yet implemented."
	027 Add S0, S8, S0
	028 NotImplemented "Instruction FMAX not yet implemented."
	029 Move [X19+72], S0
	030 Move X21, [X21+880]
	031 Move X20, [X19+32]
	032 Move X0, [X21]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1B6F8F8
	037 Compare X20, 0
	038 JumpIfEqual {58}
	039 Move X8, [X21]
	040 Move V0, [X19+72]
	041 Move X0, X20
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X8, [X8+184]
	045 Move X30, [X31+16]
	046 Move X21, [X31+24]
	047 Move X2, X31
	048 Move W1, [X8+8]
	049 Move V8, [X31+48]
	050 Call Material.SetFloat, X0, X1, V0
	051 Return 
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X30, [X31+16]
	055 Move X21, [X31+24]
	056 Move V8, [X31+48]
	057 Return 
	058 Call 0x1B6FA1C

Method: System.Void PlayerHit()

Disassembly:
	0x01CF1314 BL 0x1B6E8F8
	0x01CF1318 FMUL S0, S12, S12
	0x01CF131C FMUL S1, S13, S13
	0x01CF1320 FADD S0, S0, S1
	0x01CF1324 FMUL S1, S14, S14
	0x01CF1328 FADD S0, S1, S0
	0x01CF132C FSQRT S2, S0
	0x01CF1330 FCMP S2, S15
	0x01CF1334 B.LE 0x1CF1348
	0x01CF1338 FDIV S0, S12, S2
	0x01CF133C FDIV S1, S13, S2
	0x01CF1340 FDIV S2, S14, S2
	0x01CF1344 B 0x1CF1378
	0x01CF1348 ADRP X20, 0x2532000
	0x01CF134C LDRB W8, [X20 + 0x43F]
	0x01CF1350 CBNZ W8, 0x1CF1368
	0x01CF1354 ADRP X0, 0x225C000
	0x01CF1358 LDR X0, [X0 + 0x480]
	0x01CF135C BL 0x1B6E7F0
	0x01CF1360 MOVZ W8, 0x1
	0x01CF1364 STRB W8, [X20 + 0x43F]
	0x01CF1368 LDR X8, [X22]
	0x01CF136C LDR X8, [X8 + 0xB8]
	0x01CF1370 LDP S0, S1, [X8]
	0x01CF1374 LDR V2, [X8 + 0x8]
	0x01CF1378 MOV X0, X31
	0x01CF137C BL 0x1CC086C
	0x01CF1380 LDRB W8, [X23 + 0x441]
	0x01CF1384 MOV V12.16B, V0.16B
	0x01CF1388 MOV V13.16B, V1.16B
	0x01CF138C MOV V14.16B, V2.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2533000
	005 Move X19, 0x225F000
	006 Move W8, [X20+1709]
	007 Move X19, [X19+880]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x225F000
	013 Move X0, [X0+880]
	014 Call 0x1B6F7F0
	015 Move W8, 1
	016 Move [X20+1709], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1B6F8F8
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X9, [X8+16]
	025 Compare X9, 0
	026 JumpIfEqual {40}
	027 Move X0, [X9+32]
	028 Move W10, 0x3F800000
	029 Move [X9+72], W10
	030 Compare X0, 0
	031 JumpIfEqual {40}
	032 Move W1, [X8+8]
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move S0, 1
	036 Move X2, X31
	037 Move X30, [X31+32]
	038 Call Material.SetFloat, X0, X1, V0
	039 Return 
	040 Call 0x1B6FA1C

Method: System.Void FadeInOut(System.Single durationFadeIn = 0.5, System.Single durationHold = 0.1, System.Single durationFadeOut = 0.5, System.Action callbackEventFadeIn = null, System.Action callbackEventBeforeFadeOut = null, System.Action callbackEventFadeOut = null, System.Boolean forceUpdate = True)

Disassembly:
	0x01CF1390 CBNZ W8, 0x1CF13A8
	0x01CF1394 ADRP X0, 0x225C000
	0x01CF1398 LDR X0, [X0 + 0x488]
	0x01CF139C BL 0x1B6E7F0
	0x01CF13A0 MOVZ W8, 0x1
	0x01CF13A4 STRB W8, [X23 + 0x441]
	0x01CF13A8 LDR X0, [X24]
	0x01CF13AC LDR W8, [X0 + 0xE0]
	0x01CF13B0 CBNZ W8, 0x1CF13B8
	0x01CF13B4 BL 0x1B6E8F8
	0x01CF13B8 FMUL S0, S12, S12
	0x01CF13BC FMUL S1, S13, S13
	0x01CF13C0 FADD S0, S0, S1
	0x01CF13C4 FMUL S1, S14, S14
	0x01CF13C8 FADD S0, S1, S0
	0x01CF13CC FSQRT S0, S0
	0x01CF13D0 FCMP S0, S15
	0x01CF13D4 B.LE 0x1CF13E8
	0x01CF13D8 FDIV S12, S12, S0
	0x01CF13DC FDIV S13, S13, S0
	0x01CF13E0 FDIV S14, S14, S0
	0x01CF13E4 B 0x1CF1418
	0x01CF13E8 ADRP X20, 0x2532000
	0x01CF13EC LDRB W8, [X20 + 0x43F]
	0x01CF13F0 CBNZ W8, 0x1CF1408
	0x01CF13F4 ADRP X0, 0x225C000
	0x01CF13F8 LDR X0, [X0 + 0x480]
	0x01CF13FC BL 0x1B6E7F0
	0x01CF1400 MOVZ W8, 0x1
	0x01CF1404 STRB W8, [X20 + 0x43F]
	0x01CF1408 LDR X8, [X22]
	0x01CF140C LDR X8, [X8 + 0xB8]
	0x01CF1410 LDP S12, S13, [X8]
	0x01CF1414 LDR V14, [X8 + 0x8]
	0x01CF1418 LDRB W8, [X25 + 0x442]
	0x01CF141C CBNZ W8, 0x1CF1434
	0x01CF1420 ADRP X0, 0x225C000
	0x01CF1424 LDR X0, [X0 + 0x480]
	0x01CF1428 BL 0x1B6E7F0
	0x01CF142C MOVZ W8, 0x1
	0x01CF1430 STRB W8, [X25 + 0x442]
	0x01CF1434 LDR X8, [X22]
	0x01CF1438 LDR V1, [X31 + 0x10]
	0x01CF143C MOV V2.16B, V9.16B
	0x01CF1440 MOV V3.16B, V12.16B
	0x01CF1444 LDR X8, [X8 + 0xB8]
	0x01CF1448 MOV V4.16B, V13.16B
	0x01CF144C MOV V5.16B, V14.16B
	0x01CF1450 MOV X0, X31
	0x01CF1454 LDR V0, [X8 + 0x20]
	0x01CF1458 LDR X9, [X8 + 0x18]
	0x01CF145C STR S0, [X31 + 0x8]
	0x01CF1460 LDR V0, [X31 + 0x20]
	0x01CF1464 STR X9, [X31]
	0x01CF1468 BL 0x1CCF6E0
	0x01CF146C LDRB W8, [X25 + 0x442]
	0x01CF1470 LDR X20, [X19 + 0x48]
	0x01CF1474 MOV V9.16B, V0.16B
	0x01CF1478 CBNZ W8, 0x1CF1490
	0x01CF147C ADRP X0, 0x225C000
	0x01CF1480 LDR X0, [X0 + 0x480]
	0x01CF1484 BL 0x1B6E7F0
	0x01CF1488 MOVZ W8, 0x1
	0x01CF148C STRB W8, [X25 + 0x442]
	0x01CF1490 CBZ X20, 0x1CF1624
	0x01CF1494 LDR X8, [X22]
	0x01CF1498 MOV X0, X20
	0x01CF149C MOV V3.16B, V9.16B

ISIL:
	001 Move [X31-80], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X24, 0x2533000
	012 Move X23, 0x225F000
	013 Move W8, [X24+1710]
	014 Move X23, [X23+880]
	015 Move W22, W3
	016 Move X19, X2
	017 Move X20, X1
	018 Move X21, X0
	019 Move V8, V2
	020 Move V9, V1
	021 Move V10, V0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {34}
	026 Move X0, 0x2260000
	027 Move X0, [X0+1400]
	028 Call 0x1B6F7F0
	029 Move X0, 0x225F000
	030 Move X0, [X0+880]
	031 Call 0x1B6F7F0
	032 Move W8, 1
	033 Move [X24+1710], W8
	034 Move X0, [X23]
	035 Move TEMP, X22
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {61}
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1B6F8F8
	043 Move X0, [X23]
	044 Move X8, [X0+184]
	045 Move X8, [X8+16]
	046 Compare X8, 0
	047 JumpIfEqual {86}
	048 Move X0, [X8+56]
	049 Compare X0, 0
	050 JumpIfEqual {86}
	051 Move X8, 0x2260000
	052 Move X8, [X8+1400]
	053 Move X1, [X8]
	054 Call Queue`1<Object>.Clear, X0
	055 Move X0, [X23]
	056 Move X8, [X0+184]
	057 Move X8, [X8+16]
	058 Compare X8, 0
	059 JumpIfEqual {86}
	060 Move [X8+64], X31
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1B6F8F8
	065 Move S0, 1
	066 Move V1, V10
	067 Move X0, X21
	068 Call ScreenEffectManager.SetFadeInternal, V0, V1, X0
	069 Move S0, 1
	070 Move V1, V9
	071 Move X0, X20
	072 Call ScreenEffectManager.SetFadeInternal, V0, V1, X0
	073 Move V1, V8
	074 Move X0, X19
	075 Move X20, [X31+64]
	076 Move X19, [X31+72]
	077 Move X22, [X31+48]
	078 Move X21, [X31+56]
	079 Move X24, [X31+32]
	080 Move X23, [X31+40]
	081 Move X30, [X31+24]
	082 Move D9, [X31+8]
	083 Move D8, [X31+16]
	084 Move S0, W31
	085 Move V10, [X31+80]
	086 Call 0x1B6FA1C

Method: System.Void FadeIn(System.Single duration = 0.5, System.Action callbackEvent = null, System.Boolean forceUpdate = True)

Disassembly:
	0x01CF1574 B.CS 0x1CF1628
	0x01CF1578 LDR X0, [X19 + 0x48]
	0x01CF157C CBZ X0, 0x1CF1624
	0x01CF1580 ADD X8, X8, X9, 0x2, LSL
	0x01CF1584 LDR V15, [X8 + 0x20]
	0x01CF1588 MOV X1, X31
	0x01CF158C BL 0x3AA7658
	0x01CF1590 LDR X0, [X19 + 0x40]
	0x01CF1594 CBZ X0, 0x1CF1624
	0x01CF1598 MOV X1, X31
	0x01CF159C MOV V9.16B, V0.16B
	0x01CF15A0 MOV V10.16B, V1.16B
	0x01CF15A4 MOV V11.16B, V2.16B
	0x01CF15A8 BL 0x3A9B084
	0x01CF15AC CBZ X0, 0x1CF1624
	0x01CF15B0 MOV X1, X31
	0x01CF15B4 BL 0x3AA7658
	0x01CF15B8 LDR X0, [X19 + 0x48]
	0x01CF15BC CBZ X0, 0x1CF1624
	0x01CF15C0 LDR V6, [X31 + 0x3]
	0x01CF15C4 FMUL S4, S13, S15
	0x01CF15C8 FMUL S3, S14, S15
	0x01CF15CC FSUB S2, S11, S2
	0x01CF15D0 FADD S4, S6, S4
	0x01CF15D4 LDR V6, [X31 + 0x4]
	0x01CF15D8 FSUB S1, S10, S1
	0x01CF15DC FMUL S5, S12, S15
	0x01CF15E0 FSUB S0, S9, S0
	0x01CF15E4 FADD S3, S8, S3
	0x01CF15E8 LDP X20, X19, [X31 + 0xC0]
	0x01CF15EC LDP X22, X21, [X31 + 0xB0]
	0x01CF15F0 LDP X24, X23, [X31 + 0xA0]
	0x01CF15F4 LDP X30, X25, [X31 + 0x90]
	0x01CF15F8 LDP D9, D8, [X31 + 0x80]
	0x01CF15FC LDP D11, D10, [X31 + 0x70]
	0x01CF1600 LDP D13, D12, [X31 + 0x60]
	0x01CF1604 LDP D15, D14, [X31 + 0x50]
	0x01CF1608 FADD S5, S6, S5
	0x01CF160C FADD S2, S3, S2
	0x01CF1610 FADD S1, S4, S1
	0x01CF1614 FADD S0, S5, S0
	0x01CF1618 MOV X1, X31
	0x01CF161C ADD X31, X31, 0xD0
	0x01CF1620 B 0x3AA76F8
	0x01CF1624 BL 0x1B6EA1C
	0x01CF1628 BL 0x1B6EA24
	0x01CF162C STP X30, X21, [X31 - 0x20]!
	0x01CF1630 STP X20, X19, [X31 + 0x10]
	0x01CF1634 ADRP X20, 0x2532000
	0x01CF1638 ADRP X21, 0x225D000
	0x01CF163C LDRB W8, [X20 + 0x6B9]
	0x01CF1640 LDR X21, [X21 + 0x2A8]
	0x01CF1644 MOV W19, W0
	0x01CF1648 TBNZ X8, 0x0, 0x1CF166C
	0x01CF164C ADRP X0, 0x225D000
	0x01CF1650 LDR X0, [X0 + 0x2A8]
	0x01CF1654 BL 0x1B6E7F0
	0x01CF1658 ADRP X0, 0x225E000
	0x01CF165C LDR X0, [X0 + 0x408]
	0x01CF1660 BL 0x1B6E7F0
	0x01CF1664 MOVZ W8, 0x1
	0x01CF1668 STRB W8, [X20 + 0x6B9]
	0x01CF166C LDR X0, [X21]
	0x01CF1670 LDR W8, [X0 + 0xE0]
	0x01CF1674 CBNZ W8, 0x1CF167C
	0x01CF1678 BL 0x1B6E8F8
	0x01CF167C MOV X0, X31
	0x01CF1680 BL 0x1CB62E4

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x2533000
	008 Move X21, 0x225F000
	009 Move W8, [X22+1711]
	010 Move X21, [X21+880]
	011 Move W20, W1
	012 Move X19, X0
	013 Move V8, V0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x2260000
	019 Move X0, [X0+1400]
	020 Call 0x1B6F7F0
	021 Move X0, 0x225F000
	022 Move X0, [X0+880]
	023 Call 0x1B6F7F0
	024 Move W8, 1
	025 Move [X22+1711], W8
	026 Move X0, [X21]
	027 Move TEMP, X20
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {53}
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1B6F8F8
	035 Move X0, [X21]
	036 Move X8, [X0+184]
	037 Move X8, [X8+16]
	038 Compare X8, 0
	039 JumpIfEqual {87}
	040 Move X0, [X8+56]
	041 Compare X0, 0
	042 JumpIfEqual {87}
	043 Move X8, 0x2260000
	044 Move X8, [X8+1400]
	045 Move X1, [X8]
	046 Call Queue`1<Object>.Clear, X0
	047 Move X0, [X21]
	048 Move X8, [X0+184]
	049 Move X8, [X8+16]
	050 Compare X8, 0
	051 JumpIfEqual {87}
	052 Move [X8+64], X31
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {58}
	056 Call 0x1B6F8F8
	057 Move X0, [X21]
	058 Move X8, [X0+184]
	059 Move X8, [X8+16]
	060 Compare X8, 0
	061 JumpIfEqual {87}
	062 Move V0, [X8+64]
	063 Move S1, 1
	064 NotImplemented "Instruction FCMP not yet implemented."
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X30, [X31+8]
	070 Move V8, [X31+48]
	071 Return 
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1B6F8F8
	076 Move X0, X19
	077 Move X20, [X31+32]
	078 Move X19, [X31+40]
	079 Move X22, [X31+16]
	080 Move X21, [X31+24]
	081 Move X30, [X31+8]
	082 Move S0, 1
	083 Move V1, V8
	084 Move V8, [X31+48]
	085 Call ScreenEffectManager.SetFadeInternal, V0, V1, X0
	086 Return 
	087 Call 0x1B6FA1C

Method: System.Void FadeOut(System.Single duration = 0.5, System.Action callbackEvent = null, System.Boolean forceUpdate = True)

Disassembly:
	0x01CF1684 CBZ W0, 0x1CF16B8
	0x01CF1688 ADRP X8, 0x225E000
	0x01CF168C LDR X8, [X8 + 0x408]
	0x01CF1690 MOV W20, W0
	0x01CF1694 LDR X0, [X8]
	0x01CF1698 LDR W8, [X0 + 0xE0]
	0x01CF169C CBNZ W8, 0x1CF16A4
	0x01CF16A0 BL 0x1B6E8F8
	0x01CF16A4 AND W0, W19, 0x1
	0x01CF16A8 MOV W1, W20
	0x01CF16AC LDP X20, X19, [X31 + 0x10]
	0x01CF16B0 LDP X30, X21, [X31], #0x20
	0x01CF16B4 B 0x1CF16C4
	0x01CF16B8 LDP X20, X19, [X31 + 0x10]
	0x01CF16BC LDP X30, X21, [X31], #0x20
	0x01CF16C0 RET
	0x01CF16C4 STR X30, [X31 - 0x30]!
	0x01CF16C8 STP X22, X21, [X31 + 0x10]
	0x01CF16CC STP X20, X19, [X31 + 0x20]
	0x01CF16D0 ADRP X22, 0x2532000
	0x01CF16D4 ADRP X21, 0x225E000
	0x01CF16D8 LDRB W8, [X22 + 0x6BA]
	0x01CF16DC LDR X21, [X21 + 0x408]
	0x01CF16E0 MOV W20, W1
	0x01CF16E4 MOV W19, W0
	0x01CF16E8 TBNZ X8, 0x0, 0x1CF170C
	0x01CF16EC ADRP X0, 0x225C000
	0x01CF16F0 LDR X0, [X0 + 0x478]
	0x01CF16F4 BL 0x1B6E7F0
	0x01CF16F8 ADRP X0, 0x225E000
	0x01CF16FC LDR X0, [X0 + 0x408]
	0x01CF1700 BL 0x1B6E7F0
	0x01CF1704 MOVZ W8, 0x1
	0x01CF1708 STRB W8, [X22 + 0x6BA]
	0x01CF170C LDR X0, [X21]
	0x01CF1710 LDR W8, [X0 + 0xE0]
	0x01CF1714 CBNZ W8, 0x1CF1720
	0x01CF1718 BL 0x1B6E8F8
	0x01CF171C LDR X0, [X21]
	0x01CF1720 LDR X8, [X0 + 0xB8]
	0x01CF1724 LDR X22, [X8]
	0x01CF1728 CBZ X22, 0x1CF17F4
	0x01CF172C MOV W1, W20
	0x01CF1730 BL 0x1CF17F8
	0x01CF1734 STR X0, [X22 + 0x28]
	0x01CF1738 LDR X8, [X21]
	0x01CF173C LDR X8, [X8 + 0xB8]
	0x01CF1740 LDR X22, [X8]
	0x01CF1744 CBZ X22, 0x1CF17F4
	0x01CF1748 MOV W1, W20
	0x01CF174C BL 0x1CF17F8
	0x01CF1750 MOV X1, X0
	0x01CF1754 BL 0x1CF18D4
	0x01CF1758 STR W0, [X22 + 0x30]
	0x01CF175C LDR X8, [X21]
	0x01CF1760 LDR X8, [X8 + 0xB8]
	0x01CF1764 LDR X8, [X8]
	0x01CF1768 CBZ X8, 0x1CF17F4
	0x01CF176C ADRP X9, 0x225C000
	0x01CF1770 LDR X9, [X9 + 0x478]
	0x01CF1774 LDR X20, [X8 + 0x28]
	0x01CF1778 LDR X0, [X9]
	0x01CF177C LDR W9, [X0 + 0xE0]
	0x01CF1780 CBNZ W9, 0x1CF1788
	0x01CF1784 BL 0x1B6E8F8
	0x01CF1788 MOV X0, X20
	0x01CF178C MOV X1, X31
	0x01CF1790 MOV X2, X31
	0x01CF1794 BL 0x3A9D6EC

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x2533000
	008 Move X21, 0x225F000
	009 Move W8, [X22+1712]
	010 Move X21, [X21+880]
	011 Move W20, W1
	012 Move X19, X0
	013 Move V8, V0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x2260000
	019 Move X0, [X0+1400]
	020 Call 0x1B6F7F0
	021 Move X0, 0x225F000
	022 Move X0, [X0+880]
	023 Call 0x1B6F7F0
	024 Move W8, 1
	025 Move [X22+1712], W8
	026 Move X0, [X21]
	027 Move TEMP, X20
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {55}
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1B6F8F8
	035 Move X0, [X21]
	036 Move X8, [X0+184]
	037 Move X8, [X8+16]
	038 Compare X8, 0
	039 JumpIfEqual {88}
	040 Move X0, [X8+56]
	041 Compare X0, 0
	042 JumpIfEqual {88}
	043 Move X8, 0x2260000
	044 Move X8, [X8+1400]
	045 Move X1, [X8]
	046 Call Queue`1<Object>.Clear, X0
	047 Move X0, [X21]
	048 Move X8, [X0+184]
	049 Move X8, [X8+16]
	050 Compare X8, 0
	051 JumpIfEqual {88}
	052 Move X9, -19152896
	053 Move V0, [X9+3864]
	054 Move [X8+64], D0
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {60}
	058 Call 0x1B6F8F8
	059 Move X0, [X21]
	060 Move X8, [X0+184]
	061 Move X8, [X8+16]
	062 Compare X8, 0
	063 JumpIfEqual {88}
	064 Move V0, [X8+64]
	065 NotImplemented "Instruction FCMP not yet implemented."
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+8]
	071 Move V8, [X31+48]
	072 Return 
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1B6F8F8
	077 Move X0, X19
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X22, [X31+16]
	081 Move X21, [X31+24]
	082 Move X30, [X31+8]
	083 Move S0, W31
	084 Move V1, V8
	085 Move V8, [X31+48]
	086 Call ScreenEffectManager.SetFadeInternal, V0, V1, X0
	087 Return 
	088 Call 0x1B6FA1C

Method: System.Void SetFadeInternal(System.Single opacity, System.Single duration = 0.5, System.Action callbackEvent = null)

Disassembly:
	0x01CF14A0 MOV X1, X31
	0x01CF14A4 LDR X8, [X8 + 0xB8]
	0x01CF14A8 LDP S1, S2, [X8 + 0x1C]
	0x01CF14AC LDR V0, [X8 + 0x18]
	0x01CF14B0 BL 0x3AA8744
	0x01CF14B4 LDRB W8, [X23 + 0x441]
	0x01CF14B8 CBNZ W8, 0x1CF14D0
	0x01CF14BC ADRP X0, 0x225C000
	0x01CF14C0 LDR X0, [X0 + 0x488]
	0x01CF14C4 BL 0x1B6E7F0
	0x01CF14C8 MOVZ W8, 0x1
	0x01CF14CC STRB W8, [X23 + 0x441]
	0x01CF14D0 LDR V0, [X31 + 0x4]
	0x01CF14D4 LDR V1, [X31 + 0xC]
	0x01CF14D8 LDR X0, [X24]
	0x01CF14DC FSUB S9, S10, S8
	0x01CF14E0 FSUB S12, S1, S0
	0x01CF14E4 LDR V0, [X31 + 0x3]
	0x01CF14E8 LDR W8, [X0 + 0xE0]
	0x01CF14EC FSUB S11, S11, S0
	0x01CF14F0 CBNZ W8, 0x1CF14F8
	0x01CF14F4 BL 0x1B6E8F8
	0x01CF14F8 FMUL S0, S12, S12
	0x01CF14FC FMUL S1, S11, S11
	0x01CF1500 FADD S0, S0, S1
	0x01CF1504 FMUL S1, S9, S9
	0x01CF1508 FADD S0, S1, S0
	0x01CF150C FSQRT S0, S0
	0x01CF1510 FCMP S0, S15
	0x01CF1514 B.LE 0x1CF1528
	0x01CF1518 FDIV S12, S12, S0
	0x01CF151C FDIV S13, S11, S0
	0x01CF1520 FDIV S14, S9, S0
	0x01CF1524 B 0x1CF1558
	0x01CF1528 ADRP X20, 0x2532000
	0x01CF152C LDRB W8, [X20 + 0x43F]
	0x01CF1530 CBNZ W8, 0x1CF1548
	0x01CF1534 ADRP X0, 0x225C000
	0x01CF1538 LDR X0, [X0 + 0x480]
	0x01CF153C BL 0x1B6E7F0
	0x01CF1540 MOVZ W8, 0x1
	0x01CF1544 STRB W8, [X20 + 0x43F]
	0x01CF1548 LDR X8, [X22]
	0x01CF154C LDR X8, [X8 + 0xB8]
	0x01CF1550 LDP S12, S13, [X8]
	0x01CF1554 LDR V14, [X8 + 0x8]
	0x01CF1558 LDR X8, [X21]
	0x01CF155C LDR X8, [X8 + 0xB8]
	0x01CF1560 LDR X8, [X8 + 0x8]
	0x01CF1564 CBZ X8, 0x1CF1624
	0x01CF1568 LDRSW X9, [X19 + 0x20]
	0x01CF156C LDR W10, [X8 + 0x18]
	0x01CF1570 CMP W9, W10

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x2533000
	008 Move X20, 0x225F000
	009 Move W8, [X21+1713]
	010 Move X20, [X20+880]
	011 Move X19, X0
	012 Move V8, V1
	013 Move V9, V0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x2260000
	019 Move X0, [X0+1408]
	020 Call 0x1B6F7F0
	021 Move X0, 0x2260000
	022 Move X0, [X0+1416]
	023 Call 0x1B6F7F0
	024 Move X0, 0x225F000
	025 Move X0, [X0+880]
	026 Call 0x1B6F7F0
	027 Move W8, 1
	028 Move [X21+1713], W8
	029 Move X0, [X20]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {35}
	033 Call 0x1B6F8F8
	034 Move X0, [X20]
	035 Move X8, [X0+184]
	036 Move X8, [X8+16]
	037 Compare X8, 0
	038 JumpIfEqual {67}
	039 Move X9, 0x2260000
	040 Move X9, [X9+1408]
	041 Move X20, [X8+56]
	042 Move X0, [X9]
	043 Call 0x1B6FA0C
	044 Move W8, 0x3F000000
	045 Move X1, X31
	046 Move X21, X0
	047 Move [X0+20], W8
	048 Call Object..ctor, X0
	049 Move [X21+16], S9
	050 Move [X21+24], S8
	051 Move [X21+24], X19
	052 Compare X20, 0
	053 JumpIfEqual {67}
	054 Move X8, 0x2260000
	055 Move X8, [X8+1416]
	056 Move X0, X20
	057 Move X1, X21
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X2, [X8]
	061 Move X30, [X31+16]
	062 Move X21, [X31+24]
	063 Move D9, [X31+48]
	064 Move D8, [X31+56]
	065 Call Queue`1<Object>.Enqueue, X0, X1
	066 Return 
	067 Call 0x1B6FA1C

Method: System.Void SetFadeColor(UnityEngine.Color color)

Disassembly:
	0x01CF17DC LDR X30, [X31], #0x30
	0x01CF17E0 B 0x3A9E9B0
	0x01CF17E4 LDP X20, X19, [X31 + 0x20]
	0x01CF17E8 LDP X22, X21, [X31 + 0x10]
	0x01CF17EC LDR X30, [X31], #0x30
	0x01CF17F0 RET
	0x01CF17F4 BL 0x1B6EA1C
	0x01CF17F8 STR X30, [X31 - 0x20]!
	0x01CF17FC STP X20, X19, [X31 + 0x10]
	0x01CF1800 ADRP X20, 0x2532000
	0x01CF1804 LDRB W8, [X20 + 0x6BF]
	0x01CF1808 MOV W19, W1
	0x01CF180C TBNZ X8, 0x0, 0x1CF1824
	0x01CF1810 ADRP X0, 0x225F000
	0x01CF1814 LDR X0, [X0 + 0x5C8]
	0x01CF1818 BL 0x1B6E7F0
	0x01CF181C MOVZ W8, 0x1
	0x01CF1820 STRB W8, [X20 + 0x6BF]
	0x01CF1824 BL 0x1CF09F4
	0x01CF1828 CBZ X0, 0x1CF1848
	0x01CF182C ADRP X8, 0x225F000
	0x01CF1830 LDR X8, [X8 + 0x5C8]
	0x01CF1834 MOV W1, W19
	0x01CF1838 LDP X20, X19, [X31 + 0x10]
	0x01CF183C LDR X2, [X8]
	0x01CF1840 LDR X30, [X31], #0x20
	0x01CF1844 B 0x29610F8
	0x01CF1848 BL 0x1B6EA1C
	0x01CF184C STR X30, [X31 - 0x10]!
	0x01CF1850 BL 0x1CF17F8
	0x01CF1854 MOV X1, X0
	0x01CF1858 LDR X30, [X31], #0x10
	0x01CF185C B 0x1CF18D4
	0x01CF1860 STR X30, [X31 - 0x30]!
	0x01CF1864 STP X22, X21, [X31 + 0x10]
	0x01CF1868 STP X20, X19, [X31 + 0x20]
	0x01CF186C ADRP X22, 0x2532000
	0x01CF1870 ADRP X21, 0x225F000
	0x01CF1874 LDRB W8, [X22 + 0x6BC]
	0x01CF1878 LDR X21, [X21 + 0x5D0]

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x2533000
	009 Move X19, 0x225F000
	010 Move W8, [X20+1714]
	011 Move X19, [X19+880]
	012 Move V8, V3
	013 Move V9, V2
	014 Move V10, V1
	015 Move V11, V0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x225F000
	021 Move X0, [X0+880]
	022 Call 0x1B6F7F0
	023 Move W8, 1
	024 Move [X20+1714], W8
	025 Move X0, [X19]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1B6F8F8
	030 Move X0, [X19]
	031 Move X8, [X0+184]
	032 Move X9, [X8+16]
	033 Compare X9, 0
	034 JumpIfEqual {53}
	035 Move X0, [X9+32]
	036 Compare X0, 0
	037 JumpIfEqual {53}
	038 Move W1, [X8+4]
	039 Move V2, V9
	040 Move V3, V8
	041 Move X20, [X31+48]
	042 Move X19, [X31+56]
	043 Move X30, [X31+32]
	044 Move D9, [X31+16]
	045 Move D8, [X31+24]
	046 Move V0, V11
	047 Move V1, V10
	048 Move X2, X31
	049 Move D11, [X31+64]
	050 Move D10, [X31+72]
	051 Call Material.SetColor, X0, X1, X2
	052 Return 
	053 Call 0x1B6FA1C

Method: System.Void .ctor()

Disassembly:
	0x01CF187C MOV W20, W1
	0x01CF1880 MOV X19, X0
	0x01CF1884 TBNZ X8, 0x0, 0x1CF189C
	0x01CF1888 ADRP X0, 0x225F000
	0x01CF188C LDR X0, [X0 + 0x5D0]
	0x01CF1890 BL 0x1B6E7F0
	0x01CF1894 MOVZ W8, 0x1
	0x01CF1898 STRB W8, [X22 + 0x6BC]
	0x01CF189C LDR X0, [X21]
	0x01CF18A0 AND W21, W20, 0x1
	0x01CF18A4 BL 0x1B6EA0C
	0x01CF18A8 MOV X1, X31
	0x01CF18AC MOV X20, X0
	0x01CF18B0 BL 0x32276F8
	0x01CF18B4 STR W31, [X20 + 0x10]
	0x01CF18B8 STR X19, [X20 + 0x28]
	0x01CF18BC STRB W21, [X20 + 0x20]
	0x01CF18C0 MOV X0, X20
	0x01CF18C4 LDP X20, X19, [X31 + 0x20]
	0x01CF18C8 LDP X22, X21, [X31 + 0x10]
	0x01CF18CC LDR X30, [X31], #0x30
	0x01CF18D0 RET
	0x01CF18D4 SUB X31, X31, 0x60
	0x01CF18D8 STR X30, [X31 + 0x20]
	0x01CF18DC STP X24, X23, [X31 + 0x30]
	0x01CF18E0 STP X22, X21, [X31 + 0x40]
	0x01CF18E4 STP X20, X19, [X31 + 0x50]
	0x01CF18E8 ADRP X20, 0x2532000
	0x01CF18EC LDRB W8, [X20 + 0x6BB]
	0x01CF18F0 MOV X19, X1
	0x01CF18F4 TBNZ X8, 0x0, 0x1CF1948

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2533000
	007 Move X22, 0x2260000
	008 Move X20, 0x2260000
	009 Move W8, [X21+1715]
	010 Move X22, [X22+1424]
	011 Move X20, [X20+1432]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2260000
	018 Move X0, [X0+1432]
	019 Call 0x1B6F7F0
	020 Move X0, 0x2260000
	021 Move X0, [X0+1424]
	022 Call 0x1B6F7F0
	023 Move W8, 1
	024 Move [X21+1715], W8
	025 Move X0, [X22]
	026 Call 0x1B6FA0C
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call Queue`1<Object>..ctor, X0
	030 Move [X19+56], X20
	031 Move X0, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+48]
	038 Call MonoBehaviour..ctor, X0
	039 Return 

Method: System.Void .cctor()

Disassembly:
	0x01CF18F8 ADRP X0, 0x225D000
	0x01CF18FC LDR X0, [X0 + 0x808]
	0x01CF1900 BL 0x1B6E7F0
	0x01CF1904 ADRP X0, 0x225F000
	0x01CF1908 LDR X0, [X0 + 0x288]
	0x01CF190C BL 0x1B6E7F0
	0x01CF1910 ADRP X0, 0x225F000
	0x01CF1914 LDR X0, [X0 + 0x290]
	0x01CF1918 BL 0x1B6E7F0
	0x01CF191C ADRP X0, 0x225F000
	0x01CF1920 LDR X0, [X0 + 0x298]
	0x01CF1924 BL 0x1B6E7F0
	0x01CF1928 ADRP X0, 0x225C000
	0x01CF192C LDR X0, [X0 + 0x478]
	0x01CF1930 BL 0x1B6E7F0
	0x01CF1934 ADRP X0, 0x225F000
	0x01CF1938 LDR X0, [X0 + 0x2B8]
	0x01CF193C BL 0x1B6E7F0
	0x01CF1940 MOVZ W8, 0x1
	0x01CF1944 STRB W8, [X20 + 0x6BB]
	0x01CF1948 STP X31, X31, [X31 + 0x8]
	0x01CF194C STR X31, [X31 + 0x18]
	0x01CF1950 BL 0x1CF09F4
	0x01CF1954 CBZ X0, 0x1CF1A08
	0x01CF1958 ADRP X8, 0x225D000
	0x01CF195C LDR X8, [X8 + 0x808]
	0x01CF1960 LDR X1, [X8]
	0x01CF1964 BL 0x2961038
	0x01CF1968 CBZ X0, 0x1CF1A08
	0x01CF196C ADRP X8, 0x225F000
	0x01CF1970 LDR X8, [X8 + 0x2B8]
	0x01CF1974 ADRP X23, 0x225F000
	0x01CF1978 ADRP X24, 0x225C000
	0x01CF197C ADRP X22, 0x225F000
	0x01CF1980 LDR X1, [X8]
	0x01CF1984 LDR X23, [X23 + 0x290]
	0x01CF1988 LDR X24, [X24 + 0x478]
	0x01CF198C LDR X22, [X22 + 0x288]
	0x01CF1990 ADD X8, X31, 0x8
	0x01CF1994 BL 0x25D79BC
	0x01CF1998 MOV W20, W31
	0x01CF199C LDR X1, [X23]
	0x01CF19A0 ADD X0, X31, 0x8
	0x01CF19A4 BL 0x2A6B89C
	0x01CF19A8 TBZ X0, 0x0, 0x1CF19DC
	0x01CF19AC LDR X0, [X24]
	0x01CF19B0 LDR X21, [X31 + 0x18]
	0x01CF19B4 LDR W8, [X0 + 0xE0]
	0x01CF19B8 CBNZ W8, 0x1CF19C0
	0x01CF19BC BL 0x1B6E8F8
	0x01CF19C0 MOV X0, X21
	0x01CF19C4 MOV X1, X19
	0x01CF19C8 MOV X2, X31
	0x01CF19CC BL 0x3AA0AF0
	0x01CF19D0 TBNZ X0, 0x0, 0x1CF19E0
	0x01CF19D4 ADD W20, W20, 0x1
	0x01CF19D8 B 0x1CF199C
	0x01CF19DC MOV W20, W31
	0x01CF19E0 LDR X1, [X22]
	0x01CF19E4 ADD X0, X31, 0x8
	0x01CF19E8 BL 0x2A6B898
	0x01CF19EC MOV W0, W20
	0x01CF19F0 LDP X20, X19, [X31 + 0x50]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x2533000
	009 Move X24, 0x2260000
	010 Move X19, 0x225F000
	011 Move X22, 0x2260000
	012 Move X21, 0x2260000
	013 Move X20, 0x2260000
	014 Move W8, [X23+1716]
	015 Move X24, [X24+1440]
	016 Move X19, [X19+880]
	017 Move X22, [X22+1448]
	018 Move X21, [X21+1456]
	019 Move X20, [X20+1464]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {41}
	024 Move X0, 0x225F000
	025 Move X0, [X0+880]
	026 Call 0x1B6F7F0
	027 Move X0, 0x2260000
	028 Move X0, [X0+1448]
	029 Call 0x1B6F7F0
	030 Move X0, 0x2260000
	031 Move X0, [X0+1464]
	032 Call 0x1B6F7F0
	033 Move X0, 0x2260000
	034 Move X0, [X0+1456]
	035 Call 0x1B6F7F0
	036 Move X0, 0x2260000
	037 Move X0, [X0+1440]
	038 Call 0x1B6F7F0
	039 Move W8, 1
	040 Move [X23+1716], W8
	041 Move X0, [X24]
	042 Move X1, X31
	043 Call Shader.PropertyToID, X0
	044 Move X8, [X19]
	045 Move X1, X31
	046 Move X8, [X8+184]
	047 Move [X8], W0
	048 Move X0, [X22]
	049 Call Shader.PropertyToID, X0
	050 Move X8, [X19]
	051 Move X1, X31
	052 Move X8, [X8+184]
	053 Move [X8+4], W0
	054 Move X0, [X21]
	055 Call Shader.PropertyToID, X0
	056 Move X8, [X19]
	057 Move X1, X31
	058 Move X8, [X8+184]
	059 Move [X8+8], W0
	060 Move X0, [X20]
	061 Call Shader.PropertyToID, X0
	062 Move X8, [X19]
	063 Move X20, [X31+48]
	064 Move X19, [X31+56]
	065 Move X22, [X31+32]
	066 Move X21, [X31+40]
	067 Move X24, [X31+16]
	068 Move X23, [X31+24]
	069 Move X8, [X8+184]
	070 Move [X8+12], W0
	071 Move X30, [X31+64]
	072 Return 

