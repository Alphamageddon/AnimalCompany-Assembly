Type: AnimalCompany.ScreenEffectManager

Method: System.Void Awake()

Disassembly:
	0x01E00E10 BL 0x3C124EC
	0x01E00E14 LDR X8, [X19]
	0x01E00E18 LDP X20, X19, [X31 + 0x30]
	0x01E00E1C LDP X22, X21, [X31 + 0x20]
	0x01E00E20 LDP X24, X23, [X31 + 0x10]
	0x01E00E24 LDR X8, [X8 + 0xB8]
	0x01E00E28 STR W0, [X8 + 0x10]
	0x01E00E2C LDP X30, X25, [X31], #0x40
	0x01E00E30 RET
	0x01E00E34 STR X30, [X31 - 0x20]!
	0x01E00E38 STP X20, X19, [X31 + 0x10]
	0x01E00E3C ADRP X20, 0x25D8000
	0x01E00E40 ADRP X19, 0x22F5000
	0x01E00E44 LDRB W8, [X20 + 0xD64]
	0x01E00E48 LDR X19, [X19 + 0x9A0]
	0x01E00E4C TBNZ X8, 0x0, 0x1E00E64
	0x01E00E50 ADRP X0, 0x22F5000
	0x01E00E54 LDR X0, [X0 + 0x9A0]
	0x01E00E58 BL 0x1C16CF4
	0x01E00E5C MOVZ W8, 0x1
	0x01E00E60 STRB W8, [X20 + 0xD64]
	0x01E00E64 LDR X0, [X19]
	0x01E00E68 LDR W8, [X0 + 0xE0]
	0x01E00E6C CBNZ W8, 0x1E00E74
	0x01E00E70 BL 0x1C16DFC
	0x01E00E74 ADRP X20, 0x25D8000
	0x01E00E78 LDRB W8, [X20 + 0xB6A]
	0x01E00E7C CBNZ W8, 0x1E00E94
	0x01E00E80 ADRP X0, 0x22F5000
	0x01E00E84 LDR X0, [X0 + 0x9A0]
	0x01E00E88 BL 0x1C16CF4
	0x01E00E8C MOVZ W8, 0x1
	0x01E00E90 STRB W8, [X20 + 0xB6A]
	0x01E00E94 LDR X0, [X19]
	0x01E00E98 LDR W8, [X0 + 0xE0]
	0x01E00E9C CBNZ W8, 0x1E00EA8
	0x01E00EA0 BL 0x1C16DFC
	0x01E00EA4 LDR X0, [X19]
	0x01E00EA8 LDR X8, [X0 + 0xB8]
	0x01E00EAC LDP X20, X19, [X31 + 0x10]
	0x01E00EB0 LDR X0, [X8]
	0x01E00EB4 LDR X30, [X31], #0x20
	0x01E00EB8 RET
	0x01E00EBC STR X30, [X31 - 0x30]!
	0x01E00EC0 STP X22, X21, [X31 + 0x10]
	0x01E00EC4 STP X20, X19, [X31 + 0x20]
	0x01E00EC8 ADRP X20, 0x25D8000
	0x01E00ECC ADRP X21, 0x22F8000
	0x01E00ED0 LDRB W8, [X20 + 0xD65]
	0x01E00ED4 LDR X21, [X21 + 0x168]
	0x01E00ED8 MOV X19, X0
	0x01E00EDC TBNZ X8, 0x0, 0x1E00F00
	0x01E00EE0 ADRP X0, 0x22F3000
	0x01E00EE4 LDR X0, [X0 + 0x598]
	0x01E00EE8 BL 0x1C16CF4
	0x01E00EEC ADRP X0, 0x22F8000
	0x01E00EF0 LDR X0, [X0 + 0x168]
	0x01E00EF4 BL 0x1C16CF4
	0x01E00EF8 MOVZ W8, 0x1
	0x01E00EFC STRB W8, [X20 + 0xD65]
	0x01E00F00 LDR X0, [X21]
	0x01E00F04 ADRP X22, 0x22F3000
	0x01E00F08 LDR W8, [X0 + 0xE0]
	0x01E00F0C LDR X22, [X22 + 0x598]
	0x01E00F10 CBNZ W8, 0x1E00F1C
	0x01E00F14 BL 0x1C16DFC
	0x01E00F18 LDR X0, [X21]
	0x01E00F1C LDR X8, [X22]
	0x01E00F20 LDR X9, [X0 + 0xB8]
	0x01E00F24 LDR W10, [X8 + 0xE0]
	0x01E00F28 LDR X20, [X9]
	0x01E00F2C CBNZ W10, 0x1E00F38
	0x01E00F30 MOV X0, X8
	0x01E00F34 BL 0x1C16DFC
	0x01E00F38 MOV X0, X20
	0x01E00F3C MOV X1, X31
	0x01E00F40 MOV X2, X31
	0x01E00F44 BL 0x3C354F8
	0x01E00F48 TBZ X0, 0x0, 0x1E00F88
	0x01E00F4C MOV X0, X19
	0x01E00F50 MOV X1, X31
	0x01E00F54 BL 0x3C32ECC
	0x01E00F58 LDR X8, [X22]
	0x01E00F5C MOV X19, X0
	0x01E00F60 LDR W9, [X8 + 0xE0]
	0x01E00F64 CBNZ W9, 0x1E00F70
	0x01E00F68 MOV X0, X8
	0x01E00F6C BL 0x1C16DFC
	0x01E00F70 MOV X0, X19
	0x01E00F74 LDP X20, X19, [X31 + 0x20]
	0x01E00F78 LDP X22, X21, [X31 + 0x10]
	0x01E00F7C MOV X1, X31
	0x01E00F80 LDR X30, [X31], #0x30
	0x01E00F84 B 0x3C394A8
	0x01E00F88 LDR X0, [X21]
	0x01E00F8C LDR W8, [X0 + 0xE0]
	0x01E00F90 CBNZ W8, 0x1E00F9C
	0x01E00F94 BL 0x1C16DFC
	0x01E00F98 LDR X0, [X21]
	0x01E00F9C LDR X8, [X0 + 0xB8]
	0x01E00FA0 LDP X22, X21, [X31 + 0x10]
	0x01E00FA4 STR X19, [X8]
	0x01E00FA8 LDP X20, X19, [X31 + 0x20]
	0x01E00FAC LDR X30, [X31], #0x30
	0x01E00FB0 RET
	0x01E00FB4 STP X30, X21, [X31 - 0x20]!
	0x01E00FB8 STP X20, X19, [X31 + 0x10]
	0x01E00FBC ADRP X20, 0x25D8000
	0x01E00FC0 ADRP X21, 0x22F8000
	0x01E00FC4 LDRB W8, [X20 + 0xD66]
	0x01E00FC8 LDR X21, [X21 + 0x168]
	0x01E00FCC MOV X19, X0
	0x01E00FD0 TBNZ X8, 0x0, 0x1E00FF4
	0x01E00FD4 ADRP X0, 0x22F3000
	0x01E00FD8 LDR X0, [X0 + 0x598]
	0x01E00FDC BL 0x1C16CF4
	0x01E00FE0 ADRP X0, 0x22F8000
	0x01E00FE4 LDR X0, [X0 + 0x168]
	0x01E00FE8 BL 0x1C16CF4
	0x01E00FEC MOVZ W8, 0x1
	0x01E00FF0 STRB W8, [X20 + 0xD66]
	0x01E00FF4 LDR X0, [X21]
	0x01E00FF8 ADRP X20, 0x22F3000
	0x01E00FFC LDR W8, [X0 + 0xE0]
	0x01E01000 B 0x3EB17C4
	0x01E01004 CBNZ W8, 0x1E01010
	0x01E01008 BL 0x1C16DFC
	0x01E0100C LDR X0, [X21]
	0x01E01010 LDR X8, [X20]
	0x01E01014 LDR X9, [X0 + 0xB8]
	0x01E01018 LDR W10, [X8 + 0xE0]
	0x01E0101C LDR X20, [X9]
	0x01E01020 CBNZ W10, 0x1E0102C
	0x01E01024 MOV X0, X8
	0x01E01028 BL 0x1C16DFC
	0x01E0102C MOV X0, X20
	0x01E01030 MOV X1, X19
	0x01E01034 MOV X2, X31
	0x01E01038 BL 0x3C3883C
	0x01E0103C TBZ X0, 0x0, 0x1E0105C
	0x01E01040 LDR X0, [X21]
	0x01E01044 LDR W8, [X0 + 0xE0]
	0x01E01048 CBNZ W8, 0x1E01054
	0x01E0104C BL 0x1C16DFC
	0x01E01050 LDR X0, [X21]
	0x01E01054 LDR X8, [X0 + 0xB8]
	0x01E01058 STR X31, [X8]
	0x01E0105C LDP X20, X19, [X31 + 0x10]
	0x01E01060 LDP X30, X21, [X31], #0x20
	0x01E01064 RET
	0x01E01068 SUB X31, X31, 0x30
	0x01E0106C STP X30, X21, [X31 + 0x10]
	0x01E01070 STP X20, X19, [X31 + 0x20]
	0x01E01074 ADRP X20, 0x25D7000
	0x01E01078 LDRB W8, [X20 + 0xD67]
	0x01E0107C MOV X19, X0
	0x01E01080 TBNZ X8, 0x0, 0x1E010D4
	0x01E01084 ADRP X0, 0x22F6000
	0x01E01088 LDR X0, [X0 + 0x848]
	0x01E0108C BL 0x1C16CF4
	0x01E01090 ADRP X0, 0x22F6000
	0x01E01094 LDR X0, [X0 + 0x850]
	0x01E01098 BL 0x1C16CF4
	0x01E0109C ADRP X0, 0x22F8000
	0x01E010A0 LDR X0, [X0 + 0x748]
	0x01E010A4 BL 0x1C16CF4
	0x01E010A8 ADRP X0, 0x22F7000
	0x01E010AC LDR X0, [X0 + 0xC70]
	0x01E010B0 BL 0x1C16CF4
	0x01E010B4 ADRP X0, 0x22F7000
	0x01E010B8 LDR X0, [X0 + 0xEE8]
	0x01E010BC BL 0x1C16CF4
	0x01E010C0 ADRP X0, 0x22F7000
	0x01E010C4 LDR X0, [X0 + 0x168]
	0x01E010C8 BL 0x1C16CF4
	0x01E010CC MOVZ W8, 0x1
	0x01E010D0 STRB W8, [X20 + 0xD67]
	0x01E010D4 STP X31, X31, [X31]
	0x01E010D8 LDR X0, [X19 + 0x40]
	0x01E010DC CBZ X0, 0x1E013FC
	0x01E010E0 MOV X1, X31
	0x01E010E4 BL 0x3C323D4
	0x01E010E8 TBZ X0, 0x0, 0x1E013E4
	0x01E010EC BL 0x1E00E34
	0x01E010F0 CBZ X0, 0x1E013FC
	0x01E010F4 ADRP X20, 0x22F6000
	0x01E010F8 LDR X20, [X20 + 0x848]
	0x01E010FC LDR X1, [X20]
	0x01E01100 BL 0x2B0EE2C
	0x01E01104 CMP W0, 0x1
	0x01E01108 B.LT 0x1E013E4
	0x01E0110C ADD X1, X31, 0x8
	0x01E01110 MOV W0, W31
	0x01E01114 MOV X2, X31
	0x01E01118 BL 0x1DC4224
	0x01E0111C TBZ X0, 0x0, 0x1E0118C
	0x01E01120 LDP S0, S1, [X31 + 0x8]
	0x01E01124 FMOV S2, 0.5
	0x01E01128 LDRB W9, [X19 + 0x80]
	0x01E0112C FABS S3, S0
	0x01E01130 FABS S1, S1
	0x01E01134 FCMP S3, S2
	0x01E01138 CSET W8, GT
	0x01E0113C FCMP S1, S2
	0x01E01140 CSET W10, GT
	0x01E01144 ORR W8, W8, W10, 0x0
	0x01E01148 CMP W9, W8
	0x01E0114C B.EQ 0x1E012CC
	0x01E01150 STRB W8, [X19 + 0x80]
	0x01E01154 CBZ W8, 0x1E012CC
	0x01E01158 LDR W21, [X19 + 0x30]
	0x01E0115C FCMP S0, 0x0
	0x01E01160 B.LE 0x1E01194
	0x01E01164 BL 0x1E00E34
	0x01E01168 CBZ X0, 0x1E013FC
	0x01E0116C LDR X1, [X20]
	0x01E01170 BL 0x2B0EE2C
	0x01E01174 SUB W8, W0, 0x1
	0x01E01178 CMP W21, W8
	0x01E0117C B.GE 0x1E011A4
	0x01E01180 LDR W8, [X19 + 0x30]
	0x01E01184 ADD W8, W8, 0x1
	0x01E01188 B 0x1E011C0
	0x01E0118C STRB W31, [X19 + 0x80]
	0x01E01190 B 0x1E012CC
	0x01E01194 CMP W21, 0x0
	0x01E01198 B.LE 0x1E011AC
	0x01E0119C SUB W8, W21, 0x1
	0x01E011A0 B 0x1E011C0
	0x01E011A4 MOV W8, W31
	0x01E011A8 B 0x1E011C0
	0x01E011AC BL 0x1E00E34
	0x01E011B0 CBZ X0, 0x1E013FC
	0x01E011B4 LDR X1, [X20]
	0x01E011B8 BL 0x2B0EE2C
	0x01E011BC SUB W8, W0, 0x1
	0x01E011C0 STR W8, [X19 + 0x30]
	0x01E011C4 LDR V0, [X31 + 0xC]
	0x01E011C8 FCMP S0, 0x0
	0x01E011CC B.LE 0x1E01210
	0x01E011D0 LDR W8, [X19 + 0x20]
	0x01E011D4 CMP W8, 0x0
	0x01E011D8 B.GT 0x1E01208
	0x01E011DC ADRP X20, 0x22F7000
	0x01E011E0 LDR X20, [X20 + 0x168]
	0x01E011E4 LDR X0, [X20]
	0x01E011E8 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X20, 0x25D9000
	011 Move X21, 0x22F9000
	012 Move W8, [X20+3413]
	013 Move X21, [X21+216]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {57}
	019 Move X0, 0x22FA000
	020 Move X0, [X0+1680]
	021 Call 0x1C17CF4
	022 Move X0, 0x22FA000
	023 Move X0, [X0+1688]
	024 Call 0x1C17CF4
	025 Move X0, 0x22FA000
	026 Move X0, [X0+1696]
	027 Call 0x1C17CF4
	028 Move X0, 0x22FA000
	029 Move X0, [X0+1704]
	030 Call 0x1C17CF4
	031 Move X0, 0x22FA000
	032 Move X0, [X0+1712]
	033 Call 0x1C17CF4
	034 Move X0, 0x22FA000
	035 Move X0, [X0+1720]
	036 Call 0x1C17CF4
	037 Move X0, 0x22F4000
	038 Move X0, [X0+1432]
	039 Call 0x1C17CF4
	040 Move X0, 0x22F9000
	041 Move X0, [X0+216]
	042 Call 0x1C17CF4
	043 Move X0, 0x22FA000
	044 Move X0, [X0+1728]
	045 Call 0x1C17CF4
	046 Move X0, 0x22F4000
	047 Move X0, [X0+1728]
	048 Call 0x1C17CF4
	049 Move X0, 0x22FA000
	050 Move X0, [X0+1736]
	051 Call 0x1C17CF4
	052 Move X0, 0x22FA000
	053 Move X0, [X0+1744]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X20+3413], W8
	057 Move X0, [X21]
	058 Move [X31+32], X31
	059 Move [X31+40], X31
	060 Move [X31+48], X31
	061 Move X22, 0x22F4000
	062 Move W8, [X0+224]
	063 Move X22, [X22+1432]
	064 Compare W8, 0
	065 JumpIfNotEqual {68}
	066 Call 0x1C17DFC
	067 Move X0, [X21]
	068 Move X8, [X22]
	069 Move X9, [X0+184]
	070 Move W10, [X8+224]
	071 Move X20, [X9+24]
	072 Compare W10, 0
	073 JumpIfNotEqual {76}
	074 Move X0, X8
	075 Call 0x1C17DFC
	076 Move X0, X20
	077 Move X1, X31
	078 Move X2, X31
	079 Call Object.op_Inequality, X0, X1
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {97}
	084 Move X0, X19
	085 Move X1, X31
	086 Call Component.get_gameObject, X0
	087 Move X8, [X22]
	088 Move X19, X0
	089 Move W9, [X8+224]
	090 Compare W9, 0
	091 JumpIfNotEqual {94}
	092 Move X0, X8
	093 Call 0x1C17DFC
	094 Move X0, X19
	095 Move X1, X31
	096 Call Object.Destroy, X0
	097 Move X0, [X21]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {103}
	101 Call 0x1C17DFC
	102 Move X0, [X21]
	103 Move X8, [X0+184]
	104 Move X0, X31
	105 Move [X8+24], X19
	106 Call GraphicsSettings.get_currentRenderPipeline
	107 Compare X0, 0
	108 JumpIfEqual {241}
	109 Move X8, 0x22FA000
	110 Move X8, [X8+1736]
	111 Move X9, [X0]
	112 Move X8, [X8]
	113 Move W11, [X9+304]
	114 Move W10, [X8+304]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X11, [X9+200]
	117 Add X11, X11, X10
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X9, [X9+200]
	121 Move W1, W31
	122 Move X2, X31
	123 Add X9, X9, X10
	124 NotImplemented "Instruction LDUR not yet implemented."
	125 NotImplemented "Instruction CMP not yet implemented."
	126 NotImplemented "Instruction CSEL not yet implemented."
	127 Call UniversalRenderPipelineAsset.GetRenderer, X0, X1
	128 Move X23, 0x22F4000
	129 Move X23, [X23+1728]
	130 Move X9, 0x22FA000
	131 Move X20, X0
	132 Move X8, [X23]
	133 Move X9, [X9+1728]
	134 Move W10, [X8+224]
	135 Move X21, [X9]
	136 Compare W10, 0
	137 JumpIfNotEqual {140}
	138 Move X0, X8
	139 Call 0x1C17DFC
	140 Move X0, X21
	141 Move X1, X31
	142 Call Type.GetTypeFromHandle, X0
	143 Compare X0, 0
	144 JumpIfEqual {241}
	145 Move X8, 0x22F9000
	146 Move X8, [X8+1744]
	147 Move W2, 36
	148 Move X3, X31
	149 Move X1, [X8]
	150 Call Type.GetProperty, X0, X1, X2
	151 Compare X0, 0
	152 JumpIfEqual {241}
	153 Move X1, X20
	154 Move X2, X31
	155 Call PropertyInfo.GetValue, X0, X1
	156 Compare X0, 0
	157 JumpIfEqual {241}
	158 Move X8, 0x22F9000
	159 Move X8, [X8+1720]
	160 Move X9, [X0]
	161 Move X8, [X8]
	162 Move W11, [X9+304]
	163 Move W10, [X8+304]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X11, [X9+200]
	166 Add X11, X11, X10
	167 NotImplemented "Instruction LDUR not yet implemented."
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X9, [X9+200]
	170 Add X9, X9, X10
	171 Move X10, 0x22F9000
	172 NotImplemented "Instruction LDUR not yet implemented."
	173 Move X10, [X10+1712]
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move X1, [X10]
	176 NotImplemented "Instruction CSEL not yet implemented."
	177 Add X8, X31, 8
	178 Call List`1<Object>.GetEnumerator, X0
	179 NotImplemented "Instruction LDUR not yet implemented."
	180 Move X8, [X31+24]
	181 Move X24, 0x22F9000
	182 Move X24, [X24+1688]
	183 Move [X31+2], V0
	184 Move [X31+48], X8
	185 Move X25, 0x22F9000
	186 Move X25, [X25+1704]
	187 Move X1, [X24]
	188 Add X0, X31, 32
	189 Call Enumerator<Object>.MoveNext, X0
	190 Move TEMP, X0
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfNotEqual {221}
	194 Move X20, [X31+48]
	195 Compare X20, 0
	196 JumpIfEqual {240}
	197 Move X0, X20
	198 Move X1, X31
	199 Call "il2cpp_vm_object_is_inst", X0
	200 Move X21, X0
	201 Move X0, [X23]
	202 Move X22, [X25]
	203 Move W8, [X0+224]
	204 Compare W8, 0
	205 JumpIfNotEqual {207}
	206 Call 0x1C17DFC
	207 Move X0, X22
	208 Move X1, X31
	209 Call Type.GetTypeFromHandle, X0
	210 Move X1, X0
	211 Move X0, X21
	212 Move X2, X31
	213 Call Type.op_Equality, X0, X1
	214 Move TEMP, X0
	215 And TEMP, TEMP, 1
	216 Compare TEMP, 1
	217 JumpIfNotEqual {187}
	218 Move W8, 1
	219 Move [X19+40], X20
	220 Move [X19+48], W8
	221 Move X8, 0x22F9000
	222 Move X8, [X8+1680]
	223 Add X0, X31, 32
	224 Move X1, [X8]
	225 Call Enumerator<Object>.Dispose, X0
	226 Move X8, [X19+40]
	227 Compare X8, 0
	228 JumpIfEqual {241}
	229 Move [X8+24], W31
	230 Move X20, [X31+112]
	231 Move X19, [X31+120]
	232 Move X22, [X31+96]
	233 Move X21, [X31+104]
	234 Move X24, [X31+80]
	235 Move X23, [X31+88]
	236 Move X30, [X31+64]
	237 Move X25, [X31+72]
	238 Add X31, X31, 128
	239 Return 
	240 Call 0x1C17F20
	241 Call 0x1C17F20
	242 Move X20, X0
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Move X0, X20
	245 Call 0x3EB2AD0
	246 Move X21, [X0]
	247 Call 0x3EB2AE0
	248 Move X8, 0x22F9000
	249 Move X8, [X8+1680]
	250 Add X0, X31, 32
	251 Move X1, [X8]
	252 Call Enumerator<Object>.Dispose, X0
	253 Compare X21, 0
	254 JumpIfEqual {226}
	255 Move X0, X21
	256 Call 0x1C17F18
	257 Move X21, X31
	258 Move X20, X0
	259 Move X8, 0x22F9000
	260 Move X8, [X8+1680]
	261 Move X1, [X8]
	262 Add X0, X31, 32
	263 Call Enumerator<Object>.Dispose, X0
	264 Compare X21, 0
	265 JumpIfNotEqual {268}
	266 Move X0, X20
	267 Call 0x1D2D690
	268 Move X0, X21
	269 Call 0x1C17F18
	270 Call 0x1991590

Method: System.Void OnDestroy()

Disassembly:
	0x01E011EC CBNZ W8, 0x1E011F8
	0x01E011F0 BL 0x1C16DFC
	0x01E011F4 LDR X0, [X20]
	0x01E011F8 LDR X8, [X0 + 0xB8]
	0x01E011FC LDR X8, [X8 + 0x8]
	0x01E01200 CBZ X8, 0x1E013FC
	0x01E01204 LDR W8, [X8 + 0x18]
	0x01E01208 SUB W8, W8, 0x1
	0x01E0120C B 0x1E01258
	0x01E01210 B.PL 0x1E0125C
	0x01E01214 ADRP X21, 0x22F7000
	0x01E01218 LDR X21, [X21 + 0x168]
	0x01E0121C LDR W20, [X19 + 0x20]
	0x01E01220 LDR X0, [X21]
	0x01E01224 LDR W8, [X0 + 0xE0]
	0x01E01228 CBNZ W8, 0x1E01234
	0x01E0122C BL 0x1C16DFC
	0x01E01230 LDR X0, [X21]
	0x01E01234 LDR X8, [X0 + 0xB8]
	0x01E01238 LDR X8, [X8 + 0x8]
	0x01E0123C CBZ X8, 0x1E013FC
	0x01E01240 LDR W8, [X8 + 0x18]
	0x01E01244 SUB W8, W8, 0x1
	0x01E01248 CMP W20, W8
	0x01E0124C B.GE 0x1E013F4
	0x01E01250 LDR W8, [X19 + 0x20]
	0x01E01254 ADD W8, W8, 0x1
	0x01E01258 STR W8, [X19 + 0x20]
	0x01E0125C BL 0x1E00E34
	0x01E01260 CBZ X0, 0x1E013FC
	0x01E01264 ADRP X8, 0x22F6000
	0x01E01268 LDR X8, [X8 + 0x850]
	0x01E0126C LDR X1, [X8]
	0x01E01270 BL 0x2B0EEFC
	0x01E01274 ADRP X8, 0x22F7000
	0x01E01278 LDR X8, [X8 + 0xEE8]
	0x01E0127C MOV X21, X0
	0x01E01280 LDR X8, [X8]
	0x01E01284 MOV X0, X8
	0x01E01288 BL 0x1C16F10
	0x01E0128C ADRP X8, 0x22F8000
	0x01E01290 LDR X8, [X8 + 0x748]
	0x01E01294 MOV X1, X21
	0x01E01298 MOV X20, X0
	0x01E0129C LDR X2, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x25D8000
	006 Move X21, 0x22F8000
	007 Move W8, [X20+3414]
	008 Move X21, [X21+216]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x22F3000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x22F8000
	018 Move X0, [X0+216]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3414], W8
	022 Move X0, [X21]
	023 Move X20, 0x22F3000
	024 Move W8, [X0+224]
	025 Move X20, [X20+1432]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X21]
	030 Move X8, [X20]
	031 Move X9, [X0+184]
	032 Move W10, [X8+224]
	033 Move X20, [X9+24]
	034 Compare W10, 0
	035 JumpIfNotEqual {38}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 Move X0, X20
	039 Move X1, X19
	040 Move X2, X31
	041 Call Object.op_Equality, X0, X1
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {54}
	046 Move X0, [X21]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X21]
	052 Move X8, [X0+184]
	053 Move [X8+24], X31
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Return 

Method: System.Void Update()

Disassembly:
	0x01E012A0 BL 0x301B8E0
	0x01E012A4 CBZ X20, 0x1E013FC
	0x01E012A8 ADRP X8, 0x22F7000
	0x01E012AC LDR W1, [X19 + 0x30]
	0x01E012B0 LDR X8, [X8 + 0xC70]
	0x01E012B4 MOV X0, X20
	0x01E012B8 LDR X2, [X8]
	0x01E012BC BL 0x301BCCC
	0x01E012C0 STR X0, [X19 + 0x28]
	0x01E012C4 MOV X0, X19
	0x01E012C8 BL 0x1E01400
	0x01E012CC ADD X1, X31, 0x0
	0x01E012D0 MOVZ W0, 0x1
	0x01E012D4 MOV X2, X31
	0x01E012D8 BL 0x1DC4224
	0x01E012DC TBZ X0, 0x0, 0x1E013B0
	0x01E012E0 LDP S1, S0, [X31]
	0x01E012E4 FMOV S3, 0.5
	0x01E012E8 LDRB W9, [X19 + 0x81]
	0x01E012EC FABS S4, S1
	0x01E012F0 FABS S2, S0
	0x01E012F4 FCMP S4, S3
	0x01E012F8 CSET W8, GT
	0x01E012FC FCMP S2, S3
	0x01E01300 CSET W10, GT
	0x01E01304 ORR W8, W8, W10, 0x0
	0x01E01308 CMP W9, W8
	0x01E0130C B.EQ 0x1E013E4
	0x01E01310 STRB W8, [X19 + 0x81]
	0x01E01314 CBZ W8, 0x1E013E4
	0x01E01318 FMOV S3, 0.5
	0x01E0131C FCMP S4, S3
	0x01E01320 B.LE 0x1E01348
	0x01E01324 LDR V4, [X19 + 0x24]
	0x01E01328 MOVZ W8, 0xC2340000
	0x01E0132C MOVZ W9, 0x42340000
	0x01E01330 FCMP S1, 0x0
	0x01E01334 FMOV S1, W8
	0x01E01338 FMOV S5, W9
	0x01E0133C FCSEL S1, S5, S1, GE
	0x01E01340 FSUB S1, S4, S1
	0x01E01344 STR S1, [X19 + 0x24]
	0x01E01348 FCMP S2, S3
	0x01E0134C B.LE 0x1E013DC
	0x01E01350 LDR W8, [X19 + 0x20]
	0x01E01354 FCMP S0, 0x0
	0x01E01358 FMOV S0, -1
	0x01E0135C FMOV S1, 1
	0x01E01360 FCSEL S0, S1, S0, GE

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x25D8000
	005 Move W8, [X20+3415]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x22F9000
	012 Move X0, [X0+1752]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3415], W8
	016 Move X8, [X19+56]
	017 Compare X8, 0
	018 JumpIfEqual {54}
	019 Move W8, [X8+32]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move V0, [X19+64]
	022 NotImplemented "Instruction FCMP not yet implemented."
	023 Move V0, [X19+72]
	024 NotImplemented "Instruction FCMP not yet implemented."
	025 Move W8, 1
	026 Move X9, [X19+40]
	027 Compare X9, 0
	028 JumpIfEqual {54}
	029 Move W10, [X9+24]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move [X9+24], W8
	034 Move W8, [X19+48]
	035 Compare W8, 0
	036 JumpIfEqual {47}
	037 Move X0, X19
	038 Call ScreenEffectManager.UpdateFade, X0
	039 Move X0, X19
	040 Call ScreenEffectManager.UpdateHit, X0
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Call ScreenEffectManager.UpdateStun, X0
	046 Return 
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Return 
	051 Move V0, [X19+76]
	052 NotImplemented "Instruction FCMP not yet implemented."
	053 NotImplemented "Instruction CSET not yet implemented."
	054 Call 0x1C17F20

Method: System.Void UpdateFade()

Disassembly:
	0x01E01364 FCVTZS W9, S0
	0x01E01368 SUBS W20, W8, W9
	0x01E0136C STR W20, [X19 + 0x20]
	0x01E01370 ADRP X21, 0x22F7000
	0x01E01374 LDR X21, [X21 + 0x168]
	0x01E01378 LDR X0, [X21]
	0x01E0137C LDR W8, [X0 + 0xE0]
	0x01E01380 B.MI 0x1E013B8
	0x01E01384 CBNZ W8, 0x1E01390
	0x01E01388 BL 0x1C16DFC
	0x01E0138C LDR X0, [X21]
	0x01E01390 LDR X8, [X0 + 0xB8]
	0x01E01394 LDR X8, [X8 + 0x8]
	0x01E01398 CBZ X8, 0x1E013FC
	0x01E0139C LDR W8, [X8 + 0x18]
	0x01E013A0 CMP W20, W8
	0x01E013A4 B.LT 0x1E013DC
	0x01E013A8 STR W31, [X19 + 0x20]
	0x01E013AC B 0x1E013DC
	0x01E013B0 STRB W31, [X19 + 0x81]
	0x01E013B4 B 0x1E013E4
	0x01E013B8 CBNZ W8, 0x1E013C4
	0x01E013BC BL 0x1C16DFC
	0x01E013C0 LDR X0, [X21]
	0x01E013C4 LDR X8, [X0 + 0xB8]
	0x01E013C8 LDR X8, [X8 + 0x8]
	0x01E013CC CBZ X8, 0x1E013FC
	0x01E013D0 LDR W8, [X8 + 0x18]
	0x01E013D4 SUB W8, W8, 0x1
	0x01E013D8 STR W8, [X19 + 0x20]
	0x01E013DC MOV X0, X19
	0x01E013E0 BL 0x1E01400
	0x01E013E4 LDP X20, X19, [X31 + 0x20]
	0x01E013E8 LDP X30, X21, [X31 + 0x10]
	0x01E013EC ADD X31, X31, 0x30
	0x01E013F0 RET
	0x01E013F4 STR W31, [X19 + 0x20]
	0x01E013F8 B 0x1E0125C
	0x01E013FC BL 0x1C16F20
	0x01E01400 SUB X31, X31, 0xD0
	0x01E01404 STP D15, D14, [X31 + 0x50]
	0x01E01408 STP D13, D12, [X31 + 0x60]
	0x01E0140C STP D11, D10, [X31 + 0x70]
	0x01E01410 STP D9, D8, [X31 + 0x80]
	0x01E01414 STP X30, X25, [X31 + 0x90]
	0x01E01418 STP X24, X23, [X31 + 0xA0]
	0x01E0141C STP X22, X21, [X31 + 0xB0]
	0x01E01420 STP X20, X19, [X31 + 0xC0]
	0x01E01424 ADRP X20, 0x25D7000
	0x01E01428 LDRB W8, [X20 + 0xD6D]
	0x01E0142C MOV X19, X0
	0x01E01430 TBNZ X8, 0x0, 0x1E01448
	0x01E01434 ADRP X0, 0x22F7000
	0x01E01438 LDR X0, [X0 + 0x168]
	0x01E0143C BL 0x1C16CF4
	0x01E01440 MOVZ W8, 0x1
	0x01E01444 STRB W8, [X20 + 0xD6D]
	0x01E01448 LDR X8, [X19 + 0x28]
	0x01E0144C CBZ X8, 0x1E01A64
	0x01E01450 LDR X0, [X8 + 0x90]
	0x01E01454 CBZ X0, 0x1E01A64
	0x01E01458 MOV X1, X31
	0x01E0145C BL 0x3C3F58C
	0x01E01460 LDR X8, [X19 + 0x28]
	0x01E01464 STR D0, [X31 + 0x40]
	0x01E01468 STR D1, [X31 + 0x30]
	0x01E0146C CBZ X8, 0x1E01A64
	0x01E01470 LDR X0, [X8 + 0x90]
	0x01E01474 CBZ X0, 0x1E01A64
	0x01E01478 MOV X1, X31
	0x01E0147C MOV V8.16B, V2.16B
	0x01E01480 BL 0x3C3FA04
	0x01E01484 MOV X0, X31
	0x01E01488 BL 0x1DC0890
	0x01E0148C ADRP X23, 0x25D7000
	0x01E01490 LDRB W8, [X23 + 0x785]
	0x01E01494 MOV V9.16B, V2.16B
	0x01E01498 CBNZ W8, 0x1E014B8
	0x01E0149C ADRP X0, 0x22F2000
	0x01E014A0 LDR X0, [X0 + 0x5A8]
	0x01E014A4 STP V1, V0, [X31 + 0x10]
	0x01E014A8 BL 0x1C16CF4
	0x01E014AC LDP V1, V0, [X31 + 0x10]
	0x01E014B0 MOVZ W8, 0x1
	0x01E014B4 STRB W8, [X23 + 0x785]
	0x01E014B8 ADRP X24, 0x22F2000
	0x01E014BC LDR X24, [X24 + 0x5A8]
	0x01E014C0 LDR X0, [X24]
	0x01E014C4 LDR W8, [X0 + 0xE0]
	0x01E014C8 CBNZ W8, 0x1E014D8
	0x01E014CC STP V1, V0, [X31 + 0x10]
	0x01E014D0 BL 0x1C16DFC
	0x01E014D4 LDP V1, V0, [X31 + 0x10]
	0x01E014D8 ADRP X8, 0xFFFFFFFFFECE9000

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x25D8000
	008 Move W8, [X20+3416]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x22F9000
	015 Move X0, [X0+1760]
	016 Call 0x1C17CF4
	017 Move X0, 0x22F9000
	018 Move X0, [X0+1768]
	019 Call 0x1C17CF4
	020 Move X0, 0x22F9000
	021 Move X0, [X0+1752]
	022 Call 0x1C17CF4
	023 Move X0, 0x22F8000
	024 Move X0, [X0+216]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+3416], W8
	028 Move X0, [X19+56]
	029 Compare X0, 0
	030 JumpIfEqual {110}
	031 Move W8, [X0+32]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, 0x22F9000
	034 Move X8, [X8+1768]
	035 Move X1, [X8]
	036 Call Queue`1<Object>.Peek, X0
	037 Compare X0, 0
	038 JumpIfEqual {110}
	039 Move V8, [X19+68]
	040 Move V0, [X0+20]
	041 Move X20, X0
	042 NotImplemented "Instruction FCMP not yet implemented."
	043 Move X0, X31
	044 Call Time.get_deltaTime
	045 Add S0, S8, S0
	046 Move [X19+68], S0
	047 Move V8, [X19+64]
	048 Move V9, [X20+16]
	049 Move X0, X31
	050 Call Time.get_deltaTime
	051 Move V1, [X20+20]
	052 Subtract S2, S9, S8
	053 NotImplemented "Instruction FCMP not yet implemented."
	054 NotImplemented "Instruction FABD not yet implemented."
	055 NotImplemented "Instruction FDIV not yet implemented."
	056 NotImplemented "Instruction FNEG not yet implemented."
	057 NotImplemented "Instruction FCSEL not yet implemented."
	058 Add S1, S8, S1
	059 NotImplemented "Instruction FCMP not yet implemented."
	060 NotImplemented "Instruction FCSEL not yet implemented."
	061 Move [X19+64], S0
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X30, [X31+16]
	065 Move X21, [X31+24]
	066 Move D9, [X31+48]
	067 Move D8, [X31+56]
	068 Return 
	069 Move [X19+68], W31
	070 Move V0, [X20+16]
	071 Move [X19+64], S0
	072 Move X8, [X20+24]
	073 Compare X8, 0
	074 JumpIfEqual {79}
	075 Move X9, [X8+24]
	076 Move X0, [X8+64]
	077 Move X1, [X8+40]
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Move X0, [X19+56]
	080 Compare X0, 0
	081 JumpIfEqual {110}
	082 Move X8, 0x22F9000
	083 Move X8, [X8+1760]
	084 Move X1, [X8]
	085 Call Queue`1<Object>.Dequeue, X0
	086 Move X21, 0x22F8000
	087 Move X21, [X21+216]
	088 Move X20, [X19+32]
	089 Move X0, [X21]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Compare X20, 0
	095 JumpIfEqual {110}
	096 Move X8, [X21]
	097 Move V0, [X19+64]
	098 Move X0, X20
	099 Move X20, [X31+32]
	100 Move X19, [X31+40]
	101 Move X8, [X8+184]
	102 Move X30, [X31+16]
	103 Move X21, [X31+24]
	104 Move X2, X31
	105 Move W1, [X8]
	106 Move D9, [X31+48]
	107 Move D8, [X31+56]
	108 Call Material.SetFloat, X0, X1, V0
	109 Return 
	110 Call 0x1C17F20

Method: System.Void UpdateHit()

Disassembly:
	0x01E014DC ADRP X21, 0x22F7000
	0x01E014E0 FMUL S2, S0, S0
	0x01E014E4 FMUL S3, S1, S1
	0x01E014E8 LDR V15, [X8 + 0x17C]
	0x01E014EC ADRP X22, 0x22F2000
	0x01E014F0 LDR X21, [X21 + 0x168]
	0x01E014F4 FADD S2, S2, S3
	0x01E014F8 FMUL S3, S9, S9
	0x01E014FC LDR X22, [X22 + 0x5A0]
	0x01E01500 FADD S2, S3, S2
	0x01E01504 FSQRT S2, S2
	0x01E01508 FCMP S2, S15
	0x01E0150C B.LE 0x1E01524
	0x01E01510 MOV V0.S[1], V1.S[0]
	0x01E01514 UNIMPLEMENTED
	0x00000000 INVALID
	0x01E0151C FDIV S9, S9, S2
	0x01E01520 B 0x1E01554
	0x01E01524 ADRP X20, 0x25D7000
	0x01E01528 LDRB W8, [X20 + 0x783]
	0x01E0152C CBNZ W8, 0x1E01544
	0x01E01530 ADRP X0, 0x22F2000
	0x01E01534 LDR X0, [X0 + 0x5A0]
	0x01E01538 BL 0x1C16CF4
	0x01E0153C MOVZ W8, 0x1
	0x01E01540 STRB W8, [X20 + 0x783]
	0x01E01544 LDR X8, [X22]
	0x01E01548 LDR X8, [X8 + 0xB8]
	0x01E0154C LDR V10, [X8]
	0x01E01550 LDR V9, [X8 + 0x8]
	0x01E01554 LDR X0, [X21]
	0x01E01558 LDR W8, [X0 + 0xE0]
	0x01E0155C CBNZ W8, 0x1E01568
	0x01E01560 BL 0x1C16DFC
	0x01E01564 LDR X0, [X21]
	0x01E01568 LDR X8, [X0 + 0xB8]
	0x01E0156C LDP V1, V2, [X31 + 0x30]
	0x01E01570 ADRP X25, 0x25D7000
	0x01E01574 LDRB W9, [X25 + 0x786]
	0x01E01578 LDR V0, [X8 + 0x18]
	0x01E0157C MOV V2.S[1], V1.S[0]
	0x01E01580 STR V2, [X31 + 0x2]
	0x00000000 INVALID
	0x01E01588 FMUL S0, S9, S0
	0x01E0158C FADD V9.2S, V2.2S, V1.2S
	0x01E01590 FADD S10, S8, S0
	0x01E01594 CBNZ W9, 0x1E015B4

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x25D8000
	007 Move W8, [X20+3417]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x22F8000
	014 Move X0, [X0+216]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+3417], W8
	018 Move V8, [X19+72]
	019 NotImplemented "Instruction FCMP not yet implemented."
	020 Move X0, X31
	021 Call Time.get_deltaTime
	022 Move X8, -20013056
	023 Move V1, [X8+264]
	024 Move S2, W31
	025 Move X21, 0x22F8000
	026 NotImplemented "Instruction FDIV not yet implemented."
	027 Add S0, S8, S0
	028 NotImplemented "Instruction FMAX not yet implemented."
	029 Move [X19+72], S0
	030 Move X21, [X21+216]
	031 Move X20, [X19+32]
	032 Move X0, [X21]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Compare X20, 0
	038 JumpIfEqual {58}
	039 Move X8, [X21]
	040 Move V0, [X19+72]
	041 Move X0, X20
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X8, [X8+184]
	045 Move X30, [X31+16]
	046 Move X21, [X31+24]
	047 Move X2, X31
	048 Move W1, [X8+8]
	049 Move V8, [X31+48]
	050 Call Material.SetFloat, X0, X1, V0
	051 Return 
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X30, [X31+16]
	055 Move X21, [X31+24]
	056 Move V8, [X31+48]
	057 Return 
	058 Call 0x1C17F20

Method: System.Void UpdateStun()

Disassembly:
	0x01E01598 ADRP X0, 0x22F2000
	0x01E0159C LDR X0, [X0 + 0x5A0]
	0x01E015A0 BL 0x1C16CF4
	0x01E015A4 LDR X8, [X21]
	0x01E015A8 MOVZ W9, 0x1
	0x01E015AC STRB W9, [X25 + 0x786]
	0x01E015B0 LDR X8, [X8 + 0xB8]
	0x01E015B4 LDR X9, [X22]
	0x01E015B8 LDR V0, [X8 + 0x14]
	0x01E015BC ADRP X8, 0xFFFFFFFFFECE9000
	0x01E015C0 LDR V1, [X19 + 0x24]
	0x01E015C4 LDR X9, [X9 + 0xB8]
	0x01E015C8 LDR V4, [X8 + 0x104]
	0x01E015CC MOV X0, X31
	0x01E015D0 LDR V2, [X9 + 0x18]
	0x01E015D4 LDR V3, [X9 + 0x20]
	0x01E015D8 FMUL S1, S1, S4
	0x00000000 INVALID
	0x01E015E0 FMUL S0, S3, S0
	0x01E015E4 FADD V9.2S, V9.2S, V2.2S
	0x01E015E8 FADD S10, S10, S0
	0x01E015EC FMOV S0, W31
	0x01E015F0 FMOV S2, W31
	0x01E015F4 BL 0x3C2A574
	0x01E015F8 LDR V4, [X31 + 0x2]
	0x01E015FC FSUB S6, S10, S8
	0x01E01600 MOV X0, X31
	0x01E01604 FSUB V4.2S, V9.2S, V4.2S
	0x01E01608 MOV S5, V4.S[1]
	0x01E0160C BL 0x3C2A9FC
	0x01E01610 LDR X0, [X19 + 0x40]
	0x01E01614 CBZ X0, 0x1E01A64
	0x01E01618 MOV X1, X31
	0x01E0161C MOV V10.16B, V0.16B
	0x01E01620 MOV V11.16B, V1.16B
	0x01E01624 MOV V9.16B, V2.16B
	0x01E01628 BL 0x3C32E90
	0x01E0162C CBZ X0, 0x1E01A64
	0x01E01630 MOV X1, X31
	0x01E01634 BL 0x3C3FA04
	0x01E01638 MOV X0, X31
	0x01E0163C BL 0x1DC0890
	0x01E01640 LDRB W8, [X23 + 0x785]
	0x01E01644 MOV V12.16B, V0.16B
	0x01E01648 MOV V13.16B, V1.16B
	0x01E0164C MOV V14.16B, V2.16B
	0x01E01650 CBNZ W8, 0x1E01668
	0x01E01654 ADRP X0, 0x22F2000
	0x01E01658 LDR X0, [X0 + 0x5A8]
	0x01E0165C BL 0x1C16CF4
	0x01E01660 MOVZ W8, 0x1
	0x01E01664 STRB W8, [X23 + 0x785]
	0x01E01668 LDR X0, [X24]
	0x01E0166C LDR W8, [X0 + 0xE0]
	0x01E01670 CBNZ W8, 0x1E01678
	0x01E01674 BL 0x1C16DFC
	0x01E01678 LDR V0, [X31 + 0x4]
	0x01E0167C FMUL S1, S13, S13
	0x01E01680 FADD S2, S0, S10
	0x01E01684 LDR V0, [X31 + 0x3]
	0x01E01688 FADD S10, S8, S9
	0x01E0168C FADD S11, S0, S11
	0x01E01690 FMUL S0, S12, S12

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x25D8000
	007 Move W8, [X20+3418]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x22F8000
	014 Move X0, [X0+216]
	015 Call 0x1C17CF4
	016 Move X0, 0x22F9000
	017 Move X0, [X0+1776]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3418], W8
	021 Move V8, [X19+80]
	022 NotImplemented "Instruction FCMP not yet implemented."
	023 Move X21, 0x22F8000
	024 Move X21, [X21+216]
	025 Move X0, X31
	026 Call Time.get_deltaTime
	027 Subtract S0, S8, S0
	028 Move S1, 3
	029 Move S2, 1
	030 NotImplemented "Instruction FDIV not yet implemented."
	031 Move S3, W31
	032 NotImplemented "Instruction FMIN not yet implemented."
	033 NotImplemented "Instruction FCMP not yet implemented."
	034 NotImplemented "Instruction FCSEL not yet implemented."
	035 Move [X19+76], S1
	036 Move [X19+84], S0
	037 Move X0, [X21]
	038 Move X20, [X19+32]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Compare X20, 0
	044 JumpIfEqual {76}
	045 Move X8, [X21]
	046 Move V0, [X19+76]
	047 Move X0, X20
	048 Move X2, X31
	049 Move X8, [X8+184]
	050 Move W1, [X8+16]
	051 Call Material.SetFloat, X0, X1, V0
	052 Move V0, [X19+80]
	053 NotImplemented "Instruction FCMP not yet implemented."
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X30, [X31+16]
	057 Move X21, [X31+24]
	058 Move V8, [X31+48]
	059 Return 
	060 Move X0, [X19+32]
	061 Move [X19+76], W31
	062 Move [X19+80], W31
	063 Compare X0, 0
	064 JumpIfEqual {76}
	065 Move X8, 0x22F9000
	066 Move X8, [X8+1776]
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X30, [X31+16]
	070 Move X21, [X31+24]
	071 Move X2, X31
	072 Move X1, [X8]
	073 Move V8, [X31+48]
	074 Call Material.DisableKeyword, X0, X1
	075 Return 
	076 Call 0x1C17F20

Method: System.Void PlayerHit()

Disassembly:
	0x01E01694 FADD S0, S0, S1
	0x01E01698 FMUL S1, S14, S14
	0x01E0169C FADD S0, S1, S0
	0x01E016A0 FSQRT S0, S0
	0x01E016A4 FCMP S0, S15
	0x01E016A8 B.LE 0x1E016C4
	0x01E016AC FDIV S1, S12, S0
	0x01E016B0 STR S1, [X31 + 0x20]
	0x01E016B4 FDIV S1, S13, S0
	0x01E016B8 STR S1, [X31 + 0x10]
	0x01E016BC FDIV S9, S14, S0
	0x01E016C0 B 0x1E01704
	0x01E016C4 ADRP X20, 0x25D7000
	0x01E016C8 LDRB W8, [X20 + 0x783]
	0x01E016CC CBNZ W8, 0x1E016EC
	0x01E016D0 ADRP X0, 0x22F2000
	0x01E016D4 LDR X0, [X0 + 0x5A0]
	0x01E016D8 MOV V9.16B, V2.16B
	0x01E016DC BL 0x1C16CF4
	0x01E016E0 MOV V2.16B, V9.16B
	0x01E016E4 MOVZ W8, 0x1
	0x01E016E8 STRB W8, [X20 + 0x783]
	0x01E016EC LDR X8, [X22]
	0x01E016F0 LDR X8, [X8 + 0xB8]
	0x01E016F4 LDR V0, [X8]
	0x01E016F8 STR S0, [X31 + 0x20]
	0x01E016FC LDP S0, S9, [X8 + 0x4]
	0x01E01700 STR S0, [X31 + 0x10]
	0x01E01704 LDP V1, V0, [X31 + 0x30]
	0x01E01708 STR S2, [X31 + 0xC]
	0x01E0170C MOV X0, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x25D8000
	005 Move X19, 0x22F8000
	006 Move W8, [X20+3419]
	007 Move X19, [X19+216]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22F8000
	013 Move X0, [X0+216]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3419], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X9, [X8+24]
	025 Compare X9, 0
	026 JumpIfEqual {40}
	027 Move X0, [X9+32]
	028 Move W10, 0x3F800000
	029 Move [X9+72], W10
	030 Compare X0, 0
	031 JumpIfEqual {40}
	032 Move W1, [X8+8]
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move S0, 1
	036 Move X2, X31
	037 Move X30, [X31+32]
	038 Call Material.SetFloat, X0, X1, V0
	039 Return 
	040 Call 0x1C17F20

Method: System.Void PlayerStun(System.Single duration)

Disassembly:
	0x01E01710 FSUB S0, S0, S2
	0x01E01714 FSUB S1, S1, S11
	0x01E01718 FSUB S2, S8, S10
	0x01E0171C BL 0x1DC0890
	0x01E01720 LDRB W8, [X23 + 0x785]
	0x01E01724 MOV V12.16B, V0.16B
	0x01E01728 MOV V13.16B, V1.16B
	0x01E0172C MOV V14.16B, V2.16B
	0x01E01730 CBNZ W8, 0x1E01748
	0x01E01734 ADRP X0, 0x22F2000
	0x01E01738 LDR X0, [X0 + 0x5A8]
	0x01E0173C BL 0x1C16CF4
	0x01E01740 MOVZ W8, 0x1
	0x01E01744 STRB W8, [X23 + 0x785]
	0x01E01748 LDR X0, [X24]
	0x01E0174C LDR W8, [X0 + 0xE0]
	0x01E01750 CBNZ W8, 0x1E01758
	0x01E01754 BL 0x1C16DFC
	0x01E01758 FMUL S0, S12, S12
	0x01E0175C FMUL S1, S13, S13
	0x01E01760 FADD S0, S0, S1
	0x01E01764 FMUL S1, S14, S14
	0x01E01768 FADD S0, S1, S0
	0x01E0176C FSQRT S2, S0
	0x01E01770 FCMP S2, S15
	0x01E01774 B.LE 0x1E01788
	0x01E01778 FDIV S0, S12, S2
	0x01E0177C FDIV S1, S13, S2
	0x01E01780 FDIV S2, S14, S2
	0x01E01784 B 0x1E017B8
	0x01E01788 ADRP X20, 0x25D7000
	0x01E0178C LDRB W8, [X20 + 0x783]
	0x01E01790 CBNZ W8, 0x1E017A8
	0x01E01794 ADRP X0, 0x22F2000
	0x01E01798 LDR X0, [X0 + 0x5A0]
	0x01E0179C BL 0x1C16CF4
	0x01E017A0 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x25D8000
	006 Move X19, 0x22F8000
	007 Move W8, [X20+3420]
	008 Move X19, [X19+216]
	009 Move V8, V0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x22F8000
	015 Move X0, [X0+216]
	016 Call 0x1C17CF4
	017 Move X0, 0x22F9000
	018 Move X0, [X0+1776]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3420], W8
	022 Move X0, [X19]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X19]
	028 Move X8, [X0+184]
	029 Move X8, [X8+24]
	030 Compare X8, 0
	031 JumpIfEqual {46}
	032 Move X0, [X8+32]
	033 Move [X8+80], S8
	034 Compare X0, 0
	035 JumpIfEqual {46}
	036 Move X8, 0x22F9000
	037 Move X8, [X8+1776]
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+8]
	041 Move X2, X31
	042 Move X1, [X8]
	043 Move V8, [X31+32]
	044 Call Material.EnableKeyword, X0, X1
	045 Return 
	046 Call 0x1C17F20

Method: System.Void FadeInOut(System.Single durationFadeIn = 0.5, System.Single durationHold = 0.1, System.Single durationFadeOut = 0.5, System.Action callbackEventFadeIn = null, System.Action callbackEventBeforeFadeOut = null, System.Action callbackEventFadeOut = null, System.Boolean forceUpdate = True)

Disassembly:
	0x01E017A4 STRB W8, [X20 + 0x783]
	0x01E017A8 LDR X8, [X22]
	0x01E017AC LDR X8, [X8 + 0xB8]
	0x01E017B0 LDP S0, S1, [X8]
	0x01E017B4 LDR V2, [X8 + 0x8]
	0x01E017B8 MOV X0, X31
	0x01E017BC BL 0x1DC0890
	0x01E017C0 LDRB W8, [X23 + 0x785]
	0x01E017C4 MOV V12.16B, V0.16B
	0x01E017C8 MOV V13.16B, V1.16B
	0x01E017CC MOV V14.16B, V2.16B
	0x01E017D0 CBNZ W8, 0x1E017E8
	0x01E017D4 ADRP X0, 0x22F2000
	0x01E017D8 LDR X0, [X0 + 0x5A8]
	0x01E017DC BL 0x1C16CF4
	0x01E017E0 MOVZ W8, 0x1
	0x01E017E4 STRB W8, [X23 + 0x785]
	0x01E017E8 LDR X0, [X24]
	0x01E017EC LDR W8, [X0 + 0xE0]
	0x01E017F0 CBNZ W8, 0x1E017F8
	0x01E017F4 BL 0x1C16DFC
	0x01E017F8 FMUL S0, S12, S12
	0x01E017FC FMUL S1, S13, S13
	0x01E01800 FADD S0, S0, S1
	0x01E01804 FMUL S1, S14, S14
	0x01E01808 FADD S0, S1, S0
	0x01E0180C FSQRT S0, S0
	0x01E01810 FCMP S0, S15
	0x01E01814 B.LE 0x1E01828
	0x01E01818 FDIV S12, S12, S0
	0x01E0181C FDIV S13, S13, S0
	0x01E01820 FDIV S14, S14, S0
	0x01E01824 B 0x1E01858
	0x01E01828 ADRP X20, 0x25D7000
	0x01E0182C LDRB W8, [X20 + 0x783]
	0x01E01830 CBNZ W8, 0x1E01848
	0x01E01834 ADRP X0, 0x22F2000
	0x01E01838 LDR X0, [X0 + 0x5A0]
	0x01E0183C BL 0x1C16CF4
	0x01E01840 MOVZ W8, 0x1
	0x01E01844 STRB W8, [X20 + 0x783]
	0x01E01848 LDR X8, [X22]
	0x01E0184C LDR X8, [X8 + 0xB8]
	0x01E01850 LDP S12, S13, [X8]
	0x01E01854 LDR V14, [X8 + 0x8]
	0x01E01858 LDRB W8, [X25 + 0x786]
	0x01E0185C CBNZ W8, 0x1E01874
	0x01E01860 ADRP X0, 0x22F2000
	0x01E01864 LDR X0, [X0 + 0x5A0]
	0x01E01868 BL 0x1C16CF4
	0x01E0186C MOVZ W8, 0x1
	0x01E01870 STRB W8, [X25 + 0x786]
	0x01E01874 LDR X8, [X22]
	0x01E01878 LDR V1, [X31 + 0x10]
	0x01E0187C MOV V2.16B, V9.16B
	0x01E01880 MOV V3.16B, V12.16B
	0x01E01884 LDR X8, [X8 + 0xB8]
	0x01E01888 MOV V4.16B, V13.16B
	0x01E0188C MOV V5.16B, V14.16B
	0x01E01890 MOV X0, X31
	0x01E01894 LDR V0, [X8 + 0x20]
	0x01E01898 LDR X9, [X8 + 0x18]
	0x01E0189C STR S0, [X31 + 0x8]
	0x01E018A0 LDR V0, [X31 + 0x20]
	0x01E018A4 STR X9, [X31]
	0x01E018A8 BL 0x1DD4D78
	0x01E018AC LDRB W8, [X25 + 0x786]
	0x01E018B0 LDR X20, [X19 + 0x48]

ISIL:
	001 Move [X31-80], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X24, 0x25D8000
	012 Move X23, 0x22F8000
	013 Move W8, [X24+3421]
	014 Move X23, [X23+216]
	015 Move W22, W3
	016 Move X19, X2
	017 Move X20, X1
	018 Move X21, X0
	019 Move V8, V2
	020 Move V9, V1
	021 Move V10, V0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {34}
	026 Move X0, 0x22F9000
	027 Move X0, [X0+1784]
	028 Call 0x1C17CF4
	029 Move X0, 0x22F8000
	030 Move X0, [X0+216]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X24+3421], W8
	034 Move X0, [X23]
	035 Move TEMP, X22
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {61}
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X23]
	044 Move X8, [X0+184]
	045 Move X8, [X8+24]
	046 Compare X8, 0
	047 JumpIfEqual {86}
	048 Move X0, [X8+56]
	049 Compare X0, 0
	050 JumpIfEqual {86}
	051 Move X8, 0x22F9000
	052 Move X8, [X8+1784]
	053 Move X1, [X8]
	054 Call Queue`1<Object>.Clear, X0
	055 Move X0, [X23]
	056 Move X8, [X0+184]
	057 Move X8, [X8+24]
	058 Compare X8, 0
	059 JumpIfEqual {86}
	060 Move [X8+64], X31
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move S0, 1
	066 Move V1, V10
	067 Move X0, X21
	068 Call ScreenEffectManager.SetFadeInternal, V0, V1, X0
	069 Move S0, 1
	070 Move V1, V9
	071 Move X0, X20
	072 Call ScreenEffectManager.SetFadeInternal, V0, V1, X0
	073 Move V1, V8
	074 Move X0, X19
	075 Move X20, [X31+64]
	076 Move X19, [X31+72]
	077 Move X22, [X31+48]
	078 Move X21, [X31+56]
	079 Move X24, [X31+32]
	080 Move X23, [X31+40]
	081 Move X30, [X31+24]
	082 Move D9, [X31+8]
	083 Move D8, [X31+16]
	084 Move S0, W31
	085 Move V10, [X31+80]
	086 Call 0x1C17F20

Method: System.Void FadeIn(System.Single duration = 0.5, System.Action callbackEvent = null, System.Boolean forceUpdate = True)

Disassembly:
	0x01E01988 LDR X8, [X22]
	0x01E0198C LDR X8, [X8 + 0xB8]
	0x01E01990 LDP S12, S13, [X8]
	0x01E01994 LDR V14, [X8 + 0x8]
	0x01E01998 LDR X8, [X21]
	0x01E0199C LDR X8, [X8 + 0xB8]
	0x01E019A0 LDR X8, [X8 + 0x8]
	0x01E019A4 CBZ X8, 0x1E01A64
	0x01E019A8 LDRSW X9, [X19 + 0x20]
	0x01E019AC LDR W10, [X8 + 0x18]
	0x01E019B0 CMP W9, W10
	0x01E019B4 B.CS 0x1E01A68
	0x01E019B8 LDR X0, [X19 + 0x48]
	0x01E019BC CBZ X0, 0x1E01A64
	0x01E019C0 ADD X8, X8, X9, 0x2, LSL
	0x01E019C4 LDR V15, [X8 + 0x20]
	0x01E019C8 MOV X1, X31
	0x01E019CC BL 0x3C3F58C
	0x01E019D0 LDR X0, [X19 + 0x40]
	0x01E019D4 CBZ X0, 0x1E01A64
	0x01E019D8 MOV X1, X31
	0x01E019DC MOV V9.16B, V0.16B
	0x01E019E0 MOV V10.16B, V1.16B
	0x01E019E4 MOV V11.16B, V2.16B
	0x01E019E8 BL 0x3C32E90
	0x01E019EC CBZ X0, 0x1E01A64
	0x01E019F0 MOV X1, X31
	0x01E019F4 BL 0x3C3F58C
	0x01E019F8 LDR X0, [X19 + 0x48]
	0x01E019FC CBZ X0, 0x1E01A64
	0x01E01A00 LDR V6, [X31 + 0x3]
	0x01E01A04 FMUL S4, S13, S15
	0x01E01A08 FMUL S3, S14, S15
	0x01E01A0C FSUB S2, S11, S2
	0x01E01A10 FADD S4, S6, S4
	0x01E01A14 LDR V6, [X31 + 0x4]
	0x01E01A18 FSUB S1, S10, S1
	0x01E01A1C FMUL S5, S12, S15
	0x01E01A20 FSUB S0, S9, S0
	0x01E01A24 FADD S3, S8, S3
	0x01E01A28 LDP X20, X19, [X31 + 0xC0]
	0x01E01A2C LDP X22, X21, [X31 + 0xB0]
	0x01E01A30 LDP X24, X23, [X31 + 0xA0]
	0x01E01A34 LDP X30, X25, [X31 + 0x90]
	0x01E01A38 LDP D9, D8, [X31 + 0x80]
	0x01E01A3C LDP D11, D10, [X31 + 0x70]
	0x01E01A40 LDP D13, D12, [X31 + 0x60]
	0x01E01A44 LDP D15, D14, [X31 + 0x50]
	0x01E01A48 FADD S5, S6, S5
	0x01E01A4C FADD S2, S3, S2
	0x01E01A50 FADD S1, S4, S1
	0x01E01A54 FADD S0, S5, S0
	0x01E01A58 MOV X1, X31
	0x01E01A5C ADD X31, X31, 0xD0
	0x01E01A60 B 0x3C3F62C
	0x01E01A64 BL 0x1C16F20
	0x01E01A68 BL 0x1C16F28
	0x01E01A6C STP X30, X21, [X31 - 0x20]!
	0x01E01A70 STP X20, X19, [X31 + 0x10]
	0x01E01A74 ADRP X20, 0x25D7000
	0x01E01A78 ADRP X21, 0x22F4000
	0x01E01A7C LDRB W8, [X20 + 0xD68]
	0x01E01A80 LDR X21, [X21 + 0x9A0]
	0x01E01A84 MOV W19, W0
	0x01E01A88 TBNZ X8, 0x0, 0x1E01AAC
	0x01E01A8C ADRP X0, 0x22F4000
	0x01E01A90 LDR X0, [X0 + 0x9A0]
	0x01E01A94 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x25D8000
	008 Move X21, 0x22F8000
	009 Move W8, [X22+3422]
	010 Move X21, [X21+216]
	011 Move W20, W1
	012 Move X19, X0
	013 Move V8, V0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x22F9000
	019 Move X0, [X0+1784]
	020 Call 0x1C17CF4
	021 Move X0, 0x22F8000
	022 Move X0, [X0+216]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+3422], W8
	026 Move X0, [X21]
	027 Move TEMP, X20
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {53}
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X21]
	036 Move X8, [X0+184]
	037 Move X8, [X8+24]
	038 Compare X8, 0
	039 JumpIfEqual {87}
	040 Move X0, [X8+56]
	041 Compare X0, 0
	042 JumpIfEqual {87}
	043 Move X8, 0x22F9000
	044 Move X8, [X8+1784]
	045 Move X1, [X8]
	046 Call Queue`1<Object>.Clear, X0
	047 Move X0, [X21]
	048 Move X8, [X0+184]
	049 Move X8, [X8+24]
	050 Compare X8, 0
	051 JumpIfEqual {87}
	052 Move [X8+64], X31
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {58}
	056 Call 0x1C17DFC
	057 Move X0, [X21]
	058 Move X8, [X0+184]
	059 Move X8, [X8+24]
	060 Compare X8, 0
	061 JumpIfEqual {87}
	062 Move V0, [X8+64]
	063 Move S1, 1
	064 NotImplemented "Instruction FCMP not yet implemented."
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X30, [X31+8]
	070 Move V8, [X31+48]
	071 Return 
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X19
	077 Move X20, [X31+32]
	078 Move X19, [X31+40]
	079 Move X22, [X31+16]
	080 Move X21, [X31+24]
	081 Move X30, [X31+8]
	082 Move S0, 1
	083 Move V1, V8
	084 Move V8, [X31+48]
	085 Call ScreenEffectManager.SetFadeInternal, V0, V1, X0
	086 Return 
	087 Call 0x1C17F20

Method: System.Void FadeOut(System.Single duration = 0.5, System.Action callbackEvent = null, System.Boolean forceUpdate = True)

Disassembly:
	0x01E01A98 ADRP X0, 0x22F7000
	0x01E01A9C LDR X0, [X0 + 0x168]
	0x01E01AA0 BL 0x1C16CF4
	0x01E01AA4 MOVZ W8, 0x1
	0x01E01AA8 STRB W8, [X20 + 0xD68]
	0x01E01AAC LDR X0, [X21]
	0x01E01AB0 LDR W8, [X0 + 0xE0]
	0x01E01AB4 CBNZ W8, 0x1E01ABC
	0x01E01AB8 BL 0x1C16DFC
	0x01E01ABC MOV X0, X31
	0x01E01AC0 BL 0x1DB1FAC
	0x01E01AC4 CBZ W0, 0x1E01AF8
	0x01E01AC8 ADRP X8, 0x22F7000
	0x01E01ACC LDR X8, [X8 + 0x168]
	0x01E01AD0 MOV W20, W0
	0x01E01AD4 LDR X0, [X8]
	0x01E01AD8 LDR W8, [X0 + 0xE0]
	0x01E01ADC CBNZ W8, 0x1E01AE4
	0x01E01AE0 BL 0x1C16DFC
	0x01E01AE4 AND W0, W19, 0x1
	0x01E01AE8 MOV W1, W20
	0x01E01AEC LDP X20, X19, [X31 + 0x10]
	0x01E01AF0 LDP X30, X21, [X31], #0x20
	0x01E01AF4 B 0x1E01B04
	0x01E01AF8 LDP X20, X19, [X31 + 0x10]
	0x01E01AFC LDP X30, X21, [X31], #0x20
	0x01E01B00 RET
	0x01E01B04 STR X30, [X31 - 0x30]!
	0x01E01B08 STP X22, X21, [X31 + 0x10]
	0x01E01B0C STP X20, X19, [X31 + 0x20]
	0x01E01B10 ADRP X22, 0x25D7000
	0x01E01B14 ADRP X21, 0x22F7000
	0x01E01B18 LDRB W8, [X22 + 0xD69]
	0x01E01B1C LDR X21, [X21 + 0x168]
	0x01E01B20 MOV W20, W1
	0x01E01B24 MOV W19, W0
	0x01E01B28 TBNZ X8, 0x0, 0x1E01B4C
	0x01E01B2C ADRP X0, 0x22F2000
	0x01E01B30 LDR X0, [X0 + 0x598]
	0x01E01B34 BL 0x1C16CF4
	0x01E01B38 ADRP X0, 0x22F7000
	0x01E01B3C LDR X0, [X0 + 0x168]
	0x01E01B40 BL 0x1C16CF4
	0x01E01B44 MOVZ W8, 0x1
	0x01E01B48 STRB W8, [X22 + 0xD69]
	0x01E01B4C LDR X0, [X21]
	0x01E01B50 LDR W8, [X0 + 0xE0]
	0x01E01B54 CBNZ W8, 0x1E01B60
	0x01E01B58 BL 0x1C16DFC
	0x01E01B5C LDR X0, [X21]
	0x01E01B60 LDR X8, [X0 + 0xB8]
	0x01E01B64 LDR X22, [X8]
	0x01E01B68 CBZ X22, 0x1E01C34
	0x01E01B6C MOV W1, W20
	0x01E01B70 BL 0x1E01C38
	0x01E01B74 STR X0, [X22 + 0x28]
	0x01E01B78 LDR X8, [X21]
	0x01E01B7C LDR X8, [X8 + 0xB8]
	0x01E01B80 LDR X22, [X8]
	0x01E01B84 CBZ X22, 0x1E01C34
	0x01E01B88 MOV W1, W20
	0x01E01B8C BL 0x1E01C38
	0x01E01B90 MOV X1, X0
	0x01E01B94 BL 0x1E01D14
	0x01E01B98 STR W0, [X22 + 0x30]
	0x01E01B9C LDR X8, [X21]
	0x01E01BA0 LDR X8, [X8 + 0xB8]
	0x01E01BA4 LDR X8, [X8]
	0x01E01BA8 CBZ X8, 0x1E01C34

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x25D8000
	008 Move X21, 0x22F8000
	009 Move W8, [X22+3423]
	010 Move X21, [X21+216]
	011 Move W20, W1
	012 Move X19, X0
	013 Move V8, V0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x22F9000
	019 Move X0, [X0+1784]
	020 Call 0x1C17CF4
	021 Move X0, 0x22F8000
	022 Move X0, [X0+216]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+3423], W8
	026 Move X0, [X21]
	027 Move TEMP, X20
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {55}
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X21]
	036 Move X8, [X0+184]
	037 Move X8, [X8+24]
	038 Compare X8, 0
	039 JumpIfEqual {88}
	040 Move X0, [X8+56]
	041 Compare X0, 0
	042 JumpIfEqual {88}
	043 Move X8, 0x22F9000
	044 Move X8, [X8+1784]
	045 Move X1, [X8]
	046 Call Queue`1<Object>.Clear, X0
	047 Move X0, [X21]
	048 Move X8, [X0+184]
	049 Move X8, [X8+24]
	050 Compare X8, 0
	051 JumpIfEqual {88}
	052 Move X9, -20000768
	053 Move V0, [X9+1608]
	054 Move [X8+64], D0
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {60}
	058 Call 0x1C17DFC
	059 Move X0, [X21]
	060 Move X8, [X0+184]
	061 Move X8, [X8+24]
	062 Compare X8, 0
	063 JumpIfEqual {88}
	064 Move V0, [X8+64]
	065 NotImplemented "Instruction FCMP not yet implemented."
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+8]
	071 Move V8, [X31+48]
	072 Return 
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X0, X19
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X22, [X31+16]
	081 Move X21, [X31+24]
	082 Move X30, [X31+8]
	083 Move S0, W31
	084 Move V1, V8
	085 Move V8, [X31+48]
	086 Call ScreenEffectManager.SetFadeInternal, V0, V1, X0
	087 Return 
	088 Call 0x1C17F20

Method: System.Void SetFadeInternal(System.Single opacity, System.Single duration = 0.5, System.Action callbackEvent = null)

Disassembly:
	0x01E018B4 MOV V9.16B, V0.16B
	0x01E018B8 CBNZ W8, 0x1E018D0
	0x01E018BC ADRP X0, 0x22F2000
	0x01E018C0 LDR X0, [X0 + 0x5A0]
	0x01E018C4 BL 0x1C16CF4
	0x01E018C8 MOVZ W8, 0x1
	0x01E018CC STRB W8, [X25 + 0x786]
	0x01E018D0 CBZ X20, 0x1E01A64
	0x01E018D4 LDR X8, [X22]
	0x01E018D8 MOV X0, X20
	0x01E018DC MOV V3.16B, V9.16B
	0x01E018E0 MOV X1, X31
	0x01E018E4 LDR X8, [X8 + 0xB8]
	0x01E018E8 LDP S1, S2, [X8 + 0x1C]
	0x01E018EC LDR V0, [X8 + 0x18]
	0x01E018F0 BL 0x3C40678
	0x01E018F4 LDRB W8, [X23 + 0x785]
	0x01E018F8 CBNZ W8, 0x1E01910
	0x01E018FC ADRP X0, 0x22F2000
	0x01E01900 LDR X0, [X0 + 0x5A8]
	0x01E01904 BL 0x1C16CF4
	0x01E01908 MOVZ W8, 0x1
	0x01E0190C STRB W8, [X23 + 0x785]
	0x01E01910 LDR V0, [X31 + 0x4]
	0x01E01914 LDR V1, [X31 + 0xC]
	0x01E01918 LDR X0, [X24]
	0x01E0191C FSUB S9, S10, S8
	0x01E01920 FSUB S12, S1, S0
	0x01E01924 LDR V0, [X31 + 0x3]
	0x01E01928 LDR W8, [X0 + 0xE0]
	0x01E0192C FSUB S11, S11, S0
	0x01E01930 CBNZ W8, 0x1E01938
	0x01E01934 BL 0x1C16DFC
	0x01E01938 FMUL S0, S12, S12
	0x01E0193C FMUL S1, S11, S11
	0x01E01940 FADD S0, S0, S1
	0x01E01944 FMUL S1, S9, S9
	0x01E01948 FADD S0, S1, S0
	0x01E0194C FSQRT S0, S0
	0x01E01950 FCMP S0, S15
	0x01E01954 B.LE 0x1E01968
	0x01E01958 FDIV S12, S12, S0
	0x01E0195C FDIV S13, S11, S0
	0x01E01960 FDIV S14, S9, S0
	0x01E01964 B 0x1E01998
	0x01E01968 ADRP X20, 0x25D7000
	0x01E0196C LDRB W8, [X20 + 0x783]
	0x01E01970 CBNZ W8, 0x1E01988
	0x01E01974 ADRP X0, 0x22F2000
	0x01E01978 LDR X0, [X0 + 0x5A0]
	0x01E0197C BL 0x1C16CF4
	0x01E01980 MOVZ W8, 0x1
	0x01E01984 STRB W8, [X20 + 0x783]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x25D8000
	008 Move X20, 0x22F8000
	009 Move W8, [X21+3424]
	010 Move X20, [X20+216]
	011 Move X19, X0
	012 Move V8, V1
	013 Move V9, V0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x22F9000
	019 Move X0, [X0+1792]
	020 Call 0x1C17CF4
	021 Move X0, 0x22F9000
	022 Move X0, [X0+1800]
	023 Call 0x1C17CF4
	024 Move X0, 0x22F8000
	025 Move X0, [X0+216]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+3424], W8
	029 Move X0, [X20]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {35}
	033 Call 0x1C17DFC
	034 Move X0, [X20]
	035 Move X8, [X0+184]
	036 Move X8, [X8+24]
	037 Compare X8, 0
	038 JumpIfEqual {67}
	039 Move X9, 0x22F9000
	040 Move X9, [X9+1792]
	041 Move X20, [X8+56]
	042 Move X0, [X9]
	043 Call 0x1C17F10
	044 Move W8, 0x3F000000
	045 Move X1, X31
	046 Move X21, X0
	047 Move [X0+20], W8
	048 Call Object..ctor, X0
	049 Move [X21+16], S9
	050 Move [X21+24], S8
	051 Move [X21+24], X19
	052 Compare X20, 0
	053 JumpIfEqual {67}
	054 Move X8, 0x22F9000
	055 Move X8, [X8+1800]
	056 Move X0, X20
	057 Move X1, X21
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X2, [X8]
	061 Move X30, [X31+16]
	062 Move X21, [X31+24]
	063 Move D9, [X31+48]
	064 Move D8, [X31+56]
	065 Call Queue`1<Object>.Enqueue, X0, X1
	066 Return 
	067 Call 0x1C17F20

Method: System.Void SetFadeColor(UnityEngine.Color color)

Disassembly:
	0x01E01BF0 LDR X8, [X0 + 0xB8]
	0x01E01BF4 LDR X20, [X8]
	0x01E01BF8 CBZ X20, 0x1E01C34
	0x01E01BFC AND W1, W19, 0x1
	0x01E01C00 MOV X0, X20
	0x01E01C04 BL 0x1E01CA0
	0x01E01C08 MOV X1, X0
	0x01E01C0C MOV X0, X20
	0x01E01C10 LDP X20, X19, [X31 + 0x20]
	0x01E01C14 LDP X22, X21, [X31 + 0x10]
	0x01E01C18 MOV X2, X31
	0x01E01C1C LDR X30, [X31], #0x30
	0x01E01C20 B 0x3C366FC
	0x01E01C24 LDP X20, X19, [X31 + 0x20]
	0x01E01C28 LDP X22, X21, [X31 + 0x10]
	0x01E01C2C LDR X30, [X31], #0x30
	0x01E01C30 RET
	0x01E01C34 BL 0x1C16F20
	0x01E01C38 STR X30, [X31 - 0x20]!
	0x01E01C3C STP X20, X19, [X31 + 0x10]
	0x01E01C40 ADRP X20, 0x25D7000
	0x01E01C44 LDRB W8, [X20 + 0xD6E]
	0x01E01C48 MOV W19, W1
	0x01E01C4C TBNZ X8, 0x0, 0x1E01C64
	0x01E01C50 ADRP X0, 0x22F8000
	0x01E01C54 LDR X0, [X0 + 0x750]
	0x01E01C58 BL 0x1C16CF4
	0x01E01C5C MOVZ W8, 0x1
	0x01E01C60 STRB W8, [X20 + 0xD6E]
	0x01E01C64 BL 0x1E00E34
	0x01E01C68 CBZ X0, 0x1E01C88
	0x01E01C6C ADRP X8, 0x22F8000
	0x01E01C70 LDR X8, [X8 + 0x750]
	0x01E01C74 MOV W1, W19
	0x01E01C78 LDP X20, X19, [X31 + 0x10]
	0x01E01C7C LDR X2, [X8]
	0x01E01C80 LDR X30, [X31], #0x20
	0x01E01C84 B 0x2B0EFBC
	0x01E01C88 BL 0x1C16F20
	0x01E01C8C STR X30, [X31 - 0x10]!

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x25D8000
	009 Move X19, 0x22F8000
	010 Move W8, [X20+3425]
	011 Move X19, [X19+216]
	012 Move V8, V3
	013 Move V9, V2
	014 Move V10, V1
	015 Move V11, V0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x22F8000
	021 Move X0, [X0+216]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+3425], W8
	025 Move X0, [X19]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X19]
	031 Move X8, [X0+184]
	032 Move X9, [X8+24]
	033 Compare X9, 0
	034 JumpIfEqual {53}
	035 Move X0, [X9+32]
	036 Compare X0, 0
	037 JumpIfEqual {53}
	038 Move W1, [X8+4]
	039 Move V2, V9
	040 Move V3, V8
	041 Move X20, [X31+48]
	042 Move X19, [X31+56]
	043 Move X30, [X31+32]
	044 Move D9, [X31+16]
	045 Move D8, [X31+24]
	046 Move V0, V11
	047 Move V1, V10
	048 Move X2, X31
	049 Move D11, [X31+64]
	050 Move D10, [X31+72]
	051 Call Material.SetColor, X0, X1, X2
	052 Return 
	053 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01E01C90 BL 0x1E01C38
	0x01E01C94 MOV X1, X0
	0x01E01C98 LDR X30, [X31], #0x10
	0x01E01C9C B 0x1E01D14
	0x01E01CA0 STR X30, [X31 - 0x30]!
	0x01E01CA4 STP X22, X21, [X31 + 0x10]
	0x01E01CA8 STP X20, X19, [X31 + 0x20]
	0x01E01CAC ADRP X22, 0x25D7000
	0x01E01CB0 ADRP X21, 0x22F8000
	0x01E01CB4 LDRB W8, [X22 + 0xD6B]
	0x01E01CB8 LDR X21, [X21 + 0x758]
	0x01E01CBC MOV W20, W1
	0x01E01CC0 MOV X19, X0
	0x01E01CC4 TBNZ X8, 0x0, 0x1E01CDC
	0x01E01CC8 ADRP X0, 0x22F8000
	0x01E01CCC LDR X0, [X0 + 0x758]
	0x01E01CD0 BL 0x1C16CF4
	0x01E01CD4 MOVZ W8, 0x1
	0x01E01CD8 STRB W8, [X22 + 0xD6B]
	0x01E01CDC LDR X0, [X21]
	0x01E01CE0 AND W21, W20, 0x1
	0x01E01CE4 BL 0x1C16F10
	0x01E01CE8 MOV X1, X31
	0x01E01CEC MOV X20, X0
	0x01E01CF0 BL 0x33BDD8C
	0x01E01CF4 STR W31, [X20 + 0x10]
	0x01E01CF8 STR X19, [X20 + 0x28]
	0x01E01CFC STRB W21, [X20 + 0x20]
	0x01E01D00 MOV X0, X20
	0x01E01D04 LDP X20, X19, [X31 + 0x20]
	0x01E01D08 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x25D8000
	007 Move X22, 0x22F9000
	008 Move X20, 0x22F9000
	009 Move W8, [X21+3426]
	010 Move X22, [X22+1808]
	011 Move X20, [X20+1816]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x22F9000
	018 Move X0, [X0+1816]
	019 Call 0x1C17CF4
	020 Move X0, 0x22F9000
	021 Move X0, [X0+1808]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3426], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call Queue`1<Object>..ctor, X0
	030 Move [X19+56], X20
	031 Move X0, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+48]
	038 Call MonoBehaviour..ctor, X0
	039 Return 

Method: System.Void .cctor()

Disassembly:
	0x01E01D0C LDR X30, [X31], #0x30
	0x01E01D10 RET
	0x01E01D14 SUB X31, X31, 0x60
	0x01E01D18 STR X30, [X31 + 0x20]
	0x01E01D1C STP X24, X23, [X31 + 0x30]
	0x01E01D20 STP X22, X21, [X31 + 0x40]
	0x01E01D24 STP X20, X19, [X31 + 0x50]
	0x01E01D28 ADRP X20, 0x25D7000
	0x01E01D2C LDRB W8, [X20 + 0xD6A]
	0x01E01D30 MOV X19, X1
	0x01E01D34 TBNZ X8, 0x0, 0x1E01D88
	0x01E01D38 ADRP X0, 0x22F6000
	0x01E01D3C LDR X0, [X0 + 0x850]
	0x01E01D40 BL 0x1C16CF4
	0x01E01D44 ADRP X0, 0x22F8000
	0x01E01D48 LDR X0, [X0 + 0x418]
	0x01E01D4C BL 0x1C16CF4
	0x01E01D50 ADRP X0, 0x22F8000
	0x01E01D54 LDR X0, [X0 + 0x420]
	0x01E01D58 BL 0x1C16CF4
	0x01E01D5C ADRP X0, 0x22F8000
	0x01E01D60 LDR X0, [X0 + 0x428]
	0x01E01D64 BL 0x1C16CF4
	0x01E01D68 ADRP X0, 0x22F2000
	0x01E01D6C LDR X0, [X0 + 0x598]
	0x01E01D70 BL 0x1C16CF4
	0x01E01D74 ADRP X0, 0x22F8000
	0x01E01D78 LDR X0, [X0 + 0x430]
	0x01E01D7C BL 0x1C16CF4
	0x01E01D80 MOVZ W8, 0x1
	0x01E01D84 STRB W8, [X20 + 0xD6A]
	0x01E01D88 STP X31, X31, [X31 + 0x8]
	0x01E01D8C STR X31, [X31 + 0x18]
	0x01E01D90 BL 0x1E00E34
	0x01E01D94 CBZ X0, 0x1E01E48
	0x01E01D98 ADRP X8, 0x22F6000
	0x01E01D9C LDR X8, [X8 + 0x850]
	0x01E01DA0 LDR X1, [X8]
	0x01E01DA4 BL 0x2B0EEFC
	0x01E01DA8 CBZ X0, 0x1E01E48
	0x01E01DAC ADRP X8, 0x22F8000
	0x01E01DB0 LDR X8, [X8 + 0x430]
	0x01E01DB4 ADRP X23, 0x22F8000
	0x01E01DB8 ADRP X24, 0x22F2000
	0x01E01DBC ADRP X22, 0x22F8000
	0x01E01DC0 LDR X1, [X8]
	0x01E01DC4 LDR X23, [X23 + 0x420]
	0x01E01DC8 LDR X24, [X24 + 0x598]
	0x01E01DCC LDR X22, [X22 + 0x418]
	0x01E01DD0 ADD X8, X31, 0x8
	0x01E01DD4 BL 0x27850A8
	0x01E01DD8 MOV W20, W31
	0x01E01DDC LDR X1, [X23]
	0x01E01DE0 ADD X0, X31, 0x8
	0x01E01DE4 BL 0x2C1C378
	0x01E01DE8 TBZ X0, 0x0, 0x1E01E1C
	0x01E01DEC LDR X0, [X24]
	0x01E01DF0 LDR X21, [X31 + 0x18]
	0x01E01DF4 LDR W8, [X0 + 0xE0]
	0x01E01DF8 CBNZ W8, 0x1E01E00
	0x01E01DFC BL 0x1C16DFC
	0x01E01E00 MOV X0, X21
	0x01E01E04 MOV X1, X19
	0x01E01E08 MOV X2, X31
	0x01E01E0C BL 0x3C3883C
	0x01E01E10 TBNZ X0, 0x0, 0x1E01E20
	0x01E01E14 ADD W20, W20, 0x1
	0x01E01E18 B 0x1E01DDC
	0x01E01E1C MOV W20, W31
	0x01E01E20 LDR X1, [X22]
	0x01E01E24 ADD X0, X31, 0x8
	0x01E01E28 BL 0x2C1C374
	0x01E01E2C MOV W0, W20
	0x01E01E30 LDP X20, X19, [X31 + 0x50]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0x25D8000
	010 Move X25, 0x22F9000
	011 Move X19, 0x22F8000
	012 Move X23, 0x22F9000
	013 Move X22, 0x22F9000
	014 Move X21, 0x22F9000
	015 Move X20, 0x22F9000
	016 Move X25, [X25+1824]
	017 Move W8, [X24+3427]
	018 Move X19, [X19+216]
	019 Move X23, [X23+1832]
	020 Move X22, [X22+1840]
	021 Move X21, [X21+1848]
	022 Move X20, [X20+1856]
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {47}
	027 Move X0, 0x22F8000
	028 Move X0, [X0+216]
	029 Call 0x1C17CF4
	030 Move X0, 0x22F9000
	031 Move X0, [X0+1832]
	032 Call 0x1C17CF4
	033 Move X0, 0x22F9000
	034 Move X0, [X0+1848]
	035 Call 0x1C17CF4
	036 Move X0, 0x22F9000
	037 Move X0, [X0+1840]
	038 Call 0x1C17CF4
	039 Move X0, 0x22F9000
	040 Move X0, [X0+1824]
	041 Call 0x1C17CF4
	042 Move X0, 0x22F9000
	043 Move X0, [X0+1856]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X24+3427], W8
	047 Move X0, [X25]
	048 Move X1, X31
	049 Call Shader.PropertyToID, X0
	050 Move X8, [X19]
	051 Move X1, X31
	052 Move X8, [X8+184]
	053 Move [X8], W0
	054 Move X0, [X23]
	055 Call Shader.PropertyToID, X0
	056 Move X8, [X19]
	057 Move X1, X31
	058 Move X8, [X8+184]
	059 Move [X8+4], W0
	060 Move X0, [X22]
	061 Call Shader.PropertyToID, X0
	062 Move X8, [X19]
	063 Move X1, X31
	064 Move X8, [X8+184]
	065 Move [X8+8], W0
	066 Move X0, [X21]
	067 Call Shader.PropertyToID, X0
	068 Move X8, [X19]
	069 Move X1, X31
	070 Move X8, [X8+184]
	071 Move [X8+12], W0
	072 Move X0, [X20]
	073 Call Shader.PropertyToID, X0
	074 Move X8, [X19]
	075 Move X20, [X31+48]
	076 Move X19, [X31+56]
	077 Move X22, [X31+32]
	078 Move X21, [X31+40]
	079 Move X24, [X31+16]
	080 Move X23, [X31+24]
	081 Move X8, [X8+184]
	082 Move [X8+16], W0
	083 Move X30, [X31+64]
	084 Move X25, [X31+72]
	085 Return 

