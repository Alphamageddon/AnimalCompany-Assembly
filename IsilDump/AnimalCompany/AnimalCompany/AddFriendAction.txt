Type: AnimalCompany.AddFriendAction

Method: System.Void .ctor(Nakama.IApiUser user, AnimalCompany.FriendshipState friendshipState)

Disassembly:
	0x01D3E2B4 LDR W8, [X19 + 0x18]
	0x01D3E2B8 CBZ W8, 0x1D3E300
	0x01D3E2BC STR X20, [X19 + 0x20]
	0x01D3E2C0 ADRP X8, 0x23B5000
	0x01D3E2C4 LDR X8, [X8 + 0x648]
	0x01D3E2C8 LDR X0, [X8]
	0x01D3E2CC LDR W8, [X0 + 0xE0]
	0x01D3E2D0 CBNZ W8, 0x1D3E2D8
	0x01D3E2D4 BL 0x1C16DFC
	0x01D3E2D8 MOV X0, X19
	0x01D3E2DC BL 0x1D351C4
	0x01D3E2E0 MOV W0, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move W19, W2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move [X21+24], X20
	011 Move [X21+40], W19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return 

Method: System.Void .ctor(AnimalCompany.UserCacheState userCacheState, AnimalCompany.FriendshipState friendshipState)

Disassembly:
	0x01D3E2E4 LDP X20, X19, [X31 + 0x10]
	0x01D3E2E8 LDP X30, X21, [X31], #0x20
	0x01D3E2EC RET
	0x01D3E2F0 BL 0x1C16F20
	0x01D3E2F4 BL 0x1C16F44
	0x01D3E2F8 MOV X1, X31
	0x01D3E2FC BL 0x1C16DEC
	0x01D3E300 BL 0x1C16F28
	0x01D3E304 LDR X0, [X0 + 0x18]
	0x01D3E308 RET
	0x01D3E30C STP X30, X19, [X31 - 0x10]!
	0x01D3E310 ADRP X0, 0x23B5000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move W19, W2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move [X21+32], X20
	011 Move [X21+40], W19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return 

Method: System.Void Execute(AnimalCompany.AppState state)

Disassembly:
	0x01D3E314 LDR X0, [X0 + 0xB40]
	0x01D3E318 BL 0x1C16D08
	0x01D3E31C BL 0x1C16F10
	0x01D3E320 MOV X1, X31
	0x01D3E324 MOV X19, X0
	0x01D3E328 BL 0x3380310
	0x01D3E32C ADRP X0, 0x23B6000
	0x01D3E330 LDR X0, [X0 + 0x18]
	0x01D3E334 BL 0x1C16D08
	0x01D3E338 MOV X1, X0
	0x01D3E33C MOV X0, X19
	0x01D3E340 BL 0x1C16DEC
	0x01D3E344 LDR X0, [X0 + 0x18]
	0x01D3E348 RET
	0x01D3E34C STP X30, X21, [X31 - 0x20]!
	0x01D3E350 STP X20, X19, [X31 + 0x10]
	0x01D3E354 ADRP X20, 0x269A000
	0x01D3E358 ADRP X21, 0x23B6000
	0x01D3E35C LDRB W8, [X20 + 0x72D]
	0x01D3E360 LDR X21, [X21 + 0x20]
	0x01D3E364 MOV X19, X0
	0x01D3E368 TBNZ X8, 0x0, 0x1D3E380
	0x01D3E36C ADRP X0, 0x23B6000
	0x01D3E370 LDR X0, [X0 + 0x20]
	0x01D3E374 BL 0x1C16CF4
	0x01D3E378 MOVZ W8, 0x1
	0x01D3E37C STRB W8, [X20 + 0x72D]
	0x01D3E380 LDR X0, [X21]
	0x01D3E384 BL 0x1C16F10
	0x01D3E388 MOV X1, X31
	0x01D3E38C MOV X20, X0
	0x01D3E390 BL 0x33BDD8C
	0x01D3E394 STR W31, [X20 + 0x10]
	0x01D3E398 STR X19, [X20 + 0x20]
	0x01D3E39C MOV X0, X20
	0x01D3E3A0 LDP X20, X19, [X31 + 0x10]
	0x01D3E3A4 LDP X30, X21, [X31], #0x20
	0x01D3E3A8 RET
	0x01D3E3AC STR X30, [X31 - 0x20]!
	0x01D3E3B0 STP X20, X19, [X31 + 0x10]
	0x01D3E3B4 MOV W19, W1
	0x01D3E3B8 MOV X1, X31
	0x01D3E3BC MOV X20, X0
	0x01D3E3C0 BL 0x33BDD8C
	0x01D3E3C4 STR W19, [X20 + 0x10]
	0x01D3E3C8 LDP X20, X19, [X31 + 0x10]
	0x01D3E3CC LDR X30, [X31], #0x20
	0x01D3E3D0 RET
	0x01D3E3D4 STR X30, [X31 - 0x30]!
	0x01D3E3D8 STP X22, X21, [X31 + 0x10]
	0x01D3E3DC STP X20, X19, [X31 + 0x20]
	0x01D3E3E0 ADRP X21, 0x269A000
	0x01D3E3E4 ADRP X22, 0x23B5000
	0x01D3E3E8 LDRB W8, [X21 + 0x72E]
	0x01D3E3EC LDR X22, [X22 + 0x648]
	0x01D3E3F0 MOV X19, X1
	0x01D3E3F4 MOV X20, X0
	0x01D3E3F8 TBNZ X8, 0x0, 0x1D3E410
	0x01D3E3FC ADRP X0, 0x23B5000
	0x01D3E400 LDR X0, [X0 + 0x648]
	0x01D3E404 BL 0x1C16CF4
	0x01D3E408 MOVZ W8, 0x1
	0x01D3E40C STRB W8, [X21 + 0x72E]
	0x01D3E410 LDR X0, [X22]
	0x01D3E414 LDR W8, [X0 + 0xE0]
	0x01D3E418 CBNZ W8, 0x1D3E420
	0x01D3E41C BL 0x1C16DFC
	0x01D3E420 BL 0x1D32AF4
	0x01D3E424 MOV X21, X0
	0x01D3E428 BL 0x1D32B7C
	0x01D3E42C CBZ X21, 0x1D3E45C
	0x01D3E430 MOV X1, X0
	0x01D3E434 LDR X2, [X20 + 0x58]
	0x01D3E438 MOV X0, X21
	0x01D3E43C MOV X5, X19
	0x01D3E440 LDP X20, X19, [X31 + 0x20]
	0x01D3E444 LDP X22, X21, [X31 + 0x10]
	0x01D3E448 MOV X3, X31
	0x01D3E44C MOV X4, X31
	0x01D3E450 MOV X6, X31
	0x01D3E454 LDR X30, [X31], #0x30
	0x01D3E458 B 0x1D6B1CC
	0x01D3E45C BL 0x1C16F20
	0x01D3E460 RET
	0x01D3E464 STP X30, X21, [X31 - 0x20]!
	0x01D3E468 STP X20, X19, [X31 + 0x10]
	0x01D3E46C ADRP X20, 0x269A000
	0x01D3E470 LDRB W8, [X20 + 0x72F]
	0x01D3E474 MOV X19, X0
	0x01D3E478 TBNZ X8, 0x0, 0x1D3E49C
	0x01D3E47C ADRP X0, 0x23B6000
	0x01D3E480 LDR X0, [X0 + 0x28]
	0x01D3E484 BL 0x1C16CF4
	0x01D3E488 ADRP X0, 0x23B5000
	0x01D3E48C LDR X0, [X0 + 0xFB8]
	0x01D3E490 BL 0x1C16CF4
	0x01D3E494 MOVZ W8, 0x1
	0x01D3E498 STRB W8, [X20 + 0x72F]
	0x01D3E49C LDR W8, [X19 + 0x10]
	0x01D3E4A0 CMP W8, 0x2
	0x01D3E4A4 B.EQ 0x1D3E54C
	0x01D3E4A8 LDR X20, [X19 + 0x20]
	0x01D3E4AC CMP W8, 0x1
	0x01D3E4B0 B.EQ 0x1D3E52C
	0x01D3E4B4 CBNZ W8, 0x1D3E524
	0x01D3E4B8 MOVN W8, 0x0
	0x01D3E4BC STR W8, [X19 + 0x10]
	0x01D3E4C0 CBZ X20, 0x1D3E5B0
	0x01D3E4C4 LDR X8, [X20 + 0x58]
	0x01D3E4C8 CBZ X8, 0x1D3E5B0
	0x01D3E4CC LDR X8, [X8 + 0x18]
	0x01D3E4D0 CBZ X8, 0x1D3E524
	0x01D3E4D4 ADRP X8, 0x23B5000
	0x01D3E4D8 LDR X8, [X8 + 0xFB8]
	0x01D3E4DC LDR X0, [X8]
	0x01D3E4E0 BL 0x1C16F10
	0x01D3E4E4 ADRP X8, 0x23B6000
	0x01D3E4E8 LDR X8, [X8 + 0x28]
	0x01D3E4EC MOV X1, X20
	0x01D3E4F0 MOV X3, X31
	0x01D3E4F4 MOV X21, X0
	0x01D3E4F8 LDR X2, [X8]
	0x01D3E4FC BL 0x35BFCF0
	0x01D3E500 MOV X0, X21
	0x01D3E504 MOV W1, W31
	0x01D3E508 MOV X2, X31
	0x01D3E50C MOV X3, X31
	0x01D3E510 BL 0x35BC228
	0x01D3E514 STR X0, [X19 + 0x18]
	0x01D3E518 MOVZ W0, 0x1
	0x01D3E51C STR W0, [X19 + 0x10]
	0x01D3E520 B 0x1D3E5A4
	0x01D3E524 MOV W0, W31
	0x01D3E528 B 0x1D3E5A4
	0x01D3E52C MOVN W8, 0x0
	0x01D3E530 STR W8, [X19 + 0x10]
	0x01D3E534 CBZ X20, 0x1D3E5B0
	0x01D3E538 LDR X8, [X20 + 0x58]
	0x01D3E53C MOV W9, W31
	0x01D3E540 STR W31, [X19 + 0x30]
	0x01D3E544 STR X8, [X19 + 0x28]
	0x01D3E548 B 0x1D3E564
	0x01D3E54C LDR W9, [X19 + 0x30]
	0x01D3E550 LDR X8, [X19 + 0x28]
	0x01D3E554 MOVN W10, 0x0
	0x01D3E558 STR W10, [X19 + 0x10]
	0x01D3E55C ADD W9, W9, 0x1
	0x01D3E560 STR W9, [X19 + 0x30]
	0x01D3E564 CBZ X8, 0x1D3E5B0
	0x01D3E568 LDR W10, [X8 + 0x18]
	0x01D3E56C CMP W9, W10
	0x01D3E570 B.GE 0x1D3E59C
	0x01D3E574 B.CS 0x1D3E5B4
	0x01D3E578 ADD X8, X8, W9, 0x3, SXTW
	0x01D3E57C LDR X0, [X8 + 0x20]
	0x01D3E580 MOVZ W1, 0x3
	0x01D3E584 BL 0x1D3DBE8
	0x01D3E588 MOVZ W8, 0x2
	0x01D3E58C STR X0, [X19 + 0x18]
	0x01D3E590 STR W8, [X19 + 0x10]
	0x01D3E594 MOVZ W0, 0x1
	0x01D3E598 B 0x1D3E5A4
	0x01D3E59C MOV W0, W31
	0x01D3E5A0 STR X31, [X19 + 0x28]
	0x01D3E5A4 LDP X20, X19, [X31 + 0x10]
	0x01D3E5A8 LDP X30, X21, [X31], #0x20
	0x01D3E5AC RET
	0x01D3E5B0 BL 0x1C16F20
	0x01D3E5B4 BL 0x1C16F28
	0x01D3E5B8 LDR X0, [X0 + 0x18]
	0x01D3E5BC RET
	0x01D3E5C0 STP X30, X19, [X31 - 0x10]!
	0x01D3E5C4 ADRP X0, 0x23B5000
	0x01D3E5C8 LDR X0, [X0 + 0xB40]
	0x01D3E5CC BL 0x1C16D08
	0x01D3E5D0 BL 0x1C16F10
	0x01D3E5D4 MOV X1, X31
	0x01D3E5D8 MOV X19, X0
	0x01D3E5DC BL 0x3380310
	0x01D3E5E0 ADRP X0, 0x23B6000
	0x01D3E5E4 LDR X0, [X0 + 0x30]
	0x01D3E5E8 BL 0x1C16D08
	0x01D3E5EC MOV X1, X0
	0x01D3E5F0 MOV X0, X19
	0x01D3E5F4 BL 0x1C16DEC
	0x01D3E5F8 LDR X0, [X0 + 0x18]
	0x01D3E5FC RET
	0x01D3E600 STP X30, X21, [X31 - 0x20]!
	0x01D3E604 STP X20, X19, [X31 + 0x10]
	0x01D3E608 ADRP X20, 0x269A000
	0x01D3E60C ADRP X21, 0x23B6000
	0x01D3E610 LDRB W8, [X20 + 0x730]
	0x01D3E614 LDR X21, [X21 + 0x38]
	0x01D3E618 MOV X19, X0
	0x01D3E61C TBNZ X8, 0x0, 0x1D3E634
	0x01D3E620 ADRP X0, 0x23B6000
	0x01D3E624 LDR X0, [X0 + 0x38]
	0x01D3E628 BL 0x1C16CF4
	0x01D3E62C MOVZ W8, 0x1
	0x01D3E630 STRB W8, [X20 + 0x730]
	0x01D3E634 LDR X0, [X21]
	0x01D3E638 BL 0x1C16F10
	0x01D3E63C MOV X1, X31
	0x01D3E640 MOV X20, X0
	0x01D3E644 BL 0x33BDD8C
	0x01D3E648 STR W31, [X20 + 0x10]
	0x01D3E64C STR X19, [X20 + 0x20]
	0x01D3E650 MOV X0, X20
	0x01D3E654 LDP X20, X19, [X31 + 0x10]
	0x01D3E658 LDP X30, X21, [X31], #0x20
	0x01D3E65C RET
	0x01D3E660 STR X30, [X31 - 0x20]!
	0x01D3E664 STP X20, X19, [X31 + 0x10]
	0x01D3E668 MOV W19, W1
	0x01D3E66C MOV X1, X31
	0x01D3E670 MOV X20, X0
	0x01D3E674 BL 0x33BDD8C
	0x01D3E678 STR W19, [X20 + 0x10]
	0x01D3E67C LDP X20, X19, [X31 + 0x10]
	0x01D3E680 LDR X30, [X31], #0x20
	0x01D3E684 RET
	0x01D3E688 STR X30, [X31 - 0x20]!
	0x01D3E68C STP X20, X19, [X31 + 0x10]
	0x01D3E690 ADRP X19, 0x269A000
	0x01D3E694 LDRB W8, [X19 + 0x731]
	0x01D3E698 MOV X20, X0
	0x01D3E69C TBNZ X8, 0x0, 0x1D3E6B4
	0x01D3E6A0 ADRP X0, 0x23B6000
	0x01D3E6A4 LDR X0, [X0 + 0x40]
	0x01D3E6A8 BL 0x1C16CF4
	0x01D3E6AC MOVZ W8, 0x1
	0x01D3E6B0 STRB W8, [X19 + 0x731]
	0x01D3E6B4 LDR X19, [X20 + 0x58]
	0x01D3E6B8 CBZ X19, 0x1D3E734
	0x01D3E6BC ADRP X10, 0x23B6000
	0x01D3E6C0 LDR X8, [X19]
	0x01D3E6C4 LDR X10, [X10 + 0x40]
	0x01D3E6C8 LDR X20, [X20 + 0x60]
	0x01D3E6CC LDRH W9, [X8 + 0x12E]
	0x01D3E6D0 LDR X1, [X10]
	0x01D3E6D4 CBZ X9, 0x1D3E6F8
	0x01D3E6D8 LDR X10, [X8 + 0xB0]
	0x01D3E6DC ADD X10, X10, 0x8
	0x01D3E6E0 LDUR X11, [X10 - 0x8]
	0x01D3E6E4 CMP X11, X1
	0x01D3E6E8 B.EQ 0x1D3E708
	0x01D3E6EC SUBS X9, X9, 0x1
	0x01D3E6F0 ADD X10, X10, 0x10
	0x01D3E6F4 B.NE 0x1D3E6E0
	0x01D3E6F8 MOVZ W2, 0x31
	0x01D3E6FC MOV X0, X19
	0x01D3E700 BL 0x1C5C788
	0x01D3E704 B 0x1D3E718
	0x01D3E708 LDR W9, [X10]
	0x01D3E70C ADD W9, W9, 0x31
	0x01D3E710 ADD X8, X8, W9, 0x4, SXTW
	0x01D3E714 ADD X0, X8, 0x138
	0x01D3E718 LDP X4, X3, [X0]
	0x01D3E71C MOV X0, X19
	0x01D3E720 MOV X1, X20
	0x01D3E724 LDP X20, X19, [X31 + 0x10]
	0x01D3E728 MOV X2, X31
	0x01D3E72C LDR X30, [X31], #0x20
	0x01D3E730 BR X4
	0x01D3E734 BL 0x1C16F20
	0x01D3E738 RET
	0x01D3E73C SUB X31, X31, 0x30
	0x01D3E740 STP X30, X21, [X31 + 0x10]
	0x01D3E744 STP X20, X19, [X31 + 0x20]
	0x01D3E748 ADRP X20, 0x269A000
	0x01D3E74C LDRB W8, [X20 + 0x732]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x269B000
	009 Move W8, [X21+1822]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x23B6000
	017 Move X0, [X0+3880]
	018 Call 0x1C17CF4
	019 Move X0, 0x23B6000
	020 Move X0, [X0+3904]
	021 Call 0x1C17CF4
	022 Move X0, 0x23B6000
	023 Move X0, [X0+3528]
	024 Call 0x1C17CF4
	025 Move X0, 0x23B6000
	026 Move X0, [X0+3912]
	027 Call 0x1C17CF4
	028 Move X0, 0x23B6000
	029 Move X0, [X0+2304]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+1822], W8
	033 Compare X20, 0
	034 JumpIfEqual {306}
	035 Move X8, [X20+184]
	036 Compare X8, 0
	037 JumpIfEqual {306}
	038 Move X8, [X8+160]
	039 Compare X8, 0
	040 JumpIfEqual {306}
	041 Move X22, 0x23B6000
	042 Move X23, 0x23B6000
	043 Move X21, [X19+24]
	044 Move X20, [X8+72]
	045 Move X22, [X22+3904]
	046 Move X23, [X23+2304]
	047 Compare X21, 0
	048 JumpIfEqual {65}
	049 Move X24, 0x23B6000
	050 Move X8, [X21]
	051 Move X24, [X24+3880]
	052 NotImplemented "Instruction LDRH not yet implemented."
	053 Move X1, [X24]
	054 Compare X9, 0
	055 JumpIfEqual {62}
	056 Move X10, [X8+176]
	057 Add X10, X10, 8
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Subtract X9, X9, 1
	061 Add X10, X10, 16
	062 Move W2, 9
	063 Move X0, X21
	064 Call 0x1C5D788
	065 Move X8, [X19+32]
	066 Compare X8, 0
	067 JumpIfEqual {306}
	068 Move X8, [X8+80]
	069 Compare X8, 0
	070 JumpIfEqual {306}
	071 Compare X20, 0
	072 JumpIfEqual {306}
	073 Move X1, [X8+80]
	074 Move X2, [X22]
	075 Move X0, X20
	076 Call StateDictionary`2<Object, Object>.GetOrAddValue, X0, X1
	077 Compare X0, 0
	078 JumpIfEqual {306}
	079 Move X8, [X19+32]
	080 Compare X8, 0
	081 JumpIfEqual {306}
	082 Move X8, [X8+80]
	083 Compare X8, 0
	084 JumpIfEqual {306}
	085 Move X20, X0
	086 Move X0, [X0+72]
	087 Compare X0, 0
	088 JumpIfEqual {306}
	089 Move X1, [X8+80]
	090 Move X2, [X23]
	091 Call StatePrimitive`1<Object>.set_value, X0, X1
	092 Move X8, [X19+32]
	093 Compare X8, 0
	094 JumpIfEqual {306}
	095 Move X8, [X8+88]
	096 Compare X8, 0
	097 JumpIfEqual {306}
	098 Move X0, [X20+80]
	099 Compare X0, 0
	100 JumpIfEqual {306}
	101 Move X1, [X8+80]
	102 Move X2, [X23]
	103 Call StatePrimitive`1<Object>.set_value, X0, X1
	104 Move X8, [X19+32]
	105 Compare X8, 0
	106 JumpIfEqual {306}
	107 Move X8, [X8+96]
	108 Compare X8, 0
	109 JumpIfEqual {306}
	110 Move X21, [X20+88]
	111 Compare X21, 0
	112 JumpIfEqual {306}
	113 Move X1, [X8+80]
	114 Move W9, [X10]
	115 Add W9, W9, 9
	116 Add X8, X8, W9
	117 Add X0, X8, 312
	118 Move X8, [X0]
	119 Move X1, [X0+8]
	120 Move X0, X21
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Compare X20, 0
	123 JumpIfEqual {306}
	124 Move X2, [X22]
	125 Move X1, X0
	126 Move X0, X20
	127 Call StateDictionary`2<Object, Object>.GetOrAddValue, X0, X1
	128 Compare X0, 0
	129 JumpIfEqual {306}
	130 Move X22, [X19+24]
	131 Compare X22, 0
	132 JumpIfEqual {306}
	133 Move X8, [X22]
	134 Move X21, [X0+72]
	135 Move X1, [X24]
	136 Move X20, X0
	137 NotImplemented "Instruction LDRH not yet implemented."
	138 Compare X9, 0
	139 JumpIfEqual {146}
	140 Move X10, [X8+176]
	141 Add X10, X10, 8
	142 NotImplemented "Instruction LDUR not yet implemented."
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Subtract X9, X9, 1
	145 Add X10, X10, 16
	146 Move W2, 9
	147 Move X0, X22
	148 Call 0x1C5D788
	149 Move W9, [X10]
	150 Add W9, W9, 9
	151 Add X8, X8, W9
	152 Add X0, X8, 312
	153 Move X8, [X0]
	154 Move X1, [X0+8]
	155 Move X0, X22
	156 NotImplemented "Instruction BLR not yet implemented."
	157 Compare X21, 0
	158 JumpIfEqual {306}
	159 Move X2, [X23]
	160 Move X1, X0
	161 Move X0, X21
	162 Call StatePrimitive`1<Object>.set_value, X0, X1
	163 Move X22, [X19+24]
	164 Compare X22, 0
	165 JumpIfEqual {306}
	166 Move X8, [X22]
	167 Move X21, [X20+80]
	168 Move X1, [X24]
	169 NotImplemented "Instruction LDRH not yet implemented."
	170 Compare X9, 0
	171 JumpIfEqual {178}
	172 Move X10, [X8+176]
	173 Add X10, X10, 8
	174 NotImplemented "Instruction LDUR not yet implemented."
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Subtract X9, X9, 1
	177 Add X10, X10, 16
	178 Move W2, 17
	179 Move X0, X22
	180 Call 0x1C5D788
	181 Move W9, [X10]
	182 Add W9, W9, 17
	183 Add X8, X8, W9
	184 Add X0, X8, 312
	185 Move X8, [X0]
	186 Move X1, [X0+8]
	187 Move X0, X22
	188 NotImplemented "Instruction BLR not yet implemented."
	189 Compare X21, 0
	190 JumpIfEqual {306}
	191 Move X2, [X23]
	192 Move X1, X0
	193 Move X0, X21
	194 Call StatePrimitive`1<Object>.set_value, X0, X1
	195 Move X22, [X19+24]
	196 Compare X22, 0
	197 JumpIfEqual {306}
	198 Move X8, [X22]
	199 Move X21, [X20+88]
	200 Move X1, [X24]
	201 NotImplemented "Instruction LDRH not yet implemented."
	202 Compare X9, 0
	203 JumpIfEqual {210}
	204 Move X10, [X8+176]
	205 Add X10, X10, 8
	206 NotImplemented "Instruction LDUR not yet implemented."
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Subtract X9, X9, 1
	209 Add X10, X10, 16
	210 Move W2, 3
	211 Move X0, X22
	212 Call 0x1C5D788
	213 Move W9, [X10]
	214 Add W9, W9, 3
	215 Add X8, X8, W9
	216 Add X0, X8, 312
	217 Move X8, [X0]
	218 Move X1, [X0+8]
	219 Move X0, X22
	220 NotImplemented "Instruction BLR not yet implemented."
	221 Compare X21, 0
	222 JumpIfEqual {306}
	223 Move X2, [X23]
	224 Move X1, X0
	225 Move X0, X21
	226 Call StatePrimitive`1<Object>.set_value, X0, X1
	227 Move X21, [X19+24]
	228 Compare X21, 0
	229 JumpIfEqual {306}
	230 Move X8, [X21]
	231 Move X1, [X24]
	232 NotImplemented "Instruction LDRH not yet implemented."
	233 Compare X9, 0
	234 JumpIfEqual {241}
	235 Move X10, [X8+176]
	236 Add X10, X10, 8
	237 NotImplemented "Instruction LDUR not yet implemented."
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Subtract X9, X9, 1
	240 Add X10, X10, 16
	241 Move W2, 3
	242 Move X0, X21
	243 Call 0x1C5D788
	244 Move W9, [X10]
	245 Add W9, W9, 3
	246 Add X8, X8, W9
	247 Add X0, X8, 312
	248 Move X8, [X0]
	249 Move X1, [X0+8]
	250 Move X0, X21
	251 NotImplemented "Instruction BLR not yet implemented."
	252 Move X1, X31
	253 Call String.IsNullOrEmpty, X0
	254 Move TEMP, X0
	255 And TEMP, TEMP, 1
	256 Compare TEMP, 1
	257 JumpIfNotEqual {290}
	258 Move X22, [X19+24]
	259 Compare X22, 0
	260 JumpIfEqual {306}
	261 Move X8, [X22]
	262 Move X21, [X20+88]
	263 Move X1, [X24]
	264 NotImplemented "Instruction LDRH not yet implemented."
	265 Compare X9, 0
	266 JumpIfEqual {273}
	267 Move X10, [X8+176]
	268 Add X10, X10, 8
	269 NotImplemented "Instruction LDUR not yet implemented."
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Subtract X9, X9, 1
	272 Add X10, X10, 16
	273 Move W2, 17
	274 Move X0, X22
	275 Call 0x1C5D788
	276 Move W9, [X10]
	277 Add W9, W9, 17
	278 Add X8, X8, W9
	279 Add X0, X8, 312
	280 Move X8, [X0]
	281 Move X1, [X0+8]
	282 Move X0, X22
	283 NotImplemented "Instruction BLR not yet implemented."
	284 Compare X21, 0
	285 JumpIfEqual {306}
	286 Move X1, X0
	287 Move X2, [X23]
	288 Move X0, X21
	289 Call StatePrimitive`1<Object>.set_value, X0, X1
	290 Move X0, [X20+104]
	291 Compare X0, 0
	292 JumpIfEqual {306}
	293 Move X8, 0x23B6000
	294 Move X8, [X8+3912]
	295 Move W1, [X19+40]
	296 Move X20, [X31+48]
	297 Move X19, [X31+56]
	298 Move X22, [X31+32]
	299 Move X21, [X31+40]
	300 Move X2, [X8]
	301 Move X24, [X31+16]
	302 Move X23, [X31+24]
	303 Move X30, [X31+64]
	304 Call StatePrimitive`1<Int32Enum>.set_value, X0, X1
	305 Return 
	306 Call 0x1C17F20

