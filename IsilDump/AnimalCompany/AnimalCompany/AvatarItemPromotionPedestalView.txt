Type: AnimalCompany.AvatarItemPromotionPedestalView

Method: System.Void Awake()

Disassembly:
	0x01D5F7E4 BL 0x1C16F20
	0x01D5F7E8 SUB X31, X31, 0x80
	0x01D5F7EC STR X30, [X31 + 0x40]
	0x01D5F7F0 STP X24, X23, [X31 + 0x50]
	0x01D5F7F4 STP X22, X21, [X31 + 0x60]
	0x01D5F7F8 STP X20, X19, [X31 + 0x70]
	0x01D5F7FC ADRP X21, 0x2679000
	0x01D5F800 LDRB W8, [X21 + 0x843]
	0x01D5F804 MOV X20, X1
	0x01D5F808 MOV X19, X0
	0x01D5F80C TBNZ X8, 0x0, 0x1D5F854
	0x01D5F810 ADRP X0, 0x2396000
	0x01D5F814 LDR X0, [X0 + 0x688]
	0x01D5F818 BL 0x1C16CF4
	0x01D5F81C ADRP X0, 0x2396000
	0x01D5F820 LDR X0, [X0 + 0x690]
	0x01D5F824 BL 0x1C16CF4
	0x01D5F828 ADRP X0, 0x2396000
	0x01D5F82C LDR X0, [X0 + 0x698]
	0x01D5F830 BL 0x1C16CF4
	0x01D5F834 ADRP X0, 0x2396000
	0x01D5F838 LDR X0, [X0 + 0x6A0]
	0x01D5F83C BL 0x1C16CF4
	0x01D5F840 ADRP X0, 0x2394000
	0x01D5F844 LDR X0, [X0 + 0x598]
	0x01D5F848 BL 0x1C16CF4
	0x01D5F84C MOVZ W8, 0x1
	0x01D5F850 STRB W8, [X21 + 0x843]
	0x01D5F854 STP X31, X31, [X31 + 0x20]
	0x01D5F858 STR X31, [X31 + 0x30]
	0x01D5F85C CBZ X20, 0x1D5FA00
	0x01D5F860 LDR W8, [X20 + 0x28]
	0x01D5F864 LDR X0, [X19 + 0xA0]
	0x01D5F868 STR W8, [X19 + 0x98]
	0x01D5F86C CBZ X0, 0x1D5FA00
	0x01D5F870 ADRP X8, 0x2396000
	0x01D5F874 LDR X8, [X8 + 0x6A0]
	0x01D5F878 ADRP X23, 0x2396000
	0x01D5F87C ADRP X24, 0x2394000
	0x01D5F880 ADRP X22, 0x2396000
	0x01D5F884 LDR X1, [X8]
	0x01D5F888 LDR X23, [X23 + 0x690]
	0x01D5F88C LDR X24, [X24 + 0x598]
	0x01D5F890 LDR X22, [X22 + 0x688]
	0x01D5F894 ADD X8, X31, 0x8
	0x01D5F898 BL 0x301CB58
	0x01D5F89C LDUR V0, [X31 + 0x8]
	0x01D5F8A0 LDR X8, [X31 + 0x18]
	0x01D5F8A4 STR V0, [X31 + 0x2]
	0x01D5F8A8 STR X8, [X31 + 0x30]
	0x01D5F8AC LDR X1, [X23]
	0x01D5F8B0 ADD X0, X31, 0x20
	0x01D5F8B4 BL 0x2BC4350
	0x01D5F8B8 TBZ X0, 0x0, 0x1D5F8F4
	0x01D5F8BC LDR X0, [X24]
	0x01D5F8C0 LDR X21, [X31 + 0x30]
	0x01D5F8C4 LDR W8, [X0 + 0xE0]
	0x01D5F8C8 CBNZ W8, 0x1D5F8D0
	0x01D5F8CC BL 0x1C16DFC
	0x01D5F8D0 MOV X0, X21
	0x01D5F8D4 MOV X1, X20
	0x01D5F8D8 MOV X2, X31
	0x01D5F8DC BL 0x3C3883C
	0x01D5F8E0 CBZ X21, 0x1D5F9FC
	0x01D5F8E4 AND W1, W0, 0x1
	0x01D5F8E8 MOV X0, X21
	0x01D5F8EC BL 0x1D5F6CC
	0x01D5F8F0 B 0x1D5F8AC
	0x01D5F8F4 LDR X1, [X22]
	0x01D5F8F8 ADD X0, X31, 0x20
	0x01D5F8FC BL 0x2BC434C
	0x01D5F900 LDR X0, [X19 + 0x20]
	0x01D5F904 CBZ X0, 0x1D5FA00
	0x01D5F908 LDR W8, [X20 + 0x28]
	0x01D5F90C CBZ W8, 0x1D5F968
	0x01D5F910 MOVZ W1, 0x1
	0x01D5F914 MOV X2, X31
	0x01D5F918 BL 0x3C357B4
	0x01D5F91C LDR X0, [X19 + 0x28]
	0x01D5F920 CBZ X0, 0x1D5FA00
	0x01D5F924 MOV W1, W31
	0x01D5F928 MOV X2, X31
	0x01D5F92C BL 0x3C357B4
	0x01D5F930 MOV X0, X19
	0x01D5F934 BL 0x1D605DC
	0x01D5F938 LDR X8, [X19 + 0x70]
	0x01D5F93C CBZ X8, 0x1D5FA00
	0x01D5F940 MOV W21, W0
	0x01D5F944 MOV X0, X8
	0x01D5F948 MOV X1, X31
	0x01D5F94C BL 0x3C32ECC
	0x01D5F950 CBZ X0, 0x1D5FA00
	0x01D5F954 CBZ W21, 0x1D5F9AC
	0x01D5F958 MOV W1, W31
	0x01D5F95C MOV X2, X31
	0x01D5F960 BL 0x3C357B4
	0x01D5F964 B 0x1D5F9D4
	0x01D5F968 MOV W1, W31
	0x01D5F96C MOV X2, X31
	0x01D5F970 BL 0x3C357B4
	0x01D5F974 LDR X0, [X19 + 0x28]
	0x01D5F978 CBZ X0, 0x1D5FA00
	0x01D5F97C MOVZ W1, 0x1
	0x01D5F980 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x267A000
	007 Move W8, [X20+2090]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {42}
	013 Move X0, 0x2395000
	014 Move X0, [X0+2304]
	015 Call 0x1C17CF4
	016 Move X0, 0x2397000
	017 Move X0, [X0+672]
	018 Call 0x1C17CF4
	019 Move X0, 0x2397000
	020 Move X0, [X0+1536]
	021 Call 0x1C17CF4
	022 Move X0, 0x2397000
	023 Move X0, [X0+1544]
	024 Call 0x1C17CF4
	025 Move X0, 0x2397000
	026 Move X0, [X0+1552]
	027 Call 0x1C17CF4
	028 Move X0, 0x2397000
	029 Move X0, [X0+1560]
	030 Call 0x1C17CF4
	031 Move X0, 0x2397000
	032 Move X0, [X0+1568]
	033 Call 0x1C17CF4
	034 Move X0, 0x2397000
	035 Move X0, [X0+1576]
	036 Call 0x1C17CF4
	037 Move X0, 0x2397000
	038 Move X0, [X0+1584]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X20+2090], W8
	042 Move X0, X19
	043 Move W1, W31
	044 Move X2, X31
	045 Call Behaviour.set_enabled, X0, X1
	046 Move X8, [X19+112]
	047 Compare X8, 0
	048 JumpIfEqual {120}
	049 Move X20, [X8+96]
	050 Compare X20, 0
	051 JumpIfEqual {120}
	052 Move X0, [X20+88]
	053 Compare X0, 0
	054 JumpIfEqual {120}
	055 Move X8, 0x2397000
	056 Move X21, 0x2395000
	057 Move X8, [X8+1568]
	058 Move X21, [X21+2304]
	059 Move X1, [X8]
	060 Move X2, [X21]
	061 Call StatePrimitive`1<Object>.set_value, X0, X1
	062 Move X0, [X20+96]
	063 Compare X0, 0
	064 JumpIfEqual {120}
	065 Move X22, 0x2397000
	066 Move X22, [X22+1544]
	067 Move X2, [X21]
	068 Move X1, [X22]
	069 Call StatePrimitive`1<Object>.set_value, X0, X1
	070 Move X0, [X20+104]
	071 Compare X0, 0
	072 JumpIfEqual {120}
	073 Move X1, [X22]
	074 Move X2, [X21]
	075 Call StatePrimitive`1<Object>.set_value, X0, X1
	076 Move X0, [X20+112]
	077 Compare X0, 0
	078 JumpIfEqual {120}
	079 Move X8, 0x2397000
	080 Move X8, [X8+1560]
	081 Move X2, [X21]
	082 Move X1, [X8]
	083 Call StatePrimitive`1<Object>.set_value, X0, X1
	084 Move X0, [X20+120]
	085 Compare X0, 0
	086 JumpIfEqual {120}
	087 Move X8, 0x2397000
	088 Move X8, [X8+1536]
	089 Move X2, [X21]
	090 Move X1, [X8]
	091 Call StatePrimitive`1<Object>.set_value, X0, X1
	092 Move X0, [X20+128]
	093 Compare X0, 0
	094 JumpIfEqual {120}
	095 Move X8, 0x2397000
	096 Move X8, [X8+1584]
	097 Move X2, [X21]
	098 Move X1, [X8]
	099 Call StatePrimitive`1<Object>.set_value, X0, X1
	100 Move X0, [X20+136]
	101 Compare X0, 0
	102 JumpIfEqual {120}
	103 Move X8, 0x2397000
	104 Move X8, [X8+1576]
	105 Move X2, [X21]
	106 Move X20, 0x2397000
	107 Move X1, [X8]
	108 Move X20, [X20+1552]
	109 Call StatePrimitive`1<Object>.set_value, X0, X1
	110 Move X0, [X20]
	111 Move X1, X31
	112 Call Animator.StringToHash, X0
	113 Move [X19+128], W0
	114 Move X20, [X31+32]
	115 Move X19, [X31+40]
	116 Move X22, [X31+16]
	117 Move X21, [X31+24]
	118 Move X30, [X31+48]
	119 Return 
	120 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x01D5F984 BL 0x3C357B4
	0x01D5F988 LDR X0, [X19 + 0x70]
	0x01D5F98C CBZ X0, 0x1D5FA00
	0x01D5F990 MOV X1, X31
	0x01D5F994 BL 0x3C32ECC
	0x01D5F998 CBZ X0, 0x1D5FA00
	0x01D5F99C MOV W1, W31
	0x01D5F9A0 MOV X2, X31
	0x01D5F9A4 BL 0x3C357B4
	0x01D5F9A8 B 0x1D5F9E4
	0x01D5F9AC MOVZ W1, 0x1
	0x01D5F9B0 MOV X2, X31
	0x01D5F9B4 BL 0x3C357B4
	0x01D5F9B8 LDR X0, [X19 + 0x70]
	0x01D5F9BC CBZ X0, 0x1D5FA00
	0x01D5F9C0 LDR X8, [X0]
	0x01D5F9C4 LDR X1, [X20 + 0x88]
	0x01D5F9C8 LDR X9, [X8 + 0x558]
	0x01D5F9CC LDR X2, [X8 + 0x560]
	0x01D5F9D0 BLR X9
	0x01D5F9D4 LDR X0, [X19 + 0x38]
	0x01D5F9D8 CBZ X0, 0x1D5FA00
	0x01D5F9DC MOV X1, X31
	0x01D5F9E0 BL 0x1D7A5CC
	0x01D5F9E4 LDP X20, X19, [X31 + 0x70]
	0x01D5F9E8 LDP X22, X21, [X31 + 0x60]
	0x01D5F9EC LDP X24, X23, [X31 + 0x50]
	0x01D5F9F0 LDR X30, [X31 + 0x40]
	0x01D5F9F4 ADD X31, X31, 0x80
	0x01D5F9F8 RET
	0x01D5F9FC BL 0x1C16F20
	0x01D5FA00 BL 0x1C16F20
	0x01D5FA04 B 0x1D5FA10
	0x01D5FA08 B 0x1D5FA10
	0x01D5FA0C B 0x1D5FA10
	0x01D5FA10 CMP W1, 0x1
	0x01D5FA14 B.NE 0x1D5FA40
	0x01D5FA18 BL 0x3EB1AD0
	0x01D5FA1C LDR X8, [X0]
	0x01D5FA20 STR X8, [X31 + 0x48]
	0x01D5FA24 BL 0x3EB1AE0
	0x01D5FA28 LDR X1, [X22]
	0x01D5FA2C ADD X0, X31, 0x20
	0x01D5FA30 BL 0x2BC434C
	0x01D5FA34 LDR X0, [X31 + 0x48]
	0x01D5FA38 CBZ X0, 0x1D5F900
	0x01D5FA3C BL 0x1C16F18
	0x01D5FA40 MOV X19, X0
	0x01D5FA44 STR X31, [X31 + 0x48]
	0x01D5FA48 B 0x1D5FA50
	0x01D5FA4C MOV X19, X0
	0x01D5FA50 LDR X1, [X22]
	0x01D5FA54 ADD X0, X31, 0x20
	0x01D5FA58 BL 0x2BC434C
	0x01D5FA5C LDR X8, [X31 + 0x48]
	0x01D5FA60 CBNZ X8, 0x1D5FA6C
	0x01D5FA64 MOV X0, X19
	0x01D5FA68 BL 0x1D2C690
	0x01D5FA6C LDR X0, [X31 + 0x48]
	0x01D5FA70 BL 0x1C16F18
	0x01D5FA74 BL 0x1990590
	0x01D5FA78 SUB X31, X31, 0x30
	0x01D5FA7C STP X30, X21, [X31 + 0x10]
	0x01D5FA80 STP X20, X19, [X31 + 0x20]
	0x01D5FA84 ADRP X21, 0x2679000
	0x01D5FA88 LDRB W8, [X21 + 0x835]
	0x01D5FA8C MOV X20, X1
	0x01D5FA90 MOV X19, X0
	0x01D5FA94 TBNZ X8, 0x0, 0x1D5FAC4
	0x01D5FA98 ADRP X0, 0x2396000
	0x01D5FA9C LDR X0, [X0 + 0x5B0]
	0x01D5FAA0 BL 0x1C16CF4
	0x01D5FAA4 ADRP X0, 0x2396000
	0x01D5FAA8 LDR X0, [X0 + 0x6A8]
	0x01D5FAAC BL 0x1C16CF4
	0x01D5FAB0 ADRP X0, 0x2396000
	0x01D5FAB4 LDR X0, [X0 + 0x5A8]
	0x01D5FAB8 BL 0x1C16CF4
	0x01D5FABC MOVZ W8, 0x1
	0x01D5FAC0 STRB W8, [X21 + 0x835]
	0x01D5FAC4 STR W31, [X31 + 0xC]
	0x01D5FAC8 ADRP X8, 0xFFFFFFFFFED8B000
	0x01D5FACC LDR V0, [X19 + 0x90]
	0x01D5FAD0 LDR V1, [X8 + 0xBC]
	0x01D5FAD4 FCMP S0, S1
	0x01D5FAD8 B.LE 0x1D5FBE8
	0x01D5FADC ADD X1, X31, 0xC
	0x01D5FAE0 MOV X0, X20
	0x01D5FAE4 MOV X2, X31
	0x01D5FAE8 BL 0x1D7B2BC
	0x01D5FAEC TBZ X0, 0x0, 0x1D5FBE8
	0x01D5FAF0 LDR X0, [X19 + 0x20]
	0x01D5FAF4 CBZ X0, 0x1D5FBF8
	0x01D5FAF8 MOV X1, X19
	0x01D5FAFC BL 0x1D5F7E8
	0x01D5FB00 LDR X20, [X19 + 0x80]
	0x01D5FB04 MOV X0, X19
	0x01D5FB08 MOV X1, X31
	0x01D5FB0C BL 0x3C32E90
	0x01D5FB10 CBZ X0, 0x1D5FBF8
	0x01D5FB14 MOV X1, X31
	0x01D5FB18 BL 0x3C3F58C
	0x01D5FB1C CBZ X20, 0x1D5FBF8
	0x01D5FB20 FMOV S3, 1
	0x01D5FB24 MOV X0, X20
	0x01D5FB28 MOV W1, W31
	0x01D5FB2C MOV X2, X31
	0x01D5FB30 BL 0x1DD0FA8
	0x01D5FB34 ADRP X8, 0x2396000
	0x01D5FB38 LDR X8, [X8 + 0x5A8]
	0x01D5FB3C LDR W20, [X19 + 0x94]
	0x01D5FB40 LDR X0, [X8]
	0x01D5FB44 LDR W8, [X0 + 0xE0]
	0x01D5FB48 CBNZ W8, 0x1D5FB50
	0x01D5FB4C BL 0x1C16DFC
	0x01D5FB50 MOV W0, W20
	0x01D5FB54 MOV X1, X31
	0x01D5FB58 BL 0x31AD670
	0x01D5FB5C LDR X0, [X19 + 0x48]
	0x01D5FB60 CBZ X0, 0x1D5FBF8
	0x01D5FB64 MOV X1, X31
	0x01D5FB68 BL 0x3C32ECC
	0x01D5FB6C ADRP X8, 0xFFFFFFFFFED8B000
	0x01D5FB70 LDR V2, [X8 + 0x58]
	0x01D5FB74 FMOV S0, 1.5
	0x01D5FB78 FMOV S1, 1
	0x01D5FB7C MOV X1, X31
	0x01D5FB80 BL 0x31B223C
	0x01D5FB84 CBZ X0, 0x1D5FBF8
	0x01D5FB88 MOV X1, X31
	0x01D5FB8C BL 0x31C54A0
	0x01D5FB90 ADRP X8, 0x2396000
	0x01D5FB94 LDR X8, [X8 + 0x5B0]
	0x01D5FB98 MOV X20, X0
	0x01D5FB9C LDR X8, [X8]
	0x01D5FBA0 MOV X0, X8
	0x01D5FBA4 BL 0x1C16F10
	0x01D5FBA8 ADRP X8, 0x2396000
	0x01D5FBAC LDR X8, [X8 + 0x6A8]
	0x01D5FBB0 MOV X1, X19
	0x01D5FBB4 MOV X3, X31
	0x01D5FBB8 MOV X21, X0
	0x01D5FBBC LDR X2, [X8]
	0x01D5FBC0 BL 0x2A6DA40
	0x01D5FBC4 CBZ X20, 0x1D5FBF8
	0x01D5FBC8 MOV X0, X20
	0x01D5FBCC MOV X1, X21
	0x01D5FBD0 MOV X2, X31
	0x01D5FBD4 BL 0x31C8070
	0x01D5FBD8 CBZ X0, 0x1D5FBF8
	0x01D5FBDC MOV X1, X31
	0x01D5FBE0 BL 0x31BFBD4
	0x01D5FBE4 STR W0, [X19 + 0x94]
	0x01D5FBE8 LDP X20, X19, [X31 + 0x20]
	0x01D5FBEC LDP X30, X21, [X31 + 0x10]
	0x01D5FBF0 ADD X31, X31, 0x30
	0x01D5FBF4 RET
	0x01D5FBF8 BL 0x1C16F20
	0x01D5FBFC MOV X1, X31
	0x01D5FC00 B 0x3C36C30
	0x01D5FC04 STR X30, [X31 - 0x10]!
	0x01D5FC08 LDR X0, [X0 + 0x48]
	0x01D5FC0C CBZ X0, 0x1D5FC24
	0x01D5FC10 MOV V1.16B, V0.16B
	0x01D5FC14 MOV V2.16B, V0.16B
	0x01D5FC18 MOV X1, X31
	0x01D5FC1C LDR X30, [X31], #0x10
	0x01D5FC20 B 0x3C3FC4C
	0x01D5FC24 BL 0x1C16F20
	0x01D5FC28 STP X30, X23, [X31 - 0x30]!
	0x01D5FC2C STP X22, X21, [X31 + 0x10]
	0x01D5FC30 STP X20, X19, [X31 + 0x20]
	0x01D5FC34 ADRP X20, 0x2679000
	0x01D5FC38 LDRB W8, [X20 + 0x836]
	0x01D5FC3C MOV X19, X0
	0x01D5FC40 TBNZ X8, 0x0, 0x1D5FC64
	0x01D5FC44 ADRP X0, 0x2396000
	0x01D5FC48 LDR X0, [X0 + 0x6B0]
	0x01D5FC4C BL 0x1C16CF4
	0x01D5FC50 ADRP X0, 0x2396000
	0x01D5FC54 LDR X0, [X0 + 0x4A0]
	0x01D5FC58 BL 0x1C16CF4
	0x01D5FC5C MOVZ W8, 0x1
	0x01D5FC60 STRB W8, [X20 + 0x836]
	0x01D5FC64 LDR X22, [X19 + 0x30]
	0x01D5FC68 CBZ X22, 0x1D5FCFC
	0x01D5FC6C ADRP X23, 0x2396000
	0x01D5FC70 LDR X23, [X23 + 0x4A0]
	0x01D5FC74 ADRP X21, 0x2396000
	0x01D5FC78 LDR X20, [X22 + 0x20]
	0x01D5FC7C LDR X0, [X23]
	0x01D5FC80 LDR X21, [X21 + 0x6B0]
	0x01D5FC84 BL 0x1C16F10
	0x01D5FC88 LDR X2, [X21]
	0x01D5FC8C MOV X1, X19
	0x01D5FC90 MOV X3, X31
	0x01D5FC94 MOV X21, X0
	0x01D5FC98 BL 0x2D32B84
	0x01D5FC9C MOV X0, X20
	0x01D5FCA0 MOV X1, X21
	0x01D5FCA4 MOV X2, X31
	0x01D5FCA8 BL 0x33C0DE4
	0x01D5FCAC CBZ X0, 0x1D5FCE8
	0x01D5FCB0 LDR X20, [X23]
	0x01D5FCB4 MOV X19, X0
	0x01D5FCB8 MOV X1, X20
	0x01D5FCBC BL 0x1C16E00
	0x01D5FCC0 CBZ X0, 0x1D5FCDC
	0x01D5FCC4 STR X0, [X22 + 0x20]
	0x01D5FCC8 LDR X20, [X23]
	0x01D5FCCC MOV X0, X19
	0x01D5FCD0 MOV X1, X20
	0x01D5FCD4 BL 0x1C16E00
	0x01D5FCD8 CBNZ X0, 0x1D5FCEC
	0x01D5FCDC MOV X0, X19
	0x01D5FCE0 MOV X1, X20
	0x01D5FCE4 BL 0x1C171E0
	0x01D5FCE8 STR X31, [X22 + 0x20]
	0x01D5FCEC LDP X20, X19, [X31 + 0x20]
	0x01D5FCF0 LDP X22, X21, [X31 + 0x10]
	0x01D5FCF4 LDP X30, X23, [X31], #0x30
	0x01D5FCF8 RET
	0x01D5FCFC BL 0x1C16F20
	0x01D5FD00 STP D11, D10, [X31 - 0x30]!
	0x01D5FD04 STP D9, D8, [X31 + 0x10]
	0x01D5FD08 STP X30, X19, [X31 + 0x20]
	0x01D5FD0C MOV X19, X0
	0x01D5FD10 LDR X0, [X0 + 0x38]
	0x01D5FD14 CBZ X0, 0x1D5FDC0
	0x01D5FD18 MOV X1, X31
	0x01D5FD1C MOV V8.16B, V0.16B
	0x01D5FD20 BL 0x3C3E7F0
	0x01D5FD24 LDR X0, [X19 + 0x38]
	0x01D5FD28 CBZ X0, 0x1D5FDC0
	0x01D5FD2C MOV X1, X31
	0x01D5FD30 MOV V9.16B, V1.16B
	0x01D5FD34 BL 0x3C3E51C
	0x01D5FD38 LDR X0, [X19 + 0x38]
	0x01D5FD3C CBZ X0, 0x1D5FDC0
	0x01D5FD40 MOV X1, X31
	0x01D5FD44 MOV V10.16B, V3.16B
	0x01D5FD48 BL 0x3C3E51C
	0x01D5FD4C LDR V2, [X19 + 0x40]
	0x01D5FD50 FMOV S0, -0.5
	0x01D5FD54 FMOV S1, 0.5
	0x01D5FD58 FMUL S11, S10, S0
	0x01D5FD5C FMUL S0, S2, S8
	0x01D5FD60 LDR X19, [X19 + 0x38]
	0x01D5FD64 FMUL S10, S3, S1
	0x01D5FD68 FADD S0, S9, S0
	0x01D5FD6C FCMP S0, S10
	0x01D5FD70 FCSEL S1, S10, S0, GT
	0x01D5FD74 FCMP S0, S11
	0x01D5FD78 FCSEL S8, S1, S11, PL
	0x01D5FD7C CBZ X19, 0x1D5FDC0
	0x01D5FD80 MOV X0, X19
	0x01D5FD84 MOV X1, X31
	0x01D5FD88 BL 0x3C3E7F0
	0x01D5FD8C MOV X0, X19
	0x01D5FD90 MOV V1.16B, V8.16B
	0x01D5FD94 MOV X1, X31
	0x01D5FD98 BL 0x3C3E880
	0x01D5FD9C FCMP S8, S11
	0x01D5FDA0 CSET W8, NE
	0x01D5FDA4 FCMP S8, S10
	0x01D5FDA8 LDP X30, X19, [X31 + 0x20]
	0x01D5FDAC LDP D9, D8, [X31 + 0x10]
	0x01D5FDB0 CSET W9, NE
	0x01D5FDB4 AND W0, W8, W9, 0x0
	0x01D5FDB8 LDP D11, D10, [X31], #0x30
	0x01D5FDBC RET
	0x01D5FDC0 BL 0x1C16F20
	0x01D5FDC4 B 0x1D5FDC8
	0x01D5FDC8 SUB X31, X31, 0xE0
	0x01D5FDCC STP D15, D14, [X31 + 0x40]
	0x01D5FDD0 STP D13, D12, [X31 + 0x50]
	0x01D5FDD4 STP D11, D10, [X31 + 0x60]
	0x01D5FDD8 STP D9, D8, [X31 + 0x70]
	0x01D5FDDC STP X29, X30, [X31 + 0x80]
	0x01D5FDE0 STP X28, X27, [X31 + 0x90]
	0x01D5FDE4 STP X26, X25, [X31 + 0xA0]
	0x01D5FDE8 STP X24, X23, [X31 + 0xB0]
	0x01D5FDEC STP X22, X21, [X31 + 0xC0]
	0x01D5FDF0 STP X20, X19, [X31 + 0xD0]

ISIL:
	001 Move [X31-96], D13
	002 Move [X31-88], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0x267A000
	013 Move W8, [X20+2091]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x2395000
	020 Move X0, [X0+3584]
	021 Call 0x1C17CF4
	022 Move X0, 0x2395000
	023 Move X0, [X0+3608]
	024 Call 0x1C17CF4
	025 Move X0, 0x2397000
	026 Move X0, [X0+1592]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+2091], W8
	030 Move V8, [X19+108]
	031 Move X0, X31
	032 Call Time.get_deltaTime
	033 Add S0, S8, S0
	034 Move S1, 1
	035 NotImplemented "Instruction FCMP not yet implemented."
	036 Move [X19+108], S0
	037 Move X0, X31
	038 Move [X19+108], W31
	039 Call Camera.get_main
	040 Compare X0, 0
	041 JumpIfEqual {253}
	042 Move X1, X31
	043 Call Component.get_transform, X0
	044 Compare X0, 0
	045 JumpIfEqual {253}
	046 Move X1, X31
	047 Call Transform.get_position, X0
	048 Move X0, X19
	049 Move X1, X31
	050 Move V8, V0
	051 Move V9, V1
	052 Move V10, V2
	053 Call Component.get_transform, X0
	054 Compare X0, 0
	055 JumpIfEqual {253}
	056 Move X1, X31
	057 Call Transform.get_position, X0
	058 Move X20, 0x267A000
	059 Move W8, [X20+2140]
	060 Move V11, V0
	061 Move V12, V1
	062 Move V13, V2
	063 Compare W8, 0
	064 JumpIfNotEqual {70}
	065 Move X0, 0x2395000
	066 Move X0, [X0+1448]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+2140], W8
	070 Move X8, 0x2395000
	071 Move X8, [X8+1448]
	072 Subtract S11, S8, S11
	073 Subtract S9, S9, S12
	074 Subtract S8, S10, S13
	075 Move X0, [X8]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Multiply S0, S11, S11
	081 Multiply S1, S9, S9
	082 Move V2, [X19+80]
	083 Add S0, S0, S1
	084 Multiply S1, S8, S8
	085 Add S0, S1, S0
	086 NotImplemented "Instruction FSQRT not yet implemented."
	087 NotImplemented "Instruction FCMP not yet implemented."
	088 NotImplemented "Instruction CSET not yet implemented."
	089 Move X0, X19
	090 Move X1, X31
	091 Move [X19+100], W8
	092 Call Component.get_transform, X0
	093 Compare X0, 0
	094 JumpIfEqual {253}
	095 Move X1, X31
	096 Call Transform.GetEnumerator, X0
	097 Move X20, X0
	098 Compare X0, 0
	099 JumpIfEqual {254}
	100 Move X21, 0x2395000
	101 Move X22, 0x2397000
	102 Move X21, [X21+3608]
	103 Move X22, [X22+1592]
	104 Move X8, [X20]
	105 Move X1, [X21]
	106 NotImplemented "Instruction LDRH not yet implemented."
	107 Compare X9, 0
	108 JumpIfEqual {115}
	109 Move X10, [X8+176]
	110 Add X10, X10, 8
	111 NotImplemented "Instruction LDUR not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Subtract X9, X9, 1
	114 Add X10, X10, 16
	115 Move X0, X20
	116 Move W2, W31
	117 Call 0x1C5D788
	118 NotImplemented "Instruction LDRSW not yet implemented."
	119 Add X8, X8, X9
	120 Add X0, X8, 312
	121 Move X8, [X0]
	122 Move X1, [X0+8]
	123 Move X0, X20
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {171}
	129 Move X8, [X20]
	130 Move X1, [X21]
	131 NotImplemented "Instruction LDRH not yet implemented."
	132 Compare X9, 0
	133 JumpIfEqual {140}
	134 Move X10, [X8+176]
	135 Add X10, X10, 8
	136 NotImplemented "Instruction LDUR not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Subtract X9, X9, 1
	139 Add X10, X10, 16
	140 Move W2, 1
	141 Move X0, X20
	142 Call 0x1C5D788
	143 Move W9, [X10]
	144 Add W9, W9, 1
	145 Add X8, X8, W9
	146 Add X0, X8, 312
	147 Move X8, [X0]
	148 Move X1, [X0+8]
	149 Move X0, X20
	150 NotImplemented "Instruction BLR not yet implemented."
	151 Compare X0, 0
	152 JumpIfEqual {251}
	153 Move X8, [X0]
	154 Move X1, [X22]
	155 Move W10, [X8+304]
	156 Move W9, [X1+304]
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move X8, [X8+200]
	159 Add X8, X8, X9
	160 NotImplemented "Instruction LDUR not yet implemented."
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X1, X31
	163 Call Component.get_gameObject, X0
	164 Compare X0, 0
	165 JumpIfEqual {252}
	166 Move W8, [X19+100]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 NotImplemented "Instruction CSET not yet implemented."
	169 Move X2, X31
	170 Call GameObject.SetActive, X0, X1
	171 Move X21, X31
	172 Move X22, 0x2395000
	173 Move X22, [X22+3584]
	174 Move X0, X20
	175 Move X1, [X22]
	176 Call 0x1C17E00
	177 Compare X0, 0
	178 JumpIfEqual {201}
	179 Move X8, [X0]
	180 Move X1, [X22]
	181 Move X20, X0
	182 NotImplemented "Instruction LDRH not yet implemented."
	183 Compare X9, 0
	184 JumpIfEqual {191}
	185 Move X10, [X8+176]
	186 Add X10, X10, 8
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Subtract X9, X9, 1
	190 Add X10, X10, 16
	191 Move X0, X20
	192 Move W2, W31
	193 Call 0x1C5D788
	194 NotImplemented "Instruction LDRSW not yet implemented."
	195 Add X8, X8, X9
	196 Add X0, X8, 312
	197 Move X8, [X0]
	198 Move X1, [X0+8]
	199 Move X0, X20
	200 NotImplemented "Instruction BLR not yet implemented."
	201 Compare X21, 0
	202 JumpIfNotEqual {255}
	203 Move W8, [X19+100]
	204 Compare W8, 0
	205 JumpIfNotEqual {213}
	206 Move V8, [X19+104]
	207 Move X0, X31
	208 Call Time.get_deltaTime
	209 Add S0, S8, S0
	210 Move S1, 5
	211 NotImplemented "Instruction FCMP not yet implemented."
	212 Move [X19+104], S0
	213 Move X20, [X31+80]
	214 Move X19, [X31+88]
	215 Move X22, [X31+64]
	216 Move X21, [X31+72]
	217 Move X30, [X31+48]
	218 Move D9, [X31+32]
	219 Move D8, [X31+40]
	220 Move D11, [X31+16]
	221 Move D10, [X31+24]
	222 Move D13, [X31+96]
	223 Move D12, [X31+104]
	224 Return 
	225 Move X8, [X19+88]
	226 Move [X19+104], W31
	227 Compare X8, 0
	228 JumpIfEqual {253}
	229 Move W9, [X19+96]
	230 Move W10, [X8+24]
	231 Add W9, W9, 1
	232 NotImplemented "Instruction SDIV not yet implemented."
	233 NotImplemented "Instruction MSUB not yet implemented."
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Move [X19+96], W9
	236 Add X8, X8, W9
	237 Move X1, [X8+32]
	238 Move X0, X19
	239 Move X20, [X31+80]
	240 Move X19, [X31+88]
	241 Move X22, [X31+64]
	242 Move X21, [X31+72]
	243 Move X30, [X31+48]
	244 Move D9, [X31+32]
	245 Move D8, [X31+40]
	246 Move D11, [X31+16]
	247 Move D10, [X31+24]
	248 Move D13, [X31+96]
	249 Move D12, [X31+104]
	250 Call 0x1C181E0
	251 Call 0x1C17F20
	252 Call 0x1C17F20
	253 Call 0x1C17F20
	254 Call 0x1C17F20
	255 Move X0, X21
	256 Call 0x1C17F18
	257 Call 0x1C17F28
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Call 0x3EB2AD0
	260 Move X21, [X0]
	261 Call 0x3EB2AE0
	262 Move X19, X0
	263 Move X21, X31
	264 Move X19, X0
	265 Move X22, 0x2395000
	266 Move X22, [X22+3584]
	267 Move X1, [X22]
	268 Move X0, X20
	269 Call 0x1C17E00
	270 Move X20, X0
	271 Compare X0, 0
	272 JumpIfEqual {294}
	273 Move X8, [X20]
	274 Move X1, [X22]
	275 NotImplemented "Instruction LDRH not yet implemented."
	276 Compare X9, 0
	277 JumpIfEqual {284}
	278 Move X10, [X8+176]
	279 Add X10, X10, 8
	280 NotImplemented "Instruction LDUR not yet implemented."
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Subtract X9, X9, 1
	283 Add X10, X10, 16
	284 Move X0, X20
	285 Move W2, W31
	286 Call 0x1C5D788
	287 NotImplemented "Instruction LDRSW not yet implemented."
	288 Add X8, X8, X9
	289 Add X0, X8, 312
	290 Move X8, [X0]
	291 Move X1, [X0+8]
	292 Move X0, X20
	293 NotImplemented "Instruction BLR not yet implemented."
	294 Compare X21, 0
	295 JumpIfNotEqual {298}
	296 Move X0, X19
	297 Call 0x1D2D690
	298 Move X0, X21
	299 Call 0x1C17F18
	300 Call 0x1991590

Method: System.Void SetItems(AnimalCompany.AvatarItemState[] items)

Disassembly:
	0x01D5F69C BL 0x3C32ECC
	0x01D5F6A0 CBZ X0, 0x1D5F6C8
	0x01D5F6A4 FCMP S8, S9
	0x01D5F6A8 CSET W1, GT
	0x01D5F6AC MOV X2, X31
	0x01D5F6B0 BL 0x3C357B4
	0x01D5F6B4 STR S8, [X19 + 0x90]
	0x01D5F6B8 LDP X20, X19, [X31 + 0x20]
	0x01D5F6BC LDR X30, [X31 + 0x10]
	0x01D5F6C0 LDP D9, D8, [X31], #0x30
	0x01D5F6C4 RET
	0x01D5F6C8 BL 0x1C16F20
	0x01D5F6CC STR X30, [X31 - 0x20]!
	0x01D5F6D0 STP X20, X19, [X31 + 0x10]
	0x01D5F6D4 MOV X19, X0
	0x01D5F6D8 LDR X0, [X0 + 0x38]
	0x01D5F6DC CBZ X0, 0x1D5F7C8
	0x01D5F6E0 MOV W20, W1
	0x01D5F6E4 MOV X1, X31
	0x01D5F6E8 BL 0x3C32ECC
	0x01D5F6EC CBZ X0, 0x1D5F7C8
	0x01D5F6F0 AND W1, W20, 0x1
	0x01D5F6F4 MOV X2, X31
	0x01D5F6F8 BL 0x3C357B4
	0x01D5F6FC LDR X0, [X19 + 0x40]
	0x01D5F700 CBZ X0, 0x1D5F7C8
	0x01D5F704 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move [X0+88], X1
	005 Move [X0+96], W31
	006 Move [X0+104], W31
	007 Compare X1, 0
	008 JumpIfEqual {12}
	009 Move W8, [X1+24]
	010 NotImplemented "Instruction CMP not yet implemented."
	011 NotImplemented "Instruction CSET not yet implemented."
	012 Move X0, X19
	013 Move X2, X31
	014 Call Behaviour.set_enabled, X0, X1
	015 Move X8, [X19+88]
	016 Compare X8, 0
	017 JumpIfEqual {25}
	018 Move X9, [X8+24]
	019 Compare X9, 0
	020 JumpIfEqual {25}
	021 NotImplemented "Instruction LDRSW not yet implemented."
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Add X8, X8, X10
	024 Move X1, [X8+32]
	025 Move X1, X31
	026 Move X0, X19
	027 Move X30, [X31+16]
	028 Move X19, [X31+24]
	029 Call AvatarItemPromotionPedestalView.ChangeDisplayItem, X0, X1
	030 Return 
	031 Call 0x1C17F28

Method: System.Void ChangeDisplayItem(AnimalCompany.AvatarItemState item)

Disassembly:
	0x01D5FDF4 ADRP X20, 0x2679000
	0x01D5FDF8 LDRB W8, [X20 + 0x837]
	0x01D5FDFC MOV X19, X0
	0x01D5FE00 TBNZ X8, 0x0, 0x1D5FE48
	0x01D5FE04 ADRP X0, 0x2394000
	0x01D5FE08 LDR X0, [X0 + 0x970]
	0x01D5FE0C BL 0x1C16CF4
	0x01D5FE10 ADRP X0, 0x2396000
	0x01D5FE14 LDR X0, [X0 + 0x688]
	0x01D5FE18 BL 0x1C16CF4
	0x01D5FE1C ADRP X0, 0x2396000
	0x01D5FE20 LDR X0, [X0 + 0x690]
	0x01D5FE24 BL 0x1C16CF4
	0x01D5FE28 ADRP X0, 0x2396000
	0x01D5FE2C LDR X0, [X0 + 0x698]
	0x01D5FE30 BL 0x1C16CF4
	0x01D5FE34 ADRP X0, 0x2396000
	0x01D5FE38 LDR X0, [X0 + 0x6A0]
	0x01D5FE3C BL 0x1C16CF4
	0x01D5FE40 MOVZ W8, 0x1
	0x01D5FE44 STRB W8, [X20 + 0x837]
	0x01D5FE48 STP X31, X31, [X31 + 0x20]
	0x01D5FE4C STR X31, [X31 + 0x30]
	0x01D5FE50 LDR X0, [X19 + 0x48]
	0x01D5FE54 CBZ X0, 0x1D6016C
	0x01D5FE58 ADRP X8, 0x2396000
	0x01D5FE5C LDR X8, [X8 + 0x6A0]
	0x01D5FE60 ADRP X23, 0x2396000
	0x01D5FE64 ADRP X24, 0x2394000
	0x01D5FE68 ADRP X22, 0x2396000
	0x01D5FE6C LDR X1, [X8]
	0x01D5FE70 LDR X23, [X23 + 0x690]
	0x01D5FE74 LDR X24, [X24 + 0x970]
	0x01D5FE78 LDR X22, [X22 + 0x688]
	0x01D5FE7C ADD X8, X31, 0x8
	0x01D5FE80 BL 0x301CB58
	0x01D5FE84 LDUR V0, [X31 + 0x8]
	0x01D5FE88 ADRP X9, 0xFFFFFFFFFED8B000
	0x01D5FE8C ADRP X10, 0xFFFFFFFFFED8B000
	0x01D5FE90 LDR V14, [X9 + 0x448]
	0x01D5FE94 ADRP X9, 0xFFFFFFFFFED8A000
	0x01D5FE98 LDR X8, [X31 + 0x18]
	0x01D5FE9C LDR V1, [X10 + 0x104]
	0x01D5FEA0 STR V0, [X31 + 0x2]
	0x01D5FEA4 LDR V0, [X9 + 0xF8C]
	0x01D5FEA8 MOVZ W25, 0xC28C0000
	0x01D5FEAC MOVZ W26, 0x7F800000
	0x01D5FEB0 MOVZ W27, 0x80000000
	0x01D5FEB4 MOVZ W28, 0x42200000
	0x01D5FEB8 MOVZ W29, 0xC2200000
	0x01D5FEBC STR S1, [X31 + 0x4]
	0x01D5FEC0 STR S0, [X31]
	0x01D5FEC4 STR X8, [X31 + 0x30]
	0x01D5FEC8 LDR X1, [X23]
	0x01D5FECC ADD X0, X31, 0x20
	0x01D5FED0 BL 0x2BC4350
	0x01D5FED4 TBZ X0, 0x0, 0x1D60110
	0x01D5FED8 LDR X20, [X31 + 0x30]
	0x01D5FEDC MOV X0, X19
	0x01D5FEE0 MOV X1, X31
	0x01D5FEE4 BL 0x3C32E90
	0x01D5FEE8 CBZ X20, 0x1D60158
	0x01D5FEEC MOV X21, X0
	0x01D5FEF0 MOV X0, X20
	0x01D5FEF4 MOV X1, X31
	0x01D5FEF8 BL 0x3C32E90
	0x01D5FEFC CBZ X0, 0x1D6015C
	0x01D5FF00 MOV X1, X31
	0x01D5FF04 BL 0x3C3F58C
	0x01D5FF08 CBZ X21, 0x1D60150
	0x01D5FF0C MOV X0, X21
	0x01D5FF10 MOV X1, X31
	0x01D5FF14 BL 0x3C40B58
	0x01D5FF18 LDR V15, [X20 + 0x9C]
	0x01D5FF1C MOV V8.16B, V0.16B
	0x01D5FF20 MOV V9.16B, V1.16B
	0x01D5FF24 MOV V11.16B, V2.16B
	0x01D5FF28 MOV X0, X31
	0x01D5FF2C BL 0x3C3C714
	0x01D5FF30 STP S8, S9, [X20 + 0x98]
	0x01D5FF34 STR S11, [X20 + 0xA0]
	0x01D5FF38 MOV V10.16B, V0.16B
	0x01D5FF3C LDR V0, [X19 + 0x20]
	0x01D5FF40 FMOV S8, W31
	0x01D5FF44 FCMP S0, 0x0
	0x01D5FF48 B.EQ 0x1D5FF64
	0x01D5FF4C FABS S1, S9
	0x01D5FF50 FDIV S0, S1, S0
	0x01D5FF54 FCMP S0, 0x0
	0x01D5FF58 B.MI 0x1D5FF64
	0x01D5FF5C FMOV S1, 1
	0x01D5FF60 FMIN S8, S0, S1
	0x01D5FF64 MOV X0, X20
	0x01D5FF68 MOV X1, X31
	0x01D5FF6C BL 0x3C32E90
	0x01D5FF70 MOV X21, X0
	0x01D5FF74 MOV X0, X20
	0x01D5FF78 MOV X1, X31
	0x01D5FF7C BL 0x3C32E90
	0x01D5FF80 CBZ X0, 0x1D60154
	0x01D5FF84 MOV X1, X31
	0x01D5FF88 BL 0x3C3EB78
	0x01D5FF8C MOV V11.16B, V0.16B
	0x01D5FF90 MOV X0, X20
	0x01D5FF94 MOV X1, X31
	0x01D5FF98 BL 0x3C32E90
	0x01D5FF9C CBZ X0, 0x1D6014C
	0x01D5FFA0 MOV X1, X31
	0x01D5FFA4 BL 0x3C3EB78
	0x01D5FFA8 LDR V13, [X19 + 0x24]
	0x01D5FFAC MOV V12.16B, V1.16B
	0x01D5FFB0 FMOV S1, 3
	0x01D5FFB4 MOV V0.16B, V8.16B
	0x01D5FFB8 BL 0x3EB1B50
	0x01D5FFBC CBZ X21, 0x1D60160
	0x01D5FFC0 LDR V1, [X19 + 0x28]
	0x01D5FFC4 FMOV S2, 1
	0x01D5FFC8 FMIN S2, S0, S2
	0x01D5FFCC FCMP S0, 0x0
	0x01D5FFD0 FSUB S0, S1, S13
	0x01D5FFD4 FMOV S1, W31
	0x01D5FFD8 FCSEL S1, S2, S1, PL
	0x01D5FFDC FMUL S0, S1, S0
	0x01D5FFE0 FADD S2, S13, S0
	0x01D5FFE4 MOV X0, X21
	0x01D5FFE8 MOV V0.16B, V11.16B
	0x01D5FFEC MOV V1.16B, V12.16B
	0x01D5FFF0 MOV X1, X31
	0x01D5FFF4 BL 0x3C3EC04
	0x01D5FFF8 MOV X0, X20
	0x01D5FFFC MOV X1, X31
	0x01D60000 BL 0x3C32E90
	0x01D60004 MOV X21, X0
	0x01D60008 MOV X0, X20
	0x01D6000C MOV X1, X31
	0x01D60010 BL 0x3C32E90
	0x01D60014 CBZ X0, 0x1D60164
	0x01D60018 MOV X1, X31
	0x01D6001C BL 0x3C3F830
	0x01D60020 MOV X0, X31
	0x01D60024 BL 0x3C2A60C
	0x01D60028 FMUL S2, S2, S14
	0x01D6002C FMUL S0, S0, S14
	0x01D60030 FMUL S1, S1, S14
	0x01D60034 MOV X0, X31
	0x01D60038 BL 0x3C2AB94
	0x01D6003C FSUB S0, S9, S15
	0x01D60040 FDIV S0, S0, S10
	0x01D60044 FMOV W8, S0
	0x01D60048 FMOV S1, W25
	0x01D6004C AND W8, W8, 0x7FFFFFFF
	0x01D60050 FMUL S1, S0, S1
	0x01D60054 CMP W8, W26
	0x01D60058 FMOV S0, W27
	0x01D6005C MOV V11.16B, V2.16B
	0x01D60060 FCSEL S9, S0, S1, HI
	0x01D60064 MOV X0, X31
	0x01D60068 BL 0x3C3C714
	0x01D6006C FMOV S1, W28
	0x01D60070 FMOV S3, W29
	0x01D60074 FMOV S4, 3
	0x01D60078 FMIN S2, S9, S1
	0x01D6007C FCMP S9, S3
	0x01D60080 FMUL S0, S0, S4
	0x01D60084 FMOV S4, 1
	0x01D60088 FCSEL S2, S2, S3, PL
	0x01D6008C FMIN S4, S0, S4
	0x01D60090 FCMP S0, 0x0
	0x01D60094 FMOV S0, W31
	0x01D60098 FCSEL S0, S4, S0, PL
	0x01D6009C FSUB S2, S2, S11
	0x01D600A0 FMUL S0, S2, S0
	0x01D600A4 FADD S0, S11, S0
	0x01D600A8 LDR V2, [X31 + 0x4]
	0x01D600AC FMIN S1, S0, S1
	0x01D600B0 FCMP S0, S3
	0x01D600B4 LDR V0, [X31]
	0x01D600B8 FMUL S1, S1, S2
	0x01D600BC FCSEL S0, S1, S0, PL
	0x01D600C0 FMOV S1, W31
	0x01D600C4 FMOV S2, W31
	0x01D600C8 MOV X0, X31
	0x01D600CC BL 0x3C2A574
	0x01D600D0 CBZ X21, 0x1D60168
	0x01D600D4 MOV X0, X21
	0x01D600D8 MOV X1, X31
	0x01D600DC BL 0x3C3F8B8
	0x01D600E0 LDR X0, [X24]
	0x01D600E4 LDR W8, [X0 + 0xE0]
	0x01D600E8 CBNZ W8, 0x1D600F0
	0x01D600EC BL 0x1C16DFC
	0x01D600F0 MOV X0, X31
	0x01D600F4 BL 0x3C018E4
	0x01D600F8 TBZ X0, 0x0, 0x1D5FEC8
	0x01D600FC FMOV S0, 1
	0x01D60100 FSUB S0, S0, S8
	0x01D60104 MOV X0, X20
	0x01D60108 BL 0x1D5F5AC
	0x01D6010C B 0x1D5FEC8
	0x01D60110 LDR X1, [X22]
	0x01D60114 ADD X0, X31, 0x20
	0x01D60118 BL 0x2BC434C
	0x01D6011C LDP X20, X19, [X31 + 0xD0]
	0x01D60120 LDP X22, X21, [X31 + 0xC0]
	0x01D60124 LDP X24, X23, [X31 + 0xB0]
	0x01D60128 LDP X26, X25, [X31 + 0xA0]
	0x01D6012C LDP X28, X27, [X31 + 0x90]
	0x01D60130 LDP X29, X30, [X31 + 0x80]
	0x01D60134 LDP D9, D8, [X31 + 0x70]
	0x01D60138 LDP D11, D10, [X31 + 0x60]
	0x01D6013C LDP D13, D12, [X31 + 0x50]
	0x01D60140 LDP D15, D14, [X31 + 0x40]
	0x01D60144 ADD X31, X31, 0xE0
	0x01D60148 RET

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x267A000
	011 Move W8, [X21+2092]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {44}
	018 Move X0, 0x2397000
	019 Move X0, [X0+1456]
	020 Call 0x1C17CF4
	021 Move X0, 0x2395000
	022 Move X0, [X0+1608]
	023 Call 0x1C17CF4
	024 Move X0, 0x2397000
	025 Move X0, [X0+1600]
	026 Call 0x1C17CF4
	027 Move X0, 0x2397000
	028 Move X0, [X0+1448]
	029 Call 0x1C17CF4
	030 Move X0, 0x2397000
	031 Move X0, [X0+1352]
	032 Call 0x1C17CF4
	033 Move X0, 0x2395000
	034 Move X0, [X0+3528]
	035 Call 0x1C17CF4
	036 Move X0, 0x2397000
	037 Move X0, [X0+672]
	038 Call 0x1C17CF4
	039 Move X0, 0x2397000
	040 Move X0, [X0+1608]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X21+2092], W8
	044 Move X9, [X19+112]
	045 Compare X9, 0
	046 JumpIfEqual {255}
	047 Move X8, [X19+120]
	048 Compare X8, 0
	049 JumpIfEqual {255}
	050 Move X0, [X9+96]
	051 Compare X0, 0
	052 JumpIfEqual {255}
	053 Move X9, [X0]
	054 Move X1, [X8+96]
	055 Move X22, 0x2395000
	056 Move X8, [X9+1016]
	057 Move X2, [X9+1024]
	058 Move X22, [X22+1608]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X23, 0x267A000
	061 Compare X20, 0
	062 JumpIfEqual {114}
	063 Move X0, [X22]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move W8, [X23+1927]
	069 Compare W8, 0
	070 JumpIfNotEqual {76}
	071 Move X0, 0x2395000
	072 Move X0, [X0+1608]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X23+1927], W8
	076 Move X0, [X22]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {82}
	080 Call 0x1C17DFC
	081 Move X0, [X22]
	082 Move X8, [X0+184]
	083 Move X8, [X8]
	084 Compare X8, 0
	085 JumpIfEqual {255}
	086 Move X9, [X8+200]
	087 Compare X9, 0
	088 JumpIfEqual {255}
	089 Move X8, [X20+72]
	090 Compare X8, 0
	091 JumpIfEqual {255}
	092 Move X0, [X9+80]
	093 Compare X0, 0
	094 JumpIfEqual {255}
	095 Move X9, 0x2397000
	096 Move X9, [X9+1352]
	097 Move X1, [X8+80]
	098 Move X2, [X9]
	099 Call StateDictionary`2<Object, Object>.ContainsKey, X0, X1
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfNotEqual {114}
	104 Move X8, [X20+80]
	105 Compare X8, 0
	106 JumpIfEqual {255}
	107 Move X0, [X8+80]
	108 Compare X0, 0
	109 JumpIfEqual {255}
	110 Move X1, X31
	111 Call String.ToUpper, X0
	112 Move X21, X0
	113 Move W24, 1
	114 Move X8, 0x2397000
	115 Move X8, [X8+1608]
	116 Move W24, W31
	117 Move X21, [X8]
	118 Move X25, [X19+56]
	119 Compare X25, 0
	120 JumpIfEqual {255}
	121 Move W8, [X25+24]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move W26, W31
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Add X8, X25, W26
	126 Move X0, [X8+32]
	127 Compare X0, 0
	128 JumpIfEqual {255}
	129 Move X8, [X0]
	130 Move X1, X21
	131 Move X9, [X8+1368]
	132 Move X2, [X8+1376]
	133 NotImplemented "Instruction BLR not yet implemented."
	134 Move W8, [X25+24]
	135 Add W26, W26, 1
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Compare W24, 0
	138 JumpIfEqual {245}
	139 Move X0, [X22]
	140 Move W8, [X0+224]
	141 Compare W8, 0
	142 JumpIfNotEqual {144}
	143 Call 0x1C17DFC
	144 Move W8, [X23+1927]
	145 Compare W8, 0
	146 JumpIfNotEqual {152}
	147 Move X0, 0x2395000
	148 Move X0, [X0+1608]
	149 Call 0x1C17CF4
	150 Move W8, 1
	151 Move [X23+1927], W8
	152 Move X0, [X22]
	153 Move W8, [X0+224]
	154 Compare W8, 0
	155 JumpIfNotEqual {158}
	156 Call 0x1C17DFC
	157 Move X0, [X22]
	158 Move X8, [X19+120]
	159 Compare X8, 0
	160 JumpIfEqual {255}
	161 Move X9, [X0+184]
	162 Move X1, [X8+96]
	163 Move X2, X20
	164 Move X0, [X9]
	165 Call UserAvatarStateUtils.EquipItemOnAvatar, X0, X1, X2
	166 Move X8, [X19+120]
	167 Compare X8, 0
	168 JumpIfEqual {255}
	169 Move X0, [X19+32]
	170 Compare X0, 0
	171 JumpIfEqual {255}
	172 Move X1, [X8+96]
	173 Move X2, X31
	174 Call AvatarView.UpdateAvatar, X0, X1
	175 Move X0, [X19+72]
	176 Compare X0, 0
	177 JumpIfEqual {255}
	178 Move X1, X31
	179 Call Component.get_gameObject, X0
	180 Move X8, 0x2396000
	181 Move X8, [X8+1448]
	182 Move X20, X0
	183 Move X8, [X8]
	184 Move W9, [X8+224]
	185 Compare W9, 0
	186 JumpIfNotEqual {189}
	187 Move X0, X8
	188 Call 0x1C17DFC
	189 Move X0, X20
	190 Move X1, X31
	191 Call LeanTween.cancel, X0
	192 Move V2, [X19+64]
	193 Move W8, 0xC3B40000
	194 Move S0, W31
	195 Move S1, W8
	196 Move X0, X31
	197 Call LeanTween.value, V0, V1, V2
	198 Compare X0, 0
	199 JumpIfEqual {255}
	200 Move W1, 2
	201 Move X2, X31
	202 Call LTDescr.setEase, X0, X1
	203 Move X8, 0x2396000
	204 Move X8, [X8+1456]
	205 Move X20, X0
	206 Move X8, [X8]
	207 Move X0, X8
	208 Call 0x1C17F10
	209 Move X8, 0x2396000
	210 Move X8, [X8+1600]
	211 Move X1, X19
	212 Move X3, X31
	213 Move X21, X0
	214 Move X2, [X8]
	215 Call Action`1<Single>..ctor, X0, X1, X2
	216 Compare X20, 0
	217 JumpIfEqual {255}
	218 Move X0, X20
	219 Move X1, X21
	220 Move X2, X31
	221 Call LTDescr.setOnUpdate, X0, X1
	222 Move W1, [X19+48]
	223 Move X20, [X19+40]
	224 Move W21, [X19+128]
	225 Move W0, W31
	226 Move X2, X31
	227 Call Random.Range, X0, X1
	228 Compare X20, 0
	229 JumpIfEqual {255}
	230 Move W2, W0
	231 Move X0, X20
	232 Move W1, W21
	233 Move X20, [X31+64]
	234 Move X19, [X31+72]
	235 Move X22, [X31+48]
	236 Move X21, [X31+56]
	237 Move X24, [X31+32]
	238 Move X23, [X31+40]
	239 Move X26, [X31+16]
	240 Move X25, [X31+24]
	241 Move X3, X31
	242 Move X30, [X31+80]
	243 Call Animator.SetInteger, X0, X1, X2
	244 Return 
	245 Move X20, [X31+64]
	246 Move X19, [X31+72]
	247 Move X22, [X31+48]
	248 Move X21, [X31+56]
	249 Move X24, [X31+32]
	250 Move X23, [X31+40]
	251 Move X26, [X31+16]
	252 Move X25, [X31+24]
	253 Move X30, [X31+80]
	254 Return 
	255 Call 0x1C17F20
	256 Call 0x1C17F28

Method: System.Void .ctor()

Disassembly:
	0x01D6014C BL 0x1C16F20
	0x01D60150 BL 0x1C16F20
	0x01D60154 BL 0x1C16F20
	0x01D60158 BL 0x1C16F20
	0x01D6015C BL 0x1C16F20
	0x01D60160 BL 0x1C16F20
	0x01D60164 BL 0x1C16F20
	0x01D60168 BL 0x1C16F20
	0x01D6016C BL 0x1C16F20
	0x01D60170 B 0x1D601E0
	0x01D60174 B 0x1D601E0
	0x01D60178 B 0x1D601E0
	0x01D6017C B 0x1D601E0
	0x01D60180 B 0x1D601E0
	0x01D60184 B 0x1D601E0
	0x01D60188 B 0x1D601E0
	0x01D6018C B 0x1D601E0
	0x01D60190 B 0x1D601E0
	0x01D60194 B 0x1D601E0
	0x01D60198 B 0x1D601E0
	0x01D6019C B 0x1D601E0
	0x01D601A0 B 0x1D601E0
	0x01D601A4 B 0x1D601E0
	0x01D601A8 B 0x1D601E0
	0x01D601AC B 0x1D601E0
	0x01D601B0 B 0x1D601E0
	0x01D601B4 B 0x1D601E0
	0x01D601B8 B 0x1D601E0
	0x01D601BC B 0x1D601E0
	0x01D601C0 B 0x1D601E0
	0x01D601C4 B 0x1D601E0
	0x01D601C8 B 0x1D601E0
	0x01D601CC B 0x1D601E0
	0x01D601D0 B 0x1D601E0
	0x01D601D4 B 0x1D601E0
	0x01D601D8 B 0x1D601E0
	0x01D601DC B 0x1D601E0
	0x01D601E0 MOV X19, X0
	0x01D601E4 CMP W1, 0x1
	0x01D601E8 B.NE 0x1D60214
	0x01D601EC MOV X0, X19
	0x01D601F0 BL 0x3EB1AD0
	0x01D601F4 LDR X20, [X0]
	0x01D601F8 BL 0x3EB1AE0
	0x01D601FC LDR X1, [X22]
	0x01D60200 ADD X0, X31, 0x20
	0x01D60204 BL 0x2BC434C
	0x01D60208 CBZ X20, 0x1D6011C
	0x01D6020C MOV X0, X20
	0x01D60210 BL 0x1C16F18
	0x01D60214 MOV X20, X31
	0x01D60218 B 0x1D60220
	0x01D6021C MOV X19, X0
	0x01D60220 LDR X1, [X22]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x2679000
	008 Move X20, 0x2396000
	009 Move X22, 0x2396000
	010 Move X21, 0x2396000
	011 Move W8, [X23+2093]
	012 Move X20, [X20+1616]
	013 Move X22, [X22+800]
	014 Move X21, [X21+792]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x2396000
	021 Move X0, [X0+1616]
	022 Call 0x1C17CF4
	023 Move X0, 0x2396000
	024 Move X0, [X0+792]
	025 Call 0x1C17CF4
	026 Move X0, 0x2396000
	027 Move X0, [X0+800]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+2093], W8
	031 Move W8, 2
	032 Move W9, 0x3F800000
	033 Move W10, 0x41200000
	034 Move [X19+48], W8
	035 Move [X19+64], W9
	036 Move [X19+80], W10
	037 Move X0, [X20]
	038 Move W1, W31
	039 Call 0x1C17D6C
	040 Move [X19+88], X0
	041 Move X0, [X22]
	042 Call 0x1C17F10
	043 Move X2, [X21]
	044 Move X1, X31
	045 Move X20, X0
	046 Call 0x26B0B18, X0, X1
	047 Move [X19+112], X20
	048 Move X0, [X22]
	049 Call 0x1C17F10
	050 Move X2, [X21]
	051 Move X1, X31
	052 Move X20, X0
	053 Call 0x26B0B18, X0, X1
	054 Move [X19+120], X20
	055 Move X0, X19
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X1, X31
	061 Move X30, [X31+48]
	062 Move X23, [X31+56]
	063 Call MonoBehaviour..ctor, X0
	064 Return 

Method: System.Void <ChangeDisplayItem>b__19_0(System.Single value)

Disassembly:
	0x01D60224 ADD X0, X31, 0x20
	0x01D60228 BL 0x2BC434C
	0x01D6022C CBNZ X20, 0x1D60238
	0x01D60230 MOV X0, X19
	0x01D60234 BL 0x1D2C690
	0x01D60238 MOV X0, X20
	0x01D6023C BL 0x1C16F18
	0x01D60240 BL 0x1990590
	0x01D60244 STP D9, D8, [X31 - 0x30]!
	0x01D60248 STP X30, X21, [X31 + 0x10]
	0x01D6024C STP X20, X19, [X31 + 0x20]
	0x01D60250 ADRP X21, 0x2678000
	0x01D60254 LDRB W8, [X21 + 0x838]
	0x01D60258 MOV X19, X1
	0x01D6025C MOV X20, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, -19353600
	004 Move V1, [X8+260]
	005 Move X19, [X0+72]
	006 Move S2, W31
	007 Move X0, X31
	008 Multiply S1, S0, S1
	009 Move S0, W31
	010 Call Quaternion.Internal_FromEulerRad, X0
	011 Compare X19, 0
	012 JumpIfEqual {19}
	013 Move X0, X19
	014 Move X1, X31
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Call Transform.set_localRotation, X0, X1
	018 Return 
	019 Call 0x1C17F20

