Type: AnimalCompany.PrefabGenerator

Method: Fusion.NetworkRunner get_runner()

Disassembly:
	0x01DD10B4 BL 0x1C16F10
	0x01DD10B8 MOV X19, X0
	0x01DD10BC ADRP X0, 0x2327000
	0x01DD10C0 LDR X0, [X0 + 0x5A8]
	0x01DD10C4 BL 0x1C16D08
	0x01DD10C8 MOV X1, X0
	0x01DD10CC MOV X0, X19
	0x01DD10D0 MOV X2, X31
	0x01DD10D4 BL 0x337DF1C
	0x01DD10D8 ADRP X0, 0x2327000
	0x01DD10DC LDR X0, [X0 + 0x5B8]
	0x01DD10E0 BL 0x1C16D08
	0x01DD10E4 MOV X1, X0
	0x01DD10E8 MOV X0, X19
	0x01DD10EC BL 0x1C16DEC
	0x01DD10F0 MOV W1, W31
	0x01DD10F4 B 0x1DD1090
	0x01DD10F8 STP X30, X19, [X31 - 0x10]!
	0x01DD10FC MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x2608000
	004 Move W8, [X19+2751]
	005 Compare W8, 0
	006 JumpIfNotEqual {12}
	007 Move X0, 0x2326000
	008 Move X0, [X0+3368]
	009 Call 0x1C17CF4
	010 Move W8, 1
	011 Move [X19+2751], W8
	012 Move X8, 0x2326000
	013 Move X8, [X8+3368]
	014 Move X8, [X8]
	015 Move X8, [X8+184]
	016 Move X0, [X8+56]
	017 Compare X0, 0
	018 JumpIfEqual {24}
	019 Move X1, X31
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 Call NetworkManager.get_currentRunner, X0
	023 Return X0
	024 Call 0x1C17F20

Method: System.Void Awake()

Disassembly:
	0x01DD1100 LDR X0, [X0 + 0x40]
	0x01DD1104 CBZ X0, 0x1DD115C
	0x01DD1108 MOV X1, X31
	0x01DD110C BL 0x1E93668
	0x01DD1110 TBZ X0, 0x0, 0x1DD113C
	0x01DD1114 MOV X0, X19
	0x01DD1118 BL 0x1DD1030
	0x01DD111C CMP W0, 0x2
	0x01DD1120 B.EQ 0x1DD1150
	0x01DD1124 CMP W0, 0x1
	0x01DD1128 B.EQ 0x1DD1144
	0x01DD112C CBNZ W0, 0x1DD113C
	0x01DD1130 MOV X0, X19
	0x01DD1134 LDP X30, X19, [X31], #0x10
	0x01DD1138 B 0x1DD1160
	0x01DD113C LDP X30, X19, [X31], #0x10
	0x01DD1140 RET
	0x01DD1144 MOV X0, X19
	0x01DD1148 LDP X30, X19, [X31], #0x10
	0x01DD114C B 0x1DD12FC
	0x01DD1150 MOV X0, X19
	0x01DD1154 LDP X30, X19, [X31], #0x10
	0x01DD1158 B 0x1DD174C
	0x01DD115C BL 0x1C16F20
	0x01DD1160 SUB X31, X31, 0x60
	0x01DD1164 STP D11, D10, [X31 + 0x10]
	0x01DD1168 STP D9, D8, [X31 + 0x20]
	0x01DD116C STP X30, X23, [X31 + 0x30]
	0x01DD1170 STP X22, X21, [X31 + 0x40]
	0x01DD1174 STP X20, X19, [X31 + 0x50]
	0x01DD1178 ADRP X20, 0x2607000
	0x01DD117C LDRB W8, [X20 + 0xBF8]
	0x01DD1180 MOV X19, X0
	0x01DD1184 TBNZ X8, 0x0, 0x1DD11B4
	0x01DD1188 ADRP X0, 0x2327000
	0x01DD118C LDR X0, [X0 + 0x5C0]
	0x01DD1190 BL 0x1C16CF4
	0x01DD1194 ADRP X0, 0x2322000
	0x01DD1198 LDR X0, [X0 + 0x5F8]
	0x01DD119C BL 0x1C16CF4
	0x01DD11A0 ADRP X0, 0x2327000
	0x01DD11A4 LDR X0, [X0 + 0x5C8]
	0x01DD11A8 BL 0x1C16CF4
	0x01DD11AC MOVZ W8, 0x1
	0x01DD11B0 STRB W8, [X20 + 0xBF8]
	0x01DD11B4 STR X31, [X31 + 0x8]
	0x01DD11B8 LDR X0, [X19 + 0x90]
	0x01DD11BC CBZ X0, 0x1DD12F4
	0x01DD11C0 ADRP X8, 0x2327000
	0x01DD11C4 LDR X8, [X8 + 0x5C8]
	0x01DD11C8 MOV W2, W31
	0x01DD11CC MOV X3, X31
	0x01DD11D0 LDR X1, [X8]
	0x01DD11D4 BL 0x3BF6010
	0x01DD11D8 LDR X0, [X19 + 0xA0]
	0x01DD11DC CBZ X0, 0x1DD12F4
	0x01DD11E0 MOVZ W1, 0x1
	0x01DD11E4 MOV X2, X31
	0x01DD11E8 BL 0x3BE17B4
	0x01DD11EC MOV X0, X19
	0x01DD11F0 MOV X1, X31
	0x01DD11F4 BL 0x3C32E90
	0x01DD11F8 CBZ X0, 0x1DD12F4
	0x01DD11FC ADRP X20, 0x2322000
	0x01DD1200 LDR X20, [X20 + 0x5F8]
	0x01DD1204 MOV X1, X31
	0x01DD1208 BL 0x3C3F58C
	0x01DD120C LDR W0, [X19 + 0x98]
	0x01DD1210 LDR V10, [X19 + 0xBC]
	0x01DD1214 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2608000
	006 Move X21, 0x2328000
	007 Move W8, [X20+3052]
	008 Move X21, [X21+208]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2323000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x2328000
	018 Move X0, [X0+208]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3052], W8
	022 Move X0, [X21]
	023 Move X20, 0x2323000
	024 Move W8, [X0+224]
	025 Move X20, [X20+1432]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X21]
	030 Move X8, [X20]
	031 Move X9, [X0+184]
	032 Move W10, [X8+224]
	033 Move X20, [X9+8]
	034 Compare W10, 0
	035 JumpIfNotEqual {38}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 Move X0, X20
	039 Move X1, X31
	040 Move X2, X31
	041 Call Object.op_Inequality, X0, X1
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {59}
	046 Move X0, [X21]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X21]
	052 Move X8, [X0+184]
	053 Move [X8+8], X19
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Return 
	059 Move X0, 0x2323000
	060 Move X0, [X0+1432]
	061 Call 0x1C17D08
	062 Call 0x19913D0
	063 Move X0, X19
	064 Move X1, X31
	065 Call Object.Destroy, X0
	066 Move X0, 0x2323000
	067 Move X0, [X0+2000]
	068 Call 0x1C17D08
	069 Call 0x1C17F10
	070 Move X19, X0
	071 Move X0, 0x2328000
	072 Move X0, [X0+1288]
	073 Call 0x1C17D08
	074 Move X1, X0
	075 Move X0, X19
	076 Move X2, X31
	077 Call Exception..ctor, X0, X1
	078 Move X0, 0x2328000
	079 Move X0, [X0+1296]
	080 Call 0x1C17D08
	081 Move X1, X0
	082 Move X0, X19
	083 Call 0x1C17DEC

Method: System.Void OnDestroy()

Disassembly:
	0x01DD1218 MOV V8.16B, V0.16B
	0x01DD121C MOV V9.16B, V1.16B
	0x01DD1220 MOV V11.16B, V2.16B
	0x01DD1224 BL 0x3C35CB8
	0x01DD1228 LDR X8, [X20]
	0x01DD122C MOV W20, W0
	0x01DD1230 LDR W9, [X8 + 0xE0]
	0x01DD1234 CBNZ W9, 0x1DD1240
	0x01DD1238 MOV X0, X8
	0x01DD123C BL 0x1C16DFC
	0x01DD1240 MOV V0.16B, V8.16B
	0x01DD1244 MOV V1.16B, V9.16B
	0x01DD1248 MOV V2.16B, V11.16B
	0x01DD124C MOV V3.16B, V10.16B
	0x01DD1250 MOV W0, W20
	0x01DD1254 MOV X1, X31
	0x01DD1258 BL 0x3C8D090
	0x01DD125C CBZ X0, 0x1DD12F4
	0x01DD1260 LDR X8, [X0 + 0x18]
	0x01DD1264 MOV X20, X0
	0x01DD1268 CBZ X8, 0x1DD12D8
	0x01DD126C CMP W8, 0x1
	0x01DD1270 B.LT 0x1DD12D8
	0x01DD1274 ADRP X23, 0x2327000
	0x01DD1278 LDR X23, [X23 + 0x5C0]
	0x01DD127C MOV X21, X31
	0x01DD1280 ADD X22, X20, 0x20
	0x01DD1284 CMP W21, W8
	0x01DD1288 B.CS 0x1DD12F8
	0x01DD128C LDR X0, [X22, X21, LSL #3]
	0x01DD1290 CBZ X0, 0x1DD12F4
	0x01DD1294 MOV X1, X31
	0x01DD1298 BL 0x3C32ECC
	0x01DD129C CBZ X0, 0x1DD12F4
	0x01DD12A0 LDR X2, [X23]
	0x01DD12A4 ADD X1, X31, 0x8
	0x01DD12A8 BL 0x21E6600
	0x01DD12AC TBNZ X0, 0x0, 0x1DD12C4
	0x01DD12B0 LDR W8, [X20 + 0x18]
	0x01DD12B4 ADD X21, X21, 0x1
	0x01DD12B8 CMP W21, W8
	0x01DD12BC B.LT 0x1DD1284
	0x01DD12C0 B 0x1DD12D8
	0x01DD12C4 LDR X8, [X31 + 0x8]
	0x01DD12C8 MOVZ W1, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2608000
	006 Move X21, 0x2326000
	007 Move W8, [X20+3053]
	008 Move X21, [X21+2680]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x2328000
	015 Move X0, [X0+1304]
	016 Call 0x1C17CF4
	017 Move X0, 0x2326000
	018 Move X0, [X0+2680]
	019 Call 0x1C17CF4
	020 Move X0, 0x2328000
	021 Move X0, [X0+208]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+3053], W8
	025 Move X0, [X21]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Compare X19, 0
	031 JumpIfEqual {57}
	032 Move W8, [X19+48]
	033 Move X20, 0x2328000
	034 Move X20, [X20+208]
	035 Or W8, W8, 8
	036 Move [X19+48], W8
	037 Move X0, [X20]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X20]
	043 Move X8, [X0+184]
	044 Move X0, [X8]
	045 Move [X8+8], X31
	046 Compare X0, 0
	047 JumpIfEqual {57}
	048 Move X8, 0x2328000
	049 Move X8, [X8+1304]
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X1, [X8]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Call Dictionary`2<Int32Enum, Object>.Clear, X0
	056 Return 
	057 Call 0x1C17F20

Method: System.Void GeneratePrefab(AnimalCompany.PrefabGenerator/PrefabType prefabType, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, System.Boolean onGround = False)

Disassembly:
	0x01DC2C58 STP X30, X21, [X31 + 0x10]
	0x01DC2C5C STP X20, X19, [X31 + 0x20]
	0x01DC2C60 ADRP X21, 0x2616000
	0x01DC2C64 ADRP X20, 0x2333000
	0x01DC2C68 LDRB W8, [X21 + 0xB88]
	0x01DC2C6C LDR X20, [X20 + 0x7C8]
	0x01DC2C70 MOV V8.16B, V0.16B
	0x01DC2C74 MOV W19, W1
	0x01DC2C78 TBNZ X8, 0x0, 0x1DC2C90
	0x01DC2C7C ADRP X0, 0x2333000
	0x01DC2C80 LDR X0, [X0 + 0x7C8]
	0x01DC2C84 BL 0x1C16CF4
	0x01DC2C88 MOVZ W8, 0x1
	0x01DC2C8C STRB W8, [X21 + 0xB88]
	0x01DC2C90 LDR X0, [X20]
	0x01DC2C94 LDR W8, [X0 + 0xE0]
	0x01DC2C98 CBNZ W8, 0x1DC2CA4
	0x01DC2C9C BL 0x1C16DFC
	0x01DC2CA0 LDR X0, [X20]
	0x01DC2CA4 LDR X8, [X0 + 0xB8]
	0x01DC2CA8 LDR X8, [X8 + 0x30]
	0x01DC2CAC CBZ X8, 0x1DC2CD4
	0x01DC2CB0 LDR X3, [X8 + 0x18]
	0x01DC2CB4 LDR X0, [X8 + 0x40]
	0x01DC2CB8 LDR X2, [X8 + 0x28]
	0x01DC2CBC AND W1, W19, 0x1
	0x01DC2CC0 LDP X20, X19, [X31 + 0x20]
	0x01DC2CC4 LDP X30, X21, [X31 + 0x10]
	0x01DC2CC8 MOV V0.16B, V8.16B
	0x01DC2CCC LDR V8, [X31], #0x30
	0x01DC2CD0 BR X3
	0x01DC2CD4 LDP X20, X19, [X31 + 0x20]
	0x01DC2CD8 LDP X30, X21, [X31 + 0x10]
	0x01DC2CDC LDR V8, [X31], #0x30
	0x01DC2CE0 RET
	0x01DC2CE4 STR X30, [X31 - 0x30]!
	0x01DC2CE8 STP X22, X21, [X31 + 0x10]
	0x01DC2CEC STP X20, X19, [X31 + 0x20]
	0x01DC2CF0 ADRP X22, 0x2616000
	0x01DC2CF4 ADRP X21, 0x2333000
	0x01DC2CF8 LDRB W8, [X22 + 0xB89]
	0x01DC2CFC LDR X21, [X21 + 0x7C8]
	0x01DC2D00 MOV W19, W1
	0x01DC2D04 MOV X20, X0
	0x01DC2D08 TBNZ X8, 0x0, 0x1DC2D20
	0x01DC2D0C ADRP X0, 0x2333000
	0x01DC2D10 LDR X0, [X0 + 0x7C8]
	0x01DC2D14 BL 0x1C16CF4
	0x01DC2D18 MOVZ W8, 0x1
	0x01DC2D1C STRB W8, [X22 + 0xB89]
	0x01DC2D20 STR W19, [X20 + 0x130]
	0x01DC2D24 LDR X0, [X21]
	0x01DC2D28 LDR W8, [X0 + 0xE0]
	0x01DC2D2C CBNZ W8, 0x1DC2D38
	0x01DC2D30 BL 0x1C16DFC
	0x01DC2D34 LDR X0, [X21]
	0x01DC2D38 LDR X8, [X0 + 0xB8]
	0x01DC2D3C LDR X8, [X8 + 0x40]
	0x01DC2D40 CBZ X8, 0x1DC2D64
	0x01DC2D44 LDR X3, [X8 + 0x18]
	0x01DC2D48 LDR X0, [X8 + 0x40]
	0x01DC2D4C LDR X2, [X8 + 0x28]
	0x01DC2D50 MOV W1, W19
	0x01DC2D54 LDP X20, X19, [X31 + 0x20]
	0x01DC2D58 LDP X22, X21, [X31 + 0x10]
	0x01DC2D5C LDR X30, [X31], #0x30
	0x01DC2D60 BR X3
	0x01DC2D64 LDP X20, X19, [X31 + 0x20]
	0x01DC2D68 LDP X22, X21, [X31 + 0x10]
	0x01DC2D6C LDR X30, [X31], #0x30
	0x01DC2D70 RET
	0x01DC2D74 STR X30, [X31 - 0x10]!
	0x01DC2D78 LDR X0, [X0 + 0x20]
	0x01DC2D7C CBZ X0, 0x1DC2D8C
	0x01DC2D80 MOV X1, X31
	0x01DC2D84 LDR X30, [X31], #0x10
	0x01DC2D88 B 0x1E1AB48
	0x01DC2D8C BL 0x1C16F20
	0x01DC2D90 STR X30, [X31 - 0x10]!
	0x01DC2D94 LDR X0, [X0 + 0x20]
	0x01DC2D98 CBZ X0, 0x1DC2DA8
	0x01DC2D9C MOV X1, X31
	0x01DC2DA0 LDR X30, [X31], #0x10
	0x01DC2DA4 B 0x1E1AB28
	0x01DC2DA8 BL 0x1C16F20
	0x01DC2DAC STR X30, [X31 - 0x10]!
	0x01DC2DB0 LDR X0, [X0 + 0x20]
	0x01DC2DB4 CBZ X0, 0x1DC2DC4
	0x01DC2DB8 MOV X1, X31
	0x01DC2DBC LDR X30, [X31], #0x10
	0x01DC2DC0 B 0x1E1AC3C
	0x01DC2DC4 BL 0x1C16F20
	0x01DC2DC8 SUB X31, X31, 0x50
	0x01DC2DCC STR D8, [X31 + 0x20]
	0x01DC2DD0 STP X30, X21, [X31 + 0x30]
	0x01DC2DD4 STP X20, X19, [X31 + 0x40]
	0x01DC2DD8 ADRP X21, 0x2616000
	0x01DC2DDC LDRB W8, [X21 + 0xB8A]
	0x01DC2DE0 MOV V8.16B, V0.16B
	0x01DC2DE4 MOV W20, W1
	0x01DC2DE8 MOV X19, X0
	0x01DC2DEC TBNZ X8, 0x0, 0x1DC2E4C
	0x01DC2DF0 ADRP X0, 0x2336000
	0x01DC2DF4 LDR X0, [X0 + 0xF0]
	0x01DC2DF8 BL 0x1C16CF4
	0x01DC2DFC ADRP X0, 0x2336000
	0x01DC2E00 LDR X0, [X0 + 0xF8]
	0x01DC2E04 BL 0x1C16CF4
	0x01DC2E08 ADRP X0, 0x2336000
	0x01DC2E0C LDR X0, [X0 + 0x100]
	0x01DC2E10 BL 0x1C16CF4
	0x01DC2E14 ADRP X0, 0x2336000
	0x01DC2E18 LDR X0, [X0 + 0x108]
	0x01DC2E1C BL 0x1C16CF4
	0x01DC2E20 ADRP X0, 0x2336000
	0x01DC2E24 LDR X0, [X0 + 0x110]
	0x01DC2E28 BL 0x1C16CF4
	0x01DC2E2C ADRP X0, 0x2333000
	0x01DC2E30 LDR X0, [X0 + 0x7C8]
	0x01DC2E34 BL 0x1C16CF4
	0x01DC2E38 ADRP X0, 0x2336000
	0x01DC2E3C LDR X0, [X0 + 0x118]
	0x01DC2E40 BL 0x1C16CF4
	0x01DC2E44 MOVZ W8, 0x1
	0x01DC2E48 STRB W8, [X21 + 0xB8A]
	0x01DC2E4C STP X31, X31, [X31 + 0x8]
	0x01DC2E50 STR X31, [X31 + 0x18]
	0x01DC2E54 LDR X0, [X19 + 0xD0]
	0x01DC2E58 CBZ X0, 0x1DC2F4C
	0x01DC2E5C ADRP X8, 0x2336000
	0x01DC2E60 LDR X8, [X8 + 0xF8]
	0x01DC2E64 MOV W1, W20
	0x01DC2E68 MOV V0.16B, V8.16B
	0x01DC2E6C LDR X2, [X8]
	0x01DC2E70 BL 0x2A47E1C
	0x01DC2E74 LDR X0, [X19 + 0xD0]
	0x01DC2E78 CBZ X0, 0x1DC2F4C
	0x01DC2E7C ADRP X8, 0x2336000
	0x01DC2E80 LDR X8, [X8 + 0xF0]
	0x01DC2E84 LDR X1, [X8]
	0x01DC2E88 BL 0x2A47CD4
	0x01DC2E8C CBZ X0, 0x1DC2F4C
	0x01DC2E90 ADRP X8, 0x2336000
	0x01DC2E94 LDR X8, [X8 + 0x118]
	0x01DC2E98 ADRP X21, 0x2336000
	0x01DC2E9C ADRP X20, 0x2336000
	0x01DC2EA0 LDR X1, [X8]
	0x01DC2EA4 LDR X21, [X21 + 0x108]
	0x01DC2EA8 LDR X20, [X20 + 0x100]
	0x01DC2EAC ADD X8, X31, 0x8
	0x01DC2EB0 BL 0x2751C88
	0x01DC2EB4 FMOV S8, W31
	0x01DC2EB8 LDR X1, [X21]
	0x01DC2EBC ADD X0, X31, 0x8
	0x01DC2EC0 BL 0x2BFF198
	0x01DC2EC4 TBZ X0, 0x0, 0x1DC2ED4
	0x01DC2EC8 LDR V0, [X31 + 0x18]
	0x01DC2ECC FADD S8, S8, S0
	0x01DC2ED0 B 0x1DC2EB8
	0x01DC2ED4 LDR X1, [X20]
	0x01DC2ED8 ADD X0, X31, 0x8
	0x01DC2EDC BL 0x2BFF194
	0x01DC2EE0 LDR V0, [X19 + 0xD8]
	0x01DC2EE4 FCMP S8, S0
	0x01DC2EE8 B.EQ 0x1DC2F2C
	0x01DC2EEC STR S8, [X19 + 0xD8]
	0x01DC2EF0 ADRP X20, 0x2333000
	0x01DC2EF4 LDR X20, [X20 + 0x7C8]
	0x01DC2EF8 LDR X0, [X20]
	0x01DC2EFC LDR W8, [X0 + 0xE0]
	0x01DC2F00 CBNZ W8, 0x1DC2F0C
	0x01DC2F04 BL 0x1C16DFC
	0x01DC2F08 LDR X0, [X20]
	0x01DC2F0C LDR X8, [X0 + 0xB8]
	0x01DC2F10 LDR X8, [X8 + 0x38]
	0x01DC2F14 CBZ X8, 0x1DC2F2C
	0x01DC2F18 LDR X9, [X8 + 0x18]
	0x01DC2F1C LDR X0, [X8 + 0x40]
	0x01DC2F20 LDR X1, [X8 + 0x28]
	0x01DC2F24 MOV V0.16B, V8.16B
	0x01DC2F28 BLR X9
	0x01DC2F2C LDR X8, [X19 + 0x20]
	0x01DC2F30 CBZ X8, 0x1DC2F4C
	0x01DC2F34 STR S8, [X8 + 0x1E8]
	0x01DC2F38 LDP X20, X19, [X31 + 0x40]
	0x01DC2F3C LDP X30, X21, [X31 + 0x30]
	0x01DC2F40 LDR V8, [X31 + 0x20]
	0x01DC2F44 ADD X31, X31, 0x50
	0x01DC2F48 RET
	0x01DC2F4C BL 0x1C16F20
	0x01DC2F50 CMP W1, 0x1
	0x01DC2F54 MOV X21, X0
	0x01DC2F58 B.NE 0x1DC2F8C
	0x01DC2F5C MOV X0, X21
	0x01DC2F60 BL 0x3EB1AD0
	0x01DC2F64 LDR X20, [X0]
	0x01DC2F68 BL 0x3EB1AE0
	0x01DC2F6C ADRP X8, 0x2336000
	0x01DC2F70 LDR X8, [X8 + 0x100]
	0x01DC2F74 ADD X0, X31, 0x8
	0x01DC2F78 LDR X1, [X8]
	0x01DC2F7C BL 0x2BFF194
	0x01DC2F80 CBZ X20, 0x1DC2EE0
	0x01DC2F84 MOV X0, X20
	0x01DC2F88 BL 0x1C16F18
	0x01DC2F8C MOV X20, X31
	0x01DC2F90 B 0x1DC2F98
	0x01DC2F94 MOV X21, X0
	0x01DC2F98 ADRP X8, 0x2336000
	0x01DC2F9C LDR X8, [X8 + 0x100]
	0x01DC2FA0 LDR X1, [X8]
	0x01DC2FA4 ADD X0, X31, 0x8
	0x01DC2FA8 BL 0x2BFF194
	0x01DC2FAC CBNZ X20, 0x1DC2FB8
	0x01DC2FB0 MOV X0, X21
	0x01DC2FB4 BL 0x1D2C690
	0x01DC2FB8 MOV X0, X20
	0x01DC2FBC BL 0x1C16F18
	0x01DC2FC0 BL 0x1990590
	0x01DC2FC4 CBZ W1, 0x1DC2FD0
	0x01DC2FC8 STR W2, [X0 + 0xF4]
	0x01DC2FCC B 0x1DC2FD4
	0x01DC2FD0 STR W2, [X0 + 0xF0]
	0x01DC2FD4 LDR X1, [X0 + 0xE8]
	0x01DC2FD8 B 0x1DC2FDC
	0x01DC2FDC STP X30, X21, [X31 - 0x20]!
	0x01DC2FE0 STP X20, X19, [X31 + 0x10]
	0x01DC2FE4 ADRP X21, 0x2616000
	0x01DC2FE8 LDRB W8, [X21 + 0xB8C]
	0x01DC2FEC MOV X19, X1
	0x01DC2FF0 MOV X20, X0
	0x01DC2FF4 TBNZ X8, 0x0, 0x1DC300C
	0x01DC2FF8 ADRP X0, 0x2333000
	0x01DC2FFC LDR X0, [X0 + 0x7C8]
	0x01DC3000 BL 0x1C16CF4
	0x01DC3004 MOVZ W8, 0x1
	0x01DC3008 STRB W8, [X21 + 0xB8C]
	0x01DC300C LDR X1, [X20 + 0xE8]
	0x01DC3010 CBZ X1, 0x1DC31A4
	0x01DC3014 LDR W2, [X1 + 0x18]
	0x01DC3018 MOV X0, X19
	0x01DC301C MOV X3, X31
	0x01DC3020 BL 0x33A0C7C
	0x01DC3024 LDR W3, [X20 + 0xF0]
	0x01DC3028 CBZ W3, 0x1DC3038
	0x01DC302C MOV X1, X19
	0x01DC3030 MOV W2, W31
	0x01DC3034 BL 0x1DC36C8
	0x01DC3038 LDR W3, [X20 + 0xF4]
	0x01DC303C CBZ W3, 0x1DC304C
	0x01DC3040 MOVZ W2, 0x3
	0x01DC3044 MOV X1, X19
	0x01DC3048 BL 0x1DC36C8
	0x01DC304C CBZ X19, 0x1DC31A4
	0x01DC3050 LDR W8, [X19 + 0x18]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+80], D15
	003 Move [X31+88], D14
	004 Move [X31+96], D13
	005 Move [X31+104], D12
	006 Move [X31+112], D11
	007 Move [X31+120], D10
	008 Move [X31+128], D9
	009 Move [X31+136], D8
	010 Move [X31+144], X30
	011 Move [X31+152], X25
	012 Move [X31+160], X24
	013 Move [X31+168], X23
	014 Move [X31+176], X22
	015 Move [X31+184], X21
	016 Move [X31+192], X20
	017 Move [X31+200], X19
	018 Move X21, 0x2617000
	019 Move X22, 0x2337000
	020 Move W8, [X21+3054]
	021 Move X22, [X22+208]
	022 Move W20, W1
	023 Move V15, V6
	024 Move V8, V5
	025 Move V10, V4
	026 Move V11, V3
	027 Move V14, V2
	028 Move V13, V1
	029 Move V12, V0
	030 Move W19, W0
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {46}
	035 Move X0, 0x2332000
	036 Move X0, [X0+1432]
	037 Call 0x1C17CF4
	038 Move X0, 0x2332000
	039 Move X0, [X0+1528]
	040 Call 0x1C17CF4
	041 Move X0, 0x2337000
	042 Move X0, [X0+208]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X21+3054], W8
	046 Move X0, [X22]
	047 NotImplemented "Instruction MOVI not yet implemented."
	048 Move [X31+60], V0
	049 Move [X31+32], V0
	050 Move [X31+40], V0
	051 Move X23, 0x2332000
	052 Move W8, [X0+224]
	053 Move X23, [X23+1432]
	054 Compare W8, 0
	055 JumpIfNotEqual {58}
	056 Call 0x1C17DFC
	057 Move X0, [X22]
	058 Move X8, [X23]
	059 Move X9, [X0+184]
	060 Move W10, [X8+224]
	061 Move X21, [X9+8]
	062 Compare W10, 0
	063 JumpIfNotEqual {66}
	064 Move X0, X8
	065 Call 0x1C17DFC
	066 Move X0, X21
	067 Move X1, X31
	068 Move X2, X31
	069 Call Object.op_Equality, X0, X1
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {296}
	074 Move X0, [X22]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {80}
	078 Call 0x1C17DFC
	079 Move X0, [X22]
	080 Move X8, [X0+184]
	081 Move X8, [X8+8]
	082 Compare X8, 0
	083 JumpIfEqual {314}
	084 Call PrefabGenerator.get_runner, X0
	085 Move X8, [X23]
	086 Move X21, X0
	087 Move W9, [X8+224]
	088 Compare W9, 0
	089 JumpIfNotEqual {92}
	090 Move X0, X8
	091 Call 0x1C17DFC
	092 Move X0, X21
	093 Move X1, X31
	094 Move X2, X31
	095 Call Object.op_Equality, X0, X1
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfEqual {296}
	100 Move TEMP, X20
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfNotEqual {276}
	104 Move X24, 0x2617000
	105 Move W8, [X24+2749]
	106 Move [X31+24], S15
	107 Move [X31+32], S8
	108 Compare W8, 0
	109 JumpIfNotEqual {115}
	110 Move X0, 0x2332000
	111 Move X0, [X0+1440]
	112 Call 0x1C17CF4
	113 Move W8, 1
	114 Move [X24+2749], W8
	115 Move X20, 0x2332000
	116 Move X20, [X20+1440]
	117 Move X0, [X22]
	118 Move X8, [X20]
	119 Move W9, [X0+224]
	120 Move X8, [X8+184]
	121 Move S15, [X8+36]
	122 Move S8, [X8+40]
	123 Move V9, [X8+44]
	124 Compare W9, 0
	125 JumpIfNotEqual {128}
	126 Call 0x1C17DFC
	127 Move X0, [X22]
	128 Move X8, [X0+184]
	129 Move X8, [X8+8]
	130 Compare X8, 0
	131 JumpIfEqual {314}
	132 Move W0, [X8+80]
	133 Move X1, X31
	134 Call LayerMask.op_Implicit, X0
	135 Move X25, 0x2332000
	136 Move X25, [X25+1528]
	137 Move W21, W0
	138 Move X8, [X25]
	139 Move W9, [X8+224]
	140 Compare W9, 0
	141 JumpIfNotEqual {144}
	142 Move X0, X8
	143 Call 0x1C17DFC
	144 Add X0, X31, 32
	145 Move S6, 10
	146 Move V0, V12
	147 Move V1, V13
	148 Move V2, V14
	149 Move V3, V15
	150 Move V4, V8
	151 Move V5, V9
	152 Move W1, W21
	153 Move X2, X31
	154 Call Physics.Raycast, X0, X1, X2, V0, X3
	155 Move TEMP, X0
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfNotEqual {175}
	159 Add X0, X31, 32
	160 Move X1, X31
	161 Call RaycastHit.get_point, X0
	162 Move X21, 0x2617000
	163 Move W8, [X21+1926]
	164 Move V15, [X31+24]
	165 Move V8, V0
	166 Move V9, V1
	167 Move V14, V2
	168 Compare W8, 0
	169 JumpIfNotEqual {262}
	170 Move X0, 0x2332000
	171 Move X0, [X0+1440]
	172 Call 0x1C17CF4
	173 Move W8, 1
	174 Move [X21+1926], W8
	175 Move X23, 0x2617000
	176 Move W8, [X23+1926]
	177 Compare W8, 0
	178 JumpIfNotEqual {184}
	179 Move X0, 0x2332000
	180 Move X0, [X0+1440]
	181 Call 0x1C17CF4
	182 Move W8, 1
	183 Move [X23+1926], W8
	184 Move X8, [X20]
	185 Move W9, [X24+2749]
	186 Move X8, [X8+184]
	187 Move S8, [X8+24]
	188 Move S15, [X8+28]
	189 Move V1, [X8+32]
	190 Compare W9, 0
	191 JumpIfNotEqual {200}
	192 Move X0, X20
	193 Move V9, V1
	194 Call 0x1C17CF4
	195 Move X8, [X20]
	196 Move W9, 1
	197 Move [X24+2749], W9
	198 Move V1, V9
	199 Move X8, [X8+184]
	200 Move X0, [X22]
	201 Move V2, [X8+36]
	202 Move V0, [X8+40]
	203 Move W9, [X0+224]
	204 Move [X31+16], S2
	205 Move [X31+24], S0
	206 Move V0, [X8+44]
	207 Move [X31+12], S0
	208 Compare W9, 0
	209 JumpIfNotEqual {214}
	210 Move V9, V1
	211 Call 0x1C17DFC
	212 Move X0, [X22]
	213 Move V1, V9
	214 Move X8, [X0+184]
	215 Move X8, [X8+8]
	216 Compare X8, 0
	217 JumpIfEqual {314}
	218 Move W0, [X8+80]
	219 Move X1, X31
	220 Add S9, S12, S8
	221 Add S15, S13, S15
	222 Add S8, S14, S1
	223 Call LayerMask.op_Implicit, X0
	224 Move X8, [X25]
	225 Move W21, W0
	226 Move W9, [X8+224]
	227 Compare W9, 0
	228 JumpIfNotEqual {231}
	229 Move X0, X8
	230 Call 0x1C17DFC
	231 Move S3, [X31+16]
	232 Move S4, [X31+20]
	233 Move V5, [X31+12]
	234 Add X0, X31, 32
	235 Move S6, 10
	236 Move V0, V9
	237 Move V1, V15
	238 Move V2, V8
	239 Move W1, W21
	240 Move X2, X31
	241 Call Physics.Raycast, X0, X1, X2, V0, X3
	242 Move S15, [X31+24]
	243 Move S8, [X31+28]
	244 Move TEMP, X0
	245 And TEMP, TEMP, 1
	246 Compare TEMP, 1
	247 JumpIfNotEqual {276}
	248 Add X0, X31, 32
	249 Move X1, X31
	250 Call RaycastHit.get_point, X0
	251 Move W8, [X23+1926]
	252 Move V8, V0
	253 Move V9, V1
	254 Move V14, V2
	255 Compare W8, 0
	256 JumpIfNotEqual {262}
	257 Move X0, 0x2332000
	258 Move X0, [X0+1440]
	259 Call 0x1C17CF4
	260 Move W8, 1
	261 Move [X23+1926], W8
	262 Move X8, [X20]
	263 Move X9, -19755008
	264 Move V0, [X9+512]
	265 Move X8, [X8+184]
	266 Move S1, [X8+24]
	267 Move S2, [X8+28]
	268 Move V3, [X8+32]
	269 Multiply S1, S1, S0
	270 Add S12, S8, S1
	271 Move V8, [X31+28]
	272 Multiply S2, S2, S0
	273 Multiply S0, S3, S0
	274 Add S13, S9, S2
	275 Add S14, S14, S0
	276 Move X0, [X22]
	277 Move W8, [X0+224]
	278 Compare W8, 0
	279 JumpIfNotEqual {282}
	280 Call 0x1C17DFC
	281 Move X0, [X22]
	282 Move X8, [X0+184]
	283 Move X8, [X8+8]
	284 Compare X8, 0
	285 JumpIfEqual {314}
	286 Call PrefabGenerator.get_runner, X0
	287 Move W1, W19
	288 Move V0, V12
	289 Move V1, V13
	290 Move V2, V14
	291 Move V3, V11
	292 Move V4, V10
	293 Move V5, V8
	294 Move V6, V15
	295 Call PrefabGenerator.RPC_GeneratePrefab, X0, X1, X2, X3
	296 Move X20, [X31+192]
	297 Move X19, [X31+200]
	298 Move X22, [X31+176]
	299 Move X21, [X31+184]
	300 Move X24, [X31+160]
	301 Move X23, [X31+168]
	302 Move X30, [X31+144]
	303 Move X25, [X31+152]
	304 Move D9, [X31+128]
	305 Move D8, [X31+136]
	306 Move D11, [X31+112]
	307 Move D10, [X31+120]
	308 Move D13, [X31+96]
	309 Move D12, [X31+104]
	310 Move D15, [X31+80]
	311 Move D14, [X31+88]
	312 Add X31, X31, 208
	313 Return 
	314 Call 0x1C17F20

Method: System.Void RPC_GeneratePrefab(Fusion.NetworkRunner runner, AnimalCompany.PrefabGenerator/PrefabType prefabType, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)

Disassembly:
	0x01DD12CC MOV X0, X19
	0x01DD12D0 STR X8, [X19 + 0xB0]
	0x01DD12D4 BL 0x1DD1090
	0x01DD12D8 LDP X20, X19, [X31 + 0x50]
	0x01DD12DC LDP X22, X21, [X31 + 0x40]
	0x01DD12E0 LDP X30, X23, [X31 + 0x30]
	0x01DD12E4 LDP D9, D8, [X31 + 0x20]
	0x01DD12E8 LDP D11, D10, [X31 + 0x10]
	0x01DD12EC ADD X31, X31, 0x60
	0x01DD12F0 RET
	0x01DD12F4 BL 0x1C16F20
	0x01DD12F8 BL 0x1C16F28
	0x01DD12FC SUB X31, X31, 0xC0
	0x01DD1300 STP D13, D12, [X31 + 0x60]
	0x01DD1304 STP D11, D10, [X31 + 0x70]
	0x01DD1308 STP D9, D8, [X31 + 0x80]
	0x01DD130C STR X30, [X31 + 0x90]
	0x01DD1310 STP X22, X21, [X31 + 0xA0]
	0x01DD1314 STP X20, X19, [X31 + 0xB0]
	0x01DD1318 ADRP X20, 0x2607000
	0x01DD131C LDRB W8, [X20 + 0xBF9]
	0x01DD1320 MOV X19, X0
	0x01DD1324 TBNZ X8, 0x0, 0x1DD136C
	0x01DD1328 ADRP X0, 0x2322000
	0x01DD132C LDR X0, [X0 + 0x598]
	0x01DD1330 BL 0x1C16CF4
	0x01DD1334 ADRP X0, 0x2327000
	0x01DD1338 LDR X0, [X0 + 0x5D0]
	0x01DD133C BL 0x1C16CF4
	0x01DD1340 ADRP X0, 0x2327000
	0x01DD1344 LDR X0, [X0 + 0x5D8]
	0x01DD1348 BL 0x1C16CF4
	0x01DD134C ADRP X0, 0x2327000
	0x01DD1350 LDR X0, [X0 + 0x5C8]
	0x01DD1354 BL 0x1C16CF4
	0x01DD1358 ADRP X0, 0x2327000
	0x01DD135C LDR X0, [X0 + 0x5E0]
	0x01DD1360 BL 0x1C16CF4
	0x01DD1364 MOVZ W8, 0x1
	0x01DD1368 STRB W8, [X20 + 0xBF9]
	0x01DD136C MOVI V0.2D, 0x0
	0x01DD1370 STR W31, [X31 + 0x50]
	0x01DD1374 STP V0, V0, [X31 + 0x30]
	0x01DD1378 LDR X0, [X19 + 0x90]
	0x01DD137C CBZ X0, 0x1DD1748
	0x01DD1380 ADRP X8, 0x2327000
	0x01DD1384 LDR X8, [X8 + 0x5C8]
	0x01DD1388 ADRP X20, 0x2322000
	0x01DD138C MOVZ W2, 0x1
	0x01DD1390 MOV X3, X31
	0x01DD1394 LDR X1, [X8]
	0x01DD1398 LDR X20, [X20 + 0x598]
	0x01DD139C BL 0x3BF6010
	0x01DD13A0 LDR X0, [X20]
	0x01DD13A4 LDR X20, [X19 + 0xB0]
	0x01DD13A8 LDR W8, [X0 + 0xE0]
	0x01DD13AC CBNZ W8, 0x1DD13B4
	0x01DD13B0 BL 0x1C16DFC
	0x01DD13B4 MOV X0, X20
	0x01DD13B8 MOV X1, X31
	0x01DD13BC MOV X2, X31
	0x01DD13C0 BL 0x3C3883C
	0x01DD13C4 TBZ X0, 0x0, 0x1DD13D4
	0x01DD13C8 MOV X0, X19
	0x01DD13CC MOV W1, W31
	0x01DD13D0 B 0x1DD1724
	0x01DD13D4 LDR X0, [X19 + 0xB0]
	0x01DD13D8 CBZ X0, 0x1DD1748
	0x01DD13DC MOV X1, X31
	0x01DD13E0 BL 0x1DAEC64
	0x01DD13E4 TBNZ X0, 0x0, 0x1DD1718
	0x01DD13E8 LDR X0, [X19 + 0x90]
	0x01DD13EC CBZ X0, 0x1DD1748
	0x01DD13F0 ADD X8, X31, 0x8
	0x01DD13F4 MOV W1, W31
	0x01DD13F8 MOV X2, X31
	0x01DD13FC BL 0x3BF66CC
	0x01DD1400 ADRP X9, 0x2327000
	0x01DD1404 LDUR V0, [X31 + 0x8]
	0x01DD1408 LDUR V1, [X31 + 0x18]
	0x01DD140C LDR W8, [X31 + 0x28]
	0x01DD1410 LDR X9, [X9 + 0x5E0]
	0x01DD1414 ADD X0, X31, 0x30
	0x01DD1418 MOV X2, X31
	0x01DD141C STP V0, V1, [X31 + 0x30]
	0x01DD1420 LDR X1, [X9]
	0x01DD1424 STR W8, [X31 + 0x50]
	0x01DD1428 BL 0x3BF5CF4
	0x01DD142C LDR X20, [X19 + 0xA0]
	0x01DD1430 TBZ X0, 0x0, 0x1DD1470
	0x01DD1434 LDR X0, [X19 + 0xB0]
	0x01DD1438 CBZ X0, 0x1DD1748
	0x01DD143C MOV X1, X31
	0x01DD1440 BL 0x3C32E90
	0x01DD1444 CBZ X0, 0x1DD1748
	0x01DD1448 MOV X1, X31
	0x01DD144C BL 0x3C3F58C
	0x01DD1450 CBZ X20, 0x1DD1748
	0x01DD1454 MOV X0, X20
	0x01DD1458 MOV X1, X31
	0x01DD145C BL 0x3BE13F8
	0x01DD1460 LDR X0, [X19 + 0xA0]
	0x01DD1464 CBZ X0, 0x1DD1748
	0x01DD1468 MOV W1, W31
	0x01DD146C B 0x1DD147C
	0x01DD1470 CBZ X20, 0x1DD1748
	0x01DD1474 MOVZ W1, 0x1
	0x01DD1478 MOV X0, X20
	0x01DD147C MOV X2, X31
	0x01DD1480 BL 0x3BE17B4
	0x01DD1484 MOV X0, X19
	0x01DD1488 MOV X1, X31
	0x01DD148C BL 0x3C32E90
	0x01DD1490 CBZ X0, 0x1DD1748
	0x01DD1494 MOV X1, X31
	0x01DD1498 BL 0x3C3F58C
	0x01DD149C LDR X0, [X19 + 0xB0]
	0x01DD14A0 CBZ X0, 0x1DD1748
	0x01DD14A4 MOV X1, X31
	0x01DD14A8 MOV V8.16B, V0.16B
	0x01DD14AC MOV V9.16B, V1.16B
	0x01DD14B0 MOV V10.16B, V2.16B
	0x01DD14B4 BL 0x3C32E90
	0x01DD14B8 CBZ X0, 0x1DD1748
	0x01DD14BC MOV X1, X31
	0x01DD14C0 BL 0x3C3F58C
	0x01DD14C4 ADRP X21, 0x2607000
	0x01DD14C8 LDRB W8, [X21 + 0x85C]
	0x01DD14CC MOV V11.16B, V0.16B
	0x01DD14D0 MOV V12.16B, V1.16B
	0x01DD14D4 MOV V13.16B, V2.16B
	0x01DD14D8 CBNZ W8, 0x1DD14F0
	0x01DD14DC ADRP X0, 0x2322000
	0x01DD14E0 LDR X0, [X0 + 0x5A8]
	0x01DD14E4 BL 0x1C16CF4
	0x01DD14E8 MOVZ W8, 0x1
	0x01DD14EC STRB W8, [X21 + 0x85C]
	0x01DD14F0 ADRP X22, 0x2322000
	0x01DD14F4 LDR X22, [X22 + 0x5A8]
	0x01DD14F8 FSUB S11, S8, S11
	0x01DD14FC FSUB S9, S9, S12
	0x01DD1500 FSUB S8, S10, S13
	0x01DD1504 LDR X0, [X22]
	0x01DD1508 LDR W8, [X0 + 0xE0]
	0x01DD150C CBNZ W8, 0x1DD1514
	0x01DD1510 BL 0x1C16DFC
	0x01DD1514 LDR V3, [X19 + 0xBC]
	0x01DD1518 FMUL S0, S11, S11
	0x01DD151C FMUL S1, S9, S9
	0x01DD1520 FMUL S2, S8, S8
	0x01DD1524 FADD S0, S0, S1
	0x01DD1528 FADD S0, S2, S0
	0x01DD152C FMOV S1, 1.5
	0x01DD1530 FSQRT S0, S0
	0x01DD1534 FMUL S1, S3, S1
	0x01DD1538 FCMP S0, S1
	0x01DD153C B.LE 0x1DD154C
	0x01DD1540 MOVZ W1, 0x2
	0x01DD1544 MOV X0, X19
	0x01DD1548 BL 0x1DD1090
	0x01DD154C MOV X0, X19
	0x01DD1550 MOV X1, X31
	0x01DD1554 BL 0x3C32E90
	0x01DD1558 CBZ X0, 0x1DD1748
	0x01DD155C MOV X1, X31
	0x01DD1560 BL 0x3C3F58C
	0x01DD1564 LDR X0, [X19 + 0xB0]
	0x01DD1568 CBZ X0, 0x1DD1748
	0x01DD156C MOV X1, X31
	0x01DD1570 MOV V8.16B, V0.16B
	0x01DD1574 MOV V9.16B, V1.16B
	0x01DD1578 MOV V10.16B, V2.16B
	0x01DD157C BL 0x3C32E90
	0x01DD1580 CBZ X0, 0x1DD1748
	0x01DD1584 MOV X1, X31
	0x01DD1588 BL 0x3C3F58C
	0x01DD158C LDRB W8, [X21 + 0x85C]
	0x01DD1590 MOV V11.16B, V0.16B
	0x01DD1594 MOV V12.16B, V1.16B
	0x01DD1598 MOV V13.16B, V2.16B
	0x01DD159C CBNZ W8, 0x1DD15B4
	0x01DD15A0 ADRP X0, 0x2322000
	0x01DD15A4 LDR X0, [X0 + 0x5A8]
	0x01DD15A8 BL 0x1C16CF4

ISIL:
	001 Move [X31-96], D14
	002 Move [X31+8], D13
	003 Move [X31+16], D12
	004 Move [X31+24], D11
	005 Move [X31+32], D10
	006 Move [X31+40], D9
	007 Move [X31+48], D8
	008 Move [X31+56], X30
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0x2608000
	014 Move X21, 0x2326000
	015 Move W8, [X22+3055]
	016 Move X21, [X21+2680]
	017 Move V8, V6
	018 Move V9, V5
	019 Move V10, V4
	020 Move V11, V3
	021 Move V12, V2
	022 Move V13, V1
	023 Move V14, V0
	024 Move W19, W1
	025 Move X20, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0x2326000
	031 Move X0, [X0+2680]
	032 Call 0x1C17CF4
	033 Move X0, 0x2323000
	034 Move X0, [X0+1432]
	035 Call 0x1C17CF4
	036 Move X0, 0x2328000
	037 Move X0, [X0+208]
	038 Call 0x1C17CF4
	039 Move X0, 0x2328000
	040 Move X0, [X0+1312]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X22+3055], W8
	044 Move X0, [X21]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X21]
	050 Move X8, [X0+184]
	051 Move W9, [X8+32]
	052 Compare W9, 0
	053 JumpIfEqual {135}
	054 Move W9, [X0+224]
	055 Compare W9, 0
	056 JumpIfNotEqual {60}
	057 Call 0x1C17DFC
	058 Move X8, [X21]
	059 Move X8, [X8+184]
	060 Move [X8+32], W31
	061 Move X21, 0x2323000
	062 Move X21, [X21+1432]
	063 Move X0, [X21]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X0, X20
	069 Move X1, X31
	070 Move X2, X31
	071 Call Object.op_Equality, X0, X1
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {197}
	076 Move X22, 0x2328000
	077 Move X22, [X22+208]
	078 Move X0, [X22]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {84}
	082 Call 0x1C17DFC
	083 Move X0, [X22]
	084 Move X8, [X21]
	085 Move X9, [X0+184]
	086 Move W10, [X8+224]
	087 Move X21, [X9+8]
	088 Compare W10, 0
	089 JumpIfNotEqual {92}
	090 Move X0, X8
	091 Call 0x1C17DFC
	092 Move X0, X21
	093 Move X1, X31
	094 Move X2, X31
	095 Call Object.op_Equality, X0, X1
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfEqual {197}
	100 Compare X20, 0
	101 JumpIfEqual {210}
	102 Move X0, X20
	103 Move X1, X31
	104 Call NetworkRunner.get_IsServer, X0
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {188}
	109 Move X0, [X22]
	110 Move W8, [X0+224]
	111 Compare W8, 0
	112 JumpIfNotEqual {114}
	113 Call 0x1C17DFC
	114 Move X0, X20
	115 Move W1, W19
	116 Move V1, V13
	117 Move V2, V12
	118 Move V3, V11
	119 Move V4, V10
	120 Move V5, V9
	121 Move V6, V8
	122 Move X20, [X31+80]
	123 Move X19, [X31+88]
	124 Move X22, [X31+64]
	125 Move X21, [X31+72]
	126 Move X30, [X31+56]
	127 Move D9, [X31+40]
	128 Move D8, [X31+48]
	129 Move D11, [X31+24]
	130 Move D10, [X31+32]
	131 Move D13, [X31+8]
	132 Move D12, [X31+16]
	133 Move V0, V14
	134 Move V14, [X31+96]
	135 Compare X20, 0
	136 JumpIfEqual {211}
	137 Move X0, X20
	138 Move X1, X31
	139 Call NetworkRunner.get_Stage, X0
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move X0, [X20+80]
	142 Compare X0, 0
	143 JumpIfEqual {210}
	144 Move X1, X31
	145 Call Simulation.HasAnyActiveConnections, X0
	146 Move TEMP, X0
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfNotEqual {61}
	150 Move X0, [X20+80]
	151 Move W1, 40
	152 Move X2, X31
	153 Call SimulationMessage.Allocate, X0, X1
	154 Move X8, [X21]
	155 Move X21, X0
	156 Move W9, [X8+224]
	157 Compare W9, 0
	158 JumpIfNotEqual {161}
	159 Move X0, X8
	160 Call 0x1C17DFC
	161 Move X8, 0x2328000
	162 Move X8, [X8+1312]
	163 Move X1, X31
	164 Move X0, [X8]
	165 Call NetworkBehaviourUtils.GetRpcStaticIndexOrThrow, X0
	166 Move X1, X31
	167 Call RpcHeader.Create, X0
	168 Move [X21+28], X0
	169 Move [X21+36], W19
	170 Move [X21+40], S14
	171 Move [X21+48], S13
	172 Move [X21+48], S12
	173 Move [X21+56], S11
	174 Move [X21+56], S10
	175 Move [X21+64], S9
	176 Move [X21+64], S8
	177 Compare X21, 0
	178 JumpIfEqual {210}
	179 Move W8, [X21+20]
	180 Move W9, 320
	181 Move X0, X20
	182 Move X1, X21
	183 Or W8, W8, 4
	184 Move X2, X31
	185 Move [X21+12], W9
	186 Move [X21+20], W8
	187 Call NetworkRunner.SendRpc, X0, X1
	188 Move W8, [X20+392]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move X0, X20
	191 Move X1, X31
	192 Call NetworkRunner.get_IsSharedModeMasterClient, X0
	193 Move TEMP, X0
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfEqual {109}
	197 Move X20, [X31+80]
	198 Move X19, [X31+88]
	199 Move X22, [X31+64]
	200 Move X21, [X31+72]
	201 Move X30, [X31+56]
	202 Move D9, [X31+40]
	203 Move D8, [X31+48]
	204 Move D11, [X31+24]
	205 Move D10, [X31+32]
	206 Move D13, [X31+8]
	207 Move D12, [X31+16]
	208 Move V14, [X31+96]
	209 Return 
	210 Call 0x1C17F20
	211 Move X0, 0x2328000
	212 Move X0, [X0+1320]
	213 Call 0x1C17D08
	214 Call 0x1C17F10
	215 Move X19, X0
	216 Move X0, 0x2328000
	217 Move X0, [X0+1328]
	218 Call 0x1C17D08
	219 Move X1, X0
	220 Move X0, X19
	221 Move X2, X31
	222 Call ArgumentNullException..ctor, X0, X1
	223 Move X0, 0x2328000
	224 Move X0, [X0+1336]
	225 Call 0x1C17D08
	226 Move X1, X0
	227 Move X0, X19
	228 Call 0x1C17DEC

Method: System.Void GeneratePrefabInternal(Fusion.NetworkRunner runner, AnimalCompany.PrefabGenerator/PrefabType prefabType, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)

Disassembly:
	0x01DD15AC MOVZ W8, 0x1
	0x01DD15B0 STRB W8, [X21 + 0x85C]
	0x01DD15B4 LDR X0, [X22]
	0x01DD15B8 FSUB S11, S8, S11
	0x01DD15BC FSUB S9, S9, S12
	0x01DD15C0 FSUB S8, S10, S13
	0x01DD15C4 LDR W8, [X0 + 0xE0]
	0x01DD15C8 CBNZ W8, 0x1DD15D0
	0x01DD15CC BL 0x1C16DFC
	0x01DD15D0 FMUL S0, S11, S11
	0x01DD15D4 FMUL S1, S9, S9
	0x01DD15D8 LDR V2, [X19 + 0xC0]
	0x01DD15DC FADD S0, S0, S1
	0x01DD15E0 FMUL S1, S8, S8
	0x01DD15E4 FADD S0, S1, S0
	0x01DD15E8 FSQRT S0, S0
	0x01DD15EC FCMP S0, S2
	0x01DD15F0 B.PL 0x1DD167C
	0x01DD15F4 LDR X0, [X19 + 0x90]
	0x01DD15F8 CBZ X0, 0x1DD1748
	0x01DD15FC ADRP X8, 0x2327000
	0x01DD1600 LDR X8, [X8 + 0x5D0]
	0x01DD1604 MOV X2, X31
	0x01DD1608 LDR X1, [X8]
	0x01DD160C BL 0x3BF6338
	0x01DD1610 LDR X20, [X19 + 0xB0]
	0x01DD1614 MOV X0, X19
	0x01DD1618 MOV X1, X31
	0x01DD161C BL 0x3C32E90
	0x01DD1620 LDR X8, [X19 + 0x40]
	0x01DD1624 MOV X2, X0
	0x01DD1628 CBZ X8, 0x1DD163C
	0x01DD162C LDR X8, [X8 + 0x20]
	0x01DD1630 CBZ X8, 0x1DD163C
	0x01DD1634 LDR W6, [X8]
	0x01DD1638 B 0x1DD1640
	0x01DD163C MOV X6, X31
	0x01DD1640 CBZ X20, 0x1DD1748
	0x01DD1644 ADRP X9, 0x2327000
	0x01DD1648 LDR X3, [X19 + 0x88]
	0x01DD164C LDR W8, [X19 + 0x68]
	0x01DD1650 LDR X9, [X9 + 0x5D8]
	0x01DD1654 MOVZ W1, 0x64
	0x01DD1658 MOV X0, X20
	0x01DD165C BFM X6, X8, 0x20, 0x1F
	0x01DD1660 LDR X5, [X9]
	0x01DD1664 MOV X4, X3
	0x01DD1668 MOV X7, X31
	0x01DD166C BL 0x1DB7644
	0x01DD1670 MOVZ W1, 0x2
	0x01DD1674 MOV X0, X19
	0x01DD1678 BL 0x1DD1090
	0x01DD167C MOV X0, X19
	0x01DD1680 MOV X1, X31
	0x01DD1684 BL 0x3C32E90
	0x01DD1688 CBZ X0, 0x1DD1748
	0x01DD168C MOV X1, X31
	0x01DD1690 BL 0x3C3F58C
	0x01DD1694 LDR X0, [X19 + 0xA8]
	0x01DD1698 CBZ X0, 0x1DD1748
	0x01DD169C MOV X1, X31
	0x01DD16A0 MOV V8.16B, V0.16B
	0x01DD16A4 MOV V9.16B, V1.16B
	0x01DD16A8 MOV V10.16B, V2.16B
	0x01DD16AC BL 0x3C3F58C
	0x01DD16B0 LDRB W8, [X21 + 0x85C]
	0x01DD16B4 MOV V11.16B, V0.16B
	0x01DD16B8 MOV V12.16B, V1.16B
	0x01DD16BC MOV V13.16B, V2.16B
	0x01DD16C0 CBNZ W8, 0x1DD16D8
	0x01DD16C4 ADRP X0, 0x2322000
	0x01DD16C8 LDR X0, [X0 + 0x5A8]
	0x01DD16CC BL 0x1C16CF4
	0x01DD16D0 MOVZ W8, 0x1
	0x01DD16D4 STRB W8, [X21 + 0x85C]
	0x01DD16D8 LDR X0, [X22]
	0x01DD16DC FSUB S11, S8, S11
	0x01DD16E0 FSUB S9, S9, S12
	0x01DD16E4 FSUB S8, S10, S13
	0x01DD16E8 LDR W8, [X0 + 0xE0]
	0x01DD16EC CBNZ W8, 0x1DD16F4
	0x01DD16F0 BL 0x1C16DFC
	0x01DD16F4 FMUL S0, S11, S11
	0x01DD16F8 FMUL S1, S9, S9
	0x01DD16FC LDR V2, [X19 + 0xB8]
	0x01DD1700 FADD S0, S0, S1
	0x01DD1704 FMUL S1, S8, S8
	0x01DD1708 FADD S0, S1, S0
	0x01DD170C FSQRT S0, S0
	0x01DD1710 FCMP S0, S2
	0x01DD1714 B.LE 0x1DD1728
	0x01DD1718 MOVZ W1, 0x2
	0x01DD171C MOV X0, X19
	0x01DD1720 STR X31, [X19 + 0xB0]
	0x01DD1724 BL 0x1DD1090
	0x01DD1728 LDP X20, X19, [X31 + 0xB0]
	0x01DD172C LDP X22, X21, [X31 + 0xA0]
	0x01DD1730 LDR X30, [X31 + 0x90]
	0x01DD1734 LDP D9, D8, [X31 + 0x80]
	0x01DD1738 LDP D11, D10, [X31 + 0x70]
	0x01DD173C LDP D13, D12, [X31 + 0x60]
	0x01DD1740 ADD X31, X31, 0xC0
	0x01DD1744 RET
	0x01DD1748 BL 0x1C16F20
	0x01DD174C SUB X31, X31, 0xB0
	0x01DD1750 STP D13, D12, [X31 + 0x60]
	0x01DD1754 STP D11, D10, [X31 + 0x70]
	0x01DD1758 STP D9, D8, [X31 + 0x80]
	0x01DD175C STR X30, [X31 + 0x90]
	0x01DD1760 STP X20, X19, [X31 + 0xA0]
	0x01DD1764 ADRP X20, 0x2607000
	0x01DD1768 LDRB W8, [X20 + 0xBFA]
	0x01DD176C MOV X19, X0
	0x01DD1770 TBNZ X8, 0x0, 0x1DD1794
	0x01DD1774 ADRP X0, 0x2327000
	0x01DD1778 LDR X0, [X0 + 0x5C8]
	0x01DD177C BL 0x1C16CF4
	0x01DD1780 ADRP X0, 0x2327000
	0x01DD1784 LDR X0, [X0 + 0x5E0]
	0x01DD1788 BL 0x1C16CF4
	0x01DD178C MOVZ W8, 0x1
	0x01DD1790 STRB W8, [X20 + 0xBFA]
	0x01DD1794 MOVI V0.2D, 0x0
	0x01DD1798 STR W31, [X31 + 0x50]
	0x01DD179C STP V0, V0, [X31 + 0x30]
	0x01DD17A0 LDR X0, [X19 + 0x90]
	0x01DD17A4 CBZ X0, 0x1DD1924
	0x01DD17A8 ADRP X8, 0x2327000
	0x01DD17AC LDR X8, [X8 + 0x5C8]
	0x01DD17B0 MOVZ W2, 0x1
	0x01DD17B4 MOV X3, X31
	0x01DD17B8 LDR X1, [X8]
	0x01DD17BC BL 0x3BF6010
	0x01DD17C0 MOV X0, X19
	0x01DD17C4 MOV X1, X31
	0x01DD17C8 BL 0x3C32E90
	0x01DD17CC CBZ X0, 0x1DD1924
	0x01DD17D0 MOV X1, X31
	0x01DD17D4 BL 0x3C3F58C
	0x01DD17D8 LDR X0, [X19 + 0xA8]
	0x01DD17DC CBZ X0, 0x1DD1924
	0x01DD17E0 MOV X1, X31
	0x01DD17E4 MOV V8.16B, V0.16B
	0x01DD17E8 MOV V9.16B, V1.16B
	0x01DD17EC MOV V10.16B, V2.16B

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+144], D14
	003 Move [X31+152], D13
	004 Move [X31+160], D12
	005 Move [X31+168], D11
	006 Move [X31+176], D10
	007 Move [X31+184], D9
	008 Move [X31+192], D8
	009 Move [X31+200], X29
	010 Move [X31+208], X30
	011 Move [X31+216], X25
	012 Move [X31+224], X24
	013 Move [X31+232], X23
	014 Move [X31+240], X22
	015 Move [X31+248], X21
	016 Move [X31+256], X20
	017 Move [X31+264], X19
	018 Move X22, 0x2608000
	019 Move X21, 0x2328000
	020 Move W8, [X22+3056]
	021 Move X21, [X21+208]
	022 Move V8, V6
	023 Move V9, V5
	024 Move V10, V4
	025 Move V11, V3
	026 Move V12, V2
	027 Move V13, V1
	028 Move V14, V0
	029 Move W20, W1
	030 Move X19, X0
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {55}
	035 Move X0, 0x2326000
	036 Move X0, [X0+2904]
	037 Call 0x1C17CF4
	038 Move X0, 0x2326000
	039 Move X0, [X0+2912]
	040 Call 0x1C17CF4
	041 Move X0, 0x2327000
	042 Move X0, [X0+320]
	043 Call 0x1C17CF4
	044 Move X0, 0x2328000
	045 Move X0, [X0+208]
	046 Call 0x1C17CF4
	047 Move X0, 0x2328000
	048 Move X0, [X0+1344]
	049 Call 0x1C17CF4
	050 Move X0, 0x2328000
	051 Move X0, [X0+1352]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X22+3056], W8
	055 Move X0, [X21]
	056 Move [X31+112], X31
	057 Move [X31+120], X31
	058 Move [X31+128], W31
	059 Move [X31+80], X31
	060 Move [X31+88], X31
	061 Move [X31+96], W31
	062 Move X22, 0x2326000
	063 Move X21, 0x2326000
	064 Move X25, 0x2328000
	065 Move W8, [X0+224]
	066 Move X22, [X22+2904]
	067 Move X21, [X21+2912]
	068 Move X25, [X25+1352]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move W0, W20
	073 Call PrefabGenerator.LoadPrefab, X0
	074 Move X1, [X22]
	075 Move X20, X0
	076 Add X0, X31, 64
	077 Move V0, V14
	078 Move V1, V13
	079 Move V2, V12
	080 Move [X31+64], X31
	081 Move [X31+72], X31
	082 Call Nullable`1<Vector3>..ctor, X0, X1
	083 Move X1, [X21]
	084 Add X0, X31, 40
	085 Move V0, V11
	086 Move V1, V10
	087 Move V2, V9
	088 Move V3, V8
	089 Move [X31+40], X31
	090 Move [X31+48], X31
	091 Move [X31+56], W31
	092 Call Nullable`1<Quaternion>..ctor, X0, X1
	093 Move X0, [X25]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {99}
	097 Call 0x1C17DFC
	098 Move X0, [X25]
	099 Move X8, [X0+184]
	100 Move X23, [X8+8]
	101 Compare X23, 0
	102 JumpIfEqual {107}
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 Move W8, [X31+56]
	105 Move X21, [X31+64]
	106 Move X22, [X31+72]
	107 NotImplemented "Instruction LDUR not yet implemented."
	108 Move W8, [X31+56]
	109 Move X21, [X31+64]
	110 Move X22, [X31+72]
	111 Move [X31+5], V0
	112 Move [X31+96], W8
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {118}
	116 Call 0x1C17DFC
	117 Move X0, [X25]
	118 Move X9, 0x2327000
	119 Move X8, [X0+184]
	120 Move X9, [X9+320]
	121 Move X24, [X8]
	122 Move X0, [X9]
	123 Call 0x1C17F10
	124 Move X8, 0x2328000
	125 Move X8, [X8+1344]
	126 Move X1, X24
	127 Move X3, X31
	128 Move X23, X0
	129 Move X2, [X8]
	130 Call OnBeforeSpawned..ctor, X0, X1, X2
	131 Move X8, [X25]
	132 Move X8, [X8+184]
	133 Move [X8+8], X23
	134 Move V0, [X31+5]
	135 Move W8, [X31+96]
	136 Move [X31+7], V0
	137 Move [X31+128], W8
	138 Compare X19, 0
	139 JumpIfEqual {172}
	140 Move V0, [X31+7]
	141 Move W8, [X31+128]
	142 Add X4, X31, 16
	143 Move X0, X19
	144 Move X1, X20
	145 Move X2, X21
	146 Move X3, X22
	147 Move X5, X31
	148 Move X6, X23
	149 Move W7, W31
	150 Move [X31+1], V0
	151 Move [X31+32], W8
	152 Move [X31], X31
	153 Call NetworkRunner.Spawn, X0, X1, X2, X3, X4, X5, X6
	154 Move X20, [X31+256]
	155 Move X19, [X31+264]
	156 Move X22, [X31+240]
	157 Move X21, [X31+248]
	158 Move X24, [X31+224]
	159 Move X23, [X31+232]
	160 Move X30, [X31+208]
	161 Move X25, [X31+216]
	162 Move X29, [X31+200]
	163 Move D9, [X31+184]
	164 Move D8, [X31+192]
	165 Move D11, [X31+168]
	166 Move D10, [X31+176]
	167 Move D13, [X31+152]
	168 Move D12, [X31+160]
	169 Move V14, [X31+144]
	170 Add X31, X31, 272
	171 Return 
	172 Call 0x1C17F20

Method: UnityEngine.GameObject LoadPrefab(AnimalCompany.PrefabGenerator/PrefabType prefabType)

Disassembly:
	0x01DD17F0 BL 0x3C3F58C
	0x01DD17F4 ADRP X20, 0x2607000
	0x01DD17F8 LDRB W8, [X20 + 0x85C]
	0x01DD17FC MOV V11.16B, V0.16B
	0x01DD1800 MOV V12.16B, V1.16B
	0x01DD1804 MOV V13.16B, V2.16B
	0x01DD1808 CBNZ W8, 0x1DD1820
	0x01DD180C ADRP X0, 0x2322000
	0x01DD1810 LDR X0, [X0 + 0x5A8]
	0x01DD1814 BL 0x1C16CF4
	0x01DD1818 MOVZ W8, 0x1
	0x01DD181C STRB W8, [X20 + 0x85C]
	0x01DD1820 ADRP X8, 0x2322000
	0x01DD1824 LDR X8, [X8 + 0x5A8]
	0x01DD1828 FSUB S11, S8, S11
	0x01DD182C FSUB S9, S9, S12
	0x01DD1830 FSUB S8, S10, S13
	0x01DD1834 LDR X0, [X8]
	0x01DD1838 LDR W8, [X0 + 0xE0]
	0x01DD183C CBNZ W8, 0x1DD1844
	0x01DD1840 BL 0x1C16DFC
	0x01DD1844 FMUL S0, S11, S11
	0x01DD1848 FMUL S1, S9, S9
	0x01DD184C FMUL S2, S8, S8
	0x01DD1850 FADD S0, S0, S1
	0x01DD1854 FADD S0, S2, S0
	0x01DD1858 FSQRT S0, S0
	0x01DD185C FMOV S1, 1
	0x01DD1860 FCMP S0, S1
	0x01DD1864 B.PL 0x1DD1878
	0x01DD1868 MOV X0, X19
	0x01DD186C MOV W1, W31
	0x01DD1870 BL 0x1DD1090
	0x01DD1874 B 0x1DD1908
	0x01DD1878 LDR X0, [X19 + 0x90]
	0x01DD187C CBZ X0, 0x1DD1924
	0x01DD1880 ADD X8, X31, 0x8
	0x01DD1884 MOV W1, W31
	0x01DD1888 MOV X2, X31
	0x01DD188C BL 0x3BF66CC
	0x01DD1890 ADRP X9, 0x2327000
	0x01DD1894 LDUR V0, [X31 + 0x8]
	0x01DD1898 LDUR V1, [X31 + 0x18]
	0x01DD189C LDR W8, [X31 + 0x28]
	0x01DD18A0 LDR X9, [X9 + 0x5E0]
	0x01DD18A4 ADD X0, X31, 0x30
	0x01DD18A8 MOV X2, X31
	0x01DD18AC STP V0, V1, [X31 + 0x30]
	0x01DD18B0 LDR X1, [X9]
	0x01DD18B4 STR W8, [X31 + 0x50]
	0x01DD18B8 BL 0x3BF5CF4
	0x01DD18BC LDR X20, [X19 + 0xA0]
	0x01DD18C0 TBZ X0, 0x0, 0x1DD18F4
	0x01DD18C4 LDR X0, [X19 + 0xA8]
	0x01DD18C8 CBZ X0, 0x1DD1924
	0x01DD18CC MOV X1, X31
	0x01DD18D0 BL 0x3C3F58C
	0x01DD18D4 CBZ X20, 0x1DD1924
	0x01DD18D8 MOV X0, X20
	0x01DD18DC MOV X1, X31
	0x01DD18E0 BL 0x3BE13F8
	0x01DD18E4 LDR X0, [X19 + 0xA0]
	0x01DD18E8 CBZ X0, 0x1DD1924
	0x01DD18EC MOV W1, W31
	0x01DD18F0 B 0x1DD1900
	0x01DD18F4 CBZ X20, 0x1DD1924
	0x01DD18F8 MOVZ W1, 0x1
	0x01DD18FC MOV X0, X20
	0x01DD1900 MOV X2, X31
	0x01DD1904 BL 0x3BE17B4
	0x01DD1908 LDP X20, X19, [X31 + 0xA0]
	0x01DD190C LDR X30, [X31 + 0x90]
	0x01DD1910 LDP D9, D8, [X31 + 0x80]
	0x01DD1914 LDP D11, D10, [X31 + 0x70]
	0x01DD1918 LDP D13, D12, [X31 + 0x60]
	0x01DD191C ADD X31, X31, 0xB0
	0x01DD1920 RET
	0x01DD1924 BL 0x1C16F20
	0x01DD1928 STP X30, X19, [X31 - 0x10]!
	0x01DD192C LDR X19, [X0 + 0x80]
	0x01DD1930 MOV X1, X31
	0x01DD1934 BL 0x3C32E90
	0x01DD1938 CBZ X0, 0x1DD1958
	0x01DD193C MOV X1, X31
	0x01DD1940 BL 0x3C3F58C
	0x01DD1944 CBZ X19, 0x1DD1958
	0x01DD1948 FMOV S3, 1
	0x01DD194C MOV X0, X19
	0x01DD1950 LDP X30, X19, [X31], #0x10
	0x01DD1954 B 0x1DD1B94
	0x01DD1958 BL 0x1C16F20
	0x01DD195C STP X30, X21, [X31 - 0x20]!
	0x01DD1960 STP X20, X19, [X31 + 0x10]
	0x01DD1964 ADRP X21, 0x2607000
	0x01DD1968 ADRP X20, 0x2322000
	0x01DD196C LDRB W8, [X21 + 0xBFB]
	0x01DD1970 LDR X20, [X20 + 0x598]
	0x01DD1974 MOV X19, X0
	0x01DD1978 TBNZ X8, 0x0, 0x1DD1990
	0x01DD197C ADRP X0, 0x2322000
	0x01DD1980 LDR X0, [X0 + 0x598]
	0x01DD1984 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, 0x2608000
	007 Move X21, 0x2328000
	008 Move W8, [X20+3057]
	009 Move X21, [X21+208]
	010 Move W19, W0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {38}
	015 Move X0, 0x2328000
	016 Move X0, [X0+1360]
	017 Call 0x1C17CF4
	018 Move X0, 0x2328000
	019 Move X0, [X0+1368]
	020 Call 0x1C17CF4
	021 Move X0, 0x2328000
	022 Move X0, [X0+1376]
	023 Call 0x1C17CF4
	024 Move X0, 0x2328000
	025 Move X0, [X0+208]
	026 Call 0x1C17CF4
	027 Move X0, 0x2328000
	028 Move X0, [X0+1384]
	029 Call 0x1C17CF4
	030 Move X0, 0x2328000
	031 Move X0, [X0+1392]
	032 Call 0x1C17CF4
	033 Move X0, 0x2328000
	034 Move X0, [X0+1400]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X20+3057], W8
	038 Move X0, [X21]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X21]
	044 Move X8, [X0+184]
	045 Move X0, [X8]
	046 Compare X0, 0
	047 JumpIfEqual {122}
	048 Move X8, 0x2328000
	049 Move X8, [X8+1368]
	050 Move W1, W19
	051 Move X2, [X8]
	052 Call Dictionary`2<Int32Enum, Object>.ContainsKey, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {98}
	057 Move X8, 0x2328000
	058 Move X8, [X8+1384]
	059 Move TEMP, 0
	060 Not TEMP
	061 Move X9, TEMP
	062 Add X0, X31, 8
	063 Move X1, X31
	064 Move X8, [X8]
	065 Move [X31+24], W19
	066 Move [X31+8], X8
	067 Move [X31+16], X9
	068 Call Enum.ToString, X0
	069 Move X8, 0x2328000
	070 Move X8, [X8+1400]
	071 Move X1, X0
	072 Move X2, X31
	073 Move X8, [X8]
	074 Move X0, X8
	075 Call String.Concat, X0, X1
	076 Move X8, 0x2328000
	077 Move X8, [X8+1392]
	078 Move X1, [X8]
	079 Call 0x2242FB8, X0
	080 Move X8, [X21]
	081 Move X20, X0
	082 Move W9, [X8+224]
	083 Compare W9, 0
	084 JumpIfNotEqual {88}
	085 Move X0, X8
	086 Call 0x1C17DFC
	087 Move X8, [X21]
	088 Move X8, [X8+184]
	089 Move X0, [X8]
	090 Compare X0, 0
	091 JumpIfEqual {122}
	092 Move X8, 0x2328000
	093 Move X8, [X8+1360]
	094 Move W1, W19
	095 Move X2, X20
	096 Move X3, [X8]
	097 Call Dictionary`2<Int32Enum, Object>.Add, X0, X1, X2
	098 Move X0, [X21]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {104}
	102 Call 0x1C17DFC
	103 Move X0, [X21]
	104 Move X8, [X0+184]
	105 Move X0, [X8]
	106 Compare X0, 0
	107 JumpIfEqual {122}
	108 Move X8, 0x2328000
	109 Move X8, [X8+1376]
	110 Move W1, W19
	111 Move X2, [X8]
	112 Call Dictionary`2<Int32Enum, Object>.get_Item, X0, X1
	113 Compare X0, 0
	114 JumpIfEqual {122}
	115 Call RandomPrefab.get_prefab, X0
	116 Move X20, [X31+48]
	117 Move X19, [X31+56]
	118 Move X30, [X31+32]
	119 Move X21, [X31+40]
	120 Add X31, X31, 64
	121 Return X0
	122 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01DD19E4 MOV X0, X31
	0x01DD19E8 BL 0x3C0CB98
	0x01DD19EC FMOV S0, W31
	0x01DD19F0 FMOV S1, 1
	0x01DD19F4 FMOV S2, W31
	0x01DD19F8 FMOV S3, 1
	0x01DD19FC MOV X0, X31
	0x01DD1A00 BL 0x3C0D030
	0x01DD1A04 MOV X0, X19
	0x01DD1A08 MOV X1, X31
	0x01DD1A0C BL 0x3C32E90
	0x01DD1A10 CBZ X0, 0x1DD1A30
	0x01DD1A14 MOV X1, X31
	0x01DD1A18 BL 0x3C3F58C
	0x01DD1A1C LDR V3, [X19 + 0xBC]
	0x01DD1A20 LDP X20, X19, [X31 + 0x10]
	0x01DD1A24 MOV X0, X31
	0x01DD1A28 LDP X30, X21, [X31], #0x20
	0x01DD1A2C B 0x3C0CB98
	0x01DD1A30 BL 0x1C16F20
	0x01DD1A34 STP X30, X19, [X31 - 0x10]!
	0x01DD1A38 LDR X8, [X0 + 0x38]
	0x01DD1A3C CBZ X8, 0x1DD1A84
	0x01DD1A40 LDR W8, [X8 + 0x188]
	0x01DD1A44 CMP W8, 0x2
	0x01DD1A48 B.NE 0x1DD1A7C
	0x01DD1A4C MOV X19, X0
	0x01DD1A50 LDR X0, [X0 + 0x40]
	0x01DD1A54 CBZ X0, 0x1DD1A7C
	0x01DD1A58 LDRB W8, [X0 + 0x60]
	0x01DD1A5C TBNZ X8, 0x1, 0x1DD1A7C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2608000
	007 Move X22, 0x2328000
	008 Move X20, 0x2328000
	009 Move W8, [X21+3058]
	010 Move X22, [X22+1408]
	011 Move X20, [X20+1416]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2328000
	018 Move X0, [X0+1416]
	019 Call 0x1C17CF4
	020 Move X0, 0x2328000
	021 Move X0, [X0+1408]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3058], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call List`1<Object>..ctor, X0
	030 Move [X19+72], X20
	031 Move X0, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+48]
	038 Call SimulationBehaviour..ctor, X0
	039 Return 

Method: System.Void .cctor()

Disassembly:
	0x01DD1A60 MOV X1, X31
	0x01DD1A64 BL 0x1E93668
	0x01DD1A68 TBZ X0, 0x0, 0x1DD1A7C
	0x01DD1A6C MOV X0, X19
	0x01DD1A70 MOV W1, W31
	0x01DD1A74 LDP X30, X19, [X31], #0x10
	0x01DD1A78 B 0x1DD1090
	0x01DD1A7C LDP X30, X19, [X31], #0x10
	0x01DD1A80 RET
	0x01DD1A84 BL 0x1C16F20
	0x01DD1A88 ADRP X8, 0xFFFFFFFFFED1C000
	0x01DD1A8C LDR V0, [X8 + 0xA88]
	0x01DD1A90 MOV X1, X31
	0x01DD1A94 STUR D0, [X0 + 0xBC]
	0x01DD1A98 B 0x1E74F04
	0x01DD1A9C LDR W1, [X0 + 0xC4]
	0x01DD1AA0 B 0x1DD1090
	0x01DD1AA4 STP X30, X19, [X31 - 0x10]!
	0x01DD1AA8 MOV X19, X0
	0x01DD1AAC BL 0x1DD1030
	0x01DD1AB0 STR W0, [X19 + 0xC4]
	0x01DD1AB4 LDP X30, X19, [X31], #0x10
	0x01DD1AB8 RET
	0x01DD1ABC STR X30, [X31 - 0x20]!
	0x01DD1AC0 STP X20, X19, [X31 + 0x10]
	0x01DD1AC4 ADRP X20, 0x2607000
	0x01DD1AC8 LDRB W8, [X20 + 0xBFC]
	0x01DD1ACC MOV X19, X0
	0x01DD1AD0 TBNZ X8, 0x0, 0x1DD1AF4
	0x01DD1AD4 ADRP X0, 0x2327000
	0x01DD1AD8 LDR X0, [X0 + 0x5E8]
	0x01DD1ADC BL 0x1C16CF4
	0x01DD1AE0 ADRP X0, 0x2327000
	0x01DD1AE4 LDR X0, [X0 + 0x5F0]
	0x01DD1AE8 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2608000
	007 Move X22, 0x2328000
	008 Move X19, 0x2328000
	009 Move X20, 0x2328000
	010 Move W8, [X21+3059]
	011 Move X22, [X22+1424]
	012 Move X19, [X19+1432]
	013 Move X20, [X20+208]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x2328000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move X0, 0x2328000
	022 Move X0, [X0+1424]
	023 Call 0x1C17CF4
	024 Move X0, 0x2328000
	025 Move X0, [X0+208]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+3059], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call Dictionary`2<Int32Enum, Object>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+48]
	042 Return 

Method: System.Void RPC_GeneratePrefab@Invoker(Fusion.NetworkRunner runner, Fusion.SimulationMessage* message)

Disassembly:
	0x01DD1AEC MOVZ W8, 0x1
	0x01DD1AF0 STRB W8, [X20 + 0xBFC]
	0x01DD1AF4 LDR X19, [X19 + 0x18]
	0x01DD1AF8 CBZ X19, 0x1DD1B40
	0x01DD1AFC LDR W1, [X19 + 0x18]
	0x01DD1B00 CBZ W1, 0x1DD1B30
	0x01DD1B04 ADRP X20, 0x2327000
	0x01DD1B08 LDR X20, [X20 + 0x5F0]
	0x01DD1B0C MOV W0, W31
	0x01DD1B10 MOV X2, X31
	0x01DD1B14 BL 0x3C309A8
	0x01DD1B18 LDR X2, [X20]
	0x01DD1B1C MOV W1, W0
	0x01DD1B20 MOV X0, X19
	0x01DD1B24 LDP X20, X19, [X31 + 0x10]
	0x01DD1B28 LDR X30, [X31], #0x20
	0x01DD1B2C B 0x301BCCC
	0x01DD1B30 LDP X20, X19, [X31 + 0x10]
	0x01DD1B34 MOV X0, X31
	0x01DD1B38 LDR X30, [X31], #0x20
	0x01DD1B3C RET
	0x01DD1B40 BL 0x1C16F20
	0x01DD1B44 STR X30, [X31 - 0x20]!
	0x01DD1B48 STP X20, X19, [X31 + 0x10]
	0x01DD1B4C ADRP X20, 0x2607000
	0x01DD1B50 LDRB W8, [X20 + 0xBFD]
	0x01DD1B54 MOV X19, X0
	0x01DD1B58 TBNZ X8, 0x0, 0x1DD1B70
	0x01DD1B5C ADRP X0, 0x2327000
	0x01DD1B60 LDR X0, [X0 + 0x5E8]
	0x01DD1B64 BL 0x1C16CF4
	0x01DD1B68 MOVZ W8, 0x1
	0x01DD1B6C STRB W8, [X20 + 0xBFD]
	0x01DD1B70 LDR X8, [X19 + 0x18]
	0x01DD1B74 CBZ X8, 0x1DD1B90
	0x01DD1B78 LDR W1, [X8 + 0x18]
	0x01DD1B7C LDP X20, X19, [X31 + 0x10]
	0x01DD1B80 MOV W0, W31
	0x01DD1B84 MOV X2, X31
	0x01DD1B88 LDR X30, [X31], #0x20
	0x01DD1B8C B 0x3C309A8
	0x01DD1B90 BL 0x1C16F20
	0x01DD1B94 STP D11, D10, [X31 - 0x40]!
	0x01DD1B98 STP D9, D8, [X31 + 0x10]
	0x01DD1B9C STP X30, X21, [X31 + 0x20]
	0x01DD1BA0 STP X20, X19, [X31 + 0x30]
	0x01DD1BA4 ADRP X20, 0x2607000
	0x01DD1BA8 ADRP X21, 0x2327000
	0x01DD1BAC LDRB W8, [X20 + 0xC03]
	0x01DD1BB0 LDR X21, [X21 + 0xC0]
	0x01DD1BB4 MOV V8.16B, V3.16B
	0x01DD1BB8 MOV V9.16B, V2.16B
	0x01DD1BBC MOV V10.16B, V1.16B
	0x01DD1BC0 MOV V11.16B, V0.16B
	0x01DD1BC4 MOV X19, X0
	0x01DD1BC8 TBNZ X8, 0x0, 0x1DD1BF8
	0x01DD1BCC ADRP X0, 0x2327000
	0x01DD1BD0 LDR X0, [X0 + 0x5F8]

ISIL:
	001 Move [X31-96], D14
	002 Move [X31+8], D13
	003 Move [X31+16], D12
	004 Move [X31+24], D11
	005 Move [X31+32], D10
	006 Move [X31+40], D9
	007 Move [X31+48], D8
	008 Move [X31+56], X30
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0x2608000
	014 Move X22, 0x2326000
	015 Move W8, [X20+3060]
	016 Move X22, [X22+2680]
	017 Move X21, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0x2326000
	024 Move X0, [X0+2680]
	025 Call 0x1C17CF4
	026 Move X0, 0x2328000
	027 Move X0, [X0+208]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+3060], W8
	031 Move X0, [X22]
	032 Move W20, [X21+36]
	033 Move S8, [X21+40]
	034 Move S9, [X21+44]
	035 Move S14, [X21+48]
	036 Move S13, [X21+52]
	037 Move S11, [X21+56]
	038 Move S10, [X21+60]
	039 Move V12, [X21+64]
	040 Move X21, 0x2328000
	041 Move W8, [X0+224]
	042 Move X21, [X21+208]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X22]
	047 Move X8, [X0+184]
	048 Move W9, 1
	049 Move [X8+32], W9
	050 Move X0, [X21]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X19
	056 Move W1, W20
	057 Move V0, V8
	058 Move V1, V9
	059 Move V3, V13
	060 Move V4, V11
	061 Move V5, V10
	062 Move V6, V12
	063 Move X20, [X31+80]
	064 Move X19, [X31+88]
	065 Move X22, [X31+64]
	066 Move X21, [X31+72]
	067 Move X30, [X31+56]
	068 Move D9, [X31+40]
	069 Move D8, [X31+48]
	070 Move D11, [X31+24]
	071 Move D10, [X31+32]
	072 Move D13, [X31+8]
	073 Move D12, [X31+16]
	074 Move V2, V14
	075 Move V14, [X31+96]
	076 Call PrefabGenerator.RPC_GeneratePrefab, X0, X1, X2, X3
	077 Return 

