Type: AnimalCompany.PrefabGenerator

Method: System.Void Awake()

Disassembly:
	0x01CCCD7C FSUB S4, S9, S12
	0x01CCCD80 FSUB S5, S10, S13
	0x01CCCD84 FMUL S3, S3, S3
	0x01CCCD88 FMUL S4, S4, S4
	0x01CCCD8C FMUL S5, S5, S5
	0x01CCCD90 FADD S3, S3, S4
	0x01CCCD94 FADD S3, S5, S3
	0x01CCCD98 FSQRT S3, S3
	0x01CCCD9C FSUB S3, S3, S1
	0x01CCCDA0 FSUB S1, S2, S1
	0x01CCCDA4 FDIV S1, S3, S1
	0x01CCCDA8 FCMP S1, 0x0
	0x01CCCDAC B.MI 0x1CCCDB8
	0x01CCCDB0 FMOV S0, 1
	0x01CCCDB4 FMIN S0, S1, S0
	0x01CCCDB8 LDR X0, [X19 + 0x30]
	0x01CCCDBC CBZ X0, 0x1CCCE18
	0x01CCCDC0 LDR V1, [X19 + 0x28]
	0x01CCCDC4 FMOV S2, W31
	0x01CCCDC8 FMAX S0, S0, S2
	0x01CCCDCC MOV X1, X31
	0x01CCCDD0 FMUL S0, S0, S1
	0x01CCCDD4 FADD S0, S0, S2
	0x01CCCDD8 BL 0x3A7F1D4
	0x01CCCDDC LDR X0, [X19 + 0x30]
	0x01CCCDE0 CBZ X0, 0x1CCCE18
	0x01CCCDE4 MOV X1, X31
	0x01CCCDE8 BL 0x3A7F198
	0x01CCCDEC LDR X0, [X19 + 0x30]
	0x01CCCDF0 CBZ X0, 0x1CCCE18
	0x01CCCDF4 LDP X20, X19, [X31 + 0x40]
	0x01CCCDF8 LDP X30, X21, [X31 + 0x30]
	0x01CCCDFC LDP D9, D8, [X31 + 0x20]
	0x01CCCE00 LDP D11, D10, [X31 + 0x10]
	0x01CCCE04 FCMP S0, 0x0
	0x01CCCE08 CSET W1, NE
	0x01CCCE0C MOV X2, X31
	0x01CCCE10 LDP D13, D12, [X31], #0x50
	0x01CCCE14 B 0x3A9A604
	0x01CCCE18 BL 0x1B6EA1C
	0x01CCCE1C ADRP X8, 0xFFFFFFFFFEDE1000
	0x01CCCE20 LDR V0, [X8 + 0xCA8]
	0x01CCCE24 MOVZ W8, 0x40A00000
	0x01CCCE28 MOV X1, X31
	0x01CCCE2C STR W8, [X0 + 0x28]
	0x01CCCE30 STR D0, [X0 + 0x20]
	0x01CCCE34 B 0x3A9EEE4
	0x01CCCE38 STP X30, X19, [X31 - 0x10]!
	0x01CCCE3C LDR X19, [X0 + 0x20]
	0x01CCCE40 MOV X1, X31
	0x01CCCE44 BL 0x3A9B084
	0x01CCCE48 CBZ X0, 0x1CCCE68
	0x01CCCE4C MOV X1, X31
	0x01CCCE50 BL 0x3AA7658
	0x01CCCE54 CBZ X19, 0x1CCCE68
	0x01CCCE58 FMOV S3, 1
	0x01CCCE5C MOV X0, X19
	0x01CCCE60 LDP X30, X19, [X31], #0x10
	0x01CCCE64 B 0x1CCD9CC
	0x01CCCE68 BL 0x1B6EA1C
	0x01CCCE6C STP X30, X19, [X31 - 0x10]!
	0x01CCCE70 LDR X19, [X0 + 0x28]
	0x01CCCE74 MOV X1, X31
	0x01CCCE78 BL 0x3A9B084
	0x01CCCE7C CBZ X0, 0x1CCCE9C
	0x01CCCE80 MOV X1, X31
	0x01CCCE84 BL 0x3AA7658
	0x01CCCE88 CBZ X19, 0x1CCCE9C
	0x01CCCE8C FMOV S3, 1
	0x01CCCE90 MOV X0, X19
	0x01CCCE94 LDP X30, X19, [X31], #0x10
	0x01CCCE98 B 0x1CCD9CC
	0x01CCCE9C BL 0x1B6EA1C
	0x01CCCEA0 STP X30, X19, [X31 - 0x10]!
	0x01CCCEA4 LDR X19, [X0 + 0x30]
	0x01CCCEA8 MOV X1, X31
	0x01CCCEAC BL 0x3A9B084
	0x01CCCEB0 CBZ X0, 0x1CCCED0
	0x01CCCEB4 MOV X1, X31
	0x01CCCEB8 BL 0x3AA7658
	0x01CCCEBC CBZ X19, 0x1CCCED0
	0x01CCCEC0 FMOV S3, 1
	0x01CCCEC4 MOV X0, X19
	0x01CCCEC8 LDP X30, X19, [X31], #0x10
	0x01CCCECC B 0x1CCD9CC
	0x01CCCED0 BL 0x1B6EA1C
	0x01CCCED4 MOV X1, X31
	0x01CCCED8 B 0x3A9EEE4
	0x01CCCEDC STP X30, X19, [X31 - 0x10]!
	0x01CCCEE0 LDR X8, [X0 + 0x50]
	0x01CCCEE4 CBZ X8, 0x1CCCEF4
	0x01CCCEE8 LDR W0, [X8]
	0x01CCCEEC LDP X30, X19, [X31], #0x10
	0x01CCCEF0 RET
	0x01CCCEF4 ADRP X0, 0x2281000
	0x01CCCEF8 LDR X0, [X0 + 0x490]
	0x01CCCEFC BL 0x1B6E804
	0x01CCCF00 BL 0x1B6EA0C
	0x01CCCF04 MOV X19, X0
	0x01CCCF08 ADRP X0, 0x2283000
	0x01CCCF0C LDR X0, [X0 + 0x798]
	0x01CCCF10 BL 0x1B6E804
	0x01CCCF14 MOV X1, X0
	0x01CCCF18 MOV X0, X19
	0x01CCCF1C MOV X2, X31
	0x01CCCF20 BL 0x31E7550
	0x01CCCF24 ADRP X0, 0x2283000
	0x01CCCF28 LDR X0, [X0 + 0x7A0]
	0x01CCCF2C BL 0x1B6E804
	0x01CCCF30 MOV X1, X0
	0x01CCCF34 MOV X0, X19
	0x01CCCF38 BL 0x1B6E8E8
	0x01CCCF3C STP X30, X19, [X31 - 0x10]!
	0x01CCCF40 LDR X8, [X0 + 0x50]
	0x01CCCF44 CBZ X8, 0x1CCCF54
	0x01CCCF48 STR W1, [X8]
	0x01CCCF4C LDP X30, X19, [X31], #0x10
	0x01CCCF50 RET
	0x01CCCF54 ADRP X0, 0x2281000
	0x01CCCF58 LDR X0, [X0 + 0x490]
	0x01CCCF5C BL 0x1B6E804
	0x01CCCF60 BL 0x1B6EA0C
	0x01CCCF64 MOV X19, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x2558000
	009 Move X21, 0x2284000
	010 Move W8, [X20+1431]
	011 Move X21, [X21+872]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0x2283000
	018 Move X0, [X0+360]
	019 Call 0x1B6F7F0
	020 Move X0, 0x2282000
	021 Move X0, [X0+3960]
	022 Call 0x1B6F7F0
	023 Move X0, 0x2282000
	024 Move X0, [X0+1144]
	025 Call 0x1B6F7F0
	026 Move X0, 0x2284000
	027 Move X0, [X0+1776]
	028 Call 0x1B6F7F0
	029 Move X0, 0x2284000
	030 Move X0, [X0+872]
	031 Call 0x1B6F7F0
	032 Move W8, 1
	033 Move [X20+1431], W8
	034 Move X0, [X21]
	035 Move X20, 0x2282000
	036 Move W8, [X0+224]
	037 Move X20, [X20+1144]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1B6F8F8
	041 Move X0, [X21]
	042 Move X8, [X20]
	043 Move X9, [X0+184]
	044 Move W10, [X8+224]
	045 Move X20, [X9+8]
	046 Compare W10, 0
	047 JumpIfNotEqual {50}
	048 Move X0, X8
	049 Call 0x1B6F8F8
	050 Move X0, X20
	051 Move X1, X31
	052 Move X2, X31
	053 Call Object.op_Inequality, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {117}
	058 Move X0, [X21]
	059 Move X23, 0x2282000
	060 Move X22, 0x2283000
	061 Move X24, 0x2284000
	062 Move W8, [X0+224]
	063 Move X23, [X23+3960]
	064 Move X22, [X22+360]
	065 Move X24, [X24+1776]
	066 Compare W8, 0
	067 JumpIfNotEqual {70}
	068 Call 0x1B6F8F8
	069 Move X0, [X21]
	070 Move X8, [X0+184]
	071 Move [X8+8], X19
	072 Move X8, [X23]
	073 Move X0, [X22]
	074 Move X8, [X8+184]
	075 Move X20, [X8+24]
	076 Call 0x1B6FA0C
	077 Move X2, [X24]
	078 Move X1, X19
	079 Move X3, X31
	080 Move X21, X0
	081 Call Action`1<Object>..ctor, X0, X1, X2
	082 Move X0, X20
	083 Move X1, X21
	084 Move X2, X31
	085 Call Delegate.Combine, X0, X1
	086 Compare X0, 0
	087 JumpIfEqual {106}
	088 Move X20, [X22]
	089 Move X19, X0
	090 Move X1, X20
	091 Call 0x1B6F8FC
	092 Compare X0, 0
	093 JumpIfEqual {103}
	094 Move X8, [X23]
	095 Move X8, [X8+184]
	096 Move [X8+24], X0
	097 Move X20, [X22]
	098 Move X0, X19
	099 Move X1, X20
	100 Call 0x1B6F8FC
	101 Compare X0, 0
	102 JumpIfNotEqual {109}
	103 Move X0, X19
	104 Move X1, X20
	105 Call 0x1B6FCDC
	106 Move X8, [X23]
	107 Move X8, [X8+184]
	108 Move [X8+24], X31
	109 Move X20, [X31+48]
	110 Move X19, [X31+56]
	111 Move X22, [X31+32]
	112 Move X21, [X31+40]
	113 Move X24, [X31+16]
	114 Move X23, [X31+24]
	115 Move X30, [X31+64]
	116 Return 
	117 Move X0, 0x2282000
	118 Move X0, [X0+1144]
	119 Call 0x1B6F804
	120 Call 0x18F54F0
	121 Move X0, X19
	122 Move X1, X31
	123 Call Object.Destroy, X0
	124 Move X0, 0x2282000
	125 Move X0, [X0+1648]
	126 Call 0x1B6F804
	127 Call 0x1B6FA0C
	128 Move X19, X0
	129 Move X0, 0x2284000
	130 Move X0, [X0+1784]
	131 Call 0x1B6F804
	132 Move X1, X0
	133 Move X0, X19
	134 Move X2, X31
	135 Call Exception..ctor, X0, X1
	136 Move X0, 0x2284000
	137 Move X0, [X0+1792]
	138 Call 0x1B6F804
	139 Move X1, X0
	140 Move X0, X19
	141 Call 0x1B6F8E8

Method: System.Void OnDestroy()

Disassembly:
	0x01CCCF68 ADRP X0, 0x2283000
	0x01CCCF6C LDR X0, [X0 + 0x798]
	0x01CCCF70 BL 0x1B6E804
	0x01CCCF74 MOV X1, X0
	0x01CCCF78 MOV X0, X19
	0x01CCCF7C MOV X2, X31
	0x01CCCF80 BL 0x31E7550
	0x01CCCF84 ADRP X0, 0x2283000
	0x01CCCF88 LDR X0, [X0 + 0x7A8]
	0x01CCCF8C BL 0x1B6E804
	0x01CCCF90 MOV X1, X0
	0x01CCCF94 MOV X0, X19
	0x01CCCF98 BL 0x1B6E8E8
	0x01CCCF9C MOV W1, W31
	0x01CCCFA0 B 0x1CCCF3C
	0x01CCCFA4 STP X30, X19, [X31 - 0x10]!
	0x01CCCFA8 MOV X19, X0
	0x01CCCFAC LDR X0, [X0 + 0x40]
	0x01CCCFB0 CBZ X0, 0x1CCD008
	0x01CCCFB4 MOV X1, X31
	0x01CCCFB8 BL 0x1D9E780
	0x01CCCFBC TBZ X0, 0x0, 0x1CCCFE8
	0x01CCCFC0 MOV X0, X19
	0x01CCCFC4 BL 0x1CCCEDC
	0x01CCCFC8 CMP W0, 0x2
	0x01CCCFCC B.EQ 0x1CCCFFC
	0x01CCCFD0 CMP W0, 0x1
	0x01CCCFD4 B.EQ 0x1CCCFF0
	0x01CCCFD8 CBNZ W0, 0x1CCCFE8
	0x01CCCFDC MOV X0, X19
	0x01CCCFE0 LDP X30, X19, [X31], #0x10
	0x01CCCFE4 B 0x1CCD00C
	0x01CCCFE8 LDP X30, X19, [X31], #0x10
	0x01CCCFEC RET
	0x01CCCFF0 MOV X0, X19
	0x01CCCFF4 LDP X30, X19, [X31], #0x10
	0x01CCCFF8 B 0x1CCD1A8
	0x01CCCFFC MOV X0, X19
	0x01CCD000 LDP X30, X19, [X31], #0x10
	0x01CCD004 B 0x1CCD5D4
	0x01CCD008 BL 0x1B6EA1C
	0x01CCD00C SUB X31, X31, 0x60
	0x01CCD010 STP D11, D10, [X31 + 0x10]
	0x01CCD014 STP D9, D8, [X31 + 0x20]
	0x01CCD018 STP X30, X23, [X31 + 0x30]
	0x01CCD01C STP X22, X21, [X31 + 0x40]
	0x01CCD020 STP X20, X19, [X31 + 0x50]
	0x01CCD024 ADRP X20, 0x2556000
	0x01CCD028 LDRB W8, [X20 + 0x5A3]
	0x01CCD02C MOV X19, X0
	0x01CCD030 TBNZ X8, 0x0, 0x1CCD060
	0x01CCD034 ADRP X0, 0x2282000
	0x01CCD038 LDR X0, [X0 + 0x7B0]
	0x01CCD03C BL 0x1B6E7F0
	0x01CCD040 ADRP X0, 0x2280000
	0x01CCD044 LDR X0, [X0 + 0x4C0]
	0x01CCD048 BL 0x1B6E7F0
	0x01CCD04C ADRP X0, 0x2282000
	0x01CCD050 LDR X0, [X0 + 0x7B8]
	0x01CCD054 BL 0x1B6E7F0
	0x01CCD058 MOVZ W8, 0x1
	0x01CCD05C STRB W8, [X20 + 0x5A3]
	0x01CCD060 STR X31, [X31 + 0x8]
	0x01CCD064 LDR X0, [X19 + 0x90]
	0x01CCD068 CBZ X0, 0x1CCD1A0
	0x01CCD06C ADRP X8, 0x2282000
	0x01CCD070 LDR X8, [X8 + 0x7B8]
	0x01CCD074 MOV W2, W31
	0x01CCD078 MOV X3, X31
	0x01CCD07C LDR X1, [X8]
	0x01CCD080 BL 0x3A5EEE8
	0x01CCD084 LDR X0, [X19 + 0xA0]
	0x01CCD088 CBZ X0, 0x1CCD1A0
	0x01CCD08C MOVZ W1, 0x1
	0x01CCD090 MOV X2, X31
	0x01CCD094 BL 0x3A4AB90
	0x01CCD098 MOV X0, X19
	0x01CCD09C MOV X1, X31
	0x01CCD0A0 BL 0x3A9B084
	0x01CCD0A4 CBZ X0, 0x1CCD1A0
	0x01CCD0A8 ADRP X20, 0x2280000
	0x01CCD0AC LDR X20, [X20 + 0x4C0]
	0x01CCD0B0 MOV X1, X31
	0x01CCD0B4 BL 0x3AA7658
	0x01CCD0B8 LDR W0, [X19 + 0x98]
	0x01CCD0BC LDR V10, [X19 + 0xBC]
	0x01CCD0C0 MOV X1, X31
	0x01CCD0C4 MOV V8.16B, V0.16B
	0x01CCD0C8 MOV V9.16B, V1.16B
	0x01CCD0CC MOV V11.16B, V2.16B
	0x01CCD0D0 BL 0x3A9DE68
	0x01CCD0D4 LDR X8, [X20]
	0x01CCD0D8 MOV W20, W0
	0x01CCD0DC LDR W9, [X8 + 0xE0]
	0x01CCD0E0 CBNZ W9, 0x1CCD0EC
	0x01CCD0E4 MOV X0, X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2558000
	008 Move X21, 0x2283000
	009 Move W8, [X20+1432]
	010 Move X21, [X21+448]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x2283000
	017 Move X0, [X0+360]
	018 Call 0x1B6F7F0
	019 Move X0, 0x2284000
	020 Move X0, [X0+1800]
	021 Call 0x1B6F7F0
	022 Move X0, 0x2283000
	023 Move X0, [X0+448]
	024 Call 0x1B6F7F0
	025 Move X0, 0x2282000
	026 Move X0, [X0+3960]
	027 Call 0x1B6F7F0
	028 Move X0, 0x2284000
	029 Move X0, [X0+1776]
	030 Call 0x1B6F7F0
	031 Move X0, 0x2284000
	032 Move X0, [X0+872]
	033 Call 0x1B6F7F0
	034 Move W8, 1
	035 Move [X20+1432], W8
	036 Move X0, [X21]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1B6F8F8
	041 Compare X19, 0
	042 JumpIfEqual {112}
	043 Move W8, [X19+48]
	044 Move X20, 0x2284000
	045 Move X20, [X20+872]
	046 Or W8, W8, 8
	047 Move [X19+48], W8
	048 Move X0, [X20]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1B6F8F8
	053 Move X0, [X20]
	054 Move X8, [X0+184]
	055 Move X0, [X8]
	056 Compare X0, 0
	057 JumpIfEqual {112}
	058 Move X8, 0x2283000
	059 Move X8, [X8+1800]
	060 Move X23, 0x2281000
	061 Move X22, 0x2282000
	062 Move X21, 0x2283000
	063 Move X1, [X8]
	064 Move X23, [X23+3960]
	065 Move X22, [X22+360]
	066 Move X21, [X21+1776]
	067 Call Dictionary`2<Int32Enum, Object>.Clear, X0
	068 Move X8, [X23]
	069 Move X0, [X22]
	070 Move X8, [X8+184]
	071 Move X20, [X8+24]
	072 Call 0x1B6FA0C
	073 Move X2, [X21]
	074 Move X1, X19
	075 Move X3, X31
	076 Move X21, X0
	077 Call Action`1<Object>..ctor, X0, X1, X2
	078 Move X0, X20
	079 Move X1, X21
	080 Move X2, X31
	081 Call Delegate.Remove, X0, X1
	082 Compare X0, 0
	083 JumpIfEqual {102}
	084 Move X20, [X22]
	085 Move X19, X0
	086 Move X1, X20
	087 Call 0x1B6F8FC
	088 Compare X0, 0
	089 JumpIfEqual {99}
	090 Move X8, [X23]
	091 Move X8, [X8+184]
	092 Move [X8+24], X0
	093 Move X20, [X22]
	094 Move X0, X19
	095 Move X1, X20
	096 Call 0x1B6F8FC
	097 Compare X0, 0
	098 JumpIfNotEqual {105}
	099 Move X0, X19
	100 Move X1, X20
	101 Call 0x1B6FCDC
	102 Move X8, [X23]
	103 Move X8, [X8+184]
	104 Move [X8+24], X31
	105 Move X20, [X31+32]
	106 Move X19, [X31+40]
	107 Move X22, [X31+16]
	108 Move X21, [X31+24]
	109 Move X30, [X31+48]
	110 Move X23, [X31+56]
	111 Return 
	112 Call 0x1B6FA1C

Method: System.Void HandleNewRunner(Fusion.NetworkRunner runner)

Disassembly:
	0x01CCD0E8 BL 0x1B6E8F8
	0x01CCD0EC MOV V0.16B, V8.16B

ISIL:
	001 Move [X0+72], X1
	002 Return 

Method: System.Void GeneratePrefab(AnimalCompany.PrefabGenerator/PrefabType prefabType, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, System.Boolean onGround = False)

Disassembly:
	0x01CC2E8C STP X20, X19, [X31 + 0x40]
	0x01CC2E90 ADRP X21, 0x2561000
	0x01CC2E94 LDRB W8, [X21 + 0x54F]
	0x01CC2E98 MOV V8.16B, V0.16B
	0x01CC2E9C MOV W20, W1
	0x01CC2EA0 MOV X19, X0
	0x01CC2EA4 TBNZ X8, 0x0, 0x1CC2F04
	0x01CC2EA8 ADRP X0, 0x228D000
	0x01CC2EAC LDR X0, [X0 + 0x390]
	0x01CC2EB0 BL 0x1B6E7F0
	0x01CC2EB4 ADRP X0, 0x228D000
	0x01CC2EB8 LDR X0, [X0 + 0x398]
	0x01CC2EBC BL 0x1B6E7F0
	0x01CC2EC0 ADRP X0, 0x228D000
	0x01CC2EC4 LDR X0, [X0 + 0x3A0]
	0x01CC2EC8 BL 0x1B6E7F0
	0x01CC2ECC ADRP X0, 0x228D000
	0x01CC2ED0 LDR X0, [X0 + 0x3A8]
	0x01CC2ED4 BL 0x1B6E7F0
	0x01CC2ED8 ADRP X0, 0x228D000
	0x01CC2EDC LDR X0, [X0 + 0x3B0]
	0x01CC2EE0 BL 0x1B6E7F0
	0x01CC2EE4 ADRP X0, 0x228C000
	0x01CC2EE8 LDR X0, [X0 + 0x198]
	0x01CC2EEC BL 0x1B6E7F0
	0x01CC2EF0 ADRP X0, 0x228D000
	0x01CC2EF4 LDR X0, [X0 + 0x3B8]
	0x01CC2EF8 BL 0x1B6E7F0
	0x01CC2EFC MOVZ W8, 0x1
	0x01CC2F00 STRB W8, [X21 + 0x54F]
	0x01CC2F04 STP X31, X31, [X31 + 0x8]
	0x01CC2F08 STR X31, [X31 + 0x18]
	0x01CC2F0C LDR X0, [X19 + 0xC8]
	0x01CC2F10 CBZ X0, 0x1CC3004
	0x01CC2F14 ADRP X8, 0x228D000
	0x01CC2F18 LDR X8, [X8 + 0x398]
	0x01CC2F1C MOV W1, W20
	0x01CC2F20 MOV V0.16B, V8.16B
	0x01CC2F24 LDR X2, [X8]
	0x01CC2F28 BL 0x2897190
	0x01CC2F2C LDR X0, [X19 + 0xC8]
	0x01CC2F30 CBZ X0, 0x1CC3004
	0x01CC2F34 ADRP X8, 0x228D000
	0x01CC2F38 LDR X8, [X8 + 0x390]
	0x01CC2F3C LDR X1, [X8]
	0x01CC2F40 BL 0x2897048
	0x01CC2F44 CBZ X0, 0x1CC3004
	0x01CC2F48 ADRP X8, 0x228D000
	0x01CC2F4C LDR X8, [X8 + 0x3B8]
	0x01CC2F50 ADRP X21, 0x228D000
	0x01CC2F54 ADRP X20, 0x228D000
	0x01CC2F58 LDR X1, [X8]
	0x01CC2F5C LDR X21, [X21 + 0x3A8]
	0x01CC2F60 LDR X20, [X20 + 0x3A0]
	0x01CC2F64 ADD X8, X31, 0x8
	0x01CC2F68 BL 0x25C10A0
	0x01CC2F6C FMOV S8, W31
	0x01CC2F70 LDR X1, [X21]
	0x01CC2F74 ADD X0, X31, 0x8
	0x01CC2F78 BL 0x2A4DE78
	0x01CC2F7C TBZ X0, 0x0, 0x1CC2F8C
	0x01CC2F80 LDR V0, [X31 + 0x18]
	0x01CC2F84 FADD S8, S8, S0
	0x01CC2F88 B 0x1CC2F70
	0x01CC2F8C LDR X1, [X20]
	0x01CC2F90 ADD X0, X31, 0x8
	0x01CC2F94 BL 0x2A4DE74
	0x01CC2F98 LDR V0, [X19 + 0xD0]
	0x01CC2F9C FCMP S8, S0
	0x01CC2FA0 B.EQ 0x1CC2FE4
	0x01CC2FA4 STR S8, [X19 + 0xD0]
	0x01CC2FA8 ADRP X20, 0x228C000
	0x01CC2FAC LDR X20, [X20 + 0x198]
	0x01CC2FB0 LDR X0, [X20]
	0x01CC2FB4 LDR W8, [X0 + 0xE0]
	0x01CC2FB8 CBNZ W8, 0x1CC2FC4
	0x01CC2FBC BL 0x1B6E8F8
	0x01CC2FC0 LDR X0, [X20]
	0x01CC2FC4 LDR X8, [X0 + 0xB8]
	0x01CC2FC8 LDR X8, [X8 + 0x40]
	0x01CC2FCC CBZ X8, 0x1CC2FE4
	0x01CC2FD0 LDR X9, [X8 + 0x18]
	0x01CC2FD4 LDR X0, [X8 + 0x40]
	0x01CC2FD8 LDR X1, [X8 + 0x28]
	0x01CC2FDC MOV V0.16B, V8.16B
	0x01CC2FE0 BLR X9
	0x01CC2FE4 LDR X8, [X19 + 0x20]
	0x01CC2FE8 CBZ X8, 0x1CC3004
	0x01CC2FEC STR S8, [X8 + 0x1D8]
	0x01CC2FF0 LDP X20, X19, [X31 + 0x40]
	0x01CC2FF4 LDP X30, X21, [X31 + 0x30]
	0x01CC2FF8 LDR V8, [X31 + 0x20]
	0x01CC2FFC ADD X31, X31, 0x50
	0x01CC3000 RET
	0x01CC3004 BL 0x1B6EA1C
	0x01CC3008 CMP W1, 0x1
	0x01CC300C MOV X21, X0
	0x01CC3010 B.NE 0x1CC3044
	0x01CC3014 MOV X0, X21
	0x01CC3018 BL 0x3D19840
	0x01CC301C LDR X20, [X0]
	0x01CC3020 BL 0x3D19850
	0x01CC3024 ADRP X8, 0x228C000
	0x01CC3028 LDR X8, [X8 + 0x3A0]
	0x01CC302C ADD X0, X31, 0x8
	0x01CC3030 LDR X1, [X8]
	0x01CC3034 BL 0x2A4DE74
	0x01CC3038 CBZ X20, 0x1CC2F98
	0x01CC303C MOV X0, X20
	0x01CC3040 BL 0x1B6EA14
	0x01CC3044 MOV X20, X31
	0x01CC3048 B 0x1CC3050
	0x01CC304C MOV X21, X0
	0x01CC3050 ADRP X8, 0x228C000
	0x01CC3054 LDR X8, [X8 + 0x3A0]
	0x01CC3058 LDR X1, [X8]
	0x01CC305C ADD X0, X31, 0x8
	0x01CC3060 BL 0x2A4DE74
	0x01CC3064 CBNZ X20, 0x1CC3070
	0x01CC3068 MOV X0, X21
	0x01CC306C BL 0x1C8418C
	0x01CC3070 MOV X0, X20
	0x01CC3074 BL 0x1B6EA14
	0x01CC3078 BL 0x18F46A8
	0x01CC307C SUB X31, X31, 0x40
	0x01CC3080 STR X30, [X31 + 0x30]
	0x01CC3084 LDUR V3, [X1 + 0x1C]
	0x01CC3088 LDP V5, V4, [X1]
	0x01CC308C ADD X1, X31, 0x0
	0x01CC3090 MOV W2, W31
	0x01CC3094 STUR V3, [X31 + 0x1C]
	0x01CC3098 STP V5, V4, [X31]
	0x01CC309C BL 0x1CC30AC
	0x01CC30A0 LDR X30, [X31 + 0x30]
	0x01CC30A4 ADD X31, X31, 0x40
	0x01CC30A8 RET
	0x01CC30AC STR D10, [X31 - 0x40]!
	0x01CC30B0 STP D9, D8, [X31 + 0x8]
	0x01CC30B4 STR X30, [X31 + 0x18]
	0x01CC30B8 STP X22, X21, [X31 + 0x20]
	0x01CC30BC STP X20, X19, [X31 + 0x30]
	0x01CC30C0 MOV X20, X1
	0x01CC30C4 MOV X21, X0
	0x01CC30C8 MOV X0, X1
	0x01CC30CC MOV X1, X31
	0x01CC30D0 MOV W19, W2
	0x01CC30D4 MOV V8.16B, V2.16B
	0x01CC30D8 MOV V9.16B, V1.16B
	0x01CC30DC MOV V10.16B, V0.16B
	0x01CC30E0 BL 0x3AF61C4
	0x01CC30E4 MOV X22, X0
	0x01CC30E8 MOV X0, X20
	0x01CC30EC MOV X1, X31
	0x01CC30F0 BL 0x3AF6270
	0x01CC30F4 MOV X0, X21
	0x01CC30F8 MOV X1, X22
	0x01CC30FC MOV V4.16B, V9.16B
	0x01CC3100 MOV V5.16B, V8.16B
	0x01CC3104 MOV W2, W19
	0x01CC3108 LDP X20, X19, [X31 + 0x30]
	0x01CC310C LDP X22, X21, [X31 + 0x20]
	0x01CC3110 LDR X30, [X31 + 0x18]
	0x01CC3114 LDP D9, D8, [X31 + 0x8]
	0x01CC3118 MOV V3.16B, V10.16B
	0x01CC311C LDR V10, [X31], #0x40
	0x01CC3120 B 0x1CC3154
	0x01CC3124 SUB X31, X31, 0x40
	0x01CC3128 STR X30, [X31 + 0x30]
	0x01CC312C LDUR V3, [X1 + 0x1C]
	0x01CC3130 LDP V5, V4, [X1]
	0x01CC3134 ADD X1, X31, 0x0
	0x01CC3138 MOVZ W2, 0x1
	0x01CC313C STUR V3, [X31 + 0x1C]
	0x01CC3140 STP V5, V4, [X31]
	0x01CC3144 BL 0x1CC30AC
	0x01CC3148 LDR X30, [X31 + 0x30]
	0x01CC314C ADD X31, X31, 0x40
	0x01CC3150 RET
	0x01CC3154 SUB X31, X31, 0x90
	0x01CC3158 STP D15, D14, [X31 + 0x10]
	0x01CC315C STP D13, D12, [X31 + 0x20]
	0x01CC3160 STP D11, D10, [X31 + 0x30]
	0x01CC3164 STP D9, D8, [X31 + 0x40]
	0x01CC3168 STR X30, [X31 + 0x50]
	0x01CC316C STP X24, X23, [X31 + 0x60]
	0x01CC3170 STP X22, X21, [X31 + 0x70]
	0x01CC3174 STP X20, X19, [X31 + 0x80]
	0x01CC3178 ADRP X21, 0x2560000
	0x01CC317C ADRP X24, 0x228A000
	0x01CC3180 LDRB W8, [X21 + 0x550]
	0x01CC3184 LDR X24, [X24 + 0x478]
	0x01CC3188 MOV W19, W2
	0x01CC318C MOV V12.16B, V5.16B
	0x01CC3190 MOV V13.16B, V4.16B
	0x01CC3194 MOV V14.16B, V3.16B
	0x01CC3198 MOV V8.16B, V2.16B
	0x01CC319C MOV V9.16B, V1.16B
	0x01CC31A0 MOV V10.16B, V0.16B
	0x01CC31A4 MOV X22, X1
	0x01CC31A8 MOV X20, X0
	0x01CC31AC TBNZ X8, 0x0, 0x1CC31E8
	0x01CC31B0 ADRP X0, 0x228C000
	0x01CC31B4 LDR X0, [X0 + 0x3C0]
	0x01CC31B8 BL 0x1B6E7F0
	0x01CC31BC ADRP X0, 0x228A000
	0x01CC31C0 LDR X0, [X0 + 0x478]
	0x01CC31C4 BL 0x1B6E7F0
	0x01CC31C8 ADRP X0, 0x228B000
	0x01CC31CC LDR X0, [X0 + 0x198]
	0x01CC31D0 BL 0x1B6E7F0
	0x01CC31D4 ADRP X0, 0x228C000
	0x01CC31D8 LDR X0, [X0 + 0x3C8]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+80], D15
	003 Move [X31+88], D14
	004 Move [X31+96], D13
	005 Move [X31+104], D12
	006 Move [X31+112], D11
	007 Move [X31+120], D10
	008 Move [X31+128], D9
	009 Move [X31+136], D8
	010 Move [X31+144], X30
	011 Move [X31+152], X25
	012 Move [X31+160], X24
	013 Move [X31+168], X23
	014 Move [X31+176], X22
	015 Move [X31+184], X21
	016 Move [X31+192], X20
	017 Move [X31+200], X19
	018 Move X21, 0x2562000
	019 Move W8, [X21+1433]
	020 Move W20, W1
	021 Move V11, V6
	022 Move V15, V5
	023 Move V10, V4
	024 Move V8, V3
	025 Move V14, V2
	026 Move V13, V1
	027 Move V12, V0
	028 Move W19, W0
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {41}
	033 Move X0, 0x228C000
	034 Move X0, [X0+1216]
	035 Call 0x1B6F7F0
	036 Move X0, 0x228E000
	037 Move X0, [X0+872]
	038 Call 0x1B6F7F0
	039 Move W8, 1
	040 Move [X21+1433], W8
	041 Move X22, 0x228E000
	042 Move X22, [X22+872]
	043 NotImplemented "Instruction MOVI not yet implemented."
	044 Move [X31+60], V0
	045 Move [X31+32], V0
	046 Move [X31+40], V0
	047 Move TEMP, X20
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {222}
	051 Move X24, 0x2562000
	052 Move W8, [X24+1296]
	053 Move [X31+28], S8
	054 Move [X31+20], S15
	055 Compare W8, 0
	056 JumpIfNotEqual {62}
	057 Move X0, 0x228C000
	058 Move X0, [X0+1152]
	059 Call 0x1B6F7F0
	060 Move W8, 1
	061 Move [X24+1296], W8
	062 Move X20, 0x228C000
	063 Move X20, [X20+1152]
	064 Move X0, [X22]
	065 Move X8, [X20]
	066 Move W9, [X0+224]
	067 Move X8, [X8+184]
	068 Move S8, [X8+36]
	069 Move S15, [X8+40]
	070 Move V9, [X8+44]
	071 Compare W9, 0
	072 JumpIfNotEqual {75}
	073 Call 0x1B6F8F8
	074 Move X0, [X22]
	075 Move X8, [X0+184]
	076 Move X8, [X8+8]
	077 Compare X8, 0
	078 JumpIfEqual {260}
	079 Move W0, [X8+88]
	080 Move X1, X31
	081 Call LayerMask.op_Implicit, X0
	082 Move X25, 0x228C000
	083 Move X25, [X25+1216]
	084 Move W21, W0
	085 Move X8, [X25]
	086 Move W9, [X8+224]
	087 Compare W9, 0
	088 JumpIfNotEqual {91}
	089 Move X0, X8
	090 Call 0x1B6F8F8
	091 Add X0, X31, 32
	092 Move S6, 10
	093 Move V0, V12
	094 Move V1, V13
	095 Move V2, V14
	096 Move V3, V8
	097 Move V4, V15
	098 Move V5, V9
	099 Move W1, W21
	100 Move X2, X31
	101 Call Physics.Raycast, X0, X1, X2, V0, X3
	102 Move [X31+24], S10
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfNotEqual {123}
	107 Add X0, X31, 32
	108 Move X1, X31
	109 Call RaycastHit.get_point, X0
	110 Move X21, 0x2562000
	111 Move W8, [X21+1090]
	112 Move V15, [X31+20]
	113 Move V8, V0
	114 Move V9, V1
	115 Move V10, V2
	116 Compare W8, 0
	117 JumpIfNotEqual {207}
	118 Move X0, 0x228B000
	119 Move X0, [X0+1152]
	120 Call 0x1B6F7F0
	121 Move W8, 1
	122 Move [X21+1090], W8
	123 Move X23, 0x2561000
	124 Move W8, [X23+1090]
	125 Move [X31+16], S11
	126 Compare W8, 0
	127 JumpIfNotEqual {133}
	128 Move X0, 0x228B000
	129 Move X0, [X0+1152]
	130 Call 0x1B6F7F0
	131 Move W8, 1
	132 Move [X23+1090], W8
	133 Move X8, [X20]
	134 Move W9, [X24+1296]
	135 Move X8, [X8+184]
	136 Move S10, [X8+24]
	137 Move S11, [X8+28]
	138 Move V15, [X8+32]
	139 Compare W9, 0
	140 JumpIfNotEqual {147}
	141 Move X0, X20
	142 Call 0x1B6F7F0
	143 Move X8, [X20]
	144 Move W9, 1
	145 Move [X24+1296], W9
	146 Move X8, [X8+184]
	147 Move X0, [X22]
	148 Move S8, [X8+36]
	149 Move S0, [X8+40]
	150 Move V9, [X8+44]
	151 Move W9, [X0+224]
	152 Move [X31+12], S0
	153 Compare W9, 0
	154 JumpIfNotEqual {157}
	155 Call 0x1B6F8F8
	156 Move X0, [X22]
	157 Move X8, [X0+184]
	158 Move X8, [X8+8]
	159 Compare X8, 0
	160 JumpIfEqual {260}
	161 Move W0, [X8+88]
	162 Move X1, X31
	163 Add S10, S12, S10
	164 Add S11, S13, S11
	165 Add S15, S14, S15
	166 Call LayerMask.op_Implicit, X0
	167 Move X8, [X25]
	168 Move W21, W0
	169 Move W9, [X8+224]
	170 Compare W9, 0
	171 JumpIfNotEqual {174}
	172 Move X0, X8
	173 Call 0x1B6F8F8
	174 Move V4, [X31+12]
	175 Add X0, X31, 32
	176 Move S6, 10
	177 Move V0, V10
	178 Move V1, V11
	179 Move V2, V15
	180 Move V3, V8
	181 Move V5, V9
	182 Move W1, W21
	183 Move X2, X31
	184 Call Physics.Raycast, X0, X1, X2, V0, X3
	185 Move S11, [X31+16]
	186 Move S15, [X31+20]
	187 Move S10, [X31+24]
	188 Move S8, [X31+28]
	189 Move TEMP, X0
	190 And TEMP, TEMP, 1
	191 Compare TEMP, 1
	192 JumpIfNotEqual {222}
	193 Add X0, X31, 32
	194 Move X1, X31
	195 Call RaycastHit.get_point, X0
	196 Move W8, [X23+1090]
	197 Move V8, V0
	198 Move V9, V1
	199 Move V10, V2
	200 Compare W8, 0
	201 JumpIfNotEqual {207}
	202 Move X0, 0x228B000
	203 Move X0, [X0+1152]
	204 Call 0x1B6F7F0
	205 Move W8, 1
	206 Move [X23+1090], W8
	207 Move X8, [X20]
	208 Move X9, -18976768
	209 Move V0, [X9+3044]
	210 Move X8, [X8+184]
	211 Move S1, [X8+24]
	212 Move S2, [X8+28]
	213 Move V3, [X8+32]
	214 Multiply S1, S1, S0
	215 Multiply S2, S2, S0
	216 Multiply S0, S3, S0
	217 Add S12, S8, S1
	218 Add S14, S10, S0
	219 Move S10, [X31+24]
	220 Move S8, [X31+28]
	221 Add S13, S9, S2
	222 Move X0, [X22]
	223 Move W8, [X0+224]
	224 Compare W8, 0
	225 JumpIfNotEqual {228}
	226 Call 0x1B6F8F8
	227 Move X0, [X22]
	228 Move X8, [X0+184]
	229 Move X8, [X8+8]
	230 Compare X8, 0
	231 JumpIfEqual {260}
	232 Move X0, [X8+72]
	233 Move W1, W19
	234 Move V0, V12
	235 Move V1, V13
	236 Move V2, V14
	237 Move V3, V8
	238 Move V4, V10
	239 Move V5, V15
	240 Move V6, V11
	241 Call PrefabGenerator.RPC_GeneratePrefab, X0, X1, X2, X3
	242 Move X20, [X31+192]
	243 Move X19, [X31+200]
	244 Move X22, [X31+176]
	245 Move X21, [X31+184]
	246 Move X24, [X31+160]
	247 Move X23, [X31+168]
	248 Move X30, [X31+144]
	249 Move X25, [X31+152]
	250 Move D9, [X31+128]
	251 Move D8, [X31+136]
	252 Move D11, [X31+112]
	253 Move D10, [X31+120]
	254 Move D13, [X31+96]
	255 Move D12, [X31+104]
	256 Move D15, [X31+80]
	257 Move D14, [X31+88]
	258 Add X31, X31, 208
	259 Return 
	260 Call 0x1B6FA1C

Method: System.Void RPC_GeneratePrefab(Fusion.NetworkRunner runner, AnimalCompany.PrefabGenerator/PrefabType prefabType, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)

Disassembly:
	0x01CCD0F0 MOV V1.16B, V9.16B
	0x01CCD0F4 MOV V2.16B, V11.16B
	0x01CCD0F8 MOV V3.16B, V10.16B
	0x01CCD0FC MOV W0, W20
	0x01CCD100 MOV X1, X31
	0x01CCD104 BL 0x3AF52EC
	0x01CCD108 CBZ X0, 0x1CCD1A0
	0x01CCD10C LDR X8, [X0 + 0x18]
	0x01CCD110 MOV X20, X0
	0x01CCD114 CBZ X8, 0x1CCD184
	0x01CCD118 CMP W8, 0x1
	0x01CCD11C B.LT 0x1CCD184
	0x01CCD120 ADRP X23, 0x2282000
	0x01CCD124 LDR X23, [X23 + 0x7B0]
	0x01CCD128 MOV X21, X31
	0x01CCD12C ADD X22, X20, 0x20
	0x01CCD130 CMP W21, W8
	0x01CCD134 B.CS 0x1CCD1A4
	0x01CCD138 LDR X0, [X22, X21, LSL #3]
	0x01CCD13C CBZ X0, 0x1CCD1A0
	0x01CCD140 MOV X1, X31
	0x01CCD144 BL 0x3A9B0C0
	0x01CCD148 CBZ X0, 0x1CCD1A0
	0x01CCD14C LDR X2, [X23]
	0x01CCD150 ADD X1, X31, 0x8
	0x01CCD154 BL 0x20D02D0
	0x01CCD158 TBNZ X0, 0x0, 0x1CCD170
	0x01CCD15C LDR W8, [X20 + 0x18]
	0x01CCD160 ADD X21, X21, 0x1
	0x01CCD164 CMP W21, W8
	0x01CCD168 B.LT 0x1CCD130
	0x01CCD16C B 0x1CCD184
	0x01CCD170 LDR X8, [X31 + 0x8]
	0x01CCD174 MOVZ W1, 0x1
	0x01CCD178 MOV X0, X19
	0x01CCD17C STR X8, [X19 + 0xB0]
	0x01CCD180 BL 0x1CCCF3C
	0x01CCD184 LDP X20, X19, [X31 + 0x50]
	0x01CCD188 LDP X22, X21, [X31 + 0x40]
	0x01CCD18C LDP X30, X23, [X31 + 0x30]
	0x01CCD190 LDP D9, D8, [X31 + 0x20]
	0x01CCD194 LDP D11, D10, [X31 + 0x10]
	0x01CCD198 ADD X31, X31, 0x60
	0x01CCD19C RET
	0x01CCD1A0 BL 0x1B6EA1C
	0x01CCD1A4 BL 0x1B6EA24
	0x01CCD1A8 SUB X31, X31, 0xC0
	0x01CCD1AC STP D13, D12, [X31 + 0x60]
	0x01CCD1B0 STP D11, D10, [X31 + 0x70]
	0x01CCD1B4 STP D9, D8, [X31 + 0x80]
	0x01CCD1B8 STR X30, [X31 + 0x90]
	0x01CCD1BC STP X22, X21, [X31 + 0xA0]
	0x01CCD1C0 STP X20, X19, [X31 + 0xB0]
	0x01CCD1C4 ADRP X20, 0x2556000
	0x01CCD1C8 LDRB W8, [X20 + 0x5A4]
	0x01CCD1CC MOV X19, X0
	0x01CCD1D0 TBNZ X8, 0x0, 0x1CCD218
	0x01CCD1D4 ADRP X0, 0x2280000
	0x01CCD1D8 LDR X0, [X0 + 0x478]
	0x01CCD1DC BL 0x1B6E7F0
	0x01CCD1E0 ADRP X0, 0x2282000
	0x01CCD1E4 LDR X0, [X0 + 0x7C0]
	0x01CCD1E8 BL 0x1B6E7F0
	0x01CCD1EC ADRP X0, 0x2282000
	0x01CCD1F0 LDR X0, [X0 + 0x7C8]
	0x01CCD1F4 BL 0x1B6E7F0
	0x01CCD1F8 ADRP X0, 0x2282000
	0x01CCD1FC LDR X0, [X0 + 0x7B8]
	0x01CCD200 BL 0x1B6E7F0
	0x01CCD204 ADRP X0, 0x2282000
	0x01CCD208 LDR X0, [X0 + 0x7D0]
	0x01CCD20C BL 0x1B6E7F0
	0x01CCD210 MOVZ W8, 0x1
	0x01CCD214 STRB W8, [X20 + 0x5A4]
	0x01CCD218 MOVI V0.2D, 0x0
	0x01CCD21C STR W31, [X31 + 0x50]
	0x01CCD220 STP V0, V0, [X31 + 0x30]
	0x01CCD224 LDR X0, [X19 + 0x90]
	0x01CCD228 CBZ X0, 0x1CCD5D0
	0x01CCD22C ADRP X8, 0x2282000
	0x01CCD230 LDR X8, [X8 + 0x7B8]
	0x01CCD234 ADRP X20, 0x2280000
	0x01CCD238 MOVZ W2, 0x1
	0x01CCD23C MOV X3, X31
	0x01CCD240 LDR X1, [X8]
	0x01CCD244 LDR X20, [X20 + 0x478]
	0x01CCD248 BL 0x3A5EEE8
	0x01CCD24C LDR X0, [X20]
	0x01CCD250 LDR X20, [X19 + 0xB0]
	0x01CCD254 LDR W8, [X0 + 0xE0]
	0x01CCD258 CBNZ W8, 0x1CCD260
	0x01CCD25C BL 0x1B6E8F8
	0x01CCD260 MOV X0, X20
	0x01CCD264 MOV X1, X31
	0x01CCD268 MOV X2, X31
	0x01CCD26C BL 0x3AA0AF0
	0x01CCD270 TBZ X0, 0x0, 0x1CCD280
	0x01CCD274 MOV X0, X19
	0x01CCD278 MOV W1, W31
	0x01CCD27C B 0x1CCD5AC
	0x01CCD280 LDR X0, [X19 + 0xB0]
	0x01CCD284 CBZ X0, 0x1CCD5D0
	0x01CCD288 MOV X1, X31
	0x01CCD28C BL 0x1CB47E0
	0x01CCD290 TBNZ X0, 0x0, 0x1CCD5A0
	0x01CCD294 LDR X0, [X19 + 0x90]
	0x01CCD298 CBZ X0, 0x1CCD5D0
	0x01CCD29C ADD X8, X31, 0x8
	0x01CCD2A0 MOV W1, W31
	0x01CCD2A4 MOV X2, X31
	0x01CCD2A8 BL 0x3A5F5A4
	0x01CCD2AC ADRP X9, 0x2282000
	0x01CCD2B0 LDUR V0, [X31 + 0x8]
	0x01CCD2B4 LDUR V1, [X31 + 0x18]
	0x01CCD2B8 LDR W8, [X31 + 0x28]
	0x01CCD2BC LDR X9, [X9 + 0x7D0]
	0x01CCD2C0 ADD X0, X31, 0x30
	0x01CCD2C4 MOV X2, X31
	0x01CCD2C8 STP V0, V1, [X31 + 0x30]
	0x01CCD2CC LDR X1, [X9]
	0x01CCD2D0 STR W8, [X31 + 0x50]
	0x01CCD2D4 BL 0x3A5EBCC
	0x01CCD2D8 LDR X20, [X19 + 0xA0]
	0x01CCD2DC TBZ X0, 0x0, 0x1CCD31C
	0x01CCD2E0 LDR X0, [X19 + 0xB0]
	0x01CCD2E4 CBZ X0, 0x1CCD5D0
	0x01CCD2E8 MOV X1, X31
	0x01CCD2EC BL 0x3A9B084
	0x01CCD2F0 CBZ X0, 0x1CCD5D0
	0x01CCD2F4 MOV X1, X31
	0x01CCD2F8 BL 0x3AA7658
	0x01CCD2FC CBZ X20, 0x1CCD5D0
	0x01CCD300 MOV X0, X20
	0x01CCD304 MOV X1, X31
	0x01CCD308 BL 0x3A4A810
	0x01CCD30C LDR X0, [X19 + 0xA0]
	0x01CCD310 CBZ X0, 0x1CCD5D0
	0x01CCD314 MOV W1, W31
	0x01CCD318 B 0x1CCD328
	0x01CCD31C CBZ X20, 0x1CCD5D0
	0x01CCD320 MOVZ W1, 0x1
	0x01CCD324 MOV X0, X20
	0x01CCD328 MOV X2, X31
	0x01CCD32C BL 0x3A4AB90
	0x01CCD330 MOV X0, X19
	0x01CCD334 MOV X1, X31
	0x01CCD338 BL 0x3A9B084
	0x01CCD33C CBZ X0, 0x1CCD5D0
	0x01CCD340 MOV X1, X31
	0x01CCD344 BL 0x3AA7658
	0x01CCD348 LDR X0, [X19 + 0xB0]
	0x01CCD34C CBZ X0, 0x1CCD5D0
	0x01CCD350 MOV X1, X31
	0x01CCD354 MOV V8.16B, V0.16B
	0x01CCD358 MOV V9.16B, V1.16B
	0x01CCD35C MOV V10.16B, V2.16B
	0x01CCD360 BL 0x3A9B084
	0x01CCD364 CBZ X0, 0x1CCD5D0
	0x01CCD368 MOV X1, X31
	0x01CCD36C BL 0x3AA7658
	0x01CCD370 ADRP X21, 0x2556000
	0x01CCD374 LDRB W8, [X21 + 0x506]
	0x01CCD378 MOV V11.16B, V0.16B
	0x01CCD37C MOV V12.16B, V1.16B
	0x01CCD380 MOV V13.16B, V2.16B
	0x01CCD384 CBNZ W8, 0x1CCD39C
	0x01CCD388 ADRP X0, 0x2280000
	0x01CCD38C LDR X0, [X0 + 0x488]

ISIL:
	001 Move [X31-96], D14
	002 Move [X31+8], D13
	003 Move [X31+16], D12
	004 Move [X31+24], D11
	005 Move [X31+32], D10
	006 Move [X31+40], D9
	007 Move [X31+48], D8
	008 Move [X31+56], X30
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0x2557000
	014 Move X22, 0x2282000
	015 Move W8, [X21+1434]
	016 Move X22, [X22+448]
	017 Move V8, V6
	018 Move V9, V5
	019 Move V10, V4
	020 Move V11, V3
	021 Move V12, V2
	022 Move V13, V1
	023 Move V14, V0
	024 Move W19, W1
	025 Move X20, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0x2282000
	031 Move X0, [X0+448]
	032 Call 0x1B6F7F0
	033 Move X0, 0x2281000
	034 Move X0, [X0+1144]
	035 Call 0x1B6F7F0
	036 Move X0, 0x2283000
	037 Move X0, [X0+872]
	038 Call 0x1B6F7F0
	039 Move X0, 0x2283000
	040 Move X0, [X0+1808]
	041 Call 0x1B6F7F0
	042 Move W8, 1
	043 Move [X21+1434], W8
	044 Move X0, [X22]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1B6F8F8
	049 Move X0, [X22]
	050 Move X8, [X0+184]
	051 Move W9, [X8+32]
	052 Compare W9, 0
	053 JumpIfEqual {112}
	054 Move W9, [X0+224]
	055 Compare W9, 0
	056 JumpIfNotEqual {60}
	057 Call 0x1B6F8F8
	058 Move X8, [X22]
	059 Move X8, [X8+184]
	060 Move [X8+32], W31
	061 Move X8, 0x2281000
	062 Move X8, [X8+1144]
	063 Move X0, [X8]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1B6F8F8
	068 Move X0, X20
	069 Move X1, X31
	070 Move X2, X31
	071 Call Object.op_Equality, X0, X1
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {176}
	076 Compare X20, 0
	077 JumpIfEqual {189}
	078 Move X0, X20
	079 Move X1, X31
	080 Call NetworkRunner.get_IsServer, X0
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {167}
	085 Move X8, 0x2283000
	086 Move X8, [X8+872]
	087 Move X0, [X8]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1B6F8F8
	092 Move W0, W19
	093 Move V1, V13
	094 Move V2, V12
	095 Move V3, V11
	096 Move V4, V10
	097 Move V5, V9
	098 Move V6, V8
	099 Move X20, [X31+80]
	100 Move X19, [X31+88]
	101 Move X22, [X31+64]
	102 Move X21, [X31+72]
	103 Move X30, [X31+56]
	104 Move D9, [X31+40]
	105 Move D8, [X31+48]
	106 Move D11, [X31+24]
	107 Move D10, [X31+32]
	108 Move D13, [X31+8]
	109 Move D12, [X31+16]
	110 Move V0, V14
	111 Move V14, [X31+96]
	112 Compare X20, 0
	113 JumpIfEqual {190}
	114 Move X0, X20
	115 Move X1, X31
	116 Call NetworkRunner.get_Stage, X0
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X0, [X20+80]
	119 Compare X0, 0
	120 JumpIfEqual {189}
	121 Move X1, X31
	122 Call Simulation.HasAnyActiveConnections, X0
	123 Move TEMP, X0
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfNotEqual {61}
	127 Move X0, [X20+80]
	128 Move W1, 40
	129 Move X2, X31
	130 Call SimulationMessage.Allocate, X0, X1
	131 Move X21, X0
	132 Move W0, 1
	133 Move X1, X31
	134 Call Assert.Check, X0
	135 Move X0, [X22]
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {140}
	139 Call 0x1B6F8F8
	140 Move X8, 0x2283000
	141 Move X8, [X8+1808]
	142 Move X1, X31
	143 Move X0, [X8]
	144 Call NetworkBehaviourUtils.GetRpcStaticIndexOrThrow, X0
	145 Move X1, X31
	146 Call RpcHeader.Create, X0
	147 Move [X21+28], X0
	148 Move [X21+36], W19
	149 Move [X21+40], S14
	150 Move [X21+48], S13
	151 Move [X21+48], S12
	152 Move [X21+56], S11
	153 Move [X21+56], S10
	154 Move [X21+64], S9
	155 Move [X21+64], S8
	156 Compare X21, 0
	157 JumpIfEqual {189}
	158 Move W8, [X21+20]
	159 Move W9, 320
	160 Move X0, X20
	161 Move X1, X21
	162 Or W8, W8, 4
	163 Move X2, X31
	164 Move [X21+12], W9
	165 Move [X21+20], W8
	166 Call NetworkRunner.SendRpc, X0, X1
	167 Move W8, [X20+384]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X0, X20
	170 Move X1, X31
	171 Call NetworkRunner.get_IsSharedModeMasterClient, X0
	172 Move TEMP, X0
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfEqual {85}
	176 Move X20, [X31+80]
	177 Move X19, [X31+88]
	178 Move X22, [X31+64]
	179 Move X21, [X31+72]
	180 Move X30, [X31+56]
	181 Move D9, [X31+40]
	182 Move D8, [X31+48]
	183 Move D11, [X31+24]
	184 Move D10, [X31+32]
	185 Move D13, [X31+8]
	186 Move D12, [X31+16]
	187 Move V14, [X31+96]
	188 Return 
	189 Call 0x1B6FA1C
	190 Move X0, 0x2283000
	191 Move X0, [X0+1816]
	192 Call 0x1B6F804
	193 Call 0x1B6FA0C
	194 Move X19, X0
	195 Move X0, 0x2283000
	196 Move X0, [X0+1824]
	197 Call 0x1B6F804
	198 Move X1, X0
	199 Move X0, X19
	200 Move X2, X31
	201 Call ArgumentNullException..ctor, X0, X1
	202 Move X0, 0x2283000
	203 Move X0, [X0+1832]
	204 Call 0x1B6F804
	205 Move X1, X0
	206 Move X0, X19
	207 Call 0x1B6F8E8

Method: System.Void GeneratePrefabInternal(AnimalCompany.PrefabGenerator/PrefabType prefabType, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)

Disassembly:
	0x01CCD390 BL 0x1B6E7F0
	0x01CCD394 MOVZ W8, 0x1
	0x01CCD398 STRB W8, [X21 + 0x506]
	0x01CCD39C ADRP X22, 0x2280000
	0x01CCD3A0 LDR X22, [X22 + 0x488]
	0x01CCD3A4 FSUB S11, S8, S11
	0x01CCD3A8 FSUB S9, S9, S12
	0x01CCD3AC FSUB S8, S10, S13
	0x01CCD3B0 LDR X0, [X22]
	0x01CCD3B4 LDR W8, [X0 + 0xE0]
	0x01CCD3B8 CBNZ W8, 0x1CCD3C0
	0x01CCD3BC BL 0x1B6E8F8
	0x01CCD3C0 LDR V3, [X19 + 0xBC]
	0x01CCD3C4 FMUL S0, S11, S11
	0x01CCD3C8 FMUL S1, S9, S9
	0x01CCD3CC FMUL S2, S8, S8
	0x01CCD3D0 FADD S0, S0, S1
	0x01CCD3D4 FADD S0, S2, S0
	0x01CCD3D8 FMOV S1, 1.5
	0x01CCD3DC FSQRT S0, S0
	0x01CCD3E0 FMUL S1, S3, S1
	0x01CCD3E4 FCMP S0, S1
	0x01CCD3E8 B.LE 0x1CCD3F8
	0x01CCD3EC MOVZ W1, 0x2
	0x01CCD3F0 MOV X0, X19
	0x01CCD3F4 BL 0x1CCCF3C
	0x01CCD3F8 MOV X0, X19
	0x01CCD3FC MOV X1, X31
	0x01CCD400 BL 0x3A9B084
	0x01CCD404 CBZ X0, 0x1CCD5D0
	0x01CCD408 MOV X1, X31
	0x01CCD40C BL 0x3AA7658
	0x01CCD410 LDR X0, [X19 + 0xB0]
	0x01CCD414 CBZ X0, 0x1CCD5D0
	0x01CCD418 MOV X1, X31
	0x01CCD41C MOV V8.16B, V0.16B
	0x01CCD420 MOV V9.16B, V1.16B
	0x01CCD424 MOV V10.16B, V2.16B
	0x01CCD428 BL 0x3A9B084
	0x01CCD42C CBZ X0, 0x1CCD5D0
	0x01CCD430 MOV X1, X31
	0x01CCD434 BL 0x3AA7658
	0x01CCD438 LDRB W8, [X21 + 0x506]
	0x01CCD43C MOV V11.16B, V0.16B
	0x01CCD440 MOV V12.16B, V1.16B
	0x01CCD444 MOV V13.16B, V2.16B
	0x01CCD448 CBNZ W8, 0x1CCD460
	0x01CCD44C ADRP X0, 0x2280000
	0x01CCD450 LDR X0, [X0 + 0x488]
	0x01CCD454 BL 0x1B6E7F0
	0x01CCD458 MOVZ W8, 0x1
	0x01CCD45C STRB W8, [X21 + 0x506]
	0x01CCD460 LDR X0, [X22]
	0x01CCD464 FSUB S11, S8, S11
	0x01CCD468 FSUB S9, S9, S12
	0x01CCD46C FSUB S8, S10, S13
	0x01CCD470 LDR W8, [X0 + 0xE0]
	0x01CCD474 CBNZ W8, 0x1CCD47C
	0x01CCD478 BL 0x1B6E8F8
	0x01CCD47C FMUL S0, S11, S11
	0x01CCD480 FMUL S1, S9, S9
	0x01CCD484 LDR V2, [X19 + 0xC0]
	0x01CCD488 FADD S0, S0, S1
	0x01CCD48C FMUL S1, S8, S8
	0x01CCD490 FADD S0, S1, S0
	0x01CCD494 FSQRT S0, S0
	0x01CCD498 FCMP S0, S2
	0x01CCD49C B.PL 0x1CCD504
	0x01CCD4A0 LDR X0, [X19 + 0x90]
	0x01CCD4A4 CBZ X0, 0x1CCD5D0
	0x01CCD4A8 ADRP X8, 0x2282000
	0x01CCD4AC LDR X8, [X8 + 0x7C0]
	0x01CCD4B0 MOV X2, X31
	0x01CCD4B4 LDR X1, [X8]
	0x01CCD4B8 BL 0x3A5F210
	0x01CCD4BC LDR X20, [X19 + 0xB0]
	0x01CCD4C0 MOV X0, X19
	0x01CCD4C4 MOV X1, X31
	0x01CCD4C8 BL 0x3A9B084
	0x01CCD4CC CBZ X20, 0x1CCD5D0
	0x01CCD4D0 ADRP X8, 0x2282000
	0x01CCD4D4 LDR X3, [X19 + 0x88]
	0x01CCD4D8 LDR X8, [X8 + 0x7C8]
	0x01CCD4DC MOV X2, X0
	0x01CCD4E0 MOVZ W1, 0x64
	0x01CCD4E4 MOV X0, X20
	0x01CCD4E8 LDR X5, [X8]
	0x01CCD4EC MOV X4, X3
	0x01CCD4F0 MOV X6, X31
	0x01CCD4F4 BL 0x1CB92E8
	0x01CCD4F8 MOVZ W1, 0x2
	0x01CCD4FC MOV X0, X19
	0x01CCD500 BL 0x1CCCF3C
	0x01CCD504 MOV X0, X19
	0x01CCD508 MOV X1, X31
	0x01CCD50C BL 0x3A9B084
	0x01CCD510 CBZ X0, 0x1CCD5D0
	0x01CCD514 MOV X1, X31
	0x01CCD518 BL 0x3AA7658
	0x01CCD51C LDR X0, [X19 + 0xA8]
	0x01CCD520 CBZ X0, 0x1CCD5D0
	0x01CCD524 MOV X1, X31
	0x01CCD528 MOV V8.16B, V0.16B
	0x01CCD52C MOV V9.16B, V1.16B
	0x01CCD530 MOV V10.16B, V2.16B
	0x01CCD534 BL 0x3AA7658
	0x01CCD538 LDRB W8, [X21 + 0x506]
	0x01CCD53C MOV V11.16B, V0.16B
	0x01CCD540 MOV V12.16B, V1.16B
	0x01CCD544 MOV V13.16B, V2.16B
	0x01CCD548 CBNZ W8, 0x1CCD560
	0x01CCD54C ADRP X0, 0x2280000
	0x01CCD550 LDR X0, [X0 + 0x488]
	0x01CCD554 BL 0x1B6E7F0
	0x01CCD558 MOVZ W8, 0x1
	0x01CCD55C STRB W8, [X21 + 0x506]
	0x01CCD560 LDR X0, [X22]
	0x01CCD564 FSUB S11, S8, S11
	0x01CCD568 FSUB S9, S9, S12
	0x01CCD56C FSUB S8, S10, S13
	0x01CCD570 LDR W8, [X0 + 0xE0]
	0x01CCD574 CBNZ W8, 0x1CCD57C
	0x01CCD578 BL 0x1B6E8F8
	0x01CCD57C FMUL S0, S11, S11
	0x01CCD580 FMUL S1, S9, S9
	0x01CCD584 LDR V2, [X19 + 0xB8]
	0x01CCD588 FADD S0, S0, S1
	0x01CCD58C FMUL S1, S8, S8
	0x01CCD590 FADD S0, S1, S0
	0x01CCD594 FSQRT S0, S0
	0x01CCD598 FCMP S0, S2
	0x01CCD59C B.LE 0x1CCD5B0
	0x01CCD5A0 MOVZ W1, 0x2
	0x01CCD5A4 MOV X0, X19
	0x01CCD5A8 STR X31, [X19 + 0xB0]
	0x01CCD5AC BL 0x1CCCF3C
	0x01CCD5B0 LDP X20, X19, [X31 + 0xB0]
	0x01CCD5B4 LDP X22, X21, [X31 + 0xA0]
	0x01CCD5B8 LDR X30, [X31 + 0x90]
	0x01CCD5BC LDP D9, D8, [X31 + 0x80]
	0x01CCD5C0 LDP D11, D10, [X31 + 0x70]
	0x01CCD5C4 LDP D13, D12, [X31 + 0x60]
	0x01CCD5C8 ADD X31, X31, 0xC0
	0x01CCD5CC RET
	0x01CCD5D0 BL 0x1B6EA1C
	0x01CCD5D4 SUB X31, X31, 0xB0
	0x01CCD5D8 STP D13, D12, [X31 + 0x60]
	0x01CCD5DC STP D11, D10, [X31 + 0x70]
	0x01CCD5E0 STP D9, D8, [X31 + 0x80]
	0x01CCD5E4 STR X30, [X31 + 0x90]
	0x01CCD5E8 STP X20, X19, [X31 + 0xA0]
	0x01CCD5EC ADRP X20, 0x2556000
	0x01CCD5F0 LDRB W8, [X20 + 0x5A5]
	0x01CCD5F4 MOV X19, X0
	0x01CCD5F8 TBNZ X8, 0x0, 0x1CCD61C
	0x01CCD5FC ADRP X0, 0x2282000
	0x01CCD600 LDR X0, [X0 + 0x7B8]
	0x01CCD604 BL 0x1B6E7F0
	0x01CCD608 ADRP X0, 0x2282000
	0x01CCD60C LDR X0, [X0 + 0x7D0]
	0x01CCD610 BL 0x1B6E7F0
	0x01CCD614 MOVZ W8, 0x1
	0x01CCD618 STRB W8, [X20 + 0x5A5]
	0x01CCD61C MOVI V0.2D, 0x0
	0x01CCD620 STR W31, [X31 + 0x50]
	0x01CCD624 STP V0, V0, [X31 + 0x30]
	0x01CCD628 LDR X0, [X19 + 0x90]
	0x01CCD62C CBZ X0, 0x1CCD7AC
	0x01CCD630 ADRP X8, 0x2282000
	0x01CCD634 LDR X8, [X8 + 0x7B8]
	0x01CCD638 MOVZ W2, 0x1
	0x01CCD63C MOV X3, X31
	0x01CCD640 LDR X1, [X8]
	0x01CCD644 BL 0x3A5EEE8
	0x01CCD648 MOV X0, X19
	0x01CCD64C MOV X1, X31
	0x01CCD650 BL 0x3A9B084
	0x01CCD654 CBZ X0, 0x1CCD7AC
	0x01CCD658 MOV X1, X31
	0x01CCD65C BL 0x3AA7658
	0x01CCD660 LDR X0, [X19 + 0xA8]
	0x01CCD664 CBZ X0, 0x1CCD7AC
	0x01CCD668 MOV X1, X31
	0x01CCD66C MOV V8.16B, V0.16B
	0x01CCD670 MOV V9.16B, V1.16B
	0x01CCD674 MOV V10.16B, V2.16B
	0x01CCD678 BL 0x3AA7658
	0x01CCD67C ADRP X20, 0x2556000
	0x01CCD680 LDRB W8, [X20 + 0x506]
	0x01CCD684 MOV V11.16B, V0.16B
	0x01CCD688 MOV V12.16B, V1.16B
	0x01CCD68C MOV V13.16B, V2.16B
	0x01CCD690 CBNZ W8, 0x1CCD6A8
	0x01CCD694 ADRP X0, 0x2280000
	0x01CCD698 LDR X0, [X0 + 0x488]
	0x01CCD69C BL 0x1B6E7F0

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+144], D14
	003 Move [X31+152], D13
	004 Move [X31+160], D12
	005 Move [X31+168], D11
	006 Move [X31+176], D10
	007 Move [X31+184], D9
	008 Move [X31+192], D8
	009 Move [X31+200], X29
	010 Move [X31+208], X30
	011 Move [X31+216], X25
	012 Move [X31+224], X24
	013 Move [X31+232], X23
	014 Move [X31+240], X22
	015 Move [X31+248], X21
	016 Move [X31+256], X20
	017 Move [X31+264], X19
	018 Move X20, 0x2557000
	019 Move X21, 0x2283000
	020 Move W8, [X20+1435]
	021 Move X21, [X21+872]
	022 Move V8, V6
	023 Move V9, V5
	024 Move V10, V4
	025 Move V11, V3
	026 Move V12, V2
	027 Move V13, V1
	028 Move V14, V0
	029 Move W19, W0
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {57}
	034 Move X0, 0x2282000
	035 Move X0, [X0+584]
	036 Call 0x1B6F7F0
	037 Move X0, 0x2282000
	038 Move X0, [X0+592]
	039 Call 0x1B6F7F0
	040 Move X0, 0x2281000
	041 Move X0, [X0+1144]
	042 Call 0x1B6F7F0
	043 Move X0, 0x2282000
	044 Move X0, [X0+2952]
	045 Call 0x1B6F7F0
	046 Move X0, 0x2283000
	047 Move X0, [X0+872]
	048 Call 0x1B6F7F0
	049 Move X0, 0x2283000
	050 Move X0, [X0+1840]
	051 Call 0x1B6F7F0
	052 Move X0, 0x2283000
	053 Move X0, [X0+1848]
	054 Call 0x1B6F7F0
	055 Move W8, 1
	056 Move [X20+1435], W8
	057 Move X0, [X21]
	058 Move [X31+112], X31
	059 Move [X31+120], X31
	060 Move [X31+128], W31
	061 Move [X31+80], X31
	062 Move [X31+88], X31
	063 Move [X31+96], W31
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1B6F8F8
	068 Move W0, W19
	069 Call PrefabGenerator.LoadPrefab, X0
	070 Move X8, [X21]
	071 Move X8, [X8+184]
	072 Move X8, [X8+8]
	073 Compare X8, 0
	074 JumpIfEqual {234}
	075 Move X9, 0x2281000
	076 Move X9, [X9+1144]
	077 Move X19, X0
	078 Move X20, [X8+72]
	079 Move X0, [X9]
	080 Move W9, [X0+224]
	081 Compare W9, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1B6F8F8
	084 Move X0, X20
	085 Move X1, X31
	086 Move X2, X31
	087 Call Object.op_Equality, X0, X1
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {120}
	092 Move X0, [X21]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {98}
	096 Call 0x1B6F8F8
	097 Move X0, [X21]
	098 Move X8, [X0+184]
	099 Move X22, 0x2557000
	100 Move W9, [X22+1288]
	101 Move X20, [X8+8]
	102 Compare W9, 0
	103 JumpIfNotEqual {109}
	104 Move X0, 0x2281000
	105 Move X0, [X0+3960]
	106 Call 0x1B6F7F0
	107 Move W8, 1
	108 Move [X22+1288], W8
	109 Move X8, 0x2281000
	110 Move X8, [X8+3960]
	111 Move X8, [X8]
	112 Move X8, [X8+184]
	113 Move X8, [X8+64]
	114 Compare X8, 0
	115 JumpIfEqual {234}
	116 Compare X20, 0
	117 JumpIfEqual {234}
	118 Move X8, [X8+152]
	119 Move [X20+72], X8
	120 Move X0, [X21]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {126}
	124 Call 0x1B6F8F8
	125 Move X0, [X21]
	126 Move X8, [X0+184]
	127 Move X8, [X8+8]
	128 Compare X8, 0
	129 JumpIfEqual {234}
	130 Move X9, 0x2282000
	131 Move X9, [X9+584]
	132 Move X21, 0x2282000
	133 Move X21, [X21+592]
	134 Move X25, 0x2283000
	135 Move X1, [X9]
	136 Move X20, [X8+72]
	137 Move X25, [X25+1848]
	138 Add X0, X31, 64
	139 Move V0, V14
	140 Move V1, V13
	141 Move V2, V12
	142 Move [X31+64], X31
	143 Move [X31+72], X31
	144 Call Nullable`1<Vector3>..ctor, X0, X1
	145 Move X1, [X21]
	146 Add X0, X31, 40
	147 Move V0, V11
	148 Move V1, V10
	149 Move V2, V9
	150 Move V3, V8
	151 Move [X31+40], X31
	152 Move [X31+48], X31
	153 Move [X31+56], W31
	154 Call Nullable`1<Quaternion>..ctor, X0, X1
	155 Move X0, [X25]
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {161}
	159 Call 0x1B6F8F8
	160 Move X0, [X25]
	161 Move X8, [X0+184]
	162 Move X23, [X8+8]
	163 Compare X23, 0
	164 JumpIfEqual {169}
	165 NotImplemented "Instruction LDUR not yet implemented."
	166 Move W8, [X31+56]
	167 Move X21, [X31+64]
	168 Move X22, [X31+72]
	169 NotImplemented "Instruction LDUR not yet implemented."
	170 Move W8, [X31+56]
	171 Move X21, [X31+64]
	172 Move X22, [X31+72]
	173 Move [X31+5], V0
	174 Move [X31+96], W8
	175 Move W8, [X0+224]
	176 Compare W8, 0
	177 JumpIfNotEqual {180}
	178 Call 0x1B6F8F8
	179 Move X0, [X25]
	180 Move X9, 0x2282000
	181 Move X8, [X0+184]
	182 Move X9, [X9+2952]
	183 Move X24, [X8]
	184 Move X0, [X9]
	185 Call 0x1B6FA0C
	186 Move X8, 0x2283000
	187 Move X8, [X8+1840]
	188 Move X1, X24
	189 Move X3, X31
	190 Move X23, X0
	191 Move X2, [X8]
	192 Call OnBeforeSpawned..ctor, X0, X1, X2
	193 Move X8, [X25]
	194 Move X8, [X8+184]
	195 Move [X8+8], X23
	196 Move V0, [X31+5]
	197 Move W8, [X31+96]
	198 Move [X31+7], V0
	199 Move [X31+128], W8
	200 Compare X20, 0
	201 JumpIfEqual {234}
	202 Move V0, [X31+7]
	203 Move W8, [X31+128]
	204 Add X4, X31, 16
	205 Move X0, X20
	206 Move X1, X19
	207 Move X2, X21
	208 Move X3, X22
	209 Move X5, X31
	210 Move X6, X23
	211 Move W7, W31
	212 Move [X31+1], V0
	213 Move [X31+32], W8
	214 Move [X31], X31
	215 Call NetworkRunner.Spawn, X0, X1, X2, X3, X4, X5, X6
	216 Move X20, [X31+256]
	217 Move X19, [X31+264]
	218 Move X22, [X31+240]
	219 Move X21, [X31+248]
	220 Move X24, [X31+224]
	221 Move X23, [X31+232]
	222 Move X30, [X31+208]
	223 Move X25, [X31+216]
	224 Move X29, [X31+200]
	225 Move D9, [X31+184]
	226 Move D8, [X31+192]
	227 Move D11, [X31+168]
	228 Move D10, [X31+176]
	229 Move D13, [X31+152]
	230 Move D12, [X31+160]
	231 Move V14, [X31+144]
	232 Add X31, X31, 272
	233 Return 
	234 Call 0x1B6FA1C

Method: UnityEngine.GameObject LoadPrefab(AnimalCompany.PrefabGenerator/PrefabType prefabType)

Disassembly:
	0x01CCD6A0 MOVZ W8, 0x1
	0x01CCD6A4 STRB W8, [X20 + 0x506]
	0x01CCD6A8 ADRP X8, 0x2280000
	0x01CCD6AC LDR X8, [X8 + 0x488]
	0x01CCD6B0 FSUB S11, S8, S11
	0x01CCD6B4 FSUB S9, S9, S12
	0x01CCD6B8 FSUB S8, S10, S13
	0x01CCD6BC LDR X0, [X8]
	0x01CCD6C0 LDR W8, [X0 + 0xE0]
	0x01CCD6C4 CBNZ W8, 0x1CCD6CC
	0x01CCD6C8 BL 0x1B6E8F8
	0x01CCD6CC FMUL S0, S11, S11
	0x01CCD6D0 FMUL S1, S9, S9
	0x01CCD6D4 FMUL S2, S8, S8
	0x01CCD6D8 FADD S0, S0, S1
	0x01CCD6DC FADD S0, S2, S0
	0x01CCD6E0 FSQRT S0, S0
	0x01CCD6E4 FMOV S1, 1
	0x01CCD6E8 FCMP S0, S1
	0x01CCD6EC B.PL 0x1CCD700
	0x01CCD6F0 MOV X0, X19
	0x01CCD6F4 MOV W1, W31
	0x01CCD6F8 BL 0x1CCCF3C
	0x01CCD6FC B 0x1CCD790
	0x01CCD700 LDR X0, [X19 + 0x90]
	0x01CCD704 CBZ X0, 0x1CCD7AC
	0x01CCD708 ADD X8, X31, 0x8
	0x01CCD70C MOV W1, W31
	0x01CCD710 MOV X2, X31
	0x01CCD714 BL 0x3A5F5A4
	0x01CCD718 ADRP X9, 0x2282000
	0x01CCD71C LDUR V0, [X31 + 0x8]
	0x01CCD720 LDUR V1, [X31 + 0x18]
	0x01CCD724 LDR W8, [X31 + 0x28]
	0x01CCD728 LDR X9, [X9 + 0x7D0]
	0x01CCD72C ADD X0, X31, 0x30
	0x01CCD730 MOV X2, X31
	0x01CCD734 STP V0, V1, [X31 + 0x30]
	0x01CCD738 LDR X1, [X9]
	0x01CCD73C STR W8, [X31 + 0x50]
	0x01CCD740 BL 0x3A5EBCC
	0x01CCD744 LDR X20, [X19 + 0xA0]
	0x01CCD748 TBZ X0, 0x0, 0x1CCD77C
	0x01CCD74C LDR X0, [X19 + 0xA8]
	0x01CCD750 CBZ X0, 0x1CCD7AC
	0x01CCD754 MOV X1, X31
	0x01CCD758 BL 0x3AA7658
	0x01CCD75C CBZ X20, 0x1CCD7AC
	0x01CCD760 MOV X0, X20
	0x01CCD764 MOV X1, X31
	0x01CCD768 BL 0x3A4A810
	0x01CCD76C LDR X0, [X19 + 0xA0]
	0x01CCD770 CBZ X0, 0x1CCD7AC
	0x01CCD774 MOV W1, W31
	0x01CCD778 B 0x1CCD788
	0x01CCD77C CBZ X20, 0x1CCD7AC
	0x01CCD780 MOVZ W1, 0x1
	0x01CCD784 MOV X0, X20
	0x01CCD788 MOV X2, X31
	0x01CCD78C BL 0x3A4AB90
	0x01CCD790 LDP X20, X19, [X31 + 0xA0]
	0x01CCD794 LDR X30, [X31 + 0x90]
	0x01CCD798 LDP D9, D8, [X31 + 0x80]
	0x01CCD79C LDP D11, D10, [X31 + 0x70]
	0x01CCD7A0 LDP D13, D12, [X31 + 0x60]
	0x01CCD7A4 ADD X31, X31, 0xB0
	0x01CCD7A8 RET
	0x01CCD7AC BL 0x1B6EA1C
	0x01CCD7B0 STP X30, X19, [X31 - 0x10]!
	0x01CCD7B4 LDR X19, [X0 + 0x80]
	0x01CCD7B8 MOV X1, X31
	0x01CCD7BC BL 0x3A9B084
	0x01CCD7C0 CBZ X0, 0x1CCD7E0
	0x01CCD7C4 MOV X1, X31
	0x01CCD7C8 BL 0x3AA7658
	0x01CCD7CC CBZ X19, 0x1CCD7E0
	0x01CCD7D0 FMOV S3, 1
	0x01CCD7D4 MOV X0, X19
	0x01CCD7D8 LDP X30, X19, [X31], #0x10
	0x01CCD7DC B 0x1CCD9CC
	0x01CCD7E0 BL 0x1B6EA1C
	0x01CCD7E4 STP X30, X21, [X31 - 0x20]!
	0x01CCD7E8 STP X20, X19, [X31 + 0x10]
	0x01CCD7EC ADRP X21, 0x2556000
	0x01CCD7F0 ADRP X20, 0x2280000
	0x01CCD7F4 LDRB W8, [X21 + 0x5A6]
	0x01CCD7F8 LDR X20, [X20 + 0x478]
	0x01CCD7FC MOV X19, X0
	0x01CCD800 TBNZ X8, 0x0, 0x1CCD818
	0x01CCD804 ADRP X0, 0x2280000
	0x01CCD808 LDR X0, [X0 + 0x478]
	0x01CCD80C BL 0x1B6E7F0
	0x01CCD810 MOVZ W8, 0x1
	0x01CCD814 STRB W8, [X21 + 0x5A6]
	0x01CCD818 LDR X0, [X20]
	0x01CCD81C LDR X20, [X19 + 0xA8]
	0x01CCD820 LDR W8, [X0 + 0xE0]
	0x01CCD824 CBNZ W8, 0x1CCD82C
	0x01CCD828 BL 0x1B6E8F8
	0x01CCD82C MOV X0, X20
	0x01CCD830 MOV X1, X31
	0x01CCD834 MOV X2, X31

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, 0x2557000
	007 Move X21, 0x2283000
	008 Move W8, [X20+1436]
	009 Move X21, [X21+872]
	010 Move W19, W0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {38}
	015 Move X0, 0x2283000
	016 Move X0, [X0+1856]
	017 Call 0x1B6F7F0
	018 Move X0, 0x2283000
	019 Move X0, [X0+1864]
	020 Call 0x1B6F7F0
	021 Move X0, 0x2283000
	022 Move X0, [X0+1872]
	023 Call 0x1B6F7F0
	024 Move X0, 0x2283000
	025 Move X0, [X0+872]
	026 Call 0x1B6F7F0
	027 Move X0, 0x2283000
	028 Move X0, [X0+1880]
	029 Call 0x1B6F7F0
	030 Move X0, 0x2283000
	031 Move X0, [X0+1888]
	032 Call 0x1B6F7F0
	033 Move X0, 0x2283000
	034 Move X0, [X0+1896]
	035 Call 0x1B6F7F0
	036 Move W8, 1
	037 Move [X20+1436], W8
	038 Move X0, [X21]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1B6F8F8
	043 Move X0, [X21]
	044 Move X8, [X0+184]
	045 Move X0, [X8]
	046 Compare X0, 0
	047 JumpIfEqual {122}
	048 Move X8, 0x2283000
	049 Move X8, [X8+1864]
	050 Move W1, W19
	051 Move X2, [X8]
	052 Call Dictionary`2<Int32Enum, Object>.ContainsKey, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {98}
	057 Move X8, 0x2283000
	058 Move X8, [X8+1880]
	059 Move TEMP, 0
	060 Not TEMP
	061 Move X9, TEMP
	062 Add X0, X31, 8
	063 Move X1, X31
	064 Move X8, [X8]
	065 Move [X31+24], W19
	066 Move [X31+8], X8
	067 Move [X31+16], X9
	068 Call Enum.ToString, X0
	069 Move X8, 0x2283000
	070 Move X8, [X8+1896]
	071 Move X1, X0
	072 Move X2, X31
	073 Move X8, [X8]
	074 Move X0, X8
	075 Call String.Concat, X0, X1
	076 Move X8, 0x2283000
	077 Move X8, [X8+1888]
	078 Move X1, [X8]
	079 Call 0x212A3B0, X0
	080 Move X8, [X21]
	081 Move X20, X0
	082 Move W9, [X8+224]
	083 Compare W9, 0
	084 JumpIfNotEqual {88}
	085 Move X0, X8
	086 Call 0x1B6F8F8
	087 Move X8, [X21]
	088 Move X8, [X8+184]
	089 Move X0, [X8]
	090 Compare X0, 0
	091 JumpIfEqual {122}
	092 Move X8, 0x2283000
	093 Move X8, [X8+1856]
	094 Move W1, W19
	095 Move X2, X20
	096 Move X3, [X8]
	097 Call Dictionary`2<Int32Enum, Object>.Add, X0, X1, X2
	098 Move X0, [X21]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {104}
	102 Call 0x1B6F8F8
	103 Move X0, [X21]
	104 Move X8, [X0+184]
	105 Move X0, [X8]
	106 Compare X0, 0
	107 JumpIfEqual {122}
	108 Move X8, 0x2283000
	109 Move X8, [X8+1872]
	110 Move W1, W19
	111 Move X2, [X8]
	112 Call Dictionary`2<Int32Enum, Object>.get_Item, X0, X1
	113 Compare X0, 0
	114 JumpIfEqual {122}
	115 Call RandomPrefab.get_prefab, X0
	116 Move X20, [X31+48]
	117 Move X19, [X31+56]
	118 Move X30, [X31+32]
	119 Move X21, [X31+40]
	120 Add X31, X31, 64
	121 Return X0
	122 Call 0x1B6FA1C

Method: System.Void .ctor()

Disassembly:
	0x01CCD894 BL 0x3A9B084
	0x01CCD898 CBZ X0, 0x1CCD8B8
	0x01CCD89C MOV X1, X31
	0x01CCD8A0 BL 0x3AA7658
	0x01CCD8A4 LDR V3, [X19 + 0xBC]
	0x01CCD8A8 LDP X20, X19, [X31 + 0x10]
	0x01CCD8AC MOV X0, X31
	0x01CCD8B0 LDP X30, X21, [X31], #0x20
	0x01CCD8B4 B 0x3A7567C
	0x01CCD8B8 BL 0x1B6EA1C
	0x01CCD8BC STP X30, X19, [X31 - 0x10]!
	0x01CCD8C0 LDR X8, [X0 + 0x38]
	0x01CCD8C4 CBZ X8, 0x1CCD90C
	0x01CCD8C8 LDR W8, [X8 + 0x180]
	0x01CCD8CC CMP W8, 0x2
	0x01CCD8D0 B.NE 0x1CCD904
	0x01CCD8D4 MOV X19, X0
	0x01CCD8D8 LDR X0, [X0 + 0x40]
	0x01CCD8DC CBZ X0, 0x1CCD904
	0x01CCD8E0 LDRB W8, [X0 + 0x60]
	0x01CCD8E4 TBNZ X8, 0x1, 0x1CCD904
	0x01CCD8E8 MOV X1, X31
	0x01CCD8EC BL 0x1D9E780
	0x01CCD8F0 TBZ X0, 0x0, 0x1CCD904
	0x01CCD8F4 MOV X0, X19
	0x01CCD8F8 MOV W1, W31
	0x01CCD8FC LDP X30, X19, [X31], #0x10
	0x01CCD900 B 0x1CCCF3C
	0x01CCD904 LDP X30, X19, [X31], #0x10
	0x01CCD908 RET
	0x01CCD90C BL 0x1B6EA1C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2557000
	007 Move X22, 0x2283000
	008 Move X20, 0x2283000
	009 Move W8, [X21+1437]
	010 Move X22, [X22+1904]
	011 Move X20, [X20+1912]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2283000
	018 Move X0, [X0+1912]
	019 Call 0x1B6F7F0
	020 Move X0, 0x2283000
	021 Move X0, [X0+1904]
	022 Call 0x1B6F7F0
	023 Move W8, 1
	024 Move [X21+1437], W8
	025 Move X0, [X22]
	026 Call 0x1B6FA0C
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call List`1<Object>..ctor, X0
	030 Move [X19+80], X20
	031 Move X0, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+48]
	038 Call SimulationBehaviour..ctor, X0
	039 Return 

Method: System.Void .cctor()

Disassembly:
	0x01CCD910 ADRP X8, 0xFFFFFFFFFEDE0000
	0x01CCD914 LDR V0, [X8 + 0x340]
	0x01CCD918 MOV X1, X31
	0x01CCD91C STUR D0, [X0 + 0xBC]
	0x01CCD920 B 0x1D661D8
	0x01CCD924 LDR W1, [X0 + 0xC4]
	0x01CCD928 B 0x1CCCF3C
	0x01CCD92C STP X30, X19, [X31 - 0x10]!
	0x01CCD930 MOV X19, X0
	0x01CCD934 BL 0x1CCCEDC
	0x01CCD938 STR W0, [X19 + 0xC4]
	0x01CCD93C LDP X30, X19, [X31], #0x10
	0x01CCD940 RET
	0x01CCD944 STR X30, [X31 - 0x20]!
	0x01CCD948 STP X20, X19, [X31 + 0x10]
	0x01CCD94C ADRP X20, 0x2556000
	0x01CCD950 LDRB W8, [X20 + 0x5A7]
	0x01CCD954 MOV X19, X0
	0x01CCD958 TBNZ X8, 0x0, 0x1CCD97C
	0x01CCD95C ADRP X0, 0x2282000
	0x01CCD960 LDR X0, [X0 + 0x7D8]
	0x01CCD964 BL 0x1B6E7F0
	0x01CCD968 ADRP X0, 0x2282000
	0x01CCD96C LDR X0, [X0 + 0x7E0]
	0x01CCD970 BL 0x1B6E7F0
	0x01CCD974 MOVZ W8, 0x1
	0x01CCD978 STRB W8, [X20 + 0x5A7]
	0x01CCD97C LDR X19, [X19 + 0x18]
	0x01CCD980 CBZ X19, 0x1CCD9C8
	0x01CCD984 LDR W1, [X19 + 0x18]
	0x01CCD988 CBZ W1, 0x1CCD9B8
	0x01CCD98C ADRP X20, 0x2282000
	0x01CCD990 LDR X20, [X20 + 0x7E0]
	0x01CCD994 MOV W0, W31
	0x01CCD998 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2557000
	007 Move X22, 0x2283000
	008 Move X19, 0x2283000
	009 Move X20, 0x2283000
	010 Move W8, [X21+1438]
	011 Move X22, [X22+1920]
	012 Move X19, [X19+1928]
	013 Move X20, [X20+872]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x2283000
	019 Move X0, [X0+1928]
	020 Call 0x1B6F7F0
	021 Move X0, 0x2283000
	022 Move X0, [X0+1920]
	023 Call 0x1B6F7F0
	024 Move X0, 0x2283000
	025 Move X0, [X0+872]
	026 Call 0x1B6F7F0
	027 Move W8, 1
	028 Move [X21+1438], W8
	029 Move X0, [X22]
	030 Call 0x1B6FA0C
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call Dictionary`2<Int32Enum, Object>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+48]
	042 Return 

Method: System.Void RPC_GeneratePrefab@Invoker(Fusion.NetworkRunner runner, Fusion.SimulationMessage* message)

Disassembly:
	0x01CCD99C BL 0x3A98D10
	0x01CCD9A0 LDR X2, [X20]
	0x01CCD9A4 MOV W1, W0
	0x01CCD9A8 MOV X0, X19
	0x01CCD9AC LDP X20, X19, [X31 + 0x10]
	0x01CCD9B0 LDR X30, [X31], #0x20
	0x01CCD9B4 B 0x2E46254
	0x01CCD9B8 LDP X20, X19, [X31 + 0x10]
	0x01CCD9BC MOV X0, X31
	0x01CCD9C0 LDR X30, [X31], #0x20
	0x01CCD9C4 RET
	0x01CCD9C8 BL 0x1B6EA1C
	0x01CCD9CC STP D11, D10, [X31 - 0x40]!
	0x01CCD9D0 STP D9, D8, [X31 + 0x10]
	0x01CCD9D4 STP X30, X21, [X31 + 0x20]
	0x01CCD9D8 STP X20, X19, [X31 + 0x30]
	0x01CCD9DC ADRP X20, 0x2556000
	0x01CCD9E0 ADRP X21, 0x2282000
	0x01CCD9E4 LDRB W8, [X20 + 0x5AC]
	0x01CCD9E8 LDR X21, [X21 + 0x358]
	0x01CCD9EC MOV V8.16B, V3.16B
	0x01CCD9F0 MOV V9.16B, V2.16B
	0x01CCD9F4 MOV V10.16B, V1.16B
	0x01CCD9F8 MOV V11.16B, V0.16B
	0x01CCD9FC MOV X19, X0
	0x01CCDA00 TBNZ X8, 0x0, 0x1CCDA30
	0x01CCDA04 ADRP X0, 0x2282000
	0x01CCDA08 LDR X0, [X0 + 0x7E8]
	0x01CCDA0C BL 0x1B6E7F0
	0x01CCDA10 ADRP X0, 0x2282000
	0x01CCDA14 LDR X0, [X0 + 0x7F0]
	0x01CCDA18 BL 0x1B6E7F0
	0x01CCDA1C ADRP X0, 0x2282000
	0x01CCDA20 LDR X0, [X0 + 0x358]
	0x01CCDA24 BL 0x1B6E7F0
	0x01CCDA28 MOVZ W8, 0x1
	0x01CCDA2C STRB W8, [X20 + 0x5AC]
	0x01CCDA30 LDR X8, [X21]
	0x01CCDA34 LDR X8, [X8 + 0xB8]
	0x01CCDA38 LDR X8, [X8]
	0x01CCDA3C CBZ X8, 0x1CCDA98
	0x01CCDA40 LDR X0, [X8 + 0x50]
	0x01CCDA44 CBZ X0, 0x1CCDA98
	0x01CCDA48 LDR W8, [X0 + 0x20]
	0x01CCDA4C CBZ W8, 0x1CCDA64
	0x01CCDA50 ADRP X8, 0x2282000
	0x01CCDA54 LDR X8, [X8 + 0x7E8]
	0x01CCDA58 LDR X1, [X8]
	0x01CCDA5C BL 0x2368B84
	0x01CCDA60 B 0x1CCDA68
	0x01CCDA64 BL 0x1CCDD6C
	0x01CCDA68 MOV X1, X0
	0x01CCDA6C MOV X0, X19
	0x01CCDA70 MOV V2.16B, V9.16B
	0x01CCDA74 MOV V3.16B, V8.16B
	0x01CCDA78 LDP X20, X19, [X31 + 0x30]
	0x01CCDA7C LDP X30, X21, [X31 + 0x20]
	0x01CCDA80 LDP D9, D8, [X31 + 0x10]
	0x01CCDA84 MOVZ W2, 0x1
	0x01CCDA88 MOV V0.16B, V11.16B
	0x01CCDA8C MOV V1.16B, V10.16B
	0x01CCDA90 LDP D11, D10, [X31], #0x40
	0x01CCDA94 B 0x1CCDF90

ISIL:
	001 Move [X31-112], D14
	002 Move [X31+8], D13
	003 Move [X31+16], D12
	004 Move [X31+24], D11
	005 Move [X31+32], D10
	006 Move [X31+40], D9
	007 Move [X31+48], D8
	008 Move [X31+56], X30
	009 Move [X31+64], X24
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Move X20, 0x2557000
	016 Move X22, 0x2282000
	017 Move W8, [X20+1439]
	018 Move X22, [X22+448]
	019 Move X21, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0x2282000
	026 Move X0, [X0+448]
	027 Call 0x1B6F7F0
	028 Move X0, 0x2283000
	029 Move X0, [X0+872]
	030 Call 0x1B6F7F0
	031 Move W8, 1
	032 Move [X20+1439], W8
	033 Move X23, 0x2283000
	034 Move X23, [X23+872]
	035 Move W0, 1
	036 Move X1, X31
	037 Move W24, 1
	038 Call Assert.Check, X0
	039 Move X0, [X22]
	040 Move W20, [X21+36]
	041 Move S8, [X21+40]
	042 Move S9, [X21+44]
	043 Move S14, [X21+48]
	044 Move S13, [X21+52]
	045 Move S11, [X21+56]
	046 Move S10, [X21+60]
	047 Move W8, [X0+224]
	048 Move V12, [X21+64]
	049 Compare W8, 0
	050 JumpIfNotEqual {53}
	051 Call 0x1B6F8F8
	052 Move X0, [X22]
	053 Move X8, [X0+184]
	054 Move [X8+32], W24
	055 Move X0, [X23]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1B6F8F8
	060 Move X0, X19
	061 Move W1, W20
	062 Move V0, V8
	063 Move V1, V9
	064 Move V3, V13
	065 Move V4, V11
	066 Move V5, V10
	067 Move V6, V12
	068 Move X20, [X31+96]
	069 Move X19, [X31+104]
	070 Move X22, [X31+80]
	071 Move X21, [X31+88]
	072 Move X24, [X31+64]
	073 Move X23, [X31+72]
	074 Move X30, [X31+56]
	075 Move D9, [X31+40]
	076 Move D8, [X31+48]
	077 Move D11, [X31+24]
	078 Move D10, [X31+32]
	079 Move D13, [X31+8]
	080 Move D12, [X31+16]
	081 Move V2, V14
	082 Move V14, [X31+112]
	083 Call PrefabGenerator.RPC_GeneratePrefab, X0, X1, X2, X3
	084 Return 

