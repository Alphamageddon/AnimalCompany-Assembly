Type: AnimalCompany.WalletView

Method: System.Void OnEnable()

Disassembly:
	0x01D7CD18 MOV X1, X31
	0x01D7CD1C BL 0x3C357F8
	0x01D7CD20 TBZ X0, 0x0, 0x1D7CF70
	0x01D7CD24 LDP S3, S0, [X19 + 0x3C]
	0x01D7CD28 FMOV S1, -0.5
	0x01D7CD2C LDP S4, S2, [X19 + 0x28]
	0x01D7CD30 FMOV S8, 1
	0x01D7CD34 FADD S1, S0, S1
	0x01D7CD38 LDR V10, [X19 + 0x38]
	0x01D7CD3C FADD S1, S1, S1
	0x01D7CD40 FMOV S9, W31
	0x01D7CD44 FCMP S1, 0x0
	0x01D7CD48 FMIN S1, S1, S8
	0x01D7CD4C FMIN S5, S2, S8
	0x01D7CD50 FCSEL S11, S1, S9, PL
	0x01D7CD54 FCMP S2, 0x0
	0x01D7CD58 FSUB S1, S9, S3
	0x01D7CD5C FCSEL S2, S5, S9, PL
	0x01D7CD60 FMUL S1, S1, S2
	0x01D7CD64 FSUB S0, S0, S10
	0x01D7CD68 FADD S1, S3, S1
	0x01D7CD6C FMUL S0, S0, S4
	0x01D7CD70 FADD S12, S0, S1
	0x01D7CD74 MOV X0, X31
	0x01D7CD78 STR S12, [X19 + 0x3C]
	0x01D7CD7C BL 0x3C3C714
	0x01D7CD80 FMUL S0, S0, S12
	0x01D7CD84 FADD S0, S10, S0
	0x01D7CD88 STR S0, [X19 + 0x38]
	0x01D7CD8C FMUL S0, S0, S0
	0x01D7CD90 FMUL S1, S0, S0
	0x01D7CD94 FADD S0, S0, S0
	0x01D7CD98 FMOV S2, 3
	0x01D7CD9C FSUB S0, S2, S0
	0x01D7CDA0 MOV X0, X31
	0x01D7CDA4 FMUL S10, S1, S0
	0x01D7CDA8 BL 0x3C3C6C4
	0x01D7CDAC LDR V1, [X19 + 0x30]
	0x01D7CDB0 FMUL S0, S0, S1
	0x01D7CDB4 BL 0x3EB1B70
	0x01D7CDB8 LDR V1, [X19 + 0x34]
	0x01D7CDBC FMUL S0, S11, S0
	0x01D7CDC0 LDR X0, [X19 + 0x20]
	0x01D7CDC4 FSUB S2, S8, S1
	0x01D7CDC8 FMUL S0, S1, S0
	0x01D7CDCC FMUL S1, S2, S10
	0x01D7CDD0 FADD S0, S0, S1
	0x01D7CDD4 FMIN S1, S0, S8
	0x01D7CDD8 FCMP S0, 0x0
	0x01D7CDDC FCSEL S8, S1, S9, PL
	0x01D7CDE0 CBZ X0, 0x1D7CF8C
	0x01D7CDE4 MOV X1, X31
	0x01D7CDE8 BL 0x1E1E7F4
	0x01D7CDEC ADRP X21, 0x2377000
	0x01D7CDF0 LDR X21, [X21 + 0x598]
	0x01D7CDF4 MOV X20, X0
	0x01D7CDF8 LDR X8, [X21]
	0x01D7CDFC LDR W9, [X8 + 0xE0]
	0x01D7CE00 CBNZ W9, 0x1D7CE0C
	0x01D7CE04 MOV X0, X8
	0x01D7CE08 BL 0x1C16DFC
	0x01D7CE0C MOV X0, X20
	0x01D7CE10 MOV X1, X31
	0x01D7CE14 MOV X2, X31
	0x01D7CE18 BL 0x3C354F8
	0x01D7CE1C TBZ X0, 0x0, 0x1D7CE40
	0x01D7CE20 CBZ X20, 0x1D7CF8C
	0x01D7CE24 MOVZ W8, 0x42C80000
	0x01D7CE28 FMOV S0, W8
	0x01D7CE2C FMUL S0, S8, S0
	0x01D7CE30 MOV X0, X20
	0x01D7CE34 MOV W1, W31
	0x01D7CE38 MOV X2, X31
	0x01D7CE3C BL 0x3C16F50
	0x01D7CE40 LDR X0, [X19 + 0x20]
	0x01D7CE44 CBZ X0, 0x1D7CF8C
	0x01D7CE48 MOV X1, X31
	0x01D7CE4C BL 0x1E1E974
	0x01D7CE50 LDR X8, [X21]
	0x01D7CE54 MOV X20, X0
	0x01D7CE58 LDR W9, [X8 + 0xE0]
	0x01D7CE5C CBNZ W9, 0x1D7CE68
	0x01D7CE60 MOV X0, X8
	0x01D7CE64 BL 0x1C16DFC
	0x01D7CE68 MOV X0, X20
	0x01D7CE6C MOV X1, X31
	0x01D7CE70 MOV X2, X31
	0x01D7CE74 BL 0x3C354F8
	0x01D7CE78 TBZ X0, 0x0, 0x1D7CECC
	0x01D7CE7C LDR X0, [X19 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x265D000
	009 Move X24, 0x2378000
	010 Move X19, 0x237B000
	011 Move X22, 0x2378000
	012 Move X21, 0x2378000
	013 Move W8, [X23+2377]
	014 Move X24, [X24+3488]
	015 Move X19, [X19+1096]
	016 Move X22, [X22+3504]
	017 Move X21, [X21+1608]
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x2378000
	024 Move X0, [X0+1608]
	025 Call 0x1C17CF4
	026 Move X0, 0x2378000
	027 Move X0, [X0+3504]
	028 Call 0x1C17CF4
	029 Move X0, 0x2378000
	030 Move X0, [X0+3488]
	031 Call 0x1C17CF4
	032 Move X0, 0x237B000
	033 Move X0, [X0+1096]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+2377], W8
	037 Move X0, [X24]
	038 Call 0x1C17F10
	039 Move X2, [X19]
	040 Move X1, X20
	041 Move X3, X31
	042 Move X19, X0
	043 Call ObserverDelegate..ctor, X0, X1, X2
	044 Move X0, [X22]
	045 Move W1, 1
	046 Call 0x1C17D6C
	047 Move X8, [X21]
	048 Move X20, X0
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Move X22, 0x265D000
	055 Move W8, [X22+1927]
	056 Compare W8, 0
	057 JumpIfNotEqual {63}
	058 Move X0, 0x2378000
	059 Move X0, [X0+1608]
	060 Call 0x1C17CF4
	061 Move W8, 1
	062 Move [X22+1927], W8
	063 Move X0, [X21]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {69}
	067 Call 0x1C17DFC
	068 Move X0, [X21]
	069 Move X8, [X0+184]
	070 Move X8, [X8]
	071 Compare X8, 0
	072 JumpIfEqual {106}
	073 Move X8, [X8+184]
	074 Compare X8, 0
	075 JumpIfEqual {106}
	076 Move X8, [X8+128]
	077 Compare X8, 0
	078 JumpIfEqual {106}
	079 Compare X20, 0
	080 JumpIfEqual {106}
	081 Move X21, [X8+80]
	082 Compare X21, 0
	083 JumpIfEqual {90}
	084 Move X8, [X20]
	085 Move X0, X21
	086 Move X1, [X8+64]
	087 Call 0x1C17E00
	088 Compare X0, 0
	089 JumpIfEqual {108}
	090 Move W8, [X20+24]
	091 Compare W8, 0
	092 JumpIfEqual {107}
	093 Move [X20+32], X21
	094 Move X0, X19
	095 Move X1, X20
	096 Move X20, [X31+48]
	097 Move X19, [X31+56]
	098 Move X22, [X31+32]
	099 Move X21, [X31+40]
	100 Move X24, [X31+16]
	101 Move X23, [X31+24]
	102 Move X2, X31
	103 Move X30, [X31+64]
	104 Call App.RegisterObserver, X0, X1
	105 Return 
	106 Call 0x1C17F20
	107 Call 0x1C17F28
	108 Call 0x1C17F44
	109 Move X1, X31
	110 Call 0x1C17DEC

Method: System.Void OnDisable()

Disassembly:
	0x01D7CE80 CBZ X0, 0x1D7CF8C
	0x01D7CE84 MOV X1, X31
	0x01D7CE88 BL 0x1E1E974
	0x01D7CE8C ADRP X22, 0x237A000
	0x01D7CE90 LDR X22, [X22 + 0x468]
	0x01D7CE94 MOV X20, X0
	0x01D7CE98 LDR X8, [X22]
	0x01D7CE9C LDR W9, [X8 + 0xE0]
	0x01D7CEA0 CBNZ W9, 0x1D7CEAC
	0x01D7CEA4 MOV X0, X8
	0x01D7CEA8 BL 0x1C16DFC
	0x01D7CEAC CBZ X20, 0x1D7CF8C
	0x01D7CEB0 LDR X8, [X22]
	0x01D7CEB4 MOV X0, X20
	0x01D7CEB8 MOV V0.16B, V8.16B
	0x01D7CEBC MOV X2, X31
	0x01D7CEC0 LDR X8, [X8 + 0xB8]
	0x01D7CEC4 LDR W1, [X8]
	0x01D7CEC8 BL 0x3C15CD8
	0x01D7CECC LDR X0, [X19 + 0x20]
	0x01D7CED0 CBZ X0, 0x1D7CF8C
	0x01D7CED4 MOV X1, X31
	0x01D7CED8 BL 0x1E1EA5C
	0x01D7CEDC LDR X8, [X21]
	0x01D7CEE0 MOV X20, X0
	0x01D7CEE4 LDR W9, [X8 + 0xE0]
	0x01D7CEE8 CBNZ W9, 0x1D7CEF4
	0x01D7CEEC MOV X0, X8
	0x01D7CEF0 BL 0x1C16DFC
	0x01D7CEF4 MOV X0, X20
	0x01D7CEF8 MOV X1, X31
	0x01D7CEFC MOV X2, X31
	0x01D7CF00 BL 0x3C354F8
	0x01D7CF04 TBZ X0, 0x0, 0x1D7CF70
	0x01D7CF08 LDR X0, [X19 + 0x20]
	0x01D7CF0C CBZ X0, 0x1D7CF8C
	0x01D7CF10 MOV X1, X31
	0x01D7CF14 BL 0x1E1EA5C
	0x01D7CF18 ADRP X20, 0x237A000
	0x01D7CF1C LDR X20, [X20 + 0x468]
	0x01D7CF20 MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x265D000
	008 Move X23, 0x2378000
	009 Move X20, 0x237B000
	010 Move X21, 0x2378000
	011 Move W8, [X22+2378]
	012 Move X23, [X23+3488]
	013 Move X20, [X20+1096]
	014 Move X21, [X21+1608]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x2378000
	021 Move X0, [X0+1608]
	022 Call 0x1C17CF4
	023 Move X0, 0x2378000
	024 Move X0, [X0+3488]
	025 Call 0x1C17CF4
	026 Move X0, 0x237B000
	027 Move X0, [X0+1096]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+2378], W8
	031 Move X0, [X23]
	032 Call 0x1C17F10
	033 Move X2, [X20]
	034 Move X1, X19
	035 Move X3, X31
	036 Move X20, X0
	037 Call ObserverDelegate..ctor, X0, X1, X2
	038 Move X0, [X21]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X20
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X1, X31
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Call App.DeregisterObserver, X0
	052 Return 

Method: System.Void OnWalletValueChanged(SpatialSys.ObservableState.StateChangedEventArgs args)

Disassembly:
	0x01D7CF24 LDR X8, [X20]
	0x01D7CF28 LDR W9, [X8 + 0xE0]
	0x01D7CF2C CBNZ W9, 0x1D7CF38
	0x01D7CF30 MOV X0, X8
	0x01D7CF34 BL 0x1C16DFC
	0x01D7CF38 CBZ X19, 0x1D7CF8C
	0x01D7CF3C LDR X8, [X20]
	0x01D7CF40 MOV X0, X19
	0x01D7CF44 MOV V0.16B, V8.16B
	0x01D7CF48 LDP X20, X19, [X31 + 0x40]
	0x01D7CF4C LDR X8, [X8 + 0xB8]
	0x01D7CF50 LDP X22, X21, [X31 + 0x30]
	0x01D7CF54 LDR X30, [X31 + 0x28]
	0x01D7CF58 LDP D9, D8, [X31 + 0x18]
	0x01D7CF5C LDR W1, [X8]
	0x01D7CF60 LDP D11, D10, [X31 + 0x8]
	0x01D7CF64 MOV X2, X31
	0x01D7CF68 LDR V12, [X31], #0x50
	0x01D7CF6C B 0x3C15CD8
	0x01D7CF70 LDP X20, X19, [X31 + 0x40]
	0x01D7CF74 LDP X22, X21, [X31 + 0x30]
	0x01D7CF78 LDR X30, [X31 + 0x28]
	0x01D7CF7C LDP D9, D8, [X31 + 0x18]
	0x01D7CF80 LDP D11, D10, [X31 + 0x8]
	0x01D7CF84 LDR V12, [X31], #0x50
	0x01D7CF88 RET
	0x01D7CF8C BL 0x1C16F20
	0x01D7CF90 ADRP X8, 0xFFFFFFFFFED6E000
	0x01D7CF94 LDR V0, [X8 + 0xEB]
	0x01D7CF98 MOV X1, X31
	0x01D7CF9C STUR V0, [X0 + 0x28]
	0x01D7CFA0 B 0x3C36C30
	0x01D7CFA4 STP X30, X21, [X31 - 0x20]!
	0x01D7CFA8 STP X20, X19, [X31 + 0x10]
	0x01D7CFAC ADRP X20, 0x265C000
	0x01D7CFB0 ADRP X21, 0x237A000
	0x01D7CFB4 ADRP X19, 0x237A000
	0x01D7CFB8 LDRB W8, [X20 + 0x94F]
	0x01D7CFBC LDR X21, [X21 + 0x470]
	0x01D7CFC0 LDR X19, [X19 + 0x468]
	0x01D7CFC4 TBNZ X8, 0x0, 0x1D7CFE8
	0x01D7CFC8 ADRP X0, 0x237A000
	0x01D7CFCC LDR X0, [X0 + 0x468]
	0x01D7CFD0 BL 0x1C16CF4
	0x01D7CFD4 ADRP X0, 0x237A000
	0x01D7CFD8 LDR X0, [X0 + 0x470]
	0x01D7CFDC BL 0x1C16CF4
	0x01D7CFE0 MOVZ W8, 0x1
	0x01D7CFE4 STRB W8, [X20 + 0x94F]
	0x01D7CFE8 LDR X0, [X21]
	0x01D7CFEC MOV X1, X31
	0x01D7CFF0 BL 0x3C124EC
	0x01D7CFF4 LDR X8, [X19]
	0x01D7CFF8 LDP X20, X19, [X31 + 0x10]
	0x01D7CFFC LDR X8, [X8 + 0xB8]
	0x01D7D000 STR W0, [X8]
	0x01D7D004 LDP X30, X21, [X31], #0x20
	0x01D7D008 RET
	0x01D7D00C STP X30, X27, [X31 - 0x50]!
	0x01D7D010 STP X26, X25, [X31 + 0x10]
	0x01D7D014 STP X24, X23, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x265D000
	007 Move X20, 0x2378000
	008 Move W8, [X21+2379]
	009 Move X20, [X20+1608]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x2378000
	016 Move X0, [X0+1608]
	017 Call 0x1C17CF4
	018 Move X0, 0x2379000
	019 Move X0, [X0+2896]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+2379], W8
	023 Move X0, [X20]
	024 Move X19, [X19+32]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X21, 0x265D000
	030 Move W8, [X21+1927]
	031 Compare W8, 0
	032 JumpIfNotEqual {38}
	033 Move X0, 0x2378000
	034 Move X0, [X0+1608]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+1927], W8
	038 Move X0, [X20]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X20]
	044 Move X8, [X0+184]
	045 Move X8, [X8]
	046 Compare X8, 0
	047 JumpIfEqual {76}
	048 Move X8, [X8+184]
	049 Compare X8, 0
	050 JumpIfEqual {76}
	051 Move X8, [X8+128]
	052 Compare X8, 0
	053 JumpIfEqual {76}
	054 Move X8, [X8+80]
	055 Compare X8, 0
	056 JumpIfEqual {76}
	057 Move W8, [X8+76]
	058 Add X0, X31, 12
	059 Move X1, X31
	060 Move [X31+12], W8
	061 Call Int32.ToString, X0
	062 Compare X19, 0
	063 JumpIfEqual {76}
	064 Move X8, [X19]
	065 Move X1, X0
	066 Move X0, X19
	067 Move X9, [X8+1368]
	068 Move X2, [X8+1376]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X30, [X31+16]
	073 Move X21, [X31+24]
	074 Add X31, X31, 48
	075 Return 
	076 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01D7D018 STP X22, X21, [X31 + 0x30]
	0x01D7D01C STP X20, X19, [X31 + 0x40]

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

