Type: AnimalCompany.NetPlayer

Method: System.Boolean get_isDie()

Disassembly:
	0x01DAFC64 LDR X8, [X8 + 0x988]
	0x01DAFC68 LDR X8, [X8]
	0x01DAFC6C STR X8, [X19 + 0x28]
	0x01DAFC70 MOV X0, X19
	0x01DAFC74 MOV X1, X31
	0x01DAFC78 B 0x1DAFCBC
	0x01DAFC7C ADRP X8, 0x2344000
	0x01DAFC80 LDR X8, [X8 + 0x988]
	0x01DAFC84 LDR X8, [X8]
	0x01DAFC88 STR X8, [X19 + 0x28]
	0x01DAFC8C ADRP X8, 0x2346000
	0x01DAFC90 LDR X8, [X8 + 0x88]
	0x01DAFC94 LDR X0, [X8]
	0x01DAFC98 BL 0x1C16F10
	0x01DAFC9C MOVZ W8, 0x1
	0x01DAFCA0 MOV X1, X31
	0x01DAFCA4 MOV X20, X0
	0x01DAFCA8 STRB W8, [X0 + 0x10]
	0x01DAFCAC BL 0x33BDD8C
	0x01DAFCB0 MOV X0, X19
	0x01DAFCB4 MOV X1, X20
	0x01DAFCB8 STRB W31, [X20 + 0x10]
	0x01DAFCBC BL 0x1DAFD58
	0x01DAFCC0 LDP X20, X19, [X31 + 0x20]
	0x01DAFCC4 LDP X22, X21, [X31 + 0x10]
	0x01DAFCC8 LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {12}
	006 Move W8, [X8]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return X0
	012 Move X0, 0x2345000
	013 Move X0, [X0+1456]
	014 Call 0x1C17D08
	015 Call 0x1C17F10
	016 Move X19, X0
	017 Move X0, 0x2349000
	018 Move X0, [X0+2272]
	019 Call 0x1C17D08
	020 Move X1, X0
	021 Move X0, X19
	022 Move X2, X31
	023 Call InvalidOperationException..ctor, X0, X1
	024 Move X0, 0x2349000
	025 Move X0, [X0+2280]
	026 Call 0x1C17D08
	027 Move X1, X0
	028 Move X0, X19
	029 Call 0x1C17DEC

Method: System.Void set_isDie(System.Boolean value)

Disassembly:
	0x01DB28BC BL 0x35C52F0
	0x01DB28C0 ADRP X26, 0x2341000
	0x01DB28C4 LDR X26, [X26 + 0xDB0]
	0x01DB28C8 MOVZ W1, 0x1
	0x01DB28CC LDR X0, [X26]
	0x01DB28D0 BL 0x1C16D6C
	0x01DB28D4 LDR X8, [X23]
	0x01DB28D8 MOV X21, X0
	0x01DB28DC LDR W9, [X8 + 0xE0]
	0x01DB28E0 CBNZ W9, 0x1DB28EC
	0x01DB28E4 MOV X0, X8
	0x01DB28E8 BL 0x1C16DFC
	0x01DB28EC ADRP X24, 0x2626000
	0x01DB28F0 LDRB W8, [X24 + 0x787]
	0x01DB28F4 CBNZ W8, 0x1DB290C
	0x01DB28F8 ADRP X0, 0x2341000
	0x01DB28FC LDR X0, [X0 + 0x648]
	0x01DB2900 BL 0x1C16CF4
	0x01DB2904 MOVZ W8, 0x1
	0x01DB2908 STRB W8, [X24 + 0x787]
	0x01DB290C LDR X0, [X23]
	0x01DB2910 LDR W8, [X0 + 0xE0]
	0x01DB2914 CBNZ W8, 0x1DB2920
	0x01DB2918 BL 0x1C16DFC
	0x01DB291C LDR X0, [X23]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {11}
	006 And W9, W1, 1
	007 Move [X8], W9
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return 
	011 Move X0, 0x2342000
	012 Move X0, [X0+1456]
	013 Call 0x1C17D08
	014 Call 0x1C17F10
	015 Move X19, X0
	016 Move X0, 0x2346000
	017 Move X0, [X0+2272]
	018 Call 0x1C17D08
	019 Move X1, X0
	020 Move X0, X19
	021 Move X2, X31
	022 Call InvalidOperationException..ctor, X0, X1
	023 Move X0, 0x2346000
	024 Move X0, [X0+2600]
	025 Call 0x1C17D08
	026 Move X1, X0
	027 Move X0, X19
	028 Call 0x1C17DEC

Method: System.Boolean get_isSpawned()

Disassembly:
	0x01DB2920 LDR X8, [X0 + 0xB8]
	0x01DB2924 LDR X8, [X8]
	0x01DB2928 CBZ X8, 0x1DB3038
	0x01DB292C LDR X8, [X8 + 0xB8]
	0x01DB2930 CBZ X8, 0x1DB3038
	0x01DB2934 CBZ X21, 0x1DB3038
	0x01DB2938 LDR X22, [X8 + 0x60]

ISIL:
	001 Move X8, X0
	002 Move X0, [X0+56]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, [X8+64]
	006 Move X2, X31
	007 Call NetworkRunner.Exists, X0, X1
	008 Return X0
	009 Return X0

Method: System.Boolean get_isDieSafe()

Disassembly:
	0x01DB293C CBZ X22, 0x1DB2954
	0x01DB2940 LDR X8, [X21]
	0x01DB2944 MOV X0, X22
	0x01DB2948 LDR X1, [X8 + 0x40]
	0x01DB294C BL 0x1C16E00
	0x01DB2950 CBZ X0, 0x1DB3040
	0x01DB2954 LDR W8, [X21 + 0x18]
	0x01DB2958 CBZ W8, 0x1DB303C
	0x01DB295C MOV X0, X20
	0x01DB2960 MOV X1, X21
	0x01DB2964 MOV X2, X31
	0x01DB2968 STR X22, [X21 + 0x20]
	0x01DB296C BL 0x1D363F0
	0x01DB2970 LDR X0, [X25]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+56]
	005 Compare X0, 0
	006 JumpIfEqual {19}
	007 Move X1, [X19+64]
	008 Move X2, X31
	009 Call NetworkRunner.Exists, X0, X1
	010 Move TEMP, X0
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {19}
	014 Move X0, X19
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Call NetPlayer.get_isDie, X0
	018 Return X0
	019 Move W0, 1
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 Return X0

Method: System.String get_displayName()

Disassembly:
	0x01DB2974 BL 0x1C16F10
	0x01DB2978 ADRP X8, 0x2345000
	0x01DB297C LDR X8, [X8 + 0xAC8]
	0x01DB2980 MOV X1, X19
	0x01DB2984 MOV X3, X31
	0x01DB2988 MOV X20, X0
	0x01DB298C LDR X2, [X8]
	0x01DB2990 BL 0x35C52F0
	0x01DB2994 LDR X0, [X26]
	0x01DB2998 MOVZ W1, 0x1
	0x01DB299C MOVZ W22, 0x1
	0x01DB29A0 BL 0x1C16D6C
	0x01DB29A4 LDRB W8, [X24 + 0x787]
	0x01DB29A8 MOV X21, X0
	0x01DB29AC CBNZ W8, 0x1DB29C0
	0x01DB29B0 ADRP X0, 0x2341000
	0x01DB29B4 LDR X0, [X0 + 0x648]
	0x01DB29B8 BL 0x1C16CF4
	0x01DB29BC STRB W22, [X24 + 0x787]
	0x01DB29C0 LDR X0, [X23]
	0x01DB29C4 LDR W8, [X0 + 0xE0]
	0x01DB29C8 CBNZ W8, 0x1DB29D4
	0x01DB29CC BL 0x1C16DFC
	0x01DB29D0 LDR X0, [X23]
	0x01DB29D4 LDR X8, [X0 + 0xB8]
	0x01DB29D8 LDR X8, [X8]
	0x01DB29DC CBZ X8, 0x1DB3038
	0x01DB29E0 LDR X8, [X8 + 0xB8]
	0x01DB29E4 CBZ X8, 0x1DB3038
	0x01DB29E8 CBZ X21, 0x1DB3038

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {16}
	006 Move X19, X0
	007 Add X2, X0, 480
	008 Add X0, X8, 4
	009 Move W1, 16
	010 Move X3, X31
	011 Call ReadWriteUtilsForWeaver.ReadStringUtf32WithHash, X0, X1, X2
	012 Move X0, [X19+480]
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return X0
	016 Move X0, 0x2342000
	017 Move X0, [X0+1456]
	018 Call 0x1C17D08
	019 Call 0x1C17F10
	020 Move X19, X0
	021 Move X0, 0x2346000
	022 Move X0, [X0+2608]
	023 Call 0x1C17D08
	024 Move X1, X0
	025 Move X0, X19
	026 Move X2, X31
	027 Call InvalidOperationException..ctor, X0, X1
	028 Move X0, 0x2346000
	029 Move X0, [X0+2616]
	030 Call 0x1C17D08
	031 Move X1, X0
	032 Move X0, X19
	033 Call 0x1C17DEC

Method: System.Void set_displayName(System.String value)

Disassembly:
	0x01DB29EC LDR X22, [X8 + 0x70]
	0x01DB29F0 CBZ X22, 0x1DB2A08
	0x01DB29F4 LDR X8, [X21]
	0x01DB29F8 MOV X0, X22
	0x01DB29FC LDR X1, [X8 + 0x40]
	0x01DB2A00 BL 0x1C16E00
	0x01DB2A04 CBZ X0, 0x1DB3040
	0x01DB2A08 LDR W8, [X21 + 0x18]
	0x01DB2A0C CBZ W8, 0x1DB303C
	0x01DB2A10 MOV X0, X20
	0x01DB2A14 MOV X1, X21
	0x01DB2A18 MOV X2, X31
	0x01DB2A1C STR X22, [X21 + 0x20]
	0x01DB2A20 BL 0x1D363F0
	0x01DB2A24 LDR X0, [X25]
	0x01DB2A28 BL 0x1C16F10
	0x01DB2A2C ADRP X8, 0x2345000
	0x01DB2A30 LDR X8, [X8 + 0xAD0]
	0x01DB2A34 MOV X1, X19
	0x01DB2A38 MOV X3, X31
	0x01DB2A3C MOV X20, X0
	0x01DB2A40 LDR X2, [X8]
	0x01DB2A44 BL 0x35C52F0
	0x01DB2A48 LDR X0, [X26]
	0x01DB2A4C MOVZ W1, 0x2
	0x01DB2A50 BL 0x1C16D6C
	0x01DB2A54 LDRB W8, [X24 + 0x787]
	0x01DB2A58 MOV X21, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {15}
	006 Move X2, X1
	007 Add X3, X0, 480
	008 Add X0, X8, 4
	009 Move W1, 16
	010 Move X4, X31
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Call ReadWriteUtilsForWeaver.WriteStringUtf32WithHash, X0, X1, X2, X3
	014 Return 
	015 Move X0, 0x2342000
	016 Move X0, [X0+1456]
	017 Call 0x1C17D08
	018 Call 0x1C17F10
	019 Move X19, X0
	020 Move X0, 0x2346000
	021 Move X0, [X0+2608]
	022 Call 0x1C17D08
	023 Move X1, X0
	024 Move X0, X19
	025 Move X2, X31
	026 Call InvalidOperationException..ctor, X0, X1
	027 Move X0, 0x2346000
	028 Move X0, [X0+2624]
	029 Call 0x1C17D08
	030 Move X1, X0
	031 Move X0, X19
	032 Call 0x1C17DEC

Method: System.Int32 get_channel()

Disassembly:
	0x01DAFC04 SUB W8, W20, 0x30
	0x01DAFC08 CMP W8, 0xA
	0x01DAFC0C B.CC 0x1DAFC1C
	0x01DAFC10 SUB W8, W20, 0x61
	0x01DAFC14 CMP W8, 0x19
	0x01DAFC18 B.HI 0x1DAFCC0
	0x01DAFC1C ADRP X8, 0x2346000
	0x01DAFC20 LDR X8, [X8 + 0x170]
	0x01DAFC24 STRH W20, [X31 + 0xC]
	0x01DAFC28 LDR X0, [X8]
	0x01DAFC2C LDR W8, [X0 + 0xE0]
	0x01DAFC30 CBNZ W8, 0x1DAFC38
	0x01DAFC34 BL 0x1C16DFC
	0x01DAFC38 ADD X0, X31, 0xC
	0x01DAFC3C MOV X1, X31
	0x01DAFC40 BL 0x330A76C
	0x01DAFC44 MOV X1, X0
	0x01DAFC48 MOV X0, X19
	0x01DAFC4C BL 0x1DAFCD0
	0x01DAFC50 B 0x1DAFCC0
	0x01DAFC54 MOV X0, X19
	0x01DAFC58 BL 0x1DAFD14
	0x01DAFC5C B 0x1DAFCC0
	0x01DAFC60 ADRP X8, 0x2344000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move W0, [X8+76]
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0
	010 Move X0, 0x2345000
	011 Move X0, [X0+1456]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0x2349000
	016 Move X0, [X0+2256]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x2349000
	023 Move X0, [X0+2264]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: System.Void set_channel(System.Int32 value)

Disassembly:
	0x01DB2A5C CBNZ W8, 0x1DB2A74
	0x01DB2A60 ADRP X0, 0x2341000
	0x01DB2A64 LDR X0, [X0 + 0x648]
	0x01DB2A68 BL 0x1C16CF4
	0x01DB2A6C MOVZ W8, 0x1
	0x01DB2A70 STRB W8, [X24 + 0x787]
	0x01DB2A74 LDR X0, [X23]
	0x01DB2A78 LDR W8, [X0 + 0xE0]
	0x01DB2A7C CBNZ W8, 0x1DB2A88
	0x01DB2A80 BL 0x1C16DFC
	0x01DB2A84 LDR X0, [X23]
	0x01DB2A88 LDR X8, [X0 + 0xB8]
	0x01DB2A8C LDR X8, [X8]
	0x01DB2A90 CBZ X8, 0x1DB3038
	0x01DB2A94 LDR X8, [X8 + 0xB8]
	0x01DB2A98 CBZ X8, 0x1DB3038
	0x01DB2A9C LDR X8, [X8 + 0xA0]
	0x01DB2AA0 CBZ X8, 0x1DB3038
	0x01DB2AA4 CBZ X21, 0x1DB3038
	0x01DB2AA8 LDR X22, [X8 + 0x48]
	0x01DB2AAC CBZ X22, 0x1DB2AC4
	0x01DB2AB0 LDR X8, [X21]
	0x01DB2AB4 MOV X0, X22
	0x01DB2AB8 LDR X1, [X8 + 0x40]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move [X8+76], W1
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 
	010 Move X0, 0x2342000
	011 Move X0, [X0+1456]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0x2346000
	016 Move X0, [X0+2256]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x2346000
	023 Move X0, [X0+2632]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: AnimalCompany.FingerValues get_fingerValues()

Disassembly:
	0x01DB2ABC BL 0x1C16E00
	0x01DB2AC0 CBZ X0, 0x1DB3040
	0x01DB2AC4 LDR W8, [X21 + 0x18]
	0x01DB2AC8 CBZ W8, 0x1DB303C
	0x01DB2ACC STR X22, [X21 + 0x20]
	0x01DB2AD0 LDRB W8, [X24 + 0x787]
	0x01DB2AD4 CBNZ W8, 0x1DB2AEC
	0x01DB2AD8 ADRP X0, 0x2341000
	0x01DB2ADC LDR X0, [X0 + 0x648]
	0x01DB2AE0 BL 0x1C16CF4
	0x01DB2AE4 MOVZ W8, 0x1
	0x01DB2AE8 STRB W8, [X24 + 0x787]
	0x01DB2AEC LDR X0, [X23]
	0x01DB2AF0 LDR W8, [X0 + 0xE0]
	0x01DB2AF4 CBNZ W8, 0x1DB2B00
	0x01DB2AF8 BL 0x1C16DFC
	0x01DB2AFC LDR X0, [X23]
	0x01DB2B00 LDR X8, [X0 + 0xB8]
	0x01DB2B04 LDR X8, [X8]
	0x01DB2B08 CBZ X8, 0x1DB3038
	0x01DB2B0C LDR X8, [X8 + 0xE0]
	0x01DB2B10 CBZ X8, 0x1DB3038
	0x01DB2B14 LDR X22, [X8 + 0x70]
	0x01DB2B18 CBZ X22, 0x1DB2B30
	0x01DB2B1C LDR X8, [X21]
	0x01DB2B20 MOV X0, X22
	0x01DB2B24 LDR X1, [X8 + 0x40]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X9, [X0+80]
	004 Compare X9, 0
	005 JumpIfEqual {13}
	006 Move X10, [X9+96]
	007 Move V0, [X9+5]
	008 Move [X8+16], X10
	009 Move [X8], V0
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return X0
	013 Move X0, 0x2342000
	014 Move X0, [X0+1456]
	015 Call 0x1C17D08
	016 Call 0x1C17F10
	017 Move X19, X0
	018 Move X0, 0x2346000
	019 Move X0, [X0+2640]
	020 Call 0x1C17D08
	021 Move X1, X0
	022 Move X0, X19
	023 Move X2, X31
	024 Call InvalidOperationException..ctor, X0, X1
	025 Move X0, 0x2346000
	026 Move X0, [X0+2648]
	027 Call 0x1C17D08
	028 Move X1, X0
	029 Move X0, X19
	030 Call 0x1C17DEC

Method: System.Void set_fingerValues(AnimalCompany.FingerValues value)

Disassembly:
	0x01DB2B28 BL 0x1C16E00
	0x01DB2B2C CBZ X0, 0x1DB3040
	0x01DB2B30 LDR W8, [X21 + 0x18]
	0x01DB2B34 CMP W8, 0x1
	0x01DB2B38 B.LS 0x1DB303C
	0x01DB2B3C MOV X0, X20
	0x01DB2B40 MOV X1, X21
	0x01DB2B44 MOV X2, X31
	0x01DB2B48 STR X22, [X21 + 0x28]
	0x01DB2B4C BL 0x1D363F0
	0x01DB2B50 ADRP X22, 0x2343000
	0x01DB2B54 LDR X22, [X22 + 0x7C8]
	0x01DB2B58 LDR X0, [X22]
	0x01DB2B5C LDR W8, [X0 + 0xE0]
	0x01DB2B60 CBNZ W8, 0x1DB2B6C
	0x01DB2B64 BL 0x1C16DFC
	0x01DB2B68 LDR X0, [X22]
	0x01DB2B6C ADRP X23, 0x2345000
	0x01DB2B70 LDR X8, [X0 + 0xB8]
	0x01DB2B74 LDR X23, [X23 + 0xB10]
	0x01DB2B78 LDR X20, [X8 + 0x18]
	0x01DB2B7C LDR X0, [X23]
	0x01DB2B80 BL 0x1C16F10
	0x01DB2B84 ADRP X8, 0x2345000
	0x01DB2B88 LDR X8, [X8 + 0xB30]
	0x01DB2B8C MOV X1, X19
	0x01DB2B90 MOV X3, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {13}
	006 Move X9, [X1+16]
	007 Move V0, [X1]
	008 Move [X8+96], X9
	009 Move [X8+5], V0
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return 
	013 Move X0, 0x2342000
	014 Move X0, [X0+1456]
	015 Call 0x1C17D08
	016 Call 0x1C17F10
	017 Move X19, X0
	018 Move X0, 0x2346000
	019 Move X0, [X0+2640]
	020 Call 0x1C17D08
	021 Move X1, X0
	022 Move X0, X19
	023 Move X2, X31
	024 Call InvalidOperationException..ctor, X0, X1
	025 Move X0, 0x2346000
	026 Move X0, [X0+2656]
	027 Call 0x1C17D08
	028 Move X1, X0
	029 Move X0, X19
	030 Call 0x1C17DEC

Method: AnimalCompany.NetRigData get_rigData()

Disassembly:
	0x01DB2B94 MOV X21, X0
	0x01DB2B98 LDR X2, [X8]
	0x01DB2B9C BL 0x2A77FA4
	0x01DB2BA0 MOV X0, X20
	0x01DB2BA4 MOV X1, X21
	0x01DB2BA8 MOV X2, X31
	0x01DB2BAC BL 0x33C0DE4
	0x01DB2BB0 CBZ X0, 0x1DB2C44
	0x01DB2BB4 LDR X21, [X23]
	0x01DB2BB8 MOV X20, X0
	0x01DB2BBC MOV X1, X21
	0x01DB2BC0 BL 0x1C16E00
	0x01DB2BC4 CBZ X0, 0x1DB2DE8
	0x01DB2BC8 LDR X8, [X22]
	0x01DB2BCC LDR X8, [X8 + 0xB8]
	0x01DB2BD0 STR X0, [X8 + 0x18]
	0x01DB2BD4 LDR X21, [X23]
	0x01DB2BD8 MOV X0, X20
	0x01DB2BDC MOV X1, X21
	0x01DB2BE0 BL 0x1C16E00
	0x01DB2BE4 CBZ X0, 0x1DB2DE8
	0x01DB2BE8 LDR X8, [X22]
	0x01DB2BEC LDR X8, [X8 + 0xB8]
	0x01DB2BF0 B 0x1DB2C50
	0x01DB2BF4 CBZ X8, 0x1DB3038
	0x01DB2BF8 LDP X3, X4, [X19 + 0x98]
	0x01DB2BFC LDR X2, [X19 + 0x90]
	0x01DB2C00 MOV X0, X8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X9, [X0+80]
	004 Compare X9, 0
	005 JumpIfEqual {15}
	006 NotImplemented "Instruction LDUR not yet implemented."
	007 NotImplemented "Instruction LDUR not yet implemented."
	008 NotImplemented "Instruction LDUR not yet implemented."
	009 Move [X8+16], V1
	010 Move [X8+24], V0
	011 Move [X8], V2
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return X0
	015 Move X0, 0x2342000
	016 Move X0, [X0+1456]
	017 Call 0x1C17D08
	018 Call 0x1C17F10
	019 Move X19, X0
	020 Move X0, 0x2346000
	021 Move X0, [X0+2664]
	022 Call 0x1C17D08
	023 Move X1, X0
	024 Move X0, X19
	025 Move X2, X31
	026 Call InvalidOperationException..ctor, X0, X1
	027 Move X0, 0x2346000
	028 Move X0, [X0+2672]
	029 Call 0x1C17D08
	030 Move X1, X0
	031 Move X0, X19
	032 Call 0x1C17DEC

Method: System.Void set_rigData(AnimalCompany.NetRigData value)

Disassembly:
	0x01DB2C04 MOV X1, X31
	0x01DB2C08 MOV X5, X3
	0x01DB2C0C MOV X6, X4
	0x01DB2C10 MOV W7, W31
	0x01DB2C14 STR X31, [X31]
	0x01DB2C18 BL 0x1DC07D4
	0x01DB2C1C MOV X0, X19
	0x01DB2C20 BL 0x1DB30AC
	0x01DB2C24 MOV X1, X0
	0x01DB2C28 MOV X0, X19
	0x01DB2C2C MOV X2, X31
	0x01DB2C30 BL 0x3C366FC
	0x01DB2C34 STR X0, [X19 + 0x188]
	0x01DB2C38 MOV X0, X19
	0x01DB2C3C BL 0x1DB310C
	0x01DB2C40 B 0x1DB2FB4
	0x01DB2C44 LDR X8, [X22]
	0x01DB2C48 LDR X8, [X8 + 0xB8]
	0x01DB2C4C STR X31, [X8 + 0x18]
	0x01DB2C50 ADRP X23, 0x2341000
	0x01DB2C54 LDR X20, [X8 + 0x20]
	0x01DB2C58 LDR X23, [X23 + 0xD28]
	0x01DB2C5C LDR X0, [X23]
	0x01DB2C60 BL 0x1C16F10
	0x01DB2C64 ADRP X8, 0x2345000
	0x01DB2C68 LDR X8, [X8 + 0xB50]
	0x01DB2C6C MOV X1, X19
	0x01DB2C70 MOV X3, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {15}
	006 Move V1, [X1+16]
	007 Move V0, [X1+32]
	008 Move V2, [X1]
	009 Move [X8+136], V0
	010 Move [X8+120], V1
	011 Move [X8+104], V2
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return 
	015 Move X0, 0x2342000
	016 Move X0, [X0+1456]
	017 Call 0x1C17D08
	018 Call 0x1C17F10
	019 Move X19, X0
	020 Move X0, 0x2346000
	021 Move X0, [X0+2664]
	022 Call 0x1C17D08
	023 Move X1, X0
	024 Move X0, X19
	025 Move X2, X31
	026 Call InvalidOperationException..ctor, X0, X1
	027 Move X0, 0x2346000
	028 Move X0, [X0+2680]
	029 Call 0x1C17D08
	030 Move X1, X0
	031 Move X0, X19
	032 Call 0x1C17DEC

Method: System.String get_blockedPlayers()

Disassembly:
	0x01DB2C74 MOV X21, X0
	0x01DB2C78 LDR X2, [X8]
	0x01DB2C7C BL 0x29818C8
	0x01DB2C80 MOV X0, X20
	0x01DB2C84 MOV X1, X21
	0x01DB2C88 MOV X2, X31
	0x01DB2C8C BL 0x33C0DE4
	0x01DB2C90 CBZ X0, 0x1DB2CD4
	0x01DB2C94 LDR X21, [X23]
	0x01DB2C98 MOV X20, X0
	0x01DB2C9C MOV X1, X21
	0x01DB2CA0 BL 0x1C16E00
	0x01DB2CA4 CBZ X0, 0x1DB2DE8
	0x01DB2CA8 LDR X8, [X22]
	0x01DB2CAC LDR X8, [X8 + 0xB8]
	0x01DB2CB0 STR X0, [X8 + 0x20]
	0x01DB2CB4 LDR X21, [X23]
	0x01DB2CB8 MOV X0, X20
	0x01DB2CBC MOV X1, X21
	0x01DB2CC0 BL 0x1C16E00
	0x01DB2CC4 CBZ X0, 0x1DB2DE8
	0x01DB2CC8 LDR X8, [X22]
	0x01DB2CCC LDR X8, [X8 + 0xB8]
	0x01DB2CD0 B 0x1DB2CE0
	0x01DB2CD4 LDR X8, [X22]
	0x01DB2CD8 LDR X8, [X8 + 0xB8]
	0x01DB2CDC STR X31, [X8 + 0x20]
	0x01DB2CE0 ADRP X23, 0x2345000
	0x01DB2CE4 LDR X20, [X8 + 0x40]
	0x01DB2CE8 LDR X23, [X23 + 0xB00]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {16}
	006 Move X19, X0
	007 Add X2, X0, 488
	008 Add X0, X8, 152
	009 Move W1, 16
	010 Move X3, X31
	011 Call ReadWriteUtilsForWeaver.ReadStringUtf32WithHash, X0, X1, X2
	012 Move X0, [X19+488]
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return X0
	016 Move X0, 0x2342000
	017 Move X0, [X0+1456]
	018 Call 0x1C17D08
	019 Call 0x1C17F10
	020 Move X19, X0
	021 Move X0, 0x2346000
	022 Move X0, [X0+2688]
	023 Call 0x1C17D08
	024 Move X1, X0
	025 Move X0, X19
	026 Move X2, X31
	027 Call InvalidOperationException..ctor, X0, X1
	028 Move X0, 0x2346000
	029 Move X0, [X0+2696]
	030 Call 0x1C17D08
	031 Move X1, X0
	032 Move X0, X19
	033 Call 0x1C17DEC

Method: System.Void set_blockedPlayers(System.String value)

Disassembly:
	0x01DB2CEC LDR X0, [X23]
	0x01DB2CF0 BL 0x1C16F10
	0x01DB2CF4 ADRP X8, 0x2345000
	0x01DB2CF8 LDR X8, [X8 + 0xB40]
	0x01DB2CFC MOV X1, X19
	0x01DB2D00 MOV X3, X31
	0x01DB2D04 MOV X21, X0
	0x01DB2D08 LDR X2, [X8]
	0x01DB2D0C BL 0x2983F04
	0x01DB2D10 MOV X0, X20
	0x01DB2D14 MOV X1, X21
	0x01DB2D18 MOV X2, X31
	0x01DB2D1C BL 0x33C0DE4
	0x01DB2D20 CBZ X0, 0x1DB2D64
	0x01DB2D24 LDR X21, [X23]
	0x01DB2D28 MOV X20, X0
	0x01DB2D2C MOV X1, X21
	0x01DB2D30 BL 0x1C16E00
	0x01DB2D34 CBZ X0, 0x1DB2DE8
	0x01DB2D38 LDR X8, [X22]
	0x01DB2D3C LDR X8, [X8 + 0xB8]
	0x01DB2D40 STR X0, [X8 + 0x40]
	0x01DB2D44 LDR X21, [X23]
	0x01DB2D48 MOV X0, X20
	0x01DB2D4C MOV X1, X21
	0x01DB2D50 BL 0x1C16E00
	0x01DB2D54 CBZ X0, 0x1DB2DE8
	0x01DB2D58 LDR X8, [X22]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {15}
	006 Move X2, X1
	007 Add X3, X0, 488
	008 Add X0, X8, 152
	009 Move W1, 16
	010 Move X4, X31
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Call ReadWriteUtilsForWeaver.WriteStringUtf32WithHash, X0, X1, X2, X3
	014 Return 
	015 Move X0, 0x2342000
	016 Move X0, [X0+1456]
	017 Call 0x1C17D08
	018 Call 0x1C17F10
	019 Move X19, X0
	020 Move X0, 0x2346000
	021 Move X0, [X0+2688]
	022 Call 0x1C17D08
	023 Move X1, X0
	024 Move X0, X19
	025 Move X2, X31
	026 Call InvalidOperationException..ctor, X0, X1
	027 Move X0, 0x2346000
	028 Move X0, [X0+2704]
	029 Call 0x1C17D08
	030 Move X1, X0
	031 Move X0, X19
	032 Call 0x1C17DEC

Method: System.Single get_playerVolume()

Disassembly:
	0x01DB2D5C LDR X8, [X8 + 0xB8]
	0x01DB2D60 B 0x1DB2D70

ISIL:
	001 Move V0, [X0+372]
	002 Return V0

Method: System.Void set_playerVolume(System.Single value)

Disassembly:
	0x01DB2D64 LDR X8, [X22]
	0x01DB2D68 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X0+372], S0
	002 Return 

Method: System.Boolean get_IsMine()

Disassembly:
	0x01DAFCCC RET
	0x01DAFCD0 STP X30, X19, [X31 - 0x10]!
	0x01DAFCD4 MOV X19, X0
	0x01DAFCD8 LDR X0, [X0 + 0x28]
	0x01DAFCDC CBZ X0, 0x1DAFD10
	0x01DAFCE0 LDR W8, [X0 + 0x10]
	0x01DAFCE4 LDR W9, [X19 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+64]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call NetworkObject.get_HasInputAuthority, X0
	008 Return X0
	009 Call 0x1C17F20

Method: AnimalCompany.AttachedItemAnchor[] get_anchors()

Disassembly:
	0x01DB2D6C STR X31, [X8 + 0x40]
	0x01DB2D70 ADRP X23, 0x2345000

ISIL:
	001 Move X0, [X0+232]
	002 Return X0

Method: System.Collections.Generic.Dictionary`2<System.UInt32, AnimalCompany.NetPlayer> get_spawnedPlayers()

Disassembly:
	0x01DB2D74 LDR X20, [X8 + 0x48]
	0x01DB2D78 LDR X23, [X23 + 0xAF8]
	0x01DB2D7C LDR X0, [X23]
	0x01DB2D80 BL 0x1C16F10
	0x01DB2D84 ADRP X8, 0x2345000
	0x01DB2D88 LDR X8, [X8 + 0xB48]
	0x01DB2D8C MOV X1, X19
	0x01DB2D90 MOV X3, X31
	0x01DB2D94 MOV X21, X0
	0x01DB2D98 LDR X2, [X8]
	0x01DB2D9C BL 0x2A6B948
	0x01DB2DA0 MOV X0, X20
	0x01DB2DA4 MOV X1, X21
	0x01DB2DA8 MOV X2, X31
	0x01DB2DAC BL 0x33C0DE4
	0x01DB2DB0 CBZ X0, 0x1DB2DF4
	0x01DB2DB4 LDR X21, [X23]
	0x01DB2DB8 MOV X20, X0
	0x01DB2DBC MOV X1, X21
	0x01DB2DC0 BL 0x1C16E00
	0x01DB2DC4 CBZ X0, 0x1DB2DE8
	0x01DB2DC8 LDR X8, [X22]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2627000
	005 Move X19, 0x2344000
	006 Move W8, [X20+2808]
	007 Move X19, [X19+2464]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2344000
	013 Move X0, [X0+2464]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2808], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: AnimalCompany.NetPlayer get_localPlayer()

Disassembly:
	0x01DB2DCC LDR X8, [X8 + 0xB8]
	0x01DB2DD0 STR X0, [X8 + 0x48]
	0x01DB2DD4 LDR X21, [X23]
	0x01DB2DD8 MOV X0, X20
	0x01DB2DDC MOV X1, X21
	0x01DB2DE0 BL 0x1C16E00
	0x01DB2DE4 CBNZ X0, 0x1DB2E00
	0x01DB2DE8 MOV X0, X20
	0x01DB2DEC MOV X1, X21
	0x01DB2DF0 BL 0x1C171E0
	0x01DB2DF4 LDR X8, [X22]
	0x01DB2DF8 LDR X8, [X8 + 0xB8]
	0x01DB2DFC STR X31, [X8 + 0x48]
	0x01DB2E00 MOV X0, X19
	0x01DB2E04 BL 0x1DB304C
	0x01DB2E08 MOV X1, X0
	0x01DB2E0C MOV X0, X19
	0x01DB2E10 MOV X2, X31
	0x01DB2E14 BL 0x3C366FC
	0x01DB2E18 LDR X22, [X19 + 0xE8]
	0x01DB2E1C STR X0, [X19 + 0x188]
	0x01DB2E20 CBZ X22, 0x1DB3038
	0x01DB2E24 LDR W8, [X22 + 0x18]
	0x01DB2E28 CMP W8, 0x1
	0x01DB2E2C B.LT 0x1DB2FB4
	0x01DB2E30 ADRP X24, 0x2344000
	0x01DB2E34 ADRP X25, 0x2345000
	0x01DB2E38 ADRP X26, 0x2345000
	0x01DB2E3C ADRP X27, 0x2345000
	0x01DB2E40 LDR X24, [X24 + 0xBC0]
	0x01DB2E44 LDR X25, [X25 + 0xB28]
	0x01DB2E48 LDR X26, [X26 + 0xB08]
	0x01DB2E4C LDR X27, [X27 + 0xB38]
	0x01DB2E50 MOV W23, W31
	0x01DB2E54 CMP W23, W8
	0x01DB2E58 B.CS 0x1DB303C
	0x01DB2E5C ADD X8, X22, W23, 0x3, SXTW
	0x01DB2E60 LDR X28, [X8 + 0x20]
	0x01DB2E64 CBZ X28, 0x1DB3038
	0x01DB2E68 LDR X0, [X24]
	0x01DB2E6C LDR X20, [X28 + 0x90]
	0x01DB2E70 BL 0x1C16F10
	0x01DB2E74 LDR X2, [X25]
	0x01DB2E78 MOV X1, X19
	0x01DB2E7C MOV X3, X31
	0x01DB2E80 MOV X21, X0
	0x01DB2E84 BL 0x2A762F4
	0x01DB2E88 MOV X0, X20
	0x01DB2E8C MOV X1, X21
	0x01DB2E90 MOV X2, X31
	0x01DB2E94 BL 0x33C0DE4
	0x01DB2E98 LDR X21, [X24]
	0x01DB2E9C CBZ X0, 0x1DB2ED0
	0x01DB2EA0 MOV X1, X21
	0x01DB2EA4 MOV X20, X0
	0x01DB2EA8 BL 0x1C16E00
	0x01DB2EAC CBZ X0, 0x1DB2DE8
	0x01DB2EB0 STR X0, [X28 + 0x90]
	0x01DB2EB4 LDR X21, [X24]
	0x01DB2EB8 MOV X0, X20
	0x01DB2EBC MOV X1, X21
	0x01DB2EC0 BL 0x1C16E00
	0x01DB2EC4 CBZ X0, 0x1DB2DE8
	0x01DB2EC8 LDR X21, [X24]
	0x01DB2ECC B 0x1DB2ED4
	0x01DB2ED0 STR X31, [X28 + 0x90]
	0x01DB2ED4 LDR X20, [X28 + 0xA0]
	0x01DB2ED8 MOV X0, X21
	0x01DB2EDC BL 0x1C16F10
	0x01DB2EE0 LDR X2, [X25]
	0x01DB2EE4 MOV X1, X19
	0x01DB2EE8 MOV X3, X31
	0x01DB2EEC MOV X21, X0
	0x01DB2EF0 BL 0x2A762F4
	0x01DB2EF4 MOV X0, X20
	0x01DB2EF8 MOV X1, X21
	0x01DB2EFC MOV X2, X31
	0x01DB2F00 BL 0x33C0DE4
	0x01DB2F04 CBZ X0, 0x1DB2F38
	0x01DB2F08 LDR X21, [X24]
	0x01DB2F0C MOV X20, X0
	0x01DB2F10 MOV X1, X21
	0x01DB2F14 BL 0x1C16E00
	0x01DB2F18 CBZ X0, 0x1DB2DE8
	0x01DB2F1C STR X0, [X28 + 0xA0]
	0x01DB2F20 LDR X21, [X24]
	0x01DB2F24 MOV X0, X20
	0x01DB2F28 MOV X1, X21
	0x01DB2F2C BL 0x1C16E00
	0x01DB2F30 CBNZ X0, 0x1DB2F3C
	0x01DB2F34 B 0x1DB2DE8
	0x01DB2F38 STR X31, [X28 + 0xA0]
	0x01DB2F3C LDR X0, [X26]
	0x01DB2F40 LDR X20, [X28 + 0x98]
	0x01DB2F44 BL 0x1C16F10
	0x01DB2F48 LDR X2, [X27]
	0x01DB2F4C MOV X1, X19
	0x01DB2F50 MOV X3, X31
	0x01DB2F54 MOV X21, X0
	0x01DB2F58 BL 0x2A78044
	0x01DB2F5C MOV X0, X20
	0x01DB2F60 MOV X1, X21
	0x01DB2F64 MOV X2, X31
	0x01DB2F68 BL 0x33C0DE4
	0x01DB2F6C CBZ X0, 0x1DB2FA0
	0x01DB2F70 LDR X21, [X26]
	0x01DB2F74 MOV X20, X0
	0x01DB2F78 MOV X1, X21
	0x01DB2F7C BL 0x1C16E00
	0x01DB2F80 CBZ X0, 0x1DB2DE8
	0x01DB2F84 STR X0, [X28 + 0x98]
	0x01DB2F88 LDR X21, [X26]
	0x01DB2F8C MOV X0, X20
	0x01DB2F90 MOV X1, X21
	0x01DB2F94 BL 0x1C16E00
	0x01DB2F98 CBNZ X0, 0x1DB2FA4
	0x01DB2F9C B 0x1DB2DE8
	0x01DB2FA0 STR X31, [X28 + 0x98]
	0x01DB2FA4 LDR W8, [X22 + 0x18]
	0x01DB2FA8 ADD W23, W23, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x2627000
	008 Move X22, 0x2344000
	009 Move W8, [X19+2809]
	010 Move X22, [X22+2464]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {38}
	015 Move X0, 0x2346000
	016 Move X0, [X0+2128]
	017 Call 0x1C17CF4
	018 Move X0, 0x2346000
	019 Move X0, [X0+2712]
	020 Call 0x1C17CF4
	021 Move X0, 0x2346000
	022 Move X0, [X0+2720]
	023 Call 0x1C17CF4
	024 Move X0, 0x2344000
	025 Move X0, [X0+2464]
	026 Call 0x1C17CF4
	027 Move X0, 0x2342000
	028 Move X0, [X0+1432]
	029 Call 0x1C17CF4
	030 Move X0, 0x2346000
	031 Move X0, [X0+2728]
	032 Call 0x1C17CF4
	033 Move X0, 0x2346000
	034 Move X0, [X0+2736]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X19+2809], W8
	038 Move X0, [X22]
	039 Move X19, 0x2342000
	040 Move W8, [X0+224]
	041 Move X19, [X19+1432]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X22]
	046 Move X8, [X19]
	047 Move X9, [X0+184]
	048 Move W10, [X8+224]
	049 Move X19, [X9+8]
	050 Compare W10, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Move X0, X19
	055 Move X1, X31
	056 Move X2, X31
	057 Call Object.op_Inequality, X0, X1
	058 Move X8, [X22]
	059 Move W19, W0
	060 Move W9, [X8+224]
	061 Compare W9, 0
	062 JumpIfNotEqual {66}
	063 Move X0, X8
	064 Call 0x1C17DFC
	065 Move X8, [X22]
	066 Move X8, [X8+184]
	067 Move TEMP, X19
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {72}
	071 Move X19, [X8+8]
	072 Move X0, [X8]
	073 Compare X0, 0
	074 JumpIfEqual {139}
	075 Move X8, 0x2346000
	076 Move X8, [X8+2128]
	077 Move X1, [X8]
	078 Call Dictionary`2<UInt32, Object>.get_Values, X0
	079 Move X23, 0x2346000
	080 Move X23, [X23+2736]
	081 Move X19, X0
	082 Move X8, [X23]
	083 Move W9, [X8+224]
	084 Compare W9, 0
	085 JumpIfNotEqual {89}
	086 Move X0, X8
	087 Call 0x1C17DFC
	088 Move X8, [X23]
	089 Move X9, [X8+184]
	090 Move X20, [X9+8]
	091 Compare X20, 0
	092 JumpIfNotEqual {115}
	093 Move W9, [X8+224]
	094 Compare W9, 0
	095 JumpIfNotEqual {99}
	096 Move X0, X8
	097 Call 0x1C17DFC
	098 Move X8, [X23]
	099 Move X9, 0x2346000
	100 Move X8, [X8+184]
	101 Move X9, [X9+2720]
	102 Move X21, [X8]
	103 Move X0, [X9]
	104 Call 0x1C17F10
	105 Move X8, 0x2346000
	106 Move X8, [X8+2728]
	107 Move X1, X21
	108 Move X3, X31
	109 Move X20, X0
	110 Move X2, [X8]
	111 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	112 Move X8, [X23]
	113 Move X8, [X8+184]
	114 Move [X8+8], X20
	115 Move X8, 0x2346000
	116 Move X8, [X8+2712]
	117 Move X0, X19
	118 Move X1, X20
	119 Move X2, [X8]
	120 Call 0x21C670C, X0, X1
	121 Move X8, [X22]
	122 Move X19, X0
	123 Move W9, [X8+224]
	124 Compare W9, 0
	125 JumpIfNotEqual {129}
	126 Move X0, X8
	127 Call 0x1C17DFC
	128 Move X8, [X22]
	129 Move X8, [X8+184]
	130 Move [X8+8], X19
	131 Move X0, X19
	132 Move X20, [X31+32]
	133 Move X19, [X31+40]
	134 Move X22, [X31+16]
	135 Move X21, [X31+24]
	136 Move X30, [X31+48]
	137 Move X23, [X31+56]
	138 Return X0
	139 Call 0x1C17F20

Method: System.UInt32 get_localObjectID()

Disassembly:
	0x01DB2FAC CMP W23, W8
	0x01DB2FB0 B.LT 0x1DB2E54
	0x01DB2FB4 ADRP X20, 0x2343000
	0x01DB2FB8 LDR X20, [X20 + 0x9A0]
	0x01DB2FBC MOV X0, X19
	0x01DB2FC0 BL 0x1DB3424
	0x01DB2FC4 MOV X0, X19
	0x01DB2FC8 BL 0x1DB344C
	0x01DB2FCC LDR X0, [X20]
	0x01DB2FD0 LDR W8, [X0 + 0xE0]
	0x01DB2FD4 CBNZ W8, 0x1DB2FE0
	0x01DB2FD8 BL 0x1C16DFC
	0x01DB2FDC LDR X0, [X20]
	0x01DB2FE0 LDR X8, [X19 + 0x40]
	0x01DB2FE4 CBZ X8, 0x1DB3038
	0x01DB2FE8 LDR X9, [X0 + 0xB8]
	0x01DB2FEC LDR X8, [X8 + 0x20]
	0x01DB2FF0 LDR X0, [X9]
	0x01DB2FF4 CBZ X8, 0x1DB3030
	0x01DB2FF8 LDR W1, [X8]
	0x01DB2FFC CBZ X0, 0x1DB3038
	0x01DB3000 ADRP X8, 0x2344000
	0x01DB3004 LDR X8, [X8 + 0xB18]
	0x01DB3008 MOV X2, X19
	0x01DB300C LDP X20, X19, [X31 + 0x60]
	0x01DB3010 LDP X22, X21, [X31 + 0x50]
	0x01DB3014 LDR X3, [X8]
	0x01DB3018 LDP X24, X23, [X31 + 0x40]
	0x01DB301C LDP X26, X25, [X31 + 0x30]
	0x01DB3020 LDP X28, X27, [X31 + 0x20]
	0x01DB3024 LDR X30, [X31 + 0x10]
	0x01DB3028 ADD X31, X31, 0x70
	0x01DB302C B 0x2B0F05C
	0x01DB3030 MOV W1, W31
	0x01DB3034 CBNZ X0, 0x1DB3000
	0x01DB3038 BL 0x1C16F20
	0x01DB303C BL 0x1C16F28
	0x01DB3040 BL 0x1C16F44
	0x01DB3044 MOV X1, X31
	0x01DB3048 BL 0x1C16DEC
	0x01DB304C STP X30, X21, [X31 - 0x20]!
	0x01DB3050 STP X20, X19, [X31 + 0x10]
	0x01DB3054 ADRP X20, 0x2625000
	0x01DB3058 ADRP X21, 0x2344000
	0x01DB305C LDRB W8, [X20 + 0xB0F]
	0x01DB3060 LDR X21, [X21 + 0xB58]
	0x01DB3064 MOV X19, X0
	0x01DB3068 TBNZ X8, 0x0, 0x1DB3080
	0x01DB306C ADRP X0, 0x2344000
	0x01DB3070 LDR X0, [X0 + 0xB58]
	0x01DB3074 BL 0x1C16CF4
	0x01DB3078 MOVZ W8, 0x1
	0x01DB307C STRB W8, [X20 + 0xB0F]
	0x01DB3080 LDR X0, [X21]
	0x01DB3084 BL 0x1C16F10
	0x01DB3088 MOV X1, X31
	0x01DB308C MOV X20, X0
	0x01DB3090 BL 0x33BDD8C
	0x01DB3094 STR W31, [X20 + 0x10]
	0x01DB3098 STR X19, [X20 + 0x20]
	0x01DB309C MOV X0, X20
	0x01DB30A0 LDP X20, X19, [X31 + 0x10]
	0x01DB30A4 LDP X30, X21, [X31], #0x20
	0x01DB30A8 RET
	0x01DB30AC STP X30, X21, [X31 - 0x20]!
	0x01DB30B0 STP X20, X19, [X31 + 0x10]
	0x01DB30B4 ADRP X20, 0x2625000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x2627000
	006 Move X20, 0x2344000
	007 Move W8, [X19+2810]
	008 Move X20, [X20+2464]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x2344000
	014 Move X0, [X0+2464]
	015 Call 0x1C17CF4
	016 Move X0, 0x2342000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+2810], W8
	021 Move X0, [X20]
	022 Move X21, 0x2342000
	023 Move W8, [X0+224]
	024 Move X21, [X21+1432]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Call NetPlayer.get_localPlayer
	029 Move X8, [X21]
	030 Move X19, X0
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {36}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X0, X19
	037 Move X1, X31
	038 Move X2, X31
	039 Call Object.op_Inequality, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {82}
	044 Move X0, [X20]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Call NetPlayer.get_localPlayer
	050 Compare X0, 0
	051 JumpIfEqual {88}
	052 Move X8, [X21]
	053 Move X19, [X0+64]
	054 Move W9, [X8+224]
	055 Compare W9, 0
	056 JumpIfNotEqual {59}
	057 Move X0, X8
	058 Call 0x1C17DFC
	059 Move X0, X19
	060 Move X1, X31
	061 Move X2, X31
	062 Call Object.op_Inequality, X0, X1
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {82}
	067 Move X0, [X20]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Call NetPlayer.get_localPlayer
	073 Compare X0, 0
	074 JumpIfEqual {88}
	075 Move X8, [X0+64]
	076 Compare X8, 0
	077 JumpIfEqual {88}
	078 Move X8, [X8+32]
	079 Compare X8, 0
	080 JumpIfEqual {82}
	081 Move W0, [X8]
	082 Move W0, W31
	083 Move X20, [X31+16]
	084 Move X19, [X31+24]
	085 Move X30, [X31+32]
	086 Move X21, [X31+40]
	087 Return X0
	088 Call 0x1C17F20

Method: System.UInt32 get_objectID()

Disassembly:
	0x01DB30B8 ADRP X21, 0x2344000
	0x01DB30BC LDRB W8, [X20 + 0xB10]
	0x01DB30C0 LDR X21, [X21 + 0xB60]
	0x01DB30C4 MOV X19, X0
	0x01DB30C8 TBNZ X8, 0x0, 0x1DB30E0
	0x01DB30CC ADRP X0, 0x2344000
	0x01DB30D0 LDR X0, [X0 + 0xB60]
	0x01DB30D4 BL 0x1C16CF4
	0x01DB30D8 MOVZ W8, 0x1
	0x01DB30DC STRB W8, [X20 + 0xB10]
	0x01DB30E0 LDR X0, [X21]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+64]
	003 Compare X8, 0
	004 JumpIfEqual {12}
	005 Move X8, [X8+32]
	006 Compare X8, 0
	007 JumpIfEqual {9}
	008 Move W0, [X8]
	009 Move W0, W31
	010 Move X30, [X31+16]
	011 Return X0
	012 Call 0x1C17F20

Method: AnimalCompany.AttachedItemAnchor get_backItemAttachAnchor()

Disassembly:
	0x01DB30E4 BL 0x1C16F10
	0x01DB30E8 MOV X1, X31

ISIL:
	001 Move X0, [X0+416]
	002 Return X0

Method: System.Void set_backItemAttachAnchor(AnimalCompany.AttachedItemAnchor value)

Disassembly:
	0x01DB30EC MOV X20, X0
	0x01DB30F0 BL 0x33BDD8C

ISIL:
	001 Move [X0+416], X1
	002 Return 

Method: UnityEngine.Color get_playerColor()

Disassembly:
	0x01DB30F4 STR W31, [X20 + 0x10]
	0x01DB30F8 STR X19, [X20 + 0x20]
	0x01DB30FC MOV X0, X20
	0x01DB3100 LDP X20, X19, [X31 + 0x10]
	0x01DB3104 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move V0, [X0+424]
	002 Move V1, [X0+428]
	003 Move V2, [X0+432]
	004 Move V3, [X0+436]
	005 Return X0

Method: System.Void set_playerColor(UnityEngine.Color value)

Disassembly:
	0x01DB3108 RET
	0x01DB310C STR X30, [X31 - 0x40]!
	0x01DB3110 STP X24, X23, [X31 + 0x10]
	0x01DB3114 STP X22, X21, [X31 + 0x20]
	0x01DB3118 STP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X0+424], S0
	002 Move [X0+428], S1
	003 Move [X0+432], S2
	004 Move [X0+436], S3
	005 Return 

Method: AnimalCompany.NetPlayer/Rig get_renderRig()

Disassembly:
	0x01DB311C ADRP X20, 0x2625000
	0x01DB3120 LDRB W8, [X20 + 0xB07]

ISIL:
	001 Move X0, [X0+440]
	002 Return X0

Method: System.Void set_renderRig(AnimalCompany.NetPlayer/Rig value)

Disassembly:
	0x01DB3124 MOV X19, X0
	0x01DB3128 TBNZ X8, 0x0, 0x1DB31B8

ISIL:
	001 Move [X0+440], X1
	002 Return 

Method: System.Boolean get_isMuted()

Disassembly:
	0x01DB312C ADRP X0, 0x2340000
	0x01DB3130 LDR X0, [X0 + 0x648]
	0x01DB3134 BL 0x1C16CF4
	0x01DB3138 ADRP X0, 0x2340000
	0x01DB313C LDR X0, [X0 + 0xAB0]
	0x01DB3140 BL 0x1C16CF4
	0x01DB3144 ADRP X0, 0x2341000
	0x01DB3148 LDR X0, [X0 + 0xE10]
	0x01DB314C BL 0x1C16CF4
	0x01DB3150 ADRP X0, 0x2344000
	0x01DB3154 LDR X0, [X0 + 0xB68]
	0x01DB3158 BL 0x1C16CF4
	0x01DB315C ADRP X0, 0x2344000
	0x01DB3160 LDR X0, [X0 + 0xB70]
	0x01DB3164 BL 0x1C16CF4
	0x01DB3168 ADRP X0, 0x2341000
	0x01DB316C LDR X0, [X0 + 0xE30]
	0x01DB3170 BL 0x1C16CF4
	0x01DB3174 ADRP X0, 0x2343000
	0x01DB3178 LDR X0, [X0 + 0xEF8]
	0x01DB317C BL 0x1C16CF4
	0x01DB3180 ADRP X0, 0x2343000
	0x01DB3184 LDR X0, [X0 + 0xF00]
	0x01DB3188 BL 0x1C16CF4
	0x01DB318C ADRP X0, 0x2344000
	0x01DB3190 LDR X0, [X0 + 0xB78]
	0x01DB3194 BL 0x1C16CF4
	0x01DB3198 ADRP X0, 0x2342000
	0x01DB319C LDR X0, [X0 + 0x410]
	0x01DB31A0 BL 0x1C16CF4
	0x01DB31A4 ADRP X0, 0x2342000
	0x01DB31A8 LDR X0, [X0 + 0x3A0]
	0x01DB31AC BL 0x1C16CF4
	0x01DB31B0 MOVZ W8, 0x1
	0x01DB31B4 STRB W8, [X20 + 0xB07]
	0x01DB31B8 STR W31, [X31 + 0xC]
	0x01DB31BC LDR X0, [X19 + 0x40]
	0x01DB31C0 CBZ X0, 0x1DB3410
	0x01DB31C4 MOV X1, X31
	0x01DB31C8 BL 0x1E93588
	0x01DB31CC TBNZ X0, 0x0, 0x1DB33FC
	0x01DB31D0 LDRB W8, [X19 + 0x190]
	0x01DB31D4 CBZ W8, 0x1DB33FC
	0x01DB31D8 ADRP X8, 0x2341000
	0x01DB31DC LDR X8, [X8 + 0xE30]
	0x01DB31E0 LDR X0, [X8]
	0x01DB31E4 BL 0x1C16F10
	0x01DB31E8 ADRP X8, 0x2344000
	0x01DB31EC LDR X8, [X8 + 0xB70]
	0x01DB31F0 MOV X20, X0
	0x01DB31F4 LDR X1, [X8]
	0x01DB31F8 BL 0x2FDBF14
	0x01DB31FC MOV X0, X19
	0x01DB3200 BL 0x1DB1C74
	0x01DB3204 CBZ X0, 0x1DB3410
	0x01DB3208 ADRP X8, 0x2342000
	0x01DB320C LDR X8, [X8 + 0x3A0]
	0x01DB3210 MOV W2, W31
	0x01DB3214 MOV X3, X31
	0x01DB3218 LDR X1, [X8]
	0x01DB321C BL 0x322A988
	0x01DB3220 CBZ X0, 0x1DB3410
	0x01DB3224 LDR X8, [X0 + 0x18]
	0x01DB3228 MOV X21, X0
	0x01DB322C CMP W8, 0x1
	0x01DB3230 B.LT 0x1DB32CC
	0x01DB3234 ADRP X24, 0x2341000
	0x01DB3238 LDR X24, [X24 + 0xE10]
	0x01DB323C MOV X22, X31
	0x01DB3240 AND X8, X8, 0x0
	0x01DB3244 ADD X23, X21, 0x20
	0x01DB3248 CMP X22, W8, UXTW
	0x01DB324C B.CS 0x1DB3414
	0x01DB3250 LDR X0, [X23, X22, LSL #3]
	0x01DB3254 ADD X1, X31, 0xC
	0x01DB3258 MOV X2, X31
	0x01DB325C BL 0x337BDF4
	0x01DB3260 TBZ X0, 0x0, 0x1DB32BC
	0x01DB3264 CBZ X20, 0x1DB3410
	0x01DB3268 LDR W10, [X20 + 0x1C]
	0x01DB326C LDR W1, [X31 + 0xC]
	0x01DB3270 LDR X8, [X20 + 0x10]
	0x01DB3274 LDR X9, [X24]
	0x01DB3278 ADD W10, W10, 0x1
	0x01DB327C STR W10, [X20 + 0x1C]
	0x01DB3280 CBZ X8, 0x1DB3410
	0x01DB3284 LDRSW X10, [X20 + 0x18]
	0x01DB3288 LDR W11, [X8 + 0x18]
	0x01DB328C CMP W10, W11
	0x01DB3290 B.CS 0x1DB32A8
	0x01DB3294 ADD W9, W10, 0x1
	0x01DB3298 ADD X8, X8, X10, 0x2, LSL
	0x01DB329C STR W9, [X20 + 0x18]
	0x01DB32A0 STR W1, [X8 + 0x20]
	0x01DB32A4 B 0x1DB32BC
	0x01DB32A8 LDR X8, [X9 + 0x20]
	0x01DB32AC MOV X0, X20
	0x01DB32B0 LDR X8, [X8 + 0xC0]
	0x01DB32B4 LDR X2, [X8 + 0x70]
	0x01DB32B8 BL 0x2FDC70C
	0x01DB32BC LDR W8, [X21 + 0x18]
	0x01DB32C0 ADD X22, X22, 0x1
	0x01DB32C4 CMP X22, W8, SXTW
	0x01DB32C8 B.LT 0x1DB3248
	0x01DB32CC ADRP X21, 0x2340000
	0x01DB32D0 LDR X21, [X21 + 0x648]
	0x01DB32D4 LDR X0, [X21]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2626000
	007 Move W8, [X20+2811]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x2341000
	014 Move X0, [X0+1608]
	015 Call 0x1C17CF4
	016 Move X0, 0x2341000
	017 Move X0, [X0+3944]
	018 Call 0x1C17CF4
	019 Move X0, 0x2342000
	020 Move X0, [X0+3440]
	021 Call 0x1C17CF4
	022 Move X0, 0x2341000
	023 Move X0, [X0+4072]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+2811], W8
	027 Move [X31+8], X31
	028 Move X8, [X19+408]
	029 Compare X8, 0
	030 JumpIfEqual {73}
	031 Move X20, 0x2341000
	032 Move X20, [X20+1608]
	033 Move X0, [X20]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X21, 0x2626000
	039 Move W8, [X21+1927]
	040 Compare W8, 0
	041 JumpIfNotEqual {47}
	042 Move X0, 0x2341000
	043 Move X0, [X0+1608]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X21+1927], W8
	047 Move X0, [X20]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {53}
	051 Call 0x1C17DFC
	052 Move X0, [X20]
	053 Move X8, [X0+184]
	054 Move X8, [X8]
	055 Compare X8, 0
	056 JumpIfEqual {133}
	057 Move X8, [X8+224]
	058 Compare X8, 0
	059 JumpIfEqual {133}
	060 Move X0, [X8+120]
	061 Compare X0, 0
	062 JumpIfEqual {133}
	063 Move X8, 0x2342000
	064 Move X8, [X8+3440]
	065 Move X1, [X19+408]
	066 Move X2, [X8]
	067 Call StatePrimitiveSet`1<Object>.Contains, X0, X1
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {74}
	072 Move W0, 1
	073 Move W0, W31
	074 Move X0, [X20]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move W8, [X21+1927]
	080 Compare W8, 0
	081 JumpIfNotEqual {87}
	082 Move X0, 0x2341000
	083 Move X0, [X0+1608]
	084 Call 0x1C17CF4
	085 Move W8, 1
	086 Move [X21+1927], W8
	087 Move X0, [X20]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {93}
	091 Call 0x1C17DFC
	092 Move X0, [X20]
	093 Move X8, [X0+184]
	094 Move X8, [X8]
	095 Compare X8, 0
	096 JumpIfEqual {133}
	097 Move X8, [X8+184]
	098 Compare X8, 0
	099 JumpIfEqual {133}
	100 Move X8, [X8+160]
	101 Compare X8, 0
	102 JumpIfEqual {133}
	103 Move X0, [X8+72]
	104 Compare X0, 0
	105 JumpIfEqual {133}
	106 Move X8, 0x2341000
	107 Move X1, [X19+408]
	108 Move X8, [X8+3944]
	109 Add X2, X31, 8
	110 Move X3, [X8]
	111 Call StateDictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {124}
	116 Move X8, [X31+8]
	117 Compare X8, 0
	118 JumpIfEqual {133}
	119 Move X8, [X8+104]
	120 Compare X8, 0
	121 JumpIfEqual {133}
	122 Move W8, [X8+76]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move W8, [X19+368]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 NotImplemented "Instruction CSET not yet implemented."
	127 Move X20, [X31+32]
	128 Move X19, [X31+40]
	129 Move X30, [X31+16]
	130 Move X21, [X31+24]
	131 Add X31, X31, 48
	132 Return X0
	133 Call 0x1C17F20

Method: System.Void Awake()

Disassembly:
	0x01DB32D8 LDR W8, [X0 + 0xE0]
	0x01DB32DC CBNZ W8, 0x1DB32E4
	0x01DB32E0 BL 0x1C16DFC
	0x01DB32E4 ADRP X22, 0x2625000
	0x01DB32E8 LDRB W8, [X22 + 0x787]
	0x01DB32EC CBNZ W8, 0x1DB3304
	0x01DB32F0 ADRP X0, 0x2340000
	0x01DB32F4 LDR X0, [X0 + 0x648]
	0x01DB32F8 BL 0x1C16CF4
	0x01DB32FC MOVZ W8, 0x1
	0x01DB3300 STRB W8, [X22 + 0x787]
	0x01DB3304 LDR X0, [X21]
	0x01DB3308 LDR W8, [X0 + 0xE0]
	0x01DB330C CBNZ W8, 0x1DB3318
	0x01DB3310 BL 0x1C16DFC
	0x01DB3314 LDR X0, [X21]
	0x01DB3318 LDR X8, [X0 + 0xB8]
	0x01DB331C LDR X8, [X8]
	0x01DB3320 CBZ X8, 0x1DB3410
	0x01DB3324 LDR X8, [X8 + 0xE0]
	0x01DB3328 CBZ X8, 0x1DB3410
	0x01DB332C LDR X0, [X8 + 0x60]
	0x01DB3330 ADRP X8, 0x2342000
	0x01DB3334 LDR X8, [X8 + 0x410]
	0x01DB3338 LDR X1, [X8]
	0x01DB333C BL 0x26581F4
	0x01DB3340 CBZ X20, 0x1DB3410
	0x01DB3344 ADRP X8, 0x2344000
	0x01DB3348 LDR X8, [X8 + 0xB68]
	0x01DB334C MOV W1, W0
	0x01DB3350 MOV X0, X20
	0x01DB3354 ADD X21, X19, 0x190
	0x01DB3358 LDR X2, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2626000
	005 Move W8, [X20+2812]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x2344000
	012 Move X0, [X0+3928]
	013 Call 0x1C17CF4
	014 Move X0, 0x2345000
	015 Move X0, [X0+2744]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2812], W8
	019 Move X0, [X19+216]
	020 Compare X0, 0
	021 JumpIfEqual {40}
	022 Move X8, 0x2345000
	023 Move X8, [X8+2744]
	024 Move X1, [X8]
	025 Call 0x21A4894, X0
	026 Move X8, [X19+168]
	027 Move [X19+456], X0
	028 Compare X8, 0
	029 JumpIfEqual {40}
	030 Move X9, 0x2344000
	031 Move X9, [X9+3928]
	032 Move X0, X8
	033 Move X1, [X9]
	034 Call 0x21A4894, X0
	035 Move [X19+416], X0
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Return 
	040 Call 0x1C17F20

Method: System.Void OnDestroy()

Disassembly:
	0x01DB335C BL 0x2FDCA84
	0x01DB3360 AND W8, W0, 0x1
	0x01DB3364 STRB W8, [X19 + 0x170]
	0x01DB3368 ADRP X8, 0x2340000
	0x01DB336C LDR X8, [X8 + 0xAB0]
	0x01DB3370 MOVZ W1, 0x1
	0x01DB3374 LDR X0, [X8]
	0x01DB3378 BL 0x1C16D6C
	0x01DB337C ADRP X8, 0x2343000
	0x01DB3380 LDR X8, [X8 + 0xF00]
	0x01DB3384 MOV X20, X0
	0x01DB3388 MOV X0, X21
	0x01DB338C LDR X1, [X8]
	0x01DB3390 BL 0x2434214
	0x01DB3394 ADRP X8, 0x2344000
	0x01DB3398 LDRB W23, [X19 + 0x170]
	0x01DB339C LDR X8, [X8 + 0xB78]
	0x01DB33A0 MOV W22, W0
	0x01DB33A4 LDR X8, [X8]
	0x01DB33A8 MOV X0, X8
	0x01DB33AC BL 0x1C16F10
	0x01DB33B0 MOV X1, X31
	0x01DB33B4 MOV X21, X0
	0x01DB33B8 BL 0x1D36B98
	0x01DB33BC STR W22, [X21 + 0x14]
	0x01DB33C0 STRB W23, [X21 + 0x18]
	0x01DB33C4 CBZ X20, 0x1DB3410
	0x01DB33C8 LDR X8, [X20]
	0x01DB33CC MOV X0, X21
	0x01DB33D0 LDR X1, [X8 + 0x40]
	0x01DB33D4 BL 0x1C16E00
	0x01DB33D8 CBZ X0, 0x1DB3418
	0x01DB33DC LDR W8, [X20 + 0x18]
	0x01DB33E0 CBZ W8, 0x1DB3414
	0x01DB33E4 MOV X0, X20
	0x01DB33E8 MOV X1, X31
	0x01DB33EC STR X21, [X20 + 0x20]
	0x01DB33F0 BL 0x1D351C4
	0x01DB33F4 MOV X0, X19
	0x01DB33F8 BL 0x1DB47F4
	0x01DB33FC LDP X20, X19, [X31 + 0x30]
	0x01DB3400 LDP X22, X21, [X31 + 0x20]
	0x01DB3404 LDP X24, X23, [X31 + 0x10]
	0x01DB3408 LDR X30, [X31], #0x40
	0x01DB340C RET
	0x01DB3410 BL 0x1C16F20
	0x01DB3414 BL 0x1C16F28
	0x01DB3418 BL 0x1C16F44
	0x01DB341C MOV X1, X31
	0x01DB3420 BL 0x1C16DEC
	0x01DB3424 STP X30, X19, [X31 - 0x10]!
	0x01DB3428 LDR X19, [X0 + 0xF0]
	0x01DB342C BL 0x1DB1974
	0x01DB3430 CBZ X19, 0x1DB3448
	0x01DB3434 MOV X1, X0
	0x01DB3438 MOV X0, X19
	0x01DB343C MOV X2, X31
	0x01DB3440 LDP X30, X19, [X31], #0x10
	0x01DB3444 B 0x1DBFA60
	0x01DB3448 BL 0x1C16F20
	0x01DB344C SUB X31, X31, 0x60
	0x01DB3450 STP X30, X21, [X31 + 0x40]
	0x01DB3454 STP X20, X19, [X31 + 0x50]
	0x01DB3458 MRS X21, 0xC000
	0x01DB345C LDR X8, [X21 + 0x28]
	0x01DB3460 MOV X19, X0
	0x01DB3464 STR X8, [X31 + 0x38]
	0x01DB3468 LDR X0, [X0 + 0x40]
	0x01DB346C CBZ X0, 0x1DB3484
	0x01DB3470 LDRB W8, [X0 + 0x60]
	0x01DB3474 TBNZ X8, 0x1, 0x1DB3484
	0x01DB3478 MOV X1, X31
	0x01DB347C BL 0x1E93588
	0x01DB3480 TBNZ X0, 0x0, 0x1DB352C
	0x01DB3484 LDR X8, [X19 + 0xB8]
	0x01DB3488 CBZ X8, 0x1DB354C
	0x01DB348C LDR X0, [X8 + 0x18]
	0x01DB3490 CBZ X0, 0x1DB354C
	0x01DB3494 MOV X1, X31
	0x01DB3498 BL 0x3C32E90
	0x01DB349C MOV X20, X0
	0x01DB34A0 ADD X8, X31, 0x8
	0x01DB34A4 MOV X0, X19
	0x01DB34A8 BL 0x1DB1B94
	0x01DB34AC LDP X1, X2, [X31 + 0x8]
	0x01DB34B0 MOV X0, X20
	0x01DB34B4 BL 0x1DB57C8
	0x01DB34B8 LDR X8, [X19 + 0xB8]
	0x01DB34BC CBZ X8, 0x1DB354C
	0x01DB34C0 LDR X0, [X8 + 0x20]
	0x01DB34C4 CBZ X0, 0x1DB354C
	0x01DB34C8 MOV X1, X31
	0x01DB34CC BL 0x3C32E90
	0x01DB34D0 MOV X20, X0
	0x01DB34D4 ADD X8, X31, 0x8
	0x01DB34D8 MOV X0, X19
	0x01DB34DC BL 0x1DB1B94
	0x01DB34E0 LDP X1, X2, [X31 + 0x18]
	0x01DB34E4 MOV X0, X20
	0x01DB34E8 BL 0x1DB57C8
	0x01DB34EC LDR X8, [X19 + 0xB8]
	0x01DB34F0 CBZ X8, 0x1DB354C
	0x01DB34F4 LDR X0, [X8 + 0x28]
	0x01DB34F8 CBZ X0, 0x1DB354C
	0x01DB34FC MOV X1, X31
	0x01DB3500 BL 0x3C32E90
	0x01DB3504 MOV X20, X0
	0x01DB3508 ADD X8, X31, 0x8
	0x01DB350C MOV X0, X19
	0x01DB3510 BL 0x1DB1B94
	0x01DB3514 LDP X1, X2, [X31 + 0x28]
	0x01DB3518 MOV X0, X20
	0x01DB351C BL 0x1DB57C8
	0x01DB3520 MOV X0, X31
	0x01DB3524 BL 0x3C3C6C4
	0x01DB3528 STR S0, [X19 + 0x1D0]
	0x01DB352C LDR X8, [X21 + 0x28]
	0x01DB3530 LDR X9, [X31 + 0x38]
	0x01DB3534 CMP X8, X9
	0x01DB3538 B.NE 0x1DB3550
	0x01DB353C LDP X20, X19, [X31 + 0x50]
	0x01DB3540 LDP X30, X21, [X31 + 0x40]
	0x01DB3544 ADD X31, X31, 0x60
	0x01DB3548 RET
	0x01DB354C BL 0x1C16F20
	0x01DB3550 BL 0x3EB1B20
	0x01DB3554 STP X30, X27, [X31 - 0x50]!
	0x01DB3558 STP X26, X25, [X31 + 0x10]
	0x01DB355C STP X24, X23, [X31 + 0x20]
	0x01DB3560 STP X22, X21, [X31 + 0x30]
	0x01DB3564 STP X20, X19, [X31 + 0x40]
	0x01DB3568 ADRP X23, 0x2625000
	0x01DB356C ADRP X22, 0x2342000
	0x01DB3570 LDRB W8, [X23 + 0xB00]
	0x01DB3574 LDR X22, [X22 + 0x9A0]
	0x01DB3578 MOV W21, W2
	0x01DB357C MOV X20, X1
	0x01DB3580 MOV X19, X0
	0x01DB3584 TBNZ X8, 0x0, 0x1DB3674
	0x01DB3588 ADRP X0, 0x2340000
	0x01DB358C LDR X0, [X0 + 0xD28]
	0x01DB3590 BL 0x1C16CF4
	0x01DB3594 ADRP X0, 0x2344000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x2626000
	012 Move X21, 0x2344000
	013 Move W8, [X20+2813]
	014 Move X21, [X21+2680]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {49}
	020 Move X0, 0x2341000
	021 Move X0, [X0+1608]
	022 Call 0x1C17CF4
	023 Move X0, 0x2345000
	024 Move X0, [X0+2752]
	025 Call 0x1C17CF4
	026 Move X0, 0x2345000
	027 Move X0, [X0+2760]
	028 Call 0x1C17CF4
	029 Move X0, 0x2345000
	030 Move X0, [X0+2768]
	031 Call 0x1C17CF4
	032 Move X0, 0x2345000
	033 Move X0, [X0+2776]
	034 Call 0x1C17CF4
	035 Move X0, 0x2345000
	036 Move X0, [X0+2784]
	037 Call 0x1C17CF4
	038 Move X0, 0x2345000
	039 Move X0, [X0+2792]
	040 Call 0x1C17CF4
	041 Move X0, 0x2344000
	042 Move X0, [X0+2680]
	043 Call 0x1C17CF4
	044 Move X0, 0x2341000
	045 Move X0, [X0+3488]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X20+2813], W8
	049 Move X0, [X21]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Compare X19, 0
	055 JumpIfEqual {165}
	056 Move W8, [X19+48]
	057 Move X0, [X19+472]
	058 Or W8, W8, 8
	059 Move [X19+48], W8
	060 Compare X0, 0
	061 JumpIfEqual {165}
	062 Move X1, X31
	063 Call CommandHandle.get_hasFinalized, X0
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {73}
	068 Move X0, [X19+472]
	069 Compare X0, 0
	070 JumpIfEqual {165}
	071 Move X1, X31
	072 Call CommandHandle.Cancel, X0
	073 Move X21, 0x2341000
	074 Move X21, [X21+3488]
	075 Move X20, 0x2345000
	076 Move X27, 0x2341000
	077 Move X26, 0x2345000
	078 Move X25, 0x2345000
	079 Move X20, [X20+2776]
	080 Move X27, [X27+1608]
	081 Move X26, [X26+2792]
	082 Move X25, [X25+2760]
	083 Move X0, [X21]
	084 Move X24, 0x2345000
	085 Move X23, 0x2345000
	086 Move X22, 0x2345000
	087 Move X24, [X24+2784]
	088 Move X23, [X23+2752]
	089 Move X22, [X22+2768]
	090 Call 0x1C17F10
	091 Move X2, [X20]
	092 Move X1, X19
	093 Move X3, X31
	094 Move X20, X0
	095 Call ObserverDelegate..ctor, X0, X1, X2
	096 Move X0, [X27]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Move X0, X20
	102 Move X1, X31
	103 Call App.DeregisterObserver, X0
	104 Move X0, [X21]
	105 Call 0x1C17F10
	106 Move X2, [X26]
	107 Move X1, X19
	108 Move X3, X31
	109 Move X20, X0
	110 Call ObserverDelegate..ctor, X0, X1, X2
	111 Move X0, X20
	112 Move X1, X31
	113 Call App.DeregisterObserver, X0
	114 Move X0, [X21]
	115 Call 0x1C17F10
	116 Move X2, [X25]
	117 Move X1, X19
	118 Move X3, X31
	119 Move X20, X0
	120 Call ObserverDelegate..ctor, X0, X1, X2
	121 Move X0, X20
	122 Move X1, X31
	123 Call App.DeregisterObserver, X0
	124 Move X0, [X21]
	125 Call 0x1C17F10
	126 Move X2, [X24]
	127 Move X1, X19
	128 Move X3, X31
	129 Move X20, X0
	130 Call ObserverDelegate..ctor, X0, X1, X2
	131 Move X0, X20
	132 Move X1, X31
	133 Call App.DeregisterObserver, X0
	134 Move X0, [X21]
	135 Call 0x1C17F10
	136 Move X2, [X23]
	137 Move X1, X19
	138 Move X3, X31
	139 Move X20, X0
	140 Call ObserverDelegate..ctor, X0, X1, X2
	141 Move X0, X20
	142 Move X1, X31
	143 Call App.DeregisterObserver, X0
	144 Move X0, [X21]
	145 Call 0x1C17F10
	146 Move X2, [X22]
	147 Move X1, X19
	148 Move X3, X31
	149 Move X20, X0
	150 Call ObserverDelegate..ctor, X0, X1, X2
	151 Move X0, X20
	152 Move X20, [X31+64]
	153 Move X19, [X31+72]
	154 Move X22, [X31+48]
	155 Move X21, [X31+56]
	156 Move X24, [X31+32]
	157 Move X23, [X31+40]
	158 Move X26, [X31+16]
	159 Move X25, [X31+24]
	160 Move X1, X31
	161 Move X30, [X31+80]
	162 Move X27, [X31+88]
	163 Call App.DeregisterObserver, X0
	164 Return 
	165 Call 0x1C17F20

Method: System.Boolean TryGetPlayerByID(System.UInt32 id, out AnimalCompany.NetPlayer player)

Disassembly:
	0x01DB3598 LDR X0, [X0 + 0xAF8]
	0x01DB359C BL 0x1C16CF4
	0x01DB35A0 ADRP X0, 0x2344000
	0x01DB35A4 LDR X0, [X0 + 0xB00]
	0x01DB35A8 BL 0x1C16CF4
	0x01DB35AC ADRP X0, 0x2344000
	0x01DB35B0 LDR X0, [X0 + 0xB10]
	0x01DB35B4 BL 0x1C16CF4
	0x01DB35B8 ADRP X0, 0x2340000
	0x01DB35BC LDR X0, [X0 + 0x648]
	0x01DB35C0 BL 0x1C16CF4
	0x01DB35C4 ADRP X0, 0x2344000
	0x01DB35C8 LDR X0, [X0 + 0xB80]
	0x01DB35CC BL 0x1C16CF4
	0x01DB35D0 ADRP X0, 0x2344000
	0x01DB35D4 LDR X0, [X0 + 0xAC0]
	0x01DB35D8 BL 0x1C16CF4
	0x01DB35DC ADRP X0, 0x2344000
	0x01DB35E0 LDR X0, [X0 + 0xB30]
	0x01DB35E4 BL 0x1C16CF4
	0x01DB35E8 ADRP X0, 0x2344000
	0x01DB35EC LDR X0, [X0 + 0xAC8]
	0x01DB35F0 BL 0x1C16CF4
	0x01DB35F4 ADRP X0, 0x2344000
	0x01DB35F8 LDR X0, [X0 + 0xAD0]
	0x01DB35FC BL 0x1C16CF4
	0x01DB3600 ADRP X0, 0x2344000
	0x01DB3604 LDR X0, [X0 + 0xB40]
	0x01DB3608 BL 0x1C16CF4
	0x01DB360C ADRP X0, 0x2344000
	0x01DB3610 LDR X0, [X0 + 0xAD8]
	0x01DB3614 BL 0x1C16CF4
	0x01DB3618 ADRP X0, 0x2344000
	0x01DB361C LDR X0, [X0 + 0xB48]
	0x01DB3620 BL 0x1C16CF4
	0x01DB3624 ADRP X0, 0x2344000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2626000
	007 Move X21, 0x2343000
	008 Move W8, [X22+2814]
	009 Move X21, [X21+2464]
	010 Move X19, X1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x2345000
	017 Move X0, [X0+2800]
	018 Call 0x1C17CF4
	019 Move X0, 0x2343000
	020 Move X0, [X0+2464]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2814], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Move X0, [X8]
	032 Compare X0, 0
	033 JumpIfEqual {46}
	034 Move X8, 0x2345000
	035 Move X8, [X8+2800]
	036 Move W1, W20
	037 Move X2, X19
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X3, [X8]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Call Dictionary`2<UInt32, Object>.TryGetValue, X0, X1, X2
	045 Return X0
	046 Call 0x1C17F20

Method: System.Void Spawned()

Disassembly:
	0x01DB3628 LDR X0, [X0 + 0xAE0]
	0x01DB362C BL 0x1C16CF4
	0x01DB3630 ADRP X0, 0x2344000
	0x01DB3634 LDR X0, [X0 + 0xB50]
	0x01DB3638 BL 0x1C16CF4
	0x01DB363C ADRP X0, 0x2344000
	0x01DB3640 LDR X0, [X0 + 0xAE8]
	0x01DB3644 BL 0x1C16CF4
	0x01DB3648 ADRP X0, 0x2342000
	0x01DB364C LDR X0, [X0 + 0x9A0]
	0x01DB3650 BL 0x1C16CF4
	0x01DB3654 ADRP X0, 0x2340000
	0x01DB3658 LDR X0, [X0 + 0xDA0]
	0x01DB365C BL 0x1C16CF4
	0x01DB3660 ADRP X0, 0x2342000
	0x01DB3664 LDR X0, [X0 + 0x7C8]
	0x01DB3668 BL 0x1C16CF4
	0x01DB366C MOVZ W8, 0x1
	0x01DB3670 STRB W8, [X23 + 0xB00]
	0x01DB3674 AND W2, W21, 0x1
	0x01DB3678 MOV X0, X19
	0x01DB367C MOV X1, X20
	0x01DB3680 MOV X3, X31
	0x01DB3684 BL 0x1E73F8C
	0x01DB3688 LDR X0, [X22]
	0x01DB368C LDR W8, [X0 + 0xE0]
	0x01DB3690 CBNZ W8, 0x1DB369C
	0x01DB3694 BL 0x1C16DFC
	0x01DB3698 LDR X0, [X22]
	0x01DB369C LDR X8, [X19 + 0x40]
	0x01DB36A0 CBZ X8, 0x1DB3ADC
	0x01DB36A4 LDR X9, [X0 + 0xB8]
	0x01DB36A8 LDR X8, [X8 + 0x20]
	0x01DB36AC LDR X0, [X9]
	0x01DB36B0 CBZ X8, 0x1DB36C0
	0x01DB36B4 LDR W1, [X8]
	0x01DB36B8 CBNZ X0, 0x1DB36C8
	0x01DB36BC B 0x1DB3ADC
	0x01DB36C0 MOV W1, W31
	0x01DB36C4 CBZ X0, 0x1DB3ADC
	0x01DB36C8 ADRP X8, 0x2344000
	0x01DB36CC LDR X8, [X8 + 0xB80]
	0x01DB36D0 ADRP X22, 0x2342000
	0x01DB36D4 ADRP X23, 0x2344000
	0x01DB36D8 ADRP X21, 0x2344000
	0x01DB36DC LDR X2, [X8]
	0x01DB36E0 LDR X22, [X22 + 0x7C8]
	0x01DB36E4 LDR X23, [X23 + 0xB10]
	0x01DB36E8 LDR X21, [X21 + 0xB30]
	0x01DB36EC BL 0x2B10458
	0x01DB36F0 LDR X0, [X22]
	0x01DB36F4 LDR W8, [X0 + 0xE0]
	0x01DB36F8 CBNZ W8, 0x1DB3704
	0x01DB36FC BL 0x1C16DFC
	0x01DB3700 LDR X0, [X22]
	0x01DB3704 LDR X8, [X0 + 0xB8]
	0x01DB3708 LDR X0, [X23]
	0x01DB370C LDR X20, [X8 + 0x18]
	0x01DB3710 BL 0x1C16F10
	0x01DB3714 LDR X2, [X21]
	0x01DB3718 MOV X1, X19
	0x01DB371C MOV X3, X31
	0x01DB3720 MOV X21, X0
	0x01DB3724 BL 0x2A77FA4
	0x01DB3728 MOV X0, X20
	0x01DB372C MOV X1, X21
	0x01DB3730 MOV X2, X31
	0x01DB3734 BL 0x33C0FDC
	0x01DB3738 CBZ X0, 0x1DB377C
	0x01DB373C LDR X21, [X23]
	0x01DB3740 MOV X20, X0
	0x01DB3744 MOV X1, X21
	0x01DB3748 BL 0x1C16E00
	0x01DB374C CBZ X0, 0x1DB3920
	0x01DB3750 LDR X8, [X22]
	0x01DB3754 LDR X8, [X8 + 0xB8]
	0x01DB3758 STR X0, [X8 + 0x18]
	0x01DB375C LDR X21, [X23]
	0x01DB3760 MOV X0, X20
	0x01DB3764 MOV X1, X21
	0x01DB3768 BL 0x1C16E00
	0x01DB376C CBZ X0, 0x1DB3920
	0x01DB3770 LDR X8, [X22]
	0x01DB3774 LDR X8, [X8 + 0xB8]
	0x01DB3778 B 0x1DB3788
	0x01DB377C LDR X8, [X22]
	0x01DB3780 LDR X8, [X8 + 0xB8]
	0x01DB3784 STR X31, [X8 + 0x18]
	0x01DB3788 ADRP X23, 0x2340000
	0x01DB378C LDR X23, [X23 + 0xD28]
	0x01DB3790 ADRP X21, 0x2344000
	0x01DB3794 LDR X20, [X8 + 0x20]
	0x01DB3798 LDR X0, [X23]
	0x01DB379C LDR X21, [X21 + 0xB50]
	0x01DB37A0 BL 0x1C16F10
	0x01DB37A4 LDR X2, [X21]
	0x01DB37A8 MOV X1, X19
	0x01DB37AC MOV X3, X31
	0x01DB37B0 MOV X21, X0
	0x01DB37B4 BL 0x29818C8
	0x01DB37B8 MOV X0, X20
	0x01DB37BC MOV X1, X21
	0x01DB37C0 MOV X2, X31
	0x01DB37C4 BL 0x33C0FDC
	0x01DB37C8 CBZ X0, 0x1DB380C
	0x01DB37CC LDR X21, [X23]
	0x01DB37D0 MOV X20, X0
	0x01DB37D4 MOV X1, X21
	0x01DB37D8 BL 0x1C16E00
	0x01DB37DC CBZ X0, 0x1DB3920
	0x01DB37E0 LDR X8, [X22]
	0x01DB37E4 LDR X8, [X8 + 0xB8]
	0x01DB37E8 STR X0, [X8 + 0x20]
	0x01DB37EC LDR X21, [X23]
	0x01DB37F0 MOV X0, X20
	0x01DB37F4 MOV X1, X21
	0x01DB37F8 BL 0x1C16E00
	0x01DB37FC CBZ X0, 0x1DB3920
	0x01DB3800 LDR X8, [X22]
	0x01DB3804 LDR X8, [X8 + 0xB8]
	0x01DB3808 B 0x1DB3818
	0x01DB380C LDR X8, [X22]
	0x01DB3810 LDR X8, [X8 + 0xB8]
	0x01DB3814 STR X31, [X8 + 0x20]
	0x01DB3818 ADRP X23, 0x2344000
	0x01DB381C LDR X23, [X23 + 0xB00]
	0x01DB3820 ADRP X21, 0x2344000
	0x01DB3824 LDR X20, [X8 + 0x40]
	0x01DB3828 LDR X0, [X23]
	0x01DB382C LDR X21, [X21 + 0xB40]
	0x01DB3830 BL 0x1C16F10
	0x01DB3834 LDR X2, [X21]
	0x01DB3838 MOV X1, X19
	0x01DB383C MOV X3, X31
	0x01DB3840 MOV X21, X0
	0x01DB3844 BL 0x2983F04
	0x01DB3848 MOV X0, X20
	0x01DB384C MOV X1, X21
	0x01DB3850 MOV X2, X31
	0x01DB3854 BL 0x33C0FDC
	0x01DB3858 CBZ X0, 0x1DB389C
	0x01DB385C LDR X21, [X23]
	0x01DB3860 MOV X20, X0
	0x01DB3864 MOV X1, X21
	0x01DB3868 BL 0x1C16E00
	0x01DB386C CBZ X0, 0x1DB3920
	0x01DB3870 LDR X8, [X22]
	0x01DB3874 LDR X8, [X8 + 0xB8]
	0x01DB3878 STR X0, [X8 + 0x40]
	0x01DB387C LDR X21, [X23]
	0x01DB3880 MOV X0, X20
	0x01DB3884 MOV X1, X21
	0x01DB3888 BL 0x1C16E00
	0x01DB388C CBZ X0, 0x1DB3920
	0x01DB3890 LDR X8, [X22]
	0x01DB3894 LDR X8, [X8 + 0xB8]
	0x01DB3898 B 0x1DB38A8
	0x01DB389C LDR X8, [X22]
	0x01DB38A0 LDR X8, [X8 + 0xB8]
	0x01DB38A4 STR X31, [X8 + 0x40]
	0x01DB38A8 ADRP X23, 0x2344000
	0x01DB38AC LDR X23, [X23 + 0xAF8]
	0x01DB38B0 ADRP X21, 0x2344000
	0x01DB38B4 LDR X20, [X8 + 0x48]
	0x01DB38B8 LDR X0, [X23]
	0x01DB38BC LDR X21, [X21 + 0xB48]
	0x01DB38C0 BL 0x1C16F10
	0x01DB38C4 LDR X2, [X21]
	0x01DB38C8 MOV X1, X19
	0x01DB38CC MOV X3, X31
	0x01DB38D0 MOV X21, X0
	0x01DB38D4 BL 0x2A6B948
	0x01DB38D8 MOV X0, X20
	0x01DB38DC MOV X1, X21
	0x01DB38E0 MOV X2, X31
	0x01DB38E4 BL 0x33C0FDC
	0x01DB38E8 CBZ X0, 0x1DB392C
	0x01DB38EC LDR X21, [X23]
	0x01DB38F0 MOV X20, X0
	0x01DB38F4 MOV X1, X21
	0x01DB38F8 BL 0x1C16E00
	0x01DB38FC CBZ X0, 0x1DB3920
	0x01DB3900 LDR X8, [X22]
	0x01DB3904 LDR X8, [X8 + 0xB8]
	0x01DB3908 STR X0, [X8 + 0x48]
	0x01DB390C LDR X21, [X23]
	0x01DB3910 MOV X0, X20
	0x01DB3914 MOV X1, X21
	0x01DB3918 BL 0x1C16E00
	0x01DB391C CBNZ X0, 0x1DB3938
	0x01DB3920 MOV X0, X20
	0x01DB3924 MOV X1, X21
	0x01DB3928 BL 0x1C171E0
	0x01DB392C LDR X8, [X22]
	0x01DB3930 LDR X8, [X8 + 0xB8]
	0x01DB3934 STR X31, [X8 + 0x48]
	0x01DB3938 LDR X0, [X19 + 0x1D8]
	0x01DB393C CBZ X0, 0x1DB3ADC
	0x01DB3940 MOV X1, X31
	0x01DB3944 BL 0x35B9A1C
	0x01DB3948 TBNZ X0, 0x0, 0x1DB395C
	0x01DB394C LDR X0, [X19 + 0x1D8]
	0x01DB3950 CBZ X0, 0x1DB3ADC
	0x01DB3954 MOV X1, X31
	0x01DB3958 BL 0x35B9B84
	0x01DB395C ADRP X21, 0x2340000
	0x01DB3960 LDR X21, [X21 + 0xDA0]
	0x01DB3964 ADRP X20, 0x2344000
	0x01DB3968 ADRP X27, 0x2340000
	0x01DB396C ADRP X26, 0x2344000
	0x01DB3970 ADRP X25, 0x2344000
	0x01DB3974 LDR X20, [X20 + 0xAD8]
	0x01DB3978 LDR X27, [X27 + 0x648]
	0x01DB397C LDR X26, [X26 + 0xAE8]
	0x01DB3980 LDR X25, [X25 + 0xAC8]
	0x01DB3984 LDR X0, [X21]
	0x01DB3988 ADRP X24, 0x2344000
	0x01DB398C ADRP X23, 0x2344000
	0x01DB3990 ADRP X22, 0x2344000
	0x01DB3994 LDR X24, [X24 + 0xAE0]
	0x01DB3998 LDR X23, [X23 + 0xAC0]
	0x01DB399C LDR X22, [X22 + 0xAD0]
	0x01DB39A0 BL 0x1C16F10
	0x01DB39A4 LDR X2, [X20]
	0x01DB39A8 MOV X1, X19
	0x01DB39AC MOV X3, X31
	0x01DB39B0 MOV X20, X0
	0x01DB39B4 BL 0x35C52F0
	0x01DB39B8 LDR X0, [X27]
	0x01DB39BC LDR W8, [X0 + 0xE0]
	0x01DB39C0 CBNZ W8, 0x1DB39C8
	0x01DB39C4 BL 0x1C16DFC
	0x01DB39C8 MOV X0, X20
	0x01DB39CC MOV X1, X31
	0x01DB39D0 BL 0x1D36978
	0x01DB39D4 LDR X0, [X21]
	0x01DB39D8 BL 0x1C16F10
	0x01DB39DC LDR X2, [X26]
	0x01DB39E0 MOV X1, X19
	0x01DB39E4 MOV X3, X31
	0x01DB39E8 MOV X20, X0
	0x01DB39EC BL 0x35C52F0
	0x01DB39F0 MOV X0, X20
	0x01DB39F4 MOV X1, X31
	0x01DB39F8 BL 0x1D36978
	0x01DB39FC LDR X0, [X21]
	0x01DB3A00 BL 0x1C16F10
	0x01DB3A04 LDR X2, [X25]
	0x01DB3A08 MOV X1, X19
	0x01DB3A0C MOV X3, X31
	0x01DB3A10 MOV X20, X0
	0x01DB3A14 BL 0x35C52F0
	0x01DB3A18 MOV X0, X20
	0x01DB3A1C MOV X1, X31
	0x01DB3A20 BL 0x1D36978
	0x01DB3A24 LDR X0, [X21]
	0x01DB3A28 BL 0x1C16F10
	0x01DB3A2C LDR X2, [X24]
	0x01DB3A30 MOV X1, X19
	0x01DB3A34 MOV X3, X31
	0x01DB3A38 MOV X20, X0
	0x01DB3A3C BL 0x35C52F0
	0x01DB3A40 MOV X0, X20
	0x01DB3A44 MOV X1, X31
	0x01DB3A48 BL 0x1D36978
	0x01DB3A4C LDR X0, [X21]
	0x01DB3A50 BL 0x1C16F10
	0x01DB3A54 LDR X2, [X23]
	0x01DB3A58 MOV X1, X19
	0x01DB3A5C MOV X3, X31
	0x01DB3A60 MOV X20, X0
	0x01DB3A64 BL 0x35C52F0
	0x01DB3A68 MOV X0, X20
	0x01DB3A6C MOV X1, X31
	0x01DB3A70 BL 0x1D36978
	0x01DB3A74 LDR X0, [X21]
	0x01DB3A78 BL 0x1C16F10
	0x01DB3A7C LDR X2, [X22]
	0x01DB3A80 MOV X1, X19
	0x01DB3A84 MOV X3, X31
	0x01DB3A88 MOV X20, X0
	0x01DB3A8C BL 0x35C52F0
	0x01DB3A90 MOV X0, X20
	0x01DB3A94 MOV X1, X31
	0x01DB3A98 BL 0x1D36978
	0x01DB3A9C LDR X1, [X19 + 0x188]
	0x01DB3AA0 CBZ X1, 0x1DB3AC4
	0x01DB3AA4 MOV X0, X19
	0x01DB3AA8 LDP X20, X19, [X31 + 0x40]
	0x01DB3AAC LDP X22, X21, [X31 + 0x30]
	0x01DB3AB0 LDP X24, X23, [X31 + 0x20]
	0x01DB3AB4 LDP X26, X25, [X31 + 0x10]
	0x01DB3AB8 MOV X2, X31
	0x01DB3ABC LDP X30, X27, [X31], #0x50
	0x01DB3AC0 B 0x3C36968
	0x01DB3AC4 LDP X20, X19, [X31 + 0x40]
	0x01DB3AC8 LDP X22, X21, [X31 + 0x30]
	0x01DB3ACC LDP X24, X23, [X31 + 0x20]
	0x01DB3AD0 LDP X26, X25, [X31 + 0x10]
	0x01DB3AD4 LDP X30, X27, [X31], #0x50
	0x01DB3AD8 RET
	0x01DB3ADC BL 0x1C16F20
	0x01DB3AE0 STP X30, X21, [X31 - 0x20]!
	0x01DB3AE4 STP X20, X19, [X31 + 0x10]
	0x01DB3AE8 ADRP X20, 0x2625000
	0x01DB3AEC ADRP X21, 0x2344000
	0x01DB3AF0 LDRB W8, [X20 + 0xB01]
	0x01DB3AF4 LDR X21, [X21 + 0xB88]
	0x01DB3AF8 MOV X19, X0
	0x01DB3AFC TBNZ X8, 0x0, 0x1DB3B14
	0x01DB3B00 ADRP X0, 0x2344000
	0x01DB3B04 LDR X0, [X0 + 0xB88]
	0x01DB3B08 BL 0x1C16CF4
	0x01DB3B0C MOVZ W8, 0x1
	0x01DB3B10 STRB W8, [X20 + 0xB01]
	0x01DB3B14 LDR X0, [X21]
	0x01DB3B18 BL 0x1C16F10
	0x01DB3B1C MOV X1, X31
	0x01DB3B20 MOV X20, X0
	0x01DB3B24 BL 0x33BDD8C
	0x01DB3B28 STR W31, [X20 + 0x10]
	0x01DB3B2C STR X19, [X20 + 0x20]
	0x01DB3B30 MOV X0, X20
	0x01DB3B34 LDP X20, X19, [X31 + 0x10]
	0x01DB3B38 LDP X30, X21, [X31], #0x20
	0x01DB3B3C RET
	0x01DB3B40 STR X30, [X31 - 0x20]!
	0x01DB3B44 STP X20, X19, [X31 + 0x10]
	0x01DB3B48 MOV W19, W1
	0x01DB3B4C MOV X1, X31
	0x01DB3B50 MOV X20, X0
	0x01DB3B54 BL 0x33BDD8C
	0x01DB3B58 STR W19, [X20 + 0x10]
	0x01DB3B5C LDP X20, X19, [X31 + 0x10]
	0x01DB3B60 LDR X30, [X31], #0x20
	0x01DB3B64 RET
	0x01DB3B68 STR X30, [X31 - 0x30]!
	0x01DB3B6C STP X22, X21, [X31 + 0x10]
	0x01DB3B70 STP X20, X19, [X31 + 0x20]
	0x01DB3B74 ADRP X22, 0x2625000
	0x01DB3B78 ADRP X21, 0x2340000
	0x01DB3B7C LDRB W8, [X22 + 0xB02]
	0x01DB3B80 LDR X21, [X21 + 0x648]
	0x01DB3B84 MOV X20, X1
	0x01DB3B88 MOV X19, X0
	0x01DB3B8C TBNZ X8, 0x0, 0x1DB3BB0
	0x01DB3B90 ADRP X0, 0x2340000
	0x01DB3B94 LDR X0, [X0 + 0x648]
	0x01DB3B98 BL 0x1C16CF4
	0x01DB3B9C ADRP X0, 0x2342000
	0x01DB3BA0 LDR X0, [X0 + 0x7D8]
	0x01DB3BA4 BL 0x1C16CF4
	0x01DB3BA8 MOVZ W8, 0x1
	0x01DB3BAC STRB W8, [X22 + 0xB02]
	0x01DB3BB0 LDR X0, [X21]
	0x01DB3BB4 LDR W8, [X0 + 0xE0]
	0x01DB3BB8 CBNZ W8, 0x1DB3BC0
	0x01DB3BBC BL 0x1C16DFC
	0x01DB3BC0 ADRP X22, 0x2625000
	0x01DB3BC4 LDRB W8, [X22 + 0x787]
	0x01DB3BC8 CBNZ W8, 0x1DB3BE0
	0x01DB3BCC ADRP X0, 0x2340000
	0x01DB3BD0 LDR X0, [X0 + 0x648]
	0x01DB3BD4 BL 0x1C16CF4
	0x01DB3BD8 MOVZ W8, 0x1
	0x01DB3BDC STRB W8, [X22 + 0x787]
	0x01DB3BE0 LDR X0, [X21]
	0x01DB3BE4 LDR W8, [X0 + 0xE0]
	0x01DB3BE8 CBNZ W8, 0x1DB3BF4
	0x01DB3BEC BL 0x1C16DFC
	0x01DB3BF0 LDR X0, [X21]
	0x01DB3BF4 LDR X8, [X0 + 0xB8]
	0x01DB3BF8 LDR X8, [X8]
	0x01DB3BFC CBZ X8, 0x1DB3C64
	0x01DB3C00 LDR X8, [X8 + 0xB8]
	0x01DB3C04 CBZ X8, 0x1DB3C64
	0x01DB3C08 LDR X8, [X8 + 0x70]
	0x01DB3C0C CBZ X8, 0x1DB3C64
	0x01DB3C10 ADRP X9, 0x2342000
	0x01DB3C14 LDR X9, [X9 + 0x7D8]
	0x01DB3C18 LDR X0, [X8 + 0x50]
	0x01DB3C1C LDR X1, [X9]
	0x01DB3C20 BL 0x2653CA8
	0x01DB3C24 ANDS W31, W20, 0xFF
	0x01DB3C28 STR S0, [X19 + 0x1A8]
	0x01DB3C2C STR S1, [X19 + 0x1AC]
	0x01DB3C30 STR S2, [X19 + 0x1B0]
	0x01DB3C34 STR S3, [X19 + 0x1B4]
	0x01DB3C38 B.EQ 0x1DB3C4C
	0x01DB3C3C LDP X20, X19, [X31 + 0x20]
	0x01DB3C40 LDP X22, X21, [X31 + 0x10]
	0x01DB3C44 LDR X30, [X31], #0x30
	0x01DB3C48 RET
	0x01DB3C4C LDR X1, [X19 + 0x198]
	0x01DB3C50 MOV X0, X19
	0x01DB3C54 LDP X20, X19, [X31 + 0x20]
	0x01DB3C58 LDP X22, X21, [X31 + 0x10]
	0x01DB3C5C LDR X30, [X31], #0x30
	0x01DB3C60 B 0x1DB3C68
	0x01DB3C64 BL 0x1C16F20
	0x01DB3C68 STP X30, X23, [X31 - 0x30]!
	0x01DB3C6C STP X22, X21, [X31 + 0x10]
	0x01DB3C70 STP X20, X19, [X31 + 0x20]
	0x01DB3C74 ADRP X21, 0x2625000
	0x01DB3C78 LDRB W8, [X21 + 0xB17]
	0x01DB3C7C MOV X19, X1
	0x01DB3C80 MOV X20, X0
	0x01DB3C84 TBNZ X8, 0x0, 0x1DB3CA8
	0x01DB3C88 ADRP X0, 0x2343000
	0x01DB3C8C LDR X0, [X0 + 0xA78]
	0x01DB3C90 BL 0x1C16CF4
	0x01DB3C94 ADRP X0, 0x2344000
	0x01DB3C98 LDR X0, [X0 + 0xB90]
	0x01DB3C9C BL 0x1C16CF4
	0x01DB3CA0 MOVZ W8, 0x1
	0x01DB3CA4 STRB W8, [X21 + 0xB17]
	0x01DB3CA8 LDRB W8, [X20 + 0x58]
	0x01DB3CAC CBZ W8, 0x1DB3CF0
	0x01DB3CB0 STRB W31, [X20 + 0x58]
	0x01DB3CB4 LDR X0, [X20 + 0x40]
	0x01DB3CB8 CBZ X0, 0x1DB3E8C
	0x01DB3CBC MOV X1, X31
	0x01DB3CC0 BL 0x1E93588
	0x01DB3CC4 TBNZ X0, 0x0, 0x1DB3D2C
	0x01DB3CC8 MOV X0, X19
	0x01DB3CCC MOV X1, X31
	0x01DB3CD0 BL 0x32277A8
	0x01DB3CD4 TBNZ X0, 0x0, 0x1DB3D2C
	0x01DB3CD8 MOV X0, X19
	0x01DB3CDC LDP X20, X19, [X31 + 0x20]
	0x01DB3CE0 LDP X22, X21, [X31 + 0x10]
	0x01DB3CE4 MOV X1, X31
	0x01DB3CE8 LDP X30, X23, [X31], #0x30
	0x01DB3CEC B 0x1D50994
	0x01DB3CF0 ADRP X23, 0x2343000
	0x01DB3CF4 LDR X23, [X23 + 0xA78]
	0x01DB3CF8 LDR X0, [X23]
	0x01DB3CFC LDR W8, [X0 + 0xE0]
	0x01DB3D00 CBNZ W8, 0x1DB3D08
	0x01DB3D04 BL 0x1C16DFC
	0x01DB3D08 MOV X0, X20
	0x01DB3D0C MOV X1, X31
	0x01DB3D10 BL 0x1E77B08
	0x01DB3D14 LDR X0, [X20 + 0x38]
	0x01DB3D18 CBZ X0, 0x1DB3E8C
	0x01DB3D1C MOV X1, X31
	0x01DB3D20 BL 0x1E9E538
	0x01DB3D24 CMP W0, 0x4
	0x01DB3D28 B.NE 0x1DB3D3C
	0x01DB3D2C LDP X20, X19, [X31 + 0x20]
	0x01DB3D30 LDP X22, X21, [X31 + 0x10]
	0x01DB3D34 LDP X30, X23, [X31], #0x30
	0x01DB3D38 RET
	0x01DB3D3C LDR X0, [X20 + 0x40]
	0x01DB3D40 CBZ X0, 0x1DB3E8C
	0x01DB3D44 MOV X1, X31
	0x01DB3D48 BL 0x1E94078
	0x01DB3D4C TBNZ X0, 0x0, 0x1DB3D8C
	0x01DB3D50 LDR X0, [X23]
	0x01DB3D54 LDR X19, [X20 + 0x40]
	0x01DB3D58 LDR W8, [X0 + 0xE0]
	0x01DB3D5C CBNZ W8, 0x1DB3D64
	0x01DB3D60 BL 0x1C16DFC
	0x01DB3D64 ADRP X8, 0x2344000
	0x01DB3D68 LDR X8, [X8 + 0xB90]
	0x01DB3D6C MOV X1, X19
	0x01DB3D70 LDP X20, X19, [X31 + 0x20]
	0x01DB3D74 LDP X22, X21, [X31 + 0x10]
	0x01DB3D78 LDR X0, [X8]
	0x01DB3D7C MOVZ W2, 0x1
	0x01DB3D80 MOV X3, X31
	0x01DB3D84 LDP X30, X23, [X31], #0x30
	0x01DB3D88 B 0x1E77B00
	0x01DB3D8C MOV W21, W0
	0x01DB3D90 MOV X0, X19
	0x01DB3D94 MOV X1, X31
	0x01DB3D98 BL 0x1E8DD08
	0x01DB3D9C ADD W8, W0, 0xB
	0x01DB3DA0 AND W22, W8, 0xFFFFFFFC
	0x01DB3DA4 CMP W22, 0x201
	0x01DB3DA8 B.GE 0x1DB3DFC
	0x01DB3DAC LDR X8, [X20 + 0x38]
	0x01DB3DB0 CBZ X8, 0x1DB3E8C
	0x01DB3DB4 LDR X0, [X8 + 0x50]
	0x01DB3DB8 CBZ X0, 0x1DB3E8C
	0x01DB3DBC MOV X1, X31
	0x01DB3DC0 BL 0x1EC4D00
	0x01DB3DC4 TBZ X0, 0x0, 0x1DB3E80
	0x01DB3DC8 LDR X8, [X20 + 0x38]
	0x01DB3DCC CBZ X8, 0x1DB3E8C
	0x01DB3DD0 LDR X0, [X8 + 0x50]
	0x01DB3DD4 MOV W1, W22
	0x01DB3DD8 MOV X2, X31
	0x01DB3DDC BL 0x1ED9318
	0x01DB3DE0 LDR X8, [X20 + 0x40]
	0x01DB3DE4 CBZ X8, 0x1DB3E8C
	0x01DB3DE8 LDR X8, [X8 + 0x20]
	0x01DB3DEC MOV X22, X0
	0x01DB3DF0 CBZ X8, 0x1DB3E30
	0x01DB3DF4 LDR W0, [X8]
	0x01DB3DF8 B 0x1DB3E34
	0x01DB3DFC LDR X0, [X23]
	0x01DB3E00 LDR W8, [X0 + 0xE0]
	0x01DB3E04 CBNZ W8, 0x1DB3E0C
	0x01DB3E08 BL 0x1C16DFC
	0x01DB3E0C ADRP X8, 0x2344000
	0x01DB3E10 LDR X8, [X8 + 0xB90]
	0x01DB3E14 MOV W1, W22
	0x01DB3E18 LDP X20, X19, [X31 + 0x20]
	0x01DB3E1C LDP X22, X21, [X31 + 0x10]
	0x01DB3E20 LDR X0, [X8]
	0x01DB3E24 MOV X2, X31
	0x01DB3E28 LDP X30, X23, [X31], #0x30
	0x01DB3E2C B 0x1E77AF8
	0x01DB3E30 MOV X0, X31
	0x01DB3E34 LDR W1, [X20 + 0x68]
	0x01DB3E38 MOVZ W2, 0x6
	0x01DB3E3C MOV X3, X31
	0x01DB3E40 BL 0x1E9C23C
	0x01DB3E44 STUR X0, [X22 + 0x1C]
	0x01DB3E48 ADD X0, X22, 0x24
	0x01DB3E4C MOV X1, X19
	0x01DB3E50 MOV X2, X31
	0x01DB3E54 BL 0x1E8DCF8
	0x01DB3E58 CBZ X22, 0x1DB3E8C
	0x01DB3E5C UBFM W8, W0, 0x1D, 0x1C
	0x01DB3E60 ADD W8, W8, 0x58
	0x01DB3E64 AND W8, W8, 0xFFFFFFE0
	0x01DB3E68 STR W8, [X22 + 0xC]
	0x01DB3E6C LDR X0, [X20 + 0x38]
	0x01DB3E70 CBZ X0, 0x1DB3E8C
	0x01DB3E74 MOV X1, X22
	0x01DB3E78 MOV X2, X31
	0x01DB3E7C BL 0x1EA1E24
	0x01DB3E80 ANDS W31, W21, 0x7
	0x01DB3E84 B.NE 0x1DB3CB4
	0x01DB3E88 B 0x1DB3D2C
	0x01DB3E8C BL 0x1C16F20
	0x01DB3E90 SUB X31, X31, 0x30
	0x01DB3E94 STP X30, X21, [X31 + 0x10]
	0x01DB3E98 STP X20, X19, [X31 + 0x20]
	0x01DB3E9C ADRP X20, 0x2625000
	0x01DB3EA0 LDRB W8, [X20 + 0xB03]
	0x01DB3EA4 MOV X19, X0
	0x01DB3EA8 TBNZ X8, 0x0, 0x1DB3EE4
	0x01DB3EAC ADRP X0, 0x2340000
	0x01DB3EB0 LDR X0, [X0 + 0x648]
	0x01DB3EB4 BL 0x1C16CF4
	0x01DB3EB8 ADRP X0, 0x2341000
	0x01DB3EBC LDR X0, [X0 + 0xC38]
	0x01DB3EC0 BL 0x1C16CF4
	0x01DB3EC4 ADRP X0, 0x2341000
	0x01DB3EC8 LDR X0, [X0 + 0xB18]
	0x01DB3ECC BL 0x1C16CF4
	0x01DB3ED0 ADRP X0, 0x2342000
	0x01DB3ED4 LDR X0, [X0 + 0x7D8]
	0x01DB3ED8 BL 0x1C16CF4
	0x01DB3EDC MOVZ W8, 0x1
	0x01DB3EE0 STRB W8, [X20 + 0xB03]
	0x01DB3EE4 STR X31, [X31 + 0x8]
	0x01DB3EE8 LDR X0, [X19 + 0x198]
	0x01DB3EEC MOV X1, X31
	0x01DB3EF0 BL 0x32277A8
	0x01DB3EF4 TBNZ X0, 0x0, 0x1DB3FD8
	0x01DB3EF8 ADRP X20, 0x2340000
	0x01DB3EFC LDR X20, [X20 + 0x648]
	0x01DB3F00 LDR X0, [X20]
	0x01DB3F04 LDR W8, [X0 + 0xE0]
	0x01DB3F08 CBNZ W8, 0x1DB3F10
	0x01DB3F0C BL 0x1C16DFC
	0x01DB3F10 ADRP X21, 0x2625000
	0x01DB3F14 LDRB W8, [X21 + 0x787]
	0x01DB3F18 CBNZ W8, 0x1DB3F30
	0x01DB3F1C ADRP X0, 0x2340000
	0x01DB3F20 LDR X0, [X0 + 0x648]
	0x01DB3F24 BL 0x1C16CF4
	0x01DB3F28 MOVZ W8, 0x1
	0x01DB3F2C STRB W8, [X21 + 0x787]
	0x01DB3F30 LDR X0, [X20]
	0x01DB3F34 LDR W8, [X0 + 0xE0]
	0x01DB3F38 CBNZ W8, 0x1DB3F44
	0x01DB3F3C BL 0x1C16DFC
	0x01DB3F40 LDR X0, [X20]
	0x01DB3F44 LDR X8, [X0 + 0xB8]
	0x01DB3F48 LDR X8, [X8]
	0x01DB3F4C CBZ X8, 0x1DB3FE8
	0x01DB3F50 LDR X0, [X8 + 0xD0]
	0x01DB3F54 CBZ X0, 0x1DB3FE8
	0x01DB3F58 ADRP X8, 0x2341000
	0x01DB3F5C LDR X1, [X19 + 0x198]
	0x01DB3F60 LDR X8, [X8 + 0xC38]
	0x01DB3F64 ADD X2, X31, 0x8
	0x01DB3F68 LDR X3, [X8]
	0x01DB3F6C BL 0x2609E34
	0x01DB3F70 LDR X8, [X31 + 0x8]
	0x01DB3F74 CBZ X8, 0x1DB3FD8
	0x01DB3F78 LDR X0, [X8 + 0x50]
	0x01DB3F7C ADRP X8, 0x2342000
	0x01DB3F80 LDR X8, [X8 + 0x7D8]
	0x01DB3F84 LDR X1, [X8]
	0x01DB3F88 BL 0x2653CA8
	0x01DB3F8C LDR X0, [X19 + 0xC8]
	0x01DB3F90 STR S0, [X19 + 0x1A8]
	0x01DB3F94 STR S1, [X19 + 0x1AC]
	0x01DB3F98 STR S2, [X19 + 0x1B0]
	0x01DB3F9C STR S3, [X19 + 0x1B4]
	0x01DB3FA0 CBZ X0, 0x1DB3FE8
	0x01DB3FA4 LDR X1, [X31 + 0x8]
	0x01DB3FA8 MOV X2, X31
	0x01DB3FAC BL 0x1DC0C1C
	0x01DB3FB0 LDR X8, [X31 + 0x8]
	0x01DB3FB4 CBZ X8, 0x1DB3FE8
	0x01DB3FB8 LDR X8, [X8 + 0x50]
	0x01DB3FBC CBZ X8, 0x1DB3FE8
	0x01DB3FC0 LDR X0, [X19 + 0xC8]
	0x01DB3FC4 CBZ X0, 0x1DB3FE8
	0x01DB3FC8 LDP S2, S3, [X8 + 0x54]
	0x01DB3FCC LDP S0, S1, [X8 + 0x4C]
	0x01DB3FD0 MOV X1, X31
	0x01DB3FD4 BL 0x1DC0C38
	0x01DB3FD8 LDP X20, X19, [X31 + 0x20]
	0x01DB3FDC LDP X30, X21, [X31 + 0x10]
	0x01DB3FE0 ADD X31, X31, 0x30
	0x01DB3FE4 RET
	0x01DB3FE8 BL 0x1C16F20
	0x01DB3FEC SUB X31, X31, 0xB0
	0x01DB3FF0 STP X29, X30, [X31 + 0x50]
	0x01DB3FF4 STP X28, X27, [X31 + 0x60]
	0x01DB3FF8 STP X26, X25, [X31 + 0x70]
	0x01DB3FFC STP X24, X23, [X31 + 0x80]
	0x01DB4000 STP X22, X21, [X31 + 0x90]
	0x01DB4004 STP X20, X19, [X31 + 0xA0]
	0x01DB4008 ADRP X19, 0x2624000
	0x01DB400C ADRP X20, 0x233F000
	0x01DB4010 LDRB W8, [X19 + 0xB04]
	0x01DB4014 LDR X20, [X20 + 0x648]
	0x01DB4018 MOV X22, X0
	0x01DB401C TBNZ X8, 0x0, 0x1DB4148
	0x01DB4020 ADRP X0, 0x233F000
	0x01DB4024 LDR X0, [X0 + 0x648]
	0x01DB4028 BL 0x1C16CF4
	0x01DB402C ADRP X0, 0x2343000
	0x01DB4030 LDR X0, [X0 + 0xB98]
	0x01DB4034 BL 0x1C16CF4
	0x01DB4038 ADRP X0, 0x2343000
	0x01DB403C LDR X0, [X0 + 0xBA0]
	0x01DB4040 BL 0x1C16CF4
	0x01DB4044 ADRP X0, 0x2342000
	0x01DB4048 LDR X0, [X0 + 0x890]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0x2626000
	014 Move W8, [X20+2815]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {91}
	020 Move X0, 0x2341000
	021 Move X0, [X0+3368]
	022 Call 0x1C17CF4
	023 Move X0, 0x2345000
	024 Move X0, [X0+2808]
	025 Call 0x1C17CF4
	026 Move X0, 0x2345000
	027 Move X0, [X0+2816]
	028 Call 0x1C17CF4
	029 Move X0, 0x2344000
	030 Move X0, [X0+3008]
	031 Call 0x1C17CF4
	032 Move X0, 0x2345000
	033 Move X0, [X0+2824]
	034 Call 0x1C17CF4
	035 Move X0, 0x2345000
	036 Move X0, [X0+2832]
	037 Call 0x1C17CF4
	038 Move X0, 0x2341000
	039 Move X0, [X0+1608]
	040 Call 0x1C17CF4
	041 Move X0, 0x2341000
	042 Move X0, [X0+2392]
	043 Call 0x1C17CF4
	044 Move X0, 0x2345000
	045 Move X0, [X0+2840]
	046 Call 0x1C17CF4
	047 Move X0, 0x2341000
	048 Move X0, [X0+3504]
	049 Call 0x1C17CF4
	050 Move X0, 0x2345000
	051 Move X0, [X0+2848]
	052 Call 0x1C17CF4
	053 Move X0, 0x2345000
	054 Move X0, [X0+2856]
	055 Call 0x1C17CF4
	056 Move X0, 0x2345000
	057 Move X0, [X0+2864]
	058 Call 0x1C17CF4
	059 Move X0, 0x2345000
	060 Move X0, [X0+2872]
	061 Call 0x1C17CF4
	062 Move X0, 0x2345000
	063 Move X0, [X0+2760]
	064 Call 0x1C17CF4
	065 Move X0, 0x2345000
	066 Move X0, [X0+2768]
	067 Call 0x1C17CF4
	068 Move X0, 0x2345000
	069 Move X0, [X0+2880]
	070 Call 0x1C17CF4
	071 Move X0, 0x2345000
	072 Move X0, [X0+2776]
	073 Call 0x1C17CF4
	074 Move X0, 0x2345000
	075 Move X0, [X0+2888]
	076 Call 0x1C17CF4
	077 Move X0, 0x2345000
	078 Move X0, [X0+2896]
	079 Call 0x1C17CF4
	080 Move X0, 0x2343000
	081 Move X0, [X0+2464]
	082 Call 0x1C17CF4
	083 Move X0, 0x2341000
	084 Move X0, [X0+3488]
	085 Call 0x1C17CF4
	086 Move X0, 0x2343000
	087 Move X0, [X0+1992]
	088 Call 0x1C17CF4
	089 Move W8, 1
	090 Move [X20+2815], W8
	091 Move W2, 1
	092 Move X0, X19
	093 Move W1, W31
	094 Move X3, X31
	095 Call NetworkBehaviour.GetChangeDetector, X0, X1, X2
	096 Move X8, [X19+64]
	097 Move [X19+376], X0
	098 Compare X8, 0
	099 JumpIfEqual {722}
	100 Move X20, [X19+56]
	101 Move X0, X8
	102 Move X1, X31
	103 Call NetworkObject.get_InputAuthority, X0
	104 Compare X20, 0
	105 JumpIfEqual {722}
	106 And X1, X0, 0
	107 Move X0, X20
	108 Move X2, X31
	109 Call NetworkRunner.GetPlayerActorId, X0, X1
	110 Move X8, [X19+64]
	111 Move [X19+400], X0
	112 Compare X8, 0
	113 JumpIfEqual {722}
	114 Move X20, [X19+56]
	115 Move X0, X8
	116 Move X1, X31
	117 Call NetworkObject.get_InputAuthority, X0
	118 Compare X20, 0
	119 JumpIfEqual {722}
	120 Move X21, 0x2341000
	121 Move X22, 0x2345000
	122 Move X23, 0x2341000
	123 Move X21, [X21+2392]
	124 Move X22, [X22+2848]
	125 Move X23, [X23+1608]
	126 And X1, X0, 0
	127 Move X0, X20
	128 Move X2, X31
	129 Call NetworkRunner.GetPlayerUserId, X0, X1
	130 Move [X19+408], X0
	131 Move X0, [X21]
	132 Call 0x1C17F10
	133 Move X2, [X22]
	134 Move X1, X19
	135 Move X3, X31
	136 Move X20, X0
	137 Call CoroutineGenerator..ctor, X0, X1, X2
	138 Move X0, X20
	139 Move W1, W31
	140 Move X2, X31
	141 Call Commands.Coroutine, X0, X1
	142 Move X8, [X23]
	143 Move X20, X0
	144 Move W9, [X8+224]
	145 Compare W9, 0
	146 JumpIfNotEqual {149}
	147 Move X0, X8
	148 Call 0x1C17DFC
	149 Move W1, 1
	150 Move X0, X20
	151 Move X2, X31
	152 Call App.ExecuteCommand, X0, X1
	153 Move X8, [X19+64]
	154 Move [X19+472], X0
	155 Compare X8, 0
	156 JumpIfEqual {722}
	157 Move X0, X8
	158 Move X1, X31
	159 Call NetworkObject.get_HasInputAuthority, X0
	160 Move X8, [X19+200]
	161 Move TEMP, X0
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfNotEqual {425}
	165 Compare X8, 0
	166 JumpIfEqual {722}
	167 Move X0, X8
	168 Move X1, X31
	169 Call Component.get_gameObject, X0
	170 Compare X0, 0
	171 JumpIfEqual {722}
	172 Move W1, W31
	173 Move X2, X31
	174 Call GameObject.SetActive, X0, X1
	175 Move X25, 0x2341000
	176 Move X25, [X25+3488]
	177 Move X0, [X25]
	178 Call 0x1C17F10
	179 Move X8, 0x2345000
	180 Move X8, [X8+2776]
	181 Move X1, X19
	182 Move X3, X31
	183 Move X20, X0
	184 Move X2, [X8]
	185 Call ObserverDelegate..ctor, X0, X1, X2
	186 Move X26, 0x2341000
	187 Move X26, [X26+3504]
	188 Move W1, 1
	189 Move X0, [X26]
	190 Call 0x1C17D6C
	191 Move X8, [X23]
	192 Move X21, X0
	193 Move W9, [X8+224]
	194 Compare W9, 0
	195 JumpIfNotEqual {198}
	196 Move X0, X8
	197 Call 0x1C17DFC
	198 Move X24, 0x2626000
	199 Move W8, [X24+1927]
	200 Compare W8, 0
	201 JumpIfNotEqual {207}
	202 Move X0, 0x2341000
	203 Move X0, [X0+1608]
	204 Call 0x1C17CF4
	205 Move W8, 1
	206 Move [X24+1927], W8
	207 Move X0, [X23]
	208 Move W8, [X0+224]
	209 Compare W8, 0
	210 JumpIfNotEqual {213}
	211 Call 0x1C17DFC
	212 Move X0, [X23]
	213 Move X8, [X0+184]
	214 Move X8, [X8]
	215 Compare X8, 0
	216 JumpIfEqual {722}
	217 Move X8, [X8+184]
	218 Compare X8, 0
	219 JumpIfEqual {722}
	220 Compare X21, 0
	221 JumpIfEqual {722}
	222 Move X22, [X8+96]
	223 Compare X22, 0
	224 JumpIfEqual {231}
	225 Move X8, [X21]
	226 Move X0, X22
	227 Move X1, [X8+64]
	228 Call 0x1C17E00
	229 Compare X0, 0
	230 JumpIfEqual {724}
	231 Move W8, [X21+24]
	232 Compare W8, 0
	233 JumpIfEqual {723}
	234 Move X0, X20
	235 Move X1, X21
	236 Move X2, X31
	237 Move [X21+32], X22
	238 Call App.RegisterObserver, X0, X1
	239 Move X0, [X25]
	240 Call 0x1C17F10
	241 Move X8, 0x2345000
	242 Move X8, [X8+2760]
	243 Move X1, X19
	244 Move X3, X31
	245 Move X20, X0
	246 Move X2, [X8]
	247 Call ObserverDelegate..ctor, X0, X1, X2
	248 Move X0, [X26]
	249 Move W1, 1
	250 Move W22, 1
	251 Call 0x1C17D6C
	252 Move W8, [X24+1927]
	253 Move X21, X0
	254 Compare W8, 0
	255 JumpIfNotEqual {260}
	256 Move X0, 0x2341000
	257 Move X0, [X0+1608]
	258 Call 0x1C17CF4
	259 Move [X24+1927], W22
	260 Move X0, [X23]
	261 Move W8, [X0+224]
	262 Compare W8, 0
	263 JumpIfNotEqual {266}
	264 Call 0x1C17DFC
	265 Move X0, [X23]
	266 Move X8, [X0+184]
	267 Move X8, [X8]
	268 Compare X8, 0
	269 JumpIfEqual {722}
	270 Move X8, [X8+184]
	271 Compare X8, 0
	272 JumpIfEqual {722}
	273 Compare X21, 0
	274 JumpIfEqual {722}
	275 Move X22, [X8+112]
	276 Compare X22, 0
	277 JumpIfEqual {284}
	278 Move X8, [X21]
	279 Move X0, X22
	280 Move X1, [X8+64]
	281 Call 0x1C17E00
	282 Compare X0, 0
	283 JumpIfEqual {724}
	284 Move W8, [X21+24]
	285 Compare W8, 0
	286 JumpIfEqual {723}
	287 Move X0, X20
	288 Move X1, X21
	289 Move X2, X31
	290 Move [X21+32], X22
	291 Call App.RegisterObserver, X0, X1
	292 Move X0, [X25]
	293 Call 0x1C17F10
	294 Move X8, 0x2345000
	295 Move X8, [X8+2768]
	296 Move X1, X19
	297 Move X3, X31
	298 Move X20, X0
	299 Move X2, [X8]
	300 Call ObserverDelegate..ctor, X0, X1, X2
	301 Move X0, [X26]
	302 Move W1, 2
	303 Call 0x1C17D6C
	304 Move W8, [X24+1927]
	305 Move X21, X0
	306 Compare W8, 0
	307 JumpIfNotEqual {313}
	308 Move X0, 0x2341000
	309 Move X0, [X0+1608]
	310 Call 0x1C17CF4
	311 Move W8, 1
	312 Move [X24+1927], W8
	313 Move X0, [X23]
	314 Move W8, [X0+224]
	315 Compare W8, 0
	316 JumpIfNotEqual {319}
	317 Call 0x1C17DFC
	318 Move X0, [X23]
	319 Move X8, [X0+184]
	320 Move X8, [X8]
	321 Compare X8, 0
	322 JumpIfEqual {722}
	323 Move X8, [X8+184]
	324 Compare X8, 0
	325 JumpIfEqual {722}
	326 Move X8, [X8+160]
	327 Compare X8, 0
	328 JumpIfEqual {722}
	329 Compare X21, 0
	330 JumpIfEqual {722}
	331 Move X22, [X8+72]
	332 Compare X22, 0
	333 JumpIfEqual {340}
	334 Move X8, [X21]
	335 Move X0, X22
	336 Move X1, [X8+64]
	337 Call 0x1C17E00
	338 Compare X0, 0
	339 JumpIfEqual {724}
	340 Move W8, [X21+24]
	341 Compare W8, 0
	342 JumpIfEqual {723}
	343 Move [X21+32], X22
	344 Move W8, [X24+1927]
	345 Compare W8, 0
	346 JumpIfNotEqual {352}
	347 Move X0, 0x2341000
	348 Move X0, [X0+1608]
	349 Call 0x1C17CF4
	350 Move W8, 1
	351 Move [X24+1927], W8
	352 Move X0, [X23]
	353 Move W8, [X0+224]
	354 Compare W8, 0
	355 JumpIfNotEqual {358}
	356 Call 0x1C17DFC
	357 Move X0, [X23]
	358 Move X8, [X0+184]
	359 Move X8, [X8]
	360 Compare X8, 0
	361 JumpIfEqual {722}
	362 Move X8, [X8+224]
	363 Compare X8, 0
	364 JumpIfEqual {722}
	365 Move X22, [X8+112]
	366 Compare X22, 0
	367 JumpIfEqual {374}
	368 Move X8, [X21]
	369 Move X0, X22
	370 Move X1, [X8+64]
	371 Call 0x1C17E00
	372 Compare X0, 0
	373 JumpIfEqual {724}
	374 Move W8, [X21+24]
	375 NotImplemented "Instruction CMP not yet implemented."
	376 Move X0, X20
	377 Move X1, X21
	378 Move X2, X31
	379 Move [X21+40], X22
	380 Call App.RegisterObserver, X0, X1
	381 Move X22, 0x2343000
	382 Move X22, [X22+1992]
	383 Move X0, [X22]
	384 Move W8, [X0+224]
	385 Compare W8, 0
	386 JumpIfNotEqual {389}
	387 Call 0x1C17DFC
	388 Move X0, [X22]
	389 Move X23, 0x2345000
	390 Move X8, [X0+184]
	391 Move X23, [X23+2832]
	392 Move X20, [X8+24]
	393 Move X0, [X23]
	394 Call 0x1C17F10
	395 Move X8, 0x2345000
	396 Move X8, [X8+2864]
	397 Move X1, X19
	398 Move X3, X31
	399 Move X21, X0
	400 Move X2, [X8]
	401 Call Action`3<Int32Enum, Object, Single>..ctor, X0, X1, X2
	402 Move X0, X20
	403 Move X1, X21
	404 Move X2, X31
	405 Call Delegate.Combine, X0, X1
	406 Compare X0, 0
	407 JumpIfEqual {446}
	408 Move X21, [X23]
	409 Move X20, X0
	410 Move X1, X21
	411 Call 0x1C17E00
	412 Compare X0, 0
	413 JumpIfEqual {558}
	414 Move X8, [X22]
	415 Move X8, [X8+184]
	416 Move [X8+24], X0
	417 Move X21, [X23]
	418 Move X0, X20
	419 Move X1, X21
	420 Call 0x1C17E00
	421 Compare X0, 0
	422 JumpIfEqual {558}
	423 Move X8, [X22]
	424 Move X8, [X8+184]
	425 Compare X8, 0
	426 JumpIfEqual {722}
	427 Move X3, [X19+152]
	428 Move X4, [X19+160]
	429 Move X2, [X19+144]
	430 Move X0, X8
	431 Move X1, X31
	432 Move X5, X3
	433 Move X6, X4
	434 Move W7, W31
	435 Move [X31], X31
	436 Call PlayerView.Setup, X0, X1, X2, X3, X4, X5, X6, X7
	437 Move X0, X19
	438 Call NetPlayer.RemoteVoiceVolumeUpdater, X0
	439 Move X1, X0
	440 Move X0, X19
	441 Move X2, X31
	442 Call MonoBehaviour.StartCoroutine, X0, X1
	443 Move [X19+392], X0
	444 Move X0, X19
	445 Call NetPlayer.HandleBlockedPlayersChanged, X0
	446 Move X8, [X22]
	447 Move X8, [X8+184]
	448 Move [X8+24], X31
	449 Move X23, 0x2341000
	450 Move X20, [X8+32]
	451 Move X23, [X23+3368]
	452 Move X0, [X23]
	453 Call 0x1C17F10
	454 Move X8, 0x2345000
	455 Move X8, [X8+2896]
	456 Move X1, X19
	457 Move X3, X31
	458 Move X21, X0
	459 Move X2, [X8]
	460 Call Action`1<Boolean>..ctor, X0, X1, X2
	461 Move X0, X20
	462 Move X1, X21
	463 Move X2, X31
	464 Call Delegate.Combine, X0, X1
	465 Compare X0, 0
	466 JumpIfEqual {484}
	467 Move X21, [X23]
	468 Move X20, X0
	469 Move X1, X21
	470 Call 0x1C17E00
	471 Compare X0, 0
	472 JumpIfEqual {558}
	473 Move X8, [X22]
	474 Move X8, [X8+184]
	475 Move [X8+32], X0
	476 Move X21, [X23]
	477 Move X0, X20
	478 Move X1, X21
	479 Call 0x1C17E00
	480 Compare X0, 0
	481 JumpIfEqual {558}
	482 Move X8, [X22]
	483 Move X8, [X8+184]
	484 Move X8, [X22]
	485 Move X8, [X8+184]
	486 Move [X8+32], X31
	487 Move X23, 0x2345000
	488 Move X20, [X8+64]
	489 Move X23, [X23+2816]
	490 Move X0, [X23]
	491 Call 0x1C17F10
	492 Move X8, 0x2345000
	493 Move X8, [X8+2880]
	494 Move X1, X19
	495 Move X3, X31
	496 Move X21, X0
	497 Move X2, [X8]
	498 Call Action`1<Int32>..ctor, X0, X1, X2
	499 Move X0, X20
	500 Move X1, X21
	501 Move X2, X31
	502 Call Delegate.Combine, X0, X1
	503 Compare X0, 0
	504 JumpIfEqual {522}
	505 Move X21, [X23]
	506 Move X20, X0
	507 Move X1, X21
	508 Call 0x1C17E00
	509 Compare X0, 0
	510 JumpIfEqual {558}
	511 Move X8, [X22]
	512 Move X8, [X8+184]
	513 Move [X8+64], X0
	514 Move X21, [X23]
	515 Move X0, X20
	516 Move X1, X21
	517 Call 0x1C17E00
	518 Compare X0, 0
	519 JumpIfEqual {558}
	520 Move X8, [X22]
	521 Move X8, [X8+184]
	522 Move X8, [X22]
	523 Move X8, [X8+184]
	524 Move [X8+64], X31
	525 Move X23, 0x2345000
	526 Move X20, [X8+72]
	527 Move X23, [X23+2808]
	528 Move X0, [X23]
	529 Call 0x1C17F10
	530 Move X8, 0x2345000
	531 Move X8, [X8+2888]
	532 Move X1, X19
	533 Move X3, X31
	534 Move X21, X0
	535 Move X2, [X8]
	536 Call Action`1<Object>..ctor, X0, X1, X2
	537 Move X0, X20
	538 Move X1, X21
	539 Move X2, X31
	540 Call Delegate.Combine, X0, X1
	541 Compare X0, 0
	542 JumpIfEqual {561}
	543 Move X21, [X23]
	544 Move X20, X0
	545 Move X1, X21
	546 Call 0x1C17E00
	547 Compare X0, 0
	548 JumpIfEqual {558}
	549 Move X8, [X22]
	550 Move X8, [X8+184]
	551 Move [X8+72], X0
	552 Move X21, [X23]
	553 Move X0, X20
	554 Move X1, X21
	555 Call 0x1C17E00
	556 Compare X0, 0
	557 JumpIfNotEqual {564}
	558 Move X0, X20
	559 Move X1, X21
	560 Call 0x1C181E0
	561 Move X8, [X22]
	562 Move X8, [X8+184]
	563 Move [X8+72], X31
	564 Move X0, X19
	565 Call NetPlayer.VoiceVolumeUpdater, X0
	566 Move X1, X0
	567 Move X0, X19
	568 Move X2, X31
	569 Call MonoBehaviour.StartCoroutine, X0, X1
	570 Move X22, [X19+232]
	571 Move [X19+392], X0
	572 Compare X22, 0
	573 JumpIfEqual {722}
	574 Move W8, [X22+24]
	575 NotImplemented "Instruction CMP not yet implemented."
	576 Move X24, 0x2344000
	577 Move X25, 0x2345000
	578 Move X26, 0x2345000
	579 Move X27, 0x2345000
	580 Move X24, [X24+3008]
	581 Move X25, [X25+2856]
	582 Move X26, [X26+2824]
	583 Move X27, [X27+2872]
	584 Move W23, W31
	585 NotImplemented "Instruction CMP not yet implemented."
	586 Add X8, X22, W23
	587 Move X28, [X8+32]
	588 Compare X28, 0
	589 JumpIfEqual {722}
	590 Move X0, [X24]
	591 Move X20, [X28+144]
	592 Call 0x1C17F10
	593 Move X2, [X25]
	594 Move X1, X19
	595 Move X3, X31
	596 Move X21, X0
	597 Call Action`2<Int32Enum, Object>..ctor, X0, X1, X2
	598 Move X0, X20
	599 Move X1, X21
	600 Move X2, X31
	601 Call Delegate.Combine, X0, X1
	602 Move X21, [X24]
	603 Compare X0, 0
	604 JumpIfEqual {618}
	605 Move X1, X21
	606 Move X20, X0
	607 Call 0x1C17E00
	608 Compare X0, 0
	609 JumpIfEqual {558}
	610 Move [X28+144], X0
	611 Move X21, [X24]
	612 Move X0, X20
	613 Move X1, X21
	614 Call 0x1C17E00
	615 Compare X0, 0
	616 JumpIfEqual {558}
	617 Move X21, [X24]
	618 Move [X28+144], X31
	619 Move X20, [X28+160]
	620 Move X0, X21
	621 Call 0x1C17F10
	622 Move X2, [X25]
	623 Move X1, X19
	624 Move X3, X31
	625 Move X21, X0
	626 Call Action`2<Int32Enum, Object>..ctor, X0, X1, X2
	627 Move X0, X20
	628 Move X1, X21
	629 Move X2, X31
	630 Call Delegate.Combine, X0, X1
	631 Compare X0, 0
	632 JumpIfEqual {646}
	633 Move X21, [X24]
	634 Move X20, X0
	635 Move X1, X21
	636 Call 0x1C17E00
	637 Compare X0, 0
	638 JumpIfEqual {558}
	639 Move [X28+160], X0
	640 Move X21, [X24]
	641 Move X0, X20
	642 Move X1, X21
	643 Call 0x1C17E00
	644 Compare X0, 0
	645 JumpIfNotEqual {647}
	646 Move [X28+160], X31
	647 Move X0, [X26]
	648 Move X20, [X28+152]
	649 Call 0x1C17F10
	650 Move X2, [X27]
	651 Move X1, X19
	652 Move X3, X31
	653 Move X21, X0
	654 Call Action`3<Int32Enum, Object, Vector3>..ctor, X0, X1, X2
	655 Move X0, X20
	656 Move X1, X21
	657 Move X2, X31
	658 Call Delegate.Combine, X0, X1
	659 Compare X0, 0
	660 JumpIfEqual {674}
	661 Move X21, [X26]
	662 Move X20, X0
	663 Move X1, X21
	664 Call 0x1C17E00
	665 Compare X0, 0
	666 JumpIfEqual {558}
	667 Move [X28+152], X0
	668 Move X21, [X26]
	669 Move X0, X20
	670 Move X1, X21
	671 Call 0x1C17E00
	672 Compare X0, 0
	673 JumpIfNotEqual {675}
	674 Move [X28+152], X31
	675 Move W8, [X22+24]
	676 Add W23, W23, 1
	677 NotImplemented "Instruction CMP not yet implemented."
	678 Move X20, 0x2343000
	679 Move X20, [X20+2464]
	680 Move X0, X19
	681 Call NetPlayer.HandleDisplayNameChanged, X0
	682 Move X0, X19
	683 Call NetPlayer.UpdateRigFromData, X0
	684 Move X0, [X20]
	685 Move W8, [X0+224]
	686 Compare W8, 0
	687 JumpIfNotEqual {690}
	688 Call 0x1C17DFC
	689 Move X0, [X20]
	690 Move X8, [X19+64]
	691 Compare X8, 0
	692 JumpIfEqual {722}
	693 Move X9, [X0+184]
	694 Move X8, [X8+32]
	695 Move X0, [X9]
	696 Compare X8, 0
	697 JumpIfEqual {719}
	698 Move W1, [X8]
	699 Compare X0, 0
	700 JumpIfEqual {722}
	701 Move X8, 0x2344000
	702 Move X8, [X8+2840]
	703 Move X2, X19
	704 Move X20, [X31+96]
	705 Move X19, [X31+104]
	706 Move X22, [X31+80]
	707 Move X21, [X31+88]
	708 Move X3, [X8]
	709 Move X24, [X31+64]
	710 Move X23, [X31+72]
	711 Move X26, [X31+48]
	712 Move X25, [X31+56]
	713 Move X28, [X31+32]
	714 Move X27, [X31+40]
	715 Move X30, [X31+16]
	716 Add X31, X31, 112
	717 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	718 Return 
	719 Move W1, W31
	720 Compare X0, 0
	721 JumpIfNotEqual {701}
	722 Call 0x1C17F20
	723 Call 0x1C17F28
	724 Call 0x1C17F44
	725 Move X1, X31
	726 Call 0x1C17DEC

Method: System.Void Despawned(Fusion.NetworkRunner runner, System.Boolean hasState)

Disassembly:
	0x01DB4554 ADD W10, W10, 0x1
	0x01DB4558 LDR X9, [X9]
	0x01DB455C STR W10, [X21 + 0x1C]
	0x01DB4560 CBZ X8, 0x1DB45D0
	0x01DB4564 LDRSW X10, [X21 + 0x18]
	0x01DB4568 LDR W11, [X8 + 0x18]
	0x01DB456C CMP W10, W11
	0x01DB4570 B.CS 0x1DB458C
	0x01DB4574 ADD W9, W10, 0x1
	0x01DB4578 ADD X8, X8, X10, 0x2, LSL
	0x01DB457C MOV X23, X31
	0x01DB4580 STR W9, [X21 + 0x18]
	0x01DB4584 STR W1, [X8 + 0x20]
	0x01DB4588 B 0x1DB45A4
	0x01DB458C LDR X8, [X9 + 0x20]
	0x01DB4590 LDR X8, [X8 + 0xC0]
	0x01DB4594 LDR X2, [X8 + 0x70]
	0x01DB4598 MOV X0, X21
	0x01DB459C BL 0x2FDC70C
	0x01DB45A0 MOV X23, X31
	0x01DB45A4 ADRP X8, 0x2342000
	0x01DB45A8 LDR X8, [X8 + 0x890]
	0x01DB45AC LDR X1, [X8]
	0x01DB45B0 ADD X0, X31, 0x30
	0x01DB45B4 BL 0x2BF5F48
	0x01DB45B8 CBZ X23, 0x1DB43C8
	0x01DB45BC B 0x1DB46EC
	0x01DB45C0 BL 0x1C16F20
	0x01DB45C4 B 0x1DB4714
	0x01DB45C8 BL 0x1C16F20
	0x01DB45CC B 0x1DB4714
	0x01DB45D0 BL 0x1C16F20
	0x01DB45D4 B 0x1DB4714
	0x01DB45D8 B 0x1DB45E8
	0x01DB45DC B 0x1DB45E8
	0x01DB45E0 B 0x1DB45E8
	0x01DB45E4 B 0x1DB45E8
	0x01DB45E8 CMP W1, 0x1
	0x01DB45EC B.NE 0x1DB46B8
	0x01DB45F0 BL 0x3EB1AD0
	0x01DB45F4 LDR X23, [X0]
	0x01DB45F8 BL 0x3EB1AE0
	0x01DB45FC B 0x1DB45A4
	0x01DB4600 MOV X20, X31
	0x01DB4604 CBZ X22, 0x1DB4668
	0x01DB4608 LDR X8, [X22]
	0x01DB460C ADRP X10, 0x233F000
	0x01DB4610 LDRH W9, [X8 + 0x12E]
	0x01DB4614 LDR X10, [X10 + 0xE00]
	0x01DB4618 LDR X1, [X10]
	0x01DB461C CBZ X9, 0x1DB4640
	0x01DB4620 LDR X10, [X8 + 0xB0]
	0x01DB4624 ADD X10, X10, 0x8
	0x01DB4628 LDUR X11, [X10 - 0x8]
	0x01DB462C CMP X11, X1
	0x01DB4630 B.EQ 0x1DB4650
	0x01DB4634 SUBS X9, X9, 0x1
	0x01DB4638 ADD X10, X10, 0x10
	0x01DB463C B.NE 0x1DB4628
	0x01DB4640 MOV X0, X22
	0x01DB4644 MOV W2, W31
	0x01DB4648 BL 0x1C5C788
	0x01DB464C B 0x1DB465C
	0x01DB4650 LDRSW X9, [X10]
	0x01DB4654 ADD X8, X8, X9, 0x4, LSL
	0x01DB4658 ADD X0, X8, 0x138
	0x01DB465C LDP X8, X1, [X0]
	0x01DB4660 MOV X0, X22
	0x01DB4664 BLR X8
	0x01DB4668 CBNZ X20, 0x1DB470C
	0x01DB466C ADRP X8, 0x2341000
	0x01DB4670 ADRP X9, 0x2343000
	0x01DB4674 LDR X8, [X8 + 0x3A0]
	0x01DB4678 LDR X9, [X9 + 0xBB8]
	0x01DB467C MOV X1, X21
	0x01DB4680 LDR X0, [X8]
	0x01DB4684 LDR X2, [X9]
	0x01DB4688 BL 0x226B6E8
	0x01DB468C MOV X1, X0
	0x01DB4690 LDR X0, [X31 + 0x10]
	0x01DB4694 BL 0x1DB1CEC
	0x01DB4698 LDP X20, X19, [X31 + 0xA0]
	0x01DB469C LDP X22, X21, [X31 + 0x90]
	0x01DB46A0 LDP X24, X23, [X31 + 0x80]
	0x01DB46A4 LDP X26, X25, [X31 + 0x70]
	0x01DB46A8 LDP X28, X27, [X31 + 0x60]
	0x01DB46AC LDP X29, X30, [X31 + 0x50]
	0x01DB46B0 ADD X31, X31, 0xB0
	0x01DB46B4 RET
	0x01DB46B8 STR X1, [X31 + 0x8]
	0x01DB46BC MOV X20, X0
	0x01DB46C0 MOV X23, X31
	0x01DB46C4 ADRP X8, 0x2342000
	0x01DB46C8 LDR X8, [X8 + 0x890]
	0x01DB46CC LDR X1, [X8]
	0x01DB46D0 ADD X0, X31, 0x30
	0x01DB46D4 BL 0x2BF5F48
	0x01DB46D8 LDR X1, [X31 + 0x8]
	0x01DB46DC MOV X0, X20
	0x01DB46E0 CBZ X23, 0x1DB474C
	0x01DB46E4 MOV X0, X23
	0x01DB46E8 BL 0x1C16F18
	0x01DB46EC MOV X0, X23
	0x01DB46F0 BL 0x1C16F18
	0x01DB46F4 BL 0x1C16F20
	0x01DB46F8 BL 0x1C16F20
	0x01DB46FC BL 0x1C16F20
	0x01DB4700 BL 0x1C16F20
	0x01DB4704 BL 0x1C16F20
	0x01DB4708 BL 0x1C16F20
	0x01DB470C MOV X0, X20
	0x01DB4710 BL 0x1C16F18
	0x01DB4714 MOV X20, X0
	0x01DB4718 STR X1, [X31 + 0x8]
	0x01DB471C B 0x1DB46C4
	0x01DB4720 B 0x1DB474C
	0x01DB4724 B 0x1DB474C
	0x01DB4728 B 0x1DB474C
	0x01DB472C B 0x1DB474C
	0x01DB4730 B 0x1DB474C
	0x01DB4734 B 0x1DB474C
	0x01DB4738 B 0x1DB474C
	0x01DB473C B 0x1DB474C
	0x01DB4740 B 0x1DB474C
	0x01DB4744 B 0x1DB474C
	0x01DB4748 B 0x1DB474C
	0x01DB474C CMP W1, 0x1
	0x01DB4750 B.NE 0x1DB4764
	0x01DB4754 BL 0x3EB1AD0
	0x01DB4758 LDR X20, [X0]
	0x01DB475C BL 0x3EB1AE0
	0x01DB4760 B 0x1DB4604
	0x01DB4764 MOV X19, X0
	0x01DB4768 MOV X20, X31
	0x01DB476C B 0x1DB4774
	0x01DB4770 MOV X19, X0
	0x01DB4774 CBZ X22, 0x1DB47D8
	0x01DB4778 LDR X8, [X22]
	0x01DB477C ADRP X10, 0x233F000
	0x01DB4780 LDRH W9, [X8 + 0x12E]
	0x01DB4784 LDR X10, [X10 + 0xE00]
	0x01DB4788 LDR X1, [X10]
	0x01DB478C CBZ X9, 0x1DB47B0
	0x01DB4790 LDR X10, [X8 + 0xB0]
	0x01DB4794 ADD X10, X10, 0x8
	0x01DB4798 LDUR X11, [X10 - 0x8]
	0x01DB479C CMP X11, X1
	0x01DB47A0 B.EQ 0x1DB47C0
	0x01DB47A4 SUBS X9, X9, 0x1
	0x01DB47A8 ADD X10, X10, 0x10
	0x01DB47AC B.NE 0x1DB4798
	0x01DB47B0 MOV X0, X22
	0x01DB47B4 MOV W2, W31
	0x01DB47B8 BL 0x1C5C788
	0x01DB47BC B 0x1DB47CC
	0x01DB47C0 LDRSW X9, [X10]
	0x01DB47C4 ADD X8, X8, X9, 0x4, LSL
	0x01DB47C8 ADD X0, X8, 0x138
	0x01DB47CC LDP X8, X1, [X0]
	0x01DB47D0 MOV X0, X22
	0x01DB47D4 BLR X8
	0x01DB47D8 CBNZ X20, 0x1DB47E4
	0x01DB47DC MOV X0, X19
	0x01DB47E0 BL 0x1D2C690
	0x01DB47E4 MOV X0, X20
	0x01DB47E8 BL 0x1C16F18
	0x01DB47EC BL 0x1990590
	0x01DB47F0 B 0x1DB47F4
	0x01DB47F4 STR X30, [X31 - 0x20]!
	0x01DB47F8 STP X20, X19, [X31 + 0x10]
	0x01DB47FC ADRP X20, 0x2624000
	0x01DB4800 LDRB W8, [X20 + 0xB0D]
	0x01DB4804 MOV X19, X0
	0x01DB4808 TBNZ X8, 0x0, 0x1DB482C
	0x01DB480C ADRP X0, 0x233F000
	0x01DB4810 LDR X0, [X0 + 0xA28]
	0x01DB4814 BL 0x1C16CF4
	0x01DB4818 ADRP X0, 0x2343000
	0x01DB481C LDR X0, [X0 + 0xBD0]
	0x01DB4820 BL 0x1C16CF4
	0x01DB4824 MOVZ W8, 0x1
	0x01DB4828 STRB W8, [X20 + 0xB0D]
	0x01DB482C MOV X0, X19
	0x01DB4830 BL 0x1DAEC64
	0x01DB4834 TBNZ X0, 0x0, 0x1DB4844
	0x01DB4838 MOV X0, X19
	0x01DB483C BL 0x1DB212C
	0x01DB4840 TBZ X0, 0x0, 0x1DB4880
	0x01DB4844 ADRP X8, 0x233F000
	0x01DB4848 LDR X8, [X8 + 0xA28]
	0x01DB484C ADRP X20, 0x2343000
	0x01DB4850 LDR X0, [X8]
	0x01DB4854 LDR W8, [X0 + 0xE0]
	0x01DB4858 LDR X20, [X20 + 0xBD0]
	0x01DB485C CBNZ W8, 0x1DB4864
	0x01DB4860 BL 0x1C16DFC
	0x01DB4864 LDR X0, [X20]
	0x01DB4868 MOV X1, X31
	0x01DB486C BL 0x3C06048
	0x01DB4870 LDR X0, [X19 + 0x1C8]
	0x01DB4874 CBZ X0, 0x1DB489C
	0x01DB4878 FMOV S0, W31
	0x01DB487C B 0x1DB488C
	0x01DB4880 LDR X0, [X19 + 0x1C8]
	0x01DB4884 CBZ X0, 0x1DB489C
	0x01DB4888 FMOV S0, 1
	0x01DB488C LDP X20, X19, [X31 + 0x10]
	0x01DB4890 MOV X1, X31
	0x01DB4894 LDR X30, [X31], #0x20
	0x01DB4898 B 0x3BFC8DC
	0x01DB489C BL 0x1C16F20
	0x01DB48A0 B 0x1DB47F4
	0x01DB48A4 STR D8, [X31 - 0x30]!
	0x01DB48A8 STR X30, [X31 + 0x8]
	0x01DB48AC STP X22, X21, [X31 + 0x10]
	0x01DB48B0 STP X20, X19, [X31 + 0x20]
	0x01DB48B4 ADRP X22, 0x2624000
	0x01DB48B8 ADRP X21, 0x233F000
	0x01DB48BC LDRB W8, [X22 + 0xB05]
	0x01DB48C0 LDR X21, [X21 + 0x598]
	0x01DB48C4 MOV X20, X2
	0x01DB48C8 MOV W19, W1
	0x01DB48CC TBNZ X8, 0x0, 0x1DB48FC
	0x01DB48D0 ADRP X0, 0x233F000
	0x01DB48D4 LDR X0, [X0 + 0x598]
	0x01DB48D8 BL 0x1C16CF4
	0x01DB48DC ADRP X0, 0x2341000
	0x01DB48E0 LDR X0, [X0 + 0x7C8]
	0x01DB48E4 BL 0x1C16CF4
	0x01DB48E8 ADRP X0, 0x2342000
	0x01DB48EC LDR X0, [X0 + 0xD70]
	0x01DB48F0 BL 0x1C16CF4
	0x01DB48F4 MOVZ W8, 0x1
	0x01DB48F8 STRB W8, [X22 + 0xB05]
	0x01DB48FC LDR X0, [X21]
	0x01DB4900 LDR W8, [X0 + 0xE0]
	0x01DB4904 CBNZ W8, 0x1DB490C
	0x01DB4908 BL 0x1C16DFC
	0x01DB490C MOV X0, X20
	0x01DB4910 MOV X1, X31
	0x01DB4914 MOV X2, X31
	0x01DB4918 BL 0x3C3883C
	0x01DB491C FMOV S8, W31
	0x01DB4920 TBNZ X0, 0x0, 0x1DB493C
	0x01DB4924 CBZ X20, 0x1DB4A30
	0x01DB4928 LDR X0, [X20 + 0x168]
	0x01DB492C CBZ X0, 0x1DB4A30
	0x01DB4930 MOV X1, X31
	0x01DB4934 BL 0x3C8EBE8
	0x01DB4938 MOV V8.16B, V0.16B
	0x01DB493C CMP W19, 0x2
	0x01DB4940 B.NE 0x1DB4950
	0x01DB4944 FMOV S0, 0.5
	0x01DB4948 FMUL S8, S8, S0
	0x01DB494C B 0x1DB49A4
	0x01DB4950 LDR X0, [X21]
	0x01DB4954 LDR W8, [X0 + 0xE0]
	0x01DB4958 CBNZ W8, 0x1DB4960
	0x01DB495C BL 0x1C16DFC
	0x01DB4960 MOV X0, X20
	0x01DB4964 MOV X1, X31
	0x01DB4968 MOV X2, X31
	0x01DB496C BL 0x3C354F8
	0x01DB4970 TBZ X0, 0x0, 0x1DB49A4
	0x01DB4974 CBZ X20, 0x1DB4A30
	0x01DB4978 MOV X0, X20
	0x01DB497C MOV X1, X31
	0x01DB4980 BL 0x3C33374
	0x01DB4984 ADRP X8, 0x2342000
	0x01DB4988 LDR X8, [X8 + 0xD70]
	0x01DB498C MOV X2, X31
	0x01DB4990 LDR X1, [X8]
	0x01DB4994 BL 0x321BA08
	0x01DB4998 FADD S0, S8, S8
	0x01DB499C ANDS W31, W0, 0x1
	0x01DB49A0 FCSEL S8, S0, S8, NE
	0x01DB49A4 ADRP X20, 0x2341000
	0x01DB49A8 LDR X20, [X20 + 0x7C8]
	0x01DB49AC LDR X0, [X20]
	0x01DB49B0 LDR W8, [X0 + 0xE0]
	0x01DB49B4 CBNZ W8, 0x1DB49BC
	0x01DB49B8 BL 0x1C16DFC
	0x01DB49BC ADRP X21, 0x2624000
	0x01DB49C0 LDRB W8, [X21 + 0x85D]
	0x01DB49C4 CBNZ W8, 0x1DB49DC
	0x01DB49C8 ADRP X0, 0x2341000
	0x01DB49CC LDR X0, [X0 + 0x7C8]
	0x01DB49D0 BL 0x1C16CF4
	0x01DB49D4 MOVZ W8, 0x1
	0x01DB49D8 STRB W8, [X21 + 0x85D]
	0x01DB49DC LDR X0, [X20]
	0x01DB49E0 LDR W8, [X0 + 0xE0]
	0x01DB49E4 CBNZ W8, 0x1DB49F0
	0x01DB49E8 BL 0x1C16DFC
	0x01DB49EC LDR X0, [X20]
	0x01DB49F0 LDR X8, [X0 + 0xB8]
	0x01DB49F4 LDR X0, [X8]
	0x01DB49F8 CBZ X0, 0x1DB4A1C
	0x01DB49FC MOV W1, W19
	0x01DB4A00 LDP X20, X19, [X31 + 0x20]
	0x01DB4A04 LDP X22, X21, [X31 + 0x10]
	0x01DB4A08 LDR X30, [X31 + 0x8]
	0x01DB4A0C MOV V0.16B, V8.16B
	0x01DB4A10 MOV X2, X31
	0x01DB4A14 LDR V8, [X31], #0x30
	0x01DB4A18 B 0x1DC2DC8
	0x01DB4A1C LDP X20, X19, [X31 + 0x20]
	0x01DB4A20 LDP X22, X21, [X31 + 0x10]
	0x01DB4A24 LDR X30, [X31 + 0x8]
	0x01DB4A28 LDR V8, [X31], #0x30
	0x01DB4A2C RET
	0x01DB4A30 BL 0x1C16F20
	0x01DB4A34 STR D10, [X31 - 0x40]!
	0x01DB4A38 STP D9, D8, [X31 + 0x8]
	0x01DB4A3C STR X30, [X31 + 0x18]
	0x01DB4A40 STP X22, X21, [X31 + 0x20]
	0x01DB4A44 STP X20, X19, [X31 + 0x30]
	0x01DB4A48 ADRP X21, 0x2624000
	0x01DB4A4C LDRB W8, [X21 + 0xB06]
	0x01DB4A50 MOV V8.16B, V2.16B
	0x01DB4A54 MOV V9.16B, V1.16B
	0x01DB4A58 MOV V10.16B, V0.16B
	0x01DB4A5C MOV X19, X2
	0x01DB4A60 MOV W20, W1
	0x01DB4A64 TBNZ X8, 0x0, 0x1DB4A7C
	0x01DB4A68 ADRP X0, 0x2341000
	0x01DB4A6C LDR X0, [X0 + 0x7C8]
	0x01DB4A70 BL 0x1C16CF4
	0x01DB4A74 MOVZ W8, 0x1
	0x01DB4A78 STRB W8, [X21 + 0xB06]
	0x01DB4A7C CMP W20, 0x1
	0x01DB4A80 B.HI 0x1DB4B14
	0x01DB4A84 ADRP X21, 0x2341000
	0x01DB4A88 LDR X21, [X21 + 0x7C8]
	0x01DB4A8C CMP W20, 0x0
	0x01DB4A90 CSET W20, NE
	0x01DB4A94 LDR X0, [X21]
	0x01DB4A98 LDR W8, [X0 + 0xE0]
	0x01DB4A9C CBNZ W8, 0x1DB4AA4
	0x01DB4AA0 BL 0x1C16DFC
	0x01DB4AA4 ADRP X22, 0x2624000
	0x01DB4AA8 LDRB W8, [X22 + 0x85D]
	0x01DB4AAC CBNZ W8, 0x1DB4AC4
	0x01DB4AB0 ADRP X0, 0x2341000
	0x01DB4AB4 LDR X0, [X0 + 0x7C8]
	0x01DB4AB8 BL 0x1C16CF4
	0x01DB4ABC MOVZ W8, 0x1
	0x01DB4AC0 STRB W8, [X22 + 0x85D]
	0x01DB4AC4 LDR X0, [X21]
	0x01DB4AC8 LDR W8, [X0 + 0xE0]
	0x01DB4ACC CBNZ W8, 0x1DB4AD8
	0x01DB4AD0 BL 0x1C16DFC
	0x01DB4AD4 LDR X0, [X21]
	0x01DB4AD8 LDR X8, [X0 + 0xB8]
	0x01DB4ADC LDR X0, [X8]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X23, 0x2625000
	012 Move X22, 0x2342000
	013 Move W8, [X23+2816]
	014 Move X22, [X22+2464]
	015 Move W21, W2
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {81}
	022 Move X0, 0x2340000
	023 Move X0, [X0+3368]
	024 Call 0x1C17CF4
	025 Move X0, 0x2344000
	026 Move X0, [X0+2808]
	027 Call 0x1C17CF4
	028 Move X0, 0x2344000
	029 Move X0, [X0+2816]
	030 Call 0x1C17CF4
	031 Move X0, 0x2344000
	032 Move X0, [X0+2832]
	033 Call 0x1C17CF4
	034 Move X0, 0x2340000
	035 Move X0, [X0+1608]
	036 Call 0x1C17CF4
	037 Move X0, 0x2344000
	038 Move X0, [X0+2944]
	039 Call 0x1C17CF4
	040 Move X0, 0x2344000
	041 Move X0, [X0+2752]
	042 Call 0x1C17CF4
	043 Move X0, 0x2344000
	044 Move X0, [X0+2864]
	045 Call 0x1C17CF4
	046 Move X0, 0x2344000
	047 Move X0, [X0+2760]
	048 Call 0x1C17CF4
	049 Move X0, 0x2344000
	050 Move X0, [X0+2768]
	051 Call 0x1C17CF4
	052 Move X0, 0x2344000
	053 Move X0, [X0+2880]
	054 Call 0x1C17CF4
	055 Move X0, 0x2344000
	056 Move X0, [X0+2776]
	057 Call 0x1C17CF4
	058 Move X0, 0x2344000
	059 Move X0, [X0+2888]
	060 Call 0x1C17CF4
	061 Move X0, 0x2344000
	062 Move X0, [X0+2784]
	063 Call 0x1C17CF4
	064 Move X0, 0x2344000
	065 Move X0, [X0+2896]
	066 Call 0x1C17CF4
	067 Move X0, 0x2344000
	068 Move X0, [X0+2792]
	069 Call 0x1C17CF4
	070 Move X0, 0x2342000
	071 Move X0, [X0+2464]
	072 Call 0x1C17CF4
	073 Move X0, 0x2340000
	074 Move X0, [X0+3488]
	075 Call 0x1C17CF4
	076 Move X0, 0x2342000
	077 Move X0, [X0+1992]
	078 Call 0x1C17CF4
	079 Move W8, 1
	080 Move [X23+2816], W8
	081 And W2, W21, 1
	082 Move X0, X19
	083 Move X1, X20
	084 Move X3, X31
	085 Call NetworkBehaviour.Despawned, X0, X1, X2
	086 Move X0, [X22]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {92}
	090 Call 0x1C17DFC
	091 Move X0, [X22]
	092 Move X8, [X19+64]
	093 Compare X8, 0
	094 JumpIfEqual {395}
	095 Move X9, [X0+184]
	096 Move X8, [X8+32]
	097 Move X0, [X9]
	098 Compare X8, 0
	099 JumpIfEqual {103}
	100 Move W1, [X8]
	101 Compare X0, 0
	102 JumpIfNotEqual {106}
	103 Move W1, W31
	104 Compare X0, 0
	105 JumpIfEqual {395}
	106 Move X8, 0x2344000
	107 Move X8, [X8+2944]
	108 Move X22, 0x2342000
	109 Move X23, 0x2344000
	110 Move X21, 0x2344000
	111 Move X2, [X8]
	112 Move X22, [X22+1992]
	113 Move X23, [X23+2832]
	114 Move X21, [X21+2864]
	115 Call Dictionary`2<UInt32, Object>.Remove, X0, X1
	116 Move X0, [X22]
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {122}
	120 Call 0x1C17DFC
	121 Move X0, [X22]
	122 Move X8, [X0+184]
	123 Move X0, [X23]
	124 Move X20, [X8+24]
	125 Call 0x1C17F10
	126 Move X2, [X21]
	127 Move X1, X19
	128 Move X3, X31
	129 Move X21, X0
	130 Call Action`3<Int32Enum, Object, Single>..ctor, X0, X1, X2
	131 Move X0, X20
	132 Move X1, X21
	133 Move X2, X31
	134 Call Delegate.Remove, X0, X1
	135 Compare X0, 0
	136 JumpIfEqual {154}
	137 Move X21, [X23]
	138 Move X20, X0
	139 Move X1, X21
	140 Call 0x1C17E00
	141 Compare X0, 0
	142 JumpIfEqual {266}
	143 Move X8, [X22]
	144 Move X8, [X8+184]
	145 Move [X8+24], X0
	146 Move X21, [X23]
	147 Move X0, X20
	148 Move X1, X21
	149 Call 0x1C17E00
	150 Compare X0, 0
	151 JumpIfEqual {266}
	152 Move X8, [X22]
	153 Move X8, [X8+184]
	154 Move X8, [X22]
	155 Move X8, [X8+184]
	156 Move [X8+24], X31
	157 Move X23, 0x2340000
	158 Move X23, [X23+3368]
	159 Move X21, 0x2344000
	160 Move X20, [X8+32]
	161 Move X0, [X23]
	162 Move X21, [X21+2896]
	163 Call 0x1C17F10
	164 Move X2, [X21]
	165 Move X1, X19
	166 Move X3, X31
	167 Move X21, X0
	168 Call Action`1<Boolean>..ctor, X0, X1, X2
	169 Move X0, X20
	170 Move X1, X21
	171 Move X2, X31
	172 Call Delegate.Remove, X0, X1
	173 Compare X0, 0
	174 JumpIfEqual {192}
	175 Move X21, [X23]
	176 Move X20, X0
	177 Move X1, X21
	178 Call 0x1C17E00
	179 Compare X0, 0
	180 JumpIfEqual {266}
	181 Move X8, [X22]
	182 Move X8, [X8+184]
	183 Move [X8+32], X0
	184 Move X21, [X23]
	185 Move X0, X20
	186 Move X1, X21
	187 Call 0x1C17E00
	188 Compare X0, 0
	189 JumpIfEqual {266}
	190 Move X8, [X22]
	191 Move X8, [X8+184]
	192 Move X8, [X22]
	193 Move X8, [X8+184]
	194 Move [X8+32], X31
	195 Move X23, 0x2344000
	196 Move X23, [X23+2816]
	197 Move X21, 0x2344000
	198 Move X20, [X8+64]
	199 Move X0, [X23]
	200 Move X21, [X21+2880]
	201 Call 0x1C17F10
	202 Move X2, [X21]
	203 Move X1, X19
	204 Move X3, X31
	205 Move X21, X0
	206 Call Action`1<Int32>..ctor, X0, X1, X2
	207 Move X0, X20
	208 Move X1, X21
	209 Move X2, X31
	210 Call Delegate.Remove, X0, X1
	211 Compare X0, 0
	212 JumpIfEqual {230}
	213 Move X21, [X23]
	214 Move X20, X0
	215 Move X1, X21
	216 Call 0x1C17E00
	217 Compare X0, 0
	218 JumpIfEqual {266}
	219 Move X8, [X22]
	220 Move X8, [X8+184]
	221 Move [X8+64], X0
	222 Move X21, [X23]
	223 Move X0, X20
	224 Move X1, X21
	225 Call 0x1C17E00
	226 Compare X0, 0
	227 JumpIfEqual {266}
	228 Move X8, [X22]
	229 Move X8, [X8+184]
	230 Move X8, [X22]
	231 Move X8, [X8+184]
	232 Move [X8+64], X31
	233 Move X23, 0x2344000
	234 Move X23, [X23+2808]
	235 Move X21, 0x2344000
	236 Move X20, [X8+72]
	237 Move X0, [X23]
	238 Move X21, [X21+2888]
	239 Call 0x1C17F10
	240 Move X2, [X21]
	241 Move X1, X19
	242 Move X3, X31
	243 Move X21, X0
	244 Call Action`1<Object>..ctor, X0, X1, X2
	245 Move X0, X20
	246 Move X1, X21
	247 Move X2, X31
	248 Call Delegate.Remove, X0, X1
	249 Compare X0, 0
	250 JumpIfEqual {269}
	251 Move X21, [X23]
	252 Move X20, X0
	253 Move X1, X21
	254 Call 0x1C17E00
	255 Compare X0, 0
	256 JumpIfEqual {266}
	257 Move X8, [X22]
	258 Move X8, [X8+184]
	259 Move [X8+72], X0
	260 Move X21, [X23]
	261 Move X0, X20
	262 Move X1, X21
	263 Call 0x1C17E00
	264 Compare X0, 0
	265 JumpIfNotEqual {272}
	266 Move X0, X20
	267 Move X1, X21
	268 Call 0x1C181E0
	269 Move X8, [X22]
	270 Move X8, [X8+184]
	271 Move [X8+72], X31
	272 Move X0, [X19+472]
	273 Compare X0, 0
	274 JumpIfEqual {395}
	275 Move X1, X31
	276 Call CommandHandle.get_hasFinalized, X0
	277 Move TEMP, X0
	278 And TEMP, TEMP, 1
	279 Compare TEMP, 1
	280 JumpIfEqual {286}
	281 Move X0, [X19+472]
	282 Compare X0, 0
	283 JumpIfEqual {395}
	284 Move X1, X31
	285 Call CommandHandle.Cancel, X0
	286 Move X21, 0x2340000
	287 Move X21, [X21+3488]
	288 Move X20, 0x2344000
	289 Move X27, 0x2340000
	290 Move X26, 0x2344000
	291 Move X25, 0x2344000
	292 Move X20, [X20+2776]
	293 Move X27, [X27+1608]
	294 Move X26, [X26+2792]
	295 Move X25, [X25+2760]
	296 Move X0, [X21]
	297 Move X24, 0x2344000
	298 Move X23, 0x2344000
	299 Move X22, 0x2344000
	300 Move X24, [X24+2784]
	301 Move X23, [X23+2752]
	302 Move X22, [X22+2768]
	303 Call 0x1C17F10
	304 Move X2, [X20]
	305 Move X1, X19
	306 Move X3, X31
	307 Move X20, X0
	308 Call ObserverDelegate..ctor, X0, X1, X2
	309 Move X0, [X27]
	310 Move W8, [X0+224]
	311 Compare W8, 0
	312 JumpIfNotEqual {314}
	313 Call 0x1C17DFC
	314 Move X0, X20
	315 Move X1, X31
	316 Call App.DeregisterObserver, X0
	317 Move X0, [X21]
	318 Call 0x1C17F10
	319 Move X2, [X26]
	320 Move X1, X19
	321 Move X3, X31
	322 Move X20, X0
	323 Call ObserverDelegate..ctor, X0, X1, X2
	324 Move X0, X20
	325 Move X1, X31
	326 Call App.DeregisterObserver, X0
	327 Move X0, [X21]
	328 Call 0x1C17F10
	329 Move X2, [X25]
	330 Move X1, X19
	331 Move X3, X31
	332 Move X20, X0
	333 Call ObserverDelegate..ctor, X0, X1, X2
	334 Move X0, X20
	335 Move X1, X31
	336 Call App.DeregisterObserver, X0
	337 Move X0, [X21]
	338 Call 0x1C17F10
	339 Move X2, [X24]
	340 Move X1, X19
	341 Move X3, X31
	342 Move X20, X0
	343 Call ObserverDelegate..ctor, X0, X1, X2
	344 Move X0, X20
	345 Move X1, X31
	346 Call App.DeregisterObserver, X0
	347 Move X0, [X21]
	348 Call 0x1C17F10
	349 Move X2, [X23]
	350 Move X1, X19
	351 Move X3, X31
	352 Move X20, X0
	353 Call ObserverDelegate..ctor, X0, X1, X2
	354 Move X0, X20
	355 Move X1, X31
	356 Call App.DeregisterObserver, X0
	357 Move X0, [X21]
	358 Call 0x1C17F10
	359 Move X2, [X22]
	360 Move X1, X19
	361 Move X3, X31
	362 Move X20, X0
	363 Call ObserverDelegate..ctor, X0, X1, X2
	364 Move X0, X20
	365 Move X1, X31
	366 Call App.DeregisterObserver, X0
	367 Move X1, [X19+392]
	368 Compare X1, 0
	369 JumpIfEqual {384}
	370 Move X0, X19
	371 Move X20, [X31+64]
	372 Move X19, [X31+72]
	373 Move X22, [X31+48]
	374 Move X21, [X31+56]
	375 Move X24, [X31+32]
	376 Move X23, [X31+40]
	377 Move X26, [X31+16]
	378 Move X25, [X31+24]
	379 Move X2, X31
	380 Move X30, [X31+80]
	381 Move X27, [X31+88]
	382 Call MonoBehaviour.StopCoroutine, X0, X1
	383 Return 
	384 Move X20, [X31+64]
	385 Move X19, [X31+72]
	386 Move X22, [X31+48]
	387 Move X21, [X31+56]
	388 Move X24, [X31+32]
	389 Move X23, [X31+40]
	390 Move X26, [X31+16]
	391 Move X25, [X31+24]
	392 Move X30, [X31+80]
	393 Move X27, [X31+88]
	394 Return 
	395 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerator`1<SpatialSys.CommandLib.Command> GetUserIDAndRegister()

Disassembly:
	0x01DB4AE0 CBZ X0, 0x1DB4B14
	0x01DB4AE4 MOV X1, X19
	0x01DB4AE8 MOV V1.16B, V9.16B
	0x01DB4AEC MOV V2.16B, V8.16B
	0x01DB4AF0 MOV W2, W20
	0x01DB4AF4 LDP X20, X19, [X31 + 0x30]
	0x01DB4AF8 LDP X22, X21, [X31 + 0x20]
	0x01DB4AFC LDR X30, [X31 + 0x18]
	0x01DB4B00 LDP D9, D8, [X31 + 0x8]
	0x01DB4B04 MOV V0.16B, V10.16B
	0x01DB4B08 MOV X3, X31
	0x01DB4B0C LDR V10, [X31], #0x40
	0x01DB4B10 B 0x1DC3614
	0x01DB4B14 LDP X20, X19, [X31 + 0x30]
	0x01DB4B18 LDP X22, X21, [X31 + 0x20]
	0x01DB4B1C LDR X30, [X31 + 0x18]
	0x01DB4B20 LDP D9, D8, [X31 + 0x8]
	0x01DB4B24 LDR V10, [X31], #0x40
	0x01DB4B28 RET
	0x01DB4B2C STR X30, [X31 - 0x10]!
	0x01DB4B30 CBZ W1, 0x1DB4B48
	0x01DB4B34 LDR X0, [X0 + 0x100]
	0x01DB4B38 CBZ X0, 0x1DB4B50
	0x01DB4B3C MOV X1, X2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2625000
	006 Move X21, 0x2344000
	007 Move W8, [X20+2817]
	008 Move X21, [X21+2952]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2344000
	015 Move X0, [X0+2952]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2817], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move [X20+16], W31
	025 Move [X20+32], X19
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Void HandleLocalAvatarChanged(SpatialSys.ObservableState.StateChangedEventArgs args)

Disassembly:
	0x01DB4B68 AND W21, W2, 0x1
	0x01DB4B6C BL 0x1D36B98
	0x01DB4B70 STR W19, [X20 + 0x14]
	0x01DB4B74 STRB W21, [X20 + 0x18]
	0x01DB4B78 LDP X20, X19, [X31 + 0x10]
	0x01DB4B7C LDP X30, X21, [X31], #0x20
	0x01DB4B80 RET
	0x01DB4B84 STP X30, X19, [X31 - 0x10]!
	0x01DB4B88 AND W1, W1, 0x1
	0x01DB4B8C MOV X19, X0
	0x01DB4B90 BL 0x1DB4BC0
	0x01DB4B94 LDR X0, [X19 + 0x40]
	0x01DB4B98 CBZ X0, 0x1DB4BBC
	0x01DB4B9C MOV X1, X31
	0x01DB4BA0 BL 0x1E93588
	0x01DB4BA4 TBZ X0, 0x0, 0x1DB4BB4
	0x01DB4BA8 MOV X0, X19
	0x01DB4BAC LDP X30, X19, [X31], #0x10
	0x01DB4BB0 B 0x1DB4D50
	0x01DB4BB4 LDP X30, X19, [X31], #0x10
	0x01DB4BB8 RET
	0x01DB4BBC BL 0x1C16F20
	0x01DB4BC0 STP X30, X21, [X31 - 0x20]!
	0x01DB4BC4 STP X20, X19, [X31 + 0x10]
	0x01DB4BC8 ADRP X21, 0x2624000
	0x01DB4BCC LDRB W8, [X21 + 0xB09]
	0x01DB4BD0 MOV W20, W1
	0x01DB4BD4 MOV X19, X0
	0x01DB4BD8 TBNZ X8, 0x0, 0x1DB4BFC
	0x01DB4BDC ADRP X0, 0x2342000
	0x01DB4BE0 LDR X0, [X0 + 0xA78]
	0x01DB4BE4 BL 0x1C16CF4
	0x01DB4BE8 ADRP X0, 0x2343000
	0x01DB4BEC LDR X0, [X0 + 0xBD8]
	0x01DB4BF0 BL 0x1C16CF4
	0x01DB4BF4 MOVZ W8, 0x1
	0x01DB4BF8 STRB W8, [X21 + 0xB09]
	0x01DB4BFC LDRB W8, [X19 + 0x58]
	0x01DB4C00 CBZ W8, 0x1DB4C1C
	0x01DB4C04 STRB W31, [X19 + 0x58]
	0x01DB4C08 AND W1, W20, 0x1
	0x01DB4C0C MOV X0, X19
	0x01DB4C10 LDP X20, X19, [X31 + 0x10]
	0x01DB4C14 LDP X30, X21, [X31], #0x20
	0x01DB4C18 B 0x1DB18BC
	0x01DB4C1C ADRP X21, 0x2342000
	0x01DB4C20 LDR X21, [X21 + 0xA78]
	0x01DB4C24 LDR X0, [X21]
	0x01DB4C28 LDR W8, [X0 + 0xE0]
	0x01DB4C2C CBNZ W8, 0x1DB4C34
	0x01DB4C30 BL 0x1C16DFC
	0x01DB4C34 MOV X0, X19
	0x01DB4C38 MOV X1, X31
	0x01DB4C3C BL 0x1E77B08
	0x01DB4C40 LDR X0, [X19 + 0x38]
	0x01DB4C44 CBZ X0, 0x1DB4D4C
	0x01DB4C48 MOV X1, X31
	0x01DB4C4C BL 0x1E9E538
	0x01DB4C50 CMP W0, 0x4
	0x01DB4C54 B.NE 0x1DB4C64
	0x01DB4C58 LDP X20, X19, [X31 + 0x10]
	0x01DB4C5C LDP X30, X21, [X31], #0x20
	0x01DB4C60 RET
	0x01DB4C64 LDR X0, [X19 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2625000
	007 Move X21, 0x2340000
	008 Move W8, [X22+2818]
	009 Move X21, [X21+1608]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x2340000
	017 Move X0, [X0+1608]
	018 Call 0x1C17CF4
	019 Move X0, 0x2342000
	020 Move X0, [X0+2008]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2818], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X22, 0x2625000
	030 Move W8, [X22+1927]
	031 Compare W8, 0
	032 JumpIfNotEqual {38}
	033 Move X0, 0x2340000
	034 Move X0, [X0+1608]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X22+1927], W8
	038 Move X0, [X21]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X21]
	044 Move X8, [X0+184]
	045 Move X8, [X8]
	046 Compare X8, 0
	047 JumpIfEqual {77}
	048 Move X8, [X8+184]
	049 Compare X8, 0
	050 JumpIfEqual {77}
	051 Move X8, [X8+112]
	052 Compare X8, 0
	053 JumpIfEqual {77}
	054 Move X9, 0x2342000
	055 Move X9, [X9+2008]
	056 Move X0, [X8+80]
	057 Move X1, [X9]
	058 Call StatePrimitive`1<Color>.op_Implicit, X0
	059 And W31, W20, 255
	060 Move [X19+424], S0
	061 Move [X19+428], S1
	062 Move [X19+432], S2
	063 Move [X19+436], S3
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 Return 
	070 Move X1, [X19+408]
	071 Move X0, X19
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 Call 0x1C17F20

Method: System.Void HandleRemoteAvatarChanged(SpatialSys.ObservableState.StateChangedEventArgs args)

Disassembly:
	0x01DB4E90 ADRP X8, 0x2343000
	0x01DB4E94 LDR X8, [X8 + 0xBE0]
	0x01DB4E98 MOV X0, X19
	0x01DB4E9C LDP X20, X19, [X31 + 0x10]
	0x01DB4EA0 LDR X1, [X8]
	0x01DB4EA4 LDP X30, X21, [X31], #0x20
	0x01DB4EA8 B 0x1DB19EC
	0x01DB4EAC LDP X20, X19, [X31 + 0x10]
	0x01DB4EB0 LDP X30, X21, [X31], #0x20
	0x01DB4EB4 RET
	0x01DB4EB8 BL 0x1C16F20
	0x01DB4EBC STR X30, [X31 - 0x20]!
	0x01DB4EC0 STP X20, X19, [X31 + 0x10]
	0x01DB4EC4 LDR X19, [X0 + 0xE8]
	0x01DB4EC8 CBZ X19, 0x1DB4F18
	0x01DB4ECC LDR W8, [X19 + 0x18]
	0x01DB4ED0 CMP W8, 0x1
	0x01DB4ED4 B.LT 0x1DB4F08
	0x01DB4ED8 MOV W20, W31
	0x01DB4EDC CMP W20, W8
	0x01DB4EE0 B.CS 0x1DB4F14
	0x01DB4EE4 ADD X8, X19, W20, 0x3, SXTW
	0x01DB4EE8 LDR X0, [X8 + 0x20]
	0x01DB4EEC CBZ X0, 0x1DB4F18
	0x01DB4EF0 MOV X1, X31
	0x01DB4EF4 BL 0x1D8A248
	0x01DB4EF8 LDR W8, [X19 + 0x18]
	0x01DB4EFC ADD W20, W20, 0x1
	0x01DB4F00 CMP W20, W8
	0x01DB4F04 B.LT 0x1DB4EDC
	0x01DB4F08 LDP X20, X19, [X31 + 0x10]
	0x01DB4F0C LDR X30, [X31], #0x20
	0x01DB4F10 RET
	0x01DB4F14 BL 0x1C16F28
	0x01DB4F18 BL 0x1C16F20
	0x01DB4F1C STR X30, [X31 - 0x10]!
	0x01DB4F20 LDR X8, [X0 + 0xE8]
	0x01DB4F24 CBZ X8, 0x1DB4F50
	0x01DB4F28 LDR W9, [X8 + 0x18]
	0x01DB4F2C CMP W9, W1
	0x01DB4F30 B.LS 0x1DB4F54
	0x01DB4F34 ADD X8, X8, W1, 0x3, SXTW
	0x01DB4F38 LDR X0, [X8 + 0x20]
	0x01DB4F3C CBZ X0, 0x1DB4F50
	0x01DB4F40 MOVZ W1, 0x1
	0x01DB4F44 MOV X2, X31
	0x01DB4F48 LDR X30, [X31], #0x10
	0x01DB4F4C B 0x1D89EE4
	0x01DB4F50 BL 0x1C16F20
	0x01DB4F54 BL 0x1C16F28
	0x01DB4F58 SUB X31, X31, 0x190
	0x01DB4F5C STP X29, X30, [X31 + 0x160]
	0x01DB4F60 STP X22, X21, [X31 + 0x170]
	0x01DB4F64 STP X20, X19, [X31 + 0x180]
	0x01DB4F68 MRS X21, 0xC000
	0x01DB4F6C LDR X8, [X21 + 0x28]
	0x01DB4F70 ADRP X22, 0x2624000
	0x01DB4F74 ADRP X20, 0x2343000
	0x01DB4F78 MOV X19, X0
	0x01DB4F7C STR X8, [X31 + 0x158]
	0x01DB4F80 LDRB W8, [X22 + 0xB0A]
	0x01DB4F84 LDR X20, [X20 + 0xBE8]
	0x01DB4F88 TBNZ X8, 0x0, 0x1DB4FA0
	0x01DB4F8C ADRP X0, 0x2343000
	0x01DB4F90 LDR X0, [X0 + 0xBE8]
	0x01DB4F94 BL 0x1C16CF4
	0x01DB4F98 MOVZ W8, 0x1
	0x01DB4F9C STRB W8, [X22 + 0xB0A]
	0x01DB4FA0 ADD X0, X31, 0xB0
	0x01DB4FA4 MOVZ W2, 0xA8
	0x01DB4FA8 MOV W1, W31
	0x01DB4FAC BL 0x3EB1B10
	0x01DB4FB0 MOV X0, X19
	0x01DB4FB4 MOV X1, X31
	0x01DB4FB8 BL 0x1E73D04
	0x01DB4FBC LDR X2, [X20]
	0x01DB4FC0 ADD X1, X31, 0xB0
	0x01DB4FC4 MOV X0, X19
	0x01DB4FC8 BL 0x222612C
	0x01DB4FCC TBZ X0, 0x0, 0x1DB4FEC
	0x01DB4FD0 ADD X0, X31, 0x8
	0x01DB4FD4 ADD X1, X31, 0xB0
	0x01DB4FD8 MOVZ W2, 0xA8
	0x01DB4FDC BL 0x3EB1AC0
	0x01DB4FE0 ADD X1, X31, 0x8
	0x01DB4FE4 MOV X0, X19
	0x01DB4FE8 BL 0x1DB5064

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2625000
	007 Move W8, [X20+2819]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x2340000
	014 Move X0, [X0+1608]
	015 Call 0x1C17CF4
	016 Move X0, 0x2341000
	017 Move X0, [X0+3128]
	018 Call 0x1C17CF4
	019 Move X0, 0x2341000
	020 Move X0, [X0+2840]
	021 Call 0x1C17CF4
	022 Move X0, 0x2342000
	023 Move X0, [X0+2008]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+2819], W8
	027 Move [X31+8], X31
	028 Move X0, [X19+408]
	029 Move X1, X31
	030 Call String.IsNullOrEmpty, X0
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {103}
	035 Move X20, 0x2340000
	036 Move X20, [X20+1608]
	037 Move X0, [X20]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X21, 0x2625000
	043 Move W8, [X21+1927]
	044 Compare W8, 0
	045 JumpIfNotEqual {51}
	046 Move X0, 0x2340000
	047 Move X0, [X0+1608]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X21+1927], W8
	051 Move X0, [X20]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {57}
	055 Call 0x1C17DFC
	056 Move X0, [X20]
	057 Move X8, [X0+184]
	058 Move X8, [X8]
	059 Compare X8, 0
	060 JumpIfEqual {109}
	061 Move X0, [X8+208]
	062 Compare X0, 0
	063 JumpIfEqual {109}
	064 Move X8, 0x2341000
	065 Move X1, [X19+408]
	066 Move X8, [X8+3128]
	067 Add X2, X31, 8
	068 Move X3, [X8]
	069 Call StateDictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	070 Move X8, [X31+8]
	071 Compare X8, 0
	072 JumpIfEqual {103}
	073 Move X0, [X8+80]
	074 Move X8, 0x2342000
	075 Move X8, [X8+2008]
	076 Move X1, [X8]
	077 Call StatePrimitive`1<Color>.op_Implicit, X0
	078 Move X0, [X19+200]
	079 Move [X19+424], S0
	080 Move [X19+428], S1
	081 Move [X19+432], S2
	082 Move [X19+436], S3
	083 Compare X0, 0
	084 JumpIfEqual {109}
	085 Move X1, [X31+8]
	086 Move X2, X31
	087 Call PlayerView.UpdateAvatar, X0, X1
	088 Move X8, [X31+8]
	089 Compare X8, 0
	090 JumpIfEqual {109}
	091 Move X8, [X8+80]
	092 Compare X8, 0
	093 JumpIfEqual {109}
	094 Move X0, [X19+200]
	095 Compare X0, 0
	096 JumpIfEqual {109}
	097 Move S2, [X8+84]
	098 Move S3, [X8+88]
	099 Move S0, [X8+76]
	100 Move S1, [X8+80]
	101 Move X1, X31
	102 Call PlayerView.SetColor, X0, X1
	103 Move X20, [X31+32]
	104 Move X19, [X31+40]
	105 Move X30, [X31+16]
	106 Move X21, [X31+24]
	107 Add X31, X31, 48
	108 Return 
	109 Call 0x1C17F20

Method: System.Void HandleLocalBlockedPlayersChanged(SpatialSys.ObservableState.StateChangedEventArgs args)

Disassembly:
	0x01DB4FEC LDR X20, [X19 + 0x38]
	0x01DB4FF0 CBZ X20, 0x1DB505C
	0x01DB4FF4 LDR W8, [X20 + 0x188]
	0x01DB4FF8 CMP W8, 0x2
	0x01DB4FFC B.NE 0x1DB5038
	0x01DB5000 MOV X0, X20
	0x01DB5004 MOV X1, X31
	0x01DB5008 BL 0x1E9EA20
	0x01DB500C LDR X8, [X19 + 0x90]
	0x01DB5010 CBZ X8, 0x1DB505C
	0x01DB5014 MOV X19, X0
	0x01DB5018 MOV X0, X8
	0x01DB501C MOV X1, X31
	0x01DB5020 BL 0x3C3F58C
	0x01DB5024 AND X1, X19, 0x0
	0x01DB5028 FMOV S3, 5
	0x01DB502C MOV X0, X20
	0x01DB5030 MOV X2, X31
	0x01DB5034 BL 0x1EA4F44
	0x01DB5038 LDR X8, [X21 + 0x28]
	0x01DB503C LDR X9, [X31 + 0x158]
	0x01DB5040 CMP X8, X9
	0x01DB5044 B.NE 0x1DB5060
	0x01DB5048 LDP X20, X19, [X31 + 0x180]
	0x01DB504C LDP X22, X21, [X31 + 0x170]
	0x01DB5050 LDP X29, X30, [X31 + 0x160]
	0x01DB5054 ADD X31, X31, 0x190
	0x01DB5058 RET
	0x01DB505C BL 0x1C16F20
	0x01DB5060 BL 0x3EB1B20
	0x01DB5064 SUB X31, X31, 0xF0
	0x01DB5068 STR D10, [X31 + 0xB0]
	0x01DB506C STP D9, D8, [X31 + 0xC0]
	0x01DB5070 STP X30, X21, [X31 + 0xD0]
	0x01DB5074 STP X20, X19, [X31 + 0xE0]
	0x01DB5078 MRS X21, 0xC000
	0x01DB507C LDR X8, [X21 + 0x28]
	0x01DB5080 STR X8, [X31 + 0xA8]
	0x01DB5084 LDR X8, [X0 + 0xB0]
	0x01DB5088 CBZ X8, 0x1DB544C
	0x01DB508C MOV X19, X0
	0x01DB5090 LDR X0, [X8 + 0x10]
	0x01DB5094 CBZ X0, 0x1DB544C
	0x01DB5098 MOV X20, X1
	0x01DB509C MOV X1, X31
	0x01DB50A0 BL 0x3C32E90
	0x01DB50A4 ADRP X8, 0xFFFFFFFFFED35000
	0x01DB50A8 LDR V8, [X8 + 0x310]
	0x01DB50AC LDP S0, S1, [X20]
	0x01DB50B0 LDP S2, S3, [X20 + 0x8]
	0x01DB50B4 LDP S4, S5, [X20 + 0x10]
	0x01DB50B8 LDR V6, [X20 + 0x18]
	0x01DB50BC MOVZ W8, 0x3F000000
	0x01DB50C0 MOV X1, X0
	0x01DB50C4 MOV V7.16B, V8.16B
	0x01DB50C8 STR W8, [X31]
	0x01DB50CC BL 0x1DB5570
	0x01DB50D0 LDR X8, [X19 + 0xB0]
	0x01DB50D4 CBZ X8, 0x1DB544C
	0x01DB50D8 LDR X0, [X8 + 0x18]
	0x01DB50DC CBZ X0, 0x1DB544C
	0x01DB50E0 MOV X1, X31
	0x01DB50E4 BL 0x3C32E90
	0x01DB50E8 LDP S0, S1, [X20 + 0x1C]
	0x01DB50EC LDP S2, S3, [X20 + 0x24]
	0x01DB50F0 LDP S4, S5, [X20 + 0x2C]
	0x01DB50F4 LDR V6, [X20 + 0x34]
	0x01DB50F8 MOVZ W8, 0x3F000000
	0x01DB50FC MOV X1, X0
	0x01DB5100 MOV V7.16B, V8.16B
	0x01DB5104 STR W8, [X31]
	0x01DB5108 BL 0x1DB5570
	0x01DB510C LDR X8, [X19 + 0xB0]
	0x01DB5110 CBZ X8, 0x1DB544C
	0x01DB5114 LDR X0, [X8 + 0x20]
	0x01DB5118 CBZ X0, 0x1DB544C
	0x01DB511C MOV X1, X31
	0x01DB5120 BL 0x3C32E90
	0x01DB5124 LDP S0, S1, [X20 + 0x38]
	0x01DB5128 LDP S2, S3, [X20 + 0x40]
	0x01DB512C LDP S4, S5, [X20 + 0x48]
	0x01DB5130 LDR V6, [X20 + 0x50]
	0x01DB5134 MOVZ W8, 0x3F000000
	0x01DB5138 MOV X1, X0
	0x01DB513C MOV V7.16B, V8.16B
	0x01DB5140 STR W8, [X31]
	0x01DB5144 BL 0x1DB5570
	0x01DB5148 LDR X8, [X19 + 0xB0]
	0x01DB514C CBZ X8, 0x1DB544C
	0x01DB5150 LDR X0, [X8 + 0x28]
	0x01DB5154 CBZ X0, 0x1DB544C
	0x01DB5158 MOV X1, X31
	0x01DB515C BL 0x3C32E90
	0x01DB5160 LDP S0, S1, [X20 + 0x54]
	0x01DB5164 LDP S2, S3, [X20 + 0x5C]
	0x01DB5168 LDP S4, S5, [X20 + 0x64]
	0x01DB516C LDR V6, [X20 + 0x6C]
	0x01DB5170 MOVZ W8, 0x3F000000
	0x01DB5174 MOV X1, X0
	0x01DB5178 MOV V7.16B, V8.16B
	0x01DB517C STR W8, [X31]
	0x01DB5180 BL 0x1DB5570
	0x01DB5184 LDR X8, [X19 + 0x38]
	0x01DB5188 CBZ X8, 0x1DB544C
	0x01DB518C LDR X8, [X8 + 0x50]
	0x01DB5190 CBZ X8, 0x1DB51A0
	0x01DB5194 LDRB W8, [X8 + 0x48]
	0x01DB5198 ANDS W31, W8, 0x3
	0x01DB519C B.NE 0x1DB5424
	0x01DB51A0 LDR X8, [X19 + 0xB8]
	0x01DB51A4 CBZ X8, 0x1DB544C
	0x01DB51A8 LDR X0, [X8 + 0x10]
	0x01DB51AC CBZ X0, 0x1DB544C
	0x01DB51B0 MOV X1, X31
	0x01DB51B4 BL 0x3C32E90
	0x01DB51B8 ADRP X8, 0xFFFFFFFFFED35000
	0x01DB51BC LDR V8, [X8 + 0x334]
	0x01DB51C0 LDP S0, S1, [X20]
	0x01DB51C4 LDP S2, S3, [X20 + 0x8]
	0x01DB51C8 LDP S4, S5, [X20 + 0x10]
	0x01DB51CC LDR V6, [X20 + 0x18]
	0x01DB51D0 MOVZ W8, 0x41A00000
	0x01DB51D4 MOV X1, X0
	0x01DB51D8 MOV V7.16B, V8.16B
	0x01DB51DC STR W8, [X31]
	0x01DB51E0 BL 0x1DB5570
	0x01DB51E4 LDR X8, [X19 + 0xB8]
	0x01DB51E8 CBZ X8, 0x1DB544C
	0x01DB51EC LDR X0, [X8 + 0x18]
	0x01DB51F0 CBZ X0, 0x1DB544C
	0x01DB51F4 MOV X1, X31
	0x01DB51F8 BL 0x3C32E90
	0x01DB51FC LDP S0, S1, [X20 + 0x1C]
	0x01DB5200 LDP S2, S3, [X20 + 0x24]
	0x01DB5204 LDP S4, S5, [X20 + 0x2C]
	0x01DB5208 LDR V6, [X20 + 0x34]
	0x01DB520C MOVZ W8, 0x41A00000
	0x01DB5210 MOV X1, X0
	0x01DB5214 MOV V7.16B, V8.16B
	0x01DB5218 STR W8, [X31]
	0x01DB521C BL 0x1DB5570
	0x01DB5220 LDR X8, [X19 + 0xB8]
	0x01DB5224 CBZ X8, 0x1DB544C
	0x01DB5228 LDR X0, [X8 + 0x20]
	0x01DB522C CBZ X0, 0x1DB544C
	0x01DB5230 MOV X1, X31
	0x01DB5234 BL 0x3C32E90
	0x01DB5238 LDP S0, S1, [X20 + 0x38]
	0x01DB523C LDP S2, S3, [X20 + 0x40]
	0x01DB5240 LDP S4, S5, [X20 + 0x48]
	0x01DB5244 LDR V6, [X20 + 0x50]
	0x01DB5248 MOVZ W8, 0x41A00000
	0x01DB524C MOV X1, X0
	0x01DB5250 MOV V7.16B, V8.16B
	0x01DB5254 STR W8, [X31]
	0x01DB5258 BL 0x1DB5570
	0x01DB525C LDR X8, [X19 + 0xB8]
	0x01DB5260 CBZ X8, 0x1DB544C
	0x01DB5264 LDR X0, [X8 + 0x28]
	0x01DB5268 CBZ X0, 0x1DB544C
	0x01DB526C MOV X1, X31
	0x01DB5270 BL 0x3C32E90
	0x01DB5274 LDP S0, S1, [X20 + 0x54]
	0x01DB5278 LDP S2, S3, [X20 + 0x5C]
	0x01DB527C LDP S4, S5, [X20 + 0x64]
	0x01DB5280 LDR V6, [X20 + 0x6C]
	0x01DB5284 MOVZ W8, 0x41A00000
	0x01DB5288 MOV X1, X0
	0x01DB528C MOV V7.16B, V8.16B
	0x01DB5290 STR W8, [X31]
	0x01DB5294 BL 0x1DB5570
	0x01DB5298 LDR X8, [X19 + 0xB8]
	0x01DB529C CBZ X8, 0x1DB544C
	0x01DB52A0 LDR X0, [X8 + 0x18]
	0x01DB52A4 CBZ X0, 0x1DB544C
	0x01DB52A8 MOV X1, X31
	0x01DB52AC BL 0x3C3EB78
	0x01DB52B0 LDR X8, [X19 + 0xB8]
	0x01DB52B4 CBZ X8, 0x1DB544C
	0x01DB52B8 LDR X0, [X8 + 0x18]
	0x01DB52BC CBZ X0, 0x1DB544C
	0x01DB52C0 MOV X1, X31
	0x01DB52C4 MOV V8.16B, V0.16B
	0x01DB52C8 MOV V9.16B, V1.16B
	0x01DB52CC MOV V10.16B, V2.16B
	0x01DB52D0 BL 0x3C3F830
	0x01DB52D4 MOV V4.16B, V0.16B
	0x01DB52D8 MOV V5.16B, V1.16B
	0x01DB52DC MOV V6.16B, V2.16B
	0x01DB52E0 MOV V7.16B, V3.16B
	0x01DB52E4 ADD X0, X31, 0x60
	0x01DB52E8 MOV V0.16B, V8.16B
	0x01DB52EC MOV V1.16B, V9.16B
	0x01DB52F0 MOV V2.16B, V10.16B
	0x01DB52F4 MOV V3.16B, V4.16B
	0x01DB52F8 MOV V4.16B, V5.16B
	0x01DB52FC MOV V5.16B, V6.16B
	0x01DB5300 MOV V6.16B, V7.16B
	0x01DB5304 STP X31, X31, [X31 + 0x60]
	0x01DB5308 BL 0x1DB56C0
	0x01DB530C LDR V0, [X31 + 0x6]
	0x01DB5310 STR V0, [X31 + 0x7]
	0x01DB5314 LDR X8, [X19 + 0xB8]
	0x01DB5318 CBZ X8, 0x1DB544C
	0x01DB531C LDR X0, [X8 + 0x20]
	0x01DB5320 CBZ X0, 0x1DB544C
	0x01DB5324 MOV X1, X31
	0x01DB5328 BL 0x3C3EB78
	0x01DB532C LDR X8, [X19 + 0xB8]
	0x01DB5330 CBZ X8, 0x1DB544C
	0x01DB5334 LDR X0, [X8 + 0x20]
	0x01DB5338 CBZ X0, 0x1DB544C
	0x01DB533C MOV X1, X31
	0x01DB5340 MOV V8.16B, V0.16B
	0x01DB5344 MOV V9.16B, V1.16B
	0x01DB5348 MOV V10.16B, V2.16B
	0x01DB534C BL 0x3C3F830
	0x01DB5350 MOV V4.16B, V0.16B
	0x01DB5354 MOV V5.16B, V1.16B
	0x01DB5358 MOV V6.16B, V2.16B
	0x01DB535C MOV V7.16B, V3.16B
	0x01DB5360 ADD X0, X31, 0x50
	0x01DB5364 MOV V0.16B, V8.16B
	0x01DB5368 MOV V1.16B, V9.16B
	0x01DB536C MOV V2.16B, V10.16B
	0x01DB5370 MOV V3.16B, V4.16B
	0x01DB5374 MOV V4.16B, V5.16B
	0x01DB5378 MOV V5.16B, V6.16B
	0x01DB537C MOV V6.16B, V7.16B
	0x01DB5380 STP X31, X31, [X31 + 0x50]
	0x01DB5384 BL 0x1DB56C0
	0x01DB5388 LDR V0, [X31 + 0x5]
	0x01DB538C STR V0, [X31 + 0x8]
	0x01DB5390 LDR X8, [X19 + 0xB8]
	0x01DB5394 CBZ X8, 0x1DB544C
	0x01DB5398 LDR X0, [X8 + 0x28]
	0x01DB539C CBZ X0, 0x1DB544C
	0x01DB53A0 MOV X1, X31
	0x01DB53A4 BL 0x3C3EB78
	0x01DB53A8 LDR X8, [X19 + 0xB8]
	0x01DB53AC CBZ X8, 0x1DB544C
	0x01DB53B0 LDR X0, [X8 + 0x28]
	0x01DB53B4 CBZ X0, 0x1DB544C
	0x01DB53B8 MOV X1, X31
	0x01DB53BC MOV V8.16B, V0.16B
	0x01DB53C0 MOV V9.16B, V1.16B
	0x01DB53C4 MOV V10.16B, V2.16B
	0x01DB53C8 BL 0x3C3F830
	0x01DB53CC MOV V4.16B, V0.16B
	0x01DB53D0 MOV V5.16B, V1.16B
	0x01DB53D4 MOV V6.16B, V2.16B
	0x01DB53D8 MOV V7.16B, V3.16B
	0x01DB53DC ADD X0, X31, 0x40
	0x01DB53E0 MOV V0.16B, V8.16B
	0x01DB53E4 MOV V1.16B, V9.16B
	0x01DB53E8 MOV V2.16B, V10.16B
	0x01DB53EC MOV V3.16B, V4.16B
	0x01DB53F0 MOV V4.16B, V5.16B
	0x01DB53F4 MOV V5.16B, V6.16B
	0x01DB53F8 MOV V6.16B, V7.16B
	0x01DB53FC STP X31, X31, [X31 + 0x40]
	0x01DB5400 BL 0x1DB56C0
	0x01DB5404 LDR V0, [X31 + 0x4]
	0x01DB5408 LDP V1, V2, [X31 + 0x70]
	0x01DB540C ADD X1, X31, 0x10
	0x01DB5410 MOV X0, X19
	0x01DB5414 STR V0, [X31 + 0x9]
	0x01DB5418 STP V1, V2, [X31 + 0x10]
	0x01DB541C STR V0, [X31 + 0x3]
	0x01DB5420 BL 0x1DB1C04
	0x01DB5424 LDR X8, [X21 + 0x28]
	0x01DB5428 LDR X9, [X31 + 0xA8]
	0x01DB542C CMP X8, X9
	0x01DB5430 B.NE 0x1DB5450
	0x01DB5434 LDP X20, X19, [X31 + 0xE0]
	0x01DB5438 LDP X30, X21, [X31 + 0xD0]
	0x01DB543C LDP D9, D8, [X31 + 0xC0]
	0x01DB5440 LDR V10, [X31 + 0xB0]
	0x01DB5444 ADD X31, X31, 0xF0
	0x01DB5448 RET
	0x01DB544C BL 0x1C16F20
	0x01DB5450 BL 0x3EB1B20
	0x01DB5454 SUB X31, X31, 0x30
	0x01DB5458 STP X30, X21, [X31 + 0x10]
	0x01DB545C STP X20, X19, [X31 + 0x20]
	0x01DB5460 ADRP X21, 0x2623000
	0x01DB5464 ADRP X20, 0x233E000
	0x01DB5468 LDRB W8, [X21 + 0xB0B]
	0x01DB546C LDR X20, [X20 + 0x598]
	0x01DB5470 MOV X19, X0
	0x01DB5474 TBNZ X8, 0x0, 0x1DB54A4
	0x01DB5478 ADRP X0, 0x2342000
	0x01DB547C LDR X0, [X0 + 0xBF0]
	0x01DB5480 BL 0x1C16CF4
	0x01DB5484 ADRP X0, 0x2342000
	0x01DB5488 LDR X0, [X0 + 0xBF8]
	0x01DB548C BL 0x1C16CF4
	0x01DB5490 ADRP X0, 0x233E000
	0x01DB5494 LDR X0, [X0 + 0x598]
	0x01DB5498 BL 0x1C16CF4
	0x01DB549C MOVZ W8, 0x1
	0x01DB54A0 STRB W8, [X21 + 0xB0B]
	0x01DB54A4 MOV X0, X19
	0x01DB54A8 MOV X1, X31
	0x01DB54AC BL 0x1E79788
	0x01DB54B0 LDR X0, [X20]
	0x01DB54B4 LDR X20, [X19 + 0x38]
	0x01DB54B8 LDR W8, [X0 + 0xE0]
	0x01DB54BC CBNZ W8, 0x1DB54C4
	0x01DB54C0 BL 0x1C16DFC
	0x01DB54C4 MOV X0, X20
	0x01DB54C8 MOV X1, X31
	0x01DB54CC MOV X2, X31
	0x01DB54D0 BL 0x3C354F8
	0x01DB54D4 TBZ X0, 0x0, 0x1DB5550
	0x01DB54D8 LDR X0, [X19 + 0x38]
	0x01DB54DC CBZ X0, 0x1DB556C
	0x01DB54E0 LDR X1, [X19 + 0xC0]
	0x01DB54E4 MOV X2, X31
	0x01DB54E8 BL 0x1EA1A20
	0x01DB54EC TBZ X0, 0x0, 0x1DB5550
	0x01DB54F0 LDR X21, [X19 + 0x38]
	0x01DB54F4 CBZ X21, 0x1DB556C
	0x01DB54F8 LDR X20, [X19 + 0xC0]
	0x01DB54FC MOV X0, X21
	0x01DB5500 MOV X1, X31
	0x01DB5504 BL 0x1E9EA20
	0x01DB5508 LDR X8, [X21 + 0x50]
	0x01DB550C CBZ X8, 0x1DB5550
	0x01DB5510 AND X2, X0, 0x0
	0x01DB5514 MOV X0, X8
	0x01DB5518 MOV X1, X20
	0x01DB551C MOV X3, X31
	0x01DB5520 BL 0x1DBF658
	0x01DB5524 ANDS W31, W0, 0xFF
	0x01DB5528 STRH W0, [X31 + 0xC]
	0x01DB552C B.EQ 0x1DB5550
	0x01DB5530 ADRP X8, 0x2342000
	0x01DB5534 LDR X8, [X8 + 0xBF8]
	0x01DB5538 ADD X0, X31, 0xC
	0x01DB553C LDR X1, [X8]
	0x01DB5540 BL 0x242D58C
	0x01DB5544 TBZ X0, 0x0, 0x1DB5550
	0x01DB5548 ADD X8, X19, 0xB0
	0x01DB554C B 0x1DB5554
	0x01DB5550 ADD X8, X19, 0xB8
	0x01DB5554 LDR X8, [X8]
	0x01DB5558 LDP X30, X21, [X31 + 0x10]
	0x01DB555C STR X8, [X19 + 0x1B8]
	0x01DB5560 LDP X20, X19, [X31 + 0x20]
	0x01DB5564 ADD X31, X31, 0x30
	0x01DB5568 RET
	0x01DB556C BL 0x1C16F20
	0x01DB5570 SUB X31, X31, 0x60
	0x01DB5574 STP D15, D14, [X31 + 0x10]
	0x01DB5578 STP D13, D12, [X31 + 0x20]
	0x01DB557C STP D11, D10, [X31 + 0x30]
	0x01DB5580 STP D9, D8, [X31 + 0x40]
	0x01DB5584 STP X30, X19, [X31 + 0x50]
	0x01DB5588 CBZ X1, 0x1DB56BC
	0x01DB558C MOV V14.16B, V0.16B
	0x01DB5590 LDR V0, [X31 + 0x60]
	0x01DB5594 MOV X19, X1
	0x01DB5598 MOV X0, X1
	0x01DB559C MOV X1, X31
	0x01DB55A0 MOV V15.16B, V7.16B
	0x01DB55A4 MOV V8.16B, V6.16B
	0x01DB55A8 MOV V9.16B, V5.16B
	0x01DB55AC MOV V10.16B, V4.16B
	0x01DB55B0 MOV V11.16B, V3.16B
	0x01DB55B4 MOV V12.16B, V2.16B
	0x01DB55B8 MOV V13.16B, V1.16B
	0x01DB55BC STR S0, [X31 + 0xC]
	0x01DB55C0 BL 0x3C3F58C
	0x01DB55C4 FSUB S0, S14, S0
	0x01DB55C8 FSUB S1, S13, S1
	0x01DB55CC FSUB S2, S12, S2
	0x01DB55D0 FMUL S0, S0, S0
	0x01DB55D4 FMUL S1, S1, S1
	0x01DB55D8 FADD S0, S0, S1
	0x01DB55DC FMUL S1, S2, S2
	0x01DB55E0 FADD S0, S1, S0
	0x01DB55E4 FCMP S0, S15
	0x01DB55E8 B.GT 0x1DB5654
	0x01DB55EC MOV X0, X19
	0x01DB55F0 MOV X1, X31
	0x01DB55F4 BL 0x3C3DEB4
	0x01DB55F8 FMUL S0, S11, S0
	0x01DB55FC FMUL S1, S10, S1
	0x01DB5600 FMUL S2, S9, S2
	0x01DB5604 ADRP X8, 0xFFFFFFFFFED35000
	0x01DB5608 FADD S0, S0, S1
	0x01DB560C FMUL S3, S8, S3
	0x01DB5610 LDR V1, [X8 + 0x1B4]
	0x01DB5614 FADD S0, S2, S0
	0x01DB5618 FADD S0, S3, S0
	0x01DB561C FABS S0, S0
	0x01DB5620 FMOV S2, 1
	0x01DB5624 FMINNM S0, S0, S2
	0x01DB5628 FCMP S0, S1
	0x01DB562C FMOV S1, W31
	0x01DB5630 B.GT 0x1DB5648
	0x01DB5634 BL 0x3EB1BB0
	0x01DB5638 ADRP X8, 0xFFFFFFFFFED35000
	0x01DB563C LDR V1, [X8 + 0x448]
	0x01DB5640 FADD S0, S0, S0
	0x01DB5644 FMUL S1, S0, S1
	0x01DB5648 LDR V0, [X31 + 0xC]
	0x01DB564C FCMP S1, S0
	0x01DB5650 B.LE 0x1DB56A0
	0x01DB5654 MOV X0, X19
	0x01DB5658 MOV V0.16B, V14.16B
	0x01DB565C MOV V1.16B, V13.16B
	0x01DB5660 MOV V2.16B, V12.16B
	0x01DB5664 MOV X1, X31
	0x01DB5668 BL 0x3C3F62C
	0x01DB566C MOV X0, X19
	0x01DB5670 MOV V0.16B, V11.16B
	0x01DB5674 MOV V1.16B, V10.16B
	0x01DB5678 MOV V2.16B, V9.16B
	0x01DB567C MOV V3.16B, V8.16B
	0x01DB5680 LDP X30, X19, [X31 + 0x50]
	0x01DB5684 LDP D9, D8, [X31 + 0x40]
	0x01DB5688 LDP D11, D10, [X31 + 0x30]
	0x01DB568C LDP D13, D12, [X31 + 0x20]
	0x01DB5690 LDP D15, D14, [X31 + 0x10]
	0x01DB5694 MOV X1, X31
	0x01DB5698 ADD X31, X31, 0x60
	0x01DB569C B 0x3C3F7AC
	0x01DB56A0 LDP X30, X19, [X31 + 0x50]
	0x01DB56A4 LDP D9, D8, [X31 + 0x40]
	0x01DB56A8 LDP D11, D10, [X31 + 0x30]
	0x01DB56AC LDP D13, D12, [X31 + 0x20]
	0x01DB56B0 LDP D15, D14, [X31 + 0x10]
	0x01DB56B4 ADD X31, X31, 0x60
	0x01DB56B8 RET
	0x01DB56BC BL 0x1C16F20
	0x01DB56C0 SUB X31, X31, 0x80
	0x01DB56C4 STR D14, [X31 + 0x20]
	0x01DB56C8 STP D13, D12, [X31 + 0x28]
	0x01DB56CC STP D11, D10, [X31 + 0x38]
	0x01DB56D0 STP D9, D8, [X31 + 0x48]
	0x01DB56D4 STR X30, [X31 + 0x58]
	0x01DB56D8 STP X22, X21, [X31 + 0x60]
	0x01DB56DC STP X20, X19, [X31 + 0x70]
	0x01DB56E0 MRS X20, 0xC000
	0x01DB56E4 LDR X8, [X20 + 0x28]
	0x01DB56E8 ADRP X22, 0x2623000
	0x01DB56EC ADRP X21, 0x233E000
	0x01DB56F0 MOV V8.16B, V6.16B
	0x01DB56F4 STR X8, [X31 + 0x18]
	0x01DB56F8 LDRB W8, [X22 + 0xB2D]
	0x01DB56FC LDR X21, [X21 + 0x630]
	0x01DB5700 MOV V9.16B, V5.16B
	0x01DB5704 MOV V10.16B, V4.16B
	0x01DB5708 MOV V11.16B, V3.16B
	0x01DB570C MOV V12.16B, V2.16B
	0x01DB5710 MOV V13.16B, V1.16B
	0x01DB5714 MOV V14.16B, V0.16B
	0x01DB5718 MOV X19, X0
	0x01DB571C TBNZ X8, 0x0, 0x1DB5734
	0x01DB5720 ADRP X0, 0x233E000
	0x01DB5724 LDR X0, [X0 + 0x630]
	0x01DB5728 BL 0x1C16CF4
	0x01DB572C MOVZ W8, 0x1
	0x01DB5730 STRB W8, [X22 + 0xB2D]
	0x01DB5734 ADD X0, X31, 0x8
	0x01DB5738 FMOV S3, 2
	0x01DB573C MOV V0.16B, V14.16B
	0x01DB5740 MOV V1.16B, V13.16B
	0x01DB5744 MOV V2.16B, V12.16B
	0x01DB5748 STR W31, [X31 + 0x10]
	0x01DB574C STR X31, [X31 + 0x8]
	0x01DB5750 BL 0x1DB9C6C
	0x01DB5754 LDR W8, [X31 + 0x10]
	0x01DB5758 LDR X9, [X31 + 0x8]
	0x01DB575C STR W8, [X19 + 0x8]
	0x01DB5760 STR X9, [X19]
	0x01DB5764 LDR X0, [X21]
	0x01DB5768 LDR W8, [X0 + 0xE0]
	0x01DB576C CBNZ W8, 0x1DB5774
	0x01DB5770 BL 0x1C16DFC
	0x01DB5774 MOV V0.16B, V11.16B
	0x01DB5778 MOV V1.16B, V10.16B
	0x01DB577C MOV V2.16B, V9.16B
	0x01DB5780 MOV V3.16B, V8.16B
	0x01DB5784 MOV X0, X31
	0x01DB5788 BL 0x1D320B0
	0x01DB578C STRH W0, [X19 + 0xC]
	0x01DB5790 LDR X8, [X20 + 0x28]
	0x01DB5794 LDR X9, [X31 + 0x18]
	0x01DB5798 CMP X8, X9
	0x01DB579C B.NE 0x1DB57C4
	0x01DB57A0 LDP X20, X19, [X31 + 0x70]
	0x01DB57A4 LDP X22, X21, [X31 + 0x60]
	0x01DB57A8 LDR X30, [X31 + 0x58]
	0x01DB57AC LDP D9, D8, [X31 + 0x48]
	0x01DB57B0 LDP D11, D10, [X31 + 0x38]
	0x01DB57B4 LDP D13, D12, [X31 + 0x28]
	0x01DB57B8 LDR V14, [X31 + 0x20]
	0x01DB57BC ADD X31, X31, 0x80
	0x01DB57C0 RET
	0x01DB57C4 BL 0x3EB1B20
	0x01DB57C8 STR X30, [X31 - 0x30]!
	0x01DB57CC STP X22, X21, [X31 + 0x10]
	0x01DB57D0 STP X20, X19, [X31 + 0x20]
	0x01DB57D4 ADRP X22, 0x2623000
	0x01DB57D8 LDRB W8, [X22 + 0xB2E]
	0x01DB57DC MOV X20, X2
	0x01DB57E0 MOV X21, X1
	0x01DB57E4 MOV X19, X0
	0x01DB57E8 TBNZ X8, 0x0, 0x1DB5800
	0x01DB57EC ADRP X0, 0x233E000

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X19, 0x2624000
	015 Move X20, 0x233F000
	016 Move W8, [X19+2820]
	017 Move X20, [X20+1608]
	018 Move X22, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {97}
	023 Move X0, 0x233F000
	024 Move X0, [X0+1608]
	025 Call 0x1C17CF4
	026 Move X0, 0x2343000
	027 Move X0, [X0+2968]
	028 Call 0x1C17CF4
	029 Move X0, 0x2343000
	030 Move X0, [X0+2976]
	031 Call 0x1C17CF4
	032 Move X0, 0x2342000
	033 Move X0, [X0+2192]
	034 Call 0x1C17CF4
	035 Move X0, 0x2342000
	036 Move X0, [X0+2200]
	037 Call 0x1C17CF4
	038 Move X0, 0x2342000
	039 Move X0, [X0+2208]
	040 Call 0x1C17CF4
	041 Move X0, 0x2343000
	042 Move X0, [X0+2984]
	043 Call 0x1C17CF4
	044 Move X0, 0x2343000
	045 Move X0, [X0+2992]
	046 Call 0x1C17CF4
	047 Move X0, 0x233F000
	048 Move X0, [X0+3584]
	049 Call 0x1C17CF4
	050 Move X0, 0x233F000
	051 Move X0, [X0+3952]
	052 Call 0x1C17CF4
	053 Move X0, 0x233F000
	054 Move X0, [X0+3960]
	055 Call 0x1C17CF4
	056 Move X0, 0x233F000
	057 Move X0, [X0+3608]
	058 Call 0x1C17CF4
	059 Move X0, 0x2340000
	060 Move X0, [X0+3600]
	061 Call 0x1C17CF4
	062 Move X0, 0x2343000
	063 Move X0, [X0+2928]
	064 Call 0x1C17CF4
	065 Move X0, 0x2340000
	066 Move X0, [X0+3632]
	067 Call 0x1C17CF4
	068 Move X0, 0x2342000
	069 Move X0, [X0+1768]
	070 Call 0x1C17CF4
	071 Move X0, 0x2342000
	072 Move X0, [X0+2216]
	073 Call 0x1C17CF4
	074 Move X0, 0x2340000
	075 Move X0, [X0+504]
	076 Call 0x1C17CF4
	077 Move X0, 0x2343000
	078 Move X0, [X0+3000]
	079 Call 0x1C17CF4
	080 Move X0, 0x2343000
	081 Move X0, [X0+3008]
	082 Call 0x1C17CF4
	083 Move X0, 0x2343000
	084 Move X0, [X0+3016]
	085 Call 0x1C17CF4
	086 Move X0, 0x2343000
	087 Move X0, [X0+2736]
	088 Call 0x1C17CF4
	089 Move X0, 0x2342000
	090 Move X0, [X0+2232]
	091 Call 0x1C17CF4
	092 Move X0, 0x2341000
	093 Move X0, [X0+928]
	094 Call 0x1C17CF4
	095 Move W8, 1
	096 Move [X19+2820], W8
	097 Move X0, [X20]
	098 Move [X31+48], X31
	099 Move [X31+56], X31
	100 Move [X31+64], X31
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {105}
	104 Call 0x1C17DFC
	105 Move X8, 0x2624000
	106 Move W8, [X8+1927]
	107 Compare W8, 0
	108 JumpIfNotEqual {115}
	109 Move X0, 0x233F000
	110 Move X0, [X0+1608]
	111 Call 0x1C17CF4
	112 Move W8, 1
	113 Move X9, 0x2624000
	114 Move [X9+1927], W8
	115 Move X0, [X20]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {121}
	119 Call 0x1C17DFC
	120 Move X0, [X20]
	121 Move X8, [X0+184]
	122 Move X8, [X8]
	123 Compare X8, 0
	124 JumpIfEqual {493}
	125 Move X8, [X8+184]
	126 Compare X8, 0
	127 JumpIfEqual {493}
	128 Move X8, [X8+160]
	129 Compare X8, 0
	130 JumpIfEqual {493}
	131 Move X0, [X8+72]
	132 Compare X0, 0
	133 JumpIfEqual {493}
	134 Move X8, 0x2342000
	135 Move X8, [X8+1768]
	136 Move X19, 0x2343000
	137 Move X1, [X8]
	138 Move X19, [X19+2736]
	139 Call StateDictionary`2<Object, Object>.get_Values, X0
	140 Move X8, [X19]
	141 Move X21, X0
	142 Move [X31+16], X22
	143 Move W9, [X8+224]
	144 Compare W9, 0
	145 JumpIfNotEqual {149}
	146 Move X0, X8
	147 Call 0x1C17DFC
	148 Move X8, [X19]
	149 Move X9, [X8+184]
	150 Move X24, 0x2343000
	151 Move X22, [X9+16]
	152 Move X24, [X24+2976]
	153 Compare X22, 0
	154 JumpIfNotEqual {177}
	155 Move W9, [X8+224]
	156 Compare W9, 0
	157 JumpIfNotEqual {161}
	158 Move X0, X8
	159 Call 0x1C17DFC
	160 Move X8, [X19]
	161 Move X9, 0x2343000
	162 Move X8, [X8+184]
	163 Move X9, [X9+2992]
	164 Move X23, [X8]
	165 Move X0, [X9]
	166 Call 0x1C17F10
	167 Move X8, 0x2343000
	168 Move X8, [X8+3008]
	169 Move X1, X23
	170 Move X3, X31
	171 Move X22, X0
	172 Move X2, [X8]
	173 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	174 Move X8, [X19]
	175 Move X8, [X8+184]
	176 Move [X8+16], X22
	177 Move X2, [X24]
	178 Move X0, X21
	179 Move X1, X22
	180 Call Enumerable.Where, X0, X1
	181 Move X8, [X19]
	182 Move X21, X0
	183 Move W9, [X8+224]
	184 Compare W9, 0
	185 JumpIfNotEqual {189}
	186 Move X0, X8
	187 Call 0x1C17DFC
	188 Move X8, [X19]
	189 Move X9, [X8+184]
	190 Move X26, 0x2343000
	191 Move X25, 0x2340000
	192 Move X24, 0x2343000
	193 Move X22, [X9+24]
	194 Move X26, [X26+2968]
	195 Move X25, [X25+3632]
	196 Move X24, [X24+2928]
	197 Compare X22, 0
	198 JumpIfNotEqual {221}
	199 Move W9, [X8+224]
	200 Compare W9, 0
	201 JumpIfNotEqual {205}
	202 Move X0, X8
	203 Call 0x1C17DFC
	204 Move X8, [X19]
	205 Move X9, 0x2343000
	206 Move X8, [X8+184]
	207 Move X9, [X9+2984]
	208 Move X23, [X8]
	209 Move X0, [X9]
	210 Call 0x1C17F10
	211 Move X8, 0x2343000
	212 Move X8, [X8+3016]
	213 Move X1, X23
	214 Move X3, X31
	215 Move X22, X0
	216 Move X2, [X8]
	217 Call Func`2<Object, Object>..ctor, X0, X1, X2
	218 Move X8, [X19]
	219 Move X8, [X8+184]
	220 Move [X8+24], X22
	221 Move X2, [X26]
	222 Move X0, X21
	223 Move X1, X22
	224 Call Enumerable.Select, X0, X1
	225 Move X8, [X25]
	226 Move X22, X0
	227 Move X0, X8
	228 Call 0x1C17F10
	229 Move X1, [X24]
	230 Move X21, X0
	231 Call List`1<Int32>..ctor, X0
	232 Compare X22, 0
	233 JumpIfEqual {493}
	234 Move X10, 0x233F000
	235 Move X8, [X22]
	236 Move X10, [X10+3952]
	237 NotImplemented "Instruction LDRH not yet implemented."
	238 Move X1, [X10]
	239 Compare X9, 0
	240 JumpIfEqual {247}
	241 Move X10, [X8+176]
	242 Add X10, X10, 8
	243 NotImplemented "Instruction LDUR not yet implemented."
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Subtract X9, X9, 1
	246 Add X10, X10, 16
	247 Move X0, X22
	248 Move W2, W31
	249 Call 0x1C5D788
	250 NotImplemented "Instruction LDRSW not yet implemented."
	251 Add X8, X8, X9
	252 Add X0, X8, 312
	253 Move X8, [X0]
	254 Move X1, [X0+8]
	255 Move X0, X22
	256 NotImplemented "Instruction BLR not yet implemented."
	257 Move X22, X0
	258 Compare X0, 0
	259 JumpIfEqual {494}
	260 Move X27, 0x233F000
	261 Move X28, 0x233F000
	262 Move X25, 0x2342000
	263 Move X19, 0x2342000
	264 Move X29, 0x2342000
	265 Move X24, 0x2340000
	266 Move X27, [X27+3608]
	267 Move X28, [X28+3960]
	268 Move X25, [X25+2216]
	269 Move X19, [X19+2232]
	270 Move X29, [X29+2200]
	271 Move X24, [X24+504]
	272 Move X8, [X22]
	273 Move X1, [X27]
	274 NotImplemented "Instruction LDRH not yet implemented."
	275 Compare X9, 0
	276 JumpIfEqual {283}
	277 Move X10, [X8+176]
	278 Add X10, X10, 8
	279 NotImplemented "Instruction LDUR not yet implemented."
	280 NotImplemented "Instruction CMP not yet implemented."
	281 Subtract X9, X9, 1
	282 Add X10, X10, 16
	283 Move X0, X22
	284 Move W2, W31
	285 Call 0x1C5D788
	286 NotImplemented "Instruction LDRSW not yet implemented."
	287 Add X8, X8, X9
	288 Add X0, X8, 312
	289 Move X8, [X0]
	290 Move X1, [X0+8]
	291 Move X0, X22
	292 NotImplemented "Instruction BLR not yet implemented."
	293 Move TEMP, X0
	294 And TEMP, TEMP, 1
	295 Compare TEMP, 1
	296 JumpIfNotEqual {420}
	297 Move X8, [X22]
	298 Move X1, [X28]
	299 NotImplemented "Instruction LDRH not yet implemented."
	300 Compare X9, 0
	301 JumpIfEqual {308}
	302 Move X10, [X8+176]
	303 Add X10, X10, 8
	304 NotImplemented "Instruction LDUR not yet implemented."
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Subtract X9, X9, 1
	307 Add X10, X10, 16
	308 Move X0, X22
	309 Move W2, W31
	310 Call 0x1C5D788
	311 NotImplemented "Instruction LDRSW not yet implemented."
	312 Add X8, X8, X9
	313 Add X0, X8, 312
	314 Move X8, [X0]
	315 Move X1, [X0+8]
	316 Move X0, X22
	317 NotImplemented "Instruction BLR not yet implemented."
	318 Move X23, X0
	319 Move X0, [X20]
	320 Move W8, [X0+224]
	321 Compare W8, 0
	322 JumpIfNotEqual {324}
	323 Call 0x1C17DFC
	324 Move X8, 0x2624000
	325 Move W8, [X8+1927]
	326 Compare W8, 0
	327 JumpIfNotEqual {333}
	328 Move X0, X20
	329 Call 0x1C17CF4
	330 Move X8, 0x2624000
	331 Move W9, 1
	332 Move [X8+1927], W9
	333 Move X0, [X20]
	334 Move W8, [X0+224]
	335 Compare W8, 0
	336 JumpIfNotEqual {339}
	337 Call 0x1C17DFC
	338 Move X0, [X20]
	339 Move X8, [X0+184]
	340 Move X8, [X8]
	341 Compare X8, 0
	342 JumpIfEqual {491}
	343 Move X8, [X8+224]
	344 Compare X8, 0
	345 JumpIfEqual {492}
	346 Move X0, [X8+128]
	347 Compare X0, 0
	348 JumpIfEqual {489}
	349 Move X1, [X25]
	350 Call 0x2606C30, X0
	351 Compare X0, 0
	352 JumpIfEqual {490}
	353 Move X1, [X19]
	354 Add X8, X31, 24
	355 Call ValueCollection<Int32, Object>.GetEnumerator, X0
	356 NotImplemented "Instruction LDUR not yet implemented."
	357 Move X8, [X31+40]
	358 Move [X31+3], V0
	359 Move [X31+64], X8
	360 Move X1, [X29]
	361 Add X0, X31, 48
	362 Call Enumerator<Int32, Object>.MoveNext, X0
	363 Move TEMP, X0
	364 And TEMP, TEMP, 1
	365 Compare TEMP, 1
	366 JumpIfNotEqual {405}
	367 Move X26, [X31+64]
	368 Compare X26, 0
	369 JumpIfEqual {413}
	370 Move X0, [X26+80]
	371 Move X1, [X24]
	372 Call StatePrimitive`1<Object>.op_Implicit, X0
	373 Move X1, X23
	374 Move X2, X31
	375 Call String.op_Equality, X0, X1
	376 Move TEMP, X0
	377 And TEMP, TEMP, 1
	378 Compare TEMP, 1
	379 JumpIfNotEqual {360}
	380 Compare X21, 0
	381 JumpIfEqual {414}
	382 Move X9, 0x2340000
	383 Move W1, [X26+72]
	384 Move W10, [X21+28]
	385 Move X8, [X21+16]
	386 Move X9, [X9+3600]
	387 Add W10, W10, 1
	388 Move X9, [X9]
	389 Move [X21+28], W10
	390 Compare X8, 0
	391 JumpIfEqual {415}
	392 NotImplemented "Instruction LDRSW not yet implemented."
	393 Move W11, [X8+24]
	394 NotImplemented "Instruction CMP not yet implemented."
	395 Add W9, W10, 1
	396 Add X8, X8, X10
	397 Move X23, X31
	398 Move [X21+24], W9
	399 Move [X8+32], W1
	400 Move X8, [X9+32]
	401 Move X8, [X8+192]
	402 Move X2, [X8+112]
	403 Move X0, X21
	404 Call List`1<Int32>.AddWithResize, X0, X1
	405 Move X23, X31
	406 Move X8, 0x2342000
	407 Move X8, [X8+2192]
	408 Move X1, [X8]
	409 Add X0, X31, 48
	410 Call Enumerator<Int32, Object>.Dispose, X0
	411 Compare X23, 0
	412 JumpIfEqual {272}
	413 Call 0x1C17F20
	414 Call 0x1C17F20
	415 Call 0x1C17F20
	416 NotImplemented "Instruction CMP not yet implemented."
	417 Call 0x3EB2AD0
	418 Move X23, [X0]
	419 Call 0x3EB2AE0
	420 Move X20, X31
	421 Compare X22, 0
	422 JumpIfEqual {446}
	423 Move X8, [X22]
	424 Move X10, 0x233F000
	425 NotImplemented "Instruction LDRH not yet implemented."
	426 Move X10, [X10+3584]
	427 Move X1, [X10]
	428 Compare X9, 0
	429 JumpIfEqual {436}
	430 Move X10, [X8+176]
	431 Add X10, X10, 8
	432 NotImplemented "Instruction LDUR not yet implemented."
	433 NotImplemented "Instruction CMP not yet implemented."
	434 Subtract X9, X9, 1
	435 Add X10, X10, 16
	436 Move X0, X22
	437 Move W2, W31
	438 Call 0x1C5D788
	439 NotImplemented "Instruction LDRSW not yet implemented."
	440 Add X8, X8, X9
	441 Add X0, X8, 312
	442 Move X8, [X0]
	443 Move X1, [X0+8]
	444 Move X0, X22
	445 NotImplemented "Instruction BLR not yet implemented."
	446 Compare X20, 0
	447 JumpIfNotEqual {495}
	448 Move X8, 0x2341000
	449 Move X9, 0x2343000
	450 Move X8, [X8+928]
	451 Move X9, [X9+3000]
	452 Move X1, X21
	453 Move X0, [X8]
	454 Move X2, [X9]
	455 Call String.Join, X0, X1
	456 Move X1, X0
	457 Move X0, [X31+16]
	458 Call NetPlayer.set_blockedPlayers, X0, X1
	459 Move X20, [X31+160]
	460 Move X19, [X31+168]
	461 Move X22, [X31+144]
	462 Move X21, [X31+152]
	463 Move X24, [X31+128]
	464 Move X23, [X31+136]
	465 Move X26, [X31+112]
	466 Move X25, [X31+120]
	467 Move X28, [X31+96]
	468 Move X27, [X31+104]
	469 Move X29, [X31+80]
	470 Move X30, [X31+88]
	471 Add X31, X31, 176
	472 Return 
	473 Move [X31+8], X1
	474 Move X20, X0
	475 Move X23, X31
	476 Move X8, 0x2342000
	477 Move X8, [X8+2192]
	478 Move X1, [X8]
	479 Add X0, X31, 48
	480 Call Enumerator<Int32, Object>.Dispose, X0
	481 Move X1, [X31+8]
	482 Move X0, X20
	483 Compare X23, 0
	484 JumpIfEqual {499}
	485 Move X0, X23
	486 Call 0x1C17F18
	487 Move X0, X23
	488 Call 0x1C17F18
	489 Call 0x1C17F20
	490 Call 0x1C17F20
	491 Call 0x1C17F20
	492 Call 0x1C17F20
	493 Call 0x1C17F20
	494 Call 0x1C17F20
	495 Move X0, X20
	496 Call 0x1C17F18
	497 Move X20, X0
	498 Move [X31+8], X1
	499 NotImplemented "Instruction CMP not yet implemented."
	500 Call 0x3EB2AD0
	501 Move X20, [X0]
	502 Call 0x3EB2AE0
	503 Move X19, X0
	504 Move X20, X31
	505 Move X19, X0
	506 Compare X22, 0
	507 JumpIfEqual {531}
	508 Move X8, [X22]
	509 Move X10, 0x233F000
	510 NotImplemented "Instruction LDRH not yet implemented."
	511 Move X10, [X10+3584]
	512 Move X1, [X10]
	513 Compare X9, 0
	514 JumpIfEqual {521}
	515 Move X10, [X8+176]
	516 Add X10, X10, 8
	517 NotImplemented "Instruction LDUR not yet implemented."
	518 NotImplemented "Instruction CMP not yet implemented."
	519 Subtract X9, X9, 1
	520 Add X10, X10, 16
	521 Move X0, X22
	522 Move W2, W31
	523 Call 0x1C5D788
	524 NotImplemented "Instruction LDRSW not yet implemented."
	525 Add X8, X8, X9
	526 Add X0, X8, 312
	527 Move X8, [X0]
	528 Move X1, [X0+8]
	529 Move X0, X22
	530 NotImplemented "Instruction BLR not yet implemented."
	531 Compare X20, 0
	532 JumpIfNotEqual {535}
	533 Move X0, X19
	534 Call 0x1D2D690
	535 Move X0, X20
	536 Call 0x1C17F18
	537 Call 0x1991590

Method: System.Void HandleFriendsChanged(SpatialSys.ObservableState.StateChangedEventArgs args)

Disassembly:
	0x01DB57F0 LDR X0, [X0 + 0x630]

ISIL:
No ISIL was generated
Method: System.Void HandleMutedPlayersUserIDsChanged(SpatialSys.ObservableState.StateChangedEventArgs args)

Disassembly:
	0x01DB58A0 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Call NetPlayer.UpdateSpeakerAudioSourceVolume, X0
	002 Return 

Method: System.Void HandleGrabbedItemWeightChanged(AnimalCompany.AttachedLocation location, AnimalCompany.GrabbableItem item)

Disassembly:
	0x01DB58A4 ADRP X20, 0x2623000
	0x01DB58A8 LDRB W8, [X20 + 0xB0C]
	0x01DB58AC MOV X19, X0
	0x01DB58B0 TBNZ X8, 0x0, 0x1DB58C8
	0x01DB58B4 ADRP X0, 0x233E000
	0x01DB58B8 LDR X0, [X0 + 0x598]
	0x01DB58BC BL 0x1C16CF4
	0x01DB58C0 MOVZ W8, 0x1
	0x01DB58C4 STRB W8, [X20 + 0xB0C]
	0x01DB58C8 LDR X0, [X19 + 0x40]
	0x01DB58CC CBZ X0, 0x1DB5954
	0x01DB58D0 MOV X1, X31
	0x01DB58D4 BL 0x1E93588
	0x01DB58D8 TBZ X0, 0x0, 0x1DB5938
	0x01DB58DC ADRP X8, 0x233E000
	0x01DB58E0 LDR X8, [X8 + 0x598]
	0x01DB58E4 LDR X20, [X19 + 0xD0]
	0x01DB58E8 LDR X0, [X8]
	0x01DB58EC LDR W8, [X0 + 0xE0]
	0x01DB58F0 CBNZ W8, 0x1DB58F8
	0x01DB58F4 BL 0x1C16DFC
	0x01DB58F8 MOV X0, X20
	0x01DB58FC MOV X1, X31
	0x01DB5900 MOV X2, X31
	0x01DB5904 BL 0x3C354F8
	0x01DB5908 TBZ X0, 0x0, 0x1DB5948
	0x01DB590C LDR X20, [X19 + 0xD0]
	0x01DB5910 MOV X0, X19
	0x01DB5914 BL 0x1DAEC64
	0x01DB5918 CBZ X20, 0x1DB5954
	0x01DB591C ORN W8, W31, W0, 0x0
	0x01DB5920 MOV X0, X20
	0x01DB5924 LDP X20, X19, [X31 + 0x10]
	0x01DB5928 AND W1, W8, 0x1
	0x01DB592C MOV X2, X31
	0x01DB5930 LDR X30, [X31], #0x20
	0x01DB5934 B 0x35741A0
	0x01DB5938 MOV X0, X19
	0x01DB593C LDP X20, X19, [X31 + 0x10]
	0x01DB5940 LDR X30, [X31], #0x20
	0x01DB5944 B 0x1DB47F4
	0x01DB5948 LDP X20, X19, [X31 + 0x10]
	0x01DB594C LDR X30, [X31], #0x20
	0x01DB5950 RET
	0x01DB5954 BL 0x1C16F20
	0x01DB5958 RET
	0x01DB595C B 0x1DB5960
	0x01DB5960 SUB X31, X31, 0x50
	0x01DB5964 STP X30, X23, [X31 + 0x20]
	0x01DB5968 STP X22, X21, [X31 + 0x30]
	0x01DB596C STP X20, X19, [X31 + 0x40]
	0x01DB5970 MRS X22, 0xC000
	0x01DB5974 LDR X8, [X22 + 0x28]
	0x01DB5978 ADRP X21, 0x2623000
	0x01DB597C MOV X20, X1
	0x01DB5980 MOV X19, X0
	0x01DB5984 STR X8, [X31 + 0x18]
	0x01DB5988 LDRB W8, [X21 + 0xB0E]
	0x01DB598C TBNZ X8, 0x0, 0x1DB59BC
	0x01DB5990 ADRP X0, 0x2342000
	0x01DB5994 LDR X0, [X0 + 0xC00]
	0x01DB5998 BL 0x1C16CF4
	0x01DB599C ADRP X0, 0x2341000
	0x01DB59A0 LDR X0, [X0 + 0xA78]
	0x01DB59A4 BL 0x1C16CF4
	0x01DB59A8 ADRP X0, 0x2342000
	0x01DB59AC LDR X0, [X0 + 0xC08]
	0x01DB59B0 BL 0x1C16CF4
	0x01DB59B4 MOVZ W8, 0x1
	0x01DB59B8 STRB W8, [X21 + 0xB0E]
	0x01DB59BC LDRB W8, [X19 + 0x58]
	0x01DB59C0 CBZ W8, 0x1DB5A24
	0x01DB59C4 STRB W31, [X19 + 0x58]
	0x01DB59C8 CBZ X20, 0x1DB5BCC
	0x01DB59CC LDR W8, [X20 + 0x18]
	0x01DB59D0 CBZ W8, 0x1DB5BC8
	0x01DB59D4 CMP W8, 0x1
	0x01DB59D8 B.EQ 0x1DB5BC8
	0x01DB59DC CMP W8, 0x2
	0x01DB59E0 B.LS 0x1DB5BC8
	0x01DB59E4 CMP W8, 0x3
	0x01DB59E8 B.EQ 0x1DB5BC8
	0x01DB59EC CMP W8, 0x4
	0x01DB59F0 B.LS 0x1DB5BC8
	0x01DB59F4 CMP W8, 0x5
	0x01DB59F8 B.EQ 0x1DB5BC8
	0x01DB59FC LDP S0, S1, [X20 + 0x20]
	0x01DB5A00 LDP S2, S3, [X20 + 0x28]
	0x01DB5A04 LDR V4, [X20 + 0x30]
	0x01DB5A08 ADD X1, X31, 0x0
	0x01DB5A0C MOV X0, X19
	0x01DB5A10 STP S0, S1, [X31]
	0x01DB5A14 STP S2, S3, [X31 + 0x8]
	0x01DB5A18 STR D4, [X31 + 0x10]
	0x01DB5A1C BL 0x1DB1B28
	0x01DB5A20 B 0x1DB5AA4
	0x01DB5A24 ADRP X23, 0x2341000
	0x01DB5A28 LDR X23, [X23 + 0xA78]
	0x01DB5A2C LDR X0, [X23]
	0x01DB5A30 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x2624000
	008 Move X21, 0x233F000
	009 Move W8, [X22+2821]
	010 Move X21, [X21+1432]
	011 Move X20, X2
	012 Move W19, W1
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x233F000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move X0, 0x2341000
	021 Move X0, [X0+1992]
	022 Call 0x1C17CF4
	023 Move X0, 0x2342000
	024 Move X0, [X0+3440]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+2821], W8
	028 Move X0, [X21]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X20
	034 Move X1, X31
	035 Move X2, X31
	036 Call Object.op_Equality, X0, X1
	037 Move S8, W31
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {50}
	042 Compare X20, 0
	043 JumpIfEqual {123}
	044 Move X0, [X20+360]
	045 Compare X0, 0
	046 JumpIfEqual {123}
	047 Move X1, X31
	048 Call Rigidbody.get_mass, X0
	049 Move V8, V0
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move S0, 0.5
	052 Multiply S8, S8, S0
	053 Move X0, [X21]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, X20
	059 Move X1, X31
	060 Move X2, X31
	061 Call Object.op_Inequality, X0, X1
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {79}
	066 Compare X20, 0
	067 JumpIfEqual {123}
	068 Move X0, X20
	069 Move X1, X31
	070 Call Component.get_tag, X0
	071 Move X8, 0x2342000
	072 Move X8, [X8+3440]
	073 Move X2, X31
	074 Move X1, [X8]
	075 Call String.op_Equality, X0, X1
	076 Add S0, S8, S8
	077 And W31, W0, 1
	078 NotImplemented "Instruction FCSEL not yet implemented."
	079 Move X20, 0x2341000
	080 Move X20, [X20+1992]
	081 Move X0, [X20]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Move X21, 0x2624000
	087 Move W8, [X21+2141]
	088 Compare W8, 0
	089 JumpIfNotEqual {95}
	090 Move X0, 0x2341000
	091 Move X0, [X0+1992]
	092 Call 0x1C17CF4
	093 Move W8, 1
	094 Move [X21+2141], W8
	095 Move X0, [X20]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {101}
	099 Call 0x1C17DFC
	100 Move X0, [X20]
	101 Move X8, [X0+184]
	102 Move X0, [X8]
	103 Compare X0, 0
	104 JumpIfEqual {116}
	105 Move W1, W19
	106 Move X20, [X31+32]
	107 Move X19, [X31+40]
	108 Move X22, [X31+16]
	109 Move X21, [X31+24]
	110 Move X30, [X31+8]
	111 Move V0, V8
	112 Move X2, X31
	113 Move V8, [X31+48]
	114 Call PlayerController.SetItemWeight, X0, X1, V0
	115 Return 
	116 Move X20, [X31+32]
	117 Move X19, [X31+40]
	118 Move X22, [X31+16]
	119 Move X21, [X31+24]
	120 Move X30, [X31+8]
	121 Move V8, [X31+48]
	122 Return 
	123 Call 0x1C17F20

Method: System.Void HandleItemCollision(AnimalCompany.AttachedLocation location, UnityEngine.Collision collision, UnityEngine.Vector3 velocity)

Disassembly:
	0x01DB5A34 CBNZ W8, 0x1DB5A3C
	0x01DB5A38 BL 0x1C16DFC
	0x01DB5A3C MOV X0, X19
	0x01DB5A40 MOV X1, X31
	0x01DB5A44 BL 0x1E77B08
	0x01DB5A48 LDR X0, [X19 + 0x38]
	0x01DB5A4C CBZ X0, 0x1DB5BCC
	0x01DB5A50 MOV X1, X31
	0x01DB5A54 BL 0x1E9E538
	0x01DB5A58 CMP W0, 0x4
	0x01DB5A5C B.EQ 0x1DB5AA4
	0x01DB5A60 LDR X0, [X19 + 0x40]
	0x01DB5A64 CBZ X0, 0x1DB5BCC
	0x01DB5A68 MOV X1, X31
	0x01DB5A6C BL 0x1E94078
	0x01DB5A70 TBNZ X0, 0x1, 0x1DB5AC8
	0x01DB5A74 LDR X0, [X23]
	0x01DB5A78 LDR X19, [X19 + 0x40]
	0x01DB5A7C LDR W8, [X0 + 0xE0]
	0x01DB5A80 CBNZ W8, 0x1DB5A88
	0x01DB5A84 BL 0x1C16DFC
	0x01DB5A88 ADRP X8, 0x2342000
	0x01DB5A8C LDR X8, [X8 + 0xC08]
	0x01DB5A90 MOVZ W2, 0x2
	0x01DB5A94 MOV X1, X19
	0x01DB5A98 MOV X3, X31
	0x01DB5A9C LDR X0, [X8]
	0x01DB5AA0 BL 0x1E77B00
	0x01DB5AA4 LDR X8, [X22 + 0x28]
	0x01DB5AA8 LDR X9, [X31 + 0x18]
	0x01DB5AAC CMP X8, X9
	0x01DB5AB0 B.NE 0x1DB5BD0
	0x01DB5AB4 LDP X20, X19, [X31 + 0x40]
	0x01DB5AB8 LDP X22, X21, [X31 + 0x30]
	0x01DB5ABC LDP X30, X23, [X31 + 0x20]
	0x01DB5AC0 ADD X31, X31, 0x50
	0x01DB5AC4 RET
	0x01DB5AC8 TBNZ X0, 0x0, 0x1DB59C8
	0x01DB5ACC CBZ X20, 0x1DB5BCC
	0x01DB5AD0 LDR W8, [X20 + 0x18]
	0x01DB5AD4 UBFM W8, W8, 0x1E, 0x1D
	0x01DB5AD8 ADD W8, W8, 0xF
	0x01DB5ADC AND W21, W8, 0xFFFFFFFC
	0x01DB5AE0 CMP W21, 0x201
	0x01DB5AE4 B.GE 0x1DB5B38
	0x01DB5AE8 LDR X8, [X19 + 0x38]
	0x01DB5AEC CBZ X8, 0x1DB5BCC
	0x01DB5AF0 LDR X0, [X8 + 0x50]
	0x01DB5AF4 CBZ X0, 0x1DB5BCC
	0x01DB5AF8 MOV X1, X31
	0x01DB5AFC BL 0x1EC4D00
	0x01DB5B00 TBZ X0, 0x0, 0x1DB5AA4
	0x01DB5B04 LDR X8, [X19 + 0x38]
	0x01DB5B08 CBZ X8, 0x1DB5BCC
	0x01DB5B0C LDR X0, [X8 + 0x50]
	0x01DB5B10 MOV W1, W21
	0x01DB5B14 MOV X2, X31
	0x01DB5B18 BL 0x1ED9318
	0x01DB5B1C LDR X8, [X19 + 0x40]
	0x01DB5B20 CBZ X8, 0x1DB5BCC
	0x01DB5B24 LDR X8, [X8 + 0x20]
	0x01DB5B28 MOV X21, X0

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x2624000
	010 Move W8, [X21+2822]
	011 Move V8, V2
	012 Move V9, V1
	013 Move V10, V0
	014 Move X19, X2
	015 Move W20, W1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x2341000
	021 Move X0, [X0+1992]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2822], W8
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X21, 0x2341000
	027 Move X21, [X21+1992]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CSET not yet implemented."
	030 Move X0, [X21]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X22, 0x2624000
	036 Move W8, [X22+2141]
	037 Compare W8, 0
	038 JumpIfNotEqual {44}
	039 Move X0, 0x2341000
	040 Move X0, [X0+1992]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X22+2141], W8
	044 Move X0, [X21]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X21]
	050 Move X8, [X0+184]
	051 Move X0, [X8]
	052 Compare X0, 0
	053 JumpIfEqual {70}
	054 Move X1, X19
	055 Move V1, V9
	056 Move V2, V8
	057 Move W2, W20
	058 Move X20, [X31+48]
	059 Move X19, [X31+56]
	060 Move X22, [X31+32]
	061 Move X21, [X31+40]
	062 Move X30, [X31+24]
	063 Move D9, [X31+8]
	064 Move D8, [X31+16]
	065 Move V0, V10
	066 Move X3, X31
	067 Move V10, [X31+64]
	068 Call PlayerController.OnItemCollision, X0, X1, X2, X3
	069 Return 
	070 Move X20, [X31+48]
	071 Move X19, [X31+56]
	072 Move X22, [X31+32]
	073 Move X21, [X31+40]
	074 Move X30, [X31+24]
	075 Move D9, [X31+8]
	076 Move D8, [X31+16]
	077 Move V10, [X31+64]
	078 Return 

Method: System.Void HandleHandStep(AnimalCompany.HandSide side, AnimalCompany.RandomSFX sfx, System.Single intensity01)

Disassembly:
	0x01DB5B2C CBZ X8, 0x1DB5B64
	0x01DB5B30 LDR W0, [X8]
	0x01DB5B34 B 0x1DB5B68
	0x01DB5B38 LDR X0, [X23]
	0x01DB5B3C LDR W8, [X0 + 0xE0]
	0x01DB5B40 CBNZ W8, 0x1DB5B48
	0x01DB5B44 BL 0x1C16DFC
	0x01DB5B48 ADRP X8, 0x2342000
	0x01DB5B4C LDR X8, [X8 + 0xC08]
	0x01DB5B50 MOV W1, W21

ISIL:
	001 Move [X31-16], X30
	002 Compare W1, 0
	003 JumpIfEqual {11}
	004 Move X0, [X0+256]
	005 Compare X0, 0
	006 JumpIfEqual {14}
	007 Move X1, X2
	008 Move X30, [X31+16]
	009 Call NetHand.HandleStep, X0, X1, V0
	010 Return 
	011 Move X0, [X0+248]
	012 Compare X0, 0
	013 JumpIfNotEqual {7}
	014 Call 0x1C17F20

Method: System.Void HandleBlockedPlayersChanged()

Disassembly:
	0x01DB410C BL 0x1C16CF4
	0x01DB4110 ADRP X0, 0x2343000
	0x01DB4114 LDR X0, [X0 + 0xBC8]
	0x01DB4118 BL 0x1C16CF4
	0x01DB411C ADRP X0, 0x2343000
	0x01DB4120 LDR X0, [X0 + 0xAB0]
	0x01DB4124 BL 0x1C16CF4
	0x01DB4128 ADRP X0, 0x2342000
	0x01DB412C LDR X0, [X0 + 0x8B8]
	0x01DB4130 BL 0x1C16CF4
	0x01DB4134 ADRP X0, 0x2341000
	0x01DB4138 LDR X0, [X0 + 0x3A0]
	0x01DB413C BL 0x1C16CF4
	0x01DB4140 MOVZ W8, 0x1
	0x01DB4144 STRB W8, [X19 + 0xB04]
	0x01DB4148 LDR X0, [X20]
	0x01DB414C STP X31, X31, [X31 + 0x30]
	0x01DB4150 STR X31, [X31 + 0x40]
	0x01DB4154 LDR W8, [X0 + 0xE0]
	0x01DB4158 CBNZ W8, 0x1DB4160
	0x01DB415C BL 0x1C16DFC
	0x01DB4160 ADRP X8, 0x2624000
	0x01DB4164 LDRB W8, [X8 + 0x787]
	0x01DB4168 CBNZ W8, 0x1DB4184
	0x01DB416C ADRP X0, 0x233F000
	0x01DB4170 LDR X0, [X0 + 0x648]
	0x01DB4174 BL 0x1C16CF4
	0x01DB4178 MOVZ W8, 0x1
	0x01DB417C ADRP X9, 0x2624000
	0x01DB4180 STRB W8, [X9 + 0x787]
	0x01DB4184 LDR X0, [X20]
	0x01DB4188 LDR W8, [X0 + 0xE0]
	0x01DB418C CBNZ W8, 0x1DB4198
	0x01DB4190 BL 0x1C16DFC
	0x01DB4194 LDR X0, [X20]
	0x01DB4198 LDR X8, [X0 + 0xB8]
	0x01DB419C LDR X8, [X8]
	0x01DB41A0 CBZ X8, 0x1DB4704
	0x01DB41A4 LDR X8, [X8 + 0xB8]
	0x01DB41A8 CBZ X8, 0x1DB4704
	0x01DB41AC LDR X8, [X8 + 0xA0]
	0x01DB41B0 CBZ X8, 0x1DB4704
	0x01DB41B4 LDR X0, [X8 + 0x48]
	0x01DB41B8 CBZ X0, 0x1DB4704
	0x01DB41BC ADRP X8, 0x2342000
	0x01DB41C0 LDR X8, [X8 + 0x6E8]
	0x01DB41C4 ADRP X19, 0x2343000
	0x01DB41C8 LDR X1, [X8]
	0x01DB41CC LDR X19, [X19 + 0xAB0]
	0x01DB41D0 BL 0x2608758
	0x01DB41D4 LDR X8, [X19]
	0x01DB41D8 MOV X21, X0
	0x01DB41DC STR X22, [X31 + 0x10]
	0x01DB41E0 LDR W9, [X8 + 0xE0]
	0x01DB41E4 CBNZ W9, 0x1DB41F4
	0x01DB41E8 MOV X0, X8
	0x01DB41EC BL 0x1C16DFC
	0x01DB41F0 LDR X8, [X19]
	0x01DB41F4 LDR X9, [X8 + 0xB8]
	0x01DB41F8 ADRP X24, 0x2343000
	0x01DB41FC LDR X22, [X9 + 0x10]
	0x01DB4200 LDR X24, [X24 + 0xBA0]
	0x01DB4204 CBNZ X22, 0x1DB425C
	0x01DB4208 LDR W9, [X8 + 0xE0]
	0x01DB420C CBNZ W9, 0x1DB421C
	0x01DB4210 MOV X0, X8
	0x01DB4214 BL 0x1C16DFC
	0x01DB4218 LDR X8, [X19]
	0x01DB421C ADRP X9, 0x2343000
	0x01DB4220 LDR X8, [X8 + 0xB8]
	0x01DB4224 LDR X9, [X9 + 0xBB0]
	0x01DB4228 LDR X23, [X8]
	0x01DB422C LDR X0, [X9]
	0x01DB4230 BL 0x1C16F10
	0x01DB4234 ADRP X8, 0x2343000
	0x01DB4238 LDR X8, [X8 + 0xBC0]
	0x01DB423C MOV X1, X23
	0x01DB4240 MOV X3, X31
	0x01DB4244 MOV X22, X0
	0x01DB4248 LDR X2, [X8]
	0x01DB424C BL 0x2D2F428
	0x01DB4250 LDR X8, [X19]
	0x01DB4254 LDR X8, [X8 + 0xB8]
	0x01DB4258 STR X22, [X8 + 0x10]
	0x01DB425C LDR X2, [X24]
	0x01DB4260 MOV X0, X21
	0x01DB4264 MOV X1, X22
	0x01DB4268 BL 0x21DA490
	0x01DB426C LDR X8, [X19]
	0x01DB4270 MOV X21, X0
	0x01DB4274 LDR W9, [X8 + 0xE0]
	0x01DB4278 CBNZ W9, 0x1DB4288
	0x01DB427C MOV X0, X8
	0x01DB4280 BL 0x1C16DFC
	0x01DB4284 LDR X8, [X19]
	0x01DB4288 LDR X9, [X8 + 0xB8]
	0x01DB428C ADRP X26, 0x2343000
	0x01DB4290 ADRP X25, 0x2340000
	0x01DB4294 ADRP X24, 0x2343000
	0x01DB4298 LDR X22, [X9 + 0x18]
	0x01DB429C LDR X26, [X26 + 0xB98]
	0x01DB42A0 LDR X25, [X25 + 0xE30]
	0x01DB42A4 LDR X24, [X24 + 0xB70]
	0x01DB42A8 CBNZ X22, 0x1DB4300
	0x01DB42AC LDR W9, [X8 + 0xE0]
	0x01DB42B0 CBNZ W9, 0x1DB42C0
	0x01DB42B4 MOV X0, X8
	0x01DB42B8 BL 0x1C16DFC
	0x01DB42BC LDR X8, [X19]
	0x01DB42C0 ADRP X9, 0x2343000
	0x01DB42C4 LDR X8, [X8 + 0xB8]
	0x01DB42C8 LDR X9, [X9 + 0xBA8]
	0x01DB42CC LDR X23, [X8]
	0x01DB42D0 LDR X0, [X9]
	0x01DB42D4 BL 0x1C16F10
	0x01DB42D8 ADRP X8, 0x2343000
	0x01DB42DC LDR X8, [X8 + 0xBC8]
	0x01DB42E0 MOV X1, X23
	0x01DB42E4 MOV X3, X31
	0x01DB42E8 MOV X22, X0
	0x01DB42EC LDR X2, [X8]
	0x01DB42F0 BL 0x2D30578
	0x01DB42F4 LDR X8, [X19]
	0x01DB42F8 LDR X8, [X8 + 0xB8]
	0x01DB42FC STR X22, [X8 + 0x18]
	0x01DB4300 LDR X2, [X26]
	0x01DB4304 MOV X0, X21
	0x01DB4308 MOV X1, X22
	0x01DB430C BL 0x21CF224
	0x01DB4310 LDR X8, [X25]
	0x01DB4314 MOV X22, X0
	0x01DB4318 MOV X0, X8
	0x01DB431C BL 0x1C16F10
	0x01DB4320 LDR X1, [X24]
	0x01DB4324 MOV X21, X0
	0x01DB4328 BL 0x2FDBF14
	0x01DB432C CBZ X22, 0x1DB4704
	0x01DB4330 ADRP X10, 0x233F000
	0x01DB4334 LDR X8, [X22]
	0x01DB4338 LDR X10, [X10 + 0xF70]
	0x01DB433C LDRH W9, [X8 + 0x12E]
	0x01DB4340 LDR X1, [X10]
	0x01DB4344 CBZ X9, 0x1DB4368
	0x01DB4348 LDR X10, [X8 + 0xB0]
	0x01DB434C ADD X10, X10, 0x8
	0x01DB4350 LDUR X11, [X10 - 0x8]
	0x01DB4354 CMP X11, X1
	0x01DB4358 B.EQ 0x1DB4378
	0x01DB435C SUBS X9, X9, 0x1
	0x01DB4360 ADD X10, X10, 0x10
	0x01DB4364 B.NE 0x1DB4350
	0x01DB4368 MOV X0, X22
	0x01DB436C MOV W2, W31
	0x01DB4370 BL 0x1C5C788
	0x01DB4374 B 0x1DB4384
	0x01DB4378 LDRSW X9, [X10]
	0x01DB437C ADD X8, X8, X9, 0x4, LSL
	0x01DB4380 ADD X0, X8, 0x138
	0x01DB4384 LDP X8, X1, [X0]
	0x01DB4388 MOV X0, X22
	0x01DB438C BLR X8
	0x01DB4390 MOV X22, X0
	0x01DB4394 CBZ X0, 0x1DB4708
	0x01DB4398 ADRP X27, 0x233F000
	0x01DB439C ADRP X28, 0x233F000
	0x01DB43A0 ADRP X25, 0x2342000
	0x01DB43A4 ADRP X19, 0x2342000
	0x01DB43A8 ADRP X29, 0x2342000
	0x01DB43AC ADRP X24, 0x2340000
	0x01DB43B0 LDR X27, [X27 + 0xE18]
	0x01DB43B4 LDR X28, [X28 + 0xF78]
	0x01DB43B8 LDR X25, [X25 + 0x8A8]
	0x01DB43BC LDR X19, [X19 + 0x8B8]
	0x01DB43C0 LDR X29, [X29 + 0x898]
	0x01DB43C4 LDR X24, [X24 + 0x1F8]
	0x01DB43C8 LDR X8, [X22]
	0x01DB43CC LDR X1, [X27]
	0x01DB43D0 LDRH W9, [X8 + 0x12E]
	0x01DB43D4 CBZ X9, 0x1DB43F8
	0x01DB43D8 LDR X10, [X8 + 0xB0]
	0x01DB43DC ADD X10, X10, 0x8
	0x01DB43E0 LDUR X11, [X10 - 0x8]
	0x01DB43E4 CMP X11, X1
	0x01DB43E8 B.EQ 0x1DB4408
	0x01DB43EC SUBS X9, X9, 0x1
	0x01DB43F0 ADD X10, X10, 0x10
	0x01DB43F4 B.NE 0x1DB43E0
	0x01DB43F8 MOV X0, X22
	0x01DB43FC MOV W2, W31
	0x01DB4400 BL 0x1C5C788
	0x01DB4404 B 0x1DB4414
	0x01DB4408 LDRSW X9, [X10]
	0x01DB440C ADD X8, X8, X9, 0x4, LSL
	0x01DB4410 ADD X0, X8, 0x138
	0x01DB4414 LDP X8, X1, [X0]
	0x01DB4418 MOV X0, X22
	0x01DB441C BLR X8
	0x01DB4420 TBZ X0, 0x0, 0x1DB4600

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x2625000
	009 Move W8, [X20+2823]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {50}
	015 Move X0, 0x2340000
	016 Move X0, [X0+1608]
	017 Call 0x1C17CF4
	018 Move X0, 0x2340000
	019 Move X0, [X0+2736]
	020 Call 0x1C17CF4
	021 Move X0, 0x2341000
	022 Move X0, [X0+3600]
	023 Call 0x1C17CF4
	024 Move X0, 0x2344000
	025 Move X0, [X0+2920]
	026 Call 0x1C17CF4
	027 Move X0, 0x2344000
	028 Move X0, [X0+2928]
	029 Call 0x1C17CF4
	030 Move X0, 0x2341000
	031 Move X0, [X0+3632]
	032 Call 0x1C17CF4
	033 Move X0, 0x2343000
	034 Move X0, [X0+3832]
	035 Call 0x1C17CF4
	036 Move X0, 0x2343000
	037 Move X0, [X0+3840]
	038 Call 0x1C17CF4
	039 Move X0, 0x2344000
	040 Move X0, [X0+2936]
	041 Call 0x1C17CF4
	042 Move X0, 0x2342000
	043 Move X0, [X0+1040]
	044 Call 0x1C17CF4
	045 Move X0, 0x2342000
	046 Move X0, [X0+928]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X20+2823], W8
	050 Move [X31+12], W31
	051 Move X0, [X19+64]
	052 Compare X0, 0
	053 JumpIfEqual {219}
	054 Move X1, X31
	055 Call NetworkObject.get_HasInputAuthority, X0
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {211}
	060 Move W8, [X19+400]
	061 Compare W8, 0
	062 JumpIfEqual {211}
	063 Move X8, 0x2341000
	064 Move X8, [X8+3632]
	065 Move X0, [X8]
	066 Call 0x1C17F10
	067 Move X8, 0x2344000
	068 Move X8, [X8+2928]
	069 Move X20, X0
	070 Move X1, [X8]
	071 Call List`1<Int32>..ctor, X0
	072 Move X0, X19
	073 Call NetPlayer.get_blockedPlayers, X0
	074 Compare X0, 0
	075 JumpIfEqual {219}
	076 Move X8, 0x2342000
	077 Move X8, [X8+928]
	078 Move W2, W31
	079 Move X3, X31
	080 Move X1, [X8]
	081 Call String.Split, X0, X1, X2
	082 Compare X0, 0
	083 JumpIfEqual {219}
	084 Move X8, [X0+24]
	085 Move X21, X0
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X24, 0x2341000
	088 Move X24, [X24+3600]
	089 Move X22, X31
	090 And X8, X8, 0
	091 Add X23, X21, 32
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X0, [X23]
	094 Add X1, X31, 12
	095 Move X2, X31
	096 Call Int32.TryParse, X0, X1
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {123}
	101 Compare X20, 0
	102 JumpIfEqual {219}
	103 Move W10, [X20+28]
	104 Move W1, [X31+12]
	105 Move X8, [X20+16]
	106 Move X9, [X24]
	107 Add W10, W10, 1
	108 Move [X20+28], W10
	109 Compare X8, 0
	110 JumpIfEqual {219}
	111 NotImplemented "Instruction LDRSW not yet implemented."
	112 Move W11, [X8+24]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Add W9, W10, 1
	115 Add X8, X8, X10
	116 Move [X20+24], W9
	117 Move [X8+32], W1
	118 Move X8, [X9+32]
	119 Move X0, X20
	120 Move X8, [X8+192]
	121 Move X2, [X8+112]
	122 Call List`1<Int32>.AddWithResize, X0, X1
	123 Move W8, [X21+24]
	124 Add X22, X22, 1
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X21, 0x2340000
	127 Move X21, [X21+1608]
	128 Move X0, [X21]
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Move X22, 0x2625000
	134 Move W8, [X22+1927]
	135 Compare W8, 0
	136 JumpIfNotEqual {142}
	137 Move X0, 0x2340000
	138 Move X0, [X0+1608]
	139 Call 0x1C17CF4
	140 Move W8, 1
	141 Move [X22+1927], W8
	142 Move X0, [X21]
	143 Move W8, [X0+224]
	144 Compare W8, 0
	145 JumpIfNotEqual {148}
	146 Call 0x1C17DFC
	147 Move X0, [X21]
	148 Move X8, [X0+184]
	149 Move X8, [X8]
	150 Compare X8, 0
	151 JumpIfEqual {219}
	152 Move X8, [X8+224]
	153 Compare X8, 0
	154 JumpIfEqual {219}
	155 Move X0, [X8+96]
	156 Move X8, 0x2342000
	157 Move X8, [X8+1040]
	158 Move X1, [X8]
	159 Call StatePrimitive`1<Int32>.op_Implicit, X0
	160 Compare X20, 0
	161 JumpIfEqual {219}
	162 Move X8, 0x2344000
	163 Move X8, [X8+2920]
	164 Move W1, W0
	165 Move X0, X20
	166 Add X21, X19, 400
	167 Move X2, [X8]
	168 Call List`1<Int32>.Contains, X0, X1
	169 And W8, W0, 1
	170 Move [X19+368], W8
	171 Move X8, 0x2340000
	172 Move X8, [X8+2736]
	173 Move W1, 1
	174 Move X0, [X8]
	175 Call 0x1C17D6C
	176 Move X8, 0x2343000
	177 Move X8, [X8+3840]
	178 Move X20, X0
	179 Move X0, X21
	180 Move X1, [X8]
	181 Call Nullable`1<Int32>.get_Value, X0
	182 Move X8, 0x2344000
	183 Move W23, [X19+368]
	184 Move X8, [X8+2936]
	185 Move W22, W0
	186 Move X8, [X8]
	187 Move X0, X8
	188 Call 0x1C17F10
	189 Move X1, X31
	190 Move X21, X0
	191 Call BaseAction..ctor, X0
	192 Move [X21+20], W22
	193 Move [X21+24], W23
	194 Compare X20, 0
	195 JumpIfEqual {219}
	196 Move X8, [X20]
	197 Move X0, X21
	198 Move X1, [X8+64]
	199 Call 0x1C17E00
	200 Compare X0, 0
	201 JumpIfEqual {221}
	202 Move W8, [X20+24]
	203 Compare W8, 0
	204 JumpIfEqual {220}
	205 Move X0, X20
	206 Move X1, X31
	207 Move [X20+32], X21
	208 Call App.ExecuteActionOrDelay, X0
	209 Move X0, X19
	210 Call NetPlayer.UpdateSpeakerAudioSourceVolume, X0
	211 Move X20, [X31+48]
	212 Move X19, [X31+56]
	213 Move X22, [X31+32]
	214 Move X21, [X31+40]
	215 Move X24, [X31+16]
	216 Move X23, [X31+24]
	217 Move X30, [X31+64]
	218 Return 
	219 Call 0x1C17F20
	220 Call 0x1C17F28
	221 Call 0x1C17F44
	222 Move X1, X31
	223 Call 0x1C17DEC

Method: System.Void HandlePlayerDie(System.Boolean isDie)

Disassembly:
	0x01DB5B84 MOV X1, X20
	0x01DB5B88 STR W8, [X21 + 0x24]
	0x01DB5B8C ADRP X8, 0x2342000
	0x01DB5B90 LDR X8, [X8 + 0xC00]
	0x01DB5B94 LDR X2, [X8]
	0x01DB5B98 BL 0x2221954
	0x01DB5B9C CBZ X21, 0x1DB5BCC
	0x01DB5BA0 UBFM W8, W0, 0x1D, 0x1C
	0x01DB5BA4 ADD W8, W8, 0x78
	0x01DB5BA8 AND W8, W8, 0xFFFFFFE0
	0x01DB5BAC STR W8, [X21 + 0xC]
	0x01DB5BB0 LDR X0, [X19 + 0x38]
	0x01DB5BB4 CBZ X0, 0x1DB5BCC
	0x01DB5BB8 MOV X1, X21
	0x01DB5BBC MOV X2, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 And W1, W1, 1
	004 Move X19, X0
	005 Call NetPlayer.RPC_DoPlayerDie, X0, X1
	006 Move X0, [X19+64]
	007 Compare X0, 0
	008 JumpIfEqual {23}
	009 Move X1, X31
	010 Call NetworkObject.get_HasInputAuthority, X0
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {20}
	015 Move X0, X19
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Call NetPlayer.DropItemsIfHolding, X0
	019 Return 
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 Return 
	023 Call 0x1C17F20

Method: System.Void HandleLocalPlayerChannelChanged(System.Int32 playerChannel)

Disassembly:
	0x01DB5DB4 FADD S8, S8, S0

ISIL:
	001 Call NetPlayer.set_channel, X0, X1
	002 Return 

Method: System.Void HandleLocalPlayerDisplayNameStateChanged(SpatialSys.ObservableState.StateChangedEventArgs args)

Disassembly:
	0x01DB5DB8 FADD S9, S9, S1
	0x01DB5DBC FADD S10, S10, S2
	0x01DB5DC0 BL 0x3C3F830
	0x01DB5DC4 MOV X0, X20
	0x01DB5DC8 MOV X1, X31
	0x01DB5DCC MOV V11.16B, V0.16B
	0x01DB5DD0 MOV V12.16B, V1.16B
	0x01DB5DD4 MOV V13.16B, V2.16B
	0x01DB5DD8 MOV V14.16B, V3.16B
	0x01DB5DDC BL 0x3C3F830
	0x01DB5DE0 MOV V4.16B, V0.16B
	0x01DB5DE4 MOV V5.16B, V1.16B
	0x01DB5DE8 MOV V6.16B, V2.16B
	0x01DB5DEC MOV V7.16B, V3.16B
	0x01DB5DF0 MOV V0.16B, V11.16B
	0x01DB5DF4 MOV V1.16B, V12.16B
	0x01DB5DF8 MOV V2.16B, V13.16B
	0x01DB5DFC MOV V3.16B, V14.16B
	0x01DB5E00 MOV X0, X31
	0x01DB5E04 STR S15, [X31]
	0x01DB5E08 BL 0x3C2A4A0
	0x01DB5E0C MOV V4.16B, V0.16B
	0x01DB5E10 MOV V5.16B, V1.16B
	0x01DB5E14 MOV V6.16B, V2.16B
	0x01DB5E18 MOV X0, X19
	0x01DB5E1C MOV V0.16B, V8.16B
	0x01DB5E20 MOV V1.16B, V9.16B
	0x01DB5E24 MOV V2.16B, V10.16B
	0x01DB5E28 LDP X20, X19, [X31 + 0x60]
	0x01DB5E2C LDP X30, X21, [X31 + 0x50]
	0x01DB5E30 LDP D9, D8, [X31 + 0x40]
	0x01DB5E34 LDP D11, D10, [X31 + 0x30]
	0x01DB5E38 LDP D13, D12, [X31 + 0x20]
	0x01DB5E3C LDP D15, D14, [X31 + 0x10]
	0x01DB5E40 MOV V7.16B, V3.16B
	0x01DB5E44 MOV V3.16B, V4.16B
	0x01DB5E48 MOV V4.16B, V5.16B
	0x01DB5E4C MOV V5.16B, V6.16B
	0x01DB5E50 MOV V6.16B, V7.16B
	0x01DB5E54 MOV X1, X31
	0x01DB5E58 ADD X31, X31, 0x70
	0x01DB5E5C B 0x3C400B4
	0x01DB5E60 BL 0x1C16F20
	0x01DB5E64 STR D10, [X31 - 0x40]!
	0x01DB5E68 STP D9, D8, [X31 + 0x8]
	0x01DB5E6C STR X30, [X31 + 0x18]
	0x01DB5E70 STP X22, X21, [X31 + 0x20]
	0x01DB5E74 STP X20, X19, [X31 + 0x30]
	0x01DB5E78 ADRP X20, 0x2623000
	0x01DB5E7C LDRB W8, [X20 + 0xB11]
	0x01DB5E80 MOV X19, X0
	0x01DB5E84 TBNZ X8, 0x0, 0x1DB5EA8
	0x01DB5E88 ADRP X0, 0x233E000
	0x01DB5E8C LDR X0, [X0 + 0x598]
	0x01DB5E90 BL 0x1C16CF4
	0x01DB5E94 ADRP X0, 0x2340000
	0x01DB5E98 LDR X0, [X0 + 0x7C8]
	0x01DB5E9C BL 0x1C16CF4
	0x01DB5EA0 MOVZ W8, 0x1
	0x01DB5EA4 STRB W8, [X20 + 0xB11]
	0x01DB5EA8 ADRP X20, 0x233E000
	0x01DB5EAC LDR X0, [X19 + 0x40]
	0x01DB5EB0 LDR X20, [X20 + 0x598]
	0x01DB5EB4 CBZ X0, 0x1DB63B0
	0x01DB5EB8 LDRB W8, [X0 + 0x60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2624000
	006 Move X20, 0x233F000
	007 Move W8, [X21+2824]
	008 Move X20, [X20+1608]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x233F000
	015 Move X0, [X0+1608]
	016 Call 0x1C17CF4
	017 Move X0, 0x2340000
	018 Move X0, [X0+504]
	019 Call 0x1C17CF4
	020 Move X0, 0x2343000
	021 Move X0, [X0+3040]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2824], W8
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X21, 0x2624000
	031 Move W8, [X21+1927]
	032 Compare W8, 0
	033 JumpIfNotEqual {39}
	034 Move X0, 0x233F000
	035 Move X0, [X0+1608]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+1927], W8
	039 Move X0, [X20]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {45}
	043 Call 0x1C17DFC
	044 Move X0, [X20]
	045 Move X8, [X0+184]
	046 Move X8, [X8]
	047 Compare X8, 0
	048 JumpIfEqual {83}
	049 Move X8, [X8+184]
	050 Compare X8, 0
	051 JumpIfEqual {83}
	052 Move X9, 0x2340000
	053 Move X9, [X9+504]
	054 Move X0, [X8+96]
	055 Move X1, [X9]
	056 Call StatePrimitive`1<Object>.op_Implicit, X0
	057 Move X1, X0
	058 Move X0, X19
	059 Call NetPlayer.set_displayName, X0, X1
	060 Move X0, X19
	061 Call NetPlayer.get_displayName, X0
	062 Move X1, X31
	063 Call String.IsNullOrEmpty, X0
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {78}
	068 Move X8, 0x2343000
	069 Move X8, [X8+3040]
	070 Move X0, X19
	071 Move X20, [X31+16]
	072 Move X19, [X31+24]
	073 Move X1, [X8]
	074 Move X30, [X31+32]
	075 Move X21, [X31+40]
	076 Call NetPlayer.set_displayName, X0, X1
	077 Return 
	078 Move X20, [X31+16]
	079 Move X19, [X31+24]
	080 Move X30, [X31+32]
	081 Move X21, [X31+40]
	082 Return 
	083 Call 0x1C17F20

Method: System.Void DropItemsIfHolding()

Disassembly:
	0x01DB5D50 BL 0x3C3EB78
	0x01DB5D54 CBZ X20, 0x1DB5E60
	0x01DB5D58 MOV V8.16B, V0.16B
	0x01DB5D5C MOV V9.16B, V1.16B
	0x01DB5D60 FSUB S0, S11, S12
	0x01DB5D64 FMOV S1, 8
	0x01DB5D68 MOV V10.16B, V2.16B
	0x01DB5D6C FMOV S2, 1
	0x01DB5D70 FMUL S0, S0, S1
	0x01DB5D74 FMIN S1, S0, S2
	0x01DB5D78 FCMP S0, 0x0
	0x01DB5D7C FMOV S0, W31
	0x01DB5D80 MOV X0, X20
	0x01DB5D84 MOV X1, X31
	0x01DB5D88 FCSEL S15, S1, S0, PL
	0x01DB5D8C BL 0x3C3EB78
	0x01DB5D90 FSUB S0, S0, S8
	0x01DB5D94 FMOV S3, 0.5
	0x01DB5D98 FSUB S1, S1, S9
	0x01DB5D9C FSUB S2, S2, S10
	0x01DB5DA0 FMUL S0, S0, S3
	0x01DB5DA4 FMUL S1, S1, S3
	0x01DB5DA8 FMUL S2, S2, S3
	0x01DB5DAC MOV X0, X19
	0x01DB5DB0 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, [X0+232]
	005 Compare X19, 0
	006 JumpIfEqual {26}
	007 Move W8, [X19+24]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W20, W31
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Add X8, X19, W20
	012 Move X0, [X8+32]
	013 Compare X0, 0
	014 JumpIfEqual {26}
	015 Move W1, 1
	016 Move X2, X31
	017 Call AttachedItemAnchor.DropItemIfHolding, X0, X1
	018 Move W8, [X19+24]
	019 Add W20, W20, 1
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return 
	025 Call 0x1C17F28
	026 Call 0x1C17F20

Method: System.Void RepositionItemsIfHolding()

Disassembly:
	0x01DB5EBC TBNZ X8, 0x1, 0x1DB63B0
	0x01DB5EC0 MOV X1, X31
	0x01DB5EC4 BL 0x1E93588
	0x01DB5EC8 TBZ X0, 0x0, 0x1DB63B0
	0x01DB5ECC ADRP X21, 0x2340000
	0x01DB5ED0 LDR X21, [X21 + 0x7C8]
	0x01DB5ED4 LDR X0, [X21]
	0x01DB5ED8 LDR W8, [X0 + 0xE0]
	0x01DB5EDC CBNZ W8, 0x1DB5EE4
	0x01DB5EE0 BL 0x1C16DFC
	0x01DB5EE4 ADRP X22, 0x2623000
	0x01DB5EE8 LDRB W8, [X22 + 0x85D]
	0x01DB5EEC CBNZ W8, 0x1DB5F04
	0x01DB5EF0 ADRP X0, 0x2340000
	0x01DB5EF4 LDR X0, [X0 + 0x7C8]
	0x01DB5EF8 BL 0x1C16CF4
	0x01DB5EFC MOVZ W8, 0x1
	0x01DB5F00 STRB W8, [X22 + 0x85D]
	0x01DB5F04 LDR X0, [X21]
	0x01DB5F08 LDR W8, [X0 + 0xE0]
	0x01DB5F0C CBNZ W8, 0x1DB5F18
	0x01DB5F10 BL 0x1C16DFC
	0x01DB5F14 LDR X0, [X21]
	0x01DB5F18 LDR X8, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, [X0+232]
	005 Compare X19, 0
	006 JumpIfEqual {25}
	007 Move W8, [X19+24]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W20, W31
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Add X8, X19, W20
	012 Move X0, [X8+32]
	013 Compare X0, 0
	014 JumpIfEqual {25}
	015 Move X1, X31
	016 Call AttachedItemAnchor.RepositionItemIfHolding, X0
	017 Move W8, [X19+24]
	018 Add W20, W20, 1
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Return 
	024 Call 0x1C17F28
	025 Call 0x1C17F20

Method: System.Void DropItemIfHolding(AnimalCompany.AttachedLocation handSide)

Disassembly:
	0x01DB5F1C LDR X9, [X0 + 0xB8]
	0x01DB5F20 LDR W10, [X8 + 0xE0]
	0x01DB5F24 LDR X20, [X9]
	0x01DB5F28 CBNZ W10, 0x1DB5F34
	0x01DB5F2C MOV X0, X8
	0x01DB5F30 BL 0x1C16DFC
	0x01DB5F34 MOV X0, X20
	0x01DB5F38 MOV X1, X31
	0x01DB5F3C MOV X2, X31
	0x01DB5F40 BL 0x3C354F8
	0x01DB5F44 TBZ X0, 0x0, 0x1DB66D8
	0x01DB5F48 LDR X0, [X21]
	0x01DB5F4C LDR X20, [X19 + 0x88]
	0x01DB5F50 LDR W8, [X0 + 0xE0]
	0x01DB5F54 CBNZ W8, 0x1DB5F5C

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+232]
	003 Compare X8, 0
	004 JumpIfEqual {16}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Add X8, X8, W1
	008 Move X0, [X8+32]
	009 Compare X0, 0
	010 JumpIfEqual {16}
	011 Move W1, 1
	012 Move X2, X31
	013 Move X30, [X31+16]
	014 Call AttachedItemAnchor.DropItemIfHolding, X0, X1
	015 Return 
	016 Call 0x1C17F20
	017 Call 0x1C17F28

Method: System.Void RPC_DoPlayerDie(System.Boolean isDie)

Disassembly:
	0x01DB5BC0 BL 0x1EA1E24
	0x01DB5BC4 B 0x1DB5AA4
	0x01DB5BC8 BL 0x1C16F28
	0x01DB5BCC BL 0x1C16F20
	0x01DB5BD0 BL 0x3EB1B20
	0x01DB5BD4 SUB X31, X31, 0x50
	0x01DB5BD8 STP D9, D8, [X31 + 0x20]
	0x01DB5BDC STP X30, X21, [X31 + 0x30]
	0x01DB5BE0 STP X20, X19, [X31 + 0x40]
	0x01DB5BE4 MRS X21, 0xC000
	0x01DB5BE8 LDR X8, [X21 + 0x28]
	0x01DB5BEC MOV X19, X0
	0x01DB5BF0 STR X8, [X31 + 0x18]
	0x01DB5BF4 LDR X20, [X0 + 0xC8]
	0x01DB5BF8 ADD X8, X31, 0x0
	0x01DB5BFC BL 0x1DB1ABC
	0x01DB5C00 LDR V8, [X31]
	0x01DB5C04 ADD X8, X31, 0x0
	0x01DB5C08 MOV X0, X19
	0x01DB5C0C BL 0x1DB1ABC
	0x01DB5C10 LDR V9, [X31 + 0x4]
	0x01DB5C14 ADD X8, X31, 0x0
	0x01DB5C18 MOV X0, X19
	0x01DB5C1C BL 0x1DB1ABC
	0x01DB5C20 CBZ X20, 0x1DB5CB4
	0x01DB5C24 LDR V2, [X31 + 0x8]
	0x01DB5C28 MOV X0, X20
	0x01DB5C2C MOV W1, W31
	0x01DB5C30 MOV V0.16B, V8.16B
	0x01DB5C34 MOV V1.16B, V9.16B
	0x01DB5C38 MOV X2, X31
	0x01DB5C3C BL 0x1DC3744
	0x01DB5C40 LDR X20, [X19 + 0xC8]
	0x01DB5C44 ADD X8, X31, 0x0
	0x01DB5C48 MOV X0, X19
	0x01DB5C4C BL 0x1DB1ABC
	0x01DB5C50 LDR V8, [X31 + 0xC]
	0x01DB5C54 ADD X8, X31, 0x0
	0x01DB5C58 MOV X0, X19
	0x01DB5C5C BL 0x1DB1ABC
	0x01DB5C60 LDR V9, [X31 + 0x10]
	0x01DB5C64 ADD X8, X31, 0x0
	0x01DB5C68 MOV X0, X19
	0x01DB5C6C BL 0x1DB1ABC
	0x01DB5C70 CBZ X20, 0x1DB5CB4
	0x01DB5C74 LDR V2, [X31 + 0x14]
	0x01DB5C78 MOVZ W1, 0x1
	0x01DB5C7C MOV X0, X20
	0x01DB5C80 MOV V0.16B, V8.16B
	0x01DB5C84 MOV V1.16B, V9.16B
	0x01DB5C88 MOV X2, X31
	0x01DB5C8C BL 0x1DC3744
	0x01DB5C90 LDR X8, [X21 + 0x28]
	0x01DB5C94 LDR X9, [X31 + 0x18]
	0x01DB5C98 CMP X8, X9
	0x01DB5C9C B.NE 0x1DB5CB8
	0x01DB5CA0 LDP X20, X19, [X31 + 0x40]
	0x01DB5CA4 LDP X30, X21, [X31 + 0x30]
	0x01DB5CA8 LDP D9, D8, [X31 + 0x20]
	0x01DB5CAC ADD X31, X31, 0x50
	0x01DB5CB0 RET
	0x01DB5CB4 BL 0x1C16F20
	0x01DB5CB8 BL 0x3EB1B20
	0x01DB5CBC STR X30, [X31 - 0x20]!
	0x01DB5CC0 STP X20, X19, [X31 + 0x10]
	0x01DB5CC4 MOV W19, W1
	0x01DB5CC8 MOV X1, X31
	0x01DB5CCC MOV X20, X0
	0x01DB5CD0 BL 0x33BDD8C
	0x01DB5CD4 STR W19, [X20 + 0x10]
	0x01DB5CD8 LDP X20, X19, [X31 + 0x10]
	0x01DB5CDC LDR X30, [X31], #0x20
	0x01DB5CE0 RET
	0x01DB5CE4 STR X30, [X31 - 0x20]!
	0x01DB5CE8 STP X20, X19, [X31 + 0x10]
	0x01DB5CEC MOV W19, W1
	0x01DB5CF0 MOV X1, X31
	0x01DB5CF4 MOV X20, X0
	0x01DB5CF8 BL 0x33BDD8C
	0x01DB5CFC STR W19, [X20 + 0x10]
	0x01DB5D00 LDP X20, X19, [X31 + 0x10]
	0x01DB5D04 LDR X30, [X31], #0x20
	0x01DB5D08 RET
	0x01DB5D0C SUB X31, X31, 0x70
	0x01DB5D10 STP D15, D14, [X31 + 0x10]
	0x01DB5D14 STP D13, D12, [X31 + 0x20]
	0x01DB5D18 STP D11, D10, [X31 + 0x30]
	0x01DB5D1C STP D9, D8, [X31 + 0x40]
	0x01DB5D20 STP X30, X21, [X31 + 0x50]
	0x01DB5D24 STP X20, X19, [X31 + 0x60]
	0x01DB5D28 MOV X21, X0
	0x01DB5D2C MOV X0, X31
	0x01DB5D30 MOV X20, X2
	0x01DB5D34 MOV X19, X1
	0x01DB5D38 BL 0x3C3C6C4
	0x01DB5D3C CBZ X19, 0x1DB5E60
	0x01DB5D40 LDR V12, [X21 + 0x1D0]
	0x01DB5D44 MOV X0, X19
	0x01DB5D48 MOV X1, X31
	0x01DB5D4C MOV V11.16B, V0.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2624000
	006 Move W8, [X21+2825]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x2342000
	014 Move X0, [X0+2680]
	015 Call 0x1C17CF4
	016 Move X0, 0x2343000
	017 Move X0, [X0+3032]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2825], W8
	021 Move W8, [X19+88]
	022 Compare W8, 0
	023 JumpIfEqual {33}
	024 Move [X19+88], W31
	025 And W1, W20, 1
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call NetPlayer.set_isDie, X0, X1
	032 Return 
	033 Move X21, 0x2342000
	034 Move X21, [X21+2680]
	035 Move X0, [X21]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	043 Move X0, [X19+56]
	044 Compare X0, 0
	045 JumpIfEqual {135}
	046 Move X1, X31
	047 Call NetworkRunner.get_Stage, X0
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Return 
	054 Move X0, [X19+64]
	055 Compare X0, 0
	056 JumpIfEqual {135}
	057 Move X1, X31
	058 Call NetworkObject.GetLocalAuthorityMask, X0
	059 Move TEMP, X0
	060 And TEMP, TEMP, 2
	061 Compare TEMP, 2
	062 JumpIfEqual {81}
	063 Move X0, [X21]
	064 Move X19, [X19+64]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X8, 0x2343000
	070 Move X8, [X8+3032]
	071 Move X1, X19
	072 Move X20, [X31+16]
	073 Move X19, [X31+24]
	074 Move W2, 2
	075 Move X0, [X8]
	076 Move X3, X31
	077 Move X30, [X31+32]
	078 Move X21, [X31+40]
	079 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	080 Return 
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfEqual {25}
	085 Move X8, [X19+56]
	086 Compare X8, 0
	087 JumpIfEqual {135}
	088 Move X0, [X8+80]
	089 Compare X0, 0
	090 JumpIfEqual {135}
	091 Move X1, X31
	092 Call Simulation.HasAnyActiveConnections, X0
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {49}
	097 Move X8, [X19+56]
	098 Compare X8, 0
	099 JumpIfEqual {135}
	100 Move X0, [X8+80]
	101 Move W1, 12
	102 Move X2, X31
	103 Call SimulationMessage.Allocate, X0, X1
	104 Move X8, [X19+64]
	105 Compare X8, 0
	106 JumpIfEqual {135}
	107 Move X8, [X8+32]
	108 Move X21, X0
	109 Compare X8, 0
	110 JumpIfEqual {112}
	111 Move W0, [X8]
	112 Move X0, X31
	113 Move W1, [X19+104]
	114 Move W2, 1
	115 Move X3, X31
	116 Call RpcHeader.Create, X0, X1, X2
	117 And W8, W20, 1
	118 Move [X21+28], X0
	119 Move [X21+36], W8
	120 Compare X21, 0
	121 JumpIfEqual {135}
	122 Move W8, 96
	123 Move [X21+12], W8
	124 Move X0, [X19+56]
	125 Compare X0, 0
	126 JumpIfEqual {135}
	127 Move X20, [X31+16]
	128 Move X19, [X31+24]
	129 Move X1, X21
	130 Move X2, X31
	131 Move X30, [X31+32]
	132 Move X21, [X31+40]
	133 Call NetworkRunner.SendRpc, X0, X1
	134 Return 
	135 Call 0x1C17F20

Method: System.Void FixedUpdateNetwork()

Disassembly:
	0x01DB5F58 BL 0x1C16DFC
	0x01DB5F5C LDRB W8, [X22 + 0x85D]
	0x01DB5F60 CBNZ W8, 0x1DB5F78
	0x01DB5F64 ADRP X0, 0x2340000
	0x01DB5F68 LDR X0, [X0 + 0x7C8]
	0x01DB5F6C BL 0x1C16CF4
	0x01DB5F70 MOVZ W8, 0x1
	0x01DB5F74 STRB W8, [X22 + 0x85D]
	0x01DB5F78 LDR X0, [X21]
	0x01DB5F7C LDR W8, [X0 + 0xE0]
	0x01DB5F80 CBNZ W8, 0x1DB5F8C
	0x01DB5F84 BL 0x1C16DFC
	0x01DB5F88 LDR X0, [X21]
	0x01DB5F8C LDR X8, [X0 + 0xB8]
	0x01DB5F90 LDR X8, [X8]
	0x01DB5F94 CBZ X8, 0x1DB66F0
	0x01DB5F98 LDR X0, [X8 + 0x50]
	0x01DB5F9C CBZ X0, 0x1DB66F0
	0x01DB5FA0 MOV X1, X31
	0x01DB5FA4 BL 0x3C3F58C
	0x01DB5FA8 LDRB W8, [X22 + 0x85D]
	0x01DB5FAC MOV V8.16B, V0.16B
	0x01DB5FB0 MOV V9.16B, V1.16B
	0x01DB5FB4 MOV V10.16B, V2.16B
	0x01DB5FB8 CBNZ W8, 0x1DB5FD0
	0x01DB5FBC ADRP X0, 0x2340000
	0x01DB5FC0 LDR X0, [X0 + 0x7C8]
	0x01DB5FC4 BL 0x1C16CF4
	0x01DB5FC8 MOVZ W8, 0x1
	0x01DB5FCC STRB W8, [X22 + 0x85D]
	0x01DB5FD0 LDR X0, [X21]
	0x01DB5FD4 LDR W8, [X0 + 0xE0]
	0x01DB5FD8 CBNZ W8, 0x1DB5FE4
	0x01DB5FDC BL 0x1C16DFC
	0x01DB5FE0 LDR X0, [X21]
	0x01DB5FE4 LDR X8, [X0 + 0xB8]
	0x01DB5FE8 LDR X8, [X8]
	0x01DB5FEC CBZ X8, 0x1DB66F0
	0x01DB5FF0 LDR X0, [X8 + 0x50]
	0x01DB5FF4 CBZ X0, 0x1DB66F0
	0x01DB5FF8 MOV X1, X31
	0x01DB5FFC BL 0x3C3FA04
	0x01DB6000 MOV X0, X31
	0x01DB6004 BL 0x1DC0890
	0x01DB6008 MOV X0, X31
	0x01DB600C BL 0x3C2A8C4
	0x01DB6010 CBZ X20, 0x1DB66F0
	0x01DB6014 MOV V4.16B, V0.16B
	0x01DB6018 MOV V5.16B, V1.16B
	0x01DB601C MOV V6.16B, V2.16B
	0x01DB6020 MOV V7.16B, V3.16B
	0x01DB6024 MOV X0, X20
	0x01DB6028 MOV V0.16B, V8.16B
	0x01DB602C MOV V1.16B, V9.16B
	0x01DB6030 MOV V2.16B, V10.16B
	0x01DB6034 MOV V3.16B, V4.16B
	0x01DB6038 MOV V4.16B, V5.16B
	0x01DB603C MOV V5.16B, V6.16B
	0x01DB6040 MOV V6.16B, V7.16B
	0x01DB6044 MOV X1, X31
	0x01DB6048 BL 0x3C40000
	0x01DB604C LDRB W8, [X22 + 0x85D]
	0x01DB6050 LDR X20, [X19 + 0x90]
	0x01DB6054 CBNZ W8, 0x1DB606C
	0x01DB6058 ADRP X0, 0x233F000
	0x01DB605C LDR X0, [X0 + 0x7C8]
	0x01DB6060 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 400
	002 Move [X31+352], X29
	003 Move [X31+360], X30
	004 Move [X31+368], X22
	005 Move [X31+376], X21
	006 Move [X31+384], X20
	007 Move [X31+392], X19
	008 NotImplemented "Instruction MRS not yet implemented."
	009 Move X8, [X21+40]
	010 Move X22, 0x2624000
	011 Move X20, 0x2343000
	012 Move X19, X0
	013 Move [X31+344], X8
	014 Move W8, [X22+2826]
	015 Move X20, [X20+3048]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x2343000
	021 Move X0, [X0+3048]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2826], W8
	025 Add X0, X31, 176
	026 Move W2, 168
	027 Move W1, W31
	028 Call 0x3EB2B10
	029 Move X0, X19
	030 Move X1, X31
	031 Call NetworkBehaviour.FixedUpdateNetwork, X0
	032 Move X2, [X20]
	033 Add X1, X31, 176
	034 Move X0, X19
	035 Call 0x222712C, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {47}
	040 Add X0, X31, 8
	041 Add X1, X31, 176
	042 Move W2, 168
	043 Call 0x3EB2AC0
	044 Add X1, X31, 8
	045 Move X0, X19
	046 Call NetPlayer.UpdateFromInput, X0, X1
	047 Move X20, [X19+56]
	048 Compare X20, 0
	049 JumpIfEqual {78}
	050 Move W8, [X20+392]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X0, X20
	053 Move X1, X31
	054 Call NetworkRunner.get_LocalPlayer, X0
	055 Move X8, [X19+144]
	056 Compare X8, 0
	057 JumpIfEqual {78}
	058 Move X19, X0
	059 Move X0, X8
	060 Move X1, X31
	061 Call Transform.get_position, X0
	062 And X1, X19, 0
	063 Move S3, 5
	064 Move X0, X20
	065 Move X2, X31
	066 Call NetworkRunner.AddPlayerAreaOfInterest, X0, X1, X2, V0
	067 Move X8, [X21+40]
	068 Move X9, [X31+344]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X20, [X31+384]
	071 Move X19, [X31+392]
	072 Move X22, [X31+368]
	073 Move X21, [X31+376]
	074 Move X29, [X31+352]
	075 Move X30, [X31+360]
	076 Add X31, X31, 400
	077 Return 
	078 Call 0x1C17F20
	079 Call 0x3EB2B20

Method: System.Void Render()

Disassembly:
	0x01DB6454 MOV V5.16B, V6.16B
	0x01DB6458 MOV V6.16B, V7.16B
	0x01DB645C MOV X1, X31
	0x01DB6460 BL 0x3C40000
	0x01DB6464 LDR X9, [X19 + 0x1B8]
	0x01DB6468 LDR X8, [X19 + 0xB8]
	0x01DB646C LDR X20, [X19 + 0x90]
	0x01DB6470 CMP X9, X8
	0x01DB6474 B.EQ 0x1DB6604
	0x01DB6478 LDR X0, [X21 + 0x18]
	0x01DB647C CBZ X0, 0x1DB66F0
	0x01DB6480 MOV X1, X31
	0x01DB6484 BL 0x3C32E90
	0x01DB6488 CBZ X0, 0x1DB66F0
	0x01DB648C MOV X1, X31
	0x01DB6490 BL 0x3C3EB78
	0x01DB6494 LDR X0, [X21 + 0x18]
	0x01DB6498 CBZ X0, 0x1DB66F0
	0x01DB649C MOV X1, X31
	0x01DB64A0 MOV V8.16B, V0.16B
	0x01DB64A4 MOV V9.16B, V1.16B
	0x01DB64A8 MOV V10.16B, V2.16B
	0x01DB64AC BL 0x3C32E90
	0x01DB64B0 CBZ X0, 0x1DB66F0
	0x01DB64B4 MOV X1, X31
	0x01DB64B8 BL 0x3C3F830
	0x01DB64BC CBZ X20, 0x1DB66F0
	0x01DB64C0 MOV V4.16B, V0.16B
	0x01DB64C4 MOV V5.16B, V1.16B
	0x01DB64C8 MOV V6.16B, V2.16B
	0x01DB64CC MOV V7.16B, V3.16B
	0x01DB64D0 MOV X0, X20
	0x01DB64D4 MOV V0.16B, V8.16B
	0x01DB64D8 MOV V1.16B, V9.16B
	0x01DB64DC MOV V2.16B, V10.16B
	0x01DB64E0 MOV V3.16B, V4.16B
	0x01DB64E4 MOV V4.16B, V5.16B
	0x01DB64E8 MOV V5.16B, V6.16B
	0x01DB64EC MOV V6.16B, V7.16B
	0x01DB64F0 MOV X1, X31
	0x01DB64F4 BL 0x3C400B4
	0x01DB64F8 LDR X0, [X21 + 0x28]
	0x01DB64FC CBZ X0, 0x1DB66F0
	0x01DB6500 LDR X20, [X19 + 0x98]
	0x01DB6504 MOV X1, X31
	0x01DB6508 BL 0x3C32E90
	0x01DB650C CBZ X0, 0x1DB66F0
	0x01DB6510 MOV X1, X31
	0x01DB6514 BL 0x3C3EB78
	0x01DB6518 LDR X0, [X21 + 0x28]
	0x01DB651C CBZ X0, 0x1DB66F0
	0x01DB6520 MOV X1, X31
	0x01DB6524 MOV V8.16B, V0.16B
	0x01DB6528 MOV V9.16B, V1.16B
	0x01DB652C MOV V10.16B, V2.16B
	0x01DB6530 BL 0x3C32E90
	0x01DB6534 CBZ X0, 0x1DB66F0
	0x01DB6538 MOV X1, X31
	0x01DB653C BL 0x3C3F830
	0x01DB6540 CBZ X20, 0x1DB66F0
	0x01DB6544 MOV V4.16B, V0.16B
	0x01DB6548 MOV V5.16B, V1.16B
	0x01DB654C MOV V6.16B, V2.16B
	0x01DB6550 MOV V7.16B, V3.16B
	0x01DB6554 MOV X0, X20
	0x01DB6558 MOV V0.16B, V8.16B
	0x01DB655C MOV V1.16B, V9.16B
	0x01DB6560 MOV V2.16B, V10.16B
	0x01DB6564 MOV V3.16B, V4.16B
	0x01DB6568 MOV V4.16B, V5.16B
	0x01DB656C MOV V5.16B, V6.16B

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2623000
	007 Move X20, 0x233E000
	008 Move W8, [X21+2827]
	009 Move X20, [X20+1432]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x2342000
	016 Move X0, [X0+3056]
	017 Call 0x1C17CF4
	018 Move X0, 0x2342000
	019 Move X0, [X0+3064]
	020 Call 0x1C17CF4
	021 Move X0, 0x233E000
	022 Move X0, [X0+1432]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2827], W8
	026 Move X0, X19
	027 Move X1, X31
	028 Call SimulationBehaviour.Render, X0
	029 Move X0, [X20]
	030 Move X20, [X19+56]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X20
	036 Move X1, X31
	037 Move X2, X31
	038 Call Object.op_Inequality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {80}
	043 Move X0, [X19+56]
	044 Compare X0, 0
	045 JumpIfEqual {89}
	046 Move X1, [X19+192]
	047 Move X2, X31
	048 Call NetworkRunner.Exists, X0, X1
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {80}
	053 Move X21, [X19+56]
	054 Compare X21, 0
	055 JumpIfEqual {89}
	056 Move X20, [X19+192]
	057 Move X0, X21
	058 Move X1, X31
	059 Call NetworkRunner.get_LocalPlayer, X0
	060 Move X8, [X21+80]
	061 Compare X8, 0
	062 JumpIfEqual {80}
	063 And X2, X0, 0
	064 Move X0, X8
	065 Move X1, X20
	066 Move X3, X31
	067 Call 0x1DC0658
	068 And W31, W0, 255
	069 NotImplemented "Instruction STRH not yet implemented."
	070 Move X8, 0x2342000
	071 Move X8, [X8+3064]
	072 Add X0, X31, 12
	073 Move X1, [X8]
	074 Call Nullable`1<Boolean>.get_Value, X0
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {80}
	079 Add X8, X19, 176
	080 Add X8, X19, 184
	081 Move X8, [X8]
	082 Move X30, [X31+16]
	083 Move X21, [X31+24]
	084 Move [X19+440], X8
	085 Move X20, [X31+32]
	086 Move X19, [X31+40]
	087 Add X31, X31, 48
	088 Return 
	089 Call 0x1C17F20

Method: System.Void UpdateTransformWithThreshold(UnityEngine.Transform rigTransform, UnityEngine.Vector3 pos, UnityEngine.Quaternion rot, System.Single moveThreshold, System.Single rotateThreshold)

Disassembly:
	0x01DB6570 MOV V6.16B, V7.16B
	0x01DB6574 MOV X1, X31
	0x01DB6578 BL 0x3C400B4
	0x01DB657C LDR X0, [X21 + 0x20]
	0x01DB6580 CBZ X0, 0x1DB66F0
	0x01DB6584 LDR X20, [X19 + 0xA0]
	0x01DB6588 MOV X1, X31
	0x01DB658C BL 0x3C32E90
	0x01DB6590 CBZ X0, 0x1DB66F0
	0x01DB6594 MOV X1, X31
	0x01DB6598 BL 0x3C3EB78
	0x01DB659C LDR X0, [X21 + 0x20]
	0x01DB65A0 CBZ X0, 0x1DB66F0
	0x01DB65A4 MOV X1, X31
	0x01DB65A8 MOV V8.16B, V0.16B
	0x01DB65AC MOV V9.16B, V1.16B
	0x01DB65B0 MOV V10.16B, V2.16B
	0x01DB65B4 BL 0x3C32E90
	0x01DB65B8 CBZ X0, 0x1DB66F0
	0x01DB65BC MOV X1, X31
	0x01DB65C0 BL 0x3C3F830
	0x01DB65C4 CBZ X20, 0x1DB66F0
	0x01DB65C8 MOV V4.16B, V0.16B
	0x01DB65CC MOV V5.16B, V1.16B
	0x01DB65D0 MOV V6.16B, V2.16B
	0x01DB65D4 MOV V7.16B, V3.16B
	0x01DB65D8 MOV X0, X20
	0x01DB65DC MOV V0.16B, V8.16B
	0x01DB65E0 MOV V1.16B, V9.16B
	0x01DB65E4 MOV V2.16B, V10.16B
	0x01DB65E8 MOV V3.16B, V4.16B
	0x01DB65EC MOV V4.16B, V5.16B
	0x01DB65F0 MOV V5.16B, V6.16B
	0x01DB65F4 MOV V6.16B, V7.16B
	0x01DB65F8 MOV X1, X31
	0x01DB65FC BL 0x3C400B4
	0x01DB6600 B 0x1DB6648
	0x01DB6604 CBZ X8, 0x1DB66F0
	0x01DB6608 LDR X2, [X8 + 0x18]
	0x01DB660C MOV X0, X19
	0x01DB6610 MOV X1, X20
	0x01DB6614 BL 0x1DB5D0C
	0x01DB6618 LDR X8, [X19 + 0xB8]
	0x01DB661C CBZ X8, 0x1DB66F0
	0x01DB6620 LDR X1, [X19 + 0x98]
	0x01DB6624 LDR X2, [X8 + 0x28]
	0x01DB6628 MOV X0, X19
	0x01DB662C BL 0x1DB5D0C
	0x01DB6630 LDR X8, [X19 + 0xB8]
	0x01DB6634 CBZ X8, 0x1DB66F0
	0x01DB6638 LDR X1, [X19 + 0xA0]
	0x01DB663C LDR X2, [X8 + 0x20]
	0x01DB6640 MOV X0, X19
	0x01DB6644 BL 0x1DB5D0C
	0x01DB6648 LDR X8, [X19 + 0xC8]
	0x01DB664C CBZ X8, 0x1DB66F0
	0x01DB6650 LDR X0, [X8 + 0x80]
	0x01DB6654 CBZ X0, 0x1DB66F0
	0x01DB6658 LDR X20, [X19 + 0xA8]
	0x01DB665C MOV X1, X31
	0x01DB6660 BL 0x3C3F58C
	0x01DB6664 LDR X8, [X19 + 0xC8]
	0x01DB6668 CBZ X8, 0x1DB66F0
	0x01DB666C LDR X0, [X8 + 0x80]
	0x01DB6670 CBZ X0, 0x1DB66F0
	0x01DB6674 MOV V8.16B, V0.16B
	0x01DB6678 MOV V9.16B, V1.16B
	0x01DB667C MOV V10.16B, V2.16B
	0x01DB6680 MOV X1, X31
	0x01DB6684 BL 0x3C3DEB4
	0x01DB6688 CBZ X20, 0x1DB66F0
	0x01DB668C MOV V4.16B, V0.16B
	0x01DB6690 MOV V5.16B, V1.16B
	0x01DB6694 MOV X0, X20
	0x01DB6698 MOV V0.16B, V8.16B
	0x01DB669C MOV V1.16B, V9.16B
	0x01DB66A0 LDP X20, X19, [X31 + 0x30]
	0x01DB66A4 LDP X22, X21, [X31 + 0x20]
	0x01DB66A8 LDR X30, [X31 + 0x18]
	0x01DB66AC LDP D9, D8, [X31 + 0x8]
	0x01DB66B0 MOV V6.16B, V2.16B
	0x01DB66B4 MOV V7.16B, V3.16B
	0x01DB66B8 MOV V2.16B, V10.16B
	0x01DB66BC MOV V3.16B, V4.16B

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+88], X19
	012 Compare X1, 0
	013 JumpIfEqual {98}
	014 Move V14, V0
	015 Move V0, [X31+96]
	016 Move X19, X1
	017 Move X0, X1
	018 Move X1, X31
	019 Move V15, V7
	020 Move V8, V6
	021 Move V9, V5
	022 Move V10, V4
	023 Move V11, V3
	024 Move V12, V2
	025 Move V13, V1
	026 Move [X31+12], S0
	027 Call Transform.get_position, X0
	028 Subtract S0, S14, S0
	029 Subtract S1, S13, S1
	030 Subtract S2, S12, S2
	031 Multiply S0, S0, S0
	032 Multiply S1, S1, S1
	033 Add S0, S0, S1
	034 Multiply S1, S2, S2
	035 Add S0, S1, S0
	036 NotImplemented "Instruction FCMP not yet implemented."
	037 Move X0, X19
	038 Move X1, X31
	039 Call Transform.get_rotation, X0
	040 Multiply S0, S11, S0
	041 Multiply S1, S10, S1
	042 Multiply S2, S9, S2
	043 Move X8, -19705856
	044 Add S0, S0, S1
	045 Multiply S3, S8, S3
	046 Move V1, [X8+436]
	047 Add S0, S2, S0
	048 Add S0, S3, S0
	049 NotImplemented "Instruction FABS not yet implemented."
	050 Move S2, 1
	051 NotImplemented "Instruction FMINNM not yet implemented."
	052 NotImplemented "Instruction FCMP not yet implemented."
	053 Move S1, W31
	054 Call 0x3EB2BB0
	055 Move X8, -19705856
	056 Move V1, [X8+1096]
	057 Add S0, S0, S0
	058 Multiply S1, S0, S1
	059 Move V0, [X31+12]
	060 NotImplemented "Instruction FCMP not yet implemented."
	061 Move X0, X19
	062 Move V0, V14
	063 Move V1, V13
	064 Move V2, V12
	065 Move X1, X31
	066 Call Transform.set_position, X0, X1
	067 Move X0, X19
	068 Move V0, V11
	069 Move V1, V10
	070 Move V2, V9
	071 Move V3, V8
	072 Move X30, [X31+80]
	073 Move X19, [X31+88]
	074 Move D9, [X31+64]
	075 Move D8, [X31+72]
	076 Move D11, [X31+48]
	077 Move D10, [X31+56]
	078 Move D13, [X31+32]
	079 Move D12, [X31+40]
	080 Move D15, [X31+16]
	081 Move D14, [X31+24]
	082 Move X1, X31
	083 Add X31, X31, 96
	084 Call Transform.set_rotation, X0, X1
	085 Return 
	086 Move X30, [X31+80]
	087 Move X19, [X31+88]
	088 Move D9, [X31+64]
	089 Move D8, [X31+72]
	090 Move D11, [X31+48]
	091 Move D10, [X31+56]
	092 Move D13, [X31+32]
	093 Move D12, [X31+40]
	094 Move D15, [X31+16]
	095 Move D14, [X31+24]
	096 Add X31, X31, 96
	097 Return 
	098 Call 0x1C17F20

Method: System.Void UpdateFromInput(AnimalCompany.NetPlayerInput input)

Disassembly:
	0x01DB6064 MOVZ W8, 0x1
	0x01DB6068 STRB W8, [X22 + 0x85D]
	0x01DB606C LDR X0, [X21]
	0x01DB6070 LDR W8, [X0 + 0xE0]
	0x01DB6074 CBNZ W8, 0x1DB6080
	0x01DB6078 BL 0x1C16DFC
	0x01DB607C LDR X0, [X21]
	0x01DB6080 LDR X8, [X0 + 0xB8]
	0x01DB6084 LDR X8, [X8]
	0x01DB6088 CBZ X8, 0x1DB66F0
	0x01DB608C LDR X0, [X8 + 0x58]
	0x01DB6090 CBZ X0, 0x1DB66F0
	0x01DB6094 MOV X1, X31
	0x01DB6098 BL 0x3C3F58C
	0x01DB609C LDRB W8, [X22 + 0x85D]
	0x01DB60A0 MOV V8.16B, V0.16B
	0x01DB60A4 MOV V9.16B, V1.16B
	0x01DB60A8 MOV V10.16B, V2.16B
	0x01DB60AC CBNZ W8, 0x1DB60C4
	0x01DB60B0 ADRP X0, 0x233F000
	0x01DB60B4 LDR X0, [X0 + 0x7C8]
	0x01DB60B8 BL 0x1C16CF4
	0x01DB60BC MOVZ W8, 0x1
	0x01DB60C0 STRB W8, [X22 + 0x85D]
	0x01DB60C4 LDR X0, [X21]
	0x01DB60C8 LDR W8, [X0 + 0xE0]
	0x01DB60CC CBNZ W8, 0x1DB60D8
	0x01DB60D0 BL 0x1C16DFC
	0x01DB60D4 LDR X0, [X21]
	0x01DB60D8 LDR X8, [X0 + 0xB8]
	0x01DB60DC LDR X8, [X8]
	0x01DB60E0 CBZ X8, 0x1DB66F0
	0x01DB60E4 LDR X0, [X8 + 0x58]
	0x01DB60E8 CBZ X0, 0x1DB66F0
	0x01DB60EC MOV X1, X31
	0x01DB60F0 BL 0x3C32E90
	0x01DB60F4 CBZ X0, 0x1DB66F0
	0x01DB60F8 MOV X1, X31
	0x01DB60FC BL 0x3C3DEB4
	0x01DB6100 CBZ X20, 0x1DB66F0
	0x01DB6104 MOV V4.16B, V0.16B
	0x01DB6108 MOV V5.16B, V1.16B
	0x01DB610C MOV V6.16B, V2.16B
	0x01DB6110 MOV V7.16B, V3.16B
	0x01DB6114 MOV X0, X20
	0x01DB6118 MOV V0.16B, V8.16B
	0x01DB611C MOV V1.16B, V9.16B
	0x01DB6120 MOV V2.16B, V10.16B
	0x01DB6124 MOV V3.16B, V4.16B
	0x01DB6128 MOV V4.16B, V5.16B
	0x01DB612C MOV V5.16B, V6.16B
	0x01DB6130 MOV V6.16B, V7.16B
	0x01DB6134 MOV X1, X31
	0x01DB6138 BL 0x3C40000
	0x01DB613C LDRB W8, [X22 + 0x85D]
	0x01DB6140 LDR X20, [X19 + 0x98]
	0x01DB6144 CBNZ W8, 0x1DB615C
	0x01DB6148 ADRP X0, 0x233F000
	0x01DB614C LDR X0, [X0 + 0x7C8]
	0x01DB6150 BL 0x1C16CF4
	0x01DB6154 MOVZ W8, 0x1
	0x01DB6158 STRB W8, [X22 + 0x85D]
	0x01DB615C LDR X0, [X21]
	0x01DB6160 LDR W8, [X0 + 0xE0]
	0x01DB6164 CBNZ W8, 0x1DB6170
	0x01DB6168 BL 0x1C16DFC
	0x01DB616C LDR X0, [X21]
	0x01DB6170 LDR X8, [X0 + 0xB8]
	0x01DB6174 LDR X8, [X8]
	0x01DB6178 CBZ X8, 0x1DB66F0
	0x01DB617C LDR X0, [X8 + 0x60]
	0x01DB6180 CBZ X0, 0x1DB66F0
	0x01DB6184 MOV X1, X31
	0x01DB6188 BL 0x3C3F58C
	0x01DB618C LDRB W8, [X22 + 0x85D]
	0x01DB6190 MOV V8.16B, V0.16B
	0x01DB6194 MOV V9.16B, V1.16B
	0x01DB6198 MOV V10.16B, V2.16B
	0x01DB619C CBNZ W8, 0x1DB61B4
	0x01DB61A0 ADRP X0, 0x233F000
	0x01DB61A4 LDR X0, [X0 + 0x7C8]
	0x01DB61A8 BL 0x1C16CF4
	0x01DB61AC MOVZ W8, 0x1
	0x01DB61B0 STRB W8, [X22 + 0x85D]
	0x01DB61B4 LDR X0, [X21]
	0x01DB61B8 LDR W8, [X0 + 0xE0]
	0x01DB61BC CBNZ W8, 0x1DB61C8
	0x01DB61C0 BL 0x1C16DFC
	0x01DB61C4 LDR X0, [X21]
	0x01DB61C8 LDR X8, [X0 + 0xB8]
	0x01DB61CC LDR X8, [X8]
	0x01DB61D0 CBZ X8, 0x1DB66F0
	0x01DB61D4 LDR X0, [X8 + 0x70]
	0x01DB61D8 CBZ X0, 0x1DB66F0
	0x01DB61DC MOV X1, X31
	0x01DB61E0 BL 0x3C3DEB4
	0x01DB61E4 CBZ X20, 0x1DB66F0
	0x01DB61E8 MOV V4.16B, V0.16B
	0x01DB61EC MOV V5.16B, V1.16B
	0x01DB61F0 MOV V6.16B, V2.16B
	0x01DB61F4 MOV V7.16B, V3.16B
	0x01DB61F8 MOV X0, X20
	0x01DB61FC MOV V0.16B, V8.16B
	0x01DB6200 MOV V1.16B, V9.16B
	0x01DB6204 MOV V2.16B, V10.16B
	0x01DB6208 MOV V3.16B, V4.16B
	0x01DB620C MOV V4.16B, V5.16B
	0x01DB6210 MOV V5.16B, V6.16B
	0x01DB6214 MOV V6.16B, V7.16B
	0x01DB6218 MOV X1, X31
	0x01DB621C BL 0x3C40000
	0x01DB6220 LDRB W8, [X22 + 0x85D]
	0x01DB6224 LDR X20, [X19 + 0xA0]
	0x01DB6228 CBNZ W8, 0x1DB6240
	0x01DB622C ADRP X0, 0x233F000
	0x01DB6230 LDR X0, [X0 + 0x7C8]
	0x01DB6234 BL 0x1C16CF4
	0x01DB6238 MOVZ W8, 0x1
	0x01DB623C STRB W8, [X22 + 0x85D]
	0x01DB6240 LDR X0, [X21]
	0x01DB6244 LDR W8, [X0 + 0xE0]
	0x01DB6248 CBNZ W8, 0x1DB6254
	0x01DB624C BL 0x1C16DFC
	0x01DB6250 LDR X0, [X21]
	0x01DB6254 LDR X8, [X0 + 0xB8]
	0x01DB6258 LDR X8, [X8]
	0x01DB625C CBZ X8, 0x1DB66F0
	0x01DB6260 LDR X0, [X8 + 0x68]
	0x01DB6264 CBZ X0, 0x1DB66F0
	0x01DB6268 MOV X1, X31
	0x01DB626C BL 0x3C3F58C
	0x01DB6270 LDRB W8, [X22 + 0x85D]
	0x01DB6274 MOV V8.16B, V0.16B
	0x01DB6278 MOV V9.16B, V1.16B
	0x01DB627C MOV V10.16B, V2.16B
	0x01DB6280 CBNZ W8, 0x1DB6298
	0x01DB6284 ADRP X0, 0x233F000
	0x01DB6288 LDR X0, [X0 + 0x7C8]
	0x01DB628C BL 0x1C16CF4
	0x01DB6290 MOVZ W8, 0x1
	0x01DB6294 STRB W8, [X22 + 0x85D]
	0x01DB6298 LDR X0, [X21]
	0x01DB629C LDR W8, [X0 + 0xE0]
	0x01DB62A0 CBNZ W8, 0x1DB62AC
	0x01DB62A4 BL 0x1C16DFC
	0x01DB62A8 LDR X0, [X21]
	0x01DB62AC LDR X8, [X0 + 0xB8]
	0x01DB62B0 LDR X8, [X8]
	0x01DB62B4 CBZ X8, 0x1DB66F0
	0x01DB62B8 LDR X0, [X8 + 0x78]
	0x01DB62BC CBZ X0, 0x1DB66F0
	0x01DB62C0 MOV X1, X31
	0x01DB62C4 BL 0x3C3DEB4
	0x01DB62C8 CBZ X20, 0x1DB66F0
	0x01DB62CC MOV V4.16B, V0.16B
	0x01DB62D0 MOV V5.16B, V1.16B
	0x01DB62D4 MOV V6.16B, V2.16B
	0x01DB62D8 MOV V7.16B, V3.16B
	0x01DB62DC MOV X0, X20
	0x01DB62E0 MOV V0.16B, V8.16B
	0x01DB62E4 MOV V1.16B, V9.16B
	0x01DB62E8 MOV V2.16B, V10.16B
	0x01DB62EC MOV V3.16B, V4.16B
	0x01DB62F0 MOV V4.16B, V5.16B
	0x01DB62F4 MOV V5.16B, V6.16B
	0x01DB62F8 MOV V6.16B, V7.16B
	0x01DB62FC MOV X1, X31
	0x01DB6300 BL 0x3C40000
	0x01DB6304 LDRB W8, [X22 + 0x85D]
	0x01DB6308 LDR X20, [X19 + 0xA8]
	0x01DB630C CBNZ W8, 0x1DB6324
	0x01DB6310 ADRP X0, 0x233F000
	0x01DB6314 LDR X0, [X0 + 0x7C8]
	0x01DB6318 BL 0x1C16CF4
	0x01DB631C MOVZ W8, 0x1
	0x01DB6320 STRB W8, [X22 + 0x85D]
	0x01DB6324 LDR X0, [X21]
	0x01DB6328 LDR W8, [X0 + 0xE0]
	0x01DB632C CBNZ W8, 0x1DB6338
	0x01DB6330 BL 0x1C16DFC
	0x01DB6334 LDR X0, [X21]
	0x01DB6338 LDR X8, [X0 + 0xB8]
	0x01DB633C LDR X0, [X8]
	0x01DB6340 CBZ X0, 0x1DB66F0
	0x01DB6344 MOV X1, X31
	0x01DB6348 BL 0x1DBFE4C
	0x01DB634C CBZ X0, 0x1DB66F0
	0x01DB6350 MOV X1, X31
	0x01DB6354 BL 0x3C3F58C
	0x01DB6358 LDRB W8, [X22 + 0x85D]
	0x01DB635C MOV V8.16B, V0.16B
	0x01DB6360 MOV V9.16B, V1.16B
	0x01DB6364 MOV V10.16B, V2.16B
	0x01DB6368 CBNZ W8, 0x1DB6380
	0x01DB636C ADRP X0, 0x233F000
	0x01DB6370 LDR X0, [X0 + 0x7C8]
	0x01DB6374 BL 0x1C16CF4
	0x01DB6378 MOVZ W8, 0x1
	0x01DB637C STRB W8, [X22 + 0x85D]
	0x01DB6380 LDR X0, [X21]
	0x01DB6384 LDR W8, [X0 + 0xE0]
	0x01DB6388 CBNZ W8, 0x1DB6394
	0x01DB638C BL 0x1C16DFC
	0x01DB6390 LDR X0, [X21]
	0x01DB6394 LDR X8, [X0 + 0xB8]
	0x01DB6398 LDR X0, [X8]
	0x01DB639C CBZ X0, 0x1DB66F0
	0x01DB63A0 MOV X1, X31
	0x01DB63A4 BL 0x1DBFE4C
	0x01DB63A8 CBNZ X0, 0x1DB6680
	0x01DB63AC B 0x1DB66F0
	0x01DB63B0 LDR X21, [X19 + 0x1B8]
	0x01DB63B4 CBZ X21, 0x1DB66F0
	0x01DB63B8 LDR X0, [X20]
	0x01DB63BC LDR X20, [X21 + 0x10]
	0x01DB63C0 LDR W8, [X0 + 0xE0]
	0x01DB63C4 CBNZ W8, 0x1DB63CC
	0x01DB63C8 BL 0x1C16DFC
	0x01DB63CC MOV X0, X20
	0x01DB63D0 MOV X1, X31
	0x01DB63D4 MOV X2, X31
	0x01DB63D8 BL 0x3C354F8
	0x01DB63DC TBZ X0, 0x0, 0x1DB6648
	0x01DB63E0 LDR X0, [X21 + 0x10]
	0x01DB63E4 CBZ X0, 0x1DB66F0
	0x01DB63E8 LDR X20, [X19 + 0x88]
	0x01DB63EC MOV X1, X31
	0x01DB63F0 BL 0x3C32E90
	0x01DB63F4 CBZ X0, 0x1DB66F0
	0x01DB63F8 MOV X1, X31
	0x01DB63FC BL 0x3C3F58C
	0x01DB6400 LDR X0, [X21 + 0x10]
	0x01DB6404 CBZ X0, 0x1DB66F0
	0x01DB6408 MOV X1, X31
	0x01DB640C MOV V8.16B, V0.16B
	0x01DB6410 MOV V9.16B, V1.16B
	0x01DB6414 MOV V10.16B, V2.16B
	0x01DB6418 BL 0x3C32E90
	0x01DB641C CBZ X0, 0x1DB66F0
	0x01DB6420 MOV X1, X31
	0x01DB6424 BL 0x3C3DEB4
	0x01DB6428 CBZ X20, 0x1DB66F0
	0x01DB642C MOV V4.16B, V0.16B
	0x01DB6430 MOV V5.16B, V1.16B
	0x01DB6434 MOV V6.16B, V2.16B
	0x01DB6438 MOV V7.16B, V3.16B
	0x01DB643C MOV X0, X20
	0x01DB6440 MOV V0.16B, V8.16B
	0x01DB6444 MOV V1.16B, V9.16B
	0x01DB6448 MOV V2.16B, V10.16B
	0x01DB644C MOV V3.16B, V4.16B
	0x01DB6450 MOV V4.16B, V5.16B

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+176], D10
	003 Move [X31+192], D9
	004 Move [X31+200], D8
	005 Move [X31+208], X30
	006 Move [X31+216], X21
	007 Move [X31+224], X20
	008 Move [X31+232], X19
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X21+40]
	011 Move [X31+168], X8
	012 Move X8, [X0+176]
	013 Compare X8, 0
	014 JumpIfEqual {314}
	015 Move X19, X0
	016 Move X0, [X8+16]
	017 Compare X0, 0
	018 JumpIfEqual {314}
	019 Move X20, X1
	020 Move X1, X31
	021 Call Component.get_transform, X0
	022 Move X8, -19705856
	023 Move V8, [X8+784]
	024 Move S0, [X20]
	025 Move S1, [X20+4]
	026 Move S2, [X20+8]
	027 Move S3, [X20+12]
	028 Move S4, [X20+16]
	029 Move S5, [X20+20]
	030 Move V6, [X20+24]
	031 Move W8, 0x3F000000
	032 Move X1, X0
	033 Move V7, V8
	034 Move [X31], W8
	035 Call NetPlayer.UpdateTransformWithThreshold, X0, X1, X2, X3, V0, V1
	036 Move X8, [X19+176]
	037 Compare X8, 0
	038 JumpIfEqual {314}
	039 Move X0, [X8+24]
	040 Compare X0, 0
	041 JumpIfEqual {314}
	042 Move X1, X31
	043 Call Component.get_transform, X0
	044 Move S0, [X20+28]
	045 Move S1, [X20+32]
	046 Move S2, [X20+36]
	047 Move S3, [X20+40]
	048 Move S4, [X20+44]
	049 Move S5, [X20+48]
	050 Move V6, [X20+52]
	051 Move W8, 0x3F000000
	052 Move X1, X0
	053 Move V7, V8
	054 Move [X31], W8
	055 Call NetPlayer.UpdateTransformWithThreshold, X0, X1, X2, X3, V0, V1
	056 Move X8, [X19+176]
	057 Compare X8, 0
	058 JumpIfEqual {314}
	059 Move X0, [X8+32]
	060 Compare X0, 0
	061 JumpIfEqual {314}
	062 Move X1, X31
	063 Call Component.get_transform, X0
	064 Move S0, [X20+56]
	065 Move S1, [X20+60]
	066 Move S2, [X20+64]
	067 Move S3, [X20+68]
	068 Move S4, [X20+72]
	069 Move S5, [X20+76]
	070 Move V6, [X20+80]
	071 Move W8, 0x3F000000
	072 Move X1, X0
	073 Move V7, V8
	074 Move [X31], W8
	075 Call NetPlayer.UpdateTransformWithThreshold, X0, X1, X2, X3, V0, V1
	076 Move X8, [X19+176]
	077 Compare X8, 0
	078 JumpIfEqual {314}
	079 Move X0, [X8+40]
	080 Compare X0, 0
	081 JumpIfEqual {314}
	082 Move X1, X31
	083 Call Component.get_transform, X0
	084 Move S0, [X20+84]
	085 Move S1, [X20+88]
	086 Move S2, [X20+92]
	087 Move S3, [X20+96]
	088 Move S4, [X20+100]
	089 Move S5, [X20+104]
	090 Move V6, [X20+108]
	091 Move W8, 0x3F000000
	092 Move X1, X0
	093 Move V7, V8
	094 Move [X31], W8
	095 Call NetPlayer.UpdateTransformWithThreshold, X0, X1, X2, X3, V0, V1
	096 Move X8, [X19+56]
	097 Compare X8, 0
	098 JumpIfEqual {314}
	099 Move X8, [X8+80]
	100 Compare X8, 0
	101 JumpIfEqual {104}
	102 Move W8, [X8+72]
	103 And W31, W8, 3
	104 Move X8, [X19+184]
	105 Compare X8, 0
	106 JumpIfEqual {314}
	107 Move X0, [X8+16]
	108 Compare X0, 0
	109 JumpIfEqual {314}
	110 Move X1, X31
	111 Call Component.get_transform, X0
	112 Move X8, -19705856
	113 Move V8, [X8+820]
	114 Move S0, [X20]
	115 Move S1, [X20+4]
	116 Move S2, [X20+8]
	117 Move S3, [X20+12]
	118 Move S4, [X20+16]
	119 Move S5, [X20+20]
	120 Move V6, [X20+24]
	121 Move W8, 0x41A00000
	122 Move X1, X0
	123 Move V7, V8
	124 Move [X31], W8
	125 Call NetPlayer.UpdateTransformWithThreshold, X0, X1, X2, X3, V0, V1
	126 Move X8, [X19+184]
	127 Compare X8, 0
	128 JumpIfEqual {314}
	129 Move X0, [X8+24]
	130 Compare X0, 0
	131 JumpIfEqual {314}
	132 Move X1, X31
	133 Call Component.get_transform, X0
	134 Move S0, [X20+28]
	135 Move S1, [X20+32]
	136 Move S2, [X20+36]
	137 Move S3, [X20+40]
	138 Move S4, [X20+44]
	139 Move S5, [X20+48]
	140 Move V6, [X20+52]
	141 Move W8, 0x41A00000
	142 Move X1, X0
	143 Move V7, V8
	144 Move [X31], W8
	145 Call NetPlayer.UpdateTransformWithThreshold, X0, X1, X2, X3, V0, V1
	146 Move X8, [X19+184]
	147 Compare X8, 0
	148 JumpIfEqual {314}
	149 Move X0, [X8+32]
	150 Compare X0, 0
	151 JumpIfEqual {314}
	152 Move X1, X31
	153 Call Component.get_transform, X0
	154 Move S0, [X20+56]
	155 Move S1, [X20+60]
	156 Move S2, [X20+64]
	157 Move S3, [X20+68]
	158 Move S4, [X20+72]
	159 Move S5, [X20+76]
	160 Move V6, [X20+80]
	161 Move W8, 0x41A00000
	162 Move X1, X0
	163 Move V7, V8
	164 Move [X31], W8
	165 Call NetPlayer.UpdateTransformWithThreshold, X0, X1, X2, X3, V0, V1
	166 Move X8, [X19+184]
	167 Compare X8, 0
	168 JumpIfEqual {314}
	169 Move X0, [X8+40]
	170 Compare X0, 0
	171 JumpIfEqual {314}
	172 Move X1, X31
	173 Call Component.get_transform, X0
	174 Move S0, [X20+84]
	175 Move S1, [X20+88]
	176 Move S2, [X20+92]
	177 Move S3, [X20+96]
	178 Move S4, [X20+100]
	179 Move S5, [X20+104]
	180 Move V6, [X20+108]
	181 Move W8, 0x41A00000
	182 Move X1, X0
	183 Move V7, V8
	184 Move [X31], W8
	185 Call NetPlayer.UpdateTransformWithThreshold, X0, X1, X2, X3, V0, V1
	186 Move X8, [X19+184]
	187 Compare X8, 0
	188 JumpIfEqual {314}
	189 Move X0, [X8+24]
	190 Compare X0, 0
	191 JumpIfEqual {314}
	192 Move X1, X31
	193 Call Transform.get_localPosition, X0
	194 Move X8, [X19+184]
	195 Compare X8, 0
	196 JumpIfEqual {314}
	197 Move X0, [X8+24]
	198 Compare X0, 0
	199 JumpIfEqual {314}
	200 Move X1, X31
	201 Move V8, V0
	202 Move V9, V1
	203 Move V10, V2
	204 Call Transform.get_localRotation, X0
	205 Move V4, V0
	206 Move V5, V1
	207 Move V6, V2
	208 Move V7, V3
	209 Add X0, X31, 96
	210 Move V0, V8
	211 Move V1, V9
	212 Move V2, V10
	213 Move V3, V4
	214 Move V4, V5
	215 Move V5, V6
	216 Move V6, V7
	217 Move [X31+96], X31
	218 Move [X31+104], X31
	219 Call NetRigTransform..ctor, X0, X1, X2
	220 Move V0, [X31+6]
	221 Move [X31+7], V0
	222 Move X8, [X19+184]
	223 Compare X8, 0
	224 JumpIfEqual {314}
	225 Move X0, [X8+32]
	226 Compare X0, 0
	227 JumpIfEqual {314}
	228 Move X1, X31
	229 Call Transform.get_localPosition, X0
	230 Move X8, [X19+184]
	231 Compare X8, 0
	232 JumpIfEqual {314}
	233 Move X0, [X8+32]
	234 Compare X0, 0
	235 JumpIfEqual {314}
	236 Move X1, X31
	237 Move V8, V0
	238 Move V9, V1
	239 Move V10, V2
	240 Call Transform.get_localRotation, X0
	241 Move V4, V0
	242 Move V5, V1
	243 Move V6, V2
	244 Move V7, V3
	245 Add X0, X31, 80
	246 Move V0, V8
	247 Move V1, V9
	248 Move V2, V10
	249 Move V3, V4
	250 Move V4, V5
	251 Move V5, V6
	252 Move V6, V7
	253 Move [X31+80], X31
	254 Move [X31+88], X31
	255 Call NetRigTransform..ctor, X0, X1, X2
	256 Move V0, [X31+5]
	257 Move [X31+8], V0
	258 Move X8, [X19+184]
	259 Compare X8, 0
	260 JumpIfEqual {314}
	261 Move X0, [X8+40]
	262 Compare X0, 0
	263 JumpIfEqual {314}
	264 Move X1, X31
	265 Call Transform.get_localPosition, X0
	266 Move X8, [X19+184]
	267 Compare X8, 0
	268 JumpIfEqual {314}
	269 Move X0, [X8+40]
	270 Compare X0, 0
	271 JumpIfEqual {314}
	272 Move X1, X31
	273 Move V8, V0
	274 Move V9, V1
	275 Move V10, V2
	276 Call Transform.get_localRotation, X0
	277 Move V4, V0
	278 Move V5, V1
	279 Move V6, V2
	280 Move V7, V3
	281 Add X0, X31, 64
	282 Move V0, V8
	283 Move V1, V9
	284 Move V2, V10
	285 Move V3, V4
	286 Move V4, V5
	287 Move V5, V6
	288 Move V6, V7
	289 Move [X31+64], X31
	290 Move [X31+72], X31
	291 Call NetRigTransform..ctor, X0, X1, X2
	292 Move V0, [X31+4]
	293 Move V1, [X31+112]
	294 Move V2, [X31+128]
	295 Add X1, X31, 16
	296 Move X0, X19
	297 Move [X31+9], V0
	298 Move [X31+16], V1
	299 Move [X31+24], V2
	300 Move [X31+3], V0
	301 Call NetPlayer.set_rigData, X0, X1
	302 Move X8, [X21+40]
	303 Move X9, [X31+168]
	304 NotImplemented "Instruction CMP not yet implemented."
	305 Move X20, [X31+224]
	306 Move X19, [X31+232]
	307 Move X30, [X31+208]
	308 Move X21, [X31+216]
	309 Move D9, [X31+192]
	310 Move D8, [X31+200]
	311 Move V10, [X31+176]
	312 Add X31, X31, 240
	313 Return 
	314 Call 0x1C17F20
	315 Call 0x3EB2B20

Method: System.Void UpdateRigFromData()

Disassembly:
	0x01DB444C ADD X10, X10, 0x10
	0x01DB4450 B.NE 0x1DB443C
	0x01DB4454 MOV X0, X22
	0x01DB4458 MOV W2, W31
	0x01DB445C BL 0x1C5C788
	0x01DB4460 B 0x1DB4470
	0x01DB4464 LDRSW X9, [X10]
	0x01DB4468 ADD X8, X8, X9, 0x4, LSL
	0x01DB446C ADD X0, X8, 0x138
	0x01DB4470 LDP X8, X1, [X0]
	0x01DB4474 MOV X0, X22
	0x01DB4478 BLR X8
	0x01DB447C MOV X23, X0
	0x01DB4480 LDR X0, [X20]
	0x01DB4484 LDR W8, [X0 + 0xE0]
	0x01DB4488 CBNZ W8, 0x1DB4490
	0x01DB448C BL 0x1C16DFC
	0x01DB4490 ADRP X8, 0x2624000
	0x01DB4494 LDRB W8, [X8 + 0x787]
	0x01DB4498 CBNZ W8, 0x1DB44B0
	0x01DB449C MOV X0, X20
	0x01DB44A0 BL 0x1C16CF4
	0x01DB44A4 ADRP X8, 0x2624000
	0x01DB44A8 MOVZ W9, 0x1
	0x01DB44AC STRB W9, [X8 + 0x787]
	0x01DB44B0 LDR X0, [X20]
	0x01DB44B4 LDR W8, [X0 + 0xE0]
	0x01DB44B8 CBNZ W8, 0x1DB44C4
	0x01DB44BC BL 0x1C16DFC
	0x01DB44C0 LDR X0, [X20]
	0x01DB44C4 LDR X8, [X0 + 0xB8]
	0x01DB44C8 LDR X8, [X8]
	0x01DB44CC CBZ X8, 0x1DB46FC
	0x01DB44D0 LDR X8, [X8 + 0xE0]
	0x01DB44D4 CBZ X8, 0x1DB4700
	0x01DB44D8 LDR X0, [X8 + 0x80]
	0x01DB44DC CBZ X0, 0x1DB46F4
	0x01DB44E0 LDR X1, [X25]
	0x01DB44E4 BL 0x2605C30
	0x01DB44E8 CBZ X0, 0x1DB46F8
	0x01DB44EC LDR X1, [X19]
	0x01DB44F0 ADD X8, X31, 0x18
	0x01DB44F4 BL 0x274B2CC
	0x01DB44F8 LDUR V0, [X31 + 0x18]
	0x01DB44FC LDR X8, [X31 + 0x28]
	0x01DB4500 STR V0, [X31 + 0x3]
	0x01DB4504 STR X8, [X31 + 0x40]
	0x01DB4508 LDR X1, [X29]
	0x01DB450C ADD X0, X31, 0x30
	0x01DB4510 BL 0x2BF5F4C
	0x01DB4514 TBZ X0, 0x0, 0x1DB45A0
	0x01DB4518 LDR X26, [X31 + 0x40]
	0x01DB451C CBZ X26, 0x1DB45C0
	0x01DB4520 LDR X0, [X26 + 0x50]
	0x01DB4524 LDR X1, [X24]
	0x01DB4528 BL 0x265C594
	0x01DB452C MOV X1, X23
	0x01DB4530 MOV X2, X31
	0x01DB4534 BL 0x321BA08
	0x01DB4538 TBZ X0, 0x0, 0x1DB4508
	0x01DB453C CBZ X21, 0x1DB45C8
	0x01DB4540 ADRP X9, 0x2340000
	0x01DB4544 LDR W1, [X26 + 0x48]
	0x01DB4548 LDR W10, [X21 + 0x1C]
	0x01DB454C LDR X8, [X21 + 0x10]
	0x01DB4550 LDR X9, [X9 + 0xE10]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 NotImplemented "Instruction MRS not yet implemented."
	007 Move X8, [X21+40]
	008 Move X19, X0
	009 Move [X31+56], X8
	010 Move X0, [X0+64]
	011 Compare X0, 0
	012 JumpIfEqual {24}
	013 Move W8, [X0+96]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 2
	016 Compare TEMP, 2
	017 JumpIfEqual {24}
	018 Move X1, X31
	019 Call NetworkObject.get_HasInputAuthority, X0
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {75}
	024 Move X8, [X19+184]
	025 Compare X8, 0
	026 JumpIfEqual {84}
	027 Move X0, [X8+24]
	028 Compare X0, 0
	029 JumpIfEqual {84}
	030 Move X1, X31
	031 Call Component.get_transform, X0
	032 Move X20, X0
	033 Add X8, X31, 8
	034 Move X0, X19
	035 Call NetPlayer.get_rigData, X0
	036 Move X1, [X31+8]
	037 Move X2, [X31+16]
	038 Move X0, X20
	039 Call NetRigUtil.UpdateTransform, X0, X1
	040 Move X8, [X19+184]
	041 Compare X8, 0
	042 JumpIfEqual {84}
	043 Move X0, [X8+32]
	044 Compare X0, 0
	045 JumpIfEqual {84}
	046 Move X1, X31
	047 Call Component.get_transform, X0
	048 Move X20, X0
	049 Add X8, X31, 8
	050 Move X0, X19
	051 Call NetPlayer.get_rigData, X0
	052 Move X1, [X31+24]
	053 Move X2, [X31+32]
	054 Move X0, X20
	055 Call NetRigUtil.UpdateTransform, X0, X1
	056 Move X8, [X19+184]
	057 Compare X8, 0
	058 JumpIfEqual {84}
	059 Move X0, [X8+40]
	060 Compare X0, 0
	061 JumpIfEqual {84}
	062 Move X1, X31
	063 Call Component.get_transform, X0
	064 Move X20, X0
	065 Add X8, X31, 8
	066 Move X0, X19
	067 Call NetPlayer.get_rigData, X0
	068 Move X1, [X31+40]
	069 Move X2, [X31+48]
	070 Move X0, X20
	071 Call NetRigUtil.UpdateTransform, X0, X1
	072 Move X0, X31
	073 Call Time.get_time
	074 Move [X19+464], S0
	075 Move X8, [X21+40]
	076 Move X9, [X31+56]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X20, [X31+80]
	079 Move X19, [X31+88]
	080 Move X30, [X31+64]
	081 Move X21, [X31+72]
	082 Add X31, X31, 96
	083 Return 
	084 Call 0x1C17F20
	085 Call 0x3EB2B20

Method: System.Void HandleIsDeadChanged()

Disassembly:
	0x01DB689C MOVZ W8, 0x1
	0x01DB68A0 LDP X20, X19, [X31 + 0x20]
	0x01DB68A4 LDP X30, X21, [X31 + 0x10]
	0x01DB68A8 AND W0, W8, 0x1
	0x01DB68AC ADD X31, X31, 0x30
	0x01DB68B0 RET
	0x01DB68B4 BL 0x1C16F20
	0x01DB68B8 STR X30, [X31 - 0x30]!
	0x01DB68BC STP X22, X21, [X31 + 0x10]
	0x01DB68C0 STP X20, X19, [X31 + 0x20]
	0x01DB68C4 ADRP X22, 0x2622000
	0x01DB68C8 ADRP X21, 0x233D000
	0x01DB68CC LDRB W8, [X22 + 0xB13]
	0x01DB68D0 LDR X21, [X21 + 0x648]
	0x01DB68D4 MOV X19, X1
	0x01DB68D8 MOV X20, X0
	0x01DB68DC TBNZ X8, 0x0, 0x1DB690C
	0x01DB68E0 ADRP X0, 0x233D000
	0x01DB68E4 LDR X0, [X0 + 0x648]
	0x01DB68E8 BL 0x1C16CF4
	0x01DB68EC ADRP X0, 0x233F000
	0x01DB68F0 LDR X0, [X0 + 0x9A0]
	0x01DB68F4 BL 0x1C16CF4
	0x01DB68F8 ADRP X0, 0x233E000
	0x01DB68FC LDR X0, [X0 + 0x178]
	0x01DB6900 BL 0x1C16CF4
	0x01DB6904 MOVZ W8, 0x1
	0x01DB6908 STRB W8, [X22 + 0xB13]
	0x01DB690C LDR X0, [X21]
	0x01DB6910 LDR W8, [X0 + 0xE0]
	0x01DB6914 CBNZ W8, 0x1DB691C
	0x01DB6918 BL 0x1C16DFC
	0x01DB691C ADRP X22, 0x2622000
	0x01DB6920 LDRB W8, [X22 + 0x787]
	0x01DB6924 CBNZ W8, 0x1DB693C
	0x01DB6928 ADRP X0, 0x233D000
	0x01DB692C LDR X0, [X0 + 0x648]
	0x01DB6930 BL 0x1C16CF4
	0x01DB6934 MOVZ W8, 0x1
	0x01DB6938 STRB W8, [X22 + 0x787]
	0x01DB693C LDR X0, [X21]
	0x01DB6940 LDR W8, [X0 + 0xE0]
	0x01DB6944 CBNZ W8, 0x1DB6950
	0x01DB6948 BL 0x1C16DFC
	0x01DB694C LDR X0, [X21]
	0x01DB6950 LDR X8, [X0 + 0xB8]
	0x01DB6954 LDR X8, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2623000
	005 Move W8, [X20+2828]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x233E000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2828], W8
	016 Move X0, [X19+64]
	017 Compare X0, 0
	018 JumpIfEqual {65}
	019 Move X1, X31
	020 Call NetworkObject.get_HasInputAuthority, X0
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {55}
	025 Move X8, 0x233E000
	026 Move X8, [X8+1432]
	027 Move X20, [X19+208]
	028 Move X0, [X8]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X20
	034 Move X1, X31
	035 Move X2, X31
	036 Call Object.op_Inequality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {61}
	041 Move X20, [X19+208]
	042 Move X0, X19
	043 Call NetPlayer.get_isDie, X0
	044 Compare X20, 0
	045 JumpIfEqual {65}
	046 NotImplemented "Instruction ORN not yet implemented."
	047 Move X0, X20
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 And W1, W8, 1
	051 Move X2, X31
	052 Move X30, [X31+32]
	053 Call Recorder.set_TransmitEnabled, X0, X1
	054 Return 
	055 Move X0, X19
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Call NetPlayer.UpdateSpeakerAudioSourceVolume, X0
	060 Return 
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move X30, [X31+32]
	064 Return 
	065 Call 0x1C17F20

Method: System.Void UpdateSpeakerAudioSourceVolume()

Disassembly:
	0x01DB57F4 BL 0x1C16CF4
	0x01DB57F8 MOVZ W8, 0x1
	0x01DB57FC STRB W8, [X22 + 0xB2E]
	0x01DB5800 CBZ X19, 0x1DB5898
	0x01DB5804 AND W8, W20, 0xFF
	0x01DB5808 UCVTF S0, W8
	0x01DB580C MOVZ W8, 0x437F0000
	0x01DB5810 FMOV S2, W8
	0x01DB5814 UBFM X8, X21, 0x20, 0x27
	0x01DB5818 AND W9, W21, 0xFF
	0x01DB581C ADRP X22, 0x233E000
	0x01DB5820 UCVTF S3, W8
	0x01DB5824 UCVTF S4, W9
	0x01DB5828 LDR X22, [X22 + 0x630]
	0x01DB582C FMOV S1, -0.5
	0x01DB5830 FDIV S0, S0, S2
	0x01DB5834 FDIV S3, S3, S2
	0x01DB5838 FDIV S2, S4, S2
	0x01DB583C FADD S0, S0, S1
	0x01DB5840 FADD S3, S3, S1
	0x01DB5844 FADD S4, S2, S1
	0x01DB5848 FADD S2, S0, S0
	0x01DB584C FADD S1, S3, S3
	0x01DB5850 FADD S0, S4, S4
	0x01DB5854 MOV X0, X19
	0x01DB5858 MOV X1, X31
	0x01DB585C BL 0x3C3EC04
	0x01DB5860 LDR X0, [X22]
	0x01DB5864 LDR W8, [X0 + 0xE0]
	0x01DB5868 CBNZ W8, 0x1DB5870
	0x01DB586C BL 0x1C16DFC
	0x01DB5870 UBFM X0, X20, 0x20, 0x2F
	0x01DB5874 MOVZ W1, 0x10
	0x01DB5878 MOV X2, X31
	0x01DB587C BL 0x1D32748
	0x01DB5880 MOV X0, X19
	0x01DB5884 LDP X20, X19, [X31 + 0x20]
	0x01DB5888 LDP X22, X21, [X31 + 0x10]
	0x01DB588C MOV X1, X31
	0x01DB5890 LDR X30, [X31], #0x30
	0x01DB5894 B 0x3C3F8B8
	0x01DB5898 BL 0x1C16F20
	0x01DB589C STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2624000
	005 Move W8, [X20+2829]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x233F000
	012 Move X0, [X0+2600]
	013 Call 0x1C17CF4
	014 Move X0, 0x2343000
	015 Move X0, [X0+3024]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2829], W8
	019 Move X0, X19
	020 Call NetPlayer.get_isDie, X0
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {31}
	025 Move X0, X19
	026 Call NetPlayer.get_isMuted, X0
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {47}
	031 Move X8, 0x233F000
	032 Move X8, [X8+2600]
	033 Move X20, 0x2343000
	034 Move X0, [X8]
	035 Move W8, [X0+224]
	036 Move X20, [X20+3024]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, [X20]
	041 Move X1, X31
	042 Call Debug.Log, X0
	043 Move X0, [X19+456]
	044 Compare X0, 0
	045 JumpIfEqual {57}
	046 Move S0, W31
	047 Move X0, [X19+456]
	048 Compare X0, 0
	049 JumpIfEqual {57}
	050 Move S0, 1
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X1, X31
	054 Move X30, [X31+32]
	055 Call AudioSource.set_volume, X0, V0
	056 Return 
	057 Call 0x1C17F20

Method: System.Void HandleDisplayNameChanged()

Disassembly:
	0x01DB4424 LDR X8, [X22]
	0x01DB4428 LDR X1, [X28]
	0x01DB442C LDRH W9, [X8 + 0x12E]
	0x01DB4430 CBZ X9, 0x1DB4454
	0x01DB4434 LDR X10, [X8 + 0xB0]
	0x01DB4438 ADD X10, X10, 0x8
	0x01DB443C LDUR X11, [X10 - 0x8]
	0x01DB4440 CMP X11, X1
	0x01DB4444 B.EQ 0x1DB4464
	0x01DB4448 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, [X0+240]
	004 Call NetPlayer.get_displayName, X0
	005 Compare X19, 0
	006 JumpIfEqual {14}
	007 Move X1, X0
	008 Move X0, X19
	009 Move X2, X31
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Call Nametag.SetName, X0, X1
	013 Return 
	014 Call 0x1C17F20

Method: System.Void HandleChannelChanged()

Disassembly:
	0x01DB6958 CBZ X8, 0x1DB69CC

ISIL:
	001 Return 

Method: System.Void HandleLocalPlayerFingerValuesChanged(System.Single[] fingerValues)

Disassembly:
	0x01DB695C LDR X8, [X8 + 0xE0]

ISIL:
No ISIL was generated
Method: System.Void RPC_PlayerFingerValuesChanged(System.Single[] fingerValues)

Disassembly:
	0x01DB6960 CBZ X8, 0x1DB69CC
	0x01DB6964 LDR X8, [X8 + 0x68]
	0x01DB6968 CBZ X8, 0x1DB69CC
	0x01DB696C ADRP X9, 0x233E000
	0x01DB6970 LDR X9, [X9 + 0x178]
	0x01DB6974 LDR X0, [X8 + 0x48]
	0x01DB6978 LDR X1, [X9]
	0x01DB697C BL 0x2651A74
	0x01DB6980 TBZ X0, 0x0, 0x1DB698C
	0x01DB6984 MOVZ W8, 0x1
	0x01DB6988 B 0x1DB69B8
	0x01DB698C ADRP X8, 0x233F000
	0x01DB6990 LDR X8, [X8 + 0x9A0]
	0x01DB6994 LDR X20, [X20 + 0x38]
	0x01DB6998 LDR X0, [X8]
	0x01DB699C LDR W8, [X0 + 0xE0]
	0x01DB69A0 CBNZ W8, 0x1DB69A8
	0x01DB69A4 BL 0x1C16DFC
	0x01DB69A8 MOV X0, X20
	0x01DB69AC MOV X1, X19
	0x01DB69B0 BL 0x1DB66F4
	0x01DB69B4 EOR W8, W0, 0x1
	0x01DB69B8 LDP X20, X19, [X31 + 0x20]
	0x01DB69BC LDP X22, X21, [X31 + 0x10]
	0x01DB69C0 AND W0, W8, 0x1
	0x01DB69C4 LDR X30, [X31], #0x30
	0x01DB69C8 RET
	0x01DB69CC BL 0x1C16F20
	0x01DB69D0 STR D14, [X31 - 0x90]!
	0x01DB69D4 STP D13, D12, [X31 + 0x10]
	0x01DB69D8 STP D11, D10, [X31 + 0x20]
	0x01DB69DC STP D9, D8, [X31 + 0x30]
	0x01DB69E0 STP X30, X27, [X31 + 0x40]
	0x01DB69E4 STP X26, X25, [X31 + 0x50]
	0x01DB69E8 STP X24, X23, [X31 + 0x60]
	0x01DB69EC STP X22, X21, [X31 + 0x70]
	0x01DB69F0 STP X20, X19, [X31 + 0x80]
	0x01DB69F4 ADRP X25, 0x2622000
	0x01DB69F8 LDRB W8, [X25 + 0xB14]
	0x01DB69FC MOV X23, X5
	0x01DB6A00 MOV X19, X4
	0x01DB6A04 MOV X20, X3
	0x01DB6A08 MOV X21, X2
	0x01DB6A0C MOV V8.16B, V6.16B
	0x01DB6A10 MOV V9.16B, V5.16B
	0x01DB6A14 MOV V10.16B, V4.16B
	0x01DB6A18 MOV V11.16B, V3.16B
	0x01DB6A1C MOV V12.16B, V2.16B
	0x01DB6A20 MOV V13.16B, V1.16B
	0x01DB6A24 MOV V14.16B, V0.16B
	0x01DB6A28 MOV W22, W1
	0x01DB6A2C MOV X24, X0
	0x01DB6A30 TBNZ X8, 0x0, 0x1DB6A60
	0x01DB6A34 ADRP X0, 0x2340000
	0x01DB6A38 LDR X0, [X0 + 0xA78]
	0x01DB6A3C BL 0x1C16CF4
	0x01DB6A40 ADRP X0, 0x233F000
	0x01DB6A44 LDR X0, [X0 + 0x7C8]
	0x01DB6A48 BL 0x1C16CF4
	0x01DB6A4C ADRP X0, 0x2341000
	0x01DB6A50 LDR X0, [X0 + 0xC28]
	0x01DB6A54 BL 0x1C16CF4
	0x01DB6A58 MOVZ W8, 0x1
	0x01DB6A5C STRB W8, [X25 + 0xB14]
	0x01DB6A60 LDRB W8, [X24 + 0x58]
	0x01DB6A64 CBZ W8, 0x1DB6B40
	0x01DB6A68 STRB W31, [X24 + 0x58]
	0x01DB6A6C LDR X0, [X24 + 0x40]
	0x01DB6A70 CBZ X0, 0x1DB6DCC
	0x01DB6A74 MOV X1, X31
	0x01DB6A78 BL 0x1E93588
	0x01DB6A7C TBZ X0, 0x0, 0x1DB6B7C
	0x01DB6A80 MOV X0, X24
	0x01DB6A84 MOV X1, X23
	0x01DB6A88 BL 0x1DB68B8
	0x01DB6A8C TBZ X0, 0x0, 0x1DB6B7C
	0x01DB6A90 ADRP X23, 0x233F000
	0x01DB6A94 LDR X23, [X23 + 0x7C8]
	0x01DB6A98 LDR X0, [X23]
	0x01DB6A9C LDR W8, [X0 + 0xE0]
	0x01DB6AA0 CBNZ W8, 0x1DB6AA8
	0x01DB6AA4 BL 0x1C16DFC
	0x01DB6AA8 ADRP X24, 0x2622000
	0x01DB6AAC LDRB W8, [X24 + 0x85D]
	0x01DB6AB0 CBNZ W8, 0x1DB6AC8
	0x01DB6AB4 ADRP X0, 0x233F000
	0x01DB6AB8 LDR X0, [X0 + 0x7C8]
	0x01DB6ABC BL 0x1C16CF4
	0x01DB6AC0 MOVZ W8, 0x1
	0x01DB6AC4 STRB W8, [X24 + 0x85D]
	0x01DB6AC8 LDR X0, [X23]
	0x01DB6ACC LDR W8, [X0 + 0xE0]
	0x01DB6AD0 CBNZ W8, 0x1DB6ADC
	0x01DB6AD4 BL 0x1C16DFC
	0x01DB6AD8 LDR X0, [X23]
	0x01DB6ADC LDR X8, [X0 + 0xB8]
	0x01DB6AE0 LDR X0, [X8]
	0x01DB6AE4 CBZ X0, 0x1DB6DCC
	0x01DB6AE8 MOV W1, W22
	0x01DB6AEC MOV V1.16B, V13.16B
	0x01DB6AF0 MOV V2.16B, V12.16B
	0x01DB6AF4 MOV V3.16B, V11.16B
	0x01DB6AF8 MOV V4.16B, V10.16B
	0x01DB6AFC MOV V5.16B, V9.16B
	0x01DB6B00 MOV V6.16B, V8.16B
	0x01DB6B04 MOV X2, X21
	0x01DB6B08 MOV X3, X20
	0x01DB6B0C MOV X4, X19
	0x01DB6B10 LDP X20, X19, [X31 + 0x80]
	0x01DB6B14 LDP X22, X21, [X31 + 0x70]
	0x01DB6B18 LDP X24, X23, [X31 + 0x60]
	0x01DB6B1C LDP X26, X25, [X31 + 0x50]
	0x01DB6B20 LDP X30, X27, [X31 + 0x40]
	0x01DB6B24 LDP D9, D8, [X31 + 0x30]
	0x01DB6B28 LDP D11, D10, [X31 + 0x20]
	0x01DB6B2C LDP D13, D12, [X31 + 0x10]
	0x01DB6B30 MOV V0.16B, V14.16B
	0x01DB6B34 MOV X5, X31
	0x01DB6B38 LDR V14, [X31], #0x90
	0x01DB6B3C B 0x1DC2080
	0x01DB6B40 ADRP X26, 0x2340000
	0x01DB6B44 LDR X26, [X26 + 0xA78]
	0x01DB6B48 LDR X0, [X26]
	0x01DB6B4C LDR W8, [X0 + 0xE0]
	0x01DB6B50 CBNZ W8, 0x1DB6B58
	0x01DB6B54 BL 0x1C16DFC
	0x01DB6B58 MOV X0, X24
	0x01DB6B5C MOV X1, X31
	0x01DB6B60 BL 0x1E77B08
	0x01DB6B64 LDR X0, [X24 + 0x38]
	0x01DB6B68 CBZ X0, 0x1DB6DCC
	0x01DB6B6C MOV X1, X31
	0x01DB6B70 BL 0x1E9E538
	0x01DB6B74 CMP W0, 0x4
	0x01DB6B78 B.NE 0x1DB6BA4
	0x01DB6B7C LDP X20, X19, [X31 + 0x80]
	0x01DB6B80 LDP X22, X21, [X31 + 0x70]
	0x01DB6B84 LDP X24, X23, [X31 + 0x60]
	0x01DB6B88 LDP X26, X25, [X31 + 0x50]
	0x01DB6B8C LDP X30, X27, [X31 + 0x40]
	0x01DB6B90 LDP D9, D8, [X31 + 0x30]
	0x01DB6B94 LDP D11, D10, [X31 + 0x20]
	0x01DB6B98 LDP D13, D12, [X31 + 0x10]
	0x01DB6B9C LDR V14, [X31], #0x90
	0x01DB6BA0 RET
	0x01DB6BA4 LDR X0, [X24 + 0x40]
	0x01DB6BA8 CBZ X0, 0x1DB6DCC
	0x01DB6BAC MOV X1, X31
	0x01DB6BB0 BL 0x1E94078
	0x01DB6BB4 ANDS W31, W0, 0x7
	0x01DB6BB8 B.EQ 0x1DB6C64
	0x01DB6BBC TBNZ X0, 0x1, 0x1DB6A6C
	0x01DB6BC0 MOV X0, X21
	0x01DB6BC4 MOV X1, X31
	0x01DB6BC8 BL 0x1E8DD08
	0x01DB6BCC MOV W25, W0
	0x01DB6BD0 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 NotImplemented "Instruction MRS not yet implemented."
	009 Move X8, [X22+40]
	010 Move X21, 0x2623000
	011 Move X20, X1
	012 Move X19, X0
	013 Move [X31+24], X8
	014 Move W8, [X21+2830]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x2342000
	020 Move X0, [X0+3072]
	021 Call 0x1C17CF4
	022 Move X0, 0x2341000
	023 Move X0, [X0+2680]
	024 Call 0x1C17CF4
	025 Move X0, 0x2342000
	026 Move X0, [X0+3080]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+2830], W8
	030 Move W8, [X19+88]
	031 Compare W8, 0
	032 JumpIfEqual {57}
	033 Move [X19+88], W31
	034 Compare X20, 0
	035 JumpIfEqual {186}
	036 Move W8, [X20+24]
	037 Compare W8, 0
	038 JumpIfEqual {185}
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move S0, [X20+32]
	045 Move S1, [X20+36]
	046 Move S2, [X20+40]
	047 Move S3, [X20+44]
	048 Move V4, [X20+48]
	049 Add X1, X31, 0
	050 Move X0, X19
	051 Move [X31], S0
	052 Move [X31+8], S1
	053 Move [X31+8], S2
	054 Move [X31+16], S3
	055 Move [X31+16], D4
	056 Call NetPlayer.set_fingerValues, X0, X1
	057 Move X23, 0x2341000
	058 Move X23, [X23+2680]
	059 Move X0, [X23]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, X19
	065 Move X1, X31
	066 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	067 Move X0, [X19+56]
	068 Compare X0, 0
	069 JumpIfEqual {186}
	070 Move X1, X31
	071 Call NetworkRunner.get_Stage, X0
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X0, [X19+64]
	074 Compare X0, 0
	075 JumpIfEqual {186}
	076 Move X1, X31
	077 Call NetworkObject.GetLocalAuthorityMask, X0
	078 Move TEMP, X0
	079 And TEMP, TEMP, 2
	080 Compare TEMP, 2
	081 JumpIfEqual {106}
	082 Move X0, [X23]
	083 Move X19, [X19+64]
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Move X8, 0x2342000
	089 Move X8, [X8+3080]
	090 Move W2, 2
	091 Move X1, X19
	092 Move X3, X31
	093 Move X0, [X8]
	094 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	095 Move X8, [X22+40]
	096 Move X9, [X31+24]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X20, [X31+64]
	099 Move X19, [X31+72]
	100 Move X22, [X31+48]
	101 Move X21, [X31+56]
	102 Move X30, [X31+32]
	103 Move X23, [X31+40]
	104 Add X31, X31, 80
	105 Return 
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfEqual {34}
	110 Compare X20, 0
	111 JumpIfEqual {186}
	112 Move W8, [X20+24]
	113 Move W8, W8
	114 ShiftRight W8, 30
	115 And W8, W8, 0x1FFFFFFF
	116 Add W8, W8, 15
	117 And W21, W8, 0xFFFFFFFC
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X8, [X19+56]
	120 Compare X8, 0
	121 JumpIfEqual {186}
	122 Move X0, [X8+80]
	123 Compare X0, 0
	124 JumpIfEqual {186}
	125 Move X1, X31
	126 Call Simulation.HasAnyActiveConnections, X0
	127 Move TEMP, X0
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfNotEqual {95}
	131 Move X8, [X19+56]
	132 Compare X8, 0
	133 JumpIfEqual {186}
	134 Move X0, [X8+80]
	135 Move W1, W21
	136 Move X2, X31
	137 Call SimulationMessage.Allocate, X0, X1
	138 Move X8, [X19+64]
	139 Compare X8, 0
	140 JumpIfEqual {186}
	141 Move X8, [X8+32]
	142 Move X21, X0
	143 Compare X8, 0
	144 JumpIfEqual {157}
	145 Move W0, [X8]
	146 Move X0, [X23]
	147 Move W8, [X0+224]
	148 Compare W8, 0
	149 JumpIfNotEqual {151}
	150 Call 0x1C17DFC
	151 Move X8, 0x2342000
	152 Move X8, [X8+3080]
	153 Move W1, W21
	154 Move X2, X31
	155 Move X0, [X8]
	156 Call NetworkBehaviourUtils.NotifyRpcPayloadSizeExceeded, X0, X1
	157 Move X0, X31
	158 Move W1, [X19+104]
	159 Move W2, 2
	160 Move X3, X31
	161 Call RpcHeader.Create, X0, X1, X2
	162 Move [X21+28], X0
	163 Move X8, [X20+24]
	164 Add X0, X21, 40
	165 Move X1, X20
	166 Move [X21+36], W8
	167 Move X8, 0x2342000
	168 Move X8, [X8+3072]
	169 Move X2, [X8]
	170 Call Native.CopyFromArray, X0, X1
	171 Compare X21, 0
	172 JumpIfEqual {186}
	173 Move W8, W0
	174 ShiftRight W8, 29
	175 And W8, W8, 0xFFFFFFF
	176 Add W8, W8, 120
	177 And W8, W8, 0xFFFFFFE0
	178 Move [X21+12], W8
	179 Move X0, [X19+56]
	180 Compare X0, 0
	181 JumpIfEqual {186}
	182 Move X1, X21
	183 Move X2, X31
	184 Call NetworkRunner.SendRpc, X0, X1
	185 Call 0x1C17F28
	186 Call 0x1C17F20
	187 Call 0x3EB2B20

Method: System.Void HandleFingerValuesChanged()

Disassembly:
	0x01DB6BD4 MOV X1, X31
	0x01DB6BD8 BL 0x1E8DD08
	0x01DB6BDC ADD W8, W0, 0x3
	0x01DB6BE0 MOV X0, X19
	0x01DB6BE4 MOV X1, X31
	0x01DB6BE8 AND W27, W8, 0xFFFFFFFC
	0x01DB6BEC BL 0x1E8DD08
	0x01DB6BF0 ADD W9, W25, 0x33
	0x01DB6BF4 ADD W8, W0, 0x3
	0x01DB6BF8 AND W9, W9, 0xFFFFFFFC
	0x01DB6BFC AND W8, W8, 0xFFFFFFFC
	0x01DB6C00 ADD W9, W9, W27
	0x01DB6C04 ADD W25, W9, W8
	0x01DB6C08 CMP W25, 0x201
	0x01DB6C0C B.GE 0x1DB6CB8
	0x01DB6C10 LDR X8, [X24 + 0x38]
	0x01DB6C14 CBZ X8, 0x1DB6DCC
	0x01DB6C18 LDR X0, [X8 + 0x50]
	0x01DB6C1C CBZ X0, 0x1DB6DCC
	0x01DB6C20 MOV X1, X31
	0x01DB6C24 BL 0x1EC4D00
	0x01DB6C28 TBZ X0, 0x0, 0x1DB6B7C
	0x01DB6C2C LDR X8, [X24 + 0x38]
	0x01DB6C30 CBZ X8, 0x1DB6DCC
	0x01DB6C34 LDR X0, [X8 + 0x50]
	0x01DB6C38 MOV W1, W25
	0x01DB6C3C MOV X2, X31
	0x01DB6C40 BL 0x1ED9318
	0x01DB6C44 LDR X8, [X24 + 0x40]
	0x01DB6C48 CBZ X8, 0x1DB6DCC
	0x01DB6C4C LDR X8, [X8 + 0x20]
	0x01DB6C50 MOV X25, X0
	0x01DB6C54 ADD X26, X0, 0x1C
	0x01DB6C58 CBZ X8, 0x1DB6D04
	0x01DB6C5C LDR W0, [X8]
	0x01DB6C60 B 0x1DB6D08
	0x01DB6C64 LDR X0, [X26]
	0x01DB6C68 LDR X19, [X24 + 0x40]
	0x01DB6C6C LDR W8, [X0 + 0xE0]
	0x01DB6C70 CBNZ W8, 0x1DB6C78
	0x01DB6C74 BL 0x1C16DFC
	0x01DB6C78 ADRP X8, 0x2341000
	0x01DB6C7C LDR X8, [X8 + 0xC28]
	0x01DB6C80 MOV X1, X19
	0x01DB6C84 LDP X20, X19, [X31 + 0x80]
	0x01DB6C88 LDP X22, X21, [X31 + 0x70]
	0x01DB6C8C LDR X0, [X8]
	0x01DB6C90 LDP X24, X23, [X31 + 0x60]
	0x01DB6C94 LDP X26, X25, [X31 + 0x50]
	0x01DB6C98 LDP X30, X27, [X31 + 0x40]
	0x01DB6C9C LDP D9, D8, [X31 + 0x30]
	0x01DB6CA0 LDP D11, D10, [X31 + 0x20]
	0x01DB6CA4 LDP D13, D12, [X31 + 0x10]
	0x01DB6CA8 MOVZ W2, 0x7
	0x01DB6CAC MOV X3, X31
	0x01DB6CB0 LDR V14, [X31], #0x90
	0x01DB6CB4 B 0x1E77B00
	0x01DB6CB8 LDR X0, [X26]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], D9
	003 Move [X31+40], D8
	004 Move [X31+48], X30
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 NotImplemented "Instruction MRS not yet implemented."
	009 Move X8, [X21+40]
	010 Move X19, X0
	011 Move [X31+24], X8
	012 Move X20, [X0+200]
	013 Add X8, X31, 0
	014 Call NetPlayer.get_fingerValues, X0
	015 Move V8, [X31]
	016 Add X8, X31, 0
	017 Move X0, X19
	018 Call NetPlayer.get_fingerValues, X0
	019 Move V9, [X31+4]
	020 Add X8, X31, 0
	021 Move X0, X19
	022 Call NetPlayer.get_fingerValues, X0
	023 Compare X20, 0
	024 JumpIfEqual {64}
	025 Move V2, [X31+8]
	026 Move X0, X20
	027 Move W1, W31
	028 Move V0, V8
	029 Move V1, V9
	030 Move X2, X31
	031 Call PlayerView.SetFingerValues, X0, X1, V0, V1, V2
	032 Move X20, [X19+200]
	033 Add X8, X31, 0
	034 Move X0, X19
	035 Call NetPlayer.get_fingerValues, X0
	036 Move V8, [X31+12]
	037 Add X8, X31, 0
	038 Move X0, X19
	039 Call NetPlayer.get_fingerValues, X0
	040 Move V9, [X31+16]
	041 Add X8, X31, 0
	042 Move X0, X19
	043 Call NetPlayer.get_fingerValues, X0
	044 Compare X20, 0
	045 JumpIfEqual {64}
	046 Move V2, [X31+20]
	047 Move W1, 1
	048 Move X0, X20
	049 Move V0, V8
	050 Move V1, V9
	051 Move X2, X31
	052 Call PlayerView.SetFingerValues, X0, X1, V0, V1, V2
	053 Move X8, [X21+40]
	054 Move X9, [X31+24]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X20, [X31+64]
	057 Move X19, [X31+72]
	058 Move X30, [X31+48]
	059 Move X21, [X31+56]
	060 Move D9, [X31+32]
	061 Move D8, [X31+40]
	062 Add X31, X31, 80
	063 Return 
	064 Call 0x1C17F20
	065 Call 0x3EB2B20

Method: System.Collections.IEnumerator VoiceVolumeUpdater()

Disassembly:
	0x01DB404C BL 0x1C16CF4
	0x01DB4050 ADRP X0, 0x2342000
	0x01DB4054 LDR X0, [X0 + 0x898]
	0x01DB4058 BL 0x1C16CF4
	0x01DB405C ADRP X0, 0x2342000
	0x01DB4060 LDR X0, [X0 + 0x8A0]
	0x01DB4064 BL 0x1C16CF4
	0x01DB4068 ADRP X0, 0x2343000
	0x01DB406C LDR X0, [X0 + 0xBA8]
	0x01DB4070 BL 0x1C16CF4
	0x01DB4074 ADRP X0, 0x2343000
	0x01DB4078 LDR X0, [X0 + 0xBB0]
	0x01DB407C BL 0x1C16CF4
	0x01DB4080 ADRP X0, 0x233F000
	0x01DB4084 LDR X0, [X0 + 0xE00]
	0x01DB4088 BL 0x1C16CF4
	0x01DB408C ADRP X0, 0x233F000
	0x01DB4090 LDR X0, [X0 + 0xF70]
	0x01DB4094 BL 0x1C16CF4
	0x01DB4098 ADRP X0, 0x233F000
	0x01DB409C LDR X0, [X0 + 0xF78]
	0x01DB40A0 BL 0x1C16CF4
	0x01DB40A4 ADRP X0, 0x233F000
	0x01DB40A8 LDR X0, [X0 + 0xE18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2625000
	006 Move X21, 0x2344000
	007 Move W8, [X20+2831]
	008 Move X21, [X21+2904]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2344000
	015 Move X0, [X0+2904]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2831], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move [X20+16], W31
	025 Move [X20+32], X19
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Collections.IEnumerator RemoteVoiceVolumeUpdater()

Disassembly:
	0x01DB40AC BL 0x1C16CF4
	0x01DB40B0 ADRP X0, 0x2340000
	0x01DB40B4 LDR X0, [X0 + 0xE10]
	0x01DB40B8 BL 0x1C16CF4
	0x01DB40BC ADRP X0, 0x2343000
	0x01DB40C0 LDR X0, [X0 + 0xB70]
	0x01DB40C4 BL 0x1C16CF4
	0x01DB40C8 ADRP X0, 0x2340000
	0x01DB40CC LDR X0, [X0 + 0xE30]
	0x01DB40D0 BL 0x1C16CF4
	0x01DB40D4 ADRP X0, 0x2342000
	0x01DB40D8 LDR X0, [X0 + 0x6E8]
	0x01DB40DC BL 0x1C16CF4
	0x01DB40E0 ADRP X0, 0x2342000
	0x01DB40E4 LDR X0, [X0 + 0x8A8]
	0x01DB40E8 BL 0x1C16CF4
	0x01DB40EC ADRP X0, 0x2340000
	0x01DB40F0 LDR X0, [X0 + 0x1F8]
	0x01DB40F4 BL 0x1C16CF4
	0x01DB40F8 ADRP X0, 0x2343000
	0x01DB40FC LDR X0, [X0 + 0xBB8]
	0x01DB4100 BL 0x1C16CF4
	0x01DB4104 ADRP X0, 0x2343000
	0x01DB4108 LDR X0, [X0 + 0xBC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2625000
	006 Move X21, 0x2344000
	007 Move W8, [X20+2832]
	008 Move X21, [X21+2912]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2344000
	015 Move X0, [X0+2912]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2832], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move [X20+16], W31
	025 Move [X20+32], X19
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Void LerpFromRigData(UnityEngine.Transform viewTransform, UnityEngine.Transform srcTransform)

Disassembly:
	0x01DB6D0C MOVZ W2, 0x3
	0x01DB6D10 MOV X3, X31
	0x01DB6D14 BL 0x1E9C23C
	0x01DB6D18 STUR X0, [X25 + 0x1C]
	0x01DB6D1C ADD X0, X25, 0x44
	0x01DB6D20 MOV X1, X21
	0x01DB6D24 MOV X2, X31
	0x01DB6D28 STR W22, [X25 + 0x24]
	0x01DB6D2C STP S14, S13, [X25 + 0x28]
	0x01DB6D30 STP S12, S11, [X25 + 0x30]
	0x01DB6D34 STP S10, S9, [X25 + 0x38]
	0x01DB6D38 STR S8, [X25 + 0x40]
	0x01DB6D3C BL 0x1E8DCF8
	0x01DB6D40 ADD W8, W0, 0x2B
	0x01DB6D44 AND W21, W8, 0xFFFFFFFC
	0x01DB6D48 ADD X0, X26, W21, SXTW
	0x01DB6D4C MOV X1, X20
	0x01DB6D50 MOV X2, X31
	0x01DB6D54 BL 0x1E8DCF8
	0x01DB6D58 ADD W8, W0, 0x3
	0x01DB6D5C AND W8, W8, 0xFFFFFFFC
	0x01DB6D60 ADD W20, W8, W21
	0x01DB6D64 ADD X0, X26, W20, SXTW
	0x01DB6D68 MOV X1, X19
	0x01DB6D6C MOV X2, X31
	0x01DB6D70 BL 0x1E8DCF8
	0x01DB6D74 ADD W8, W0, 0x3
	0x01DB6D78 AND W8, W8, 0xFFFFFFFC
	0x01DB6D7C ADD W8, W20, W8
	0x01DB6D80 STR X23, [X26, W8, SXTW]
	0x01DB6D84 CBZ X25, 0x1DB6DCC
	0x01DB6D88 UBFM W8, W8, 0x1D, 0x1C
	0x01DB6D8C ADD W8, W8, 0x40
	0x01DB6D90 STR W8, [X25 + 0xC]
	0x01DB6D94 LDR X0, [X24 + 0x38]
	0x01DB6D98 CBZ X0, 0x1DB6DCC
	0x01DB6D9C MOV X1, X25
	0x01DB6DA0 LDP X20, X19, [X31 + 0x80]
	0x01DB6DA4 LDP X22, X21, [X31 + 0x70]
	0x01DB6DA8 LDP X24, X23, [X31 + 0x60]
	0x01DB6DAC LDP X26, X25, [X31 + 0x50]
	0x01DB6DB0 LDP X30, X27, [X31 + 0x40]
	0x01DB6DB4 LDP D9, D8, [X31 + 0x30]
	0x01DB6DB8 LDP D11, D10, [X31 + 0x20]
	0x01DB6DBC LDP D13, D12, [X31 + 0x10]
	0x01DB6DC0 MOV X2, X31
	0x01DB6DC4 LDR V14, [X31], #0x90
	0x01DB6DC8 B 0x1EA1E24
	0x01DB6DCC BL 0x1C16F20
	0x01DB6DD0 SUB X31, X31, 0xA0
	0x01DB6DD4 STP D15, D14, [X31 + 0x10]
	0x01DB6DD8 STP D13, D12, [X31 + 0x20]
	0x01DB6DDC STP D11, D10, [X31 + 0x30]
	0x01DB6DE0 STP D9, D8, [X31 + 0x40]
	0x01DB6DE4 STP X30, X27, [X31 + 0x50]
	0x01DB6DE8 STP X26, X25, [X31 + 0x60]
	0x01DB6DEC STP X24, X23, [X31 + 0x70]
	0x01DB6DF0 STP X22, X21, [X31 + 0x80]
	0x01DB6DF4 STP X20, X19, [X31 + 0x90]
	0x01DB6DF8 ADRP X25, 0x2622000
	0x01DB6DFC MOV V14.16B, V0.16B
	0x01DB6E00 LDR V7, [X31 + 0xA8]
	0x01DB6E04 LDRB W8, [X25 + 0xB15]
	0x01DB6E08 LDP S15, S0, [X31 + 0xA0]
	0x01DB6E0C MOV X23, X5
	0x01DB6E10 MOV X19, X4
	0x01DB6E14 MOV X20, X3
	0x01DB6E18 MOV X21, X2
	0x01DB6E1C MOV V8.16B, V6.16B
	0x01DB6E20 MOV V9.16B, V5.16B
	0x01DB6E24 MOV V10.16B, V4.16B
	0x01DB6E28 MOV V11.16B, V3.16B
	0x01DB6E2C MOV V12.16B, V2.16B
	0x01DB6E30 MOV V13.16B, V1.16B
	0x01DB6E34 MOV W22, W1
	0x01DB6E38 MOV X24, X0
	0x01DB6E3C STP S0, S7, [X31 + 0x8]
	0x01DB6E40 TBNZ X8, 0x0, 0x1DB6E70
	0x01DB6E44 ADRP X0, 0x2340000
	0x01DB6E48 LDR X0, [X0 + 0xA78]
	0x01DB6E4C BL 0x1C16CF4
	0x01DB6E50 ADRP X0, 0x233F000
	0x01DB6E54 LDR X0, [X0 + 0x7C8]
	0x01DB6E58 BL 0x1C16CF4
	0x01DB6E5C ADRP X0, 0x2341000
	0x01DB6E60 LDR X0, [X0 + 0xC30]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, X0
	015 Move X0, X31
	016 Move X20, X2
	017 Move X19, X1
	018 Call Time.get_time
	019 Compare X19, 0
	020 JumpIfEqual {101}
	021 Move V12, [X21+464]
	022 Move X0, X19
	023 Move X1, X31
	024 Move V11, V0
	025 Call Transform.get_localPosition, X0
	026 Compare X20, 0
	027 JumpIfEqual {101}
	028 Move V8, V0
	029 Move V9, V1
	030 Subtract S0, S11, S12
	031 Move S1, 8
	032 Move V10, V2
	033 Move S2, 1
	034 Multiply S0, S0, S1
	035 NotImplemented "Instruction FMIN not yet implemented."
	036 NotImplemented "Instruction FCMP not yet implemented."
	037 Move S0, W31
	038 Move X0, X20
	039 Move X1, X31
	040 NotImplemented "Instruction FCSEL not yet implemented."
	041 Call Transform.get_localPosition, X0
	042 Subtract S0, S0, S8
	043 Move S3, 0.5
	044 Subtract S1, S1, S9
	045 Subtract S2, S2, S10
	046 Multiply S0, S0, S3
	047 Multiply S1, S1, S3
	048 Multiply S2, S2, S3
	049 Move X0, X19
	050 Move X1, X31
	051 Add S8, S8, S0
	052 Add S9, S9, S1
	053 Add S10, S10, S2
	054 Call Transform.get_localRotation, X0
	055 Move X0, X20
	056 Move X1, X31
	057 Move V11, V0
	058 Move V12, V1
	059 Move V13, V2
	060 Move V14, V3
	061 Call Transform.get_localRotation, X0
	062 Move V4, V0
	063 Move V5, V1
	064 Move V6, V2
	065 Move V7, V3
	066 Move V0, V11
	067 Move V1, V12
	068 Move V2, V13
	069 Move V3, V14
	070 Move X0, X31
	071 Move [X31], S15
	072 Call Quaternion.Lerp, X0, X1, V0
	073 Move V4, V0
	074 Move V5, V1
	075 Move V6, V2
	076 Move X0, X19
	077 Move V0, V8
	078 Move V1, V9
	079 Move V2, V10
	080 Move X20, [X31+96]
	081 Move X19, [X31+104]
	082 Move X30, [X31+80]
	083 Move X21, [X31+88]
	084 Move D9, [X31+64]
	085 Move D8, [X31+72]
	086 Move D11, [X31+48]
	087 Move D10, [X31+56]
	088 Move D13, [X31+32]
	089 Move D12, [X31+40]
	090 Move D15, [X31+16]
	091 Move D14, [X31+24]
	092 Move V7, V3
	093 Move V3, V4
	094 Move V4, V5
	095 Move V5, V6
	096 Move V6, V7
	097 Move X1, X31
	098 Add X31, X31, 112
	099 Call Transform.SetLocalPositionAndRotation, X0, X1, X2
	100 Return 
	101 Call 0x1C17F20

Method: System.Void LateUpdate()

Disassembly:
	0x01DB6E64 BL 0x1C16CF4
	0x01DB6E68 MOVZ W8, 0x1
	0x01DB6E6C STRB W8, [X25 + 0xB15]
	0x01DB6E70 LDRB W8, [X24 + 0x58]
	0x01DB6E74 CBZ W8, 0x1DB6F64
	0x01DB6E78 STRB W31, [X24 + 0x58]
	0x01DB6E7C LDR X0, [X24 + 0x40]
	0x01DB6E80 CBZ X0, 0x1DB7218
	0x01DB6E84 MOV X1, X31
	0x01DB6E88 BL 0x1E93588
	0x01DB6E8C TBZ X0, 0x0, 0x1DB6FA0
	0x01DB6E90 MOV X0, X24
	0x01DB6E94 MOV X1, X23
	0x01DB6E98 BL 0x1DB68B8
	0x01DB6E9C TBZ X0, 0x0, 0x1DB6FA0
	0x01DB6EA0 ADRP X23, 0x233F000
	0x01DB6EA4 LDR X23, [X23 + 0x7C8]
	0x01DB6EA8 LDR X0, [X23]
	0x01DB6EAC LDR W8, [X0 + 0xE0]
	0x01DB6EB0 CBNZ W8, 0x1DB6EB8
	0x01DB6EB4 BL 0x1C16DFC
	0x01DB6EB8 ADRP X24, 0x2622000
	0x01DB6EBC LDRB W8, [X24 + 0x85D]
	0x01DB6EC0 CBNZ W8, 0x1DB6ED8
	0x01DB6EC4 ADRP X0, 0x233F000
	0x01DB6EC8 LDR X0, [X0 + 0x7C8]
	0x01DB6ECC BL 0x1C16CF4
	0x01DB6ED0 MOVZ W8, 0x1
	0x01DB6ED4 STRB W8, [X24 + 0x85D]
	0x01DB6ED8 LDR X0, [X23]
	0x01DB6EDC LDR W8, [X0 + 0xE0]
	0x01DB6EE0 CBNZ W8, 0x1DB6EEC
	0x01DB6EE4 BL 0x1C16DFC
	0x01DB6EE8 LDR X0, [X23]
	0x01DB6EEC LDR X8, [X0 + 0xB8]
	0x01DB6EF0 LDR X0, [X8]
	0x01DB6EF4 CBZ X0, 0x1DB7218
	0x01DB6EF8 LDR V0, [X31 + 0x8]
	0x01DB6EFC MOV W1, W22
	0x01DB6F00 MOV V1.16B, V13.16B
	0x01DB6F04 MOV V2.16B, V12.16B
	0x01DB6F08 STP S15, S0, [X31 + 0xA0]
	0x01DB6F0C LDR V0, [X31 + 0xC]
	0x01DB6F10 MOV V3.16B, V11.16B
	0x01DB6F14 MOV V4.16B, V10.16B
	0x01DB6F18 MOV V5.16B, V9.16B
	0x01DB6F1C STR S0, [X31 + 0xA8]
	0x01DB6F20 MOV V0.16B, V14.16B
	0x01DB6F24 MOV V6.16B, V8.16B
	0x01DB6F28 MOV X2, X21
	0x01DB6F2C MOV X3, X20
	0x01DB6F30 MOV X4, X19
	0x01DB6F34 LDP X20, X19, [X31 + 0x90]
	0x01DB6F38 LDP X22, X21, [X31 + 0x80]
	0x01DB6F3C LDP X24, X23, [X31 + 0x70]
	0x01DB6F40 LDP X26, X25, [X31 + 0x60]
	0x01DB6F44 LDP X30, X27, [X31 + 0x50]
	0x01DB6F48 LDP D9, D8, [X31 + 0x40]
	0x01DB6F4C LDP D11, D10, [X31 + 0x30]
	0x01DB6F50 LDP D13, D12, [X31 + 0x20]
	0x01DB6F54 LDP D15, D14, [X31 + 0x10]
	0x01DB6F58 MOV X5, X31
	0x01DB6F5C ADD X31, X31, 0xA0
	0x01DB6F60 B 0x1DC2054
	0x01DB6F64 ADRP X26, 0x2340000
	0x01DB6F68 LDR X26, [X26 + 0xA78]
	0x01DB6F6C LDR X0, [X26]
	0x01DB6F70 LDR W8, [X0 + 0xE0]
	0x01DB6F74 CBNZ W8, 0x1DB6F7C
	0x01DB6F78 BL 0x1C16DFC
	0x01DB6F7C MOV X0, X24
	0x01DB6F80 MOV X1, X31
	0x01DB6F84 BL 0x1E77B08
	0x01DB6F88 LDR X0, [X24 + 0x38]
	0x01DB6F8C CBZ X0, 0x1DB7218
	0x01DB6F90 MOV X1, X31
	0x01DB6F94 BL 0x1E9E538
	0x01DB6F98 CMP W0, 0x4
	0x01DB6F9C B.NE 0x1DB6FCC
	0x01DB6FA0 LDP X20, X19, [X31 + 0x90]
	0x01DB6FA4 LDP X22, X21, [X31 + 0x80]
	0x01DB6FA8 LDP X24, X23, [X31 + 0x70]
	0x01DB6FAC LDP X26, X25, [X31 + 0x60]
	0x01DB6FB0 LDP X30, X27, [X31 + 0x50]
	0x01DB6FB4 LDP D9, D8, [X31 + 0x40]
	0x01DB6FB8 LDP D11, D10, [X31 + 0x30]
	0x01DB6FBC LDP D13, D12, [X31 + 0x20]
	0x01DB6FC0 LDP D15, D14, [X31 + 0x10]
	0x01DB6FC4 ADD X31, X31, 0xA0
	0x01DB6FC8 RET
	0x01DB6FCC LDR X0, [X24 + 0x40]
	0x01DB6FD0 CBZ X0, 0x1DB7218
	0x01DB6FD4 MOV X1, X31
	0x01DB6FD8 BL 0x1E94078
	0x01DB6FDC ANDS W31, W0, 0x7
	0x01DB6FE0 B.EQ 0x1DB708C
	0x01DB6FE4 TBNZ X0, 0x1, 0x1DB6E7C
	0x01DB6FE8 MOV X0, X21
	0x01DB6FEC MOV X1, X31
	0x01DB6FF0 BL 0x1E8DD08
	0x01DB6FF4 MOV W25, W0
	0x01DB6FF8 MOV X0, X20
	0x01DB6FFC MOV X1, X31
	0x01DB7000 BL 0x1E8DD08
	0x01DB7004 ADD W8, W0, 0x3
	0x01DB7008 MOV X0, X19
	0x01DB700C MOV X1, X31
	0x01DB7010 AND W27, W8, 0xFFFFFFFC
	0x01DB7014 BL 0x1E8DD08
	0x01DB7018 ADD W9, W25, 0x3F
	0x01DB701C ADD W8, W0, 0x3
	0x01DB7020 AND W9, W9, 0xFFFFFFFC
	0x01DB7024 AND W8, W8, 0xFFFFFFFC
	0x01DB7028 ADD W9, W9, W27
	0x01DB702C ADD W25, W9, W8
	0x01DB7030 CMP W25, 0x201
	0x01DB7034 B.GE 0x1DB70E4
	0x01DB7038 LDR X8, [X24 + 0x38]
	0x01DB703C CBZ X8, 0x1DB7218
	0x01DB7040 LDR X0, [X8 + 0x50]
	0x01DB7044 CBZ X0, 0x1DB7218
	0x01DB7048 MOV X1, X31
	0x01DB704C BL 0x1EC4D00
	0x01DB7050 TBZ X0, 0x0, 0x1DB6FA0
	0x01DB7054 LDR X8, [X24 + 0x38]
	0x01DB7058 CBZ X8, 0x1DB7218
	0x01DB705C LDR X0, [X8 + 0x50]
	0x01DB7060 MOV W1, W25
	0x01DB7064 MOV X2, X31
	0x01DB7068 BL 0x1ED9318
	0x01DB706C LDR X8, [X24 + 0x40]
	0x01DB7070 CBZ X8, 0x1DB7218
	0x01DB7074 LDR X8, [X8 + 0x20]
	0x01DB7078 MOV X25, X0
	0x01DB707C ADD X26, X0, 0x1C
	0x01DB7080 CBZ X8, 0x1DB7134
	0x01DB7084 LDR W0, [X8]
	0x01DB7088 B 0x1DB7138
	0x01DB708C LDR X0, [X26]
	0x01DB7090 LDR X19, [X24 + 0x40]
	0x01DB7094 LDR W8, [X0 + 0xE0]
	0x01DB7098 CBNZ W8, 0x1DB70A0
	0x01DB709C BL 0x1C16DFC
	0x01DB70A0 ADRP X8, 0x2340000
	0x01DB70A4 LDR X8, [X8 + 0xC30]
	0x01DB70A8 MOV X1, X19
	0x01DB70AC LDP X20, X19, [X31 + 0x90]
	0x01DB70B0 LDP X22, X21, [X31 + 0x80]
	0x01DB70B4 LDR X0, [X8]
	0x01DB70B8 LDP X24, X23, [X31 + 0x70]
	0x01DB70BC LDP X26, X25, [X31 + 0x60]
	0x01DB70C0 LDP X30, X27, [X31 + 0x50]
	0x01DB70C4 LDP D9, D8, [X31 + 0x40]
	0x01DB70C8 LDP D11, D10, [X31 + 0x30]
	0x01DB70CC LDP D13, D12, [X31 + 0x20]
	0x01DB70D0 LDP D15, D14, [X31 + 0x10]
	0x01DB70D4 MOVZ W2, 0x7
	0x01DB70D8 MOV X3, X31
	0x01DB70DC ADD X31, X31, 0xA0
	0x01DB70E0 B 0x1E77B00
	0x01DB70E4 LDR X0, [X26]
	0x01DB70E8 LDR W8, [X0 + 0xE0]
	0x01DB70EC CBNZ W8, 0x1DB70F4
	0x01DB70F0 BL 0x1C16DFC
	0x01DB70F4 ADRP X8, 0x2340000
	0x01DB70F8 LDR X8, [X8 + 0xC30]
	0x01DB70FC MOV W1, W25
	0x01DB7100 LDP X20, X19, [X31 + 0x90]
	0x01DB7104 LDP X22, X21, [X31 + 0x80]
	0x01DB7108 LDR X0, [X8]
	0x01DB710C LDP X24, X23, [X31 + 0x70]
	0x01DB7110 LDP X26, X25, [X31 + 0x60]
	0x01DB7114 LDP X30, X27, [X31 + 0x50]
	0x01DB7118 LDP D9, D8, [X31 + 0x40]
	0x01DB711C LDP D11, D10, [X31 + 0x30]
	0x01DB7120 LDP D13, D12, [X31 + 0x20]
	0x01DB7124 LDP D15, D14, [X31 + 0x10]
	0x01DB7128 MOV X2, X31
	0x01DB712C ADD X31, X31, 0xA0
	0x01DB7130 B 0x1E77AF8
	0x01DB7134 MOV X0, X31
	0x01DB7138 LDR W1, [X24 + 0x68]
	0x01DB713C MOVZ W2, 0x4
	0x01DB7140 MOV X3, X31
	0x01DB7144 BL 0x1E9C23C
	0x01DB7148 STUR X0, [X25 + 0x1C]
	0x01DB714C ADD X0, X25, 0x44
	0x01DB7150 MOV X1, X21
	0x01DB7154 MOV X2, X31
	0x01DB7158 STR W22, [X25 + 0x24]
	0x01DB715C STP S14, S13, [X25 + 0x28]
	0x01DB7160 STP S12, S11, [X25 + 0x30]
	0x01DB7164 STP S10, S9, [X25 + 0x38]
	0x01DB7168 STR S8, [X25 + 0x40]
	0x01DB716C BL 0x1E8DCF8
	0x01DB7170 ADD W8, W0, 0x2B
	0x01DB7174 AND W21, W8, 0xFFFFFFFC
	0x01DB7178 ADD X0, X26, W21, SXTW
	0x01DB717C MOV X1, X20
	0x01DB7180 MOV X2, X31
	0x01DB7184 BL 0x1E8DCF8
	0x01DB7188 ADD W8, W0, 0x3
	0x01DB718C LDR V0, [X31 + 0x8]
	0x01DB7190 AND W8, W8, 0xFFFFFFFC
	0x01DB7194 ADD W8, W8, W21
	0x01DB7198 ADD X9, X26, W8, SXTW
	0x01DB719C STP S15, S0, [X9]
	0x01DB71A0 LDR V0, [X31 + 0xC]
	0x01DB71A4 ADD W20, W8, 0xC
	0x01DB71A8 ADD X0, X26, W20, SXTW
	0x01DB71AC MOV X1, X19
	0x01DB71B0 MOV X2, X31
	0x01DB71B4 STR S0, [X9 + 0x8]
	0x01DB71B8 BL 0x1E8DCF8
	0x01DB71BC ADD W8, W0, 0x3
	0x01DB71C0 AND W8, W8, 0xFFFFFFFC
	0x01DB71C4 ADD W8, W8, W20
	0x01DB71C8 STR X23, [X26, W8, SXTW]
	0x01DB71CC CBZ X25, 0x1DB7218
	0x01DB71D0 UBFM W8, W8, 0x1D, 0x1C
	0x01DB71D4 ADD W8, W8, 0x40
	0x01DB71D8 STR W8, [X25 + 0xC]
	0x01DB71DC LDR X0, [X24 + 0x38]
	0x01DB71E0 CBZ X0, 0x1DB7218
	0x01DB71E4 MOV X1, X25
	0x01DB71E8 LDP X20, X19, [X31 + 0x90]
	0x01DB71EC LDP X22, X21, [X31 + 0x80]
	0x01DB71F0 LDP X24, X23, [X31 + 0x70]
	0x01DB71F4 LDP X26, X25, [X31 + 0x60]
	0x01DB71F8 LDP X30, X27, [X31 + 0x50]
	0x01DB71FC LDP D9, D8, [X31 + 0x40]
	0x01DB7200 LDP D11, D10, [X31 + 0x30]
	0x01DB7204 LDP D13, D12, [X31 + 0x20]
	0x01DB7208 LDP D15, D14, [X31 + 0x10]
	0x01DB720C MOV X2, X31
	0x01DB7210 ADD X31, X31, 0xA0
	0x01DB7214 B 0x1EA1E24
	0x01DB7218 BL 0x1C16F20
	0x01DB721C STR D14, [X31 - 0x90]!
	0x01DB7220 STP D13, D12, [X31 + 0x8]
	0x01DB7224 STP D11, D10, [X31 + 0x18]
	0x01DB7228 STP D9, D8, [X31 + 0x28]
	0x01DB722C STR X30, [X31 + 0x38]
	0x01DB7230 STP X28, X27, [X31 + 0x40]
	0x01DB7234 STP X26, X25, [X31 + 0x50]
	0x01DB7238 STP X24, X23, [X31 + 0x60]
	0x01DB723C STP X22, X21, [X31 + 0x70]
	0x01DB7240 STP X20, X19, [X31 + 0x80]
	0x01DB7244 ADRP X26, 0x2621000
	0x01DB7248 LDRB W8, [X26 + 0xB16]
	0x01DB724C MOV X24, X6
	0x01DB7250 MOV X19, X5
	0x01DB7254 MOV W20, W4
	0x01DB7258 MOV X21, X3
	0x01DB725C MOV X22, X2
	0x01DB7260 MOV V8.16B, V6.16B
	0x01DB7264 MOV V9.16B, V5.16B
	0x01DB7268 MOV V10.16B, V4.16B
	0x01DB726C MOV V11.16B, V3.16B
	0x01DB7270 MOV V12.16B, V2.16B
	0x01DB7274 MOV V13.16B, V1.16B
	0x01DB7278 MOV V14.16B, V0.16B
	0x01DB727C MOV W23, W1
	0x01DB7280 MOV X25, X0
	0x01DB7284 TBNZ X8, 0x0, 0x1DB72B4
	0x01DB7288 ADRP X0, 0x233F000
	0x01DB728C LDR X0, [X0 + 0xA78]
	0x01DB7290 BL 0x1C16CF4
	0x01DB7294 ADRP X0, 0x233E000
	0x01DB7298 LDR X0, [X0 + 0x7C8]
	0x01DB729C BL 0x1C16CF4
	0x01DB72A0 ADRP X0, 0x2340000
	0x01DB72A4 LDR X0, [X0 + 0xC38]
	0x01DB72A8 BL 0x1C16CF4
	0x01DB72AC MOVZ W8, 0x1
	0x01DB72B0 STRB W8, [X26 + 0xB16]
	0x01DB72B4 LDRB W8, [X25 + 0x58]
	0x01DB72B8 CBZ W8, 0x1DB739C
	0x01DB72BC STRB W31, [X25 + 0x58]
	0x01DB72C0 LDR X0, [X25 + 0x40]
	0x01DB72C4 CBZ X0, 0x1DB7640
	0x01DB72C8 MOV X1, X31
	0x01DB72CC BL 0x1E93588
	0x01DB72D0 TBZ X0, 0x0, 0x1DB73D8
	0x01DB72D4 MOV X0, X25
	0x01DB72D8 MOV X1, X24
	0x01DB72DC BL 0x1DB68B8
	0x01DB72E0 TBZ X0, 0x0, 0x1DB73D8
	0x01DB72E4 ADRP X24, 0x233E000
	0x01DB72E8 LDR X24, [X24 + 0x7C8]
	0x01DB72EC LDR X0, [X24]
	0x01DB72F0 LDR W8, [X0 + 0xE0]
	0x01DB72F4 CBNZ W8, 0x1DB72FC
	0x01DB72F8 BL 0x1C16DFC
	0x01DB72FC ADRP X25, 0x2621000
	0x01DB7300 LDRB W8, [X25 + 0x85D]
	0x01DB7304 CBNZ W8, 0x1DB731C
	0x01DB7308 ADRP X0, 0x233E000
	0x01DB730C LDR X0, [X0 + 0x7C8]
	0x01DB7310 BL 0x1C16CF4
	0x01DB7314 MOVZ W8, 0x1
	0x01DB7318 STRB W8, [X25 + 0x85D]
	0x01DB731C LDR X0, [X24]
	0x01DB7320 LDR W8, [X0 + 0xE0]
	0x01DB7324 CBNZ W8, 0x1DB7330
	0x01DB7328 BL 0x1C16DFC
	0x01DB732C LDR X0, [X24]
	0x01DB7330 LDR X8, [X0 + 0xB8]
	0x01DB7334 LDR X0, [X8]
	0x01DB7338 CBZ X0, 0x1DB7640
	0x01DB733C MOV W1, W23
	0x01DB7340 MOV V1.16B, V13.16B
	0x01DB7344 MOV V2.16B, V12.16B
	0x01DB7348 MOV V3.16B, V11.16B
	0x01DB734C MOV V4.16B, V10.16B
	0x01DB7350 MOV V5.16B, V9.16B
	0x01DB7354 MOV V6.16B, V8.16B
	0x01DB7358 MOV X2, X22
	0x01DB735C MOV X3, X21
	0x01DB7360 MOV W4, W20
	0x01DB7364 MOV X5, X19
	0x01DB7368 LDP X20, X19, [X31 + 0x80]
	0x01DB736C LDP X22, X21, [X31 + 0x70]
	0x01DB7370 LDP X24, X23, [X31 + 0x60]
	0x01DB7374 LDP X26, X25, [X31 + 0x50]
	0x01DB7378 LDP X28, X27, [X31 + 0x40]
	0x01DB737C LDR X30, [X31 + 0x38]
	0x01DB7380 LDP D9, D8, [X31 + 0x28]
	0x01DB7384 LDP D11, D10, [X31 + 0x18]
	0x01DB7388 LDP D13, D12, [X31 + 0x8]
	0x01DB738C MOV V0.16B, V14.16B
	0x01DB7390 MOV X6, X31
	0x01DB7394 LDR V14, [X31], #0x90
	0x01DB7398 B 0x1DC17C4
	0x01DB739C ADRP X27, 0x233F000
	0x01DB73A0 LDR X27, [X27 + 0xA78]
	0x01DB73A4 LDR X0, [X27]
	0x01DB73A8 LDR W8, [X0 + 0xE0]
	0x01DB73AC CBNZ W8, 0x1DB73B4
	0x01DB73B0 BL 0x1C16DFC
	0x01DB73B4 MOV X0, X25
	0x01DB73B8 MOV X1, X31
	0x01DB73BC BL 0x1E77B08
	0x01DB73C0 LDR X0, [X25 + 0x38]
	0x01DB73C4 CBZ X0, 0x1DB7640
	0x01DB73C8 MOV X1, X31
	0x01DB73CC BL 0x1E9E538
	0x01DB73D0 CMP W0, 0x4
	0x01DB73D4 B.NE 0x1DB7404
	0x01DB73D8 LDP X20, X19, [X31 + 0x80]
	0x01DB73DC LDP X22, X21, [X31 + 0x70]
	0x01DB73E0 LDP X24, X23, [X31 + 0x60]
	0x01DB73E4 LDP X26, X25, [X31 + 0x50]
	0x01DB73E8 LDP X28, X27, [X31 + 0x40]
	0x01DB73EC LDR X30, [X31 + 0x38]
	0x01DB73F0 LDP D9, D8, [X31 + 0x28]
	0x01DB73F4 LDP D11, D10, [X31 + 0x18]
	0x01DB73F8 LDP D13, D12, [X31 + 0x8]
	0x01DB73FC LDR V14, [X31], #0x90
	0x01DB7400 RET
	0x01DB7404 LDR X0, [X25 + 0x40]
	0x01DB7408 CBZ X0, 0x1DB7640
	0x01DB740C MOV X1, X31
	0x01DB7410 BL 0x1E94078
	0x01DB7414 ANDS W31, W0, 0x7
	0x01DB7418 B.EQ 0x1DB74C4
	0x01DB741C TBNZ X0, 0x1, 0x1DB72C0
	0x01DB7420 MOV X0, X22
	0x01DB7424 MOV X1, X31
	0x01DB7428 BL 0x1E8DD08
	0x01DB742C MOV W26, W0
	0x01DB7430 MOV X0, X21
	0x01DB7434 MOV X1, X31
	0x01DB7438 BL 0x1E8DD08
	0x01DB743C ADD W8, W0, 0x3
	0x01DB7440 MOV X0, X19
	0x01DB7444 MOV X1, X31
	0x01DB7448 AND W28, W8, 0xFFFFFFFC
	0x01DB744C BL 0x1E8DD08
	0x01DB7450 ADD W9, W26, 0x37
	0x01DB7454 ADD W8, W0, 0x3
	0x01DB7458 AND W9, W9, 0xFFFFFFFC
	0x01DB745C AND W8, W8, 0xFFFFFFFC
	0x01DB7460 ADD W9, W9, W28
	0x01DB7464 ADD W26, W9, W8
	0x01DB7468 CMP W26, 0x201
	0x01DB746C B.GE 0x1DB751C
	0x01DB7470 LDR X8, [X25 + 0x38]
	0x01DB7474 CBZ X8, 0x1DB7640
	0x01DB7478 LDR X0, [X8 + 0x50]
	0x01DB747C CBZ X0, 0x1DB7640
	0x01DB7480 MOV X1, X31
	0x01DB7484 BL 0x1EC4D00
	0x01DB7488 TBZ X0, 0x0, 0x1DB73D8
	0x01DB748C LDR X8, [X25 + 0x38]
	0x01DB7490 CBZ X8, 0x1DB7640
	0x01DB7494 LDR X0, [X8 + 0x50]
	0x01DB7498 MOV W1, W26
	0x01DB749C MOV X2, X31
	0x01DB74A0 BL 0x1ED9318
	0x01DB74A4 LDR X8, [X25 + 0x40]
	0x01DB74A8 CBZ X8, 0x1DB7640
	0x01DB74AC LDR X8, [X8 + 0x20]
	0x01DB74B0 MOV X26, X0
	0x01DB74B4 ADD X27, X0, 0x1C
	0x01DB74B8 CBZ X8, 0x1DB756C
	0x01DB74BC LDR W0, [X8]
	0x01DB74C0 B 0x1DB7570
	0x01DB74C4 LDR X0, [X27]
	0x01DB74C8 LDR X19, [X25 + 0x40]
	0x01DB74CC LDR W8, [X0 + 0xE0]
	0x01DB74D0 CBNZ W8, 0x1DB74D8
	0x01DB74D4 BL 0x1C16DFC
	0x01DB74D8 ADRP X8, 0x2340000
	0x01DB74DC LDR X8, [X8 + 0xC38]
	0x01DB74E0 MOV X1, X19
	0x01DB74E4 LDP X20, X19, [X31 + 0x80]
	0x01DB74E8 LDP X22, X21, [X31 + 0x70]
	0x01DB74EC LDR X0, [X8]
	0x01DB74F0 LDP X24, X23, [X31 + 0x60]
	0x01DB74F4 LDP X26, X25, [X31 + 0x50]
	0x01DB74F8 LDP X28, X27, [X31 + 0x40]
	0x01DB74FC LDR X30, [X31 + 0x38]
	0x01DB7500 LDP D9, D8, [X31 + 0x28]
	0x01DB7504 LDP D11, D10, [X31 + 0x18]
	0x01DB7508 LDP D13, D12, [X31 + 0x8]
	0x01DB750C MOVZ W2, 0x7
	0x01DB7510 MOV X3, X31
	0x01DB7514 LDR V14, [X31], #0x90
	0x01DB7518 B 0x1E77B00
	0x01DB751C LDR X0, [X27]
	0x01DB7520 LDR W8, [X0 + 0xE0]
	0x01DB7524 CBNZ W8, 0x1DB752C
	0x01DB7528 BL 0x1C16DFC
	0x01DB752C ADRP X8, 0x2340000
	0x01DB7530 LDR X8, [X8 + 0xC38]
	0x01DB7534 MOV W1, W26
	0x01DB7538 LDP X20, X19, [X31 + 0x80]
	0x01DB753C LDP X22, X21, [X31 + 0x70]
	0x01DB7540 LDR X0, [X8]
	0x01DB7544 LDP X24, X23, [X31 + 0x60]
	0x01DB7548 LDP X26, X25, [X31 + 0x50]
	0x01DB754C LDP X28, X27, [X31 + 0x40]
	0x01DB7550 LDR X30, [X31 + 0x38]
	0x01DB7554 LDP D9, D8, [X31 + 0x28]
	0x01DB7558 LDP D11, D10, [X31 + 0x18]
	0x01DB755C LDP D13, D12, [X31 + 0x8]
	0x01DB7560 MOV X2, X31
	0x01DB7564 LDR V14, [X31], #0x90
	0x01DB7568 B 0x1E77AF8
	0x01DB756C MOV X0, X31
	0x01DB7570 LDR W1, [X25 + 0x68]
	0x01DB7574 MOVZ W2, 0x5
	0x01DB7578 MOV X3, X31
	0x01DB757C BL 0x1E9C23C
	0x01DB7580 STUR X0, [X26 + 0x1C]
	0x01DB7584 ADD X0, X26, 0x44
	0x01DB7588 MOV X1, X22
	0x01DB758C MOV X2, X31
	0x01DB7590 STR W23, [X26 + 0x24]
	0x01DB7594 STP S14, S13, [X26 + 0x28]
	0x01DB7598 STP S12, S11, [X26 + 0x30]
	0x01DB759C STP S10, S9, [X26 + 0x38]
	0x01DB75A0 STR S8, [X26 + 0x40]
	0x01DB75A4 BL 0x1E8DCF8
	0x01DB75A8 ADD W8, W0, 0x2B
	0x01DB75AC AND W22, W8, 0xFFFFFFFC
	0x01DB75B0 ADD X0, X27, W22, SXTW
	0x01DB75B4 MOV X1, X21
	0x01DB75B8 MOV X2, X31
	0x01DB75BC BL 0x1E8DCF8
	0x01DB75C0 ADD W8, W0, 0x3
	0x01DB75C4 AND W8, W8, 0xFFFFFFFC
	0x01DB75C8 ADD W8, W8, W22
	0x01DB75CC STR W20, [X27, W8, SXTW]
	0x01DB75D0 ADD W20, W8, 0x4
	0x01DB75D4 ADD X0, X27, W20, SXTW
	0x01DB75D8 MOV X1, X19
	0x01DB75DC MOV X2, X31
	0x01DB75E0 BL 0x1E8DCF8
	0x01DB75E4 ADD W8, W0, 0x3
	0x01DB75E8 AND W8, W8, 0xFFFFFFFC
	0x01DB75EC ADD W8, W20, W8
	0x01DB75F0 STR X24, [X27, W8, SXTW]
	0x01DB75F4 CBZ X26, 0x1DB7640
	0x01DB75F8 UBFM W8, W8, 0x1D, 0x1C
	0x01DB75FC ADD W8, W8, 0x40
	0x01DB7600 STR W8, [X26 + 0xC]
	0x01DB7604 LDR X0, [X25 + 0x38]
	0x01DB7608 CBZ X0, 0x1DB7640
	0x01DB760C MOV X1, X26
	0x01DB7610 LDP X20, X19, [X31 + 0x80]
	0x01DB7614 LDP X22, X21, [X31 + 0x70]
	0x01DB7618 LDP X24, X23, [X31 + 0x60]
	0x01DB761C LDP X26, X25, [X31 + 0x50]
	0x01DB7620 LDP X28, X27, [X31 + 0x40]
	0x01DB7624 LDR X30, [X31 + 0x38]
	0x01DB7628 LDP D9, D8, [X31 + 0x28]
	0x01DB762C LDP D11, D10, [X31 + 0x18]
	0x01DB7630 LDP D13, D12, [X31 + 0x8]
	0x01DB7634 MOV X2, X31
	0x01DB7638 LDR V14, [X31], #0x90
	0x01DB763C B 0x1EA1E24
	0x01DB7640 BL 0x1C16F20
	0x01DB7644 STR D14, [X31 - 0x80]!
	0x01DB7648 STP D13, D12, [X31 + 0x10]
	0x01DB764C STP D11, D10, [X31 + 0x20]
	0x01DB7650 STP D9, D8, [X31 + 0x30]
	0x01DB7654 STP X30, X25, [X31 + 0x40]
	0x01DB7658 STP X24, X23, [X31 + 0x50]
	0x01DB765C STP X22, X21, [X31 + 0x60]
	0x01DB7660 STP X20, X19, [X31 + 0x70]
	0x01DB7664 CBZ X2, 0x1DB7734
	0x01DB7668 MOV W21, W1
	0x01DB766C MOV X22, X0
	0x01DB7670 MOV X0, X2
	0x01DB7674 MOV X1, X31
	0x01DB7678 MOV X19, X6
	0x01DB767C MOV X20, X5
	0x01DB7680 MOV X23, X4
	0x01DB7684 MOV X24, X3
	0x01DB7688 MOV X25, X2
	0x01DB768C BL 0x3C3F58C
	0x01DB7690 MOV X0, X25
	0x01DB7694 MOV X1, X31
	0x01DB7698 MOV V8.16B, V0.16B
	0x01DB769C MOV V9.16B, V1.16B
	0x01DB76A0 MOV V10.16B, V2.16B
	0x01DB76A4 BL 0x3C3DEB4
	0x01DB76A8 CBZ X24, 0x1DB7734
	0x01DB76AC MOV X0, X24
	0x01DB76B0 MOV X1, X31
	0x01DB76B4 MOV V11.16B, V0.16B
	0x01DB76B8 MOV V12.16B, V1.16B
	0x01DB76BC MOV V13.16B, V2.16B
	0x01DB76C0 MOV V14.16B, V3.16B
	0x01DB76C4 BL 0x3C389D4
	0x01DB76C8 CBZ X23, 0x1DB7734
	0x01DB76CC MOV X24, X0
	0x01DB76D0 MOV X0, X23
	0x01DB76D4 MOV X1, X31
	0x01DB76D8 BL 0x3C389D4
	0x01DB76DC MOV X3, X0
	0x01DB76E0 MOV X0, X22
	0x01DB76E4 MOV W1, W21
	0x01DB76E8 MOV V0.16B, V8.16B
	0x01DB76EC MOV V1.16B, V9.16B
	0x01DB76F0 MOV V2.16B, V10.16B

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x2623000
	010 Move W8, [X20+2833]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x233E000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move X0, 0x2340000
	020 Move X0, [X0+1992]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2833], W8
	024 Move X20, 0x233E000
	025 Move X0, [X19+64]
	026 Move X20, [X20+1432]
	027 Compare X0, 0
	028 JumpIfEqual {405}
	029 Move W8, [X0+96]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 2
	032 Compare TEMP, 2
	033 JumpIfEqual {405}
	034 Move X1, X31
	035 Call NetworkObject.get_HasInputAuthority, X0
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {405}
	040 Move X21, 0x2340000
	041 Move X21, [X21+1992]
	042 Move X0, [X21]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X22, 0x2623000
	048 Move W8, [X22+2141]
	049 Compare W8, 0
	050 JumpIfNotEqual {56}
	051 Move X0, 0x2340000
	052 Move X0, [X0+1992]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X22+2141], W8
	056 Move X0, [X21]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {62}
	060 Call 0x1C17DFC
	061 Move X0, [X21]
	062 Move X8, [X20]
	063 Move X9, [X0+184]
	064 Move W10, [X8+224]
	065 Move X20, [X9]
	066 Compare W10, 0
	067 JumpIfNotEqual {70}
	068 Move X0, X8
	069 Call 0x1C17DFC
	070 Move X0, X20
	071 Move X1, X31
	072 Move X2, X31
	073 Call Object.op_Inequality, X0, X1
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {642}
	078 Move X0, [X21]
	079 Move X20, [X19+136]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move W8, [X22+2141]
	085 Compare W8, 0
	086 JumpIfNotEqual {92}
	087 Move X0, 0x2340000
	088 Move X0, [X0+1992]
	089 Call 0x1C17CF4
	090 Move W8, 1
	091 Move [X22+2141], W8
	092 Move X0, [X21]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {98}
	096 Call 0x1C17DFC
	097 Move X0, [X21]
	098 Move X8, [X0+184]
	099 Move X8, [X8]
	100 Compare X8, 0
	101 JumpIfEqual {651}
	102 Move X0, [X8+80]
	103 Compare X0, 0
	104 JumpIfEqual {651}
	105 Move X1, X31
	106 Call Transform.get_position, X0
	107 Move W8, [X22+2141]
	108 Move V8, V0
	109 Move V9, V1
	110 Move V10, V2
	111 Compare W8, 0
	112 JumpIfNotEqual {118}
	113 Move X0, 0x2340000
	114 Move X0, [X0+1992]
	115 Call 0x1C17CF4
	116 Move W8, 1
	117 Move [X22+2141], W8
	118 Move X0, [X21]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {124}
	122 Call 0x1C17DFC
	123 Move X0, [X21]
	124 Move X8, [X0+184]
	125 Move X8, [X8]
	126 Compare X8, 0
	127 JumpIfEqual {651}
	128 Move X0, [X8+80]
	129 Compare X0, 0
	130 JumpIfEqual {651}
	131 Move X1, X31
	132 Call Transform.get_forward, X0
	133 Move X0, X31
	134 Call Extensions.Flatten, X0
	135 Move X0, X31
	136 Call Quaternion.LookRotation, X0
	137 Compare X20, 0
	138 JumpIfEqual {651}
	139 Move V4, V0
	140 Move V5, V1
	141 Move V6, V2
	142 Move V7, V3
	143 Move X0, X20
	144 Move V0, V8
	145 Move V1, V9
	146 Move V2, V10
	147 Move V3, V4
	148 Move V4, V5
	149 Move V5, V6
	150 Move V6, V7
	151 Move X1, X31
	152 Call Transform.SetPositionAndRotation, X0, X1, X2
	153 Move W8, [X22+2141]
	154 Move X20, [X19+144]
	155 Compare W8, 0
	156 JumpIfNotEqual {162}
	157 Move X0, 0x233F000
	158 Move X0, [X0+1992]
	159 Call 0x1C17CF4
	160 Move W8, 1
	161 Move [X22+2141], W8
	162 Move X0, [X21]
	163 Move W8, [X0+224]
	164 Compare W8, 0
	165 JumpIfNotEqual {168}
	166 Call 0x1C17DFC
	167 Move X0, [X21]
	168 Move X8, [X0+184]
	169 Move X8, [X8]
	170 Compare X8, 0
	171 JumpIfEqual {651}
	172 Move X0, [X8+88]
	173 Compare X0, 0
	174 JumpIfEqual {651}
	175 Move X1, X31
	176 Call Transform.get_position, X0
	177 Move W8, [X22+2141]
	178 Move V8, V0
	179 Move V9, V1
	180 Move V10, V2
	181 Compare W8, 0
	182 JumpIfNotEqual {188}
	183 Move X0, 0x233F000
	184 Move X0, [X0+1992]
	185 Call 0x1C17CF4
	186 Move W8, 1
	187 Move [X22+2141], W8
	188 Move X0, [X21]
	189 Move W8, [X0+224]
	190 Compare W8, 0
	191 JumpIfNotEqual {194}
	192 Call 0x1C17DFC
	193 Move X0, [X21]
	194 Move X8, [X0+184]
	195 Move X8, [X8]
	196 Compare X8, 0
	197 JumpIfEqual {651}
	198 Move X0, [X8+88]
	199 Compare X0, 0
	200 JumpIfEqual {651}
	201 Move X1, X31
	202 Call Component.get_transform, X0
	203 Compare X0, 0
	204 JumpIfEqual {651}
	205 Move X1, X31
	206 Call Transform.get_rotation, X0
	207 Compare X20, 0
	208 JumpIfEqual {651}
	209 Move V4, V0
	210 Move V5, V1
	211 Move V6, V2
	212 Move V7, V3
	213 Move X0, X20
	214 Move V0, V8
	215 Move V1, V9
	216 Move V2, V10
	217 Move V3, V4
	218 Move V4, V5
	219 Move V5, V6
	220 Move V6, V7
	221 Move X1, X31
	222 Call Transform.SetPositionAndRotation, X0, X1, X2
	223 Move W8, [X22+2141]
	224 Move X20, [X19+152]
	225 Compare W8, 0
	226 JumpIfNotEqual {232}
	227 Move X0, 0x233F000
	228 Move X0, [X0+1992]
	229 Call 0x1C17CF4
	230 Move W8, 1
	231 Move [X22+2141], W8
	232 Move X0, [X21]
	233 Move W8, [X0+224]
	234 Compare W8, 0
	235 JumpIfNotEqual {238}
	236 Call 0x1C17DFC
	237 Move X0, [X21]
	238 Move X8, [X0+184]
	239 Move X8, [X8]
	240 Compare X8, 0
	241 JumpIfEqual {651}
	242 Move X0, [X8+96]
	243 Compare X0, 0
	244 JumpIfEqual {651}
	245 Move X1, X31
	246 Call Transform.get_position, X0
	247 Move W8, [X22+2141]
	248 Move V8, V0
	249 Move V9, V1
	250 Move V10, V2
	251 Compare W8, 0
	252 JumpIfNotEqual {258}
	253 Move X0, 0x233F000
	254 Move X0, [X0+1992]
	255 Call 0x1C17CF4
	256 Move W8, 1
	257 Move [X22+2141], W8
	258 Move X0, [X21]
	259 Move W8, [X0+224]
	260 Compare W8, 0
	261 JumpIfNotEqual {264}
	262 Call 0x1C17DFC
	263 Move X0, [X21]
	264 Move X8, [X0+184]
	265 Move X8, [X8]
	266 Compare X8, 0
	267 JumpIfEqual {651}
	268 Move X0, [X8+112]
	269 Compare X0, 0
	270 JumpIfEqual {651}
	271 Move X1, X31
	272 Call Transform.get_rotation, X0
	273 Compare X20, 0
	274 JumpIfEqual {651}
	275 Move V4, V0
	276 Move V5, V1
	277 Move V6, V2
	278 Move V7, V3
	279 Move X0, X20
	280 Move V0, V8
	281 Move V1, V9
	282 Move V2, V10
	283 Move V3, V4
	284 Move V4, V5
	285 Move V5, V6
	286 Move V6, V7
	287 Move X1, X31
	288 Call Transform.SetPositionAndRotation, X0, X1, X2
	289 Move W8, [X22+2141]
	290 Move X20, [X19+160]
	291 Compare W8, 0
	292 JumpIfNotEqual {298}
	293 Move X0, 0x233F000
	294 Move X0, [X0+1992]
	295 Call 0x1C17CF4
	296 Move W8, 1
	297 Move [X22+2141], W8
	298 Move X0, [X21]
	299 Move W8, [X0+224]
	300 Compare W8, 0
	301 JumpIfNotEqual {304}
	302 Call 0x1C17DFC
	303 Move X0, [X21]
	304 Move X8, [X0+184]
	305 Move X8, [X8]
	306 Compare X8, 0
	307 JumpIfEqual {651}
	308 Move X0, [X8+104]
	309 Compare X0, 0
	310 JumpIfEqual {651}
	311 Move X1, X31
	312 Call Transform.get_position, X0
	313 Move W8, [X22+2141]
	314 Move V8, V0
	315 Move V9, V1
	316 Move V10, V2
	317 Compare W8, 0
	318 JumpIfNotEqual {324}
	319 Move X0, 0x233F000
	320 Move X0, [X0+1992]
	321 Call 0x1C17CF4
	322 Move W8, 1
	323 Move [X22+2141], W8
	324 Move X0, [X21]
	325 Move W8, [X0+224]
	326 Compare W8, 0
	327 JumpIfNotEqual {330}
	328 Call 0x1C17DFC
	329 Move X0, [X21]
	330 Move X8, [X0+184]
	331 Move X8, [X8]
	332 Compare X8, 0
	333 JumpIfEqual {651}
	334 Move X0, [X8+120]
	335 Compare X0, 0
	336 JumpIfEqual {651}
	337 Move X1, X31
	338 Call Transform.get_rotation, X0
	339 Compare X20, 0
	340 JumpIfEqual {651}
	341 Move V4, V0
	342 Move V5, V1
	343 Move V6, V2
	344 Move V7, V3
	345 Move X0, X20
	346 Move V0, V8
	347 Move V1, V9
	348 Move V2, V10
	349 Move V3, V4
	350 Move V4, V5
	351 Move V5, V6
	352 Move V6, V7
	353 Move X1, X31
	354 Call Transform.SetPositionAndRotation, X0, X1, X2
	355 Move W8, [X22+2141]
	356 Move X20, [X19+168]
	357 Compare W8, 0
	358 JumpIfNotEqual {364}
	359 Move X0, 0x233F000
	360 Move X0, [X0+1992]
	361 Call 0x1C17CF4
	362 Move W8, 1
	363 Move [X22+2141], W8
	364 Move X0, [X21]
	365 Move W8, [X0+224]
	366 Compare W8, 0
	367 JumpIfNotEqual {370}
	368 Call 0x1C17DFC
	369 Move X0, [X21]
	370 Move X8, [X0+184]
	371 Move X0, [X8]
	372 Compare X0, 0
	373 JumpIfEqual {651}
	374 Move X1, X31
	375 Call PlayerController.get_backAttachAnchor, X0
	376 Compare X0, 0
	377 JumpIfEqual {651}
	378 Move X1, X31
	379 Call Transform.get_position, X0
	380 Move W8, [X22+2141]
	381 Move V8, V0
	382 Move V9, V1
	383 Move V10, V2
	384 Compare W8, 0
	385 JumpIfNotEqual {391}
	386 Move X0, 0x233F000
	387 Move X0, [X0+1992]
	388 Call 0x1C17CF4
	389 Move W8, 1
	390 Move [X22+2141], W8
	391 Move X0, [X21]
	392 Move W8, [X0+224]
	393 Compare W8, 0
	394 JumpIfNotEqual {397}
	395 Call 0x1C17DFC
	396 Move X0, [X21]
	397 Move X8, [X0+184]
	398 Move X0, [X8]
	399 Compare X0, 0
	400 JumpIfEqual {651}
	401 Move X1, X31
	402 Call PlayerController.get_backAttachAnchor, X0
	403 Compare X0, 0
	404 JumpIfNotEqual {615}
	405 Move X21, [X19+440]
	406 Compare X21, 0
	407 JumpIfEqual {651}
	408 Move X0, [X20]
	409 Move X20, [X21+16]
	410 Move W8, [X0+224]
	411 Compare W8, 0
	412 JumpIfNotEqual {414}
	413 Call 0x1C17DFC
	414 Move X0, X20
	415 Move X1, X31
	416 Move X2, X31
	417 Call Object.op_Inequality, X0, X1
	418 Move TEMP, X0
	419 And TEMP, TEMP, 1
	420 Compare TEMP, 1
	421 JumpIfNotEqual {597}
	422 Move X0, [X21+16]
	423 Compare X0, 0
	424 JumpIfEqual {651}
	425 Move X20, [X19+136]
	426 Move X1, X31
	427 Call Component.get_transform, X0
	428 Compare X0, 0
	429 JumpIfEqual {651}
	430 Move X1, X31
	431 Call Transform.get_position, X0
	432 Move X0, [X21+16]
	433 Compare X0, 0
	434 JumpIfEqual {651}
	435 Move X1, X31
	436 Move V8, V0
	437 Move V9, V1
	438 Move V10, V2
	439 Call Component.get_transform, X0
	440 Compare X0, 0
	441 JumpIfEqual {651}
	442 Move X1, X31
	443 Call Transform.get_rotation, X0
	444 Compare X20, 0
	445 JumpIfEqual {651}
	446 Move V4, V0
	447 Move V5, V1
	448 Move V6, V2
	449 Move V7, V3
	450 Move X0, X20
	451 Move V0, V8
	452 Move V1, V9
	453 Move V2, V10
	454 Move V3, V4
	455 Move V4, V5
	456 Move V5, V6
	457 Move V6, V7
	458 Move X1, X31
	459 Call Transform.SetPositionAndRotation, X0, X1, X2
	460 Move X9, [X19+440]
	461 Move X8, [X19+184]
	462 Move X20, [X19+144]
	463 NotImplemented "Instruction CMP not yet implemented."
	464 Move X0, [X21+24]
	465 Compare X0, 0
	466 JumpIfEqual {651}
	467 Move X1, X31
	468 Call Component.get_transform, X0
	469 Compare X0, 0
	470 JumpIfEqual {651}
	471 Move X1, X31
	472 Call Transform.get_localPosition, X0
	473 Move X0, [X21+24]
	474 Compare X0, 0
	475 JumpIfEqual {651}
	476 Move X1, X31
	477 Move V8, V0
	478 Move V9, V1
	479 Move V10, V2
	480 Call Component.get_transform, X0
	481 Compare X0, 0
	482 JumpIfEqual {651}
	483 Move X1, X31
	484 Call Transform.get_localRotation, X0
	485 Compare X20, 0
	486 JumpIfEqual {651}
	487 Move V4, V0
	488 Move V5, V1
	489 Move V6, V2
	490 Move V7, V3
	491 Move X0, X20
	492 Move V0, V8
	493 Move V1, V9
	494 Move V2, V10
	495 Move V3, V4
	496 Move V4, V5
	497 Move V5, V6
	498 Move V6, V7
	499 Move X1, X31
	500 Call Transform.SetLocalPositionAndRotation, X0, X1, X2
	501 Move X0, [X21+40]
	502 Compare X0, 0
	503 JumpIfEqual {651}
	504 Move X20, [X19+152]
	505 Move X1, X31
	506 Call Component.get_transform, X0
	507 Compare X0, 0
	508 JumpIfEqual {651}
	509 Move X1, X31
	510 Call Transform.get_localPosition, X0
	511 Move X0, [X21+40]
	512 Compare X0, 0
	513 JumpIfEqual {651}
	514 Move X1, X31
	515 Move V8, V0
	516 Move V9, V1
	517 Move V10, V2
	518 Call Component.get_transform, X0
	519 Compare X0, 0
	520 JumpIfEqual {651}
	521 Move X1, X31
	522 Call Transform.get_localRotation, X0
	523 Compare X20, 0
	524 JumpIfEqual {651}
	525 Move V4, V0
	526 Move V5, V1
	527 Move V6, V2
	528 Move V7, V3
	529 Move X0, X20
	530 Move V0, V8
	531 Move V1, V9
	532 Move V2, V10
	533 Move V3, V4
	534 Move V4, V5
	535 Move V5, V6
	536 Move V6, V7
	537 Move X1, X31
	538 Call Transform.SetLocalPositionAndRotation, X0, X1, X2
	539 Move X0, [X21+32]
	540 Compare X0, 0
	541 JumpIfEqual {651}
	542 Move X20, [X19+160]
	543 Move X1, X31
	544 Call Component.get_transform, X0
	545 Compare X0, 0
	546 JumpIfEqual {651}
	547 Move X1, X31
	548 Call Transform.get_localPosition, X0
	549 Move X0, [X21+32]
	550 Compare X0, 0
	551 JumpIfEqual {651}
	552 Move X1, X31
	553 Move V8, V0
	554 Move V9, V1
	555 Move V10, V2
	556 Call Component.get_transform, X0
	557 Compare X0, 0
	558 JumpIfEqual {651}
	559 Move X1, X31
	560 Call Transform.get_localRotation, X0
	561 Compare X20, 0
	562 JumpIfEqual {651}
	563 Move V4, V0
	564 Move V5, V1
	565 Move V6, V2
	566 Move V7, V3
	567 Move X0, X20
	568 Move V0, V8
	569 Move V1, V9
	570 Move V2, V10
	571 Move V3, V4
	572 Move V4, V5
	573 Move V5, V6
	574 Move V6, V7
	575 Move X1, X31
	576 Call Transform.SetLocalPositionAndRotation, X0, X1, X2
	577 Compare X8, 0
	578 JumpIfEqual {651}
	579 Move X2, [X8+24]
	580 Move X0, X19
	581 Move X1, X20
	582 Call NetPlayer.LerpFromRigData, X0, X1, X2
	583 Move X8, [X19+184]
	584 Compare X8, 0
	585 JumpIfEqual {651}
	586 Move X1, [X19+152]
	587 Move X2, [X8+40]
	588 Move X0, X19
	589 Call NetPlayer.LerpFromRigData, X0, X1, X2
	590 Move X8, [X19+184]
	591 Compare X8, 0
	592 JumpIfEqual {651}
	593 Move X1, [X19+160]
	594 Move X2, [X8+32]
	595 Move X0, X19
	596 Call NetPlayer.LerpFromRigData, X0, X1, X2
	597 Move X8, [X19+200]
	598 Compare X8, 0
	599 JumpIfEqual {651}
	600 Move X0, [X8+128]
	601 Compare X0, 0
	602 JumpIfEqual {651}
	603 Move X20, [X19+168]
	604 Move X1, X31
	605 Call Transform.get_position, X0
	606 Move X8, [X19+200]
	607 Compare X8, 0
	608 JumpIfEqual {651}
	609 Move X0, [X8+128]
	610 Compare X0, 0
	611 JumpIfEqual {651}
	612 Move V8, V0
	613 Move V9, V1
	614 Move V10, V2
	615 Move X1, X31
	616 Call Transform.get_rotation, X0
	617 Compare X20, 0
	618 JumpIfEqual {651}
	619 Move V4, V0
	620 Move V5, V1
	621 Move X0, X20
	622 Move V0, V8
	623 Move V1, V9
	624 Move X20, [X31+48]
	625 Move X19, [X31+56]
	626 Move X22, [X31+32]
	627 Move X21, [X31+40]
	628 Move X30, [X31+24]
	629 Move D9, [X31+8]
	630 Move D8, [X31+16]
	631 Move V6, V2
	632 Move V7, V3
	633 Move V2, V10
	634 Move V3, V4
	635 Move V4, V5
	636 Move V5, V6
	637 Move V6, V7
	638 Move X1, X31
	639 Move V10, [X31+64]
	640 Call Transform.SetPositionAndRotation, X0, X1, X2
	641 Return 
	642 Move X20, [X31+48]
	643 Move X19, [X31+56]
	644 Move X22, [X31+32]
	645 Move X21, [X31+40]
	646 Move X30, [X31+24]
	647 Move D9, [X31+8]
	648 Move D8, [X31+16]
	649 Move V10, [X31+64]
	650 Return 
	651 Call 0x1C17F20

Method: System.Boolean IsPVPSource(Fusion.NetworkRunner runner, Fusion.NetworkBehaviourId source)

Disassembly:
	0x01DB76F4 MOV V3.16B, V11.16B
	0x01DB76F8 MOV V4.16B, V12.16B
	0x01DB76FC MOV V5.16B, V13.16B
	0x01DB7700 MOV X2, X24
	0x01DB7704 MOV X4, X20
	0x01DB7708 MOV X5, X19
	0x01DB770C LDP X20, X19, [X31 + 0x70]
	0x01DB7710 LDP X22, X21, [X31 + 0x60]
	0x01DB7714 LDP X24, X23, [X31 + 0x50]
	0x01DB7718 LDP X30, X25, [X31 + 0x40]
	0x01DB771C LDP D9, D8, [X31 + 0x30]
	0x01DB7720 LDP D11, D10, [X31 + 0x20]
	0x01DB7724 LDP D13, D12, [X31 + 0x10]
	0x01DB7728 MOV V6.16B, V14.16B
	0x01DB772C LDR V14, [X31], #0x80
	0x01DB7730 B 0x1DB69D0
	0x01DB7734 BL 0x1C16F20
	0x01DB7738 SUB X31, X31, 0xA0
	0x01DB773C STP D15, D14, [X31 + 0x20]
	0x01DB7740 STP D13, D12, [X31 + 0x30]
	0x01DB7744 STP D11, D10, [X31 + 0x40]
	0x01DB7748 STP D9, D8, [X31 + 0x50]
	0x01DB774C STP X30, X25, [X31 + 0x60]
	0x01DB7750 STP X24, X23, [X31 + 0x70]
	0x01DB7754 STP X22, X21, [X31 + 0x80]
	0x01DB7758 STP X20, X19, [X31 + 0x90]
	0x01DB775C STP S1, S0, [X31 + 0x18]
	0x01DB7760 CBZ X2, 0x1DB784C
	0x01DB7764 MOV W21, W1
	0x01DB7768 MOV X22, X0
	0x01DB776C MOV X0, X2
	0x01DB7770 MOV X1, X31
	0x01DB7774 MOV X19, X6
	0x01DB7778 MOV X20, X5
	0x01DB777C MOV V10.16B, V2.16B
	0x01DB7780 MOV X23, X4
	0x01DB7784 MOV X24, X3
	0x01DB7788 MOV X25, X2
	0x01DB778C BL 0x3C3F58C
	0x01DB7790 MOV X0, X25
	0x01DB7794 MOV X1, X31
	0x01DB7798 MOV V11.16B, V0.16B
	0x01DB779C MOV V12.16B, V1.16B
	0x01DB77A0 MOV V13.16B, V2.16B
	0x01DB77A4 BL 0x3C3DEB4
	0x01DB77A8 CBZ X24, 0x1DB784C
	0x01DB77AC MOV X0, X24
	0x01DB77B0 MOV X1, X31
	0x01DB77B4 MOV V14.16B, V0.16B
	0x01DB77B8 MOV V15.16B, V1.16B
	0x01DB77BC MOV V8.16B, V2.16B
	0x01DB77C0 MOV V9.16B, V3.16B
	0x01DB77C4 BL 0x3C389D4
	0x01DB77C8 CBZ X23, 0x1DB784C
	0x01DB77CC MOV X24, X0
	0x01DB77D0 MOV X0, X23
	0x01DB77D4 MOV X1, X31
	0x01DB77D8 BL 0x3C389D4
	0x01DB77DC LDR V0, [X31 + 0x18]
	0x01DB77E0 MOV X3, X0
	0x01DB77E4 MOV X0, X22
	0x01DB77E8 MOV W1, W21
	0x01DB77EC STP S0, S10, [X31 + 0x4]
	0x01DB77F0 LDR V0, [X31 + 0x1C]
	0x01DB77F4 MOV V1.16B, V12.16B
	0x01DB77F8 MOV V2.16B, V13.16B
	0x01DB77FC MOV V3.16B, V14.16B
	0x01DB7800 STR S0, [X31]
	0x01DB7804 MOV V0.16B, V11.16B
	0x01DB7808 MOV V4.16B, V15.16B
	0x01DB780C MOV V5.16B, V8.16B
	0x01DB7810 MOV V6.16B, V9.16B
	0x01DB7814 MOV X2, X24
	0x01DB7818 MOV X4, X20
	0x01DB781C MOV X5, X19
	0x01DB7820 BL 0x1DB6DD0
	0x01DB7824 LDP X20, X19, [X31 + 0x90]
	0x01DB7828 LDP X22, X21, [X31 + 0x80]
	0x01DB782C LDP X24, X23, [X31 + 0x70]
	0x01DB7830 LDP X30, X25, [X31 + 0x60]
	0x01DB7834 LDP D9, D8, [X31 + 0x50]
	0x01DB7838 LDP D11, D10, [X31 + 0x40]
	0x01DB783C LDP D13, D12, [X31 + 0x30]
	0x01DB7840 LDP D15, D14, [X31 + 0x20]
	0x01DB7844 ADD X31, X31, 0xA0
	0x01DB7848 RET
	0x01DB784C BL 0x1C16F20
	0x01DB7850 STR D14, [X31 - 0x80]!
	0x01DB7854 STP D13, D12, [X31 + 0x8]
	0x01DB7858 STP D11, D10, [X31 + 0x18]
	0x01DB785C STP D9, D8, [X31 + 0x28]
	0x01DB7860 STR X30, [X31 + 0x38]
	0x01DB7864 STP X26, X25, [X31 + 0x40]
	0x01DB7868 STP X24, X23, [X31 + 0x50]
	0x01DB786C STP X22, X21, [X31 + 0x60]
	0x01DB7870 STP X20, X19, [X31 + 0x70]
	0x01DB7874 CBZ X2, 0x1DB7950
	0x01DB7878 MOV W22, W1
	0x01DB787C MOV X23, X0
	0x01DB7880 MOV X0, X2
	0x01DB7884 MOV X1, X31
	0x01DB7888 MOV X19, X7
	0x01DB788C MOV X20, X6
	0x01DB7890 MOV W21, W5
	0x01DB7894 MOV X24, X4
	0x01DB7898 MOV X25, X3
	0x01DB789C MOV X26, X2
	0x01DB78A0 BL 0x3C3F58C
	0x01DB78A4 MOV X0, X26
	0x01DB78A8 MOV X1, X31
	0x01DB78AC MOV V8.16B, V0.16B
	0x01DB78B0 MOV V9.16B, V1.16B
	0x01DB78B4 MOV V10.16B, V2.16B

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2622000
	007 Move W8, [X21+2834]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x2341000
	015 Move X0, [X0+3088]
	016 Call 0x1C17CF4
	017 Move X0, 0x2341000
	018 Move X0, [X0+3096]
	019 Call 0x1C17CF4
	020 Move X0, 0x2341000
	021 Move X0, [X0+3104]
	022 Call 0x1C17CF4
	023 Move X0, 0x2340000
	024 Move X0, [X0+3352]
	025 Call 0x1C17CF4
	026 Move X0, 0x2341000
	027 Move X0, [X0+976]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+2834], W8
	031 Move [X31+8], X31
	032 Compare X20, 0
	033 JumpIfEqual {119}
	034 Add X2, X31, 8
	035 Move X0, X20
	036 Move X1, X19
	037 Move X3, X31
	038 Call NetworkRunner.TryFindBehaviour, X0, X1, X2
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {111}
	043 Move X8, [X31+8]
	044 Compare X8, 0
	045 JumpIfEqual {112}
	046 Move X10, 0x2341000
	047 Move X10, [X10+976]
	048 Move X9, [X8]
	049 Move X11, [X10]
	050 Move W10, [X9+304]
	051 Move W12, [X11+304]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X13, [X9+200]
	054 Add X12, X13, X12
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X11, 0x2341000
	058 Move X11, [X11+3088]
	059 Move X11, [X11]
	060 Move W12, [X11+304]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X13, [X9+200]
	063 Add X12, X13, X12
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X11, 0x2340000
	067 Move X11, [X11+3352]
	068 Move X11, [X11]
	069 Move W12, [X11+304]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X13, [X9+200]
	072 Add X12, X13, X12
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X11, 0x2341000
	076 Move X11, [X11+3104]
	077 Move X11, [X11]
	078 Move W12, [X11+304]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X13, [X9+200]
	081 Add X12, X13, X12
	082 NotImplemented "Instruction LDUR not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X11, 0x2341000
	085 Move X11, [X11+3096]
	086 Move X11, [X11]
	087 Move W12, [X11+304]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X9, [X9+200]
	090 Add X9, X9, X12
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 NotImplemented "Instruction CSEL not yet implemented."
	094 Move W8, W31
	095 Compare X8, 0
	096 JumpIfEqual {119}
	097 Move W9, [X8+208]
	098 Compare W9, 0
	099 JumpIfEqual {94}
	100 Move X0, [X8+64]
	101 Compare X0, 0
	102 JumpIfEqual {111}
	103 Move W8, [X0+96]
	104 Move TEMP, X8
	105 And TEMP, TEMP, 2
	106 Compare TEMP, 2
	107 JumpIfEqual {111}
	108 Move X1, X31
	109 Call NetworkObject.get_HasStateAuthority, X0
	110 Xor W8, W0, 1
	111 Move W8, 1
	112 Move X20, [X31+32]
	113 Move X19, [X31+40]
	114 Move X30, [X31+16]
	115 Move X21, [X31+24]
	116 And W0, W8, 1
	117 Add X31, X31, 48
	118 Return X0
	119 Call 0x1C17F20

Method: System.Boolean ShouldApplyHit(Fusion.NetworkBehaviourId source)

Disassembly:
	0x01DB78B8 BL 0x3C3DEB4
	0x01DB78BC CBZ X25, 0x1DB7950
	0x01DB78C0 MOV X0, X25
	0x01DB78C4 MOV X1, X31
	0x01DB78C8 MOV V11.16B, V0.16B
	0x01DB78CC MOV V12.16B, V1.16B
	0x01DB78D0 MOV V13.16B, V2.16B
	0x01DB78D4 MOV V14.16B, V3.16B
	0x01DB78D8 BL 0x3C389D4
	0x01DB78DC CBZ X24, 0x1DB7950
	0x01DB78E0 MOV X25, X0
	0x01DB78E4 MOV X0, X24
	0x01DB78E8 MOV X1, X31
	0x01DB78EC BL 0x3C389D4
	0x01DB78F0 MOV X3, X0
	0x01DB78F4 MOV X0, X23
	0x01DB78F8 MOV W1, W22
	0x01DB78FC MOV V0.16B, V8.16B
	0x01DB7900 MOV V1.16B, V9.16B
	0x01DB7904 MOV V2.16B, V10.16B
	0x01DB7908 MOV V3.16B, V11.16B
	0x01DB790C MOV V4.16B, V12.16B
	0x01DB7910 MOV V5.16B, V13.16B
	0x01DB7914 MOV X2, X25
	0x01DB7918 MOV W4, W21
	0x01DB791C MOV X5, X20
	0x01DB7920 MOV X6, X19
	0x01DB7924 LDP X20, X19, [X31 + 0x70]
	0x01DB7928 LDP X22, X21, [X31 + 0x60]
	0x01DB792C LDP X24, X23, [X31 + 0x50]
	0x01DB7930 LDP X26, X25, [X31 + 0x40]
	0x01DB7934 LDR X30, [X31 + 0x38]
	0x01DB7938 LDP D9, D8, [X31 + 0x28]
	0x01DB793C LDP D11, D10, [X31 + 0x18]
	0x01DB7940 LDP D13, D12, [X31 + 0x8]
	0x01DB7944 MOV V6.16B, V14.16B
	0x01DB7948 LDR V14, [X31], #0x80
	0x01DB794C B 0x1DB721C
	0x01DB7950 BL 0x1C16F20
	0x01DB7954 SUB X31, X31, 0xA0
	0x01DB7958 STP D15, D14, [X31 + 0x10]
	0x01DB795C STP D13, D12, [X31 + 0x20]
	0x01DB7960 STP D11, D10, [X31 + 0x30]
	0x01DB7964 STP D9, D8, [X31 + 0x40]
	0x01DB7968 STR X30, [X31 + 0x50]
	0x01DB796C STP X26, X25, [X31 + 0x60]
	0x01DB7970 STP X24, X23, [X31 + 0x70]
	0x01DB7974 STP X22, X21, [X31 + 0x80]
	0x01DB7978 STP X20, X19, [X31 + 0x90]
	0x01DB797C ADRP X25, 0x2621000
	0x01DB7980 LDRB W8, [X25 + 0xB18]
	0x01DB7984 MOV X19, X5
	0x01DB7988 MOV X20, X4
	0x01DB798C MOV V12.16B, V4.16B
	0x01DB7990 MOV V11.16B, V3.16B
	0x01DB7994 MOV X23, X3
	0x01DB7998 MOV X24, X2
	0x01DB799C MOV V10.16B, V1.16B
	0x01DB79A0 MOV V13.16B, V0.16B
	0x01DB79A4 MOV W21, W1
	0x01DB79A8 MOV X22, X0
	0x01DB79AC STP S5, S2, [X31 + 0x58]
	0x01DB79B0 TBNZ X8, 0x0, 0x1DB79D4
	0x01DB79B4 ADRP X0, 0x233C000
	0x01DB79B8 LDR X0, [X0 + 0x598]
	0x01DB79BC BL 0x1C16CF4
	0x01DB79C0 ADRP X0, 0x233C000
	0x01DB79C4 LDR X0, [X0 + 0x988]
	0x01DB79C8 BL 0x1C16CF4
	0x01DB79CC MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2622000
	007 Move X21, 0x233D000
	008 Move W8, [X22+2835]
	009 Move X21, [X21+1608]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x233D000
	017 Move X0, [X0+1608]
	018 Call 0x1C17CF4
	019 Move X0, 0x233F000
	020 Move X0, [X0+2464]
	021 Call 0x1C17CF4
	022 Move X0, 0x233E000
	023 Move X0, [X0+376]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+2835], W8
	027 Move X0, [X21]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X22, 0x2622000
	033 Move W8, [X22+1927]
	034 Compare W8, 0
	035 JumpIfNotEqual {41}
	036 Move X0, 0x233D000
	037 Move X0, [X0+1608]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X22+1927], W8
	041 Move X0, [X21]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X21]
	047 Move X8, [X0+184]
	048 Move X8, [X8]
	049 Compare X8, 0
	050 JumpIfEqual {86}
	051 Move X8, [X8+224]
	052 Compare X8, 0
	053 JumpIfEqual {86}
	054 Move X8, [X8+104]
	055 Compare X8, 0
	056 JumpIfEqual {86}
	057 Move X9, 0x233E000
	058 Move X9, [X9+376]
	059 Move X0, [X8+72]
	060 Move X1, [X9]
	061 Call 0x2652A74, X0
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {67}
	066 Move W8, 1
	067 Move X8, 0x233F000
	068 Move X8, [X8+2464]
	069 Move X20, [X20+56]
	070 Move X0, [X8]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X0, X20
	076 Move X1, X19
	077 Call NetPlayer.IsPVPSource, X0, X1
	078 Xor W8, W0, 1
	079 Move X20, [X31+32]
	080 Move X19, [X31+40]
	081 Move X22, [X31+16]
	082 Move X21, [X31+24]
	083 And W0, W8, 1
	084 Move X30, [X31+48]
	085 Return X0
	086 Call 0x1C17F20

Method: System.Void RPC_PlayerHit(System.Int32 damage, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, System.String hitSound, System.String killSound, System.String hitName, Fusion.NetworkBehaviourId source)

Disassembly:
	0x01DB79D0 STRB W8, [X25 + 0xB18]
	0x01DB79D4 ADRP X26, 0x2621000
	0x01DB79D8 ADRP X25, 0x233C000
	0x01DB79DC LDRB W8, [X26 + 0x793]
	0x01DB79E0 LDR X25, [X25 + 0x598]
	0x01DB79E4 CBNZ W8, 0x1DB79FC
	0x01DB79E8 ADRP X0, 0x233D000
	0x01DB79EC LDR X0, [X0 + 0x5A8]
	0x01DB79F0 BL 0x1C16CF4
	0x01DB79F4 MOVZ W8, 0x1
	0x01DB79F8 STRB W8, [X26 + 0x793]
	0x01DB79FC ADRP X8, 0x233D000
	0x01DB7A00 LDR X8, [X8 + 0x5A8]
	0x01DB7A04 LDR X0, [X25]
	0x01DB7A08 LDR X8, [X8]
	0x01DB7A0C LDR W9, [X0 + 0xE0]
	0x01DB7A10 LDR X8, [X8 + 0xB8]
	0x01DB7A14 LDP S9, S8, [X8]
	0x01DB7A18 LDP S15, S14, [X8 + 0x8]
	0x01DB7A1C CBNZ W9, 0x1DB7A24
	0x01DB7A20 BL 0x1C16DFC
	0x01DB7A24 ADRP X26, 0x233C000
	0x01DB7A28 LDR X26, [X26 + 0x988]
	0x01DB7A2C MOV X0, X24
	0x01DB7A30 MOV X1, X31
	0x01DB7A34 MOV X2, X31
	0x01DB7A38 BL 0x3C354F8
	0x01DB7A3C TBZ X0, 0x0, 0x1DB7A58
	0x01DB7A40 CBZ X24, 0x1DB7B08
	0x01DB7A44 MOV X0, X24
	0x01DB7A48 MOV X1, X31
	0x01DB7A4C BL 0x3C389D4
	0x01DB7A50 MOV X24, X0
	0x01DB7A54 B 0x1DB7A5C
	0x01DB7A58 LDR X24, [X26]
	0x01DB7A5C LDR X0, [X25]
	0x01DB7A60 LDR W8, [X0 + 0xE0]
	0x01DB7A64 CBNZ W8, 0x1DB7A6C
	0x01DB7A68 BL 0x1C16DFC
	0x01DB7A6C MOV X0, X23
	0x01DB7A70 MOV X1, X31
	0x01DB7A74 MOV X2, X31
	0x01DB7A78 BL 0x3C354F8
	0x01DB7A7C TBZ X0, 0x0, 0x1DB7A98
	0x01DB7A80 CBZ X23, 0x1DB7B08
	0x01DB7A84 MOV X0, X23
	0x01DB7A88 MOV X1, X31
	0x01DB7A8C BL 0x3C389D4
	0x01DB7A90 MOV X3, X0
	0x01DB7A94 B 0x1DB7A9C
	0x01DB7A98 LDR X3, [X26]
	0x01DB7A9C CBZ X22, 0x1DB7B08
	0x01DB7AA0 LDP S0, S2, [X31 + 0x58]
	0x01DB7AA4 MOV X0, X22
	0x01DB7AA8 MOV W1, W21
	0x01DB7AAC MOV V1.16B, V10.16B
	0x01DB7AB0 STR S0, [X31 + 0x8]
	0x01DB7AB4 MOV V0.16B, V13.16B
	0x01DB7AB8 MOV V3.16B, V9.16B
	0x01DB7ABC MOV V4.16B, V8.16B
	0x01DB7AC0 MOV V5.16B, V15.16B
	0x01DB7AC4 MOV V6.16B, V14.16B
	0x01DB7AC8 MOV X2, X24
	0x01DB7ACC MOV X4, X20
	0x01DB7AD0 MOV X5, X19
	0x01DB7AD4 STP S11, S12, [X31]
	0x01DB7AD8 BL 0x1DB6DD0
	0x01DB7ADC LDP X20, X19, [X31 + 0x90]
	0x01DB7AE0 LDP X22, X21, [X31 + 0x80]
	0x01DB7AE4 LDP X24, X23, [X31 + 0x70]
	0x01DB7AE8 LDP X26, X25, [X31 + 0x60]
	0x01DB7AEC LDR X30, [X31 + 0x50]
	0x01DB7AF0 LDP D9, D8, [X31 + 0x40]
	0x01DB7AF4 LDP D11, D10, [X31 + 0x30]
	0x01DB7AF8 LDP D13, D12, [X31 + 0x20]
	0x01DB7AFC LDP D15, D14, [X31 + 0x10]
	0x01DB7B00 ADD X31, X31, 0xA0
	0x01DB7B04 RET
	0x01DB7B08 BL 0x1C16F20
	0x01DB7B0C STR D12, [X31 - 0x60]!
	0x01DB7B10 STP D11, D10, [X31 + 0x8]
	0x01DB7B14 STP D9, D8, [X31 + 0x18]
	0x01DB7B18 STR X30, [X31 + 0x28]
	0x01DB7B1C STP X24, X23, [X31 + 0x30]
	0x01DB7B20 STP X22, X21, [X31 + 0x40]
	0x01DB7B24 STP X20, X19, [X31 + 0x50]
	0x01DB7B28 ADRP X23, 0x2621000
	0x01DB7B2C LDRB W8, [X23 + 0xB19]
	0x01DB7B30 MOV W19, W3
	0x01DB7B34 MOV X21, X2
	0x01DB7B38 MOV X22, X1
	0x01DB7B3C MOV V8.16B, V4.16B
	0x01DB7B40 MOV V9.16B, V3.16B
	0x01DB7B44 MOV V10.16B, V2.16B
	0x01DB7B48 MOV V11.16B, V1.16B
	0x01DB7B4C MOV V12.16B, V0.16B
	0x01DB7B50 MOV X20, X0
	0x01DB7B54 TBNZ X8, 0x0, 0x1DB7B84
	0x01DB7B58 ADRP X0, 0x233F000
	0x01DB7B5C LDR X0, [X0 + 0xA78]
	0x01DB7B60 BL 0x1C16CF4
	0x01DB7B64 ADRP X0, 0x233E000
	0x01DB7B68 LDR X0, [X0 + 0x7C8]
	0x01DB7B6C BL 0x1C16CF4
	0x01DB7B70 ADRP X0, 0x2340000
	0x01DB7B74 LDR X0, [X0 + 0xC40]
	0x01DB7B78 BL 0x1C16CF4
	0x01DB7B7C MOVZ W8, 0x1
	0x01DB7B80 STRB W8, [X23 + 0xB19]
	0x01DB7B84 LDRB W8, [X20 + 0x58]
	0x01DB7B88 CBZ W8, 0x1DB7C38
	0x01DB7B8C STRB W31, [X20 + 0x58]
	0x01DB7B90 LDR X0, [X20 + 0x40]
	0x01DB7B94 CBZ X0, 0x1DB7E3C
	0x01DB7B98 MOV X1, X31
	0x01DB7B9C BL 0x1E93588
	0x01DB7BA0 TBZ X0, 0x0, 0x1DB7C74
	0x01DB7BA4 ADRP X20, 0x233E000
	0x01DB7BA8 LDR X20, [X20 + 0x7C8]
	0x01DB7BAC LDR X0, [X20]
	0x01DB7BB0 LDR W8, [X0 + 0xE0]
	0x01DB7BB4 CBNZ W8, 0x1DB7BBC
	0x01DB7BB8 BL 0x1C16DFC
	0x01DB7BBC ADRP X21, 0x2621000
	0x01DB7BC0 LDRB W8, [X21 + 0x85D]
	0x01DB7BC4 CBNZ W8, 0x1DB7BDC
	0x01DB7BC8 ADRP X0, 0x233E000
	0x01DB7BCC LDR X0, [X0 + 0x7C8]
	0x01DB7BD0 BL 0x1C16CF4
	0x01DB7BD4 MOVZ W8, 0x1
	0x01DB7BD8 STRB W8, [X21 + 0x85D]
	0x01DB7BDC LDR X0, [X20]
	0x01DB7BE0 LDR W8, [X0 + 0xE0]
	0x01DB7BE4 CBNZ W8, 0x1DB7BF0
	0x01DB7BE8 BL 0x1C16DFC
	0x01DB7BEC LDR X0, [X20]
	0x01DB7BF0 LDR X8, [X0 + 0xB8]
	0x01DB7BF4 LDR X0, [X8]
	0x01DB7BF8 CBZ X0, 0x1DB7E3C
	0x01DB7BFC MOV V1.16B, V11.16B
	0x01DB7C00 MOV V2.16B, V10.16B
	0x01DB7C04 MOV V3.16B, V9.16B
	0x01DB7C08 MOV V4.16B, V8.16B
	0x01DB7C0C MOV W1, W19
	0x01DB7C10 LDP X20, X19, [X31 + 0x50]
	0x01DB7C14 LDP X22, X21, [X31 + 0x40]
	0x01DB7C18 LDP X24, X23, [X31 + 0x30]
	0x01DB7C1C LDR X30, [X31 + 0x28]
	0x01DB7C20 LDP D9, D8, [X31 + 0x18]
	0x01DB7C24 LDP D11, D10, [X31 + 0x8]
	0x01DB7C28 MOV V0.16B, V12.16B
	0x01DB7C2C MOV X2, X31
	0x01DB7C30 LDR V12, [X31], #0x60
	0x01DB7C34 B 0x1DC2084
	0x01DB7C38 ADRP X24, 0x233F000
	0x01DB7C3C LDR X24, [X24 + 0xA78]
	0x01DB7C40 LDR X0, [X24]
	0x01DB7C44 LDR W8, [X0 + 0xE0]
	0x01DB7C48 CBNZ W8, 0x1DB7C50
	0x01DB7C4C BL 0x1C16DFC
	0x01DB7C50 MOV X0, X20
	0x01DB7C54 MOV X1, X31
	0x01DB7C58 BL 0x1E77B08
	0x01DB7C5C LDR X0, [X20 + 0x38]
	0x01DB7C60 CBZ X0, 0x1DB7E3C
	0x01DB7C64 MOV X1, X31
	0x01DB7C68 BL 0x1E9E538
	0x01DB7C6C CMP W0, 0x4
	0x01DB7C70 B.NE 0x1DB7C94
	0x01DB7C74 LDP X20, X19, [X31 + 0x50]
	0x01DB7C78 LDP X22, X21, [X31 + 0x40]
	0x01DB7C7C LDP X24, X23, [X31 + 0x30]
	0x01DB7C80 LDR X30, [X31 + 0x28]
	0x01DB7C84 LDP D9, D8, [X31 + 0x18]
	0x01DB7C88 LDP D11, D10, [X31 + 0x8]
	0x01DB7C8C LDR V12, [X31], #0x60
	0x01DB7C90 RET
	0x01DB7C94 LDR X0, [X20 + 0x40]
	0x01DB7C98 CBZ X0, 0x1DB7E3C
	0x01DB7C9C MOV X1, X31
	0x01DB7CA0 BL 0x1E94078
	0x01DB7CA4 ANDS W31, W0, 0x7
	0x01DB7CA8 B.EQ 0x1DB7D20
	0x01DB7CAC TBNZ X0, 0x1, 0x1DB7B90
	0x01DB7CB0 MOV X0, X22
	0x01DB7CB4 MOV X1, X31
	0x01DB7CB8 BL 0x1E8DD08
	0x01DB7CBC ADD W8, W0, 0x2B
	0x01DB7CC0 AND W23, W8, 0xFFFFFFFC
	0x01DB7CC4 CMP W23, 0x201
	0x01DB7CC8 B.GE 0x1DB7D6C
	0x01DB7CCC LDR X8, [X20 + 0x38]
	0x01DB7CD0 CBZ X8, 0x1DB7E3C
	0x01DB7CD4 LDR X0, [X8 + 0x50]
	0x01DB7CD8 CBZ X0, 0x1DB7E3C
	0x01DB7CDC MOV X1, X31
	0x01DB7CE0 BL 0x1EC4D00
	0x01DB7CE4 TBZ X0, 0x0, 0x1DB7C74
	0x01DB7CE8 LDR X8, [X20 + 0x38]
	0x01DB7CEC CBZ X8, 0x1DB7E3C
	0x01DB7CF0 LDR X0, [X8 + 0x50]
	0x01DB7CF4 MOV W1, W23
	0x01DB7CF8 MOV X2, X31
	0x01DB7CFC BL 0x1ED9318
	0x01DB7D00 LDR X8, [X20 + 0x40]
	0x01DB7D04 CBZ X8, 0x1DB7E3C
	0x01DB7D08 LDR X8, [X8 + 0x20]
	0x01DB7D0C MOV X23, X0
	0x01DB7D10 ADD X24, X0, 0x1C
	0x01DB7D14 CBZ X8, 0x1DB7DB0
	0x01DB7D18 LDR W0, [X8]
	0x01DB7D1C B 0x1DB7DB4
	0x01DB7D20 LDR X0, [X24]
	0x01DB7D24 LDR X19, [X20 + 0x40]
	0x01DB7D28 LDR W8, [X0 + 0xE0]
	0x01DB7D2C CBNZ W8, 0x1DB7D34
	0x01DB7D30 BL 0x1C16DFC
	0x01DB7D34 ADRP X8, 0x2340000
	0x01DB7D38 LDR X8, [X8 + 0xC40]
	0x01DB7D3C MOV X1, X19
	0x01DB7D40 LDP X20, X19, [X31 + 0x50]
	0x01DB7D44 LDP X22, X21, [X31 + 0x40]
	0x01DB7D48 LDR X0, [X8]
	0x01DB7D4C LDP X24, X23, [X31 + 0x30]
	0x01DB7D50 LDR X30, [X31 + 0x28]
	0x01DB7D54 LDP D9, D8, [X31 + 0x18]
	0x01DB7D58 LDP D11, D10, [X31 + 0x8]
	0x01DB7D5C MOVZ W2, 0x7
	0x01DB7D60 MOV X3, X31
	0x01DB7D64 LDR V12, [X31], #0x60
	0x01DB7D68 B 0x1E77B00
	0x01DB7D6C LDR X0, [X24]
	0x01DB7D70 LDR W8, [X0 + 0xE0]
	0x01DB7D74 CBNZ W8, 0x1DB7D7C
	0x01DB7D78 BL 0x1C16DFC
	0x01DB7D7C ADRP X8, 0x2340000
	0x01DB7D80 LDR X8, [X8 + 0xC40]
	0x01DB7D84 MOV W1, W23
	0x01DB7D88 LDP X20, X19, [X31 + 0x50]
	0x01DB7D8C LDP X22, X21, [X31 + 0x40]
	0x01DB7D90 LDR X0, [X8]
	0x01DB7D94 LDP X24, X23, [X31 + 0x30]
	0x01DB7D98 LDR X30, [X31 + 0x28]
	0x01DB7D9C LDP D9, D8, [X31 + 0x18]
	0x01DB7DA0 LDP D11, D10, [X31 + 0x8]
	0x01DB7DA4 MOV X2, X31
	0x01DB7DA8 LDR V12, [X31], #0x60
	0x01DB7DAC B 0x1E77AF8
	0x01DB7DB0 MOV X0, X31
	0x01DB7DB4 LDR W1, [X20 + 0x68]
	0x01DB7DB8 MOVZ W2, 0x7
	0x01DB7DBC MOV X3, X31
	0x01DB7DC0 BL 0x1E9C23C
	0x01DB7DC4 STUR X0, [X23 + 0x1C]
	0x01DB7DC8 ADD X0, X23, 0x38
	0x01DB7DCC MOV X1, X22

ISIL:
	001 Move [X31-144], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X30
	009 Move [X31+72], X27
	010 Move [X31+80], X26
	011 Move [X31+88], X25
	012 Move [X31+96], X24
	013 Move [X31+104], X23
	014 Move [X31+112], X22
	015 Move [X31+120], X21
	016 Move [X31+128], X20
	017 Move [X31+136], X19
	018 Move X25, 0x2622000
	019 Move W8, [X25+2836]
	020 Move X23, X5
	021 Move X19, X4
	022 Move X20, X3
	023 Move X21, X2
	024 Move V8, V6
	025 Move V9, V5
	026 Move V10, V4
	027 Move V11, V3
	028 Move V12, V2
	029 Move V13, V1
	030 Move V14, V0
	031 Move W22, W1
	032 Move X24, X0
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {48}
	037 Move X0, 0x2340000
	038 Move X0, [X0+2680]
	039 Call 0x1C17CF4
	040 Move X0, 0x233F000
	041 Move X0, [X0+1992]
	042 Call 0x1C17CF4
	043 Move X0, 0x2341000
	044 Move X0, [X0+3112]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X25+2836], W8
	048 Move W8, [X24+88]
	049 Compare W8, 0
	050 JumpIfEqual {125}
	051 Move [X24+88], W31
	052 Move X0, [X24+64]
	053 Compare X0, 0
	054 JumpIfEqual {342}
	055 Move X1, X31
	056 Call NetworkObject.get_HasInputAuthority, X0
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {141}
	061 Move X0, X24
	062 Move X1, X23
	063 Call NetPlayer.ShouldApplyHit, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {141}
	068 Move X23, 0x233F000
	069 Move X23, [X23+1992]
	070 Move X0, [X23]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X24, 0x2622000
	076 Move W8, [X24+2141]
	077 Compare W8, 0
	078 JumpIfNotEqual {84}
	079 Move X0, 0x233F000
	080 Move X0, [X0+1992]
	081 Call 0x1C17CF4
	082 Move W8, 1
	083 Move [X24+2141], W8
	084 Move X0, [X23]
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {90}
	088 Call 0x1C17DFC
	089 Move X0, [X23]
	090 Move X8, [X0+184]
	091 Move X0, [X8]
	092 Compare X0, 0
	093 JumpIfEqual {342}
	094 Move W1, W22
	095 Move V1, V13
	096 Move V2, V12
	097 Move V3, V11
	098 Move V4, V10
	099 Move V5, V9
	100 Move V6, V8
	101 Move X2, X21
	102 Move X3, X20
	103 Move X4, X19
	104 Move X20, [X31+128]
	105 Move X19, [X31+136]
	106 Move X22, [X31+112]
	107 Move X21, [X31+120]
	108 Move X24, [X31+96]
	109 Move X23, [X31+104]
	110 Move X26, [X31+80]
	111 Move X25, [X31+88]
	112 Move X30, [X31+64]
	113 Move X27, [X31+72]
	114 Move D9, [X31+48]
	115 Move D8, [X31+56]
	116 Move D11, [X31+32]
	117 Move D10, [X31+40]
	118 Move D13, [X31+16]
	119 Move D12, [X31+24]
	120 Move V0, V14
	121 Move X5, X31
	122 Move V14, [X31+144]
	123 Call PlayerController.PlayerHit, X0, X1, X2, X3, X4, X5, X6
	124 Return 
	125 Move X26, 0x2340000
	126 Move X26, [X26+2680]
	127 Move X0, [X26]
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {132}
	131 Call 0x1C17DFC
	132 Move X0, X24
	133 Move X1, X31
	134 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	135 Move X0, [X24+56]
	136 Compare X0, 0
	137 JumpIfEqual {342}
	138 Move X1, X31
	139 Call NetworkRunner.get_Stage, X0
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move X20, [X31+128]
	142 Move X19, [X31+136]
	143 Move X22, [X31+112]
	144 Move X21, [X31+120]
	145 Move X24, [X31+96]
	146 Move X23, [X31+104]
	147 Move X26, [X31+80]
	148 Move X25, [X31+88]
	149 Move X30, [X31+64]
	150 Move X27, [X31+72]
	151 Move D9, [X31+48]
	152 Move D8, [X31+56]
	153 Move D11, [X31+32]
	154 Move D10, [X31+40]
	155 Move D13, [X31+16]
	156 Move D12, [X31+24]
	157 Move V14, [X31+144]
	158 Return 
	159 Move X0, [X24+64]
	160 Compare X0, 0
	161 JumpIfEqual {342}
	162 Move X1, X31
	163 Call NetworkObject.GetLocalAuthorityMask, X0
	164 And W31, W0, 7
	165 Move TEMP, X0
	166 And TEMP, TEMP, 2
	167 Compare TEMP, 2
	168 JumpIfEqual {52}
	169 Move X0, X21
	170 Move X1, X31
	171 Call ReadWriteUtilsForWeaver.GetByteCountUtf8NoHash, X0
	172 Move W25, W0
	173 Move X0, X20
	174 Move X1, X31
	175 Call ReadWriteUtilsForWeaver.GetByteCountUtf8NoHash, X0
	176 Add W8, W0, 3
	177 Move X0, X19
	178 Move X1, X31
	179 And W27, W8, 0xFFFFFFFC
	180 Call ReadWriteUtilsForWeaver.GetByteCountUtf8NoHash, X0
	181 Add W9, W25, 51
	182 Add W8, W0, 3
	183 And W9, W9, 0xFFFFFFFC
	184 And W8, W8, 0xFFFFFFFC
	185 Add W9, W9, W27
	186 Add W25, W9, W8
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move X8, [X24+56]
	189 Compare X8, 0
	190 JumpIfEqual {342}
	191 Move X0, [X8+80]
	192 Compare X0, 0
	193 JumpIfEqual {342}
	194 Move X1, X31
	195 Call Simulation.HasAnyActiveConnections, X0
	196 Move TEMP, X0
	197 And TEMP, TEMP, 1
	198 Compare TEMP, 1
	199 JumpIfNotEqual {141}
	200 Move X8, [X24+56]
	201 Compare X8, 0
	202 JumpIfEqual {342}
	203 Move X0, [X8+80]
	204 Move W1, W25
	205 Move X2, X31
	206 Call SimulationMessage.Allocate, X0, X1
	207 Move X8, [X24+64]
	208 Compare X8, 0
	209 JumpIfEqual {342}
	210 Move X8, [X8+32]
	211 Move X25, X0
	212 Add X26, X0, 28
	213 Compare X8, 0
	214 JumpIfEqual {276}
	215 Move W0, [X8]
	216 Move X0, [X26]
	217 Move X19, [X24+64]
	218 Move W8, [X0+224]
	219 Compare W8, 0
	220 JumpIfNotEqual {222}
	221 Call 0x1C17DFC
	222 Move X8, 0x2341000
	223 Move X8, [X8+3112]
	224 Move X1, X19
	225 Move X20, [X31+128]
	226 Move X19, [X31+136]
	227 Move X22, [X31+112]
	228 Move X21, [X31+120]
	229 Move X0, [X8]
	230 Move X24, [X31+96]
	231 Move X23, [X31+104]
	232 Move X26, [X31+80]
	233 Move X25, [X31+88]
	234 Move X30, [X31+64]
	235 Move X27, [X31+72]
	236 Move D9, [X31+48]
	237 Move D8, [X31+56]
	238 Move D11, [X31+32]
	239 Move D10, [X31+40]
	240 Move D13, [X31+16]
	241 Move D12, [X31+24]
	242 Move W2, 7
	243 Move X3, X31
	244 Move V14, [X31+144]
	245 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	246 Return 
	247 Move X0, [X26]
	248 Move W8, [X0+224]
	249 Compare W8, 0
	250 JumpIfNotEqual {252}
	251 Call 0x1C17DFC
	252 Move X8, 0x2341000
	253 Move X8, [X8+3112]
	254 Move W1, W25
	255 Move X20, [X31+128]
	256 Move X19, [X31+136]
	257 Move X22, [X31+112]
	258 Move X21, [X31+120]
	259 Move X0, [X8]
	260 Move X24, [X31+96]
	261 Move X23, [X31+104]
	262 Move X26, [X31+80]
	263 Move X25, [X31+88]
	264 Move X30, [X31+64]
	265 Move X27, [X31+72]
	266 Move D9, [X31+48]
	267 Move D8, [X31+56]
	268 Move D11, [X31+32]
	269 Move D10, [X31+40]
	270 Move D13, [X31+16]
	271 Move D12, [X31+24]
	272 Move X2, X31
	273 Move V14, [X31+144]
	274 Call NetworkBehaviourUtils.NotifyRpcPayloadSizeExceeded, X0, X1
	275 Return 
	276 Move X0, X31
	277 Move W1, [X24+104]
	278 Move W2, 3
	279 Move X3, X31
	280 Call RpcHeader.Create, X0, X1, X2
	281 Move [X25+28], X0
	282 Add X0, X25, 68
	283 Move X1, X21
	284 Move X2, X31
	285 Move [X25+36], W22
	286 Move [X25+40], S14
	287 Move [X25+48], S13
	288 Move [X25+48], S12
	289 Move [X25+56], S11
	290 Move [X25+56], S10
	291 Move [X25+64], S9
	292 Move [X25+64], S8
	293 Call ReadWriteUtilsForWeaver.WriteStringUtf8NoHash, X0, X1
	294 Add W8, W0, 43
	295 And W21, W8, 0xFFFFFFFC
	296 Add X0, X26, W21
	297 Move X1, X20
	298 Move X2, X31
	299 Call ReadWriteUtilsForWeaver.WriteStringUtf8NoHash, X0, X1
	300 Add W8, W0, 3
	301 And W8, W8, 0xFFFFFFFC
	302 Add W20, W8, W21
	303 Add X0, X26, W20
	304 Move X1, X19
	305 Move X2, X31
	306 Call ReadWriteUtilsForWeaver.WriteStringUtf8NoHash, X0, X1
	307 Add W8, W0, 3
	308 And W8, W8, 0xFFFFFFFC
	309 Add W8, W20, W8
	310 Move [X26], X23
	311 Compare X25, 0
	312 JumpIfEqual {342}
	313 Move W8, W8
	314 ShiftRight W8, 29
	315 And W8, W8, 0xFFFFFFF
	316 Add W8, W8, 64
	317 Move [X25+12], W8
	318 Move X0, [X24+56]
	319 Compare X0, 0
	320 JumpIfEqual {342}
	321 Move X1, X25
	322 Move X20, [X31+128]
	323 Move X19, [X31+136]
	324 Move X22, [X31+112]
	325 Move X21, [X31+120]
	326 Move X24, [X31+96]
	327 Move X23, [X31+104]
	328 Move X26, [X31+80]
	329 Move X25, [X31+88]
	330 Move X30, [X31+64]
	331 Move X27, [X31+72]
	332 Move D9, [X31+48]
	333 Move D8, [X31+56]
	334 Move D11, [X31+32]
	335 Move D10, [X31+40]
	336 Move D13, [X31+16]
	337 Move D12, [X31+24]
	338 Move X2, X31
	339 Move V14, [X31+144]
	340 Call NetworkRunner.SendRpc, X0, X1
	341 Return 
	342 Call 0x1C17F20

Method: System.Void RPC_PlayerHit(System.Int32 damage, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, System.String hitSound, System.String killSound, UnityEngine.Vector3 force, System.String hitName, Fusion.NetworkBehaviourId source)

Disassembly:
	0x01DB7DD0 MOV X2, X31
	0x01DB7DD4 STP S12, S11, [X23 + 0x24]
	0x01DB7DD8 STP S10, S9, [X23 + 0x2C]
	0x01DB7DDC STR S8, [X23 + 0x34]
	0x01DB7DE0 BL 0x1E8DCF8
	0x01DB7DE4 ADD W8, W0, 0x1F
	0x01DB7DE8 SXTW X8, W8
	0x01DB7DEC AND X8, X8, 0xFFFFFFFF
	0x01DB7DF0 ADD W9, W8, 0x8
	0x01DB7DF4 STR X21, [X24, X8, LSL]
	0x01DB7DF8 STR W19, [X24, W9, SXTW]
	0x01DB7DFC CBZ X23, 0x1DB7E3C
	0x01DB7E00 UBFM W8, W8, 0x1D, 0x1C
	0x01DB7E04 ADD W8, W8, 0x60
	0x01DB7E08 STR W8, [X23 + 0xC]
	0x01DB7E0C LDR X0, [X20 + 0x38]
	0x01DB7E10 CBZ X0, 0x1DB7E3C
	0x01DB7E14 MOV X1, X23
	0x01DB7E18 LDP X20, X19, [X31 + 0x50]
	0x01DB7E1C LDP X22, X21, [X31 + 0x40]
	0x01DB7E20 LDP X24, X23, [X31 + 0x30]
	0x01DB7E24 LDR X30, [X31 + 0x28]
	0x01DB7E28 LDP D9, D8, [X31 + 0x18]
	0x01DB7E2C LDP D11, D10, [X31 + 0x8]
	0x01DB7E30 MOV X2, X31
	0x01DB7E34 LDR V12, [X31], #0x60
	0x01DB7E38 B 0x1EA1E24
	0x01DB7E3C BL 0x1C16F20
	0x01DB7E40 B 0x1DB7B0C
	0x01DB7E44 STR X30, [X31 - 0x30]!
	0x01DB7E48 STP X22, X21, [X31 + 0x10]
	0x01DB7E4C STP X20, X19, [X31 + 0x20]
	0x01DB7E50 ADRP X21, 0x2621000
	0x01DB7E54 ADRP X22, 0x2340000
	0x01DB7E58 ADRP X20, 0x233C000
	0x01DB7E5C LDRB W8, [X21 + 0xB1A]
	0x01DB7E60 LDR X22, [X22 + 0xBE0]
	0x01DB7E64 LDR X20, [X20 + 0x898]
	0x01DB7E68 MOV X19, X0
	0x01DB7E6C TBNZ X8, 0x0, 0x1DB7E90
	0x01DB7E70 ADRP X0, 0x233C000
	0x01DB7E74 LDR X0, [X0 + 0x898]
	0x01DB7E78 BL 0x1C16CF4
	0x01DB7E7C ADRP X0, 0x2340000
	0x01DB7E80 LDR X0, [X0 + 0xBE0]
	0x01DB7E84 BL 0x1C16CF4
	0x01DB7E88 MOVZ W8, 0x1
	0x01DB7E8C STRB W8, [X21 + 0xB1A]
	0x01DB7E90 LDR X8, [X22]
	0x01DB7E94 STR X8, [X19 + 0x110]
	0x01DB7E98 LDR X0, [X20]
	0x01DB7E9C LDR W8, [X0 + 0xE0]
	0x01DB7EA0 CBNZ W8, 0x1DB7EA8
	0x01DB7EA4 BL 0x1C16DFC
	0x01DB7EA8 ADRP X21, 0x2621000
	0x01DB7EAC LDRB W8, [X21 + 0x78B]
	0x01DB7EB0 CBNZ W8, 0x1DB7EC8
	0x01DB7EB4 ADRP X0, 0x233C000
	0x01DB7EB8 LDR X0, [X0 + 0x898]
	0x01DB7EBC BL 0x1C16CF4
	0x01DB7EC0 MOVZ W8, 0x1
	0x01DB7EC4 STRB W8, [X21 + 0x78B]
	0x01DB7EC8 LDR X0, [X20]
	0x01DB7ECC LDR W8, [X0 + 0xE0]
	0x01DB7ED0 CBNZ W8, 0x1DB7EDC
	0x01DB7ED4 BL 0x1C16DFC
	0x01DB7ED8 LDR X0, [X20]
	0x01DB7EDC LDR X8, [X0 + 0xB8]
	0x01DB7EE0 MOV X0, X19
	0x01DB7EE4 LDP X22, X21, [X31 + 0x10]
	0x01DB7EE8 MOV X1, X31
	0x01DB7EEC LDR X8, [X8]
	0x01DB7EF0 STR X8, [X19 + 0x1D8]
	0x01DB7EF4 LDP X20, X19, [X31 + 0x20]
	0x01DB7EF8 LDR X30, [X31], #0x30
	0x01DB7EFC B 0x1E74F04
	0x01DB7F00 STR X30, [X31 - 0x30]!
	0x01DB7F04 STP X22, X21, [X31 + 0x10]
	0x01DB7F08 STP X20, X19, [X31 + 0x20]
	0x01DB7F0C ADRP X21, 0x2621000
	0x01DB7F10 ADRP X22, 0x2340000
	0x01DB7F14 ADRP X19, 0x2340000
	0x01DB7F18 ADRP X20, 0x233E000
	0x01DB7F1C LDRB W8, [X21 + 0xB1B]
	0x01DB7F20 LDR X22, [X22 + 0xC48]
	0x01DB7F24 LDR X19, [X19 + 0xC50]
	0x01DB7F28 LDR X20, [X20 + 0x9A0]
	0x01DB7F2C TBNZ X8, 0x0, 0x1DB7F5C
	0x01DB7F30 ADRP X0, 0x2340000
	0x01DB7F34 LDR X0, [X0 + 0xC50]
	0x01DB7F38 BL 0x1C16CF4
	0x01DB7F3C ADRP X0, 0x2340000
	0x01DB7F40 LDR X0, [X0 + 0xC48]
	0x01DB7F44 BL 0x1C16CF4
	0x01DB7F48 ADRP X0, 0x233E000
	0x01DB7F4C LDR X0, [X0 + 0x9A0]
	0x01DB7F50 BL 0x1C16CF4
	0x01DB7F54 MOVZ W8, 0x1
	0x01DB7F58 STRB W8, [X21 + 0xB1B]
	0x01DB7F5C LDR X0, [X22]
	0x01DB7F60 BL 0x1C16F10
	0x01DB7F64 LDR X1, [X19]
	0x01DB7F68 MOV X19, X0
	0x01DB7F6C BL 0x2B0E7A4
	0x01DB7F70 LDR X8, [X20]
	0x01DB7F74 LDP X22, X21, [X31 + 0x10]
	0x01DB7F78 LDR X8, [X8 + 0xB8]
	0x01DB7F7C STR X19, [X8]
	0x01DB7F80 LDR X8, [X20]
	0x01DB7F84 LDP X20, X19, [X31 + 0x20]
	0x01DB7F88 LDR X8, [X8 + 0xB8]
	0x01DB7F8C STR X31, [X8 + 0x8]
	0x01DB7F90 LDR X30, [X31], #0x30
	0x01DB7F94 RET
	0x01DB7F98 SUB X31, X31, 0x70
	0x01DB7F9C STR X30, [X31 + 0x50]
	0x01DB7FA0 STP X20, X19, [X31 + 0x60]
	0x01DB7FA4 MRS X20, 0xC000
	0x01DB7FA8 LDR X8, [X20 + 0x28]
	0x01DB7FAC MOV X19, X0
	0x01DB7FB0 STR X8, [X31 + 0x48]
	0x01DB7FB4 LDRB W1, [X0 + 0x108]
	0x01DB7FB8 BL 0x1DB18BC
	0x01DB7FBC LDR X1, [X19 + 0x110]
	0x01DB7FC0 MOV X0, X19
	0x01DB7FC4 BL 0x1DB19EC
	0x01DB7FC8 LDR W1, [X19 + 0x118]
	0x01DB7FCC MOV X0, X19
	0x01DB7FD0 BL 0x1DB1A5C
	0x01DB7FD4 ADD X8, X19, 0x11C
	0x01DB7FD8 LDR X9, [X8 + 0x10]
	0x01DB7FDC LDR V0, [X8]
	0x01DB7FE0 ADD X1, X31, 0x30
	0x01DB7FE4 MOV X0, X19
	0x01DB7FE8 STR X9, [X31 + 0x40]
	0x01DB7FEC STR V0, [X31 + 0x3]
	0x01DB7FF0 BL 0x1DB1B28
	0x01DB7FF4 ADD X8, X19, 0x134
	0x01DB7FF8 LDP V1, V0, [X8 + 0x10]
	0x01DB7FFC LDR V2, [X8]
	0x01DB8000 ADD X1, X31, 0x0
	0x01DB8004 MOV X0, X19
	0x01DB8008 STP V1, V0, [X31 + 0x10]
	0x01DB800C STR V2, [X31]
	0x01DB8010 BL 0x1DB1C04
	0x01DB8014 LDR X1, [X19 + 0x168]
	0x01DB8018 MOV X0, X19
	0x01DB801C BL 0x1DB1CEC
	0x01DB8020 LDR X8, [X20 + 0x28]
	0x01DB8024 LDR X9, [X31 + 0x48]
	0x01DB8028 CMP X8, X9
	0x01DB802C B.NE 0x1DB8040
	0x01DB8030 LDP X20, X19, [X31 + 0x60]
	0x01DB8034 LDR X30, [X31 + 0x50]
	0x01DB8038 ADD X31, X31, 0x70
	0x01DB803C RET
	0x01DB8040 BL 0x3EB1B20
	0x01DB8044 SUB X31, X31, 0x70
	0x01DB8048 STR X30, [X31 + 0x50]
	0x01DB804C STP X20, X19, [X31 + 0x60]
	0x01DB8050 MRS X20, 0xC000
	0x01DB8054 LDR X8, [X20 + 0x28]
	0x01DB8058 MOV X19, X0
	0x01DB805C STR X8, [X31 + 0x48]
	0x01DB8060 BL 0x1DAEC64
	0x01DB8064 AND W8, W0, 0x1
	0x01DB8068 MOV X0, X19
	0x01DB806C STRB W8, [X19 + 0x108]
	0x01DB8070 BL 0x1DB1974
	0x01DB8074 STR X0, [X19 + 0x110]
	0x01DB8078 MOV X0, X19
	0x01DB807C BL 0x1DAEC04
	0x01DB8080 STR W0, [X19 + 0x118]
	0x01DB8084 ADD X8, X31, 0x30
	0x01DB8088 MOV X0, X19
	0x01DB808C BL 0x1DB1ABC
	0x01DB8090 LDR X8, [X31 + 0x40]
	0x01DB8094 LDR V0, [X31 + 0x3]
	0x01DB8098 ADD X9, X19, 0x11C
	0x01DB809C MOV X0, X19
	0x01DB80A0 STR X8, [X9 + 0x10]
	0x01DB80A4 ADD X8, X31, 0x0
	0x01DB80A8 STR V0, [X9]
	0x01DB80AC BL 0x1DB1B94
	0x01DB80B0 LDP V1, V0, [X31 + 0x10]
	0x01DB80B4 LDR V2, [X31]
	0x01DB80B8 ADD X8, X19, 0x134
	0x01DB80BC MOV X0, X19
	0x01DB80C0 STP V1, V0, [X8 + 0x10]
	0x01DB80C4 STR V2, [X8]
	0x01DB80C8 BL 0x1DB1C74
	0x01DB80CC STR X0, [X19 + 0x168]
	0x01DB80D0 LDR X8, [X20 + 0x28]
	0x01DB80D4 LDR X9, [X31 + 0x48]
	0x01DB80D8 CMP X8, X9
	0x01DB80DC B.NE 0x1DB80F0
	0x01DB80E0 LDP X20, X19, [X31 + 0x60]
	0x01DB80E4 LDR X30, [X31 + 0x50]
	0x01DB80E8 ADD X31, X31, 0x70
	0x01DB80EC RET
	0x01DB80F0 BL 0x3EB1B20
	0x01DB80F4 STP X30, X21, [X31 - 0x20]!
	0x01DB80F8 STP X20, X19, [X31 + 0x10]
	0x01DB80FC ADRP X21, 0x2620000
	0x01DB8100 LDRB W8, [X21 + 0xB1C]
	0x01DB8104 MOV X20, X1
	0x01DB8108 MOV X19, X0
	0x01DB810C TBNZ X8, 0x0, 0x1DB8124
	0x01DB8110 ADRP X0, 0x233D000
	0x01DB8114 LDR X0, [X0 + 0x9A0]
	0x01DB8118 BL 0x1C16CF4
	0x01DB811C MOVZ W8, 0x1
	0x01DB8120 STRB W8, [X21 + 0xB1C]
	0x01DB8124 CBZ X19, 0x1DB8188
	0x01DB8128 ADRP X10, 0x233D000
	0x01DB812C LDR X10, [X10 + 0x9A0]
	0x01DB8130 MOVZ W9, 0x1
	0x01DB8134 LDR W8, [X20 + 0x24]
	0x01DB8138 STRB W9, [X19 + 0x58]
	0x01DB813C LDR X9, [X19]
	0x01DB8140 LDR X1, [X10]
	0x01DB8144 LDRB W11, [X9 + 0x130]
	0x01DB8148 LDRB W10, [X1 + 0x130]
	0x01DB814C CMP W11, W10
	0x01DB8150 B.CC 0x1DB8180
	0x01DB8154 LDR X9, [X9 + 0xC8]
	0x01DB8158 ADD X9, X9, X10, 0x3, LSL
	0x01DB815C LDUR X9, [X9 - 0x8]
	0x01DB8160 CMP X9, X1
	0x01DB8164 B.NE 0x1DB8180
	0x01DB8168 MOV X0, X19
	0x01DB816C LDP X20, X19, [X31 + 0x10]
	0x01DB8170 CMP W8, 0x0
	0x01DB8174 CSET W1, NE
	0x01DB8178 LDP X30, X21, [X31], #0x20
	0x01DB817C B 0x1DB4BC0
	0x01DB8180 MOV X0, X19
	0x01DB8184 BL 0x1C171E0
	0x01DB8188 BL 0x1C16F20
	0x01DB818C STP X30, X23, [X31 - 0x30]!
	0x01DB8190 STP X22, X21, [X31 + 0x10]
	0x01DB8194 STP X20, X19, [X31 + 0x20]
	0x01DB8198 ADRP X23, 0x2620000
	0x01DB819C ADRP X21, 0x233B000
	0x01DB81A0 ADRP X22, 0x233F000
	0x01DB81A4 LDRB W8, [X23 + 0xB1D]
	0x01DB81A8 LDR X21, [X21 + 0x638]
	0x01DB81AC LDR X22, [X22 + 0xC58]
	0x01DB81B0 MOV X20, X1
	0x01DB81B4 MOV X19, X0
	0x01DB81B8 TBNZ X8, 0x0, 0x1DB81E8
	0x01DB81BC ADRP X0, 0x233F000
	0x01DB81C0 LDR X0, [X0 + 0xC58]
	0x01DB81C4 BL 0x1C16CF4
	0x01DB81C8 ADRP X0, 0x233D000
	0x01DB81CC LDR X0, [X0 + 0x9A0]
	0x01DB81D0 BL 0x1C16CF4
	0x01DB81D4 ADRP X0, 0x233B000
	0x01DB81D8 LDR X0, [X0 + 0x638]
	0x01DB81DC BL 0x1C16CF4
	0x01DB81E0 MOVZ W8, 0x1
	0x01DB81E4 STRB W8, [X23 + 0xB1D]
	0x01DB81E8 LDR W1, [X20 + 0x24]
	0x01DB81EC LDR X0, [X21]
	0x01DB81F0 BL 0x1C16D6C
	0x01DB81F4 LDR X2, [X22]
	0x01DB81F8 ADD X1, X20, 0x28
	0x01DB81FC MOV X21, X0
	0x01DB8200 BL 0x2221A30
	0x01DB8204 CBZ X19, 0x1DB8264
	0x01DB8208 ADRP X9, 0x233D000
	0x01DB820C LDR X9, [X9 + 0x9A0]
	0x01DB8210 MOVZ W8, 0x1
	0x01DB8214 STRB W8, [X19 + 0x58]
	0x01DB8218 LDR X8, [X19]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+88], X27
	012 Move [X31+96], X26
	013 Move [X31+104], X25
	014 Move [X31+112], X24
	015 Move [X31+120], X23
	016 Move [X31+128], X22
	017 Move [X31+136], X21
	018 Move [X31+144], X20
	019 Move [X31+152], X19
	020 Move X25, 0x2622000
	021 Move V14, V0
	022 Move V7, [X31+168]
	023 Move W8, [X25+2837]
	024 Move S15, [X31+160]
	025 Move S0, [X31+164]
	026 Move X23, X5
	027 Move X19, X4
	028 Move X20, X3
	029 Move X21, X2
	030 Move V8, V6
	031 Move V9, V5
	032 Move V10, V4
	033 Move V11, V3
	034 Move V12, V2
	035 Move V13, V1
	036 Move W22, W1
	037 Move X24, X0
	038 Move [X31+8], S0
	039 Move [X31+16], S7
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {55}
	044 Move X0, 0x2340000
	045 Move X0, [X0+2680]
	046 Call 0x1C17CF4
	047 Move X0, 0x233F000
	048 Move X0, [X0+1992]
	049 Call 0x1C17CF4
	050 Move X0, 0x2341000
	051 Move X0, [X0+3120]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X25+2837], W8
	055 Move W8, [X24+88]
	056 Compare W8, 0
	057 JumpIfEqual {139}
	058 Move [X24+88], W31
	059 Move X0, [X24+64]
	060 Compare X0, 0
	061 JumpIfEqual {371}
	062 Move X1, X31
	063 Call NetworkObject.get_HasInputAuthority, X0
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {155}
	068 Move X0, X24
	069 Move X1, X23
	070 Call NetPlayer.ShouldApplyHit, X0, X1
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {155}
	075 Move X23, 0x233F000
	076 Move X23, [X23+1992]
	077 Move X0, [X23]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Move X24, 0x2622000
	083 Move W8, [X24+2141]
	084 Compare W8, 0
	085 JumpIfNotEqual {91}
	086 Move X0, 0x233F000
	087 Move X0, [X0+1992]
	088 Call 0x1C17CF4
	089 Move W8, 1
	090 Move [X24+2141], W8
	091 Move X0, [X23]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {97}
	095 Call 0x1C17DFC
	096 Move X0, [X23]
	097 Move X8, [X0+184]
	098 Move X0, [X8]
	099 Compare X0, 0
	100 JumpIfEqual {371}
	101 Move V0, [X31+8]
	102 Move W1, W22
	103 Move V1, V13
	104 Move V2, V12
	105 Move [X31+160], S15
	106 Move [X31+168], S0
	107 Move V0, [X31+12]
	108 Move V3, V11
	109 Move V4, V10
	110 Move V5, V9
	111 Move [X31+168], S0
	112 Move V0, V14
	113 Move V6, V8
	114 Move X2, X21
	115 Move X3, X20
	116 Move X4, X19
	117 Move X20, [X31+144]
	118 Move X19, [X31+152]
	119 Move X22, [X31+128]
	120 Move X21, [X31+136]
	121 Move X24, [X31+112]
	122 Move X23, [X31+120]
	123 Move X26, [X31+96]
	124 Move X25, [X31+104]
	125 Move X30, [X31+80]
	126 Move X27, [X31+88]
	127 Move D9, [X31+64]
	128 Move D8, [X31+72]
	129 Move D11, [X31+48]
	130 Move D10, [X31+56]
	131 Move D13, [X31+32]
	132 Move D12, [X31+40]
	133 Move D15, [X31+16]
	134 Move D14, [X31+24]
	135 Move X5, X31
	136 Add X31, X31, 160
	137 Call PlayerController.PlayerHit, X0, X1, X2, X3, X4, X5, X6, X7
	138 Return 
	139 Move X26, 0x2340000
	140 Move X26, [X26+2680]
	141 Move X0, [X26]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1C17DFC
	146 Move X0, X24
	147 Move X1, X31
	148 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	149 Move X0, [X24+56]
	150 Compare X0, 0
	151 JumpIfEqual {371}
	152 Move X1, X31
	153 Call NetworkRunner.get_Stage, X0
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X20, [X31+144]
	156 Move X19, [X31+152]
	157 Move X22, [X31+128]
	158 Move X21, [X31+136]
	159 Move X24, [X31+112]
	160 Move X23, [X31+120]
	161 Move X26, [X31+96]
	162 Move X25, [X31+104]
	163 Move X30, [X31+80]
	164 Move X27, [X31+88]
	165 Move D9, [X31+64]
	166 Move D8, [X31+72]
	167 Move D11, [X31+48]
	168 Move D10, [X31+56]
	169 Move D13, [X31+32]
	170 Move D12, [X31+40]
	171 Move D15, [X31+16]
	172 Move D14, [X31+24]
	173 Add X31, X31, 160
	174 Return 
	175 Move X0, [X24+64]
	176 Compare X0, 0
	177 JumpIfEqual {371}
	178 Move X1, X31
	179 Call NetworkObject.GetLocalAuthorityMask, X0
	180 And W31, W0, 7
	181 Move TEMP, X0
	182 And TEMP, TEMP, 2
	183 Compare TEMP, 2
	184 JumpIfEqual {59}
	185 Move X0, X21
	186 Move X1, X31
	187 Call ReadWriteUtilsForWeaver.GetByteCountUtf8NoHash, X0
	188 Move W25, W0
	189 Move X0, X20
	190 Move X1, X31
	191 Call ReadWriteUtilsForWeaver.GetByteCountUtf8NoHash, X0
	192 Add W8, W0, 3
	193 Move X0, X19
	194 Move X1, X31
	195 And W27, W8, 0xFFFFFFFC
	196 Call ReadWriteUtilsForWeaver.GetByteCountUtf8NoHash, X0
	197 Add W9, W25, 63
	198 Add W8, W0, 3
	199 And W9, W9, 0xFFFFFFFC
	200 And W8, W8, 0xFFFFFFFC
	201 Add W9, W9, W27
	202 Add W25, W9, W8
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move X8, [X24+56]
	205 Compare X8, 0
	206 JumpIfEqual {371}
	207 Move X0, [X8+80]
	208 Compare X0, 0
	209 JumpIfEqual {371}
	210 Move X1, X31
	211 Call Simulation.HasAnyActiveConnections, X0
	212 Move TEMP, X0
	213 And TEMP, TEMP, 1
	214 Compare TEMP, 1
	215 JumpIfNotEqual {155}
	216 Move X8, [X24+56]
	217 Compare X8, 0
	218 JumpIfEqual {371}
	219 Move X0, [X8+80]
	220 Move W1, W25
	221 Move X2, X31
	222 Call SimulationMessage.Allocate, X0, X1
	223 Move X8, [X24+64]
	224 Compare X8, 0
	225 JumpIfEqual {371}
	226 Move X8, [X8+32]
	227 Move X25, X0
	228 Add X26, X0, 28
	229 Compare X8, 0
	230 JumpIfEqual {296}
	231 Move W0, [X8]
	232 Move X0, [X26]
	233 Move X19, [X24+64]
	234 Move W8, [X0+224]
	235 Compare W8, 0
	236 JumpIfNotEqual {238}
	237 Call 0x1C17DFC
	238 Move X8, 0x2340000
	239 Move X8, [X8+3120]
	240 Move X1, X19
	241 Move X20, [X31+144]
	242 Move X19, [X31+152]
	243 Move X22, [X31+128]
	244 Move X21, [X31+136]
	245 Move X0, [X8]
	246 Move X24, [X31+112]
	247 Move X23, [X31+120]
	248 Move X26, [X31+96]
	249 Move X25, [X31+104]
	250 Move X30, [X31+80]
	251 Move X27, [X31+88]
	252 Move D9, [X31+64]
	253 Move D8, [X31+72]
	254 Move D11, [X31+48]
	255 Move D10, [X31+56]
	256 Move D13, [X31+32]
	257 Move D12, [X31+40]
	258 Move D15, [X31+16]
	259 Move D14, [X31+24]
	260 Move W2, 7
	261 Move X3, X31
	262 Add X31, X31, 160
	263 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	264 Return 
	265 Move X0, [X26]
	266 Move W8, [X0+224]
	267 Compare W8, 0
	268 JumpIfNotEqual {270}
	269 Call 0x1C17DFC
	270 Move X8, 0x2340000
	271 Move X8, [X8+3120]
	272 Move W1, W25
	273 Move X20, [X31+144]
	274 Move X19, [X31+152]
	275 Move X22, [X31+128]
	276 Move X21, [X31+136]
	277 Move X0, [X8]
	278 Move X24, [X31+112]
	279 Move X23, [X31+120]
	280 Move X26, [X31+96]
	281 Move X25, [X31+104]
	282 Move X30, [X31+80]
	283 Move X27, [X31+88]
	284 Move D9, [X31+64]
	285 Move D8, [X31+72]
	286 Move D11, [X31+48]
	287 Move D10, [X31+56]
	288 Move D13, [X31+32]
	289 Move D12, [X31+40]
	290 Move D15, [X31+16]
	291 Move D14, [X31+24]
	292 Move X2, X31
	293 Add X31, X31, 160
	294 Call NetworkBehaviourUtils.NotifyRpcPayloadSizeExceeded, X0, X1
	295 Return 
	296 Move X0, X31
	297 Move W1, [X24+104]
	298 Move W2, 4
	299 Move X3, X31
	300 Call RpcHeader.Create, X0, X1, X2
	301 Move [X25+28], X0
	302 Add X0, X25, 68
	303 Move X1, X21
	304 Move X2, X31
	305 Move [X25+36], W22
	306 Move [X25+40], S14
	307 Move [X25+48], S13
	308 Move [X25+48], S12
	309 Move [X25+56], S11
	310 Move [X25+56], S10
	311 Move [X25+64], S9
	312 Move [X25+64], S8
	313 Call ReadWriteUtilsForWeaver.WriteStringUtf8NoHash, X0, X1
	314 Add W8, W0, 43
	315 And W21, W8, 0xFFFFFFFC
	316 Add X0, X26, W21
	317 Move X1, X20
	318 Move X2, X31
	319 Call ReadWriteUtilsForWeaver.WriteStringUtf8NoHash, X0, X1
	320 Add W8, W0, 3
	321 Move V0, [X31+8]
	322 And W8, W8, 0xFFFFFFFC
	323 Add W8, W8, W21
	324 Add X9, X26, W8
	325 Move [X9], S15
	326 Move [X9+8], S0
	327 Move V0, [X31+12]
	328 Add W20, W8, 12
	329 Add X0, X26, W20
	330 Move X1, X19
	331 Move X2, X31
	332 Move [X9+8], S0
	333 Call ReadWriteUtilsForWeaver.WriteStringUtf8NoHash, X0, X1
	334 Add W8, W0, 3
	335 And W8, W8, 0xFFFFFFFC
	336 Add W8, W8, W20
	337 Move [X26], X23
	338 Compare X25, 0
	339 JumpIfEqual {371}
	340 Move W8, W8
	341 ShiftRight W8, 29
	342 And W8, W8, 0xFFFFFFF
	343 Add W8, W8, 64
	344 Move [X25+12], W8
	345 Move X0, [X24+56]
	346 Compare X0, 0
	347 JumpIfEqual {371}
	348 Move X1, X25
	349 Move X20, [X31+144]
	350 Move X19, [X31+152]
	351 Move X22, [X31+128]
	352 Move X21, [X31+136]
	353 Move X24, [X31+112]
	354 Move X23, [X31+120]
	355 Move X26, [X31+96]
	356 Move X25, [X31+104]
	357 Move X30, [X31+80]
	358 Move X27, [X31+88]
	359 Move D9, [X31+64]
	360 Move D8, [X31+72]
	361 Move D11, [X31+48]
	362 Move D10, [X31+56]
	363 Move D13, [X31+32]
	364 Move D12, [X31+40]
	365 Move D15, [X31+16]
	366 Move D14, [X31+24]
	367 Move X2, X31
	368 Add X31, X31, 160
	369 Call NetworkRunner.SendRpc, X0, X1
	370 Return 
	371 Call 0x1C17F20

Method: System.Void RPC_PlayerHit(System.Int32 damage, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, System.String hitSound, System.String killSound, AnimalCompany.PrefabGenerator/PrefabType prefabType, System.String hitName, Fusion.NetworkBehaviourId source)

Disassembly:
	0x01DB821C LDR X1, [X9]
	0x01DB8220 LDRB W10, [X8 + 0x130]
	0x01DB8224 LDRB W9, [X1 + 0x130]
	0x01DB8228 CMP W10, W9
	0x01DB822C B.CC 0x1DB825C
	0x01DB8230 LDR X8, [X8 + 0xC8]
	0x01DB8234 ADD X8, X8, X9, 0x3, LSL
	0x01DB8238 LDUR X8, [X8 - 0x8]
	0x01DB823C CMP X8, X1
	0x01DB8240 B.NE 0x1DB825C
	0x01DB8244 MOV X0, X19
	0x01DB8248 MOV X1, X21
	0x01DB824C LDP X20, X19, [X31 + 0x20]
	0x01DB8250 LDP X22, X21, [X31 + 0x10]
	0x01DB8254 LDP X30, X23, [X31], #0x30
	0x01DB8258 B 0x1DB5960
	0x01DB825C MOV X0, X19
	0x01DB8260 BL 0x1C171E0
	0x01DB8264 BL 0x1C16F20
	0x01DB8268 SUB X31, X31, 0x80
	0x01DB826C STR D14, [X31 + 0x20]
	0x01DB8270 STP D13, D12, [X31 + 0x28]
	0x01DB8274 STP D11, D10, [X31 + 0x38]
	0x01DB8278 STP D9, D8, [X31 + 0x48]
	0x01DB827C STR X30, [X31 + 0x58]
	0x01DB8280 STP X22, X21, [X31 + 0x60]
	0x01DB8284 STP X20, X19, [X31 + 0x70]
	0x01DB8288 ADRP X20, 0x2620000
	0x01DB828C LDRB W8, [X20 + 0xB1E]
	0x01DB8290 MOV X21, X1
	0x01DB8294 MOV X19, X0
	0x01DB8298 TBNZ X8, 0x0, 0x1DB82B0
	0x01DB829C ADRP X0, 0x233D000
	0x01DB82A0 LDR X0, [X0 + 0x9A0]
	0x01DB82A4 BL 0x1C16CF4
	0x01DB82A8 MOVZ W8, 0x1
	0x01DB82AC STRB W8, [X20 + 0xB1E]
	0x01DB82B0 STP X31, X31, [X31 + 0x10]
	0x01DB82B4 STR X31, [X31 + 0x8]
	0x01DB82B8 LDR W20, [X21 + 0x24]
	0x01DB82BC LDP S8, S9, [X21 + 0x28]
	0x01DB82C0 LDP S10, S11, [X21 + 0x30]
	0x01DB82C4 LDP S12, S13, [X21 + 0x38]
	0x01DB82C8 LDR V14, [X21 + 0x40]
	0x01DB82CC ADD X0, X21, 0x44
	0x01DB82D0 ADD X1, X31, 0x18
	0x01DB82D4 MOV X2, X31
	0x01DB82D8 ADD X22, X21, 0x1C
	0x01DB82DC BL 0x1E8DD00
	0x01DB82E0 ADD W8, W0, 0x2B
	0x01DB82E4 AND W21, W8, 0xFFFFFFFC
	0x01DB82E8 ADD X0, X22, W21, SXTW
	0x01DB82EC ADD X1, X31, 0x10
	0x01DB82F0 MOV X2, X31
	0x01DB82F4 BL 0x1E8DD00
	0x01DB82F8 ADD W8, W0, 0x3
	0x01DB82FC AND W8, W8, 0xFFFFFFFC
	0x01DB8300 ADD W21, W8, W21
	0x01DB8304 ADD X0, X22, W21, SXTW
	0x01DB8308 ADD X1, X31, 0x8
	0x01DB830C MOV X2, X31
	0x01DB8310 BL 0x1E8DD00
	0x01DB8314 CBZ X19, 0x1DB83C0
	0x01DB8318 ADRP X9, 0x233D000
	0x01DB831C LDR X9, [X9 + 0x9A0]
	0x01DB8320 ADD W8, W0, 0x3
	0x01DB8324 AND W8, W8, 0xFFFFFFFC
	0x01DB8328 MOVZ W10, 0x1
	0x01DB832C ADD W8, W21, W8
	0x01DB8330 LDR X5, [X22, W8, SXTW]
	0x01DB8334 STRB W10, [X19 + 0x58]
	0x01DB8338 LDR X8, [X19]
	0x01DB833C LDR X1, [X9]
	0x01DB8340 LDRB W10, [X8 + 0x130]
	0x01DB8344 LDRB W9, [X1 + 0x130]
	0x01DB8348 CMP W10, W9
	0x01DB834C B.CC 0x1DB83B8
	0x01DB8350 LDR X8, [X8 + 0xC8]
	0x01DB8354 ADD X8, X8, X9, 0x3, LSL
	0x01DB8358 LDUR X8, [X8 - 0x8]
	0x01DB835C CMP X8, X1
	0x01DB8360 B.NE 0x1DB83B8
	0x01DB8364 LDP X3, X2, [X31 + 0x10]
	0x01DB8368 LDR X4, [X31 + 0x8]
	0x01DB836C MOV X0, X19
	0x01DB8370 MOV W1, W20
	0x01DB8374 MOV V0.16B, V8.16B
	0x01DB8378 MOV V1.16B, V9.16B
	0x01DB837C MOV V2.16B, V10.16B
	0x01DB8380 MOV V3.16B, V11.16B
	0x01DB8384 MOV V4.16B, V12.16B
	0x01DB8388 MOV V5.16B, V13.16B
	0x01DB838C MOV V6.16B, V14.16B
	0x01DB8390 BL 0x1DB69D0
	0x01DB8394 LDP X20, X19, [X31 + 0x70]
	0x01DB8398 LDP X22, X21, [X31 + 0x60]
	0x01DB839C LDR X30, [X31 + 0x58]
	0x01DB83A0 LDP D9, D8, [X31 + 0x48]
	0x01DB83A4 LDP D11, D10, [X31 + 0x38]
	0x01DB83A8 LDP D13, D12, [X31 + 0x28]
	0x01DB83AC LDR V14, [X31 + 0x20]
	0x01DB83B0 ADD X31, X31, 0x80
	0x01DB83B4 RET
	0x01DB83B8 MOV X0, X19
	0x01DB83BC BL 0x1C171E0
	0x01DB83C0 BL 0x1C16F20
	0x01DB83C4 SUB X31, X31, 0xA0
	0x01DB83C8 STP D15, D14, [X31 + 0x30]
	0x01DB83CC STP D13, D12, [X31 + 0x40]
	0x01DB83D0 STP D11, D10, [X31 + 0x50]
	0x01DB83D4 STP D9, D8, [X31 + 0x60]
	0x01DB83D8 STR X30, [X31 + 0x70]
	0x01DB83DC STP X22, X21, [X31 + 0x80]
	0x01DB83E0 STP X20, X19, [X31 + 0x90]
	0x01DB83E4 ADRP X20, 0x2620000
	0x01DB83E8 LDRB W8, [X20 + 0xB1F]
	0x01DB83EC MOV X21, X1
	0x01DB83F0 MOV X19, X0
	0x01DB83F4 TBNZ X8, 0x0, 0x1DB840C
	0x01DB83F8 ADRP X0, 0x233D000
	0x01DB83FC LDR X0, [X0 + 0x9A0]
	0x01DB8400 BL 0x1C16CF4
	0x01DB8404 MOVZ W8, 0x1
	0x01DB8408 STRB W8, [X20 + 0xB1F]
	0x01DB840C STR X31, [X31 + 0x78]
	0x01DB8410 STP X31, X31, [X31 + 0x20]
	0x01DB8414 LDR V1, [X21 + 0x28]
	0x01DB8418 LDP S0, S10, [X21 + 0x2C]
	0x01DB841C LDR W20, [X21 + 0x24]
	0x01DB8420 LDP S11, S12, [X21 + 0x34]
	0x01DB8424 LDP S13, S14, [X21 + 0x3C]
	0x01DB8428 ADD X0, X21, 0x44
	0x01DB842C ADD X1, X31, 0x78
	0x01DB8430 MOV X2, X31
	0x01DB8434 STP S0, S1, [X31 + 0x18]
	0x01DB8438 ADD X22, X21, 0x1C
	0x01DB843C BL 0x1E8DD00
	0x01DB8440 ADD W8, W0, 0x2B
	0x01DB8444 AND W21, W8, 0xFFFFFFFC
	0x01DB8448 ADD X0, X22, W21, SXTW
	0x01DB844C ADD X1, X31, 0x28
	0x01DB8450 MOV X2, X31
	0x01DB8454 BL 0x1E8DD00
	0x01DB8458 ADD W8, W0, 0x3
	0x01DB845C AND W8, W8, 0xFFFFFFFC
	0x01DB8460 ADD W8, W8, W21
	0x01DB8464 ADD X9, X22, W8, SXTW
	0x01DB8468 LDP S15, S8, [X9]
	0x01DB846C LDR V9, [X9 + 0x8]
	0x01DB8470 ADD W21, W8, 0xC
	0x01DB8474 ADD X0, X22, W21, SXTW
	0x01DB8478 ADD X1, X31, 0x20
	0x01DB847C MOV X2, X31
	0x01DB8480 BL 0x1E8DD00
	0x01DB8484 CBZ X19, 0x1DB8534
	0x01DB8488 ADRP X9, 0x233D000
	0x01DB848C LDR X9, [X9 + 0x9A0]
	0x01DB8490 ADD W8, W0, 0x3
	0x01DB8494 AND W8, W8, 0xFFFFFFFC
	0x01DB8498 MOVZ W10, 0x1
	0x01DB849C ADD W8, W8, W21
	0x01DB84A0 LDR X5, [X22, W8, SXTW]
	0x01DB84A4 STRB W10, [X19 + 0x58]
	0x01DB84A8 LDR X8, [X19]
	0x01DB84AC LDR X1, [X9]
	0x01DB84B0 LDRB W10, [X8 + 0x130]
	0x01DB84B4 LDRB W9, [X1 + 0x130]
	0x01DB84B8 CMP W10, W9
	0x01DB84BC B.CC 0x1DB852C
	0x01DB84C0 LDR X8, [X8 + 0xC8]
	0x01DB84C4 ADD X8, X8, X9, 0x3, LSL
	0x01DB84C8 LDUR X8, [X8 - 0x8]
	0x01DB84CC CMP X8, X1
	0x01DB84D0 B.NE 0x1DB852C
	0x01DB84D4 LDR X2, [X31 + 0x78]
	0x01DB84D8 LDP X4, X3, [X31 + 0x20]
	0x01DB84DC LDP S1, S0, [X31 + 0x18]
	0x01DB84E0 MOV X0, X19
	0x01DB84E4 MOV W1, W20
	0x01DB84E8 MOV V2.16B, V10.16B
	0x01DB84EC MOV V3.16B, V11.16B
	0x01DB84F0 MOV V4.16B, V12.16B
	0x01DB84F4 MOV V5.16B, V13.16B
	0x01DB84F8 MOV V6.16B, V14.16B
	0x01DB84FC STP S8, S9, [X31 + 0x4]
	0x01DB8500 STR S15, [X31]
	0x01DB8504 BL 0x1DB6DD0
	0x01DB8508 LDP X20, X19, [X31 + 0x90]
	0x01DB850C LDP X22, X21, [X31 + 0x80]
	0x01DB8510 LDR X30, [X31 + 0x70]
	0x01DB8514 LDP D9, D8, [X31 + 0x60]
	0x01DB8518 LDP D11, D10, [X31 + 0x50]
	0x01DB851C LDP D13, D12, [X31 + 0x40]
	0x01DB8520 LDP D15, D14, [X31 + 0x30]
	0x01DB8524 ADD X31, X31, 0xA0
	0x01DB8528 RET
	0x01DB852C MOV X0, X19
	0x01DB8530 BL 0x1C171E0
	0x01DB8534 BL 0x1C16F20
	0x01DB8538 SUB X31, X31, 0x80
	0x01DB853C STR D14, [X31 + 0x10]
	0x01DB8540 STP D13, D12, [X31 + 0x20]
	0x01DB8544 STP D11, D10, [X31 + 0x30]
	0x01DB8548 STP D9, D8, [X31 + 0x40]
	0x01DB854C STP X30, X23, [X31 + 0x50]
	0x01DB8550 STP X22, X21, [X31 + 0x60]
	0x01DB8554 STP X20, X19, [X31 + 0x70]
	0x01DB8558 ADRP X20, 0x2620000
	0x01DB855C LDRB W8, [X20 + 0xB20]
	0x01DB8560 MOV X21, X1
	0x01DB8564 MOV X19, X0
	0x01DB8568 TBNZ X8, 0x0, 0x1DB8580
	0x01DB856C ADRP X0, 0x233D000
	0x01DB8570 LDR X0, [X0 + 0x9A0]
	0x01DB8574 BL 0x1C16CF4
	0x01DB8578 MOVZ W8, 0x1
	0x01DB857C STRB W8, [X20 + 0xB20]
	0x01DB8580 STR X31, [X31 + 0x18]
	0x01DB8584 STP X31, X31, [X31]
	0x01DB8588 LDR W20, [X21 + 0x24]
	0x01DB858C LDP S8, S9, [X21 + 0x28]
	0x01DB8590 LDP S10, S11, [X21 + 0x30]
	0x01DB8594 LDP S12, S13, [X21 + 0x38]
	0x01DB8598 LDR V14, [X21 + 0x40]
	0x01DB859C ADD X0, X21, 0x44
	0x01DB85A0 ADD X1, X31, 0x18
	0x01DB85A4 MOV X2, X31
	0x01DB85A8 ADD X22, X21, 0x1C
	0x01DB85AC BL 0x1E8DD00
	0x01DB85B0 ADD W8, W0, 0x2B
	0x01DB85B4 AND W21, W8, 0xFFFFFFFC
	0x01DB85B8 ADD X0, X22, W21, SXTW
	0x01DB85BC ADD X1, X31, 0x8
	0x01DB85C0 MOV X2, X31
	0x01DB85C4 BL 0x1E8DD00
	0x01DB85C8 ADD W8, W0, 0x3
	0x01DB85CC AND W8, W8, 0xFFFFFFFC
	0x01DB85D0 ADD W8, W8, W21
	0x01DB85D4 LDR W21, [X22, W8, SXTW]
	0x01DB85D8 ADD W23, W8, 0x4
	0x01DB85DC ADD X0, X22, W23, SXTW
	0x01DB85E0 ADD X1, X31, 0x0
	0x01DB85E4 MOV X2, X31
	0x01DB85E8 BL 0x1E8DD00
	0x01DB85EC CBZ X19, 0x1DB869C
	0x01DB85F0 ADRP X9, 0x233D000
	0x01DB85F4 LDR X9, [X9 + 0x9A0]
	0x01DB85F8 ADD W8, W0, 0x3
	0x01DB85FC AND W8, W8, 0xFFFFFFFC
	0x01DB8600 MOVZ W10, 0x1
	0x01DB8604 ADD W8, W23, W8
	0x01DB8608 LDR X6, [X22, W8, SXTW]
	0x01DB860C STRB W10, [X19 + 0x58]
	0x01DB8610 LDR X8, [X19]
	0x01DB8614 LDR X1, [X9]
	0x01DB8618 LDRB W10, [X8 + 0x130]
	0x01DB861C LDRB W9, [X1 + 0x130]
	0x01DB8620 CMP W10, W9
	0x01DB8624 B.CC 0x1DB8694
	0x01DB8628 LDR X8, [X8 + 0xC8]
	0x01DB862C ADD X8, X8, X9, 0x3, LSL
	0x01DB8630 LDUR X8, [X8 - 0x8]
	0x01DB8634 CMP X8, X1
	0x01DB8638 B.NE 0x1DB8694
	0x01DB863C LDR X2, [X31 + 0x18]
	0x01DB8640 LDP X5, X3, [X31]

ISIL:
	001 Move [X31-144], D14
	002 Move [X31+8], D13
	003 Move [X31+16], D12
	004 Move [X31+24], D11
	005 Move [X31+32], D10
	006 Move [X31+40], D9
	007 Move [X31+48], D8
	008 Move [X31+56], X30
	009 Move [X31+64], X28
	010 Move [X31+72], X27
	011 Move [X31+80], X26
	012 Move [X31+88], X25
	013 Move [X31+96], X24
	014 Move [X31+104], X23
	015 Move [X31+112], X22
	016 Move [X31+120], X21
	017 Move [X31+128], X20
	018 Move [X31+136], X19
	019 Move X26, 0x2621000
	020 Move W8, [X26+2838]
	021 Move X24, X6
	022 Move X19, X5
	023 Move W20, W4
	024 Move X21, X3
	025 Move X22, X2
	026 Move V8, V6
	027 Move V9, V5
	028 Move V10, V4
	029 Move V11, V3
	030 Move V12, V2
	031 Move V13, V1
	032 Move V14, V0
	033 Move W23, W1
	034 Move X25, X0
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {50}
	039 Move X0, 0x233F000
	040 Move X0, [X0+2680]
	041 Call 0x1C17CF4
	042 Move X0, 0x233E000
	043 Move X0, [X0+1992]
	044 Call 0x1C17CF4
	045 Move X0, 0x2340000
	046 Move X0, [X0+3128]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X26+2838], W8
	050 Move W8, [X25+88]
	051 Compare W8, 0
	052 JumpIfEqual {129}
	053 Move [X25+88], W31
	054 Move X0, [X25+64]
	055 Compare X0, 0
	056 JumpIfEqual {352}
	057 Move X1, X31
	058 Call NetworkObject.get_HasInputAuthority, X0
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {145}
	063 Move X0, X25
	064 Move X1, X24
	065 Call NetPlayer.ShouldApplyHit, X0, X1
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {145}
	070 Move X24, 0x233E000
	071 Move X24, [X24+1992]
	072 Move X0, [X24]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X25, 0x2621000
	078 Move W8, [X25+2141]
	079 Compare W8, 0
	080 JumpIfNotEqual {86}
	081 Move X0, 0x233E000
	082 Move X0, [X0+1992]
	083 Call 0x1C17CF4
	084 Move W8, 1
	085 Move [X25+2141], W8
	086 Move X0, [X24]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {92}
	090 Call 0x1C17DFC
	091 Move X0, [X24]
	092 Move X8, [X0+184]
	093 Move X0, [X8]
	094 Compare X0, 0
	095 JumpIfEqual {352}
	096 Move W1, W23
	097 Move V1, V13
	098 Move V2, V12
	099 Move V3, V11
	100 Move V4, V10
	101 Move V5, V9
	102 Move V6, V8
	103 Move X2, X22
	104 Move X3, X21
	105 Move W4, W20
	106 Move X5, X19
	107 Move X20, [X31+128]
	108 Move X19, [X31+136]
	109 Move X22, [X31+112]
	110 Move X21, [X31+120]
	111 Move X24, [X31+96]
	112 Move X23, [X31+104]
	113 Move X26, [X31+80]
	114 Move X25, [X31+88]
	115 Move X28, [X31+64]
	116 Move X27, [X31+72]
	117 Move X30, [X31+56]
	118 Move D9, [X31+40]
	119 Move D8, [X31+48]
	120 Move D11, [X31+24]
	121 Move D10, [X31+32]
	122 Move D13, [X31+8]
	123 Move D12, [X31+16]
	124 Move V0, V14
	125 Move X6, X31
	126 Move V14, [X31+144]
	127 Call PlayerController.PlayerHit, X0, X1, X2, X3, X4, X5, X6, X7
	128 Return 
	129 Move X27, 0x233F000
	130 Move X27, [X27+2680]
	131 Move X0, [X27]
	132 Move W8, [X0+224]
	133 Compare W8, 0
	134 JumpIfNotEqual {136}
	135 Call 0x1C17DFC
	136 Move X0, X25
	137 Move X1, X31
	138 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	139 Move X0, [X25+56]
	140 Compare X0, 0
	141 JumpIfEqual {352}
	142 Move X1, X31
	143 Call NetworkRunner.get_Stage, X0
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X20, [X31+128]
	146 Move X19, [X31+136]
	147 Move X22, [X31+112]
	148 Move X21, [X31+120]
	149 Move X24, [X31+96]
	150 Move X23, [X31+104]
	151 Move X26, [X31+80]
	152 Move X25, [X31+88]
	153 Move X28, [X31+64]
	154 Move X27, [X31+72]
	155 Move X30, [X31+56]
	156 Move D9, [X31+40]
	157 Move D8, [X31+48]
	158 Move D11, [X31+24]
	159 Move D10, [X31+32]
	160 Move D13, [X31+8]
	161 Move D12, [X31+16]
	162 Move V14, [X31+144]
	163 Return 
	164 Move X0, [X25+64]
	165 Compare X0, 0
	166 JumpIfEqual {352}
	167 Move X1, X31
	168 Call NetworkObject.GetLocalAuthorityMask, X0
	169 And W31, W0, 7
	170 Move TEMP, X0
	171 And TEMP, TEMP, 2
	172 Compare TEMP, 2
	173 JumpIfEqual {54}
	174 Move X0, X22
	175 Move X1, X31
	176 Call ReadWriteUtilsForWeaver.GetByteCountUtf8NoHash, X0
	177 Move W26, W0
	178 Move X0, X21
	179 Move X1, X31
	180 Call ReadWriteUtilsForWeaver.GetByteCountUtf8NoHash, X0
	181 Add W8, W0, 3
	182 Move X0, X19
	183 Move X1, X31
	184 And W28, W8, 0xFFFFFFFC
	185 Call ReadWriteUtilsForWeaver.GetByteCountUtf8NoHash, X0
	186 Add W9, W26, 55
	187 Add W8, W0, 3
	188 And W9, W9, 0xFFFFFFFC
	189 And W8, W8, 0xFFFFFFFC
	190 Add W9, W9, W28
	191 Add W26, W9, W8
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move X8, [X25+56]
	194 Compare X8, 0
	195 JumpIfEqual {352}
	196 Move X0, [X8+80]
	197 Compare X0, 0
	198 JumpIfEqual {352}
	199 Move X1, X31
	200 Call Simulation.HasAnyActiveConnections, X0
	201 Move TEMP, X0
	202 And TEMP, TEMP, 1
	203 Compare TEMP, 1
	204 JumpIfNotEqual {145}
	205 Move X8, [X25+56]
	206 Compare X8, 0
	207 JumpIfEqual {352}
	208 Move X0, [X8+80]
	209 Move W1, W26
	210 Move X2, X31
	211 Call SimulationMessage.Allocate, X0, X1
	212 Move X8, [X25+64]
	213 Compare X8, 0
	214 JumpIfEqual {352}
	215 Move X8, [X8+32]
	216 Move X26, X0
	217 Add X27, X0, 28
	218 Compare X8, 0
	219 JumpIfEqual {283}
	220 Move W0, [X8]
	221 Move X0, [X27]
	222 Move X19, [X25+64]
	223 Move W8, [X0+224]
	224 Compare W8, 0
	225 JumpIfNotEqual {227}
	226 Call 0x1C17DFC
	227 Move X8, 0x2340000
	228 Move X8, [X8+3128]
	229 Move X1, X19
	230 Move X20, [X31+128]
	231 Move X19, [X31+136]
	232 Move X22, [X31+112]
	233 Move X21, [X31+120]
	234 Move X0, [X8]
	235 Move X24, [X31+96]
	236 Move X23, [X31+104]
	237 Move X26, [X31+80]
	238 Move X25, [X31+88]
	239 Move X28, [X31+64]
	240 Move X27, [X31+72]
	241 Move X30, [X31+56]
	242 Move D9, [X31+40]
	243 Move D8, [X31+48]
	244 Move D11, [X31+24]
	245 Move D10, [X31+32]
	246 Move D13, [X31+8]
	247 Move D12, [X31+16]
	248 Move W2, 7
	249 Move X3, X31
	250 Move V14, [X31+144]
	251 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	252 Return 
	253 Move X0, [X27]
	254 Move W8, [X0+224]
	255 Compare W8, 0
	256 JumpIfNotEqual {258}
	257 Call 0x1C17DFC
	258 Move X8, 0x2340000
	259 Move X8, [X8+3128]
	260 Move W1, W26
	261 Move X20, [X31+128]
	262 Move X19, [X31+136]
	263 Move X22, [X31+112]
	264 Move X21, [X31+120]
	265 Move X0, [X8]
	266 Move X24, [X31+96]
	267 Move X23, [X31+104]
	268 Move X26, [X31+80]
	269 Move X25, [X31+88]
	270 Move X28, [X31+64]
	271 Move X27, [X31+72]
	272 Move X30, [X31+56]
	273 Move D9, [X31+40]
	274 Move D8, [X31+48]
	275 Move D11, [X31+24]
	276 Move D10, [X31+32]
	277 Move D13, [X31+8]
	278 Move D12, [X31+16]
	279 Move X2, X31
	280 Move V14, [X31+144]
	281 Call NetworkBehaviourUtils.NotifyRpcPayloadSizeExceeded, X0, X1
	282 Return 
	283 Move X0, X31
	284 Move W1, [X25+104]
	285 Move W2, 5
	286 Move X3, X31
	287 Call RpcHeader.Create, X0, X1, X2
	288 Move [X26+28], X0
	289 Add X0, X26, 68
	290 Move X1, X22
	291 Move X2, X31
	292 Move [X26+36], W23
	293 Move [X26+40], S14
	294 Move [X26+48], S13
	295 Move [X26+48], S12
	296 Move [X26+56], S11
	297 Move [X26+56], S10
	298 Move [X26+64], S9
	299 Move [X26+64], S8
	300 Call ReadWriteUtilsForWeaver.WriteStringUtf8NoHash, X0, X1
	301 Add W8, W0, 43
	302 And W22, W8, 0xFFFFFFFC
	303 Add X0, X27, W22
	304 Move X1, X21
	305 Move X2, X31
	306 Call ReadWriteUtilsForWeaver.WriteStringUtf8NoHash, X0, X1
	307 Add W8, W0, 3
	308 And W8, W8, 0xFFFFFFFC
	309 Add W8, W8, W22
	310 Move [X27], W20
	311 Add W20, W8, 4
	312 Add X0, X27, W20
	313 Move X1, X19
	314 Move X2, X31
	315 Call ReadWriteUtilsForWeaver.WriteStringUtf8NoHash, X0, X1
	316 Add W8, W0, 3
	317 And W8, W8, 0xFFFFFFFC
	318 Add W8, W20, W8
	319 Move [X27], X24
	320 Compare X26, 0
	321 JumpIfEqual {352}
	322 Move W8, W8
	323 ShiftRight W8, 29
	324 And W8, W8, 0xFFFFFFF
	325 Add W8, W8, 64
	326 Move [X26+12], W8
	327 Move X0, [X25+56]
	328 Compare X0, 0
	329 JumpIfEqual {352}
	330 Move X1, X26
	331 Move X20, [X31+128]
	332 Move X19, [X31+136]
	333 Move X22, [X31+112]
	334 Move X21, [X31+120]
	335 Move X24, [X31+96]
	336 Move X23, [X31+104]
	337 Move X26, [X31+80]
	338 Move X25, [X31+88]
	339 Move X28, [X31+64]
	340 Move X27, [X31+72]
	341 Move X30, [X31+56]
	342 Move D9, [X31+40]
	343 Move D8, [X31+48]
	344 Move D11, [X31+24]
	345 Move D10, [X31+32]
	346 Move D13, [X31+8]
	347 Move D12, [X31+16]
	348 Move X2, X31
	349 Move V14, [X31+144]
	350 Call NetworkRunner.SendRpc, X0, X1
	351 Return 
	352 Call 0x1C17F20

Method: System.Void RPC_RequestAvatarRefresh(System.String userID)

Disassembly:
	0x01DB4C68 CBZ X0, 0x1DB4D4C
	0x01DB4C6C MOV X1, X31
	0x01DB4C70 BL 0x1E94078
	0x01DB4C74 TBNZ X0, 0x1, 0x1DB4CB0
	0x01DB4C78 LDR X0, [X21]
	0x01DB4C7C LDR X19, [X19 + 0x40]
	0x01DB4C80 LDR W8, [X0 + 0xE0]
	0x01DB4C84 CBNZ W8, 0x1DB4C8C
	0x01DB4C88 BL 0x1C16DFC
	0x01DB4C8C ADRP X8, 0x2343000
	0x01DB4C90 LDR X8, [X8 + 0xBD8]
	0x01DB4C94 MOV X1, X19
	0x01DB4C98 LDP X20, X19, [X31 + 0x10]
	0x01DB4C9C MOVZ W2, 0x2
	0x01DB4CA0 LDR X0, [X8]
	0x01DB4CA4 MOV X3, X31
	0x01DB4CA8 LDP X30, X21, [X31], #0x20
	0x01DB4CAC B 0x1E77B00
	0x01DB4CB0 TBNZ X0, 0x0, 0x1DB4C08
	0x01DB4CB4 LDR X8, [X19 + 0x38]
	0x01DB4CB8 CBZ X8, 0x1DB4D4C
	0x01DB4CBC LDR X0, [X8 + 0x50]
	0x01DB4CC0 CBZ X0, 0x1DB4D4C
	0x01DB4CC4 MOV X1, X31
	0x01DB4CC8 BL 0x1EC4D00
	0x01DB4CCC TBZ X0, 0x0, 0x1DB4C58
	0x01DB4CD0 LDR X8, [X19 + 0x38]
	0x01DB4CD4 CBZ X8, 0x1DB4D4C
	0x01DB4CD8 LDR X0, [X8 + 0x50]
	0x01DB4CDC MOVZ W1, 0xC
	0x01DB4CE0 MOV X2, X31
	0x01DB4CE4 BL 0x1ED9318
	0x01DB4CE8 LDR X8, [X19 + 0x40]
	0x01DB4CEC CBZ X8, 0x1DB4D4C
	0x01DB4CF0 LDR X8, [X8 + 0x20]
	0x01DB4CF4 MOV X21, X0
	0x01DB4CF8 CBZ X8, 0x1DB4D04
	0x01DB4CFC LDR W0, [X8]
	0x01DB4D00 B 0x1DB4D08
	0x01DB4D04 MOV X0, X31
	0x01DB4D08 LDR W1, [X19 + 0x68]
	0x01DB4D0C MOVZ W2, 0x1
	0x01DB4D10 MOV X3, X31
	0x01DB4D14 BL 0x1E9C23C
	0x01DB4D18 AND W8, W20, 0x1
	0x01DB4D1C STUR X0, [X21 + 0x1C]
	0x01DB4D20 STR W8, [X21 + 0x24]
	0x01DB4D24 CBZ X21, 0x1DB4D4C
	0x01DB4D28 MOVZ W8, 0x60
	0x01DB4D2C STR W8, [X21 + 0xC]
	0x01DB4D30 LDR X0, [X19 + 0x38]
	0x01DB4D34 CBZ X0, 0x1DB4D4C
	0x01DB4D38 LDP X20, X19, [X31 + 0x10]
	0x01DB4D3C MOV X1, X21
	0x01DB4D40 MOV X2, X31
	0x01DB4D44 LDP X30, X21, [X31], #0x20
	0x01DB4D48 B 0x1EA1E24
	0x01DB4D4C BL 0x1C16F20
	0x01DB4D50 STR X30, [X31 - 0x20]!
	0x01DB4D54 STP X20, X19, [X31 + 0x10]
	0x01DB4D58 LDR X19, [X0 + 0xE8]
	0x01DB4D5C CBZ X19, 0x1DB4DB0
	0x01DB4D60 LDR W8, [X19 + 0x18]
	0x01DB4D64 CMP W8, 0x1
	0x01DB4D68 B.LT 0x1DB4DA0
	0x01DB4D6C MOV W20, W31
	0x01DB4D70 CMP W20, W8
	0x01DB4D74 B.CS 0x1DB4DAC
	0x01DB4D78 ADD X8, X19, W20, 0x3, SXTW
	0x01DB4D7C LDR X0, [X8 + 0x20]
	0x01DB4D80 CBZ X0, 0x1DB4DB0
	0x01DB4D84 MOVZ W1, 0x1
	0x01DB4D88 MOV X2, X31
	0x01DB4D8C BL 0x1D89EE4
	0x01DB4D90 LDR W8, [X19 + 0x18]
	0x01DB4D94 ADD W20, W20, 0x1
	0x01DB4D98 CMP W20, W8
	0x01DB4D9C B.LT 0x1DB4D70
	0x01DB4DA0 LDP X20, X19, [X31 + 0x10]
	0x01DB4DA4 LDR X30, [X31], #0x20
	0x01DB4DA8 RET
	0x01DB4DAC BL 0x1C16F28
	0x01DB4DB0 BL 0x1C16F20
	0x01DB4DB4 B 0x1DB1A5C
	0x01DB4DB8 STP X30, X21, [X31 - 0x20]!
	0x01DB4DBC STP X20, X19, [X31 + 0x10]
	0x01DB4DC0 ADRP X21, 0x2624000
	0x01DB4DC4 ADRP X20, 0x233F000
	0x01DB4DC8 LDRB W8, [X21 + 0xB08]
	0x01DB4DCC LDR X20, [X20 + 0x648]
	0x01DB4DD0 MOV X19, X0
	0x01DB4DD4 TBNZ X8, 0x0, 0x1DB4E04
	0x01DB4DD8 ADRP X0, 0x233F000
	0x01DB4DDC LDR X0, [X0 + 0x648]
	0x01DB4DE0 BL 0x1C16CF4
	0x01DB4DE4 ADRP X0, 0x2340000
	0x01DB4DE8 LDR X0, [X0 + 0x1F8]
	0x01DB4DEC BL 0x1C16CF4
	0x01DB4DF0 ADRP X0, 0x2343000
	0x01DB4DF4 LDR X0, [X0 + 0xBE0]
	0x01DB4DF8 BL 0x1C16CF4
	0x01DB4DFC MOVZ W8, 0x1
	0x01DB4E00 STRB W8, [X21 + 0xB08]
	0x01DB4E04 LDR X0, [X20]
	0x01DB4E08 LDR W8, [X0 + 0xE0]
	0x01DB4E0C CBNZ W8, 0x1DB4E14
	0x01DB4E10 BL 0x1C16DFC
	0x01DB4E14 ADRP X21, 0x2624000
	0x01DB4E18 LDRB W8, [X21 + 0x787]
	0x01DB4E1C CBNZ W8, 0x1DB4E34
	0x01DB4E20 ADRP X0, 0x233F000
	0x01DB4E24 LDR X0, [X0 + 0x648]
	0x01DB4E28 BL 0x1C16CF4
	0x01DB4E2C MOVZ W8, 0x1
	0x01DB4E30 STRB W8, [X21 + 0x787]
	0x01DB4E34 LDR X0, [X20]
	0x01DB4E38 LDR W8, [X0 + 0xE0]
	0x01DB4E3C CBNZ W8, 0x1DB4E48
	0x01DB4E40 BL 0x1C16DFC
	0x01DB4E44 LDR X0, [X20]
	0x01DB4E48 LDR X8, [X0 + 0xB8]
	0x01DB4E4C LDR X8, [X8]
	0x01DB4E50 CBZ X8, 0x1DB4EB8
	0x01DB4E54 LDR X8, [X8 + 0xB8]
	0x01DB4E58 CBZ X8, 0x1DB4EB8
	0x01DB4E5C ADRP X9, 0x2340000
	0x01DB4E60 LDR X9, [X9 + 0x1F8]
	0x01DB4E64 LDR X0, [X8 + 0x60]
	0x01DB4E68 LDR X1, [X9]
	0x01DB4E6C BL 0x265C594
	0x01DB4E70 MOV X1, X0
	0x01DB4E74 MOV X0, X19
	0x01DB4E78 BL 0x1DB19EC
	0x01DB4E7C MOV X0, X19
	0x01DB4E80 BL 0x1DB1974
	0x01DB4E84 MOV X1, X31
	0x01DB4E88 BL 0x32277A8
	0x01DB4E8C TBZ X0, 0x0, 0x1DB4EAC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x2625000
	008 Move W8, [X21+2839]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x2343000
	016 Move X0, [X0+2680]
	017 Call 0x1C17CF4
	018 Move X0, 0x2344000
	019 Move X0, [X0+2960]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+2839], W8
	023 Move W8, [X20+88]
	024 Compare W8, 0
	025 JumpIfEqual {53}
	026 Move [X20+88], W31
	027 Move X0, [X20+64]
	028 Compare X0, 0
	029 JumpIfEqual {182}
	030 Move X1, X31
	031 Call NetworkObject.get_HasInputAuthority, X0
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {69}
	036 Move X0, X19
	037 Move X1, X31
	038 Call String.IsNullOrEmpty, X0
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {69}
	043 Move X0, X19
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X1, X31
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Call UserAvatarsCacheManager.RefetchUserAvatar, X0
	052 Return 
	053 Move X23, 0x2343000
	054 Move X23, [X23+2680]
	055 Move X0, [X23]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X20
	061 Move X1, X31
	062 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	063 Move X0, [X20+56]
	064 Compare X0, 0
	065 JumpIfEqual {182}
	066 Move X1, X31
	067 Call NetworkRunner.get_Stage, X0
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X30, [X31+48]
	074 Move X23, [X31+56]
	075 Return 
	076 Move X0, [X20+64]
	077 Compare X0, 0
	078 JumpIfEqual {182}
	079 Move X1, X31
	080 Call NetworkObject.GetLocalAuthorityMask, X0
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfEqual {105}
	085 Move X0, [X23]
	086 Move X19, [X20+64]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Move X8, 0x2344000
	092 Move X8, [X8+2960]
	093 Move X1, X19
	094 Move X20, [X31+32]
	095 Move X19, [X31+40]
	096 Move X22, [X31+16]
	097 Move X21, [X31+24]
	098 Move X0, [X8]
	099 Move W2, 1
	100 Move X3, X31
	101 Move X30, [X31+48]
	102 Move X23, [X31+56]
	103 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	104 Return 
	105 Move W21, W0
	106 Move X0, X19
	107 Move X1, X31
	108 Call ReadWriteUtilsForWeaver.GetByteCountUtf8NoHash, X0
	109 Add W8, W0, 11
	110 And W22, W8, 0xFFFFFFFC
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X8, [X20+56]
	113 Compare X8, 0
	114 JumpIfEqual {182}
	115 Move X0, [X8+80]
	116 Compare X0, 0
	117 JumpIfEqual {182}
	118 Move X1, X31
	119 Call Simulation.HasAnyActiveConnections, X0
	120 Move TEMP, X0
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfNotEqual {181}
	124 Move X8, [X20+56]
	125 Compare X8, 0
	126 JumpIfEqual {182}
	127 Move X0, [X8+80]
	128 Move W1, W22
	129 Move X2, X31
	130 Call SimulationMessage.Allocate, X0, X1
	131 Move X8, [X20+64]
	132 Compare X8, 0
	133 JumpIfEqual {182}
	134 Move X8, [X8+32]
	135 Move X22, X0
	136 Compare X8, 0
	137 JumpIfEqual {157}
	138 Move W0, [X8]
	139 Move X0, [X23]
	140 Move W8, [X0+224]
	141 Compare W8, 0
	142 JumpIfNotEqual {144}
	143 Call 0x1C17DFC
	144 Move X8, 0x2344000
	145 Move X8, [X8+2960]
	146 Move W1, W22
	147 Move X20, [X31+32]
	148 Move X19, [X31+40]
	149 Move X22, [X31+16]
	150 Move X21, [X31+24]
	151 Move X0, [X8]
	152 Move X2, X31
	153 Move X30, [X31+48]
	154 Move X23, [X31+56]
	155 Call NetworkBehaviourUtils.NotifyRpcPayloadSizeExceeded, X0, X1
	156 Return 
	157 Move X0, X31
	158 Move W1, [X20+104]
	159 Move W2, 6
	160 Move X3, X31
	161 Call RpcHeader.Create, X0, X1, X2
	162 Move [X22+28], X0
	163 Add X0, X22, 36
	164 Move X1, X19
	165 Move X2, X31
	166 Call ReadWriteUtilsForWeaver.WriteStringUtf8NoHash, X0, X1
	167 Compare X22, 0
	168 JumpIfEqual {182}
	169 Move W8, W0
	170 ShiftRight W8, 29
	171 And W8, W8, 0xFFFFFFF
	172 Add W8, W8, 88
	173 And W8, W8, 0xFFFFFFE0
	174 Move [X22+12], W8
	175 Move X0, [X20+56]
	176 Compare X0, 0
	177 JumpIfEqual {182}
	178 Move X1, X22
	179 Move X2, X31
	180 Call NetworkRunner.SendRpc, X0, X1
	181 And W31, W21, 7
	182 Call 0x1C17F20

Method: System.Void PlayerHit(System.Int32 damage, UnityEngine.Transform hitTransform, AnimalCompany.RandomSFX hitSound, AnimalCompany.RandomSFX killSound, System.String hitName, Fusion.NetworkBehaviourId source)

Disassembly:
	0x01DB8644 MOV X0, X19
	0x01DB8648 MOV W1, W20
	0x01DB864C MOV V0.16B, V8.16B
	0x01DB8650 MOV V1.16B, V9.16B
	0x01DB8654 MOV V2.16B, V10.16B
	0x01DB8658 MOV V3.16B, V11.16B
	0x01DB865C MOV V4.16B, V12.16B
	0x01DB8660 MOV V5.16B, V13.16B
	0x01DB8664 MOV V6.16B, V14.16B
	0x01DB8668 MOV W4, W21
	0x01DB866C BL 0x1DB721C
	0x01DB8670 LDP X20, X19, [X31 + 0x70]
	0x01DB8674 LDP X22, X21, [X31 + 0x60]
	0x01DB8678 LDP X30, X23, [X31 + 0x50]
	0x01DB867C LDP D9, D8, [X31 + 0x40]
	0x01DB8680 LDP D11, D10, [X31 + 0x30]
	0x01DB8684 LDP D13, D12, [X31 + 0x20]
	0x01DB8688 LDR V14, [X31 + 0x10]
	0x01DB868C ADD X31, X31, 0x80
	0x01DB8690 RET
	0x01DB8694 MOV X0, X19
	0x01DB8698 BL 0x1C171E0
	0x01DB869C BL 0x1C16F20
	0x01DB86A0 SUB X31, X31, 0x30
	0x01DB86A4 STP X30, X21, [X31 + 0x10]
	0x01DB86A8 STP X20, X19, [X31 + 0x20]
	0x01DB86AC ADRP X21, 0x2620000
	0x01DB86B0 LDRB W8, [X21 + 0xB21]
	0x01DB86B4 MOV X20, X1
	0x01DB86B8 MOV X19, X0
	0x01DB86BC TBNZ X8, 0x0, 0x1DB86D4
	0x01DB86C0 ADRP X0, 0x233D000
	0x01DB86C4 LDR X0, [X0 + 0x9A0]
	0x01DB86C8 BL 0x1C16CF4
	0x01DB86CC MOVZ W8, 0x1
	0x01DB86D0 STRB W8, [X21 + 0xB21]
	0x01DB86D4 ADD X0, X20, 0x24
	0x01DB86D8 ADD X1, X31, 0x8
	0x01DB86DC MOV X2, X31
	0x01DB86E0 STR X31, [X31 + 0x8]
	0x01DB86E4 BL 0x1E8DD00
	0x01DB86E8 CBZ X19, 0x1DB874C
	0x01DB86EC ADRP X9, 0x233D000
	0x01DB86F0 LDR X9, [X9 + 0x9A0]
	0x01DB86F4 MOVZ W8, 0x1
	0x01DB86F8 STRB W8, [X19 + 0x58]
	0x01DB86FC LDR X8, [X19]
	0x01DB8700 LDR X1, [X9]
	0x01DB8704 LDRB W10, [X8 + 0x130]
	0x01DB8708 LDRB W9, [X1 + 0x130]
	0x01DB870C CMP W10, W9
	0x01DB8710 B.CC 0x1DB8744
	0x01DB8714 LDR X8, [X8 + 0xC8]
	0x01DB8718 ADD X8, X8, X9, 0x3, LSL
	0x01DB871C LDUR X8, [X8 - 0x8]
	0x01DB8720 CMP X8, X1
	0x01DB8724 B.NE 0x1DB8744
	0x01DB8728 LDR X1, [X31 + 0x8]
	0x01DB872C MOV X0, X19
	0x01DB8730 BL 0x1DB3C68
	0x01DB8734 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-128], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X30
	009 Move [X31+72], X25
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Compare X2, 0
	017 JumpIfEqual {79}
	018 Move W21, W1
	019 Move X22, X0
	020 Move X0, X2
	021 Move X1, X31
	022 Move X19, X6
	023 Move X20, X5
	024 Move X23, X4
	025 Move X24, X3
	026 Move X25, X2
	027 Call Transform.get_position, X0
	028 Move X0, X25
	029 Move X1, X31
	030 Move V8, V0
	031 Move V9, V1
	032 Move V10, V2
	033 Call Transform.get_rotation, X0
	034 Compare X24, 0
	035 JumpIfEqual {79}
	036 Move X0, X24
	037 Move X1, X31
	038 Move V11, V0
	039 Move V12, V1
	040 Move V13, V2
	041 Move V14, V3
	042 Call Object.get_name, X0
	043 Compare X23, 0
	044 JumpIfEqual {79}
	045 Move X24, X0
	046 Move X0, X23
	047 Move X1, X31
	048 Call Object.get_name, X0
	049 Move X3, X0
	050 Move X0, X22
	051 Move W1, W21
	052 Move V0, V8
	053 Move V1, V9
	054 Move V2, V10
	055 Move V3, V11
	056 Move V4, V12
	057 Move V5, V13
	058 Move X2, X24
	059 Move X4, X20
	060 Move X5, X19
	061 Move X20, [X31+112]
	062 Move X19, [X31+120]
	063 Move X22, [X31+96]
	064 Move X21, [X31+104]
	065 Move X24, [X31+80]
	066 Move X23, [X31+88]
	067 Move X30, [X31+64]
	068 Move X25, [X31+72]
	069 Move D9, [X31+48]
	070 Move D8, [X31+56]
	071 Move D11, [X31+32]
	072 Move D10, [X31+40]
	073 Move D13, [X31+16]
	074 Move D12, [X31+24]
	075 Move V6, V14
	076 Move V14, [X31+128]
	077 Call NetPlayer.RPC_PlayerHit, X0, X1, X2, X3, X4, X5, X6, X7
	078 Return 
	079 Call 0x1C17F20

Method: System.Void PlayerHit(System.Int32 damage, UnityEngine.Transform hitTransform, AnimalCompany.RandomSFX hitSound, AnimalCompany.RandomSFX killSound, UnityEngine.Vector3 force, System.String hitName, Fusion.NetworkBehaviourId source)

Disassembly:
	0x01DB8738 LDP X30, X21, [X31 + 0x10]
	0x01DB873C ADD X31, X31, 0x30
	0x01DB8740 RET
	0x01DB8744 MOV X0, X19
	0x01DB8748 BL 0x1C171E0
	0x01DB874C BL 0x1C16F20
	0x01DB8750 STR D12, [X31 - 0x50]!
	0x01DB8754 STP D11, D10, [X31 + 0x10]
	0x01DB8758 STP D9, D8, [X31 + 0x20]
	0x01DB875C STP X30, X21, [X31 + 0x30]
	0x01DB8760 STP X20, X19, [X31 + 0x40]
	0x01DB8764 ADRP X21, 0x2620000
	0x01DB8768 LDRB W8, [X21 + 0xB22]
	0x01DB876C MOV X20, X1
	0x01DB8770 MOV X19, X0
	0x01DB8774 TBNZ X8, 0x0, 0x1DB878C
	0x01DB8778 ADRP X0, 0x233D000
	0x01DB877C LDR X0, [X0 + 0x9A0]
	0x01DB8780 BL 0x1C16CF4
	0x01DB8784 MOVZ W8, 0x1
	0x01DB8788 STRB W8, [X21 + 0xB22]
	0x01DB878C STR X31, [X31 + 0x8]
	0x01DB8790 LDP S8, S9, [X20 + 0x24]
	0x01DB8794 LDP S10, S11, [X20 + 0x2C]
	0x01DB8798 LDR V12, [X20 + 0x34]
	0x01DB879C ADD X0, X20, 0x38
	0x01DB87A0 ADD X1, X31, 0x8
	0x01DB87A4 MOV X2, X31
	0x01DB87A8 BL 0x1E8DD00
	0x01DB87AC CBZ X19, 0x1DB8848
	0x01DB87B0 ADRP X9, 0x233D000
	0x01DB87B4 ADD W10, W0, 0x1F
	0x01DB87B8 LDR X9, [X9 + 0x9A0]
	0x01DB87BC SXTW X10, W10
	0x01DB87C0 ADD X8, X20, 0x1C
	0x01DB87C4 AND X10, X10, 0xFFFFFFFF
	0x01DB87C8 MOVZ W11, 0x1
	0x01DB87CC LDR X2, [X8, X10, LSL]
	0x01DB87D0 ADD W10, W10, 0x8
	0x01DB87D4 LDR W3, [X8, W10, SXTW]
	0x01DB87D8 STRB W11, [X19 + 0x58]
	0x01DB87DC LDR X8, [X19]
	0x01DB87E0 LDR X1, [X9]
	0x01DB87E4 LDRB W10, [X8 + 0x130]
	0x01DB87E8 LDRB W9, [X1 + 0x130]
	0x01DB87EC CMP W10, W9
	0x01DB87F0 B.CC 0x1DB8840
	0x01DB87F4 LDR X8, [X8 + 0xC8]
	0x01DB87F8 ADD X8, X8, X9, 0x3, LSL
	0x01DB87FC LDUR X8, [X8 - 0x8]
	0x01DB8800 CMP X8, X1
	0x01DB8804 B.NE 0x1DB8840
	0x01DB8808 LDR X1, [X31 + 0x8]
	0x01DB880C MOV X0, X19
	0x01DB8810 MOV V0.16B, V8.16B
	0x01DB8814 MOV V1.16B, V9.16B
	0x01DB8818 MOV V2.16B, V10.16B
	0x01DB881C MOV V3.16B, V11.16B
	0x01DB8820 MOV V4.16B, V12.16B
	0x01DB8824 BL 0x1DB7B0C
	0x01DB8828 LDP X20, X19, [X31 + 0x40]
	0x01DB882C LDP X30, X21, [X31 + 0x30]
	0x01DB8830 LDP D9, D8, [X31 + 0x20]
	0x01DB8834 LDP D11, D10, [X31 + 0x10]
	0x01DB8838 LDR V12, [X31], #0x50
	0x01DB883C RET
	0x01DB8840 MOV X0, X19
	0x01DB8844 BL 0x1C171E0
	0x01DB8848 BL 0x1C16F20
	0x01DB884C MOV X1, X31

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+32], D15
	003 Move [X31+40], D14
	004 Move [X31+48], D13
	005 Move [X31+56], D12
	006 Move [X31+64], D11
	007 Move [X31+72], D10
	008 Move [X31+80], D9
	009 Move [X31+88], D8
	010 Move [X31+96], X30
	011 Move [X31+104], X25
	012 Move [X31+112], X24
	013 Move [X31+120], X23
	014 Move [X31+128], X22
	015 Move [X31+136], X21
	016 Move [X31+144], X20
	017 Move [X31+152], X19
	018 Move [X31+24], S1
	019 Move [X31+32], S0
	020 Compare X2, 0
	021 JumpIfEqual {91}
	022 Move W21, W1
	023 Move X22, X0
	024 Move X0, X2
	025 Move X1, X31
	026 Move X19, X6
	027 Move X20, X5
	028 Move V10, V2
	029 Move X23, X4
	030 Move X24, X3
	031 Move X25, X2
	032 Call Transform.get_position, X0
	033 Move X0, X25
	034 Move X1, X31
	035 Move V11, V0
	036 Move V12, V1
	037 Move V13, V2
	038 Call Transform.get_rotation, X0
	039 Compare X24, 0
	040 JumpIfEqual {91}
	041 Move X0, X24
	042 Move X1, X31
	043 Move V14, V0
	044 Move V15, V1
	045 Move V8, V2
	046 Move V9, V3
	047 Call Object.get_name, X0
	048 Compare X23, 0
	049 JumpIfEqual {91}
	050 Move X24, X0
	051 Move X0, X23
	052 Move X1, X31
	053 Call Object.get_name, X0
	054 Move V0, [X31+24]
	055 Move X3, X0
	056 Move X0, X22
	057 Move W1, W21
	058 Move [X31+4], S0
	059 Move [X31+12], S10
	060 Move V0, [X31+28]
	061 Move V1, V12
	062 Move V2, V13
	063 Move V3, V14
	064 Move [X31], S0
	065 Move V0, V11
	066 Move V4, V15
	067 Move V5, V8
	068 Move V6, V9
	069 Move X2, X24
	070 Move X4, X20
	071 Move X5, X19
	072 Call NetPlayer.RPC_PlayerHit, X0, X1, X2, X3, X4, X5, X6, X7, X8
	073 Move X20, [X31+144]
	074 Move X19, [X31+152]
	075 Move X22, [X31+128]
	076 Move X21, [X31+136]
	077 Move X24, [X31+112]
	078 Move X23, [X31+120]
	079 Move X30, [X31+96]
	080 Move X25, [X31+104]
	081 Move D9, [X31+80]
	082 Move D8, [X31+88]
	083 Move D11, [X31+64]
	084 Move D10, [X31+72]
	085 Move D13, [X31+48]
	086 Move D12, [X31+56]
	087 Move D15, [X31+32]
	088 Move D14, [X31+40]
	089 Add X31, X31, 160
	090 Return 
	091 Call 0x1C17F20

Method: System.Void PlayerHit(System.Int32 damage, UnityEngine.Transform hitTransform, AnimalCompany.RandomSFX hitSound, AnimalCompany.RandomSFX killSound, AnimalCompany.PrefabGenerator/PrefabType prefabType, System.String hitName, Fusion.NetworkBehaviourId source)

Disassembly:
	0x01DB8850 B 0x33BDD8C
	0x01DB8854 STR X30, [X31 - 0x20]!
	0x01DB8858 STP X20, X19, [X31 + 0x10]
	0x01DB885C ADRP X19, 0x2620000
	0x01DB8860 ADRP X20, 0x233F000
	0x01DB8864 LDRB W8, [X19 + 0xB23]
	0x01DB8868 LDR X20, [X20 + 0xAB0]
	0x01DB886C TBNZ X8, 0x0, 0x1DB8884
	0x01DB8870 ADRP X0, 0x233F000
	0x01DB8874 LDR X0, [X0 + 0xAB0]
	0x01DB8878 BL 0x1C16CF4
	0x01DB887C MOVZ W8, 0x1
	0x01DB8880 STRB W8, [X19 + 0xB23]
	0x01DB8884 LDR X0, [X20]
	0x01DB8888 BL 0x1C16F10
	0x01DB888C MOV X1, X31
	0x01DB8890 MOV X19, X0
	0x01DB8894 BL 0x33BDD8C
	0x01DB8898 LDR X8, [X20]
	0x01DB889C LDR X8, [X8 + 0xB8]
	0x01DB88A0 STR X19, [X8]
	0x01DB88A4 LDP X20, X19, [X31 + 0x10]
	0x01DB88A8 LDR X30, [X31], #0x20
	0x01DB88AC RET
	0x01DB88B0 MOV X1, X31
	0x01DB88B4 B 0x33BDD8C
	0x01DB88B8 STP X30, X21, [X31 - 0x20]!
	0x01DB88BC STP X20, X19, [X31 + 0x10]
	0x01DB88C0 ADRP X20, 0x2620000
	0x01DB88C4 ADRP X21, 0x233B000
	0x01DB88C8 LDRB W8, [X20 + 0xB24]
	0x01DB88CC LDR X21, [X21 + 0x598]
	0x01DB88D0 MOV X19, X1
	0x01DB88D4 TBNZ X8, 0x0, 0x1DB88EC
	0x01DB88D8 ADRP X0, 0x233B000
	0x01DB88DC LDR X0, [X0 + 0x598]
	0x01DB88E0 BL 0x1C16CF4
	0x01DB88E4 MOVZ W8, 0x1
	0x01DB88E8 STRB W8, [X20 + 0xB24]
	0x01DB88EC LDR X0, [X21]
	0x01DB88F0 LDR W8, [X0 + 0xE0]
	0x01DB88F4 CBNZ W8, 0x1DB88FC
	0x01DB88F8 BL 0x1C16DFC
	0x01DB88FC MOV X0, X19
	0x01DB8900 MOV X1, X31
	0x01DB8904 MOV X2, X31
	0x01DB8908 BL 0x3C354F8
	0x01DB890C TBZ X0, 0x0, 0x1DB892C
	0x01DB8910 CBZ X19, 0x1DB893C
	0x01DB8914 LDR X0, [X19 + 0x40]
	0x01DB8918 CBZ X0, 0x1DB893C
	0x01DB891C LDP X20, X19, [X31 + 0x10]
	0x01DB8920 MOV X1, X31
	0x01DB8924 LDP X30, X21, [X31], #0x20
	0x01DB8928 B 0x1E93588
	0x01DB892C LDP X20, X19, [X31 + 0x10]
	0x01DB8930 MOV W0, W31
	0x01DB8934 LDP X30, X21, [X31], #0x20
	0x01DB8938 RET
	0x01DB893C BL 0x1C16F20
	0x01DB8940 STR X30, [X31 - 0x20]!
	0x01DB8944 STP X20, X19, [X31 + 0x10]
	0x01DB8948 ADRP X20, 0x2620000
	0x01DB894C LDRB W8, [X20 + 0xB25]
	0x01DB8950 MOV X19, X1

ISIL:
	001 Move [X31-128], D14
	002 Move [X31+8], D13
	003 Move [X31+16], D12
	004 Move [X31+24], D11
	005 Move [X31+32], D10
	006 Move [X31+40], D9
	007 Move [X31+48], D8
	008 Move [X31+56], X30
	009 Move [X31+64], X26
	010 Move [X31+72], X25
	011 Move [X31+80], X24
	012 Move [X31+88], X23
	013 Move [X31+96], X22
	014 Move [X31+104], X21
	015 Move [X31+112], X20
	016 Move [X31+120], X19
	017 Compare X2, 0
	018 JumpIfEqual {83}
	019 Move W22, W1
	020 Move X23, X0
	021 Move X0, X2
	022 Move X1, X31
	023 Move X19, X7
	024 Move X20, X6
	025 Move W21, W5
	026 Move X24, X4
	027 Move X25, X3
	028 Move X26, X2
	029 Call Transform.get_position, X0
	030 Move X0, X26
	031 Move X1, X31
	032 Move V8, V0
	033 Move V9, V1
	034 Move V10, V2
	035 Call Transform.get_rotation, X0
	036 Compare X25, 0
	037 JumpIfEqual {83}
	038 Move X0, X25
	039 Move X1, X31
	040 Move V11, V0
	041 Move V12, V1
	042 Move V13, V2
	043 Move V14, V3
	044 Call Object.get_name, X0
	045 Compare X24, 0
	046 JumpIfEqual {83}
	047 Move X25, X0
	048 Move X0, X24
	049 Move X1, X31
	050 Call Object.get_name, X0
	051 Move X3, X0
	052 Move X0, X23
	053 Move W1, W22
	054 Move V0, V8
	055 Move V1, V9
	056 Move V2, V10
	057 Move V3, V11
	058 Move V4, V12
	059 Move V5, V13
	060 Move X2, X25
	061 Move W4, W21
	062 Move X5, X20
	063 Move X6, X19
	064 Move X20, [X31+112]
	065 Move X19, [X31+120]
	066 Move X22, [X31+96]
	067 Move X21, [X31+104]
	068 Move X24, [X31+80]
	069 Move X23, [X31+88]
	070 Move X26, [X31+64]
	071 Move X25, [X31+72]
	072 Move X30, [X31+56]
	073 Move D9, [X31+40]
	074 Move D8, [X31+48]
	075 Move D11, [X31+24]
	076 Move D10, [X31+32]
	077 Move D13, [X31+8]
	078 Move D12, [X31+16]
	079 Move V6, V14
	080 Move V14, [X31+128]
	081 Call NetPlayer.RPC_PlayerHit, X0, X1, X2, X3, X4, X5, X6, X7, X8
	082 Return 
	083 Call 0x1C17F20

Method: System.Void Hit(System.Int32 damage, UnityEngine.Vector3 position, AnimalCompany.RandomSFX hitSound, AnimalCompany.RandomSFX killSound, UnityEngine.Vector3 force, System.String hitName, Fusion.NetworkBehaviourId source)

Disassembly:
	0x01DB8954 TBNZ X8, 0x0, 0x1DB896C
	0x01DB8958 ADRP X0, 0x233B000
	0x01DB895C LDR X0, [X0 + 0xFE8]
	0x01DB8960 BL 0x1C16CF4
	0x01DB8964 MOVZ W8, 0x1
	0x01DB8968 STRB W8, [X20 + 0xB25]
	0x01DB896C CBZ X19, 0x1DB8990
	0x01DB8970 LDR X8, [X19 + 0x68]
	0x01DB8974 CBZ X8, 0x1DB8990
	0x01DB8978 LDR W8, [X8 + 0x4C]
	0x01DB897C LDP X20, X19, [X31 + 0x10]
	0x01DB8980 CMP W8, 0x3
	0x01DB8984 CSET W0, EQ
	0x01DB8988 LDR X30, [X31], #0x20
	0x01DB898C RET
	0x01DB8990 BL 0x1C16F20
	0x01DB8994 STR X30, [X31 - 0x20]!
	0x01DB8998 STP X20, X19, [X31 + 0x10]
	0x01DB899C ADRP X20, 0x2620000
	0x01DB89A0 LDRB W8, [X20 + 0xB26]
	0x01DB89A4 MOV X19, X1
	0x01DB89A8 TBNZ X8, 0x0, 0x1DB89C0
	0x01DB89AC ADRP X0, 0x233B000
	0x01DB89B0 LDR X0, [X0 + 0xDC8]
	0x01DB89B4 BL 0x1C16CF4
	0x01DB89B8 MOVZ W8, 0x1
	0x01DB89BC STRB W8, [X20 + 0xB26]
	0x01DB89C0 CBZ X19, 0x1DB89DC
	0x01DB89C4 LDR X8, [X19 + 0x48]
	0x01DB89C8 CBZ X8, 0x1DB89DC
	0x01DB89CC LDR X0, [X8 + 0x50]
	0x01DB89D0 LDP X20, X19, [X31 + 0x10]
	0x01DB89D4 LDR X30, [X31], #0x20
	0x01DB89D8 RET
	0x01DB89DC BL 0x1C16F20
	0x01DB89E0 RET
	0x01DB89E4 STP X30, X27, [X31 - 0x50]!
	0x01DB89E8 STP X26, X25, [X31 + 0x10]
	0x01DB89EC STP X24, X23, [X31 + 0x20]
	0x01DB89F0 STP X22, X21, [X31 + 0x30]
	0x01DB89F4 STP X20, X19, [X31 + 0x40]
	0x01DB89F8 ADRP X19, 0x2620000
	0x01DB89FC LDRB W8, [X19 + 0xB27]
	0x01DB8A00 MOV X20, X0
	0x01DB8A04 TBNZ X8, 0x0, 0x1DB8A64
	0x01DB8A08 ADRP X0, 0x233B000
	0x01DB8A0C LDR X0, [X0 + 0x648]
	0x01DB8A10 BL 0x1C16CF4
	0x01DB8A14 ADRP X0, 0x233F000
	0x01DB8A18 LDR X0, [X0 + 0xC60]
	0x01DB8A1C BL 0x1C16CF4
	0x01DB8A20 ADRP X0, 0x233B000
	0x01DB8A24 LDR X0, [X0 + 0xDB0]
	0x01DB8A28 BL 0x1C16CF4
	0x01DB8A2C ADRP X0, 0x233F000
	0x01DB8A30 LDR X0, [X0 + 0xAC0]
	0x01DB8A34 BL 0x1C16CF4
	0x01DB8A38 ADRP X0, 0x233F000
	0x01DB8A3C LDR X0, [X0 + 0xAE0]
	0x01DB8A40 BL 0x1C16CF4
	0x01DB8A44 ADRP X0, 0x233F000
	0x01DB8A48 LDR X0, [X0 + 0xAE8]
	0x01DB8A4C BL 0x1C16CF4
	0x01DB8A50 ADRP X0, 0x233B000
	0x01DB8A54 LDR X0, [X0 + 0xDA0]
	0x01DB8A58 BL 0x1C16CF4
	0x01DB8A5C MOVZ W8, 0x1
	0x01DB8A60 STRB W8, [X19 + 0xB27]
	0x01DB8A64 LDR W8, [X20 + 0x10]
	0x01DB8A68 CMP W8, 0x1
	0x01DB8A6C B.HI 0x1DB8DC4
	0x01DB8A70 LDR X19, [X20 + 0x20]
	0x01DB8A74 MOVN W8, 0x0
	0x01DB8A78 STR W8, [X20 + 0x10]
	0x01DB8A7C CBZ X19, 0x1DB8DE0
	0x01DB8A80 LDR X0, [X19 + 0x40]
	0x01DB8A84 CBZ X0, 0x1DB8DE0
	0x01DB8A88 LDR X21, [X19 + 0x38]
	0x01DB8A8C MOV X1, X31
	0x01DB8A90 BL 0x1E93994
	0x01DB8A94 CBZ X21, 0x1DB8DE0
	0x01DB8A98 AND X1, X0, 0x0
	0x01DB8A9C MOV X0, X21
	0x01DB8AA0 MOV X2, X31
	0x01DB8AA4 BL 0x1EA185C
	0x01DB8AA8 MOV X1, X31
	0x01DB8AAC STR X0, [X19 + 0x198]
	0x01DB8AB0 BL 0x32277A8
	0x01DB8AB4 TBZ X0, 0x0, 0x1DB8AD8
	0x01DB8AB8 FMOV S0, 1
	0x01DB8ABC MOV W0, W31
	0x01DB8AC0 MOV X1, X31
	0x01DB8AC4 BL 0x35BB1E4
	0x01DB8AC8 STR X0, [X20 + 0x18]
	0x01DB8ACC MOVZ W0, 0x1
	0x01DB8AD0 STR W0, [X20 + 0x10]
	0x01DB8AD4 B 0x1DB8DC8
	0x01DB8AD8 LDR X0, [X19 + 0x40]
	0x01DB8ADC CBZ X0, 0x1DB8DE0
	0x01DB8AE0 MOV X1, X31
	0x01DB8AE4 BL 0x1E93588
	0x01DB8AE8 TBNZ X0, 0x0, 0x1DB8DC4
	0x01DB8AEC ADRP X25, 0x233B000
	0x01DB8AF0 LDR X25, [X25 + 0xDA0]
	0x01DB8AF4 LDR X0, [X25]
	0x01DB8AF8 BL 0x1C16F10
	0x01DB8AFC ADRP X21, 0x233F000
	0x01DB8B00 LDR X21, [X21 + 0xAE8]
	0x01DB8B04 MOV X1, X19
	0x01DB8B08 MOV X3, X31

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+96], X26
	012 Move [X31+104], X25
	013 Move [X31+112], X24
	014 Move [X31+120], X23
	015 Move [X31+128], X22
	016 Move [X31+136], X21
	017 Move [X31+144], X20
	018 Move [X31+152], X19
	019 Move X25, 0x2621000
	020 Move W8, [X25+2840]
	021 Move X19, X5
	022 Move X20, X4
	023 Move V12, V4
	024 Move V11, V3
	025 Move X23, X3
	026 Move X24, X2
	027 Move V10, V1
	028 Move V13, V0
	029 Move W21, W1
	030 Move X22, X0
	031 Move [X31+88], S5
	032 Move [X31+96], S2
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {45}
	037 Move X0, 0x233C000
	038 Move X0, [X0+1432]
	039 Call 0x1C17CF4
	040 Move X0, 0x233C000
	041 Move X0, [X0+2440]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X25+2840], W8
	045 Move X26, 0x2621000
	046 Move X25, 0x233C000
	047 Move W8, [X26+1939]
	048 Move X25, [X25+1432]
	049 Compare W8, 0
	050 JumpIfNotEqual {56}
	051 Move X0, 0x233D000
	052 Move X0, [X0+1448]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X26+1939], W8
	056 Move X8, 0x233D000
	057 Move X8, [X8+1448]
	058 Move X0, [X25]
	059 Move X8, [X8]
	060 Move W9, [X0+224]
	061 Move X8, [X8+184]
	062 Move S9, [X8]
	063 Move S8, [X8+4]
	064 Move S15, [X8+8]
	065 Move S14, [X8+12]
	066 Compare W9, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X26, 0x233C000
	070 Move X26, [X26+2440]
	071 Move X0, X24
	072 Move X1, X31
	073 Move X2, X31
	074 Call Object.op_Inequality, X0, X1
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {85}
	079 Compare X24, 0
	080 JumpIfEqual {144}
	081 Move X0, X24
	082 Move X1, X31
	083 Call Object.get_name, X0
	084 Move X24, X0
	085 Move X24, [X26]
	086 Move X0, [X25]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Move X0, X23
	092 Move X1, X31
	093 Move X2, X31
	094 Call Object.op_Inequality, X0, X1
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfNotEqual {105}
	099 Compare X23, 0
	100 JumpIfEqual {144}
	101 Move X0, X23
	102 Move X1, X31
	103 Call Object.get_name, X0
	104 Move X3, X0
	105 Move X3, [X26]
	106 Compare X22, 0
	107 JumpIfEqual {144}
	108 Move S0, [X31+88]
	109 Move S2, [X31+92]
	110 Move X0, X22
	111 Move W1, W21
	112 Move V1, V10
	113 Move [X31+8], S0
	114 Move V0, V13
	115 Move V3, V9
	116 Move V4, V8
	117 Move V5, V15
	118 Move V6, V14
	119 Move X2, X24
	120 Move X4, X20
	121 Move X5, X19
	122 Move [X31], S11
	123 Move [X31+8], S12
	124 Call NetPlayer.RPC_PlayerHit, X0, X1, X2, X3, X4, X5, X6, X7, X8
	125 Move X20, [X31+144]
	126 Move X19, [X31+152]
	127 Move X22, [X31+128]
	128 Move X21, [X31+136]
	129 Move X24, [X31+112]
	130 Move X23, [X31+120]
	131 Move X26, [X31+96]
	132 Move X25, [X31+104]
	133 Move X30, [X31+80]
	134 Move D9, [X31+64]
	135 Move D8, [X31+72]
	136 Move D11, [X31+48]
	137 Move D10, [X31+56]
	138 Move D13, [X31+32]
	139 Move D12, [X31+40]
	140 Move D15, [X31+16]
	141 Move D14, [X31+24]
	142 Add X31, X31, 160
	143 Return 
	144 Call 0x1C17F20

Method: System.Void RPC_PlayerStun(UnityEngine.Vector3 position, System.Single stunRange, System.Single duration, System.String hitName, Fusion.NetworkBehaviourId source, AnimalCompany.IStunnable/AttenuationType attenType)

Disassembly:
	0x01DB8B0C MOV X20, X0
	0x01DB8B10 LDR X2, [X21]
	0x01DB8B14 BL 0x35C52F0
	0x01DB8B18 ADRP X24, 0x233B000
	0x01DB8B1C LDR X24, [X24 + 0x648]
	0x01DB8B20 LDR X0, [X24]
	0x01DB8B24 LDR W8, [X0 + 0xE0]
	0x01DB8B28 CBNZ W8, 0x1DB8B30
	0x01DB8B2C BL 0x1C16DFC
	0x01DB8B30 MOV X0, X20
	0x01DB8B34 MOV X1, X31
	0x01DB8B38 BL 0x1D36978
	0x01DB8B3C LDR X0, [X25]
	0x01DB8B40 BL 0x1C16F10
	0x01DB8B44 LDR X2, [X21]
	0x01DB8B48 MOV X1, X19
	0x01DB8B4C MOV X3, X31
	0x01DB8B50 MOV X20, X0
	0x01DB8B54 BL 0x35C52F0
	0x01DB8B58 ADRP X27, 0x233F000
	0x01DB8B5C LDR X21, [X19 + 0x198]
	0x01DB8B60 LDR X27, [X27 + 0xC60]
	0x01DB8B64 MOVZ W1, 0x1
	0x01DB8B68 MOVZ W23, 0x1
	0x01DB8B6C LDR X0, [X27]
	0x01DB8B70 BL 0x1C16D6C
	0x01DB8B74 ADRP X26, 0x2620000
	0x01DB8B78 LDRB W8, [X26 + 0x787]
	0x01DB8B7C MOV X22, X0
	0x01DB8B80 CBNZ W8, 0x1DB8B94
	0x01DB8B84 ADRP X0, 0x233B000
	0x01DB8B88 LDR X0, [X0 + 0x648]
	0x01DB8B8C BL 0x1C16CF4
	0x01DB8B90 STRB W23, [X26 + 0x787]
	0x01DB8B94 LDR X0, [X24]
	0x01DB8B98 LDR W8, [X0 + 0xE0]
	0x01DB8B9C CBNZ W8, 0x1DB8BA8
	0x01DB8BA0 BL 0x1C16DFC
	0x01DB8BA4 LDR X0, [X24]
	0x01DB8BA8 LDR X8, [X0 + 0xB8]
	0x01DB8BAC LDR X8, [X8]
	0x01DB8BB0 CBZ X8, 0x1DB8DE0
	0x01DB8BB4 CBZ X22, 0x1DB8DE0
	0x01DB8BB8 LDR X23, [X8 + 0xD0]
	0x01DB8BBC CBZ X23, 0x1DB8BD4
	0x01DB8BC0 LDR X8, [X22]
	0x01DB8BC4 MOV X0, X23
	0x01DB8BC8 LDR X1, [X8 + 0x40]
	0x01DB8BCC BL 0x1C16E00
	0x01DB8BD0 CBZ X0, 0x1DB8DE8
	0x01DB8BD4 LDR W8, [X22 + 0x18]
	0x01DB8BD8 CBZ W8, 0x1DB8DE4
	0x01DB8BDC MOV X0, X20
	0x01DB8BE0 MOV X1, X21
	0x01DB8BE4 MOV X2, X22
	0x01DB8BE8 MOV X3, X31
	0x01DB8BEC STR X23, [X22 + 0x20]
	0x01DB8BF0 BL 0x1D366A8
	0x01DB8BF4 LDR X0, [X25]
	0x01DB8BF8 BL 0x1C16F10
	0x01DB8BFC ADRP X21, 0x233F000
	0x01DB8C00 LDR X21, [X21 + 0xAE0]
	0x01DB8C04 MOV X1, X19
	0x01DB8C08 MOV X3, X31
	0x01DB8C0C MOV X20, X0
	0x01DB8C10 LDR X2, [X21]
	0x01DB8C14 BL 0x35C52F0
	0x01DB8C18 MOV X0, X20
	0x01DB8C1C MOV X1, X31
	0x01DB8C20 BL 0x1D36978
	0x01DB8C24 LDR X0, [X25]
	0x01DB8C28 BL 0x1C16F10
	0x01DB8C2C LDR X2, [X21]
	0x01DB8C30 MOV X1, X19
	0x01DB8C34 MOV X3, X31
	0x01DB8C38 MOV X20, X0
	0x01DB8C3C BL 0x35C52F0
	0x01DB8C40 ADRP X8, 0x233B000
	0x01DB8C44 LDR X8, [X8 + 0xDB0]
	0x01DB8C48 MOVZ W1, 0x1
	0x01DB8C4C MOVZ W22, 0x1
	0x01DB8C50 LDR X0, [X8]
	0x01DB8C54 BL 0x1C16D6C
	0x01DB8C58 LDRB W8, [X26 + 0x787]
	0x01DB8C5C MOV X21, X0
	0x01DB8C60 CBNZ W8, 0x1DB8C74
	0x01DB8C64 ADRP X0, 0x233B000
	0x01DB8C68 LDR X0, [X0 + 0x648]
	0x01DB8C6C BL 0x1C16CF4
	0x01DB8C70 STRB W22, [X26 + 0x787]
	0x01DB8C74 LDR X0, [X24]
	0x01DB8C78 LDR W8, [X0 + 0xE0]
	0x01DB8C7C CBNZ W8, 0x1DB8C88
	0x01DB8C80 BL 0x1C16DFC
	0x01DB8C84 LDR X0, [X24]
	0x01DB8C88 LDR X8, [X0 + 0xB8]
	0x01DB8C8C LDR X8, [X8]
	0x01DB8C90 CBZ X8, 0x1DB8DE0
	0x01DB8C94 LDR X8, [X8 + 0xE0]
	0x01DB8C98 CBZ X8, 0x1DB8DE0
	0x01DB8C9C CBZ X21, 0x1DB8DE0
	0x01DB8CA0 LDR X22, [X8 + 0x78]
	0x01DB8CA4 CBZ X22, 0x1DB8CBC
	0x01DB8CA8 LDR X8, [X21]
	0x01DB8CAC MOV X0, X22
	0x01DB8CB0 LDR X1, [X8 + 0x40]
	0x01DB8CB4 BL 0x1C16E00
	0x01DB8CB8 CBZ X0, 0x1DB8DE8
	0x01DB8CBC LDR W8, [X21 + 0x18]
	0x01DB8CC0 CBZ W8, 0x1DB8DE4
	0x01DB8CC4 MOV X0, X20
	0x01DB8CC8 MOV X1, X21
	0x01DB8CCC MOV X2, X31
	0x01DB8CD0 STR X22, [X21 + 0x20]
	0x01DB8CD4 BL 0x1D363F0
	0x01DB8CD8 LDR X0, [X25]
	0x01DB8CDC BL 0x1C16F10
	0x01DB8CE0 ADRP X21, 0x233F000
	0x01DB8CE4 LDR X21, [X21 + 0xAC0]
	0x01DB8CE8 MOV X1, X19
	0x01DB8CEC MOV X3, X31
	0x01DB8CF0 MOV X20, X0
	0x01DB8CF4 LDR X2, [X21]
	0x01DB8CF8 BL 0x35C52F0
	0x01DB8CFC MOV X0, X20
	0x01DB8D00 MOV X1, X31
	0x01DB8D04 BL 0x1D36978
	0x01DB8D08 LDR X0, [X25]
	0x01DB8D0C BL 0x1C16F10
	0x01DB8D10 LDR X2, [X21]
	0x01DB8D14 MOV X1, X19
	0x01DB8D18 MOV X3, X31
	0x01DB8D1C MOV X20, X0
	0x01DB8D20 BL 0x35C52F0
	0x01DB8D24 LDR X0, [X27]
	0x01DB8D28 LDR X19, [X19 + 0x198]
	0x01DB8D2C MOVZ W1, 0x1
	0x01DB8D30 MOVZ W22, 0x1
	0x01DB8D34 BL 0x1C16D6C
	0x01DB8D38 LDRB W8, [X26 + 0x787]
	0x01DB8D3C MOV X21, X0
	0x01DB8D40 CBNZ W8, 0x1DB8D54
	0x01DB8D44 ADRP X0, 0x233B000
	0x01DB8D48 LDR X0, [X0 + 0x648]
	0x01DB8D4C BL 0x1C16CF4
	0x01DB8D50 STRB W22, [X26 + 0x787]
	0x01DB8D54 LDR X0, [X24]
	0x01DB8D58 LDR W8, [X0 + 0xE0]
	0x01DB8D5C CBNZ W8, 0x1DB8D68
	0x01DB8D60 BL 0x1C16DFC
	0x01DB8D64 LDR X0, [X24]
	0x01DB8D68 LDR X8, [X0 + 0xB8]
	0x01DB8D6C LDR X8, [X8]
	0x01DB8D70 CBZ X8, 0x1DB8DE0
	0x01DB8D74 LDR X8, [X8 + 0xB8]
	0x01DB8D78 CBZ X8, 0x1DB8DE0
	0x01DB8D7C LDR X8, [X8 + 0xA0]
	0x01DB8D80 CBZ X8, 0x1DB8DE0
	0x01DB8D84 CBZ X21, 0x1DB8DE0
	0x01DB8D88 LDR X22, [X8 + 0x48]
	0x01DB8D8C CBZ X22, 0x1DB8DA4
	0x01DB8D90 LDR X8, [X21]
	0x01DB8D94 MOV X0, X22
	0x01DB8D98 LDR X1, [X8 + 0x40]
	0x01DB8D9C BL 0x1C16E00
	0x01DB8DA0 CBZ X0, 0x1DB8DE8
	0x01DB8DA4 LDR W8, [X21 + 0x18]
	0x01DB8DA8 CBZ W8, 0x1DB8DE4
	0x01DB8DAC MOV X0, X20
	0x01DB8DB0 MOV X1, X19
	0x01DB8DB4 MOV X2, X21
	0x01DB8DB8 MOV X3, X31
	0x01DB8DBC STR X22, [X21 + 0x20]
	0x01DB8DC0 BL 0x1D366A8
	0x01DB8DC4 MOV W0, W31
	0x01DB8DC8 LDP X20, X19, [X31 + 0x40]
	0x01DB8DCC LDP X22, X21, [X31 + 0x30]
	0x01DB8DD0 LDP X24, X23, [X31 + 0x20]
	0x01DB8DD4 LDP X26, X25, [X31 + 0x10]
	0x01DB8DD8 LDP X30, X27, [X31], #0x50
	0x01DB8DDC RET
	0x01DB8DE0 BL 0x1C16F20
	0x01DB8DE4 BL 0x1C16F28
	0x01DB8DE8 BL 0x1C16F44
	0x01DB8DEC MOV X1, X31
	0x01DB8DF0 BL 0x1C16DEC
	0x01DB8DF4 LDR X0, [X0 + 0x18]
	0x01DB8DF8 RET
	0x01DB8DFC STP X30, X19, [X31 - 0x10]!
	0x01DB8E00 ADRP X0, 0x233B000
	0x01DB8E04 LDR X0, [X0 + 0xB40]
	0x01DB8E08 BL 0x1C16D08
	0x01DB8E0C BL 0x1C16F10
	0x01DB8E10 MOV X1, X31
	0x01DB8E14 MOV X19, X0
	0x01DB8E18 BL 0x3380310
	0x01DB8E1C ADRP X0, 0x233F000
	0x01DB8E20 LDR X0, [X0 + 0xC68]
	0x01DB8E24 BL 0x1C16D08
	0x01DB8E28 MOV X1, X0
	0x01DB8E2C MOV X0, X19
	0x01DB8E30 BL 0x1C16DEC
	0x01DB8E34 LDR X0, [X0 + 0x18]
	0x01DB8E38 RET
	0x01DB8E3C RET

ISIL:
	001 Move [X31-96], D12
	002 Move [X31+8], D11
	003 Move [X31+16], D10
	004 Move [X31+24], D9
	005 Move [X31+32], D8
	006 Move [X31+40], X30
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X23, 0x2621000
	014 Move W8, [X23+2841]
	015 Move W19, W3
	016 Move X21, X2
	017 Move X22, X1
	018 Move V8, V4
	019 Move V9, V3
	020 Move V10, V2
	021 Move V11, V1
	022 Move V12, V0
	023 Move X20, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {39}
	028 Move X0, 0x233F000
	029 Move X0, [X0+2680]
	030 Call 0x1C17CF4
	031 Move X0, 0x233E000
	032 Move X0, [X0+1992]
	033 Call 0x1C17CF4
	034 Move X0, 0x2340000
	035 Move X0, [X0+3136]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X23+2841], W8
	039 Move W8, [X20+88]
	040 Compare W8, 0
	041 JumpIfEqual {99}
	042 Move [X20+88], W31
	043 Move X0, [X20+64]
	044 Compare X0, 0
	045 JumpIfEqual {269}
	046 Move X1, X31
	047 Call NetworkObject.get_HasInputAuthority, X0
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {115}
	052 Move X20, 0x233E000
	053 Move X20, [X20+1992]
	054 Move X0, [X20]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X21, 0x2621000
	060 Move W8, [X21+2141]
	061 Compare W8, 0
	062 JumpIfNotEqual {68}
	063 Move X0, 0x233E000
	064 Move X0, [X0+1992]
	065 Call 0x1C17CF4
	066 Move W8, 1
	067 Move [X21+2141], W8
	068 Move X0, [X20]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {74}
	072 Call 0x1C17DFC
	073 Move X0, [X20]
	074 Move X8, [X0+184]
	075 Move X0, [X8]
	076 Compare X0, 0
	077 JumpIfEqual {269}
	078 Move V1, V11
	079 Move V2, V10
	080 Move V3, V9
	081 Move V4, V8
	082 Move W1, W19
	083 Move X20, [X31+80]
	084 Move X19, [X31+88]
	085 Move X22, [X31+64]
	086 Move X21, [X31+72]
	087 Move X24, [X31+48]
	088 Move X23, [X31+56]
	089 Move X30, [X31+40]
	090 Move D9, [X31+24]
	091 Move D8, [X31+32]
	092 Move D11, [X31+8]
	093 Move D10, [X31+16]
	094 Move V0, V12
	095 Move X2, X31
	096 Move V12, [X31+96]
	097 Call PlayerController.PlayerStun, X0, X1, V0, V1, X2
	098 Return 
	099 Move X24, 0x233F000
	100 Move X24, [X24+2680]
	101 Move X0, [X24]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Move X0, X20
	107 Move X1, X31
	108 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	109 Move X0, [X20+56]
	110 Compare X0, 0
	111 JumpIfEqual {269}
	112 Move X1, X31
	113 Call NetworkRunner.get_Stage, X0
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X20, [X31+80]
	116 Move X19, [X31+88]
	117 Move X22, [X31+64]
	118 Move X21, [X31+72]
	119 Move X24, [X31+48]
	120 Move X23, [X31+56]
	121 Move X30, [X31+40]
	122 Move D9, [X31+24]
	123 Move D8, [X31+32]
	124 Move D11, [X31+8]
	125 Move D10, [X31+16]
	126 Move V12, [X31+96]
	127 Return 
	128 Move X0, [X20+64]
	129 Compare X0, 0
	130 JumpIfEqual {269}
	131 Move X1, X31
	132 Call NetworkObject.GetLocalAuthorityMask, X0
	133 And W31, W0, 7
	134 Move TEMP, X0
	135 And TEMP, TEMP, 2
	136 Compare TEMP, 2
	137 JumpIfEqual {43}
	138 Move X0, X22
	139 Move X1, X31
	140 Call ReadWriteUtilsForWeaver.GetByteCountUtf8NoHash, X0
	141 Add W8, W0, 43
	142 And W23, W8, 0xFFFFFFFC
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X8, [X20+56]
	145 Compare X8, 0
	146 JumpIfEqual {269}
	147 Move X0, [X8+80]
	148 Compare X0, 0
	149 JumpIfEqual {269}
	150 Move X1, X31
	151 Call Simulation.HasAnyActiveConnections, X0
	152 Move TEMP, X0
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfNotEqual {115}
	156 Move X8, [X20+56]
	157 Compare X8, 0
	158 JumpIfEqual {269}
	159 Move X0, [X8+80]
	160 Move W1, W23
	161 Move X2, X31
	162 Call SimulationMessage.Allocate, X0, X1
	163 Move X8, [X20+64]
	164 Compare X8, 0
	165 JumpIfEqual {269}
	166 Move X8, [X8+32]
	167 Move X23, X0
	168 Add X24, X0, 28
	169 Compare X8, 0
	170 JumpIfEqual {222}
	171 Move W0, [X8]
	172 Move X0, [X24]
	173 Move X19, [X20+64]
	174 Move W8, [X0+224]
	175 Compare W8, 0
	176 JumpIfNotEqual {178}
	177 Call 0x1C17DFC
	178 Move X8, 0x2340000
	179 Move X8, [X8+3136]
	180 Move X1, X19
	181 Move X20, [X31+80]
	182 Move X19, [X31+88]
	183 Move X22, [X31+64]
	184 Move X21, [X31+72]
	185 Move X0, [X8]
	186 Move X24, [X31+48]
	187 Move X23, [X31+56]
	188 Move X30, [X31+40]
	189 Move D9, [X31+24]
	190 Move D8, [X31+32]
	191 Move D11, [X31+8]
	192 Move D10, [X31+16]
	193 Move W2, 7
	194 Move X3, X31
	195 Move V12, [X31+96]
	196 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	197 Return 
	198 Move X0, [X24]
	199 Move W8, [X0+224]
	200 Compare W8, 0
	201 JumpIfNotEqual {203}
	202 Call 0x1C17DFC
	203 Move X8, 0x2340000
	204 Move X8, [X8+3136]
	205 Move W1, W23
	206 Move X20, [X31+80]
	207 Move X19, [X31+88]
	208 Move X22, [X31+64]
	209 Move X21, [X31+72]
	210 Move X0, [X8]
	211 Move X24, [X31+48]
	212 Move X23, [X31+56]
	213 Move X30, [X31+40]
	214 Move D9, [X31+24]
	215 Move D8, [X31+32]
	216 Move D11, [X31+8]
	217 Move D10, [X31+16]
	218 Move X2, X31
	219 Move V12, [X31+96]
	220 Call NetworkBehaviourUtils.NotifyRpcPayloadSizeExceeded, X0, X1
	221 Return 
	222 Move X0, X31
	223 Move W1, [X20+104]
	224 Move W2, 7
	225 Move X3, X31
	226 Call RpcHeader.Create, X0, X1, X2
	227 Move [X23+28], X0
	228 Add X0, X23, 56
	229 Move X1, X22
	230 Move X2, X31
	231 Move [X23+36], S12
	232 Move [X23+44], S11
	233 Move [X23+44], S10
	234 Move [X23+52], S9
	235 Move [X23+52], S8
	236 Call ReadWriteUtilsForWeaver.WriteStringUtf8NoHash, X0, X1
	237 Add W8, W0, 31
	238 Move X8, W8
	239 And X8, X8, 0xFFFFFFFF
	240 Add W9, W8, 8
	241 Move [X24], X21
	242 Move [X24], W19
	243 Compare X23, 0
	244 JumpIfEqual {269}
	245 Move W8, W8
	246 ShiftRight W8, 29
	247 And W8, W8, 0xFFFFFFF
	248 Add W8, W8, 96
	249 Move [X23+12], W8
	250 Move X0, [X20+56]
	251 Compare X0, 0
	252 JumpIfEqual {269}
	253 Move X1, X23
	254 Move X20, [X31+80]
	255 Move X19, [X31+88]
	256 Move X22, [X31+64]
	257 Move X21, [X31+72]
	258 Move X24, [X31+48]
	259 Move X23, [X31+56]
	260 Move X30, [X31+40]
	261 Move D9, [X31+24]
	262 Move D8, [X31+32]
	263 Move D11, [X31+8]
	264 Move D10, [X31+16]
	265 Move X2, X31
	266 Move V12, [X31+96]
	267 Call NetworkRunner.SendRpc, X0, X1
	268 Return 
	269 Call 0x1C17F20

Method: System.Void Stun(UnityEngine.Vector3 position, System.Single stunRange, System.Single duration = 3, System.String hitName = , Fusion.NetworkBehaviourId source = null, AnimalCompany.IStunnable/AttenuationType attenType = 0)

Disassembly:
	0x01DB8E40 STR D8, [X31 - 0x30]!

ISIL:
	001 Call NetPlayer.RPC_PlayerStun, X0, X1, V0, V1, X2, X3, X4
	002 Return 

Method: System.Void .ctor()

Disassembly:
	0x01DB8E44 STR X30, [X31 + 0x8]
	0x01DB8E48 STP X22, X21, [X31 + 0x10]
	0x01DB8E4C STP X20, X19, [X31 + 0x20]
	0x01DB8E50 ADRP X20, 0x2620000
	0x01DB8E54 LDRB W8, [X20 + 0xB28]
	0x01DB8E58 MOV X19, X0
	0x01DB8E5C TBNZ X8, 0x0, 0x1DB8EBC
	0x01DB8E60 ADRP X0, 0x233B000
	0x01DB8E64 LDR X0, [X0 + 0x648]
	0x01DB8E68 BL 0x1C16CF4
	0x01DB8E6C ADRP X0, 0x233B000
	0x01DB8E70 LDR X0, [X0 + 0xAB0]
	0x01DB8E74 BL 0x1C16CF4
	0x01DB8E78 ADRP X0, 0x233E000
	0x01DB8E7C LDR X0, [X0 + 0xEF8]
	0x01DB8E80 BL 0x1C16CF4
	0x01DB8E84 ADRP X0, 0x233E000
	0x01DB8E88 LDR X0, [X0 + 0xF00]
	0x01DB8E8C BL 0x1C16CF4
	0x01DB8E90 ADRP X0, 0x233B000
	0x01DB8E94 LDR X0, [X0 + 0x598]
	0x01DB8E98 BL 0x1C16CF4
	0x01DB8E9C ADRP X0, 0x233F000
	0x01DB8EA0 LDR X0, [X0 + 0xC70]
	0x01DB8EA4 BL 0x1C16CF4
	0x01DB8EA8 ADRP X0, 0x233B000
	0x01DB8EAC LDR X0, [X0 + 0x638]
	0x01DB8EB0 BL 0x1C16CF4
	0x01DB8EB4 MOVZ W8, 0x1
	0x01DB8EB8 STRB W8, [X20 + 0xB28]
	0x01DB8EBC LDR W8, [X19 + 0x10]
	0x01DB8EC0 LDR X22, [X19 + 0x20]
	0x01DB8EC4 CMP W8, 0x1
	0x01DB8EC8 B.EQ 0x1DB8EF4
	0x01DB8ECC CBNZ W8, 0x1DB90D4
	0x01DB8ED0 MOVN W8, 0x0
	0x01DB8ED4 STR W8, [X19 + 0x10]
	0x01DB8ED8 ADRP X8, 0x233B000
	0x01DB8EDC LDR X8, [X8 + 0x638]
	0x01DB8EE0 MOVZ W1, 0x100
	0x01DB8EE4 LDR X0, [X8]
	0x01DB8EE8 BL 0x1C16D6C
	0x01DB8EEC STR X0, [X19 + 0x28]
	0x01DB8EF0 B 0x1DB8EFC
	0x01DB8EF4 MOVN W8, 0x0
	0x01DB8EF8 STR W8, [X19 + 0x10]
	0x01DB8EFC CBZ X22, 0x1DB90EC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2621000
	007 Move X22, 0x2340000
	008 Move X20, 0x233C000
	009 Move W8, [X21+2842]
	010 Move X22, [X22+3040]
	011 Move X20, [X20+2200]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x233C000
	018 Move X0, [X0+2200]
	019 Call 0x1C17CF4
	020 Move X0, 0x2340000
	021 Move X0, [X0+3040]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2842], W8
	025 Move X8, [X22]
	026 Move [X19+272], X8
	027 Move X0, [X20]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X21, 0x2621000
	033 Move W8, [X21+1931]
	034 Compare W8, 0
	035 JumpIfNotEqual {41}
	036 Move X0, 0x233C000
	037 Move X0, [X0+2200]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+1931], W8
	041 Move X0, [X20]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X20]
	047 Move X8, [X0+184]
	048 Move X0, X19
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X1, X31
	052 Move X8, [X8]
	053 Move [X19+472], X8
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X30, [X31+48]
	057 Call NetworkBehaviour..ctor, X0
	058 Return 

Method: System.Void .cctor()

Disassembly:
	0x01DB8F00 ADRP X8, 0x233B000
	0x01DB8F04 LDR X8, [X8 + 0x598]
	0x01DB8F08 LDR X20, [X22 + 0x1C8]
	0x01DB8F0C LDR X0, [X8]
	0x01DB8F10 LDR W8, [X0 + 0xE0]
	0x01DB8F14 CBNZ W8, 0x1DB8F1C
	0x01DB8F18 BL 0x1C16DFC
	0x01DB8F1C MOV X0, X20
	0x01DB8F20 MOV X1, X31
	0x01DB8F24 MOV X2, X31
	0x01DB8F28 BL 0x3C354F8
	0x01DB8F2C FMOV S8, W31
	0x01DB8F30 TBZ X0, 0x0, 0x1DB8FE0
	0x01DB8F34 LDR X0, [X22 + 0x1C8]
	0x01DB8F38 CBZ X0, 0x1DB90EC
	0x01DB8F3C MOV X1, X31
	0x01DB8F40 BL 0x3BFCC80
	0x01DB8F44 TBZ X0, 0x0, 0x1DB8FE0
	0x01DB8F48 LDR X0, [X22 + 0x1C8]
	0x01DB8F4C CBZ X0, 0x1DB90EC
	0x01DB8F50 MOV X1, X31
	0x01DB8F54 BL 0x3BFC9FC
	0x01DB8F58 LDR X8, [X22 + 0x1C8]
	0x01DB8F5C CBZ X8, 0x1DB90EC
	0x01DB8F60 LDR X21, [X19 + 0x28]
	0x01DB8F64 MOV X20, X0
	0x01DB8F68 MOV X0, X8
	0x01DB8F6C MOV X1, X31
	0x01DB8F70 BL 0x3BFC9C0
	0x01DB8F74 CBZ X20, 0x1DB90EC
	0x01DB8F78 MOV W2, W0
	0x01DB8F7C MOV X0, X20
	0x01DB8F80 MOV X1, X21
	0x01DB8F84 MOV X3, X31
	0x01DB8F88 BL 0x3BFBE1C
	0x01DB8F8C TBZ X0, 0x0, 0x1DB8FE0
	0x01DB8F90 LDR X11, [X19 + 0x28]
	0x01DB8F94 CBZ X11, 0x1DB90EC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2621000
	007 Move X22, 0x2340000
	008 Move X19, 0x2340000
	009 Move X20, 0x233E000
	010 Move W8, [X21+2843]
	011 Move X22, [X22+3144]
	012 Move X19, [X19+3152]
	013 Move X20, [X20+2464]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x2340000
	019 Move X0, [X0+3152]
	020 Call 0x1C17CF4
	021 Move X0, 0x2340000
	022 Move X0, [X0+3144]
	023 Call 0x1C17CF4
	024 Move X0, 0x233E000
	025 Move X0, [X0+2464]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2843], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call Dictionary`2<UInt32, Object>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X8, [X20]
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X8, [X8+184]
	043 Move [X8+8], X31
	044 Move X30, [X31+48]
	045 Return 

Method: System.Void CopyBackingFieldsToState(System.Boolean param_0)

Disassembly:
	0x01DB8F98 LDR W8, [X11 + 0x18]
	0x01DB8F9C UBFM X9, X8, 0x20, 0x1F
	0x01DB8FA0 CMP X9, 0x1
	0x01DB8FA4 B.LT 0x1DB8FE0
	0x01DB8FA8 MOV X9, X31
	0x01DB8FAC SXTW X10, W8
	0x01DB8FB0 ADD X11, X11, 0x20
	0x01DB8FB4 FMOV S0, W31
	0x01DB8FB8 CMP X9, X8
	0x01DB8FBC B.CS 0x1DB90F0
	0x01DB8FC0 LDR V1, [X11, X9, LSL #2]
	0x01DB8FC4 ADD X9, X9, 0x1
	0x01DB8FC8 FCMP S1, S0
	0x01DB8FCC FCSEL S0, S1, S0, GT
	0x01DB8FD0 CMP X9, X10
	0x01DB8FD4 B.LT 0x1DB8FB8
	0x01DB8FD8 FMOV S1, 5
	0x01DB8FDC FMUL S8, S0, S1
	0x01DB8FE0 LDR X0, [X22 + 0xC8]
	0x01DB8FE4 STR S8, [X22 + 0x174]
	0x01DB8FE8 CBZ X0, 0x1DB90EC
	0x01DB8FEC MOV V0.16B, V8.16B
	0x01DB8FF0 MOV X1, X31
	0x01DB8FF4 BL 0x1DC85EC
	0x01DB8FF8 LDRB W8, [X22 + 0x190]
	0x01DB8FFC CBZ W8, 0x1DB90C4
	0x01DB9000 ADRP X8, 0x233A000
	0x01DB9004 LDR X8, [X8 + 0xAB0]
	0x01DB9008 MOVZ W1, 0x1
	0x01DB900C ADD X21, X22, 0x190
	0x01DB9010 LDR X0, [X8]
	0x01DB9014 BL 0x1C16D6C
	0x01DB9018 ADRP X8, 0x233D000
	0x01DB901C LDR X8, [X8 + 0xF00]
	0x01DB9020 MOV X20, X0
	0x01DB9024 MOV X0, X21
	0x01DB9028 LDR X1, [X8]
	0x01DB902C BL 0x2434214
	0x01DB9030 ADRP X8, 0x233E000
	0x01DB9034 LDR V8, [X22 + 0x174]
	0x01DB9038 LDR X8, [X8 + 0xC70]
	0x01DB903C MOV W21, W0
	0x01DB9040 LDR X8, [X8]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+80], X30
	003 Move [X31+96], X20
	004 Move [X31+104], X19
	005 NotImplemented "Instruction MRS not yet implemented."
	006 Move X8, [X20+40]
	007 Move X19, X0
	008 Move [X31+72], X8
	009 Move W1, [X0+264]
	010 Call NetPlayer.set_isDie, X0, X1
	011 Move X1, [X19+272]
	012 Move X0, X19
	013 Call NetPlayer.set_displayName, X0, X1
	014 Move W1, [X19+280]
	015 Move X0, X19
	016 Call NetPlayer.set_channel, X0, X1
	017 Add X8, X19, 284
	018 Move X9, [X8+16]
	019 Move V0, [X8]
	020 Add X1, X31, 48
	021 Move X0, X19
	022 Move [X31+64], X9
	023 Move [X31+3], V0
	024 Call NetPlayer.set_fingerValues, X0, X1
	025 Add X8, X19, 308
	026 Move V1, [X8+16]
	027 Move V0, [X8+32]
	028 Move V2, [X8]
	029 Add X1, X31, 0
	030 Move X0, X19
	031 Move [X31+16], V1
	032 Move [X31+24], V0
	033 Move [X31], V2
	034 Call NetPlayer.set_rigData, X0, X1
	035 Move X1, [X19+360]
	036 Move X0, X19
	037 Call NetPlayer.set_blockedPlayers, X0, X1
	038 Move X8, [X20+40]
	039 Move X9, [X31+72]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X20, [X31+96]
	042 Move X19, [X31+104]
	043 Move X30, [X31+80]
	044 Add X31, X31, 112
	045 Return 
	046 Call 0x3EB2B20

Method: System.Void CopyStateToBackingFields()

Disassembly:
	0x01DB9044 MOV X0, X8
	0x01DB9048 BL 0x1C16F10
	0x01DB904C MOV X1, X31
	0x01DB9050 MOV X22, X0
	0x01DB9054 BL 0x1D36B98
	0x01DB9058 LDR X8, [X22]
	0x01DB905C STR W21, [X22 + 0x14]
	0x01DB9060 STR S8, [X22 + 0x18]
	0x01DB9064 MOVZ W1, 0x1
	0x01DB9068 LDP X9, X2, [X8 + 0x198]
	0x01DB906C MOV X0, X22
	0x01DB9070 BLR X9
	0x01DB9074 CBZ X20, 0x1DB90EC
	0x01DB9078 MOV X21, X0
	0x01DB907C CBZ X0, 0x1DB9094
	0x01DB9080 LDR X8, [X20]
	0x01DB9084 MOV X0, X21
	0x01DB9088 LDR X1, [X8 + 0x40]
	0x01DB908C BL 0x1C16E00
	0x01DB9090 CBZ X0, 0x1DB90F4
	0x01DB9094 LDR W8, [X20 + 0x18]
	0x01DB9098 CBZ W8, 0x1DB90F0
	0x01DB909C STR X21, [X20 + 0x20]
	0x01DB90A0 ADRP X8, 0x233A000
	0x01DB90A4 LDR X8, [X8 + 0x648]
	0x01DB90A8 LDR X0, [X8]
	0x01DB90AC LDR W8, [X0 + 0xE0]
	0x01DB90B0 CBNZ W8, 0x1DB90B8
	0x01DB90B4 BL 0x1C16DFC
	0x01DB90B8 MOV X0, X20
	0x01DB90BC MOV X1, X31
	0x01DB90C0 BL 0x1D351C4
	0x01DB90C4 MOVZ W0, 0x1
	0x01DB90C8 STR X31, [X19 + 0x18]
	0x01DB90CC STR W0, [X19 + 0x10]
	0x01DB90D0 B 0x1DB90D8
	0x01DB90D4 MOV W0, W31
	0x01DB90D8 LDP X20, X19, [X31 + 0x20]
	0x01DB90DC LDP X22, X21, [X31 + 0x10]
	0x01DB90E0 LDR X30, [X31 + 0x8]
	0x01DB90E4 LDR V8, [X31], #0x30
	0x01DB90E8 RET
	0x01DB90EC BL 0x1C16F20
	0x01DB90F0 BL 0x1C16F28

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+80], X30
	003 Move [X31+96], X20
	004 Move [X31+104], X19
	005 NotImplemented "Instruction MRS not yet implemented."
	006 Move X8, [X20+40]
	007 Move X19, X0
	008 Move [X31+72], X8
	009 Call NetPlayer.get_isDie, X0
	010 And W8, W0, 1
	011 Move X0, X19
	012 Move [X19+264], W8
	013 Call NetPlayer.get_displayName, X0
	014 Move [X19+272], X0
	015 Move X0, X19
	016 Call NetPlayer.get_channel, X0
	017 Move [X19+280], W0
	018 Add X8, X31, 48
	019 Move X0, X19
	020 Call NetPlayer.get_fingerValues, X0
	021 Move X8, [X31+64]
	022 Move V0, [X31+3]
	023 Add X9, X19, 284
	024 Move X0, X19
	025 Move [X9+16], X8
	026 Add X8, X31, 0
	027 Move [X9], V0
	028 Call NetPlayer.get_rigData, X0
	029 Move V1, [X31+16]
	030 Move V0, [X31+32]
	031 Move V2, [X31]
	032 Add X8, X19, 308
	033 Move X0, X19
	034 Move [X8+16], V1
	035 Move [X8+24], V0
	036 Move [X8], V2
	037 Call NetPlayer.get_blockedPlayers, X0
	038 Move [X19+360], X0
	039 Move X8, [X20+40]
	040 Move X9, [X31+72]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X20, [X31+96]
	043 Move X19, [X31+104]
	044 Move X30, [X31+80]
	045 Add X31, X31, 112
	046 Return 
	047 Call 0x3EB2B20

Method: System.Void RPC_DoPlayerDie@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01DB90F4 BL 0x1C16F44
	0x01DB90F8 MOV X1, X31
	0x01DB90FC BL 0x1C16DEC
	0x01DB9100 STR D8, [X31 - 0x20]!
	0x01DB9104 STR X30, [X31 + 0x8]
	0x01DB9108 STP X20, X19, [X31 + 0x10]
	0x01DB910C MOV W19, W1
	0x01DB9110 MOV X1, X31
	0x01DB9114 MOV V8.16B, V0.16B
	0x01DB9118 MOV X20, X0
	0x01DB911C BL 0x1D36B98
	0x01DB9120 STR W19, [X20 + 0x14]
	0x01DB9124 STR S8, [X20 + 0x18]
	0x01DB9128 LDP X20, X19, [X31 + 0x10]
	0x01DB912C LDR X30, [X31 + 0x8]
	0x01DB9130 LDR V8, [X31], #0x20
	0x01DB9134 RET
	0x01DB9138 LDR X0, [X0 + 0x18]
	0x01DB913C RET
	0x01DB9140 STP X30, X19, [X31 - 0x10]!
	0x01DB9144 ADRP X0, 0x233A000
	0x01DB9148 LDR X0, [X0 + 0xB40]
	0x01DB914C BL 0x1C16D08
	0x01DB9150 BL 0x1C16F10
	0x01DB9154 MOV X1, X31
	0x01DB9158 MOV X19, X0
	0x01DB915C BL 0x3380310
	0x01DB9160 ADRP X0, 0x233E000
	0x01DB9164 LDR X0, [X0 + 0xC78]
	0x01DB9168 BL 0x1C16D08
	0x01DB916C MOV X1, X0
	0x01DB9170 MOV X0, X19
	0x01DB9174 BL 0x1C16DEC
	0x01DB9178 LDR X0, [X0 + 0x18]
	0x01DB917C RET
	0x01DB9180 RET
	0x01DB9184 STR D8, [X31 - 0x40]!
	0x01DB9188 STP X30, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2620000
	006 Move W8, [X21+2844]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x233D000
	014 Move X0, [X0+2464]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2844], W8
	018 Compare X19, 0
	019 JumpIfEqual {45}
	020 Move X10, 0x233D000
	021 Move X10, [X10+2464]
	022 Move W9, 1
	023 Move W8, [X20+36]
	024 Move [X19+88], W9
	025 Move X9, [X19]
	026 Move X1, [X10]
	027 Move W11, [X9+304]
	028 Move W10, [X1+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X9, [X9+200]
	031 Add X9, X9, X10
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CSET not yet implemented."
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Call NetPlayer.RPC_DoPlayerDie, X0, X1
	042 Return 
	043 Move X0, X19
	044 Call 0x1C181E0
	045 Call 0x1C17F20

Method: System.Void RPC_PlayerFingerValuesChanged@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01DB918C STP X22, X21, [X31 + 0x20]
	0x01DB9190 STP X20, X19, [X31 + 0x30]
	0x01DB9194 ADRP X20, 0x261F000
	0x01DB9198 LDRB W8, [X20 + 0xB29]
	0x01DB919C MOV X19, X0
	0x01DB91A0 TBNZ X8, 0x0, 0x1DB9200
	0x01DB91A4 ADRP X0, 0x233A000
	0x01DB91A8 LDR X0, [X0 + 0x648]
	0x01DB91AC BL 0x1C16CF4
	0x01DB91B0 ADRP X0, 0x233A000
	0x01DB91B4 LDR X0, [X0 + 0xAB0]
	0x01DB91B8 BL 0x1C16CF4
	0x01DB91BC ADRP X0, 0x233E000
	0x01DB91C0 LDR X0, [X0 + 0xC80]
	0x01DB91C4 BL 0x1C16CF4
	0x01DB91C8 ADRP X0, 0x233D000
	0x01DB91CC LDR X0, [X0 + 0xEF8]
	0x01DB91D0 BL 0x1C16CF4
	0x01DB91D4 ADRP X0, 0x233D000
	0x01DB91D8 LDR X0, [X0 + 0xF00]
	0x01DB91DC BL 0x1C16CF4
	0x01DB91E0 ADRP X0, 0x233E000
	0x01DB91E4 LDR X0, [X0 + 0xC70]
	0x01DB91E8 BL 0x1C16CF4
	0x01DB91EC ADRP X0, 0x233D000
	0x01DB91F0 LDR X0, [X0 + 0xC30]
	0x01DB91F4 BL 0x1C16CF4
	0x01DB91F8 MOVZ W8, 0x1
	0x01DB91FC STRB W8, [X20 + 0xB29]
	0x01DB9200 LDR W23, [X19 + 0x10]
	0x01DB9204 CMP W23, 0x1
	0x01DB9208 B.HI 0x1DB9408
	0x01DB920C LDR X22, [X19 + 0x20]
	0x01DB9210 MOVN W8, 0x0
	0x01DB9214 STR W8, [X19 + 0x10]
	0x01DB9218 CBZ X22, 0x1DB9424
	0x01DB921C LDR X0, [X22 + 0xD0]
	0x01DB9220 CBZ X0, 0x1DB9424
	0x01DB9224 MOV X1, X31
	0x01DB9228 BL 0x3574C04
	0x01DB922C CBZ X0, 0x1DB9424
	0x01DB9230 ADRP X21, 0x233E000
	0x01DB9234 LDR X8, [X0]
	0x01DB9238 LDR X21, [X21 + 0xC80]
	0x01DB923C MOV X20, X0
	0x01DB9240 LDRH W9, [X8 + 0x12E]
	0x01DB9244 LDR X1, [X21]
	0x01DB9248 CBZ X9, 0x1DB926C
	0x01DB924C LDR X10, [X8 + 0xB0]
	0x01DB9250 ADD X10, X10, 0x8
	0x01DB9254 LDUR X11, [X10 - 0x8]
	0x01DB9258 CMP X11, X1
	0x01DB925C B.EQ 0x1DB927C
	0x01DB9260 SUBS X9, X9, 0x1
	0x01DB9264 ADD X10, X10, 0x10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x2620000
	008 Move X21, 0x233B000
	009 Move X22, 0x233F000
	010 Move W8, [X23+2845]
	011 Move X21, [X21+1592]
	012 Move X22, [X22+3160]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x233F000
	020 Move X0, [X0+3160]
	021 Call 0x1C17CF4
	022 Move X0, 0x233D000
	023 Move X0, [X0+2464]
	024 Call 0x1C17CF4
	025 Move X0, 0x233B000
	026 Move X0, [X0+1592]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X23+2845], W8
	030 Move W1, [X20+36]
	031 Move X0, [X21]
	032 Call 0x1C17D6C
	033 Move X2, [X22]
	034 Add X1, X20, 40
	035 Move X21, X0
	036 Call Native.CopyToArray, X0, X1
	037 Compare X19, 0
	038 JumpIfEqual {64}
	039 Move X9, 0x233D000
	040 Move X9, [X9+2464]
	041 Move W8, 1
	042 Move [X19+88], W8
	043 Move X8, [X19]
	044 Move X1, [X9]
	045 Move W10, [X8+304]
	046 Move W9, [X1+304]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X8, [X8+200]
	049 Add X8, X8, X9
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X0, X19
	053 Move X1, X21
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Move X23, [X31+56]
	060 Call NetPlayer.RPC_PlayerFingerValuesChanged, X0, X1
	061 Return 
	062 Move X0, X19
	063 Call 0x1C181E0
	064 Call 0x1C17F20

Method: System.Void RPC_PlayerHit@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01DB9268 B.NE 0x1DB9254
	0x01DB926C MOVZ W2, 0x2
	0x01DB9270 MOV X0, X20
	0x01DB9274 BL 0x1C5C788
	0x01DB9278 B 0x1DB928C
	0x01DB927C LDR W9, [X10]
	0x01DB9280 ADD W9, W9, 0x2
	0x01DB9284 ADD X8, X8, W9, 0x4, SXTW
	0x01DB9288 ADD X0, X8, 0x138
	0x01DB928C LDP X8, X1, [X0]
	0x01DB9290 MOV X0, X20
	0x01DB9294 BLR X8
	0x01DB9298 LDR X0, [X22 + 0xD0]
	0x01DB929C STR S0, [X22 + 0x174]
	0x01DB92A0 CBZ X0, 0x1DB9424
	0x01DB92A4 MOV X1, X31
	0x01DB92A8 BL 0x3574C04
	0x01DB92AC CBZ X0, 0x1DB9424
	0x01DB92B0 LDR X8, [X0]
	0x01DB92B4 LDR X1, [X21]
	0x01DB92B8 MOV X20, X0
	0x01DB92BC LDRH W9, [X8 + 0x12E]
	0x01DB92C0 CBZ X9, 0x1DB92E4
	0x01DB92C4 LDR X10, [X8 + 0xB0]
	0x01DB92C8 ADD X10, X10, 0x8
	0x01DB92CC LDUR X11, [X10 - 0x8]
	0x01DB92D0 CMP X11, X1
	0x01DB92D4 B.EQ 0x1DB92F4
	0x01DB92D8 SUBS X9, X9, 0x1
	0x01DB92DC ADD X10, X10, 0x10
	0x01DB92E0 B.NE 0x1DB92CC
	0x01DB92E4 MOVZ W2, 0x3
	0x01DB92E8 MOV X0, X20
	0x01DB92EC BL 0x1C5C788
	0x01DB92F0 B 0x1DB9304
	0x01DB92F4 LDR W9, [X10]
	0x01DB92F8 ADD W9, W9, 0x3
	0x01DB92FC ADD X8, X8, W9, 0x4, SXTW
	0x01DB9300 ADD X0, X8, 0x138
	0x01DB9304 LDP X8, X1, [X0]
	0x01DB9308 MOV X0, X20
	0x01DB930C BLR X8
	0x01DB9310 LDRB W8, [X22 + 0x190]
	0x01DB9314 CBZ W8, 0x1DB93DC
	0x01DB9318 ADRP X8, 0x233A000
	0x01DB931C LDR X8, [X8 + 0xAB0]
	0x01DB9320 MOVZ W1, 0x1
	0x01DB9324 ADD X21, X22, 0x190
	0x01DB9328 LDR X0, [X8]
	0x01DB932C BL 0x1C16D6C
	0x01DB9330 ADRP X8, 0x233D000
	0x01DB9334 LDR X8, [X8 + 0xF00]
	0x01DB9338 MOV X20, X0
	0x01DB933C MOV X0, X21
	0x01DB9340 LDR X1, [X8]
	0x01DB9344 BL 0x2434214
	0x01DB9348 ADRP X8, 0x233E000
	0x01DB934C LDR V8, [X22 + 0x174]
	0x01DB9350 LDR X8, [X8 + 0xC70]
	0x01DB9354 MOV W21, W0
	0x01DB9358 LDR X8, [X8]
	0x01DB935C MOV X0, X8
	0x01DB9360 BL 0x1C16F10
	0x01DB9364 MOV X1, X31
	0x01DB9368 MOV X22, X0
	0x01DB936C BL 0x1D36B98
	0x01DB9370 LDR X8, [X22]
	0x01DB9374 STR W21, [X22 + 0x14]
	0x01DB9378 STR S8, [X22 + 0x18]
	0x01DB937C MOVZ W1, 0x1
	0x01DB9380 LDP X9, X2, [X8 + 0x198]
	0x01DB9384 MOV X0, X22
	0x01DB9388 BLR X9
	0x01DB938C CBZ X20, 0x1DB9424
	0x01DB9390 MOV X21, X0
	0x01DB9394 CBZ X0, 0x1DB93AC
	0x01DB9398 LDR X8, [X20]
	0x01DB939C MOV X0, X21
	0x01DB93A0 LDR X1, [X8 + 0x40]
	0x01DB93A4 BL 0x1C16E00
	0x01DB93A8 CBZ X0, 0x1DB942C
	0x01DB93AC LDR W8, [X20 + 0x18]
	0x01DB93B0 CBZ W8, 0x1DB9428
	0x01DB93B4 STR X21, [X20 + 0x20]
	0x01DB93B8 ADRP X8, 0x233A000
	0x01DB93BC LDR X8, [X8 + 0x648]
	0x01DB93C0 LDR X0, [X8]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], D14
	003 Move [X31+40], D13
	004 Move [X31+48], D12
	005 Move [X31+56], D11
	006 Move [X31+64], D10
	007 Move [X31+72], D9
	008 Move [X31+80], D8
	009 Move [X31+88], X30
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X20, 0x2620000
	015 Move W8, [X20+2846]
	016 Move X21, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x233D000
	023 Move X0, [X0+2464]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+2846], W8
	027 Move [X31+16], X31
	028 Move [X31+24], X31
	029 Move [X31+8], X31
	030 Move W20, [X21+36]
	031 Move S8, [X21+40]
	032 Move S9, [X21+44]
	033 Move S10, [X21+48]
	034 Move S11, [X21+52]
	035 Move S12, [X21+56]
	036 Move S13, [X21+60]
	037 Move V14, [X21+64]
	038 Add X0, X21, 68
	039 Add X1, X31, 24
	040 Move X2, X31
	041 Add X22, X21, 28
	042 Call ReadWriteUtilsForWeaver.ReadStringUtf8NoHash, X0, X1
	043 Add W8, W0, 43
	044 And W21, W8, 0xFFFFFFFC
	045 Add X0, X22, W21
	046 Add X1, X31, 16
	047 Move X2, X31
	048 Call ReadWriteUtilsForWeaver.ReadStringUtf8NoHash, X0, X1
	049 Add W8, W0, 3
	050 And W8, W8, 0xFFFFFFFC
	051 Add W21, W8, W21
	052 Add X0, X22, W21
	053 Add X1, X31, 8
	054 Move X2, X31
	055 Call ReadWriteUtilsForWeaver.ReadStringUtf8NoHash, X0, X1
	056 Compare X19, 0
	057 JumpIfEqual {104}
	058 Move X9, 0x233D000
	059 Move X9, [X9+2464]
	060 Add W8, W0, 3
	061 And W8, W8, 0xFFFFFFFC
	062 Move W10, 1
	063 Add W8, W21, W8
	064 Move X5, [X22]
	065 Move [X19+88], W10
	066 Move X8, [X19]
	067 Move X1, [X9]
	068 Move W10, [X8+304]
	069 Move W9, [X1+304]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X8+200]
	072 Add X8, X8, X9
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X3, [X31+16]
	076 Move X2, [X31+24]
	077 Move X4, [X31+8]
	078 Move X0, X19
	079 Move W1, W20
	080 Move V0, V8
	081 Move V1, V9
	082 Move V2, V10
	083 Move V3, V11
	084 Move V4, V12
	085 Move V5, V13
	086 Move V6, V14
	087 Call NetPlayer.RPC_PlayerHit, X0, X1, X2, X3, X4, X5, X6, X7
	088 Move X20, [X31+112]
	089 Move X19, [X31+120]
	090 Move X22, [X31+96]
	091 Move X21, [X31+104]
	092 Move X30, [X31+88]
	093 Move D9, [X31+72]
	094 Move D8, [X31+80]
	095 Move D11, [X31+56]
	096 Move D10, [X31+64]
	097 Move D13, [X31+40]
	098 Move D12, [X31+48]
	099 Move V14, [X31+32]
	100 Add X31, X31, 128
	101 Return 
	102 Move X0, X19
	103 Call 0x1C181E0
	104 Call 0x1C17F20

Method: System.Void RPC_PlayerHit@Invoker2(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01DB93C4 LDR W8, [X0 + 0xE0]
	0x01DB93C8 CBNZ W8, 0x1DB93D0
	0x01DB93CC BL 0x1C16DFC
	0x01DB93D0 MOV X0, X20
	0x01DB93D4 MOV X1, X31
	0x01DB93D8 BL 0x1D351C4
	0x01DB93DC ADRP X8, 0x233D000
	0x01DB93E0 LDR X8, [X8 + 0xC30]
	0x01DB93E4 LDR X0, [X8]
	0x01DB93E8 BL 0x1C16F10
	0x01DB93EC FMOV S0, 0.5
	0x01DB93F0 MOV X1, X31
	0x01DB93F4 MOV X20, X0
	0x01DB93F8 BL 0x3C3A634
	0x01DB93FC MOVZ W8, 0x1
	0x01DB9400 STR X20, [X19 + 0x18]
	0x01DB9404 STR W8, [X19 + 0x10]
	0x01DB9408 CMP W23, 0x2
	0x01DB940C LDP X20, X19, [X31 + 0x30]
	0x01DB9410 LDP X22, X21, [X31 + 0x20]
	0x01DB9414 LDP X30, X23, [X31 + 0x10]
	0x01DB9418 CSET W0, CC
	0x01DB941C LDR V8, [X31], #0x40
	0x01DB9420 RET
	0x01DB9424 BL 0x1C16F20
	0x01DB9428 BL 0x1C16F28
	0x01DB942C BL 0x1C16F44
	0x01DB9430 MOV X1, X31
	0x01DB9434 BL 0x1C16DEC
	0x01DB9438 LDR X0, [X0 + 0x18]
	0x01DB943C RET
	0x01DB9440 STP X30, X19, [X31 - 0x10]!
	0x01DB9444 ADRP X0, 0x233A000
	0x01DB9448 LDR X0, [X0 + 0xB40]
	0x01DB944C BL 0x1C16D08
	0x01DB9450 BL 0x1C16F10
	0x01DB9454 MOV X1, X31
	0x01DB9458 MOV X19, X0
	0x01DB945C BL 0x3380310
	0x01DB9460 ADRP X0, 0x233E000
	0x01DB9464 LDR X0, [X0 + 0xC88]
	0x01DB9468 BL 0x1C16D08
	0x01DB946C MOV X1, X0
	0x01DB9470 MOV X0, X19
	0x01DB9474 BL 0x1C16DEC
	0x01DB9478 LDR X0, [X0 + 0x18]
	0x01DB947C RET
	0x01DB9480 RET
	0x01DB9484 RET
	0x01DB9488 MOV X1, X31
	0x01DB948C B 0x3C36C30
	0x01DB9490 SUB X31, X31, 0x60
	0x01DB9494 STP X30, X27, [X31 + 0x10]
	0x01DB9498 STP X26, X25, [X31 + 0x20]
	0x01DB949C STP X24, X23, [X31 + 0x30]
	0x01DB94A0 STP X22, X21, [X31 + 0x40]
	0x01DB94A4 STP X20, X19, [X31 + 0x50]
	0x01DB94A8 ADRP X20, 0x261F000
	0x01DB94AC LDRB W8, [X20 + 0xB2A]
	0x01DB94B0 MOV X19, X0
	0x01DB94B4 TBNZ X8, 0x0, 0x1DB94E4
	0x01DB94B8 ADRP X0, 0x233E000
	0x01DB94BC LDR X0, [X0 + 0xC90]
	0x01DB94C0 BL 0x1C16CF4
	0x01DB94C4 ADRP X0, 0x233E000
	0x01DB94C8 LDR X0, [X0 + 0xC98]
	0x01DB94CC BL 0x1C16CF4
	0x01DB94D0 ADRP X0, 0x233E000
	0x01DB94D4 LDR X0, [X0 + 0xCA0]
	0x01DB94D8 BL 0x1C16CF4
	0x01DB94DC MOVZ W8, 0x1
	0x01DB94E0 STRB W8, [X20 + 0xB2A]
	0x01DB94E4 STR X31, [X31 + 0x8]
	0x01DB94E8 LDR X23, [X19 + 0x20]
	0x01DB94EC CBZ X23, 0x1DB95DC
	0x01DB94F0 LDR W8, [X23 + 0x18]
	0x01DB94F4 CMP W8, 0x1
	0x01DB94F8 B.LT 0x1DB95C0
	0x01DB94FC ADRP X25, 0x233E000
	0x01DB9500 ADRP X26, 0x233E000
	0x01DB9504 ADRP X27, 0x233E000
	0x01DB9508 LDR X25, [X25 + 0xC98]
	0x01DB950C LDR X26, [X26 + 0xCA0]
	0x01DB9510 LDR X27, [X27 + 0xC90]
	0x01DB9514 MOV W24, W31
	0x01DB9518 CMP W24, W8
	0x01DB951C B.CS 0x1DB95E0
	0x01DB9520 ADD X8, X23, W24, 0x3, SXTW
	0x01DB9524 LDR X20, [X8 + 0x20]
	0x01DB9528 CBZ X20, 0x1DB95DC
	0x01DB952C LDR X21, [X19 + 0x78]
	0x01DB9530 MOV X0, X20
	0x01DB9534 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+48], D15
	003 Move [X31+56], D14
	004 Move [X31+64], D13
	005 Move [X31+72], D12
	006 Move [X31+80], D11
	007 Move [X31+88], D10
	008 Move [X31+96], D9
	009 Move [X31+104], D8
	010 Move [X31+112], X30
	011 Move [X31+128], X22
	012 Move [X31+136], X21
	013 Move [X31+144], X20
	014 Move [X31+152], X19
	015 Move X20, 0x2620000
	016 Move W8, [X20+2847]
	017 Move X21, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x233D000
	024 Move X0, [X0+2464]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+2847], W8
	028 Move [X31+120], X31
	029 Move [X31+32], X31
	030 Move [X31+40], X31
	031 Move V1, [X21+40]
	032 Move S0, [X21+44]
	033 Move S10, [X21+48]
	034 Move W20, [X21+36]
	035 Move S11, [X21+52]
	036 Move S12, [X21+56]
	037 Move S13, [X21+60]
	038 Move S14, [X21+64]
	039 Add X0, X21, 68
	040 Add X1, X31, 120
	041 Move X2, X31
	042 Move [X31+24], S0
	043 Move [X31+32], S1
	044 Add X22, X21, 28
	045 Call ReadWriteUtilsForWeaver.ReadStringUtf8NoHash, X0, X1
	046 Add W8, W0, 43
	047 And W21, W8, 0xFFFFFFFC
	048 Add X0, X22, W21
	049 Add X1, X31, 40
	050 Move X2, X31
	051 Call ReadWriteUtilsForWeaver.ReadStringUtf8NoHash, X0, X1
	052 Add W8, W0, 3
	053 And W8, W8, 0xFFFFFFFC
	054 Add W8, W8, W21
	055 Add X9, X22, W8
	056 Move S15, [X9]
	057 Move S8, [X9+4]
	058 Move V9, [X9+8]
	059 Add W21, W8, 12
	060 Add X0, X22, W21
	061 Add X1, X31, 32
	062 Move X2, X31
	063 Call ReadWriteUtilsForWeaver.ReadStringUtf8NoHash, X0, X1
	064 Compare X19, 0
	065 JumpIfEqual {116}
	066 Move X9, 0x233D000
	067 Move X9, [X9+2464]
	068 Add W8, W0, 3
	069 And W8, W8, 0xFFFFFFFC
	070 Move W10, 1
	071 Add W8, W8, W21
	072 Move X5, [X22]
	073 Move [X19+88], W10
	074 Move X8, [X19]
	075 Move X1, [X9]
	076 Move W10, [X8+304]
	077 Move W9, [X1+304]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X8, [X8+200]
	080 Add X8, X8, X9
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X2, [X31+120]
	084 Move X4, [X31+32]
	085 Move X3, [X31+40]
	086 Move S1, [X31+24]
	087 Move S0, [X31+28]
	088 Move X0, X19
	089 Move W1, W20
	090 Move V2, V10
	091 Move V3, V11
	092 Move V4, V12
	093 Move V5, V13
	094 Move V6, V14
	095 Move [X31+4], S8
	096 Move [X31+12], S9
	097 Move [X31], S15
	098 Call NetPlayer.RPC_PlayerHit, X0, X1, X2, X3, X4, X5, X6, X7, X8
	099 Move X20, [X31+144]
	100 Move X19, [X31+152]
	101 Move X22, [X31+128]
	102 Move X21, [X31+136]
	103 Move X30, [X31+112]
	104 Move D9, [X31+96]
	105 Move D8, [X31+104]
	106 Move D11, [X31+80]
	107 Move D10, [X31+88]
	108 Move D13, [X31+64]
	109 Move D12, [X31+72]
	110 Move D15, [X31+48]
	111 Move D14, [X31+56]
	112 Add X31, X31, 160
	113 Return 
	114 Move X0, X19
	115 Call 0x1C181E0
	116 Call 0x1C17F20

Method: System.Void RPC_PlayerHit@Invoker3(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01DB9538 BL 0x3C1349C
	0x01DB953C CBZ X21, 0x1DB95DC
	0x01DB9540 LDR X3, [X25]
	0x01DB9544 MOV X1, X0
	0x01DB9548 ADD X2, X31, 0x8
	0x01DB954C MOV X0, X21
	0x01DB9550 BL 0x2AA6B2C
	0x01DB9554 TBNZ X0, 0x0, 0x1DB95A0
	0x01DB9558 MOV X0, X20
	0x01DB955C MOV X1, X31
	0x01DB9560 BL 0x3C1349C
	0x01DB9564 LDR X8, [X26]
	0x01DB9568 MOV X21, X0
	0x01DB956C MOV X0, X8
	0x01DB9570 BL 0x1C16F10
	0x01DB9574 MOV X1, X21
	0x01DB9578 MOV X2, X31
	0x01DB957C MOV X22, X0
	0x01DB9580 BL 0x3C145DC
	0x01DB9584 STR X22, [X31 + 0x8]
	0x01DB9588 LDR X0, [X19 + 0x78]
	0x01DB958C CBZ X0, 0x1DB95DC
	0x01DB9590 LDR X3, [X27]
	0x01DB9594 MOV X1, X21
	0x01DB9598 MOV X2, X22
	0x01DB959C BL 0x2AA5098
	0x01DB95A0 LDR X1, [X31 + 0x8]
	0x01DB95A4 MOV X0, X20
	0x01DB95A8 MOV X2, X31
	0x01DB95AC BL 0x3C134D8
	0x01DB95B0 LDR W8, [X23 + 0x18]
	0x01DB95B4 ADD W24, W24, 0x1
	0x01DB95B8 CMP W24, W8
	0x01DB95BC B.LT 0x1DB9518
	0x01DB95C0 LDP X20, X19, [X31 + 0x50]
	0x01DB95C4 LDP X22, X21, [X31 + 0x40]
	0x01DB95C8 LDP X24, X23, [X31 + 0x30]
	0x01DB95CC LDP X26, X25, [X31 + 0x20]
	0x01DB95D0 LDP X30, X27, [X31 + 0x10]
	0x01DB95D4 ADD X31, X31, 0x60
	0x01DB95D8 RET
	0x01DB95DC BL 0x1C16F20
	0x01DB95E0 BL 0x1C16F28
	0x01DB95E4 STR D14, [X31 - 0x70]!
	0x01DB95E8 STP D13, D12, [X31 + 0x8]
	0x01DB95EC STP D11, D10, [X31 + 0x18]
	0x01DB95F0 STP D9, D8, [X31 + 0x28]
	0x01DB95F4 STR X30, [X31 + 0x38]
	0x01DB95F8 STP X24, X23, [X31 + 0x40]
	0x01DB95FC STP X22, X21, [X31 + 0x50]
	0x01DB9600 STP X20, X19, [X31 + 0x60]
	0x01DB9604 MOV X19, X0
	0x01DB9608 LDR X0, [X0 + 0x28]
	0x01DB960C CBZ X0, 0x1DB9A48
	0x01DB9610 LDR X20, [X19 + 0x40]
	0x01DB9614 MOV X1, X31
	0x01DB9618 BL 0x3C3F58C
	0x01DB961C LDR X0, [X19 + 0x28]
	0x01DB9620 CBZ X0, 0x1DB9A48
	0x01DB9624 MOV X1, X31
	0x01DB9628 MOV V8.16B, V0.16B
	0x01DB962C MOV V9.16B, V1.16B
	0x01DB9630 MOV V10.16B, V2.16B
	0x01DB9634 BL 0x3C3F988
	0x01DB9638 CBZ X20, 0x1DB9A48
	0x01DB963C ADRP X8, 0xFFFFFFFFFED30000
	0x01DB9640 LDR V3, [X8 + 0xF24]
	0x01DB9644 MOV X0, X20
	0x01DB9648 MOV X1, X31
	0x01DB964C FMUL S2, S2, S3
	0x01DB9650 FMUL S1, S1, S3
	0x01DB9654 FMUL S0, S0, S3
	0x01DB9658 FSUB S2, S10, S2
	0x01DB965C FSUB S1, S9, S1
	0x01DB9660 FSUB S0, S8, S0
	0x01DB9664 BL 0x3C3F62C
	0x01DB9668 LDR X0, [X19 + 0x28]
	0x01DB966C CBZ X0, 0x1DB9A48
	0x01DB9670 MOV X1, X31
	0x01DB9674 BL 0x3C3FA04
	0x01DB9678 ADRP X22, 0x261F000
	0x01DB967C LDRB W8, [X22 + 0x785]
	0x01DB9680 MOV V8.16B, V0.16B
	0x01DB9684 MOV V9.16B, V2.16B
	0x01DB9688 CBNZ W8, 0x1DB96A0
	0x01DB968C ADRP X0, 0x233A000
	0x01DB9690 LDR X0, [X0 + 0x5A8]
	0x01DB9694 BL 0x1C16CF4
	0x01DB9698 MOVZ W8, 0x1
	0x01DB969C STRB W8, [X22 + 0x785]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+16], D14
	003 Move [X31+32], D13
	004 Move [X31+40], D12
	005 Move [X31+48], D11
	006 Move [X31+56], D10
	007 Move [X31+64], D9
	008 Move [X31+72], D8
	009 Move [X31+80], X30
	010 Move [X31+88], X23
	011 Move [X31+96], X22
	012 Move [X31+104], X21
	013 Move [X31+112], X20
	014 Move [X31+120], X19
	015 Move X20, 0x2620000
	016 Move W8, [X20+2848]
	017 Move X21, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x233D000
	024 Move X0, [X0+2464]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+2848], W8
	028 Move [X31+24], X31
	029 Move [X31], X31
	030 Move [X31+8], X31
	031 Move W20, [X21+36]
	032 Move S8, [X21+40]
	033 Move S9, [X21+44]
	034 Move S10, [X21+48]
	035 Move S11, [X21+52]
	036 Move S12, [X21+56]
	037 Move S13, [X21+60]
	038 Move V14, [X21+64]
	039 Add X0, X21, 68
	040 Add X1, X31, 24
	041 Move X2, X31
	042 Add X22, X21, 28
	043 Call ReadWriteUtilsForWeaver.ReadStringUtf8NoHash, X0, X1
	044 Add W8, W0, 43
	045 And W21, W8, 0xFFFFFFFC
	046 Add X0, X22, W21
	047 Add X1, X31, 8
	048 Move X2, X31
	049 Call ReadWriteUtilsForWeaver.ReadStringUtf8NoHash, X0, X1
	050 Add W8, W0, 3
	051 And W8, W8, 0xFFFFFFFC
	052 Add W8, W8, W21
	053 Move W21, [X22]
	054 Add W23, W8, 4
	055 Add X0, X22, W23
	056 Add X1, X31, 0
	057 Move X2, X31
	058 Call ReadWriteUtilsForWeaver.ReadStringUtf8NoHash, X0, X1
	059 Compare X19, 0
	060 JumpIfEqual {109}
	061 Move X9, 0x233D000
	062 Move X9, [X9+2464]
	063 Add W8, W0, 3
	064 And W8, W8, 0xFFFFFFFC
	065 Move W10, 1
	066 Add W8, W23, W8
	067 Move X6, [X22]
	068 Move [X19+88], W10
	069 Move X8, [X19]
	070 Move X1, [X9]
	071 Move W10, [X8+304]
	072 Move W9, [X1+304]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X8, [X8+200]
	075 Add X8, X8, X9
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X2, [X31+24]
	079 Move X5, [X31]
	080 Move X3, [X31+8]
	081 Move X0, X19
	082 Move W1, W20
	083 Move V0, V8
	084 Move V1, V9
	085 Move V2, V10
	086 Move V3, V11
	087 Move V4, V12
	088 Move V5, V13
	089 Move V6, V14
	090 Move W4, W21
	091 Call NetPlayer.RPC_PlayerHit, X0, X1, X2, X3, X4, X5, X6, X7, X8
	092 Move X20, [X31+112]
	093 Move X19, [X31+120]
	094 Move X22, [X31+96]
	095 Move X21, [X31+104]
	096 Move X30, [X31+80]
	097 Move X23, [X31+88]
	098 Move D9, [X31+64]
	099 Move D8, [X31+72]
	100 Move D11, [X31+48]
	101 Move D10, [X31+56]
	102 Move D13, [X31+32]
	103 Move D12, [X31+40]
	104 Move V14, [X31+16]
	105 Add X31, X31, 128
	106 Return 
	107 Move X0, X19
	108 Call 0x1C181E0
	109 Call 0x1C17F20

Method: System.Void RPC_RequestAvatarRefresh@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01DB96A0 ADRP X23, 0x233A000
	0x01DB96A4 LDR X23, [X23 + 0x5A8]
	0x01DB96A8 LDR X0, [X23]
	0x01DB96AC LDR W8, [X0 + 0xE0]
	0x01DB96B0 CBNZ W8, 0x1DB96B8
	0x01DB96B4 BL 0x1C16DFC
	0x01DB96B8 ADRP X8, 0xFFFFFFFFFED31000
	0x01DB96BC FMUL S1, S8, S8
	0x01DB96C0 FMOV S0, W31
	0x01DB96C4 LDR V11, [X8 + 0x17C]
	0x01DB96C8 ADRP X21, 0x233A000
	0x01DB96CC FADD S1, S1, S0
	0x01DB96D0 FMUL S2, S9, S9
	0x01DB96D4 LDR X21, [X21 + 0x5A0]
	0x01DB96D8 FADD S1, S2, S1
	0x01DB96DC FSQRT S1, S1
	0x01DB96E0 FCMP S1, S11
	0x01DB96E4 B.LE 0x1DB96F8
	0x01DB96E8 FDIV S8, S8, S1
	0x01DB96EC FDIV S10, S0, S1
	0x01DB96F0 FDIV S9, S9, S1
	0x01DB96F4 B 0x1DB9728
	0x01DB96F8 ADRP X20, 0x261F000
	0x01DB96FC LDRB W8, [X20 + 0x783]
	0x01DB9700 CBNZ W8, 0x1DB9718
	0x01DB9704 ADRP X0, 0x233A000
	0x01DB9708 LDR X0, [X0 + 0x5A0]
	0x01DB970C BL 0x1C16CF4
	0x01DB9710 MOVZ W8, 0x1
	0x01DB9714 STRB W8, [X20 + 0x783]
	0x01DB9718 LDR X8, [X21]
	0x01DB971C LDR X8, [X8 + 0xB8]
	0x01DB9720 LDP S8, S10, [X8]
	0x01DB9724 LDR V9, [X8 + 0x8]
	0x01DB9728 ADRP X24, 0x261F000
	0x01DB972C LDRB W8, [X24 + 0x786]
	0x01DB9730 LDR X20, [X19 + 0x40]
	0x01DB9734 CBNZ W8, 0x1DB974C
	0x01DB9738 ADRP X0, 0x233A000
	0x01DB973C LDR X0, [X0 + 0x5A0]
	0x01DB9740 BL 0x1C16CF4
	0x01DB9744 MOVZ W8, 0x1
	0x01DB9748 STRB W8, [X24 + 0x786]
	0x01DB974C LDR X8, [X21]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2620000
	007 Move W8, [X21+2849]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x233D000
	015 Move X0, [X0+2464]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2849], W8
	019 Add X0, X20, 36
	020 Add X1, X31, 8
	021 Move X2, X31
	022 Move [X31+8], X31
	023 Call ReadWriteUtilsForWeaver.ReadStringUtf8NoHash, X0, X1
	024 Compare X19, 0
	025 JumpIfEqual {50}
	026 Move X9, 0x233D000
	027 Move X9, [X9+2464]
	028 Move W8, 1
	029 Move [X19+88], W8
	030 Move X8, [X19]
	031 Move X1, [X9]
	032 Move W10, [X8+304]
	033 Move W9, [X1+304]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X8, [X8+200]
	036 Add X8, X8, X9
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X1, [X31+8]
	040 Move X0, X19
	041 Call NetPlayer.RPC_RequestAvatarRefresh, X0, X1
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X30, [X31+16]
	045 Move X21, [X31+24]
	046 Add X31, X31, 48
	047 Return 
	048 Move X0, X19
	049 Call 0x1C181E0
	050 Call 0x1C17F20

Method: System.Void RPC_PlayerStun@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01DB9750 MOV V0.16B, V8.16B
	0x01DB9754 MOV V1.16B, V10.16B
	0x01DB9758 MOV V2.16B, V9.16B
	0x01DB975C LDR X8, [X8 + 0xB8]
	0x01DB9760 MOV X0, X31
	0x01DB9764 LDP S3, S4, [X8 + 0x18]
	0x01DB9768 LDR V5, [X8 + 0x20]
	0x01DB976C BL 0x3C2A810
	0x01DB9770 CBZ X20, 0x1DB9A48
	0x01DB9774 MOV X0, X20
	0x01DB9778 MOV X1, X31
	0x01DB977C BL 0x3C3F7AC
	0x01DB9780 LDR X0, [X19 + 0x30]
	0x01DB9784 CBZ X0, 0x1DB9A48
	0x01DB9788 LDR X20, [X19 + 0x48]
	0x01DB978C MOV X1, X31
	0x01DB9790 BL 0x3C3F58C
	0x01DB9794 CBZ X20, 0x1DB9A48
	0x01DB9798 MOV X0, X20
	0x01DB979C MOV X1, X31
	0x01DB97A0 BL 0x3C3F62C
	0x01DB97A4 LDR X0, [X19 + 0x48]
	0x01DB97A8 CBZ X0, 0x1DB9A48
	0x01DB97AC MOV X1, X31
	0x01DB97B0 BL 0x3C3F58C
	0x01DB97B4 LDR X0, [X19 + 0x58]
	0x01DB97B8 CBZ X0, 0x1DB9A48
	0x01DB97BC MOV X1, X31
	0x01DB97C0 MOV V8.16B, V0.16B
	0x01DB97C4 MOV V9.16B, V1.16B
	0x01DB97C8 MOV V10.16B, V2.16B
	0x01DB97CC BL 0x3C3F58C
	0x01DB97D0 LDR X0, [X19 + 0x30]
	0x01DB97D4 CBZ X0, 0x1DB9A48
	0x01DB97D8 MOV X1, X31
	0x01DB97DC FSUB S12, S10, S2
	0x01DB97E0 FSUB S13, S9, S1
	0x01DB97E4 FSUB S14, S8, S0
	0x01DB97E8 BL 0x3C3FA04
	0x01DB97EC LDRB W8, [X22 + 0x785]
	0x01DB97F0 MOV V8.16B, V0.16B
	0x01DB97F4 MOV V9.16B, V1.16B
	0x01DB97F8 MOV V10.16B, V2.16B
	0x01DB97FC CBNZ W8, 0x1DB9814
	0x01DB9800 ADRP X0, 0x233A000
	0x01DB9804 LDR X0, [X0 + 0x5A8]
	0x01DB9808 BL 0x1C16CF4
	0x01DB980C MOVZ W8, 0x1
	0x01DB9810 STRB W8, [X22 + 0x785]
	0x01DB9814 LDR X0, [X23]
	0x01DB9818 FADD S8, S14, S8
	0x01DB981C FADD S9, S13, S9
	0x01DB9820 FADD S10, S12, S10
	0x01DB9824 LDR W8, [X0 + 0xE0]
	0x01DB9828 CBNZ W8, 0x1DB9830
	0x01DB982C BL 0x1C16DFC
	0x01DB9830 FMUL S0, S8, S8
	0x01DB9834 FMUL S1, S9, S9
	0x01DB9838 FADD S0, S0, S1
	0x01DB983C FMUL S1, S10, S10
	0x01DB9840 FADD S0, S1, S0
	0x01DB9844 FSQRT S0, S0
	0x01DB9848 FCMP S0, S11

ISIL:
	001 Move [X31-80], D12
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x2620000
	011 Move W8, [X21+2850]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x233D000
	019 Move X0, [X0+2464]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+2850], W8
	023 Move [X31+8], X31
	024 Move S8, [X20+36]
	025 Move S9, [X20+40]
	026 Move S10, [X20+44]
	027 Move S11, [X20+48]
	028 Move V12, [X20+52]
	029 Add X0, X20, 56
	030 Add X1, X31, 8
	031 Move X2, X31
	032 Call ReadWriteUtilsForWeaver.ReadStringUtf8NoHash, X0, X1
	033 Compare X19, 0
	034 JumpIfEqual {75}
	035 Move X9, 0x233D000
	036 Add W10, W0, 31
	037 Move X9, [X9+2464]
	038 Move X10, W10
	039 Add X8, X20, 28
	040 And X10, X10, 0xFFFFFFFF
	041 Move W11, 1
	042 Move X2, [X8]
	043 Add W10, W10, 8
	044 Move W3, [X8]
	045 Move [X19+88], W11
	046 Move X8, [X19]
	047 Move X1, [X9]
	048 Move W10, [X8+304]
	049 Move W9, [X1+304]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X8, [X8+200]
	052 Add X8, X8, X9
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X1, [X31+8]
	056 Move X0, X19
	057 Move V0, V8
	058 Move V1, V9
	059 Move V2, V10
	060 Move V3, V11
	061 Move V4, V12
	062 Call NetPlayer.RPC_PlayerStun, X0, X1, V0, V1, X2, X3, X4
	063 Move X20, [X31+64]
	064 Move X19, [X31+72]
	065 Move X30, [X31+48]
	066 Move X21, [X31+56]
	067 Move D9, [X31+32]
	068 Move D8, [X31+40]
	069 Move D11, [X31+16]
	070 Move D10, [X31+24]
	071 Move V12, [X31+80]
	072 Return 
	073 Move X0, X19
	074 Call 0x1C181E0
	075 Call 0x1C17F20

