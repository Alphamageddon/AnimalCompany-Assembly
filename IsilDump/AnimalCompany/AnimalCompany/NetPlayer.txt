Type: AnimalCompany.NetPlayer

Method: System.Int32 get_Token()

Disassembly:
	0x01CB6EF4 STRB W8, [X23 + 0x4EB]
	0x01CB6EF8 AND W2, W21, 0x1
	0x01CB6EFC MOV X0, X19
	0x01CB6F00 MOV X1, X20
	0x01CB6F04 MOV X3, X31
	0x01CB6F08 BL 0x1D65288
	0x01CB6F0C LDR X0, [X22]
	0x01CB6F10 LDR W8, [X0 + 0xE0]
	0x01CB6F14 CBNZ W8, 0x1CB6F20
	0x01CB6F18 BL 0x1B6E8F8
	0x01CB6F1C LDR X0, [X22]
	0x01CB6F20 LDR X8, [X19 + 0x40]
	0x01CB6F24 CBZ X8, 0x1CB6FFC
	0x01CB6F28 LDR X9, [X0 + 0xB8]
	0x01CB6F2C LDR X8, [X8 + 0x20]
	0x01CB6F30 LDR X0, [X9]
	0x01CB6F34 CBZ X8, 0x1CB6FF4
	0x01CB6F38 LDR W1, [X8]
	0x01CB6F3C CBZ X0, 0x1CB6FFC
	0x01CB6F40 ADRP X8, 0x2298000
	0x01CB6F44 LDR X8, [X8 + 0xF58]
	0x01CB6F48 ADRP X22, 0x2298000
	0x01CB6F4C ADRP X23, 0x2298000
	0x01CB6F50 ADRP X21, 0x2298000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move W0, [X8]
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0
	010 Move X0, 0x2298000
	011 Move X0, [X0+1168]
	012 Call 0x1B6F804
	013 Call 0x1B6FA0C
	014 Move X19, X0
	015 Move X0, 0x2299000
	016 Move X0, [X0+3712]
	017 Call 0x1B6F804
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x2299000
	023 Move X0, [X0+3720]
	024 Call 0x1B6F804
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1B6F8E8

Method: System.Void set_Token(System.Int32 value)

Disassembly:
	0x01CB6F54 LDR X2, [X8]
	0x01CB6F58 LDR X22, [X22 + 0x198]
	0x01CB6F5C LDR X23, [X23 + 0xEF8]
	0x01CB6F60 LDR X21, [X21 + 0xF18]
	0x01CB6F64 BL 0x2962594
	0x01CB6F68 LDR X0, [X22]
	0x01CB6F6C LDR W8, [X0 + 0xE0]
	0x01CB6F70 CBNZ W8, 0x1CB6F7C
	0x01CB6F74 BL 0x1B6E8F8
	0x01CB6F78 LDR X0, [X22]
	0x01CB6F7C LDR X8, [X0 + 0xB8]
	0x01CB6F80 LDR X0, [X23]
	0x01CB6F84 LDR X20, [X8 + 0x18]
	0x01CB6F88 BL 0x1B6EA0C
	0x01CB6F8C LDR X2, [X21]
	0x01CB6F90 MOV X1, X19
	0x01CB6F94 MOV X3, X31
	0x01CB6F98 MOV X21, X0
	0x01CB6F9C BL 0x28D5A38
	0x01CB6FA0 MOV X0, X20
	0x01CB6FA4 MOV X1, X21
	0x01CB6FA8 MOV X2, X31
	0x01CB6FAC BL 0x322A948
	0x01CB6FB0 CBZ X0, 0x1CB7000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move [X8], W1
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 
	010 Move X0, 0x2298000
	011 Move X0, [X0+1168]
	012 Call 0x1B6F804
	013 Call 0x1B6FA0C
	014 Move X19, X0
	015 Move X0, 0x2299000
	016 Move X0, [X0+3712]
	017 Call 0x1B6F804
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x2299000
	023 Move X0, [X0+3728]
	024 Call 0x1B6F804
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1B6F8E8

Method: UnityEngine.Color get_playerColor()

Disassembly:
	0x01CB5848 FMUL S3, S9, S3
	0x01CB584C FADD V10.2S, V1.2S, V0.2S
	0x01CB5850 FADD S9, S3, S2
	0x01CB5854 LDUR V11, [X19 + 0x3C]
	0x01CB5858 LDR V12, [X19 + 0x44]
	0x01CB585C LDR V13, [X19 + 0x38]
	0x01CB5860 MOV X0, X31
	0x01CB5864 BL 0x3AA481C
	0x01CB5868 FMUL S0, S13, S0
	0x01CB586C FMOV S1, 1
	0x01CB5870 FMIN S1, S0, S1
	0x01CB5874 FCMP S0, 0x0
	0x01CB5878 FMOV S0, W31
	0x01CB587C LDR X0, [X19 + 0x20]
	0x01CB5880 FSUB V2.2S, V10.2S, V11.2S
	0x01CB5884 FSUB S3, S9, S12
	0x01CB5888 FCSEL S0, S1, S0, PL
	0x00000000 INVALID
	0x01CB5890 FMUL S0, S3, S0
	0x01CB5894 FADD V1.2S, V11.2S, V1.2S
	0x01CB5898 FADD S0, S12, S0
	0x01CB589C STUR D1, [X19 + 0x3C]
	0x01CB58A0 STR S0, [X19 + 0x44]
	0x01CB58A4 CBZ X0, 0x1CB5AB0
	0x01CB58A8 LDR X20, [X19 + 0x30]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {13}
	006 Move S0, [X8+4]
	007 Move S1, [X8+8]
	008 Move S2, [X8+12]
	009 Move S3, [X8+16]
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return X0
	013 Move X0, 0x2299000
	014 Move X0, [X0+1168]
	015 Call 0x1B6F804
	016 Call 0x1B6FA0C
	017 Move X19, X0
	018 Move X0, 0x229A000
	019 Move X0, [X0+3584]
	020 Call 0x1B6F804
	021 Move X1, X0
	022 Move X0, X19
	023 Move X2, X31
	024 Call InvalidOperationException..ctor, X0, X1
	025 Move X0, 0x229A000
	026 Move X0, [X0+3592]
	027 Call 0x1B6F804
	028 Move X1, X0
	029 Move X0, X19
	030 Call 0x1B6F8E8

Method: System.Void set_playerColor(UnityEngine.Color value)

Disassembly:
	0x01CB6FB4 LDR X21, [X23]
	0x01CB6FB8 MOV X20, X0
	0x01CB6FBC MOV X1, X21
	0x01CB6FC0 BL 0x1B6E8FC
	0x01CB6FC4 CBZ X0, 0x1CB7190
	0x01CB6FC8 LDR X8, [X22]
	0x01CB6FCC LDR X8, [X8 + 0xB8]
	0x01CB6FD0 STR X0, [X8 + 0x18]
	0x01CB6FD4 LDR X21, [X23]
	0x01CB6FD8 MOV X0, X20
	0x01CB6FDC MOV X1, X21
	0x01CB6FE0 BL 0x1B6E8FC
	0x01CB6FE4 CBZ X0, 0x1CB7190
	0x01CB6FE8 LDR X8, [X22]
	0x01CB6FEC LDR X8, [X8 + 0xB8]
	0x01CB6FF0 B 0x1CB700C
	0x01CB6FF4 MOV W1, W31
	0x01CB6FF8 CBNZ X0, 0x1CB6F40
	0x01CB6FFC BL 0x1B6EA1C
	0x01CB7000 LDR X8, [X22]
	0x01CB7004 LDR X8, [X8 + 0xB8]
	0x01CB7008 STR X31, [X8 + 0x18]
	0x01CB700C ADRP X23, 0x2296000
	0x01CB7010 LDR X23, [X23 + 0xB38]
	0x01CB7014 ADRP X21, 0x2297000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {13}
	006 Move [X8+4], S0
	007 Move [X8+12], S1
	008 Move [X8+12], S2
	009 Move [X8+20], S3
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return 
	013 Move X0, 0x2298000
	014 Move X0, [X0+1168]
	015 Call 0x1B6F804
	016 Call 0x1B6FA0C
	017 Move X19, X0
	018 Move X0, 0x2299000
	019 Move X0, [X0+3584]
	020 Call 0x1B6F804
	021 Move X1, X0
	022 Move X0, X19
	023 Move X2, X31
	024 Call InvalidOperationException..ctor, X0, X1
	025 Move X0, 0x2298000
	026 Move X0, [X0+3736]
	027 Call 0x1B6F804
	028 Move X1, X0
	029 Move X0, X19
	030 Call 0x1B6F8E8

Method: System.Boolean get_isDie()

Disassembly:
	0x01CB57E0 ADRP X0, 0x2298000
	0x01CB57E4 LDR X0, [X0 + 0x480]
	0x01CB57E8 BL 0x1B6E7F0
	0x01CB57EC MOVZ W8, 0x1
	0x01CB57F0 STRB W8, [X20 + 0x50E]
	0x01CB57F4 ADRP X20, 0x2298000
	0x01CB57F8 LDR X20, [X20 + 0x480]
	0x01CB57FC ADRP X21, 0x256E000
	0x01CB5800 LDRB W9, [X21 + 0x510]
	0x01CB5804 LDR X8, [X20]
	0x01CB5808 LDR X8, [X8 + 0xB8]
	0x01CB580C LDR V10, [X8 + 0x30]
	0x01CB5810 LDR V9, [X8 + 0x38]
	0x01CB5814 CBNZ W9, 0x1CB5830
	0x01CB5818 MOV X0, X20
	0x01CB581C BL 0x1B6E7F0
	0x01CB5820 LDR X8, [X20]
	0x01CB5824 MOVZ W9, 0x1
	0x01CB5828 STRB W9, [X21 + 0x510]
	0x01CB582C LDR X8, [X8 + 0xB8]
	0x01CB5830 ADD X9, X8, 0x24
	0x01CB5834 ADD X8, X8, 0x2C
	0x01CB5838 LDR V0, [X9]
	0x01CB583C LDR V2, [X8]
	0x01CB5840 FMOV S3, 0.25
	0x00000000 INVALID

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {12}
	006 Move W8, [X8+20]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return X0
	012 Move X0, 0x2299000
	013 Move X0, [X0+1168]
	014 Call 0x1B6F804
	015 Call 0x1B6FA0C
	016 Move X19, X0
	017 Move X0, 0x229A000
	018 Move X0, [X0+3568]
	019 Call 0x1B6F804
	020 Move X1, X0
	021 Move X0, X19
	022 Move X2, X31
	023 Call InvalidOperationException..ctor, X0, X1
	024 Move X0, 0x229A000
	025 Move X0, [X0+3576]
	026 Call 0x1B6F804
	027 Move X1, X0
	028 Move X0, X19
	029 Call 0x1B6F8E8

Method: System.Void set_isDie(System.Boolean value)

Disassembly:
	0x01CB7018 LDR X20, [X8 + 0x20]
	0x01CB701C LDR X0, [X23]
	0x01CB7020 LDR X21, [X21 + 0xF38]
	0x01CB7024 BL 0x1B6EA0C
	0x01CB7028 LDR X2, [X21]
	0x01CB702C MOV X1, X19
	0x01CB7030 MOV X3, X31
	0x01CB7034 MOV X21, X0
	0x01CB7038 BL 0x27E7BCC
	0x01CB703C MOV X0, X20
	0x01CB7040 MOV X1, X21
	0x01CB7044 MOV X2, X31
	0x01CB7048 BL 0x322A948
	0x01CB704C CBZ X0, 0x1CB7090
	0x01CB7050 LDR X21, [X23]
	0x01CB7054 MOV X20, X0
	0x01CB7058 MOV X1, X21
	0x01CB705C BL 0x1B6E8FC
	0x01CB7060 CBZ X0, 0x1CB7190
	0x01CB7064 LDR X8, [X22]
	0x01CB7068 LDR X8, [X8 + 0xB8]
	0x01CB706C STR X0, [X8 + 0x20]
	0x01CB7070 LDR X21, [X23]
	0x01CB7074 MOV X0, X20
	0x01CB7078 MOV X1, X21

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {11}
	006 And W9, W1, 1
	007 Move [X8+20], W9
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return 
	011 Move X0, 0x2297000
	012 Move X0, [X0+1168]
	013 Call 0x1B6F804
	014 Call 0x1B6FA0C
	015 Move X19, X0
	016 Move X0, 0x2298000
	017 Move X0, [X0+3568]
	018 Call 0x1B6F804
	019 Move X1, X0
	020 Move X0, X19
	021 Move X2, X31
	022 Call InvalidOperationException..ctor, X0, X1
	023 Move X0, 0x2298000
	024 Move X0, [X0+3744]
	025 Call 0x1B6F804
	026 Move X1, X0
	027 Move X0, X19
	028 Call 0x1B6F8E8

Method: System.String get_displayName()

Disassembly:
	0x01CB707C BL 0x1B6E8FC
	0x01CB7080 CBZ X0, 0x1CB7190
	0x01CB7084 LDR X8, [X22]
	0x01CB7088 LDR X8, [X8 + 0xB8]
	0x01CB708C B 0x1CB709C
	0x01CB7090 LDR X8, [X22]
	0x01CB7094 LDR X8, [X8 + 0xB8]
	0x01CB7098 STR X31, [X8 + 0x20]
	0x01CB709C ADRP X23, 0x2297000
	0x01CB70A0 LDR X23, [X23 + 0x170]
	0x01CB70A4 ADRP X21, 0x2297000
	0x01CB70A8 LDR X20, [X8 + 0x28]
	0x01CB70AC LDR X0, [X23]
	0x01CB70B0 LDR X21, [X21 + 0xF40]
	0x01CB70B4 BL 0x1B6EA0C
	0x01CB70B8 LDR X2, [X21]
	0x01CB70BC MOV X1, X19
	0x01CB70C0 MOV X3, X31
	0x01CB70C4 MOV X21, X0
	0x01CB70C8 BL 0x317DB24
	0x01CB70CC MOV X0, X20
	0x01CB70D0 MOV X1, X21
	0x01CB70D4 MOV X2, X31
	0x01CB70D8 BL 0x322A948
	0x01CB70DC CBZ X0, 0x1CB710C
	0x01CB70E0 LDR X1, [X23]
	0x01CB70E4 LDR X8, [X0]
	0x01CB70E8 CMP X8, X1
	0x01CB70EC B.NE 0x1CB7198
	0x01CB70F0 LDR X8, [X22]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {16}
	006 Move X19, X0
	007 Add X2, X0, 304
	008 Add X0, X8, 24
	009 Move W1, 16
	010 Move X3, X31
	011 Call ReadWriteUtilsForWeaver.ReadStringUtf32WithHash, X0, X1, X2
	012 Move X0, [X19+304]
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return X0
	016 Move X0, 0x2297000
	017 Move X0, [X0+1168]
	018 Call 0x1B6F804
	019 Call 0x1B6FA0C
	020 Move X19, X0
	021 Move X0, 0x2298000
	022 Move X0, [X0+3752]
	023 Call 0x1B6F804
	024 Move X1, X0
	025 Move X0, X19
	026 Move X2, X31
	027 Call InvalidOperationException..ctor, X0, X1
	028 Move X0, 0x2298000
	029 Move X0, [X0+3760]
	030 Call 0x1B6F804
	031 Move X1, X0
	032 Move X0, X19
	033 Call 0x1B6F8E8

Method: System.Void set_displayName(System.String value)

Disassembly:
	0x01CB70F4 LDR X8, [X8 + 0xB8]
	0x01CB70F8 STR X0, [X8 + 0x28]
	0x01CB70FC LDR X9, [X0]
	0x01CB7100 CMP X9, X1
	0x01CB7104 B.EQ 0x1CB7118
	0x01CB7108 B 0x1CB7198
	0x01CB710C LDR X8, [X22]
	0x01CB7110 LDR X8, [X8 + 0xB8]
	0x01CB7114 STR X0, [X8 + 0x28]
	0x01CB7118 ADRP X23, 0x2297000
	0x01CB711C LDR X23, [X23 + 0xEF0]
	0x01CB7120 ADRP X21, 0x2297000
	0x01CB7124 LDR X20, [X8 + 0x48]
	0x01CB7128 LDR X0, [X23]
	0x01CB712C LDR X21, [X21 + 0xF28]
	0x01CB7130 BL 0x1B6EA0C
	0x01CB7134 LDR X2, [X21]
	0x01CB7138 MOV X1, X19
	0x01CB713C MOV X3, X31
	0x01CB7140 MOV X21, X0
	0x01CB7144 BL 0x27EA208
	0x01CB7148 MOV X0, X20
	0x01CB714C MOV X1, X21
	0x01CB7150 MOV X2, X31
	0x01CB7154 BL 0x322A948
	0x01CB7158 CBZ X0, 0x1CB719C
	0x01CB715C LDR X21, [X23]
	0x01CB7160 MOV X20, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {15}
	006 Move X2, X1
	007 Add X3, X0, 304
	008 Add X0, X8, 24
	009 Move W1, 16
	010 Move X4, X31
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Call ReadWriteUtilsForWeaver.WriteStringUtf32WithHash, X0, X1, X2, X3
	014 Return 
	015 Move X0, 0x2297000
	016 Move X0, [X0+1168]
	017 Call 0x1B6F804
	018 Call 0x1B6FA0C
	019 Move X19, X0
	020 Move X0, 0x2298000
	021 Move X0, [X0+3752]
	022 Call 0x1B6F804
	023 Move X1, X0
	024 Move X0, X19
	025 Move X2, X31
	026 Call InvalidOperationException..ctor, X0, X1
	027 Move X0, 0x2298000
	028 Move X0, [X0+3768]
	029 Call 0x1B6F804
	030 Move X1, X0
	031 Move X0, X19
	032 Call 0x1B6F8E8

Method: System.Int32 get_channel()

Disassembly:
	0x01CB5780 LDR X20, [X20 + 0x480]
	0x01CB5784 ADRP X21, 0x256E000
	0x01CB5788 LDRB W9, [X21 + 0x50F]
	0x01CB578C LDR X8, [X20]
	0x01CB5790 LDR X8, [X8 + 0xB8]
	0x01CB5794 LDR V10, [X8 + 0x30]
	0x01CB5798 LDR V9, [X8 + 0x38]
	0x01CB579C CBNZ W9, 0x1CB57B8
	0x01CB57A0 MOV X0, X20
	0x01CB57A4 BL 0x1B6E7F0
	0x01CB57A8 LDR X8, [X20]
	0x01CB57AC MOVZ W9, 0x1
	0x01CB57B0 STRB W9, [X21 + 0x50F]
	0x01CB57B4 LDR X8, [X8 + 0xB8]
	0x01CB57B8 ADD X9, X8, 0x48
	0x01CB57BC ADD X8, X8, 0x50
	0x01CB57C0 B 0x1CB5838
	0x01CB57C4 MOVZ W0, 0x71
	0x01CB57C8 MOV X1, X31
	0x01CB57CC BL 0x3AECD78
	0x01CB57D0 TBZ X0, 0x0, 0x1CB5854
	0x01CB57D4 ADRP X20, 0x256E000
	0x01CB57D8 LDRB W8, [X20 + 0x50E]
	0x01CB57DC CBNZ W8, 0x1CB57F4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move W0, [X8+96]
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0
	010 Move X0, 0x2299000
	011 Move X0, [X0+1168]
	012 Call 0x1B6F804
	013 Call 0x1B6FA0C
	014 Move X19, X0
	015 Move X0, 0x229A000
	016 Move X0, [X0+3552]
	017 Call 0x1B6F804
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x229A000
	023 Move X0, [X0+3560]
	024 Call 0x1B6F804
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1B6F8E8

Method: System.Void set_channel(System.Int32 value)

Disassembly:
	0x01CB7164 MOV X1, X21
	0x01CB7168 BL 0x1B6E8FC
	0x01CB716C CBZ X0, 0x1CB7190
	0x01CB7170 LDR X8, [X22]
	0x01CB7174 LDR X8, [X8 + 0xB8]
	0x01CB7178 STR X0, [X8 + 0x48]
	0x01CB717C LDR X21, [X23]
	0x01CB7180 MOV X0, X20
	0x01CB7184 MOV X1, X21
	0x01CB7188 BL 0x1B6E8FC
	0x01CB718C CBNZ X0, 0x1CB71A8
	0x01CB7190 MOV X0, X20
	0x01CB7194 MOV X1, X21
	0x01CB7198 BL 0x1B6ECDC
	0x01CB719C LDR X8, [X22]
	0x01CB71A0 LDR X8, [X8 + 0xB8]
	0x01CB71A4 STR X31, [X8 + 0x48]
	0x01CB71A8 ADRP X8, 0x2296000
	0x01CB71AC LDR X8, [X8 + 0xB90]
	0x01CB71B0 ADRP X20, 0x2297000
	0x01CB71B4 ADRP X21, 0x2296000
	0x01CB71B8 LDR X0, [X8]
	0x01CB71BC LDR X20, [X20 + 0xF30]
	0x01CB71C0 LDR X21, [X21 + 0x4E8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move [X8+96], W1
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 
	010 Move X0, 0x2297000
	011 Move X0, [X0+1168]
	012 Call 0x1B6F804
	013 Call 0x1B6FA0C
	014 Move X19, X0
	015 Move X0, 0x2298000
	016 Move X0, [X0+3552]
	017 Call 0x1B6F804
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x2298000
	023 Move X0, [X0+3776]
	024 Call 0x1B6F804
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1B6F8E8

Method: System.Single get_playerVolume()

Disassembly:
	0x01CB71C4 BL 0x1B6EA0C
	0x01CB71C8 LDR X2, [X20]
	0x01CB71CC MOV X1, X19
	0x01CB71D0 MOV X3, X31
	0x01CB71D4 MOV X20, X0
	0x01CB71D8 BL 0x342E500
	0x01CB71DC LDR X0, [X21]
	0x01CB71E0 LDR W8, [X0 + 0xE0]
	0x01CB71E4 CBNZ W8, 0x1CB71EC
	0x01CB71E8 BL 0x1B6E8F8
	0x01CB71EC MOV X0, X20
	0x01CB71F0 MOV X1, X31
	0x01CB71F4 BL 0x1C8D564
	0x01CB71F8 LDR X1, [X19 + 0x110]
	0x01CB71FC CBZ X1, 0x1CB7218
	0x01CB7200 MOV X0, X19
	0x01CB7204 LDP X20, X19, [X31 + 0x20]
	0x01CB7208 LDP X22, X21, [X31 + 0x10]
	0x01CB720C MOV X2, X31
	0x01CB7210 LDP X30, X23, [X31], #0x30
	0x01CB7214 B 0x3A9EC1C
	0x01CB7218 LDP X20, X19, [X31 + 0x20]
	0x01CB721C LDP X22, X21, [X31 + 0x10]
	0x01CB7220 LDP X30, X23, [X31], #0x30

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move V0, [X8+100]
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return V0
	010 Move X0, 0x2297000
	011 Move X0, [X0+1168]
	012 Call 0x1B6F804
	013 Call 0x1B6FA0C
	014 Move X19, X0
	015 Move X0, 0x2298000
	016 Move X0, [X0+3784]
	017 Call 0x1B6F804
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x2298000
	023 Move X0, [X0+3792]
	024 Call 0x1B6F804
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1B6F8E8

Method: System.Void set_playerVolume(System.Single value)

Disassembly:
	0x01CB7224 RET
	0x01CB7228 STR D8, [X31 - 0x30]!
	0x01CB722C STR X30, [X31 + 0x8]
	0x01CB7230 STP X22, X21, [X31 + 0x10]
	0x01CB7234 STP X20, X19, [X31 + 0x20]
	0x01CB7238 ADRP X22, 0x256C000
	0x01CB723C ADRP X21, 0x2296000
	0x01CB7240 LDRB W8, [X22 + 0x4EC]
	0x01CB7244 LDR X21, [X21 + 0x478]
	0x01CB7248 MOV X20, X2
	0x01CB724C MOV W19, W1
	0x01CB7250 TBNZ X8, 0x0, 0x1CB7280
	0x01CB7254 ADRP X0, 0x2296000
	0x01CB7258 LDR X0, [X0 + 0x478]
	0x01CB725C BL 0x1B6E7F0
	0x01CB7260 ADRP X0, 0x2297000
	0x01CB7264 LDR X0, [X0 + 0x198]
	0x01CB7268 BL 0x1B6E7F0
	0x01CB726C ADRP X0, 0x2297000
	0x01CB7270 LDR X0, [X0 + 0x420]
	0x01CB7274 BL 0x1B6E7F0
	0x01CB7278 MOVZ W8, 0x1
	0x01CB727C STRB W8, [X22 + 0x4EC]
	0x01CB7280 LDR X0, [X21]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move [X8+100], S0
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 
	010 Move X0, 0x2297000
	011 Move X0, [X0+1168]
	012 Call 0x1B6F804
	013 Call 0x1B6FA0C
	014 Move X19, X0
	015 Move X0, 0x2298000
	016 Move X0, [X0+3784]
	017 Call 0x1B6F804
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x2298000
	023 Move X0, [X0+3800]
	024 Call 0x1B6F804
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1B6F8E8

Method: System.Boolean get_IsMine()

Disassembly:
	0x01CAF940 LDR W8, [X0 + 0xE0]
	0x01CAF944 CBNZ W8, 0x1CAF94C
	0x01CAF948 BL 0x1B6E8F8
	0x01CAF94C MOV X0, X19
	0x01CAF950 MOV X1, X31
	0x01CAF954 BL 0x1D697C8
	0x01CAF958 LDR X0, [X19 + 0x38]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+64]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call NetworkObject.get_HasInputAuthority, X0
	008 Return X0
	009 Call 0x1B6FA1C

Method: AnimalCompany.AttachedItemAnchor[] get_anchors()

Disassembly:
	0x01CB7284 LDR W8, [X0 + 0xE0]
	0x01CB7288 CBNZ W8, 0x1CB7290

ISIL:
	001 Move X0, [X0+200]
	002 Return X0

Method: System.Collections.Generic.Dictionary`2<System.UInt32, AnimalCompany.NetPlayer> get_spawnedPlayers()

Disassembly:
	0x01CB728C BL 0x1B6E8F8
	0x01CB7290 MOV X0, X20
	0x01CB7294 MOV X1, X31
	0x01CB7298 MOV X2, X31
	0x01CB729C BL 0x3AA0AF0
	0x01CB72A0 FMOV S8, W31
	0x01CB72A4 TBNZ X0, 0x0, 0x1CB72C0
	0x01CB72A8 CBZ X20, 0x1CB73B4
	0x01CB72AC LDR X0, [X20 + 0x130]
	0x01CB72B0 CBZ X0, 0x1CB73B4
	0x01CB72B4 MOV X1, X31
	0x01CB72B8 BL 0x3AF67EC
	0x01CB72BC MOV V8.16B, V0.16B
	0x01CB72C0 CMP W19, 0x2
	0x01CB72C4 B.NE 0x1CB72D4
	0x01CB72C8 FMOV S0, 0.5
	0x01CB72CC FMUL S8, S8, S0
	0x01CB72D0 B 0x1CB7328
	0x01CB72D4 LDR X0, [X21]
	0x01CB72D8 LDR W8, [X0 + 0xE0]
	0x01CB72DC CBNZ W8, 0x1CB72E4
	0x01CB72E0 BL 0x1B6E8F8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x256D000
	005 Move X19, 0x2298000
	006 Move W8, [X20+1253]
	007 Move X19, [X19+680]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2298000
	013 Move X0, [X0+680]
	014 Call 0x1B6F7F0
	015 Move W8, 1
	016 Move [X20+1253], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1B6F8F8
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: AnimalCompany.NetPlayer get_localPlayer()

Disassembly:
	0x01CAC1DC BL 0x1B6ECDC
	0x01CAC1E0 BL 0x1B6EA1C
	0x01CAC1E4 RET
	0x01CAC1E8 STR D10, [X31 - 0x40]!
	0x01CAC1EC STP D9, D8, [X31 + 0x10]
	0x01CAC1F0 STP X30, X21, [X31 + 0x20]
	0x01CAC1F4 STP X20, X19, [X31 + 0x30]
	0x01CAC1F8 ADRP X19, 0x2577000
	0x01CAC1FC LDRB W8, [X19 + 0x494]
	0x01CAC200 MOV X20, X0
	0x01CAC204 TBNZ X8, 0x0, 0x1CAC21C
	0x01CAC208 ADRP X0, 0x22A2000
	0x01CAC20C LDR X0, [X0 + 0x880]
	0x01CAC210 BL 0x1B6E7F0
	0x01CAC214 MOVZ W8, 0x1
	0x01CAC218 STRB W8, [X19 + 0x494]
	0x01CAC21C LDR W8, [X20 + 0x10]
	0x01CAC220 LDR X19, [X20 + 0x20]
	0x01CAC224 CMP W8, 0x1
	0x01CAC228 B.EQ 0x1CAC264
	0x01CAC22C CBNZ W8, 0x1CAC398
	0x01CAC230 MOVN W8, 0x0
	0x01CAC234 STR W8, [X20 + 0x10]
	0x01CAC238 CBZ X19, 0x1CAC3B0
	0x01CAC23C LDR X0, [X19 + 0xA8]
	0x01CAC240 CBZ X0, 0x1CAC3B0
	0x01CAC244 MOV X1, X31
	0x01CAC248 BL 0x3A65954
	0x01CAC24C MOVZ W1, 0x1
	0x01CAC250 MOV X0, X19
	0x01CAC254 BL 0x1CAB940
	0x01CAC258 FMOV S8, W31
	0x01CAC25C STR W31, [X20 + 0x28]
	0x01CAC260 B 0x1CAC27C
	0x01CAC264 LDR V8, [X20 + 0x28]
	0x01CAC268 FMOV S0, 2
	0x01CAC26C MOVN W8, 0x0
	0x01CAC270 STR W8, [X20 + 0x10]
	0x01CAC274 FCMP S8, S0
	0x01CAC278 B.PL 0x1CAC324
	0x01CAC27C MOV X0, X31
	0x01CAC280 BL 0x3AA481C
	0x01CAC284 ADRP X8, 0xFFFFFFFFFEDFD000
	0x01CAC288 LDR V1, [X8 + 0x95C]
	0x01CAC28C FADD S0, S8, S0
	0x01CAC290 FMOV S2, 0.5
	0x01CAC294 FMUL S9, S0, S2
	0x01CAC298 STR S0, [X20 + 0x28]
	0x01CAC29C FMUL S0, S9, S1
	0x01CAC2A0 BL 0x3D198B0
	0x01CAC2A4 MOV X0, X31
	0x01CAC2A8 MOV V8.16B, V0.16B
	0x01CAC2AC BL 0x3AA47CC
	0x01CAC2B0 CBZ X19, 0x1CAC3B0
	0x01CAC2B4 LDR X21, [X19 + 0xA0]
	0x01CAC2B8 CBZ X21, 0x1CAC3B0
	0x01CAC2BC ADRP X8, 0xFFFFFFFFFEDFD000
	0x01CAC2C0 LDR V1, [X8 + 0xC64]
	0x01CAC2C4 FADD S2, S8, S8
	0x01CAC2C8 FMOV S8, 1
	0x01CAC2CC FMIN S10, S2, S8
	0x01CAC2D0 FMUL S0, S0, S1
	0x01CAC2D4 BL 0x3D198B0
	0x01CAC2D8 ADRP X8, 0xFFFFFFFFFEDFD000
	0x01CAC2DC LDR V1, [X8 + 0xD30]
	0x01CAC2E0 MOV X0, X21
	0x01CAC2E4 MOV X1, X31
	0x01CAC2E8 FMUL S0, S0, S1
	0x01CAC2EC FADD S2, S0, S10
	0x01CAC2F0 FMOV S0, 1
	0x01CAC2F4 FMOV S1, 1
	0x01CAC2F8 BL 0x3AA7D18
	0x01CAC2FC LDR X0, [X19 + 0xA8]
	0x01CAC300 CBZ X0, 0x1CAC3B0
	0x01CAC304 FMUL S0, S9, S9
	0x01CAC308 FSUB S0, S8, S0
	0x01CAC30C MOV X1, X31
	0x01CAC310 BL 0x3A657B4
	0x01CAC314 MOVZ W0, 0x1
	0x01CAC318 STR X31, [X20 + 0x18]
	0x01CAC31C STR W0, [X20 + 0x10]
	0x01CAC320 B 0x1CAC39C
	0x01CAC324 CBZ X19, 0x1CAC3B0
	0x01CAC328 LDR X0, [X19 + 0x90]
	0x01CAC32C CBZ X0, 0x1CAC3B0
	0x01CAC330 MOV X1, X31
	0x01CAC334 BL 0x3A7BCC8
	0x01CAC338 ADRP X21, 0x22A2000
	0x01CAC33C LDR X21, [X21 + 0x880]
	0x01CAC340 MOV X20, X0
	0x01CAC344 LDR X8, [X21]
	0x01CAC348 LDR W9, [X8 + 0xE0]
	0x01CAC34C CBNZ W9, 0x1CAC35C
	0x01CAC350 MOV X0, X8
	0x01CAC354 BL 0x1B6E8F8
	0x01CAC358 LDR X8, [X21]
	0x01CAC35C CBZ X20, 0x1CAC3B0
	0x01CAC360 LDR X8, [X8 + 0xB8]
	0x01CAC364 MOV X0, X20
	0x01CAC368 MOV X2, X31
	0x01CAC36C LDP S2, S3, [X8 + 0x30]
	0x01CAC370 LDP S0, S1, [X8 + 0x28]
	0x01CAC374 LDR W1, [X8 + 0x4]
	0x01CAC378 BL 0x3A7D234
	0x01CAC37C LDR X0, [X19 + 0xA8]
	0x01CAC380 CBZ X0, 0x1CAC3B0
	0x01CAC384 MOV X1, X31
	0x01CAC388 BL 0x3A65A98
	0x01CAC38C MOV X0, X19
	0x01CAC390 MOV W1, W31
	0x01CAC394 BL 0x1CAB940
	0x01CAC398 MOV W0, W31
	0x01CAC39C LDP X20, X19, [X31 + 0x30]
	0x01CAC3A0 LDP X30, X21, [X31 + 0x20]
	0x01CAC3A4 LDP D9, D8, [X31 + 0x10]
	0x01CAC3A8 LDR V10, [X31], #0x40
	0x01CAC3AC RET
	0x01CAC3B0 BL 0x1B6EA1C
	0x01CAC3B4 LDR X0, [X0 + 0x18]
	0x01CAC3B8 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x2578000
	008 Move X22, 0x22A3000
	009 Move W8, [X19+1254]
	010 Move X22, [X22+680]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {38}
	015 Move X0, 0x22A3000
	016 Move X0, [X0+2056]
	017 Call 0x1B6F7F0
	018 Move X0, 0x22A3000
	019 Move X0, [X0+2064]
	020 Call 0x1B6F7F0
	021 Move X0, 0x22A3000
	022 Move X0, [X0+2072]
	023 Call 0x1B6F7F0
	024 Move X0, 0x22A3000
	025 Move X0, [X0+680]
	026 Call 0x1B6F7F0
	027 Move X0, 0x22A2000
	028 Move X0, [X0+1144]
	029 Call 0x1B6F7F0
	030 Move X0, 0x22A3000
	031 Move X0, [X0+2080]
	032 Call 0x1B6F7F0
	033 Move X0, 0x22A3000
	034 Move X0, [X0+2088]
	035 Call 0x1B6F7F0
	036 Move W8, 1
	037 Move [X19+1254], W8
	038 Move X0, [X22]
	039 Move X19, 0x22A2000
	040 Move W8, [X0+224]
	041 Move X19, [X19+1144]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1B6F8F8
	045 Move X0, [X22]
	046 Move X8, [X19]
	047 Move X9, [X0+184]
	048 Move W10, [X8+224]
	049 Move X19, [X9+8]
	050 Compare W10, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1B6F8F8
	054 Move X0, X19
	055 Move X1, X31
	056 Move X2, X31
	057 Call Object.op_Inequality, X0, X1
	058 Move X8, [X22]
	059 Move W19, W0
	060 Move W9, [X8+224]
	061 Compare W9, 0
	062 JumpIfNotEqual {66}
	063 Move X0, X8
	064 Call 0x1B6F8F8
	065 Move X8, [X22]
	066 Move X8, [X8+184]
	067 Move TEMP, X19
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {72}
	071 Move X19, [X8+8]
	072 Move X0, [X8]
	073 Compare X0, 0
	074 JumpIfEqual {139}
	075 Move X8, 0x22A3000
	076 Move X8, [X8+2056]
	077 Move X1, [X8]
	078 Call Dictionary`2<UInt32, Object>.get_Values, X0
	079 Move X23, 0x22A3000
	080 Move X23, [X23+2088]
	081 Move X19, X0
	082 Move X8, [X23]
	083 Move W9, [X8+224]
	084 Compare W9, 0
	085 JumpIfNotEqual {89}
	086 Move X0, X8
	087 Call 0x1B6F8F8
	088 Move X8, [X23]
	089 Move X9, [X8+184]
	090 Move X20, [X9+8]
	091 Compare X20, 0
	092 JumpIfNotEqual {115}
	093 Move W9, [X8+224]
	094 Compare W9, 0
	095 JumpIfNotEqual {99}
	096 Move X0, X8
	097 Call 0x1B6F8F8
	098 Move X8, [X23]
	099 Move X9, 0x22A3000
	100 Move X8, [X8+184]
	101 Move X9, [X9+2072]
	102 Move X21, [X8]
	103 Move X0, [X9]
	104 Call 0x1B6FA0C
	105 Move X8, 0x22A3000
	106 Move X8, [X8+2080]
	107 Move X1, X21
	108 Move X3, X31
	109 Move X20, X0
	110 Move X2, [X8]
	111 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	112 Move X8, [X23]
	113 Move X8, [X8+184]
	114 Move [X8+8], X20
	115 Move X8, 0x22A3000
	116 Move X8, [X8+2064]
	117 Move X0, X19
	118 Move X1, X20
	119 Move X2, [X8]
	120 Call 0x20B1E40, X0, X1
	121 Move X8, [X22]
	122 Move X19, X0
	123 Move W9, [X8+224]
	124 Compare W9, 0
	125 JumpIfNotEqual {129}
	126 Move X0, X8
	127 Call 0x1B6F8F8
	128 Move X8, [X22]
	129 Move X8, [X8+184]
	130 Move [X8+8], X19
	131 Move X0, X19
	132 Move X20, [X31+32]
	133 Move X19, [X31+40]
	134 Move X22, [X31+16]
	135 Move X21, [X31+24]
	136 Move X30, [X31+48]
	137 Move X23, [X31+56]
	138 Return X0
	139 Call 0x1B6FA1C

Method: System.UInt32 get_localPlayerID()

Disassembly:
	0x01CB72E4 MOV X0, X20
	0x01CB72E8 MOV X1, X31
	0x01CB72EC MOV X2, X31
	0x01CB72F0 BL 0x3A9D6EC
	0x01CB72F4 TBZ X0, 0x0, 0x1CB7328
	0x01CB72F8 CBZ X20, 0x1CB73B4
	0x01CB72FC MOV X0, X20
	0x01CB7300 MOV X1, X31
	0x01CB7304 BL 0x3A9B568
	0x01CB7308 ADRP X8, 0x2297000
	0x01CB730C LDR X8, [X8 + 0x420]
	0x01CB7310 MOV X2, X31
	0x01CB7314 LDR X1, [X8]
	0x01CB7318 BL 0x3084850
	0x01CB731C FADD S0, S8, S8
	0x01CB7320 ANDS W31, W0, 0x1
	0x01CB7324 FCSEL S8, S0, S8, NE
	0x01CB7328 ADRP X20, 0x2297000
	0x01CB732C LDR X20, [X20 + 0x198]
	0x01CB7330 LDR X0, [X20]
	0x01CB7334 LDR W8, [X0 + 0xE0]
	0x01CB7338 CBNZ W8, 0x1CB7340
	0x01CB733C BL 0x1B6E8F8
	0x01CB7340 ADRP X21, 0x256C000
	0x01CB7344 LDRB W8, [X21 + 0x44F]
	0x01CB7348 CBNZ W8, 0x1CB7360
	0x01CB734C ADRP X0, 0x2297000
	0x01CB7350 LDR X0, [X0 + 0x198]
	0x01CB7354 BL 0x1B6E7F0
	0x01CB7358 MOVZ W8, 0x1
	0x01CB735C STRB W8, [X21 + 0x44F]
	0x01CB7360 LDR X0, [X20]
	0x01CB7364 LDR W8, [X0 + 0xE0]
	0x01CB7368 CBNZ W8, 0x1CB7374
	0x01CB736C BL 0x1B6E8F8
	0x01CB7370 LDR X0, [X20]
	0x01CB7374 LDR X8, [X0 + 0xB8]
	0x01CB7378 LDR X0, [X8]
	0x01CB737C CBZ X0, 0x1CB73A0
	0x01CB7380 MOV W1, W19
	0x01CB7384 LDP X20, X19, [X31 + 0x20]
	0x01CB7388 LDP X22, X21, [X31 + 0x10]
	0x01CB738C LDR X30, [X31 + 0x8]
	0x01CB7390 MOV V0.16B, V8.16B
	0x01CB7394 MOV X2, X31
	0x01CB7398 LDR V8, [X31], #0x30
	0x01CB739C B 0x1CC2E80
	0x01CB73A0 LDP X20, X19, [X31 + 0x20]
	0x01CB73A4 LDP X22, X21, [X31 + 0x10]
	0x01CB73A8 LDR X30, [X31 + 0x8]
	0x01CB73AC LDR V8, [X31], #0x30
	0x01CB73B0 RET
	0x01CB73B4 BL 0x1B6EA1C
	0x01CB73B8 STR D10, [X31 - 0x40]!
	0x01CB73BC STP D9, D8, [X31 + 0x8]
	0x01CB73C0 STR X30, [X31 + 0x18]
	0x01CB73C4 STP X22, X21, [X31 + 0x20]
	0x01CB73C8 STP X20, X19, [X31 + 0x30]
	0x01CB73CC ADRP X21, 0x256C000
	0x01CB73D0 LDRB W8, [X21 + 0x4ED]
	0x01CB73D4 MOV V8.16B, V2.16B
	0x01CB73D8 MOV V9.16B, V1.16B
	0x01CB73DC MOV V10.16B, V0.16B
	0x01CB73E0 MOV X19, X2
	0x01CB73E4 MOV W20, W1
	0x01CB73E8 TBNZ X8, 0x0, 0x1CB7400
	0x01CB73EC ADRP X0, 0x2297000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x256D000
	006 Move X20, 0x2298000
	007 Move W8, [X19+1255]
	008 Move X20, [X20+680]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x2298000
	014 Move X0, [X0+680]
	015 Call 0x1B6F7F0
	016 Move X0, 0x2297000
	017 Move X0, [X0+1144]
	018 Call 0x1B6F7F0
	019 Move W8, 1
	020 Move [X19+1255], W8
	021 Move X0, [X20]
	022 Move X21, 0x2297000
	023 Move W8, [X0+224]
	024 Move X21, [X21+1144]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1B6F8F8
	028 Call NetPlayer.get_localPlayer
	029 Move X8, [X21]
	030 Move X19, X0
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {36}
	034 Move X0, X8
	035 Call 0x1B6F8F8
	036 Move X0, X19
	037 Move X1, X31
	038 Move X2, X31
	039 Call Object.op_Inequality, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {82}
	044 Move X0, [X20]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1B6F8F8
	049 Call NetPlayer.get_localPlayer
	050 Compare X0, 0
	051 JumpIfEqual {88}
	052 Move X8, [X21]
	053 Move X19, [X0+64]
	054 Move W9, [X8+224]
	055 Compare W9, 0
	056 JumpIfNotEqual {59}
	057 Move X0, X8
	058 Call 0x1B6F8F8
	059 Move X0, X19
	060 Move X1, X31
	061 Move X2, X31
	062 Call Object.op_Inequality, X0, X1
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {82}
	067 Move X0, [X20]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1B6F8F8
	072 Call NetPlayer.get_localPlayer
	073 Compare X0, 0
	074 JumpIfEqual {88}
	075 Move X8, [X0+64]
	076 Compare X8, 0
	077 JumpIfEqual {88}
	078 Move X8, [X8+32]
	079 Compare X8, 0
	080 JumpIfEqual {82}
	081 Move W0, [X8]
	082 Move W0, W31
	083 Move X20, [X31+16]
	084 Move X19, [X31+24]
	085 Move X30, [X31+32]
	086 Move X21, [X31+40]
	087 Return X0
	088 Call 0x1B6FA1C

Method: System.UInt32 get_playerID()

Disassembly:
	0x01CB73F0 LDR X0, [X0 + 0x198]
	0x01CB73F4 BL 0x1B6E7F0
	0x01CB73F8 MOVZ W8, 0x1
	0x01CB73FC STRB W8, [X21 + 0x4ED]
	0x01CB7400 CMP W20, 0x1
	0x01CB7404 B.HI 0x1CB7498
	0x01CB7408 ADRP X21, 0x2297000
	0x01CB740C LDR X21, [X21 + 0x198]
	0x01CB7410 CMP W20, 0x0
	0x01CB7414 CSET W20, NE
	0x01CB7418 LDR X0, [X21]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+64]
	003 Compare X8, 0
	004 JumpIfEqual {12}
	005 Move X8, [X8+32]
	006 Compare X8, 0
	007 JumpIfEqual {9}
	008 Move W0, [X8]
	009 Move W0, W31
	010 Move X30, [X31+16]
	011 Return X0
	012 Call 0x1B6FA1C

Method: AnimalCompany.AttachedItemAnchor get_backItemAttachAnchor()

Disassembly:
	0x01CB741C LDR W8, [X0 + 0xE0]
	0x01CB7420 CBNZ W8, 0x1CB7428

ISIL:
	001 Move X0, [X0+280]
	002 Return X0

Method: System.Void set_backItemAttachAnchor(AnimalCompany.AttachedItemAnchor value)

Disassembly:
	0x01CB7424 BL 0x1B6E8F8
	0x01CB7428 ADRP X22, 0x256C000

ISIL:
	001 Move [X0+280], X1
	002 Return 

Method: System.Void Awake()

Disassembly:
	0x01CB742C LDRB W8, [X22 + 0x44F]
	0x01CB7430 CBNZ W8, 0x1CB7448
	0x01CB7434 ADRP X0, 0x2297000
	0x01CB7438 LDR X0, [X0 + 0x198]
	0x01CB743C BL 0x1B6E7F0
	0x01CB7440 MOVZ W8, 0x1
	0x01CB7444 STRB W8, [X22 + 0x44F]
	0x01CB7448 LDR X0, [X21]
	0x01CB744C LDR W8, [X0 + 0xE0]
	0x01CB7450 CBNZ W8, 0x1CB745C
	0x01CB7454 BL 0x1B6E8F8
	0x01CB7458 LDR X0, [X21]
	0x01CB745C LDR X8, [X0 + 0xB8]
	0x01CB7460 LDR X0, [X8]
	0x01CB7464 CBZ X0, 0x1CB7498
	0x01CB7468 MOV X1, X19
	0x01CB746C MOV V1.16B, V9.16B
	0x01CB7470 MOV V2.16B, V8.16B
	0x01CB7474 MOV W2, W20
	0x01CB7478 LDP X20, X19, [X31 + 0x30]
	0x01CB747C LDP X22, X21, [X31 + 0x20]
	0x01CB7480 LDR X30, [X31 + 0x18]
	0x01CB7484 LDP D9, D8, [X31 + 0x8]
	0x01CB7488 MOV V0.16B, V10.16B
	0x01CB748C MOV X3, X31
	0x01CB7490 LDR V10, [X31], #0x40
	0x01CB7494 B 0x1CC3528
	0x01CB7498 LDP X20, X19, [X31 + 0x30]
	0x01CB749C LDP X22, X21, [X31 + 0x20]
	0x01CB74A0 LDR X30, [X31 + 0x18]
	0x01CB74A4 LDP D9, D8, [X31 + 0x8]
	0x01CB74A8 LDR V10, [X31], #0x40
	0x01CB74AC RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x256D000
	005 Move W8, [X20+1256]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x2298000
	012 Move X0, [X0+1576]
	013 Call 0x1B6F7F0
	014 Move X0, 0x2298000
	015 Move X0, [X0+3808]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X20+1256], W8
	019 Move X0, [X19+184]
	020 Compare X0, 0
	021 JumpIfEqual {40}
	022 Move X8, 0x2298000
	023 Move X8, [X8+3808]
	024 Move X1, [X8]
	025 Call 0x2090DE8, X0
	026 Move X8, [X19+160]
	027 Move [X19+296], X0
	028 Compare X8, 0
	029 JumpIfEqual {40}
	030 Move X9, 0x2298000
	031 Move X9, [X9+1576]
	032 Move X0, X8
	033 Move X1, [X9]
	034 Call 0x2090DE8, X0
	035 Move [X19+280], X0
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Return 
	040 Call 0x1B6FA1C

Method: System.Boolean TryGetPlayerByID(System.UInt32 id, out AnimalCompany.NetPlayer player)

Disassembly:
	0x01CB74B0 B 0x1CB74B4
	0x01CB74B4 STR D8, [X31 - 0x30]!
	0x01CB74B8 STP X30, X21, [X31 + 0x10]
	0x01CB74BC STP X20, X19, [X31 + 0x20]
	0x01CB74C0 ADRP X21, 0x256C000
	0x01CB74C4 LDRB W8, [X21 + 0x4F1]
	0x01CB74C8 MOV V8.16B, V0.16B
	0x01CB74CC MOV W20, W1
	0x01CB74D0 MOV X19, X0
	0x01CB74D4 TBNZ X8, 0x0, 0x1CB74F8
	0x01CB74D8 ADRP X0, 0x2297000
	0x01CB74DC LDR X0, [X0 + 0x1C0]
	0x01CB74E0 BL 0x1B6E7F0
	0x01CB74E4 ADRP X0, 0x2297000
	0x01CB74E8 LDR X0, [X0 + 0xF60]
	0x01CB74EC BL 0x1B6E7F0
	0x01CB74F0 MOVZ W8, 0x1
	0x01CB74F4 STRB W8, [X21 + 0x4F1]
	0x01CB74F8 LDRB W8, [X19 + 0x58]
	0x01CB74FC CBZ W8, 0x1CB7520
	0x01CB7500 STRB W31, [X19 + 0x58]
	0x01CB7504 LDR V0, [X19 + 0x10C]
	0x01CB7508 FCMP S0, S8
	0x01CB750C B.PL 0x1CB7514
	0x01CB7510 STR S8, [X19 + 0x10C]
	0x01CB7514 MOVZ W8, 0x2
	0x01CB7518 STR W8, [X19 + 0x120]
	0x01CB751C B 0x1CB755C
	0x01CB7520 ADRP X21, 0x2297000
	0x01CB7524 LDR X21, [X21 + 0x1C0]
	0x01CB7528 LDR X0, [X21]
	0x01CB752C LDR W8, [X0 + 0xE0]
	0x01CB7530 CBNZ W8, 0x1CB7538
	0x01CB7534 BL 0x1B6E8F8
	0x01CB7538 MOV X0, X19
	0x01CB753C MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x256D000
	007 Move X21, 0x2298000
	008 Move W8, [X22+1257]
	009 Move X21, [X21+680]
	010 Move X19, X1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x2298000
	017 Move X0, [X0+3816]
	018 Call 0x1B6F7F0
	019 Move X0, 0x2298000
	020 Move X0, [X0+680]
	021 Call 0x1B6F7F0
	022 Move W8, 1
	023 Move [X22+1257], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1B6F8F8
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Move X0, [X8]
	032 Compare X0, 0
	033 JumpIfEqual {46}
	034 Move X8, 0x2298000
	035 Move X8, [X8+3816]
	036 Move W1, W20
	037 Move X2, X19
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X3, [X8]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Call Dictionary`2<UInt32, Object>.TryGetValue, X0, X1, X2
	045 Return X0
	046 Call 0x1B6FA1C

Method: System.Void Spawned()

Disassembly:
	0x01CB7540 BL 0x1D697C8
	0x01CB7544 LDR X0, [X19 + 0x38]
	0x01CB7548 CBZ X0, 0x1CB7668
	0x01CB754C MOV X1, X31
	0x01CB7550 BL 0x1D87040
	0x01CB7554 CMP W0, 0x4
	0x01CB7558 B.NE 0x1CB756C
	0x01CB755C LDP X20, X19, [X31 + 0x20]
	0x01CB7560 LDP X30, X21, [X31 + 0x10]
	0x01CB7564 LDR V8, [X31], #0x30
	0x01CB7568 RET
	0x01CB756C LDR X0, [X19 + 0x40]
	0x01CB7570 CBZ X0, 0x1CB7668
	0x01CB7574 MOV X1, X31
	0x01CB7578 BL 0x1D9F538
	0x01CB757C TBNZ X0, 0x1, 0x1CB75BC
	0x01CB7580 LDR X0, [X21]
	0x01CB7584 LDR X19, [X19 + 0x40]
	0x01CB7588 LDR W8, [X0 + 0xE0]
	0x01CB758C CBNZ W8, 0x1CB7594
	0x01CB7590 BL 0x1B6E8F8
	0x01CB7594 ADRP X8, 0x2297000
	0x01CB7598 LDR X8, [X8 + 0xF60]
	0x01CB759C MOV X1, X19
	0x01CB75A0 LDP X20, X19, [X31 + 0x20]
	0x01CB75A4 LDP X30, X21, [X31 + 0x10]
	0x01CB75A8 LDR X0, [X8]
	0x01CB75AC MOVZ W2, 0x2
	0x01CB75B0 MOV X3, X31
	0x01CB75B4 LDR V8, [X31], #0x30
	0x01CB75B8 B 0x1D69640
	0x01CB75BC TBNZ X0, 0x0, 0x1CB7504
	0x01CB75C0 LDR X8, [X19 + 0x38]
	0x01CB75C4 CBZ X8, 0x1CB7668
	0x01CB75C8 LDR X0, [X8 + 0x50]
	0x01CB75CC CBZ X0, 0x1CB7668
	0x01CB75D0 MOV X1, X31
	0x01CB75D4 BL 0x1DBEFE4
	0x01CB75D8 TBZ X0, 0x0, 0x1CB755C
	0x01CB75DC LDR X8, [X19 + 0x38]
	0x01CB75E0 CBZ X8, 0x1CB7668
	0x01CB75E4 LDR X0, [X8 + 0x50]
	0x01CB75E8 MOVZ W1, 0x10
	0x01CB75EC MOV X2, X31
	0x01CB75F0 BL 0x1DD601C
	0x01CB75F4 MOV X21, X0
	0x01CB75F8 MOVZ W0, 0x1
	0x01CB75FC MOV X1, X31
	0x01CB7600 BL 0x1D29EBC
	0x01CB7604 LDR X8, [X19 + 0x40]
	0x01CB7608 CBZ X8, 0x1CB7668
	0x01CB760C LDR X8, [X8 + 0x20]
	0x01CB7610 CBZ X8, 0x1CB761C
	0x01CB7614 LDR W0, [X8]
	0x01CB7618 B 0x1CB7620
	0x01CB761C MOV X0, X31
	0x01CB7620 LDR W1, [X19 + 0x68]
	0x01CB7624 MOVZ W2, 0x2
	0x01CB7628 MOV X3, X31
	0x01CB762C BL 0x1DA8258
	0x01CB7630 STUR X0, [X21 + 0x1C]
	0x01CB7634 STR W20, [X21 + 0x24]
	0x01CB7638 STR S8, [X21 + 0x28]
	0x01CB763C CBZ X21, 0x1CB7668
	0x01CB7640 MOVZ W8, 0x80
	0x01CB7644 STR W8, [X21 + 0xC]
	0x01CB7648 LDR X0, [X19 + 0x38]
	0x01CB764C CBZ X0, 0x1CB7668
	0x01CB7650 MOV X1, X21
	0x01CB7654 LDP X20, X19, [X31 + 0x20]
	0x01CB7658 LDP X30, X21, [X31 + 0x10]
	0x01CB765C MOV X2, X31
	0x01CB7660 LDR V8, [X31], #0x30
	0x01CB7664 B 0x1D8A710
	0x01CB7668 BL 0x1B6EA1C
	0x01CB766C STP X30, X19, [X31 - 0x10]!
	0x01CB7670 AND W1, W1, 0x1
	0x01CB7674 MOV X19, X0
	0x01CB7678 BL 0x1CB76A8
	0x01CB767C LDR X0, [X19 + 0x40]
	0x01CB7680 CBZ X0, 0x1CB76A4
	0x01CB7684 MOV X1, X31
	0x01CB7688 BL 0x1D9E6A0
	0x01CB768C TBZ X0, 0x0, 0x1CB769C
	0x01CB7690 MOV X0, X19
	0x01CB7694 LDP X30, X19, [X31], #0x10
	0x01CB7698 B 0x1CB7844
	0x01CB769C LDP X30, X19, [X31], #0x10
	0x01CB76A0 RET
	0x01CB76A4 BL 0x1B6EA1C
	0x01CB76A8 STP X30, X21, [X31 - 0x20]!
	0x01CB76AC STP X20, X19, [X31 + 0x10]
	0x01CB76B0 ADRP X21, 0x256C000
	0x01CB76B4 LDRB W8, [X21 + 0x4F2]
	0x01CB76B8 MOV W20, W1
	0x01CB76BC MOV X19, X0
	0x01CB76C0 TBNZ X8, 0x0, 0x1CB76E4
	0x01CB76C4 ADRP X0, 0x2297000
	0x01CB76C8 LDR X0, [X0 + 0x1C0]
	0x01CB76CC BL 0x1B6E7F0
	0x01CB76D0 ADRP X0, 0x2297000
	0x01CB76D4 LDR X0, [X0 + 0xF68]
	0x01CB76D8 BL 0x1B6E7F0
	0x01CB76DC MOVZ W8, 0x1
	0x01CB76E0 STRB W8, [X21 + 0x4F2]
	0x01CB76E4 LDRB W8, [X19 + 0x58]
	0x01CB76E8 CBZ W8, 0x1CB7704
	0x01CB76EC STRB W31, [X19 + 0x58]
	0x01CB76F0 AND W1, W20, 0x1
	0x01CB76F4 MOV X0, X19
	0x01CB76F8 LDP X20, X19, [X31 + 0x10]
	0x01CB76FC LDP X30, X21, [X31], #0x20
	0x01CB7700 B 0x1CB6018
	0x01CB7704 ADRP X21, 0x2297000
	0x01CB7708 LDR X21, [X21 + 0x1C0]
	0x01CB770C LDR X0, [X21]
	0x01CB7710 LDR W8, [X0 + 0xE0]
	0x01CB7714 CBNZ W8, 0x1CB771C
	0x01CB7718 BL 0x1B6E8F8
	0x01CB771C MOV X0, X19
	0x01CB7720 MOV X1, X31
	0x01CB7724 BL 0x1D697C8
	0x01CB7728 LDR X0, [X19 + 0x38]
	0x01CB772C CBZ X0, 0x1CB7840
	0x01CB7730 MOV X1, X31
	0x01CB7734 BL 0x1D87040
	0x01CB7738 CMP W0, 0x4
	0x01CB773C B.NE 0x1CB774C
	0x01CB7740 LDP X20, X19, [X31 + 0x10]
	0x01CB7744 LDP X30, X21, [X31], #0x20
	0x01CB7748 RET
	0x01CB774C LDR X0, [X19 + 0x40]
	0x01CB7750 CBZ X0, 0x1CB7840
	0x01CB7754 MOV X1, X31
	0x01CB7758 BL 0x1D9F538
	0x01CB775C TBNZ X0, 0x1, 0x1CB7798
	0x01CB7760 LDR X0, [X21]
	0x01CB7764 LDR X19, [X19 + 0x40]
	0x01CB7768 LDR W8, [X0 + 0xE0]
	0x01CB776C CBNZ W8, 0x1CB7774
	0x01CB7770 BL 0x1B6E8F8
	0x01CB7774 ADRP X8, 0x2297000
	0x01CB7778 LDR X8, [X8 + 0xF68]
	0x01CB777C MOV X1, X19
	0x01CB7780 LDP X20, X19, [X31 + 0x10]
	0x01CB7784 MOVZ W2, 0x2
	0x01CB7788 LDR X0, [X8]
	0x01CB778C MOV X3, X31
	0x01CB7790 LDP X30, X21, [X31], #0x20
	0x01CB7794 B 0x1D69640
	0x01CB7798 TBNZ X0, 0x0, 0x1CB76F0
	0x01CB779C LDR X8, [X19 + 0x38]
	0x01CB77A0 CBZ X8, 0x1CB7840
	0x01CB77A4 LDR X0, [X8 + 0x50]
	0x01CB77A8 CBZ X0, 0x1CB7840
	0x01CB77AC MOV X1, X31
	0x01CB77B0 BL 0x1DBEFE4
	0x01CB77B4 TBZ X0, 0x0, 0x1CB7740
	0x01CB77B8 LDR X8, [X19 + 0x38]
	0x01CB77BC CBZ X8, 0x1CB7840
	0x01CB77C0 LDR X0, [X8 + 0x50]
	0x01CB77C4 MOVZ W1, 0xC
	0x01CB77C8 MOV X2, X31
	0x01CB77CC BL 0x1DD601C
	0x01CB77D0 MOV X21, X0
	0x01CB77D4 MOVZ W0, 0x1
	0x01CB77D8 MOV X1, X31
	0x01CB77DC BL 0x1D29EBC
	0x01CB77E0 LDR X8, [X19 + 0x40]
	0x01CB77E4 CBZ X8, 0x1CB7840
	0x01CB77E8 LDR X8, [X8 + 0x20]
	0x01CB77EC CBZ X8, 0x1CB77F8
	0x01CB77F0 LDR W0, [X8]
	0x01CB77F4 B 0x1CB77FC
	0x01CB77F8 MOV X0, X31
	0x01CB77FC LDR W1, [X19 + 0x68]
	0x01CB7800 MOVZ W2, 0x3
	0x01CB7804 MOV X3, X31
	0x01CB7808 BL 0x1DA8258
	0x01CB780C AND W8, W20, 0x1
	0x01CB7810 STUR X0, [X21 + 0x1C]
	0x01CB7814 STR W8, [X21 + 0x24]
	0x01CB7818 CBZ X21, 0x1CB7840
	0x01CB781C MOVZ W8, 0x60
	0x01CB7820 STR W8, [X21 + 0xC]
	0x01CB7824 LDR X0, [X19 + 0x38]
	0x01CB7828 CBZ X0, 0x1CB7840
	0x01CB782C LDP X20, X19, [X31 + 0x10]
	0x01CB7830 MOV X1, X21
	0x01CB7834 MOV X2, X31
	0x01CB7838 LDP X30, X21, [X31], #0x20
	0x01CB783C B 0x1D8A710
	0x01CB7840 BL 0x1B6EA1C
	0x01CB7844 STR X30, [X31 - 0x20]!
	0x01CB7848 STP X20, X19, [X31 + 0x10]
	0x01CB784C LDR X19, [X0 + 0xC8]
	0x01CB7850 CBZ X19, 0x1CB78A4
	0x01CB7854 LDR W8, [X19 + 0x18]
	0x01CB7858 CMP W8, 0x1
	0x01CB785C B.LT 0x1CB7894
	0x01CB7860 MOV W20, W31
	0x01CB7864 CMP W20, W8
	0x01CB7868 B.CS 0x1CB78A0
	0x01CB786C ADD X8, X19, W20, 0x3, SXTW
	0x01CB7870 LDR X0, [X8 + 0x20]
	0x01CB7874 CBZ X0, 0x1CB78A4
	0x01CB7878 MOVZ W1, 0x1
	0x01CB787C MOV X2, X31
	0x01CB7880 BL 0x1C9AA38
	0x01CB7884 LDR W8, [X19 + 0x18]
	0x01CB7888 ADD W20, W20, 0x1
	0x01CB788C CMP W20, W8
	0x01CB7890 B.LT 0x1CB7864
	0x01CB7894 LDP X20, X19, [X31 + 0x10]
	0x01CB7898 LDR X30, [X31], #0x20
	0x01CB789C RET
	0x01CB78A0 BL 0x1B6EA24
	0x01CB78A4 BL 0x1B6EA1C
	0x01CB78A8 B 0x1CB6164
	0x01CB78AC STP X30, X21, [X31 - 0x20]!
	0x01CB78B0 STP X20, X19, [X31 + 0x10]
	0x01CB78B4 ADRP X21, 0x256C000
	0x01CB78B8 ADRP X20, 0x2296000
	0x01CB78BC LDRB W8, [X21 + 0x4EE]
	0x01CB78C0 LDR X20, [X20 + 0x4E8]
	0x01CB78C4 MOV X19, X0
	0x01CB78C8 TBNZ X8, 0x0, 0x1CB78F8
	0x01CB78CC ADRP X0, 0x2296000
	0x01CB78D0 LDR X0, [X0 + 0x4E8]
	0x01CB78D4 BL 0x1B6E7F0
	0x01CB78D8 ADRP X0, 0x2297000
	0x01CB78DC LDR X0, [X0 + 0xE28]
	0x01CB78E0 BL 0x1B6E7F0
	0x01CB78E4 ADRP X0, 0x2297000
	0x01CB78E8 LDR X0, [X0 + 0xF70]
	0x01CB78EC BL 0x1B6E7F0
	0x01CB78F0 MOVZ W8, 0x1
	0x01CB78F4 STRB W8, [X21 + 0x4EE]
	0x01CB78F8 LDR X0, [X20]
	0x01CB78FC LDR W8, [X0 + 0xE0]
	0x01CB7900 CBNZ W8, 0x1CB7908
	0x01CB7904 BL 0x1B6E8F8
	0x01CB7908 ADRP X21, 0x256C000
	0x01CB790C LDRB W8, [X21 + 0x443]
	0x01CB7910 CBNZ W8, 0x1CB7928
	0x01CB7914 ADRP X0, 0x2296000
	0x01CB7918 LDR X0, [X0 + 0x4E8]
	0x01CB791C BL 0x1B6E7F0
	0x01CB7920 MOVZ W8, 0x1
	0x01CB7924 STRB W8, [X21 + 0x443]
	0x01CB7928 LDR X0, [X20]
	0x01CB792C LDR W8, [X0 + 0xE0]
	0x01CB7930 CBNZ W8, 0x1CB793C
	0x01CB7934 BL 0x1B6E8F8
	0x01CB7938 LDR X0, [X20]
	0x01CB793C LDR X8, [X0 + 0xB8]
	0x01CB7940 LDR X8, [X8]
	0x01CB7944 CBZ X8, 0x1CB79AC
	0x01CB7948 LDR X8, [X8 + 0xA8]
	0x01CB794C CBZ X8, 0x1CB79AC
	0x01CB7950 ADRP X9, 0x2297000
	0x01CB7954 LDR X9, [X9 + 0xE28]
	0x01CB7958 LDR X0, [X8 + 0x58]
	0x01CB795C LDR X1, [X9]
	0x01CB7960 BL 0x24BFDD4
	0x01CB7964 MOV X1, X0
	0x01CB7968 MOV X0, X19
	0x01CB796C BL 0x1CB60F4
	0x01CB7970 MOV X0, X19
	0x01CB7974 BL 0x1CB607C
	0x01CB7978 MOV X1, X31
	0x01CB797C BL 0x30905F0
	0x01CB7980 TBZ X0, 0x0, 0x1CB79A0
	0x01CB7984 ADRP X8, 0x2297000
	0x01CB7988 LDR X8, [X8 + 0xF70]
	0x01CB798C MOV X0, X19
	0x01CB7990 LDP X20, X19, [X31 + 0x10]
	0x01CB7994 LDR X1, [X8]
	0x01CB7998 LDP X30, X21, [X31], #0x20
	0x01CB799C B 0x1CB60F4
	0x01CB79A0 LDP X20, X19, [X31 + 0x10]
	0x01CB79A4 LDP X30, X21, [X31], #0x20
	0x01CB79A8 RET
	0x01CB79AC BL 0x1B6EA1C
	0x01CB79B0 STR X30, [X31 - 0x20]!
	0x01CB79B4 STP X20, X19, [X31 + 0x10]
	0x01CB79B8 LDR X19, [X0 + 0xC8]
	0x01CB79BC CBZ X19, 0x1CB7A0C
	0x01CB79C0 LDR W8, [X19 + 0x18]
	0x01CB79C4 CMP W8, 0x1
	0x01CB79C8 B.LT 0x1CB79FC
	0x01CB79CC MOV W20, W31
	0x01CB79D0 CMP W20, W8
	0x01CB79D4 B.CS 0x1CB7A08
	0x01CB79D8 ADD X8, X19, W20, 0x3, SXTW
	0x01CB79DC LDR X0, [X8 + 0x20]
	0x01CB79E0 CBZ X0, 0x1CB7A0C
	0x01CB79E4 MOV X1, X31
	0x01CB79E8 BL 0x1C9AD9C
	0x01CB79EC LDR W8, [X19 + 0x18]
	0x01CB79F0 ADD W20, W20, 0x1
	0x01CB79F4 CMP W20, W8
	0x01CB79F8 B.LT 0x1CB79D0
	0x01CB79FC LDP X20, X19, [X31 + 0x10]
	0x01CB7A00 LDR X30, [X31], #0x20
	0x01CB7A04 RET
	0x01CB7A08 BL 0x1B6EA24
	0x01CB7A0C BL 0x1B6EA1C
	0x01CB7A10 STR X30, [X31 - 0x10]!
	0x01CB7A14 LDR X8, [X0 + 0xC8]
	0x01CB7A18 CBZ X8, 0x1CB7A44
	0x01CB7A1C LDR W9, [X8 + 0x18]
	0x01CB7A20 CMP W9, W1
	0x01CB7A24 B.LS 0x1CB7A48
	0x01CB7A28 ADD X8, X8, W1, 0x3, SXTW
	0x01CB7A2C LDR X0, [X8 + 0x20]
	0x01CB7A30 CBZ X0, 0x1CB7A44
	0x01CB7A34 MOVZ W1, 0x1
	0x01CB7A38 MOV X2, X31
	0x01CB7A3C LDR X30, [X31], #0x10
	0x01CB7A40 B 0x1C9AA38
	0x01CB7A44 BL 0x1B6EA1C
	0x01CB7A48 BL 0x1B6EA24
	0x01CB7A4C STP D11, D10, [X31 - 0x40]!
	0x01CB7A50 STP D9, D8, [X31 + 0x10]
	0x01CB7A54 STR X30, [X31 + 0x20]
	0x01CB7A58 STP X20, X19, [X31 + 0x30]
	0x01CB7A5C ADRP X20, 0x256C000
	0x01CB7A60 LDRB W8, [X20 + 0x4F0]
	0x01CB7A64 MOV V8.16B, V3.16B
	0x01CB7A68 MOV V9.16B, V2.16B
	0x01CB7A6C MOV V10.16B, V1.16B
	0x01CB7A70 MOV V11.16B, V0.16B
	0x01CB7A74 MOV X19, X0
	0x01CB7A78 TBNZ X8, 0x0, 0x1CB7A9C
	0x01CB7A7C ADRP X0, 0x2297000
	0x01CB7A80 LDR X0, [X0 + 0x1C0]
	0x01CB7A84 BL 0x1B6E7F0
	0x01CB7A88 ADRP X0, 0x2297000
	0x01CB7A8C LDR X0, [X0 + 0xF78]
	0x01CB7A90 BL 0x1B6E7F0
	0x01CB7A94 MOVZ W8, 0x1
	0x01CB7A98 STRB W8, [X20 + 0x4F0]
	0x01CB7A9C LDRB W8, [X19 + 0x58]
	0x01CB7AA0 CBZ W8, 0x1CB7AD0
	0x01CB7AA4 STRB W31, [X19 + 0x58]
	0x01CB7AA8 MOV X0, X19
	0x01CB7AAC MOV V2.16B, V9.16B
	0x01CB7AB0 MOV V3.16B, V8.16B
	0x01CB7AB4 LDP X20, X19, [X31 + 0x30]
	0x01CB7AB8 LDR X30, [X31 + 0x20]
	0x01CB7ABC LDP D9, D8, [X31 + 0x10]
	0x01CB7AC0 MOV V0.16B, V11.16B
	0x01CB7AC4 MOV V1.16B, V10.16B
	0x01CB7AC8 LDP D11, D10, [X31], #0x40
	0x01CB7ACC B 0x1CB5FB4
	0x01CB7AD0 ADRP X20, 0x2297000
	0x01CB7AD4 LDR X20, [X20 + 0x1C0]
	0x01CB7AD8 LDR X0, [X20]
	0x01CB7ADC LDR W8, [X0 + 0xE0]
	0x01CB7AE0 CBNZ W8, 0x1CB7AE8
	0x01CB7AE4 BL 0x1B6E8F8
	0x01CB7AE8 MOV X0, X19
	0x01CB7AEC MOV X1, X31
	0x01CB7AF0 BL 0x1D697C8
	0x01CB7AF4 LDR X0, [X19 + 0x38]
	0x01CB7AF8 CBZ X0, 0x1CB7C24
	0x01CB7AFC MOV X1, X31
	0x01CB7B00 BL 0x1D87040
	0x01CB7B04 CMP W0, 0x4
	0x01CB7B08 B.NE 0x1CB7B20
	0x01CB7B0C LDP X20, X19, [X31 + 0x30]
	0x01CB7B10 LDR X30, [X31 + 0x20]
	0x01CB7B14 LDP D9, D8, [X31 + 0x10]
	0x01CB7B18 LDP D11, D10, [X31], #0x40
	0x01CB7B1C RET
	0x01CB7B20 LDR X0, [X19 + 0x40]
	0x01CB7B24 CBZ X0, 0x1CB7C24
	0x01CB7B28 MOV X1, X31
	0x01CB7B2C BL 0x1D9F538
	0x01CB7B30 TBNZ X0, 0x1, 0x1CB7B74
	0x01CB7B34 LDR X0, [X20]
	0x01CB7B38 LDR X19, [X19 + 0x40]
	0x01CB7B3C LDR W8, [X0 + 0xE0]
	0x01CB7B40 CBNZ W8, 0x1CB7B48
	0x01CB7B44 BL 0x1B6E8F8
	0x01CB7B48 ADRP X8, 0x2297000
	0x01CB7B4C LDR X8, [X8 + 0xF78]
	0x01CB7B50 MOV X1, X19
	0x01CB7B54 LDP X20, X19, [X31 + 0x30]
	0x01CB7B58 LDR X30, [X31 + 0x20]
	0x01CB7B5C LDR X0, [X8]
	0x01CB7B60 LDP D9, D8, [X31 + 0x10]
	0x01CB7B64 MOVZ W2, 0x2
	0x01CB7B68 MOV X3, X31
	0x01CB7B6C LDP D11, D10, [X31], #0x40
	0x01CB7B70 B 0x1D69640
	0x01CB7B74 TBNZ X0, 0x0, 0x1CB7AA8
	0x01CB7B78 LDR X8, [X19 + 0x38]
	0x01CB7B7C CBZ X8, 0x1CB7C24
	0x01CB7B80 LDR X0, [X8 + 0x50]
	0x01CB7B84 CBZ X0, 0x1CB7C24
	0x01CB7B88 MOV X1, X31
	0x01CB7B8C BL 0x1DBEFE4
	0x01CB7B90 TBZ X0, 0x0, 0x1CB7B0C
	0x01CB7B94 LDR X8, [X19 + 0x38]
	0x01CB7B98 CBZ X8, 0x1CB7C24
	0x01CB7B9C LDR X0, [X8 + 0x50]
	0x01CB7BA0 MOVZ W1, 0x18
	0x01CB7BA4 MOV X2, X31
	0x01CB7BA8 BL 0x1DD601C
	0x01CB7BAC MOV X20, X0
	0x01CB7BB0 MOVZ W0, 0x1
	0x01CB7BB4 MOV X1, X31
	0x01CB7BB8 BL 0x1D29EBC
	0x01CB7BBC LDR X8, [X19 + 0x40]
	0x01CB7BC0 CBZ X8, 0x1CB7C24
	0x01CB7BC4 LDR X8, [X8 + 0x20]
	0x01CB7BC8 CBZ X8, 0x1CB7BD4
	0x01CB7BCC LDR W0, [X8]
	0x01CB7BD0 B 0x1CB7BD8
	0x01CB7BD4 MOV X0, X31
	0x01CB7BD8 LDR W1, [X19 + 0x68]
	0x01CB7BDC MOVZ W2, 0x1
	0x01CB7BE0 MOV X3, X31
	0x01CB7BE4 BL 0x1DA8258
	0x01CB7BE8 STUR X0, [X20 + 0x1C]
	0x01CB7BEC STP S11, S10, [X20 + 0x24]
	0x01CB7BF0 STP S9, S8, [X20 + 0x2C]
	0x01CB7BF4 CBZ X20, 0x1CB7C24
	0x01CB7BF8 MOVZ W8, 0xC0
	0x01CB7BFC STR W8, [X20 + 0xC]
	0x01CB7C00 LDR X0, [X19 + 0x38]
	0x01CB7C04 CBZ X0, 0x1CB7C24
	0x01CB7C08 MOV X1, X20
	0x01CB7C0C LDP X20, X19, [X31 + 0x30]
	0x01CB7C10 LDR X30, [X31 + 0x20]
	0x01CB7C14 LDP D9, D8, [X31 + 0x10]
	0x01CB7C18 MOV X2, X31
	0x01CB7C1C LDP D11, D10, [X31], #0x40
	0x01CB7C20 B 0x1D8A710
	0x01CB7C24 BL 0x1B6EA1C
	0x01CB7C28 STR D8, [X31 - 0x20]!
	0x01CB7C2C STR X30, [X31 + 0x8]
	0x01CB7C30 STP X20, X19, [X31 + 0x10]
	0x01CB7C34 ADRP X20, 0x256C000
	0x01CB7C38 LDRB W8, [X20 + 0x4F3]
	0x01CB7C3C MOV V8.16B, V0.16B
	0x01CB7C40 MOV X19, X0
	0x01CB7C44 TBNZ X8, 0x0, 0x1CB7C68
	0x01CB7C48 ADRP X0, 0x2297000
	0x01CB7C4C LDR X0, [X0 + 0x1C0]
	0x01CB7C50 BL 0x1B6E7F0
	0x01CB7C54 ADRP X0, 0x2297000
	0x01CB7C58 LDR X0, [X0 + 0xF80]
	0x01CB7C5C BL 0x1B6E7F0
	0x01CB7C60 MOVZ W8, 0x1
	0x01CB7C64 STRB W8, [X20 + 0x4F3]
	0x01CB7C68 LDRB W8, [X19 + 0x58]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0x256D000
	013 Move W8, [X20+1258]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {78}
	019 Move X0, 0x2297000
	020 Move X0, [X0+2872]
	021 Call 0x1B6F7F0
	022 Move X0, 0x2298000
	023 Move X0, [X0+3824]
	024 Call 0x1B6F7F0
	025 Move X0, 0x2298000
	026 Move X0, [X0+3832]
	027 Call 0x1B6F7F0
	028 Move X0, 0x2298000
	029 Move X0, [X0+624]
	030 Call 0x1B6F7F0
	031 Move X0, 0x2298000
	032 Move X0, [X0+3840]
	033 Call 0x1B6F7F0
	034 Move X0, 0x2298000
	035 Move X0, [X0+368]
	036 Call 0x1B6F7F0
	037 Move X0, 0x2297000
	038 Move X0, [X0+1256]
	039 Call 0x1B6F7F0
	040 Move X0, 0x2298000
	041 Move X0, [X0+3848]
	042 Call 0x1B6F7F0
	043 Move X0, 0x2297000
	044 Move X0, [X0+2976]
	045 Call 0x1B6F7F0
	046 Move X0, 0x2298000
	047 Move X0, [X0+3856]
	048 Call 0x1B6F7F0
	049 Move X0, 0x2298000
	050 Move X0, [X0+3864]
	051 Call 0x1B6F7F0
	052 Move X0, 0x2298000
	053 Move X0, [X0+3872]
	054 Call 0x1B6F7F0
	055 Move X0, 0x2298000
	056 Move X0, [X0+3880]
	057 Call 0x1B6F7F0
	058 Move X0, 0x2298000
	059 Move X0, [X0+3888]
	060 Call 0x1B6F7F0
	061 Move X0, 0x2298000
	062 Move X0, [X0+3896]
	063 Call 0x1B6F7F0
	064 Move X0, 0x2298000
	065 Move X0, [X0+3904]
	066 Call 0x1B6F7F0
	067 Move X0, 0x2298000
	068 Move X0, [X0+680]
	069 Call 0x1B6F7F0
	070 Move X0, 0x2297000
	071 Move X0, [X0+2960]
	072 Call 0x1B6F7F0
	073 Move X0, 0x2298000
	074 Move X0, [X0+408]
	075 Call 0x1B6F7F0
	076 Move W8, 1
	077 Move [X20+1258], W8
	078 Move W2, 1
	079 Move X0, X19
	080 Move W1, W31
	081 Move X3, X31
	082 Call NetworkBehaviour.GetChangeDetector, X0, X1, X2
	083 Move X8, [X19+64]
	084 Move [X19+256], X0
	085 Compare X8, 0
	086 JumpIfEqual {501}
	087 Move X0, X8
	088 Move X1, X31
	089 Call NetworkObject.get_HasInputAuthority, X0
	090 Move X8, [X19+168]
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {217}
	095 Compare X8, 0
	096 JumpIfEqual {501}
	097 Move X0, X8
	098 Move X1, X31
	099 Call Component.get_gameObject, X0
	100 Compare X0, 0
	101 JumpIfEqual {501}
	102 Move W1, W31
	103 Move X2, X31
	104 Call GameObject.SetActive, X0, X1
	105 Move X0, X19
	106 Call NetPlayer.PropagateLocalPlayerColor, X0
	107 Move X8, 0x2297000
	108 Move X8, [X8+2960]
	109 Move X0, [X8]
	110 Call 0x1B6FA0C
	111 Move X8, 0x2298000
	112 Move X8, [X8+3888]
	113 Move X1, X19
	114 Move X3, X31
	115 Move X20, X0
	116 Move X2, [X8]
	117 Call ObserverDelegate..ctor, X0, X1, X2
	118 Move X8, 0x2297000
	119 Move X8, [X8+2976]
	120 Move W1, 1
	121 Move X0, [X8]
	122 Call 0x1B6F868
	123 Move X22, 0x2297000
	124 Move X22, [X22+1256]
	125 Move X21, X0
	126 Move X8, [X22]
	127 Move W9, [X8+224]
	128 Compare W9, 0
	129 JumpIfNotEqual {132}
	130 Move X0, X8
	131 Call 0x1B6F8F8
	132 Move X23, 0x256D000
	133 Move W8, [X23+1091]
	134 Compare W8, 0
	135 JumpIfNotEqual {141}
	136 Move X0, 0x2297000
	137 Move X0, [X0+1256]
	138 Call 0x1B6F7F0
	139 Move W8, 1
	140 Move [X23+1091], W8
	141 Move X0, [X22]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {147}
	145 Call 0x1B6F8F8
	146 Move X0, [X22]
	147 Move X8, [X0+184]
	148 Move X8, [X8]
	149 Compare X8, 0
	150 JumpIfEqual {501}
	151 Move X8, [X8+168]
	152 Compare X8, 0
	153 JumpIfEqual {501}
	154 Compare X21, 0
	155 JumpIfEqual {501}
	156 Move X22, [X8+88]
	157 Compare X22, 0
	158 JumpIfEqual {165}
	159 Move X8, [X21]
	160 Move X0, X22
	161 Move X1, [X8+64]
	162 Call 0x1B6F8FC
	163 Compare X0, 0
	164 JumpIfEqual {503}
	165 Move W8, [X21+24]
	166 Compare W8, 0
	167 JumpIfEqual {502}
	168 Move X0, X20
	169 Move X1, X21
	170 Move X2, X31
	171 Move [X21+32], X22
	172 Call App.RegisterObserver, X0, X1
	173 Move X22, 0x2298000
	174 Move X22, [X22+408]
	175 Move X0, [X22]
	176 Move W8, [X0+224]
	177 Compare W8, 0
	178 JumpIfNotEqual {181}
	179 Call 0x1B6F8F8
	180 Move X0, [X22]
	181 Move X23, 0x2298000
	182 Move X8, [X0+184]
	183 Move X23, [X23+3832]
	184 Move X20, [X8+24]
	185 Move X0, [X23]
	186 Call 0x1B6FA0C
	187 Move X8, 0x2298000
	188 Move X8, [X8+3864]
	189 Move X1, X19
	190 Move X3, X31
	191 Move X21, X0
	192 Move X2, [X8]
	193 Call Action`2<Int32Enum, Single>..ctor, X0, X1, X2
	194 Move X0, X20
	195 Move X1, X21
	196 Move X2, X31
	197 Call Delegate.Combine, X0, X1
	198 Compare X0, 0
	199 JumpIfEqual {237}
	200 Move X21, [X23]
	201 Move X20, X0
	202 Move X1, X21
	203 Call 0x1B6F8FC
	204 Compare X0, 0
	205 JumpIfEqual {340}
	206 Move X8, [X22]
	207 Move X8, [X8+184]
	208 Move [X8+24], X0
	209 Move X21, [X23]
	210 Move X0, X20
	211 Move X1, X21
	212 Call 0x1B6F8FC
	213 Compare X0, 0
	214 JumpIfEqual {340}
	215 Move X8, [X22]
	216 Move X8, [X8+184]
	217 Compare X8, 0
	218 JumpIfEqual {501}
	219 Move X2, [X19+144]
	220 Move X3, [X19+152]
	221 Move X1, [X19+136]
	222 Move W6, 1
	223 Move X0, X8
	224 Move X4, X2
	225 Move X5, X3
	226 Move X7, X31
	227 Call PlayerView.Setup, X0, X1, X2, X3, X4, X5, X6
	228 Move X0, X19
	229 Call NetPlayer.HandleColorChanged, X0
	230 Move X0, X19
	231 Call NetPlayer.RemoteVoiceVolumeUpdater, X0
	232 Move X1, X0
	233 Move X0, X19
	234 Move X2, X31
	235 Call MonoBehaviour.StartCoroutine, X0, X1
	236 Move [X19+272], X0
	237 Move X8, [X22]
	238 Move X8, [X8+184]
	239 Move [X8+24], X31
	240 Move X23, 0x2297000
	241 Move X20, [X8+32]
	242 Move X23, [X23+2872]
	243 Move X0, [X23]
	244 Call 0x1B6FA0C
	245 Move X8, 0x2298000
	246 Move X8, [X8+3896]
	247 Move X1, X19
	248 Move X3, X31
	249 Move X21, X0
	250 Move X2, [X8]
	251 Call Action`1<Boolean>..ctor, X0, X1, X2
	252 Move X0, X20
	253 Move X1, X21
	254 Move X2, X31
	255 Call Delegate.Combine, X0, X1
	256 Compare X0, 0
	257 JumpIfEqual {275}
	258 Move X21, [X23]
	259 Move X20, X0
	260 Move X1, X21
	261 Call 0x1B6F8FC
	262 Compare X0, 0
	263 JumpIfEqual {340}
	264 Move X8, [X22]
	265 Move X8, [X8+184]
	266 Move [X8+32], X0
	267 Move X21, [X23]
	268 Move X0, X20
	269 Move X1, X21
	270 Call 0x1B6F8FC
	271 Compare X0, 0
	272 JumpIfEqual {340}
	273 Move X8, [X22]
	274 Move X8, [X8+184]
	275 Move X8, [X22]
	276 Move X8, [X8+184]
	277 Move [X8+32], X31
	278 Move X23, 0x2298000
	279 Move X20, [X8+40]
	280 Move X23, [X23+368]
	281 Move X0, [X23]
	282 Call 0x1B6FA0C
	283 Move X8, 0x2298000
	284 Move X8, [X8+3904]
	285 Move X1, X19
	286 Move X3, X31
	287 Move X21, X0
	288 Move X2, [X8]
	289 Call Action..ctor, X0, X1, X2
	290 Move X0, X20
	291 Move X1, X21
	292 Move X2, X31
	293 Call Delegate.Combine, X0, X1
	294 Compare X0, 0
	295 JumpIfEqual {304}
	296 Move X1, [X23]
	297 Move X8, [X0]
	298 NotImplemented "Instruction CMP not yet implemented."
	299 Move X8, [X22]
	300 Move X8, [X8+184]
	301 Move [X8+40], X0
	302 Move X9, [X0]
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Move X8, [X22]
	305 Move X8, [X8+184]
	306 Move [X8+40], X0
	307 Move X23, 0x2298000
	308 Move X20, [X8+72]
	309 Move X23, [X23+3824]
	310 Move X0, [X23]
	311 Call 0x1B6FA0C
	312 Move X8, 0x2298000
	313 Move X8, [X8+3880]
	314 Move X1, X19
	315 Move X3, X31
	316 Move X21, X0
	317 Move X2, [X8]
	318 Call Action`1<Int32>..ctor, X0, X1, X2
	319 Move X0, X20
	320 Move X1, X21
	321 Move X2, X31
	322 Call Delegate.Combine, X0, X1
	323 Compare X0, 0
	324 JumpIfEqual {343}
	325 Move X21, [X23]
	326 Move X20, X0
	327 Move X1, X21
	328 Call 0x1B6F8FC
	329 Compare X0, 0
	330 JumpIfEqual {340}
	331 Move X8, [X22]
	332 Move X8, [X8+184]
	333 Move [X8+72], X0
	334 Move X21, [X23]
	335 Move X0, X20
	336 Move X1, X21
	337 Call 0x1B6F8FC
	338 Compare X0, 0
	339 JumpIfNotEqual {346}
	340 Move X0, X20
	341 Move X1, X21
	342 Call 0x1B6FCDC
	343 Move X8, [X22]
	344 Move X8, [X8+184]
	345 Move [X8+72], X31
	346 Move X0, X19
	347 Call NetPlayer.VoiceVolumeUpdater, X0
	348 Move X1, X0
	349 Move X0, X19
	350 Move X2, X31
	351 Call MonoBehaviour.StartCoroutine, X0, X1
	352 Move X22, [X19+200]
	353 Move [X19+272], X0
	354 Compare X22, 0
	355 JumpIfEqual {501}
	356 Move W8, [X22+24]
	357 NotImplemented "Instruction CMP not yet implemented."
	358 Move X24, 0x2298000
	359 Move X25, 0x2298000
	360 Move X26, 0x2298000
	361 Move X27, 0x2298000
	362 Move X24, [X24+624]
	363 Move X25, [X25+3856]
	364 Move X26, [X26+3840]
	365 Move X27, [X27+3872]
	366 Move W23, W31
	367 NotImplemented "Instruction CMP not yet implemented."
	368 Add X8, X22, W23
	369 Move X28, [X8+32]
	370 Compare X28, 0
	371 JumpIfEqual {501}
	372 Move X0, [X24]
	373 Move X20, [X28+144]
	374 Call 0x1B6FA0C
	375 Move X2, [X25]
	376 Move X1, X19
	377 Move X3, X31
	378 Move X21, X0
	379 Call Action`2<Int32Enum, Object>..ctor, X0, X1, X2
	380 Move X0, X20
	381 Move X1, X21
	382 Move X2, X31
	383 Call Delegate.Combine, X0, X1
	384 Move X21, [X24]
	385 Compare X0, 0
	386 JumpIfEqual {400}
	387 Move X1, X21
	388 Move X20, X0
	389 Call 0x1B6F8FC
	390 Compare X0, 0
	391 JumpIfEqual {340}
	392 Move [X28+144], X0
	393 Move X21, [X24]
	394 Move X0, X20
	395 Move X1, X21
	396 Call 0x1B6F8FC
	397 Compare X0, 0
	398 JumpIfEqual {340}
	399 Move X21, [X24]
	400 Move [X28+144], X31
	401 Move X20, [X28+160]
	402 Move X0, X21
	403 Call 0x1B6FA0C
	404 Move X2, [X25]
	405 Move X1, X19
	406 Move X3, X31
	407 Move X21, X0
	408 Call Action`2<Int32Enum, Object>..ctor, X0, X1, X2
	409 Move X0, X20
	410 Move X1, X21
	411 Move X2, X31
	412 Call Delegate.Combine, X0, X1
	413 Compare X0, 0
	414 JumpIfEqual {428}
	415 Move X21, [X24]
	416 Move X20, X0
	417 Move X1, X21
	418 Call 0x1B6F8FC
	419 Compare X0, 0
	420 JumpIfEqual {340}
	421 Move [X28+160], X0
	422 Move X21, [X24]
	423 Move X0, X20
	424 Move X1, X21
	425 Call 0x1B6F8FC
	426 Compare X0, 0
	427 JumpIfNotEqual {429}
	428 Move [X28+160], X31
	429 Move X0, [X26]
	430 Move X20, [X28+152]
	431 Call 0x1B6FA0C
	432 Move X2, [X27]
	433 Move X1, X19
	434 Move X3, X31
	435 Move X21, X0
	436 Call Action`3<Int32Enum, Object, Vector3>..ctor, X0, X1, X2
	437 Move X0, X20
	438 Move X1, X21
	439 Move X2, X31
	440 Call Delegate.Combine, X0, X1
	441 Compare X0, 0
	442 JumpIfEqual {456}
	443 Move X21, [X26]
	444 Move X20, X0
	445 Move X1, X21
	446 Call 0x1B6F8FC
	447 Compare X0, 0
	448 JumpIfEqual {340}
	449 Move [X28+152], X0
	450 Move X21, [X26]
	451 Move X0, X20
	452 Move X1, X21
	453 Call 0x1B6F8FC
	454 Compare X0, 0
	455 JumpIfNotEqual {457}
	456 Move [X28+152], X31
	457 Move W8, [X22+24]
	458 Add W23, W23, 1
	459 NotImplemented "Instruction CMP not yet implemented."
	460 Move X20, 0x2298000
	461 Move X20, [X20+680]
	462 Move X0, X19
	463 Call NetPlayer.HandleDisplayNameChanged, X0
	464 Move X0, [X20]
	465 Move W8, [X0+224]
	466 Compare W8, 0
	467 JumpIfNotEqual {470}
	468 Call 0x1B6F8F8
	469 Move X0, [X20]
	470 Move X8, [X19+64]
	471 Compare X8, 0
	472 JumpIfEqual {501}
	473 Move X9, [X0+184]
	474 Move X8, [X8+32]
	475 Move X0, [X9]
	476 Compare X8, 0
	477 JumpIfEqual {498}
	478 Move W1, [X8]
	479 Compare X0, 0
	480 JumpIfEqual {501}
	481 Move X8, 0x2298000
	482 Move X8, [X8+3848]
	483 Move X2, X19
	484 Move X20, [X31+80]
	485 Move X19, [X31+88]
	486 Move X22, [X31+64]
	487 Move X21, [X31+72]
	488 Move X3, [X8]
	489 Move X24, [X31+48]
	490 Move X23, [X31+56]
	491 Move X26, [X31+32]
	492 Move X25, [X31+40]
	493 Move X28, [X31+16]
	494 Move X27, [X31+24]
	495 Move X30, [X31+96]
	496 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	497 Return 
	498 Move W1, W31
	499 Compare X0, 0
	500 JumpIfNotEqual {481}
	501 Call 0x1B6FA1C
	502 Call 0x1B6FA24
	503 Call 0x1B6FA40
	504 Move X1, X31
	505 Call 0x1B6F8E8

Method: System.Void Despawned(Fusion.NetworkRunner runner, System.Boolean hasState)

Disassembly:
	0x01CB7E1C BL 0x1D65000
	0x01CB7E20 LDR X0, [X19 + 0x40]
	0x01CB7E24 CBZ X0, 0x1CB7FD8
	0x01CB7E28 LDRB W8, [X0 + 0x60]
	0x01CB7E2C TBNZ X8, 0x1, 0x1CB7FD8
	0x01CB7E30 MOV X1, X31
	0x01CB7E34 BL 0x1D9E780
	0x01CB7E38 TBZ X0, 0x0, 0x1CB7FD8
	0x01CB7E3C ADRP X8, 0x2297000
	0x01CB7E40 LDR X8, [X8 + 0xF88]
	0x01CB7E44 ADD X1, X31, 0x0
	0x01CB7E48 MOV X0, X19
	0x01CB7E4C LDR X2, [X8]
	0x01CB7E50 BL 0x210C088
	0x01CB7E54 TBZ X0, 0x0, 0x1CB7EE0
	0x01CB7E58 MOV X0, X19
	0x01CB7E5C MOV X1, X31
	0x01CB7E60 BL 0x3A9B084
	0x01CB7E64 CBZ X0, 0x1CB7FFC
	0x01CB7E68 LDP S5, S6, [X31 + 0x14]
	0x01CB7E6C LDP S3, S4, [X31 + 0xC]
	0x01CB7E70 LDP S1, S2, [X31 + 0x4]
	0x01CB7E74 LDR V0, [X31]
	0x01CB7E78 MOV X1, X31
	0x01CB7E7C BL 0x3AA80CC
	0x01CB7E80 LDR X0, [X19 + 0x88]
	0x01CB7E84 CBZ X0, 0x1CB7FFC
	0x01CB7E88 LDP S5, S6, [X31 + 0x30]
	0x01CB7E8C LDP S3, S4, [X31 + 0x28]
	0x01CB7E90 LDP S1, S2, [X31 + 0x20]
	0x01CB7E94 LDR V0, [X31 + 0x1C]
	0x01CB7E98 MOV X1, X31
	0x01CB7E9C BL 0x3AA80CC
	0x01CB7EA0 LDR X0, [X19 + 0x98]
	0x01CB7EA4 CBZ X0, 0x1CB7FFC
	0x01CB7EA8 LDP S5, S6, [X31 + 0x4C]
	0x01CB7EAC LDP S3, S4, [X31 + 0x44]
	0x01CB7EB0 LDP S1, S2, [X31 + 0x3C]
	0x01CB7EB4 LDR V0, [X31 + 0x38]
	0x01CB7EB8 MOV X1, X31
	0x01CB7EBC BL 0x3AA80CC
	0x01CB7EC0 LDR X0, [X19 + 0x90]
	0x01CB7EC4 CBZ X0, 0x1CB7FFC
	0x01CB7EC8 LDP S5, S6, [X31 + 0x68]
	0x01CB7ECC LDP S3, S4, [X31 + 0x60]
	0x01CB7ED0 LDP S1, S2, [X31 + 0x58]
	0x01CB7ED4 LDR V0, [X31 + 0x54]
	0x01CB7ED8 MOV X1, X31
	0x01CB7EDC BL 0x3AA80CC
	0x01CB7EE0 LDR W8, [X19 + 0x120]
	0x01CB7EE4 SUBS W8, W8, 0x1
	0x01CB7EE8 B.LT 0x1CB7EF8
	0x01CB7EEC STR W8, [X19 + 0x120]
	0x01CB7EF0 B.NE 0x1CB7EF8
	0x01CB7EF4 STR W31, [X19 + 0x10C]
	0x01CB7EF8 LDR V0, [X19 + 0x108]
	0x01CB7EFC LDR V1, [X19 + 0x10C]
	0x01CB7F00 FMOV S2, 5
	0x01CB7F04 MOV X0, X19
	0x01CB7F08 FMUL S0, S0, S2
	0x01CB7F0C FCMP S1, S0
	0x01CB7F10 FCSEL S0, S1, S0, GT
	0x01CB7F14 BL 0x1CB6224
	0x01CB7F18 LDR X0, [X19 + 0x38]
	0x01CB7F1C CBZ X0, 0x1CB7FFC
	0x01CB7F20 LDR W8, [X0 + 0x180]
	0x01CB7F24 CMP W8, 0x2
	0x01CB7F28 B.NE 0x1CB7FD8
	0x01CB7F2C MOV X1, X31
	0x01CB7F30 BL 0x1D8B250
	0x01CB7F34 LDR X20, [X19 + 0x38]
	0x01CB7F38 CBZ X20, 0x1CB7FFC
	0x01CB7F3C MOV W22, W0
	0x01CB7F40 MOV X0, X20
	0x01CB7F44 MOV X1, X31
	0x01CB7F48 BL 0x1D87528
	0x01CB7F4C MOV X21, X0
	0x01CB7F50 TBZ X22, 0x0, 0x1CB7FA8
	0x01CB7F54 ADRP X19, 0x256C000
	0x01CB7F58 LDRB W8, [X19 + 0x513]
	0x01CB7F5C CBNZ W8, 0x1CB7F74
	0x01CB7F60 ADRP X0, 0x2297000
	0x01CB7F64 LDR X0, [X0 + 0xF90]
	0x01CB7F68 BL 0x1B6E7F0
	0x01CB7F6C MOVZ W8, 0x1
	0x01CB7F70 STRB W8, [X19 + 0x513]
	0x01CB7F74 ADRP X8, 0x2297000
	0x01CB7F78 LDR X8, [X8 + 0xF90]
	0x01CB7F7C LDR X8, [X8]
	0x01CB7F80 LDR X8, [X8 + 0xB8]
	0x01CB7F84 LDR X8, [X8]
	0x01CB7F88 CBZ X8, 0x1CB7FFC
	0x01CB7F8C LDR X0, [X8 + 0x20]
	0x01CB7F90 CBZ X0, 0x1CB7FFC
	0x01CB7F94 MOV X1, X31
	0x01CB7F98 BL 0x3AA7658
	0x01CB7F9C AND X1, X21, 0x0
	0x01CB7FA0 MOVZ W8, 0x43960000
	0x01CB7FA4 B 0x1CB7FC8
	0x01CB7FA8 MOV X0, X19
	0x01CB7FAC MOV X1, X31
	0x01CB7FB0 BL 0x3A9B084
	0x01CB7FB4 CBZ X0, 0x1CB7FFC
	0x01CB7FB8 MOV X1, X31
	0x01CB7FBC BL 0x3AA7658
	0x01CB7FC0 AND X1, X21, 0x0
	0x01CB7FC4 MOVZ W8, 0x42C80000
	0x01CB7FC8 FMOV S3, W8
	0x01CB7FCC MOV X0, X20
	0x01CB7FD0 MOV X2, X31
	0x01CB7FD4 BL 0x1D8E414
	0x01CB7FD8 LDR X8, [X23 + 0x28]
	0x01CB7FDC LDR X9, [X31 + 0xA8]
	0x01CB7FE0 CMP X8, X9
	0x01CB7FE4 B.NE 0x1CB8000
	0x01CB7FE8 LDP X20, X19, [X31 + 0xD0]
	0x01CB7FEC LDP X22, X21, [X31 + 0xC0]
	0x01CB7FF0 LDP X30, X23, [X31 + 0xB0]
	0x01CB7FF4 ADD X31, X31, 0xE0
	0x01CB7FF8 RET
	0x01CB7FFC BL 0x1B6EA1C
	0x01CB8000 BL 0x3D19880
	0x01CB8004 STR X30, [X31 - 0x20]!
	0x01CB8008 STP X20, X19, [X31 + 0x10]
	0x01CB800C ADRP X20, 0x256B000
	0x01CB8010 LDRB W8, [X20 + 0x4F5]
	0x01CB8014 MOV X19, X0
	0x01CB8018 TBNZ X8, 0x0, 0x1CB8030
	0x01CB801C ADRP X0, 0x2295000
	0x01CB8020 LDR X0, [X0 + 0x478]
	0x01CB8024 BL 0x1B6E7F0
	0x01CB8028 MOVZ W8, 0x1
	0x01CB802C STRB W8, [X20 + 0x4F5]
	0x01CB8030 LDR X0, [X19 + 0x40]
	0x01CB8034 CBZ X0, 0x1CB80E0
	0x01CB8038 MOV X1, X31
	0x01CB803C BL 0x1D9E6A0
	0x01CB8040 TBZ X0, 0x0, 0x1CB80A0
	0x01CB8044 ADRP X8, 0x2295000
	0x01CB8048 LDR X8, [X8 + 0x478]
	0x01CB804C LDR X20, [X19 + 0xB0]
	0x01CB8050 LDR X0, [X8]
	0x01CB8054 LDR W8, [X0 + 0xE0]
	0x01CB8058 CBNZ W8, 0x1CB8060
	0x01CB805C BL 0x1B6E8F8
	0x01CB8060 MOV X0, X20
	0x01CB8064 MOV X1, X31
	0x01CB8068 MOV X2, X31
	0x01CB806C BL 0x3A9D6EC
	0x01CB8070 TBZ X0, 0x0, 0x1CB80D4
	0x01CB8074 LDR X20, [X19 + 0xB0]
	0x01CB8078 MOV X0, X19
	0x01CB807C BL 0x1CB47E0
	0x01CB8080 CBZ X20, 0x1CB80E0
	0x01CB8084 ORN W8, W31, W0, 0x0
	0x01CB8088 MOV X0, X20
	0x01CB808C LDP X20, X19, [X31 + 0x10]
	0x01CB8090 AND W1, W8, 0x1
	0x01CB8094 MOV X2, X31
	0x01CB8098 LDR X30, [X31], #0x20
	0x01CB809C B 0x33DDC68
	0x01CB80A0 LDR X20, [X19 + 0x128]
	0x01CB80A4 MOV X0, X19
	0x01CB80A8 BL 0x1CB47E0
	0x01CB80AC CBZ X20, 0x1CB80E0
	0x01CB80B0 ANDS W31, W0, 0x1
	0x01CB80B4 MOV X0, X20
	0x01CB80B8 LDP X20, X19, [X31 + 0x10]
	0x01CB80BC FMOV S0, 1
	0x01CB80C0 FMOV S1, W31
	0x01CB80C4 FCSEL S0, S1, S0, NE
	0x01CB80C8 MOV X1, X31
	0x01CB80CC LDR X30, [X31], #0x20
	0x01CB80D0 B 0x3A657B4
	0x01CB80D4 LDP X20, X19, [X31 + 0x10]
	0x01CB80D8 LDR X30, [X31], #0x20
	0x01CB80DC RET
	0x01CB80E0 BL 0x1B6EA1C
	0x01CB80E4 RET
	0x01CB80E8 STR D10, [X31 - 0x40]!
	0x01CB80EC STP D9, D8, [X31 + 0x8]
	0x01CB80F0 STR X30, [X31 + 0x18]
	0x01CB80F4 STP X22, X21, [X31 + 0x20]
	0x01CB80F8 STP X20, X19, [X31 + 0x30]
	0x01CB80FC ADRP X20, 0x256B000
	0x01CB8100 LDRB W8, [X20 + 0x4F8]
	0x01CB8104 MOV X19, X0
	0x01CB8108 TBNZ X8, 0x0, 0x1CB812C
	0x01CB810C ADRP X0, 0x2295000
	0x01CB8110 LDR X0, [X0 + 0x478]
	0x01CB8114 BL 0x1B6E7F0
	0x01CB8118 ADRP X0, 0x2296000
	0x01CB811C LDR X0, [X0 + 0x198]
	0x01CB8120 BL 0x1B6E7F0
	0x01CB8124 MOVZ W8, 0x1
	0x01CB8128 STRB W8, [X20 + 0x4F8]
	0x01CB812C LDR X0, [X19 + 0x40]
	0x01CB8130 CBZ X0, 0x1CB8644
	0x01CB8134 LDRB W8, [X0 + 0x60]
	0x01CB8138 TBNZ X8, 0x1, 0x1CB8644
	0x01CB813C MOV X1, X31
	0x01CB8140 BL 0x1D9E6A0
	0x01CB8144 TBZ X0, 0x0, 0x1CB8644
	0x01CB8148 ADRP X21, 0x2296000
	0x01CB814C LDR X21, [X21 + 0x198]
	0x01CB8150 LDR X0, [X21]
	0x01CB8154 LDR W8, [X0 + 0xE0]
	0x01CB8158 CBNZ W8, 0x1CB8160
	0x01CB815C BL 0x1B6E8F8
	0x01CB8160 ADRP X22, 0x256B000
	0x01CB8164 LDRB W8, [X22 + 0x44F]
	0x01CB8168 CBNZ W8, 0x1CB8180
	0x01CB816C ADRP X0, 0x2296000
	0x01CB8170 LDR X0, [X0 + 0x198]
	0x01CB8174 BL 0x1B6E7F0
	0x01CB8178 MOVZ W8, 0x1
	0x01CB817C STRB W8, [X22 + 0x44F]
	0x01CB8180 LDR X0, [X21]
	0x01CB8184 LDR W8, [X0 + 0xE0]
	0x01CB8188 CBNZ W8, 0x1CB8194
	0x01CB818C BL 0x1B6E8F8
	0x01CB8190 LDR X0, [X21]
	0x01CB8194 ADRP X8, 0x2295000
	0x01CB8198 LDR X8, [X8 + 0x478]
	0x01CB819C LDR X9, [X0 + 0xB8]
	0x01CB81A0 LDR X8, [X8]
	0x01CB81A4 LDR X20, [X9]
	0x01CB81A8 LDR W10, [X8 + 0xE0]
	0x01CB81AC CBNZ W10, 0x1CB81B8
	0x01CB81B0 MOV X0, X8
	0x01CB81B4 BL 0x1B6E8F8
	0x01CB81B8 MOV X0, X20
	0x01CB81BC MOV X1, X31
	0x01CB81C0 MOV X2, X31
	0x01CB81C4 BL 0x3A9D6EC
	0x01CB81C8 TBZ X0, 0x0, 0x1CB86D4
	0x01CB81CC MOV X0, X19
	0x01CB81D0 MOV X1, X31
	0x01CB81D4 BL 0x3A9B084
	0x01CB81D8 LDR X8, [X21]
	0x01CB81DC MOV X20, X0
	0x01CB81E0 LDR W9, [X8 + 0xE0]
	0x01CB81E4 CBNZ W9, 0x1CB81F0
	0x01CB81E8 MOV X0, X8
	0x01CB81EC BL 0x1B6E8F8
	0x01CB81F0 LDRB W8, [X22 + 0x44F]
	0x01CB81F4 CBNZ W8, 0x1CB820C
	0x01CB81F8 ADRP X0, 0x2296000
	0x01CB81FC LDR X0, [X0 + 0x198]
	0x01CB8200 BL 0x1B6E7F0
	0x01CB8204 MOVZ W8, 0x1
	0x01CB8208 STRB W8, [X22 + 0x44F]
	0x01CB820C LDR X0, [X21]
	0x01CB8210 LDR W8, [X0 + 0xE0]
	0x01CB8214 CBNZ W8, 0x1CB8220
	0x01CB8218 BL 0x1B6E8F8
	0x01CB821C LDR X0, [X21]
	0x01CB8220 LDR X8, [X0 + 0xB8]
	0x01CB8224 LDR X8, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x256D000
	008 Move X22, 0x2298000
	009 Move W8, [X23+1259]
	010 Move X22, [X22+680]
	011 Move W21, W2
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {62}
	018 Move X0, 0x2297000
	019 Move X0, [X0+2872]
	020 Call 0x1B6F7F0
	021 Move X0, 0x2298000
	022 Move X0, [X0+3824]
	023 Call 0x1B6F7F0
	024 Move X0, 0x2298000
	025 Move X0, [X0+3832]
	026 Call 0x1B6F7F0
	027 Move X0, 0x2298000
	028 Move X0, [X0+368]
	029 Call 0x1B6F7F0
	030 Move X0, 0x2297000
	031 Move X0, [X0+1256]
	032 Call 0x1B6F7F0
	033 Move X0, 0x2298000
	034 Move X0, [X0+3928]
	035 Call 0x1B6F7F0
	036 Move X0, 0x2298000
	037 Move X0, [X0+3864]
	038 Call 0x1B6F7F0
	039 Move X0, 0x2298000
	040 Move X0, [X0+3880]
	041 Call 0x1B6F7F0
	042 Move X0, 0x2298000
	043 Move X0, [X0+3888]
	044 Call 0x1B6F7F0
	045 Move X0, 0x2298000
	046 Move X0, [X0+3896]
	047 Call 0x1B6F7F0
	048 Move X0, 0x2298000
	049 Move X0, [X0+3904]
	050 Call 0x1B6F7F0
	051 Move X0, 0x2298000
	052 Move X0, [X0+680]
	053 Call 0x1B6F7F0
	054 Move X0, 0x2297000
	055 Move X0, [X0+2960]
	056 Call 0x1B6F7F0
	057 Move X0, 0x2298000
	058 Move X0, [X0+408]
	059 Call 0x1B6F7F0
	060 Move W8, 1
	061 Move [X23+1259], W8
	062 And W2, W21, 1
	063 Move X0, X19
	064 Move X1, X20
	065 Move X3, X31
	066 Call NetworkBehaviour.Despawned, X0, X1, X2
	067 Move X0, [X22]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {73}
	071 Call 0x1B6F8F8
	072 Move X0, [X22]
	073 Move X8, [X19+64]
	074 Compare X8, 0
	075 JumpIfEqual {135}
	076 Move X9, [X0+184]
	077 Move X8, [X8+32]
	078 Move X0, [X9]
	079 Compare X8, 0
	080 JumpIfEqual {132}
	081 Move W1, [X8]
	082 Compare X0, 0
	083 JumpIfEqual {135}
	084 Move X8, 0x2298000
	085 Move X8, [X8+3928]
	086 Move X22, 0x2298000
	087 Move X23, 0x2298000
	088 Move X21, 0x2298000
	089 Move X2, [X8]
	090 Move X22, [X22+408]
	091 Move X23, [X23+3832]
	092 Move X21, [X21+3864]
	093 Call Dictionary`2<UInt32, Object>.Remove, X0, X1
	094 Move X0, [X22]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {100}
	098 Call 0x1B6F8F8
	099 Move X0, [X22]
	100 Move X8, [X0+184]
	101 Move X0, [X23]
	102 Move X20, [X8+24]
	103 Call 0x1B6FA0C
	104 Move X2, [X21]
	105 Move X1, X19
	106 Move X3, X31
	107 Move X21, X0
	108 Call Action`2<Int32Enum, Single>..ctor, X0, X1, X2
	109 Move X0, X20
	110 Move X1, X21
	111 Move X2, X31
	112 Call Delegate.Remove, X0, X1
	113 Compare X0, 0
	114 JumpIfEqual {136}
	115 Move X21, [X23]
	116 Move X20, X0
	117 Move X1, X21
	118 Call 0x1B6F8FC
	119 Compare X0, 0
	120 JumpIfEqual {239}
	121 Move X8, [X22]
	122 Move X8, [X8+184]
	123 Move [X8+24], X0
	124 Move X21, [X23]
	125 Move X0, X20
	126 Move X1, X21
	127 Call 0x1B6F8FC
	128 Compare X0, 0
	129 JumpIfEqual {239}
	130 Move X8, [X22]
	131 Move X8, [X8+184]
	132 Move W1, W31
	133 Compare X0, 0
	134 JumpIfNotEqual {84}
	135 Call 0x1B6FA1C
	136 Move X8, [X22]
	137 Move X8, [X8+184]
	138 Move [X8+24], X31
	139 Move X23, 0x2296000
	140 Move X23, [X23+2872]
	141 Move X21, 0x2297000
	142 Move X20, [X8+32]
	143 Move X0, [X23]
	144 Move X21, [X21+3896]
	145 Call 0x1B6FA0C
	146 Move X2, [X21]
	147 Move X1, X19
	148 Move X3, X31
	149 Move X21, X0
	150 Call Action`1<Boolean>..ctor, X0, X1, X2
	151 Move X0, X20
	152 Move X1, X21
	153 Move X2, X31
	154 Call Delegate.Remove, X0, X1
	155 Compare X0, 0
	156 JumpIfEqual {174}
	157 Move X21, [X23]
	158 Move X20, X0
	159 Move X1, X21
	160 Call 0x1B6F8FC
	161 Compare X0, 0
	162 JumpIfEqual {239}
	163 Move X8, [X22]
	164 Move X8, [X8+184]
	165 Move [X8+32], X0
	166 Move X21, [X23]
	167 Move X0, X20
	168 Move X1, X21
	169 Call 0x1B6F8FC
	170 Compare X0, 0
	171 JumpIfEqual {239}
	172 Move X8, [X22]
	173 Move X8, [X8+184]
	174 Move X8, [X22]
	175 Move X8, [X8+184]
	176 Move [X8+32], X31
	177 Move X23, 0x2297000
	178 Move X23, [X23+368]
	179 Move X21, 0x2297000
	180 Move X20, [X8+40]
	181 Move X0, [X23]
	182 Move X21, [X21+3904]
	183 Call 0x1B6FA0C
	184 Move X2, [X21]
	185 Move X1, X19
	186 Move X3, X31
	187 Move X21, X0
	188 Call Action..ctor, X0, X1, X2
	189 Move X0, X20
	190 Move X1, X21
	191 Move X2, X31
	192 Call Delegate.Remove, X0, X1
	193 Compare X0, 0
	194 JumpIfEqual {203}
	195 Move X1, [X23]
	196 Move X8, [X0]
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move X8, [X22]
	199 Move X8, [X8+184]
	200 Move [X8+40], X0
	201 Move X9, [X0]
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move X8, [X22]
	204 Move X8, [X8+184]
	205 Move [X8+40], X0
	206 Move X23, 0x2297000
	207 Move X23, [X23+3824]
	208 Move X21, 0x2297000
	209 Move X20, [X8+72]
	210 Move X0, [X23]
	211 Move X21, [X21+3880]
	212 Call 0x1B6FA0C
	213 Move X2, [X21]
	214 Move X1, X19
	215 Move X3, X31
	216 Move X21, X0
	217 Call Action`1<Int32>..ctor, X0, X1, X2
	218 Move X0, X20
	219 Move X1, X21
	220 Move X2, X31
	221 Call Delegate.Remove, X0, X1
	222 Compare X0, 0
	223 JumpIfEqual {242}
	224 Move X21, [X23]
	225 Move X20, X0
	226 Move X1, X21
	227 Call 0x1B6F8FC
	228 Compare X0, 0
	229 JumpIfEqual {239}
	230 Move X8, [X22]
	231 Move X8, [X8+184]
	232 Move [X8+72], X0
	233 Move X21, [X23]
	234 Move X0, X20
	235 Move X1, X21
	236 Call 0x1B6F8FC
	237 Compare X0, 0
	238 JumpIfNotEqual {245}
	239 Move X0, X20
	240 Move X1, X21
	241 Call 0x1B6FCDC
	242 Move X8, [X22]
	243 Move X8, [X8+184]
	244 Move [X8+72], X31
	245 Move X8, 0x2296000
	246 Move X8, [X8+2960]
	247 Move X20, 0x2297000
	248 Move X21, 0x2296000
	249 Move X0, [X8]
	250 Move X20, [X20+3888]
	251 Move X21, [X21+1256]
	252 Call 0x1B6FA0C
	253 Move X2, [X20]
	254 Move X1, X19
	255 Move X3, X31
	256 Move X20, X0
	257 Call ObserverDelegate..ctor, X0, X1, X2
	258 Move X0, [X21]
	259 Move W8, [X0+224]
	260 Compare W8, 0
	261 JumpIfNotEqual {263}
	262 Call 0x1B6F8F8
	263 Move X0, X20
	264 Move X1, X31
	265 Call App.DeregisterObserver, X0
	266 Move X1, [X19+272]
	267 Compare X1, 0
	268 JumpIfEqual {279}
	269 Move X0, X19
	270 Move X20, [X31+32]
	271 Move X19, [X31+40]
	272 Move X22, [X31+16]
	273 Move X21, [X31+24]
	274 Move X2, X31
	275 Move X30, [X31+48]
	276 Move X23, [X31+56]
	277 Call MonoBehaviour.StopCoroutine, X0, X1
	278 Return 
	279 Move X20, [X31+32]
	280 Move X19, [X31+40]
	281 Move X22, [X31+16]
	282 Move X21, [X31+24]
	283 Move X30, [X31+48]
	284 Move X23, [X31+56]
	285 Return 

Method: System.Void HandleGrabbedItemWeightChanged(AnimalCompany.AttachedLocation location, AnimalCompany.GrabbableItem item)

Disassembly:
	0x01CB8228 CBZ X8, 0x1CB86EC
	0x01CB822C LDR X0, [X8 + 0x50]
	0x01CB8230 CBZ X0, 0x1CB86EC
	0x01CB8234 MOV X1, X31
	0x01CB8238 BL 0x3AA7658
	0x01CB823C LDRB W8, [X22 + 0x44F]
	0x01CB8240 MOV V8.16B, V0.16B
	0x01CB8244 MOV V9.16B, V1.16B
	0x01CB8248 MOV V10.16B, V2.16B
	0x01CB824C CBNZ W8, 0x1CB8264
	0x01CB8250 ADRP X0, 0x2296000
	0x01CB8254 LDR X0, [X0 + 0x198]
	0x01CB8258 BL 0x1B6E7F0
	0x01CB825C MOVZ W8, 0x1
	0x01CB8260 STRB W8, [X22 + 0x44F]
	0x01CB8264 LDR X0, [X21]
	0x01CB8268 LDR W8, [X0 + 0xE0]
	0x01CB826C CBNZ W8, 0x1CB8278
	0x01CB8270 BL 0x1B6E8F8
	0x01CB8274 LDR X0, [X21]
	0x01CB8278 LDR X8, [X0 + 0xB8]
	0x01CB827C LDR X8, [X8]
	0x01CB8280 CBZ X8, 0x1CB86EC
	0x01CB8284 LDR X0, [X8 + 0x50]
	0x01CB8288 CBZ X0, 0x1CB86EC
	0x01CB828C MOV X1, X31
	0x01CB8290 BL 0x3AA7AD0
	0x01CB8294 MOV X0, X31
	0x01CB8298 BL 0x1CC086C
	0x01CB829C MOV X0, X31
	0x01CB82A0 BL 0x3A92C2C
	0x01CB82A4 CBZ X20, 0x1CB86EC
	0x01CB82A8 MOV V4.16B, V0.16B
	0x01CB82AC MOV V5.16B, V1.16B
	0x01CB82B0 MOV V6.16B, V2.16B
	0x01CB82B4 MOV V7.16B, V3.16B
	0x01CB82B8 MOV X0, X20
	0x01CB82BC MOV V0.16B, V8.16B
	0x01CB82C0 MOV V1.16B, V9.16B
	0x01CB82C4 MOV V2.16B, V10.16B
	0x01CB82C8 MOV V3.16B, V4.16B
	0x01CB82CC MOV V4.16B, V5.16B
	0x01CB82D0 MOV V5.16B, V6.16B
	0x01CB82D4 MOV V6.16B, V7.16B
	0x01CB82D8 MOV X1, X31
	0x01CB82DC BL 0x3AA80CC
	0x01CB82E0 LDRB W8, [X22 + 0x44F]
	0x01CB82E4 LDR X20, [X19 + 0x88]
	0x01CB82E8 CBNZ W8, 0x1CB8300
	0x01CB82EC ADRP X0, 0x2296000
	0x01CB82F0 LDR X0, [X0 + 0x198]
	0x01CB82F4 BL 0x1B6E7F0
	0x01CB82F8 MOVZ W8, 0x1
	0x01CB82FC STRB W8, [X22 + 0x44F]
	0x01CB8300 LDR X0, [X21]
	0x01CB8304 LDR W8, [X0 + 0xE0]
	0x01CB8308 CBNZ W8, 0x1CB8314
	0x01CB830C BL 0x1B6E8F8
	0x01CB8310 LDR X0, [X21]
	0x01CB8314 LDR X8, [X0 + 0xB8]
	0x01CB8318 LDR X8, [X8]
	0x01CB831C CBZ X8, 0x1CB86EC
	0x01CB8320 LDR X0, [X8 + 0x58]
	0x01CB8324 CBZ X0, 0x1CB86EC
	0x01CB8328 MOV X1, X31
	0x01CB832C BL 0x3AA7658
	0x01CB8330 LDRB W8, [X22 + 0x44F]
	0x01CB8334 MOV V8.16B, V0.16B
	0x01CB8338 MOV V9.16B, V1.16B
	0x01CB833C MOV V10.16B, V2.16B
	0x01CB8340 CBNZ W8, 0x1CB8358
	0x01CB8344 ADRP X0, 0x2296000
	0x01CB8348 LDR X0, [X0 + 0x198]
	0x01CB834C BL 0x1B6E7F0
	0x01CB8350 MOVZ W8, 0x1
	0x01CB8354 STRB W8, [X22 + 0x44F]
	0x01CB8358 LDR X0, [X21]
	0x01CB835C LDR W8, [X0 + 0xE0]
	0x01CB8360 CBNZ W8, 0x1CB836C
	0x01CB8364 BL 0x1B6E8F8
	0x01CB8368 LDR X0, [X21]
	0x01CB836C LDR X8, [X0 + 0xB8]
	0x01CB8370 LDR X8, [X8]
	0x01CB8374 CBZ X8, 0x1CB86EC
	0x01CB8378 LDR X0, [X8 + 0x58]
	0x01CB837C CBZ X0, 0x1CB86EC
	0x01CB8380 MOV X1, X31
	0x01CB8384 BL 0x3A9B084
	0x01CB8388 CBZ X0, 0x1CB86EC
	0x01CB838C MOV X1, X31
	0x01CB8390 BL 0x3AA5FBC
	0x01CB8394 CBZ X20, 0x1CB86EC
	0x01CB8398 MOV V4.16B, V0.16B
	0x01CB839C MOV V5.16B, V1.16B
	0x01CB83A0 MOV V6.16B, V2.16B
	0x01CB83A4 MOV V7.16B, V3.16B
	0x01CB83A8 MOV X0, X20
	0x01CB83AC MOV V0.16B, V8.16B
	0x01CB83B0 MOV V1.16B, V9.16B
	0x01CB83B4 MOV V2.16B, V10.16B

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x256C000
	008 Move X21, 0x2296000
	009 Move W8, [X22+1260]
	010 Move X21, [X21+1144]
	011 Move X20, X2
	012 Move W19, W1
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x2296000
	018 Move X0, [X0+1144]
	019 Call 0x1B6F7F0
	020 Move X0, 0x2297000
	021 Move X0, [X0+408]
	022 Call 0x1B6F7F0
	023 Move X0, 0x2297000
	024 Move X0, [X0+1056]
	025 Call 0x1B6F7F0
	026 Move W8, 1
	027 Move [X22+1260], W8
	028 Move X0, [X21]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1B6F8F8
	033 Move X0, X20
	034 Move X1, X31
	035 Move X2, X31
	036 Call Object.op_Equality, X0, X1
	037 Move S8, W31
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {50}
	042 Compare X20, 0
	043 JumpIfEqual {123}
	044 Move X0, [X20+304]
	045 Compare X0, 0
	046 JumpIfEqual {123}
	047 Move X1, X31
	048 Call Rigidbody.get_mass, X0
	049 Move V8, V0
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move S0, 0.5
	052 Multiply S8, S8, S0
	053 Move X0, [X21]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1B6F8F8
	058 Move X0, X20
	059 Move X1, X31
	060 Move X2, X31
	061 Call Object.op_Inequality, X0, X1
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {79}
	066 Compare X20, 0
	067 JumpIfEqual {123}
	068 Move X0, X20
	069 Move X1, X31
	070 Call Component.get_tag, X0
	071 Move X8, 0x2297000
	072 Move X8, [X8+1056]
	073 Move X2, X31
	074 Move X1, [X8]
	075 Call String.op_Equality, X0, X1
	076 Add S0, S8, S8
	077 And W31, W0, 1
	078 NotImplemented "Instruction FCSEL not yet implemented."
	079 Move X20, 0x2297000
	080 Move X20, [X20+408]
	081 Move X0, [X20]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1B6F8F8
	086 Move X21, 0x256C000
	087 Move W8, [X21+1103]
	088 Compare W8, 0
	089 JumpIfNotEqual {95}
	090 Move X0, 0x2297000
	091 Move X0, [X0+408]
	092 Call 0x1B6F7F0
	093 Move W8, 1
	094 Move [X21+1103], W8
	095 Move X0, [X20]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {101}
	099 Call 0x1B6F8F8
	100 Move X0, [X20]
	101 Move X8, [X0+184]
	102 Move X0, [X8]
	103 Compare X0, 0
	104 JumpIfEqual {116}
	105 Move W1, W19
	106 Move X20, [X31+32]
	107 Move X19, [X31+40]
	108 Move X22, [X31+16]
	109 Move X21, [X31+24]
	110 Move X30, [X31+8]
	111 Move V0, V8
	112 Move X2, X31
	113 Move V8, [X31+48]
	114 Call PlayerController.SetItemWeight, X0, X1, V0
	115 Return 
	116 Move X20, [X31+32]
	117 Move X19, [X31+40]
	118 Move X22, [X31+16]
	119 Move X21, [X31+24]
	120 Move X30, [X31+8]
	121 Move V8, [X31+48]
	122 Return 
	123 Call 0x1B6FA1C

Method: System.Void HandleItemCollision(AnimalCompany.AttachedLocation location, UnityEngine.Collision collision, UnityEngine.Vector3 velocity)

Disassembly:
	0x01CB83B8 MOV V3.16B, V4.16B
	0x01CB83BC MOV V4.16B, V5.16B
	0x01CB83C0 MOV V5.16B, V6.16B
	0x01CB83C4 MOV V6.16B, V7.16B
	0x01CB83C8 MOV X1, X31
	0x01CB83CC BL 0x3AA80CC
	0x01CB83D0 LDRB W8, [X22 + 0x44F]
	0x01CB83D4 LDR X20, [X19 + 0x90]
	0x01CB83D8 CBNZ W8, 0x1CB83F0
	0x01CB83DC ADRP X0, 0x2296000
	0x01CB83E0 LDR X0, [X0 + 0x198]
	0x01CB83E4 BL 0x1B6E7F0
	0x01CB83E8 MOVZ W8, 0x1
	0x01CB83EC STRB W8, [X22 + 0x44F]
	0x01CB83F0 LDR X0, [X21]
	0x01CB83F4 LDR W8, [X0 + 0xE0]
	0x01CB83F8 CBNZ W8, 0x1CB8404
	0x01CB83FC BL 0x1B6E8F8
	0x01CB8400 LDR X0, [X21]
	0x01CB8404 LDR X8, [X0 + 0xB8]
	0x01CB8408 LDR X8, [X8]
	0x01CB840C CBZ X8, 0x1CB86EC
	0x01CB8410 LDR X0, [X8 + 0x60]
	0x01CB8414 CBZ X0, 0x1CB86EC
	0x01CB8418 MOV X1, X31
	0x01CB841C BL 0x3AA7658
	0x01CB8420 LDRB W8, [X22 + 0x44F]
	0x01CB8424 MOV V8.16B, V0.16B
	0x01CB8428 MOV V9.16B, V1.16B
	0x01CB842C MOV V10.16B, V2.16B
	0x01CB8430 CBNZ W8, 0x1CB8448
	0x01CB8434 ADRP X0, 0x2296000
	0x01CB8438 LDR X0, [X0 + 0x198]
	0x01CB843C BL 0x1B6E7F0
	0x01CB8440 MOVZ W8, 0x1
	0x01CB8444 STRB W8, [X22 + 0x44F]
	0x01CB8448 LDR X0, [X21]
	0x01CB844C LDR W8, [X0 + 0xE0]
	0x01CB8450 CBNZ W8, 0x1CB845C
	0x01CB8454 BL 0x1B6E8F8
	0x01CB8458 LDR X0, [X21]
	0x01CB845C LDR X8, [X0 + 0xB8]
	0x01CB8460 LDR X8, [X8]
	0x01CB8464 CBZ X8, 0x1CB86EC
	0x01CB8468 LDR X0, [X8 + 0x70]
	0x01CB846C CBZ X0, 0x1CB86EC
	0x01CB8470 MOV X1, X31
	0x01CB8474 BL 0x3AA5FBC
	0x01CB8478 CBZ X20, 0x1CB86EC
	0x01CB847C MOV V4.16B, V0.16B
	0x01CB8480 MOV V5.16B, V1.16B
	0x01CB8484 MOV V6.16B, V2.16B
	0x01CB8488 MOV V7.16B, V3.16B
	0x01CB848C MOV X0, X20
	0x01CB8490 MOV V0.16B, V8.16B
	0x01CB8494 MOV V1.16B, V9.16B
	0x01CB8498 MOV V2.16B, V10.16B
	0x01CB849C MOV V3.16B, V4.16B
	0x01CB84A0 MOV V4.16B, V5.16B
	0x01CB84A4 MOV V5.16B, V6.16B
	0x01CB84A8 MOV V6.16B, V7.16B
	0x01CB84AC MOV X1, X31

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x256C000
	010 Move W8, [X21+1261]
	011 Move V8, V2
	012 Move V9, V1
	013 Move V10, V0
	014 Move X19, X2
	015 Move W20, W1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x2297000
	021 Move X0, [X0+408]
	022 Call 0x1B6F7F0
	023 Move W8, 1
	024 Move [X21+1261], W8
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X21, 0x2297000
	027 Move X21, [X21+408]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CSET not yet implemented."
	030 Move X0, [X21]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1B6F8F8
	035 Move X22, 0x256C000
	036 Move W8, [X22+1103]
	037 Compare W8, 0
	038 JumpIfNotEqual {44}
	039 Move X0, 0x2297000
	040 Move X0, [X0+408]
	041 Call 0x1B6F7F0
	042 Move W8, 1
	043 Move [X22+1103], W8
	044 Move X0, [X21]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1B6F8F8
	049 Move X0, [X21]
	050 Move X8, [X0+184]
	051 Move X0, [X8]
	052 Compare X0, 0
	053 JumpIfEqual {70}
	054 Move X1, X19
	055 Move V1, V9
	056 Move V2, V8
	057 Move W2, W20
	058 Move X20, [X31+48]
	059 Move X19, [X31+56]
	060 Move X22, [X31+32]
	061 Move X21, [X31+40]
	062 Move X30, [X31+24]
	063 Move D9, [X31+8]
	064 Move D8, [X31+16]
	065 Move V0, V10
	066 Move X3, X31
	067 Move V10, [X31+64]
	068 Call PlayerController.OnItemCollision, X0, X1, X2, X3
	069 Return 
	070 Move X20, [X31+48]
	071 Move X19, [X31+56]
	072 Move X22, [X31+32]
	073 Move X21, [X31+40]
	074 Move X30, [X31+24]
	075 Move D9, [X31+8]
	076 Move D8, [X31+16]
	077 Move V10, [X31+64]
	078 Return 

Method: System.Void HandleHandStep(AnimalCompany.HandSide side, System.Single intensity01)

Disassembly:
	0x01CB84B0 BL 0x3AA80CC

ISIL:
No ISIL was generated
Method: System.Void HandlePlayerDie(System.Boolean isDie)

Disassembly:
	0x01CB866C CBZ X0, 0x1CB86EC
	0x01CB8670 MOV V8.16B, V0.16B
	0x01CB8674 MOV V9.16B, V1.16B
	0x01CB8678 MOV V10.16B, V2.16B
	0x01CB867C MOV X1, X31
	0x01CB8680 BL 0x3AA5FBC
	0x01CB8684 CBZ X20, 0x1CB86EC
	0x01CB8688 MOV V4.16B, V0.16B
	0x01CB868C MOV V5.16B, V1.16B
	0x01CB8690 MOV X0, X20
	0x01CB8694 MOV V0.16B, V8.16B
	0x01CB8698 MOV V1.16B, V9.16B
	0x01CB869C LDP X20, X19, [X31 + 0x30]
	0x01CB86A0 LDP X22, X21, [X31 + 0x20]
	0x01CB86A4 LDR X30, [X31 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 And W1, W1, 1
	004 Move X19, X0
	005 Call NetPlayer.RPC_DoPlayerDie, X0, X1
	006 Move X0, [X19+64]
	007 Compare X0, 0
	008 JumpIfEqual {23}
	009 Move X1, X31
	010 Call NetworkObject.get_HasInputAuthority, X0
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {20}
	015 Move X0, X19
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Call NetPlayer.DropItemsIfHolding, X0
	019 Return 
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 Return 
	023 Call 0x1B6FA1C

Method: System.Void HandleLocalPlayerChannelChanged(System.Int32 playerChannel)

Disassembly:
	0x01CB88A8 CBZ X0, 0x1CB8AC0

ISIL:
	001 Call NetPlayer.set_channel, X0, X1
	002 Return 

Method: System.Void HandleLocalPlayerDisplayNameStateChanged(SpatialSys.ObservableState.StateChangedEventArgs args)

Disassembly:
	0x01CB88AC MOV X1, X31
	0x01CB88B0 BL 0x1D9F538
	0x01CB88B4 ANDS W31, W0, 0x7
	0x01CB88B8 B.EQ 0x1CB896C
	0x01CB88BC TBNZ X0, 0x1, 0x1CB8784
	0x01CB88C0 MOV X0, X21
	0x01CB88C4 MOV X1, X31
	0x01CB88C8 BL 0x1D816D4
	0x01CB88CC ADD W8, W0, 0x2B
	0x01CB88D0 MOV X0, X20
	0x01CB88D4 MOV X1, X31
	0x01CB88D8 AND W24, W8, 0xFFFFFFFC
	0x01CB88DC BL 0x1D816D4
	0x01CB88E0 ADD W8, W0, 0x3
	0x01CB88E4 AND W8, W8, 0xFFFFFFFC
	0x01CB88E8 MOV X0, X19
	0x01CB88EC MOV X1, X31
	0x01CB88F0 ADD W24, W8, W24
	0x01CB88F4 BL 0x1D816D4
	0x01CB88F8 ADD W8, W0, 0x3
	0x01CB88FC AND W8, W8, 0xFFFFFFFC
	0x01CB8900 ADD W24, W24, W8
	0x01CB8904 CMP W24, 0x201
	0x01CB8908 B.GE 0x1CB89BC
	0x01CB890C LDR X8, [X23 + 0x38]
	0x01CB8910 CBZ X8, 0x1CB8AC0
	0x01CB8914 LDR X0, [X8 + 0x50]
	0x01CB8918 CBZ X0, 0x1CB8AC0
	0x01CB891C MOV X1, X31
	0x01CB8920 BL 0x1DBEFE4
	0x01CB8924 TBZ X0, 0x0, 0x1CB8880
	0x01CB8928 LDR X8, [X23 + 0x38]
	0x01CB892C CBZ X8, 0x1CB8AC0
	0x01CB8930 LDR X0, [X8 + 0x50]
	0x01CB8934 MOV W1, W24
	0x01CB8938 MOV X2, X31
	0x01CB893C BL 0x1DD601C
	0x01CB8940 MOV X24, X0
	0x01CB8944 MOVZ W0, 0x1
	0x01CB8948 MOV X1, X31
	0x01CB894C BL 0x1D29EBC
	0x01CB8950 LDR X8, [X23 + 0x40]
	0x01CB8954 CBZ X8, 0x1CB8AC0
	0x01CB8958 LDR X8, [X8 + 0x20]
	0x01CB895C ADD X25, X24, 0x1C
	0x01CB8960 CBZ X8, 0x1CB8A04
	0x01CB8964 LDR W0, [X8]
	0x01CB8968 B 0x1CB8A08
	0x01CB896C LDR X0, [X25]
	0x01CB8970 LDR X19, [X23 + 0x40]
	0x01CB8974 LDR W8, [X0 + 0xE0]
	0x01CB8978 CBNZ W8, 0x1CB8980
	0x01CB897C BL 0x1B6E8F8
	0x01CB8980 ADRP X8, 0x2296000
	0x01CB8984 LDR X8, [X8 + 0xF98]
	0x01CB8988 MOV X1, X19
	0x01CB898C LDP X20, X19, [X31 + 0x70]
	0x01CB8990 LDP X22, X21, [X31 + 0x60]
	0x01CB8994 LDR X0, [X8]
	0x01CB8998 LDP X24, X23, [X31 + 0x50]
	0x01CB899C LDP X30, X25, [X31 + 0x40]
	0x01CB89A0 LDP D9, D8, [X31 + 0x30]
	0x01CB89A4 LDP D11, D10, [X31 + 0x20]
	0x01CB89A8 LDP D13, D12, [X31 + 0x10]
	0x01CB89AC MOVZ W2, 0x7

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x256C000
	006 Move X20, 0x2296000
	007 Move W8, [X21+1262]
	008 Move X20, [X20+1256]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x2296000
	015 Move X0, [X0+1256]
	016 Call 0x1B6F7F0
	017 Move X0, 0x2297000
	018 Move X0, [X0+3624]
	019 Call 0x1B6F7F0
	020 Move X0, 0x2297000
	021 Move X0, [X0+3952]
	022 Call 0x1B6F7F0
	023 Move W8, 1
	024 Move [X21+1262], W8
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1B6F8F8
	030 Move X21, 0x256C000
	031 Move W8, [X21+1091]
	032 Compare W8, 0
	033 JumpIfNotEqual {39}
	034 Move X0, 0x2296000
	035 Move X0, [X0+1256]
	036 Call 0x1B6F7F0
	037 Move W8, 1
	038 Move [X21+1091], W8
	039 Move X0, [X20]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {45}
	043 Call 0x1B6F8F8
	044 Move X0, [X20]
	045 Move X8, [X0+184]
	046 Move X8, [X8]
	047 Compare X8, 0
	048 JumpIfEqual {83}
	049 Move X8, [X8+168]
	050 Compare X8, 0
	051 JumpIfEqual {83}
	052 Move X9, 0x2297000
	053 Move X9, [X9+3624]
	054 Move X0, [X8+88]
	055 Move X1, [X9]
	056 Call StatePrimitive`1<Object>.op_Implicit, X0
	057 Move X1, X0
	058 Move X0, X19
	059 Call NetPlayer.set_displayName, X0, X1
	060 Move X0, X19
	061 Call NetPlayer.get_displayName, X0
	062 Move X1, X31
	063 Call String.IsNullOrEmpty, X0
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {78}
	068 Move X8, 0x2297000
	069 Move X8, [X8+3952]
	070 Move X0, X19
	071 Move X20, [X31+16]
	072 Move X19, [X31+24]
	073 Move X1, [X8]
	074 Move X30, [X31+32]
	075 Move X21, [X31+40]
	076 Call NetPlayer.set_displayName, X0, X1
	077 Return 
	078 Move X20, [X31+16]
	079 Move X19, [X31+24]
	080 Move X30, [X31+32]
	081 Move X21, [X31+40]
	082 Return 
	083 Call 0x1B6FA1C

Method: System.Void DropItemsIfHolding()

Disassembly:
	0x01CB8844 ADRP X25, 0x2296000
	0x01CB8848 LDR X25, [X25 + 0x1C0]
	0x01CB884C LDR X0, [X25]
	0x01CB8850 LDR W8, [X0 + 0xE0]
	0x01CB8854 CBNZ W8, 0x1CB885C
	0x01CB8858 BL 0x1B6E8F8
	0x01CB885C MOV X0, X23
	0x01CB8860 MOV X1, X31
	0x01CB8864 BL 0x1D697C8
	0x01CB8868 LDR X0, [X23 + 0x38]
	0x01CB886C CBZ X0, 0x1CB8AC0
	0x01CB8870 MOV X1, X31
	0x01CB8874 BL 0x1D87040
	0x01CB8878 CMP W0, 0x4
	0x01CB887C B.NE 0x1CB88A4
	0x01CB8880 LDP X20, X19, [X31 + 0x70]
	0x01CB8884 LDP X22, X21, [X31 + 0x60]
	0x01CB8888 LDP X24, X23, [X31 + 0x50]
	0x01CB888C LDP X30, X25, [X31 + 0x40]
	0x01CB8890 LDP D9, D8, [X31 + 0x30]
	0x01CB8894 LDP D11, D10, [X31 + 0x20]
	0x01CB8898 LDP D13, D12, [X31 + 0x10]
	0x01CB889C LDR V14, [X31], #0x80
	0x01CB88A0 RET
	0x01CB88A4 LDR X0, [X23 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, [X0+200]
	005 Compare X19, 0
	006 JumpIfEqual {26}
	007 Move W8, [X19+24]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W20, W31
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Add X8, X19, W20
	012 Move X0, [X8+32]
	013 Compare X0, 0
	014 JumpIfEqual {26}
	015 Move W1, 1
	016 Move X2, X31
	017 Call AttachedItemAnchor.DropItemIfHolding, X0, X1
	018 Move W8, [X19+24]
	019 Add W20, W20, 1
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return 
	025 Call 0x1B6FA24
	026 Call 0x1B6FA1C

Method: System.Void RepositionItemsIfHolding()

Disassembly:
	0x01CB89B0 MOV X3, X31
	0x01CB89B4 LDR V14, [X31], #0x80
	0x01CB89B8 B 0x1D69640
	0x01CB89BC LDR X0, [X25]
	0x01CB89C0 LDR W8, [X0 + 0xE0]
	0x01CB89C4 CBNZ W8, 0x1CB89CC
	0x01CB89C8 BL 0x1B6E8F8
	0x01CB89CC ADRP X8, 0x2296000
	0x01CB89D0 LDR X8, [X8 + 0xF98]
	0x01CB89D4 MOV W1, W24
	0x01CB89D8 LDP X20, X19, [X31 + 0x70]
	0x01CB89DC LDP X22, X21, [X31 + 0x60]
	0x01CB89E0 LDR X0, [X8]
	0x01CB89E4 LDP X24, X23, [X31 + 0x50]
	0x01CB89E8 LDP X30, X25, [X31 + 0x40]
	0x01CB89EC LDP D9, D8, [X31 + 0x30]
	0x01CB89F0 LDP D11, D10, [X31 + 0x20]
	0x01CB89F4 LDP D13, D12, [X31 + 0x10]
	0x01CB89F8 MOV X2, X31
	0x01CB89FC LDR V14, [X31], #0x80
	0x01CB8A00 B 0x1D69494
	0x01CB8A04 MOV X0, X31
	0x01CB8A08 LDR W1, [X23 + 0x68]
	0x01CB8A0C MOVZ W2, 0x5

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, [X0+200]
	005 Compare X19, 0
	006 JumpIfEqual {25}
	007 Move W8, [X19+24]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W20, W31
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Add X8, X19, W20
	012 Move X0, [X8+32]
	013 Compare X0, 0
	014 JumpIfEqual {25}
	015 Move X1, X31
	016 Call AttachedItemAnchor.RepositionItemIfHolding, X0
	017 Move W8, [X19+24]
	018 Add W20, W20, 1
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Return 
	024 Call 0x1B6FA24
	025 Call 0x1B6FA1C

Method: System.Void DropItemIfHolding(AnimalCompany.AttachedLocation handSide)

Disassembly:
	0x01CB8A10 MOV X3, X31
	0x01CB8A14 BL 0x1DA8258
	0x01CB8A18 STUR X0, [X24 + 0x1C]
	0x01CB8A1C ADD X0, X24, 0x44
	0x01CB8A20 MOV X1, X21
	0x01CB8A24 MOV X2, X31
	0x01CB8A28 STR W22, [X24 + 0x24]
	0x01CB8A2C STP S14, S13, [X24 + 0x28]
	0x01CB8A30 STP S12, S11, [X24 + 0x30]
	0x01CB8A34 STP S10, S9, [X24 + 0x38]
	0x01CB8A38 STR S8, [X24 + 0x40]
	0x01CB8A3C BL 0x1D816C4
	0x01CB8A40 ADD W8, W0, 0x2B
	0x01CB8A44 AND W21, W8, 0xFFFFFFFC
	0x01CB8A48 ADD X0, X25, W21, SXTW

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+200]
	003 Compare X8, 0
	004 JumpIfEqual {16}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Add X8, X8, W1
	008 Move X0, [X8+32]
	009 Compare X0, 0
	010 JumpIfEqual {16}
	011 Move W1, 1
	012 Move X2, X31
	013 Move X30, [X31+16]
	014 Call AttachedItemAnchor.DropItemIfHolding, X0, X1
	015 Return 
	016 Call 0x1B6FA1C
	017 Call 0x1B6FA24

Method: System.Void PropagateLocalPlayerColor()

Disassembly:
	0x01CB7C6C CBZ W8, 0x1CB7C7C
	0x01CB7C70 STRB W31, [X19 + 0x58]
	0x01CB7C74 STR S8, [X19 + 0x108]
	0x01CB7C78 B 0x1CB7CB8
	0x01CB7C7C ADRP X20, 0x2297000
	0x01CB7C80 LDR X20, [X20 + 0x1C0]
	0x01CB7C84 LDR X0, [X20]
	0x01CB7C88 LDR W8, [X0 + 0xE0]
	0x01CB7C8C CBNZ W8, 0x1CB7C94
	0x01CB7C90 BL 0x1B6E8F8
	0x01CB7C94 MOV X0, X19
	0x01CB7C98 MOV X1, X31
	0x01CB7C9C BL 0x1D697C8
	0x01CB7CA0 LDR X0, [X19 + 0x38]
	0x01CB7CA4 CBZ X0, 0x1CB7DC0
	0x01CB7CA8 MOV X1, X31
	0x01CB7CAC BL 0x1D87040
	0x01CB7CB0 CMP W0, 0x4
	0x01CB7CB4 B.NE 0x1CB7CC8
	0x01CB7CB8 LDP X20, X19, [X31 + 0x10]
	0x01CB7CBC LDR X30, [X31 + 0x8]
	0x01CB7CC0 LDR V8, [X31], #0x20
	0x01CB7CC4 RET
	0x01CB7CC8 LDR X0, [X19 + 0x40]
	0x01CB7CCC CBZ X0, 0x1CB7DC0
	0x01CB7CD0 MOV X1, X31
	0x01CB7CD4 BL 0x1D9F538
	0x01CB7CD8 TBNZ X0, 0x1, 0x1CB7D18
	0x01CB7CDC LDR X0, [X20]
	0x01CB7CE0 LDR X19, [X19 + 0x40]
	0x01CB7CE4 LDR W8, [X0 + 0xE0]
	0x01CB7CE8 CBNZ W8, 0x1CB7CF0
	0x01CB7CEC BL 0x1B6E8F8
	0x01CB7CF0 ADRP X8, 0x2297000
	0x01CB7CF4 LDR X8, [X8 + 0xF80]
	0x01CB7CF8 MOV X1, X19
	0x01CB7CFC LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x256D000
	006 Move X20, 0x2298000
	007 Move W8, [X21+1263]
	008 Move X20, [X20+408]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2298000
	015 Move X0, [X0+408]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X21+1263], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1B6F8F8
	024 Move X21, 0x256D000
	025 Move W8, [X21+1298]
	026 Compare W8, 0
	027 JumpIfNotEqual {33}
	028 Move X0, 0x2298000
	029 Move X0, [X0+408]
	030 Call 0x1B6F7F0
	031 Move W8, 1
	032 Move [X21+1298], W8
	033 Move X0, [X20]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1B6F8F8
	038 Move X0, [X20]
	039 Move X8, [X0+184]
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move S0, [X8+8]
	044 Move S1, [X8+12]
	045 Move S2, [X8+16]
	046 Move S3, [X8+20]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Call NetPlayer.RPC_SetPlayerColor, X0, X1
	050 Return 

Method: System.Void RPC_SetPlayerColor(UnityEngine.Color color)

Disassembly:
	0x01CB8A4C MOV X1, X20
	0x01CB8A50 MOV X2, X31
	0x01CB8A54 BL 0x1D816C4
	0x01CB8A58 ADD W8, W0, 0x3
	0x01CB8A5C AND W8, W8, 0xFFFFFFFC
	0x01CB8A60 ADD W20, W8, W21
	0x01CB8A64 ADD X0, X25, W20, SXTW
	0x01CB8A68 MOV X1, X19
	0x01CB8A6C MOV X2, X31
	0x01CB8A70 BL 0x1D816C4
	0x01CB8A74 CBZ X24, 0x1CB8AC0
	0x01CB8A78 ADD W8, W0, 0x3
	0x01CB8A7C AND W8, W8, 0x1FFFFFFC
	0x01CB8A80 ADD W8, W20, W8
	0x01CB8A84 UBFM W8, W8, 0x1D, 0x1C
	0x01CB8A88 STR W8, [X24 + 0xC]
	0x01CB8A8C LDR X0, [X23 + 0x38]
	0x01CB8A90 CBZ X0, 0x1CB8AC0
	0x01CB8A94 MOV X1, X24
	0x01CB8A98 LDP X20, X19, [X31 + 0x70]
	0x01CB8A9C LDP X22, X21, [X31 + 0x60]
	0x01CB8AA0 LDP X24, X23, [X31 + 0x50]
	0x01CB8AA4 LDP X30, X25, [X31 + 0x40]
	0x01CB8AA8 LDP D9, D8, [X31 + 0x30]
	0x01CB8AAC LDP D11, D10, [X31 + 0x20]
	0x01CB8AB0 LDP D13, D12, [X31 + 0x10]
	0x01CB8AB4 MOV X2, X31
	0x01CB8AB8 LDR V14, [X31], #0x80
	0x01CB8ABC B 0x1D8A710
	0x01CB8AC0 BL 0x1B6EA1C
	0x01CB8AC4 STP D15, D14, [X31 - 0x90]!
	0x01CB8AC8 STP D13, D12, [X31 + 0x10]
	0x01CB8ACC STP D11, D10, [X31 + 0x20]
	0x01CB8AD0 STP D9, D8, [X31 + 0x30]
	0x01CB8AD4 STR X30, [X31 + 0x40]
	0x01CB8AD8 STP X26, X25, [X31 + 0x50]
	0x01CB8ADC STP X24, X23, [X31 + 0x60]
	0x01CB8AE0 STP X22, X21, [X31 + 0x70]
	0x01CB8AE4 STP X20, X19, [X31 + 0x80]
	0x01CB8AE8 ADRP X24, 0x256B000
	0x01CB8AEC MOV V14.16B, V0.16B
	0x01CB8AF0 LDR V7, [X31 + 0x98]
	0x01CB8AF4 LDRB W8, [X24 + 0x4FA]
	0x01CB8AF8 LDP S15, S0, [X31 + 0x90]
	0x01CB8AFC MOV X19, X4
	0x01CB8B00 MOV X20, X3
	0x01CB8B04 MOV X21, X2
	0x01CB8B08 MOV V8.16B, V6.16B
	0x01CB8B0C MOV V9.16B, V5.16B
	0x01CB8B10 MOV V10.16B, V4.16B
	0x01CB8B14 MOV V11.16B, V3.16B
	0x01CB8B18 MOV V12.16B, V2.16B
	0x01CB8B1C MOV V13.16B, V1.16B
	0x01CB8B20 MOV W22, W1
	0x01CB8B24 MOV X23, X0
	0x01CB8B28 STP S0, S7, [X31 + 0x48]
	0x01CB8B2C TBNZ X8, 0x0, 0x1CB8B5C
	0x01CB8B30 ADRP X0, 0x2296000
	0x01CB8B34 LDR X0, [X0 + 0x1C0]
	0x01CB8B38 BL 0x1B6E7F0
	0x01CB8B3C ADRP X0, 0x2296000
	0x01CB8B40 LDR X0, [X0 + 0x198]
	0x01CB8B44 BL 0x1B6E7F0
	0x01CB8B48 ADRP X0, 0x2296000
	0x01CB8B4C LDR X0, [X0 + 0xFA0]
	0x01CB8B50 BL 0x1B6E7F0
	0x01CB8B54 MOVZ W8, 0x1
	0x01CB8B58 STRB W8, [X24 + 0x4FA]
	0x01CB8B5C LDRB W8, [X23 + 0x58]
	0x01CB8B60 CBZ W8, 0x1CB8C3C
	0x01CB8B64 STRB W31, [X23 + 0x58]
	0x01CB8B68 LDR X0, [X23 + 0x40]
	0x01CB8B6C CBZ X0, 0x1CB8EE4
	0x01CB8B70 MOV X1, X31
	0x01CB8B74 BL 0x1D9E6A0
	0x01CB8B78 TBZ X0, 0x0, 0x1CB8C78
	0x01CB8B7C ADRP X23, 0x2296000
	0x01CB8B80 LDR X23, [X23 + 0x198]
	0x01CB8B84 LDR X0, [X23]
	0x01CB8B88 LDR W8, [X0 + 0xE0]
	0x01CB8B8C CBNZ W8, 0x1CB8B94
	0x01CB8B90 BL 0x1B6E8F8
	0x01CB8B94 ADRP X24, 0x256B000
	0x01CB8B98 LDRB W8, [X24 + 0x44F]
	0x01CB8B9C CBNZ W8, 0x1CB8BB4
	0x01CB8BA0 ADRP X0, 0x2296000
	0x01CB8BA4 LDR X0, [X0 + 0x198]
	0x01CB8BA8 BL 0x1B6E7F0
	0x01CB8BAC MOVZ W8, 0x1
	0x01CB8BB0 STRB W8, [X24 + 0x44F]
	0x01CB8BB4 LDR X0, [X23]
	0x01CB8BB8 LDR W8, [X0 + 0xE0]
	0x01CB8BBC CBNZ W8, 0x1CB8BC8
	0x01CB8BC0 BL 0x1B6E8F8
	0x01CB8BC4 LDR X0, [X23]
	0x01CB8BC8 LDR X8, [X0 + 0xB8]
	0x01CB8BCC LDR X0, [X8]
	0x01CB8BD0 CBZ X0, 0x1CB8EE4
	0x01CB8BD4 LDR V0, [X31 + 0x48]
	0x01CB8BD8 MOV W1, W22
	0x01CB8BDC MOV V1.16B, V13.16B
	0x01CB8BE0 MOV V2.16B, V12.16B
	0x01CB8BE4 STP S15, S0, [X31 + 0x90]
	0x01CB8BE8 LDR V0, [X31 + 0x4C]
	0x01CB8BEC MOV V3.16B, V11.16B
	0x01CB8BF0 MOV V4.16B, V10.16B
	0x01CB8BF4 MOV V5.16B, V9.16B
	0x01CB8BF8 MOV V6.16B, V8.16B
	0x01CB8BFC MOV X2, X21
	0x01CB8C00 MOV X3, X20
	0x01CB8C04 MOV X4, X19
	0x01CB8C08 LDP X20, X19, [X31 + 0x80]
	0x01CB8C0C LDP X22, X21, [X31 + 0x70]
	0x01CB8C10 LDP X24, X23, [X31 + 0x60]
	0x01CB8C14 LDP X26, X25, [X31 + 0x50]
	0x01CB8C18 LDR X30, [X31 + 0x40]
	0x01CB8C1C LDP D9, D8, [X31 + 0x30]
	0x01CB8C20 LDP D11, D10, [X31 + 0x20]
	0x01CB8C24 LDP D13, D12, [X31 + 0x10]

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x256C000
	009 Move W8, [X20+1264]
	010 Move V8, V3
	011 Move V9, V2
	012 Move V10, V1
	013 Move V11, V0
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x2297000
	020 Move X0, [X0+448]
	021 Call 0x1B6F7F0
	022 Move X0, 0x2297000
	023 Move X0, [X0+3960]
	024 Call 0x1B6F7F0
	025 Move W8, 1
	026 Move [X20+1264], W8
	027 Move W8, [X19+88]
	028 Compare W8, 0
	029 JumpIfEqual {45}
	030 Move [X19+88], W31
	031 Move X0, X19
	032 Move V2, V9
	033 Move V3, V8
	034 Move X20, [X31+48]
	035 Move X19, [X31+56]
	036 Move X30, [X31+32]
	037 Move D9, [X31+16]
	038 Move D8, [X31+24]
	039 Move V0, V11
	040 Move V1, V10
	041 Move D11, [X31+64]
	042 Move D10, [X31+72]
	043 Call NetPlayer.set_playerColor, X0, X1
	044 Return 
	045 Move X20, 0x2297000
	046 Move X20, [X20+448]
	047 Move X0, [X20]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1B6F8F8
	052 Move X0, X19
	053 Move X1, X31
	054 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	055 Move X0, [X19+56]
	056 Compare X0, 0
	057 JumpIfEqual {161}
	058 Move X1, X31
	059 Call NetworkRunner.get_Stage, X0
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X20, [X31+48]
	062 Move X19, [X31+56]
	063 Move X30, [X31+32]
	064 Move D9, [X31+16]
	065 Move D8, [X31+24]
	066 Move D11, [X31+64]
	067 Move D10, [X31+72]
	068 Return 
	069 Move X0, [X19+64]
	070 Compare X0, 0
	071 JumpIfEqual {161}
	072 Move X1, X31
	073 Call NetworkObject.GetLocalAuthorityMask, X0
	074 Move TEMP, X0
	075 And TEMP, TEMP, 2
	076 Compare TEMP, 2
	077 JumpIfEqual {99}
	078 Move X0, [X20]
	079 Move X19, [X19+64]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1B6F8F8
	084 Move X8, 0x2297000
	085 Move X8, [X8+3960]
	086 Move X1, X19
	087 Move X20, [X31+48]
	088 Move X19, [X31+56]
	089 Move X30, [X31+32]
	090 Move X0, [X8]
	091 Move D9, [X31+16]
	092 Move D8, [X31+24]
	093 Move W2, 2
	094 Move X3, X31
	095 Move D11, [X31+64]
	096 Move D10, [X31+72]
	097 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	098 Return 
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {31}
	103 Move X8, [X19+56]
	104 Compare X8, 0
	105 JumpIfEqual {161}
	106 Move X0, [X8+80]
	107 Compare X0, 0
	108 JumpIfEqual {161}
	109 Move X1, X31
	110 Call Simulation.HasAnyActiveConnections, X0
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {61}
	115 Move X8, [X19+56]
	116 Compare X8, 0
	117 JumpIfEqual {161}
	118 Move X0, [X8+80]
	119 Move W1, 24
	120 Move X2, X31
	121 Call SimulationMessage.Allocate, X0, X1
	122 Move X20, X0
	123 Move W0, 1
	124 Move X1, X31
	125 Call Assert.Check, X0
	126 Move X8, [X19+64]
	127 Compare X8, 0
	128 JumpIfEqual {161}
	129 Move X8, [X8+32]
	130 Compare X8, 0
	131 JumpIfEqual {133}
	132 Move W0, [X8]
	133 Move X0, X31
	134 Move W1, [X19+104]
	135 Move W2, 1
	136 Move X3, X31
	137 Call RpcHeader.Create, X0, X1, X2
	138 Move [X20+28], X0
	139 Move [X20+36], S11
	140 Move [X20+44], S10
	141 Move [X20+44], S9
	142 Move [X20+52], S8
	143 Compare X20, 0
	144 JumpIfEqual {161}
	145 Move W8, 192
	146 Move [X20+12], W8
	147 Move X0, [X19+56]
	148 Compare X0, 0
	149 JumpIfEqual {161}
	150 Move X1, X20
	151 Move X20, [X31+48]
	152 Move X19, [X31+56]
	153 Move X30, [X31+32]
	154 Move D9, [X31+16]
	155 Move D8, [X31+24]
	156 Move X2, X31
	157 Move D11, [X31+64]
	158 Move D10, [X31+72]
	159 Call NetworkRunner.SendRpc, X0, X1
	160 Return 
	161 Call 0x1B6FA1C

Method: System.Void RPC_DoHandstep(AnimalCompany.HandSide side, System.Single intensity01)

Disassembly:
	0x01CB84B4 LDRB W8, [X22 + 0x44F]
	0x01CB84B8 LDR X20, [X19 + 0x98]
	0x01CB84BC CBNZ W8, 0x1CB84D4
	0x01CB84C0 ADRP X0, 0x2296000
	0x01CB84C4 LDR X0, [X0 + 0x198]
	0x01CB84C8 BL 0x1B6E7F0
	0x01CB84CC MOVZ W8, 0x1
	0x01CB84D0 STRB W8, [X22 + 0x44F]
	0x01CB84D4 LDR X0, [X21]
	0x01CB84D8 LDR W8, [X0 + 0xE0]
	0x01CB84DC CBNZ W8, 0x1CB84E8
	0x01CB84E0 BL 0x1B6E8F8
	0x01CB84E4 LDR X0, [X21]
	0x01CB84E8 LDR X8, [X0 + 0xB8]
	0x01CB84EC LDR X8, [X8]
	0x01CB84F0 CBZ X8, 0x1CB86EC
	0x01CB84F4 LDR X0, [X8 + 0x68]
	0x01CB84F8 CBZ X0, 0x1CB86EC
	0x01CB84FC MOV X1, X31
	0x01CB8500 BL 0x3AA7658
	0x01CB8504 LDRB W8, [X22 + 0x44F]
	0x01CB8508 MOV V8.16B, V0.16B
	0x01CB850C MOV V9.16B, V1.16B
	0x01CB8510 MOV V10.16B, V2.16B
	0x01CB8514 CBNZ W8, 0x1CB852C
	0x01CB8518 ADRP X0, 0x2296000
	0x01CB851C LDR X0, [X0 + 0x198]
	0x01CB8520 BL 0x1B6E7F0
	0x01CB8524 MOVZ W8, 0x1
	0x01CB8528 STRB W8, [X22 + 0x44F]
	0x01CB852C LDR X0, [X21]
	0x01CB8530 LDR W8, [X0 + 0xE0]
	0x01CB8534 CBNZ W8, 0x1CB8540
	0x01CB8538 BL 0x1B6E8F8
	0x01CB853C LDR X0, [X21]
	0x01CB8540 LDR X8, [X0 + 0xB8]
	0x01CB8544 LDR X8, [X8]
	0x01CB8548 CBZ X8, 0x1CB86EC
	0x01CB854C LDR X0, [X8 + 0x78]
	0x01CB8550 CBZ X0, 0x1CB86EC
	0x01CB8554 MOV X1, X31
	0x01CB8558 BL 0x3AA5FBC
	0x01CB855C CBZ X20, 0x1CB86EC
	0x01CB8560 MOV V4.16B, V0.16B
	0x01CB8564 MOV V5.16B, V1.16B
	0x01CB8568 MOV V6.16B, V2.16B
	0x01CB856C MOV V7.16B, V3.16B
	0x01CB8570 MOV X0, X20
	0x01CB8574 MOV V0.16B, V8.16B
	0x01CB8578 MOV V1.16B, V9.16B
	0x01CB857C MOV V2.16B, V10.16B
	0x01CB8580 MOV V3.16B, V4.16B
	0x01CB8584 MOV V4.16B, V5.16B
	0x01CB8588 MOV V5.16B, V6.16B
	0x01CB858C MOV V6.16B, V7.16B
	0x01CB8590 MOV X1, X31
	0x01CB8594 BL 0x3AA80CC
	0x01CB8598 LDRB W8, [X22 + 0x44F]
	0x01CB859C LDR X20, [X19 + 0xA0]
	0x01CB85A0 CBNZ W8, 0x1CB85B8
	0x01CB85A4 ADRP X0, 0x2296000
	0x01CB85A8 LDR X0, [X0 + 0x198]
	0x01CB85AC BL 0x1B6E7F0
	0x01CB85B0 MOVZ W8, 0x1
	0x01CB85B4 STRB W8, [X22 + 0x44F]
	0x01CB85B8 LDR X0, [X21]
	0x01CB85BC LDR W8, [X0 + 0xE0]
	0x01CB85C0 CBNZ W8, 0x1CB85CC
	0x01CB85C4 BL 0x1B6E8F8
	0x01CB85C8 LDR X0, [X21]
	0x01CB85CC LDR X8, [X0 + 0xB8]
	0x01CB85D0 LDR X0, [X8]
	0x01CB85D4 CBZ X0, 0x1CB86EC
	0x01CB85D8 MOV X1, X31
	0x01CB85DC BL 0x1CC0098
	0x01CB85E0 CBZ X0, 0x1CB86EC
	0x01CB85E4 MOV X1, X31
	0x01CB85E8 BL 0x3AA7658
	0x01CB85EC LDRB W8, [X22 + 0x44F]
	0x01CB85F0 MOV V8.16B, V0.16B
	0x01CB85F4 MOV V9.16B, V1.16B
	0x01CB85F8 MOV V10.16B, V2.16B
	0x01CB85FC CBNZ W8, 0x1CB8614
	0x01CB8600 ADRP X0, 0x2296000
	0x01CB8604 LDR X0, [X0 + 0x198]
	0x01CB8608 BL 0x1B6E7F0
	0x01CB860C MOVZ W8, 0x1
	0x01CB8610 STRB W8, [X22 + 0x44F]
	0x01CB8614 LDR X0, [X21]
	0x01CB8618 LDR W8, [X0 + 0xE0]
	0x01CB861C CBNZ W8, 0x1CB8628
	0x01CB8620 BL 0x1B6E8F8
	0x01CB8624 LDR X0, [X21]
	0x01CB8628 LDR X8, [X0 + 0xB8]
	0x01CB862C LDR X0, [X8]
	0x01CB8630 CBZ X0, 0x1CB86EC
	0x01CB8634 MOV X1, X31
	0x01CB8638 BL 0x1CC0098
	0x01CB863C CBNZ X0, 0x1CB867C
	0x01CB8640 B 0x1CB86EC
	0x01CB8644 LDR X8, [X19 + 0xA8]
	0x01CB8648 CBZ X8, 0x1CB86EC
	0x01CB864C LDR X0, [X8 + 0x48]
	0x01CB8650 CBZ X0, 0x1CB86EC
	0x01CB8654 LDR X20, [X19 + 0xA0]
	0x01CB8658 MOV X1, X31
	0x01CB865C BL 0x3AA7658
	0x01CB8660 LDR X8, [X19 + 0xA8]
	0x01CB8664 CBZ X8, 0x1CB86EC
	0x01CB8668 LDR X0, [X8 + 0x48]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x256C000
	007 Move W8, [X21+1265]
	008 Move V8, V0
	009 Move W20, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x2297000
	016 Move X0, [X0+448]
	017 Call 0x1B6F7F0
	018 Move X0, 0x2297000
	019 Move X0, [X0+3936]
	020 Call 0x1B6F7F0
	021 Move W8, 1
	022 Move [X21+1265], W8
	023 Move W8, [X19+88]
	024 Compare W8, 0
	025 JumpIfEqual {32}
	026 Move [X19+88], W31
	027 Move V0, [X19+268]
	028 NotImplemented "Instruction FCMP not yet implemented."
	029 Move [X19+268], S8
	030 Move W8, 2
	031 Move [X19+288], W8
	032 Move X21, 0x2297000
	033 Move X21, [X21+448]
	034 Move X0, [X21]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1B6F8F8
	039 Move X0, X19
	040 Move X1, X31
	041 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	042 Move X0, [X19+56]
	043 Compare X0, 0
	044 JumpIfEqual {140}
	045 Move X1, X31
	046 Call NetworkRunner.get_Stage, X0
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X30, [X31+16]
	051 Move X21, [X31+24]
	052 Move V8, [X31+48]
	053 Return 
	054 Move X0, [X19+64]
	055 Compare X0, 0
	056 JumpIfEqual {140}
	057 Move X1, X31
	058 Call NetworkObject.GetLocalAuthorityMask, X0
	059 Move TEMP, X0
	060 And TEMP, TEMP, 2
	061 Compare TEMP, 2
	062 JumpIfEqual {82}
	063 Move X0, [X21]
	064 Move X19, [X19+64]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1B6F8F8
	069 Move X8, 0x2297000
	070 Move X8, [X8+3936]
	071 Move X1, X19
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X30, [X31+16]
	075 Move X21, [X31+24]
	076 Move X0, [X8]
	077 Move W2, 2
	078 Move X3, X31
	079 Move V8, [X31+48]
	080 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	081 Return 
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {27}
	086 Move X8, [X19+56]
	087 Compare X8, 0
	088 JumpIfEqual {140}
	089 Move X0, [X8+80]
	090 Compare X0, 0
	091 JumpIfEqual {140}
	092 Move X1, X31
	093 Call Simulation.HasAnyActiveConnections, X0
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {48}
	098 Move X8, [X19+56]
	099 Compare X8, 0
	100 JumpIfEqual {140}
	101 Move X0, [X8+80]
	102 Move W1, 16
	103 Move X2, X31
	104 Call SimulationMessage.Allocate, X0, X1
	105 Move X21, X0
	106 Move W0, 1
	107 Move X1, X31
	108 Call Assert.Check, X0
	109 Move X8, [X19+64]
	110 Compare X8, 0
	111 JumpIfEqual {140}
	112 Move X8, [X8+32]
	113 Compare X8, 0
	114 JumpIfEqual {116}
	115 Move W0, [X8]
	116 Move X0, X31
	117 Move W1, [X19+104]
	118 Move W2, 2
	119 Move X3, X31
	120 Call RpcHeader.Create, X0, X1, X2
	121 Move [X21+28], X0
	122 Move [X21+36], W20
	123 Move [X21+40], S8
	124 Compare X21, 0
	125 JumpIfEqual {140}
	126 Move W8, 128
	127 Move [X21+12], W8
	128 Move X0, [X19+56]
	129 Compare X0, 0
	130 JumpIfEqual {140}
	131 Move X1, X21
	132 Move X20, [X31+32]
	133 Move X19, [X31+40]
	134 Move X30, [X31+16]
	135 Move X21, [X31+24]
	136 Move X2, X31
	137 Move V8, [X31+48]
	138 Call NetworkRunner.SendRpc, X0, X1
	139 Return 
	140 Call 0x1B6FA1C

Method: System.Void RPC_DoPlayerDie(System.Boolean isDie)

Disassembly:
	0x01CB86A8 LDP D9, D8, [X31 + 0x8]
	0x01CB86AC MOV V6.16B, V2.16B
	0x01CB86B0 MOV V7.16B, V3.16B
	0x01CB86B4 MOV V2.16B, V10.16B
	0x01CB86B8 MOV V3.16B, V4.16B
	0x01CB86BC MOV V4.16B, V5.16B
	0x01CB86C0 MOV V5.16B, V6.16B
	0x01CB86C4 MOV V6.16B, V7.16B
	0x01CB86C8 MOV X1, X31
	0x01CB86CC LDR V10, [X31], #0x40
	0x01CB86D0 B 0x3AA80CC
	0x01CB86D4 LDP X20, X19, [X31 + 0x30]
	0x01CB86D8 LDP X22, X21, [X31 + 0x20]
	0x01CB86DC LDR X30, [X31 + 0x18]
	0x01CB86E0 LDP D9, D8, [X31 + 0x8]
	0x01CB86E4 LDR V10, [X31], #0x40
	0x01CB86E8 RET
	0x01CB86EC BL 0x1B6EA1C
	0x01CB86F0 STR D14, [X31 - 0x80]!
	0x01CB86F4 STP D13, D12, [X31 + 0x10]
	0x01CB86F8 STP D11, D10, [X31 + 0x20]
	0x01CB86FC STP D9, D8, [X31 + 0x30]
	0x01CB8700 STP X30, X25, [X31 + 0x40]
	0x01CB8704 STP X24, X23, [X31 + 0x50]
	0x01CB8708 STP X22, X21, [X31 + 0x60]
	0x01CB870C STP X20, X19, [X31 + 0x70]
	0x01CB8710 ADRP X24, 0x256B000
	0x01CB8714 LDRB W8, [X24 + 0x4F9]
	0x01CB8718 MOV X19, X4
	0x01CB871C MOV X20, X3
	0x01CB8720 MOV X21, X2
	0x01CB8724 MOV V8.16B, V6.16B
	0x01CB8728 MOV V9.16B, V5.16B
	0x01CB872C MOV V10.16B, V4.16B
	0x01CB8730 MOV V11.16B, V3.16B
	0x01CB8734 MOV V12.16B, V2.16B
	0x01CB8738 MOV V13.16B, V1.16B
	0x01CB873C MOV V14.16B, V0.16B
	0x01CB8740 MOV W22, W1
	0x01CB8744 MOV X23, X0
	0x01CB8748 TBNZ X8, 0x0, 0x1CB8778
	0x01CB874C ADRP X0, 0x2296000
	0x01CB8750 LDR X0, [X0 + 0x1C0]
	0x01CB8754 BL 0x1B6E7F0
	0x01CB8758 ADRP X0, 0x2296000
	0x01CB875C LDR X0, [X0 + 0x198]
	0x01CB8760 BL 0x1B6E7F0
	0x01CB8764 ADRP X0, 0x2296000
	0x01CB8768 LDR X0, [X0 + 0xF98]
	0x01CB876C BL 0x1B6E7F0
	0x01CB8770 MOVZ W8, 0x1
	0x01CB8774 STRB W8, [X24 + 0x4F9]
	0x01CB8778 LDRB W8, [X23 + 0x58]
	0x01CB877C CBZ W8, 0x1CB8844
	0x01CB8780 STRB W31, [X23 + 0x58]
	0x01CB8784 LDR X0, [X23 + 0x40]
	0x01CB8788 CBZ X0, 0x1CB8AC0
	0x01CB878C MOV X1, X31
	0x01CB8790 BL 0x1D9E6A0
	0x01CB8794 TBZ X0, 0x0, 0x1CB8880
	0x01CB8798 ADRP X23, 0x2296000
	0x01CB879C LDR X23, [X23 + 0x198]
	0x01CB87A0 LDR X0, [X23]
	0x01CB87A4 LDR W8, [X0 + 0xE0]
	0x01CB87A8 CBNZ W8, 0x1CB87B0
	0x01CB87AC BL 0x1B6E8F8
	0x01CB87B0 ADRP X24, 0x256B000
	0x01CB87B4 LDRB W8, [X24 + 0x44F]
	0x01CB87B8 CBNZ W8, 0x1CB87D0
	0x01CB87BC ADRP X0, 0x2296000
	0x01CB87C0 LDR X0, [X0 + 0x198]
	0x01CB87C4 BL 0x1B6E7F0
	0x01CB87C8 MOVZ W8, 0x1
	0x01CB87CC STRB W8, [X24 + 0x44F]
	0x01CB87D0 LDR X0, [X23]
	0x01CB87D4 LDR W8, [X0 + 0xE0]
	0x01CB87D8 CBNZ W8, 0x1CB87E4
	0x01CB87DC BL 0x1B6E8F8
	0x01CB87E0 LDR X0, [X23]
	0x01CB87E4 LDR X8, [X0 + 0xB8]
	0x01CB87E8 LDR X0, [X8]
	0x01CB87EC CBZ X0, 0x1CB8AC0
	0x01CB87F0 MOV W1, W22
	0x01CB87F4 MOV V1.16B, V13.16B
	0x01CB87F8 MOV V2.16B, V12.16B
	0x01CB87FC MOV V3.16B, V11.16B
	0x01CB8800 MOV V4.16B, V10.16B
	0x01CB8804 MOV V5.16B, V9.16B
	0x01CB8808 MOV V6.16B, V8.16B
	0x01CB880C MOV X2, X21
	0x01CB8810 MOV X3, X20
	0x01CB8814 MOV X4, X19
	0x01CB8818 LDP X20, X19, [X31 + 0x70]
	0x01CB881C LDP X22, X21, [X31 + 0x60]
	0x01CB8820 LDP X24, X23, [X31 + 0x50]
	0x01CB8824 LDP X30, X25, [X31 + 0x40]
	0x01CB8828 LDP D9, D8, [X31 + 0x30]
	0x01CB882C LDP D11, D10, [X31 + 0x20]
	0x01CB8830 LDP D13, D12, [X31 + 0x10]
	0x01CB8834 MOV V0.16B, V14.16B
	0x01CB8838 MOV X5, X31
	0x01CB883C LDR V14, [X31], #0x80
	0x01CB8840 B 0x1CC2208

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x256C000
	006 Move W8, [X21+1266]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x2297000
	014 Move X0, [X0+448]
	015 Call 0x1B6F7F0
	016 Move X0, 0x2297000
	017 Move X0, [X0+3944]
	018 Call 0x1B6F7F0
	019 Move W8, 1
	020 Move [X21+1266], W8
	021 Move W8, [X19+88]
	022 Compare W8, 0
	023 JumpIfEqual {33}
	024 Move [X19+88], W31
	025 And W1, W20, 1
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call NetPlayer.set_isDie, X0, X1
	032 Return 
	033 Move X21, 0x2297000
	034 Move X21, [X21+448]
	035 Move X0, [X21]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1B6F8F8
	040 Move X0, X19
	041 Move X1, X31
	042 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	043 Move X0, [X19+56]
	044 Compare X0, 0
	045 JumpIfEqual {138}
	046 Move X1, X31
	047 Call NetworkRunner.get_Stage, X0
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Return 
	054 Move X0, [X19+64]
	055 Compare X0, 0
	056 JumpIfEqual {138}
	057 Move X1, X31
	058 Call NetworkObject.GetLocalAuthorityMask, X0
	059 Move TEMP, X0
	060 And TEMP, TEMP, 2
	061 Compare TEMP, 2
	062 JumpIfEqual {81}
	063 Move X0, [X21]
	064 Move X19, [X19+64]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1B6F8F8
	069 Move X8, 0x2297000
	070 Move X8, [X8+3944]
	071 Move X1, X19
	072 Move X20, [X31+16]
	073 Move X19, [X31+24]
	074 Move W2, 2
	075 Move X0, [X8]
	076 Move X3, X31
	077 Move X30, [X31+32]
	078 Move X21, [X31+40]
	079 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	080 Return 
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfEqual {25}
	085 Move X8, [X19+56]
	086 Compare X8, 0
	087 JumpIfEqual {138}
	088 Move X0, [X8+80]
	089 Compare X0, 0
	090 JumpIfEqual {138}
	091 Move X1, X31
	092 Call Simulation.HasAnyActiveConnections, X0
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {49}
	097 Move X8, [X19+56]
	098 Compare X8, 0
	099 JumpIfEqual {138}
	100 Move X0, [X8+80]
	101 Move W1, 12
	102 Move X2, X31
	103 Call SimulationMessage.Allocate, X0, X1
	104 Move X21, X0
	105 Move W0, 1
	106 Move X1, X31
	107 Call Assert.Check, X0
	108 Move X8, [X19+64]
	109 Compare X8, 0
	110 JumpIfEqual {138}
	111 Move X8, [X8+32]
	112 Compare X8, 0
	113 JumpIfEqual {115}
	114 Move W0, [X8]
	115 Move X0, X31
	116 Move W1, [X19+104]
	117 Move W2, 3
	118 Move X3, X31
	119 Call RpcHeader.Create, X0, X1, X2
	120 And W8, W20, 1
	121 Move [X21+28], X0
	122 Move [X21+36], W8
	123 Compare X21, 0
	124 JumpIfEqual {138}
	125 Move W8, 96
	126 Move [X21+12], W8
	127 Move X0, [X19+56]
	128 Compare X0, 0
	129 JumpIfEqual {138}
	130 Move X20, [X31+16]
	131 Move X19, [X31+24]
	132 Move X1, X21
	133 Move X2, X31
	134 Move X30, [X31+32]
	135 Move X21, [X31+40]
	136 Call NetworkRunner.SendRpc, X0, X1
	137 Return 
	138 Call 0x1B6FA1C

Method: System.Void RPC_SetVoiceVolume(System.Single volume)

Disassembly:
	0x01CB8C28 STR S0, [X31 + 0x98]
	0x01CB8C2C MOV V0.16B, V14.16B
	0x01CB8C30 MOV X5, X31
	0x01CB8C34 LDP D15, D14, [X31], #0x90
	0x01CB8C38 B 0x1CC21DC
	0x01CB8C3C ADRP X25, 0x2296000
	0x01CB8C40 LDR X25, [X25 + 0x1C0]
	0x01CB8C44 LDR X0, [X25]
	0x01CB8C48 LDR W8, [X0 + 0xE0]
	0x01CB8C4C CBNZ W8, 0x1CB8C54
	0x01CB8C50 BL 0x1B6E8F8
	0x01CB8C54 MOV X0, X23
	0x01CB8C58 MOV X1, X31
	0x01CB8C5C BL 0x1D697C8
	0x01CB8C60 LDR X0, [X23 + 0x38]
	0x01CB8C64 CBZ X0, 0x1CB8EE4
	0x01CB8C68 MOV X1, X31
	0x01CB8C6C BL 0x1D87040
	0x01CB8C70 CMP W0, 0x4
	0x01CB8C74 B.NE 0x1CB8CA0
	0x01CB8C78 LDP X20, X19, [X31 + 0x80]
	0x01CB8C7C LDP X22, X21, [X31 + 0x70]
	0x01CB8C80 LDP X24, X23, [X31 + 0x60]
	0x01CB8C84 LDP X26, X25, [X31 + 0x50]
	0x01CB8C88 LDR X30, [X31 + 0x40]
	0x01CB8C8C LDP D9, D8, [X31 + 0x30]
	0x01CB8C90 LDP D11, D10, [X31 + 0x20]
	0x01CB8C94 LDP D13, D12, [X31 + 0x10]
	0x01CB8C98 LDP D15, D14, [X31], #0x90
	0x01CB8C9C RET
	0x01CB8CA0 LDR X0, [X23 + 0x40]
	0x01CB8CA4 CBZ X0, 0x1CB8EE4
	0x01CB8CA8 MOV X1, X31
	0x01CB8CAC BL 0x1D9F538
	0x01CB8CB0 ANDS W31, W0, 0x7
	0x01CB8CB4 B.EQ 0x1CB8D6C
	0x01CB8CB8 TBNZ X0, 0x1, 0x1CB8B68
	0x01CB8CBC MOV X0, X21
	0x01CB8CC0 MOV X1, X31
	0x01CB8CC4 BL 0x1D816D4
	0x01CB8CC8 MOV W24, W0
	0x01CB8CCC MOV X0, X20
	0x01CB8CD0 MOV X1, X31
	0x01CB8CD4 BL 0x1D816D4
	0x01CB8CD8 ADD W8, W0, 0x3
	0x01CB8CDC MOV X0, X19
	0x01CB8CE0 MOV X1, X31
	0x01CB8CE4 AND W26, W8, 0xFFFFFFFC
	0x01CB8CE8 BL 0x1D816D4
	0x01CB8CEC ADD W9, W24, 0x37
	0x01CB8CF0 ADD W8, W0, 0x3
	0x01CB8CF4 AND W9, W9, 0xFFFFFFFC
	0x01CB8CF8 AND W8, W8, 0xFFFFFFFC
	0x01CB8CFC ADD W9, W9, W26
	0x01CB8D00 ADD W24, W9, W8
	0x01CB8D04 CMP W24, 0x201
	0x01CB8D08 B.GE 0x1CB8DC0
	0x01CB8D0C LDR X8, [X23 + 0x38]
	0x01CB8D10 CBZ X8, 0x1CB8EE4
	0x01CB8D14 LDR X0, [X8 + 0x50]
	0x01CB8D18 CBZ X0, 0x1CB8EE4
	0x01CB8D1C MOV X1, X31
	0x01CB8D20 BL 0x1DBEFE4
	0x01CB8D24 TBZ X0, 0x0, 0x1CB8C78
	0x01CB8D28 LDR X8, [X23 + 0x38]
	0x01CB8D2C CBZ X8, 0x1CB8EE4
	0x01CB8D30 LDR X0, [X8 + 0x50]
	0x01CB8D34 MOV W1, W24
	0x01CB8D38 MOV X2, X31
	0x01CB8D3C BL 0x1DD601C
	0x01CB8D40 MOV X24, X0
	0x01CB8D44 MOVZ W0, 0x1
	0x01CB8D48 MOV X1, X31
	0x01CB8D4C BL 0x1D29EBC
	0x01CB8D50 LDR X8, [X23 + 0x40]
	0x01CB8D54 CBZ X8, 0x1CB8EE4
	0x01CB8D58 LDR X8, [X8 + 0x20]
	0x01CB8D5C ADD X25, X24, 0x1C
	0x01CB8D60 CBZ X8, 0x1CB8E0C
	0x01CB8D64 LDR W0, [X8]
	0x01CB8D68 B 0x1CB8E10
	0x01CB8D6C LDR X0, [X25]
	0x01CB8D70 LDR X19, [X23 + 0x40]
	0x01CB8D74 LDR W8, [X0 + 0xE0]
	0x01CB8D78 CBNZ W8, 0x1CB8D80
	0x01CB8D7C BL 0x1B6E8F8
	0x01CB8D80 ADRP X8, 0x2296000
	0x01CB8D84 LDR X8, [X8 + 0xFA0]
	0x01CB8D88 MOV X1, X19
	0x01CB8D8C LDP X20, X19, [X31 + 0x80]
	0x01CB8D90 LDP X22, X21, [X31 + 0x70]
	0x01CB8D94 LDR X0, [X8]
	0x01CB8D98 LDP X24, X23, [X31 + 0x60]
	0x01CB8D9C LDP X26, X25, [X31 + 0x50]
	0x01CB8DA0 LDR X30, [X31 + 0x40]
	0x01CB8DA4 LDP D9, D8, [X31 + 0x30]
	0x01CB8DA8 LDP D11, D10, [X31 + 0x20]
	0x01CB8DAC LDP D13, D12, [X31 + 0x10]
	0x01CB8DB0 MOVZ W2, 0x7
	0x01CB8DB4 MOV X3, X31
	0x01CB8DB8 LDP D15, D14, [X31], #0x90
	0x01CB8DBC B 0x1D69640
	0x01CB8DC0 LDR X0, [X25]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x256C000
	006 Move W8, [X20+1267]
	007 Move V8, V0
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x2297000
	014 Move X0, [X0+448]
	015 Call 0x1B6F7F0
	016 Move X0, 0x2297000
	017 Move X0, [X0+3968]
	018 Call 0x1B6F7F0
	019 Move W8, 1
	020 Move [X20+1267], W8
	021 Move W8, [X19+88]
	022 Compare W8, 0
	023 JumpIfEqual {26}
	024 Move [X19+88], W31
	025 Move [X19+264], S8
	026 Move X20, 0x2297000
	027 Move X20, [X20+448]
	028 Move X0, [X20]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1B6F8F8
	033 Move X0, X19
	034 Move X1, X31
	035 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	036 Move X0, [X19+56]
	037 Compare X0, 0
	038 JumpIfEqual {130}
	039 Move X1, X31
	040 Call NetworkRunner.get_Stage, X0
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+8]
	045 Move V8, [X31+32]
	046 Return 
	047 Move X0, [X19+64]
	048 Compare X0, 0
	049 JumpIfEqual {130}
	050 Move X1, X31
	051 Call NetworkObject.GetLocalAuthorityMask, X0
	052 Move TEMP, X0
	053 And TEMP, TEMP, 2
	054 Compare TEMP, 2
	055 JumpIfEqual {74}
	056 Move X0, [X20]
	057 Move X19, [X19+64]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1B6F8F8
	062 Move X8, 0x2297000
	063 Move X8, [X8+3968]
	064 Move X1, X19
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X30, [X31+8]
	068 Move X0, [X8]
	069 Move W2, 2
	070 Move X3, X31
	071 Move V8, [X31+32]
	072 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	073 Return 
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {25}
	078 Move X8, [X19+56]
	079 Compare X8, 0
	080 JumpIfEqual {130}
	081 Move X0, [X8+80]
	082 Compare X0, 0
	083 JumpIfEqual {130}
	084 Move X1, X31
	085 Call Simulation.HasAnyActiveConnections, X0
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {42}
	090 Move X8, [X19+56]
	091 Compare X8, 0
	092 JumpIfEqual {130}
	093 Move X0, [X8+80]
	094 Move W1, 12
	095 Move X2, X31
	096 Call SimulationMessage.Allocate, X0, X1
	097 Move X20, X0
	098 Move W0, 1
	099 Move X1, X31
	100 Call Assert.Check, X0
	101 Move X8, [X19+64]
	102 Compare X8, 0
	103 JumpIfEqual {130}
	104 Move X8, [X8+32]
	105 Compare X8, 0
	106 JumpIfEqual {108}
	107 Move W0, [X8]
	108 Move X0, X31
	109 Move W1, [X19+104]
	110 Move W2, 4
	111 Move X3, X31
	112 Call RpcHeader.Create, X0, X1, X2
	113 Move [X20+28], X0
	114 Move [X20+36], S8
	115 Compare X20, 0
	116 JumpIfEqual {130}
	117 Move W8, 96
	118 Move [X20+12], W8
	119 Move X0, [X19+56]
	120 Compare X0, 0
	121 JumpIfEqual {130}
	122 Move X1, X20
	123 Move X20, [X31+16]
	124 Move X19, [X31+24]
	125 Move X30, [X31+8]
	126 Move X2, X31
	127 Move V8, [X31+32]
	128 Call NetworkRunner.SendRpc, X0, X1
	129 Return 
	130 Call 0x1B6FA1C

Method: System.Void FixedUpdateNetwork()

Disassembly:
	0x01CB8DC4 LDR W8, [X0 + 0xE0]
	0x01CB8DC8 CBNZ W8, 0x1CB8DD0
	0x01CB8DCC BL 0x1B6E8F8
	0x01CB8DD0 ADRP X8, 0x2296000
	0x01CB8DD4 LDR X8, [X8 + 0xFA0]
	0x01CB8DD8 MOV W1, W24
	0x01CB8DDC LDP X20, X19, [X31 + 0x80]
	0x01CB8DE0 LDP X22, X21, [X31 + 0x70]
	0x01CB8DE4 LDR X0, [X8]
	0x01CB8DE8 LDP X24, X23, [X31 + 0x60]
	0x01CB8DEC LDP X26, X25, [X31 + 0x50]
	0x01CB8DF0 LDR X30, [X31 + 0x40]
	0x01CB8DF4 LDP D9, D8, [X31 + 0x30]
	0x01CB8DF8 LDP D11, D10, [X31 + 0x20]
	0x01CB8DFC LDP D13, D12, [X31 + 0x10]
	0x01CB8E00 MOV X2, X31
	0x01CB8E04 LDP D15, D14, [X31], #0x90
	0x01CB8E08 B 0x1D69494
	0x01CB8E0C MOV X0, X31
	0x01CB8E10 LDR W1, [X23 + 0x68]
	0x01CB8E14 MOVZ W2, 0x6
	0x01CB8E18 MOV X3, X31
	0x01CB8E1C BL 0x1DA8258
	0x01CB8E20 STUR X0, [X24 + 0x1C]
	0x01CB8E24 ADD X0, X24, 0x44
	0x01CB8E28 MOV X1, X21
	0x01CB8E2C MOV X2, X31
	0x01CB8E30 STR W22, [X24 + 0x24]
	0x01CB8E34 STP S14, S13, [X24 + 0x28]
	0x01CB8E38 STP S12, S11, [X24 + 0x30]
	0x01CB8E3C STP S10, S9, [X24 + 0x38]
	0x01CB8E40 STR S8, [X24 + 0x40]
	0x01CB8E44 BL 0x1D816C4
	0x01CB8E48 ADD W8, W0, 0x2B
	0x01CB8E4C AND W21, W8, 0xFFFFFFFC
	0x01CB8E50 ADD X0, X25, W21, SXTW
	0x01CB8E54 MOV X1, X20
	0x01CB8E58 MOV X2, X31
	0x01CB8E5C BL 0x1D816C4
	0x01CB8E60 ADD W8, W0, 0x3
	0x01CB8E64 LDR V0, [X31 + 0x48]
	0x01CB8E68 AND W8, W8, 0xFFFFFFFC
	0x01CB8E6C ADD W8, W8, W21
	0x01CB8E70 ADD X9, X25, W8, SXTW
	0x01CB8E74 STP S15, S0, [X9]
	0x01CB8E78 LDR V0, [X31 + 0x4C]
	0x01CB8E7C ADD W20, W8, 0xC
	0x01CB8E80 ADD X0, X25, W20, SXTW
	0x01CB8E84 MOV X1, X19
	0x01CB8E88 MOV X2, X31
	0x01CB8E8C STR S0, [X9 + 0x8]
	0x01CB8E90 BL 0x1D816C4
	0x01CB8E94 CBZ X24, 0x1CB8EE4
	0x01CB8E98 ADD W8, W0, 0x3
	0x01CB8E9C AND W8, W8, 0x1FFFFFFC
	0x01CB8EA0 ADD W8, W8, W20
	0x01CB8EA4 UBFM W8, W8, 0x1D, 0x1C
	0x01CB8EA8 STR W8, [X24 + 0xC]
	0x01CB8EAC LDR X0, [X23 + 0x38]
	0x01CB8EB0 CBZ X0, 0x1CB8EE4
	0x01CB8EB4 MOV X1, X24
	0x01CB8EB8 LDP X20, X19, [X31 + 0x80]
	0x01CB8EBC LDP X22, X21, [X31 + 0x70]
	0x01CB8EC0 LDP X24, X23, [X31 + 0x60]
	0x01CB8EC4 LDP X26, X25, [X31 + 0x50]
	0x01CB8EC8 LDR X30, [X31 + 0x40]
	0x01CB8ECC LDP D9, D8, [X31 + 0x30]
	0x01CB8ED0 LDP D11, D10, [X31 + 0x20]
	0x01CB8ED4 LDP D13, D12, [X31 + 0x10]
	0x01CB8ED8 MOV X2, X31
	0x01CB8EDC LDP D15, D14, [X31], #0x90
	0x01CB8EE0 B 0x1D8A710
	0x01CB8EE4 BL 0x1B6EA1C
	0x01CB8EE8 STR D14, [X31 - 0x90]!
	0x01CB8EEC STP D13, D12, [X31 + 0x10]
	0x01CB8EF0 STP D11, D10, [X31 + 0x20]
	0x01CB8EF4 STP D9, D8, [X31 + 0x30]
	0x01CB8EF8 STP X30, X27, [X31 + 0x40]
	0x01CB8EFC STP X26, X25, [X31 + 0x50]
	0x01CB8F00 STP X24, X23, [X31 + 0x60]
	0x01CB8F04 STP X22, X21, [X31 + 0x70]
	0x01CB8F08 STP X20, X19, [X31 + 0x80]
	0x01CB8F0C ADRP X25, 0x256B000
	0x01CB8F10 LDRB W8, [X25 + 0x4FB]
	0x01CB8F14 MOV X19, X5
	0x01CB8F18 MOV W20, W4
	0x01CB8F1C MOV X21, X3
	0x01CB8F20 MOV X22, X2
	0x01CB8F24 MOV V8.16B, V6.16B
	0x01CB8F28 MOV V9.16B, V5.16B
	0x01CB8F2C MOV V10.16B, V4.16B
	0x01CB8F30 MOV V11.16B, V3.16B
	0x01CB8F34 MOV V12.16B, V2.16B
	0x01CB8F38 MOV V13.16B, V1.16B
	0x01CB8F3C MOV V14.16B, V0.16B
	0x01CB8F40 MOV W23, W1
	0x01CB8F44 MOV X24, X0
	0x01CB8F48 TBNZ X8, 0x0, 0x1CB8F78
	0x01CB8F4C ADRP X0, 0x2296000
	0x01CB8F50 LDR X0, [X0 + 0x1C0]
	0x01CB8F54 BL 0x1B6E7F0
	0x01CB8F58 ADRP X0, 0x2296000
	0x01CB8F5C LDR X0, [X0 + 0x198]
	0x01CB8F60 BL 0x1B6E7F0
	0x01CB8F64 ADRP X0, 0x2296000
	0x01CB8F68 LDR X0, [X0 + 0xFA8]
	0x01CB8F6C BL 0x1B6E7F0
	0x01CB8F70 MOVZ W8, 0x1
	0x01CB8F74 STRB W8, [X25 + 0x4FB]
	0x01CB8F78 LDRB W8, [X24 + 0x58]
	0x01CB8F7C CBZ W8, 0x1CB904C
	0x01CB8F80 STRB W31, [X24 + 0x58]
	0x01CB8F84 LDR X0, [X24 + 0x40]
	0x01CB8F88 CBZ X0, 0x1CB92E4
	0x01CB8F8C MOV X1, X31
	0x01CB8F90 BL 0x1D9E6A0
	0x01CB8F94 TBZ X0, 0x0, 0x1CB9088
	0x01CB8F98 ADRP X24, 0x2296000
	0x01CB8F9C LDR X24, [X24 + 0x198]
	0x01CB8FA0 LDR X0, [X24]
	0x01CB8FA4 LDR W8, [X0 + 0xE0]
	0x01CB8FA8 CBNZ W8, 0x1CB8FB0
	0x01CB8FAC BL 0x1B6E8F8
	0x01CB8FB0 ADRP X25, 0x256B000
	0x01CB8FB4 LDRB W8, [X25 + 0x44F]
	0x01CB8FB8 CBNZ W8, 0x1CB8FD0
	0x01CB8FBC ADRP X0, 0x2296000
	0x01CB8FC0 LDR X0, [X0 + 0x198]
	0x01CB8FC4 BL 0x1B6E7F0
	0x01CB8FC8 MOVZ W8, 0x1
	0x01CB8FCC STRB W8, [X25 + 0x44F]
	0x01CB8FD0 LDR X0, [X24]
	0x01CB8FD4 LDR W8, [X0 + 0xE0]
	0x01CB8FD8 CBNZ W8, 0x1CB8FE4
	0x01CB8FDC BL 0x1B6E8F8
	0x01CB8FE0 LDR X0, [X24]
	0x01CB8FE4 LDR X8, [X0 + 0xB8]
	0x01CB8FE8 LDR X0, [X8]
	0x01CB8FEC CBZ X0, 0x1CB92E4
	0x01CB8FF0 MOV W1, W23
	0x01CB8FF4 MOV V1.16B, V13.16B
	0x01CB8FF8 MOV V2.16B, V12.16B
	0x01CB8FFC MOV V3.16B, V11.16B
	0x01CB9000 MOV V4.16B, V10.16B

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+176], X30
	003 Move [X31+184], X23
	004 Move [X31+192], X22
	005 Move [X31+200], X21
	006 Move [X31+208], X20
	007 Move [X31+216], X19
	008 NotImplemented "Instruction MRS not yet implemented."
	009 Move X8, [X23+40]
	010 Move X20, 0x256C000
	011 Move X19, X0
	012 Move [X31+168], X8
	013 Move W8, [X20+1268]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x2297000
	019 Move X0, [X0+3976]
	020 Call 0x1B6F7F0
	021 Move W8, 1
	022 Move [X20+1268], W8
	023 Add X0, X31, 0
	024 Move W2, 168
	025 Move W1, W31
	026 Call 0x3D1A8C0
	027 Move X0, X19
	028 Move X1, X31
	029 Call NetworkBehaviour.FixedUpdateNetwork, X0
	030 Move X0, [X19+64]
	031 Compare X0, 0
	032 JumpIfEqual {171}
	033 Move W8, [X0+96]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 2
	036 Compare TEMP, 2
	037 JumpIfEqual {171}
	038 Move X1, X31
	039 Call NetworkObject.get_HasStateAuthority, X0
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {171}
	044 Move X8, 0x2297000
	045 Move X8, [X8+3976]
	046 Add X1, X31, 0
	047 Move X0, X19
	048 Move X2, [X8]
	049 Call 0x210D088, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {104}
	054 Move X0, X19
	055 Move X1, X31
	056 Call Component.get_transform, X0
	057 Compare X0, 0
	058 JumpIfEqual {182}
	059 Move S5, [X31+20]
	060 Move S6, [X31+24]
	061 Move S3, [X31+12]
	062 Move S4, [X31+16]
	063 Move S1, [X31+4]
	064 Move S2, [X31+8]
	065 Move V0, [X31]
	066 Move X1, X31
	067 Call Transform.SetPositionAndRotation, X0, X1, X2
	068 Move X0, [X19+136]
	069 Compare X0, 0
	070 JumpIfEqual {182}
	071 Move S5, [X31+48]
	072 Move S6, [X31+52]
	073 Move S3, [X31+40]
	074 Move S4, [X31+44]
	075 Move S1, [X31+32]
	076 Move S2, [X31+36]
	077 Move V0, [X31+28]
	078 Move X1, X31
	079 Call Transform.SetPositionAndRotation, X0, X1, X2
	080 Move X0, [X19+152]
	081 Compare X0, 0
	082 JumpIfEqual {182}
	083 Move S5, [X31+76]
	084 Move S6, [X31+80]
	085 Move S3, [X31+68]
	086 Move S4, [X31+72]
	087 Move S1, [X31+60]
	088 Move S2, [X31+64]
	089 Move V0, [X31+56]
	090 Move X1, X31
	091 Call Transform.SetPositionAndRotation, X0, X1, X2
	092 Move X0, [X19+144]
	093 Compare X0, 0
	094 JumpIfEqual {182}
	095 Move S5, [X31+104]
	096 Move S6, [X31+108]
	097 Move S3, [X31+96]
	098 Move S4, [X31+100]
	099 Move S1, [X31+88]
	100 Move S2, [X31+92]
	101 Move V0, [X31+84]
	102 Move X1, X31
	103 Call Transform.SetPositionAndRotation, X0, X1, X2
	104 Move W8, [X19+288]
	105 Subtract W8, W8, 1
	106 Move [X19+288], W8
	107 Move [X19+268], W31
	108 Move V0, [X19+264]
	109 Move V1, [X19+268]
	110 Move S2, 5
	111 Move X0, X19
	112 Multiply S0, S0, S2
	113 NotImplemented "Instruction FCMP not yet implemented."
	114 NotImplemented "Instruction FCSEL not yet implemented."
	115 Call NetPlayer.set_playerVolume, X0, V0
	116 Move X0, [X19+56]
	117 Compare X0, 0
	118 JumpIfEqual {182}
	119 Move W8, [X0+384]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X1, X31
	122 Call NetworkRunner.get_IsSharedModeMasterClient, X0
	123 Move X20, [X19+56]
	124 Compare X20, 0
	125 JumpIfEqual {182}
	126 Move W22, W0
	127 Move X0, X20
	128 Move X1, X31
	129 Call NetworkRunner.get_LocalPlayer, X0
	130 Move X21, X0
	131 Move TEMP, X22
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfNotEqual {158}
	135 Move X19, 0x256C000
	136 Move W8, [X19+1299]
	137 Compare W8, 0
	138 JumpIfNotEqual {144}
	139 Move X0, 0x2297000
	140 Move X0, [X0+3984]
	141 Call 0x1B6F7F0
	142 Move W8, 1
	143 Move [X19+1299], W8
	144 Move X8, 0x2297000
	145 Move X8, [X8+3984]
	146 Move X8, [X8]
	147 Move X8, [X8+184]
	148 Move X8, [X8]
	149 Compare X8, 0
	150 JumpIfEqual {182}
	151 Move X0, [X8+32]
	152 Compare X0, 0
	153 JumpIfEqual {182}
	154 Move X1, X31
	155 Call Transform.get_position, X0
	156 And X1, X21, 0
	157 Move W8, 0x43960000
	158 Move X0, X19
	159 Move X1, X31
	160 Call Component.get_transform, X0
	161 Compare X0, 0
	162 JumpIfEqual {182}
	163 Move X1, X31
	164 Call Transform.get_position, X0
	165 And X1, X21, 0
	166 Move W8, 0x42C80000
	167 Move S3, W8
	168 Move X0, X20
	169 Move X2, X31
	170 Call NetworkRunner.AddPlayerAreaOfInterest, X0, X1, X2, V0
	171 Move X8, [X23+40]
	172 Move X9, [X31+168]
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X20, [X31+208]
	175 Move X19, [X31+216]
	176 Move X22, [X31+192]
	177 Move X21, [X31+200]
	178 Move X30, [X31+176]
	179 Move X23, [X31+184]
	180 Add X31, X31, 224
	181 Return 
	182 Call 0x1B6FA1C
	183 Call 0x3D1A880

Method: System.Void HandleColorChanged()

Disassembly:
	0x01CB7D68 LDR X8, [X8 + 0x20]
	0x01CB7D6C CBZ X8, 0x1CB7D78
	0x01CB7D70 LDR W0, [X8]
	0x01CB7D74 B 0x1CB7D7C
	0x01CB7D78 MOV X0, X31
	0x01CB7D7C LDR W1, [X19 + 0x68]
	0x01CB7D80 MOVZ W2, 0x4
	0x01CB7D84 MOV X3, X31
	0x01CB7D88 BL 0x1DA8258

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, [X0+168]
	004 Call NetPlayer.get_playerColor, X0
	005 Compare X19, 0
	006 JumpIfEqual {13}
	007 Move X0, X19
	008 Move X1, X31
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Call PlayerView.SetColor, X0, X1
	012 Return 
	013 Call 0x1B6FA1C

Method: System.Void HandleIsDeadChanged()

Disassembly:
	0x01CB9004 MOV V5.16B, V9.16B
	0x01CB9008 MOV V6.16B, V8.16B
	0x01CB900C MOV X2, X22
	0x01CB9010 MOV X3, X21
	0x01CB9014 MOV W4, W20
	0x01CB9018 MOV X5, X19
	0x01CB901C LDP X20, X19, [X31 + 0x80]
	0x01CB9020 LDP X22, X21, [X31 + 0x70]
	0x01CB9024 LDP X24, X23, [X31 + 0x60]
	0x01CB9028 LDP X26, X25, [X31 + 0x50]
	0x01CB902C LDP X30, X27, [X31 + 0x40]
	0x01CB9030 LDP D9, D8, [X31 + 0x30]
	0x01CB9034 LDP D11, D10, [X31 + 0x20]
	0x01CB9038 LDP D13, D12, [X31 + 0x10]
	0x01CB903C MOV V0.16B, V14.16B
	0x01CB9040 MOV X6, X31
	0x01CB9044 LDR V14, [X31], #0x90
	0x01CB9048 B 0x1CC19E8
	0x01CB904C ADRP X26, 0x2295000
	0x01CB9050 LDR X26, [X26 + 0x1C0]
	0x01CB9054 LDR X0, [X26]
	0x01CB9058 LDR W8, [X0 + 0xE0]
	0x01CB905C CBNZ W8, 0x1CB9064
	0x01CB9060 BL 0x1B6E8F8
	0x01CB9064 MOV X0, X24
	0x01CB9068 MOV X1, X31
	0x01CB906C BL 0x1D697C8
	0x01CB9070 LDR X0, [X24 + 0x38]
	0x01CB9074 CBZ X0, 0x1CB92E4
	0x01CB9078 MOV X1, X31
	0x01CB907C BL 0x1D87040
	0x01CB9080 CMP W0, 0x4
	0x01CB9084 B.NE 0x1CB90B0
	0x01CB9088 LDP X20, X19, [X31 + 0x80]
	0x01CB908C LDP X22, X21, [X31 + 0x70]
	0x01CB9090 LDP X24, X23, [X31 + 0x60]
	0x01CB9094 LDP X26, X25, [X31 + 0x50]
	0x01CB9098 LDP X30, X27, [X31 + 0x40]
	0x01CB909C LDP D9, D8, [X31 + 0x30]
	0x01CB90A0 LDP D11, D10, [X31 + 0x20]
	0x01CB90A4 LDP D13, D12, [X31 + 0x10]
	0x01CB90A8 LDR V14, [X31], #0x90
	0x01CB90AC RET
	0x01CB90B0 LDR X0, [X24 + 0x40]
	0x01CB90B4 CBZ X0, 0x1CB92E4
	0x01CB90B8 MOV X1, X31
	0x01CB90BC BL 0x1D9F538
	0x01CB90C0 ANDS W31, W0, 0x7
	0x01CB90C4 B.EQ 0x1CB917C
	0x01CB90C8 TBNZ X0, 0x1, 0x1CB8F84
	0x01CB90CC MOV X0, X22
	0x01CB90D0 MOV X1, X31
	0x01CB90D4 BL 0x1D816D4
	0x01CB90D8 MOV W25, W0
	0x01CB90DC MOV X0, X21
	0x01CB90E0 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x256B000
	005 Move W8, [X20+1269]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2295000
	012 Move X0, [X0+1144]
	013 Call 0x1B6F7F0
	014 Move W8, 1
	015 Move [X20+1269], W8
	016 Move X0, [X19+64]
	017 Compare X0, 0
	018 JumpIfEqual {75}
	019 Move X1, X31
	020 Call NetworkObject.get_HasInputAuthority, X0
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {55}
	025 Move X8, 0x2295000
	026 Move X8, [X8+1144]
	027 Move X20, [X19+176]
	028 Move X0, [X8]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1B6F8F8
	033 Move X0, X20
	034 Move X1, X31
	035 Move X2, X31
	036 Call Object.op_Inequality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {71}
	041 Move X20, [X19+176]
	042 Move X0, X19
	043 Call NetPlayer.get_isDie, X0
	044 Compare X20, 0
	045 JumpIfEqual {75}
	046 NotImplemented "Instruction ORN not yet implemented."
	047 Move X0, X20
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 And W1, W8, 1
	051 Move X2, X31
	052 Move X30, [X31+32]
	053 Call Recorder.set_TransmitEnabled, X0, X1
	054 Return 
	055 Move X20, [X19+296]
	056 Move X0, X19
	057 Call NetPlayer.get_isDie, X0
	058 Compare X20, 0
	059 JumpIfEqual {75}
	060 And W31, W0, 1
	061 Move X0, X20
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move S0, 1
	065 Move S1, W31
	066 NotImplemented "Instruction FCSEL not yet implemented."
	067 Move X1, X31
	068 Move X30, [X31+32]
	069 Call AudioSource.set_volume, X0, V0
	070 Return 
	071 Move X20, [X31+16]
	072 Move X19, [X31+24]
	073 Move X30, [X31+32]
	074 Return 
	075 Call 0x1B6FA1C

Method: System.Void HandleDisplayNameChanged()

Disassembly:
	0x01CB7DF4 LDR X0, [X0 + 0xF88]
	0x01CB7DF8 BL 0x1B6E7F0
	0x01CB7DFC MOVZ W8, 0x1
	0x01CB7E00 STRB W8, [X20 + 0x4F4]
	0x01CB7E04 ADD X0, X31, 0x0
	0x01CB7E08 MOVZ W2, 0xA8
	0x01CB7E0C MOV W1, W31
	0x01CB7E10 BL 0x3D198C0
	0x01CB7E14 MOV X0, X19
	0x01CB7E18 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, [X0+208]
	004 Call NetPlayer.get_displayName, X0
	005 Compare X19, 0
	006 JumpIfEqual {14}
	007 Move X1, X0
	008 Move X0, X19
	009 Move X2, X31
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Call Nametag.SetName, X0, X1
	013 Return 
	014 Call 0x1B6FA1C

Method: System.Void HandleChannelChanged()

Disassembly:
	0x01CB90E4 BL 0x1D816D4

ISIL:
	001 Return 

Method: System.Collections.IEnumerator VoiceVolumeUpdater()

Disassembly:
	0x01CB7D00 LDR X30, [X31 + 0x8]
	0x01CB7D04 LDR X0, [X8]
	0x01CB7D08 MOVZ W2, 0x2
	0x01CB7D0C MOV X3, X31
	0x01CB7D10 LDR V8, [X31], #0x20
	0x01CB7D14 B 0x1D69640
	0x01CB7D18 TBNZ X0, 0x0, 0x1CB7C74
	0x01CB7D1C LDR X8, [X19 + 0x38]
	0x01CB7D20 CBZ X8, 0x1CB7DC0
	0x01CB7D24 LDR X0, [X8 + 0x50]
	0x01CB7D28 CBZ X0, 0x1CB7DC0
	0x01CB7D2C MOV X1, X31
	0x01CB7D30 BL 0x1DBEFE4
	0x01CB7D34 TBZ X0, 0x0, 0x1CB7CB8
	0x01CB7D38 LDR X8, [X19 + 0x38]
	0x01CB7D3C CBZ X8, 0x1CB7DC0
	0x01CB7D40 LDR X0, [X8 + 0x50]
	0x01CB7D44 MOVZ W1, 0xC
	0x01CB7D48 MOV X2, X31
	0x01CB7D4C BL 0x1DD601C
	0x01CB7D50 MOV X20, X0
	0x01CB7D54 MOVZ W0, 0x1
	0x01CB7D58 MOV X1, X31
	0x01CB7D5C BL 0x1D29EBC
	0x01CB7D60 LDR X8, [X19 + 0x40]
	0x01CB7D64 CBZ X8, 0x1CB7DC0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x256D000
	006 Move X21, 0x2298000
	007 Move W8, [X20+1270]
	008 Move X21, [X21+3912]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2298000
	015 Move X0, [X0+3912]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X20+1270], W8
	019 Move X0, [X21]
	020 Call 0x1B6FA0C
	021 Move W1, W31
	022 Move X2, X31
	023 Move X20, X0
	024 Call <VoiceVolumeUpdater>d__85..ctor, X0, X1
	025 Compare X20, 0
	026 JumpIfEqual {34}
	027 Move [X20+32], X19
	028 Move X0, X20
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return X0
	034 Call 0x1B6FA1C

Method: System.Collections.IEnumerator RemoteVoiceVolumeUpdater()

Disassembly:
	0x01CB7D8C STUR X0, [X20 + 0x1C]
	0x01CB7D90 STR S8, [X20 + 0x24]
	0x01CB7D94 CBZ X20, 0x1CB7DC0
	0x01CB7D98 MOVZ W8, 0x60
	0x01CB7D9C STR W8, [X20 + 0xC]
	0x01CB7DA0 LDR X0, [X19 + 0x38]
	0x01CB7DA4 CBZ X0, 0x1CB7DC0
	0x01CB7DA8 MOV X1, X20
	0x01CB7DAC LDP X20, X19, [X31 + 0x10]
	0x01CB7DB0 LDR X30, [X31 + 0x8]
	0x01CB7DB4 MOV X2, X31
	0x01CB7DB8 LDR V8, [X31], #0x20
	0x01CB7DBC B 0x1D8A710
	0x01CB7DC0 BL 0x1B6EA1C
	0x01CB7DC4 SUB X31, X31, 0xE0
	0x01CB7DC8 STP X30, X23, [X31 + 0xB0]
	0x01CB7DCC STP X22, X21, [X31 + 0xC0]
	0x01CB7DD0 STP X20, X19, [X31 + 0xD0]
	0x01CB7DD4 MRS X23, 0xC000
	0x01CB7DD8 LDR X8, [X23 + 0x28]
	0x01CB7DDC ADRP X20, 0x256C000
	0x01CB7DE0 MOV X19, X0
	0x01CB7DE4 STR X8, [X31 + 0xA8]
	0x01CB7DE8 LDRB W8, [X20 + 0x4F4]
	0x01CB7DEC TBNZ X8, 0x0, 0x1CB7E04
	0x01CB7DF0 ADRP X0, 0x2297000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x256D000
	006 Move X21, 0x2298000
	007 Move W8, [X20+1271]
	008 Move X21, [X21+3920]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2298000
	015 Move X0, [X0+3920]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X20+1271], W8
	019 Move X0, [X21]
	020 Call 0x1B6FA0C
	021 Move W1, W31
	022 Move X2, X31
	023 Move X20, X0
	024 Call <RemoteVoiceVolumeUpdater>d__86..ctor, X0, X1
	025 Compare X20, 0
	026 JumpIfEqual {34}
	027 Move [X20+32], X19
	028 Move X0, X20
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return X0
	034 Call 0x1B6FA1C

Method: System.Void LateUpdate()

Disassembly:
	0x01CB90E8 ADD W8, W0, 0x3
	0x01CB90EC MOV X0, X19
	0x01CB90F0 MOV X1, X31
	0x01CB90F4 AND W27, W8, 0xFFFFFFFC
	0x01CB90F8 BL 0x1D816D4
	0x01CB90FC ADD W9, W25, 0x2F
	0x01CB9100 ADD W8, W0, 0x3
	0x01CB9104 AND W9, W9, 0xFFFFFFFC
	0x01CB9108 AND W8, W8, 0xFFFFFFFC
	0x01CB910C ADD W9, W9, W27
	0x01CB9110 ADD W25, W9, W8
	0x01CB9114 CMP W25, 0x201
	0x01CB9118 B.GE 0x1CB91D0
	0x01CB911C LDR X8, [X24 + 0x38]
	0x01CB9120 CBZ X8, 0x1CB92E4
	0x01CB9124 LDR X0, [X8 + 0x50]
	0x01CB9128 CBZ X0, 0x1CB92E4
	0x01CB912C MOV X1, X31
	0x01CB9130 BL 0x1DBEFE4
	0x01CB9134 TBZ X0, 0x0, 0x1CB9088
	0x01CB9138 LDR X8, [X24 + 0x38]
	0x01CB913C CBZ X8, 0x1CB92E4
	0x01CB9140 LDR X0, [X8 + 0x50]
	0x01CB9144 MOV W1, W25
	0x01CB9148 MOV X2, X31
	0x01CB914C BL 0x1DD601C
	0x01CB9150 MOV X25, X0
	0x01CB9154 MOVZ W0, 0x1
	0x01CB9158 MOV X1, X31
	0x01CB915C BL 0x1D29EBC
	0x01CB9160 LDR X8, [X24 + 0x40]
	0x01CB9164 CBZ X8, 0x1CB92E4
	0x01CB9168 LDR X8, [X8 + 0x20]
	0x01CB916C ADD X26, X25, 0x1C
	0x01CB9170 CBZ X8, 0x1CB921C
	0x01CB9174 LDR W0, [X8]
	0x01CB9178 B 0x1CB9220
	0x01CB917C LDR X0, [X26]
	0x01CB9180 LDR X19, [X24 + 0x40]
	0x01CB9184 LDR W8, [X0 + 0xE0]
	0x01CB9188 CBNZ W8, 0x1CB9190
	0x01CB918C BL 0x1B6E8F8
	0x01CB9190 ADRP X8, 0x2295000
	0x01CB9194 LDR X8, [X8 + 0xFA8]
	0x01CB9198 MOV X1, X19
	0x01CB919C LDP X20, X19, [X31 + 0x80]
	0x01CB91A0 LDP X22, X21, [X31 + 0x70]
	0x01CB91A4 LDR X0, [X8]
	0x01CB91A8 LDP X24, X23, [X31 + 0x60]
	0x01CB91AC LDP X26, X25, [X31 + 0x50]
	0x01CB91B0 LDP X30, X27, [X31 + 0x40]
	0x01CB91B4 LDP D9, D8, [X31 + 0x30]
	0x01CB91B8 LDP D11, D10, [X31 + 0x20]
	0x01CB91BC LDP D13, D12, [X31 + 0x10]
	0x01CB91C0 MOVZ W2, 0x7
	0x01CB91C4 MOV X3, X31
	0x01CB91C8 LDR V14, [X31], #0x90
	0x01CB91CC B 0x1D69640
	0x01CB91D0 LDR X0, [X26]
	0x01CB91D4 LDR W8, [X0 + 0xE0]
	0x01CB91D8 CBNZ W8, 0x1CB91E0
	0x01CB91DC BL 0x1B6E8F8
	0x01CB91E0 ADRP X8, 0x2295000
	0x01CB91E4 LDR X8, [X8 + 0xFA8]
	0x01CB91E8 MOV W1, W25
	0x01CB91EC LDP X20, X19, [X31 + 0x80]
	0x01CB91F0 LDP X22, X21, [X31 + 0x70]
	0x01CB91F4 LDR X0, [X8]
	0x01CB91F8 LDP X24, X23, [X31 + 0x60]
	0x01CB91FC LDP X26, X25, [X31 + 0x50]
	0x01CB9200 LDP X30, X27, [X31 + 0x40]
	0x01CB9204 LDP D9, D8, [X31 + 0x30]
	0x01CB9208 LDP D11, D10, [X31 + 0x20]
	0x01CB920C LDP D13, D12, [X31 + 0x10]
	0x01CB9210 MOV X2, X31
	0x01CB9214 LDR V14, [X31], #0x90
	0x01CB9218 B 0x1D69494
	0x01CB921C MOV X0, X31
	0x01CB9220 LDR W1, [X24 + 0x68]
	0x01CB9224 MOVZ W2, 0x7
	0x01CB9228 MOV X3, X31
	0x01CB922C BL 0x1DA8258
	0x01CB9230 STUR X0, [X25 + 0x1C]
	0x01CB9234 ADD X0, X25, 0x44
	0x01CB9238 MOV X1, X22
	0x01CB923C MOV X2, X31
	0x01CB9240 STR W23, [X25 + 0x24]
	0x01CB9244 STP S14, S13, [X25 + 0x28]
	0x01CB9248 STP S12, S11, [X25 + 0x30]
	0x01CB924C STP S10, S9, [X25 + 0x38]
	0x01CB9250 STR S8, [X25 + 0x40]
	0x01CB9254 BL 0x1D816C4
	0x01CB9258 ADD W8, W0, 0x2B
	0x01CB925C AND W22, W8, 0xFFFFFFFC
	0x01CB9260 ADD X0, X26, W22, SXTW
	0x01CB9264 MOV X1, X21
	0x01CB9268 MOV X2, X31
	0x01CB926C BL 0x1D816C4
	0x01CB9270 ADD W8, W0, 0x3
	0x01CB9274 AND W8, W8, 0xFFFFFFFC
	0x01CB9278 ADD W8, W8, W22
	0x01CB927C STR W20, [X26, W8, SXTW]
	0x01CB9280 ADD W20, W8, 0x4
	0x01CB9284 ADD X0, X26, W20, SXTW
	0x01CB9288 MOV X1, X19
	0x01CB928C MOV X2, X31
	0x01CB9290 BL 0x1D816C4
	0x01CB9294 CBZ X25, 0x1CB92E4
	0x01CB9298 ADD W8, W0, 0x3
	0x01CB929C AND W8, W8, 0x1FFFFFFC
	0x01CB92A0 ADD W8, W20, W8
	0x01CB92A4 UBFM W8, W8, 0x1D, 0x1C
	0x01CB92A8 STR W8, [X25 + 0xC]
	0x01CB92AC LDR X0, [X24 + 0x38]
	0x01CB92B0 CBZ X0, 0x1CB92E4
	0x01CB92B4 MOV X1, X25
	0x01CB92B8 LDP X20, X19, [X31 + 0x80]
	0x01CB92BC LDP X22, X21, [X31 + 0x70]
	0x01CB92C0 LDP X24, X23, [X31 + 0x60]
	0x01CB92C4 LDP X26, X25, [X31 + 0x50]
	0x01CB92C8 LDP X30, X27, [X31 + 0x40]
	0x01CB92CC LDP D9, D8, [X31 + 0x30]
	0x01CB92D0 LDP D11, D10, [X31 + 0x20]
	0x01CB92D4 LDP D13, D12, [X31 + 0x10]
	0x01CB92D8 MOV X2, X31
	0x01CB92DC LDR V14, [X31], #0x90
	0x01CB92E0 B 0x1D8A710
	0x01CB92E4 BL 0x1B6EA1C
	0x01CB92E8 STR D14, [X31 - 0x70]!
	0x01CB92EC STP D13, D12, [X31 + 0x8]
	0x01CB92F0 STP D11, D10, [X31 + 0x18]
	0x01CB92F4 STP D9, D8, [X31 + 0x28]
	0x01CB92F8 STR X30, [X31 + 0x38]
	0x01CB92FC STP X24, X23, [X31 + 0x40]
	0x01CB9300 STP X22, X21, [X31 + 0x50]
	0x01CB9304 STP X20, X19, [X31 + 0x60]
	0x01CB9308 CBZ X2, 0x1CB93D0
	0x01CB930C MOV W20, W1
	0x01CB9310 MOV X21, X0
	0x01CB9314 MOV X0, X2
	0x01CB9318 MOV X1, X31
	0x01CB931C MOV X19, X5
	0x01CB9320 MOV X22, X4
	0x01CB9324 MOV X23, X3
	0x01CB9328 MOV X24, X2
	0x01CB932C BL 0x3AA7658
	0x01CB9330 MOV X0, X24
	0x01CB9334 MOV X1, X31
	0x01CB9338 MOV V8.16B, V0.16B
	0x01CB933C MOV V9.16B, V1.16B
	0x01CB9340 MOV V10.16B, V2.16B
	0x01CB9344 BL 0x3AA5FBC
	0x01CB9348 CBZ X23, 0x1CB93D0
	0x01CB934C MOV X0, X23
	0x01CB9350 MOV X1, X31
	0x01CB9354 MOV V11.16B, V0.16B
	0x01CB9358 MOV V12.16B, V1.16B
	0x01CB935C MOV V13.16B, V2.16B
	0x01CB9360 MOV V14.16B, V3.16B
	0x01CB9364 BL 0x3AA0C88
	0x01CB9368 CBZ X22, 0x1CB93D0
	0x01CB936C MOV X23, X0
	0x01CB9370 MOV X0, X22
	0x01CB9374 MOV X1, X31
	0x01CB9378 BL 0x3AA0C88
	0x01CB937C MOV X3, X0
	0x01CB9380 MOV X0, X21
	0x01CB9384 MOV W1, W20
	0x01CB9388 MOV V0.16B, V8.16B
	0x01CB938C MOV V1.16B, V9.16B
	0x01CB9390 MOV V2.16B, V10.16B
	0x01CB9394 MOV V3.16B, V11.16B
	0x01CB9398 MOV V4.16B, V12.16B
	0x01CB939C MOV V5.16B, V13.16B
	0x01CB93A0 MOV X2, X23
	0x01CB93A4 MOV X4, X19
	0x01CB93A8 LDP X20, X19, [X31 + 0x60]
	0x01CB93AC LDP X22, X21, [X31 + 0x50]
	0x01CB93B0 LDP X24, X23, [X31 + 0x40]
	0x01CB93B4 LDR X30, [X31 + 0x38]
	0x01CB93B8 LDP D9, D8, [X31 + 0x28]
	0x01CB93BC LDP D11, D10, [X31 + 0x18]
	0x01CB93C0 LDP D13, D12, [X31 + 0x8]
	0x01CB93C4 MOV V6.16B, V14.16B
	0x01CB93C8 LDR V14, [X31], #0x70
	0x01CB93CC B 0x1CB86F0
	0x01CB93D0 BL 0x1B6EA1C
	0x01CB93D4 SUB X31, X31, 0x90
	0x01CB93D8 STP D15, D14, [X31 + 0x10]
	0x01CB93DC STP D13, D12, [X31 + 0x20]
	0x01CB93E0 STP D11, D10, [X31 + 0x30]
	0x01CB93E4 STP D9, D8, [X31 + 0x40]
	0x01CB93E8 STR X30, [X31 + 0x50]
	0x01CB93EC STP X24, X23, [X31 + 0x60]
	0x01CB93F0 STP X22, X21, [X31 + 0x70]
	0x01CB93F4 STP X20, X19, [X31 + 0x80]
	0x01CB93F8 STP S1, S0, [X31 + 0x58]
	0x01CB93FC CBZ X2, 0x1CB94E0
	0x01CB9400 MOV W20, W1
	0x01CB9404 MOV X21, X0
	0x01CB9408 MOV X0, X2
	0x01CB940C MOV X1, X31
	0x01CB9410 MOV X19, X5
	0x01CB9414 MOV V10.16B, V2.16B
	0x01CB9418 MOV X22, X4
	0x01CB941C MOV X23, X3
	0x01CB9420 MOV X24, X2
	0x01CB9424 BL 0x3AA7658
	0x01CB9428 MOV X0, X24
	0x01CB942C MOV X1, X31
	0x01CB9430 MOV V11.16B, V0.16B
	0x01CB9434 MOV V12.16B, V1.16B
	0x01CB9438 MOV V13.16B, V2.16B
	0x01CB943C BL 0x3AA5FBC
	0x01CB9440 CBZ X23, 0x1CB94E0
	0x01CB9444 MOV X0, X23
	0x01CB9448 MOV X1, X31
	0x01CB944C MOV V14.16B, V0.16B
	0x01CB9450 MOV V15.16B, V1.16B
	0x01CB9454 MOV V8.16B, V2.16B
	0x01CB9458 MOV V9.16B, V3.16B
	0x01CB945C BL 0x3AA0C88
	0x01CB9460 CBZ X22, 0x1CB94E0
	0x01CB9464 MOV X23, X0
	0x01CB9468 MOV X0, X22
	0x01CB946C MOV X1, X31
	0x01CB9470 BL 0x3AA0C88
	0x01CB9474 LDR V0, [X31 + 0x58]
	0x01CB9478 MOV X3, X0
	0x01CB947C MOV X0, X21
	0x01CB9480 MOV W1, W20
	0x01CB9484 STP S0, S10, [X31 + 0x4]
	0x01CB9488 LDR V0, [X31 + 0x5C]
	0x01CB948C MOV V1.16B, V12.16B
	0x01CB9490 MOV V2.16B, V13.16B
	0x01CB9494 MOV V3.16B, V14.16B
	0x01CB9498 STR S0, [X31]
	0x01CB949C MOV V0.16B, V11.16B
	0x01CB94A0 MOV V4.16B, V15.16B
	0x01CB94A4 MOV V5.16B, V8.16B
	0x01CB94A8 MOV V6.16B, V9.16B
	0x01CB94AC MOV X2, X23
	0x01CB94B0 MOV X4, X19
	0x01CB94B4 BL 0x1CB8AC4
	0x01CB94B8 LDP X20, X19, [X31 + 0x80]
	0x01CB94BC LDP X22, X21, [X31 + 0x70]
	0x01CB94C0 LDP X24, X23, [X31 + 0x60]
	0x01CB94C4 LDR X30, [X31 + 0x50]
	0x01CB94C8 LDP D9, D8, [X31 + 0x40]
	0x01CB94CC LDP D11, D10, [X31 + 0x30]
	0x01CB94D0 LDP D13, D12, [X31 + 0x20]
	0x01CB94D4 LDP D15, D14, [X31 + 0x10]
	0x01CB94D8 ADD X31, X31, 0x90
	0x01CB94DC RET
	0x01CB94E0 BL 0x1B6EA1C
	0x01CB94E4 STR D14, [X31 - 0x80]!
	0x01CB94E8 STP D13, D12, [X31 + 0x10]
	0x01CB94EC STP D11, D10, [X31 + 0x20]
	0x01CB94F0 STP D9, D8, [X31 + 0x30]
	0x01CB94F4 STP X30, X25, [X31 + 0x40]
	0x01CB94F8 STP X24, X23, [X31 + 0x50]
	0x01CB94FC STP X22, X21, [X31 + 0x60]
	0x01CB9500 STP X20, X19, [X31 + 0x70]
	0x01CB9504 CBZ X2, 0x1CB95D4
	0x01CB9508 MOV W21, W1
	0x01CB950C MOV X22, X0
	0x01CB9510 MOV X0, X2
	0x01CB9514 MOV X1, X31
	0x01CB9518 MOV X19, X6
	0x01CB951C MOV W20, W5
	0x01CB9520 MOV X23, X4
	0x01CB9524 MOV X24, X3
	0x01CB9528 MOV X25, X2
	0x01CB952C BL 0x3AA7658
	0x01CB9530 MOV X0, X25
	0x01CB9534 MOV X1, X31
	0x01CB9538 MOV V8.16B, V0.16B
	0x01CB953C MOV V9.16B, V1.16B
	0x01CB9540 MOV V10.16B, V2.16B
	0x01CB9544 BL 0x3AA5FBC
	0x01CB9548 CBZ X24, 0x1CB95D4
	0x01CB954C MOV X0, X24
	0x01CB9550 MOV X1, X31
	0x01CB9554 MOV V11.16B, V0.16B
	0x01CB9558 MOV V12.16B, V1.16B
	0x01CB955C MOV V13.16B, V2.16B
	0x01CB9560 MOV V14.16B, V3.16B
	0x01CB9564 BL 0x3AA0C88
	0x01CB9568 CBZ X23, 0x1CB95D4
	0x01CB956C MOV X24, X0
	0x01CB9570 MOV X0, X23
	0x01CB9574 MOV X1, X31
	0x01CB9578 BL 0x3AA0C88
	0x01CB957C MOV X3, X0
	0x01CB9580 MOV X0, X22
	0x01CB9584 MOV W1, W21
	0x01CB9588 MOV V0.16B, V8.16B
	0x01CB958C MOV V1.16B, V9.16B
	0x01CB9590 MOV V2.16B, V10.16B
	0x01CB9594 MOV V3.16B, V11.16B
	0x01CB9598 MOV V4.16B, V12.16B
	0x01CB959C MOV V5.16B, V13.16B
	0x01CB95A0 MOV X2, X24
	0x01CB95A4 MOV W4, W20
	0x01CB95A8 MOV X5, X19
	0x01CB95AC LDP X20, X19, [X31 + 0x70]
	0x01CB95B0 LDP X22, X21, [X31 + 0x60]
	0x01CB95B4 LDP X24, X23, [X31 + 0x50]
	0x01CB95B8 LDP X30, X25, [X31 + 0x40]
	0x01CB95BC LDP D9, D8, [X31 + 0x30]
	0x01CB95C0 LDP D11, D10, [X31 + 0x20]
	0x01CB95C4 LDP D13, D12, [X31 + 0x10]
	0x01CB95C8 MOV V6.16B, V14.16B
	0x01CB95CC LDR V14, [X31], #0x80
	0x01CB95D0 B 0x1CB8EE8
	0x01CB95D4 BL 0x1B6EA1C
	0x01CB95D8 SUB X31, X31, 0xA0
	0x01CB95DC STP D15, D14, [X31 + 0x20]
	0x01CB95E0 STP D13, D12, [X31 + 0x30]
	0x01CB95E4 STP D11, D10, [X31 + 0x40]
	0x01CB95E8 STP D9, D8, [X31 + 0x50]
	0x01CB95EC STP X30, X25, [X31 + 0x60]
	0x01CB95F0 STP X24, X23, [X31 + 0x70]
	0x01CB95F4 STP X22, X21, [X31 + 0x80]
	0x01CB95F8 STP X20, X19, [X31 + 0x90]
	0x01CB95FC ADRP X24, 0x256A000
	0x01CB9600 LDRB W8, [X24 + 0x4FC]
	0x01CB9604 MOV X19, X4
	0x01CB9608 MOV V12.16B, V4.16B
	0x01CB960C MOV V11.16B, V3.16B
	0x01CB9610 MOV X22, X3
	0x01CB9614 MOV X23, X2
	0x01CB9618 MOV V10.16B, V1.16B
	0x01CB961C MOV V13.16B, V0.16B
	0x01CB9620 MOV W20, W1
	0x01CB9624 MOV X21, X0
	0x01CB9628 STP S5, S2, [X31 + 0x18]
	0x01CB962C TBNZ X8, 0x0, 0x1CB9650
	0x01CB9630 ADRP X0, 0x2294000
	0x01CB9634 LDR X0, [X0 + 0x478]
	0x01CB9638 BL 0x1B6E7F0
	0x01CB963C ADRP X0, 0x2294000
	0x01CB9640 LDR X0, [X0 + 0x818]
	0x01CB9644 BL 0x1B6E7F0
	0x01CB9648 MOVZ W8, 0x1
	0x01CB964C STRB W8, [X24 + 0x4FC]
	0x01CB9650 ADRP X25, 0x256A000
	0x01CB9654 ADRP X24, 0x2294000
	0x01CB9658 LDRB W8, [X25 + 0x454]
	0x01CB965C LDR X24, [X24 + 0x478]
	0x01CB9660 CBNZ W8, 0x1CB9678
	0x01CB9664 ADRP X0, 0x2295000
	0x01CB9668 LDR X0, [X0 + 0x1F8]
	0x01CB966C BL 0x1B6E7F0
	0x01CB9670 MOVZ W8, 0x1
	0x01CB9674 STRB W8, [X25 + 0x454]
	0x01CB9678 ADRP X8, 0x2295000
	0x01CB967C LDR X8, [X8 + 0x1F8]
	0x01CB9680 LDR X0, [X24]
	0x01CB9684 LDR X8, [X8]
	0x01CB9688 LDR W9, [X0 + 0xE0]
	0x01CB968C LDR X8, [X8 + 0xB8]
	0x01CB9690 LDP S9, S8, [X8]
	0x01CB9694 LDP S15, S14, [X8 + 0x8]
	0x01CB9698 CBNZ W9, 0x1CB96A0
	0x01CB969C BL 0x1B6E8F8
	0x01CB96A0 ADRP X25, 0x2294000
	0x01CB96A4 LDR X25, [X25 + 0x818]
	0x01CB96A8 MOV X0, X23
	0x01CB96AC MOV X1, X31
	0x01CB96B0 MOV X2, X31
	0x01CB96B4 BL 0x3A9D6EC
	0x01CB96B8 TBZ X0, 0x0, 0x1CB96D4
	0x01CB96BC CBZ X23, 0x1CB977C
	0x01CB96C0 MOV X0, X23
	0x01CB96C4 MOV X1, X31
	0x01CB96C8 BL 0x3AA0C88
	0x01CB96CC MOV X23, X0
	0x01CB96D0 B 0x1CB96D8
	0x01CB96D4 LDR X23, [X25]
	0x01CB96D8 LDR X0, [X24]
	0x01CB96DC LDR W8, [X0 + 0xE0]
	0x01CB96E0 CBNZ W8, 0x1CB96E8
	0x01CB96E4 BL 0x1B6E8F8
	0x01CB96E8 MOV X0, X22
	0x01CB96EC MOV X1, X31

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x256B000
	010 Move W8, [X20+1272]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x2295000
	017 Move X0, [X0+1144]
	018 Call 0x1B6F7F0
	019 Move X0, 0x2296000
	020 Move X0, [X0+408]
	021 Call 0x1B6F7F0
	022 Move W8, 1
	023 Move [X20+1272], W8
	024 Move X0, [X19+64]
	025 Compare X0, 0
	026 JumpIfEqual {409}
	027 Move W8, [X0+96]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 2
	030 Compare TEMP, 2
	031 JumpIfEqual {409}
	032 Move X1, X31
	033 Call NetworkObject.get_HasInputAuthority, X0
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {409}
	038 Move X21, 0x2296000
	039 Move X21, [X21+408]
	040 Move X0, [X21]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1B6F8F8
	045 Move X22, 0x256B000
	046 Move W8, [X22+1103]
	047 Compare W8, 0
	048 JumpIfNotEqual {54}
	049 Move X0, 0x2296000
	050 Move X0, [X0+408]
	051 Call 0x1B6F7F0
	052 Move W8, 1
	053 Move [X22+1103], W8
	054 Move X0, [X21]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {60}
	058 Call 0x1B6F8F8
	059 Move X0, [X21]
	060 Move X8, 0x2295000
	061 Move X8, [X8+1144]
	062 Move X9, [X0+184]
	063 Move X8, [X8]
	064 Move X20, [X9]
	065 Move W10, [X8+224]
	066 Compare W10, 0
	067 JumpIfNotEqual {70}
	068 Move X0, X8
	069 Call 0x1B6F8F8
	070 Move X0, X20
	071 Move X1, X31
	072 Move X2, X31
	073 Call Object.op_Inequality, X0, X1
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {454}
	078 Move X0, X19
	079 Move X1, X31
	080 Call Component.get_transform, X0
	081 Move X8, [X21]
	082 Move X20, X0
	083 Move W9, [X8+224]
	084 Compare W9, 0
	085 JumpIfNotEqual {88}
	086 Move X0, X8
	087 Call 0x1B6F8F8
	088 Move W8, [X22+1103]
	089 Compare W8, 0
	090 JumpIfNotEqual {96}
	091 Move X0, 0x2296000
	092 Move X0, [X0+408]
	093 Call 0x1B6F7F0
	094 Move W8, 1
	095 Move [X22+1103], W8
	096 Move X0, [X21]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {102}
	100 Call 0x1B6F8F8
	101 Move X0, [X21]
	102 Move X8, [X0+184]
	103 Move X8, [X8]
	104 Compare X8, 0
	105 JumpIfEqual {463}
	106 Move X0, [X8+80]
	107 Compare X0, 0
	108 JumpIfEqual {463}
	109 Move X1, X31
	110 Call Transform.get_position, X0
	111 Move W8, [X22+1103]
	112 Move V8, V0
	113 Move V9, V1
	114 Move V10, V2
	115 Compare W8, 0
	116 JumpIfNotEqual {122}
	117 Move X0, 0x2296000
	118 Move X0, [X0+408]
	119 Call 0x1B6F7F0
	120 Move W8, 1
	121 Move [X22+1103], W8
	122 Move X0, [X21]
	123 Move W8, [X0+224]
	124 Compare W8, 0
	125 JumpIfNotEqual {128}
	126 Call 0x1B6F8F8
	127 Move X0, [X21]
	128 Move X8, [X0+184]
	129 Move X8, [X8]
	130 Compare X8, 0
	131 JumpIfEqual {463}
	132 Move X0, [X8+80]
	133 Compare X0, 0
	134 JumpIfEqual {463}
	135 Move X1, X31
	136 Call Transform.get_forward, X0
	137 Move X0, X31
	138 Call Extensions.Flatten, X0
	139 Move X0, X31
	140 Call Quaternion.LookRotation, X0
	141 Compare X20, 0
	142 JumpIfEqual {463}
	143 Move V4, V0
	144 Move V5, V1
	145 Move V6, V2
	146 Move V7, V3
	147 Move X0, X20
	148 Move V0, V8
	149 Move V1, V9
	150 Move V2, V10
	151 Move V3, V4
	152 Move V4, V5
	153 Move V5, V6
	154 Move V6, V7
	155 Move X1, X31
	156 Call Transform.SetPositionAndRotation, X0, X1, X2
	157 Move W8, [X22+1103]
	158 Move X20, [X19+136]
	159 Compare W8, 0
	160 JumpIfNotEqual {166}
	161 Move X0, 0x2296000
	162 Move X0, [X0+408]
	163 Call 0x1B6F7F0
	164 Move W8, 1
	165 Move [X22+1103], W8
	166 Move X0, [X21]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {172}
	170 Call 0x1B6F8F8
	171 Move X0, [X21]
	172 Move X8, [X0+184]
	173 Move X8, [X8]
	174 Compare X8, 0
	175 JumpIfEqual {463}
	176 Move X0, [X8+88]
	177 Compare X0, 0
	178 JumpIfEqual {463}
	179 Move X1, X31
	180 Call Transform.get_position, X0
	181 Move W8, [X22+1103]
	182 Move V8, V0
	183 Move V9, V1
	184 Move V10, V2
	185 Compare W8, 0
	186 JumpIfNotEqual {192}
	187 Move X0, 0x2296000
	188 Move X0, [X0+408]
	189 Call 0x1B6F7F0
	190 Move W8, 1
	191 Move [X22+1103], W8
	192 Move X0, [X21]
	193 Move W8, [X0+224]
	194 Compare W8, 0
	195 JumpIfNotEqual {198}
	196 Call 0x1B6F8F8
	197 Move X0, [X21]
	198 Move X8, [X0+184]
	199 Move X8, [X8]
	200 Compare X8, 0
	201 JumpIfEqual {463}
	202 Move X0, [X8+88]
	203 Compare X0, 0
	204 JumpIfEqual {463}
	205 Move X1, X31
	206 Call Component.get_transform, X0
	207 Compare X0, 0
	208 JumpIfEqual {463}
	209 Move X1, X31
	210 Call Transform.get_rotation, X0
	211 Compare X20, 0
	212 JumpIfEqual {463}
	213 Move V4, V0
	214 Move V5, V1
	215 Move V6, V2
	216 Move V7, V3
	217 Move X0, X20
	218 Move V0, V8
	219 Move V1, V9
	220 Move V2, V10
	221 Move V3, V4
	222 Move V4, V5
	223 Move V5, V6
	224 Move V6, V7
	225 Move X1, X31
	226 Call Transform.SetPositionAndRotation, X0, X1, X2
	227 Move W8, [X22+1103]
	228 Move X20, [X19+144]
	229 Compare W8, 0
	230 JumpIfNotEqual {236}
	231 Move X0, 0x2296000
	232 Move X0, [X0+408]
	233 Call 0x1B6F7F0
	234 Move W8, 1
	235 Move [X22+1103], W8
	236 Move X0, [X21]
	237 Move W8, [X0+224]
	238 Compare W8, 0
	239 JumpIfNotEqual {242}
	240 Call 0x1B6F8F8
	241 Move X0, [X21]
	242 Move X8, [X0+184]
	243 Move X8, [X8]
	244 Compare X8, 0
	245 JumpIfEqual {463}
	246 Move X0, [X8+96]
	247 Compare X0, 0
	248 JumpIfEqual {463}
	249 Move X1, X31
	250 Call Transform.get_position, X0
	251 Move W8, [X22+1103]
	252 Move V8, V0
	253 Move V9, V1
	254 Move V10, V2
	255 Compare W8, 0
	256 JumpIfNotEqual {262}
	257 Move X0, 0x2296000
	258 Move X0, [X0+408]
	259 Call 0x1B6F7F0
	260 Move W8, 1
	261 Move [X22+1103], W8
	262 Move X0, [X21]
	263 Move W8, [X0+224]
	264 Compare W8, 0
	265 JumpIfNotEqual {268}
	266 Call 0x1B6F8F8
	267 Move X0, [X21]
	268 Move X8, [X0+184]
	269 Move X8, [X8]
	270 Compare X8, 0
	271 JumpIfEqual {463}
	272 Move X0, [X8+112]
	273 Compare X0, 0
	274 JumpIfEqual {463}
	275 Move X1, X31
	276 Call Transform.get_rotation, X0
	277 Compare X20, 0
	278 JumpIfEqual {463}
	279 Move V4, V0
	280 Move V5, V1
	281 Move V6, V2
	282 Move V7, V3
	283 Move X0, X20
	284 Move V0, V8
	285 Move V1, V9
	286 Move V2, V10
	287 Move V3, V4
	288 Move V4, V5
	289 Move V5, V6
	290 Move V6, V7
	291 Move X1, X31
	292 Call Transform.SetPositionAndRotation, X0, X1, X2
	293 Move W8, [X22+1103]
	294 Move X20, [X19+152]
	295 Compare W8, 0
	296 JumpIfNotEqual {302}
	297 Move X0, 0x2296000
	298 Move X0, [X0+408]
	299 Call 0x1B6F7F0
	300 Move W8, 1
	301 Move [X22+1103], W8
	302 Move X0, [X21]
	303 Move W8, [X0+224]
	304 Compare W8, 0
	305 JumpIfNotEqual {308}
	306 Call 0x1B6F8F8
	307 Move X0, [X21]
	308 Move X8, [X0+184]
	309 Move X8, [X8]
	310 Compare X8, 0
	311 JumpIfEqual {463}
	312 Move X0, [X8+104]
	313 Compare X0, 0
	314 JumpIfEqual {463}
	315 Move X1, X31
	316 Call Transform.get_position, X0
	317 Move W8, [X22+1103]
	318 Move V8, V0
	319 Move V9, V1
	320 Move V10, V2
	321 Compare W8, 0
	322 JumpIfNotEqual {328}
	323 Move X0, 0x2296000
	324 Move X0, [X0+408]
	325 Call 0x1B6F7F0
	326 Move W8, 1
	327 Move [X22+1103], W8
	328 Move X0, [X21]
	329 Move W8, [X0+224]
	330 Compare W8, 0
	331 JumpIfNotEqual {334}
	332 Call 0x1B6F8F8
	333 Move X0, [X21]
	334 Move X8, [X0+184]
	335 Move X8, [X8]
	336 Compare X8, 0
	337 JumpIfEqual {463}
	338 Move X0, [X8+120]
	339 Compare X0, 0
	340 JumpIfEqual {463}
	341 Move X1, X31
	342 Call Transform.get_rotation, X0
	343 Compare X20, 0
	344 JumpIfEqual {463}
	345 Move V4, V0
	346 Move V5, V1
	347 Move V6, V2
	348 Move V7, V3
	349 Move X0, X20
	350 Move V0, V8
	351 Move V1, V9
	352 Move V2, V10
	353 Move V3, V4
	354 Move V4, V5
	355 Move V5, V6
	356 Move V6, V7
	357 Move X1, X31
	358 Call Transform.SetPositionAndRotation, X0, X1, X2
	359 Move W8, [X22+1103]
	360 Move X20, [X19+160]
	361 Compare W8, 0
	362 JumpIfNotEqual {368}
	363 Move X0, 0x2296000
	364 Move X0, [X0+408]
	365 Call 0x1B6F7F0
	366 Move W8, 1
	367 Move [X22+1103], W8
	368 Move X0, [X21]
	369 Move W8, [X0+224]
	370 Compare W8, 0
	371 JumpIfNotEqual {374}
	372 Call 0x1B6F8F8
	373 Move X0, [X21]
	374 Move X8, [X0+184]
	375 Move X0, [X8]
	376 Compare X0, 0
	377 JumpIfEqual {463}
	378 Move X1, X31
	379 Call PlayerController.get_backAttachAnchor, X0
	380 Compare X0, 0
	381 JumpIfEqual {463}
	382 Move X1, X31
	383 Call Transform.get_position, X0
	384 Move W8, [X22+1103]
	385 Move V8, V0
	386 Move V9, V1
	387 Move V10, V2
	388 Compare W8, 0
	389 JumpIfNotEqual {395}
	390 Move X0, 0x2296000
	391 Move X0, [X0+408]
	392 Call 0x1B6F7F0
	393 Move W8, 1
	394 Move [X22+1103], W8
	395 Move X0, [X21]
	396 Move W8, [X0+224]
	397 Compare W8, 0
	398 JumpIfNotEqual {401}
	399 Call 0x1B6F8F8
	400 Move X0, [X21]
	401 Move X8, [X0+184]
	402 Move X0, [X8]
	403 Compare X0, 0
	404 JumpIfEqual {463}
	405 Move X1, X31
	406 Call PlayerController.get_backAttachAnchor, X0
	407 Compare X0, 0
	408 JumpIfNotEqual {427}
	409 Move X8, [X19+168]
	410 Compare X8, 0
	411 JumpIfEqual {463}
	412 Move X0, [X8+72]
	413 Compare X0, 0
	414 JumpIfEqual {463}
	415 Move X20, [X19+160]
	416 Move X1, X31
	417 Call Transform.get_position, X0
	418 Move X8, [X19+168]
	419 Compare X8, 0
	420 JumpIfEqual {463}
	421 Move X0, [X8+72]
	422 Compare X0, 0
	423 JumpIfEqual {463}
	424 Move V8, V0
	425 Move V9, V1
	426 Move V10, V2
	427 Move X1, X31
	428 Call Transform.get_rotation, X0
	429 Compare X20, 0
	430 JumpIfEqual {463}
	431 Move V4, V0
	432 Move V5, V1
	433 Move X0, X20
	434 Move V0, V8
	435 Move V1, V9
	436 Move X20, [X31+48]
	437 Move X19, [X31+56]
	438 Move X22, [X31+32]
	439 Move X21, [X31+40]
	440 Move X30, [X31+24]
	441 Move D9, [X31+8]
	442 Move D8, [X31+16]
	443 Move V6, V2
	444 Move V7, V3
	445 Move V2, V10
	446 Move V3, V4
	447 Move V4, V5
	448 Move V5, V6
	449 Move V6, V7
	450 Move X1, X31
	451 Move V10, [X31+64]
	452 Call Transform.SetPositionAndRotation, X0, X1, X2
	453 Return 
	454 Move X20, [X31+48]
	455 Move X19, [X31+56]
	456 Move X22, [X31+32]
	457 Move X21, [X31+40]
	458 Move X30, [X31+24]
	459 Move D9, [X31+8]
	460 Move D8, [X31+16]
	461 Move V10, [X31+64]
	462 Return 
	463 Call 0x1B6FA1C

Method: System.Void RPC_PlayerHit(System.Int32 damage, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, System.String hitSound, System.String killSound, System.String hitName)

Disassembly:
	0x01CB96F0 MOV X2, X31
	0x01CB96F4 BL 0x3A9D6EC
	0x01CB96F8 TBZ X0, 0x0, 0x1CB9714
	0x01CB96FC CBZ X22, 0x1CB977C
	0x01CB9700 MOV X0, X22
	0x01CB9704 MOV X1, X31
	0x01CB9708 BL 0x3AA0C88
	0x01CB970C MOV X3, X0
	0x01CB9710 B 0x1CB9718
	0x01CB9714 LDR X3, [X25]
	0x01CB9718 CBZ X21, 0x1CB977C
	0x01CB971C LDP S0, S2, [X31 + 0x18]
	0x01CB9720 MOV X0, X21
	0x01CB9724 MOV W1, W20
	0x01CB9728 MOV V1.16B, V10.16B
	0x01CB972C STR S0, [X31 + 0x8]
	0x01CB9730 MOV V0.16B, V13.16B
	0x01CB9734 MOV V3.16B, V9.16B
	0x01CB9738 MOV V4.16B, V8.16B
	0x01CB973C MOV V5.16B, V15.16B
	0x01CB9740 MOV V6.16B, V14.16B
	0x01CB9744 MOV X2, X23
	0x01CB9748 MOV X4, X19
	0x01CB974C STP S11, S12, [X31]
	0x01CB9750 BL 0x1CB8AC4
	0x01CB9754 LDP X20, X19, [X31 + 0x90]
	0x01CB9758 LDP X22, X21, [X31 + 0x80]
	0x01CB975C LDP X24, X23, [X31 + 0x70]
	0x01CB9760 LDP X30, X25, [X31 + 0x60]
	0x01CB9764 LDP D9, D8, [X31 + 0x50]
	0x01CB9768 LDP D11, D10, [X31 + 0x40]
	0x01CB976C LDP D13, D12, [X31 + 0x30]
	0x01CB9770 LDP D15, D14, [X31 + 0x20]
	0x01CB9774 ADD X31, X31, 0xA0
	0x01CB9778 RET
	0x01CB977C BL 0x1B6EA1C
	0x01CB9780 STP X30, X21, [X31 - 0x20]!
	0x01CB9784 STP X20, X19, [X31 + 0x10]
	0x01CB9788 ADRP X20, 0x256A000
	0x01CB978C ADRP X21, 0x2295000
	0x01CB9790 LDRB W8, [X20 + 0x4FD]
	0x01CB9794 LDR X21, [X21 + 0xF70]
	0x01CB9798 MOV X19, X0
	0x01CB979C TBNZ X8, 0x0, 0x1CB97B4
	0x01CB97A0 ADRP X0, 0x2295000
	0x01CB97A4 LDR X0, [X0 + 0xF70]
	0x01CB97A8 BL 0x1B6E7F0
	0x01CB97AC MOVZ W8, 0x1
	0x01CB97B0 STRB W8, [X20 + 0x4FD]
	0x01CB97B4 LDR X8, [X21]
	0x01CB97B8 MOV X0, X19
	0x01CB97BC MOV X1, X31
	0x01CB97C0 STR X8, [X19 + 0xF0]
	0x01CB97C4 LDP X20, X19, [X31 + 0x10]
	0x01CB97C8 LDP X30, X21, [X31], #0x20
	0x01CB97CC B 0x1D661D8
	0x01CB97D0 STR X30, [X31 - 0x30]!
	0x01CB97D4 STP X22, X21, [X31 + 0x10]
	0x01CB97D8 STP X20, X19, [X31 + 0x20]
	0x01CB97DC ADRP X21, 0x256A000
	0x01CB97E0 ADRP X22, 0x2295000
	0x01CB97E4 ADRP X19, 0x2295000
	0x01CB97E8 ADRP X20, 0x2295000
	0x01CB97EC LDRB W8, [X21 + 0x4FE]
	0x01CB97F0 LDR X22, [X22 + 0xFB0]
	0x01CB97F4 LDR X19, [X19 + 0xFB8]
	0x01CB97F8 LDR X20, [X20 + 0x2A8]
	0x01CB97FC TBNZ X8, 0x0, 0x1CB982C
	0x01CB9800 ADRP X0, 0x2295000
	0x01CB9804 LDR X0, [X0 + 0xFB8]
	0x01CB9808 BL 0x1B6E7F0
	0x01CB980C ADRP X0, 0x2295000
	0x01CB9810 LDR X0, [X0 + 0xFB0]
	0x01CB9814 BL 0x1B6E7F0
	0x01CB9818 ADRP X0, 0x2295000
	0x01CB981C LDR X0, [X0 + 0x2A8]
	0x01CB9820 BL 0x1B6E7F0
	0x01CB9824 MOVZ W8, 0x1
	0x01CB9828 STRB W8, [X21 + 0x4FE]
	0x01CB982C LDR X0, [X22]
	0x01CB9830 BL 0x1B6EA0C
	0x01CB9834 LDR X1, [X19]
	0x01CB9838 MOV X19, X0
	0x01CB983C BL 0x29608E0
	0x01CB9840 LDR X8, [X20]
	0x01CB9844 LDP X22, X21, [X31 + 0x10]
	0x01CB9848 LDR X8, [X8 + 0xB8]
	0x01CB984C STR X19, [X8]
	0x01CB9850 LDR X8, [X20]
	0x01CB9854 LDP X20, X19, [X31 + 0x20]
	0x01CB9858 LDR X8, [X8 + 0xB8]
	0x01CB985C STR X31, [X8 + 0x8]
	0x01CB9860 LDR X30, [X31], #0x30
	0x01CB9864 RET
	0x01CB9868 STP X30, X19, [X31 - 0x10]!
	0x01CB986C LDR W1, [X0 + 0xD8]
	0x01CB9870 MOV X19, X0
	0x01CB9874 BL 0x1CB5F54
	0x01CB9878 LDP S0, S1, [X19 + 0xDC]
	0x01CB987C LDP S2, S3, [X19 + 0xE4]
	0x01CB9880 MOV X0, X19
	0x01CB9884 BL 0x1CB5FB4
	0x01CB9888 LDRB W1, [X19 + 0xEC]
	0x01CB988C MOV X0, X19
	0x01CB9890 BL 0x1CB6018
	0x01CB9894 LDR X1, [X19 + 0xF0]
	0x01CB9898 MOV X0, X19
	0x01CB989C BL 0x1CB60F4
	0x01CB98A0 LDR W1, [X19 + 0xF8]
	0x01CB98A4 MOV X0, X19
	0x01CB98A8 BL 0x1CB6164
	0x01CB98AC LDR V0, [X19 + 0xFC]
	0x01CB98B0 MOV X0, X19
	0x01CB98B4 LDP X30, X19, [X31], #0x10
	0x01CB98B8 B 0x1CB6224
	0x01CB98BC STP X30, X19, [X31 - 0x10]!
	0x01CB98C0 MOV X19, X0
	0x01CB98C4 BL 0x1CB5EF4
	0x01CB98C8 STR W0, [X19 + 0xD8]
	0x01CB98CC MOV X0, X19
	0x01CB98D0 BL 0x1CB4848
	0x01CB98D4 MOV X0, X19
	0x01CB98D8 STP S0, S1, [X19 + 0xDC]
	0x01CB98DC STP S2, S3, [X19 + 0xE4]
	0x01CB98E0 BL 0x1CB47E0
	0x01CB98E4 AND W8, W0, 0x1
	0x01CB98E8 MOV X0, X19
	0x01CB98EC STRB W8, [X19 + 0xEC]
	0x01CB98F0 BL 0x1CB607C
	0x01CB98F4 STR X0, [X19 + 0xF0]
	0x01CB98F8 MOV X0, X19
	0x01CB98FC BL 0x1CB4780
	0x01CB9900 STR W0, [X19 + 0xF8]
	0x01CB9904 MOV X0, X19
	0x01CB9908 BL 0x1CB61C4
	0x01CB990C STR S0, [X19 + 0xFC]
	0x01CB9910 LDP X30, X19, [X31], #0x10
	0x01CB9914 RET
	0x01CB9918 STP X30, X21, [X31 - 0x20]!
	0x01CB991C STP X20, X19, [X31 + 0x10]
	0x01CB9920 ADRP X21, 0x256A000
	0x01CB9924 LDRB W8, [X21 + 0x4FF]
	0x01CB9928 MOV X20, X1
	0x01CB992C MOV X19, X0
	0x01CB9930 TBNZ X8, 0x0, 0x1CB9948
	0x01CB9934 ADRP X0, 0x2295000
	0x01CB9938 LDR X0, [X0 + 0x2A8]
	0x01CB993C BL 0x1B6E7F0
	0x01CB9940 MOVZ W8, 0x1
	0x01CB9944 STRB W8, [X21 + 0x4FF]
	0x01CB9948 MOVZ W0, 0x1
	0x01CB994C MOV X1, X31
	0x01CB9950 MOVZ W21, 0x1
	0x01CB9954 BL 0x1D29EBC
	0x01CB9958 CBZ X19, 0x1CB99B4
	0x01CB995C ADRP X9, 0x2295000
	0x01CB9960 LDR X9, [X9 + 0x2A8]
	0x01CB9964 LDP S0, S1, [X20 + 0x24]
	0x01CB9968 LDP S2, S3, [X20 + 0x2C]
	0x01CB996C STRB W21, [X19 + 0x58]
	0x01CB9970 LDR X8, [X19]
	0x01CB9974 LDR X1, [X9]
	0x01CB9978 LDRB W10, [X8 + 0x130]
	0x01CB997C LDRB W9, [X1 + 0x130]
	0x01CB9980 CMP W10, W9
	0x01CB9984 B.CC 0x1CB99AC
	0x01CB9988 LDR X8, [X8 + 0xC8]
	0x01CB998C ADD X8, X8, X9, 0x3, LSL
	0x01CB9990 LDUR X8, [X8 - 0x8]
	0x01CB9994 CMP X8, X1
	0x01CB9998 B.NE 0x1CB99AC
	0x01CB999C MOV X0, X19
	0x01CB99A0 LDP X20, X19, [X31 + 0x10]
	0x01CB99A4 LDP X30, X21, [X31], #0x20
	0x01CB99A8 B 0x1CB7A4C
	0x01CB99AC MOV X0, X19
	0x01CB99B0 BL 0x1B6ECDC
	0x01CB99B4 BL 0x1B6EA1C
	0x01CB99B8 STP X30, X21, [X31 - 0x20]!
	0x01CB99BC STP X20, X19, [X31 + 0x10]
	0x01CB99C0 ADRP X21, 0x256A000
	0x01CB99C4 LDRB W8, [X21 + 0x500]
	0x01CB99C8 MOV X20, X1
	0x01CB99CC MOV X19, X0
	0x01CB99D0 TBNZ X8, 0x0, 0x1CB99E8
	0x01CB99D4 ADRP X0, 0x2295000
	0x01CB99D8 LDR X0, [X0 + 0x2A8]
	0x01CB99DC BL 0x1B6E7F0
	0x01CB99E0 MOVZ W8, 0x1
	0x01CB99E4 STRB W8, [X21 + 0x500]
	0x01CB99E8 MOVZ W0, 0x1
	0x01CB99EC MOV X1, X31
	0x01CB99F0 MOVZ W21, 0x1
	0x01CB99F4 BL 0x1D29EBC
	0x01CB99F8 CBZ X19, 0x1CB9A58
	0x01CB99FC ADRP X8, 0x2295000
	0x01CB9A00 LDR X8, [X8 + 0x2A8]
	0x01CB9A04 LDR W1, [X20 + 0x24]
	0x01CB9A08 LDR V0, [X20 + 0x28]
	0x01CB9A0C STRB W21, [X19 + 0x58]
	0x01CB9A10 LDR X9, [X19]
	0x01CB9A14 LDR X8, [X8]
	0x01CB9A18 LDRB W11, [X9 + 0x130]
	0x01CB9A1C LDRB W10, [X8 + 0x130]
	0x01CB9A20 CMP W11, W10
	0x01CB9A24 B.CC 0x1CB9A4C
	0x01CB9A28 LDR X9, [X9 + 0xC8]
	0x01CB9A2C ADD X9, X9, X10, 0x3, LSL
	0x01CB9A30 LDUR X9, [X9 - 0x8]
	0x01CB9A34 CMP X9, X8
	0x01CB9A38 B.NE 0x1CB9A4C
	0x01CB9A3C MOV X0, X19
	0x01CB9A40 LDP X20, X19, [X31 + 0x10]
	0x01CB9A44 LDP X30, X21, [X31], #0x20
	0x01CB9A48 B 0x1CB74B4
	0x01CB9A4C MOV X0, X19
	0x01CB9A50 MOV X1, X8
	0x01CB9A54 BL 0x1B6ECDC
	0x01CB9A58 BL 0x1B6EA1C
	0x01CB9A5C STP X30, X21, [X31 - 0x20]!
	0x01CB9A60 STP X20, X19, [X31 + 0x10]
	0x01CB9A64 ADRP X21, 0x256A000
	0x01CB9A68 LDRB W8, [X21 + 0x501]
	0x01CB9A6C MOV X20, X1
	0x01CB9A70 MOV X19, X0
	0x01CB9A74 TBNZ X8, 0x0, 0x1CB9A8C
	0x01CB9A78 ADRP X0, 0x2295000
	0x01CB9A7C LDR X0, [X0 + 0x2A8]
	0x01CB9A80 BL 0x1B6E7F0
	0x01CB9A84 MOVZ W8, 0x1
	0x01CB9A88 STRB W8, [X21 + 0x501]
	0x01CB9A8C MOVZ W0, 0x1
	0x01CB9A90 MOV X1, X31
	0x01CB9A94 MOVZ W21, 0x1
	0x01CB9A98 BL 0x1D29EBC
	0x01CB9A9C CBZ X19, 0x1CB9AFC
	0x01CB9AA0 ADRP X10, 0x2295000
	0x01CB9AA4 LDR X10, [X10 + 0x2A8]
	0x01CB9AA8 LDR W8, [X20 + 0x24]
	0x01CB9AAC STRB W21, [X19 + 0x58]
	0x01CB9AB0 LDR X9, [X19]
	0x01CB9AB4 LDR X1, [X10]
	0x01CB9AB8 LDRB W11, [X9 + 0x130]
	0x01CB9ABC LDRB W10, [X1 + 0x130]
	0x01CB9AC0 CMP W11, W10

ISIL:
	001 Move [X31-128], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X30
	009 Move [X31+72], X25
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Move X24, 0x256B000
	017 Move W8, [X24+1273]
	018 Move X19, X4
	019 Move X20, X3
	020 Move X21, X2
	021 Move V8, V6
	022 Move V9, V5
	023 Move V10, V4
	024 Move V11, V3
	025 Move V12, V2
	026 Move V13, V1
	027 Move V14, V0
	028 Move W22, W1
	029 Move X23, X0
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {45}
	034 Move X0, 0x2296000
	035 Move X0, [X0+448]
	036 Call 0x1B6F7F0
	037 Move X0, 0x2296000
	038 Move X0, [X0+408]
	039 Call 0x1B6F7F0
	040 Move X0, 0x2296000
	041 Move X0, [X0+3992]
	042 Call 0x1B6F7F0
	043 Move W8, 1
	044 Move [X24+1273], W8
	045 Move W8, [X23+88]
	046 Compare W8, 0
	047 JumpIfEqual {113}
	048 Move [X23+88], W31
	049 Move X0, [X23+64]
	050 Compare X0, 0
	051 JumpIfEqual {322}
	052 Move X1, X31
	053 Call NetworkObject.get_HasInputAuthority, X0
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {129}
	058 Move X23, 0x2296000
	059 Move X23, [X23+408]
	060 Move X0, [X23]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1B6F8F8
	065 Move X24, 0x256B000
	066 Move W8, [X24+1103]
	067 Compare W8, 0
	068 JumpIfNotEqual {74}
	069 Move X0, 0x2296000
	070 Move X0, [X0+408]
	071 Call 0x1B6F7F0
	072 Move W8, 1
	073 Move [X24+1103], W8
	074 Move X0, [X23]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {80}
	078 Call 0x1B6F8F8
	079 Move X0, [X23]
	080 Move X8, [X0+184]
	081 Move X0, [X8]
	082 Compare X0, 0
	083 JumpIfEqual {322}
	084 Move W1, W22
	085 Move V1, V13
	086 Move V2, V12
	087 Move V3, V11
	088 Move V4, V10
	089 Move V5, V9
	090 Move V6, V8
	091 Move X2, X21
	092 Move X3, X20
	093 Move X4, X19
	094 Move X20, [X31+112]
	095 Move X19, [X31+120]
	096 Move X22, [X31+96]
	097 Move X21, [X31+104]
	098 Move X24, [X31+80]
	099 Move X23, [X31+88]
	100 Move X30, [X31+64]
	101 Move X25, [X31+72]
	102 Move D9, [X31+48]
	103 Move D8, [X31+56]
	104 Move D11, [X31+32]
	105 Move D10, [X31+40]
	106 Move D13, [X31+16]
	107 Move D12, [X31+24]
	108 Move V0, V14
	109 Move X5, X31
	110 Move V14, [X31+128]
	111 Call PlayerController.PlayerHit, X0, X1, X2, X3, X4, X5, X6
	112 Return 
	113 Move X25, 0x2296000
	114 Move X25, [X25+448]
	115 Move X0, [X25]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {120}
	119 Call 0x1B6F8F8
	120 Move X0, X23
	121 Move X1, X31
	122 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	123 Move X0, [X23+56]
	124 Compare X0, 0
	125 JumpIfEqual {322}
	126 Move X1, X31
	127 Call NetworkRunner.get_Stage, X0
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X20, [X31+112]
	130 Move X19, [X31+120]
	131 Move X22, [X31+96]
	132 Move X21, [X31+104]
	133 Move X24, [X31+80]
	134 Move X23, [X31+88]
	135 Move X30, [X31+64]
	136 Move X25, [X31+72]
	137 Move D9, [X31+48]
	138 Move D8, [X31+56]
	139 Move D11, [X31+32]
	140 Move D10, [X31+40]
	141 Move D13, [X31+16]
	142 Move D12, [X31+24]
	143 Move V14, [X31+128]
	144 Return 
	145 Move X0, [X23+64]
	146 Compare X0, 0
	147 JumpIfEqual {322}
	148 Move X1, X31
	149 Call NetworkObject.GetLocalAuthorityMask, X0
	150 And W31, W0, 7
	151 Move TEMP, X0
	152 And TEMP, TEMP, 2
	153 Compare TEMP, 2
	154 JumpIfEqual {49}
	155 Move X0, X21
	156 Move X1, X31
	157 Call ReadWriteUtilsForWeaver.GetByteCountUtf8NoHash, X0
	158 Add W8, W0, 43
	159 Move X0, X20
	160 Move X1, X31
	161 And W24, W8, 0xFFFFFFFC
	162 Call ReadWriteUtilsForWeaver.GetByteCountUtf8NoHash, X0
	163 Add W8, W0, 3
	164 And W8, W8, 0xFFFFFFFC
	165 Move X0, X19
	166 Move X1, X31
	167 Add W24, W8, W24
	168 Call ReadWriteUtilsForWeaver.GetByteCountUtf8NoHash, X0
	169 Add W8, W0, 3
	170 And W8, W8, 0xFFFFFFFC
	171 Add W24, W24, W8
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X8, [X23+56]
	174 Compare X8, 0
	175 JumpIfEqual {322}
	176 Move X0, [X8+80]
	177 Compare X0, 0
	178 JumpIfEqual {322}
	179 Move X1, X31
	180 Call Simulation.HasAnyActiveConnections, X0
	181 Move TEMP, X0
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfNotEqual {129}
	185 Move X8, [X23+56]
	186 Compare X8, 0
	187 JumpIfEqual {322}
	188 Move X0, [X8+80]
	189 Move W1, W24
	190 Move X2, X31
	191 Call SimulationMessage.Allocate, X0, X1
	192 Move X24, X0
	193 Move W0, 1
	194 Move X1, X31
	195 Call Assert.Check, X0
	196 Move X8, [X23+64]
	197 Compare X8, 0
	198 JumpIfEqual {322}
	199 Move X8, [X8+32]
	200 Add X25, X24, 28
	201 Compare X8, 0
	202 JumpIfEqual {260}
	203 Move W0, [X8]
	204 Move X0, [X25]
	205 Move X19, [X23+64]
	206 Move W8, [X0+224]
	207 Compare W8, 0
	208 JumpIfNotEqual {210}
	209 Call 0x1B6F8F8
	210 Move X8, 0x2296000
	211 Move X8, [X8+3992]
	212 Move X1, X19
	213 Move X20, [X31+112]
	214 Move X19, [X31+120]
	215 Move X22, [X31+96]
	216 Move X21, [X31+104]
	217 Move X0, [X8]
	218 Move X24, [X31+80]
	219 Move X23, [X31+88]
	220 Move X30, [X31+64]
	221 Move X25, [X31+72]
	222 Move D9, [X31+48]
	223 Move D8, [X31+56]
	224 Move D11, [X31+32]
	225 Move D10, [X31+40]
	226 Move D13, [X31+16]
	227 Move D12, [X31+24]
	228 Move W2, 7
	229 Move X3, X31
	230 Move V14, [X31+128]
	231 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	232 Return 
	233 Move X0, [X25]
	234 Move W8, [X0+224]
	235 Compare W8, 0
	236 JumpIfNotEqual {238}
	237 Call 0x1B6F8F8
	238 Move X8, 0x2296000
	239 Move X8, [X8+3992]
	240 Move W1, W24
	241 Move X20, [X31+112]
	242 Move X19, [X31+120]
	243 Move X22, [X31+96]
	244 Move X21, [X31+104]
	245 Move X0, [X8]
	246 Move X24, [X31+80]
	247 Move X23, [X31+88]
	248 Move X30, [X31+64]
	249 Move X25, [X31+72]
	250 Move D9, [X31+48]
	251 Move D8, [X31+56]
	252 Move D11, [X31+32]
	253 Move D10, [X31+40]
	254 Move D13, [X31+16]
	255 Move D12, [X31+24]
	256 Move X2, X31
	257 Move V14, [X31+128]
	258 Call NetworkBehaviourUtils.NotifyRpcPayloadSizeExceeded, X0, X1
	259 Return 
	260 Move X0, X31
	261 Move W1, [X23+104]
	262 Move W2, 5
	263 Move X3, X31
	264 Call RpcHeader.Create, X0, X1, X2
	265 Move [X24+28], X0
	266 Add X0, X24, 68
	267 Move X1, X21
	268 Move X2, X31
	269 Move [X24+36], W22
	270 Move [X24+40], S14
	271 Move [X24+48], S13
	272 Move [X24+48], S12
	273 Move [X24+56], S11
	274 Move [X24+56], S10
	275 Move [X24+64], S9
	276 Move [X24+64], S8
	277 Call ReadWriteUtilsForWeaver.WriteStringUtf8NoHash, X0, X1
	278 Add W8, W0, 43
	279 And W21, W8, 0xFFFFFFFC
	280 Add X0, X25, W21
	281 Move X1, X20
	282 Move X2, X31
	283 Call ReadWriteUtilsForWeaver.WriteStringUtf8NoHash, X0, X1
	284 Add W8, W0, 3
	285 And W8, W8, 0xFFFFFFFC
	286 Add W20, W8, W21
	287 Add X0, X25, W20
	288 Move X1, X19
	289 Move X2, X31
	290 Call ReadWriteUtilsForWeaver.WriteStringUtf8NoHash, X0, X1
	291 Compare X24, 0
	292 JumpIfEqual {322}
	293 Add W8, W0, 3
	294 And W8, W8, 0x1FFFFFFC
	295 Add W8, W20, W8
	296 Move W8, W8
	297 ShiftRight W8, 29
	298 And W8, W8, 0xFFFFFFF
	299 Move [X24+12], W8
	300 Move X0, [X23+56]
	301 Compare X0, 0
	302 JumpIfEqual {322}
	303 Move X1, X24
	304 Move X20, [X31+112]
	305 Move X19, [X31+120]
	306 Move X22, [X31+96]
	307 Move X21, [X31+104]
	308 Move X24, [X31+80]
	309 Move X23, [X31+88]
	310 Move X30, [X31+64]
	311 Move X25, [X31+72]
	312 Move D9, [X31+48]
	313 Move D8, [X31+56]
	314 Move D11, [X31+32]
	315 Move D10, [X31+40]
	316 Move D13, [X31+16]
	317 Move D12, [X31+24]
	318 Move X2, X31
	319 Move V14, [X31+128]
	320 Call NetworkRunner.SendRpc, X0, X1
	321 Return 
	322 Call 0x1B6FA1C

Method: System.Void RPC_PlayerHit(System.Int32 damage, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, System.String hitSound, System.String killSound, UnityEngine.Vector3 force, System.String hitName)

Disassembly:
	0x01CB9AC4 B.CC 0x1CB9AF4
	0x01CB9AC8 LDR X9, [X9 + 0xC8]
	0x01CB9ACC ADD X9, X9, X10, 0x3, LSL
	0x01CB9AD0 LDUR X9, [X9 - 0x8]
	0x01CB9AD4 CMP X9, X1
	0x01CB9AD8 B.NE 0x1CB9AF4
	0x01CB9ADC MOV X0, X19
	0x01CB9AE0 LDP X20, X19, [X31 + 0x10]
	0x01CB9AE4 CMP W8, 0x0
	0x01CB9AE8 CSET W1, NE
	0x01CB9AEC LDP X30, X21, [X31], #0x20
	0x01CB9AF0 B 0x1CB76A8
	0x01CB9AF4 MOV X0, X19
	0x01CB9AF8 BL 0x1B6ECDC
	0x01CB9AFC BL 0x1B6EA1C
	0x01CB9B00 STP X30, X21, [X31 - 0x20]!
	0x01CB9B04 STP X20, X19, [X31 + 0x10]
	0x01CB9B08 ADRP X21, 0x256A000
	0x01CB9B0C LDRB W8, [X21 + 0x502]
	0x01CB9B10 MOV X20, X1
	0x01CB9B14 MOV X19, X0
	0x01CB9B18 TBNZ X8, 0x0, 0x1CB9B30
	0x01CB9B1C ADRP X0, 0x2295000
	0x01CB9B20 LDR X0, [X0 + 0x2A8]
	0x01CB9B24 BL 0x1B6E7F0
	0x01CB9B28 MOVZ W8, 0x1
	0x01CB9B2C STRB W8, [X21 + 0x502]
	0x01CB9B30 MOVZ W0, 0x1
	0x01CB9B34 MOV X1, X31
	0x01CB9B38 MOVZ W21, 0x1
	0x01CB9B3C BL 0x1D29EBC
	0x01CB9B40 CBZ X19, 0x1CB9B98
	0x01CB9B44 ADRP X9, 0x2295000
	0x01CB9B48 LDR X9, [X9 + 0x2A8]
	0x01CB9B4C LDR V0, [X20 + 0x24]
	0x01CB9B50 STRB W21, [X19 + 0x58]
	0x01CB9B54 LDR X8, [X19]
	0x01CB9B58 LDR X1, [X9]
	0x01CB9B5C LDRB W10, [X8 + 0x130]
	0x01CB9B60 LDRB W9, [X1 + 0x130]
	0x01CB9B64 CMP W10, W9
	0x01CB9B68 B.CC 0x1CB9B90
	0x01CB9B6C LDR X8, [X8 + 0xC8]
	0x01CB9B70 ADD X8, X8, X9, 0x3, LSL
	0x01CB9B74 LDUR X8, [X8 - 0x8]
	0x01CB9B78 CMP X8, X1
	0x01CB9B7C B.NE 0x1CB9B90
	0x01CB9B80 MOV X0, X19
	0x01CB9B84 LDP X20, X19, [X31 + 0x10]
	0x01CB9B88 LDP X30, X21, [X31], #0x20
	0x01CB9B8C B 0x1CB7C28
	0x01CB9B90 MOV X0, X19
	0x01CB9B94 BL 0x1B6ECDC
	0x01CB9B98 BL 0x1B6EA1C
	0x01CB9B9C SUB X31, X31, 0x80
	0x01CB9BA0 STR D14, [X31 + 0x10]
	0x01CB9BA4 STP D13, D12, [X31 + 0x20]
	0x01CB9BA8 STP D11, D10, [X31 + 0x30]
	0x01CB9BAC STP D9, D8, [X31 + 0x40]
	0x01CB9BB0 STP X30, X23, [X31 + 0x50]
	0x01CB9BB4 STP X22, X21, [X31 + 0x60]
	0x01CB9BB8 STP X20, X19, [X31 + 0x70]
	0x01CB9BBC ADRP X20, 0x256A000
	0x01CB9BC0 LDRB W8, [X20 + 0x503]
	0x01CB9BC4 MOV X21, X1
	0x01CB9BC8 MOV X19, X0
	0x01CB9BCC TBNZ X8, 0x0, 0x1CB9BE4
	0x01CB9BD0 ADRP X0, 0x2295000
	0x01CB9BD4 LDR X0, [X0 + 0x2A8]
	0x01CB9BD8 BL 0x1B6E7F0
	0x01CB9BDC MOVZ W8, 0x1
	0x01CB9BE0 STRB W8, [X20 + 0x503]
	0x01CB9BE4 MOVZ W0, 0x1
	0x01CB9BE8 MOV X1, X31
	0x01CB9BEC STR X31, [X31 + 0x18]
	0x01CB9BF0 STP X31, X31, [X31]
	0x01CB9BF4 MOVZ W22, 0x1
	0x01CB9BF8 BL 0x1D29EBC
	0x01CB9BFC LDR W20, [X21 + 0x24]
	0x01CB9C00 LDP S8, S9, [X21 + 0x28]
	0x01CB9C04 LDP S10, S11, [X21 + 0x30]
	0x01CB9C08 LDP S12, S13, [X21 + 0x38]
	0x01CB9C0C LDR V14, [X21 + 0x40]
	0x01CB9C10 ADD X0, X21, 0x44
	0x01CB9C14 ADD X1, X31, 0x18
	0x01CB9C18 MOV X2, X31
	0x01CB9C1C ADD X23, X21, 0x1C
	0x01CB9C20 BL 0x1D816CC
	0x01CB9C24 ADD W8, W0, 0x2B
	0x01CB9C28 AND W21, W8, 0xFFFFFFFC
	0x01CB9C2C ADD X0, X23, W21, SXTW
	0x01CB9C30 ADD X1, X31, 0x8
	0x01CB9C34 MOV X2, X31
	0x01CB9C38 BL 0x1D816CC
	0x01CB9C3C ADD W8, W0, 0x3
	0x01CB9C40 AND W8, W8, 0xFFFFFFFC
	0x01CB9C44 ADD W8, W8, W21
	0x01CB9C48 ADD X0, X23, W8, SXTW
	0x01CB9C4C ADD X1, X31, 0x0
	0x01CB9C50 MOV X2, X31
	0x01CB9C54 BL 0x1D816CC
	0x01CB9C58 CBZ X19, 0x1CB9CF0
	0x01CB9C5C ADRP X9, 0x2295000
	0x01CB9C60 LDR X9, [X9 + 0x2A8]
	0x01CB9C64 STRB W22, [X19 + 0x58]
	0x01CB9C68 LDR X8, [X19]
	0x01CB9C6C LDR X1, [X9]
	0x01CB9C70 LDRB W10, [X8 + 0x130]
	0x01CB9C74 LDRB W9, [X1 + 0x130]
	0x01CB9C78 CMP W10, W9
	0x01CB9C7C B.CC 0x1CB9CE8
	0x01CB9C80 LDR X8, [X8 + 0xC8]
	0x01CB9C84 ADD X8, X8, X9, 0x3, LSL
	0x01CB9C88 LDUR X8, [X8 - 0x8]
	0x01CB9C8C CMP X8, X1
	0x01CB9C90 B.NE 0x1CB9CE8
	0x01CB9C94 LDR X2, [X31 + 0x18]
	0x01CB9C98 LDP X4, X3, [X31]
	0x01CB9C9C MOV X0, X19
	0x01CB9CA0 MOV W1, W20
	0x01CB9CA4 MOV V0.16B, V8.16B
	0x01CB9CA8 MOV V1.16B, V9.16B
	0x01CB9CAC MOV V2.16B, V10.16B
	0x01CB9CB0 MOV V3.16B, V11.16B
	0x01CB9CB4 MOV V4.16B, V12.16B
	0x01CB9CB8 MOV V5.16B, V13.16B
	0x01CB9CBC MOV V6.16B, V14.16B
	0x01CB9CC0 BL 0x1CB86F0
	0x01CB9CC4 LDP X20, X19, [X31 + 0x70]
	0x01CB9CC8 LDP X22, X21, [X31 + 0x60]
	0x01CB9CCC LDP X30, X23, [X31 + 0x50]
	0x01CB9CD0 LDP D9, D8, [X31 + 0x40]
	0x01CB9CD4 LDP D11, D10, [X31 + 0x30]
	0x01CB9CD8 LDP D13, D12, [X31 + 0x20]
	0x01CB9CDC LDR V14, [X31 + 0x10]
	0x01CB9CE0 ADD X31, X31, 0x80
	0x01CB9CE4 RET
	0x01CB9CE8 MOV X0, X19
	0x01CB9CEC BL 0x1B6ECDC
	0x01CB9CF0 BL 0x1B6EA1C
	0x01CB9CF4 SUB X31, X31, 0xA0
	0x01CB9CF8 STP D15, D14, [X31 + 0x30]
	0x01CB9CFC STP D13, D12, [X31 + 0x40]
	0x01CB9D00 STP D11, D10, [X31 + 0x50]
	0x01CB9D04 STP D9, D8, [X31 + 0x60]
	0x01CB9D08 STP X30, X23, [X31 + 0x70]
	0x01CB9D0C STP X22, X21, [X31 + 0x80]
	0x01CB9D10 STP X20, X19, [X31 + 0x90]
	0x01CB9D14 ADRP X20, 0x256A000
	0x01CB9D18 LDRB W8, [X20 + 0x504]
	0x01CB9D1C MOV X21, X1
	0x01CB9D20 MOV X19, X0
	0x01CB9D24 TBNZ X8, 0x0, 0x1CB9D3C
	0x01CB9D28 ADRP X0, 0x2295000
	0x01CB9D2C LDR X0, [X0 + 0x2A8]
	0x01CB9D30 BL 0x1B6E7F0
	0x01CB9D34 MOVZ W8, 0x1
	0x01CB9D38 STRB W8, [X20 + 0x504]
	0x01CB9D3C MOVZ W0, 0x1
	0x01CB9D40 MOV X1, X31
	0x01CB9D44 STP X31, X31, [X31 + 0x20]
	0x01CB9D48 STR X31, [X31 + 0x18]
	0x01CB9D4C MOVZ W22, 0x1
	0x01CB9D50 BL 0x1D29EBC
	0x01CB9D54 LDR V1, [X21 + 0x28]
	0x01CB9D58 LDP S0, S10, [X21 + 0x2C]
	0x01CB9D5C LDR W20, [X21 + 0x24]
	0x01CB9D60 LDP S11, S12, [X21 + 0x34]
	0x01CB9D64 LDP S13, S14, [X21 + 0x3C]
	0x01CB9D68 ADD X0, X21, 0x44
	0x01CB9D6C ADD X1, X31, 0x28
	0x01CB9D70 MOV X2, X31
	0x01CB9D74 STP S0, S1, [X31 + 0x10]
	0x01CB9D78 ADD X23, X21, 0x1C
	0x01CB9D7C BL 0x1D816CC
	0x01CB9D80 ADD W8, W0, 0x2B
	0x01CB9D84 AND W21, W8, 0xFFFFFFFC
	0x01CB9D88 ADD X0, X23, W21, SXTW
	0x01CB9D8C ADD X1, X31, 0x20
	0x01CB9D90 MOV X2, X31
	0x01CB9D94 BL 0x1D816CC
	0x01CB9D98 ADD W8, W0, 0x3
	0x01CB9D9C AND W8, W8, 0xFFFFFFFC
	0x01CB9DA0 ADD W8, W8, W21
	0x01CB9DA4 ADD X9, X23, W8, SXTW
	0x01CB9DA8 LDP S15, S8, [X9]
	0x01CB9DAC LDR V9, [X9 + 0x8]
	0x01CB9DB0 ADD W8, W8, 0xC
	0x01CB9DB4 ADD X0, X23, W8, SXTW
	0x01CB9DB8 ADD X1, X31, 0x18
	0x01CB9DBC MOV X2, X31
	0x01CB9DC0 BL 0x1D816CC
	0x01CB9DC4 CBZ X19, 0x1CB9E60
	0x01CB9DC8 ADRP X9, 0x2295000
	0x01CB9DCC LDR X9, [X9 + 0x2A8]
	0x01CB9DD0 STRB W22, [X19 + 0x58]
	0x01CB9DD4 LDR X8, [X19]
	0x01CB9DD8 LDR X1, [X9]
	0x01CB9DDC LDRB W10, [X8 + 0x130]
	0x01CB9DE0 LDRB W9, [X1 + 0x130]
	0x01CB9DE4 CMP W10, W9
	0x01CB9DE8 B.CC 0x1CB9E58
	0x01CB9DEC LDR X8, [X8 + 0xC8]
	0x01CB9DF0 ADD X8, X8, X9, 0x3, LSL
	0x01CB9DF4 LDUR X8, [X8 - 0x8]
	0x01CB9DF8 CMP X8, X1
	0x01CB9DFC B.NE 0x1CB9E58
	0x01CB9E00 LDP X3, X2, [X31 + 0x20]
	0x01CB9E04 LDR X4, [X31 + 0x18]
	0x01CB9E08 LDP S1, S0, [X31 + 0x10]
	0x01CB9E0C MOV X0, X19
	0x01CB9E10 MOV W1, W20
	0x01CB9E14 MOV V2.16B, V10.16B
	0x01CB9E18 MOV V3.16B, V11.16B
	0x01CB9E1C MOV V4.16B, V12.16B
	0x01CB9E20 MOV V5.16B, V13.16B
	0x01CB9E24 MOV V6.16B, V14.16B
	0x01CB9E28 STP S8, S9, [X31 + 0x4]
	0x01CB9E2C STR S15, [X31]
	0x01CB9E30 BL 0x1CB8AC4
	0x01CB9E34 LDP X20, X19, [X31 + 0x90]
	0x01CB9E38 LDP X22, X21, [X31 + 0x80]
	0x01CB9E3C LDP X30, X23, [X31 + 0x70]
	0x01CB9E40 LDP D9, D8, [X31 + 0x60]
	0x01CB9E44 LDP D11, D10, [X31 + 0x50]
	0x01CB9E48 LDP D13, D12, [X31 + 0x40]
	0x01CB9E4C LDP D15, D14, [X31 + 0x30]
	0x01CB9E50 ADD X31, X31, 0xA0
	0x01CB9E54 RET
	0x01CB9E58 MOV X0, X19
	0x01CB9E5C BL 0x1B6ECDC
	0x01CB9E60 BL 0x1B6EA1C
	0x01CB9E64 SUB X31, X31, 0x80
	0x01CB9E68 STR D14, [X31 + 0x10]
	0x01CB9E6C STP D13, D12, [X31 + 0x20]
	0x01CB9E70 STP D11, D10, [X31 + 0x30]
	0x01CB9E74 STP D9, D8, [X31 + 0x40]
	0x01CB9E78 STP X30, X23, [X31 + 0x50]
	0x01CB9E7C STP X22, X21, [X31 + 0x60]
	0x01CB9E80 STP X20, X19, [X31 + 0x70]
	0x01CB9E84 ADRP X20, 0x256A000
	0x01CB9E88 LDRB W8, [X20 + 0x505]
	0x01CB9E8C MOV X21, X1
	0x01CB9E90 MOV X19, X0
	0x01CB9E94 TBNZ X8, 0x0, 0x1CB9EAC
	0x01CB9E98 ADRP X0, 0x2295000
	0x01CB9E9C LDR X0, [X0 + 0x2A8]
	0x01CB9EA0 BL 0x1B6E7F0
	0x01CB9EA4 MOVZ W8, 0x1
	0x01CB9EA8 STRB W8, [X20 + 0x505]
	0x01CB9EAC MOVZ W0, 0x1
	0x01CB9EB0 MOV X1, X31
	0x01CB9EB4 STR X31, [X31 + 0x18]
	0x01CB9EB8 STP X31, X31, [X31]
	0x01CB9EBC MOVZ W22, 0x1
	0x01CB9EC0 BL 0x1D29EBC
	0x01CB9EC4 LDR W20, [X21 + 0x24]
	0x01CB9EC8 LDP S8, S9, [X21 + 0x28]
	0x01CB9ECC LDP S10, S11, [X21 + 0x30]
	0x01CB9ED0 LDP S12, S13, [X21 + 0x38]
	0x01CB9ED4 LDR V14, [X21 + 0x40]
	0x01CB9ED8 ADD X0, X21, 0x44
	0x01CB9EDC ADD X1, X31, 0x18
	0x01CB9EE0 MOV X2, X31
	0x01CB9EE4 ADD X23, X21, 0x1C

ISIL:
	001 Move [X31-144], D15
	002 Move [X31-136], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+80], X26
	011 Move [X31+88], X25
	012 Move [X31+96], X24
	013 Move [X31+104], X23
	014 Move [X31+112], X22
	015 Move [X31+120], X21
	016 Move [X31+128], X20
	017 Move [X31+136], X19
	018 Move X24, 0x256B000
	019 Move V14, V0
	020 Move V7, [X31+152]
	021 Move W8, [X24+1274]
	022 Move S15, [X31+144]
	023 Move S0, [X31+148]
	024 Move X19, X4
	025 Move X20, X3
	026 Move X21, X2
	027 Move V8, V6
	028 Move V9, V5
	029 Move V10, V4
	030 Move V11, V3
	031 Move V12, V2
	032 Move V13, V1
	033 Move W22, W1
	034 Move X23, X0
	035 Move [X31+72], S0
	036 Move [X31+80], S7
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {52}
	041 Move X0, 0x2296000
	042 Move X0, [X0+448]
	043 Call 0x1B6F7F0
	044 Move X0, 0x2296000
	045 Move X0, [X0+408]
	046 Call 0x1B6F7F0
	047 Move X0, 0x2296000
	048 Move X0, [X0+4000]
	049 Call 0x1B6F7F0
	050 Move W8, 1
	051 Move [X24+1274], W8
	052 Move W8, [X23+88]
	053 Compare W8, 0
	054 JumpIfEqual {127}
	055 Move [X23+88], W31
	056 Move X0, [X23+64]
	057 Compare X0, 0
	058 JumpIfEqual {352}
	059 Move X1, X31
	060 Call NetworkObject.get_HasInputAuthority, X0
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {143}
	065 Move X23, 0x2296000
	066 Move X23, [X23+408]
	067 Move X0, [X23]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1B6F8F8
	072 Move X24, 0x256B000
	073 Move W8, [X24+1103]
	074 Compare W8, 0
	075 JumpIfNotEqual {81}
	076 Move X0, 0x2296000
	077 Move X0, [X0+408]
	078 Call 0x1B6F7F0
	079 Move W8, 1
	080 Move [X24+1103], W8
	081 Move X0, [X23]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {87}
	085 Call 0x1B6F8F8
	086 Move X0, [X23]
	087 Move X8, [X0+184]
	088 Move X0, [X8]
	089 Compare X0, 0
	090 JumpIfEqual {352}
	091 Move V0, [X31+72]
	092 Move W1, W22
	093 Move V1, V13
	094 Move V2, V12
	095 Move [X31+144], S15
	096 Move [X31+152], S0
	097 Move V0, [X31+76]
	098 Move V3, V11
	099 Move V4, V10
	100 Move V5, V9
	101 Move V6, V8
	102 Move X2, X21
	103 Move X3, X20
	104 Move X4, X19
	105 Move X20, [X31+128]
	106 Move X19, [X31+136]
	107 Move X22, [X31+112]
	108 Move X21, [X31+120]
	109 Move X24, [X31+96]
	110 Move X23, [X31+104]
	111 Move X26, [X31+80]
	112 Move X25, [X31+88]
	113 Move X30, [X31+64]
	114 Move D9, [X31+48]
	115 Move D8, [X31+56]
	116 Move D11, [X31+32]
	117 Move D10, [X31+40]
	118 Move D13, [X31+16]
	119 Move D12, [X31+24]
	120 Move [X31+152], S0
	121 Move V0, V14
	122 Move X5, X31
	123 Move D15, [X31+144]
	124 Move D14, [X31+152]
	125 Call PlayerController.PlayerHit, X0, X1, X2, X3, X4, X5, X6, X7
	126 Return 
	127 Move X25, 0x2296000
	128 Move X25, [X25+448]
	129 Move X0, [X25]
	130 Move W8, [X0+224]
	131 Compare W8, 0
	132 JumpIfNotEqual {134}
	133 Call 0x1B6F8F8
	134 Move X0, X23
	135 Move X1, X31
	136 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	137 Move X0, [X23+56]
	138 Compare X0, 0
	139 JumpIfEqual {352}
	140 Move X1, X31
	141 Call NetworkRunner.get_Stage, X0
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move X20, [X31+128]
	144 Move X19, [X31+136]
	145 Move X22, [X31+112]
	146 Move X21, [X31+120]
	147 Move X24, [X31+96]
	148 Move X23, [X31+104]
	149 Move X26, [X31+80]
	150 Move X25, [X31+88]
	151 Move X30, [X31+64]
	152 Move D9, [X31+48]
	153 Move D8, [X31+56]
	154 Move D11, [X31+32]
	155 Move D10, [X31+40]
	156 Move D13, [X31+16]
	157 Move D12, [X31+24]
	158 Move D15, [X31+144]
	159 Move D14, [X31+152]
	160 Return 
	161 Move X0, [X23+64]
	162 Compare X0, 0
	163 JumpIfEqual {352}
	164 Move X1, X31
	165 Call NetworkObject.GetLocalAuthorityMask, X0
	166 And W31, W0, 7
	167 Move TEMP, X0
	168 And TEMP, TEMP, 2
	169 Compare TEMP, 2
	170 JumpIfEqual {56}
	171 Move X0, X21
	172 Move X1, X31
	173 Call ReadWriteUtilsForWeaver.GetByteCountUtf8NoHash, X0
	174 Move W24, W0
	175 Move X0, X20
	176 Move X1, X31
	177 Call ReadWriteUtilsForWeaver.GetByteCountUtf8NoHash, X0
	178 Add W8, W0, 3
	179 Move X0, X19
	180 Move X1, X31
	181 And W26, W8, 0xFFFFFFFC
	182 Call ReadWriteUtilsForWeaver.GetByteCountUtf8NoHash, X0
	183 Add W9, W24, 55
	184 Add W8, W0, 3
	185 And W9, W9, 0xFFFFFFFC
	186 And W8, W8, 0xFFFFFFFC
	187 Add W9, W9, W26
	188 Add W24, W9, W8
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move X8, [X23+56]
	191 Compare X8, 0
	192 JumpIfEqual {352}
	193 Move X0, [X8+80]
	194 Compare X0, 0
	195 JumpIfEqual {352}
	196 Move X1, X31
	197 Call Simulation.HasAnyActiveConnections, X0
	198 Move TEMP, X0
	199 And TEMP, TEMP, 1
	200 Compare TEMP, 1
	201 JumpIfNotEqual {143}
	202 Move X8, [X23+56]
	203 Compare X8, 0
	204 JumpIfEqual {352}
	205 Move X0, [X8+80]
	206 Move W1, W24
	207 Move X2, X31
	208 Call SimulationMessage.Allocate, X0, X1
	209 Move X24, X0
	210 Move W0, 1
	211 Move X1, X31
	212 Call Assert.Check, X0
	213 Move X8, [X23+64]
	214 Compare X8, 0
	215 JumpIfEqual {352}
	216 Move X8, [X8+32]
	217 Add X25, X24, 28
	218 Compare X8, 0
	219 JumpIfEqual {281}
	220 Move W0, [X8]
	221 Move X0, [X25]
	222 Move X19, [X23+64]
	223 Move W8, [X0+224]
	224 Compare W8, 0
	225 JumpIfNotEqual {227}
	226 Call 0x1B6F8F8
	227 Move X8, 0x2296000
	228 Move X8, [X8+4000]
	229 Move X1, X19
	230 Move X20, [X31+128]
	231 Move X19, [X31+136]
	232 Move X22, [X31+112]
	233 Move X21, [X31+120]
	234 Move X0, [X8]
	235 Move X24, [X31+96]
	236 Move X23, [X31+104]
	237 Move X26, [X31+80]
	238 Move X25, [X31+88]
	239 Move X30, [X31+64]
	240 Move D9, [X31+48]
	241 Move D8, [X31+56]
	242 Move D11, [X31+32]
	243 Move D10, [X31+40]
	244 Move D13, [X31+16]
	245 Move D12, [X31+24]
	246 Move W2, 7
	247 Move X3, X31
	248 Move D15, [X31+144]
	249 Move D14, [X31+152]
	250 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	251 Return 
	252 Move X0, [X25]
	253 Move W8, [X0+224]
	254 Compare W8, 0
	255 JumpIfNotEqual {257}
	256 Call 0x1B6F8F8
	257 Move X8, 0x2296000
	258 Move X8, [X8+4000]
	259 Move W1, W24
	260 Move X20, [X31+128]
	261 Move X19, [X31+136]
	262 Move X22, [X31+112]
	263 Move X21, [X31+120]
	264 Move X0, [X8]
	265 Move X24, [X31+96]
	266 Move X23, [X31+104]
	267 Move X26, [X31+80]
	268 Move X25, [X31+88]
	269 Move X30, [X31+64]
	270 Move D9, [X31+48]
	271 Move D8, [X31+56]
	272 Move D11, [X31+32]
	273 Move D10, [X31+40]
	274 Move D13, [X31+16]
	275 Move D12, [X31+24]
	276 Move X2, X31
	277 Move D15, [X31+144]
	278 Move D14, [X31+152]
	279 Call NetworkBehaviourUtils.NotifyRpcPayloadSizeExceeded, X0, X1
	280 Return 
	281 Move X0, X31
	282 Move W1, [X23+104]
	283 Move W2, 6
	284 Move X3, X31
	285 Call RpcHeader.Create, X0, X1, X2
	286 Move [X24+28], X0
	287 Add X0, X24, 68
	288 Move X1, X21
	289 Move X2, X31
	290 Move [X24+36], W22
	291 Move [X24+40], S14
	292 Move [X24+48], S13
	293 Move [X24+48], S12
	294 Move [X24+56], S11
	295 Move [X24+56], S10
	296 Move [X24+64], S9
	297 Move [X24+64], S8
	298 Call ReadWriteUtilsForWeaver.WriteStringUtf8NoHash, X0, X1
	299 Add W8, W0, 43
	300 And W21, W8, 0xFFFFFFFC
	301 Add X0, X25, W21
	302 Move X1, X20
	303 Move X2, X31
	304 Call ReadWriteUtilsForWeaver.WriteStringUtf8NoHash, X0, X1
	305 Add W8, W0, 3
	306 Move V0, [X31+72]
	307 And W8, W8, 0xFFFFFFFC
	308 Add W8, W8, W21
	309 Add X9, X25, W8
	310 Move [X9], S15
	311 Move [X9+8], S0
	312 Move V0, [X31+76]
	313 Add W20, W8, 12
	314 Add X0, X25, W20
	315 Move X1, X19
	316 Move X2, X31
	317 Move [X9+8], S0
	318 Call ReadWriteUtilsForWeaver.WriteStringUtf8NoHash, X0, X1
	319 Compare X24, 0
	320 JumpIfEqual {352}
	321 Add W8, W0, 3
	322 And W8, W8, 0x1FFFFFFC
	323 Add W8, W8, W20
	324 Move W8, W8
	325 ShiftRight W8, 29
	326 And W8, W8, 0xFFFFFFF
	327 Move [X24+12], W8
	328 Move X0, [X23+56]
	329 Compare X0, 0
	330 JumpIfEqual {352}
	331 Move X1, X24
	332 Move X20, [X31+128]
	333 Move X19, [X31+136]
	334 Move X22, [X31+112]
	335 Move X21, [X31+120]
	336 Move X24, [X31+96]
	337 Move X23, [X31+104]
	338 Move X26, [X31+80]
	339 Move X25, [X31+88]
	340 Move X30, [X31+64]
	341 Move D9, [X31+48]
	342 Move D8, [X31+56]
	343 Move D11, [X31+32]
	344 Move D10, [X31+40]
	345 Move D13, [X31+16]
	346 Move D12, [X31+24]
	347 Move X2, X31
	348 Move D15, [X31+144]
	349 Move D14, [X31+152]
	350 Call NetworkRunner.SendRpc, X0, X1
	351 Return 
	352 Call 0x1B6FA1C

Method: System.Void RPC_PlayerHit(System.Int32 damage, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, System.String hitSound, System.String killSound, AnimalCompany.PrefabGenerator/PrefabType prefabType, System.String hitName)

Disassembly:
	0x01CB9EE8 BL 0x1D816CC
	0x01CB9EEC ADD W8, W0, 0x2B
	0x01CB9EF0 AND W21, W8, 0xFFFFFFFC
	0x01CB9EF4 ADD X0, X23, W21, SXTW
	0x01CB9EF8 ADD X1, X31, 0x8
	0x01CB9EFC MOV X2, X31
	0x01CB9F00 BL 0x1D816CC
	0x01CB9F04 ADD W8, W0, 0x3
	0x01CB9F08 AND W8, W8, 0xFFFFFFFC
	0x01CB9F0C ADD W8, W8, W21
	0x01CB9F10 LDR W21, [X23, W8, SXTW]
	0x01CB9F14 ADD W8, W8, 0x4
	0x01CB9F18 ADD X0, X23, W8, SXTW
	0x01CB9F1C ADD X1, X31, 0x0
	0x01CB9F20 MOV X2, X31
	0x01CB9F24 BL 0x1D816CC
	0x01CB9F28 CBZ X19, 0x1CB9FC4
	0x01CB9F2C ADRP X9, 0x2295000
	0x01CB9F30 LDR X9, [X9 + 0x2A8]
	0x01CB9F34 STRB W22, [X19 + 0x58]
	0x01CB9F38 LDR X8, [X19]
	0x01CB9F3C LDR X1, [X9]
	0x01CB9F40 LDRB W10, [X8 + 0x130]
	0x01CB9F44 LDRB W9, [X1 + 0x130]
	0x01CB9F48 CMP W10, W9
	0x01CB9F4C B.CC 0x1CB9FBC
	0x01CB9F50 LDR X8, [X8 + 0xC8]
	0x01CB9F54 ADD X8, X8, X9, 0x3, LSL
	0x01CB9F58 LDUR X8, [X8 - 0x8]
	0x01CB9F5C CMP X8, X1
	0x01CB9F60 B.NE 0x1CB9FBC
	0x01CB9F64 LDR X2, [X31 + 0x18]
	0x01CB9F68 LDP X5, X3, [X31]
	0x01CB9F6C MOV X0, X19
	0x01CB9F70 MOV W1, W20
	0x01CB9F74 MOV V0.16B, V8.16B
	0x01CB9F78 MOV V1.16B, V9.16B
	0x01CB9F7C MOV V2.16B, V10.16B
	0x01CB9F80 MOV V3.16B, V11.16B
	0x01CB9F84 MOV V4.16B, V12.16B
	0x01CB9F88 MOV V5.16B, V13.16B
	0x01CB9F8C MOV V6.16B, V14.16B
	0x01CB9F90 MOV W4, W21
	0x01CB9F94 BL 0x1CB8EE8
	0x01CB9F98 LDP X20, X19, [X31 + 0x70]
	0x01CB9F9C LDP X22, X21, [X31 + 0x60]
	0x01CB9FA0 LDP X30, X23, [X31 + 0x50]
	0x01CB9FA4 LDP D9, D8, [X31 + 0x40]
	0x01CB9FA8 LDP D11, D10, [X31 + 0x30]
	0x01CB9FAC LDP D13, D12, [X31 + 0x20]
	0x01CB9FB0 LDR V14, [X31 + 0x10]
	0x01CB9FB4 ADD X31, X31, 0x80
	0x01CB9FB8 RET
	0x01CB9FBC MOV X0, X19
	0x01CB9FC0 BL 0x1B6ECDC
	0x01CB9FC4 BL 0x1B6EA1C
	0x01CB9FC8 STR X30, [X31 - 0x20]!
	0x01CB9FCC STP X20, X19, [X31 + 0x10]
	0x01CB9FD0 ADRP X19, 0x256A000
	0x01CB9FD4 ADRP X20, 0x2295000
	0x01CB9FD8 LDRB W8, [X19 + 0x514]
	0x01CB9FDC LDR X20, [X20 + 0x828]
	0x01CB9FE0 TBNZ X8, 0x0, 0x1CB9FF8
	0x01CB9FE4 ADRP X0, 0x2295000
	0x01CB9FE8 LDR X0, [X0 + 0x828]
	0x01CB9FEC BL 0x1B6E7F0
	0x01CB9FF0 MOVZ W8, 0x1
	0x01CB9FF4 STRB W8, [X19 + 0x514]
	0x01CB9FF8 LDR X0, [X20]
	0x01CB9FFC BL 0x1B6EA0C
	0x01CBA000 MOV X1, X31
	0x01CBA004 MOV X19, X0
	0x01CBA008 BL 0x32276F8
	0x01CBA00C LDR X8, [X20]
	0x01CBA010 LDR X8, [X8 + 0xB8]
	0x01CBA014 STR X19, [X8]
	0x01CBA018 LDP X20, X19, [X31 + 0x10]
	0x01CBA01C LDR X30, [X31], #0x20
	0x01CBA020 RET
	0x01CBA024 MOV X1, X31
	0x01CBA028 B 0x32276F8
	0x01CBA02C STP X30, X21, [X31 - 0x20]!
	0x01CBA030 STP X20, X19, [X31 + 0x10]
	0x01CBA034 ADRP X20, 0x2569000
	0x01CBA038 ADRP X21, 0x2293000
	0x01CBA03C LDRB W8, [X20 + 0x515]
	0x01CBA040 LDR X21, [X21 + 0x478]
	0x01CBA044 MOV X19, X1
	0x01CBA048 TBNZ X8, 0x0, 0x1CBA060
	0x01CBA04C ADRP X0, 0x2293000
	0x01CBA050 LDR X0, [X0 + 0x478]
	0x01CBA054 BL 0x1B6E7F0
	0x01CBA058 MOVZ W8, 0x1
	0x01CBA05C STRB W8, [X20 + 0x515]
	0x01CBA060 LDR X0, [X21]
	0x01CBA064 LDR W8, [X0 + 0xE0]
	0x01CBA068 CBNZ W8, 0x1CBA070
	0x01CBA06C BL 0x1B6E8F8
	0x01CBA070 MOV X0, X19
	0x01CBA074 MOV X1, X31
	0x01CBA078 MOV X2, X31
	0x01CBA07C BL 0x3A9D6EC
	0x01CBA080 TBZ X0, 0x0, 0x1CBA09C
	0x01CBA084 CBZ X19, 0x1CBA0AC
	0x01CBA088 MOV X0, X19
	0x01CBA08C LDP X20, X19, [X31 + 0x10]
	0x01CBA090 MOV X1, X31
	0x01CBA094 LDP X30, X21, [X31], #0x20
	0x01CBA098 B 0x1CAE940
	0x01CBA09C LDP X20, X19, [X31 + 0x10]
	0x01CBA0A0 MOV W0, W31
	0x01CBA0A4 LDP X30, X21, [X31], #0x20
	0x01CBA0A8 RET
	0x01CBA0AC BL 0x1B6EA1C
	0x01CBA0B0 STR X30, [X31 - 0x20]!
	0x01CBA0B4 STP X20, X19, [X31 + 0x10]
	0x01CBA0B8 MOV W19, W1
	0x01CBA0BC MOV X1, X31
	0x01CBA0C0 MOV X20, X0
	0x01CBA0C4 BL 0x32276F8
	0x01CBA0C8 STR W19, [X20 + 0x10]
	0x01CBA0CC LDP X20, X19, [X31 + 0x10]
	0x01CBA0D0 LDR X30, [X31], #0x20
	0x01CBA0D4 RET
	0x01CBA0D8 RET
	0x01CBA0DC STR D8, [X31 - 0x30]!
	0x01CBA0E0 STR X30, [X31 + 0x8]
	0x01CBA0E4 STP X22, X21, [X31 + 0x10]
	0x01CBA0E8 STP X20, X19, [X31 + 0x20]
	0x01CBA0EC ADRP X20, 0x2569000
	0x01CBA0F0 LDRB W8, [X20 + 0x516]
	0x01CBA0F4 MOV X19, X0
	0x01CBA0F8 TBNZ X8, 0x0, 0x1CBA11C
	0x01CBA0FC ADRP X0, 0x2293000
	0x01CBA100 LDR X0, [X0 + 0x478]
	0x01CBA104 BL 0x1B6E7F0
	0x01CBA108 ADRP X0, 0x2294000
	0x01CBA10C LDR X0, [X0 + 0xFC0]
	0x01CBA110 BL 0x1B6E7F0
	0x01CBA114 MOVZ W8, 0x1
	0x01CBA118 STRB W8, [X20 + 0x516]
	0x01CBA11C LDR W8, [X19 + 0x10]
	0x01CBA120 LDR X22, [X19 + 0x20]
	0x01CBA124 CMP W8, 0x1
	0x01CBA128 B.EQ 0x1CBA154
	0x01CBA12C CBNZ W8, 0x1CBA260
	0x01CBA130 MOVN W8, 0x0
	0x01CBA134 STR W8, [X19 + 0x10]
	0x01CBA138 ADRP X8, 0x2294000
	0x01CBA13C LDR X8, [X8 + 0xFC0]
	0x01CBA140 MOVZ W1, 0x100
	0x01CBA144 LDR X0, [X8]
	0x01CBA148 BL 0x1B6E868
	0x01CBA14C STR X0, [X19 + 0x28]
	0x01CBA150 B 0x1CBA15C
	0x01CBA154 MOVN W8, 0x0
	0x01CBA158 STR W8, [X19 + 0x10]
	0x01CBA15C CBZ X22, 0x1CBA278
	0x01CBA160 ADRP X8, 0x2293000
	0x01CBA164 LDR X8, [X8 + 0x478]
	0x01CBA168 LDR X20, [X22 + 0x128]
	0x01CBA16C LDR X0, [X8]
	0x01CBA170 LDR W8, [X0 + 0xE0]
	0x01CBA174 CBNZ W8, 0x1CBA17C
	0x01CBA178 BL 0x1B6E8F8
	0x01CBA17C MOV X0, X20
	0x01CBA180 MOV X1, X31
	0x01CBA184 MOV X2, X31
	0x01CBA188 BL 0x3A9D6EC
	0x01CBA18C FMOV S8, W31
	0x01CBA190 TBZ X0, 0x0, 0x1CBA240
	0x01CBA194 LDR X0, [X22 + 0x128]
	0x01CBA198 CBZ X0, 0x1CBA278
	0x01CBA19C MOV X1, X31
	0x01CBA1A0 BL 0x3A65B14
	0x01CBA1A4 TBZ X0, 0x0, 0x1CBA240
	0x01CBA1A8 LDR X0, [X22 + 0x128]
	0x01CBA1AC CBZ X0, 0x1CBA278
	0x01CBA1B0 MOV X1, X31
	0x01CBA1B4 BL 0x3A658D4
	0x01CBA1B8 LDR X8, [X22 + 0x128]
	0x01CBA1BC CBZ X8, 0x1CBA278
	0x01CBA1C0 LDR X21, [X19 + 0x28]
	0x01CBA1C4 MOV X20, X0
	0x01CBA1C8 MOV X0, X8
	0x01CBA1CC MOV X1, X31
	0x01CBA1D0 BL 0x3A65898
	0x01CBA1D4 CBZ X20, 0x1CBA278
	0x01CBA1D8 MOV W2, W0
	0x01CBA1DC MOV X0, X20
	0x01CBA1E0 MOV X1, X21
	0x01CBA1E4 MOV X3, X31
	0x01CBA1E8 BL 0x3A64CF4
	0x01CBA1EC TBZ X0, 0x0, 0x1CBA240
	0x01CBA1F0 LDR X11, [X19 + 0x28]
	0x01CBA1F4 CBZ X11, 0x1CBA278
	0x01CBA1F8 LDR W8, [X11 + 0x18]
	0x01CBA1FC UBFM X9, X8, 0x20, 0x1F
	0x01CBA200 CMP X9, 0x1
	0x01CBA204 B.LT 0x1CBA240
	0x01CBA208 MOV X9, X31
	0x01CBA20C SXTW X10, W8
	0x01CBA210 ADD X11, X11, 0x20
	0x01CBA214 FMOV S0, W31
	0x01CBA218 CMP X9, X8
	0x01CBA21C B.CS 0x1CBA27C
	0x01CBA220 LDR V1, [X11, X9, LSL #2]
	0x01CBA224 ADD X9, X9, 0x1
	0x01CBA228 FCMP S1, S0
	0x01CBA22C FCSEL S0, S1, S0, GT
	0x01CBA230 CMP X9, X10
	0x01CBA234 B.LT 0x1CBA218
	0x01CBA238 FMOV S1, 5
	0x01CBA23C FMUL S8, S0, S1
	0x01CBA240 LDR X0, [X22 + 0xA8]
	0x01CBA244 CBZ X0, 0x1CBA278
	0x01CBA248 MOV V0.16B, V8.16B
	0x01CBA24C BL 0x1CBA280
	0x01CBA250 MOVZ W0, 0x1
	0x01CBA254 STR X31, [X19 + 0x18]
	0x01CBA258 STR W0, [X19 + 0x10]
	0x01CBA25C B 0x1CBA264
	0x01CBA260 MOV W0, W31
	0x01CBA264 LDP X20, X19, [X31 + 0x20]
	0x01CBA268 LDP X22, X21, [X31 + 0x10]
	0x01CBA26C LDR X30, [X31 + 0x8]
	0x01CBA270 LDR V8, [X31], #0x30
	0x01CBA274 RET
	0x01CBA278 BL 0x1B6EA1C
	0x01CBA27C BL 0x1B6EA24
	0x01CBA280 STP D11, D10, [X31 - 0x40]!
	0x01CBA284 STP D9, D8, [X31 + 0x10]
	0x01CBA288 STP X30, X21, [X31 + 0x20]
	0x01CBA28C STP X20, X19, [X31 + 0x30]
	0x01CBA290 LDR W8, [X0 + 0x50]
	0x01CBA294 CBZ W8, 0x1CBA43C
	0x01CBA298 FMOV S9, 1
	0x01CBA29C FCMP S0, 0x0
	0x01CBA2A0 FMOV S1, W31
	0x01CBA2A4 FMIN S0, S0, S9
	0x01CBA2A8 FMOV S2, -0.5
	0x01CBA2AC LDP S5, S4, [X0 + 0xD8]
	0x01CBA2B0 FCSEL S0, S0, S1, PL
	0x01CBA2B4 LDR V3, [X0 + 0x114]
	0x01CBA2B8 FADD S2, S0, S2
	0x01CBA2BC LDR V10, [X0 + 0x110]
	0x01CBA2C0 FADD S2, S2, S2
	0x01CBA2C4 FCMP S2, 0x0
	0x01CBA2C8 FMIN S2, S2, S9
	0x01CBA2CC FCSEL S8, S2, S1, PL
	0x01CBA2D0 FCMP S4, 0x0
	0x01CBA2D4 FMIN S2, S4, S9
	0x01CBA2D8 FCSEL S2, S2, S1, PL
	0x01CBA2DC FSUB S1, S1, S3
	0x01CBA2E0 FMUL S1, S1, S2
	0x01CBA2E4 FSUB S0, S0, S10

ISIL:
	001 Move [X31-144], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X30
	009 Move [X31+72], X27
	010 Move [X31+80], X26
	011 Move [X31+88], X25
	012 Move [X31+96], X24
	013 Move [X31+104], X23
	014 Move [X31+112], X22
	015 Move [X31+120], X21
	016 Move [X31+128], X20
	017 Move [X31+136], X19
	018 Move X25, 0x256B000
	019 Move W8, [X25+1275]
	020 Move X19, X5
	021 Move W20, W4
	022 Move X21, X3
	023 Move X22, X2
	024 Move V8, V6
	025 Move V9, V5
	026 Move V10, V4
	027 Move V11, V3
	028 Move V12, V2
	029 Move V13, V1
	030 Move V14, V0
	031 Move W23, W1
	032 Move X24, X0
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {48}
	037 Move X0, 0x2296000
	038 Move X0, [X0+448]
	039 Call 0x1B6F7F0
	040 Move X0, 0x2296000
	041 Move X0, [X0+408]
	042 Call 0x1B6F7F0
	043 Move X0, 0x2296000
	044 Move X0, [X0+4008]
	045 Call 0x1B6F7F0
	046 Move W8, 1
	047 Move [X25+1275], W8
	048 Move W8, [X24+88]
	049 Compare W8, 0
	050 JumpIfEqual {119}
	051 Move [X24+88], W31
	052 Move X0, [X24+64]
	053 Compare X0, 0
	054 JumpIfEqual {339}
	055 Move X1, X31
	056 Call NetworkObject.get_HasInputAuthority, X0
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {135}
	061 Move X24, 0x2296000
	062 Move X24, [X24+408]
	063 Move X0, [X24]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1B6F8F8
	068 Move X25, 0x256B000
	069 Move W8, [X25+1103]
	070 Compare W8, 0
	071 JumpIfNotEqual {77}
	072 Move X0, 0x2296000
	073 Move X0, [X0+408]
	074 Call 0x1B6F7F0
	075 Move W8, 1
	076 Move [X25+1103], W8
	077 Move X0, [X24]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {83}
	081 Call 0x1B6F8F8
	082 Move X0, [X24]
	083 Move X8, [X0+184]
	084 Move X0, [X8]
	085 Compare X0, 0
	086 JumpIfEqual {339}
	087 Move W1, W23
	088 Move V1, V13
	089 Move V2, V12
	090 Move V3, V11
	091 Move V4, V10
	092 Move V5, V9
	093 Move V6, V8
	094 Move X2, X22
	095 Move X3, X21
	096 Move W4, W20
	097 Move X5, X19
	098 Move X20, [X31+128]
	099 Move X19, [X31+136]
	100 Move X22, [X31+112]
	101 Move X21, [X31+120]
	102 Move X24, [X31+96]
	103 Move X23, [X31+104]
	104 Move X26, [X31+80]
	105 Move X25, [X31+88]
	106 Move X30, [X31+64]
	107 Move X27, [X31+72]
	108 Move D9, [X31+48]
	109 Move D8, [X31+56]
	110 Move D11, [X31+32]
	111 Move D10, [X31+40]
	112 Move D13, [X31+16]
	113 Move D12, [X31+24]
	114 Move V0, V14
	115 Move X6, X31
	116 Move V14, [X31+144]
	117 Call PlayerController.PlayerHit, X0, X1, X2, X3, X4, X5, X6, X7
	118 Return 
	119 Move X26, 0x2295000
	120 Move X26, [X26+448]
	121 Move X0, [X26]
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfNotEqual {126}
	125 Call 0x1B6F8F8
	126 Move X0, X24
	127 Move X1, X31
	128 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	129 Move X0, [X24+56]
	130 Compare X0, 0
	131 JumpIfEqual {339}
	132 Move X1, X31
	133 Call NetworkRunner.get_Stage, X0
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X20, [X31+128]
	136 Move X19, [X31+136]
	137 Move X22, [X31+112]
	138 Move X21, [X31+120]
	139 Move X24, [X31+96]
	140 Move X23, [X31+104]
	141 Move X26, [X31+80]
	142 Move X25, [X31+88]
	143 Move X30, [X31+64]
	144 Move X27, [X31+72]
	145 Move D9, [X31+48]
	146 Move D8, [X31+56]
	147 Move D11, [X31+32]
	148 Move D10, [X31+40]
	149 Move D13, [X31+16]
	150 Move D12, [X31+24]
	151 Move V14, [X31+144]
	152 Return 
	153 Move X0, [X24+64]
	154 Compare X0, 0
	155 JumpIfEqual {339}
	156 Move X1, X31
	157 Call NetworkObject.GetLocalAuthorityMask, X0
	158 And W31, W0, 7
	159 Move TEMP, X0
	160 And TEMP, TEMP, 2
	161 Compare TEMP, 2
	162 JumpIfEqual {52}
	163 Move X0, X22
	164 Move X1, X31
	165 Call ReadWriteUtilsForWeaver.GetByteCountUtf8NoHash, X0
	166 Move W25, W0
	167 Move X0, X21
	168 Move X1, X31
	169 Call ReadWriteUtilsForWeaver.GetByteCountUtf8NoHash, X0
	170 Add W8, W0, 3
	171 Move X0, X19
	172 Move X1, X31
	173 And W27, W8, 0xFFFFFFFC
	174 Call ReadWriteUtilsForWeaver.GetByteCountUtf8NoHash, X0
	175 Add W9, W25, 47
	176 Add W8, W0, 3
	177 And W9, W9, 0xFFFFFFFC
	178 And W8, W8, 0xFFFFFFFC
	179 Add W9, W9, W27
	180 Add W25, W9, W8
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move X8, [X24+56]
	183 Compare X8, 0
	184 JumpIfEqual {339}
	185 Move X0, [X8+80]
	186 Compare X0, 0
	187 JumpIfEqual {339}
	188 Move X1, X31
	189 Call Simulation.HasAnyActiveConnections, X0
	190 Move TEMP, X0
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfNotEqual {135}
	194 Move X8, [X24+56]
	195 Compare X8, 0
	196 JumpIfEqual {339}
	197 Move X0, [X8+80]
	198 Move W1, W25
	199 Move X2, X31
	200 Call SimulationMessage.Allocate, X0, X1
	201 Move X25, X0
	202 Move W0, 1
	203 Move X1, X31
	204 Call Assert.Check, X0
	205 Move X8, [X24+64]
	206 Compare X8, 0
	207 JumpIfEqual {339}
	208 Move X8, [X8+32]
	209 Add X26, X25, 28
	210 Compare X8, 0
	211 JumpIfEqual {273}
	212 Move W0, [X8]
	213 Move X0, [X26]
	214 Move X19, [X24+64]
	215 Move W8, [X0+224]
	216 Compare W8, 0
	217 JumpIfNotEqual {219}
	218 Call 0x1B6F8F8
	219 Move X8, 0x2295000
	220 Move X8, [X8+4008]
	221 Move X1, X19
	222 Move X20, [X31+128]
	223 Move X19, [X31+136]
	224 Move X22, [X31+112]
	225 Move X21, [X31+120]
	226 Move X0, [X8]
	227 Move X24, [X31+96]
	228 Move X23, [X31+104]
	229 Move X26, [X31+80]
	230 Move X25, [X31+88]
	231 Move X30, [X31+64]
	232 Move X27, [X31+72]
	233 Move D9, [X31+48]
	234 Move D8, [X31+56]
	235 Move D11, [X31+32]
	236 Move D10, [X31+40]
	237 Move D13, [X31+16]
	238 Move D12, [X31+24]
	239 Move W2, 7
	240 Move X3, X31
	241 Move V14, [X31+144]
	242 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	243 Return 
	244 Move X0, [X26]
	245 Move W8, [X0+224]
	246 Compare W8, 0
	247 JumpIfNotEqual {249}
	248 Call 0x1B6F8F8
	249 Move X8, 0x2295000
	250 Move X8, [X8+4008]
	251 Move W1, W25
	252 Move X20, [X31+128]
	253 Move X19, [X31+136]
	254 Move X22, [X31+112]
	255 Move X21, [X31+120]
	256 Move X0, [X8]
	257 Move X24, [X31+96]
	258 Move X23, [X31+104]
	259 Move X26, [X31+80]
	260 Move X25, [X31+88]
	261 Move X30, [X31+64]
	262 Move X27, [X31+72]
	263 Move D9, [X31+48]
	264 Move D8, [X31+56]
	265 Move D11, [X31+32]
	266 Move D10, [X31+40]
	267 Move D13, [X31+16]
	268 Move D12, [X31+24]
	269 Move X2, X31
	270 Move V14, [X31+144]
	271 Call NetworkBehaviourUtils.NotifyRpcPayloadSizeExceeded, X0, X1
	272 Return 
	273 Move X0, X31
	274 Move W1, [X24+104]
	275 Move W2, 7
	276 Move X3, X31
	277 Call RpcHeader.Create, X0, X1, X2
	278 Move [X25+28], X0
	279 Add X0, X25, 68
	280 Move X1, X22
	281 Move X2, X31
	282 Move [X25+36], W23
	283 Move [X25+40], S14
	284 Move [X25+48], S13
	285 Move [X25+48], S12
	286 Move [X25+56], S11
	287 Move [X25+56], S10
	288 Move [X25+64], S9
	289 Move [X25+64], S8
	290 Call ReadWriteUtilsForWeaver.WriteStringUtf8NoHash, X0, X1
	291 Add W8, W0, 43
	292 And W22, W8, 0xFFFFFFFC
	293 Add X0, X26, W22
	294 Move X1, X21
	295 Move X2, X31
	296 Call ReadWriteUtilsForWeaver.WriteStringUtf8NoHash, X0, X1
	297 Add W8, W0, 3
	298 And W8, W8, 0xFFFFFFFC
	299 Add W8, W8, W22
	300 Move [X26], W20
	301 Add W20, W8, 4
	302 Add X0, X26, W20
	303 Move X1, X19
	304 Move X2, X31
	305 Call ReadWriteUtilsForWeaver.WriteStringUtf8NoHash, X0, X1
	306 Compare X25, 0
	307 JumpIfEqual {339}
	308 Add W8, W0, 3
	309 And W8, W8, 0x1FFFFFFC
	310 Add W8, W20, W8
	311 Move W8, W8
	312 ShiftRight W8, 29
	313 And W8, W8, 0xFFFFFFF
	314 Move [X25+12], W8
	315 Move X0, [X24+56]
	316 Compare X0, 0
	317 JumpIfEqual {339}
	318 Move X1, X25
	319 Move X20, [X31+128]
	320 Move X19, [X31+136]
	321 Move X22, [X31+112]
	322 Move X21, [X31+120]
	323 Move X24, [X31+96]
	324 Move X23, [X31+104]
	325 Move X26, [X31+80]
	326 Move X25, [X31+88]
	327 Move X30, [X31+64]
	328 Move X27, [X31+72]
	329 Move D9, [X31+48]
	330 Move D8, [X31+56]
	331 Move D11, [X31+32]
	332 Move D10, [X31+40]
	333 Move D13, [X31+16]
	334 Move D12, [X31+24]
	335 Move X2, X31
	336 Move V14, [X31+144]
	337 Call NetworkRunner.SendRpc, X0, X1
	338 Return 
	339 Call 0x1B6FA1C

Method: System.Void PlayerHit(System.Int32 damage, UnityEngine.Transform hitTransform, AnimalCompany.RandomSFX hitSound, AnimalCompany.RandomSFX killSound, System.String hitName)

Disassembly:
	0x01CBA2E8 FADD S1, S3, S1
	0x01CBA2EC FMUL S0, S0, S5
	0x01CBA2F0 FADD S11, S0, S1
	0x01CBA2F4 MOV X19, X0
	0x01CBA2F8 STR S11, [X0 + 0x114]
	0x01CBA2FC MOV X0, X31
	0x01CBA300 BL 0x3AA481C
	0x01CBA304 FMUL S0, S0, S11
	0x01CBA308 FADD S10, S10, S0
	0x01CBA30C MOV X0, X31
	0x01CBA310 STR S10, [X19 + 0x110]
	0x01CBA314 BL 0x3AA47CC
	0x01CBA318 LDR V1, [X19 + 0xE0]
	0x01CBA31C FMUL S0, S0, S1
	0x01CBA320 BL 0x3D198B0
	0x01CBA324 LDR X0, [X19 + 0xF8]
	0x01CBA328 CBZ X0, 0x1CBA450
	0x01CBA32C FMUL S8, S8, S0
	0x01CBA330 LDR V0, [X19 + 0xE4]
	0x01CBA334 FMUL S1, S10, S10
	0x01CBA338 FMOV S2, 3
	0x01CBA33C FMUL S3, S1, S1
	0x01CBA340 FADD S1, S1, S1
	0x01CBA344 FSUB S1, S2, S1
	0x01CBA348 FMUL S1, S3, S1
	0x01CBA34C FSUB S2, S9, S0
	0x01CBA350 FMUL S0, S0, S8
	0x01CBA354 FMUL S1, S2, S1
	0x01CBA358 MOVZ W8, 0x42C80000
	0x01CBA35C FADD S9, S0, S1
	0x01CBA360 FMOV S0, W8
	0x01CBA364 FMUL S0, S9, S0
	0x01CBA368 MOV W1, W31
	0x01CBA36C MOV X2, X31
	0x01CBA370 BL 0x3A7F76C
	0x01CBA374 LDR X0, [X19 + 0xF0]
	0x01CBA378 CBZ X0, 0x1CBA450
	0x01CBA37C FMOV S0, 0.5
	0x01CBA380 LDP S2, S3, [X19 + 0xE8]
	0x01CBA384 FMUL S5, S8, S0
	0x01CBA388 FMOV S10, 1
	0x01CBA38C FADD S0, S5, S0
	0x01CBA390 LDR V1, [X19 + 0x118]
	0x01CBA394 FMOV S4, W31
	0x01CBA398 FMIN S5, S0, S10
	0x01CBA39C FCMP S0, 0x0
	0x01CBA3A0 FSUB S0, S3, S2
	0x01CBA3A4 FCSEL S3, S5, S4, PL
	0x01CBA3A8 FMUL S0, S3, S0
	0x01CBA3AC FADD S0, S2, S0
	0x01CBA3B0 FADD S0, S1, S0
	0x01CBA3B4 FMOV S1, W31
	0x01CBA3B8 FMOV S2, W31
	0x01CBA3BC MOV X1, X31
	0x01CBA3C0 BL 0x3AA7954
	0x01CBA3C4 LDR X20, [X19 + 0x108]
	0x01CBA3C8 CBZ X20, 0x1CBA450
	0x01CBA3CC LDR W8, [X20 + 0x18]
	0x01CBA3D0 CMP W8, 0x1

ISIL:
	001 Move [X31-112], D14
	002 Move [X31+8], D13
	003 Move [X31+16], D12
	004 Move [X31+24], D11
	005 Move [X31+32], D10
	006 Move [X31+40], D9
	007 Move [X31+48], D8
	008 Move [X31+56], X30
	009 Move [X31+64], X24
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Compare X2, 0
	016 JumpIfEqual {75}
	017 Move W20, W1
	018 Move X21, X0
	019 Move X0, X2
	020 Move X1, X31
	021 Move X19, X5
	022 Move X22, X4
	023 Move X23, X3
	024 Move X24, X2
	025 Call Transform.get_position, X0
	026 Move X0, X24
	027 Move X1, X31
	028 Move V8, V0
	029 Move V9, V1
	030 Move V10, V2
	031 Call Transform.get_rotation, X0
	032 Compare X23, 0
	033 JumpIfEqual {75}
	034 Move X0, X23
	035 Move X1, X31
	036 Move V11, V0
	037 Move V12, V1
	038 Move V13, V2
	039 Move V14, V3
	040 Call Object.get_name, X0
	041 Compare X22, 0
	042 JumpIfEqual {75}
	043 Move X23, X0
	044 Move X0, X22
	045 Move X1, X31
	046 Call Object.get_name, X0
	047 Move X3, X0
	048 Move X0, X21
	049 Move W1, W20
	050 Move V0, V8
	051 Move V1, V9
	052 Move V2, V10
	053 Move V3, V11
	054 Move V4, V12
	055 Move V5, V13
	056 Move X2, X23
	057 Move X4, X19
	058 Move X20, [X31+96]
	059 Move X19, [X31+104]
	060 Move X22, [X31+80]
	061 Move X21, [X31+88]
	062 Move X24, [X31+64]
	063 Move X23, [X31+72]
	064 Move X30, [X31+56]
	065 Move D9, [X31+40]
	066 Move D8, [X31+48]
	067 Move D11, [X31+24]
	068 Move D10, [X31+32]
	069 Move D13, [X31+8]
	070 Move D12, [X31+16]
	071 Move V6, V14
	072 Move V14, [X31+112]
	073 Call NetPlayer.RPC_PlayerHit, X0, X1, X2, X3, X4, X5, X6
	074 Return 
	075 Call 0x1B6FA1C

Method: System.Void PlayerHit(System.Int32 damage, UnityEngine.Transform hitTransform, AnimalCompany.RandomSFX hitSound, AnimalCompany.RandomSFX killSound, UnityEngine.Vector3 force, System.String hitName)

Disassembly:
	0x01CBA3D4 B.LT 0x1CBA43C
	0x01CBA3D8 LDR V0, [X19 + 0x100]
	0x01CBA3DC LDR V3, [X19 + 0xE4]
	0x01CBA3E0 FMOV S1, -1
	0x01CBA3E4 LDR V2, [X19 + 0x11C]
	0x01CBA3E8 FADD S0, S0, S1
	0x01CBA3EC FMUL S0, S9, S0
	0x01CBA3F0 FADD S0, S0, S10
	0x01CBA3F4 FMUL S1, S8, S3
	0x01CBA3F8 FADD S0, S0, S1
	0x01CBA3FC MOV W21, W31
	0x01CBA400 FMUL S8, S2, S0
	0x01CBA404 CMP W21, W8
	0x01CBA408 B.CS 0x1CBA454
	0x01CBA40C ADD X8, X20, W21, 0x3, SXTW
	0x01CBA410 LDR X0, [X8 + 0x20]
	0x01CBA414 CBZ X0, 0x1CBA450
	0x01CBA418 MOV V0.16B, V8.16B
	0x01CBA41C MOV V1.16B, V8.16B
	0x01CBA420 MOV V2.16B, V8.16B
	0x01CBA424 MOV X1, X31
	0x01CBA428 BL 0x3AA7D18
	0x01CBA42C LDR W8, [X20 + 0x18]
	0x01CBA430 ADD W21, W21, 0x1
	0x01CBA434 CMP W21, W8
	0x01CBA438 B.LT 0x1CBA404
	0x01CBA43C LDP X20, X19, [X31 + 0x30]
	0x01CBA440 LDP X30, X21, [X31 + 0x20]
	0x01CBA444 LDP D9, D8, [X31 + 0x10]
	0x01CBA448 LDP D11, D10, [X31], #0x40
	0x01CBA44C RET
	0x01CBA450 BL 0x1B6EA1C
	0x01CBA454 BL 0x1B6EA24
	0x01CBA458 LDR X0, [X0 + 0x18]
	0x01CBA45C RET
	0x01CBA460 STP X30, X19, [X31 - 0x10]!
	0x01CBA464 ADRP X0, 0x2293000
	0x01CBA468 LDR X0, [X0 + 0x990]
	0x01CBA46C BL 0x1B6E804
	0x01CBA470 BL 0x1B6EA0C
	0x01CBA474 MOV X1, X31
	0x01CBA478 MOV X19, X0
	0x01CBA47C BL 0x31E99B4
	0x01CBA480 ADRP X0, 0x2294000
	0x01CBA484 LDR X0, [X0 + 0xFC8]
	0x01CBA488 BL 0x1B6E804
	0x01CBA48C MOV X1, X0
	0x01CBA490 MOV X0, X19
	0x01CBA494 BL 0x1B6E8E8
	0x01CBA498 LDR X0, [X0 + 0x18]
	0x01CBA49C RET
	0x01CBA4A0 STR X30, [X31 - 0x20]!
	0x01CBA4A4 STP X20, X19, [X31 + 0x10]
	0x01CBA4A8 MOV W19, W1
	0x01CBA4AC MOV X1, X31
	0x01CBA4B0 MOV X20, X0
	0x01CBA4B4 BL 0x32276F8
	0x01CBA4B8 STR W19, [X20 + 0x10]
	0x01CBA4BC LDP X20, X19, [X31 + 0x10]
	0x01CBA4C0 LDR X30, [X31], #0x20
	0x01CBA4C4 RET
	0x01CBA4C8 RET
	0x01CBA4CC STP X30, X23, [X31 - 0x30]!
	0x01CBA4D0 STP X22, X21, [X31 + 0x10]
	0x01CBA4D4 STP X20, X19, [X31 + 0x20]
	0x01CBA4D8 ADRP X20, 0x2569000
	0x01CBA4DC LDRB W8, [X20 + 0x517]
	0x01CBA4E0 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+96], X24
	012 Move [X31+104], X23
	013 Move [X31+112], X22
	014 Move [X31+120], X21
	015 Move [X31+128], X20
	016 Move [X31+136], X19
	017 Move [X31+88], S1
	018 Move [X31+96], S0
	019 Compare X2, 0
	020 JumpIfEqual {87}
	021 Move W20, W1
	022 Move X21, X0
	023 Move X0, X2
	024 Move X1, X31
	025 Move X19, X5
	026 Move V10, V2
	027 Move X22, X4
	028 Move X23, X3
	029 Move X24, X2
	030 Call Transform.get_position, X0
	031 Move X0, X24
	032 Move X1, X31
	033 Move V11, V0
	034 Move V12, V1
	035 Move V13, V2
	036 Call Transform.get_rotation, X0
	037 Compare X23, 0
	038 JumpIfEqual {87}
	039 Move X0, X23
	040 Move X1, X31
	041 Move V14, V0
	042 Move V15, V1
	043 Move V8, V2
	044 Move V9, V3
	045 Call Object.get_name, X0
	046 Compare X22, 0
	047 JumpIfEqual {87}
	048 Move X23, X0
	049 Move X0, X22
	050 Move X1, X31
	051 Call Object.get_name, X0
	052 Move V0, [X31+88]
	053 Move X3, X0
	054 Move X0, X21
	055 Move W1, W20
	056 Move [X31+4], S0
	057 Move [X31+12], S10
	058 Move V0, [X31+92]
	059 Move V1, V12
	060 Move V2, V13
	061 Move V3, V14
	062 Move [X31], S0
	063 Move V0, V11
	064 Move V4, V15
	065 Move V5, V8
	066 Move V6, V9
	067 Move X2, X23
	068 Move X4, X19
	069 Call NetPlayer.RPC_PlayerHit, X0, X1, X2, X3, X4, X5, X6, X7
	070 Move X20, [X31+128]
	071 Move X19, [X31+136]
	072 Move X22, [X31+112]
	073 Move X21, [X31+120]
	074 Move X24, [X31+96]
	075 Move X23, [X31+104]
	076 Move X30, [X31+80]
	077 Move D9, [X31+64]
	078 Move D8, [X31+72]
	079 Move D11, [X31+48]
	080 Move D10, [X31+56]
	081 Move D13, [X31+32]
	082 Move D12, [X31+40]
	083 Move D15, [X31+16]
	084 Move D14, [X31+24]
	085 Add X31, X31, 144
	086 Return 
	087 Call 0x1B6FA1C

Method: System.Void PlayerHit(System.Int32 damage, UnityEngine.Transform hitTransform, AnimalCompany.RandomSFX hitSound, AnimalCompany.RandomSFX killSound, AnimalCompany.PrefabGenerator/PrefabType prefabType, System.String hitName)

Disassembly:
	0x01CBA4E4 TBNZ X8, 0x0, 0x1CBA508
	0x01CBA4E8 ADRP X0, 0x2294000
	0x01CBA4EC LDR X0, [X0 + 0xFD0]
	0x01CBA4F0 BL 0x1B6E7F0
	0x01CBA4F4 ADRP X0, 0x2294000
	0x01CBA4F8 LDR X0, [X0 + 0x2E8]
	0x01CBA4FC BL 0x1B6E7F0
	0x01CBA500 MOVZ W8, 0x1
	0x01CBA504 STRB W8, [X20 + 0x517]
	0x01CBA508 LDR W22, [X19 + 0x10]
	0x01CBA50C CMP W22, 0x1
	0x01CBA510 B.HI 0x1CBA64C
	0x01CBA514 LDR X20, [X19 + 0x20]
	0x01CBA518 MOVN W8, 0x0
	0x01CBA51C STR W8, [X19 + 0x10]
	0x01CBA520 CBZ X20, 0x1CBA664
	0x01CBA524 LDR X0, [X20 + 0xB0]
	0x01CBA528 CBZ X0, 0x1CBA664
	0x01CBA52C MOV X1, X31
	0x01CBA530 BL 0x33DE6CC
	0x01CBA534 CBZ X0, 0x1CBA664
	0x01CBA538 ADRP X23, 0x2294000
	0x01CBA53C LDR X8, [X0]
	0x01CBA540 LDR X23, [X23 + 0xFD0]
	0x01CBA544 MOV X21, X0
	0x01CBA548 LDRH W9, [X8 + 0x12E]
	0x01CBA54C LDR X1, [X23]
	0x01CBA550 CBZ X9, 0x1CBA574
	0x01CBA554 LDR X10, [X8 + 0xB0]
	0x01CBA558 ADD X10, X10, 0x8
	0x01CBA55C LDUR X11, [X10 - 0x8]
	0x01CBA560 CMP X11, X1
	0x01CBA564 B.EQ 0x1CBA584
	0x01CBA568 SUBS X9, X9, 0x1
	0x01CBA56C ADD X10, X10, 0x10
	0x01CBA570 B.NE 0x1CBA55C
	0x01CBA574 MOVZ W2, 0x2
	0x01CBA578 MOV X0, X21
	0x01CBA57C BL 0x1BB4284
	0x01CBA580 B 0x1CBA594
	0x01CBA584 LDR W9, [X10]
	0x01CBA588 ADD W9, W9, 0x2
	0x01CBA58C ADD X8, X8, W9, 0x4, SXTW
	0x01CBA590 ADD X0, X8, 0x138
	0x01CBA594 LDP X8, X1, [X0]
	0x01CBA598 MOV X0, X21
	0x01CBA59C BLR X8
	0x01CBA5A0 MOV X0, X20
	0x01CBA5A4 MOV X1, X31
	0x01CBA5A8 BL 0x1CB7C28
	0x01CBA5AC LDR X0, [X20 + 0xB0]
	0x01CBA5B0 CBZ X0, 0x1CBA664
	0x01CBA5B4 MOV X1, X31
	0x01CBA5B8 BL 0x33DE6CC
	0x01CBA5BC CBZ X0, 0x1CBA664
	0x01CBA5C0 LDR X8, [X0]
	0x01CBA5C4 LDR X1, [X23]
	0x01CBA5C8 MOV X20, X0
	0x01CBA5CC LDRH W9, [X8 + 0x12E]
	0x01CBA5D0 CBZ X9, 0x1CBA5F4
	0x01CBA5D4 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-128], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X30
	009 Move [X31+72], X25
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Compare X2, 0
	017 JumpIfEqual {79}
	018 Move W21, W1
	019 Move X22, X0
	020 Move X0, X2
	021 Move X1, X31
	022 Move X19, X6
	023 Move W20, W5
	024 Move X23, X4
	025 Move X24, X3
	026 Move X25, X2
	027 Call Transform.get_position, X0
	028 Move X0, X25
	029 Move X1, X31
	030 Move V8, V0
	031 Move V9, V1
	032 Move V10, V2
	033 Call Transform.get_rotation, X0
	034 Compare X24, 0
	035 JumpIfEqual {79}
	036 Move X0, X24
	037 Move X1, X31
	038 Move V11, V0
	039 Move V12, V1
	040 Move V13, V2
	041 Move V14, V3
	042 Call Object.get_name, X0
	043 Compare X23, 0
	044 JumpIfEqual {79}
	045 Move X24, X0
	046 Move X0, X23
	047 Move X1, X31
	048 Call Object.get_name, X0
	049 Move X3, X0
	050 Move X0, X22
	051 Move W1, W21
	052 Move V0, V8
	053 Move V1, V9
	054 Move V2, V10
	055 Move V3, V11
	056 Move V4, V12
	057 Move V5, V13
	058 Move X2, X24
	059 Move W4, W20
	060 Move X5, X19
	061 Move X20, [X31+112]
	062 Move X19, [X31+120]
	063 Move X22, [X31+96]
	064 Move X21, [X31+104]
	065 Move X24, [X31+80]
	066 Move X23, [X31+88]
	067 Move X30, [X31+64]
	068 Move X25, [X31+72]
	069 Move D9, [X31+48]
	070 Move D8, [X31+56]
	071 Move D11, [X31+32]
	072 Move D10, [X31+40]
	073 Move D13, [X31+16]
	074 Move D12, [X31+24]
	075 Move V6, V14
	076 Move V14, [X31+128]
	077 Call NetPlayer.RPC_PlayerHit, X0, X1, X2, X3, X4, X5, X6, X7
	078 Return 
	079 Call 0x1B6FA1C

Method: System.Void Hit(System.Int32 damage, UnityEngine.Vector3 position, AnimalCompany.RandomSFX hitSound, AnimalCompany.RandomSFX killSound, UnityEngine.Vector3 force, System.String hitName)

Disassembly:
	0x01CBA5D8 ADD X10, X10, 0x8
	0x01CBA5DC LDUR X11, [X10 - 0x8]
	0x01CBA5E0 CMP X11, X1
	0x01CBA5E4 B.EQ 0x1CBA604
	0x01CBA5E8 SUBS X9, X9, 0x1
	0x01CBA5EC ADD X10, X10, 0x10
	0x01CBA5F0 B.NE 0x1CBA5DC
	0x01CBA5F4 MOVZ W2, 0x3
	0x01CBA5F8 MOV X0, X20
	0x01CBA5FC BL 0x1BB4284
	0x01CBA600 B 0x1CBA614
	0x01CBA604 LDR W9, [X10]
	0x01CBA608 ADD W9, W9, 0x3
	0x01CBA60C ADD X8, X8, W9, 0x4, SXTW
	0x01CBA610 ADD X0, X8, 0x138
	0x01CBA614 LDP X8, X1, [X0]
	0x01CBA618 MOV X0, X20
	0x01CBA61C BLR X8
	0x01CBA620 ADRP X8, 0x2294000
	0x01CBA624 LDR X8, [X8 + 0x2E8]
	0x01CBA628 LDR X0, [X8]
	0x01CBA62C BL 0x1B6EA0C
	0x01CBA630 FMOV S0, 0.5
	0x01CBA634 MOV X1, X31
	0x01CBA638 MOV X20, X0
	0x01CBA63C BL 0x3AA273C
	0x01CBA640 MOVZ W8, 0x1
	0x01CBA644 STR X20, [X19 + 0x18]
	0x01CBA648 STR W8, [X19 + 0x10]
	0x01CBA64C CMP W22, 0x2
	0x01CBA650 LDP X20, X19, [X31 + 0x20]
	0x01CBA654 LDP X22, X21, [X31 + 0x10]
	0x01CBA658 CSET W0, CC
	0x01CBA65C LDP X30, X23, [X31], #0x30
	0x01CBA660 RET
	0x01CBA664 BL 0x1B6EA1C
	0x01CBA668 LDR X0, [X0 + 0x18]
	0x01CBA66C RET
	0x01CBA670 STP X30, X19, [X31 - 0x10]!
	0x01CBA674 ADRP X0, 0x2293000
	0x01CBA678 LDR X0, [X0 + 0x990]
	0x01CBA67C BL 0x1B6E804
	0x01CBA680 BL 0x1B6EA0C
	0x01CBA684 MOV X1, X31
	0x01CBA688 MOV X19, X0
	0x01CBA68C BL 0x31E99B4
	0x01CBA690 ADRP X0, 0x2294000
	0x01CBA694 LDR X0, [X0 + 0xFD8]
	0x01CBA698 BL 0x1B6E804
	0x01CBA69C MOV X1, X0
	0x01CBA6A0 MOV X0, X19
	0x01CBA6A4 BL 0x1B6E8E8
	0x01CBA6A8 LDR X0, [X0 + 0x18]
	0x01CBA6AC RET
	0x01CBA6B0 SUB X31, X31, 0x60
	0x01CBA6B4 STP X30, X27, [X31 + 0x10]
	0x01CBA6B8 STP X26, X25, [X31 + 0x20]
	0x01CBA6BC STP X24, X23, [X31 + 0x30]
	0x01CBA6C0 STP X22, X21, [X31 + 0x40]
	0x01CBA6C4 STP X20, X19, [X31 + 0x50]
	0x01CBA6C8 ADRP X20, 0x2569000
	0x01CBA6CC LDRB W8, [X20 + 0x518]
	0x01CBA6D0 MOV X19, X0
	0x01CBA6D4 TBNZ X8, 0x0, 0x1CBA704
	0x01CBA6D8 ADRP X0, 0x2294000
	0x01CBA6DC LDR X0, [X0 + 0xFE0]
	0x01CBA6E0 BL 0x1B6E7F0
	0x01CBA6E4 ADRP X0, 0x2294000
	0x01CBA6E8 LDR X0, [X0 + 0xFE8]
	0x01CBA6EC BL 0x1B6E7F0
	0x01CBA6F0 ADRP X0, 0x2294000
	0x01CBA6F4 LDR X0, [X0 + 0xFF0]
	0x01CBA6F8 BL 0x1B6E7F0
	0x01CBA6FC MOVZ W8, 0x1
	0x01CBA700 STRB W8, [X20 + 0x518]
	0x01CBA704 STR X31, [X31 + 0x8]
	0x01CBA708 LDR X23, [X19 + 0x20]
	0x01CBA70C CBZ X23, 0x1CBA7FC
	0x01CBA710 LDR W8, [X23 + 0x18]
	0x01CBA714 CMP W8, 0x1
	0x01CBA718 B.LT 0x1CBA7E0
	0x01CBA71C ADRP X25, 0x2294000
	0x01CBA720 ADRP X26, 0x2294000
	0x01CBA724 ADRP X27, 0x2294000
	0x01CBA728 LDR X25, [X25 + 0xFE8]
	0x01CBA72C LDR X26, [X26 + 0xFF0]
	0x01CBA730 LDR X27, [X27 + 0xFE0]
	0x01CBA734 MOV W24, W31
	0x01CBA738 CMP W24, W8
	0x01CBA73C B.CS 0x1CBA800
	0x01CBA740 ADD X8, X23, W24, 0x3, SXTW
	0x01CBA744 LDR X20, [X8 + 0x20]
	0x01CBA748 CBZ X20, 0x1CBA7FC
	0x01CBA74C LDR X21, [X19 + 0x78]
	0x01CBA750 MOV X0, X20
	0x01CBA754 MOV X1, X31
	0x01CBA758 BL 0x3A7BD48
	0x01CBA75C CBZ X21, 0x1CBA7FC
	0x01CBA760 LDR X3, [X25]
	0x01CBA764 MOV X1, X0
	0x01CBA768 ADD X2, X31, 0x8
	0x01CBA76C MOV X0, X21
	0x01CBA770 BL 0x28FBD3C
	0x01CBA774 TBNZ X0, 0x0, 0x1CBA7C0
	0x01CBA778 MOV X0, X20
	0x01CBA77C MOV X1, X31

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+32], D15
	003 Move [X31+40], D14
	004 Move [X31+48], D13
	005 Move [X31+56], D12
	006 Move [X31+64], D11
	007 Move [X31+72], D10
	008 Move [X31+80], D9
	009 Move [X31+88], D8
	010 Move [X31+96], X30
	011 Move [X31+104], X25
	012 Move [X31+112], X24
	013 Move [X31+120], X23
	014 Move [X31+128], X22
	015 Move [X31+136], X21
	016 Move [X31+144], X20
	017 Move [X31+152], X19
	018 Move X24, 0x256A000
	019 Move W8, [X24+1276]
	020 Move X19, X4
	021 Move V12, V4
	022 Move V11, V3
	023 Move X22, X3
	024 Move X23, X2
	025 Move V10, V1
	026 Move V13, V0
	027 Move W20, W1
	028 Move X21, X0
	029 Move [X31+24], S5
	030 Move [X31+32], S2
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {43}
	035 Move X0, 0x2294000
	036 Move X0, [X0+1144]
	037 Call 0x1B6F7F0
	038 Move X0, 0x2294000
	039 Move X0, [X0+2072]
	040 Call 0x1B6F7F0
	041 Move W8, 1
	042 Move [X24+1276], W8
	043 Move X25, 0x256A000
	044 Move X24, 0x2294000
	045 Move W8, [X25+1108]
	046 Move X24, [X24+1144]
	047 Compare W8, 0
	048 JumpIfNotEqual {54}
	049 Move X0, 0x2295000
	050 Move X0, [X0+504]
	051 Call 0x1B6F7F0
	052 Move W8, 1
	053 Move [X25+1108], W8
	054 Move X8, 0x2295000
	055 Move X8, [X8+504]
	056 Move X0, [X24]
	057 Move X8, [X8]
	058 Move W9, [X0+224]
	059 Move X8, [X8+184]
	060 Move S9, [X8]
	061 Move S8, [X8+4]
	062 Move S15, [X8+8]
	063 Move S14, [X8+12]
	064 Compare W9, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1B6F8F8
	067 Move X25, 0x2294000
	068 Move X25, [X25+2072]
	069 Move X0, X23
	070 Move X1, X31
	071 Move X2, X31
	072 Call Object.op_Inequality, X0, X1
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {83}
	077 Compare X23, 0
	078 JumpIfEqual {140}
	079 Move X0, X23
	080 Move X1, X31
	081 Call Object.get_name, X0
	082 Move X23, X0
	083 Move X23, [X25]
	084 Move X0, [X24]
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1B6F8F8
	089 Move X0, X22
	090 Move X1, X31
	091 Move X2, X31
	092 Call Object.op_Inequality, X0, X1
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {103}
	097 Compare X22, 0
	098 JumpIfEqual {140}
	099 Move X0, X22
	100 Move X1, X31
	101 Call Object.get_name, X0
	102 Move X3, X0
	103 Move X3, [X25]
	104 Compare X21, 0
	105 JumpIfEqual {140}
	106 Move S0, [X31+24]
	107 Move S2, [X31+28]
	108 Move X0, X21
	109 Move W1, W20
	110 Move V1, V10
	111 Move [X31+8], S0
	112 Move V0, V13
	113 Move V3, V9
	114 Move V4, V8
	115 Move V5, V15
	116 Move V6, V14
	117 Move X2, X23
	118 Move X4, X19
	119 Move [X31], S11
	120 Move [X31+8], S12
	121 Call NetPlayer.RPC_PlayerHit, X0, X1, X2, X3, X4, X5, X6, X7
	122 Move X20, [X31+144]
	123 Move X19, [X31+152]
	124 Move X22, [X31+128]
	125 Move X21, [X31+136]
	126 Move X24, [X31+112]
	127 Move X23, [X31+120]
	128 Move X30, [X31+96]
	129 Move X25, [X31+104]
	130 Move D9, [X31+80]
	131 Move D8, [X31+88]
	132 Move D11, [X31+64]
	133 Move D10, [X31+72]
	134 Move D13, [X31+48]
	135 Move D12, [X31+56]
	136 Move D15, [X31+32]
	137 Move D14, [X31+40]
	138 Add X31, X31, 160
	139 Return 
	140 Call 0x1B6FA1C

Method: System.Void .ctor()

Disassembly:
	0x01CBA780 BL 0x3A7BD48
	0x01CBA784 LDR X8, [X26]
	0x01CBA788 MOV X21, X0
	0x01CBA78C MOV X0, X8
	0x01CBA790 BL 0x1B6EA0C
	0x01CBA794 MOV X1, X21
	0x01CBA798 MOV X2, X31
	0x01CBA79C MOV X22, X0
	0x01CBA7A0 BL 0x3A7CE88
	0x01CBA7A4 STR X22, [X31 + 0x8]
	0x01CBA7A8 LDR X0, [X19 + 0x78]
	0x01CBA7AC CBZ X0, 0x1CBA7FC
	0x01CBA7B0 LDR X3, [X27]
	0x01CBA7B4 MOV X1, X21
	0x01CBA7B8 MOV X2, X22
	0x01CBA7BC BL 0x28FA2A8
	0x01CBA7C0 LDR X1, [X31 + 0x8]
	0x01CBA7C4 MOV X0, X20
	0x01CBA7C8 MOV X2, X31
	0x01CBA7CC BL 0x3A7BD84

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x256A000
	006 Move X21, 0x2295000
	007 Move W8, [X20+1277]
	008 Move X21, [X21+3952]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2295000
	015 Move X0, [X0+3952]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X20+1277], W8
	019 Move X8, [X21]
	020 Move X0, X19
	021 Move X1, X31
	022 Move [X19+240], X8
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Call NetworkBehaviour..ctor, X0
	028 Return 

Method: System.Void .cctor()

Disassembly:
	0x01CBA7D0 LDR W8, [X23 + 0x18]
	0x01CBA7D4 ADD W24, W24, 0x1
	0x01CBA7D8 CMP W24, W8
	0x01CBA7DC B.LT 0x1CBA738
	0x01CBA7E0 LDP X20, X19, [X31 + 0x50]
	0x01CBA7E4 LDP X22, X21, [X31 + 0x40]
	0x01CBA7E8 LDP X24, X23, [X31 + 0x30]
	0x01CBA7EC LDP X26, X25, [X31 + 0x20]
	0x01CBA7F0 LDP X30, X27, [X31 + 0x10]
	0x01CBA7F4 ADD X31, X31, 0x60
	0x01CBA7F8 RET
	0x01CBA7FC BL 0x1B6EA1C
	0x01CBA800 BL 0x1B6EA24
	0x01CBA804 STR D14, [X31 - 0x70]!
	0x01CBA808 STP D13, D12, [X31 + 0x8]
	0x01CBA80C STP D11, D10, [X31 + 0x18]
	0x01CBA810 STP D9, D8, [X31 + 0x28]
	0x01CBA814 STR X30, [X31 + 0x38]
	0x01CBA818 STP X24, X23, [X31 + 0x40]
	0x01CBA81C STP X22, X21, [X31 + 0x50]
	0x01CBA820 STP X20, X19, [X31 + 0x60]
	0x01CBA824 MOV X19, X0
	0x01CBA828 LDR X0, [X0 + 0x28]
	0x01CBA82C CBZ X0, 0x1CBAC68
	0x01CBA830 LDR X20, [X19 + 0x40]
	0x01CBA834 MOV X1, X31
	0x01CBA838 BL 0x3AA7658
	0x01CBA83C LDR X0, [X19 + 0x28]
	0x01CBA840 CBZ X0, 0x1CBAC68
	0x01CBA844 MOV X1, X31
	0x01CBA848 MOV V8.16B, V0.16B
	0x01CBA84C MOV V9.16B, V1.16B
	0x01CBA850 MOV V10.16B, V2.16B
	0x01CBA854 BL 0x3AA7A54
	0x01CBA858 CBZ X20, 0x1CBAC68
	0x01CBA85C ADRP X8, 0xFFFFFFFFFEDEF000
	0x01CBA860 LDR V3, [X8 + 0x930]
	0x01CBA864 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x256A000
	007 Move X22, 0x2295000
	008 Move X19, 0x2295000
	009 Move X20, 0x2295000
	010 Move W8, [X21+1278]
	011 Move X22, [X22+4016]
	012 Move X19, [X19+4024]
	013 Move X20, [X20+680]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x2295000
	019 Move X0, [X0+4024]
	020 Call 0x1B6F7F0
	021 Move X0, 0x2295000
	022 Move X0, [X0+4016]
	023 Call 0x1B6F7F0
	024 Move X0, 0x2295000
	025 Move X0, [X0+680]
	026 Call 0x1B6F7F0
	027 Move W8, 1
	028 Move [X21+1278], W8
	029 Move X0, [X22]
	030 Call 0x1B6FA0C
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call Dictionary`2<UInt32, Object>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X8, [X20]
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X8, [X8+184]
	043 Move [X8+8], X31
	044 Move X30, [X31+48]
	045 Return 

Method: System.Void CopyBackingFieldsToState(System.Boolean param_0)

Disassembly:
	0x01CBA868 MOV X1, X31
	0x01CBA86C FMUL S2, S2, S3
	0x01CBA870 FMUL S1, S1, S3
	0x01CBA874 FMUL S0, S0, S3
	0x01CBA878 FSUB S2, S10, S2
	0x01CBA87C FSUB S1, S9, S1
	0x01CBA880 FSUB S0, S8, S0
	0x01CBA884 BL 0x3AA76F8
	0x01CBA888 LDR X0, [X19 + 0x28]
	0x01CBA88C CBZ X0, 0x1CBAC68
	0x01CBA890 MOV X1, X31
	0x01CBA894 BL 0x3AA7AD0
	0x01CBA898 ADRP X22, 0x2569000
	0x01CBA89C LDRB W8, [X22 + 0x441]
	0x01CBA8A0 MOV V8.16B, V0.16B
	0x01CBA8A4 MOV V9.16B, V2.16B
	0x01CBA8A8 CBNZ W8, 0x1CBA8C0
	0x01CBA8AC ADRP X0, 0x2293000
	0x01CBA8B0 LDR X0, [X0 + 0x488]
	0x01CBA8B4 BL 0x1B6E7F0
	0x01CBA8B8 MOVZ W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W1, [X0+216]
	004 Move X19, X0
	005 Call NetPlayer.set_Token, X0, X1
	006 Move S0, [X19+220]
	007 Move S1, [X19+224]
	008 Move S2, [X19+228]
	009 Move S3, [X19+232]
	010 Move X0, X19
	011 Call NetPlayer.set_playerColor, X0, X1
	012 Move W1, [X19+236]
	013 Move X0, X19
	014 Call NetPlayer.set_isDie, X0, X1
	015 Move X1, [X19+240]
	016 Move X0, X19
	017 Call NetPlayer.set_displayName, X0, X1
	018 Move W1, [X19+248]
	019 Move X0, X19
	020 Call NetPlayer.set_channel, X0, X1
	021 Move V0, [X19+252]
	022 Move X0, X19
	023 Move X30, [X31+16]
	024 Move X19, [X31+24]
	025 Call NetPlayer.set_playerVolume, X0, V0
	026 Return 

Method: System.Void CopyStateToBackingFields()

Disassembly:
	0x01CBA8BC STRB W8, [X22 + 0x441]
	0x01CBA8C0 ADRP X23, 0x2293000
	0x01CBA8C4 LDR X23, [X23 + 0x488]
	0x01CBA8C8 LDR X0, [X23]
	0x01CBA8CC LDR W8, [X0 + 0xE0]
	0x01CBA8D0 CBNZ W8, 0x1CBA8D8
	0x01CBA8D4 BL 0x1B6E8F8
	0x01CBA8D8 ADRP X8, 0xFFFFFFFFFEDEF000
	0x01CBA8DC FMUL S1, S8, S8
	0x01CBA8E0 FMOV S0, W31
	0x01CBA8E4 LDR V11, [X8 + 0xB64]
	0x01CBA8E8 ADRP X21, 0x2293000
	0x01CBA8EC FADD S1, S1, S0
	0x01CBA8F0 FMUL S2, S9, S9
	0x01CBA8F4 LDR X21, [X21 + 0x480]
	0x01CBA8F8 FADD S1, S2, S1
	0x01CBA8FC FSQRT S1, S1
	0x01CBA900 FCMP S1, S11
	0x01CBA904 B.LE 0x1CBA918
	0x01CBA908 FDIV S8, S8, S1
	0x01CBA90C FDIV S10, S0, S1
	0x01CBA910 FDIV S9, S9, S1
	0x01CBA914 B 0x1CBA948

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call NetPlayer.get_Token, X0
	005 Move [X19+216], W0
	006 Move X0, X19
	007 Call NetPlayer.get_playerColor, X0
	008 Move X0, X19
	009 Move [X19+220], S0
	010 Move [X19+228], S1
	011 Move [X19+228], S2
	012 Move [X19+236], S3
	013 Call NetPlayer.get_isDie, X0
	014 And W8, W0, 1
	015 Move X0, X19
	016 Move [X19+236], W8
	017 Call NetPlayer.get_displayName, X0
	018 Move [X19+240], X0
	019 Move X0, X19
	020 Call NetPlayer.get_channel, X0
	021 Move [X19+248], W0
	022 Move X0, X19
	023 Call NetPlayer.get_playerVolume, X0
	024 Move [X19+252], S0
	025 Move X30, [X31+16]
	026 Move X19, [X31+24]
	027 Return 

Method: System.Void RPC_SetPlayerColor@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01CBA918 ADRP X20, 0x2569000
	0x01CBA91C LDRB W8, [X20 + 0x43F]
	0x01CBA920 CBNZ W8, 0x1CBA938
	0x01CBA924 ADRP X0, 0x2293000
	0x01CBA928 LDR X0, [X0 + 0x480]
	0x01CBA92C BL 0x1B6E7F0
	0x01CBA930 MOVZ W8, 0x1
	0x01CBA934 STRB W8, [X20 + 0x43F]
	0x01CBA938 LDR X8, [X21]
	0x01CBA93C LDR X8, [X8 + 0xB8]
	0x01CBA940 LDP S8, S10, [X8]
	0x01CBA944 LDR V9, [X8 + 0x8]
	0x01CBA948 ADRP X24, 0x2569000
	0x01CBA94C LDRB W8, [X24 + 0x442]
	0x01CBA950 LDR X20, [X19 + 0x40]
	0x01CBA954 CBNZ W8, 0x1CBA96C
	0x01CBA958 ADRP X0, 0x2293000
	0x01CBA95C LDR X0, [X0 + 0x480]
	0x01CBA960 BL 0x1B6E7F0
	0x01CBA964 MOVZ W8, 0x1
	0x01CBA968 STRB W8, [X24 + 0x442]
	0x01CBA96C LDR X8, [X21]
	0x01CBA970 MOV V0.16B, V8.16B
	0x01CBA974 MOV V1.16B, V10.16B
	0x01CBA978 MOV V2.16B, V9.16B
	0x01CBA97C LDR X8, [X8 + 0xB8]
	0x01CBA980 MOV X0, X31
	0x01CBA984 LDP S3, S4, [X8 + 0x18]
	0x01CBA988 LDR V5, [X8 + 0x20]
	0x01CBA98C BL 0x3A92B78
	0x01CBA990 CBZ X20, 0x1CBAC68
	0x01CBA994 MOV X0, X20
	0x01CBA998 MOV X1, X31
	0x01CBA99C BL 0x3AA7878
	0x01CBA9A0 LDR X0, [X19 + 0x30]
	0x01CBA9A4 CBZ X0, 0x1CBAC68
	0x01CBA9A8 LDR X20, [X19 + 0x48]
	0x01CBA9AC MOV X1, X31
	0x01CBA9B0 BL 0x3AA7658
	0x01CBA9B4 CBZ X20, 0x1CBAC68

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x256A000
	006 Move W8, [X21+1279]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2295000
	014 Move X0, [X0+680]
	015 Call 0x1B6F7F0
	016 Move W8, 1
	017 Move [X21+1279], W8
	018 Move W0, 1
	019 Move X1, X31
	020 Move W21, 1
	021 Call Assert.Check, X0
	022 Compare X19, 0
	023 JumpIfEqual {49}
	024 Move X9, 0x2295000
	025 Move X9, [X9+680]
	026 Move S0, [X20+36]
	027 Move S1, [X20+40]
	028 Move S2, [X20+44]
	029 Move S3, [X20+48]
	030 Move [X19+88], W21
	031 Move X8, [X19]
	032 Move X1, [X9]
	033 Move W10, [X8+304]
	034 Move W9, [X1+304]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X8, [X8+200]
	037 Add X8, X8, X9
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Call NetPlayer.RPC_SetPlayerColor, X0, X1
	046 Return 
	047 Move X0, X19
	048 Call 0x1B6FCDC
	049 Call 0x1B6FA1C

Method: System.Void RPC_DoHandstep@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01CBA9B8 MOV X0, X20
	0x01CBA9BC MOV X1, X31
	0x01CBA9C0 BL 0x3AA76F8
	0x01CBA9C4 LDR X0, [X19 + 0x48]
	0x01CBA9C8 CBZ X0, 0x1CBAC68
	0x01CBA9CC MOV X1, X31
	0x01CBA9D0 BL 0x3AA7658
	0x01CBA9D4 LDR X0, [X19 + 0x58]
	0x01CBA9D8 CBZ X0, 0x1CBAC68
	0x01CBA9DC MOV X1, X31
	0x01CBA9E0 MOV V8.16B, V0.16B
	0x01CBA9E4 MOV V9.16B, V1.16B
	0x01CBA9E8 MOV V10.16B, V2.16B
	0x01CBA9EC BL 0x3AA7658
	0x01CBA9F0 LDR X0, [X19 + 0x30]
	0x01CBA9F4 CBZ X0, 0x1CBAC68
	0x01CBA9F8 MOV X1, X31
	0x01CBA9FC FSUB S12, S10, S2
	0x01CBAA00 FSUB S13, S9, S1
	0x01CBAA04 FSUB S14, S8, S0
	0x01CBAA08 BL 0x3AA7AD0
	0x01CBAA0C LDRB W8, [X22 + 0x441]
	0x01CBAA10 MOV V8.16B, V0.16B
	0x01CBAA14 MOV V9.16B, V1.16B
	0x01CBAA18 MOV V10.16B, V2.16B
	0x01CBAA1C CBNZ W8, 0x1CBAA34
	0x01CBAA20 ADRP X0, 0x2293000
	0x01CBAA24 LDR X0, [X0 + 0x488]
	0x01CBAA28 BL 0x1B6E7F0
	0x01CBAA2C MOVZ W8, 0x1
	0x01CBAA30 STRB W8, [X22 + 0x441]
	0x01CBAA34 LDR X0, [X23]
	0x01CBAA38 FADD S8, S14, S8
	0x01CBAA3C FADD S9, S13, S9
	0x01CBAA40 FADD S10, S12, S10
	0x01CBAA44 LDR W8, [X0 + 0xE0]
	0x01CBAA48 CBNZ W8, 0x1CBAA50
	0x01CBAA4C BL 0x1B6E8F8
	0x01CBAA50 FMUL S0, S8, S8
	0x01CBAA54 FMUL S1, S9, S9
	0x01CBAA58 FADD S0, S0, S1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x256A000
	006 Move W8, [X21+1280]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2295000
	014 Move X0, [X0+680]
	015 Call 0x1B6F7F0
	016 Move W8, 1
	017 Move [X21+1280], W8
	018 Move W0, 1
	019 Move X1, X31
	020 Move W21, 1
	021 Call Assert.Check, X0
	022 Compare X19, 0
	023 JumpIfEqual {48}
	024 Move X8, 0x2295000
	025 Move X8, [X8+680]
	026 Move W1, [X20+36]
	027 Move V0, [X20+40]
	028 Move [X19+88], W21
	029 Move X9, [X19]
	030 Move X8, [X8]
	031 Move W11, [X9+304]
	032 Move W10, [X8+304]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X9, [X9+200]
	035 Add X9, X9, X10
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X0, X19
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Call NetPlayer.RPC_DoHandstep, X0, X1, V0
	044 Return 
	045 Move X0, X19
	046 Move X1, X8
	047 Call 0x1B6FCDC
	048 Call 0x1B6FA1C

Method: System.Void RPC_DoPlayerDie@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01CBAA5C FMUL S1, S10, S10
	0x01CBAA60 FADD S0, S1, S0
	0x01CBAA64 FSQRT S0, S0
	0x01CBAA68 FCMP S0, S11
	0x01CBAA6C B.LE 0x1CBAA80
	0x01CBAA70 FDIV S8, S8, S0
	0x01CBAA74 FDIV S9, S9, S0
	0x01CBAA78 FDIV S10, S10, S0
	0x01CBAA7C B 0x1CBAAB0
	0x01CBAA80 ADRP X20, 0x2569000
	0x01CBAA84 LDRB W8, [X20 + 0x43F]
	0x01CBAA88 CBNZ W8, 0x1CBAAA0
	0x01CBAA8C ADRP X0, 0x2293000
	0x01CBAA90 LDR X0, [X0 + 0x480]
	0x01CBAA94 BL 0x1B6E7F0
	0x01CBAA98 MOVZ W8, 0x1
	0x01CBAA9C STRB W8, [X20 + 0x43F]
	0x01CBAAA0 LDR X8, [X21]
	0x01CBAAA4 LDR X8, [X8 + 0xB8]
	0x01CBAAA8 LDP S8, S9, [X8]
	0x01CBAAAC LDR V10, [X8 + 0x8]
	0x01CBAAB0 LDR X0, [X19 + 0x30]
	0x01CBAAB4 CBZ X0, 0x1CBAC68
	0x01CBAAB8 LDR X20, [X19 + 0x48]
	0x01CBAABC MOV X1, X31
	0x01CBAAC0 BL 0x3AA79D8
	0x01CBAAC4 FNEG S3, S0
	0x01CBAAC8 FNEG S4, S1
	0x01CBAACC FNEG S5, S2
	0x01CBAAD0 MOV V0.16B, V8.16B
	0x01CBAAD4 MOV V1.16B, V9.16B
	0x01CBAAD8 MOV V2.16B, V10.16B
	0x01CBAADC MOV X0, X31
	0x01CBAAE0 BL 0x3A92B78
	0x01CBAAE4 CBZ X20, 0x1CBAC68
	0x01CBAAE8 MOV X0, X20
	0x01CBAAEC MOV X1, X31
	0x01CBAAF0 BL 0x3AA7878
	0x01CBAAF4 LDR X0, [X19 + 0x38]
	0x01CBAAF8 CBZ X0, 0x1CBAC68
	0x01CBAAFC LDR X20, [X19 + 0x50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x256A000
	006 Move W8, [X21+1281]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2295000
	014 Move X0, [X0+680]
	015 Call 0x1B6F7F0
	016 Move W8, 1
	017 Move [X21+1281], W8
	018 Move W0, 1
	019 Move X1, X31
	020 Move W21, 1
	021 Call Assert.Check, X0
	022 Compare X19, 0
	023 JumpIfEqual {48}
	024 Move X10, 0x2295000
	025 Move X10, [X10+680]
	026 Move W8, [X20+36]
	027 Move [X19+88], W21
	028 Move X9, [X19]
	029 Move X1, [X10]
	030 Move W11, [X9+304]
	031 Move W10, [X1+304]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X9, [X9+200]
	034 Add X9, X9, X10
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X0, X19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSET not yet implemented."
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Call NetPlayer.RPC_DoPlayerDie, X0, X1
	045 Return 
	046 Move X0, X19
	047 Call 0x1B6FCDC
	048 Call 0x1B6FA1C

Method: System.Void RPC_SetVoiceVolume@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01CBAB00 MOV X1, X31
	0x01CBAB04 BL 0x3AA7658
	0x01CBAB08 CBZ X20, 0x1CBAC68
	0x01CBAB0C MOV X0, X20
	0x01CBAB10 MOV X1, X31
	0x01CBAB14 BL 0x3AA76F8
	0x01CBAB18 LDR X0, [X19 + 0x50]
	0x01CBAB1C CBZ X0, 0x1CBAC68
	0x01CBAB20 MOV X1, X31
	0x01CBAB24 BL 0x3AA7658
	0x01CBAB28 LDR X0, [X19 + 0x60]
	0x01CBAB2C CBZ X0, 0x1CBAC68
	0x01CBAB30 MOV X1, X31
	0x01CBAB34 MOV V8.16B, V0.16B
	0x01CBAB38 MOV V9.16B, V1.16B
	0x01CBAB3C MOV V10.16B, V2.16B
	0x01CBAB40 BL 0x3AA7658
	0x01CBAB44 LDR X0, [X19 + 0x38]
	0x01CBAB48 CBZ X0, 0x1CBAC68
	0x01CBAB4C MOV X1, X31
	0x01CBAB50 FSUB S12, S10, S2
	0x01CBAB54 FSUB S13, S9, S1
	0x01CBAB58 FSUB S14, S8, S0
	0x01CBAB5C BL 0x3AA7AD0
	0x01CBAB60 LDRB W8, [X22 + 0x441]
	0x01CBAB64 MOV V8.16B, V0.16B
	0x01CBAB68 MOV V9.16B, V1.16B
	0x01CBAB6C MOV V10.16B, V2.16B
	0x01CBAB70 CBNZ W8, 0x1CBAB88
	0x01CBAB74 ADRP X0, 0x2293000
	0x01CBAB78 LDR X0, [X0 + 0x488]
	0x01CBAB7C BL 0x1B6E7F0
	0x01CBAB80 MOVZ W8, 0x1
	0x01CBAB84 STRB W8, [X22 + 0x441]
	0x01CBAB88 LDR X0, [X23]
	0x01CBAB8C FADD S8, S14, S8
	0x01CBAB90 FADD S9, S13, S9
	0x01CBAB94 FADD S10, S12, S10
	0x01CBAB98 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x256A000
	006 Move W8, [X21+1282]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2295000
	014 Move X0, [X0+680]
	015 Call 0x1B6F7F0
	016 Move W8, 1
	017 Move [X21+1282], W8
	018 Move W0, 1
	019 Move X1, X31
	020 Move W21, 1
	021 Call Assert.Check, X0
	022 Compare X19, 0
	023 JumpIfEqual {46}
	024 Move X9, 0x2295000
	025 Move X9, [X9+680]
	026 Move V0, [X20+36]
	027 Move [X19+88], W21
	028 Move X8, [X19]
	029 Move X1, [X9]
	030 Move W10, [X8+304]
	031 Move W9, [X1+304]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, [X8+200]
	034 Add X8, X8, X9
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X0, X19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Call NetPlayer.RPC_SetVoiceVolume, X0, V0
	043 Return 
	044 Move X0, X19
	045 Call 0x1B6FCDC
	046 Call 0x1B6FA1C

Method: System.Void RPC_PlayerHit@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01CBAB9C CBNZ W8, 0x1CBABA4
	0x01CBABA0 BL 0x1B6E8F8
	0x01CBABA4 FMUL S0, S8, S8
	0x01CBABA8 FMUL S1, S9, S9
	0x01CBABAC FADD S0, S0, S1
	0x01CBABB0 FMUL S1, S10, S10
	0x01CBABB4 FADD S0, S1, S0
	0x01CBABB8 FSQRT S0, S0
	0x01CBABBC FCMP S0, S11
	0x01CBABC0 B.LE 0x1CBABD4
	0x01CBABC4 FDIV S8, S8, S0
	0x01CBABC8 FDIV S9, S9, S0
	0x01CBABCC FDIV S10, S10, S0
	0x01CBABD0 B 0x1CBAC04
	0x01CBABD4 ADRP X20, 0x2569000
	0x01CBABD8 LDRB W8, [X20 + 0x43F]
	0x01CBABDC CBNZ W8, 0x1CBABF4
	0x01CBABE0 ADRP X0, 0x2293000
	0x01CBABE4 LDR X0, [X0 + 0x480]
	0x01CBABE8 BL 0x1B6E7F0
	0x01CBABEC MOVZ W8, 0x1
	0x01CBABF0 STRB W8, [X20 + 0x43F]
	0x01CBABF4 LDR X8, [X21]
	0x01CBABF8 LDR X8, [X8 + 0xB8]
	0x01CBABFC LDP S8, S9, [X8]
	0x01CBAC00 LDR V10, [X8 + 0x8]
	0x01CBAC04 LDR X0, [X19 + 0x38]
	0x01CBAC08 CBZ X0, 0x1CBAC68
	0x01CBAC0C LDR X19, [X19 + 0x50]
	0x01CBAC10 MOV X1, X31
	0x01CBAC14 BL 0x3AA79D8
	0x01CBAC18 FNEG S3, S0
	0x01CBAC1C FNEG S4, S1
	0x01CBAC20 FNEG S5, S2
	0x01CBAC24 MOV V0.16B, V8.16B
	0x01CBAC28 MOV V1.16B, V9.16B
	0x01CBAC2C MOV V2.16B, V10.16B
	0x01CBAC30 MOV X0, X31
	0x01CBAC34 BL 0x3A92B78
	0x01CBAC38 CBZ X19, 0x1CBAC68
	0x01CBAC3C MOV X0, X19
	0x01CBAC40 LDP X20, X19, [X31 + 0x60]
	0x01CBAC44 LDP X22, X21, [X31 + 0x50]
	0x01CBAC48 LDP X24, X23, [X31 + 0x40]
	0x01CBAC4C LDR X30, [X31 + 0x38]
	0x01CBAC50 LDP D9, D8, [X31 + 0x28]
	0x01CBAC54 LDP D11, D10, [X31 + 0x18]
	0x01CBAC58 LDP D13, D12, [X31 + 0x8]
	0x01CBAC5C MOV X1, X31
	0x01CBAC60 LDR V14, [X31], #0x70
	0x01CBAC64 B 0x3AA7878
	0x01CBAC68 BL 0x1B6EA1C
	0x01CBAC6C SUB X31, X31, 0x60
	0x01CBAC70 STP D11, D10, [X31 + 0x20]
	0x01CBAC74 STP D9, D8, [X31 + 0x30]
	0x01CBAC78 STR X30, [X31 + 0x40]
	0x01CBAC7C STP X20, X19, [X31 + 0x50]
	0x01CBAC80 ADRP X20, 0x2569000
	0x01CBAC84 LDRB W8, [X20 + 0x519]
	0x01CBAC88 MOV V8.16B, V3.16B
	0x01CBAC8C MOV V9.16B, V2.16B
	0x01CBAC90 MOV V10.16B, V1.16B
	0x01CBAC94 MOV V11.16B, V0.16B
	0x01CBAC98 MOV X19, X0
	0x01CBAC9C TBNZ X8, 0x0, 0x1CBACE4
	0x01CBACA0 ADRP X0, 0x2294000
	0x01CBACA4 LDR X0, [X0 + 0xFF8]
	0x01CBACA8 BL 0x1B6E7F0
	0x01CBACAC ADRP X0, 0x2295000
	0x01CBACB0 LDR X0, [X0]
	0x01CBACB4 BL 0x1B6E7F0
	0x01CBACB8 ADRP X0, 0x2295000
	0x01CBACBC LDR X0, [X0 + 0x8]
	0x01CBACC0 BL 0x1B6E7F0
	0x01CBACC4 ADRP X0, 0x2295000
	0x01CBACC8 LDR X0, [X0 + 0x10]
	0x01CBACCC BL 0x1B6E7F0
	0x01CBACD0 ADRP X0, 0x2295000
	0x01CBACD4 LDR X0, [X0 + 0x18]
	0x01CBACD8 BL 0x1B6E7F0
	0x01CBACDC MOVZ W8, 0x1
	0x01CBACE0 STRB W8, [X20 + 0x519]
	0x01CBACE4 STP X31, X31, [X31 + 0x8]
	0x01CBACE8 STR X31, [X31 + 0x18]
	0x01CBACEC LDR X0, [X19 + 0x78]
	0x01CBACF0 STP S11, S10, [X19 + 0x68]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+16], D14
	003 Move [X31+32], D13
	004 Move [X31+40], D12
	005 Move [X31+48], D11
	006 Move [X31+56], D10
	007 Move [X31+64], D9
	008 Move [X31+72], D8
	009 Move [X31+80], X30
	010 Move [X31+88], X23
	011 Move [X31+96], X22
	012 Move [X31+104], X21
	013 Move [X31+112], X20
	014 Move [X31+120], X19
	015 Move X20, 0x256A000
	016 Move W8, [X20+1283]
	017 Move X21, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x2295000
	024 Move X0, [X0+680]
	025 Call 0x1B6F7F0
	026 Move W8, 1
	027 Move [X20+1283], W8
	028 Move W0, 1
	029 Move X1, X31
	030 Move [X31+24], X31
	031 Move [X31], X31
	032 Move [X31+8], X31
	033 Move W22, 1
	034 Call Assert.Check, X0
	035 Move W20, [X21+36]
	036 Move S8, [X21+40]
	037 Move S9, [X21+44]
	038 Move S10, [X21+48]
	039 Move S11, [X21+52]
	040 Move S12, [X21+56]
	041 Move S13, [X21+60]
	042 Move V14, [X21+64]
	043 Add X0, X21, 68
	044 Add X1, X31, 24
	045 Move X2, X31
	046 Add X23, X21, 28
	047 Call ReadWriteUtilsForWeaver.ReadStringUtf8NoHash, X0, X1
	048 Add W8, W0, 43
	049 And W21, W8, 0xFFFFFFFC
	050 Add X0, X23, W21
	051 Add X1, X31, 8
	052 Move X2, X31
	053 Call ReadWriteUtilsForWeaver.ReadStringUtf8NoHash, X0, X1
	054 Add W8, W0, 3
	055 And W8, W8, 0xFFFFFFFC
	056 Add W8, W8, W21
	057 Add X0, X23, W8
	058 Add X1, X31, 0
	059 Move X2, X31
	060 Call ReadWriteUtilsForWeaver.ReadStringUtf8NoHash, X0, X1
	061 Compare X19, 0
	062 JumpIfEqual {105}
	063 Move X9, 0x2295000
	064 Move X9, [X9+680]
	065 Move [X19+88], W22
	066 Move X8, [X19]
	067 Move X1, [X9]
	068 Move W10, [X8+304]
	069 Move W9, [X1+304]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X8+200]
	072 Add X8, X8, X9
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X2, [X31+24]
	076 Move X4, [X31]
	077 Move X3, [X31+8]
	078 Move X0, X19
	079 Move W1, W20
	080 Move V0, V8
	081 Move V1, V9
	082 Move V2, V10
	083 Move V3, V11
	084 Move V4, V12
	085 Move V5, V13
	086 Move V6, V14
	087 Call NetPlayer.RPC_PlayerHit, X0, X1, X2, X3, X4, X5, X6
	088 Move X20, [X31+112]
	089 Move X19, [X31+120]
	090 Move X22, [X31+96]
	091 Move X21, [X31+104]
	092 Move X30, [X31+80]
	093 Move X23, [X31+88]
	094 Move D9, [X31+64]
	095 Move D8, [X31+72]
	096 Move D11, [X31+48]
	097 Move D10, [X31+56]
	098 Move D13, [X31+32]
	099 Move D12, [X31+40]
	100 Move V14, [X31+16]
	101 Add X31, X31, 128
	102 Return 
	103 Move X0, X19
	104 Call 0x1B6FCDC
	105 Call 0x1B6FA1C

Method: System.Void RPC_PlayerHit@Invoker2(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01CBACF4 STP S9, S8, [X19 + 0x70]
	0x01CBACF8 CBZ X0, 0x1CBAD90
	0x01CBACFC ADRP X8, 0x2294000
	0x01CBAD00 LDR X8, [X8 + 0xFF8]
	0x01CBAD04 LDR X1, [X8]
	0x01CBAD08 BL 0x28FA168
	0x01CBAD0C CBZ X0, 0x1CBAD90
	0x01CBAD10 ADRP X8, 0x2295000
	0x01CBAD14 LDR X8, [X8 + 0x18]
	0x01CBAD18 ADRP X20, 0x2295000
	0x01CBAD1C ADRP X19, 0x2295000
	0x01CBAD20 LDR X1, [X8]
	0x01CBAD24 LDR X20, [X20 + 0x8]
	0x01CBAD28 LDR X19, [X19]
	0x01CBAD2C ADD X8, X31, 0x8
	0x01CBAD30 BL 0x25CA7B8
	0x01CBAD34 LDR X1, [X20]
	0x01CBAD38 ADD X0, X31, 0x8
	0x01CBAD3C BL 0x2A5AE8C
	0x01CBAD40 TBZ X0, 0x0, 0x1CBAD68
	0x01CBAD44 LDR X0, [X31 + 0x18]
	0x01CBAD48 CBZ X0, 0x1CBAD8C
	0x01CBAD4C MOV V0.16B, V11.16B
	0x01CBAD50 MOV V1.16B, V10.16B
	0x01CBAD54 MOV V2.16B, V9.16B
	0x01CBAD58 MOV V3.16B, V8.16B
	0x01CBAD5C MOV X1, X31
	0x01CBAD60 BL 0x3A7D160
	0x01CBAD64 B 0x1CBAD34
	0x01CBAD68 LDR X1, [X19]
	0x01CBAD6C ADD X0, X31, 0x8
	0x01CBAD70 BL 0x2A5AE88
	0x01CBAD74 LDP X20, X19, [X31 + 0x50]
	0x01CBAD78 LDR X30, [X31 + 0x40]
	0x01CBAD7C LDP D9, D8, [X31 + 0x30]
	0x01CBAD80 LDP D11, D10, [X31 + 0x20]
	0x01CBAD84 ADD X31, X31, 0x60
	0x01CBAD88 RET
	0x01CBAD8C BL 0x1B6EA1C
	0x01CBAD90 BL 0x1B6EA1C
	0x01CBAD94 B 0x1CBAD9C
	0x01CBAD98 B 0x1CBAD9C
	0x01CBAD9C MOV X19, X0
	0x01CBADA0 CMP W1, 0x1
	0x01CBADA4 B.NE 0x1CBADD8
	0x01CBADA8 MOV X0, X19
	0x01CBADAC BL 0x3D19840
	0x01CBADB0 LDR X20, [X0]
	0x01CBADB4 BL 0x3D19850
	0x01CBADB8 ADRP X8, 0x2295000
	0x01CBADBC LDR X8, [X8]
	0x01CBADC0 ADD X0, X31, 0x8
	0x01CBADC4 LDR X1, [X8]
	0x01CBADC8 BL 0x2A5AE88
	0x01CBADCC CBZ X20, 0x1CBAD74
	0x01CBADD0 MOV X0, X20
	0x01CBADD4 BL 0x1B6EA14
	0x01CBADD8 MOV X20, X31
	0x01CBADDC B 0x1CBADE4
	0x01CBADE0 MOV X19, X0
	0x01CBADE4 ADRP X8, 0x2295000
	0x01CBADE8 LDR X8, [X8]
	0x01CBADEC LDR X1, [X8]
	0x01CBADF0 ADD X0, X31, 0x8
	0x01CBADF4 BL 0x2A5AE88
	0x01CBADF8 CBNZ X20, 0x1CBAE04
	0x01CBADFC MOV X0, X19
	0x01CBAE00 BL 0x1C8418C
	0x01CBAE04 MOV X0, X20
	0x01CBAE08 BL 0x1B6EA14
	0x01CBAE0C BL 0x18F46A8
	0x01CBAE10 STR X30, [X31 - 0x30]!
	0x01CBAE14 STP X22, X21, [X31 + 0x10]
	0x01CBAE18 STP X20, X19, [X31 + 0x20]
	0x01CBAE1C ADRP X21, 0x2569000
	0x01CBAE20 ADRP X22, 0x2295000
	0x01CBAE24 ADRP X20, 0x2295000
	0x01CBAE28 LDRB W8, [X21 + 0x51A]
	0x01CBAE2C LDR X22, [X22 + 0x20]
	0x01CBAE30 LDR X20, [X20 + 0x28]
	0x01CBAE34 MOV X19, X0
	0x01CBAE38 TBNZ X8, 0x0, 0x1CBAE5C
	0x01CBAE3C ADRP X0, 0x2295000
	0x01CBAE40 LDR X0, [X0 + 0x28]
	0x01CBAE44 BL 0x1B6E7F0
	0x01CBAE48 ADRP X0, 0x2295000
	0x01CBAE4C LDR X0, [X0 + 0x20]
	0x01CBAE50 BL 0x1B6E7F0
	0x01CBAE54 MOVZ W8, 0x1
	0x01CBAE58 STRB W8, [X21 + 0x51A]
	0x01CBAE5C LDR X0, [X22]
	0x01CBAE60 BL 0x1B6EA0C

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+48], D15
	003 Move [X31+56], D14
	004 Move [X31+64], D13
	005 Move [X31+72], D12
	006 Move [X31+80], D11
	007 Move [X31+88], D10
	008 Move [X31+96], D9
	009 Move [X31+104], D8
	010 Move [X31+112], X30
	011 Move [X31+120], X23
	012 Move [X31+128], X22
	013 Move [X31+136], X21
	014 Move [X31+144], X20
	015 Move [X31+152], X19
	016 Move X20, 0x256A000
	017 Move W8, [X20+1284]
	018 Move X21, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x2295000
	025 Move X0, [X0+680]
	026 Call 0x1B6F7F0
	027 Move W8, 1
	028 Move [X20+1284], W8
	029 Move W0, 1
	030 Move X1, X31
	031 Move [X31+32], X31
	032 Move [X31+40], X31
	033 Move [X31+24], X31
	034 Move W22, 1
	035 Call Assert.Check, X0
	036 Move V1, [X21+40]
	037 Move S0, [X21+44]
	038 Move S10, [X21+48]
	039 Move W20, [X21+36]
	040 Move S11, [X21+52]
	041 Move S12, [X21+56]
	042 Move S13, [X21+60]
	043 Move S14, [X21+64]
	044 Add X0, X21, 68
	045 Add X1, X31, 40
	046 Move X2, X31
	047 Move [X31+16], S0
	048 Move [X31+24], S1
	049 Add X23, X21, 28
	050 Call ReadWriteUtilsForWeaver.ReadStringUtf8NoHash, X0, X1
	051 Add W8, W0, 43
	052 And W21, W8, 0xFFFFFFFC
	053 Add X0, X23, W21
	054 Add X1, X31, 32
	055 Move X2, X31
	056 Call ReadWriteUtilsForWeaver.ReadStringUtf8NoHash, X0, X1
	057 Add W8, W0, 3
	058 And W8, W8, 0xFFFFFFFC
	059 Add W8, W8, W21
	060 Add X9, X23, W8
	061 Move S15, [X9]
	062 Move S8, [X9+4]
	063 Move V9, [X9+8]
	064 Add W8, W8, 12
	065 Add X0, X23, W8
	066 Add X1, X31, 24
	067 Move X2, X31
	068 Call ReadWriteUtilsForWeaver.ReadStringUtf8NoHash, X0, X1
	069 Compare X19, 0
	070 JumpIfEqual {117}
	071 Move X9, 0x2295000
	072 Move X9, [X9+680]
	073 Move [X19+88], W22
	074 Move X8, [X19]
	075 Move X1, [X9]
	076 Move W10, [X8+304]
	077 Move W9, [X1+304]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X8, [X8+200]
	080 Add X8, X8, X9
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X3, [X31+32]
	084 Move X2, [X31+40]
	085 Move X4, [X31+24]
	086 Move S1, [X31+16]
	087 Move S0, [X31+20]
	088 Move X0, X19
	089 Move W1, W20
	090 Move V2, V10
	091 Move V3, V11
	092 Move V4, V12
	093 Move V5, V13
	094 Move V6, V14
	095 Move [X31+4], S8
	096 Move [X31+12], S9
	097 Move [X31], S15
	098 Call NetPlayer.RPC_PlayerHit, X0, X1, X2, X3, X4, X5, X6, X7
	099 Move X20, [X31+144]
	100 Move X19, [X31+152]
	101 Move X22, [X31+128]
	102 Move X21, [X31+136]
	103 Move X30, [X31+112]
	104 Move X23, [X31+120]
	105 Move D9, [X31+96]
	106 Move D8, [X31+104]
	107 Move D11, [X31+80]
	108 Move D10, [X31+88]
	109 Move D13, [X31+64]
	110 Move D12, [X31+72]
	111 Move D15, [X31+48]
	112 Move D14, [X31+56]
	113 Add X31, X31, 160
	114 Return 
	115 Move X0, X19
	116 Call 0x1B6FCDC
	117 Call 0x1B6FA1C

Method: System.Void RPC_PlayerHit@Invoker3(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01CBAE64 LDR X1, [X20]
	0x01CBAE68 MOV X20, X0
	0x01CBAE6C BL 0x28F9A14
	0x01CBAE70 STR X20, [X19 + 0x78]
	0x01CBAE74 MOV X0, X19
	0x01CBAE78 LDP X20, X19, [X31 + 0x20]
	0x01CBAE7C LDP X22, X21, [X31 + 0x10]
	0x01CBAE80 MOV X1, X31
	0x01CBAE84 LDR X30, [X31], #0x30
	0x01CBAE88 B 0x3A9EEE4
	0x01CBAE8C STR X30, [X31 - 0x20]!
	0x01CBAE90 STP X20, X19, [X31 + 0x10]
	0x01CBAE94 MOV X19, X1
	0x01CBAE98 MOV X1, X31
	0x01CBAE9C MOV X20, X0
	0x01CBAEA0 BL 0x1C8D784
	0x01CBAEA4 STR X19, [X20 + 0x18]
	0x01CBAEA8 LDP X20, X19, [X31 + 0x10]
	0x01CBAEAC LDR X30, [X31], #0x20
	0x01CBAEB0 RET
	0x01CBAEB4 STP X30, X21, [X31 - 0x20]!
	0x01CBAEB8 STP X20, X19, [X31 + 0x10]
	0x01CBAEBC ADRP X21, 0x2569000
	0x01CBAEC0 LDRB W8, [X21 + 0x51B]
	0x01CBAEC4 MOV X20, X1
	0x01CBAEC8 MOV X19, X0
	0x01CBAECC TBNZ X8, 0x0, 0x1CBAEE4
	0x01CBAED0 ADRP X0, 0x2293000
	0x01CBAED4 LDR X0, [X0 + 0x7A0]
	0x01CBAED8 BL 0x1B6E7F0
	0x01CBAEDC MOVZ W8, 0x1
	0x01CBAEE0 STRB W8, [X21 + 0x51B]
	0x01CBAEE4 CBZ X20, 0x1CBAF14
	0x01CBAEE8 LDR X8, [X20 + 0xB0]
	0x01CBAEEC CBZ X8, 0x1CBAF14
	0x01CBAEF0 LDR X0, [X8 + 0x50]
	0x01CBAEF4 CBZ X0, 0x1CBAF14
	0x01CBAEF8 ADRP X8, 0x2293000
	0x01CBAEFC LDR X8, [X8 + 0x7A0]
	0x01CBAF00 LDR X1, [X19 + 0x18]
	0x01CBAF04 LDP X20, X19, [X31 + 0x10]
	0x01CBAF08 LDR X2, [X8]
	0x01CBAF0C LDP X30, X21, [X31], #0x20
	0x01CBAF10 B 0x24BFC34
	0x01CBAF14 BL 0x1B6EA1C
	0x01CBAF18 STR X30, [X31 - 0x10]!
	0x01CBAF1C CBZ X1, 0x1CBAF40
	0x01CBAF20 LDR X0, [X1 + 0xB0]
	0x01CBAF24 CBZ X0, 0x1CBAF40
	0x01CBAF28 LDR X8, [X0]
	0x01CBAF2C MOVZ W1, 0x1
	0x01CBAF30 LDR X3, [X8 + 0x3E8]
	0x01CBAF34 LDR X2, [X8 + 0x3F0]
	0x01CBAF38 LDR X30, [X31], #0x10
	0x01CBAF3C BR X3
	0x01CBAF40 BL 0x1B6EA1C
	0x01CBAF44 MOV X1, X31
	0x01CBAF48 B 0x1C8D784
	0x01CBAF4C LDR X0, [X0 + 0x48]
	0x01CBAF50 RET
	0x01CBAF54 STR X1, [X0 + 0x48]
	0x01CBAF58 RET
	0x01CBAF5C LDR X0, [X0 + 0x50]
	0x01CBAF60 RET
	0x01CBAF64 STR X1, [X0 + 0x50]
	0x01CBAF68 RET
	0x01CBAF6C STP X30, X23, [X31 - 0x30]!
	0x01CBAF70 STP X22, X21, [X31 + 0x10]
	0x01CBAF74 STP X20, X19, [X31 + 0x20]
	0x01CBAF78 ADRP X20, 0x2569000
	0x01CBAF7C ADRP X23, 0x2293000
	0x01CBAF80 ADRP X21, 0x2295000
	0x01CBAF84 ADRP X22, 0x2293000
	0x01CBAF88 LDRB W8, [X20 + 0x51C]
	0x01CBAF8C LDR X23, [X23 + 0xB90]
	0x01CBAF90 LDR X21, [X21 + 0x30]
	0x01CBAF94 LDR X22, [X22 + 0xBA0]
	0x01CBAF98 MOV X19, X0
	0x01CBAF9C TBNZ X8, 0x0, 0x1CBAFD8
	0x01CBAFA0 ADRP X0, 0x2293000
	0x01CBAFA4 LDR X0, [X0 + 0xBA0]
	0x01CBAFA8 BL 0x1B6E7F0
	0x01CBAFAC ADRP X0, 0x2295000
	0x01CBAFB0 LDR X0, [X0 + 0x30]
	0x01CBAFB4 BL 0x1B6E7F0
	0x01CBAFB8 ADRP X0, 0x2293000
	0x01CBAFBC LDR X0, [X0 + 0xB90]
	0x01CBAFC0 BL 0x1B6E7F0
	0x01CBAFC4 ADRP X0, 0x2295000

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+16], D14
	003 Move [X31+32], D13
	004 Move [X31+40], D12
	005 Move [X31+48], D11
	006 Move [X31+56], D10
	007 Move [X31+64], D9
	008 Move [X31+72], D8
	009 Move [X31+80], X30
	010 Move [X31+88], X23
	011 Move [X31+96], X22
	012 Move [X31+104], X21
	013 Move [X31+112], X20
	014 Move [X31+120], X19
	015 Move X20, 0x256A000
	016 Move W8, [X20+1285]
	017 Move X21, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x2295000
	024 Move X0, [X0+680]
	025 Call 0x1B6F7F0
	026 Move W8, 1
	027 Move [X20+1285], W8
	028 Move W0, 1
	029 Move X1, X31
	030 Move [X31+24], X31
	031 Move [X31], X31
	032 Move [X31+8], X31
	033 Move W22, 1
	034 Call Assert.Check, X0
	035 Move W20, [X21+36]
	036 Move S8, [X21+40]
	037 Move S9, [X21+44]
	038 Move S10, [X21+48]
	039 Move S11, [X21+52]
	040 Move S12, [X21+56]
	041 Move S13, [X21+60]
	042 Move V14, [X21+64]
	043 Add X0, X21, 68
	044 Add X1, X31, 24
	045 Move X2, X31
	046 Add X23, X21, 28
	047 Call ReadWriteUtilsForWeaver.ReadStringUtf8NoHash, X0, X1
	048 Add W8, W0, 43
	049 And W21, W8, 0xFFFFFFFC
	050 Add X0, X23, W21
	051 Add X1, X31, 8
	052 Move X2, X31
	053 Call ReadWriteUtilsForWeaver.ReadStringUtf8NoHash, X0, X1
	054 Add W8, W0, 3
	055 And W8, W8, 0xFFFFFFFC
	056 Add W8, W8, W21
	057 Move W21, [X23]
	058 Add W8, W8, 4
	059 Add X0, X23, W8
	060 Add X1, X31, 0
	061 Move X2, X31
	062 Call ReadWriteUtilsForWeaver.ReadStringUtf8NoHash, X0, X1
	063 Compare X19, 0
	064 JumpIfEqual {108}
	065 Move X9, 0x2295000
	066 Move X9, [X9+680]
	067 Move [X19+88], W22
	068 Move X8, [X19]
	069 Move X1, [X9]
	070 Move W10, [X8+304]
	071 Move W9, [X1+304]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X8, [X8+200]
	074 Add X8, X8, X9
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X2, [X31+24]
	078 Move X5, [X31]
	079 Move X3, [X31+8]
	080 Move X0, X19
	081 Move W1, W20
	082 Move V0, V8
	083 Move V1, V9
	084 Move V2, V10
	085 Move V3, V11
	086 Move V4, V12
	087 Move V5, V13
	088 Move V6, V14
	089 Move W4, W21
	090 Call NetPlayer.RPC_PlayerHit, X0, X1, X2, X3, X4, X5, X6, X7
	091 Move X20, [X31+112]
	092 Move X19, [X31+120]
	093 Move X22, [X31+96]
	094 Move X21, [X31+104]
	095 Move X30, [X31+80]
	096 Move X23, [X31+88]
	097 Move D9, [X31+64]
	098 Move D8, [X31+72]
	099 Move D11, [X31+48]
	100 Move D10, [X31+56]
	101 Move D13, [X31+32]
	102 Move D12, [X31+40]
	103 Move V14, [X31+16]
	104 Add X31, X31, 128
	105 Return 
	106 Move X0, X19
	107 Call 0x1B6FCDC
	108 Call 0x1B6FA1C

