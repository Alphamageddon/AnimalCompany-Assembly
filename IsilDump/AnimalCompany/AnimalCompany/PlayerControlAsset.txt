Type: AnimalCompany.PlayerControlAsset

Method: System.Void Setup(AnimalCompany.GorillaLocomotion.Player player)

Disassembly:
	0x01DC0BFC LDP S0, S1, [X8 + 0x4C]
	0x01DC0C00 LDP S2, S3, [X8 + 0x54]
	0x01DC0C04 LDP X20, X19, [X31 + 0x20]
	0x01DC0C08 LDP X22, X21, [X31 + 0x10]
	0x01DC0C0C MOV X1, X31
	0x01DC0C10 LDR X30, [X31], #0x30
	0x01DC0C14 B 0x1E1EF5C
	0x01DC0C18 BL 0x1C16F20
	0x01DC0C1C STR X30, [X31 - 0x10]!
	0x01DC0C20 LDR X0, [X0 + 0xA8]
	0x01DC0C24 CBZ X0, 0x1DC0C34
	0x01DC0C28 MOV X2, X31
	0x01DC0C2C LDR X30, [X31], #0x10
	0x01DC0C30 B 0x1E1F0D8
	0x01DC0C34 BL 0x1C16F20
	0x01DC0C38 STR X30, [X31 - 0x10]!
	0x01DC0C3C LDR X0, [X0 + 0xA8]
	0x01DC0C40 CBZ X0, 0x1DC0C50
	0x01DC0C44 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {20}
	004 Move W8, [X0+24]
	005 Move [X1+152], W8
	006 NotImplemented "Instruction LDUR not yet implemented."
	007 Move [X1+156], V0
	008 NotImplemented "Instruction LDUR not yet implemented."
	009 Move [X1+172], V0
	010 Move W8, [X0+68]
	011 NotImplemented "Instruction LDUR not yet implemented."
	012 Move [X1+264], W8
	013 Move [X1+256], X9
	014 Move W8, [X0+80]
	015 Move X9, [X0+72]
	016 Move [X1+252], W8
	017 Move [X1+244], X9
	018 Move X30, [X31+16]
	019 Return 
	020 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01DC0C48 LDR X30, [X31], #0x10
	0x01DC0C4C B 0x1E1EF5C
	0x01DC0C50 BL 0x1C16F20
	0x01DC0C54 STR D10, [X31 - 0x40]!
	0x01DC0C58 STP D9, D8, [X31 + 0x10]
	0x01DC0C5C STP X30, X21, [X31 + 0x20]
	0x01DC0C60 STP X20, X19, [X31 + 0x30]
	0x01DC0C64 ADRP X20, 0x2618000
	0x01DC0C68 ADRP X21, 0x2338000
	0x01DC0C6C LDRB W8, [X20 + 0xB7D]
	0x01DC0C70 LDR X21, [X21 + 0x88]
	0x01DC0C74 MOV V8.16B, V2.16B
	0x01DC0C78 MOV V9.16B, V1.16B
	0x01DC0C7C MOV V10.16B, V0.16B
	0x01DC0C80 MOV X19, X0
	0x01DC0C84 TBNZ X8, 0x0, 0x1DC0C9C
	0x01DC0C88 ADRP X0, 0x2338000
	0x01DC0C8C LDR X0, [X0 + 0x88]
	0x01DC0C90 BL 0x1C16CF4
	0x01DC0C94 MOVZ W8, 0x1
	0x01DC0C98 STRB W8, [X20 + 0xB7D]
	0x01DC0C9C LDR X8, [X21]
	0x01DC0CA0 LDR X8, [X8 + 0xB8]
	0x01DC0CA4 LDRB W9, [X8]
	0x01DC0CA8 CBZ W9, 0x1DC0CD0
	0x01DC0CAC LDR X19, [X8 + 0x8]
	0x01DC0CB0 CBZ X19, 0x1DC0D54
	0x01DC0CB4 MOV X0, X19
	0x01DC0CB8 MOV X1, X31
	0x01DC0CBC BL 0x3C3F58C
	0x01DC0CC0 FADD S0, S10, S0
	0x01DC0CC4 FADD S1, S9, S1
	0x01DC0CC8 FADD S2, S8, S2
	0x01DC0CCC B 0x1DC0D38
	0x01DC0CD0 LDR X0, [X19 + 0x20]
	0x01DC0CD4 CBZ X0, 0x1DC0D54
	0x01DC0CD8 LDR X20, [X19 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, -19746816
	005 Move X9, -19746816
	006 Move V0, [X8+70]
	007 Move V1, [X9+168]
	008 Move W8, 8
	009 Move [X0+24], W8
	010 Move [X0+28], V0
	011 Move [X0+44], V1
	012 Move X20, 0x2619000
	013 Move W8, [X20+1923]
	014 Move X19, X0
	015 Compare W8, 0
	016 JumpIfNotEqual {22}
	017 Move X0, 0x2334000
	018 Move X0, [X0+1440]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1923], W8
	022 Move X8, 0x2334000
	023 Move X8, [X8+1440]
	024 Move X0, X19
	025 Move X1, X31
	026 Move X8, [X8]
	027 Move X9, [X8+184]
	028 Move V0, [X9]
	029 Move V1, [X9+8]
	030 Move [X19+60], D0
	031 Move [X19+68], S1
	032 Move X8, [X8+184]
	033 Move V0, [X8]
	034 Move V1, [X8+8]
	035 Move [X19+72], D0
	036 Move [X19+80], S1
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Call ScriptableObject..ctor, X0
	041 Return 

