Type: AnimalCompany.SessionConnectionCommands/ConnectToSessionCommand/<ExecuteAsync>d__8

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01DBF500 LDR X8, [X9 + 0xB8]
	0x01DBF504 B.NE 0x1DBF528
	0x01DBF508 LDR X8, [X8 + 0x88]
	0x01DBF50C CBZ X8, 0x1DBF530
	0x01DBF510 LDR X2, [X8 + 0x18]
	0x01DBF514 LDR X0, [X8 + 0x40]
	0x01DBF518 LDR X1, [X8 + 0x28]
	0x01DBF51C LDP X20, X19, [X31 + 0x10]
	0x01DBF520 LDR X30, [X31], #0x20
	0x01DBF524 BR X2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01DBFB18 B.CS 0x1DBFBA0

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01DBFB1C CBZ X19, 0x1DBFB9C
	0x01DBFB20 ADD X8, X8, W0, 0x3, SXTW
	0x01DBFB24 LDR X1, [X8 + 0x20]
	0x01DBFB28 ADRP X20, 0x2339000
	0x01DBFB2C LDR X20, [X20 + 0x30]
	0x01DBFB30 MOV X0, X19
	0x01DBFB34 MOV X2, X31
	0x01DBFB38 BL 0x3BFCA38
	0x01DBFB3C LDR X0, [X20]
	0x01DBFB40 LDR W8, [X0 + 0xE0]
	0x01DBFB44 CBNZ W8, 0x1DBFB50
	0x01DBFB48 BL 0x1C16DFC
	0x01DBFB4C LDR X0, [X20]
	0x01DBFB50 LDR X8, [X0 + 0xB8]
	0x01DBFB54 FMOV S0, 1
	0x01DBFB58 FMIN S0, S8, S0
	0x01DBFB5C FCMP S8, 0x0
	0x01DBFB60 LDP S1, S2, [X8]
	0x01DBFB64 FMOV S3, W31
	0x01DBFB68 FCSEL S0, S0, S3, PL
	0x01DBFB6C MOV X0, X19
	0x01DBFB70 FSUB S2, S2, S1
	0x01DBFB74 FMUL S0, S0, S2
	0x01DBFB78 FADD S0, S1, S0
	0x01DBFB7C MOV X1, X31
	0x01DBFB80 BL 0x3BFC8DC
	0x01DBFB84 MOV X0, X19
	0x01DBFB88 LDP X20, X19, [X31 + 0x20]
	0x01DBFB8C LDP X30, X21, [X31 + 0x10]
	0x01DBFB90 MOV X1, X31
	0x01DBFB94 LDR V8, [X31], #0x30
	0x01DBFB98 B 0x3BFCAC0
	0x01DBFB9C BL 0x1C16F20
	0x01DBFBA0 BL 0x1C16F28
	0x01DBFBA4 MOV X1, X31
	0x01DBFBA8 B 0x3C36C30
	0x01DBFBAC STR X30, [X31 - 0x20]!
	0x01DBFBB0 STP X20, X19, [X31 + 0x10]
	0x01DBFBB4 ADRP X19, 0x2619000
	0x01DBFBB8 ADRP X20, 0x2339000
	0x01DBFBBC LDRB W8, [X19 + 0xB75]
	0x01DBFBC0 LDR X20, [X20 + 0x30]
	0x01DBFBC4 TBNZ X8, 0x0, 0x1DBFBDC
	0x01DBFBC8 ADRP X0, 0x2339000
	0x01DBFBCC LDR X0, [X0 + 0x30]
	0x01DBFBD0 BL 0x1C16CF4
	0x01DBFBD4 MOVZ W8, 0x1
	0x01DBFBD8 STRB W8, [X19 + 0xB75]
	0x01DBFBDC LDR X8, [X20]
	0x01DBFBE0 ADRP X9, 0xFFFFFFFFFED2F000
	0x01DBFBE4 LDR V0, [X9 + 0x130]
	0x01DBFBE8 LDP X20, X19, [X31 + 0x10]
	0x01DBFBEC LDR X8, [X8 + 0xB8]
	0x01DBFBF0 STR D0, [X8]
	0x01DBFBF4 LDR X30, [X31], #0x20
	0x01DBFBF8 RET
	0x01DBFBFC STR X30, [X31 - 0x10]!
	0x01DBFC00 CBZ X1, 0x1DBFC44
	0x01DBFC04 LDR W8, [X0 + 0x18]
	0x01DBFC08 STR W8, [X1 + 0x98]
	0x01DBFC0C LDUR V0, [X0 + 0x1C]
	0x01DBFC10 STUR V0, [X1 + 0x9C]
	0x01DBFC14 LDUR V0, [X0 + 0x2C]
	0x01DBFC18 STUR V0, [X1 + 0xAC]
	0x01DBFC1C LDR W8, [X0 + 0x44]
	0x01DBFC20 LDUR X9, [X0 + 0x3C]
	0x01DBFC24 STR W8, [X1 + 0x108]
	0x01DBFC28 STR X9, [X1 + 0x100]
	0x01DBFC2C LDR W8, [X0 + 0x50]
	0x01DBFC30 LDR X9, [X0 + 0x48]
	0x01DBFC34 STR W8, [X1 + 0xFC]
	0x01DBFC38 STUR X9, [X1 + 0xF4]
	0x01DBFC3C LDR X30, [X31], #0x10
	0x01DBFC40 RET
	0x01DBFC44 BL 0x1C16F20
	0x01DBFC48 STR X30, [X31 - 0x20]!
	0x01DBFC4C STP X20, X19, [X31 + 0x10]
	0x01DBFC50 ADRP X8, 0xFFFFFFFFFED2B000
	0x01DBFC54 ADRP X9, 0xFFFFFFFFFED2B000
	0x01DBFC58 LDR V0, [X8 + 0x46]
	0x01DBFC5C LDR V1, [X9 + 0xA8]
	0x01DBFC60 MOVZ W8, 0x8
	0x01DBFC64 STR W8, [X0 + 0x18]
	0x01DBFC68 STUR V0, [X0 + 0x1C]
	0x01DBFC6C STUR V1, [X0 + 0x2C]
	0x01DBFC70 ADRP X20, 0x2619000
	0x01DBFC74 LDRB W8, [X20 + 0x783]
	0x01DBFC78 MOV X19, X0
	0x01DBFC7C CBNZ W8, 0x1DBFC94
	0x01DBFC80 ADRP X0, 0x2334000
	0x01DBFC84 LDR X0, [X0 + 0x5A0]
	0x01DBFC88 BL 0x1C16CF4
	0x01DBFC8C MOVZ W8, 0x1
	0x01DBFC90 STRB W8, [X20 + 0x783]
	0x01DBFC94 ADRP X8, 0x2334000
	0x01DBFC98 LDR X8, [X8 + 0x5A0]
	0x01DBFC9C MOV X0, X19
	0x01DBFCA0 MOV X1, X31
	0x01DBFCA4 LDR X8, [X8]
	0x01DBFCA8 LDR X9, [X8 + 0xB8]
	0x01DBFCAC LDR V0, [X9]
	0x01DBFCB0 LDR V1, [X9 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x261A000
	007 Move W8, [X20+2916]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x2339000
	014 Move X0, [X0+4088]
	015 Call 0x1C17CF4
	016 Move X0, 0x233A000
	017 Move X0, [X0]
	018 Call 0x1C17CF4
	019 Move X0, 0x2335000
	020 Move X0, [X0+3216]
	021 Call 0x1C17CF4
	022 Move X0, 0x233A000
	023 Move X0, [X0+8]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+2916], W8
	027 Move [X31+8], W31
	028 Move W8, [X19+16]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X20, [X19+32]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W0, W31
	033 Compare W8, 0
	034 JumpIfNotEqual {115}
	035 Move TEMP, 0
	036 Not TEMP
	037 Move W8, TEMP
	038 Move [X19+16], W8
	039 Compare X20, 0
	040 JumpIfEqual {121}
	041 Move X22, 0x2335000
	042 Move X22, [X22+3216]
	043 Move W21, [X20+112]
	044 Move X0, [X22]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move W0, W21
	050 Move X1, X31
	051 Call SceneManager.GetSceneByBuildIndex, X0
	052 Move [X31+8], W0
	053 Add X0, X31, 8
	054 Move X1, X31
	055 Call Scene.get_isLoaded, X0
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {80}
	060 Move X0, [X22]
	061 Move W20, [X31+8]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, X20
	067 Move X1, X31
	068 Call SceneManager.UnloadSceneAsync, X0
	069 Move X1, X31
	070 Call Command.op_Implicit, X0
	071 Move [X19+24], X0
	072 Move W0, 1
	073 Move [X19+16], W0
	074 Move TEMP, 0
	075 Not TEMP
	076 Move W8, TEMP
	077 Move [X19+16], W8
	078 Compare X20, 0
	079 JumpIfEqual {121}
	080 Move X0, X20
	081 Move X1, X31
	082 Call Command.get_isCancelled, X0
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {93}
	087 Move W0, W31
	088 Move W0, W31
	089 Move TEMP, 0
	090 Not TEMP
	091 Move W8, TEMP
	092 Move [X19+16], W8
	093 Move X8, 0x233A000
	094 Move X8, [X8+8]
	095 Move X0, [X8]
	096 Call 0x1C17F10
	097 Move X8, 0x233A000
	098 Move X8, [X8]
	099 Move X1, X20
	100 Move X3, X31
	101 Move X21, X0
	102 Move X2, [X8]
	103 Call TaskGenerator`1<Object>..ctor, X0, X1, X2
	104 Move X8, 0x2339000
	105 Move X8, [X8+4088]
	106 Move X0, X21
	107 Move W1, W31
	108 Move X2, X31
	109 Move X3, [X8]
	110 Call 0x21A3BE8, X0, X1, X2
	111 Move W8, 2
	112 Move [X19+24], X0
	113 Move [X19+16], W8
	114 Move W0, 1
	115 Move X20, [X31+32]
	116 Move X19, [X31+40]
	117 Move X22, [X31+16]
	118 Move X21, [X31+24]
	119 Move X30, [X31+48]
	120 Return X0
	121 Call 0x1C17F20

Method: SpatialSys.CommandLib.Command System.Collections.Generic.IEnumerator<SpatialSys.CommandLib.Command>.get_Current()

Disassembly:
	0x01DBFCB4 STUR D0, [X19 + 0x3C]
	0x01DBFCB8 STR S1, [X19 + 0x44]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01DBFCBC LDR X8, [X8 + 0xB8]
	0x01DBFCC0 LDR V0, [X8]
	0x01DBFCC4 LDR V1, [X8 + 0x8]
	0x01DBFCC8 STR D0, [X19 + 0x48]
	0x01DBFCCC STR S1, [X19 + 0x50]
	0x01DBFCD0 LDP X20, X19, [X31 + 0x10]
	0x01DBFCD4 LDR X30, [X31], #0x20
	0x01DBFCD8 B 0x3C36D2C
	0x01DBFCDC STR X30, [X31 - 0x20]!
	0x01DBFCE0 STP X20, X19, [X31 + 0x10]
	0x01DBFCE4 ADRP X20, 0x2619000
	0x01DBFCE8 ADRP X19, 0x2336000
	0x01DBFCEC LDRB W8, [X20 + 0xB76]
	0x01DBFCF0 LDR X19, [X19 + 0x7C8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x2335000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x233A000
	011 Move X0, [X0+16]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01DBFCF4 TBNZ X8, 0x0, 0x1DBFD0C
	0x01DBFCF8 ADRP X0, 0x2336000

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

