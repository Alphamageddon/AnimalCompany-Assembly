Type: AnimalCompany.ProductCommands/PurchaseProductCommand/<>c__DisplayClass10_0

Method: System.Void .ctor()

Disassembly:
	0x01D467AC LDR X0, [X23]
	0x01D467B0 ADRP X9, 0x23AE000

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <ExecuteAsync>b__0(Oculus.Platform.Message`1<Oculus.Platform.Models.Purchase> result)

Disassembly:
	0x01D467B4 LDR X8, [X0 + 0xB8]
	0x01D467B8 LDR X9, [X9 + 0x518]
	0x01D467BC LDR X22, [X8]
	0x01D467C0 LDR X0, [X9]
	0x01D467C4 BL 0x1C16F10
	0x01D467C8 ADRP X8, 0x23AE000
	0x01D467CC LDR X8, [X8 + 0x528]
	0x01D467D0 MOV X1, X22
	0x01D467D4 MOV X3, X31
	0x01D467D8 MOV X21, X0
	0x01D467DC LDR X2, [X8]
	0x01D467E0 BL 0x2695248
	0x01D467E4 LDR X8, [X23]
	0x01D467E8 LDR X8, [X8 + 0xB8]
	0x01D467EC STR X21, [X8 + 0x8]
	0x01D467F0 ADRP X8, 0x23AE000
	0x01D467F4 LDR X8, [X8 + 0x4E0]
	0x01D467F8 MOV X0, X20
	0x01D467FC MOV X1, X21
	0x01D46800 MOV W2, W31
	0x01D46804 LDR X4, [X8]
	0x01D46808 MOV X3, X31
	0x01D4680C BL 0x21A3304
	0x01D46810 STR X0, [X19 + 0x38]
	0x01D46814 CBZ X0, 0x1D46844
	0x01D46818 MOVZ W8, 0x3
	0x01D4681C STRB W31, [X0 + 0x14]
	0x01D46820 STR X0, [X19 + 0x18]
	0x01D46824 STR W8, [X19 + 0x10]
	0x01D46828 MOVZ W0, 0x1
	0x01D4682C LDP X20, X19, [X31 + 0x40]
	0x01D46830 LDP X22, X21, [X31 + 0x30]
	0x01D46834 LDP X30, X23, [X31 + 0x20]
	0x01D46838 LDP D9, D8, [X31 + 0x10]
	0x01D4683C LDR V10, [X31], #0x50
	0x01D46840 RET
	0x01D46844 BL 0x1C16F20
	0x01D46848 BL 0x1C16F28
	0x01D4684C BL 0x1C16F44
	0x01D46850 MOV X1, X31
	0x01D46854 BL 0x1C16DEC
	0x01D46858 LDR X0, [X0 + 0x18]
	0x01D4685C RET
	0x01D46860 STP X30, X19, [X31 - 0x10]!
	0x01D46864 ADRP X0, 0x23AD000
	0x01D46868 LDR X0, [X0 + 0xB40]
	0x01D4686C BL 0x1C16D08
	0x01D46870 BL 0x1C16F10
	0x01D46874 MOV X1, X31
	0x01D46878 MOV X19, X0
	0x01D4687C BL 0x3380310
	0x01D46880 ADRP X0, 0x23AE000
	0x01D46884 LDR X0, [X0 + 0x5B0]
	0x01D46888 BL 0x1C16D08
	0x01D4688C MOV X1, X0
	0x01D46890 MOV X0, X19
	0x01D46894 BL 0x1C16DEC
	0x01D46898 LDR X0, [X0 + 0x18]
	0x01D4689C RET
	0x01D468A0 STR X30, [X31 - 0x30]!
	0x01D468A4 STP X22, X21, [X31 + 0x10]
	0x01D468A8 STP X20, X19, [X31 + 0x20]
	0x01D468AC ADRP X20, 0x2692000
	0x01D468B0 ADRP X22, 0x23AE000
	0x01D468B4 ADRP X21, 0x23AD000
	0x01D468B8 LDRB W8, [X20 + 0x76A]
	0x01D468BC LDR X22, [X22 + 0x5B8]
	0x01D468C0 LDR X21, [X21 + 0x648]
	0x01D468C4 MOV X19, X0
	0x01D468C8 TBNZ X8, 0x0, 0x1D468EC
	0x01D468CC ADRP X0, 0x23AD000
	0x01D468D0 LDR X0, [X0 + 0x648]
	0x01D468D4 BL 0x1C16CF4
	0x01D468D8 ADRP X0, 0x23AE000
	0x01D468DC LDR X0, [X0 + 0x5B8]
	0x01D468E0 BL 0x1C16CF4
	0x01D468E4 MOVZ W8, 0x1
	0x01D468E8 STRB W8, [X20 + 0x76A]
	0x01D468EC LDR X0, [X22]
	0x01D468F0 BL 0x1C16F10
	0x01D468F4 MOV X1, X31
	0x01D468F8 MOV X2, X31
	0x01D468FC MOV X20, X0
	0x01D46900 BL 0x35BE4C4
	0x01D46904 LDR X0, [X21]
	0x01D46908 LDR W8, [X0 + 0xE0]
	0x01D4690C CBNZ W8, 0x1D46914
	0x01D46910 BL 0x1C16DFC
	0x01D46914 MOV X0, X20
	0x01D46918 MOV W1, W31
	0x01D4691C BL 0x1D3610C
	0x01D46920 STR X0, [X19 + 0x20]
	0x01D46924 LDP X20, X19, [X31 + 0x20]
	0x01D46928 LDP X22, X21, [X31 + 0x10]
	0x01D4692C LDR X30, [X31], #0x30
	0x01D46930 RET
	0x01D46934 MOV X1, X31
	0x01D46938 MOV X2, X31
	0x01D4693C B 0x35BE4C4
	0x01D46940 STR X30, [X31 - 0x10]!
	0x01D46944 LDR X0, [X0 + 0x20]
	0x01D46948 CBZ X0, 0x1D46958
	0x01D4694C MOV X1, X31
	0x01D46950 LDR X30, [X31], #0x10
	0x01D46954 B 0x35B9B84
	0x01D46958 BL 0x1C16F20
	0x01D4695C STP X30, X21, [X31 - 0x20]!
	0x01D46960 STP X20, X19, [X31 + 0x10]
	0x01D46964 ADRP X21, 0x2692000
	0x01D46968 ADRP X20, 0x23AD000
	0x01D4696C LDRB W8, [X21 + 0x76B]
	0x01D46970 LDR X20, [X20 + 0x898]
	0x01D46974 MOV X19, X0
	0x01D46978 TBNZ X8, 0x0, 0x1D46990
	0x01D4697C ADRP X0, 0x23AD000
	0x01D46980 LDR X0, [X0 + 0x898]
	0x01D46984 BL 0x1C16CF4
	0x01D46988 MOVZ W8, 0x1
	0x01D4698C STRB W8, [X21 + 0x76B]
	0x01D46990 LDR X0, [X20]
	0x01D46994 LDR W8, [X0 + 0xE0]
	0x01D46998 CBNZ W8, 0x1D469A0
	0x01D4699C BL 0x1C16DFC
	0x01D469A0 ADRP X21, 0x2692000
	0x01D469A4 LDRB W8, [X21 + 0x78B]
	0x01D469A8 CBNZ W8, 0x1D469C0
	0x01D469AC ADRP X0, 0x23AD000
	0x01D469B0 LDR X0, [X0 + 0x898]
	0x01D469B4 BL 0x1C16CF4
	0x01D469B8 MOVZ W8, 0x1
	0x01D469BC STRB W8, [X21 + 0x78B]
	0x01D469C0 LDR X0, [X20]
	0x01D469C4 LDR W8, [X0 + 0xE0]
	0x01D469C8 CBNZ W8, 0x1D469D4
	0x01D469CC BL 0x1C16DFC
	0x01D469D0 LDR X0, [X20]
	0x01D469D4 LDR X8, [X0 + 0xB8]
	0x01D469D8 MOV X0, X19
	0x01D469DC MOV X1, X31
	0x01D469E0 LDR X8, [X8]
	0x01D469E4 STR X8, [X19 + 0x20]
	0x01D469E8 LDP X20, X19, [X31 + 0x10]
	0x01D469EC LDP X30, X21, [X31], #0x20
	0x01D469F0 B 0x3C36C30
	0x01D469F4 STP X30, X21, [X31 - 0x20]!
	0x01D469F8 STP X20, X19, [X31 + 0x10]
	0x01D469FC ADRP X20, 0x2692000
	0x01D46A00 ADRP X21, 0x23AE000
	0x01D46A04 LDRB W8, [X20 + 0x76C]
	0x01D46A08 LDR X21, [X21 + 0x5C0]
	0x01D46A0C MOV X19, X0
	0x01D46A10 TBNZ X8, 0x0, 0x1D46A28
	0x01D46A14 ADRP X0, 0x23AE000
	0x01D46A18 LDR X0, [X0 + 0x5C0]
	0x01D46A1C BL 0x1C16CF4
	0x01D46A20 MOVZ W8, 0x1
	0x01D46A24 STRB W8, [X20 + 0x76C]
	0x01D46A28 LDR X0, [X21]
	0x01D46A2C BL 0x1C16F10
	0x01D46A30 MOV X1, X31
	0x01D46A34 MOV X20, X0
	0x01D46A38 BL 0x33BDD8C
	0x01D46A3C STR W31, [X20 + 0x10]
	0x01D46A40 STR X19, [X20 + 0x20]
	0x01D46A44 MOV X0, X20
	0x01D46A48 LDP X20, X19, [X31 + 0x10]
	0x01D46A4C LDP X30, X21, [X31], #0x20
	0x01D46A50 RET
	0x01D46A54 STR X30, [X31 - 0x20]!
	0x01D46A58 STP X20, X19, [X31 + 0x10]
	0x01D46A5C MOV W19, W1
	0x01D46A60 MOV X1, X31
	0x01D46A64 MOV X20, X0
	0x01D46A68 BL 0x33BDD8C
	0x01D46A6C STR W19, [X20 + 0x10]
	0x01D46A70 LDP X20, X19, [X31 + 0x10]
	0x01D46A74 LDR X30, [X31], #0x20
	0x01D46A78 RET
	0x01D46A7C STR X30, [X31 - 0x20]!
	0x01D46A80 STP X20, X19, [X31 + 0x10]
	0x01D46A84 ADRP X19, 0x2692000
	0x01D46A88 ADRP X20, 0x23AE000
	0x01D46A8C LDRB W8, [X19 + 0x76D]
	0x01D46A90 LDR X20, [X20 + 0x5C8]
	0x01D46A94 TBNZ X8, 0x0, 0x1D46AAC
	0x01D46A98 ADRP X0, 0x23AE000
	0x01D46A9C LDR X0, [X0 + 0x5C8]
	0x01D46AA0 BL 0x1C16CF4
	0x01D46AA4 MOVZ W8, 0x1
	0x01D46AA8 STRB W8, [X19 + 0x76D]
	0x01D46AAC LDR X0, [X20]
	0x01D46AB0 BL 0x1C16F10
	0x01D46AB4 MOV X1, X31
	0x01D46AB8 MOV X19, X0
	0x01D46ABC BL 0x33BDD8C
	0x01D46AC0 LDR X8, [X20]
	0x01D46AC4 LDR X8, [X8 + 0xB8]
	0x01D46AC8 STR X19, [X8]
	0x01D46ACC LDP X20, X19, [X31 + 0x10]
	0x01D46AD0 LDR X30, [X31], #0x20
	0x01D46AD4 RET
	0x01D46AD8 MOV X1, X31
	0x01D46ADC B 0x33BDD8C
	0x01D46AE0 STP X30, X21, [X31 - 0x20]!
	0x01D46AE4 STP X20, X19, [X31 + 0x10]
	0x01D46AE8 ADRP X20, 0x2692000
	0x01D46AEC ADRP X21, 0x23AD000
	0x01D46AF0 LDRB W8, [X20 + 0x76E]
	0x01D46AF4 LDR X21, [X21 + 0x648]
	0x01D46AF8 MOV X19, X1
	0x01D46AFC TBNZ X8, 0x0, 0x1D46B14
	0x01D46B00 ADRP X0, 0x23AD000
	0x01D46B04 LDR X0, [X0 + 0x648]
	0x01D46B08 BL 0x1C16CF4
	0x01D46B0C MOVZ W8, 0x1
	0x01D46B10 STRB W8, [X20 + 0x76E]
	0x01D46B14 LDR X0, [X21]
	0x01D46B18 LDR W8, [X0 + 0xE0]
	0x01D46B1C CBNZ W8, 0x1D46B24
	0x01D46B20 BL 0x1C16DFC
	0x01D46B24 BL 0x1D32AF4
	0x01D46B28 MOV X20, X0
	0x01D46B2C BL 0x1D32B7C
	0x01D46B30 CBZ X20, 0x1D46B50
	0x01D46B34 MOV X1, X0
	0x01D46B38 MOV X0, X20
	0x01D46B3C MOV X2, X19
	0x01D46B40 LDP X20, X19, [X31 + 0x10]
	0x01D46B44 MOV X3, X31
	0x01D46B48 LDP X30, X21, [X31], #0x20
	0x01D46B4C B 0x1D6915C
	0x01D46B50 BL 0x1C16F20
	0x01D46B54 STR X30, [X31 - 0x20]!
	0x01D46B58 STP X20, X19, [X31 + 0x10]
	0x01D46B5C ADRP X20, 0x2692000
	0x01D46B60 LDRB W8, [X20 + 0x76F]
	0x01D46B64 MOV X19, X1
	0x01D46B68 TBNZ X8, 0x0, 0x1D46B80
	0x01D46B6C ADRP X0, 0x23AD000
	0x01D46B70 LDR X0, [X0 + 0xDC8]
	0x01D46B74 BL 0x1C16CF4
	0x01D46B78 MOVZ W8, 0x1
	0x01D46B7C STRB W8, [X20 + 0x76F]
	0x01D46B80 CBZ X19, 0x1D46B9C
	0x01D46B84 LDR X8, [X19 + 0x48]
	0x01D46B88 CBZ X8, 0x1D46B9C
	0x01D46B8C LDR X0, [X8 + 0x50]
	0x01D46B90 LDP X20, X19, [X31 + 0x10]
	0x01D46B94 LDR X30, [X31], #0x20
	0x01D46B98 RET
	0x01D46B9C BL 0x1C16F20
	0x01D46BA0 MOV X1, X31
	0x01D46BA4 B 0x33BDD8C
	0x01D46BA8 SUB X31, X31, 0x80
	0x01D46BAC STP X29, X30, [X31 + 0x20]
	0x01D46BB0 STP X28, X27, [X31 + 0x30]
	0x01D46BB4 STP X26, X25, [X31 + 0x40]
	0x01D46BB8 STP X24, X23, [X31 + 0x50]
	0x01D46BBC STP X22, X21, [X31 + 0x60]
	0x01D46BC0 STP X20, X19, [X31 + 0x70]
	0x01D46BC4 ADRP X19, 0x2692000
	0x01D46BC8 LDRB W8, [X19 + 0x770]
	0x01D46BCC MOV X20, X1
	0x01D46BD0 MOV X25, X0
	0x01D46BD4 TBNZ X8, 0x0, 0x1D46D24
	0x01D46BD8 ADRP X0, 0x23AD000
	0x01D46BDC LDR X0, [X0 + 0xB58]
	0x01D46BE0 BL 0x1C16CF4
	0x01D46BE4 ADRP X0, 0x23AE000
	0x01D46BE8 LDR X0, [X0 + 0x410]
	0x01D46BEC BL 0x1C16CF4
	0x01D46BF0 ADRP X0, 0x23AE000
	0x01D46BF4 LDR X0, [X0 + 0x5D0]
	0x01D46BF8 BL 0x1C16CF4
	0x01D46BFC ADRP X0, 0x23AD000
	0x01D46C00 LDR X0, [X0 + 0x710]
	0x01D46C04 BL 0x1C16CF4
	0x01D46C08 ADRP X0, 0x23AD000
	0x01D46C0C LDR X0, [X0 + 0x718]
	0x01D46C10 BL 0x1C16CF4
	0x01D46C14 ADRP X0, 0x23AD000
	0x01D46C18 LDR X0, [X0 + 0x720]
	0x01D46C1C BL 0x1C16CF4
	0x01D46C20 ADRP X0, 0x23AD000
	0x01D46C24 LDR X0, [X0 + 0xE00]
	0x01D46C28 BL 0x1C16CF4
	0x01D46C2C ADRP X0, 0x23AE000
	0x01D46C30 LDR X0, [X0 + 0x418]
	0x01D46C34 BL 0x1C16CF4
	0x01D46C38 ADRP X0, 0x23AD000
	0x01D46C3C LDR X0, [X0 + 0xE18]
	0x01D46C40 BL 0x1C16CF4
	0x01D46C44 ADRP X0, 0x23AD000
	0x01D46C48 LDR X0, [X0 + 0x758]
	0x01D46C4C BL 0x1C16CF4
	0x01D46C50 ADRP X0, 0x23AD000
	0x01D46C54 LDR X0, [X0 + 0x788]
	0x01D46C58 BL 0x1C16CF4
	0x01D46C5C ADRP X0, 0x23AE000
	0x01D46C60 LDR X0, [X0 + 0x468]
	0x01D46C64 BL 0x1C16CF4
	0x01D46C68 ADRP X0, 0x23AE000
	0x01D46C6C LDR X0, [X0 + 0x5D8]
	0x01D46C70 BL 0x1C16CF4
	0x01D46C74 ADRP X0, 0x23AE000
	0x01D46C78 LDR X0, [X0 + 0x470]
	0x01D46C7C BL 0x1C16CF4
	0x01D46C80 ADRP X0, 0x23AE000
	0x01D46C84 LDR X0, [X0 + 0x478]
	0x01D46C88 BL 0x1C16CF4
	0x01D46C8C ADRP X0, 0x23AD000
	0x01D46C90 LDR X0, [X0 + 0xAC8]
	0x01D46C94 BL 0x1C16CF4
	0x01D46C98 ADRP X0, 0x23AE000
	0x01D46C9C LDR X0, [X0 + 0x480]
	0x01D46CA0 BL 0x1C16CF4
	0x01D46CA4 ADRP X0, 0x23AE000
	0x01D46CA8 LDR X0, [X0 + 0x88]
	0x01D46CAC BL 0x1C16CF4
	0x01D46CB0 ADRP X0, 0x23AE000
	0x01D46CB4 LDR X0, [X0 + 0x5E0]
	0x01D46CB8 BL 0x1C16CF4
	0x01D46CBC ADRP X0, 0x23AD000
	0x01D46CC0 LDR X0, [X0 + 0xBA8]
	0x01D46CC4 BL 0x1C16CF4
	0x01D46CC8 ADRP X0, 0x23AE000
	0x01D46CCC LDR X0, [X0 + 0x5E8]
	0x01D46CD0 BL 0x1C16CF4
	0x01D46CD4 ADRP X0, 0x23AE000
	0x01D46CD8 LDR X0, [X0 + 0x5F0]
	0x01D46CDC BL 0x1C16CF4
	0x01D46CE0 ADRP X0, 0x23AE000
	0x01D46CE4 LDR X0, [X0 + 0x5F8]
	0x01D46CE8 BL 0x1C16CF4
	0x01D46CEC ADRP X0, 0x23AE000
	0x01D46CF0 LDR X0, [X0 + 0x4A8]
	0x01D46CF4 BL 0x1C16CF4
	0x01D46CF8 ADRP X0, 0x23AE000
	0x01D46CFC LDR X0, [X0 + 0x600]
	0x01D46D00 BL 0x1C16CF4
	0x01D46D04 ADRP X0, 0x23AE000
	0x01D46D08 LDR X0, [X0 + 0x608]
	0x01D46D0C BL 0x1C16CF4
	0x01D46D10 ADRP X0, 0x23AE000
	0x01D46D14 LDR X0, [X0 + 0x610]
	0x01D46D18 BL 0x1C16CF4
	0x01D46D1C MOVZ W8, 0x1
	0x01D46D20 STRB W8, [X19 + 0x770]
	0x01D46D24 CBZ X20, 0x1D47288
	0x01D46D28 MOV X0, X20
	0x01D46D2C MOV X1, X31
	0x01D46D30 BL 0x34D072C
	0x01D46D34 TBZ X0, 0x0, 0x1D46E3C
	0x01D46D38 MOV X0, X20
	0x01D46D3C MOV X1, X31
	0x01D46D40 BL 0x34D072C
	0x01D46D44 ADRP X8, 0x23AD000
	0x01D46D48 LDR X8, [X8 + 0xB58]
	0x01D46D4C AND W9, W0, 0x1
	0x01D46D50 ADD X1, X31, 0x1C
	0x01D46D54 STRB W9, [X31 + 0x1C]
	0x01D46D58 LDR X8, [X8]
	0x01D46D5C MOV X0, X8
	0x01D46D60 BL 0x1C16E04
	0x01D46D64 ADRP X9, 0x23AE000
	0x01D46D68 LDR W8, [X20 + 0x10]
	0x01D46D6C LDR X9, [X9 + 0x468]
	0x01D46D70 MOV X21, X0
	0x01D46D74 ADD X1, X31, 0x10
	0x01D46D78 STR W8, [X31 + 0x10]
	0x01D46D7C LDR X0, [X9]
	0x01D46D80 BL 0x1C16E04
	0x01D46D84 ADRP X8, 0x23AE000
	0x01D46D88 LDR X8, [X8 + 0x5E0]
	0x01D46D8C MOV X2, X0
	0x01D46D90 MOV X1, X21
	0x01D46D94 MOV X3, X31
	0x01D46D98 LDR X8, [X8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x2693000
	011 Move W8, [X21+1895]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {92}
	018 Move X0, 0x23AE000
	019 Move X0, [X0+2896]
	020 Call 0x1C17CF4
	021 Move X0, 0x23AE000
	022 Move X0, [X0+2904]
	023 Call 0x1C17CF4
	024 Move X0, 0x23AE000
	025 Move X0, [X0+1808]
	026 Call 0x1C17CF4
	027 Move X0, 0x23AE000
	028 Move X0, [X0+1816]
	029 Call 0x1C17CF4
	030 Move X0, 0x23AE000
	031 Move X0, [X0+1824]
	032 Call 0x1C17CF4
	033 Move X0, 0x23AE000
	034 Move X0, [X0+2000]
	035 Call 0x1C17CF4
	036 Move X0, 0x23AF000
	037 Move X0, [X0+1120]
	038 Call 0x1C17CF4
	039 Move X0, 0x23AE000
	040 Move X0, [X0+1928]
	041 Call 0x1C17CF4
	042 Move X0, 0x23AF000
	043 Move X0, [X0+1128]
	044 Call 0x1C17CF4
	045 Move X0, 0x23AF000
	046 Move X0, [X0+1136]
	047 Call 0x1C17CF4
	048 Move X0, 0x23AF000
	049 Move X0, [X0+1144]
	050 Call 0x1C17CF4
	051 Move X0, 0x23AF000
	052 Move X0, [X0+1152]
	053 Call 0x1C17CF4
	054 Move X0, 0x23AF000
	055 Move X0, [X0+136]
	056 Call 0x1C17CF4
	057 Move X0, 0x23AF000
	058 Move X0, [X0+1160]
	059 Call 0x1C17CF4
	060 Move X0, 0x23AF000
	061 Move X0, [X0+1168]
	062 Call 0x1C17CF4
	063 Move X0, 0x23AE000
	064 Move X0, [X0+2984]
	065 Call 0x1C17CF4
	066 Move X0, 0x23AF000
	067 Move X0, [X0+1176]
	068 Call 0x1C17CF4
	069 Move X0, 0x23AF000
	070 Move X0, [X0+1184]
	071 Call 0x1C17CF4
	072 Move X0, 0x23AF000
	073 Move X0, [X0+1192]
	074 Call 0x1C17CF4
	075 Move X0, 0x23AF000
	076 Move X0, [X0+1096]
	077 Call 0x1C17CF4
	078 Move X0, 0x23AF000
	079 Move X0, [X0+1200]
	080 Call 0x1C17CF4
	081 Move X0, 0x23AF000
	082 Move X0, [X0+1208]
	083 Call 0x1C17CF4
	084 Move X0, 0x23AF000
	085 Move X0, [X0+1216]
	086 Call 0x1C17CF4
	087 Move X0, 0x23AF000
	088 Move X0, [X0+1224]
	089 Call 0x1C17CF4
	090 Move W8, 1
	091 Move [X21+1895], W8
	092 Compare X20, 0
	093 JumpIfEqual {422}
	094 Move X0, X20
	095 Move X1, X31
	096 Call Message.get_IsError, X0
	097 Move X8, [X20]
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {314}
	102 Move X9, [X8+376]
	103 Move X1, [X8+384]
	104 Move X0, X20
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Compare X0, 0
	107 JumpIfEqual {109}
	108 Move X0, [X0+24]
	109 Move X1, X31
	110 Call JSON.Parse, X0
	111 Move X8, 0x23AF000
	112 Move X8, [X8+1120]
	113 Move X21, X0
	114 Move X8, [X8]
	115 Move W9, [X8+224]
	116 Compare W9, 0
	117 JumpIfNotEqual {120}
	118 Move X0, X8
	119 Call 0x1C17DFC
	120 Move X0, X21
	121 Move X1, X31
	122 Move X2, X31
	123 Call JSONNode.op_Inequality, X0, X1
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfNotEqual {239}
	128 Compare X21, 0
	129 JumpIfEqual {422}
	130 Move X9, 0x23AF000
	131 Move X8, [X21]
	132 Move X9, [X9+1224]
	133 Move X0, X21
	134 Move X1, [X9]
	135 Move X9, [X8+424]
	136 Move X2, [X8+432]
	137 NotImplemented "Instruction BLR not yet implemented."
	138 Compare X0, 0
	139 JumpIfEqual {422}
	140 Move X8, [X0]
	141 Move X9, [X8+456]
	142 Move X1, [X8+464]
	143 NotImplemented "Instruction BLR not yet implemented."
	144 Move X8, 0x23AF000
	145 Move X8, [X8+1184]
	146 Move X2, X31
	147 Move X1, [X8]
	148 Call String.op_Equality, X0, X1
	149 Move TEMP, X0
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfNotEqual {239}
	153 Move X22, 0x23AE000
	154 Move X22, [X22+1824]
	155 Move X0, [X22]
	156 Call 0x1C17F10
	157 Move X23, 0x23AE000
	158 Move X23, [X23+1816]
	159 Move X21, X0
	160 Move X1, [X23]
	161 Call Dictionary`2<Object, Object>..ctor, X0
	162 Move X8, [X19+16]
	163 Compare X8, 0
	164 JumpIfEqual {422}
	165 Compare X21, 0
	166 JumpIfEqual {422}
	167 Move X2, [X8+88]
	168 Move X8, 0x23AF000
	169 Move X24, 0x23AE000
	170 Move X8, [X8+1096]
	171 Move X24, [X24+1808]
	172 Move X0, X21
	173 Move X1, [X8]
	174 Move X3, [X24]
	175 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	176 Move X8, 0x23AE000
	177 Move X8, [X8+2896]
	178 Move X0, [X8]
	179 Move W8, [X0+224]
	180 Compare W8, 0
	181 JumpIfNotEqual {183}
	182 Call 0x1C17DFC
	183 Move X8, 0x23AF000
	184 Move X8, [X8+1208]
	185 Move X1, X21
	186 Move X2, X31
	187 Move X0, [X8]
	188 Call Analytics.Track, X0, X1
	189 Move X8, [X19+16]
	190 Compare X8, 0
	191 JumpIfEqual {422}
	192 Move W9, 4
	193 Move [X8+100], W9
	194 Move X0, [X22]
	195 Call 0x1C17F10
	196 Move X1, [X23]
	197 Move X21, X0
	198 Call Dictionary`2<Object, Object>..ctor, X0
	199 Move X8, [X19+16]
	200 Compare X8, 0
	201 JumpIfEqual {422}
	202 Compare X21, 0
	203 JumpIfEqual {422}
	204 Move X2, [X8+88]
	205 Move X8, 0x23AF000
	206 Move X8, [X8+1168]
	207 Move X3, [X24]
	208 Move X0, X21
	209 Move X1, [X8]
	210 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	211 Move X8, 0x23AE000
	212 Move X8, [X8+1928]
	213 Move X0, [X8]
	214 Move W8, [X0+224]
	215 Compare W8, 0
	216 JumpIfNotEqual {218}
	217 Call 0x1C17DFC
	218 Move X8, 0x23AF000
	219 Move X9, 0x23AF000
	220 Move X10, 0x23AF000
	221 Move X8, [X8+1216]
	222 Move X9, [X9+1160]
	223 Move X10, [X10+136]
	224 Move W0, 0x4000
	225 Move X1, [X8]
	226 Move X3, [X9]
	227 Move X4, [X10]
	228 Move W5, 49
	229 Move X2, X21
	230 Move X6, X31
	231 Call Log.Info, X0, X1, X2, X3, X4, X5
	232 Move X0, [X19+16]
	233 Compare X0, 0
	234 JumpIfEqual {422}
	235 Move X8, [X0]
	236 Move X9, [X8+440]
	237 Move X1, [X8+448]
	238 NotImplemented "Instruction BLR not yet implemented."
	239 Move X8, [X19+16]
	240 Compare X8, 0
	241 JumpIfEqual {422}
	242 Move W9, 5
	243 Move X0, X20
	244 Move X1, X31
	245 Move [X8+100], W9
	246 Call Message.get_IsError, X0
	247 Move X8, 0x23AE000
	248 Move X8, [X8+2904]
	249 And W9, W0, 1
	250 Add X1, X31, 12
	251 Move [X31+12], W9
	252 Move X8, [X8]
	253 Move X0, X8
	254 Call 0x1C17E04
	255 Move X9, 0x23AF000
	256 Move W8, [X20+16]
	257 Move X9, [X9+1128]
	258 Move X21, X0
	259 Add X1, X31, 0
	260 Move [X31], W8
	261 Move X0, [X9]
	262 Call 0x1C17E04
	263 Move X8, 0x23AF000
	264 Move X8, [X8+1200]
	265 Move X2, X0
	266 Move X1, X21
	267 Move X3, X31
	268 Move X8, [X8]
	269 Move X0, X8
	270 Call String.Format, X0, X1, X2
	271 Move X8, 0x23AE000
	272 Move X8, [X8+1824]
	273 Move X21, X0
	274 Move X8, [X8]
	275 Move X0, X8
	276 Call 0x1C17F10
	277 Move X8, 0x23AE000
	278 Move X8, [X8+1816]
	279 Move X22, X0
	280 Move X1, [X8]
	281 Call Dictionary`2<Object, Object>..ctor, X0
	282 Move X8, [X19+16]
	283 Compare X8, 0
	284 JumpIfEqual {422}
	285 Compare X22, 0
	286 JumpIfEqual {422}
	287 Move X2, [X8+88]
	288 Move X8, 0x23AF000
	289 Move X24, 0x23AE000
	290 Move X8, [X8+1168]
	291 Move X24, [X24+1808]
	292 Move X0, X22
	293 Move X1, [X8]
	294 Move X3, [X24]
	295 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	296 Move X8, [X20]
	297 Move X0, X20
	298 Move X9, [X8+376]
	299 Move X1, [X8+384]
	300 NotImplemented "Instruction BLR not yet implemented."
	301 Move X8, 0x23AE000
	302 Move X8, [X8+2984]
	303 Move X23, [X8]
	304 Compare X0, 0
	305 JumpIfEqual {319}
	306 Move X8, 0x23AF000
	307 Move W1, [X0+16]
	308 Move X8, [X8+1136]
	309 Add X0, X31, 0
	310 Move [X31], X31
	311 Move X2, [X8]
	312 Call Nullable`1<Int32>..ctor, X0, X1
	313 Move X8, [X31]
	314 Move X9, [X8+1256]
	315 Move X1, [X8+1264]
	316 Move X0, X20
	317 NotImplemented "Instruction BLR not yet implemented."
	318 Move [X19+24], X0
	319 Move X8, X31
	320 Move X25, 0x23AF000
	321 Move X25, [X25+1144]
	322 Add X1, X31, 0
	323 Move [X31], X8
	324 Move X0, [X25]
	325 Call 0x1C17E04
	326 Move X3, [X24]
	327 Move X2, X0
	328 Move X0, X22
	329 Move X1, X23
	330 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	331 Move X8, [X20]
	332 Move X0, X20
	333 Move X9, [X8+376]
	334 Move X1, [X8+384]
	335 NotImplemented "Instruction BLR not yet implemented."
	336 Move X8, 0x23AF000
	337 Move X8, [X8+1192]
	338 Move X23, [X8]
	339 Compare X0, 0
	340 JumpIfEqual {349}
	341 Move X8, 0x23AF000
	342 Move W1, [X0+20]
	343 Move X8, [X8+1136]
	344 Add X0, X31, 0
	345 Move [X31], X31
	346 Move X2, [X8]
	347 Call Nullable`1<Int32>..ctor, X0, X1
	348 Move X8, [X31]
	349 Move X8, X31
	350 Move X0, [X25]
	351 Add X1, X31, 0
	352 Move [X31], X8
	353 Call 0x1C17E04
	354 Move X3, [X24]
	355 Move X2, X0
	356 Move X0, X22
	357 Move X1, X23
	358 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	359 Move X8, [X20]
	360 Move X0, X20
	361 Move X9, [X8+376]
	362 Move X1, [X8+384]
	363 NotImplemented "Instruction BLR not yet implemented."
	364 Move X8, 0x23AF000
	365 Move X8, [X8+1152]
	366 Move X1, [X8]
	367 Compare X0, 0
	368 JumpIfEqual {370}
	369 Move X2, [X0+24]
	370 Move X2, X31
	371 Move X3, [X24]
	372 Move X0, X22
	373 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	374 Move X8, 0x23AE000
	375 Move X8, [X8+1928]
	376 Move X0, [X8]
	377 Move W8, [X0+224]
	378 Compare W8, 0
	379 JumpIfNotEqual {381}
	380 Call 0x1C17DFC
	381 Move X8, 0x23AF000
	382 Move X9, 0x23AF000
	383 Move X8, [X8+1160]
	384 Move X9, [X9+136]
	385 Move W0, 0x4000
	386 Move W5, 56
	387 Move X3, [X8]
	388 Move X4, [X9]
	389 Move X1, X21
	390 Move X2, X22
	391 Move X6, X31
	392 Call Log.Error, X0, X1, X2, X3, X4, X5
	393 Move X8, 0x23AE000
	394 Move X20, [X19+16]
	395 Move X8, [X8+2000]
	396 Move X0, [X8]
	397 Call 0x1C17F10
	398 Move X8, 0x23AF000
	399 Move X8, [X8+1176]
	400 Move X2, X31
	401 Move X21, X0
	402 Move X1, [X8]
	403 Call Exception..ctor, X0, X1
	404 Compare X20, 0
	405 JumpIfEqual {422}
	406 Move X0, X20
	407 Move X1, X21
	408 Move X2, X31
	409 Call Command.Abort, X0, X1
	410 Move W8, 1
	411 Move [X19+32], W8
	412 Move X20, [X31+64]
	413 Move X19, [X31+72]
	414 Move X22, [X31+48]
	415 Move X21, [X31+56]
	416 Move X24, [X31+32]
	417 Move X23, [X31+40]
	418 Move X30, [X31+16]
	419 Move X25, [X31+24]
	420 Add X31, X31, 80
	421 Return 
	422 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<AnimalCompany.API.AnimalCompanyAPI/ValidatePurchaseMetaQuestResponse> <ExecuteAsync>b__1(System.Threading.CancellationToken token)

Disassembly:
	0x01D46D9C MOV X0, X8
	0x01D46DA0 BL 0x3227BD4
	0x01D46DA4 ADRP X8, 0x23AD000
	0x01D46DA8 LDR X8, [X8 + 0x720]
	0x01D46DAC MOV X21, X0
	0x01D46DB0 LDR X8, [X8]
	0x01D46DB4 MOV X0, X8
	0x01D46DB8 BL 0x1C16F10
	0x01D46DBC ADRP X8, 0x23AD000
	0x01D46DC0 LDR X8, [X8 + 0x718]
	0x01D46DC4 MOV X22, X0
	0x01D46DC8 LDR X1, [X8]
	0x01D46DCC BL 0x2AA4804
	0x01D46DD0 CBZ X22, 0x1D47288
	0x01D46DD4 ADRP X8, 0x23AE000
	0x01D46DD8 ADRP X19, 0x23AD000
	0x01D46DDC LDR X2, [X25 + 0x10]
	0x01D46DE0 LDR X8, [X8 + 0x5E8]
	0x01D46DE4 LDR X19, [X19 + 0x710]
	0x01D46DE8 MOV X0, X22
	0x01D46DEC LDR X1, [X8]
	0x01D46DF0 LDR X3, [X19]
	0x01D46DF4 BL 0x2AA5098
	0x01D46DF8 LDR X8, [X20]
	0x01D46DFC MOV X0, X20
	0x01D46E00 LDP X9, X1, [X8 + 0x178]
	0x01D46E04 BLR X9
	0x01D46E08 ADRP X8, 0x23AD000
	0x01D46E0C LDR X8, [X8 + 0xBA8]
	0x01D46E10 LDR X23, [X8]
	0x01D46E14 CBZ X0, 0x1D470E8
	0x01D46E18 ADRP X8, 0x23AE000
	0x01D46E1C LDR W1, [X0 + 0x10]
	0x01D46E20 LDR X8, [X8 + 0x470]
	0x01D46E24 ADD X0, X31, 0x10
	0x01D46E28 STR X31, [X31 + 0x10]
	0x01D46E2C LDR X2, [X8]
	0x01D46E30 BL 0x24341FC
	0x01D46E34 LDR X8, [X31 + 0x10]
	0x01D46E38 B 0x1D470EC
	0x01D46E3C LDR X0, [X20 + 0x28]
	0x01D46E40 STR X0, [X25 + 0x20]
	0x01D46E44 CBZ X0, 0x1D47288
	0x01D46E48 ADRP X8, 0x23AE000
	0x01D46E4C LDR X8, [X8 + 0x5D0]
	0x01D46E50 LDR X1, [X8]
	0x01D46E54 BL 0x29B459C
	0x01D46E58 ADRP X8, 0x23AD000
	0x01D46E5C LDR X8, [X8 + 0x758]
	0x01D46E60 STR W0, [X31 + 0x10]
	0x01D46E64 ADD X1, X31, 0x10
	0x01D46E68 LDR X8, [X8]
	0x01D46E6C MOV X0, X8
	0x01D46E70 BL 0x1C16E04
	0x01D46E74 ADRP X8, 0x23AE000
	0x01D46E78 LDR X8, [X8 + 0x5F8]
	0x01D46E7C MOV X1, X0
	0x01D46E80 MOV X2, X31
	0x01D46E84 LDR X8, [X8]
	0x01D46E88 MOV X0, X8
	0x01D46E8C BL 0x321EFD0
	0x01D46E90 ADRP X22, 0x23AD000
	0x01D46E94 LDR X22, [X22 + 0x788]
	0x01D46E98 MOV X20, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2693000
	009 Move X23, 0x23AE000
	010 Move W8, [X21+1896]
	011 Move X23, [X23+1608]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x23AE000
	019 Move X0, [X0+1608]
	020 Call 0x1C17CF4
	021 Move X0, 0x23AF000
	022 Move X0, [X0+504]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+1896], W8
	026 Move X0, [X23]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Call App.get_api
	032 Move X21, X0
	033 Call App.get_apiSession
	034 Move X24, 0x2693000
	035 Move W8, [X24+1927]
	036 Move X22, X0
	037 Compare W8, 0
	038 JumpIfNotEqual {44}
	039 Move X0, 0x23AE000
	040 Move X0, [X0+1608]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X24+1927], W8
	044 Move X0, [X23]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X23]
	050 Move X8, [X0+184]
	051 Move X8, [X8]
	052 Compare X8, 0
	053 JumpIfEqual {80}
	054 Move X8, [X8+184]
	055 Compare X8, 0
	056 JumpIfEqual {80}
	057 Move X9, 0x23AF000
	058 Move X9, [X9+504]
	059 Move X0, [X8+72]
	060 Move X1, [X9]
	061 Call StatePrimitive`1<Object>.op_Implicit, X0
	062 Compare X21, 0
	063 JumpIfEqual {80}
	064 Move X2, X0
	065 Move X3, [X20+24]
	066 Move X0, X21
	067 Move X1, X22
	068 Move X5, X19
	069 Move X20, [X31+48]
	070 Move X19, [X31+56]
	071 Move X22, [X31+32]
	072 Move X21, [X31+40]
	073 Move X24, [X31+16]
	074 Move X23, [X31+24]
	075 Move X4, X31
	076 Move X6, X31
	077 Move X30, [X31+64]
	078 Call AnimalCompanyAPI.ValidatePurchaseMetaQuestAsync, X0, X1, X2, X3, X4, X5
	079 Return X0
	080 Call 0x1C17F20

