Type: AnimalCompany.LobbyCurrencyResetTimer/<LobbyCurrencyResetTimerCmd>d__6

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01DDE76C BL 0x1DDE3F0
	0x01DDE770 SUB W8, W0, 0x1
	0x01DDE774 CMP W8, 0x4
	0x01DDE778 B.HI 0x1DDE810
	0x01DDE77C ADRP X9, 0xFFFFFFFFFED4F000
	0x01DDE780 ADD X9, X9, 0x945
	0x01DDE784 ADR X10, 0x10
	0x01DDE788 LDRB W11, [X9, X8, LSL]
	0x01DDE78C ADD X10, X10, X11, 0x2, LSL
	0x01DDE790 BR X10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01DDE82C MOV X0, X20

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01DDE830 BL 0x1DDE950
	0x01DDE834 LDR X20, [X19 + 0x1B8]
	0x01DDE838 MOV X0, X19
	0x01DDE83C BL 0x1DDE3F0
	0x01DDE840 CBZ X20, 0x1DDE8AC
	0x01DDE844 CMP W0, 0x5
	0x01DDE848 FMOV S0, 1.5
	0x01DDE84C FMOV S1, 3.5
	0x01DDE850 FCSEL S0, S1, S0, EQ
	0x01DDE854 STR S0, [X20 + 0x108]
	0x01DDE858 LDR X20, [X19 + 0x1B8]
	0x01DDE85C MOV X0, X19
	0x01DDE860 BL 0x1DDE3F0
	0x01DDE864 CMP W0, 0x4
	0x01DDE868 B.NE 0x1DDE874
	0x01DDE86C MOVZ W21, 0x1
	0x01DDE870 B 0x1DDE884
	0x01DDE874 MOV X0, X19
	0x01DDE878 BL 0x1DDE3F0
	0x01DDE87C CMP W0, 0x5
	0x01DDE880 CSET W21, EQ
	0x01DDE884 MOV X0, X19
	0x01DDE888 BL 0x1DDE3F0
	0x01DDE88C CBZ X20, 0x1DDE8AC
	0x01DDE890 CMP W0, 0x4
	0x01DDE894 MOV X0, X20
	0x01DDE898 LDP X20, X19, [X31 + 0x10]
	0x01DDE89C CSET W2, EQ
	0x01DDE8A0 MOV W1, W21
	0x01DDE8A4 LDP X30, X21, [X31], #0x20
	0x01DDE8A8 B 0x1DDE9F4
	0x01DDE8AC BL 0x1C16F20
	0x01DDE8B0 STP X30, X19, [X31 - 0x10]!
	0x01DDE8B4 MOV X1, X31
	0x01DDE8B8 MOV X19, X0
	0x01DDE8BC BL 0x1DE89FC
	0x01DDE8C0 LDR X0, [X19 + 0x40]
	0x01DDE8C4 CBZ X0, 0x1DDE8E8
	0x01DDE8C8 MOV X1, X31
	0x01DDE8CC BL 0x1E93668
	0x01DDE8D0 TBZ X0, 0x0, 0x1DDE8E0
	0x01DDE8D4 MOV X0, X19
	0x01DDE8D8 LDP X30, X19, [X31], #0x10
	0x01DDE8DC B 0x1DDE6B0
	0x01DDE8E0 LDP X30, X19, [X31], #0x10
	0x01DDE8E4 RET
	0x01DDE8E8 BL 0x1C16F20
	0x01DDE8EC STP X30, X19, [X31 - 0x10]!
	0x01DDE8F0 MOV X1, X31
	0x01DDE8F4 MOV X19, X0
	0x01DDE8F8 BL 0x1DE8BF8
	0x01DDE8FC LDR X0, [X19 + 0x40]
	0x01DDE900 CBZ X0, 0x1DDE928
	0x01DDE904 MOV X1, X31
	0x01DDE908 BL 0x1E93668
	0x01DDE90C TBZ X0, 0x0, 0x1DDE920
	0x01DDE910 MOVZ W1, 0x6
	0x01DDE914 MOV X0, X19
	0x01DDE918 LDP X30, X19, [X31], #0x10
	0x01DDE91C B 0x1DDE450
	0x01DDE920 LDP X30, X19, [X31], #0x10
	0x01DDE924 RET
	0x01DDE928 BL 0x1C16F20
	0x01DDE92C STR X1, [X0 + 0x1A8]
	0x01DDE930 RET
	0x01DDE934 STR X30, [X31 - 0x10]!
	0x01DDE938 LDR X0, [X0 + 0xE8]
	0x01DDE93C CBZ X0, 0x1DDE94C
	0x01DDE940 MOV X1, X31
	0x01DDE944 LDR X30, [X31], #0x10
	0x01DDE948 B 0x3BFCAC0
	0x01DDE94C BL 0x1C16F20
	0x01DDE950 STR D8, [X31 - 0x20]!
	0x01DDE954 STR X30, [X31 + 0x8]
	0x01DDE958 STP X20, X19, [X31 + 0x10]
	0x01DDE95C MOV X19, X0
	0x01DDE960 LDR X0, [X0 + 0xF8]
	0x01DDE964 CBZ X0, 0x1DDE9C8
	0x01DDE968 MOV W20, W1
	0x01DDE96C MOV X1, X31
	0x01DDE970 MOV V8.16B, V0.16B
	0x01DDE974 BL 0x3BFCC80
	0x01DDE978 TBZ X20, 0x0, 0x1DDE994
	0x01DDE97C TBNZ X0, 0x0, 0x1DDE9A8
	0x01DDE980 LDR X0, [X19 + 0xF8]
	0x01DDE984 CBZ X0, 0x1DDE9C8
	0x01DDE988 MOV X1, X31
	0x01DDE98C BL 0x3BFCAC0
	0x01DDE990 B 0x1DDE9A8
	0x01DDE994 TBZ X0, 0x0, 0x1DDE9A8
	0x01DDE998 LDR X0, [X19 + 0xF8]
	0x01DDE99C CBZ X0, 0x1DDE9C8
	0x01DDE9A0 MOV X1, X31
	0x01DDE9A4 BL 0x3BFCC04
	0x01DDE9A8 LDR X0, [X19 + 0xF8]
	0x01DDE9AC CBZ X0, 0x1DDE9C8
	0x01DDE9B0 LDP X20, X19, [X31 + 0x10]
	0x01DDE9B4 LDR X30, [X31 + 0x8]
	0x01DDE9B8 MOV V0.16B, V8.16B
	0x01DDE9BC MOV X1, X31
	0x01DDE9C0 LDR V8, [X31], #0x20
	0x01DDE9C4 B 0x3BFC8DC
	0x01DDE9C8 BL 0x1C16F20
	0x01DDE9CC STR X30, [X31 - 0x10]!
	0x01DDE9D0 CBZ X0, 0x1DDE9F0
	0x01DDE9D4 ANDS W31, W1, 0x1
	0x01DDE9D8 FMOV S0, 1.5
	0x01DDE9DC FMOV S1, 3.5
	0x01DDE9E0 FCSEL S0, S1, S0, NE
	0x01DDE9E4 STR S0, [X0 + 0x108]
	0x01DDE9E8 LDR X30, [X31], #0x10
	0x01DDE9EC RET
	0x01DDE9F0 BL 0x1C16F20
	0x01DDE9F4 STP X30, X23, [X31 - 0x30]!
	0x01DDE9F8 STP X22, X21, [X31 + 0x10]
	0x01DDE9FC STP X20, X19, [X31 + 0x20]
	0x01DDEA00 ADRP X22, 0x25FA000
	0x01DDEA04 LDRB W8, [X22 + 0xC86]
	0x01DDEA08 MOV W19, W2
	0x01DDEA0C MOV W21, W1
	0x01DDEA10 MOV X20, X0
	0x01DDEA14 TBNZ X8, 0x0, 0x1DDEA2C
	0x01DDEA18 ADRP X0, 0x231A000
	0x01DDEA1C LDR X0, [X0 + 0xC10]
	0x01DDEA20 BL 0x1C16CF4
	0x01DDEA24 MOVZ W8, 0x1
	0x01DDEA28 STRB W8, [X22 + 0xC86]
	0x01DDEA2C LDR X0, [X20 + 0xD8]
	0x01DDEA30 CBZ X0, 0x1DDEB00
	0x01DDEA34 ADRP X23, 0x231A000
	0x01DDEA38 LDR X23, [X23 + 0xC10]
	0x01DDEA3C MOV X1, X31
	0x01DDEA40 BL 0x3C1341C
	0x01DDEA44 LDR X8, [X23]
	0x01DDEA48 MOV X22, X0
	0x01DDEA4C LDR W9, [X8 + 0xE0]
	0x01DDEA50 CBZ W9, 0x1DDEA6C
	0x01DDEA54 TBZ X21, 0x0, 0x1DDEA7C
	0x01DDEA58 ADD X9, X20, 0xAC
	0x01DDEA5C ADD X10, X20, 0xB0
	0x01DDEA60 ADD X11, X20, 0xB4
	0x01DDEA64 ADD X12, X20, 0xB8
	0x01DDEA68 B 0x1DDEA8C
	0x01DDEA6C MOV X0, X8
	0x01DDEA70 BL 0x1C16DFC
	0x01DDEA74 LDR X8, [X23]
	0x01DDEA78 TBNZ X21, 0x0, 0x1DDEA58
	0x01DDEA7C ADD X9, X20, 0xBC
	0x01DDEA80 ADD X10, X20, 0xC0
	0x01DDEA84 ADD X11, X20, 0xC4
	0x01DDEA88 ADD X12, X20, 0xC8
	0x01DDEA8C CBZ X22, 0x1DDEB00
	0x01DDEA90 LDR X8, [X8 + 0xB8]
	0x01DDEA94 LDR V3, [X12]
	0x01DDEA98 LDR V2, [X11]
	0x01DDEA9C LDR V1, [X10]
	0x01DDEAA0 LDR W1, [X8]
	0x01DDEAA4 LDR V0, [X9]
	0x01DDEAA8 MOV X0, X22
	0x01DDEAAC MOV X2, X31
	0x01DDEAB0 BL 0x3C14988
	0x01DDEAB4 LDR X0, [X20 + 0xD0]
	0x01DDEAB8 CBZ X0, 0x1DDEB00
	0x01DDEABC AND W1, W21, 0x1
	0x01DDEAC0 MOV X2, X31
	0x01DDEAC4 BL 0x3C32410
	0x01DDEAC8 TBZ X21, 0x0, 0x1DDEAF0
	0x01DDEACC TBZ X19, 0x0, 0x1DDEAF0
	0x01DDEAD0 LDR X0, [X20 + 0xD0]
	0x01DDEAD4 CBZ X0, 0x1DDEB00
	0x01DDEAD8 LDP X20, X19, [X31 + 0x20]
	0x01DDEADC LDP X22, X21, [X31 + 0x10]
	0x01DDEAE0 FMOV S0, W31
	0x01DDEAE4 MOV X1, X31
	0x01DDEAE8 LDP X30, X23, [X31], #0x30
	0x01DDEAEC B 0x3C16928
	0x01DDEAF0 LDP X20, X19, [X31 + 0x20]
	0x01DDEAF4 LDP X22, X21, [X31 + 0x10]
	0x01DDEAF8 LDP X30, X23, [X31], #0x30
	0x01DDEAFC RET
	0x01DDEB00 BL 0x1C16F20
	0x01DDEB04 SUB X31, X31, 0x40
	0x01DDEB08 STR X30, [X31 + 0x20]
	0x01DDEB0C STP X20, X19, [X31 + 0x30]
	0x01DDEB10 ADRP X20, 0x25FA000
	0x01DDEB14 LDRB W8, [X20 + 0xC7B]
	0x01DDEB18 MOV X19, X0
	0x01DDEB1C TBNZ X8, 0x0, 0x1DDEB34
	0x01DDEB20 ADRP X0, 0x231A000
	0x01DDEB24 LDR X0, [X0 + 0xC18]
	0x01DDEB28 BL 0x1C16CF4
	0x01DDEB2C MOVZ W8, 0x1
	0x01DDEB30 STRB W8, [X20 + 0xC7B]
	0x01DDEB34 MOV X0, X19
	0x01DDEB38 MOV X1, X31
	0x01DDEB3C BL 0x1DE9038
	0x01DDEB40 MOV X0, X19
	0x01DDEB44 BL 0x1DDE3F0
	0x01DDEB48 SUB W8, W0, 0x1
	0x01DDEB4C CMP W8, 0x4
	0x01DDEB50 B.HI 0x1DDEBB4
	0x01DDEB54 ADRP X9, 0xFFFFFFFFFED4F000
	0x01DDEB58 ADD X9, X9, 0x94A
	0x01DDEB5C ADR X10, 0x10
	0x01DDEB60 LDRB W11, [X9, X8, LSL]
	0x01DDEB64 ADD X10, X10, X11, 0x2, LSL
	0x01DDEB68 BR X10
	0x01DDEB6C LDR X8, [X19]
	0x01DDEB70 LDR X9, [X8 + 0x388]
	0x01DDEB74 LDR X1, [X8 + 0x390]
	0x01DDEB78 B 0x1DDEBAC
	0x01DDEB7C MOV X0, X19
	0x01DDEB80 BL 0x1DDEC18
	0x01DDEB84 B 0x1DDEBB4
	0x01DDEB88 MOV X0, X19
	0x01DDEB8C BL 0x1DDF664
	0x01DDEB90 B 0x1DDEBB4
	0x01DDEB94 MOV X0, X19
	0x01DDEB98 BL 0x1DDFB88
	0x01DDEB9C B 0x1DDEBB4
	0x01DDEBA0 LDR X8, [X19]
	0x01DDEBA4 LDR X9, [X8 + 0x3C8]
	0x01DDEBA8 LDR X1, [X8 + 0x3D0]
	0x01DDEBAC MOV X0, X19
	0x01DDEBB0 BLR X9
	0x01DDEBB4 BL 0x1DD6AE8
	0x01DDEBB8 TBZ X0, 0x0, 0x1DDEC08
	0x01DDEBBC LDR X20, [X19 + 0x198]
	0x01DDEBC0 CBZ X20, 0x1DDEC08
	0x01DDEBC4 MOV X0, X19
	0x01DDEBC8 BL 0x1DDE3F0
	0x01DDEBCC ADRP X8, 0x231A000
	0x01DDEBD0 LDR X8, [X8 + 0xC18]
	0x01DDEBD4 MOVN X9, 0x0
	0x01DDEBD8 STR W0, [X31 + 0x18]
	0x01DDEBDC ADD X0, X31, 0x8
	0x01DDEBE0 LDR X8, [X8]
	0x01DDEBE4 MOV X1, X31
	0x01DDEBE8 STP X8, X9, [X31 + 0x8]
	0x01DDEBEC BL 0x33B162C
	0x01DDEBF0 LDR X8, [X20 + 0x40]
	0x01DDEBF4 LDR X9, [X20 + 0x18]
	0x01DDEBF8 LDR X2, [X20 + 0x28]
	0x01DDEBFC MOV X1, X0
	0x01DDEC00 MOV X0, X8
	0x01DDEC04 BLR X9
	0x01DDEC08 LDP X20, X19, [X31 + 0x30]
	0x01DDEC0C LDR X30, [X31 + 0x20]
	0x01DDEC10 ADD X31, X31, 0x40
	0x01DDEC14 RET
	0x01DDEC18 SUB X31, X31, 0xE0
	0x01DDEC1C STP D15, D14, [X31 + 0x60]
	0x01DDEC20 STP D13, D12, [X31 + 0x70]
	0x01DDEC24 STP D11, D10, [X31 + 0x80]
	0x01DDEC28 STP D9, D8, [X31 + 0x90]
	0x01DDEC2C STR X30, [X31 + 0xA0]
	0x01DDEC30 STP X24, X23, [X31 + 0xB0]
	0x01DDEC34 STP X22, X21, [X31 + 0xC0]
	0x01DDEC38 STP X20, X19, [X31 + 0xD0]
	0x01DDEC3C ADRP X20, 0x25FA000
	0x01DDEC40 LDRB W8, [X20 + 0xC7D]
	0x01DDEC44 MOV X19, X0
	0x01DDEC48 TBNZ X8, 0x0, 0x1DDEC9C
	0x01DDEC4C ADRP X0, 0x231A000
	0x01DDEC50 LDR X0, [X0 + 0xC20]
	0x01DDEC54 BL 0x1C16CF4
	0x01DDEC58 ADRP X0, 0x231A000
	0x01DDEC5C LDR X0, [X0 + 0xC28]
	0x01DDEC60 BL 0x1C16CF4
	0x01DDEC64 ADRP X0, 0x231A000
	0x01DDEC68 LDR X0, [X0 + 0xC30]
	0x01DDEC6C BL 0x1C16CF4
	0x01DDEC70 ADRP X0, 0x231A000
	0x01DDEC74 LDR X0, [X0 + 0xC38]
	0x01DDEC78 BL 0x1C16CF4
	0x01DDEC7C ADRP X0, 0x231A000
	0x01DDEC80 LDR X0, [X0 + 0xC40]
	0x01DDEC84 BL 0x1C16CF4
	0x01DDEC88 ADRP X0, 0x2315000
	0x01DDEC8C LDR X0, [X0 + 0x598]
	0x01DDEC90 BL 0x1C16CF4
	0x01DDEC94 MOVZ W8, 0x1
	0x01DDEC98 STRB W8, [X20 + 0xC7D]
	0x01DDEC9C STR X31, [X31 + 0xA8]
	0x01DDECA0 STP X31, X31, [X31 + 0x40]
	0x01DDECA4 STR X31, [X31 + 0x50]
	0x01DDECA8 STR X31, [X31 + 0x38]
	0x01DDECAC LDR X0, [X19 + 0xD0]
	0x01DDECB0 CBZ X0, 0x1DDF5E4
	0x01DDECB4 MOV X1, X31
	0x01DDECB8 BL 0x3C3F58C
	0x01DDECBC LDR X8, [X19 + 0xC0]
	0x01DDECC0 CBZ X8, 0x1DDF5E4
	0x01DDECC4 LDR X8, [X8 + 0x78]
	0x01DDECC8 CBZ X8, 0x1DDF5E4
	0x01DDECCC LDR W9, [X8 + 0x18]
	0x01DDECD0 CBZ W9, 0x1DDF5E8
	0x01DDECD4 ADRP X22, 0x231A000
	0x01DDECD8 LDR X22, [X22 + 0xC40]
	0x01DDECDC LDR V11, [X8 + 0x20]
	0x01DDECE0 MOV V8.16B, V0.16B
	0x01DDECE4 MOV V9.16B, V1.16B
	0x01DDECE8 LDR X0, [X22]
	0x01DDECEC MOV V10.16B, V2.16B
	0x01DDECF0 LDR W9, [X0 + 0xE0]
	0x01DDECF4 CBNZ W9, 0x1DDECFC
	0x01DDECF8 BL 0x1C16DFC
	0x01DDECFC ADD X1, X31, 0xA8
	0x01DDED00 MOV X0, X19
	0x01DDED04 MOV V0.16B, V8.16B
	0x01DDED08 MOV V1.16B, V9.16B
	0x01DDED0C MOV V2.16B, V10.16B
	0x01DDED10 MOV V3.16B, V11.16B
	0x01DDED14 MOV X2, X31
	0x01DDED18 BL 0x1DE9804
	0x01DDED1C TBZ X0, 0x0, 0x1DDED9C
	0x01DDED20 LDR X0, [X31 + 0xA8]
	0x01DDED24 CBZ X0, 0x1DDF5E4
	0x01DDED28 ADRP X8, 0x231A000
	0x01DDED2C LDR X8, [X8 + 0xC38]
	0x01DDED30 LDR X1, [X8]
	0x01DDED34 ADD X8, X31, 0x20
	0x01DDED38 BL 0x301CB58
	0x01DDED3C ADRP X9, 0x231A000
	0x01DDED40 LDR V0, [X31 + 0x2]
	0x01DDED44 LDR X8, [X31 + 0x30]
	0x01DDED48 LDR X9, [X9 + 0xC28]
	0x01DDED4C STR V0, [X31 + 0x4]
	0x01DDED50 STR X8, [X31 + 0x50]
	0x01DDED54 LDR X1, [X9]
	0x01DDED58 ADD X0, X31, 0x40
	0x01DDED5C BL 0x2BC4350
	0x01DDED60 TBZ X0, 0x0, 0x1DDED88
	0x01DDED64 LDR X1, [X31 + 0x50]
	0x01DDED68 MOV X0, X19
	0x01DDED6C BL 0x1DE0324
	0x01DDED70 ADRP X8, 0x231A000
	0x01DDED74 LDR X8, [X8 + 0xC20]
	0x01DDED78 ADD X0, X31, 0x40
	0x01DDED7C LDR X1, [X8]
	0x01DDED80 BL 0x2BC434C
	0x01DDED84 B 0x1DDF5BC
	0x01DDED88 ADRP X8, 0x231A000
	0x01DDED8C LDR X8, [X8 + 0xC20]
	0x01DDED90 ADD X0, X31, 0x40
	0x01DDED94 LDR X1, [X8]
	0x01DDED98 BL 0x2BC434C
	0x01DDED9C ADRP X21, 0x2315000
	0x01DDEDA0 LDR X21, [X21 + 0x598]
	0x01DDEDA4 LDR X20, [X19 + 0x1A8]
	0x01DDEDA8 LDR X0, [X21]
	0x01DDEDAC LDR W8, [X0 + 0xE0]
	0x01DDEDB0 CBNZ W8, 0x1DDEDB8
	0x01DDEDB4 BL 0x1C16DFC
	0x01DDEDB8 MOV X0, X20
	0x01DDEDBC MOV X1, X31
	0x01DDEDC0 MOV X2, X31
	0x01DDEDC4 BL 0x3C354F8
	0x01DDEDC8 FMOV S11, 1
	0x01DDEDCC TBZ X0, 0x0, 0x1DDF004
	0x01DDEDD0 LDR X0, [X19 + 0xD0]
	0x01DDEDD4 CBZ X0, 0x1DDF5E4
	0x01DDEDD8 MOV X1, X31
	0x01DDEDDC BL 0x3C3F58C
	0x01DDEDE0 LDR X0, [X19 + 0x1A8]
	0x01DDEDE4 CBZ X0, 0x1DDF5E4
	0x01DDEDE8 MOV X1, X31
	0x01DDEDEC MOV V8.16B, V0.16B
	0x01DDEDF0 MOV V9.16B, V1.16B
	0x01DDEDF4 MOV V10.16B, V2.16B
	0x01DDEDF8 BL 0x3C32E90
	0x01DDEDFC CBZ X0, 0x1DDF5E4
	0x01DDEE00 MOV X1, X31
	0x01DDEE04 BL 0x3C3F58C
	0x01DDEE08 ADRP X20, 0x25FA000
	0x01DDEE0C LDRB W8, [X20 + 0x784]
	0x01DDEE10 MOV V11.16B, V0.16B
	0x01DDEE14 MOV V12.16B, V1.16B
	0x01DDEE18 MOV V13.16B, V2.16B
	0x01DDEE1C CBNZ W8, 0x1DDEE34
	0x01DDEE20 ADRP X0, 0x2315000
	0x01DDEE24 LDR X0, [X0 + 0x5A8]
	0x01DDEE28 BL 0x1C16CF4
	0x01DDEE2C MOVZ W8, 0x1
	0x01DDEE30 STRB W8, [X20 + 0x784]
	0x01DDEE34 ADRP X20, 0x2315000
	0x01DDEE38 LDR X20, [X20 + 0x5A8]
	0x01DDEE3C LDR X0, [X20]
	0x01DDEE40 LDR W8, [X0 + 0xE0]
	0x01DDEE44 CBNZ W8, 0x1DDEE4C
	0x01DDEE48 BL 0x1C16DFC
	0x01DDEE4C LDR X8, [X19 + 0x1A8]
	0x01DDEE50 CBZ X8, 0x1DDF5E4
	0x01DDEE54 LDR X0, [X8 + 0x80]
	0x01DDEE58 CBZ X0, 0x1DDF5E4
	0x01DDEE5C FSUB S8, S8, S11
	0x01DDEE60 FSUB S9, S9, S12
	0x01DDEE64 FSUB S10, S10, S13
	0x01DDEE68 FMUL S0, S8, S8
	0x01DDEE6C FMUL S1, S9, S9
	0x01DDEE70 FADD S0, S0, S1
	0x01DDEE74 FMUL S1, S10, S10
	0x01DDEE78 FADD S0, S1, S0
	0x01DDEE7C MOV X1, X31
	0x01DDEE80 FSQRT S11, S0
	0x01DDEE84 BL 0x1D8D0A8
	0x01DDEE88 TBZ X0, 0x0, 0x1DDF004
	0x01DDEE8C LDR X0, [X19 + 0x1A8]
	0x01DDEE90 CBZ X0, 0x1DDF5E4
	0x01DDEE94 MOV X1, X31
	0x01DDEE98 BL 0x3C32E90
	0x01DDEE9C CBZ X0, 0x1DDF5E4
	0x01DDEEA0 MOV X1, X31
	0x01DDEEA4 FDIV S13, S8, S11
	0x01DDEEA8 FDIV S14, S9, S11
	0x01DDEEAC FDIV S12, S10, S11
	0x01DDEEB0 BL 0x3C3FA04
	0x01DDEEB4 ADRP X23, 0x25FA000
	0x01DDEEB8 LDRB W8, [X23 + 0xA24]
	0x01DDEEBC MOV V8.16B, V0.16B
	0x01DDEEC0 MOV V9.16B, V1.16B
	0x01DDEEC4 MOV V10.16B, V2.16B
	0x01DDEEC8 CBNZ W8, 0x1DDEEE0
	0x01DDEECC ADRP X0, 0x2315000
	0x01DDEED0 LDR X0, [X0 + 0x5A8]
	0x01DDEED4 BL 0x1C16CF4
	0x01DDEED8 MOVZ W8, 0x1
	0x01DDEEDC STRB W8, [X23 + 0xA24]
	0x01DDEEE0 LDR X0, [X20]
	0x01DDEEE4 FMUL S0, S13, S13
	0x01DDEEE8 FMUL S1, S14, S14
	0x01DDEEEC FADD S0, S0, S1
	0x01DDEEF0 FMUL S1, S12, S12
	0x01DDEEF4 LDR W8, [X0 + 0xE0]
	0x01DDEEF8 FADD S15, S1, S0
	0x01DDEEFC FMUL S0, S8, S8
	0x01DDEF00 FMUL S1, S9, S9
	0x01DDEF04 FADD S0, S0, S1
	0x01DDEF08 FMUL S1, S10, S10
	0x01DDEF0C STR S13, [X31 + 0x1C]
	0x01DDEF10 MOV V13.16B, V12.16B
	0x01DDEF14 FADD S12, S1, S0
	0x01DDEF18 CBNZ W8, 0x1DDEF20
	0x01DDEF1C BL 0x1C16DFC
	0x01DDEF20 ADRP X8, 0xFFFFFFFFFED0B000
	0x01DDEF24 LDR V1, [X8 + 0xFE8]
	0x01DDEF28 FMUL S0, S15, S12
	0x01DDEF2C FSQRT S0, S0
	0x01DDEF30 FMOV S15, W31
	0x01DDEF34 FCMP S0, S1
	0x01DDEF38 B.MI 0x1DDEF94
	0x01DDEF3C LDR V1, [X31 + 0x1C]
	0x01DDEF40 LDR X0, [X20]
	0x01DDEF44 FMUL S2, S14, S9
	0x01DDEF48 FMUL S3, S13, S10
	0x01DDEF4C FMUL S1, S1, S8
	0x01DDEF50 FADD S1, S1, S2
	0x01DDEF54 FADD S1, S3, S1
	0x01DDEF58 LDR W8, [X0 + 0xE0]
	0x01DDEF5C FDIV S0, S1, S0
	0x01DDEF60 FMOV S1, 1
	0x01DDEF64 FMOV S2, -1
	0x01DDEF68 FMIN S1, S0, S1
	0x01DDEF6C FCMP S0, S2

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], D8
	003 Move [X31+48], X30
	004 Move [X31+56], X25
	005 Move [X31+64], X24
	006 Move [X31+72], X23
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Move X20, 0x25FB000
	012 Move W8, [X20+3192]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {65}
	018 Move X0, 0x2316000
	019 Move X0, [X0+1608]
	020 Call 0x1C17CF4
	021 Move X0, 0x2317000
	022 Move X0, [X0+2544]
	023 Call 0x1C17CF4
	024 Move X0, 0x231B000
	025 Move X0, [X0+2936]
	026 Call 0x1C17CF4
	027 Move X0, 0x2316000
	028 Move X0, [X0+1880]
	029 Call 0x1C17CF4
	030 Move X0, 0x2316000
	031 Move X0, [X0+2512]
	032 Call 0x1C17CF4
	033 Move X0, 0x2317000
	034 Move X0, [X0+3168]
	035 Call 0x1C17CF4
	036 Move X0, 0x2318000
	037 Move X0, [X0+1392]
	038 Call 0x1C17CF4
	039 Move X0, 0x231B000
	040 Move X0, [X0+2944]
	041 Call 0x1C17CF4
	042 Move X0, 0x231B000
	043 Move X0, [X0+2952]
	044 Call 0x1C17CF4
	045 Move X0, 0x231B000
	046 Move X0, [X0+2960]
	047 Call 0x1C17CF4
	048 Move X0, 0x231B000
	049 Move X0, [X0+2968]
	050 Call 0x1C17CF4
	051 Move X0, 0x231B000
	052 Move X0, [X0+2976]
	053 Call 0x1C17CF4
	054 Move X0, 0x231B000
	055 Move X0, [X0+2984]
	056 Call 0x1C17CF4
	057 Move X0, 0x2316000
	058 Move X0, [X0+2440]
	059 Call 0x1C17CF4
	060 Move X0, 0x231B000
	061 Move X0, [X0+2992]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X20+3192], W8
	065 Move [X31+40], X31
	066 Move [X31+16], X31
	067 Move [X31+24], X31
	068 Move W8, [X19+16]
	069 Move X25, 0x2316000
	070 Move X24, 0x2317000
	071 Move X23, 0x2318000
	072 Move X25, [X25+1608]
	073 Move X22, [X19+32]
	074 Move X24, [X24+2544]
	075 Move X23, [X23+1392]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Compare W8, 0
	078 JumpIfNotEqual {397}
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W8, TEMP
	082 Move [X19+16], W8
	083 Move X0, [X25]
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Move X20, 0x25FB000
	089 Move W8, [X20+1927]
	090 Compare W8, 0
	091 JumpIfNotEqual {97}
	092 Move X0, 0x2316000
	093 Move X0, [X0+1608]
	094 Call 0x1C17CF4
	095 Move W8, 1
	096 Move [X20+1927], W8
	097 Move X0, [X25]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {103}
	101 Call 0x1C17DFC
	102 Move X0, [X25]
	103 Move X8, [X0+184]
	104 Move X8, [X8]
	105 Compare X8, 0
	106 JumpIfEqual {504}
	107 Move X8, [X8+160]
	108 Compare X8, 0
	109 JumpIfEqual {504}
	110 Move X8, [X8+80]
	111 Move X0, [X24]
	112 Move [X31+16], X8
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 Add X0, X31, 16
	118 Move X1, X31
	119 Call DateTime.ToLocalTime, X0
	120 Move W8, [X20+1927]
	121 Move [X31+40], X0
	122 Compare W8, 0
	123 JumpIfNotEqual {129}
	124 Move X0, 0x2316000
	125 Move X0, [X0+1608]
	126 Call 0x1C17CF4
	127 Move W8, 1
	128 Move [X20+1927], W8
	129 Move X0, [X25]
	130 Move W8, [X0+224]
	131 Compare W8, 0
	132 JumpIfNotEqual {135}
	133 Call 0x1C17DFC
	134 Move X0, [X25]
	135 Move X8, [X0+184]
	136 Move X8, [X8]
	137 Compare X8, 0
	138 JumpIfEqual {504}
	139 Move X8, [X8+160]
	140 Compare X8, 0
	141 JumpIfEqual {504}
	142 Move X20, [X8+80]
	143 Move X0, X31
	144 Call DateTime.get_UtcNow
	145 Move X1, X0
	146 Move X0, X20
	147 Move X2, X31
	148 Call DateTime.op_Subtraction, X0, X1
	149 Move [X31+24], X0
	150 Compare X22, 0
	151 JumpIfEqual {504}
	152 Move X0, [X23]
	153 Move X20, [X22+40]
	154 Move W8, [X0+224]
	155 Compare W8, 0
	156 JumpIfNotEqual {158}
	157 Call 0x1C17DFC
	158 Add X0, X31, 24
	159 Move X1, X31
	160 Call TimeSpan.get_TotalDays, X0
	161 Move X8, 0x231B000
	162 Move X8, [X8+2992]
	163 Move D1, 1
	164 NotImplemented "Instruction FCMP not yet implemented."
	165 Move X21, [X8]
	166 Move X8, 0x231B000
	167 Move X8, [X8+2960]
	168 Move X1, [X8]
	169 Move TEMP, 0
	170 Not TEMP
	171 Move W8, TEMP
	172 Move [X19+16], W8
	173 Move X0, [X24]
	174 Move W8, [X0+224]
	175 Compare W8, 0
	176 JumpIfNotEqual {178}
	177 Call 0x1C17DFC
	178 Add X0, X31, 40
	179 Move X1, X31
	180 Call DateTime.get_DayOfWeek, X0
	181 Move X8, 0x231B000
	182 Move X8, [X8+2936]
	183 Move [X31+12], W0
	184 Add X1, X31, 12
	185 Move X8, [X8]
	186 Move X0, X8
	187 Call 0x1C17E04
	188 Move X8, 0x231B000
	189 Move X8, [X8+2952]
	190 Move X1, X0
	191 Move X2, X31
	192 Move X8, [X8]
	193 Move X0, X8
	194 Call String.Format, X0, X1
	195 Move X1, X0
	196 Move X0, X21
	197 Move X2, X31
	198 Call String.Concat, X0, X1
	199 Compare X20, 0
	200 JumpIfEqual {504}
	201 Move X8, [X20]
	202 Move X1, X0
	203 Move X0, X20
	204 Move X9, [X8+1368]
	205 Move X2, [X8+1376]
	206 NotImplemented "Instruction BLR not yet implemented."
	207 Move X0, [X25]
	208 Move W8, [X0+224]
	209 Compare W8, 0
	210 JumpIfNotEqual {212}
	211 Call 0x1C17DFC
	212 Move X20, 0x25FB000
	213 Move W8, [X20+1927]
	214 Compare W8, 0
	215 JumpIfNotEqual {221}
	216 Move X0, 0x2316000
	217 Move X0, [X0+1608]
	218 Call 0x1C17CF4
	219 Move W8, 1
	220 Move [X20+1927], W8
	221 Move X0, [X25]
	222 Move W8, [X0+224]
	223 Compare W8, 0
	224 JumpIfNotEqual {227}
	225 Call 0x1C17DFC
	226 Move X0, [X25]
	227 Move X8, [X0+184]
	228 Move X8, [X8]
	229 Compare X8, 0
	230 JumpIfEqual {504}
	231 Move X8, [X8+160]
	232 Compare X8, 0
	233 JumpIfEqual {504}
	234 Move X0, [X24]
	235 Move X20, [X8+80]
	236 Move W9, [X0+224]
	237 Compare W9, 0
	238 JumpIfNotEqual {240}
	239 Call 0x1C17DFC
	240 Move X0, X31
	241 Call DateTime.get_UtcNow
	242 Move X1, X0
	243 Move X0, X20
	244 Move X2, X31
	245 Call DateTime.op_Subtraction, X0, X1
	246 Move X8, [X23]
	247 Move [X31+24], X0
	248 Move W9, [X8+224]
	249 Compare W9, 0
	250 JumpIfNotEqual {253}
	251 Move X0, X8
	252 Call 0x1C17DFC
	253 Add X0, X31, 24
	254 Move X1, X31
	255 Call TimeSpan.get_TotalSeconds, X0
	256 NotImplemented "Instruction FCMP not yet implemented."
	257 Move X0, [X23]
	258 Move W8, [X0+224]
	259 Compare W8, 0
	260 JumpIfNotEqual {262}
	261 Call 0x1C17DFC
	262 Add X0, X31, 24
	263 Move X1, X31
	264 Call TimeSpan.get_TotalDays, X0
	265 Move D1, 1
	266 NotImplemented "Instruction FCMP not yet implemented."
	267 Move X8, 0x2316000
	268 Move X8, [X8+2512]
	269 Move W1, 4
	270 Move X0, [X8]
	271 Call 0x1C17D6C
	272 Move X8, [X23]
	273 Move X20, X0
	274 Move W9, [X8+224]
	275 Compare W9, 0
	276 JumpIfNotEqual {279}
	277 Move X0, X8
	278 Call 0x1C17DFC
	279 Add X0, X31, 24
	280 Move X1, X31
	281 Call TimeSpan.get_TotalDays, X0
	282 Move X23, 0x2316000
	283 Move X23, [X23+1880]
	284 Move X9, 0x7FF00000
	285 Move D1, X9
	286 NotImplemented "Instruction FCVTZS not yet implemented."
	287 Move X0, [X23]
	288 NotImplemented "Instruction FCMP not yet implemented."
	289 Move W9, 0x80000000
	290 NotImplemented "Instruction CSEL not yet implemented."
	291 Add X1, X31, 12
	292 Move [X31+12], W8
	293 Call 0x1C17E04
	294 Compare X20, 0
	295 JumpIfEqual {504}
	296 Move X21, X0
	297 Compare X0, 0
	298 JumpIfEqual {305}
	299 Move X8, [X20]
	300 Move X0, X21
	301 Move X1, [X8+64]
	302 Call 0x1C17E00
	303 Compare X0, 0
	304 JumpIfEqual {506}
	305 Move W8, [X20+24]
	306 Compare W8, 0
	307 JumpIfEqual {505}
	308 Add X0, X31, 24
	309 Move X1, X31
	310 Move [X20+32], X21
	311 Call TimeSpan.get_Hours, X0
	312 Move X8, [X23]
	313 Move [X31+8], W0
	314 Add X1, X31, 8
	315 Move X0, X8
	316 Call 0x1C17E04
	317 Move X21, X0
	318 Compare X0, 0
	319 JumpIfEqual {326}
	320 Move X8, [X20]
	321 Move X0, X21
	322 Move X1, [X8+64]
	323 Call 0x1C17E00
	324 Compare X0, 0
	325 JumpIfEqual {506}
	326 Move W8, [X20+24]
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Add X0, X31, 24
	329 Move X1, X31
	330 Move [X20+40], X21
	331 Call TimeSpan.get_Minutes, X0
	332 Move X8, [X23]
	333 Move [X31+4], W0
	334 Add X1, X31, 4
	335 Move X0, X8
	336 Call 0x1C17E04
	337 Move X21, X0
	338 Compare X0, 0
	339 JumpIfEqual {346}
	340 Move X8, [X20]
	341 Move X0, X21
	342 Move X1, [X8+64]
	343 Call 0x1C17E00
	344 Compare X0, 0
	345 JumpIfEqual {506}
	346 Move W8, [X20+24]
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Add X0, X31, 24
	349 Move X1, X31
	350 Move [X20+48], X21
	351 Call TimeSpan.get_Seconds, X0
	352 Move X8, [X23]
	353 Move [X31], W0
	354 Add X1, X31, 0
	355 Move X0, X8
	356 Call 0x1C17E04
	357 Move X21, X0
	358 Compare X0, 0
	359 JumpIfEqual {366}
	360 Move X8, [X20]
	361 Move X0, X21
	362 Move X1, [X8+64]
	363 Call 0x1C17E00
	364 Compare X0, 0
	365 JumpIfEqual {506}
	366 Move W8, [X20+24]
	367 NotImplemented "Instruction CMP not yet implemented."
	368 Move [X20+56], X21
	369 Move X8, 0x231B000
	370 Move X8, [X8+2968]
	371 Move X1, X20
	372 Move X2, X31
	373 Move X0, [X8]
	374 Call String.Format, X0, X1
	375 Compare X22, 0
	376 JumpIfEqual {504}
	377 Move X0, [X22+40]
	378 Compare X0, 0
	379 JumpIfEqual {504}
	380 Move X9, 0x231B000
	381 Move X8, [X0]
	382 Move X9, [X9+2944]
	383 Move X2, [X8+1376]
	384 Move X1, [X9]
	385 Move X9, [X8+1368]
	386 NotImplemented "Instruction BLR not yet implemented."
	387 Move X0, [X22+32]
	388 Compare X0, 0
	389 JumpIfEqual {504}
	390 Move X9, 0x2316000
	391 Move X8, [X0]
	392 Move X9, [X9+2440]
	393 Move X2, [X8+1376]
	394 Move X1, [X9]
	395 Move X9, [X8+1368]
	396 NotImplemented "Instruction BLR not yet implemented."
	397 Move W0, W31
	398 Move X0, [X23]
	399 Move W8, [X0+224]
	400 Compare W8, 0
	401 JumpIfNotEqual {403}
	402 Call 0x1C17DFC
	403 Add X0, X31, 24
	404 Move X1, X31
	405 Call TimeSpan.get_TotalHours, X0
	406 Move X0, [X23]
	407 Move V8, V0
	408 Move W8, [X0+224]
	409 Compare W8, 0
	410 JumpIfNotEqual {412}
	411 Call 0x1C17DFC
	412 Move D0, 1
	413 Add X0, X31, 24
	414 Move X1, X31
	415 NotImplemented "Instruction FCMP not yet implemented."
	416 Call TimeSpan.get_Hours, X0
	417 Move X23, 0x2316000
	418 Move X23, [X23+1880]
	419 Move [X31+12], W0
	420 Add X1, X31, 12
	421 Move X8, [X23]
	422 Move X0, X8
	423 Call 0x1C17E04
	424 Move X20, X0
	425 Add X0, X31, 24
	426 Move X1, X31
	427 Call TimeSpan.get_Minutes, X0
	428 Move X8, [X23]
	429 Move [X31+8], W0
	430 Add X1, X31, 8
	431 Move X0, X8
	432 Call 0x1C17E04
	433 Move X21, X0
	434 Add X0, X31, 24
	435 Move X1, X31
	436 Call TimeSpan.get_Seconds, X0
	437 Move X8, [X23]
	438 Move [X31+4], W0
	439 Add X1, X31, 4
	440 Move X0, X8
	441 Call 0x1C17E04
	442 Move X8, 0x231B000
	443 Move X8, [X8+2976]
	444 Move X3, X0
	445 Move X1, X20
	446 Move X2, X21
	447 Move X8, [X8]
	448 Move X4, X31
	449 Move X0, X8
	450 Call String.Format, X0, X1, X2, X3
	451 Call TimeSpan.get_Minutes, X0
	452 Move X21, 0x2316000
	453 Move X21, [X21+1880]
	454 Move [X31+12], W0
	455 Add X1, X31, 12
	456 Move X8, [X21]
	457 Move X0, X8
	458 Call 0x1C17E04
	459 Move X20, X0
	460 Add X0, X31, 24
	461 Move X1, X31
	462 Call TimeSpan.get_Seconds, X0
	463 Move X8, [X21]
	464 Move [X31+8], W0
	465 Add X1, X31, 8
	466 Move X0, X8
	467 Call 0x1C17E04
	468 Move X8, 0x231B000
	469 Move X8, [X8+2984]
	470 Move X2, X0
	471 Move X1, X20
	472 Move X3, X31
	473 Move X8, [X8]
	474 Move X0, X8
	475 Call String.Format, X0, X1, X2
	476 Move X1, X0
	477 Compare X22, 0
	478 JumpIfEqual {504}
	479 Move X0, [X22+32]
	480 Compare X0, 0
	481 JumpIfEqual {504}
	482 Move X8, [X0]
	483 Move X9, [X8+1368]
	484 Move X2, [X8+1376]
	485 NotImplemented "Instruction BLR not yet implemented."
	486 Move S0, 1
	487 Move W0, W31
	488 Move X1, X31
	489 Call Commands.WaitForSeconds, V0, X0
	490 Move [X19+24], X0
	491 Move W0, 1
	492 Move [X19+16], W0
	493 Move X20, [X31+96]
	494 Move X19, [X31+104]
	495 Move X22, [X31+80]
	496 Move X21, [X31+88]
	497 Move X24, [X31+64]
	498 Move X23, [X31+72]
	499 Move X30, [X31+48]
	500 Move X25, [X31+56]
	501 Move V8, [X31+32]
	502 Add X31, X31, 112
	503 Return X0
	504 Call 0x1C17F20
	505 Call 0x1C17F28
	506 Call 0x1C17F44
	507 Move X1, X31
	508 Call 0x1C17DEC

Method: SpatialSys.CommandLib.Command System.Collections.Generic.IEnumerator<SpatialSys.CommandLib.Command>.get_Current()

Disassembly:
	0x01DDEF70 FCSEL S8, S1, S2, PL
	0x01DDEF74 CBNZ W8, 0x1DDEF7C

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01DDEF78 BL 0x1C16DFC
	0x01DDEF7C FCVT S0, S8
	0x01DDEF80 BL 0x3EB1B80
	0x01DDEF84 ADRP X8, 0xFFFFFFFFFED0C000
	0x01DDEF88 LDR V1, [X8 + 0x448]
	0x00000000 INVALID
	0x01DDEF90 FMUL S15, S0, S1
	0x01DDEF94 LDR X8, [X19 + 0x1A8]
	0x01DDEF98 CBZ X8, 0x1DDF5E4
	0x01DDEF9C LDR X0, [X8 + 0x98]
	0x01DDEFA0 CBZ X0, 0x1DDF5E4
	0x01DDEFA4 MOV X1, X31
	0x01DDEFA8 BL 0x3C16A64
	0x01DDEFAC FCMP S11, S0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x2316000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x231B000
	011 Move X0, [X0+3000]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01DDEFB0 B.PL 0x1DDF004
	0x01DDEFB4 LDR X8, [X19 + 0x1A8]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

