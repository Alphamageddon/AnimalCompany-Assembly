Type: AnimalCompany.GameGen.Tile

Method: System.Void RenderTile(AnimalCompany.GameGen.Archetype archetype)

Disassembly:
	0x01E0FFA4 FMOV S0, 1
	0x01E0FFA8 FCSEL S0, S0, S4, GE
	0x01E0FFAC LDR V14, [X31], #0x60
	0x01E0FFB0 RET
	0x01E0FFB4 BL 0x1C16F20
	0x01E0FFB8 MOV X1, X31
	0x01E0FFBC B 0x33BDD8C
	0x01E0FFC0 STR X30, [X31 - 0x20]!
	0x01E0FFC4 STP X20, X19, [X31 + 0x10]
	0x01E0FFC8 ADRP X19, 0x25C9000
	0x01E0FFCC ADRP X20, 0x22EA000
	0x01E0FFD0 LDRB W8, [X19 + 0xDE3]
	0x01E0FFD4 LDR X20, [X20 + 0xE18]
	0x01E0FFD8 TBNZ X8, 0x0, 0x1E0FFF0
	0x01E0FFDC ADRP X0, 0x22EA000
	0x01E0FFE0 LDR X0, [X0 + 0xE18]
	0x01E0FFE4 BL 0x1C16CF4
	0x01E0FFE8 MOVZ W8, 0x1
	0x01E0FFEC STRB W8, [X19 + 0xDE3]
	0x01E0FFF0 LDR X0, [X20]
	0x01E0FFF4 BL 0x1C16F10
	0x01E0FFF8 MOV X1, X31
	0x01E0FFFC MOV X19, X0
	0x01E10000 BL 0x33BDD8C
	0x01E10004 LDR X8, [X20]
	0x01E10008 LDR X8, [X8 + 0xB8]
	0x01E1000C STR X19, [X8]
	0x01E10010 LDP X20, X19, [X31 + 0x10]
	0x01E10014 LDR X30, [X31], #0x20
	0x01E10018 RET
	0x01E1001C MOV X1, X31
	0x01E10020 B 0x33BDD8C
	0x01E10024 STR X30, [X31 - 0x10]!
	0x01E10028 CBZ X1, 0x1E10048
	0x01E1002C MOV X0, X1
	0x01E10030 MOV X1, X31
	0x01E10034 BL 0x3C32E90
	0x01E10038 CBZ X0, 0x1E10048
	0x01E1003C MOV X1, X31
	0x01E10040 LDR X30, [X31], #0x10
	0x01E10044 B 0x3C3F58C
	0x01E10048 BL 0x1C16F20
	0x01E1004C STR D8, [X31 - 0x40]!
	0x01E10050 STP X30, X23, [X31 + 0x10]
	0x01E10054 STP X22, X21, [X31 + 0x20]
	0x01E10058 STP X20, X19, [X31 + 0x30]
	0x01E1005C ADRP X21, 0x25C8000
	0x01E10060 LDRB W8, [X21 + 0xDE4]
	0x01E10064 MOV X20, X1
	0x01E10068 MOV X19, X0
	0x01E1006C TBNZ X8, 0x0, 0x1E100A8
	0x01E10070 ADRP X0, 0x22E9000
	0x01E10074 LDR X0, [X0 + 0xE20]
	0x01E10078 BL 0x1C16CF4
	0x01E1007C ADRP X0, 0x22E9000
	0x01E10080 LDR X0, [X0 + 0xE28]
	0x01E10084 BL 0x1C16CF4
	0x01E10088 ADRP X0, 0x22E9000
	0x01E1008C LDR X0, [X0 + 0xE30]
	0x01E10090 BL 0x1C16CF4
	0x01E10094 ADRP X0, 0x22E9000
	0x01E10098 LDR X0, [X0 + 0xE18]
	0x01E1009C BL 0x1C16CF4
	0x01E100A0 MOVZ W8, 0x1
	0x01E100A4 STRB W8, [X21 + 0xDE4]
	0x01E100A8 CBZ X20, 0x1E10178
	0x01E100AC MOV X0, X20
	0x01E100B0 MOV X1, X31
	0x01E100B4 BL 0x3C32E90
	0x01E100B8 CBZ X0, 0x1E10178
	0x01E100BC ADRP X22, 0x22E9000
	0x01E100C0 LDR X22, [X22 + 0xE18]
	0x01E100C4 MOV X1, X31
	0x01E100C8 BL 0x3C3F58C
	0x01E100CC LDR X0, [X22]
	0x01E100D0 LDR X19, [X19 + 0x10]
	0x01E100D4 MOV V8.16B, V0.16B
	0x01E100D8 LDR W8, [X0 + 0xE0]
	0x01E100DC CBNZ W8, 0x1E100E8
	0x01E100E0 BL 0x1C16DFC
	0x01E100E4 LDR X0, [X22]
	0x01E100E8 LDR X8, [X0 + 0xB8]
	0x01E100EC ADRP X23, 0x22E9000
	0x01E100F0 LDR X20, [X8 + 0x8]
	0x01E100F4 LDR X23, [X23 + 0xE20]
	0x01E100F8 CBNZ X20, 0x1E1014C
	0x01E100FC LDR W8, [X0 + 0xE0]
	0x01E10100 CBNZ W8, 0x1E1010C
	0x01E10104 BL 0x1C16DFC
	0x01E10108 LDR X0, [X22]
	0x01E1010C ADRP X9, 0x22E9000
	0x01E10110 LDR X8, [X0 + 0xB8]
	0x01E10114 LDR X9, [X9 + 0xE28]
	0x01E10118 LDR X21, [X8]
	0x01E1011C LDR X0, [X9]
	0x01E10120 BL 0x1C16F10
	0x01E10124 ADRP X8, 0x22E9000
	0x01E10128 LDR X8, [X8 + 0xE30]
	0x01E1012C MOV X1, X21
	0x01E10130 MOV X3, X31
	0x01E10134 MOV X20, X0
	0x01E10138 LDR X2, [X8]
	0x01E1013C BL 0x2D30ADC
	0x01E10140 LDR X8, [X22]
	0x01E10144 LDR X8, [X8 + 0xB8]
	0x01E10148 STR X20, [X8 + 0x8]
	0x01E1014C LDR X2, [X23]
	0x01E10150 MOV X0, X19
	0x01E10154 MOV X1, X20
	0x01E10158 BL 0x21C9768
	0x01E1015C LDP X20, X19, [X31 + 0x30]
	0x01E10160 LDP X22, X21, [X31 + 0x20]
	0x01E10164 LDP X30, X23, [X31 + 0x10]
	0x01E10168 FCMP S8, S0
	0x01E1016C CSET W0, EQ
	0x01E10170 LDR V8, [X31], #0x40
	0x01E10174 RET
	0x01E10178 BL 0x1C16F20
	0x01E1017C STR X30, [X31 - 0x50]!
	0x01E10180 STP X26, X25, [X31 + 0x10]
	0x01E10184 STP X24, X23, [X31 + 0x20]
	0x01E10188 STP X22, X21, [X31 + 0x30]
	0x01E1018C STP X20, X19, [X31 + 0x40]
	0x01E10190 ADRP X25, 0x25C8000
	0x01E10194 ADRP X26, 0x22E9000
	0x01E10198 ADRP X20, 0x22E9000
	0x01E1019C ADRP X24, 0x22E8000
	0x01E101A0 ADRP X23, 0x22E8000
	0x01E101A4 ADRP X22, 0x22E9000
	0x01E101A8 ADRP X21, 0x22E9000
	0x01E101AC LDR X26, [X26 + 0xE38]
	0x01E101B0 LDRB W8, [X25 + 0xDE5]
	0x01E101B4 LDR X20, [X20 + 0xE40]
	0x01E101B8 LDR X24, [X24 + 0xED8]
	0x01E101BC LDR X23, [X23 + 0xEE0]
	0x01E101C0 LDR X22, [X22 + 0xE48]
	0x01E101C4 LDR X21, [X21 + 0xE50]
	0x01E101C8 MOV X19, X0
	0x01E101CC TBNZ X8, 0x0, 0x1E10220
	0x01E101D0 ADRP X0, 0x22E9000
	0x01E101D4 LDR X0, [X0 + 0xE40]
	0x01E101D8 BL 0x1C16CF4
	0x01E101DC ADRP X0, 0x22E8000
	0x01E101E0 LDR X0, [X0 + 0xEE0]
	0x01E101E4 BL 0x1C16CF4
	0x01E101E8 ADRP X0, 0x22E9000
	0x01E101EC LDR X0, [X0 + 0xE50]
	0x01E101F0 BL 0x1C16CF4
	0x01E101F4 ADRP X0, 0x22E9000
	0x01E101F8 LDR X0, [X0 + 0xE48]
	0x01E101FC BL 0x1C16CF4
	0x01E10200 ADRP X0, 0x22E8000
	0x01E10204 LDR X0, [X0 + 0xED8]
	0x01E10208 BL 0x1C16CF4
	0x01E1020C ADRP X0, 0x22E9000
	0x01E10210 LDR X0, [X0 + 0xE38]
	0x01E10214 BL 0x1C16CF4
	0x01E10218 MOVZ W8, 0x1
	0x01E1021C STRB W8, [X25 + 0xDE5]
	0x01E10220 LDR X0, [X26]
	0x01E10224 BL 0x1C16F10
	0x01E10228 LDR X1, [X20]
	0x01E1022C MOV X20, X0
	0x01E10230 BL 0x301B7C4
	0x01E10234 STR X20, [X19 + 0x20]
	0x01E10238 LDR X0, [X24]
	0x01E1023C BL 0x1C16F10
	0x01E10240 LDR X1, [X23]
	0x01E10244 MOV X20, X0
	0x01E10248 BL 0x301B7C4
	0x01E1024C STR X20, [X19 + 0x28]
	0x01E10250 LDR X0, [X22]
	0x01E10254 BL 0x1C16F10
	0x01E10258 LDR X1, [X21]
	0x01E1025C MOV X20, X0
	0x01E10260 BL 0x301B7C4
	0x01E10264 STR X20, [X19 + 0x30]
	0x01E10268 MOV X0, X19
	0x01E1026C LDP X20, X19, [X31 + 0x40]
	0x01E10270 LDP X22, X21, [X31 + 0x30]
	0x01E10274 LDP X24, X23, [X31 + 0x20]
	0x01E10278 LDP X26, X25, [X31 + 0x10]
	0x01E1027C MOV X1, X31
	0x01E10280 LDR X30, [X31], #0x50
	0x01E10284 B 0x33BDD8C
	0x01E10288 STR X30, [X31 - 0x50]!
	0x01E1028C STP X26, X25, [X31 + 0x10]
	0x01E10290 STP X24, X23, [X31 + 0x20]
	0x01E10294 STP X22, X21, [X31 + 0x30]
	0x01E10298 STP X20, X19, [X31 + 0x40]
	0x01E1029C ADRP X25, 0x25C8000
	0x01E102A0 ADRP X26, 0x22E9000
	0x01E102A4 ADRP X20, 0x22E9000
	0x01E102A8 ADRP X24, 0x22E9000
	0x01E102AC ADRP X23, 0x22E9000
	0x01E102B0 ADRP X22, 0x22E9000
	0x01E102B4 ADRP X21, 0x22E9000
	0x01E102B8 LDR X26, [X26 + 0xE58]
	0x01E102BC LDRB W8, [X25 + 0xDE6]
	0x01E102C0 LDR X20, [X20 + 0xE60]
	0x01E102C4 LDR X24, [X24 + 0xE68]
	0x01E102C8 LDR X23, [X23 + 0xE70]
	0x01E102CC LDR X22, [X22 + 0xE78]
	0x01E102D0 LDR X21, [X21 + 0xE80]
	0x01E102D4 MOV X19, X0
	0x01E102D8 TBNZ X8, 0x0, 0x1E1032C
	0x01E102DC ADRP X0, 0x22E9000
	0x01E102E0 LDR X0, [X0 + 0xE60]
	0x01E102E4 BL 0x1C16CF4
	0x01E102E8 ADRP X0, 0x22E9000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x25CA000
	009 Move X22, 0x22EB000
	010 Move W8, [X21+3546]
	011 Move X22, [X22+3464]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0x22EB000
	019 Move X0, [X0+3464]
	020 Call 0x1C17CF4
	021 Move X0, 0x22E7000
	022 Move X0, [X0+336]
	023 Call 0x1C17CF4
	024 Move X0, 0x22EB000
	025 Move X0, [X0+3472]
	026 Call 0x1C17CF4
	027 Move X0, 0x22E5000
	028 Move X0, [X0+2648]
	029 Call 0x1C17CF4
	030 Move X0, 0x22EA000
	031 Move X0, [X0+3480]
	032 Call 0x1C17CF4
	033 Move X0, 0x22E4000
	034 Move X0, [X0+1432]
	035 Call 0x1C17CF4
	036 Move X0, 0x22EA000
	037 Move X0, [X0+3488]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+3546], W8
	041 Move X2, [X22]
	042 Move W1, 1
	043 Move X0, X20
	044 Call 0x21A55B8, X0, X1
	045 Compare X0, 0
	046 JumpIfEqual {235}
	047 Move W8, [X0+24]
	048 Move X21, X0
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X24, 0x22EA000
	051 Move X24, [X24+3480]
	052 Move W23, W31
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Add X8, X21, W23
	055 Move X22, [X8+32]
	056 Compare X22, 0
	057 JumpIfEqual {235}
	058 Move X8, [X22]
	059 Move X1, [X24]
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Compare X9, 0
	062 JumpIfEqual {69}
	063 Move X10, [X8+176]
	064 Add X10, X10, 8
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Subtract X9, X9, 1
	068 Add X10, X10, 16
	069 Move X0, X22
	070 Move W2, W31
	071 Call 0x1C5D788
	072 NotImplemented "Instruction LDRSW not yet implemented."
	073 Add X8, X8, X9
	074 Add X0, X8, 312
	075 Move X8, [X0]
	076 Move X1, [X0+8]
	077 Move X0, X22
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Move W8, [X21+24]
	080 Add W23, W23, 1
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Compare X19, 0
	083 JumpIfEqual {235}
	084 Move X8, 0x22E4000
	085 Move X8, [X8+1432]
	086 Move X21, [X19+48]
	087 Move X0, [X8]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Move X0, X21
	093 Move X1, X31
	094 Move X2, X31
	095 Call Object.op_Inequality, X0, X1
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {227}
	100 Move X0, [X19+48]
	101 Compare X0, 0
	102 JumpIfEqual {235}
	103 Move X1, X31
	104 Call Object.get_name, X0
	105 Move X8, 0x22EA000
	106 Move X8, [X8+3488]
	107 Move X1, X0
	108 Move X2, X31
	109 Move X8, [X8]
	110 Move X0, X8
	111 Call String.Concat, X0, X1
	112 Move X8, 0x22E4000
	113 Move X8, [X8+2648]
	114 Move X22, X0
	115 Move X8, [X8]
	116 Move X0, X8
	117 Call 0x1C17F10
	118 Move X1, X22
	119 Move X2, X31
	120 Move X21, X0
	121 Call GameObject..ctor, X0, X1
	122 Compare X21, 0
	123 JumpIfEqual {235}
	124 Move X0, X21
	125 Move X1, X31
	126 Call GameObject.get_transform, X0
	127 Move X22, X0
	128 Move X0, X20
	129 Move X1, X31
	130 Call Component.get_transform, X0
	131 Compare X22, 0
	132 JumpIfEqual {235}
	133 Move X1, X0
	134 Move X0, X22
	135 Move X2, X31
	136 Call Transform.set_parent, X0, X1
	137 Move X0, X21
	138 Move X1, X31
	139 Call GameObject.get_transform, X0
	140 Move X23, 0x25C9000
	141 Move W8, [X23+1923]
	142 Move X22, X0
	143 Compare W8, 0
	144 JumpIfNotEqual {150}
	145 Move X0, 0x22E4000
	146 Move X0, [X0+1440]
	147 Call 0x1C17CF4
	148 Move W8, 1
	149 Move [X23+1923], W8
	150 Compare X22, 0
	151 JumpIfEqual {235}
	152 Move X8, 0x22E4000
	153 Move X8, [X8+1440]
	154 Move X0, X22
	155 Move X1, X31
	156 Move X8, [X8]
	157 Move X8, [X8+184]
	158 Move S1, [X8+4]
	159 Move S2, [X8+8]
	160 Move V0, [X8]
	161 Call Transform.set_localPosition, X0, X1
	162 Move X0, X21
	163 Move X1, X31
	164 Call GameObject.get_transform, X0
	165 Move X23, 0x25C9000
	166 Move W8, [X23+1939]
	167 Move X22, X0
	168 Compare W8, 0
	169 JumpIfNotEqual {175}
	170 Move X0, 0x22E5000
	171 Move X0, [X0+1448]
	172 Call 0x1C17CF4
	173 Move W8, 1
	174 Move [X23+1939], W8
	175 Compare X22, 0
	176 JumpIfEqual {235}
	177 Move X8, 0x22E5000
	178 Move X8, [X8+1448]
	179 Move X0, X22
	180 Move X1, X31
	181 Move X8, [X8]
	182 Move X8, [X8+184]
	183 Move S2, [X8+8]
	184 Move S3, [X8+12]
	185 Move S0, [X8]
	186 Move S1, [X8+4]
	187 Call Transform.set_localRotation, X0, X1
	188 Move W1, 20
	189 Move X0, X21
	190 Move X2, X31
	191 Call GameObject.set_layer, X0, X1
	192 Move X8, 0x22E6000
	193 Move X8, [X8+336]
	194 Move X0, X21
	195 Move X1, [X8]
	196 Call 0x21E61FC, X0
	197 Compare X0, 0
	198 JumpIfEqual {235}
	199 Move S1, [X20+36]
	200 Move S2, [X20+40]
	201 Move V0, [X20+32]
	202 Move X1, X31
	203 Move X22, X0
	204 Call BoxCollider.set_center, X0, X1
	205 Move S0, [X20+44]
	206 Move S1, [X20+48]
	207 Move V2, [X20+52]
	208 Move X0, X22
	209 Move X1, X31
	210 Add S0, S0, S0
	211 Add S1, S1, S1
	212 Add S2, S2, S2
	213 Call BoxCollider.set_size, X0, X1
	214 Move W1, 1
	215 Move X0, X22
	216 Move X2, X31
	217 Call Collider.set_isTrigger, X0, X1
	218 Move X8, 0x22EA000
	219 Move X8, [X8+3472]
	220 Move X0, X21
	221 Move X1, [X8]
	222 Call 0x21E61FC, X0
	223 Compare X0, 0
	224 JumpIfEqual {235}
	225 Move X8, [X19+48]
	226 Move [X0+32], X8
	227 Move X20, [X31+48]
	228 Move X19, [X31+56]
	229 Move X22, [X31+32]
	230 Move X21, [X31+40]
	231 Move X24, [X31+16]
	232 Move X23, [X31+24]
	233 Move X30, [X31+64]
	234 Return 
	235 Call 0x1C17F20
	236 Call 0x1C17F28

Method: UnityEngine.Bounds GetWorldBounds()

Disassembly:
	0x01E0889C CBZ X21, 0x1E08BB8
	0x01E088A0 ADRP X8, 0x22EB000
	0x01E088A4 LDR X8, [X8 + 0x5A0]
	0x01E088A8 MOV X0, X21
	0x01E088AC MOV X1, X31
	0x01E088B0 LDR X8, [X8]
	0x01E088B4 LDR X8, [X8 + 0xB8]
	0x01E088B8 LDP S1, S2, [X8 + 0x4]
	0x01E088BC LDR V0, [X8]
	0x01E088C0 BL 0x3C3EC04
	0x01E088C4 LDR X0, [X20 + 0x88]
	0x01E088C8 CBZ X0, 0x1E08BB8
	0x01E088CC MOV X1, X31
	0x01E088D0 BL 0x3C32E90
	0x01E088D4 ADRP X19, 0x25D0000
	0x01E088D8 LDRB W8, [X19 + 0x793]
	0x01E088DC MOV X21, X0
	0x01E088E0 CBNZ W8, 0x1E088F8
	0x01E088E4 ADRP X0, 0x22EC000
	0x01E088E8 LDR X0, [X0 + 0x5A8]
	0x01E088EC BL 0x1C16CF4
	0x01E088F0 MOVZ W8, 0x1
	0x01E088F4 STRB W8, [X19 + 0x793]
	0x01E088F8 CBZ X21, 0x1E08BB8
	0x01E088FC ADRP X8, 0x22EC000
	0x01E08900 LDR X8, [X8 + 0x5A8]
	0x01E08904 MOV X0, X21
	0x01E08908 MOV X1, X31
	0x01E0890C LDR X8, [X8]
	0x01E08910 LDR X8, [X8 + 0xB8]
	0x01E08914 LDP S2, S3, [X8 + 0x8]
	0x01E08918 LDP S0, S1, [X8]
	0x01E0891C BL 0x3C3F8B8
	0x01E08920 LDR X0, [X20 + 0x88]
	0x01E08924 CBZ X0, 0x1E08BB8
	0x01E08928 LDR X19, [X20 + 0xA8]
	0x01E0892C MOV X1, X31
	0x01E08930 BL 0x3C32ECC
	0x01E08934 CBZ X19, 0x1E08BB8
	0x01E08938 ADRP X8, 0xFFFFFFFFFECE2000
	0x01E0893C STR X0, [X19 + 0x18]
	0x01E08940 LDR V8, [X8 + 0x330]
	0x01E08944 LDR X1, [X20 + 0x60]
	0x01E08948 LDP X2, X4, [X20 + 0x78]
	0x01E0894C LDR X5, [X20 + 0xB0]
	0x01E08950 LDR W6, [X20 + 0x50]
	0x01E08954 ADD X7, X31, 0x88
	0x01E08958 MOVZ W3, 0x1
	0x01E0895C MOV X0, X20
	0x01E08960 MOV V0.16B, V8.16B
	0x01E08964 BL 0x1E06B58
	0x01E08968 TBZ X0, 0x0, 0x1E08BBC
	0x01E0896C ADRP X19, 0x22F1000
	0x01E08970 LDR X19, [X19 + 0xB10]
	0x01E08974 LDR X21, [X20 + 0x78]
	0x01E08978 LDR X0, [X19]
	0x01E0897C LDR W8, [X0 + 0xE0]
	0x01E08980 CBNZ W8, 0x1E0898C
	0x01E08984 BL 0x1C16DFC
	0x01E08988 LDR X0, [X19]
	0x01E0898C LDR X8, [X0 + 0xB8]
	0x01E08990 LDR X22, [X8 + 0x8]
	0x01E08994 CBNZ X22, 0x1E089E8
	0x01E08998 LDR W8, [X0 + 0xE0]
	0x01E0899C CBNZ W8, 0x1E089A8
	0x01E089A0 BL 0x1C16DFC
	0x01E089A4 LDR X0, [X19]
	0x01E089A8 ADRP X9, 0x22F1000
	0x01E089AC LDR X8, [X0 + 0xB8]
	0x01E089B0 LDR X9, [X9 + 0x9D0]
	0x01E089B4 LDR X23, [X8]
	0x01E089B8 LDR X0, [X9]
	0x01E089BC BL 0x1C16F10
	0x01E089C0 ADRP X8, 0x22F1000
	0x01E089C4 LDR X8, [X8 + 0xB08]
	0x01E089C8 MOV X1, X23
	0x01E089CC MOV X3, X31
	0x01E089D0 MOV X22, X0
	0x01E089D4 LDR X2, [X8]
	0x01E089D8 BL 0x2D2F428

ISIL:
	001 Move [X31-96], D15
	002 Move [X31-88], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X1, X31
	013 Move X20, X0
	014 Move X19, X8
	015 Call Component.get_transform, X0
	016 Compare X0, 0
	017 JumpIfEqual {100}
	018 Move S1, [X20+36]
	019 Move S2, [X20+40]
	020 Move V0, [X20+32]
	021 Move X1, X31
	022 Call Transform.TransformPoint, X0, X1
	023 Move S8, [X20+44]
	024 Move S15, [X20+48]
	025 Move V11, [X20+52]
	026 Move X0, X20
	027 Move X1, X31
	028 Move V10, V0
	029 Move [X31+72], S2
	030 Move [X31+80], S1
	031 Call Component.get_transform, X0
	032 Compare X0, 0
	033 JumpIfEqual {100}
	034 Move S1, W31
	035 Move S2, W31
	036 Move V0, V8
	037 Move X1, X31
	038 Call Transform.TransformVector, X0, V0, V1, V2
	039 Move X0, X20
	040 Move X1, X31
	041 Move V14, V0
	042 Move V13, V1
	043 Move V12, V2
	044 Call Component.get_transform, X0
	045 Compare X0, 0
	046 JumpIfEqual {100}
	047 Move S0, W31
	048 Move S2, W31
	049 Move V1, V15
	050 Move X1, X31
	051 Call Transform.TransformVector, X0, V0, V1, V2
	052 Move X0, X20
	053 Move X1, X31
	054 Move V9, V0
	055 Move V8, V1
	056 Move V15, V2
	057 Call Component.get_transform, X0
	058 Compare X0, 0
	059 JumpIfEqual {100}
	060 Move S0, W31
	061 Move S1, W31
	062 Move V2, V11
	063 Move X1, X31
	064 Call Transform.TransformVector, X0, V0, V1, V2
	065 NotImplemented "Instruction FABS not yet implemented."
	066 NotImplemented "Instruction FABS not yet implemented."
	067 NotImplemented "Instruction FABS not yet implemented."
	068 Add S3, S3, S4
	069 Move V17, [X31+76]
	070 Add S0, S3, S0
	071 Move V3, [X31+72]
	072 NotImplemented "Instruction FABS not yet implemented."
	073 NotImplemented "Instruction FABS not yet implemented."
	074 NotImplemented "Instruction FABS not yet implemented."
	075 NotImplemented "Instruction FABS not yet implemented."
	076 NotImplemented "Instruction FABS not yet implemented."
	077 NotImplemented "Instruction FABS not yet implemented."
	078 Add S4, S5, S6
	079 Add S5, S7, S16
	080 Add S1, S4, S1
	081 Add S2, S5, S2
	082 Move [X19], S10
	083 Move [X19+8], S17
	084 Move [X19+8], S3
	085 Move [X19+16], S0
	086 Move [X19+16], S1
	087 Move [X19+24], S2
	088 Move X20, [X31+80]
	089 Move X19, [X31+88]
	090 Move X30, [X31+64]
	091 Move D9, [X31+48]
	092 Move D8, [X31+56]
	093 Move D11, [X31+32]
	094 Move D10, [X31+40]
	095 Move D13, [X31+16]
	096 Move D12, [X31+24]
	097 Move D15, [X31+96]
	098 Move D14, [X31+104]
	099 Return X0
	100 Call 0x1C17F20

Method: AnimalCompany.GameGen.Socket GetRandomSocket(System.Boolean biasForEntance = False)

Disassembly:
	0x01E0CEE0 ADRP X8, 0x22ED000
	0x01E0CEE4 LDR X8, [X8 + 0xD50]
	0x01E0CEE8 MOV X0, X19
	0x01E0CEEC LDR X1, [X8]
	0x01E0CEF0 BL 0x21A43A8
	0x01E0CEF4 CBZ X0, 0x1E0CF40
	0x01E0CEF8 LDR W8, [X0 + 0x18]
	0x01E0CEFC MOV X19, X0
	0x01E0CF00 CMP W8, 0x1
	0x01E0CF04 B.LT 0x1E0CF38
	0x01E0CF08 MOV W20, W31
	0x01E0CF0C CMP W20, W8
	0x01E0CF10 B.CS 0x1E0CF44
	0x01E0CF14 ADD X8, X19, W20, 0x3, SXTW
	0x01E0CF18 LDR X0, [X8 + 0x20]
	0x01E0CF1C CBZ X0, 0x1E0CF40
	0x01E0CF20 MOV X1, X31
	0x01E0CF24 BL 0x36E0220
	0x01E0CF28 LDR W8, [X19 + 0x18]
	0x01E0CF2C ADD W20, W20, 0x1
	0x01E0CF30 CMP W20, W8
	0x01E0CF34 B.LT 0x1E0CF0C
	0x01E0CF38 MOVZ W0, 0x1
	0x01E0CF3C B 0x1E0CB54
	0x01E0CF40 BL 0x1C16F20
	0x01E0CF44 BL 0x1C16F28
	0x01E0CF48 SUB X31, X31, 0x80
	0x01E0CF4C STR X30, [X31 + 0x60]
	0x01E0CF50 STP X20, X19, [X31 + 0x70]
	0x01E0CF54 ADRP X20, 0x25CC000
	0x01E0CF58 LDRB W8, [X20 + 0xDD3]
	0x01E0CF5C MOV X19, X0
	0x01E0CF60 TBNZ X8, 0x0, 0x1E0CF9C
	0x01E0CF64 ADRP X0, 0x22ED000
	0x01E0CF68 LDR X0, [X0 + 0x998]
	0x01E0CF6C BL 0x1C16CF4
	0x01E0CF70 ADRP X0, 0x22ED000
	0x01E0CF74 LDR X0, [X0 + 0x9A0]
	0x01E0CF78 BL 0x1C16CF4
	0x01E0CF7C ADRP X0, 0x22ED000
	0x01E0CF80 LDR X0, [X0 + 0x9A8]
	0x01E0CF84 BL 0x1C16CF4
	0x01E0CF88 ADRP X0, 0x22ED000
	0x01E0CF8C LDR X0, [X0 + 0x9B0]
	0x01E0CF90 BL 0x1C16CF4
	0x01E0CF94 MOVZ W8, 0x1
	0x01E0CF98 STRB W8, [X20 + 0xDD3]
	0x01E0CF9C MOVI V0.2D, 0x0
	0x01E0CFA0 STR X31, [X31 + 0x50]
	0x01E0CFA4 STP V0, V0, [X31 + 0x30]
	0x01E0CFA8 LDR X8, [X19 + 0x40]
	0x01E0CFAC CBZ X8, 0x1E0D048
	0x01E0CFB0 FMOV S0, 1
	0x01E0CFB4 FMOV S1, W31
	0x01E0CFB8 FMOV S2, W31
	0x01E0CFBC FMOV S3, 1
	0x01E0CFC0 MOV X0, X31
	0x01E0CFC4 BL 0x3C0D030
	0x01E0CFC8 LDR X0, [X19 + 0x40]
	0x01E0CFCC CBZ X0, 0x1E0D058
	0x01E0CFD0 ADRP X8, 0x22ED000
	0x01E0CFD4 LDR X8, [X8 + 0x9B0]
	0x01E0CFD8 ADRP X20, 0x22ED000
	0x01E0CFDC ADRP X19, 0x22ED000
	0x01E0CFE0 LDR X1, [X8]
	0x01E0CFE4 LDR X20, [X20 + 0x9A0]
	0x01E0CFE8 LDR X19, [X19 + 0x998]
	0x01E0CFEC ADD X8, X31, 0x8
	0x01E0CFF0 BL 0x2F65DA4
	0x01E0CFF4 LDUR V0, [X31 + 0x8]
	0x01E0CFF8 LDUR V1, [X31 + 0x18]
	0x01E0CFFC LDR X8, [X31 + 0x28]
	0x01E0D000 STP V0, V1, [X31 + 0x30]
	0x01E0D004 STR X8, [X31 + 0x50]
	0x01E0D008 LDR X1, [X20]
	0x01E0D00C ADD X0, X31, 0x30
	0x01E0D010 BL 0x2BB6B08
	0x01E0D014 TBZ X0, 0x0, 0x1E0D03C
	0x01E0D018 LDP S2, S3, [X31 + 0x48]
	0x01E0D01C LDP S4, S5, [X31 + 0x50]
	0x01E0D020 LDP S0, S1, [X31 + 0x40]
	0x01E0D024 FADD S3, S3, S3
	0x01E0D028 FADD S4, S4, S4
	0x01E0D02C FADD S5, S5, S5
	0x01E0D030 MOV X0, X31
	0x01E0D034 BL 0x3C0CCD8
	0x01E0D038 B 0x1E0D008
	0x01E0D03C LDR X1, [X19]
	0x01E0D040 ADD X0, X31, 0x30
	0x01E0D044 BL 0x2BB6B04
	0x01E0D048 LDP X20, X19, [X31 + 0x70]
	0x01E0D04C LDR X30, [X31 + 0x60]
	0x01E0D050 ADD X31, X31, 0x80
	0x01E0D054 RET
	0x01E0D058 BL 0x1C16F20
	0x01E0D05C B 0x1E0D060
	0x01E0D060 MOV X20, X0
	0x01E0D064 CMP W1, 0x1
	0x01E0D068 B.NE 0x1E0D09C
	0x01E0D06C MOV X0, X20
	0x01E0D070 BL 0x3EB1AD0
	0x01E0D074 LDR X19, [X0]
	0x01E0D078 BL 0x3EB1AE0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x25CD000
	009 Move W8, [X21+3547]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0x22EE000
	017 Move X0, [X0+2496]
	018 Call 0x1C17CF4
	019 Move X0, 0x22EE000
	020 Move X0, [X0+2504]
	021 Call 0x1C17CF4
	022 Move X0, 0x22EE000
	023 Move X0, [X0+2512]
	024 Call 0x1C17CF4
	025 Move X0, 0x22EE000
	026 Move X0, [X0+2520]
	027 Call 0x1C17CF4
	028 Move X0, 0x22EE000
	029 Move X0, [X0+2528]
	030 Call 0x1C17CF4
	031 Move X0, 0x22EE000
	032 Move X0, [X0+3336]
	033 Call 0x1C17CF4
	034 Move X0, 0x22EE000
	035 Move X0, [X0+2680]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+3547], W8
	039 Move X23, 0x22EE000
	040 Move X23, [X23+2528]
	041 Move TEMP, X20
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {100}
	045 Move X24, 0x22EE000
	046 Move X24, [X24+2680]
	047 Move X20, [X19+56]
	048 Move X0, [X24]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1C17DFC
	053 Move X0, [X24]
	054 Move X8, [X0+184]
	055 Move X21, [X8+8]
	056 Compare X21, 0
	057 JumpIfNotEqual {79}
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {63}
	061 Call 0x1C17DFC
	062 Move X0, [X24]
	063 Move X9, 0x22EE000
	064 Move X8, [X0+184]
	065 Move X9, [X9+2512]
	066 Move X22, [X8]
	067 Move X0, [X9]
	068 Call 0x1C17F10
	069 Move X8, 0x22EE000
	070 Move X8, [X8+3336]
	071 Move X1, X22
	072 Move X3, X31
	073 Move X21, X0
	074 Move X2, [X8]
	075 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	076 Move X8, [X24]
	077 Move X8, [X8+184]
	078 Move [X8+8], X21
	079 Move X8, 0x22EE000
	080 Move X8, [X8+2504]
	081 Move X0, X20
	082 Move X1, X21
	083 Move X2, [X8]
	084 Call Enumerable.Where, X0, X1
	085 Move X8, 0x22ED000
	086 Move X8, [X8+2496]
	087 Move X1, [X8]
	088 Call Enumerable.ToList, X0
	089 Compare X0, 0
	090 JumpIfEqual {119}
	091 Move W1, [X0+24]
	092 Move X20, X0
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move W0, W31
	095 Move X2, X31
	096 Call Random.Range, X0, X1
	097 Move X2, [X23]
	098 Move W1, W0
	099 Move X0, X20
	100 Move X19, [X19+56]
	101 Compare X19, 0
	102 JumpIfEqual {119}
	103 Move W1, [X19+24]
	104 Move W0, W31
	105 Move X2, X31
	106 Call Random.Range, X0, X1
	107 Move X2, [X23]
	108 Move W1, W0
	109 Move X0, X19
	110 Move X20, [X31+48]
	111 Move X19, [X31+56]
	112 Move X22, [X31+32]
	113 Move X21, [X31+40]
	114 Move X24, [X31+16]
	115 Move X23, [X31+24]
	116 Move X30, [X31+64]
	117 Call List`1<Object>.get_Item, X0, X1
	118 Return X0
	119 Call 0x1C17F20

Method: System.Boolean TryGetRandomSocket(System.Boolean biasForEntance, AnimalCompany.GameGen.SocketFlag requiredFlags, out AnimalCompany.GameGen.Socket socket)

Disassembly:
	0x01E0863C TBZ X0, 0x0, 0x1E0869C
	0x01E08640 LDR X0, [X20 + 0x68]
	0x01E08644 CBZ X0, 0x1E086C4
	0x01E08648 LDR W10, [X0 + 0x1C]
	0x01E0864C LDP X1, X2, [X31 + 0x50]
	0x01E08650 LDR X8, [X0 + 0x10]
	0x01E08654 LDR X9, [X19]
	0x01E08658 ADD W10, W10, 0x1
	0x01E0865C STR W10, [X0 + 0x1C]
	0x01E08660 CBZ X8, 0x1E086CC
	0x01E08664 LDRSW X10, [X0 + 0x18]
	0x01E08668 LDR W11, [X8 + 0x18]
	0x01E0866C CMP W10, W11
	0x01E08670 B.CS 0x1E08688
	0x01E08674 ADD W9, W10, 0x1
	0x01E08678 ADD X8, X8, X10, 0x4, LSL
	0x01E0867C STR W9, [X0 + 0x18]
	0x01E08680 STP X1, X2, [X8 + 0x20]
	0x01E08684 B 0x1E08630
	0x01E08688 LDR X8, [X9 + 0x20]
	0x01E0868C LDR X8, [X8 + 0xC0]
	0x01E08690 LDR X3, [X8 + 0x70]
	0x01E08694 BL 0x30D45DC
	0x01E08698 B 0x1E08630
	0x01E0869C MOV X23, X31
	0x01E086A0 MOVZ W21, 0x7
	0x01E086A4 LDR X1, [X29]
	0x01E086A8 ADD X0, X31, 0x40
	0x01E086AC BL 0x2BD1F58
	0x01E086B0 CBNZ X23, 0x1E08C98
	0x01E086B4 CMP W21, 0x7
	0x01E086B8 B.EQ 0x1E085FC
	0x01E086BC CBZ W21, 0x1E085FC
	0x01E086C0 B 0x1E08B0C
	0x01E086C4 BL 0x1C16F20
	0x01E086C8 B 0x1E08CA8
	0x01E086CC BL 0x1C16F20
	0x01E086D0 B 0x1E08CA8
	0x01E086D4 B 0x1E086DC
	0x01E086D8 B 0x1E086DC
	0x01E086DC MOV X22, X0
	0x01E086E0 CMP W1, 0x1
	0x01E086E4 B.NE 0x1E08C50
	0x01E086E8 MOV X0, X22
	0x01E086EC BL 0x3EB1AD0
	0x01E086F0 LDR X23, [X0]
	0x01E086F4 BL 0x3EB1AE0
	0x01E086F8 MOV W21, W31
	0x01E086FC B 0x1E086A4
	0x01E08700 ADRP X8, 0x22F1000
	0x01E08704 LDR X8, [X8 + 0xA90]
	0x01E08708 ADD X0, X31, 0x60
	0x01E0870C LDR X1, [X8]
	0x01E08710 BL 0x2BC434C
	0x01E08714 ADRP X25, 0x22F1000
	0x01E08718 ADRP X26, 0x22F1000
	0x01E0871C LDR X25, [X25 + 0xAC0]
	0x01E08720 LDR X26, [X26 + 0xAE0]
	0x01E08724 LDR X19, [X31 + 0x18]
	0x01E08728 ADRP X8, 0x22F1000
	0x01E0872C LDR X8, [X8 + 0xAD0]
	0x01E08730 LDR X0, [X8]
	0x01E08734 BL 0x1C16F10
	0x01E08738 ADRP X8, 0x22F1000
	0x01E0873C LDR X8, [X8 + 0xAB8]
	0x01E08740 MOV X22, X0
	0x01E08744 LDR X1, [X8]
	0x01E08748 BL 0x2F64678
	0x01E0874C STR X22, [X20 + 0x80]
	0x01E08750 LDR X0, [X26]
	0x01E08754 BL 0x1C16F10
	0x01E08758 LDR X1, [X25]
	0x01E0875C MOV X22, X0
	0x01E08760 BL 0x301B7C4
	0x01E08764 CBZ X22, 0x1E08BB8
	0x01E08768 ADRP X9, 0x22F1000
	0x01E0876C LDR W10, [X22 + 0x1C]
	0x01E08770 LDR X8, [X22 + 0x10]
	0x01E08774 LDR X9, [X9 + 0xA10]
	0x01E08778 ADD W10, W10, 0x1
	0x01E0877C LDR X9, [X9]
	0x01E08780 STR W10, [X22 + 0x1C]
	0x01E08784 CBZ X8, 0x1E08BB8
	0x01E08788 LDRSW X10, [X22 + 0x18]
	0x01E0878C LDR W11, [X8 + 0x18]
	0x01E08790 CMP W10, W11
	0x01E08794 B.CS 0x1E087AC
	0x01E08798 ADD W9, W10, 0x1
	0x01E0879C ADD X8, X8, X10, 0x3, LSL
	0x01E087A0 STR W9, [X22 + 0x18]
	0x01E087A4 STR X19, [X8 + 0x20]
	0x01E087A8 B 0x1E087C4
	0x01E087AC LDR X8, [X9 + 0x20]
	0x01E087B0 MOV X0, X22
	0x01E087B4 MOV X1, X19
	0x01E087B8 LDR X8, [X8 + 0xC0]
	0x01E087BC LDR X2, [X8 + 0x70]
	0x01E087C0 BL 0x301BF90
	0x01E087C4 MOV X0, X20
	0x01E087C8 STR X22, [X20 + 0x78]
	0x01E087CC BL 0x1E0817C
	0x01E087D0 ADRP X8, 0x22EB000
	0x01E087D4 LDR X8, [X8 + 0xEC8]
	0x01E087D8 ADRP X9, 0x22F1000
	0x01E087DC MOV X1, X0
	0x01E087E0 MOV X3, X31
	0x01E087E4 LDR X8, [X8]
	0x01E087E8 LDR X9, [X9 + 0xAE8]
	0x01E087EC MOV X0, X8
	0x01E087F0 LDR X2, [X9]
	0x01E087F4 BL 0x32274B8
	0x01E087F8 ADRP X8, 0x22EB000
	0x01E087FC LDR X8, [X8 + 0xA58]
	0x01E08800 MOV X23, X0
	0x01E08804 LDR X8, [X8]
	0x01E08808 MOV X0, X8
	0x01E0880C BL 0x1C16F10
	0x01E08810 MOV X1, X23
	0x01E08814 MOV X2, X31
	0x01E08818 MOV X22, X0
	0x01E0881C BL 0x3C35934
	0x01E08820 CBZ X22, 0x1E08BB8
	0x01E08824 MOV X0, X22
	0x01E08828 MOV X1, X31
	0x01E0882C BL 0x3C356F8
	0x01E08830 STR X0, [X20 + 0x88]
	0x01E08834 CBZ X0, 0x1E08BB8
	0x01E08838 MOV X1, X31
	0x01E0883C BL 0x3C32E90
	0x01E08840 CBZ X19, 0x1E08BB8
	0x01E08844 MOV X22, X0
	0x01E08848 MOV X0, X19
	0x01E0884C MOV X1, X31
	0x01E08850 BL 0x3C32E90
	0x01E08854 CBZ X22, 0x1E08BB8
	0x01E08858 MOV X1, X0
	0x01E0885C MOV X0, X22
	0x01E08860 MOV X2, X31
	0x01E08864 BL 0x3C3FD20
	0x01E08868 LDR X0, [X20 + 0x88]
	0x01E0886C CBZ X0, 0x1E08BB8
	0x01E08870 MOV X1, X31
	0x01E08874 BL 0x3C32E90
	0x01E08878 ADRP X19, 0x25D0000
	0x01E0887C LDRB W8, [X19 + 0x783]
	0x01E08880 MOV X21, X0
	0x01E08884 CBNZ W8, 0x1E0889C
	0x01E08888 ADRP X0, 0x22EB000
	0x01E0888C LDR X0, [X0 + 0x5A0]
	0x01E08890 BL 0x1C16CF4
	0x01E08894 MOVZ W8, 0x1
	0x01E08898 STRB W8, [X19 + 0x783]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0x25D1000
	011 Move X24, 0x22F2000
	012 Move W8, [X23+3548]
	013 Move X24, [X24+2656]
	014 Move X19, X3
	015 Move W22, W2
	016 Move W20, W1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {51}
	022 Move X0, 0x22F2000
	023 Move X0, [X0+2496]
	024 Call 0x1C17CF4
	025 Move X0, 0x22F2000
	026 Move X0, [X0+2504]
	027 Call 0x1C17CF4
	028 Move X0, 0x22F2000
	029 Move X0, [X0+2512]
	030 Call 0x1C17CF4
	031 Move X0, 0x22F2000
	032 Move X0, [X0+2520]
	033 Call 0x1C17CF4
	034 Move X0, 0x22F2000
	035 Move X0, [X0+2528]
	036 Call 0x1C17CF4
	037 Move X0, 0x22F2000
	038 Move X0, [X0+2664]
	039 Call 0x1C17CF4
	040 Move X0, 0x22F2000
	041 Move X0, [X0+2672]
	042 Call 0x1C17CF4
	043 Move X0, 0x22F2000
	044 Move X0, [X0+2656]
	045 Call 0x1C17CF4
	046 Move X0, 0x22F2000
	047 Move X0, [X0+2680]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X23+3548], W8
	051 Move X0, [X24]
	052 Call 0x1C17F10
	053 Move X1, X31
	054 Move X23, X0
	055 Call <>c__DisplayClass6_0..ctor, X0
	056 Compare X23, 0
	057 JumpIfEqual {170}
	058 Move [X23+16], W22
	059 Compare W22, 0
	060 JumpIfEqual {142}
	061 Move X26, 0x22F2000
	062 Move X26, [X26+2512]
	063 Move X22, 0x22F2000
	064 Move X25, 0x22F2000
	065 Move X24, 0x22F2000
	066 Move X0, [X26]
	067 Move X21, [X21+56]
	068 Move X22, [X22+2672]
	069 Move X25, [X25+2504]
	070 Move X24, [X24+2496]
	071 Call 0x1C17F10
	072 Move X2, [X22]
	073 Move X1, X23
	074 Move X3, X31
	075 Move X22, X0
	076 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	077 Move X2, [X25]
	078 Move X0, X21
	079 Move X1, X22
	080 Call Enumerable.Where, X0, X1
	081 Move X1, [X24]
	082 Call Enumerable.ToList, X0
	083 Compare X0, 0
	084 JumpIfEqual {170}
	085 Move W1, [X0+24]
	086 Move X21, X0
	087 Compare W1, 0
	088 JumpIfEqual {145}
	089 Move TEMP, X20
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {148}
	093 Move X23, 0x22F2000
	094 Move X23, [X23+2680]
	095 Move X0, [X23]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {101}
	099 Call 0x1C17DFC
	100 Move X0, [X23]
	101 Move X8, [X0+184]
	102 Move X20, [X8+16]
	103 Compare X20, 0
	104 JumpIfNotEqual {124}
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {110}
	108 Call 0x1C17DFC
	109 Move X0, [X23]
	110 Move X8, [X0+184]
	111 Move X0, [X26]
	112 Move X22, [X8]
	113 Call 0x1C17F10
	114 Move X8, 0x22F2000
	115 Move X8, [X8+2664]
	116 Move X1, X22
	117 Move X3, X31
	118 Move X20, X0
	119 Move X2, [X8]
	120 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	121 Move X8, [X23]
	122 Move X8, [X8+184]
	123 Move [X8+16], X20
	124 Move X2, [X25]
	125 Move X0, X21
	126 Move X1, X20
	127 Call Enumerable.Where, X0, X1
	128 Move X1, [X24]
	129 Call Enumerable.ToList, X0
	130 Compare X0, 0
	131 JumpIfEqual {170}
	132 Move W1, [X0+24]
	133 Move X20, X0
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move W0, W31
	136 Move X2, X31
	137 Call Random.Range, X0, X1
	138 Move X8, 0x22F2000
	139 Move X8, [X8+2528]
	140 Move W1, W0
	141 Move X0, X20
	142 And W1, W20, 1
	143 Move X0, X21
	144 Call Tile.GetRandomSocket, X0, X1
	145 Move X0, X31
	146 Move W8, W31
	147 Move W1, [X21+24]
	148 Move W0, W31
	149 Move X2, X31
	150 Call Random.Range, X0, X1
	151 Move X8, 0x22F2000
	152 Move X8, [X8+2528]
	153 Move W1, W0
	154 Move X0, X21
	155 Move X2, [X8]
	156 Call List`1<Object>.get_Item, X0, X1
	157 Move W8, 1
	158 Move [X19], X0
	159 Move X20, [X31+64]
	160 Move X19, [X31+72]
	161 Move X22, [X31+48]
	162 Move X21, [X31+56]
	163 Move X24, [X31+32]
	164 Move X23, [X31+40]
	165 Move X26, [X31+16]
	166 Move X25, [X31+24]
	167 Move W0, W8
	168 Move X30, [X31+80]
	169 Return X0
	170 Call 0x1C17F20

Method: System.Void OnDrawGizmos()

Disassembly:
	0x01E10880 BL 0x21E770C
	0x01E10884 CBZ X0, 0x1E10A34
	0x01E10888 LDR W1, [X0 + 0x18]
	0x01E1088C MOV X20, X0
	0x01E10890 CBZ W1, 0x1E10A14
	0x01E10894 ADRP X21, 0x22E9000
	0x01E10898 LDR X21, [X21 + 0xEC0]
	0x01E1089C MOV W0, W31
	0x01E108A0 MOV X2, X31
	0x01E108A4 BL 0x3C309A8
	0x01E108A8 LDR X2, [X21]
	0x01E108AC MOV W1, W0
	0x01E108B0 MOV X0, X20
	0x01E108B4 BL 0x301BCCC
	0x01E108B8 LDR X8, [X19 + 0x18]
	0x01E108BC CBZ X8, 0x1E10A34
	0x01E108C0 ADRP X9, 0x22E9000
	0x01E108C4 LDR X9, [X9 + 0xE90]
	0x01E108C8 MOV X21, X0
	0x01E108CC MOV X0, X8
	0x01E108D0 MOV X1, X21
	0x01E108D4 LDR X2, [X9]
	0x01E108D8 BL 0x21E7478
	0x01E108DC CBZ X0, 0x1E10A34
	0x01E108E0 LDR W1, [X0 + 0x18]
	0x01E108E4 ADRP X22, 0x22E9000
	0x01E108E8 LDR X22, [X22 + 0xEC8]
	0x01E108EC MOV X20, X0
	0x01E108F0 MOV W0, W31
	0x01E108F4 MOV X2, X31
	0x01E108F8 BL 0x3C309A8
	0x01E108FC LDR X2, [X22]
	0x01E10900 MOV W1, W0
	0x01E10904 MOV X0, X20
	0x01E10908 BL 0x301BCCC
	0x01E1090C CBZ X0, 0x1E10A34

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+128], X30
	003 Move [X31+136], X19
	004 Move X8, -20074496
	005 Move V3, [X8+1100]
	006 Move X19, X0
	007 Move S0, 1
	008 Move S1, 1
	009 Move S2, 1
	010 Move X0, X31
	011 Call Gizmos.set_color, X0
	012 Move X0, X19
	013 Move X1, X31
	014 Call Component.get_transform, X0
	015 Compare X0, 0
	016 JumpIfEqual {46}
	017 Add X8, X31, 64
	018 Move X1, X31
	019 Call Transform.get_localToWorldMatrix, X0
	020 Move V0, [X31+64]
	021 Move V1, [X31+80]
	022 Move V2, [X31+96]
	023 Move V3, [X31+112]
	024 Add X0, X31, 0
	025 Move X1, X31
	026 Move [X31], V0
	027 Move [X31+8], V1
	028 Move [X31+32], V2
	029 Move [X31+40], V3
	030 Call Gizmos.set_matrix, X0
	031 Move S2, [X19+40]
	032 Move S3, [X19+44]
	033 Move S4, [X19+48]
	034 Move S5, [X19+52]
	035 Move S0, [X19+32]
	036 Move S1, [X19+36]
	037 Move X0, X31
	038 Add S3, S3, S3
	039 Add S4, S4, S4
	040 Add S5, S5, S5
	041 Call Gizmos.DrawWireCube, X0, X1
	042 Move X30, [X31+128]
	043 Move X19, [X31+136]
	044 Add X31, X31, 144
	045 Return 
	046 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01E102F0 BL 0x1C16CF4
	0x01E102F4 ADRP X0, 0x22E9000
	0x01E102F8 LDR X0, [X0 + 0xE70]
	0x01E102FC BL 0x1C16CF4
	0x01E10300 ADRP X0, 0x22E9000
	0x01E10304 LDR X0, [X0 + 0xE80]
	0x01E10308 BL 0x1C16CF4
	0x01E1030C ADRP X0, 0x22E9000
	0x01E10310 LDR X0, [X0 + 0xE78]
	0x01E10314 BL 0x1C16CF4
	0x01E10318 ADRP X0, 0x22E9000
	0x01E1031C LDR X0, [X0 + 0xE68]
	0x01E10320 BL 0x1C16CF4
	0x01E10324 MOVZ W8, 0x1
	0x01E10328 STRB W8, [X25 + 0xDE6]
	0x01E1032C LDR X0, [X26]
	0x01E10330 BL 0x1C16F10
	0x01E10334 LDR X1, [X20]
	0x01E10338 MOV X20, X0
	0x01E1033C BL 0x2AA4804
	0x01E10340 STR X20, [X19 + 0x10]
	0x01E10344 LDR X0, [X24]
	0x01E10348 BL 0x1C16F10
	0x01E1034C LDR X1, [X23]
	0x01E10350 MOV X20, X0
	0x01E10354 BL 0x301B7C4
	0x01E10358 STR X20, [X19 + 0x18]
	0x01E1035C LDR X0, [X22]
	0x01E10360 BL 0x1C16F10
	0x01E10364 LDR X1, [X21]
	0x01E10368 MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x25C9000
	007 Move X22, 0x22EA000
	008 Move X20, 0x22EA000
	009 Move W8, [X21+3549]
	010 Move X22, [X22+2784]
	011 Move X20, [X20+2752]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x22EA000
	018 Move X0, [X0+2752]
	019 Call 0x1C17CF4
	020 Move X0, 0x22EA000
	021 Move X0, [X0+2784]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3549], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call List`1<Object>..ctor, X0
	030 Move [X19+56], X20
	031 Move X0, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+48]
	038 Call MonoBehaviour..ctor, X0
	039 Return 

