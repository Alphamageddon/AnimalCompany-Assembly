Type: AnimalCompany.GameGen.Tile

Method: System.Void RenderTile(AnimalCompany.GameGen.Archetype archetype)

Disassembly:
	0x01CFCBA0 MOV X20, X1
	0x01CFCBA4 MOV X19, X0
	0x01CFCBA8 MOV X0, X1
	0x01CFCBAC MOV X1, X31
	0x01CFCBB0 MOV X21, X2
	0x01CFCBB4 BL 0x3A9B084
	0x01CFCBB8 CBZ X0, 0x1CFCCD8
	0x01CFCBBC MOV X1, X31
	0x01CFCBC0 BL 0x3AA7658
	0x01CFCBC4 CBZ X19, 0x1CFCCD8
	0x01CFCBC8 MOV X0, X19
	0x01CFCBCC MOV X1, X31
	0x01CFCBD0 MOV V8.16B, V0.16B
	0x01CFCBD4 BL 0x3A9B084
	0x01CFCBD8 CBZ X0, 0x1CFCCD8
	0x01CFCBDC MOV X1, X31
	0x01CFCBE0 BL 0x3AA7658
	0x01CFCBE4 CBZ X21, 0x1CFCCD8
	0x01CFCBE8 MOV X0, X21
	0x01CFCBEC MOV X1, X31
	0x01CFCBF0 MOV V9.16B, V0.16B
	0x01CFCBF4 BL 0x3A9B084
	0x01CFCBF8 CBZ X0, 0x1CFCCD8
	0x01CFCBFC MOV X1, X31
	0x01CFCC00 BL 0x3AA7658
	0x01CFCC04 MOV X0, X19
	0x01CFCC08 MOV X1, X31
	0x01CFCC0C MOV V10.16B, V2.16B
	0x01CFCC10 BL 0x3A9B084
	0x01CFCC14 CBZ X0, 0x1CFCCD8
	0x01CFCC18 MOV X1, X31
	0x01CFCC1C BL 0x3AA7658
	0x01CFCC20 MOV X0, X21
	0x01CFCC24 MOV X1, X31
	0x01CFCC28 MOV V11.16B, V2.16B
	0x01CFCC2C BL 0x3A9B084
	0x01CFCC30 CBZ X0, 0x1CFCCD8
	0x01CFCC34 MOV X1, X31
	0x01CFCC38 BL 0x3AA7658
	0x01CFCC3C MOV X0, X19
	0x01CFCC40 MOV X1, X31
	0x01CFCC44 MOV V12.16B, V0.16B
	0x01CFCC48 BL 0x3A9B084
	0x01CFCC4C CBZ X0, 0x1CFCCD8
	0x01CFCC50 MOV X1, X31
	0x01CFCC54 BL 0x3AA7658
	0x01CFCC58 MOV X0, X20
	0x01CFCC5C MOV X1, X31
	0x01CFCC60 MOV V13.16B, V0.16B
	0x01CFCC64 BL 0x3A9B084
	0x01CFCC68 CBZ X0, 0x1CFCCD8
	0x01CFCC6C MOV X1, X31
	0x01CFCC70 BL 0x3AA7658
	0x01CFCC74 MOV X0, X19
	0x01CFCC78 MOV X1, X31
	0x01CFCC7C MOV V14.16B, V2.16B
	0x01CFCC80 BL 0x3A9B084
	0x01CFCC84 CBZ X0, 0x1CFCCD8
	0x01CFCC88 MOV X1, X31
	0x01CFCC8C BL 0x3AA7658
	0x01CFCC90 FSUB S0, S8, S9
	0x01CFCC94 FSUB S1, S10, S11
	0x01CFCC98 FSUB S3, S12, S13
	0x01CFCC9C FSUB S2, S14, S2
	0x01CFCCA0 FMUL S0, S0, S1
	0x01CFCCA4 FMUL S1, S3, S2
	0x01CFCCA8 LDP X20, X19, [X31 + 0x50]
	0x01CFCCAC LDP X30, X21, [X31 + 0x40]
	0x01CFCCB0 LDP D9, D8, [X31 + 0x30]
	0x01CFCCB4 LDP D11, D10, [X31 + 0x20]
	0x01CFCCB8 LDP D13, D12, [X31 + 0x10]
	0x01CFCCBC FSUB S0, S0, S1
	0x01CFCCC0 FMOV S4, -1
	0x01CFCCC4 FCMP S0, 0x0
	0x01CFCCC8 FMOV S0, 1
	0x01CFCCCC FCSEL S0, S0, S4, GE
	0x01CFCCD0 LDR V14, [X31], #0x60
	0x01CFCCD4 RET
	0x01CFCCD8 BL 0x1B6EA1C
	0x01CFCCDC MOV X1, X31
	0x01CFCCE0 B 0x32276F8
	0x01CFCCE4 STR X30, [X31 - 0x20]!
	0x01CFCCE8 STP X20, X19, [X31 + 0x10]
	0x01CFCCEC ADRP X19, 0x2527000
	0x01CFCCF0 ADRP X20, 0x2254000
	0x01CFCCF4 LDRB W8, [X19 + 0x71E]
	0x01CFCCF8 LDR X20, [X20 + 0xB58]
	0x01CFCCFC TBNZ X8, 0x0, 0x1CFCD14
	0x01CFCD00 ADRP X0, 0x2254000
	0x01CFCD04 LDR X0, [X0 + 0xB58]
	0x01CFCD08 BL 0x1B6E7F0
	0x01CFCD0C MOVZ W8, 0x1
	0x01CFCD10 STRB W8, [X19 + 0x71E]
	0x01CFCD14 LDR X0, [X20]
	0x01CFCD18 BL 0x1B6EA0C
	0x01CFCD1C MOV X1, X31
	0x01CFCD20 MOV X19, X0
	0x01CFCD24 BL 0x32276F8
	0x01CFCD28 LDR X8, [X20]
	0x01CFCD2C LDR X8, [X8 + 0xB8]
	0x01CFCD30 STR X19, [X8]
	0x01CFCD34 LDP X20, X19, [X31 + 0x10]
	0x01CFCD38 LDR X30, [X31], #0x20
	0x01CFCD3C RET
	0x01CFCD40 MOV X1, X31
	0x01CFCD44 B 0x32276F8
	0x01CFCD48 STR X30, [X31 - 0x10]!
	0x01CFCD4C CBZ X1, 0x1CFCD6C
	0x01CFCD50 MOV X0, X1
	0x01CFCD54 MOV X1, X31
	0x01CFCD58 BL 0x3A9B084
	0x01CFCD5C CBZ X0, 0x1CFCD6C
	0x01CFCD60 MOV X1, X31
	0x01CFCD64 LDR X30, [X31], #0x10
	0x01CFCD68 B 0x3AA7658
	0x01CFCD6C BL 0x1B6EA1C
	0x01CFCD70 STR D8, [X31 - 0x40]!
	0x01CFCD74 STP X30, X23, [X31 + 0x10]
	0x01CFCD78 STP X22, X21, [X31 + 0x20]
	0x01CFCD7C STP X20, X19, [X31 + 0x30]
	0x01CFCD80 ADRP X21, 0x2527000
	0x01CFCD84 LDRB W8, [X21 + 0x71F]
	0x01CFCD88 MOV X20, X1
	0x01CFCD8C MOV X19, X0
	0x01CFCD90 TBNZ X8, 0x0, 0x1CFCDCC
	0x01CFCD94 ADRP X0, 0x2254000
	0x01CFCD98 LDR X0, [X0 + 0xB60]
	0x01CFCD9C BL 0x1B6E7F0
	0x01CFCDA0 ADRP X0, 0x2254000
	0x01CFCDA4 LDR X0, [X0 + 0xB68]
	0x01CFCDA8 BL 0x1B6E7F0
	0x01CFCDAC ADRP X0, 0x2254000
	0x01CFCDB0 LDR X0, [X0 + 0xB70]
	0x01CFCDB4 BL 0x1B6E7F0
	0x01CFCDB8 ADRP X0, 0x2254000
	0x01CFCDBC LDR X0, [X0 + 0xB58]
	0x01CFCDC0 BL 0x1B6E7F0
	0x01CFCDC4 MOVZ W8, 0x1
	0x01CFCDC8 STRB W8, [X21 + 0x71F]
	0x01CFCDCC CBZ X20, 0x1CFCE9C
	0x01CFCDD0 MOV X0, X20
	0x01CFCDD4 MOV X1, X31
	0x01CFCDD8 BL 0x3A9B084
	0x01CFCDDC CBZ X0, 0x1CFCE9C
	0x01CFCDE0 ADRP X22, 0x2254000
	0x01CFCDE4 LDR X22, [X22 + 0xB58]
	0x01CFCDE8 MOV X1, X31
	0x01CFCDEC BL 0x3AA7658
	0x01CFCDF0 LDR X0, [X22]
	0x01CFCDF4 LDR X19, [X19 + 0x10]
	0x01CFCDF8 MOV V8.16B, V0.16B
	0x01CFCDFC LDR W8, [X0 + 0xE0]
	0x01CFCE00 CBNZ W8, 0x1CFCE0C
	0x01CFCE04 BL 0x1B6E8F8
	0x01CFCE08 LDR X0, [X22]
	0x01CFCE0C LDR X8, [X0 + 0xB8]
	0x01CFCE10 ADRP X23, 0x2254000
	0x01CFCE14 LDR X20, [X8 + 0x8]
	0x01CFCE18 LDR X23, [X23 + 0xB60]
	0x01CFCE1C CBNZ X20, 0x1CFCE70
	0x01CFCE20 LDR W8, [X0 + 0xE0]
	0x01CFCE24 CBNZ W8, 0x1CFCE30
	0x01CFCE28 BL 0x1B6E8F8
	0x01CFCE2C LDR X0, [X22]
	0x01CFCE30 ADRP X9, 0x2254000
	0x01CFCE34 LDR X8, [X0 + 0xB8]
	0x01CFCE38 LDR X9, [X9 + 0xB68]
	0x01CFCE3C LDR X21, [X8]
	0x01CFCE40 LDR X0, [X9]
	0x01CFCE44 BL 0x1B6EA0C
	0x01CFCE48 ADRP X8, 0x2254000
	0x01CFCE4C LDR X8, [X8 + 0xB70]
	0x01CFCE50 MOV X1, X21
	0x01CFCE54 MOV X3, X31
	0x01CFCE58 MOV X20, X0
	0x01CFCE5C LDR X2, [X8]
	0x01CFCE60 BL 0x2B7AD98
	0x01CFCE64 LDR X8, [X22]
	0x01CFCE68 LDR X8, [X8 + 0xB8]
	0x01CFCE6C STR X20, [X8 + 0x8]
	0x01CFCE70 LDR X2, [X23]
	0x01CFCE74 MOV X0, X19
	0x01CFCE78 MOV X1, X20
	0x01CFCE7C BL 0x20B4E0C
	0x01CFCE80 LDP X20, X19, [X31 + 0x30]
	0x01CFCE84 LDP X22, X21, [X31 + 0x20]
	0x01CFCE88 LDP X30, X23, [X31 + 0x10]
	0x01CFCE8C FCMP S8, S0
	0x01CFCE90 CSET W0, EQ
	0x01CFCE94 LDR V8, [X31], #0x40
	0x01CFCE98 RET
	0x01CFCE9C BL 0x1B6EA1C
	0x01CFCEA0 STR X30, [X31 - 0x50]!
	0x01CFCEA4 STP X26, X25, [X31 + 0x10]
	0x01CFCEA8 STP X24, X23, [X31 + 0x20]
	0x01CFCEAC STP X22, X21, [X31 + 0x30]
	0x01CFCEB0 STP X20, X19, [X31 + 0x40]
	0x01CFCEB4 ADRP X25, 0x2527000
	0x01CFCEB8 ADRP X26, 0x2254000
	0x01CFCEBC ADRP X20, 0x2254000
	0x01CFCEC0 ADRP X24, 0x2254000
	0x01CFCEC4 ADRP X23, 0x2254000
	0x01CFCEC8 ADRP X22, 0x2254000
	0x01CFCECC ADRP X21, 0x2254000
	0x01CFCED0 LDR X26, [X26 + 0xB78]
	0x01CFCED4 LDRB W8, [X25 + 0x720]
	0x01CFCED8 LDR X20, [X20 + 0xB80]
	0x01CFCEDC LDR X24, [X24 + 0x2D8]
	0x01CFCEE0 LDR X23, [X23 + 0x2E0]
	0x01CFCEE4 LDR X22, [X22 + 0xB88]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2528000
	009 Move X22, 0x2255000
	010 Move W8, [X21+1816]
	011 Move X22, [X22+2728]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0x2255000
	019 Move X0, [X0+2728]
	020 Call 0x1B6F7F0
	021 Move X0, 0x2255000
	022 Move X0, [X0+2736]
	023 Call 0x1B6F7F0
	024 Move X0, 0x2255000
	025 Move X0, [X0+2744]
	026 Call 0x1B6F7F0
	027 Move X0, 0x2252000
	028 Move X0, [X0+2272]
	029 Call 0x1B6F7F0
	030 Move X0, 0x2255000
	031 Move X0, [X0+2752]
	032 Call 0x1B6F7F0
	033 Move X0, 0x2252000
	034 Move X0, [X0+1144]
	035 Call 0x1B6F7F0
	036 Move X0, 0x2255000
	037 Move X0, [X0+2760]
	038 Call 0x1B6F7F0
	039 Move W8, 1
	040 Move [X21+1816], W8
	041 Move X2, [X22]
	042 Move W1, 1
	043 Move X0, X20
	044 Call 0x2091B0C, X0, X1
	045 Compare X0, 0
	046 JumpIfEqual {235}
	047 Move W8, [X0+24]
	048 Move X21, X0
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X24, 0x2255000
	051 Move X24, [X24+2752]
	052 Move W23, W31
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Add X8, X21, W23
	055 Move X22, [X8+32]
	056 Compare X22, 0
	057 JumpIfEqual {235}
	058 Move X8, [X22]
	059 Move X1, [X24]
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Compare X9, 0
	062 JumpIfEqual {69}
	063 Move X10, [X8+176]
	064 Add X10, X10, 8
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Subtract X9, X9, 1
	068 Add X10, X10, 16
	069 Move X0, X22
	070 Move W2, W31
	071 Call 0x1BB5284
	072 NotImplemented "Instruction LDRSW not yet implemented."
	073 Add X8, X8, X9
	074 Add X0, X8, 312
	075 Move X8, [X0]
	076 Move X1, [X0+8]
	077 Move X0, X22
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Move W8, [X21+24]
	080 Add W23, W23, 1
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Compare X19, 0
	083 JumpIfEqual {235}
	084 Move X8, 0x2252000
	085 Move X8, [X8+1144]
	086 Move X21, [X19+32]
	087 Move X0, [X8]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1B6F8F8
	092 Move X0, X21
	093 Move X1, X31
	094 Move X2, X31
	095 Call Object.op_Inequality, X0, X1
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {227}
	100 Move X0, [X19+32]
	101 Compare X0, 0
	102 JumpIfEqual {235}
	103 Move X1, X31
	104 Call Object.get_name, X0
	105 Move X8, 0x2255000
	106 Move X8, [X8+2760]
	107 Move X1, X0
	108 Move X2, X31
	109 Move X8, [X8]
	110 Move X0, X8
	111 Call String.Concat, X0, X1
	112 Move X8, 0x2252000
	113 Move X8, [X8+2272]
	114 Move X22, X0
	115 Move X8, [X8]
	116 Move X0, X8
	117 Call 0x1B6FA0C
	118 Move X1, X22
	119 Move X2, X31
	120 Move X21, X0
	121 Call GameObject..ctor, X0, X1
	122 Compare X21, 0
	123 JumpIfEqual {235}
	124 Move X0, X21
	125 Move X1, X31
	126 Call GameObject.get_transform, X0
	127 Move X22, X0
	128 Move X0, X20
	129 Move X1, X31
	130 Call Component.get_transform, X0
	131 Compare X22, 0
	132 JumpIfEqual {235}
	133 Move X1, X0
	134 Move X0, X22
	135 Move X2, X31
	136 Call Transform.set_parent, X0, X1
	137 Move X0, X21
	138 Move X1, X31
	139 Call GameObject.get_transform, X0
	140 Move X23, 0x2528000
	141 Move W8, [X23+1087]
	142 Move X22, X0
	143 Compare W8, 0
	144 JumpIfNotEqual {150}
	145 Move X0, 0x2252000
	146 Move X0, [X0+1152]
	147 Call 0x1B6F7F0
	148 Move W8, 1
	149 Move [X23+1087], W8
	150 Compare X22, 0
	151 JumpIfEqual {235}
	152 Move X8, 0x2252000
	153 Move X8, [X8+1152]
	154 Move X0, X22
	155 Move X1, X31
	156 Move X8, [X8]
	157 Move X8, [X8+184]
	158 Move S1, [X8+4]
	159 Move S2, [X8+8]
	160 Move V0, [X8]
	161 Call Transform.set_localPosition, X0, X1
	162 Move X0, X21
	163 Move X1, X31
	164 Call GameObject.get_transform, X0
	165 Move X23, 0x2528000
	166 Move W8, [X23+1108]
	167 Move X22, X0
	168 Compare W8, 0
	169 JumpIfNotEqual {175}
	170 Move X0, 0x2253000
	171 Move X0, [X0+504]
	172 Call 0x1B6F7F0
	173 Move W8, 1
	174 Move [X23+1108], W8
	175 Compare X22, 0
	176 JumpIfEqual {235}
	177 Move X8, 0x2253000
	178 Move X8, [X8+504]
	179 Move X0, X22
	180 Move X1, X31
	181 Move X8, [X8]
	182 Move X8, [X8+184]
	183 Move S2, [X8+8]
	184 Move S3, [X8+12]
	185 Move S0, [X8]
	186 Move S1, [X8+4]
	187 Call Transform.set_localRotation, X0, X1
	188 Move W1, 20
	189 Move X0, X21
	190 Move X2, X31
	191 Call GameObject.set_layer, X0, X1
	192 Move X8, 0x2255000
	193 Move X8, [X8+2736]
	194 Move X0, X21
	195 Move X1, [X8]
	196 Call 0x20CFE08, X0
	197 Compare X0, 0
	198 JumpIfEqual {235}
	199 Move S1, [X20+36]
	200 Move S2, [X20+40]
	201 Move V0, [X20+32]
	202 Move X1, X31
	203 Move X22, X0
	204 Call BoxCollider.set_center, X0, X1
	205 Move S0, [X20+44]
	206 Move S1, [X20+48]
	207 Move V2, [X20+52]
	208 Move X0, X22
	209 Move X1, X31
	210 Add S0, S0, S0
	211 Add S1, S1, S1
	212 Add S2, S2, S2
	213 Call BoxCollider.set_size, X0, X1
	214 Move W1, 1
	215 Move X0, X22
	216 Move X2, X31
	217 Call Collider.set_isTrigger, X0, X1
	218 Move X8, 0x2255000
	219 Move X8, [X8+2744]
	220 Move X0, X21
	221 Move X1, [X8]
	222 Call 0x20CFE08, X0
	223 Compare X0, 0
	224 JumpIfEqual {235}
	225 Move X8, [X19+32]
	226 Move [X0+32], X8
	227 Move X20, [X31+48]
	228 Move X19, [X31+56]
	229 Move X22, [X31+32]
	230 Move X21, [X31+40]
	231 Move X24, [X31+16]
	232 Move X23, [X31+24]
	233 Move X30, [X31+64]
	234 Return 
	235 Call 0x1B6FA1C
	236 Call 0x1B6FA24

Method: UnityEngine.Bounds GetWorldBounds()

Disassembly:
	0x01CFD4A8 MOV W0, W31
	0x01CFD4AC LDP X30, X23, [X31], #0x30
	0x01CFD4B0 RET
	0x01CFD4B4 STR X20, [X19 + 0x10]
	0x01CFD4B8 STR X21, [X19 + 0x38]
	0x01CFD4BC ADRP X8, 0x2253000
	0x01CFD4C0 LDR X8, [X8 + 0xBC8]
	0x01CFD4C4 LDR X0, [X8]
	0x01CFD4C8 BL 0x1B6EA0C
	0x01CFD4CC MOV X21, X0
	0x01CFD4D0 BL 0x1CFCFAC
	0x01CFD4D4 STR X21, [X19 + 0x28]
	0x01CFD4D8 CBZ X20, 0x1CFD4FC
	0x01CFD4DC LDR X8, [X20 + 0x30]
	0x01CFD4E0 STR W31, [X19 + 0x20]
	0x01CFD4E4 MOV X0, X19
	0x01CFD4E8 LDP X22, X21, [X31 + 0x10]
	0x01CFD4EC STR X8, [X19 + 0x30]
	0x01CFD4F0 LDP X20, X19, [X31 + 0x20]
	0x01CFD4F4 LDP X30, X23, [X31], #0x30
	0x01CFD4F8 B 0x1CFD500
	0x01CFD4FC BL 0x1B6EA1C
	0x01CFD500 STP X30, X27, [X31 - 0x50]!
	0x01CFD504 STP X26, X25, [X31 + 0x10]
	0x01CFD508 STP X24, X23, [X31 + 0x20]
	0x01CFD50C STP X22, X21, [X31 + 0x30]
	0x01CFD510 STP X20, X19, [X31 + 0x40]
	0x01CFD514 ADRP X20, 0x2526000
	0x01CFD518 LDRB W8, [X20 + 0x727]
	0x01CFD51C MOV X19, X0
	0x01CFD520 TBNZ X8, 0x0, 0x1CFD58C
	0x01CFD524 ADRP X0, 0x2253000
	0x01CFD528 LDR X0, [X0 + 0xBD0]
	0x01CFD52C BL 0x1B6E7F0
	0x01CFD530 ADRP X0, 0x2253000
	0x01CFD534 LDR X0, [X0 + 0xBD8]
	0x01CFD538 BL 0x1B6E7F0
	0x01CFD53C ADRP X0, 0x2253000
	0x01CFD540 LDR X0, [X0 + 0xBE0]
	0x01CFD544 BL 0x1B6E7F0
	0x01CFD548 ADRP X0, 0x2253000
	0x01CFD54C LDR X0, [X0 + 0xBE8]
	0x01CFD550 BL 0x1B6E7F0
	0x01CFD554 ADRP X0, 0x2253000
	0x01CFD558 LDR X0, [X0 + 0xBF0]
	0x01CFD55C BL 0x1B6E7F0
	0x01CFD560 ADRP X0, 0x2253000
	0x01CFD564 LDR X0, [X0 + 0xBF8]
	0x01CFD568 BL 0x1B6E7F0
	0x01CFD56C ADRP X0, 0x2253000
	0x01CFD570 LDR X0, [X0 + 0xC00]
	0x01CFD574 BL 0x1B6E7F0
	0x01CFD578 ADRP X0, 0x2253000
	0x01CFD57C LDR X0, [X0 + 0xC08]
	0x01CFD580 BL 0x1B6E7F0
	0x01CFD584 MOVZ W8, 0x1
	0x01CFD588 STRB W8, [X20 + 0x727]
	0x01CFD58C LDR X0, [X19 + 0x18]
	0x01CFD590 CBZ X0, 0x1CFD754
	0x01CFD594 ADRP X8, 0x2253000
	0x01CFD598 LDR X8, [X8 + 0xBD8]
	0x01CFD59C LDR X1, [X8]
	0x01CFD5A0 BL 0x20D13DC
	0x01CFD5A4 CBZ X0, 0x1CFD754
	0x01CFD5A8 LDR W1, [X0 + 0x18]
	0x01CFD5AC MOV X20, X0
	0x01CFD5B0 CBZ W1, 0x1CFD734
	0x01CFD5B4 ADRP X21, 0x2253000
	0x01CFD5B8 LDR X21, [X21 + 0xC00]
	0x01CFD5BC MOV W0, W31
	0x01CFD5C0 MOV X2, X31
	0x01CFD5C4 BL 0x3A98D10
	0x01CFD5C8 LDR X2, [X21]
	0x01CFD5CC MOV W1, W0
	0x01CFD5D0 MOV X0, X20
	0x01CFD5D4 BL 0x2E46254
	0x01CFD5D8 LDR X8, [X19 + 0x18]
	0x01CFD5DC CBZ X8, 0x1CFD754
	0x01CFD5E0 ADRP X9, 0x2253000
	0x01CFD5E4 LDR X9, [X9 + 0xBD0]

ISIL:
	001 Move [X31-96], D15
	002 Move [X31-88], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X1, X31
	013 Move X20, X0
	014 Move X19, X8
	015 Call Component.get_transform, X0
	016 Compare X0, 0
	017 JumpIfEqual {100}
	018 Move S1, [X20+36]
	019 Move S2, [X20+40]
	020 Move V0, [X20+32]
	021 Move X1, X31
	022 Call Transform.TransformPoint, X0, X1
	023 Move S8, [X20+44]
	024 Move S15, [X20+48]
	025 Move V11, [X20+52]
	026 Move X0, X20
	027 Move X1, X31
	028 Move V10, V0
	029 Move [X31+72], S2
	030 Move [X31+80], S1
	031 Call Component.get_transform, X0
	032 Compare X0, 0
	033 JumpIfEqual {100}
	034 Move S1, W31
	035 Move S2, W31
	036 Move V0, V8
	037 Move X1, X31
	038 Call Transform.TransformVector, X0, V0, V1, V2
	039 Move X0, X20
	040 Move X1, X31
	041 Move V14, V0
	042 Move V13, V1
	043 Move V12, V2
	044 Call Component.get_transform, X0
	045 Compare X0, 0
	046 JumpIfEqual {100}
	047 Move S0, W31
	048 Move S2, W31
	049 Move V1, V15
	050 Move X1, X31
	051 Call Transform.TransformVector, X0, V0, V1, V2
	052 Move X0, X20
	053 Move X1, X31
	054 Move V9, V0
	055 Move V8, V1
	056 Move V15, V2
	057 Call Component.get_transform, X0
	058 Compare X0, 0
	059 JumpIfEqual {100}
	060 Move S0, W31
	061 Move S1, W31
	062 Move V2, V11
	063 Move X1, X31
	064 Call Transform.TransformVector, X0, V0, V1, V2
	065 NotImplemented "Instruction FABS not yet implemented."
	066 NotImplemented "Instruction FABS not yet implemented."
	067 NotImplemented "Instruction FABS not yet implemented."
	068 Add S3, S3, S4
	069 Move V17, [X31+76]
	070 Add S0, S3, S0
	071 Move V3, [X31+72]
	072 NotImplemented "Instruction FABS not yet implemented."
	073 NotImplemented "Instruction FABS not yet implemented."
	074 NotImplemented "Instruction FABS not yet implemented."
	075 NotImplemented "Instruction FABS not yet implemented."
	076 NotImplemented "Instruction FABS not yet implemented."
	077 NotImplemented "Instruction FABS not yet implemented."
	078 Add S4, S5, S6
	079 Add S5, S7, S16
	080 Add S1, S4, S1
	081 Add S2, S5, S2
	082 Move [X19], S10
	083 Move [X19+8], S17
	084 Move [X19+8], S3
	085 Move [X19+16], S0
	086 Move [X19+16], S1
	087 Move [X19+24], S2
	088 Move X20, [X31+80]
	089 Move X19, [X31+88]
	090 Move X30, [X31+64]
	091 Move D9, [X31+48]
	092 Move D8, [X31+56]
	093 Move D11, [X31+32]
	094 Move D10, [X31+40]
	095 Move D13, [X31+16]
	096 Move D12, [X31+24]
	097 Move D15, [X31+96]
	098 Move D14, [X31+104]
	099 Return X0
	100 Call 0x1B6FA1C

Method: AnimalCompany.GameGen.Socket GetRandomSocket(System.Boolean biasForEntance = False)

Disassembly:
	0x01CFD5E8 MOV X21, X0
	0x01CFD5EC MOV X0, X8
	0x01CFD5F0 MOV X1, X21
	0x01CFD5F4 LDR X2, [X9]
	0x01CFD5F8 BL 0x20D1148
	0x01CFD5FC CBZ X0, 0x1CFD754
	0x01CFD600 LDR W1, [X0 + 0x18]
	0x01CFD604 ADRP X22, 0x2253000
	0x01CFD608 LDR X22, [X22 + 0xC08]
	0x01CFD60C MOV X20, X0
	0x01CFD610 MOV W0, W31
	0x01CFD614 MOV X2, X31
	0x01CFD618 BL 0x3A98D10
	0x01CFD61C LDR X2, [X22]
	0x01CFD620 MOV W1, W0
	0x01CFD624 MOV X0, X20
	0x01CFD628 BL 0x2E46254
	0x01CFD62C CBZ X0, 0x1CFD754
	0x01CFD630 MOV X1, X21
	0x01CFD634 MOV X2, X31
	0x01CFD638 MOV X20, X0
	0x01CFD63C BL 0x1CF5DDC
	0x01CFD640 ADRP X23, 0x2526000
	0x01CFD644 LDRB W8, [X23 + 0x43F]
	0x01CFD648 LDR X22, [X19 + 0x38]
	0x01CFD64C MOV X21, X0
	0x01CFD650 CBNZ W8, 0x1CFD668
	0x01CFD654 ADRP X0, 0x2250000
	0x01CFD658 LDR X0, [X0 + 0x480]
	0x01CFD65C BL 0x1B6E7F0
	0x01CFD660 MOVZ W8, 0x1
	0x01CFD664 STRB W8, [X23 + 0x43F]
	0x01CFD668 CBZ X22, 0x1CFD754
	0x01CFD66C ADRP X8, 0x2250000
	0x01CFD670 LDR X8, [X8 + 0x480]
	0x01CFD674 FMOV S2, 0.5
	0x01CFD678 MOVI V3.2S, 0x3F, 0x18
	0x01CFD67C LDR X8, [X8]
	0x01CFD680 LDR X8, [X8 + 0xB8]
	0x01CFD684 LDR V0, [X8 + 0x8]
	0x01CFD688 LDR V1, [X8]
	0x01CFD68C FMUL S2, S0, S2
	0x00000000 INVALID
	0x01CFD694 STR D1, [X22 + 0x38]
	0x01CFD698 STR S0, [X22 + 0x40]
	0x01CFD69C STUR D3, [X22 + 0x44]
	0x01CFD6A0 STR S2, [X22 + 0x4C]
	0x01CFD6A4 LDR W8, [X19 + 0x24]
	0x01CFD6A8 STR W31, [X19 + 0x20]
	0x01CFD6AC CMP W8, 0x1
	0x01CFD6B0 B.LT 0x1CFD734
	0x01CFD6B4 ADRP X26, 0x2253000
	0x01CFD6B8 ADRP X27, 0x2253000
	0x01CFD6BC LDR X26, [X26 + 0xBE0]
	0x01CFD6C0 LDR X27, [X27 + 0xBE8]
	0x01CFD6C4 LDP X8, X23, [X19 + 0x10]
	0x01CFD6C8 LDR X0, [X26]
	0x01CFD6CC LDR X24, [X19 + 0x38]
	0x01CFD6D0 CMP X8, 0x0
	0x01CFD6D4 CSEL X25, X19, X8, EQ
	0x01CFD6D8 BL 0x1B6EA0C
	0x01CFD6DC LDR X1, [X27]
	0x01CFD6E0 MOV X22, X0
	0x01CFD6E4 MOV X0, X21
	0x01CFD6E8 BL 0x1B6E8FC
	0x01CFD6EC MOV X3, X0
	0x01CFD6F0 MOV X0, X22
	0x01CFD6F4 MOV X1, X25
	0x01CFD6F8 MOV X2, X23
	0x01CFD6FC MOV W4, W31
	0x01CFD700 MOV X5, X20
	0x01CFD704 MOV X6, X24
	0x01CFD708 BL 0x1D0109C
	0x01CFD70C CBZ X22, 0x1CFD754
	0x01CFD710 MOV X0, X22
	0x01CFD714 BL 0x1D013F8
	0x01CFD718 TBNZ X0, 0x0, 0x1CFD738
	0x01CFD71C LDP W8, W9, [X19 + 0x20]
	0x01CFD720 ADD W8, W8, 0x1
	0x01CFD724 CMP W8, W9
	0x01CFD728 STR W8, [X19 + 0x20]
	0x01CFD72C B.LT 0x1CFD6C4
	0x01CFD730 B 0x1CFD738
	0x01CFD734 MOV W0, W31
	0x01CFD738 LDP X20, X19, [X31 + 0x40]
	0x01CFD73C LDP X22, X21, [X31 + 0x30]
	0x01CFD740 LDP X24, X23, [X31 + 0x20]
	0x01CFD744 LDP X26, X25, [X31 + 0x10]
	0x01CFD748 AND W0, W0, 0x1
	0x01CFD74C LDP X30, X27, [X31], #0x50
	0x01CFD750 RET
	0x01CFD754 BL 0x1B6EA1C
	0x01CFD758 STR X30, [X31 - 0x50]!
	0x01CFD75C STP X26, X25, [X31 + 0x10]
	0x01CFD760 STP X24, X23, [X31 + 0x20]
	0x01CFD764 STP X22, X21, [X31 + 0x30]
	0x01CFD768 STP X20, X19, [X31 + 0x40]
	0x01CFD76C ADRP X26, 0x2526000
	0x01CFD770 STR W3, [X31 + 0xC]
	0x01CFD774 ADRP X24, 0x2253000
	0x01CFD778 ADRP X25, 0x2253000
	0x01CFD77C LDRB W8, [X26 + 0x725]
	0x01CFD780 LDR X24, [X24 + 0xBC8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2527000
	009 Move W8, [X21+1817]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0x2254000
	017 Move X0, [X0+2840]
	018 Call 0x1B6F7F0
	019 Move X0, 0x2254000
	020 Move X0, [X0+2848]
	021 Call 0x1B6F7F0
	022 Move X0, 0x2254000
	023 Move X0, [X0+2856]
	024 Call 0x1B6F7F0
	025 Move X0, 0x2254000
	026 Move X0, [X0+2008]
	027 Call 0x1B6F7F0
	028 Move X0, 0x2254000
	029 Move X0, [X0+2016]
	030 Call 0x1B6F7F0
	031 Move X0, 0x2254000
	032 Move X0, [X0+2864]
	033 Call 0x1B6F7F0
	034 Move X0, 0x2254000
	035 Move X0, [X0+2872]
	036 Call 0x1B6F7F0
	037 Move W8, 1
	038 Move [X21+1817], W8
	039 Move X23, 0x2254000
	040 Move X23, [X23+2016]
	041 Move TEMP, X20
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {100}
	045 Move X24, 0x2254000
	046 Move X24, [X24+2872]
	047 Move X20, [X19+56]
	048 Move X0, [X24]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1B6F8F8
	053 Move X0, [X24]
	054 Move X8, [X0+184]
	055 Move X21, [X8+8]
	056 Compare X21, 0
	057 JumpIfNotEqual {79}
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {63}
	061 Call 0x1B6F8F8
	062 Move X0, [X24]
	063 Move X9, 0x2254000
	064 Move X8, [X0+184]
	065 Move X9, [X9+2856]
	066 Move X22, [X8]
	067 Move X0, [X9]
	068 Call 0x1B6FA0C
	069 Move X8, 0x2254000
	070 Move X8, [X8+2864]
	071 Move X1, X22
	072 Move X3, X31
	073 Move X21, X0
	074 Move X2, [X8]
	075 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	076 Move X8, [X24]
	077 Move X8, [X8+184]
	078 Move [X8+8], X21
	079 Move X8, 0x2254000
	080 Move X8, [X8+2848]
	081 Move X0, X20
	082 Move X1, X21
	083 Move X2, [X8]
	084 Call Enumerable.Where, X0, X1
	085 Move X8, 0x2254000
	086 Move X8, [X8+2840]
	087 Move X1, [X8]
	088 Call Enumerable.ToList, X0
	089 Compare X0, 0
	090 JumpIfEqual {119}
	091 Move W1, [X0+24]
	092 Move X20, X0
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move W0, W31
	095 Move X2, X31
	096 Call Random.Range, X0, X1
	097 Move X2, [X23]
	098 Move W1, W0
	099 Move X0, X20
	100 Move X19, [X19+56]
	101 Compare X19, 0
	102 JumpIfEqual {119}
	103 Move W1, [X19+24]
	104 Move W0, W31
	105 Move X2, X31
	106 Call Random.Range, X0, X1
	107 Move X2, [X23]
	108 Move W1, W0
	109 Move X0, X19
	110 Move X20, [X31+48]
	111 Move X19, [X31+56]
	112 Move X22, [X31+32]
	113 Move X21, [X31+40]
	114 Move X24, [X31+16]
	115 Move X23, [X31+24]
	116 Move X30, [X31+64]
	117 Call List`1<Object>.get_Item, X0, X1
	118 Return X0
	119 Call 0x1B6FA1C

Method: System.Void OnDrawGizmos()

Disassembly:
	0x01CFD784 LDR X25, [X25 + 0x7E8]
	0x01CFD788 MOV W20, W5
	0x01CFD78C MOV W21, W4
	0x01CFD790 MOV X22, X2
	0x01CFD794 MOV X23, X1
	0x01CFD798 MOV X19, X0
	0x01CFD79C TBNZ X8, 0x0, 0x1CFD7FC
	0x01CFD7A0 ADRP X0, 0x2250000
	0x01CFD7A4 LDR X0, [X0 + 0x8B8]
	0x01CFD7A8 BL 0x1B6E7F0
	0x01CFD7AC ADRP X0, 0x2253000
	0x01CFD7B0 LDR X0, [X0 + 0xBC8]
	0x01CFD7B4 BL 0x1B6E7F0
	0x01CFD7B8 ADRP X0, 0x2253000
	0x01CFD7BC LDR X0, [X0 + 0x7C0]
	0x01CFD7C0 BL 0x1B6E7F0
	0x01CFD7C4 ADRP X0, 0x2253000
	0x01CFD7C8 LDR X0, [X0 + 0xC10]
	0x01CFD7CC BL 0x1B6E7F0
	0x01CFD7D0 ADRP X0, 0x2253000
	0x01CFD7D4 LDR X0, [X0 + 0x7E8]
	0x01CFD7D8 BL 0x1B6E7F0
	0x01CFD7DC ADRP X0, 0x2250000
	0x01CFD7E0 LDR X0, [X0 + 0x478]
	0x01CFD7E4 BL 0x1B6E7F0
	0x01CFD7E8 ADRP X0, 0x2253000
	0x01CFD7EC LDR X0, [X0 + 0xC18]
	0x01CFD7F0 BL 0x1B6E7F0
	0x01CFD7F4 MOVZ W8, 0x1
	0x01CFD7F8 STRB W8, [X26 + 0x725]
	0x01CFD7FC STR X23, [X19 + 0x38]
	0x01CFD800 LDR X0, [X24]
	0x01CFD804 ADRP X24, 0x2250000
	0x01CFD808 LDR X24, [X24 + 0x478]
	0x01CFD80C BL 0x1B6EA0C
	0x01CFD810 MOV X23, X0

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+128], X30
	003 Move [X31+136], X19
	004 Move X8, -19214336
	005 Move V3, [X8+3616]
	006 Move X19, X0
	007 Move S0, 1
	008 Move S1, 1
	009 Move S2, 1
	010 Move X0, X31
	011 Call Gizmos.set_color, X0
	012 Move X0, X19
	013 Move X1, X31
	014 Call Component.get_transform, X0
	015 Compare X0, 0
	016 JumpIfEqual {46}
	017 Add X8, X31, 64
	018 Move X1, X31
	019 Call Transform.get_localToWorldMatrix, X0
	020 Move V0, [X31+64]
	021 Move V1, [X31+80]
	022 Move V2, [X31+96]
	023 Move V3, [X31+112]
	024 Add X0, X31, 0
	025 Move X1, X31
	026 Move [X31], V0
	027 Move [X31+8], V1
	028 Move [X31+32], V2
	029 Move [X31+40], V3
	030 Call Gizmos.set_matrix, X0
	031 Move S2, [X19+40]
	032 Move S3, [X19+44]
	033 Move S4, [X19+48]
	034 Move S5, [X19+52]
	035 Move S0, [X19+32]
	036 Move S1, [X19+36]
	037 Move X0, X31
	038 Add S3, S3, S3
	039 Add S4, S4, S4
	040 Add S5, S5, S5
	041 Call Gizmos.DrawWireCube, X0, X1
	042 Move X30, [X31+128]
	043 Move X19, [X31+136]
	044 Add X31, X31, 144
	045 Return 
	046 Call 0x1B6FA1C

Method: System.Void .ctor()

Disassembly:
	0x01CFCEEC MOV X19, X0
	0x01CFCEF0 TBNZ X8, 0x0, 0x1CFCF44
	0x01CFCEF4 ADRP X0, 0x2254000
	0x01CFCEF8 LDR X0, [X0 + 0xB80]
	0x01CFCEFC BL 0x1B6E7F0
	0x01CFCF00 ADRP X0, 0x2254000
	0x01CFCF04 LDR X0, [X0 + 0x2E0]
	0x01CFCF08 BL 0x1B6E7F0
	0x01CFCF0C ADRP X0, 0x2254000
	0x01CFCF10 LDR X0, [X0 + 0xB90]
	0x01CFCF14 BL 0x1B6E7F0
	0x01CFCF18 ADRP X0, 0x2254000
	0x01CFCF1C LDR X0, [X0 + 0xB88]
	0x01CFCF20 BL 0x1B6E7F0
	0x01CFCF24 ADRP X0, 0x2254000
	0x01CFCF28 LDR X0, [X0 + 0x2D8]
	0x01CFCF2C BL 0x1B6E7F0
	0x01CFCF30 ADRP X0, 0x2254000
	0x01CFCF34 LDR X0, [X0 + 0xB78]
	0x01CFCF38 BL 0x1B6E7F0
	0x01CFCF3C MOVZ W8, 0x1
	0x01CFCF40 STRB W8, [X25 + 0x720]
	0x01CFCF44 LDR X0, [X26]
	0x01CFCF48 BL 0x1B6EA0C
	0x01CFCF4C LDR X1, [X20]
	0x01CFCF50 MOV X20, X0
	0x01CFCF54 BL 0x2E45D4C
	0x01CFCF58 STR X20, [X19 + 0x20]
	0x01CFCF5C LDR X0, [X24]
	0x01CFCF60 BL 0x1B6EA0C
	0x01CFCF64 LDR X1, [X23]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2528000
	007 Move X22, 0x2255000
	008 Move X20, 0x2255000
	009 Move W8, [X21+1818]
	010 Move X22, [X22+2040]
	011 Move X20, [X20+1992]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2255000
	018 Move X0, [X0+1992]
	019 Call 0x1B6F7F0
	020 Move X0, 0x2255000
	021 Move X0, [X0+2040]
	022 Call 0x1B6F7F0
	023 Move W8, 1
	024 Move [X21+1818], W8
	025 Move X0, [X22]
	026 Call 0x1B6FA0C
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call List`1<Object>..ctor, X0
	030 Move [X19+56], X20
	031 Move X0, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+48]
	038 Call MonoBehaviour..ctor, X0
	039 Return 

