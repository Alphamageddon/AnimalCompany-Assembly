Type: AnimalCompany.GameGen.Generator

Method: AnimalCompany.GameGen.Generator get_activeGenerator()

Disassembly:
	0x01CFE0B8 MOV X22, X31
	0x01CFE0BC LDR X1, [X28]
	0x01CFE0C0 ADD X0, X31, 0x20
	0x01CFE0C4 BL 0x2A14F2C

ISIL:
	001 Move X8, [X0+16]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSEL not yet implemented."
	004 Return X0

Method: AnimalCompany.GameGen.Socket get_origin()

Disassembly:
	0x01CFE0C8 CBZ X22, 0x1CFDFF8
	0x01CFE0CC B 0x1CFE4D4

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_origin(AnimalCompany.GameGen.Socket value)

Disassembly:
	0x01CFE0D0 BL 0x1B6EA1C
	0x01CFE0D4 B 0x1CFE4E0

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: System.Void .ctor(AnimalCompany.GameGen.GenGraph graph)

Disassembly:
	0x01CFE0D8 BL 0x1B6EA1C
	0x01CFE0DC B 0x1CFE4E0
	0x01CFE0E0 BL 0x1B6EA1C
	0x01CFE0E4 B 0x1CFE4E0
	0x01CFE0E8 B 0x1CFE0FC
	0x01CFE0EC B 0x1CFE0FC
	0x01CFE0F0 B 0x1CFE0FC
	0x01CFE0F4 B 0x1CFE0FC
	0x01CFE0F8 B 0x1CFE0FC
	0x01CFE0FC MOV X20, X1
	0x01CFE100 CMP W20, 0x1
	0x01CFE104 B.NE 0x1CFE49C
	0x01CFE108 BL 0x3D19840
	0x01CFE10C LDR X22, [X0]
	0x01CFE110 BL 0x3D19850
	0x01CFE114 B 0x1CFE0BC
	0x01CFE118 LDR X1, [X27]
	0x01CFE11C ADD X0, X31, 0x40
	0x01CFE120 BL 0x2A5AE88
	0x01CFE124 LDR X0, [X24]
	0x01CFE128 BL 0x1B6EA0C
	0x01CFE12C MOV X1, X31
	0x01CFE130 MOV X20, X0
	0x01CFE134 BL 0x3A9DBB8
	0x01CFE138 CBZ X20, 0x1CFE4DC
	0x01CFE13C LDR X1, [X26]
	0x01CFE140 MOV X0, X20
	0x01CFE144 MOV X2, X31
	0x01CFE148 BL 0x3AA0D38
	0x01CFE14C MOV X0, X20
	0x01CFE150 MOV X1, X31
	0x01CFE154 BL 0x3A9D8EC
	0x01CFE158 LDR X8, [X19 + 0x38]
	0x01CFE15C CBZ X8, 0x1CFE4DC
	0x01CFE160 MOV X21, X0
	0x01CFE164 MOV X0, X8
	0x01CFE168 MOV X1, X31
	0x01CFE16C BL 0x3A9B084

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x2526000
	008 Move X23, 0x2253000
	009 Move X21, 0x2253000
	010 Move W8, [X22+1826]
	011 Move X23, [X23+2024]
	012 Move X21, [X21+1984]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x2253000
	020 Move X0, [X0+1984]
	021 Call 0x1B6F7F0
	022 Move X0, 0x2253000
	023 Move X0, [X0+2024]
	024 Call 0x1B6F7F0
	025 Move W8, 1
	026 Move [X22+1826], W8
	027 Move X0, [X23]
	028 Call 0x1B6FA0C
	029 Move X1, [X21]
	030 Move X21, X0
	031 Call List`1<Bounds>..ctor, X0
	032 Move X0, X19
	033 Move X1, X31
	034 Move [X19+48], X21
	035 Call Object..ctor, X0
	036 Move [X19+24], X20
	037 Compare X20, 0
	038 JumpIfEqual {48}
	039 Move W8, [X20+44]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move [X19+36], W8
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X30, [X31+48]
	046 Move X23, [X31+56]
	047 Return 
	048 Call 0x1B6FA1C

Method: UnityEngine.Bounds GetTotalBounds()

Disassembly:
	0x01CFE170 CBZ X21, 0x1CFE4DC
	0x01CFE174 MOV X1, X0
	0x01CFE178 MOV X0, X21
	0x01CFE17C MOV X2, X31
	0x01CFE180 BL 0x3AA7DEC
	0x01CFE184 MOV X0, X20
	0x01CFE188 MOV X1, X31
	0x01CFE18C BL 0x3A9D8EC
	0x01CFE190 ADRP X22, 0x2525000
	0x01CFE194 LDRB W8, [X22 + 0x43F]
	0x01CFE198 MOV X21, X0
	0x01CFE19C CBNZ W8, 0x1CFE1B4
	0x01CFE1A0 ADRP X0, 0x224F000
	0x01CFE1A4 LDR X0, [X0 + 0x480]
	0x01CFE1A8 BL 0x1B6E7F0
	0x01CFE1AC MOVZ W8, 0x1
	0x01CFE1B0 STRB W8, [X22 + 0x43F]
	0x01CFE1B4 ADRP X26, 0x224F000
	0x01CFE1B8 LDR X26, [X26 + 0x480]
	0x01CFE1BC ADRP X23, 0x2525000
	0x01CFE1C0 LDRB W9, [X23 + 0x454]
	0x01CFE1C4 LDR X8, [X26]
	0x01CFE1C8 LDR X8, [X8 + 0xB8]
	0x01CFE1CC LDP S10, S9, [X8]
	0x01CFE1D0 LDR V8, [X8 + 0x8]
	0x01CFE1D4 CBNZ W9, 0x1CFE1EC
	0x01CFE1D8 ADRP X0, 0x2250000
	0x01CFE1DC LDR X0, [X0 + 0x1F8]
	0x01CFE1E0 BL 0x1B6E7F0
	0x01CFE1E4 MOVZ W8, 0x1
	0x01CFE1E8 STRB W8, [X23 + 0x454]
	0x01CFE1EC CBZ X21, 0x1CFE4DC
	0x01CFE1F0 ADRP X27, 0x2250000
	0x01CFE1F4 LDR X27, [X27 + 0x1F8]
	0x01CFE1F8 MOV X0, X21
	0x01CFE1FC MOV V0.16B, V10.16B
	0x01CFE200 MOV V1.16B, V9.16B
	0x01CFE204 LDR X8, [X27]
	0x01CFE208 MOV V2.16B, V8.16B
	0x01CFE20C MOV X1, X31
	0x01CFE210 LDR X8, [X8 + 0xB8]
	0x01CFE214 LDP S5, S6, [X8 + 0x8]
	0x01CFE218 LDP S3, S4, [X8]
	0x01CFE21C BL 0x3AA8180
	0x01CFE220 MOV X0, X20
	0x01CFE224 MOV X1, X31
	0x01CFE228 BL 0x3A9D8EC
	0x01CFE22C CBZ X0, 0x1CFE4DC
	0x01CFE230 MOV W1, W31
	0x01CFE234 MOV X2, X31
	0x01CFE238 BL 0x3AA8E0C
	0x01CFE23C MOV X0, X20
	0x01CFE240 MOV X1, X31
	0x01CFE244 BL 0x3A9D8EC
	0x01CFE248 STR X0, [X19 + 0x40]
	0x01CFE24C LDR X0, [X24]
	0x01CFE250 BL 0x1B6EA0C
	0x01CFE254 MOV X1, X31
	0x01CFE258 MOV X20, X0
	0x01CFE25C BL 0x3A9DBB8
	0x01CFE260 CBZ X20, 0x1CFE4DC
	0x01CFE264 LDR X1, [X25]
	0x01CFE268 MOV X0, X20
	0x01CFE26C MOV X2, X31
	0x01CFE270 BL 0x3AA0D38
	0x01CFE274 MOV X0, X20
	0x01CFE278 MOV X1, X31
	0x01CFE27C BL 0x3A9D8EC
	0x01CFE280 LDR X8, [X19 + 0x38]
	0x01CFE284 CBZ X8, 0x1CFE4DC
	0x01CFE288 MOV X21, X0
	0x01CFE28C MOV X0, X8
	0x01CFE290 MOV X1, X31
	0x01CFE294 BL 0x3A9B084
	0x01CFE298 CBZ X21, 0x1CFE4DC
	0x01CFE29C MOV X1, X0
	0x01CFE2A0 MOV X0, X21
	0x01CFE2A4 MOV X2, X31
	0x01CFE2A8 BL 0x3AA7DEC
	0x01CFE2AC MOV X0, X20
	0x01CFE2B0 MOV X1, X31
	0x01CFE2B4 BL 0x3A9D8EC
	0x01CFE2B8 LDRB W8, [X22 + 0x43F]
	0x01CFE2BC MOV X21, X0
	0x01CFE2C0 CBNZ W8, 0x1CFE2D8
	0x01CFE2C4 ADRP X0, 0x224F000
	0x01CFE2C8 LDR X0, [X0 + 0x480]
	0x01CFE2CC BL 0x1B6E7F0
	0x01CFE2D0 MOVZ W8, 0x1
	0x01CFE2D4 STRB W8, [X22 + 0x43F]
	0x01CFE2D8 LDR X8, [X26]
	0x01CFE2DC LDRB W9, [X23 + 0x454]
	0x01CFE2E0 LDR X8, [X8 + 0xB8]
	0x01CFE2E4 LDP S10, S9, [X8]
	0x01CFE2E8 LDR V8, [X8 + 0x8]
	0x01CFE2EC CBNZ W9, 0x1CFE304
	0x01CFE2F0 ADRP X0, 0x2250000
	0x01CFE2F4 LDR X0, [X0 + 0x1F8]
	0x01CFE2F8 BL 0x1B6E7F0
	0x01CFE2FC MOVZ W8, 0x1
	0x01CFE300 STRB W8, [X23 + 0x454]
	0x01CFE304 CBZ X21, 0x1CFE4DC
	0x01CFE308 LDR X8, [X27]
	0x01CFE30C MOV X0, X21
	0x01CFE310 MOV V0.16B, V10.16B
	0x01CFE314 MOV V1.16B, V9.16B
	0x01CFE318 LDR X8, [X8 + 0xB8]
	0x01CFE31C MOV V2.16B, V8.16B
	0x01CFE320 MOV X1, X31
	0x01CFE324 LDP S5, S6, [X8 + 0x8]
	0x01CFE328 LDP S3, S4, [X8]
	0x01CFE32C BL 0x3AA8180
	0x01CFE330 MOV X0, X20
	0x01CFE334 MOV X1, X31
	0x01CFE338 BL 0x3A9D8EC
	0x01CFE33C CBZ X0, 0x1CFE4DC
	0x01CFE340 MOV W1, W31
	0x01CFE344 MOV X2, X31
	0x01CFE348 BL 0x3AA8E0C
	0x01CFE34C MOV X0, X20
	0x01CFE350 MOV X1, X31
	0x01CFE354 BL 0x3A9D8EC
	0x01CFE358 STR X0, [X19 + 0x48]
	0x01CFE35C LDR X0, [X24]
	0x01CFE360 BL 0x1B6EA0C
	0x01CFE364 MOV X1, X31
	0x01CFE368 MOV X20, X0
	0x01CFE36C BL 0x3A9DBB8
	0x01CFE370 CBZ X20, 0x1CFE4DC
	0x01CFE374 ADRP X8, 0x2252000
	0x01CFE378 LDR X8, [X8 + 0xC90]
	0x01CFE37C MOV X0, X20
	0x01CFE380 MOV X2, X31
	0x01CFE384 LDR X1, [X8]
	0x01CFE388 BL 0x3AA0D38
	0x01CFE38C MOV X0, X20
	0x01CFE390 MOV X1, X31
	0x01CFE394 BL 0x3A9D8EC
	0x01CFE398 LDR X8, [X19 + 0x38]
	0x01CFE39C CBZ X8, 0x1CFE4DC
	0x01CFE3A0 MOV X21, X0
	0x01CFE3A4 MOV X0, X8
	0x01CFE3A8 MOV X1, X31
	0x01CFE3AC BL 0x3A9B084
	0x01CFE3B0 CBZ X21, 0x1CFE4DC
	0x01CFE3B4 MOV X1, X0
	0x01CFE3B8 MOV X0, X21
	0x01CFE3BC MOV X2, X31
	0x01CFE3C0 BL 0x3AA7DEC
	0x01CFE3C4 MOV X0, X20
	0x01CFE3C8 MOV X1, X31
	0x01CFE3CC BL 0x3A9D8EC
	0x01CFE3D0 LDRB W8, [X22 + 0x43F]
	0x01CFE3D4 MOV X21, X0
	0x01CFE3D8 CBNZ W8, 0x1CFE3F0
	0x01CFE3DC ADRP X0, 0x224F000
	0x01CFE3E0 LDR X0, [X0 + 0x480]
	0x01CFE3E4 BL 0x1B6E7F0
	0x01CFE3E8 MOVZ W8, 0x1
	0x01CFE3EC STRB W8, [X22 + 0x43F]
	0x01CFE3F0 LDR X8, [X26]
	0x01CFE3F4 LDRB W9, [X23 + 0x454]
	0x01CFE3F8 LDR X8, [X8 + 0xB8]
	0x01CFE3FC LDP S10, S9, [X8]
	0x01CFE400 LDR V8, [X8 + 0x8]
	0x01CFE404 CBNZ W9, 0x1CFE41C
	0x01CFE408 ADRP X0, 0x2250000
	0x01CFE40C LDR X0, [X0 + 0x1F8]
	0x01CFE410 BL 0x1B6E7F0
	0x01CFE414 MOVZ W8, 0x1
	0x01CFE418 STRB W8, [X23 + 0x454]
	0x01CFE41C CBZ X21, 0x1CFE4DC
	0x01CFE420 LDR X8, [X27]
	0x01CFE424 MOV X0, X21
	0x01CFE428 MOV V0.16B, V10.16B

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], D14
	003 Move [X31+112], D13
	004 Move [X31+120], D12
	005 Move [X31+128], D11
	006 Move [X31+136], D10
	007 Move [X31+144], D9
	008 Move [X31+152], D8
	009 Move [X31+160], X30
	010 Move [X31+168], X21
	011 Move [X31+176], X20
	012 Move [X31+184], X19
	013 Move X21, 0x2526000
	014 Move W9, [X21+1827]
	015 Move X20, X0
	016 Move X19, X8
	017 Move TEMP, X9
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0x2253000
	022 Move X0, [X0+2096]
	023 Call 0x1B6F7F0
	024 Move X0, 0x2253000
	025 Move X0, [X0+2104]
	026 Call 0x1B6F7F0
	027 Move X0, 0x2253000
	028 Move X0, [X0+2112]
	029 Call 0x1B6F7F0
	030 Move X0, 0x2253000
	031 Move X0, [X0+2120]
	032 Call 0x1B6F7F0
	033 Move W8, 1
	034 Move [X21+1827], W8
	035 Move X21, 0x2526000
	036 Move W8, [X21+1087]
	037 NotImplemented "Instruction MOVI not yet implemented."
	038 Move [X31+80], X31
	039 Move [X31+48], V0
	040 Move [X31+56], V0
	041 Compare W8, 0
	042 JumpIfNotEqual {48}
	043 Move X0, 0x2250000
	044 Move X0, [X0+1152]
	045 Call 0x1B6F7F0
	046 Move W8, 1
	047 Move [X21+1087], W8
	048 Move X0, [X20+48]
	049 Compare X0, 0
	050 JumpIfEqual {172}
	051 Move X8, 0x2250000
	052 Move X8, [X8+1152]
	053 Move X9, 0x2253000
	054 Move X21, 0x2253000
	055 Move X20, 0x2253000
	056 Move X8, [X8]
	057 Move X9, [X9+2120]
	058 Move S8, 0.5
	059 Move X8, [X8+184]
	060 Move X21, [X21+2104]
	061 Move X20, [X20+2096]
	062 Move X1, [X9]
	063 Move S12, [X8+4]
	064 Move S10, [X8+8]
	065 Move V14, [X8]
	066 Add X8, X31, 8
	067 Multiply S9, S10, S8
	068 Multiply S11, S12, S8
	069 Multiply S13, S14, S8
	070 Call List`1<Bounds>.GetEnumerator, X0
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 Move X8, [X31+40]
	074 Move [X31+48], V0
	075 Move [X31+56], V1
	076 Move [X31+80], X8
	077 Move X1, [X21]
	078 Add X0, X31, 48
	079 Call Enumerator<Bounds>.MoveNext, X0
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {150}
	084 Move S0, [X31+64]
	085 Move S1, [X31+68]
	086 Move S2, [X31+72]
	087 Move S3, [X31+76]
	088 Move S4, [X31+80]
	089 Move S5, [X31+84]
	090 Subtract S6, S14, S13
	091 Subtract S7, S12, S11
	092 Subtract S20, S0, S3
	093 Subtract S21, S1, S4
	094 NotImplemented "Instruction FCMP not yet implemented."
	095 Subtract S16, S10, S9
	096 Subtract S22, S2, S5
	097 Add S0, S0, S3
	098 NotImplemented "Instruction FCSEL not yet implemented."
	099 NotImplemented "Instruction FCMP not yet implemented."
	100 Add S17, S13, S14
	101 Add S1, S1, S4
	102 NotImplemented "Instruction FCSEL not yet implemented."
	103 NotImplemented "Instruction FCMP not yet implemented."
	104 Add S18, S11, S12
	105 Add S2, S2, S5
	106 NotImplemented "Instruction FCSEL not yet implemented."
	107 NotImplemented "Instruction FCMP not yet implemented."
	108 Add S19, S9, S10
	109 NotImplemented "Instruction FCSEL not yet implemented."
	110 NotImplemented "Instruction FCMP not yet implemented."
	111 NotImplemented "Instruction FCSEL not yet implemented."
	112 NotImplemented "Instruction FCMP not yet implemented."
	113 Subtract S6, S6, S3
	114 NotImplemented "Instruction FCSEL not yet implemented."
	115 Subtract S7, S7, S4
	116 Multiply S6, S6, S8
	117 Subtract S16, S16, S5
	118 Multiply S7, S7, S8
	119 Add S3, S3, S6
	120 Multiply S16, S16, S8
	121 Add S4, S4, S7
	122 Subtract S17, S3, S6
	123 Add S3, S6, S3
	124 Add S5, S5, S16
	125 Subtract S6, S4, S7
	126 NotImplemented "Instruction FCMP not yet implemented."
	127 Add S4, S7, S4
	128 Subtract S7, S5, S16
	129 NotImplemented "Instruction FCSEL not yet implemented."
	130 NotImplemented "Instruction FCMP not yet implemented."
	131 NotImplemented "Instruction FCSEL not yet implemented."
	132 NotImplemented "Instruction FCMP not yet implemented."
	133 NotImplemented "Instruction FCSEL not yet implemented."
	134 NotImplemented "Instruction FCMP not yet implemented."
	135 Add S5, S16, S5
	136 NotImplemented "Instruction FCSEL not yet implemented."
	137 NotImplemented "Instruction FCMP not yet implemented."
	138 NotImplemented "Instruction FCSEL not yet implemented."
	139 NotImplemented "Instruction FCMP not yet implemented."
	140 Subtract S0, S0, S17
	141 NotImplemented "Instruction FCSEL not yet implemented."
	142 Subtract S1, S1, S6
	143 Multiply S13, S0, S8
	144 Subtract S0, S2, S7
	145 Multiply S11, S1, S8
	146 Multiply S9, S0, S8
	147 Add S14, S17, S13
	148 Add S12, S6, S11
	149 Add S10, S7, S9
	150 Move X1, [X20]
	151 Add X0, X31, 48
	152 Call Enumerator<Bounds>.Dispose, X0
	153 Move [X19], S14
	154 Move [X19+8], S12
	155 Move [X19+8], S10
	156 Move [X19+16], S13
	157 Move [X19+16], S11
	158 Move [X19+24], S9
	159 Move X20, [X31+176]
	160 Move X19, [X31+184]
	161 Move X30, [X31+160]
	162 Move X21, [X31+168]
	163 Move D9, [X31+144]
	164 Move D8, [X31+152]
	165 Move D11, [X31+128]
	166 Move D10, [X31+136]
	167 Move D13, [X31+112]
	168 Move D12, [X31+120]
	169 Move V14, [X31+96]
	170 Add X31, X31, 192
	171 Return X0
	172 Call 0x1B6FA1C
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X21, X0
	175 Move X0, X21
	176 Call 0x3D1A840
	177 Move X20, [X0]
	178 Call 0x3D1A850
	179 Move X8, 0x2253000
	180 Move X8, [X8+2096]
	181 Add X0, X31, 48
	182 Move X1, [X8]
	183 Call Enumerator<Bounds>.Dispose, X0
	184 Compare X20, 0
	185 JumpIfEqual {153}
	186 Move X0, X20
	187 Call 0x1B6FA14
	188 Move X20, X31
	189 Move X21, X0
	190 Move X8, 0x2253000
	191 Move X8, [X8+2096]
	192 Move X1, [X8]
	193 Add X0, X31, 48
	194 Call Enumerator<Bounds>.Dispose, X0
	195 Compare X20, 0
	196 JumpIfNotEqual {199}
	197 Move X0, X21
	198 Call 0x1C8518C
	199 Move X0, X20
	200 Call 0x1B6FA14
	201 Call 0x18F56A8

Method: System.Boolean GenerateAsSubNode(AnimalCompany.GameGen.Socket origin, AnimalCompany.GameGen.Generator mainGenerator)

Disassembly:
	0x01CFE42C MOV V1.16B, V9.16B
	0x01CFE430 LDR X8, [X8 + 0xB8]
	0x01CFE434 MOV V2.16B, V8.16B
	0x01CFE438 MOV X1, X31
	0x01CFE43C LDP S5, S6, [X8 + 0x8]
	0x01CFE440 LDP S3, S4, [X8]
	0x01CFE444 BL 0x3AA8180
	0x01CFE448 MOV X0, X20
	0x01CFE44C MOV X1, X31
	0x01CFE450 BL 0x3A9D8EC
	0x01CFE454 CBZ X0, 0x1CFE4DC
	0x01CFE458 MOV W1, W31
	0x01CFE45C MOV X2, X31
	0x01CFE460 BL 0x3AA8E0C
	0x01CFE464 MOV X0, X20
	0x01CFE468 MOV X1, X31
	0x01CFE46C BL 0x3A9D8EC
	0x01CFE470 STR X0, [X19 + 0x50]
	0x01CFE474 LDP X20, X19, [X31 + 0xD0]
	0x01CFE478 LDP X22, X21, [X31 + 0xC0]
	0x01CFE47C LDP X24, X23, [X31 + 0xB0]
	0x01CFE480 LDP X26, X25, [X31 + 0xA0]
	0x01CFE484 LDP X28, X27, [X31 + 0x90]
	0x01CFE488 LDP X29, X30, [X31 + 0x80]
	0x01CFE48C LDP D9, D8, [X31 + 0x70]
	0x01CFE490 LDR V10, [X31 + 0x60]
	0x01CFE494 ADD X31, X31, 0xE0
	0x01CFE498 RET
	0x01CFE49C MOV X21, X0
	0x01CFE4A0 MOV X22, X31
	0x01CFE4A4 LDR X1, [X28]
	0x01CFE4A8 ADD X0, X31, 0x20
	0x01CFE4AC BL 0x2A14F2C
	0x01CFE4B0 MOV X0, X21
	0x01CFE4B4 CBZ X22, 0x1CFE518
	0x01CFE4B8 MOV X0, X22
	0x01CFE4BC BL 0x1B6EA14
	0x01CFE4C0 BL 0x1B6EA1C
	0x01CFE4C4 BL 0x1B6EA1C
	0x01CFE4C8 BL 0x1B6EA1C
	0x01CFE4CC BL 0x1B6EA1C
	0x01CFE4D0 BL 0x1B6EA1C
	0x01CFE4D4 MOV X0, X22
	0x01CFE4D8 BL 0x1B6EA14
	0x01CFE4DC BL 0x1B6EA1C
	0x01CFE4E0 MOV X20, X1
	0x01CFE4E4 MOV X21, X0
	0x01CFE4E8 B 0x1CFE4A4
	0x01CFE4EC B 0x1CFE514
	0x01CFE4F0 B 0x1CFE514
	0x01CFE4F4 B 0x1CFE514
	0x01CFE4F8 B 0x1CFE514
	0x01CFE4FC B 0x1CFE514

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x2526000
	008 Move X22, 0x2250000
	009 Move W8, [X23+1828]
	010 Move X22, [X22+1144]
	011 Move X20, X2
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x2253000
	019 Move X0, [X0+3016]
	020 Call 0x1B6F7F0
	021 Move X0, 0x2250000
	022 Move X0, [X0+1144]
	023 Call 0x1B6F7F0
	024 Move W8, 1
	025 Move [X23+1828], W8
	026 Move X0, [X22]
	027 Move X22, [X19+24]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1B6F8F8
	032 Move X0, X22
	033 Move X1, X31
	034 Move X2, X31
	035 Call Object.op_Equality, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {48}
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move W0, W31
	045 Move X30, [X31+48]
	046 Move X23, [X31+56]
	047 Return X0
	048 Move [X19+16], X20
	049 Move [X19+56], X21
	050 Move X8, 0x2253000
	051 Move X8, [X8+3016]
	052 Move X0, [X8]
	053 Call 0x1B6FA0C
	054 Move X21, X0
	055 Call GraphGenerationResult..ctor, X0
	056 Move [X19+40], X21
	057 Compare X20, 0
	058 JumpIfEqual {69}
	059 Move X8, [X20+48]
	060 Move [X19+32], W31
	061 Move X0, X19
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move [X19+48], X8
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X30, [X31+48]
	068 Move X23, [X31+56]
	069 Call 0x1B6FA1C

Method: System.Boolean Generate(AnimalCompany.GameGen.Socket origin, System.Collections.Generic.List`1<UnityEngine.Bounds> bounds, System.Int32 seed, System.Int32 navZoneOffset, System.Boolean isMasterClientGen, System.Boolean deleteOnFailure = True)

Disassembly:
	0x01CFE758 ADD X31, X31, 0xA0
	0x01CFE75C RET
	0x01CFE760 STR X1, [X31]
	0x01CFE764 STR X0, [X31 + 0x68]
	0x01CFE768 MOV X19, X31
	0x01CFE76C LDR X1, [X21]
	0x01CFE770 ADD X0, X31, 0x20
	0x01CFE774 BL 0x2A14F2C
	0x01CFE778 LDR X0, [X31 + 0x68]
	0x01CFE77C LDR X1, [X31]
	0x01CFE780 CBZ X19, 0x1CFE7C0
	0x01CFE784 MOV X0, X19
	0x01CFE788 BL 0x1B6EA14
	0x01CFE78C BL 0x1B6EA1C
	0x01CFE790 BL 0x1B6EA1C
	0x01CFE794 MOV X0, X19
	0x01CFE798 BL 0x1B6EA14
	0x01CFE79C BL 0x1B6EA1C
	0x01CFE7A0 STR X1, [X31]
	0x01CFE7A4 STR X0, [X31 + 0x68]
	0x01CFE7A8 B 0x1CFE76C
	0x01CFE7AC B 0x1CFE7C0
	0x01CFE7B0 B 0x1CFE7C0
	0x01CFE7B4 B 0x1CFE7C0
	0x01CFE7B8 B 0x1CFE7C0
	0x01CFE7BC B 0x1CFE7C0
	0x01CFE7C0 CMP W1, 0x1
	0x01CFE7C4 B.NE 0x1CFE7EC
	0x01CFE7C8 BL 0x3D19840
	0x01CFE7CC LDR X19, [X0]
	0x01CFE7D0 BL 0x3D19850
	0x01CFE7D4 LDR X1, [X20]
	0x01CFE7D8 ADD X0, X31, 0x40
	0x01CFE7DC BL 0x2A5AE88
	0x01CFE7E0 CBZ X19, 0x1CFE744
	0x01CFE7E4 MOV X0, X19
	0x01CFE7E8 BL 0x1B6EA14
	0x01CFE7EC STR X0, [X31 + 0x68]
	0x01CFE7F0 MOV X19, X31
	0x01CFE7F4 B 0x1CFE7FC
	0x01CFE7F8 STR X0, [X31 + 0x68]
	0x01CFE7FC LDR X1, [X20]
	0x01CFE800 ADD X0, X31, 0x40
	0x01CFE804 BL 0x2A5AE88
	0x01CFE808 CBNZ X19, 0x1CFE814
	0x01CFE80C LDR X0, [X31 + 0x68]
	0x01CFE810 BL 0x1C8418C
	0x01CFE814 MOV X0, X19
	0x01CFE818 BL 0x1B6EA14
	0x01CFE81C BL 0x18F46A8
	0x01CFE820 SUB X31, X31, 0xD0
	0x01CFE824 STP X29, X30, [X31 + 0x70]
	0x01CFE828 STP X28, X27, [X31 + 0x80]
	0x01CFE82C STP X26, X25, [X31 + 0x90]
	0x01CFE830 STP X24, X23, [X31 + 0xA0]
	0x01CFE834 STP X22, X21, [X31 + 0xB0]
	0x01CFE838 STP X20, X19, [X31 + 0xC0]
	0x01CFE83C ADRP X20, 0x2525000
	0x01CFE840 LDRB W8, [X20 + 0x72A]
	0x01CFE844 MOV X19, X0
	0x01CFE848 TBNZ X8, 0x0, 0x1CFE8F0
	0x01CFE84C ADRP X0, 0x2252000
	0x01CFE850 LDR X0, [X0 + 0xC20]
	0x01CFE854 BL 0x1B6E7F0
	0x01CFE858 ADRP X0, 0x2252000
	0x01CFE85C LDR X0, [X0 + 0xCA8]
	0x01CFE860 BL 0x1B6E7F0
	0x01CFE864 ADRP X0, 0x2252000
	0x01CFE868 LDR X0, [X0 + 0xCB0]
	0x01CFE86C BL 0x1B6E7F0
	0x01CFE870 ADRP X0, 0x2252000
	0x01CFE874 LDR X0, [X0 + 0xCB8]
	0x01CFE878 BL 0x1B6E7F0
	0x01CFE87C ADRP X0, 0x2252000
	0x01CFE880 LDR X0, [X0 + 0xC28]
	0x01CFE884 BL 0x1B6E7F0
	0x01CFE888 ADRP X0, 0x2252000
	0x01CFE88C LDR X0, [X0 + 0xCC0]
	0x01CFE890 BL 0x1B6E7F0
	0x01CFE894 ADRP X0, 0x2252000
	0x01CFE898 LDR X0, [X0 + 0xC30]
	0x01CFE89C BL 0x1B6E7F0
	0x01CFE8A0 ADRP X0, 0x2252000
	0x01CFE8A4 LDR X0, [X0 + 0xCC8]
	0x01CFE8A8 BL 0x1B6E7F0
	0x01CFE8AC ADRP X0, 0x2252000
	0x01CFE8B0 LDR X0, [X0 + 0xC38]
	0x01CFE8B4 BL 0x1B6E7F0
	0x01CFE8B8 ADRP X0, 0x2252000
	0x01CFE8BC LDR X0, [X0 + 0xCD0]
	0x01CFE8C0 BL 0x1B6E7F0
	0x01CFE8C4 ADRP X0, 0x2252000
	0x01CFE8C8 LDR X0, [X0 + 0xCD8]
	0x01CFE8CC BL 0x1B6E7F0
	0x01CFE8D0 ADRP X0, 0x2252000
	0x01CFE8D4 LDR X0, [X0 + 0xCE0]
	0x01CFE8D8 BL 0x1B6E7F0
	0x01CFE8DC ADRP X0, 0x2252000
	0x01CFE8E0 LDR X0, [X0 + 0xC40]
	0x01CFE8E4 BL 0x1B6E7F0
	0x01CFE8E8 MOVZ W8, 0x1
	0x01CFE8EC STRB W8, [X20 + 0x72A]
	0x01CFE8F0 STP X31, X31, [X31 + 0x50]
	0x01CFE8F4 STR X31, [X31 + 0x60]
	0x01CFE8F8 STP X31, X31, [X31 + 0x30]
	0x01CFE8FC STR X31, [X31 + 0x40]
	0x01CFE900 LDR X8, [X19 + 0x28]
	0x01CFE904 CBZ X8, 0x1CFEAD8
	0x01CFE908 LDR X0, [X8 + 0x10]
	0x01CFE90C CBZ X0, 0x1CFEAD8
	0x01CFE910 ADRP X8, 0x2252000
	0x01CFE914 LDR X8, [X8 + 0xC20]
	0x01CFE918 LDR X1, [X8]
	0x01CFE91C BL 0x28FA168
	0x01CFE920 CBZ X0, 0x1CFEAD8
	0x01CFE924 ADRP X8, 0x2252000
	0x01CFE928 LDR X8, [X8 + 0xC40]
	0x01CFE92C ADRP X22, 0x2252000
	0x01CFE930 ADRP X23, 0x2252000
	0x01CFE934 ADRP X24, 0x2252000
	0x01CFE938 ADRP X25, 0x2252000
	0x01CFE93C ADRP X26, 0x2252000
	0x01CFE940 ADRP X21, 0x2252000
	0x01CFE944 LDR X22, [X22 + 0xC30]
	0x01CFE948 LDR X23, [X23 + 0xCD0]
	0x01CFE94C LDR X24, [X24 + 0xCA8]
	0x01CFE950 LDR X25, [X25 + 0xCE0]
	0x01CFE954 LDR X26, [X26 + 0xCC0]
	0x01CFE958 LDR X21, [X21 + 0xCB8]
	0x01CFE95C LDR X1, [X8]
	0x01CFE960 ADRP X27, 0x2252000
	0x01CFE964 ADRP X28, 0x2252000
	0x01CFE968 LDR X27, [X27 + 0xCD8]
	0x01CFE96C LDR X28, [X28 + 0xCB0]
	0x01CFE970 ADD X8, X31, 0x18
	0x01CFE974 BL 0x25CA7B8
	0x01CFE978 LDUR V0, [X31 + 0x18]
	0x01CFE97C LDR X8, [X31 + 0x28]
	0x01CFE980 STR V0, [X31 + 0x5]
	0x01CFE984 STR X8, [X31 + 0x60]
	0x01CFE988 LDR X1, [X22]
	0x01CFE98C ADD X0, X31, 0x50
	0x01CFE990 BL 0x2A5AE8C
	0x01CFE994 TBZ X0, 0x0, 0x1CFEA68

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x2526000
	011 Move [X31+12], W3
	012 Move X24, 0x2253000
	013 Move X25, 0x2253000
	014 Move W8, [X26+1829]
	015 Move X24, [X24+3016]
	016 Move X25, [X25+2024]
	017 Move W20, W5
	018 Move W21, W4
	019 Move X22, X2
	020 Move X23, X1
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {49}
	026 Move X0, 0x2250000
	027 Move X0, [X0+2232]
	028 Call 0x1B6F7F0
	029 Move X0, 0x2253000
	030 Move X0, [X0+3016]
	031 Call 0x1B6F7F0
	032 Move X0, 0x2253000
	033 Move X0, [X0+1984]
	034 Call 0x1B6F7F0
	035 Move X0, 0x2253000
	036 Move X0, [X0+3088]
	037 Call 0x1B6F7F0
	038 Move X0, 0x2253000
	039 Move X0, [X0+2024]
	040 Call 0x1B6F7F0
	041 Move X0, 0x2250000
	042 Move X0, [X0+1144]
	043 Call 0x1B6F7F0
	044 Move X0, 0x2253000
	045 Move X0, [X0+3096]
	046 Call 0x1B6F7F0
	047 Move W8, 1
	048 Move [X26+1829], W8
	049 Move [X19+56], X23
	050 Move X0, [X24]
	051 Move X24, 0x2250000
	052 Move X24, [X24+1144]
	053 Call 0x1B6FA0C
	054 Move X23, X0
	055 Call GraphGenerationResult..ctor, X0
	056 Move [X19+40], X23
	057 Move X0, [X25]
	058 Call 0x1B6FA0C
	059 Move X23, X0
	060 Compare X22, 0
	061 JumpIfEqual {68}
	062 Move X8, 0x2253000
	063 Move X8, [X8+3088]
	064 Move X0, X23
	065 Move X1, X22
	066 Move X2, [X8]
	067 Call List`1<Bounds>..ctor, X0, X1
	068 Move X8, 0x2253000
	069 Move X8, [X8+1984]
	070 Move X0, X23
	071 Move X1, [X8]
	072 Call List`1<Bounds>..ctor, X0
	073 Move [X19+48], X23
	074 Move [X19+32], W31
	075 Move X0, [X24]
	076 Move X22, [X19+24]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1B6F8F8
	081 Move X0, X22
	082 Move X1, X31
	083 Move X2, X31
	084 Call Object.op_Equality, X0, X1
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfEqual {145}
	089 Move X22, 0x2253000
	090 Move X23, 0x2250000
	091 Move X22, [X22+3096]
	092 Move X23, [X23+2232]
	093 Add X0, X31, 12
	094 Move X1, X31
	095 Call Int32.ToString, X0
	096 Move X8, [X22]
	097 Move X1, X0
	098 Move X2, X31
	099 Move X0, X8
	100 Call String.Concat, X0, X1
	101 Move X8, [X23]
	102 Move X22, X0
	103 Move W9, [X8+224]
	104 Compare W9, 0
	105 JumpIfNotEqual {108}
	106 Move X0, X8
	107 Call 0x1B6F8F8
	108 Move X0, X22
	109 Move X1, X31
	110 Call Debug.LogWarning, X0
	111 Move W0, [X31+12]
	112 Move X1, X31
	113 Call Random.InitState, X0
	114 Move X0, X19
	115 Call Generator.GenerateTiles, X0
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {143}
	120 Move X0, X19
	121 Call Generator.PickSockets, X0
	122 Move X0, X19
	123 Call Generator.CleanupHeirarchy, X0
	124 Move X0, X19
	125 Call Generator.RenderTiles, X0
	126 Move X0, X19
	127 Call Generator.FindObjects, X0
	128 Move X0, X19
	129 Call Generator.SetAllLayers, X0
	130 Move X0, X19
	131 Call Generator.MoveNetObjects, X0
	132 Move X0, X19
	133 Move W1, W21
	134 Call Generator.CreateNavZones, X0, X1
	135 Move TEMP, X20
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfNotEqual {146}
	139 Move X0, X19
	140 Call Generator.PickItems, X0
	141 Move X0, X19
	142 Call Generator.PickMobs, X0
	143 Move X0, X19
	144 Call Generator.DeleteOnFailure, X0
	145 Move W0, W31
	146 Move X0, [X24]
	147 Move X19, [X19+80]
	148 Move W8, [X0+224]
	149 Compare W8, 0
	150 JumpIfNotEqual {152}
	151 Call 0x1B6F8F8
	152 Move X0, X19
	153 Move X1, X31
	154 Call Object.Destroy, X0
	155 Move W0, 1
	156 Move X20, [X31+64]
	157 Move X19, [X31+72]
	158 Move X22, [X31+48]
	159 Move X21, [X31+56]
	160 Move X24, [X31+32]
	161 Move X23, [X31+40]
	162 Move X26, [X31+16]
	163 Move X25, [X31+24]
	164 Move X30, [X31+80]
	165 Return X0

Method: System.Void DeleteOnFailure()

Disassembly:
	0x01CFE998 LDR X29, [X31 + 0x60]
	0x01CFE99C CBZ X29, 0x1CFEACC
	0x01CFE9A0 LDR X0, [X29 + 0x18]
	0x01CFE9A4 CBZ X0, 0x1CFEAD0
	0x01CFE9A8 LDR X1, [X23]
	0x01CFE9AC BL 0x20CFB14
	0x01CFE9B0 LDR X1, [X24]
	0x01CFE9B4 BL 0x20C23C4
	0x01CFE9B8 STR X0, [X29 + 0x30]
	0x01CFE9BC CBZ X0, 0x1CFEAC8
	0x01CFE9C0 LDR X1, [X25]
	0x01CFE9C4 ADD X8, X31, 0x18
	0x01CFE9C8 BL 0x2E470E0
	0x01CFE9CC LDUR V0, [X31 + 0x18]
	0x01CFE9D0 LDR X8, [X31 + 0x28]
	0x01CFE9D4 STR V0, [X31 + 0x3]
	0x01CFE9D8 STR X8, [X31 + 0x40]
	0x01CFE9DC LDR X1, [X26]
	0x01CFE9E0 ADD X0, X31, 0x30
	0x01CFE9E4 BL 0x2A14F30
	0x01CFE9E8 TBZ X0, 0x0, 0x1CFE9FC
	0x01CFE9EC LDR X8, [X31 + 0x40]
	0x01CFE9F0 CBZ X8, 0x1CFEA40
	0x01CFE9F4 STRB W31, [X8 + 0x24]
	0x01CFE9F8 B 0x1CFE9DC
	0x01CFE9FC MOV X19, X31
	0x01CFEA00 MOVZ W20, 0x6
	0x01CFEA04 LDR X1, [X21]
	0x01CFEA08 ADD X0, X31, 0x30
	0x01CFEA0C BL 0x2A14F2C
	0x01CFEA10 CBNZ X19, 0x1CFEAC0
	0x01CFEA14 CMP W20, 0x6
	0x01CFEA18 B.EQ 0x1CFEA20
	0x01CFEA1C CBNZ W20, 0x1CFEA68
	0x01CFEA20 LDR X0, [X29 + 0x18]
	0x01CFEA24 CBZ X0, 0x1CFEAD4
	0x01CFEA28 LDR X1, [X27]
	0x01CFEA2C BL 0x20CFB14
	0x01CFEA30 LDR X1, [X28]
	0x01CFEA34 BL 0x20C23C4
	0x01CFEA38 STR X0, [X29 + 0x28]
	0x01CFEA3C B 0x1CFE988
	0x01CFEA40 BL 0x1B6EA1C
	0x01CFEA44 B 0x1CFEADC
	0x01CFEA48 B 0x1CFEA4C
	0x01CFEA4C CMP W1, 0x1
	0x01CFEA50 B.NE 0x1CFEA9C
	0x01CFEA54 BL 0x3D19840
	0x01CFEA58 LDR X19, [X0]
	0x01CFEA5C BL 0x3D19850
	0x01CFEA60 MOV W20, W31
	0x01CFEA64 B 0x1CFEA04
	0x01CFEA68 ADRP X8, 0x2252000
	0x01CFEA6C LDR X8, [X8 + 0xC28]
	0x01CFEA70 ADD X0, X31, 0x50
	0x01CFEA74 LDR X1, [X8]
	0x01CFEA78 BL 0x2A5AE88
	0x01CFEA7C LDP X20, X19, [X31 + 0xC0]
	0x01CFEA80 LDP X22, X21, [X31 + 0xB0]
	0x01CFEA84 LDP X24, X23, [X31 + 0xA0]
	0x01CFEA88 LDP X26, X25, [X31 + 0x90]
	0x01CFEA8C LDP X28, X27, [X31 + 0x80]
	0x01CFEA90 LDP X29, X30, [X31 + 0x70]
	0x01CFEA94 ADD X31, X31, 0xD0
	0x01CFEA98 RET
	0x01CFEA9C STP X1, X0, [X31 + 0x8]
	0x01CFEAA0 MOV X19, X31
	0x01CFEAA4 LDR X1, [X21]
	0x01CFEAA8 ADD X0, X31, 0x30
	0x01CFEAAC BL 0x2A14F2C
	0x01CFEAB0 LDP X1, X0, [X31 + 0x8]
	0x01CFEAB4 CBZ X19, 0x1CFEB10
	0x01CFEAB8 MOV X0, X19
	0x01CFEABC BL 0x1B6EA14
	0x01CFEAC0 MOV X0, X19
	0x01CFEAC4 BL 0x1B6EA14
	0x01CFEAC8 BL 0x1B6EA1C
	0x01CFEACC BL 0x1B6EA1C
	0x01CFEAD0 BL 0x1B6EA1C
	0x01CFEAD4 BL 0x1B6EA1C
	0x01CFEAD8 BL 0x1B6EA1C
	0x01CFEADC STP X1, X0, [X31 + 0x8]
	0x01CFEAE0 B 0x1CFEAA4
	0x01CFEAE4 B 0x1CFEB10
	0x01CFEAE8 B 0x1CFEB10
	0x01CFEAEC B 0x1CFEB10
	0x01CFEAF0 B 0x1CFEB10
	0x01CFEAF4 B 0x1CFEB10
	0x01CFEAF8 B 0x1CFEB10
	0x01CFEAFC B 0x1CFEB10
	0x01CFEB00 B 0x1CFEB10
	0x01CFEB04 B 0x1CFEB10
	0x01CFEB08 B 0x1CFEB10
	0x01CFEB0C B 0x1CFEB10
	0x01CFEB10 CMP W1, 0x1
	0x01CFEB14 B.NE 0x1CFEB44
	0x01CFEB18 BL 0x3D19840
	0x01CFEB1C LDR X19, [X0]
	0x01CFEB20 BL 0x3D19850
	0x01CFEB24 ADRP X8, 0x2252000
	0x01CFEB28 LDR X8, [X8 + 0xC28]
	0x01CFEB2C ADD X0, X31, 0x50
	0x01CFEB30 LDR X1, [X8]
	0x01CFEB34 BL 0x2A5AE88
	0x01CFEB38 CBZ X19, 0x1CFEA7C
	0x01CFEB3C MOV X0, X19

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X20, 0x2526000
	008 Move W8, [X20+1830]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0x2253000
	015 Move X0, [X0+3104]
	016 Call 0x1B6F7F0
	017 Move X0, 0x2253000
	018 Move X0, [X0+3112]
	019 Call 0x1B6F7F0
	020 Move X0, 0x2253000
	021 Move X0, [X0+3120]
	022 Call 0x1B6F7F0
	023 Move X0, 0x2253000
	024 Move X0, [X0+3128]
	025 Call 0x1B6F7F0
	026 Move X0, 0x2250000
	027 Move X0, [X0+1144]
	028 Call 0x1B6F7F0
	029 Move X0, 0x2253000
	030 Move X0, [X0+3136]
	031 Call 0x1B6F7F0
	032 Move W8, 1
	033 Move [X20+1830], W8
	034 Move [X31+8], X31
	035 Move [X31+16], X31
	036 Move [X31+24], X31
	037 Move X8, [X19+40]
	038 Compare X8, 0
	039 JumpIfEqual {90}
	040 Move X0, [X8+16]
	041 Compare X0, 0
	042 JumpIfEqual {90}
	043 Move X8, 0x2253000
	044 Move X8, [X8+3104]
	045 Move X1, [X8]
	046 Call Dictionary`2<Object, Object>.get_Values, X0
	047 Compare X0, 0
	048 JumpIfEqual {90}
	049 Move X8, 0x2253000
	050 Move X8, [X8+3136]
	051 Move X21, 0x2253000
	052 Move X22, 0x2250000
	053 Move X20, 0x2253000
	054 Move X1, [X8]
	055 Move X21, [X21+3120]
	056 Move X22, [X22+1144]
	057 Move X20, [X20+3112]
	058 Add X8, X31, 8
	059 Call ValueCollection<Object, Object>.GetEnumerator, X0
	060 Move X1, [X21]
	061 Add X0, X31, 8
	062 Call Enumerator<Object, Object>.MoveNext, X0
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {79}
	067 Move X8, [X31+24]
	068 Compare X8, 0
	069 JumpIfEqual {89}
	070 Move X0, [X22]
	071 Move X19, [X8+24]
	072 Move W9, [X0+224]
	073 Compare W9, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1B6F8F8
	076 Move X0, X19
	077 Move X1, X31
	078 Call Object.DestroyImmediate, X0
	079 Move X1, [X20]
	080 Add X0, X31, 8
	081 Call Enumerator<Object, Object>.Dispose, X0
	082 Move X20, [X31+64]
	083 Move X19, [X31+72]
	084 Move X22, [X31+48]
	085 Move X21, [X31+56]
	086 Move X30, [X31+32]
	087 Add X31, X31, 80
	088 Return 
	089 Call 0x1B6FA1C
	090 Call 0x1B6FA1C
	091 Move X19, X0
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X0, X19
	094 Call 0x3D1A840
	095 Move X20, [X0]
	096 Call 0x3D1A850
	097 Move X8, 0x2253000
	098 Move X8, [X8+3112]
	099 Add X0, X31, 8
	100 Move X1, [X8]
	101 Call Enumerator<Object, Object>.Dispose, X0
	102 Compare X20, 0
	103 JumpIfEqual {82}
	104 Move X0, X20
	105 Call 0x1B6FA14
	106 Move X20, X31
	107 Move X19, X0
	108 Move X8, 0x2253000
	109 Move X8, [X8+3112]
	110 Move X1, [X8]
	111 Add X0, X31, 8
	112 Call Enumerator<Object, Object>.Dispose, X0
	113 Compare X20, 0
	114 JumpIfNotEqual {117}
	115 Move X0, X19
	116 Call 0x1C8518C
	117 Move X0, X20
	118 Call 0x1B6FA14
	119 Call 0x18F56A8

Method: System.Boolean GenerateTiles()

Disassembly:
	0x01CFE500 B 0x1CFE514
	0x01CFE504 B 0x1CFE514
	0x01CFE508 B 0x1CFE514
	0x01CFE50C B 0x1CFE514
	0x01CFE510 B 0x1CFE514
	0x01CFE514 MOV X20, X1
	0x01CFE518 CMP W20, 0x1
	0x01CFE51C B.NE 0x1CFE544
	0x01CFE520 BL 0x3D19840
	0x01CFE524 LDR X21, [X0]
	0x01CFE528 BL 0x3D19850
	0x01CFE52C LDR X1, [X27]
	0x01CFE530 ADD X0, X31, 0x40
	0x01CFE534 BL 0x2A5AE88
	0x01CFE538 CBZ X21, 0x1CFE124
	0x01CFE53C MOV X0, X21
	0x01CFE540 BL 0x1B6EA14
	0x01CFE544 MOV X19, X0
	0x01CFE548 MOV X21, X31
	0x01CFE54C B 0x1CFE554
	0x01CFE550 MOV X19, X0
	0x01CFE554 LDR X1, [X27]
	0x01CFE558 ADD X0, X31, 0x40
	0x01CFE55C BL 0x2A5AE88
	0x01CFE560 CBNZ X21, 0x1CFE56C
	0x01CFE564 MOV X0, X19
	0x01CFE568 BL 0x1C8418C
	0x01CFE56C MOV X0, X21
	0x01CFE570 BL 0x1B6EA14
	0x01CFE574 BL 0x18F46A8
	0x01CFE578 SUB X31, X31, 0xA0
	0x01CFE57C STR X30, [X31 + 0x60]
	0x01CFE580 STP X24, X23, [X31 + 0x70]
	0x01CFE584 STP X22, X21, [X31 + 0x80]
	0x01CFE588 STP X20, X19, [X31 + 0x90]
	0x01CFE58C ADRP X20, 0x2525000
	0x01CFE590 LDRB W8, [X20 + 0x729]
	0x01CFE594 MOV X19, X0
	0x01CFE598 TBNZ X8, 0x0, 0x1CFE610
	0x01CFE59C ADRP X0, 0x2252000
	0x01CFE5A0 LDR X0, [X0 + 0xC20]
	0x01CFE5A4 BL 0x1B6E7F0
	0x01CFE5A8 ADRP X0, 0x2252000
	0x01CFE5AC LDR X0, [X0 + 0xC28]
	0x01CFE5B0 BL 0x1B6E7F0
	0x01CFE5B4 ADRP X0, 0x2252000
	0x01CFE5B8 LDR X0, [X0 + 0xC70]
	0x01CFE5BC BL 0x1B6E7F0
	0x01CFE5C0 ADRP X0, 0x2252000
	0x01CFE5C4 LDR X0, [X0 + 0xC30]
	0x01CFE5C8 BL 0x1B6E7F0
	0x01CFE5CC ADRP X0, 0x2252000
	0x01CFE5D0 LDR X0, [X0 + 0xC78]
	0x01CFE5D4 BL 0x1B6E7F0
	0x01CFE5D8 ADRP X0, 0x2252000
	0x01CFE5DC LDR X0, [X0 + 0xC80]
	0x01CFE5E0 BL 0x1B6E7F0
	0x01CFE5E4 ADRP X0, 0x2252000
	0x01CFE5E8 LDR X0, [X0 + 0xC38]
	0x01CFE5EC BL 0x1B6E7F0
	0x01CFE5F0 ADRP X0, 0x2252000
	0x01CFE5F4 LDR X0, [X0 + 0xC88]
	0x01CFE5F8 BL 0x1B6E7F0
	0x01CFE5FC ADRP X0, 0x2252000
	0x01CFE600 LDR X0, [X0 + 0xC40]
	0x01CFE604 BL 0x1B6E7F0
	0x01CFE608 MOVZ W8, 0x1
	0x01CFE60C STRB W8, [X20 + 0x729]
	0x01CFE610 STP X31, X31, [X31 + 0x40]
	0x01CFE614 STR X31, [X31 + 0x50]
	0x01CFE618 STP X31, X31, [X31 + 0x20]
	0x01CFE61C STR X31, [X31 + 0x30]
	0x01CFE620 LDR X8, [X19 + 0x28]
	0x01CFE624 CBZ X8, 0x1CFE79C
	0x01CFE628 LDR X0, [X8 + 0x10]
	0x01CFE62C CBZ X0, 0x1CFE79C
	0x01CFE630 ADRP X8, 0x2252000
	0x01CFE634 LDR X8, [X8 + 0xC20]
	0x01CFE638 LDR X1, [X8]
	0x01CFE63C BL 0x28FA168
	0x01CFE640 CBZ X0, 0x1CFE79C
	0x01CFE644 ADRP X8, 0x2252000
	0x01CFE648 LDR X8, [X8 + 0xC40]
	0x01CFE64C ADRP X22, 0x2252000
	0x01CFE650 ADRP X23, 0x2252000
	0x01CFE654 LDR X22, [X22 + 0xC30]
	0x01CFE658 LDR X23, [X23 + 0xC88]
	0x01CFE65C LDR X1, [X8]
	0x01CFE660 ADRP X24, 0x2252000
	0x01CFE664 ADRP X21, 0x2252000
	0x01CFE668 ADRP X20, 0x2252000
	0x01CFE66C LDR X24, [X24 + 0xC78]
	0x01CFE670 LDR X21, [X21 + 0xC70]
	0x01CFE674 LDR X20, [X20 + 0xC28]
	0x01CFE678 ADD X8, X31, 0x8
	0x01CFE67C BL 0x25CA7B8
	0x01CFE680 LDUR V0, [X31 + 0x8]
	0x01CFE684 LDR X8, [X31 + 0x18]
	0x01CFE688 STR V0, [X31 + 0x4]
	0x01CFE68C STR X8, [X31 + 0x50]
	0x01CFE690 LDR X1, [X22]
	0x01CFE694 ADD X0, X31, 0x40
	0x01CFE698 BL 0x2A5AE8C
	0x01CFE69C TBZ X0, 0x0, 0x1CFE738
	0x01CFE6A0 LDR X19, [X31 + 0x50]
	0x01CFE6A4 CBZ X19, 0x1CFE78C
	0x01CFE6A8 LDR X0, [X19 + 0x20]
	0x01CFE6AC CBZ X0, 0x1CFE790
	0x01CFE6B0 LDR X1, [X23]
	0x01CFE6B4 ADD X8, X31, 0x8
	0x01CFE6B8 BL 0x2E470E0
	0x01CFE6BC LDUR V0, [X31 + 0x8]
	0x01CFE6C0 LDR X8, [X31 + 0x18]
	0x01CFE6C4 STR V0, [X31 + 0x2]
	0x01CFE6C8 STR X8, [X31 + 0x30]
	0x01CFE6CC LDR X1, [X24]
	0x01CFE6D0 ADD X0, X31, 0x20
	0x01CFE6D4 BL 0x2A14F30
	0x01CFE6D8 TBZ X0, 0x0, 0x1CFE6F8
	0x01CFE6DC LDR X0, [X31 + 0x30]
	0x01CFE6E0 CBZ X0, 0x1CFE710
	0x01CFE6E4 LDR X8, [X0]
	0x01CFE6E8 LDR X1, [X19 + 0x10]
	0x01CFE6EC LDP X9, X2, [X8 + 0x178]
	0x01CFE6F0 BLR X9
	0x01CFE6F4 B 0x1CFE6CC
	0x01CFE6F8 MOV X19, X31
	0x01CFE6FC LDR X1, [X21]
	0x01CFE700 ADD X0, X31, 0x20
	0x01CFE704 BL 0x2A14F2C
	0x01CFE708 CBZ X19, 0x1CFE690
	0x01CFE70C B 0x1CFE794
	0x01CFE710 BL 0x1B6EA1C
	0x01CFE714 B 0x1CFE7A0
	0x01CFE718 B 0x1CFE720
	0x01CFE71C B 0x1CFE720
	0x01CFE720 CMP W1, 0x1
	0x01CFE724 B.NE 0x1CFE760
	0x01CFE728 BL 0x3D19840
	0x01CFE72C LDR X19, [X0]
	0x01CFE730 BL 0x3D19850
	0x01CFE734 B 0x1CFE6FC
	0x01CFE738 LDR X1, [X20]
	0x01CFE73C ADD X0, X31, 0x40
	0x01CFE740 BL 0x2A5AE88
	0x01CFE744 LDP X20, X19, [X31 + 0x90]
	0x01CFE748 LDP X22, X21, [X31 + 0x80]
	0x01CFE74C LDP X24, X23, [X31 + 0x70]
	0x01CFE750 LDR X30, [X31 + 0x60]
	0x01CFE754 MOVZ W0, 0x1

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x2526000
	012 Move W8, [X20+1831]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {44}
	018 Move X0, 0x2253000
	019 Move X0, [X0+3024]
	020 Call 0x1B6F7F0
	021 Move X0, 0x2253000
	022 Move X0, [X0+3032]
	023 Call 0x1B6F7F0
	024 Move X0, 0x2253000
	025 Move X0, [X0+3040]
	026 Call 0x1B6F7F0
	027 Move X0, 0x2253000
	028 Move X0, [X0+3048]
	029 Call 0x1B6F7F0
	030 Move X0, 0x2253000
	031 Move X0, [X0+3056]
	032 Call 0x1B6F7F0
	033 Move X0, 0x2253000
	034 Move X0, [X0+3064]
	035 Call 0x1B6F7F0
	036 Move X0, 0x2253000
	037 Move X0, [X0+3072]
	038 Call 0x1B6F7F0
	039 Move X0, 0x2253000
	040 Move X0, [X0+3080]
	041 Call 0x1B6F7F0
	042 Move W8, 1
	043 Move [X20+1831], W8
	044 Move X0, [X19+24]
	045 Compare X0, 0
	046 JumpIfEqual {174}
	047 Move X8, 0x2253000
	048 Move X8, [X8+3032]
	049 Move X1, [X8]
	050 Call 0x20D23DC, X0
	051 Compare X0, 0
	052 JumpIfEqual {174}
	053 Move W1, [X0+24]
	054 Move X20, X0
	055 Compare W1, 0
	056 JumpIfEqual {161}
	057 Move X21, 0x2253000
	058 Move X21, [X21+3072]
	059 Move W0, W31
	060 Move X2, X31
	061 Call Random.Range, X0, X1
	062 Move X2, [X21]
	063 Move W1, W0
	064 Move X0, X20
	065 Call List`1<Object>.get_Item, X0, X1
	066 Move X8, [X19+24]
	067 Compare X8, 0
	068 JumpIfEqual {174}
	069 Move X9, 0x2253000
	070 Move X9, [X9+3024]
	071 Move X21, X0
	072 Move X0, X8
	073 Move X1, X21
	074 Move X2, [X9]
	075 Call 0x20D2148, X0, X1
	076 Compare X0, 0
	077 JumpIfEqual {174}
	078 Move W1, [X0+24]
	079 Move X22, 0x2253000
	080 Move X22, [X22+3080]
	081 Move X20, X0
	082 Move W0, W31
	083 Move X2, X31
	084 Call Random.Range, X0, X1
	085 Move X2, [X22]
	086 Move W1, W0
	087 Move X0, X20
	088 Call List`1<Object>.get_Item, X0, X1
	089 Compare X0, 0
	090 JumpIfEqual {174}
	091 Move X1, X21
	092 Move X2, X31
	093 Move X20, X0
	094 Call GenBranch.GetOtherNode, X0, X1
	095 Move X23, 0x2526000
	096 Move W8, [X23+1087]
	097 Move X22, [X19+56]
	098 Move X21, X0
	099 Compare W8, 0
	100 JumpIfNotEqual {106}
	101 Move X0, 0x2250000
	102 Move X0, [X0+1152]
	103 Call 0x1B6F7F0
	104 Move W8, 1
	105 Move [X23+1087], W8
	106 Compare X22, 0
	107 JumpIfEqual {174}
	108 Move X8, 0x2250000
	109 Move X8, [X8+1152]
	110 Move S2, 0.5
	111 NotImplemented "Instruction MOVI not yet implemented."
	112 Move X8, [X8]
	113 Move X8, [X8+184]
	114 Move V0, [X8+8]
	115 Move V1, [X8]
	116 Multiply S2, S0, S2
	117 NotImplemented "Instruction INVALID not yet implemented."
	118 Move [X22+56], D1
	119 Move [X22+64], S0
	120 Move [X22+68], D3
	121 Move [X22+76], S2
	122 Move W8, [X19+36]
	123 Move [X19+32], W31
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X26, 0x2253000
	126 Move X27, 0x2253000
	127 Move X26, [X26+3040]
	128 Move X27, [X27+3048]
	129 Move X8, [X19+16]
	130 Move X23, [X19+24]
	131 Move X0, [X26]
	132 Move X24, [X19+56]
	133 NotImplemented "Instruction CMP not yet implemented."
	134 NotImplemented "Instruction CSEL not yet implemented."
	135 Call 0x1B6FA0C
	136 Move X1, [X27]
	137 Move X22, X0
	138 Move X0, X21
	139 Call 0x1B6F8FC
	140 Move X3, X0
	141 Move X0, X22
	142 Move X1, X25
	143 Move X2, X23
	144 Move W4, W31
	145 Move X5, X20
	146 Move X6, X24
	147 Call GenerationNodeHandle..ctor, X0, X1, X2, X3, X4, X5, X6
	148 Compare X22, 0
	149 JumpIfEqual {174}
	150 Move X0, X22
	151 Call GenerationNodeHandle.TryGenerate, X0
	152 Move TEMP, X0
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfEqual {162}
	156 Move W8, [X19+32]
	157 Move W9, [X19+36]
	158 Add W8, W8, 1
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Move [X19+32], W8
	161 Move W0, W31
	162 Move X20, [X31+64]
	163 Move X19, [X31+72]
	164 Move X22, [X31+48]
	165 Move X21, [X31+56]
	166 Move X24, [X31+32]
	167 Move X23, [X31+40]
	168 Move X26, [X31+16]
	169 Move X25, [X31+24]
	170 And W0, W0, 1
	171 Move X30, [X31+80]
	172 Move X27, [X31+88]
	173 Return X0
	174 Call 0x1B6FA1C

Method: System.Boolean PickSockets()

Disassembly:
	0x01CFEB40 BL 0x1B6EA14
	0x01CFEB44 STR X0, [X31 + 0x10]
	0x01CFEB48 MOV X19, X31
	0x01CFEB4C B 0x1CFEB54
	0x01CFEB50 STR X0, [X31 + 0x10]
	0x01CFEB54 ADRP X8, 0x2252000
	0x01CFEB58 LDR X8, [X8 + 0xC28]
	0x01CFEB5C LDR X1, [X8]
	0x01CFEB60 ADD X0, X31, 0x50
	0x01CFEB64 BL 0x2A5AE88
	0x01CFEB68 CBNZ X19, 0x1CFEB74
	0x01CFEB6C LDR X0, [X31 + 0x10]
	0x01CFEB70 BL 0x1C8418C
	0x01CFEB74 MOV X0, X19
	0x01CFEB78 BL 0x1B6EA14
	0x01CFEB7C BL 0x18F46A8
	0x01CFEB80 SUB X31, X31, 0xF0
	0x01CFEB84 STR D8, [X31 + 0x80]
	0x01CFEB88 STP X29, X30, [X31 + 0x90]
	0x01CFEB8C STP X28, X27, [X31 + 0xA0]
	0x01CFEB90 STP X26, X25, [X31 + 0xB0]
	0x01CFEB94 STP X24, X23, [X31 + 0xC0]
	0x01CFEB98 STP X22, X21, [X31 + 0xD0]
	0x01CFEB9C STP X20, X19, [X31 + 0xE0]
	0x01CFEBA0 ADRP X19, 0x2525000
	0x01CFEBA4 LDRB W8, [X19 + 0x72C]
	0x01CFEBA8 MOV X20, X0
	0x01CFEBAC TBNZ X8, 0x0, 0x1CFEC60
	0x01CFEBB0 ADRP X0, 0x2252000
	0x01CFEBB4 LDR X0, [X0 + 0xC20]
	0x01CFEBB8 BL 0x1B6E7F0
	0x01CFEBBC ADRP X0, 0x2252000
	0x01CFEBC0 LDR X0, [X0 + 0xC28]
	0x01CFEBC4 BL 0x1B6E7F0
	0x01CFEBC8 ADRP X0, 0x2252000
	0x01CFEBCC LDR X0, [X0 + 0x260]
	0x01CFEBD0 BL 0x1B6E7F0
	0x01CFEBD4 ADRP X0, 0x2252000
	0x01CFEBD8 LDR X0, [X0 + 0xC30]
	0x01CFEBDC BL 0x1B6E7F0
	0x01CFEBE0 ADRP X0, 0x2252000
	0x01CFEBE4 LDR X0, [X0 + 0x268]
	0x01CFEBE8 BL 0x1B6E7F0
	0x01CFEBEC ADRP X0, 0x2252000
	0x01CFEBF0 LDR X0, [X0 + 0x270]
	0x01CFEBF4 BL 0x1B6E7F0
	0x01CFEBF8 ADRP X0, 0x2252000
	0x01CFEBFC LDR X0, [X0 + 0xC38]
	0x01CFEC00 BL 0x1B6E7F0
	0x01CFEC04 ADRP X0, 0x2252000
	0x01CFEC08 LDR X0, [X0 + 0xCE8]
	0x01CFEC0C BL 0x1B6E7F0
	0x01CFEC10 ADRP X0, 0x2252000
	0x01CFEC14 LDR X0, [X0 + 0xCF0]
	0x01CFEC18 BL 0x1B6E7F0
	0x01CFEC1C ADRP X0, 0x2252000
	0x01CFEC20 LDR X0, [X0 + 0xCF8]
	0x01CFEC24 BL 0x1B6E7F0
	0x01CFEC28 ADRP X0, 0x2252000
	0x01CFEC2C LDR X0, [X0 + 0xD00]
	0x01CFEC30 BL 0x1B6E7F0
	0x01CFEC34 ADRP X0, 0x2252000
	0x01CFEC38 LDR X0, [X0 + 0xD08]
	0x01CFEC3C BL 0x1B6E7F0
	0x01CFEC40 ADRP X0, 0x2252000
	0x01CFEC44 LDR X0, [X0 + 0x278]
	0x01CFEC48 BL 0x1B6E7F0
	0x01CFEC4C ADRP X0, 0x2252000
	0x01CFEC50 LDR X0, [X0 + 0xC40]
	0x01CFEC54 BL 0x1B6E7F0
	0x01CFEC58 MOVZ W8, 0x1
	0x01CFEC5C STRB W8, [X19 + 0x72C]
	0x01CFEC60 STP X31, X31, [X31 + 0x60]
	0x01CFEC64 STR X31, [X31 + 0x70]
	0x01CFEC68 STP X31, X31, [X31 + 0x40]
	0x01CFEC6C STR X31, [X31 + 0x50]
	0x01CFEC70 STR X31, [X31 + 0x88]
	0x01CFEC74 STP X31, X31, [X31 + 0x30]
	0x01CFEC78 STR X31, [X31 + 0x28]
	0x01CFEC7C LDR X8, [X20 + 0x28]
	0x01CFEC80 CBZ X8, 0x1CFF0E4
	0x01CFEC84 LDR X0, [X8 + 0x10]
	0x01CFEC88 CBZ X0, 0x1CFF0E4
	0x01CFEC8C STR X20, [X31 + 0x8]
	0x01CFEC90 ADRP X8, 0x2252000
	0x01CFEC94 LDR X8, [X8 + 0xC20]
	0x01CFEC98 LDR X1, [X8]
	0x01CFEC9C BL 0x28FA168
	0x01CFECA0 CBZ X0, 0x1CFF0E4
	0x01CFECA4 ADRP X8, 0x2252000
	0x01CFECA8 LDR X8, [X8 + 0xC40]
	0x01CFECAC ADRP X24, 0x2252000
	0x01CFECB0 ADRP X29, 0x2252000
	0x01CFECB4 ADRP X21, 0x2252000
	0x01CFECB8 ADRP X19, 0x2252000
	0x01CFECBC ADRP X23, 0x2252000
	0x01CFECC0 ADRP X25, 0x2252000
	0x01CFECC4 ADRP X26, 0x2252000
	0x01CFECC8 LDR X24, [X24 + 0xC30]
	0x01CFECCC LDR X29, [X29 + 0x278]
	0x01CFECD0 LDR X21, [X21 + 0x268]
	0x01CFECD4 LDR X19, [X19 + 0xCE8]
	0x01CFECD8 LDR X23, [X23 + 0x260]
	0x01CFECDC LDR X25, [X25 + 0xCF0]
	0x01CFECE0 LDR X26, [X26 + 0xD00]
	0x01CFECE4 LDR X1, [X8]
	0x01CFECE8 ADRP X27, 0x2252000
	0x01CFECEC ADRP X28, 0x2252000
	0x01CFECF0 LDR X27, [X27 + 0xD08]
	0x01CFECF4 LDR X28, [X28 + 0xCF8]
	0x01CFECF8 ADD X8, X31, 0x10
	0x01CFECFC BL 0x25CA7B8
	0x01CFED00 ADRP X9, 0xFFFFFFFFFEDAB000
	0x01CFED04 LDR V0, [X31 + 0x1]
	0x01CFED08 LDR X8, [X31 + 0x20]
	0x01CFED0C LDR V8, [X9 + 0xAB0]
	0x01CFED10 STR V0, [X31 + 0x6]
	0x01CFED14 STR X8, [X31 + 0x70]
	0x01CFED18 LDR X1, [X24]
	0x01CFED1C ADD X0, X31, 0x60
	0x01CFED20 BL 0x2A5AE8C
	0x01CFED24 TBZ X0, 0x0, 0x1CFEE40
	0x01CFED28 LDR X8, [X31 + 0x70]
	0x01CFED2C CBZ X8, 0x1CFF0C8
	0x01CFED30 LDR X0, [X8 + 0x28]
	0x01CFED34 CBZ X0, 0x1CFF0CC
	0x01CFED38 LDR X1, [X29]
	0x01CFED3C ADD X8, X31, 0x10
	0x01CFED40 BL 0x2E470E0
	0x01CFED44 LDR V0, [X31 + 0x1]
	0x01CFED48 LDR X8, [X31 + 0x20]
	0x01CFED4C STR V0, [X31 + 0x4]
	0x01CFED50 STR X8, [X31 + 0x50]
	0x01CFED54 LDR X1, [X21]
	0x01CFED58 ADD X0, X31, 0x40
	0x01CFED5C BL 0x2A14F30
	0x01CFED60 TBZ X0, 0x0, 0x1CFEDCC
	0x01CFED64 LDR X20, [X31 + 0x50]
	0x01CFED68 CBZ X20, 0x1CFEDF4
	0x01CFED6C MOV X0, X20
	0x01CFED70 MOV X1, X31
	0x01CFED74 BL 0x3A9B0C0
	0x01CFED78 CBZ X0, 0x1CFEDFC
	0x01CFED7C MOVZ W1, 0xF
	0x01CFED80 MOV X2, X31
	0x01CFED84 BL 0x3A9D964
	0x01CFED88 MOV X0, X20
	0x01CFED8C MOV X1, X31
	0x01CFED90 BL 0x3A9B0C0
	0x01CFED94 CBZ X0, 0x1CFEDE4
	0x01CFED98 LDR X1, [X19]
	0x01CFED9C BL 0x20CEEF0
	0x01CFEDA0 MOV X20, X0
	0x01CFEDA4 CBZ X0, 0x1CFEDEC
	0x01CFEDA8 MOVZ W1, 0x1
	0x01CFEDAC MOV X0, X20
	0x01CFEDB0 MOV X2, X31
	0x01CFEDB4 BL 0x3AF73C0
	0x01CFEDB8 MOV X0, X20
	0x01CFEDBC MOV V0.16B, V8.16B
	0x01CFEDC0 MOV X1, X31
	0x01CFEDC4 BL 0x3AF7CCC
	0x01CFEDC8 B 0x1CFED54
	0x01CFEDCC MOV X22, X31
	0x01CFEDD0 LDR X1, [X23]
	0x01CFEDD4 ADD X0, X31, 0x40
	0x01CFEDD8 BL 0x2A14F2C
	0x01CFEDDC CBZ X22, 0x1CFED18
	0x01CFEDE0 B 0x1CFF0D0
	0x01CFEDE4 BL 0x1B6EA1C
	0x01CFEDE8 B 0x1CFF0E8
	0x01CFEDEC BL 0x1B6EA1C
	0x01CFEDF0 B 0x1CFF0E8
	0x01CFEDF4 BL 0x1B6EA1C
	0x01CFEDF8 B 0x1CFF0E8
	0x01CFEDFC BL 0x1B6EA1C
	0x01CFEE00 B 0x1CFF0E8
	0x01CFEE04 B 0x1CFEE24
	0x01CFEE08 B 0x1CFEE24
	0x01CFEE0C B 0x1CFEE24
	0x01CFEE10 B 0x1CFEE24
	0x01CFEE14 B 0x1CFEE24
	0x01CFEE18 B 0x1CFEE24
	0x01CFEE1C B 0x1CFEE24
	0x01CFEE20 B 0x1CFEE24
	0x01CFEE24 MOV X20, X1
	0x01CFEE28 CMP W20, 0x1
	0x01CFEE2C B.NE 0x1CFF06C
	0x01CFEE30 BL 0x3D19840
	0x01CFEE34 LDR X22, [X0]
	0x01CFEE38 BL 0x3D19850
	0x01CFEE3C B 0x1CFEDD0
	0x01CFEE40 ADRP X23, 0x2252000
	0x01CFEE44 LDR X23, [X23 + 0xC28]
	0x01CFEE48 ADD X0, X31, 0x60
	0x01CFEE4C LDR X1, [X23]
	0x01CFEE50 BL 0x2A5AE88
	0x01CFEE54 LDR X8, [X31 + 0x8]
	0x01CFEE58 LDR X8, [X8 + 0x28]
	0x01CFEE5C CBZ X8, 0x1CFF0E4
	0x01CFEE60 LDR X0, [X8 + 0x10]
	0x01CFEE64 CBZ X0, 0x1CFF0E4
	0x01CFEE68 ADRP X8, 0x2252000
	0x01CFEE6C LDR X8, [X8 + 0xC20]
	0x01CFEE70 LDR X1, [X8]
	0x01CFEE74 BL 0x28FA168
	0x01CFEE78 CBZ X0, 0x1CFF0E4
	0x01CFEE7C ADRP X8, 0x2252000
	0x01CFEE80 LDR X8, [X8 + 0xC40]
	0x01CFEE84 LDR X1, [X8]

ISIL:
	001 Move [X31-160], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X29
	009 Move [X31+72], X30
	010 Move [X31+80], X28
	011 Move [X31+88], X27
	012 Move [X31+96], X26
	013 Move [X31+104], X25
	014 Move [X31+112], X24
	015 Move [X31+120], X23
	016 Move [X31+128], X22
	017 Move [X31+136], X21
	018 Move [X31+144], X20
	019 Move [X31+152], X19
	020 Move X20, 0x2526000
	021 Move W8, [X20+1832]
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {47}
	027 Move X0, 0x2253000
	028 Move X0, [X0+3144]
	029 Call 0x1B6F7F0
	030 Move X0, 0x2253000
	031 Move X0, [X0+3152]
	032 Call 0x1B6F7F0
	033 Move X0, 0x2253000
	034 Move X0, [X0+3160]
	035 Call 0x1B6F7F0
	036 Move X0, 0x2253000
	037 Move X0, [X0+3168]
	038 Call 0x1B6F7F0
	039 Move X0, 0x2253000
	040 Move X0, [X0+3176]
	041 Call 0x1B6F7F0
	042 Move X0, 0x2250000
	043 Move X0, [X0+1144]
	044 Call 0x1B6F7F0
	045 Move W8, 1
	046 Move [X20+1832], W8
	047 Move X0, [X19+56]
	048 Compare X0, 0
	049 JumpIfEqual {231}
	050 Move X8, 0x2253000
	051 Move X8, [X8+3144]
	052 Move X19, 0x2253000
	053 Move X20, 0x2253000
	054 Move W1, 1
	055 Move X2, [X8]
	056 Move X19, [X19+3176]
	057 Move X20, [X20+3168]
	058 Call 0x2091B0C, X0, X1
	059 Move X8, [X19]
	060 Move X19, X0
	061 Move X0, X8
	062 Call 0x1B6FA0C
	063 Move X1, [X20]
	064 Move X20, X0
	065 Call HashSet`1<Object>..ctor, X0
	066 Compare X19, 0
	067 JumpIfEqual {231}
	068 Move X8, [X19+24]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X24, 0x2250000
	071 Move X9, -19218432
	072 Move X24, [X24+1144]
	073 Move V14, [X9+3556]
	074 Move X27, X31
	075 Add X26, X19, 40
	076 Move W29, 1
	077 Add X9, X27, 1
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move [X31+8], X9
	080 Add X9, X19, X27
	081 Move X28, X31
	082 Add X21, X9, 32
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Add X25, X29, X28
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X0, [X24]
	087 Move X22, [X21]
	088 Move X23, [X26]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1B6F8F8
	093 Move X0, X22
	094 Move X1, X23
	095 Move X2, X31
	096 Call Object.op_Equality, X0, X1
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfEqual {179}
	101 Move X8, [X19+24]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X0, [X21]
	104 Compare X0, 0
	105 JumpIfEqual {231}
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X8, [X26]
	108 Compare X8, 0
	109 JumpIfEqual {231}
	110 Move W9, [X0+32]
	111 Move W8, [X8+32]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X1, X31
	114 Call Component.get_transform, X0
	115 Compare X0, 0
	116 JumpIfEqual {231}
	117 Move X1, X31
	118 Call Transform.get_position, X0
	119 Move W8, [X19+24]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X0, [X26]
	122 Compare X0, 0
	123 JumpIfEqual {231}
	124 Move X1, X31
	125 Move V8, V0
	126 Move V9, V1
	127 Move V10, V2
	128 Call Component.get_transform, X0
	129 Compare X0, 0
	130 JumpIfEqual {231}
	131 Move X1, X31
	132 Call Transform.get_position, X0
	133 Move X8, 0x2526000
	134 Move W8, [X8+1286]
	135 Move V11, V0
	136 Move V12, V1
	137 Move V13, V2
	138 Compare W8, 0
	139 JumpIfNotEqual {146}
	140 Move X0, 0x2250000
	141 Move X0, [X0+1160]
	142 Call 0x1B6F7F0
	143 Move W8, 1
	144 Move X9, 0x2526000
	145 Move [X9+1286], W8
	146 Move X8, 0x2250000
	147 Move X8, [X8+1160]
	148 Move X0, [X8]
	149 Move W8, [X0+224]
	150 Compare W8, 0
	151 JumpIfNotEqual {153}
	152 Call 0x1B6F8F8
	153 Subtract S0, S8, S11
	154 Subtract S1, S9, S12
	155 Subtract S2, S10, S13
	156 Multiply S0, S0, S0
	157 Multiply S1, S1, S1
	158 Add S0, S0, S1
	159 Multiply S1, S2, S2
	160 Add S0, S1, S0
	161 NotImplemented "Instruction FSQRT not yet implemented."
	162 NotImplemented "Instruction FCMP not yet implemented."
	163 Move W8, [X19+24]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X22, 0x2253000
	166 Move X22, [X22+3152]
	167 Compare X20, 0
	168 JumpIfEqual {231}
	169 Move X1, [X21]
	170 Move X2, [X22]
	171 Move X0, X20
	172 Call HashSet`1<Object>.Add, X0, X1
	173 Move W8, [X19+24]
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move X1, [X26]
	176 Move X2, [X22]
	177 Move X0, X20
	178 Call HashSet`1<Object>.Add, X0, X1
	179 Move X8, [X19+24]
	180 Add X28, X28, 1
	181 Add W9, W29, W28
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Move X9, [X31+8]
	184 Add X26, X26, 8
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Add X29, X29, 1
	187 Move X27, X9
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X23, 0x2253000
	190 Move X23, [X23+3160]
	191 Move X22, X31
	192 Add X24, X19, 32
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Compare X20, 0
	195 JumpIfEqual {231}
	196 Move X21, [X24]
	197 Move X2, [X23]
	198 Move X0, X20
	199 Move X1, X21
	200 Call HashSet`1<Object>.Contains, X0, X1
	201 Compare X21, 0
	202 JumpIfEqual {231}
	203 And W1, W0, 1
	204 Move X0, X21
	205 Call Socket.SetOpen, X0, X1
	206 Move W8, [X19+24]
	207 Add X22, X22, 1
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Move X20, [X31+144]
	210 Move X19, [X31+152]
	211 Move X22, [X31+128]
	212 Move X21, [X31+136]
	213 Move X24, [X31+112]
	214 Move X23, [X31+120]
	215 Move X26, [X31+96]
	216 Move X25, [X31+104]
	217 Move X28, [X31+80]
	218 Move X27, [X31+88]
	219 Move X29, [X31+64]
	220 Move X30, [X31+72]
	221 Move D9, [X31+48]
	222 Move D8, [X31+56]
	223 Move D11, [X31+32]
	224 Move D10, [X31+40]
	225 Move D13, [X31+16]
	226 Move D12, [X31+24]
	227 Move W0, 1
	228 Move V14, [X31+160]
	229 Return X0
	230 Call 0x1B6FA24
	231 Call 0x1B6FA1C

Method: System.Boolean RenderTiles()

Disassembly:
	0x01CFF578 CBNZ X21, 0x1CFF584
	0x01CFF57C MOV X0, X19
	0x01CFF580 BL 0x1C8418C
	0x01CFF584 MOV X0, X21
	0x01CFF588 BL 0x1B6EA14
	0x01CFF58C BL 0x18F46A8
	0x01CFF590 SUB X31, X31, 0x120
	0x01CFF594 STP X29, X30, [X31 + 0xC0]
	0x01CFF598 STP X28, X27, [X31 + 0xD0]
	0x01CFF59C STP X26, X25, [X31 + 0xE0]
	0x01CFF5A0 STP X24, X23, [X31 + 0xF0]
	0x01CFF5A4 STP X22, X21, [X31 + 0x100]
	0x01CFF5A8 STP X20, X19, [X31 + 0x110]
	0x01CFF5AC ADRP X21, 0x2524000
	0x01CFF5B0 LDRB W8, [X21 + 0x72D]
	0x01CFF5B4 MOV W19, W1
	0x01CFF5B8 MOV X20, X0
	0x01CFF5BC TBNZ X8, 0x0, 0x1CFF664
	0x01CFF5C0 ADRP X0, 0x2251000
	0x01CFF5C4 LDR X0, [X0 + 0xD40]
	0x01CFF5C8 BL 0x1B6E7F0
	0x01CFF5CC ADRP X0, 0x2251000
	0x01CFF5D0 LDR X0, [X0 + 0xD48]
	0x01CFF5D4 BL 0x1B6E7F0
	0x01CFF5D8 ADRP X0, 0x2251000
	0x01CFF5DC LDR X0, [X0 + 0xD50]
	0x01CFF5E0 BL 0x1B6E7F0
	0x01CFF5E4 ADRP X0, 0x2251000
	0x01CFF5E8 LDR X0, [X0 + 0xD58]
	0x01CFF5EC BL 0x1B6E7F0
	0x01CFF5F0 ADRP X0, 0x2251000
	0x01CFF5F4 LDR X0, [X0 + 0xD60]
	0x01CFF5F8 BL 0x1B6E7F0
	0x01CFF5FC ADRP X0, 0x2251000
	0x01CFF600 LDR X0, [X0 + 0xD68]
	0x01CFF604 BL 0x1B6E7F0
	0x01CFF608 ADRP X0, 0x2251000
	0x01CFF60C LDR X0, [X0 + 0x228]
	0x01CFF610 BL 0x1B6E7F0
	0x01CFF614 ADRP X0, 0x2251000
	0x01CFF618 LDR X0, [X0 + 0xD70]
	0x01CFF61C BL 0x1B6E7F0
	0x01CFF620 ADRP X0, 0x2251000
	0x01CFF624 LDR X0, [X0 + 0xD78]
	0x01CFF628 BL 0x1B6E7F0
	0x01CFF62C ADRP X0, 0x2251000
	0x01CFF630 LDR X0, [X0 + 0xD80]
	0x01CFF634 BL 0x1B6E7F0
	0x01CFF638 ADRP X0, 0x2251000
	0x01CFF63C LDR X0, [X0 + 0xD88]
	0x01CFF640 BL 0x1B6E7F0
	0x01CFF644 ADRP X0, 0x2251000
	0x01CFF648 LDR X0, [X0 + 0x2E0]
	0x01CFF64C BL 0x1B6E7F0
	0x01CFF650 ADRP X0, 0x2251000
	0x01CFF654 LDR X0, [X0 + 0x2D8]
	0x01CFF658 BL 0x1B6E7F0
	0x01CFF65C MOVZ W8, 0x1
	0x01CFF660 STRB W8, [X21 + 0x72D]
	0x01CFF664 STP X31, X31, [X31 + 0x60]
	0x01CFF668 STR X31, [X31 + 0x70]
	0x01CFF66C STP X31, X31, [X31 + 0x48]
	0x01CFF670 STR X31, [X31 + 0x58]
	0x01CFF674 STP X31, X31, [X31 + 0x30]
	0x01CFF678 STR X31, [X31 + 0x40]
	0x01CFF67C LDR X8, [X20 + 0x28]
	0x01CFF680 CBZ X8, 0x1CFF9F0
	0x01CFF684 LDR X0, [X8 + 0x18]
	0x01CFF688 CBZ X0, 0x1CFF9F0
	0x01CFF68C ADRP X8, 0x2251000
	0x01CFF690 LDR X8, [X8 + 0xD78]
	0x01CFF694 ADRP X26, 0x2251000
	0x01CFF698 ADRP X29, 0x2251000
	0x01CFF69C ADRP X24, 0x2251000
	0x01CFF6A0 ADRP X27, 0x2251000
	0x01CFF6A4 ADRP X25, 0x2251000
	0x01CFF6A8 LDR X26, [X26 + 0xD58]
	0x01CFF6AC LDR X29, [X29 + 0xD80]
	0x01CFF6B0 LDR X24, [X24 + 0xD50]
	0x01CFF6B4 LDR X27, [X27 + 0x228]
	0x01CFF6B8 LDR X25, [X25 + 0xD40]
	0x01CFF6BC LDR X1, [X8]
	0x01CFF6C0 ADD X8, X31, 0xA0
	0x01CFF6C4 BL 0x2E470E0
	0x01CFF6C8 LDR V0, [X31 + 0xA]
	0x01CFF6CC LDR X8, [X31 + 0xB0]
	0x01CFF6D0 STR V0, [X31 + 0x6]
	0x01CFF6D4 STR X8, [X31 + 0x70]
	0x01CFF6D8 LDR X1, [X26]
	0x01CFF6DC ADD X0, X31, 0x60
	0x01CFF6E0 BL 0x2A14F30
	0x01CFF6E4 TBZ X0, 0x0, 0x1CFF940
	0x01CFF6E8 ADRP X8, 0x2251000
	0x01CFF6EC LDR X21, [X31 + 0x70]
	0x01CFF6F0 LDR X8, [X8 + 0x2D8]
	0x01CFF6F4 LDR X0, [X8]
	0x01CFF6F8 BL 0x1B6EA0C
	0x01CFF6FC ADRP X8, 0x2251000
	0x01CFF700 LDR X8, [X8 + 0x2E0]
	0x01CFF704 MOV X22, X0
	0x01CFF708 LDR X1, [X8]
	0x01CFF70C BL 0x2E45D4C
	0x01CFF710 CBZ X21, 0x1CFF9CC
	0x01CFF714 LDR X1, [X29]
	0x01CFF718 ADD X8, X31, 0xA0
	0x01CFF71C MOV X0, X21
	0x01CFF720 BL 0x2E470E0
	0x01CFF724 LDR V0, [X31 + 0xA]
	0x01CFF728 LDR X8, [X31 + 0xB0]
	0x01CFF72C STR V0, [X31 + 0x3]
	0x01CFF730 STR X8, [X31 + 0x40]
	0x01CFF734 LDR X1, [X24]
	0x01CFF738 ADD X0, X31, 0x30
	0x01CFF73C BL 0x2A14F30
	0x01CFF740 TBZ X0, 0x0, 0x1CFF764
	0x01CFF744 LDR X8, [X31 + 0x40]
	0x01CFF748 CBZ X8, 0x1CFF8E0
	0x01CFF74C CBZ X22, 0x1CFF8E8
	0x01CFF750 LDR X1, [X8 + 0x28]
	0x01CFF754 LDR X2, [X27]
	0x01CFF758 MOV X0, X22
	0x01CFF75C BL 0x2E4671C
	0x01CFF760 B 0x1CFF734
	0x01CFF764 MOV X23, X31
	0x01CFF768 MOVZ W28, 0x6
	0x01CFF76C LDR X1, [X25]
	0x01CFF770 ADD X0, X31, 0x30
	0x01CFF774 BL 0x2A14F2C
	0x01CFF778 CBNZ X23, 0x1CFF9D0
	0x01CFF77C CMP W28, 0x6
	0x01CFF780 B.EQ 0x1CFF788
	0x01CFF784 CBNZ W28, 0x1CFF940
	0x01CFF788 CBZ X22, 0x1CFF9E0
	0x01CFF78C ADRP X8, 0x2251000
	0x01CFF790 LDR X8, [X8 + 0xD88]
	0x01CFF794 LDR X1, [X8]
	0x01CFF798 MOV X0, X22
	0x01CFF79C BL 0x2E4834C
	0x01CFF7A0 MOV X1, X0
	0x01CFF7A4 ADD X0, X31, 0x48
	0x01CFF7A8 MOV W2, W19
	0x01CFF7AC BL 0x1D01D78
	0x01CFF7B0 LDR X8, [X20 + 0x28]
	0x01CFF7B4 CBZ X8, 0x1CFF9DC
	0x01CFF7B8 LDR X0, [X8 + 0x20]
	0x01CFF7BC LDUR V0, [X31 + 0x48]
	0x01CFF7C0 LDR X8, [X31 + 0x58]
	0x01CFF7C4 STR V0, [X31 + 0x1]
	0x01CFF7C8 STR X8, [X31 + 0x20]
	0x01CFF7CC CBZ X0, 0x1CFF9E4
	0x01CFF7D0 LDR V0, [X31 + 0x1]
	0x01CFF7D4 LDR X8, [X31 + 0x20]
	0x01CFF7D8 ADRP X10, 0x2251000
	0x01CFF7DC STR V0, [X31 + 0x8]
	0x01CFF7E0 STR X8, [X31 + 0x90]
	0x01CFF7E4 LDR W9, [X0 + 0x1C]
	0x01CFF7E8 LDR X8, [X0 + 0x10]
	0x01CFF7EC LDR X10, [X10 + 0xD70]
	0x01CFF7F0 ADD W9, W9, 0x1
	0x01CFF7F4 LDR X10, [X10]
	0x01CFF7F8 STR W9, [X0 + 0x1C]
	0x01CFF7FC CBZ X8, 0x1CFF9D8
	0x01CFF800 LDRSW X9, [X0 + 0x18]
	0x01CFF804 LDR W11, [X8 + 0x18]
	0x01CFF808 CMP W9, W11
	0x01CFF80C B.CS 0x1CFF834
	0x01CFF810 ADD W10, W9, 0x1
	0x01CFF814 STR W10, [X0 + 0x18]
	0x01CFF818 LDR X10, [X31 + 0x90]
	0x01CFF81C LDR V0, [X31 + 0x8]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+112], X24
	004 Move [X31+120], X23
	005 Move [X31+128], X22
	006 Move [X31+136], X21
	007 Move [X31+144], X20
	008 Move [X31+152], X19
	009 Move X20, 0x2525000
	010 Move W8, [X20+1833]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {45}
	016 Move X0, 0x2252000
	017 Move X0, [X0+3104]
	018 Call 0x1B6F7F0
	019 Move X0, 0x2252000
	020 Move X0, [X0+3112]
	021 Call 0x1B6F7F0
	022 Move X0, 0x2252000
	023 Move X0, [X0+3184]
	024 Call 0x1B6F7F0
	025 Move X0, 0x2252000
	026 Move X0, [X0+3120]
	027 Call 0x1B6F7F0
	028 Move X0, 0x2252000
	029 Move X0, [X0+3192]
	030 Call 0x1B6F7F0
	031 Move X0, 0x2252000
	032 Move X0, [X0+3200]
	033 Call 0x1B6F7F0
	034 Move X0, 0x2252000
	035 Move X0, [X0+3128]
	036 Call 0x1B6F7F0
	037 Move X0, 0x2252000
	038 Move X0, [X0+3208]
	039 Call 0x1B6F7F0
	040 Move X0, 0x2252000
	041 Move X0, [X0+3136]
	042 Call 0x1B6F7F0
	043 Move W8, 1
	044 Move [X20+1833], W8
	045 Move [X31+64], X31
	046 Move [X31+72], X31
	047 Move [X31+80], X31
	048 Move [X31+32], X31
	049 Move [X31+40], X31
	050 Move [X31+48], X31
	051 Move X8, [X19+40]
	052 Compare X8, 0
	053 JumpIfEqual {157}
	054 Move X0, [X8+16]
	055 Compare X0, 0
	056 JumpIfEqual {157}
	057 Move X8, 0x2252000
	058 Move X8, [X8+3104]
	059 Move X1, [X8]
	060 Call Dictionary`2<Object, Object>.get_Values, X0
	061 Compare X0, 0
	062 JumpIfEqual {157}
	063 Move X8, 0x2252000
	064 Move X8, [X8+3136]
	065 Move X22, 0x2252000
	066 Move X23, 0x2252000
	067 Move X22, [X22+3120]
	068 Move X23, [X23+3208]
	069 Move X1, [X8]
	070 Move X24, 0x2252000
	071 Move X21, 0x2252000
	072 Move X20, 0x2252000
	073 Move X24, [X24+3192]
	074 Move X21, [X21+3184]
	075 Move X20, [X20+3112]
	076 Add X8, X31, 8
	077 Call ValueCollection<Object, Object>.GetEnumerator, X0
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 Move X8, [X31+24]
	080 Move [X31+4], V0
	081 Move [X31+80], X8
	082 Move X1, [X22]
	083 Add X0, X31, 64
	084 Call Enumerator<Object, Object>.MoveNext, X0
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {128}
	089 Move X19, [X31+80]
	090 Compare X19, 0
	091 JumpIfEqual {153}
	092 Move X0, [X19+32]
	093 Compare X0, 0
	094 JumpIfEqual {154}
	095 Move X1, [X23]
	096 Add X8, X31, 8
	097 Call List`1<Object>.GetEnumerator, X0
	098 NotImplemented "Instruction LDUR not yet implemented."
	099 Move X8, [X31+24]
	100 Move [X31+2], V0
	101 Move [X31+48], X8
	102 Move X1, [X24]
	103 Add X0, X31, 32
	104 Call Enumerator<Object>.MoveNext, X0
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {117}
	109 Move X0, [X31+48]
	110 Compare X0, 0
	111 JumpIfEqual {123}
	112 Move X8, [X0]
	113 Move X1, [X19+16]
	114 Move X9, [X8+376]
	115 Move X2, [X8+384]
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Move X19, X31
	118 Move X1, [X21]
	119 Add X0, X31, 32
	120 Call Enumerator<Object>.Dispose, X0
	121 Compare X19, 0
	122 JumpIfEqual {82}
	123 Call 0x1B6FA1C
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Call 0x3D1A840
	126 Move X19, [X0]
	127 Call 0x3D1A850
	128 Move X1, [X20]
	129 Add X0, X31, 64
	130 Call Enumerator<Object, Object>.Dispose, X0
	131 Move X20, [X31+144]
	132 Move X19, [X31+152]
	133 Move X22, [X31+128]
	134 Move X21, [X31+136]
	135 Move X24, [X31+112]
	136 Move X23, [X31+120]
	137 Move X30, [X31+96]
	138 Move W0, 1
	139 Add X31, X31, 160
	140 Return X0
	141 Move [X31], X1
	142 Move [X31+104], X0
	143 Move X19, X31
	144 Move X1, [X21]
	145 Add X0, X31, 32
	146 Call Enumerator<Object>.Dispose, X0
	147 Move X0, [X31+104]
	148 Move X1, [X31]
	149 Compare X19, 0
	150 JumpIfEqual {160}
	151 Move X0, X19
	152 Call 0x1B6FA14
	153 Call 0x1B6FA1C
	154 Call 0x1B6FA1C
	155 Move X0, X19
	156 Call 0x1B6FA14
	157 Call 0x1B6FA1C
	158 Move [X31], X1
	159 Move [X31+104], X0
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Call 0x3D1A840
	162 Move X19, [X0]
	163 Call 0x3D1A850
	164 Move X1, [X20]
	165 Add X0, X31, 64
	166 Call Enumerator<Object, Object>.Dispose, X0
	167 Compare X19, 0
	168 JumpIfEqual {131}
	169 Move X0, X19
	170 Call 0x1B6FA14
	171 Move [X31+104], X0
	172 Move X19, X31
	173 Move [X31+104], X0
	174 Move X1, [X20]
	175 Add X0, X31, 64
	176 Call Enumerator<Object, Object>.Dispose, X0
	177 Compare X19, 0
	178 JumpIfNotEqual {181}
	179 Move X0, [X31+104]
	180 Call 0x1C8518C
	181 Move X0, X19
	182 Call 0x1B6FA14
	183 Call 0x18F56A8

Method: System.Void FindObjects()

Disassembly:
	0x01CFF820 MOVZ W11, 0x18
	0x01CFF824 MADD X8, X9, X11, X8
	0x01CFF828 STR X10, [X8 + 0x30]
	0x01CFF82C STR V0, [X8 + 0x2]
	0x01CFF830 B 0x1CFF858
	0x01CFF834 LDR X8, [X10 + 0x20]
	0x01CFF838 LDR V0, [X31 + 0x8]
	0x01CFF83C LDR X9, [X31 + 0x90]
	0x01CFF840 LDR X8, [X8 + 0xC0]
	0x01CFF844 LDR X2, [X8 + 0x70]
	0x01CFF848 STR V0, [X31 + 0xA]
	0x01CFF84C STR X9, [X31 + 0xB0]
	0x01CFF850 ADD X1, X31, 0xA0
	0x01CFF854 BL 0x2E38018
	0x01CFF858 LDR X1, [X29]
	0x01CFF85C ADD X8, X31, 0xA0
	0x01CFF860 MOV X0, X21
	0x01CFF864 BL 0x2E470E0
	0x01CFF868 LDR V0, [X31 + 0xA]
	0x01CFF86C LDR X8, [X31 + 0xB0]
	0x01CFF870 STR V0, [X31 + 0x3]
	0x01CFF874 STR X8, [X31 + 0x40]
	0x01CFF878 LDR X1, [X24]
	0x01CFF87C ADD X0, X31, 0x30
	0x01CFF880 BL 0x2A14F30
	0x01CFF884 TBZ X0, 0x0, 0x1CFF8B4
	0x01CFF888 LDR X8, [X31 + 0x40]
	0x01CFF88C LDUR V0, [X31 + 0x48]
	0x01CFF890 LDR X9, [X31 + 0x58]
	0x01CFF894 STR V0, [X31 + 0xA]
	0x01CFF898 STR X9, [X31 + 0xB0]
	0x01CFF89C CBZ X8, 0x1CFF8F0
	0x01CFF8A0 LDR X9, [X31 + 0xB0]
	0x01CFF8A4 LDR V0, [X31 + 0xA]
	0x01CFF8A8 STR X9, [X8 + 0x48]
	0x01CFF8AC STUR V0, [X8 + 0x38]
	0x01CFF8B0 B 0x1CFF878
	0x01CFF8B4 MOV X21, X31
	0x01CFF8B8 MOVZ W22, 0x9
	0x01CFF8BC LDR X1, [X25]
	0x01CFF8C0 ADD X0, X31, 0x30
	0x01CFF8C4 BL 0x2A14F2C
	0x01CFF8C8 CBNZ X21, 0x1CFF9E8
	0x01CFF8CC CMP W22, 0x9
	0x01CFF8D0 B.EQ 0x1CFF8D8
	0x01CFF8D4 CBNZ W22, 0x1CFF940
	0x01CFF8D8 ADD W19, W19, 0x1
	0x01CFF8DC B 0x1CFF6D8
	0x01CFF8E0 BL 0x1B6EA1C
	0x01CFF8E4 B 0x1CFF9F4
	0x01CFF8E8 BL 0x1B6EA1C
	0x01CFF8EC B 0x1CFF9F4
	0x01CFF8F0 BL 0x1B6EA1C
	0x01CFF8F4 B 0x1CFF9F4
	0x01CFF8F8 B 0x1CFF908
	0x01CFF8FC B 0x1CFF924
	0x01CFF900 B 0x1CFF924
	0x01CFF904 B 0x1CFF924
	0x01CFF908 CMP W1, 0x1
	0x01CFF90C B.NE 0x1CFF9A0
	0x01CFF910 BL 0x3D19840
	0x01CFF914 LDR X21, [X0]
	0x01CFF918 BL 0x3D19850
	0x01CFF91C MOV W22, W31
	0x01CFF920 B 0x1CFF8BC
	0x01CFF924 CMP W1, 0x1
	0x01CFF928 B.NE 0x1CFF974
	0x01CFF92C BL 0x3D19840
	0x01CFF930 LDR X23, [X0]
	0x01CFF934 BL 0x3D19850
	0x01CFF938 MOV W28, W31
	0x01CFF93C B 0x1CFF76C
	0x01CFF940 ADRP X8, 0x2251000
	0x01CFF944 LDR X8, [X8 + 0xD48]
	0x01CFF948 ADD X0, X31, 0x60
	0x01CFF94C LDR X1, [X8]
	0x01CFF950 BL 0x2A14F2C
	0x01CFF954 LDP X20, X19, [X31 + 0x110]
	0x01CFF958 LDP X22, X21, [X31 + 0x100]
	0x01CFF95C LDP X24, X23, [X31 + 0xF0]
	0x01CFF960 LDP X26, X25, [X31 + 0xE0]
	0x01CFF964 LDP X28, X27, [X31 + 0xD0]
	0x01CFF968 LDP X29, X30, [X31 + 0xC0]
	0x01CFF96C ADD X31, X31, 0x120
	0x01CFF970 RET
	0x01CFF974 MOV X19, X1
	0x01CFF978 MOV X20, X0
	0x01CFF97C MOV X23, X31
	0x01CFF980 LDR X1, [X25]
	0x01CFF984 ADD X0, X31, 0x30
	0x01CFF988 BL 0x2A14F2C
	0x01CFF98C MOV X0, X20
	0x01CFF990 MOV X1, X19
	0x01CFF994 CBZ X23, 0x1CFFA44
	0x01CFF998 MOV X0, X23
	0x01CFF99C BL 0x1B6EA14
	0x01CFF9A0 MOV X19, X1
	0x01CFF9A4 MOV X20, X0
	0x01CFF9A8 MOV X21, X31
	0x01CFF9AC LDR X1, [X25]
	0x01CFF9B0 ADD X0, X31, 0x30
	0x01CFF9B4 BL 0x2A14F2C
	0x01CFF9B8 MOV X0, X20
	0x01CFF9BC MOV X1, X19
	0x01CFF9C0 CBZ X21, 0x1CFFA44
	0x01CFF9C4 MOV X0, X21
	0x01CFF9C8 BL 0x1B6EA14
	0x01CFF9CC BL 0x1B6EA1C
	0x01CFF9D0 MOV X0, X23
	0x01CFF9D4 BL 0x1B6EA14
	0x01CFF9D8 BL 0x1B6EA1C
	0x01CFF9DC BL 0x1B6EA1C
	0x01CFF9E0 BL 0x1B6EA1C
	0x01CFF9E4 BL 0x1B6EA1C
	0x01CFF9E8 MOV X0, X21
	0x01CFF9EC BL 0x1B6EA14
	0x01CFF9F0 BL 0x1B6EA1C
	0x01CFF9F4 MOV X19, X1
	0x01CFF9F8 MOV X20, X0
	0x01CFF9FC B 0x1CFF9AC
	0x01CFFA00 MOV X19, X1
	0x01CFFA04 MOV X20, X0
	0x01CFFA08 B 0x1CFF980
	0x01CFFA0C B 0x1CFFA44
	0x01CFFA10 B 0x1CFFA44
	0x01CFFA14 B 0x1CFFA44
	0x01CFFA18 B 0x1CFFA44
	0x01CFFA1C B 0x1CFFA44
	0x01CFFA20 B 0x1CFFA44
	0x01CFFA24 B 0x1CFFA44
	0x01CFFA28 B 0x1CFFA44
	0x01CFFA2C B 0x1CFFA44
	0x01CFFA30 B 0x1CFFA44
	0x01CFFA34 B 0x1CFFA44
	0x01CFFA38 B 0x1CFFA44
	0x01CFFA3C B 0x1CFFA44
	0x01CFFA40 B 0x1CFFA44
	0x01CFFA44 CMP W1, 0x1
	0x01CFFA48 B.NE 0x1CFFA78
	0x01CFFA4C BL 0x3D19840
	0x01CFFA50 LDR X19, [X0]
	0x01CFFA54 BL 0x3D19850
	0x01CFFA58 ADRP X8, 0x2251000
	0x01CFFA5C LDR X8, [X8 + 0xD48]
	0x01CFFA60 ADD X0, X31, 0x60
	0x01CFFA64 LDR X1, [X8]
	0x01CFFA68 BL 0x2A14F2C
	0x01CFFA6C CBZ X19, 0x1CFF954
	0x01CFFA70 MOV X0, X19
	0x01CFFA74 BL 0x1B6EA14
	0x01CFFA78 MOV X20, X0
	0x01CFFA7C MOV X19, X31
	0x01CFFA80 B 0x1CFFA88
	0x01CFFA84 MOV X20, X0
	0x01CFFA88 ADRP X8, 0x2251000
	0x01CFFA8C LDR X8, [X8 + 0xD48]
	0x01CFFA90 LDR X1, [X8]
	0x01CFFA94 ADD X0, X31, 0x60
	0x01CFFA98 BL 0x2A14F2C
	0x01CFFA9C CBNZ X19, 0x1CFFAA8
	0x01CFFAA0 MOV X0, X20
	0x01CFFAA4 BL 0x1C8418C
	0x01CFFAA8 MOV X0, X19
	0x01CFFAAC BL 0x1B6EA14
	0x01CFFAB0 BL 0x18F46A8
	0x01CFFAB4 SUB X31, X31, 0x180
	0x01CFFAB8 STP D11, D10, [X31 + 0x100]
	0x01CFFABC STP D9, D8, [X31 + 0x110]
	0x01CFFAC0 STP X29, X30, [X31 + 0x120]
	0x01CFFAC4 STP X28, X27, [X31 + 0x130]
	0x01CFFAC8 STP X26, X25, [X31 + 0x140]
	0x01CFFACC STP X24, X23, [X31 + 0x150]
	0x01CFFAD0 STP X22, X21, [X31 + 0x160]
	0x01CFFAD4 STP X20, X19, [X31 + 0x170]
	0x01CFFAD8 ADRP X19, 0x2524000
	0x01CFFADC LDRB W8, [X19 + 0x72E]
	0x01CFFAE0 STR X0, [X31 + 0x18]
	0x01CFFAE4 TBNZ X8, 0x0, 0x1CFFD6C
	0x01CFFAE8 ADRP X0, 0x2251000
	0x01CFFAEC LDR X0, [X0 + 0xD90]
	0x01CFFAF0 BL 0x1B6E7F0
	0x01CFFAF4 ADRP X0, 0x2251000
	0x01CFFAF8 LDR X0, [X0 + 0xD98]
	0x01CFFAFC BL 0x1B6E7F0
	0x01CFFB00 ADRP X0, 0x2251000
	0x01CFFB04 LDR X0, [X0 + 0xDA0]
	0x01CFFB08 BL 0x1B6E7F0
	0x01CFFB0C ADRP X0, 0x2251000
	0x01CFFB10 LDR X0, [X0 + 0xCA8]
	0x01CFFB14 BL 0x1B6E7F0
	0x01CFFB18 ADRP X0, 0x2251000
	0x01CFFB1C LDR X0, [X0 + 0xDA8]
	0x01CFFB20 BL 0x1B6E7F0
	0x01CFFB24 ADRP X0, 0x2251000
	0x01CFFB28 LDR X0, [X0 + 0xCB8]
	0x01CFFB2C BL 0x1B6E7F0
	0x01CFFB30 ADRP X0, 0x2251000
	0x01CFFB34 LDR X0, [X0 + 0xDB0]
	0x01CFFB38 BL 0x1B6E7F0
	0x01CFFB3C ADRP X0, 0x2251000
	0x01CFFB40 LDR X0, [X0 + 0xDB8]
	0x01CFFB44 BL 0x1B6E7F0
	0x01CFFB48 ADRP X0, 0x2251000
	0x01CFFB4C LDR X0, [X0 + 0xDC0]
	0x01CFFB50 BL 0x1B6E7F0
	0x01CFFB54 ADRP X0, 0x2251000
	0x01CFFB58 LDR X0, [X0 + 0xDC8]
	0x01CFFB5C BL 0x1B6E7F0
	0x01CFFB60 ADRP X0, 0x224F000
	0x01CFFB64 LDR X0, [X0 + 0xD08]
	0x01CFFB68 BL 0x1B6E7F0
	0x01CFFB6C ADRP X0, 0x2251000
	0x01CFFB70 LDR X0, [X0 + 0xCC0]
	0x01CFFB74 BL 0x1B6E7F0
	0x01CFFB78 ADRP X0, 0x2251000
	0x01CFFB7C LDR X0, [X0 + 0xDD0]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X20, 0x2525000
	015 Move W8, [X20+1834]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {62}
	021 Move X0, 0x2252000
	022 Move X0, [X0+3104]
	023 Call 0x1B6F7F0
	024 Move X0, 0x2252000
	025 Move X0, [X0+3240]
	026 Call 0x1B6F7F0
	027 Move X0, 0x2252000
	028 Move X0, [X0+3248]
	029 Call 0x1B6F7F0
	030 Move X0, 0x2252000
	031 Move X0, [X0+3256]
	032 Call 0x1B6F7F0
	033 Move X0, 0x2252000
	034 Move X0, [X0+3112]
	035 Call 0x1B6F7F0
	036 Move X0, 0x2252000
	037 Move X0, [X0+3264]
	038 Call 0x1B6F7F0
	039 Move X0, 0x2252000
	040 Move X0, [X0+3120]
	041 Call 0x1B6F7F0
	042 Move X0, 0x2252000
	043 Move X0, [X0+3272]
	044 Call 0x1B6F7F0
	045 Move X0, 0x2252000
	046 Move X0, [X0+3128]
	047 Call 0x1B6F7F0
	048 Move X0, 0x2252000
	049 Move X0, [X0+3280]
	050 Call 0x1B6F7F0
	051 Move X0, 0x2252000
	052 Move X0, [X0+3288]
	053 Call 0x1B6F7F0
	054 Move X0, 0x2252000
	055 Move X0, [X0+3296]
	056 Call 0x1B6F7F0
	057 Move X0, 0x2252000
	058 Move X0, [X0+3136]
	059 Call 0x1B6F7F0
	060 Move W8, 1
	061 Move [X20+1834], W8
	062 Move [X31+80], X31
	063 Move [X31+88], X31
	064 Move [X31+96], X31
	065 Move [X31+48], X31
	066 Move [X31+56], X31
	067 Move [X31+64], X31
	068 Move X8, [X19+40]
	069 Compare X8, 0
	070 JumpIfEqual {204}
	071 Move X0, [X8+16]
	072 Compare X0, 0
	073 JumpIfEqual {204}
	074 Move X8, 0x2252000
	075 Move X8, [X8+3104]
	076 Move X1, [X8]
	077 Call Dictionary`2<Object, Object>.get_Values, X0
	078 Compare X0, 0
	079 JumpIfEqual {204}
	080 Move X8, 0x2252000
	081 Move X8, [X8+3136]
	082 Move X22, 0x2252000
	083 Move X23, 0x2252000
	084 Move X24, 0x2252000
	085 Move X25, 0x2252000
	086 Move X26, 0x2252000
	087 Move X21, 0x2252000
	088 Move X22, [X22+3120]
	089 Move X23, [X23+3280]
	090 Move X24, [X24+3240]
	091 Move X25, [X25+3296]
	092 Move X26, [X26+3264]
	093 Move X21, [X21+3256]
	094 Move X1, [X8]
	095 Move X27, 0x2252000
	096 Move X28, 0x2252000
	097 Move X27, [X27+3288]
	098 Move X28, [X28+3248]
	099 Add X8, X31, 24
	100 Call ValueCollection<Object, Object>.GetEnumerator, X0
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 Move X8, [X31+40]
	103 Move [X31+5], V0
	104 Move [X31+96], X8
	105 Move X1, [X22]
	106 Add X0, X31, 80
	107 Call Enumerator<Object, Object>.MoveNext, X0
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfNotEqual {167}
	112 Move X29, [X31+96]
	113 Compare X29, 0
	114 JumpIfEqual {201}
	115 Move X0, [X29+24]
	116 Compare X0, 0
	117 JumpIfEqual {202}
	118 Move X1, [X23]
	119 Call 0x20D0B14, X0
	120 Move X1, [X24]
	121 Call Enumerable.ToList, X0
	122 Move [X29+48], X0
	123 Compare X0, 0
	124 JumpIfEqual {200}
	125 Move X1, [X25]
	126 Add X8, X31, 24
	127 Call List`1<Object>.GetEnumerator, X0
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 Move X8, [X31+40]
	130 Move [X31+3], V0
	131 Move [X31+64], X8
	132 Move X1, [X26]
	133 Add X0, X31, 48
	134 Call Enumerator<Object>.MoveNext, X0
	135 Move TEMP, X0
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfNotEqual {143}
	139 Move X8, [X31+64]
	140 Compare X8, 0
	141 JumpIfEqual {161}
	142 Move [X8+36], W31
	143 Move X19, X31
	144 Move W20, 6
	145 Move X1, [X21]
	146 Add X0, X31, 48
	147 Call Enumerator<Object>.Dispose, X0
	148 Compare X19, 0
	149 JumpIfNotEqual {198}
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Compare W20, 0
	152 JumpIfNotEqual {167}
	153 Move X0, [X29+24]
	154 Compare X0, 0
	155 JumpIfEqual {203}
	156 Move X1, [X27]
	157 Call 0x20D0B14, X0
	158 Move X1, [X28]
	159 Call Enumerable.ToList, X0
	160 Move [X29+40], X0
	161 Call 0x1B6FA1C
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Call 0x3D1A840
	164 Move X19, [X0]
	165 Call 0x3D1A850
	166 Move W20, W31
	167 Move X8, 0x2252000
	168 Move X8, [X8+3112]
	169 Add X0, X31, 80
	170 Move X1, [X8]
	171 Call Enumerator<Object, Object>.Dispose, X0
	172 Move X20, [X31+192]
	173 Move X19, [X31+200]
	174 Move X22, [X31+176]
	175 Move X21, [X31+184]
	176 Move X24, [X31+160]
	177 Move X23, [X31+168]
	178 Move X26, [X31+144]
	179 Move X25, [X31+152]
	180 Move X28, [X31+128]
	181 Move X27, [X31+136]
	182 Move X29, [X31+112]
	183 Move X30, [X31+120]
	184 Add X31, X31, 208
	185 Return 
	186 Move [X31+8], X1
	187 Move [X31+16], X0
	188 Move X19, X31
	189 Move X1, [X21]
	190 Add X0, X31, 48
	191 Call Enumerator<Object>.Dispose, X0
	192 Move X1, [X31+8]
	193 Move X0, [X31+16]
	194 Compare X19, 0
	195 JumpIfEqual {207}
	196 Move X0, X19
	197 Call 0x1B6FA14
	198 Move X0, X19
	199 Call 0x1B6FA14
	200 Call 0x1B6FA1C
	201 Call 0x1B6FA1C
	202 Call 0x1B6FA1C
	203 Call 0x1B6FA1C
	204 Call 0x1B6FA1C
	205 Move [X31+8], X1
	206 Move [X31+16], X0
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Call 0x3D1A840
	209 Move X19, [X0]
	210 Call 0x3D1A850
	211 Move X8, 0x2252000
	212 Move X8, [X8+3112]
	213 Add X0, X31, 80
	214 Move X1, [X8]
	215 Call Enumerator<Object, Object>.Dispose, X0
	216 Compare X19, 0
	217 JumpIfEqual {172}
	218 Move X0, X19
	219 Call 0x1B6FA14
	220 Move [X31+16], X0
	221 Move X19, X31
	222 Move [X31+16], X0
	223 Move X8, 0x2252000
	224 Move X8, [X8+3112]
	225 Move X1, [X8]
	226 Add X0, X31, 80
	227 Call Enumerator<Object, Object>.Dispose, X0
	228 Compare X19, 0
	229 JumpIfNotEqual {232}
	230 Move X0, [X31+16]
	231 Call 0x1C8518C
	232 Move X0, X19
	233 Call 0x1B6FA14
	234 Call 0x18F56A8

Method: System.Void MoveNetObjects()

Disassembly:
	0x01D00264 MOV X0, X24
	0x01D00268 MOV X2, X25
	0x01D0026C BL 0x2ED05E4
	0x01D00270 FMOV S0, W25
	0x01D00274 FADD S9, S9, S0
	0x01D00278 B 0x1D00204
	0x01D0027C MOV X27, X31
	0x01D00280 MOVZ W25, 0x9
	0x01D00284 ADRP X8, 0x224E000
	0x01D00288 LDR X8, [X8 + 0xD08]
	0x01D0028C MOV V8.16B, V9.16B
	0x01D00290 LDR X1, [X8]
	0x01D00294 ADD X0, X31, 0x80
	0x01D00298 BL 0x2A22340
	0x01D0029C CBNZ X27, 0x1D006A0
	0x01D002A0 CMP W25, 0x9
	0x01D002A4 B.EQ 0x1D001BC
	0x01D002A8 CBZ W25, 0x1D001BC
	0x01D002AC B 0x1D00304
	0x01D002B0 BL 0x1B6EA1C
	0x01D002B4 B 0x1D0093C
	0x01D002B8 MOV V8.16B, V9.16B
	0x01D002BC BL 0x1B6EA1C
	0x01D002C0 B 0x1D0093C
	0x01D002C4 B 0x1D002C8
	0x01D002C8 MOV X25, X0
	0x01D002CC B 0x1D002D8
	0x01D002D0 MOV X25, X0
	0x01D002D4 MOV V9.16B, V8.16B
	0x01D002D8 CMP W1, 0x1
	0x01D002DC B.NE 0x1D00648
	0x01D002E0 MOV X0, X25
	0x01D002E4 BL 0x3D19840
	0x01D002E8 LDR X27, [X0]
	0x01D002EC BL 0x3D19850
	0x01D002F0 MOV W25, W31
	0x01D002F4 B 0x1D00284
	0x01D002F8 MOV X27, X31
	0x01D002FC MOVZ W25, 0xD
	0x01D00300 B 0x1D00308
	0x01D00304 MOV X27, X31
	0x01D00308 ADRP X8, 0x2250000
	0x01D0030C LDR X8, [X8 + 0xDC8]
	0x01D00310 LDR X1, [X8]
	0x01D00314 ADD X0, X31, 0xA0
	0x01D00318 BL 0x2A14F2C
	0x01D0031C CBNZ X27, 0x1D00914
	0x01D00320 CMP W25, 0xD
	0x01D00324 B.EQ 0x1D0032C
	0x01D00328 CBNZ W25, 0x1D00838
	0x01D0032C ADRP X8, 0x2250000
	0x01D00330 LDR X8, [X8 + 0xE80]
	0x01D00334 LDR X0, [X8]
	0x01D00338 BL 0x1B6EA0C
	0x01D0033C ADRP X8, 0x2250000
	0x01D00340 LDR X8, [X8 + 0xE68]
	0x01D00344 MOV X27, X0
	0x01D00348 LDR X1, [X8]
	0x01D0034C BL 0x2E45D4C
	0x01D00350 ADRP X8, 0x2523000
	0x01D00354 LDRB W8, [X8 + 0x43F]
	0x01D00358 CBNZ W8, 0x1D00374
	0x01D0035C ADRP X0, 0x224D000
	0x01D00360 LDR X0, [X0 + 0x480]
	0x01D00364 BL 0x1B6E7F0
	0x01D00368 ADRP X8, 0x2523000
	0x01D0036C MOVZ W9, 0x1
	0x01D00370 STRB W9, [X8 + 0x43F]
	0x01D00374 CBZ X22, 0x1D0091C
	0x01D00378 ADRP X8, 0x224D000
	0x01D0037C LDR X8, [X8 + 0x480]
	0x01D00380 LDR X8, [X8]
	0x01D00384 LDR X8, [X8 + 0xB8]
	0x01D00388 LDP S11, S10, [X8]
	0x01D0038C LDR V9, [X8 + 0x8]
	0x01D00390 ADRP X8, 0x2250000
	0x01D00394 LDR X8, [X8 + 0xE60]
	0x01D00398 LDR X1, [X8]
	0x01D0039C ADD X8, X31, 0x20
	0x01D003A0 MOV X0, X22
	0x01D003A4 BL 0x2D743CC
	0x01D003A8 LDP V0, V1, [X31 + 0x20]
	0x01D003AC MOV W26, W31
	0x01D003B0 STP V0, V1, [X31 + 0x60]
	0x01D003B4 ADRP X8, 0x2250000
	0x01D003B8 LDR X8, [X8 + 0xDD0]
	0x01D003BC LDR X1, [X8]
	0x01D003C0 ADD X0, X31, 0x60
	0x01D003C4 BL 0x29E101C
	0x01D003C8 TBZ X0, 0x0, 0x1D0051C
	0x01D003CC ADRP X8, 0x2250000
	0x01D003D0 LDR W28, [X31 + 0x70]
	0x01D003D4 LDR X25, [X31 + 0x78]
	0x01D003D8 LDR X8, [X8 + 0xEA8]
	0x01D003DC LDR X0, [X8]
	0x01D003E0 BL 0x1B6EA0C
	0x01D003E4 MOV X22, X0
	0x01D003E8 MOV X1, X31
	0x01D003EC BL 0x1CB12E0
	0x01D003F0 CBZ X22, 0x1D006BC
	0x01D003F4 STR W28, [X22 + 0x10]
	0x01D003F8 STR X25, [X22 + 0x18]
	0x01D003FC CBZ X25, 0x1D006C4
	0x01D00400 ADRP X8, 0x2250000
	0x01D00404 LDR X8, [X8 + 0xCE0]
	0x01D00408 LDR X1, [X8]
	0x01D0040C ADD X8, X31, 0x20
	0x01D00410 MOV X0, X25
	0x01D00414 BL 0x2E470E0
	0x01D00418 LDR V0, [X31 + 0x2]
	0x01D0041C LDR X8, [X31 + 0x30]
	0x01D00420 STR V0, [X31 + 0x4]
	0x01D00424 STR X8, [X31 + 0x50]
	0x01D00428 LDR X1, [X19]
	0x01D0042C ADD X0, X31, 0x40
	0x01D00430 BL 0x2A14F30
	0x01D00434 TBZ X0, 0x0, 0x1D00458
	0x01D00438 LDR X0, [X31 + 0x50]
	0x01D0043C CBZ X0, 0x1D004E8
	0x01D00440 BL 0x1CF9F6C
	0x01D00444 FADD S11, S11, S0
	0x01D00448 FADD S10, S10, S1
	0x01D0044C FADD S9, S9, S2
	0x01D00450 ADD W26, W26, 0x1
	0x01D00454 B 0x1D00428
	0x01D00458 MOV X28, X31
	0x01D0045C MOVZ W25, 0x12
	0x01D00460 ADRP X8, 0x2250000
	0x01D00464 LDR X8, [X8 + 0xCB8]
	0x01D00468 LDR X1, [X8]
	0x01D0046C ADD X0, X31, 0x40
	0x01D00470 BL 0x2A14F2C
	0x01D00474 CBNZ X28, 0x1D006CC
	0x01D00478 CBZ W25, 0x1D00484
	0x01D0047C CMP W25, 0x12
	0x01D00480 B.NE 0x1D00528
	0x01D00484 CBZ X27, 0x1D006E0
	0x01D00488 ADRP X9, 0x2250000
	0x01D0048C LDR W10, [X27 + 0x1C]
	0x01D00490 LDR X8, [X27 + 0x10]
	0x01D00494 LDR X9, [X9 + 0xE38]
	0x01D00498 ADD W10, W10, 0x1
	0x01D0049C LDR X9, [X9]
	0x01D004A0 STR W10, [X27 + 0x1C]
	0x01D004A4 CBZ X8, 0x1D006D8
	0x01D004A8 LDRSW X10, [X27 + 0x18]
	0x01D004AC LDR W11, [X8 + 0x18]
	0x01D004B0 CMP W10, W11
	0x01D004B4 B.CS 0x1D004CC
	0x01D004B8 ADD W9, W10, 0x1
	0x01D004BC ADD X8, X8, X10, 0x3, LSL
	0x01D004C0 STR W9, [X27 + 0x18]
	0x01D004C4 STR X22, [X8 + 0x20]
	0x01D004C8 B 0x1D003B4
	0x01D004CC LDR X8, [X9 + 0x20]
	0x01D004D0 LDR X8, [X8 + 0xC0]
	0x01D004D4 LDR X2, [X8 + 0x70]
	0x01D004D8 MOV X0, X27
	0x01D004DC MOV X1, X22
	0x01D004E0 BL 0x2E46518
	0x01D004E4 B 0x1D003B4
	0x01D004E8 BL 0x1B6EA1C
	0x01D004EC B 0x1D0093C
	0x01D004F0 B 0x1D004F8
	0x01D004F4 B 0x1D004F8
	0x01D004F8 MOV X25, X0
	0x01D004FC CMP W1, 0x1
	0x01D00500 B.NE 0x1D00670
	0x01D00504 MOV X0, X25
	0x01D00508 BL 0x3D19840
	0x01D0050C LDR X28, [X0]
	0x01D00510 BL 0x3D19850
	0x01D00514 MOV W25, W31
	0x01D00518 B 0x1D00460
	0x01D0051C MOV X22, X31
	0x01D00520 MOVZ W25, 0x13
	0x01D00524 B 0x1D0052C
	0x01D00528 MOV X22, X31
	0x01D0052C ADRP X8, 0x2250000
	0x01D00530 LDR X8, [X8 + 0xDB0]
	0x01D00534 LDR X1, [X8]
	0x01D00538 ADD X0, X31, 0x60
	0x01D0053C BL 0x29E1018
	0x01D00540 CBNZ X22, 0x1D00920
	0x01D00544 CMP W25, 0x13
	0x01D00548 B.EQ 0x1D00550
	0x01D0054C CBNZ W25, 0x1D00838
	0x01D00550 MOV X0, X21
	0x01D00554 MOV X1, X31
	0x01D00558 BL 0x3AA0C88
	0x01D0055C ADRP X9, 0x224D000
	0x01D00560 LDR W8, [X21 + 0x20]
	0x01D00564 LDR X9, [X9 + 0x5F8]
	0x01D00568 MOV X22, X0
	0x01D0056C STR W8, [X31 + 0x20]
	0x01D00570 LDR X0, [X9]
	0x01D00574 ADD X1, X31, 0x20
	0x01D00578 BL 0x1B6E900
	0x01D0057C ADRP X8, 0x2250000
	0x01D00580 LDR X8, [X8 + 0xEB0]
	0x01D00584 MOV X2, X0
	0x01D00588 LDR X0, [X8]
	0x01D0058C MOV X1, X22

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+88], X27
	004 Move [X31+96], X26
	005 Move [X31+104], X25
	006 Move [X31+112], X24
	007 Move [X31+120], X23
	008 Move [X31+128], X22
	009 Move [X31+136], X21
	010 Move [X31+144], X20
	011 Move [X31+152], X19
	012 Move X22, 0x2524000
	013 Move X21, 0x2250000
	014 Move X20, 0x2250000
	015 Move W8, [X22+1835]
	016 Move X21, [X21+1904]
	017 Move X20, [X20+1912]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {64}
	023 Move X0, 0x2251000
	024 Move X0, [X0+3104]
	025 Call 0x1B6F7F0
	026 Move X0, 0x2251000
	027 Move X0, [X0+3112]
	028 Call 0x1B6F7F0
	029 Move X0, 0x2251000
	030 Move X0, [X0+3344]
	031 Call 0x1B6F7F0
	032 Move X0, 0x2251000
	033 Move X0, [X0+3120]
	034 Call 0x1B6F7F0
	035 Move X0, 0x2251000
	036 Move X0, [X0+3352]
	037 Call 0x1B6F7F0
	038 Move X0, 0x2251000
	039 Move X0, [X0+3128]
	040 Call 0x1B6F7F0
	041 Move X0, 0x2251000
	042 Move X0, [X0+3360]
	043 Call 0x1B6F7F0
	044 Move X0, 0x2251000
	045 Move X0, [X0+3368]
	046 Call 0x1B6F7F0
	047 Move X0, 0x2251000
	048 Move X0, [X0+3376]
	049 Call 0x1B6F7F0
	050 Move X0, 0x2251000
	051 Move X0, [X0+3384]
	052 Call 0x1B6F7F0
	053 Move X0, 0x2250000
	054 Move X0, [X0+1912]
	055 Call 0x1B6F7F0
	056 Move X0, 0x2250000
	057 Move X0, [X0+1904]
	058 Call 0x1B6F7F0
	059 Move X0, 0x2251000
	060 Move X0, [X0+3136]
	061 Call 0x1B6F7F0
	062 Move W8, 1
	063 Move [X22+1835], W8
	064 Move X0, [X21]
	065 Move [X31+48], X31
	066 Move [X31+56], X31
	067 Move [X31+64], X31
	068 Move [X31+24], X31
	069 Move [X31+32], X31
	070 Move [X31+40], X31
	071 Call 0x1B6FA0C
	072 Move X1, [X20]
	073 Move X20, X0
	074 Call List`1<Object>..ctor, X0
	075 Move X8, [X19+40]
	076 Compare X8, 0
	077 JumpIfEqual {178}
	078 Move X0, [X8+16]
	079 Compare X0, 0
	080 JumpIfEqual {178}
	081 Move X8, 0x2251000
	082 Move X8, [X8+3104]
	083 Move X1, [X8]
	084 Call Dictionary`2<Object, Object>.get_Values, X0
	085 Compare X0, 0
	086 JumpIfEqual {178}
	087 Move X8, 0x2251000
	088 Move X8, [X8+3136]
	089 Move X21, 0x2251000
	090 Move X26, 0x2251000
	091 Move X27, 0x2251000
	092 Move X24, 0x2251000
	093 Move X21, [X21+3120]
	094 Move X26, [X26+3368]
	095 Move X27, [X27+3376]
	096 Move X24, [X24+3384]
	097 Move X1, [X8]
	098 Move X23, 0x2251000
	099 Move X22, 0x2251000
	100 Move X25, 0x2251000
	101 Move X23, [X23+3352]
	102 Move X22, [X22+3344]
	103 Move X25, [X25+3112]
	104 Add X8, X31, 0
	105 Call ValueCollection<Object, Object>.GetEnumerator, X0
	106 Move V0, [X31]
	107 Move X8, [X31+16]
	108 Move [X31+3], V0
	109 Move [X31+64], X8
	110 Move X1, [X21]
	111 Add X0, X31, 48
	112 Call Enumerator<Object, Object>.MoveNext, X0
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {131}
	117 Move X8, [X31+64]
	118 Compare X8, 0
	119 JumpIfEqual {176}
	120 Move X0, [X8+24]
	121 Compare X0, 0
	122 JumpIfEqual {177}
	123 Move X1, [X26]
	124 Call 0x20D0B14, X0
	125 Move X1, X0
	126 Compare X20, 0
	127 JumpIfEqual {175}
	128 Move X2, [X27]
	129 Move X0, X20
	130 Call List`1<Object>.AddRange, X0, X1
	131 Move X1, [X25]
	132 Add X0, X31, 48
	133 Call Enumerator<Object, Object>.Dispose, X0
	134 Compare X20, 0
	135 JumpIfEqual {178}
	136 Move X1, [X24]
	137 Add X8, X31, 24
	138 Move X0, X20
	139 Call List`1<Object>.GetEnumerator, X0
	140 Move X1, [X23]
	141 Add X0, X31, 24
	142 Call Enumerator<Object>.MoveNext, X0
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfNotEqual {158}
	147 Move X0, [X31+40]
	148 Compare X0, 0
	149 JumpIfEqual {173}
	150 Move X1, X31
	151 Call Component.get_transform, X0
	152 Compare X0, 0
	153 JumpIfEqual {174}
	154 Move X1, [X19+80]
	155 Move W2, 1
	156 Move X3, X31
	157 Call Transform.SetParent, X0, X1, X2
	158 Move X1, [X22]
	159 Add X0, X31, 24
	160 Call Enumerator<Object>.Dispose, X0
	161 Move X20, [X31+144]
	162 Move X19, [X31+152]
	163 Move X22, [X31+128]
	164 Move X21, [X31+136]
	165 Move X24, [X31+112]
	166 Move X23, [X31+120]
	167 Move X26, [X31+96]
	168 Move X25, [X31+104]
	169 Move X30, [X31+80]
	170 Move X27, [X31+88]
	171 Add X31, X31, 160
	172 Return 
	173 Call 0x1B6FA1C
	174 Call 0x1B6FA1C
	175 Call 0x1B6FA1C
	176 Call 0x1B6FA1C
	177 Call 0x1B6FA1C
	178 Call 0x1B6FA1C
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Call 0x3D1A840
	181 Move X20, [X0]
	182 Call 0x3D1A850
	183 Move X1, [X22]
	184 Add X0, X31, 24
	185 Call Enumerator<Object>.Dispose, X0
	186 Compare X20, 0
	187 JumpIfEqual {161}
	188 Move X0, X20
	189 Call 0x1B6FA14
	190 Move X19, X0
	191 Move X20, X31
	192 Move X19, X0
	193 Move X1, [X22]
	194 Add X0, X31, 24
	195 Call Enumerator<Object>.Dispose, X0
	196 Compare X20, 0
	197 JumpIfEqual {219}
	198 Move X0, X20
	199 Call 0x1B6FA14
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Call 0x3D1A840
	202 Move X21, [X0]
	203 Call 0x3D1A850
	204 Move X1, [X25]
	205 Add X0, X31, 48
	206 Call Enumerator<Object, Object>.Dispose, X0
	207 Compare X21, 0
	208 JumpIfEqual {134}
	209 Move X0, X21
	210 Call 0x1B6FA14
	211 Move X19, X0
	212 Move X21, X31
	213 Move X19, X0
	214 Move X1, [X25]
	215 Add X0, X31, 48
	216 Call Enumerator<Object, Object>.Dispose, X0
	217 Compare X21, 0
	218 JumpIfNotEqual {221}
	219 Move X0, X19
	220 Call 0x1C8518C
	221 Move X0, X21
	222 Call 0x1B6FA14
	223 Call 0x18F56A8

Method: System.Void SetAllLayers()

Disassembly:
	0x01CFFB80 BL 0x1B6E7F0
	0x01CFFB84 ADRP X0, 0x2251000
	0x01CFFB88 LDR X0, [X0 + 0xDD8]
	0x01CFFB8C BL 0x1B6E7F0
	0x01CFFB90 ADRP X0, 0x224F000
	0x01CFFB94 LDR X0, [X0 + 0xD10]
	0x01CFFB98 BL 0x1B6E7F0
	0x01CFFB9C ADRP X0, 0x2251000
	0x01CFFBA0 LDR X0, [X0 + 0xDE0]
	0x01CFFBA4 BL 0x1B6E7F0
	0x01CFFBA8 ADRP X0, 0x2251000
	0x01CFFBAC LDR X0, [X0 + 0xDE8]
	0x01CFFBB0 BL 0x1B6E7F0
	0x01CFFBB4 ADRP X0, 0x2251000
	0x01CFFBB8 LDR X0, [X0 + 0xDF0]
	0x01CFFBBC BL 0x1B6E7F0
	0x01CFFBC0 ADRP X0, 0x224F000
	0x01CFFBC4 LDR X0, [X0 + 0xD18]
	0x01CFFBC8 BL 0x1B6E7F0
	0x01CFFBCC ADRP X0, 0x2251000
	0x01CFFBD0 LDR X0, [X0 + 0xDF8]
	0x01CFFBD4 BL 0x1B6E7F0
	0x01CFFBD8 ADRP X0, 0x2251000
	0x01CFFBDC LDR X0, [X0 + 0xE00]
	0x01CFFBE0 BL 0x1B6E7F0
	0x01CFFBE4 ADRP X0, 0x2251000
	0x01CFFBE8 LDR X0, [X0 + 0xCC8]
	0x01CFFBEC BL 0x1B6E7F0
	0x01CFFBF0 ADRP X0, 0x2251000
	0x01CFFBF4 LDR X0, [X0 + 0xE08]
	0x01CFFBF8 BL 0x1B6E7F0
	0x01CFFBFC ADRP X0, 0x2251000
	0x01CFFC00 LDR X0, [X0 + 0xE10]
	0x01CFFC04 BL 0x1B6E7F0
	0x01CFFC08 ADRP X0, 0x2251000
	0x01CFFC0C LDR X0, [X0 + 0xE18]
	0x01CFFC10 BL 0x1B6E7F0
	0x01CFFC14 ADRP X0, 0x2251000
	0x01CFFC18 LDR X0, [X0 + 0xE20]
	0x01CFFC1C BL 0x1B6E7F0
	0x01CFFC20 ADRP X0, 0x224E000
	0x01CFFC24 LDR X0, [X0 + 0x8E0]
	0x01CFFC28 BL 0x1B6E7F0
	0x01CFFC2C ADRP X0, 0x2251000
	0x01CFFC30 LDR X0, [X0 + 0xE28]
	0x01CFFC34 BL 0x1B6E7F0
	0x01CFFC38 ADRP X0, 0x2251000
	0x01CFFC3C LDR X0, [X0 + 0xE30]
	0x01CFFC40 BL 0x1B6E7F0
	0x01CFFC44 ADRP X0, 0x2251000
	0x01CFFC48 LDR X0, [X0 + 0xBE8]
	0x01CFFC4C BL 0x1B6E7F0
	0x01CFFC50 ADRP X0, 0x224E000
	0x01CFFC54 LDR X0, [X0 + 0x5F8]
	0x01CFFC58 BL 0x1B6E7F0
	0x01CFFC5C ADRP X0, 0x2251000
	0x01CFFC60 LDR X0, [X0 + 0xE38]
	0x01CFFC64 BL 0x1B6E7F0
	0x01CFFC68 ADRP X0, 0x2251000
	0x01CFFC6C LDR X0, [X0 + 0x990]
	0x01CFFC70 BL 0x1B6E7F0
	0x01CFFC74 ADRP X0, 0x2251000
	0x01CFFC78 LDR X0, [X0 + 0xE40]
	0x01CFFC7C BL 0x1B6E7F0
	0x01CFFC80 ADRP X0, 0x2251000
	0x01CFFC84 LDR X0, [X0 + 0xCE0]
	0x01CFFC88 BL 0x1B6E7F0
	0x01CFFC8C ADRP X0, 0x2251000
	0x01CFFC90 LDR X0, [X0 + 0xE48]
	0x01CFFC94 BL 0x1B6E7F0
	0x01CFFC98 ADRP X0, 0x2251000
	0x01CFFC9C LDR X0, [X0 + 0xE50]
	0x01CFFCA0 BL 0x1B6E7F0
	0x01CFFCA4 ADRP X0, 0x2251000
	0x01CFFCA8 LDR X0, [X0 + 0xE58]
	0x01CFFCAC BL 0x1B6E7F0
	0x01CFFCB0 ADRP X0, 0x2251000
	0x01CFFCB4 LDR X0, [X0 + 0xE60]
	0x01CFFCB8 BL 0x1B6E7F0
	0x01CFFCBC ADRP X0, 0x224F000
	0x01CFFCC0 LDR X0, [X0 + 0xD20]
	0x01CFFCC4 BL 0x1B6E7F0
	0x01CFFCC8 ADRP X0, 0x2251000
	0x01CFFCCC LDR X0, [X0 + 0x988]
	0x01CFFCD0 BL 0x1B6E7F0
	0x01CFFCD4 ADRP X0, 0x2251000
	0x01CFFCD8 LDR X0, [X0 + 0xE68]
	0x01CFFCDC BL 0x1B6E7F0
	0x01CFFCE0 ADRP X0, 0x2251000
	0x01CFFCE4 LDR X0, [X0 + 0xE70]
	0x01CFFCE8 BL 0x1B6E7F0
	0x01CFFCEC ADRP X0, 0x224F000
	0x01CFFCF0 LDR X0, [X0 + 0xCF8]
	0x01CFFCF4 BL 0x1B6E7F0
	0x01CFFCF8 ADRP X0, 0x2251000
	0x01CFFCFC LDR X0, [X0 + 0xE78]
	0x01CFFD00 BL 0x1B6E7F0
	0x01CFFD04 ADRP X0, 0x2251000
	0x01CFFD08 LDR X0, [X0 + 0x980]
	0x01CFFD0C BL 0x1B6E7F0
	0x01CFFD10 ADRP X0, 0x2251000
	0x01CFFD14 LDR X0, [X0 + 0xE80]
	0x01CFFD18 BL 0x1B6E7F0
	0x01CFFD1C ADRP X0, 0x2251000
	0x01CFFD20 LDR X0, [X0 + 0xE88]
	0x01CFFD24 BL 0x1B6E7F0
	0x01CFFD28 ADRP X0, 0x2251000
	0x01CFFD2C LDR X0, [X0 + 0xE90]
	0x01CFFD30 BL 0x1B6E7F0
	0x01CFFD34 ADRP X0, 0x2251000
	0x01CFFD38 LDR X0, [X0 + 0xE98]
	0x01CFFD3C BL 0x1B6E7F0
	0x01CFFD40 ADRP X0, 0x2251000
	0x01CFFD44 LDR X0, [X0 + 0xEA0]
	0x01CFFD48 BL 0x1B6E7F0
	0x01CFFD4C ADRP X0, 0x2251000
	0x01CFFD50 LDR X0, [X0 + 0xEA8]
	0x01CFFD54 BL 0x1B6E7F0
	0x01CFFD58 ADRP X0, 0x2251000
	0x01CFFD5C LDR X0, [X0 + 0xEB0]
	0x01CFFD60 BL 0x1B6E7F0
	0x01CFFD64 MOVZ W8, 0x1
	0x01CFFD68 STRB W8, [X19 + 0x72E]
	0x01CFFD6C LDR X8, [X31 + 0x18]
	0x01CFFD70 MOVI V0.2D, 0x0
	0x01CFFD74 STP X31, X31, [X31 + 0xE0]
	0x01CFFD78 STR X31, [X31 + 0xF0]
	0x01CFFD7C STP X31, X31, [X31 + 0xC0]
	0x01CFFD80 STR X31, [X31 + 0xD0]
	0x01CFFD84 STP X31, X31, [X31 + 0xA0]
	0x01CFFD88 STR X31, [X31 + 0xB0]
	0x01CFFD8C STP X31, X31, [X31 + 0x40]
	0x01CFFD90 STP V0, V0, [X31 + 0x80]
	0x01CFFD94 STP V0, V0, [X31 + 0x60]
	0x01CFFD98 STR X31, [X31 + 0x50]
	0x01CFFD9C LDR X0, [X8 + 0x18]
	0x01CFFDA0 CBZ X0, 0x1D00938
	0x01CFFDA4 ADRP X8, 0x2251000
	0x01CFFDA8 LDR X8, [X8 + 0xE30]
	0x01CFFDAC LDR X1, [X8]
	0x01CFFDB0 BL 0x20D13DC
	0x01CFFDB4 CBZ X0, 0x1D00938
	0x01CFFDB8 ADRP X8, 0x2251000
	0x01CFFDBC LDR X8, [X8 + 0xE48]
	0x01CFFDC0 ADRP X29, 0x224F000
	0x01CFFDC4 ADRP X20, 0x2251000
	0x01CFFDC8 LDR X29, [X29 + 0xD10]
	0x01CFFDCC LDR X20, [X20 + 0x990]
	0x01CFFDD0 LDR X1, [X8]
	0x01CFFDD4 ADRP X19, 0x2251000
	0x01CFFDD8 LDR X19, [X19 + 0xCC0]
	0x01CFFDDC ADD X8, X31, 0x20
	0x01CFFDE0 BL 0x2E470E0
	0x01CFFDE4 LDR V0, [X31 + 0x2]
	0x01CFFDE8 LDR X8, [X31 + 0x30]
	0x01CFFDEC STR V0, [X31 + 0xE]
	0x01CFFDF0 STR X8, [X31 + 0xF0]
	0x01CFFDF4 ADRP X8, 0x2251000
	0x01CFFDF8 LDR X8, [X8 + 0xDD8]
	0x01CFFDFC LDR X1, [X8]
	0x01CFFE00 ADD X0, X31, 0xE0
	0x01CFFE04 BL 0x2A14F30
	0x01CFFE08 TBZ X0, 0x0, 0x1D00838
	0x01CFFE0C LDR X21, [X31 + 0xF0]
	0x01CFFE10 CBZ X21, 0x1D008FC
	0x01CFFE14 LDR W23, [X21 + 0x20]
	0x01CFFE18 CBZ W23, 0x1CFFDF4
	0x01CFFE1C ADRP X8, 0x2251000
	0x01CFFE20 LDR X8, [X8 + 0xE78]
	0x01CFFE24 LDR X0, [X8]
	0x01CFFE28 BL 0x1B6EA0C
	0x01CFFE2C ADRP X8, 0x2251000
	0x01CFFE30 LDR X8, [X8 + 0xE70]
	0x01CFFE34 MOV X22, X0
	0x01CFFE38 LDR X1, [X8]
	0x01CFFE3C BL 0x2D72FA8
	0x01CFFE40 LDR X8, [X31 + 0x18]
	0x01CFFE44 LDR X0, [X8 + 0x18]
	0x01CFFE48 CBZ X0, 0x1D00904
	0x01CFFE4C ADRP X8, 0x2251000
	0x01CFFE50 LDR X8, [X8 + 0xE28]
	0x01CFFE54 LDR X2, [X8]
	0x01CFFE58 MOV X1, X21
	0x01CFFE5C BL 0x20D1148
	0x01CFFE60 CBZ X0, 0x1D00900
	0x01CFFE64 STR W23, [X31 + 0x14]
	0x01CFFE68 ADRP X8, 0x2251000
	0x01CFFE6C LDR X8, [X8 + 0xE50]
	0x01CFFE70 LDR X1, [X8]
	0x01CFFE74 ADD X8, X31, 0x20
	0x01CFFE78 BL 0x2E470E0
	0x01CFFE7C LDR V0, [X31 + 0x2]
	0x01CFFE80 LDR X8, [X31 + 0x30]
	0x01CFFE84 STR V0, [X31 + 0xC]
	0x01CFFE88 STR X8, [X31 + 0xD0]
	0x01CFFE8C ADRP X8, 0x2251000
	0x01CFFE90 LDR X8, [X8 + 0xDE8]
	0x01CFFE94 LDR X1, [X8]
	0x01CFFE98 ADD X0, X31, 0xC0
	0x01CFFE9C BL 0x2A14F30
	0x01CFFEA0 TBZ X0, 0x0, 0x1D00090
	0x01CFFEA4 LDR X23, [X31 + 0xD0]
	0x01CFFEA8 CBZ X23, 0x1D00698
	0x01CFFEAC MOV X0, X23
	0x01CFFEB0 MOV X1, X21
	0x01CFFEB4 MOV X2, X31
	0x01CFFEB8 BL 0x1CF76C0
	0x01CFFEBC ADRP X8, 0x2251000
	0x01CFFEC0 LDR X8, [X8 + 0xBE8]
	0x01CFFEC4 LDR X1, [X8]
	0x01CFFEC8 BL 0x1B6E8FC
	0x01CFFECC MOV X24, X0
	0x01CFFED0 CBZ X0, 0x1CFFE8C
	0x01CFFED4 LDR X8, [X31 + 0x18]
	0x01CFFED8 LDR X8, [X8 + 0x28]
	0x01CFFEDC CBZ X8, 0x1D006F0
	0x01CFFEE0 LDR X0, [X8 + 0x10]
	0x01CFFEE4 CBZ X0, 0x1D006E8
	0x01CFFEE8 ADRP X8, 0x2251000
	0x01CFFEEC LDR X8, [X8 + 0xD90]
	0x01CFFEF0 LDR X2, [X8]
	0x01CFFEF4 MOV X1, X24
	0x01CFFEF8 BL 0x28FA49C
	0x01CFFEFC TBZ X0, 0x0, 0x1CFFE8C
	0x01CFFF00 LDR X8, [X31 + 0x18]
	0x01CFFF04 LDR X8, [X8 + 0x28]
	0x01CFFF08 CBZ X8, 0x1D00708
	0x01CFFF0C LDR X0, [X8 + 0x10]
	0x01CFFF10 CBZ X0, 0x1D00700
	0x01CFFF14 ADRP X8, 0x2251000
	0x01CFFF18 LDR X8, [X8 + 0xD98]
	0x01CFFF1C LDR X2, [X8]
	0x01CFFF20 MOV X1, X24
	0x01CFFF24 BL 0x28FA228
	0x01CFFF28 CBZ X0, 0x1D006F8
	0x01CFFF2C LDR X24, [X0 + 0x30]
	0x01CFFF30 CBZ X24, 0x1D00710
	0x01CFFF34 LDR W8, [X24 + 0x18]
	0x01CFFF38 CBZ W8, 0x1CFFE8C
	0x01CFFF3C ADRP X8, 0x2251000
	0x01CFFF40 LDR X8, [X8 + 0xE98]
	0x01CFFF44 LDR X8, [X8]
	0x01CFFF48 LDR W9, [X8 + 0xE0]
	0x01CFFF4C CBNZ W9, 0x1CFFF64
	0x01CFFF50 MOV X0, X8
	0x01CFFF54 BL 0x1B6E8F8
	0x01CFFF58 ADRP X8, 0x2251000
	0x01CFFF5C LDR X8, [X8 + 0xE98]
	0x01CFFF60 LDR X8, [X8]
	0x01CFFF64 LDR X9, [X8 + 0xB8]
	0x01CFFF68 LDR X25, [X9 + 0x8]
	0x01CFFF6C CBNZ X25, 0x1CFFFD4
	0x01CFFF70 LDR W9, [X8 + 0xE0]
	0x01CFFF74 CBNZ W9, 0x1CFFF8C
	0x01CFFF78 MOV X0, X8
	0x01CFFF7C BL 0x1B6E8F8
	0x01CFFF80 ADRP X8, 0x2251000
	0x01CFFF84 LDR X8, [X8 + 0xE98]
	0x01CFFF88 LDR X8, [X8]
	0x01CFFF8C LDR X8, [X8 + 0xB8]
	0x01CFFF90 LDR X26, [X8]
	0x01CFFF94 ADRP X8, 0x2251000
	0x01CFFF98 LDR X8, [X8 + 0xE18]
	0x01CFFF9C LDR X0, [X8]
	0x01CFFFA0 BL 0x1B6EA0C
	0x01CFFFA4 ADRP X8, 0x2251000
	0x01CFFFA8 LDR X8, [X8 + 0xE90]
	0x01CFFFAC MOV X25, X0
	0x01CFFFB0 LDR X2, [X8]
	0x01CFFFB4 MOV X1, X26
	0x01CFFFB8 MOV X3, X31
	0x01CFFFBC BL 0x2B796E4
	0x01CFFFC0 ADRP X8, 0x2251000
	0x01CFFFC4 LDR X8, [X8 + 0xE98]
	0x01CFFFC8 LDR X8, [X8]
	0x01CFFFCC LDR X8, [X8 + 0xB8]
	0x01CFFFD0 STR X25, [X8 + 0x8]
	0x01CFFFD4 ADRP X8, 0x2251000
	0x01CFFFD8 LDR X8, [X8 + 0xDA8]
	0x01CFFFDC LDR X2, [X8]
	0x01CFFFE0 MOV X0, X24
	0x01CFFFE4 MOV X1, X25
	0x01CFFFE8 BL 0x20C4374
	0x01CFFFEC ADRP X8, 0x2251000
	0x01CFFFF0 LDR X8, [X8 + 0xCA8]
	0x01CFFFF4 LDR X1, [X8]
	0x01CFFFF8 BL 0x20C23C4
	0x01CFFFFC MOV X2, X0
	0x01D00000 CBZ X0, 0x1D00718
	0x01D00004 LDR W8, [X2 + 0x18]
	0x01D00008 CMP W8, 0x1
	0x01D0000C B.LT 0x1CFFE8C
	0x01D00010 ADRP X8, 0x2250000
	0x01D00014 LDR W1, [X23 + 0x28]
	0x01D00018 LDR X8, [X8 + 0xEA0]
	0x01D0001C STP X31, X31, [X31 + 0x20]
	0x01D00020 LDR X3, [X8]
	0x01D00024 ADD X0, X31, 0x20
	0x01D00028 BL 0x25F3550
	0x01D0002C CBZ X22, 0x1D00720
	0x01D00030 ADRP X9, 0x2250000
	0x01D00034 LDP X1, X2, [X31 + 0x20]
	0x01D00038 LDR W10, [X22 + 0x1C]
	0x01D0003C LDR X8, [X22 + 0x10]
	0x01D00040 LDR X9, [X9 + 0xE40]
	0x01D00044 ADD W10, W10, 0x1
	0x01D00048 LDR X9, [X9]
	0x01D0004C STR W10, [X22 + 0x1C]
	0x01D00050 CBZ X8, 0x1D00728
	0x01D00054 LDRSW X10, [X22 + 0x18]
	0x01D00058 LDR W11, [X8 + 0x18]
	0x01D0005C CMP W10, W11
	0x01D00060 B.CS 0x1D00078
	0x01D00064 ADD W9, W10, 0x1
	0x01D00068 ADD X8, X8, X10, 0x4, LSL
	0x01D0006C STR W9, [X22 + 0x18]
	0x01D00070 STP X1, X2, [X8 + 0x20]
	0x01D00074 B 0x1CFFE8C
	0x01D00078 LDR X8, [X9 + 0x20]
	0x01D0007C LDR X8, [X8 + 0xC0]
	0x01D00080 LDR X3, [X8 + 0x70]
	0x01D00084 MOV X0, X22
	0x01D00088 BL 0x2D737B4
	0x01D0008C B 0x1CFFE8C
	0x01D00090 MOV X23, X31
	0x01D00094 MOVZ W24, 0x7
	0x01D00098 ADRP X8, 0x2250000
	0x01D0009C LDR X8, [X8 + 0xDB8]
	0x01D000A0 LDR X1, [X8]
	0x01D000A4 ADD X0, X31, 0xC0
	0x01D000A8 BL 0x2A14F2C
	0x01D000AC CBNZ X23, 0x1D00908
	0x01D000B0 CMP W24, 0x7
	0x01D000B4 B.EQ 0x1D000BC
	0x01D000B8 CBNZ W24, 0x1D00838
	0x01D000BC ADRP X8, 0x2250000
	0x01D000C0 LDR X8, [X8 + 0xE98]
	0x01D000C4 LDR X0, [X8]
	0x01D000C8 LDR W8, [X0 + 0xE0]
	0x01D000CC CBNZ W8, 0x1D000E0
	0x01D000D0 BL 0x1B6E8F8
	0x01D000D4 ADRP X8, 0x2250000
	0x01D000D8 LDR X8, [X8 + 0xE98]
	0x01D000DC LDR X0, [X8]
	0x01D000E0 LDR X8, [X0 + 0xB8]
	0x01D000E4 LDR X23, [X8 + 0x10]
	0x01D000E8 CBNZ X23, 0x1D0014C
	0x01D000EC LDR W8, [X0 + 0xE0]
	0x01D000F0 CBNZ W8, 0x1D00104
	0x01D000F4 BL 0x1B6E8F8
	0x01D000F8 ADRP X8, 0x2250000
	0x01D000FC LDR X8, [X8 + 0xE98]
	0x01D00100 LDR X0, [X8]
	0x01D00104 LDR X8, [X0 + 0xB8]
	0x01D00108 LDR X24, [X8]
	0x01D0010C ADRP X8, 0x2250000
	0x01D00110 LDR X8, [X8 + 0xE10]
	0x01D00114 LDR X0, [X8]
	0x01D00118 BL 0x1B6EA0C
	0x01D0011C ADRP X8, 0x2250000
	0x01D00120 LDR X8, [X8 + 0xE88]
	0x01D00124 MOV X23, X0
	0x01D00128 LDR X2, [X8]
	0x01D0012C MOV X1, X24
	0x01D00130 MOV X3, X31
	0x01D00134 BL 0x2B754F4
	0x01D00138 ADRP X8, 0x2250000
	0x01D0013C LDR X8, [X8 + 0xE98]
	0x01D00140 LDR X8, [X8]
	0x01D00144 LDR X8, [X8 + 0xB8]
	0x01D00148 STR X23, [X8 + 0x10]
	0x01D0014C ADRP X8, 0x2250000
	0x01D00150 LDR X8, [X8 + 0xDA0]
	0x01D00154 LDR X2, [X8]
	0x01D00158 MOV X0, X22
	0x01D0015C MOV X1, X23
	0x01D00160 BL 0x20BFFC0
	0x01D00164 ADRP X8, 0x2250000
	0x01D00168 LDR X8, [X8 + 0x980]
	0x01D0016C MOV W23, W0
	0x01D00170 LDR X0, [X8]
	0x01D00174 BL 0x1B6EA0C
	0x01D00178 ADRP X8, 0x2250000
	0x01D0017C LDR X8, [X8 + 0x988]
	0x01D00180 MOV X24, X0
	0x01D00184 LDR X1, [X8]
	0x01D00188 BL 0x2ECFDD8
	0x01D0018C LDR X0, [X21 + 0x28]
	0x01D00190 CBZ X0, 0x1D00910
	0x01D00194 ADRP X8, 0x2250000
	0x01D00198 LDR X8, [X8 + 0xE58]
	0x01D0019C LDR X1, [X8]
	0x01D001A0 ADD X8, X31, 0x20
	0x01D001A4 BL 0x2E470E0
	0x01D001A8 LDR V0, [X31 + 0x2]
	0x01D001AC LDR X8, [X31 + 0x30]
	0x01D001B0 FMOV S8, W31
	0x01D001B4 STR V0, [X31 + 0xA]
	0x01D001B8 STR X8, [X31 + 0xB0]
	0x01D001BC ADRP X8, 0x2250000
	0x01D001C0 LDR X8, [X8 + 0xDE0]
	0x01D001C4 LDR X1, [X8]
	0x01D001C8 ADD X0, X31, 0xA0
	0x01D001CC BL 0x2A14F30
	0x01D001D0 TBZ X0, 0x0, 0x1D002F8
	0x01D001D4 LDR X8, [X31 + 0xB0]
	0x01D001D8 CBZ X8, 0x1D006AC
	0x01D001DC LDR X0, [X8 + 0x18]
	0x01D001E0 CBZ X0, 0x1D006B4
	0x01D001E4 ADRP X8, 0x224E000
	0x01D001E8 LDR X8, [X8 + 0xD20]
	0x01D001EC LDR X1, [X8]
	0x01D001F0 ADD X8, X31, 0x20
	0x01D001F4 BL 0x2ED11FC
	0x01D001F8 LDP V0, V1, [X31 + 0x20]
	0x01D001FC MOV V9.16B, V8.16B
	0x01D00200 STP V0, V1, [X31 + 0x80]
	0x01D00204 LDR X1, [X29]
	0x01D00208 ADD X0, X31, 0x80
	0x01D0020C BL 0x2A22344
	0x01D00210 TBZ X0, 0x0, 0x1D0027C
	0x01D00214 CBZ X24, 0x1D002B0
	0x01D00218 LDR W10, [X24 + 0x1C]
	0x01D0021C LDP X1, X25, [X31 + 0x90]
	0x01D00220 LDR X8, [X24 + 0x10]
	0x01D00224 LDR X9, [X20]
	0x01D00228 ADD W10, W10, 0x1
	0x01D0022C STR W10, [X24 + 0x1C]
	0x01D00230 CBZ X8, 0x1D002B8
	0x01D00234 LDRSW X10, [X24 + 0x18]
	0x01D00238 LDR W11, [X8 + 0x18]
	0x01D0023C CMP W10, W11
	0x01D00240 B.CS 0x1D00258
	0x01D00244 ADD W9, W10, 0x1
	0x01D00248 ADD X8, X8, X10, 0x4, LSL
	0x01D0024C STR W9, [X24 + 0x18]
	0x01D00250 STP X1, X25, [X8 + 0x20]
	0x01D00254 B 0x1D00270
	0x01D00258 LDR X8, [X9 + 0x20]
	0x01D0025C LDR X8, [X8 + 0xC0]
	0x01D00260 LDR X3, [X8 + 0x70]

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+128], D8
	003 Move [X31+144], X29
	004 Move [X31+152], X30
	005 Move [X31+160], X28
	006 Move [X31+168], X27
	007 Move [X31+176], X26
	008 Move [X31+184], X25
	009 Move [X31+192], X24
	010 Move [X31+200], X23
	011 Move [X31+208], X22
	012 Move [X31+216], X21
	013 Move [X31+224], X20
	014 Move [X31+232], X19
	015 Move X19, 0x2525000
	016 Move W8, [X19+1836]
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {66}
	022 Move X0, 0x2252000
	023 Move X0, [X0+3104]
	024 Call 0x1B6F7F0
	025 Move X0, 0x2252000
	026 Move X0, [X0+3112]
	027 Call 0x1B6F7F0
	028 Move X0, 0x2252000
	029 Move X0, [X0+608]
	030 Call 0x1B6F7F0
	031 Move X0, 0x2252000
	032 Move X0, [X0+3120]
	033 Call 0x1B6F7F0
	034 Move X0, 0x2252000
	035 Move X0, [X0+616]
	036 Call 0x1B6F7F0
	037 Move X0, 0x2252000
	038 Move X0, [X0+624]
	039 Call 0x1B6F7F0
	040 Move X0, 0x2252000
	041 Move X0, [X0+3128]
	042 Call 0x1B6F7F0
	043 Move X0, 0x2252000
	044 Move X0, [X0+3304]
	045 Call 0x1B6F7F0
	046 Move X0, 0x2252000
	047 Move X0, [X0+3312]
	048 Call 0x1B6F7F0
	049 Move X0, 0x2252000
	050 Move X0, [X0+3320]
	051 Call 0x1B6F7F0
	052 Move X0, 0x2252000
	053 Move X0, [X0+3328]
	054 Call 0x1B6F7F0
	055 Move X0, 0x2252000
	056 Move X0, [X0+3336]
	057 Call 0x1B6F7F0
	058 Move X0, 0x2252000
	059 Move X0, [X0+632]
	060 Call 0x1B6F7F0
	061 Move X0, 0x2252000
	062 Move X0, [X0+3136]
	063 Call 0x1B6F7F0
	064 Move W8, 1
	065 Move [X19+1836], W8
	066 Move [X31+96], X31
	067 Move [X31+104], X31
	068 Move [X31+112], X31
	069 Move [X31+64], X31
	070 Move [X31+72], X31
	071 Move [X31+80], X31
	072 Move [X31+136], X31
	073 Move [X31+48], X31
	074 Move [X31+56], X31
	075 Move [X31+40], X31
	076 Move X8, [X20+40]
	077 Compare X8, 0
	078 JumpIfEqual {400}
	079 Move X0, [X8+16]
	080 Compare X0, 0
	081 JumpIfEqual {400}
	082 Move [X31+8], X20
	083 Move X8, 0x2252000
	084 Move X8, [X8+3104]
	085 Move X1, [X8]
	086 Call Dictionary`2<Object, Object>.get_Values, X0
	087 Compare X0, 0
	088 JumpIfEqual {400}
	089 Move X8, 0x2252000
	090 Move X8, [X8+3136]
	091 Move X24, 0x2252000
	092 Move X29, 0x2252000
	093 Move X21, 0x2252000
	094 Move X19, 0x2252000
	095 Move X23, 0x2252000
	096 Move X25, 0x2252000
	097 Move X26, 0x2252000
	098 Move X24, [X24+3120]
	099 Move X29, [X29+632]
	100 Move X21, [X21+616]
	101 Move X19, [X19+3304]
	102 Move X23, [X23+608]
	103 Move X25, [X25+3312]
	104 Move X26, [X26+3328]
	105 Move X1, [X8]
	106 Move X27, 0x2252000
	107 Move X28, 0x2252000
	108 Move X27, [X27+3336]
	109 Move X28, [X28+3320]
	110 Add X8, X31, 16
	111 Call ValueCollection<Object, Object>.GetEnumerator, X0
	112 Move X9, -19222528
	113 Move V0, [X31+1]
	114 Move X8, [X31+32]
	115 Move V8, [X9+2736]
	116 Move [X31+6], V0
	117 Move [X31+112], X8
	118 Move X1, [X24]
	119 Add X0, X31, 96
	120 Call Enumerator<Object, Object>.MoveNext, X0
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfNotEqual {189}
	125 Move X8, [X31+112]
	126 Compare X8, 0
	127 JumpIfEqual {393}
	128 Move X0, [X8+40]
	129 Compare X0, 0
	130 JumpIfEqual {394}
	131 Move X1, [X29]
	132 Add X8, X31, 16
	133 Call List`1<Object>.GetEnumerator, X0
	134 Move V0, [X31+1]
	135 Move X8, [X31+32]
	136 Move [X31+4], V0
	137 Move [X31+80], X8
	138 Move X1, [X21]
	139 Add X0, X31, 64
	140 Call Enumerator<Object>.MoveNext, X0
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {174}
	145 Move X20, [X31+80]
	146 Compare X20, 0
	147 JumpIfEqual {182}
	148 Move X0, X20
	149 Move X1, X31
	150 Call Component.get_gameObject, X0
	151 Compare X0, 0
	152 JumpIfEqual {183}
	153 Move W1, 15
	154 Move X2, X31
	155 Call GameObject.set_layer, X0, X1
	156 Move X0, X20
	157 Move X1, X31
	158 Call Component.get_gameObject, X0
	159 Compare X0, 0
	160 JumpIfEqual {180}
	161 Move X1, [X19]
	162 Call 0x20CFEF0, X0
	163 Move X20, X0
	164 Compare X0, 0
	165 JumpIfEqual {181}
	166 Move W1, 1
	167 Move X0, X20
	168 Move X2, X31
	169 Call Collider.set_isTrigger, X0, X1
	170 Move X0, X20
	171 Move V0, V8
	172 Move X1, X31
	173 Call SphereCollider.set_radius, X0, V0
	174 Move X22, X31
	175 Move X1, [X23]
	176 Add X0, X31, 64
	177 Call Enumerator<Object>.Dispose, X0
	178 Compare X22, 0
	179 JumpIfEqual {118}
	180 Call 0x1B6FA1C
	181 Call 0x1B6FA1C
	182 Call 0x1B6FA1C
	183 Call 0x1B6FA1C
	184 Move X20, X1
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Call 0x3D1A840
	187 Move X22, [X0]
	188 Call 0x3D1A850
	189 Move X23, 0x2252000
	190 Move X23, [X23+3112]
	191 Add X0, X31, 96
	192 Move X1, [X23]
	193 Call Enumerator<Object, Object>.Dispose, X0
	194 Move X8, [X31+8]
	195 Move X8, [X8+40]
	196 Compare X8, 0
	197 JumpIfEqual {400}
	198 Move X0, [X8+16]
	199 Compare X0, 0
	200 JumpIfEqual {400}
	201 Move X8, 0x2252000
	202 Move X8, [X8+3104]
	203 Move X1, [X8]
	204 Call Dictionary`2<Object, Object>.get_Values, X0
	205 Compare X0, 0
	206 JumpIfEqual {400}
	207 Move X8, 0x2252000
	208 Move X8, [X8+3136]
	209 Move X1, [X8]
	210 Add X8, X31, 16
	211 Call ValueCollection<Object, Object>.GetEnumerator, X0
	212 Move V0, [X31+1]
	213 Move X8, [X31+32]
	214 Move [X31+6], V0
	215 Move [X31+112], X8
	216 Move X1, [X24]
	217 Add X0, X31, 96
	218 Call Enumerator<Object, Object>.MoveNext, X0
	219 Move TEMP, X0
	220 And TEMP, TEMP, 1
	221 Compare TEMP, 1
	222 JumpIfNotEqual {348}
	223 Move X8, [X31+112]
	224 Compare X8, 0
	225 JumpIfEqual {398}
	226 Move X0, [X8+24]
	227 Compare X0, 0
	228 JumpIfEqual {399}
	229 Move X2, [X25]
	230 Move W1, 1
	231 Call 0x20D0C54, X0, X1
	232 Move X19, X0
	233 Compare X0, 0
	234 JumpIfEqual {397}
	235 Move W8, [X19+24]
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Move W21, W31
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Add X8, X19, W21
	240 Move X20, [X8+32]
	241 Compare X20, 0
	242 JumpIfEqual {367}
	243 Move X0, X20
	244 Move X1, X31
	245 Call Component.get_gameObject, X0
	246 Compare X0, 0
	247 JumpIfEqual {368}
	248 Move X2, [X26]
	249 Add X1, X31, 136
	250 Call 0x20D12D0, X0, X1
	251 Move TEMP, X0
	252 And TEMP, TEMP, 1
	253 Compare TEMP, 1
	254 JumpIfNotEqual {265}
	255 Move X0, [X31+136]
	256 Compare X0, 0
	257 JumpIfEqual {382}
	258 Move X1, X31
	259 Call Component.get_gameObject, X0
	260 Compare X0, 0
	261 JumpIfEqual {383}
	262 Move W1, 7
	263 Move X2, X31
	264 Call GameObject.set_layer, X0, X1
	265 Move X0, X20
	266 Move X1, X31
	267 Call Component.get_gameObject, X0
	268 Compare X0, 0
	269 JumpIfEqual {381}
	270 Move X2, [X27]
	271 Add X1, X31, 56
	272 Call 0x20D12D0, X0, X1
	273 Move TEMP, X0
	274 And TEMP, TEMP, 1
	275 Compare TEMP, 1
	276 JumpIfNotEqual {314}
	277 Move X0, X20
	278 Move X1, X31
	279 Call Component.get_gameObject, X0
	280 Compare X0, 0
	281 JumpIfEqual {384}
	282 Move X2, [X28]
	283 Add X1, X31, 48
	284 Call 0x20D12D0, X0, X1
	285 Move TEMP, X0
	286 And TEMP, TEMP, 1
	287 Compare TEMP, 1
	288 JumpIfNotEqual {304}
	289 Move X0, [X31+48]
	290 Compare X0, 0
	291 JumpIfEqual {388}
	292 Move X1, X31
	293 Call Collider.get_isTrigger, X0
	294 Move TEMP, X0
	295 And TEMP, TEMP, 1
	296 Compare TEMP, 1
	297 JumpIfEqual {304}
	298 Move X0, [X31+48]
	299 Compare X0, 0
	300 JumpIfEqual {392}
	301 Move W1, 1
	302 Move X2, X31
	303 Call Collider.set_isTrigger, X0, X1
	304 Move X0, [X31+56]
	305 Compare X0, 0
	306 JumpIfEqual {387}
	307 Move X1, X31
	308 Call Component.get_gameObject, X0
	309 Compare X0, 0
	310 JumpIfEqual {385}
	311 Move W1, 21
	312 Move X2, X31
	313 Call GameObject.set_layer, X0, X1
	314 Move X0, X20
	315 Move X1, X31
	316 Call Component.get_gameObject, X0
	317 Compare X0, 0
	318 JumpIfEqual {386}
	319 Move X2, [X28]
	320 Add X1, X31, 40
	321 Call 0x20D12D0, X0, X1
	322 Move TEMP, X0
	323 And TEMP, TEMP, 1
	324 Compare TEMP, 1
	325 JumpIfNotEqual {345}
	326 Move X0, [X31+40]
	327 Compare X0, 0
	328 JumpIfEqual {389}
	329 Move X1, X31
	330 Call Collider.get_isTrigger, X0
	331 Move TEMP, X0
	332 And TEMP, TEMP, 1
	333 Compare TEMP, 1
	334 JumpIfEqual {345}
	335 Move X0, [X31+40]
	336 Compare X0, 0
	337 JumpIfEqual {390}
	338 Move X1, X31
	339 Call Component.get_gameObject, X0
	340 Compare X0, 0
	341 JumpIfEqual {391}
	342 Move W1, 31
	343 Move X2, X31
	344 Call GameObject.set_layer, X0, X1
	345 Move W8, [X19+24]
	346 Add W21, W21, 1
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Move X1, [X23]
	349 Add X0, X31, 96
	350 Call Enumerator<Object, Object>.Dispose, X0
	351 Move X20, [X31+224]
	352 Move X19, [X31+232]
	353 Move X22, [X31+208]
	354 Move X21, [X31+216]
	355 Move X24, [X31+192]
	356 Move X23, [X31+200]
	357 Move X26, [X31+176]
	358 Move X25, [X31+184]
	359 Move X28, [X31+160]
	360 Move X27, [X31+168]
	361 Move X29, [X31+144]
	362 Move X30, [X31+152]
	363 Move V8, [X31+128]
	364 Add X31, X31, 240
	365 Return 
	366 Call 0x1B6FA24
	367 Call 0x1B6FA1C
	368 Call 0x1B6FA1C
	369 Move X19, X0
	370 Move X22, X31
	371 Move X1, [X23]
	372 Add X0, X31, 64
	373 Call Enumerator<Object>.Dispose, X0
	374 Move X23, 0x2251000
	375 Move X23, [X23+3112]
	376 Move X0, X19
	377 Compare X22, 0
	378 JumpIfEqual {406}
	379 Move X0, X22
	380 Call 0x1B6FA14
	381 Call 0x1B6FA1C
	382 Call 0x1B6FA1C
	383 Call 0x1B6FA1C
	384 Call 0x1B6FA1C
	385 Call 0x1B6FA1C
	386 Call 0x1B6FA1C
	387 Call 0x1B6FA1C
	388 Call 0x1B6FA1C
	389 Call 0x1B6FA1C
	390 Call 0x1B6FA1C
	391 Call 0x1B6FA1C
	392 Call 0x1B6FA1C
	393 Call 0x1B6FA1C
	394 Call 0x1B6FA1C
	395 Move X0, X22
	396 Call 0x1B6FA14
	397 Call 0x1B6FA1C
	398 Call 0x1B6FA1C
	399 Call 0x1B6FA1C
	400 Call 0x1B6FA1C
	401 Move X20, X1
	402 Move X19, X0
	403 Move X23, 0x2251000
	404 Move X23, [X23+3112]
	405 Move X20, X1
	406 NotImplemented "Instruction CMP not yet implemented."
	407 Call 0x3D1A840
	408 Move X20, [X0]
	409 Call 0x3D1A850
	410 Move X1, [X23]
	411 Add X0, X31, 96
	412 Call Enumerator<Object, Object>.Dispose, X0
	413 Compare X20, 0
	414 JumpIfEqual {194}
	415 Move X0, X20
	416 Call 0x1B6FA14
	417 Move X21, X0
	418 Move X20, X31
	419 Move X21, X0
	420 Move X8, 0x2251000
	421 Move X8, [X8+3112]
	422 Move X1, [X8]
	423 Add X0, X31, 96
	424 Call Enumerator<Object, Object>.Dispose, X0
	425 Compare X20, 0
	426 JumpIfEqual {452}
	427 Move X0, X20
	428 Call 0x1B6FA14
	429 Move X23, 0x2251000
	430 Move X23, [X23+3112]
	431 NotImplemented "Instruction CMP not yet implemented."
	432 Call 0x3D1A840
	433 Move X19, [X0]
	434 Call 0x3D1A850
	435 Move X1, [X23]
	436 Add X0, X31, 96
	437 Call Enumerator<Object, Object>.Dispose, X0
	438 Compare X19, 0
	439 JumpIfEqual {351}
	440 Move X0, X19
	441 Call 0x1B6FA14
	442 Move X21, X0
	443 Move X19, X31
	444 Move X21, X0
	445 Move X8, 0x2251000
	446 Move X8, [X8+3112]
	447 Move X1, [X8]
	448 Add X0, X31, 96
	449 Call Enumerator<Object, Object>.Dispose, X0
	450 Compare X19, 0
	451 JumpIfNotEqual {454}
	452 Move X0, X21
	453 Call 0x1C8518C
	454 Move X0, X19
	455 Call 0x1B6FA14
	456 Call 0x18F56A8

Method: System.Void CreateNavZones(System.Int32 navZoneOffset)

Disassembly:
	0x01D00590 MOV X3, X31
	0x01D00594 BL 0x3090A1C
	0x01D00598 ADRP X8, 0x224D000
	0x01D0059C LDR X8, [X8 + 0x8E0]
	0x01D005A0 MOV X22, X0
	0x01D005A4 LDR X0, [X8]
	0x01D005A8 BL 0x1B6EA0C
	0x01D005AC MOV X21, X0
	0x01D005B0 MOV X1, X22
	0x01D005B4 MOV X2, X31
	0x01D005B8 BL 0x3A9DAE4
	0x01D005BC CBZ X21, 0x1D00930
	0x01D005C0 MOV X0, X21
	0x01D005C4 MOV X1, X31
	0x01D005C8 BL 0x3A9D8EC
	0x01D005CC CBZ X0, 0x1D0092C
	0x01D005D0 LDR X8, [X31 + 0x18]
	0x01D005D4 LDR X1, [X8 + 0x48]
	0x01D005D8 MOV X2, X31
	0x01D005DC BL 0x3AA7DEC
	0x01D005E0 CMP W26, 0x1
	0x01D005E4 B.LT 0x1D00610
	0x01D005E8 MOV X0, X21
	0x01D005EC MOV X1, X31
	0x01D005F0 BL 0x3A9D8EC
	0x01D005F4 CBZ X0, 0x1D00934
	0x01D005F8 SCVTF S2, W26
	0x01D005FC FDIV S0, S11, S2
	0x01D00600 FDIV S1, S10, S2
	0x01D00604 FDIV S2, S9, S2
	0x01D00608 MOV X1, X31
	0x01D0060C BL 0x3AA76F8
	0x01D00610 ADRP X8, 0x2250000
	0x01D00614 LDR X8, [X8 + 0xE20]
	0x01D00618 LDR X1, [X8]
	0x01D0061C MOV X0, X21
	0x01D00620 BL 0x20CEE08
	0x01D00624 CBZ X0, 0x1D00928
	0x01D00628 LDR W8, [X31 + 0x14]
	0x01D0062C STR X27, [X0 + 0x28]
	0x01D00630 STR W23, [X0 + 0x30]
	0x01D00634 STR X24, [X0 + 0x38]
	0x01D00638 SCVTF S0, W8
	0x01D0063C STR S0, [X0 + 0x20]
	0x01D00640 STR S8, [X0 + 0x40]
	0x01D00644 B 0x1CFFDF4
	0x01D00648 MOV X26, X1
	0x01D0064C MOV X27, X31
	0x01D00650 ADRP X8, 0x224E000
	0x01D00654 LDR X8, [X8 + 0xD08]
	0x01D00658 LDR X1, [X8]
	0x01D0065C ADD X0, X31, 0x80
	0x01D00660 BL 0x2A22340
	0x01D00664 MOV X1, X26
	0x01D00668 CBZ X27, 0x1D007C0
	0x01D0066C B 0x1D0093C
	0x01D00670 MOV X22, X1
	0x01D00674 MOV X28, X31
	0x01D00678 ADRP X8, 0x2250000
	0x01D0067C LDR X8, [X8 + 0xCB8]
	0x01D00680 LDR X1, [X8]
	0x01D00684 ADD X0, X31, 0x40
	0x01D00688 BL 0x2A14F2C
	0x01D0068C MOV X1, X22
	0x01D00690 CBZ X28, 0x1D007F4
	0x01D00694 B 0x1D00944
	0x01D00698 BL 0x1B6EA1C
	0x01D0069C B 0x1D0093C
	0x01D006A0 MOV X0, X27
	0x01D006A4 BL 0x1B6EA14
	0x01D006A8 B 0x1D00944
	0x01D006AC BL 0x1B6EA1C
	0x01D006B0 B 0x1D0093C
	0x01D006B4 BL 0x1B6EA1C
	0x01D006B8 B 0x1D00944
	0x01D006BC BL 0x1B6EA1C
	0x01D006C0 B 0x1D0093C
	0x01D006C4 BL 0x1B6EA1C
	0x01D006C8 B 0x1D0094C
	0x01D006CC MOV X0, X28
	0x01D006D0 BL 0x1B6EA14
	0x01D006D4 B 0x1D0094C
	0x01D006D8 BL 0x1B6EA1C
	0x01D006DC B 0x1D0094C
	0x01D006E0 BL 0x1B6EA1C
	0x01D006E4 B 0x1D0094C
	0x01D006E8 BL 0x1B6EA1C
	0x01D006EC B 0x1D0093C
	0x01D006F0 BL 0x1B6EA1C
	0x01D006F4 B 0x1D0093C
	0x01D006F8 BL 0x1B6EA1C
	0x01D006FC B 0x1D0093C
	0x01D00700 BL 0x1B6EA1C
	0x01D00704 B 0x1D0093C
	0x01D00708 BL 0x1B6EA1C
	0x01D0070C B 0x1D0093C
	0x01D00710 BL 0x1B6EA1C
	0x01D00714 B 0x1D0093C
	0x01D00718 BL 0x1B6EA1C
	0x01D0071C B 0x1D0093C
	0x01D00720 BL 0x1B6EA1C
	0x01D00724 B 0x1D0093C
	0x01D00728 BL 0x1B6EA1C
	0x01D0072C B 0x1D0093C
	0x01D00730 MOV X22, X1
	0x01D00734 MOV X25, X0
	0x01D00738 B 0x1D00678
	0x01D0073C MOV X26, X1
	0x01D00740 MOV X25, X0
	0x01D00744 B 0x1D00650
	0x01D00748 B 0x1D00814
	0x01D0074C B 0x1D00814
	0x01D00750 B 0x1D00814
	0x01D00754 B 0x1D00814
	0x01D00758 B 0x1D00814
	0x01D0075C B 0x1D00814
	0x01D00760 B 0x1D00814
	0x01D00764 B 0x1D00814
	0x01D00768 B 0x1D00814
	0x01D0076C B 0x1D00814
	0x01D00770 B 0x1D00814
	0x01D00774 B 0x1D00814
	0x01D00778 B 0x1D00814
	0x01D0077C B 0x1D007F0
	0x01D00780 B 0x1D00814
	0x01D00784 B 0x1D00814
	0x01D00788 B 0x1D00814
	0x01D0078C B 0x1D007F0
	0x01D00790 B 0x1D007F0
	0x01D00794 B 0x1D007F0
	0x01D00798 B 0x1D007F0
	0x01D0079C B 0x1D007F0
	0x01D007A0 B 0x1D007B8
	0x01D007A4 B 0x1D007B8
	0x01D007A8 B 0x1D007B8
	0x01D007AC B 0x1D007B8
	0x01D007B0 B 0x1D007B8
	0x01D007B4 B 0x1D007F0
	0x01D007B8 MOV X25, X0
	0x01D007BC MOV V9.16B, V8.16B
	0x01D007C0 CMP W1, 0x1
	0x01D007C4 B.NE 0x1D008D0
	0x01D007C8 MOV X0, X25
	0x01D007CC BL 0x3D19840
	0x01D007D0 LDR X27, [X0]
	0x01D007D4 BL 0x3D19850
	0x01D007D8 MOV W25, W31
	0x01D007DC MOV V8.16B, V9.16B
	0x01D007E0 B 0x1D00308
	0x01D007E4 B 0x1D00814
	0x01D007E8 B 0x1D00814
	0x01D007EC B 0x1D007F0
	0x01D007F0 MOV X25, X0
	0x01D007F4 CMP W1, 0x1
	0x01D007F8 B.NE 0x1D008A4
	0x01D007FC MOV X0, X25
	0x01D00800 BL 0x3D19840
	0x01D00804 LDR X22, [X0]
	0x01D00808 BL 0x3D19850
	0x01D0080C MOV W25, W31
	0x01D00810 B 0x1D0052C
	0x01D00814 MOV X25, X0
	0x01D00818 CMP W1, 0x1
	0x01D0081C B.NE 0x1D00878
	0x01D00820 MOV X0, X25
	0x01D00824 BL 0x3D19840
	0x01D00828 LDR X23, [X0]
	0x01D0082C BL 0x3D19850
	0x01D00830 MOV W24, W31
	0x01D00834 B 0x1D00098
	0x01D00838 ADRP X8, 0x2250000
	0x01D0083C LDR X8, [X8 + 0xDC0]
	0x01D00840 ADD X0, X31, 0xE0
	0x01D00844 LDR X1, [X8]
	0x01D00848 BL 0x2A14F2C
	0x01D0084C LDP X20, X19, [X31 + 0x170]
	0x01D00850 LDP X22, X21, [X31 + 0x160]
	0x01D00854 LDP X24, X23, [X31 + 0x150]
	0x01D00858 LDP X26, X25, [X31 + 0x140]
	0x01D0085C LDP X28, X27, [X31 + 0x130]
	0x01D00860 LDP X29, X30, [X31 + 0x120]
	0x01D00864 LDP D9, D8, [X31 + 0x110]
	0x01D00868 LDP D11, D10, [X31 + 0x100]
	0x01D0086C MOVZ W0, 0x1
	0x01D00870 ADD X31, X31, 0x180
	0x01D00874 RET
	0x01D00878 MOV X19, X1
	0x01D0087C MOV X23, X31
	0x01D00880 ADRP X8, 0x2250000
	0x01D00884 LDR X8, [X8 + 0xDB8]
	0x01D00888 LDR X1, [X8]
	0x01D0088C ADD X0, X31, 0xC0
	0x01D00890 BL 0x2A14F2C
	0x01D00894 MOV X1, X19
	0x01D00898 CBZ X23, 0x1D00A08
	0x01D0089C MOV X0, X23
	0x01D008A0 BL 0x1B6EA14
	0x01D008A4 MOV X19, X1
	0x01D008A8 MOV X22, X31
	0x01D008AC ADRP X8, 0x2250000
	0x01D008B0 LDR X8, [X8 + 0xDB0]
	0x01D008B4 LDR X1, [X8]
	0x01D008B8 ADD X0, X31, 0x60
	0x01D008BC BL 0x29E1018
	0x01D008C0 MOV X1, X19
	0x01D008C4 CBZ X22, 0x1D00A08
	0x01D008C8 MOV X0, X22
	0x01D008CC BL 0x1B6EA14
	0x01D008D0 MOV X19, X1
	0x01D008D4 MOV X27, X31
	0x01D008D8 ADRP X8, 0x2250000
	0x01D008DC LDR X8, [X8 + 0xDC8]
	0x01D008E0 LDR X1, [X8]
	0x01D008E4 ADD X0, X31, 0xA0
	0x01D008E8 BL 0x2A14F2C
	0x01D008EC MOV X1, X19
	0x01D008F0 CBZ X27, 0x1D00A08
	0x01D008F4 MOV X0, X27
	0x01D008F8 BL 0x1B6EA14
	0x01D008FC BL 0x1B6EA1C
	0x01D00900 BL 0x1B6EA1C
	0x01D00904 BL 0x1B6EA1C
	0x01D00908 MOV X0, X23
	0x01D0090C BL 0x1B6EA14
	0x01D00910 BL 0x1B6EA1C
	0x01D00914 MOV X0, X27
	0x01D00918 BL 0x1B6EA14
	0x01D0091C BL 0x1B6EA1C
	0x01D00920 MOV X0, X22
	0x01D00924 BL 0x1B6EA14
	0x01D00928 BL 0x1B6EA1C
	0x01D0092C BL 0x1B6EA1C
	0x01D00930 BL 0x1B6EA1C
	0x01D00934 BL 0x1B6EA1C
	0x01D00938 BL 0x1B6EA1C
	0x01D0093C MOV X0, X27
	0x01D00940 BL 0x1B6EA14
	0x01D00944 MOV X0, X28
	0x01D00948 BL 0x1B6EA14
	0x01D0094C BL 0x18F46A8
	0x01D00950 MOV X19, X1
	0x01D00954 MOV X25, X0
	0x01D00958 B 0x1D008D8
	0x01D0095C MOV X19, X1
	0x01D00960 MOV X25, X0
	0x01D00964 B 0x1D008AC
	0x01D00968 MOV X19, X1
	0x01D0096C MOV X25, X0
	0x01D00970 B 0x1D00880
	0x01D00974 B 0x1D00A04
	0x01D00978 B 0x1D00A04
	0x01D0097C B 0x1D00A04
	0x01D00980 B 0x1D00A04
	0x01D00984 B 0x1D00A04
	0x01D00988 B 0x1D00A04
	0x01D0098C B 0x1D00A04
	0x01D00990 B 0x1D00A04
	0x01D00994 B 0x1D00A04
	0x01D00998 B 0x1D00A04
	0x01D0099C B 0x1D00A04
	0x01D009A0 B 0x1D00A04
	0x01D009A4 B 0x1D00A04
	0x01D009A8 B 0x1D00A04
	0x01D009AC B 0x1D00A04
	0x01D009B0 B 0x1D00A04
	0x01D009B4 B 0x1D00A04
	0x01D009B8 B 0x1D00A04
	0x01D009BC B 0x1D00A04
	0x01D009C0 B 0x1D00A04
	0x01D009C4 B 0x1D00A04
	0x01D009C8 B 0x1D00A04
	0x01D009CC B 0x1D00A04
	0x01D009D0 B 0x1D00A04
	0x01D009D4 B 0x1D00A04
	0x01D009D8 B 0x1D00A04
	0x01D009DC B 0x1D00A04
	0x01D009E0 B 0x1D00A04
	0x01D009E4 B 0x1D00A04
	0x01D009E8 B 0x1D00A04
	0x01D009EC B 0x1D00A04
	0x01D009F0 B 0x1D00A04
	0x01D009F4 B 0x1D00A04
	0x01D009F8 B 0x1D00A04
	0x01D009FC B 0x1D00A04
	0x01D00A00 B 0x1D00A04
	0x01D00A04 MOV X25, X0
	0x01D00A08 CMP W1, 0x1
	0x01D00A0C B.NE 0x1D00A40
	0x01D00A10 MOV X0, X25
	0x01D00A14 BL 0x3D19840
	0x01D00A18 LDR X19, [X0]
	0x01D00A1C BL 0x3D19850
	0x01D00A20 ADRP X8, 0x2250000
	0x01D00A24 LDR X8, [X8 + 0xDC0]
	0x01D00A28 ADD X0, X31, 0xE0
	0x01D00A2C LDR X1, [X8]
	0x01D00A30 BL 0x2A14F2C
	0x01D00A34 CBZ X19, 0x1D0084C
	0x01D00A38 MOV X0, X19
	0x01D00A3C BL 0x1B6EA14
	0x01D00A40 MOV X19, X31
	0x01D00A44 B 0x1D00A4C
	0x01D00A48 MOV X25, X0
	0x01D00A4C ADRP X8, 0x2250000
	0x01D00A50 LDR X8, [X8 + 0xDC0]
	0x01D00A54 LDR X1, [X8]
	0x01D00A58 ADD X0, X31, 0xE0
	0x01D00A5C BL 0x2A14F2C
	0x01D00A60 CBNZ X19, 0x1D00A6C
	0x01D00A64 MOV X0, X25
	0x01D00A68 BL 0x1C8418C
	0x01D00A6C MOV X0, X19
	0x01D00A70 BL 0x1B6EA14
	0x01D00A74 BL 0x18F46A8
	0x01D00A78 SUB X31, X31, 0xD0
	0x01D00A7C STP X29, X30, [X31 + 0x70]
	0x01D00A80 STP X28, X27, [X31 + 0x80]
	0x01D00A84 STP X26, X25, [X31 + 0x90]
	0x01D00A88 STP X24, X23, [X31 + 0xA0]
	0x01D00A8C STP X22, X21, [X31 + 0xB0]
	0x01D00A90 STP X20, X19, [X31 + 0xC0]
	0x01D00A94 ADRP X20, 0x2523000
	0x01D00A98 LDRB W8, [X20 + 0x72F]
	0x01D00A9C MOV X19, X0
	0x01D00AA0 TBNZ X8, 0x0, 0x1D00B84
	0x01D00AA4 ADRP X0, 0x2250000
	0x01D00AA8 LDR X0, [X0 + 0xD90]
	0x01D00AAC BL 0x1B6E7F0
	0x01D00AB0 ADRP X0, 0x2250000

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+192], X29
	003 Move [X31+200], X30
	004 Move [X31+208], X28
	005 Move [X31+216], X27
	006 Move [X31+224], X26
	007 Move [X31+232], X25
	008 Move [X31+240], X24
	009 Move [X31+248], X23
	010 Move [X31+256], X22
	011 Move [X31+264], X21
	012 Move [X31+272], X20
	013 Move [X31+280], X19
	014 Move X21, 0x2524000
	015 Move W8, [X21+1837]
	016 Move W19, W1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {63}
	022 Move X0, 0x2251000
	023 Move X0, [X0+3392]
	024 Call 0x1B6F7F0
	025 Move X0, 0x2251000
	026 Move X0, [X0+3400]
	027 Call 0x1B6F7F0
	028 Move X0, 0x2251000
	029 Move X0, [X0+3408]
	030 Call 0x1B6F7F0
	031 Move X0, 0x2251000
	032 Move X0, [X0+3416]
	033 Call 0x1B6F7F0
	034 Move X0, 0x2251000
	035 Move X0, [X0+3424]
	036 Call 0x1B6F7F0
	037 Move X0, 0x2251000
	038 Move X0, [X0+3432]
	039 Call 0x1B6F7F0
	040 Move X0, 0x2251000
	041 Move X0, [X0+552]
	042 Call 0x1B6F7F0
	043 Move X0, 0x2251000
	044 Move X0, [X0+3440]
	045 Call 0x1B6F7F0
	046 Move X0, 0x2251000
	047 Move X0, [X0+3448]
	048 Call 0x1B6F7F0
	049 Move X0, 0x2251000
	050 Move X0, [X0+3456]
	051 Call 0x1B6F7F0
	052 Move X0, 0x2251000
	053 Move X0, [X0+3464]
	054 Call 0x1B6F7F0
	055 Move X0, 0x2251000
	056 Move X0, [X0+736]
	057 Call 0x1B6F7F0
	058 Move X0, 0x2251000
	059 Move X0, [X0+728]
	060 Call 0x1B6F7F0
	061 Move W8, 1
	062 Move [X21+1837], W8
	063 Move [X31+96], X31
	064 Move [X31+104], X31
	065 Move [X31+112], X31
	066 Move [X31+72], X31
	067 Move [X31+80], X31
	068 Move [X31+88], X31
	069 Move [X31+48], X31
	070 Move [X31+56], X31
	071 Move [X31+64], X31
	072 Move X8, [X20+40]
	073 Compare X8, 0
	074 JumpIfEqual {306}
	075 Move X0, [X8+24]
	076 Compare X0, 0
	077 JumpIfEqual {306}
	078 Move X8, 0x2251000
	079 Move X8, [X8+3448]
	080 Move X26, 0x2251000
	081 Move X29, 0x2251000
	082 Move X24, 0x2251000
	083 Move X27, 0x2251000
	084 Move X25, 0x2251000
	085 Move X26, [X26+3416]
	086 Move X29, [X29+3456]
	087 Move X24, [X24+3408]
	088 Move X27, [X27+552]
	089 Move X25, [X25+3392]
	090 Move X1, [X8]
	091 Add X8, X31, 160
	092 Call List`1<Object>.GetEnumerator, X0
	093 Move V0, [X31+10]
	094 Move X8, [X31+176]
	095 Move [X31+6], V0
	096 Move [X31+112], X8
	097 Move X1, [X26]
	098 Add X0, X31, 96
	099 Call Enumerator<Object>.MoveNext, X0
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfNotEqual {254}
	104 Move X8, 0x2251000
	105 Move X21, [X31+112]
	106 Move X8, [X8+728]
	107 Move X0, [X8]
	108 Call 0x1B6FA0C
	109 Move X8, 0x2251000
	110 Move X8, [X8+736]
	111 Move X22, X0
	112 Move X1, [X8]
	113 Call List`1<Object>..ctor, X0
	114 Compare X21, 0
	115 JumpIfEqual {297}
	116 Move X1, [X29]
	117 Add X8, X31, 160
	118 Move X0, X21
	119 Call List`1<Object>.GetEnumerator, X0
	120 Move V0, [X31+10]
	121 Move X8, [X31+176]
	122 Move [X31+3], V0
	123 Move [X31+64], X8
	124 Move X1, [X24]
	125 Add X0, X31, 48
	126 Call Enumerator<Object>.MoveNext, X0
	127 Move TEMP, X0
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfNotEqual {140}
	131 Move X8, [X31+64]
	132 Compare X8, 0
	133 JumpIfEqual {241}
	134 Compare X22, 0
	135 JumpIfEqual {242}
	136 Move X1, [X8+40]
	137 Move X2, [X27]
	138 Move X0, X22
	139 Call List`1<Object>.AddRange, X0, X1
	140 Move X23, X31
	141 Move W28, 6
	142 Move X1, [X25]
	143 Add X0, X31, 48
	144 Call Enumerator<Object>.Dispose, X0
	145 Compare X23, 0
	146 JumpIfNotEqual {298}
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Compare W28, 0
	149 JumpIfNotEqual {254}
	150 Compare X22, 0
	151 JumpIfEqual {302}
	152 Move X8, 0x2251000
	153 Move X8, [X8+3464]
	154 Move X1, [X8]
	155 Move X0, X22
	156 Call List`1<Object>.ToArray, X0
	157 Move X1, X0
	158 Add X0, X31, 72
	159 Move W2, W19
	160 Call NavZone..ctor, X0, X1, X2
	161 Move X8, [X20+40]
	162 Compare X8, 0
	163 JumpIfEqual {301}
	164 Move X0, [X8+32]
	165 NotImplemented "Instruction LDUR not yet implemented."
	166 Move X8, [X31+88]
	167 Move [X31+1], V0
	168 Move [X31+32], X8
	169 Compare X0, 0
	170 JumpIfEqual {303}
	171 Move V0, [X31+1]
	172 Move X8, [X31+32]
	173 Move X10, 0x2251000
	174 Move [X31+8], V0
	175 Move [X31+144], X8
	176 Move W9, [X0+28]
	177 Move X8, [X0+16]
	178 Move X10, [X10+3440]
	179 Add W9, W9, 1
	180 Move X10, [X10]
	181 Move [X0+28], W9
	182 Compare X8, 0
	183 JumpIfEqual {300}
	184 NotImplemented "Instruction LDRSW not yet implemented."
	185 Move W11, [X8+24]
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Add W10, W9, 1
	188 Move [X0+24], W10
	189 Move X10, [X31+144]
	190 Move V0, [X31+8]
	191 Move W11, 24
	192 NotImplemented "Instruction MADD not yet implemented."
	193 Move [X8+48], X10
	194 Move [X8+2], V0
	195 Move X8, [X10+32]
	196 Move V0, [X31+8]
	197 Move X9, [X31+144]
	198 Move X8, [X8+192]
	199 Move X2, [X8+112]
	200 Move [X31+10], V0
	201 Move [X31+176], X9
	202 Add X1, X31, 160
	203 Call List`1<NavZone>.AddWithResize, X0, X1
	204 Move X1, [X29]
	205 Add X8, X31, 160
	206 Move X0, X21
	207 Call List`1<Object>.GetEnumerator, X0
	208 Move V0, [X31+10]
	209 Move X8, [X31+176]
	210 Move [X31+3], V0
	211 Move [X31+64], X8
	212 Move X1, [X24]
	213 Add X0, X31, 48
	214 Call Enumerator<Object>.MoveNext, X0
	215 Move TEMP, X0
	216 And TEMP, TEMP, 1
	217 Compare TEMP, 1
	218 JumpIfNotEqual {230}
	219 Move X8, [X31+64]
	220 NotImplemented "Instruction LDUR not yet implemented."
	221 Move X9, [X31+88]
	222 Move [X31+10], V0
	223 Move [X31+176], X9
	224 Compare X8, 0
	225 JumpIfEqual {243}
	226 Move X9, [X31+176]
	227 Move V0, [X31+10]
	228 Move [X8+72], X9
	229 Move [X8+56], V0
	230 Move X21, X31
	231 Move W22, 9
	232 Move X1, [X25]
	233 Add X0, X31, 48
	234 Call Enumerator<Object>.Dispose, X0
	235 Compare X21, 0
	236 JumpIfNotEqual {304}
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Compare W22, 0
	239 JumpIfNotEqual {254}
	240 Add W19, W19, 1
	241 Call 0x1B6FA1C
	242 Call 0x1B6FA1C
	243 Call 0x1B6FA1C
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Call 0x3D1A840
	246 Move X21, [X0]
	247 Call 0x3D1A850
	248 Move W22, W31
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Call 0x3D1A840
	251 Move X23, [X0]
	252 Call 0x3D1A850
	253 Move W28, W31
	254 Move X8, 0x2251000
	255 Move X8, [X8+3400]
	256 Add X0, X31, 96
	257 Move X1, [X8]
	258 Call Enumerator<Object>.Dispose, X0
	259 Move X20, [X31+272]
	260 Move X19, [X31+280]
	261 Move X22, [X31+256]
	262 Move X21, [X31+264]
	263 Move X24, [X31+240]
	264 Move X23, [X31+248]
	265 Move X26, [X31+224]
	266 Move X25, [X31+232]
	267 Move X28, [X31+208]
	268 Move X27, [X31+216]
	269 Move X29, [X31+192]
	270 Move X30, [X31+200]
	271 Add X31, X31, 288
	272 Return 
	273 Move X19, X1
	274 Move X20, X0
	275 Move X23, X31
	276 Move X1, [X25]
	277 Add X0, X31, 48
	278 Call Enumerator<Object>.Dispose, X0
	279 Move X0, X20
	280 Move X1, X19
	281 Compare X23, 0
	282 JumpIfEqual {311}
	283 Move X0, X23
	284 Call 0x1B6FA14
	285 Move X19, X1
	286 Move X20, X0
	287 Move X21, X31
	288 Move X1, [X25]
	289 Add X0, X31, 48
	290 Call Enumerator<Object>.Dispose, X0
	291 Move X0, X20
	292 Move X1, X19
	293 Compare X21, 0
	294 JumpIfEqual {311}
	295 Move X0, X21
	296 Call 0x1B6FA14
	297 Call 0x1B6FA1C
	298 Move X0, X23
	299 Call 0x1B6FA14
	300 Call 0x1B6FA1C
	301 Call 0x1B6FA1C
	302 Call 0x1B6FA1C
	303 Call 0x1B6FA1C
	304 Move X0, X21
	305 Call 0x1B6FA14
	306 Call 0x1B6FA1C
	307 Move X19, X1
	308 Move X20, X0
	309 Move X19, X1
	310 Move X20, X0
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Call 0x3D1A840
	313 Move X19, [X0]
	314 Call 0x3D1A850
	315 Move X8, 0x2251000
	316 Move X8, [X8+3400]
	317 Add X0, X31, 96
	318 Move X1, [X8]
	319 Call Enumerator<Object>.Dispose, X0
	320 Compare X19, 0
	321 JumpIfEqual {259}
	322 Move X0, X19
	323 Call 0x1B6FA14
	324 Move X20, X0
	325 Move X19, X31
	326 Move X20, X0
	327 Move X8, 0x2251000
	328 Move X8, [X8+3400]
	329 Move X1, [X8]
	330 Add X0, X31, 96
	331 Call Enumerator<Object>.Dispose, X0
	332 Compare X19, 0
	333 JumpIfNotEqual {336}
	334 Move X0, X20
	335 Call 0x1C8518C
	336 Move X0, X19
	337 Call 0x1B6FA14
	338 Call 0x18F56A8

Method: System.Boolean PickItems()

Disassembly:
	0x01D00AB4 LDR X0, [X0 + 0xD98]
	0x01D00AB8 BL 0x1B6E7F0
	0x01D00ABC ADRP X0, 0x2250000
	0x01D00AC0 LDR X0, [X0 + 0xEB8]
	0x01D00AC4 BL 0x1B6E7F0
	0x01D00AC8 ADRP X0, 0x2250000
	0x01D00ACC LDR X0, [X0 + 0xEC0]
	0x01D00AD0 BL 0x1B6E7F0
	0x01D00AD4 ADRP X0, 0x2250000
	0x01D00AD8 LDR X0, [X0 + 0xEC8]
	0x01D00ADC BL 0x1B6E7F0
	0x01D00AE0 ADRP X0, 0x2250000
	0x01D00AE4 LDR X0, [X0 + 0xED0]
	0x01D00AE8 BL 0x1B6E7F0
	0x01D00AEC ADRP X0, 0x2250000
	0x01D00AF0 LDR X0, [X0 + 0xED8]
	0x01D00AF4 BL 0x1B6E7F0
	0x01D00AF8 ADRP X0, 0x2250000
	0x01D00AFC LDR X0, [X0 + 0xEE0]
	0x01D00B00 BL 0x1B6E7F0
	0x01D00B04 ADRP X0, 0x2250000
	0x01D00B08 LDR X0, [X0 + 0xEE8]
	0x01D00B0C BL 0x1B6E7F0
	0x01D00B10 ADRP X0, 0x2250000
	0x01D00B14 LDR X0, [X0 + 0xEF0]
	0x01D00B18 BL 0x1B6E7F0
	0x01D00B1C ADRP X0, 0x2250000
	0x01D00B20 LDR X0, [X0 + 0xEF8]
	0x01D00B24 BL 0x1B6E7F0
	0x01D00B28 ADRP X0, 0x2250000
	0x01D00B2C LDR X0, [X0 + 0xF00]
	0x01D00B30 BL 0x1B6E7F0
	0x01D00B34 ADRP X0, 0x2250000
	0x01D00B38 LDR X0, [X0 + 0xBE8]
	0x01D00B3C BL 0x1B6E7F0
	0x01D00B40 ADRP X0, 0x2250000
	0x01D00B44 LDR X0, [X0 + 0xF08]
	0x01D00B48 BL 0x1B6E7F0
	0x01D00B4C ADRP X0, 0x2250000
	0x01D00B50 LDR X0, [X0 + 0xF10]
	0x01D00B54 BL 0x1B6E7F0
	0x01D00B58 ADRP X0, 0x2250000
	0x01D00B5C LDR X0, [X0 + 0x250]
	0x01D00B60 BL 0x1B6E7F0
	0x01D00B64 ADRP X0, 0x224F000
	0x01D00B68 LDR X0, [X0 + 0xB8]
	0x01D00B6C BL 0x1B6E7F0
	0x01D00B70 ADRP X0, 0x224D000
	0x01D00B74 LDR X0, [X0 + 0x478]
	0x01D00B78 BL 0x1B6E7F0
	0x01D00B7C MOVZ W8, 0x1
	0x01D00B80 STRB W8, [X20 + 0x72F]
	0x01D00B84 STP X31, X31, [X31 + 0x50]
	0x01D00B88 STR X31, [X31 + 0x60]
	0x01D00B8C STP X31, X31, [X31 + 0x30]
	0x01D00B90 STR X31, [X31 + 0x40]
	0x01D00B94 STR X31, [X31 + 0x28]
	0x01D00B98 LDR X0, [X19 + 0x18]
	0x01D00B9C CBZ X0, 0x1D00FEC
	0x01D00BA0 ADRP X8, 0x2250000
	0x01D00BA4 LDR X8, [X8 + 0xEF8]
	0x01D00BA8 LDR X1, [X8]
	0x01D00BAC BL 0x20D13DC
	0x01D00BB0 CBZ X0, 0x1D00FEC
	0x01D00BB4 ADRP X8, 0x2250000
	0x01D00BB8 LDR X8, [X8 + 0xF08]
	0x01D00BBC ADRP X28, 0x2250000
	0x01D00BC0 ADRP X27, 0x2250000
	0x01D00BC4 ADRP X29, 0x2250000
	0x01D00BC8 ADRP X26, 0x2250000
	0x01D00BCC LDR X28, [X28 + 0xEC8]
	0x01D00BD0 LDR X27, [X27 + 0xBE8]
	0x01D00BD4 LDR X29, [X29 + 0xD90]
	0x01D00BD8 LDR X26, [X26 + 0xD98]
	0x01D00BDC LDR X1, [X8]
	0x01D00BE0 ADD X8, X31, 0x10
	0x01D00BE4 BL 0x2E470E0
	0x01D00BE8 LDR V0, [X31 + 0x1]
	0x01D00BEC LDR X8, [X31 + 0x20]
	0x01D00BF0 STR V0, [X31 + 0x5]
	0x01D00BF4 STR X8, [X31 + 0x60]
	0x01D00BF8 ADRP X8, 0x2250000
	0x01D00BFC LDR X8, [X8 + 0xED0]
	0x01D00C00 LDR X1, [X8]
	0x01D00C04 ADD X0, X31, 0x50
	0x01D00C08 BL 0x2A14F30
	0x01D00C0C TBZ X0, 0x0, 0x1D00F7C
	0x01D00C10 LDR X20, [X31 + 0x60]
	0x01D00C14 CBZ X20, 0x1D00FE4
	0x01D00C18 LDR W23, [X20 + 0x30]
	0x01D00C1C CBZ W23, 0x1D00BF8
	0x01D00C20 LDR X0, [X19 + 0x18]
	0x01D00C24 CBZ X0, 0x1D00FE8
	0x01D00C28 ADRP X8, 0x2250000
	0x01D00C2C LDR X8, [X8 + 0xEF0]
	0x01D00C30 LDR X2, [X8]
	0x01D00C34 MOV X1, X20
	0x01D00C38 BL 0x20D1148
	0x01D00C3C CMP W23, 0x1
	0x01D00C40 B.LT 0x1D00BF8
	0x01D00C44 MOV X24, X0
	0x01D00C48 MOV W21, W31
	0x01D00C4C STR W23, [X31 + 0xC]
	0x01D00C50 STR X0, [X31]
	0x01D00C54 ADRP X8, 0x224D000
	0x01D00C58 LDR X8, [X8 + 0x478]
	0x01D00C5C LDR X22, [X20 + 0x28]
	0x01D00C60 LDR X0, [X8]
	0x01D00C64 LDR W8, [X0 + 0xE0]
	0x01D00C68 CBNZ W8, 0x1D00C70
	0x01D00C6C BL 0x1B6E8F8
	0x01D00C70 MOV X0, X22
	0x01D00C74 MOV X1, X31
	0x01D00C78 MOV X2, X31
	0x01D00C7C BL 0x3AA0AF0
	0x01D00C80 TBNZ X0, 0x0, 0x1D00E8C
	0x01D00C84 MOV X1, X24
	0x01D00C88 BL 0x1D01ED8
	0x01D00C8C CBZ X24, 0x1D00FD8
	0x01D00C90 ADRP X8, 0x2250000
	0x01D00C94 LDR X8, [X8 + 0xF10]
	0x01D00C98 LDR X1, [X8]
	0x01D00C9C ADD X8, X31, 0x10
	0x01D00CA0 MOV X0, X24
	0x01D00CA4 BL 0x2E470E0
	0x01D00CA8 LDR V0, [X31 + 0x1]
	0x01D00CAC LDR X8, [X31 + 0x20]
	0x01D00CB0 STR V0, [X31 + 0x3]
	0x01D00CB4 STR X8, [X31 + 0x40]
	0x01D00CB8 LDR X1, [X28]
	0x01D00CBC ADD X0, X31, 0x30
	0x01D00CC0 BL 0x2A14F30
	0x01D00CC4 TBZ X0, 0x0, 0x1D00E58
	0x01D00CC8 LDR X0, [X31 + 0x40]
	0x01D00CCC CBZ X0, 0x1D00E9C
	0x01D00CD0 MOV X1, X20
	0x01D00CD4 MOV X2, X31
	0x01D00CD8 BL 0x1CF7A0C
	0x01D00CDC LDR X1, [X27]
	0x01D00CE0 BL 0x1B6E8FC
	0x01D00CE4 MOV X23, X0
	0x01D00CE8 CBZ X0, 0x1D00CB8
	0x01D00CEC LDR X8, [X19 + 0x28]
	0x01D00CF0 CBZ X8, 0x1D00EAC
	0x01D00CF4 LDR X0, [X8 + 0x10]
	0x01D00CF8 CBZ X0, 0x1D00EA4
	0x01D00CFC LDR X2, [X29]
	0x01D00D00 MOV X1, X23
	0x01D00D04 BL 0x28FA49C
	0x01D00D08 TBZ X0, 0x0, 0x1D00CB8
	0x01D00D0C LDR X8, [X19 + 0x28]
	0x01D00D10 CBZ X8, 0x1D00EC4
	0x01D00D14 LDR X0, [X8 + 0x10]
	0x01D00D18 CBZ X0, 0x1D00EBC
	0x01D00D1C LDR X2, [X26]
	0x01D00D20 MOV X1, X23
	0x01D00D24 BL 0x28FA228
	0x01D00D28 MOV X8, X0
	0x01D00D2C CBZ X0, 0x1D00EB4
	0x01D00D30 LDR X9, [X8 + 0x28]
	0x01D00D34 CBZ X9, 0x1D00ECC
	0x01D00D38 LDR W9, [X9 + 0x18]
	0x01D00D3C CBZ W9, 0x1D00CB8
	0x01D00D40 ADD X23, X8, 0x38
	0x01D00D44 MOV X0, X23
	0x01D00D48 BL 0x1D02190
	0x01D00D4C ADRP X8, 0x224D000
	0x01D00D50 LDR X8, [X8 + 0x478]
	0x01D00D54 MOV X24, X0
	0x01D00D58 LDR X0, [X8]
	0x01D00D5C LDR W8, [X0 + 0xE0]
	0x01D00D60 CBNZ W8, 0x1D00D68
	0x01D00D64 BL 0x1B6E8F8
	0x01D00D68 ADRP X8, 0x224F000
	0x01D00D6C LDR X8, [X8 + 0xB8]
	0x01D00D70 LDR X1, [X8]
	0x01D00D74 MOV X0, X22
	0x01D00D78 BL 0x2114D24
	0x01D00D7C MOV X22, X0
	0x01D00D80 CBZ X0, 0x1D00ED4
	0x01D00D84 MOV X0, X22
	0x01D00D88 MOV X1, X31
	0x01D00D8C BL 0x3A9D8EC
	0x01D00D90 CBZ X24, 0x1D00EDC
	0x01D00D94 MOV X25, X0
	0x01D00D98 MOV X0, X24
	0x01D00D9C BL 0x1CFA068
	0x01D00DA0 CBZ X25, 0x1D00EE4
	0x01D00DA4 MOV X0, X25
	0x01D00DA8 MOV X1, X31
	0x01D00DAC BL 0x3AA76F8
	0x01D00DB0 MOV X0, X22
	0x01D00DB4 MOV X1, X31
	0x01D00DB8 BL 0x3A9D8EC
	0x01D00DBC CBZ X0, 0x1D00EEC
	0x01D00DC0 LDR X1, [X19 + 0x40]
	0x01D00DC4 MOV X2, X31
	0x01D00DC8 BL 0x3AA7DEC
	0x01D00DCC ADRP X8, 0x2250000
	0x01D00DD0 LDR X8, [X8 + 0xEE8]
	0x01D00DD4 LDR X2, [X8]
	0x01D00DD8 ADD X1, X31, 0x28
	0x01D00DDC MOV X0, X22
	0x01D00DE0 BL 0x20D02D0
	0x01D00DE4 TBZ X0, 0x0, 0x1D00E58
	0x01D00DE8 LDR X22, [X31 + 0x28]
	0x01D00DEC CBZ X22, 0x1D00EF4
	0x01D00DF0 LDR X8, [X22]
	0x01D00DF4 ADRP X10, 0x2250000
	0x01D00DF8 LDR W23, [X23]
	0x01D00DFC LDRH W9, [X8 + 0x12E]
	0x01D00E00 LDR X10, [X10 + 0xF00]
	0x01D00E04 LDR X1, [X10]
	0x01D00E08 CBZ X9, 0x1D00E2C
	0x01D00E0C LDR X10, [X8 + 0xB0]
	0x01D00E10 ADD X10, X10, 0x8
	0x01D00E14 LDUR X11, [X10 - 0x8]
	0x01D00E18 CMP X11, X1
	0x01D00E1C B.EQ 0x1D00E3C
	0x01D00E20 SUBS X9, X9, 0x1
	0x01D00E24 ADD X10, X10, 0x10
	0x01D00E28 B.NE 0x1D00E14
	0x01D00E2C MOV X0, X22
	0x01D00E30 MOV W2, W31
	0x01D00E34 BL 0x1BB4284
	0x01D00E38 B 0x1D00E48
	0x01D00E3C LDRSW X9, [X10]
	0x01D00E40 ADD X8, X8, X9, 0x4, LSL
	0x01D00E44 ADD X0, X8, 0x138
	0x01D00E48 LDP X8, X2, [X0]
	0x01D00E4C MOV X0, X22
	0x01D00E50 MOV W1, W23
	0x01D00E54 BLR X8
	0x01D00E58 MOV X24, X31
	0x01D00E5C MOVZ W22, 0x6
	0x01D00E60 ADRP X8, 0x2250000
	0x01D00E64 LDR X8, [X8 + 0xEC0]
	0x01D00E68 LDR X1, [X8]
	0x01D00E6C ADD X0, X31, 0x30
	0x01D00E70 BL 0x2A14F2C
	0x01D00E74 CBNZ X24, 0x1D00FDC
	0x01D00E78 LDR W23, [X31 + 0xC]
	0x01D00E7C LDR X24, [X31]
	0x01D00E80 CMP W22, 0x6
	0x01D00E84 B.EQ 0x1D00E8C
	0x01D00E88 CBNZ W22, 0x1D00F7C
	0x01D00E8C ADD W21, W21, 0x1
	0x01D00E90 CMP W21, W23
	0x01D00E94 B.NE 0x1D00C54
	0x01D00E98 B 0x1D00BF8
	0x01D00E9C BL 0x1B6EA1C
	0x01D00EA0 B 0x1D00FF0
	0x01D00EA4 BL 0x1B6EA1C
	0x01D00EA8 B 0x1D00FF0
	0x01D00EAC BL 0x1B6EA1C
	0x01D00EB0 B 0x1D00FF0
	0x01D00EB4 BL 0x1B6EA1C
	0x01D00EB8 B 0x1D00FF0
	0x01D00EBC BL 0x1B6EA1C
	0x01D00EC0 B 0x1D00FF0
	0x01D00EC4 BL 0x1B6EA1C
	0x01D00EC8 B 0x1D00FF0
	0x01D00ECC BL 0x1B6EA1C
	0x01D00ED0 B 0x1D00FF0
	0x01D00ED4 BL 0x1B6EA1C
	0x01D00ED8 B 0x1D00FF0
	0x01D00EDC BL 0x1B6EA1C
	0x01D00EE0 B 0x1D00FF0
	0x01D00EE4 BL 0x1B6EA1C
	0x01D00EE8 B 0x1D00FF0
	0x01D00EEC BL 0x1B6EA1C
	0x01D00EF0 B 0x1D00FF0
	0x01D00EF4 BL 0x1B6EA1C
	0x01D00EF8 B 0x1D00FF0
	0x01D00EFC B 0x1D00F54
	0x01D00F00 B 0x1D00F54
	0x01D00F04 B 0x1D00F54
	0x01D00F08 B 0x1D00F54
	0x01D00F0C B 0x1D00F54
	0x01D00F10 B 0x1D00F54
	0x01D00F14 B 0x1D00F54
	0x01D00F18 B 0x1D00F54
	0x01D00F1C B 0x1D00F54
	0x01D00F20 B 0x1D00F54
	0x01D00F24 B 0x1D00F54
	0x01D00F28 B 0x1D00F54
	0x01D00F2C B 0x1D00F54
	0x01D00F30 B 0x1D00F54
	0x01D00F34 B 0x1D00F54
	0x01D00F38 B 0x1D00F54
	0x01D00F3C B 0x1D00F54
	0x01D00F40 B 0x1D00F54
	0x01D00F44 B 0x1D00F54
	0x01D00F48 B 0x1D00F54
	0x01D00F4C B 0x1D00F54
	0x01D00F50 B 0x1D00F54
	0x01D00F54 MOV X22, X1
	0x01D00F58 MOV X23, X0
	0x01D00F5C CMP W22, 0x1
	0x01D00F60 B.NE 0x1D00FB4
	0x01D00F64 MOV X0, X23
	0x01D00F68 BL 0x3D19840
	0x01D00F6C LDR X24, [X0]
	0x01D00F70 BL 0x3D19850
	0x01D00F74 MOV W22, W31
	0x01D00F78 B 0x1D00E60
	0x01D00F7C ADRP X8, 0x2250000
	0x01D00F80 LDR X8, [X8 + 0xEB8]
	0x01D00F84 ADD X0, X31, 0x50
	0x01D00F88 LDR X1, [X8]
	0x01D00F8C BL 0x2A14F2C
	0x01D00F90 LDP X20, X19, [X31 + 0xC0]
	0x01D00F94 LDP X22, X21, [X31 + 0xB0]
	0x01D00F98 LDP X24, X23, [X31 + 0xA0]
	0x01D00F9C LDP X26, X25, [X31 + 0x90]
	0x01D00FA0 LDP X28, X27, [X31 + 0x80]
	0x01D00FA4 LDP X29, X30, [X31 + 0x70]
	0x01D00FA8 MOVZ W0, 0x1
	0x01D00FAC ADD X31, X31, 0xD0
	0x01D00FB0 RET
	0x01D00FB4 MOV X24, X31
	0x01D00FB8 ADRP X8, 0x2250000
	0x01D00FBC LDR X8, [X8 + 0xEC0]
	0x01D00FC0 LDR X1, [X8]
	0x01D00FC4 ADD X0, X31, 0x30
	0x01D00FC8 BL 0x2A14F2C
	0x01D00FCC CBZ X24, 0x1D0102C
	0x01D00FD0 MOV X0, X24
	0x01D00FD4 BL 0x1B6EA14
	0x01D00FD8 BL 0x1B6EA1C
	0x01D00FDC MOV X0, X24
	0x01D00FE0 BL 0x1B6EA14
	0x01D00FE4 BL 0x1B6EA1C
	0x01D00FE8 BL 0x1B6EA1C
	0x01D00FEC BL 0x1B6EA1C
	0x01D00FF0 MOV X22, X1
	0x01D00FF4 MOV X23, X0
	0x01D00FF8 B 0x1D00FB8
	0x01D00FFC B 0x1D01024
	0x01D01000 B 0x1D01024
	0x01D01004 B 0x1D01024
	0x01D01008 B 0x1D01024
	0x01D0100C B 0x1D01024
	0x01D01010 B 0x1D01024
	0x01D01014 B 0x1D01024
	0x01D01018 B 0x1D01024
	0x01D0101C B 0x1D01024
	0x01D01020 B 0x1D01024
	0x01D01024 MOV X22, X1
	0x01D01028 MOV X23, X0
	0x01D0102C CMP W22, 0x1
	0x01D01030 B.NE 0x1D01064
	0x01D01034 MOV X0, X23
	0x01D01038 BL 0x3D19840
	0x01D0103C LDR X19, [X0]
	0x01D01040 BL 0x3D19850
	0x01D01044 ADRP X8, 0x224F000
	0x01D01048 LDR X8, [X8 + 0xEB8]
	0x01D0104C ADD X0, X31, 0x50
	0x01D01050 LDR X1, [X8]
	0x01D01054 BL 0x2A14F2C
	0x01D01058 CBZ X19, 0x1D00F90
	0x01D0105C MOV X0, X19
	0x01D01060 BL 0x1B6EA14
	0x01D01064 MOV X19, X31
	0x01D01068 B 0x1D01070
	0x01D0106C MOV X23, X0
	0x01D01070 ADRP X8, 0x224F000
	0x01D01074 LDR X8, [X8 + 0xEB8]
	0x01D01078 LDR X1, [X8]
	0x01D0107C ADD X0, X31, 0x50
	0x01D01080 BL 0x2A14F2C
	0x01D01084 CBNZ X19, 0x1D01090
	0x01D01088 MOV X0, X23
	0x01D0108C BL 0x1C8418C
	0x01D01090 MOV X0, X19
	0x01D01094 BL 0x1B6EA14
	0x01D01098 BL 0x18F46A8
	0x01D0109C SUB X31, X31, 0xA0
	0x01D010A0 STR X30, [X31 + 0x40]
	0x01D010A4 STP X28, X27, [X31 + 0x50]
	0x01D010A8 STP X26, X25, [X31 + 0x60]
	0x01D010AC STP X24, X23, [X31 + 0x70]
	0x01D010B0 STP X22, X21, [X31 + 0x80]
	0x01D010B4 STP X20, X19, [X31 + 0x90]
	0x01D010B8 ADRP X28, 0x2522000
	0x01D010BC ADRP X27, 0x224F000
	0x01D010C0 ADRP X26, 0x224F000
	0x01D010C4 LDRB W8, [X28 + 0x733]
	0x01D010C8 LDR X27, [X27 + 0xF18]
	0x01D010CC LDR X26, [X26 + 0xF20]
	0x01D010D0 MOV X23, X6
	0x01D010D4 MOV X19, X5
	0x01D010D8 MOV W24, W4
	0x01D010DC MOV X21, X3
	0x01D010E0 MOV X22, X2
	0x01D010E4 MOV X25, X1
	0x01D010E8 MOV X20, X0
	0x01D010EC TBNZ X8, 0x0, 0x1D0117C
	0x01D010F0 ADRP X0, 0x224F000
	0x01D010F4 LDR X0, [X0 + 0xF28]
	0x01D010F8 BL 0x1B6E7F0
	0x01D010FC ADRP X0, 0x224F000
	0x01D01100 LDR X0, [X0 + 0xF30]
	0x01D01104 BL 0x1B6E7F0
	0x01D01108 ADRP X0, 0x224F000
	0x01D0110C LDR X0, [X0 + 0xF38]
	0x01D01110 BL 0x1B6E7F0
	0x01D01114 ADRP X0, 0x224F000
	0x01D01118 LDR X0, [X0 + 0xF40]
	0x01D0111C BL 0x1B6E7F0
	0x01D01120 ADRP X0, 0x224F000
	0x01D01124 LDR X0, [X0 + 0x850]
	0x01D01128 BL 0x1B6E7F0
	0x01D0112C ADRP X0, 0x224F000
	0x01D01130 LDR X0, [X0 + 0xBD0]
	0x01D01134 BL 0x1B6E7F0
	0x01D01138 ADRP X0, 0x224F000
	0x01D0113C LDR X0, [X0 + 0xF48]
	0x01D01140 BL 0x1B6E7F0
	0x01D01144 ADRP X0, 0x224F000
	0x01D01148 LDR X0, [X0 + 0xF50]
	0x01D0114C BL 0x1B6E7F0
	0x01D01150 ADRP X0, 0x224F000
	0x01D01154 LDR X0, [X0 + 0xF20]
	0x01D01158 BL 0x1B6E7F0
	0x01D0115C ADRP X0, 0x224F000
	0x01D01160 LDR X0, [X0 + 0xF18]
	0x01D01164 BL 0x1B6E7F0
	0x01D01168 ADRP X0, 0x224C000
	0x01D0116C LDR X0, [X0 + 0x478]
	0x01D01170 BL 0x1B6E7F0
	0x01D01174 MOVZ W8, 0x1
	0x01D01178 STRB W8, [X28 + 0x733]
	0x01D0117C LDR X0, [X27]
	0x01D01180 STP X31, X31, [X31 + 0x20]
	0x01D01184 STR X31, [X31 + 0x30]
	0x01D01188 BL 0x1B6EA0C
	0x01D0118C LDR X1, [X26]
	0x01D01190 MOV X26, X0
	0x01D01194 BL 0x2E45D4C
	0x01D01198 MOV X0, X20
	0x01D0119C MOV X1, X31
	0x01D011A0 STR X26, [X20 + 0x38]
	0x01D011A4 BL 0x32276F8
	0x01D011A8 STP X25, X22, [X20 + 0x10]
	0x01D011AC STR X21, [X20 + 0x20]
	0x01D011B0 STR W24, [X20 + 0x28]
	0x01D011B4 STR X19, [X20 + 0x30]
	0x01D011B8 STR X23, [X20 + 0x40]
	0x01D011BC CBZ X21, 0x1D011FC
	0x01D011C0 ADRP X8, 0x224F000
	0x01D011C4 LDR X8, [X8 + 0xF40]
	0x01D011C8 LDR X9, [X21]
	0x01D011CC LDR X8, [X8]
	0x01D011D0 LDRB W11, [X9 + 0x130]
	0x01D011D4 LDRB W10, [X8 + 0x130]
	0x01D011D8 CMP W11, W10
	0x01D011DC B.CS 0x1D011E8
	0x01D011E0 MOV X21, X31
	0x01D011E4 B 0x1D011FC
	0x01D011E8 LDR X9, [X9 + 0xC8]
	0x01D011EC ADD X9, X9, X10, 0x3, LSL
	0x01D011F0 LDUR X9, [X9 - 0x8]
	0x01D011F4 CMP X9, X8
	0x01D011F8 CSEL X21, X21, X31, EQ
	0x01D011FC CBZ X22, 0x1D01378
	0x01D01200 ADRP X8, 0x224F000
	0x01D01204 LDR X8, [X8 + 0xBD0]
	0x01D01208 MOV X0, X22
	0x01D0120C MOV X1, X21
	0x01D01210 LDR X2, [X8]
	0x01D01214 BL 0x20D1148
	0x01D01218 CBZ X0, 0x1D01378
	0x01D0121C ADRP X8, 0x224F000
	0x01D01220 LDR X8, [X8 + 0xF50]
	0x01D01224 ADRP X24, 0x224F000
	0x01D01228 ADRP X25, 0x224C000
	0x01D0122C LDR X24, [X24 + 0xF30]
	0x01D01230 LDR X25, [X25 + 0x478]
	0x01D01234 LDR X1, [X8]
	0x01D01238 ADRP X26, 0x224F000
	0x01D0123C ADRP X27, 0x224F000
	0x01D01240 ADRP X23, 0x224F000
	0x01D01244 LDR X26, [X26 + 0x850]
	0x01D01248 LDR X27, [X27 + 0xF48]
	0x01D0124C LDR X23, [X23 + 0xF28]
	0x01D01250 ADD X8, X31, 0x8
	0x01D01254 BL 0x2E470E0
	0x01D01258 LDUR V0, [X31 + 0x8]
	0x01D0125C LDR X8, [X31 + 0x18]
	0x01D01260 STR V0, [X31 + 0x2]
	0x01D01264 STR X8, [X31 + 0x30]
	0x01D01268 LDR X1, [X24]
	0x01D0126C ADD X0, X31, 0x20
	0x01D01270 BL 0x2A14F30
	0x01D01274 TBZ X0, 0x0, 0x1D01340
	0x01D01278 LDR X0, [X25]
	0x01D0127C LDR X22, [X31 + 0x30]
	0x01D01280 LDR W8, [X0 + 0xE0]
	0x01D01284 CBNZ W8, 0x1D0128C
	0x01D01288 BL 0x1B6E8F8
	0x01D0128C MOV X0, X22
	0x01D01290 MOV X1, X19
	0x01D01294 MOV X2, X31
	0x01D01298 BL 0x3AA0AF0
	0x01D0129C TBNZ X0, 0x0, 0x1D01268
	0x01D012A0 CBZ X22, 0x1D0136C
	0x01D012A4 MOV X0, X22
	0x01D012A8 MOV X1, X21
	0x01D012AC MOV X2, X31
	0x01D012B0 BL 0x1CF5DDC
	0x01D012B4 CBZ X0, 0x1D012E4
	0x01D012B8 LDR X9, [X0]
	0x01D012BC LDR X8, [X26]
	0x01D012C0 LDRB W11, [X9 + 0x130]
	0x01D012C4 LDRB W10, [X8 + 0x130]
	0x01D012C8 CMP W11, W10
	0x01D012CC B.CC 0x1D012E4
	0x01D012D0 LDR X9, [X9 + 0xC8]
	0x01D012D4 ADD X9, X9, X10, 0x3, LSL
	0x01D012D8 LDUR X9, [X9 - 0x8]
	0x01D012DC CMP X9, X8
	0x01D012E0 B.EQ 0x1D01268
	0x01D012E4 LDR X0, [X20 + 0x38]
	0x01D012E8 CBZ X0, 0x1D01374
	0x01D012EC LDR W10, [X0 + 0x1C]
	0x01D012F0 LDR X8, [X0 + 0x10]
	0x01D012F4 LDR X9, [X27]
	0x01D012F8 ADD W10, W10, 0x1
	0x01D012FC STR W10, [X0 + 0x1C]
	0x01D01300 CBZ X8, 0x1D01370
	0x01D01304 LDRSW X10, [X0 + 0x18]
	0x01D01308 LDR W11, [X8 + 0x18]
	0x01D0130C CMP W10, W11
	0x01D01310 B.CS 0x1D01328
	0x01D01314 ADD W9, W10, 0x1
	0x01D01318 ADD X8, X8, X10, 0x3, LSL
	0x01D0131C STR W9, [X0 + 0x18]
	0x01D01320 STR X22, [X8 + 0x20]
	0x01D01324 B 0x1D01268
	0x01D01328 LDR X8, [X9 + 0x20]
	0x01D0132C LDR X8, [X8 + 0xC0]
	0x01D01330 LDR X2, [X8 + 0x70]
	0x01D01334 MOV X1, X22
	0x01D01338 BL 0x2E46518
	0x01D0133C B 0x1D01268
	0x01D01340 LDR X1, [X23]
	0x01D01344 ADD X0, X31, 0x20
	0x01D01348 BL 0x2A14F2C
	0x01D0134C LDP X20, X19, [X31 + 0x90]
	0x01D01350 LDP X22, X21, [X31 + 0x80]
	0x01D01354 LDP X24, X23, [X31 + 0x70]
	0x01D01358 LDP X26, X25, [X31 + 0x60]
	0x01D0135C LDP X28, X27, [X31 + 0x50]
	0x01D01360 LDR X30, [X31 + 0x40]
	0x01D01364 ADD X31, X31, 0xA0
	0x01D01368 RET
	0x01D0136C BL 0x1B6EA1C
	0x01D01370 BL 0x1B6EA1C
	0x01D01374 BL 0x1B6EA1C
	0x01D01378 BL 0x1B6EA1C
	0x01D0137C B 0x1D01394
	0x01D01380 B 0x1D01394
	0x01D01384 B 0x1D01394
	0x01D01388 B 0x1D01394
	0x01D0138C B 0x1D01394
	0x01D01390 B 0x1D01394
	0x01D01394 MOV X19, X0
	0x01D01398 CMP W1, 0x1
	0x01D0139C B.NE 0x1D013C8
	0x01D013A0 MOV X0, X19
	0x01D013A4 BL 0x3D19840
	0x01D013A8 LDR X20, [X0]
	0x01D013AC BL 0x3D19850
	0x01D013B0 LDR X1, [X23]
	0x01D013B4 ADD X0, X31, 0x20
	0x01D013B8 BL 0x2A14F2C
	0x01D013BC CBZ X20, 0x1D0134C
	0x01D013C0 MOV X0, X20
	0x01D013C4 BL 0x1B6EA14
	0x01D013C8 MOV X20, X31
	0x01D013CC B 0x1D013D4
	0x01D013D0 MOV X19, X0
	0x01D013D4 LDR X1, [X23]
	0x01D013D8 ADD X0, X31, 0x20
	0x01D013DC BL 0x2A14F2C
	0x01D013E0 CBNZ X20, 0x1D013EC
	0x01D013E4 MOV X0, X19
	0x01D013E8 BL 0x1C8418C
	0x01D013EC MOV X0, X20
	0x01D013F0 BL 0x1B6EA14
	0x01D013F4 BL 0x18F46A8
	0x01D013F8 SUB X31, X31, 0x80
	0x01D013FC STP X29, X30, [X31 + 0x20]
	0x01D01400 STP X28, X27, [X31 + 0x30]
	0x01D01404 STP X26, X25, [X31 + 0x40]
	0x01D01408 STP X24, X23, [X31 + 0x50]
	0x01D0140C STP X22, X21, [X31 + 0x60]
	0x01D01410 STP X20, X19, [X31 + 0x70]
	0x01D01414 ADRP X21, 0x2522000
	0x01D01418 ADRP X20, 0x224F000
	0x01D0141C LDRB W8, [X21 + 0x734]
	0x01D01420 LDR X20, [X20 + 0xF58]
	0x01D01424 MOV X19, X0
	0x01D01428 TBNZ X8, 0x0, 0x1D01584
	0x01D0142C ADRP X0, 0x224F000
	0x01D01430 LDR X0, [X0 + 0x950]
	0x01D01434 BL 0x1B6E7F0
	0x01D01438 ADRP X0, 0x224F000
	0x01D0143C LDR X0, [X0 + 0xF60]
	0x01D01440 BL 0x1B6E7F0
	0x01D01444 ADRP X0, 0x224F000
	0x01D01448 LDR X0, [X0 + 0xF68]
	0x01D0144C BL 0x1B6E7F0
	0x01D01450 ADRP X0, 0x224F000
	0x01D01454 LDR X0, [X0 + 0xF40]
	0x01D01458 BL 0x1B6E7F0
	0x01D0145C ADRP X0, 0x224F000
	0x01D01460 LDR X0, [X0 + 0xF70]
	0x01D01464 BL 0x1B6E7F0
	0x01D01468 ADRP X0, 0x224F000
	0x01D0146C LDR X0, [X0 + 0xBE0]
	0x01D01470 BL 0x1B6E7F0
	0x01D01474 ADRP X0, 0x224F000
	0x01D01478 LDR X0, [X0 + 0xBE8]
	0x01D0147C BL 0x1B6E7F0
	0x01D01480 ADRP X0, 0x224F000
	0x01D01484 LDR X0, [X0 + 0x778]
	0x01D01488 BL 0x1B6E7F0
	0x01D0148C ADRP X0, 0x224F000
	0x01D01490 LDR X0, [X0 + 0xF78]
	0x01D01494 BL 0x1B6E7F0
	0x01D01498 ADRP X0, 0x224F000
	0x01D0149C LDR X0, [X0 + 0x780]
	0x01D014A0 BL 0x1B6E7F0
	0x01D014A4 ADRP X0, 0x224F000
	0x01D014A8 LDR X0, [X0 + 0xF48]
	0x01D014AC BL 0x1B6E7F0
	0x01D014B0 ADRP X0, 0x224F000
	0x01D014B4 LDR X0, [X0 + 0xF80]
	0x01D014B8 BL 0x1B6E7F0
	0x01D014BC ADRP X0, 0x224F000
	0x01D014C0 LDR X0, [X0 + 0xF88]
	0x01D014C4 BL 0x1B6E7F0
	0x01D014C8 ADRP X0, 0x224F000
	0x01D014CC LDR X0, [X0 + 0x7B8]
	0x01D014D0 BL 0x1B6E7F0
	0x01D014D4 ADRP X0, 0x224F000
	0x01D014D8 LDR X0, [X0 + 0xF90]
	0x01D014DC BL 0x1B6E7F0
	0x01D014E0 ADRP X0, 0x224F000
	0x01D014E4 LDR X0, [X0 + 0x7D8]
	0x01D014E8 BL 0x1B6E7F0
	0x01D014EC ADRP X0, 0x224F000
	0x01D014F0 LDR X0, [X0 + 0xBF8]
	0x01D014F4 BL 0x1B6E7F0
	0x01D014F8 ADRP X0, 0x224F000
	0x01D014FC LDR X0, [X0 + 0x7E0]
	0x01D01500 BL 0x1B6E7F0
	0x01D01504 ADRP X0, 0x224F000
	0x01D01508 LDR X0, [X0 + 0xC08]
	0x01D0150C BL 0x1B6E7F0
	0x01D01510 ADRP X0, 0x224F000
	0x01D01514 LDR X0, [X0 + 0xF98]
	0x01D01518 BL 0x1B6E7F0
	0x01D0151C ADRP X0, 0x224C000
	0x01D01520 LDR X0, [X0 + 0x628]
	0x01D01524 BL 0x1B6E7F0
	0x01D01528 ADRP X0, 0x224C000
	0x01D0152C LDR X0, [X0 + 0x478]
	0x01D01530 BL 0x1B6E7F0
	0x01D01534 ADRP X0, 0x224F000
	0x01D01538 LDR X0, [X0 + 0xFA0]
	0x01D0153C BL 0x1B6E7F0
	0x01D01540 ADRP X0, 0x224F000
	0x01D01544 LDR X0, [X0 + 0xF58]
	0x01D01548 BL 0x1B6E7F0
	0x01D0154C ADRP X0, 0x224F000
	0x01D01550 LDR X0, [X0 + 0xFA8]
	0x01D01554 BL 0x1B6E7F0
	0x01D01558 ADRP X0, 0x224F000
	0x01D0155C LDR X0, [X0 + 0xFB0]
	0x01D01560 BL 0x1B6E7F0
	0x01D01564 ADRP X0, 0x224F000
	0x01D01568 LDR X0, [X0 + 0xFB8]
	0x01D0156C BL 0x1B6E7F0
	0x01D01570 ADRP X0, 0x224F000
	0x01D01574 LDR X0, [X0 + 0xFC0]
	0x01D01578 BL 0x1B6E7F0
	0x01D0157C MOVZ W8, 0x1
	0x01D01580 STRB W8, [X21 + 0x734]
	0x01D01584 LDR X0, [X20]
	0x01D01588 ADRP X26, 0x224C000
	0x01D0158C ADRP X25, 0x224F000
	0x01D01590 ADRP X24, 0x224F000
	0x01D01594 LDR X26, [X26 + 0x628]
	0x01D01598 LDR X25, [X25 + 0xFB8]
	0x01D0159C LDR X24, [X24 + 0xFA8]
	0x01D015A0 BL 0x1B6EA0C
	0x01D015A4 MOV X1, X31
	0x01D015A8 MOV X22, X0
	0x01D015AC BL 0x32276F8
	0x01D015B0 LDR W8, [X19 + 0x28]
	0x01D015B4 CMP W8, 0x32
	0x01D015B8 B.GE 0x1D01614
	0x01D015BC LDR X20, [X19 + 0x20]
	0x01D015C0 CBZ X20, 0x1D01D68
	0x01D015C4 ADRP X10, 0x224F000
	0x01D015C8 LDR X8, [X20]
	0x01D015CC LDR X23, [X19 + 0x40]
	0x01D015D0 LDR X21, [X19 + 0x10]
	0x01D015D4 LDR X10, [X10 + 0xBE8]
	0x01D015D8 LDRH W9, [X8 + 0x12E]
	0x01D015DC LDR X1, [X10]
	0x01D015E0 CBZ X9, 0x1D01604
	0x01D015E4 LDR X10, [X8 + 0xB0]
	0x01D015E8 ADD X10, X10, 0x8
	0x01D015EC LDUR X11, [X10 - 0x8]
	0x01D015F0 CMP X11, X1
	0x01D015F4 B.EQ 0x1D01670
	0x01D015F8 SUBS X9, X9, 0x1
	0x01D015FC ADD X10, X10, 0x10
	0x01D01600 B.NE 0x1D015EC
	0x01D01604 MOV X0, X20
	0x01D01608 MOV W2, W31
	0x01D0160C BL 0x1BB4284
	0x01D01610 B 0x1D0167C
	0x01D01614 LDR X0, [X26]
	0x01D01618 ADRP X19, 0x224F000
	0x01D0161C LDR W8, [X0 + 0xE0]
	0x01D01620 LDR X19, [X19 + 0xFB0]
	0x01D01624 CBNZ W8, 0x1D0162C
	0x01D01628 BL 0x1B6E8F8
	0x01D0162C LDR X1, [X19]
	0x01D01630 LDR X3, [X25]
	0x01D01634 LDR X4, [X24]
	0x01D01638 MOVZ W0, 0x20
	0x01D0163C MOVZ W5, 0x3E
	0x01D01640 MOV X2, X31
	0x01D01644 MOV X6, X31
	0x01D01648 BL 0x342B7DC
	0x01D0164C MOV W0, W31
	0x01D01650 LDP X20, X19, [X31 + 0x70]
	0x01D01654 LDP X22, X21, [X31 + 0x60]
	0x01D01658 LDP X24, X23, [X31 + 0x50]
	0x01D0165C LDP X26, X25, [X31 + 0x40]
	0x01D01660 LDP X28, X27, [X31 + 0x30]
	0x01D01664 LDP X29, X30, [X31 + 0x20]
	0x01D01668 ADD X31, X31, 0x80
	0x01D0166C RET
	0x01D01670 LDRSW X9, [X10]
	0x01D01674 ADD X8, X8, X9, 0x4, LSL
	0x01D01678 ADD X0, X8, 0x138
	0x01D0167C LDP X9, X3, [X0]
	0x01D01680 ADD X8, X31, 0x0
	0x01D01684 MOV X0, X20
	0x01D01688 MOV X1, X23
	0x01D0168C MOV X2, X21
	0x01D01690 BLR X9
	0x01D01694 LDR X8, [X31]
	0x01D01698 LDR X21, [X31 + 0x18]
	0x01D0169C TBNZ X8, 0x0, 0x1D016F8
	0x01D016A0 CBZ X21, 0x1D01D68
	0x01D016A4 ADRP X20, 0x224C000
	0x01D016A8 LDR X20, [X20 + 0x478]
	0x01D016AC LDR X19, [X21 + 0x18]
	0x01D016B0 LDR X0, [X20]
	0x01D016B4 LDR W8, [X0 + 0xE0]
	0x01D016B8 CBNZ W8, 0x1D016C0
	0x01D016BC BL 0x1B6E8F8
	0x01D016C0 MOV X0, X19
	0x01D016C4 MOV X1, X31
	0x01D016C8 MOV X2, X31
	0x01D016CC BL 0x3A9D6EC
	0x01D016D0 TBZ X0, 0x0, 0x1D0164C
	0x01D016D4 LDR X0, [X20]
	0x01D016D8 LDR X19, [X21 + 0x18]
	0x01D016DC LDR W8, [X0 + 0xE0]
	0x01D016E0 CBNZ W8, 0x1D016E8
	0x01D016E4 BL 0x1B6E8F8
	0x01D016E8 MOV X0, X19
	0x01D016EC MOV X1, X31
	0x01D016F0 BL 0x3AA16B0
	0x01D016F4 B 0x1D0164C
	0x01D016F8 LDR X20, [X31 + 0x8]
	0x01D016FC CBZ X20, 0x1D01D68
	0x01D01700 LDR X8, [X19 + 0x38]
	0x01D01704 CBZ X8, 0x1D01D68
	0x01D01708 LDR W9, [X20 + 0x18]
	0x01D0170C LDR W8, [X8 + 0x18]
	0x01D01710 CMP W9, W8
	0x01D01714 B.GE 0x1D0179C
	0x01D01718 CBZ X21, 0x1D01D68
	0x01D0171C ADRP X20, 0x224C000
	0x01D01720 LDR X20, [X20 + 0x478]
	0x01D01724 LDR X19, [X21 + 0x18]
	0x01D01728 LDR X0, [X20]
	0x01D0172C LDR W8, [X0 + 0xE0]
	0x01D01730 CBNZ W8, 0x1D01738
	0x01D01734 BL 0x1B6E8F8
	0x01D01738 MOV X0, X19
	0x01D0173C MOV X1, X31
	0x01D01740 MOV X2, X31
	0x01D01744 BL 0x3A9D6EC
	0x01D01748 TBZ X0, 0x0, 0x1D0176C
	0x01D0174C LDR X0, [X20]
	0x01D01750 LDR X19, [X21 + 0x18]
	0x01D01754 LDR W8, [X0 + 0xE0]
	0x01D01758 CBNZ W8, 0x1D01760
	0x01D0175C BL 0x1B6E8F8
	0x01D01760 MOV X0, X19
	0x01D01764 MOV X1, X31
	0x01D01768 BL 0x3AA16B0
	0x01D0176C LDR X0, [X26]
	0x01D01770 LDR W8, [X0 + 0xE0]
	0x01D01774 CBNZ W8, 0x1D0177C
	0x01D01778 BL 0x1B6E8F8
	0x01D0177C ADRP X8, 0x224F000
	0x01D01780 LDR X8, [X8 + 0xFC0]
	0x01D01784 LDR X3, [X25]
	0x01D01788 LDR X4, [X24]
	0x01D0178C MOVZ W0, 0x20
	0x01D01790 LDR X1, [X8]
	0x01D01794 MOVZ W5, 0x51
	0x01D01798 B 0x1D01640
	0x01D0179C LDR X8, [X19 + 0x10]
	0x01D017A0 CBZ X8, 0x1D01D68
	0x01D017A4 LDR X0, [X8 + 0x30]
	0x01D017A8 CBZ X0, 0x1D01D68
	0x01D017AC ADRP X8, 0x224F000
	0x01D017B0 LDR X1, [X31 + 0x10]
	0x01D017B4 LDR X8, [X8 + 0x778]
	0x01D017B8 LDR X2, [X8]
	0x01D017BC BL 0x2D8DA88
	0x01D017C0 LDR X8, [X19 + 0x10]
	0x01D017C4 CBZ X8, 0x1D01D68
	0x01D017C8 LDR X8, [X8 + 0x28]
	0x01D017CC CBZ X8, 0x1D01D68
	0x01D017D0 LDR X0, [X8 + 0x10]
	0x01D017D4 CBZ X0, 0x1D01D68
	0x01D017D8 ADRP X8, 0x224F000
	0x01D017DC LDR X1, [X19 + 0x20]
	0x01D017E0 LDR X8, [X8 + 0xF60]
	0x01D017E4 MOV X2, X21
	0x01D017E8 LDR X3, [X8]
	0x01D017EC BL 0x28FA2A8
	0x01D017F0 LDR X0, [X19 + 0x30]
	0x01D017F4 CBZ X0, 0x1D01D68
	0x01D017F8 LDR X1, [X19 + 0x20]
	0x01D017FC CBZ X1, 0x1D01834
	0x01D01800 ADRP X8, 0x224F000
	0x01D01804 LDR X9, [X1]
	0x01D01808 LDR X8, [X8 + 0xF40]
	0x01D0180C LDRB W11, [X9 + 0x130]
	0x01D01810 LDR X8, [X8]
	0x01D01814 LDRB W10, [X8 + 0x130]
	0x01D01818 CMP W11, W10
	0x01D0181C B.CC 0x1D01D6C
	0x01D01820 LDR X9, [X9 + 0xC8]
	0x01D01824 ADD X9, X9, X10, 0x3, LSL
	0x01D01828 LDUR X9, [X9 - 0x8]
	0x01D0182C CMP X9, X8
	0x01D01830 B.NE 0x1D01D6C
	0x01D01834 MOV X2, X31
	0x01D01838 BL 0x1CF5DDC
	0x01D0183C LDR X8, [X19 + 0x30]
	0x01D01840 CBZ X8, 0x1D01D68
	0x01D01844 LDRB W8, [X8 + 0x28]
	0x01D01848 CBZ W8, 0x1D01940
	0x01D0184C CBZ X22, 0x1D01D68
	0x01D01850 CBZ X0, 0x1D0187C
	0x01D01854 ADRP X8, 0x224F000
	0x01D01858 LDR X8, [X8 + 0x950]
	0x01D0185C LDR X9, [X0]
	0x01D01860 LDR X8, [X8]
	0x01D01864 LDRB W11, [X9 + 0x130]
	0x01D01868 LDRB W10, [X8 + 0x130]
	0x01D0186C CMP W11, W10
	0x01D01870 B.CS 0x1D01884
	0x01D01874 MOV X8, X31
	0x01D01878 B 0x1D01898
	0x01D0187C STR X31, [X22 + 0x10]
	0x01D01880 B 0x1D01940
	0x01D01884 LDR X9, [X9 + 0xC8]
	0x01D01888 ADD X9, X9, X10, 0x3, LSL
	0x01D0188C LDUR X9, [X9 - 0x8]
	0x01D01890 CMP X9, X8
	0x01D01894 CSEL X8, X0, X31, EQ
	0x01D01898 STR X8, [X22 + 0x10]
	0x01D0189C CBZ X8, 0x1D01940
	0x01D018A0 LDR X8, [X19 + 0x10]
	0x01D018A4 CBZ X8, 0x1D01D68
	0x01D018A8 LDR X8, [X8 + 0x28]
	0x01D018AC CBZ X8, 0x1D01D68
	0x01D018B0 LDR X23, [X8 + 0x18]
	0x01D018B4 ADRP X8, 0x224F000
	0x01D018B8 LDR X8, [X8 + 0xF70]
	0x01D018BC LDR X0, [X8]
	0x01D018C0 BL 0x1B6EA0C
	0x01D018C4 ADRP X8, 0x224F000
	0x01D018C8 LDR X8, [X8 + 0xFA0]
	0x01D018CC MOV X1, X22
	0x01D018D0 MOV X3, X31
	0x01D018D4 MOV X24, X0
	0x01D018D8 LDR X2, [X8]
	0x01D018DC BL 0x2B796E4
	0x01D018E0 ADRP X8, 0x224F000
	0x01D018E4 LDR X8, [X8 + 0xF68]
	0x01D018E8 MOV X0, X23
	0x01D018EC MOV X1, X24
	0x01D018F0 LDR X2, [X8]
	0x01D018F4 BL 0x20AF86C
	0x01D018F8 CBZ X0, 0x1D01CC0
	0x01D018FC ADRP X9, 0x224F000
	0x01D01900 LDR X9, [X9 + 0xF80]
	0x01D01904 LDR W10, [X0 + 0x1C]
	0x01D01908 LDR X8, [X0 + 0x10]
	0x01D0190C LDR X9, [X9]
	0x01D01910 ADD W10, W10, 0x1
	0x01D01914 STR W10, [X0 + 0x1C]
	0x01D01918 CBZ X8, 0x1D01D68
	0x01D0191C LDRSW X10, [X0 + 0x18]
	0x01D01920 LDR W11, [X8 + 0x18]
	0x01D01924 CMP W10, W11
	0x01D01928 B.CS 0x1D01D40
	0x01D0192C ADD W9, W10, 0x1
	0x01D01930 ADD X8, X8, X10, 0x3, LSL
	0x01D01934 STR W9, [X0 + 0x18]
	0x01D01938 STR X21, [X8 + 0x20]
	0x01D0193C B 0x1D01A38
	0x01D01940 LDR X8, [X19 + 0x10]
	0x01D01944 CBZ X8, 0x1D01D68
	0x01D01948 LDR X8, [X8 + 0x28]
	0x01D0194C CBZ X8, 0x1D01D68
	0x01D01950 LDR X22, [X8 + 0x18]
	0x01D01954 ADRP X8, 0x224F000
	0x01D01958 LDR X8, [X8 + 0xF98]
	0x01D0195C LDR X0, [X8]
	0x01D01960 BL 0x1B6EA0C
	0x01D01964 ADRP X8, 0x224F000
	0x01D01968 LDR X8, [X8 + 0xF90]
	0x01D0196C MOV X23, X0
	0x01D01970 LDR X1, [X8]
	0x01D01974 BL 0x2E45D4C
	0x01D01978 CBZ X23, 0x1D01D68
	0x01D0197C ADRP X9, 0x224F000
	0x01D01980 LDR X9, [X9 + 0xF80]
	0x01D01984 LDR W10, [X23 + 0x1C]
	0x01D01988 LDR X8, [X23 + 0x10]
	0x01D0198C LDR X9, [X9]
	0x01D01990 ADD W10, W10, 0x1
	0x01D01994 STR W10, [X23 + 0x1C]
	0x01D01998 CBZ X8, 0x1D01D68
	0x01D0199C LDRSW X10, [X23 + 0x18]
	0x01D019A0 LDR W11, [X8 + 0x18]
	0x01D019A4 CMP W10, W11
	0x01D019A8 B.CS 0x1D019C0
	0x01D019AC ADD W9, W10, 0x1
	0x01D019B0 ADD X8, X8, X10, 0x3, LSL
	0x01D019B4 STR W9, [X23 + 0x18]
	0x01D019B8 STR X21, [X8 + 0x20]
	0x01D019BC B 0x1D019D8
	0x01D019C0 LDR X8, [X9 + 0x20]
	0x01D019C4 MOV X0, X23
	0x01D019C8 MOV X1, X21
	0x01D019CC LDR X8, [X8 + 0xC0]
	0x01D019D0 LDR X2, [X8 + 0x70]
	0x01D019D4 BL 0x2E46518
	0x01D019D8 CBZ X22, 0x1D01D68
	0x01D019DC ADRP X9, 0x224F000
	0x01D019E0 LDR X9, [X9 + 0xF78]
	0x01D019E4 LDR W10, [X22 + 0x1C]
	0x01D019E8 LDR X8, [X22 + 0x10]
	0x01D019EC LDR X9, [X9]
	0x01D019F0 ADD W10, W10, 0x1
	0x01D019F4 STR W10, [X22 + 0x1C]
	0x01D019F8 CBZ X8, 0x1D01D68
	0x01D019FC LDRSW X10, [X22 + 0x18]
	0x01D01A00 LDR W11, [X8 + 0x18]
	0x01D01A04 CMP W10, W11
	0x01D01A08 B.CS 0x1D01A20
	0x01D01A0C ADD W9, W10, 0x1
	0x01D01A10 ADD X8, X8, X10, 0x3, LSL
	0x01D01A14 STR W9, [X22 + 0x18]
	0x01D01A18 STR X23, [X8 + 0x20]
	0x01D01A1C B 0x1D01A38
	0x01D01A20 LDR X8, [X9 + 0x20]
	0x01D01A24 MOV X0, X22
	0x01D01A28 MOV X1, X23
	0x01D01A2C LDR X8, [X8 + 0xC0]
	0x01D01A30 LDR X2, [X8 + 0x70]
	0x01D01A34 BL 0x2E46518
	0x01D01A38 LDR X0, [X19 + 0x38]
	0x01D01A3C CBZ X0, 0x1D01D68
	0x01D01A40 LDR W8, [X0 + 0x18]
	0x01D01A44 CBZ W8, 0x1D01CA0
	0x01D01A48 CMP W8, 0x1
	0x01D01A4C B.LT 0x1D01CA0
	0x01D01A50 ADRP X29, 0x224F000
	0x01D01A54 ADRP X28, 0x224F000
	0x01D01A58 LDR X29, [X29 + 0x7B8]
	0x01D01A5C LDR X28, [X28 + 0xBE0]
	0x01D01A60 ADRP X8, 0x224F000
	0x01D01A64 LDR X8, [X8 + 0xC08]
	0x01D01A68 MOV W1, W31
	0x01D01A6C LDR X2, [X8]
	0x01D01A70 BL 0x2E46254
	0x01D01A74 LDR X8, [X19 + 0x38]

ISIL:
	001 Subtract X31, X31, 384
	002 Move [X31+256], D11
	003 Move [X31+264], D10
	004 Move [X31+272], D9
	005 Move [X31+280], D8
	006 Move [X31+288], X29
	007 Move [X31+296], X30
	008 Move [X31+304], X28
	009 Move [X31+312], X27
	010 Move [X31+320], X26
	011 Move [X31+328], X25
	012 Move [X31+336], X24
	013 Move [X31+344], X23
	014 Move [X31+352], X22
	015 Move [X31+360], X21
	016 Move [X31+368], X20
	017 Move [X31+376], X19
	018 Move X19, 0x2524000
	019 Move W8, [X19+1838]
	020 Move [X31+24], X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {186}
	025 Move X0, 0x2251000
	026 Move X0, [X0+3472]
	027 Call 0x1B6F7F0
	028 Move X0, 0x2251000
	029 Move X0, [X0+3480]
	030 Call 0x1B6F7F0
	031 Move X0, 0x2251000
	032 Move X0, [X0+3488]
	033 Call 0x1B6F7F0
	034 Move X0, 0x2251000
	035 Move X0, [X0+3240]
	036 Call 0x1B6F7F0
	037 Move X0, 0x2251000
	038 Move X0, [X0+3496]
	039 Call 0x1B6F7F0
	040 Move X0, 0x2251000
	041 Move X0, [X0+3256]
	042 Call 0x1B6F7F0
	043 Move X0, 0x2251000
	044 Move X0, [X0+3504]
	045 Call 0x1B6F7F0
	046 Move X0, 0x2251000
	047 Move X0, [X0+3512]
	048 Call 0x1B6F7F0
	049 Move X0, 0x2251000
	050 Move X0, [X0+3520]
	051 Call 0x1B6F7F0
	052 Move X0, 0x2251000
	053 Move X0, [X0+3528]
	054 Call 0x1B6F7F0
	055 Move X0, 0x224F000
	056 Move X0, [X0+3336]
	057 Call 0x1B6F7F0
	058 Move X0, 0x2251000
	059 Move X0, [X0+3264]
	060 Call 0x1B6F7F0
	061 Move X0, 0x2251000
	062 Move X0, [X0+3536]
	063 Call 0x1B6F7F0
	064 Move X0, 0x2251000
	065 Move X0, [X0+3544]
	066 Call 0x1B6F7F0
	067 Move X0, 0x224F000
	068 Move X0, [X0+3344]
	069 Call 0x1B6F7F0
	070 Move X0, 0x2251000
	071 Move X0, [X0+3552]
	072 Call 0x1B6F7F0
	073 Move X0, 0x2251000
	074 Move X0, [X0+3560]
	075 Call 0x1B6F7F0
	076 Move X0, 0x2251000
	077 Move X0, [X0+3568]
	078 Call 0x1B6F7F0
	079 Move X0, 0x224F000
	080 Move X0, [X0+3352]
	081 Call 0x1B6F7F0
	082 Move X0, 0x2251000
	083 Move X0, [X0+3576]
	084 Call 0x1B6F7F0
	085 Move X0, 0x2251000
	086 Move X0, [X0+3584]
	087 Call 0x1B6F7F0
	088 Move X0, 0x2251000
	089 Move X0, [X0+3272]
	090 Call 0x1B6F7F0
	091 Move X0, 0x2251000
	092 Move X0, [X0+3592]
	093 Call 0x1B6F7F0
	094 Move X0, 0x2251000
	095 Move X0, [X0+3600]
	096 Call 0x1B6F7F0
	097 Move X0, 0x2251000
	098 Move X0, [X0+3608]
	099 Call 0x1B6F7F0
	100 Move X0, 0x2251000
	101 Move X0, [X0+3616]
	102 Call 0x1B6F7F0
	103 Move X0, 0x224E000
	104 Move X0, [X0+2272]
	105 Call 0x1B6F7F0
	106 Move X0, 0x2251000
	107 Move X0, [X0+3624]
	108 Call 0x1B6F7F0
	109 Move X0, 0x2251000
	110 Move X0, [X0+3632]
	111 Call 0x1B6F7F0
	112 Move X0, 0x2251000
	113 Move X0, [X0+3048]
	114 Call 0x1B6F7F0
	115 Move X0, 0x224E000
	116 Move X0, [X0+1528]
	117 Call 0x1B6F7F0
	118 Move X0, 0x2251000
	119 Move X0, [X0+3640]
	120 Call 0x1B6F7F0
	121 Move X0, 0x2251000
	122 Move X0, [X0+2448]
	123 Call 0x1B6F7F0
	124 Move X0, 0x2251000
	125 Move X0, [X0+3648]
	126 Call 0x1B6F7F0
	127 Move X0, 0x2251000
	128 Move X0, [X0+3296]
	129 Call 0x1B6F7F0
	130 Move X0, 0x2251000
	131 Move X0, [X0+3656]
	132 Call 0x1B6F7F0
	133 Move X0, 0x2251000
	134 Move X0, [X0+3664]
	135 Call 0x1B6F7F0
	136 Move X0, 0x2251000
	137 Move X0, [X0+3672]
	138 Call 0x1B6F7F0
	139 Move X0, 0x2251000
	140 Move X0, [X0+3680]
	141 Call 0x1B6F7F0
	142 Move X0, 0x224F000
	143 Move X0, [X0+3360]
	144 Call 0x1B6F7F0
	145 Move X0, 0x2251000
	146 Move X0, [X0+2440]
	147 Call 0x1B6F7F0
	148 Move X0, 0x2251000
	149 Move X0, [X0+3688]
	150 Call 0x1B6F7F0
	151 Move X0, 0x2251000
	152 Move X0, [X0+3696]
	153 Call 0x1B6F7F0
	154 Move X0, 0x224F000
	155 Move X0, [X0+3320]
	156 Call 0x1B6F7F0
	157 Move X0, 0x2251000
	158 Move X0, [X0+3704]
	159 Call 0x1B6F7F0
	160 Move X0, 0x2251000
	161 Move X0, [X0+2432]
	162 Call 0x1B6F7F0
	163 Move X0, 0x2251000
	164 Move X0, [X0+3712]
	165 Call 0x1B6F7F0
	166 Move X0, 0x2251000
	167 Move X0, [X0+3720]
	168 Call 0x1B6F7F0
	169 Move X0, 0x2251000
	170 Move X0, [X0+3728]
	171 Call 0x1B6F7F0
	172 Move X0, 0x2251000
	173 Move X0, [X0+3736]
	174 Call 0x1B6F7F0
	175 Move X0, 0x2251000
	176 Move X0, [X0+3744]
	177 Call 0x1B6F7F0
	178 Move X0, 0x2251000
	179 Move X0, [X0+3752]
	180 Call 0x1B6F7F0
	181 Move X0, 0x2251000
	182 Move X0, [X0+3760]
	183 Call 0x1B6F7F0
	184 Move W8, 1
	185 Move [X19+1838], W8
	186 Move X8, [X31+24]
	187 NotImplemented "Instruction MOVI not yet implemented."
	188 Move [X31+224], X31
	189 Move [X31+232], X31
	190 Move [X31+240], X31
	191 Move [X31+192], X31
	192 Move [X31+200], X31
	193 Move [X31+208], X31
	194 Move [X31+160], X31
	195 Move [X31+168], X31
	196 Move [X31+176], X31
	197 Move [X31+64], X31
	198 Move [X31+72], X31
	199 Move [X31+128], V0
	200 Move [X31+136], V0
	201 Move [X31+96], V0
	202 Move [X31+104], V0
	203 Move [X31+80], X31
	204 Move X0, [X8+24]
	205 Compare X0, 0
	206 JumpIfEqual {950}
	207 Move X8, 0x2251000
	208 Move X8, [X8+3632]
	209 Move X1, [X8]
	210 Call 0x20D23DC, X0
	211 Compare X0, 0
	212 JumpIfEqual {950}
	213 Move X8, 0x2251000
	214 Move X8, [X8+3656]
	215 Move X29, 0x224F000
	216 Move X20, 0x2251000
	217 Move X29, [X29+3344]
	218 Move X20, [X20+2448]
	219 Move X1, [X8]
	220 Move X19, 0x2251000
	221 Move X19, [X19+3264]
	222 Add X8, X31, 32
	223 Call List`1<Object>.GetEnumerator, X0
	224 Move V0, [X31+2]
	225 Move X8, [X31+48]
	226 Move [X31+14], V0
	227 Move [X31+240], X8
	228 Move X8, 0x2251000
	229 Move X8, [X8+3544]
	230 Move X1, [X8]
	231 Add X0, X31, 224
	232 Call Enumerator<Object>.MoveNext, X0
	233 Move TEMP, X0
	234 And TEMP, TEMP, 1
	235 Compare TEMP, 1
	236 JumpIfNotEqual {875}
	237 Move X21, [X31+240]
	238 Compare X21, 0
	239 JumpIfEqual {935}
	240 Move W23, [X21+32]
	241 Compare W23, 0
	242 JumpIfEqual {228}
	243 Move X8, 0x2251000
	244 Move X8, [X8+3704]
	245 Move X0, [X8]
	246 Call 0x1B6FA0C
	247 Move X8, 0x2251000
	248 Move X8, [X8+3696]
	249 Move X22, X0
	250 Move X1, [X8]
	251 Call List`1<ValueTuple`2<Int32, Object>>..ctor, X0
	252 Move X8, [X31+24]
	253 Move X0, [X8+24]
	254 Compare X0, 0
	255 JumpIfEqual {937}
	256 Move X8, 0x2251000
	257 Move X8, [X8+3624]
	258 Move X2, [X8]
	259 Move X1, X21
	260 Call 0x20D2148, X0, X1
	261 Compare X0, 0
	262 JumpIfEqual {936}
	263 Move [X31+20], W23
	264 Move X8, 0x2251000
	265 Move X8, [X8+3664]
	266 Move X1, [X8]
	267 Add X8, X31, 32
	268 Call List`1<Object>.GetEnumerator, X0
	269 Move V0, [X31+2]
	270 Move X8, [X31+48]
	271 Move [X31+12], V0
	272 Move [X31+208], X8
	273 Move X8, 0x2251000
	274 Move X8, [X8+3560]
	275 Move X1, [X8]
	276 Add X0, X31, 192
	277 Call Enumerator<Object>.MoveNext, X0
	278 Move TEMP, X0
	279 And TEMP, TEMP, 1
	280 Compare TEMP, 1
	281 JumpIfNotEqual {422}
	282 Move X23, [X31+208]
	283 Compare X23, 0
	284 JumpIfEqual {828}
	285 Move X0, X23
	286 Move X1, X21
	287 Move X2, X31
	288 Call LootPlacementConnection.GetOtherNode, X0, X1
	289 Move X8, 0x2251000
	290 Move X8, [X8+3048]
	291 Move X1, [X8]
	292 Call 0x1B6F8FC
	293 Move X24, X0
	294 Compare X0, 0
	295 JumpIfEqual {273}
	296 Move X8, [X31+24]
	297 Move X8, [X8+40]
	298 Compare X8, 0
	299 JumpIfEqual {840}
	300 Move X0, [X8+16]
	301 Compare X0, 0
	302 JumpIfEqual {839}
	303 Move X8, 0x2251000
	304 Move X8, [X8+3472]
	305 Move X2, [X8]
	306 Move X1, X24
	307 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	308 Move TEMP, X0
	309 And TEMP, TEMP, 1
	310 Compare TEMP, 1
	311 JumpIfNotEqual {273}
	312 Move X8, [X31+24]
	313 Move X8, [X8+40]
	314 Compare X8, 0
	315 JumpIfEqual {843}
	316 Move X0, [X8+16]
	317 Compare X0, 0
	318 JumpIfEqual {842}
	319 Move X8, 0x2251000
	320 Move X8, [X8+3480]
	321 Move X2, [X8]
	322 Move X1, X24
	323 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	324 Compare X0, 0
	325 JumpIfEqual {841}
	326 Move X24, [X0+48]
	327 Compare X24, 0
	328 JumpIfEqual {844}
	329 Move W8, [X24+24]
	330 Compare W8, 0
	331 JumpIfEqual {273}
	332 Move X8, 0x2251000
	333 Move X8, [X8+3736]
	334 Move X8, [X8]
	335 Move W9, [X8+224]
	336 Compare W9, 0
	337 JumpIfNotEqual {343}
	338 Move X0, X8
	339 Call 0x1B6F8F8
	340 Move X8, 0x2251000
	341 Move X8, [X8+3736]
	342 Move X8, [X8]
	343 Move X9, [X8+184]
	344 Move X25, [X9+8]
	345 Compare X25, 0
	346 JumpIfNotEqual {373}
	347 Move W9, [X8+224]
	348 Compare W9, 0
	349 JumpIfNotEqual {355}
	350 Move X0, X8
	351 Call 0x1B6F8F8
	352 Move X8, 0x2251000
	353 Move X8, [X8+3736]
	354 Move X8, [X8]
	355 Move X8, [X8+184]
	356 Move X26, [X8]
	357 Move X8, 0x2251000
	358 Move X8, [X8+3608]
	359 Move X0, [X8]
	360 Call 0x1B6FA0C
	361 Move X8, 0x2251000
	362 Move X8, [X8+3728]
	363 Move X25, X0
	364 Move X2, [X8]
	365 Move X1, X26
	366 Move X3, X31
	367 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	368 Move X8, 0x2251000
	369 Move X8, [X8+3736]
	370 Move X8, [X8]
	371 Move X8, [X8+184]
	372 Move [X8+8], X25
	373 Move X8, 0x2251000
	374 Move X8, [X8+3496]
	375 Move X2, [X8]
	376 Move X0, X24
	377 Move X1, X25
	378 Call Enumerable.Where, X0, X1
	379 Move X8, 0x2251000
	380 Move X8, [X8+3240]
	381 Move X1, [X8]
	382 Call Enumerable.ToList, X0
	383 Move X2, X0
	384 Compare X0, 0
	385 JumpIfEqual {845}
	386 Move W8, [X2+24]
	387 NotImplemented "Instruction CMP not yet implemented."
	388 Move X8, 0x2250000
	389 Move W1, [X23+40]
	390 Move X8, [X8+3744]
	391 Move [X31+32], X31
	392 Move [X31+40], X31
	393 Move X3, [X8]
	394 Add X0, X31, 32
	395 Call ValueTuple`2<Int32, Object>..ctor, X0, X1, X2
	396 Compare X22, 0
	397 JumpIfEqual {846}
	398 Move X9, 0x2250000
	399 Move X1, [X31+32]
	400 Move X2, [X31+40]
	401 Move W10, [X22+28]
	402 Move X8, [X22+16]
	403 Move X9, [X9+3648]
	404 Add W10, W10, 1
	405 Move X9, [X9]
	406 Move [X22+28], W10
	407 Compare X8, 0
	408 JumpIfEqual {847}
	409 NotImplemented "Instruction LDRSW not yet implemented."
	410 Move W11, [X8+24]
	411 NotImplemented "Instruction CMP not yet implemented."
	412 Add W9, W10, 1
	413 Add X8, X8, X10
	414 Move [X22+24], W9
	415 Move [X8+32], X1
	416 Move [X8+40], X2
	417 Move X8, [X9+32]
	418 Move X8, [X8+192]
	419 Move X3, [X8+112]
	420 Move X0, X22
	421 Call List`1<ValueTuple`2<Int32, Object>>.AddWithResize, X0, X1
	422 Move X23, X31
	423 Move W24, 7
	424 Move X8, 0x2250000
	425 Move X8, [X8+3512]
	426 Move X1, [X8]
	427 Add X0, X31, 192
	428 Call Enumerator<Object>.Dispose, X0
	429 Compare X23, 0
	430 JumpIfNotEqual {938}
	431 NotImplemented "Instruction CMP not yet implemented."
	432 Compare W24, 0
	433 JumpIfNotEqual {875}
	434 Move X8, 0x2250000
	435 Move X8, [X8+3736]
	436 Move X0, [X8]
	437 Move W8, [X0+224]
	438 Compare W8, 0
	439 JumpIfNotEqual {444}
	440 Call 0x1B6F8F8
	441 Move X8, 0x2250000
	442 Move X8, [X8+3736]
	443 Move X0, [X8]
	444 Move X8, [X0+184]
	445 Move X23, [X8+16]
	446 Compare X23, 0
	447 JumpIfNotEqual {473}
	448 Move W8, [X0+224]
	449 Compare W8, 0
	450 JumpIfNotEqual {455}
	451 Call 0x1B6F8F8
	452 Move X8, 0x2250000
	453 Move X8, [X8+3736]
	454 Move X0, [X8]
	455 Move X8, [X0+184]
	456 Move X24, [X8]
	457 Move X8, 0x2250000
	458 Move X8, [X8+3600]
	459 Move X0, [X8]
	460 Call 0x1B6FA0C
	461 Move X8, 0x2250000
	462 Move X8, [X8+3720]
	463 Move X23, X0
	464 Move X2, [X8]
	465 Move X1, X24
	466 Move X3, X31
	467 Call Func`2<ValueTuple`2<Int32, Object>, Int32>..ctor, X0, X1, X2
	468 Move X8, 0x2250000
	469 Move X8, [X8+3736]
	470 Move X8, [X8]
	471 Move X8, [X8+184]
	472 Move [X8+16], X23
	473 Move X8, 0x2250000
	474 Move X8, [X8+3488]
	475 Move X2, [X8]
	476 Move X0, X22
	477 Move X1, X23
	478 Call Enumerable.Sum, X0, X1
	479 Move X8, 0x2250000
	480 Move X8, [X8+2432]
	481 Move W23, W0
	482 Move X0, [X8]
	483 Call 0x1B6FA0C
	484 Move X8, 0x2250000
	485 Move X8, [X8+2440]
	486 Move X24, X0
	487 Move X1, [X8]
	488 Call List`1<WeightedItem>..ctor, X0
	489 Move X0, [X21+40]
	490 Compare X0, 0
	491 JumpIfEqual {940}
	492 Move X8, 0x2250000
	493 Move X8, [X8+3672]
	494 Move X1, [X8]
	495 Add X8, X31, 32
	496 Call List`1<Object>.GetEnumerator, X0
	497 Move V0, [X31+2]
	498 Move X8, [X31+48]
	499 Move S8, W31
	500 Move [X31+10], V0
	501 Move [X31+176], X8
	502 Move X8, 0x2250000
	503 Move X8, [X8+3552]
	504 Move X1, [X8]
	505 Add X0, X31, 160
	506 Call Enumerator<Object>.MoveNext, X0
	507 Move TEMP, X0
	508 And TEMP, TEMP, 1
	509 Compare TEMP, 1
	510 JumpIfNotEqual {586}
	511 Move X8, [X31+176]
	512 Compare X8, 0
	513 JumpIfEqual {831}
	514 Move X0, [X8+24]
	515 Compare X0, 0
	516 JumpIfEqual {832}
	517 Move X8, 0x224E000
	518 Move X8, [X8+3360]
	519 Move X1, [X8]
	520 Add X8, X31, 32
	521 Call List`1<WeightedItem>.GetEnumerator, X0
	522 Move V0, [X31+32]
	523 Move V1, [X31+48]
	524 Move V9, V8
	525 Move [X31+128], V0
	526 Move [X31+136], V1
	527 Move X1, [X29]
	528 Add X0, X31, 128
	529 Call Enumerator<WeightedItem>.MoveNext, X0
	530 Move TEMP, X0
	531 And TEMP, TEMP, 1
	532 Compare TEMP, 1
	533 JumpIfNotEqual {561}
	534 Compare X24, 0
	535 JumpIfEqual {574}
	536 Move W10, [X24+28]
	537 Move X1, [X31+144]
	538 Move X25, [X31+152]
	539 Move X8, [X24+16]
	540 Move X9, [X20]
	541 Add W10, W10, 1
	542 Move [X24+28], W10
	543 Compare X8, 0
	544 JumpIfEqual {575}
	545 NotImplemented "Instruction LDRSW not yet implemented."
	546 Move W11, [X8+24]
	547 NotImplemented "Instruction CMP not yet implemented."
	548 Add W9, W10, 1
	549 Add X8, X8, X10
	550 Move [X24+24], W9
	551 Move [X8+32], X1
	552 Move [X8+40], X25
	553 Move X8, [X9+32]
	554 Move X8, [X8+192]
	555 Move X3, [X8+112]
	556 Move X0, X24
	557 Move X2, X25
	558 Call List`1<WeightedItem>.AddWithResize, X0, X1
	559 Move S0, W25
	560 Add S9, S9, S0
	561 Move X27, X31
	562 Move W25, 9
	563 Move X8, 0x224E000
	564 Move X8, [X8+3336]
	565 Move V8, V9
	566 Move X1, [X8]
	567 Add X0, X31, 128
	568 Call Enumerator<WeightedItem>.Dispose, X0
	569 Compare X27, 0
	570 JumpIfNotEqual {829}
	571 NotImplemented "Instruction CMP not yet implemented."
	572 Compare W25, 0
	573 JumpIfEqual {502}
	574 Call 0x1B6FA1C
	575 Move V8, V9
	576 Call 0x1B6FA1C
	577 Move X25, X0
	578 Move X25, X0
	579 Move V9, V8
	580 NotImplemented "Instruction CMP not yet implemented."
	581 Move X0, X25
	582 Call 0x3D1A840
	583 Move X27, [X0]
	584 Call 0x3D1A850
	585 Move W25, W31
	586 Move X27, X31
	587 Move W25, 13
	588 Move X27, X31
	589 Move X8, 0x2250000
	590 Move X8, [X8+3528]
	591 Move X1, [X8]
	592 Add X0, X31, 160
	593 Call Enumerator<Object>.Dispose, X0
	594 Compare X27, 0
	595 JumpIfNotEqual {941}
	596 NotImplemented "Instruction CMP not yet implemented."
	597 Compare W25, 0
	598 JumpIfNotEqual {875}
	599 Move X8, 0x2250000
	600 Move X8, [X8+3712]
	601 Move X0, [X8]
	602 Call 0x1B6FA0C
	603 Move X8, 0x2250000
	604 Move X8, [X8+3688]
	605 Move X27, X0
	606 Move X1, [X8]
	607 Call List`1<Object>..ctor, X0
	608 Move X8, 0x2523000
	609 Move W8, [X8+1087]
	610 Compare W8, 0
	611 JumpIfNotEqual {618}
	612 Move X0, 0x224D000
	613 Move X0, [X0+1152]
	614 Call 0x1B6F7F0
	615 Move X8, 0x2523000
	616 Move W9, 1
	617 Move [X8+1087], W9
	618 Compare X22, 0
	619 JumpIfEqual {943}
	620 Move X8, 0x224D000
	621 Move X8, [X8+1152]
	622 Move X8, [X8]
	623 Move X8, [X8+184]
	624 Move S11, [X8]
	625 Move S10, [X8+4]
	626 Move V9, [X8+8]
	627 Move X8, 0x2250000
	628 Move X8, [X8+3680]
	629 Move X1, [X8]
	630 Add X8, X31, 32
	631 Move X0, X22
	632 Call List`1<ValueTuple`2<Int32, Object>>.GetEnumerator, X0
	633 Move V0, [X31+32]
	634 Move V1, [X31+48]
	635 Move W26, W31
	636 Move [X31+96], V0
	637 Move [X31+104], V1
	638 Move X8, 0x2250000
	639 Move X8, [X8+3536]
	640 Move X1, [X8]
	641 Add X0, X31, 96
	642 Call Enumerator<ValueTuple`2<Int32, Object>>.MoveNext, X0
	643 Move TEMP, X0
	644 And TEMP, TEMP, 1
	645 Compare TEMP, 1
	646 JumpIfNotEqual {731}
	647 Move X8, 0x2250000
	648 Move W28, [X31+112]
	649 Move X25, [X31+120]
	650 Move X8, [X8+3752]
	651 Move X0, [X8]
	652 Call 0x1B6FA0C
	653 Move X22, X0
	654 Move X1, X31
	655 Call WeightedConnectionItemPoints..ctor, X0
	656 Compare X22, 0
	657 JumpIfEqual {833}
	658 Move [X22+16], W28
	659 Move [X22+24], X25
	660 Compare X25, 0
	661 JumpIfEqual {834}
	662 Move X8, 0x2250000
	663 Move X8, [X8+3296]
	664 Move X1, [X8]
	665 Add X8, X31, 32
	666 Move X0, X25
	667 Call List`1<Object>.GetEnumerator, X0
	668 Move V0, [X31+2]
	669 Move X8, [X31+48]
	670 Move [X31+4], V0
	671 Move [X31+80], X8
	672 Move X1, [X19]
	673 Add X0, X31, 64
	674 Call Enumerator<Object>.MoveNext, X0
	675 Move TEMP, X0
	676 And TEMP, TEMP, 1
	677 Compare TEMP, 1
	678 JumpIfNotEqual {687}
	679 Move X0, [X31+80]
	680 Compare X0, 0
	681 JumpIfEqual {723}
	682 Call ItemPoint.GetCenterPosition, X0
	683 Add S11, S11, S0
	684 Add S10, S10, S1
	685 Add S9, S9, S2
	686 Add W26, W26, 1
	687 Move X28, X31
	688 Move W25, 18
	689 Move X8, 0x2250000
	690 Move X8, [X8+3256]
	691 Move X1, [X8]
	692 Add X0, X31, 64
	693 Call Enumerator<Object>.Dispose, X0
	694 Compare X28, 0
	695 JumpIfNotEqual {835}
	696 Compare W25, 0
	697 JumpIfEqual {699}
	698 NotImplemented "Instruction CMP not yet implemented."
	699 Compare X27, 0
	700 JumpIfEqual {838}
	701 Move X9, 0x2250000
	702 Move W10, [X27+28]
	703 Move X8, [X27+16]
	704 Move X9, [X9+3640]
	705 Add W10, W10, 1
	706 Move X9, [X9]
	707 Move [X27+28], W10
	708 Compare X8, 0
	709 JumpIfEqual {837}
	710 NotImplemented "Instruction LDRSW not yet implemented."
	711 Move W11, [X8+24]
	712 NotImplemented "Instruction CMP not yet implemented."
	713 Add W9, W10, 1
	714 Add X8, X8, X10
	715 Move [X27+24], W9
	716 Move [X8+32], X22
	717 Move X8, [X9+32]
	718 Move X8, [X8+192]
	719 Move X2, [X8+112]
	720 Move X0, X27
	721 Move X1, X22
	722 Call List`1<Object>.AddWithResize, X0, X1
	723 Call 0x1B6FA1C
	724 Move X25, X0
	725 NotImplemented "Instruction CMP not yet implemented."
	726 Move X0, X25
	727 Call 0x3D1A840
	728 Move X28, [X0]
	729 Call 0x3D1A850
	730 Move W25, W31
	731 Move X22, X31
	732 Move W25, 19
	733 Move X22, X31
	734 Move X8, 0x2250000
	735 Move X8, [X8+3504]
	736 Move X1, [X8]
	737 Add X0, X31, 96
	738 Call Enumerator<ValueTuple`2<Int32, Object>>.Dispose, X0
	739 Compare X22, 0
	740 JumpIfNotEqual {944}
	741 NotImplemented "Instruction CMP not yet implemented."
	742 Compare W25, 0
	743 JumpIfNotEqual {875}
	744 Move X0, X21
	745 Move X1, X31
	746 Call Object.get_name, X0
	747 Move X9, 0x224D000
	748 Move W8, [X21+32]
	749 Move X9, [X9+1528]
	750 Move X22, X0
	751 Move [X31+32], W8
	752 Move X0, [X9]
	753 Add X1, X31, 32
	754 Call 0x1B6F900
	755 Move X8, 0x2250000
	756 Move X8, [X8+3760]
	757 Move X2, X0
	758 Move X0, [X8]
	759 Move X1, X22
	760 Move X3, X31
	761 Call String.Format, X0, X1, X2
	762 Move X8, 0x224D000
	763 Move X8, [X8+2272]
	764 Move X22, X0
	765 Move X0, [X8]
	766 Call 0x1B6FA0C
	767 Move X21, X0
	768 Move X1, X22
	769 Move X2, X31
	770 Call GameObject..ctor, X0, X1
	771 Compare X21, 0
	772 JumpIfEqual {948}
	773 Move X0, X21
	774 Move X1, X31
	775 Call GameObject.get_transform, X0
	776 Compare X0, 0
	777 JumpIfEqual {947}
	778 Move X8, [X31+24]
	779 Move X1, [X8+72]
	780 Move X2, X31
	781 Call Transform.set_parent, X0, X1
	782 NotImplemented "Instruction CMP not yet implemented."
	783 Move X0, X21
	784 Move X1, X31
	785 Call GameObject.get_transform, X0
	786 Compare X0, 0
	787 JumpIfEqual {949}
	788 NotImplemented "Instruction SCVTF not yet implemented."
	789 NotImplemented "Instruction FDIV not yet implemented."
	790 NotImplemented "Instruction FDIV not yet implemented."
	791 NotImplemented "Instruction FDIV not yet implemented."
	792 Move X1, X31
	793 Call Transform.set_position, X0, X1
	794 Move X8, 0x2250000
	795 Move X8, [X8+3616]
	796 Move X1, [X8]
	797 Move X0, X21
	798 Call 0x20CFE08, X0
	799 Compare X0, 0
	800 JumpIfEqual {946}
	801 Move W8, [X31+20]
	802 Move [X0+40], X27
	803 Move [X0+48], W23
	804 Move [X0+56], X24
	805 NotImplemented "Instruction SCVTF not yet implemented."
	806 Move [X0+32], S0
	807 Move [X0+64], S8
	808 Move X26, X1
	809 Move X27, X31
	810 Move X8, 0x224E000
	811 Move X8, [X8+3336]
	812 Move X1, [X8]
	813 Add X0, X31, 128
	814 Call Enumerator<WeightedItem>.Dispose, X0
	815 Move X1, X26
	816 Compare X27, 0
	817 JumpIfEqual {854}
	818 Move X22, X1
	819 Move X28, X31
	820 Move X8, 0x2250000
	821 Move X8, [X8+3256]
	822 Move X1, [X8]
	823 Add X0, X31, 64
	824 Call Enumerator<Object>.Dispose, X0
	825 Move X1, X22
	826 Compare X28, 0
	827 JumpIfEqual {862}
	828 Call 0x1B6FA1C
	829 Move X0, X27
	830 Call 0x1B6FA14
	831 Call 0x1B6FA1C
	832 Call 0x1B6FA1C
	833 Call 0x1B6FA1C
	834 Call 0x1B6FA1C
	835 Move X0, X28
	836 Call 0x1B6FA14
	837 Call 0x1B6FA1C
	838 Call 0x1B6FA1C
	839 Call 0x1B6FA1C
	840 Call 0x1B6FA1C
	841 Call 0x1B6FA1C
	842 Call 0x1B6FA1C
	843 Call 0x1B6FA1C
	844 Call 0x1B6FA1C
	845 Call 0x1B6FA1C
	846 Call 0x1B6FA1C
	847 Call 0x1B6FA1C
	848 Move X22, X1
	849 Move X25, X0
	850 Move X26, X1
	851 Move X25, X0
	852 Move X25, X0
	853 Move V9, V8
	854 NotImplemented "Instruction CMP not yet implemented."
	855 Move X0, X25
	856 Call 0x3D1A840
	857 Move X27, [X0]
	858 Call 0x3D1A850
	859 Move W25, W31
	860 Move V8, V9
	861 Move X25, X0
	862 NotImplemented "Instruction CMP not yet implemented."
	863 Move X0, X25
	864 Call 0x3D1A840
	865 Move X22, [X0]
	866 Call 0x3D1A850
	867 Move W25, W31
	868 Move X25, X0
	869 NotImplemented "Instruction CMP not yet implemented."
	870 Move X0, X25
	871 Call 0x3D1A840
	872 Move X23, [X0]
	873 Call 0x3D1A850
	874 Move W24, W31
	875 Move X8, 0x2250000
	876 Move X8, [X8+3520]
	877 Add X0, X31, 224
	878 Move X1, [X8]
	879 Call Enumerator<Object>.Dispose, X0
	880 Move X20, [X31+368]
	881 Move X19, [X31+376]
	882 Move X22, [X31+352]
	883 Move X21, [X31+360]
	884 Move X24, [X31+336]
	885 Move X23, [X31+344]
	886 Move X26, [X31+320]
	887 Move X25, [X31+328]
	888 Move X28, [X31+304]
	889 Move X27, [X31+312]
	890 Move X29, [X31+288]
	891 Move X30, [X31+296]
	892 Move D9, [X31+272]
	893 Move D8, [X31+280]
	894 Move D11, [X31+256]
	895 Move D10, [X31+264]
	896 Move W0, 1
	897 Add X31, X31, 384
	898 Return X0
	899 Move X19, X1
	900 Move X23, X31
	901 Move X8, 0x2250000
	902 Move X8, [X8+3512]
	903 Move X1, [X8]
	904 Add X0, X31, 192
	905 Call Enumerator<Object>.Dispose, X0
	906 Move X1, X19
	907 Compare X23, 0
	908 JumpIfEqual {963}
	909 Move X0, X23
	910 Call 0x1B6FA14
	911 Move X19, X1
	912 Move X22, X31
	913 Move X8, 0x2250000
	914 Move X8, [X8+3504]
	915 Move X1, [X8]
	916 Add X0, X31, 96
	917 Call Enumerator<ValueTuple`2<Int32, Object>>.Dispose, X0
	918 Move X1, X19
	919 Compare X22, 0
	920 JumpIfEqual {963}
	921 Move X0, X22
	922 Call 0x1B6FA14
	923 Move X19, X1
	924 Move X27, X31
	925 Move X8, 0x2250000
	926 Move X8, [X8+3528]
	927 Move X1, [X8]
	928 Add X0, X31, 160
	929 Call Enumerator<Object>.Dispose, X0
	930 Move X1, X19
	931 Compare X27, 0
	932 JumpIfEqual {963}
	933 Move X0, X27
	934 Call 0x1B6FA14
	935 Call 0x1B6FA1C
	936 Call 0x1B6FA1C
	937 Call 0x1B6FA1C
	938 Move X0, X23
	939 Call 0x1B6FA14
	940 Call 0x1B6FA1C
	941 Move X0, X27
	942 Call 0x1B6FA14
	943 Call 0x1B6FA1C
	944 Move X0, X22
	945 Call 0x1B6FA14
	946 Call 0x1B6FA1C
	947 Call 0x1B6FA1C
	948 Call 0x1B6FA1C
	949 Call 0x1B6FA1C
	950 Call 0x1B6FA1C
	951 Move X0, X27
	952 Call 0x1B6FA14
	953 Move X0, X28
	954 Call 0x1B6FA14
	955 Call 0x18F56A8
	956 Move X19, X1
	957 Move X25, X0
	958 Move X19, X1
	959 Move X25, X0
	960 Move X19, X1
	961 Move X25, X0
	962 Move X25, X0
	963 NotImplemented "Instruction CMP not yet implemented."
	964 Move X0, X25
	965 Call 0x3D1A840
	966 Move X19, [X0]
	967 Call 0x3D1A850
	968 Move X8, 0x2250000
	969 Move X8, [X8+3520]
	970 Add X0, X31, 224
	971 Move X1, [X8]
	972 Call Enumerator<Object>.Dispose, X0
	973 Compare X19, 0
	974 JumpIfEqual {880}
	975 Move X0, X19
	976 Call 0x1B6FA14
	977 Move X19, X31
	978 Move X25, X0
	979 Move X8, 0x2250000
	980 Move X8, [X8+3520]
	981 Move X1, [X8]
	982 Add X0, X31, 224
	983 Call Enumerator<Object>.Dispose, X0
	984 Compare X19, 0
	985 JumpIfNotEqual {988}
	986 Move X0, X25
	987 Call 0x1C8518C
	988 Move X0, X19
	989 Call 0x1B6FA14
	990 Call 0x18F56A8

Method: System.Boolean PickMobs()

Disassembly:
	0x01D01A78 CBZ X8, 0x1D01D68
	0x01D01A7C ADRP X9, 0x224F000
	0x01D01A80 LDR X9, [X9 + 0xF88]
	0x01D01A84 MOV X21, X0
	0x01D01A88 MOV X0, X8
	0x01D01A8C MOV W1, W31
	0x01D01A90 LDR X2, [X9]
	0x01D01A94 BL 0x2E47FD0
	0x01D01A98 LDR X8, [X19 + 0x20]
	0x01D01A9C CBZ X8, 0x1D01AC0
	0x01D01AA0 ADRP X9, 0x224F000
	0x01D01AA4 LDR X10, [X8]
	0x01D01AA8 LDR X9, [X9 + 0xF40]
	0x01D01AAC LDRB W12, [X10 + 0x130]
	0x01D01AB0 LDR X9, [X9]
	0x01D01AB4 LDRB W11, [X9 + 0x130]
	0x01D01AB8 CMP W12, W11
	0x01D01ABC B.CS 0x1D01ACC
	0x01D01AC0 MOV X22, X31
	0x01D01AC4 CBNZ X21, 0x1D01AE4
	0x01D01AC8 B 0x1D01D68
	0x01D01ACC LDR X10, [X10 + 0xC8]
	0x01D01AD0 ADD X10, X10, X11, 0x3, LSL
	0x01D01AD4 LDUR X10, [X10 - 0x8]
	0x01D01AD8 CMP X10, X9
	0x01D01ADC CSEL X22, X8, X31, EQ
	0x01D01AE0 CBZ X21, 0x1D01D68
	0x01D01AE4 ADRP X8, 0x224C000
	0x01D01AE8 LDR X8, [X8 + 0x478]
	0x01D01AEC LDR X23, [X21 + 0x20]
	0x01D01AF0 LDR X0, [X8]
	0x01D01AF4 LDR W8, [X0 + 0xE0]
	0x01D01AF8 CBNZ W8, 0x1D01B00
	0x01D01AFC BL 0x1B6E8F8
	0x01D01B00 MOV X0, X23
	0x01D01B04 MOV X1, X22
	0x01D01B08 MOV X2, X31
	0x01D01B0C BL 0x3AA0AF0
	0x01D01B10 ANDS W31, W0, 0x1
	0x01D01B14 MOVZ W8, 0x20
	0x01D01B18 MOVZ W9, 0x18
	0x01D01B1C CSEL X8, X9, X8, NE
	0x01D01B20 LDR X0, [X21, X8, LSL]
	0x01D01B24 ADRP X8, 0x224F000
	0x01D01B28 LDR X8, [X8 + 0xBE8]
	0x01D01B2C LDR X1, [X8]
	0x01D01B30 BL 0x1B6E8FC
	0x01D01B34 LDR W1, [X20 + 0x18]
	0x01D01B38 MOV X24, X0
	0x01D01B3C MOV W0, W31
	0x01D01B40 MOV X2, X31
	0x01D01B44 BL 0x3A98D10
	0x01D01B48 ADRP X8, 0x224F000
	0x01D01B4C LDR X8, [X8 + 0x7E0]
	0x01D01B50 MOV W1, W0
	0x01D01B54 MOV X0, X20
	0x01D01B58 LDR X2, [X8]
	0x01D01B5C BL 0x2E46254
	0x01D01B60 LDR X2, [X29]
	0x01D01B64 MOV X22, X0
	0x01D01B68 MOV X0, X20
	0x01D01B6C MOV X1, X22
	0x01D01B70 BL 0x2E47D30
	0x01D01B74 LDR X0, [X28]
	0x01D01B78 LDP X25, X26, [X19 + 0x10]
	0x01D01B7C LDR W27, [X19 + 0x28]
	0x01D01B80 BL 0x1B6EA0C
	0x01D01B84 ADD W4, W27, 0x1
	0x01D01B88 MOV X1, X25
	0x01D01B8C MOV X2, X26
	0x01D01B90 MOV X3, X24
	0x01D01B94 MOV X5, X21
	0x01D01B98 MOV X6, X22
	0x01D01B9C MOV X23, X0
	0x01D01BA0 BL 0x1D0109C
	0x01D01BA4 CBZ X23, 0x1D01D68
	0x01D01BA8 MOV X0, X23
	0x01D01BAC BL 0x1D013F8
	0x01D01BB0 TBNZ X0, 0x0, 0x1D01C8C
	0x01D01BB4 LDR X8, [X19 + 0x10]
	0x01D01BB8 CBZ X8, 0x1D01D68
	0x01D01BBC LDP W9, W10, [X8 + 0x20]
	0x01D01BC0 ADD W9, W9, 0x1
	0x01D01BC4 CMP W9, W10
	0x01D01BC8 STR W9, [X8 + 0x20]
	0x01D01BCC B.GE 0x1D01CA8
	0x01D01BD0 LDR X0, [X19 + 0x38]
	0x01D01BD4 CBZ X0, 0x1D01D68
	0x01D01BD8 ADRP X9, 0x224F000
	0x01D01BDC LDR W10, [X0 + 0x1C]
	0x01D01BE0 LDR X8, [X0 + 0x10]
	0x01D01BE4 LDR X9, [X9 + 0xF48]
	0x01D01BE8 ADD W10, W10, 0x1
	0x01D01BEC LDR X9, [X9]
	0x01D01BF0 STR W10, [X0 + 0x1C]
	0x01D01BF4 CBZ X8, 0x1D01D68
	0x01D01BF8 LDRSW X10, [X0 + 0x18]
	0x01D01BFC LDR W11, [X8 + 0x18]
	0x01D01C00 CMP W10, W11
	0x01D01C04 B.CS 0x1D01C1C
	0x01D01C08 ADD W9, W10, 0x1
	0x01D01C0C ADD X8, X8, X10, 0x3, LSL
	0x01D01C10 STR W9, [X0 + 0x18]
	0x01D01C14 STR X21, [X8 + 0x20]
	0x01D01C18 B 0x1D01C30
	0x01D01C1C LDR X8, [X9 + 0x20]
	0x01D01C20 MOV X1, X21
	0x01D01C24 LDR X8, [X8 + 0xC0]
	0x01D01C28 LDR X2, [X8 + 0x70]
	0x01D01C2C BL 0x2E46518
	0x01D01C30 ADRP X9, 0x224F000
	0x01D01C34 LDR W10, [X20 + 0x1C]
	0x01D01C38 LDR X8, [X20 + 0x10]
	0x01D01C3C LDR X9, [X9 + 0x780]
	0x01D01C40 ADD W10, W10, 0x1
	0x01D01C44 LDR X9, [X9]
	0x01D01C48 STR W10, [X20 + 0x1C]
	0x01D01C4C CBZ X8, 0x1D01D68
	0x01D01C50 LDRSW X10, [X20 + 0x18]
	0x01D01C54 LDR W11, [X8 + 0x18]
	0x01D01C58 CMP W10, W11
	0x01D01C5C B.CS 0x1D01C74
	0x01D01C60 ADD W9, W10, 0x1
	0x01D01C64 ADD X8, X8, X10, 0x3, LSL
	0x01D01C68 STR W9, [X20 + 0x18]
	0x01D01C6C STR X22, [X8 + 0x20]
	0x01D01C70 B 0x1D01C8C
	0x01D01C74 LDR X8, [X9 + 0x20]
	0x01D01C78 MOV X0, X20
	0x01D01C7C MOV X1, X22
	0x01D01C80 LDR X8, [X8 + 0xC0]
	0x01D01C84 LDR X2, [X8 + 0x70]
	0x01D01C88 BL 0x2E46518
	0x01D01C8C LDR X0, [X19 + 0x38]
	0x01D01C90 CBZ X0, 0x1D01D68
	0x01D01C94 LDR W8, [X0 + 0x18]
	0x01D01C98 CMP W8, 0x0
	0x01D01C9C B.GT 0x1D01A60
	0x01D01CA0 MOVZ W0, 0x1
	0x01D01CA4 B 0x1D01650
	0x01D01CA8 LDR X8, [X8 + 0x18]
	0x01D01CAC CBZ X8, 0x1D01D68
	0x01D01CB0 LDRB W8, [X8 + 0x28]
	0x01D01CB4 CMP W8, 0x0
	0x01D01CB8 CSET W0, EQ
	0x01D01CBC B 0x1D01650
	0x01D01CC0 LDR X8, [X19 + 0x10]
	0x01D01CC4 CBZ X8, 0x1D01D68
	0x01D01CC8 LDR X8, [X8 + 0x28]
	0x01D01CCC CBZ X8, 0x1D01D68
	0x01D01CD0 LDR X22, [X8 + 0x18]
	0x01D01CD4 ADRP X8, 0x224F000
	0x01D01CD8 LDR X8, [X8 + 0xF98]
	0x01D01CDC LDR X0, [X8]
	0x01D01CE0 BL 0x1B6EA0C
	0x01D01CE4 ADRP X8, 0x224F000
	0x01D01CE8 LDR X8, [X8 + 0xF90]
	0x01D01CEC MOV X23, X0
	0x01D01CF0 LDR X1, [X8]
	0x01D01CF4 BL 0x2E45D4C
	0x01D01CF8 CBZ X23, 0x1D01D68
	0x01D01CFC ADRP X9, 0x224F000
	0x01D01D00 LDR X9, [X9 + 0xF80]
	0x01D01D04 LDR W10, [X23 + 0x1C]
	0x01D01D08 LDR X8, [X23 + 0x10]
	0x01D01D0C LDR X9, [X9]
	0x01D01D10 ADD W10, W10, 0x1
	0x01D01D14 STR W10, [X23 + 0x1C]
	0x01D01D18 CBZ X8, 0x1D01D68
	0x01D01D1C LDRSW X10, [X23 + 0x18]
	0x01D01D20 LDR W11, [X8 + 0x18]
	0x01D01D24 CMP W10, W11
	0x01D01D28 B.CS 0x1D01D4C
	0x01D01D2C ADD W9, W10, 0x1
	0x01D01D30 ADD X8, X8, X10, 0x3, LSL
	0x01D01D34 STR W9, [X23 + 0x18]
	0x01D01D38 STR X21, [X8 + 0x20]
	0x01D01D3C B 0x1D01D64
	0x01D01D40 LDR X8, [X9 + 0x20]
	0x01D01D44 MOV X1, X21
	0x01D01D48 B 0x1D01A2C
	0x01D01D4C LDR X8, [X9 + 0x20]
	0x01D01D50 MOV X0, X23
	0x01D01D54 MOV X1, X21
	0x01D01D58 LDR X8, [X8 + 0xC0]
	0x01D01D5C LDR X2, [X8 + 0x70]
	0x01D01D60 BL 0x2E46518
	0x01D01D64 CBNZ X22, 0x1D019DC
	0x01D01D68 BL 0x1B6EA1C
	0x01D01D6C MOV X0, X1
	0x01D01D70 MOV X1, X8
	0x01D01D74 BL 0x1B6ECDC
	0x01D01D78 STR X30, [X31 - 0x40]!
	0x01D01D7C STP X24, X23, [X31 + 0x10]
	0x01D01D80 STP X22, X21, [X31 + 0x20]
	0x01D01D84 STP X20, X19, [X31 + 0x30]
	0x01D01D88 ADRP X24, 0x2522000
	0x01D01D8C ADRP X23, 0x224F000
	0x01D01D90 ADRP X22, 0x224F000
	0x01D01D94 LDRB W8, [X24 + 0x73C]
	0x01D01D98 LDR X23, [X23 + 0x2D8]
	0x01D01D9C LDR X22, [X22 + 0x2E0]
	0x01D01DA0 MOV W21, W2
	0x01D01DA4 MOV X20, X1
	0x01D01DA8 MOV X19, X0
	0x01D01DAC TBNZ X8, 0x0, 0x1D01DE8
	0x01D01DB0 ADRP X0, 0x224F000
	0x01D01DB4 LDR X0, [X0 + 0x240]
	0x01D01DB8 BL 0x1B6E7F0
	0x01D01DBC ADRP X0, 0x224F000
	0x01D01DC0 LDR X0, [X0 + 0xD88]
	0x01D01DC4 BL 0x1B6E7F0
	0x01D01DC8 ADRP X0, 0x224F000
	0x01D01DCC LDR X0, [X0 + 0x2E0]
	0x01D01DD0 BL 0x1B6E7F0
	0x01D01DD4 ADRP X0, 0x224F000
	0x01D01DD8 LDR X0, [X0 + 0x2D8]
	0x01D01DDC BL 0x1B6E7F0
	0x01D01DE0 MOVZ W8, 0x1
	0x01D01DE4 STRB W8, [X24 + 0x73C]
	0x01D01DE8 STR W21, [X19]
	0x01D01DEC STR X20, [X19 + 0x8]
	0x01D01DF0 LDR X0, [X23]
	0x01D01DF4 BL 0x1B6EA0C
	0x01D01DF8 LDR X1, [X22]
	0x01D01DFC MOV X21, X0
	0x01D01E00 BL 0x2E45D4C
	0x01D01E04 CBZ X20, 0x1D01ED0
	0x01D01E08 LDR W8, [X20 + 0x18]
	0x01D01E0C CMP W8, 0x1
	0x01D01E10 B.LT 0x1D01EA0
	0x01D01E14 ADRP X23, 0x224F000
	0x01D01E18 LDR X23, [X23 + 0x240]
	0x01D01E1C MOV W22, W31
	0x01D01E20 CMP W22, W8
	0x01D01E24 B.CS 0x1D01ED4
	0x01D01E28 ADD X8, X20, W22, 0x3, SXTW
	0x01D01E2C LDR X1, [X8 + 0x20]
	0x01D01E30 CBZ X1, 0x1D01ED0
	0x01D01E34 LDRB W8, [X1 + 0x20]
	0x01D01E38 CBZ W8, 0x1D01E90
	0x01D01E3C CBZ X21, 0x1D01ED0
	0x01D01E40 LDR W10, [X21 + 0x1C]
	0x01D01E44 LDR X8, [X21 + 0x10]
	0x01D01E48 LDR X9, [X23]
	0x01D01E4C ADD W10, W10, 0x1
	0x01D01E50 STR W10, [X21 + 0x1C]
	0x01D01E54 CBZ X8, 0x1D01ED0
	0x01D01E58 LDRSW X10, [X21 + 0x18]
	0x01D01E5C LDR W11, [X8 + 0x18]
	0x01D01E60 CMP W10, W11
	0x01D01E64 B.CS 0x1D01E7C
	0x01D01E68 ADD W9, W10, 0x1
	0x01D01E6C ADD X8, X8, X10, 0x3, LSL
	0x01D01E70 STR W9, [X21 + 0x18]
	0x01D01E74 STR X1, [X8 + 0x20]
	0x01D01E78 B 0x1D01E90
	0x01D01E7C LDR X8, [X9 + 0x20]
	0x01D01E80 MOV X0, X21
	0x01D01E84 LDR X8, [X8 + 0xC0]
	0x01D01E88 LDR X2, [X8 + 0x70]
	0x01D01E8C BL 0x2E46518
	0x01D01E90 LDR W8, [X20 + 0x18]
	0x01D01E94 ADD W22, W22, 0x1
	0x01D01E98 CMP W22, W8
	0x01D01E9C B.LT 0x1D01E20
	0x01D01EA0 CBZ X21, 0x1D01ED0
	0x01D01EA4 ADRP X8, 0x224F000
	0x01D01EA8 LDR X8, [X8 + 0xD88]
	0x01D01EAC MOV X0, X21
	0x01D01EB0 LDR X1, [X8]
	0x01D01EB4 BL 0x2E4834C
	0x01D01EB8 STR X0, [X19 + 0x10]
	0x01D01EBC LDP X20, X19, [X31 + 0x30]
	0x01D01EC0 LDP X22, X21, [X31 + 0x20]
	0x01D01EC4 LDP X24, X23, [X31 + 0x10]
	0x01D01EC8 LDR X30, [X31], #0x40
	0x01D01ECC RET
	0x01D01ED0 BL 0x1B6EA1C
	0x01D01ED4 BL 0x1B6EA24
	0x01D01ED8 STR X30, [X31 - 0x50]!
	0x01D01EDC STP X26, X25, [X31 + 0x10]
	0x01D01EE0 STP X24, X23, [X31 + 0x20]
	0x01D01EE4 STP X22, X21, [X31 + 0x30]
	0x01D01EE8 STP X20, X19, [X31 + 0x40]
	0x01D01EEC ADRP X20, 0x2522000
	0x01D01EF0 ADRP X21, 0x224F000
	0x01D01EF4 LDRB W8, [X20 + 0x730]
	0x01D01EF8 LDR X21, [X21 + 0xFC8]
	0x01D01EFC MOV X19, X1
	0x01D01F00 TBNZ X8, 0x0, 0x1D01F30
	0x01D01F04 ADRP X0, 0x224F000
	0x01D01F08 LDR X0, [X0 + 0xFD0]
	0x01D01F0C BL 0x1B6E7F0
	0x01D01F10 ADRP X0, 0x224F000
	0x01D01F14 LDR X0, [X0 + 0xFD8]
	0x01D01F18 BL 0x1B6E7F0
	0x01D01F1C ADRP X0, 0x224F000
	0x01D01F20 LDR X0, [X0 + 0xFC8]
	0x01D01F24 BL 0x1B6E7F0
	0x01D01F28 MOVZ W8, 0x1
	0x01D01F2C STRB W8, [X20 + 0x730]
	0x01D01F30 LDR X0, [X21]
	0x01D01F34 BL 0x1B6EA0C
	0x01D01F38 MOV X1, X31
	0x01D01F3C MOV X20, X0
	0x01D01F40 BL 0x31F7A70
	0x01D01F44 CBZ X19, 0x1D0218C
	0x01D01F48 ADRP X10, 0x224F000
	0x01D01F4C LDR X8, [X19]
	0x01D01F50 LDR X10, [X10 + 0xFD0]
	0x01D01F54 LDRH W9, [X8 + 0x12E]
	0x01D01F58 LDR X1, [X10]
	0x01D01F5C CBZ X9, 0x1D01F80
	0x01D01F60 LDR X10, [X8 + 0xB0]
	0x01D01F64 ADD X10, X10, 0x8
	0x01D01F68 LDUR X11, [X10 - 0x8]
	0x01D01F6C CMP X11, X1
	0x01D01F70 B.EQ 0x1D01F90
	0x01D01F74 SUBS X9, X9, 0x1
	0x01D01F78 ADD X10, X10, 0x10
	0x01D01F7C B.NE 0x1D01F68
	0x01D01F80 MOVZ W2, 0x1
	0x01D01F84 MOV X0, X19
	0x01D01F88 BL 0x1BB4284
	0x01D01F8C B 0x1D01FA0
	0x01D01F90 LDR W9, [X10]
	0x01D01F94 ADD W9, W9, 0x1
	0x01D01F98 ADD X8, X8, W9, 0x4, SXTW
	0x01D01F9C ADD X0, X8, 0x138
	0x01D01FA0 LDP X8, X1, [X0]
	0x01D01FA4 MOV X0, X19
	0x01D01FA8 BLR X8
	0x01D01FAC CMP W0, 0x2
	0x01D01FB0 B.LT 0x1D02174
	0x01D01FB4 CBZ X20, 0x1D0218C
	0x01D01FB8 ADRP X26, 0x224F000
	0x01D01FBC LDR X26, [X26 + 0xFD8]
	0x01D01FC0 MOV W21, W0
	0x01D01FC4 LDR X8, [X20]
	0x01D01FC8 MOV X0, X20
	0x01D01FCC MOV W1, W21
	0x01D01FD0 LDP X9, X2, [X8 + 0x1A8]
	0x01D01FD4 BLR X9
	0x01D01FD8 LDR X8, [X19]
	0x01D01FDC LDR X1, [X26]
	0x01D01FE0 MOV W24, W0
	0x01D01FE4 LDRH W9, [X8 + 0x12E]
	0x01D01FE8 CBZ X9, 0x1D0200C
	0x01D01FEC LDR X10, [X8 + 0xB0]
	0x01D01FF0 ADD X10, X10, 0x8
	0x01D01FF4 LDUR X11, [X10 - 0x8]
	0x01D01FF8 CMP X11, X1
	0x01D01FFC B.EQ 0x1D0201C
	0x01D02000 SUBS X9, X9, 0x1
	0x01D02004 ADD X10, X10, 0x10
	0x01D02008 B.NE 0x1D01FF4
	0x01D0200C MOV X0, X19
	0x01D02010 MOV W2, W31
	0x01D02014 BL 0x1BB4284
	0x01D02018 B 0x1D02028
	0x01D0201C LDRSW X9, [X10]
	0x01D02020 ADD X8, X8, X9, 0x4, LSL
	0x01D02024 ADD X0, X8, 0x138
	0x01D02028 LDP X8, X2, [X0]
	0x01D0202C MOV X0, X19
	0x01D02030 MOV W1, W24
	0x01D02034 SUB W22, W21, 0x1
	0x01D02038 BLR X8
	0x01D0203C LDR X8, [X19]
	0x01D02040 LDR X1, [X26]
	0x01D02044 MOV X23, X0
	0x01D02048 LDRH W9, [X8 + 0x12E]
	0x01D0204C CBZ X9, 0x1D02070
	0x01D02050 LDR X10, [X8 + 0xB0]
	0x01D02054 ADD X10, X10, 0x8
	0x01D02058 LDUR X11, [X10 - 0x8]
	0x01D0205C CMP X11, X1
	0x01D02060 B.EQ 0x1D02080
	0x01D02064 SUBS X9, X9, 0x1
	0x01D02068 ADD X10, X10, 0x10
	0x01D0206C B.NE 0x1D02058
	0x01D02070 MOV X0, X19
	0x01D02074 MOV W2, W31
	0x01D02078 BL 0x1BB4284
	0x01D0207C B 0x1D0208C
	0x01D02080 LDRSW X9, [X10]
	0x01D02084 ADD X8, X8, X9, 0x4, LSL
	0x01D02088 ADD X0, X8, 0x138
	0x01D0208C LDP X8, X2, [X0]
	0x01D02090 MOV X0, X19
	0x01D02094 MOV W1, W22
	0x01D02098 BLR X8

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X20, 0x2523000
	015 Move W8, [X20+1839]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {77}
	021 Move X0, 0x2250000
	022 Move X0, [X0+3472]
	023 Call 0x1B6F7F0
	024 Move X0, 0x2250000
	025 Move X0, [X0+3480]
	026 Call 0x1B6F7F0
	027 Move X0, 0x2250000
	028 Move X0, [X0+3768]
	029 Call 0x1B6F7F0
	030 Move X0, 0x2250000
	031 Move X0, [X0+3776]
	032 Call 0x1B6F7F0
	033 Move X0, 0x2250000
	034 Move X0, [X0+3784]
	035 Call 0x1B6F7F0
	036 Move X0, 0x2250000
	037 Move X0, [X0+3792]
	038 Call 0x1B6F7F0
	039 Move X0, 0x2250000
	040 Move X0, [X0+3800]
	041 Call 0x1B6F7F0
	042 Move X0, 0x2250000
	043 Move X0, [X0+3808]
	044 Call 0x1B6F7F0
	045 Move X0, 0x2250000
	046 Move X0, [X0+3816]
	047 Call 0x1B6F7F0
	048 Move X0, 0x2250000
	049 Move X0, [X0+3824]
	050 Call 0x1B6F7F0
	051 Move X0, 0x2250000
	052 Move X0, [X0+3832]
	053 Call 0x1B6F7F0
	054 Move X0, 0x2250000
	055 Move X0, [X0+3840]
	056 Call 0x1B6F7F0
	057 Move X0, 0x2250000
	058 Move X0, [X0+3048]
	059 Call 0x1B6F7F0
	060 Move X0, 0x2250000
	061 Move X0, [X0+3848]
	062 Call 0x1B6F7F0
	063 Move X0, 0x2250000
	064 Move X0, [X0+3856]
	065 Call 0x1B6F7F0
	066 Move X0, 0x2250000
	067 Move X0, [X0+592]
	068 Call 0x1B6F7F0
	069 Move X0, 0x224F000
	070 Move X0, [X0+184]
	071 Call 0x1B6F7F0
	072 Move X0, 0x224D000
	073 Move X0, [X0+1144]
	074 Call 0x1B6F7F0
	075 Move W8, 1
	076 Move [X20+1839], W8
	077 Move [X31+80], X31
	078 Move [X31+88], X31
	079 Move [X31+96], X31
	080 Move [X31+48], X31
	081 Move [X31+56], X31
	082 Move [X31+64], X31
	083 Move [X31+40], X31
	084 Move X0, [X19+24]
	085 Compare X0, 0
	086 JumpIfEqual {366}
	087 Move X8, 0x2250000
	088 Move X8, [X8+3832]
	089 Move X1, [X8]
	090 Call 0x20D23DC, X0
	091 Compare X0, 0
	092 JumpIfEqual {366}
	093 Move X8, 0x2250000
	094 Move X8, [X8+3848]
	095 Move X28, 0x2250000
	096 Move X27, 0x2250000
	097 Move X29, 0x2250000
	098 Move X26, 0x2250000
	099 Move X28, [X28+3784]
	100 Move X27, [X27+3048]
	101 Move X29, [X29+3472]
	102 Move X26, [X26+3480]
	103 Move X1, [X8]
	104 Add X8, X31, 16
	105 Call List`1<Object>.GetEnumerator, X0
	106 Move V0, [X31+1]
	107 Move X8, [X31+32]
	108 Move [X31+5], V0
	109 Move [X31+96], X8
	110 Move X8, 0x2250000
	111 Move X8, [X8+3792]
	112 Move X1, [X8]
	113 Add X0, X31, 80
	114 Call Enumerator<Object>.MoveNext, X0
	115 Move TEMP, X0
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfNotEqual {331}
	119 Move X20, [X31+96]
	120 Compare X20, 0
	121 JumpIfEqual {364}
	122 Move W23, [X20+48]
	123 Compare W23, 0
	124 JumpIfEqual {110}
	125 Move X0, [X19+24]
	126 Compare X0, 0
	127 JumpIfEqual {365}
	128 Move X8, 0x2250000
	129 Move X8, [X8+3824]
	130 Move X2, [X8]
	131 Move X1, X20
	132 Call 0x20D2148, X0, X1
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X24, X0
	135 Move W21, W31
	136 Move [X31+12], W23
	137 Move [X31], X0
	138 Move X8, 0x224D000
	139 Move X8, [X8+1144]
	140 Move X22, [X20+40]
	141 Move X0, [X8]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1B6F8F8
	146 Move X0, X22
	147 Move X1, X31
	148 Move X2, X31
	149 Call Object.op_Equality, X0, X1
	150 Move TEMP, X0
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfEqual {309}
	154 Move X1, X24
	155 Call Generator.Shuffle, X0, X1
	156 Compare X24, 0
	157 JumpIfEqual {361}
	158 Move X8, 0x2250000
	159 Move X8, [X8+3856]
	160 Move X1, [X8]
	161 Add X8, X31, 16
	162 Move X0, X24
	163 Call List`1<Object>.GetEnumerator, X0
	164 Move V0, [X31+1]
	165 Move X8, [X31+32]
	166 Move [X31+3], V0
	167 Move [X31+64], X8
	168 Move X1, [X28]
	169 Add X0, X31, 48
	170 Call Enumerator<Object>.MoveNext, X0
	171 Move TEMP, X0
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfNotEqual {295}
	175 Move X0, [X31+64]
	176 Compare X0, 0
	177 JumpIfEqual {311}
	178 Move X1, X20
	179 Move X2, X31
	180 Call MobPlacementConnection.GetOtherNode, X0, X1
	181 Move X1, [X27]
	182 Call 0x1B6F8FC
	183 Move X23, X0
	184 Compare X0, 0
	185 JumpIfEqual {168}
	186 Move X8, [X19+40]
	187 Compare X8, 0
	188 JumpIfEqual {313}
	189 Move X0, [X8+16]
	190 Compare X0, 0
	191 JumpIfEqual {312}
	192 Move X2, [X29]
	193 Move X1, X23
	194 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	195 Move TEMP, X0
	196 And TEMP, TEMP, 1
	197 Compare TEMP, 1
	198 JumpIfNotEqual {168}
	199 Move X8, [X19+40]
	200 Compare X8, 0
	201 JumpIfEqual {316}
	202 Move X0, [X8+16]
	203 Compare X0, 0
	204 JumpIfEqual {315}
	205 Move X2, [X26]
	206 Move X1, X23
	207 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	208 Move X8, X0
	209 Compare X0, 0
	210 JumpIfEqual {314}
	211 Move X9, [X8+40]
	212 Compare X9, 0
	213 JumpIfEqual {317}
	214 Move W9, [X9+24]
	215 Compare W9, 0
	216 JumpIfEqual {168}
	217 Add X23, X8, 56
	218 Move X0, X23
	219 Call NavZone.GetRandomSpawnablePoint, X0
	220 Move X8, 0x224D000
	221 Move X8, [X8+1144]
	222 Move X24, X0
	223 Move X0, [X8]
	224 Move W8, [X0+224]
	225 Compare W8, 0
	226 JumpIfNotEqual {228}
	227 Call 0x1B6F8F8
	228 Move X8, 0x224F000
	229 Move X8, [X8+184]
	230 Move X1, [X8]
	231 Move X0, X22
	232 Call 0x2115D24, X0
	233 Move X22, X0
	234 Compare X0, 0
	235 JumpIfEqual {318}
	236 Move X0, X22
	237 Move X1, X31
	238 Call GameObject.get_transform, X0
	239 Compare X24, 0
	240 JumpIfEqual {319}
	241 Move X25, X0
	242 Move X0, X24
	243 Call NavPoint.GetSpawnPosition, X0
	244 Compare X25, 0
	245 JumpIfEqual {320}
	246 Move X0, X25
	247 Move X1, X31
	248 Call Transform.set_position, X0, X1
	249 Move X0, X22
	250 Move X1, X31
	251 Call GameObject.get_transform, X0
	252 Compare X0, 0
	253 JumpIfEqual {321}
	254 Move X1, [X19+64]
	255 Move X2, X31
	256 Call Transform.set_parent, X0, X1
	257 Move X8, 0x2250000
	258 Move X8, [X8+3816]
	259 Move X2, [X8]
	260 Add X1, X31, 40
	261 Move X0, X22
	262 Call 0x20D12D0, X0, X1
	263 Move TEMP, X0
	264 And TEMP, TEMP, 1
	265 Compare TEMP, 1
	266 JumpIfNotEqual {295}
	267 Move X22, [X31+40]
	268 Compare X22, 0
	269 JumpIfEqual {322}
	270 Move X8, [X22]
	271 Move X10, 0x2250000
	272 Move W23, [X23]
	273 NotImplemented "Instruction LDRH not yet implemented."
	274 Move X10, [X10+3840]
	275 Move X1, [X10]
	276 Compare X9, 0
	277 JumpIfEqual {284}
	278 Move X10, [X8+176]
	279 Add X10, X10, 8
	280 NotImplemented "Instruction LDUR not yet implemented."
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Subtract X9, X9, 1
	283 Add X10, X10, 16
	284 Move X0, X22
	285 Move W2, W31
	286 Call 0x1BB5284
	287 NotImplemented "Instruction LDRSW not yet implemented."
	288 Add X8, X8, X9
	289 Add X0, X8, 312
	290 Move X8, [X0]
	291 Move X2, [X0+8]
	292 Move X0, X22
	293 Move W1, W23
	294 NotImplemented "Instruction BLR not yet implemented."
	295 Move X24, X31
	296 Move W22, 6
	297 Move X8, 0x2250000
	298 Move X8, [X8+3776]
	299 Move X1, [X8]
	300 Add X0, X31, 48
	301 Call Enumerator<Object>.Dispose, X0
	302 Compare X24, 0
	303 JumpIfNotEqual {362}
	304 Move W23, [X31+12]
	305 Move X24, [X31]
	306 NotImplemented "Instruction CMP not yet implemented."
	307 Compare W22, 0
	308 JumpIfNotEqual {331}
	309 Add W21, W21, 1
	310 NotImplemented "Instruction CMP not yet implemented."
	311 Call 0x1B6FA1C
	312 Call 0x1B6FA1C
	313 Call 0x1B6FA1C
	314 Call 0x1B6FA1C
	315 Call 0x1B6FA1C
	316 Call 0x1B6FA1C
	317 Call 0x1B6FA1C
	318 Call 0x1B6FA1C
	319 Call 0x1B6FA1C
	320 Call 0x1B6FA1C
	321 Call 0x1B6FA1C
	322 Call 0x1B6FA1C
	323 Move X22, X1
	324 Move X23, X0
	325 NotImplemented "Instruction CMP not yet implemented."
	326 Move X0, X23
	327 Call 0x3D1A840
	328 Move X24, [X0]
	329 Call 0x3D1A850
	330 Move W22, W31
	331 Move X8, 0x2250000
	332 Move X8, [X8+3768]
	333 Add X0, X31, 80
	334 Move X1, [X8]
	335 Call Enumerator<Object>.Dispose, X0
	336 Move X20, [X31+192]
	337 Move X19, [X31+200]
	338 Move X22, [X31+176]
	339 Move X21, [X31+184]
	340 Move X24, [X31+160]
	341 Move X23, [X31+168]
	342 Move X26, [X31+144]
	343 Move X25, [X31+152]
	344 Move X28, [X31+128]
	345 Move X27, [X31+136]
	346 Move X29, [X31+112]
	347 Move X30, [X31+120]
	348 Move W0, 1
	349 Add X31, X31, 208
	350 Return X0
	351 Move X24, X31
	352 Move X8, 0x2250000
	353 Move X8, [X8+3776]
	354 Move X1, [X8]
	355 Add X0, X31, 48
	356 Call Enumerator<Object>.Dispose, X0
	357 Compare X24, 0
	358 JumpIfEqual {371}
	359 Move X0, X24
	360 Call 0x1B6FA14
	361 Call 0x1B6FA1C
	362 Move X0, X24
	363 Call 0x1B6FA14
	364 Call 0x1B6FA1C
	365 Call 0x1B6FA1C
	366 Call 0x1B6FA1C
	367 Move X22, X1
	368 Move X23, X0
	369 Move X22, X1
	370 Move X23, X0
	371 NotImplemented "Instruction CMP not yet implemented."
	372 Move X0, X23
	373 Call 0x3D1A840
	374 Move X19, [X0]
	375 Call 0x3D1A850
	376 Move X8, 0x224F000
	377 Move X8, [X8+3768]
	378 Add X0, X31, 80
	379 Move X1, [X8]
	380 Call Enumerator<Object>.Dispose, X0
	381 Compare X19, 0
	382 JumpIfEqual {336}
	383 Move X0, X19
	384 Call 0x1B6FA14
	385 Move X19, X31
	386 Move X23, X0
	387 Move X8, 0x224F000
	388 Move X8, [X8+3768]
	389 Move X1, [X8]
	390 Add X0, X31, 80
	391 Call Enumerator<Object>.Dispose, X0
	392 Compare X19, 0
	393 JumpIfNotEqual {396}
	394 Move X0, X23
	395 Call 0x1C8518C
	396 Move X0, X19
	397 Call 0x1B6FA14
	398 Call 0x18F56A8

Method: System.Void Shuffle(System.Collections.IList list)

Disassembly:
	0x01D02ED8 MOVZ W8, 0x1
	0x01D02EDC STRB W8, [X22 + 0x74E]
	0x01D02EE0 LDR X0, [X21]
	0x01D02EE4 LDR X20, [X20 + 0x20]
	0x01D02EE8 LDR W8, [X0 + 0xE0]
	0x01D02EEC CBNZ W8, 0x1D02EF4
	0x01D02EF0 BL 0x1B6E8F8
	0x01D02EF4 CBZ X20, 0x1D02F20
	0x01D02EF8 LDR X8, [X21]
	0x01D02EFC AND W2, W19, 0x1
	0x01D02F00 MOV X0, X20
	0x01D02F04 LDP X20, X19, [X31 + 0x20]
	0x01D02F08 LDR X8, [X8 + 0xB8]
	0x01D02F0C LDP X22, X21, [X31 + 0x10]
	0x01D02F10 MOV X3, X31
	0x01D02F14 LDR W1, [X8]
	0x01D02F18 LDR X30, [X31], #0x30
	0x01D02F1C B 0x3A5EF90
	0x01D02F20 BL 0x1B6EA1C
	0x01D02F24 SUB X31, X31, 0x120
	0x01D02F28 STP D15, D14, [X31 + 0x80]
	0x01D02F2C STP D13, D12, [X31 + 0x90]
	0x01D02F30 STP D11, D10, [X31 + 0xA0]
	0x01D02F34 STP D9, D8, [X31 + 0xB0]
	0x01D02F38 STP X29, X30, [X31 + 0xC0]
	0x01D02F3C STP X28, X27, [X31 + 0xD0]
	0x01D02F40 STP X26, X25, [X31 + 0xE0]
	0x01D02F44 STP X24, X23, [X31 + 0xF0]
	0x01D02F48 STP X22, X21, [X31 + 0x100]
	0x01D02F4C STP X20, X19, [X31 + 0x110]
	0x01D02F50 ADRP X20, 0x2521000
	0x01D02F54 LDRB W8, [X20 + 0x73D]
	0x01D02F58 MOV X19, X0
	0x01D02F5C TBNZ X8, 0x0, 0x1D02FEC
	0x01D02F60 ADRP X0, 0x224E000
	0x01D02F64 LDR X0, [X0 + 0x2F8]
	0x01D02F68 BL 0x1B6E7F0
	0x01D02F6C ADRP X0, 0x224D000
	0x01D02F70 LDR X0, [X0 + 0xDA8]
	0x01D02F74 BL 0x1B6E7F0
	0x01D02F78 ADRP X0, 0x224D000
	0x01D02F7C LDR X0, [X0 + 0xDB0]
	0x01D02F80 BL 0x1B6E7F0
	0x01D02F84 ADRP X0, 0x224D000
	0x01D02F88 LDR X0, [X0 + 0xDB8]
	0x01D02F8C BL 0x1B6E7F0
	0x01D02F90 ADRP X0, 0x224E000
	0x01D02F94 LDR X0, [X0 + 0x2A0]
	0x01D02F98 BL 0x1B6E7F0
	0x01D02F9C ADRP X0, 0x224E000
	0x01D02FA0 LDR X0, [X0 + 0x3A8]
	0x01D02FA4 BL 0x1B6E7F0
	0x01D02FA8 ADRP X0, 0x224D000
	0x01D02FAC LDR X0, [X0 + 0xDC0]
	0x01D02FB0 BL 0x1B6E7F0
	0x01D02FB4 ADRP X0, 0x224D000
	0x01D02FB8 LDR X0, [X0 + 0xE30]
	0x01D02FBC BL 0x1B6E7F0
	0x01D02FC0 ADRP X0, 0x224B000
	0x01D02FC4 LDR X0, [X0 + 0x478]
	0x01D02FC8 BL 0x1B6E7F0
	0x01D02FCC ADRP X0, 0x224B000
	0x01D02FD0 LDR X0, [X0 + 0x4C0]
	0x01D02FD4 BL 0x1B6E7F0
	0x01D02FD8 ADRP X0, 0x224D000
	0x01D02FDC LDR X0, [X0 + 0x2D0]
	0x01D02FE0 BL 0x1B6E7F0
	0x01D02FE4 MOVZ W8, 0x1
	0x01D02FE8 STRB W8, [X20 + 0x73D]
	0x01D02FEC MOVI V0.2D, 0x0
	0x01D02FF0 MOV X0, X19
	0x01D02FF4 MOV X1, X31
	0x01D02FF8 STP X31, X31, [X31 + 0x70]
	0x01D02FFC STP X31, X31, [X31 + 0x60]
	0x01D03000 STUR V0, [X31 + 0x4C]
	0x01D03004 STP V0, V0, [X31 + 0x30]
	0x01D03008 BL 0x1D65000
	0x01D0300C LDR X0, [X19 + 0x40]
	0x01D03010 CBZ X0, 0x1D039C0
	0x01D03014 MOV X1, X31
	0x01D03018 BL 0x1D9E780
	0x01D0301C TBZ X0, 0x0, 0x1D03990
	0x01D03020 LDR W8, [X19 + 0x80]
	0x01D03024 CBZ W8, 0x1D037C4
	0x01D03028 SUB W9, W8, 0x1
	0x01D0302C CMP W9, 0x1
	0x01D03030 B.HI 0x1D0396C
	0x01D03034 LDR X0, [X19 + 0xA0]
	0x01D03038 CBZ X0, 0x1D039C0
	0x01D0303C MOV X1, X31
	0x01D03040 BL 0x3AA7658
	0x01D03044 LDR X0, [X19 + 0xA0]
	0x01D03048 CBZ X0, 0x1D039C0
	0x01D0304C MOV X1, X31
	0x01D03050 MOV V9.16B, V0.16B
	0x01D03054 MOV V10.16B, V1.16B
	0x01D03058 MOV V11.16B, V2.16B
	0x01D0305C BL 0x3AA7AD0
	0x01D03060 LDR V8, [X19 + 0xB8]
	0x01D03064 LDR W0, [X19 + 0xB0]
	0x01D03068 FMOV S3, 0.75
	0x01D0306C MOV X1, X31
	0x01D03070 FMUL S0, S0, S8
	0x01D03074 FMUL S1, S1, S8
	0x01D03078 FMUL S2, S2, S8
	0x01D0307C FMUL S0, S0, S3
	0x01D03080 FMUL S1, S1, S3
	0x01D03084 FMUL S2, S2, S3
	0x01D03088 FADD S9, S9, S0
	0x01D0308C FADD S10, S10, S1
	0x01D03090 FADD S11, S11, S2
	0x01D03094 BL 0x3A9DE68
	0x01D03098 ADRP X26, 0x224A000
	0x01D0309C LDR X26, [X26 + 0x4C0]
	0x01D030A0 MOV W20, W0
	0x01D030A4 LDR X8, [X26]
	0x01D030A8 LDR W9, [X8 + 0xE0]
	0x01D030AC CBNZ W9, 0x1D030B8
	0x01D030B0 MOV X0, X8
	0x01D030B4 BL 0x1B6E8F8
	0x01D030B8 MOVZ W1, 0x2
	0x01D030BC MOV V0.16B, V9.16B
	0x01D030C0 MOV V1.16B, V10.16B
	0x01D030C4 MOV V2.16B, V11.16B
	0x01D030C8 MOV V3.16B, V8.16B
	0x01D030CC MOV W0, W20
	0x01D030D0 MOV X2, X31
	0x01D030D4 BL 0x3AF5250
	0x01D030D8 CBZ X0, 0x1D039C0
	0x01D030DC LDR X8, [X0 + 0x18]
	0x01D030E0 MOV X20, X0
	0x01D030E4 CBZ X8, 0x1D0385C
	0x01D030E8 LDR X9, [X19 + 0x110]
	0x01D030EC CBZ X9, 0x1D039C0
	0x01D030F0 LDP W2, W10, [X9 + 0x18]
	0x01D030F4 ADD W10, W10, 0x1
	0x01D030F8 CMP W2, 0x1
	0x01D030FC STP W31, W10, [X9 + 0x18]
	0x01D03100 B.LT 0x1D03118
	0x01D03104 LDR X0, [X9 + 0x10]
	0x01D03108 MOV W1, W31
	0x01D0310C MOV X3, X31
	0x01D03110 BL 0x32093A0
	0x01D03114 LDR X8, [X20 + 0x18]
	0x01D03118 CMP W8, 0x1
	0x01D0311C B.LT 0x1D031F4
	0x01D03120 ADRP X25, 0x224D000
	0x01D03124 ADRP X27, 0x224A000
	0x01D03128 ADRP X28, 0x224D000
	0x01D0312C LDR X25, [X25 + 0x2F8]
	0x01D03130 LDR X27, [X27 + 0x478]
	0x01D03134 LDR X28, [X28 + 0x2A0]
	0x01D03138 MOV X23, X31
	0x01D0313C ADD X24, X20, 0x20
	0x01D03140 CMP W23, W8
	0x01D03144 B.CS 0x1D039D0
	0x01D03148 LDR X0, [X24, X23, LSL #3]
	0x01D0314C CBZ X0, 0x1D039C0
	0x01D03150 LDR X2, [X25]
	0x01D03154 ADD X1, X31, 0x78
	0x01D03158 BL 0x2090EE4
	0x01D0315C TBZ X0, 0x0, 0x1D031E4
	0x01D03160 LDR X0, [X27]
	0x01D03164 LDR X21, [X31 + 0x78]
	0x01D03168 LDR X22, [X19 + 0x108]
	0x01D0316C LDR W8, [X0 + 0xE0]
	0x01D03170 CBNZ W8, 0x1D03178
	0x01D03174 BL 0x1B6E8F8
	0x01D03178 MOV X0, X21
	0x01D0317C MOV X1, X22
	0x01D03180 MOV X2, X31
	0x01D03184 BL 0x3AA0AF0
	0x01D03188 TBNZ X0, 0x0, 0x1D031F4
	0x01D0318C LDR X0, [X19 + 0x110]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x2522000
	011 Move X21, 0x224F000
	012 Move W8, [X20+1840]
	013 Move X21, [X21+4040]
	014 Move X19, X1
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x224F000
	020 Move X0, [X0+4048]
	021 Call 0x1B6F7F0
	022 Move X0, 0x224F000
	023 Move X0, [X0+4056]
	024 Call 0x1B6F7F0
	025 Move X0, 0x224F000
	026 Move X0, [X0+4040]
	027 Call 0x1B6F7F0
	028 Move W8, 1
	029 Move [X20+1840], W8
	030 Move X0, [X21]
	031 Call 0x1B6FA0C
	032 Move X1, X31
	033 Move X20, X0
	034 Call Random..ctor, X0
	035 Compare X19, 0
	036 JumpIfEqual {181}
	037 Move X10, 0x224F000
	038 Move X8, [X19]
	039 Move X10, [X10+4048]
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Move X1, [X10]
	042 Compare X9, 0
	043 JumpIfEqual {50}
	044 Move X10, [X8+176]
	045 Add X10, X10, 8
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Subtract X9, X9, 1
	049 Add X10, X10, 16
	050 Move W2, 1
	051 Move X0, X19
	052 Call 0x1BB5284
	053 Move W9, [X10]
	054 Add W9, W9, 1
	055 Add X8, X8, W9
	056 Add X0, X8, 312
	057 Move X8, [X0]
	058 Move X1, [X0+8]
	059 Move X0, X19
	060 NotImplemented "Instruction BLR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Compare X20, 0
	063 JumpIfEqual {181}
	064 Move X26, 0x224F000
	065 Move X26, [X26+4056]
	066 Move W21, W0
	067 Move X8, [X20]
	068 Move X0, X20
	069 Move W1, W21
	070 Move X9, [X8+424]
	071 Move X2, [X8+432]
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move X8, [X19]
	074 Move X1, [X26]
	075 Move W24, W0
	076 NotImplemented "Instruction LDRH not yet implemented."
	077 Compare X9, 0
	078 JumpIfEqual {85}
	079 Move X10, [X8+176]
	080 Add X10, X10, 8
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Subtract X9, X9, 1
	084 Add X10, X10, 16
	085 Move X0, X19
	086 Move W2, W31
	087 Call 0x1BB5284
	088 NotImplemented "Instruction LDRSW not yet implemented."
	089 Add X8, X8, X9
	090 Add X0, X8, 312
	091 Move X8, [X0]
	092 Move X2, [X0+8]
	093 Move X0, X19
	094 Move W1, W24
	095 Subtract W22, W21, 1
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move X8, [X19]
	098 Move X1, [X26]
	099 Move X23, X0
	100 NotImplemented "Instruction LDRH not yet implemented."
	101 Compare X9, 0
	102 JumpIfEqual {109}
	103 Move X10, [X8+176]
	104 Add X10, X10, 8
	105 NotImplemented "Instruction LDUR not yet implemented."
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Subtract X9, X9, 1
	108 Add X10, X10, 16
	109 Move X0, X19
	110 Move W2, W31
	111 Call 0x1BB5284
	112 NotImplemented "Instruction LDRSW not yet implemented."
	113 Add X8, X8, X9
	114 Add X0, X8, 312
	115 Move X8, [X0]
	116 Move X2, [X0+8]
	117 Move X0, X19
	118 Move W1, W22
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move X8, [X19]
	121 Move X1, [X26]
	122 Move X25, X0
	123 NotImplemented "Instruction LDRH not yet implemented."
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move W2, 1
	133 Move X0, X19
	134 Call 0x1BB5284
	135 Move W9, [X10]
	136 Add W9, W9, 1
	137 Add X8, X8, W9
	138 Add X0, X8, 312
	139 Move X8, [X0]
	140 Move X3, [X0+8]
	141 Move X0, X19
	142 Move W1, W24
	143 Move X2, X25
	144 NotImplemented "Instruction BLR not yet implemented."
	145 Move X8, [X19]
	146 Move X1, [X26]
	147 NotImplemented "Instruction LDRH not yet implemented."
	148 Compare X9, 0
	149 JumpIfEqual {156}
	150 Move X10, [X8+176]
	151 Add X10, X10, 8
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Subtract X9, X9, 1
	155 Add X10, X10, 16
	156 Move W2, 1
	157 Move X0, X19
	158 Call 0x1BB5284
	159 Move W9, [X10]
	160 Add W9, W9, 1
	161 Add X8, X8, W9
	162 Add X0, X8, 312
	163 Move X8, [X0]
	164 Move X3, [X0+8]
	165 Move X0, X19
	166 Move W1, W22
	167 Move X2, X23
	168 NotImplemented "Instruction BLR not yet implemented."
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move W21, W22
	171 Move X20, [X31+64]
	172 Move X19, [X31+72]
	173 Move X22, [X31+48]
	174 Move X21, [X31+56]
	175 Move X24, [X31+32]
	176 Move X23, [X31+40]
	177 Move X26, [X31+16]
	178 Move X25, [X31+24]
	179 Move X30, [X31+80]
	180 Return 
	181 Call 0x1B6FA1C

Method: System.Void CleanupHeirarchy()

Disassembly:
	0x01CFEE88 ADD X8, X31, 0x10
	0x01CFEE8C BL 0x25CA7B8
	0x01CFEE90 LDR V0, [X31 + 0x1]
	0x01CFEE94 LDR X8, [X31 + 0x20]
	0x01CFEE98 STR V0, [X31 + 0x6]
	0x01CFEE9C STR X8, [X31 + 0x70]
	0x01CFEEA0 LDR X1, [X24]
	0x01CFEEA4 ADD X0, X31, 0x60
	0x01CFEEA8 BL 0x2A5AE8C
	0x01CFEEAC TBZ X0, 0x0, 0x1CFF030
	0x01CFEEB0 LDR X8, [X31 + 0x70]
	0x01CFEEB4 CBZ X8, 0x1CFF0DC
	0x01CFEEB8 LDR X0, [X8 + 0x18]
	0x01CFEEBC CBZ X0, 0x1CFF0E0
	0x01CFEEC0 LDR X2, [X25]
	0x01CFEEC4 MOVZ W1, 0x1
	0x01CFEEC8 BL 0x20CFC54
	0x01CFEECC MOV X19, X0
	0x01CFEED0 CBZ X0, 0x1CFF0D8
	0x01CFEED4 LDR W8, [X19 + 0x18]
	0x01CFEED8 CMP W8, 0x1
	0x01CFEEDC B.LT 0x1CFEEA0
	0x01CFEEE0 MOV W21, W31
	0x01CFEEE4 CMP W21, W8
	0x01CFEEE8 B.CS 0x1CFF060
	0x01CFEEEC ADD X8, X19, W21, 0x3, SXTW
	0x01CFEEF0 LDR X20, [X8 + 0x20]
	0x01CFEEF4 CBZ X20, 0x1CFF064
	0x01CFEEF8 MOV X0, X20
	0x01CFEEFC MOV X1, X31
	0x01CFEF00 BL 0x3A9B0C0
	0x01CFEF04 CBZ X0, 0x1CFF068
	0x01CFEF08 LDR X2, [X26]
	0x01CFEF0C ADD X1, X31, 0x88
	0x01CFEF10 BL 0x20D02D0
	0x01CFEF14 TBZ X0, 0x0, 0x1CFEF3C
	0x01CFEF18 LDR X0, [X31 + 0x88]
	0x01CFEF1C CBZ X0, 0x1CFF09C
	0x01CFEF20 MOV X1, X31
	0x01CFEF24 BL 0x3A9B0C0
	0x01CFEF28 CBZ X0, 0x1CFF0A0
	0x01CFEF2C MOVZ W1, 0x7
	0x01CFEF30 MOV X2, X31
	0x01CFEF34 BL 0x3A9D964
	0x01CFEF38 B 0x1CFF01C
	0x01CFEF3C MOV X0, X20
	0x01CFEF40 MOV X1, X31
	0x01CFEF44 BL 0x3A9B0C0
	0x01CFEF48 CBZ X0, 0x1CFF098
	0x01CFEF4C LDR X2, [X27]
	0x01CFEF50 ADD X1, X31, 0x38
	0x01CFEF54 BL 0x20D02D0
	0x01CFEF58 TBZ X0, 0x0, 0x1CFEFC8
	0x01CFEF5C MOV X0, X20
	0x01CFEF60 MOV X1, X31
	0x01CFEF64 BL 0x3A9B0C0
	0x01CFEF68 CBZ X0, 0x1CFF0A4
	0x01CFEF6C LDR X2, [X28]
	0x01CFEF70 ADD X1, X31, 0x30
	0x01CFEF74 BL 0x20D02D0
	0x01CFEF78 TBZ X0, 0x0, 0x1CFEFA4
	0x01CFEF7C LDR X0, [X31 + 0x30]
	0x01CFEF80 CBZ X0, 0x1CFF0B4
	0x01CFEF84 MOV X1, X31
	0x01CFEF88 BL 0x3AF7384
	0x01CFEF8C TBNZ X0, 0x0, 0x1CFEFA4
	0x01CFEF90 LDR X0, [X31 + 0x30]
	0x01CFEF94 CBZ X0, 0x1CFF0C4
	0x01CFEF98 MOVZ W1, 0x1
	0x01CFEF9C MOV X2, X31
	0x01CFEFA0 BL 0x3AF73C0
	0x01CFEFA4 LDR X0, [X31 + 0x38]
	0x01CFEFA8 CBZ X0, 0x1CFF0B0
	0x01CFEFAC MOV X1, X31
	0x01CFEFB0 BL 0x3A9B0C0
	0x01CFEFB4 CBZ X0, 0x1CFF0A8
	0x01CFEFB8 MOVZ W1, 0x15
	0x01CFEFBC MOV X2, X31
	0x01CFEFC0 BL 0x3A9D964
	0x01CFEFC4 B 0x1CFF01C
	0x01CFEFC8 MOV X0, X20
	0x01CFEFCC MOV X1, X31
	0x01CFEFD0 BL 0x3A9B0C0
	0x01CFEFD4 CBZ X0, 0x1CFF0AC
	0x01CFEFD8 LDR X2, [X28]
	0x01CFEFDC ADD X1, X31, 0x28
	0x01CFEFE0 BL 0x20D02D0
	0x01CFEFE4 TBZ X0, 0x0, 0x1CFF01C
	0x01CFEFE8 LDR X0, [X31 + 0x28]
	0x01CFEFEC CBZ X0, 0x1CFF0B8
	0x01CFEFF0 MOV X1, X31
	0x01CFEFF4 BL 0x3AF7384
	0x01CFEFF8 TBNZ X0, 0x0, 0x1CFF01C
	0x01CFEFFC LDR X0, [X31 + 0x28]
	0x01CFF000 CBZ X0, 0x1CFF0BC
	0x01CFF004 MOV X1, X31
	0x01CFF008 BL 0x3A9B0C0
	0x01CFF00C CBZ X0, 0x1CFF0C0
	0x01CFF010 MOVZ W1, 0x1F
	0x01CFF014 MOV X2, X31
	0x01CFF018 BL 0x3A9D964
	0x01CFF01C LDR W8, [X19 + 0x18]
	0x01CFF020 ADD W21, W21, 0x1
	0x01CFF024 CMP W21, W8
	0x01CFF028 B.LT 0x1CFEEE4
	0x01CFF02C B 0x1CFEEA0
	0x01CFF030 LDR X1, [X23]
	0x01CFF034 ADD X0, X31, 0x60
	0x01CFF038 BL 0x2A5AE88
	0x01CFF03C LDP X20, X19, [X31 + 0xE0]
	0x01CFF040 LDP X22, X21, [X31 + 0xD0]
	0x01CFF044 LDP X24, X23, [X31 + 0xC0]
	0x01CFF048 LDP X26, X25, [X31 + 0xB0]
	0x01CFF04C LDP X28, X27, [X31 + 0xA0]
	0x01CFF050 LDP X29, X30, [X31 + 0x90]
	0x01CFF054 LDR V8, [X31 + 0x80]
	0x01CFF058 ADD X31, X31, 0xF0
	0x01CFF05C RET
	0x01CFF060 BL 0x1B6EA24
	0x01CFF064 BL 0x1B6EA1C
	0x01CFF068 BL 0x1B6EA1C
	0x01CFF06C MOV X19, X0
	0x01CFF070 MOV X22, X31
	0x01CFF074 LDR X1, [X23]
	0x01CFF078 ADD X0, X31, 0x40
	0x01CFF07C BL 0x2A14F2C
	0x01CFF080 ADRP X23, 0x2251000
	0x01CFF084 LDR X23, [X23 + 0xC28]
	0x01CFF088 MOV X0, X19
	0x01CFF08C CBZ X22, 0x1CFF128
	0x01CFF090 MOV X0, X22
	0x01CFF094 BL 0x1B6EA14
	0x01CFF098 BL 0x1B6EA1C
	0x01CFF09C BL 0x1B6EA1C
	0x01CFF0A0 BL 0x1B6EA1C
	0x01CFF0A4 BL 0x1B6EA1C
	0x01CFF0A8 BL 0x1B6EA1C
	0x01CFF0AC BL 0x1B6EA1C
	0x01CFF0B0 BL 0x1B6EA1C
	0x01CFF0B4 BL 0x1B6EA1C
	0x01CFF0B8 BL 0x1B6EA1C
	0x01CFF0BC BL 0x1B6EA1C
	0x01CFF0C0 BL 0x1B6EA1C
	0x01CFF0C4 BL 0x1B6EA1C
	0x01CFF0C8 BL 0x1B6EA1C
	0x01CFF0CC BL 0x1B6EA1C
	0x01CFF0D0 MOV X0, X22
	0x01CFF0D4 BL 0x1B6EA14
	0x01CFF0D8 BL 0x1B6EA1C
	0x01CFF0DC BL 0x1B6EA1C
	0x01CFF0E0 BL 0x1B6EA1C
	0x01CFF0E4 BL 0x1B6EA1C
	0x01CFF0E8 MOV X20, X1
	0x01CFF0EC MOV X19, X0
	0x01CFF0F0 B 0x1CFF074
	0x01CFF0F4 B 0x1CFF1FC
	0x01CFF0F8 B 0x1CFF190
	0x01CFF0FC B 0x1CFF190
	0x01CFF100 B 0x1CFF190
	0x01CFF104 B 0x1CFF11C
	0x01CFF108 B 0x1CFF11C
	0x01CFF10C B 0x1CFF11C
	0x01CFF110 B 0x1CFF11C
	0x01CFF114 B 0x1CFF11C
	0x01CFF118 B 0x1CFF1FC
	0x01CFF11C ADRP X23, 0x2251000
	0x01CFF120 LDR X23, [X23 + 0xC28]
	0x01CFF124 MOV X20, X1
	0x01CFF128 CMP W20, 0x1
	0x01CFF12C B.NE 0x1CFF154
	0x01CFF130 BL 0x3D19840
	0x01CFF134 LDR X20, [X0]
	0x01CFF138 BL 0x3D19850
	0x01CFF13C LDR X1, [X23]
	0x01CFF140 ADD X0, X31, 0x60
	0x01CFF144 BL 0x2A5AE88
	0x01CFF148 CBZ X20, 0x1CFEE54
	0x01CFF14C MOV X0, X20
	0x01CFF150 BL 0x1B6EA14
	0x01CFF154 MOV X21, X0
	0x01CFF158 MOV X20, X31
	0x01CFF15C B 0x1CFF164
	0x01CFF160 MOV X21, X0
	0x01CFF164 ADRP X8, 0x2251000
	0x01CFF168 LDR X8, [X8 + 0xC28]
	0x01CFF16C LDR X1, [X8]
	0x01CFF170 ADD X0, X31, 0x60
	0x01CFF174 BL 0x2A5AE88
	0x01CFF178 CBZ X20, 0x1CFF250
	0x01CFF17C MOV X0, X20
	0x01CFF180 BL 0x1B6EA14
	0x01CFF184 B 0x1CFF190
	0x01CFF188 B 0x1CFF190
	0x01CFF18C B 0x1CFF1FC
	0x01CFF190 ADRP X23, 0x2251000
	0x01CFF194 LDR X23, [X23 + 0xC28]
	0x01CFF198 B 0x1CFF1FC
	0x01CFF19C B 0x1CFF1FC
	0x01CFF1A0 B 0x1CFF1FC
	0x01CFF1A4 B 0x1CFF1FC
	0x01CFF1A8 B 0x1CFF1FC
	0x01CFF1AC B 0x1CFF1FC
	0x01CFF1B0 B 0x1CFF1FC
	0x01CFF1B4 B 0x1CFF1FC
	0x01CFF1B8 B 0x1CFF1FC
	0x01CFF1BC B 0x1CFF1FC
	0x01CFF1C0 B 0x1CFF1FC
	0x01CFF1C4 B 0x1CFF1FC
	0x01CFF1C8 B 0x1CFF1FC
	0x01CFF1CC B 0x1CFF1FC
	0x01CFF1D0 B 0x1CFF1FC
	0x01CFF1D4 B 0x1CFF1FC
	0x01CFF1D8 B 0x1CFF1FC
	0x01CFF1DC B 0x1CFF1FC
	0x01CFF1E0 B 0x1CFF1FC
	0x01CFF1E4 B 0x1CFF1FC
	0x01CFF1E8 B 0x1CFF1FC
	0x01CFF1EC B 0x1CFF1FC
	0x01CFF1F0 B 0x1CFF1FC
	0x01CFF1F4 B 0x1CFF1FC
	0x01CFF1F8 B 0x1CFF1FC
	0x01CFF1FC CMP W1, 0x1
	0x01CFF200 B.NE 0x1CFF228
	0x01CFF204 BL 0x3D19840
	0x01CFF208 LDR X19, [X0]
	0x01CFF20C BL 0x3D19850
	0x01CFF210 LDR X1, [X23]
	0x01CFF214 ADD X0, X31, 0x60
	0x01CFF218 BL 0x2A5AE88
	0x01CFF21C CBZ X19, 0x1CFF03C
	0x01CFF220 MOV X0, X19
	0x01CFF224 BL 0x1B6EA14
	0x01CFF228 MOV X21, X0
	0x01CFF22C MOV X19, X31
	0x01CFF230 B 0x1CFF238
	0x01CFF234 MOV X21, X0
	0x01CFF238 ADRP X8, 0x2251000
	0x01CFF23C LDR X8, [X8 + 0xC28]
	0x01CFF240 LDR X1, [X8]
	0x01CFF244 ADD X0, X31, 0x60
	0x01CFF248 BL 0x2A5AE88
	0x01CFF24C CBNZ X19, 0x1CFF258
	0x01CFF250 MOV X0, X21
	0x01CFF254 BL 0x1C8418C
	0x01CFF258 MOV X0, X19
	0x01CFF25C BL 0x1B6EA14
	0x01CFF260 BL 0x18F46A8
	0x01CFF264 SUB X31, X31, 0xA0
	0x01CFF268 STP X30, X27, [X31 + 0x50]
	0x01CFF26C STP X26, X25, [X31 + 0x60]
	0x01CFF270 STP X24, X23, [X31 + 0x70]
	0x01CFF274 STP X22, X21, [X31 + 0x80]
	0x01CFF278 STP X20, X19, [X31 + 0x90]
	0x01CFF27C ADRP X22, 0x2524000
	0x01CFF280 ADRP X21, 0x2250000
	0x01CFF284 ADRP X20, 0x2250000
	0x01CFF288 LDRB W8, [X22 + 0x72B]
	0x01CFF28C LDR X21, [X21 + 0x770]
	0x01CFF290 LDR X20, [X20 + 0x778]
	0x01CFF294 MOV X19, X0
	0x01CFF298 TBNZ X8, 0x0, 0x1CFF340
	0x01CFF29C ADRP X0, 0x2251000
	0x01CFF2A0 LDR X0, [X0 + 0xC20]
	0x01CFF2A4 BL 0x1B6E7F0
	0x01CFF2A8 ADRP X0, 0x2251000
	0x01CFF2AC LDR X0, [X0 + 0xC28]
	0x01CFF2B0 BL 0x1B6E7F0
	0x01CFF2B4 ADRP X0, 0x2251000
	0x01CFF2B8 LDR X0, [X0 + 0xD10]
	0x01CFF2BC BL 0x1B6E7F0
	0x01CFF2C0 ADRP X0, 0x2251000
	0x01CFF2C4 LDR X0, [X0 + 0xC30]
	0x01CFF2C8 BL 0x1B6E7F0
	0x01CFF2CC ADRP X0, 0x2251000
	0x01CFF2D0 LDR X0, [X0 + 0xD18]
	0x01CFF2D4 BL 0x1B6E7F0
	0x01CFF2D8 ADRP X0, 0x2251000
	0x01CFF2DC LDR X0, [X0 + 0xC38]
	0x01CFF2E0 BL 0x1B6E7F0
	0x01CFF2E4 ADRP X0, 0x2251000
	0x01CFF2E8 LDR X0, [X0 + 0xD20]
	0x01CFF2EC BL 0x1B6E7F0
	0x01CFF2F0 ADRP X0, 0x2251000
	0x01CFF2F4 LDR X0, [X0 + 0xD28]
	0x01CFF2F8 BL 0x1B6E7F0
	0x01CFF2FC ADRP X0, 0x2251000
	0x01CFF300 LDR X0, [X0 + 0xD30]
	0x01CFF304 BL 0x1B6E7F0
	0x01CFF308 ADRP X0, 0x2251000
	0x01CFF30C LDR X0, [X0 + 0xD38]
	0x01CFF310 BL 0x1B6E7F0
	0x01CFF314 ADRP X0, 0x2250000
	0x01CFF318 LDR X0, [X0 + 0x778]
	0x01CFF31C BL 0x1B6E7F0
	0x01CFF320 ADRP X0, 0x2250000
	0x01CFF324 LDR X0, [X0 + 0x770]
	0x01CFF328 BL 0x1B6E7F0
	0x01CFF32C ADRP X0, 0x2251000
	0x01CFF330 LDR X0, [X0 + 0xC40]
	0x01CFF334 BL 0x1B6E7F0
	0x01CFF338 MOVZ W8, 0x1
	0x01CFF33C STRB W8, [X22 + 0x72B]
	0x01CFF340 LDR X0, [X21]
	0x01CFF344 STP X31, X31, [X31 + 0x30]
	0x01CFF348 STR X31, [X31 + 0x40]
	0x01CFF34C STP X31, X31, [X31 + 0x18]
	0x01CFF350 STR X31, [X31 + 0x28]
	0x01CFF354 BL 0x1B6EA0C
	0x01CFF358 LDR X1, [X20]
	0x01CFF35C MOV X20, X0
	0x01CFF360 BL 0x2E45D4C
	0x01CFF364 LDR X8, [X19 + 0x28]
	0x01CFF368 CBZ X8, 0x1CFF4B8
	0x01CFF36C LDR X0, [X8 + 0x10]
	0x01CFF370 CBZ X0, 0x1CFF4B8
	0x01CFF374 ADRP X8, 0x2251000
	0x01CFF378 LDR X8, [X8 + 0xC20]
	0x01CFF37C LDR X1, [X8]
	0x01CFF380 BL 0x28FA168
	0x01CFF384 CBZ X0, 0x1CFF4B8
	0x01CFF388 ADRP X8, 0x2251000
	0x01CFF38C LDR X8, [X8 + 0xC40]
	0x01CFF390 ADRP X21, 0x2251000
	0x01CFF394 ADRP X26, 0x2251000
	0x01CFF398 ADRP X27, 0x2251000
	0x01CFF39C ADRP X24, 0x2251000
	0x01CFF3A0 LDR X21, [X21 + 0xC30]
	0x01CFF3A4 LDR X26, [X26 + 0xD28]
	0x01CFF3A8 LDR X27, [X27 + 0xD30]
	0x01CFF3AC LDR X24, [X24 + 0xD38]
	0x01CFF3B0 LDR X1, [X8]
	0x01CFF3B4 ADRP X23, 0x2251000
	0x01CFF3B8 ADRP X22, 0x2251000
	0x01CFF3BC ADRP X25, 0x2251000
	0x01CFF3C0 LDR X23, [X23 + 0xD18]
	0x01CFF3C4 LDR X22, [X22 + 0xD10]
	0x01CFF3C8 LDR X25, [X25 + 0xC28]
	0x01CFF3CC ADD X8, X31, 0x0
	0x01CFF3D0 BL 0x25CA7B8
	0x01CFF3D4 LDR V0, [X31]
	0x01CFF3D8 LDR X8, [X31 + 0x10]
	0x01CFF3DC STR V0, [X31 + 0x3]
	0x01CFF3E0 STR X8, [X31 + 0x40]
	0x01CFF3E4 LDR X1, [X21]
	0x01CFF3E8 ADD X0, X31, 0x30
	0x01CFF3EC BL 0x2A5AE8C
	0x01CFF3F0 TBZ X0, 0x0, 0x1CFF424
	0x01CFF3F4 LDR X8, [X31 + 0x40]
	0x01CFF3F8 CBZ X8, 0x1CFF4B0
	0x01CFF3FC LDR X0, [X8 + 0x18]
	0x01CFF400 CBZ X0, 0x1CFF4B4
	0x01CFF404 LDR X1, [X26]
	0x01CFF408 BL 0x20CFB14
	0x01CFF40C MOV X1, X0
	0x01CFF410 CBZ X20, 0x1CFF4AC
	0x01CFF414 LDR X2, [X27]
	0x01CFF418 MOV X0, X20
	0x01CFF41C BL 0x2E4671C
	0x01CFF420 B 0x1CFF3E4
	0x01CFF424 LDR X1, [X25]
	0x01CFF428 ADD X0, X31, 0x30
	0x01CFF42C BL 0x2A5AE88
	0x01CFF430 CBZ X20, 0x1CFF4B8
	0x01CFF434 LDR X1, [X24]
	0x01CFF438 ADD X8, X31, 0x18
	0x01CFF43C MOV X0, X20
	0x01CFF440 BL 0x2E470E0
	0x01CFF444 LDR X1, [X23]
	0x01CFF448 ADD X0, X31, 0x18
	0x01CFF44C BL 0x2A14F30
	0x01CFF450 TBZ X0, 0x0, 0x1CFF47C
	0x01CFF454 LDR X0, [X31 + 0x28]
	0x01CFF458 CBZ X0, 0x1CFF4A4
	0x01CFF45C MOV X1, X31
	0x01CFF460 BL 0x3A9B084
	0x01CFF464 CBZ X0, 0x1CFF4A8
	0x01CFF468 LDR X1, [X19 + 0x50]
	0x01CFF46C MOVZ W2, 0x1
	0x01CFF470 MOV X3, X31
	0x01CFF474 BL 0x3AA7F84
	0x01CFF478 B 0x1CFF444
	0x01CFF47C LDR X1, [X22]
	0x01CFF480 ADD X0, X31, 0x18
	0x01CFF484 BL 0x2A14F2C
	0x01CFF488 LDP X20, X19, [X31 + 0x90]
	0x01CFF48C LDP X22, X21, [X31 + 0x80]
	0x01CFF490 LDP X24, X23, [X31 + 0x70]
	0x01CFF494 LDP X26, X25, [X31 + 0x60]
	0x01CFF498 LDP X30, X27, [X31 + 0x50]
	0x01CFF49C ADD X31, X31, 0xA0
	0x01CFF4A0 RET
	0x01CFF4A4 BL 0x1B6EA1C
	0x01CFF4A8 BL 0x1B6EA1C
	0x01CFF4AC BL 0x1B6EA1C
	0x01CFF4B0 BL 0x1B6EA1C
	0x01CFF4B4 BL 0x1B6EA1C
	0x01CFF4B8 BL 0x1B6EA1C
	0x01CFF4BC B 0x1CFF530
	0x01CFF4C0 B 0x1CFF530
	0x01CFF4C4 B 0x1CFF530
	0x01CFF4C8 B 0x1CFF4DC
	0x01CFF4CC B 0x1CFF4DC
	0x01CFF4D0 B 0x1CFF4DC
	0x01CFF4D4 B 0x1CFF4DC
	0x01CFF4D8 B 0x1CFF530
	0x01CFF4DC CMP W1, 0x1
	0x01CFF4E0 B.NE 0x1CFF508
	0x01CFF4E4 BL 0x3D19840
	0x01CFF4E8 LDR X20, [X0]
	0x01CFF4EC BL 0x3D19850
	0x01CFF4F0 LDR X1, [X22]
	0x01CFF4F4 ADD X0, X31, 0x18
	0x01CFF4F8 BL 0x2A14F2C
	0x01CFF4FC CBZ X20, 0x1CFF488
	0x01CFF500 MOV X0, X20
	0x01CFF504 BL 0x1B6EA14
	0x01CFF508 MOV X19, X0
	0x01CFF50C MOV X20, X31
	0x01CFF510 B 0x1CFF518
	0x01CFF514 MOV X19, X0
	0x01CFF518 LDR X1, [X22]
	0x01CFF51C ADD X0, X31, 0x18
	0x01CFF520 BL 0x2A14F2C
	0x01CFF524 CBZ X20, 0x1CFF57C
	0x01CFF528 MOV X0, X20
	0x01CFF52C BL 0x1B6EA14
	0x01CFF530 CMP W1, 0x1
	0x01CFF534 B.NE 0x1CFF55C
	0x01CFF538 BL 0x3D19840
	0x01CFF53C LDR X21, [X0]
	0x01CFF540 BL 0x3D19850
	0x01CFF544 LDR X1, [X25]
	0x01CFF548 ADD X0, X31, 0x30
	0x01CFF54C BL 0x2A5AE88
	0x01CFF550 CBZ X21, 0x1CFF430
	0x01CFF554 MOV X0, X21
	0x01CFF558 BL 0x1B6EA14
	0x01CFF55C MOV X19, X0
	0x01CFF560 MOV X21, X31
	0x01CFF564 B 0x1CFF56C
	0x01CFF568 MOV X19, X0
	0x01CFF56C LDR X1, [X25]
	0x01CFF570 ADD X0, X31, 0x30
	0x01CFF574 BL 0x2A5AE88

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+96], D10
	003 Move [X31+112], D9
	004 Move [X31+120], D8
	005 Move [X31+128], X29
	006 Move [X31+136], X30
	007 Move [X31+144], X28
	008 Move [X31+152], X27
	009 Move [X31+160], X26
	010 Move [X31+168], X25
	011 Move [X31+176], X24
	012 Move [X31+184], X23
	013 Move [X31+192], X22
	014 Move [X31+200], X21
	015 Move [X31+208], X20
	016 Move [X31+216], X19
	017 Move X20, 0x2526000
	018 Move W8, [X20+1841]
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {65}
	024 Move X0, 0x2253000
	025 Move X0, [X0+3104]
	026 Call 0x1B6F7F0
	027 Move X0, 0x2253000
	028 Move X0, [X0+3112]
	029 Call 0x1B6F7F0
	030 Move X0, 0x2253000
	031 Move X0, [X0+3184]
	032 Call 0x1B6F7F0
	033 Move X0, 0x2253000
	034 Move X0, [X0+3120]
	035 Call 0x1B6F7F0
	036 Move X0, 0x2253000
	037 Move X0, [X0+3192]
	038 Call 0x1B6F7F0
	039 Move X0, 0x2253000
	040 Move X0, [X0+3200]
	041 Call 0x1B6F7F0
	042 Move X0, 0x2253000
	043 Move X0, [X0+3128]
	044 Call 0x1B6F7F0
	045 Move X0, 0x2250000
	046 Move X0, [X0+2272]
	047 Call 0x1B6F7F0
	048 Move X0, 0x2253000
	049 Move X0, [X0+3208]
	050 Call 0x1B6F7F0
	051 Move X0, 0x2253000
	052 Move X0, [X0+3136]
	053 Call 0x1B6F7F0
	054 Move X0, 0x2253000
	055 Move X0, [X0+3216]
	056 Call 0x1B6F7F0
	057 Move X0, 0x2253000
	058 Move X0, [X0+3224]
	059 Call 0x1B6F7F0
	060 Move X0, 0x2253000
	061 Move X0, [X0+3232]
	062 Call 0x1B6F7F0
	063 Move W8, 1
	064 Move [X20+1841], W8
	065 Move [X31+64], X31
	066 Move [X31+72], X31
	067 Move [X31+80], X31
	068 Move [X31+32], X31
	069 Move [X31+40], X31
	070 Move [X31+48], X31
	071 Move X8, [X19+40]
	072 Compare X8, 0
	073 JumpIfEqual {462}
	074 Move X0, [X8+16]
	075 Compare X0, 0
	076 JumpIfEqual {462}
	077 Move X8, 0x2253000
	078 Move X8, [X8+3104]
	079 Move X1, [X8]
	080 Call Dictionary`2<Object, Object>.get_Values, X0
	081 Compare X0, 0
	082 JumpIfEqual {462}
	083 Move X8, 0x2253000
	084 Move X8, [X8+3136]
	085 Move X29, 0x2253000
	086 Move X21, 0x2253000
	087 Move X23, 0x2253000
	088 Move X28, 0x2253000
	089 Move X24, 0x2250000
	090 Move X26, 0x2253000
	091 Move X29, [X29+3120]
	092 Move X21, [X21+3208]
	093 Move X23, [X23+3192]
	094 Move X28, [X28+3184]
	095 Move X24, [X24+2272]
	096 Move X26, [X26+3232]
	097 Move X1, [X8]
	098 Move X25, 0x2253000
	099 Move X27, 0x2253000
	100 Move X25, [X25+3224]
	101 Move X27, [X27+3112]
	102 Add X8, X31, 8
	103 Call ValueCollection<Object, Object>.GetEnumerator, X0
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 Move X8, [X31+24]
	106 Move [X31+4], V0
	107 Move [X31+80], X8
	108 Move X1, [X29]
	109 Add X0, X31, 64
	110 Call Enumerator<Object, Object>.MoveNext, X0
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {183}
	115 Move X22, [X31+80]
	116 Compare X22, 0
	117 JumpIfEqual {458}
	118 Move X0, [X22+24]
	119 Compare X0, 0
	120 JumpIfEqual {459}
	121 Move X1, X31
	122 Call GameObject.get_transform, X0
	123 Move X20, X0
	124 Move X0, [X19+56]
	125 Compare X0, 0
	126 JumpIfEqual {456}
	127 Move X1, X31
	128 Call Component.get_transform, X0
	129 Move X1, X0
	130 Compare X20, 0
	131 JumpIfEqual {457}
	132 Move X0, X20
	133 Move X2, X31
	134 Call Transform.set_parent, X0, X1
	135 Move X0, [X22+32]
	136 Compare X0, 0
	137 JumpIfEqual {455}
	138 Move X1, [X21]
	139 Add X8, X31, 8
	140 Call List`1<Object>.GetEnumerator, X0
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 Move X8, [X31+24]
	143 Move [X31+2], V0
	144 Move [X31+48], X8
	145 Move X1, [X23]
	146 Add X0, X31, 32
	147 Call Enumerator<Object>.MoveNext, X0
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {169}
	152 Move X0, [X31+48]
	153 Compare X0, 0
	154 JumpIfEqual {176}
	155 Move X1, X31
	156 Call Component.get_transform, X0
	157 Move X20, X0
	158 Move X0, [X22+24]
	159 Compare X0, 0
	160 JumpIfEqual {177}
	161 Move X1, X31
	162 Call GameObject.get_transform, X0
	163 Move X1, X0
	164 Compare X20, 0
	165 JumpIfEqual {175}
	166 Move X0, X20
	167 Move X2, X31
	168 Call Transform.set_parent, X0, X1
	169 Move X22, X31
	170 Move X1, [X28]
	171 Add X0, X31, 32
	172 Call Enumerator<Object>.Dispose, X0
	173 Compare X22, 0
	174 JumpIfEqual {108}
	175 Call 0x1B6FA1C
	176 Call 0x1B6FA1C
	177 Call 0x1B6FA1C
	178 Move X20, X1
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Call 0x3D1A840
	181 Move X22, [X0]
	182 Call 0x3D1A850
	183 Move X1, [X27]
	184 Add X0, X31, 64
	185 Call Enumerator<Object, Object>.Dispose, X0
	186 Move X0, [X24]
	187 Call 0x1B6FA0C
	188 Move X1, X31
	189 Move X20, X0
	190 Call GameObject..ctor, X0
	191 Compare X20, 0
	192 JumpIfEqual {462}
	193 Move X1, [X26]
	194 Move X0, X20
	195 Move X2, X31
	196 Call Object.set_name, X0, X1
	197 Move X0, X20
	198 Move X1, X31
	199 Call GameObject.get_transform, X0
	200 Move X8, [X19+56]
	201 Compare X8, 0
	202 JumpIfEqual {462}
	203 Move X21, X0
	204 Move X0, X8
	205 Move X1, X31
	206 Call Component.get_transform, X0
	207 Compare X21, 0
	208 JumpIfEqual {462}
	209 Move X1, X0
	210 Move X0, X21
	211 Move X2, X31
	212 Call Transform.set_parent, X0, X1
	213 Move X0, X20
	214 Move X1, X31
	215 Call GameObject.get_transform, X0
	216 Move X22, 0x2525000
	217 Move W8, [X22+1087]
	218 Move X21, X0
	219 Compare W8, 0
	220 JumpIfNotEqual {226}
	221 Move X0, 0x224F000
	222 Move X0, [X0+1152]
	223 Call 0x1B6F7F0
	224 Move W8, 1
	225 Move [X22+1087], W8
	226 Move X26, 0x224F000
	227 Move X26, [X26+1152]
	228 Move X23, 0x2525000
	229 Move W9, [X23+1108]
	230 Move X8, [X26]
	231 Move X8, [X8+184]
	232 Move S10, [X8]
	233 Move S9, [X8+4]
	234 Move V8, [X8+8]
	235 Compare W9, 0
	236 JumpIfNotEqual {242}
	237 Move X0, 0x2250000
	238 Move X0, [X0+504]
	239 Call 0x1B6F7F0
	240 Move W8, 1
	241 Move [X23+1108], W8
	242 Compare X21, 0
	243 JumpIfEqual {462}
	244 Move X27, 0x2250000
	245 Move X27, [X27+504]
	246 Move X0, X21
	247 Move V0, V10
	248 Move V1, V9
	249 Move X8, [X27]
	250 Move V2, V8
	251 Move X1, X31
	252 Move X8, [X8+184]
	253 Move S5, [X8+8]
	254 Move S6, [X8+12]
	255 Move S3, [X8]
	256 Move S4, [X8+4]
	257 Call Transform.SetLocalPositionAndRotation, X0, X1, X2
	258 Move X0, X20
	259 Move X1, X31
	260 Call GameObject.get_transform, X0
	261 Compare X0, 0
	262 JumpIfEqual {462}
	263 Move W1, W31
	264 Move X2, X31
	265 Call Transform.SetSiblingIndex, X0, X1
	266 Move X0, X20
	267 Move X1, X31
	268 Call GameObject.get_transform, X0
	269 Move [X19+64], X0
	270 Move X0, [X24]
	271 Call 0x1B6FA0C
	272 Move X1, X31
	273 Move X20, X0
	274 Call GameObject..ctor, X0
	275 Compare X20, 0
	276 JumpIfEqual {462}
	277 Move X1, [X25]
	278 Move X0, X20
	279 Move X2, X31
	280 Call Object.set_name, X0, X1
	281 Move X0, X20
	282 Move X1, X31
	283 Call GameObject.get_transform, X0
	284 Move X8, [X19+56]
	285 Compare X8, 0
	286 JumpIfEqual {462}
	287 Move X21, X0
	288 Move X0, X8
	289 Move X1, X31
	290 Call Component.get_transform, X0
	291 Compare X21, 0
	292 JumpIfEqual {462}
	293 Move X1, X0
	294 Move X0, X21
	295 Move X2, X31
	296 Call Transform.set_parent, X0, X1
	297 Move X0, X20
	298 Move X1, X31
	299 Call GameObject.get_transform, X0
	300 Move W8, [X22+1087]
	301 Move X21, X0
	302 Compare W8, 0
	303 JumpIfNotEqual {309}
	304 Move X0, 0x224F000
	305 Move X0, [X0+1152]
	306 Call 0x1B6F7F0
	307 Move W8, 1
	308 Move [X22+1087], W8
	309 Move X8, [X26]
	310 Move W9, [X23+1108]
	311 Move X8, [X8+184]
	312 Move S10, [X8]
	313 Move S9, [X8+4]
	314 Move V8, [X8+8]
	315 Compare W9, 0
	316 JumpIfNotEqual {322}
	317 Move X0, 0x2250000
	318 Move X0, [X0+504]
	319 Call 0x1B6F7F0
	320 Move W8, 1
	321 Move [X23+1108], W8
	322 Compare X21, 0
	323 JumpIfEqual {462}
	324 Move X8, [X27]
	325 Move X0, X21
	326 Move V0, V10
	327 Move V1, V9
	328 Move X8, [X8+184]
	329 Move V2, V8
	330 Move X1, X31
	331 Move S5, [X8+8]
	332 Move S6, [X8+12]
	333 Move S3, [X8]
	334 Move S4, [X8+4]
	335 Call Transform.SetLocalPositionAndRotation, X0, X1, X2
	336 Move X0, X20
	337 Move X1, X31
	338 Call GameObject.get_transform, X0
	339 Compare X0, 0
	340 JumpIfEqual {462}
	341 Move W1, W31
	342 Move X2, X31
	343 Call Transform.SetSiblingIndex, X0, X1
	344 Move X0, X20
	345 Move X1, X31
	346 Call GameObject.get_transform, X0
	347 Move [X19+72], X0
	348 Move X0, [X24]
	349 Call 0x1B6FA0C
	350 Move X1, X31
	351 Move X20, X0
	352 Call GameObject..ctor, X0
	353 Compare X20, 0
	354 JumpIfEqual {462}
	355 Move X8, 0x2252000
	356 Move X8, [X8+3216]
	357 Move X0, X20
	358 Move X2, X31
	359 Move X1, [X8]
	360 Call Object.set_name, X0, X1
	361 Move X0, X20
	362 Move X1, X31
	363 Call GameObject.get_transform, X0
	364 Move X8, [X19+56]
	365 Compare X8, 0
	366 JumpIfEqual {462}
	367 Move X21, X0
	368 Move X0, X8
	369 Move X1, X31
	370 Call Component.get_transform, X0
	371 Compare X21, 0
	372 JumpIfEqual {462}
	373 Move X1, X0
	374 Move X0, X21
	375 Move X2, X31
	376 Call Transform.set_parent, X0, X1
	377 Move X0, X20
	378 Move X1, X31
	379 Call GameObject.get_transform, X0
	380 Move W8, [X22+1087]
	381 Move X21, X0
	382 Compare W8, 0
	383 JumpIfNotEqual {389}
	384 Move X0, 0x224F000
	385 Move X0, [X0+1152]
	386 Call 0x1B6F7F0
	387 Move W8, 1
	388 Move [X22+1087], W8
	389 Move X8, [X26]
	390 Move W9, [X23+1108]
	391 Move X8, [X8+184]
	392 Move S10, [X8]
	393 Move S9, [X8+4]
	394 Move V8, [X8+8]
	395 Compare W9, 0
	396 JumpIfNotEqual {402}
	397 Move X0, 0x2250000
	398 Move X0, [X0+504]
	399 Call 0x1B6F7F0
	400 Move W8, 1
	401 Move [X23+1108], W8
	402 Compare X21, 0
	403 JumpIfEqual {462}
	404 Move X8, [X27]
	405 Move X0, X21
	406 Move V0, V10
	407 Move V1, V9
	408 Move X8, [X8+184]
	409 Move V2, V8
	410 Move X1, X31
	411 Move S5, [X8+8]
	412 Move S6, [X8+12]
	413 Move S3, [X8]
	414 Move S4, [X8+4]
	415 Call Transform.SetLocalPositionAndRotation, X0, X1, X2
	416 Move X0, X20
	417 Move X1, X31
	418 Call GameObject.get_transform, X0
	419 Compare X0, 0
	420 JumpIfEqual {462}
	421 Move W1, W31
	422 Move X2, X31
	423 Call Transform.SetSiblingIndex, X0, X1
	424 Move X0, X20
	425 Move X1, X31
	426 Call GameObject.get_transform, X0
	427 Move [X19+80], X0
	428 Move X20, [X31+208]
	429 Move X19, [X31+216]
	430 Move X22, [X31+192]
	431 Move X21, [X31+200]
	432 Move X24, [X31+176]
	433 Move X23, [X31+184]
	434 Move X26, [X31+160]
	435 Move X25, [X31+168]
	436 Move X28, [X31+144]
	437 Move X27, [X31+152]
	438 Move X29, [X31+128]
	439 Move X30, [X31+136]
	440 Move D9, [X31+112]
	441 Move D8, [X31+120]
	442 Move V10, [X31+96]
	443 Add X31, X31, 224
	444 Return 
	445 Move X21, X0
	446 Move X22, X31
	447 Move X1, [X28]
	448 Add X0, X31, 32
	449 Call Enumerator<Object>.Dispose, X0
	450 Move X0, X21
	451 Compare X22, 0
	452 JumpIfEqual {466}
	453 Move X0, X22
	454 Call 0x1B6FA14
	455 Call 0x1B6FA1C
	456 Call 0x1B6FA1C
	457 Call 0x1B6FA1C
	458 Call 0x1B6FA1C
	459 Call 0x1B6FA1C
	460 Move X0, X22
	461 Call 0x1B6FA14
	462 Call 0x1B6FA1C
	463 Move X20, X1
	464 Move X21, X0
	465 Move X20, X1
	466 NotImplemented "Instruction CMP not yet implemented."
	467 Call 0x3D1A840
	468 Move X21, [X0]
	469 Call 0x3D1A850
	470 Move X1, [X27]
	471 Add X0, X31, 64
	472 Call Enumerator<Object, Object>.Dispose, X0
	473 Compare X21, 0
	474 JumpIfEqual {186}
	475 Move X0, X21
	476 Call 0x1B6FA14
	477 Move X19, X0
	478 Move X21, X31
	479 Move X19, X0
	480 Move X1, [X27]
	481 Add X0, X31, 64
	482 Call Enumerator<Object, Object>.Dispose, X0
	483 Compare X21, 0
	484 JumpIfNotEqual {487}
	485 Move X0, X19
	486 Call 0x1C8518C
	487 Move X0, X21
	488 Call 0x1B6FA14
	489 Call 0x18F56A8

