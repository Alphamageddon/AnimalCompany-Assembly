Type: AnimalCompany.GameGen.Generator

Method: AnimalCompany.GameGen.Generator get_activeGenerator()

Disassembly:
	0x01E11394 BL 0x3C3FD20
	0x01E11398 B 0x1E11350
	0x01E1139C MOV X22, X31
	0x01E113A0 LDR X1, [X28]

ISIL:
	001 Move X8, [X0+16]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSEL not yet implemented."
	004 Return X0

Method: AnimalCompany.GameGen.Socket get_origin()

Disassembly:
	0x01E113A4 ADD X0, X31, 0x20
	0x01E113A8 BL 0x2BC434C

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_origin(AnimalCompany.GameGen.Socket value)

Disassembly:
	0x01E113AC CBZ X22, 0x1E112DC
	0x01E113B0 B 0x1E117B8

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: System.Void .ctor(AnimalCompany.GameGen.GenGraph graph)

Disassembly:
	0x01E113B4 BL 0x1C16F20
	0x01E113B8 B 0x1E117C4
	0x01E113BC BL 0x1C16F20
	0x01E113C0 B 0x1E117C4
	0x01E113C4 BL 0x1C16F20
	0x01E113C8 B 0x1E117C4
	0x01E113CC B 0x1E113E0
	0x01E113D0 B 0x1E113E0
	0x01E113D4 B 0x1E113E0
	0x01E113D8 B 0x1E113E0
	0x01E113DC B 0x1E113E0
	0x01E113E0 MOV X20, X1
	0x01E113E4 CMP W20, 0x1
	0x01E113E8 B.NE 0x1E11780
	0x01E113EC BL 0x3EB1AD0
	0x01E113F0 LDR X22, [X0]
	0x01E113F4 BL 0x3EB1AE0
	0x01E113F8 B 0x1E113A0
	0x01E113FC LDR X1, [X27]
	0x01E11400 ADD X0, X31, 0x40
	0x01E11404 BL 0x2C0B1EC
	0x01E11408 LDR X0, [X24]
	0x01E1140C BL 0x1C16F10
	0x01E11410 MOV X1, X31
	0x01E11414 MOV X20, X0
	0x01E11418 BL 0x3C35A08
	0x01E1141C CBZ X20, 0x1E117C0
	0x01E11420 LDR X1, [X26]
	0x01E11424 MOV X0, X20
	0x01E11428 MOV X2, X31
	0x01E1142C BL 0x3C38A84
	0x01E11430 MOV X0, X20
	0x01E11434 MOV X1, X31
	0x01E11438 BL 0x3C356F8
	0x01E1143C LDR X8, [X19 + 0x38]
	0x01E11440 CBZ X8, 0x1E117C0
	0x01E11444 MOV X21, X0
	0x01E11448 MOV X0, X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x25C8000
	008 Move X23, 0x22E9000
	009 Move X21, 0x22E9000
	010 Move W8, [X22+3559]
	011 Move X23, [X23+2768]
	012 Move X21, [X21+2744]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x22E9000
	020 Move X0, [X0+2744]
	021 Call 0x1C17CF4
	022 Move X0, 0x22E9000
	023 Move X0, [X0+2768]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+3559], W8
	027 Move X0, [X23]
	028 Call 0x1C17F10
	029 Move X1, [X21]
	030 Move X21, X0
	031 Call List`1<Bounds>..ctor, X0
	032 Move X0, X19
	033 Move X1, X31
	034 Move [X19+48], X21
	035 Call Object..ctor, X0
	036 Move [X19+24], X20
	037 Compare X20, 0
	038 JumpIfEqual {48}
	039 Move W8, [X20+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move [X19+36], W8
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X30, [X31+48]
	046 Move X23, [X31+56]
	047 Return 
	048 Call 0x1C17F20

Method: UnityEngine.Bounds GetTotalBounds()

Disassembly:
	0x01E1144C MOV X1, X31
	0x01E11450 BL 0x3C32E90
	0x01E11454 CBZ X21, 0x1E117C0
	0x01E11458 MOV X1, X0
	0x01E1145C MOV X0, X21
	0x01E11460 MOV X2, X31
	0x01E11464 BL 0x3C3FD20
	0x01E11468 MOV X0, X20
	0x01E1146C MOV X1, X31
	0x01E11470 BL 0x3C356F8
	0x01E11474 ADRP X22, 0x25C7000
	0x01E11478 LDRB W8, [X22 + 0x783]
	0x01E1147C MOV X21, X0
	0x01E11480 CBNZ W8, 0x1E11498
	0x01E11484 ADRP X0, 0x22E2000
	0x01E11488 LDR X0, [X0 + 0x5A0]
	0x01E1148C BL 0x1C16CF4
	0x01E11490 MOVZ W8, 0x1
	0x01E11494 STRB W8, [X22 + 0x783]
	0x01E11498 ADRP X26, 0x22E2000
	0x01E1149C LDR X26, [X26 + 0x5A0]
	0x01E114A0 ADRP X23, 0x25C7000
	0x01E114A4 LDRB W9, [X23 + 0x793]
	0x01E114A8 LDR X8, [X26]
	0x01E114AC LDR X8, [X8 + 0xB8]
	0x01E114B0 LDP S10, S9, [X8]
	0x01E114B4 LDR V8, [X8 + 0x8]
	0x01E114B8 CBNZ W9, 0x1E114D0
	0x01E114BC ADRP X0, 0x22E3000
	0x01E114C0 LDR X0, [X0 + 0x5A8]
	0x01E114C4 BL 0x1C16CF4
	0x01E114C8 MOVZ W8, 0x1
	0x01E114CC STRB W8, [X23 + 0x793]
	0x01E114D0 CBZ X21, 0x1E117C0
	0x01E114D4 ADRP X27, 0x22E3000
	0x01E114D8 LDR X27, [X27 + 0x5A8]
	0x01E114DC MOV X0, X21
	0x01E114E0 MOV V0.16B, V10.16B
	0x01E114E4 MOV V1.16B, V9.16B
	0x01E114E8 LDR X8, [X27]
	0x01E114EC MOV V2.16B, V8.16B
	0x01E114F0 MOV X1, X31
	0x01E114F4 LDR X8, [X8 + 0xB8]
	0x01E114F8 LDP S5, S6, [X8 + 0x8]
	0x01E114FC LDP S3, S4, [X8]
	0x01E11500 BL 0x3C400B4
	0x01E11504 MOV X0, X20
	0x01E11508 MOV X1, X31
	0x01E1150C BL 0x3C356F8
	0x01E11510 CBZ X0, 0x1E117C0
	0x01E11514 MOV W1, W31
	0x01E11518 MOV X2, X31
	0x01E1151C BL 0x3C40D40
	0x01E11520 MOV X0, X20
	0x01E11524 MOV X1, X31
	0x01E11528 BL 0x3C356F8
	0x01E1152C STR X0, [X19 + 0x40]
	0x01E11530 LDR X0, [X24]
	0x01E11534 BL 0x1C16F10
	0x01E11538 MOV X1, X31
	0x01E1153C MOV X20, X0
	0x01E11540 BL 0x3C35A08
	0x01E11544 CBZ X20, 0x1E117C0
	0x01E11548 LDR X1, [X25]
	0x01E1154C MOV X0, X20
	0x01E11550 MOV X2, X31
	0x01E11554 BL 0x3C38A84
	0x01E11558 MOV X0, X20
	0x01E1155C MOV X1, X31
	0x01E11560 BL 0x3C356F8
	0x01E11564 LDR X8, [X19 + 0x38]
	0x01E11568 CBZ X8, 0x1E117C0
	0x01E1156C MOV X21, X0
	0x01E11570 MOV X0, X8
	0x01E11574 MOV X1, X31
	0x01E11578 BL 0x3C32E90
	0x01E1157C CBZ X21, 0x1E117C0
	0x01E11580 MOV X1, X0
	0x01E11584 MOV X0, X21
	0x01E11588 MOV X2, X31
	0x01E1158C BL 0x3C3FD20
	0x01E11590 MOV X0, X20
	0x01E11594 MOV X1, X31
	0x01E11598 BL 0x3C356F8
	0x01E1159C LDRB W8, [X22 + 0x783]
	0x01E115A0 MOV X21, X0
	0x01E115A4 CBNZ W8, 0x1E115BC
	0x01E115A8 ADRP X0, 0x22E2000
	0x01E115AC LDR X0, [X0 + 0x5A0]
	0x01E115B0 BL 0x1C16CF4
	0x01E115B4 MOVZ W8, 0x1
	0x01E115B8 STRB W8, [X22 + 0x783]
	0x01E115BC LDR X8, [X26]
	0x01E115C0 LDRB W9, [X23 + 0x793]
	0x01E115C4 LDR X8, [X8 + 0xB8]
	0x01E115C8 LDP S10, S9, [X8]
	0x01E115CC LDR V8, [X8 + 0x8]
	0x01E115D0 CBNZ W9, 0x1E115E8
	0x01E115D4 ADRP X0, 0x22E3000
	0x01E115D8 LDR X0, [X0 + 0x5A8]
	0x01E115DC BL 0x1C16CF4
	0x01E115E0 MOVZ W8, 0x1
	0x01E115E4 STRB W8, [X23 + 0x793]
	0x01E115E8 CBZ X21, 0x1E117C0
	0x01E115EC LDR X8, [X27]
	0x01E115F0 MOV X0, X21
	0x01E115F4 MOV V0.16B, V10.16B
	0x01E115F8 MOV V1.16B, V9.16B
	0x01E115FC LDR X8, [X8 + 0xB8]
	0x01E11600 MOV V2.16B, V8.16B
	0x01E11604 MOV X1, X31
	0x01E11608 LDP S5, S6, [X8 + 0x8]
	0x01E1160C LDP S3, S4, [X8]
	0x01E11610 BL 0x3C400B4
	0x01E11614 MOV X0, X20
	0x01E11618 MOV X1, X31
	0x01E1161C BL 0x3C356F8
	0x01E11620 CBZ X0, 0x1E117C0
	0x01E11624 MOV W1, W31
	0x01E11628 MOV X2, X31
	0x01E1162C BL 0x3C40D40
	0x01E11630 MOV X0, X20
	0x01E11634 MOV X1, X31
	0x01E11638 BL 0x3C356F8
	0x01E1163C STR X0, [X19 + 0x48]
	0x01E11640 LDR X0, [X24]
	0x01E11644 BL 0x1C16F10
	0x01E11648 MOV X1, X31
	0x01E1164C MOV X20, X0
	0x01E11650 BL 0x3C35A08
	0x01E11654 CBZ X20, 0x1E117C0
	0x01E11658 ADRP X8, 0x22E8000
	0x01E1165C LDR X8, [X8 + 0xF50]
	0x01E11660 MOV X0, X20
	0x01E11664 MOV X2, X31
	0x01E11668 LDR X1, [X8]
	0x01E1166C BL 0x3C38A84
	0x01E11670 MOV X0, X20
	0x01E11674 MOV X1, X31
	0x01E11678 BL 0x3C356F8
	0x01E1167C LDR X8, [X19 + 0x38]
	0x01E11680 CBZ X8, 0x1E117C0
	0x01E11684 MOV X21, X0
	0x01E11688 MOV X0, X8
	0x01E1168C MOV X1, X31
	0x01E11690 BL 0x3C32E90
	0x01E11694 CBZ X21, 0x1E117C0
	0x01E11698 MOV X1, X0
	0x01E1169C MOV X0, X21
	0x01E116A0 MOV X2, X31
	0x01E116A4 BL 0x3C3FD20
	0x01E116A8 MOV X0, X20
	0x01E116AC MOV X1, X31
	0x01E116B0 BL 0x3C356F8
	0x01E116B4 LDRB W8, [X22 + 0x783]
	0x01E116B8 MOV X21, X0
	0x01E116BC CBNZ W8, 0x1E116D4
	0x01E116C0 ADRP X0, 0x22E2000
	0x01E116C4 LDR X0, [X0 + 0x5A0]
	0x01E116C8 BL 0x1C16CF4
	0x01E116CC MOVZ W8, 0x1
	0x01E116D0 STRB W8, [X22 + 0x783]
	0x01E116D4 LDR X8, [X26]
	0x01E116D8 LDRB W9, [X23 + 0x793]
	0x01E116DC LDR X8, [X8 + 0xB8]
	0x01E116E0 LDP S10, S9, [X8]
	0x01E116E4 LDR V8, [X8 + 0x8]
	0x01E116E8 CBNZ W9, 0x1E11700
	0x01E116EC ADRP X0, 0x22E3000
	0x01E116F0 LDR X0, [X0 + 0x5A8]
	0x01E116F4 BL 0x1C16CF4
	0x01E116F8 MOVZ W8, 0x1
	0x01E116FC STRB W8, [X23 + 0x793]
	0x01E11700 CBZ X21, 0x1E117C0
	0x01E11704 LDR X8, [X27]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], D14
	003 Move [X31+112], D13
	004 Move [X31+120], D12
	005 Move [X31+128], D11
	006 Move [X31+136], D10
	007 Move [X31+144], D9
	008 Move [X31+152], D8
	009 Move [X31+160], X30
	010 Move [X31+168], X21
	011 Move [X31+176], X20
	012 Move [X31+184], X19
	013 Move X21, 0x25C8000
	014 Move W9, [X21+3560]
	015 Move X20, X0
	016 Move X19, X8
	017 Move TEMP, X9
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0x22E9000
	022 Move X0, [X0+2456]
	023 Call 0x1C17CF4
	024 Move X0, 0x22E9000
	025 Move X0, [X0+2464]
	026 Call 0x1C17CF4
	027 Move X0, 0x22E9000
	028 Move X0, [X0+2472]
	029 Call 0x1C17CF4
	030 Move X0, 0x22E9000
	031 Move X0, [X0+2480]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+3560], W8
	035 Move X21, 0x25C8000
	036 Move W8, [X21+1923]
	037 NotImplemented "Instruction MOVI not yet implemented."
	038 Move [X31+80], X31
	039 Move [X31+48], V0
	040 Move [X31+56], V0
	041 Compare W8, 0
	042 JumpIfNotEqual {48}
	043 Move X0, 0x22E3000
	044 Move X0, [X0+1440]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X21+1923], W8
	048 Move X0, [X20+48]
	049 Compare X0, 0
	050 JumpIfEqual {172}
	051 Move X8, 0x22E3000
	052 Move X8, [X8+1440]
	053 Move X9, 0x22E9000
	054 Move X21, 0x22E9000
	055 Move X20, 0x22E9000
	056 Move X8, [X8]
	057 Move X9, [X9+2480]
	058 Move S8, 0.5
	059 Move X8, [X8+184]
	060 Move X21, [X21+2464]
	061 Move X20, [X20+2456]
	062 Move X1, [X9]
	063 Move S12, [X8+4]
	064 Move S10, [X8+8]
	065 Move V14, [X8]
	066 Add X8, X31, 8
	067 Multiply S9, S10, S8
	068 Multiply S11, S12, S8
	069 Multiply S13, S14, S8
	070 Call List`1<Bounds>.GetEnumerator, X0
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 Move X8, [X31+40]
	074 Move [X31+48], V0
	075 Move [X31+56], V1
	076 Move [X31+80], X8
	077 Move X1, [X21]
	078 Add X0, X31, 48
	079 Call Enumerator<Bounds>.MoveNext, X0
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {150}
	084 Move S0, [X31+64]
	085 Move S1, [X31+68]
	086 Move S2, [X31+72]
	087 Move S3, [X31+76]
	088 Move S4, [X31+80]
	089 Move S5, [X31+84]
	090 Subtract S6, S14, S13
	091 Subtract S7, S12, S11
	092 Subtract S20, S0, S3
	093 Subtract S21, S1, S4
	094 NotImplemented "Instruction FCMP not yet implemented."
	095 Subtract S16, S10, S9
	096 Subtract S22, S2, S5
	097 Add S0, S0, S3
	098 NotImplemented "Instruction FCSEL not yet implemented."
	099 NotImplemented "Instruction FCMP not yet implemented."
	100 Add S17, S13, S14
	101 Add S1, S1, S4
	102 NotImplemented "Instruction FCSEL not yet implemented."
	103 NotImplemented "Instruction FCMP not yet implemented."
	104 Add S18, S11, S12
	105 Add S2, S2, S5
	106 NotImplemented "Instruction FCSEL not yet implemented."
	107 NotImplemented "Instruction FCMP not yet implemented."
	108 Add S19, S9, S10
	109 NotImplemented "Instruction FCSEL not yet implemented."
	110 NotImplemented "Instruction FCMP not yet implemented."
	111 NotImplemented "Instruction FCSEL not yet implemented."
	112 NotImplemented "Instruction FCMP not yet implemented."
	113 Subtract S6, S6, S3
	114 NotImplemented "Instruction FCSEL not yet implemented."
	115 Subtract S7, S7, S4
	116 Multiply S6, S6, S8
	117 Subtract S16, S16, S5
	118 Multiply S7, S7, S8
	119 Add S3, S3, S6
	120 Multiply S16, S16, S8
	121 Add S4, S4, S7
	122 Subtract S17, S3, S6
	123 Add S3, S6, S3
	124 Add S5, S5, S16
	125 Subtract S6, S4, S7
	126 NotImplemented "Instruction FCMP not yet implemented."
	127 Add S4, S7, S4
	128 Subtract S7, S5, S16
	129 NotImplemented "Instruction FCSEL not yet implemented."
	130 NotImplemented "Instruction FCMP not yet implemented."
	131 NotImplemented "Instruction FCSEL not yet implemented."
	132 NotImplemented "Instruction FCMP not yet implemented."
	133 NotImplemented "Instruction FCSEL not yet implemented."
	134 NotImplemented "Instruction FCMP not yet implemented."
	135 Add S5, S16, S5
	136 NotImplemented "Instruction FCSEL not yet implemented."
	137 NotImplemented "Instruction FCMP not yet implemented."
	138 NotImplemented "Instruction FCSEL not yet implemented."
	139 NotImplemented "Instruction FCMP not yet implemented."
	140 Subtract S0, S0, S17
	141 NotImplemented "Instruction FCSEL not yet implemented."
	142 Subtract S1, S1, S6
	143 Multiply S13, S0, S8
	144 Subtract S0, S2, S7
	145 Multiply S11, S1, S8
	146 Multiply S9, S0, S8
	147 Add S14, S17, S13
	148 Add S12, S6, S11
	149 Add S10, S7, S9
	150 Move X1, [X20]
	151 Add X0, X31, 48
	152 Call Enumerator<Bounds>.Dispose, X0
	153 Move [X19], S14
	154 Move [X19+8], S12
	155 Move [X19+8], S10
	156 Move [X19+16], S13
	157 Move [X19+16], S11
	158 Move [X19+24], S9
	159 Move X20, [X31+176]
	160 Move X19, [X31+184]
	161 Move X30, [X31+160]
	162 Move X21, [X31+168]
	163 Move D9, [X31+144]
	164 Move D8, [X31+152]
	165 Move D11, [X31+128]
	166 Move D10, [X31+136]
	167 Move D13, [X31+112]
	168 Move D12, [X31+120]
	169 Move V14, [X31+96]
	170 Add X31, X31, 192
	171 Return X0
	172 Call 0x1C17F20
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X21, X0
	175 Move X0, X21
	176 Call 0x3EB2AD0
	177 Move X20, [X0]
	178 Call 0x3EB2AE0
	179 Move X8, 0x22E9000
	180 Move X8, [X8+2456]
	181 Add X0, X31, 48
	182 Move X1, [X8]
	183 Call Enumerator<Bounds>.Dispose, X0
	184 Compare X20, 0
	185 JumpIfEqual {153}
	186 Move X0, X20
	187 Call 0x1C17F18
	188 Move X20, X31
	189 Move X21, X0
	190 Move X8, 0x22E9000
	191 Move X8, [X8+2456]
	192 Move X1, [X8]
	193 Add X0, X31, 48
	194 Call Enumerator<Bounds>.Dispose, X0
	195 Compare X20, 0
	196 JumpIfNotEqual {199}
	197 Move X0, X21
	198 Call 0x1D2D690
	199 Move X0, X20
	200 Call 0x1C17F18
	201 Call 0x1991590

Method: System.Boolean GenerateAsSubNode(AnimalCompany.GameGen.Socket origin, AnimalCompany.GameGen.Generator mainGenerator)

Disassembly:
	0x01E11708 MOV X0, X21
	0x01E1170C MOV V0.16B, V10.16B
	0x01E11710 MOV V1.16B, V9.16B
	0x01E11714 LDR X8, [X8 + 0xB8]
	0x01E11718 MOV V2.16B, V8.16B
	0x01E1171C MOV X1, X31
	0x01E11720 LDP S5, S6, [X8 + 0x8]
	0x01E11724 LDP S3, S4, [X8]
	0x01E11728 BL 0x3C400B4
	0x01E1172C MOV X0, X20
	0x01E11730 MOV X1, X31
	0x01E11734 BL 0x3C356F8
	0x01E11738 CBZ X0, 0x1E117C0
	0x01E1173C MOV W1, W31
	0x01E11740 MOV X2, X31
	0x01E11744 BL 0x3C40D40
	0x01E11748 MOV X0, X20
	0x01E1174C MOV X1, X31
	0x01E11750 BL 0x3C356F8
	0x01E11754 STR X0, [X19 + 0x50]
	0x01E11758 LDP X20, X19, [X31 + 0xD0]
	0x01E1175C LDP X22, X21, [X31 + 0xC0]
	0x01E11760 LDP X24, X23, [X31 + 0xB0]
	0x01E11764 LDP X26, X25, [X31 + 0xA0]
	0x01E11768 LDP X28, X27, [X31 + 0x90]
	0x01E1176C LDP X29, X30, [X31 + 0x80]
	0x01E11770 LDP D9, D8, [X31 + 0x70]
	0x01E11774 LDR V10, [X31 + 0x60]
	0x01E11778 ADD X31, X31, 0xE0
	0x01E1177C RET
	0x01E11780 MOV X21, X0
	0x01E11784 MOV X22, X31
	0x01E11788 LDR X1, [X28]
	0x01E1178C ADD X0, X31, 0x20
	0x01E11790 BL 0x2BC434C
	0x01E11794 MOV X0, X21
	0x01E11798 CBZ X22, 0x1E117FC
	0x01E1179C MOV X0, X22
	0x01E117A0 BL 0x1C16F18
	0x01E117A4 BL 0x1C16F20
	0x01E117A8 BL 0x1C16F20
	0x01E117AC BL 0x1C16F20
	0x01E117B0 BL 0x1C16F20
	0x01E117B4 BL 0x1C16F20
	0x01E117B8 MOV X0, X22
	0x01E117BC BL 0x1C16F18
	0x01E117C0 BL 0x1C16F20
	0x01E117C4 MOV X20, X1
	0x01E117C8 MOV X21, X0
	0x01E117CC B 0x1E11788
	0x01E117D0 B 0x1E117F8
	0x01E117D4 B 0x1E117F8
	0x01E117D8 B 0x1E117F8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x25C8000
	008 Move X22, 0x22E3000
	009 Move W8, [X23+3561]
	010 Move X22, [X22+1432]
	011 Move X20, X2
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x22E9000
	019 Move X0, [X0+3720]
	020 Call 0x1C17CF4
	021 Move X0, 0x22E3000
	022 Move X0, [X0+1432]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+3561], W8
	026 Move X0, [X22]
	027 Move X22, [X19+24]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X22
	033 Move X1, X31
	034 Move X2, X31
	035 Call Object.op_Equality, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {48}
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move W0, W31
	045 Move X30, [X31+48]
	046 Move X23, [X31+56]
	047 Return X0
	048 Move [X19+16], X20
	049 Move [X19+56], X21
	050 Move X8, 0x22E9000
	051 Move X8, [X8+3720]
	052 Move X0, [X8]
	053 Call 0x1C17F10
	054 Move X21, X0
	055 Call GraphGenerationResult..ctor, X0
	056 Move [X19+40], X21
	057 Compare X20, 0
	058 JumpIfEqual {69}
	059 Move X8, [X20+48]
	060 Move [X19+32], W31
	061 Move X0, X19
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move [X19+48], X8
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X30, [X31+48]
	068 Move X23, [X31+56]
	069 Call 0x1C17F20

Method: System.Boolean Generate(AnimalCompany.GameGen.Socket origin, System.Collections.Generic.List`1<UnityEngine.Bounds> bounds, System.Int32 seed, System.Int32 navZoneOffset, System.Boolean isMasterClientGen, System.Boolean deleteOnFailure = True)

Disassembly:
	0x01E11A38 MOVZ W0, 0x1
	0x01E11A3C ADD X31, X31, 0xA0
	0x01E11A40 RET
	0x01E11A44 STR X1, [X31]
	0x01E11A48 STR X0, [X31 + 0x68]
	0x01E11A4C MOV X19, X31
	0x01E11A50 LDR X1, [X21]
	0x01E11A54 ADD X0, X31, 0x20
	0x01E11A58 BL 0x2BC434C
	0x01E11A5C LDR X0, [X31 + 0x68]
	0x01E11A60 LDR X1, [X31]
	0x01E11A64 CBZ X19, 0x1E11AA4
	0x01E11A68 MOV X0, X19
	0x01E11A6C BL 0x1C16F18
	0x01E11A70 BL 0x1C16F20
	0x01E11A74 BL 0x1C16F20
	0x01E11A78 MOV X0, X19
	0x01E11A7C BL 0x1C16F18
	0x01E11A80 BL 0x1C16F20
	0x01E11A84 STR X1, [X31]
	0x01E11A88 STR X0, [X31 + 0x68]
	0x01E11A8C B 0x1E11A50
	0x01E11A90 B 0x1E11AA4
	0x01E11A94 B 0x1E11AA4
	0x01E11A98 B 0x1E11AA4
	0x01E11A9C B 0x1E11AA4
	0x01E11AA0 B 0x1E11AA4
	0x01E11AA4 CMP W1, 0x1
	0x01E11AA8 B.NE 0x1E11AD0
	0x01E11AAC BL 0x3EB1AD0
	0x01E11AB0 LDR X19, [X0]
	0x01E11AB4 BL 0x3EB1AE0
	0x01E11AB8 LDR X1, [X20]
	0x01E11ABC ADD X0, X31, 0x40
	0x01E11AC0 BL 0x2C0B1EC
	0x01E11AC4 CBZ X19, 0x1E11A28
	0x01E11AC8 MOV X0, X19
	0x01E11ACC BL 0x1C16F18
	0x01E11AD0 STR X0, [X31 + 0x68]
	0x01E11AD4 MOV X19, X31
	0x01E11AD8 B 0x1E11AE0
	0x01E11ADC STR X0, [X31 + 0x68]
	0x01E11AE0 LDR X1, [X20]
	0x01E11AE4 ADD X0, X31, 0x40
	0x01E11AE8 BL 0x2C0B1EC
	0x01E11AEC CBNZ X19, 0x1E11AF8
	0x01E11AF0 LDR X0, [X31 + 0x68]
	0x01E11AF4 BL 0x1D2C690
	0x01E11AF8 MOV X0, X19
	0x01E11AFC BL 0x1C16F18
	0x01E11B00 BL 0x1990590
	0x01E11B04 SUB X31, X31, 0xD0
	0x01E11B08 STP X29, X30, [X31 + 0x70]
	0x01E11B0C STP X28, X27, [X31 + 0x80]
	0x01E11B10 STP X26, X25, [X31 + 0x90]
	0x01E11B14 STP X24, X23, [X31 + 0xA0]
	0x01E11B18 STP X22, X21, [X31 + 0xB0]
	0x01E11B1C STP X20, X19, [X31 + 0xC0]
	0x01E11B20 ADRP X20, 0x25C7000
	0x01E11B24 LDRB W8, [X20 + 0xDEF]
	0x01E11B28 MOV X19, X0
	0x01E11B2C TBNZ X8, 0x0, 0x1E11BD4
	0x01E11B30 ADRP X0, 0x22E8000
	0x01E11B34 LDR X0, [X0 + 0xEE0]
	0x01E11B38 BL 0x1C16CF4
	0x01E11B3C ADRP X0, 0x22E8000
	0x01E11B40 LDR X0, [X0 + 0xF68]
	0x01E11B44 BL 0x1C16CF4
	0x01E11B48 ADRP X0, 0x22E8000
	0x01E11B4C LDR X0, [X0 + 0xF70]
	0x01E11B50 BL 0x1C16CF4
	0x01E11B54 ADRP X0, 0x22E8000
	0x01E11B58 LDR X0, [X0 + 0xF78]
	0x01E11B5C BL 0x1C16CF4
	0x01E11B60 ADRP X0, 0x22E8000
	0x01E11B64 LDR X0, [X0 + 0xEE8]
	0x01E11B68 BL 0x1C16CF4
	0x01E11B6C ADRP X0, 0x22E8000
	0x01E11B70 LDR X0, [X0 + 0xF80]
	0x01E11B74 BL 0x1C16CF4
	0x01E11B78 ADRP X0, 0x22E8000
	0x01E11B7C LDR X0, [X0 + 0xEF0]
	0x01E11B80 BL 0x1C16CF4
	0x01E11B84 ADRP X0, 0x22E8000
	0x01E11B88 LDR X0, [X0 + 0xF88]
	0x01E11B8C BL 0x1C16CF4
	0x01E11B90 ADRP X0, 0x22E8000
	0x01E11B94 LDR X0, [X0 + 0xEF8]
	0x01E11B98 BL 0x1C16CF4
	0x01E11B9C ADRP X0, 0x22E8000
	0x01E11BA0 LDR X0, [X0 + 0xF90]
	0x01E11BA4 BL 0x1C16CF4
	0x01E11BA8 ADRP X0, 0x22E8000
	0x01E11BAC LDR X0, [X0 + 0xF98]
	0x01E11BB0 BL 0x1C16CF4
	0x01E11BB4 ADRP X0, 0x22E8000
	0x01E11BB8 LDR X0, [X0 + 0xFA0]
	0x01E11BBC BL 0x1C16CF4
	0x01E11BC0 ADRP X0, 0x22E8000
	0x01E11BC4 LDR X0, [X0 + 0xF00]
	0x01E11BC8 BL 0x1C16CF4
	0x01E11BCC MOVZ W8, 0x1
	0x01E11BD0 STRB W8, [X20 + 0xDEF]
	0x01E11BD4 STP X31, X31, [X31 + 0x50]
	0x01E11BD8 STR X31, [X31 + 0x60]
	0x01E11BDC STP X31, X31, [X31 + 0x30]
	0x01E11BE0 STR X31, [X31 + 0x40]
	0x01E11BE4 LDR X8, [X19 + 0x28]
	0x01E11BE8 CBZ X8, 0x1E11DBC
	0x01E11BEC LDR X0, [X8 + 0x10]
	0x01E11BF0 CBZ X0, 0x1E11DBC
	0x01E11BF4 ADRP X8, 0x22E8000
	0x01E11BF8 LDR X8, [X8 + 0xEE0]
	0x01E11BFC LDR X1, [X8]
	0x01E11C00 BL 0x2AA4F58
	0x01E11C04 CBZ X0, 0x1E11DBC
	0x01E11C08 ADRP X8, 0x22E8000
	0x01E11C0C LDR X8, [X8 + 0xF00]
	0x01E11C10 ADRP X22, 0x22E8000
	0x01E11C14 ADRP X23, 0x22E8000
	0x01E11C18 ADRP X24, 0x22E8000
	0x01E11C1C ADRP X25, 0x22E8000
	0x01E11C20 ADRP X26, 0x22E8000
	0x01E11C24 ADRP X21, 0x22E8000
	0x01E11C28 LDR X22, [X22 + 0xEF0]
	0x01E11C2C LDR X23, [X23 + 0xF90]
	0x01E11C30 LDR X24, [X24 + 0xF68]
	0x01E11C34 LDR X25, [X25 + 0xFA0]
	0x01E11C38 LDR X26, [X26 + 0xF80]
	0x01E11C3C LDR X21, [X21 + 0xF78]
	0x01E11C40 LDR X1, [X8]
	0x01E11C44 ADRP X27, 0x22E8000
	0x01E11C48 ADRP X28, 0x22E8000
	0x01E11C4C LDR X27, [X27 + 0xF98]
	0x01E11C50 LDR X28, [X28 + 0xF70]
	0x01E11C54 ADD X8, X31, 0x18
	0x01E11C58 BL 0x275A7AC
	0x01E11C5C LDUR V0, [X31 + 0x18]
	0x01E11C60 LDR X8, [X31 + 0x28]
	0x01E11C64 STR V0, [X31 + 0x5]
	0x01E11C68 STR X8, [X31 + 0x60]
	0x01E11C6C LDR X1, [X22]
	0x01E11C70 ADD X0, X31, 0x50
	0x01E11C74 BL 0x2C0B1F0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x25C8000
	011 Move [X31+12], W3
	012 Move X24, 0x22E9000
	013 Move X25, 0x22E9000
	014 Move W8, [X26+3562]
	015 Move X24, [X24+3720]
	016 Move X25, [X25+2768]
	017 Move W20, W5
	018 Move W21, W4
	019 Move X22, X2
	020 Move X23, X1
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {49}
	026 Move X0, 0x22E3000
	027 Move X0, [X0+2600]
	028 Call 0x1C17CF4
	029 Move X0, 0x22E9000
	030 Move X0, [X0+3720]
	031 Call 0x1C17CF4
	032 Move X0, 0x22E9000
	033 Move X0, [X0+2744]
	034 Call 0x1C17CF4
	035 Move X0, 0x22E9000
	036 Move X0, [X0+3792]
	037 Call 0x1C17CF4
	038 Move X0, 0x22E9000
	039 Move X0, [X0+2768]
	040 Call 0x1C17CF4
	041 Move X0, 0x22E3000
	042 Move X0, [X0+1432]
	043 Call 0x1C17CF4
	044 Move X0, 0x22E9000
	045 Move X0, [X0+3800]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X26+3562], W8
	049 Move [X19+56], X23
	050 Move X0, [X24]
	051 Move X24, 0x22E3000
	052 Move X24, [X24+1432]
	053 Call 0x1C17F10
	054 Move X23, X0
	055 Call GraphGenerationResult..ctor, X0
	056 Move [X19+40], X23
	057 Move X0, [X25]
	058 Call 0x1C17F10
	059 Move X23, X0
	060 Compare X22, 0
	061 JumpIfEqual {68}
	062 Move X8, 0x22E9000
	063 Move X8, [X8+3792]
	064 Move X0, X23
	065 Move X1, X22
	066 Move X2, [X8]
	067 Call List`1<Bounds>..ctor, X0, X1
	068 Move X8, 0x22E9000
	069 Move X8, [X8+2744]
	070 Move X0, X23
	071 Move X1, [X8]
	072 Call List`1<Bounds>..ctor, X0
	073 Move [X19+48], X23
	074 Move [X19+32], W31
	075 Move X0, [X24]
	076 Move X22, [X19+24]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X0, X22
	082 Move X1, X31
	083 Move X2, X31
	084 Call Object.op_Equality, X0, X1
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfEqual {145}
	089 Move X22, 0x22E9000
	090 Move X23, 0x22E3000
	091 Move X22, [X22+3800]
	092 Move X23, [X23+2600]
	093 Add X0, X31, 12
	094 Move X1, X31
	095 Call Int32.ToString, X0
	096 Move X8, [X22]
	097 Move X1, X0
	098 Move X2, X31
	099 Move X0, X8
	100 Call String.Concat, X0, X1
	101 Move X8, [X23]
	102 Move X22, X0
	103 Move W9, [X8+224]
	104 Compare W9, 0
	105 JumpIfNotEqual {108}
	106 Move X0, X8
	107 Call 0x1C17DFC
	108 Move X0, X22
	109 Move X1, X31
	110 Call Debug.LogWarning, X0
	111 Move W0, [X31+12]
	112 Move X1, X31
	113 Call Random.InitState, X0
	114 Move X0, X19
	115 Call Generator.GenerateTiles, X0
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {143}
	120 Move X0, X19
	121 Call Generator.PickSockets, X0
	122 Move X0, X19
	123 Call Generator.CleanupHeirarchy, X0
	124 Move X0, X19
	125 Call Generator.RenderTiles, X0
	126 Move X0, X19
	127 Call Generator.FindObjects, X0
	128 Move X0, X19
	129 Call Generator.SetAllLayers, X0
	130 Move X0, X19
	131 Call Generator.MoveNetObjects, X0
	132 Move X0, X19
	133 Move W1, W21
	134 Call Generator.CreateNavZones, X0, X1
	135 Move TEMP, X20
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfNotEqual {146}
	139 Move X0, X19
	140 Call Generator.PickItems, X0
	141 Move X0, X19
	142 Call Generator.PickMobs, X0
	143 Move X0, X19
	144 Call Generator.DeleteOnFailure, X0
	145 Move W0, W31
	146 Move X0, [X24]
	147 Move X19, [X19+80]
	148 Move W8, [X0+224]
	149 Compare W8, 0
	150 JumpIfNotEqual {152}
	151 Call 0x1C17DFC
	152 Move X0, X19
	153 Move X1, X31
	154 Call Object.Destroy, X0
	155 Move W0, 1
	156 Move X20, [X31+64]
	157 Move X19, [X31+72]
	158 Move X22, [X31+48]
	159 Move X21, [X31+56]
	160 Move X24, [X31+32]
	161 Move X23, [X31+40]
	162 Move X26, [X31+16]
	163 Move X25, [X31+24]
	164 Move X30, [X31+80]
	165 Return X0

Method: System.Void DeleteOnFailure()

Disassembly:
	0x01E11C78 TBZ X0, 0x0, 0x1E11D4C
	0x01E11C7C LDR X29, [X31 + 0x60]
	0x01E11C80 CBZ X29, 0x1E11DB0
	0x01E11C84 LDR X0, [X29 + 0x18]
	0x01E11C88 CBZ X0, 0x1E11DB4
	0x01E11C8C LDR X1, [X23]
	0x01E11C90 BL 0x21E5F08
	0x01E11C94 LDR X1, [X24]
	0x01E11C98 BL 0x21D79F4
	0x01E11C9C STR X0, [X29 + 0x30]
	0x01E11CA0 CBZ X0, 0x1E11DAC
	0x01E11CA4 LDR X1, [X25]
	0x01E11CA8 ADD X8, X31, 0x18
	0x01E11CAC BL 0x301CB58
	0x01E11CB0 LDUR V0, [X31 + 0x18]
	0x01E11CB4 LDR X8, [X31 + 0x28]
	0x01E11CB8 STR V0, [X31 + 0x3]
	0x01E11CBC STR X8, [X31 + 0x40]
	0x01E11CC0 LDR X1, [X26]
	0x01E11CC4 ADD X0, X31, 0x30
	0x01E11CC8 BL 0x2BC4350
	0x01E11CCC TBZ X0, 0x0, 0x1E11CE0
	0x01E11CD0 LDR X8, [X31 + 0x40]
	0x01E11CD4 CBZ X8, 0x1E11D24
	0x01E11CD8 STRB W31, [X8 + 0x24]
	0x01E11CDC B 0x1E11CC0
	0x01E11CE0 MOV X19, X31
	0x01E11CE4 MOVZ W20, 0x6
	0x01E11CE8 LDR X1, [X21]
	0x01E11CEC ADD X0, X31, 0x30
	0x01E11CF0 BL 0x2BC434C
	0x01E11CF4 CBNZ X19, 0x1E11DA4
	0x01E11CF8 CMP W20, 0x6
	0x01E11CFC B.EQ 0x1E11D04
	0x01E11D00 CBNZ W20, 0x1E11D4C
	0x01E11D04 LDR X0, [X29 + 0x18]
	0x01E11D08 CBZ X0, 0x1E11DB8
	0x01E11D0C LDR X1, [X27]
	0x01E11D10 BL 0x21E5F08
	0x01E11D14 LDR X1, [X28]
	0x01E11D18 BL 0x21D79F4
	0x01E11D1C STR X0, [X29 + 0x28]
	0x01E11D20 B 0x1E11C6C
	0x01E11D24 BL 0x1C16F20
	0x01E11D28 B 0x1E11DC0
	0x01E11D2C B 0x1E11D30
	0x01E11D30 CMP W1, 0x1
	0x01E11D34 B.NE 0x1E11D80
	0x01E11D38 BL 0x3EB1AD0
	0x01E11D3C LDR X19, [X0]
	0x01E11D40 BL 0x3EB1AE0
	0x01E11D44 MOV W20, W31
	0x01E11D48 B 0x1E11CE8
	0x01E11D4C ADRP X8, 0x22E8000
	0x01E11D50 LDR X8, [X8 + 0xEE8]
	0x01E11D54 ADD X0, X31, 0x50
	0x01E11D58 LDR X1, [X8]
	0x01E11D5C BL 0x2C0B1EC
	0x01E11D60 LDP X20, X19, [X31 + 0xC0]
	0x01E11D64 LDP X22, X21, [X31 + 0xB0]
	0x01E11D68 LDP X24, X23, [X31 + 0xA0]
	0x01E11D6C LDP X26, X25, [X31 + 0x90]
	0x01E11D70 LDP X28, X27, [X31 + 0x80]
	0x01E11D74 LDP X29, X30, [X31 + 0x70]
	0x01E11D78 ADD X31, X31, 0xD0
	0x01E11D7C RET
	0x01E11D80 STP X1, X0, [X31 + 0x8]
	0x01E11D84 MOV X19, X31
	0x01E11D88 LDR X1, [X21]
	0x01E11D8C ADD X0, X31, 0x30
	0x01E11D90 BL 0x2BC434C
	0x01E11D94 LDP X1, X0, [X31 + 0x8]
	0x01E11D98 CBZ X19, 0x1E11DF4
	0x01E11D9C MOV X0, X19
	0x01E11DA0 BL 0x1C16F18
	0x01E11DA4 MOV X0, X19
	0x01E11DA8 BL 0x1C16F18
	0x01E11DAC BL 0x1C16F20
	0x01E11DB0 BL 0x1C16F20
	0x01E11DB4 BL 0x1C16F20
	0x01E11DB8 BL 0x1C16F20
	0x01E11DBC BL 0x1C16F20
	0x01E11DC0 STP X1, X0, [X31 + 0x8]
	0x01E11DC4 B 0x1E11D88
	0x01E11DC8 B 0x1E11DF4
	0x01E11DCC B 0x1E11DF4
	0x01E11DD0 B 0x1E11DF4
	0x01E11DD4 B 0x1E11DF4
	0x01E11DD8 B 0x1E11DF4
	0x01E11DDC B 0x1E11DF4
	0x01E11DE0 B 0x1E11DF4
	0x01E11DE4 B 0x1E11DF4
	0x01E11DE8 B 0x1E11DF4
	0x01E11DEC B 0x1E11DF4
	0x01E11DF0 B 0x1E11DF4
	0x01E11DF4 CMP W1, 0x1
	0x01E11DF8 B.NE 0x1E11E28
	0x01E11DFC BL 0x3EB1AD0
	0x01E11E00 LDR X19, [X0]
	0x01E11E04 BL 0x3EB1AE0
	0x01E11E08 ADRP X8, 0x22E8000
	0x01E11E0C LDR X8, [X8 + 0xEE8]
	0x01E11E10 ADD X0, X31, 0x50
	0x01E11E14 LDR X1, [X8]
	0x01E11E18 BL 0x2C0B1EC
	0x01E11E1C CBZ X19, 0x1E11D60

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X20, 0x25C8000
	008 Move W8, [X20+3563]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0x22E9000
	015 Move X0, [X0+3808]
	016 Call 0x1C17CF4
	017 Move X0, 0x22E9000
	018 Move X0, [X0+3816]
	019 Call 0x1C17CF4
	020 Move X0, 0x22E9000
	021 Move X0, [X0+3824]
	022 Call 0x1C17CF4
	023 Move X0, 0x22E9000
	024 Move X0, [X0+3832]
	025 Call 0x1C17CF4
	026 Move X0, 0x22E3000
	027 Move X0, [X0+1432]
	028 Call 0x1C17CF4
	029 Move X0, 0x22E9000
	030 Move X0, [X0+3840]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+3563], W8
	034 Move [X31+8], X31
	035 Move [X31+16], X31
	036 Move [X31+24], X31
	037 Move X8, [X19+40]
	038 Compare X8, 0
	039 JumpIfEqual {90}
	040 Move X0, [X8+16]
	041 Compare X0, 0
	042 JumpIfEqual {90}
	043 Move X8, 0x22E9000
	044 Move X8, [X8+3808]
	045 Move X1, [X8]
	046 Call Dictionary`2<Object, Object>.get_Values, X0
	047 Compare X0, 0
	048 JumpIfEqual {90}
	049 Move X8, 0x22E9000
	050 Move X8, [X8+3840]
	051 Move X21, 0x22E9000
	052 Move X22, 0x22E3000
	053 Move X20, 0x22E9000
	054 Move X1, [X8]
	055 Move X21, [X21+3824]
	056 Move X22, [X22+1432]
	057 Move X20, [X20+3816]
	058 Add X8, X31, 8
	059 Call ValueCollection<Object, Object>.GetEnumerator, X0
	060 Move X1, [X21]
	061 Add X0, X31, 8
	062 Call Enumerator<Object, Object>.MoveNext, X0
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {79}
	067 Move X8, [X31+24]
	068 Compare X8, 0
	069 JumpIfEqual {89}
	070 Move X0, [X22]
	071 Move X19, [X8+24]
	072 Move W9, [X0+224]
	073 Compare W9, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X19
	077 Move X1, X31
	078 Call Object.DestroyImmediate, X0
	079 Move X1, [X20]
	080 Add X0, X31, 8
	081 Call Enumerator<Object, Object>.Dispose, X0
	082 Move X20, [X31+64]
	083 Move X19, [X31+72]
	084 Move X22, [X31+48]
	085 Move X21, [X31+56]
	086 Move X30, [X31+32]
	087 Add X31, X31, 80
	088 Return 
	089 Call 0x1C17F20
	090 Call 0x1C17F20
	091 Move X19, X0
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X0, X19
	094 Call 0x3EB2AD0
	095 Move X20, [X0]
	096 Call 0x3EB2AE0
	097 Move X8, 0x22E9000
	098 Move X8, [X8+3816]
	099 Add X0, X31, 8
	100 Move X1, [X8]
	101 Call Enumerator<Object, Object>.Dispose, X0
	102 Compare X20, 0
	103 JumpIfEqual {82}
	104 Move X0, X20
	105 Call 0x1C17F18
	106 Move X20, X31
	107 Move X19, X0
	108 Move X8, 0x22E9000
	109 Move X8, [X8+3816]
	110 Move X1, [X8]
	111 Add X0, X31, 8
	112 Call Enumerator<Object, Object>.Dispose, X0
	113 Compare X20, 0
	114 JumpIfNotEqual {117}
	115 Move X0, X19
	116 Call 0x1D2D690
	117 Move X0, X20
	118 Call 0x1C17F18
	119 Call 0x1991590

Method: System.Boolean GenerateTiles()

Disassembly:
	0x01E117DC B 0x1E117F8
	0x01E117E0 B 0x1E117F8
	0x01E117E4 B 0x1E117F8
	0x01E117E8 B 0x1E117F8
	0x01E117EC B 0x1E117F8
	0x01E117F0 B 0x1E117F8
	0x01E117F4 B 0x1E117F8
	0x01E117F8 MOV X20, X1
	0x01E117FC CMP W20, 0x1
	0x01E11800 B.NE 0x1E11828
	0x01E11804 BL 0x3EB1AD0
	0x01E11808 LDR X21, [X0]
	0x01E1180C BL 0x3EB1AE0
	0x01E11810 LDR X1, [X27]
	0x01E11814 ADD X0, X31, 0x40
	0x01E11818 BL 0x2C0B1EC
	0x01E1181C CBZ X21, 0x1E11408
	0x01E11820 MOV X0, X21
	0x01E11824 BL 0x1C16F18
	0x01E11828 MOV X19, X0
	0x01E1182C MOV X21, X31
	0x01E11830 B 0x1E11838
	0x01E11834 MOV X19, X0
	0x01E11838 LDR X1, [X27]
	0x01E1183C ADD X0, X31, 0x40
	0x01E11840 BL 0x2C0B1EC
	0x01E11844 CBNZ X21, 0x1E11850
	0x01E11848 MOV X0, X19
	0x01E1184C BL 0x1D2C690
	0x01E11850 MOV X0, X21
	0x01E11854 BL 0x1C16F18
	0x01E11858 BL 0x1990590
	0x01E1185C SUB X31, X31, 0xA0
	0x01E11860 STR X30, [X31 + 0x60]
	0x01E11864 STP X24, X23, [X31 + 0x70]
	0x01E11868 STP X22, X21, [X31 + 0x80]
	0x01E1186C STP X20, X19, [X31 + 0x90]
	0x01E11870 ADRP X20, 0x25C7000
	0x01E11874 LDRB W8, [X20 + 0xDEE]
	0x01E11878 MOV X19, X0
	0x01E1187C TBNZ X8, 0x0, 0x1E118F4
	0x01E11880 ADRP X0, 0x22E8000
	0x01E11884 LDR X0, [X0 + 0xEE0]
	0x01E11888 BL 0x1C16CF4
	0x01E1188C ADRP X0, 0x22E8000
	0x01E11890 LDR X0, [X0 + 0xEE8]
	0x01E11894 BL 0x1C16CF4
	0x01E11898 ADRP X0, 0x22E8000
	0x01E1189C LDR X0, [X0 + 0xF30]
	0x01E118A0 BL 0x1C16CF4
	0x01E118A4 ADRP X0, 0x22E8000
	0x01E118A8 LDR X0, [X0 + 0xEF0]
	0x01E118AC BL 0x1C16CF4
	0x01E118B0 ADRP X0, 0x22E8000
	0x01E118B4 LDR X0, [X0 + 0xF38]
	0x01E118B8 BL 0x1C16CF4
	0x01E118BC ADRP X0, 0x22E8000
	0x01E118C0 LDR X0, [X0 + 0xF40]
	0x01E118C4 BL 0x1C16CF4
	0x01E118C8 ADRP X0, 0x22E8000
	0x01E118CC LDR X0, [X0 + 0xEF8]
	0x01E118D0 BL 0x1C16CF4
	0x01E118D4 ADRP X0, 0x22E8000
	0x01E118D8 LDR X0, [X0 + 0xF48]
	0x01E118DC BL 0x1C16CF4
	0x01E118E0 ADRP X0, 0x22E8000
	0x01E118E4 LDR X0, [X0 + 0xF00]
	0x01E118E8 BL 0x1C16CF4
	0x01E118EC MOVZ W8, 0x1
	0x01E118F0 STRB W8, [X20 + 0xDEE]
	0x01E118F4 STP X31, X31, [X31 + 0x40]
	0x01E118F8 STR X31, [X31 + 0x50]
	0x01E118FC STP X31, X31, [X31 + 0x20]
	0x01E11900 STR X31, [X31 + 0x30]
	0x01E11904 LDR X8, [X19 + 0x28]
	0x01E11908 CBZ X8, 0x1E11A80
	0x01E1190C LDR X0, [X8 + 0x10]
	0x01E11910 CBZ X0, 0x1E11A80
	0x01E11914 ADRP X8, 0x22E8000
	0x01E11918 LDR X8, [X8 + 0xEE0]
	0x01E1191C LDR X1, [X8]
	0x01E11920 BL 0x2AA4F58
	0x01E11924 CBZ X0, 0x1E11A80
	0x01E11928 ADRP X8, 0x22E8000
	0x01E1192C LDR X8, [X8 + 0xF00]
	0x01E11930 ADRP X22, 0x22E8000
	0x01E11934 ADRP X23, 0x22E8000
	0x01E11938 LDR X22, [X22 + 0xEF0]
	0x01E1193C LDR X23, [X23 + 0xF48]
	0x01E11940 LDR X1, [X8]
	0x01E11944 ADRP X24, 0x22E8000
	0x01E11948 ADRP X21, 0x22E8000
	0x01E1194C ADRP X20, 0x22E8000
	0x01E11950 LDR X24, [X24 + 0xF38]
	0x01E11954 LDR X21, [X21 + 0xF30]
	0x01E11958 LDR X20, [X20 + 0xEE8]
	0x01E1195C ADD X8, X31, 0x8
	0x01E11960 BL 0x275A7AC
	0x01E11964 LDUR V0, [X31 + 0x8]
	0x01E11968 LDR X8, [X31 + 0x18]
	0x01E1196C STR V0, [X31 + 0x4]
	0x01E11970 STR X8, [X31 + 0x50]
	0x01E11974 LDR X1, [X22]
	0x01E11978 ADD X0, X31, 0x40
	0x01E1197C BL 0x2C0B1F0
	0x01E11980 TBZ X0, 0x0, 0x1E11A1C
	0x01E11984 LDR X19, [X31 + 0x50]
	0x01E11988 CBZ X19, 0x1E11A70
	0x01E1198C LDR X0, [X19 + 0x20]
	0x01E11990 CBZ X0, 0x1E11A74
	0x01E11994 LDR X1, [X23]
	0x01E11998 ADD X8, X31, 0x8
	0x01E1199C BL 0x301CB58
	0x01E119A0 LDUR V0, [X31 + 0x8]
	0x01E119A4 LDR X8, [X31 + 0x18]
	0x01E119A8 STR V0, [X31 + 0x2]
	0x01E119AC STR X8, [X31 + 0x30]
	0x01E119B0 LDR X1, [X24]
	0x01E119B4 ADD X0, X31, 0x20
	0x01E119B8 BL 0x2BC4350
	0x01E119BC TBZ X0, 0x0, 0x1E119DC
	0x01E119C0 LDR X0, [X31 + 0x30]
	0x01E119C4 CBZ X0, 0x1E119F4
	0x01E119C8 LDR X8, [X0]
	0x01E119CC LDR X1, [X19 + 0x10]
	0x01E119D0 LDP X9, X2, [X8 + 0x178]
	0x01E119D4 BLR X9
	0x01E119D8 B 0x1E119B0
	0x01E119DC MOV X19, X31
	0x01E119E0 LDR X1, [X21]
	0x01E119E4 ADD X0, X31, 0x20
	0x01E119E8 BL 0x2BC434C
	0x01E119EC CBZ X19, 0x1E11974
	0x01E119F0 B 0x1E11A78
	0x01E119F4 BL 0x1C16F20
	0x01E119F8 B 0x1E11A84
	0x01E119FC B 0x1E11A04
	0x01E11A00 B 0x1E11A04
	0x01E11A04 CMP W1, 0x1
	0x01E11A08 B.NE 0x1E11A44
	0x01E11A0C BL 0x3EB1AD0
	0x01E11A10 LDR X19, [X0]
	0x01E11A14 BL 0x3EB1AE0
	0x01E11A18 B 0x1E119E0
	0x01E11A1C LDR X1, [X20]
	0x01E11A20 ADD X0, X31, 0x40
	0x01E11A24 BL 0x2C0B1EC
	0x01E11A28 LDP X20, X19, [X31 + 0x90]
	0x01E11A2C LDP X22, X21, [X31 + 0x80]
	0x01E11A30 LDP X24, X23, [X31 + 0x70]
	0x01E11A34 LDR X30, [X31 + 0x60]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x25C8000
	012 Move W8, [X20+3564]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {44}
	018 Move X0, 0x22E9000
	019 Move X0, [X0+3728]
	020 Call 0x1C17CF4
	021 Move X0, 0x22E9000
	022 Move X0, [X0+3736]
	023 Call 0x1C17CF4
	024 Move X0, 0x22E9000
	025 Move X0, [X0+3744]
	026 Call 0x1C17CF4
	027 Move X0, 0x22E9000
	028 Move X0, [X0+3752]
	029 Call 0x1C17CF4
	030 Move X0, 0x22E9000
	031 Move X0, [X0+3760]
	032 Call 0x1C17CF4
	033 Move X0, 0x22E9000
	034 Move X0, [X0+3768]
	035 Call 0x1C17CF4
	036 Move X0, 0x22E9000
	037 Move X0, [X0+3776]
	038 Call 0x1C17CF4
	039 Move X0, 0x22E9000
	040 Move X0, [X0+3784]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X20+3564], W8
	044 Move X0, [X19+24]
	045 Compare X0, 0
	046 JumpIfEqual {175}
	047 Move X8, 0x22E9000
	048 Move X8, [X8+3736]
	049 Move W1, W31
	050 Move X2, [X8]
	051 Call 0x21E870C, X0, X1
	052 Compare X0, 0
	053 JumpIfEqual {175}
	054 Move W1, [X0+24]
	055 Move X20, X0
	056 Compare W1, 0
	057 JumpIfEqual {162}
	058 Move X21, 0x22E9000
	059 Move X21, [X21+3776]
	060 Move W0, W31
	061 Move X2, X31
	062 Call Random.Range, X0, X1
	063 Move X2, [X21]
	064 Move W1, W0
	065 Move X0, X20
	066 Call List`1<Object>.get_Item, X0, X1
	067 Move X8, [X19+24]
	068 Compare X8, 0
	069 JumpIfEqual {175}
	070 Move X9, 0x22E9000
	071 Move X9, [X9+3728]
	072 Move X21, X0
	073 Move X0, X8
	074 Move X1, X21
	075 Move X2, [X9]
	076 Call 0x21E8478, X0, X1
	077 Compare X0, 0
	078 JumpIfEqual {175}
	079 Move W1, [X0+24]
	080 Move X22, 0x22E9000
	081 Move X22, [X22+3784]
	082 Move X20, X0
	083 Move W0, W31
	084 Move X2, X31
	085 Call Random.Range, X0, X1
	086 Move X2, [X22]
	087 Move W1, W0
	088 Move X0, X20
	089 Call List`1<Object>.get_Item, X0, X1
	090 Compare X0, 0
	091 JumpIfEqual {175}
	092 Move X1, X21
	093 Move X2, X31
	094 Move X20, X0
	095 Call GenBranch.GetOtherNode, X0, X1
	096 Move X23, 0x25C8000
	097 Move W8, [X23+1923]
	098 Move X22, [X19+56]
	099 Move X21, X0
	100 Compare W8, 0
	101 JumpIfNotEqual {107}
	102 Move X0, 0x22E3000
	103 Move X0, [X0+1440]
	104 Call 0x1C17CF4
	105 Move W8, 1
	106 Move [X23+1923], W8
	107 Compare X22, 0
	108 JumpIfEqual {175}
	109 Move X8, 0x22E3000
	110 Move X8, [X8+1440]
	111 Move S2, 0.5
	112 NotImplemented "Instruction MOVI not yet implemented."
	113 Move X8, [X8]
	114 Move X8, [X8+184]
	115 Move V0, [X8+8]
	116 Move V1, [X8]
	117 Multiply S2, S0, S2
	118 NotImplemented "Instruction INVALID not yet implemented."
	119 Move [X22+72], D1
	120 Move [X22+80], S0
	121 Move [X22+84], D3
	122 Move [X22+92], S2
	123 Move W8, [X19+36]
	124 Move [X19+32], W31
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X26, 0x22E9000
	127 Move X27, 0x22E9000
	128 Move X26, [X26+3744]
	129 Move X27, [X27+3752]
	130 Move X8, [X19+16]
	131 Move X23, [X19+24]
	132 Move X0, [X26]
	133 Move X24, [X19+56]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 NotImplemented "Instruction CSEL not yet implemented."
	136 Call 0x1C17F10
	137 Move X1, [X27]
	138 Move X22, X0
	139 Move X0, X21
	140 Call 0x1C17E00
	141 Move X3, X0
	142 Move X0, X22
	143 Move X1, X25
	144 Move X2, X23
	145 Move W4, W31
	146 Move X5, X20
	147 Move X6, X24
	148 Call GenerationNodeHandle..ctor, X0, X1, X2, X3, X4, X5, X6
	149 Compare X22, 0
	150 JumpIfEqual {175}
	151 Move X0, X22
	152 Call GenerationNodeHandle.TryGenerate, X0
	153 Move TEMP, X0
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfEqual {163}
	157 Move W8, [X19+32]
	158 Move W9, [X19+36]
	159 Add W8, W8, 1
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move [X19+32], W8
	162 Move W0, W31
	163 Move X20, [X31+64]
	164 Move X19, [X31+72]
	165 Move X22, [X31+48]
	166 Move X21, [X31+56]
	167 Move X24, [X31+32]
	168 Move X23, [X31+40]
	169 Move X26, [X31+16]
	170 Move X25, [X31+24]
	171 And W0, W0, 1
	172 Move X30, [X31+80]
	173 Move X27, [X31+88]
	174 Return X0
	175 Call 0x1C17F20

Method: System.Boolean PickSockets()

Disassembly:
	0x01E11E20 MOV X0, X19
	0x01E11E24 BL 0x1C16F18
	0x01E11E28 STR X0, [X31 + 0x10]
	0x01E11E2C MOV X19, X31
	0x01E11E30 B 0x1E11E38
	0x01E11E34 STR X0, [X31 + 0x10]
	0x01E11E38 ADRP X8, 0x22E8000
	0x01E11E3C LDR X8, [X8 + 0xEE8]
	0x01E11E40 LDR X1, [X8]
	0x01E11E44 ADD X0, X31, 0x50
	0x01E11E48 BL 0x2C0B1EC
	0x01E11E4C CBNZ X19, 0x1E11E58
	0x01E11E50 LDR X0, [X31 + 0x10]
	0x01E11E54 BL 0x1D2C690
	0x01E11E58 MOV X0, X19
	0x01E11E5C BL 0x1C16F18
	0x01E11E60 BL 0x1990590
	0x01E11E64 SUB X31, X31, 0xF0
	0x01E11E68 STR D8, [X31 + 0x80]
	0x01E11E6C STP X29, X30, [X31 + 0x90]
	0x01E11E70 STP X28, X27, [X31 + 0xA0]
	0x01E11E74 STP X26, X25, [X31 + 0xB0]
	0x01E11E78 STP X24, X23, [X31 + 0xC0]
	0x01E11E7C STP X22, X21, [X31 + 0xD0]
	0x01E11E80 STP X20, X19, [X31 + 0xE0]
	0x01E11E84 ADRP X19, 0x25C7000
	0x01E11E88 LDRB W8, [X19 + 0xDF1]
	0x01E11E8C MOV X20, X0
	0x01E11E90 TBNZ X8, 0x0, 0x1E11F44
	0x01E11E94 ADRP X0, 0x22E8000
	0x01E11E98 LDR X0, [X0 + 0xEE0]
	0x01E11E9C BL 0x1C16CF4
	0x01E11EA0 ADRP X0, 0x22E8000
	0x01E11EA4 LDR X0, [X0 + 0xEE8]
	0x01E11EA8 BL 0x1C16CF4
	0x01E11EAC ADRP X0, 0x22E8000
	0x01E11EB0 LDR X0, [X0 + 0x3E8]
	0x01E11EB4 BL 0x1C16CF4
	0x01E11EB8 ADRP X0, 0x22E8000
	0x01E11EBC LDR X0, [X0 + 0xEF0]
	0x01E11EC0 BL 0x1C16CF4
	0x01E11EC4 ADRP X0, 0x22E8000
	0x01E11EC8 LDR X0, [X0 + 0x3F0]
	0x01E11ECC BL 0x1C16CF4
	0x01E11ED0 ADRP X0, 0x22E8000
	0x01E11ED4 LDR X0, [X0 + 0x3F8]
	0x01E11ED8 BL 0x1C16CF4
	0x01E11EDC ADRP X0, 0x22E8000
	0x01E11EE0 LDR X0, [X0 + 0xEF8]
	0x01E11EE4 BL 0x1C16CF4
	0x01E11EE8 ADRP X0, 0x22E8000
	0x01E11EEC LDR X0, [X0 + 0xFA8]
	0x01E11EF0 BL 0x1C16CF4
	0x01E11EF4 ADRP X0, 0x22E8000
	0x01E11EF8 LDR X0, [X0 + 0xFB0]
	0x01E11EFC BL 0x1C16CF4
	0x01E11F00 ADRP X0, 0x22E8000
	0x01E11F04 LDR X0, [X0 + 0xFB8]
	0x01E11F08 BL 0x1C16CF4
	0x01E11F0C ADRP X0, 0x22E8000
	0x01E11F10 LDR X0, [X0 + 0xFC0]
	0x01E11F14 BL 0x1C16CF4
	0x01E11F18 ADRP X0, 0x22E8000
	0x01E11F1C LDR X0, [X0 + 0xFC8]
	0x01E11F20 BL 0x1C16CF4
	0x01E11F24 ADRP X0, 0x22E8000
	0x01E11F28 LDR X0, [X0 + 0x400]
	0x01E11F2C BL 0x1C16CF4
	0x01E11F30 ADRP X0, 0x22E8000
	0x01E11F34 LDR X0, [X0 + 0xF00]
	0x01E11F38 BL 0x1C16CF4
	0x01E11F3C MOVZ W8, 0x1
	0x01E11F40 STRB W8, [X19 + 0xDF1]
	0x01E11F44 STP X31, X31, [X31 + 0x60]
	0x01E11F48 STR X31, [X31 + 0x70]
	0x01E11F4C STP X31, X31, [X31 + 0x40]
	0x01E11F50 STR X31, [X31 + 0x50]
	0x01E11F54 STR X31, [X31 + 0x88]
	0x01E11F58 STP X31, X31, [X31 + 0x30]
	0x01E11F5C STR X31, [X31 + 0x28]
	0x01E11F60 LDR X8, [X20 + 0x28]
	0x01E11F64 CBZ X8, 0x1E123C8
	0x01E11F68 LDR X0, [X8 + 0x10]
	0x01E11F6C CBZ X0, 0x1E123C8
	0x01E11F70 STR X20, [X31 + 0x8]
	0x01E11F74 ADRP X8, 0x22E8000
	0x01E11F78 LDR X8, [X8 + 0xEE0]
	0x01E11F7C LDR X1, [X8]
	0x01E11F80 BL 0x2AA4F58
	0x01E11F84 CBZ X0, 0x1E123C8
	0x01E11F88 ADRP X8, 0x22E8000
	0x01E11F8C LDR X8, [X8 + 0xF00]
	0x01E11F90 ADRP X24, 0x22E8000
	0x01E11F94 ADRP X29, 0x22E8000
	0x01E11F98 ADRP X21, 0x22E8000
	0x01E11F9C ADRP X19, 0x22E8000
	0x01E11FA0 ADRP X23, 0x22E8000
	0x01E11FA4 ADRP X25, 0x22E8000
	0x01E11FA8 ADRP X26, 0x22E8000
	0x01E11FAC LDR X24, [X24 + 0xEF0]
	0x01E11FB0 LDR X29, [X29 + 0x400]
	0x01E11FB4 LDR X21, [X21 + 0x3F0]
	0x01E11FB8 LDR X19, [X19 + 0xFA8]
	0x01E11FBC LDR X23, [X23 + 0x3E8]
	0x01E11FC0 LDR X25, [X25 + 0xFB0]
	0x01E11FC4 LDR X26, [X26 + 0xFC0]
	0x01E11FC8 LDR X1, [X8]
	0x01E11FCC ADRP X27, 0x22E8000
	0x01E11FD0 ADRP X28, 0x22E8000
	0x01E11FD4 LDR X27, [X27 + 0xFC8]
	0x01E11FD8 LDR X28, [X28 + 0xFB8]
	0x01E11FDC ADD X8, X31, 0x10
	0x01E11FE0 BL 0x275A7AC
	0x01E11FE4 ADRP X9, 0xFFFFFFFFFECD9000
	0x01E11FE8 LDR V0, [X31 + 0x1]
	0x01E11FEC LDR X8, [X31 + 0x20]
	0x01E11FF0 LDR V8, [X9 + 0xBC]
	0x01E11FF4 STR V0, [X31 + 0x6]
	0x01E11FF8 STR X8, [X31 + 0x70]
	0x01E11FFC LDR X1, [X24]
	0x01E12000 ADD X0, X31, 0x60
	0x01E12004 BL 0x2C0B1F0
	0x01E12008 TBZ X0, 0x0, 0x1E12124
	0x01E1200C LDR X8, [X31 + 0x70]
	0x01E12010 CBZ X8, 0x1E123AC
	0x01E12014 LDR X0, [X8 + 0x28]
	0x01E12018 CBZ X0, 0x1E123B0
	0x01E1201C LDR X1, [X29]
	0x01E12020 ADD X8, X31, 0x10
	0x01E12024 BL 0x301CB58
	0x01E12028 LDR V0, [X31 + 0x1]
	0x01E1202C LDR X8, [X31 + 0x20]
	0x01E12030 STR V0, [X31 + 0x4]
	0x01E12034 STR X8, [X31 + 0x50]
	0x01E12038 LDR X1, [X21]
	0x01E1203C ADD X0, X31, 0x40
	0x01E12040 BL 0x2BC4350
	0x01E12044 TBZ X0, 0x0, 0x1E120B0
	0x01E12048 LDR X20, [X31 + 0x50]
	0x01E1204C CBZ X20, 0x1E120D8
	0x01E12050 MOV X0, X20
	0x01E12054 MOV X1, X31
	0x01E12058 BL 0x3C32ECC
	0x01E1205C CBZ X0, 0x1E120E0
	0x01E12060 MOVZ W1, 0xF
	0x01E12064 MOV X2, X31
	0x01E12068 BL 0x3C35770
	0x01E1206C MOV X0, X20
	0x01E12070 MOV X1, X31
	0x01E12074 BL 0x3C32ECC
	0x01E12078 CBZ X0, 0x1E120C8
	0x01E1207C LDR X1, [X19]
	0x01E12080 BL 0x21E52E4
	0x01E12084 MOV X20, X0
	0x01E12088 CBZ X0, 0x1E120D0
	0x01E1208C MOVZ W1, 0x1
	0x01E12090 MOV X0, X20
	0x01E12094 MOV X2, X31
	0x01E12098 BL 0x3C8F7C8
	0x01E1209C MOV X0, X20
	0x01E120A0 MOV V0.16B, V8.16B
	0x01E120A4 MOV X1, X31
	0x01E120A8 BL 0x3C90160
	0x01E120AC B 0x1E12038
	0x01E120B0 MOV X22, X31
	0x01E120B4 LDR X1, [X23]
	0x01E120B8 ADD X0, X31, 0x40
	0x01E120BC BL 0x2BC434C
	0x01E120C0 CBZ X22, 0x1E11FFC
	0x01E120C4 B 0x1E123B4
	0x01E120C8 BL 0x1C16F20
	0x01E120CC B 0x1E123CC
	0x01E120D0 BL 0x1C16F20
	0x01E120D4 B 0x1E123CC
	0x01E120D8 BL 0x1C16F20
	0x01E120DC B 0x1E123CC
	0x01E120E0 BL 0x1C16F20
	0x01E120E4 B 0x1E123CC
	0x01E120E8 B 0x1E12108
	0x01E120EC B 0x1E12108
	0x01E120F0 B 0x1E12108
	0x01E120F4 B 0x1E12108
	0x01E120F8 B 0x1E12108
	0x01E120FC B 0x1E12108
	0x01E12100 B 0x1E12108
	0x01E12104 B 0x1E12108
	0x01E12108 MOV X20, X1
	0x01E1210C CMP W20, 0x1
	0x01E12110 B.NE 0x1E12350
	0x01E12114 BL 0x3EB1AD0
	0x01E12118 LDR X22, [X0]
	0x01E1211C BL 0x3EB1AE0
	0x01E12120 B 0x1E120B4
	0x01E12124 ADRP X23, 0x22E7000
	0x01E12128 LDR X23, [X23 + 0xEE8]
	0x01E1212C ADD X0, X31, 0x60
	0x01E12130 LDR X1, [X23]
	0x01E12134 BL 0x2C0B1EC
	0x01E12138 LDR X8, [X31 + 0x8]
	0x01E1213C LDR X8, [X8 + 0x28]
	0x01E12140 CBZ X8, 0x1E123C8
	0x01E12144 LDR X0, [X8 + 0x10]
	0x01E12148 CBZ X0, 0x1E123C8
	0x01E1214C ADRP X8, 0x22E7000
	0x01E12150 LDR X8, [X8 + 0xEE0]
	0x01E12154 LDR X1, [X8]
	0x01E12158 BL 0x2AA4F58
	0x01E1215C CBZ X0, 0x1E123C8
	0x01E12160 ADRP X8, 0x22E7000
	0x01E12164 LDR X8, [X8 + 0xF00]
	0x01E12168 LDR X1, [X8]

ISIL:
	001 Move [X31-160], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X29
	009 Move [X31+72], X30
	010 Move [X31+80], X28
	011 Move [X31+88], X27
	012 Move [X31+96], X26
	013 Move [X31+104], X25
	014 Move [X31+112], X24
	015 Move [X31+120], X23
	016 Move [X31+128], X22
	017 Move [X31+136], X21
	018 Move [X31+144], X20
	019 Move [X31+152], X19
	020 Move X20, 0x25C8000
	021 Move W8, [X20+3565]
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {47}
	027 Move X0, 0x22E9000
	028 Move X0, [X0+3848]
	029 Call 0x1C17CF4
	030 Move X0, 0x22E9000
	031 Move X0, [X0+3856]
	032 Call 0x1C17CF4
	033 Move X0, 0x22E9000
	034 Move X0, [X0+3864]
	035 Call 0x1C17CF4
	036 Move X0, 0x22E9000
	037 Move X0, [X0+3872]
	038 Call 0x1C17CF4
	039 Move X0, 0x22E9000
	040 Move X0, [X0+3880]
	041 Call 0x1C17CF4
	042 Move X0, 0x22E3000
	043 Move X0, [X0+1432]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X20+3565], W8
	047 Move X0, [X19+56]
	048 Compare X0, 0
	049 JumpIfEqual {232}
	050 Move X8, 0x22E9000
	051 Move X8, [X8+3848]
	052 Move X19, 0x22E9000
	053 Move X20, 0x22E9000
	054 Move W1, 1
	055 Move X2, [X8]
	056 Move X19, [X19+3880]
	057 Move X20, [X20+3872]
	058 Call 0x21A55B8, X0, X1
	059 Move X8, [X19]
	060 Move X19, X0
	061 Move X0, X8
	062 Call 0x1C17F10
	063 Move X1, [X20]
	064 Move X20, X0
	065 Call HashSet`1<Object>..ctor, X0
	066 Compare X19, 0
	067 JumpIfEqual {232}
	068 Move X8, [X19+24]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X24, 0x22E3000
	071 Move X9, -20078592
	072 Move X24, [X24+1432]
	073 Move V14, [X9+1040]
	074 Move X27, X31
	075 Add X26, X19, 40
	076 Move W29, 1
	077 Add X9, X27, 1
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move [X31+8], X9
	080 Add X9, X19, X27
	081 Move X28, X31
	082 Add X21, X9, 32
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Add X25, X29, X28
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X0, [X24]
	087 Move X22, [X21]
	088 Move X23, [X26]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 Move X0, X22
	094 Move X1, X23
	095 Move X2, X31
	096 Call Object.op_Equality, X0, X1
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfEqual {179}
	101 Move X8, [X19+24]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X0, [X21]
	104 Compare X0, 0
	105 JumpIfEqual {232}
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X8, [X26]
	108 Compare X8, 0
	109 JumpIfEqual {232}
	110 Move W9, [X0+32]
	111 Move W8, [X8+32]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X1, X31
	114 Call Component.get_transform, X0
	115 Compare X0, 0
	116 JumpIfEqual {232}
	117 Move X1, X31
	118 Call Transform.get_position, X0
	119 Move W8, [X19+24]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X0, [X26]
	122 Compare X0, 0
	123 JumpIfEqual {232}
	124 Move X1, X31
	125 Move V8, V0
	126 Move V9, V1
	127 Move V10, V2
	128 Call Component.get_transform, X0
	129 Compare X0, 0
	130 JumpIfEqual {232}
	131 Move X1, X31
	132 Call Transform.get_position, X0
	133 Move X8, 0x25C8000
	134 Move W8, [X8+2140]
	135 Move V11, V0
	136 Move V12, V1
	137 Move V13, V2
	138 Compare W8, 0
	139 JumpIfNotEqual {146}
	140 Move X0, 0x22E2000
	141 Move X0, [X0+1448]
	142 Call 0x1C17CF4
	143 Move W8, 1
	144 Move X9, 0x25C7000
	145 Move [X9+2140], W8
	146 Move X8, 0x22E2000
	147 Move X8, [X8+1448]
	148 Move X0, [X8]
	149 Move W8, [X0+224]
	150 Compare W8, 0
	151 JumpIfNotEqual {153}
	152 Call 0x1C17DFC
	153 Subtract S0, S8, S11
	154 Subtract S1, S9, S12
	155 Subtract S2, S10, S13
	156 Multiply S0, S0, S0
	157 Multiply S1, S1, S1
	158 Add S0, S0, S1
	159 Multiply S1, S2, S2
	160 Add S0, S1, S0
	161 NotImplemented "Instruction FSQRT not yet implemented."
	162 NotImplemented "Instruction FCMP not yet implemented."
	163 Move W8, [X19+24]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X22, 0x22E8000
	166 Move X22, [X22+3856]
	167 Compare X20, 0
	168 JumpIfEqual {232}
	169 Move X1, [X21]
	170 Move X2, [X22]
	171 Move X0, X20
	172 Call HashSet`1<Object>.Add, X0, X1
	173 Move W8, [X19+24]
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move X1, [X26]
	176 Move X2, [X22]
	177 Move X0, X20
	178 Call HashSet`1<Object>.Add, X0, X1
	179 Move X8, [X19+24]
	180 Add X28, X28, 1
	181 Add W9, W29, W28
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Move X9, [X31+8]
	184 Add X26, X26, 8
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Add X29, X29, 1
	187 Move X27, X9
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X23, 0x22E8000
	190 Move X23, [X23+3864]
	191 Move X22, X31
	192 Add X24, X19, 32
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Compare X20, 0
	195 JumpIfEqual {232}
	196 Move X21, [X24]
	197 Move X2, [X23]
	198 Move X0, X20
	199 Move X1, X21
	200 Call HashSet`1<Object>.Contains, X0, X1
	201 Compare X21, 0
	202 JumpIfEqual {232}
	203 And W1, W0, 1
	204 Move X0, X21
	205 Move X2, X31
	206 Call Socket.SetOpen, X0, X1
	207 Move W8, [X19+24]
	208 Add X22, X22, 1
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move X20, [X31+144]
	211 Move X19, [X31+152]
	212 Move X22, [X31+128]
	213 Move X21, [X31+136]
	214 Move X24, [X31+112]
	215 Move X23, [X31+120]
	216 Move X26, [X31+96]
	217 Move X25, [X31+104]
	218 Move X28, [X31+80]
	219 Move X27, [X31+88]
	220 Move X29, [X31+64]
	221 Move X30, [X31+72]
	222 Move D9, [X31+48]
	223 Move D8, [X31+56]
	224 Move D11, [X31+32]
	225 Move D10, [X31+40]
	226 Move D13, [X31+16]
	227 Move D12, [X31+24]
	228 Move W0, 1
	229 Move V14, [X31+160]
	230 Return X0
	231 Call 0x1C17F28
	232 Call 0x1C17F20

Method: System.Boolean RenderTiles()

Disassembly:
	0x01E1285C CBNZ X21, 0x1E12868
	0x01E12860 MOV X0, X19
	0x01E12864 BL 0x1D2C690
	0x01E12868 MOV X0, X21
	0x01E1286C BL 0x1C16F18
	0x01E12870 BL 0x1990590
	0x01E12874 SUB X31, X31, 0x120
	0x01E12878 STP X29, X30, [X31 + 0xC0]
	0x01E1287C STP X28, X27, [X31 + 0xD0]
	0x01E12880 STP X26, X25, [X31 + 0xE0]
	0x01E12884 STP X24, X23, [X31 + 0xF0]
	0x01E12888 STP X22, X21, [X31 + 0x100]
	0x01E1288C STP X20, X19, [X31 + 0x110]
	0x01E12890 ADRP X21, 0x25C6000
	0x01E12894 LDRB W8, [X21 + 0xDF2]
	0x01E12898 MOV W19, W1
	0x01E1289C MOV X20, X0
	0x01E128A0 TBNZ X8, 0x0, 0x1E12948
	0x01E128A4 ADRP X0, 0x22E8000
	0x01E128A8 LDR X0, [X0]
	0x01E128AC BL 0x1C16CF4
	0x01E128B0 ADRP X0, 0x22E8000
	0x01E128B4 LDR X0, [X0 + 0x8]
	0x01E128B8 BL 0x1C16CF4
	0x01E128BC ADRP X0, 0x22E8000
	0x01E128C0 LDR X0, [X0 + 0x10]
	0x01E128C4 BL 0x1C16CF4
	0x01E128C8 ADRP X0, 0x22E8000
	0x01E128CC LDR X0, [X0 + 0x18]
	0x01E128D0 BL 0x1C16CF4
	0x01E128D4 ADRP X0, 0x22E8000
	0x01E128D8 LDR X0, [X0 + 0x20]
	0x01E128DC BL 0x1C16CF4
	0x01E128E0 ADRP X0, 0x22E8000
	0x01E128E4 LDR X0, [X0 + 0x28]
	0x01E128E8 BL 0x1C16CF4
	0x01E128EC ADRP X0, 0x22E7000
	0x01E128F0 LDR X0, [X0 + 0x3B0]
	0x01E128F4 BL 0x1C16CF4
	0x01E128F8 ADRP X0, 0x22E8000
	0x01E128FC LDR X0, [X0 + 0x30]
	0x01E12900 BL 0x1C16CF4
	0x01E12904 ADRP X0, 0x22E8000
	0x01E12908 LDR X0, [X0 + 0x38]
	0x01E1290C BL 0x1C16CF4
	0x01E12910 ADRP X0, 0x22E8000
	0x01E12914 LDR X0, [X0 + 0x40]
	0x01E12918 BL 0x1C16CF4
	0x01E1291C ADRP X0, 0x22E8000
	0x01E12920 LDR X0, [X0 + 0x48]
	0x01E12924 BL 0x1C16CF4
	0x01E12928 ADRP X0, 0x22E6000
	0x01E1292C LDR X0, [X0 + 0xEE0]
	0x01E12930 BL 0x1C16CF4
	0x01E12934 ADRP X0, 0x22E6000
	0x01E12938 LDR X0, [X0 + 0xED8]
	0x01E1293C BL 0x1C16CF4
	0x01E12940 MOVZ W8, 0x1
	0x01E12944 STRB W8, [X21 + 0xDF2]
	0x01E12948 STP X31, X31, [X31 + 0x60]
	0x01E1294C STR X31, [X31 + 0x70]
	0x01E12950 STP X31, X31, [X31 + 0x48]
	0x01E12954 STR X31, [X31 + 0x58]
	0x01E12958 STP X31, X31, [X31 + 0x30]
	0x01E1295C STR X31, [X31 + 0x40]
	0x01E12960 LDR X8, [X20 + 0x28]
	0x01E12964 CBZ X8, 0x1E12CD4
	0x01E12968 LDR X0, [X8 + 0x18]
	0x01E1296C CBZ X0, 0x1E12CD4
	0x01E12970 ADRP X8, 0x22E8000
	0x01E12974 LDR X8, [X8 + 0x38]
	0x01E12978 ADRP X26, 0x22E8000
	0x01E1297C ADRP X29, 0x22E8000
	0x01E12980 ADRP X24, 0x22E8000
	0x01E12984 ADRP X27, 0x22E7000
	0x01E12988 ADRP X25, 0x22E8000
	0x01E1298C LDR X26, [X26 + 0x18]
	0x01E12990 LDR X29, [X29 + 0x40]
	0x01E12994 LDR X24, [X24 + 0x10]
	0x01E12998 LDR X27, [X27 + 0x3B0]
	0x01E1299C LDR X25, [X25]
	0x01E129A0 LDR X1, [X8]
	0x01E129A4 ADD X8, X31, 0xA0
	0x01E129A8 BL 0x301CB58
	0x01E129AC LDR V0, [X31 + 0xA]
	0x01E129B0 LDR X8, [X31 + 0xB0]
	0x01E129B4 STR V0, [X31 + 0x6]
	0x01E129B8 STR X8, [X31 + 0x70]
	0x01E129BC LDR X1, [X26]
	0x01E129C0 ADD X0, X31, 0x60
	0x01E129C4 BL 0x2BC4350
	0x01E129C8 TBZ X0, 0x0, 0x1E12C24
	0x01E129CC ADRP X8, 0x22E6000
	0x01E129D0 LDR X21, [X31 + 0x70]
	0x01E129D4 LDR X8, [X8 + 0xED8]
	0x01E129D8 LDR X0, [X8]
	0x01E129DC BL 0x1C16F10
	0x01E129E0 ADRP X8, 0x22E6000
	0x01E129E4 LDR X8, [X8 + 0xEE0]
	0x01E129E8 MOV X22, X0
	0x01E129EC LDR X1, [X8]
	0x01E129F0 BL 0x301B7C4
	0x01E129F4 CBZ X21, 0x1E12CB0
	0x01E129F8 LDR X1, [X29]
	0x01E129FC ADD X8, X31, 0xA0
	0x01E12A00 MOV X0, X21
	0x01E12A04 BL 0x301CB58
	0x01E12A08 LDR V0, [X31 + 0xA]
	0x01E12A0C LDR X8, [X31 + 0xB0]
	0x01E12A10 STR V0, [X31 + 0x3]
	0x01E12A14 STR X8, [X31 + 0x40]
	0x01E12A18 LDR X1, [X24]
	0x01E12A1C ADD X0, X31, 0x30
	0x01E12A20 BL 0x2BC4350
	0x01E12A24 TBZ X0, 0x0, 0x1E12A48
	0x01E12A28 LDR X8, [X31 + 0x40]
	0x01E12A2C CBZ X8, 0x1E12BC4
	0x01E12A30 CBZ X22, 0x1E12BCC
	0x01E12A34 LDR X1, [X8 + 0x28]
	0x01E12A38 LDR X2, [X27]
	0x01E12A3C MOV X0, X22
	0x01E12A40 BL 0x301C194
	0x01E12A44 B 0x1E12A18
	0x01E12A48 MOV X23, X31
	0x01E12A4C MOVZ W28, 0x6
	0x01E12A50 LDR X1, [X25]
	0x01E12A54 ADD X0, X31, 0x30
	0x01E12A58 BL 0x2BC434C
	0x01E12A5C CBNZ X23, 0x1E12CB4
	0x01E12A60 CMP W28, 0x6
	0x01E12A64 B.EQ 0x1E12A6C
	0x01E12A68 CBNZ W28, 0x1E12C24
	0x01E12A6C CBZ X22, 0x1E12CC4
	0x01E12A70 ADRP X8, 0x22E8000
	0x01E12A74 LDR X8, [X8 + 0x48]
	0x01E12A78 LDR X1, [X8]
	0x01E12A7C MOV X0, X22
	0x01E12A80 BL 0x301DDC4
	0x01E12A84 MOV X1, X0
	0x01E12A88 ADD X0, X31, 0x48
	0x01E12A8C MOV W2, W19
	0x01E12A90 BL 0x1E154C8
	0x01E12A94 LDR X8, [X20 + 0x28]
	0x01E12A98 CBZ X8, 0x1E12CC0
	0x01E12A9C LDR X0, [X8 + 0x20]
	0x01E12AA0 LDUR V0, [X31 + 0x48]
	0x01E12AA4 LDR X8, [X31 + 0x58]
	0x01E12AA8 STR V0, [X31 + 0x1]
	0x01E12AAC STR X8, [X31 + 0x20]
	0x01E12AB0 CBZ X0, 0x1E12CC8
	0x01E12AB4 LDR V0, [X31 + 0x1]
	0x01E12AB8 LDR X8, [X31 + 0x20]
	0x01E12ABC ADRP X10, 0x22E8000
	0x01E12AC0 STR V0, [X31 + 0x8]
	0x01E12AC4 STR X8, [X31 + 0x90]
	0x01E12AC8 LDR W9, [X0 + 0x1C]
	0x01E12ACC LDR X8, [X0 + 0x10]
	0x01E12AD0 LDR X10, [X10 + 0x30]
	0x01E12AD4 ADD W9, W9, 0x1
	0x01E12AD8 LDR X10, [X10]
	0x01E12ADC STR W9, [X0 + 0x1C]
	0x01E12AE0 CBZ X8, 0x1E12CBC
	0x01E12AE4 LDRSW X9, [X0 + 0x18]
	0x01E12AE8 LDR W11, [X8 + 0x18]
	0x01E12AEC CMP W9, W11
	0x01E12AF0 B.CS 0x1E12B18
	0x01E12AF4 ADD W10, W9, 0x1
	0x01E12AF8 STR W10, [X0 + 0x18]
	0x01E12AFC LDR X10, [X31 + 0x90]
	0x01E12B00 LDR V0, [X31 + 0x8]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+112], X24
	004 Move [X31+120], X23
	005 Move [X31+128], X22
	006 Move [X31+136], X21
	007 Move [X31+144], X20
	008 Move [X31+152], X19
	009 Move X20, 0x25C7000
	010 Move W8, [X20+3566]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {45}
	016 Move X0, 0x22E8000
	017 Move X0, [X0+3808]
	018 Call 0x1C17CF4
	019 Move X0, 0x22E8000
	020 Move X0, [X0+3816]
	021 Call 0x1C17CF4
	022 Move X0, 0x22E8000
	023 Move X0, [X0+3888]
	024 Call 0x1C17CF4
	025 Move X0, 0x22E8000
	026 Move X0, [X0+3824]
	027 Call 0x1C17CF4
	028 Move X0, 0x22E8000
	029 Move X0, [X0+3896]
	030 Call 0x1C17CF4
	031 Move X0, 0x22E8000
	032 Move X0, [X0+3904]
	033 Call 0x1C17CF4
	034 Move X0, 0x22E8000
	035 Move X0, [X0+3832]
	036 Call 0x1C17CF4
	037 Move X0, 0x22E8000
	038 Move X0, [X0+3912]
	039 Call 0x1C17CF4
	040 Move X0, 0x22E8000
	041 Move X0, [X0+3840]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X20+3566], W8
	045 Move [X31+64], X31
	046 Move [X31+72], X31
	047 Move [X31+80], X31
	048 Move [X31+32], X31
	049 Move [X31+40], X31
	050 Move [X31+48], X31
	051 Move X8, [X19+40]
	052 Compare X8, 0
	053 JumpIfEqual {157}
	054 Move X0, [X8+16]
	055 Compare X0, 0
	056 JumpIfEqual {157}
	057 Move X8, 0x22E8000
	058 Move X8, [X8+3808]
	059 Move X1, [X8]
	060 Call Dictionary`2<Object, Object>.get_Values, X0
	061 Compare X0, 0
	062 JumpIfEqual {157}
	063 Move X8, 0x22E8000
	064 Move X8, [X8+3840]
	065 Move X22, 0x22E8000
	066 Move X23, 0x22E8000
	067 Move X22, [X22+3824]
	068 Move X23, [X23+3912]
	069 Move X1, [X8]
	070 Move X24, 0x22E8000
	071 Move X21, 0x22E8000
	072 Move X20, 0x22E8000
	073 Move X24, [X24+3896]
	074 Move X21, [X21+3888]
	075 Move X20, [X20+3816]
	076 Add X8, X31, 8
	077 Call ValueCollection<Object, Object>.GetEnumerator, X0
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 Move X8, [X31+24]
	080 Move [X31+4], V0
	081 Move [X31+80], X8
	082 Move X1, [X22]
	083 Add X0, X31, 64
	084 Call Enumerator<Object, Object>.MoveNext, X0
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {128}
	089 Move X19, [X31+80]
	090 Compare X19, 0
	091 JumpIfEqual {153}
	092 Move X0, [X19+32]
	093 Compare X0, 0
	094 JumpIfEqual {154}
	095 Move X1, [X23]
	096 Add X8, X31, 8
	097 Call List`1<Object>.GetEnumerator, X0
	098 NotImplemented "Instruction LDUR not yet implemented."
	099 Move X8, [X31+24]
	100 Move [X31+2], V0
	101 Move [X31+48], X8
	102 Move X1, [X24]
	103 Add X0, X31, 32
	104 Call Enumerator<Object>.MoveNext, X0
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {117}
	109 Move X0, [X31+48]
	110 Compare X0, 0
	111 JumpIfEqual {123}
	112 Move X8, [X0]
	113 Move X1, [X19+16]
	114 Move X9, [X8+376]
	115 Move X2, [X8+384]
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Move X19, X31
	118 Move X1, [X21]
	119 Add X0, X31, 32
	120 Call Enumerator<Object>.Dispose, X0
	121 Compare X19, 0
	122 JumpIfEqual {82}
	123 Call 0x1C17F20
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Call 0x3EB2AD0
	126 Move X19, [X0]
	127 Call 0x3EB2AE0
	128 Move X1, [X20]
	129 Add X0, X31, 64
	130 Call Enumerator<Object, Object>.Dispose, X0
	131 Move X20, [X31+144]
	132 Move X19, [X31+152]
	133 Move X22, [X31+128]
	134 Move X21, [X31+136]
	135 Move X24, [X31+112]
	136 Move X23, [X31+120]
	137 Move X30, [X31+96]
	138 Move W0, 1
	139 Add X31, X31, 160
	140 Return X0
	141 Move [X31], X1
	142 Move [X31+104], X0
	143 Move X19, X31
	144 Move X1, [X21]
	145 Add X0, X31, 32
	146 Call Enumerator<Object>.Dispose, X0
	147 Move X0, [X31+104]
	148 Move X1, [X31]
	149 Compare X19, 0
	150 JumpIfEqual {160}
	151 Move X0, X19
	152 Call 0x1C17F18
	153 Call 0x1C17F20
	154 Call 0x1C17F20
	155 Move X0, X19
	156 Call 0x1C17F18
	157 Call 0x1C17F20
	158 Move [X31], X1
	159 Move [X31+104], X0
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Call 0x3EB2AD0
	162 Move X19, [X0]
	163 Call 0x3EB2AE0
	164 Move X1, [X20]
	165 Add X0, X31, 64
	166 Call Enumerator<Object, Object>.Dispose, X0
	167 Compare X19, 0
	168 JumpIfEqual {131}
	169 Move X0, X19
	170 Call 0x1C17F18
	171 Move [X31+104], X0
	172 Move X19, X31
	173 Move [X31+104], X0
	174 Move X1, [X20]
	175 Add X0, X31, 64
	176 Call Enumerator<Object, Object>.Dispose, X0
	177 Compare X19, 0
	178 JumpIfNotEqual {181}
	179 Move X0, [X31+104]
	180 Call 0x1D2D690
	181 Move X0, X19
	182 Call 0x1C17F18
	183 Call 0x1991590

Method: System.Void FindObjects()

Disassembly:
	0x01E12B04 MOVZ W11, 0x18
	0x01E12B08 MADD X8, X9, X11, X8
	0x01E12B0C STR X10, [X8 + 0x30]
	0x01E12B10 STR V0, [X8 + 0x2]
	0x01E12B14 B 0x1E12B3C
	0x01E12B18 LDR X8, [X10 + 0x20]
	0x01E12B1C LDR V0, [X31 + 0x8]
	0x01E12B20 LDR X9, [X31 + 0x90]
	0x01E12B24 LDR X8, [X8 + 0xC0]
	0x01E12B28 LDR X2, [X8 + 0x70]
	0x01E12B2C STR V0, [X31 + 0xA]
	0x01E12B30 STR X9, [X31 + 0xB0]
	0x01E12B34 ADD X1, X31, 0xA0
	0x01E12B38 BL 0x3010500
	0x01E12B3C LDR X1, [X29]
	0x01E12B40 ADD X8, X31, 0xA0
	0x01E12B44 MOV X0, X21
	0x01E12B48 BL 0x301CB58
	0x01E12B4C LDR V0, [X31 + 0xA]
	0x01E12B50 LDR X8, [X31 + 0xB0]
	0x01E12B54 STR V0, [X31 + 0x3]
	0x01E12B58 STR X8, [X31 + 0x40]
	0x01E12B5C LDR X1, [X24]
	0x01E12B60 ADD X0, X31, 0x30
	0x01E12B64 BL 0x2BC4350
	0x01E12B68 TBZ X0, 0x0, 0x1E12B98
	0x01E12B6C LDR X8, [X31 + 0x40]
	0x01E12B70 LDUR V0, [X31 + 0x48]
	0x01E12B74 LDR X9, [X31 + 0x58]
	0x01E12B78 STR V0, [X31 + 0xA]
	0x01E12B7C STR X9, [X31 + 0xB0]
	0x01E12B80 CBZ X8, 0x1E12BD4
	0x01E12B84 LDR X9, [X31 + 0xB0]
	0x01E12B88 LDR V0, [X31 + 0xA]
	0x01E12B8C STR X9, [X8 + 0x48]
	0x01E12B90 STUR V0, [X8 + 0x38]
	0x01E12B94 B 0x1E12B5C
	0x01E12B98 MOV X21, X31
	0x01E12B9C MOVZ W22, 0x9
	0x01E12BA0 LDR X1, [X25]
	0x01E12BA4 ADD X0, X31, 0x30
	0x01E12BA8 BL 0x2BC434C
	0x01E12BAC CBNZ X21, 0x1E12CCC
	0x01E12BB0 CMP W22, 0x9
	0x01E12BB4 B.EQ 0x1E12BBC
	0x01E12BB8 CBNZ W22, 0x1E12C24
	0x01E12BBC ADD W19, W19, 0x1
	0x01E12BC0 B 0x1E129BC
	0x01E12BC4 BL 0x1C16F20
	0x01E12BC8 B 0x1E12CD8
	0x01E12BCC BL 0x1C16F20
	0x01E12BD0 B 0x1E12CD8
	0x01E12BD4 BL 0x1C16F20
	0x01E12BD8 B 0x1E12CD8
	0x01E12BDC B 0x1E12BEC
	0x01E12BE0 B 0x1E12C08
	0x01E12BE4 B 0x1E12C08
	0x01E12BE8 B 0x1E12C08
	0x01E12BEC CMP W1, 0x1
	0x01E12BF0 B.NE 0x1E12C84
	0x01E12BF4 BL 0x3EB1AD0
	0x01E12BF8 LDR X21, [X0]
	0x01E12BFC BL 0x3EB1AE0
	0x01E12C00 MOV W22, W31
	0x01E12C04 B 0x1E12BA0
	0x01E12C08 CMP W1, 0x1
	0x01E12C0C B.NE 0x1E12C58
	0x01E12C10 BL 0x3EB1AD0
	0x01E12C14 LDR X23, [X0]
	0x01E12C18 BL 0x3EB1AE0
	0x01E12C1C MOV W28, W31
	0x01E12C20 B 0x1E12A50
	0x01E12C24 ADRP X8, 0x22E8000
	0x01E12C28 LDR X8, [X8 + 0x8]
	0x01E12C2C ADD X0, X31, 0x60
	0x01E12C30 LDR X1, [X8]
	0x01E12C34 BL 0x2BC434C
	0x01E12C38 LDP X20, X19, [X31 + 0x110]
	0x01E12C3C LDP X22, X21, [X31 + 0x100]
	0x01E12C40 LDP X24, X23, [X31 + 0xF0]
	0x01E12C44 LDP X26, X25, [X31 + 0xE0]
	0x01E12C48 LDP X28, X27, [X31 + 0xD0]
	0x01E12C4C LDP X29, X30, [X31 + 0xC0]
	0x01E12C50 ADD X31, X31, 0x120
	0x01E12C54 RET
	0x01E12C58 MOV X19, X1
	0x01E12C5C MOV X20, X0
	0x01E12C60 MOV X23, X31
	0x01E12C64 LDR X1, [X25]
	0x01E12C68 ADD X0, X31, 0x30
	0x01E12C6C BL 0x2BC434C
	0x01E12C70 MOV X0, X20
	0x01E12C74 MOV X1, X19
	0x01E12C78 CBZ X23, 0x1E12D28
	0x01E12C7C MOV X0, X23
	0x01E12C80 BL 0x1C16F18
	0x01E12C84 MOV X19, X1
	0x01E12C88 MOV X20, X0
	0x01E12C8C MOV X21, X31
	0x01E12C90 LDR X1, [X25]
	0x01E12C94 ADD X0, X31, 0x30
	0x01E12C98 BL 0x2BC434C
	0x01E12C9C MOV X0, X20
	0x01E12CA0 MOV X1, X19
	0x01E12CA4 CBZ X21, 0x1E12D28
	0x01E12CA8 MOV X0, X21
	0x01E12CAC BL 0x1C16F18
	0x01E12CB0 BL 0x1C16F20
	0x01E12CB4 MOV X0, X23
	0x01E12CB8 BL 0x1C16F18
	0x01E12CBC BL 0x1C16F20
	0x01E12CC0 BL 0x1C16F20
	0x01E12CC4 BL 0x1C16F20
	0x01E12CC8 BL 0x1C16F20
	0x01E12CCC MOV X0, X21
	0x01E12CD0 BL 0x1C16F18
	0x01E12CD4 BL 0x1C16F20
	0x01E12CD8 MOV X19, X1
	0x01E12CDC MOV X20, X0
	0x01E12CE0 B 0x1E12C90
	0x01E12CE4 MOV X19, X1
	0x01E12CE8 MOV X20, X0
	0x01E12CEC B 0x1E12C64
	0x01E12CF0 B 0x1E12D28
	0x01E12CF4 B 0x1E12D28
	0x01E12CF8 B 0x1E12D28
	0x01E12CFC B 0x1E12D28
	0x01E12D00 B 0x1E12D28
	0x01E12D04 B 0x1E12D28
	0x01E12D08 B 0x1E12D28
	0x01E12D0C B 0x1E12D28
	0x01E12D10 B 0x1E12D28
	0x01E12D14 B 0x1E12D28
	0x01E12D18 B 0x1E12D28
	0x01E12D1C B 0x1E12D28
	0x01E12D20 B 0x1E12D28
	0x01E12D24 B 0x1E12D28
	0x01E12D28 CMP W1, 0x1
	0x01E12D2C B.NE 0x1E12D5C
	0x01E12D30 BL 0x3EB1AD0
	0x01E12D34 LDR X19, [X0]
	0x01E12D38 BL 0x3EB1AE0
	0x01E12D3C ADRP X8, 0x22E8000
	0x01E12D40 LDR X8, [X8 + 0x8]
	0x01E12D44 ADD X0, X31, 0x60
	0x01E12D48 LDR X1, [X8]
	0x01E12D4C BL 0x2BC434C
	0x01E12D50 CBZ X19, 0x1E12C38
	0x01E12D54 MOV X0, X19
	0x01E12D58 BL 0x1C16F18
	0x01E12D5C MOV X20, X0
	0x01E12D60 MOV X19, X31
	0x01E12D64 B 0x1E12D6C
	0x01E12D68 MOV X20, X0
	0x01E12D6C ADRP X8, 0x22E8000
	0x01E12D70 LDR X8, [X8 + 0x8]
	0x01E12D74 LDR X1, [X8]
	0x01E12D78 ADD X0, X31, 0x60
	0x01E12D7C BL 0x2BC434C
	0x01E12D80 CBNZ X19, 0x1E12D8C
	0x01E12D84 MOV X0, X20
	0x01E12D88 BL 0x1D2C690
	0x01E12D8C MOV X0, X19
	0x01E12D90 BL 0x1C16F18
	0x01E12D94 BL 0x1990590
	0x01E12D98 SUB X31, X31, 0x180
	0x01E12D9C STP D11, D10, [X31 + 0x100]
	0x01E12DA0 STP D9, D8, [X31 + 0x110]
	0x01E12DA4 STP X29, X30, [X31 + 0x120]
	0x01E12DA8 STP X28, X27, [X31 + 0x130]
	0x01E12DAC STP X26, X25, [X31 + 0x140]
	0x01E12DB0 STP X24, X23, [X31 + 0x150]
	0x01E12DB4 STP X22, X21, [X31 + 0x160]
	0x01E12DB8 STP X20, X19, [X31 + 0x170]
	0x01E12DBC ADRP X19, 0x25C6000
	0x01E12DC0 LDRB W8, [X19 + 0xDF3]
	0x01E12DC4 STR X0, [X31 + 0x18]
	0x01E12DC8 TBNZ X8, 0x0, 0x1E1305C
	0x01E12DCC ADRP X0, 0x22E8000
	0x01E12DD0 LDR X0, [X0 + 0x50]
	0x01E12DD4 BL 0x1C16CF4
	0x01E12DD8 ADRP X0, 0x22E8000
	0x01E12DDC LDR X0, [X0 + 0x58]
	0x01E12DE0 BL 0x1C16CF4
	0x01E12DE4 ADRP X0, 0x22E8000
	0x01E12DE8 LDR X0, [X0 + 0x60]
	0x01E12DEC BL 0x1C16CF4
	0x01E12DF0 ADRP X0, 0x22E7000
	0x01E12DF4 LDR X0, [X0 + 0xF68]
	0x01E12DF8 BL 0x1C16CF4
	0x01E12DFC ADRP X0, 0x22E8000
	0x01E12E00 LDR X0, [X0 + 0x68]
	0x01E12E04 BL 0x1C16CF4
	0x01E12E08 ADRP X0, 0x22E7000
	0x01E12E0C LDR X0, [X0 + 0xF78]
	0x01E12E10 BL 0x1C16CF4
	0x01E12E14 ADRP X0, 0x22E8000
	0x01E12E18 LDR X0, [X0 + 0x70]
	0x01E12E1C BL 0x1C16CF4
	0x01E12E20 ADRP X0, 0x22E8000
	0x01E12E24 LDR X0, [X0 + 0x78]
	0x01E12E28 BL 0x1C16CF4
	0x01E12E2C ADRP X0, 0x22E8000
	0x01E12E30 LDR X0, [X0 + 0x80]
	0x01E12E34 BL 0x1C16CF4
	0x01E12E38 ADRP X0, 0x22E8000
	0x01E12E3C LDR X0, [X0 + 0x88]
	0x01E12E40 BL 0x1C16CF4
	0x01E12E44 ADRP X0, 0x22E4000
	0x01E12E48 LDR X0, [X0 + 0xB10]
	0x01E12E4C BL 0x1C16CF4
	0x01E12E50 ADRP X0, 0x22E7000
	0x01E12E54 LDR X0, [X0 + 0xF80]
	0x01E12E58 BL 0x1C16CF4
	0x01E12E5C ADRP X0, 0x22E8000
	0x01E12E60 LDR X0, [X0 + 0x90]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X20, 0x25C7000
	015 Move W8, [X20+3567]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {62}
	021 Move X0, 0x22E8000
	022 Move X0, [X0+3808]
	023 Call 0x1C17CF4
	024 Move X0, 0x22E8000
	025 Move X0, [X0+3944]
	026 Call 0x1C17CF4
	027 Move X0, 0x22E8000
	028 Move X0, [X0+3952]
	029 Call 0x1C17CF4
	030 Move X0, 0x22E8000
	031 Move X0, [X0+3960]
	032 Call 0x1C17CF4
	033 Move X0, 0x22E8000
	034 Move X0, [X0+3816]
	035 Call 0x1C17CF4
	036 Move X0, 0x22E8000
	037 Move X0, [X0+3968]
	038 Call 0x1C17CF4
	039 Move X0, 0x22E8000
	040 Move X0, [X0+3824]
	041 Call 0x1C17CF4
	042 Move X0, 0x22E8000
	043 Move X0, [X0+3976]
	044 Call 0x1C17CF4
	045 Move X0, 0x22E8000
	046 Move X0, [X0+3832]
	047 Call 0x1C17CF4
	048 Move X0, 0x22E8000
	049 Move X0, [X0+3984]
	050 Call 0x1C17CF4
	051 Move X0, 0x22E8000
	052 Move X0, [X0+3992]
	053 Call 0x1C17CF4
	054 Move X0, 0x22E8000
	055 Move X0, [X0+4000]
	056 Call 0x1C17CF4
	057 Move X0, 0x22E8000
	058 Move X0, [X0+3840]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X20+3567], W8
	062 Move [X31+80], X31
	063 Move [X31+88], X31
	064 Move [X31+96], X31
	065 Move [X31+48], X31
	066 Move [X31+56], X31
	067 Move [X31+64], X31
	068 Move X8, [X19+40]
	069 Compare X8, 0
	070 JumpIfEqual {204}
	071 Move X0, [X8+16]
	072 Compare X0, 0
	073 JumpIfEqual {204}
	074 Move X8, 0x22E8000
	075 Move X8, [X8+3808]
	076 Move X1, [X8]
	077 Call Dictionary`2<Object, Object>.get_Values, X0
	078 Compare X0, 0
	079 JumpIfEqual {204}
	080 Move X8, 0x22E8000
	081 Move X8, [X8+3840]
	082 Move X22, 0x22E8000
	083 Move X23, 0x22E8000
	084 Move X24, 0x22E8000
	085 Move X25, 0x22E8000
	086 Move X26, 0x22E8000
	087 Move X21, 0x22E8000
	088 Move X22, [X22+3824]
	089 Move X23, [X23+3984]
	090 Move X24, [X24+3944]
	091 Move X25, [X25+4000]
	092 Move X26, [X26+3968]
	093 Move X21, [X21+3960]
	094 Move X1, [X8]
	095 Move X27, 0x22E8000
	096 Move X28, 0x22E8000
	097 Move X27, [X27+3992]
	098 Move X28, [X28+3952]
	099 Add X8, X31, 24
	100 Call ValueCollection<Object, Object>.GetEnumerator, X0
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 Move X8, [X31+40]
	103 Move [X31+5], V0
	104 Move [X31+96], X8
	105 Move X1, [X22]
	106 Add X0, X31, 80
	107 Call Enumerator<Object, Object>.MoveNext, X0
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfNotEqual {167}
	112 Move X29, [X31+96]
	113 Compare X29, 0
	114 JumpIfEqual {201}
	115 Move X0, [X29+24]
	116 Compare X0, 0
	117 JumpIfEqual {202}
	118 Move X1, [X23]
	119 Call 0x21E6F08, X0
	120 Move X1, [X24]
	121 Call Enumerable.ToList, X0
	122 Move [X29+48], X0
	123 Compare X0, 0
	124 JumpIfEqual {200}
	125 Move X1, [X25]
	126 Add X8, X31, 24
	127 Call List`1<Object>.GetEnumerator, X0
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 Move X8, [X31+40]
	130 Move [X31+3], V0
	131 Move [X31+64], X8
	132 Move X1, [X26]
	133 Add X0, X31, 48
	134 Call Enumerator<Object>.MoveNext, X0
	135 Move TEMP, X0
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfNotEqual {143}
	139 Move X8, [X31+64]
	140 Compare X8, 0
	141 JumpIfEqual {161}
	142 Move [X8+36], W31
	143 Move X19, X31
	144 Move W20, 6
	145 Move X1, [X21]
	146 Add X0, X31, 48
	147 Call Enumerator<Object>.Dispose, X0
	148 Compare X19, 0
	149 JumpIfNotEqual {198}
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Compare W20, 0
	152 JumpIfNotEqual {167}
	153 Move X0, [X29+24]
	154 Compare X0, 0
	155 JumpIfEqual {203}
	156 Move X1, [X27]
	157 Call 0x21E6F08, X0
	158 Move X1, [X28]
	159 Call Enumerable.ToList, X0
	160 Move [X29+40], X0
	161 Call 0x1C17F20
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Call 0x3EB2AD0
	164 Move X19, [X0]
	165 Call 0x3EB2AE0
	166 Move W20, W31
	167 Move X8, 0x22E8000
	168 Move X8, [X8+3816]
	169 Add X0, X31, 80
	170 Move X1, [X8]
	171 Call Enumerator<Object, Object>.Dispose, X0
	172 Move X20, [X31+192]
	173 Move X19, [X31+200]
	174 Move X22, [X31+176]
	175 Move X21, [X31+184]
	176 Move X24, [X31+160]
	177 Move X23, [X31+168]
	178 Move X26, [X31+144]
	179 Move X25, [X31+152]
	180 Move X28, [X31+128]
	181 Move X27, [X31+136]
	182 Move X29, [X31+112]
	183 Move X30, [X31+120]
	184 Add X31, X31, 208
	185 Return 
	186 Move [X31+8], X1
	187 Move [X31+16], X0
	188 Move X19, X31
	189 Move X1, [X21]
	190 Add X0, X31, 48
	191 Call Enumerator<Object>.Dispose, X0
	192 Move X1, [X31+8]
	193 Move X0, [X31+16]
	194 Compare X19, 0
	195 JumpIfEqual {207}
	196 Move X0, X19
	197 Call 0x1C17F18
	198 Move X0, X19
	199 Call 0x1C17F18
	200 Call 0x1C17F20
	201 Call 0x1C17F20
	202 Call 0x1C17F20
	203 Call 0x1C17F20
	204 Call 0x1C17F20
	205 Move [X31+8], X1
	206 Move [X31+16], X0
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Call 0x3EB2AD0
	209 Move X19, [X0]
	210 Call 0x3EB2AE0
	211 Move X8, 0x22E8000
	212 Move X8, [X8+3816]
	213 Add X0, X31, 80
	214 Move X1, [X8]
	215 Call Enumerator<Object, Object>.Dispose, X0
	216 Compare X19, 0
	217 JumpIfEqual {172}
	218 Move X0, X19
	219 Call 0x1C17F18
	220 Move [X31+16], X0
	221 Move X19, X31
	222 Move [X31+16], X0
	223 Move X8, 0x22E8000
	224 Move X8, [X8+3816]
	225 Move X1, [X8]
	226 Add X0, X31, 80
	227 Call Enumerator<Object, Object>.Dispose, X0
	228 Compare X19, 0
	229 JumpIfNotEqual {232}
	230 Move X0, [X31+16]
	231 Call 0x1D2D690
	232 Move X0, X19
	233 Call 0x1C17F18
	234 Call 0x1991590

Method: System.Void MoveNetObjects()

Disassembly:
	0x01E13548 LDR X9, [X20]
	0x01E1354C ADD W10, W10, 0x1
	0x01E13550 STR W10, [X24 + 0x1C]
	0x01E13554 CBZ X8, 0x1E135DC
	0x01E13558 LDRSW X10, [X24 + 0x18]
	0x01E1355C LDR W11, [X8 + 0x18]
	0x01E13560 CMP W10, W11
	0x01E13564 B.CS 0x1E1357C
	0x01E13568 ADD W9, W10, 0x1
	0x01E1356C ADD X8, X8, X10, 0x4, LSL
	0x01E13570 STR W9, [X24 + 0x18]
	0x01E13574 STP X1, X25, [X8 + 0x20]
	0x01E13578 B 0x1E13594
	0x01E1357C LDR X8, [X9 + 0x20]
	0x01E13580 LDR X8, [X8 + 0xC0]
	0x01E13584 LDR X3, [X8 + 0x70]
	0x01E13588 MOV X0, X24
	0x01E1358C MOV X2, X25
	0x01E13590 BL 0x30D1A48
	0x01E13594 FMOV S0, W25
	0x01E13598 FADD S9, S9, S0
	0x01E1359C B 0x1E13528
	0x01E135A0 MOV X27, X31
	0x01E135A4 MOVZ W25, 0x9
	0x01E135A8 ADRP X8, 0x22E3000
	0x01E135AC LDR X8, [X8 + 0xB10]
	0x01E135B0 MOV V8.16B, V9.16B
	0x01E135B4 LDR X1, [X8]
	0x01E135B8 ADD X0, X31, 0x80
	0x01E135BC BL 0x2BD1D78
	0x01E135C0 CBNZ X27, 0x1E139C8
	0x01E135C4 CMP W25, 0x9
	0x01E135C8 B.EQ 0x1E134E0
	0x01E135CC CBZ W25, 0x1E134E0
	0x01E135D0 B 0x1E13628
	0x01E135D4 BL 0x1C16F20
	0x01E135D8 B 0x1E13C68
	0x01E135DC MOV V8.16B, V9.16B
	0x01E135E0 BL 0x1C16F20
	0x01E135E4 B 0x1E13C68
	0x01E135E8 B 0x1E135EC
	0x01E135EC MOV X25, X0
	0x01E135F0 B 0x1E135FC
	0x01E135F4 MOV X25, X0
	0x01E135F8 MOV V9.16B, V8.16B
	0x01E135FC CMP W1, 0x1
	0x01E13600 B.NE 0x1E13970
	0x01E13604 MOV X0, X25
	0x01E13608 BL 0x3EB1AD0
	0x01E1360C LDR X27, [X0]
	0x01E13610 BL 0x3EB1AE0
	0x01E13614 MOV W25, W31
	0x01E13618 B 0x1E135A8
	0x01E1361C MOV X27, X31
	0x01E13620 MOVZ W25, 0xD
	0x01E13624 B 0x1E1362C
	0x01E13628 MOV X27, X31
	0x01E1362C ADRP X8, 0x22E7000
	0x01E13630 LDR X8, [X8 + 0x88]
	0x01E13634 LDR X1, [X8]
	0x01E13638 ADD X0, X31, 0xA0
	0x01E1363C BL 0x2BC434C
	0x01E13640 CBNZ X27, 0x1E13C40
	0x01E13644 CMP W25, 0xD
	0x01E13648 B.EQ 0x1E13650
	0x01E1364C CBNZ W25, 0x1E13B60
	0x01E13650 ADRP X8, 0x22E7000
	0x01E13654 LDR X8, [X8 + 0x148]
	0x01E13658 LDR X0, [X8]
	0x01E1365C BL 0x1C16F10
	0x01E13660 ADRP X8, 0x22E7000
	0x01E13664 LDR X8, [X8 + 0x130]
	0x01E13668 MOV X27, X0
	0x01E1366C LDR X1, [X8]
	0x01E13670 BL 0x301B7C4
	0x01E13674 ADRP X8, 0x25C5000
	0x01E13678 LDRB W8, [X8 + 0x783]
	0x01E1367C CBNZ W8, 0x1E13698
	0x01E13680 ADRP X0, 0x22E0000
	0x01E13684 LDR X0, [X0 + 0x5A0]
	0x01E13688 BL 0x1C16CF4
	0x01E1368C MOVZ W8, 0x1
	0x01E13690 ADRP X9, 0x25C5000
	0x01E13694 STRB W8, [X9 + 0x783]
	0x01E13698 CBZ X22, 0x1E13C48
	0x01E1369C ADRP X8, 0x22E0000
	0x01E136A0 LDR X8, [X8 + 0x5A0]
	0x01E136A4 LDR X8, [X8]
	0x01E136A8 LDR X8, [X8 + 0xB8]
	0x01E136AC LDP S11, S10, [X8]
	0x01E136B0 LDR V9, [X8 + 0x8]
	0x01E136B4 ADRP X8, 0x22E7000
	0x01E136B8 LDR X8, [X8 + 0x128]
	0x01E136BC LDR X1, [X8]
	0x01E136C0 ADD X8, X31, 0x20
	0x01E136C4 MOV X0, X22
	0x01E136C8 BL 0x2F422AC
	0x01E136CC LDP V0, V1, [X31 + 0x20]
	0x01E136D0 MOV W26, W31
	0x01E136D4 STP V0, V1, [X31 + 0x60]
	0x01E136D8 ADRP X8, 0x22E7000
	0x01E136DC LDR X8, [X8 + 0x90]
	0x01E136E0 LDR X1, [X8]
	0x01E136E4 ADD X0, X31, 0x60
	0x01E136E8 BL 0x2BB3370
	0x01E136EC TBZ X0, 0x0, 0x1E13844
	0x01E136F0 ADRP X8, 0x22E7000
	0x01E136F4 LDR W28, [X31 + 0x70]
	0x01E136F8 LDR X25, [X31 + 0x78]
	0x01E136FC LDR X8, [X8 + 0x170]
	0x01E13700 LDR X0, [X8]
	0x01E13704 BL 0x1C16F10
	0x01E13708 MOV X22, X0
	0x01E1370C MOV X1, X31
	0x01E13710 BL 0x1DAB390
	0x01E13714 CBZ X22, 0x1E139E4
	0x01E13718 STR W28, [X22 + 0x10]
	0x01E1371C STR X25, [X22 + 0x18]
	0x01E13720 CBZ X25, 0x1E139EC
	0x01E13724 ADRP X8, 0x22E6000
	0x01E13728 LDR X8, [X8 + 0xFA0]
	0x01E1372C LDR X1, [X8]
	0x01E13730 ADD X8, X31, 0x20
	0x01E13734 MOV X0, X25
	0x01E13738 BL 0x301CB58
	0x01E1373C LDR V0, [X31 + 0x2]
	0x01E13740 LDR X8, [X31 + 0x30]
	0x01E13744 STR V0, [X31 + 0x4]
	0x01E13748 STR X8, [X31 + 0x50]
	0x01E1374C LDR X1, [X19]
	0x01E13750 ADD X0, X31, 0x40
	0x01E13754 BL 0x2BC4350
	0x01E13758 TBZ X0, 0x0, 0x1E13780
	0x01E1375C LDR X0, [X31 + 0x50]
	0x01E13760 CBZ X0, 0x1E13810
	0x01E13764 MOV X1, X31
	0x01E13768 BL 0x1E0D53C
	0x01E1376C FADD S11, S11, S0
	0x01E13770 FADD S10, S10, S1
	0x01E13774 FADD S9, S9, S2
	0x01E13778 ADD W26, W26, 0x1
	0x01E1377C B 0x1E1374C
	0x01E13780 MOV X28, X31
	0x01E13784 MOVZ W25, 0x12
	0x01E13788 ADRP X8, 0x22E6000
	0x01E1378C LDR X8, [X8 + 0xF78]
	0x01E13790 LDR X1, [X8]
	0x01E13794 ADD X0, X31, 0x40
	0x01E13798 BL 0x2BC434C
	0x01E1379C CBNZ X28, 0x1E139F4
	0x01E137A0 CBZ W25, 0x1E137AC
	0x01E137A4 CMP W25, 0x12
	0x01E137A8 B.NE 0x1E13850
	0x01E137AC CBZ X27, 0x1E13A08
	0x01E137B0 ADRP X9, 0x22E7000
	0x01E137B4 LDR W10, [X27 + 0x1C]
	0x01E137B8 LDR X8, [X27 + 0x10]
	0x01E137BC LDR X9, [X9 + 0x100]
	0x01E137C0 ADD W10, W10, 0x1
	0x01E137C4 LDR X9, [X9]
	0x01E137C8 STR W10, [X27 + 0x1C]
	0x01E137CC CBZ X8, 0x1E13A00
	0x01E137D0 LDRSW X10, [X27 + 0x18]
	0x01E137D4 LDR W11, [X8 + 0x18]
	0x01E137D8 CMP W10, W11
	0x01E137DC B.CS 0x1E137F4
	0x01E137E0 ADD W9, W10, 0x1
	0x01E137E4 ADD X8, X8, X10, 0x3, LSL
	0x01E137E8 STR W9, [X27 + 0x18]
	0x01E137EC STR X22, [X8 + 0x20]
	0x01E137F0 B 0x1E136D8
	0x01E137F4 LDR X8, [X9 + 0x20]
	0x01E137F8 LDR X8, [X8 + 0xC0]
	0x01E137FC LDR X2, [X8 + 0x70]
	0x01E13800 MOV X0, X27
	0x01E13804 MOV X1, X22
	0x01E13808 BL 0x301BF90
	0x01E1380C B 0x1E136D8
	0x01E13810 BL 0x1C16F20
	0x01E13814 B 0x1E13C68
	0x01E13818 B 0x1E13820
	0x01E1381C B 0x1E13820
	0x01E13820 MOV X25, X0
	0x01E13824 CMP W1, 0x1
	0x01E13828 B.NE 0x1E13998
	0x01E1382C MOV X0, X25
	0x01E13830 BL 0x3EB1AD0
	0x01E13834 LDR X28, [X0]
	0x01E13838 BL 0x3EB1AE0
	0x01E1383C MOV W25, W31
	0x01E13840 B 0x1E13788
	0x01E13844 MOV X22, X31
	0x01E13848 MOVZ W25, 0x13
	0x01E1384C B 0x1E13854
	0x01E13850 MOV X22, X31
	0x01E13854 ADRP X8, 0x22E7000
	0x01E13858 LDR X8, [X8 + 0x70]
	0x01E1385C LDR X1, [X8]
	0x01E13860 ADD X0, X31, 0x60
	0x01E13864 BL 0x2BB336C
	0x01E13868 CBNZ X22, 0x1E13C4C
	0x01E1386C CMP W25, 0x13
	0x01E13870 B.EQ 0x1E13878

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+88], X27
	004 Move [X31+96], X26
	005 Move [X31+104], X25
	006 Move [X31+112], X24
	007 Move [X31+120], X23
	008 Move [X31+128], X22
	009 Move [X31+136], X21
	010 Move [X31+144], X20
	011 Move [X31+152], X19
	012 Move X22, 0x25C6000
	013 Move X21, 0x22E6000
	014 Move X20, 0x22E6000
	015 Move W8, [X22+3568]
	016 Move X21, [X21+1408]
	017 Move X20, [X20+1416]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {64}
	023 Move X0, 0x22E7000
	024 Move X0, [X0+3808]
	025 Call 0x1C17CF4
	026 Move X0, 0x22E7000
	027 Move X0, [X0+3816]
	028 Call 0x1C17CF4
	029 Move X0, 0x22E7000
	030 Move X0, [X0+4048]
	031 Call 0x1C17CF4
	032 Move X0, 0x22E7000
	033 Move X0, [X0+3824]
	034 Call 0x1C17CF4
	035 Move X0, 0x22E7000
	036 Move X0, [X0+4056]
	037 Call 0x1C17CF4
	038 Move X0, 0x22E7000
	039 Move X0, [X0+3832]
	040 Call 0x1C17CF4
	041 Move X0, 0x22E7000
	042 Move X0, [X0+4064]
	043 Call 0x1C17CF4
	044 Move X0, 0x22E7000
	045 Move X0, [X0+4072]
	046 Call 0x1C17CF4
	047 Move X0, 0x22E7000
	048 Move X0, [X0+4080]
	049 Call 0x1C17CF4
	050 Move X0, 0x22E7000
	051 Move X0, [X0+4088]
	052 Call 0x1C17CF4
	053 Move X0, 0x22E6000
	054 Move X0, [X0+1416]
	055 Call 0x1C17CF4
	056 Move X0, 0x22E6000
	057 Move X0, [X0+1408]
	058 Call 0x1C17CF4
	059 Move X0, 0x22E7000
	060 Move X0, [X0+3840]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X22+3568], W8
	064 Move X0, [X21]
	065 Move [X31+48], X31
	066 Move [X31+56], X31
	067 Move [X31+64], X31
	068 Move [X31+24], X31
	069 Move [X31+32], X31
	070 Move [X31+40], X31
	071 Call 0x1C17F10
	072 Move X1, [X20]
	073 Move X20, X0
	074 Call List`1<Object>..ctor, X0
	075 Move X8, [X19+40]
	076 Compare X8, 0
	077 JumpIfEqual {178}
	078 Move X0, [X8+16]
	079 Compare X0, 0
	080 JumpIfEqual {178}
	081 Move X8, 0x22E7000
	082 Move X8, [X8+3808]
	083 Move X1, [X8]
	084 Call Dictionary`2<Object, Object>.get_Values, X0
	085 Compare X0, 0
	086 JumpIfEqual {178}
	087 Move X8, 0x22E7000
	088 Move X8, [X8+3840]
	089 Move X21, 0x22E7000
	090 Move X26, 0x22E7000
	091 Move X27, 0x22E7000
	092 Move X24, 0x22E7000
	093 Move X21, [X21+3824]
	094 Move X26, [X26+4072]
	095 Move X27, [X27+4080]
	096 Move X24, [X24+4088]
	097 Move X1, [X8]
	098 Move X23, 0x22E7000
	099 Move X22, 0x22E7000
	100 Move X25, 0x22E7000
	101 Move X23, [X23+4056]
	102 Move X22, [X22+4048]
	103 Move X25, [X25+3816]
	104 Add X8, X31, 0
	105 Call ValueCollection<Object, Object>.GetEnumerator, X0
	106 Move V0, [X31]
	107 Move X8, [X31+16]
	108 Move [X31+3], V0
	109 Move [X31+64], X8
	110 Move X1, [X21]
	111 Add X0, X31, 48
	112 Call Enumerator<Object, Object>.MoveNext, X0
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {131}
	117 Move X8, [X31+64]
	118 Compare X8, 0
	119 JumpIfEqual {176}
	120 Move X0, [X8+24]
	121 Compare X0, 0
	122 JumpIfEqual {177}
	123 Move X1, [X26]
	124 Call 0x21E6F08, X0
	125 Move X1, X0
	126 Compare X20, 0
	127 JumpIfEqual {175}
	128 Move X2, [X27]
	129 Move X0, X20
	130 Call List`1<Object>.AddRange, X0, X1
	131 Move X1, [X25]
	132 Add X0, X31, 48
	133 Call Enumerator<Object, Object>.Dispose, X0
	134 Compare X20, 0
	135 JumpIfEqual {178}
	136 Move X1, [X24]
	137 Add X8, X31, 24
	138 Move X0, X20
	139 Call List`1<Object>.GetEnumerator, X0
	140 Move X1, [X23]
	141 Add X0, X31, 24
	142 Call Enumerator<Object>.MoveNext, X0
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfNotEqual {158}
	147 Move X0, [X31+40]
	148 Compare X0, 0
	149 JumpIfEqual {173}
	150 Move X1, X31
	151 Call Component.get_transform, X0
	152 Compare X0, 0
	153 JumpIfEqual {174}
	154 Move X1, [X19+80]
	155 Move W2, 1
	156 Move X3, X31
	157 Call Transform.SetParent, X0, X1, X2
	158 Move X1, [X22]
	159 Add X0, X31, 24
	160 Call Enumerator<Object>.Dispose, X0
	161 Move X20, [X31+144]
	162 Move X19, [X31+152]
	163 Move X22, [X31+128]
	164 Move X21, [X31+136]
	165 Move X24, [X31+112]
	166 Move X23, [X31+120]
	167 Move X26, [X31+96]
	168 Move X25, [X31+104]
	169 Move X30, [X31+80]
	170 Move X27, [X31+88]
	171 Add X31, X31, 160
	172 Return 
	173 Call 0x1C17F20
	174 Call 0x1C17F20
	175 Call 0x1C17F20
	176 Call 0x1C17F20
	177 Call 0x1C17F20
	178 Call 0x1C17F20
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Call 0x3EB2AD0
	181 Move X20, [X0]
	182 Call 0x3EB2AE0
	183 Move X1, [X22]
	184 Add X0, X31, 24
	185 Call Enumerator<Object>.Dispose, X0
	186 Compare X20, 0
	187 JumpIfEqual {161}
	188 Move X0, X20
	189 Call 0x1C17F18
	190 Move X19, X0
	191 Move X20, X31
	192 Move X19, X0
	193 Move X1, [X22]
	194 Add X0, X31, 24
	195 Call Enumerator<Object>.Dispose, X0
	196 Compare X20, 0
	197 JumpIfEqual {219}
	198 Move X0, X20
	199 Call 0x1C17F18
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Call 0x3EB2AD0
	202 Move X21, [X0]
	203 Call 0x3EB2AE0
	204 Move X1, [X25]
	205 Add X0, X31, 48
	206 Call Enumerator<Object, Object>.Dispose, X0
	207 Compare X21, 0
	208 JumpIfEqual {134}
	209 Move X0, X21
	210 Call 0x1C17F18
	211 Move X19, X0
	212 Move X21, X31
	213 Move X19, X0
	214 Move X1, [X25]
	215 Add X0, X31, 48
	216 Call Enumerator<Object, Object>.Dispose, X0
	217 Compare X21, 0
	218 JumpIfNotEqual {221}
	219 Move X0, X19
	220 Call 0x1D2D690
	221 Move X0, X21
	222 Call 0x1C17F18
	223 Call 0x1991590

Method: System.Void SetAllLayers()

Disassembly:
	0x01E12E64 BL 0x1C16CF4
	0x01E12E68 ADRP X0, 0x22E8000
	0x01E12E6C LDR X0, [X0 + 0x98]
	0x01E12E70 BL 0x1C16CF4
	0x01E12E74 ADRP X0, 0x22E4000
	0x01E12E78 LDR X0, [X0 + 0xB18]
	0x01E12E7C BL 0x1C16CF4
	0x01E12E80 ADRP X0, 0x22E8000
	0x01E12E84 LDR X0, [X0 + 0xA0]
	0x01E12E88 BL 0x1C16CF4
	0x01E12E8C ADRP X0, 0x22E8000
	0x01E12E90 LDR X0, [X0 + 0xA8]
	0x01E12E94 BL 0x1C16CF4
	0x01E12E98 ADRP X0, 0x22E8000
	0x01E12E9C LDR X0, [X0 + 0xB0]
	0x01E12EA0 BL 0x1C16CF4
	0x01E12EA4 ADRP X0, 0x22E4000
	0x01E12EA8 LDR X0, [X0 + 0xB20]
	0x01E12EAC BL 0x1C16CF4
	0x01E12EB0 ADRP X0, 0x22E8000
	0x01E12EB4 LDR X0, [X0 + 0xB8]
	0x01E12EB8 BL 0x1C16CF4
	0x01E12EBC ADRP X0, 0x22E8000
	0x01E12EC0 LDR X0, [X0 + 0xC0]
	0x01E12EC4 BL 0x1C16CF4
	0x01E12EC8 ADRP X0, 0x22E7000
	0x01E12ECC LDR X0, [X0 + 0xF88]
	0x01E12ED0 BL 0x1C16CF4
	0x01E12ED4 ADRP X0, 0x22E8000
	0x01E12ED8 LDR X0, [X0 + 0xC8]
	0x01E12EDC BL 0x1C16CF4
	0x01E12EE0 ADRP X0, 0x22E8000
	0x01E12EE4 LDR X0, [X0 + 0xD0]
	0x01E12EE8 BL 0x1C16CF4
	0x01E12EEC ADRP X0, 0x22E8000
	0x01E12EF0 LDR X0, [X0 + 0xD8]
	0x01E12EF4 BL 0x1C16CF4
	0x01E12EF8 ADRP X0, 0x22E8000
	0x01E12EFC LDR X0, [X0 + 0xE0]
	0x01E12F00 BL 0x1C16CF4
	0x01E12F04 ADRP X0, 0x22E1000
	0x01E12F08 LDR X0, [X0 + 0xA58]
	0x01E12F0C BL 0x1C16CF4
	0x01E12F10 ADRP X0, 0x22E8000
	0x01E12F14 LDR X0, [X0 + 0xE8]
	0x01E12F18 BL 0x1C16CF4
	0x01E12F1C ADRP X0, 0x22E8000
	0x01E12F20 LDR X0, [X0 + 0xF0]
	0x01E12F24 BL 0x1C16CF4
	0x01E12F28 ADRP X0, 0x22E8000
	0x01E12F2C LDR X0, [X0 + 0xF8]
	0x01E12F30 BL 0x1C16CF4
	0x01E12F34 ADRP X0, 0x22E7000
	0x01E12F38 LDR X0, [X0 + 0xEA8]
	0x01E12F3C BL 0x1C16CF4
	0x01E12F40 ADRP X0, 0x22E1000
	0x01E12F44 LDR X0, [X0 + 0x758]
	0x01E12F48 BL 0x1C16CF4
	0x01E12F4C ADRP X0, 0x22E8000
	0x01E12F50 LDR X0, [X0 + 0x100]
	0x01E12F54 BL 0x1C16CF4
	0x01E12F58 ADRP X0, 0x22E7000
	0x01E12F5C LDR X0, [X0 + 0xC60]
	0x01E12F60 BL 0x1C16CF4
	0x01E12F64 ADRP X0, 0x22E8000
	0x01E12F68 LDR X0, [X0 + 0x108]
	0x01E12F6C BL 0x1C16CF4
	0x01E12F70 ADRP X0, 0x22E7000
	0x01E12F74 LDR X0, [X0 + 0xFA0]
	0x01E12F78 BL 0x1C16CF4
	0x01E12F7C ADRP X0, 0x22E8000
	0x01E12F80 LDR X0, [X0 + 0x110]
	0x01E12F84 BL 0x1C16CF4
	0x01E12F88 ADRP X0, 0x22E8000
	0x01E12F8C LDR X0, [X0 + 0x118]
	0x01E12F90 BL 0x1C16CF4
	0x01E12F94 ADRP X0, 0x22E8000
	0x01E12F98 LDR X0, [X0 + 0x120]
	0x01E12F9C BL 0x1C16CF4
	0x01E12FA0 ADRP X0, 0x22E8000
	0x01E12FA4 LDR X0, [X0 + 0x128]
	0x01E12FA8 BL 0x1C16CF4
	0x01E12FAC ADRP X0, 0x22E4000
	0x01E12FB0 LDR X0, [X0 + 0xB28]
	0x01E12FB4 BL 0x1C16CF4
	0x01E12FB8 ADRP X0, 0x22E7000
	0x01E12FBC LDR X0, [X0 + 0xC58]
	0x01E12FC0 BL 0x1C16CF4
	0x01E12FC4 ADRP X0, 0x22E8000
	0x01E12FC8 LDR X0, [X0 + 0x130]
	0x01E12FCC BL 0x1C16CF4
	0x01E12FD0 ADRP X0, 0x22E8000
	0x01E12FD4 LDR X0, [X0 + 0x138]
	0x01E12FD8 BL 0x1C16CF4
	0x01E12FDC ADRP X0, 0x22E5000
	0x01E12FE0 LDR X0, [X0 + 0x800]
	0x01E12FE4 BL 0x1C16CF4
	0x01E12FE8 ADRP X0, 0x22E8000
	0x01E12FEC LDR X0, [X0 + 0x140]
	0x01E12FF0 BL 0x1C16CF4
	0x01E12FF4 ADRP X0, 0x22E7000
	0x01E12FF8 LDR X0, [X0 + 0xC50]
	0x01E12FFC BL 0x1C16CF4
	0x01E13000 ADRP X0, 0x22E7000
	0x01E13004 LDR X0, [X0 + 0x148]
	0x01E13008 BL 0x1C16CF4
	0x01E1300C ADRP X0, 0x22E7000
	0x01E13010 LDR X0, [X0 + 0x150]
	0x01E13014 BL 0x1C16CF4
	0x01E13018 ADRP X0, 0x22E7000
	0x01E1301C LDR X0, [X0 + 0x158]
	0x01E13020 BL 0x1C16CF4
	0x01E13024 ADRP X0, 0x22E7000
	0x01E13028 LDR X0, [X0 + 0x160]
	0x01E1302C BL 0x1C16CF4
	0x01E13030 ADRP X0, 0x22E7000
	0x01E13034 LDR X0, [X0 + 0x168]
	0x01E13038 BL 0x1C16CF4
	0x01E1303C ADRP X0, 0x22E7000
	0x01E13040 LDR X0, [X0 + 0x170]
	0x01E13044 BL 0x1C16CF4
	0x01E13048 ADRP X0, 0x22E7000
	0x01E1304C LDR X0, [X0 + 0x178]
	0x01E13050 BL 0x1C16CF4
	0x01E13054 MOVZ W8, 0x1
	0x01E13058 STRB W8, [X19 + 0xDF3]
	0x01E1305C LDR X8, [X31 + 0x18]
	0x01E13060 MOVI V0.2D, 0x0
	0x01E13064 STP X31, X31, [X31 + 0xE0]
	0x01E13068 STR X31, [X31 + 0xF0]
	0x01E1306C STP X31, X31, [X31 + 0xC0]
	0x01E13070 STR X31, [X31 + 0xD0]
	0x01E13074 STP X31, X31, [X31 + 0xA0]
	0x01E13078 STR X31, [X31 + 0xB0]
	0x01E1307C STP X31, X31, [X31 + 0x40]
	0x01E13080 STP V0, V0, [X31 + 0x80]
	0x01E13084 STP V0, V0, [X31 + 0x60]
	0x01E13088 STR X31, [X31 + 0x50]
	0x01E1308C LDR X0, [X8 + 0x18]
	0x01E13090 CBZ X0, 0x1E13C64
	0x01E13094 ADRP X8, 0x22E7000
	0x01E13098 LDR X8, [X8 + 0xF0]
	0x01E1309C MOVZ W1, 0x1
	0x01E130A0 LDR X2, [X8]
	0x01E130A4 BL 0x21E770C
	0x01E130A8 CBZ X0, 0x1E13C64
	0x01E130AC ADRP X8, 0x22E7000
	0x01E130B0 LDR X8, [X8 + 0x110]
	0x01E130B4 ADRP X29, 0x22E3000
	0x01E130B8 ADRP X20, 0x22E6000
	0x01E130BC LDR X29, [X29 + 0xB18]
	0x01E130C0 LDR X20, [X20 + 0xC60]
	0x01E130C4 LDR X1, [X8]
	0x01E130C8 ADRP X19, 0x22E6000
	0x01E130CC LDR X19, [X19 + 0xF80]
	0x01E130D0 ADD X8, X31, 0x20
	0x01E130D4 BL 0x301CB58
	0x01E130D8 LDR V0, [X31 + 0x2]
	0x01E130DC LDR X8, [X31 + 0x30]
	0x01E130E0 STR V0, [X31 + 0xE]
	0x01E130E4 STR X8, [X31 + 0xF0]
	0x01E130E8 ADRP X8, 0x22E7000
	0x01E130EC LDR X8, [X8 + 0x98]
	0x01E130F0 LDR X1, [X8]
	0x01E130F4 ADD X0, X31, 0xE0
	0x01E130F8 BL 0x2BC4350
	0x01E130FC TBZ X0, 0x0, 0x1E13B60
	0x01E13100 LDR X21, [X31 + 0xF0]
	0x01E13104 CBZ X21, 0x1E13C28
	0x01E13108 LDR W23, [X21 + 0x2C]
	0x01E1310C CBZ W23, 0x1E130E8
	0x01E13110 ADRP X8, 0x22E7000
	0x01E13114 LDR X8, [X8 + 0x140]
	0x01E13118 LDR X0, [X8]
	0x01E1311C BL 0x1C16F10
	0x01E13120 ADRP X8, 0x22E7000
	0x01E13124 LDR X8, [X8 + 0x138]
	0x01E13128 MOV X22, X0
	0x01E1312C LDR X1, [X8]
	0x01E13130 BL 0x2F40E88
	0x01E13134 LDR X0, [X21 + 0x20]
	0x01E13138 CBZ X0, 0x1E13C38
	0x01E1313C ADRP X9, 0x22E7000
	0x01E13140 LDR X8, [X0]
	0x01E13144 LDR X9, [X9 + 0xF8]
	0x01E13148 LDRB W10, [X8 + 0x130]
	0x01E1314C LDR X1, [X9]
	0x01E13150 LDRB W9, [X1 + 0x130]
	0x01E13154 CMP W10, W9
	0x01E13158 B.CC 0x1E13C24
	0x01E1315C LDR X8, [X8 + 0xC8]
	0x01E13160 ADD X8, X8, X9, 0x3, LSL
	0x01E13164 LDUR X8, [X8 - 0x8]
	0x01E13168 CMP X8, X1
	0x01E1316C B.NE 0x1E13C24
	0x01E13170 ADRP X8, 0x22E7000
	0x01E13174 LDR X8, [X8 + 0xE8]
	0x01E13178 LDR X2, [X8]
	0x01E1317C MOV X1, X21
	0x01E13180 BL 0x21E7478
	0x01E13184 CBZ X0, 0x1E13C34
	0x01E13188 STR W23, [X31 + 0x14]
	0x01E1318C ADRP X8, 0x22E7000
	0x01E13190 LDR X8, [X8 + 0x118]
	0x01E13194 LDR X1, [X8]
	0x01E13198 ADD X8, X31, 0x20
	0x01E1319C BL 0x301CB58
	0x01E131A0 LDR V0, [X31 + 0x2]
	0x01E131A4 LDR X8, [X31 + 0x30]
	0x01E131A8 STR V0, [X31 + 0xC]
	0x01E131AC STR X8, [X31 + 0xD0]
	0x01E131B0 ADRP X8, 0x22E7000
	0x01E131B4 LDR X8, [X8 + 0xA8]
	0x01E131B8 LDR X1, [X8]
	0x01E131BC ADD X0, X31, 0xC0
	0x01E131C0 BL 0x2BC4350
	0x01E131C4 TBZ X0, 0x0, 0x1E133B4
	0x01E131C8 LDR X23, [X31 + 0xD0]
	0x01E131CC CBZ X23, 0x1E139C0
	0x01E131D0 MOV X0, X23
	0x01E131D4 MOV X1, X21
	0x01E131D8 MOV X2, X31
	0x01E131DC BL 0x1E0AAEC
	0x01E131E0 ADRP X8, 0x22E6000
	0x01E131E4 LDR X8, [X8 + 0xEA8]
	0x01E131E8 LDR X1, [X8]
	0x01E131EC BL 0x1C16E00
	0x01E131F0 MOV X24, X0
	0x01E131F4 CBZ X0, 0x1E131B0
	0x01E131F8 LDR X8, [X31 + 0x18]
	0x01E131FC LDR X8, [X8 + 0x28]
	0x01E13200 CBZ X8, 0x1E13A18
	0x01E13204 LDR X0, [X8 + 0x10]
	0x01E13208 CBZ X0, 0x1E13A10
	0x01E1320C ADRP X8, 0x22E7000
	0x01E13210 LDR X8, [X8 + 0x50]
	0x01E13214 LDR X2, [X8]
	0x01E13218 MOV X1, X24
	0x01E1321C BL 0x2AA528C
	0x01E13220 TBZ X0, 0x0, 0x1E131B0
	0x01E13224 LDR X8, [X31 + 0x18]
	0x01E13228 LDR X8, [X8 + 0x28]
	0x01E1322C CBZ X8, 0x1E13A30
	0x01E13230 LDR X0, [X8 + 0x10]
	0x01E13234 CBZ X0, 0x1E13A28
	0x01E13238 ADRP X8, 0x22E7000
	0x01E1323C LDR X8, [X8 + 0x58]
	0x01E13240 LDR X2, [X8]
	0x01E13244 MOV X1, X24
	0x01E13248 BL 0x2AA5018
	0x01E1324C CBZ X0, 0x1E13A20
	0x01E13250 LDR X24, [X0 + 0x30]
	0x01E13254 CBZ X24, 0x1E13A38
	0x01E13258 LDR W8, [X24 + 0x18]
	0x01E1325C CBZ W8, 0x1E131B0
	0x01E13260 ADRP X8, 0x22E7000
	0x01E13264 LDR X8, [X8 + 0x160]
	0x01E13268 LDR X8, [X8]
	0x01E1326C LDR W9, [X8 + 0xE0]
	0x01E13270 CBNZ W9, 0x1E13288
	0x01E13274 MOV X0, X8
	0x01E13278 BL 0x1C16DFC
	0x01E1327C ADRP X8, 0x22E7000
	0x01E13280 LDR X8, [X8 + 0x160]
	0x01E13284 LDR X8, [X8]
	0x01E13288 LDR X9, [X8 + 0xB8]
	0x01E1328C LDR X25, [X9 + 0x8]
	0x01E13290 CBNZ X25, 0x1E132F8
	0x01E13294 LDR W9, [X8 + 0xE0]
	0x01E13298 CBNZ W9, 0x1E132B0
	0x01E1329C MOV X0, X8
	0x01E132A0 BL 0x1C16DFC
	0x01E132A4 ADRP X8, 0x22E7000
	0x01E132A8 LDR X8, [X8 + 0x160]
	0x01E132AC LDR X8, [X8]
	0x01E132B0 LDR X8, [X8 + 0xB8]
	0x01E132B4 LDR X26, [X8]
	0x01E132B8 ADRP X8, 0x22E7000
	0x01E132BC LDR X8, [X8 + 0xD8]
	0x01E132C0 LDR X0, [X8]
	0x01E132C4 BL 0x1C16F10
	0x01E132C8 ADRP X8, 0x22E7000
	0x01E132CC LDR X8, [X8 + 0x158]
	0x01E132D0 MOV X25, X0
	0x01E132D4 LDR X2, [X8]
	0x01E132D8 MOV X1, X26
	0x01E132DC MOV X3, X31
	0x01E132E0 BL 0x2D2F428
	0x01E132E4 ADRP X8, 0x22E7000
	0x01E132E8 LDR X8, [X8 + 0x160]
	0x01E132EC LDR X8, [X8]
	0x01E132F0 LDR X8, [X8 + 0xB8]
	0x01E132F4 STR X25, [X8 + 0x8]
	0x01E132F8 ADRP X8, 0x22E7000
	0x01E132FC LDR X8, [X8 + 0x68]
	0x01E13300 LDR X2, [X8]
	0x01E13304 MOV X0, X24
	0x01E13308 MOV X1, X25
	0x01E1330C BL 0x21DA490
	0x01E13310 ADRP X8, 0x22E6000
	0x01E13314 LDR X8, [X8 + 0xF68]
	0x01E13318 LDR X1, [X8]
	0x01E1331C BL 0x21D79F4
	0x01E13320 MOV X2, X0
	0x01E13324 CBZ X0, 0x1E13A40
	0x01E13328 LDR W8, [X2 + 0x18]
	0x01E1332C CMP W8, 0x1
	0x01E13330 B.LT 0x1E131B0
	0x01E13334 ADRP X8, 0x22E7000
	0x01E13338 LDR W1, [X23 + 0x28]
	0x01E1333C LDR X8, [X8 + 0x168]
	0x01E13340 STP X31, X31, [X31 + 0x20]
	0x01E13344 LDR X3, [X8]
	0x01E13348 ADD X0, X31, 0x20
	0x01E1334C BL 0x27A0810
	0x01E13350 CBZ X22, 0x1E13A48
	0x01E13354 ADRP X9, 0x22E7000
	0x01E13358 LDP X1, X2, [X31 + 0x20]
	0x01E1335C LDR W10, [X22 + 0x1C]
	0x01E13360 LDR X8, [X22 + 0x10]
	0x01E13364 LDR X9, [X9 + 0x108]
	0x01E13368 ADD W10, W10, 0x1
	0x01E1336C LDR X9, [X9]
	0x01E13370 STR W10, [X22 + 0x1C]
	0x01E13374 CBZ X8, 0x1E13A50
	0x01E13378 LDRSW X10, [X22 + 0x18]
	0x01E1337C LDR W11, [X8 + 0x18]
	0x01E13380 CMP W10, W11
	0x01E13384 B.CS 0x1E1339C
	0x01E13388 ADD W9, W10, 0x1
	0x01E1338C ADD X8, X8, X10, 0x4, LSL
	0x01E13390 STR W9, [X22 + 0x18]
	0x01E13394 STP X1, X2, [X8 + 0x20]
	0x01E13398 B 0x1E131B0
	0x01E1339C LDR X8, [X9 + 0x20]
	0x01E133A0 LDR X8, [X8 + 0xC0]
	0x01E133A4 LDR X3, [X8 + 0x70]
	0x01E133A8 MOV X0, X22
	0x01E133AC BL 0x2F41694
	0x01E133B0 B 0x1E131B0
	0x01E133B4 MOV X23, X31
	0x01E133B8 MOVZ W24, 0x7
	0x01E133BC ADRP X8, 0x22E7000
	0x01E133C0 LDR X8, [X8 + 0x78]
	0x01E133C4 LDR X1, [X8]
	0x01E133C8 ADD X0, X31, 0xC0
	0x01E133CC BL 0x2BC434C
	0x01E133D0 CBNZ X23, 0x1E13C2C
	0x01E133D4 CMP W24, 0x7
	0x01E133D8 B.EQ 0x1E133E0
	0x01E133DC CBNZ W24, 0x1E13B60
	0x01E133E0 ADRP X8, 0x22E7000
	0x01E133E4 LDR X8, [X8 + 0x160]
	0x01E133E8 LDR X0, [X8]
	0x01E133EC LDR W8, [X0 + 0xE0]
	0x01E133F0 CBNZ W8, 0x1E13404
	0x01E133F4 BL 0x1C16DFC
	0x01E133F8 ADRP X8, 0x22E7000
	0x01E133FC LDR X8, [X8 + 0x160]
	0x01E13400 LDR X0, [X8]
	0x01E13404 LDR X8, [X0 + 0xB8]
	0x01E13408 LDR X23, [X8 + 0x10]
	0x01E1340C CBNZ X23, 0x1E13470
	0x01E13410 LDR W8, [X0 + 0xE0]
	0x01E13414 CBNZ W8, 0x1E13428
	0x01E13418 BL 0x1C16DFC
	0x01E1341C ADRP X8, 0x22E7000
	0x01E13420 LDR X8, [X8 + 0x160]
	0x01E13424 LDR X0, [X8]
	0x01E13428 LDR X8, [X0 + 0xB8]
	0x01E1342C LDR X24, [X8]
	0x01E13430 ADRP X8, 0x22E7000
	0x01E13434 LDR X8, [X8 + 0xD0]
	0x01E13438 LDR X0, [X8]
	0x01E1343C BL 0x1C16F10
	0x01E13440 ADRP X8, 0x22E7000
	0x01E13444 LDR X8, [X8 + 0x150]
	0x01E13448 MOV X23, X0
	0x01E1344C LDR X2, [X8]
	0x01E13450 MOV X1, X24
	0x01E13454 MOV X3, X31
	0x01E13458 BL 0x2D2B084
	0x01E1345C ADRP X8, 0x22E7000
	0x01E13460 LDR X8, [X8 + 0x160]
	0x01E13464 LDR X8, [X8]
	0x01E13468 LDR X8, [X8 + 0xB8]
	0x01E1346C STR X23, [X8 + 0x10]
	0x01E13470 ADRP X8, 0x22E7000
	0x01E13474 LDR X8, [X8 + 0x60]
	0x01E13478 LDR X2, [X8]
	0x01E1347C MOV X0, X22
	0x01E13480 MOV X1, X23
	0x01E13484 BL 0x21D4978
	0x01E13488 ADRP X8, 0x22E6000
	0x01E1348C LDR X8, [X8 + 0xC50]
	0x01E13490 MOV W23, W0
	0x01E13494 LDR X0, [X8]
	0x01E13498 BL 0x1C16F10
	0x01E1349C ADRP X8, 0x22E6000
	0x01E134A0 LDR X8, [X8 + 0xC58]
	0x01E134A4 MOV X24, X0
	0x01E134A8 LDR X1, [X8]
	0x01E134AC BL 0x30D123C
	0x01E134B0 LDR X0, [X21 + 0x30]
	0x01E134B4 CBZ X0, 0x1E13C3C
	0x01E134B8 ADRP X8, 0x22E7000
	0x01E134BC LDR X8, [X8 + 0x120]
	0x01E134C0 LDR X1, [X8]
	0x01E134C4 ADD X8, X31, 0x20
	0x01E134C8 BL 0x301CB58
	0x01E134CC LDR V0, [X31 + 0x2]
	0x01E134D0 LDR X8, [X31 + 0x30]
	0x01E134D4 FMOV S8, W31
	0x01E134D8 STR V0, [X31 + 0xA]
	0x01E134DC STR X8, [X31 + 0xB0]
	0x01E134E0 ADRP X8, 0x22E7000
	0x01E134E4 LDR X8, [X8 + 0xA0]
	0x01E134E8 LDR X1, [X8]
	0x01E134EC ADD X0, X31, 0xA0
	0x01E134F0 BL 0x2BC4350
	0x01E134F4 TBZ X0, 0x0, 0x1E1361C
	0x01E134F8 LDR X8, [X31 + 0xB0]
	0x01E134FC CBZ X8, 0x1E139D4
	0x01E13500 LDR X0, [X8 + 0x18]
	0x01E13504 CBZ X0, 0x1E139DC
	0x01E13508 ADRP X8, 0x22E3000
	0x01E1350C LDR X8, [X8 + 0xB28]
	0x01E13510 LDR X1, [X8]
	0x01E13514 ADD X8, X31, 0x20
	0x01E13518 BL 0x30D2660
	0x01E1351C LDP V0, V1, [X31 + 0x20]
	0x01E13520 MOV V9.16B, V8.16B
	0x01E13524 STP V0, V1, [X31 + 0x80]
	0x01E13528 LDR X1, [X29]
	0x01E1352C ADD X0, X31, 0x80
	0x01E13530 BL 0x2BD1D7C
	0x01E13534 TBZ X0, 0x0, 0x1E135A0
	0x01E13538 CBZ X24, 0x1E135D4
	0x01E1353C LDR W10, [X24 + 0x1C]
	0x01E13540 LDP X1, X25, [X31 + 0x90]
	0x01E13544 LDR X8, [X24 + 0x10]

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+128], D8
	003 Move [X31+144], X29
	004 Move [X31+152], X30
	005 Move [X31+160], X28
	006 Move [X31+168], X27
	007 Move [X31+176], X26
	008 Move [X31+184], X25
	009 Move [X31+192], X24
	010 Move [X31+200], X23
	011 Move [X31+208], X22
	012 Move [X31+216], X21
	013 Move [X31+224], X20
	014 Move [X31+232], X19
	015 Move X19, 0x25C7000
	016 Move W8, [X19+3569]
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {66}
	022 Move X0, 0x22E8000
	023 Move X0, [X0+3808]
	024 Call 0x1C17CF4
	025 Move X0, 0x22E8000
	026 Move X0, [X0+3816]
	027 Call 0x1C17CF4
	028 Move X0, 0x22E8000
	029 Move X0, [X0+1000]
	030 Call 0x1C17CF4
	031 Move X0, 0x22E8000
	032 Move X0, [X0+3824]
	033 Call 0x1C17CF4
	034 Move X0, 0x22E8000
	035 Move X0, [X0+1008]
	036 Call 0x1C17CF4
	037 Move X0, 0x22E8000
	038 Move X0, [X0+1016]
	039 Call 0x1C17CF4
	040 Move X0, 0x22E8000
	041 Move X0, [X0+3832]
	042 Call 0x1C17CF4
	043 Move X0, 0x22E8000
	044 Move X0, [X0+4008]
	045 Call 0x1C17CF4
	046 Move X0, 0x22E8000
	047 Move X0, [X0+4016]
	048 Call 0x1C17CF4
	049 Move X0, 0x22E8000
	050 Move X0, [X0+4024]
	051 Call 0x1C17CF4
	052 Move X0, 0x22E8000
	053 Move X0, [X0+4032]
	054 Call 0x1C17CF4
	055 Move X0, 0x22E8000
	056 Move X0, [X0+4040]
	057 Call 0x1C17CF4
	058 Move X0, 0x22E8000
	059 Move X0, [X0+1024]
	060 Call 0x1C17CF4
	061 Move X0, 0x22E8000
	062 Move X0, [X0+3840]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X19+3569], W8
	066 Move [X31+96], X31
	067 Move [X31+104], X31
	068 Move [X31+112], X31
	069 Move [X31+64], X31
	070 Move [X31+72], X31
	071 Move [X31+80], X31
	072 Move [X31+136], X31
	073 Move [X31+48], X31
	074 Move [X31+56], X31
	075 Move [X31+40], X31
	076 Move X8, [X20+40]
	077 Compare X8, 0
	078 JumpIfEqual {400}
	079 Move X0, [X8+16]
	080 Compare X0, 0
	081 JumpIfEqual {400}
	082 Move [X31+8], X20
	083 Move X8, 0x22E8000
	084 Move X8, [X8+3808]
	085 Move X1, [X8]
	086 Call Dictionary`2<Object, Object>.get_Values, X0
	087 Compare X0, 0
	088 JumpIfEqual {400}
	089 Move X8, 0x22E8000
	090 Move X8, [X8+3840]
	091 Move X24, 0x22E8000
	092 Move X29, 0x22E8000
	093 Move X21, 0x22E8000
	094 Move X19, 0x22E8000
	095 Move X23, 0x22E8000
	096 Move X25, 0x22E8000
	097 Move X26, 0x22E8000
	098 Move X24, [X24+3824]
	099 Move X29, [X29+1024]
	100 Move X21, [X21+1008]
	101 Move X19, [X19+4008]
	102 Move X23, [X23+1000]
	103 Move X25, [X25+4016]
	104 Move X26, [X26+4032]
	105 Move X1, [X8]
	106 Move X27, 0x22E8000
	107 Move X28, 0x22E8000
	108 Move X27, [X27+4040]
	109 Move X28, [X28+4024]
	110 Add X8, X31, 16
	111 Call ValueCollection<Object, Object>.GetEnumerator, X0
	112 Move X9, -20082688
	113 Move V0, [X31+1]
	114 Move X8, [X31+32]
	115 Move V8, [X9+188]
	116 Move [X31+6], V0
	117 Move [X31+112], X8
	118 Move X1, [X24]
	119 Add X0, X31, 96
	120 Call Enumerator<Object, Object>.MoveNext, X0
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfNotEqual {189}
	125 Move X8, [X31+112]
	126 Compare X8, 0
	127 JumpIfEqual {393}
	128 Move X0, [X8+40]
	129 Compare X0, 0
	130 JumpIfEqual {394}
	131 Move X1, [X29]
	132 Add X8, X31, 16
	133 Call List`1<Object>.GetEnumerator, X0
	134 Move V0, [X31+1]
	135 Move X8, [X31+32]
	136 Move [X31+4], V0
	137 Move [X31+80], X8
	138 Move X1, [X21]
	139 Add X0, X31, 64
	140 Call Enumerator<Object>.MoveNext, X0
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {174}
	145 Move X20, [X31+80]
	146 Compare X20, 0
	147 JumpIfEqual {182}
	148 Move X0, X20
	149 Move X1, X31
	150 Call Component.get_gameObject, X0
	151 Compare X0, 0
	152 JumpIfEqual {183}
	153 Move W1, 15
	154 Move X2, X31
	155 Call GameObject.set_layer, X0, X1
	156 Move X0, X20
	157 Move X1, X31
	158 Call Component.get_gameObject, X0
	159 Compare X0, 0
	160 JumpIfEqual {180}
	161 Move X1, [X19]
	162 Call 0x21E62E4, X0
	163 Move X20, X0
	164 Compare X0, 0
	165 JumpIfEqual {181}
	166 Move W1, 1
	167 Move X0, X20
	168 Move X2, X31
	169 Call Collider.set_isTrigger, X0, X1
	170 Move X0, X20
	171 Move V0, V8
	172 Move X1, X31
	173 Call SphereCollider.set_radius, X0, V0
	174 Move X22, X31
	175 Move X1, [X23]
	176 Add X0, X31, 64
	177 Call Enumerator<Object>.Dispose, X0
	178 Compare X22, 0
	179 JumpIfEqual {118}
	180 Call 0x1C17F20
	181 Call 0x1C17F20
	182 Call 0x1C17F20
	183 Call 0x1C17F20
	184 Move X20, X1
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Call 0x3EB2AD0
	187 Move X22, [X0]
	188 Call 0x3EB2AE0
	189 Move X23, 0x22E7000
	190 Move X23, [X23+3816]
	191 Add X0, X31, 96
	192 Move X1, [X23]
	193 Call Enumerator<Object, Object>.Dispose, X0
	194 Move X8, [X31+8]
	195 Move X8, [X8+40]
	196 Compare X8, 0
	197 JumpIfEqual {400}
	198 Move X0, [X8+16]
	199 Compare X0, 0
	200 JumpIfEqual {400}
	201 Move X8, 0x22E7000
	202 Move X8, [X8+3808]
	203 Move X1, [X8]
	204 Call Dictionary`2<Object, Object>.get_Values, X0
	205 Compare X0, 0
	206 JumpIfEqual {400}
	207 Move X8, 0x22E7000
	208 Move X8, [X8+3840]
	209 Move X1, [X8]
	210 Add X8, X31, 16
	211 Call ValueCollection<Object, Object>.GetEnumerator, X0
	212 Move V0, [X31+1]
	213 Move X8, [X31+32]
	214 Move [X31+6], V0
	215 Move [X31+112], X8
	216 Move X1, [X24]
	217 Add X0, X31, 96
	218 Call Enumerator<Object, Object>.MoveNext, X0
	219 Move TEMP, X0
	220 And TEMP, TEMP, 1
	221 Compare TEMP, 1
	222 JumpIfNotEqual {348}
	223 Move X8, [X31+112]
	224 Compare X8, 0
	225 JumpIfEqual {398}
	226 Move X0, [X8+24]
	227 Compare X0, 0
	228 JumpIfEqual {399}
	229 Move X2, [X25]
	230 Move W1, 1
	231 Call 0x21E6F84, X0, X1
	232 Move X19, X0
	233 Compare X0, 0
	234 JumpIfEqual {397}
	235 Move W8, [X19+24]
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Move W21, W31
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Add X8, X19, W21
	240 Move X20, [X8+32]
	241 Compare X20, 0
	242 JumpIfEqual {367}
	243 Move X0, X20
	244 Move X1, X31
	245 Call Component.get_gameObject, X0
	246 Compare X0, 0
	247 JumpIfEqual {368}
	248 Move X2, [X26]
	249 Add X1, X31, 136
	250 Call 0x21E7600, X0, X1
	251 Move TEMP, X0
	252 And TEMP, TEMP, 1
	253 Compare TEMP, 1
	254 JumpIfNotEqual {265}
	255 Move X0, [X31+136]
	256 Compare X0, 0
	257 JumpIfEqual {382}
	258 Move X1, X31
	259 Call Component.get_gameObject, X0
	260 Compare X0, 0
	261 JumpIfEqual {383}
	262 Move W1, 7
	263 Move X2, X31
	264 Call GameObject.set_layer, X0, X1
	265 Move X0, X20
	266 Move X1, X31
	267 Call Component.get_gameObject, X0
	268 Compare X0, 0
	269 JumpIfEqual {381}
	270 Move X2, [X27]
	271 Add X1, X31, 56
	272 Call 0x21E7600, X0, X1
	273 Move TEMP, X0
	274 And TEMP, TEMP, 1
	275 Compare TEMP, 1
	276 JumpIfNotEqual {314}
	277 Move X0, X20
	278 Move X1, X31
	279 Call Component.get_gameObject, X0
	280 Compare X0, 0
	281 JumpIfEqual {384}
	282 Move X2, [X28]
	283 Add X1, X31, 48
	284 Call 0x21E7600, X0, X1
	285 Move TEMP, X0
	286 And TEMP, TEMP, 1
	287 Compare TEMP, 1
	288 JumpIfNotEqual {304}
	289 Move X0, [X31+48]
	290 Compare X0, 0
	291 JumpIfEqual {388}
	292 Move X1, X31
	293 Call Collider.get_isTrigger, X0
	294 Move TEMP, X0
	295 And TEMP, TEMP, 1
	296 Compare TEMP, 1
	297 JumpIfEqual {304}
	298 Move X0, [X31+48]
	299 Compare X0, 0
	300 JumpIfEqual {392}
	301 Move W1, 1
	302 Move X2, X31
	303 Call Collider.set_isTrigger, X0, X1
	304 Move X0, [X31+56]
	305 Compare X0, 0
	306 JumpIfEqual {387}
	307 Move X1, X31
	308 Call Component.get_gameObject, X0
	309 Compare X0, 0
	310 JumpIfEqual {385}
	311 Move W1, 21
	312 Move X2, X31
	313 Call GameObject.set_layer, X0, X1
	314 Move X0, X20
	315 Move X1, X31
	316 Call Component.get_gameObject, X0
	317 Compare X0, 0
	318 JumpIfEqual {386}
	319 Move X2, [X28]
	320 Add X1, X31, 40
	321 Call 0x21E7600, X0, X1
	322 Move TEMP, X0
	323 And TEMP, TEMP, 1
	324 Compare TEMP, 1
	325 JumpIfNotEqual {345}
	326 Move X0, [X31+40]
	327 Compare X0, 0
	328 JumpIfEqual {389}
	329 Move X1, X31
	330 Call Collider.get_isTrigger, X0
	331 Move TEMP, X0
	332 And TEMP, TEMP, 1
	333 Compare TEMP, 1
	334 JumpIfEqual {345}
	335 Move X0, [X31+40]
	336 Compare X0, 0
	337 JumpIfEqual {390}
	338 Move X1, X31
	339 Call Component.get_gameObject, X0
	340 Compare X0, 0
	341 JumpIfEqual {391}
	342 Move W1, 31
	343 Move X2, X31
	344 Call GameObject.set_layer, X0, X1
	345 Move W8, [X19+24]
	346 Add W21, W21, 1
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Move X1, [X23]
	349 Add X0, X31, 96
	350 Call Enumerator<Object, Object>.Dispose, X0
	351 Move X20, [X31+224]
	352 Move X19, [X31+232]
	353 Move X22, [X31+208]
	354 Move X21, [X31+216]
	355 Move X24, [X31+192]
	356 Move X23, [X31+200]
	357 Move X26, [X31+176]
	358 Move X25, [X31+184]
	359 Move X28, [X31+160]
	360 Move X27, [X31+168]
	361 Move X29, [X31+144]
	362 Move X30, [X31+152]
	363 Move V8, [X31+128]
	364 Add X31, X31, 240
	365 Return 
	366 Call 0x1C17F28
	367 Call 0x1C17F20
	368 Call 0x1C17F20
	369 Move X19, X0
	370 Move X22, X31
	371 Move X1, [X23]
	372 Add X0, X31, 64
	373 Call Enumerator<Object>.Dispose, X0
	374 Move X23, 0x22E7000
	375 Move X23, [X23+3816]
	376 Move X0, X19
	377 Compare X22, 0
	378 JumpIfEqual {406}
	379 Move X0, X22
	380 Call 0x1C17F18
	381 Call 0x1C17F20
	382 Call 0x1C17F20
	383 Call 0x1C17F20
	384 Call 0x1C17F20
	385 Call 0x1C17F20
	386 Call 0x1C17F20
	387 Call 0x1C17F20
	388 Call 0x1C17F20
	389 Call 0x1C17F20
	390 Call 0x1C17F20
	391 Call 0x1C17F20
	392 Call 0x1C17F20
	393 Call 0x1C17F20
	394 Call 0x1C17F20
	395 Move X0, X22
	396 Call 0x1C17F18
	397 Call 0x1C17F20
	398 Call 0x1C17F20
	399 Call 0x1C17F20
	400 Call 0x1C17F20
	401 Move X20, X1
	402 Move X19, X0
	403 Move X23, 0x22E7000
	404 Move X23, [X23+3816]
	405 Move X20, X1
	406 NotImplemented "Instruction CMP not yet implemented."
	407 Call 0x3EB2AD0
	408 Move X20, [X0]
	409 Call 0x3EB2AE0
	410 Move X1, [X23]
	411 Add X0, X31, 96
	412 Call Enumerator<Object, Object>.Dispose, X0
	413 Compare X20, 0
	414 JumpIfEqual {194}
	415 Move X0, X20
	416 Call 0x1C17F18
	417 Move X21, X0
	418 Move X20, X31
	419 Move X21, X0
	420 Move X8, 0x22E7000
	421 Move X8, [X8+3816]
	422 Move X1, [X8]
	423 Add X0, X31, 96
	424 Call Enumerator<Object, Object>.Dispose, X0
	425 Compare X20, 0
	426 JumpIfEqual {452}
	427 Move X0, X20
	428 Call 0x1C17F18
	429 Move X23, 0x22E7000
	430 Move X23, [X23+3816]
	431 NotImplemented "Instruction CMP not yet implemented."
	432 Call 0x3EB2AD0
	433 Move X19, [X0]
	434 Call 0x3EB2AE0
	435 Move X1, [X23]
	436 Add X0, X31, 96
	437 Call Enumerator<Object, Object>.Dispose, X0
	438 Compare X19, 0
	439 JumpIfEqual {351}
	440 Move X0, X19
	441 Call 0x1C17F18
	442 Move X21, X0
	443 Move X19, X31
	444 Move X21, X0
	445 Move X8, 0x22E7000
	446 Move X8, [X8+3816]
	447 Move X1, [X8]
	448 Add X0, X31, 96
	449 Call Enumerator<Object, Object>.Dispose, X0
	450 Compare X19, 0
	451 JumpIfNotEqual {454}
	452 Move X0, X21
	453 Call 0x1D2D690
	454 Move X0, X19
	455 Call 0x1C17F18
	456 Call 0x1991590

Method: System.Void CreateNavZones(System.Int32 navZoneOffset)

Disassembly:
	0x01E13874 CBNZ W25, 0x1E13B60
	0x01E13878 MOV X0, X21
	0x01E1387C MOV X1, X31
	0x01E13880 BL 0x3C389D4
	0x01E13884 ADRP X9, 0x22E0000
	0x01E13888 LDR W8, [X21 + 0x2C]
	0x01E1388C LDR X9, [X9 + 0x758]
	0x01E13890 MOV X22, X0
	0x01E13894 STR W8, [X31 + 0x20]
	0x01E13898 LDR X0, [X9]
	0x01E1389C ADD X1, X31, 0x20
	0x01E138A0 BL 0x1C16E04
	0x01E138A4 ADRP X8, 0x22E7000
	0x01E138A8 LDR X8, [X8 + 0x178]
	0x01E138AC MOV X2, X0
	0x01E138B0 LDR X0, [X8]
	0x01E138B4 MOV X1, X22
	0x01E138B8 MOV X3, X31
	0x01E138BC BL 0x3227BD4
	0x01E138C0 ADRP X8, 0x22E0000
	0x01E138C4 LDR X8, [X8 + 0xA58]
	0x01E138C8 MOV X22, X0
	0x01E138CC LDR X0, [X8]
	0x01E138D0 BL 0x1C16F10
	0x01E138D4 MOV X21, X0
	0x01E138D8 MOV X1, X22
	0x01E138DC MOV X2, X31
	0x01E138E0 BL 0x3C35934
	0x01E138E4 CBZ X21, 0x1E13C58
	0x01E138E8 MOV X0, X21
	0x01E138EC MOV X1, X31
	0x01E138F0 BL 0x3C356F8
	0x01E138F4 CBZ X0, 0x1E13C5C
	0x01E138F8 LDR X8, [X31 + 0x18]
	0x01E138FC LDR X1, [X8 + 0x48]
	0x01E13900 MOV X2, X31
	0x01E13904 BL 0x3C3FD20
	0x01E13908 CMP W26, 0x1
	0x01E1390C B.LT 0x1E13938
	0x01E13910 MOV X0, X21
	0x01E13914 MOV X1, X31
	0x01E13918 BL 0x3C356F8
	0x01E1391C CBZ X0, 0x1E13C60
	0x01E13920 SCVTF S2, W26
	0x01E13924 FDIV S0, S11, S2
	0x01E13928 FDIV S1, S10, S2
	0x01E1392C FDIV S2, S9, S2
	0x01E13930 MOV X1, X31
	0x01E13934 BL 0x3C3F62C
	0x01E13938 ADRP X8, 0x22E7000
	0x01E1393C LDR X8, [X8 + 0xE0]
	0x01E13940 LDR X1, [X8]
	0x01E13944 MOV X0, X21
	0x01E13948 BL 0x21E51FC
	0x01E1394C CBZ X0, 0x1E13C54
	0x01E13950 LDR W8, [X31 + 0x14]
	0x01E13954 STR X27, [X0 + 0x28]
	0x01E13958 STR W23, [X0 + 0x30]
	0x01E1395C STR X24, [X0 + 0x38]
	0x01E13960 SCVTF S0, W8
	0x01E13964 STR S0, [X0 + 0x20]
	0x01E13968 STR S8, [X0 + 0x40]
	0x01E1396C B 0x1E130E8
	0x01E13970 MOV X26, X1
	0x01E13974 MOV X27, X31
	0x01E13978 ADRP X8, 0x22E3000
	0x01E1397C LDR X8, [X8 + 0xB10]
	0x01E13980 LDR X1, [X8]
	0x01E13984 ADD X0, X31, 0x80
	0x01E13988 BL 0x2BD1D78
	0x01E1398C MOV X1, X26
	0x01E13990 CBZ X27, 0x1E13AE8
	0x01E13994 B 0x1E13C68
	0x01E13998 MOV X22, X1
	0x01E1399C MOV X28, X31
	0x01E139A0 ADRP X8, 0x22E6000
	0x01E139A4 LDR X8, [X8 + 0xF78]
	0x01E139A8 LDR X1, [X8]
	0x01E139AC ADD X0, X31, 0x40
	0x01E139B0 BL 0x2BC434C
	0x01E139B4 MOV X1, X22
	0x01E139B8 CBZ X28, 0x1E13B1C
	0x01E139BC B 0x1E13C70
	0x01E139C0 BL 0x1C16F20
	0x01E139C4 B 0x1E13C68
	0x01E139C8 MOV X0, X27
	0x01E139CC BL 0x1C16F18
	0x01E139D0 B 0x1E13C70
	0x01E139D4 BL 0x1C16F20
	0x01E139D8 B 0x1E13C68
	0x01E139DC BL 0x1C16F20
	0x01E139E0 B 0x1E13C70
	0x01E139E4 BL 0x1C16F20
	0x01E139E8 B 0x1E13C68
	0x01E139EC BL 0x1C16F20
	0x01E139F0 B 0x1E13C78
	0x01E139F4 MOV X0, X28
	0x01E139F8 BL 0x1C16F18
	0x01E139FC B 0x1E13C78
	0x01E13A00 BL 0x1C16F20
	0x01E13A04 B 0x1E13C78
	0x01E13A08 BL 0x1C16F20
	0x01E13A0C B 0x1E13C78
	0x01E13A10 BL 0x1C16F20
	0x01E13A14 B 0x1E13C68
	0x01E13A18 BL 0x1C16F20
	0x01E13A1C B 0x1E13C68
	0x01E13A20 BL 0x1C16F20
	0x01E13A24 B 0x1E13C68
	0x01E13A28 BL 0x1C16F20
	0x01E13A2C B 0x1E13C68
	0x01E13A30 BL 0x1C16F20
	0x01E13A34 B 0x1E13C68
	0x01E13A38 BL 0x1C16F20
	0x01E13A3C B 0x1E13C68
	0x01E13A40 BL 0x1C16F20
	0x01E13A44 B 0x1E13C68
	0x01E13A48 BL 0x1C16F20
	0x01E13A4C B 0x1E13C68
	0x01E13A50 BL 0x1C16F20
	0x01E13A54 B 0x1E13C68
	0x01E13A58 MOV X22, X1
	0x01E13A5C MOV X25, X0
	0x01E13A60 B 0x1E139A0
	0x01E13A64 MOV X26, X1
	0x01E13A68 MOV X25, X0
	0x01E13A6C B 0x1E13978
	0x01E13A70 B 0x1E13B3C
	0x01E13A74 B 0x1E13B3C
	0x01E13A78 B 0x1E13B3C
	0x01E13A7C B 0x1E13B3C
	0x01E13A80 B 0x1E13B3C
	0x01E13A84 B 0x1E13B3C
	0x01E13A88 B 0x1E13B3C
	0x01E13A8C B 0x1E13B3C
	0x01E13A90 B 0x1E13B3C
	0x01E13A94 B 0x1E13B3C
	0x01E13A98 B 0x1E13B3C
	0x01E13A9C B 0x1E13B3C
	0x01E13AA0 B 0x1E13B3C
	0x01E13AA4 B 0x1E13B18
	0x01E13AA8 B 0x1E13B3C
	0x01E13AAC B 0x1E13B3C
	0x01E13AB0 B 0x1E13B3C
	0x01E13AB4 B 0x1E13B18
	0x01E13AB8 B 0x1E13B18
	0x01E13ABC B 0x1E13B18
	0x01E13AC0 B 0x1E13B18
	0x01E13AC4 B 0x1E13B18
	0x01E13AC8 B 0x1E13AE0
	0x01E13ACC B 0x1E13AE0
	0x01E13AD0 B 0x1E13AE0
	0x01E13AD4 B 0x1E13AE0
	0x01E13AD8 B 0x1E13AE0
	0x01E13ADC B 0x1E13B18
	0x01E13AE0 MOV X25, X0
	0x01E13AE4 MOV V9.16B, V8.16B
	0x01E13AE8 CMP W1, 0x1
	0x01E13AEC B.NE 0x1E13BF8
	0x01E13AF0 MOV X0, X25
	0x01E13AF4 BL 0x3EB1AD0
	0x01E13AF8 LDR X27, [X0]
	0x01E13AFC BL 0x3EB1AE0
	0x01E13B00 MOV W25, W31
	0x01E13B04 MOV V8.16B, V9.16B
	0x01E13B08 B 0x1E1362C
	0x01E13B0C B 0x1E13B3C
	0x01E13B10 B 0x1E13B3C
	0x01E13B14 B 0x1E13B18
	0x01E13B18 MOV X25, X0
	0x01E13B1C CMP W1, 0x1
	0x01E13B20 B.NE 0x1E13BCC
	0x01E13B24 MOV X0, X25
	0x01E13B28 BL 0x3EB1AD0
	0x01E13B2C LDR X22, [X0]
	0x01E13B30 BL 0x3EB1AE0
	0x01E13B34 MOV W25, W31
	0x01E13B38 B 0x1E13854
	0x01E13B3C MOV X25, X0
	0x01E13B40 CMP W1, 0x1
	0x01E13B44 B.NE 0x1E13BA0
	0x01E13B48 MOV X0, X25
	0x01E13B4C BL 0x3EB1AD0
	0x01E13B50 LDR X23, [X0]
	0x01E13B54 BL 0x3EB1AE0
	0x01E13B58 MOV W24, W31
	0x01E13B5C B 0x1E133BC
	0x01E13B60 ADRP X8, 0x22E7000
	0x01E13B64 LDR X8, [X8 + 0x80]
	0x01E13B68 ADD X0, X31, 0xE0
	0x01E13B6C LDR X1, [X8]
	0x01E13B70 BL 0x2BC434C
	0x01E13B74 LDP X20, X19, [X31 + 0x170]
	0x01E13B78 LDP X22, X21, [X31 + 0x160]
	0x01E13B7C LDP X24, X23, [X31 + 0x150]
	0x01E13B80 LDP X26, X25, [X31 + 0x140]
	0x01E13B84 LDP X28, X27, [X31 + 0x130]
	0x01E13B88 LDP X29, X30, [X31 + 0x120]
	0x01E13B8C LDP D9, D8, [X31 + 0x110]
	0x01E13B90 LDP D11, D10, [X31 + 0x100]
	0x01E13B94 MOVZ W0, 0x1
	0x01E13B98 ADD X31, X31, 0x180
	0x01E13B9C RET
	0x01E13BA0 MOV X19, X1
	0x01E13BA4 MOV X23, X31
	0x01E13BA8 ADRP X8, 0x22E7000
	0x01E13BAC LDR X8, [X8 + 0x78]
	0x01E13BB0 LDR X1, [X8]
	0x01E13BB4 ADD X0, X31, 0xC0
	0x01E13BB8 BL 0x2BC434C
	0x01E13BBC MOV X1, X19
	0x01E13BC0 CBZ X23, 0x1E13D34
	0x01E13BC4 MOV X0, X23
	0x01E13BC8 BL 0x1C16F18
	0x01E13BCC MOV X19, X1
	0x01E13BD0 MOV X22, X31
	0x01E13BD4 ADRP X8, 0x22E7000
	0x01E13BD8 LDR X8, [X8 + 0x70]
	0x01E13BDC LDR X1, [X8]
	0x01E13BE0 ADD X0, X31, 0x60
	0x01E13BE4 BL 0x2BB336C
	0x01E13BE8 MOV X1, X19
	0x01E13BEC CBZ X22, 0x1E13D34
	0x01E13BF0 MOV X0, X22
	0x01E13BF4 BL 0x1C16F18
	0x01E13BF8 MOV X19, X1
	0x01E13BFC MOV X27, X31
	0x01E13C00 ADRP X8, 0x22E7000
	0x01E13C04 LDR X8, [X8 + 0x88]
	0x01E13C08 LDR X1, [X8]
	0x01E13C0C ADD X0, X31, 0xA0
	0x01E13C10 BL 0x2BC434C
	0x01E13C14 MOV X1, X19
	0x01E13C18 CBZ X27, 0x1E13D34
	0x01E13C1C MOV X0, X27
	0x01E13C20 BL 0x1C16F18
	0x01E13C24 BL 0x1C171E0
	0x01E13C28 BL 0x1C16F20
	0x01E13C2C MOV X0, X23
	0x01E13C30 BL 0x1C16F18
	0x01E13C34 BL 0x1C16F20
	0x01E13C38 BL 0x1C16F20
	0x01E13C3C BL 0x1C16F20
	0x01E13C40 MOV X0, X27
	0x01E13C44 BL 0x1C16F18
	0x01E13C48 BL 0x1C16F20
	0x01E13C4C MOV X0, X22
	0x01E13C50 BL 0x1C16F18
	0x01E13C54 BL 0x1C16F20
	0x01E13C58 BL 0x1C16F20
	0x01E13C5C BL 0x1C16F20
	0x01E13C60 BL 0x1C16F20
	0x01E13C64 BL 0x1C16F20
	0x01E13C68 MOV X0, X27
	0x01E13C6C BL 0x1C16F18
	0x01E13C70 MOV X0, X28
	0x01E13C74 BL 0x1C16F18
	0x01E13C78 BL 0x1990590
	0x01E13C7C MOV X19, X1
	0x01E13C80 MOV X25, X0
	0x01E13C84 B 0x1E13C00
	0x01E13C88 MOV X19, X1
	0x01E13C8C MOV X25, X0
	0x01E13C90 B 0x1E13BD4
	0x01E13C94 MOV X19, X1
	0x01E13C98 MOV X25, X0
	0x01E13C9C B 0x1E13BA8
	0x01E13CA0 B 0x1E13D30
	0x01E13CA4 B 0x1E13D30
	0x01E13CA8 B 0x1E13D30
	0x01E13CAC B 0x1E13D30
	0x01E13CB0 B 0x1E13D30
	0x01E13CB4 B 0x1E13D30
	0x01E13CB8 B 0x1E13D30
	0x01E13CBC B 0x1E13D30
	0x01E13CC0 B 0x1E13D30
	0x01E13CC4 B 0x1E13D30
	0x01E13CC8 B 0x1E13D30
	0x01E13CCC B 0x1E13D30
	0x01E13CD0 B 0x1E13D30
	0x01E13CD4 B 0x1E13D30
	0x01E13CD8 B 0x1E13D30
	0x01E13CDC B 0x1E13D30
	0x01E13CE0 B 0x1E13D30
	0x01E13CE4 B 0x1E13D30
	0x01E13CE8 B 0x1E13D30
	0x01E13CEC B 0x1E13D30
	0x01E13CF0 B 0x1E13D30
	0x01E13CF4 B 0x1E13D30
	0x01E13CF8 B 0x1E13D30
	0x01E13CFC B 0x1E13D30
	0x01E13D00 B 0x1E13D30
	0x01E13D04 B 0x1E13D30
	0x01E13D08 B 0x1E13D30
	0x01E13D0C B 0x1E13D30
	0x01E13D10 B 0x1E13D30
	0x01E13D14 B 0x1E13D30
	0x01E13D18 B 0x1E13D30
	0x01E13D1C B 0x1E13D30
	0x01E13D20 B 0x1E13D30
	0x01E13D24 B 0x1E13D30
	0x01E13D28 B 0x1E13D30
	0x01E13D2C B 0x1E13D30
	0x01E13D30 MOV X25, X0
	0x01E13D34 CMP W1, 0x1
	0x01E13D38 B.NE 0x1E13D6C
	0x01E13D3C MOV X0, X25
	0x01E13D40 BL 0x3EB1AD0
	0x01E13D44 LDR X19, [X0]
	0x01E13D48 BL 0x3EB1AE0
	0x01E13D4C ADRP X8, 0x22E7000
	0x01E13D50 LDR X8, [X8 + 0x80]
	0x01E13D54 ADD X0, X31, 0xE0
	0x01E13D58 LDR X1, [X8]
	0x01E13D5C BL 0x2BC434C
	0x01E13D60 CBZ X19, 0x1E13B74
	0x01E13D64 MOV X0, X19
	0x01E13D68 BL 0x1C16F18
	0x01E13D6C MOV X19, X31
	0x01E13D70 B 0x1E13D78
	0x01E13D74 MOV X25, X0
	0x01E13D78 ADRP X8, 0x22E7000
	0x01E13D7C LDR X8, [X8 + 0x80]
	0x01E13D80 LDR X1, [X8]
	0x01E13D84 ADD X0, X31, 0xE0
	0x01E13D88 BL 0x2BC434C
	0x01E13D8C CBNZ X19, 0x1E13D98
	0x01E13D90 MOV X0, X25
	0x01E13D94 BL 0x1D2C690

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+192], X29
	003 Move [X31+200], X30
	004 Move [X31+208], X28
	005 Move [X31+216], X27
	006 Move [X31+224], X26
	007 Move [X31+232], X25
	008 Move [X31+240], X24
	009 Move [X31+248], X23
	010 Move [X31+256], X22
	011 Move [X31+264], X21
	012 Move [X31+272], X20
	013 Move [X31+280], X19
	014 Move X21, 0x25C6000
	015 Move W8, [X21+3570]
	016 Move W19, W1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {63}
	022 Move X0, 0x22E8000
	023 Move X0, [X0]
	024 Call 0x1C17CF4
	025 Move X0, 0x22E8000
	026 Move X0, [X0+8]
	027 Call 0x1C17CF4
	028 Move X0, 0x22E8000
	029 Move X0, [X0+16]
	030 Call 0x1C17CF4
	031 Move X0, 0x22E8000
	032 Move X0, [X0+24]
	033 Call 0x1C17CF4
	034 Move X0, 0x22E8000
	035 Move X0, [X0+32]
	036 Call 0x1C17CF4
	037 Move X0, 0x22E8000
	038 Move X0, [X0+40]
	039 Call 0x1C17CF4
	040 Move X0, 0x22E7000
	041 Move X0, [X0+944]
	042 Call 0x1C17CF4
	043 Move X0, 0x22E8000
	044 Move X0, [X0+48]
	045 Call 0x1C17CF4
	046 Move X0, 0x22E8000
	047 Move X0, [X0+56]
	048 Call 0x1C17CF4
	049 Move X0, 0x22E8000
	050 Move X0, [X0+64]
	051 Call 0x1C17CF4
	052 Move X0, 0x22E8000
	053 Move X0, [X0+72]
	054 Call 0x1C17CF4
	055 Move X0, 0x22E6000
	056 Move X0, [X0+3808]
	057 Call 0x1C17CF4
	058 Move X0, 0x22E6000
	059 Move X0, [X0+3800]
	060 Call 0x1C17CF4
	061 Move W8, 1
	062 Move [X21+3570], W8
	063 Move [X31+96], X31
	064 Move [X31+104], X31
	065 Move [X31+112], X31
	066 Move [X31+72], X31
	067 Move [X31+80], X31
	068 Move [X31+88], X31
	069 Move [X31+48], X31
	070 Move [X31+56], X31
	071 Move [X31+64], X31
	072 Move X8, [X20+40]
	073 Compare X8, 0
	074 JumpIfEqual {306}
	075 Move X0, [X8+24]
	076 Compare X0, 0
	077 JumpIfEqual {306}
	078 Move X8, 0x22E8000
	079 Move X8, [X8+56]
	080 Move X26, 0x22E8000
	081 Move X29, 0x22E8000
	082 Move X24, 0x22E8000
	083 Move X27, 0x22E7000
	084 Move X25, 0x22E8000
	085 Move X26, [X26+24]
	086 Move X29, [X29+64]
	087 Move X24, [X24+16]
	088 Move X27, [X27+944]
	089 Move X25, [X25]
	090 Move X1, [X8]
	091 Add X8, X31, 160
	092 Call List`1<Object>.GetEnumerator, X0
	093 Move V0, [X31+10]
	094 Move X8, [X31+176]
	095 Move [X31+6], V0
	096 Move [X31+112], X8
	097 Move X1, [X26]
	098 Add X0, X31, 96
	099 Call Enumerator<Object>.MoveNext, X0
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfNotEqual {254}
	104 Move X8, 0x22E6000
	105 Move X21, [X31+112]
	106 Move X8, [X8+3800]
	107 Move X0, [X8]
	108 Call 0x1C17F10
	109 Move X8, 0x22E6000
	110 Move X8, [X8+3808]
	111 Move X22, X0
	112 Move X1, [X8]
	113 Call List`1<Object>..ctor, X0
	114 Compare X21, 0
	115 JumpIfEqual {297}
	116 Move X1, [X29]
	117 Add X8, X31, 160
	118 Move X0, X21
	119 Call List`1<Object>.GetEnumerator, X0
	120 Move V0, [X31+10]
	121 Move X8, [X31+176]
	122 Move [X31+3], V0
	123 Move [X31+64], X8
	124 Move X1, [X24]
	125 Add X0, X31, 48
	126 Call Enumerator<Object>.MoveNext, X0
	127 Move TEMP, X0
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfNotEqual {140}
	131 Move X8, [X31+64]
	132 Compare X8, 0
	133 JumpIfEqual {241}
	134 Compare X22, 0
	135 JumpIfEqual {242}
	136 Move X1, [X8+40]
	137 Move X2, [X27]
	138 Move X0, X22
	139 Call List`1<Object>.AddRange, X0, X1
	140 Move X23, X31
	141 Move W28, 6
	142 Move X1, [X25]
	143 Add X0, X31, 48
	144 Call Enumerator<Object>.Dispose, X0
	145 Compare X23, 0
	146 JumpIfNotEqual {298}
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Compare W28, 0
	149 JumpIfNotEqual {254}
	150 Compare X22, 0
	151 JumpIfEqual {302}
	152 Move X8, 0x22E8000
	153 Move X8, [X8+72]
	154 Move X1, [X8]
	155 Move X0, X22
	156 Call List`1<Object>.ToArray, X0
	157 Move X1, X0
	158 Add X0, X31, 72
	159 Move W2, W19
	160 Call NavZone..ctor, X0, X1, X2
	161 Move X8, [X20+40]
	162 Compare X8, 0
	163 JumpIfEqual {301}
	164 Move X0, [X8+32]
	165 NotImplemented "Instruction LDUR not yet implemented."
	166 Move X8, [X31+88]
	167 Move [X31+1], V0
	168 Move [X31+32], X8
	169 Compare X0, 0
	170 JumpIfEqual {303}
	171 Move V0, [X31+1]
	172 Move X8, [X31+32]
	173 Move X10, 0x22E8000
	174 Move [X31+8], V0
	175 Move [X31+144], X8
	176 Move W9, [X0+28]
	177 Move X8, [X0+16]
	178 Move X10, [X10+48]
	179 Add W9, W9, 1
	180 Move X10, [X10]
	181 Move [X0+28], W9
	182 Compare X8, 0
	183 JumpIfEqual {300}
	184 NotImplemented "Instruction LDRSW not yet implemented."
	185 Move W11, [X8+24]
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Add W10, W9, 1
	188 Move [X0+24], W10
	189 Move X10, [X31+144]
	190 Move V0, [X31+8]
	191 Move W11, 24
	192 NotImplemented "Instruction MADD not yet implemented."
	193 Move [X8+48], X10
	194 Move [X8+2], V0
	195 Move X8, [X10+32]
	196 Move V0, [X31+8]
	197 Move X9, [X31+144]
	198 Move X8, [X8+192]
	199 Move X2, [X8+112]
	200 Move [X31+10], V0
	201 Move [X31+176], X9
	202 Add X1, X31, 160
	203 Call List`1<NavZone>.AddWithResize, X0, X1
	204 Move X1, [X29]
	205 Add X8, X31, 160
	206 Move X0, X21
	207 Call List`1<Object>.GetEnumerator, X0
	208 Move V0, [X31+10]
	209 Move X8, [X31+176]
	210 Move [X31+3], V0
	211 Move [X31+64], X8
	212 Move X1, [X24]
	213 Add X0, X31, 48
	214 Call Enumerator<Object>.MoveNext, X0
	215 Move TEMP, X0
	216 And TEMP, TEMP, 1
	217 Compare TEMP, 1
	218 JumpIfNotEqual {230}
	219 Move X8, [X31+64]
	220 NotImplemented "Instruction LDUR not yet implemented."
	221 Move X9, [X31+88]
	222 Move [X31+10], V0
	223 Move [X31+176], X9
	224 Compare X8, 0
	225 JumpIfEqual {243}
	226 Move X9, [X31+176]
	227 Move V0, [X31+10]
	228 Move [X8+72], X9
	229 Move [X8+56], V0
	230 Move X21, X31
	231 Move W22, 9
	232 Move X1, [X25]
	233 Add X0, X31, 48
	234 Call Enumerator<Object>.Dispose, X0
	235 Compare X21, 0
	236 JumpIfNotEqual {304}
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Compare W22, 0
	239 JumpIfNotEqual {254}
	240 Add W19, W19, 1
	241 Call 0x1C17F20
	242 Call 0x1C17F20
	243 Call 0x1C17F20
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Call 0x3EB2AD0
	246 Move X21, [X0]
	247 Call 0x3EB2AE0
	248 Move W22, W31
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Call 0x3EB2AD0
	251 Move X23, [X0]
	252 Call 0x3EB2AE0
	253 Move W28, W31
	254 Move X8, 0x22E8000
	255 Move X8, [X8+8]
	256 Add X0, X31, 96
	257 Move X1, [X8]
	258 Call Enumerator<Object>.Dispose, X0
	259 Move X20, [X31+272]
	260 Move X19, [X31+280]
	261 Move X22, [X31+256]
	262 Move X21, [X31+264]
	263 Move X24, [X31+240]
	264 Move X23, [X31+248]
	265 Move X26, [X31+224]
	266 Move X25, [X31+232]
	267 Move X28, [X31+208]
	268 Move X27, [X31+216]
	269 Move X29, [X31+192]
	270 Move X30, [X31+200]
	271 Add X31, X31, 288
	272 Return 
	273 Move X19, X1
	274 Move X20, X0
	275 Move X23, X31
	276 Move X1, [X25]
	277 Add X0, X31, 48
	278 Call Enumerator<Object>.Dispose, X0
	279 Move X0, X20
	280 Move X1, X19
	281 Compare X23, 0
	282 JumpIfEqual {311}
	283 Move X0, X23
	284 Call 0x1C17F18
	285 Move X19, X1
	286 Move X20, X0
	287 Move X21, X31
	288 Move X1, [X25]
	289 Add X0, X31, 48
	290 Call Enumerator<Object>.Dispose, X0
	291 Move X0, X20
	292 Move X1, X19
	293 Compare X21, 0
	294 JumpIfEqual {311}
	295 Move X0, X21
	296 Call 0x1C17F18
	297 Call 0x1C17F20
	298 Move X0, X23
	299 Call 0x1C17F18
	300 Call 0x1C17F20
	301 Call 0x1C17F20
	302 Call 0x1C17F20
	303 Call 0x1C17F20
	304 Move X0, X21
	305 Call 0x1C17F18
	306 Call 0x1C17F20
	307 Move X19, X1
	308 Move X20, X0
	309 Move X19, X1
	310 Move X20, X0
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Call 0x3EB2AD0
	313 Move X19, [X0]
	314 Call 0x3EB2AE0
	315 Move X8, 0x22E8000
	316 Move X8, [X8+8]
	317 Add X0, X31, 96
	318 Move X1, [X8]
	319 Call Enumerator<Object>.Dispose, X0
	320 Compare X19, 0
	321 JumpIfEqual {259}
	322 Move X0, X19
	323 Call 0x1C17F18
	324 Move X20, X0
	325 Move X19, X31
	326 Move X20, X0
	327 Move X8, 0x22E8000
	328 Move X8, [X8+8]
	329 Move X1, [X8]
	330 Add X0, X31, 96
	331 Call Enumerator<Object>.Dispose, X0
	332 Compare X19, 0
	333 JumpIfNotEqual {336}
	334 Move X0, X20
	335 Call 0x1D2D690
	336 Move X0, X19
	337 Call 0x1C17F18
	338 Call 0x1991590

Method: System.Boolean PickItems()

Disassembly:
	0x01E13D98 MOV X0, X19
	0x01E13D9C BL 0x1C16F18
	0x01E13DA0 BL 0x1990590
	0x01E13DA4 SUB X31, X31, 0xD0
	0x01E13DA8 STP X29, X30, [X31 + 0x70]
	0x01E13DAC STP X28, X27, [X31 + 0x80]
	0x01E13DB0 STP X26, X25, [X31 + 0x90]
	0x01E13DB4 STP X24, X23, [X31 + 0xA0]
	0x01E13DB8 STP X22, X21, [X31 + 0xB0]
	0x01E13DBC STP X20, X19, [X31 + 0xC0]
	0x01E13DC0 ADRP X20, 0x25C5000
	0x01E13DC4 LDRB W8, [X20 + 0xDF4]
	0x01E13DC8 MOV X19, X0
	0x01E13DCC TBNZ X8, 0x0, 0x1E13EBC
	0x01E13DD0 ADRP X0, 0x22E7000
	0x01E13DD4 LDR X0, [X0 + 0x50]
	0x01E13DD8 BL 0x1C16CF4
	0x01E13DDC ADRP X0, 0x22E7000
	0x01E13DE0 LDR X0, [X0 + 0x58]
	0x01E13DE4 BL 0x1C16CF4
	0x01E13DE8 ADRP X0, 0x22E7000
	0x01E13DEC LDR X0, [X0 + 0x180]
	0x01E13DF0 BL 0x1C16CF4
	0x01E13DF4 ADRP X0, 0x22E7000
	0x01E13DF8 LDR X0, [X0 + 0x188]
	0x01E13DFC BL 0x1C16CF4
	0x01E13E00 ADRP X0, 0x22E7000
	0x01E13E04 LDR X0, [X0 + 0x190]
	0x01E13E08 BL 0x1C16CF4
	0x01E13E0C ADRP X0, 0x22E7000
	0x01E13E10 LDR X0, [X0 + 0x198]
	0x01E13E14 BL 0x1C16CF4
	0x01E13E18 ADRP X0, 0x22E7000
	0x01E13E1C LDR X0, [X0 + 0x1A0]
	0x01E13E20 BL 0x1C16CF4
	0x01E13E24 ADRP X0, 0x22E7000
	0x01E13E28 LDR X0, [X0 + 0x1A8]
	0x01E13E2C BL 0x1C16CF4
	0x01E13E30 ADRP X0, 0x22E7000
	0x01E13E34 LDR X0, [X0 + 0x1B0]
	0x01E13E38 BL 0x1C16CF4
	0x01E13E3C ADRP X0, 0x22E7000
	0x01E13E40 LDR X0, [X0 + 0x1B8]
	0x01E13E44 BL 0x1C16CF4
	0x01E13E48 ADRP X0, 0x22E7000
	0x01E13E4C LDR X0, [X0 + 0x1C0]
	0x01E13E50 BL 0x1C16CF4
	0x01E13E54 ADRP X0, 0x22E7000
	0x01E13E58 LDR X0, [X0 + 0xF8]
	0x01E13E5C BL 0x1C16CF4
	0x01E13E60 ADRP X0, 0x22E7000
	0x01E13E64 LDR X0, [X0 + 0x1C8]
	0x01E13E68 BL 0x1C16CF4
	0x01E13E6C ADRP X0, 0x22E6000
	0x01E13E70 LDR X0, [X0 + 0xEA8]
	0x01E13E74 BL 0x1C16CF4
	0x01E13E78 ADRP X0, 0x22E7000
	0x01E13E7C LDR X0, [X0 + 0x1D0]
	0x01E13E80 BL 0x1C16CF4
	0x01E13E84 ADRP X0, 0x22E7000
	0x01E13E88 LDR X0, [X0 + 0x1D8]
	0x01E13E8C BL 0x1C16CF4
	0x01E13E90 ADRP X0, 0x22E6000
	0x01E13E94 LDR X0, [X0 + 0x3D8]
	0x01E13E98 BL 0x1C16CF4
	0x01E13E9C ADRP X0, 0x22E0000
	0x01E13EA0 LDR X0, [X0 + 0xD78]
	0x01E13EA4 BL 0x1C16CF4
	0x01E13EA8 ADRP X0, 0x22E0000
	0x01E13EAC LDR X0, [X0 + 0x598]
	0x01E13EB0 BL 0x1C16CF4
	0x01E13EB4 MOVZ W8, 0x1
	0x01E13EB8 STRB W8, [X20 + 0xDF4]
	0x01E13EBC STP X31, X31, [X31 + 0x50]
	0x01E13EC0 STR X31, [X31 + 0x60]
	0x01E13EC4 STP X31, X31, [X31 + 0x30]
	0x01E13EC8 STR X31, [X31 + 0x40]
	0x01E13ECC STR X31, [X31 + 0x28]
	0x01E13ED0 LDR X0, [X19 + 0x18]
	0x01E13ED4 CBZ X0, 0x1E14368
	0x01E13ED8 ADRP X8, 0x22E7000
	0x01E13EDC LDR X8, [X8 + 0x1C0]
	0x01E13EE0 MOVZ W1, 0x1
	0x01E13EE4 LDR X2, [X8]
	0x01E13EE8 BL 0x21E770C
	0x01E13EEC CBZ X0, 0x1E14368
	0x01E13EF0 ADRP X8, 0x22E7000
	0x01E13EF4 LDR X8, [X8 + 0x1D0]
	0x01E13EF8 ADRP X28, 0x22E7000
	0x01E13EFC ADRP X27, 0x22E6000
	0x01E13F00 ADRP X26, 0x22E7000
	0x01E13F04 ADRP X24, 0x22E7000
	0x01E13F08 LDR X28, [X28 + 0x190]
	0x01E13F0C LDR X27, [X27 + 0xEA8]
	0x01E13F10 LDR X26, [X26 + 0x50]
	0x01E13F14 LDR X24, [X24 + 0x58]
	0x01E13F18 LDR X1, [X8]
	0x01E13F1C ADD X8, X31, 0x10
	0x01E13F20 BL 0x301CB58
	0x01E13F24 LDR V0, [X31 + 0x1]
	0x01E13F28 LDR X8, [X31 + 0x20]
	0x01E13F2C STR V0, [X31 + 0x5]
	0x01E13F30 STR X8, [X31 + 0x60]
	0x01E13F34 ADRP X8, 0x22E7000
	0x01E13F38 LDR X8, [X8 + 0x198]
	0x01E13F3C LDR X1, [X8]
	0x01E13F40 ADD X0, X31, 0x50
	0x01E13F44 BL 0x2BC4350
	0x01E13F48 TBZ X0, 0x0, 0x1E142F4
	0x01E13F4C LDR X20, [X31 + 0x60]
	0x01E13F50 CBZ X20, 0x1E14360
	0x01E13F54 LDR W8, [X20 + 0x40]
	0x01E13F58 STR W8, [X31 + 0xC]
	0x01E13F5C CBZ W8, 0x1E13F34
	0x01E13F60 LDR X0, [X20 + 0x20]
	0x01E13F64 CBZ X0, 0x1E14364
	0x01E13F68 ADRP X9, 0x22E7000
	0x01E13F6C LDR X8, [X0]
	0x01E13F70 LDR X9, [X9 + 0xF8]
	0x01E13F74 LDRB W10, [X8 + 0x130]
	0x01E13F78 LDR X1, [X9]
	0x01E13F7C LDRB W9, [X1 + 0x130]
	0x01E13F80 CMP W10, W9
	0x01E13F84 B.CC 0x1E1435C
	0x01E13F88 LDR X8, [X8 + 0xC8]
	0x01E13F8C ADD X8, X8, X9, 0x3, LSL
	0x01E13F90 LDUR X8, [X8 - 0x8]
	0x01E13F94 CMP X8, X1
	0x01E13F98 B.NE 0x1E1435C
	0x01E13F9C ADRP X8, 0x22E7000
	0x01E13FA0 LDR X8, [X8 + 0x1B8]
	0x01E13FA4 LDR X2, [X8]
	0x01E13FA8 MOV X1, X20
	0x01E13FAC BL 0x21E7478
	0x01E13FB0 LDR W8, [X31 + 0xC]
	0x01E13FB4 CMP W8, 0x1
	0x01E13FB8 B.LT 0x1E13F34
	0x01E13FBC MOV X21, X0
	0x01E13FC0 MOV W29, W31
	0x01E13FC4 ADRP X8, 0x22E0000
	0x01E13FC8 LDR X8, [X8 + 0x598]
	0x01E13FCC LDR X22, [X20 + 0x38]
	0x01E13FD0 LDR X0, [X8]
	0x01E13FD4 LDR W8, [X0 + 0xE0]
	0x01E13FD8 CBNZ W8, 0x1E13FE0
	0x01E13FDC BL 0x1C16DFC
	0x01E13FE0 MOV X0, X22
	0x01E13FE4 MOV X1, X31
	0x01E13FE8 MOV X2, X31
	0x01E13FEC BL 0x3C3883C
	0x01E13FF0 TBNZ X0, 0x0, 0x1E14200
	0x01E13FF4 MOV X1, X21
	0x01E13FF8 BL 0x1E15628
	0x01E13FFC CBZ X21, 0x1E14350
	0x01E14000 ADRP X8, 0x22E6000
	0x01E14004 LDR X8, [X8 + 0x1D8]
	0x01E14008 LDR X1, [X8]
	0x01E1400C ADD X8, X31, 0x10
	0x01E14010 MOV X0, X21
	0x01E14014 BL 0x301CB58
	0x01E14018 LDR V0, [X31 + 0x1]
	0x01E1401C LDR X8, [X31 + 0x20]
	0x01E14020 STR V0, [X31 + 0x3]
	0x01E14024 STR X8, [X31 + 0x40]
	0x01E14028 LDR X1, [X28]
	0x01E1402C ADD X0, X31, 0x30
	0x01E14030 BL 0x2BC4350
	0x01E14034 TBZ X0, 0x0, 0x1E141CC
	0x01E14038 LDR X0, [X31 + 0x40]
	0x01E1403C CBZ X0, 0x1E14214
	0x01E14040 MOV X1, X20
	0x01E14044 MOV X2, X31
	0x01E14048 BL 0x1E0AE38
	0x01E1404C LDR X1, [X27]
	0x01E14050 BL 0x1C16E00
	0x01E14054 MOV X23, X0
	0x01E14058 CBZ X0, 0x1E14028
	0x01E1405C LDR X8, [X19 + 0x28]
	0x01E14060 CBZ X8, 0x1E14224
	0x01E14064 LDR X0, [X8 + 0x10]
	0x01E14068 CBZ X0, 0x1E1421C
	0x01E1406C LDR X2, [X26]
	0x01E14070 MOV X1, X23
	0x01E14074 BL 0x2AA528C
	0x01E14078 TBZ X0, 0x0, 0x1E14028
	0x01E1407C LDR X8, [X19 + 0x28]
	0x01E14080 CBZ X8, 0x1E1423C
	0x01E14084 LDR X0, [X8 + 0x10]
	0x01E14088 CBZ X0, 0x1E14234
	0x01E1408C LDR X2, [X24]
	0x01E14090 MOV X1, X23
	0x01E14094 BL 0x2AA5018
	0x01E14098 MOV X8, X0
	0x01E1409C CBZ X0, 0x1E1422C
	0x01E140A0 LDR X9, [X8 + 0x28]
	0x01E140A4 CBZ X9, 0x1E14244
	0x01E140A8 LDR W9, [X9 + 0x18]
	0x01E140AC CBZ W9, 0x1E14028
	0x01E140B0 ADD X23, X8, 0x38
	0x01E140B4 MOV X0, X23
	0x01E140B8 BL 0x1E158E0
	0x01E140BC ADRP X8, 0x22DF000
	0x01E140C0 LDR X8, [X8 + 0x598]
	0x01E140C4 MOV X24, X0
	0x01E140C8 LDR X0, [X8]
	0x01E140CC LDR W8, [X0 + 0xE0]
	0x01E140D0 CBNZ W8, 0x1E140D8
	0x01E140D4 BL 0x1C16DFC
	0x01E140D8 ADRP X8, 0x22DF000
	0x01E140DC LDR X8, [X8 + 0xD78]
	0x01E140E0 LDR X1, [X8]
	0x01E140E4 MOV X0, X22
	0x01E140E8 BL 0x222D35C
	0x01E140EC MOV X22, X0
	0x01E140F0 CBZ X0, 0x1E1424C
	0x01E140F4 MOV X0, X22
	0x01E140F8 MOV X1, X31
	0x01E140FC BL 0x3C356F8
	0x01E14100 CBZ X24, 0x1E14254
	0x01E14104 MOV X25, X0
	0x01E14108 MOV X0, X24
	0x01E1410C MOV X1, X31
	0x01E14110 BL 0x1E0D638
	0x01E14114 CBZ X25, 0x1E1425C
	0x01E14118 MOV X0, X25
	0x01E1411C MOV X1, X31
	0x01E14120 BL 0x3C3F62C
	0x01E14124 MOV X0, X22
	0x01E14128 MOV X1, X31
	0x01E1412C BL 0x3C356F8
	0x01E14130 CBZ X0, 0x1E14264
	0x01E14134 LDR X1, [X19 + 0x40]
	0x01E14138 MOV X2, X31
	0x01E1413C BL 0x3C3FD20
	0x01E14140 ADRP X8, 0x22E6000
	0x01E14144 LDR X8, [X8 + 0x1B0]
	0x01E14148 LDR X2, [X8]
	0x01E1414C ADD X1, X31, 0x28
	0x01E14150 MOV X0, X22
	0x01E14154 BL 0x21E6600
	0x01E14158 TBZ X0, 0x0, 0x1E141CC
	0x01E1415C LDR X22, [X31 + 0x28]
	0x01E14160 CBZ X22, 0x1E1426C
	0x01E14164 LDR X8, [X22]
	0x01E14168 ADRP X10, 0x22E6000
	0x01E1416C LDR W23, [X23]
	0x01E14170 LDRH W9, [X8 + 0x12E]
	0x01E14174 LDR X10, [X10 + 0x1C8]
	0x01E14178 LDR X1, [X10]
	0x01E1417C CBZ X9, 0x1E141A0
	0x01E14180 LDR X10, [X8 + 0xB0]
	0x01E14184 ADD X10, X10, 0x8
	0x01E14188 LDUR X11, [X10 - 0x8]
	0x01E1418C CMP X11, X1
	0x01E14190 B.EQ 0x1E141B0
	0x01E14194 SUBS X9, X9, 0x1
	0x01E14198 ADD X10, X10, 0x10
	0x01E1419C B.NE 0x1E14188
	0x01E141A0 MOV X0, X22
	0x01E141A4 MOV W2, W31
	0x01E141A8 BL 0x1C5C788
	0x01E141AC B 0x1E141BC
	0x01E141B0 LDRSW X9, [X10]
	0x01E141B4 ADD X8, X8, X9, 0x4, LSL
	0x01E141B8 ADD X0, X8, 0x138
	0x01E141BC LDP X8, X2, [X0]
	0x01E141C0 MOV X0, X22
	0x01E141C4 MOV W1, W23
	0x01E141C8 BLR X8
	0x01E141CC MOV X24, X31
	0x01E141D0 MOVZ W22, 0x6
	0x01E141D4 ADRP X8, 0x22E6000
	0x01E141D8 LDR X8, [X8 + 0x188]
	0x01E141DC LDR X1, [X8]
	0x01E141E0 ADD X0, X31, 0x30
	0x01E141E4 BL 0x2BC434C
	0x01E141E8 CBNZ X24, 0x1E14354
	0x01E141EC ADRP X24, 0x22E6000
	0x01E141F0 LDR X24, [X24 + 0x58]
	0x01E141F4 CMP W22, 0x6
	0x01E141F8 B.EQ 0x1E14200
	0x01E141FC CBNZ W22, 0x1E142F4
	0x01E14200 LDR W8, [X31 + 0xC]
	0x01E14204 ADD W29, W29, 0x1
	0x01E14208 CMP W29, W8
	0x01E1420C B.NE 0x1E13FC4
	0x01E14210 B 0x1E13F34
	0x01E14214 BL 0x1C16F20
	0x01E14218 B 0x1E1436C
	0x01E1421C BL 0x1C16F20
	0x01E14220 B 0x1E1436C
	0x01E14224 BL 0x1C16F20
	0x01E14228 B 0x1E1436C
	0x01E1422C BL 0x1C16F20
	0x01E14230 B 0x1E1436C
	0x01E14234 BL 0x1C16F20
	0x01E14238 B 0x1E1436C
	0x01E1423C BL 0x1C16F20
	0x01E14240 B 0x1E1436C
	0x01E14244 BL 0x1C16F20
	0x01E14248 B 0x1E1436C
	0x01E1424C BL 0x1C16F20
	0x01E14250 B 0x1E1436C
	0x01E14254 BL 0x1C16F20
	0x01E14258 B 0x1E1436C
	0x01E1425C BL 0x1C16F20
	0x01E14260 B 0x1E1436C
	0x01E14264 BL 0x1C16F20
	0x01E14268 B 0x1E1436C
	0x01E1426C BL 0x1C16F20
	0x01E14270 B 0x1E1436C
	0x01E14274 B 0x1E142CC
	0x01E14278 B 0x1E142CC
	0x01E1427C B 0x1E142CC
	0x01E14280 B 0x1E142CC
	0x01E14284 B 0x1E142CC
	0x01E14288 B 0x1E142CC
	0x01E1428C B 0x1E142CC
	0x01E14290 B 0x1E142CC
	0x01E14294 B 0x1E142CC
	0x01E14298 B 0x1E142CC
	0x01E1429C B 0x1E142CC
	0x01E142A0 B 0x1E142CC
	0x01E142A4 B 0x1E142CC
	0x01E142A8 B 0x1E142CC
	0x01E142AC B 0x1E142CC
	0x01E142B0 B 0x1E142CC
	0x01E142B4 B 0x1E142CC
	0x01E142B8 B 0x1E142CC
	0x01E142BC B 0x1E142CC
	0x01E142C0 B 0x1E142CC
	0x01E142C4 B 0x1E142CC
	0x01E142C8 B 0x1E142CC
	0x01E142CC MOV X22, X1
	0x01E142D0 MOV X23, X0
	0x01E142D4 CMP W22, 0x1
	0x01E142D8 B.NE 0x1E1432C
	0x01E142DC MOV X0, X23
	0x01E142E0 BL 0x3EB1AD0
	0x01E142E4 LDR X24, [X0]
	0x01E142E8 BL 0x3EB1AE0
	0x01E142EC MOV W22, W31
	0x01E142F0 B 0x1E141D4
	0x01E142F4 ADRP X8, 0x22E6000
	0x01E142F8 LDR X8, [X8 + 0x180]
	0x01E142FC ADD X0, X31, 0x50
	0x01E14300 LDR X1, [X8]
	0x01E14304 BL 0x2BC434C
	0x01E14308 LDP X20, X19, [X31 + 0xC0]
	0x01E1430C LDP X22, X21, [X31 + 0xB0]
	0x01E14310 LDP X24, X23, [X31 + 0xA0]
	0x01E14314 LDP X26, X25, [X31 + 0x90]
	0x01E14318 LDP X28, X27, [X31 + 0x80]
	0x01E1431C LDP X29, X30, [X31 + 0x70]
	0x01E14320 MOVZ W0, 0x1
	0x01E14324 ADD X31, X31, 0xD0
	0x01E14328 RET
	0x01E1432C MOV X24, X31
	0x01E14330 ADRP X8, 0x22E6000
	0x01E14334 LDR X8, [X8 + 0x188]
	0x01E14338 LDR X1, [X8]
	0x01E1433C ADD X0, X31, 0x30
	0x01E14340 BL 0x2BC434C
	0x01E14344 CBZ X24, 0x1E143A8
	0x01E14348 MOV X0, X24
	0x01E1434C BL 0x1C16F18
	0x01E14350 BL 0x1C16F20
	0x01E14354 MOV X0, X24
	0x01E14358 BL 0x1C16F18
	0x01E1435C BL 0x1C171E0
	0x01E14360 BL 0x1C16F20
	0x01E14364 BL 0x1C16F20
	0x01E14368 BL 0x1C16F20
	0x01E1436C MOV X22, X1
	0x01E14370 MOV X23, X0
	0x01E14374 B 0x1E14330
	0x01E14378 B 0x1E143A0
	0x01E1437C B 0x1E143A0
	0x01E14380 B 0x1E143A0
	0x01E14384 B 0x1E143A0
	0x01E14388 B 0x1E143A0
	0x01E1438C B 0x1E143A0
	0x01E14390 B 0x1E143A0
	0x01E14394 B 0x1E143A0
	0x01E14398 B 0x1E143A0
	0x01E1439C B 0x1E143A0
	0x01E143A0 MOV X22, X1
	0x01E143A4 MOV X23, X0
	0x01E143A8 CMP W22, 0x1
	0x01E143AC B.NE 0x1E143E0
	0x01E143B0 MOV X0, X23
	0x01E143B4 BL 0x3EB1AD0
	0x01E143B8 LDR X19, [X0]
	0x01E143BC BL 0x3EB1AE0
	0x01E143C0 ADRP X8, 0x22E6000
	0x01E143C4 LDR X8, [X8 + 0x180]
	0x01E143C8 ADD X0, X31, 0x50
	0x01E143CC LDR X1, [X8]
	0x01E143D0 BL 0x2BC434C
	0x01E143D4 CBZ X19, 0x1E14308
	0x01E143D8 MOV X0, X19
	0x01E143DC BL 0x1C16F18
	0x01E143E0 MOV X19, X31
	0x01E143E4 B 0x1E143EC
	0x01E143E8 MOV X23, X0
	0x01E143EC ADRP X8, 0x22E6000
	0x01E143F0 LDR X8, [X8 + 0x180]
	0x01E143F4 LDR X1, [X8]
	0x01E143F8 ADD X0, X31, 0x50
	0x01E143FC BL 0x2BC434C
	0x01E14400 CBNZ X19, 0x1E1440C
	0x01E14404 MOV X0, X23
	0x01E14408 BL 0x1D2C690
	0x01E1440C MOV X0, X19
	0x01E14410 BL 0x1C16F18
	0x01E14414 BL 0x1990590
	0x01E14418 SUB X31, X31, 0xA0
	0x01E1441C STR X30, [X31 + 0x40]
	0x01E14420 STP X28, X27, [X31 + 0x50]
	0x01E14424 STP X26, X25, [X31 + 0x60]
	0x01E14428 STP X24, X23, [X31 + 0x70]
	0x01E1442C STP X22, X21, [X31 + 0x80]
	0x01E14430 STP X20, X19, [X31 + 0x90]
	0x01E14434 ADRP X28, 0x25C4000
	0x01E14438 ADRP X27, 0x22E6000
	0x01E1443C ADRP X26, 0x22E6000
	0x01E14440 LDRB W8, [X28 + 0xDF8]
	0x01E14444 LDR X27, [X27 + 0x1E0]
	0x01E14448 LDR X26, [X26 + 0x1E8]
	0x01E1444C MOV X23, X6
	0x01E14450 MOV X19, X5
	0x01E14454 MOV W24, W4
	0x01E14458 MOV X21, X3
	0x01E1445C MOV X22, X2
	0x01E14460 MOV X25, X1
	0x01E14464 MOV X20, X0
	0x01E14468 TBNZ X8, 0x0, 0x1E144F8
	0x01E1446C ADRP X0, 0x22E6000
	0x01E14470 LDR X0, [X0 + 0x1F0]
	0x01E14474 BL 0x1C16CF4
	0x01E14478 ADRP X0, 0x22E6000
	0x01E1447C LDR X0, [X0 + 0x1F8]
	0x01E14480 BL 0x1C16CF4
	0x01E14484 ADRP X0, 0x22E6000
	0x01E14488 LDR X0, [X0 + 0x200]
	0x01E1448C BL 0x1C16CF4
	0x01E14490 ADRP X0, 0x22E6000
	0x01E14494 LDR X0, [X0 + 0x208]
	0x01E14498 BL 0x1C16CF4
	0x01E1449C ADRP X0, 0x22E5000
	0x01E144A0 LDR X0, [X0 + 0xB18]
	0x01E144A4 BL 0x1C16CF4
	0x01E144A8 ADRP X0, 0x22E5000
	0x01E144AC LDR X0, [X0 + 0xE90]
	0x01E144B0 BL 0x1C16CF4
	0x01E144B4 ADRP X0, 0x22E6000
	0x01E144B8 LDR X0, [X0 + 0x210]
	0x01E144BC BL 0x1C16CF4
	0x01E144C0 ADRP X0, 0x22E6000
	0x01E144C4 LDR X0, [X0 + 0x218]
	0x01E144C8 BL 0x1C16CF4
	0x01E144CC ADRP X0, 0x22E6000
	0x01E144D0 LDR X0, [X0 + 0x1E8]
	0x01E144D4 BL 0x1C16CF4
	0x01E144D8 ADRP X0, 0x22E6000
	0x01E144DC LDR X0, [X0 + 0x1E0]
	0x01E144E0 BL 0x1C16CF4
	0x01E144E4 ADRP X0, 0x22DF000
	0x01E144E8 LDR X0, [X0 + 0x598]
	0x01E144EC BL 0x1C16CF4
	0x01E144F0 MOVZ W8, 0x1
	0x01E144F4 STRB W8, [X28 + 0xDF8]
	0x01E144F8 LDR X0, [X27]
	0x01E144FC STP X31, X31, [X31 + 0x20]
	0x01E14500 STR X31, [X31 + 0x30]
	0x01E14504 BL 0x1C16F10
	0x01E14508 LDR X1, [X26]
	0x01E1450C MOV X26, X0
	0x01E14510 BL 0x301B7C4
	0x01E14514 MOV X0, X20
	0x01E14518 MOV X1, X31
	0x01E1451C STR X26, [X20 + 0x38]
	0x01E14520 BL 0x33BDD8C
	0x01E14524 STP X25, X22, [X20 + 0x10]
	0x01E14528 STR X21, [X20 + 0x20]
	0x01E1452C STR W24, [X20 + 0x28]
	0x01E14530 STR X19, [X20 + 0x30]
	0x01E14534 STR X23, [X20 + 0x40]
	0x01E14538 CBZ X21, 0x1E14578
	0x01E1453C ADRP X8, 0x22E6000
	0x01E14540 LDR X8, [X8 + 0x208]
	0x01E14544 LDR X9, [X21]
	0x01E14548 LDR X8, [X8]
	0x01E1454C LDRB W11, [X9 + 0x130]
	0x01E14550 LDRB W10, [X8 + 0x130]
	0x01E14554 CMP W11, W10
	0x01E14558 B.CS 0x1E14564
	0x01E1455C MOV X21, X31
	0x01E14560 B 0x1E14578
	0x01E14564 LDR X9, [X9 + 0xC8]
	0x01E14568 ADD X9, X9, X10, 0x3, LSL
	0x01E1456C LDUR X9, [X9 - 0x8]
	0x01E14570 CMP X9, X8
	0x01E14574 CSEL X21, X21, X31, EQ
	0x01E14578 CBZ X22, 0x1E146F4
	0x01E1457C ADRP X8, 0x22E5000
	0x01E14580 LDR X8, [X8 + 0xE90]
	0x01E14584 MOV X0, X22
	0x01E14588 MOV X1, X21
	0x01E1458C LDR X2, [X8]
	0x01E14590 BL 0x21E7478
	0x01E14594 CBZ X0, 0x1E146F4
	0x01E14598 ADRP X8, 0x22E6000
	0x01E1459C LDR X8, [X8 + 0x218]
	0x01E145A0 ADRP X24, 0x22E6000
	0x01E145A4 ADRP X25, 0x22DF000
	0x01E145A8 LDR X24, [X24 + 0x1F8]
	0x01E145AC LDR X25, [X25 + 0x598]
	0x01E145B0 LDR X1, [X8]
	0x01E145B4 ADRP X26, 0x22E5000
	0x01E145B8 ADRP X27, 0x22E6000
	0x01E145BC ADRP X23, 0x22E6000
	0x01E145C0 LDR X26, [X26 + 0xB18]
	0x01E145C4 LDR X27, [X27 + 0x210]
	0x01E145C8 LDR X23, [X23 + 0x1F0]
	0x01E145CC ADD X8, X31, 0x8
	0x01E145D0 BL 0x301CB58
	0x01E145D4 LDUR V0, [X31 + 0x8]
	0x01E145D8 LDR X8, [X31 + 0x18]
	0x01E145DC STR V0, [X31 + 0x2]
	0x01E145E0 STR X8, [X31 + 0x30]
	0x01E145E4 LDR X1, [X24]
	0x01E145E8 ADD X0, X31, 0x20
	0x01E145EC BL 0x2BC4350
	0x01E145F0 TBZ X0, 0x0, 0x1E146BC
	0x01E145F4 LDR X0, [X25]
	0x01E145F8 LDR X22, [X31 + 0x30]
	0x01E145FC LDR W8, [X0 + 0xE0]
	0x01E14600 CBNZ W8, 0x1E14608
	0x01E14604 BL 0x1C16DFC
	0x01E14608 MOV X0, X22
	0x01E1460C MOV X1, X19
	0x01E14610 MOV X2, X31
	0x01E14614 BL 0x3C3883C
	0x01E14618 TBNZ X0, 0x0, 0x1E145E4
	0x01E1461C CBZ X22, 0x1E146E8
	0x01E14620 MOV X0, X22
	0x01E14624 MOV X1, X21
	0x01E14628 MOV X2, X31
	0x01E1462C BL 0x1E08F4C
	0x01E14630 CBZ X0, 0x1E14660
	0x01E14634 LDR X9, [X0]
	0x01E14638 LDR X8, [X26]
	0x01E1463C LDRB W11, [X9 + 0x130]
	0x01E14640 LDRB W10, [X8 + 0x130]
	0x01E14644 CMP W11, W10
	0x01E14648 B.CC 0x1E14660
	0x01E1464C LDR X9, [X9 + 0xC8]
	0x01E14650 ADD X9, X9, X10, 0x3, LSL
	0x01E14654 LDUR X9, [X9 - 0x8]
	0x01E14658 CMP X9, X8
	0x01E1465C B.EQ 0x1E145E4
	0x01E14660 LDR X0, [X20 + 0x38]
	0x01E14664 CBZ X0, 0x1E146F0
	0x01E14668 LDR W10, [X0 + 0x1C]
	0x01E1466C LDR X8, [X0 + 0x10]
	0x01E14670 LDR X9, [X27]
	0x01E14674 ADD W10, W10, 0x1
	0x01E14678 STR W10, [X0 + 0x1C]
	0x01E1467C CBZ X8, 0x1E146EC
	0x01E14680 LDRSW X10, [X0 + 0x18]
	0x01E14684 LDR W11, [X8 + 0x18]
	0x01E14688 CMP W10, W11
	0x01E1468C B.CS 0x1E146A4
	0x01E14690 ADD W9, W10, 0x1
	0x01E14694 ADD X8, X8, X10, 0x3, LSL
	0x01E14698 STR W9, [X0 + 0x18]
	0x01E1469C STR X22, [X8 + 0x20]
	0x01E146A0 B 0x1E145E4
	0x01E146A4 LDR X8, [X9 + 0x20]
	0x01E146A8 LDR X8, [X8 + 0xC0]
	0x01E146AC LDR X2, [X8 + 0x70]
	0x01E146B0 MOV X1, X22
	0x01E146B4 BL 0x301BF90
	0x01E146B8 B 0x1E145E4
	0x01E146BC LDR X1, [X23]
	0x01E146C0 ADD X0, X31, 0x20
	0x01E146C4 BL 0x2BC434C
	0x01E146C8 LDP X20, X19, [X31 + 0x90]
	0x01E146CC LDP X22, X21, [X31 + 0x80]
	0x01E146D0 LDP X24, X23, [X31 + 0x70]
	0x01E146D4 LDP X26, X25, [X31 + 0x60]
	0x01E146D8 LDP X28, X27, [X31 + 0x50]
	0x01E146DC LDR X30, [X31 + 0x40]
	0x01E146E0 ADD X31, X31, 0xA0
	0x01E146E4 RET
	0x01E146E8 BL 0x1C16F20
	0x01E146EC BL 0x1C16F20
	0x01E146F0 BL 0x1C16F20
	0x01E146F4 BL 0x1C16F20
	0x01E146F8 B 0x1E14710
	0x01E146FC B 0x1E14710
	0x01E14700 B 0x1E14710
	0x01E14704 B 0x1E14710
	0x01E14708 B 0x1E14710
	0x01E1470C B 0x1E14710
	0x01E14710 MOV X19, X0
	0x01E14714 CMP W1, 0x1
	0x01E14718 B.NE 0x1E14744
	0x01E1471C MOV X0, X19
	0x01E14720 BL 0x3EB1AD0
	0x01E14724 LDR X20, [X0]
	0x01E14728 BL 0x3EB1AE0
	0x01E1472C LDR X1, [X23]
	0x01E14730 ADD X0, X31, 0x20
	0x01E14734 BL 0x2BC434C
	0x01E14738 CBZ X20, 0x1E146C8
	0x01E1473C MOV X0, X20
	0x01E14740 BL 0x1C16F18
	0x01E14744 MOV X20, X31
	0x01E14748 B 0x1E14750
	0x01E1474C MOV X19, X0
	0x01E14750 LDR X1, [X23]
	0x01E14754 ADD X0, X31, 0x20
	0x01E14758 BL 0x2BC434C
	0x01E1475C CBNZ X20, 0x1E14768
	0x01E14760 MOV X0, X19
	0x01E14764 BL 0x1D2C690
	0x01E14768 MOV X0, X20
	0x01E1476C BL 0x1C16F18
	0x01E14770 BL 0x1990590
	0x01E14774 SUB X31, X31, 0x90
	0x01E14778 STP X29, X30, [X31 + 0x30]
	0x01E1477C STP X28, X27, [X31 + 0x40]
	0x01E14780 STP X26, X25, [X31 + 0x50]
	0x01E14784 STP X24, X23, [X31 + 0x60]
	0x01E14788 STP X22, X21, [X31 + 0x70]
	0x01E1478C STP X20, X19, [X31 + 0x80]
	0x01E14790 ADRP X21, 0x25C4000
	0x01E14794 ADRP X20, 0x22E6000
	0x01E14798 LDRB W8, [X21 + 0xDF9]
	0x01E1479C LDR X20, [X20 + 0x220]
	0x01E147A0 MOV X27, X0
	0x01E147A4 TBNZ X8, 0x0, 0x1E149A8
	0x01E147A8 ADRP X0, 0x22E5000
	0x01E147AC LDR X0, [X0 + 0xC20]
	0x01E147B0 BL 0x1C16CF4
	0x01E147B4 ADRP X0, 0x22E6000
	0x01E147B8 LDR X0, [X0 + 0x228]
	0x01E147BC BL 0x1C16CF4
	0x01E147C0 ADRP X0, 0x22E6000
	0x01E147C4 LDR X0, [X0 + 0x230]
	0x01E147C8 BL 0x1C16CF4
	0x01E147CC ADRP X0, 0x22E6000
	0x01E147D0 LDR X0, [X0 + 0x238]
	0x01E147D4 BL 0x1C16CF4
	0x01E147D8 ADRP X0, 0x22E6000
	0x01E147DC LDR X0, [X0 + 0x240]
	0x01E147E0 BL 0x1C16CF4
	0x01E147E4 ADRP X0, 0x22E5000
	0x01E147E8 LDR X0, [X0 + 0x9C0]
	0x01E147EC BL 0x1C16CF4
	0x01E147F0 ADRP X0, 0x22E5000
	0x01E147F4 LDR X0, [X0 + 0x9C8]
	0x01E147F8 BL 0x1C16CF4
	0x01E147FC ADRP X0, 0x22E6000
	0x01E14800 LDR X0, [X0 + 0x248]
	0x01E14804 BL 0x1C16CF4
	0x01E14808 ADRP X0, 0x22E6000
	0x01E1480C LDR X0, [X0 + 0x208]
	0x01E14810 BL 0x1C16CF4
	0x01E14814 ADRP X0, 0x22E6000
	0x01E14818 LDR X0, [X0 + 0x250]
	0x01E1481C BL 0x1C16CF4
	0x01E14820 ADRP X0, 0x22E6000
	0x01E14824 LDR X0, [X0 + 0x258]
	0x01E14828 BL 0x1C16CF4
	0x01E1482C ADRP X0, 0x22E5000
	0x01E14830 LDR X0, [X0 + 0x9D0]
	0x01E14834 BL 0x1C16CF4
	0x01E14838 ADRP X0, 0x22E5000
	0x01E1483C LDR X0, [X0 + 0xEA0]
	0x01E14840 BL 0x1C16CF4
	0x01E14844 ADRP X0, 0x22E5000
	0x01E14848 LDR X0, [X0 + 0xEA8]
	0x01E1484C BL 0x1C16CF4
	0x01E14850 ADRP X0, 0x22E6000
	0x01E14854 LDR X0, [X0 + 0x260]
	0x01E14858 BL 0x1C16CF4
	0x01E1485C ADRP X0, 0x22E6000
	0x01E14860 LDR X0, [X0 + 0x268]
	0x01E14864 BL 0x1C16CF4
	0x01E14868 ADRP X0, 0x22E5000
	0x01E1486C LDR X0, [X0 + 0xA10]
	0x01E14870 BL 0x1C16CF4
	0x01E14874 ADRP X0, 0x22E6000
	0x01E14878 LDR X0, [X0 + 0x210]
	0x01E1487C BL 0x1C16CF4
	0x01E14880 ADRP X0, 0x22E6000
	0x01E14884 LDR X0, [X0 + 0x270]
	0x01E14888 BL 0x1C16CF4
	0x01E1488C ADRP X0, 0x22E5000
	0x01E14890 LDR X0, [X0 + 0xA38]
	0x01E14894 BL 0x1C16CF4
	0x01E14898 ADRP X0, 0x22E6000
	0x01E1489C LDR X0, [X0 + 0x278]
	0x01E148A0 BL 0x1C16CF4
	0x01E148A4 ADRP X0, 0x22E6000
	0x01E148A8 LDR X0, [X0 + 0x280]
	0x01E148AC BL 0x1C16CF4
	0x01E148B0 ADRP X0, 0x22E5000
	0x01E148B4 LDR X0, [X0 + 0x9D8]
	0x01E148B8 BL 0x1C16CF4
	0x01E148BC ADRP X0, 0x22E5000
	0x01E148C0 LDR X0, [X0 + 0xEB8]
	0x01E148C4 BL 0x1C16CF4
	0x01E148C8 ADRP X0, 0x22E5000
	0x01E148CC LDR X0, [X0 + 0x9E0]
	0x01E148D0 BL 0x1C16CF4
	0x01E148D4 ADRP X0, 0x22E5000
	0x01E148D8 LDR X0, [X0 + 0xEC8]
	0x01E148DC BL 0x1C16CF4
	0x01E148E0 ADRP X0, 0x22E6000
	0x01E148E4 LDR X0, [X0 + 0x288]
	0x01E148E8 BL 0x1C16CF4
	0x01E148EC ADRP X0, 0x22DF000
	0x01E148F0 LDR X0, [X0 + 0x788]
	0x01E148F4 BL 0x1C16CF4
	0x01E148F8 ADRP X0, 0x22DF000
	0x01E148FC LDR X0, [X0 + 0x598]
	0x01E14900 BL 0x1C16CF4
	0x01E14904 ADRP X0, 0x22E6000
	0x01E14908 LDR X0, [X0 + 0x290]
	0x01E1490C BL 0x1C16CF4
	0x01E14910 ADRP X0, 0x22E6000
	0x01E14914 LDR X0, [X0 + 0x298]
	0x01E14918 BL 0x1C16CF4
	0x01E1491C ADRP X0, 0x22E6000
	0x01E14920 LDR X0, [X0 + 0x2A0]
	0x01E14924 BL 0x1C16CF4
	0x01E14928 ADRP X0, 0x22E6000
	0x01E1492C LDR X0, [X0 + 0x220]
	0x01E14930 BL 0x1C16CF4
	0x01E14934 ADRP X0, 0x22E6000
	0x01E14938 LDR X0, [X0 + 0x2A8]
	0x01E1493C BL 0x1C16CF4
	0x01E14940 ADRP X0, 0x22E6000
	0x01E14944 LDR X0, [X0 + 0x2B0]
	0x01E14948 BL 0x1C16CF4
	0x01E1494C ADRP X0, 0x22E6000
	0x01E14950 LDR X0, [X0 + 0x2B8]
	0x01E14954 BL 0x1C16CF4
	0x01E14958 ADRP X0, 0x22E5000
	0x01E1495C LDR X0, [X0 + 0xD60]
	0x01E14960 BL 0x1C16CF4
	0x01E14964 ADRP X0, 0x22E6000
	0x01E14968 LDR X0, [X0 + 0x2C0]
	0x01E1496C BL 0x1C16CF4
	0x01E14970 ADRP X0, 0x22E6000
	0x01E14974 LDR X0, [X0 + 0x2C8]
	0x01E14978 BL 0x1C16CF4
	0x01E1497C ADRP X0, 0x22E6000
	0x01E14980 LDR X0, [X0 + 0x2D0]
	0x01E14984 BL 0x1C16CF4
	0x01E14988 ADRP X0, 0x22E6000
	0x01E1498C LDR X0, [X0 + 0x2D8]
	0x01E14990 BL 0x1C16CF4
	0x01E14994 ADRP X0, 0x22E6000
	0x01E14998 LDR X0, [X0 + 0x2E0]
	0x01E1499C BL 0x1C16CF4
	0x01E149A0 MOVZ W8, 0x1
	0x01E149A4 STRB W8, [X21 + 0xDF9]
	0x01E149A8 LDR X0, [X20]
	0x01E149AC ADRP X26, 0x22DF000
	0x01E149B0 ADRP X25, 0x22E6000
	0x01E149B4 ADRP X24, 0x22E5000
	0x01E149B8 LDR X26, [X26 + 0x788]
	0x01E149BC LDR X25, [X25 + 0x2D0]
	0x01E149C0 LDR X24, [X24 + 0xD60]
	0x01E149C4 BL 0x1C16F10
	0x01E149C8 MOV X1, X31
	0x01E149CC MOV X22, X0
	0x01E149D0 BL 0x33BDD8C
	0x01E149D4 LDR W8, [X27 + 0x28]
	0x01E149D8 CMP W8, 0x32
	0x01E149DC B.GE 0x1E14A38
	0x01E149E0 LDR X20, [X27 + 0x20]
	0x01E149E4 CBZ X20, 0x1E154B8
	0x01E149E8 ADRP X10, 0x22E5000
	0x01E149EC LDR X8, [X20]
	0x01E149F0 LDR X23, [X27 + 0x40]
	0x01E149F4 LDR X21, [X27 + 0x10]
	0x01E149F8 LDR X10, [X10 + 0xEA8]
	0x01E149FC LDRH W9, [X8 + 0x12E]
	0x01E14A00 LDR X1, [X10]
	0x01E14A04 CBZ X9, 0x1E14A28
	0x01E14A08 LDR X10, [X8 + 0xB0]
	0x01E14A0C ADD X10, X10, 0x8
	0x01E14A10 LDUR X11, [X10 - 0x8]
	0x01E14A14 CMP X11, X1
	0x01E14A18 B.EQ 0x1E14A98
	0x01E14A1C SUBS X9, X9, 0x1
	0x01E14A20 ADD X10, X10, 0x10
	0x01E14A24 B.NE 0x1E14A10
	0x01E14A28 MOV X0, X20
	0x01E14A2C MOV W2, W31
	0x01E14A30 BL 0x1C5C788
	0x01E14A34 B 0x1E14AA4
	0x01E14A38 LDR X0, [X26]
	0x01E14A3C ADRP X19, 0x22E6000
	0x01E14A40 LDR W8, [X0 + 0xE0]
	0x01E14A44 LDR X19, [X19 + 0x2C8]
	0x01E14A48 CBNZ W8, 0x1E14A50
	0x01E14A4C BL 0x1C16DFC
	0x01E14A50 LDR X1, [X19]
	0x01E14A54 LDR X3, [X25]
	0x01E14A58 LDR X4, [X24]
	0x01E14A5C MOVZ W0, 0x20
	0x01E14A60 MOVZ W5, 0x3F
	0x01E14A64 MOV X2, X31
	0x01E14A68 MOV X6, X31
	0x01E14A6C BL 0x35C25CC
	0x01E14A70 MOV W8, W31
	0x01E14A74 LDP X20, X19, [X31 + 0x80]
	0x01E14A78 LDP X22, X21, [X31 + 0x70]
	0x01E14A7C LDP X24, X23, [X31 + 0x60]
	0x01E14A80 LDP X26, X25, [X31 + 0x50]
	0x01E14A84 LDP X28, X27, [X31 + 0x40]
	0x01E14A88 LDP X29, X30, [X31 + 0x30]
	0x01E14A8C AND W0, W8, 0x1
	0x01E14A90 ADD X31, X31, 0x90
	0x01E14A94 RET
	0x01E14A98 LDRSW X9, [X10]
	0x01E14A9C ADD X8, X8, X9, 0x4, LSL
	0x01E14AA0 ADD X0, X8, 0x138
	0x01E14AA4 LDP X9, X3, [X0]
	0x01E14AA8 ADD X8, X31, 0x10
	0x01E14AAC MOV X0, X20
	0x01E14AB0 MOV X1, X23
	0x01E14AB4 MOV X2, X21
	0x01E14AB8 BLR X9
	0x01E14ABC LDR X8, [X31 + 0x10]
	0x01E14AC0 LDR X21, [X31 + 0x28]
	0x01E14AC4 TBNZ X8, 0x0, 0x1E14B20
	0x01E14AC8 CBZ X21, 0x1E154B8
	0x01E14ACC ADRP X20, 0x22DF000
	0x01E14AD0 LDR X20, [X20 + 0x598]
	0x01E14AD4 LDR X19, [X21 + 0x18]
	0x01E14AD8 LDR X0, [X20]
	0x01E14ADC LDR W8, [X0 + 0xE0]
	0x01E14AE0 CBNZ W8, 0x1E14AE8
	0x01E14AE4 BL 0x1C16DFC
	0x01E14AE8 MOV X0, X19
	0x01E14AEC MOV X1, X31
	0x01E14AF0 MOV X2, X31
	0x01E14AF4 BL 0x3C354F8
	0x01E14AF8 TBZ X0, 0x0, 0x1E14A70
	0x01E14AFC LDR X0, [X20]
	0x01E14B00 LDR X19, [X21 + 0x18]
	0x01E14B04 LDR W8, [X0 + 0xE0]
	0x01E14B08 CBNZ W8, 0x1E14B10
	0x01E14B0C BL 0x1C16DFC
	0x01E14B10 MOV X0, X19
	0x01E14B14 MOV X1, X31
	0x01E14B18 BL 0x3C39564
	0x01E14B1C B 0x1E14A70
	0x01E14B20 LDR X19, [X31 + 0x18]
	0x01E14B24 CBZ X19, 0x1E154B8
	0x01E14B28 LDR X8, [X27 + 0x38]
	0x01E14B2C CBZ X8, 0x1E154B8
	0x01E14B30 LDR W9, [X19 + 0x18]
	0x01E14B34 LDR W8, [X8 + 0x18]
	0x01E14B38 CMP W9, W8
	0x01E14B3C B.GE 0x1E14BC4
	0x01E14B40 CBZ X21, 0x1E154B8
	0x01E14B44 ADRP X20, 0x22DF000
	0x01E14B48 LDR X20, [X20 + 0x598]
	0x01E14B4C LDR X19, [X21 + 0x18]
	0x01E14B50 LDR X0, [X20]
	0x01E14B54 LDR W8, [X0 + 0xE0]
	0x01E14B58 CBNZ W8, 0x1E14B60
	0x01E14B5C BL 0x1C16DFC
	0x01E14B60 MOV X0, X19
	0x01E14B64 MOV X1, X31
	0x01E14B68 MOV X2, X31
	0x01E14B6C BL 0x3C354F8
	0x01E14B70 TBZ X0, 0x0, 0x1E14B94
	0x01E14B74 LDR X0, [X20]
	0x01E14B78 LDR X19, [X21 + 0x18]
	0x01E14B7C LDR W8, [X0 + 0xE0]
	0x01E14B80 CBNZ W8, 0x1E14B88
	0x01E14B84 BL 0x1C16DFC
	0x01E14B88 MOV X0, X19
	0x01E14B8C MOV X1, X31
	0x01E14B90 BL 0x3C39564
	0x01E14B94 LDR X0, [X26]
	0x01E14B98 LDR W8, [X0 + 0xE0]
	0x01E14B9C CBNZ W8, 0x1E14BA4
	0x01E14BA0 BL 0x1C16DFC
	0x01E14BA4 ADRP X8, 0x22E6000
	0x01E14BA8 LDR X8, [X8 + 0x2D8]
	0x01E14BAC LDR X3, [X25]
	0x01E14BB0 LDR X4, [X24]
	0x01E14BB4 MOVZ W0, 0x20
	0x01E14BB8 LDR X1, [X8]
	0x01E14BBC MOVZ W5, 0x52
	0x01E14BC0 B 0x1E14A64
	0x01E14BC4 LDR X8, [X27 + 0x10]
	0x01E14BC8 CBZ X8, 0x1E154B8
	0x01E14BCC LDR X0, [X8 + 0x30]
	0x01E14BD0 CBZ X0, 0x1E154B8
	0x01E14BD4 ADRP X8, 0x22E6000
	0x01E14BD8 LDR X1, [X31 + 0x20]
	0x01E14BDC LDR X8, [X8 + 0x260]
	0x01E14BE0 LDR X2, [X8]
	0x01E14BE4 BL 0x2F651A0
	0x01E14BE8 LDR X8, [X27 + 0x10]
	0x01E14BEC CBZ X8, 0x1E154B8
	0x01E14BF0 LDR X8, [X8 + 0x28]
	0x01E14BF4 CBZ X8, 0x1E154B8
	0x01E14BF8 LDR X0, [X8 + 0x10]
	0x01E14BFC CBZ X0, 0x1E154B8
	0x01E14C00 ADRP X8, 0x22E6000
	0x01E14C04 LDR X1, [X27 + 0x20]
	0x01E14C08 LDR X8, [X8 + 0x228]
	0x01E14C0C MOV X2, X21
	0x01E14C10 LDR X3, [X8]
	0x01E14C14 BL 0x2AA5098
	0x01E14C18 LDR X0, [X27 + 0x30]
	0x01E14C1C CBZ X0, 0x1E154B8
	0x01E14C20 LDR X1, [X27 + 0x20]
	0x01E14C24 CBZ X1, 0x1E14C5C
	0x01E14C28 ADRP X8, 0x22E6000
	0x01E14C2C LDR X9, [X1]
	0x01E14C30 LDR X8, [X8 + 0x208]
	0x01E14C34 LDRB W11, [X9 + 0x130]
	0x01E14C38 LDR X8, [X8]
	0x01E14C3C LDRB W10, [X8 + 0x130]
	0x01E14C40 CMP W11, W10
	0x01E14C44 B.CC 0x1E154BC
	0x01E14C48 LDR X9, [X9 + 0xC8]
	0x01E14C4C ADD X9, X9, X10, 0x3, LSL
	0x01E14C50 LDUR X9, [X9 - 0x8]
	0x01E14C54 CMP X9, X8
	0x01E14C58 B.NE 0x1E154BC
	0x01E14C5C MOV X2, X31
	0x01E14C60 BL 0x1E08F4C
	0x01E14C64 LDR X8, [X27 + 0x30]
	0x01E14C68 CBZ X8, 0x1E154B8
	0x01E14C6C LDRB W8, [X8 + 0x28]
	0x01E14C70 CBZ W8, 0x1E14D68
	0x01E14C74 CBZ X22, 0x1E154B8
	0x01E14C78 CBZ X0, 0x1E14CA4
	0x01E14C7C ADRP X8, 0x22E5000
	0x01E14C80 LDR X8, [X8 + 0xC20]
	0x01E14C84 LDR X9, [X0]
	0x01E14C88 LDR X8, [X8]
	0x01E14C8C LDRB W11, [X9 + 0x130]
	0x01E14C90 LDRB W10, [X8 + 0x130]
	0x01E14C94 CMP W11, W10
	0x01E14C98 B.CS 0x1E14CAC
	0x01E14C9C MOV X8, X31
	0x01E14CA0 B 0x1E14CC0
	0x01E14CA4 STR X31, [X22 + 0x10]
	0x01E14CA8 B 0x1E14D68
	0x01E14CAC LDR X9, [X9 + 0xC8]
	0x01E14CB0 ADD X9, X9, X10, 0x3, LSL
	0x01E14CB4 LDUR X9, [X9 - 0x8]
	0x01E14CB8 CMP X9, X8
	0x01E14CBC CSEL X8, X0, X31, EQ
	0x01E14CC0 STR X8, [X22 + 0x10]
	0x01E14CC4 CBZ X8, 0x1E14D68
	0x01E14CC8 LDR X8, [X27 + 0x10]
	0x01E14CCC CBZ X8, 0x1E154B8
	0x01E14CD0 LDR X8, [X8 + 0x28]
	0x01E14CD4 CBZ X8, 0x1E154B8
	0x01E14CD8 LDR X23, [X8 + 0x18]
	0x01E14CDC ADRP X8, 0x22E6000
	0x01E14CE0 LDR X8, [X8 + 0x258]
	0x01E14CE4 LDR X0, [X8]
	0x01E14CE8 BL 0x1C16F10
	0x01E14CEC ADRP X8, 0x22E6000
	0x01E14CF0 LDR X8, [X8 + 0x2A0]
	0x01E14CF4 MOV X1, X22
	0x01E14CF8 MOV X3, X31
	0x01E14CFC MOV X24, X0
	0x01E14D00 LDR X2, [X8]
	0x01E14D04 BL 0x2D2F428
	0x01E14D08 ADRP X8, 0x22E6000
	0x01E14D0C LDR X8, [X8 + 0x238]
	0x01E14D10 MOV X0, X23
	0x01E14D14 MOV X1, X24
	0x01E14D18 LDR X2, [X8]
	0x01E14D1C BL 0x21C4138
	0x01E14D20 CBZ X0, 0x1E15410
	0x01E14D24 ADRP X9, 0x22E6000
	0x01E14D28 LDR X9, [X9 + 0x270]
	0x01E14D2C LDR W10, [X0 + 0x1C]
	0x01E14D30 LDR X8, [X0 + 0x10]
	0x01E14D34 LDR X9, [X9]
	0x01E14D38 ADD W10, W10, 0x1
	0x01E14D3C STR W10, [X0 + 0x1C]
	0x01E14D40 CBZ X8, 0x1E154B8
	0x01E14D44 LDRSW X10, [X0 + 0x18]
	0x01E14D48 LDR W11, [X8 + 0x18]
	0x01E14D4C CMP W10, W11
	0x01E14D50 B.CS 0x1E15490
	0x01E14D54 ADD W9, W10, 0x1
	0x01E14D58 ADD X8, X8, X10, 0x3, LSL
	0x01E14D5C STR W9, [X0 + 0x18]
	0x01E14D60 STR X21, [X8 + 0x20]
	0x01E14D64 B 0x1E14E60
	0x01E14D68 LDR X8, [X27 + 0x10]
	0x01E14D6C CBZ X8, 0x1E154B8
	0x01E14D70 LDR X8, [X8 + 0x28]
	0x01E14D74 CBZ X8, 0x1E154B8
	0x01E14D78 LDR X22, [X8 + 0x18]
	0x01E14D7C ADRP X8, 0x22E6000
	0x01E14D80 LDR X8, [X8 + 0x288]
	0x01E14D84 LDR X0, [X8]
	0x01E14D88 BL 0x1C16F10
	0x01E14D8C ADRP X8, 0x22E6000
	0x01E14D90 LDR X8, [X8 + 0x280]
	0x01E14D94 MOV X23, X0
	0x01E14D98 LDR X1, [X8]
	0x01E14D9C BL 0x301B7C4
	0x01E14DA0 CBZ X23, 0x1E154B8

ISIL:
	001 Subtract X31, X31, 384
	002 Move [X31+256], D11
	003 Move [X31+264], D10
	004 Move [X31+272], D9
	005 Move [X31+280], D8
	006 Move [X31+288], X29
	007 Move [X31+296], X30
	008 Move [X31+304], X28
	009 Move [X31+312], X27
	010 Move [X31+320], X26
	011 Move [X31+328], X25
	012 Move [X31+336], X24
	013 Move [X31+344], X23
	014 Move [X31+352], X22
	015 Move [X31+360], X21
	016 Move [X31+368], X20
	017 Move [X31+376], X19
	018 Move X19, 0x25C6000
	019 Move W8, [X19+3571]
	020 Move [X31+24], X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {189}
	025 Move X0, 0x22E8000
	026 Move X0, [X0+80]
	027 Call 0x1C17CF4
	028 Move X0, 0x22E8000
	029 Move X0, [X0+88]
	030 Call 0x1C17CF4
	031 Move X0, 0x22E8000
	032 Move X0, [X0+96]
	033 Call 0x1C17CF4
	034 Move X0, 0x22E7000
	035 Move X0, [X0+3944]
	036 Call 0x1C17CF4
	037 Move X0, 0x22E8000
	038 Move X0, [X0+104]
	039 Call 0x1C17CF4
	040 Move X0, 0x22E7000
	041 Move X0, [X0+3960]
	042 Call 0x1C17CF4
	043 Move X0, 0x22E8000
	044 Move X0, [X0+112]
	045 Call 0x1C17CF4
	046 Move X0, 0x22E8000
	047 Move X0, [X0+120]
	048 Call 0x1C17CF4
	049 Move X0, 0x22E8000
	050 Move X0, [X0+128]
	051 Call 0x1C17CF4
	052 Move X0, 0x22E8000
	053 Move X0, [X0+136]
	054 Call 0x1C17CF4
	055 Move X0, 0x22E4000
	056 Move X0, [X0+2832]
	057 Call 0x1C17CF4
	058 Move X0, 0x22E7000
	059 Move X0, [X0+3968]
	060 Call 0x1C17CF4
	061 Move X0, 0x22E8000
	062 Move X0, [X0+144]
	063 Call 0x1C17CF4
	064 Move X0, 0x22E8000
	065 Move X0, [X0+152]
	066 Call 0x1C17CF4
	067 Move X0, 0x22E4000
	068 Move X0, [X0+2840]
	069 Call 0x1C17CF4
	070 Move X0, 0x22E8000
	071 Move X0, [X0+160]
	072 Call 0x1C17CF4
	073 Move X0, 0x22E8000
	074 Move X0, [X0+168]
	075 Call 0x1C17CF4
	076 Move X0, 0x22E8000
	077 Move X0, [X0+176]
	078 Call 0x1C17CF4
	079 Move X0, 0x22E4000
	080 Move X0, [X0+2848]
	081 Call 0x1C17CF4
	082 Move X0, 0x22E8000
	083 Move X0, [X0+184]
	084 Call 0x1C17CF4
	085 Move X0, 0x22E8000
	086 Move X0, [X0+192]
	087 Call 0x1C17CF4
	088 Move X0, 0x22E7000
	089 Move X0, [X0+3976]
	090 Call 0x1C17CF4
	091 Move X0, 0x22E8000
	092 Move X0, [X0+200]
	093 Call 0x1C17CF4
	094 Move X0, 0x22E8000
	095 Move X0, [X0+208]
	096 Call 0x1C17CF4
	097 Move X0, 0x22E8000
	098 Move X0, [X0+216]
	099 Call 0x1C17CF4
	100 Move X0, 0x22E8000
	101 Move X0, [X0+224]
	102 Call 0x1C17CF4
	103 Move X0, 0x22E1000
	104 Move X0, [X0+2648]
	105 Call 0x1C17CF4
	106 Move X0, 0x22E8000
	107 Move X0, [X0+232]
	108 Call 0x1C17CF4
	109 Move X0, 0x22E8000
	110 Move X0, [X0+240]
	111 Call 0x1C17CF4
	112 Move X0, 0x22E8000
	113 Move X0, [X0+248]
	114 Call 0x1C17CF4
	115 Move X0, 0x22E7000
	116 Move X0, [X0+3752]
	117 Call 0x1C17CF4
	118 Move X0, 0x22E1000
	119 Move X0, [X0+1880]
	120 Call 0x1C17CF4
	121 Move X0, 0x22E8000
	122 Move X0, [X0+256]
	123 Call 0x1C17CF4
	124 Move X0, 0x22E7000
	125 Move X0, [X0+3168]
	126 Call 0x1C17CF4
	127 Move X0, 0x22E8000
	128 Move X0, [X0+264]
	129 Call 0x1C17CF4
	130 Move X0, 0x22E7000
	131 Move X0, [X0+4000]
	132 Call 0x1C17CF4
	133 Move X0, 0x22E8000
	134 Move X0, [X0+272]
	135 Call 0x1C17CF4
	136 Move X0, 0x22E8000
	137 Move X0, [X0+280]
	138 Call 0x1C17CF4
	139 Move X0, 0x22E8000
	140 Move X0, [X0+288]
	141 Call 0x1C17CF4
	142 Move X0, 0x22E8000
	143 Move X0, [X0+296]
	144 Call 0x1C17CF4
	145 Move X0, 0x22E4000
	146 Move X0, [X0+2856]
	147 Call 0x1C17CF4
	148 Move X0, 0x22E7000
	149 Move X0, [X0+3160]
	150 Call 0x1C17CF4
	151 Move X0, 0x22E8000
	152 Move X0, [X0+304]
	153 Call 0x1C17CF4
	154 Move X0, 0x22E8000
	155 Move X0, [X0+312]
	156 Call 0x1C17CF4
	157 Move X0, 0x22E5000
	158 Move X0, [X0+2048]
	159 Call 0x1C17CF4
	160 Move X0, 0x22E8000
	161 Move X0, [X0+320]
	162 Call 0x1C17CF4
	163 Move X0, 0x22E7000
	164 Move X0, [X0+3152]
	165 Call 0x1C17CF4
	166 Move X0, 0x22E7000
	167 Move X0, [X0+328]
	168 Call 0x1C17CF4
	169 Move X0, 0x22E7000
	170 Move X0, [X0+336]
	171 Call 0x1C17CF4
	172 Move X0, 0x22E7000
	173 Move X0, [X0+344]
	174 Call 0x1C17CF4
	175 Move X0, 0x22E7000
	176 Move X0, [X0+352]
	177 Call 0x1C17CF4
	178 Move X0, 0x22E7000
	179 Move X0, [X0+360]
	180 Call 0x1C17CF4
	181 Move X0, 0x22E7000
	182 Move X0, [X0+368]
	183 Call 0x1C17CF4
	184 Move X0, 0x22E7000
	185 Move X0, [X0+376]
	186 Call 0x1C17CF4
	187 Move W8, 1
	188 Move [X19+3571], W8
	189 Move X8, [X31+24]
	190 NotImplemented "Instruction MOVI not yet implemented."
	191 Move [X31+224], X31
	192 Move [X31+232], X31
	193 Move [X31+240], X31
	194 Move [X31+192], X31
	195 Move [X31+200], X31
	196 Move [X31+208], X31
	197 Move [X31+160], X31
	198 Move [X31+168], X31
	199 Move [X31+176], X31
	200 Move [X31+64], X31
	201 Move [X31+72], X31
	202 Move [X31+128], V0
	203 Move [X31+136], V0
	204 Move [X31+96], V0
	205 Move [X31+104], V0
	206 Move [X31+80], X31
	207 Move X0, [X8+24]
	208 Compare X0, 0
	209 JumpIfEqual {966}
	210 Move X8, 0x22E7000
	211 Move X8, [X8+240]
	212 Move W1, 1
	213 Move X2, [X8]
	214 Call 0x21E870C, X0, X1
	215 Compare X0, 0
	216 JumpIfEqual {966}
	217 Move X8, 0x22E7000
	218 Move X8, [X8+272]
	219 Move X29, 0x22E3000
	220 Move X20, 0x22E6000
	221 Move X29, [X29+2840]
	222 Move X20, [X20+3168]
	223 Move X1, [X8]
	224 Move X19, 0x22E6000
	225 Move X19, [X19+3968]
	226 Add X8, X31, 32
	227 Call List`1<Object>.GetEnumerator, X0
	228 Move V0, [X31+2]
	229 Move X8, [X31+48]
	230 Move [X31+14], V0
	231 Move [X31+240], X8
	232 Move X8, 0x22E7000
	233 Move X8, [X8+152]
	234 Move X1, [X8]
	235 Add X0, X31, 224
	236 Call Enumerator<Object>.MoveNext, X0
	237 Move TEMP, X0
	238 And TEMP, TEMP, 1
	239 Compare TEMP, 1
	240 JumpIfNotEqual {890}
	241 Move X21, [X31+240]
	242 Compare X21, 0
	243 JumpIfEqual {951}
	244 Move W23, [X21+44]
	245 Compare W23, 0
	246 JumpIfEqual {232}
	247 Move X8, 0x22E7000
	248 Move X8, [X8+320]
	249 Move X0, [X8]
	250 Call 0x1C17F10
	251 Move X8, 0x22E7000
	252 Move X8, [X8+312]
	253 Move X22, X0
	254 Move X1, [X8]
	255 Call List`1<ValueTuple`2<Int32, Object>>..ctor, X0
	256 Move X0, [X21+32]
	257 Compare X0, 0
	258 JumpIfEqual {955}
	259 Move X9, 0x22E7000
	260 Move X8, [X0]
	261 Move X9, [X9+248]
	262 Move W10, [X8+304]
	263 Move X1, [X9]
	264 Move W9, [X1+304]
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Move X8, [X8+200]
	267 Add X8, X8, X9
	268 NotImplemented "Instruction LDUR not yet implemented."
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Move X8, 0x22E7000
	271 Move X8, [X8+232]
	272 Move X2, [X8]
	273 Move X1, X21
	274 Call 0x21E8478, X0, X1
	275 Compare X0, 0
	276 JumpIfEqual {954}
	277 Move [X31+20], W23
	278 Move X8, 0x22E7000
	279 Move X8, [X8+280]
	280 Move X1, [X8]
	281 Add X8, X31, 32
	282 Call List`1<Object>.GetEnumerator, X0
	283 Move V0, [X31+2]
	284 Move X8, [X31+48]
	285 Move [X31+12], V0
	286 Move [X31+208], X8
	287 Move X8, 0x22E7000
	288 Move X8, [X8+168]
	289 Move X1, [X8]
	290 Add X0, X31, 192
	291 Call Enumerator<Object>.MoveNext, X0
	292 Move TEMP, X0
	293 And TEMP, TEMP, 1
	294 Compare TEMP, 1
	295 JumpIfNotEqual {436}
	296 Move X23, [X31+208]
	297 Compare X23, 0
	298 JumpIfEqual {843}
	299 Move X0, X23
	300 Move X1, X21
	301 Move X2, X31
	302 Call LootPlacementConnection.GetOtherNode, X0, X1
	303 Move X8, 0x22E6000
	304 Move X8, [X8+3752]
	305 Move X1, [X8]
	306 Call 0x1C17E00
	307 Move X24, X0
	308 Compare X0, 0
	309 JumpIfEqual {287}
	310 Move X8, [X31+24]
	311 Move X8, [X8+40]
	312 Compare X8, 0
	313 JumpIfEqual {855}
	314 Move X0, [X8+16]
	315 Compare X0, 0
	316 JumpIfEqual {854}
	317 Move X8, 0x22E7000
	318 Move X8, [X8+80]
	319 Move X2, [X8]
	320 Move X1, X24
	321 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	322 Move TEMP, X0
	323 And TEMP, TEMP, 1
	324 Compare TEMP, 1
	325 JumpIfNotEqual {287}
	326 Move X8, [X31+24]
	327 Move X8, [X8+40]
	328 Compare X8, 0
	329 JumpIfEqual {858}
	330 Move X0, [X8+16]
	331 Compare X0, 0
	332 JumpIfEqual {857}
	333 Move X8, 0x22E7000
	334 Move X8, [X8+88]
	335 Move X2, [X8]
	336 Move X1, X24
	337 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	338 Compare X0, 0
	339 JumpIfEqual {856}
	340 Move X24, [X0+48]
	341 Compare X24, 0
	342 JumpIfEqual {859}
	343 Move W8, [X24+24]
	344 Compare W8, 0
	345 JumpIfEqual {287}
	346 Move X8, 0x22E7000
	347 Move X8, [X8+352]
	348 Move X8, [X8]
	349 Move W9, [X8+224]
	350 Compare W9, 0
	351 JumpIfNotEqual {357}
	352 Move X0, X8
	353 Call 0x1C17DFC
	354 Move X8, 0x22E7000
	355 Move X8, [X8+352]
	356 Move X8, [X8]
	357 Move X9, [X8+184]
	358 Move X25, [X9+8]
	359 Compare X25, 0
	360 JumpIfNotEqual {387}
	361 Move W9, [X8+224]
	362 Compare W9, 0
	363 JumpIfNotEqual {369}
	364 Move X0, X8
	365 Call 0x1C17DFC
	366 Move X8, 0x22E7000
	367 Move X8, [X8+352]
	368 Move X8, [X8]
	369 Move X8, [X8+184]
	370 Move X26, [X8]
	371 Move X8, 0x22E7000
	372 Move X8, [X8+216]
	373 Move X0, [X8]
	374 Call 0x1C17F10
	375 Move X8, 0x22E7000
	376 Move X8, [X8+344]
	377 Move X25, X0
	378 Move X2, [X8]
	379 Move X1, X26
	380 Move X3, X31
	381 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	382 Move X8, 0x22E7000
	383 Move X8, [X8+352]
	384 Move X8, [X8]
	385 Move X8, [X8+184]
	386 Move [X8+8], X25
	387 Move X8, 0x22E7000
	388 Move X8, [X8+104]
	389 Move X2, [X8]
	390 Move X0, X24
	391 Move X1, X25
	392 Call Enumerable.Where, X0, X1
	393 Move X8, 0x22E6000
	394 Move X8, [X8+3944]
	395 Move X1, [X8]
	396 Call Enumerable.ToList, X0
	397 Move X2, X0
	398 Compare X0, 0
	399 JumpIfEqual {860}
	400 Move W8, [X2+24]
	401 NotImplemented "Instruction CMP not yet implemented."
	402 Move X8, 0x22E7000
	403 Move W1, [X23+40]
	404 Move X8, [X8+360]
	405 Move [X31+32], X31
	406 Move [X31+40], X31
	407 Move X3, [X8]
	408 Add X0, X31, 32
	409 Call ValueTuple`2<Int32, Object>..ctor, X0, X1, X2
	410 Compare X22, 0
	411 JumpIfEqual {861}
	412 Move X9, 0x22E7000
	413 Move X1, [X31+32]
	414 Move X2, [X31+40]
	415 Move W10, [X22+28]
	416 Move X8, [X22+16]
	417 Move X9, [X9+264]
	418 Add W10, W10, 1
	419 Move X9, [X9]
	420 Move [X22+28], W10
	421 Compare X8, 0
	422 JumpIfEqual {862}
	423 NotImplemented "Instruction LDRSW not yet implemented."
	424 Move W11, [X8+24]
	425 NotImplemented "Instruction CMP not yet implemented."
	426 Add W9, W10, 1
	427 Add X8, X8, X10
	428 Move [X22+24], W9
	429 Move [X8+32], X1
	430 Move [X8+40], X2
	431 Move X8, [X9+32]
	432 Move X8, [X8+192]
	433 Move X3, [X8+112]
	434 Move X0, X22
	435 Call List`1<ValueTuple`2<Int32, Object>>.AddWithResize, X0, X1
	436 Move X23, X31
	437 Move W24, 7
	438 Move X8, 0x22E7000
	439 Move X8, [X8+120]
	440 Move X1, [X8]
	441 Add X0, X31, 192
	442 Call Enumerator<Object>.Dispose, X0
	443 Compare X23, 0
	444 JumpIfNotEqual {952}
	445 NotImplemented "Instruction CMP not yet implemented."
	446 Compare W24, 0
	447 JumpIfNotEqual {890}
	448 Move X8, 0x22E7000
	449 Move X8, [X8+352]
	450 Move X0, [X8]
	451 Move W8, [X0+224]
	452 Compare W8, 0
	453 JumpIfNotEqual {458}
	454 Call 0x1C17DFC
	455 Move X8, 0x22E7000
	456 Move X8, [X8+352]
	457 Move X0, [X8]
	458 Move X8, [X0+184]
	459 Move X23, [X8+16]
	460 Compare X23, 0
	461 JumpIfNotEqual {487}
	462 Move W8, [X0+224]
	463 Compare W8, 0
	464 JumpIfNotEqual {469}
	465 Call 0x1C17DFC
	466 Move X8, 0x22E7000
	467 Move X8, [X8+352]
	468 Move X0, [X8]
	469 Move X8, [X0+184]
	470 Move X24, [X8]
	471 Move X8, 0x22E7000
	472 Move X8, [X8+208]
	473 Move X0, [X8]
	474 Call 0x1C17F10
	475 Move X8, 0x22E7000
	476 Move X8, [X8+336]
	477 Move X23, X0
	478 Move X2, [X8]
	479 Move X1, X24
	480 Move X3, X31
	481 Call Func`2<ValueTuple`2<Int32, Object>, Int32>..ctor, X0, X1, X2
	482 Move X8, 0x22E7000
	483 Move X8, [X8+352]
	484 Move X8, [X8]
	485 Move X8, [X8+184]
	486 Move [X8+16], X23
	487 Move X8, 0x22E7000
	488 Move X8, [X8+96]
	489 Move X2, [X8]
	490 Move X0, X22
	491 Move X1, X23
	492 Call Enumerable.Sum, X0, X1
	493 Move X8, 0x22E6000
	494 Move X8, [X8+3152]
	495 Move W23, W0
	496 Move X0, [X8]
	497 Call 0x1C17F10
	498 Move X8, 0x22E6000
	499 Move X8, [X8+3160]
	500 Move X24, X0
	501 Move X1, [X8]
	502 Call List`1<WeightedItem>..ctor, X0
	503 Move X0, [X21+48]
	504 Compare X0, 0
	505 JumpIfEqual {956}
	506 Move X8, 0x22E7000
	507 Move X8, [X8+288]
	508 Move X1, [X8]
	509 Add X8, X31, 32
	510 Call List`1<Object>.GetEnumerator, X0
	511 Move V0, [X31+2]
	512 Move X8, [X31+48]
	513 Move S8, W31
	514 Move [X31+10], V0
	515 Move [X31+176], X8
	516 Move X8, 0x22E7000
	517 Move X8, [X8+160]
	518 Move X1, [X8]
	519 Add X0, X31, 160
	520 Call Enumerator<Object>.MoveNext, X0
	521 Move TEMP, X0
	522 And TEMP, TEMP, 1
	523 Compare TEMP, 1
	524 JumpIfNotEqual {600}
	525 Move X8, [X31+176]
	526 Compare X8, 0
	527 JumpIfEqual {846}
	528 Move X0, [X8+24]
	529 Compare X0, 0
	530 JumpIfEqual {847}
	531 Move X8, 0x22E3000
	532 Move X8, [X8+2856]
	533 Move X1, [X8]
	534 Add X8, X31, 32
	535 Call List`1<WeightedItem>.GetEnumerator, X0
	536 Move V0, [X31+32]
	537 Move V1, [X31+48]
	538 Move V9, V8
	539 Move [X31+128], V0
	540 Move [X31+136], V1
	541 Move X1, [X29]
	542 Add X0, X31, 128
	543 Call Enumerator<WeightedItem>.MoveNext, X0
	544 Move TEMP, X0
	545 And TEMP, TEMP, 1
	546 Compare TEMP, 1
	547 JumpIfNotEqual {575}
	548 Compare X24, 0
	549 JumpIfEqual {588}
	550 Move W10, [X24+28]
	551 Move X1, [X31+144]
	552 Move X25, [X31+152]
	553 Move X8, [X24+16]
	554 Move X9, [X20]
	555 Add W10, W10, 1
	556 Move [X24+28], W10
	557 Compare X8, 0
	558 JumpIfEqual {589}
	559 NotImplemented "Instruction LDRSW not yet implemented."
	560 Move W11, [X8+24]
	561 NotImplemented "Instruction CMP not yet implemented."
	562 Add W9, W10, 1
	563 Add X8, X8, X10
	564 Move [X24+24], W9
	565 Move [X8+32], X1
	566 Move [X8+40], X25
	567 Move X8, [X9+32]
	568 Move X8, [X8+192]
	569 Move X3, [X8+112]
	570 Move X0, X24
	571 Move X2, X25
	572 Call List`1<WeightedItem>.AddWithResize, X0, X1
	573 Move S0, W25
	574 Add S9, S9, S0
	575 Move X27, X31
	576 Move W25, 9
	577 Move X8, 0x22E3000
	578 Move X8, [X8+2832]
	579 Move V8, V9
	580 Move X1, [X8]
	581 Add X0, X31, 128
	582 Call Enumerator<WeightedItem>.Dispose, X0
	583 Compare X27, 0
	584 JumpIfNotEqual {844}
	585 NotImplemented "Instruction CMP not yet implemented."
	586 Compare W25, 0
	587 JumpIfEqual {516}
	588 Call 0x1C17F20
	589 Move V8, V9
	590 Call 0x1C17F20
	591 Move X25, X0
	592 Move X25, X0
	593 Move V9, V8
	594 NotImplemented "Instruction CMP not yet implemented."
	595 Move X0, X25
	596 Call 0x3EB2AD0
	597 Move X27, [X0]
	598 Call 0x3EB2AE0
	599 Move W25, W31
	600 Move X27, X31
	601 Move W25, 13
	602 Move X27, X31
	603 Move X8, 0x22E7000
	604 Move X8, [X8+136]
	605 Move X1, [X8]
	606 Add X0, X31, 160
	607 Call Enumerator<Object>.Dispose, X0
	608 Compare X27, 0
	609 JumpIfNotEqual {957}
	610 NotImplemented "Instruction CMP not yet implemented."
	611 Compare W25, 0
	612 JumpIfNotEqual {890}
	613 Move X8, 0x22E7000
	614 Move X8, [X8+328]
	615 Move X0, [X8]
	616 Call 0x1C17F10
	617 Move X8, 0x22E7000
	618 Move X8, [X8+304]
	619 Move X27, X0
	620 Move X1, [X8]
	621 Call List`1<Object>..ctor, X0
	622 Move X8, 0x25C5000
	623 Move W8, [X8+1923]
	624 Compare W8, 0
	625 JumpIfNotEqual {632}
	626 Move X0, 0x22E0000
	627 Move X0, [X0+1440]
	628 Call 0x1C17CF4
	629 Move W8, 1
	630 Move X9, 0x25C5000
	631 Move [X9+1923], W8
	632 Compare X22, 0
	633 JumpIfEqual {959}
	634 Move X8, 0x22E0000
	635 Move X8, [X8+1440]
	636 Move X8, [X8]
	637 Move X8, [X8+184]
	638 Move S11, [X8]
	639 Move S10, [X8+4]
	640 Move V9, [X8+8]
	641 Move X8, 0x22E7000
	642 Move X8, [X8+296]
	643 Move X1, [X8]
	644 Add X8, X31, 32
	645 Move X0, X22
	646 Call List`1<ValueTuple`2<Int32, Object>>.GetEnumerator, X0
	647 Move V0, [X31+32]
	648 Move V1, [X31+48]
	649 Move W26, W31
	650 Move [X31+96], V0
	651 Move [X31+104], V1
	652 Move X8, 0x22E7000
	653 Move X8, [X8+144]
	654 Move X1, [X8]
	655 Add X0, X31, 96
	656 Call Enumerator<ValueTuple`2<Int32, Object>>.MoveNext, X0
	657 Move TEMP, X0
	658 And TEMP, TEMP, 1
	659 Compare TEMP, 1
	660 JumpIfNotEqual {746}
	661 Move X8, 0x22E7000
	662 Move W28, [X31+112]
	663 Move X25, [X31+120]
	664 Move X8, [X8+368]
	665 Move X0, [X8]
	666 Call 0x1C17F10
	667 Move X22, X0
	668 Move X1, X31
	669 Call WeightedConnectionItemPoints..ctor, X0
	670 Compare X22, 0
	671 JumpIfEqual {848}
	672 Move [X22+16], W28
	673 Move [X22+24], X25
	674 Compare X25, 0
	675 JumpIfEqual {849}
	676 Move X8, 0x22E6000
	677 Move X8, [X8+4000]
	678 Move X1, [X8]
	679 Add X8, X31, 32
	680 Move X0, X25
	681 Call List`1<Object>.GetEnumerator, X0
	682 Move V0, [X31+2]
	683 Move X8, [X31+48]
	684 Move [X31+4], V0
	685 Move [X31+80], X8
	686 Move X1, [X19]
	687 Add X0, X31, 64
	688 Call Enumerator<Object>.MoveNext, X0
	689 Move TEMP, X0
	690 And TEMP, TEMP, 1
	691 Compare TEMP, 1
	692 JumpIfNotEqual {702}
	693 Move X0, [X31+80]
	694 Compare X0, 0
	695 JumpIfEqual {738}
	696 Move X1, X31
	697 Call ItemPoint.GetCenterPosition, X0
	698 Add S11, S11, S0
	699 Add S10, S10, S1
	700 Add S9, S9, S2
	701 Add W26, W26, 1
	702 Move X28, X31
	703 Move W25, 18
	704 Move X8, 0x22E6000
	705 Move X8, [X8+3960]
	706 Move X1, [X8]
	707 Add X0, X31, 64
	708 Call Enumerator<Object>.Dispose, X0
	709 Compare X28, 0
	710 JumpIfNotEqual {850}
	711 Compare W25, 0
	712 JumpIfEqual {714}
	713 NotImplemented "Instruction CMP not yet implemented."
	714 Compare X27, 0
	715 JumpIfEqual {853}
	716 Move X9, 0x22E7000
	717 Move W10, [X27+28]
	718 Move X8, [X27+16]
	719 Move X9, [X9+256]
	720 Add W10, W10, 1
	721 Move X9, [X9]
	722 Move [X27+28], W10
	723 Compare X8, 0
	724 JumpIfEqual {852}
	725 NotImplemented "Instruction LDRSW not yet implemented."
	726 Move W11, [X8+24]
	727 NotImplemented "Instruction CMP not yet implemented."
	728 Add W9, W10, 1
	729 Add X8, X8, X10
	730 Move [X27+24], W9
	731 Move [X8+32], X22
	732 Move X8, [X9+32]
	733 Move X8, [X8+192]
	734 Move X2, [X8+112]
	735 Move X0, X27
	736 Move X1, X22
	737 Call List`1<Object>.AddWithResize, X0, X1
	738 Call 0x1C17F20
	739 Move X25, X0
	740 NotImplemented "Instruction CMP not yet implemented."
	741 Move X0, X25
	742 Call 0x3EB2AD0
	743 Move X28, [X0]
	744 Call 0x3EB2AE0
	745 Move W25, W31
	746 Move X22, X31
	747 Move W25, 19
	748 Move X22, X31
	749 Move X8, 0x22E7000
	750 Move X8, [X8+112]
	751 Move X1, [X8]
	752 Add X0, X31, 96
	753 Call Enumerator<ValueTuple`2<Int32, Object>>.Dispose, X0
	754 Compare X22, 0
	755 JumpIfNotEqual {960}
	756 NotImplemented "Instruction CMP not yet implemented."
	757 Compare W25, 0
	758 JumpIfNotEqual {890}
	759 Move X0, X21
	760 Move X1, X31
	761 Call Object.get_name, X0
	762 Move X9, 0x22E0000
	763 Move W8, [X21+44]
	764 Move X9, [X9+1880]
	765 Move X22, X0
	766 Move [X31+32], W8
	767 Move X0, [X9]
	768 Add X1, X31, 32
	769 Call 0x1C17E04
	770 Move X8, 0x22E7000
	771 Move X8, [X8+376]
	772 Move X2, X0
	773 Move X0, [X8]
	774 Move X1, X22
	775 Move X3, X31
	776 Call String.Format, X0, X1, X2
	777 Move X8, 0x22E0000
	778 Move X8, [X8+2648]
	779 Move X22, X0
	780 Move X0, [X8]
	781 Call 0x1C17F10
	782 Move X21, X0
	783 Move X1, X22
	784 Move X2, X31
	785 Call GameObject..ctor, X0, X1
	786 Compare X21, 0
	787 JumpIfEqual {963}
	788 Move X0, X21
	789 Move X1, X31
	790 Call GameObject.get_transform, X0
	791 Compare X0, 0
	792 JumpIfEqual {964}
	793 Move X8, [X31+24]
	794 Move X1, [X8+72]
	795 Move X2, X31
	796 Call Transform.set_parent, X0, X1
	797 NotImplemented "Instruction CMP not yet implemented."
	798 Move X0, X21
	799 Move X1, X31
	800 Call GameObject.get_transform, X0
	801 Compare X0, 0
	802 JumpIfEqual {965}
	803 NotImplemented "Instruction SCVTF not yet implemented."
	804 NotImplemented "Instruction FDIV not yet implemented."
	805 NotImplemented "Instruction FDIV not yet implemented."
	806 NotImplemented "Instruction FDIV not yet implemented."
	807 Move X1, X31
	808 Call Transform.set_position, X0, X1
	809 Move X8, 0x22E7000
	810 Move X8, [X8+224]
	811 Move X1, [X8]
	812 Move X0, X21
	813 Call 0x21E61FC, X0
	814 Compare X0, 0
	815 JumpIfEqual {962}
	816 Move W8, [X31+20]
	817 Move [X0+40], X27
	818 Move [X0+48], W23
	819 Move [X0+56], X24
	820 NotImplemented "Instruction SCVTF not yet implemented."
	821 Move [X0+32], S0
	822 Move [X0+64], S8
	823 Move X26, X1
	824 Move X27, X31
	825 Move X8, 0x22E3000
	826 Move X8, [X8+2832]
	827 Move X1, [X8]
	828 Add X0, X31, 128
	829 Call Enumerator<WeightedItem>.Dispose, X0
	830 Move X1, X26
	831 Compare X27, 0
	832 JumpIfEqual {869}
	833 Move X22, X1
	834 Move X28, X31
	835 Move X8, 0x22E6000
	836 Move X8, [X8+3960]
	837 Move X1, [X8]
	838 Add X0, X31, 64
	839 Call Enumerator<Object>.Dispose, X0
	840 Move X1, X22
	841 Compare X28, 0
	842 JumpIfEqual {877}
	843 Call 0x1C17F20
	844 Move X0, X27
	845 Call 0x1C17F18
	846 Call 0x1C17F20
	847 Call 0x1C17F20
	848 Call 0x1C17F20
	849 Call 0x1C17F20
	850 Move X0, X28
	851 Call 0x1C17F18
	852 Call 0x1C17F20
	853 Call 0x1C17F20
	854 Call 0x1C17F20
	855 Call 0x1C17F20
	856 Call 0x1C17F20
	857 Call 0x1C17F20
	858 Call 0x1C17F20
	859 Call 0x1C17F20
	860 Call 0x1C17F20
	861 Call 0x1C17F20
	862 Call 0x1C17F20
	863 Move X22, X1
	864 Move X25, X0
	865 Move X26, X1
	866 Move X25, X0
	867 Move X25, X0
	868 Move V9, V8
	869 NotImplemented "Instruction CMP not yet implemented."
	870 Move X0, X25
	871 Call 0x3EB2AD0
	872 Move X27, [X0]
	873 Call 0x3EB2AE0
	874 Move W25, W31
	875 Move V8, V9
	876 Move X25, X0
	877 NotImplemented "Instruction CMP not yet implemented."
	878 Move X0, X25
	879 Call 0x3EB2AD0
	880 Move X22, [X0]
	881 Call 0x3EB2AE0
	882 Move W25, W31
	883 Move X25, X0
	884 NotImplemented "Instruction CMP not yet implemented."
	885 Move X0, X25
	886 Call 0x3EB2AD0
	887 Move X23, [X0]
	888 Call 0x3EB2AE0
	889 Move W24, W31
	890 Move X8, 0x22E7000
	891 Move X8, [X8+128]
	892 Add X0, X31, 224
	893 Move X1, [X8]
	894 Call Enumerator<Object>.Dispose, X0
	895 Move X20, [X31+368]
	896 Move X19, [X31+376]
	897 Move X22, [X31+352]
	898 Move X21, [X31+360]
	899 Move X24, [X31+336]
	900 Move X23, [X31+344]
	901 Move X26, [X31+320]
	902 Move X25, [X31+328]
	903 Move X28, [X31+304]
	904 Move X27, [X31+312]
	905 Move X29, [X31+288]
	906 Move X30, [X31+296]
	907 Move D9, [X31+272]
	908 Move D8, [X31+280]
	909 Move D11, [X31+256]
	910 Move D10, [X31+264]
	911 Move W0, 1
	912 Add X31, X31, 384
	913 Return X0
	914 Move X19, X1
	915 Move X23, X31
	916 Move X8, 0x22E7000
	917 Move X8, [X8+120]
	918 Move X1, [X8]
	919 Add X0, X31, 192
	920 Call Enumerator<Object>.Dispose, X0
	921 Move X1, X19
	922 Compare X23, 0
	923 JumpIfEqual {979}
	924 Move X0, X23
	925 Call 0x1C17F18
	926 Move X19, X1
	927 Move X22, X31
	928 Move X8, 0x22E7000
	929 Move X8, [X8+112]
	930 Move X1, [X8]
	931 Add X0, X31, 96
	932 Call Enumerator<ValueTuple`2<Int32, Object>>.Dispose, X0
	933 Move X1, X19
	934 Compare X22, 0
	935 JumpIfEqual {979}
	936 Move X0, X22
	937 Call 0x1C17F18
	938 Move X19, X1
	939 Move X27, X31
	940 Move X8, 0x22E7000
	941 Move X8, [X8+136]
	942 Move X1, [X8]
	943 Add X0, X31, 160
	944 Call Enumerator<Object>.Dispose, X0
	945 Move X1, X19
	946 Compare X27, 0
	947 JumpIfEqual {979}
	948 Move X0, X27
	949 Call 0x1C17F18
	950 Call 0x1C181E0
	951 Call 0x1C17F20
	952 Move X0, X23
	953 Call 0x1C17F18
	954 Call 0x1C17F20
	955 Call 0x1C17F20
	956 Call 0x1C17F20
	957 Move X0, X27
	958 Call 0x1C17F18
	959 Call 0x1C17F20
	960 Move X0, X22
	961 Call 0x1C17F18
	962 Call 0x1C17F20
	963 Call 0x1C17F20
	964 Call 0x1C17F20
	965 Call 0x1C17F20
	966 Call 0x1C17F20
	967 Move X0, X27
	968 Call 0x1C17F18
	969 Move X0, X28
	970 Call 0x1C17F18
	971 Call 0x1991590
	972 Move X19, X1
	973 Move X25, X0
	974 Move X19, X1
	975 Move X25, X0
	976 Move X19, X1
	977 Move X25, X0
	978 Move X25, X0
	979 NotImplemented "Instruction CMP not yet implemented."
	980 Move X0, X25
	981 Call 0x3EB2AD0
	982 Move X19, [X0]
	983 Call 0x3EB2AE0
	984 Move X8, 0x22E7000
	985 Move X8, [X8+128]
	986 Add X0, X31, 224
	987 Move X1, [X8]
	988 Call Enumerator<Object>.Dispose, X0
	989 Compare X19, 0
	990 JumpIfEqual {895}
	991 Move X0, X19
	992 Call 0x1C17F18
	993 Move X19, X31
	994 Move X25, X0
	995 Move X8, 0x22E7000
	996 Move X8, [X8+128]
	997 Move X1, [X8]
	998 Add X0, X31, 224
	999 Call Enumerator<Object>.Dispose, X0
	1000 Compare X19, 0
	1001 JumpIfNotEqual {1004}
	1002 Move X0, X25
	1003 Call 0x1D2D690
	1004 Move X0, X19
	1005 Call 0x1C17F18
	1006 Call 0x1991590

Method: System.Boolean PickMobs()

Disassembly:
	0x01E14DA4 ADRP X9, 0x22E6000
	0x01E14DA8 LDR X9, [X9 + 0x270]
	0x01E14DAC LDR W10, [X23 + 0x1C]
	0x01E14DB0 LDR X8, [X23 + 0x10]
	0x01E14DB4 LDR X9, [X9]
	0x01E14DB8 ADD W10, W10, 0x1
	0x01E14DBC STR W10, [X23 + 0x1C]
	0x01E14DC0 CBZ X8, 0x1E154B8
	0x01E14DC4 LDRSW X10, [X23 + 0x18]
	0x01E14DC8 LDR W11, [X8 + 0x18]
	0x01E14DCC CMP W10, W11
	0x01E14DD0 B.CS 0x1E14DE8
	0x01E14DD4 ADD W9, W10, 0x1
	0x01E14DD8 ADD X8, X8, X10, 0x3, LSL
	0x01E14DDC STR W9, [X23 + 0x18]
	0x01E14DE0 STR X21, [X8 + 0x20]
	0x01E14DE4 B 0x1E14E00
	0x01E14DE8 LDR X8, [X9 + 0x20]
	0x01E14DEC MOV X0, X23
	0x01E14DF0 MOV X1, X21
	0x01E14DF4 LDR X8, [X8 + 0xC0]
	0x01E14DF8 LDR X2, [X8 + 0x70]
	0x01E14DFC BL 0x301BF90
	0x01E14E00 CBZ X22, 0x1E154B8
	0x01E14E04 ADRP X9, 0x22E6000
	0x01E14E08 LDR X9, [X9 + 0x268]
	0x01E14E0C LDR W10, [X22 + 0x1C]
	0x01E14E10 LDR X8, [X22 + 0x10]
	0x01E14E14 LDR X9, [X9]
	0x01E14E18 ADD W10, W10, 0x1
	0x01E14E1C STR W10, [X22 + 0x1C]
	0x01E14E20 CBZ X8, 0x1E154B8
	0x01E14E24 LDRSW X10, [X22 + 0x18]
	0x01E14E28 LDR W11, [X8 + 0x18]
	0x01E14E2C CMP W10, W11
	0x01E14E30 B.CS 0x1E14E48
	0x01E14E34 ADD W9, W10, 0x1
	0x01E14E38 ADD X8, X8, X10, 0x3, LSL
	0x01E14E3C STR W9, [X22 + 0x18]
	0x01E14E40 STR X23, [X8 + 0x20]
	0x01E14E44 B 0x1E14E60
	0x01E14E48 LDR X8, [X9 + 0x20]
	0x01E14E4C MOV X0, X22
	0x01E14E50 MOV X1, X23
	0x01E14E54 LDR X8, [X8 + 0xC0]
	0x01E14E58 LDR X2, [X8 + 0x70]
	0x01E14E5C BL 0x301BF90
	0x01E14E60 LDR X8, [X27 + 0x38]
	0x01E14E64 CBZ X8, 0x1E154B8
	0x01E14E68 LDR W8, [X8 + 0x18]
	0x01E14E6C CBZ W8, 0x1E15408
	0x01E14E70 CMP W8, 0x0
	0x01E14E74 CSET W9, GT
	0x01E14E78 CMP W8, 0x1
	0x01E14E7C STR W9, [X31 + 0x4]
	0x01E14E80 B.LT 0x1E153FC
	0x01E14E84 ADRP X25, 0x22E6000
	0x01E14E88 ADRP X26, 0x22DF000
	0x01E14E8C LDR X25, [X25 + 0x2B8]
	0x01E14E90 LDR X26, [X26 + 0x598]
	0x01E14E94 ADRP X8, 0x22E6000
	0x01E14E98 LDR X8, [X8 + 0x2B0]
	0x01E14E9C LDR X0, [X8]
	0x01E14EA0 BL 0x1C16F10
	0x01E14EA4 MOV X1, X31
	0x01E14EA8 MOV X21, X0
	0x01E14EAC BL 0x33BDD8C
	0x01E14EB0 LDR X0, [X25]
	0x01E14EB4 LDR X22, [X27 + 0x38]
	0x01E14EB8 LDR W8, [X0 + 0xE0]
	0x01E14EBC CBNZ W8, 0x1E14EC8
	0x01E14EC0 BL 0x1C16DFC
	0x01E14EC4 LDR X0, [X25]
	0x01E14EC8 LDR X8, [X0 + 0xB8]
	0x01E14ECC LDR X23, [X8 + 0x8]
	0x01E14ED0 CBNZ X23, 0x1E14F24
	0x01E14ED4 LDR W8, [X0 + 0xE0]
	0x01E14ED8 CBNZ W8, 0x1E14EE4
	0x01E14EDC BL 0x1C16DFC
	0x01E14EE0 LDR X0, [X25]
	0x01E14EE4 LDR X8, [X0 + 0xB8]
	0x01E14EE8 LDR X24, [X8]
	0x01E14EEC ADRP X8, 0x22E6000
	0x01E14EF0 LDR X8, [X8 + 0x250]
	0x01E14EF4 LDR X0, [X8]
	0x01E14EF8 BL 0x1C16F10
	0x01E14EFC ADRP X8, 0x22E6000
	0x01E14F00 LDR X8, [X8 + 0x290]
	0x01E14F04 MOV X1, X24
	0x01E14F08 MOV X3, X31
	0x01E14F0C MOV X23, X0
	0x01E14F10 LDR X2, [X8]
	0x01E14F14 BL 0x2D2F428
	0x01E14F18 LDR X8, [X25]
	0x01E14F1C LDR X8, [X8 + 0xB8]
	0x01E14F20 STR X23, [X8 + 0x8]
	0x01E14F24 ADRP X8, 0x22E6000
	0x01E14F28 LDR X8, [X8 + 0x230]
	0x01E14F2C MOV X0, X22
	0x01E14F30 MOV X1, X23
	0x01E14F34 LDR X2, [X8]
	0x01E14F38 BL 0x21C570C
	0x01E14F3C CBZ X21, 0x1E154B8
	0x01E14F40 STR X0, [X21 + 0x10]
	0x01E14F44 MOV X22, X0
	0x01E14F48 LDR X0, [X26]
	0x01E14F4C LDR W8, [X0 + 0xE0]
	0x01E14F50 CBNZ W8, 0x1E14F58
	0x01E14F54 BL 0x1C16DFC
	0x01E14F58 MOV X0, X22
	0x01E14F5C MOV X1, X31
	0x01E14F60 MOV X2, X31
	0x01E14F64 BL 0x3C3883C
	0x01E14F68 TBZ X0, 0x0, 0x1E14F8C
	0x01E14F6C LDR X0, [X27 + 0x38]
	0x01E14F70 CBZ X0, 0x1E154B8
	0x01E14F74 ADRP X8, 0x22E5000
	0x01E14F78 LDR X8, [X8 + 0xEC8]
	0x01E14F7C MOV W1, W31
	0x01E14F80 LDR X2, [X8]
	0x01E14F84 BL 0x301BCCC
	0x01E14F88 STR X0, [X21 + 0x10]
	0x01E14F8C LDR X0, [X27 + 0x38]
	0x01E14F90 CBZ X0, 0x1E154B8
	0x01E14F94 ADRP X8, 0x22E6000
	0x01E14F98 LDR X1, [X21 + 0x10]
	0x01E14F9C LDR X8, [X8 + 0x278]
	0x01E14FA0 LDR X2, [X8]
	0x01E14FA4 BL 0x301D7A8
	0x01E14FA8 LDR X8, [X27 + 0x20]
	0x01E14FAC CBZ X8, 0x1E14FD0
	0x01E14FB0 ADRP X9, 0x22E6000
	0x01E14FB4 LDR X10, [X8]
	0x01E14FB8 LDR X9, [X9 + 0x208]
	0x01E14FBC LDRB W12, [X10 + 0x130]
	0x01E14FC0 LDR X9, [X9]
	0x01E14FC4 LDRB W11, [X9 + 0x130]
	0x01E14FC8 CMP W12, W11
	0x01E14FCC B.CS 0x1E14FD8
	0x01E14FD0 MOV X22, X31
	0x01E14FD4 B 0x1E14FEC
	0x01E14FD8 LDR X10, [X10 + 0xC8]
	0x01E14FDC ADD X10, X10, X11, 0x3, LSL
	0x01E14FE0 LDUR X10, [X10 - 0x8]
	0x01E14FE4 CMP X10, X9
	0x01E14FE8 CSEL X22, X8, X31, EQ
	0x01E14FEC LDR X8, [X21 + 0x10]
	0x01E14FF0 CBZ X8, 0x1E154B8
	0x01E14FF4 LDR X0, [X26]
	0x01E14FF8 LDR X23, [X8 + 0x20]
	0x01E14FFC LDR W9, [X0 + 0xE0]
	0x01E15000 CBNZ W9, 0x1E15008
	0x01E15004 BL 0x1C16DFC
	0x01E15008 MOV X0, X23
	0x01E1500C MOV X1, X22
	0x01E15010 MOV X2, X31
	0x01E15014 BL 0x3C3883C
	0x01E15018 LDR X8, [X21 + 0x10]
	0x01E1501C CBZ X8, 0x1E154B8
	0x01E15020 ADD X9, X8, 0x20
	0x01E15024 ADD X8, X8, 0x18
	0x01E15028 ANDS W31, W0, 0x1
	0x01E1502C CSEL X8, X8, X9, NE
	0x01E15030 LDR X0, [X8]
	0x01E15034 ADRP X8, 0x22E4000
	0x01E15038 LDR X8, [X8 + 0xEA8]
	0x01E1503C LDR X1, [X8]
	0x01E15040 BL 0x1C16E00
	0x01E15044 LDR X8, [X21 + 0x10]
	0x01E15048 CBZ X8, 0x1E154B8
	0x01E1504C ADRP X9, 0x22E5000
	0x01E15050 LDR X9, [X9 + 0x248]
	0x01E15054 MOV X20, X0
	0x01E15058 LDR X23, [X8 + 0x30]
	0x01E1505C LDR X0, [X9]
	0x01E15060 LDR W9, [X0 + 0xE0]
	0x01E15064 CBNZ W9, 0x1E1506C
	0x01E15068 BL 0x1C16DFC
	0x01E1506C MOV X0, X23
	0x01E15070 MOV X1, X31
	0x01E15074 BL 0x3E6C1B0
	0x01E15078 STR X20, [X31 + 0x8]
	0x01E1507C TBZ X0, 0x0, 0x1E1514C
	0x01E15080 LDR X0, [X25]
	0x01E15084 LDR W8, [X0 + 0xE0]
	0x01E15088 CBNZ W8, 0x1E15094
	0x01E1508C BL 0x1C16DFC
	0x01E15090 LDR X0, [X25]
	0x01E15094 LDR X8, [X0 + 0xB8]
	0x01E15098 LDR X23, [X8 + 0x10]
	0x01E1509C CBNZ X23, 0x1E150F0
	0x01E150A0 LDR W8, [X0 + 0xE0]
	0x01E150A4 CBNZ W8, 0x1E150B0
	0x01E150A8 BL 0x1C16DFC
	0x01E150AC LDR X0, [X25]
	0x01E150B0 LDR X8, [X0 + 0xB8]
	0x01E150B4 LDR X24, [X8]
	0x01E150B8 ADRP X8, 0x22E4000
	0x01E150BC LDR X8, [X8 + 0x9D0]
	0x01E150C0 LDR X0, [X8]
	0x01E150C4 BL 0x1C16F10
	0x01E150C8 ADRP X8, 0x22E5000
	0x01E150CC LDR X8, [X8 + 0x298]
	0x01E150D0 MOV X1, X24
	0x01E150D4 MOV X3, X31
	0x01E150D8 MOV X23, X0
	0x01E150DC LDR X2, [X8]
	0x01E150E0 BL 0x2D2F428
	0x01E150E4 LDR X8, [X25]
	0x01E150E8 LDR X8, [X8 + 0xB8]
	0x01E150EC STR X23, [X8 + 0x10]
	0x01E150F0 ADRP X8, 0x22E4000
	0x01E150F4 LDR X8, [X8 + 0x9C8]
	0x01E150F8 MOV X0, X19
	0x01E150FC MOV X1, X23
	0x01E15100 LDR X2, [X8]
	0x01E15104 BL 0x21DA490
	0x01E15108 ADRP X8, 0x22E4000
	0x01E1510C LDR X8, [X8 + 0x9C0]
	0x01E15110 LDR X1, [X8]
	0x01E15114 BL 0x21D79F4
	0x01E15118 CBZ X0, 0x1E154B8
	0x01E1511C LDR W1, [X0 + 0x18]
	0x01E15120 MOV X23, X0
	0x01E15124 CMP W1, 0x1
	0x01E15128 B.LT 0x1E15268
	0x01E1512C MOV W0, W31
	0x01E15130 MOV X2, X31
	0x01E15134 BL 0x3C309A8
	0x01E15138 ADRP X8, 0x22E4000
	0x01E1513C LDR X8, [X8 + 0x9E0]
	0x01E15140 MOV W1, W0
	0x01E15144 MOV X0, X23
	0x01E15148 B 0x1E15288
	0x01E1514C ADRP X8, 0x22E4000
	0x01E15150 LDR X8, [X8 + 0x9D0]
	0x01E15154 LDR X0, [X8]
	0x01E15158 BL 0x1C16F10
	0x01E1515C ADRP X8, 0x22E5000
	0x01E15160 LDR X8, [X8 + 0x2A8]
	0x01E15164 MOV X1, X21
	0x01E15168 MOV X3, X31
	0x01E1516C MOV X23, X0
	0x01E15170 LDR X2, [X8]
	0x01E15174 BL 0x2D2F428
	0x01E15178 ADRP X8, 0x22E5000
	0x01E1517C LDR X8, [X8 + 0x240]
	0x01E15180 MOV X0, X19
	0x01E15184 MOV X1, X23
	0x01E15188 LDR X2, [X8]
	0x01E1518C BL 0x21C4138
	0x01E15190 LDR X8, [X26]
	0x01E15194 MOV X23, X0
	0x01E15198 LDR W9, [X8 + 0xE0]
	0x01E1519C CBNZ W9, 0x1E151A8
	0x01E151A0 MOV X0, X8
	0x01E151A4 BL 0x1C16DFC
	0x01E151A8 MOV X0, X23
	0x01E151AC MOV X1, X31
	0x01E151B0 MOV X2, X31
	0x01E151B4 BL 0x3C3883C
	0x01E151B8 TBZ X0, 0x0, 0x1E15294
	0x01E151BC LDR W1, [X19 + 0x18]
	0x01E151C0 MOV W0, W31
	0x01E151C4 MOV X2, X31
	0x01E151C8 BL 0x3C309A8
	0x01E151CC ADRP X8, 0x22E4000
	0x01E151D0 LDR X8, [X8 + 0x9E0]
	0x01E151D4 MOV W1, W0
	0x01E151D8 MOV X0, X19
	0x01E151DC LDR X2, [X8]
	0x01E151E0 BL 0x301BCCC
	0x01E151E4 LDR X8, [X21 + 0x10]
	0x01E151E8 CBZ X8, 0x1E154B8
	0x01E151EC LDR X1, [X8 + 0x30]
	0x01E151F0 ADRP X8, 0x22E5000
	0x01E151F4 LDR X8, [X8 + 0x2E0]
	0x01E151F8 MOV X23, X0
	0x01E151FC MOV X3, X31
	0x01E15200 LDR X0, [X8]
	0x01E15204 ADRP X8, 0x22E5000
	0x01E15208 LDR X8, [X8 + 0x2C0]
	0x01E1520C LDR X2, [X8]
	0x01E15210 BL 0x32274B8
	0x01E15214 ADRP X8, 0x22DE000
	0x01E15218 LDR X8, [X8 + 0x788]
	0x01E1521C MOV X24, X0
	0x01E15220 LDR X8, [X8]
	0x01E15224 LDR W9, [X8 + 0xE0]
	0x01E15228 CBNZ W9, 0x1E15234
	0x01E1522C MOV X0, X8
	0x01E15230 BL 0x1C16DFC
	0x01E15234 ADRP X8, 0x22E5000
	0x01E15238 LDR X8, [X8 + 0x2D0]
	0x01E1523C MOVZ W0, 0x20
	0x01E15240 MOVZ W5, 0x8F
	0x01E15244 MOV X1, X24
	0x01E15248 LDR X3, [X8]
	0x01E1524C ADRP X8, 0x22E4000
	0x01E15250 LDR X8, [X8 + 0xD60]
	0x01E15254 MOV X2, X31
	0x01E15258 MOV X6, X31
	0x01E1525C LDR X4, [X8]
	0x01E15260 BL 0x35C229C
	0x01E15264 B 0x1E15294
	0x01E15268 LDR W1, [X19 + 0x18]
	0x01E1526C MOV W0, W31
	0x01E15270 MOV X2, X31
	0x01E15274 BL 0x3C309A8
	0x01E15278 ADRP X8, 0x22E4000
	0x01E1527C LDR X8, [X8 + 0x9E0]
	0x01E15280 MOV W1, W0
	0x01E15284 MOV X0, X19
	0x01E15288 LDR X2, [X8]
	0x01E1528C BL 0x301BCCC
	0x01E15290 MOV X23, X0
	0x01E15294 ADRP X8, 0x22E4000
	0x01E15298 LDR X8, [X8 + 0xA38]
	0x01E1529C MOV X0, X19
	0x01E152A0 MOV X1, X23
	0x01E152A4 MOV X20, X19
	0x01E152A8 LDR X2, [X8]
	0x01E152AC BL 0x301D7A8
	0x01E152B0 ADRP X8, 0x22E4000
	0x01E152B4 LDP X29, X19, [X27 + 0x10]
	0x01E152B8 MOV X28, X27
	0x01E152BC LDR W22, [X27 + 0x28]
	0x01E152C0 LDR X27, [X21 + 0x10]
	0x01E152C4 LDR X8, [X8 + 0xEA0]
	0x01E152C8 LDR X0, [X8]
	0x01E152CC BL 0x1C16F10
	0x01E152D0 LDR X3, [X31 + 0x8]
	0x01E152D4 ADD W4, W22, 0x1
	0x01E152D8 MOV X1, X29
	0x01E152DC MOV X2, X19
	0x01E152E0 MOV X5, X27
	0x01E152E4 MOV X6, X23
	0x01E152E8 MOV X24, X0
	0x01E152EC BL 0x1E14418
	0x01E152F0 CBZ X24, 0x1E154B8
	0x01E152F4 MOV X0, X24
	0x01E152F8 BL 0x1E14774
	0x01E152FC MOV X19, X20
	0x01E15300 MOV X27, X28
	0x01E15304 TBNZ X0, 0x0, 0x1E153E0
	0x01E15308 LDR X8, [X27 + 0x10]
	0x01E1530C CBZ X8, 0x1E154B8
	0x01E15310 LDP W9, W10, [X8 + 0x20]
	0x01E15314 ADD W9, W9, 0x1
	0x01E15318 CMP W9, W10
	0x01E1531C STR W9, [X8 + 0x20]
	0x01E15320 B.GE 0x1E153FC
	0x01E15324 LDR X0, [X27 + 0x38]
	0x01E15328 CBZ X0, 0x1E154B8
	0x01E1532C ADRP X9, 0x22E5000
	0x01E15330 LDR X1, [X21 + 0x10]
	0x01E15334 LDR W10, [X0 + 0x1C]
	0x01E15338 LDR X8, [X0 + 0x10]
	0x01E1533C LDR X9, [X9 + 0x210]
	0x01E15340 ADD W10, W10, 0x1
	0x01E15344 LDR X9, [X9]
	0x01E15348 STR W10, [X0 + 0x1C]
	0x01E1534C CBZ X8, 0x1E154B8
	0x01E15350 LDRSW X10, [X0 + 0x18]
	0x01E15354 LDR W11, [X8 + 0x18]
	0x01E15358 CMP W10, W11
	0x01E1535C B.CS 0x1E15374
	0x01E15360 ADD W9, W10, 0x1
	0x01E15364 ADD X8, X8, X10, 0x3, LSL
	0x01E15368 STR W9, [X0 + 0x18]
	0x01E1536C STR X1, [X8 + 0x20]
	0x01E15370 B 0x1E15384
	0x01E15374 LDR X8, [X9 + 0x20]
	0x01E15378 LDR X8, [X8 + 0xC0]
	0x01E1537C LDR X2, [X8 + 0x70]
	0x01E15380 BL 0x301BF90
	0x01E15384 ADRP X9, 0x22E4000
	0x01E15388 LDR W10, [X19 + 0x1C]
	0x01E1538C LDR X8, [X19 + 0x10]
	0x01E15390 LDR X9, [X9 + 0xA10]
	0x01E15394 ADD W10, W10, 0x1
	0x01E15398 LDR X9, [X9]
	0x01E1539C STR W10, [X19 + 0x1C]
	0x01E153A0 CBZ X8, 0x1E154B8
	0x01E153A4 LDRSW X10, [X19 + 0x18]
	0x01E153A8 LDR W11, [X8 + 0x18]
	0x01E153AC CMP W10, W11
	0x01E153B0 B.CS 0x1E153C8
	0x01E153B4 ADD W9, W10, 0x1
	0x01E153B8 ADD X8, X8, X10, 0x3, LSL
	0x01E153BC STR W9, [X19 + 0x18]
	0x01E153C0 STR X23, [X8 + 0x20]
	0x01E153C4 B 0x1E153E0
	0x01E153C8 LDR X8, [X9 + 0x20]
	0x01E153CC MOV X0, X19
	0x01E153D0 MOV X1, X23
	0x01E153D4 LDR X8, [X8 + 0xC0]
	0x01E153D8 LDR X2, [X8 + 0x70]
	0x01E153DC BL 0x301BF90
	0x01E153E0 LDR X8, [X27 + 0x38]
	0x01E153E4 CBZ X8, 0x1E154B8
	0x01E153E8 LDR W8, [X8 + 0x18]
	0x01E153EC CMP W8, 0x0
	0x01E153F0 CSET W8, GT
	0x01E153F4 STR W8, [X31 + 0x4]
	0x01E153F8 B.GT 0x1E14E94
	0x01E153FC LDR W8, [X31 + 0x4]
	0x01E15400 EOR W8, W8, 0x1
	0x01E15404 B 0x1E14A74
	0x01E15408 MOVZ W8, 0x1
	0x01E1540C B 0x1E14A74
	0x01E15410 LDR X8, [X27 + 0x10]
	0x01E15414 CBZ X8, 0x1E154B8

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X20, 0x25C5000
	015 Move W8, [X20+3572]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {80}
	021 Move X0, 0x22E7000
	022 Move X0, [X0+80]
	023 Call 0x1C17CF4
	024 Move X0, 0x22E7000
	025 Move X0, [X0+88]
	026 Call 0x1C17CF4
	027 Move X0, 0x22E7000
	028 Move X0, [X0+384]
	029 Call 0x1C17CF4
	030 Move X0, 0x22E7000
	031 Move X0, [X0+392]
	032 Call 0x1C17CF4
	033 Move X0, 0x22E7000
	034 Move X0, [X0+400]
	035 Call 0x1C17CF4
	036 Move X0, 0x22E7000
	037 Move X0, [X0+408]
	038 Call 0x1C17CF4
	039 Move X0, 0x22E7000
	040 Move X0, [X0+416]
	041 Call 0x1C17CF4
	042 Move X0, 0x22E7000
	043 Move X0, [X0+424]
	044 Call 0x1C17CF4
	045 Move X0, 0x22E7000
	046 Move X0, [X0+432]
	047 Call 0x1C17CF4
	048 Move X0, 0x22E7000
	049 Move X0, [X0+440]
	050 Call 0x1C17CF4
	051 Move X0, 0x22E7000
	052 Move X0, [X0+448]
	053 Call 0x1C17CF4
	054 Move X0, 0x22E7000
	055 Move X0, [X0+248]
	056 Call 0x1C17CF4
	057 Move X0, 0x22E7000
	058 Move X0, [X0+456]
	059 Call 0x1C17CF4
	060 Move X0, 0x22E6000
	061 Move X0, [X0+3752]
	062 Call 0x1C17CF4
	063 Move X0, 0x22E7000
	064 Move X0, [X0+464]
	065 Call 0x1C17CF4
	066 Move X0, 0x22E7000
	067 Move X0, [X0+472]
	068 Call 0x1C17CF4
	069 Move X0, 0x22E6000
	070 Move X0, [X0+984]
	071 Call 0x1C17CF4
	072 Move X0, 0x22E0000
	073 Move X0, [X0+3448]
	074 Call 0x1C17CF4
	075 Move X0, 0x22E0000
	076 Move X0, [X0+1432]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X20+3572], W8
	080 Move [X31+80], X31
	081 Move [X31+88], X31
	082 Move [X31+96], X31
	083 Move [X31+48], X31
	084 Move [X31+56], X31
	085 Move [X31+64], X31
	086 Move [X31+40], X31
	087 Move X0, [X19+24]
	088 Compare X0, 0
	089 JumpIfEqual {384}
	090 Move X8, 0x22E7000
	091 Move X8, [X8+448]
	092 Move W1, 1
	093 Move X2, [X8]
	094 Call 0x21E870C, X0, X1
	095 Compare X0, 0
	096 JumpIfEqual {384}
	097 Move X8, 0x22E7000
	098 Move X8, [X8+464]
	099 Move X28, 0x22E7000
	100 Move X27, 0x22E6000
	101 Move X26, 0x22E7000
	102 Move X24, 0x22E7000
	103 Move X28, [X28+400]
	104 Move X27, [X27+3752]
	105 Move X26, [X26+80]
	106 Move X24, [X24+88]
	107 Move X1, [X8]
	108 Add X8, X31, 16
	109 Call List`1<Object>.GetEnumerator, X0
	110 Move V0, [X31+1]
	111 Move X8, [X31+32]
	112 Move [X31+5], V0
	113 Move [X31+96], X8
	114 Move X8, 0x22E7000
	115 Move X8, [X8+408]
	116 Move X1, [X8]
	117 Add X0, X31, 80
	118 Call Enumerator<Object>.MoveNext, X0
	119 Move TEMP, X0
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfNotEqual {348}
	123 Move X20, [X31+96]
	124 Compare X20, 0
	125 JumpIfEqual {382}
	126 Move W8, [X20+64]
	127 Move [X31+12], W8
	128 Compare W8, 0
	129 JumpIfEqual {114}
	130 Move X0, [X20+32]
	131 Compare X0, 0
	132 JumpIfEqual {383}
	133 Move X9, 0x22E7000
	134 Move X8, [X0]
	135 Move X9, [X9+248]
	136 Move W10, [X8+304]
	137 Move X1, [X9]
	138 Move W9, [X1+304]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X8, [X8+200]
	141 Add X8, X8, X9
	142 NotImplemented "Instruction LDUR not yet implemented."
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X8, 0x22E7000
	145 Move X8, [X8+440]
	146 Move X2, [X8]
	147 Move X1, X20
	148 Call 0x21E8478, X0, X1
	149 Move W8, [X31+12]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X21, X0
	152 Move W29, W31
	153 Move X8, 0x22E0000
	154 Move X8, [X8+1432]
	155 Move X22, [X20+56]
	156 Move X0, [X8]
	157 Move W8, [X0+224]
	158 Compare W8, 0
	159 JumpIfNotEqual {161}
	160 Call 0x1C17DFC
	161 Move X0, X22
	162 Move X1, X31
	163 Move X2, X31
	164 Call Object.op_Equality, X0, X1
	165 Move TEMP, X0
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfEqual {325}
	169 Move X1, X21
	170 Call Generator.Shuffle, X0, X1
	171 Compare X21, 0
	172 JumpIfEqual {378}
	173 Move X8, 0x22E6000
	174 Move X8, [X8+472]
	175 Move X1, [X8]
	176 Add X8, X31, 16
	177 Move X0, X21
	178 Call List`1<Object>.GetEnumerator, X0
	179 Move V0, [X31+1]
	180 Move X8, [X31+32]
	181 Move [X31+3], V0
	182 Move [X31+64], X8
	183 Move X1, [X28]
	184 Add X0, X31, 48
	185 Call Enumerator<Object>.MoveNext, X0
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {311}
	190 Move X0, [X31+64]
	191 Compare X0, 0
	192 JumpIfEqual {328}
	193 Move X1, X20
	194 Move X2, X31
	195 Call MobPlacementConnection.GetOtherNode, X0, X1
	196 Move X1, [X27]
	197 Call 0x1C17E00
	198 Move X23, X0
	199 Compare X0, 0
	200 JumpIfEqual {183}
	201 Move X8, [X19+40]
	202 Compare X8, 0
	203 JumpIfEqual {330}
	204 Move X0, [X8+16]
	205 Compare X0, 0
	206 JumpIfEqual {329}
	207 Move X2, [X26]
	208 Move X1, X23
	209 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	210 Move TEMP, X0
	211 And TEMP, TEMP, 1
	212 Compare TEMP, 1
	213 JumpIfNotEqual {183}
	214 Move X8, [X19+40]
	215 Compare X8, 0
	216 JumpIfEqual {333}
	217 Move X0, [X8+16]
	218 Compare X0, 0
	219 JumpIfEqual {332}
	220 Move X2, [X24]
	221 Move X1, X23
	222 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	223 Move X8, X0
	224 Compare X0, 0
	225 JumpIfEqual {331}
	226 Move X9, [X8+40]
	227 Compare X9, 0
	228 JumpIfEqual {334}
	229 Move W9, [X9+24]
	230 Compare W9, 0
	231 JumpIfEqual {183}
	232 Add X23, X8, 56
	233 Move X0, X23
	234 Call NavZone.GetRandomSpawnablePoint, X0
	235 Move X8, 0x22DF000
	236 Move X8, [X8+1432]
	237 Move X24, X0
	238 Move X0, [X8]
	239 Move W8, [X0+224]
	240 Compare W8, 0
	241 JumpIfNotEqual {243}
	242 Call 0x1C17DFC
	243 Move X8, 0x22DF000
	244 Move X8, [X8+3448]
	245 Move X1, [X8]
	246 Move X0, X22
	247 Call 0x222E35C, X0
	248 Move X22, X0
	249 Compare X0, 0
	250 JumpIfEqual {335}
	251 Move X0, X22
	252 Move X1, X31
	253 Call GameObject.get_transform, X0
	254 Compare X24, 0
	255 JumpIfEqual {336}
	256 Move X25, X0
	257 Move X0, X24
	258 Move X1, X31
	259 Call NavPoint.GetSpawnPosition, X0
	260 Compare X25, 0
	261 JumpIfEqual {337}
	262 Move X0, X25
	263 Move X1, X31
	264 Call Transform.set_position, X0, X1
	265 Move X0, X22
	266 Move X1, X31
	267 Call GameObject.get_transform, X0
	268 Compare X0, 0
	269 JumpIfEqual {338}
	270 Move X1, [X19+64]
	271 Move X2, X31
	272 Call Transform.set_parent, X0, X1
	273 Move X8, 0x22E6000
	274 Move X8, [X8+432]
	275 Move X2, [X8]
	276 Add X1, X31, 40
	277 Move X0, X22
	278 Call 0x21E7600, X0, X1
	279 Move TEMP, X0
	280 And TEMP, TEMP, 1
	281 Compare TEMP, 1
	282 JumpIfNotEqual {311}
	283 Move X22, [X31+40]
	284 Compare X22, 0
	285 JumpIfEqual {339}
	286 Move X8, [X22]
	287 Move X10, 0x22E6000
	288 Move W23, [X23]
	289 NotImplemented "Instruction LDRH not yet implemented."
	290 Move X10, [X10+456]
	291 Move X1, [X10]
	292 Compare X9, 0
	293 JumpIfEqual {300}
	294 Move X10, [X8+176]
	295 Add X10, X10, 8
	296 NotImplemented "Instruction LDUR not yet implemented."
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Subtract X9, X9, 1
	299 Add X10, X10, 16
	300 Move X0, X22
	301 Move W2, W31
	302 Call 0x1C5D788
	303 NotImplemented "Instruction LDRSW not yet implemented."
	304 Add X8, X8, X9
	305 Add X0, X8, 312
	306 Move X8, [X0]
	307 Move X2, [X0+8]
	308 Move X0, X22
	309 Move W1, W23
	310 NotImplemented "Instruction BLR not yet implemented."
	311 Move X24, X31
	312 Move W22, 6
	313 Move X8, 0x22E6000
	314 Move X8, [X8+392]
	315 Move X1, [X8]
	316 Add X0, X31, 48
	317 Call Enumerator<Object>.Dispose, X0
	318 Compare X24, 0
	319 JumpIfNotEqual {379}
	320 Move X24, 0x22E6000
	321 Move X24, [X24+88]
	322 NotImplemented "Instruction CMP not yet implemented."
	323 Compare W22, 0
	324 JumpIfNotEqual {348}
	325 Move W8, [X31+12]
	326 Add W29, W29, 1
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Call 0x1C17F20
	329 Call 0x1C17F20
	330 Call 0x1C17F20
	331 Call 0x1C17F20
	332 Call 0x1C17F20
	333 Call 0x1C17F20
	334 Call 0x1C17F20
	335 Call 0x1C17F20
	336 Call 0x1C17F20
	337 Call 0x1C17F20
	338 Call 0x1C17F20
	339 Call 0x1C17F20
	340 Move X22, X1
	341 Move X23, X0
	342 NotImplemented "Instruction CMP not yet implemented."
	343 Move X0, X23
	344 Call 0x3EB2AD0
	345 Move X24, [X0]
	346 Call 0x3EB2AE0
	347 Move W22, W31
	348 Move X8, 0x22E6000
	349 Move X8, [X8+384]
	350 Add X0, X31, 80
	351 Move X1, [X8]
	352 Call Enumerator<Object>.Dispose, X0
	353 Move X20, [X31+192]
	354 Move X19, [X31+200]
	355 Move X22, [X31+176]
	356 Move X21, [X31+184]
	357 Move X24, [X31+160]
	358 Move X23, [X31+168]
	359 Move X26, [X31+144]
	360 Move X25, [X31+152]
	361 Move X28, [X31+128]
	362 Move X27, [X31+136]
	363 Move X29, [X31+112]
	364 Move X30, [X31+120]
	365 Move W0, 1
	366 Add X31, X31, 208
	367 Return X0
	368 Move X24, X31
	369 Move X8, 0x22E6000
	370 Move X8, [X8+392]
	371 Move X1, [X8]
	372 Add X0, X31, 48
	373 Call Enumerator<Object>.Dispose, X0
	374 Compare X24, 0
	375 JumpIfEqual {389}
	376 Move X0, X24
	377 Call 0x1C17F18
	378 Call 0x1C17F20
	379 Move X0, X24
	380 Call 0x1C17F18
	381 Call 0x1C181E0
	382 Call 0x1C17F20
	383 Call 0x1C17F20
	384 Call 0x1C17F20
	385 Move X22, X1
	386 Move X23, X0
	387 Move X22, X1
	388 Move X23, X0
	389 NotImplemented "Instruction CMP not yet implemented."
	390 Move X0, X23
	391 Call 0x3EB2AD0
	392 Move X19, [X0]
	393 Call 0x3EB2AE0
	394 Move X8, 0x22E6000
	395 Move X8, [X8+384]
	396 Add X0, X31, 80
	397 Move X1, [X8]
	398 Call Enumerator<Object>.Dispose, X0
	399 Compare X19, 0
	400 JumpIfEqual {353}
	401 Move X0, X19
	402 Call 0x1C17F18
	403 Move X19, X31
	404 Move X23, X0
	405 Move X8, 0x22E6000
	406 Move X8, [X8+384]
	407 Move X1, [X8]
	408 Add X0, X31, 80
	409 Call Enumerator<Object>.Dispose, X0
	410 Compare X19, 0
	411 JumpIfNotEqual {414}
	412 Move X0, X23
	413 Call 0x1D2D690
	414 Move X0, X19
	415 Call 0x1C17F18
	416 Call 0x1991590

Method: System.Void Shuffle(System.Collections.IList list)

Disassembly:
	0x01E16628 LDP X20, X19, [X31 + 0x20]
	0x01E1662C LDR X30, [X31], #0x30
	0x01E16630 RET
	0x01E16634 STP X30, X19, [X31 - 0x10]!
	0x01E16638 LDR X19, [X0 + 0x8]
	0x01E1663C CBZ X19, 0x1E16678
	0x01E16640 LDR X1, [X19 + 0x18]
	0x01E16644 CBZ X1, 0x1E1666C
	0x01E16648 MOV W0, W31
	0x01E1664C MOV X2, X31
	0x01E16650 BL 0x3C309A8
	0x01E16654 LDR W8, [X19 + 0x18]
	0x01E16658 CMP W0, W8
	0x01E1665C B.CS 0x1E1667C
	0x01E16660 ADD X8, X19, W0, 0x3, SXTW
	0x01E16664 LDR X0, [X8 + 0x20]
	0x01E16668 B 0x1E16670
	0x01E1666C MOV X0, X31
	0x01E16670 LDP X30, X19, [X31], #0x10
	0x01E16674 RET
	0x01E16678 BL 0x1C16F20
	0x01E1667C BL 0x1C16F28
	0x01E16680 MOV X1, X31
	0x01E16684 B 0x3C303D4
	0x01E16688 STP X30, X19, [X31 - 0x10]!
	0x01E1668C LDR X8, [X0 + 0x50]
	0x01E16690 CBZ X8, 0x1E166A0
	0x01E16694 LDR W0, [X8]
	0x01E16698 LDP X30, X19, [X31], #0x10
	0x01E1669C RET
	0x01E166A0 ADRP X0, 0x22DD000
	0x01E166A4 LDR X0, [X0 + 0x5B0]
	0x01E166A8 BL 0x1C16D08
	0x01E166AC BL 0x1C16F10
	0x01E166B0 MOV X19, X0
	0x01E166B4 ADRP X0, 0x22E4000
	0x01E166B8 LDR X0, [X0 + 0x3A0]
	0x01E166BC BL 0x1C16D08
	0x01E166C0 MOV X1, X0
	0x01E166C4 MOV X0, X19
	0x01E166C8 MOV X2, X31
	0x01E166CC BL 0x337DF1C
	0x01E166D0 ADRP X0, 0x22E4000
	0x01E166D4 LDR X0, [X0 + 0x3A8]
	0x01E166D8 BL 0x1C16D08
	0x01E166DC MOV X1, X0
	0x01E166E0 MOV X0, X19
	0x01E166E4 BL 0x1C16DEC
	0x01E166E8 STP X30, X19, [X31 - 0x10]!
	0x01E166EC LDR X8, [X0 + 0x50]
	0x01E166F0 CBZ X8, 0x1E16700
	0x01E166F4 STR W1, [X8]
	0x01E166F8 LDP X30, X19, [X31], #0x10
	0x01E166FC RET
	0x01E16700 ADRP X0, 0x22DD000
	0x01E16704 LDR X0, [X0 + 0x5B0]
	0x01E16708 BL 0x1C16D08
	0x01E1670C BL 0x1C16F10
	0x01E16710 MOV X19, X0
	0x01E16714 ADRP X0, 0x22E4000
	0x01E16718 LDR X0, [X0 + 0x3A0]
	0x01E1671C BL 0x1C16D08
	0x01E16720 MOV X1, X0
	0x01E16724 MOV X0, X19
	0x01E16728 MOV X2, X31
	0x01E1672C BL 0x337DF1C
	0x01E16730 ADRP X0, 0x22E4000
	0x01E16734 LDR X0, [X0 + 0x3B0]
	0x01E16738 BL 0x1C16D08
	0x01E1673C MOV X1, X0
	0x01E16740 MOV X0, X19
	0x01E16744 BL 0x1C16DEC
	0x01E16748 STP X30, X19, [X31 - 0x10]!
	0x01E1674C MOV X19, X0
	0x01E16750 LDR X0, [X0 + 0x98]
	0x01E16754 STR W31, [X19 + 0x80]
	0x01E16758 CBZ X0, 0x1E1678C
	0x01E1675C MOV W1, W31
	0x01E16760 BL 0x1E16790
	0x01E16764 MOV X0, X19
	0x01E16768 MOV X1, X31
	0x01E1676C BL 0x3C32E90
	0x01E16770 CBZ X0, 0x1E1678C
	0x01E16774 MOV X1, X31
	0x01E16778 BL 0x3C3F58C
	0x01E1677C STP S0, S1, [X19 + 0xEC]
	0x01E16780 STR S2, [X19 + 0xF4]
	0x01E16784 LDP X30, X19, [X31], #0x10
	0x01E16788 RET
	0x01E1678C BL 0x1C16F20
	0x01E16790 STR X30, [X31 - 0x30]!
	0x01E16794 STP X22, X21, [X31 + 0x10]
	0x01E16798 STP X20, X19, [X31 + 0x20]
	0x01E1679C ADRP X22, 0x25C2000
	0x01E167A0 ADRP X21, 0x22E4000
	0x01E167A4 LDRB W8, [X22 + 0xE16]
	0x01E167A8 LDR X21, [X21 + 0x3B8]
	0x01E167AC MOV W19, W1
	0x01E167B0 MOV X20, X0
	0x01E167B4 TBNZ X8, 0x0, 0x1E167CC
	0x01E167B8 ADRP X0, 0x22E4000
	0x01E167BC LDR X0, [X0 + 0x3B8]
	0x01E167C0 BL 0x1C16CF4
	0x01E167C4 MOVZ W8, 0x1
	0x01E167C8 STRB W8, [X22 + 0xE16]
	0x01E167CC LDR X0, [X21]
	0x01E167D0 LDR X20, [X20 + 0x20]
	0x01E167D4 LDR W8, [X0 + 0xE0]
	0x01E167D8 CBNZ W8, 0x1E167E0
	0x01E167DC BL 0x1C16DFC
	0x01E167E0 CBZ X20, 0x1E1680C
	0x01E167E4 LDR X8, [X21]
	0x01E167E8 AND W2, W19, 0x1
	0x01E167EC MOV X0, X20
	0x01E167F0 LDP X20, X19, [X31 + 0x20]
	0x01E167F4 LDR X8, [X8 + 0xB8]
	0x01E167F8 LDP X22, X21, [X31 + 0x10]
	0x01E167FC MOV X3, X31
	0x01E16800 LDR W1, [X8]
	0x01E16804 LDR X30, [X31], #0x30
	0x01E16808 B 0x3BF60B8
	0x01E1680C BL 0x1C16F20
	0x01E16810 SUB X31, X31, 0x120
	0x01E16814 STP D15, D14, [X31 + 0x80]
	0x01E16818 STP D13, D12, [X31 + 0x90]
	0x01E1681C STP D11, D10, [X31 + 0xA0]
	0x01E16820 STP D9, D8, [X31 + 0xB0]
	0x01E16824 STP X29, X30, [X31 + 0xC0]
	0x01E16828 STP X28, X27, [X31 + 0xD0]
	0x01E1682C STP X26, X25, [X31 + 0xE0]
	0x01E16830 STP X24, X23, [X31 + 0xF0]
	0x01E16834 STP X22, X21, [X31 + 0x100]
	0x01E16838 STP X20, X19, [X31 + 0x110]
	0x01E1683C ADRP X20, 0x25C2000
	0x01E16840 LDRB W8, [X20 + 0xE05]
	0x01E16844 MOV X19, X0
	0x01E16848 TBNZ X8, 0x0, 0x1E168D8
	0x01E1684C ADRP X0, 0x22E3000
	0x01E16850 LDR X0, [X0 + 0x148]
	0x01E16854 BL 0x1C16CF4
	0x01E16858 ADRP X0, 0x22E2000
	0x01E1685C LDR X0, [X0 + 0xC20]
	0x01E16860 BL 0x1C16CF4
	0x01E16864 ADRP X0, 0x22E2000
	0x01E16868 LDR X0, [X0 + 0xC28]
	0x01E1686C BL 0x1C16CF4
	0x01E16870 ADRP X0, 0x22E2000
	0x01E16874 LDR X0, [X0 + 0xC30]
	0x01E16878 BL 0x1C16CF4
	0x01E1687C ADRP X0, 0x22E3000
	0x01E16880 LDR X0, [X0 + 0x150]
	0x01E16884 BL 0x1C16CF4
	0x01E16888 ADRP X0, 0x22E3000
	0x01E1688C LDR X0, [X0 + 0x158]
	0x01E16890 BL 0x1C16CF4
	0x01E16894 ADRP X0, 0x22E2000
	0x01E16898 LDR X0, [X0 + 0xC38]
	0x01E1689C BL 0x1C16CF4
	0x01E168A0 ADRP X0, 0x22E2000
	0x01E168A4 LDR X0, [X0 + 0xCB0]
	0x01E168A8 BL 0x1C16CF4
	0x01E168AC ADRP X0, 0x22DD000
	0x01E168B0 LDR X0, [X0 + 0x598]
	0x01E168B4 BL 0x1C16CF4
	0x01E168B8 ADRP X0, 0x22DD000
	0x01E168BC LDR X0, [X0 + 0x5F8]
	0x01E168C0 BL 0x1C16CF4
	0x01E168C4 ADRP X0, 0x22DF000
	0x01E168C8 LDR X0, [X0 + 0x9B0]
	0x01E168CC BL 0x1C16CF4
	0x01E168D0 MOVZ W8, 0x1
	0x01E168D4 STRB W8, [X20 + 0xE05]
	0x01E168D8 MOVI V0.2D, 0x0
	0x01E168DC MOV X0, X19

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x25C3000
	011 Move X21, 0x22E5000
	012 Move W8, [X20+3573]
	013 Move X21, [X21+744]
	014 Move X19, X1
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x22E5000
	020 Move X0, [X0+752]
	021 Call 0x1C17CF4
	022 Move X0, 0x22E5000
	023 Move X0, [X0+760]
	024 Call 0x1C17CF4
	025 Move X0, 0x22E5000
	026 Move X0, [X0+744]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+3573], W8
	030 Move X0, [X21]
	031 Call 0x1C17F10
	032 Move X1, X31
	033 Move X20, X0
	034 Call Random..ctor, X0
	035 Compare X19, 0
	036 JumpIfEqual {181}
	037 Move X10, 0x22E5000
	038 Move X8, [X19]
	039 Move X10, [X10+752]
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Move X1, [X10]
	042 Compare X9, 0
	043 JumpIfEqual {50}
	044 Move X10, [X8+176]
	045 Add X10, X10, 8
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Subtract X9, X9, 1
	049 Add X10, X10, 16
	050 Move W2, 1
	051 Move X0, X19
	052 Call 0x1C5D788
	053 Move W9, [X10]
	054 Add W9, W9, 1
	055 Add X8, X8, W9
	056 Add X0, X8, 312
	057 Move X8, [X0]
	058 Move X1, [X0+8]
	059 Move X0, X19
	060 NotImplemented "Instruction BLR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Compare X20, 0
	063 JumpIfEqual {181}
	064 Move X26, 0x22E5000
	065 Move X26, [X26+760]
	066 Move W21, W0
	067 Move X8, [X20]
	068 Move X0, X20
	069 Move W1, W21
	070 Move X9, [X8+424]
	071 Move X2, [X8+432]
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move X8, [X19]
	074 Move X1, [X26]
	075 Move W24, W0
	076 NotImplemented "Instruction LDRH not yet implemented."
	077 Compare X9, 0
	078 JumpIfEqual {85}
	079 Move X10, [X8+176]
	080 Add X10, X10, 8
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Subtract X9, X9, 1
	084 Add X10, X10, 16
	085 Move X0, X19
	086 Move W2, W31
	087 Call 0x1C5D788
	088 NotImplemented "Instruction LDRSW not yet implemented."
	089 Add X8, X8, X9
	090 Add X0, X8, 312
	091 Move X8, [X0]
	092 Move X2, [X0+8]
	093 Move X0, X19
	094 Move W1, W24
	095 Subtract W22, W21, 1
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move X8, [X19]
	098 Move X1, [X26]
	099 Move X23, X0
	100 NotImplemented "Instruction LDRH not yet implemented."
	101 Compare X9, 0
	102 JumpIfEqual {109}
	103 Move X10, [X8+176]
	104 Add X10, X10, 8
	105 NotImplemented "Instruction LDUR not yet implemented."
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Subtract X9, X9, 1
	108 Add X10, X10, 16
	109 Move X0, X19
	110 Move W2, W31
	111 Call 0x1C5D788
	112 NotImplemented "Instruction LDRSW not yet implemented."
	113 Add X8, X8, X9
	114 Add X0, X8, 312
	115 Move X8, [X0]
	116 Move X2, [X0+8]
	117 Move X0, X19
	118 Move W1, W22
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move X8, [X19]
	121 Move X1, [X26]
	122 Move X25, X0
	123 NotImplemented "Instruction LDRH not yet implemented."
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move W2, 1
	133 Move X0, X19
	134 Call 0x1C5D788
	135 Move W9, [X10]
	136 Add W9, W9, 1
	137 Add X8, X8, W9
	138 Add X0, X8, 312
	139 Move X8, [X0]
	140 Move X3, [X0+8]
	141 Move X0, X19
	142 Move W1, W24
	143 Move X2, X25
	144 NotImplemented "Instruction BLR not yet implemented."
	145 Move X8, [X19]
	146 Move X1, [X26]
	147 NotImplemented "Instruction LDRH not yet implemented."
	148 Compare X9, 0
	149 JumpIfEqual {156}
	150 Move X10, [X8+176]
	151 Add X10, X10, 8
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Subtract X9, X9, 1
	155 Add X10, X10, 16
	156 Move W2, 1
	157 Move X0, X19
	158 Call 0x1C5D788
	159 Move W9, [X10]
	160 Add W9, W9, 1
	161 Add X8, X8, W9
	162 Add X0, X8, 312
	163 Move X8, [X0]
	164 Move X3, [X0+8]
	165 Move X0, X19
	166 Move W1, W22
	167 Move X2, X23
	168 NotImplemented "Instruction BLR not yet implemented."
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move W21, W22
	171 Move X20, [X31+64]
	172 Move X19, [X31+72]
	173 Move X22, [X31+48]
	174 Move X21, [X31+56]
	175 Move X24, [X31+32]
	176 Move X23, [X31+40]
	177 Move X26, [X31+16]
	178 Move X25, [X31+24]
	179 Move X30, [X31+80]
	180 Return 
	181 Call 0x1C17F20

Method: System.Void CleanupHeirarchy()

Disassembly:
	0x01E1216C ADD X8, X31, 0x10
	0x01E12170 BL 0x275A7AC
	0x01E12174 LDR V0, [X31 + 0x1]
	0x01E12178 LDR X8, [X31 + 0x20]
	0x01E1217C STR V0, [X31 + 0x6]
	0x01E12180 STR X8, [X31 + 0x70]
	0x01E12184 LDR X1, [X24]
	0x01E12188 ADD X0, X31, 0x60
	0x01E1218C BL 0x2C0B1F0
	0x01E12190 TBZ X0, 0x0, 0x1E12314
	0x01E12194 LDR X8, [X31 + 0x70]
	0x01E12198 CBZ X8, 0x1E123C0
	0x01E1219C LDR X0, [X8 + 0x18]
	0x01E121A0 CBZ X0, 0x1E123C4
	0x01E121A4 LDR X2, [X25]
	0x01E121A8 MOVZ W1, 0x1
	0x01E121AC BL 0x21E5F84
	0x01E121B0 MOV X19, X0
	0x01E121B4 CBZ X0, 0x1E123BC
	0x01E121B8 LDR W8, [X19 + 0x18]
	0x01E121BC CMP W8, 0x1
	0x01E121C0 B.LT 0x1E12184
	0x01E121C4 MOV W21, W31
	0x01E121C8 CMP W21, W8
	0x01E121CC B.CS 0x1E12344
	0x01E121D0 ADD X8, X19, W21, 0x3, SXTW
	0x01E121D4 LDR X20, [X8 + 0x20]
	0x01E121D8 CBZ X20, 0x1E12348
	0x01E121DC MOV X0, X20
	0x01E121E0 MOV X1, X31
	0x01E121E4 BL 0x3C32ECC
	0x01E121E8 CBZ X0, 0x1E1234C
	0x01E121EC LDR X2, [X26]
	0x01E121F0 ADD X1, X31, 0x88
	0x01E121F4 BL 0x21E6600
	0x01E121F8 TBZ X0, 0x0, 0x1E12220
	0x01E121FC LDR X0, [X31 + 0x88]
	0x01E12200 CBZ X0, 0x1E12380
	0x01E12204 MOV X1, X31
	0x01E12208 BL 0x3C32ECC
	0x01E1220C CBZ X0, 0x1E12384
	0x01E12210 MOVZ W1, 0x7
	0x01E12214 MOV X2, X31
	0x01E12218 BL 0x3C35770
	0x01E1221C B 0x1E12300
	0x01E12220 MOV X0, X20
	0x01E12224 MOV X1, X31
	0x01E12228 BL 0x3C32ECC
	0x01E1222C CBZ X0, 0x1E1237C
	0x01E12230 LDR X2, [X27]
	0x01E12234 ADD X1, X31, 0x38
	0x01E12238 BL 0x21E6600
	0x01E1223C TBZ X0, 0x0, 0x1E122AC
	0x01E12240 MOV X0, X20
	0x01E12244 MOV X1, X31
	0x01E12248 BL 0x3C32ECC
	0x01E1224C CBZ X0, 0x1E12388
	0x01E12250 LDR X2, [X28]
	0x01E12254 ADD X1, X31, 0x30
	0x01E12258 BL 0x21E6600
	0x01E1225C TBZ X0, 0x0, 0x1E12288
	0x01E12260 LDR X0, [X31 + 0x30]
	0x01E12264 CBZ X0, 0x1E12398
	0x01E12268 MOV X1, X31
	0x01E1226C BL 0x3C8F78C
	0x01E12270 TBNZ X0, 0x0, 0x1E12288
	0x01E12274 LDR X0, [X31 + 0x30]
	0x01E12278 CBZ X0, 0x1E123A8
	0x01E1227C MOVZ W1, 0x1
	0x01E12280 MOV X2, X31
	0x01E12284 BL 0x3C8F7C8
	0x01E12288 LDR X0, [X31 + 0x38]
	0x01E1228C CBZ X0, 0x1E12394
	0x01E12290 MOV X1, X31
	0x01E12294 BL 0x3C32ECC
	0x01E12298 CBZ X0, 0x1E1238C
	0x01E1229C MOVZ W1, 0x15
	0x01E122A0 MOV X2, X31
	0x01E122A4 BL 0x3C35770
	0x01E122A8 B 0x1E12300
	0x01E122AC MOV X0, X20
	0x01E122B0 MOV X1, X31
	0x01E122B4 BL 0x3C32ECC
	0x01E122B8 CBZ X0, 0x1E12390
	0x01E122BC LDR X2, [X28]
	0x01E122C0 ADD X1, X31, 0x28
	0x01E122C4 BL 0x21E6600
	0x01E122C8 TBZ X0, 0x0, 0x1E12300
	0x01E122CC LDR X0, [X31 + 0x28]
	0x01E122D0 CBZ X0, 0x1E1239C
	0x01E122D4 MOV X1, X31
	0x01E122D8 BL 0x3C8F78C
	0x01E122DC TBNZ X0, 0x0, 0x1E12300
	0x01E122E0 LDR X0, [X31 + 0x28]
	0x01E122E4 CBZ X0, 0x1E123A0
	0x01E122E8 MOV X1, X31
	0x01E122EC BL 0x3C32ECC
	0x01E122F0 CBZ X0, 0x1E123A4
	0x01E122F4 MOVZ W1, 0x1F
	0x01E122F8 MOV X2, X31
	0x01E122FC BL 0x3C35770
	0x01E12300 LDR W8, [X19 + 0x18]
	0x01E12304 ADD W21, W21, 0x1
	0x01E12308 CMP W21, W8
	0x01E1230C B.LT 0x1E121C8
	0x01E12310 B 0x1E12184
	0x01E12314 LDR X1, [X23]
	0x01E12318 ADD X0, X31, 0x60
	0x01E1231C BL 0x2C0B1EC
	0x01E12320 LDP X20, X19, [X31 + 0xE0]
	0x01E12324 LDP X22, X21, [X31 + 0xD0]
	0x01E12328 LDP X24, X23, [X31 + 0xC0]
	0x01E1232C LDP X26, X25, [X31 + 0xB0]
	0x01E12330 LDP X28, X27, [X31 + 0xA0]
	0x01E12334 LDP X29, X30, [X31 + 0x90]
	0x01E12338 LDR V8, [X31 + 0x80]
	0x01E1233C ADD X31, X31, 0xF0
	0x01E12340 RET
	0x01E12344 BL 0x1C16F28
	0x01E12348 BL 0x1C16F20
	0x01E1234C BL 0x1C16F20
	0x01E12350 MOV X19, X0
	0x01E12354 MOV X22, X31
	0x01E12358 LDR X1, [X23]
	0x01E1235C ADD X0, X31, 0x40
	0x01E12360 BL 0x2BC434C
	0x01E12364 ADRP X23, 0x22E7000
	0x01E12368 LDR X23, [X23 + 0xEE8]
	0x01E1236C MOV X0, X19
	0x01E12370 CBZ X22, 0x1E1240C
	0x01E12374 MOV X0, X22
	0x01E12378 BL 0x1C16F18
	0x01E1237C BL 0x1C16F20
	0x01E12380 BL 0x1C16F20
	0x01E12384 BL 0x1C16F20
	0x01E12388 BL 0x1C16F20
	0x01E1238C BL 0x1C16F20
	0x01E12390 BL 0x1C16F20
	0x01E12394 BL 0x1C16F20
	0x01E12398 BL 0x1C16F20
	0x01E1239C BL 0x1C16F20
	0x01E123A0 BL 0x1C16F20
	0x01E123A4 BL 0x1C16F20
	0x01E123A8 BL 0x1C16F20
	0x01E123AC BL 0x1C16F20
	0x01E123B0 BL 0x1C16F20
	0x01E123B4 MOV X0, X22
	0x01E123B8 BL 0x1C16F18
	0x01E123BC BL 0x1C16F20
	0x01E123C0 BL 0x1C16F20
	0x01E123C4 BL 0x1C16F20
	0x01E123C8 BL 0x1C16F20
	0x01E123CC MOV X20, X1
	0x01E123D0 MOV X19, X0
	0x01E123D4 B 0x1E12358
	0x01E123D8 B 0x1E124E0
	0x01E123DC B 0x1E12474
	0x01E123E0 B 0x1E12474
	0x01E123E4 B 0x1E12474
	0x01E123E8 B 0x1E12400
	0x01E123EC B 0x1E12400
	0x01E123F0 B 0x1E12400
	0x01E123F4 B 0x1E12400
	0x01E123F8 B 0x1E12400
	0x01E123FC B 0x1E124E0
	0x01E12400 ADRP X23, 0x22E7000
	0x01E12404 LDR X23, [X23 + 0xEE8]
	0x01E12408 MOV X20, X1
	0x01E1240C CMP W20, 0x1
	0x01E12410 B.NE 0x1E12438
	0x01E12414 BL 0x3EB1AD0
	0x01E12418 LDR X20, [X0]
	0x01E1241C BL 0x3EB1AE0
	0x01E12420 LDR X1, [X23]
	0x01E12424 ADD X0, X31, 0x60
	0x01E12428 BL 0x2C0B1EC
	0x01E1242C CBZ X20, 0x1E12138
	0x01E12430 MOV X0, X20
	0x01E12434 BL 0x1C16F18
	0x01E12438 MOV X21, X0
	0x01E1243C MOV X20, X31
	0x01E12440 B 0x1E12448
	0x01E12444 MOV X21, X0
	0x01E12448 ADRP X8, 0x22E7000
	0x01E1244C LDR X8, [X8 + 0xEE8]
	0x01E12450 LDR X1, [X8]
	0x01E12454 ADD X0, X31, 0x60
	0x01E12458 BL 0x2C0B1EC
	0x01E1245C CBZ X20, 0x1E12534
	0x01E12460 MOV X0, X20
	0x01E12464 BL 0x1C16F18
	0x01E12468 B 0x1E12474
	0x01E1246C B 0x1E12474
	0x01E12470 B 0x1E124E0
	0x01E12474 ADRP X23, 0x22E7000
	0x01E12478 LDR X23, [X23 + 0xEE8]
	0x01E1247C B 0x1E124E0
	0x01E12480 B 0x1E124E0
	0x01E12484 B 0x1E124E0
	0x01E12488 B 0x1E124E0
	0x01E1248C B 0x1E124E0
	0x01E12490 B 0x1E124E0
	0x01E12494 B 0x1E124E0
	0x01E12498 B 0x1E124E0
	0x01E1249C B 0x1E124E0
	0x01E124A0 B 0x1E124E0
	0x01E124A4 B 0x1E124E0
	0x01E124A8 B 0x1E124E0
	0x01E124AC B 0x1E124E0
	0x01E124B0 B 0x1E124E0
	0x01E124B4 B 0x1E124E0
	0x01E124B8 B 0x1E124E0
	0x01E124BC B 0x1E124E0
	0x01E124C0 B 0x1E124E0
	0x01E124C4 B 0x1E124E0
	0x01E124C8 B 0x1E124E0
	0x01E124CC B 0x1E124E0
	0x01E124D0 B 0x1E124E0
	0x01E124D4 B 0x1E124E0
	0x01E124D8 B 0x1E124E0
	0x01E124DC B 0x1E124E0
	0x01E124E0 CMP W1, 0x1
	0x01E124E4 B.NE 0x1E1250C
	0x01E124E8 BL 0x3EB1AD0
	0x01E124EC LDR X19, [X0]
	0x01E124F0 BL 0x3EB1AE0
	0x01E124F4 LDR X1, [X23]
	0x01E124F8 ADD X0, X31, 0x60
	0x01E124FC BL 0x2C0B1EC
	0x01E12500 CBZ X19, 0x1E12320
	0x01E12504 MOV X0, X19
	0x01E12508 BL 0x1C16F18
	0x01E1250C MOV X21, X0
	0x01E12510 MOV X19, X31
	0x01E12514 B 0x1E1251C
	0x01E12518 MOV X21, X0
	0x01E1251C ADRP X8, 0x22E7000
	0x01E12520 LDR X8, [X8 + 0xEE8]
	0x01E12524 LDR X1, [X8]
	0x01E12528 ADD X0, X31, 0x60
	0x01E1252C BL 0x2C0B1EC
	0x01E12530 CBNZ X19, 0x1E1253C
	0x01E12534 MOV X0, X21
	0x01E12538 BL 0x1D2C690
	0x01E1253C MOV X0, X19
	0x01E12540 BL 0x1C16F18
	0x01E12544 BL 0x1990590
	0x01E12548 SUB X31, X31, 0xA0
	0x01E1254C STP X30, X27, [X31 + 0x50]
	0x01E12550 STP X26, X25, [X31 + 0x60]
	0x01E12554 STP X24, X23, [X31 + 0x70]
	0x01E12558 STP X22, X21, [X31 + 0x80]
	0x01E1255C STP X20, X19, [X31 + 0x90]
	0x01E12560 ADRP X22, 0x25C6000
	0x01E12564 ADRP X21, 0x22E6000
	0x01E12568 ADRP X20, 0x22E6000
	0x01E1256C LDRB W8, [X22 + 0xDF0]
	0x01E12570 LDR X21, [X21 + 0x580]
	0x01E12574 LDR X20, [X20 + 0x588]
	0x01E12578 MOV X19, X0
	0x01E1257C TBNZ X8, 0x0, 0x1E12624
	0x01E12580 ADRP X0, 0x22E7000
	0x01E12584 LDR X0, [X0 + 0xEE0]
	0x01E12588 BL 0x1C16CF4
	0x01E1258C ADRP X0, 0x22E7000
	0x01E12590 LDR X0, [X0 + 0xEE8]
	0x01E12594 BL 0x1C16CF4
	0x01E12598 ADRP X0, 0x22E7000
	0x01E1259C LDR X0, [X0 + 0xFD0]
	0x01E125A0 BL 0x1C16CF4
	0x01E125A4 ADRP X0, 0x22E7000
	0x01E125A8 LDR X0, [X0 + 0xEF0]
	0x01E125AC BL 0x1C16CF4
	0x01E125B0 ADRP X0, 0x22E7000
	0x01E125B4 LDR X0, [X0 + 0xFD8]
	0x01E125B8 BL 0x1C16CF4
	0x01E125BC ADRP X0, 0x22E7000
	0x01E125C0 LDR X0, [X0 + 0xEF8]
	0x01E125C4 BL 0x1C16CF4
	0x01E125C8 ADRP X0, 0x22E7000
	0x01E125CC LDR X0, [X0 + 0xFE0]
	0x01E125D0 BL 0x1C16CF4
	0x01E125D4 ADRP X0, 0x22E7000
	0x01E125D8 LDR X0, [X0 + 0xFE8]
	0x01E125DC BL 0x1C16CF4
	0x01E125E0 ADRP X0, 0x22E7000
	0x01E125E4 LDR X0, [X0 + 0xFF0]
	0x01E125E8 BL 0x1C16CF4
	0x01E125EC ADRP X0, 0x22E7000
	0x01E125F0 LDR X0, [X0 + 0xFF8]
	0x01E125F4 BL 0x1C16CF4
	0x01E125F8 ADRP X0, 0x22E6000
	0x01E125FC LDR X0, [X0 + 0x588]
	0x01E12600 BL 0x1C16CF4
	0x01E12604 ADRP X0, 0x22E6000
	0x01E12608 LDR X0, [X0 + 0x580]
	0x01E1260C BL 0x1C16CF4
	0x01E12610 ADRP X0, 0x22E7000
	0x01E12614 LDR X0, [X0 + 0xF00]
	0x01E12618 BL 0x1C16CF4
	0x01E1261C MOVZ W8, 0x1
	0x01E12620 STRB W8, [X22 + 0xDF0]
	0x01E12624 LDR X0, [X21]
	0x01E12628 STP X31, X31, [X31 + 0x30]
	0x01E1262C STR X31, [X31 + 0x40]
	0x01E12630 STP X31, X31, [X31 + 0x18]
	0x01E12634 STR X31, [X31 + 0x28]
	0x01E12638 BL 0x1C16F10
	0x01E1263C LDR X1, [X20]
	0x01E12640 MOV X20, X0
	0x01E12644 BL 0x301B7C4
	0x01E12648 LDR X8, [X19 + 0x28]
	0x01E1264C CBZ X8, 0x1E1279C
	0x01E12650 LDR X0, [X8 + 0x10]
	0x01E12654 CBZ X0, 0x1E1279C
	0x01E12658 ADRP X8, 0x22E7000
	0x01E1265C LDR X8, [X8 + 0xEE0]
	0x01E12660 LDR X1, [X8]
	0x01E12664 BL 0x2AA4F58
	0x01E12668 CBZ X0, 0x1E1279C
	0x01E1266C ADRP X8, 0x22E7000
	0x01E12670 LDR X8, [X8 + 0xF00]
	0x01E12674 ADRP X21, 0x22E7000
	0x01E12678 ADRP X26, 0x22E7000
	0x01E1267C ADRP X27, 0x22E7000
	0x01E12680 ADRP X24, 0x22E7000
	0x01E12684 LDR X21, [X21 + 0xEF0]
	0x01E12688 LDR X26, [X26 + 0xFE8]
	0x01E1268C LDR X27, [X27 + 0xFF0]
	0x01E12690 LDR X24, [X24 + 0xFF8]
	0x01E12694 LDR X1, [X8]
	0x01E12698 ADRP X23, 0x22E7000
	0x01E1269C ADRP X22, 0x22E7000
	0x01E126A0 ADRP X25, 0x22E7000
	0x01E126A4 LDR X23, [X23 + 0xFD8]
	0x01E126A8 LDR X22, [X22 + 0xFD0]
	0x01E126AC LDR X25, [X25 + 0xEE8]
	0x01E126B0 ADD X8, X31, 0x0
	0x01E126B4 BL 0x275A7AC
	0x01E126B8 LDR V0, [X31]
	0x01E126BC LDR X8, [X31 + 0x10]
	0x01E126C0 STR V0, [X31 + 0x3]
	0x01E126C4 STR X8, [X31 + 0x40]
	0x01E126C8 LDR X1, [X21]
	0x01E126CC ADD X0, X31, 0x30
	0x01E126D0 BL 0x2C0B1F0
	0x01E126D4 TBZ X0, 0x0, 0x1E12708
	0x01E126D8 LDR X8, [X31 + 0x40]
	0x01E126DC CBZ X8, 0x1E12794
	0x01E126E0 LDR X0, [X8 + 0x18]
	0x01E126E4 CBZ X0, 0x1E12798
	0x01E126E8 LDR X1, [X26]
	0x01E126EC BL 0x21E5F08
	0x01E126F0 MOV X1, X0
	0x01E126F4 CBZ X20, 0x1E12790
	0x01E126F8 LDR X2, [X27]
	0x01E126FC MOV X0, X20
	0x01E12700 BL 0x301C194
	0x01E12704 B 0x1E126C8
	0x01E12708 LDR X1, [X25]
	0x01E1270C ADD X0, X31, 0x30
	0x01E12710 BL 0x2C0B1EC
	0x01E12714 CBZ X20, 0x1E1279C
	0x01E12718 LDR X1, [X24]
	0x01E1271C ADD X8, X31, 0x18
	0x01E12720 MOV X0, X20
	0x01E12724 BL 0x301CB58
	0x01E12728 LDR X1, [X23]
	0x01E1272C ADD X0, X31, 0x18
	0x01E12730 BL 0x2BC4350
	0x01E12734 TBZ X0, 0x0, 0x1E12760
	0x01E12738 LDR X0, [X31 + 0x28]
	0x01E1273C CBZ X0, 0x1E12788
	0x01E12740 MOV X1, X31
	0x01E12744 BL 0x3C32E90
	0x01E12748 CBZ X0, 0x1E1278C
	0x01E1274C LDR X1, [X19 + 0x50]
	0x01E12750 MOVZ W2, 0x1
	0x01E12754 MOV X3, X31
	0x01E12758 BL 0x3C3FEB8
	0x01E1275C B 0x1E12728
	0x01E12760 LDR X1, [X22]
	0x01E12764 ADD X0, X31, 0x18
	0x01E12768 BL 0x2BC434C
	0x01E1276C LDP X20, X19, [X31 + 0x90]
	0x01E12770 LDP X22, X21, [X31 + 0x80]
	0x01E12774 LDP X24, X23, [X31 + 0x70]
	0x01E12778 LDP X26, X25, [X31 + 0x60]
	0x01E1277C LDP X30, X27, [X31 + 0x50]
	0x01E12780 ADD X31, X31, 0xA0
	0x01E12784 RET
	0x01E12788 BL 0x1C16F20
	0x01E1278C BL 0x1C16F20
	0x01E12790 BL 0x1C16F20
	0x01E12794 BL 0x1C16F20
	0x01E12798 BL 0x1C16F20
	0x01E1279C BL 0x1C16F20
	0x01E127A0 B 0x1E12814
	0x01E127A4 B 0x1E12814
	0x01E127A8 B 0x1E12814
	0x01E127AC B 0x1E127C0
	0x01E127B0 B 0x1E127C0
	0x01E127B4 B 0x1E127C0
	0x01E127B8 B 0x1E127C0
	0x01E127BC B 0x1E12814
	0x01E127C0 CMP W1, 0x1
	0x01E127C4 B.NE 0x1E127EC
	0x01E127C8 BL 0x3EB1AD0
	0x01E127CC LDR X20, [X0]
	0x01E127D0 BL 0x3EB1AE0
	0x01E127D4 LDR X1, [X22]
	0x01E127D8 ADD X0, X31, 0x18
	0x01E127DC BL 0x2BC434C
	0x01E127E0 CBZ X20, 0x1E1276C
	0x01E127E4 MOV X0, X20
	0x01E127E8 BL 0x1C16F18
	0x01E127EC MOV X19, X0
	0x01E127F0 MOV X20, X31
	0x01E127F4 B 0x1E127FC
	0x01E127F8 MOV X19, X0
	0x01E127FC LDR X1, [X22]
	0x01E12800 ADD X0, X31, 0x18
	0x01E12804 BL 0x2BC434C
	0x01E12808 CBZ X20, 0x1E12860
	0x01E1280C MOV X0, X20
	0x01E12810 BL 0x1C16F18
	0x01E12814 CMP W1, 0x1
	0x01E12818 B.NE 0x1E12840
	0x01E1281C BL 0x3EB1AD0
	0x01E12820 LDR X21, [X0]
	0x01E12824 BL 0x3EB1AE0
	0x01E12828 LDR X1, [X25]
	0x01E1282C ADD X0, X31, 0x30
	0x01E12830 BL 0x2C0B1EC
	0x01E12834 CBZ X21, 0x1E12714
	0x01E12838 MOV X0, X21
	0x01E1283C BL 0x1C16F18
	0x01E12840 MOV X19, X0
	0x01E12844 MOV X21, X31
	0x01E12848 B 0x1E12850
	0x01E1284C MOV X19, X0
	0x01E12850 LDR X1, [X25]
	0x01E12854 ADD X0, X31, 0x30
	0x01E12858 BL 0x2C0B1EC

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+96], D10
	003 Move [X31+112], D9
	004 Move [X31+120], D8
	005 Move [X31+128], X29
	006 Move [X31+136], X30
	007 Move [X31+144], X28
	008 Move [X31+152], X27
	009 Move [X31+160], X26
	010 Move [X31+168], X25
	011 Move [X31+176], X24
	012 Move [X31+184], X23
	013 Move [X31+192], X22
	014 Move [X31+200], X21
	015 Move [X31+208], X20
	016 Move [X31+216], X19
	017 Move X20, 0x25C7000
	018 Move W8, [X20+3574]
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {65}
	024 Move X0, 0x22E8000
	025 Move X0, [X0+3808]
	026 Call 0x1C17CF4
	027 Move X0, 0x22E8000
	028 Move X0, [X0+3816]
	029 Call 0x1C17CF4
	030 Move X0, 0x22E8000
	031 Move X0, [X0+3888]
	032 Call 0x1C17CF4
	033 Move X0, 0x22E8000
	034 Move X0, [X0+3824]
	035 Call 0x1C17CF4
	036 Move X0, 0x22E8000
	037 Move X0, [X0+3896]
	038 Call 0x1C17CF4
	039 Move X0, 0x22E8000
	040 Move X0, [X0+3904]
	041 Call 0x1C17CF4
	042 Move X0, 0x22E8000
	043 Move X0, [X0+3832]
	044 Call 0x1C17CF4
	045 Move X0, 0x22E2000
	046 Move X0, [X0+2648]
	047 Call 0x1C17CF4
	048 Move X0, 0x22E8000
	049 Move X0, [X0+3912]
	050 Call 0x1C17CF4
	051 Move X0, 0x22E8000
	052 Move X0, [X0+3840]
	053 Call 0x1C17CF4
	054 Move X0, 0x22E8000
	055 Move X0, [X0+3920]
	056 Call 0x1C17CF4
	057 Move X0, 0x22E8000
	058 Move X0, [X0+3928]
	059 Call 0x1C17CF4
	060 Move X0, 0x22E8000
	061 Move X0, [X0+3936]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X20+3574], W8
	065 Move [X31+64], X31
	066 Move [X31+72], X31
	067 Move [X31+80], X31
	068 Move [X31+32], X31
	069 Move [X31+40], X31
	070 Move [X31+48], X31
	071 Move X8, [X19+40]
	072 Compare X8, 0
	073 JumpIfEqual {462}
	074 Move X0, [X8+16]
	075 Compare X0, 0
	076 JumpIfEqual {462}
	077 Move X8, 0x22E8000
	078 Move X8, [X8+3808]
	079 Move X1, [X8]
	080 Call Dictionary`2<Object, Object>.get_Values, X0
	081 Compare X0, 0
	082 JumpIfEqual {462}
	083 Move X8, 0x22E8000
	084 Move X8, [X8+3840]
	085 Move X29, 0x22E8000
	086 Move X21, 0x22E8000
	087 Move X23, 0x22E8000
	088 Move X28, 0x22E8000
	089 Move X24, 0x22E2000
	090 Move X26, 0x22E8000
	091 Move X29, [X29+3824]
	092 Move X21, [X21+3912]
	093 Move X23, [X23+3896]
	094 Move X28, [X28+3888]
	095 Move X24, [X24+2648]
	096 Move X26, [X26+3936]
	097 Move X1, [X8]
	098 Move X25, 0x22E8000
	099 Move X27, 0x22E8000
	100 Move X25, [X25+3928]
	101 Move X27, [X27+3816]
	102 Add X8, X31, 8
	103 Call ValueCollection<Object, Object>.GetEnumerator, X0
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 Move X8, [X31+24]
	106 Move [X31+4], V0
	107 Move [X31+80], X8
	108 Move X1, [X29]
	109 Add X0, X31, 64
	110 Call Enumerator<Object, Object>.MoveNext, X0
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {183}
	115 Move X22, [X31+80]
	116 Compare X22, 0
	117 JumpIfEqual {458}
	118 Move X0, [X22+24]
	119 Compare X0, 0
	120 JumpIfEqual {459}
	121 Move X1, X31
	122 Call GameObject.get_transform, X0
	123 Move X20, X0
	124 Move X0, [X19+56]
	125 Compare X0, 0
	126 JumpIfEqual {456}
	127 Move X1, X31
	128 Call Component.get_transform, X0
	129 Move X1, X0
	130 Compare X20, 0
	131 JumpIfEqual {457}
	132 Move X0, X20
	133 Move X2, X31
	134 Call Transform.set_parent, X0, X1
	135 Move X0, [X22+32]
	136 Compare X0, 0
	137 JumpIfEqual {455}
	138 Move X1, [X21]
	139 Add X8, X31, 8
	140 Call List`1<Object>.GetEnumerator, X0
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 Move X8, [X31+24]
	143 Move [X31+2], V0
	144 Move [X31+48], X8
	145 Move X1, [X23]
	146 Add X0, X31, 32
	147 Call Enumerator<Object>.MoveNext, X0
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {169}
	152 Move X0, [X31+48]
	153 Compare X0, 0
	154 JumpIfEqual {176}
	155 Move X1, X31
	156 Call Component.get_transform, X0
	157 Move X20, X0
	158 Move X0, [X22+24]
	159 Compare X0, 0
	160 JumpIfEqual {177}
	161 Move X1, X31
	162 Call GameObject.get_transform, X0
	163 Move X1, X0
	164 Compare X20, 0
	165 JumpIfEqual {175}
	166 Move X0, X20
	167 Move X2, X31
	168 Call Transform.set_parent, X0, X1
	169 Move X22, X31
	170 Move X1, [X28]
	171 Add X0, X31, 32
	172 Call Enumerator<Object>.Dispose, X0
	173 Compare X22, 0
	174 JumpIfEqual {108}
	175 Call 0x1C17F20
	176 Call 0x1C17F20
	177 Call 0x1C17F20
	178 Move X20, X1
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Call 0x3EB2AD0
	181 Move X22, [X0]
	182 Call 0x3EB2AE0
	183 Move X1, [X27]
	184 Add X0, X31, 64
	185 Call Enumerator<Object, Object>.Dispose, X0
	186 Move X0, [X24]
	187 Call 0x1C17F10
	188 Move X1, X31
	189 Move X20, X0
	190 Call GameObject..ctor, X0
	191 Compare X20, 0
	192 JumpIfEqual {462}
	193 Move X1, [X26]
	194 Move X0, X20
	195 Move X2, X31
	196 Call Object.set_name, X0, X1
	197 Move X0, X20
	198 Move X1, X31
	199 Call GameObject.get_transform, X0
	200 Move X8, [X19+56]
	201 Compare X8, 0
	202 JumpIfEqual {462}
	203 Move X21, X0
	204 Move X0, X8
	205 Move X1, X31
	206 Call Component.get_transform, X0
	207 Compare X21, 0
	208 JumpIfEqual {462}
	209 Move X1, X0
	210 Move X0, X21
	211 Move X2, X31
	212 Call Transform.set_parent, X0, X1
	213 Move X0, X20
	214 Move X1, X31
	215 Call GameObject.get_transform, X0
	216 Move X22, 0x25C7000
	217 Move W8, [X22+1923]
	218 Move X21, X0
	219 Compare W8, 0
	220 JumpIfNotEqual {226}
	221 Move X0, 0x22E2000
	222 Move X0, [X0+1440]
	223 Call 0x1C17CF4
	224 Move W8, 1
	225 Move [X22+1923], W8
	226 Move X26, 0x22E2000
	227 Move X26, [X26+1440]
	228 Move X23, 0x25C7000
	229 Move W9, [X23+1939]
	230 Move X8, [X26]
	231 Move X8, [X8+184]
	232 Move S10, [X8]
	233 Move S9, [X8+4]
	234 Move V8, [X8+8]
	235 Compare W9, 0
	236 JumpIfNotEqual {242}
	237 Move X0, 0x22E3000
	238 Move X0, [X0+1448]
	239 Call 0x1C17CF4
	240 Move W8, 1
	241 Move [X23+1939], W8
	242 Compare X21, 0
	243 JumpIfEqual {462}
	244 Move X27, 0x22E3000
	245 Move X27, [X27+1448]
	246 Move X0, X21
	247 Move V0, V10
	248 Move V1, V9
	249 Move X8, [X27]
	250 Move V2, V8
	251 Move X1, X31
	252 Move X8, [X8+184]
	253 Move S5, [X8+8]
	254 Move S6, [X8+12]
	255 Move S3, [X8]
	256 Move S4, [X8+4]
	257 Call Transform.SetLocalPositionAndRotation, X0, X1, X2
	258 Move X0, X20
	259 Move X1, X31
	260 Call GameObject.get_transform, X0
	261 Compare X0, 0
	262 JumpIfEqual {462}
	263 Move W1, W31
	264 Move X2, X31
	265 Call Transform.SetSiblingIndex, X0, X1
	266 Move X0, X20
	267 Move X1, X31
	268 Call GameObject.get_transform, X0
	269 Move [X19+64], X0
	270 Move X0, [X24]
	271 Call 0x1C17F10
	272 Move X1, X31
	273 Move X20, X0
	274 Call GameObject..ctor, X0
	275 Compare X20, 0
	276 JumpIfEqual {462}
	277 Move X1, [X25]
	278 Move X0, X20
	279 Move X2, X31
	280 Call Object.set_name, X0, X1
	281 Move X0, X20
	282 Move X1, X31
	283 Call GameObject.get_transform, X0
	284 Move X8, [X19+56]
	285 Compare X8, 0
	286 JumpIfEqual {462}
	287 Move X21, X0
	288 Move X0, X8
	289 Move X1, X31
	290 Call Component.get_transform, X0
	291 Compare X21, 0
	292 JumpIfEqual {462}
	293 Move X1, X0
	294 Move X0, X21
	295 Move X2, X31
	296 Call Transform.set_parent, X0, X1
	297 Move X0, X20
	298 Move X1, X31
	299 Call GameObject.get_transform, X0
	300 Move W8, [X22+1923]
	301 Move X21, X0
	302 Compare W8, 0
	303 JumpIfNotEqual {309}
	304 Move X0, 0x22E2000
	305 Move X0, [X0+1440]
	306 Call 0x1C17CF4
	307 Move W8, 1
	308 Move [X22+1923], W8
	309 Move X8, [X26]
	310 Move W9, [X23+1939]
	311 Move X8, [X8+184]
	312 Move S10, [X8]
	313 Move S9, [X8+4]
	314 Move V8, [X8+8]
	315 Compare W9, 0
	316 JumpIfNotEqual {322}
	317 Move X0, 0x22E3000
	318 Move X0, [X0+1448]
	319 Call 0x1C17CF4
	320 Move W8, 1
	321 Move [X23+1939], W8
	322 Compare X21, 0
	323 JumpIfEqual {462}
	324 Move X8, [X27]
	325 Move X0, X21
	326 Move V0, V10
	327 Move V1, V9
	328 Move X8, [X8+184]
	329 Move V2, V8
	330 Move X1, X31
	331 Move S5, [X8+8]
	332 Move S6, [X8+12]
	333 Move S3, [X8]
	334 Move S4, [X8+4]
	335 Call Transform.SetLocalPositionAndRotation, X0, X1, X2
	336 Move X0, X20
	337 Move X1, X31
	338 Call GameObject.get_transform, X0
	339 Compare X0, 0
	340 JumpIfEqual {462}
	341 Move W1, W31
	342 Move X2, X31
	343 Call Transform.SetSiblingIndex, X0, X1
	344 Move X0, X20
	345 Move X1, X31
	346 Call GameObject.get_transform, X0
	347 Move [X19+72], X0
	348 Move X0, [X24]
	349 Call 0x1C17F10
	350 Move X1, X31
	351 Move X20, X0
	352 Call GameObject..ctor, X0
	353 Compare X20, 0
	354 JumpIfEqual {462}
	355 Move X8, 0x22E8000
	356 Move X8, [X8+3920]
	357 Move X0, X20
	358 Move X2, X31
	359 Move X1, [X8]
	360 Call Object.set_name, X0, X1
	361 Move X0, X20
	362 Move X1, X31
	363 Call GameObject.get_transform, X0
	364 Move X8, [X19+56]
	365 Compare X8, 0
	366 JumpIfEqual {462}
	367 Move X21, X0
	368 Move X0, X8
	369 Move X1, X31
	370 Call Component.get_transform, X0
	371 Compare X21, 0
	372 JumpIfEqual {462}
	373 Move X1, X0
	374 Move X0, X21
	375 Move X2, X31
	376 Call Transform.set_parent, X0, X1
	377 Move X0, X20
	378 Move X1, X31
	379 Call GameObject.get_transform, X0
	380 Move W8, [X22+1923]
	381 Move X21, X0
	382 Compare W8, 0
	383 JumpIfNotEqual {389}
	384 Move X0, 0x22E2000
	385 Move X0, [X0+1440]
	386 Call 0x1C17CF4
	387 Move W8, 1
	388 Move [X22+1923], W8
	389 Move X8, [X26]
	390 Move W9, [X23+1939]
	391 Move X8, [X8+184]
	392 Move S10, [X8]
	393 Move S9, [X8+4]
	394 Move V8, [X8+8]
	395 Compare W9, 0
	396 JumpIfNotEqual {402}
	397 Move X0, 0x22E3000
	398 Move X0, [X0+1448]
	399 Call 0x1C17CF4
	400 Move W8, 1
	401 Move [X23+1939], W8
	402 Compare X21, 0
	403 JumpIfEqual {462}
	404 Move X8, [X27]
	405 Move X0, X21
	406 Move V0, V10
	407 Move V1, V9
	408 Move X8, [X8+184]
	409 Move V2, V8
	410 Move X1, X31
	411 Move S5, [X8+8]
	412 Move S6, [X8+12]
	413 Move S3, [X8]
	414 Move S4, [X8+4]
	415 Call Transform.SetLocalPositionAndRotation, X0, X1, X2
	416 Move X0, X20
	417 Move X1, X31
	418 Call GameObject.get_transform, X0
	419 Compare X0, 0
	420 JumpIfEqual {462}
	421 Move W1, W31
	422 Move X2, X31
	423 Call Transform.SetSiblingIndex, X0, X1
	424 Move X0, X20
	425 Move X1, X31
	426 Call GameObject.get_transform, X0
	427 Move [X19+80], X0
	428 Move X20, [X31+208]
	429 Move X19, [X31+216]
	430 Move X22, [X31+192]
	431 Move X21, [X31+200]
	432 Move X24, [X31+176]
	433 Move X23, [X31+184]
	434 Move X26, [X31+160]
	435 Move X25, [X31+168]
	436 Move X28, [X31+144]
	437 Move X27, [X31+152]
	438 Move X29, [X31+128]
	439 Move X30, [X31+136]
	440 Move D9, [X31+112]
	441 Move D8, [X31+120]
	442 Move V10, [X31+96]
	443 Add X31, X31, 224
	444 Return 
	445 Move X21, X0
	446 Move X22, X31
	447 Move X1, [X28]
	448 Add X0, X31, 32
	449 Call Enumerator<Object>.Dispose, X0
	450 Move X0, X21
	451 Compare X22, 0
	452 JumpIfEqual {466}
	453 Move X0, X22
	454 Call 0x1C17F18
	455 Call 0x1C17F20
	456 Call 0x1C17F20
	457 Call 0x1C17F20
	458 Call 0x1C17F20
	459 Call 0x1C17F20
	460 Move X0, X22
	461 Call 0x1C17F18
	462 Call 0x1C17F20
	463 Move X20, X1
	464 Move X21, X0
	465 Move X20, X1
	466 NotImplemented "Instruction CMP not yet implemented."
	467 Call 0x3EB2AD0
	468 Move X21, [X0]
	469 Call 0x3EB2AE0
	470 Move X1, [X27]
	471 Add X0, X31, 64
	472 Call Enumerator<Object, Object>.Dispose, X0
	473 Compare X21, 0
	474 JumpIfEqual {186}
	475 Move X0, X21
	476 Call 0x1C17F18
	477 Move X19, X0
	478 Move X21, X31
	479 Move X19, X0
	480 Move X1, [X27]
	481 Add X0, X31, 64
	482 Call Enumerator<Object, Object>.Dispose, X0
	483 Compare X21, 0
	484 JumpIfNotEqual {487}
	485 Move X0, X19
	486 Call 0x1D2D690
	487 Move X0, X21
	488 Call 0x1C17F18
	489 Call 0x1991590

