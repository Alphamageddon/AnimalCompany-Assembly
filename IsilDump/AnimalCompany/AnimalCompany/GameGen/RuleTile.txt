Type: AnimalCompany.GameGen.RuleTile

Method: System.Void RenderTile(AnimalCompany.GameGen.Archetype archetype)

Disassembly:
	0x01E0FA0C LDR X30, [X31], #0x20
	0x01E0FA10 B 0x3C357B4
	0x01E0FA14 BL 0x1C16F20
	0x01E0FA18 MOVZ W8, 0x3F000000
	0x01E0FA1C MOV X1, X31
	0x01E0FA20 STR W8, [X0 + 0x20]
	0x01E0FA24 B 0x3C36C30
	0x01E0FA28 STR X30, [X31 - 0x30]!
	0x01E0FA2C STP X22, X21, [X31 + 0x10]
	0x01E0FA30 STP X20, X19, [X31 + 0x20]
	0x01E0FA34 ADRP X21, 0x25C9000
	0x01E0FA38 ADRP X22, 0x22EA000
	0x01E0FA3C ADRP X20, 0x22E4000
	0x01E0FA40 LDRB W8, [X21 + 0xDE0]
	0x01E0FA44 LDR X22, [X22 + 0xDF0]
	0x01E0FA48 LDR X20, [X20 + 0x598]
	0x01E0FA4C MOV X19, X0
	0x01E0FA50 TBNZ X8, 0x0, 0x1E0FA8C
	0x01E0FA54 ADRP X0, 0x22EA000
	0x01E0FA58 LDR X0, [X0 + 0xDF0]
	0x01E0FA5C BL 0x1C16CF4
	0x01E0FA60 ADRP X0, 0x22E4000
	0x01E0FA64 LDR X0, [X0 + 0xA28]
	0x01E0FA68 BL 0x1C16CF4
	0x01E0FA6C ADRP X0, 0x22E4000
	0x01E0FA70 LDR X0, [X0 + 0x598]
	0x01E0FA74 BL 0x1C16CF4
	0x01E0FA78 ADRP X0, 0x22EA000
	0x01E0FA7C LDR X0, [X0 + 0xDF8]
	0x01E0FA80 BL 0x1C16CF4
	0x01E0FA84 MOVZ W8, 0x1
	0x01E0FA88 STRB W8, [X21 + 0xDE0]
	0x01E0FA8C LDR X1, [X22]
	0x01E0FA90 MOV X0, X19
	0x01E0FA94 BL 0x21A3894
	0x01E0FA98 LDR X8, [X20]
	0x01E0FA9C MOV X20, X0
	0x01E0FAA0 LDR W9, [X8 + 0xE0]
	0x01E0FAA4 CBNZ W9, 0x1E0FAB0
	0x01E0FAA8 MOV X0, X8
	0x01E0FAAC BL 0x1C16DFC
	0x01E0FAB0 MOV X0, X20
	0x01E0FAB4 MOV X1, X31
	0x01E0FAB8 MOV X2, X31
	0x01E0FABC BL 0x3C3883C
	0x01E0FAC0 TBZ X0, 0x0, 0x1E0FB30
	0x01E0FAC4 MOV X0, X19
	0x01E0FAC8 MOV X1, X31
	0x01E0FACC BL 0x3C32ECC
	0x01E0FAD0 CBZ X0, 0x1E0FB58
	0x01E0FAD4 MOV X1, X31
	0x01E0FAD8 BL 0x3C389D4
	0x01E0FADC ADRP X8, 0x22EA000
	0x01E0FAE0 LDR X8, [X8 + 0xDF8]
	0x01E0FAE4 MOV X1, X0
	0x01E0FAE8 MOV X2, X31
	0x01E0FAEC LDR X8, [X8]
	0x01E0FAF0 MOV X0, X8
	0x01E0FAF4 BL 0x321B938
	0x01E0FAF8 ADRP X8, 0x22E4000
	0x01E0FAFC LDR X8, [X8 + 0xA28]
	0x01E0FB00 MOV X19, X0
	0x01E0FB04 LDR X8, [X8]
	0x01E0FB08 LDR W9, [X8 + 0xE0]
	0x01E0FB0C CBNZ W9, 0x1E0FB18
	0x01E0FB10 MOV X0, X8
	0x01E0FB14 BL 0x1C16DFC
	0x01E0FB18 MOV X0, X19
	0x01E0FB1C LDP X20, X19, [X31 + 0x20]
	0x01E0FB20 LDP X22, X21, [X31 + 0x10]
	0x01E0FB24 MOV X1, X31
	0x01E0FB28 LDR X30, [X31], #0x30
	0x01E0FB2C B 0x3C06A04
	0x01E0FB30 LDP S0, S1, [X19 + 0x20]
	0x01E0FB34 MOV X0, X31
	0x01E0FB38 BL 0x3C30968
	0x01E0FB3C CBZ X20, 0x1E0FB58
	0x01E0FB40 MOV X0, X20
	0x01E0FB44 LDP X20, X19, [X31 + 0x20]
	0x01E0FB48 LDP X22, X21, [X31 + 0x10]
	0x01E0FB4C MOV X1, X31
	0x01E0FB50 LDR X30, [X31], #0x30
	0x01E0FB54 B 0x3C16928
	0x01E0FB58 BL 0x1C16F20
	0x01E0FB5C FMOV V0.2S, 0x0
	0x01E0FB60 MOV X1, X31
	0x01E0FB64 STR D0, [X0 + 0x20]
	0x01E0FB68 B 0x3C36C30
	0x01E0FB6C STR X30, [X31 - 0x50]!
	0x01E0FB70 STP X26, X25, [X31 + 0x10]
	0x01E0FB74 STP X24, X23, [X31 + 0x20]
	0x01E0FB78 STP X22, X21, [X31 + 0x30]
	0x01E0FB7C STP X20, X19, [X31 + 0x40]
	0x01E0FB80 ADRP X21, 0x25C9000
	0x01E0FB84 ADRP X22, 0x22EA000
	0x01E0FB88 ADRP X20, 0x22EA000
	0x01E0FB8C LDRB W8, [X21 + 0xDE1]
	0x01E0FB90 LDR X22, [X22 + 0xAE0]
	0x01E0FB94 LDR X20, [X20 + 0xAC0]
	0x01E0FB98 MOV X19, X0
	0x01E0FB9C TBNZ X8, 0x0, 0x1E0FBF0
	0x01E0FBA0 ADRP X0, 0x22EA000
	0x01E0FBA4 LDR X0, [X0 + 0xA10]
	0x01E0FBA8 BL 0x1C16CF4
	0x01E0FBAC ADRP X0, 0x22EA000
	0x01E0FBB0 LDR X0, [X0 + 0xAC0]
	0x01E0FBB4 BL 0x1C16CF4
	0x01E0FBB8 ADRP X0, 0x22EA000
	0x01E0FBBC LDR X0, [X0 + 0x9D8]
	0x01E0FBC0 BL 0x1C16CF4
	0x01E0FBC4 ADRP X0, 0x22EA000
	0x01E0FBC8 LDR X0, [X0 + 0x9E0]
	0x01E0FBCC BL 0x1C16CF4
	0x01E0FBD0 ADRP X0, 0x22EA000
	0x01E0FBD4 LDR X0, [X0 + 0xAE0]
	0x01E0FBD8 BL 0x1C16CF4
	0x01E0FBDC ADRP X0, 0x22E4000
	0x01E0FBE0 LDR X0, [X0 + 0x598]
	0x01E0FBE4 BL 0x1C16CF4
	0x01E0FBE8 MOVZ W8, 0x1
	0x01E0FBEC STRB W8, [X21 + 0xDE1]
	0x01E0FBF0 LDR X0, [X22]
	0x01E0FBF4 BL 0x1C16F10
	0x01E0FBF8 LDR X1, [X20]
	0x01E0FBFC MOV X20, X0
	0x01E0FC00 BL 0x301B7C4
	0x01E0FC04 MOV X0, X19
	0x01E0FC08 BL 0x1E0FD78
	0x01E0FC0C CBZ X20, 0x1E0FD74
	0x01E0FC10 ADRP X24, 0x22EA000
	0x01E0FC14 ADRP X25, 0x22EA000
	0x01E0FC18 ADRP X26, 0x22E4000
	0x01E0FC1C LDR X24, [X24 + 0xA10]
	0x01E0FC20 LDR X25, [X25 + 0x9E0]
	0x01E0FC24 LDR X26, [X26 + 0x598]
	0x01E0FC28 MOV X21, X0
	0x01E0FC2C LDR W10, [X20 + 0x1C]
	0x01E0FC30 LDR X8, [X20 + 0x10]
	0x01E0FC34 LDR X9, [X24]
	0x01E0FC38 ADD W10, W10, 0x1
	0x01E0FC3C STR W10, [X20 + 0x1C]
	0x01E0FC40 CBZ X8, 0x1E0FD74
	0x01E0FC44 LDRSW X10, [X20 + 0x18]
	0x01E0FC48 LDR W11, [X8 + 0x18]
	0x01E0FC4C CMP W10, W11
	0x01E0FC50 B.CS 0x1E0FC68
	0x01E0FC54 ADD W9, W10, 0x1
	0x01E0FC58 ADD X8, X8, X10, 0x3, LSL
	0x01E0FC5C STR W9, [X20 + 0x18]
	0x01E0FC60 STR X21, [X8 + 0x20]
	0x01E0FC64 B 0x1E0FC80
	0x01E0FC68 LDR X8, [X9 + 0x20]
	0x01E0FC6C MOV X0, X20
	0x01E0FC70 MOV X1, X21
	0x01E0FC74 LDR X8, [X8 + 0xC0]
	0x01E0FC78 LDR X2, [X8 + 0x70]
	0x01E0FC7C BL 0x301BF90
	0x01E0FC80 CBZ X19, 0x1E0FD74
	0x01E0FC84 LDR X2, [X25]
	0x01E0FC88 MOV X0, X19
	0x01E0FC8C MOV W1, W31
	0x01E0FC90 BL 0x301BCCC
	0x01E0FC94 LDR W8, [X19 + 0x18]
	0x01E0FC98 MOV X22, X0
	0x01E0FC9C CMP W8, 0x2
	0x01E0FCA0 B.LT 0x1E0FD18
	0x01E0FCA4 MOVZ W23, 0x1
	0x01E0FCA8 LDR X0, [X26]
	0x01E0FCAC LDR W8, [X0 + 0xE0]
	0x01E0FCB0 CBNZ W8, 0x1E0FCB8
	0x01E0FCB4 BL 0x1C16DFC
	0x01E0FCB8 MOV X0, X22
	0x01E0FCBC MOV X1, X21
	0x01E0FCC0 MOV X2, X31
	0x01E0FCC4 BL 0x3C3883C
	0x01E0FCC8 TBNZ X0, 0x0, 0x1E0FCF4
	0x01E0FCCC LDR X2, [X25]
	0x01E0FCD0 MOV X0, X19
	0x01E0FCD4 MOV W1, W23
	0x01E0FCD8 BL 0x301BCCC
	0x01E0FCDC MOV X2, X0
	0x01E0FCE0 MOV X0, X21
	0x01E0FCE4 MOV X1, X22
	0x01E0FCE8 BL 0x1E0FE60
	0x01E0FCEC FCMP S0, 0x0
	0x01E0FCF0 B.PL 0x1E0FD08
	0x01E0FCF4 LDR X2, [X25]
	0x01E0FCF8 MOV X0, X19
	0x01E0FCFC MOV W1, W23
	0x01E0FD00 BL 0x301BCCC
	0x01E0FD04 MOV X22, X0
	0x01E0FD08 LDR W8, [X19 + 0x18]
	0x01E0FD0C ADD W23, W23, 0x1
	0x01E0FD10 CMP W23, W8
	0x01E0FD14 B.LT 0x1E0FCA8
	0x01E0FD18 LDR X2, [X25]
	0x01E0FD1C MOV X0, X20
	0x01E0FD20 MOV W1, W31
	0x01E0FD24 BL 0x301BCCC
	0x01E0FD28 LDR X8, [X26]
	0x01E0FD2C MOV X21, X0
	0x01E0FD30 LDR W9, [X8 + 0xE0]
	0x01E0FD34 CBNZ W9, 0x1E0FD40
	0x01E0FD38 MOV X0, X8
	0x01E0FD3C BL 0x1C16DFC
	0x01E0FD40 MOV X0, X22
	0x01E0FD44 MOV X1, X21
	0x01E0FD48 MOV X2, X31
	0x01E0FD4C BL 0x3C3883C
	0x01E0FD50 MOV X21, X22
	0x01E0FD54 TBZ X0, 0x0, 0x1E0FC2C
	0x01E0FD58 MOV X0, X20
	0x01E0FD5C LDP X20, X19, [X31 + 0x40]
	0x01E0FD60 LDP X22, X21, [X31 + 0x30]
	0x01E0FD64 LDP X24, X23, [X31 + 0x20]
	0x01E0FD68 LDP X26, X25, [X31 + 0x10]
	0x01E0FD6C LDR X30, [X31], #0x50
	0x01E0FD70 RET
	0x01E0FD74 BL 0x1C16F20
	0x01E0FD78 STP X30, X23, [X31 - 0x30]!
	0x01E0FD7C STP X22, X21, [X31 + 0x10]
	0x01E0FD80 STP X20, X19, [X31 + 0x20]
	0x01E0FD84 ADRP X20, 0x25C9000
	0x01E0FD88 ADRP X21, 0x22EA000
	0x01E0FD8C LDRB W8, [X20 + 0xDE2]
	0x01E0FD90 LDR X21, [X21 + 0xE00]
	0x01E0FD94 MOV X19, X0
	0x01E0FD98 TBNZ X8, 0x0, 0x1E0FDE0
	0x01E0FD9C ADRP X0, 0x22EA000
	0x01E0FDA0 LDR X0, [X0 + 0xE08]
	0x01E0FDA4 BL 0x1C16CF4
	0x01E0FDA8 ADRP X0, 0x22EA000
	0x01E0FDAC LDR X0, [X0 + 0x9C8]
	0x01E0FDB0 BL 0x1C16CF4
	0x01E0FDB4 ADRP X0, 0x22EA000
	0x01E0FDB8 LDR X0, [X0 + 0x9D0]
	0x01E0FDBC BL 0x1C16CF4
	0x01E0FDC0 ADRP X0, 0x22EA000
	0x01E0FDC4 LDR X0, [X0 + 0xE10]
	0x01E0FDC8 BL 0x1C16CF4
	0x01E0FDCC ADRP X0, 0x22EA000
	0x01E0FDD0 LDR X0, [X0 + 0xE00]
	0x01E0FDD4 BL 0x1C16CF4
	0x01E0FDD8 MOVZ W8, 0x1
	0x01E0FDDC STRB W8, [X20 + 0xDE2]
	0x01E0FDE0 LDR X0, [X21]
	0x01E0FDE4 BL 0x1C16F10
	0x01E0FDE8 MOV X1, X31
	0x01E0FDEC MOV X20, X0
	0x01E0FDF0 BL 0x33BDD8C
	0x01E0FDF4 CBZ X20, 0x1E0FE5C
	0x01E0FDF8 ADRP X8, 0x22EA000
	0x01E0FDFC LDR X8, [X8 + 0x9D0]
	0x01E0FE00 STR X19, [X20 + 0x10]
	0x01E0FE04 ADRP X21, 0x22EA000
	0x01E0FE08 ADRP X22, 0x22EA000
	0x01E0FE0C LDR X0, [X8]
	0x01E0FE10 ADRP X23, 0x22EA000
	0x01E0FE14 LDR X21, [X21 + 0xE10]
	0x01E0FE18 LDR X22, [X22 + 0x9C8]
	0x01E0FE1C LDR X23, [X23 + 0xE08]
	0x01E0FE20 BL 0x1C16F10
	0x01E0FE24 LDR X2, [X21]
	0x01E0FE28 MOV X1, X20
	0x01E0FE2C MOV X3, X31
	0x01E0FE30 MOV X21, X0
	0x01E0FE34 BL 0x2D2F428
	0x01E0FE38 LDR X2, [X22]
	0x01E0FE3C MOV X0, X19
	0x01E0FE40 MOV X1, X21
	0x01E0FE44 BL 0x21DA490
	0x01E0FE48 LDR X1, [X23]
	0x01E0FE4C LDP X20, X19, [X31 + 0x20]
	0x01E0FE50 LDP X22, X21, [X31 + 0x10]
	0x01E0FE54 LDP X30, X23, [X31], #0x30
	0x01E0FE58 B 0x21C2FD4
	0x01E0FE5C BL 0x1C16F20
	0x01E0FE60 STR D14, [X31 - 0x60]!
	0x01E0FE64 STP D13, D12, [X31 + 0x10]
	0x01E0FE68 STP D11, D10, [X31 + 0x20]
	0x01E0FE6C STP D9, D8, [X31 + 0x30]
	0x01E0FE70 STP X30, X21, [X31 + 0x40]
	0x01E0FE74 STP X20, X19, [X31 + 0x50]
	0x01E0FE78 CBZ X1, 0x1E0FFB4
	0x01E0FE7C MOV X20, X1
	0x01E0FE80 MOV X19, X0
	0x01E0FE84 MOV X0, X1
	0x01E0FE88 MOV X1, X31
	0x01E0FE8C MOV X21, X2
	0x01E0FE90 BL 0x3C32E90
	0x01E0FE94 CBZ X0, 0x1E0FFB4
	0x01E0FE98 MOV X1, X31
	0x01E0FE9C BL 0x3C3F58C
	0x01E0FEA0 CBZ X19, 0x1E0FFB4
	0x01E0FEA4 MOV X0, X19
	0x01E0FEA8 MOV X1, X31
	0x01E0FEAC MOV V8.16B, V0.16B
	0x01E0FEB0 BL 0x3C32E90
	0x01E0FEB4 CBZ X0, 0x1E0FFB4
	0x01E0FEB8 MOV X1, X31
	0x01E0FEBC BL 0x3C3F58C
	0x01E0FEC0 CBZ X21, 0x1E0FFB4
	0x01E0FEC4 MOV X0, X21
	0x01E0FEC8 MOV X1, X31
	0x01E0FECC MOV V9.16B, V0.16B
	0x01E0FED0 BL 0x3C32E90
	0x01E0FED4 CBZ X0, 0x1E0FFB4
	0x01E0FED8 MOV X1, X31
	0x01E0FEDC BL 0x3C3F58C
	0x01E0FEE0 MOV X0, X19
	0x01E0FEE4 MOV X1, X31
	0x01E0FEE8 MOV V10.16B, V2.16B
	0x01E0FEEC BL 0x3C32E90
	0x01E0FEF0 CBZ X0, 0x1E0FFB4
	0x01E0FEF4 MOV X1, X31
	0x01E0FEF8 BL 0x3C3F58C
	0x01E0FEFC MOV X0, X21
	0x01E0FF00 MOV X1, X31
	0x01E0FF04 MOV V11.16B, V2.16B
	0x01E0FF08 BL 0x3C32E90
	0x01E0FF0C CBZ X0, 0x1E0FFB4
	0x01E0FF10 MOV X1, X31
	0x01E0FF14 BL 0x3C3F58C
	0x01E0FF18 MOV X0, X19
	0x01E0FF1C MOV X1, X31
	0x01E0FF20 MOV V12.16B, V0.16B
	0x01E0FF24 BL 0x3C32E90
	0x01E0FF28 CBZ X0, 0x1E0FFB4
	0x01E0FF2C MOV X1, X31
	0x01E0FF30 BL 0x3C3F58C
	0x01E0FF34 MOV X0, X20
	0x01E0FF38 MOV X1, X31
	0x01E0FF3C MOV V13.16B, V0.16B
	0x01E0FF40 BL 0x3C32E90
	0x01E0FF44 CBZ X0, 0x1E0FFB4
	0x01E0FF48 MOV X1, X31
	0x01E0FF4C BL 0x3C3F58C
	0x01E0FF50 MOV X0, X19
	0x01E0FF54 MOV X1, X31
	0x01E0FF58 MOV V14.16B, V2.16B
	0x01E0FF5C BL 0x3C32E90
	0x01E0FF60 CBZ X0, 0x1E0FFB4
	0x01E0FF64 MOV X1, X31
	0x01E0FF68 BL 0x3C3F58C
	0x01E0FF6C FSUB S0, S8, S9
	0x01E0FF70 FSUB S1, S10, S11
	0x01E0FF74 FSUB S3, S12, S13
	0x01E0FF78 FSUB S2, S14, S2
	0x01E0FF7C FMUL S0, S0, S1
	0x01E0FF80 FMUL S1, S3, S2
	0x01E0FF84 LDP X20, X19, [X31 + 0x50]
	0x01E0FF88 LDP X30, X21, [X31 + 0x40]
	0x01E0FF8C LDP D9, D8, [X31 + 0x30]
	0x01E0FF90 LDP D11, D10, [X31 + 0x20]
	0x01E0FF94 LDP D13, D12, [X31 + 0x10]
	0x01E0FF98 FSUB S0, S0, S1
	0x01E0FF9C FMOV S4, -1
	0x01E0FFA0 FCMP S0, 0x0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X22, 0x25CA000
	015 Move X21, 0x22E7000
	016 Move W8, [X22+3543]
	017 Move X21, [X21+2488]
	018 Move X20, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {50}
	024 Move X0, 0x22E7000
	025 Move X0, [X0+2488]
	026 Call 0x1C17CF4
	027 Move X0, 0x22EB000
	028 Move X0, [X0+3496]
	029 Call 0x1C17CF4
	030 Move X0, 0x22E5000
	031 Move X0, [X0+1928]
	032 Call 0x1C17CF4
	033 Move X0, 0x22EB000
	034 Move X0, [X0+3504]
	035 Call 0x1C17CF4
	036 Move X0, 0x22E5000
	037 Move X0, [X0+1432]
	038 Call 0x1C17CF4
	039 Move X0, 0x22EB000
	040 Move X0, [X0+3512]
	041 Call 0x1C17CF4
	042 Move X0, 0x22EB000
	043 Move X0, [X0+3520]
	044 Call 0x1C17CF4
	045 Move X0, 0x22EB000
	046 Move X0, [X0+3528]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X22+3543], W8
	050 Move X0, X19
	051 Move X1, X20
	052 Call Tile.RenderTile, X0, X1
	053 Move X0, [X21]
	054 Move W1, 4
	055 Call 0x1C17D6C
	056 Move X8, [X19+104]
	057 Compare X8, 0
	058 JumpIfEqual {380}
	059 Move X21, X0
	060 Compare X0, 0
	061 JumpIfEqual {380}
	062 Move X9, [X21+24]
	063 Compare W9, 0
	064 JumpIfEqual {379}
	065 Move W8, [X8+96]
	066 Move [X21+32], W8
	067 Move X8, [X19+88]
	068 Compare X8, 0
	069 JumpIfEqual {380}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move W8, [X8+96]
	072 Move [X21+33], W8
	073 Move X8, [X19+96]
	074 Compare X8, 0
	075 JumpIfEqual {380}
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move W8, [X8+96]
	078 Move [X21+34], W8
	079 Move X8, [X19+80]
	080 Compare X8, 0
	081 JumpIfEqual {380}
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move W8, [X8+96]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move [X21+35], W8
	086 Move [X31+12], W31
	087 Move W25, W31
	088 Move X8, X31
	089 Move W24, W31
	090 Move W11, W31
	091 And X9, X9, 0
	092 Add X10, X21, 32
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move W12, [X10]
	095 Compare W12, 0
	096 JumpIfNotEqual {102}
	097 And W31, W11, 1
	098 Add W25, W25, 1
	099 NotImplemented "Instruction CSEL not yet implemented."
	100 Move W11, 1
	101 Move [X31+12], W25
	102 Add X8, X8, 1
	103 NotImplemented "Instruction CMP not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Compare W25, 0
	107 JumpIfNotEqual {146}
	108 Move W1, 4
	109 Move W0, W31
	110 Move X2, X31
	111 Call Random.Range, X0, X1
	112 Move X8, [X19+72]
	113 Compare X8, 0
	114 JumpIfEqual {380}
	115 Move W22, W0
	116 Move X0, X8
	117 Move W1, W31
	118 Move W1, 4
	119 Move W0, W31
	120 Move X2, X31
	121 Call Random.Range, X0, X1
	122 Move X8, [X19+72]
	123 Compare X8, 0
	124 JumpIfEqual {380}
	125 Move W22, W0
	126 Move W1, 5
	127 Move X0, X8
	128 Move X8, [X21+24]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X22, X31
	131 Add X9, X21, 32
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move W10, [X9]
	134 Compare W10, 0
	135 JumpIfEqual {139}
	136 Add X22, X22, 1
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move W22, W31
	139 Move X0, [X19+72]
	140 Compare X0, 0
	141 JumpIfEqual {380}
	142 Move W1, 1
	143 Call RuledTileset.GetRandomTile, X0, X1
	144 Move X23, X0
	145 Subtract W22, W31, W22
	146 Move W22, W31
	147 Move X23, X31
	148 NotImplemented "Instruction CMP not yet implemented."
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Add W22, W24, 2
	151 Add W8, W24, 5
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move W9, [X21+24]
	154 NotImplemented "Instruction CSEL not yet implemented."
	155 And W8, W8, 0xFFFFFFFC
	156 Subtract W8, W22, W8
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move X0, [X19+72]
	159 Compare X0, 0
	160 JumpIfEqual {380}
	161 Add X8, X21, W8
	162 Move W8, [X8+32]
	163 Compare W8, 0
	164 JumpIfEqual {369}
	165 Move W1, 2
	166 Call RuledTileset.GetRandomTile, X0, X1
	167 Move X23, X0
	168 Compare W24, 0
	169 JumpIfNotEqual {175}
	170 Move W8, [X21+24]
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move W8, [X21+35]
	173 Compare W8, 0
	174 JumpIfEqual {378}
	175 Subtract W22, W31, W24
	176 Move X9, [X21+24]
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move X8, X31
	179 Add X10, X21, 32
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move W11, [X10]
	182 Compare W11, 0
	183 JumpIfNotEqual {187}
	184 Add X8, X8, 1
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move W8, W31
	187 Move X0, [X19+72]
	188 Compare X0, 0
	189 JumpIfEqual {380}
	190 Move W9, 3
	191 Subtract W22, W9, W8
	192 Move W1, 4
	193 Call RuledTileset.GetRandomTile, X0, X1
	194 Move X23, X0
	195 Move X21, 0x22E5000
	196 Move X21, [X21+1432]
	197 Move X0, [X21]
	198 Move W8, [X0+224]
	199 Compare W8, 0
	200 JumpIfNotEqual {202}
	201 Call 0x1C17DFC
	202 Move X0, X23
	203 Move X1, X31
	204 Move X2, X31
	205 Call Object.op_Equality, X0, X1
	206 Move TEMP, X0
	207 And TEMP, TEMP, 1
	208 Compare TEMP, 1
	209 JumpIfNotEqual {241}
	210 Add X0, X31, 12
	211 Move X1, X31
	212 Call Int32.ToString, X0
	213 Move X8, 0x22EB000
	214 Move X8, [X8+3520]
	215 Move X1, X0
	216 Move X2, X31
	217 Move X8, [X8]
	218 Move X0, X8
	219 Call String.Concat, X0, X1
	220 Move X8, 0x22E5000
	221 Move X8, [X8+1928]
	222 Move X19, X0
	223 Move X8, [X8]
	224 Move W9, [X8+224]
	225 Compare W9, 0
	226 JumpIfNotEqual {229}
	227 Move X0, X8
	228 Call 0x1C17DFC
	229 Move X8, 0x22EB000
	230 Move X9, 0x22EB000
	231 Move X8, [X8+3528]
	232 Move X9, [X9+3512]
	233 Move W0, 32
	234 Move W5, 163
	235 Move X3, [X8]
	236 Move X4, [X9]
	237 Move X1, X19
	238 Move X2, X31
	239 Move X6, X31
	240 Call Log.Error, X0, X1, X2, X3, X4, X5
	241 Move X0, [X21]
	242 Move W8, [X0+224]
	243 Compare W8, 0
	244 JumpIfNotEqual {246}
	245 Call 0x1C17DFC
	246 Move X8, 0x22EB000
	247 Move X8, [X8+3504]
	248 Move X0, X23
	249 Move X1, [X8]
	250 Call 0x222E35C, X0
	251 Compare X0, 0
	252 JumpIfEqual {380}
	253 Move X1, X31
	254 Move X21, X0
	255 Call Component.get_transform, X0
	256 Move X23, X0
	257 Move X0, X19
	258 Move X1, X31
	259 Call Component.get_transform, X0
	260 Compare X0, 0
	261 JumpIfEqual {380}
	262 Move X1, X31
	263 Call Transform.get_position, X0
	264 Compare X23, 0
	265 JumpIfEqual {380}
	266 Move X0, X23
	267 Move X1, X31
	268 Call Transform.set_position, X0, X1
	269 Move X0, X21
	270 Move X1, X31
	271 Call Component.get_transform, X0
	272 Move X8, -20070400
	273 Move V0, [X8+260]
	274 Move W8, 90
	275 Multiply W8, W22, W8
	276 NotImplemented "Instruction SCVTF not yet implemented."
	277 Move X23, X0
	278 Multiply S1, S1, S0
	279 Move S0, W31
	280 Move S2, W31
	281 Move X0, X31
	282 Call Quaternion.Internal_FromEulerRad, X0
	283 Move X0, X19
	284 Move X1, X31
	285 Move V9, V0
	286 Move V11, V1
	287 Move V8, V2
	288 Move V10, V3
	289 Call Component.get_transform, X0
	290 Compare X0, 0
	291 JumpIfEqual {380}
	292 Move X1, X31
	293 Call Transform.get_rotation, X0
	294 Compare X23, 0
	295 JumpIfEqual {380}
	296 Multiply S4, S10, S3
	297 Multiply S5, S9, S0
	298 Multiply S7, S8, S2
	299 Multiply S17, S10, S2
	300 Multiply S18, S8, S3
	301 Multiply S19, S11, S0
	302 Multiply S20, S11, S3
	303 Multiply S21, S11, S2
	304 Multiply S22, S9, S2
	305 Multiply S2, S9, S3
	306 Multiply S3, S8, S0
	307 Multiply S0, S10, S0
	308 Multiply S23, S10, S1
	309 Multiply S6, S11, S1
	310 Multiply S16, S9, S1
	311 Multiply S24, S8, S1
	312 Subtract S1, S4, S5
	313 Add S4, S17, S18
	314 Add S5, S23, S20
	315 Add S0, S0, S2
	316 Subtract S1, S1, S6
	317 Add S2, S16, S4
	318 Add S4, S3, S5
	319 Add S0, S21, S0
	320 Subtract S3, S1, S7
	321 Subtract S2, S2, S19
	322 Subtract S1, S4, S22
	323 Subtract S0, S0, S24
	324 Move X0, X23
	325 Move X1, X31
	326 Call Transform.set_localRotation, X0, X1
	327 Move X0, X21
	328 Move X1, X31
	329 Call Component.get_transform, X0
	330 Move X22, X0
	331 Move X0, X19
	332 Move X1, X31
	333 Call Component.get_transform, X0
	334 Compare X0, 0
	335 JumpIfEqual {380}
	336 Move X1, X31
	337 Call Component.get_transform, X0
	338 Compare X22, 0
	339 JumpIfEqual {380}
	340 Move X1, X0
	341 Move W2, 1
	342 Move X0, X22
	343 Move X3, X31
	344 Call Transform.SetParent, X0, X1, X2
	345 Move X8, 0x22EB000
	346 Move X8, [X8+3496]
	347 Move X0, X21
	348 Move X1, [X8]
	349 Call 0x21A4894, X0
	350 Compare X0, 0
	351 JumpIfEqual {380}
	352 Move X1, X20
	353 Move X2, X19
	354 Call RuledTile.RenderTile, X0, X1, X2
	355 Move X20, [X31+96]
	356 Move X19, [X31+104]
	357 Move X22, [X31+80]
	358 Move X21, [X31+88]
	359 Move X24, [X31+64]
	360 Move X23, [X31+72]
	361 Move X30, [X31+48]
	362 Move X25, [X31+56]
	363 Move D9, [X31+32]
	364 Move D8, [X31+40]
	365 Move D11, [X31+16]
	366 Move D10, [X31+24]
	367 Add X31, X31, 112
	368 Return 
	369 Move W1, 3
	370 Call RuledTileset.GetRandomTile, X0, X1
	371 Move X23, X0
	372 Move W1, 2
	373 Move W0, W31
	374 Move X2, X31
	375 Call Random.Range, X0, X1
	376 NotImplemented "Instruction CMP not yet implemented."
	377 NotImplemented "Instruction CSEL not yet implemented."
	378 Move W22, 1
	379 Call 0x1C17F28
	380 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01E102EC LDR X0, [X0 + 0xE58]

ISIL:
No ISIL was generated
