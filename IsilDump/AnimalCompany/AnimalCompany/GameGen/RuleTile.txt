Type: AnimalCompany.GameGen.RuleTile

Method: System.Void RenderTile(AnimalCompany.GameGen.Archetype archetype)

Disassembly:
	0x01CFC5F8 ADRP X21, 0x2527000
	0x01CFC5FC LDRB W8, [X21 + 0x719]
	0x01CFC600 MOV W20, W1
	0x01CFC604 MOV X19, X0
	0x01CFC608 TBNZ X8, 0x0, 0x1CFC668
	0x01CFC60C ADRP X0, 0x2254000
	0x01CFC610 LDR X0, [X0 + 0xB18]
	0x01CFC614 BL 0x1B6E7F0
	0x01CFC618 ADRP X0, 0x2254000
	0x01CFC61C LDR X0, [X0 + 0xB20]
	0x01CFC620 BL 0x1B6E7F0
	0x01CFC624 ADRP X0, 0x2254000
	0x01CFC628 LDR X0, [X0 + 0xB28]
	0x01CFC62C BL 0x1B6E7F0
	0x01CFC630 ADRP X0, 0x2254000
	0x01CFC634 LDR X0, [X0 + 0x7D8]
	0x01CFC638 BL 0x1B6E7F0
	0x01CFC63C ADRP X0, 0x2254000
	0x01CFC640 LDR X0, [X0 + 0x7E0]
	0x01CFC644 BL 0x1B6E7F0
	0x01CFC648 ADRP X0, 0x2254000
	0x01CFC64C LDR X0, [X0 + 0xB30]
	0x01CFC650 BL 0x1B6E7F0
	0x01CFC654 ADRP X0, 0x2254000
	0x01CFC658 LDR X0, [X0 + 0xB38]
	0x01CFC65C BL 0x1B6E7F0
	0x01CFC660 MOVZ W8, 0x1
	0x01CFC664 STRB W8, [X21 + 0x719]
	0x01CFC668 ADRP X23, 0x2254000
	0x01CFC66C LDR X23, [X23 + 0x7E0]
	0x01CFC670 TBZ X20, 0x0, 0x1CFC748
	0x01CFC674 ADRP X24, 0x2254000
	0x01CFC678 LDR X24, [X24 + 0xB38]
	0x01CFC67C LDR X20, [X19 + 0x38]
	0x01CFC680 LDR X0, [X24]
	0x01CFC684 LDR W8, [X0 + 0xE0]
	0x01CFC688 CBNZ W8, 0x1CFC694
	0x01CFC68C BL 0x1B6E8F8
	0x01CFC690 LDR X0, [X24]
	0x01CFC694 LDR X8, [X0 + 0xB8]
	0x01CFC698 LDR X21, [X8 + 0x8]
	0x01CFC69C CBNZ X21, 0x1CFC6F0
	0x01CFC6A0 LDR W8, [X0 + 0xE0]
	0x01CFC6A4 CBNZ W8, 0x1CFC6B0
	0x01CFC6A8 BL 0x1B6E8F8
	0x01CFC6AC LDR X0, [X24]
	0x01CFC6B0 ADRP X9, 0x2254000
	0x01CFC6B4 LDR X8, [X0 + 0xB8]
	0x01CFC6B8 LDR X9, [X9 + 0xB28]
	0x01CFC6BC LDR X22, [X8]
	0x01CFC6C0 LDR X0, [X9]
	0x01CFC6C4 BL 0x1B6EA0C
	0x01CFC6C8 ADRP X8, 0x2254000
	0x01CFC6CC LDR X8, [X8 + 0xB30]
	0x01CFC6D0 MOV X1, X22
	0x01CFC6D4 MOV X3, X31
	0x01CFC6D8 MOV X21, X0
	0x01CFC6DC LDR X2, [X8]
	0x01CFC6E0 BL 0x2B796E4
	0x01CFC6E4 LDR X8, [X24]
	0x01CFC6E8 LDR X8, [X8 + 0xB8]
	0x01CFC6EC STR X21, [X8 + 0x8]
	0x01CFC6F0 ADRP X8, 0x2254000
	0x01CFC6F4 LDR X8, [X8 + 0xB20]
	0x01CFC6F8 MOV X0, X20
	0x01CFC6FC MOV X1, X21
	0x01CFC700 LDR X2, [X8]
	0x01CFC704 BL 0x20C4374
	0x01CFC708 ADRP X8, 0x2254000
	0x01CFC70C LDR X8, [X8 + 0xB18]
	0x01CFC710 LDR X1, [X8]
	0x01CFC714 BL 0x20C23C4
	0x01CFC718 CBZ X0, 0x1CFC780
	0x01CFC71C LDR W1, [X0 + 0x18]
	0x01CFC720 MOV X20, X0
	0x01CFC724 CMP W1, 0x1
	0x01CFC728 B.LT 0x1CFC748
	0x01CFC72C MOV W0, W31
	0x01CFC730 MOV X2, X31
	0x01CFC734 BL 0x3A98D10
	0x01CFC738 LDR X2, [X23]
	0x01CFC73C MOV W1, W0
	0x01CFC740 MOV X0, X20
	0x01CFC744 B 0x1CFC76C
	0x01CFC748 LDR X19, [X19 + 0x38]
	0x01CFC74C CBZ X19, 0x1CFC780
	0x01CFC750 LDR W1, [X19 + 0x18]
	0x01CFC754 MOV W0, W31
	0x01CFC758 MOV X2, X31
	0x01CFC75C BL 0x3A98D10
	0x01CFC760 LDR X2, [X23]
	0x01CFC764 MOV W1, W0
	0x01CFC768 MOV X0, X19
	0x01CFC76C LDP X20, X19, [X31 + 0x30]
	0x01CFC770 LDP X22, X21, [X31 + 0x20]
	0x01CFC774 LDP X24, X23, [X31 + 0x10]
	0x01CFC778 LDR X30, [X31], #0x40
	0x01CFC77C B 0x2E46254
	0x01CFC780 BL 0x1B6EA1C
	0x01CFC784 SUB X31, X31, 0x90
	0x01CFC788 STP X30, X19, [X31 + 0x80]
	0x01CFC78C ADRP X8, 0xFFFFFFFFFEDAD000
	0x01CFC790 LDR V3, [X8 + 0xE20]
	0x01CFC794 MOV X19, X0
	0x01CFC798 FMOV S0, 1
	0x01CFC79C FMOV S1, 1
	0x01CFC7A0 FMOV S2, 1
	0x01CFC7A4 MOV X0, X31
	0x01CFC7A8 BL 0x3A75B14
	0x01CFC7AC MOV X0, X19
	0x01CFC7B0 MOV X1, X31
	0x01CFC7B4 BL 0x3A9B084
	0x01CFC7B8 CBZ X0, 0x1CFC810
	0x01CFC7BC ADD X8, X31, 0x40
	0x01CFC7C0 MOV X1, X31
	0x01CFC7C4 BL 0x3AA7294
	0x01CFC7C8 LDP V0, V1, [X31 + 0x40]
	0x01CFC7CC LDP V2, V3, [X31 + 0x60]
	0x01CFC7D0 ADD X0, X31, 0x0
	0x01CFC7D4 MOV X1, X31
	0x01CFC7D8 STP V0, V1, [X31]
	0x01CFC7DC STP V2, V3, [X31 + 0x20]
	0x01CFC7E0 BL 0x3A75C34
	0x01CFC7E4 LDP S2, S3, [X19 + 0x28]
	0x01CFC7E8 LDP S4, S5, [X19 + 0x30]
	0x01CFC7EC LDP S0, S1, [X19 + 0x20]
	0x01CFC7F0 MOV X0, X31
	0x01CFC7F4 FADD S3, S3, S3
	0x01CFC7F8 FADD S4, S4, S4
	0x01CFC7FC FADD S5, S5, S5
	0x01CFC800 BL 0x3A757BC
	0x01CFC804 LDP X30, X19, [X31 + 0x80]
	0x01CFC808 ADD X31, X31, 0x90
	0x01CFC80C RET
	0x01CFC810 BL 0x1B6EA1C
	0x01CFC814 STR X30, [X31 - 0x20]!
	0x01CFC818 STP X20, X19, [X31 + 0x10]
	0x01CFC81C ADRP X19, 0x2527000
	0x01CFC820 ADRP X20, 0x2254000
	0x01CFC824 LDRB W8, [X19 + 0x71B]
	0x01CFC828 LDR X20, [X20 + 0xB38]
	0x01CFC82C TBNZ X8, 0x0, 0x1CFC844
	0x01CFC830 ADRP X0, 0x2254000
	0x01CFC834 LDR X0, [X0 + 0xB38]
	0x01CFC838 BL 0x1B6E7F0
	0x01CFC83C MOVZ W8, 0x1
	0x01CFC840 STRB W8, [X19 + 0x71B]
	0x01CFC844 LDR X0, [X20]
	0x01CFC848 BL 0x1B6EA0C
	0x01CFC84C MOV X1, X31
	0x01CFC850 MOV X19, X0
	0x01CFC854 BL 0x32276F8
	0x01CFC858 LDR X8, [X20]
	0x01CFC85C LDR X8, [X8 + 0xB8]
	0x01CFC860 STR X19, [X8]
	0x01CFC864 LDP X20, X19, [X31 + 0x10]
	0x01CFC868 LDR X30, [X31], #0x20
	0x01CFC86C RET
	0x01CFC870 MOV X1, X31
	0x01CFC874 B 0x32276F8
	0x01CFC878 STR X30, [X31 - 0x10]!
	0x01CFC87C CBZ X1, 0x1CFC88C
	0x01CFC880 LDRB W0, [X1 + 0x24]
	0x01CFC884 LDR X30, [X31], #0x10
	0x01CFC888 RET
	0x01CFC88C BL 0x1B6EA1C
	0x01CFC890 STR X30, [X31 - 0x50]!
	0x01CFC894 STP X26, X25, [X31 + 0x10]
	0x01CFC898 STP X24, X23, [X31 + 0x20]
	0x01CFC89C STP X22, X21, [X31 + 0x30]
	0x01CFC8A0 STP X20, X19, [X31 + 0x40]
	0x01CFC8A4 ADRP X21, 0x2527000
	0x01CFC8A8 ADRP X22, 0x2254000
	0x01CFC8AC ADRP X20, 0x2254000
	0x01CFC8B0 LDRB W8, [X21 + 0x71C]
	0x01CFC8B4 LDR X22, [X22 + 0x7F8]
	0x01CFC8B8 LDR X20, [X20 + 0x7C8]
	0x01CFC8BC MOV X19, X0
	0x01CFC8C0 TBNZ X8, 0x0, 0x1CFC914
	0x01CFC8C4 ADRP X0, 0x2254000
	0x01CFC8C8 LDR X0, [X0 + 0x780]
	0x01CFC8CC BL 0x1B6E7F0
	0x01CFC8D0 ADRP X0, 0x2254000
	0x01CFC8D4 LDR X0, [X0 + 0x7C8]
	0x01CFC8D8 BL 0x1B6E7F0
	0x01CFC8DC ADRP X0, 0x2254000
	0x01CFC8E0 LDR X0, [X0 + 0x7D8]
	0x01CFC8E4 BL 0x1B6E7F0
	0x01CFC8E8 ADRP X0, 0x2254000
	0x01CFC8EC LDR X0, [X0 + 0x7E0]
	0x01CFC8F0 BL 0x1B6E7F0
	0x01CFC8F4 ADRP X0, 0x2254000
	0x01CFC8F8 LDR X0, [X0 + 0x7F8]
	0x01CFC8FC BL 0x1B6E7F0
	0x01CFC900 ADRP X0, 0x2251000
	0x01CFC904 LDR X0, [X0 + 0x478]
	0x01CFC908 BL 0x1B6E7F0
	0x01CFC90C MOVZ W8, 0x1
	0x01CFC910 STRB W8, [X21 + 0x71C]
	0x01CFC914 LDR X0, [X22]
	0x01CFC918 BL 0x1B6EA0C
	0x01CFC91C LDR X1, [X20]
	0x01CFC920 MOV X20, X0
	0x01CFC924 BL 0x2E45D4C
	0x01CFC928 MOV X0, X19
	0x01CFC92C BL 0x1CFCA9C
	0x01CFC930 CBZ X20, 0x1CFCA98
	0x01CFC934 ADRP X24, 0x2254000
	0x01CFC938 ADRP X25, 0x2254000
	0x01CFC93C ADRP X26, 0x2251000
	0x01CFC940 LDR X24, [X24 + 0x780]
	0x01CFC944 LDR X25, [X25 + 0x7E0]
	0x01CFC948 LDR X26, [X26 + 0x478]
	0x01CFC94C MOV X21, X0
	0x01CFC950 LDR W10, [X20 + 0x1C]
	0x01CFC954 LDR X8, [X20 + 0x10]
	0x01CFC958 LDR X9, [X24]
	0x01CFC95C ADD W10, W10, 0x1
	0x01CFC960 STR W10, [X20 + 0x1C]
	0x01CFC964 CBZ X8, 0x1CFCA98
	0x01CFC968 LDRSW X10, [X20 + 0x18]
	0x01CFC96C LDR W11, [X8 + 0x18]
	0x01CFC970 CMP W10, W11
	0x01CFC974 B.CS 0x1CFC98C
	0x01CFC978 ADD W9, W10, 0x1
	0x01CFC97C ADD X8, X8, X10, 0x3, LSL
	0x01CFC980 STR W9, [X20 + 0x18]
	0x01CFC984 STR X21, [X8 + 0x20]
	0x01CFC988 B 0x1CFC9A4
	0x01CFC98C LDR X8, [X9 + 0x20]
	0x01CFC990 MOV X0, X20
	0x01CFC994 MOV X1, X21
	0x01CFC998 LDR X8, [X8 + 0xC0]
	0x01CFC99C LDR X2, [X8 + 0x70]
	0x01CFC9A0 BL 0x2E46518
	0x01CFC9A4 CBZ X19, 0x1CFCA98
	0x01CFC9A8 LDR X2, [X25]
	0x01CFC9AC MOV X0, X19
	0x01CFC9B0 MOV W1, W31
	0x01CFC9B4 BL 0x2E46254
	0x01CFC9B8 LDR W8, [X19 + 0x18]
	0x01CFC9BC MOV X22, X0
	0x01CFC9C0 CMP W8, 0x2
	0x01CFC9C4 B.LT 0x1CFCA3C
	0x01CFC9C8 MOVZ W23, 0x1
	0x01CFC9CC LDR X0, [X26]
	0x01CFC9D0 LDR W8, [X0 + 0xE0]
	0x01CFC9D4 CBNZ W8, 0x1CFC9DC
	0x01CFC9D8 BL 0x1B6E8F8
	0x01CFC9DC MOV X0, X22
	0x01CFC9E0 MOV X1, X21
	0x01CFC9E4 MOV X2, X31
	0x01CFC9E8 BL 0x3AA0AF0
	0x01CFC9EC TBNZ X0, 0x0, 0x1CFCA18
	0x01CFC9F0 LDR X2, [X25]
	0x01CFC9F4 MOV X0, X19
	0x01CFC9F8 MOV W1, W23
	0x01CFC9FC BL 0x2E46254
	0x01CFCA00 MOV X2, X0
	0x01CFCA04 MOV X0, X21
	0x01CFCA08 MOV X1, X22
	0x01CFCA0C BL 0x1CFCB84
	0x01CFCA10 FCMP S0, 0x0
	0x01CFCA14 B.PL 0x1CFCA2C
	0x01CFCA18 LDR X2, [X25]
	0x01CFCA1C MOV X0, X19
	0x01CFCA20 MOV W1, W23
	0x01CFCA24 BL 0x2E46254
	0x01CFCA28 MOV X22, X0
	0x01CFCA2C LDR W8, [X19 + 0x18]
	0x01CFCA30 ADD W23, W23, 0x1
	0x01CFCA34 CMP W23, W8
	0x01CFCA38 B.LT 0x1CFC9CC
	0x01CFCA3C LDR X2, [X25]
	0x01CFCA40 MOV X0, X20
	0x01CFCA44 MOV W1, W31
	0x01CFCA48 BL 0x2E46254
	0x01CFCA4C LDR X8, [X26]
	0x01CFCA50 MOV X21, X0
	0x01CFCA54 LDR W9, [X8 + 0xE0]
	0x01CFCA58 CBNZ W9, 0x1CFCA64
	0x01CFCA5C MOV X0, X8
	0x01CFCA60 BL 0x1B6E8F8
	0x01CFCA64 MOV X0, X22
	0x01CFCA68 MOV X1, X21
	0x01CFCA6C MOV X2, X31
	0x01CFCA70 BL 0x3AA0AF0
	0x01CFCA74 MOV X21, X22
	0x01CFCA78 TBZ X0, 0x0, 0x1CFC950
	0x01CFCA7C MOV X0, X20
	0x01CFCA80 LDP X20, X19, [X31 + 0x40]
	0x01CFCA84 LDP X22, X21, [X31 + 0x30]
	0x01CFCA88 LDP X24, X23, [X31 + 0x20]
	0x01CFCA8C LDP X26, X25, [X31 + 0x10]
	0x01CFCA90 LDR X30, [X31], #0x50
	0x01CFCA94 RET
	0x01CFCA98 BL 0x1B6EA1C
	0x01CFCA9C STP X30, X23, [X31 - 0x30]!
	0x01CFCAA0 STP X22, X21, [X31 + 0x10]
	0x01CFCAA4 STP X20, X19, [X31 + 0x20]
	0x01CFCAA8 ADRP X20, 0x2527000
	0x01CFCAAC ADRP X21, 0x2254000
	0x01CFCAB0 LDRB W8, [X20 + 0x71D]
	0x01CFCAB4 LDR X21, [X21 + 0xB40]
	0x01CFCAB8 MOV X19, X0
	0x01CFCABC TBNZ X8, 0x0, 0x1CFCB04
	0x01CFCAC0 ADRP X0, 0x2254000
	0x01CFCAC4 LDR X0, [X0 + 0xB48]
	0x01CFCAC8 BL 0x1B6E7F0
	0x01CFCACC ADRP X0, 0x2254000
	0x01CFCAD0 LDR X0, [X0 + 0xB20]
	0x01CFCAD4 BL 0x1B6E7F0
	0x01CFCAD8 ADRP X0, 0x2254000
	0x01CFCADC LDR X0, [X0 + 0xB28]
	0x01CFCAE0 BL 0x1B6E7F0
	0x01CFCAE4 ADRP X0, 0x2254000
	0x01CFCAE8 LDR X0, [X0 + 0xB50]
	0x01CFCAEC BL 0x1B6E7F0
	0x01CFCAF0 ADRP X0, 0x2254000
	0x01CFCAF4 LDR X0, [X0 + 0xB40]
	0x01CFCAF8 BL 0x1B6E7F0
	0x01CFCAFC MOVZ W8, 0x1
	0x01CFCB00 STRB W8, [X20 + 0x71D]
	0x01CFCB04 LDR X0, [X21]
	0x01CFCB08 BL 0x1B6EA0C
	0x01CFCB0C MOV X1, X31
	0x01CFCB10 MOV X20, X0
	0x01CFCB14 BL 0x32276F8
	0x01CFCB18 CBZ X20, 0x1CFCB80
	0x01CFCB1C ADRP X8, 0x2254000
	0x01CFCB20 LDR X8, [X8 + 0xB28]
	0x01CFCB24 STR X19, [X20 + 0x10]
	0x01CFCB28 ADRP X21, 0x2254000
	0x01CFCB2C ADRP X22, 0x2254000
	0x01CFCB30 LDR X0, [X8]
	0x01CFCB34 ADRP X23, 0x2254000
	0x01CFCB38 LDR X21, [X21 + 0xB50]
	0x01CFCB3C LDR X22, [X22 + 0xB20]
	0x01CFCB40 LDR X23, [X23 + 0xB48]
	0x01CFCB44 BL 0x1B6EA0C
	0x01CFCB48 LDR X2, [X21]
	0x01CFCB4C MOV X1, X20
	0x01CFCB50 MOV X3, X31
	0x01CFCB54 MOV X21, X0
	0x01CFCB58 BL 0x2B796E4
	0x01CFCB5C LDR X2, [X22]
	0x01CFCB60 MOV X0, X19
	0x01CFCB64 MOV X1, X21
	0x01CFCB68 BL 0x20C4374
	0x01CFCB6C LDR X1, [X23]
	0x01CFCB70 LDP X20, X19, [X31 + 0x20]
	0x01CFCB74 LDP X22, X21, [X31 + 0x10]
	0x01CFCB78 LDP X30, X23, [X31], #0x30
	0x01CFCB7C B 0x20AEB90
	0x01CFCB80 BL 0x1B6EA1C
	0x01CFCB84 STR D14, [X31 - 0x60]!
	0x01CFCB88 STP D13, D12, [X31 + 0x10]
	0x01CFCB8C STP D11, D10, [X31 + 0x20]
	0x01CFCB90 STP D9, D8, [X31 + 0x30]
	0x01CFCB94 STP X30, X21, [X31 + 0x40]
	0x01CFCB98 STP X20, X19, [X31 + 0x50]
	0x01CFCB9C CBZ X1, 0x1CFCCD8

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X22, 0x2528000
	015 Move X21, 0x2255000
	016 Move W8, [X22+1813]
	017 Move X21, [X21+1024]
	018 Move X20, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {50}
	024 Move X0, 0x2255000
	025 Move X0, [X0+1024]
	026 Call 0x1B6F7F0
	027 Move X0, 0x2255000
	028 Move X0, [X0+2768]
	029 Call 0x1B6F7F0
	030 Move X0, 0x2252000
	031 Move X0, [X0+1576]
	032 Call 0x1B6F7F0
	033 Move X0, 0x2255000
	034 Move X0, [X0+2776]
	035 Call 0x1B6F7F0
	036 Move X0, 0x2252000
	037 Move X0, [X0+1144]
	038 Call 0x1B6F7F0
	039 Move X0, 0x2255000
	040 Move X0, [X0+2784]
	041 Call 0x1B6F7F0
	042 Move X0, 0x2255000
	043 Move X0, [X0+2792]
	044 Call 0x1B6F7F0
	045 Move X0, 0x2255000
	046 Move X0, [X0+2800]
	047 Call 0x1B6F7F0
	048 Move W8, 1
	049 Move [X22+1813], W8
	050 Move X0, X19
	051 Move X1, X20
	052 Call Tile.RenderTile, X0, X1
	053 Move X0, [X21]
	054 Move W1, 4
	055 Call 0x1B6F868
	056 Move X8, [X19+96]
	057 Compare X8, 0
	058 JumpIfEqual {384}
	059 Move X21, X0
	060 Compare X0, 0
	061 JumpIfEqual {384}
	062 Move X9, [X21+24]
	063 Compare W9, 0
	064 JumpIfEqual {383}
	065 Move W8, [X8+80]
	066 Move [X21+32], W8
	067 Move X8, [X19+80]
	068 Compare X8, 0
	069 JumpIfEqual {384}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move W8, [X8+80]
	072 Move [X21+33], W8
	073 Move X8, [X19+88]
	074 Compare X8, 0
	075 JumpIfEqual {384}
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move W8, [X8+80]
	078 Move [X21+34], W8
	079 Move X8, [X19+72]
	080 Compare X8, 0
	081 JumpIfEqual {384}
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move W8, [X8+80]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move [X21+35], W8
	086 Move [X31+12], W31
	087 Move W25, W31
	088 Move X8, X31
	089 Move W24, W31
	090 Move W11, W31
	091 And X9, X9, 0
	092 Add X10, X21, 32
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move W12, [X10]
	095 Compare W12, 0
	096 JumpIfNotEqual {102}
	097 And W31, W11, 1
	098 Add W25, W25, 1
	099 NotImplemented "Instruction CSEL not yet implemented."
	100 Move W11, 1
	101 Move [X31+12], W25
	102 Add X8, X8, 1
	103 NotImplemented "Instruction CMP not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Compare W25, 0
	107 JumpIfNotEqual {147}
	108 Move W1, 4
	109 Move W0, W31
	110 Move X2, X31
	111 Call Random.Range, X0, X1
	112 Move X8, [X19+64]
	113 Compare X8, 0
	114 JumpIfEqual {384}
	115 Move W22, W0
	116 Move X0, X8
	117 Move W1, W31
	118 Move W1, 4
	119 Move W0, W31
	120 Move X2, X31
	121 Call Random.Range, X0, X1
	122 Move X8, [X19+64]
	123 Compare X8, 0
	124 JumpIfEqual {384}
	125 Move W22, W0
	126 Move W1, 5
	127 Move X0, X8
	128 Move X8, [X21+24]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X22, X31
	131 Add X9, X21, 32
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move W10, [X9]
	134 Compare W10, 0
	135 JumpIfEqual {139}
	136 Add X22, X22, 1
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move W22, W31
	139 Move X0, [X19+64]
	140 Compare X0, 0
	141 JumpIfEqual {384}
	142 Move W1, 1
	143 Move X2, X31
	144 Call RuledTileset.GetRandomTile, X0, X1
	145 Move X23, X0
	146 Subtract W22, W31, W22
	147 Move W22, W31
	148 Move X23, X31
	149 NotImplemented "Instruction CMP not yet implemented."
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Add W22, W24, 2
	152 Add W8, W24, 5
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move W9, [X21+24]
	155 NotImplemented "Instruction CSEL not yet implemented."
	156 And W8, W8, 0xFFFFFFFC
	157 Subtract W8, W22, W8
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move X0, [X19+64]
	160 Compare X0, 0
	161 JumpIfEqual {384}
	162 Add X8, X21, W8
	163 Move W8, [X8+32]
	164 Compare W8, 0
	165 JumpIfEqual {372}
	166 Move W1, 2
	167 Move X2, X31
	168 Call RuledTileset.GetRandomTile, X0, X1
	169 Move X23, X0
	170 Compare W24, 0
	171 JumpIfNotEqual {177}
	172 Move W8, [X21+24]
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move W8, [X21+35]
	175 Compare W8, 0
	176 JumpIfEqual {382}
	177 Subtract W22, W31, W24
	178 Move X9, [X21+24]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move X8, X31
	181 Add X10, X21, 32
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Move W11, [X10]
	184 Compare W11, 0
	185 JumpIfNotEqual {189}
	186 Add X8, X8, 1
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move W8, W31
	189 Move X0, [X19+64]
	190 Compare X0, 0
	191 JumpIfEqual {384}
	192 Move W9, 3
	193 Subtract W22, W9, W8
	194 Move W1, 4
	195 Move X2, X31
	196 Call RuledTileset.GetRandomTile, X0, X1
	197 Move X23, X0
	198 Move X21, 0x2252000
	199 Move X21, [X21+1144]
	200 Move X0, [X21]
	201 Move W8, [X0+224]
	202 Compare W8, 0
	203 JumpIfNotEqual {205}
	204 Call 0x1B6F8F8
	205 Move X0, X23
	206 Move X1, X31
	207 Move X2, X31
	208 Call Object.op_Equality, X0, X1
	209 Move TEMP, X0
	210 And TEMP, TEMP, 1
	211 Compare TEMP, 1
	212 JumpIfNotEqual {244}
	213 Add X0, X31, 12
	214 Move X1, X31
	215 Call Int32.ToString, X0
	216 Move X8, 0x2255000
	217 Move X8, [X8+2800]
	218 Move X1, X0
	219 Move X2, X31
	220 Move X8, [X8]
	221 Move X0, X8
	222 Call String.Concat, X0, X1
	223 Move X8, 0x2252000
	224 Move X8, [X8+1576]
	225 Move X19, X0
	226 Move X8, [X8]
	227 Move W9, [X8+224]
	228 Compare W9, 0
	229 JumpIfNotEqual {232}
	230 Move X0, X8
	231 Call 0x1B6F8F8
	232 Move X8, 0x2255000
	233 Move X9, 0x2255000
	234 Move X8, [X8+2784]
	235 Move X9, [X9+2792]
	236 Move W0, 32
	237 Move W5, 163
	238 Move X3, [X8]
	239 Move X4, [X9]
	240 Move X1, X19
	241 Move X2, X31
	242 Move X6, X31
	243 Call Log.Error, X0, X1, X2, X3, X4, X5
	244 Move X0, [X21]
	245 Move W8, [X0+224]
	246 Compare W8, 0
	247 JumpIfNotEqual {249}
	248 Call 0x1B6F8F8
	249 Move X8, 0x2255000
	250 Move X8, [X8+2776]
	251 Move X0, X23
	252 Move X1, [X8]
	253 Call 0x2115D24, X0
	254 Compare X0, 0
	255 JumpIfEqual {384}
	256 Move X1, X31
	257 Move X21, X0
	258 Call Component.get_transform, X0
	259 Move X23, X0
	260 Move X0, X19
	261 Move X1, X31
	262 Call Component.get_transform, X0
	263 Compare X0, 0
	264 JumpIfEqual {384}
	265 Move X1, X31
	266 Call Transform.get_position, X0
	267 Compare X23, 0
	268 JumpIfEqual {384}
	269 Move X0, X23
	270 Move X1, X31
	271 Call Transform.set_position, X0, X1
	272 Move X0, X21
	273 Move X1, X31
	274 Call Component.get_transform, X0
	275 Move X8, -19210240
	276 Move V0, [X8+2804]
	277 Move W8, 90
	278 Multiply W8, W22, W8
	279 NotImplemented "Instruction SCVTF not yet implemented."
	280 Move X23, X0
	281 Multiply S1, S1, S0
	282 Move S0, W31
	283 Move S2, W31
	284 Move X0, X31
	285 Call Quaternion.Internal_FromEulerRad, X0
	286 Move X0, X19
	287 Move X1, X31
	288 Move V9, V0
	289 Move V11, V1
	290 Move V8, V2
	291 Move V10, V3
	292 Call Component.get_transform, X0
	293 Compare X0, 0
	294 JumpIfEqual {384}
	295 Move X1, X31
	296 Call Transform.get_rotation, X0
	297 Compare X23, 0
	298 JumpIfEqual {384}
	299 Multiply S4, S10, S3
	300 Multiply S5, S9, S0
	301 Multiply S7, S8, S2
	302 Multiply S17, S10, S2
	303 Multiply S18, S8, S3
	304 Multiply S19, S11, S0
	305 Multiply S20, S11, S3
	306 Multiply S21, S11, S2
	307 Multiply S22, S9, S2
	308 Multiply S2, S9, S3
	309 Multiply S3, S8, S0
	310 Multiply S0, S10, S0
	311 Multiply S23, S10, S1
	312 Multiply S6, S11, S1
	313 Multiply S16, S9, S1
	314 Multiply S24, S8, S1
	315 Subtract S1, S4, S5
	316 Add S4, S17, S18
	317 Add S5, S23, S20
	318 Add S0, S0, S2
	319 Subtract S1, S1, S6
	320 Add S2, S16, S4
	321 Add S4, S3, S5
	322 Add S0, S21, S0
	323 Subtract S3, S1, S7
	324 Subtract S2, S2, S19
	325 Subtract S1, S4, S22
	326 Subtract S0, S0, S24
	327 Move X0, X23
	328 Move X1, X31
	329 Call Transform.set_localRotation, X0, X1
	330 Move X0, X21
	331 Move X1, X31
	332 Call Component.get_transform, X0
	333 Move X22, X0
	334 Move X0, X19
	335 Move X1, X31
	336 Call Component.get_transform, X0
	337 Compare X0, 0
	338 JumpIfEqual {384}
	339 Move X1, X31
	340 Call Component.get_transform, X0
	341 Compare X22, 0
	342 JumpIfEqual {384}
	343 Move X1, X0
	344 Move W2, 1
	345 Move X0, X22
	346 Move X3, X31
	347 Call Transform.SetParent, X0, X1, X2
	348 Move X8, 0x2255000
	349 Move X8, [X8+2768]
	350 Move X0, X21
	351 Move X1, [X8]
	352 Call 0x2090DE8, X0
	353 Compare X0, 0
	354 JumpIfEqual {384}
	355 Move X1, X20
	356 Move X2, X19
	357 Call RuledTile.RenderTile, X0, X1, X2
	358 Move X20, [X31+96]
	359 Move X19, [X31+104]
	360 Move X22, [X31+80]
	361 Move X21, [X31+88]
	362 Move X24, [X31+64]
	363 Move X23, [X31+72]
	364 Move X30, [X31+48]
	365 Move X25, [X31+56]
	366 Move D9, [X31+32]
	367 Move D8, [X31+40]
	368 Move D11, [X31+16]
	369 Move D10, [X31+24]
	370 Add X31, X31, 112
	371 Return 
	372 Move W1, 3
	373 Move X2, X31
	374 Call RuledTileset.GetRandomTile, X0, X1
	375 Move X23, X0
	376 Move W1, 2
	377 Move W0, W31
	378 Move X2, X31
	379 Call Random.Range, X0, X1
	380 NotImplemented "Instruction CMP not yet implemented."
	381 NotImplemented "Instruction CSEL not yet implemented."
	382 Move W22, 1
	383 Call 0x1B6FA24
	384 Call 0x1B6FA1C

Method: System.Void .ctor()

Disassembly:
	0x01CFCEE8 LDR X21, [X21 + 0xB90]

ISIL:
No ISIL was generated
