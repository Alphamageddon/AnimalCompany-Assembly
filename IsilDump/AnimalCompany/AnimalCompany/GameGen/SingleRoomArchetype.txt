Type: AnimalCompany.GameGen.SingleRoomArchetype

Method: System.String get_NodeTitle()

Disassembly:
	0x01E0C3F0 MOV X0, X22
	0x01E0C3F4 BL 0x1D2C690
	0x01E0C3F8 MOV X0, X23
	0x01E0C3FC BL 0x1C16F18
	0x01E0C400 BL 0x1990590
	0x01E0C404 MOV X1, X31
	0x01E0C408 B 0x31CD6DC
	0x01E0C40C SUB X31, X31, 0x30
	0x01E0C410 STR X30, [X31 + 0x10]
	0x01E0C414 STP X20, X19, [X31 + 0x20]
	0x01E0C418 ADRP X20, 0x25CC000
	0x01E0C41C ADRP X19, 0x22ED000
	0x01E0C420 LDRB W8, [X20 + 0xDC9]
	0x01E0C424 LDR X19, [X19 + 0xD20]
	0x01E0C428 TBNZ X8, 0x0, 0x1E0C440
	0x01E0C42C ADRP X0, 0x22ED000
	0x01E0C430 LDR X0, [X0 + 0xD20]
	0x01E0C434 BL 0x1C16CF4
	0x01E0C438 MOVZ W8, 0x1
	0x01E0C43C STRB W8, [X20 + 0xDC9]
	0x01E0C440 LDR X0, [X19]
	0x01E0C444 ADD X1, X31, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x25CD000
	006 Move X20, 0x22EE000
	007 Move W8, [X21+3525]
	008 Move X20, [X20+3024]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22EE000
	015 Move X0, [X0+3024]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3525], W8
	019 Add X19, X19, 56
	020 Move X0, [X19]
	021 Move X1, X31
	022 Call String.IsNullOrEmpty, X0
	023 And W31, W0, 1
	024 NotImplemented "Instruction CSEL not yet implemented."
	025 Move X0, [X8]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.String get_NodeIcon()

Disassembly:
	0x01E0C448 MOV X2, X31
	0x01E0C44C STP X31, X31, [X31]
	0x01E0C450 BL 0x3C26394
	0x01E0C454 FMOV S0, 1
	0x01E0C458 FMOV S1, 1
	0x01E0C45C FMOV S2, 1
	0x01E0C460 FMOV S3, 1
	0x01E0C464 TBZ X0, 0x0, 0x1E0C470
	0x01E0C468 LDP S0, S1, [X31]
	0x01E0C46C LDP S2, S3, [X31 + 0x8]
	0x01E0C470 LDP X20, X19, [X31 + 0x20]
	0x01E0C474 LDR X30, [X31 + 0x10]
	0x01E0C478 ADD X31, X31, 0x30
	0x01E0C47C RET
	0x01E0C480 FMOV S0, W31
	0x01E0C484 FMOV S1, W31
	0x01E0C488 FMOV S2, W31
	0x01E0C48C FMOV S3, 1
	0x01E0C490 RET
	0x01E0C494 STR X30, [X31 - 0x20]!
	0x01E0C498 STP X20, X19, [X31 + 0x10]
	0x01E0C49C ADRP X19, 0x25CC000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x25CD000
	005 Move X19, 0x22EE000
	006 Move W8, [X20+3526]
	007 Move X19, [X19+2696]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22EE000
	013 Move X0, [X0+2696]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3526], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+152]
	027 Move X30, [X31+32]
	028 Return X0

Method: AnimalCompany.GameGen.NodeGenerationResponse Generate(AnimalCompany.GameGen.Socket source, AnimalCompany.GameGen.Generator generator)

Disassembly:
	0x01E0C4A0 ADRP X20, 0x22ED000
	0x01E0C4A4 LDRB W8, [X19 + 0xDCA]
	0x01E0C4A8 LDR X20, [X20 + 0xD28]
	0x01E0C4AC TBNZ X8, 0x0, 0x1E0C4C4
	0x01E0C4B0 ADRP X0, 0x22ED000
	0x01E0C4B4 LDR X0, [X0 + 0xD28]
	0x01E0C4B8 BL 0x1C16CF4
	0x01E0C4BC MOVZ W8, 0x1
	0x01E0C4C0 STRB W8, [X19 + 0xDCA]
	0x01E0C4C4 LDR X0, [X20]
	0x01E0C4C8 LDP X20, X19, [X31 + 0x10]
	0x01E0C4CC LDR X30, [X31], #0x20
	0x01E0C4D0 RET
	0x01E0C4D4 STP X30, X21, [X31 - 0x20]!
	0x01E0C4D8 STP X20, X19, [X31 + 0x10]
	0x01E0C4DC ADRP X21, 0x25CC000
	0x01E0C4E0 ADRP X20, 0x22E7000
	0x01E0C4E4 LDRB W8, [X21 + 0xDCB]
	0x01E0C4E8 LDR X20, [X20 + 0x598]
	0x01E0C4EC MOV X19, X0
	0x01E0C4F0 TBNZ X8, 0x0, 0x1E0C514
	0x01E0C4F4 ADRP X0, 0x22E7000
	0x01E0C4F8 LDR X0, [X0 + 0x598]
	0x01E0C4FC BL 0x1C16CF4
	0x01E0C500 ADRP X0, 0x22ED000
	0x01E0C504 LDR X0, [X0 + 0xD30]
	0x01E0C508 BL 0x1C16CF4
	0x01E0C50C MOVZ W8, 0x1
	0x01E0C510 STRB W8, [X21 + 0xDCB]
	0x01E0C514 LDR X0, [X20]
	0x01E0C518 LDR X20, [X19 + 0x38]
	0x01E0C51C LDR W8, [X0 + 0xE0]
	0x01E0C520 CBNZ W8, 0x1E0C528
	0x01E0C524 BL 0x1C16DFC
	0x01E0C528 MOV X0, X20
	0x01E0C52C MOV X1, X31
	0x01E0C530 MOV X2, X31
	0x01E0C534 BL 0x3C354F8
	0x01E0C538 TBZ X0, 0x0, 0x1E0C554
	0x01E0C53C LDR X0, [X19 + 0x38]
	0x01E0C540 CBZ X0, 0x1E0C56C
	0x01E0C544 LDP X20, X19, [X31 + 0x10]
	0x01E0C548 MOV X1, X31
	0x01E0C54C LDP X30, X21, [X31], #0x20
	0x01E0C550 B 0x3C389D4
	0x01E0C554 ADRP X8, 0x22ED000
	0x01E0C558 LDR X8, [X8 + 0xD30]
	0x01E0C55C LDP X20, X19, [X31 + 0x10]
	0x01E0C560 LDR X0, [X8]
	0x01E0C564 LDP X30, X21, [X31], #0x20
	0x01E0C568 RET
	0x01E0C56C BL 0x1C16F20
	0x01E0C570 SUB X31, X31, 0x50
	0x01E0C574 STP X30, X25, [X31 + 0x10]
	0x01E0C578 STP X24, X23, [X31 + 0x20]
	0x01E0C57C STP X22, X21, [X31 + 0x30]
	0x01E0C580 STP X20, X19, [X31 + 0x40]
	0x01E0C584 ADRP X24, 0x25CC000
	0x01E0C588 ADRP X20, 0x22ED000
	0x01E0C58C MOV X19, X8
	0x01E0C590 LDRB W8, [X24 + 0xDCC]
	0x01E0C594 LDR X20, [X20 + 0x9F0]
	0x01E0C598 MOV X22, X2
	0x01E0C59C MOV X23, X1
	0x01E0C5A0 MOV X21, X0
	0x01E0C5A4 TBNZ X8, 0x0, 0x1E0C61C
	0x01E0C5A8 ADRP X0, 0x22E7000
	0x01E0C5AC LDR X0, [X0 + 0xA58]
	0x01E0C5B0 BL 0x1C16CF4
	0x01E0C5B4 ADRP X0, 0x22ED000
	0x01E0C5B8 LDR X0, [X0 + 0xD38]
	0x01E0C5BC BL 0x1C16CF4
	0x01E0C5C0 ADRP X0, 0x22ED000
	0x01E0C5C4 LDR X0, [X0 + 0xAB8]
	0x01E0C5C8 BL 0x1C16CF4
	0x01E0C5CC ADRP X0, 0x22ED000
	0x01E0C5D0 LDR X0, [X0 + 0xAC0]
	0x01E0C5D4 BL 0x1C16CF4
	0x01E0C5D8 ADRP X0, 0x22ED000
	0x01E0C5DC LDR X0, [X0 + 0xAD0]
	0x01E0C5E0 BL 0x1C16CF4
	0x01E0C5E4 ADRP X0, 0x22ED000
	0x01E0C5E8 LDR X0, [X0 + 0xAE0]
	0x01E0C5EC BL 0x1C16CF4
	0x01E0C5F0 ADRP X0, 0x22ED000
	0x01E0C5F4 LDR X0, [X0 + 0x9F0]
	0x01E0C5F8 BL 0x1C16CF4
	0x01E0C5FC ADRP X0, 0x22ED000
	0x01E0C600 LDR X0, [X0 + 0xD40]
	0x01E0C604 BL 0x1C16CF4
	0x01E0C608 ADRP X0, 0x22E7000
	0x01E0C60C LDR X0, [X0 + 0xEC8]
	0x01E0C610 BL 0x1C16CF4
	0x01E0C614 MOVZ W8, 0x1
	0x01E0C618 STRB W8, [X24 + 0xDCC]
	0x01E0C61C LDR X0, [X20]
	0x01E0C620 STUR W31, [X31 + 0xB]
	0x01E0C624 STR W31, [X31 + 0x8]
	0x01E0C628 BL 0x1C16F10
	0x01E0C62C MOV X1, X31
	0x01E0C630 MOV X20, X0
	0x01E0C634 BL 0x1E1017C
	0x01E0C638 CBZ X20, 0x1E0C774
	0x01E0C63C ADRP X8, 0x22ED000
	0x01E0C640 LDR X8, [X8 + 0xD38]
	0x01E0C644 STR X21, [X20 + 0x10]
	0x01E0C648 LDR X25, [X21 + 0x38]
	0x01E0C64C LDR X0, [X8]
	0x01E0C650 BL 0x1C16F10
	0x01E0C654 MOV X1, X25
	0x01E0C658 MOV X2, X31
	0x01E0C65C MOV X24, X0
	0x01E0C660 BL 0x1E103B4
	0x01E0C664 CBZ X24, 0x1E0C774
	0x01E0C668 MOV X0, X24
	0x01E0C66C MOV X1, X23
	0x01E0C670 MOV X2, X22
	0x01E0C674 MOV X3, X31
	0x01E0C678 BL 0x1E10708
	0x01E0C67C TBZ X0, 0x0, 0x1E0C734
	0x01E0C680 ADRP X8, 0x22ED000
	0x01E0C684 LDR X8, [X8 + 0xAD0]
	0x01E0C688 LDR X0, [X8]
	0x01E0C68C BL 0x1C16F10
	0x01E0C690 ADRP X8, 0x22ED000
	0x01E0C694 LDR X8, [X8 + 0xAB8]
	0x01E0C698 MOV X22, X0
	0x01E0C69C LDR X1, [X8]
	0x01E0C6A0 BL 0x2F64678
	0x01E0C6A4 ADRP X8, 0x22ED000
	0x01E0C6A8 LDR X8, [X8 + 0xAE0]
	0x01E0C6AC LDR X0, [X8]
	0x01E0C6B0 BL 0x1C16F10
	0x01E0C6B4 ADRP X8, 0x22ED000
	0x01E0C6B8 LDR X8, [X8 + 0xAC0]
	0x01E0C6BC MOV X23, X0
	0x01E0C6C0 LDR X1, [X8]
	0x01E0C6C4 BL 0x301B7C4
	0x01E0C6C8 LDR X0, [X21 + 0x38]
	0x01E0C6CC CBZ X0, 0x1E0C774
	0x01E0C6D0 MOV X1, X31
	0x01E0C6D4 BL 0x3C389D4
	0x01E0C6D8 ADRP X8, 0x22E7000
	0x01E0C6DC LDR X8, [X8 + 0xEC8]
	0x01E0C6E0 ADRP X9, 0x22ED000
	0x01E0C6E4 LDR X9, [X9 + 0xD40]
	0x01E0C6E8 MOV X1, X0
	0x01E0C6EC LDR X8, [X8]
	0x01E0C6F0 MOV X3, X31
	0x01E0C6F4 LDR X2, [X9]
	0x01E0C6F8 MOV X0, X8
	0x01E0C6FC BL 0x32274B8
	0x01E0C700 ADRP X8, 0x22E7000
	0x01E0C704 LDR X8, [X8 + 0xA58]
	0x01E0C708 MOV X21, X0
	0x01E0C70C LDR X8, [X8]
	0x01E0C710 MOV X0, X8
	0x01E0C714 BL 0x1C16F10
	0x01E0C718 MOV X1, X21
	0x01E0C71C MOV X2, X31
	0x01E0C720 MOV X24, X0
	0x01E0C724 BL 0x3C35934
	0x01E0C728 MOVZ W8, 0x1
	0x01E0C72C STR X24, [X20 + 0x18]
	0x01E0C730 B 0x1E0C740
	0x01E0C734 MOV W8, W31
	0x01E0C738 MOV X23, X31
	0x01E0C73C MOV X22, X31
	0x01E0C740 STRB W8, [X19]
	0x01E0C744 LDUR W8, [X31 + 0xB]
	0x01E0C748 LDR W9, [X31 + 0x8]
	0x01E0C74C STP X23, X22, [X19 + 0x8]
	0x01E0C750 STR X20, [X19 + 0x18]
	0x01E0C754 STR W8, [X19 + 0x4]
	0x01E0C758 STUR W9, [X19 + 0x1]
	0x01E0C75C LDP X20, X19, [X31 + 0x40]
	0x01E0C760 LDP X22, X21, [X31 + 0x30]
	0x01E0C764 LDP X24, X23, [X31 + 0x20]
	0x01E0C768 LDP X30, X25, [X31 + 0x10]
	0x01E0C76C ADD X31, X31, 0x50
	0x01E0C770 RET
	0x01E0C774 BL 0x1C16F20
	0x01E0C778 MOV X1, X31
	0x01E0C77C B 0x31CD6DC
	0x01E0C780 STR X30, [X31 - 0x30]!
	0x01E0C784 STP X22, X21, [X31 + 0x10]
	0x01E0C788 STP X20, X19, [X31 + 0x20]
	0x01E0C78C ADRP X21, 0x25CC000
	0x01E0C790 ADRP X22, 0x22ED000
	0x01E0C794 ADRP X20, 0x22ED000
	0x01E0C798 LDRB W8, [X21 + 0xDCD]
	0x01E0C79C LDR X22, [X22 + 0xAD8]
	0x01E0C7A0 LDR X20, [X20 + 0xAC8]
	0x01E0C7A4 MOV X19, X0
	0x01E0C7A8 TBNZ X8, 0x0, 0x1E0C7D8
	0x01E0C7AC ADRP X0, 0x22ED000
	0x01E0C7B0 LDR X0, [X0 + 0xAA8]
	0x01E0C7B4 BL 0x1C16CF4
	0x01E0C7B8 ADRP X0, 0x22ED000
	0x01E0C7BC LDR X0, [X0 + 0xAC8]
	0x01E0C7C0 BL 0x1C16CF4
	0x01E0C7C4 ADRP X0, 0x22ED000
	0x01E0C7C8 LDR X0, [X0 + 0xAD8]
	0x01E0C7CC BL 0x1C16CF4
	0x01E0C7D0 MOVZ W8, 0x1
	0x01E0C7D4 STRB W8, [X21 + 0xDCD]
	0x01E0C7D8 LDR X0, [X22]
	0x01E0C7DC BL 0x1C16F10
	0x01E0C7E0 LDR X1, [X20]
	0x01E0C7E4 MOV X20, X0
	0x01E0C7E8 BL 0x30D3DD0
	0x01E0C7EC CBZ X20, 0x1E0C874
	0x01E0C7F0 ADRP X9, 0x22ED000
	0x01E0C7F4 LDR X9, [X9 + 0xAA8]
	0x01E0C7F8 LDR W11, [X20 + 0x1C]
	0x01E0C7FC LDR X8, [X20 + 0x10]
	0x01E0C800 LDR X10, [X9]
	0x01E0C804 ADD W9, W11, 0x1
	0x01E0C808 STR W9, [X20 + 0x1C]
	0x01E0C80C CBZ X8, 0x1E0C874
	0x01E0C810 LDRSW X9, [X20 + 0x18]
	0x01E0C814 LDR W11, [X8 + 0x18]
	0x01E0C818 CMP W9, W11
	0x01E0C81C B.CS 0x1E0C83C
	0x01E0C820 ADRP X10, 0xFFFFFFFFFECDE000
	0x01E0C824 LDR V0, [X10 + 0x47]
	0x01E0C828 ADD W10, W9, 0x1
	0x01E0C82C ADD X8, X8, X9, 0x4, LSL
	0x01E0C830 STR W10, [X20 + 0x18]
	0x01E0C834 STR V0, [X8 + 0x2]
	0x01E0C838 B 0x1E0C858
	0x01E0C83C LDR X8, [X10 + 0x20]
	0x01E0C840 MOVZ W2, 0x3F800000
	0x01E0C844 MOV X0, X20
	0x01E0C848 MOV X1, X31
	0x01E0C84C LDR X8, [X8 + 0xC0]
	0x01E0C850 LDR X3, [X8 + 0x70]
	0x01E0C854 BL 0x30D45DC
	0x01E0C858 STR X20, [X19 + 0x18]
	0x01E0C85C MOV X0, X19
	0x01E0C860 LDP X20, X19, [X31 + 0x20]
	0x01E0C864 LDP X22, X21, [X31 + 0x10]
	0x01E0C868 MOV X1, X31
	0x01E0C86C LDR X30, [X31], #0x30
	0x01E0C870 B 0x3C36D2C
	0x01E0C874 BL 0x1C16F20
	0x01E0C878 STR X30, [X31 - 0x20]!
	0x01E0C87C STP X20, X19, [X31 + 0x10]
	0x01E0C880 ADRP X19, 0x25CC000
	0x01E0C884 ADRP X20, 0x22ED000
	0x01E0C888 LDRB W8, [X19 + 0xDCE]
	0x01E0C88C LDR X20, [X20 + 0xD48]
	0x01E0C890 TBNZ X8, 0x0, 0x1E0C8A8
	0x01E0C894 ADRP X0, 0x22ED000
	0x01E0C898 LDR X0, [X0 + 0xD48]
	0x01E0C89C BL 0x1C16CF4
	0x01E0C8A0 MOVZ W8, 0x1
	0x01E0C8A4 STRB W8, [X19 + 0xDCE]
	0x01E0C8A8 LDR X0, [X20]
	0x01E0C8AC LDP X20, X19, [X31 + 0x10]
	0x01E0C8B0 LDR X30, [X31], #0x20
	0x01E0C8B4 RET
	0x01E0C8B8 STR X30, [X31 - 0x20]!
	0x01E0C8BC STP X20, X19, [X31 + 0x10]
	0x01E0C8C0 ADRP X20, 0x25CC000
	0x01E0C8C4 ADRP X19, 0x22ED000
	0x01E0C8C8 LDRB W8, [X20 + 0xDCF]
	0x01E0C8CC LDR X19, [X19 + 0xA88]
	0x01E0C8D0 TBNZ X8, 0x0, 0x1E0C8E8
	0x01E0C8D4 ADRP X0, 0x22ED000
	0x01E0C8D8 LDR X0, [X0 + 0xA88]
	0x01E0C8DC BL 0x1C16CF4
	0x01E0C8E0 MOVZ W8, 0x1
	0x01E0C8E4 STRB W8, [X20 + 0xDCF]
	0x01E0C8E8 LDR X0, [X19]
	0x01E0C8EC LDR W8, [X0 + 0xE0]
	0x01E0C8F0 CBNZ W8, 0x1E0C8FC
	0x01E0C8F4 BL 0x1C16DFC
	0x01E0C8F8 LDR X0, [X19]
	0x01E0C8FC LDR X8, [X0 + 0xB8]
	0x01E0C900 LDP X20, X19, [X31 + 0x10]
	0x01E0C904 LDR X0, [X8 + 0x58]
	0x01E0C908 LDR X30, [X31], #0x20
	0x01E0C90C RET
	0x01E0C910 MOVI V0.2D, 0x0
	0x01E0C914 STP V0, V0, [X8]
	0x01E0C918 RET
	0x01E0C91C MOVZ W8, 0x3E800000
	0x01E0C920 MOV X1, X31
	0x01E0C924 STR W8, [X0 + 0x40]
	0x01E0C928 B 0x31CD6DC
	0x01E0C92C MOV X1, X31
	0x01E0C930 B 0x3C36C30
	0x01E0C934 STP X30, X21, [X31 - 0x20]!
	0x01E0C938 STP X20, X19, [X31 + 0x10]
	0x01E0C93C ADRP X21, 0x25CC000
	0x01E0C940 ADRP X20, 0x22ED000
	0x01E0C944 LDRB W8, [X21 + 0xDD0]
	0x01E0C948 LDR X20, [X20 + 0x330]
	0x01E0C94C MOV X19, X0
	0x01E0C950 TBNZ X8, 0x0, 0x1E0C968
	0x01E0C954 ADRP X0, 0x22ED000
	0x01E0C958 LDR X0, [X0 + 0x330]
	0x01E0C95C BL 0x1C16CF4
	0x01E0C960 MOVZ W8, 0x1
	0x01E0C964 STRB W8, [X21 + 0xDD0]
	0x01E0C968 LDR X0, [X20]
	0x01E0C96C LDR X19, [X19 + 0x28]
	0x01E0C970 LDR W8, [X0 + 0xE0]
	0x01E0C974 CBNZ W8, 0x1E0C97C
	0x01E0C978 BL 0x1C16DFC
	0x01E0C97C MOV X0, X19
	0x01E0C980 LDP X20, X19, [X31 + 0x10]
	0x01E0C984 MOV X1, X31
	0x01E0C988 LDP X30, X21, [X31], #0x20
	0x01E0C98C B 0x1E15F14
	0x01E0C990 STP X30, X21, [X31 - 0x20]!
	0x01E0C994 STP X20, X19, [X31 + 0x10]
	0x01E0C998 ADRP X21, 0x25CC000
	0x01E0C99C ADRP X20, 0x22ED000
	0x01E0C9A0 LDRB W8, [X21 + 0xDD1]
	0x01E0C9A4 LDR X20, [X20 + 0x330]
	0x01E0C9A8 MOV X19, X0
	0x01E0C9AC TBNZ X8, 0x0, 0x1E0C9C4
	0x01E0C9B0 ADRP X0, 0x22ED000
	0x01E0C9B4 LDR X0, [X0 + 0x330]
	0x01E0C9B8 BL 0x1C16CF4
	0x01E0C9BC MOVZ W8, 0x1
	0x01E0C9C0 STRB W8, [X21 + 0xDD1]
	0x01E0C9C4 LDR X0, [X20]
	0x01E0C9C8 LDR X19, [X19 + 0x28]
	0x01E0C9CC LDR W8, [X0 + 0xE0]
	0x01E0C9D0 CBNZ W8, 0x1E0C9D8
	0x01E0C9D4 BL 0x1C16DFC
	0x01E0C9D8 MOV X0, X19
	0x01E0C9DC LDP X20, X19, [X31 + 0x10]
	0x01E0C9E0 MOV X1, X31
	0x01E0C9E4 LDP X30, X21, [X31], #0x20
	0x01E0C9E8 B 0x1E161E8
	0x01E0C9EC B 0x1E0C9F0
	0x01E0C9F0 SUB X31, X31, 0x60
	0x01E0C9F4 STP X30, X27, [X31 + 0x10]
	0x01E0C9F8 STP X26, X25, [X31 + 0x20]
	0x01E0C9FC STP X24, X23, [X31 + 0x30]
	0x01E0CA00 STP X22, X21, [X31 + 0x40]
	0x01E0CA04 STP X20, X19, [X31 + 0x50]
	0x01E0CA08 ADRP X20, 0x25CC000
	0x01E0CA0C ADRP X23, 0x22E7000
	0x01E0CA10 LDRB W8, [X20 + 0xDD2]
	0x01E0CA14 LDR X23, [X23 + 0x598]
	0x01E0CA18 MOV X19, X0
	0x01E0CA1C TBNZ X8, 0x0, 0x1E0CAAC
	0x01E0CA20 ADRP X0, 0x22ED000
	0x01E0CA24 LDR X0, [X0 + 0xD50]
	0x01E0CA28 BL 0x1C16CF4
	0x01E0CA2C ADRP X0, 0x22ED000
	0x01E0CA30 LDR X0, [X0 + 0xD38]
	0x01E0CA34 BL 0x1C16CF4
	0x01E0CA38 ADRP X0, 0x22E7000
	0x01E0CA3C LDR X0, [X0 + 0x758]
	0x01E0CA40 BL 0x1C16CF4
	0x01E0CA44 ADRP X0, 0x22E7000
	0x01E0CA48 LDR X0, [X0 + 0x788]
	0x01E0CA4C BL 0x1C16CF4
	0x01E0CA50 ADRP X0, 0x22E7000
	0x01E0CA54 LDR X0, [X0 + 0x598]
	0x01E0CA58 BL 0x1C16CF4
	0x01E0CA5C ADRP X0, 0x22ED000
	0x01E0CA60 LDR X0, [X0 + 0xD58]
	0x01E0CA64 BL 0x1C16CF4
	0x01E0CA68 ADRP X0, 0x22ED000
	0x01E0CA6C LDR X0, [X0 + 0xD60]
	0x01E0CA70 BL 0x1C16CF4
	0x01E0CA74 ADRP X0, 0x22ED000
	0x01E0CA78 LDR X0, [X0 + 0xD68]
	0x01E0CA7C BL 0x1C16CF4
	0x01E0CA80 ADRP X0, 0x22ED000
	0x01E0CA84 LDR X0, [X0 + 0xD70]
	0x01E0CA88 BL 0x1C16CF4
	0x01E0CA8C ADRP X0, 0x22ED000
	0x01E0CA90 LDR X0, [X0 + 0xD78]
	0x01E0CA94 BL 0x1C16CF4
	0x01E0CA98 ADRP X0, 0x22ED000
	0x01E0CA9C LDR X0, [X0 + 0xD80]
	0x01E0CAA0 BL 0x1C16CF4
	0x01E0CAA4 MOVZ W8, 0x1
	0x01E0CAA8 STRB W8, [X20 + 0xDD2]
	0x01E0CAAC LDR X0, [X23]
	0x01E0CAB0 STR W31, [X31 + 0xC]
	0x01E0CAB4 LDR X20, [X19 + 0x30]
	0x01E0CAB8 LDR W8, [X0 + 0xE0]
	0x01E0CABC CBNZ W8, 0x1E0CAC4
	0x01E0CAC0 BL 0x1C16DFC
	0x01E0CAC4 ADRP X26, 0x22E7000
	0x01E0CAC8 ADRP X25, 0x22ED000
	0x01E0CACC ADRP X24, 0x22ED000
	0x01E0CAD0 LDR X26, [X26 + 0x788]
	0x01E0CAD4 LDR X25, [X25 + 0xD68]
	0x01E0CAD8 LDR X24, [X24 + 0xD60]
	0x01E0CADC MOV X0, X20
	0x01E0CAE0 MOV X1, X31
	0x01E0CAE4 MOV X2, X31
	0x01E0CAE8 BL 0x3C3883C
	0x01E0CAEC TBNZ X0, 0x0, 0x1E0CB18
	0x01E0CAF0 LDR X0, [X23]
	0x01E0CAF4 LDR X20, [X19 + 0x38]
	0x01E0CAF8 LDR W8, [X0 + 0xE0]
	0x01E0CAFC CBNZ W8, 0x1E0CB04
	0x01E0CB00 BL 0x1C16DFC
	0x01E0CB04 MOV X0, X20
	0x01E0CB08 MOV X1, X31
	0x01E0CB0C MOV X2, X31
	0x01E0CB10 BL 0x3C3883C
	0x01E0CB14 TBZ X0, 0x0, 0x1E0CB70
	0x01E0CB18 LDR X0, [X26]
	0x01E0CB1C ADRP X19, 0x22ED000
	0x01E0CB20 LDR W8, [X0 + 0xE0]
	0x01E0CB24 LDR X19, [X19 + 0xD58]
	0x01E0CB28 CBNZ W8, 0x1E0CB30
	0x01E0CB2C BL 0x1C16DFC
	0x01E0CB30 LDR X1, [X19]
	0x01E0CB34 LDR X3, [X25]
	0x01E0CB38 LDR X4, [X24]
	0x01E0CB3C MOVZ W0, 0x20
	0x01E0CB40 MOVZ W5, 0x47
	0x01E0CB44 MOV X2, X31
	0x01E0CB48 MOV X6, X31
	0x01E0CB4C BL 0x35C25CC
	0x01E0CB50 MOV W0, W31
	0x01E0CB54 LDP X20, X19, [X31 + 0x50]
	0x01E0CB58 LDP X22, X21, [X31 + 0x40]
	0x01E0CB5C LDP X24, X23, [X31 + 0x30]
	0x01E0CB60 LDP X26, X25, [X31 + 0x20]
	0x01E0CB64 LDP X30, X27, [X31 + 0x10]
	0x01E0CB68 ADD X31, X31, 0x60
	0x01E0CB6C RET
	0x01E0CB70 MOV X0, X19
	0x01E0CB74 MOV X1, X31
	0x01E0CB78 BL 0x3C32E90
	0x01E0CB7C CBZ X0, 0x1E0CF40
	0x01E0CB80 MOV X1, X31
	0x01E0CB84 BL 0x3C40C8C
	0x01E0CB88 SUBS W20, W0, 0x1
	0x01E0CB8C B.MI 0x1E0CBE4
	0x01E0CB90 MOV X0, X19
	0x01E0CB94 MOV X1, X31
	0x01E0CB98 BL 0x3C32E90
	0x01E0CB9C CBZ X0, 0x1E0CF40
	0x01E0CBA0 MOV W1, W20
	0x01E0CBA4 MOV X2, X31
	0x01E0CBA8 BL 0x3C410A0
	0x01E0CBAC CBZ X0, 0x1E0CF40
	0x01E0CBB0 MOV X1, X31
	0x01E0CBB4 BL 0x3C32ECC
	0x01E0CBB8 LDR X8, [X23]
	0x01E0CBBC MOV X21, X0
	0x01E0CBC0 LDR W9, [X8 + 0xE0]
	0x01E0CBC4 CBNZ W9, 0x1E0CBD0
	0x01E0CBC8 MOV X0, X8
	0x01E0CBCC BL 0x1C16DFC
	0x01E0CBD0 MOV X0, X21
	0x01E0CBD4 MOV X1, X31
	0x01E0CBD8 BL 0x3C39564
	0x01E0CBDC SUBS W20, W20, 0x1
	0x01E0CBE0 B.PL 0x1E0CB90
	0x01E0CBE4 ADRP X8, 0x22ED000
	0x01E0CBE8 LDR X21, [X19 + 0x30]
	0x01E0CBEC LDR X8, [X8 + 0xD38]
	0x01E0CBF0 LDR X0, [X8]
	0x01E0CBF4 BL 0x1C16F10
	0x01E0CBF8 MOV X1, X21
	0x01E0CBFC MOV X2, X31
	0x01E0CC00 MOV X20, X0
	0x01E0CC04 BL 0x1E103B4
	0x01E0CC08 MOV W27, W31
	0x01E0CC0C STR W31, [X31 + 0xC]
	0x01E0CC10 LDP X21, X22, [X19 + 0x38]
	0x01E0CC14 MOVZ W1, 0x86A0
	0x01E0CC18 MOVK W1, 0x10000
	0x01E0CC1C MOV W0, W31
	0x01E0CC20 MOV X2, X31
	0x01E0CC24 BL 0x3C309A8
	0x01E0CC28 CBZ X20, 0x1E0CF40
	0x01E0CC2C LDR W4, [X19 + 0x20]
	0x01E0CC30 MOV W3, W0
	0x01E0CC34 MOVZ W5, 0x1
	0x01E0CC38 MOVZ W6, 0x1
	0x01E0CC3C MOV X0, X20
	0x01E0CC40 MOV X1, X21
	0x01E0CC44 MOV X2, X22
	0x01E0CC48 MOV X7, X31
	0x01E0CC4C BL 0x1E10A38
	0x01E0CC50 TBNZ X0, 0x0, 0x1E0CDD8
	0x01E0CC54 MOV X0, X19
	0x01E0CC58 MOV X1, X31
	0x01E0CC5C BL 0x3C32E90
	0x01E0CC60 CBZ X0, 0x1E0CF40
	0x01E0CC64 MOV X1, X31
	0x01E0CC68 BL 0x3C40C8C
	0x01E0CC6C SUBS W21, W0, 0x1
	0x01E0CC70 B.MI 0x1E0CCC8
	0x01E0CC74 MOV X0, X19
	0x01E0CC78 MOV X1, X31
	0x01E0CC7C BL 0x3C32E90
	0x01E0CC80 CBZ X0, 0x1E0CF40
	0x01E0CC84 MOV W1, W21
	0x01E0CC88 MOV X2, X31
	0x01E0CC8C BL 0x3C410A0
	0x01E0CC90 CBZ X0, 0x1E0CF40
	0x01E0CC94 MOV X1, X31
	0x01E0CC98 BL 0x3C32ECC
	0x01E0CC9C LDR X8, [X23]
	0x01E0CCA0 MOV X22, X0
	0x01E0CCA4 LDR W9, [X8 + 0xE0]
	0x01E0CCA8 CBNZ W9, 0x1E0CCB4
	0x01E0CCAC MOV X0, X8
	0x01E0CCB0 BL 0x1C16DFC
	0x01E0CCB4 MOV X0, X22
	0x01E0CCB8 MOV X1, X31
	0x01E0CCBC BL 0x3C39564
	0x01E0CCC0 SUBS W21, W21, 0x1
	0x01E0CCC4 B.PL 0x1E0CC74
	0x01E0CCC8 ADD W27, W27, 0x1
	0x01E0CCCC CMP W27, 0x40
	0x01E0CCD0 STR W27, [X31 + 0xC]
	0x01E0CCD4 B.LT 0x1E0CC10
	0x01E0CCD8 LDR X0, [X19 + 0x30]
	0x01E0CCDC CBZ X0, 0x1E0CF40
	0x01E0CCE0 MOV X1, X31
	0x01E0CCE4 BL 0x3C389D4
	0x01E0CCE8 ADRP X8, 0x22E7000
	0x01E0CCEC LDR X8, [X8 + 0x758]
	0x01E0CCF0 MOV X20, X0
	0x01E0CCF4 ADD X1, X31, 0x8
	0x01E0CCF8 LDR X0, [X8]
	0x01E0CCFC MOVZ W8, 0x40
	0x01E0CD00 STR W8, [X31 + 0x8]
	0x01E0CD04 BL 0x1C16E04
	0x01E0CD08 ADRP X8, 0x22ED000
	0x01E0CD0C LDR X8, [X8 + 0xD78]
	0x01E0CD10 MOV X2, X0
	0x01E0CD14 MOV X1, X20
	0x01E0CD18 MOV X3, X31
	0x01E0CD1C LDR X8, [X8]
	0x01E0CD20 MOV X0, X8
	0x01E0CD24 BL 0x3227BD4
	0x01E0CD28 LDR X8, [X26]
	0x01E0CD2C MOV X20, X0
	0x01E0CD30 LDR W9, [X8 + 0xE0]
	0x01E0CD34 CBNZ W9, 0x1E0CD40
	0x01E0CD38 MOV X0, X8
	0x01E0CD3C BL 0x1C16DFC
	0x01E0CD40 LDR X3, [X25]
	0x01E0CD44 LDR X4, [X24]
	0x01E0CD48 MOVZ W0, 0x20
	0x01E0CD4C MOVZ W5, 0x6F
	0x01E0CD50 MOV X1, X20
	0x01E0CD54 MOV X2, X31
	0x01E0CD58 MOV X6, X31
	0x01E0CD5C BL 0x35C25CC
	0x01E0CD60 MOV X0, X19
	0x01E0CD64 MOV X1, X31
	0x01E0CD68 BL 0x3C32E90
	0x01E0CD6C CBZ X0, 0x1E0CF40
	0x01E0CD70 MOV X1, X31
	0x01E0CD74 BL 0x3C40C8C
	0x01E0CD78 SUBS W20, W0, 0x1
	0x01E0CD7C B.MI 0x1E0CB50
	0x01E0CD80 MOV X0, X19
	0x01E0CD84 MOV X1, X31
	0x01E0CD88 BL 0x3C32E90
	0x01E0CD8C CBZ X0, 0x1E0CF40
	0x01E0CD90 MOV W1, W20
	0x01E0CD94 MOV X2, X31
	0x01E0CD98 BL 0x3C410A0
	0x01E0CD9C CBZ X0, 0x1E0CF40
	0x01E0CDA0 MOV X1, X31
	0x01E0CDA4 BL 0x3C32ECC
	0x01E0CDA8 LDR X8, [X23]
	0x01E0CDAC MOV X21, X0
	0x01E0CDB0 LDR W9, [X8 + 0xE0]
	0x01E0CDB4 CBNZ W9, 0x1E0CDC0
	0x01E0CDB8 MOV X0, X8
	0x01E0CDBC BL 0x1C16DFC
	0x01E0CDC0 MOV X0, X21
	0x01E0CDC4 MOV X1, X31
	0x01E0CDC8 BL 0x3C39564
	0x01E0CDCC SUBS W20, W20, 0x1
	0x01E0CDD0 B.PL 0x1E0CD80
	0x01E0CDD4 B 0x1E0CB50
	0x01E0CDD8 LDR X0, [X19 + 0x30]
	0x01E0CDDC CBZ X0, 0x1E0CF40
	0x01E0CDE0 MOV X1, X31
	0x01E0CDE4 BL 0x3C389D4
	0x01E0CDE8 MOV X21, X0
	0x01E0CDEC ADD X0, X31, 0xC
	0x01E0CDF0 MOV X1, X31
	0x01E0CDF4 BL 0x337B6E0
	0x01E0CDF8 ADRP X8, 0x22ED000
	0x01E0CDFC ADRP X9, 0x22ED000
	0x01E0CE00 LDR X8, [X8 + 0xD70]
	0x01E0CE04 LDR X9, [X9 + 0xD80]
	0x01E0CE08 MOV X2, X0
	0x01E0CE0C MOV X0, X21
	0x01E0CE10 LDR X1, [X8]
	0x01E0CE14 LDR X3, [X9]
	0x01E0CE18 MOV X4, X31
	0x01E0CE1C BL 0x32277C4
	0x01E0CE20 LDR X8, [X26]
	0x01E0CE24 MOV X21, X0
	0x01E0CE28 LDR W9, [X8 + 0xE0]
	0x01E0CE2C CBNZ W9, 0x1E0CE38
	0x01E0CE30 MOV X0, X8
	0x01E0CE34 BL 0x1C16DFC
	0x01E0CE38 LDR X3, [X25]
	0x01E0CE3C LDR X4, [X24]
	0x01E0CE40 MOVZ W0, 0x20
	0x01E0CE44 MOVZ W5, 0x56
	0x01E0CE48 MOV X1, X21
	0x01E0CE4C MOV X2, X31
	0x01E0CE50 MOV X6, X31
	0x01E0CE54 BL 0x35C2014
	0x01E0CE58 LDR X8, [X20 + 0x28]
	0x01E0CE5C CBZ X8, 0x1E0CF40
	0x01E0CE60 LDR X8, [X8 + 0x20]
	0x01E0CE64 LDR X21, [X19 + 0x48]
	0x01E0CE68 STR X8, [X19 + 0x28]
	0x01E0CE6C LDR X0, [X23]
	0x01E0CE70 LDR W8, [X0 + 0xE0]
	0x01E0CE74 CBNZ W8, 0x1E0CE7C
	0x01E0CE78 BL 0x1C16DFC
	0x01E0CE7C MOV X0, X21
	0x01E0CE80 MOV X1, X31
	0x01E0CE84 MOV X2, X31
	0x01E0CE88 BL 0x3C354F8
	0x01E0CE8C TBZ X0, 0x0, 0x1E0CEA4
	0x01E0CE90 LDR X0, [X20 + 0x48]
	0x01E0CE94 CBZ X0, 0x1E0CF40
	0x01E0CE98 LDR X1, [X19 + 0x48]
	0x01E0CE9C MOV X2, X31
	0x01E0CEA0 BL 0x3C3FD20
	0x01E0CEA4 LDR X0, [X23]
	0x01E0CEA8 LDR X21, [X19 + 0x50]
	0x01E0CEAC LDR W8, [X0 + 0xE0]
	0x01E0CEB0 CBNZ W8, 0x1E0CEB8
	0x01E0CEB4 BL 0x1C16DFC
	0x01E0CEB8 MOV X0, X21
	0x01E0CEBC MOV X1, X31
	0x01E0CEC0 MOV X2, X31
	0x01E0CEC4 BL 0x3C354F8
	0x01E0CEC8 TBZ X0, 0x0, 0x1E0CEE0
	0x01E0CECC LDR X0, [X20 + 0x40]
	0x01E0CED0 CBZ X0, 0x1E0CF40
	0x01E0CED4 LDR X1, [X19 + 0x50]
	0x01E0CED8 MOV X2, X31
	0x01E0CEDC BL 0x3C3FD20

ISIL:
	001 Subtract X31, X31, 416
	002 Move [X31+256], D15
	003 Move [X31+264], D14
	004 Move [X31+272], D13
	005 Move [X31+280], D12
	006 Move [X31+288], D11
	007 Move [X31+296], D10
	008 Move [X31+304], D9
	009 Move [X31+312], D8
	010 Move [X31+320], X29
	011 Move [X31+328], X30
	012 Move [X31+336], X28
	013 Move [X31+344], X27
	014 Move [X31+352], X26
	015 Move [X31+360], X25
	016 Move [X31+368], X24
	017 Move [X31+376], X23
	018 Move [X31+384], X22
	019 Move [X31+392], X21
	020 Move [X31+400], X20
	021 Move [X31+408], X19
	022 Move X24, 0x25CD000
	023 Move X20, 0x22EE000
	024 Move X19, X8
	025 Move W8, [X24+3527]
	026 Move X20, [X20+2544]
	027 Move X23, X2
	028 Move X22, X1
	029 Move X21, X0
	030 Add X25, X31, 216
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {91}
	035 Move X0, 0x22EE000
	036 Move X0, [X0+2552]
	037 Call 0x1C17CF4
	038 Move X0, 0x22EE000
	039 Move X0, [X0+2560]
	040 Call 0x1C17CF4
	041 Move X0, 0x22EE000
	042 Move X0, [X0+2568]
	043 Call 0x1C17CF4
	044 Move X0, 0x22E8000
	045 Move X0, [X0+2648]
	046 Call 0x1C17CF4
	047 Move X0, 0x22EE000
	048 Move X0, [X0+2576]
	049 Call 0x1C17CF4
	050 Move X0, 0x22EE000
	051 Move X0, [X0+2584]
	052 Call 0x1C17CF4
	053 Move X0, 0x22EE000
	054 Move X0, [X0+2592]
	055 Call 0x1C17CF4
	056 Move X0, 0x22EE000
	057 Move X0, [X0+2600]
	058 Call 0x1C17CF4
	059 Move X0, 0x22EE000
	060 Move X0, [X0+2744]
	061 Call 0x1C17CF4
	062 Move X0, 0x22EE000
	063 Move X0, [X0+2752]
	064 Call 0x1C17CF4
	065 Move X0, 0x22EE000
	066 Move X0, [X0+2768]
	067 Call 0x1C17CF4
	068 Move X0, 0x22EE000
	069 Move X0, [X0+2784]
	070 Call 0x1C17CF4
	071 Move X0, 0x22EE000
	072 Move X0, [X0+2544]
	073 Call 0x1C17CF4
	074 Move X0, 0x22EE000
	075 Move X0, [X0+3320]
	076 Call 0x1C17CF4
	077 Move X0, 0x22EE000
	078 Move X0, [X0+2640]
	079 Call 0x1C17CF4
	080 Move X0, 0x22E8000
	081 Move X0, [X0+1432]
	082 Call 0x1C17CF4
	083 Move X0, 0x22EE000
	084 Move X0, [X0+3328]
	085 Call 0x1C17CF4
	086 Move X0, 0x22E8000
	087 Move X0, [X0+3784]
	088 Call 0x1C17CF4
	089 Move W8, 1
	090 Move [X24+3527], W8
	091 Move X0, [X20]
	092 Move [X31+192], X31
	093 Move [X31+200], X31
	094 Move [X31+208], X31
	095 Move [X31+160], X31
	096 Move [X31+168], X31
	097 Move [X31+176], X31
	098 Move [X31+216], W31
	099 Move [X25+3], W31
	100 Call 0x1C17F10
	101 Move X1, X31
	102 Move X20, X0
	103 Call NodeGenerationResult..ctor, X0
	104 Compare X20, 0
	105 JumpIfEqual {702}
	106 Move X24, 0x22E8000
	107 Move X25, 0x22EE000
	108 Move X26, 0x22E8000
	109 Move X24, [X24+3784]
	110 Move X25, [X25+3328]
	111 Move X26, [X26+2648]
	112 Move X0, X21
	113 Move [X20+16], X21
	114 Call SingleRoomArchetype.get_NodeTitle, X0
	115 Move X8, [X24]
	116 Move X2, [X25]
	117 Move X1, X0
	118 Move X3, X31
	119 Move X0, X8
	120 Call String.Concat, X0, X1, X2
	121 Move X8, [X26]
	122 Move X25, X0
	123 Move X0, X8
	124 Call 0x1C17F10
	125 Move X1, X25
	126 Move X2, X31
	127 Move X24, X0
	128 Call GameObject..ctor, X0, X1
	129 Compare X24, 0
	130 JumpIfEqual {702}
	131 Move X0, X24
	132 Move X1, X31
	133 Call GameObject.get_transform, X0
	134 Compare X0, 0
	135 JumpIfEqual {702}
	136 Move X1, X31
	137 Move X24, X0
	138 Call Component.get_transform, X0
	139 Compare X22, 0
	140 JumpIfEqual {702}
	141 Move X25, X0
	142 Move X0, X22
	143 Move X1, X31
	144 Call Component.get_transform, X0
	145 Compare X25, 0
	146 JumpIfEqual {702}
	147 Move X1, X0
	148 Move X0, X25
	149 Move X2, X31
	150 Call Transform.set_parent, X0, X1
	151 Move X0, X24
	152 Move X1, X31
	153 Call Component.get_transform, X0
	154 Move X26, 0x25CD000
	155 Move W8, [X26+1923]
	156 Move X25, X0
	157 Compare W8, 0
	158 JumpIfNotEqual {164}
	159 Move X0, 0x22E8000
	160 Move X0, [X0+1440]
	161 Call 0x1C17CF4
	162 Move W8, 1
	163 Move [X26+1923], W8
	164 Compare X25, 0
	165 JumpIfEqual {702}
	166 Move X8, 0x22E8000
	167 Move X8, [X8+1440]
	168 Move X0, X25
	169 Move X1, X31
	170 Move X8, [X8]
	171 Move X8, [X8+184]
	172 Move S1, [X8+4]
	173 Move S2, [X8+8]
	174 Move V0, [X8]
	175 Call Transform.set_localPosition, X0, X1
	176 Move X0, X24
	177 Move X1, X31
	178 Call Component.get_transform, X0
	179 Move X26, 0x25CD000
	180 Move W8, [X26+1939]
	181 Move X25, X0
	182 Compare W8, 0
	183 JumpIfNotEqual {189}
	184 Move X0, 0x22E9000
	185 Move X0, [X0+1448]
	186 Call 0x1C17CF4
	187 Move W8, 1
	188 Move [X26+1939], W8
	189 Compare X25, 0
	190 JumpIfEqual {702}
	191 Move X8, 0x22E9000
	192 Move X8, [X8+1448]
	193 Move X0, X25
	194 Move X1, X31
	195 Move X8, [X8]
	196 Move X8, [X8+184]
	197 Move S2, [X8+8]
	198 Move S3, [X8+12]
	199 Move S0, [X8]
	200 Move S1, [X8+4]
	201 Call Transform.set_localRotation, X0, X1
	202 Move X0, X24
	203 Move X1, X31
	204 Call Component.get_gameObject, X0
	205 Move [X20+24], X0
	206 Move X24, [X21+64]
	207 Move X0, X22
	208 Move X1, X31
	209 Call Component.get_transform, X0
	210 Compare X0, 0
	211 JumpIfEqual {702}
	212 Move X1, X31
	213 Call Transform.get_position, X0
	214 Move X0, X22
	215 Move X1, X31
	216 Move V8, V0
	217 Move V9, V1
	218 Move V10, V2
	219 Call Component.get_transform, X0
	220 Compare X0, 0
	221 JumpIfEqual {702}
	222 Move X28, 0x22E8000
	223 Move X26, 0x22EE000
	224 Move X28, [X28+1432]
	225 Move X26, [X26+2640]
	226 Move X1, X31
	227 Call Transform.get_rotation, X0
	228 Move X0, X22
	229 Move X1, X31
	230 Move V11, V0
	231 Move V12, V1
	232 Move V13, V2
	233 Move V14, V3
	234 Call Component.get_transform, X0
	235 Move X8, [X28]
	236 Move X25, X0
	237 Move W9, [X8+224]
	238 Compare W9, 0
	239 JumpIfNotEqual {242}
	240 Move X0, X8
	241 Call 0x1C17DFC
	242 Move X2, [X26]
	243 Move X0, X24
	244 Move V0, V8
	245 Move V1, V9
	246 Move V2, V10
	247 Move V3, V11
	248 Move V4, V12
	249 Move V5, V13
	250 Move V6, V14
	251 Move X1, X25
	252 Call 0x222E6B8, X0, X1, X2, X3
	253 Compare X0, 0
	254 JumpIfEqual {702}
	255 Move W1, 1
	256 Move X24, X0
	257 Call Tile.GetRandomSocket, X0, X1
	258 Compare X0, 0
	259 JumpIfEqual {702}
	260 Move X1, X31
	261 Move X25, X0
	262 Call Component.get_transform, X0
	263 Compare X0, 0
	264 JumpIfEqual {702}
	265 Move X1, X31
	266 Call Transform.get_forward, X0
	267 NotImplemented "Instruction FNEG not yet implemented."
	268 NotImplemented "Instruction FNEG not yet implemented."
	269 NotImplemented "Instruction FNEG not yet implemented."
	270 Move X0, X31
	271 Call Quaternion.LookRotation, X0
	272 Move X0, X31
	273 Call Quaternion.Inverse, X0
	274 Move X0, X24
	275 Move X1, X31
	276 Move V10, V0
	277 Move V9, V1
	278 Move V8, V2
	279 Move V11, V3
	280 Call Component.get_transform, X0
	281 Compare X0, 0
	282 JumpIfEqual {702}
	283 Move X1, X31
	284 Call Transform.get_forward, X0
	285 Move X0, X31
	286 Call Quaternion.LookRotation, X0
	287 Move X0, X24
	288 Move X1, X31
	289 Move V14, V0
	290 Move V13, V1
	291 Move V12, V2
	292 Move V15, V3
	293 Call Component.get_transform, X0
	294 Move X26, X0
	295 Move X0, X24
	296 Move X1, X31
	297 Call Component.get_transform, X0
	298 Compare X0, 0
	299 JumpIfEqual {702}
	300 Move X1, X31
	301 Call Transform.get_rotation, X0
	302 Compare X26, 0
	303 JumpIfEqual {702}
	304 Multiply S4, S11, S14
	305 Multiply S5, S10, S15
	306 Multiply S16, S11, S13
	307 Multiply S17, S9, S15
	308 Multiply S21, S10, S14
	309 Multiply S24, S11, S12
	310 Multiply S25, S11, S15
	311 Multiply S26, S8, S15
	312 Multiply S6, S9, S12
	313 Multiply S18, S8, S14
	314 Multiply S20, S10, S13
	315 Multiply S23, S9, S13
	316 Add S4, S4, S5
	317 Add S5, S16, S17
	318 Add S16, S24, S26
	319 Subtract S17, S25, S21
	320 Multiply S7, S8, S13
	321 Multiply S19, S10, S12
	322 Multiply S22, S9, S14
	323 Multiply S27, S8, S12
	324 Add S4, S6, S4
	325 Add S5, S18, S5
	326 Add S6, S20, S16
	327 Subtract S16, S17, S23
	328 Subtract S4, S4, S7
	329 Subtract S5, S5, S19
	330 Subtract S6, S6, S22
	331 Subtract S7, S16, S27
	332 Multiply S16, S7, S3
	333 Multiply S17, S4, S0
	334 Multiply S18, S5, S1
	335 Multiply S19, S6, S2
	336 Multiply S20, S5, S0
	337 Multiply S21, S6, S3
	338 Multiply S22, S7, S2
	339 Multiply S23, S4, S1
	340 Multiply S24, S7, S1
	341 Multiply S1, S6, S1
	342 Multiply S6, S6, S0
	343 Multiply S0, S7, S0
	344 Multiply S7, S4, S2
	345 Multiply S4, S4, S3
	346 Multiply S3, S5, S3
	347 Multiply S5, S5, S2
	348 Subtract S2, S16, S17
	349 Add S16, S21, S22
	350 Add S3, S3, S24
	351 Add S0, S4, S0
	352 Subtract S2, S2, S18
	353 Add S4, S20, S16
	354 Add S7, S7, S3
	355 Add S0, S1, S0
	356 Subtract S3, S2, S19
	357 Subtract S2, S4, S23
	358 Subtract S1, S7, S6
	359 Subtract S0, S0, S5
	360 Move X0, X26
	361 Move X1, X31
	362 Call Transform.set_rotation, X0, X1
	363 Move X0, X24
	364 Move X1, X31
	365 Call Component.get_transform, X0
	366 Compare X0, 0
	367 JumpIfEqual {702}
	368 Move X1, X31
	369 Call Transform.get_position, X0
	370 Move X0, X25
	371 Move X1, X31
	372 Move V13, V0
	373 Move V14, V1
	374 Move V11, V2
	375 Call Component.get_transform, X0
	376 Compare X0, 0
	377 JumpIfEqual {702}
	378 Move X1, X31
	379 Call Transform.get_position, X0
	380 Move X0, X22
	381 Move X1, X31
	382 Move V12, V0
	383 Move [X31+24], S2
	384 Move [X31+32], S1
	385 Call Component.get_transform, X0
	386 Compare X0, 0
	387 JumpIfEqual {702}
	388 Move X1, X31
	389 Move [X31+20], S11
	390 Call Transform.get_position, X0
	391 Move X0, X24
	392 Move X1, X31
	393 Move [X31+16], S0
	394 Move V15, V1
	395 Move V8, V2
	396 Call Component.get_transform, X0
	397 Compare X0, 0
	398 JumpIfEqual {702}
	399 Move X1, X31
	400 Call Transform.get_position, X0
	401 Move X0, X24
	402 Move X1, X31
	403 Move V9, V0
	404 Move V10, V1
	405 Move V11, V2
	406 Call Component.get_transform, X0
	407 Compare X0, 0
	408 JumpIfEqual {702}
	409 Move X29, 0x22EE000
	410 Move X27, 0x22EE000
	411 Move X29, [X29+2768]
	412 Move X27, [X27+2744]
	413 Move S1, [X31+24]
	414 Move S0, [X31+28]
	415 Subtract S12, S13, S12
	416 Move X1, X31
	417 Move X26, X0
	418 Subtract S13, S14, S0
	419 Move V0, [X31+20]
	420 Subtract S8, S8, S11
	421 Subtract S10, S15, S10
	422 Subtract S14, S0, S1
	423 Move V0, [X31+16]
	424 Subtract S9, S0, S9
	425 Call Transform.get_position, X0
	426 Add S3, S12, S9
	427 Add S4, S13, S10
	428 Add S5, S14, S8
	429 Add S0, S3, S0
	430 Add S1, S4, S1
	431 Add S2, S5, S2
	432 Move X0, X26
	433 Move X1, X31
	434 Call Transform.set_position, X0, X1
	435 Add X8, X31, 192
	436 Move X0, X24
	437 Call Tile.GetWorldBounds, X0
	438 Move V0, [X31+12]
	439 Move X8, [X31+208]
	440 Move X0, [X29]
	441 Move [X31+8], V0
	442 Move [X31+144], X8
	443 Call 0x1C17F10
	444 Move X1, [X27]
	445 Move X26, X0
	446 Call List`1<Bounds>..ctor, X0
	447 Compare X23, 0
	448 JumpIfEqual {702}
	449 Move X8, 0x22EE000
	450 Move X8, [X8+3320]
	451 Move X29, 0x22EE000
	452 Move X29, [X29+2784]
	453 Move X23, [X23+48]
	454 Move [X31+96], X31
	455 Move [X31+104], X31
	456 Move [X31+120], W31
	457 Move [X31+112], X31
	458 Move X9, [X22+88]
	459 NotImplemented "Instruction LDUR not yet implemented."
	460 Move X2, [X8]
	461 Move X27, 0x22EE000
	462 Move X27, [X27+2752]
	463 Add X0, X31, 96
	464 Add X1, X31, 224
	465 Move [X31+240], X9
	466 Move [X31+14], V0
	467 Call Nullable`1<Bounds>..ctor, X0, X1
	468 Move V0, [X31+8]
	469 Move X8, [X31+144]
	470 Move V1, [X31+6]
	471 NotImplemented "Instruction LDUR not yet implemented."
	472 Add X1, X31, 64
	473 Add X4, X31, 32
	474 Move X0, X21
	475 Move X2, X26
	476 Move X3, X23
	477 Move [X31+4], V0
	478 Move [X31+80], X8
	479 Move [X31+2], V1
	480 Move [X31+44], V2
	481 Call SingleRoomArchetype.ValidateBounds, X0, X1, X2, X3, X4
	482 Move X8, [X29]
	483 Move W22, W0
	484 Move X0, X8
	485 Call 0x1C17F10
	486 Move X1, [X27]
	487 Move X21, X0
	488 Call List`1<Object>..ctor, X0
	489 Move TEMP, X22
	490 And TEMP, TEMP, 1
	491 Compare TEMP, 1
	492 JumpIfNotEqual {608}
	493 Move X0, [X20+32]
	494 Compare X0, 0
	495 JumpIfEqual {702}
	496 Move X9, 0x22EE000
	497 Move X9, [X9+2584]
	498 Move W10, [X0+28]
	499 Move X8, [X0+16]
	500 Move X9, [X9]
	501 Add W10, W10, 1
	502 Move [X0+28], W10
	503 Compare X8, 0
	504 JumpIfEqual {702}
	505 NotImplemented "Instruction LDRSW not yet implemented."
	506 Move W11, [X8+24]
	507 NotImplemented "Instruction CMP not yet implemented."
	508 Add W9, W10, 1
	509 Add X8, X8, X10
	510 Move [X0+24], W9
	511 Move [X8+32], X24
	512 Move X8, [X9+32]
	513 Move X1, X24
	514 Move X8, [X8+192]
	515 Move X2, [X8+112]
	516 Call List`1<Object>.AddWithResize, X0, X1
	517 Move X0, [X24+56]
	518 Compare X0, 0
	519 JumpIfEqual {702}
	520 Move X8, 0x22EE000
	521 Move X8, [X8+2600]
	522 Move X1, [X8]
	523 Add X8, X31, 96
	524 Call List`1<Object>.GetEnumerator, X0
	525 Move V0, [X31+6]
	526 Move X8, [X31+112]
	527 Move X23, 0x22EE000
	528 Move X23, [X23+2560]
	529 Move [X31+10], V0
	530 Move [X31+176], X8
	531 Move X26, 0x22EE000
	532 Move X26, [X26+2576]
	533 Move X1, [X23]
	534 Add X0, X31, 160
	535 Call Enumerator<Object>.MoveNext, X0
	536 Move TEMP, X0
	537 And TEMP, TEMP, 1
	538 Compare TEMP, 1
	539 JumpIfNotEqual {586}
	540 Move X22, [X31+176]
	541 Move V0, [X31+12]
	542 Move X8, [X31+208]
	543 Move [X31+6], V0
	544 Move [X31+112], X8
	545 Compare X22, 0
	546 JumpIfEqual {592}
	547 Move X8, [X31+112]
	548 Move V0, [X31+6]
	549 Move [X22+88], X8
	550 Move [X22+72], V0
	551 Move X0, [X28]
	552 Move W8, [X0+224]
	553 Compare W8, 0
	554 JumpIfNotEqual {556}
	555 Call 0x1C17DFC
	556 Move X0, X22
	557 Move X1, X25
	558 Move X2, X31
	559 Call Object.op_Inequality, X0, X1
	560 Move TEMP, X0
	561 And TEMP, TEMP, 1
	562 Compare TEMP, 1
	563 JumpIfNotEqual {533}
	564 Compare X21, 0
	565 JumpIfEqual {593}
	566 Move W10, [X21+28]
	567 Move X8, [X21+16]
	568 Move X9, [X26]
	569 Add W10, W10, 1
	570 Move [X21+28], W10
	571 Compare X8, 0
	572 JumpIfEqual {594}
	573 NotImplemented "Instruction LDRSW not yet implemented."
	574 Move W11, [X8+24]
	575 NotImplemented "Instruction CMP not yet implemented."
	576 Add W9, W10, 1
	577 Add X8, X8, X10
	578 Move [X21+24], W9
	579 Move [X8+32], X22
	580 Move X8, [X9+32]
	581 Move X8, [X8+192]
	582 Move X2, [X8+112]
	583 Move X0, X21
	584 Move X1, X22
	585 Call List`1<Object>.AddWithResize, X0, X1
	586 Move X8, 0x22EE000
	587 Move X8, [X8+2552]
	588 Add X0, X31, 160
	589 Move X1, [X8]
	590 Call Enumerator<Object>.Dispose, X0
	591 Move W23, 1
	592 Call 0x1C17F20
	593 Call 0x1C17F20
	594 Call 0x1C17F20
	595 Move X22, X0
	596 NotImplemented "Instruction CMP not yet implemented."
	597 Move X0, X22
	598 Call 0x3EB2AD0
	599 Move X23, [X0]
	600 Call 0x3EB2AE0
	601 Move X8, 0x22EE000
	602 Move X8, [X8+2552]
	603 Add X0, X31, 160
	604 Move X1, [X8]
	605 Call Enumerator<Object>.Dispose, X0
	606 Compare X23, 0
	607 JumpIfNotEqual {704}
	608 Move X0, X24
	609 Move X1, X31
	610 Call Component.get_gameObject, X0
	611 Move X8, [X28]
	612 Move X22, X0
	613 Move W9, [X8+224]
	614 Compare W9, 0
	615 JumpIfNotEqual {618}
	616 Move X0, X8
	617 Call 0x1C17DFC
	618 Move X0, X22
	619 Move X1, X31
	620 Call Object.DestroyImmediate, X0
	621 Move W23, W31
	622 Move X8, 0x22EE000
	623 Move X8, [X8+2768]
	624 Add X24, X31, 216
	625 Move X0, [X8]
	626 Call 0x1C17F10
	627 Move X8, 0x22EE000
	628 Move X8, [X8+2744]
	629 Move X22, X0
	630 Move X1, [X8]
	631 Call List`1<Bounds>..ctor, X0
	632 Move V0, [X31+12]
	633 Move X8, [X31+208]
	634 Move [X31+8], V0
	635 Move [X31+144], X8
	636 Compare X22, 0
	637 JumpIfEqual {702}
	638 Move V0, [X31+8]
	639 Move X8, [X31+144]
	640 Move X9, 0x22EE000
	641 Move X9, [X9+2592]
	642 Move [X31+14], V0
	643 Move [X31+240], X8
	644 Move W11, [X22+28]
	645 Move X8, [X22+16]
	646 Move X10, [X9]
	647 Add W9, W11, 1
	648 Move [X22+28], W9
	649 Compare X8, 0
	650 JumpIfEqual {702}
	651 NotImplemented "Instruction LDRSW not yet implemented."
	652 Move W11, [X8+24]
	653 NotImplemented "Instruction CMP not yet implemented."
	654 Add W10, W9, 1
	655 Move [X22+24], W10
	656 Move X10, [X31+240]
	657 Move V0, [X31+14]
	658 Move W11, 24
	659 NotImplemented "Instruction MADD not yet implemented."
	660 Move [X8+48], X10
	661 Move [X8+2], V0
	662 Move X8, [X10+32]
	663 Move V0, [X31+14]
	664 Move X9, [X31+240]
	665 Add X1, X31, 96
	666 Move X8, [X8+192]
	667 Move X0, X22
	668 Move X2, [X8+112]
	669 Move [X31+6], V0
	670 Move [X31+112], X9
	671 Call List`1<Bounds>.AddWithResize, X0, X1
	672 NotImplemented "Instruction LDUR not yet implemented."
	673 Move W9, [X31+216]
	674 Move [X19], W23
	675 Move [X19+8], X21
	676 Move [X19+16], X22
	677 Move [X19+4], W8
	678 Move [X19+1], W9
	679 Move [X19+24], X20
	680 Move X20, [X31+400]
	681 Move X19, [X31+408]
	682 Move X22, [X31+384]
	683 Move X21, [X31+392]
	684 Move X24, [X31+368]
	685 Move X23, [X31+376]
	686 Move X26, [X31+352]
	687 Move X25, [X31+360]
	688 Move X28, [X31+336]
	689 Move X27, [X31+344]
	690 Move X29, [X31+320]
	691 Move X30, [X31+328]
	692 Move D9, [X31+304]
	693 Move D8, [X31+312]
	694 Move D11, [X31+288]
	695 Move D10, [X31+296]
	696 Move D13, [X31+272]
	697 Move D12, [X31+280]
	698 Move D15, [X31+256]
	699 Move D14, [X31+264]
	700 Add X31, X31, 416
	701 Return X0
	702 Call 0x1C17F20
	703 Move X23, X31
	704 Move X0, X23
	705 Call 0x1C17F18
	706 Move X22, X0
	707 Move X8, 0x22EE000
	708 Move X8, [X8+2552]
	709 Move X1, [X8]
	710 Add X0, X31, 160
	711 Call Enumerator<Object>.Dispose, X0
	712 Compare X23, 0
	713 JumpIfNotEqual {716}
	714 Move X0, X22
	715 Call 0x1D2D690
	716 Move X0, X23
	717 Call 0x1C17F18
	718 Call 0x1991590

Method: System.Boolean ValidateBounds(UnityEngine.Bounds newB, System.Collections.Generic.List`1<UnityEngine.Bounds> localBounds, System.Collections.Generic.List`1<UnityEngine.Bounds> globalBounds, System.Nullable`1<UnityEngine.Bounds> ignore)

Disassembly:
	0x01E0D07C ADRP X8, 0x22EC000
	0x01E0D080 LDR X8, [X8 + 0x998]
	0x01E0D084 ADD X0, X31, 0x30
	0x01E0D088 LDR X1, [X8]
	0x01E0D08C BL 0x2BB6B04
	0x01E0D090 CBZ X19, 0x1E0D048
	0x01E0D094 MOV X0, X19
	0x01E0D098 BL 0x1C16F18
	0x01E0D09C MOV X19, X31
	0x01E0D0A0 B 0x1E0D0A8
	0x01E0D0A4 MOV X20, X0
	0x01E0D0A8 ADRP X8, 0x22EC000
	0x01E0D0AC LDR X8, [X8 + 0x998]
	0x01E0D0B0 LDR X1, [X8]
	0x01E0D0B4 ADD X0, X31, 0x30
	0x01E0D0B8 BL 0x2BB6B04
	0x01E0D0BC CBNZ X19, 0x1E0D0C8
	0x01E0D0C0 MOV X0, X20
	0x01E0D0C4 BL 0x1D2C690
	0x01E0D0C8 MOV X0, X19
	0x01E0D0CC BL 0x1C16F18
	0x01E0D0D0 BL 0x1990590
	0x01E0D0D4 MOV X1, X31
	0x01E0D0D8 B 0x3C36C30
	0x01E0D0DC MOV X1, X31
	0x01E0D0E0 B 0x3C36C30
	0x01E0D0E4 STR X30, [X31 - 0x30]!
	0x01E0D0E8 STP X22, X21, [X31 + 0x10]
	0x01E0D0EC STP X20, X19, [X31 + 0x20]
	0x01E0D0F0 ADRP X20, 0x25CB000
	0x01E0D0F4 ADRP X22, 0x22E6000
	0x01E0D0F8 LDRB W8, [X20 + 0xDD4]
	0x01E0D0FC LDR X22, [X22 + 0x598]
	0x01E0D100 MOV X19, X0
	0x01E0D104 TBNZ X8, 0x0, 0x1E0D11C
	0x01E0D108 ADRP X0, 0x22E6000
	0x01E0D10C LDR X0, [X0 + 0x598]
	0x01E0D110 BL 0x1C16CF4
	0x01E0D114 MOVZ W8, 0x1
	0x01E0D118 STRB W8, [X20 + 0xDD4]
	0x01E0D11C MOV X21, X19
	0x01E0D120 LDR X20, [X21 + 0x20]!
	0x01E0D124 LDR X0, [X22]
	0x01E0D128 LDR W8, [X0 + 0xE0]
	0x01E0D12C CBNZ W8, 0x1E0D134
	0x01E0D130 BL 0x1C16DFC
	0x01E0D134 MOV X0, X20
	0x01E0D138 MOV X1, X31
	0x01E0D13C MOV X2, X31
	0x01E0D140 BL 0x3C354F8
	0x01E0D144 TBNZ X0, 0x0, 0x1E0D154
	0x01E0D148 LDR X8, [X19 + 0x28]
	0x01E0D14C CBZ X8, 0x1E0D168
	0x01E0D150 ADD X21, X8, 0x80
	0x01E0D154 LDR X0, [X21]
	0x01E0D158 LDP X20, X19, [X31 + 0x20]
	0x01E0D15C LDP X22, X21, [X31 + 0x10]
	0x01E0D160 LDR X30, [X31], #0x30
	0x01E0D164 RET
	0x01E0D168 BL 0x1C16F20
	0x01E0D16C STR X30, [X31 - 0x10]!
	0x01E0D170 BL 0x1E0D0E4
	0x01E0D174 CBZ X0, 0x1E0D184
	0x01E0D178 LDR W0, [X0 + 0x24]
	0x01E0D17C LDR X30, [X31], #0x10
	0x01E0D180 RET
	0x01E0D184 BL 0x1C16F20
	0x01E0D188 STR D10, [X31 - 0x30]!
	0x01E0D18C STP D9, D8, [X31 + 0x10]
	0x01E0D190 STP X30, X19, [X31 + 0x20]
	0x01E0D194 ADRP X8, 0xFFFFFFFFFECDD000
	0x01E0D198 LDR V3, [X8 + 0xBC]
	0x01E0D19C MOV X19, X0
	0x01E0D1A0 FMOV S0, 1
	0x01E0D1A4 FMOV S1, 1
	0x01E0D1A8 FMOV S2, 1
	0x01E0D1AC MOV X0, X31
	0x01E0D1B0 BL 0x3C0D030
	0x01E0D1B4 LDR W0, [X19 + 0x30]
	0x01E0D1B8 BL 0x1E0D204
	0x01E0D1BC MOV X0, X19
	0x01E0D1C0 MOV X1, X31
	0x01E0D1C4 MOV V8.16B, V0.16B
	0x01E0D1C8 MOV V9.16B, V1.16B
	0x01E0D1CC MOV V10.16B, V2.16B
	0x01E0D1D0 BL 0x3C32E90
	0x01E0D1D4 CBZ X0, 0x1E0D200
	0x01E0D1D8 MOV X1, X31
	0x01E0D1DC BL 0x3C3F58C
	0x01E0D1E0 MOV V3.16B, V8.16B
	0x01E0D1E4 MOV V4.16B, V9.16B
	0x01E0D1E8 LDP X30, X19, [X31 + 0x20]
	0x01E0D1EC LDP D9, D8, [X31 + 0x10]
	0x01E0D1F0 MOV V5.16B, V10.16B
	0x01E0D1F4 MOV X0, X31
	0x01E0D1F8 LDR V10, [X31], #0x30
	0x01E0D1FC B 0x3C0CCD8
	0x01E0D200 BL 0x1C16F20
	0x01E0D204 STP X30, X19, [X31 - 0x10]!
	0x01E0D208 ADRP X19, 0x25CB000
	0x01E0D20C CMP W0, 0x4
	0x01E0D210 B.EQ 0x1E0D250
	0x01E0D214 CMP W0, 0x2
	0x01E0D218 B.EQ 0x1E0D288
	0x01E0D21C CBNZ W0, 0x1E0D250
	0x01E0D220 LDRB W8, [X19 + 0x85B]
	0x01E0D224 CBNZ W8, 0x1E0D23C
	0x01E0D228 ADRP X0, 0x22E6000
	0x01E0D22C LDR X0, [X0 + 0x5A0]
	0x01E0D230 BL 0x1C16CF4
	0x01E0D234 MOVZ W8, 0x1
	0x01E0D238 STRB W8, [X19 + 0x85B]
	0x01E0D23C ADRP X8, 0x22E6000
	0x01E0D240 LDR X8, [X8 + 0x5A0]
	0x01E0D244 FMOV V2.2S, 0x0
	0x01E0D248 FMOV S3, 0.25
	0x01E0D24C B 0x1E0D2B4
	0x01E0D250 LDRB W8, [X19 + 0x85B]
	0x01E0D254 CBNZ W8, 0x1E0D26C
	0x01E0D258 ADRP X0, 0x22E6000
	0x01E0D25C LDR X0, [X0 + 0x5A0]
	0x01E0D260 BL 0x1C16CF4
	0x01E0D264 MOVZ W8, 0x1
	0x01E0D268 STRB W8, [X19 + 0x85B]
	0x01E0D26C ADRP X8, 0x22E6000
	0x01E0D270 LDR X8, [X8 + 0x5A0]
	0x01E0D274 LDR X8, [X8]
	0x01E0D278 LDR X8, [X8 + 0xB8]
	0x01E0D27C LDUR V0, [X8 + 0xC]
	0x01E0D280 LDR V2, [X8 + 0x14]
	0x01E0D284 B 0x1E0D2CC
	0x01E0D288 LDRB W8, [X19 + 0x85B]
	0x01E0D28C CBNZ W8, 0x1E0D2A4
	0x01E0D290 ADRP X0, 0x22E6000
	0x01E0D294 LDR X0, [X0 + 0x5A0]
	0x01E0D298 BL 0x1C16CF4
	0x01E0D29C MOVZ W8, 0x1
	0x01E0D2A0 STRB W8, [X19 + 0x85B]
	0x01E0D2A4 ADRP X8, 0x22E6000
	0x01E0D2A8 LDR X8, [X8 + 0x5A0]
	0x01E0D2AC MOVI V2.2S, 0x3F, 0x18
	0x01E0D2B0 FMOV S3, 0.5
	0x01E0D2B4 LDR X8, [X8]
	0x01E0D2B8 LDR X8, [X8 + 0xB8]
	0x01E0D2BC LDUR V0, [X8 + 0xC]
	0x01E0D2C0 LDR V1, [X8 + 0x14]
	0x00000000 INVALID
	0x01E0D2C8 FMUL S2, S1, S3
	0x01E0D2CC MOV S1, V0.S[1]
	0x01E0D2D0 LDP X30, X19, [X31], #0x10
	0x01E0D2D4 RET
	0x01E0D2D8 STR D10, [X31 - 0x30]!
	0x01E0D2DC STP D9, D8, [X31 + 0x10]
	0x01E0D2E0 STP X30, X19, [X31 + 0x20]
	0x01E0D2E4 MOV X19, X0
	0x01E0D2E8 FMOV S0, 1
	0x01E0D2EC FMOV S1, 1
	0x01E0D2F0 FMOV S2, 1
	0x01E0D2F4 FMOV S3, 1
	0x01E0D2F8 MOV X0, X31
	0x01E0D2FC BL 0x3C0D030
	0x01E0D300 LDR W0, [X19 + 0x30]
	0x01E0D304 BL 0x1E0D204
	0x01E0D308 MOV X0, X19
	0x01E0D30C MOV X1, X31
	0x01E0D310 MOV V8.16B, V0.16B
	0x01E0D314 MOV V9.16B, V1.16B
	0x01E0D318 MOV V10.16B, V2.16B
	0x01E0D31C BL 0x3C32E90
	0x01E0D320 CBZ X0, 0x1E0D34C
	0x01E0D324 MOV X1, X31
	0x01E0D328 BL 0x3C3F58C
	0x01E0D32C MOV V3.16B, V8.16B
	0x01E0D330 MOV V4.16B, V9.16B
	0x01E0D334 LDP X30, X19, [X31 + 0x20]
	0x01E0D338 LDP D9, D8, [X31 + 0x10]
	0x01E0D33C MOV V5.16B, V10.16B
	0x01E0D340 MOV X0, X31
	0x01E0D344 LDR V10, [X31], #0x30
	0x01E0D348 B 0x3C0CCD8
	0x01E0D34C BL 0x1C16F20
	0x01E0D350 MOV X1, X31
	0x01E0D354 B 0x3C36C30
	0x01E0D358 SUB X31, X31, 0xB0
	0x01E0D35C STP D9, D8, [X31 + 0x90]
	0x01E0D360 STP X30, X19, [X31 + 0xA0]
	0x01E0D364 ADRP X8, 0xFFFFFFFFFECDD000
	0x01E0D368 LDR V3, [X8 + 0xBC]
	0x01E0D36C MOV X19, X0
	0x01E0D370 FMOV S0, 1
	0x01E0D374 FMOV S1, 1
	0x01E0D378 FMOV S2, 1
	0x01E0D37C MOV X0, X31
	0x01E0D380 BL 0x3C0D030
	0x01E0D384 LDR W0, [X19 + 0x20]
	0x01E0D388 BL 0x1E0D204
	0x01E0D38C MOV X0, X19
	0x01E0D390 MOV X1, X31
	0x01E0D394 MOV V8.16B, V0.16B
	0x01E0D398 STR D1, [X31]
	0x01E0D39C MOV V9.16B, V2.16B
	0x01E0D3A0 BL 0x3C32E90
	0x01E0D3A4 CBZ X0, 0x1E0D448
	0x01E0D3A8 ADD X8, X31, 0x50
	0x01E0D3AC MOV X1, X31
	0x01E0D3B0 BL 0x3C3F1C8
	0x01E0D3B4 LDP V0, V1, [X31 + 0x50]
	0x01E0D3B8 LDP V2, V3, [X31 + 0x70]
	0x01E0D3BC ADD X0, X31, 0x10
	0x01E0D3C0 MOV X1, X31
	0x01E0D3C4 STP V0, V1, [X31 + 0x10]
	0x01E0D3C8 STP V2, V3, [X31 + 0x30]
	0x01E0D3CC BL 0x3C0D150
	0x01E0D3D0 ADRP X19, 0x25CB000
	0x01E0D3D4 LDRB W8, [X19 + 0x786]
	0x01E0D3D8 CBNZ W8, 0x1E0D3F0
	0x01E0D3DC ADRP X0, 0x22E6000
	0x01E0D3E0 LDR X0, [X0 + 0x5A0]
	0x01E0D3E4 BL 0x1C16CF4
	0x01E0D3E8 MOVZ W8, 0x1
	0x01E0D3EC STRB W8, [X19 + 0x786]
	0x01E0D3F0 ADRP X8, 0x22E6000
	0x01E0D3F4 LDR X8, [X8 + 0x5A0]
	0x01E0D3F8 LDR V4, [X31]
	0x01E0D3FC MOVI V2.2S, 0x3F, 0x18
	0x01E0D400 FMOV S3, 0.5

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+192], D9
	003 Move [X31+200], D8
	004 Move [X31+208], X29
	005 Move [X31+216], X30
	006 Move [X31+224], X26
	007 Move [X31+232], X25
	008 Move [X31+240], X24
	009 Move [X31+248], X23
	010 Move [X31+256], X22
	011 Move [X31+264], X21
	012 Move [X31+272], X20
	013 Move [X31+280], X19
	014 Move X23, 0x25CC000
	015 Move W8, [X23+3528]
	016 Move X19, X4
	017 Move X21, X3
	018 Move X22, X2
	019 Move X20, X1
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {44}
	024 Move X0, 0x22ED000
	025 Move X0, [X0+2456]
	026 Call 0x1C17CF4
	027 Move X0, 0x22ED000
	028 Move X0, [X0+2464]
	029 Call 0x1C17CF4
	030 Move X0, 0x22ED000
	031 Move X0, [X0+2472]
	032 Call 0x1C17CF4
	033 Move X0, 0x22ED000
	034 Move X0, [X0+2480]
	035 Call 0x1C17CF4
	036 Move X0, 0x22ED000
	037 Move X0, [X0+3344]
	038 Call 0x1C17CF4
	039 Move X0, 0x22ED000
	040 Move X0, [X0+3352]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X23+3528], W8
	044 NotImplemented "Instruction MOVI not yet implemented."
	045 Move [X31+176], X31
	046 Move [X31+144], V0
	047 Move [X31+152], V0
	048 Compare X22, 0
	049 JumpIfEqual {222}
	050 Move X26, 0x22ED000
	051 Move X26, [X26+2480]
	052 Move X25, 0x22ED000
	053 Move X24, 0x22ED000
	054 Add X8, X31, 104
	055 Move X1, [X26]
	056 Move X25, [X25+2464]
	057 Move X24, [X24+2456]
	058 Move X0, X22
	059 Call List`1<Bounds>.GetEnumerator, X0
	060 Move X9, -20062208
	061 Move X10, -20066304
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 Move X8, [X31+136]
	065 Move V8, [X9+816]
	066 Move V9, [X10+3872]
	067 Move [X31+144], V0
	068 Move [X31+152], V1
	069 Move [X31+176], X8
	070 Move X1, [X25]
	071 Add X0, X31, 144
	072 Call Enumerator<Bounds>.MoveNext, X0
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {129}
	077 Move S0, [X31+160]
	078 Move S1, [X31+164]
	079 Move S2, [X31+168]
	080 Move S3, [X31+172]
	081 Move W8, [X19]
	082 Move S5, [X31+176]
	083 Move S4, [X31+180]
	084 Compare W8, 0
	085 JumpIfEqual {110}
	086 Move S6, [X19+4]
	087 Move S7, [X19+8]
	088 Move V16, [X19+12]
	089 Subtract S6, S0, S6
	090 Subtract S7, S1, S7
	091 Subtract S16, S2, S16
	092 Multiply S6, S6, S6
	093 Multiply S7, S7, S7
	094 Add S6, S7, S6
	095 Multiply S7, S16, S16
	096 Add S6, S7, S6
	097 NotImplemented "Instruction FCMP not yet implemented."
	098 Move S6, [X19+16]
	099 Move S7, [X19+20]
	100 Move V16, [X19+24]
	101 Subtract S6, S3, S6
	102 Subtract S7, S5, S7
	103 Subtract S16, S4, S16
	104 Multiply S6, S6, S6
	105 Multiply S7, S7, S7
	106 Add S6, S6, S7
	107 Multiply S7, S16, S16
	108 Add S6, S7, S6
	109 NotImplemented "Instruction FCMP not yet implemented."
	110 Move V6, [X20]
	111 Move X8, [X20+16]
	112 Move [X31+80], S0
	113 Move [X31+88], S1
	114 Add X1, X31, 80
	115 Add X2, X31, 48
	116 Move V0, V8
	117 Move [X31+88], S2
	118 Move [X31+96], S3
	119 Move [X31+64], X8
	120 Move [X31+3], V6
	121 Move [X31+96], S5
	122 Move [X31+104], S4
	123 Call Archetype.CustomBoundsCheck, X0, X1, X2, V0
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfNotEqual {70}
	128 Move W19, W31
	129 Move X1, [X24]
	130 Add X0, X31, 144
	131 Call Enumerator<Bounds>.Dispose, X0
	132 Compare X21, 0
	133 JumpIfEqual {222}
	134 Move X1, [X26]
	135 Add X8, X31, 104
	136 Move X0, X21
	137 Call List`1<Bounds>.GetEnumerator, X0
	138 NotImplemented "Instruction LDUR not yet implemented."
	139 NotImplemented "Instruction LDUR not yet implemented."
	140 Move X8, [X31+136]
	141 Move [X31+144], V0
	142 Move [X31+152], V1
	143 Move [X31+176], X8
	144 Move X1, [X25]
	145 Add X0, X31, 144
	146 Call Enumerator<Bounds>.MoveNext, X0
	147 Move W21, W0
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {203}
	152 Move S0, [X31+160]
	153 Move S1, [X31+164]
	154 Move S2, [X31+168]
	155 Move S3, [X31+172]
	156 Move W8, [X19]
	157 Move S5, [X31+176]
	158 Move S4, [X31+180]
	159 Compare W8, 0
	160 JumpIfEqual {185}
	161 Move S6, [X19+4]
	162 Move S7, [X19+8]
	163 Move V16, [X19+12]
	164 Subtract S6, S0, S6
	165 Subtract S7, S1, S7
	166 Subtract S16, S2, S16
	167 Multiply S6, S6, S6
	168 Multiply S7, S7, S7
	169 Add S6, S7, S6
	170 Multiply S7, S16, S16
	171 Add S6, S7, S6
	172 NotImplemented "Instruction FCMP not yet implemented."
	173 Move S6, [X19+16]
	174 Move S7, [X19+20]
	175 Move V16, [X19+24]
	176 Subtract S6, S3, S6
	177 Subtract S7, S5, S7
	178 Subtract S16, S4, S16
	179 Multiply S6, S6, S6
	180 Multiply S7, S7, S7
	181 Add S6, S6, S7
	182 Multiply S7, S16, S16
	183 Add S6, S7, S6
	184 NotImplemented "Instruction FCMP not yet implemented."
	185 Move V6, [X20]
	186 Move X8, [X20+16]
	187 Move [X31+24], S0
	188 Move [X31+32], S1
	189 Add X1, X31, 24
	190 Add X2, X31, 0
	191 Move V0, V8
	192 Move [X31+32], S2
	193 Move [X31+40], S3
	194 Move [X31+16], X8
	195 Move [X31], V6
	196 Move [X31+40], S5
	197 Move [X31+48], S4
	198 Call Archetype.CustomBoundsCheck, X0, X1, X2, V0
	199 Move TEMP, X0
	200 And TEMP, TEMP, 1
	201 Compare TEMP, 1
	202 JumpIfNotEqual {144}
	203 Xor W19, W21, 1
	204 Move X1, [X24]
	205 Add X0, X31, 144
	206 Call Enumerator<Bounds>.Dispose, X0
	207 And W0, W19, 1
	208 Move X20, [X31+272]
	209 Move X19, [X31+280]
	210 Move X22, [X31+256]
	211 Move X21, [X31+264]
	212 Move X24, [X31+240]
	213 Move X23, [X31+248]
	214 Move X26, [X31+224]
	215 Move X25, [X31+232]
	216 Move X29, [X31+208]
	217 Move X30, [X31+216]
	218 Move D9, [X31+192]
	219 Move D8, [X31+200]
	220 Add X31, X31, 288
	221 Return X0
	222 Call 0x1C17F20
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Move X22, X0
	225 Move X0, X22
	226 Call 0x3EB2AD0
	227 Move X19, [X0]
	228 Call 0x3EB2AE0
	229 Move X1, [X24]
	230 Add X0, X31, 144
	231 Call Enumerator<Bounds>.Dispose, X0
	232 Compare X19, 0
	233 JumpIfNotEqual {236}
	234 Move W19, 1
	235 Move X19, X31
	236 Move X0, X19
	237 Call 0x1C17F18
	238 Move X22, X0
	239 Move X1, [X24]
	240 Add X0, X31, 144
	241 Call Enumerator<Bounds>.Dispose, X0
	242 Compare X19, 0
	243 JumpIfEqual {266}
	244 Move X0, X19
	245 Call 0x1C17F18
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Move X22, X0
	248 Move X0, X22
	249 Call 0x3EB2AD0
	250 Move X23, [X0]
	251 Call 0x3EB2AE0
	252 Move X1, [X24]
	253 Add X0, X31, 144
	254 Call Enumerator<Bounds>.Dispose, X0
	255 Compare X23, 0
	256 JumpIfEqual {132}
	257 Move X0, X23
	258 Call 0x1C17F18
	259 Move X23, X31
	260 Move X22, X0
	261 Move X1, [X24]
	262 Add X0, X31, 144
	263 Call Enumerator<Bounds>.Dispose, X0
	264 Compare X23, 0
	265 JumpIfNotEqual {268}
	266 Move X0, X22
	267 Call 0x1D2D690
	268 Move X0, X23
	269 Call 0x1C17F18
	270 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x01E0D404 LDR X8, [X8]
	0x01E0D408 MOV V5.16B, V9.16B

ISIL:
	001 Move X1, X31
	002 Call ForceNode..ctor, X0
	003 Return 

