Type: AnimalCompany.GameGen.SingleRoomArchetype

Method: System.String get_NodeTitle()

Disassembly:
	0x01CF8FC4 LDP X20, X19, [X31 + 0x10]
	0x01CF8FC8 LDR X30, [X31], #0x20
	0x01CF8FCC RET
	0x01CF8FD0 STP X30, X21, [X31 - 0x20]!
	0x01CF8FD4 STP X20, X19, [X31 + 0x10]
	0x01CF8FD8 ADRP X21, 0x252B000
	0x01CF8FDC ADRP X20, 0x2255000
	0x01CF8FE0 LDRB W8, [X21 + 0x708]
	0x01CF8FE4 LDR X20, [X20 + 0x478]
	0x01CF8FE8 MOV X19, X0
	0x01CF8FEC TBNZ X8, 0x0, 0x1CF9010
	0x01CF8FF0 ADRP X0, 0x2255000
	0x01CF8FF4 LDR X0, [X0 + 0x478]
	0x01CF8FF8 BL 0x1B6E7F0
	0x01CF8FFC ADRP X0, 0x2258000
	0x01CF9000 LDR X0, [X0 + 0xA48]
	0x01CF9004 BL 0x1B6E7F0
	0x01CF9008 MOVZ W8, 0x1
	0x01CF900C STRB W8, [X21 + 0x708]
	0x01CF9010 LDR X0, [X20]
	0x01CF9014 LDR X20, [X19 + 0x28]
	0x01CF9018 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x252C000
	006 Move X20, 0x2259000
	007 Move W8, [X21+1794]
	008 Move X20, [X20+2304]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2259000
	015 Move X0, [X0+2304]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X21+1794], W8
	019 Add X19, X19, 40
	020 Move X0, [X19]
	021 Move X1, X31
	022 Call String.IsNullOrEmpty, X0
	023 And W31, W0, 1
	024 NotImplemented "Instruction CSEL not yet implemented."
	025 Move X0, [X8]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.String get_NodeIcon()

Disassembly:
	0x01CF901C CBNZ W8, 0x1CF9024
	0x01CF9020 BL 0x1B6E8F8
	0x01CF9024 MOV X0, X20
	0x01CF9028 MOV X1, X31
	0x01CF902C MOV X2, X31
	0x01CF9030 BL 0x3A9D6EC
	0x01CF9034 TBZ X0, 0x0, 0x1CF9050
	0x01CF9038 LDR X0, [X19 + 0x28]
	0x01CF903C CBZ X0, 0x1CF9068
	0x01CF9040 LDP X20, X19, [X31 + 0x10]
	0x01CF9044 MOV X1, X31
	0x01CF9048 LDP X30, X21, [X31], #0x20
	0x01CF904C B 0x3AA0C88
	0x01CF9050 ADRP X8, 0x2257000
	0x01CF9054 LDR X8, [X8 + 0xA48]
	0x01CF9058 LDP X20, X19, [X31 + 0x10]
	0x01CF905C LDR X0, [X8]
	0x01CF9060 LDP X30, X21, [X31], #0x20
	0x01CF9064 RET
	0x01CF9068 BL 0x1B6EA1C
	0x01CF906C SUB X31, X31, 0x50
	0x01CF9070 STP X30, X25, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x252B000
	005 Move X19, 0x2258000
	006 Move W8, [X20+1795]
	007 Move X19, [X19+1824]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2258000
	013 Move X0, [X0+1824]
	014 Call 0x1B6F7F0
	015 Move W8, 1
	016 Move [X20+1795], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1B6F8F8
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+144]
	027 Move X30, [X31+32]
	028 Return X0

Method: AnimalCompany.GameGen.NodeGenerationResponse Generate(AnimalCompany.GameGen.Socket source, AnimalCompany.GameGen.Generator generator)

Disassembly:
	0x01CF9074 STP X24, X23, [X31 + 0x20]
	0x01CF9078 STP X22, X21, [X31 + 0x30]
	0x01CF907C STP X20, X19, [X31 + 0x40]
	0x01CF9080 ADRP X24, 0x252A000
	0x01CF9084 ADRP X20, 0x2257000
	0x01CF9088 MOV X19, X8
	0x01CF908C LDRB W8, [X24 + 0x709]
	0x01CF9090 LDR X20, [X20 + 0x728]
	0x01CF9094 MOV X22, X2
	0x01CF9098 MOV X23, X1
	0x01CF909C MOV X21, X0
	0x01CF90A0 TBNZ X8, 0x0, 0x1CF9118
	0x01CF90A4 ADRP X0, 0x2254000
	0x01CF90A8 LDR X0, [X0 + 0x8E0]
	0x01CF90AC BL 0x1B6E7F0
	0x01CF90B0 ADRP X0, 0x2257000
	0x01CF90B4 LDR X0, [X0 + 0xA50]
	0x01CF90B8 BL 0x1B6E7F0
	0x01CF90BC ADRP X0, 0x2257000
	0x01CF90C0 LDR X0, [X0 + 0x7C0]
	0x01CF90C4 BL 0x1B6E7F0
	0x01CF90C8 ADRP X0, 0x2257000
	0x01CF90CC LDR X0, [X0 + 0x7C8]
	0x01CF90D0 BL 0x1B6E7F0
	0x01CF90D4 ADRP X0, 0x2257000
	0x01CF90D8 LDR X0, [X0 + 0x7E8]
	0x01CF90DC BL 0x1B6E7F0
	0x01CF90E0 ADRP X0, 0x2257000
	0x01CF90E4 LDR X0, [X0 + 0x7F8]
	0x01CF90E8 BL 0x1B6E7F0
	0x01CF90EC ADRP X0, 0x2257000
	0x01CF90F0 LDR X0, [X0 + 0x728]
	0x01CF90F4 BL 0x1B6E7F0
	0x01CF90F8 ADRP X0, 0x2257000
	0x01CF90FC LDR X0, [X0 + 0xA58]
	0x01CF9100 BL 0x1B6E7F0
	0x01CF9104 ADRP X0, 0x2254000
	0x01CF9108 LDR X0, [X0 + 0xC08]
	0x01CF910C BL 0x1B6E7F0
	0x01CF9110 MOVZ W8, 0x1
	0x01CF9114 STRB W8, [X24 + 0x709]
	0x01CF9118 LDR X0, [X20]
	0x01CF911C STUR W31, [X31 + 0xB]
	0x01CF9120 STR W31, [X31 + 0x8]
	0x01CF9124 BL 0x1B6EA0C
	0x01CF9128 MOV X1, X31
	0x01CF912C MOV X20, X0
	0x01CF9130 BL 0x1CFCEA0
	0x01CF9134 CBZ X20, 0x1CF9270
	0x01CF9138 ADRP X8, 0x2257000
	0x01CF913C LDR X8, [X8 + 0xA50]
	0x01CF9140 STR X21, [X20 + 0x10]
	0x01CF9144 LDR X25, [X21 + 0x28]
	0x01CF9148 LDR X0, [X8]
	0x01CF914C BL 0x1B6EA0C
	0x01CF9150 MOV X1, X25
	0x01CF9154 MOV X2, X31
	0x01CF9158 MOV X24, X0
	0x01CF915C BL 0x1CFD0D8
	0x01CF9160 CBZ X24, 0x1CF9270
	0x01CF9164 MOV X0, X24
	0x01CF9168 MOV X1, X23
	0x01CF916C MOV X2, X22
	0x01CF9170 MOV X3, X31
	0x01CF9174 BL 0x1CFD42C
	0x01CF9178 TBZ X0, 0x0, 0x1CF9230
	0x01CF917C ADRP X8, 0x2257000
	0x01CF9180 LDR X8, [X8 + 0x7E8]
	0x01CF9184 LDR X0, [X8]
	0x01CF9188 BL 0x1B6EA0C
	0x01CF918C ADRP X8, 0x2257000
	0x01CF9190 LDR X8, [X8 + 0x7C0]
	0x01CF9194 MOV X22, X0
	0x01CF9198 LDR X1, [X8]
	0x01CF919C BL 0x2D8CF60
	0x01CF91A0 ADRP X8, 0x2257000
	0x01CF91A4 LDR X8, [X8 + 0x7F8]
	0x01CF91A8 LDR X0, [X8]
	0x01CF91AC BL 0x1B6EA0C
	0x01CF91B0 ADRP X8, 0x2257000
	0x01CF91B4 LDR X8, [X8 + 0x7C8]
	0x01CF91B8 MOV X23, X0
	0x01CF91BC LDR X1, [X8]
	0x01CF91C0 BL 0x2E45D4C
	0x01CF91C4 LDR X0, [X21 + 0x28]
	0x01CF91C8 CBZ X0, 0x1CF9270
	0x01CF91CC MOV X1, X31
	0x01CF91D0 BL 0x3AA0C88
	0x01CF91D4 ADRP X8, 0x2254000
	0x01CF91D8 LDR X8, [X8 + 0xC08]
	0x01CF91DC ADRP X9, 0x2257000
	0x01CF91E0 LDR X9, [X9 + 0xA58]
	0x01CF91E4 MOV X1, X0
	0x01CF91E8 LDR X8, [X8]
	0x01CF91EC MOV X3, X31
	0x01CF91F0 LDR X2, [X9]
	0x01CF91F4 MOV X0, X8
	0x01CF91F8 BL 0x3090300
	0x01CF91FC ADRP X8, 0x2254000
	0x01CF9200 LDR X8, [X8 + 0x8E0]
	0x01CF9204 MOV X21, X0
	0x01CF9208 LDR X8, [X8]
	0x01CF920C MOV X0, X8
	0x01CF9210 BL 0x1B6EA0C
	0x01CF9214 MOV X1, X21
	0x01CF9218 MOV X2, X31
	0x01CF921C MOV X24, X0
	0x01CF9220 BL 0x3A9DAE4
	0x01CF9224 MOVZ W8, 0x1
	0x01CF9228 STR X24, [X20 + 0x18]
	0x01CF922C B 0x1CF923C
	0x01CF9230 MOV W8, W31
	0x01CF9234 MOV X23, X31
	0x01CF9238 MOV X22, X31
	0x01CF923C STRB W8, [X19]
	0x01CF9240 LDUR W8, [X31 + 0xB]
	0x01CF9244 LDR W9, [X31 + 0x8]
	0x01CF9248 STP X23, X22, [X19 + 0x8]
	0x01CF924C STR X20, [X19 + 0x18]
	0x01CF9250 STR W8, [X19 + 0x4]
	0x01CF9254 STUR W9, [X19 + 0x1]
	0x01CF9258 LDP X20, X19, [X31 + 0x40]
	0x01CF925C LDP X22, X21, [X31 + 0x30]
	0x01CF9260 LDP X24, X23, [X31 + 0x20]
	0x01CF9264 LDP X30, X25, [X31 + 0x10]
	0x01CF9268 ADD X31, X31, 0x50
	0x01CF926C RET
	0x01CF9270 BL 0x1B6EA1C
	0x01CF9274 MOV X1, X31
	0x01CF9278 B 0x3036524
	0x01CF927C SUB X31, X31, 0x50
	0x01CF9280 STR X30, [X31 + 0x20]
	0x01CF9284 STP X22, X21, [X31 + 0x30]
	0x01CF9288 STP X20, X19, [X31 + 0x40]
	0x01CF928C ADRP X21, 0x252A000
	0x01CF9290 ADRP X22, 0x2257000
	0x01CF9294 ADRP X20, 0x2257000
	0x01CF9298 LDRB W8, [X21 + 0x70A]
	0x01CF929C LDR X22, [X22 + 0x7F0]
	0x01CF92A0 LDR X20, [X20 + 0x7D0]
	0x01CF92A4 MOV X19, X0
	0x01CF92A8 TBNZ X8, 0x0, 0x1CF92D8
	0x01CF92AC ADRP X0, 0x2257000
	0x01CF92B0 LDR X0, [X0 + 0x798]
	0x01CF92B4 BL 0x1B6E7F0
	0x01CF92B8 ADRP X0, 0x2257000
	0x01CF92BC LDR X0, [X0 + 0x7D0]
	0x01CF92C0 BL 0x1B6E7F0
	0x01CF92C4 ADRP X0, 0x2257000
	0x01CF92C8 LDR X0, [X0 + 0x7F0]
	0x01CF92CC BL 0x1B6E7F0
	0x01CF92D0 MOVZ W8, 0x1
	0x01CF92D4 STRB W8, [X21 + 0x70A]
	0x01CF92D8 LDR X0, [X22]
	0x01CF92DC BL 0x1B6EA0C
	0x01CF92E0 LDR X1, [X20]
	0x01CF92E4 MOV X20, X0
	0x01CF92E8 BL 0x2ED296C
	0x01CF92EC FMOV S0, W31
	0x01CF92F0 FMOV S1, 1
	0x01CF92F4 FMOV S2, 1
	0x01CF92F8 MOV X0, X31
	0x01CF92FC BL 0x3A69FA0
	0x01CF9300 CBZ X20, 0x1CF939C
	0x01CF9304 ADRP X9, 0x2257000
	0x01CF9308 LDR X9, [X9 + 0x798]
	0x01CF930C LDR W11, [X20 + 0x1C]
	0x01CF9310 LDR X8, [X20 + 0x10]
	0x01CF9314 LDR X10, [X9]
	0x01CF9318 ADD W9, W11, 0x1
	0x01CF931C STR W9, [X20 + 0x1C]
	0x01CF9320 CBZ X8, 0x1CF939C
	0x01CF9324 LDRSW X9, [X20 + 0x18]
	0x01CF9328 LDR W11, [X8 + 0x18]
	0x01CF932C CMP W9, W11
	0x01CF9330 B.CS 0x1CF9354
	0x01CF9334 MOVZ W11, 0x18
	0x01CF9338 ADD W10, W9, 0x1
	0x01CF933C MOVZ W12, 0x3F800000
	0x01CF9340 MADD X8, X9, X11, X8
	0x01CF9344 STR W10, [X20 + 0x18]
	0x01CF9348 STP X31, X12, [X8 + 0x20]
	0x01CF934C STR X0, [X8 + 0x30]
	0x01CF9350 B 0x1CF9378
	0x01CF9354 LDR X8, [X10 + 0x20]
	0x01CF9358 ADD X1, X31, 0x8
	0x01CF935C LDR X8, [X8 + 0xC0]
	0x01CF9360 LDR X2, [X8 + 0x70]
	0x01CF9364 MOVZ W8, 0x3F800000
	0x01CF9368 STR X0, [X31 + 0x18]
	0x01CF936C MOV X0, X20
	0x01CF9370 STP X31, X8, [X31 + 0x8]
	0x01CF9374 BL 0x2ED3210
	0x01CF9378 MOV X0, X19
	0x01CF937C MOV X1, X31
	0x01CF9380 STR X20, [X19 + 0x18]
	0x01CF9384 BL 0x3A9EFE0
	0x01CF9388 LDP X20, X19, [X31 + 0x40]
	0x01CF938C LDP X22, X21, [X31 + 0x30]
	0x01CF9390 LDR X30, [X31 + 0x20]
	0x01CF9394 ADD X31, X31, 0x50
	0x01CF9398 RET
	0x01CF939C BL 0x1B6EA1C
	0x01CF93A0 STR X30, [X31 - 0x20]!
	0x01CF93A4 STP X20, X19, [X31 + 0x10]
	0x01CF93A8 ADRP X19, 0x252A000
	0x01CF93AC ADRP X20, 0x2257000
	0x01CF93B0 LDRB W8, [X19 + 0x70B]
	0x01CF93B4 LDR X20, [X20 + 0xA60]
	0x01CF93B8 TBNZ X8, 0x0, 0x1CF93D0
	0x01CF93BC ADRP X0, 0x2257000
	0x01CF93C0 LDR X0, [X0 + 0xA60]
	0x01CF93C4 BL 0x1B6E7F0
	0x01CF93C8 MOVZ W8, 0x1
	0x01CF93CC STRB W8, [X19 + 0x70B]
	0x01CF93D0 LDR X0, [X20]
	0x01CF93D4 LDP X20, X19, [X31 + 0x10]
	0x01CF93D8 LDR X30, [X31], #0x20
	0x01CF93DC RET
	0x01CF93E0 STR X30, [X31 - 0x20]!
	0x01CF93E4 STP X20, X19, [X31 + 0x10]
	0x01CF93E8 ADRP X20, 0x252A000
	0x01CF93EC ADRP X19, 0x2257000
	0x01CF93F0 LDRB W8, [X20 + 0x70C]
	0x01CF93F4 LDR X19, [X19 + 0x720]
	0x01CF93F8 TBNZ X8, 0x0, 0x1CF9410
	0x01CF93FC ADRP X0, 0x2257000
	0x01CF9400 LDR X0, [X0 + 0x720]
	0x01CF9404 BL 0x1B6E7F0
	0x01CF9408 MOVZ W8, 0x1
	0x01CF940C STRB W8, [X20 + 0x70C]
	0x01CF9410 LDR X0, [X19]
	0x01CF9414 LDR W8, [X0 + 0xE0]
	0x01CF9418 CBNZ W8, 0x1CF9424
	0x01CF941C BL 0x1B6E8F8
	0x01CF9420 LDR X0, [X19]
	0x01CF9424 LDR X8, [X0 + 0xB8]
	0x01CF9428 LDP X20, X19, [X31 + 0x10]
	0x01CF942C LDR X0, [X8 + 0x50]
	0x01CF9430 LDR X30, [X31], #0x20
	0x01CF9434 RET
	0x01CF9438 MOVI V0.2D, 0x0
	0x01CF943C STP V0, V0, [X8]
	0x01CF9440 RET
	0x01CF9444 MOVZ W8, 0x3E800000
	0x01CF9448 MOV X1, X31
	0x01CF944C STR W8, [X0 + 0x30]
	0x01CF9450 B 0x3036524
	0x01CF9454 STP X30, X21, [X31 - 0x20]!
	0x01CF9458 STP X20, X19, [X31 + 0x10]
	0x01CF945C ADRP X21, 0x252A000
	0x01CF9460 ADRP X20, 0x2257000
	0x01CF9464 LDRB W8, [X21 + 0x70D]
	0x01CF9468 LDR X20, [X20 + 0x178]
	0x01CF946C MOV X19, X0
	0x01CF9470 TBNZ X8, 0x0, 0x1CF9488
	0x01CF9474 ADRP X0, 0x2257000
	0x01CF9478 LDR X0, [X0 + 0x178]
	0x01CF947C BL 0x1B6E7F0
	0x01CF9480 MOVZ W8, 0x1
	0x01CF9484 STRB W8, [X21 + 0x70D]
	0x01CF9488 LDR X0, [X20]
	0x01CF948C LDR X19, [X19 + 0x28]
	0x01CF9490 LDR W8, [X0 + 0xE0]
	0x01CF9494 CBNZ W8, 0x1CF949C
	0x01CF9498 BL 0x1B6E8F8
	0x01CF949C MOV X0, X19
	0x01CF94A0 LDP X20, X19, [X31 + 0x10]
	0x01CF94A4 MOV X1, X31
	0x01CF94A8 LDP X30, X21, [X31], #0x20
	0x01CF94AC B 0x1D02628
	0x01CF94B0 STP X30, X21, [X31 - 0x20]!
	0x01CF94B4 STP X20, X19, [X31 + 0x10]
	0x01CF94B8 ADRP X21, 0x252A000
	0x01CF94BC ADRP X20, 0x2257000
	0x01CF94C0 LDRB W8, [X21 + 0x70E]
	0x01CF94C4 LDR X20, [X20 + 0x178]
	0x01CF94C8 MOV X19, X0
	0x01CF94CC TBNZ X8, 0x0, 0x1CF94E4
	0x01CF94D0 ADRP X0, 0x2257000
	0x01CF94D4 LDR X0, [X0 + 0x178]
	0x01CF94D8 BL 0x1B6E7F0
	0x01CF94DC MOVZ W8, 0x1
	0x01CF94E0 STRB W8, [X21 + 0x70E]
	0x01CF94E4 LDR X0, [X20]
	0x01CF94E8 LDR X19, [X19 + 0x28]
	0x01CF94EC LDR W8, [X0 + 0xE0]
	0x01CF94F0 CBNZ W8, 0x1CF94F8
	0x01CF94F4 BL 0x1B6E8F8
	0x01CF94F8 MOV X0, X19
	0x01CF94FC LDP X20, X19, [X31 + 0x10]
	0x01CF9500 MOV X1, X31
	0x01CF9504 LDP X30, X21, [X31], #0x20
	0x01CF9508 B 0x1D028FC
	0x01CF950C SUB X31, X31, 0x60
	0x01CF9510 STP X30, X27, [X31 + 0x10]
	0x01CF9514 STP X26, X25, [X31 + 0x20]
	0x01CF9518 STP X24, X23, [X31 + 0x30]
	0x01CF951C STP X22, X21, [X31 + 0x40]
	0x01CF9520 STP X20, X19, [X31 + 0x50]
	0x01CF9524 ADRP X20, 0x252A000
	0x01CF9528 ADRP X23, 0x2254000
	0x01CF952C LDRB W8, [X20 + 0x70F]
	0x01CF9530 LDR X23, [X23 + 0x478]
	0x01CF9534 MOV X19, X0
	0x01CF9538 TBNZ X8, 0x0, 0x1CF95BC
	0x01CF953C ADRP X0, 0x2257000
	0x01CF9540 LDR X0, [X0 + 0xA50]
	0x01CF9544 BL 0x1B6E7F0
	0x01CF9548 ADRP X0, 0x2254000
	0x01CF954C LDR X0, [X0 + 0x5F8]
	0x01CF9550 BL 0x1B6E7F0
	0x01CF9554 ADRP X0, 0x2254000
	0x01CF9558 LDR X0, [X0 + 0x628]
	0x01CF955C BL 0x1B6E7F0
	0x01CF9560 ADRP X0, 0x2254000
	0x01CF9564 LDR X0, [X0 + 0x478]
	0x01CF9568 BL 0x1B6E7F0
	0x01CF956C ADRP X0, 0x2257000
	0x01CF9570 LDR X0, [X0 + 0xA68]
	0x01CF9574 BL 0x1B6E7F0
	0x01CF9578 ADRP X0, 0x2257000
	0x01CF957C LDR X0, [X0 + 0xA70]
	0x01CF9580 BL 0x1B6E7F0
	0x01CF9584 ADRP X0, 0x2257000
	0x01CF9588 LDR X0, [X0 + 0xA78]
	0x01CF958C BL 0x1B6E7F0
	0x01CF9590 ADRP X0, 0x2257000
	0x01CF9594 LDR X0, [X0 + 0xA80]
	0x01CF9598 BL 0x1B6E7F0
	0x01CF959C ADRP X0, 0x2257000
	0x01CF95A0 LDR X0, [X0 + 0xA88]
	0x01CF95A4 BL 0x1B6E7F0
	0x01CF95A8 ADRP X0, 0x2257000
	0x01CF95AC LDR X0, [X0 + 0xA90]
	0x01CF95B0 BL 0x1B6E7F0
	0x01CF95B4 MOVZ W8, 0x1
	0x01CF95B8 STRB W8, [X20 + 0x70F]
	0x01CF95BC LDR X0, [X23]
	0x01CF95C0 STR W31, [X31 + 0xC]
	0x01CF95C4 LDR X20, [X19 + 0x30]
	0x01CF95C8 LDR W8, [X0 + 0xE0]
	0x01CF95CC CBNZ W8, 0x1CF95D4
	0x01CF95D0 BL 0x1B6E8F8
	0x01CF95D4 ADRP X26, 0x2254000
	0x01CF95D8 ADRP X25, 0x2257000
	0x01CF95DC ADRP X24, 0x2257000
	0x01CF95E0 LDR X26, [X26 + 0x628]
	0x01CF95E4 LDR X25, [X25 + 0xA78]
	0x01CF95E8 LDR X24, [X24 + 0xA70]
	0x01CF95EC MOV X0, X20
	0x01CF95F0 MOV X1, X31
	0x01CF95F4 MOV X2, X31
	0x01CF95F8 BL 0x3AA0AF0
	0x01CF95FC TBNZ X0, 0x0, 0x1CF9628
	0x01CF9600 LDR X0, [X23]
	0x01CF9604 LDR X20, [X19 + 0x38]
	0x01CF9608 LDR W8, [X0 + 0xE0]
	0x01CF960C CBNZ W8, 0x1CF9614
	0x01CF9610 BL 0x1B6E8F8
	0x01CF9614 MOV X0, X20
	0x01CF9618 MOV X1, X31
	0x01CF961C MOV X2, X31
	0x01CF9620 BL 0x3AA0AF0
	0x01CF9624 TBZ X0, 0x0, 0x1CF967C
	0x01CF9628 LDR X0, [X26]
	0x01CF962C ADRP X19, 0x2257000
	0x01CF9630 LDR W8, [X0 + 0xE0]
	0x01CF9634 LDR X19, [X19 + 0xA68]
	0x01CF9638 CBNZ W8, 0x1CF9640
	0x01CF963C BL 0x1B6E8F8
	0x01CF9640 LDR X1, [X19]
	0x01CF9644 LDR X3, [X25]
	0x01CF9648 LDR X4, [X24]
	0x01CF964C MOVZ W0, 0x20
	0x01CF9650 MOVZ W5, 0x43
	0x01CF9654 MOV X2, X31
	0x01CF9658 MOV X6, X31
	0x01CF965C BL 0x342B7DC
	0x01CF9660 LDP X20, X19, [X31 + 0x50]
	0x01CF9664 LDP X22, X21, [X31 + 0x40]
	0x01CF9668 LDP X24, X23, [X31 + 0x30]
	0x01CF966C LDP X26, X25, [X31 + 0x20]
	0x01CF9670 LDP X30, X27, [X31 + 0x10]
	0x01CF9674 ADD X31, X31, 0x60
	0x01CF9678 RET
	0x01CF967C MOV X0, X19
	0x01CF9680 MOV X1, X31
	0x01CF9684 BL 0x3A9B084
	0x01CF9688 CBZ X0, 0x1CF99FC
	0x01CF968C MOV X1, X31
	0x01CF9690 BL 0x3AA8D58
	0x01CF9694 SUBS W20, W0, 0x1
	0x01CF9698 B.MI 0x1CF96F0
	0x01CF969C MOV X0, X19
	0x01CF96A0 MOV X1, X31
	0x01CF96A4 BL 0x3A9B084
	0x01CF96A8 CBZ X0, 0x1CF99FC
	0x01CF96AC MOV W1, W20
	0x01CF96B0 MOV X2, X31
	0x01CF96B4 BL 0x3AA916C
	0x01CF96B8 CBZ X0, 0x1CF99FC
	0x01CF96BC MOV X1, X31
	0x01CF96C0 BL 0x3A9B0C0
	0x01CF96C4 LDR X8, [X23]
	0x01CF96C8 MOV X21, X0
	0x01CF96CC LDR W9, [X8 + 0xE0]
	0x01CF96D0 CBNZ W9, 0x1CF96DC
	0x01CF96D4 MOV X0, X8
	0x01CF96D8 BL 0x1B6E8F8
	0x01CF96DC MOV X0, X21
	0x01CF96E0 MOV X1, X31
	0x01CF96E4 BL 0x3AA16B0
	0x01CF96E8 SUBS W20, W20, 0x1
	0x01CF96EC B.PL 0x1CF969C
	0x01CF96F0 ADRP X8, 0x2257000
	0x01CF96F4 LDR X21, [X19 + 0x30]
	0x01CF96F8 LDR X8, [X8 + 0xA50]
	0x01CF96FC LDR X0, [X8]
	0x01CF9700 BL 0x1B6EA0C
	0x01CF9704 MOV X1, X21
	0x01CF9708 MOV X2, X31
	0x01CF970C MOV X20, X0
	0x01CF9710 BL 0x1CFD0D8
	0x01CF9714 MOV W27, W31
	0x01CF9718 STR W31, [X31 + 0xC]
	0x01CF971C LDP X21, X22, [X19 + 0x38]
	0x01CF9720 MOVZ W1, 0x86A0
	0x01CF9724 MOVK W1, 0x10000
	0x01CF9728 MOV W0, W31
	0x01CF972C MOV X2, X31
	0x01CF9730 BL 0x3A98D10
	0x01CF9734 CBZ X20, 0x1CF99FC
	0x01CF9738 LDR W4, [X19 + 0x20]
	0x01CF973C MOV W3, W0
	0x01CF9740 MOVZ W5, 0x1
	0x01CF9744 MOVZ W6, 0x1
	0x01CF9748 MOV X0, X20
	0x01CF974C MOV X1, X21
	0x01CF9750 MOV X2, X22
	0x01CF9754 MOV X7, X31
	0x01CF9758 BL 0x1CFD758
	0x01CF975C TBNZ X0, 0x0, 0x1CF98CC
	0x01CF9760 MOV X0, X19
	0x01CF9764 MOV X1, X31
	0x01CF9768 BL 0x3A9B084
	0x01CF976C CBZ X0, 0x1CF99FC
	0x01CF9770 MOV X1, X31
	0x01CF9774 BL 0x3AA8D58
	0x01CF9778 SUBS W21, W0, 0x1
	0x01CF977C B.MI 0x1CF97D4
	0x01CF9780 MOV X0, X19
	0x01CF9784 MOV X1, X31
	0x01CF9788 BL 0x3A9B084
	0x01CF978C CBZ X0, 0x1CF99FC
	0x01CF9790 MOV W1, W21
	0x01CF9794 MOV X2, X31
	0x01CF9798 BL 0x3AA916C
	0x01CF979C CBZ X0, 0x1CF99FC
	0x01CF97A0 MOV X1, X31
	0x01CF97A4 BL 0x3A9B0C0
	0x01CF97A8 LDR X8, [X23]
	0x01CF97AC MOV X22, X0
	0x01CF97B0 LDR W9, [X8 + 0xE0]
	0x01CF97B4 CBNZ W9, 0x1CF97C0
	0x01CF97B8 MOV X0, X8
	0x01CF97BC BL 0x1B6E8F8
	0x01CF97C0 MOV X0, X22
	0x01CF97C4 MOV X1, X31
	0x01CF97C8 BL 0x3AA16B0
	0x01CF97CC SUBS W21, W21, 0x1
	0x01CF97D0 B.PL 0x1CF9780
	0x01CF97D4 ADD W27, W27, 0x1
	0x01CF97D8 CMP W27, 0x40
	0x01CF97DC STR W27, [X31 + 0xC]
	0x01CF97E0 B.LT 0x1CF971C
	0x01CF97E4 ADRP X8, 0x2254000
	0x01CF97E8 LDR X8, [X8 + 0x5F8]
	0x01CF97EC ADD X1, X31, 0x8
	0x01CF97F0 LDR X0, [X8]
	0x01CF97F4 MOVZ W8, 0x40
	0x01CF97F8 STR W8, [X31 + 0x8]
	0x01CF97FC BL 0x1B6E900
	0x01CF9800 ADRP X8, 0x2257000
	0x01CF9804 LDR X8, [X8 + 0xA88]
	0x01CF9808 MOV X1, X0
	0x01CF980C MOV X2, X31
	0x01CF9810 LDR X8, [X8]
	0x01CF9814 MOV X0, X8
	0x01CF9818 BL 0x3087E18
	0x01CF981C LDR X8, [X26]
	0x01CF9820 MOV X20, X0
	0x01CF9824 LDR W9, [X8 + 0xE0]
	0x01CF9828 CBNZ W9, 0x1CF9834
	0x01CF982C MOV X0, X8
	0x01CF9830 BL 0x1B6E8F8
	0x01CF9834 LDR X3, [X25]
	0x01CF9838 LDR X4, [X24]
	0x01CF983C MOVZ W0, 0x20
	0x01CF9840 MOVZ W5, 0x6B
	0x01CF9844 MOV X1, X20
	0x01CF9848 MOV X2, X31
	0x01CF984C MOV X6, X31
	0x01CF9850 BL 0x342B7DC
	0x01CF9854 MOV X0, X19
	0x01CF9858 MOV X1, X31
	0x01CF985C BL 0x3A9B084
	0x01CF9860 CBZ X0, 0x1CF99FC
	0x01CF9864 MOV X1, X31
	0x01CF9868 BL 0x3AA8D58
	0x01CF986C SUBS W20, W0, 0x1
	0x01CF9870 B.MI 0x1CF9660
	0x01CF9874 MOV X0, X19
	0x01CF9878 MOV X1, X31
	0x01CF987C BL 0x3A9B084
	0x01CF9880 CBZ X0, 0x1CF99FC
	0x01CF9884 MOV W1, W20
	0x01CF9888 MOV X2, X31
	0x01CF988C BL 0x3AA916C
	0x01CF9890 CBZ X0, 0x1CF99FC
	0x01CF9894 MOV X1, X31
	0x01CF9898 BL 0x3A9B0C0
	0x01CF989C LDR X8, [X23]
	0x01CF98A0 MOV X21, X0
	0x01CF98A4 LDR W9, [X8 + 0xE0]
	0x01CF98A8 CBNZ W9, 0x1CF98B4
	0x01CF98AC MOV X0, X8
	0x01CF98B0 BL 0x1B6E8F8
	0x01CF98B4 MOV X0, X21
	0x01CF98B8 MOV X1, X31
	0x01CF98BC BL 0x3AA16B0
	0x01CF98C0 SUBS W20, W20, 0x1
	0x01CF98C4 B.PL 0x1CF9874
	0x01CF98C8 B 0x1CF9660
	0x01CF98CC ADD X0, X31, 0xC
	0x01CF98D0 MOV X1, X31
	0x01CF98D4 BL 0x31E4D14
	0x01CF98D8 ADRP X8, 0x2257000
	0x01CF98DC LDR X8, [X8 + 0xA80]
	0x01CF98E0 ADRP X9, 0x2257000
	0x01CF98E4 LDR X9, [X9 + 0xA90]
	0x01CF98E8 MOV X1, X0
	0x01CF98EC LDR X8, [X8]
	0x01CF98F0 MOV X3, X31
	0x01CF98F4 LDR X2, [X9]
	0x01CF98F8 MOV X0, X8
	0x01CF98FC BL 0x3090300
	0x01CF9900 LDR X8, [X26]
	0x01CF9904 MOV X21, X0
	0x01CF9908 LDR W9, [X8 + 0xE0]
	0x01CF990C CBNZ W9, 0x1CF9918
	0x01CF9910 MOV X0, X8
	0x01CF9914 BL 0x1B6E8F8
	0x01CF9918 LDR X3, [X25]
	0x01CF991C LDR X4, [X24]
	0x01CF9920 MOVZ W0, 0x20
	0x01CF9924 MOVZ W5, 0x52
	0x01CF9928 MOV X1, X21
	0x01CF992C MOV X2, X31
	0x01CF9930 MOV X6, X31
	0x01CF9934 BL 0x342B224
	0x01CF9938 LDR X8, [X20 + 0x28]
	0x01CF993C CBZ X8, 0x1CF99FC
	0x01CF9940 LDR X8, [X8 + 0x20]
	0x01CF9944 LDR X21, [X19 + 0x48]
	0x01CF9948 STR X8, [X19 + 0x28]
	0x01CF994C LDR X0, [X23]
	0x01CF9950 LDR W8, [X0 + 0xE0]
	0x01CF9954 CBNZ W8, 0x1CF995C
	0x01CF9958 BL 0x1B6E8F8
	0x01CF995C MOV X0, X21
	0x01CF9960 MOV X1, X31
	0x01CF9964 MOV X2, X31
	0x01CF9968 BL 0x3A9D6EC
	0x01CF996C TBZ X0, 0x0, 0x1CF9984
	0x01CF9970 LDR X0, [X20 + 0x48]
	0x01CF9974 CBZ X0, 0x1CF99FC
	0x01CF9978 LDR X1, [X19 + 0x48]
	0x01CF997C MOV X2, X31
	0x01CF9980 BL 0x3AA7DEC
	0x01CF9984 LDR X0, [X23]
	0x01CF9988 LDR X21, [X19 + 0x50]
	0x01CF998C LDR W8, [X0 + 0xE0]
	0x01CF9990 CBNZ W8, 0x1CF9998
	0x01CF9994 BL 0x1B6E8F8
	0x01CF9998 MOV X0, X21
	0x01CF999C MOV X1, X31
	0x01CF99A0 MOV X2, X31
	0x01CF99A4 BL 0x3A9D6EC
	0x01CF99A8 TBZ X0, 0x0, 0x1CF99C0
	0x01CF99AC LDR X0, [X20 + 0x40]
	0x01CF99B0 CBZ X0, 0x1CF99FC
	0x01CF99B4 LDR X1, [X19 + 0x50]
	0x01CF99B8 MOV X2, X31
	0x01CF99BC BL 0x3AA7DEC
	0x01CF99C0 LDR X0, [X23]
	0x01CF99C4 LDR X20, [X19 + 0x58]
	0x01CF99C8 LDR W8, [X0 + 0xE0]
	0x01CF99CC CBNZ W8, 0x1CF99D4
	0x01CF99D0 BL 0x1B6E8F8
	0x01CF99D4 MOV X0, X20
	0x01CF99D8 MOV X1, X31
	0x01CF99DC MOV X2, X31
	0x01CF99E0 BL 0x3A9D6EC
	0x01CF99E4 TBZ X0, 0x0, 0x1CF9660
	0x01CF99E8 LDR X0, [X19 + 0x58]
	0x01CF99EC CBZ X0, 0x1CF99FC
	0x01CF99F0 MOV X1, X31
	0x01CF99F4 BL 0x3549430
	0x01CF99F8 B 0x1CF9660
	0x01CF99FC BL 0x1B6EA1C
	0x01CF9A00 SUB X31, X31, 0x80
	0x01CF9A04 STR X30, [X31 + 0x60]
	0x01CF9A08 STP X20, X19, [X31 + 0x70]
	0x01CF9A0C ADRP X20, 0x252A000
	0x01CF9A10 LDRB W8, [X20 + 0x710]
	0x01CF9A14 MOV X19, X0
	0x01CF9A18 TBNZ X8, 0x0, 0x1CF9A54
	0x01CF9A1C ADRP X0, 0x2257000
	0x01CF9A20 LDR X0, [X0 + 0x830]
	0x01CF9A24 BL 0x1B6E7F0
	0x01CF9A28 ADRP X0, 0x2257000
	0x01CF9A2C LDR X0, [X0 + 0x838]
	0x01CF9A30 BL 0x1B6E7F0
	0x01CF9A34 ADRP X0, 0x2257000
	0x01CF9A38 LDR X0, [X0 + 0x840]
	0x01CF9A3C BL 0x1B6E7F0
	0x01CF9A40 ADRP X0, 0x2257000
	0x01CF9A44 LDR X0, [X0 + 0x848]
	0x01CF9A48 BL 0x1B6E7F0
	0x01CF9A4C MOVZ W8, 0x1
	0x01CF9A50 STRB W8, [X20 + 0x710]
	0x01CF9A54 MOVI V0.2D, 0x0
	0x01CF9A58 STR X31, [X31 + 0x50]
	0x01CF9A5C STP V0, V0, [X31 + 0x30]
	0x01CF9A60 LDR X8, [X19 + 0x40]
	0x01CF9A64 CBZ X8, 0x1CF9B00
	0x01CF9A68 FMOV S0, 1
	0x01CF9A6C FMOV S1, W31
	0x01CF9A70 FMOV S2, W31
	0x01CF9A74 FMOV S3, 1
	0x01CF9A78 MOV X0, X31
	0x01CF9A7C BL 0x3A75B14
	0x01CF9A80 LDR X0, [X19 + 0x40]
	0x01CF9A84 CBZ X0, 0x1CF9B10
	0x01CF9A88 ADRP X8, 0x2257000
	0x01CF9A8C LDR X8, [X8 + 0x848]
	0x01CF9A90 ADRP X20, 0x2257000
	0x01CF9A94 ADRP X19, 0x2257000
	0x01CF9A98 LDR X1, [X8]
	0x01CF9A9C LDR X20, [X20 + 0x838]
	0x01CF9AA0 LDR X19, [X19 + 0x830]
	0x01CF9AA4 ADD X8, X31, 0x8
	0x01CF9AA8 BL 0x2D8E68C
	0x01CF9AAC LDUR V0, [X31 + 0x8]
	0x01CF9AB0 LDUR V1, [X31 + 0x18]
	0x01CF9AB4 LDR X8, [X31 + 0x28]
	0x01CF9AB8 STP V0, V1, [X31 + 0x30]
	0x01CF9ABC STR X8, [X31 + 0x50]
	0x01CF9AC0 LDR X1, [X20]

ISIL:
	001 Subtract X31, X31, 416
	002 Move [X31+256], D15
	003 Move [X31+264], D14
	004 Move [X31+272], D13
	005 Move [X31+280], D12
	006 Move [X31+288], D11
	007 Move [X31+296], D10
	008 Move [X31+304], D9
	009 Move [X31+312], D8
	010 Move [X31+320], X29
	011 Move [X31+328], X30
	012 Move [X31+336], X28
	013 Move [X31+344], X27
	014 Move [X31+352], X26
	015 Move [X31+360], X25
	016 Move [X31+368], X24
	017 Move [X31+376], X23
	018 Move [X31+384], X22
	019 Move [X31+392], X21
	020 Move [X31+400], X20
	021 Move [X31+408], X19
	022 Move X24, 0x252B000
	023 Move X20, 0x2258000
	024 Move X19, X8
	025 Move W8, [X24+1796]
	026 Move X20, [X20+1832]
	027 Move X23, X2
	028 Move X22, X1
	029 Move X21, X0
	030 Add X25, X31, 216
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {91}
	035 Move X0, 0x2258000
	036 Move X0, [X0+1840]
	037 Call 0x1B6F7F0
	038 Move X0, 0x2258000
	039 Move X0, [X0+1872]
	040 Call 0x1B6F7F0
	041 Move X0, 0x2258000
	042 Move X0, [X0+1888]
	043 Call 0x1B6F7F0
	044 Move X0, 0x2255000
	045 Move X0, [X0+2272]
	046 Call 0x1B6F7F0
	047 Move X0, 0x2258000
	048 Move X0, [X0+1920]
	049 Call 0x1B6F7F0
	050 Move X0, 0x2258000
	051 Move X0, [X0+1928]
	052 Call 0x1B6F7F0
	053 Move X0, 0x2258000
	054 Move X0, [X0+1936]
	055 Call 0x1B6F7F0
	056 Move X0, 0x2258000
	057 Move X0, [X0+1968]
	058 Call 0x1B6F7F0
	059 Move X0, 0x2258000
	060 Move X0, [X0+1984]
	061 Call 0x1B6F7F0
	062 Move X0, 0x2258000
	063 Move X0, [X0+1992]
	064 Call 0x1B6F7F0
	065 Move X0, 0x2258000
	066 Move X0, [X0+2024]
	067 Call 0x1B6F7F0
	068 Move X0, 0x2258000
	069 Move X0, [X0+2040]
	070 Call 0x1B6F7F0
	071 Move X0, 0x2258000
	072 Move X0, [X0+1832]
	073 Call 0x1B6F7F0
	074 Move X0, 0x2258000
	075 Move X0, [X0+2584]
	076 Call 0x1B6F7F0
	077 Move X0, 0x2258000
	078 Move X0, [X0+2048]
	079 Call 0x1B6F7F0
	080 Move X0, 0x2255000
	081 Move X0, [X0+1144]
	082 Call 0x1B6F7F0
	083 Move X0, 0x2258000
	084 Move X0, [X0+2592]
	085 Call 0x1B6F7F0
	086 Move X0, 0x2255000
	087 Move X0, [X0+3080]
	088 Call 0x1B6F7F0
	089 Move W8, 1
	090 Move [X24+1796], W8
	091 Move X0, [X20]
	092 Move [X31+192], X31
	093 Move [X31+200], X31
	094 Move [X31+208], X31
	095 Move [X31+160], X31
	096 Move [X31+168], X31
	097 Move [X31+176], X31
	098 Move [X31+216], W31
	099 Move [X25+3], W31
	100 Call 0x1B6FA0C
	101 Move X1, X31
	102 Move X20, X0
	103 Call NodeGenerationResult..ctor, X0
	104 Compare X20, 0
	105 JumpIfEqual {706}
	106 Move X24, 0x2255000
	107 Move X25, 0x2258000
	108 Move X26, 0x2255000
	109 Move X24, [X24+3080]
	110 Move X25, [X25+2592]
	111 Move X26, [X26+2272]
	112 Move X0, X21
	113 Move [X20+16], X21
	114 Call SingleRoomArchetype.get_NodeTitle, X0
	115 Move X8, [X24]
	116 Move X2, [X25]
	117 Move X1, X0
	118 Move X3, X31
	119 Move X0, X8
	120 Call String.Concat, X0, X1, X2
	121 Move X8, [X26]
	122 Move X25, X0
	123 Move X0, X8
	124 Call 0x1B6FA0C
	125 Move X1, X25
	126 Move X2, X31
	127 Move X24, X0
	128 Call GameObject..ctor, X0, X1
	129 Compare X24, 0
	130 JumpIfEqual {706}
	131 Move X0, X24
	132 Move X1, X31
	133 Call GameObject.get_transform, X0
	134 Compare X0, 0
	135 JumpIfEqual {706}
	136 Move X1, X31
	137 Move X24, X0
	138 Call Component.get_transform, X0
	139 Compare X22, 0
	140 JumpIfEqual {706}
	141 Move X25, X0
	142 Move X0, X22
	143 Move X1, X31
	144 Call Component.get_transform, X0
	145 Compare X25, 0
	146 JumpIfEqual {706}
	147 Move X1, X0
	148 Move X0, X25
	149 Move X2, X31
	150 Call Transform.set_parent, X0, X1
	151 Move X0, X24
	152 Move X1, X31
	153 Call Component.get_transform, X0
	154 Move X26, 0x252B000
	155 Move W8, [X26+1087]
	156 Move X25, X0
	157 Compare W8, 0
	158 JumpIfNotEqual {164}
	159 Move X0, 0x2255000
	160 Move X0, [X0+1152]
	161 Call 0x1B6F7F0
	162 Move W8, 1
	163 Move [X26+1087], W8
	164 Compare X25, 0
	165 JumpIfEqual {706}
	166 Move X8, 0x2255000
	167 Move X8, [X8+1152]
	168 Move X0, X25
	169 Move X1, X31
	170 Move X8, [X8]
	171 Move X8, [X8+184]
	172 Move S1, [X8+4]
	173 Move S2, [X8+8]
	174 Move V0, [X8]
	175 Call Transform.set_localPosition, X0, X1
	176 Move X0, X24
	177 Move X1, X31
	178 Call Component.get_transform, X0
	179 Move X26, 0x252B000
	180 Move W8, [X26+1108]
	181 Move X25, X0
	182 Compare W8, 0
	183 JumpIfNotEqual {189}
	184 Move X0, 0x2256000
	185 Move X0, [X0+504]
	186 Call 0x1B6F7F0
	187 Move W8, 1
	188 Move [X26+1108], W8
	189 Compare X25, 0
	190 JumpIfEqual {706}
	191 Move X8, 0x2256000
	192 Move X8, [X8+504]
	193 Move X0, X25
	194 Move X1, X31
	195 Move X8, [X8]
	196 Move X8, [X8+184]
	197 Move S2, [X8+8]
	198 Move S3, [X8+12]
	199 Move S0, [X8]
	200 Move S1, [X8+4]
	201 Call Transform.set_localRotation, X0, X1
	202 Move X0, X24
	203 Move X1, X31
	204 Call Component.get_gameObject, X0
	205 Move [X20+24], X0
	206 Move X24, [X21+48]
	207 Move X0, X22
	208 Move X1, X31
	209 Call Component.get_transform, X0
	210 Compare X0, 0
	211 JumpIfEqual {706}
	212 Move X1, X31
	213 Call Transform.get_position, X0
	214 Move X0, X22
	215 Move X1, X31
	216 Move V8, V0
	217 Move V9, V1
	218 Move V10, V2
	219 Call Component.get_transform, X0
	220 Compare X0, 0
	221 JumpIfEqual {706}
	222 Move X28, 0x2255000
	223 Move X26, 0x2258000
	224 Move X28, [X28+1144]
	225 Move X26, [X26+2048]
	226 Move X1, X31
	227 Call Transform.get_rotation, X0
	228 Move X0, X22
	229 Move X1, X31
	230 Move V11, V0
	231 Move V12, V1
	232 Move V13, V2
	233 Move V14, V3
	234 Call Component.get_transform, X0
	235 Move X8, [X28]
	236 Move X25, X0
	237 Move W9, [X8+224]
	238 Compare W9, 0
	239 JumpIfNotEqual {242}
	240 Move X0, X8
	241 Call 0x1B6F8F8
	242 Move X2, [X26]
	243 Move X0, X24
	244 Move V0, V8
	245 Move V1, V9
	246 Move V2, V10
	247 Move V3, V11
	248 Move V4, V12
	249 Move V5, V13
	250 Move V6, V14
	251 Move X1, X25
	252 Call 0x2116080, X0, X1, X2, X3
	253 Compare X0, 0
	254 JumpIfEqual {706}
	255 Move W1, 1
	256 Move X2, X31
	257 Move X24, X0
	258 Call Tile.GetRandomSocket, X0, X1
	259 Compare X0, 0
	260 JumpIfEqual {706}
	261 Move X1, X31
	262 Move X25, X0
	263 Call Component.get_transform, X0
	264 Compare X0, 0
	265 JumpIfEqual {706}
	266 Move X1, X31
	267 Call Transform.get_forward, X0
	268 NotImplemented "Instruction FNEG not yet implemented."
	269 NotImplemented "Instruction FNEG not yet implemented."
	270 NotImplemented "Instruction FNEG not yet implemented."
	271 Move X0, X31
	272 Call Quaternion.LookRotation, X0
	273 Move X0, X31
	274 Call Quaternion.Inverse, X0
	275 Move X0, X24
	276 Move X1, X31
	277 Move V10, V0
	278 Move V9, V1
	279 Move V8, V2
	280 Move V11, V3
	281 Call Component.get_transform, X0
	282 Compare X0, 0
	283 JumpIfEqual {706}
	284 Move X1, X31
	285 Call Transform.get_forward, X0
	286 Move X0, X31
	287 Call Quaternion.LookRotation, X0
	288 Move X0, X24
	289 Move X1, X31
	290 Move V14, V0
	291 Move V13, V1
	292 Move V12, V2
	293 Move V15, V3
	294 Call Component.get_transform, X0
	295 Move X26, X0
	296 Move X0, X24
	297 Move X1, X31
	298 Call Component.get_transform, X0
	299 Compare X0, 0
	300 JumpIfEqual {706}
	301 Move X1, X31
	302 Call Transform.get_rotation, X0
	303 Compare X26, 0
	304 JumpIfEqual {706}
	305 Multiply S4, S11, S14
	306 Multiply S5, S10, S15
	307 Multiply S16, S11, S13
	308 Multiply S17, S9, S15
	309 Multiply S21, S10, S14
	310 Multiply S24, S11, S12
	311 Multiply S25, S11, S15
	312 Multiply S26, S8, S15
	313 Multiply S6, S9, S12
	314 Multiply S18, S8, S14
	315 Multiply S20, S10, S13
	316 Multiply S23, S9, S13
	317 Add S4, S4, S5
	318 Add S5, S16, S17
	319 Add S16, S24, S26
	320 Subtract S17, S25, S21
	321 Multiply S7, S8, S13
	322 Multiply S19, S10, S12
	323 Multiply S22, S9, S14
	324 Multiply S27, S8, S12
	325 Add S4, S6, S4
	326 Add S5, S18, S5
	327 Add S6, S20, S16
	328 Subtract S16, S17, S23
	329 Subtract S4, S4, S7
	330 Subtract S5, S5, S19
	331 Subtract S6, S6, S22
	332 Subtract S7, S16, S27
	333 Multiply S16, S7, S3
	334 Multiply S17, S4, S0
	335 Multiply S18, S5, S1
	336 Multiply S19, S6, S2
	337 Multiply S20, S5, S0
	338 Multiply S21, S6, S3
	339 Multiply S22, S7, S2
	340 Multiply S23, S4, S1
	341 Multiply S24, S7, S1
	342 Multiply S1, S6, S1
	343 Multiply S6, S6, S0
	344 Multiply S0, S7, S0
	345 Multiply S7, S4, S2
	346 Multiply S4, S4, S3
	347 Multiply S3, S5, S3
	348 Multiply S5, S5, S2
	349 Subtract S2, S16, S17
	350 Add S16, S21, S22
	351 Add S3, S3, S24
	352 Add S0, S4, S0
	353 Subtract S2, S2, S18
	354 Add S4, S20, S16
	355 Add S7, S7, S3
	356 Add S0, S1, S0
	357 Subtract S3, S2, S19
	358 Subtract S2, S4, S23
	359 Subtract S1, S7, S6
	360 Subtract S0, S0, S5
	361 Move X0, X26
	362 Move X1, X31
	363 Call Transform.set_rotation, X0, X1
	364 Move X0, X24
	365 Move X1, X31
	366 Call Component.get_transform, X0
	367 Compare X0, 0
	368 JumpIfEqual {706}
	369 Move X1, X31
	370 Call Transform.get_position, X0
	371 Move X0, X25
	372 Move X1, X31
	373 Move V13, V0
	374 Move V14, V1
	375 Move V11, V2
	376 Call Component.get_transform, X0
	377 Compare X0, 0
	378 JumpIfEqual {706}
	379 Move X1, X31
	380 Call Transform.get_position, X0
	381 Move X0, X22
	382 Move X1, X31
	383 Move V12, V0
	384 Move [X31+24], S2
	385 Move [X31+32], S1
	386 Call Component.get_transform, X0
	387 Compare X0, 0
	388 JumpIfEqual {706}
	389 Move X1, X31
	390 Move [X31+20], S11
	391 Call Transform.get_position, X0
	392 Move X0, X24
	393 Move X1, X31
	394 Move [X31+16], S0
	395 Move V15, V1
	396 Move V8, V2
	397 Call Component.get_transform, X0
	398 Compare X0, 0
	399 JumpIfEqual {706}
	400 Move X1, X31
	401 Call Transform.get_position, X0
	402 Move X0, X24
	403 Move X1, X31
	404 Move V9, V0
	405 Move V10, V1
	406 Move V11, V2
	407 Call Component.get_transform, X0
	408 Compare X0, 0
	409 JumpIfEqual {706}
	410 Move X29, 0x2258000
	411 Move X27, 0x2258000
	412 Move X29, [X29+2024]
	413 Move X27, [X27+1984]
	414 Move S1, [X31+24]
	415 Move S0, [X31+28]
	416 Subtract S12, S13, S12
	417 Move X1, X31
	418 Move X26, X0
	419 Subtract S13, S14, S0
	420 Move V0, [X31+20]
	421 Subtract S8, S8, S11
	422 Subtract S10, S15, S10
	423 Subtract S14, S0, S1
	424 Move V0, [X31+16]
	425 Subtract S9, S0, S9
	426 Call Transform.get_position, X0
	427 Add S3, S12, S9
	428 Add S4, S13, S10
	429 Add S5, S14, S8
	430 Add S0, S3, S0
	431 Add S1, S4, S1
	432 Add S2, S5, S2
	433 Move X0, X26
	434 Move X1, X31
	435 Call Transform.set_position, X0, X1
	436 Add X8, X31, 96
	437 Move X0, X24
	438 Move X1, X31
	439 Call Tile.GetWorldBounds, X0
	440 Move V0, [X31+6]
	441 Move X8, [X31+112]
	442 Move X0, [X29]
	443 Move [X31+12], V0
	444 Move [X31+208], X8
	445 Move [X31+8], V0
	446 Move [X31+144], X8
	447 Call 0x1B6FA0C
	448 Move X1, [X27]
	449 Move X26, X0
	450 Call List`1<Bounds>..ctor, X0
	451 Compare X23, 0
	452 JumpIfEqual {706}
	453 Move X8, 0x2258000
	454 Move X8, [X8+2584]
	455 Move X29, 0x2258000
	456 Move X29, [X29+2040]
	457 Move X23, [X23+48]
	458 Move [X31+96], X31
	459 Move [X31+104], X31
	460 Move [X31+120], W31
	461 Move [X31+112], X31
	462 Move X9, [X22+72]
	463 NotImplemented "Instruction LDUR not yet implemented."
	464 Move X2, [X8]
	465 Move X27, 0x2258000
	466 Move X27, [X27+1992]
	467 Add X0, X31, 96
	468 Add X1, X31, 224
	469 Move [X31+240], X9
	470 Move [X31+14], V0
	471 Call Nullable`1<Bounds>..ctor, X0, X1
	472 Move V0, [X31+8]
	473 Move X8, [X31+144]
	474 Move V1, [X31+6]
	475 NotImplemented "Instruction LDUR not yet implemented."
	476 Add X1, X31, 64
	477 Add X4, X31, 32
	478 Move X0, X21
	479 Move X2, X26
	480 Move X3, X23
	481 Move [X31+4], V0
	482 Move [X31+80], X8
	483 Move [X31+2], V1
	484 Move [X31+44], V2
	485 Call SingleRoomArchetype.ValidateBounds, X0, X1, X2, X3, X4
	486 Move X8, [X29]
	487 Move W22, W0
	488 Move X0, X8
	489 Call 0x1B6FA0C
	490 Move X1, [X27]
	491 Move X21, X0
	492 Call List`1<Object>..ctor, X0
	493 Move TEMP, X22
	494 And TEMP, TEMP, 1
	495 Compare TEMP, 1
	496 JumpIfNotEqual {612}
	497 Move X0, [X20+32]
	498 Compare X0, 0
	499 JumpIfEqual {706}
	500 Move X9, 0x2258000
	501 Move X9, [X9+1928]
	502 Move W10, [X0+28]
	503 Move X8, [X0+16]
	504 Move X9, [X9]
	505 Add W10, W10, 1
	506 Move [X0+28], W10
	507 Compare X8, 0
	508 JumpIfEqual {706}
	509 NotImplemented "Instruction LDRSW not yet implemented."
	510 Move W11, [X8+24]
	511 NotImplemented "Instruction CMP not yet implemented."
	512 Add W9, W10, 1
	513 Add X8, X8, X10
	514 Move [X0+24], W9
	515 Move [X8+32], X24
	516 Move X8, [X9+32]
	517 Move X1, X24
	518 Move X8, [X8+192]
	519 Move X2, [X8+112]
	520 Call List`1<Object>.AddWithResize, X0, X1
	521 Move X0, [X24+56]
	522 Compare X0, 0
	523 JumpIfEqual {706}
	524 Move X8, 0x2258000
	525 Move X8, [X8+1968]
	526 Move X1, [X8]
	527 Add X8, X31, 96
	528 Call List`1<Object>.GetEnumerator, X0
	529 Move V0, [X31+6]
	530 Move X8, [X31+112]
	531 Move X23, 0x2258000
	532 Move X23, [X23+1872]
	533 Move [X31+10], V0
	534 Move [X31+176], X8
	535 Move X26, 0x2258000
	536 Move X26, [X26+1920]
	537 Move X1, [X23]
	538 Add X0, X31, 160
	539 Call Enumerator<Object>.MoveNext, X0
	540 Move TEMP, X0
	541 And TEMP, TEMP, 1
	542 Compare TEMP, 1
	543 JumpIfNotEqual {590}
	544 Move X22, [X31+176]
	545 Move V0, [X31+12]
	546 Move X8, [X31+208]
	547 Move [X31+6], V0
	548 Move [X31+112], X8
	549 Compare X22, 0
	550 JumpIfEqual {596}
	551 Move X8, [X31+112]
	552 Move V0, [X31+6]
	553 Move [X22+72], X8
	554 Move [X22+56], V0
	555 Move X0, [X28]
	556 Move W8, [X0+224]
	557 Compare W8, 0
	558 JumpIfNotEqual {560}
	559 Call 0x1B6F8F8
	560 Move X0, X22
	561 Move X1, X25
	562 Move X2, X31
	563 Call Object.op_Inequality, X0, X1
	564 Move TEMP, X0
	565 And TEMP, TEMP, 1
	566 Compare TEMP, 1
	567 JumpIfNotEqual {537}
	568 Compare X21, 0
	569 JumpIfEqual {597}
	570 Move W10, [X21+28]
	571 Move X8, [X21+16]
	572 Move X9, [X26]
	573 Add W10, W10, 1
	574 Move [X21+28], W10
	575 Compare X8, 0
	576 JumpIfEqual {598}
	577 NotImplemented "Instruction LDRSW not yet implemented."
	578 Move W11, [X8+24]
	579 NotImplemented "Instruction CMP not yet implemented."
	580 Add W9, W10, 1
	581 Add X8, X8, X10
	582 Move [X21+24], W9
	583 Move [X8+32], X22
	584 Move X8, [X9+32]
	585 Move X8, [X8+192]
	586 Move X2, [X8+112]
	587 Move X0, X21
	588 Move X1, X22
	589 Call List`1<Object>.AddWithResize, X0, X1
	590 Move X8, 0x2258000
	591 Move X8, [X8+1840]
	592 Add X0, X31, 160
	593 Move X1, [X8]
	594 Call Enumerator<Object>.Dispose, X0
	595 Move W23, 1
	596 Call 0x1B6FA1C
	597 Call 0x1B6FA1C
	598 Call 0x1B6FA1C
	599 Move X22, X0
	600 NotImplemented "Instruction CMP not yet implemented."
	601 Move X0, X22
	602 Call 0x3D1A840
	603 Move X23, [X0]
	604 Call 0x3D1A850
	605 Move X8, 0x2258000
	606 Move X8, [X8+1840]
	607 Add X0, X31, 160
	608 Move X1, [X8]
	609 Call Enumerator<Object>.Dispose, X0
	610 Compare X23, 0
	611 JumpIfNotEqual {708}
	612 Move X0, X24
	613 Move X1, X31
	614 Call Component.get_gameObject, X0
	615 Move X8, [X28]
	616 Move X22, X0
	617 Move W9, [X8+224]
	618 Compare W9, 0
	619 JumpIfNotEqual {622}
	620 Move X0, X8
	621 Call 0x1B6F8F8
	622 Move X0, X22
	623 Move X1, X31
	624 Call Object.DestroyImmediate, X0
	625 Move W23, W31
	626 Move X8, 0x2258000
	627 Move X8, [X8+2024]
	628 Add X24, X31, 216
	629 Move X0, [X8]
	630 Call 0x1B6FA0C
	631 Move X8, 0x2258000
	632 Move X8, [X8+1984]
	633 Move X22, X0
	634 Move X1, [X8]
	635 Call List`1<Bounds>..ctor, X0
	636 Move V0, [X31+12]
	637 Move X8, [X31+208]
	638 Move [X31+8], V0
	639 Move [X31+144], X8
	640 Compare X22, 0
	641 JumpIfEqual {706}
	642 Move V0, [X31+8]
	643 Move X8, [X31+144]
	644 Move X9, 0x2258000
	645 Move X9, [X9+1936]
	646 Move [X31+14], V0
	647 Move [X31+240], X8
	648 Move W11, [X22+28]
	649 Move X8, [X22+16]
	650 Move X10, [X9]
	651 Add W9, W11, 1
	652 Move [X22+28], W9
	653 Compare X8, 0
	654 JumpIfEqual {706}
	655 NotImplemented "Instruction LDRSW not yet implemented."
	656 Move W11, [X8+24]
	657 NotImplemented "Instruction CMP not yet implemented."
	658 Add W10, W9, 1
	659 Move [X22+24], W10
	660 Move X10, [X31+240]
	661 Move V0, [X31+14]
	662 Move W11, 24
	663 NotImplemented "Instruction MADD not yet implemented."
	664 Move [X8+48], X10
	665 Move [X8+2], V0
	666 Move X8, [X10+32]
	667 Move V0, [X31+14]
	668 Move X9, [X31+240]
	669 Add X1, X31, 96
	670 Move X8, [X8+192]
	671 Move X0, X22
	672 Move X2, [X8+112]
	673 Move [X31+6], V0
	674 Move [X31+112], X9
	675 Call List`1<Bounds>.AddWithResize, X0, X1
	676 NotImplemented "Instruction LDUR not yet implemented."
	677 Move W9, [X31+216]
	678 Move [X19], W23
	679 Move [X19+8], X21
	680 Move [X19+16], X22
	681 Move [X19+4], W8
	682 Move [X19+1], W9
	683 Move [X19+24], X20
	684 Move X20, [X31+400]
	685 Move X19, [X31+408]
	686 Move X22, [X31+384]
	687 Move X21, [X31+392]
	688 Move X24, [X31+368]
	689 Move X23, [X31+376]
	690 Move X26, [X31+352]
	691 Move X25, [X31+360]
	692 Move X28, [X31+336]
	693 Move X27, [X31+344]
	694 Move X29, [X31+320]
	695 Move X30, [X31+328]
	696 Move D9, [X31+304]
	697 Move D8, [X31+312]
	698 Move D11, [X31+288]
	699 Move D10, [X31+296]
	700 Move D13, [X31+272]
	701 Move D12, [X31+280]
	702 Move D15, [X31+256]
	703 Move D14, [X31+264]
	704 Add X31, X31, 416
	705 Return X0
	706 Call 0x1B6FA1C
	707 Move X23, X31
	708 Move X0, X23
	709 Call 0x1B6FA14
	710 Move X22, X0
	711 Move X8, 0x2258000
	712 Move X8, [X8+1840]
	713 Move X1, [X8]
	714 Add X0, X31, 160
	715 Call Enumerator<Object>.Dispose, X0
	716 Compare X23, 0
	717 JumpIfNotEqual {720}
	718 Move X0, X22
	719 Call 0x1C8518C
	720 Move X0, X23
	721 Call 0x1B6FA14
	722 Call 0x18F56A8

Method: System.Boolean ValidateBounds(UnityEngine.Bounds newB, System.Collections.Generic.List`1<UnityEngine.Bounds> localBounds, System.Collections.Generic.List`1<UnityEngine.Bounds> globalBounds, System.Nullable`1<UnityEngine.Bounds> ignore)

Disassembly:
	0x01CF9AC4 ADD X0, X31, 0x30
	0x01CF9AC8 BL 0x2A079C8
	0x01CF9ACC TBZ X0, 0x0, 0x1CF9AF4
	0x01CF9AD0 LDP S2, S3, [X31 + 0x48]
	0x01CF9AD4 LDP S4, S5, [X31 + 0x50]
	0x01CF9AD8 LDP S0, S1, [X31 + 0x40]
	0x01CF9ADC FADD S3, S3, S3
	0x01CF9AE0 FADD S4, S4, S4
	0x01CF9AE4 FADD S5, S5, S5
	0x01CF9AE8 MOV X0, X31
	0x01CF9AEC BL 0x3A757BC
	0x01CF9AF0 B 0x1CF9AC0
	0x01CF9AF4 LDR X1, [X19]
	0x01CF9AF8 ADD X0, X31, 0x30
	0x01CF9AFC BL 0x2A079C4
	0x01CF9B00 LDP X20, X19, [X31 + 0x70]
	0x01CF9B04 LDR X30, [X31 + 0x60]
	0x01CF9B08 ADD X31, X31, 0x80
	0x01CF9B0C RET
	0x01CF9B10 BL 0x1B6EA1C
	0x01CF9B14 B 0x1CF9B18
	0x01CF9B18 MOV X20, X0
	0x01CF9B1C CMP W1, 0x1
	0x01CF9B20 B.NE 0x1CF9B54
	0x01CF9B24 MOV X0, X20
	0x01CF9B28 BL 0x3D19840
	0x01CF9B2C LDR X19, [X0]
	0x01CF9B30 BL 0x3D19850
	0x01CF9B34 ADRP X8, 0x2257000
	0x01CF9B38 LDR X8, [X8 + 0x830]
	0x01CF9B3C ADD X0, X31, 0x30
	0x01CF9B40 LDR X1, [X8]
	0x01CF9B44 BL 0x2A079C4
	0x01CF9B48 CBZ X19, 0x1CF9B00
	0x01CF9B4C MOV X0, X19
	0x01CF9B50 BL 0x1B6EA14
	0x01CF9B54 MOV X19, X31
	0x01CF9B58 B 0x1CF9B60
	0x01CF9B5C MOV X20, X0
	0x01CF9B60 ADRP X8, 0x2257000
	0x01CF9B64 LDR X8, [X8 + 0x830]
	0x01CF9B68 LDR X1, [X8]
	0x01CF9B6C ADD X0, X31, 0x30
	0x01CF9B70 BL 0x2A079C4
	0x01CF9B74 CBNZ X19, 0x1CF9B80
	0x01CF9B78 MOV X0, X20
	0x01CF9B7C BL 0x1C8418C
	0x01CF9B80 MOV X0, X19
	0x01CF9B84 BL 0x1B6EA14
	0x01CF9B88 BL 0x18F46A8
	0x01CF9B8C MOV X1, X31
	0x01CF9B90 B 0x3A9EEE4
	0x01CF9B94 STR X30, [X31 - 0x10]!
	0x01CF9B98 LDR X8, [X0 + 0x20]
	0x01CF9B9C CBZ X8, 0x1CF9BB4
	0x01CF9BA0 LDR X8, [X8 + 0x80]
	0x01CF9BA4 CBZ X8, 0x1CF9BB4
	0x01CF9BA8 LDR W0, [X8 + 0x24]
	0x01CF9BAC LDR X30, [X31], #0x10
	0x01CF9BB0 RET
	0x01CF9BB4 BL 0x1B6EA1C
	0x01CF9BB8 STR D10, [X31 - 0x30]!
	0x01CF9BBC STP D9, D8, [X31 + 0x10]
	0x01CF9BC0 STP X30, X19, [X31 + 0x20]
	0x01CF9BC4 ADRP X8, 0xFFFFFFFFFEDB0000
	0x01CF9BC8 LDR V3, [X8 + 0xAB0]
	0x01CF9BCC MOV X19, X0
	0x01CF9BD0 FMOV S0, 1
	0x01CF9BD4 FMOV S1, 1
	0x01CF9BD8 FMOV S2, 1
	0x01CF9BDC MOV X0, X31
	0x01CF9BE0 BL 0x3A75B14
	0x01CF9BE4 LDR W0, [X19 + 0x28]
	0x01CF9BE8 BL 0x1CF9C34
	0x01CF9BEC MOV X0, X19
	0x01CF9BF0 MOV X1, X31
	0x01CF9BF4 MOV V8.16B, V0.16B
	0x01CF9BF8 MOV V9.16B, V1.16B
	0x01CF9BFC MOV V10.16B, V2.16B
	0x01CF9C00 BL 0x3A9B084
	0x01CF9C04 CBZ X0, 0x1CF9C30
	0x01CF9C08 MOV X1, X31
	0x01CF9C0C BL 0x3AA7658
	0x01CF9C10 MOV V3.16B, V8.16B
	0x01CF9C14 MOV V4.16B, V9.16B
	0x01CF9C18 LDP X30, X19, [X31 + 0x20]
	0x01CF9C1C LDP D9, D8, [X31 + 0x10]
	0x01CF9C20 MOV V5.16B, V10.16B
	0x01CF9C24 MOV X0, X31
	0x01CF9C28 LDR V10, [X31], #0x30
	0x01CF9C2C B 0x3A757BC
	0x01CF9C30 BL 0x1B6EA1C
	0x01CF9C34 STP X30, X19, [X31 - 0x10]!
	0x01CF9C38 ADRP X19, 0x252A000
	0x01CF9C3C CMP W0, 0x4
	0x01CF9C40 B.EQ 0x1CF9C80
	0x01CF9C44 CMP W0, 0x2
	0x01CF9C48 B.EQ 0x1CF9CB8
	0x01CF9C4C CBNZ W0, 0x1CF9C80
	0x01CF9C50 LDRB W8, [X19 + 0x456]
	0x01CF9C54 CBNZ W8, 0x1CF9C6C
	0x01CF9C58 ADRP X0, 0x2254000
	0x01CF9C5C LDR X0, [X0 + 0x480]
	0x01CF9C60 BL 0x1B6E7F0
	0x01CF9C64 MOVZ W8, 0x1
	0x01CF9C68 STRB W8, [X19 + 0x456]
	0x01CF9C6C ADRP X8, 0x2254000
	0x01CF9C70 LDR X8, [X8 + 0x480]
	0x01CF9C74 FMOV V2.2S, 0x0
	0x01CF9C78 FMOV S3, 0.25
	0x01CF9C7C B 0x1CF9CE4
	0x01CF9C80 LDRB W8, [X19 + 0x456]
	0x01CF9C84 CBNZ W8, 0x1CF9C9C
	0x01CF9C88 ADRP X0, 0x2254000
	0x01CF9C8C LDR X0, [X0 + 0x480]
	0x01CF9C90 BL 0x1B6E7F0
	0x01CF9C94 MOVZ W8, 0x1
	0x01CF9C98 STRB W8, [X19 + 0x456]
	0x01CF9C9C ADRP X8, 0x2254000
	0x01CF9CA0 LDR X8, [X8 + 0x480]
	0x01CF9CA4 LDR X8, [X8]
	0x01CF9CA8 LDR X8, [X8 + 0xB8]
	0x01CF9CAC LDUR V0, [X8 + 0xC]
	0x01CF9CB0 LDR V2, [X8 + 0x14]
	0x01CF9CB4 B 0x1CF9CFC
	0x01CF9CB8 LDRB W8, [X19 + 0x456]
	0x01CF9CBC CBNZ W8, 0x1CF9CD4
	0x01CF9CC0 ADRP X0, 0x2254000
	0x01CF9CC4 LDR X0, [X0 + 0x480]
	0x01CF9CC8 BL 0x1B6E7F0
	0x01CF9CCC MOVZ W8, 0x1
	0x01CF9CD0 STRB W8, [X19 + 0x456]
	0x01CF9CD4 ADRP X8, 0x2254000
	0x01CF9CD8 LDR X8, [X8 + 0x480]
	0x01CF9CDC MOVI V2.2S, 0x3F, 0x18
	0x01CF9CE0 FMOV S3, 0.5
	0x01CF9CE4 LDR X8, [X8]
	0x01CF9CE8 LDR X8, [X8 + 0xB8]
	0x01CF9CEC LDUR V0, [X8 + 0xC]
	0x01CF9CF0 LDR V1, [X8 + 0x14]
	0x00000000 INVALID
	0x01CF9CF8 FMUL S2, S1, S3
	0x01CF9CFC MOV S1, V0.S[1]
	0x01CF9D00 LDP X30, X19, [X31], #0x10
	0x01CF9D04 RET
	0x01CF9D08 STR D10, [X31 - 0x30]!
	0x01CF9D0C STP D9, D8, [X31 + 0x10]
	0x01CF9D10 STP X30, X19, [X31 + 0x20]
	0x01CF9D14 MOV X19, X0
	0x01CF9D18 FMOV S0, 1
	0x01CF9D1C FMOV S1, 1
	0x01CF9D20 FMOV S2, 1
	0x01CF9D24 FMOV S3, 1
	0x01CF9D28 MOV X0, X31
	0x01CF9D2C BL 0x3A75B14
	0x01CF9D30 LDR W0, [X19 + 0x28]
	0x01CF9D34 BL 0x1CF9C34
	0x01CF9D38 MOV X0, X19
	0x01CF9D3C MOV X1, X31
	0x01CF9D40 MOV V8.16B, V0.16B
	0x01CF9D44 MOV V9.16B, V1.16B
	0x01CF9D48 MOV V10.16B, V2.16B
	0x01CF9D4C BL 0x3A9B084
	0x01CF9D50 CBZ X0, 0x1CF9D7C
	0x01CF9D54 MOV X1, X31
	0x01CF9D58 BL 0x3AA7658
	0x01CF9D5C MOV V3.16B, V8.16B
	0x01CF9D60 MOV V4.16B, V9.16B
	0x01CF9D64 LDP X30, X19, [X31 + 0x20]
	0x01CF9D68 LDP D9, D8, [X31 + 0x10]
	0x01CF9D6C MOV V5.16B, V10.16B
	0x01CF9D70 MOV X0, X31
	0x01CF9D74 LDR V10, [X31], #0x30
	0x01CF9D78 B 0x3A757BC
	0x01CF9D7C BL 0x1B6EA1C
	0x01CF9D80 MOV X1, X31
	0x01CF9D84 B 0x3A9EEE4
	0x01CF9D88 SUB X31, X31, 0xB0
	0x01CF9D8C STP D9, D8, [X31 + 0x90]
	0x01CF9D90 STP X30, X19, [X31 + 0xA0]
	0x01CF9D94 ADRP X8, 0xFFFFFFFFFEDB0000
	0x01CF9D98 LDR V3, [X8 + 0xAB0]
	0x01CF9D9C MOV X19, X0
	0x01CF9DA0 FMOV S0, 1
	0x01CF9DA4 FMOV S1, 1
	0x01CF9DA8 FMOV S2, 1
	0x01CF9DAC MOV X0, X31
	0x01CF9DB0 BL 0x3A75B14
	0x01CF9DB4 LDR W0, [X19 + 0x20]
	0x01CF9DB8 BL 0x1CF9C34
	0x01CF9DBC MOV X0, X19
	0x01CF9DC0 MOV X1, X31
	0x01CF9DC4 MOV V8.16B, V0.16B
	0x01CF9DC8 STR D1, [X31]
	0x01CF9DCC MOV V9.16B, V2.16B
	0x01CF9DD0 BL 0x3A9B084
	0x01CF9DD4 CBZ X0, 0x1CF9E78
	0x01CF9DD8 ADD X8, X31, 0x50
	0x01CF9DDC MOV X1, X31
	0x01CF9DE0 BL 0x3AA7294
	0x01CF9DE4 LDP V0, V1, [X31 + 0x50]
	0x01CF9DE8 LDP V2, V3, [X31 + 0x70]
	0x01CF9DEC ADD X0, X31, 0x10
	0x01CF9DF0 MOV X1, X31
	0x01CF9DF4 STP V0, V1, [X31 + 0x10]
	0x01CF9DF8 STP V2, V3, [X31 + 0x30]
	0x01CF9DFC BL 0x3A75C34
	0x01CF9E00 ADRP X19, 0x252A000
	0x01CF9E04 LDRB W8, [X19 + 0x442]
	0x01CF9E08 CBNZ W8, 0x1CF9E20
	0x01CF9E0C ADRP X0, 0x2254000
	0x01CF9E10 LDR X0, [X0 + 0x480]
	0x01CF9E14 BL 0x1B6E7F0
	0x01CF9E18 MOVZ W8, 0x1
	0x01CF9E1C STRB W8, [X19 + 0x442]
	0x01CF9E20 ADRP X8, 0x2254000
	0x01CF9E24 LDR X8, [X8 + 0x480]
	0x01CF9E28 LDR V4, [X31]
	0x01CF9E2C MOVI V2.2S, 0x3F, 0x18
	0x01CF9E30 FMOV S3, 0.5
	0x01CF9E34 LDR X8, [X8]
	0x01CF9E38 MOV V5.16B, V9.16B
	0x01CF9E3C MOV X0, X31
	0x01CF9E40 LDR X8, [X8 + 0xB8]
	0x01CF9E44 LDR V0, [X8 + 0x18]
	0x01CF9E48 LDR V1, [X8 + 0x20]

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+192], D9
	003 Move [X31+200], D8
	004 Move [X31+208], X29
	005 Move [X31+216], X30
	006 Move [X31+224], X26
	007 Move [X31+232], X25
	008 Move [X31+240], X24
	009 Move [X31+248], X23
	010 Move [X31+256], X22
	011 Move [X31+264], X21
	012 Move [X31+272], X20
	013 Move [X31+280], X19
	014 Move X23, 0x252B000
	015 Move W8, [X23+1797]
	016 Move X19, X4
	017 Move X21, X3
	018 Move X22, X2
	019 Move X20, X1
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {44}
	024 Move X0, 0x2258000
	025 Move X0, [X0+2096]
	026 Call 0x1B6F7F0
	027 Move X0, 0x2258000
	028 Move X0, [X0+2104]
	029 Call 0x1B6F7F0
	030 Move X0, 0x2258000
	031 Move X0, [X0+2112]
	032 Call 0x1B6F7F0
	033 Move X0, 0x2258000
	034 Move X0, [X0+2120]
	035 Call 0x1B6F7F0
	036 Move X0, 0x2258000
	037 Move X0, [X0+2600]
	038 Call 0x1B6F7F0
	039 Move X0, 0x2258000
	040 Move X0, [X0+2608]
	041 Call 0x1B6F7F0
	042 Move W8, 1
	043 Move [X23+1797], W8
	044 NotImplemented "Instruction MOVI not yet implemented."
	045 Move [X31+176], X31
	046 Move [X31+144], V0
	047 Move [X31+152], V0
	048 Compare X22, 0
	049 JumpIfEqual {222}
	050 Move X26, 0x2258000
	051 Move X26, [X26+2120]
	052 Move X25, 0x2258000
	053 Move X24, 0x2258000
	054 Add X8, X31, 104
	055 Move X1, [X26]
	056 Move X25, [X25+2104]
	057 Move X24, [X24+2096]
	058 Move X0, X22
	059 Call List`1<Bounds>.GetEnumerator, X0
	060 Move X9, -19197952
	061 Move X10, -19197952
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 Move X8, [X31+136]
	065 Move V8, [X9+3336]
	066 Move V9, [X10+2356]
	067 Move [X31+144], V0
	068 Move [X31+152], V1
	069 Move [X31+176], X8
	070 Move X1, [X25]
	071 Add X0, X31, 144
	072 Call Enumerator<Bounds>.MoveNext, X0
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {129}
	077 Move S0, [X31+160]
	078 Move S1, [X31+164]
	079 Move S2, [X31+168]
	080 Move S3, [X31+172]
	081 Move W8, [X19]
	082 Move S5, [X31+176]
	083 Move S4, [X31+180]
	084 Compare W8, 0
	085 JumpIfEqual {110}
	086 Move S6, [X19+4]
	087 Move S7, [X19+8]
	088 Move V16, [X19+12]
	089 Subtract S6, S0, S6
	090 Subtract S7, S1, S7
	091 Subtract S16, S2, S16
	092 Multiply S6, S6, S6
	093 Multiply S7, S7, S7
	094 Add S6, S7, S6
	095 Multiply S7, S16, S16
	096 Add S6, S7, S6
	097 NotImplemented "Instruction FCMP not yet implemented."
	098 Move S6, [X19+16]
	099 Move S7, [X19+20]
	100 Move V16, [X19+24]
	101 Subtract S6, S3, S6
	102 Subtract S7, S5, S7
	103 Subtract S16, S4, S16
	104 Multiply S6, S6, S6
	105 Multiply S7, S7, S7
	106 Add S6, S6, S7
	107 Multiply S7, S16, S16
	108 Add S6, S7, S6
	109 NotImplemented "Instruction FCMP not yet implemented."
	110 Move V6, [X20]
	111 Move X8, [X20+16]
	112 Move [X31+80], S0
	113 Move [X31+88], S1
	114 Add X1, X31, 80
	115 Add X2, X31, 48
	116 Move V0, V8
	117 Move [X31+88], S2
	118 Move [X31+96], S3
	119 Move [X31+64], X8
	120 Move [X31+3], V6
	121 Move [X31+96], S5
	122 Move [X31+104], S4
	123 Call SingleRoomArchetype.CustomBoundsCheck, X0, X1, X2, V0
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfNotEqual {70}
	128 Move W19, W31
	129 Move X1, [X24]
	130 Add X0, X31, 144
	131 Call Enumerator<Bounds>.Dispose, X0
	132 Compare X21, 0
	133 JumpIfEqual {222}
	134 Move X1, [X26]
	135 Add X8, X31, 104
	136 Move X0, X21
	137 Call List`1<Bounds>.GetEnumerator, X0
	138 NotImplemented "Instruction LDUR not yet implemented."
	139 NotImplemented "Instruction LDUR not yet implemented."
	140 Move X8, [X31+136]
	141 Move [X31+144], V0
	142 Move [X31+152], V1
	143 Move [X31+176], X8
	144 Move X1, [X25]
	145 Add X0, X31, 144
	146 Call Enumerator<Bounds>.MoveNext, X0
	147 Move W21, W0
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {203}
	152 Move S0, [X31+160]
	153 Move S1, [X31+164]
	154 Move S2, [X31+168]
	155 Move S3, [X31+172]
	156 Move W8, [X19]
	157 Move S5, [X31+176]
	158 Move S4, [X31+180]
	159 Compare W8, 0
	160 JumpIfEqual {185}
	161 Move S6, [X19+4]
	162 Move S7, [X19+8]
	163 Move V16, [X19+12]
	164 Subtract S6, S0, S6
	165 Subtract S7, S1, S7
	166 Subtract S16, S2, S16
	167 Multiply S6, S6, S6
	168 Multiply S7, S7, S7
	169 Add S6, S7, S6
	170 Multiply S7, S16, S16
	171 Add S6, S7, S6
	172 NotImplemented "Instruction FCMP not yet implemented."
	173 Move S6, [X19+16]
	174 Move S7, [X19+20]
	175 Move V16, [X19+24]
	176 Subtract S6, S3, S6
	177 Subtract S7, S5, S7
	178 Subtract S16, S4, S16
	179 Multiply S6, S6, S6
	180 Multiply S7, S7, S7
	181 Add S6, S6, S7
	182 Multiply S7, S16, S16
	183 Add S6, S7, S6
	184 NotImplemented "Instruction FCMP not yet implemented."
	185 Move V6, [X20]
	186 Move X8, [X20+16]
	187 Move [X31+24], S0
	188 Move [X31+32], S1
	189 Add X1, X31, 24
	190 Add X2, X31, 0
	191 Move V0, V8
	192 Move [X31+32], S2
	193 Move [X31+40], S3
	194 Move [X31+16], X8
	195 Move [X31], V6
	196 Move [X31+40], S5
	197 Move [X31+48], S4
	198 Call SingleRoomArchetype.CustomBoundsCheck, X0, X1, X2, V0
	199 Move TEMP, X0
	200 And TEMP, TEMP, 1
	201 Compare TEMP, 1
	202 JumpIfNotEqual {144}
	203 Xor W19, W21, 1
	204 Move X1, [X24]
	205 Add X0, X31, 144
	206 Call Enumerator<Bounds>.Dispose, X0
	207 And W0, W19, 1
	208 Move X20, [X31+272]
	209 Move X19, [X31+280]
	210 Move X22, [X31+256]
	211 Move X21, [X31+264]
	212 Move X24, [X31+240]
	213 Move X23, [X31+248]
	214 Move X26, [X31+224]
	215 Move X25, [X31+232]
	216 Move X29, [X31+208]
	217 Move X30, [X31+216]
	218 Move D9, [X31+192]
	219 Move D8, [X31+200]
	220 Add X31, X31, 288
	221 Return X0
	222 Call 0x1B6FA1C
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Move X22, X0
	225 Move X0, X22
	226 Call 0x3D1A840
	227 Move X19, [X0]
	228 Call 0x3D1A850
	229 Move X1, [X24]
	230 Add X0, X31, 144
	231 Call Enumerator<Bounds>.Dispose, X0
	232 Compare X19, 0
	233 JumpIfNotEqual {236}
	234 Move W19, 1
	235 Move X19, X31
	236 Move X0, X19
	237 Call 0x1B6FA14
	238 Move X22, X0
	239 Move X1, [X24]
	240 Add X0, X31, 144
	241 Call Enumerator<Bounds>.Dispose, X0
	242 Compare X19, 0
	243 JumpIfEqual {266}
	244 Move X0, X19
	245 Call 0x1B6FA14
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Move X22, X0
	248 Move X0, X22
	249 Call 0x3D1A840
	250 Move X23, [X0]
	251 Call 0x3D1A850
	252 Move X1, [X24]
	253 Add X0, X31, 144
	254 Call Enumerator<Bounds>.Dispose, X0
	255 Compare X23, 0
	256 JumpIfEqual {132}
	257 Move X0, X23
	258 Call 0x1B6FA14
	259 Move X23, X31
	260 Move X22, X0
	261 Move X1, [X24]
	262 Add X0, X31, 144
	263 Call Enumerator<Bounds>.Dispose, X0
	264 Compare X23, 0
	265 JumpIfNotEqual {268}
	266 Move X0, X22
	267 Call 0x1C8518C
	268 Move X0, X23
	269 Call 0x1B6FA14
	270 Call 0x18F56A8

Method: System.Boolean CustomBoundsCheck(UnityEngine.Bounds a, UnityEngine.Bounds b, System.Single error = 0.01)

Disassembly:
	0x00000000 INVALID
	0x01CF9E50 FMUL S1, S4, S1
	0x00000000 INVALID
	0x01CF9E58 FMUL S2, S1, S3
	0x01CF9E5C MOV S1, V0.S[1]
	0x01CF9E60 MOV V3.16B, V8.16B
	0x01CF9E64 BL 0x3A757BC
	0x01CF9E68 LDP X30, X19, [X31 + 0xA0]
	0x01CF9E6C LDP D9, D8, [X31 + 0x90]
	0x01CF9E70 ADD X31, X31, 0xB0
	0x01CF9E74 RET
	0x01CF9E78 BL 0x1B6EA1C
	0x01CF9E7C SUB X31, X31, 0xB0
	0x01CF9E80 STP D9, D8, [X31 + 0x90]
	0x01CF9E84 STP X30, X19, [X31 + 0xA0]
	0x01CF9E88 MOV X19, X0
	0x01CF9E8C FMOV S0, 1
	0x01CF9E90 FMOV S1, 1
	0x01CF9E94 FMOV S2, 1
	0x01CF9E98 FMOV S3, 1
	0x01CF9E9C MOV X0, X31
	0x01CF9EA0 BL 0x3A75B14
	0x01CF9EA4 LDR W0, [X19 + 0x20]
	0x01CF9EA8 BL 0x1CF9C34
	0x01CF9EAC MOV X0, X19
	0x01CF9EB0 MOV X1, X31
	0x01CF9EB4 MOV V8.16B, V0.16B
	0x01CF9EB8 STR D1, [X31]
	0x01CF9EBC MOV V9.16B, V2.16B
	0x01CF9EC0 BL 0x3A9B084
	0x01CF9EC4 CBZ X0, 0x1CF9F68
	0x01CF9EC8 ADD X8, X31, 0x50
	0x01CF9ECC MOV X1, X31
	0x01CF9ED0 BL 0x3AA7294
	0x01CF9ED4 LDP V0, V1, [X31 + 0x50]
	0x01CF9ED8 LDP V2, V3, [X31 + 0x70]
	0x01CF9EDC ADD X0, X31, 0x10
	0x01CF9EE0 MOV X1, X31
	0x01CF9EE4 STP V0, V1, [X31 + 0x10]
	0x01CF9EE8 STP V2, V3, [X31 + 0x30]
	0x01CF9EEC BL 0x3A75C34
	0x01CF9EF0 ADRP X19, 0x252A000
	0x01CF9EF4 LDRB W8, [X19 + 0x442]
	0x01CF9EF8 CBNZ W8, 0x1CF9F10
	0x01CF9EFC ADRP X0, 0x2254000

ISIL:
	001 Move V1, [X1]
	002 Move V3, [X1+12]
	003 Move V2, [X2]
	004 Move V4, [X2+12]
	005 Add S5, S1, S3
	006 Subtract S5, S5, S0
	007 Subtract S6, S2, S4
	008 NotImplemented "Instruction FCMP not yet implemented."
	009 Move W0, W31
	010 Return X0
	011 Move S5, [X1+4]
	012 Move S6, [X1+8]
	013 Move S7, [X1+16]
	014 Move S16, [X1+20]
	015 Move S17, [X2+4]
	016 Move S18, [X2+8]
	017 Move S19, [X2+16]
	018 Move S20, [X2+20]
	019 Subtract S1, S1, S3
	020 Add S2, S2, S4
	021 Add S1, S1, S0
	022 Add S4, S5, S7
	023 NotImplemented "Instruction FCMP not yet implemented."
	024 Subtract S2, S17, S19
	025 Subtract S5, S5, S7
	026 Subtract S4, S4, S0
	027 NotImplemented "Instruction CSET not yet implemented."
	028 Add S3, S6, S16
	029 Add S7, S17, S19
	030 Add S5, S5, S0
	031 NotImplemented "Instruction FCMP not yet implemented."
	032 Subtract S1, S18, S20
	033 Subtract S6, S6, S16
	034 Subtract S3, S3, S0
	035 NotImplemented "Instruction CSET not yet implemented."
	036 NotImplemented "Instruction FCMP not yet implemented."
	037 Add S16, S18, S20
	038 Add S0, S6, S0
	039 And W8, W8, W9
	040 NotImplemented "Instruction CSET not yet implemented."
	041 NotImplemented "Instruction FCMP not yet implemented."
	042 And W8, W9, W8
	043 NotImplemented "Instruction CSET not yet implemented."
	044 NotImplemented "Instruction FCMP not yet implemented."
	045 And W8, W9, W8
	046 NotImplemented "Instruction CSET not yet implemented."
	047 And W0, W9, W8
	048 Return X0

Method: System.Void .ctor()

Disassembly:
	0x01CF9F00 LDR X0, [X0 + 0x480]
	0x01CF9F04 BL 0x1B6E7F0

ISIL:
	001 Move X1, X31
	002 Call ForceNode..ctor, X0
	003 Return 

