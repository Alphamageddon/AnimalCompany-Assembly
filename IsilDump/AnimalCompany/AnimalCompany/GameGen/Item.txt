Type: AnimalCompany.GameGen.Item

Method: AnimalCompany.ItemData get_itemData()

Disassembly:
	0x01E0E0E4 CBNZ W9, 0x1E0E0EC
	0x01E0E0E8 BL 0x1C16DFC
	0x01E0E0EC MOV X0, X20
	0x01E0E0F0 MOV X1, X31
	0x01E0E0F4 MOV X2, X31
	0x01E0E0F8 BL 0x3C354F8
	0x01E0E0FC TBZ X0, 0x0, 0x1E0E344
	0x01E0E100 LDR W8, [X19 + 0x28]
	0x01E0E104 CMP W8, 0x3
	0x01E0E108 B.HI 0x1E0E124
	0x01E0E10C CMP W8, 0x2
	0x01E0E110 B.EQ 0x1E0E124
	0x01E0E114 FMOV S1, 1
	0x01E0E118 FMOV S0, W31
	0x01E0E11C MOVZ W20, 0x1
	0x01E0E120 B 0x1E0E130
	0x01E0E124 MOV W20, W31
	0x01E0E128 FMOV S1, W31
	0x01E0E12C FMOV S0, 1
	0x01E0E130 MOV V2.16B, V1.16B
	0x01E0E134 MOV V3.16B, V8.16B
	0x01E0E138 MOV X0, X31
	0x01E0E13C BL 0x3C0D030
	0x01E0E140 LDR X0, [X22]
	0x01E0E144 CBZ X0, 0x1E0E828
	0x01E0E148 MOV X1, X31
	0x01E0E14C BL 0x3C32E90
	0x01E0E150 LDR X8, [X22]
	0x01E0E154 CBZ X8, 0x1E0E828
	0x01E0E158 MOV X21, X0
	0x01E0E15C LDR X0, [X8 + 0x58]
	0x01E0E160 CBZ X0, 0x1E0E828
	0x01E0E164 MOV X1, X31
	0x01E0E168 BL 0x3C32E90

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x25CB000
	007 Move X22, 0x22E6000
	008 Move W8, [X20+3540]
	009 Move X22, [X22+1432]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x22E6000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3540], W8
	020 Move X21, X19
	021 Add X21, X21, 32
	022 Move X20, [X21]
	023 Move X0, [X22]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Inequality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {40}
	036 Move X8, [X19+40]
	037 Compare X8, 0
	038 JumpIfEqual {47}
	039 Add X21, X8, 128
	040 Move X0, [X21]
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Return X0
	047 Call 0x1C17F20

Method: System.Int32 get_itemValue()

Disassembly:
	0x01E0E16C CBZ X0, 0x1E0E828
	0x01E0E170 MOV X1, X31
	0x01E0E174 BL 0x3C3F58C
	0x01E0E178 CBZ X21, 0x1E0E828
	0x01E0E17C MOV X0, X21
	0x01E0E180 MOV X1, X31
	0x01E0E184 BL 0x3C40B58

ISIL:
	001 Move [X31-16], X30
	002 Call Item.get_itemData, X0
	003 Compare X0, 0
	004 JumpIfEqual {8}
	005 Move W0, [X0+36]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void OnDrawGizmos()

Disassembly:
	0x01E0E188 LDR X0, [X22]
	0x01E0E18C CBZ X0, 0x1E0E828
	0x01E0E190 MOV X1, X31
	0x01E0E194 MOV V8.16B, V0.16B
	0x01E0E198 MOV V9.16B, V1.16B
	0x01E0E19C MOV V10.16B, V2.16B
	0x01E0E1A0 BL 0x3C32E90
	0x01E0E1A4 CBZ X0, 0x1E0E828
	0x01E0E1A8 MOV X1, X31
	0x01E0E1AC BL 0x3C3DEB4
	0x01E0E1B0 MOV X0, X31
	0x01E0E1B4 BL 0x3C2A260
	0x01E0E1B8 LDR X8, [X22]
	0x01E0E1BC CBZ X8, 0x1E0E828
	0x01E0E1C0 LDR X0, [X8 + 0x58]
	0x01E0E1C4 CBZ X0, 0x1E0E828
	0x01E0E1C8 MOV X1, X31
	0x01E0E1CC MOV V14.16B, V0.16B
	0x01E0E1D0 MOV V13.16B, V1.16B
	0x01E0E1D4 MOV V12.16B, V2.16B
	0x01E0E1D8 MOV V15.16B, V3.16B
	0x01E0E1DC STP S10, S9, [X31 + 0x18]
	0x01E0E1E0 STR S8, [X31 + 0x1E8]
	0x01E0E1E4 BL 0x3C32E90
	0x01E0E1E8 CBZ X0, 0x1E0E828
	0x01E0E1EC MOV X1, X31
	0x01E0E1F0 BL 0x3C3DEB4
	0x01E0E1F4 MOV X0, X19
	0x01E0E1F8 MOV X1, X31
	0x01E0E1FC MOV V10.16B, V0.16B
	0x01E0E200 MOV V9.16B, V1.16B

ISIL:
	001 Move [X31-48], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X19
	006 Move X8, -20066304
	007 Move V3, [X8+188]
	008 Move X19, X0
	009 Move S0, 1
	010 Move S1, 1
	011 Move S2, 1
	012 Move X0, X31
	013 Call Gizmos.set_color, X0
	014 Move W0, [X19+48]
	015 Call ItemPointSizeUtil.GetSize, X0
	016 Move X0, X19
	017 Move X1, X31
	018 Move V8, V0
	019 Move V9, V1
	020 Move V10, V2
	021 Call Component.get_transform, X0
	022 Compare X0, 0
	023 JumpIfEqual {37}
	024 Move X1, X31
	025 Call Transform.get_position, X0
	026 Move V3, V8
	027 Move V4, V9
	028 Move X30, [X31+32]
	029 Move X19, [X31+40]
	030 Move D9, [X31+16]
	031 Move D8, [X31+24]
	032 Move V5, V10
	033 Move X0, X31
	034 Move V10, [X31+48]
	035 Call Gizmos.DrawWireCube, X0, X1
	036 Return 
	037 Call 0x1C17F20

Method: System.Void OnDrawGizmosSelected()

Disassembly:
	0x01E0E2D8 LDR X8, [X8]
	0x01E0E2DC MOV V4.16B, V14.16B
	0x01E0E2E0 MOV V5.16B, V13.16B
	0x01E0E2E4 MOV V6.16B, V12.16B
	0x01E0E2E8 LDR X8, [X8 + 0xB8]
	0x01E0E2EC MOV X0, X31
	0x01E0E2F0 LDR V0, [X8 + 0x14]
	0x01E0E2F4 LDUR X9, [X8 + 0xC]
	0x01E0E2F8 ADD X8, X31, 0x160
	0x01E0E2FC STR S0, [X31 + 0x8]
	0x01E0E300 MOV V0.16B, V10.16B
	0x01E0E304 STR X9, [X31]
	0x01E0E308 BL 0x3C26FA8
	0x01E0E30C LDP V0, V1, [X31 + 0x160]
	0x01E0E310 LDP V2, V3, [X31 + 0x180]
	0x01E0E314 ADD X0, X31, 0xA0
	0x01E0E318 MOV X1, X31
	0x01E0E31C STP V0, V1, [X31 + 0xA0]
	0x01E0E320 STP V2, V3, [X31 + 0xC0]
	0x01E0E324 BL 0x3C0D150
	0x01E0E328 LDR X8, [X22]
	0x01E0E32C CBZ X8, 0x1E0E828
	0x01E0E330 LDR V8, [X31 + 0x1EC]
	0x01E0E334 LDR X0, [X8 + 0x58]
	0x01E0E338 MOV W1, W20
	0x01E0E33C MOV V0.16B, V8.16B
	0x01E0E340 BL 0x1E0E82C
	0x01E0E344 LDR X8, [X22]
	0x01E0E348 CBZ X8, 0x1E0E828
	0x01E0E34C LDR X0, [X23]

ISIL:
	001 Move [X31-48], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Move S0, 1
	008 Move S1, 1
	009 Move S2, 1
	010 Move S3, 1
	011 Move X0, X31
	012 Call Gizmos.set_color, X0
	013 Move W0, [X19+48]
	014 Call ItemPointSizeUtil.GetSize, X0
	015 Move X0, X19
	016 Move X1, X31
	017 Move V8, V0
	018 Move V9, V1
	019 Move V10, V2
	020 Call Component.get_transform, X0
	021 Compare X0, 0
	022 JumpIfEqual {36}
	023 Move X1, X31
	024 Call Transform.get_position, X0
	025 Move V3, V8
	026 Move V4, V9
	027 Move X30, [X31+32]
	028 Move X19, [X31+40]
	029 Move D9, [X31+16]
	030 Move D8, [X31+24]
	031 Move V5, V10
	032 Move X0, X31
	033 Move V10, [X31+48]
	034 Call Gizmos.DrawWireCube, X0, X1
	035 Return 
	036 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01E0E350 LDR X20, [X8 + 0x60]
	0x01E0E354 LDR W9, [X0 + 0xE0]

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

