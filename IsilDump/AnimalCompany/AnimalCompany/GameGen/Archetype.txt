Type: AnimalCompany.GameGen.Archetype

Method: AnimalCompany.GameGen.Tile PickTile(System.Collections.Generic.List`1<AnimalCompany.GameGen.WeightedRoomTile> _weightedTiles)

Disassembly:
	0x01E0732C LDUR V0, [X31 + 0xD8]
	0x01E07330 LDR X8, [X31 + 0xE8]
	0x01E07334 STR V0, [X31 + 0x12]
	0x01E07338 STR X8, [X31 + 0x130]
	0x01E0733C CBZ X20, 0x1E0740C
	0x01E07340 LDR X8, [X31 + 0x130]
	0x01E07344 LDR V0, [X31 + 0x12]
	0x01E07348 STR X8, [X20 + 0x58]
	0x01E0734C STUR V0, [X20 + 0x48]
	0x01E07350 ADRP X8, 0x22EC000
	0x01E07354 LDR X8, [X8 + 0x598]
	0x01E07358 LDR X0, [X8]
	0x01E0735C LDR W8, [X0 + 0xE0]
	0x01E07360 CBNZ W8, 0x1E07368
	0x01E07364 BL 0x1C16DFC
	0x01E07368 MOV X0, X20
	0x01E0736C MOV X1, X28
	0x01E07370 MOV X2, X31
	0x01E07374 BL 0x3C354F8
	0x01E07378 TBZ X0, 0x0, 0x1E07310
	0x01E0737C ADRP X9, 0x22F2000
	0x01E07380 LDR W10, [X24 + 0x1C]
	0x01E07384 LDR X8, [X24 + 0x10]
	0x01E07388 LDR X9, [X9 + 0xA10]
	0x01E0738C ADD W10, W10, 0x1
	0x01E07390 LDR X9, [X9]
	0x01E07394 STR W10, [X24 + 0x1C]
	0x01E07398 CBZ X8, 0x1E07414
	0x01E0739C LDRSW X10, [X24 + 0x18]
	0x01E073A0 LDR W11, [X8 + 0x18]
	0x01E073A4 CMP W10, W11
	0x01E073A8 B.CS 0x1E073C0
	0x01E073AC ADD W9, W10, 0x1
	0x01E073B0 ADD X8, X8, X10, 0x3, LSL
	0x01E073B4 STR W9, [X24 + 0x18]
	0x01E073B8 STR X20, [X8 + 0x20]
	0x01E073BC B 0x1E07310
	0x01E073C0 LDR X8, [X9 + 0x20]
	0x01E073C4 LDR X8, [X8 + 0xC0]
	0x01E073C8 LDR X2, [X8 + 0x70]
	0x01E073CC MOV X0, X24
	0x01E073D0 MOV X1, X20
	0x01E073D4 BL 0x301BF90
	0x01E073D8 B 0x1E07310
	0x01E073DC ADRP X8, 0x22F2000
	0x01E073E0 LDR X8, [X8 + 0x9F8]
	0x01E073E4 ADD X0, X31, 0xC0
	0x01E073E8 LDR X1, [X8]
	0x01E073EC BL 0x2BC434C
	0x01E073F0 LDR W8, [X31 + 0x14]
	0x01E073F4 MOVZ W0, 0x1
	0x01E073F8 ADD W8, W8, 0x1
	0x01E073FC CMP W8, W25
	0x01E07400 CSET W21, LT
	0x01E07404 B.NE 0x1E06CD4
	0x01E07408 B 0x1E075D4
	0x01E0740C BL 0x1C16F20
	0x01E07410 B 0x1E0760C
	0x01E07414 BL 0x1C16F20
	0x01E07418 B 0x1E07604
	0x01E0741C B 0x1E07430
	0x01E07420 B 0x1E07430
	0x01E07424 B 0x1E07430
	0x01E07428 B 0x1E07430
	0x01E0742C B 0x1E07430
	0x01E07430 MOV X20, X0
	0x01E07434 CMP W1, 0x1
	0x01E07438 B.NE 0x1E07604
	0x01E0743C MOV X0, X20
	0x01E07440 BL 0x3EB1AD0
	0x01E07444 LDR X27, [X0]
	0x01E07448 BL 0x3EB1AE0
	0x01E0744C ADRP X8, 0x22F2000
	0x01E07450 LDR X8, [X8 + 0x9F8]
	0x01E07454 ADD X0, X31, 0xC0
	0x01E07458 LDR X1, [X8]
	0x01E0745C BL 0x2BC434C
	0x01E07460 LDR W25, [X31 + 0x10]
	0x01E07464 CBZ X27, 0x1E073F0
	0x01E07468 MOV X0, X27
	0x01E0746C BL 0x1C16F18
	0x01E07470 MOVZ W0, 0x1
	0x01E07474 B 0x1E075D4
	0x01E07478 LDR X19, [X31 + 0x20]
	0x01E0747C LDR X8, [X19]
	0x01E07480 CBZ X8, 0x1E075CC
	0x01E07484 LDR X9, [X8 + 0x20]
	0x01E07488 CBZ X9, 0x1E075CC
	0x01E0748C LDR W9, [X9 + 0x18]
	0x01E07490 SUBS W20, W9, 0x1
	0x01E07494 B.MI 0x1E075D0
	0x01E07498 ADRP X22, 0x22F2000
	0x01E0749C ADRP X23, 0x22F2000
	0x01E074A0 LDR X22, [X22 + 0xA48]
	0x01E074A4 LDR X23, [X23 + 0xA30]
	0x01E074A8 LDR X0, [X8 + 0x20]
	0x01E074AC CBZ X0, 0x1E075CC
	0x01E074B0 LDR X2, [X22]
	0x01E074B4 MOV W1, W20
	0x01E074B8 BL 0x301BCCC
	0x01E074BC CBZ X0, 0x1E075CC
	0x01E074C0 MOV X1, X31
	0x01E074C4 BL 0x3C32ECC
	0x01E074C8 ADRP X8, 0x22EC000
	0x01E074CC LDR X8, [X8 + 0x598]
	0x01E074D0 MOV X21, X0
	0x01E074D4 LDR X8, [X8]
	0x01E074D8 LDR W9, [X8 + 0xE0]
	0x01E074DC CBNZ W9, 0x1E074E8
	0x01E074E0 MOV X0, X8
	0x01E074E4 BL 0x1C16DFC
	0x01E074E8 MOV X0, X21
	0x01E074EC MOV X1, X31
	0x01E074F0 BL 0x3C39564
	0x01E074F4 LDR X8, [X19]
	0x01E074F8 CBZ X8, 0x1E075CC
	0x01E074FC LDR X0, [X8 + 0x20]
	0x01E07500 CBZ X0, 0x1E075CC
	0x01E07504 LDR X2, [X23]
	0x01E07508 MOV W1, W20
	0x01E0750C BL 0x301DA48
	0x01E07510 SUBS W20, W20, 0x1
	0x01E07514 B.MI 0x1E075D0
	0x01E07518 LDR X8, [X19]
	0x01E0751C CBNZ X8, 0x1E074A8
	0x01E07520 B 0x1E075CC
	0x01E07524 LDR X19, [X31 + 0x20]
	0x01E07528 LDR X8, [X19]
	0x01E0752C CBZ X8, 0x1E075CC
	0x01E07530 LDR X9, [X8 + 0x20]
	0x01E07534 CBZ X9, 0x1E075CC
	0x01E07538 LDR W9, [X9 + 0x18]
	0x01E0753C SUBS W20, W9, 0x1
	0x01E07540 B.MI 0x1E075D0
	0x01E07544 ADRP X22, 0x22F2000
	0x01E07548 ADRP X23, 0x22F2000
	0x01E0754C LDR X22, [X22 + 0xA48]
	0x01E07550 LDR X23, [X23 + 0xA30]
	0x01E07554 LDR X0, [X8 + 0x20]
	0x01E07558 CBZ X0, 0x1E075CC
	0x01E0755C LDR X2, [X22]
	0x01E07560 MOV W1, W20
	0x01E07564 BL 0x301BCCC
	0x01E07568 CBZ X0, 0x1E075CC
	0x01E0756C MOV X1, X31
	0x01E07570 BL 0x3C32ECC
	0x01E07574 ADRP X8, 0x22EC000
	0x01E07578 LDR X8, [X8 + 0x598]
	0x01E0757C MOV X21, X0
	0x01E07580 LDR X8, [X8]
	0x01E07584 LDR W9, [X8 + 0xE0]
	0x01E07588 CBNZ W9, 0x1E07594
	0x01E0758C MOV X0, X8
	0x01E07590 BL 0x1C16DFC
	0x01E07594 MOV X0, X21
	0x01E07598 MOV X1, X31
	0x01E0759C BL 0x3C39564
	0x01E075A0 LDR X8, [X19]
	0x01E075A4 CBZ X8, 0x1E075CC
	0x01E075A8 LDR X0, [X8 + 0x20]
	0x01E075AC CBZ X0, 0x1E075CC
	0x01E075B0 LDR X2, [X23]
	0x01E075B4 MOV W1, W20
	0x01E075B8 BL 0x301DA48
	0x01E075BC SUBS W20, W20, 0x1
	0x01E075C0 B.MI 0x1E075D0
	0x01E075C4 LDR X8, [X19]
	0x01E075C8 CBNZ X8, 0x1E07554
	0x01E075CC BL 0x1C16F20
	0x01E075D0 MOV W0, W31

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], D8
	003 Move [X31+72], X30
	004 Move [X31+80], X26
	005 Move [X31+88], X25
	006 Move [X31+96], X24
	007 Move [X31+104], X23
	008 Move [X31+112], X22
	009 Move [X31+120], X21
	010 Move [X31+128], X20
	011 Move [X31+136], X19
	012 Move X20, 0x25D2000
	013 Move W8, [X20+3489]
	014 Move X19, X1
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {45}
	019 Move X0, 0x22ED000
	020 Move X0, [X0+2600]
	021 Call 0x1C17CF4
	022 Move X0, 0x22F3000
	023 Move X0, [X0+2400]
	024 Call 0x1C17CF4
	025 Move X0, 0x22F3000
	026 Move X0, [X0+2408]
	027 Call 0x1C17CF4
	028 Move X0, 0x22F3000
	029 Move X0, [X0+2416]
	030 Call 0x1C17CF4
	031 Move X0, 0x22F3000
	032 Move X0, [X0+2424]
	033 Call 0x1C17CF4
	034 Move X0, 0x22F3000
	035 Move X0, [X0+2432]
	036 Call 0x1C17CF4
	037 Move X0, 0x22F3000
	038 Move X0, [X0+2440]
	039 Call 0x1C17CF4
	040 Move X0, 0x22F3000
	041 Move X0, [X0+2448]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X20+3489], W8
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+32], V0
	047 Move [X31+40], V0
	048 Compare X19, 0
	049 JumpIfEqual {142}
	050 Move X26, 0x22F3000
	051 Move X26, [X26+2424]
	052 Move X25, 0x22F3000
	053 Move X25, [X25+2408]
	054 Move X24, 0x22ED000
	055 Move X1, [X26]
	056 Move X23, 0x22F3000
	057 Move X22, 0x22F3000
	058 Move X24, [X24+2600]
	059 Move X23, [X23+2448]
	060 Move X22, [X22+2400]
	061 Add X8, X31, 0
	062 Move X0, X19
	063 Call List`1<WeightedRoomTile>.GetEnumerator, X0
	064 Move V0, [X31]
	065 Move V1, [X31+16]
	066 Move S8, W31
	067 Move [X31+32], V0
	068 Move [X31+40], V1
	069 Move X1, [X25]
	070 Add X0, X31, 32
	071 Call Enumerator<WeightedRoomTile>.MoveNext, X0
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {78}
	076 Move V0, [X31+56]
	077 Add S8, S8, S0
	078 Move X1, [X22]
	079 Add X0, X31, 32
	080 Call Enumerator<WeightedRoomTile>.Dispose, X0
	081 Move S0, W31
	082 Move V1, V8
	083 Move X0, X31
	084 Call Random.Range, V0, V1
	085 Move X1, [X26]
	086 Add X8, X31, 0
	087 Move X0, X19
	088 Move V8, V0
	089 Call List`1<WeightedRoomTile>.GetEnumerator, X0
	090 Move V0, [X31]
	091 Move V1, [X31+16]
	092 Move [X31+32], V0
	093 Move [X31+40], V1
	094 Move X1, [X25]
	095 Add X0, X31, 32
	096 Call Enumerator<WeightedRoomTile>.MoveNext, X0
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {104}
	101 Move V0, [X31+56]
	102 NotImplemented "Instruction FCMP not yet implemented."
	103 Subtract S8, S8, S0
	104 Move X1, [X22]
	105 Add X0, X31, 32
	106 Call Enumerator<WeightedRoomTile>.Dispose, X0
	107 Move X0, [X24]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move X0, [X23]
	113 Move X1, X31
	114 Call Debug.LogWarning, X0
	115 Move W8, [X19+24]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X8, 0x22F3000
	118 Move X8, [X8+2440]
	119 Move X0, X19
	120 Move W1, W31
	121 Move X2, [X8]
	122 Call List`1<WeightedRoomTile>.get_Item, X0, X1
	123 Move X19, X0
	124 Move X1, [X22]
	125 Move X19, [X31+48]
	126 Add X0, X31, 32
	127 Call Enumerator<WeightedRoomTile>.Dispose, X0
	128 Move X19, X31
	129 Move X0, X19
	130 Move X20, [X31+128]
	131 Move X19, [X31+136]
	132 Move X22, [X31+112]
	133 Move X21, [X31+120]
	134 Move X24, [X31+96]
	135 Move X23, [X31+104]
	136 Move X26, [X31+80]
	137 Move X25, [X31+88]
	138 Move X30, [X31+72]
	139 Move V8, [X31+64]
	140 Add X31, X31, 144
	141 Return X0
	142 Call 0x1C17F20
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X20, X0
	145 Move X0, X20
	146 Call 0x3EB2AD0
	147 Move X21, [X0]
	148 Call 0x3EB2AE0
	149 Move X1, [X22]
	150 Add X0, X31, 32
	151 Call Enumerator<WeightedRoomTile>.Dispose, X0
	152 Compare X21, 0
	153 JumpIfEqual {107}
	154 Move X21, X31
	155 Move X20, X0
	156 Move X1, [X22]
	157 Add X0, X31, 32
	158 Call Enumerator<WeightedRoomTile>.Dispose, X0
	159 Compare X21, 0
	160 JumpIfEqual {183}
	161 Move X0, X21
	162 Call 0x1C17F18
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move X20, X0
	165 Move X0, X20
	166 Call 0x3EB2AD0
	167 Move X21, [X0]
	168 Call 0x3EB2AE0
	169 Move X1, [X22]
	170 Add X0, X31, 32
	171 Call Enumerator<WeightedRoomTile>.Dispose, X0
	172 Compare X21, 0
	173 JumpIfEqual {81}
	174 Move X0, X21
	175 Call 0x1C17F18
	176 Move X21, X31
	177 Move X20, X0
	178 Move X1, [X22]
	179 Add X0, X31, 32
	180 Call Enumerator<WeightedRoomTile>.Dispose, X0
	181 Compare X21, 0
	182 JumpIfNotEqual {185}
	183 Move X0, X20
	184 Call 0x1D2D690
	185 Move X0, X21
	186 Call 0x1C17F18
	187 Call 0x1991590

Method: System.Boolean ValidateBounds(UnityEngine.Bounds newB, System.Collections.Generic.List`1<UnityEngine.Bounds> localBounds, System.Collections.Generic.List`1<UnityEngine.Bounds> globalBounds, UnityEngine.Bounds ignore, System.Single boundsError)

Disassembly:
	0x01E075D4 LDP X20, X19, [X31 + 0x1D0]
	0x01E075D8 LDP X22, X21, [X31 + 0x1C0]
	0x01E075DC LDP X24, X23, [X31 + 0x1B0]
	0x01E075E0 LDP X26, X25, [X31 + 0x1A0]
	0x01E075E4 LDP X28, X27, [X31 + 0x190]
	0x01E075E8 LDP X29, X30, [X31 + 0x180]
	0x01E075EC LDP D9, D8, [X31 + 0x170]
	0x01E075F0 LDP D11, D10, [X31 + 0x160]
	0x01E075F4 LDP D13, D12, [X31 + 0x150]
	0x01E075F8 LDP D15, D14, [X31 + 0x140]
	0x01E075FC ADD X31, X31, 0x1E0
	0x01E07600 RET
	0x01E07604 MOV X27, X31
	0x01E07608 B 0x1E07610
	0x01E0760C MOV X20, X0
	0x01E07610 ADRP X8, 0x22F2000
	0x01E07614 LDR X8, [X8 + 0x9F8]
	0x01E07618 LDR X1, [X8]
	0x01E0761C ADD X0, X31, 0xC0
	0x01E07620 BL 0x2BC434C
	0x01E07624 CBNZ X27, 0x1E07630
	0x01E07628 MOV X0, X20
	0x01E0762C BL 0x1D2C690
	0x01E07630 MOV X0, X27
	0x01E07634 BL 0x1C16F18
	0x01E07638 BL 0x1990590
	0x01E0763C STR X30, [X31 - 0x50]!
	0x01E07640 STP X26, X25, [X31 + 0x10]
	0x01E07644 STP X24, X23, [X31 + 0x20]
	0x01E07648 STP X22, X21, [X31 + 0x30]
	0x01E0764C STP X20, X19, [X31 + 0x40]
	0x01E07650 ADRP X23, 0x25D1000
	0x01E07654 ADRP X24, 0x22F2000
	0x01E07658 LDRB W8, [X23 + 0xDDC]
	0x01E0765C LDR X24, [X24 + 0xA60]
	0x01E07660 MOV X19, X3
	0x01E07664 MOV W22, W2
	0x01E07668 MOV W20, W1
	0x01E0766C MOV X21, X0
	0x01E07670 TBNZ X8, 0x0, 0x1E076E8
	0x01E07674 ADRP X0, 0x22F2000
	0x01E07678 LDR X0, [X0 + 0x9C0]
	0x01E0767C BL 0x1C16CF4
	0x01E07680 ADRP X0, 0x22F2000
	0x01E07684 LDR X0, [X0 + 0x9C8]
	0x01E07688 BL 0x1C16CF4
	0x01E0768C ADRP X0, 0x22F2000
	0x01E07690 LDR X0, [X0 + 0x9D0]
	0x01E07694 BL 0x1C16CF4
	0x01E07698 ADRP X0, 0x22F2000
	0x01E0769C LDR X0, [X0 + 0x9D8]
	0x01E076A0 BL 0x1C16CF4
	0x01E076A4 ADRP X0, 0x22F2000
	0x01E076A8 LDR X0, [X0 + 0x9E0]
	0x01E076AC BL 0x1C16CF4
	0x01E076B0 ADRP X0, 0x22F2000
	0x01E076B4 LDR X0, [X0 + 0xA68]
	0x01E076B8 BL 0x1C16CF4
	0x01E076BC ADRP X0, 0x22F2000
	0x01E076C0 LDR X0, [X0 + 0xA70]
	0x01E076C4 BL 0x1C16CF4
	0x01E076C8 ADRP X0, 0x22F2000
	0x01E076CC LDR X0, [X0 + 0xA60]
	0x01E076D0 BL 0x1C16CF4
	0x01E076D4 ADRP X0, 0x22F2000
	0x01E076D8 LDR X0, [X0 + 0xA78]
	0x01E076DC BL 0x1C16CF4
	0x01E076E0 MOVZ W8, 0x1
	0x01E076E4 STRB W8, [X23 + 0xDDC]
	0x01E076E8 LDR X0, [X24]
	0x01E076EC BL 0x1C16F10
	0x01E076F0 MOV X1, X31
	0x01E076F4 MOV X23, X0
	0x01E076F8 BL 0x1E0F9A4
	0x01E076FC CBZ X23, 0x1E07898
	0x01E07700 STR W22, [X23 + 0x10]
	0x01E07704 CBZ W22, 0x1E07830
	0x01E07708 ADRP X26, 0x22F2000
	0x01E0770C LDR X26, [X26 + 0x9D0]
	0x01E07710 ADRP X22, 0x22F2000
	0x01E07714 ADRP X25, 0x22F2000
	0x01E07718 ADRP X24, 0x22F2000
	0x01E0771C LDR X0, [X26]
	0x01E07720 LDR X21, [X21 + 0x38]
	0x01E07724 LDR X22, [X22 + 0xA70]
	0x01E07728 LDR X25, [X25 + 0x9C8]
	0x01E0772C LDR X24, [X24 + 0x9C0]
	0x01E07730 BL 0x1C16F10
	0x01E07734 LDR X2, [X22]
	0x01E07738 MOV X1, X23
	0x01E0773C MOV X3, X31
	0x01E07740 MOV X22, X0
	0x01E07744 BL 0x2D2F428
	0x01E07748 LDR X2, [X25]
	0x01E0774C MOV X0, X21
	0x01E07750 MOV X1, X22
	0x01E07754 BL 0x21DA490
	0x01E07758 LDR X1, [X24]
	0x01E0775C BL 0x21D79F4
	0x01E07760 CBZ X0, 0x1E07898
	0x01E07764 LDR W1, [X0 + 0x18]
	0x01E07768 MOV X21, X0
	0x01E0776C CBZ W1, 0x1E07840
	0x01E07770 TBZ X20, 0x0, 0x1E07850
	0x01E07774 ADRP X23, 0x22F2000
	0x01E07778 LDR X23, [X23 + 0xA78]
	0x01E0777C LDR X0, [X23]
	0x01E07780 LDR W8, [X0 + 0xE0]
	0x01E07784 CBNZ W8, 0x1E07790
	0x01E07788 BL 0x1C16DFC
	0x01E0778C LDR X0, [X23]
	0x01E07790 LDR X8, [X0 + 0xB8]
	0x01E07794 LDR X20, [X8 + 0x10]
	0x01E07798 CBNZ X20, 0x1E077E4
	0x01E0779C LDR W8, [X0 + 0xE0]
	0x01E077A0 CBNZ W8, 0x1E077AC
	0x01E077A4 BL 0x1C16DFC
	0x01E077A8 LDR X0, [X23]
	0x01E077AC LDR X8, [X0 + 0xB8]
	0x01E077B0 LDR X0, [X26]
	0x01E077B4 LDR X22, [X8]
	0x01E077B8 BL 0x1C16F10
	0x01E077BC ADRP X8, 0x22F2000
	0x01E077C0 LDR X8, [X8 + 0xA68]
	0x01E077C4 MOV X1, X22
	0x01E077C8 MOV X3, X31
	0x01E077CC MOV X20, X0
	0x01E077D0 LDR X2, [X8]
	0x01E077D4 BL 0x2D2F428
	0x01E077D8 LDR X8, [X23]
	0x01E077DC LDR X8, [X8 + 0xB8]
	0x01E077E0 STR X20, [X8 + 0x10]
	0x01E077E4 LDR X2, [X25]
	0x01E077E8 MOV X0, X21
	0x01E077EC MOV X1, X20
	0x01E077F0 BL 0x21DA490
	0x01E077F4 LDR X1, [X24]
	0x01E077F8 BL 0x21D79F4
	0x01E077FC CBZ X0, 0x1E07898
	0x01E07800 LDR W1, [X0 + 0x18]
	0x01E07804 MOV X20, X0
	0x01E07808 CMP W1, 0x0
	0x01E0780C B.LE 0x1E0784C
	0x01E07810 MOV W0, W31
	0x01E07814 MOV X2, X31
	0x01E07818 BL 0x3C309A8
	0x01E0781C ADRP X8, 0x22F2000
	0x01E07820 LDR X8, [X8 + 0x9E0]
	0x01E07824 MOV W1, W0
	0x01E07828 MOV X0, X20
	0x01E0782C B 0x1E0786C
	0x01E07830 AND W1, W20, 0x1
	0x01E07834 MOV X0, X21
	0x01E07838 BL 0x1E0BEE0
	0x01E0783C B 0x1E07874
	0x01E07840 MOV X0, X31
	0x01E07844 MOV W8, W31
	0x01E07848 B 0x1E07878
	0x01E0784C LDR W1, [X21 + 0x18]
	0x01E07850 MOV W0, W31
	0x01E07854 MOV X2, X31
	0x01E07858 BL 0x3C309A8
	0x01E0785C ADRP X8, 0x22F2000
	0x01E07860 LDR X8, [X8 + 0x9E0]
	0x01E07864 MOV W1, W0
	0x01E07868 MOV X0, X21
	0x01E0786C LDR X2, [X8]
	0x01E07870 BL 0x301BCCC
	0x01E07874 MOVZ W8, 0x1
	0x01E07878 STR X0, [X19]
	0x01E0787C LDP X20, X19, [X31 + 0x40]
	0x01E07880 LDP X22, X21, [X31 + 0x30]
	0x01E07884 LDP X24, X23, [X31 + 0x20]
	0x01E07888 LDP X26, X25, [X31 + 0x10]
	0x01E0788C MOV W0, W8
	0x01E07890 LDR X30, [X31], #0x50
	0x01E07894 RET
	0x01E07898 BL 0x1C16F20
	0x01E0789C STP D15, D14, [X31 - 0x60]!
	0x01E078A0 STP D13, D12, [X31 + 0x10]
	0x01E078A4 STP D11, D10, [X31 + 0x20]
	0x01E078A8 STP D9, D8, [X31 + 0x30]
	0x01E078AC STR X30, [X31 + 0x40]
	0x01E078B0 STP X20, X19, [X31 + 0x50]
	0x01E078B4 MOV X1, X31
	0x01E078B8 MOV X20, X0
	0x01E078BC MOV X19, X8
	0x01E078C0 BL 0x3C32E90
	0x01E078C4 CBZ X0, 0x1E079D8
	0x01E078C8 LDP S1, S2, [X20 + 0x24]
	0x01E078CC LDR V0, [X20 + 0x20]
	0x01E078D0 MOV X1, X31
	0x01E078D4 BL 0x3C3DE4C
	0x01E078D8 LDP S8, S15, [X20 + 0x2C]
	0x01E078DC LDR V11, [X20 + 0x34]
	0x01E078E0 MOV X0, X20
	0x01E078E4 MOV X1, X31
	0x01E078E8 MOV V10.16B, V0.16B
	0x01E078EC STP S2, S1, [X31 + 0x48]
	0x01E078F0 BL 0x3C32E90
	0x01E078F4 CBZ X0, 0x1E079D8
	0x01E078F8 FMOV S1, W31
	0x01E078FC FMOV S2, W31
	0x01E07900 MOV V0.16B, V8.16B
	0x01E07904 MOV X1, X31
	0x01E07908 BL 0x3C40A44
	0x01E0790C MOV X0, X20
	0x01E07910 MOV X1, X31
	0x01E07914 MOV V14.16B, V0.16B
	0x01E07918 MOV V13.16B, V1.16B
	0x01E0791C MOV V12.16B, V2.16B
	0x01E07920 BL 0x3C32E90
	0x01E07924 CBZ X0, 0x1E079D8
	0x01E07928 FMOV S0, W31
	0x01E0792C FMOV S2, W31

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+192], D9
	003 Move [X31+200], D8
	004 Move [X31+208], X29
	005 Move [X31+216], X30
	006 Move [X31+224], X26
	007 Move [X31+232], X25
	008 Move [X31+240], X24
	009 Move [X31+248], X23
	010 Move [X31+256], X22
	011 Move [X31+264], X21
	012 Move [X31+272], X20
	013 Move [X31+280], X19
	014 Move X23, 0x25D2000
	015 Move W8, [X23+3490]
	016 Move V8, V0
	017 Move X19, X4
	018 Move X21, X3
	019 Move X22, X2
	020 Move X20, X1
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {39}
	025 Move X0, 0x22F3000
	026 Move X0, [X0+2456]
	027 Call 0x1C17CF4
	028 Move X0, 0x22F3000
	029 Move X0, [X0+2464]
	030 Call 0x1C17CF4
	031 Move X0, 0x22F3000
	032 Move X0, [X0+2472]
	033 Call 0x1C17CF4
	034 Move X0, 0x22F3000
	035 Move X0, [X0+2480]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X23+3490], W8
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+176], X31
	041 Move [X31+144], V0
	042 Move [X31+152], V0
	043 Compare X22, 0
	044 JumpIfEqual {209}
	045 Move X26, 0x22F3000
	046 Move X26, [X26+2480]
	047 Move X25, 0x22F3000
	048 Move X24, 0x22F3000
	049 Add X8, X31, 104
	050 Move X1, [X26]
	051 Move X25, [X25+2464]
	052 Move X24, [X24+2456]
	053 Move X0, X22
	054 Call List`1<Bounds>.GetEnumerator, X0
	055 Move X9, -20041728
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 Move X8, [X31+136]
	059 Move V9, [X9+3872]
	060 Move [X31+144], V0
	061 Move [X31+152], V1
	062 Move [X31+176], X8
	063 Move X1, [X25]
	064 Add X0, X31, 144
	065 Call Enumerator<Bounds>.MoveNext, X0
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {119}
	070 Move S0, [X31+160]
	071 Move S1, [X31+164]
	072 Move S6, [X19]
	073 Move S7, [X19+4]
	074 Move S2, [X31+168]
	075 Move S3, [X31+172]
	076 Move V16, [X19+8]
	077 Move S5, [X31+176]
	078 Move S4, [X31+180]
	079 Subtract S6, S0, S6
	080 Subtract S7, S1, S7
	081 Subtract S16, S2, S16
	082 Multiply S6, S6, S6
	083 Multiply S7, S7, S7
	084 Add S6, S6, S7
	085 Multiply S7, S16, S16
	086 Add S6, S7, S6
	087 NotImplemented "Instruction FCMP not yet implemented."
	088 Move S6, [X19+12]
	089 Move S7, [X19+16]
	090 Move V16, [X19+20]
	091 Subtract S6, S3, S6
	092 Subtract S7, S5, S7
	093 Subtract S16, S4, S16
	094 Multiply S6, S6, S6
	095 Multiply S7, S7, S7
	096 Add S6, S7, S6
	097 Multiply S7, S16, S16
	098 Add S6, S7, S6
	099 NotImplemented "Instruction FCMP not yet implemented."
	100 Move V6, [X20]
	101 Move X8, [X20+16]
	102 Move [X31+80], S0
	103 Move [X31+88], S1
	104 Add X1, X31, 80
	105 Add X2, X31, 48
	106 Move V0, V8
	107 Move [X31+88], S2
	108 Move [X31+96], S3
	109 Move [X31+64], X8
	110 Move [X31+3], V6
	111 Move [X31+96], S5
	112 Move [X31+104], S4
	113 Call Archetype.CustomBoundsCheck, X0, X1, X2, V0
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfNotEqual {63}
	118 Move W19, W31
	119 Move X1, [X24]
	120 Add X0, X31, 144
	121 Call Enumerator<Bounds>.Dispose, X0
	122 Compare X21, 0
	123 JumpIfEqual {209}
	124 Move X1, [X26]
	125 Add X8, X31, 104
	126 Move X0, X21
	127 Call List`1<Bounds>.GetEnumerator, X0
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction LDUR not yet implemented."
	130 Move X8, [X31+136]
	131 Move [X31+144], V0
	132 Move [X31+152], V1
	133 Move [X31+176], X8
	134 Move X1, [X25]
	135 Add X0, X31, 144
	136 Call Enumerator<Bounds>.MoveNext, X0
	137 Move W21, W0
	138 Move TEMP, X0
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfNotEqual {190}
	142 Move S0, [X31+160]
	143 Move S1, [X31+164]
	144 Move S6, [X19]
	145 Move S7, [X19+4]
	146 Move S2, [X31+168]
	147 Move S3, [X31+172]
	148 Move V16, [X19+8]
	149 Move S5, [X31+176]
	150 Move S4, [X31+180]
	151 Subtract S6, S0, S6
	152 Subtract S7, S1, S7
	153 Subtract S16, S2, S16
	154 Multiply S6, S6, S6
	155 Multiply S7, S7, S7
	156 Add S6, S6, S7
	157 Multiply S7, S16, S16
	158 Add S6, S7, S6
	159 NotImplemented "Instruction FCMP not yet implemented."
	160 Move S6, [X19+12]
	161 Move S7, [X19+16]
	162 Move V16, [X19+20]
	163 Subtract S6, S3, S6
	164 Subtract S7, S5, S7
	165 Subtract S16, S4, S16
	166 Multiply S6, S6, S6
	167 Multiply S7, S7, S7
	168 Add S6, S7, S6
	169 Multiply S7, S16, S16
	170 Add S6, S7, S6
	171 NotImplemented "Instruction FCMP not yet implemented."
	172 Move V6, [X20]
	173 Move X8, [X20+16]
	174 Move [X31+24], S0
	175 Move [X31+32], S1
	176 Add X1, X31, 24
	177 Add X2, X31, 0
	178 Move V0, V8
	179 Move [X31+32], S2
	180 Move [X31+40], S3
	181 Move [X31+16], X8
	182 Move [X31], V6
	183 Move [X31+40], S5
	184 Move [X31+48], S4
	185 Call Archetype.CustomBoundsCheck, X0, X1, X2, V0
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {134}
	190 Xor W19, W21, 1
	191 Move X1, [X24]
	192 Add X0, X31, 144
	193 Call Enumerator<Bounds>.Dispose, X0
	194 And W0, W19, 1
	195 Move X20, [X31+272]
	196 Move X19, [X31+280]
	197 Move X22, [X31+256]
	198 Move X21, [X31+264]
	199 Move X24, [X31+240]
	200 Move X23, [X31+248]
	201 Move X26, [X31+224]
	202 Move X25, [X31+232]
	203 Move X29, [X31+208]
	204 Move X30, [X31+216]
	205 Move D9, [X31+192]
	206 Move D8, [X31+200]
	207 Add X31, X31, 288
	208 Return X0
	209 Call 0x1C17F20
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Move X22, X0
	212 Move X0, X22
	213 Call 0x3EB2AD0
	214 Move X19, [X0]
	215 Call 0x3EB2AE0
	216 Move X1, [X24]
	217 Add X0, X31, 144
	218 Call Enumerator<Bounds>.Dispose, X0
	219 Compare X19, 0
	220 JumpIfNotEqual {223}
	221 Move W19, 1
	222 Move X19, X31
	223 Move X0, X19
	224 Call 0x1C17F18
	225 Move X22, X0
	226 Move X1, [X24]
	227 Add X0, X31, 144
	228 Call Enumerator<Bounds>.Dispose, X0
	229 Compare X19, 0
	230 JumpIfEqual {253}
	231 Move X0, X19
	232 Call 0x1C17F18
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Move X22, X0
	235 Move X0, X22
	236 Call 0x3EB2AD0
	237 Move X23, [X0]
	238 Call 0x3EB2AE0
	239 Move X1, [X24]
	240 Add X0, X31, 144
	241 Call Enumerator<Bounds>.Dispose, X0
	242 Compare X23, 0
	243 JumpIfEqual {122}
	244 Move X0, X23
	245 Call 0x1C17F18
	246 Move X23, X31
	247 Move X22, X0
	248 Move X1, [X24]
	249 Add X0, X31, 144
	250 Call Enumerator<Bounds>.Dispose, X0
	251 Compare X23, 0
	252 JumpIfNotEqual {255}
	253 Move X0, X22
	254 Call 0x1D2D690
	255 Move X0, X23
	256 Call 0x1C17F18
	257 Call 0x1991590

Method: System.Boolean CustomBoundsCheck(UnityEngine.Bounds a, UnityEngine.Bounds b, System.Single error)

Disassembly:
	0x01E07930 MOV V1.16B, V15.16B
	0x01E07934 MOV X1, X31
	0x01E07938 BL 0x3C40A44
	0x01E0793C MOV X0, X20
	0x01E07940 MOV X1, X31
	0x01E07944 MOV V9.16B, V0.16B
	0x01E07948 MOV V8.16B, V1.16B
	0x01E0794C MOV V15.16B, V2.16B
	0x01E07950 BL 0x3C32E90
	0x01E07954 CBZ X0, 0x1E079D8
	0x01E07958 FMOV S0, W31
	0x01E0795C FMOV S1, W31
	0x01E07960 MOV V2.16B, V11.16B
	0x01E07964 MOV X1, X31
	0x01E07968 BL 0x3C40A44
	0x01E0796C FABS S3, S14
	0x01E07970 FABS S4, S9
	0x01E07974 FABS S0, S0
	0x01E07978 FADD S3, S3, S4
	0x01E0797C LDR V17, [X31 + 0x4C]
	0x01E07980 FADD S0, S3, S0
	0x01E07984 LDR V3, [X31 + 0x48]
	0x01E07988 FABS S5, S13
	0x01E0798C FABS S6, S8
	0x01E07990 FABS S7, S12
	0x01E07994 FABS S16, S15
	0x01E07998 FABS S1, S1
	0x01E0799C FABS S2, S2
	0x01E079A0 FADD S4, S5, S6
	0x01E079A4 FADD S5, S7, S16
	0x01E079A8 FADD S1, S4, S1
	0x01E079AC FADD S2, S5, S2
	0x01E079B0 STP S10, S17, [X19]
	0x01E079B4 STP S3, S0, [X19 + 0x8]
	0x01E079B8 STP S1, S2, [X19 + 0x10]
	0x01E079BC LDP X20, X19, [X31 + 0x50]
	0x01E079C0 LDR X30, [X31 + 0x40]
	0x01E079C4 LDP D9, D8, [X31 + 0x30]
	0x01E079C8 LDP D11, D10, [X31 + 0x20]
	0x01E079CC LDP D13, D12, [X31 + 0x10]
	0x01E079D0 LDP D15, D14, [X31], #0x60
	0x01E079D4 RET
	0x01E079D8 BL 0x1C16F20
	0x01E079DC MOV X1, X31
	0x01E079E0 B 0x31CD6DC

ISIL:
	001 Move V1, [X1]
	002 Move V3, [X1+12]
	003 Move V2, [X2]
	004 Move V4, [X2+12]
	005 Add S5, S1, S3
	006 Subtract S5, S5, S0
	007 Subtract S6, S2, S4
	008 NotImplemented "Instruction FCMP not yet implemented."
	009 Move W0, W31
	010 Return X0
	011 Move S5, [X1+4]
	012 Move S6, [X1+8]
	013 Move S7, [X1+16]
	014 Move S16, [X1+20]
	015 Move S17, [X2+4]
	016 Move S18, [X2+8]
	017 Move S19, [X2+16]
	018 Move S20, [X2+20]
	019 Subtract S1, S1, S3
	020 Add S2, S2, S4
	021 Add S1, S1, S0
	022 Add S4, S5, S7
	023 NotImplemented "Instruction FCMP not yet implemented."
	024 Subtract S2, S17, S19
	025 Subtract S5, S5, S7
	026 Subtract S4, S4, S0
	027 NotImplemented "Instruction CSET not yet implemented."
	028 Add S3, S6, S16
	029 Add S7, S17, S19
	030 Add S5, S5, S0
	031 NotImplemented "Instruction FCMP not yet implemented."
	032 Subtract S1, S18, S20
	033 Subtract S6, S6, S16
	034 Subtract S3, S3, S0
	035 NotImplemented "Instruction CSET not yet implemented."
	036 NotImplemented "Instruction FCMP not yet implemented."
	037 Add S16, S18, S20
	038 Add S0, S6, S0
	039 And W8, W8, W9
	040 NotImplemented "Instruction CSET not yet implemented."
	041 NotImplemented "Instruction FCMP not yet implemented."
	042 And W8, W9, W8
	043 NotImplemented "Instruction CSET not yet implemented."
	044 NotImplemented "Instruction FCMP not yet implemented."
	045 And W8, W9, W8
	046 NotImplemented "Instruction CSET not yet implemented."
	047 And W0, W9, W8
	048 Return X0

Method: System.Boolean TryPickSocket(System.Collections.Generic.List`1<AnimalCompany.GameGen.Socket> sockets, AnimalCompany.GameGen.SocketFlag requiredFlags, out AnimalCompany.GameGen.Socket pickedSocket)

Disassembly:
	0x01E079E4 STR X30, [X31 - 0x10]!
	0x01E079E8 CBZ X1, 0x1E07A04
	0x01E079EC LDR W8, [X1 + 0x30]
	0x01E079F0 LDR W9, [X0 + 0x10]
	0x01E079F4 BICS W31, W9, W8, 0x0
	0x01E079F8 CSET W0, EQ
	0x01E079FC LDR X30, [X31], #0x10
	0x01E07A00 RET
	0x01E07A04 BL 0x1C16F20
	0x01E07A08 STP X30, X21, [X31 - 0x20]!
	0x01E07A0C STP X20, X19, [X31 + 0x10]
	0x01E07A10 ADRP X21, 0x25D1000
	0x01E07A14 ADRP X20, 0x22F2000
	0x01E07A18 LDRB W8, [X21 + 0xDA5]
	0x01E07A1C LDR X20, [X20 + 0xA80]
	0x01E07A20 MOV X19, X0
	0x01E07A24 TBNZ X8, 0x0, 0x1E07A3C
	0x01E07A28 ADRP X0, 0x22F2000
	0x01E07A2C LDR X0, [X0 + 0xA80]
	0x01E07A30 BL 0x1C16CF4
	0x01E07A34 MOVZ W8, 0x1
	0x01E07A38 STRB W8, [X21 + 0xDA5]
	0x01E07A3C LDR X0, [X19 + 0x38]!
	0x01E07A40 MOV X1, X31
	0x01E07A44 BL 0x32277A8
	0x01E07A48 ANDS W31, W0, 0x1
	0x01E07A4C CSEL X8, X20, X19, NE
	0x01E07A50 LDR X0, [X8]
	0x01E07A54 LDP X20, X19, [X31 + 0x10]
	0x01E07A58 LDP X30, X21, [X31], #0x20
	0x01E07A5C RET
	0x01E07A60 STR X30, [X31 - 0x20]!
	0x01E07A64 STP X20, X19, [X31 + 0x10]
	0x01E07A68 ADRP X20, 0x25D1000
	0x01E07A6C ADRP X19, 0x22F2000
	0x01E07A70 LDRB W8, [X20 + 0xDA6]
	0x01E07A74 LDR X19, [X19 + 0xA88]
	0x01E07A78 TBNZ X8, 0x0, 0x1E07A90
	0x01E07A7C ADRP X0, 0x22F2000
	0x01E07A80 LDR X0, [X0 + 0xA88]
	0x01E07A84 BL 0x1C16CF4
	0x01E07A88 MOVZ W8, 0x1
	0x01E07A8C STRB W8, [X20 + 0xDA6]
	0x01E07A90 LDR X0, [X19]
	0x01E07A94 LDR W8, [X0 + 0xE0]
	0x01E07A98 CBNZ W8, 0x1E07AA4
	0x01E07A9C BL 0x1C16DFC
	0x01E07AA0 LDR X0, [X19]
	0x01E07AA4 LDR X8, [X0 + 0xB8]
	0x01E07AA8 LDP X20, X19, [X31 + 0x10]
	0x01E07AAC LDR X0, [X8 + 0x10]
	0x01E07AB0 LDR X30, [X31], #0x20
	0x01E07AB4 RET
	0x01E07AB8 SUB X31, X31, 0xE0
	0x01E07ABC STP X29, X30, [X31 + 0x80]
	0x01E07AC0 STP X28, X27, [X31 + 0x90]
	0x01E07AC4 STP X26, X25, [X31 + 0xA0]
	0x01E07AC8 STP X24, X23, [X31 + 0xB0]
	0x01E07ACC STP X22, X21, [X31 + 0xC0]
	0x01E07AD0 STP X20, X19, [X31 + 0xD0]
	0x01E07AD4 ADRP X22, 0x25D1000
	0x01E07AD8 ADRP X20, 0x22F2000
	0x01E07ADC MOV X19, X8
	0x01E07AE0 LDRB W8, [X22 + 0xDA7]
	0x01E07AE4 LDR X20, [X20 + 0x9F0]
	0x01E07AE8 MOV X24, X2
	0x01E07AEC MOV X23, X1
	0x01E07AF0 MOV X21, X0
	0x01E07AF4 TBNZ X8, 0x0, 0x1E07BFC
	0x01E07AF8 ADRP X0, 0x22F2000
	0x01E07AFC LDR X0, [X0 + 0x960]
	0x01E07B00 BL 0x1C16CF4
	0x01E07B04 ADRP X0, 0x22F2000
	0x01E07B08 LDR X0, [X0 + 0xA90]
	0x01E07B0C BL 0x1C16CF4
	0x01E07B10 ADRP X0, 0x22F2000
	0x01E07B14 LDR X0, [X0 + 0xA98]
	0x01E07B18 BL 0x1C16CF4
	0x01E07B1C ADRP X0, 0x22F2000
	0x01E07B20 LDR X0, [X0 + 0x968]
	0x01E07B24 BL 0x1C16CF4
	0x01E07B28 ADRP X0, 0x22F2000
	0x01E07B2C LDR X0, [X0 + 0xAA0]
	0x01E07B30 BL 0x1C16CF4
	0x01E07B34 ADRP X0, 0x22F2000
	0x01E07B38 LDR X0, [X0 + 0x970]
	0x01E07B3C BL 0x1C16CF4
	0x01E07B40 ADRP X0, 0x22EC000
	0x01E07B44 LDR X0, [X0 + 0xA58]
	0x01E07B48 BL 0x1C16CF4
	0x01E07B4C ADRP X0, 0x22F2000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x25D2000
	009 Move X23, 0x22F3000
	010 Move W8, [X22+3491]
	011 Move X23, [X23+2488]
	012 Move X19, X3
	013 Move W21, W2
	014 Move X20, X1
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {42}
	019 Move X0, 0x22F3000
	020 Move X0, [X0+2496]
	021 Call 0x1C17CF4
	022 Move X0, 0x22F3000
	023 Move X0, [X0+2504]
	024 Call 0x1C17CF4
	025 Move X0, 0x22F3000
	026 Move X0, [X0+2512]
	027 Call 0x1C17CF4
	028 Move X0, 0x22F3000
	029 Move X0, [X0+2520]
	030 Call 0x1C17CF4
	031 Move X0, 0x22F3000
	032 Move X0, [X0+2528]
	033 Call 0x1C17CF4
	034 Move X0, 0x22F3000
	035 Move X0, [X0+2536]
	036 Call 0x1C17CF4
	037 Move X0, 0x22F3000
	038 Move X0, [X0+2488]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X22+3491], W8
	042 Move X0, [X23]
	043 Call 0x1C17F10
	044 Move X1, X31
	045 Move X22, X0
	046 Call Object..ctor, X0
	047 Compare X22, 0
	048 JumpIfEqual {104}
	049 Move [X22+16], W21
	050 Compare W21, 0
	051 JumpIfEqual {81}
	052 Move X8, 0x22F3000
	053 Move X8, [X8+2512]
	054 Move X21, 0x22F3000
	055 Move X23, 0x22F3000
	056 Move X24, 0x22F3000
	057 Move X0, [X8]
	058 Move X21, [X21+2536]
	059 Move X23, [X23+2504]
	060 Move X24, [X24+2496]
	061 Call 0x1C17F10
	062 Move X2, [X21]
	063 Move X1, X22
	064 Move X3, X31
	065 Move X21, X0
	066 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	067 Move X2, [X23]
	068 Move X0, X20
	069 Move X1, X21
	070 Call Enumerable.Where, X0, X1
	071 Move X1, [X24]
	072 Call Enumerable.ToList, X0
	073 Compare X0, 0
	074 JumpIfEqual {104}
	075 Move W1, [X0+24]
	076 Move X20, X0
	077 Compare W1, 0
	078 JumpIfNotEqual {84}
	079 Move X0, X31
	080 Move W8, W31
	081 Compare X20, 0
	082 JumpIfEqual {104}
	083 Move W1, [X20+24]
	084 Move W0, W31
	085 Move X2, X31
	086 Call Random.Range, X0, X1
	087 Move X8, 0x22F3000
	088 Move X8, [X8+2528]
	089 Move W1, W0
	090 Move X0, X20
	091 Move X2, [X8]
	092 Call List`1<Object>.get_Item, X0, X1
	093 Move W8, 1
	094 Move [X19], X0
	095 Move X20, [X31+48]
	096 Move X19, [X31+56]
	097 Move X22, [X31+32]
	098 Move X21, [X31+40]
	099 Move X24, [X31+16]
	100 Move X23, [X31+24]
	101 Move W0, W8
	102 Move X30, [X31+64]
	103 Return X0
	104 Call 0x1C17F20

Method: System.Boolean TryGenerateRooms(System.Collections.Generic.List`1<AnimalCompany.GameGen.WeightedRoomTile> tiles, System.Collections.Generic.List`1<AnimalCompany.GameGen.Socket> availableSockets, AnimalCompany.GameGen.SocketFlag socketFlags, System.Collections.Generic.List`1<UnityEngine.Bounds> localBounds, AnimalCompany.GameGen.Generator generator, System.Int32 roomCount, System.Single boundsError, out AnimalCompany.GameGen.NodeGenerationResult result)

Disassembly:
	0x01E07B58 ADRP X0, 0x22F2000
	0x01E07B5C LDR X0, [X0 + 0xAA8]
	0x01E07B60 BL 0x1C16CF4
	0x01E07B64 ADRP X0, 0x22F2000
	0x01E07B68 LDR X0, [X0 + 0x978]
	0x01E07B6C BL 0x1C16CF4
	0x01E07B70 ADRP X0, 0x22F2000
	0x01E07B74 LDR X0, [X0 + 0xAB0]
	0x01E07B78 BL 0x1C16CF4
	0x01E07B7C ADRP X0, 0x22F2000
	0x01E07B80 LDR X0, [X0 + 0xAB8]
	0x01E07B84 BL 0x1C16CF4
	0x01E07B88 ADRP X0, 0x22F2000
	0x01E07B8C LDR X0, [X0 + 0xAC0]
	0x01E07B90 BL 0x1C16CF4
	0x01E07B94 ADRP X0, 0x22F2000
	0x01E07B98 LDR X0, [X0 + 0xAC8]
	0x01E07B9C BL 0x1C16CF4
	0x01E07BA0 ADRP X0, 0x22F2000
	0x01E07BA4 LDR X0, [X0 + 0xAD0]
	0x01E07BA8 BL 0x1C16CF4
	0x01E07BAC ADRP X0, 0x22F2000
	0x01E07BB0 LDR X0, [X0 + 0xAD8]
	0x01E07BB4 BL 0x1C16CF4
	0x01E07BB8 ADRP X0, 0x22F2000
	0x01E07BBC LDR X0, [X0 + 0xAE0]
	0x01E07BC0 BL 0x1C16CF4
	0x01E07BC4 ADRP X0, 0x22F2000
	0x01E07BC8 LDR X0, [X0 + 0x9F0]
	0x01E07BCC BL 0x1C16CF4
	0x01E07BD0 ADRP X0, 0x22EC000
	0x01E07BD4 LDR X0, [X0 + 0x598]
	0x01E07BD8 BL 0x1C16CF4
	0x01E07BDC ADRP X0, 0x22F2000
	0x01E07BE0 LDR X0, [X0 + 0xAE8]
	0x01E07BE4 BL 0x1C16CF4
	0x01E07BE8 ADRP X0, 0x22EC000
	0x01E07BEC LDR X0, [X0 + 0xEC8]
	0x01E07BF0 BL 0x1C16CF4
	0x01E07BF4 MOVZ W8, 0x1
	0x01E07BF8 STRB W8, [X22 + 0xDA7]
	0x01E07BFC LDR X0, [X20]
	0x01E07C00 MOVI V0.2D, 0x0
	0x01E07C04 STR X31, [X31 + 0x70]
	0x01E07C08 STP X31, X31, [X31 + 0x50]
	0x01E07C0C STR X31, [X31 + 0x60]
	0x01E07C10 STP V0, V0, [X31 + 0x30]
	0x01E07C14 STR W31, [X31 + 0x78]
	0x01E07C18 STUR W31, [X31 + 0x7B]
	0x01E07C1C BL 0x1C16F10
	0x01E07C20 MOV X1, X31
	0x01E07C24 MOV X22, X0
	0x01E07C28 BL 0x1E1017C
	0x01E07C2C CBZ X22, 0x1E080E8
	0x01E07C30 STR X24, [X31 + 0x8]
	0x01E07C34 ADRP X8, 0x22F2000
	0x01E07C38 LDR X8, [X8 + 0xAD8]
	0x01E07C3C STR X21, [X22 + 0x10]
	0x01E07C40 ADRP X20, 0x22F2000
	0x01E07C44 LDR X0, [X8]
	0x01E07C48 LDR X20, [X20 + 0xAC8]
	0x01E07C4C BL 0x1C16F10
	0x01E07C50 LDR X1, [X20]
	0x01E07C54 MOV X24, X0
	0x01E07C58 BL 0x30D3DD0
	0x01E07C5C LDR X0, [X21 + 0x40]
	0x01E07C60 STR X24, [X21 + 0x50]
	0x01E07C64 CBZ X0, 0x1E080E8
	0x01E07C68 ADRP X8, 0x22F2000
	0x01E07C6C LDR X8, [X8 + 0xAB0]
	0x01E07C70 ADRP X28, 0x22F2000
	0x01E07C74 ADRP X20, 0x22F2000
	0x01E07C78 ADRP X24, 0x22F2000
	0x01E07C7C ADRP X29, 0x22F2000
	0x01E07C80 ADRP X27, 0x22F2000
	0x01E07C84 LDR X28, [X28 + 0xA98]
	0x01E07C88 LDR X20, [X20 + 0x978]
	0x01E07C8C LDR X24, [X24 + 0x968]
	0x01E07C90 LDR X29, [X29 + 0xAA8]
	0x01E07C94 LDR X27, [X27 + 0x960]
	0x01E07C98 LDR X1, [X8]
	0x01E07C9C ADRP X25, 0x22F2000
	0x01E07CA0 LDR X25, [X25 + 0xA90]
	0x01E07CA4 ADD X8, X31, 0x10
	0x01E07CA8 BL 0x301CB58
	0x01E07CAC LDR V0, [X31 + 0x1]
	0x01E07CB0 LDR X8, [X31 + 0x20]
	0x01E07CB4 STR V0, [X31 + 0x5]
	0x01E07CB8 STR X8, [X31 + 0x60]
	0x01E07CBC LDR X1, [X28]
	0x01E07CC0 ADD X0, X31, 0x50
	0x01E07CC4 BL 0x2BC4350
	0x01E07CC8 TBZ X0, 0x0, 0x1E07DA4
	0x01E07CCC LDR X8, [X31 + 0x60]
	0x01E07CD0 CBZ X8, 0x1E080D8
	0x01E07CD4 LDR X0, [X8 + 0x18]
	0x01E07CD8 CBZ X0, 0x1E080DC
	0x01E07CDC LDR X1, [X20]
	0x01E07CE0 ADD X8, X31, 0x10
	0x01E07CE4 BL 0x30D51F4
	0x01E07CE8 LDP V0, V1, [X31 + 0x10]
	0x01E07CEC STP V0, V1, [X31 + 0x30]
	0x01E07CF0 LDR X1, [X24]
	0x01E07CF4 ADD X0, X31, 0x30
	0x01E07CF8 BL 0x2BD1F5C
	0x01E07CFC TBZ X0, 0x0, 0x1E07D5C
	0x01E07D00 LDR X0, [X21 + 0x50]
	0x01E07D04 CBZ X0, 0x1E07D74
	0x01E07D08 LDR W10, [X0 + 0x1C]
	0x01E07D0C LDP X1, X2, [X31 + 0x40]
	0x01E07D10 LDR X8, [X0 + 0x10]
	0x01E07D14 LDR X9, [X29]
	0x01E07D18 ADD W10, W10, 0x1
	0x01E07D1C STR W10, [X0 + 0x1C]
	0x01E07D20 CBZ X8, 0x1E07D7C
	0x01E07D24 LDRSW X10, [X0 + 0x18]
	0x01E07D28 LDR W11, [X8 + 0x18]
	0x01E07D2C CMP W10, W11
	0x01E07D30 B.CS 0x1E07D48
	0x01E07D34 ADD W9, W10, 0x1
	0x01E07D38 ADD X8, X8, X10, 0x4, LSL
	0x01E07D3C STR W9, [X0 + 0x18]
	0x01E07D40 STP X1, X2, [X8 + 0x20]
	0x01E07D44 B 0x1E07CF0
	0x01E07D48 LDR X8, [X9 + 0x20]
	0x01E07D4C LDR X8, [X8 + 0xC0]
	0x01E07D50 LDR X3, [X8 + 0x70]
	0x01E07D54 BL 0x30D45DC
	0x01E07D58 B 0x1E07CF0
	0x01E07D5C MOV X26, X31
	0x01E07D60 LDR X1, [X27]
	0x01E07D64 ADD X0, X31, 0x30
	0x01E07D68 BL 0x2BD1F58
	0x01E07D6C CBZ X26, 0x1E07CBC
	0x01E07D70 B 0x1E080E0
	0x01E07D74 BL 0x1C16F20
	0x01E07D78 B 0x1E080EC
	0x01E07D7C BL 0x1C16F20
	0x01E07D80 B 0x1E080EC
	0x01E07D84 B 0x1E07D8C
	0x01E07D88 B 0x1E07D8C
	0x01E07D8C CMP W1, 0x1
	0x01E07D90 B.NE 0x1E080AC
	0x01E07D94 BL 0x3EB1AD0
	0x01E07D98 LDR X26, [X0]
	0x01E07D9C BL 0x3EB1AE0
	0x01E07DA0 B 0x1E07D60
	0x01E07DA4 LDR X1, [X25]
	0x01E07DA8 ADD X0, X31, 0x50
	0x01E07DAC BL 0x2BC434C
	0x01E07DB0 ADRP X8, 0x22F2000
	0x01E07DB4 LDR X8, [X8 + 0xAE0]
	0x01E07DB8 LDR X0, [X8]
	0x01E07DBC BL 0x1C16F10
	0x01E07DC0 ADRP X8, 0x22F2000
	0x01E07DC4 LDR X8, [X8 + 0xAC0]
	0x01E07DC8 MOV X24, X0
	0x01E07DCC LDR X1, [X8]
	0x01E07DD0 BL 0x301B7C4
	0x01E07DD4 CBZ X24, 0x1E080E8
	0x01E07DD8 ADRP X9, 0x22F2000
	0x01E07DDC LDR W10, [X24 + 0x1C]
	0x01E07DE0 LDR X8, [X24 + 0x10]
	0x01E07DE4 LDR X9, [X9 + 0xA10]
	0x01E07DE8 ADD W10, W10, 0x1
	0x01E07DEC LDR X9, [X9]
	0x01E07DF0 STR W10, [X24 + 0x1C]
	0x01E07DF4 CBZ X8, 0x1E080E8
	0x01E07DF8 LDRSW X10, [X24 + 0x18]
	0x01E07DFC LDR W11, [X8 + 0x18]
	0x01E07E00 CMP W10, W11
	0x01E07E04 B.CS 0x1E07E1C
	0x01E07E08 ADD W9, W10, 0x1
	0x01E07E0C ADD X8, X8, X10, 0x3, LSL
	0x01E07E10 STR W9, [X24 + 0x18]
	0x01E07E14 STR X23, [X8 + 0x20]
	0x01E07E18 B 0x1E07E34
	0x01E07E1C LDR X8, [X9 + 0x20]
	0x01E07E20 MOV X0, X24
	0x01E07E24 MOV X1, X23
	0x01E07E28 LDR X8, [X8 + 0xC0]
	0x01E07E2C LDR X2, [X8 + 0x70]
	0x01E07E30 BL 0x301BF90
	0x01E07E34 ADRP X8, 0x22F2000
	0x01E07E38 LDR X8, [X8 + 0xAD0]
	0x01E07E3C LDR X0, [X8]
	0x01E07E40 BL 0x1C16F10
	0x01E07E44 ADRP X8, 0x22F2000
	0x01E07E48 LDR X8, [X8 + 0xAB8]
	0x01E07E4C MOV X25, X0
	0x01E07E50 LDR X1, [X8]
	0x01E07E54 BL 0x2F64678
	0x01E07E58 MOV X0, X21
	0x01E07E5C BL 0x1E07A08
	0x01E07E60 ADRP X8, 0x22EC000
	0x01E07E64 LDR X8, [X8 + 0xEC8]
	0x01E07E68 ADRP X9, 0x22F2000
	0x01E07E6C MOV X1, X0
	0x01E07E70 MOV X3, X31
	0x01E07E74 LDR X8, [X8]
	0x01E07E78 LDR X9, [X9 + 0xAE8]
	0x01E07E7C MOV X0, X8
	0x01E07E80 LDR X2, [X9]
	0x01E07E84 BL 0x32274B8
	0x01E07E88 ADRP X8, 0x22EC000
	0x01E07E8C LDR X8, [X8 + 0xA58]
	0x01E07E90 MOV X27, X0
	0x01E07E94 LDR X8, [X8]
	0x01E07E98 MOV X0, X8
	0x01E07E9C BL 0x1C16F10
	0x01E07EA0 MOV X1, X27
	0x01E07EA4 MOV X2, X31
	0x01E07EA8 MOV X26, X0
	0x01E07EAC BL 0x3C35934
	0x01E07EB0 CBZ X26, 0x1E080E8
	0x01E07EB4 MOV X0, X26
	0x01E07EB8 MOV X1, X31
	0x01E07EBC BL 0x3C356F8
	0x01E07EC0 CBZ X0, 0x1E080E8
	0x01E07EC4 MOV X1, X31
	0x01E07EC8 MOV X26, X0
	0x01E07ECC BL 0x3C32E90
	0x01E07ED0 CBZ X23, 0x1E080E8
	0x01E07ED4 MOV X27, X0
	0x01E07ED8 MOV X0, X23
	0x01E07EDC MOV X1, X31
	0x01E07EE0 BL 0x3C32E90
	0x01E07EE4 CBZ X27, 0x1E080E8
	0x01E07EE8 MOV X1, X0
	0x01E07EEC MOV X0, X27
	0x01E07EF0 MOV X2, X31
	0x01E07EF4 BL 0x3C3FD20
	0x01E07EF8 MOV X0, X26
	0x01E07EFC MOV X1, X31
	0x01E07F00 BL 0x3C32E90
	0x01E07F04 ADRP X20, 0x25D1000
	0x01E07F08 LDRB W8, [X20 + 0x783]
	0x01E07F0C MOV X23, X0
	0x01E07F10 CBNZ W8, 0x1E07F28
	0x01E07F14 ADRP X0, 0x22EC000
	0x01E07F18 LDR X0, [X0 + 0x5A0]
	0x01E07F1C BL 0x1C16CF4
	0x01E07F20 MOVZ W8, 0x1
	0x01E07F24 STRB W8, [X20 + 0x783]
	0x01E07F28 CBZ X23, 0x1E080E8
	0x01E07F2C ADRP X8, 0x22EC000
	0x01E07F30 LDR X8, [X8 + 0x5A0]
	0x01E07F34 MOV X0, X23
	0x01E07F38 MOV X1, X31
	0x01E07F3C LDR X8, [X8]
	0x01E07F40 LDR X8, [X8 + 0xB8]
	0x01E07F44 LDP S1, S2, [X8 + 0x4]
	0x01E07F48 LDR V0, [X8]
	0x01E07F4C BL 0x3C3EC04
	0x01E07F50 MOV X0, X26
	0x01E07F54 MOV X1, X31
	0x01E07F58 BL 0x3C32E90
	0x01E07F5C ADRP X20, 0x25D1000
	0x01E07F60 LDRB W8, [X20 + 0x793]
	0x01E07F64 MOV X23, X0
	0x01E07F68 CBNZ W8, 0x1E07F80
	0x01E07F6C ADRP X0, 0x22ED000
	0x01E07F70 LDR X0, [X0 + 0x5A8]
	0x01E07F74 BL 0x1C16CF4
	0x01E07F78 MOVZ W8, 0x1
	0x01E07F7C STRB W8, [X20 + 0x793]
	0x01E07F80 CBZ X23, 0x1E080E8
	0x01E07F84 ADRP X8, 0x22ED000
	0x01E07F88 LDR X8, [X8 + 0x5A8]
	0x01E07F8C MOV X0, X23
	0x01E07F90 MOV X1, X31
	0x01E07F94 LDR X8, [X8]
	0x01E07F98 LDR X8, [X8 + 0xB8]
	0x01E07F9C LDP S2, S3, [X8 + 0x8]
	0x01E07FA0 LDP S0, S1, [X8]
	0x01E07FA4 BL 0x3C3F8B8
	0x01E07FA8 MOV X0, X26
	0x01E07FAC MOV X1, X31
	0x01E07FB0 BL 0x3C32ECC
	0x01E07FB4 STR X0, [X22 + 0x18]
	0x01E07FB8 CBZ X21, 0x1E080E8
	0x01E07FBC LDRB W8, [X21 + 0x4C]
	0x01E07FC0 ADRP X9, 0xFFFFFFFFFECE6000
	0x01E07FC4 ADD X9, X9, 0xBB8
	0x01E07FC8 LDR W6, [X21 + 0x48]
	0x01E07FCC CMP W8, 0x0
	0x01E07FD0 CSET W8, EQ
	0x01E07FD4 LDR V0, [X9, W8, UXTW]
	0x01E07FD8 LDR X1, [X21 + 0x50]
	0x01E07FDC LDR X5, [X31 + 0x8]
	0x01E07FE0 ADD X7, X31, 0x70
	0x01E07FE4 MOV X0, X21
	0x01E07FE8 MOV X2, X24
	0x01E07FEC MOV W3, W31
	0x01E07FF0 MOV X4, X25
	0x01E07FF4 BL 0x1E06B58
	0x01E07FF8 TBZ X0, 0x0, 0x1E08038
	0x01E07FFC LDR X8, [X31 + 0x70]
	0x01E08000 CBZ X8, 0x1E080E8
	0x01E08004 LDR X8, [X8 + 0x20]
	0x01E08008 MOV X0, X24
	0x01E0800C MOV X1, X31
	0x01E08010 STR X8, [X22 + 0x20]
	0x01E08014 BL 0x1E0FB6C
	0x01E08018 LDR W8, [X31 + 0x78]
	0x01E0801C LDUR W9, [X31 + 0x7B]
	0x01E08020 MOVZ W10, 0x1
	0x01E08024 STRB W10, [X19]
	0x01E08028 STUR W8, [X19 + 0x1]
	0x01E0802C STR W9, [X19 + 0x4]
	0x01E08030 STP X0, X25, [X19 + 0x8]
	0x01E08034 B 0x1E08088
	0x01E08038 MOV X0, X26
	0x01E0803C MOV X1, X31
	0x01E08040 BL 0x3C32ECC
	0x01E08044 ADRP X8, 0x22EB000
	0x01E08048 LDR X8, [X8 + 0x598]
	0x01E0804C MOV X20, X0
	0x01E08050 LDR X8, [X8]
	0x01E08054 LDR W9, [X8 + 0xE0]
	0x01E08058 CBNZ W9, 0x1E08064
	0x01E0805C MOV X0, X8
	0x01E08060 BL 0x1C16DFC
	0x01E08064 MOV X0, X20
	0x01E08068 MOV X1, X31
	0x01E0806C BL 0x3C39564
	0x01E08070 LDUR W8, [X31 + 0x7B]
	0x01E08074 LDR W9, [X31 + 0x78]
	0x01E08078 STRB W31, [X19]
	0x01E0807C STP X31, X31, [X19 + 0x8]
	0x01E08080 STR W8, [X19 + 0x4]
	0x01E08084 STUR W9, [X19 + 0x1]
	0x01E08088 STR X22, [X19 + 0x18]
	0x01E0808C LDP X20, X19, [X31 + 0xD0]
	0x01E08090 LDP X22, X21, [X31 + 0xC0]
	0x01E08094 LDP X24, X23, [X31 + 0xB0]
	0x01E08098 LDP X26, X25, [X31 + 0xA0]
	0x01E0809C LDP X28, X27, [X31 + 0x90]
	0x01E080A0 LDP X29, X30, [X31 + 0x80]
	0x01E080A4 ADD X31, X31, 0xE0
	0x01E080A8 RET
	0x01E080AC MOV X24, X1
	0x01E080B0 MOV X20, X0
	0x01E080B4 MOV X26, X31
	0x01E080B8 LDR X1, [X27]
	0x01E080BC ADD X0, X31, 0x30
	0x01E080C0 BL 0x2BD1F58
	0x01E080C4 MOV X0, X20
	0x01E080C8 MOV X1, X24
	0x01E080CC CBZ X26, 0x1E0810C
	0x01E080D0 MOV X0, X26
	0x01E080D4 BL 0x1C16F18
	0x01E080D8 BL 0x1C16F20
	0x01E080DC BL 0x1C16F20
	0x01E080E0 MOV X0, X26
	0x01E080E4 BL 0x1C16F18
	0x01E080E8 BL 0x1C16F20
	0x01E080EC MOV X24, X1
	0x01E080F0 MOV X20, X0
	0x01E080F4 B 0x1E080B8
	0x01E080F8 B 0x1E0810C
	0x01E080FC B 0x1E0810C
	0x01E08100 B 0x1E0810C
	0x01E08104 B 0x1E0810C
	0x01E08108 B 0x1E0810C
	0x01E0810C CMP W1, 0x1
	0x01E08110 B.NE 0x1E08138
	0x01E08114 BL 0x3EB1AD0
	0x01E08118 LDR X26, [X0]
	0x01E0811C BL 0x3EB1AE0
	0x01E08120 LDR X1, [X25]
	0x01E08124 ADD X0, X31, 0x50
	0x01E08128 BL 0x2BC434C
	0x01E0812C CBZ X26, 0x1E07DB0
	0x01E08130 MOV X0, X26
	0x01E08134 BL 0x1C16F18
	0x01E08138 MOV X19, X0
	0x01E0813C MOV X26, X31
	0x01E08140 B 0x1E08148
	0x01E08144 MOV X19, X0
	0x01E08148 LDR X1, [X25]
	0x01E0814C ADD X0, X31, 0x50
	0x01E08150 BL 0x2BC434C
	0x01E08154 CBNZ X26, 0x1E08160
	0x01E08158 MOV X0, X19
	0x01E0815C BL 0x1D2C690
	0x01E08160 MOV X0, X26
	0x01E08164 BL 0x1C16F18
	0x01E08168 BL 0x1990590
	0x01E0816C MOVZ W8, 0x5
	0x01E08170 MOV X1, X31
	0x01E08174 STR W8, [X0 + 0x48]
	0x01E08178 B 0x31CD6DC
	0x01E0817C STP X30, X21, [X31 - 0x20]!
	0x01E08180 STP X20, X19, [X31 + 0x10]
	0x01E08184 ADRP X21, 0x25D0000
	0x01E08188 ADRP X20, 0x22F1000
	0x01E0818C LDRB W8, [X21 + 0xDA8]
	0x01E08190 LDR X20, [X20 + 0xAF0]
	0x01E08194 MOV X19, X0
	0x01E08198 TBNZ X8, 0x0, 0x1E081B0
	0x01E0819C ADRP X0, 0x22F1000
	0x01E081A0 LDR X0, [X0 + 0xAF0]
	0x01E081A4 BL 0x1C16CF4
	0x01E081A8 MOVZ W8, 0x1
	0x01E081AC STRB W8, [X21 + 0xDA8]
	0x01E081B0 LDR X0, [X19 + 0x38]!
	0x01E081B4 MOV X1, X31
	0x01E081B8 BL 0x32277A8
	0x01E081BC ANDS W31, W0, 0x1
	0x01E081C0 CSEL X8, X20, X19, NE
	0x01E081C4 LDR X0, [X8]
	0x01E081C8 LDP X20, X19, [X31 + 0x10]
	0x01E081CC LDP X30, X21, [X31], #0x20
	0x01E081D0 RET
	0x01E081D4 STR X30, [X31 - 0x20]!
	0x01E081D8 STP X20, X19, [X31 + 0x10]
	0x01E081DC ADRP X20, 0x25D0000
	0x01E081E0 ADRP X19, 0x22F1000
	0x01E081E4 LDRB W8, [X20 + 0xDA9]
	0x01E081E8 LDR X19, [X19 + 0xA88]
	0x01E081EC TBNZ X8, 0x0, 0x1E08204
	0x01E081F0 ADRP X0, 0x22F1000
	0x01E081F4 LDR X0, [X0 + 0xA88]
	0x01E081F8 BL 0x1C16CF4
	0x01E081FC MOVZ W8, 0x1
	0x01E08200 STRB W8, [X20 + 0xDA9]
	0x01E08204 LDR X0, [X19]
	0x01E08208 LDR W8, [X0 + 0xE0]
	0x01E0820C CBNZ W8, 0x1E08218
	0x01E08210 BL 0x1C16DFC
	0x01E08214 LDR X0, [X19]
	0x01E08218 LDR X8, [X0 + 0xB8]
	0x01E0821C LDP X20, X19, [X31 + 0x10]
	0x01E08220 LDR X0, [X8 + 0xA0]
	0x01E08224 LDR X30, [X31], #0x20
	0x01E08228 RET
	0x01E0822C SUB X31, X31, 0xF0
	0x01E08230 STR D8, [X31 + 0x80]
	0x01E08234 STP X29, X30, [X31 + 0x90]
	0x01E08238 STP X28, X27, [X31 + 0xA0]
	0x01E0823C STP X26, X25, [X31 + 0xB0]
	0x01E08240 STP X24, X23, [X31 + 0xC0]
	0x01E08244 STP X22, X21, [X31 + 0xD0]
	0x01E08248 STP X20, X19, [X31 + 0xE0]
	0x01E0824C STR X8, [X31 + 0x10]
	0x01E08250 ADRP X21, 0x25D0000
	0x01E08254 ADRP X19, 0x22F1000
	0x01E08258 LDRB W8, [X21 + 0xDAA]
	0x01E0825C LDR X19, [X19 + 0x9F0]
	0x01E08260 MOV X22, X2
	0x01E08264 MOV X25, X1
	0x01E08268 MOV X20, X0
	0x01E0826C TBNZ X8, 0x0, 0x1E083EC
	0x01E08270 ADRP X0, 0x22F1000
	0x01E08274 LDR X0, [X0 + 0x9C0]
	0x01E08278 BL 0x1C16CF4
	0x01E0827C ADRP X0, 0x22F1000
	0x01E08280 LDR X0, [X0 + 0x9C8]
	0x01E08284 BL 0x1C16CF4
	0x01E08288 ADRP X0, 0x22F1000
	0x01E0828C LDR X0, [X0 + 0x960]
	0x01E08290 BL 0x1C16CF4
	0x01E08294 ADRP X0, 0x22F1000
	0x01E08298 LDR X0, [X0 + 0xA90]
	0x01E0829C BL 0x1C16CF4
	0x01E082A0 ADRP X0, 0x22F1000
	0x01E082A4 LDR X0, [X0 + 0xA98]
	0x01E082A8 BL 0x1C16CF4
	0x01E082AC ADRP X0, 0x22F1000
	0x01E082B0 LDR X0, [X0 + 0x968]
	0x01E082B4 BL 0x1C16CF4
	0x01E082B8 ADRP X0, 0x22F1000
	0x01E082BC LDR X0, [X0 + 0xAA0]
	0x01E082C0 BL 0x1C16CF4
	0x01E082C4 ADRP X0, 0x22F1000
	0x01E082C8 LDR X0, [X0 + 0x970]
	0x01E082CC BL 0x1C16CF4
	0x01E082D0 ADRP X0, 0x22F1000
	0x01E082D4 LDR X0, [X0 + 0x9D0]
	0x01E082D8 BL 0x1C16CF4
	0x01E082DC ADRP X0, 0x22EB000
	0x01E082E0 LDR X0, [X0 + 0xA58]
	0x01E082E4 BL 0x1C16CF4
	0x01E082E8 ADRP X0, 0x22F1000
	0x01E082EC LDR X0, [X0 + 0xAF8]
	0x01E082F0 BL 0x1C16CF4
	0x01E082F4 ADRP X0, 0x22F1000
	0x01E082F8 LDR X0, [X0 + 0xB00]
	0x01E082FC BL 0x1C16CF4
	0x01E08300 ADRP X0, 0x22F1000
	0x01E08304 LDR X0, [X0 + 0xA10]
	0x01E08308 BL 0x1C16CF4
	0x01E0830C ADRP X0, 0x22F1000
	0x01E08310 LDR X0, [X0 + 0xAA8]
	0x01E08314 BL 0x1C16CF4
	0x01E08318 ADRP X0, 0x22F1000
	0x01E0831C LDR X0, [X0 + 0x978]
	0x01E08320 BL 0x1C16CF4
	0x01E08324 ADRP X0, 0x22F1000
	0x01E08328 LDR X0, [X0 + 0xAB0]
	0x01E0832C BL 0x1C16CF4
	0x01E08330 ADRP X0, 0x22F1000
	0x01E08334 LDR X0, [X0 + 0xA30]
	0x01E08338 BL 0x1C16CF4
	0x01E0833C ADRP X0, 0x22F1000
	0x01E08340 LDR X0, [X0 + 0xAB8]
	0x01E08344 BL 0x1C16CF4
	0x01E08348 ADRP X0, 0x22F1000
	0x01E0834C LDR X0, [X0 + 0xAC0]
	0x01E08350 BL 0x1C16CF4
	0x01E08354 ADRP X0, 0x22F1000
	0x01E08358 LDR X0, [X0 + 0xAC8]
	0x01E0835C BL 0x1C16CF4
	0x01E08360 ADRP X0, 0x22F1000
	0x01E08364 LDR X0, [X0 + 0xA40]
	0x01E08368 BL 0x1C16CF4
	0x01E0836C ADRP X0, 0x22F1000
	0x01E08370 LDR X0, [X0 + 0xA48]
	0x01E08374 BL 0x1C16CF4
	0x01E08378 ADRP X0, 0x22F1000
	0x01E0837C LDR X0, [X0 + 0xAD0]
	0x01E08380 BL 0x1C16CF4
	0x01E08384 ADRP X0, 0x22F1000
	0x01E08388 LDR X0, [X0 + 0xAD8]
	0x01E0838C BL 0x1C16CF4
	0x01E08390 ADRP X0, 0x22F1000
	0x01E08394 LDR X0, [X0 + 0xAE0]
	0x01E08398 BL 0x1C16CF4
	0x01E0839C ADRP X0, 0x22F1000
	0x01E083A0 LDR X0, [X0 + 0x9F0]
	0x01E083A4 BL 0x1C16CF4
	0x01E083A8 ADRP X0, 0x22EB000
	0x01E083AC LDR X0, [X0 + 0x598]
	0x01E083B0 BL 0x1C16CF4
	0x01E083B4 ADRP X0, 0x22F1000
	0x01E083B8 LDR X0, [X0 + 0xB08]
	0x01E083BC BL 0x1C16CF4
	0x01E083C0 ADRP X0, 0x22F1000
	0x01E083C4 LDR X0, [X0 + 0xB10]
	0x01E083C8 BL 0x1C16CF4
	0x01E083CC ADRP X0, 0x22F1000
	0x01E083D0 LDR X0, [X0 + 0xAE8]
	0x01E083D4 BL 0x1C16CF4
	0x01E083D8 ADRP X0, 0x22EB000
	0x01E083DC LDR X0, [X0 + 0xEC8]
	0x01E083E0 BL 0x1C16CF4
	0x01E083E4 MOVZ W8, 0x1
	0x01E083E8 STRB W8, [X21 + 0xDAA]
	0x01E083EC MOVI V0.2D, 0x0
	0x01E083F0 MOV X24, X20
	0x01E083F4 STR X31, [X31 + 0x88]
	0x01E083F8 STP X31, X31, [X31 + 0x70]
	0x01E083FC STP X31, X31, [X31 + 0x60]
	0x01E08400 STP V0, V0, [X31 + 0x40]
	0x01E08404 STR V0, [X24 + 0x90]!
	0x01E08408 STR V0, [X24 + 0x1]
	0x01E0840C LDR X0, [X19]
	0x01E08410 BL 0x1C16F10
	0x01E08414 MOV X1, X31
	0x01E08418 MOV X23, X0
	0x01E0841C BL 0x1E1017C
	0x01E08420 STR X23, [X24 + 0x18]
	0x01E08424 CBZ X23, 0x1E08BB8
	0x01E08428 STR X25, [X31 + 0x18]
	0x01E0842C ADRP X8, 0x22F1000
	0x01E08430 LDR X8, [X8 + 0xAD8]
	0x01E08434 STR X20, [X23 + 0x10]
	0x01E08438 STR X22, [X20 + 0xB0]
	0x01E0843C STR X31, [X20 + 0xC0]
	0x01E08440 LDR X0, [X8]
	0x01E08444 ADRP X21, 0x22F1000
	0x01E08448 LDR X21, [X21 + 0xAC8]
	0x01E0844C BL 0x1C16F10
	0x01E08450 LDR X1, [X21]
	0x01E08454 MOV X22, X0
	0x01E08458 BL 0x30D3DD0
	0x01E0845C LDR X0, [X20 + 0x40]
	0x01E08460 STR X22, [X20 + 0x60]
	0x01E08464 CBZ X0, 0x1E08BB8
	0x01E08468 ADRP X27, 0x22F1000
	0x01E0846C LDR X27, [X27 + 0xAB0]
	0x01E08470 ADRP X25, 0x22F1000
	0x01E08474 ADRP X26, 0x22F1000
	0x01E08478 ADRP X28, 0x22F1000
	0x01E0847C ADRP X19, 0x22F1000
	0x01E08480 ADRP X29, 0x22F1000
	0x01E08484 LDR X25, [X25 + 0xA98]
	0x01E08488 LDR X26, [X26 + 0x978]
	0x01E0848C LDR X28, [X28 + 0x968]
	0x01E08490 LDR X19, [X19 + 0xAA8]
	0x01E08494 LDR X29, [X29 + 0x960]
	0x01E08498 LDR X1, [X27]
	0x01E0849C ADD X8, X31, 0x20
	0x01E084A0 BL 0x301CB58
	0x01E084A4 LDR V0, [X31 + 0x2]
	0x01E084A8 LDR X8, [X31 + 0x30]
	0x01E084AC STR V0, [X31 + 0x6]
	0x01E084B0 STR X8, [X31 + 0x70]
	0x01E084B4 LDR X1, [X25]
	0x01E084B8 ADD X0, X31, 0x60
	0x01E084BC BL 0x2BC4350
	0x01E084C0 TBZ X0, 0x0, 0x1E085A4
	0x01E084C4 LDR X8, [X31 + 0x70]
	0x01E084C8 CBZ X8, 0x1E08C88
	0x01E084CC LDR X0, [X8 + 0x18]
	0x01E084D0 CBZ X0, 0x1E08C8C
	0x01E084D4 LDR X1, [X26]
	0x01E084D8 ADD X8, X31, 0x20
	0x01E084DC BL 0x30D51F4
	0x01E084E0 LDP V0, V1, [X31 + 0x20]
	0x01E084E4 STP V0, V1, [X31 + 0x40]
	0x01E084E8 LDR X1, [X28]
	0x01E084EC ADD X0, X31, 0x40
	0x01E084F0 BL 0x2BD1F5C
	0x01E084F4 TBZ X0, 0x0, 0x1E08554
	0x01E084F8 LDR X0, [X20 + 0x60]
	0x01E084FC CBZ X0, 0x1E0856C
	0x01E08500 LDR W10, [X0 + 0x1C]
	0x01E08504 LDP X1, X2, [X31 + 0x50]
	0x01E08508 LDR X8, [X0 + 0x10]
	0x01E0850C LDR X9, [X19]
	0x01E08510 ADD W10, W10, 0x1
	0x01E08514 STR W10, [X0 + 0x1C]
	0x01E08518 CBZ X8, 0x1E08574
	0x01E0851C LDRSW X10, [X0 + 0x18]
	0x01E08520 LDR W11, [X8 + 0x18]
	0x01E08524 CMP W10, W11
	0x01E08528 B.CS 0x1E08540
	0x01E0852C ADD W9, W10, 0x1
	0x01E08530 ADD X8, X8, X10, 0x4, LSL
	0x01E08534 STR W9, [X0 + 0x18]
	0x01E08538 STP X1, X2, [X8 + 0x20]
	0x01E0853C B 0x1E084E8
	0x01E08540 LDR X8, [X9 + 0x20]
	0x01E08544 LDR X8, [X8 + 0xC0]
	0x01E08548 LDR X3, [X8 + 0x70]
	0x01E0854C BL 0x30D45DC
	0x01E08550 B 0x1E084E8
	0x01E08554 MOV X23, X31
	0x01E08558 LDR X1, [X29]
	0x01E0855C ADD X0, X31, 0x40
	0x01E08560 BL 0x2BD1F58
	0x01E08564 CBZ X23, 0x1E084B4
	0x01E08568 B 0x1E08C90
	0x01E0856C BL 0x1C16F20
	0x01E08570 B 0x1E08CA8
	0x01E08574 BL 0x1C16F20
	0x01E08578 B 0x1E08CA8
	0x01E0857C B 0x1E08584
	0x01E08580 B 0x1E08584
	0x01E08584 MOV X22, X0
	0x01E08588 CMP W1, 0x1
	0x01E0858C B.NE 0x1E08C2C
	0x01E08590 MOV X0, X22
	0x01E08594 BL 0x3EB1AD0
	0x01E08598 LDR X23, [X0]
	0x01E0859C BL 0x3EB1AE0
	0x01E085A0 B 0x1E08558
	0x01E085A4 ADRP X8, 0x22F1000
	0x01E085A8 LDR X8, [X8 + 0xA90]
	0x01E085AC ADD X0, X31, 0x60
	0x01E085B0 LDR X1, [X8]
	0x01E085B4 BL 0x2BC434C
	0x01E085B8 ADRP X8, 0x22F1000
	0x01E085BC LDR X8, [X8 + 0xAD8]
	0x01E085C0 LDR X0, [X8]
	0x01E085C4 BL 0x1C16F10
	0x01E085C8 LDR X1, [X21]
	0x01E085CC MOV X22, X0
	0x01E085D0 BL 0x30D3DD0
	0x01E085D4 LDR X0, [X20 + 0x48]
	0x01E085D8 STR X22, [X20 + 0x68]
	0x01E085DC CBZ X0, 0x1E08BB8
	0x01E085E0 LDR X1, [X27]
	0x01E085E4 ADD X8, X31, 0x20
	0x01E085E8 BL 0x301CB58
	0x01E085EC LDR V0, [X31 + 0x2]
	0x01E085F0 LDR X8, [X31 + 0x30]
	0x01E085F4 STR V0, [X31 + 0x6]
	0x01E085F8 STR X8, [X31 + 0x70]
	0x01E085FC LDR X1, [X25]
	0x01E08600 ADD X0, X31, 0x60
	0x01E08604 BL 0x2BC4350
	0x01E08608 TBZ X0, 0x0, 0x1E08700
	0x01E0860C LDR X8, [X31 + 0x70]
	0x01E08610 CBZ X8, 0x1E08CA0
	0x01E08614 LDR X0, [X8 + 0x18]
	0x01E08618 CBZ X0, 0x1E08CA4
	0x01E0861C LDR X1, [X26]
	0x01E08620 ADD X8, X31, 0x20
	0x01E08624 BL 0x30D51F4
	0x01E08628 LDP V0, V1, [X31 + 0x20]
	0x01E0862C STP V0, V1, [X31 + 0x40]
	0x01E08630 LDR X1, [X28]
	0x01E08634 ADD X0, X31, 0x40
	0x01E08638 BL 0x2BD1F5C

ISIL:
	001 Subtract X31, X31, 480
	002 Move [X31+320], D15
	003 Move [X31+328], D14
	004 Move [X31+336], D13
	005 Move [X31+344], D12
	006 Move [X31+352], D11
	007 Move [X31+360], D10
	008 Move [X31+368], D9
	009 Move [X31+376], D8
	010 Move [X31+384], X29
	011 Move [X31+392], X30
	012 Move [X31+400], X28
	013 Move [X31+408], X27
	014 Move [X31+416], X26
	015 Move [X31+424], X25
	016 Move [X31+432], X24
	017 Move [X31+440], X23
	018 Move [X31+448], X22
	019 Move [X31+456], X21
	020 Move [X31+464], X20
	021 Move [X31+472], X19
	022 Move [X31+32], X7
	023 Move [X31+40], X0
	024 Move [X31+52], S0
	025 Move [X31+56], X5
	026 Move [X31+64], X4
	027 Move X21, 0x25D2000
	028 Move X20, 0x22F3000
	029 Move W8, [X21+3492]
	030 Move X20, [X20+2544]
	031 Move W25, W6
	032 Move W23, W3
	033 Move X24, X2
	034 Move X19, X1
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {89}
	039 Move X0, 0x22F3000
	040 Move X0, [X0+2552]
	041 Call 0x1C17CF4
	042 Move X0, 0x22F3000
	043 Move X0, [X0+2560]
	044 Call 0x1C17CF4
	045 Move X0, 0x22F3000
	046 Move X0, [X0+2568]
	047 Call 0x1C17CF4
	048 Move X0, 0x22F3000
	049 Move X0, [X0+2576]
	050 Call 0x1C17CF4
	051 Move X0, 0x22F3000
	052 Move X0, [X0+2584]
	053 Call 0x1C17CF4
	054 Move X0, 0x22F3000
	055 Move X0, [X0+2592]
	056 Call 0x1C17CF4
	057 Move X0, 0x22F3000
	058 Move X0, [X0+2600]
	059 Call 0x1C17CF4
	060 Move X0, 0x22F3000
	061 Move X0, [X0+2608]
	062 Call 0x1C17CF4
	063 Move X0, 0x22F3000
	064 Move X0, [X0+2616]
	065 Call 0x1C17CF4
	066 Move X0, 0x22F3000
	067 Move X0, [X0+2520]
	068 Call 0x1C17CF4
	069 Move X0, 0x22F3000
	070 Move X0, [X0+2624]
	071 Call 0x1C17CF4
	072 Move X0, 0x22F3000
	073 Move X0, [X0+2632]
	074 Call 0x1C17CF4
	075 Move X0, 0x22F3000
	076 Move X0, [X0+2544]
	077 Call 0x1C17CF4
	078 Move X0, 0x22F3000
	079 Move X0, [X0+2640]
	080 Call 0x1C17CF4
	081 Move X0, 0x22ED000
	082 Move X0, [X0+1432]
	083 Call 0x1C17CF4
	084 Move X0, 0x22F3000
	085 Move X0, [X0+2648]
	086 Call 0x1C17CF4
	087 Move W8, 1
	088 Move [X21+3492], W8
	089 Move X0, [X20]
	090 Move [X31+240], X31
	091 Move [X31+248], X31
	092 Move [X31+216], X31
	093 Move [X31+224], X31
	094 Move [X31+232], X31
	095 Move [X31+192], X31
	096 Move [X31+200], X31
	097 Move [X31+208], X31
	098 Call 0x1C17F10
	099 Move X1, X31
	100 Move X20, X0
	101 Call NodeGenerationResult..ctor, X0
	102 Move X8, [X31+32]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move [X8], X20
	105 Compare X24, 0
	106 JumpIfEqual {726}
	107 Move [X31+24], X31
	108 Move X26, 0x22F3000
	109 Move X26, [X26+2640]
	110 Move W22, W31
	111 Move W8, W31
	112 Move W21, 1
	113 Move [X31+16], W25
	114 Move W25, W31
	115 Move [X31+20], W8
	116 Move W8, [X24+24]
	117 Compare W8, 0
	118 JumpIfEqual {727}
	119 Add X3, X31, 248
	120 Move X1, X24
	121 Move W2, W23
	122 Call Archetype.TryPickSocket, X0, X1, X2, X3
	123 Move TEMP, X0
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfNotEqual {727}
	127 Move X1, X19
	128 Call Archetype.PickTile, X0, X1
	129 Move X29, [X31+248]
	130 Compare X29, 0
	131 JumpIfEqual {726}
	132 Move X20, X0
	133 Move X0, X29
	134 Move X1, X31
	135 Call Component.get_transform, X0
	136 Compare X0, 0
	137 JumpIfEqual {726}
	138 Move X1, X31
	139 Call Transform.get_position, X0
	140 Move X0, X29
	141 Move X1, X31
	142 Move V8, V0
	143 Move V9, V1
	144 Move V10, V2
	145 Call Component.get_transform, X0
	146 Compare X0, 0
	147 JumpIfEqual {726}
	148 Move X1, X31
	149 Call Transform.get_rotation, X0
	150 Move X0, X29
	151 Move X1, X31
	152 Move V11, V0
	153 Move V12, V1
	154 Move V13, V2
	155 Move V14, V3
	156 Call Component.get_transform, X0
	157 Move X8, 0x22ED000
	158 Move X8, [X8+1432]
	159 Move X27, X0
	160 Move X8, [X8]
	161 Move W9, [X8+224]
	162 Compare W9, 0
	163 JumpIfNotEqual {166}
	164 Move X0, X8
	165 Call 0x1C17DFC
	166 Move X2, [X26]
	167 Move X0, X20
	168 Move V0, V8
	169 Move V1, V9
	170 Move V2, V10
	171 Move V3, V11
	172 Move V4, V12
	173 Move V5, V13
	174 Move V6, V14
	175 Move X1, X27
	176 Call 0x222E6B8, X0, X1, X2, X3
	177 Compare X0, 0
	178 JumpIfEqual {726}
	179 Add X3, X31, 240
	180 Move W1, 1
	181 Move W2, W23
	182 Move X27, X0
	183 Call Tile.TryGetRandomSocket, X0, X1, X2, X3
	184 Move TEMP, X0
	185 And TEMP, TEMP, 1
	186 Compare TEMP, 1
	187 JumpIfNotEqual {413}
	188 Move X28, [X31+240]
	189 Compare X28, 0
	190 JumpIfEqual {726}
	191 Move X0, X28
	192 Move X1, X31
	193 Call Component.get_transform, X0
	194 Compare X0, 0
	195 JumpIfEqual {726}
	196 Move X1, X31
	197 Call Transform.get_forward, X0
	198 NotImplemented "Instruction FNEG not yet implemented."
	199 NotImplemented "Instruction FNEG not yet implemented."
	200 NotImplemented "Instruction FNEG not yet implemented."
	201 Move X0, X31
	202 Call Quaternion.LookRotation, X0
	203 Move X0, X31
	204 Call Quaternion.Inverse, X0
	205 Move X0, X27
	206 Move X1, X31
	207 Move V11, V0
	208 Move V10, V1
	209 Move V9, V2
	210 Move V12, V3
	211 Call Component.get_transform, X0
	212 Compare X0, 0
	213 JumpIfEqual {726}
	214 Move X1, X31
	215 Call Transform.get_forward, X0
	216 Move X0, X31
	217 Call Quaternion.LookRotation, X0
	218 Move X0, X27
	219 Move X1, X31
	220 Move V15, V0
	221 Move V14, V1
	222 Move V13, V2
	223 Move V8, V3
	224 Call Component.get_transform, X0
	225 Move X20, X0
	226 Move X0, X27
	227 Move X1, X31
	228 Call Component.get_transform, X0
	229 Compare X0, 0
	230 JumpIfEqual {726}
	231 Move X1, X31
	232 Call Transform.get_rotation, X0
	233 Compare X20, 0
	234 JumpIfEqual {726}
	235 Multiply S4, S12, S15
	236 Multiply S5, S11, S8
	237 Multiply S16, S12, S14
	238 Multiply S17, S10, S8
	239 Multiply S21, S11, S15
	240 Multiply S24, S12, S13
	241 Multiply S25, S12, S8
	242 Multiply S26, S9, S8
	243 Multiply S6, S10, S13
	244 Multiply S18, S9, S15
	245 Multiply S20, S11, S14
	246 Multiply S23, S10, S14
	247 Add S4, S4, S5
	248 Add S5, S16, S17
	249 Add S16, S24, S26
	250 Subtract S17, S25, S21
	251 Multiply S7, S9, S14
	252 Multiply S19, S11, S13
	253 Multiply S22, S10, S15
	254 Multiply S27, S9, S13
	255 Add S4, S6, S4
	256 Add S5, S18, S5
	257 Add S6, S20, S16
	258 Subtract S16, S17, S23
	259 Subtract S4, S4, S7
	260 Subtract S5, S5, S19
	261 Subtract S6, S6, S22
	262 Subtract S7, S16, S27
	263 Multiply S16, S7, S3
	264 Multiply S17, S4, S0
	265 Multiply S18, S5, S1
	266 Multiply S19, S6, S2
	267 Multiply S20, S5, S0
	268 Multiply S21, S6, S3
	269 Multiply S22, S7, S2
	270 Multiply S23, S4, S1
	271 Multiply S24, S7, S1
	272 Multiply S1, S6, S1
	273 Multiply S6, S6, S0
	274 Multiply S0, S7, S0
	275 Multiply S7, S4, S2
	276 Multiply S4, S4, S3
	277 Multiply S3, S5, S3
	278 Multiply S5, S5, S2
	279 Subtract S2, S16, S17
	280 Add S16, S21, S22
	281 Add S3, S3, S24
	282 Add S0, S4, S0
	283 Subtract S2, S2, S18
	284 Add S4, S20, S16
	285 Add S7, S7, S3
	286 Add S0, S1, S0
	287 Subtract S3, S2, S19
	288 Subtract S2, S4, S23
	289 Subtract S1, S7, S6
	290 Subtract S0, S0, S5
	291 Move X0, X20
	292 Move X1, X31
	293 Call Transform.set_rotation, X0, X1
	294 Move X0, X27
	295 Move X1, X31
	296 Call Component.get_transform, X0
	297 Compare X0, 0
	298 JumpIfEqual {726}
	299 Move X1, X31
	300 Call Transform.get_position, X0
	301 Move X0, X28
	302 Move X1, X31
	303 Move V12, V0
	304 Move V9, V1
	305 Move V10, V2
	306 Call Component.get_transform, X0
	307 Compare X0, 0
	308 JumpIfEqual {726}
	309 Move X1, X31
	310 Call Transform.get_position, X0
	311 Move X0, X29
	312 Move X1, X31
	313 Move V13, V0
	314 Move [X31+88], S2
	315 Move [X31+96], S1
	316 Call Component.get_transform, X0
	317 Compare X0, 0
	318 JumpIfEqual {726}
	319 Move X1, X31
	320 Move [X31+80], S9
	321 Move [X31+88], S10
	322 Call Transform.get_position, X0
	323 Move X0, X27
	324 Move X1, X31
	325 Move V14, V0
	326 Move V15, V1
	327 Move V9, V2
	328 Call Component.get_transform, X0
	329 Compare X0, 0
	330 JumpIfEqual {726}
	331 Move X1, X31
	332 Call Transform.get_position, X0
	333 Move X0, X27
	334 Move X1, X31
	335 Move V10, V0
	336 Move V11, V1
	337 Move V8, V2
	338 Call Component.get_transform, X0
	339 Compare X0, 0
	340 JumpIfEqual {726}
	341 Subtract S0, S12, S13
	342 Move [X31+76], S0
	343 Move V0, [X31+80]
	344 Move V1, [X31+92]
	345 Move X1, X31
	346 Move X20, X0
	347 Subtract S8, S9, S8
	348 Subtract S12, S0, S1
	349 Move S0, [X31+84]
	350 Move S1, [X31+88]
	351 Subtract S9, S15, S11
	352 Subtract S10, S14, S10
	353 Subtract S13, S0, S1
	354 Call Transform.get_position, X0
	355 Move V3, [X31+76]
	356 Add S4, S12, S9
	357 Add S5, S13, S8
	358 Add S1, S4, S1
	359 Add S3, S3, S10
	360 Add S0, S3, S0
	361 Add S2, S5, S2
	362 Move X0, X20
	363 Move X1, X31
	364 Call Transform.set_position, X0, X1
	365 Add X8, X31, 216
	366 Move X0, X27
	367 Call Tile.GetWorldBounds, X0
	368 Move X8, [X31+232]
	369 NotImplemented "Instruction LDUR not yet implemented."
	370 Move [X31+304], X8
	371 Move X8, [X31+56]
	372 Move [X31+18], V0
	373 Compare X8, 0
	374 JumpIfEqual {726}
	375 NotImplemented "Instruction LDUR not yet implemented."
	376 Move X3, [X8+48]
	377 Move X8, [X29+88]
	378 Move V1, [X31+18]
	379 Move X9, [X31+304]
	380 Move [X31+8], V0
	381 Move X0, [X31+40]
	382 Move X2, [X31+64]
	383 Move V0, [X31+52]
	384 Add X1, X31, 160
	385 Add X4, X31, 128
	386 Move [X31+144], X8
	387 Move [X31+10], V1
	388 Move [X31+176], X9
	389 Call Archetype.ValidateBounds, X0, X1, X2, X3, X4, V0
	390 Move TEMP, X0
	391 And TEMP, TEMP, 1
	392 Compare TEMP, 1
	393 JumpIfEqual {436}
	394 Move X0, X27
	395 Move X1, X31
	396 Call Component.get_gameObject, X0
	397 Move X8, 0x22EC000
	398 Move X8, [X8+1432]
	399 Move X20, X0
	400 Move X8, [X8]
	401 Move W9, [X8+224]
	402 Compare W9, 0
	403 JumpIfNotEqual {406}
	404 Move X0, X8
	405 Call 0x1C17DFC
	406 Move X0, X20
	407 Move X1, X31
	408 Call Object.DestroyImmediate, X0
	409 NotImplemented "Instruction CMP not yet implemented."
	410 Add W22, W22, 1
	411 NotImplemented "Instruction CMP not yet implemented."
	412 Add W25, W25, 1
	413 Move X0, X27
	414 Move X1, X31
	415 Call Component.get_gameObject, X0
	416 Move X8, 0x22EC000
	417 Move X8, [X8+1432]
	418 Move X20, X0
	419 Move X8, [X8]
	420 Move W9, [X8+224]
	421 Compare W9, 0
	422 JumpIfNotEqual {425}
	423 Move X0, X8
	424 Call 0x1C17DFC
	425 Move X0, X20
	426 Move X1, X31
	427 Call Object.DestroyImmediate, X0
	428 Add W25, W25, 1
	429 NotImplemented "Instruction CMP not yet implemented."
	430 Add W22, W22, 1
	431 NotImplemented "Instruction CMP not yet implemented."
	432 Move TEMP, X21
	433 And TEMP, TEMP, 1
	434 Compare TEMP, 1
	435 JumpIfEqual {116}
	436 Move X8, 0x22F2000
	437 Move X8, [X8+2648]
	438 Move X0, X28
	439 Move X2, X31
	440 Move X1, [X8]
	441 Call Object.set_name, X0, X1
	442 Move X8, [X31+32]
	443 Move X8, [X8]
	444 Compare X8, 0
	445 JumpIfEqual {726}
	446 Move X0, [X8+32]
	447 Move W25, [X31+16]
	448 Move X21, [X31+24]
	449 Compare X0, 0
	450 JumpIfEqual {726}
	451 Move X9, 0x22F2000
	452 Move W10, [X0+28]
	453 Move X8, [X0+16]
	454 Move X9, [X9+2584]
	455 Add W10, W10, 1
	456 Move X9, [X9]
	457 Move [X0+28], W10
	458 Compare X8, 0
	459 JumpIfEqual {726}
	460 NotImplemented "Instruction LDRSW not yet implemented."
	461 Move W11, [X8+24]
	462 NotImplemented "Instruction CMP not yet implemented."
	463 Add W9, W10, 1
	464 Add X8, X8, X10
	465 Move [X0+24], W9
	466 Move [X8+32], X27
	467 Move X8, [X9+32]
	468 Move X1, X27
	469 Move X8, [X8+192]
	470 Move X2, [X8+112]
	471 Call List`1<Object>.AddWithResize, X0, X1
	472 Move X8, 0x22EC000
	473 Move X8, [X8+1432]
	474 Move X0, [X8]
	475 Move W8, [X0+224]
	476 Compare W8, 0
	477 JumpIfNotEqual {479}
	478 Call 0x1C17DFC
	479 Move X0, X21
	480 Move X1, X31
	481 Move X2, X31
	482 Call Object.op_Equality, X0, X1
	483 NotImplemented "Instruction LDUR not yet implemented."
	484 Move X8, [X31+232]
	485 And W31, W0, 1
	486 Move X0, [X31+64]
	487 NotImplemented "Instruction CSEL not yet implemented."
	488 Move [X31+6], V0
	489 Move [X31+112], X8
	490 Compare X0, 0
	491 JumpIfEqual {726}
	492 Move V0, [X31+6]
	493 Move X8, [X31+112]
	494 Move X10, 0x22F2000
	495 Move [X31+16], V0
	496 Move [X31+272], X8
	497 Move W9, [X0+28]
	498 Move X8, [X0+16]
	499 Move X10, [X10+2592]
	500 Add W9, W9, 1
	501 Move X10, [X10]
	502 Move [X0+28], W9
	503 Compare X8, 0
	504 JumpIfEqual {726}
	505 NotImplemented "Instruction LDRSW not yet implemented."
	506 Move W11, [X8+24]
	507 NotImplemented "Instruction CMP not yet implemented."
	508 Add W10, W9, 1
	509 Move [X0+24], W10
	510 Move X10, [X31+272]
	511 Move V0, [X31+16]
	512 Move W11, 24
	513 NotImplemented "Instruction MADD not yet implemented."
	514 Move [X8+48], X10
	515 Move [X8+2], V0
	516 Move X8, [X10+32]
	517 Move V0, [X31+16]
	518 Move X9, [X31+272]
	519 Add X1, X31, 288
	520 Move X8, [X8+192]
	521 Move X2, [X8+112]
	522 Move [X31+18], V0
	523 Move [X31+304], X9
	524 Call List`1<Bounds>.AddWithResize, X0, X1
	525 Move X8, 0x22F2000
	526 Move X8, [X8+2616]
	527 Move X0, X24
	528 Move X1, X29
	529 Move X2, [X8]
	530 Call List`1<Object>.Remove, X0, X1
	531 Move X0, [X27+56]
	532 Compare X0, 0
	533 JumpIfEqual {726}
	534 Move X8, 0x22F2000
	535 Move X8, [X8+2600]
	536 Move X1, [X8]
	537 Add X8, X31, 288
	538 Call List`1<Object>.GetEnumerator, X0
	539 Move V0, [X31+18]
	540 Move X8, [X31+304]
	541 Move [X31+24], X21
	542 Move [X31+12], V0
	543 Move [X31+208], X8
	544 Move X8, 0x22F2000
	545 Move X8, [X8+2560]
	546 Move X1, [X8]
	547 Add X0, X31, 192
	548 Call Enumerator<Object>.MoveNext, X0
	549 Move TEMP, X0
	550 And TEMP, TEMP, 1
	551 Compare TEMP, 1
	552 JumpIfNotEqual {601}
	553 Move X20, [X31+208]
	554 NotImplemented "Instruction LDUR not yet implemented."
	555 Move X8, [X31+232]
	556 Move [X31+18], V0
	557 Move [X31+304], X8
	558 Compare X20, 0
	559 JumpIfEqual {611}
	560 Move X8, [X31+304]
	561 Move V0, [X31+18]
	562 Move [X20+88], X8
	563 Move [X20+72], V0
	564 Move X8, 0x22EC000
	565 Move X8, [X8+1432]
	566 Move X0, [X8]
	567 Move W8, [X0+224]
	568 Compare W8, 0
	569 JumpIfNotEqual {571}
	570 Call 0x1C17DFC
	571 Move X0, X20
	572 Move X1, X28
	573 Move X2, X31
	574 Call Object.op_Inequality, X0, X1
	575 Move TEMP, X0
	576 And TEMP, TEMP, 1
	577 Compare TEMP, 1
	578 JumpIfNotEqual {544}
	579 Move X9, 0x22F2000
	580 Move W10, [X24+28]
	581 Move X8, [X24+16]
	582 Move X9, [X9+2576]
	583 Add W10, W10, 1
	584 Move X9, [X9]
	585 Move [X24+28], W10
	586 Compare X8, 0
	587 JumpIfEqual {612}
	588 NotImplemented "Instruction LDRSW not yet implemented."
	589 Move W11, [X8+24]
	590 NotImplemented "Instruction CMP not yet implemented."
	591 Add W9, W10, 1
	592 Add X8, X8, X10
	593 Move [X24+24], W9
	594 Move [X8+32], X20
	595 Move X8, [X9+32]
	596 Move X8, [X8+192]
	597 Move X2, [X8+112]
	598 Move X0, X24
	599 Move X1, X20
	600 Call List`1<Object>.AddWithResize, X0, X1
	601 Move X8, 0x22F2000
	602 Move X8, [X8+2552]
	603 Add X0, X31, 192
	604 Move X1, [X8]
	605 Call Enumerator<Object>.Dispose, X0
	606 Move W8, [X31+20]
	607 Move W0, 1
	608 Add W8, W8, 1
	609 NotImplemented "Instruction CMP not yet implemented."
	610 NotImplemented "Instruction CSET not yet implemented."
	611 Call 0x1C17F20
	612 Call 0x1C17F20
	613 Move X20, X0
	614 NotImplemented "Instruction CMP not yet implemented."
	615 Move X0, X20
	616 Call 0x3EB2AD0
	617 Move X27, [X0]
	618 Call 0x3EB2AE0
	619 Move X8, 0x22F2000
	620 Move X8, [X8+2552]
	621 Add X0, X31, 192
	622 Move X1, [X8]
	623 Call Enumerator<Object>.Dispose, X0
	624 Move W25, [X31+16]
	625 Compare X27, 0
	626 JumpIfEqual {606}
	627 Move X0, X27
	628 Call 0x1C17F18
	629 Move W0, 1
	630 Move X19, [X31+32]
	631 Move X8, [X19]
	632 Compare X8, 0
	633 JumpIfEqual {726}
	634 Move X9, [X8+32]
	635 Compare X9, 0
	636 JumpIfEqual {726}
	637 Move W9, [X9+24]
	638 Subtract W20, W9, 1
	639 Move X22, 0x22F2000
	640 Move X23, 0x22F2000
	641 Move X22, [X22+2632]
	642 Move X23, [X23+2608]
	643 Move X0, [X8+32]
	644 Compare X0, 0
	645 JumpIfEqual {726}
	646 Move X2, [X22]
	647 Move W1, W20
	648 Call List`1<Object>.get_Item, X0, X1
	649 Compare X0, 0
	650 JumpIfEqual {726}
	651 Move X1, X31
	652 Call Component.get_gameObject, X0
	653 Move X8, 0x22EC000
	654 Move X8, [X8+1432]
	655 Move X21, X0
	656 Move X8, [X8]
	657 Move W9, [X8+224]
	658 Compare W9, 0
	659 JumpIfNotEqual {662}
	660 Move X0, X8
	661 Call 0x1C17DFC
	662 Move X0, X21
	663 Move X1, X31
	664 Call Object.DestroyImmediate, X0
	665 Move X8, [X19]
	666 Compare X8, 0
	667 JumpIfEqual {726}
	668 Move X0, [X8+32]
	669 Compare X0, 0
	670 JumpIfEqual {726}
	671 Move X2, [X23]
	672 Move W1, W20
	673 Call List`1<Object>.RemoveAt, X0, X1
	674 Subtract W20, W20, 1
	675 Move X8, [X19]
	676 Compare X8, 0
	677 JumpIfNotEqual {643}
	678 Move X19, [X31+32]
	679 Move X8, [X19]
	680 Compare X8, 0
	681 JumpIfEqual {726}
	682 Move X9, [X8+32]
	683 Compare X9, 0
	684 JumpIfEqual {726}
	685 Move W9, [X9+24]
	686 Subtract W20, W9, 1
	687 Move X22, 0x22F2000
	688 Move X23, 0x22F2000
	689 Move X22, [X22+2632]
	690 Move X23, [X23+2608]
	691 Move X0, [X8+32]
	692 Compare X0, 0
	693 JumpIfEqual {726}
	694 Move X2, [X22]
	695 Move W1, W20
	696 Call List`1<Object>.get_Item, X0, X1
	697 Compare X0, 0
	698 JumpIfEqual {726}
	699 Move X1, X31
	700 Call Component.get_gameObject, X0
	701 Move X8, 0x22EC000
	702 Move X8, [X8+1432]
	703 Move X21, X0
	704 Move X8, [X8]
	705 Move W9, [X8+224]
	706 Compare W9, 0
	707 JumpIfNotEqual {710}
	708 Move X0, X8
	709 Call 0x1C17DFC
	710 Move X0, X21
	711 Move X1, X31
	712 Call Object.DestroyImmediate, X0
	713 Move X8, [X19]
	714 Compare X8, 0
	715 JumpIfEqual {726}
	716 Move X0, [X8+32]
	717 Compare X0, 0
	718 JumpIfEqual {726}
	719 Move X2, [X23]
	720 Move W1, W20
	721 Call List`1<Object>.RemoveAt, X0, X1
	722 Subtract W20, W20, 1
	723 Move X8, [X19]
	724 Compare X8, 0
	725 JumpIfNotEqual {691}
	726 Call 0x1C17F20
	727 Move W0, W31
	728 Move X20, [X31+464]
	729 Move X19, [X31+472]
	730 Move X22, [X31+448]
	731 Move X21, [X31+456]
	732 Move X24, [X31+432]
	733 Move X23, [X31+440]
	734 Move X26, [X31+416]
	735 Move X25, [X31+424]
	736 Move X28, [X31+400]
	737 Move X27, [X31+408]
	738 Move X29, [X31+384]
	739 Move X30, [X31+392]
	740 Move D9, [X31+368]
	741 Move D8, [X31+376]
	742 Move D11, [X31+352]
	743 Move D10, [X31+360]
	744 Move D13, [X31+336]
	745 Move D12, [X31+344]
	746 Move D15, [X31+320]
	747 Move D14, [X31+328]
	748 Add X31, X31, 480
	749 Return X0
	750 Move X27, X31
	751 Move X20, X0
	752 Move X8, 0x22F2000
	753 Move X8, [X8+2552]
	754 Move X1, [X8]
	755 Add X0, X31, 192
	756 Call Enumerator<Object>.Dispose, X0
	757 Compare X27, 0
	758 JumpIfNotEqual {761}
	759 Move X0, X20
	760 Call 0x1D2D690
	761 Move X0, X27
	762 Call 0x1C17F18
	763 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x01E089DC LDR X8, [X19]
	0x01E089E0 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move X1, X31
	002 Call ForceNode..ctor, X0
	003 Return 

