Type: AnimalCompany.GameGen.SubGraphNode

Method: UnityEngine.Color get_NodeBackgroundColor()

Disassembly:
	0x01CF9F08 MOVZ W8, 0x1
	0x01CF9F0C STRB W8, [X19 + 0x442]
	0x01CF9F10 ADRP X8, 0x2254000
	0x01CF9F14 LDR X8, [X8 + 0x480]
	0x01CF9F18 LDR V4, [X31]
	0x01CF9F1C MOVI V2.2S, 0x3F, 0x18
	0x01CF9F20 FMOV S3, 0.5
	0x01CF9F24 LDR X8, [X8]
	0x01CF9F28 MOV V5.16B, V9.16B
	0x01CF9F2C MOV X0, X31
	0x01CF9F30 LDR X8, [X8 + 0xB8]
	0x01CF9F34 LDR V0, [X8 + 0x18]
	0x01CF9F38 LDR V1, [X8 + 0x20]
	0x00000000 INVALID
	0x01CF9F40 FMUL S1, S4, S1
	0x00000000 INVALID
	0x01CF9F48 FMUL S2, S1, S3
	0x01CF9F4C MOV S1, V0.S[1]
	0x01CF9F50 MOV V3.16B, V8.16B
	0x01CF9F54 BL 0x3A757BC
	0x01CF9F58 LDP X30, X19, [X31 + 0xA0]
	0x01CF9F5C LDP D9, D8, [X31 + 0x90]
	0x01CF9F60 ADD X31, X31, 0xB0
	0x01CF9F64 RET
	0x01CF9F68 BL 0x1B6EA1C
	0x01CF9F6C STP D13, D12, [X31 - 0x50]!
	0x01CF9F70 STP D11, D10, [X31 + 0x10]
	0x01CF9F74 STP D9, D8, [X31 + 0x20]
	0x01CF9F78 STR X30, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x252B000
	006 Move X19, 0x2258000
	007 Move W8, [X20+1798]
	008 Move X19, [X19+2616]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2258000
	014 Move X0, [X0+2616]
	015 Call 0x1B6F7F0
	016 Move W8, 1
	017 Move [X20+1798], W8
	018 Move X0, [X19]
	019 Add X1, X31, 0
	020 Move X2, X31
	021 Move [X31], X31
	022 Move [X31+8], X31
	023 Call ColorUtility.TryParseHtmlString, X0, X1
	024 Move S0, 1
	025 Move S1, 1
	026 Move S2, 1
	027 Move S3, 1
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {36}
	032 Move S0, [X31]
	033 Move S1, [X31+4]
	034 Move S2, [X31+8]
	035 Move S3, [X31+12]
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X30, [X31+16]
	039 Add X31, X31, 48
	040 Return X0

Method: UnityEngine.Color get_NodeLabelColor()

Disassembly:
	0x01CF9F7C STP X20, X19, [X31 + 0x40]
	0x01CF9F80 MOV X1, X31
	0x01CF9F84 MOV X19, X0
	0x01CF9F88 BL 0x3A9B084
	0x01CF9F8C CBZ X0, 0x1CFA024

ISIL:
	001 Move S0, W31
	002 Move S1, W31
	003 Move S2, W31
	004 Move S3, 1
	005 Return X0

Method: System.String get_NodeIcon()

Disassembly:
	0x01CF9F90 MOV X1, X31
	0x01CF9F94 BL 0x3AA7658
	0x01CF9F98 ADRP X20, 0x252A000
	0x01CF9F9C LDRB W8, [X20 + 0x442]
	0x01CF9FA0 MOV V8.16B, V0.16B
	0x01CF9FA4 MOV V9.16B, V1.16B
	0x01CF9FA8 MOV V10.16B, V2.16B
	0x01CF9FAC CBNZ W8, 0x1CF9FC4
	0x01CF9FB0 ADRP X0, 0x2254000
	0x01CF9FB4 LDR X0, [X0 + 0x480]
	0x01CF9FB8 BL 0x1B6E7F0
	0x01CF9FBC MOVZ W8, 0x1
	0x01CF9FC0 STRB W8, [X20 + 0x442]
	0x01CF9FC4 ADRP X8, 0x2254000
	0x01CF9FC8 LDR X8, [X8 + 0x480]
	0x01CF9FCC LDR W0, [X19 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x252B000
	005 Move X20, 0x2258000
	006 Move W8, [X19+1799]
	007 Move X20, [X20+2624]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2258000
	013 Move X0, [X0+2624]
	014 Call 0x1B6F7F0
	015 Move W8, 1
	016 Move [X19+1799], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return X0

Method: System.String get_NodeTitle()

Disassembly:
	0x01CF9FD0 LDR X8, [X8]
	0x01CF9FD4 LDR X8, [X8 + 0xB8]
	0x01CF9FD8 LDP S11, S12, [X8 + 0x18]
	0x01CF9FDC LDR V13, [X8 + 0x20]
	0x01CF9FE0 BL 0x1CF9C34
	0x01CF9FE4 FMUL S0, S11, S1
	0x01CF9FE8 FMUL S2, S12, S1
	0x01CF9FEC FMUL S1, S13, S1
	0x01CF9FF0 FMOV S3, 0.5
	0x01CF9FF4 FMUL S0, S0, S3
	0x01CF9FF8 FMUL S2, S2, S3
	0x01CF9FFC FMUL S3, S1, S3
	0x01CFA000 FADD S0, S8, S0
	0x01CFA004 FADD S1, S9, S2
	0x01CFA008 FADD S2, S10, S3
	0x01CFA00C LDP X20, X19, [X31 + 0x40]
	0x01CFA010 LDR X30, [X31 + 0x30]
	0x01CFA014 LDP D9, D8, [X31 + 0x20]
	0x01CFA018 LDP D11, D10, [X31 + 0x10]
	0x01CFA01C LDP D13, D12, [X31], #0x50
	0x01CFA020 RET
	0x01CFA024 BL 0x1B6EA1C
	0x01CFA028 MOVZ W8, 0x2
	0x01CFA02C MOV X1, X31
	0x01CFA030 STR W8, [X0 + 0x20]
	0x01CFA034 B 0x3A9EEE4
	0x01CFA038 STP X30, X19, [X31 - 0x10]!
	0x01CFA03C MOV X1, X31
	0x01CFA040 MOV X19, X0
	0x01CFA044 BL 0x3A9B084
	0x01CFA048 CBZ X0, 0x1CFA064
	0x01CFA04C MOV X1, X31
	0x01CFA050 BL 0x3AA7658
	0x01CFA054 STP S0, S1, [X19 + 0x28]
	0x01CFA058 STR S2, [X19 + 0x30]
	0x01CFA05C LDP X30, X19, [X31], #0x10
	0x01CFA060 RET
	0x01CFA064 BL 0x1B6EA1C
	0x01CFA068 STR D10, [X31 - 0x30]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x252B000
	006 Move X20, 0x2255000
	007 Move W8, [X21+1800]
	008 Move X20, [X20+1144]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2255000
	015 Move X0, [X0+1144]
	016 Call 0x1B6F7F0
	017 Move X0, 0x2258000
	018 Move X0, [X0+2632]
	019 Call 0x1B6F7F0
	020 Move W8, 1
	021 Move [X21+1800], W8
	022 Move X0, [X20]
	023 Move X20, [X19+40]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1B6F8F8
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Inequality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {46}
	036 Move X0, [X19+40]
	037 Compare X0, 0
	038 JumpIfEqual {54}
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X1, X31
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Call Object.get_name, X0
	045 Return X0
	046 Move X8, 0x2257000
	047 Move X8, [X8+2632]
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X0, [X8]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Return X0
	054 Call 0x1B6FA1C

Method: AnimalCompany.GameGen.NodeGenerationResponse Generate(AnimalCompany.GameGen.Socket source, AnimalCompany.GameGen.Generator generator)

Disassembly:
	0x01CFA06C STP D9, D8, [X31 + 0x10]
	0x01CFA070 STP X30, X19, [X31 + 0x20]
	0x01CFA074 MOV X19, X0
	0x01CFA078 MOV X0, X31
	0x01CFA07C BL 0x3A98DC0
	0x01CFA080 LDR V10, [X19 + 0x24]
	0x01CFA084 MOV X0, X19
	0x01CFA088 MOV X1, X31
	0x01CFA08C MOV V8.16B, V0.16B
	0x01CFA090 MOV V9.16B, V2.16B
	0x01CFA094 BL 0x3A9B084
	0x01CFA098 CBZ X0, 0x1CFA0CC
	0x01CFA09C MOV X1, X31
	0x01CFA0A0 FMUL S9, S9, S10
	0x01CFA0A4 FMUL S8, S8, S10
	0x01CFA0A8 BL 0x3AA7658
	0x01CFA0AC FADD S0, S8, S0
	0x01CFA0B0 FADD S2, S9, S2
	0x01CFA0B4 LDP X30, X19, [X31 + 0x20]
	0x01CFA0B8 LDP D9, D8, [X31 + 0x10]
	0x01CFA0BC FMOV S3, W31
	0x01CFA0C0 FADD S1, S1, S3
	0x01CFA0C4 LDR V10, [X31], #0x30
	0x01CFA0C8 RET
	0x01CFA0CC BL 0x1B6EA1C
	0x01CFA0D0 STP D13, D12, [X31 - 0x50]!
	0x01CFA0D4 STP D11, D10, [X31 + 0x10]
	0x01CFA0D8 STP D9, D8, [X31 + 0x20]
	0x01CFA0DC STR X30, [X31 + 0x30]
	0x01CFA0E0 STP X20, X19, [X31 + 0x40]
	0x01CFA0E4 ADRP X8, 0xFFFFFFFFFEDAF000
	0x01CFA0E8 ADRP X9, 0xFFFFFFFFFEDAF000
	0x01CFA0EC LDR V1, [X8 + 0x994]
	0x01CFA0F0 LDR V2, [X9 + 0xA28]
	0x01CFA0F4 MOV X19, X0
	0x01CFA0F8 FMOV S0, 1
	0x01CFA0FC FMOV S3, 1
	0x01CFA100 MOV X0, X31
	0x01CFA104 BL 0x3A75B14
	0x01CFA108 MOV X0, X31
	0x01CFA10C BL 0x3A75A90
	0x01CFA110 MOV X0, X31
	0x01CFA114 MOV V8.16B, V0.16B
	0x01CFA118 BL 0x3A75A90
	0x01CFA11C MOV X0, X31
	0x01CFA120 MOV V9.16B, V1.16B
	0x01CFA124 BL 0x3A75A90
	0x01CFA128 ADRP X8, 0xFFFFFFFFFEDAF000
	0x01CFA12C LDR V3, [X8 + 0xAB0]
	0x01CFA130 MOV V0.16B, V8.16B
	0x01CFA134 MOV V1.16B, V9.16B
	0x01CFA138 MOV X0, X31
	0x01CFA13C BL 0x3A75B14
	0x01CFA140 MOV X0, X19
	0x01CFA144 MOV X1, X31
	0x01CFA148 BL 0x3A9B084
	0x01CFA14C CBZ X0, 0x1CFA250
	0x01CFA150 MOV X1, X31
	0x01CFA154 BL 0x3AA7658
	0x01CFA158 MOV X0, X19
	0x01CFA15C MOV X1, X31
	0x01CFA160 MOV V8.16B, V0.16B
	0x01CFA164 MOV V9.16B, V1.16B
	0x01CFA168 MOV V10.16B, V2.16B
	0x01CFA16C BL 0x3A9B084
	0x01CFA170 CBZ X0, 0x1CFA250
	0x01CFA174 MOV X1, X31
	0x01CFA178 BL 0x3AA7658
	0x01CFA17C ADRP X20, 0x2529000
	0x01CFA180 LDRB W8, [X20 + 0x442]
	0x01CFA184 MOV V11.16B, V0.16B
	0x01CFA188 MOV V12.16B, V1.16B
	0x01CFA18C MOV V13.16B, V2.16B
	0x01CFA190 CBNZ W8, 0x1CFA1A8
	0x01CFA194 ADRP X0, 0x2253000
	0x01CFA198 LDR X0, [X0 + 0x480]
	0x01CFA19C BL 0x1B6E7F0
	0x01CFA1A0 MOVZ W8, 0x1
	0x01CFA1A4 STRB W8, [X20 + 0x442]
	0x01CFA1A8 ADRP X8, 0x2253000
	0x01CFA1AC LDR X8, [X8 + 0x480]
	0x01CFA1B0 MOV X0, X31
	0x01CFA1B4 LDR X8, [X8]
	0x01CFA1B8 LDR X8, [X8 + 0xB8]
	0x01CFA1BC LDP S0, S1, [X8 + 0x18]
	0x01CFA1C0 LDR V2, [X8 + 0x20]
	0x01CFA1C4 FADD S3, S11, S0
	0x01CFA1C8 FADD S4, S12, S1
	0x01CFA1CC FADD S5, S13, S2
	0x01CFA1D0 MOV V0.16B, V8.16B
	0x01CFA1D4 MOV V1.16B, V9.16B
	0x01CFA1D8 MOV V2.16B, V10.16B
	0x01CFA1DC BL 0x3A755E8
	0x01CFA1E0 MOV X0, X31
	0x01CFA1E4 BL 0x3A75A90
	0x01CFA1E8 MOV X0, X31
	0x01CFA1EC MOV V8.16B, V0.16B
	0x01CFA1F0 BL 0x3A75A90
	0x01CFA1F4 MOV X0, X31
	0x01CFA1F8 MOV V9.16B, V1.16B
	0x01CFA1FC BL 0x3A75A90
	0x01CFA200 ADRP X8, 0xFFFFFFFFFEDAF000
	0x01CFA204 LDR V3, [X8 + 0x9BC]
	0x01CFA208 MOV V0.16B, V8.16B
	0x01CFA20C MOV V1.16B, V9.16B
	0x01CFA210 MOV X0, X31
	0x01CFA214 BL 0x3A75B14
	0x01CFA218 MOV X0, X19
	0x01CFA21C MOV X1, X31
	0x01CFA220 BL 0x3A9B084
	0x01CFA224 CBZ X0, 0x1CFA250
	0x01CFA228 MOV X1, X31
	0x01CFA22C BL 0x3AA7658
	0x01CFA230 LDR V3, [X19 + 0x24]
	0x01CFA234 LDP X20, X19, [X31 + 0x40]
	0x01CFA238 LDR X30, [X31 + 0x30]
	0x01CFA23C LDP D9, D8, [X31 + 0x20]
	0x01CFA240 LDP D11, D10, [X31 + 0x10]
	0x01CFA244 MOV X0, X31
	0x01CFA248 LDP D13, D12, [X31], #0x50
	0x01CFA24C B 0x3A7567C
	0x01CFA250 BL 0x1B6EA1C
	0x01CFA254 STP D13, D12, [X31 - 0x50]!
	0x01CFA258 STP D11, D10, [X31 + 0x10]
	0x01CFA25C STP D9, D8, [X31 + 0x20]
	0x01CFA260 STR X30, [X31 + 0x30]
	0x01CFA264 STP X20, X19, [X31 + 0x40]
	0x01CFA268 ADRP X8, 0xFFFFFFFFFEDAF000
	0x01CFA26C ADRP X9, 0xFFFFFFFFFEDAF000
	0x01CFA270 LDR V1, [X8 + 0x994]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0x252A000
	011 Move X20, 0x2257000
	012 Move X19, X8
	013 Move W8, [X24+1801]
	014 Move X20, [X20+1832]
	015 Move X22, X2
	016 Move X23, X1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {51}
	022 Move X0, 0x2254000
	023 Move X0, [X0+2272]
	024 Call 0x1B6F7F0
	025 Move X0, 0x2257000
	026 Move X0, [X0+2640]
	027 Call 0x1B6F7F0
	028 Move X0, 0x2257000
	029 Move X0, [X0+1984]
	030 Call 0x1B6F7F0
	031 Move X0, 0x2257000
	032 Move X0, [X0+1992]
	033 Call 0x1B6F7F0
	034 Move X0, 0x2257000
	035 Move X0, [X0+2024]
	036 Call 0x1B6F7F0
	037 Move X0, 0x2257000
	038 Move X0, [X0+2040]
	039 Call 0x1B6F7F0
	040 Move X0, 0x2257000
	041 Move X0, [X0+1832]
	042 Call 0x1B6F7F0
	043 Move X0, 0x2257000
	044 Move X0, [X0+2648]
	045 Call 0x1B6F7F0
	046 Move X0, 0x2254000
	047 Move X0, [X0+3080]
	048 Call 0x1B6F7F0
	049 Move W8, 1
	050 Move [X24+1801], W8
	051 Move X0, [X20]
	052 Move [X31+11], W31
	053 Move [X31+8], W31
	054 Call 0x1B6FA0C
	055 Move X1, X31
	056 Move X20, X0
	057 Call NodeGenerationResult..ctor, X0
	058 Compare X20, 0
	059 JumpIfEqual {147}
	060 Move X8, 0x2257000
	061 Move X8, [X8+2640]
	062 Move [X20+16], X21
	063 Move X25, [X21+40]
	064 Move X0, [X8]
	065 Call 0x1B6FA0C
	066 Move X1, X25
	067 Move X2, X31
	068 Move X24, X0
	069 Call Generator..ctor, X0, X1
	070 Compare X24, 0
	071 JumpIfEqual {147}
	072 Move X0, X24
	073 Move X1, X23
	074 Move X2, X22
	075 Move X3, X31
	076 Call Generator.GenerateAsSubNode, X0, X1, X2
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {126}
	081 Move X8, 0x2257000
	082 Move X8, [X8+2024]
	083 Move X0, [X8]
	084 Call 0x1B6FA0C
	085 Move X8, 0x2257000
	086 Move X8, [X8+1984]
	087 Move X22, X0
	088 Move X1, [X8]
	089 Call List`1<Bounds>..ctor, X0
	090 Move X8, 0x2257000
	091 Move X8, [X8+2040]
	092 Move X0, [X8]
	093 Call 0x1B6FA0C
	094 Move X8, 0x2257000
	095 Move X8, [X8+1992]
	096 Move X23, X0
	097 Move X1, [X8]
	098 Call List`1<Object>..ctor, X0
	099 Move X0, [X21+40]
	100 Compare X0, 0
	101 JumpIfEqual {147}
	102 Move X1, X31
	103 Call Object.get_name, X0
	104 Move X8, 0x2254000
	105 Move X8, [X8+3080]
	106 Move X9, 0x2257000
	107 Move X9, [X9+2648]
	108 Move X1, X0
	109 Move X8, [X8]
	110 Move X3, X31
	111 Move X2, [X9]
	112 Move X0, X8
	113 Call String.Concat, X0, X1, X2
	114 Move X8, 0x2254000
	115 Move X8, [X8+2272]
	116 Move X21, X0
	117 Move X8, [X8]
	118 Move X0, X8
	119 Call 0x1B6FA0C
	120 Move X1, X21
	121 Move X2, X31
	122 Move X24, X0
	123 Call GameObject..ctor, X0, X1
	124 Move W8, 1
	125 Move [X20+24], X24
	126 Move W8, W31
	127 Move X23, X31
	128 Move X22, X31
	129 Move [X19], W8
	130 NotImplemented "Instruction LDUR not yet implemented."
	131 Move W9, [X31+8]
	132 Move [X19+8], X23
	133 Move [X19+16], X22
	134 Move [X19+24], X20
	135 Move [X19+4], W8
	136 Move [X19+1], W9
	137 Move X20, [X31+64]
	138 Move X19, [X31+72]
	139 Move X22, [X31+48]
	140 Move X21, [X31+56]
	141 Move X24, [X31+32]
	142 Move X23, [X31+40]
	143 Move X30, [X31+16]
	144 Move X25, [X31+24]
	145 Add X31, X31, 80
	146 Return X0
	147 Call 0x1B6FA1C

Method: System.Void .ctor()

Disassembly:
	0x01CFA274 LDR V2, [X9 + 0xA28]
	0x01CFA278 MOV X19, X0

ISIL:
	001 Move X1, X31
	002 Call ForceNode..ctor, X0
	003 Return 

