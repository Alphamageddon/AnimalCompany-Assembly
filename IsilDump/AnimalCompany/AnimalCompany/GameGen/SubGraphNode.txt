Type: AnimalCompany.GameGen.SubGraphNode

Method: UnityEngine.Color get_NodeBackgroundColor()

Disassembly:
	0x01E0D40C MOV X0, X31
	0x01E0D410 LDR X8, [X8 + 0xB8]
	0x01E0D414 LDR V0, [X8 + 0x18]
	0x01E0D418 LDR V1, [X8 + 0x20]
	0x00000000 INVALID
	0x01E0D420 FMUL S1, S4, S1
	0x00000000 INVALID
	0x01E0D428 FMUL S2, S1, S3
	0x01E0D42C MOV S1, V0.S[1]
	0x01E0D430 MOV V3.16B, V8.16B
	0x01E0D434 BL 0x3C0CCD8
	0x01E0D438 LDP X30, X19, [X31 + 0xA0]
	0x01E0D43C LDP D9, D8, [X31 + 0x90]
	0x01E0D440 ADD X31, X31, 0xB0
	0x01E0D444 RET
	0x01E0D448 BL 0x1C16F20
	0x01E0D44C SUB X31, X31, 0xB0
	0x01E0D450 STP D9, D8, [X31 + 0x90]
	0x01E0D454 STP X30, X19, [X31 + 0xA0]
	0x01E0D458 MOV X19, X0
	0x01E0D45C FMOV S0, 1
	0x01E0D460 FMOV S1, 1
	0x01E0D464 FMOV S2, 1
	0x01E0D468 FMOV S3, 1
	0x01E0D46C MOV X0, X31
	0x01E0D470 BL 0x3C0D030
	0x01E0D474 LDR W0, [X19 + 0x20]
	0x01E0D478 BL 0x1E0D204
	0x01E0D47C MOV X0, X19

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x25CC000
	006 Move X19, 0x22ED000
	007 Move W8, [X20+3529]
	008 Move X19, [X19+3360]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x22ED000
	014 Move X0, [X0+3360]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+3529], W8
	018 Move X0, [X19]
	019 Add X1, X31, 0
	020 Move X2, X31
	021 Move [X31], X31
	022 Move [X31+8], X31
	023 Call ColorUtility.TryParseHtmlString, X0, X1
	024 Move S0, 1
	025 Move S1, 1
	026 Move S2, 1
	027 Move S3, 1
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {36}
	032 Move S0, [X31]
	033 Move S1, [X31+4]
	034 Move S2, [X31+8]
	035 Move S3, [X31+12]
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X30, [X31+16]
	039 Add X31, X31, 48
	040 Return X0

Method: UnityEngine.Color get_NodeLabelColor()

Disassembly:
	0x01E0D480 MOV X1, X31
	0x01E0D484 MOV V8.16B, V0.16B
	0x01E0D488 STR D1, [X31]
	0x01E0D48C MOV V9.16B, V2.16B
	0x01E0D490 BL 0x3C32E90

ISIL:
	001 Move S0, W31
	002 Move S1, W31
	003 Move S2, W31
	004 Move S3, 1
	005 Return X0

Method: System.String get_NodeIcon()

Disassembly:
	0x01E0D494 CBZ X0, 0x1E0D538
	0x01E0D498 ADD X8, X31, 0x50
	0x01E0D49C MOV X1, X31
	0x01E0D4A0 BL 0x3C3F1C8
	0x01E0D4A4 LDP V0, V1, [X31 + 0x50]
	0x01E0D4A8 LDP V2, V3, [X31 + 0x70]
	0x01E0D4AC ADD X0, X31, 0x10
	0x01E0D4B0 MOV X1, X31
	0x01E0D4B4 STP V0, V1, [X31 + 0x10]
	0x01E0D4B8 STP V2, V3, [X31 + 0x30]
	0x01E0D4BC BL 0x3C0D150
	0x01E0D4C0 ADRP X19, 0x25CB000
	0x01E0D4C4 LDRB W8, [X19 + 0x786]
	0x01E0D4C8 CBNZ W8, 0x1E0D4E0
	0x01E0D4CC ADRP X0, 0x22E6000
	0x01E0D4D0 LDR X0, [X0 + 0x5A0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x25CC000
	005 Move X20, 0x22ED000
	006 Move W8, [X19+3530]
	007 Move X20, [X20+3368]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22ED000
	013 Move X0, [X0+3368]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3530], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return X0

Method: System.String get_NodeTitle()

Disassembly:
	0x01E0D4D4 BL 0x1C16CF4
	0x01E0D4D8 MOVZ W8, 0x1
	0x01E0D4DC STRB W8, [X19 + 0x786]
	0x01E0D4E0 ADRP X8, 0x22E6000
	0x01E0D4E4 LDR X8, [X8 + 0x5A0]
	0x01E0D4E8 LDR V4, [X31]
	0x01E0D4EC MOVI V2.2S, 0x3F, 0x18
	0x01E0D4F0 FMOV S3, 0.5
	0x01E0D4F4 LDR X8, [X8]
	0x01E0D4F8 MOV V5.16B, V9.16B
	0x01E0D4FC MOV X0, X31
	0x01E0D500 LDR X8, [X8 + 0xB8]
	0x01E0D504 LDR V0, [X8 + 0x18]
	0x01E0D508 LDR V1, [X8 + 0x20]
	0x00000000 INVALID
	0x01E0D510 FMUL S1, S4, S1
	0x00000000 INVALID
	0x01E0D518 FMUL S2, S1, S3
	0x01E0D51C MOV S1, V0.S[1]
	0x01E0D520 MOV V3.16B, V8.16B
	0x01E0D524 BL 0x3C0CCD8
	0x01E0D528 LDP X30, X19, [X31 + 0xA0]
	0x01E0D52C LDP D9, D8, [X31 + 0x90]
	0x01E0D530 ADD X31, X31, 0xB0
	0x01E0D534 RET
	0x01E0D538 BL 0x1C16F20
	0x01E0D53C STP D13, D12, [X31 - 0x50]!
	0x01E0D540 STP D11, D10, [X31 + 0x10]
	0x01E0D544 STP D9, D8, [X31 + 0x20]
	0x01E0D548 STR X30, [X31 + 0x30]
	0x01E0D54C STP X20, X19, [X31 + 0x40]
	0x01E0D550 MOV X1, X31
	0x01E0D554 MOV X19, X0
	0x01E0D558 BL 0x3C32E90
	0x01E0D55C CBZ X0, 0x1E0D5F4
	0x01E0D560 MOV X1, X31
	0x01E0D564 BL 0x3C3F58C
	0x01E0D568 ADRP X20, 0x25CB000
	0x01E0D56C LDRB W8, [X20 + 0x786]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x25CC000
	006 Move X20, 0x22E7000
	007 Move W8, [X21+3531]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x22E7000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x22ED000
	018 Move X0, [X0+3376]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3531], W8
	022 Move X0, [X20]
	023 Move X20, [X19+56]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Inequality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {46}
	036 Move X0, [X19+56]
	037 Compare X0, 0
	038 JumpIfEqual {54}
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X1, X31
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Call Object.get_name, X0
	045 Return X0
	046 Move X8, 0x22ED000
	047 Move X8, [X8+3376]
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X0, [X8]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Return X0
	054 Call 0x1C17F20

Method: AnimalCompany.GameGen.NodeGenerationResponse Generate(AnimalCompany.GameGen.Socket source, AnimalCompany.GameGen.Generator generator)

Disassembly:
	0x01E0D570 MOV V8.16B, V0.16B
	0x01E0D574 MOV V9.16B, V1.16B
	0x01E0D578 MOV V10.16B, V2.16B
	0x01E0D57C CBNZ W8, 0x1E0D594
	0x01E0D580 ADRP X0, 0x22E6000
	0x01E0D584 LDR X0, [X0 + 0x5A0]
	0x01E0D588 BL 0x1C16CF4
	0x01E0D58C MOVZ W8, 0x1
	0x01E0D590 STRB W8, [X20 + 0x786]
	0x01E0D594 ADRP X8, 0x22E6000
	0x01E0D598 LDR X8, [X8 + 0x5A0]
	0x01E0D59C LDR W0, [X19 + 0x20]
	0x01E0D5A0 LDR X8, [X8]
	0x01E0D5A4 LDR X8, [X8 + 0xB8]
	0x01E0D5A8 LDP S11, S12, [X8 + 0x18]
	0x01E0D5AC LDR V13, [X8 + 0x20]
	0x01E0D5B0 BL 0x1E0D204
	0x01E0D5B4 FMUL S0, S11, S1
	0x01E0D5B8 FMUL S2, S12, S1
	0x01E0D5BC FMUL S1, S13, S1
	0x01E0D5C0 FMOV S3, 0.5
	0x01E0D5C4 FMUL S0, S0, S3
	0x01E0D5C8 FMUL S2, S2, S3
	0x01E0D5CC FMUL S3, S1, S3
	0x01E0D5D0 FADD S0, S8, S0
	0x01E0D5D4 FADD S1, S9, S2
	0x01E0D5D8 FADD S2, S10, S3
	0x01E0D5DC LDP X20, X19, [X31 + 0x40]
	0x01E0D5E0 LDR X30, [X31 + 0x30]
	0x01E0D5E4 LDP D9, D8, [X31 + 0x20]
	0x01E0D5E8 LDP D11, D10, [X31 + 0x10]
	0x01E0D5EC LDP D13, D12, [X31], #0x50
	0x01E0D5F0 RET
	0x01E0D5F4 BL 0x1C16F20
	0x01E0D5F8 MOVZ W8, 0x2
	0x01E0D5FC MOV X1, X31
	0x01E0D600 STR W8, [X0 + 0x20]
	0x01E0D604 B 0x3C36C30
	0x01E0D608 STP X30, X19, [X31 - 0x10]!
	0x01E0D60C MOV X1, X31
	0x01E0D610 MOV X19, X0
	0x01E0D614 BL 0x3C32E90
	0x01E0D618 CBZ X0, 0x1E0D634
	0x01E0D61C MOV X1, X31
	0x01E0D620 BL 0x3C3F58C
	0x01E0D624 STP S0, S1, [X19 + 0x28]
	0x01E0D628 STR S2, [X19 + 0x30]
	0x01E0D62C LDP X30, X19, [X31], #0x10
	0x01E0D630 RET
	0x01E0D634 BL 0x1C16F20
	0x01E0D638 STR D10, [X31 - 0x30]!
	0x01E0D63C STP D9, D8, [X31 + 0x10]
	0x01E0D640 STP X30, X19, [X31 + 0x20]
	0x01E0D644 MOV X19, X0
	0x01E0D648 MOV X0, X31
	0x01E0D64C BL 0x3C30A58
	0x01E0D650 LDR V10, [X19 + 0x24]
	0x01E0D654 MOV X0, X19
	0x01E0D658 MOV X1, X31
	0x01E0D65C MOV V8.16B, V0.16B
	0x01E0D660 MOV V9.16B, V2.16B
	0x01E0D664 BL 0x3C32E90
	0x01E0D668 CBZ X0, 0x1E0D69C
	0x01E0D66C MOV X1, X31
	0x01E0D670 FMUL S9, S9, S10
	0x01E0D674 FMUL S8, S8, S10
	0x01E0D678 BL 0x3C3F58C
	0x01E0D67C FADD S0, S8, S0
	0x01E0D680 FADD S2, S9, S2
	0x01E0D684 LDP X30, X19, [X31 + 0x20]
	0x01E0D688 LDP D9, D8, [X31 + 0x10]
	0x01E0D68C FMOV S3, W31
	0x01E0D690 FADD S1, S1, S3
	0x01E0D694 LDR V10, [X31], #0x30
	0x01E0D698 RET
	0x01E0D69C BL 0x1C16F20
	0x01E0D6A0 STP D13, D12, [X31 - 0x50]!
	0x01E0D6A4 STP D11, D10, [X31 + 0x10]
	0x01E0D6A8 STP D9, D8, [X31 + 0x20]
	0x01E0D6AC STR X30, [X31 + 0x30]
	0x01E0D6B0 STP X20, X19, [X31 + 0x40]
	0x01E0D6B4 ADRP X8, 0xFFFFFFFFFECDC000
	0x01E0D6B8 ADRP X9, 0xFFFFFFFFFECDD000
	0x01E0D6BC LDR V1, [X8 + 0xF90]
	0x01E0D6C0 LDR V2, [X9 + 0x30]
	0x01E0D6C4 MOV X19, X0
	0x01E0D6C8 FMOV S0, 1
	0x01E0D6CC FMOV S3, 1
	0x01E0D6D0 MOV X0, X31
	0x01E0D6D4 BL 0x3C0D030
	0x01E0D6D8 MOV X0, X31
	0x01E0D6DC BL 0x3C0CFAC
	0x01E0D6E0 MOV X0, X31
	0x01E0D6E4 MOV V8.16B, V0.16B
	0x01E0D6E8 BL 0x3C0CFAC
	0x01E0D6EC MOV X0, X31
	0x01E0D6F0 MOV V9.16B, V1.16B
	0x01E0D6F4 BL 0x3C0CFAC
	0x01E0D6F8 ADRP X8, 0xFFFFFFFFFECDD000
	0x01E0D6FC LDR V3, [X8 + 0xBC]
	0x01E0D700 MOV V0.16B, V8.16B
	0x01E0D704 MOV V1.16B, V9.16B
	0x01E0D708 MOV X0, X31
	0x01E0D70C BL 0x3C0D030
	0x01E0D710 MOV X0, X19
	0x01E0D714 MOV X1, X31
	0x01E0D718 BL 0x3C32E90
	0x01E0D71C CBZ X0, 0x1E0D820
	0x01E0D720 MOV X1, X31
	0x01E0D724 BL 0x3C3F58C
	0x01E0D728 MOV X0, X19
	0x01E0D72C MOV X1, X31
	0x01E0D730 MOV V8.16B, V0.16B
	0x01E0D734 MOV V9.16B, V1.16B
	0x01E0D738 MOV V10.16B, V2.16B
	0x01E0D73C BL 0x3C32E90
	0x01E0D740 CBZ X0, 0x1E0D820
	0x01E0D744 MOV X1, X31
	0x01E0D748 BL 0x3C3F58C
	0x01E0D74C ADRP X20, 0x25CB000
	0x01E0D750 LDRB W8, [X20 + 0x786]
	0x01E0D754 MOV V11.16B, V0.16B
	0x01E0D758 MOV V12.16B, V1.16B
	0x01E0D75C MOV V13.16B, V2.16B
	0x01E0D760 CBNZ W8, 0x1E0D778
	0x01E0D764 ADRP X0, 0x22E6000
	0x01E0D768 LDR X0, [X0 + 0x5A0]
	0x01E0D76C BL 0x1C16CF4
	0x01E0D770 MOVZ W8, 0x1
	0x01E0D774 STRB W8, [X20 + 0x786]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0x25CC000
	011 Move X20, 0x22ED000
	012 Move X19, X8
	013 Move W8, [X24+3532]
	014 Move X20, [X20+2544]
	015 Move X22, X2
	016 Move X23, X1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {51}
	022 Move X0, 0x22E7000
	023 Move X0, [X0+2648]
	024 Call 0x1C17CF4
	025 Move X0, 0x22ED000
	026 Move X0, [X0+3384]
	027 Call 0x1C17CF4
	028 Move X0, 0x22ED000
	029 Move X0, [X0+2744]
	030 Call 0x1C17CF4
	031 Move X0, 0x22ED000
	032 Move X0, [X0+2752]
	033 Call 0x1C17CF4
	034 Move X0, 0x22ED000
	035 Move X0, [X0+2768]
	036 Call 0x1C17CF4
	037 Move X0, 0x22ED000
	038 Move X0, [X0+2784]
	039 Call 0x1C17CF4
	040 Move X0, 0x22ED000
	041 Move X0, [X0+2544]
	042 Call 0x1C17CF4
	043 Move X0, 0x22ED000
	044 Move X0, [X0+3392]
	045 Call 0x1C17CF4
	046 Move X0, 0x22E7000
	047 Move X0, [X0+3784]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X24+3532], W8
	051 Move X0, [X20]
	052 Move [X31+11], W31
	053 Move [X31+8], W31
	054 Call 0x1C17F10
	055 Move X1, X31
	056 Move X20, X0
	057 Call NodeGenerationResult..ctor, X0
	058 Compare X20, 0
	059 JumpIfEqual {147}
	060 Move X8, 0x22ED000
	061 Move X8, [X8+3384]
	062 Move [X20+16], X21
	063 Move X25, [X21+56]
	064 Move X0, [X8]
	065 Call 0x1C17F10
	066 Move X1, X25
	067 Move X2, X31
	068 Move X24, X0
	069 Call Generator..ctor, X0, X1
	070 Compare X24, 0
	071 JumpIfEqual {147}
	072 Move X0, X24
	073 Move X1, X23
	074 Move X2, X22
	075 Move X3, X31
	076 Call Generator.GenerateAsSubNode, X0, X1, X2
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {126}
	081 Move X8, 0x22ED000
	082 Move X8, [X8+2768]
	083 Move X0, [X8]
	084 Call 0x1C17F10
	085 Move X8, 0x22ED000
	086 Move X8, [X8+2744]
	087 Move X22, X0
	088 Move X1, [X8]
	089 Call List`1<Bounds>..ctor, X0
	090 Move X8, 0x22ED000
	091 Move X8, [X8+2784]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X8, 0x22ED000
	095 Move X8, [X8+2752]
	096 Move X23, X0
	097 Move X1, [X8]
	098 Call List`1<Object>..ctor, X0
	099 Move X0, [X21+56]
	100 Compare X0, 0
	101 JumpIfEqual {147}
	102 Move X1, X31
	103 Call Object.get_name, X0
	104 Move X8, 0x22E7000
	105 Move X8, [X8+3784]
	106 Move X9, 0x22ED000
	107 Move X9, [X9+3392]
	108 Move X1, X0
	109 Move X8, [X8]
	110 Move X3, X31
	111 Move X2, [X9]
	112 Move X0, X8
	113 Call String.Concat, X0, X1, X2
	114 Move X8, 0x22E7000
	115 Move X8, [X8+2648]
	116 Move X21, X0
	117 Move X8, [X8]
	118 Move X0, X8
	119 Call 0x1C17F10
	120 Move X1, X21
	121 Move X2, X31
	122 Move X24, X0
	123 Call GameObject..ctor, X0, X1
	124 Move W8, 1
	125 Move [X20+24], X24
	126 Move W8, W31
	127 Move X23, X31
	128 Move X22, X31
	129 Move [X19], W8
	130 NotImplemented "Instruction LDUR not yet implemented."
	131 Move W9, [X31+8]
	132 Move [X19+8], X23
	133 Move [X19+16], X22
	134 Move [X19+24], X20
	135 Move [X19+4], W8
	136 Move [X19+1], W9
	137 Move X20, [X31+64]
	138 Move X19, [X31+72]
	139 Move X22, [X31+48]
	140 Move X21, [X31+56]
	141 Move X24, [X31+32]
	142 Move X23, [X31+40]
	143 Move X30, [X31+16]
	144 Move X25, [X31+24]
	145 Add X31, X31, 80
	146 Return X0
	147 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01E0D778 ADRP X8, 0x22E6000
	0x01E0D77C LDR X8, [X8 + 0x5A0]

ISIL:
	001 Move X1, X31
	002 Call ForceNode..ctor, X0
	003 Return 

