Type: AnimalCompany.GameGen.GenEntry

Method: UnityEngine.Color get_NodeBackgroundColor()

Disassembly:
	0x01E0A058 LDR W10, [X21 + 0x1C]
	0x01E0A05C LDP X1, X2, [X31 + 0x40]
	0x01E0A060 LDR X8, [X21 + 0x10]
	0x01E0A064 LDR X9, [X27]
	0x01E0A068 ADD W10, W10, 0x1
	0x01E0A06C STR W10, [X21 + 0x1C]

ISIL:
	001 Move X8, -20049920
	002 Move V2, [X8+280]
	003 Move S0, W31
	004 Move S1, 1
	005 Move S3, 1
	006 Return X0

Method: UnityEngine.Color get_NodeLabelColor()

Disassembly:
	0x01E0A070 CBZ X8, 0x1E0A344
	0x01E0A074 LDRSW X10, [X21 + 0x18]
	0x01E0A078 LDR W11, [X8 + 0x18]
	0x01E0A07C ADRP X23, 0x22EF000
	0x01E0A080 LDR X23, [X23 + 0xB98]

ISIL:
	001 Move S0, W31
	002 Move S1, W31
	003 Move S2, W31
	004 Move S3, 1
	005 Return X0

Method: System.String get_NodeTitle()

Disassembly:
	0x01E0A084 CMP W10, W11
	0x01E0A088 B.CS 0x1E0A0A0
	0x01E0A08C ADD W9, W10, 0x1
	0x01E0A090 ADD X8, X8, X10, 0x4, LSL
	0x01E0A094 STR W9, [X21 + 0x18]
	0x01E0A098 STP X1, X2, [X8 + 0x20]
	0x01E0A09C B 0x1E0A0B4
	0x01E0A0A0 LDR X8, [X9 + 0x20]
	0x01E0A0A4 MOV X0, X21
	0x01E0A0A8 LDR X8, [X8 + 0xC0]
	0x01E0A0AC LDR X3, [X8 + 0x70]
	0x01E0A0B0 BL 0x2F49F80
	0x01E0A0B4 LDR X3, [X28]
	0x01E0A0B8 MOV X0, X19
	0x01E0A0BC MOV X1, X20
	0x01E0A0C0 MOV X2, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x25CF000
	005 Move X20, 0x22F0000
	006 Move W8, [X19+3503]
	007 Move X20, [X20+2848]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22F0000
	013 Move X0, [X0+2848]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3503], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return X0

Method: System.String get_NodeIcon()

Disassembly:
	0x01E0A0C4 BL 0x2AA5098
	0x01E0A0C8 LDR X0, [X23]
	0x01E0A0CC MOV X1, X31
	0x01E0A0D0 BL 0x338C698
	0x01E0A0D4 LDR X8, [X26]
	0x01E0A0D8 MOV X20, X0
	0x01E0A0DC MOV X0, X8
	0x01E0A0E0 BL 0x1C16F10
	0x01E0A0E4 LDR X1, [X25]
	0x01E0A0E8 MOV X21, X0
	0x01E0A0EC BL 0x2F49774
	0x01E0A0F0 LDR X0, [X29]
	0x01E0A0F4 MOV X1, X31
	0x01E0A0F8 BL 0x338C698
	0x01E0A0FC LDR X1, [X24]
	0x01E0A100 LDR X3, [X22]
	0x01E0A104 MOV X2, X0
	0x01E0A108 ADD X0, X31, 0x30
	0x01E0A10C STP X31, X31, [X31 + 0x30]
	0x01E0A110 BL 0x27ABC80
	0x01E0A114 CBZ X21, 0x1E0A344
	0x01E0A118 LDR W10, [X21 + 0x1C]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x25CF000
	005 Move X19, 0x22F0000
	006 Move W8, [X20+3504]
	007 Move X19, [X19+2696]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22F0000
	013 Move X0, [X0+2696]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3504], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+32]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void .ctor()

Disassembly:
	0x01E0A11C LDP X1, X2, [X31 + 0x30]
	0x01E0A120 LDR X9, [X27]
	0x01E0A124 ADRP X24, 0x22EF000
	0x01E0A128 ADD W10, W10, 0x1

ISIL:
	001 Move W8, 0x3F800000
	002 Move X1, X31
	003 Move [X0+44], W8
	004 Call ForceNode..ctor, X0
	005 Return 

