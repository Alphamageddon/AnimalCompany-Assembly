Type: AnimalCompany.GameGen.ItemPoint

Method: System.Void OnDrawGizmos()

Disassembly:
	0x01CFAD88 CBZ X8, 0x1CFB3F4
	0x01CFAD8C LDR X0, [X8 + 0x50]
	0x01CFAD90 CBZ X0, 0x1CFB3F4
	0x01CFAD94 MOV X1, X31
	0x01CFAD98 MOV V14.16B, V0.16B
	0x01CFAD9C MOV V13.16B, V1.16B
	0x01CFADA0 MOV V12.16B, V2.16B
	0x01CFADA4 MOV V15.16B, V3.16B
	0x01CFADA8 STP S10, S9, [X31 + 0x18]
	0x01CFADAC STR S8, [X31 + 0x1E8]
	0x01CFADB0 BL 0x3A9B084
	0x01CFADB4 CBZ X0, 0x1CFB3F4
	0x01CFADB8 MOV X1, X31
	0x01CFADBC BL 0x3AA5FBC
	0x01CFADC0 MOV X0, X19
	0x01CFADC4 MOV X1, X31
	0x01CFADC8 MOV V10.16B, V0.16B
	0x01CFADCC MOV V9.16B, V1.16B
	0x01CFADD0 MOV V8.16B, V2.16B
	0x01CFADD4 MOV V11.16B, V3.16B
	0x01CFADD8 BL 0x3A9B084
	0x01CFADDC CBZ X0, 0x1CFB3F4
	0x01CFADE0 FMUL S0, S15, S10
	0x01CFADE4 FMUL S1, S14, S11
	0x01CFADE8 FMUL S4, S15, S9
	0x01CFADEC FMUL S5, S13, S11
	0x01CFADF0 FMUL S17, S14, S10
	0x01CFADF4 FMUL S20, S15, S8
	0x01CFADF8 FMUL S21, S15, S11
	0x01CFADFC FMUL S22, S12, S11
	0x01CFAE00 FMUL S2, S13, S8
	0x01CFAE04 FMUL S6, S12, S10
	0x01CFAE08 FMUL S16, S14, S9
	0x01CFAE0C FMUL S19, S13, S9
	0x01CFAE10 FADD S0, S0, S1
	0x01CFAE14 FADD S1, S4, S5
	0x01CFAE18 FADD S4, S20, S22
	0x01CFAE1C FSUB S5, S21, S17
	0x01CFAE20 FMUL S3, S12, S9
	0x01CFAE24 FMUL S7, S14, S8
	0x01CFAE28 FMUL S18, S13, S10
	0x01CFAE2C FMUL S23, S12, S8
	0x01CFAE30 FADD S0, S2, S0
	0x01CFAE34 FADD S1, S6, S1
	0x01CFAE38 FADD S2, S16, S4
	0x01CFAE3C FSUB S4, S5, S19
	0x01CFAE40 MOV X1, X31
	0x01CFAE44 FSUB S15, S0, S3
	0x01CFAE48 FSUB S14, S1, S7
	0x01CFAE4C FSUB S13, S2, S18
	0x01CFAE50 FSUB S12, S4, S23
	0x01CFAE54 BL 0x3AA7658
	0x01CFAE58 LDR V3, [X31 + 0x1E8]
	0x01CFAE5C ADRP X21, 0x2529000
	0x01CFAE60 LDRB W8, [X21 + 0x456]
	0x01CFAE64 FADD S10, S3, S0
	0x01CFAE68 LDR V0, [X31 + 0x1C]
	0x01CFAE6C FADD S9, S0, S1
	0x01CFAE70 LDR V0, [X31 + 0x18]
	0x01CFAE74 FADD S8, S0, S2
	0x01CFAE78 CBNZ W8, 0x1CFAE90

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+144], D9
	003 Move [X31+152], D8
	004 Move [X31+160], X30
	005 Move [X31+168], X19
	006 Move X8, -19202048
	007 Move V3, [X8+2736]
	008 Move X19, X0
	009 Move S0, 1
	010 Move S1, 1
	011 Move S2, 1
	012 Move X0, X31
	013 Call Gizmos.set_color, X0
	014 Move W0, [X19+32]
	015 Call ItemPointSizeUtil.GetSize, X0
	016 Move X0, X19
	017 Move X1, X31
	018 Move V8, V0
	019 Move [X31], D1
	020 Move V9, V2
	021 Call Component.get_transform, X0
	022 Compare X0, 0
	023 JumpIfEqual {71}
	024 Add X8, X31, 80
	025 Move X1, X31
	026 Call Transform.get_localToWorldMatrix, X0
	027 Move V0, [X31+80]
	028 Move V1, [X31+96]
	029 Move V2, [X31+112]
	030 Move V3, [X31+128]
	031 Add X0, X31, 16
	032 Move X1, X31
	033 Move [X31+16], V0
	034 Move [X31+24], V1
	035 Move [X31+48], V2
	036 Move [X31+56], V3
	037 Call Gizmos.set_matrix, X0
	038 Move X19, 0x252A000
	039 Move W8, [X19+1090]
	040 Compare W8, 0
	041 JumpIfNotEqual {47}
	042 Move X0, 0x2254000
	043 Move X0, [X0+1152]
	044 Call 0x1B6F7F0
	045 Move W8, 1
	046 Move [X19+1090], W8
	047 Move X8, 0x2254000
	048 Move X8, [X8+1152]
	049 Move V4, [X31]
	050 NotImplemented "Instruction MOVI not yet implemented."
	051 Move S3, 0.5
	052 Move X8, [X8]
	053 Move V5, V9
	054 Move X0, X31
	055 Move X8, [X8+184]
	056 Move V0, [X8+24]
	057 Move V1, [X8+32]
	058 NotImplemented "Instruction INVALID not yet implemented."
	059 Multiply S1, S4, S1
	060 NotImplemented "Instruction INVALID not yet implemented."
	061 Multiply S2, S1, S3
	062 Move S1, V0.S[1]
	063 Move V3, V8
	064 Call Gizmos.DrawWireCube, X0, X1
	065 Move X30, [X31+160]
	066 Move X19, [X31+168]
	067 Move D9, [X31+144]
	068 Move D8, [X31+152]
	069 Add X31, X31, 176
	070 Return 
	071 Call 0x1B6FA1C

Method: System.Void OnDrawGizmosSelected()

Disassembly:
	0x01CFAE7C ADRP X0, 0x2253000
	0x01CFAE80 LDR X0, [X0 + 0x480]
	0x01CFAE84 BL 0x1B6E7F0
	0x01CFAE88 MOVZ W8, 0x1
	0x01CFAE8C STRB W8, [X21 + 0x456]
	0x01CFAE90 ADRP X8, 0x2253000
	0x01CFAE94 LDR X8, [X8 + 0x480]
	0x01CFAE98 MOV V1.16B, V9.16B
	0x01CFAE9C MOV V2.16B, V8.16B
	0x01CFAEA0 MOV V3.16B, V15.16B
	0x01CFAEA4 LDR X8, [X8]
	0x01CFAEA8 MOV V4.16B, V14.16B
	0x01CFAEAC MOV V5.16B, V13.16B
	0x01CFAEB0 MOV V6.16B, V12.16B
	0x01CFAEB4 LDR X8, [X8 + 0xB8]
	0x01CFAEB8 MOV X0, X31
	0x01CFAEBC LDR V0, [X8 + 0x14]
	0x01CFAEC0 LDUR X9, [X8 + 0xC]
	0x01CFAEC4 ADD X8, X31, 0x160
	0x01CFAEC8 STR S0, [X31 + 0x8]
	0x01CFAECC MOV V0.16B, V10.16B
	0x01CFAED0 STR X9, [X31]
	0x01CFAED4 BL 0x3A8F354
	0x01CFAED8 LDP V0, V1, [X31 + 0x160]
	0x01CFAEDC LDP V2, V3, [X31 + 0x180]
	0x01CFAEE0 ADD X0, X31, 0xA0
	0x01CFAEE4 MOV X1, X31
	0x01CFAEE8 STP V0, V1, [X31 + 0xA0]
	0x01CFAEEC STP V2, V3, [X31 + 0xC0]
	0x01CFAEF0 BL 0x3A75C34
	0x01CFAEF4 LDR X8, [X22]
	0x01CFAEF8 CBZ X8, 0x1CFB3F4
	0x01CFAEFC LDR V8, [X31 + 0x1EC]
	0x01CFAF00 LDR X0, [X8 + 0x50]
	0x01CFAF04 MOV W1, W20
	0x01CFAF08 MOV V0.16B, V8.16B
	0x01CFAF0C BL 0x1CFB3F8
	0x01CFAF10 LDR X8, [X22]
	0x01CFAF14 CBZ X8, 0x1CFB3F4
	0x01CFAF18 LDR X0, [X23]
	0x01CFAF1C LDR X20, [X8 + 0x58]
	0x01CFAF20 LDR W9, [X0 + 0xE0]
	0x01CFAF24 CBNZ W9, 0x1CFAF2C
	0x01CFAF28 BL 0x1B6E8F8
	0x01CFAF2C MOV X0, X20
	0x01CFAF30 MOV X1, X31
	0x01CFAF34 MOV X2, X31
	0x01CFAF38 BL 0x3A9D6EC
	0x01CFAF3C TBZ X0, 0x0, 0x1CFB170
	0x01CFAF40 LDR W21, [X19 + 0x28]
	0x01CFAF44 FMOV S1, 1
	0x01CFAF48 FMOV S2, W31
	0x01CFAF4C MOV V3.16B, V8.16B
	0x01CFAF50 CMP W21, 0x3
	0x01CFAF54 FCSEL S0, S2, S1, CC
	0x01CFAF58 FCSEL S1, S1, S2, CC
	0x01CFAF5C MOV V2.16B, V1.16B
	0x01CFAF60 MOV X0, X31
	0x01CFAF64 BL 0x3A75B14
	0x01CFAF68 LDR X0, [X19 + 0x20]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+144], D9
	003 Move [X31+152], D8
	004 Move [X31+160], X30
	005 Move [X31+168], X19
	006 Move X19, X0
	007 Move S0, 1
	008 Move S1, 1
	009 Move S2, 1
	010 Move S3, 1
	011 Move X0, X31
	012 Call Gizmos.set_color, X0
	013 Move W0, [X19+32]
	014 Call ItemPointSizeUtil.GetSize, X0
	015 Move X0, X19
	016 Move X1, X31
	017 Move V8, V0
	018 Move [X31], D1
	019 Move V9, V2
	020 Call Component.get_transform, X0
	021 Compare X0, 0
	022 JumpIfEqual {70}
	023 Add X8, X31, 80
	024 Move X1, X31
	025 Call Transform.get_localToWorldMatrix, X0
	026 Move V0, [X31+80]
	027 Move V1, [X31+96]
	028 Move V2, [X31+112]
	029 Move V3, [X31+128]
	030 Add X0, X31, 16
	031 Move X1, X31
	032 Move [X31+16], V0
	033 Move [X31+24], V1
	034 Move [X31+48], V2
	035 Move [X31+56], V3
	036 Call Gizmos.set_matrix, X0
	037 Move X19, 0x252A000
	038 Move W8, [X19+1090]
	039 Compare W8, 0
	040 JumpIfNotEqual {46}
	041 Move X0, 0x2254000
	042 Move X0, [X0+1152]
	043 Call 0x1B6F7F0
	044 Move W8, 1
	045 Move [X19+1090], W8
	046 Move X8, 0x2254000
	047 Move X8, [X8+1152]
	048 Move V4, [X31]
	049 NotImplemented "Instruction MOVI not yet implemented."
	050 Move S3, 0.5
	051 Move X8, [X8]
	052 Move V5, V9
	053 Move X0, X31
	054 Move X8, [X8+184]
	055 Move V0, [X8+24]
	056 Move V1, [X8+32]
	057 NotImplemented "Instruction INVALID not yet implemented."
	058 Multiply S1, S4, S1
	059 NotImplemented "Instruction INVALID not yet implemented."
	060 Multiply S2, S1, S3
	061 Move S1, V0.S[1]
	062 Move V3, V8
	063 Call Gizmos.DrawWireCube, X0, X1
	064 Move X30, [X31+160]
	065 Move X19, [X31+168]
	066 Move D9, [X31+144]
	067 Move D8, [X31+152]
	068 Add X31, X31, 176
	069 Return 
	070 Call 0x1B6FA1C

Method: UnityEngine.Vector3 GetCenterPosition()

Disassembly:
	0x01CFAF6C CBZ X0, 0x1CFB3F4
	0x01CFAF70 MOV X1, X31
	0x01CFAF74 BL 0x3A9B084
	0x01CFAF78 LDR X8, [X22]
	0x01CFAF7C CBZ X8, 0x1CFB3F4
	0x01CFAF80 MOV X20, X0
	0x01CFAF84 LDR X0, [X8 + 0x58]
	0x01CFAF88 CBZ X0, 0x1CFB3F4
	0x01CFAF8C MOV X1, X31
	0x01CFAF90 BL 0x3A9B084
	0x01CFAF94 CBZ X0, 0x1CFB3F4
	0x01CFAF98 MOV X1, X31
	0x01CFAF9C BL 0x3AA7658
	0x01CFAFA0 CBZ X20, 0x1CFB3F4
	0x01CFAFA4 MOV X0, X20
	0x01CFAFA8 MOV X1, X31
	0x01CFAFAC BL 0x3AA8C24
	0x01CFAFB0 LDR X0, [X22]
	0x01CFAFB4 CBZ X0, 0x1CFB3F4
	0x01CFAFB8 MOV X1, X31
	0x01CFAFBC MOV V8.16B, V0.16B
	0x01CFAFC0 MOV V9.16B, V1.16B
	0x01CFAFC4 MOV V10.16B, V2.16B
	0x01CFAFC8 BL 0x3A9B084
	0x01CFAFCC CBZ X0, 0x1CFB3F4
	0x01CFAFD0 MOV X1, X31
	0x01CFAFD4 BL 0x3AA5FBC
	0x01CFAFD8 MOV X0, X31
	0x01CFAFDC BL 0x3A925C8
	0x01CFAFE0 LDR X8, [X22]
	0x01CFAFE4 CBZ X8, 0x1CFB3F4
	0x01CFAFE8 LDR X0, [X8 + 0x58]
	0x01CFAFEC CBZ X0, 0x1CFB3F4
	0x01CFAFF0 MOV X1, X31
	0x01CFAFF4 MOV V14.16B, V0.16B
	0x01CFAFF8 MOV V13.16B, V1.16B
	0x01CFAFFC MOV V12.16B, V2.16B
	0x01CFB000 MOV V15.16B, V3.16B
	0x01CFB004 STP S10, S9, [X31 + 0x18]
	0x01CFB008 STR S8, [X31 + 0x1E8]
	0x01CFB00C BL 0x3A9B084
	0x01CFB010 CBZ X0, 0x1CFB3F4
	0x01CFB014 MOV X1, X31
	0x01CFB018 BL 0x3AA5FBC
	0x01CFB01C MOV X0, X19
	0x01CFB020 MOV X1, X31
	0x01CFB024 MOV V10.16B, V0.16B

ISIL:
	001 Move [X31-80], D13
	002 Move [X31-72], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X1, X31
	011 Move X19, X0
	012 Call Component.get_transform, X0
	013 Compare X0, 0
	014 JumpIfEqual {58}
	015 Move X1, X31
	016 Call Transform.get_position, X0
	017 Move X20, 0x252A000
	018 Move W8, [X20+1090]
	019 Move V8, V0
	020 Move V9, V1
	021 Move V10, V2
	022 Compare W8, 0
	023 JumpIfNotEqual {29}
	024 Move X0, 0x2254000
	025 Move X0, [X0+1152]
	026 Call 0x1B6F7F0
	027 Move W8, 1
	028 Move [X20+1090], W8
	029 Move X8, 0x2254000
	030 Move X8, [X8+1152]
	031 Move W0, [X19+32]
	032 Move X8, [X8]
	033 Move X8, [X8+184]
	034 Move S11, [X8+24]
	035 Move S12, [X8+28]
	036 Move V13, [X8+32]
	037 Call ItemPointSizeUtil.GetSize, X0
	038 Multiply S0, S11, S1
	039 Multiply S2, S12, S1
	040 Multiply S1, S13, S1
	041 Move S3, 0.5
	042 Multiply S0, S0, S3
	043 Multiply S2, S2, S3
	044 Multiply S3, S1, S3
	045 Add S0, S8, S0
	046 Add S1, S9, S2
	047 Add S2, S10, S3
	048 Move X20, [X31+64]
	049 Move X19, [X31+72]
	050 Move X30, [X31+48]
	051 Move D9, [X31+32]
	052 Move D8, [X31+40]
	053 Move D11, [X31+16]
	054 Move D10, [X31+24]
	055 Move D13, [X31+80]
	056 Move D12, [X31+88]
	057 Return X0
	058 Call 0x1B6FA1C

Method: System.Void .ctor()

Disassembly:
	0x01CFB028 MOV V9.16B, V1.16B
	0x01CFB02C MOV V8.16B, V2.16B
	0x01CFB030 MOV V11.16B, V3.16B
	0x01CFB034 BL 0x3A9B084

ISIL:
	001 Move W8, 2
	002 Move X1, X31
	003 Move [X0+32], W8
	004 Call MonoBehaviour..ctor, X0
	005 Return 

