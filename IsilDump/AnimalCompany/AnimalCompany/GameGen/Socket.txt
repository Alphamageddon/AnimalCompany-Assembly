Type: AnimalCompany.GameGen.Socket

Method: System.Boolean get_isOpen()

Disassembly:
	0x01CFCF68 MOV X20, X0
	0x01CFCF6C BL 0x2E45D4C

ISIL:
	001 Move W0, [X0+80]
	002 Return X0

Method: System.Void set_isOpen(System.Boolean value)

Disassembly:
	0x01CFCF70 STR X20, [X19 + 0x28]
	0x01CFCF74 LDR X0, [X22]
	0x01CFCF78 BL 0x1B6EA0C

ISIL:
	001 And W8, W1, 1
	002 Move [X0+80], W8
	003 Return 

Method: System.Void SetOpen(System.Boolean open)

Disassembly:
	0x01CFCF7C LDR X1, [X21]
	0x01CFCF80 MOV X20, X0
	0x01CFCF84 BL 0x2E45D4C
	0x01CFCF88 STR X20, [X19 + 0x30]
	0x01CFCF8C MOV X0, X19
	0x01CFCF90 LDP X20, X19, [X31 + 0x40]
	0x01CFCF94 LDP X22, X21, [X31 + 0x30]
	0x01CFCF98 LDP X24, X23, [X31 + 0x20]
	0x01CFCF9C LDP X26, X25, [X31 + 0x10]
	0x01CFCFA0 MOV X1, X31
	0x01CFCFA4 LDR X30, [X31], #0x50
	0x01CFCFA8 B 0x32276F8
	0x01CFCFAC STR X30, [X31 - 0x50]!
	0x01CFCFB0 STP X26, X25, [X31 + 0x10]
	0x01CFCFB4 STP X24, X23, [X31 + 0x20]
	0x01CFCFB8 STP X22, X21, [X31 + 0x30]
	0x01CFCFBC STP X20, X19, [X31 + 0x40]
	0x01CFCFC0 ADRP X25, 0x2527000
	0x01CFCFC4 ADRP X26, 0x2254000
	0x01CFCFC8 ADRP X20, 0x2254000
	0x01CFCFCC ADRP X24, 0x2254000
	0x01CFCFD0 ADRP X23, 0x2254000
	0x01CFCFD4 ADRP X22, 0x2254000
	0x01CFCFD8 ADRP X21, 0x2254000
	0x01CFCFDC LDR X26, [X26 + 0xB98]
	0x01CFCFE0 LDRB W8, [X25 + 0x721]
	0x01CFCFE4 LDR X20, [X20 + 0xBA0]
	0x01CFCFE8 LDR X24, [X24 + 0xBA8]
	0x01CFCFEC LDR X23, [X23 + 0xBB0]
	0x01CFCFF0 LDR X22, [X22 + 0xBB8]
	0x01CFCFF4 LDR X21, [X21 + 0xBC0]
	0x01CFCFF8 MOV X19, X0
	0x01CFCFFC TBNZ X8, 0x0, 0x1CFD050
	0x01CFD000 ADRP X0, 0x2253000
	0x01CFD004 LDR X0, [X0 + 0xBA0]
	0x01CFD008 BL 0x1B6E7F0
	0x01CFD00C ADRP X0, 0x2253000
	0x01CFD010 LDR X0, [X0 + 0xB98]
	0x01CFD014 BL 0x1B6E7F0
	0x01CFD018 ADRP X0, 0x2253000
	0x01CFD01C LDR X0, [X0 + 0xBB0]
	0x01CFD020 BL 0x1B6E7F0
	0x01CFD024 ADRP X0, 0x2253000
	0x01CFD028 LDR X0, [X0 + 0xBC0]
	0x01CFD02C BL 0x1B6E7F0
	0x01CFD030 ADRP X0, 0x2253000
	0x01CFD034 LDR X0, [X0 + 0xBB8]
	0x01CFD038 BL 0x1B6E7F0
	0x01CFD03C ADRP X0, 0x2253000
	0x01CFD040 LDR X0, [X0 + 0xBA8]
	0x01CFD044 BL 0x1B6E7F0
	0x01CFD048 MOVZ W8, 0x1
	0x01CFD04C STRB W8, [X25 + 0x721]
	0x01CFD050 LDR X0, [X26]
	0x01CFD054 BL 0x1B6EA0C
	0x01CFD058 LDR X1, [X20]
	0x01CFD05C MOV X20, X0
	0x01CFD060 BL 0x28F9A14
	0x01CFD064 STR X20, [X19 + 0x10]
	0x01CFD068 LDR X0, [X24]
	0x01CFD06C BL 0x1B6EA0C
	0x01CFD070 LDR X1, [X23]
	0x01CFD074 MOV X20, X0
	0x01CFD078 BL 0x2E45D4C
	0x01CFD07C STR X20, [X19 + 0x18]
	0x01CFD080 LDR X0, [X22]
	0x01CFD084 BL 0x1B6EA0C
	0x01CFD088 LDR X1, [X21]
	0x01CFD08C MOV X20, X0
	0x01CFD090 BL 0x2E37774
	0x01CFD094 STR X20, [X19 + 0x20]
	0x01CFD098 MOV X0, X19
	0x01CFD09C LDP X20, X19, [X31 + 0x40]
	0x01CFD0A0 LDP X22, X21, [X31 + 0x30]
	0x01CFD0A4 LDP X24, X23, [X31 + 0x20]
	0x01CFD0A8 LDP X26, X25, [X31 + 0x10]
	0x01CFD0AC MOV X1, X31
	0x01CFD0B0 LDR X30, [X31], #0x50
	0x01CFD0B4 B 0x32276F8
	0x01CFD0B8 LDR X8, [X0 + 0x10]
	0x01CFD0BC CMP X8, 0x0
	0x01CFD0C0 CSEL X0, X0, X8, EQ
	0x01CFD0C4 RET
	0x01CFD0C8 LDR X0, [X0 + 0x38]
	0x01CFD0CC RET
	0x01CFD0D0 STR X1, [X0 + 0x38]
	0x01CFD0D4 RET
	0x01CFD0D8 STP X30, X23, [X31 - 0x30]!
	0x01CFD0DC STP X22, X21, [X31 + 0x10]
	0x01CFD0E0 STP X20, X19, [X31 + 0x20]
	0x01CFD0E4 ADRP X22, 0x2526000
	0x01CFD0E8 ADRP X23, 0x2253000
	0x01CFD0EC ADRP X21, 0x2253000
	0x01CFD0F0 LDRB W8, [X22 + 0x722]
	0x01CFD0F4 LDR X23, [X23 + 0x7E8]
	0x01CFD0F8 LDR X21, [X21 + 0x7C0]
	0x01CFD0FC MOV X20, X1
	0x01CFD100 MOV X19, X0
	0x01CFD104 TBNZ X8, 0x0, 0x1CFD128
	0x01CFD108 ADRP X0, 0x2253000
	0x01CFD10C LDR X0, [X0 + 0x7C0]
	0x01CFD110 BL 0x1B6E7F0
	0x01CFD114 ADRP X0, 0x2253000
	0x01CFD118 LDR X0, [X0 + 0x7E8]
	0x01CFD11C BL 0x1B6E7F0
	0x01CFD120 MOVZ W8, 0x1
	0x01CFD124 STRB W8, [X22 + 0x722]
	0x01CFD128 LDR X0, [X23]
	0x01CFD12C BL 0x1B6EA0C
	0x01CFD130 LDR X1, [X21]
	0x01CFD134 MOV X21, X0
	0x01CFD138 BL 0x2D8CF60
	0x01CFD13C MOV X0, X19
	0x01CFD140 MOV X1, X31
	0x01CFD144 STR X21, [X19 + 0x30]
	0x01CFD148 BL 0x32276F8
	0x01CFD14C STR X20, [X19 + 0x18]
	0x01CFD150 CBZ X20, 0x1CFD16C
	0x01CFD154 LDR W8, [X20 + 0x2C]
	0x01CFD158 LDP X22, X21, [X31 + 0x10]
	0x01CFD15C STR W8, [X19 + 0x24]
	0x01CFD160 LDP X20, X19, [X31 + 0x20]
	0x01CFD164 LDP X30, X23, [X31], #0x30
	0x01CFD168 RET
	0x01CFD16C BL 0x1B6EA1C
	0x01CFD170 SUB X31, X31, 0xC0
	0x01CFD174 STR D14, [X31 + 0x60]
	0x01CFD178 STP D13, D12, [X31 + 0x70]
	0x01CFD17C STP D11, D10, [X31 + 0x80]
	0x01CFD180 STP D9, D8, [X31 + 0x90]
	0x01CFD184 STP X30, X21, [X31 + 0xA0]
	0x01CFD188 STP X20, X19, [X31 + 0xB0]
	0x01CFD18C ADRP X21, 0x2526000
	0x01CFD190 LDRB W9, [X21 + 0x723]
	0x01CFD194 MOV X20, X0
	0x01CFD198 MOV X19, X8
	0x01CFD19C TBNZ X9, 0x0, 0x1CFD1D8
	0x01CFD1A0 ADRP X0, 0x2253000
	0x01CFD1A4 LDR X0, [X0 + 0x830]
	0x01CFD1A8 BL 0x1B6E7F0
	0x01CFD1AC ADRP X0, 0x2253000
	0x01CFD1B0 LDR X0, [X0 + 0x838]
	0x01CFD1B4 BL 0x1B6E7F0
	0x01CFD1B8 ADRP X0, 0x2253000
	0x01CFD1BC LDR X0, [X0 + 0x840]
	0x01CFD1C0 BL 0x1B6E7F0
	0x01CFD1C4 ADRP X0, 0x2253000
	0x01CFD1C8 LDR X0, [X0 + 0x848]
	0x01CFD1CC BL 0x1B6E7F0
	0x01CFD1D0 MOVZ W8, 0x1
	0x01CFD1D4 STRB W8, [X21 + 0x723]
	0x01CFD1D8 ADRP X21, 0x2526000
	0x01CFD1DC LDRB W8, [X21 + 0x43F]
	0x01CFD1E0 MOVI V0.2D, 0x0
	0x01CFD1E4 STR X31, [X31 + 0x50]
	0x01CFD1E8 STP V0, V0, [X31 + 0x30]
	0x01CFD1EC CBNZ W8, 0x1CFD204
	0x01CFD1F0 ADRP X0, 0x2250000
	0x01CFD1F4 LDR X0, [X0 + 0x480]
	0x01CFD1F8 BL 0x1B6E7F0
	0x01CFD1FC MOVZ W8, 0x1
	0x01CFD200 STRB W8, [X21 + 0x43F]
	0x01CFD204 LDR X0, [X20 + 0x30]
	0x01CFD208 CBZ X0, 0x1CFD3B4
	0x01CFD20C ADRP X8, 0x2250000

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X21, 0x2528000
	011 Move W8, [X21+1814]
	012 Move W20, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {38}
	018 Move X0, 0x2255000
	019 Move X0, [X0+2808]
	020 Call 0x1B6F7F0
	021 Move X0, 0x2255000
	022 Move X0, [X0+2816]
	023 Call 0x1B6F7F0
	024 Move X0, 0x2255000
	025 Move X0, [X0+2824]
	026 Call 0x1B6F7F0
	027 Move X0, 0x2255000
	028 Move X0, [X0+2832]
	029 Call 0x1B6F7F0
	030 Move X0, 0x2255000
	031 Move X0, [X0+2504]
	032 Call 0x1B6F7F0
	033 Move X0, 0x2255000
	034 Move X0, [X0+2512]
	035 Call 0x1B6F7F0
	036 Move W8, 1
	037 Move [X21+1814], W8
	038 Move [X31+32], X31
	039 Move [X31+40], X31
	040 Move [X31+48], X31
	041 Move X0, [X19+40]
	042 And W8, W20, 1
	043 Move [X19+80], W8
	044 Compare X0, 0
	045 JumpIfEqual {139}
	046 Move X25, 0x2254000
	047 Move X25, [X25+2832]
	048 Move X24, 0x2254000
	049 Move X23, 0x2254000
	050 Add X8, X31, 8
	051 Move X1, [X25]
	052 Move X24, [X24+2816]
	053 Move X23, [X23+2808]
	054 Call List`1<Object>.GetEnumerator, X0
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 Move X8, [X31+24]
	057 Move [X31+2], V0
	058 Move [X31+48], X8
	059 Move X1, [X24]
	060 Add X0, X31, 32
	061 Call Enumerator<Object>.MoveNext, X0
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {72}
	066 Move X0, [X31+48]
	067 Compare X0, 0
	068 JumpIfEqual {137}
	069 Move W1, W31
	070 Move X2, X31
	071 Call GameObject.SetActive, X0, X1
	072 Move X1, [X23]
	073 Add X0, X31, 32
	074 Call Enumerator<Object>.Dispose, X0
	075 Move X0, [X19+48]
	076 Compare X0, 0
	077 JumpIfEqual {139}
	078 Move X1, [X25]
	079 Add X8, X31, 8
	080 Call List`1<Object>.GetEnumerator, X0
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 Move X8, [X31+24]
	083 Move [X31+2], V0
	084 Move [X31+48], X8
	085 Move X1, [X24]
	086 Add X0, X31, 32
	087 Call Enumerator<Object>.MoveNext, X0
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {98}
	092 Move X0, [X31+48]
	093 Compare X0, 0
	094 JumpIfEqual {138}
	095 Move W1, W31
	096 Move X2, X31
	097 Call GameObject.SetActive, X0, X1
	098 Move X1, [X23]
	099 Add X0, X31, 32
	100 Call Enumerator<Object>.Dispose, X0
	101 Move TEMP, X20
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {108}
	105 Move X19, [X19+40]
	106 Compare X19, 0
	107 JumpIfNotEqual {111}
	108 Move X19, [X19+48]
	109 Compare X19, 0
	110 JumpIfEqual {139}
	111 Move W1, [X19+24]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move W0, W31
	114 Move X2, X31
	115 Call Random.Range, X0, X1
	116 Move X8, 0x2254000
	117 Move X8, [X8+2512]
	118 Move W1, W0
	119 Move X0, X19
	120 Move X2, [X8]
	121 Call List`1<Object>.get_Item, X0, X1
	122 Compare X0, 0
	123 JumpIfEqual {139}
	124 Move W1, 1
	125 Move X2, X31
	126 Call GameObject.SetActive, X0, X1
	127 Move X20, [X31+112]
	128 Move X19, [X31+120]
	129 Move X22, [X31+96]
	130 Move X21, [X31+104]
	131 Move X24, [X31+80]
	132 Move X23, [X31+88]
	133 Move X30, [X31+64]
	134 Move X25, [X31+72]
	135 Add X31, X31, 128
	136 Return 
	137 Call 0x1B6FA1C
	138 Call 0x1B6FA1C
	139 Call 0x1B6FA1C
	140 Move X21, X0
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X0, X21
	143 Call 0x3D1A840
	144 Move X22, [X0]
	145 Call 0x3D1A850
	146 Move X1, [X23]
	147 Add X0, X31, 32
	148 Call Enumerator<Object>.Dispose, X0
	149 Compare X22, 0
	150 JumpIfEqual {101}
	151 Move X22, X31
	152 Move X21, X0
	153 Move X1, [X23]
	154 Add X0, X31, 32
	155 Call Enumerator<Object>.Dispose, X0
	156 Compare X22, 0
	157 JumpIfEqual {180}
	158 Move X0, X22
	159 Call 0x1B6FA14
	160 Move X21, X0
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X0, X21
	163 Call 0x3D1A840
	164 Move X22, [X0]
	165 Call 0x3D1A850
	166 Move X1, [X23]
	167 Add X0, X31, 32
	168 Call Enumerator<Object>.Dispose, X0
	169 Compare X22, 0
	170 JumpIfEqual {75}
	171 Move X0, X22
	172 Call 0x1B6FA14
	173 Move X22, X31
	174 Move X21, X0
	175 Move X1, [X23]
	176 Add X0, X31, 32
	177 Call Enumerator<Object>.Dispose, X0
	178 Compare X22, 0
	179 JumpIfNotEqual {182}
	180 Move X0, X21
	181 Call 0x1C8518C
	182 Move X0, X22
	183 Call 0x1B6FA14
	184 Call 0x18F56A8

Method: System.Void OnDrawGizmos()

Disassembly:
	0x01CFD210 LDR X8, [X8 + 0x480]
	0x01CFD214 ADRP X9, 0x2253000
	0x01CFD218 ADRP X21, 0x2253000

ISIL:
	001 Move X8, -19214336
	002 Move V0, [X8+3376]

Method: System.Void OnDrawGizmosSelected()

Disassembly:
	0x01CFD3D8 LDR X8, [X8 + 0x830]
	0x01CFD3DC ADD X0, X31, 0x30

ISIL:
	001 Move S0, 1
	002 Call Socket.DrawGizmoInternal, X0, V0
	003 Return 

Method: System.Void DrawGizmoInternal(System.Single opacity)

Disassembly:
	0x01CFD21C ADRP X20, 0x2253000
	0x01CFD220 LDR X8, [X8]
	0x01CFD224 LDR X9, [X9 + 0x848]
	0x01CFD228 FMOV S8, 0.5
	0x01CFD22C LDR X8, [X8 + 0xB8]
	0x01CFD230 LDR X21, [X21 + 0x838]
	0x01CFD234 LDR X20, [X20 + 0x830]
	0x01CFD238 LDR X1, [X9]
	0x01CFD23C LDP S12, S10, [X8 + 0x4]
	0x01CFD240 LDR V14, [X8]
	0x01CFD244 ADD X8, X31, 0x8
	0x01CFD248 FMUL S9, S10, S8
	0x01CFD24C FMUL S11, S12, S8
	0x01CFD250 FMUL S13, S14, S8
	0x01CFD254 BL 0x2D8E68C
	0x01CFD258 LDUR V0, [X31 + 0x8]
	0x01CFD25C LDUR V1, [X31 + 0x18]
	0x01CFD260 LDR X8, [X31 + 0x28]
	0x01CFD264 STP V0, V1, [X31 + 0x30]
	0x01CFD268 STR X8, [X31 + 0x50]
	0x01CFD26C LDR X1, [X21]
	0x01CFD270 ADD X0, X31, 0x30
	0x01CFD274 BL 0x2A079C8
	0x01CFD278 TBZ X0, 0x0, 0x1CFD37C
	0x01CFD27C LDP S0, S1, [X31 + 0x40]
	0x01CFD280 LDP S2, S3, [X31 + 0x48]
	0x01CFD284 LDP S4, S5, [X31 + 0x50]
	0x01CFD288 FSUB S6, S14, S13
	0x01CFD28C FSUB S7, S12, S11
	0x01CFD290 FSUB S20, S0, S3
	0x01CFD294 FSUB S21, S1, S4
	0x01CFD298 FCMP S6, S20
	0x01CFD29C FSUB S16, S10, S9
	0x01CFD2A0 FSUB S22, S2, S5
	0x01CFD2A4 FADD S0, S0, S3
	0x01CFD2A8 FCSEL S3, S6, S20, MI
	0x01CFD2AC FCMP S7, S21
	0x01CFD2B0 FADD S17, S13, S14
	0x01CFD2B4 FADD S1, S1, S4
	0x01CFD2B8 FCSEL S4, S7, S21, MI
	0x01CFD2BC FCMP S16, S22
	0x01CFD2C0 FADD S18, S11, S12
	0x01CFD2C4 FADD S2, S2, S5
	0x01CFD2C8 FCSEL S5, S16, S22, MI
	0x01CFD2CC FCMP S17, S20
	0x01CFD2D0 FADD S19, S9, S10
	0x01CFD2D4 FCSEL S6, S17, S20, GT
	0x01CFD2D8 FCMP S18, S21
	0x01CFD2DC FCSEL S7, S18, S21, GT
	0x01CFD2E0 FCMP S19, S22
	0x01CFD2E4 FSUB S6, S6, S3
	0x01CFD2E8 FCSEL S16, S19, S22, GT
	0x01CFD2EC FSUB S7, S7, S4
	0x01CFD2F0 FMUL S6, S6, S8
	0x01CFD2F4 FSUB S16, S16, S5
	0x01CFD2F8 FMUL S7, S7, S8
	0x01CFD2FC FADD S3, S3, S6
	0x01CFD300 FMUL S16, S16, S8
	0x01CFD304 FADD S4, S4, S7
	0x01CFD308 FSUB S17, S3, S6
	0x01CFD30C FADD S3, S6, S3
	0x01CFD310 FADD S5, S5, S16
	0x01CFD314 FSUB S6, S4, S7
	0x01CFD318 FCMP S17, S0
	0x01CFD31C FADD S4, S7, S4
	0x01CFD320 FSUB S7, S5, S16
	0x01CFD324 FCSEL S17, S17, S0, MI
	0x01CFD328 FCMP S6, S1
	0x01CFD32C FCSEL S6, S6, S1, MI
	0x01CFD330 FCMP S7, S2
	0x01CFD334 FCSEL S7, S7, S2, MI
	0x01CFD338 FCMP S3, S0
	0x01CFD33C FADD S5, S16, S5
	0x01CFD340 FCSEL S0, S3, S0, GT
	0x01CFD344 FCMP S4, S1
	0x01CFD348 FCSEL S1, S4, S1, GT
	0x01CFD34C FCMP S5, S2
	0x01CFD350 FSUB S0, S0, S17
	0x01CFD354 FCSEL S2, S5, S2, GT
	0x01CFD358 FSUB S1, S1, S6
	0x01CFD35C FMUL S13, S0, S8
	0x01CFD360 FSUB S0, S2, S7
	0x01CFD364 FMUL S11, S1, S8
	0x01CFD368 FMUL S9, S0, S8
	0x01CFD36C FADD S14, S17, S13
	0x01CFD370 FADD S12, S6, S11
	0x01CFD374 FADD S10, S7, S9
	0x01CFD378 B 0x1CFD26C
	0x01CFD37C LDR X1, [X20]
	0x01CFD380 ADD X0, X31, 0x30
	0x01CFD384 BL 0x2A079C4
	0x01CFD388 STP S14, S12, [X19]
	0x01CFD38C STP S10, S13, [X19 + 0x8]
	0x01CFD390 STP S11, S9, [X19 + 0x10]
	0x01CFD394 LDP X20, X19, [X31 + 0xB0]
	0x01CFD398 LDP X30, X21, [X31 + 0xA0]
	0x01CFD39C LDP D9, D8, [X31 + 0x90]
	0x01CFD3A0 LDP D11, D10, [X31 + 0x80]
	0x01CFD3A4 LDP D13, D12, [X31 + 0x70]
	0x01CFD3A8 LDR V14, [X31 + 0x60]
	0x01CFD3AC ADD X31, X31, 0xC0
	0x01CFD3B0 RET
	0x01CFD3B4 BL 0x1B6EA1C
	0x01CFD3B8 CMP W1, 0x1
	0x01CFD3BC MOV X21, X0
	0x01CFD3C0 B.NE 0x1CFD3F4
	0x01CFD3C4 MOV X0, X21
	0x01CFD3C8 BL 0x3D19840
	0x01CFD3CC LDR X20, [X0]
	0x01CFD3D0 BL 0x3D19850
	0x01CFD3D4 ADRP X8, 0x2253000

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], D14
	003 Move [X31+144], D13
	004 Move [X31+152], D12
	005 Move [X31+160], D11
	006 Move [X31+168], D10
	007 Move [X31+176], D9
	008 Move [X31+184], D8
	009 Move [X31+192], X30
	010 Move [X31+200], X19
	011 Move X8, -19214336
	012 Move X9, -19214336
	013 Move V10, V0
	014 Move V0, [X8+3376]
	015 Move V2, [X9+2648]
	016 Move X19, X0
	017 Move S1, 1
	018 Move V3, V10
	019 Move X0, X31
	020 Move S9, 1
	021 Call Gizmos.set_color, X0
	022 Move W8, [X19+32]
	023 Move S8, 2
	024 Subtract W8, W8, 1
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X9, -18939904
	027 Move X10, -18939904
	028 Add X9, X9, 2416
	029 Add X10, X10, 2440
	030 Move V8, [X9]
	031 Move V9, [X10]
	032 Move X0, X19
	033 Move X1, X31
	034 Call Component.get_transform, X0
	035 Compare X0, 0
	036 JumpIfEqual {123}
	037 Add X8, X31, 64
	038 Move X1, X31
	039 Call Transform.get_localToWorldMatrix, X0
	040 Move V0, [X31+64]
	041 Move V1, [X31+80]
	042 Move V2, [X31+96]
	043 Move V3, [X31+112]
	044 Add X0, X31, 0
	045 Move X1, X31
	046 Move [X31], V0
	047 Move [X31+8], V1
	048 Move [X31+32], V2
	049 Move [X31+40], V3
	050 Call Gizmos.set_matrix, X0
	051 Move S14, 0.5
	052 Multiply S1, S8, S14
	053 Move S0, W31
	054 Move S2, W31
	055 Move S5, W31
	056 Move V3, V9
	057 Move V4, V8
	058 Move X0, X31
	059 Call Gizmos.DrawWireCube, X0, X1
	060 NotImplemented "Instruction FCMP not yet implemented."
	061 NotImplemented "Instruction FCSEL not yet implemented."
	062 Move S1, 0.25
	063 Move X0, X31
	064 Multiply S11, S0, S1
	065 Call Gizmos.get_color
	066 Move X0, X31
	067 Move V12, V0
	068 Call Gizmos.get_color
	069 Move X0, X31
	070 Move V13, V1
	071 Call Gizmos.get_color
	072 Multiply S3, S10, S14
	073 Move V0, V12
	074 Move V1, V13
	075 Move X0, X31
	076 Call Gizmos.set_color, X0
	077 Multiply S10, S9, S14
	078 Move S1, W31
	079 Move S2, W31
	080 Move S4, W31
	081 Move V0, V10
	082 Move V3, V10
	083 Move V5, V11
	084 Move X0, X31
	085 Call Gizmos.DrawLine, X0, X1
	086 Move S0, -0.5
	087 Multiply S9, S9, S0
	088 Move S1, W31
	089 Move S2, W31
	090 Move S4, W31
	091 Move V0, V9
	092 Move V3, V9
	093 Move V5, V11
	094 Move X0, X31
	095 Call Gizmos.DrawLine, X0, X1
	096 Move S2, W31
	097 Move V0, V9
	098 Move V1, V8
	099 Move V3, V9
	100 Move V4, V8
	101 Move V5, V11
	102 Move X0, X31
	103 Call Gizmos.DrawLine, X0, X1
	104 Move S2, W31
	105 Move V0, V10
	106 Move V1, V8
	107 Move V3, V10
	108 Move V4, V8
	109 Move V5, V11
	110 Move X0, X31
	111 Call Gizmos.DrawLine, X0, X1
	112 Move X30, [X31+192]
	113 Move X19, [X31+200]
	114 Move D9, [X31+176]
	115 Move D8, [X31+184]
	116 Move D11, [X31+160]
	117 Move D10, [X31+168]
	118 Move D13, [X31+144]
	119 Move D12, [X31+152]
	120 Move V14, [X31+128]
	121 Add X31, X31, 208
	122 Return 
	123 Call 0x1B6FA1C

Method: System.Void .ctor()

Disassembly:
	0x01CFD414 CBNZ X20, 0x1CFD420
	0x01CFD418 MOV X0, X21
	0x01CFD41C BL 0x1C8418C
	0x01CFD420 MOV X0, X20
	0x01CFD424 BL 0x1B6EA14
	0x01CFD428 BL 0x18F46A8
	0x01CFD42C STP X30, X23, [X31 - 0x30]!
	0x01CFD430 STP X22, X21, [X31 + 0x10]
	0x01CFD434 STP X20, X19, [X31 + 0x20]
	0x01CFD438 ADRP X23, 0x2526000
	0x01CFD43C ADRP X22, 0x2250000
	0x01CFD440 LDRB W8, [X23 + 0x724]
	0x01CFD444 LDR X22, [X22 + 0x478]
	0x01CFD448 MOV X20, X2
	0x01CFD44C MOV X21, X1
	0x01CFD450 MOV X19, X0
	0x01CFD454 TBNZ X8, 0x0, 0x1CFD478
	0x01CFD458 ADRP X0, 0x2253000
	0x01CFD45C LDR X0, [X0 + 0xBC8]
	0x01CFD460 BL 0x1B6E7F0
	0x01CFD464 ADRP X0, 0x2250000
	0x01CFD468 LDR X0, [X0 + 0x478]
	0x01CFD46C BL 0x1B6E7F0
	0x01CFD470 MOVZ W8, 0x1
	0x01CFD474 STRB W8, [X23 + 0x724]
	0x01CFD478 LDR X0, [X22]
	0x01CFD47C LDR X22, [X19 + 0x18]
	0x01CFD480 LDR W8, [X0 + 0xE0]
	0x01CFD484 CBNZ W8, 0x1CFD48C
	0x01CFD488 BL 0x1B6E8F8
	0x01CFD48C MOV X0, X22
	0x01CFD490 MOV X1, X31
	0x01CFD494 MOV X2, X31
	0x01CFD498 BL 0x3AA0AF0
	0x01CFD49C TBZ X0, 0x0, 0x1CFD4B4
	0x01CFD4A0 LDP X20, X19, [X31 + 0x20]
	0x01CFD4A4 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2527000
	007 Move X22, 0x2254000
	008 Move X21, 0x2254000
	009 Move W8, [X20+1815]
	010 Move X22, [X22+968]
	011 Move X21, [X21+976]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2254000
	018 Move X0, [X0+976]
	019 Call 0x1B6F7F0
	020 Move X0, 0x2254000
	021 Move X0, [X0+968]
	022 Call 0x1B6F7F0
	023 Move W8, 1
	024 Move [X20+1815], W8
	025 Move X0, [X22]
	026 Call 0x1B6FA0C
	027 Move X1, [X21]
	028 Move X20, X0
	029 Call List`1<Object>..ctor, X0
	030 Move [X19+40], X20
	031 Move X0, [X22]
	032 Call 0x1B6FA0C
	033 Move X1, [X21]
	034 Move X20, X0
	035 Call List`1<Object>..ctor, X0
	036 Move [X19+48], X20
	037 Move X0, X19
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X1, X31
	043 Move X30, [X31+48]
	044 Call MonoBehaviour..ctor, X0
	045 Return 

