Type: AnimalCompany.GameGen.Socket

Method: System.Boolean get_isOpen()

Disassembly:
	0x01E1036C BL 0x300FC5C
	0x01E10370 STR X20, [X19 + 0x20]

ISIL:
	001 Move W0, [X0+96]
	002 Return X0

Method: System.Void set_isOpen(System.Boolean value)

Disassembly:
	0x01E10374 MOV X0, X19
	0x01E10378 LDP X20, X19, [X31 + 0x40]
	0x01E1037C LDP X22, X21, [X31 + 0x30]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+96], W8
	003 Return 

Method: System.Void SetOpen(System.Boolean open)

Disassembly:
	0x01E10380 LDP X24, X23, [X31 + 0x20]
	0x01E10384 LDP X26, X25, [X31 + 0x10]
	0x01E10388 MOV X1, X31
	0x01E1038C LDR X30, [X31], #0x50
	0x01E10390 B 0x33BDD8C
	0x01E10394 LDR X8, [X0 + 0x10]
	0x01E10398 CMP X8, 0x0
	0x01E1039C CSEL X0, X0, X8, EQ
	0x01E103A0 RET
	0x01E103A4 LDR X0, [X0 + 0x38]
	0x01E103A8 RET
	0x01E103AC STR X1, [X0 + 0x38]
	0x01E103B0 RET
	0x01E103B4 STP X30, X23, [X31 - 0x30]!
	0x01E103B8 STP X22, X21, [X31 + 0x10]
	0x01E103BC STP X20, X19, [X31 + 0x20]
	0x01E103C0 ADRP X22, 0x25C8000
	0x01E103C4 ADRP X23, 0x22E9000
	0x01E103C8 ADRP X21, 0x22E9000
	0x01E103CC LDRB W8, [X22 + 0xDE7]
	0x01E103D0 LDR X23, [X23 + 0xAD0]
	0x01E103D4 LDR X21, [X21 + 0xAB8]
	0x01E103D8 MOV X20, X1
	0x01E103DC MOV X19, X0
	0x01E103E0 TBNZ X8, 0x0, 0x1E10404
	0x01E103E4 ADRP X0, 0x22E9000
	0x01E103E8 LDR X0, [X0 + 0xAB8]
	0x01E103EC BL 0x1C16CF4
	0x01E103F0 ADRP X0, 0x22E9000
	0x01E103F4 LDR X0, [X0 + 0xAD0]
	0x01E103F8 BL 0x1C16CF4
	0x01E103FC MOVZ W8, 0x1
	0x01E10400 STRB W8, [X22 + 0xDE7]
	0x01E10404 LDR X0, [X23]
	0x01E10408 BL 0x1C16F10
	0x01E1040C LDR X1, [X21]
	0x01E10410 MOV X21, X0
	0x01E10414 BL 0x2F64678
	0x01E10418 MOV X0, X19
	0x01E1041C MOV X1, X31
	0x01E10420 STR X21, [X19 + 0x30]
	0x01E10424 BL 0x33BDD8C
	0x01E10428 STR X20, [X19 + 0x18]
	0x01E1042C CBZ X20, 0x1E10448
	0x01E10430 LDR W8, [X20 + 0x28]
	0x01E10434 LDP X22, X21, [X31 + 0x10]
	0x01E10438 STR W8, [X19 + 0x24]
	0x01E1043C LDP X20, X19, [X31 + 0x20]
	0x01E10440 LDP X30, X23, [X31], #0x30
	0x01E10444 RET
	0x01E10448 BL 0x1C16F20
	0x01E1044C SUB X31, X31, 0xC0
	0x01E10450 STR D14, [X31 + 0x60]
	0x01E10454 STP D13, D12, [X31 + 0x70]
	0x01E10458 STP D11, D10, [X31 + 0x80]
	0x01E1045C STP D9, D8, [X31 + 0x90]
	0x01E10460 STP X30, X21, [X31 + 0xA0]
	0x01E10464 STP X20, X19, [X31 + 0xB0]
	0x01E10468 ADRP X21, 0x25C8000
	0x01E1046C LDRB W9, [X21 + 0xDE8]
	0x01E10470 MOV X20, X0
	0x01E10474 MOV X19, X8
	0x01E10478 TBNZ X9, 0x0, 0x1E104B4
	0x01E1047C ADRP X0, 0x22E9000
	0x01E10480 LDR X0, [X0 + 0x998]
	0x01E10484 BL 0x1C16CF4
	0x01E10488 ADRP X0, 0x22E9000
	0x01E1048C LDR X0, [X0 + 0x9A0]
	0x01E10490 BL 0x1C16CF4
	0x01E10494 ADRP X0, 0x22E9000
	0x01E10498 LDR X0, [X0 + 0x9A8]
	0x01E1049C BL 0x1C16CF4
	0x01E104A0 ADRP X0, 0x22E9000
	0x01E104A4 LDR X0, [X0 + 0x9B0]
	0x01E104A8 BL 0x1C16CF4
	0x01E104AC MOVZ W8, 0x1
	0x01E104B0 STRB W8, [X21 + 0xDE8]
	0x01E104B4 ADRP X21, 0x25C8000
	0x01E104B8 LDRB W8, [X21 + 0x783]
	0x01E104BC MOVI V0.2D, 0x0
	0x01E104C0 STR X31, [X31 + 0x50]
	0x01E104C4 STP V0, V0, [X31 + 0x30]
	0x01E104C8 CBNZ W8, 0x1E104E0
	0x01E104CC ADRP X0, 0x22E3000
	0x01E104D0 LDR X0, [X0 + 0x5A0]
	0x01E104D4 BL 0x1C16CF4
	0x01E104D8 MOVZ W8, 0x1
	0x01E104DC STRB W8, [X21 + 0x783]
	0x01E104E0 LDR X0, [X20 + 0x30]
	0x01E104E4 CBZ X0, 0x1E10690
	0x01E104E8 ADRP X8, 0x22E3000
	0x01E104EC LDR X8, [X8 + 0x5A0]
	0x01E104F0 ADRP X9, 0x22E9000
	0x01E104F4 ADRP X21, 0x22E9000
	0x01E104F8 ADRP X20, 0x22E9000
	0x01E104FC LDR X8, [X8]
	0x01E10500 LDR X9, [X9 + 0x9B0]
	0x01E10504 FMOV S8, 0.5
	0x01E10508 LDR X8, [X8 + 0xB8]
	0x01E1050C LDR X21, [X21 + 0x9A0]
	0x01E10510 LDR X20, [X20 + 0x998]
	0x01E10514 LDR X1, [X9]
	0x01E10518 LDP S12, S10, [X8 + 0x4]
	0x01E1051C LDR V14, [X8]
	0x01E10520 ADD X8, X31, 0x8
	0x01E10524 FMUL S9, S10, S8
	0x01E10528 FMUL S11, S12, S8
	0x01E1052C FMUL S13, S14, S8
	0x01E10530 BL 0x2F65DA4
	0x01E10534 LDUR V0, [X31 + 0x8]
	0x01E10538 LDUR V1, [X31 + 0x18]
	0x01E1053C LDR X8, [X31 + 0x28]
	0x01E10540 STP V0, V1, [X31 + 0x30]
	0x01E10544 STR X8, [X31 + 0x50]
	0x01E10548 LDR X1, [X21]
	0x01E1054C ADD X0, X31, 0x30
	0x01E10550 BL 0x2BB6B08
	0x01E10554 TBZ X0, 0x0, 0x1E10658
	0x01E10558 LDP S0, S1, [X31 + 0x40]
	0x01E1055C LDP S2, S3, [X31 + 0x48]
	0x01E10560 LDP S4, S5, [X31 + 0x50]
	0x01E10564 FSUB S6, S14, S13
	0x01E10568 FSUB S7, S12, S11
	0x01E1056C FSUB S20, S0, S3
	0x01E10570 FSUB S21, S1, S4
	0x01E10574 FCMP S6, S20
	0x01E10578 FSUB S16, S10, S9
	0x01E1057C FSUB S22, S2, S5
	0x01E10580 FADD S0, S0, S3
	0x01E10584 FCSEL S3, S6, S20, MI
	0x01E10588 FCMP S7, S21
	0x01E1058C FADD S17, S13, S14
	0x01E10590 FADD S1, S1, S4
	0x01E10594 FCSEL S4, S7, S21, MI
	0x01E10598 FCMP S16, S22
	0x01E1059C FADD S18, S11, S12
	0x01E105A0 FADD S2, S2, S5
	0x01E105A4 FCSEL S5, S16, S22, MI
	0x01E105A8 FCMP S17, S20
	0x01E105AC FADD S19, S9, S10
	0x01E105B0 FCSEL S6, S17, S20, GT
	0x01E105B4 FCMP S18, S21
	0x01E105B8 FCSEL S7, S18, S21, GT
	0x01E105BC FCMP S19, S22
	0x01E105C0 FSUB S6, S6, S3
	0x01E105C4 FCSEL S16, S19, S22, GT
	0x01E105C8 FSUB S7, S7, S4
	0x01E105CC FMUL S6, S6, S8
	0x01E105D0 FSUB S16, S16, S5
	0x01E105D4 FMUL S7, S7, S8
	0x01E105D8 FADD S3, S3, S6
	0x01E105DC FMUL S16, S16, S8
	0x01E105E0 FADD S4, S4, S7
	0x01E105E4 FSUB S17, S3, S6
	0x01E105E8 FADD S3, S6, S3
	0x01E105EC FADD S5, S5, S16
	0x01E105F0 FSUB S6, S4, S7
	0x01E105F4 FCMP S17, S0
	0x01E105F8 FADD S4, S7, S4
	0x01E105FC FSUB S7, S5, S16
	0x01E10600 FCSEL S17, S17, S0, MI
	0x01E10604 FCMP S6, S1
	0x01E10608 FCSEL S6, S6, S1, MI
	0x01E1060C FCMP S7, S2
	0x01E10610 FCSEL S7, S7, S2, MI

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X21, 0x25C9000
	011 Move W8, [X21+3544]
	012 Move W20, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {38}
	018 Move X0, 0x22EA000
	019 Move X0, [X0+3536]
	020 Call 0x1C17CF4
	021 Move X0, 0x22EA000
	022 Move X0, [X0+3544]
	023 Call 0x1C17CF4
	024 Move X0, 0x22EA000
	025 Move X0, [X0+3552]
	026 Call 0x1C17CF4
	027 Move X0, 0x22EA000
	028 Move X0, [X0+3560]
	029 Call 0x1C17CF4
	030 Move X0, 0x22EA000
	031 Move X0, [X0+3232]
	032 Call 0x1C17CF4
	033 Move X0, 0x22EA000
	034 Move X0, [X0+3240]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+3544], W8
	038 Move [X31+32], X31
	039 Move [X31+40], X31
	040 Move [X31+48], X31
	041 Move X0, [X19+56]
	042 And W8, W20, 1
	043 Move [X19+96], W8
	044 Compare X0, 0
	045 JumpIfEqual {139}
	046 Move X25, 0x22EA000
	047 Move X25, [X25+3560]
	048 Move X24, 0x22EA000
	049 Move X23, 0x22EA000
	050 Add X8, X31, 8
	051 Move X1, [X25]
	052 Move X24, [X24+3544]
	053 Move X23, [X23+3536]
	054 Call List`1<Object>.GetEnumerator, X0
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 Move X8, [X31+24]
	057 Move [X31+2], V0
	058 Move [X31+48], X8
	059 Move X1, [X24]
	060 Add X0, X31, 32
	061 Call Enumerator<Object>.MoveNext, X0
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {72}
	066 Move X0, [X31+48]
	067 Compare X0, 0
	068 JumpIfEqual {137}
	069 Move W1, W31
	070 Move X2, X31
	071 Call GameObject.SetActive, X0, X1
	072 Move X1, [X23]
	073 Add X0, X31, 32
	074 Call Enumerator<Object>.Dispose, X0
	075 Move X0, [X19+64]
	076 Compare X0, 0
	077 JumpIfEqual {139}
	078 Move X1, [X25]
	079 Add X8, X31, 8
	080 Call List`1<Object>.GetEnumerator, X0
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 Move X8, [X31+24]
	083 Move [X31+2], V0
	084 Move [X31+48], X8
	085 Move X1, [X24]
	086 Add X0, X31, 32
	087 Call Enumerator<Object>.MoveNext, X0
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {98}
	092 Move X0, [X31+48]
	093 Compare X0, 0
	094 JumpIfEqual {138}
	095 Move W1, W31
	096 Move X2, X31
	097 Call GameObject.SetActive, X0, X1
	098 Move X1, [X23]
	099 Add X0, X31, 32
	100 Call Enumerator<Object>.Dispose, X0
	101 Move TEMP, X20
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {108}
	105 Move X19, [X19+56]
	106 Compare X19, 0
	107 JumpIfNotEqual {111}
	108 Move X19, [X19+64]
	109 Compare X19, 0
	110 JumpIfEqual {139}
	111 Move W1, [X19+24]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move W0, W31
	114 Move X2, X31
	115 Call Random.Range, X0, X1
	116 Move X8, 0x22EA000
	117 Move X8, [X8+3240]
	118 Move W1, W0
	119 Move X0, X19
	120 Move X2, [X8]
	121 Call List`1<Object>.get_Item, X0, X1
	122 Compare X0, 0
	123 JumpIfEqual {139}
	124 Move W1, 1
	125 Move X2, X31
	126 Call GameObject.SetActive, X0, X1
	127 Move X20, [X31+112]
	128 Move X19, [X31+120]
	129 Move X22, [X31+96]
	130 Move X21, [X31+104]
	131 Move X24, [X31+80]
	132 Move X23, [X31+88]
	133 Move X30, [X31+64]
	134 Move X25, [X31+72]
	135 Add X31, X31, 128
	136 Return 
	137 Call 0x1C17F20
	138 Call 0x1C17F20
	139 Call 0x1C17F20
	140 Move X21, X0
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X0, X21
	143 Call 0x3EB2AD0
	144 Move X22, [X0]
	145 Call 0x3EB2AE0
	146 Move X1, [X23]
	147 Add X0, X31, 32
	148 Call Enumerator<Object>.Dispose, X0
	149 Compare X22, 0
	150 JumpIfEqual {101}
	151 Move X22, X31
	152 Move X21, X0
	153 Move X1, [X23]
	154 Add X0, X31, 32
	155 Call Enumerator<Object>.Dispose, X0
	156 Compare X22, 0
	157 JumpIfEqual {180}
	158 Move X0, X22
	159 Call 0x1C17F18
	160 Move X21, X0
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X0, X21
	163 Call 0x3EB2AD0
	164 Move X22, [X0]
	165 Call 0x3EB2AE0
	166 Move X1, [X23]
	167 Add X0, X31, 32
	168 Call Enumerator<Object>.Dispose, X0
	169 Compare X22, 0
	170 JumpIfEqual {75}
	171 Move X0, X22
	172 Call 0x1C17F18
	173 Move X22, X31
	174 Move X21, X0
	175 Move X1, [X23]
	176 Add X0, X31, 32
	177 Call Enumerator<Object>.Dispose, X0
	178 Compare X22, 0
	179 JumpIfNotEqual {182}
	180 Move X0, X21
	181 Call 0x1D2D690
	182 Move X0, X22
	183 Call 0x1C17F18
	184 Call 0x1991590

Method: System.Void OnDrawGizmos()

Disassembly:
	0x01E10614 FCMP S3, S0
	0x01E10618 FADD S5, S16, S5
	0x01E1061C FCSEL S0, S3, S0, GT

ISIL:
	001 Move X8, -20074496
	002 Move V0, [X8+860]

Method: System.Void OnDrawGizmosSelected()

Disassembly:
	0x01E107C0 MOV X0, X19
	0x01E107C4 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move S0, 1
	002 Call Socket.DrawGizmoInternal, X0, V0
	003 Return 

Method: System.Void DrawGizmoInternal(System.Single opacity)

Disassembly:
	0x01E10620 FCMP S4, S1
	0x01E10624 FCSEL S1, S4, S1, GT
	0x01E10628 FCMP S5, S2
	0x01E1062C FSUB S0, S0, S17
	0x01E10630 FCSEL S2, S5, S2, GT
	0x01E10634 FSUB S1, S1, S6
	0x01E10638 FMUL S13, S0, S8
	0x01E1063C FSUB S0, S2, S7
	0x01E10640 FMUL S11, S1, S8
	0x01E10644 FMUL S9, S0, S8
	0x01E10648 FADD S14, S17, S13
	0x01E1064C FADD S12, S6, S11
	0x01E10650 FADD S10, S7, S9
	0x01E10654 B 0x1E10548
	0x01E10658 LDR X1, [X20]
	0x01E1065C ADD X0, X31, 0x30
	0x01E10660 BL 0x2BB6B04
	0x01E10664 STP S14, S12, [X19]
	0x01E10668 STP S10, S13, [X19 + 0x8]
	0x01E1066C STP S11, S9, [X19 + 0x10]
	0x01E10670 LDP X20, X19, [X31 + 0xB0]
	0x01E10674 LDP X30, X21, [X31 + 0xA0]
	0x01E10678 LDP D9, D8, [X31 + 0x90]
	0x01E1067C LDP D11, D10, [X31 + 0x80]
	0x01E10680 LDP D13, D12, [X31 + 0x70]
	0x01E10684 LDR V14, [X31 + 0x60]
	0x01E10688 ADD X31, X31, 0xC0
	0x01E1068C RET
	0x01E10690 BL 0x1C16F20
	0x01E10694 CMP W1, 0x1
	0x01E10698 MOV X21, X0
	0x01E1069C B.NE 0x1E106D0
	0x01E106A0 MOV X0, X21
	0x01E106A4 BL 0x3EB1AD0
	0x01E106A8 LDR X20, [X0]
	0x01E106AC BL 0x3EB1AE0
	0x01E106B0 ADRP X8, 0x22E9000
	0x01E106B4 LDR X8, [X8 + 0x998]
	0x01E106B8 ADD X0, X31, 0x30
	0x01E106BC LDR X1, [X8]
	0x01E106C0 BL 0x2BB6B04
	0x01E106C4 CBZ X20, 0x1E10664
	0x01E106C8 MOV X0, X20
	0x01E106CC BL 0x1C16F18
	0x01E106D0 MOV X20, X31
	0x01E106D4 B 0x1E106DC
	0x01E106D8 MOV X21, X0
	0x01E106DC ADRP X8, 0x22E9000
	0x01E106E0 LDR X8, [X8 + 0x998]
	0x01E106E4 LDR X1, [X8]
	0x01E106E8 ADD X0, X31, 0x30
	0x01E106EC BL 0x2BB6B04
	0x01E106F0 CBNZ X20, 0x1E106FC
	0x01E106F4 MOV X0, X21
	0x01E106F8 BL 0x1D2C690
	0x01E106FC MOV X0, X20
	0x01E10700 BL 0x1C16F18
	0x01E10704 BL 0x1990590
	0x01E10708 STP X30, X23, [X31 - 0x30]!
	0x01E1070C STP X22, X21, [X31 + 0x10]
	0x01E10710 STP X20, X19, [X31 + 0x20]
	0x01E10714 ADRP X23, 0x25C8000
	0x01E10718 ADRP X22, 0x22E3000
	0x01E1071C LDRB W8, [X23 + 0xDE9]
	0x01E10720 LDR X22, [X22 + 0x598]
	0x01E10724 MOV X20, X2
	0x01E10728 MOV X21, X1
	0x01E1072C MOV X19, X0
	0x01E10730 TBNZ X8, 0x0, 0x1E10754
	0x01E10734 ADRP X0, 0x22E9000
	0x01E10738 LDR X0, [X0 + 0xE88]
	0x01E1073C BL 0x1C16CF4
	0x01E10740 ADRP X0, 0x22E3000
	0x01E10744 LDR X0, [X0 + 0x598]
	0x01E10748 BL 0x1C16CF4
	0x01E1074C MOVZ W8, 0x1
	0x01E10750 STRB W8, [X23 + 0xDE9]
	0x01E10754 LDR X0, [X22]
	0x01E10758 LDR X22, [X19 + 0x18]
	0x01E1075C LDR W8, [X0 + 0xE0]
	0x01E10760 CBNZ W8, 0x1E10768
	0x01E10764 BL 0x1C16DFC
	0x01E10768 MOV X0, X22
	0x01E1076C MOV X1, X31
	0x01E10770 MOV X2, X31
	0x01E10774 BL 0x3C3883C
	0x01E10778 TBZ X0, 0x0, 0x1E10790
	0x01E1077C LDP X20, X19, [X31 + 0x20]
	0x01E10780 LDP X22, X21, [X31 + 0x10]
	0x01E10784 MOV W0, W31
	0x01E10788 LDP X30, X23, [X31], #0x30
	0x01E1078C RET
	0x01E10790 STR X20, [X19 + 0x10]
	0x01E10794 STR X21, [X19 + 0x38]
	0x01E10798 ADRP X8, 0x22E9000
	0x01E1079C LDR X8, [X8 + 0xE88]
	0x01E107A0 LDR X0, [X8]
	0x01E107A4 BL 0x1C16F10
	0x01E107A8 MOV X21, X0
	0x01E107AC BL 0x1E10288
	0x01E107B0 STR X21, [X19 + 0x28]
	0x01E107B4 CBZ X20, 0x1E107D8
	0x01E107B8 LDR X8, [X20 + 0x30]
	0x01E107BC STR W31, [X19 + 0x20]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], D14
	003 Move [X31+144], D13
	004 Move [X31+152], D12
	005 Move [X31+160], D11
	006 Move [X31+168], D10
	007 Move [X31+176], D9
	008 Move [X31+184], D8
	009 Move [X31+192], X30
	010 Move [X31+200], X19
	011 Move X8, -20074496
	012 Move X9, -20074496
	013 Move V9, V0
	014 Move V0, [X8+860]
	015 Move V2, [X9+104]
	016 Move X19, X0
	017 Move S1, 1
	018 Move V3, V9
	019 Move X0, X31
	020 Call Gizmos.set_color, X0
	021 Move W0, [X19+32]
	022 Move X1, X31
	023 Call SocketPresets.GetSocketSize, X0
	024 Move X0, X19
	025 Move X1, X31
	026 Move V10, V0
	027 Move V8, V1
	028 Call Component.get_transform, X0
	029 Compare X0, 0
	030 JumpIfEqual {117}
	031 Add X8, X31, 64
	032 Move X1, X31
	033 Call Transform.get_localToWorldMatrix, X0
	034 Move V0, [X31+64]
	035 Move V1, [X31+80]
	036 Move V2, [X31+96]
	037 Move V3, [X31+112]
	038 Add X0, X31, 0
	039 Move X1, X31
	040 Move [X31], V0
	041 Move [X31+8], V1
	042 Move [X31+32], V2
	043 Move [X31+40], V3
	044 Call Gizmos.set_matrix, X0
	045 Move S14, 0.5
	046 Multiply S1, S8, S14
	047 Move S0, W31
	048 Move S2, W31
	049 Move S5, W31
	050 Move V3, V10
	051 Move V4, V8
	052 Move X0, X31
	053 Call Gizmos.DrawWireCube, X0, X1
	054 NotImplemented "Instruction FCMP not yet implemented."
	055 NotImplemented "Instruction FCSEL not yet implemented."
	056 Move S1, 0.25
	057 Move X0, X31
	058 Multiply S11, S0, S1
	059 Call Gizmos.get_color
	060 Move X0, X31
	061 Move V12, V0
	062 Call Gizmos.get_color
	063 Move X0, X31
	064 Move V13, V1
	065 Call Gizmos.get_color
	066 Multiply S3, S9, S14
	067 Move V0, V12
	068 Move V1, V13
	069 Move X0, X31
	070 Call Gizmos.set_color, X0
	071 Multiply S9, S10, S14
	072 Move S1, W31
	073 Move S2, W31
	074 Move S4, W31
	075 Move V0, V9
	076 Move V3, V9
	077 Move V5, V11
	078 Move X0, X31
	079 Call Gizmos.DrawLine, X0, X1
	080 Move S0, -0.5
	081 Multiply S10, S10, S0
	082 Move S1, W31
	083 Move S2, W31
	084 Move S4, W31
	085 Move V0, V10
	086 Move V3, V10
	087 Move V5, V11
	088 Move X0, X31
	089 Call Gizmos.DrawLine, X0, X1
	090 Move S2, W31
	091 Move V0, V10
	092 Move V1, V8
	093 Move V3, V10
	094 Move V4, V8
	095 Move V5, V11
	096 Move X0, X31
	097 Call Gizmos.DrawLine, X0, X1
	098 Move S2, W31
	099 Move V0, V9
	100 Move V1, V8
	101 Move V3, V9
	102 Move V4, V8
	103 Move V5, V11
	104 Move X0, X31
	105 Call Gizmos.DrawLine, X0, X1
	106 Move X30, [X31+192]
	107 Move X19, [X31+200]
	108 Move D9, [X31+176]
	109 Move D8, [X31+184]
	110 Move D11, [X31+160]
	111 Move D10, [X31+168]
	112 Move D13, [X31+144]
	113 Move D12, [X31+152]
	114 Move V14, [X31+128]
	115 Add X31, X31, 208
	116 Return 
	117 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01E107C8 STR X8, [X19 + 0x30]
	0x01E107CC LDP X20, X19, [X31 + 0x20]
	0x01E107D0 LDP X30, X23, [X31], #0x30
	0x01E107D4 B 0x1E107DC
	0x01E107D8 BL 0x1C16F20
	0x01E107DC STP X30, X27, [X31 - 0x50]!
	0x01E107E0 STP X26, X25, [X31 + 0x10]
	0x01E107E4 STP X24, X23, [X31 + 0x20]
	0x01E107E8 STP X22, X21, [X31 + 0x30]
	0x01E107EC STP X20, X19, [X31 + 0x40]
	0x01E107F0 ADRP X20, 0x25C8000
	0x01E107F4 LDRB W8, [X20 + 0xDEC]
	0x01E107F8 MOV X19, X0
	0x01E107FC TBNZ X8, 0x0, 0x1E10868
	0x01E10800 ADRP X0, 0x22E9000
	0x01E10804 LDR X0, [X0 + 0xE90]
	0x01E10808 BL 0x1C16CF4
	0x01E1080C ADRP X0, 0x22E9000
	0x01E10810 LDR X0, [X0 + 0xE98]
	0x01E10814 BL 0x1C16CF4
	0x01E10818 ADRP X0, 0x22E9000
	0x01E1081C LDR X0, [X0 + 0xEA0]
	0x01E10820 BL 0x1C16CF4
	0x01E10824 ADRP X0, 0x22E9000
	0x01E10828 LDR X0, [X0 + 0xEA8]
	0x01E1082C BL 0x1C16CF4
	0x01E10830 ADRP X0, 0x22E9000
	0x01E10834 LDR X0, [X0 + 0xEB0]
	0x01E10838 BL 0x1C16CF4
	0x01E1083C ADRP X0, 0x22E9000
	0x01E10840 LDR X0, [X0 + 0xEB8]
	0x01E10844 BL 0x1C16CF4
	0x01E10848 ADRP X0, 0x22E9000
	0x01E1084C LDR X0, [X0 + 0xEC0]
	0x01E10850 BL 0x1C16CF4
	0x01E10854 ADRP X0, 0x22E9000
	0x01E10858 LDR X0, [X0 + 0xEC8]
	0x01E1085C BL 0x1C16CF4
	0x01E10860 MOVZ W8, 0x1
	0x01E10864 STRB W8, [X20 + 0xDEC]
	0x01E10868 LDR X0, [X19 + 0x18]
	0x01E1086C CBZ X0, 0x1E10A34
	0x01E10870 ADRP X8, 0x22E9000
	0x01E10874 LDR X8, [X8 + 0xE98]
	0x01E10878 MOV W1, W31
	0x01E1087C LDR X2, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x25C9000
	008 Move X23, 0x22E4000
	009 Move X22, 0x22EA000
	010 Move X21, 0x22EA000
	011 Move W8, [X20+3545]
	012 Move X23, [X23+2440]
	013 Move X22, [X22+1352]
	014 Move X21, [X21+1360]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x22EA000
	021 Move X0, [X0+1360]
	022 Call 0x1C17CF4
	023 Move X0, 0x22EA000
	024 Move X0, [X0+1352]
	025 Call 0x1C17CF4
	026 Move X0, 0x22E4000
	027 Move X0, [X0+2440]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+3545], W8
	031 Move X8, [X23]
	032 Move TEMP, 0
	033 Not TEMP
	034 Move W9, TEMP
	035 Move [X19+48], W9
	036 Move [X19+40], X8
	037 Move X0, [X22]
	038 Call 0x1C17F10
	039 Move X1, [X21]
	040 Move X20, X0
	041 Call List`1<Object>..ctor, X0
	042 Move [X19+56], X20
	043 Move X0, [X22]
	044 Call 0x1C17F10
	045 Move X1, [X21]
	046 Move X20, X0
	047 Call List`1<Object>..ctor, X0
	048 Move [X19+64], X20
	049 Move X0, X19
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X1, X31
	055 Move X30, [X31+48]
	056 Move X23, [X31+56]
	057 Call MonoBehaviour..ctor, X0
	058 Return 

