Type: AnimalCompany.GameGen.LootPlacementConnection

Method: UnityEngine.Color get_ConnectionColor()

Disassembly:
	0x01E0BA64 LDR X27, [X27 + 0xAB8]
	0x01E0BA68 LDP S1, S0, [X31 + 0x18]
	0x01E0BA6C FSUB S12, S13, S12
	0x01E0BA70 MOV X1, X31
	0x01E0BA74 MOV X26, X0
	0x01E0BA78 FSUB S13, S14, S0
	0x01E0BA7C LDR V0, [X31 + 0x14]
	0x01E0BA80 FSUB S8, S8, S11
	0x01E0BA84 FSUB S10, S15, S10
	0x01E0BA88 FSUB S14, S0, S1
	0x01E0BA8C LDR V0, [X31 + 0x10]
	0x01E0BA90 FSUB S9, S0, S9
	0x01E0BA94 BL 0x3C3F58C
	0x01E0BA98 FADD S3, S12, S9
	0x01E0BA9C FADD S4, S13, S10
	0x01E0BAA0 FADD S5, S14, S8
	0x01E0BAA4 FADD S0, S3, S0
	0x01E0BAA8 FADD S1, S4, S1
	0x01E0BAAC FADD S2, S5, S2
	0x01E0BAB0 MOV X0, X26
	0x01E0BAB4 MOV X1, X31
	0x01E0BAB8 BL 0x3C3F62C
	0x01E0BABC ADD X8, X31, 0xC0
	0x01E0BAC0 MOV X0, X24
	0x01E0BAC4 BL 0x1E0789C
	0x01E0BAC8 LDR V0, [X31 + 0xC]
	0x01E0BACC LDR X8, [X31 + 0xD0]
	0x01E0BAD0 LDR X0, [X29]
	0x01E0BAD4 STR V0, [X31 + 0x8]
	0x01E0BAD8 STR X8, [X31 + 0x90]
	0x01E0BADC BL 0x1C16F10
	0x01E0BAE0 LDR X1, [X27]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x25CE000
	006 Move X19, 0x22EF000
	007 Move W8, [X20+3514]
	008 Move X19, [X19+3176]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x22EF000
	014 Move X0, [X0+3176]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+3514], W8
	018 Move X0, [X19]
	019 Add X1, X31, 0
	020 Move X2, X31
	021 Move [X31], X31
	022 Move [X31+8], X31
	023 Call ColorUtility.TryParseHtmlString, X0, X1
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {32}
	028 Move S0, [X31]
	029 Move S1, [X31+4]
	030 Move S2, [X31+8]
	031 Move S3, [X31+12]
	032 Move X8, -20054016
	033 Move X9, -20058112
	034 Move V2, [X8+48]
	035 Move V1, [X9+3984]
	036 Move S0, 1
	037 Move S3, 1
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X30, [X31+16]
	041 Add X31, X31, 48
	042 Return X0

Method: System.Boolean get_Dashed()

Disassembly:
	0x01E0BAE4 MOV X26, X0
	0x01E0BAE8 BL 0x2F64678

ISIL:
	001 Move W0, W31
	002 Return X0

Method: Less3.ForceGraph.ForceNode GetOtherNode(Less3.ForceGraph.ForceNode node)

Disassembly:
	0x01E0BAEC CBZ X23, 0x1E0BE9C
	0x01E0BAF0 ADRP X8, 0x22EE000
	0x01E0BAF4 LDR X8, [X8 + 0xCF8]
	0x01E0BAF8 ADRP X29, 0x22EE000
	0x01E0BAFC LDR X29, [X29 + 0xAE0]
	0x01E0BB00 LDR X23, [X23 + 0x30]
	0x01E0BB04 STP X31, X31, [X31 + 0x60]
	0x01E0BB08 STR W31, [X31 + 0x78]
	0x01E0BB0C STR X31, [X31 + 0x70]
	0x01E0BB10 LDR X9, [X22 + 0x58]
	0x01E0BB14 LDUR V0, [X22 + 0x48]
	0x01E0BB18 LDR X2, [X8]
	0x01E0BB1C ADRP X27, 0x22EE000
	0x01E0BB20 LDR X27, [X27 + 0xAC0]
	0x01E0BB24 ADD X0, X31, 0x60
	0x01E0BB28 ADD X1, X31, 0xE0
	0x01E0BB2C STR X9, [X31 + 0xF0]
	0x01E0BB30 STR V0, [X31 + 0xE]
	0x01E0BB34 BL 0x242D9E4
	0x01E0BB38 LDR V0, [X31 + 0x8]
	0x01E0BB3C LDR X8, [X31 + 0x90]
	0x01E0BB40 LDR V1, [X31 + 0x6]
	0x01E0BB44 LDUR V2, [X31 + 0x6C]
	0x01E0BB48 ADD X1, X31, 0x40
	0x01E0BB4C ADD X4, X31, 0x20
	0x01E0BB50 MOV X0, X21
	0x01E0BB54 MOV X2, X26
	0x01E0BB58 MOV X3, X23
	0x01E0BB5C STR V0, [X31 + 0x4]
	0x01E0BB60 STR X8, [X31 + 0x50]
	0x01E0BB64 STR V1, [X31 + 0x2]
	0x01E0BB68 STUR V2, [X31 + 0x2C]
	0x01E0BB6C BL 0x1E0C07C
	0x01E0BB70 LDR X8, [X29]
	0x01E0BB74 MOV W22, W0
	0x01E0BB78 MOV X0, X8
	0x01E0BB7C BL 0x1C16F10
	0x01E0BB80 LDR X1, [X27]
	0x01E0BB84 MOV X21, X0
	0x01E0BB88 BL 0x301B7C4
	0x01E0BB8C TBZ X22, 0x0, 0x1E0BD54
	0x01E0BB90 LDR X0, [X20 + 0x20]
	0x01E0BB94 CBZ X0, 0x1E0BE9C
	0x01E0BB98 ADRP X9, 0x22EE000
	0x01E0BB9C LDR X9, [X9 + 0xA18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x25CE000
	008 Move X23, 0x22E9000
	009 Move W8, [X21+3515]
	010 Move X23, [X23+1432]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x22E9000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3515], W8
	022 Move X22, X20
	023 Add X22, X22, 24
	024 Move X21, [X22]
	025 Move X0, [X23]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X21
	031 Move X1, X19
	032 Move X2, X31
	033 Call Object.op_Equality, X0, X1
	034 Add X9, X20, 32
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {56}
	039 Move X0, [X23]
	040 Move X20, [X9]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X20
	046 Move X1, X19
	047 Move X2, X31
	048 Call Object.op_Equality, X0, X1
	049 Move W8, W0
	050 Move X0, X31
	051 Move X9, X22
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {57}
	056 Move X0, [X9]
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Move X23, [X31+56]
	063 Return X0

Method: System.Void .ctor()

Disassembly:
	0x01E0BBA0 LDR W10, [X0 + 0x1C]
	0x01E0BBA4 LDR X8, [X0 + 0x10]
	0x01E0BBA8 LDR X9, [X9]
	0x01E0BBAC ADD W10, W10, 0x1

ISIL:
	001 Move W8, 1
	002 Move X1, X31
	003 Move [X0+40], W8
	004 Call ForceConnection..ctor, X0
	005 Return 

