Type: AnimalCompany.GameGen.LootPlacementConnection

Method: UnityEngine.Color get_ConnectionColor()

Disassembly:
	0x01CF8638 LDR X29, [X29 + 0x7E8]
	0x01CF863C LDR X27, [X27 + 0x7C0]
	0x01CF8640 LDP S1, S0, [X31 + 0x18]
	0x01CF8644 FSUB S12, S13, S12
	0x01CF8648 MOV X1, X31
	0x01CF864C MOV X26, X0
	0x01CF8650 FSUB S13, S14, S0
	0x01CF8654 LDR V0, [X31 + 0x14]
	0x01CF8658 FSUB S8, S8, S11
	0x01CF865C FSUB S10, S15, S10
	0x01CF8660 FSUB S14, S0, S1
	0x01CF8664 LDR V0, [X31 + 0x10]
	0x01CF8668 FSUB S9, S0, S9
	0x01CF866C BL 0x3AA7658
	0x01CF8670 FADD S3, S12, S9
	0x01CF8674 FADD S4, S13, S10
	0x01CF8678 FADD S5, S14, S8
	0x01CF867C FADD S0, S3, S0
	0x01CF8680 FADD S1, S4, S1
	0x01CF8684 FADD S2, S5, S2
	0x01CF8688 MOV X0, X26
	0x01CF868C MOV X1, X31
	0x01CF8690 BL 0x3AA76F8
	0x01CF8694 ADD X8, X31, 0x60
	0x01CF8698 MOV X0, X24
	0x01CF869C MOV X1, X31
	0x01CF86A0 BL 0x1CFC4A8
	0x01CF86A4 LDR V0, [X31 + 0x6]
	0x01CF86A8 LDR X8, [X31 + 0x70]
	0x01CF86AC LDR X0, [X29]
	0x01CF86B0 STR V0, [X31 + 0xC]
	0x01CF86B4 STR X8, [X31 + 0xD0]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x252C000
	006 Move X19, 0x2259000
	007 Move W8, [X20+1783]
	008 Move X19, [X19+2456]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2259000
	014 Move X0, [X0+2456]
	015 Call 0x1B6F7F0
	016 Move W8, 1
	017 Move [X20+1783], W8
	018 Move X0, [X19]
	019 Add X1, X31, 0
	020 Move X2, X31
	021 Move [X31], X31
	022 Move [X31+8], X31
	023 Call ColorUtility.TryParseHtmlString, X0, X1
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {32}
	028 Move S0, [X31]
	029 Move S1, [X31+4]
	030 Move S2, [X31+8]
	031 Move S3, [X31+12]
	032 Move X8, -19193856
	033 Move X9, -19193856
	034 Move V2, [X8+2600]
	035 Move V1, [X9+2452]
	036 Move S0, 1
	037 Move S3, 1
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X30, [X31+16]
	041 Add X31, X31, 48
	042 Return X0

Method: System.Boolean get_Dashed()

Disassembly:
	0x01CF86B8 STR V0, [X31 + 0x8]
	0x01CF86BC STR X8, [X31 + 0x90]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: Less3.ForceGraph.ForceNode GetOtherNode(Less3.ForceGraph.ForceNode node)

Disassembly:
	0x01CF86C0 BL 0x1B6EA0C
	0x01CF86C4 LDR X1, [X27]
	0x01CF86C8 MOV X26, X0
	0x01CF86CC BL 0x2D8CF60
	0x01CF86D0 CBZ X23, 0x1CF8A80
	0x01CF86D4 ADRP X8, 0x2258000
	0x01CF86D8 LDR X8, [X8 + 0xA18]
	0x01CF86DC ADRP X29, 0x2258000
	0x01CF86E0 LDR X29, [X29 + 0x7F8]
	0x01CF86E4 LDR X23, [X23 + 0x30]
	0x01CF86E8 STP X31, X31, [X31 + 0x60]
	0x01CF86EC STR W31, [X31 + 0x78]
	0x01CF86F0 STR X31, [X31 + 0x70]
	0x01CF86F4 LDR X9, [X22 + 0x48]
	0x01CF86F8 LDUR V0, [X22 + 0x38]
	0x01CF86FC LDR X2, [X8]
	0x01CF8700 ADRP X27, 0x2258000
	0x01CF8704 LDR X27, [X27 + 0x7C8]
	0x01CF8708 ADD X0, X31, 0x60
	0x01CF870C ADD X1, X31, 0xE0
	0x01CF8710 STR X9, [X31 + 0xF0]
	0x01CF8714 STR V0, [X31 + 0xE]
	0x01CF8718 BL 0x22D0218
	0x01CF871C LDR V0, [X31 + 0x8]
	0x01CF8720 LDR X8, [X31 + 0x90]
	0x01CF8724 LDR V1, [X31 + 0x6]
	0x01CF8728 LDUR V2, [X31 + 0x6C]
	0x01CF872C ADD X1, X31, 0x40
	0x01CF8730 ADD X4, X31, 0x20
	0x01CF8734 MOV X0, X21
	0x01CF8738 MOV X2, X26
	0x01CF873C MOV X3, X23
	0x01CF8740 STR V0, [X31 + 0x4]
	0x01CF8744 STR X8, [X31 + 0x50]
	0x01CF8748 STR V1, [X31 + 0x2]
	0x01CF874C STUR V2, [X31 + 0x2C]
	0x01CF8750 BL 0x1CF8AC4
	0x01CF8754 LDR X8, [X29]
	0x01CF8758 MOV W22, W0
	0x01CF875C MOV X0, X8
	0x01CF8760 BL 0x1B6EA0C
	0x01CF8764 LDR X1, [X27]
	0x01CF8768 MOV X21, X0
	0x01CF876C BL 0x2E45D4C
	0x01CF8770 TBZ X22, 0x0, 0x1CF8938

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x252C000
	008 Move X23, 0x2256000
	009 Move W8, [X21+1784]
	010 Move X23, [X23+1144]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x2256000
	018 Move X0, [X0+1144]
	019 Call 0x1B6F7F0
	020 Move W8, 1
	021 Move [X21+1784], W8
	022 Move X22, X20
	023 Add X22, X22, 24
	024 Move X21, [X22]
	025 Move X0, [X23]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1B6F8F8
	030 Move X0, X21
	031 Move X1, X19
	032 Move X2, X31
	033 Call Object.op_Equality, X0, X1
	034 Add X9, X20, 32
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {56}
	039 Move X0, [X23]
	040 Move X20, [X9]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1B6F8F8
	045 Move X0, X20
	046 Move X1, X19
	047 Move X2, X31
	048 Call Object.op_Equality, X0, X1
	049 Move W8, W0
	050 Move X0, X31
	051 Move X9, X22
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {57}
	056 Move X0, [X9]
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Move X23, [X31+56]
	063 Return X0

Method: System.Void .ctor()

Disassembly:
	0x01CF8774 LDR X0, [X20 + 0x20]
	0x01CF8778 CBZ X0, 0x1CF8A80
	0x01CF877C ADRP X9, 0x2258000
	0x01CF8780 LDR X9, [X9 + 0x788]

ISIL:
	001 Move W8, 1
	002 Move X1, X31
	003 Move [X0+40], W8
	004 Call ForceConnection..ctor, X0
	005 Return 

