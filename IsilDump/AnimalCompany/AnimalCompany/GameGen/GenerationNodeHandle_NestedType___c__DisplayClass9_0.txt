Type: AnimalCompany.GameGen.GenerationNodeHandle/<>c__DisplayClass9_0

Method: System.Void .ctor()

Disassembly:
	0x01D03268 LDR X27, [X27 + 0xDB0]
	0x01D0326C LDR X20, [X20 + 0x488]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean <TryGenerate>b__0(System.Collections.Generic.List`1<AnimalCompany.GameGen.NodeGenerationResult> rList)

Disassembly:
	0x01D03270 STR S1, [X31 + 0x8]
	0x01D03274 LDR V1, [X9 + 0xE20]
	0x01D03278 ADRP X28, 0x2520000
	0x01D0327C STR V0, [X31 + 0x6]
	0x01D03280 STR X8, [X31 + 0x70]
	0x01D03284 STR S1, [X31 + 0xC]
	0x01D03288 LDR X1, [X27]
	0x01D0328C ADD X0, X31, 0x60
	0x01D03290 BL 0x2A14F30
	0x01D03294 TBZ X0, 0x0, 0x1D038C8
	0x01D03298 LDR X22, [X31 + 0x70]
	0x01D0329C CBZ X22, 0x1D039DC
	0x01D032A0 MOV X0, X22
	0x01D032A4 MOV X1, X31
	0x01D032A8 BL 0x3A9B084
	0x01D032AC CBZ X0, 0x1D039E0
	0x01D032B0 MOV X1, X31
	0x01D032B4 BL 0x3AA7658
	0x01D032B8 STR S0, [X31 + 0x14]
	0x01D032BC LDR X0, [X19 + 0xA0]
	0x01D032C0 CBZ X0, 0x1D039D4
	0x01D032C4 MOV V9.16B, V1.16B
	0x01D032C8 MOV V10.16B, V2.16B
	0x01D032CC MOV X1, X31
	0x01D032D0 BL 0x3AA7658
	0x01D032D4 LDRB W8, [X28 + 0x440]
	0x01D032D8 MOV V11.16B, V0.16B
	0x01D032DC MOV V12.16B, V1.16B
	0x01D032E0 MOV V13.16B, V2.16B
	0x01D032E4 CBNZ W8, 0x1D032F8
	0x01D032E8 MOV X0, X20
	0x01D032EC BL 0x1B6E7F0
	0x01D032F0 MOVZ W8, 0x1
	0x01D032F4 STRB W8, [X28 + 0x440]
	0x01D032F8 LDR X0, [X20]
	0x01D032FC LDR W8, [X0 + 0xE0]
	0x01D03300 CBNZ W8, 0x1D03308
	0x01D03304 BL 0x1B6E8F8
	0x01D03308 LDR X0, [X19 + 0xA0]
	0x01D0330C CBZ X0, 0x1D039D8
	0x01D03310 MOV X1, X31
	0x01D03314 BL 0x3AA7658

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2521000
	007 Move W8, [X21+1845]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x224E000
	015 Move X0, [X0+4064]
	016 Call 0x1B6F7F0
	017 Move X0, 0x224E000
	018 Move X0, [X0+4072]
	019 Call 0x1B6F7F0
	020 Move X0, 0x224E000
	021 Move X0, [X0+4080]
	022 Call 0x1B6F7F0
	023 Move W8, 1
	024 Move [X21+1845], W8
	025 Move X22, 0x224E000
	026 Move X21, [X20+24]
	027 Move X22, [X22+4064]
	028 Compare X21, 0
	029 JumpIfNotEqual {42}
	030 Move X8, 0x224E000
	031 Move X8, [X8+4072]
	032 Move X0, [X8]
	033 Call 0x1B6FA0C
	034 Move X8, 0x224E000
	035 Move X8, [X8+4080]
	036 Move X1, X20
	037 Move X3, X31
	038 Move X21, X0
	039 Move X2, [X8]
	040 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	041 Move [X20+24], X21
	042 Move X2, [X22]
	043 Move X0, X19
	044 Move X1, X21
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Call Enumerable.Any, X0, X1
	051 Return X0

Method: System.Boolean <TryGenerate>b__1(AnimalCompany.GameGen.NodeGenerationResult r)

Disassembly:
	0x01D03318 LDR W0, [X19 + 0xB4]
	0x01D0331C MOV V14.16B, V0.16B
	0x01D03320 MOV V15.16B, V1.16B
	0x01D03324 MOV V8.16B, V2.16B
	0x01D03328 MOV X1, X31
	0x01D0332C BL 0x3A9DE68
	0x01D03330 MOV W23, W0
	0x01D03334 LDR X0, [X26]
	0x01D03338 LDR W8, [X0 + 0xE0]
	0x01D0333C CBNZ W8, 0x1D03344
	0x01D03340 BL 0x1B6E8F8
	0x01D03344 LDR V0, [X31 + 0x14]
	0x01D03348 FSUB S1, S9, S12
	0x01D0334C FSUB S2, S10, S13
	0x01D03350 FMUL S4, S1, S1
	0x01D03354 FSUB S0, S0, S11
	0x01D03358 FMUL S3, S0, S0
	0x01D0335C FMUL S5, S2, S2
	0x01D03360 FADD S3, S3, S4
	0x01D03364 FADD S3, S5, S3
	0x01D03368 FSQRT S6, S3
	0x01D0336C FDIV S9, S0, S6
	0x01D03370 FDIV S10, S1, S6
	0x01D03374 FDIV S11, S2, S6
	0x01D03378 ADD X0, X31, 0x30
	0x01D0337C MOV V0.16B, V14.16B
	0x01D03380 MOV V1.16B, V15.16B
	0x01D03384 MOV V2.16B, V8.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2521000
	006 Move W8, [X21+1846]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x224B000
	014 Move X0, [X0+1144]
	015 Call 0x1B6F7F0
	016 Move W8, 1
	017 Move [X21+1846], W8
	018 Compare X19, 0
	019 JumpIfEqual {38}
	020 Move X8, 0x224B000
	021 Move X8, [X8+1144]
	022 Move X19, [X19+16]
	023 Move X20, [X20+16]
	024 Move X0, [X8]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1B6F8F8
	029 Move X0, X19
	030 Move X1, X20
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X2, X31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call Object.op_Equality, X0, X1
	037 Return X0
	038 Call 0x1B6FA1C

