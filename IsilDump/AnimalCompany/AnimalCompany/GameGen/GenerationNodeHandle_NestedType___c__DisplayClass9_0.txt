Type: AnimalCompany.GameGen.GenerationNodeHandle/<>c__DisplayClass9_0

Method: System.Void .ctor()

Disassembly:
	0x01E169B8 MOV W0, W20
	0x01E169BC MOV X2, X31

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean <TryGenerate>b__0(System.Collections.Generic.List`1<AnimalCompany.GameGen.NodeGenerationResult> rList)

Disassembly:
	0x01E16B00 MOV X1, X31
	0x01E16B04 MOV X2, X31
	0x01E16B08 BL 0x3C3883C
	0x01E16B0C TBZ X0, 0x0, 0x1E171C8
	0x01E16B10 LDR X0, [X19 + 0x110]
	0x01E16B14 CBZ X0, 0x1E172AC
	0x01E16B18 LDR W8, [X0 + 0x18]
	0x01E16B1C CMP W8, 0x1
	0x01E16B20 B.LT 0x1E171C8
	0x01E16B24 ADRP X8, 0x22E2000
	0x01E16B28 LDR X8, [X8 + 0xC38]
	0x01E16B2C LDR X1, [X8]
	0x01E16B30 ADD X8, X31, 0x18
	0x01E16B34 BL 0x301CB58
	0x01E16B38 ADRP X9, 0xFFFFFFFFFECD4000
	0x01E16B3C LDR V1, [X9 + 0x17C]
	0x01E16B40 ADRP X27, 0x22E2000
	0x01E16B44 ADRP X20, 0x22DD000
	0x01E16B48 ADRP X9, 0xFFFFFFFFFECD4000
	0x01E16B4C LDUR V0, [X31 + 0x18]
	0x01E16B50 LDR X8, [X31 + 0x28]
	0x01E16B54 LDR X27, [X27 + 0xC28]
	0x01E16B58 LDR X20, [X20 + 0x5A8]
	0x01E16B5C STR S1, [X31 + 0x8]
	0x01E16B60 LDR V1, [X9 + 0x44C]
	0x01E16B64 ADRP X28, 0x25C2000
	0x01E16B68 STR V0, [X31 + 0x6]
	0x01E16B6C STR X8, [X31 + 0x70]
	0x01E16B70 STR S1, [X31 + 0xC]
	0x01E16B74 LDR X1, [X27]
	0x01E16B78 ADD X0, X31, 0x60
	0x01E16B7C BL 0x2BC4350
	0x01E16B80 TBZ X0, 0x0, 0x1E171B4
	0x01E16B84 LDR X22, [X31 + 0x70]
	0x01E16B88 CBZ X22, 0x1E172C8
	0x01E16B8C MOV X0, X22
	0x01E16B90 MOV X1, X31
	0x01E16B94 BL 0x3C32E90
	0x01E16B98 CBZ X0, 0x1E172CC
	0x01E16B9C MOV X1, X31
	0x01E16BA0 BL 0x3C3F58C
	0x01E16BA4 STR S0, [X31 + 0x14]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x25C3000
	007 Move W8, [X21+3581]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x22E5000
	015 Move X0, [X0+768]
	016 Call 0x1C17CF4
	017 Move X0, 0x22E5000
	018 Move X0, [X0+776]
	019 Call 0x1C17CF4
	020 Move X0, 0x22E5000
	021 Move X0, [X0+784]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3581], W8
	025 Move X22, 0x22E5000
	026 Move X21, [X20+24]
	027 Move X22, [X22+768]
	028 Compare X21, 0
	029 JumpIfNotEqual {42}
	030 Move X8, 0x22E5000
	031 Move X8, [X8+776]
	032 Move X0, [X8]
	033 Call 0x1C17F10
	034 Move X8, 0x22E5000
	035 Move X8, [X8+784]
	036 Move X1, X20
	037 Move X3, X31
	038 Move X21, X0
	039 Move X2, [X8]
	040 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	041 Move [X20+24], X21
	042 Move X2, [X22]
	043 Move X0, X19
	044 Move X1, X21
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Call Enumerable.Any, X0, X1
	051 Return X0

Method: System.Boolean <TryGenerate>b__1(AnimalCompany.GameGen.NodeGenerationResult r)

Disassembly:
	0x01E16BA8 LDR X0, [X19 + 0xA0]
	0x01E16BAC CBZ X0, 0x1E172C0
	0x01E16BB0 MOV V9.16B, V1.16B
	0x01E16BB4 MOV V10.16B, V2.16B
	0x01E16BB8 MOV X1, X31
	0x01E16BBC BL 0x3C3F58C
	0x01E16BC0 LDRB W8, [X28 + 0x784]
	0x01E16BC4 MOV V11.16B, V0.16B
	0x01E16BC8 MOV V12.16B, V1.16B
	0x01E16BCC MOV V13.16B, V2.16B
	0x01E16BD0 CBNZ W8, 0x1E16BE4
	0x01E16BD4 MOV X0, X20
	0x01E16BD8 BL 0x1C16CF4
	0x01E16BDC MOVZ W8, 0x1
	0x01E16BE0 STRB W8, [X28 + 0x784]
	0x01E16BE4 LDR X0, [X20]
	0x01E16BE8 LDR W8, [X0 + 0xE0]
	0x01E16BEC CBNZ W8, 0x1E16BF4
	0x01E16BF0 BL 0x1C16DFC
	0x01E16BF4 LDR X0, [X19 + 0xA0]
	0x01E16BF8 CBZ X0, 0x1E172C4
	0x01E16BFC MOV X1, X31
	0x01E16C00 BL 0x3C3F58C
	0x01E16C04 LDR W0, [X19 + 0xB4]
	0x01E16C08 MOV V14.16B, V0.16B
	0x01E16C0C MOV V15.16B, V1.16B
	0x01E16C10 MOV V8.16B, V2.16B
	0x01E16C14 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x25C3000
	006 Move W8, [X21+3582]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x22DE000
	014 Move X0, [X0+1432]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3582], W8
	018 Compare X19, 0
	019 JumpIfEqual {38}
	020 Move X8, 0x22DE000
	021 Move X8, [X8+1432]
	022 Move X19, [X19+16]
	023 Move X20, [X20+16]
	024 Move X0, [X8]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Move X1, X20
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X2, X31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call Object.op_Equality, X0, X1
	037 Return X0
	038 Call 0x1C17F20

