Type: AnimalCompany.GameGen.Tile/<>c

Method: System.Void .cctor()

Disassembly:
	0x01CFD814 BL 0x1CFCFAC
	0x01CFD818 STR X23, [X19 + 0x28]
	0x01CFD81C LDR X0, [X25]
	0x01CFD820 BL 0x1B6EA0C
	0x01CFD824 MOV X23, X0
	0x01CFD828 CBZ X22, 0x1CFD848
	0x01CFD82C ADRP X8, 0x2253000
	0x01CFD830 LDR X8, [X8 + 0xC10]
	0x01CFD834 MOV X0, X23
	0x01CFD838 MOV X1, X22
	0x01CFD83C LDR X2, [X8]
	0x01CFD840 BL 0x2D8D07C
	0x01CFD844 B 0x1CFD85C
	0x01CFD848 ADRP X8, 0x2253000
	0x01CFD84C LDR X8, [X8 + 0x7C0]
	0x01CFD850 MOV X0, X23
	0x01CFD854 LDR X1, [X8]
	0x01CFD858 BL 0x2D8CF60
	0x01CFD85C STR X23, [X19 + 0x30]
	0x01CFD860 STR W31, [X19 + 0x20]
	0x01CFD864 LDR X0, [X24]
	0x01CFD868 LDR X22, [X19 + 0x18]
	0x01CFD86C LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x2527000
	005 Move X20, 0x2254000
	006 Move W8, [X19+1819]
	007 Move X20, [X20+2872]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2254000
	013 Move X0, [X0+2872]
	014 Call 0x1B6F7F0
	015 Move W8, 1
	016 Move [X19+1819], W8
	017 Move X0, [X20]
	018 Call 0x1B6FA0C
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x01CFD870 CBNZ W8, 0x1CFD878
	0x01CFD874 BL 0x1B6E8F8

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean <GetRandomSocket>b__4_0(AnimalCompany.GameGen.Socket x)

Disassembly:
	0x01CFD878 MOV X0, X22
	0x01CFD87C MOV X1, X31
	0x01CFD880 MOV X2, X31
	0x01CFD884 BL 0x3AA0AF0
	0x01CFD888 TBNZ X0, 0x0, 0x1CFD954
	0x01CFD88C ADRP X22, 0x2253000

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {7}
	004 Move W0, [X1+36]
	005 Move X30, [X31+16]
	006 Return X0
	007 Call 0x1B6FA1C

