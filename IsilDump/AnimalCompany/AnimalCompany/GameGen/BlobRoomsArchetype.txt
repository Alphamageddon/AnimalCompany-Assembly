Type: AnimalCompany.GameGen.BlobRoomsArchetype

Method: System.String get_NodeTitle()

Disassembly:
	0x01CF53F8 BL 0x1B6EA1C
	0x01CF53FC BL 0x1B6EA1C
	0x01CF5400 MOV X0, X24
	0x01CF5404 BL 0x1B6EA14
	0x01CF5408 MOV X27, X31
	0x01CF540C B 0x1CF5414
	0x01CF5410 MOV X19, X0
	0x01CF5414 ADRP X8, 0x225B000
	0x01CF5418 LDR X8, [X8 + 0x730]
	0x01CF541C LDR X1, [X8]
	0x01CF5420 ADD X0, X31, 0xE0
	0x01CF5424 BL 0x2A14F2C
	0x01CF5428 CBZ X27, 0x1CF54C0
	0x01CF542C MOV X0, X27
	0x01CF5430 BL 0x1B6EA14
	0x01CF5434 MOV X26, X1
	0x01CF5438 MOV X23, X0
	0x01CF543C B 0x1CF53C8
	0x01CF5440 B 0x1CF5454
	0x01CF5444 B 0x1CF5454
	0x01CF5448 B 0x1CF5454
	0x01CF544C B 0x1CF5454

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x252F000
	006 Move X20, 0x225C000
	007 Move W8, [X21+1765]
	008 Move X20, [X20+1816]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x225C000
	015 Move X0, [X0+1816]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X21+1765], W8
	019 Add X19, X19, 40
	020 Move X0, [X19]
	021 Move X1, X31
	022 Call String.IsNullOrEmpty, X0
	023 And W31, W0, 1
	024 NotImplemented "Instruction CSEL not yet implemented."
	025 Move X0, [X8]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.String get_NodeIcon()

Disassembly:
	0x01CF5450 B 0x1CF5454
	0x01CF5454 ADRP X29, 0x2258000
	0x01CF5458 ADRP X19, 0x225B000
	0x01CF545C LDR X29, [X29 + 0x478]
	0x01CF5460 LDR X19, [X19 + 0x780]
	0x01CF5464 CMP W1, 0x1
	0x01CF5468 B.NE 0x1CF5498
	0x01CF546C BL 0x3D19840
	0x01CF5470 LDR X24, [X0]
	0x01CF5474 BL 0x3D19850
	0x01CF5478 ADRP X8, 0x225B000
	0x01CF547C LDR X8, [X8 + 0x740]
	0x01CF5480 ADD X0, X31, 0x150
	0x01CF5484 LDR X1, [X8]
	0x01CF5488 BL 0x2A14F2C
	0x01CF548C CBZ X24, 0x1CF48B8
	0x01CF5490 MOV X0, X24
	0x01CF5494 BL 0x1B6EA14
	0x01CF5498 MOV X19, X0
	0x01CF549C MOV X24, X31
	0x01CF54A0 B 0x1CF54A8
	0x01CF54A4 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x252F000
	005 Move X19, 0x225C000
	006 Move W8, [X20+1766]
	007 Move X19, [X19+1824]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x225C000
	013 Move X0, [X0+1824]
	014 Call 0x1B6F7F0
	015 Move W8, 1
	016 Move [X20+1766], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1B6F8F8
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+16]
	027 Move X30, [X31+32]
	028 Return X0

Method: AnimalCompany.GameGen.NodeGenerationResponse Generate(AnimalCompany.GameGen.Socket source, AnimalCompany.GameGen.Generator generator)

Disassembly:
	0x01CF54A8 ADRP X8, 0x225B000
	0x01CF54AC LDR X8, [X8 + 0x740]
	0x01CF54B0 LDR X1, [X8]
	0x01CF54B4 ADD X0, X31, 0x150
	0x01CF54B8 BL 0x2A14F2C
	0x01CF54BC CBNZ X24, 0x1CF54C8
	0x01CF54C0 MOV X0, X19
	0x01CF54C4 BL 0x1C8418C
	0x01CF54C8 MOV X0, X24
	0x01CF54CC BL 0x1B6EA14
	0x01CF54D0 BL 0x18F46A8
	0x01CF54D4 SUB X31, X31, 0xD0
	0x01CF54D8 STR D12, [X31 + 0x60]
	0x01CF54DC STP D11, D10, [X31 + 0x68]
	0x01CF54E0 STP D9, D8, [X31 + 0x78]
	0x01CF54E4 STR X30, [X31 + 0x88]
	0x01CF54E8 STP X26, X25, [X31 + 0x90]
	0x01CF54EC STP X24, X23, [X31 + 0xA0]
	0x01CF54F0 STP X22, X21, [X31 + 0xB0]
	0x01CF54F4 STP X20, X19, [X31 + 0xC0]
	0x01CF54F8 ADRP X20, 0x252E000
	0x01CF54FC LDRB W8, [X20 + 0x6E9]
	0x01CF5500 MOV V8.16B, V0.16B
	0x01CF5504 MOV X19, X0
	0x01CF5508 TBNZ X8, 0x0, 0x1CF5574
	0x01CF550C ADRP X0, 0x2258000
	0x01CF5510 LDR X0, [X0 + 0x8B8]
	0x01CF5514 BL 0x1B6E7F0
	0x01CF5518 ADRP X0, 0x225B000
	0x01CF551C LDR X0, [X0 + 0x738]
	0x01CF5520 BL 0x1B6E7F0
	0x01CF5524 ADRP X0, 0x225B000
	0x01CF5528 LDR X0, [X0 + 0x758]
	0x01CF552C BL 0x1B6E7F0
	0x01CF5530 ADRP X0, 0x225B000
	0x01CF5534 LDR X0, [X0 + 0x770]
	0x01CF5538 BL 0x1B6E7F0
	0x01CF553C ADRP X0, 0x225B000
	0x01CF5540 LDR X0, [X0 + 0x7A0]
	0x01CF5544 BL 0x1B6E7F0
	0x01CF5548 ADRP X0, 0x225B000
	0x01CF554C LDR X0, [X0 + 0x818]
	0x01CF5550 BL 0x1B6E7F0
	0x01CF5554 ADRP X0, 0x225B000
	0x01CF5558 LDR X0, [X0 + 0x820]
	0x01CF555C BL 0x1B6E7F0
	0x01CF5560 ADRP X0, 0x225B000
	0x01CF5564 LDR X0, [X0 + 0x828]
	0x01CF5568 BL 0x1B6E7F0
	0x01CF556C MOVZ W8, 0x1
	0x01CF5570 STRB W8, [X20 + 0x6E9]
	0x01CF5574 MOVI V0.2D, 0x0
	0x01CF5578 STR X31, [X31 + 0x50]
	0x01CF557C STP V0, V0, [X31 + 0x30]
	0x01CF5580 LDR X0, [X19 + 0x40]
	0x01CF5584 CBZ X0, 0x1CF575C
	0x01CF5588 ADRP X26, 0x225B000
	0x01CF558C LDR X26, [X26 + 0x7A0]
	0x01CF5590 ADRP X25, 0x225B000
	0x01CF5594 LDR X25, [X25 + 0x758]
	0x01CF5598 ADRP X24, 0x2258000
	0x01CF559C LDR X1, [X26]
	0x01CF55A0 ADRP X23, 0x225B000
	0x01CF55A4 ADRP X22, 0x225B000
	0x01CF55A8 LDR X24, [X24 + 0x8B8]
	0x01CF55AC LDR X23, [X23 + 0x828]
	0x01CF55B0 LDR X22, [X22 + 0x738]
	0x01CF55B4 ADD X8, X31, 0x8
	0x01CF55B8 BL 0x2ED40B0
	0x01CF55BC LDUR V0, [X31 + 0x8]
	0x01CF55C0 LDUR V1, [X31 + 0x18]
	0x01CF55C4 LDR X8, [X31 + 0x28]
	0x01CF55C8 FMOV S10, W31
	0x01CF55CC FMOV S11, 1
	0x01CF55D0 STP V0, V1, [X31 + 0x30]
	0x01CF55D4 STR X8, [X31 + 0x50]
	0x01CF55D8 FMOV S9, W31
	0x01CF55DC LDR X1, [X25]
	0x01CF55E0 ADD X0, X31, 0x30
	0x01CF55E4 BL 0x2A22528
	0x01CF55E8 TBZ X0, 0x0, 0x1CF561C
	0x01CF55EC LDR X0, [X31 + 0x50]
	0x01CF55F0 CBZ X0, 0x1CF5754
	0x01CF55F4 LDR V12, [X31 + 0x48]
	0x01CF55F8 MOV V0.16B, V8.16B
	0x01CF55FC MOV X1, X31
	0x01CF5600 BL 0x3A699CC
	0x01CF5604 FMIN S1, S0, S11
	0x01CF5608 FCMP S0, 0x0
	0x01CF560C FCSEL S0, S1, S10, PL
	0x01CF5610 FMUL S0, S12, S0
	0x01CF5614 FADD S9, S9, S0
	0x01CF5618 B 0x1CF55DC
	0x01CF561C LDR X1, [X22]
	0x01CF5620 ADD X0, X31, 0x30
	0x01CF5624 BL 0x2A22524
	0x01CF5628 FMOV S0, W31
	0x01CF562C MOV V1.16B, V9.16B
	0x01CF5630 MOV X0, X31
	0x01CF5634 FMOV S10, W31
	0x01CF5638 BL 0x3A98CD0
	0x01CF563C LDR X0, [X19 + 0x40]
	0x01CF5640 CBZ X0, 0x1CF575C
	0x01CF5644 LDR X1, [X26]
	0x01CF5648 ADD X8, X31, 0x8
	0x01CF564C MOV V9.16B, V0.16B
	0x01CF5650 BL 0x2ED40B0
	0x01CF5654 LDUR V0, [X31 + 0x8]
	0x01CF5658 LDUR V1, [X31 + 0x18]
	0x01CF565C LDR X8, [X31 + 0x28]
	0x01CF5660 FMOV S11, 1
	0x01CF5664 STP V0, V1, [X31 + 0x30]
	0x01CF5668 STR X8, [X31 + 0x50]
	0x01CF566C LDR X1, [X25]
	0x01CF5670 ADD X0, X31, 0x30
	0x01CF5674 BL 0x2A22528
	0x01CF5678 TBZ X0, 0x0, 0x1CF56B8
	0x01CF567C LDR X0, [X31 + 0x50]
	0x01CF5680 CBZ X0, 0x1CF5758
	0x01CF5684 LDR X20, [X31 + 0x40]
	0x01CF5688 LDR V12, [X31 + 0x48]
	0x01CF568C MOV V0.16B, V8.16B
	0x01CF5690 MOV X1, X31
	0x01CF5694 BL 0x3A699CC
	0x01CF5698 FMIN S1, S0, S11
	0x01CF569C FCMP S0, 0x0
	0x01CF56A0 FCSEL S0, S1, S10, PL
	0x01CF56A4 FMUL S0, S12, S0
	0x01CF56A8 FCMP S9, S0
	0x01CF56AC B.MI 0x1CF5714
	0x01CF56B0 FSUB S9, S9, S0
	0x01CF56B4 B 0x1CF566C
	0x01CF56B8 LDR X1, [X22]
	0x01CF56BC ADD X0, X31, 0x30
	0x01CF56C0 BL 0x2A22524
	0x01CF56C4 LDR X0, [X24]
	0x01CF56C8 LDR W8, [X0 + 0xE0]
	0x01CF56CC CBNZ W8, 0x1CF56D4
	0x01CF56D0 BL 0x1B6E8F8
	0x01CF56D4 LDR X0, [X23]
	0x01CF56D8 MOV X1, X31
	0x01CF56DC BL 0x3A6F5F8
	0x01CF56E0 LDR X0, [X19 + 0x40]
	0x01CF56E4 CBZ X0, 0x1CF575C
	0x01CF56E8 LDR W8, [X0 + 0x18]
	0x01CF56EC CMP W8, 0x0
	0x01CF56F0 B.LE 0x1CF5724
	0x01CF56F4 ADRP X8, 0x225B000
	0x01CF56F8 LDR X8, [X8 + 0x820]
	0x01CF56FC MOV W1, W31
	0x01CF5700 LDR X2, [X8]
	0x01CF5704 ADD X8, X31, 0x8
	0x01CF5708 BL 0x2ED2E74
	0x01CF570C LDR X20, [X31 + 0x8]
	0x01CF5710 B 0x1CF5728
	0x01CF5714 LDR X1, [X22]
	0x01CF5718 ADD X0, X31, 0x30
	0x01CF571C BL 0x2A22524
	0x01CF5720 B 0x1CF5728
	0x01CF5724 MOV X20, X31
	0x01CF5728 MOV X0, X20
	0x01CF572C LDP X20, X19, [X31 + 0xC0]
	0x01CF5730 LDP X22, X21, [X31 + 0xB0]
	0x01CF5734 LDP X24, X23, [X31 + 0xA0]
	0x01CF5738 LDP X26, X25, [X31 + 0x90]
	0x01CF573C LDR X30, [X31 + 0x88]
	0x01CF5740 LDP D9, D8, [X31 + 0x78]
	0x01CF5744 LDP D11, D10, [X31 + 0x68]
	0x01CF5748 LDR V12, [X31 + 0x60]
	0x01CF574C ADD X31, X31, 0xD0
	0x01CF5750 RET
	0x01CF5754 BL 0x1B6EA1C
	0x01CF5758 BL 0x1B6EA1C
	0x01CF575C BL 0x1B6EA1C
	0x01CF5760 B 0x1CF5768
	0x01CF5764 B 0x1CF5768
	0x01CF5768 MOV X20, X0
	0x01CF576C CMP W1, 0x1
	0x01CF5770 B.NE 0x1CF5798
	0x01CF5774 MOV X0, X20
	0x01CF5778 BL 0x3D19840
	0x01CF577C LDR X21, [X0]
	0x01CF5780 BL 0x3D19850
	0x01CF5784 LDR X1, [X22]
	0x01CF5788 ADD X0, X31, 0x30
	0x01CF578C BL 0x2A22524
	0x01CF5790 CBZ X21, 0x1CF56C4
	0x01CF5794 B 0x1CF57F0
	0x01CF5798 MOV X21, X31
	0x01CF579C B 0x1CF57A4
	0x01CF57A0 MOV X20, X0
	0x01CF57A4 LDR X1, [X22]
	0x01CF57A8 ADD X0, X31, 0x30
	0x01CF57AC BL 0x2A22524
	0x01CF57B0 CBZ X21, 0x1CF5814
	0x01CF57B4 MOV X0, X21
	0x01CF57B8 BL 0x1B6EA14
	0x01CF57BC B 0x1CF57C4
	0x01CF57C0 B 0x1CF57C4
	0x01CF57C4 MOV X20, X0
	0x01CF57C8 CMP W1, 0x1
	0x01CF57CC B.NE 0x1CF57F8
	0x01CF57D0 MOV X0, X20
	0x01CF57D4 BL 0x3D19840
	0x01CF57D8 LDR X21, [X0]
	0x01CF57DC BL 0x3D19850
	0x01CF57E0 LDR X1, [X22]
	0x01CF57E4 ADD X0, X31, 0x30
	0x01CF57E8 BL 0x2A22524
	0x01CF57EC CBZ X21, 0x1CF5628
	0x01CF57F0 MOV X0, X21
	0x01CF57F4 BL 0x1B6EA14
	0x01CF57F8 MOV X21, X31
	0x01CF57FC B 0x1CF5804
	0x01CF5800 MOV X20, X0
	0x01CF5804 LDR X1, [X22]
	0x01CF5808 ADD X0, X31, 0x30
	0x01CF580C BL 0x2A22524
	0x01CF5810 CBNZ X21, 0x1CF581C
	0x01CF5814 MOV X0, X20
	0x01CF5818 BL 0x1C8418C
	0x01CF581C MOV X0, X21
	0x01CF5820 BL 0x1B6EA14
	0x01CF5824 BL 0x18F46A8
	0x01CF5828 SUB X31, X31, 0x130
	0x01CF582C STP D9, D8, [X31 + 0xC0]
	0x01CF5830 STR X29, [X31 + 0xD0]
	0x01CF5834 STP X30, X27, [X31 + 0xE0]
	0x01CF5838 STP X26, X25, [X31 + 0xF0]
	0x01CF583C STP X24, X23, [X31 + 0x100]
	0x01CF5840 STP X22, X21, [X31 + 0x110]
	0x01CF5844 STP X20, X19, [X31 + 0x120]
	0x01CF5848 ADRP X24, 0x252E000
	0x01CF584C LDRB W8, [X24 + 0x6E8]
	0x01CF5850 MOV X19, X4
	0x01CF5854 MOV X22, X3
	0x01CF5858 MOV X23, X2
	0x01CF585C MOV X20, X1
	0x01CF5860 MOV X21, X0
	0x01CF5864 TBNZ X8, 0x0, 0x1CF58A0
	0x01CF5868 ADRP X0, 0x225B000
	0x01CF586C LDR X0, [X0 + 0x830]
	0x01CF5870 BL 0x1B6E7F0
	0x01CF5874 ADRP X0, 0x225B000
	0x01CF5878 LDR X0, [X0 + 0x838]
	0x01CF587C BL 0x1B6E7F0
	0x01CF5880 ADRP X0, 0x225B000
	0x01CF5884 LDR X0, [X0 + 0x840]
	0x01CF5888 BL 0x1B6E7F0
	0x01CF588C ADRP X0, 0x225B000
	0x01CF5890 LDR X0, [X0 + 0x848]
	0x01CF5894 BL 0x1B6E7F0
	0x01CF5898 MOVZ W8, 0x1
	0x01CF589C STRB W8, [X24 + 0x6E8]
	0x01CF58A0 MOVI V0.2D, 0x0
	0x01CF58A4 STR X31, [X31 + 0xB0]
	0x01CF58A8 STP V0, V0, [X31 + 0x90]
	0x01CF58AC CBZ X23, 0x1CF5AD4
	0x01CF58B0 ADRP X27, 0x225B000
	0x01CF58B4 LDR X27, [X27 + 0x848]
	0x01CF58B8 ADRP X26, 0x225B000
	0x01CF58BC ADRP X25, 0x225B000
	0x01CF58C0 ADD X8, X31, 0x68
	0x01CF58C4 LDR X1, [X27]
	0x01CF58C8 LDR X26, [X26 + 0x838]
	0x01CF58CC LDR X25, [X25 + 0x830]
	0x01CF58D0 MOV X0, X23
	0x01CF58D4 BL 0x2D8E68C
	0x01CF58D8 ADRP X9, 0xFFFFFFFFFEDB4000
	0x01CF58DC ADRP X10, 0xFFFFFFFFFEDB4000
	0x01CF58E0 LDUR V0, [X31 + 0x68]
	0x01CF58E4 LDUR V1, [X31 + 0x78]
	0x01CF58E8 LDR X8, [X31 + 0x88]
	0x01CF58EC LDR V9, [X9 + 0x934]
	0x01CF58F0 LDR V8, [X10 + 0xD08]
	0x01CF58F4 STP V0, V1, [X31 + 0x90]
	0x01CF58F8 STR X8, [X31 + 0xB0]
	0x01CF58FC LDR X1, [X26]
	0x01CF5900 ADD X0, X31, 0x90
	0x01CF5904 BL 0x2A079C8
	0x01CF5908 TBZ X0, 0x0, 0x1CF59B4
	0x01CF590C LDP S0, S1, [X31 + 0xA0]
	0x01CF5910 LDP S6, S7, [X19]
	0x01CF5914 LDP S2, S3, [X31 + 0xA8]
	0x01CF5918 LDR V16, [X19 + 0x8]
	0x01CF591C LDP S5, S4, [X31 + 0xB0]
	0x01CF5920 FSUB S6, S0, S6
	0x01CF5924 FSUB S7, S1, S7
	0x01CF5928 FSUB S16, S2, S16
	0x01CF592C FMUL S6, S6, S6
	0x01CF5930 FMUL S7, S7, S7
	0x01CF5934 FADD S6, S6, S7
	0x01CF5938 FMUL S7, S16, S16
	0x01CF593C FADD S6, S7, S6
	0x01CF5940 FCMP S6, S9
	0x01CF5944 B.PL 0x1CF5978
	0x01CF5948 LDP S6, S7, [X19 + 0xC]
	0x01CF594C LDR V16, [X19 + 0x14]
	0x01CF5950 FSUB S6, S3, S6
	0x01CF5954 FSUB S7, S5, S7
	0x01CF5958 FSUB S16, S4, S16
	0x01CF595C FMUL S6, S6, S6
	0x01CF5960 FMUL S7, S7, S7
	0x01CF5964 FADD S6, S7, S6
	0x01CF5968 FMUL S7, S16, S16
	0x01CF596C FADD S6, S7, S6
	0x01CF5970 FCMP S6, S9
	0x01CF5974 B.MI 0x1CF58FC
	0x01CF5978 LDR V6, [X20]
	0x01CF597C LDR X8, [X20 + 0x10]
	0x01CF5980 STP S0, S1, [X31 + 0x50]
	0x01CF5984 ADD X1, X31, 0x50
	0x01CF5988 ADD X2, X31, 0x30
	0x01CF598C MOV X0, X21
	0x01CF5990 MOV V0.16B, V8.16B
	0x01CF5994 STP S2, S3, [X31 + 0x58]
	0x01CF5998 STR X8, [X31 + 0x40]
	0x01CF599C STR V6, [X31 + 0x3]
	0x01CF59A0 STP S5, S4, [X31 + 0x60]
	0x01CF59A4 BL 0x1CF5B9C
	0x01CF59A8 TBZ X0, 0x0, 0x1CF58FC
	0x01CF59AC MOV W19, W31
	0x01CF59B0 B 0x1CF5AA0
	0x01CF59B4 LDR X1, [X25]
	0x01CF59B8 ADD X0, X31, 0x90
	0x01CF59BC BL 0x2A079C4
	0x01CF59C0 CBZ X22, 0x1CF5AD4
	0x01CF59C4 LDR X1, [X27]
	0x01CF59C8 ADD X8, X31, 0x68
	0x01CF59CC MOV X0, X22
	0x01CF59D0 BL 0x2D8E68C
	0x01CF59D4 LDUR V0, [X31 + 0x68]
	0x01CF59D8 LDUR V1, [X31 + 0x78]
	0x01CF59DC LDR X8, [X31 + 0x88]
	0x01CF59E0 STP V0, V1, [X31 + 0x90]
	0x01CF59E4 STR X8, [X31 + 0xB0]
	0x01CF59E8 LDR X1, [X26]
	0x01CF59EC ADD X0, X31, 0x90
	0x01CF59F0 BL 0x2A079C8
	0x01CF59F4 MOV W22, W0
	0x01CF59F8 TBZ X0, 0x0, 0x1CF5A9C
	0x01CF59FC LDP S0, S1, [X31 + 0xA0]
	0x01CF5A00 LDP S6, S7, [X19]
	0x01CF5A04 LDP S2, S3, [X31 + 0xA8]
	0x01CF5A08 LDR V16, [X19 + 0x8]
	0x01CF5A0C LDP S5, S4, [X31 + 0xB0]
	0x01CF5A10 FSUB S6, S0, S6
	0x01CF5A14 FSUB S7, S1, S7
	0x01CF5A18 FSUB S16, S2, S16
	0x01CF5A1C FMUL S6, S6, S6
	0x01CF5A20 FMUL S7, S7, S7
	0x01CF5A24 FADD S6, S6, S7
	0x01CF5A28 FMUL S7, S16, S16
	0x01CF5A2C FADD S6, S7, S6
	0x01CF5A30 FCMP S6, S9
	0x01CF5A34 B.PL 0x1CF5A68
	0x01CF5A38 LDP S6, S7, [X19 + 0xC]
	0x01CF5A3C LDR V16, [X19 + 0x14]
	0x01CF5A40 FSUB S6, S3, S6
	0x01CF5A44 FSUB S7, S5, S7
	0x01CF5A48 FSUB S16, S4, S16
	0x01CF5A4C FMUL S6, S6, S6
	0x01CF5A50 FMUL S7, S7, S7
	0x01CF5A54 FADD S6, S7, S6
	0x01CF5A58 FMUL S7, S16, S16
	0x01CF5A5C FADD S6, S7, S6
	0x01CF5A60 FCMP S6, S9
	0x01CF5A64 B.MI 0x1CF59E8
	0x01CF5A68 LDR V6, [X20]
	0x01CF5A6C LDR X8, [X20 + 0x10]
	0x01CF5A70 STP S0, S1, [X31 + 0x18]
	0x01CF5A74 ADD X1, X31, 0x18
	0x01CF5A78 ADD X2, X31, 0x0
	0x01CF5A7C MOV X0, X21
	0x01CF5A80 MOV V0.16B, V8.16B
	0x01CF5A84 STP S2, S3, [X31 + 0x20]
	0x01CF5A88 STR X8, [X31 + 0x10]
	0x01CF5A8C STR V6, [X31]
	0x01CF5A90 STP S5, S4, [X31 + 0x28]
	0x01CF5A94 BL 0x1CF5B9C
	0x01CF5A98 TBZ X0, 0x0, 0x1CF59E8
	0x01CF5A9C EOR W19, W22, 0x1
	0x01CF5AA0 LDR X1, [X25]
	0x01CF5AA4 ADD X0, X31, 0x90
	0x01CF5AA8 BL 0x2A079C4
	0x01CF5AAC AND W0, W19, 0x1
	0x01CF5AB0 LDP X20, X19, [X31 + 0x120]
	0x01CF5AB4 LDP X22, X21, [X31 + 0x110]
	0x01CF5AB8 LDP X24, X23, [X31 + 0x100]
	0x01CF5ABC LDP X26, X25, [X31 + 0xF0]
	0x01CF5AC0 LDP X30, X27, [X31 + 0xE0]
	0x01CF5AC4 LDR X29, [X31 + 0xD0]
	0x01CF5AC8 LDP D9, D8, [X31 + 0xC0]
	0x01CF5ACC ADD X31, X31, 0x130
	0x01CF5AD0 RET
	0x01CF5AD4 BL 0x1B6EA1C
	0x01CF5AD8 CMP W1, 0x1
	0x01CF5ADC MOV X23, X0
	0x01CF5AE0 B.NE 0x1CF5B0C
	0x01CF5AE4 MOV X0, X23
	0x01CF5AE8 BL 0x3D19840
	0x01CF5AEC LDR X19, [X0]
	0x01CF5AF0 BL 0x3D19850
	0x01CF5AF4 LDR X1, [X25]
	0x01CF5AF8 ADD X0, X31, 0x90
	0x01CF5AFC BL 0x2A079C4
	0x01CF5B00 CBNZ X19, 0x1CF5B14
	0x01CF5B04 MOVZ W19, 0x1
	0x01CF5B08 B 0x1CF5AAC
	0x01CF5B0C MOV X19, X31
	0x01CF5B10 B 0x1CF5B20
	0x01CF5B14 MOV X0, X19
	0x01CF5B18 BL 0x1B6EA14
	0x01CF5B1C MOV X23, X0
	0x01CF5B20 LDR X1, [X25]
	0x01CF5B24 ADD X0, X31, 0x90
	0x01CF5B28 BL 0x2A079C4
	0x01CF5B2C CBZ X19, 0x1CF5B88
	0x01CF5B30 MOV X0, X19
	0x01CF5B34 BL 0x1B6EA14
	0x01CF5B38 CMP W1, 0x1
	0x01CF5B3C MOV X23, X0
	0x01CF5B40 B.NE 0x1CF5B6C
	0x01CF5B44 MOV X0, X23
	0x01CF5B48 BL 0x3D19840
	0x01CF5B4C LDR X24, [X0]
	0x01CF5B50 BL 0x3D19850
	0x01CF5B54 LDR X1, [X25]
	0x01CF5B58 ADD X0, X31, 0x90
	0x01CF5B5C BL 0x2A079C4
	0x01CF5B60 CBZ X24, 0x1CF59C0
	0x01CF5B64 MOV X0, X24
	0x01CF5B68 BL 0x1B6EA14
	0x01CF5B6C MOV X24, X31
	0x01CF5B70 B 0x1CF5B78
	0x01CF5B74 MOV X23, X0
	0x01CF5B78 LDR X1, [X25]
	0x01CF5B7C ADD X0, X31, 0x90
	0x01CF5B80 BL 0x2A079C4
	0x01CF5B84 CBNZ X24, 0x1CF5B90
	0x01CF5B88 MOV X0, X23
	0x01CF5B8C BL 0x1C8418C
	0x01CF5B90 MOV X0, X24
	0x01CF5B94 BL 0x1B6EA14
	0x01CF5B98 BL 0x18F46A8
	0x01CF5B9C LDRB W8, [X0 + 0x3C]
	0x01CF5BA0 CBZ W8, 0x1CF5C50
	0x01CF5BA4 LDR V1, [X1]
	0x01CF5BA8 LDR V3, [X1 + 0xC]
	0x01CF5BAC LDR V2, [X2]
	0x01CF5BB0 LDR V4, [X2 + 0xC]
	0x01CF5BB4 FADD S5, S1, S3
	0x01CF5BB8 FSUB S5, S5, S0
	0x01CF5BBC FSUB S6, S2, S4
	0x01CF5BC0 FCMP S5, S6
	0x01CF5BC4 B.MI 0x1CF5C70
	0x01CF5BC8 LDP S5, S6, [X1 + 0x4]
	0x01CF5BCC LDP S7, S16, [X1 + 0x10]
	0x01CF5BD0 LDP S17, S18, [X2 + 0x4]
	0x01CF5BD4 LDP S19, S20, [X2 + 0x10]
	0x01CF5BD8 FSUB S1, S1, S3
	0x01CF5BDC FADD S2, S2, S4
	0x01CF5BE0 FADD S1, S1, S0
	0x01CF5BE4 FADD S4, S5, S7
	0x01CF5BE8 FCMP S1, S2
	0x01CF5BEC FSUB S2, S17, S19
	0x01CF5BF0 FSUB S5, S5, S7
	0x01CF5BF4 FSUB S4, S4, S0
	0x01CF5BF8 CSET W8, LE
	0x01CF5BFC FADD S3, S6, S16
	0x01CF5C00 FADD S7, S17, S19
	0x01CF5C04 FADD S5, S5, S0
	0x01CF5C08 FCMP S4, S2
	0x01CF5C0C FSUB S1, S18, S20
	0x01CF5C10 FSUB S6, S6, S16
	0x01CF5C14 FSUB S3, S3, S0
	0x01CF5C18 CSET W9, PL
	0x01CF5C1C FCMP S5, S7
	0x01CF5C20 FADD S16, S18, S20
	0x01CF5C24 FADD S0, S6, S0
	0x01CF5C28 AND W8, W8, W9, 0x0
	0x01CF5C2C CSET W9, LE
	0x01CF5C30 FCMP S3, S1
	0x01CF5C34 AND W8, W9, W8, 0x0
	0x01CF5C38 CSET W9, PL
	0x01CF5C3C FCMP S0, S16
	0x01CF5C40 AND W8, W9, W8, 0x0
	0x01CF5C44 CSET W9, LE
	0x01CF5C48 AND W0, W9, W8, 0x0
	0x01CF5C4C RET
	0x01CF5C50 LDR V0, [X2]
	0x01CF5C54 LDR V1, [X1]
	0x01CF5C58 LDR V3, [X1 + 0xC]
	0x01CF5C5C LDR V2, [X2 + 0xC]
	0x01CF5C60 FSUB S4, S1, S3
	0x01CF5C64 FADD S5, S0, S2
	0x01CF5C68 FCMP S4, S5
	0x01CF5C6C B.LS 0x1CF5C78
	0x01CF5C70 MOV W0, W31
	0x01CF5C74 RET
	0x01CF5C78 LDR V4, [X2 + 0x4]
	0x01CF5C7C LDR V5, [X1 + 0x4]
	0x01CF5C80 LDR V6, [X1 + 0x10]
	0x01CF5C84 LDR V7, [X2 + 0x10]
	0x01CF5C88 MOV W0, W31
	0x01CF5C8C FADD S16, S5, S6
	0x01CF5C90 FSUB S17, S4, S7
	0x01CF5C94 FCMP S16, S17
	0x01CF5C98 B.LT 0x1CF5CF0
	0x01CF5C9C FADD S1, S1, S3
	0x01CF5CA0 FSUB S0, S0, S2
	0x01CF5CA4 FCMP S1, S0
	0x01CF5CA8 B.LT 0x1CF5CF0
	0x01CF5CAC FADD S0, S4, S7
	0x01CF5CB0 FSUB S1, S5, S6
	0x01CF5CB4 FCMP S1, S0
	0x01CF5CB8 B.HI 0x1CF5CF0
	0x01CF5CBC LDR V0, [X2 + 0x8]
	0x01CF5CC0 LDR V1, [X2 + 0x14]
	0x01CF5CC4 LDR V2, [X1 + 0x8]
	0x01CF5CC8 LDR V3, [X1 + 0x14]
	0x01CF5CCC FSUB S4, S0, S1
	0x01CF5CD0 FADD S0, S0, S1
	0x01CF5CD4 FSUB S1, S2, S3
	0x01CF5CD8 FADD S5, S2, S3
	0x01CF5CDC FCMP S1, S0
	0x01CF5CE0 CSET W8, LS
	0x01CF5CE4 FCMP S5, S4
	0x01CF5CE8 CSET W9, GE
	0x01CF5CEC AND W0, W8, W9, 0x0
	0x01CF5CF0 RET
	0x01CF5CF4 MOVZ W8, 0x5
	0x01CF5CF8 MOV X1, X31
	0x01CF5CFC STR W8, [X0 + 0x38]
	0x01CF5D00 B 0x3036524
	0x01CF5D04 B 0x1CF5D08
	0x01CF5D08 STP X30, X21, [X31 - 0x20]!
	0x01CF5D0C STP X20, X19, [X31 + 0x10]
	0x01CF5D10 ADRP X21, 0x252E000
	0x01CF5D14 ADRP X20, 0x225B000
	0x01CF5D18 LDRB W8, [X21 + 0x6EB]
	0x01CF5D1C LDR X20, [X20 + 0x850]
	0x01CF5D20 MOV X19, X0
	0x01CF5D24 TBNZ X8, 0x0, 0x1CF5D3C
	0x01CF5D28 ADRP X0, 0x225B000
	0x01CF5D2C LDR X0, [X0 + 0x850]
	0x01CF5D30 BL 0x1B6E7F0
	0x01CF5D34 MOVZ W8, 0x1
	0x01CF5D38 STRB W8, [X21 + 0x6EB]
	0x01CF5D3C LDR X9, [X19 + 0x18]
	0x01CF5D40 LDR X8, [X20]
	0x01CF5D44 CBZ X9, 0x1CF5D70
	0x01CF5D48 LDR X9, [X9]
	0x01CF5D4C LDRB W10, [X8 + 0x130]
	0x01CF5D50 LDRB W11, [X9 + 0x130]
	0x01CF5D54 CMP W11, W10
	0x01CF5D58 B.CC 0x1CF5D70
	0x01CF5D5C LDR X9, [X9 + 0xC8]
	0x01CF5D60 ADD X9, X9, X10, 0x3, LSL
	0x01CF5D64 LDUR X9, [X9 - 0x8]
	0x01CF5D68 CMP X9, X8
	0x01CF5D6C B.EQ 0x1CF5DAC
	0x01CF5D70 LDR X9, [X19 + 0x20]
	0x01CF5D74 CBZ X9, 0x1CF5DA0
	0x01CF5D78 LDR X9, [X9]
	0x01CF5D7C LDRB W10, [X8 + 0x130]
	0x01CF5D80 LDRB W11, [X9 + 0x130]
	0x01CF5D84 CMP W11, W10
	0x01CF5D88 B.CC 0x1CF5DA0
	0x01CF5D8C LDR X9, [X9 + 0xC8]
	0x01CF5D90 ADD X9, X9, X10, 0x3, LSL
	0x01CF5D94 LDUR X9, [X9 - 0x8]
	0x01CF5D98 CMP X9, X8
	0x01CF5D9C B.EQ 0x1CF5DAC
	0x01CF5DA0 FMOV S0, 1
	0x01CF5DA4 FMOV S2, 1
	0x01CF5DA8 B 0x1CF5DB8
	0x01CF5DAC ADRP X8, 0xFFFFFFFFFEDB4000
	0x01CF5DB0 LDR V2, [X8 + 0xB08]
	0x01CF5DB4 FMOV S0, W31
	0x01CF5DB8 LDP X20, X19, [X31 + 0x10]
	0x01CF5DBC FMOV S1, 1
	0x01CF5DC0 FMOV S3, 1
	0x01CF5DC4 LDP X30, X21, [X31], #0x20
	0x01CF5DC8 RET
	0x01CF5DCC LDRB W8, [X0 + 0x28]
	0x01CF5DD0 CMP W8, 0x0
	0x01CF5DD4 CSET W0, EQ
	0x01CF5DD8 RET
	0x01CF5DDC STP X30, X23, [X31 - 0x30]!
	0x01CF5DE0 STP X22, X21, [X31 + 0x10]
	0x01CF5DE4 STP X20, X19, [X31 + 0x20]
	0x01CF5DE8 ADRP X21, 0x252E000
	0x01CF5DEC ADRP X23, 0x2258000
	0x01CF5DF0 LDRB W8, [X21 + 0x6EA]
	0x01CF5DF4 LDR X23, [X23 + 0x478]
	0x01CF5DF8 MOV X19, X1
	0x01CF5DFC MOV X20, X0
	0x01CF5E00 TBNZ X8, 0x0, 0x1CF5E18
	0x01CF5E04 ADRP X0, 0x2258000
	0x01CF5E08 LDR X0, [X0 + 0x478]
	0x01CF5E0C BL 0x1B6E7F0
	0x01CF5E10 MOVZ W8, 0x1
	0x01CF5E14 STRB W8, [X21 + 0x6EA]
	0x01CF5E18 MOV X22, X20
	0x01CF5E1C LDR X21, [X22 + 0x18]!
	0x01CF5E20 LDR X0, [X23]
	0x01CF5E24 LDR W8, [X0 + 0xE0]
	0x01CF5E28 CBNZ W8, 0x1CF5E30
	0x01CF5E2C BL 0x1B6E8F8
	0x01CF5E30 MOV X0, X21
	0x01CF5E34 MOV X1, X19
	0x01CF5E38 MOV X2, X31
	0x01CF5E3C BL 0x3AA0AF0
	0x01CF5E40 ADD X9, X20, 0x20
	0x01CF5E44 TBNZ X0, 0x0, 0x1CF5E7C
	0x01CF5E48 LDR X0, [X23]
	0x01CF5E4C LDR X20, [X9]
	0x01CF5E50 LDR W8, [X0 + 0xE0]
	0x01CF5E54 CBNZ W8, 0x1CF5E5C
	0x01CF5E58 BL 0x1B6E8F8
	0x01CF5E5C MOV X0, X20
	0x01CF5E60 MOV X1, X19
	0x01CF5E64 MOV X2, X31
	0x01CF5E68 BL 0x3AA0AF0
	0x01CF5E6C MOV W8, W0
	0x01CF5E70 MOV X0, X31
	0x01CF5E74 MOV X9, X22
	0x01CF5E78 TBZ X8, 0x0, 0x1CF5E80
	0x01CF5E7C LDR X0, [X9]
	0x01CF5E80 LDP X20, X19, [X31 + 0x20]
	0x01CF5E84 LDP X22, X21, [X31 + 0x10]
	0x01CF5E88 LDP X30, X23, [X31], #0x30
	0x01CF5E8C RET
	0x01CF5E90 MOVZ W8, 0x1
	0x01CF5E94 MOV X1, X31
	0x01CF5E98 STRB W8, [X0 + 0x28]
	0x01CF5E9C B 0x303620C
	0x01CF5EA0 ADRP X8, 0xFFFFFFFFFEDB4000
	0x01CF5EA4 LDR V2, [X8 + 0xB08]
	0x01CF5EA8 FMOV S0, W31
	0x01CF5EAC FMOV S1, 1
	0x01CF5EB0 FMOV S3, 1
	0x01CF5EB4 RET
	0x01CF5EB8 FMOV S0, W31
	0x01CF5EBC FMOV S1, W31
	0x01CF5EC0 FMOV S2, W31
	0x01CF5EC4 FMOV S3, 1
	0x01CF5EC8 RET
	0x01CF5ECC STR X30, [X31 - 0x20]!
	0x01CF5ED0 STP X20, X19, [X31 + 0x10]
	0x01CF5ED4 ADRP X19, 0x252E000
	0x01CF5ED8 ADRP X20, 0x225B000
	0x01CF5EDC LDRB W8, [X19 + 0x6EC]
	0x01CF5EE0 LDR X20, [X20 + 0x858]
	0x01CF5EE4 TBNZ X8, 0x0, 0x1CF5EFC
	0x01CF5EE8 ADRP X0, 0x225B000
	0x01CF5EEC LDR X0, [X0 + 0x858]
	0x01CF5EF0 BL 0x1B6E7F0
	0x01CF5EF4 MOVZ W8, 0x1
	0x01CF5EF8 STRB W8, [X19 + 0x6EC]
	0x01CF5EFC LDR X0, [X20]
	0x01CF5F00 LDP X20, X19, [X31 + 0x10]
	0x01CF5F04 LDR X30, [X31], #0x20
	0x01CF5F08 RET
	0x01CF5F0C STR X30, [X31 - 0x20]!
	0x01CF5F10 STP X20, X19, [X31 + 0x10]
	0x01CF5F14 ADRP X20, 0x252E000
	0x01CF5F18 ADRP X19, 0x225B000
	0x01CF5F1C LDRB W8, [X20 + 0x6ED]
	0x01CF5F20 LDR X19, [X19 + 0x720]
	0x01CF5F24 TBNZ X8, 0x0, 0x1CF5F3C
	0x01CF5F28 ADRP X0, 0x225B000
	0x01CF5F2C LDR X0, [X0 + 0x720]
	0x01CF5F30 BL 0x1B6E7F0
	0x01CF5F34 MOVZ W8, 0x1
	0x01CF5F38 STRB W8, [X20 + 0x6ED]
	0x01CF5F3C LDR X0, [X19]
	0x01CF5F40 LDR W8, [X0 + 0xE0]
	0x01CF5F44 CBNZ W8, 0x1CF5F50
	0x01CF5F48 BL 0x1B6E8F8
	0x01CF5F4C LDR X0, [X19]
	0x01CF5F50 LDR X8, [X0 + 0xB8]
	0x01CF5F54 LDP X20, X19, [X31 + 0x10]
	0x01CF5F58 LDR X0, [X8 + 0x20]
	0x01CF5F5C LDR X30, [X31], #0x20
	0x01CF5F60 RET
	0x01CF5F64 MOVZ W8, 0x3F800000
	0x01CF5F68 MOV X1, X31
	0x01CF5F6C STR W8, [X0 + 0x20]
	0x01CF5F70 B 0x3036524
	0x01CF5F74 SUB X31, X31, 0x90
	0x01CF5F78 STR X30, [X31 + 0x40]
	0x01CF5F7C STP X26, X25, [X31 + 0x50]
	0x01CF5F80 STP X24, X23, [X31 + 0x60]
	0x01CF5F84 STP X22, X21, [X31 + 0x70]
	0x01CF5F88 STP X20, X19, [X31 + 0x80]
	0x01CF5F8C ADRP X23, 0x252E000
	0x01CF5F90 ADRP X22, 0x225B000
	0x01CF5F94 ADRP X19, 0x225B000
	0x01CF5F98 LDRB W8, [X23 + 0x6EE]
	0x01CF5F9C LDR X22, [X22 + 0x860]
	0x01CF5FA0 LDR X19, [X19 + 0x868]
	0x01CF5FA4 MOV X20, X1
	0x01CF5FA8 MOV X21, X0
	0x01CF5FAC TBNZ X8, 0x0, 0x1CF6018
	0x01CF5FB0 ADRP X0, 0x225B000
	0x01CF5FB4 LDR X0, [X0 + 0x870]
	0x01CF5FB8 BL 0x1B6E7F0
	0x01CF5FBC ADRP X0, 0x225B000
	0x01CF5FC0 LDR X0, [X0 + 0x878]
	0x01CF5FC4 BL 0x1B6E7F0
	0x01CF5FC8 ADRP X0, 0x225B000
	0x01CF5FCC LDR X0, [X0 + 0x880]
	0x01CF5FD0 BL 0x1B6E7F0
	0x01CF5FD4 ADRP X0, 0x225B000
	0x01CF5FD8 LDR X0, [X0 + 0x888]
	0x01CF5FDC BL 0x1B6E7F0
	0x01CF5FE0 ADRP X0, 0x225B000
	0x01CF5FE4 LDR X0, [X0 + 0x890]
	0x01CF5FE8 BL 0x1B6E7F0
	0x01CF5FEC ADRP X0, 0x225B000
	0x01CF5FF0 LDR X0, [X0 + 0x868]
	0x01CF5FF4 BL 0x1B6E7F0
	0x01CF5FF8 ADRP X0, 0x225B000
	0x01CF5FFC LDR X0, [X0 + 0x860]
	0x01CF6000 BL 0x1B6E7F0
	0x01CF6004 ADRP X0, 0x2257000
	0x01CF6008 LDR X0, [X0 + 0x478]
	0x01CF600C BL 0x1B6E7F0
	0x01CF6010 MOVZ W8, 0x1
	0x01CF6014 STRB W8, [X23 + 0x6EE]
	0x01CF6018 LDR X0, [X22]
	0x01CF601C STP X31, X31, [X31 + 0x20]
	0x01CF6020 STR X31, [X31 + 0x30]
	0x01CF6024 BL 0x1B6EA0C
	0x01CF6028 LDR X1, [X19]
	0x01CF602C MOV X19, X0
	0x01CF6030 BL 0x2E45D4C
	0x01CF6034 LDR X0, [X21 + 0x20]
	0x01CF6038 CBZ X0, 0x1CF617C
	0x01CF603C ADRP X8, 0x225A000
	0x01CF6040 LDR X8, [X8 + 0x890]
	0x01CF6044 ADRP X24, 0x225A000
	0x01CF6048 LDR X24, [X24 + 0x878]
	0x01CF604C ADRP X25, 0x2257000
	0x01CF6050 LDR X1, [X8]
	0x01CF6054 ADRP X26, 0x225A000
	0x01CF6058 ADRP X23, 0x225A000
	0x01CF605C LDR X25, [X25 + 0x478]
	0x01CF6060 LDR X26, [X26 + 0x888]
	0x01CF6064 LDR X23, [X23 + 0x870]
	0x01CF6068 ADD X8, X31, 0x8
	0x01CF606C BL 0x2E470E0
	0x01CF6070 LDUR V0, [X31 + 0x8]
	0x01CF6074 LDR X8, [X31 + 0x18]
	0x01CF6078 STR V0, [X31 + 0x2]
	0x01CF607C STR X8, [X31 + 0x30]
	0x01CF6080 LDR X1, [X24]
	0x01CF6084 ADD X0, X31, 0x20
	0x01CF6088 BL 0x2A14F30
	0x01CF608C TBZ X0, 0x0, 0x1CF6144
	0x01CF6090 LDR X21, [X31 + 0x30]
	0x01CF6094 CBZ X21, 0x1CF6170
	0x01CF6098 LDR X0, [X25]
	0x01CF609C LDR X22, [X21 + 0x18]
	0x01CF60A0 LDR W8, [X0 + 0xE0]
	0x01CF60A4 CBNZ W8, 0x1CF60AC
	0x01CF60A8 BL 0x1B6E8F8
	0x01CF60AC MOV X0, X22
	0x01CF60B0 MOV X1, X20
	0x01CF60B4 MOV X2, X31
	0x01CF60B8 BL 0x3AA0AF0
	0x01CF60BC TBNZ X0, 0x0, 0x1CF60E8
	0x01CF60C0 LDR X0, [X25]
	0x01CF60C4 LDR X22, [X21 + 0x20]
	0x01CF60C8 LDR W8, [X0 + 0xE0]
	0x01CF60CC CBNZ W8, 0x1CF60D4
	0x01CF60D0 BL 0x1B6E8F8
	0x01CF60D4 MOV X0, X22
	0x01CF60D8 MOV X1, X20
	0x01CF60DC MOV X2, X31
	0x01CF60E0 BL 0x3AA0AF0
	0x01CF60E4 TBZ X0, 0x0, 0x1CF6080
	0x01CF60E8 CBZ X19, 0x1CF6174
	0x01CF60EC LDR W10, [X19 + 0x1C]
	0x01CF60F0 LDR X8, [X19 + 0x10]
	0x01CF60F4 LDR X9, [X26]
	0x01CF60F8 ADD W10, W10, 0x1
	0x01CF60FC STR W10, [X19 + 0x1C]
	0x01CF6100 CBZ X8, 0x1CF6178
	0x01CF6104 LDRSW X10, [X19 + 0x18]
	0x01CF6108 LDR W11, [X8 + 0x18]
	0x01CF610C CMP W10, W11
	0x01CF6110 B.CS 0x1CF6128
	0x01CF6114 ADD W9, W10, 0x1
	0x01CF6118 ADD X8, X8, X10, 0x3, LSL
	0x01CF611C STR W9, [X19 + 0x18]
	0x01CF6120 STR X21, [X8 + 0x20]
	0x01CF6124 B 0x1CF6080
	0x01CF6128 LDR X8, [X9 + 0x20]
	0x01CF612C LDR X8, [X8 + 0xC0]
	0x01CF6130 LDR X2, [X8 + 0x70]
	0x01CF6134 MOV X0, X19
	0x01CF6138 MOV X1, X21
	0x01CF613C BL 0x2E46518
	0x01CF6140 B 0x1CF6080
	0x01CF6144 LDR X1, [X23]
	0x01CF6148 ADD X0, X31, 0x20
	0x01CF614C BL 0x2A14F2C
	0x01CF6150 MOV X0, X19
	0x01CF6154 LDP X20, X19, [X31 + 0x80]
	0x01CF6158 LDP X22, X21, [X31 + 0x70]
	0x01CF615C LDP X24, X23, [X31 + 0x60]
	0x01CF6160 LDP X26, X25, [X31 + 0x50]
	0x01CF6164 LDR X30, [X31 + 0x40]
	0x01CF6168 ADD X31, X31, 0x90
	0x01CF616C RET
	0x01CF6170 BL 0x1B6EA1C
	0x01CF6174 BL 0x1B6EA1C
	0x01CF6178 BL 0x1B6EA1C
	0x01CF617C BL 0x1B6EA1C
	0x01CF6180 B 0x1CF619C
	0x01CF6184 B 0x1CF619C
	0x01CF6188 B 0x1CF619C
	0x01CF618C B 0x1CF619C
	0x01CF6190 B 0x1CF619C
	0x01CF6194 B 0x1CF619C
	0x01CF6198 B 0x1CF619C
	0x01CF619C MOV X20, X0
	0x01CF61A0 CMP W1, 0x1
	0x01CF61A4 B.NE 0x1CF61D0
	0x01CF61A8 MOV X0, X20
	0x01CF61AC BL 0x3D19840
	0x01CF61B0 LDR X21, [X0]
	0x01CF61B4 BL 0x3D19850
	0x01CF61B8 LDR X1, [X23]
	0x01CF61BC ADD X0, X31, 0x20
	0x01CF61C0 BL 0x2A14F2C
	0x01CF61C4 CBZ X21, 0x1CF6150
	0x01CF61C8 MOV X0, X21
	0x01CF61CC BL 0x1B6EA14
	0x01CF61D0 MOV X21, X31
	0x01CF61D4 B 0x1CF61DC
	0x01CF61D8 MOV X20, X0
	0x01CF61DC LDR X1, [X23]
	0x01CF61E0 ADD X0, X31, 0x20
	0x01CF61E4 BL 0x2A14F2C
	0x01CF61E8 CBNZ X21, 0x1CF61F4
	0x01CF61EC MOV X0, X20
	0x01CF61F0 BL 0x1C8418C
	0x01CF61F4 MOV X0, X21
	0x01CF61F8 BL 0x1B6EA14
	0x01CF61FC BL 0x18F46A8
	0x01CF6200 SUB X31, X31, 0x90
	0x01CF6204 STP X30, X23, [X31 + 0x60]
	0x01CF6208 STP X22, X21, [X31 + 0x70]
	0x01CF620C STP X20, X19, [X31 + 0x80]
	0x01CF6210 ADRP X23, 0x252D000
	0x01CF6214 ADRP X21, 0x225A000
	0x01CF6218 ADRP X19, 0x225A000
	0x01CF621C ADRP X20, 0x225A000
	0x01CF6220 ADRP X22, 0x2257000
	0x01CF6224 LDRB W8, [X23 + 0x6EF]
	0x01CF6228 LDR X21, [X21 + 0x898]
	0x01CF622C LDR X19, [X19 + 0x8A0]
	0x01CF6230 LDR X20, [X20 + 0x8A8]
	0x01CF6234 LDR X22, [X22 + 0x560]
	0x01CF6238 TBNZ X8, 0x0, 0x1CF6310
	0x01CF623C ADRP X0, 0x225A000
	0x01CF6240 LDR X0, [X0 + 0x8B0]
	0x01CF6244 BL 0x1B6E7F0
	0x01CF6248 ADRP X0, 0x225A000
	0x01CF624C LDR X0, [X0 + 0x8A8]
	0x01CF6250 BL 0x1B6E7F0
	0x01CF6254 ADRP X0, 0x225A000
	0x01CF6258 LDR X0, [X0 + 0x8B8]
	0x01CF625C BL 0x1B6E7F0
	0x01CF6260 ADRP X0, 0x225A000
	0x01CF6264 LDR X0, [X0 + 0x8A0]
	0x01CF6268 BL 0x1B6E7F0
	0x01CF626C ADRP X0, 0x225A000
	0x01CF6270 LDR X0, [X0 + 0x898]
	0x01CF6274 BL 0x1B6E7F0
	0x01CF6278 ADRP X0, 0x225A000
	0x01CF627C LDR X0, [X0 + 0x8C0]
	0x01CF6280 BL 0x1B6E7F0
	0x01CF6284 ADRP X0, 0x225A000
	0x01CF6288 LDR X0, [X0 + 0x8C8]
	0x01CF628C BL 0x1B6E7F0
	0x01CF6290 ADRP X0, 0x225A000
	0x01CF6294 LDR X0, [X0 + 0x8D0]
	0x01CF6298 BL 0x1B6E7F0
	0x01CF629C ADRP X0, 0x225A000
	0x01CF62A0 LDR X0, [X0 + 0x8D8]
	0x01CF62A4 BL 0x1B6E7F0
	0x01CF62A8 ADRP X0, 0x2257000
	0x01CF62AC LDR X0, [X0 + 0x560]
	0x01CF62B0 BL 0x1B6E7F0
	0x01CF62B4 ADRP X0, 0x225A000
	0x01CF62B8 LDR X0, [X0 + 0x8E0]
	0x01CF62BC BL 0x1B6E7F0
	0x01CF62C0 ADRP X0, 0x225A000
	0x01CF62C4 LDR X0, [X0 + 0x718]
	0x01CF62C8 BL 0x1B6E7F0
	0x01CF62CC ADRP X0, 0x225A000
	0x01CF62D0 LDR X0, [X0 + 0x8E8]
	0x01CF62D4 BL 0x1B6E7F0
	0x01CF62D8 ADRP X0, 0x225A000
	0x01CF62DC LDR X0, [X0 + 0x8F0]
	0x01CF62E0 BL 0x1B6E7F0
	0x01CF62E4 ADRP X0, 0x225A000
	0x01CF62E8 LDR X0, [X0 + 0x8F8]
	0x01CF62EC BL 0x1B6E7F0
	0x01CF62F0 ADRP X0, 0x225A000
	0x01CF62F4 LDR X0, [X0 + 0x900]
	0x01CF62F8 BL 0x1B6E7F0
	0x01CF62FC ADRP X0, 0x225A000
	0x01CF6300 LDR X0, [X0 + 0x858]
	0x01CF6304 BL 0x1B6E7F0
	0x01CF6308 MOVZ W8, 0x1
	0x01CF630C STRB W8, [X23 + 0x6EF]
	0x01CF6310 LDR X0, [X21]
	0x01CF6314 ADRP X23, 0x225A000
	0x01CF6318 ADRP X21, 0x225A000
	0x01CF631C LDR X23, [X23 + 0x858]
	0x01CF6320 LDR X21, [X21 + 0x8E0]
	0x01CF6324 BL 0x1B6EA0C
	0x01CF6328 LDR X1, [X19]
	0x01CF632C MOV X19, X0
	0x01CF6330 BL 0x2D7B894
	0x01CF6334 LDR X0, [X22]
	0x01CF6338 LDR X20, [X20]
	0x01CF633C LDR W8, [X0 + 0xE0]
	0x01CF6340 CBNZ W8, 0x1CF6348
	0x01CF6344 BL 0x1B6E8F8
	0x01CF6348 MOV X0, X20
	0x01CF634C MOV X1, X31
	0x01CF6350 BL 0x31F5D3C
	0x01CF6354 LDR X1, [X23]
	0x01CF6358 LDR X3, [X21]
	0x01CF635C MOV X2, X0
	0x01CF6360 ADD X0, X31, 0x50
	0x01CF6364 STP X31, X31, [X31 + 0x50]
	0x01CF6368 BL 0x25FCCA4
	0x01CF636C CBZ X19, 0x1CF668C
	0x01CF6370 ADRP X20, 0x225A000
	0x01CF6374 LDR X20, [X20 + 0x8B8]
	0x01CF6378 LDR W10, [X19 + 0x1C]
	0x01CF637C LDP X1, X2, [X31 + 0x50]
	0x01CF6380 LDR X8, [X19 + 0x10]
	0x01CF6384 LDR X9, [X20]
	0x01CF6388 ADD W10, W10, 0x1
	0x01CF638C STR W10, [X19 + 0x1C]
	0x01CF6390 CBZ X8, 0x1CF668C
	0x01CF6394 LDRSW X10, [X19 + 0x18]
	0x01CF6398 LDR W11, [X8 + 0x18]
	0x01CF639C ADRP X23, 0x225A000
	0x01CF63A0 ADRP X22, 0x225A000
	0x01CF63A4 LDR X23, [X23 + 0x8B0]
	0x01CF63A8 LDR X22, [X22 + 0x718]
	0x01CF63AC CMP W10, W11
	0x01CF63B0 B.CS 0x1CF63C8
	0x01CF63B4 ADD W9, W10, 0x1
	0x01CF63B8 ADD X8, X8, X10, 0x4, LSL
	0x01CF63BC STR W9, [X19 + 0x18]
	0x01CF63C0 STP X1, X2, [X8 + 0x20]
	0x01CF63C4 B 0x1CF63DC
	0x01CF63C8 LDR X8, [X9 + 0x20]
	0x01CF63CC MOV X0, X19
	0x01CF63D0 LDR X8, [X8 + 0xC0]
	0x01CF63D4 LDR X3, [X8 + 0x70]
	0x01CF63D8 BL 0x2D7C0A0
	0x01CF63DC LDR X0, [X23]
	0x01CF63E0 MOV X1, X31
	0x01CF63E4 BL 0x31F5D3C
	0x01CF63E8 LDR X1, [X22]
	0x01CF63EC LDR X3, [X21]
	0x01CF63F0 MOV X2, X0
	0x01CF63F4 ADD X0, X31, 0x40
	0x01CF63F8 STP X31, X31, [X31 + 0x40]
	0x01CF63FC BL 0x25FCCA4
	0x01CF6400 LDR W10, [X19 + 0x1C]
	0x01CF6404 LDP X1, X2, [X31 + 0x40]
	0x01CF6408 LDR X8, [X19 + 0x10]
	0x01CF640C LDR X9, [X20]
	0x01CF6410 ADD W10, W10, 0x1
	0x01CF6414 STR W10, [X19 + 0x1C]
	0x01CF6418 CBZ X8, 0x1CF668C
	0x01CF641C LDRSW X10, [X19 + 0x18]
	0x01CF6420 LDR W11, [X8 + 0x18]
	0x01CF6424 ADRP X23, 0x225A000
	0x01CF6428 ADRP X22, 0x225A000
	0x01CF642C LDR X23, [X23 + 0x8D0]
	0x01CF6430 LDR X22, [X22 + 0x900]
	0x01CF6434 CMP W10, W11
	0x01CF6438 B.CS 0x1CF6450
	0x01CF643C ADD W9, W10, 0x1
	0x01CF6440 ADD X8, X8, X10, 0x4, LSL
	0x01CF6444 STR W9, [X19 + 0x18]
	0x01CF6448 STP X1, X2, [X8 + 0x20]
	0x01CF644C B 0x1CF6464
	0x01CF6450 LDR X8, [X9 + 0x20]
	0x01CF6454 MOV X0, X19
	0x01CF6458 LDR X8, [X8 + 0xC0]
	0x01CF645C LDR X3, [X8 + 0x70]
	0x01CF6460 BL 0x2D7C0A0
	0x01CF6464 LDR X0, [X23]
	0x01CF6468 MOV X1, X31
	0x01CF646C BL 0x31F5D3C
	0x01CF6470 LDR X1, [X22]
	0x01CF6474 LDR X3, [X21]
	0x01CF6478 MOV X2, X0
	0x01CF647C ADD X0, X31, 0x30
	0x01CF6480 STP X31, X31, [X31 + 0x30]
	0x01CF6484 BL 0x25FCCA4
	0x01CF6488 LDR W10, [X19 + 0x1C]
	0x01CF648C LDP X1, X2, [X31 + 0x30]
	0x01CF6490 LDR X8, [X19 + 0x10]
	0x01CF6494 LDR X9, [X20]
	0x01CF6498 ADD W10, W10, 0x1
	0x01CF649C STR W10, [X19 + 0x1C]
	0x01CF64A0 CBZ X8, 0x1CF668C
	0x01CF64A4 LDRSW X10, [X19 + 0x18]
	0x01CF64A8 LDR W11, [X8 + 0x18]
	0x01CF64AC ADRP X23, 0x225A000
	0x01CF64B0 ADRP X22, 0x225A000
	0x01CF64B4 LDR X23, [X23 + 0x8C8]
	0x01CF64B8 LDR X22, [X22 + 0x8F0]
	0x01CF64BC CMP W10, W11
	0x01CF64C0 B.CS 0x1CF64D8
	0x01CF64C4 ADD W9, W10, 0x1
	0x01CF64C8 ADD X8, X8, X10, 0x4, LSL
	0x01CF64CC STR W9, [X19 + 0x18]
	0x01CF64D0 STP X1, X2, [X8 + 0x20]

ISIL:
	001 Move [X31-160], D15
	002 Move [X31-152], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X29
	010 Move [X31+72], X30
	011 Move [X31+80], X28
	012 Move [X31+88], X27
	013 Move [X31+96], X26
	014 Move [X31+104], X25
	015 Move [X31+112], X24
	016 Move [X31+120], X23
	017 Move [X31+128], X22
	018 Move [X31+136], X21
	019 Move [X31+144], X20
	020 Move [X31+152], X19
	021 Subtract X31, X31, 464
	022 Move [X31+40], X8
	023 Move X22, 0x252F000
	024 Move X19, 0x225C000
	025 Move W8, [X22+1767]
	026 Move X19, [X19+1832]
	027 Move X20, X2
	028 Move X25, X1
	029 Move X21, X0
	030 Add X23, X31, 360
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {136}
	035 Move X0, 0x225C000
	036 Move X0, [X0+1840]
	037 Call 0x1B6F7F0
	038 Move X0, 0x225C000
	039 Move X0, [X0+1848]
	040 Call 0x1B6F7F0
	041 Move X0, 0x225C000
	042 Move X0, [X0+1856]
	043 Call 0x1B6F7F0
	044 Move X0, 0x225C000
	045 Move X0, [X0+1864]
	046 Call 0x1B6F7F0
	047 Move X0, 0x225C000
	048 Move X0, [X0+1872]
	049 Call 0x1B6F7F0
	050 Move X0, 0x225C000
	051 Move X0, [X0+1880]
	052 Call 0x1B6F7F0
	053 Move X0, 0x225C000
	054 Move X0, [X0+1888]
	055 Call 0x1B6F7F0
	056 Move X0, 0x225C000
	057 Move X0, [X0+1896]
	058 Call 0x1B6F7F0
	059 Move X0, 0x225C000
	060 Move X0, [X0+1904]
	061 Call 0x1B6F7F0
	062 Move X0, 0x2259000
	063 Move X0, [X0+2272]
	064 Call 0x1B6F7F0
	065 Move X0, 0x225C000
	066 Move X0, [X0+1912]
	067 Call 0x1B6F7F0
	068 Move X0, 0x225C000
	069 Move X0, [X0+1920]
	070 Call 0x1B6F7F0
	071 Move X0, 0x225C000
	072 Move X0, [X0+1928]
	073 Call 0x1B6F7F0
	074 Move X0, 0x225C000
	075 Move X0, [X0+1936]
	076 Call 0x1B6F7F0
	077 Move X0, 0x225C000
	078 Move X0, [X0+1944]
	079 Call 0x1B6F7F0
	080 Move X0, 0x225C000
	081 Move X0, [X0+1952]
	082 Call 0x1B6F7F0
	083 Move X0, 0x225C000
	084 Move X0, [X0+1960]
	085 Call 0x1B6F7F0
	086 Move X0, 0x225C000
	087 Move X0, [X0+1968]
	088 Call 0x1B6F7F0
	089 Move X0, 0x225C000
	090 Move X0, [X0+1976]
	091 Call 0x1B6F7F0
	092 Move X0, 0x225C000
	093 Move X0, [X0+1984]
	094 Call 0x1B6F7F0
	095 Move X0, 0x225C000
	096 Move X0, [X0+1992]
	097 Call 0x1B6F7F0
	098 Move X0, 0x225C000
	099 Move X0, [X0+2000]
	100 Call 0x1B6F7F0
	101 Move X0, 0x225C000
	102 Move X0, [X0+2008]
	103 Call 0x1B6F7F0
	104 Move X0, 0x225C000
	105 Move X0, [X0+2016]
	106 Call 0x1B6F7F0
	107 Move X0, 0x225C000
	108 Move X0, [X0+2024]
	109 Call 0x1B6F7F0
	110 Move X0, 0x225C000
	111 Move X0, [X0+2032]
	112 Call 0x1B6F7F0
	113 Move X0, 0x225C000
	114 Move X0, [X0+2040]
	115 Call 0x1B6F7F0
	116 Move X0, 0x225C000
	117 Move X0, [X0+1832]
	118 Call 0x1B6F7F0
	119 Move X0, 0x225C000
	120 Move X0, [X0+2048]
	121 Call 0x1B6F7F0
	122 Move X0, 0x2259000
	123 Move X0, [X0+1144]
	124 Call 0x1B6F7F0
	125 Move X0, 0x225C000
	126 Move X0, [X0+2056]
	127 Call 0x1B6F7F0
	128 Move X0, 0x2259000
	129 Move X0, [X0+3080]
	130 Call 0x1B6F7F0
	131 Move X0, 0x225C000
	132 Move X0, [X0+2064]
	133 Call 0x1B6F7F0
	134 Move W8, 1
	135 Move [X22+1767], W8
	136 Move X0, [X19]
	137 NotImplemented "Instruction MOVI not yet implemented."
	138 Move [X31+336], X31
	139 Move [X31+344], X31
	140 Move [X31+352], X31
	141 Move [X31+320], X31
	142 Move [X31+256], X31
	143 Move [X31+264], X31
	144 Move [X31+272], X31
	145 Move [X31+224], X31
	146 Move [X31+232], X31
	147 Move [X31+288], V0
	148 Move [X31+296], V0
	149 Move [X31+240], X31
	150 Move [X31+360], W31
	151 Move [X23+3], W31
	152 Call 0x1B6FA0C
	153 Move X1, X31
	154 Move X19, X0
	155 Call NodeGenerationResult..ctor, X0
	156 Compare X19, 0
	157 JumpIfEqual {1049}
	158 Move X8, 0x225C000
	159 Move X8, [X8+2032]
	160 Move [X19+16], X21
	161 Move [X31+48], X19
	162 Move X19, 0x225C000
	163 Move X0, [X8]
	164 Move X19, [X19+2000]
	165 Call 0x1B6FA0C
	166 Move X1, [X19]
	167 Move X23, X0
	168 Call List`1<WeightedRoomTile>..ctor, X0
	169 Move X0, [X21+48]
	170 Move [X21+64], X23
	171 Compare X0, 0
	172 JumpIfEqual {1049}
	173 Move X8, 0x225C000
	174 Move X8, [X8+1960]
	175 Move X27, 0x225C000
	176 Move X28, 0x225C000
	177 Move X29, 0x225C000
	178 Move X26, 0x225C000
	179 Move X22, 0x225C000
	180 Move X27, [X27+1864]
	181 Move X28, [X28+1952]
	182 Move X29, [X29+1880]
	183 Move X26, [X26+1944]
	184 Move X22, [X22+1848]
	185 Move X1, [X8]
	186 Add X8, X31, 176
	187 Call List`1<Object>.GetEnumerator, X0
	188 Move V0, [X31+11]
	189 Move X8, [X31+192]
	190 Add X9, X31, 288
	191 Add X23, X9, 16
	192 Move W19, 24
	193 Move [X31+21], V0
	194 Move [X31+352], X8
	195 Move X1, [X27]
	196 Add X0, X31, 336
	197 Call Enumerator<Object>.MoveNext, X0
	198 Move TEMP, X0
	199 And TEMP, TEMP, 1
	200 Compare TEMP, 1
	201 JumpIfNotEqual {274}
	202 Move X8, [X31+352]
	203 Compare X8, 0
	204 JumpIfEqual {1066}
	205 Move X0, [X8+24]
	206 Compare X0, 0
	207 JumpIfEqual {1067}
	208 Move X1, [X28]
	209 Add X8, X31, 176
	210 Call List`1<WeightedRoomTile>.GetEnumerator, X0
	211 Move V0, [X31+176]
	212 Move V1, [X31+192]
	213 Move X8, [X31+208]
	214 Move [X31+288], V0
	215 Move [X31+296], V1
	216 Move [X31+320], X8
	217 Move X1, [X29]
	218 Add X0, X31, 288
	219 Call Enumerator<WeightedRoomTile>.MoveNext, X0
	220 Move TEMP, X0
	221 And TEMP, TEMP, 1
	222 Compare TEMP, 1
	223 JumpIfNotEqual {262}
	224 Move X0, [X21+64]
	225 Move X8, [X23+16]
	226 Move V0, [X23]
	227 Move [X31+192], X8
	228 Move [X31+11], V0
	229 Compare X0, 0
	230 JumpIfEqual {268}
	231 Move V0, [X31+11]
	232 Move X8, [X31+192]
	233 Move X10, [X26]
	234 Move [X31+23], V0
	235 Move [X31+384], X8
	236 Move W9, [X0+28]
	237 Move X8, [X0+16]
	238 Add W9, W9, 1
	239 Move [X0+28], W9
	240 Compare X8, 0
	241 JumpIfEqual {269}
	242 NotImplemented "Instruction LDRSW not yet implemented."
	243 Move W11, [X8+24]
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Add W10, W9, 1
	246 Move [X0+24], W10
	247 Move X10, [X31+384]
	248 Move V0, [X31+23]
	249 NotImplemented "Instruction NOP not yet implemented."
	250 NotImplemented "Instruction MADD not yet implemented."
	251 Move [X8+48], X10
	252 Move [X8+2], V0
	253 Move X8, [X10+32]
	254 Move V0, [X31+23]
	255 Move X9, [X31+384]
	256 Move X8, [X8+192]
	257 Move X2, [X8+112]
	258 Move [X31+25], V0
	259 Move [X31+416], X9
	260 Add X1, X31, 400
	261 Call List`1<WeightedRoomTile>.AddWithResize, X0, X1
	262 Move X24, X31
	263 Move X1, [X22]
	264 Add X0, X31, 288
	265 Call Enumerator<WeightedRoomTile>.Dispose, X0
	266 Compare X24, 0
	267 JumpIfEqual {195}
	268 Call 0x1B6FA1C
	269 Call 0x1B6FA1C
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Call 0x3D1A840
	272 Move X24, [X0]
	273 Call 0x3D1A850
	274 Move X8, 0x225C000
	275 Move X8, [X8+1856]
	276 Add X0, X31, 336
	277 Move X1, [X8]
	278 Call Enumerator<Object>.Dispose, X0
	279 Move X29, 0x2259000
	280 Move X19, 0x225C000
	281 Move X29, [X29+1144]
	282 Move X19, [X19+1920]
	283 Move X8, 0x225C000
	284 Move W22, [X21+56]
	285 Move X8, [X8+2040]
	286 Move X0, [X8]
	287 Call 0x1B6FA0C
	288 Move X8, 0x225C000
	289 Move X8, [X8+1992]
	290 Move X24, X0
	291 Move X1, [X8]
	292 Call List`1<Object>..ctor, X0
	293 Compare X24, 0
	294 JumpIfEqual {1049}
	295 Move W10, [X24+28]
	296 Move X8, [X24+16]
	297 Move X9, [X19]
	298 Add W10, W10, 1
	299 Move [X24+28], W10
	300 Compare X8, 0
	301 JumpIfEqual {1049}
	302 NotImplemented "Instruction LDRSW not yet implemented."
	303 Move W11, [X8+24]
	304 NotImplemented "Instruction CMP not yet implemented."
	305 Add W9, W10, 1
	306 Add X8, X8, X10
	307 Move [X24+24], W9
	308 Move [X8+32], X25
	309 Move X8, [X9+32]
	310 Move X0, X24
	311 Move X1, X25
	312 Move X8, [X8+192]
	313 Move X2, [X8+112]
	314 Call List`1<Object>.AddWithResize, X0, X1
	315 Move X8, 0x225C000
	316 Move X8, [X8+2024]
	317 Move X0, [X8]
	318 Call 0x1B6FA0C
	319 Move X8, 0x225C000
	320 Move X8, [X8+1984]
	321 Move X23, X0
	322 Move X1, [X8]
	323 Call List`1<Bounds>..ctor, X0
	324 Move X0, X21
	325 Call BlobRoomsArchetype.get_NodeTitle, X0
	326 Move X8, 0x2259000
	327 Move X8, [X8+3080]
	328 Move X9, 0x225C000
	329 Move X1, X0
	330 Move X3, X31
	331 Move X8, [X8]
	332 Move X9, [X9+2056]
	333 Move X0, X8
	334 Move X2, [X9]
	335 Call String.Concat, X0, X1, X2
	336 Move X8, 0x2259000
	337 Move X8, [X8+2272]
	338 Move X27, X0
	339 Move X8, [X8]
	340 Move X0, X8
	341 Call 0x1B6FA0C
	342 Move X1, X27
	343 Move X2, X31
	344 Move X26, X0
	345 Call GameObject..ctor, X0, X1
	346 Compare X26, 0
	347 JumpIfEqual {1049}
	348 Move X0, X26
	349 Move X1, X31
	350 Call GameObject.get_transform, X0
	351 Compare X0, 0
	352 JumpIfEqual {1049}
	353 Move X1, X31
	354 Move X26, X0
	355 Call Component.get_transform, X0
	356 Compare X25, 0
	357 JumpIfEqual {1049}
	358 Move X27, X0
	359 Move X0, X25
	360 Move X1, X31
	361 Call Component.get_transform, X0
	362 Compare X27, 0
	363 JumpIfEqual {1049}
	364 Move X1, X0
	365 Move X0, X27
	366 Move X2, X31
	367 Call Transform.set_parent, X0, X1
	368 Move X0, X26
	369 Move X1, X31
	370 Call Component.get_transform, X0
	371 Move X19, 0x252F000
	372 Move W8, [X19+1087]
	373 Move X25, X0
	374 Compare W8, 0
	375 JumpIfNotEqual {381}
	376 Move X0, 0x2259000
	377 Move X0, [X0+1152]
	378 Call 0x1B6F7F0
	379 Move W8, 1
	380 Move [X19+1087], W8
	381 Compare X25, 0
	382 JumpIfEqual {1049}
	383 Move X8, 0x2259000
	384 Move X8, [X8+1152]
	385 Move X0, X25
	386 Move X1, X31
	387 Move X8, [X8]
	388 Move X8, [X8+184]
	389 Move S1, [X8+4]
	390 Move S2, [X8+8]
	391 Move V0, [X8]
	392 Call Transform.set_localPosition, X0, X1
	393 Move X0, X26
	394 Move X1, X31
	395 Call Component.get_transform, X0
	396 Move X19, 0x252F000
	397 Move W8, [X19+1108]
	398 Move X25, X0
	399 Compare W8, 0
	400 JumpIfNotEqual {406}
	401 Move X0, 0x225A000
	402 Move X0, [X0+504]
	403 Call 0x1B6F7F0
	404 Move W8, 1
	405 Move [X19+1108], W8
	406 Compare X25, 0
	407 JumpIfEqual {1049}
	408 Move X8, 0x225A000
	409 Move X8, [X8+504]
	410 Move X0, X25
	411 Move X1, X31
	412 Move X8, [X8]
	413 Move X8, [X8+184]
	414 Move S2, [X8+8]
	415 Move S3, [X8+12]
	416 Move S0, [X8]
	417 Move S1, [X8+4]
	418 Call Transform.set_localRotation, X0, X1
	419 Move X0, X26
	420 Move X1, X31
	421 Call Component.get_gameObject, X0
	422 Move X8, [X31+48]
	423 NotImplemented "Instruction CMP not yet implemented."
	424 Move [X31+32], W22
	425 Move [X8+24], X0
	426 Move W8, [X31+32]
	427 Move [X31+36], W31
	428 Move W25, W31
	429 Move [X31+16], X31
	430 NotImplemented "Instruction SCVTF not yet implemented."
	431 Move [X31+28], S0
	432 Move W22, 1
	433 Move W8, [X31+36]
	434 Move V1, [X31+28]
	435 Move W19, W31
	436 NotImplemented "Instruction SCVTF not yet implemented."
	437 NotImplemented "Instruction FDIV not yet implemented."
	438 Move [X31+56], S0
	439 Move W1, [X24+24]
	440 Compare W1, 0
	441 JumpIfEqual {1016}
	442 Move W0, W31
	443 Move X2, X31
	444 Call Random.Range, X0, X1
	445 Move X8, 0x225C000
	446 Move X8, [X8+2016]
	447 Move W1, W0
	448 Move X0, X24
	449 Move X2, [X8]
	450 Call List`1<Object>.get_Item, X0, X1
	451 Move V0, [X31+56]
	452 Move X27, X0
	453 Move X0, X21
	454 Call BlobRoomsArchetype.PickTileWithDepth, X0, V0
	455 Compare X27, 0
	456 JumpIfEqual {1049}
	457 Move X26, X0
	458 Move X0, X27
	459 Move X1, X31
	460 Call Component.get_transform, X0
	461 Compare X0, 0
	462 JumpIfEqual {1049}
	463 Move X1, X31
	464 Call Transform.get_position, X0
	465 Move X0, X27
	466 Move X1, X31
	467 Move V8, V0
	468 Move V9, V1
	469 Move V10, V2
	470 Call Component.get_transform, X0
	471 Compare X0, 0
	472 JumpIfEqual {1049}
	473 Move X1, X31
	474 Call Transform.get_rotation, X0
	475 Move X0, X27
	476 Move X1, X31
	477 Move V11, V0
	478 Move V12, V1
	479 Move V13, V2
	480 Move V14, V3
	481 Call Component.get_transform, X0
	482 Move X8, [X29]
	483 Move X28, X0
	484 Move W9, [X8+224]
	485 Compare W9, 0
	486 JumpIfNotEqual {489}
	487 Move X0, X8
	488 Call 0x1B6F8F8
	489 Move X8, 0x225C000
	490 Move X8, [X8+2048]
	491 Move X0, X26
	492 Move V0, V8
	493 Move V1, V9
	494 Move X2, [X8]
	495 Move V2, V10
	496 Move V3, V11
	497 Move V4, V12
	498 Move V5, V13
	499 Move V6, V14
	500 Move X1, X28
	501 Call 0x2116080, X0, X1, X2, X3
	502 Compare X0, 0
	503 JumpIfEqual {1049}
	504 Move W1, 1
	505 Move X2, X31
	506 Move X28, X0
	507 Call Tile.GetRandomSocket, X0, X1
	508 Compare X0, 0
	509 JumpIfEqual {1049}
	510 Move X1, X31
	511 Move X26, X0
	512 Call Component.get_transform, X0
	513 Compare X0, 0
	514 JumpIfEqual {1049}
	515 Move X1, X31
	516 Call Transform.get_forward, X0
	517 NotImplemented "Instruction FNEG not yet implemented."
	518 NotImplemented "Instruction FNEG not yet implemented."
	519 NotImplemented "Instruction FNEG not yet implemented."
	520 Move X0, X31
	521 Call Quaternion.LookRotation, X0
	522 Move X0, X31
	523 Call Quaternion.Inverse, X0
	524 Move X0, X28
	525 Move X1, X31
	526 Move V11, V0
	527 Move V10, V1
	528 Move V9, V2
	529 Move V12, V3
	530 Call Component.get_transform, X0
	531 Compare X0, 0
	532 JumpIfEqual {1049}
	533 Move X1, X31
	534 Call Transform.get_forward, X0
	535 Move X0, X31
	536 Call Quaternion.LookRotation, X0
	537 Move X0, X28
	538 Move X1, X31
	539 Move V15, V0
	540 Move V14, V1
	541 Move V13, V2
	542 Move V8, V3
	543 Call Component.get_transform, X0
	544 Move X29, X0
	545 Move X0, X28
	546 Move X1, X31
	547 Call Component.get_transform, X0
	548 Compare X0, 0
	549 JumpIfEqual {1049}
	550 Move X1, X31
	551 Call Transform.get_rotation, X0
	552 Compare X29, 0
	553 JumpIfEqual {1049}
	554 Multiply S4, S12, S15
	555 Multiply S5, S11, S8
	556 Multiply S16, S12, S14
	557 Multiply S17, S10, S8
	558 Multiply S21, S11, S15
	559 Multiply S24, S12, S13
	560 Multiply S25, S12, S8
	561 Multiply S26, S9, S8
	562 Multiply S6, S10, S13
	563 Multiply S18, S9, S15
	564 Multiply S20, S11, S14
	565 Multiply S23, S10, S14
	566 Add S4, S4, S5
	567 Add S5, S16, S17
	568 Add S16, S24, S26
	569 Subtract S17, S25, S21
	570 Multiply S7, S9, S14
	571 Multiply S19, S11, S13
	572 Multiply S22, S10, S15
	573 Multiply S27, S9, S13
	574 Add S4, S6, S4
	575 Add S5, S18, S5
	576 Add S6, S20, S16
	577 Subtract S16, S17, S23
	578 Subtract S4, S4, S7
	579 Subtract S5, S5, S19
	580 Subtract S6, S6, S22
	581 Subtract S7, S16, S27
	582 Multiply S16, S7, S3
	583 Multiply S17, S4, S0
	584 Multiply S18, S5, S1
	585 Multiply S19, S6, S2
	586 Multiply S20, S5, S0
	587 Multiply S21, S6, S3
	588 Multiply S22, S7, S2
	589 Multiply S23, S4, S1
	590 Multiply S24, S7, S1
	591 Multiply S1, S6, S1
	592 Multiply S6, S6, S0
	593 Multiply S0, S7, S0
	594 Multiply S7, S4, S2
	595 Multiply S4, S4, S3
	596 Multiply S3, S5, S3
	597 Multiply S5, S5, S2
	598 Subtract S2, S16, S17
	599 Add S16, S21, S22
	600 Add S3, S3, S24
	601 Add S0, S4, S0
	602 Subtract S2, S2, S18
	603 Add S4, S20, S16
	604 Add S7, S7, S3
	605 Add S0, S1, S0
	606 Subtract S3, S2, S19
	607 Subtract S2, S4, S23
	608 Subtract S1, S7, S6
	609 Subtract S0, S0, S5
	610 Move X0, X29
	611 Move X1, X31
	612 Call Transform.set_rotation, X0, X1
	613 Move X0, X28
	614 Move X1, X31
	615 Call Component.get_transform, X0
	616 Compare X0, 0
	617 JumpIfEqual {1049}
	618 Move X1, X31
	619 Call Transform.get_position, X0
	620 Move X0, X26
	621 Move X1, X31
	622 Move V12, V0
	623 Move V9, V1
	624 Move V10, V2
	625 Call Component.get_transform, X0
	626 Compare X0, 0
	627 JumpIfEqual {1049}
	628 Move X1, X31
	629 Call Transform.get_position, X0
	630 Move X0, X27
	631 Move X1, X31
	632 Move V13, V0
	633 Move [X31+72], S2
	634 Move [X31+80], S1
	635 Call Component.get_transform, X0
	636 Compare X0, 0
	637 JumpIfEqual {1049}
	638 Move X1, X31
	639 Move [X31+64], S9
	640 Move [X31+72], S10
	641 Call Transform.get_position, X0
	642 Move X0, X28
	643 Move X1, X31
	644 Move V14, V0
	645 Move V15, V1
	646 Move V9, V2
	647 Call Component.get_transform, X0
	648 Compare X0, 0
	649 JumpIfEqual {1049}
	650 Move X1, X31
	651 Call Transform.get_position, X0
	652 Move X0, X28
	653 Move X1, X31
	654 Move V10, V0
	655 Move V11, V1
	656 Move V8, V2
	657 Call Component.get_transform, X0
	658 Compare X0, 0
	659 JumpIfEqual {1049}
	660 Subtract S0, S12, S13
	661 Move [X31+60], S0
	662 Move V0, [X31+64]
	663 Move V1, [X31+76]
	664 Move X1, X31
	665 Move X29, X0
	666 Subtract S8, S9, S8
	667 Subtract S12, S0, S1
	668 Move S0, [X31+68]
	669 Move S1, [X31+72]
	670 Subtract S9, S15, S11
	671 Subtract S10, S14, S10
	672 Subtract S13, S0, S1
	673 Call Transform.get_position, X0
	674 Move V3, [X31+60]
	675 Add S4, S12, S9
	676 Add S5, S13, S8
	677 Add S1, S4, S1
	678 Add S3, S3, S10
	679 Add S0, S3, S0
	680 Add S2, S5, S2
	681 Move X0, X29
	682 Move X1, X31
	683 Call Transform.set_position, X0, X1
	684 Add X8, X31, 176
	685 Move X0, X28
	686 Move X1, X31
	687 Call Tile.GetWorldBounds, X0
	688 Move V0, [X31+11]
	689 Move X8, [X31+192]
	690 Move [X31+16], V0
	691 Move [X31+272], X8
	692 Move [X31+11], V0
	693 Move [X31+192], X8
	694 Compare X20, 0
	695 JumpIfEqual {1049}
	696 Move X3, [X20+48]
	697 Move X8, [X27+72]
	698 NotImplemented "Instruction LDUR not yet implemented."
	699 Move V1, [X31+11]
	700 Move X9, [X31+192]
	701 Add X1, X31, 144
	702 Add X4, X31, 112
	703 Move X0, X21
	704 Move X2, X23
	705 Move [X31+128], X8
	706 Move [X31+7], V0
	707 Move [X31+9], V1
	708 Move [X31+160], X9
	709 Call BlobRoomsArchetype.ValidateBounds, X0, X1, X2, X3, X4
	710 Move X29, 0x2259000
	711 Move X29, [X29+1144]
	712 Move TEMP, X0
	713 And TEMP, TEMP, 1
	714 Compare TEMP, 1
	715 JumpIfEqual {738}
	716 NotImplemented "Instruction CMP not yet implemented."
	717 Add W8, W25, W19
	718 Add W8, W8, 1
	719 NotImplemented "Instruction CMP not yet implemented."
	720 Move X0, X28
	721 Move X1, X31
	722 Call Component.get_gameObject, X0
	723 Move X8, [X29]
	724 Move X26, X0
	725 Move W9, [X8+224]
	726 Compare W9, 0
	727 JumpIfNotEqual {730}
	728 Move X0, X8
	729 Call 0x1B6F8F8
	730 Move X0, X26
	731 Move X1, X31
	732 Add W19, W19, 1
	733 Call Object.DestroyImmediate, X0
	734 Move TEMP, X22
	735 And TEMP, TEMP, 1
	736 Compare TEMP, 1
	737 JumpIfEqual {439}
	738 Move X8, 0x225C000
	739 Move X8, [X8+2064]
	740 Move X0, X26
	741 Move X2, X31
	742 Move X1, [X8]
	743 Call Object.set_name, X0, X1
	744 Move X8, [X31+48]
	745 Move X0, [X8+32]
	746 Compare X0, 0
	747 JumpIfEqual {1049}
	748 Move X9, 0x225C000
	749 Move W10, [X0+28]
	750 Move X8, [X0+16]
	751 Move X9, [X9+1928]
	752 Add W10, W10, 1
	753 Move X9, [X9]
	754 Move [X0+28], W10
	755 Compare X8, 0
	756 JumpIfEqual {1049}
	757 NotImplemented "Instruction LDRSW not yet implemented."
	758 Move W11, [X8+24]
	759 NotImplemented "Instruction CMP not yet implemented."
	760 Add W9, W10, 1
	761 Add X8, X8, X10
	762 Move [X0+24], W9
	763 Move [X8+32], X28
	764 Move X8, [X9+32]
	765 Move X1, X28
	766 Move X8, [X8+192]
	767 Move X2, [X8+112]
	768 Call List`1<Object>.AddWithResize, X0, X1
	769 Move X0, [X29]
	770 Move W8, [X0+224]
	771 Compare W8, 0
	772 JumpIfNotEqual {774}
	773 Call 0x1B6F8F8
	774 Move X22, [X31+16]
	775 Move X1, X31
	776 Move X2, X31
	777 Move X0, X22
	778 Call Object.op_Equality, X0, X1
	779 Move V0, [X31+16]
	780 Move X8, [X31+272]
	781 And W31, W0, 1
	782 NotImplemented "Instruction CSEL not yet implemented."
	783 Move [X31+16], X22
	784 Move [X31+5], V0
	785 Move [X31+96], X8
	786 Compare X23, 0
	787 JumpIfEqual {1049}
	788 Move V0, [X31+5]
	789 Move X8, [X31+96]
	790 Move X10, 0x225B000
	791 Move [X31+27], V0
	792 Move [X31+448], X8
	793 Move W9, [X23+28]
	794 Move X8, [X23+16]
	795 Move X10, [X10+1936]
	796 Add W9, W9, 1
	797 Move X10, [X10]
	798 Move [X23+28], W9
	799 Compare X8, 0
	800 JumpIfEqual {1049}
	801 NotImplemented "Instruction LDRSW not yet implemented."
	802 Move W11, [X8+24]
	803 Move X22, 0x225B000
	804 Move X22, [X22+1920]
	805 NotImplemented "Instruction CMP not yet implemented."
	806 Add W10, W9, 1
	807 Move [X23+24], W10
	808 Move X10, [X31+448]
	809 Move V0, [X31+27]
	810 Move W11, 24
	811 NotImplemented "Instruction MADD not yet implemented."
	812 Move [X8+48], X10
	813 Move [X8+2], V0
	814 Move X8, [X10+32]
	815 Move V0, [X31+27]
	816 Move X9, [X31+448]
	817 Add X1, X31, 176
	818 Move X8, [X8+192]
	819 Move X0, X23
	820 Move X2, [X8+112]
	821 Move [X31+11], V0
	822 Move [X31+192], X9
	823 Call List`1<Bounds>.AddWithResize, X0, X1
	824 Move X8, 0x225B000
	825 Move X8, [X8+1976]
	826 Move X0, X24
	827 Move X1, X27
	828 Move X2, [X8]
	829 Call List`1<Object>.Remove, X0, X1
	830 Move X0, [X28+56]
	831 Compare X0, 0
	832 JumpIfEqual {1049}
	833 Move X8, 0x225B000
	834 Move X8, [X8+1968]
	835 Add W25, W25, W19
	836 Move X1, [X8]
	837 Add X8, X31, 176
	838 Call List`1<Object>.GetEnumerator, X0
	839 Move V0, [X31+11]
	840 Move X8, [X31+192]
	841 Move X19, 0x225B000
	842 Move [X31+14], V0
	843 Move [X31+240], X8
	844 Move X19, [X19+1872]
	845 Move X1, [X19]
	846 Add X0, X31, 224
	847 Call Enumerator<Object>.MoveNext, X0
	848 Move TEMP, X0
	849 And TEMP, TEMP, 1
	850 Compare TEMP, 1
	851 JumpIfNotEqual {896}
	852 Move X27, [X31+240]
	853 Move V0, [X31+16]
	854 Move X8, [X31+272]
	855 Move [X31+11], V0
	856 Move [X31+192], X8
	857 Compare X27, 0
	858 JumpIfEqual {907}
	859 Move X8, [X31+192]
	860 Move V0, [X31+11]
	861 Move [X27+72], X8
	862 Move [X27+56], V0
	863 Move X0, [X29]
	864 Move W8, [X0+224]
	865 Compare W8, 0
	866 JumpIfNotEqual {868}
	867 Call 0x1B6F8F8
	868 Move X0, X27
	869 Move X1, X26
	870 Move X2, X31
	871 Call Object.op_Inequality, X0, X1
	872 Move TEMP, X0
	873 And TEMP, TEMP, 1
	874 Compare TEMP, 1
	875 JumpIfNotEqual {845}
	876 Move W10, [X24+28]
	877 Move X8, [X24+16]
	878 Move X9, [X22]
	879 Add W10, W10, 1
	880 Move [X24+28], W10
	881 Compare X8, 0
	882 JumpIfEqual {908}
	883 NotImplemented "Instruction LDRSW not yet implemented."
	884 Move W11, [X8+24]
	885 NotImplemented "Instruction CMP not yet implemented."
	886 Add W9, W10, 1
	887 Add X8, X8, X10
	888 Move [X24+24], W9
	889 Move [X8+32], X27
	890 Move X8, [X9+32]
	891 Move X8, [X8+192]
	892 Move X2, [X8+112]
	893 Move X0, X24
	894 Move X1, X27
	895 Call List`1<Object>.AddWithResize, X0, X1
	896 Move X8, 0x225B000
	897 Move X8, [X8+1840]
	898 Add X0, X31, 224
	899 Move X1, [X8]
	900 Call Enumerator<Object>.Dispose, X0
	901 Move W8, [X31+32]
	902 Move W9, [X31+36]
	903 Add W9, W9, 1
	904 NotImplemented "Instruction CMP not yet implemented."
	905 NotImplemented "Instruction CSET not yet implemented."
	906 Move [X31+36], W9
	907 Call 0x1B6FA1C
	908 Call 0x1B6FA1C
	909 Move X19, X0
	910 NotImplemented "Instruction CMP not yet implemented."
	911 Move X0, X19
	912 Call 0x3D1A840
	913 Move X27, [X0]
	914 Call 0x3D1A850
	915 Move X8, 0x225B000
	916 Move X8, [X8+1840]
	917 Add X0, X31, 224
	918 Move X1, [X8]
	919 Call Enumerator<Object>.Dispose, X0
	920 Move X29, 0x2258000
	921 Move X29, [X29+1144]
	922 Compare X27, 0
	923 JumpIfEqual {901}
	924 Move X0, X27
	925 Call 0x1B6FA14
	926 Move X0, X24
	927 Move X1, X31
	928 Call GameGenUtil.GetOuterSockets, X0
	929 Compare X0, 0
	930 JumpIfEqual {1049}
	931 Add X8, X31, 360
	932 NotImplemented "Instruction LDUR not yet implemented."
	933 Move W9, [X31+360]
	934 Move X11, [X31+40]
	935 Move W10, 1
	936 Move [X11], W10
	937 Move [X11+4], W8
	938 Move [X11+1], W9
	939 Move [X11+8], X0
	940 Move [X11+16], X23
	941 Move X8, [X20+24]
	942 Compare X8, 0
	943 JumpIfEqual {1049}
	944 Move W8, [X8+40]
	945 Move X19, [X31+16]
	946 Compare W8, 0
	947 JumpIfEqual {1002}
	948 Move X0, [X29]
	949 Move W8, [X0+224]
	950 Compare W8, 0
	951 JumpIfNotEqual {953}
	952 Call 0x1B6F8F8
	953 Move X0, X28
	954 Move X1, X19
	955 Move X2, X31
	956 Call Object.op_Inequality, X0, X1
	957 Move TEMP, X0
	958 And TEMP, TEMP, 1
	959 Compare TEMP, 1
	960 JumpIfNotEqual {974}
	961 Move X0, X28
	962 Move X1, X31
	963 Call Component.get_gameObject, X0
	964 Move X8, [X29]
	965 Move X21, X0
	966 Move W9, [X8+224]
	967 Compare W9, 0
	968 JumpIfNotEqual {971}
	969 Move X0, X8
	970 Call 0x1B6F8F8
	971 Move X0, X21
	972 Move X1, X31
	973 Call Object.DestroyImmediate, X0
	974 Move X0, [X29]
	975 Move W8, [X0+224]
	976 Compare W8, 0
	977 JumpIfNotEqual {979}
	978 Call 0x1B6F8F8
	979 Move X0, X19
	980 Move X1, X31
	981 Move X2, X31
	982 Call Object.op_Inequality, X0, X1
	983 Move TEMP, X0
	984 And TEMP, TEMP, 1
	985 Compare TEMP, 1
	986 JumpIfNotEqual {1002}
	987 Compare X19, 0
	988 JumpIfEqual {1049}
	989 Move X0, X19
	990 Move X1, X31
	991 Call Component.get_gameObject, X0
	992 Move X8, [X29]
	993 Move X21, X0
	994 Move W9, [X8+224]
	995 Compare W9, 0
	996 JumpIfNotEqual {999}
	997 Move X0, X8
	998 Call 0x1B6F8F8
	999 Move X0, X21
	1000 Move X1, X31
	1001 Call Object.DestroyImmediate, X0
	1002 Move X8, [X20+24]
	1003 Compare X8, 0
	1004 JumpIfEqual {1049}
	1005 Move W8, [X8+40]
	1006 Compare W8, 0
	1007 JumpIfNotEqual {1016}
	1008 Move X0, [X20+48]
	1009 Compare X0, 0
	1010 JumpIfEqual {1049}
	1011 Move X8, 0x225B000
	1012 Move X8, [X8+1912]
	1013 Move X1, X23
	1014 Move X2, [X8]
	1015 Call List`1<Bounds>.AddRange, X0, X1
	1016 Add X8, X31, 360
	1017 NotImplemented "Instruction LDUR not yet implemented."
	1018 Move W9, [X31+360]
	1019 Move X11, [X31+40]
	1020 Move [X11], W31
	1021 Move [X11+4], W8
	1022 Move [X11+1], W9
	1023 Move [X11+8], X31
	1024 Move [X11+16], X31
	1025 Move X8, [X31+48]
	1026 Move [X11+24], X8
	1027 Add X31, X31, 464
	1028 Move X20, [X31+144]
	1029 Move X19, [X31+152]
	1030 Move X22, [X31+128]
	1031 Move X21, [X31+136]
	1032 Move X24, [X31+112]
	1033 Move X23, [X31+120]
	1034 Move X26, [X31+96]
	1035 Move X25, [X31+104]
	1036 Move X28, [X31+80]
	1037 Move X27, [X31+88]
	1038 Move X29, [X31+64]
	1039 Move X30, [X31+72]
	1040 Move D9, [X31+48]
	1041 Move D8, [X31+56]
	1042 Move D11, [X31+32]
	1043 Move D10, [X31+40]
	1044 Move D13, [X31+16]
	1045 Move D12, [X31+24]
	1046 Move D15, [X31+160]
	1047 Move D14, [X31+168]
	1048 Return X0
	1049 Call 0x1B6FA1C
	1050 Move X26, X1
	1051 Move X23, X0
	1052 Move X24, X31
	1053 Move X1, [X22]
	1054 Add X0, X31, 288
	1055 Call Enumerator<WeightedRoomTile>.Dispose, X0
	1056 Move X29, 0x2258000
	1057 Move X19, 0x225B000
	1058 Move X29, [X29+1144]
	1059 Move X19, [X19+1920]
	1060 Move X0, X23
	1061 Move X1, X26
	1062 Compare X24, 0
	1063 JumpIfEqual {1087}
	1064 Move X0, X24
	1065 Call 0x1B6FA14
	1066 Call 0x1B6FA1C
	1067 Call 0x1B6FA1C
	1068 Move X0, X24
	1069 Call 0x1B6FA14
	1070 Move X27, X31
	1071 Move X19, X0
	1072 Move X8, 0x225B000
	1073 Move X8, [X8+1840]
	1074 Move X1, [X8]
	1075 Add X0, X31, 224
	1076 Call Enumerator<Object>.Dispose, X0
	1077 Compare X27, 0
	1078 JumpIfEqual {1110}
	1079 Move X0, X27
	1080 Call 0x1B6FA14
	1081 Move X26, X1
	1082 Move X23, X0
	1083 Move X29, 0x2258000
	1084 Move X19, 0x225B000
	1085 Move X29, [X29+1144]
	1086 Move X19, [X19+1920]
	1087 NotImplemented "Instruction CMP not yet implemented."
	1088 Call 0x3D1A840
	1089 Move X24, [X0]
	1090 Call 0x3D1A850
	1091 Move X8, 0x225B000
	1092 Move X8, [X8+1856]
	1093 Add X0, X31, 336
	1094 Move X1, [X8]
	1095 Call Enumerator<Object>.Dispose, X0
	1096 Compare X24, 0
	1097 JumpIfEqual {283}
	1098 Move X0, X24
	1099 Call 0x1B6FA14
	1100 Move X19, X0
	1101 Move X24, X31
	1102 Move X19, X0
	1103 Move X8, 0x225B000
	1104 Move X8, [X8+1856]
	1105 Move X1, [X8]
	1106 Add X0, X31, 336
	1107 Call Enumerator<Object>.Dispose, X0
	1108 Compare X24, 0
	1109 JumpIfNotEqual {1112}
	1110 Move X0, X19
	1111 Call 0x1C8518C
	1112 Move X0, X24
	1113 Call 0x1B6FA14
	1114 Call 0x18F56A8

Method: System.Boolean ValidateBounds(UnityEngine.Bounds newB, System.Collections.Generic.List`1<UnityEngine.Bounds> localBounds, System.Collections.Generic.List`1<UnityEngine.Bounds> globalBounds, UnityEngine.Bounds ignore)

Disassembly:
	0x01CF6828 BL 0x31F5D3C
	0x01CF682C LDR X8, [X26]
	0x01CF6830 MOV X20, X0
	0x01CF6834 MOV X0, X8
	0x01CF6838 BL 0x1B6EA0C
	0x01CF683C LDR X1, [X25]
	0x01CF6840 MOV X21, X0
	0x01CF6844 BL 0x2D7B894
	0x01CF6848 LDR X0, [X29]
	0x01CF684C MOV X1, X31
	0x01CF6850 BL 0x31F5D3C
	0x01CF6854 LDR X1, [X24]
	0x01CF6858 LDR X3, [X22]
	0x01CF685C MOV X2, X0
	0x01CF6860 ADD X0, X31, 0xA0
	0x01CF6864 STP X31, X31, [X31 + 0xA0]
	0x01CF6868 BL 0x25FCCA4
	0x01CF686C CBZ X21, 0x1CF6F10
	0x01CF6870 ADRP X27, 0x225A000
	0x01CF6874 LDR X27, [X27 + 0x8B8]
	0x01CF6878 LDR W10, [X21 + 0x1C]
	0x01CF687C LDP X1, X2, [X31 + 0xA0]
	0x01CF6880 LDR X8, [X21 + 0x10]
	0x01CF6884 LDR X9, [X27]
	0x01CF6888 ADD W10, W10, 0x1
	0x01CF688C STR W10, [X21 + 0x1C]
	0x01CF6890 CBZ X8, 0x1CF6F10
	0x01CF6894 LDRSW X10, [X21 + 0x18]
	0x01CF6898 LDR W11, [X8 + 0x18]
	0x01CF689C CMP W10, W11
	0x01CF68A0 B.CS 0x1CF68B8
	0x01CF68A4 ADD W9, W10, 0x1
	0x01CF68A8 ADD X8, X8, X10, 0x4, LSL
	0x01CF68AC STR W9, [X21 + 0x18]
	0x01CF68B0 STP X1, X2, [X8 + 0x20]
	0x01CF68B4 B 0x1CF68CC
	0x01CF68B8 LDR X8, [X9 + 0x20]
	0x01CF68BC MOV X0, X21
	0x01CF68C0 LDR X8, [X8 + 0xC0]
	0x01CF68C4 LDR X3, [X8 + 0x70]
	0x01CF68C8 BL 0x2D7C0A0
	0x01CF68CC CBZ X19, 0x1CF6F10
	0x01CF68D0 ADRP X28, 0x225A000
	0x01CF68D4 LDR X28, [X28 + 0x918]
	0x01CF68D8 ADRP X23, 0x225A000
	0x01CF68DC MOV X0, X19
	0x01CF68E0 MOV X1, X20
	0x01CF68E4 LDR X3, [X28]
	0x01CF68E8 LDR X23, [X23 + 0x8B0]
	0x01CF68EC MOV X2, X21
	0x01CF68F0 BL 0x28FA2A8
	0x01CF68F4 LDR X0, [X23]
	0x01CF68F8 MOV X1, X31
	0x01CF68FC BL 0x31F5D3C
	0x01CF6900 LDR X8, [X26]
	0x01CF6904 MOV X20, X0
	0x01CF6908 MOV X0, X8
	0x01CF690C BL 0x1B6EA0C
	0x01CF6910 LDR X1, [X25]
	0x01CF6914 MOV X21, X0
	0x01CF6918 BL 0x2D7B894
	0x01CF691C LDR X0, [X29]
	0x01CF6920 MOV X1, X31
	0x01CF6924 BL 0x31F5D3C
	0x01CF6928 LDR X1, [X24]
	0x01CF692C LDR X3, [X22]
	0x01CF6930 MOV X2, X0
	0x01CF6934 ADD X0, X31, 0x90
	0x01CF6938 STP X31, X31, [X31 + 0x90]
	0x01CF693C BL 0x25FCCA4
	0x01CF6940 CBZ X21, 0x1CF6F10
	0x01CF6944 LDR W10, [X21 + 0x1C]
	0x01CF6948 LDP X1, X2, [X31 + 0x90]
	0x01CF694C LDR X8, [X21 + 0x10]
	0x01CF6950 LDR X9, [X27]
	0x01CF6954 ADD W10, W10, 0x1
	0x01CF6958 STR W10, [X21 + 0x1C]
	0x01CF695C CBZ X8, 0x1CF6F10
	0x01CF6960 LDRSW X10, [X21 + 0x18]
	0x01CF6964 LDR W11, [X8 + 0x18]
	0x01CF6968 ADRP X29, 0x225A000
	0x01CF696C ADRP X24, 0x225A000
	0x01CF6970 LDR X29, [X29 + 0x930]
	0x01CF6974 LDR X24, [X24 + 0x938]
	0x01CF6978 CMP W10, W11
	0x01CF697C B.CS 0x1CF6994
	0x01CF6980 ADD W9, W10, 0x1
	0x01CF6984 ADD X8, X8, X10, 0x4, LSL
	0x01CF6988 STR W9, [X21 + 0x18]
	0x01CF698C STP X1, X2, [X8 + 0x20]
	0x01CF6990 B 0x1CF69A8
	0x01CF6994 LDR X8, [X9 + 0x20]
	0x01CF6998 MOV X0, X21
	0x01CF699C LDR X8, [X8 + 0xC0]
	0x01CF69A0 LDR X3, [X8 + 0x70]
	0x01CF69A4 BL 0x2D7C0A0
	0x01CF69A8 LDR X0, [X29]
	0x01CF69AC MOV X1, X31
	0x01CF69B0 BL 0x31F5D3C
	0x01CF69B4 LDR X1, [X24]
	0x01CF69B8 LDR X3, [X22]
	0x01CF69BC MOV X2, X0
	0x01CF69C0 ADD X0, X31, 0x80
	0x01CF69C4 STP X31, X31, [X31 + 0x80]
	0x01CF69C8 BL 0x25FCCA4
	0x01CF69CC LDR W10, [X21 + 0x1C]
	0x01CF69D0 LDP X1, X2, [X31 + 0x80]
	0x01CF69D4 LDR X8, [X21 + 0x10]
	0x01CF69D8 LDR X9, [X27]
	0x01CF69DC ADD W10, W10, 0x1
	0x01CF69E0 STR W10, [X21 + 0x1C]
	0x01CF69E4 CBZ X8, 0x1CF6F10
	0x01CF69E8 LDRSW X10, [X21 + 0x18]
	0x01CF69EC LDR W11, [X8 + 0x18]
	0x01CF69F0 ADRP X23, 0x225A000
	0x01CF69F4 LDR X23, [X23 + 0x948]
	0x01CF69F8 CMP W10, W11
	0x01CF69FC B.CS 0x1CF6A14
	0x01CF6A00 ADD W9, W10, 0x1
	0x01CF6A04 ADD X8, X8, X10, 0x4, LSL
	0x01CF6A08 STR W9, [X21 + 0x18]
	0x01CF6A0C STP X1, X2, [X8 + 0x20]
	0x01CF6A10 B 0x1CF6A28
	0x01CF6A14 LDR X8, [X9 + 0x20]
	0x01CF6A18 MOV X0, X21
	0x01CF6A1C LDR X8, [X8 + 0xC0]
	0x01CF6A20 LDR X3, [X8 + 0x70]
	0x01CF6A24 BL 0x2D7C0A0
	0x01CF6A28 ADRP X8, 0x225A000
	0x01CF6A2C LDR X8, [X8 + 0x928]
	0x01CF6A30 MOV X1, X31
	0x01CF6A34 LDR X0, [X8]
	0x01CF6A38 BL 0x31F5D3C
	0x01CF6A3C LDR X1, [X23]
	0x01CF6A40 LDR X3, [X22]
	0x01CF6A44 MOV X2, X0
	0x01CF6A48 ADD X0, X31, 0x70
	0x01CF6A4C STP X31, X31, [X31 + 0x70]
	0x01CF6A50 BL 0x25FCCA4
	0x01CF6A54 LDR W10, [X21 + 0x1C]
	0x01CF6A58 LDP X1, X2, [X31 + 0x70]
	0x01CF6A5C LDR X8, [X21 + 0x10]
	0x01CF6A60 LDR X9, [X27]
	0x01CF6A64 ADD W10, W10, 0x1
	0x01CF6A68 STR W10, [X21 + 0x1C]
	0x01CF6A6C CBZ X8, 0x1CF6F10
	0x01CF6A70 LDRSW X10, [X21 + 0x18]
	0x01CF6A74 LDR W11, [X8 + 0x18]
	0x01CF6A78 ADRP X23, 0x225A000
	0x01CF6A7C LDR X23, [X23 + 0x8D0]
	0x01CF6A80 CMP W10, W11
	0x01CF6A84 B.CS 0x1CF6A9C
	0x01CF6A88 ADD W9, W10, 0x1
	0x01CF6A8C ADD X8, X8, X10, 0x4, LSL
	0x01CF6A90 STR W9, [X21 + 0x18]
	0x01CF6A94 STP X1, X2, [X8 + 0x20]
	0x01CF6A98 B 0x1CF6AB0
	0x01CF6A9C LDR X8, [X9 + 0x20]
	0x01CF6AA0 MOV X0, X21
	0x01CF6AA4 LDR X8, [X8 + 0xC0]
	0x01CF6AA8 LDR X3, [X8 + 0x70]
	0x01CF6AAC BL 0x2D7C0A0
	0x01CF6AB0 LDR X3, [X28]
	0x01CF6AB4 MOV X0, X19
	0x01CF6AB8 MOV X1, X20
	0x01CF6ABC MOV X2, X21
	0x01CF6AC0 BL 0x28FA2A8
	0x01CF6AC4 LDR X0, [X23]
	0x01CF6AC8 MOV X1, X31
	0x01CF6ACC BL 0x31F5D3C
	0x01CF6AD0 LDR X8, [X26]
	0x01CF6AD4 MOV X20, X0
	0x01CF6AD8 MOV X0, X8
	0x01CF6ADC BL 0x1B6EA0C
	0x01CF6AE0 LDR X1, [X25]
	0x01CF6AE4 MOV X21, X0
	0x01CF6AE8 BL 0x2D7B894
	0x01CF6AEC ADRP X8, 0x225A000
	0x01CF6AF0 LDR X8, [X8 + 0x920]
	0x01CF6AF4 MOV X1, X31
	0x01CF6AF8 LDR X0, [X8]
	0x01CF6AFC BL 0x31F5D3C
	0x01CF6B00 ADRP X8, 0x225A000
	0x01CF6B04 LDR X8, [X8 + 0x940]
	0x01CF6B08 LDR X3, [X22]
	0x01CF6B0C MOV X2, X0
	0x01CF6B10 ADD X0, X31, 0x60
	0x01CF6B14 LDR X1, [X8]
	0x01CF6B18 STP X31, X31, [X31 + 0x60]
	0x01CF6B1C BL 0x25FCCA4
	0x01CF6B20 CBZ X21, 0x1CF6F10
	0x01CF6B24 LDR W10, [X21 + 0x1C]
	0x01CF6B28 LDP X1, X2, [X31 + 0x60]
	0x01CF6B2C LDR X9, [X27]
	0x01CF6B30 ADRP X23, 0x225A000
	0x01CF6B34 ADD W10, W10, 0x1
	0x01CF6B38 STR W10, [X21 + 0x1C]
	0x01CF6B3C LDR X8, [X21 + 0x10]
	0x01CF6B40 LDR X23, [X23 + 0x948]
	0x01CF6B44 CBZ X8, 0x1CF6F10
	0x01CF6B48 LDRSW X10, [X21 + 0x18]
	0x01CF6B4C LDR W11, [X8 + 0x18]
	0x01CF6B50 CMP W10, W11
	0x01CF6B54 B.CS 0x1CF6B6C
	0x01CF6B58 ADD W9, W10, 0x1
	0x01CF6B5C ADD X8, X8, X10, 0x4, LSL
	0x01CF6B60 STR W9, [X21 + 0x18]
	0x01CF6B64 STP X1, X2, [X8 + 0x20]
	0x01CF6B68 B 0x1CF6B80
	0x01CF6B6C LDR X8, [X9 + 0x20]
	0x01CF6B70 MOV X0, X21
	0x01CF6B74 LDR X8, [X8 + 0xC0]
	0x01CF6B78 LDR X3, [X8 + 0x70]
	0x01CF6B7C BL 0x2D7C0A0
	0x01CF6B80 LDR X0, [X29]
	0x01CF6B84 MOV X1, X31
	0x01CF6B88 BL 0x31F5D3C
	0x01CF6B8C LDR X1, [X24]
	0x01CF6B90 LDR X3, [X22]
	0x01CF6B94 MOV X2, X0
	0x01CF6B98 ADD X0, X31, 0x50

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+192], D9
	003 Move [X31+200], D8
	004 Move [X31+208], X29
	005 Move [X31+224], X30
	006 Move [X31+232], X27
	007 Move [X31+240], X26
	008 Move [X31+248], X25
	009 Move [X31+256], X24
	010 Move [X31+264], X23
	011 Move [X31+272], X22
	012 Move [X31+280], X21
	013 Move [X31+288], X20
	014 Move [X31+296], X19
	015 Move X24, 0x252E000
	016 Move W8, [X24+1768]
	017 Move X19, X4
	018 Move X22, X3
	019 Move X23, X2
	020 Move X20, X1
	021 Move X21, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {40}
	026 Move X0, 0x225B000
	027 Move X0, [X0+2096]
	028 Call 0x1B6F7F0
	029 Move X0, 0x225B000
	030 Move X0, [X0+2104]
	031 Call 0x1B6F7F0
	032 Move X0, 0x225B000
	033 Move X0, [X0+2112]
	034 Call 0x1B6F7F0
	035 Move X0, 0x225B000
	036 Move X0, [X0+2120]
	037 Call 0x1B6F7F0
	038 Move W8, 1
	039 Move [X24+1768], W8
	040 NotImplemented "Instruction MOVI not yet implemented."
	041 Move [X31+176], X31
	042 Move [X31+144], V0
	043 Move [X31+152], V0
	044 Compare X23, 0
	045 JumpIfEqual {215}
	046 Move X27, 0x225B000
	047 Move X27, [X27+2120]
	048 Move X26, 0x225B000
	049 Move X25, 0x225B000
	050 Add X8, X31, 104
	051 Move X1, [X27]
	052 Move X26, [X26+2104]
	053 Move X25, [X25+2096]
	054 Move X0, X23
	055 Call List`1<Bounds>.GetEnumerator, X0
	056 Move X9, -19185664
	057 Move X10, -19185664
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 Move X8, [X31+136]
	061 Move V9, [X9+2356]
	062 Move V8, [X10+3336]
	063 Move [X31+144], V0
	064 Move [X31+152], V1
	065 Move [X31+176], X8
	066 Move X1, [X26]
	067 Add X0, X31, 144
	068 Call Enumerator<Bounds>.MoveNext, X0
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {123}
	073 Move S0, [X31+160]
	074 Move S1, [X31+164]
	075 Move S6, [X19]
	076 Move S7, [X19+4]
	077 Move S2, [X31+168]
	078 Move S3, [X31+172]
	079 Move V16, [X19+8]
	080 Move S5, [X31+176]
	081 Move S4, [X31+180]
	082 Subtract S6, S0, S6
	083 Subtract S7, S1, S7
	084 Subtract S16, S2, S16
	085 Multiply S6, S6, S6
	086 Multiply S7, S7, S7
	087 Add S6, S6, S7
	088 Multiply S7, S16, S16
	089 Add S6, S7, S6
	090 NotImplemented "Instruction FCMP not yet implemented."
	091 Move S6, [X19+12]
	092 Move S7, [X19+16]
	093 Move V16, [X19+20]
	094 Subtract S6, S3, S6
	095 Subtract S7, S5, S7
	096 Subtract S16, S4, S16
	097 Multiply S6, S6, S6
	098 Multiply S7, S7, S7
	099 Add S6, S7, S6
	100 Multiply S7, S16, S16
	101 Add S6, S7, S6
	102 NotImplemented "Instruction FCMP not yet implemented."
	103 Move V6, [X20]
	104 Move X8, [X20+16]
	105 Move [X31+80], S0
	106 Move [X31+88], S1
	107 Add X1, X31, 80
	108 Add X2, X31, 48
	109 Move X0, X21
	110 Move V0, V8
	111 Move [X31+88], S2
	112 Move [X31+96], S3
	113 Move [X31+64], X8
	114 Move [X31+3], V6
	115 Move [X31+96], S5
	116 Move [X31+104], S4
	117 Call BlobRoomsArchetype.CustomBoundsCheck, X0, X1, X2, V0
	118 Move TEMP, X0
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfNotEqual {66}
	122 Move W19, W31
	123 Move X1, [X25]
	124 Add X0, X31, 144
	125 Call Enumerator<Bounds>.Dispose, X0
	126 Compare X22, 0
	127 JumpIfEqual {215}
	128 Move X1, [X27]
	129 Add X8, X31, 104
	130 Move X0, X22
	131 Call List`1<Bounds>.GetEnumerator, X0
	132 NotImplemented "Instruction LDUR not yet implemented."
	133 NotImplemented "Instruction LDUR not yet implemented."
	134 Move X8, [X31+136]
	135 Move [X31+144], V0
	136 Move [X31+152], V1
	137 Move [X31+176], X8
	138 Move X1, [X26]
	139 Add X0, X31, 144
	140 Call Enumerator<Bounds>.MoveNext, X0
	141 Move W22, W0
	142 Move TEMP, X0
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfNotEqual {195}
	146 Move S0, [X31+160]
	147 Move S1, [X31+164]
	148 Move S6, [X19]
	149 Move S7, [X19+4]
	150 Move S2, [X31+168]
	151 Move S3, [X31+172]
	152 Move V16, [X19+8]
	153 Move S5, [X31+176]
	154 Move S4, [X31+180]
	155 Subtract S6, S0, S6
	156 Subtract S7, S1, S7
	157 Subtract S16, S2, S16
	158 Multiply S6, S6, S6
	159 Multiply S7, S7, S7
	160 Add S6, S6, S7
	161 Multiply S7, S16, S16
	162 Add S6, S7, S6
	163 NotImplemented "Instruction FCMP not yet implemented."
	164 Move S6, [X19+12]
	165 Move S7, [X19+16]
	166 Move V16, [X19+20]
	167 Subtract S6, S3, S6
	168 Subtract S7, S5, S7
	169 Subtract S16, S4, S16
	170 Multiply S6, S6, S6
	171 Multiply S7, S7, S7
	172 Add S6, S7, S6
	173 Multiply S7, S16, S16
	174 Add S6, S7, S6
	175 NotImplemented "Instruction FCMP not yet implemented."
	176 Move V6, [X20]
	177 Move X8, [X20+16]
	178 Move [X31+24], S0
	179 Move [X31+32], S1
	180 Add X1, X31, 24
	181 Add X2, X31, 0
	182 Move X0, X21
	183 Move V0, V8
	184 Move [X31+32], S2
	185 Move [X31+40], S3
	186 Move [X31+16], X8
	187 Move [X31], V6
	188 Move [X31+40], S5
	189 Move [X31+48], S4
	190 Call BlobRoomsArchetype.CustomBoundsCheck, X0, X1, X2, V0
	191 Move TEMP, X0
	192 And TEMP, TEMP, 1
	193 Compare TEMP, 1
	194 JumpIfNotEqual {138}
	195 Xor W19, W22, 1
	196 Move X1, [X25]
	197 Add X0, X31, 144
	198 Call Enumerator<Bounds>.Dispose, X0
	199 And W0, W19, 1
	200 Move X20, [X31+288]
	201 Move X19, [X31+296]
	202 Move X22, [X31+272]
	203 Move X21, [X31+280]
	204 Move X24, [X31+256]
	205 Move X23, [X31+264]
	206 Move X26, [X31+240]
	207 Move X25, [X31+248]
	208 Move X30, [X31+224]
	209 Move X27, [X31+232]
	210 Move X29, [X31+208]
	211 Move D9, [X31+192]
	212 Move D8, [X31+200]
	213 Add X31, X31, 304
	214 Return X0
	215 Call 0x1B6FA1C
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Move X23, X0
	218 Move X0, X23
	219 Call 0x3D1A840
	220 Move X19, [X0]
	221 Call 0x3D1A850
	222 Move X1, [X25]
	223 Add X0, X31, 144
	224 Call Enumerator<Bounds>.Dispose, X0
	225 Compare X19, 0
	226 JumpIfNotEqual {229}
	227 Move W19, 1
	228 Move X19, X31
	229 Move X0, X19
	230 Call 0x1B6FA14
	231 Move X23, X0
	232 Move X1, [X25]
	233 Add X0, X31, 144
	234 Call Enumerator<Bounds>.Dispose, X0
	235 Compare X19, 0
	236 JumpIfEqual {259}
	237 Move X0, X19
	238 Call 0x1B6FA14
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Move X23, X0
	241 Move X0, X23
	242 Call 0x3D1A840
	243 Move X24, [X0]
	244 Call 0x3D1A850
	245 Move X1, [X25]
	246 Add X0, X31, 144
	247 Call Enumerator<Bounds>.Dispose, X0
	248 Compare X24, 0
	249 JumpIfEqual {126}
	250 Move X0, X24
	251 Call 0x1B6FA14
	252 Move X24, X31
	253 Move X23, X0
	254 Move X1, [X25]
	255 Add X0, X31, 144
	256 Call Enumerator<Bounds>.Dispose, X0
	257 Compare X24, 0
	258 JumpIfNotEqual {261}
	259 Move X0, X23
	260 Call 0x1C8518C
	261 Move X0, X24
	262 Call 0x1B6FA14
	263 Call 0x18F56A8

Method: AnimalCompany.GameGen.Tile PickTileWithDepth(System.Single depth)

Disassembly:
	0x01CF64D4 B 0x1CF64EC
	0x01CF64D8 LDR X8, [X9 + 0x20]
	0x01CF64DC MOV X0, X19
	0x01CF64E0 LDR X8, [X8 + 0xC0]
	0x01CF64E4 LDR X3, [X8 + 0x70]
	0x01CF64E8 BL 0x2D7C0A0
	0x01CF64EC LDR X0, [X23]
	0x01CF64F0 MOV X1, X31
	0x01CF64F4 BL 0x31F5D3C
	0x01CF64F8 LDR X1, [X22]
	0x01CF64FC LDR X3, [X21]
	0x01CF6500 MOV X2, X0
	0x01CF6504 ADD X0, X31, 0x20
	0x01CF6508 STP X31, X31, [X31 + 0x20]
	0x01CF650C BL 0x25FCCA4
	0x01CF6510 LDR W10, [X19 + 0x1C]
	0x01CF6514 LDP X1, X2, [X31 + 0x20]
	0x01CF6518 LDR X8, [X19 + 0x10]
	0x01CF651C LDR X9, [X20]
	0x01CF6520 ADD W10, W10, 0x1
	0x01CF6524 STR W10, [X19 + 0x1C]
	0x01CF6528 CBZ X8, 0x1CF668C
	0x01CF652C LDRSW X10, [X19 + 0x18]
	0x01CF6530 LDR W11, [X8 + 0x18]
	0x01CF6534 ADRP X23, 0x225A000
	0x01CF6538 ADRP X22, 0x225A000
	0x01CF653C LDR X23, [X23 + 0x8C0]
	0x01CF6540 LDR X22, [X22 + 0x8F8]
	0x01CF6544 CMP W10, W11
	0x01CF6548 B.CS 0x1CF6560
	0x01CF654C ADD W9, W10, 0x1
	0x01CF6550 ADD X8, X8, X10, 0x4, LSL
	0x01CF6554 STR W9, [X19 + 0x18]
	0x01CF6558 STP X1, X2, [X8 + 0x20]
	0x01CF655C B 0x1CF6574
	0x01CF6560 LDR X8, [X9 + 0x20]
	0x01CF6564 MOV X0, X19
	0x01CF6568 LDR X8, [X8 + 0xC0]
	0x01CF656C LDR X3, [X8 + 0x70]
	0x01CF6570 BL 0x2D7C0A0
	0x01CF6574 LDR X0, [X23]
	0x01CF6578 MOV X1, X31
	0x01CF657C BL 0x31F5D3C
	0x01CF6580 LDR X1, [X22]
	0x01CF6584 LDR X3, [X21]
	0x01CF6588 MOV X2, X0
	0x01CF658C ADD X0, X31, 0x10
	0x01CF6590 STP X31, X31, [X31 + 0x10]
	0x01CF6594 BL 0x25FCCA4
	0x01CF6598 LDR W10, [X19 + 0x1C]
	0x01CF659C LDP X1, X2, [X31 + 0x10]
	0x01CF65A0 LDR X8, [X19 + 0x10]
	0x01CF65A4 LDR X9, [X20]
	0x01CF65A8 ADD W10, W10, 0x1
	0x01CF65AC STR W10, [X19 + 0x1C]
	0x01CF65B0 CBZ X8, 0x1CF668C
	0x01CF65B4 LDRSW X10, [X19 + 0x18]
	0x01CF65B8 LDR W11, [X8 + 0x18]
	0x01CF65BC ADRP X23, 0x225A000
	0x01CF65C0 ADRP X22, 0x225A000
	0x01CF65C4 LDR X23, [X23 + 0x8D8]
	0x01CF65C8 LDR X22, [X22 + 0x8E8]
	0x01CF65CC CMP W10, W11
	0x01CF65D0 B.CS 0x1CF65E8
	0x01CF65D4 ADD W9, W10, 0x1
	0x01CF65D8 ADD X8, X8, X10, 0x4, LSL
	0x01CF65DC STR W9, [X19 + 0x18]
	0x01CF65E0 STP X1, X2, [X8 + 0x20]
	0x01CF65E4 B 0x1CF65FC
	0x01CF65E8 LDR X8, [X9 + 0x20]
	0x01CF65EC MOV X0, X19
	0x01CF65F0 LDR X8, [X8 + 0xC0]
	0x01CF65F4 LDR X3, [X8 + 0x70]
	0x01CF65F8 BL 0x2D7C0A0
	0x01CF65FC LDR X0, [X23]
	0x01CF6600 MOV X1, X31
	0x01CF6604 BL 0x31F5D3C
	0x01CF6608 LDR X1, [X22]
	0x01CF660C LDR X3, [X21]
	0x01CF6610 MOV X2, X0
	0x01CF6614 ADD X0, X31, 0x0
	0x01CF6618 STP X31, X31, [X31]
	0x01CF661C BL 0x25FCCA4
	0x01CF6620 LDR W10, [X19 + 0x1C]
	0x01CF6624 LDP X1, X2, [X31]
	0x01CF6628 LDR X8, [X19 + 0x10]
	0x01CF662C LDR X9, [X20]
	0x01CF6630 ADD W10, W10, 0x1
	0x01CF6634 STR W10, [X19 + 0x1C]
	0x01CF6638 CBZ X8, 0x1CF668C
	0x01CF663C LDRSW X10, [X19 + 0x18]
	0x01CF6640 LDR W11, [X8 + 0x18]
	0x01CF6644 CMP W10, W11
	0x01CF6648 B.CS 0x1CF6660
	0x01CF664C ADD W9, W10, 0x1
	0x01CF6650 ADD X8, X8, X10, 0x4, LSL
	0x01CF6654 STR W9, [X19 + 0x18]
	0x01CF6658 STP X1, X2, [X8 + 0x20]
	0x01CF665C B 0x1CF6674
	0x01CF6660 LDR X8, [X9 + 0x20]
	0x01CF6664 MOV X0, X19
	0x01CF6668 LDR X8, [X8 + 0xC0]
	0x01CF666C LDR X3, [X8 + 0x70]
	0x01CF6670 BL 0x2D7C0A0
	0x01CF6674 MOV X0, X19
	0x01CF6678 LDP X20, X19, [X31 + 0x80]
	0x01CF667C LDP X22, X21, [X31 + 0x70]
	0x01CF6680 LDP X30, X23, [X31 + 0x60]
	0x01CF6684 ADD X31, X31, 0x90
	0x01CF6688 RET
	0x01CF668C BL 0x1B6EA1C
	0x01CF6690 SUB X31, X31, 0x110
	0x01CF6694 STP X29, X30, [X31 + 0xB0]
	0x01CF6698 STP X28, X27, [X31 + 0xC0]
	0x01CF669C STP X26, X25, [X31 + 0xD0]
	0x01CF66A0 STP X24, X23, [X31 + 0xE0]
	0x01CF66A4 STP X22, X21, [X31 + 0xF0]
	0x01CF66A8 STP X20, X19, [X31 + 0x100]
	0x01CF66AC ADRP X23, 0x252D000
	0x01CF66B0 ADRP X22, 0x225A000
	0x01CF66B4 ADRP X19, 0x225A000
	0x01CF66B8 ADRP X20, 0x225A000
	0x01CF66BC ADRP X21, 0x2257000
	0x01CF66C0 LDRB W8, [X23 + 0x6F0]
	0x01CF66C4 LDR X22, [X22 + 0x908]
	0x01CF66C8 LDR X19, [X19 + 0x910]
	0x01CF66CC LDR X20, [X20 + 0x8A8]
	0x01CF66D0 LDR X21, [X21 + 0x560]
	0x01CF66D4 TBNZ X8, 0x0, 0x1CF67D0
	0x01CF66D8 ADRP X0, 0x225A000
	0x01CF66DC LDR X0, [X0 + 0x8B0]
	0x01CF66E0 BL 0x1B6E7F0
	0x01CF66E4 ADRP X0, 0x225A000
	0x01CF66E8 LDR X0, [X0 + 0x918]
	0x01CF66EC BL 0x1B6E7F0
	0x01CF66F0 ADRP X0, 0x225A000
	0x01CF66F4 LDR X0, [X0 + 0x910]
	0x01CF66F8 BL 0x1B6E7F0
	0x01CF66FC ADRP X0, 0x225A000
	0x01CF6700 LDR X0, [X0 + 0x908]
	0x01CF6704 BL 0x1B6E7F0
	0x01CF6708 ADRP X0, 0x225A000
	0x01CF670C LDR X0, [X0 + 0x920]
	0x01CF6710 BL 0x1B6E7F0
	0x01CF6714 ADRP X0, 0x225A000
	0x01CF6718 LDR X0, [X0 + 0x8A8]
	0x01CF671C BL 0x1B6E7F0
	0x01CF6720 ADRP X0, 0x225A000
	0x01CF6724 LDR X0, [X0 + 0x8B8]
	0x01CF6728 BL 0x1B6E7F0
	0x01CF672C ADRP X0, 0x225A000
	0x01CF6730 LDR X0, [X0 + 0x8A0]
	0x01CF6734 BL 0x1B6E7F0
	0x01CF6738 ADRP X0, 0x225A000
	0x01CF673C LDR X0, [X0 + 0x898]
	0x01CF6740 BL 0x1B6E7F0
	0x01CF6744 ADRP X0, 0x225A000
	0x01CF6748 LDR X0, [X0 + 0x8C0]
	0x01CF674C BL 0x1B6E7F0
	0x01CF6750 ADRP X0, 0x225A000
	0x01CF6754 LDR X0, [X0 + 0x928]
	0x01CF6758 BL 0x1B6E7F0
	0x01CF675C ADRP X0, 0x225A000
	0x01CF6760 LDR X0, [X0 + 0x8C8]
	0x01CF6764 BL 0x1B6E7F0
	0x01CF6768 ADRP X0, 0x225A000
	0x01CF676C LDR X0, [X0 + 0x930]
	0x01CF6770 BL 0x1B6E7F0
	0x01CF6774 ADRP X0, 0x225A000
	0x01CF6778 LDR X0, [X0 + 0x8D0]
	0x01CF677C BL 0x1B6E7F0
	0x01CF6780 ADRP X0, 0x225A000
	0x01CF6784 LDR X0, [X0 + 0x8D8]
	0x01CF6788 BL 0x1B6E7F0
	0x01CF678C ADRP X0, 0x2257000
	0x01CF6790 LDR X0, [X0 + 0x560]
	0x01CF6794 BL 0x1B6E7F0
	0x01CF6798 ADRP X0, 0x225A000
	0x01CF679C LDR X0, [X0 + 0x8E0]
	0x01CF67A0 BL 0x1B6E7F0
	0x01CF67A4 ADRP X0, 0x225A000
	0x01CF67A8 LDR X0, [X0 + 0x938]
	0x01CF67AC BL 0x1B6E7F0
	0x01CF67B0 ADRP X0, 0x225A000
	0x01CF67B4 LDR X0, [X0 + 0x940]
	0x01CF67B8 BL 0x1B6E7F0
	0x01CF67BC ADRP X0, 0x225A000
	0x01CF67C0 LDR X0, [X0 + 0x948]
	0x01CF67C4 BL 0x1B6E7F0
	0x01CF67C8 MOVZ W8, 0x1
	0x01CF67CC STRB W8, [X23 + 0x6F0]
	0x01CF67D0 ADRP X26, 0x225A000
	0x01CF67D4 ADRP X25, 0x225A000
	0x01CF67D8 LDR X26, [X26 + 0x898]
	0x01CF67DC LDR X25, [X25 + 0x8A0]
	0x01CF67E0 LDR X0, [X22]
	0x01CF67E4 ADRP X29, 0x225A000
	0x01CF67E8 ADRP X24, 0x225A000
	0x01CF67EC ADRP X22, 0x225A000
	0x01CF67F0 LDR X29, [X29 + 0x920]
	0x01CF67F4 LDR X24, [X24 + 0x940]
	0x01CF67F8 LDR X22, [X22 + 0x8E0]
	0x01CF67FC BL 0x1B6EA0C
	0x01CF6800 LDR X1, [X19]
	0x01CF6804 MOV X19, X0
	0x01CF6808 BL 0x28F9A14
	0x01CF680C LDR X0, [X21]
	0x01CF6810 LDR X20, [X20]
	0x01CF6814 LDR W8, [X0 + 0xE0]
	0x01CF6818 CBNZ W8, 0x1CF6820
	0x01CF681C BL 0x1B6E8F8
	0x01CF6820 MOV X0, X20
	0x01CF6824 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+96], D12
	003 Move [X31+104], D11
	004 Move [X31+112], D10
	005 Move [X31+120], D9
	006 Move [X31+128], D8
	007 Move [X31+136], X30
	008 Move [X31+144], X26
	009 Move [X31+152], X25
	010 Move [X31+160], X24
	011 Move [X31+168], X23
	012 Move [X31+176], X22
	013 Move [X31+184], X21
	014 Move [X31+192], X20
	015 Move [X31+200], X19
	016 Move X20, 0x252E000
	017 Move W8, [X20+1769]
	018 Move V8, V0
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {50}
	024 Move X0, 0x2258000
	025 Move X0, [X0+2232]
	026 Call 0x1B6F7F0
	027 Move X0, 0x225B000
	028 Move X0, [X0+1848]
	029 Call 0x1B6F7F0
	030 Move X0, 0x225B000
	031 Move X0, [X0+1880]
	032 Call 0x1B6F7F0
	033 Move X0, 0x225B000
	034 Move X0, [X0+1904]
	035 Call 0x1B6F7F0
	036 Move X0, 0x225B000
	037 Move X0, [X0+1952]
	038 Call 0x1B6F7F0
	039 Move X0, 0x225B000
	040 Move X0, [X0+2072]
	041 Call 0x1B6F7F0
	042 Move X0, 0x225B000
	043 Move X0, [X0+2080]
	044 Call 0x1B6F7F0
	045 Move X0, 0x225B000
	046 Move X0, [X0+2088]
	047 Call 0x1B6F7F0
	048 Move W8, 1
	049 Move [X20+1769], W8
	050 NotImplemented "Instruction MOVI not yet implemented."
	051 Move [X31+80], X31
	052 Move [X31+48], V0
	053 Move [X31+56], V0
	054 Move X0, [X19+64]
	055 Compare X0, 0
	056 JumpIfEqual {187}
	057 Move X26, 0x225B000
	058 Move X26, [X26+1952]
	059 Move X25, 0x225B000
	060 Move X25, [X25+1880]
	061 Move X24, 0x2258000
	062 Move X1, [X26]
	063 Move X23, 0x225B000
	064 Move X22, 0x225B000
	065 Move X24, [X24+2232]
	066 Move X23, [X23+2088]
	067 Move X22, [X22+1848]
	068 Add X8, X31, 8
	069 Call List`1<WeightedRoomTile>.GetEnumerator, X0
	070 NotImplemented "Instruction LDUR not yet implemented."
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 Move X8, [X31+40]
	073 Move S10, W31
	074 Move S11, 1
	075 Move [X31+48], V0
	076 Move [X31+56], V1
	077 Move [X31+80], X8
	078 Move S9, W31
	079 Move X1, [X25]
	080 Add X0, X31, 48
	081 Call Enumerator<WeightedRoomTile>.MoveNext, X0
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {98}
	086 Move X0, [X31+80]
	087 Compare X0, 0
	088 JumpIfEqual {185}
	089 Move V12, [X31+72]
	090 Move V0, V8
	091 Move X1, X31
	092 Call AnimationCurve.Evaluate, X0, V0
	093 NotImplemented "Instruction FMIN not yet implemented."
	094 NotImplemented "Instruction FCMP not yet implemented."
	095 NotImplemented "Instruction FCSEL not yet implemented."
	096 Multiply S0, S12, S0
	097 Add S9, S9, S0
	098 Move X1, [X22]
	099 Add X0, X31, 48
	100 Call Enumerator<WeightedRoomTile>.Dispose, X0
	101 Move S0, W31
	102 Move V1, V9
	103 Move X0, X31
	104 Move S10, W31
	105 Call Random.Range, V0, V1
	106 Move X0, [X19+64]
	107 Compare X0, 0
	108 JumpIfEqual {187}
	109 Move X1, [X26]
	110 Add X8, X31, 8
	111 Move V9, V0
	112 Call List`1<WeightedRoomTile>.GetEnumerator, X0
	113 NotImplemented "Instruction LDUR not yet implemented."
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 Move X8, [X31+40]
	116 Move S11, 1
	117 Move [X31+48], V0
	118 Move [X31+56], V1
	119 Move [X31+80], X8
	120 Move X1, [X25]
	121 Add X0, X31, 48
	122 Call Enumerator<WeightedRoomTile>.MoveNext, X0
	123 Move TEMP, X0
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfNotEqual {141}
	127 Move X0, [X31+80]
	128 Compare X0, 0
	129 JumpIfEqual {186}
	130 Move X20, [X31+64]
	131 Move V12, [X31+72]
	132 Move V0, V8
	133 Move X1, X31
	134 Call AnimationCurve.Evaluate, X0, V0
	135 NotImplemented "Instruction FMIN not yet implemented."
	136 NotImplemented "Instruction FCMP not yet implemented."
	137 NotImplemented "Instruction FCSEL not yet implemented."
	138 Multiply S0, S12, S0
	139 NotImplemented "Instruction FCMP not yet implemented."
	140 Subtract S9, S9, S0
	141 Move X1, [X22]
	142 Add X0, X31, 48
	143 Call Enumerator<WeightedRoomTile>.Dispose, X0
	144 Move X0, [X24]
	145 Move W8, [X0+224]
	146 Compare W8, 0
	147 JumpIfNotEqual {149}
	148 Call 0x1B6F8F8
	149 Move X0, [X23]
	150 Move X1, X31
	151 Call Debug.LogWarning, X0
	152 Move X0, [X19+64]
	153 Compare X0, 0
	154 JumpIfEqual {187}
	155 Move W8, [X0+24]
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move X8, 0x225B000
	158 Move X8, [X8+2080]
	159 Move W1, W31
	160 Move X2, [X8]
	161 Add X8, X31, 8
	162 Call List`1<WeightedRoomTile>.get_Item, X0, X1
	163 Move X20, [X31+8]
	164 Move X1, [X22]
	165 Add X0, X31, 48
	166 Call Enumerator<WeightedRoomTile>.Dispose, X0
	167 Move X20, X31
	168 Move X0, X20
	169 Move X20, [X31+192]
	170 Move X19, [X31+200]
	171 Move X22, [X31+176]
	172 Move X21, [X31+184]
	173 Move X24, [X31+160]
	174 Move X23, [X31+168]
	175 Move X26, [X31+144]
	176 Move X25, [X31+152]
	177 Move X30, [X31+136]
	178 Move D9, [X31+120]
	179 Move D8, [X31+128]
	180 Move D11, [X31+104]
	181 Move D10, [X31+112]
	182 Move V12, [X31+96]
	183 Add X31, X31, 208
	184 Return X0
	185 Call 0x1B6FA1C
	186 Call 0x1B6FA1C
	187 Call 0x1B6FA1C
	188 Move X20, X0
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move X0, X20
	191 Call 0x3D1A840
	192 Move X21, [X0]
	193 Call 0x3D1A850
	194 Move X1, [X22]
	195 Add X0, X31, 48
	196 Call Enumerator<WeightedRoomTile>.Dispose, X0
	197 Compare X21, 0
	198 JumpIfEqual {144}
	199 Move X21, X31
	200 Move X20, X0
	201 Move X1, [X22]
	202 Add X0, X31, 48
	203 Call Enumerator<WeightedRoomTile>.Dispose, X0
	204 Compare X21, 0
	205 JumpIfEqual {228}
	206 Move X0, X21
	207 Call 0x1B6FA14
	208 Move X20, X0
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move X0, X20
	211 Call 0x3D1A840
	212 Move X21, [X0]
	213 Call 0x3D1A850
	214 Move X1, [X22]
	215 Add X0, X31, 48
	216 Call Enumerator<WeightedRoomTile>.Dispose, X0
	217 Compare X21, 0
	218 JumpIfEqual {101}
	219 Move X0, X21
	220 Call 0x1B6FA14
	221 Move X21, X31
	222 Move X20, X0
	223 Move X1, [X22]
	224 Add X0, X31, 48
	225 Call Enumerator<WeightedRoomTile>.Dispose, X0
	226 Compare X21, 0
	227 JumpIfNotEqual {230}
	228 Move X0, X20
	229 Call 0x1C8518C
	230 Move X0, X21
	231 Call 0x1B6FA14
	232 Call 0x18F56A8

Method: System.Boolean CustomBoundsCheck(UnityEngine.Bounds a, UnityEngine.Bounds b, System.Single error = 0.01)

Disassembly:
	0x01CF6B9C STP X31, X31, [X31 + 0x50]
	0x01CF6BA0 BL 0x25FCCA4
	0x01CF6BA4 LDR W10, [X21 + 0x1C]
	0x01CF6BA8 LDP X1, X2, [X31 + 0x50]
	0x01CF6BAC LDR X8, [X21 + 0x10]
	0x01CF6BB0 LDR X9, [X27]
	0x01CF6BB4 ADD W10, W10, 0x1
	0x01CF6BB8 STR W10, [X21 + 0x1C]
	0x01CF6BBC CBZ X8, 0x1CF6F10
	0x01CF6BC0 LDRSW X10, [X21 + 0x18]
	0x01CF6BC4 LDR W11, [X8 + 0x18]
	0x01CF6BC8 CMP W10, W11
	0x01CF6BCC B.CS 0x1CF6BE4
	0x01CF6BD0 ADD W9, W10, 0x1
	0x01CF6BD4 ADD X8, X8, X10, 0x4, LSL
	0x01CF6BD8 STR W9, [X21 + 0x18]
	0x01CF6BDC STP X1, X2, [X8 + 0x20]
	0x01CF6BE0 B 0x1CF6BF8
	0x01CF6BE4 LDR X8, [X9 + 0x20]
	0x01CF6BE8 MOV X0, X21
	0x01CF6BEC LDR X8, [X8 + 0xC0]
	0x01CF6BF0 LDR X3, [X8 + 0x70]
	0x01CF6BF4 BL 0x2D7C0A0
	0x01CF6BF8 ADRP X8, 0x225A000
	0x01CF6BFC LDR X8, [X8 + 0x928]
	0x01CF6C00 MOV X1, X31
	0x01CF6C04 LDR X0, [X8]
	0x01CF6C08 BL 0x31F5D3C
	0x01CF6C0C LDR X1, [X23]
	0x01CF6C10 LDR X3, [X22]
	0x01CF6C14 MOV X2, X0
	0x01CF6C18 ADD X0, X31, 0x40
	0x01CF6C1C STP X31, X31, [X31 + 0x40]
	0x01CF6C20 BL 0x25FCCA4
	0x01CF6C24 LDR W10, [X21 + 0x1C]
	0x01CF6C28 LDP X1, X2, [X31 + 0x40]
	0x01CF6C2C LDR X8, [X21 + 0x10]
	0x01CF6C30 LDR X9, [X27]
	0x01CF6C34 ADD W10, W10, 0x1
	0x01CF6C38 STR W10, [X21 + 0x1C]
	0x01CF6C3C CBZ X8, 0x1CF6F10
	0x01CF6C40 LDRSW X10, [X21 + 0x18]
	0x01CF6C44 LDR W11, [X8 + 0x18]
	0x01CF6C48 ADRP X23, 0x225A000
	0x01CF6C4C LDR X23, [X23 + 0x8C8]
	0x01CF6C50 CMP W10, W11
	0x01CF6C54 B.CS 0x1CF6C6C
	0x01CF6C58 ADD W9, W10, 0x1
	0x01CF6C5C ADD X8, X8, X10, 0x4, LSL
	0x01CF6C60 STR W9, [X21 + 0x18]
	0x01CF6C64 STP X1, X2, [X8 + 0x20]
	0x01CF6C68 B 0x1CF6C80
	0x01CF6C6C LDR X8, [X9 + 0x20]
	0x01CF6C70 MOV X0, X21
	0x01CF6C74 LDR X8, [X8 + 0xC0]
	0x01CF6C78 LDR X3, [X8 + 0x70]
	0x01CF6C7C BL 0x2D7C0A0
	0x01CF6C80 LDR X3, [X28]
	0x01CF6C84 MOV X0, X19
	0x01CF6C88 MOV X1, X20
	0x01CF6C8C MOV X2, X21
	0x01CF6C90 BL 0x28FA2A8
	0x01CF6C94 LDR X0, [X23]
	0x01CF6C98 MOV X1, X31
	0x01CF6C9C BL 0x31F5D3C
	0x01CF6CA0 LDR X8, [X26]
	0x01CF6CA4 MOV X20, X0
	0x01CF6CA8 MOV X0, X8
	0x01CF6CAC BL 0x1B6EA0C
	0x01CF6CB0 LDR X1, [X25]
	0x01CF6CB4 MOV X21, X0
	0x01CF6CB8 BL 0x2D7B894
	0x01CF6CBC LDR X0, [X29]
	0x01CF6CC0 MOV X1, X31
	0x01CF6CC4 BL 0x31F5D3C
	0x01CF6CC8 LDR X1, [X24]
	0x01CF6CCC LDR X3, [X22]
	0x01CF6CD0 MOV X2, X0
	0x01CF6CD4 ADD X0, X31, 0x30
	0x01CF6CD8 STP X31, X31, [X31 + 0x30]
	0x01CF6CDC BL 0x25FCCA4
	0x01CF6CE0 CBZ X21, 0x1CF6F10
	0x01CF6CE4 LDR W10, [X21 + 0x1C]
	0x01CF6CE8 LDP X1, X2, [X31 + 0x30]
	0x01CF6CEC LDR X9, [X27]
	0x01CF6CF0 ADRP X24, 0x225A000

ISIL:
	001 Move W8, [X0+60]
	002 Compare W8, 0
	003 JumpIfEqual {50}
	004 Move V1, [X1]
	005 Move V3, [X1+12]
	006 Move V2, [X2]
	007 Move V4, [X2+12]
	008 Add S5, S1, S3
	009 Subtract S5, S5, S0
	010 Subtract S6, S2, S4
	011 NotImplemented "Instruction FCMP not yet implemented."
	012 Move S5, [X1+4]
	013 Move S6, [X1+8]
	014 Move S7, [X1+16]
	015 Move S16, [X1+20]
	016 Move S17, [X2+4]
	017 Move S18, [X2+8]
	018 Move S19, [X2+16]
	019 Move S20, [X2+20]
	020 Subtract S1, S1, S3
	021 Add S2, S2, S4
	022 Add S1, S1, S0
	023 Add S4, S5, S7
	024 NotImplemented "Instruction FCMP not yet implemented."
	025 Subtract S2, S17, S19
	026 Subtract S5, S5, S7
	027 Subtract S4, S4, S0
	028 NotImplemented "Instruction CSET not yet implemented."
	029 Add S3, S6, S16
	030 Add S7, S17, S19
	031 Add S5, S5, S0
	032 NotImplemented "Instruction FCMP not yet implemented."
	033 Subtract S1, S18, S20
	034 Subtract S6, S6, S16
	035 Subtract S3, S3, S0
	036 NotImplemented "Instruction CSET not yet implemented."
	037 NotImplemented "Instruction FCMP not yet implemented."
	038 Add S16, S18, S20
	039 Add S0, S6, S0
	040 And W8, W8, W9
	041 NotImplemented "Instruction CSET not yet implemented."
	042 NotImplemented "Instruction FCMP not yet implemented."
	043 And W8, W9, W8
	044 NotImplemented "Instruction CSET not yet implemented."
	045 NotImplemented "Instruction FCMP not yet implemented."
	046 And W8, W9, W8
	047 NotImplemented "Instruction CSET not yet implemented."
	048 And W0, W9, W8
	049 Return X0
	050 Move V0, [X2]
	051 Move V1, [X1]
	052 Move V3, [X1+12]
	053 Move V2, [X2+12]
	054 Subtract S4, S1, S3
	055 Add S5, S0, S2
	056 NotImplemented "Instruction FCMP not yet implemented."
	057 Move W0, W31
	058 Return X0
	059 Move V4, [X2+4]
	060 Move V5, [X1+4]
	061 Move V6, [X1+16]
	062 Move V7, [X2+16]
	063 Move W0, W31
	064 Add S16, S5, S6
	065 Subtract S17, S4, S7
	066 NotImplemented "Instruction FCMP not yet implemented."
	067 Add S1, S1, S3
	068 Subtract S0, S0, S2
	069 NotImplemented "Instruction FCMP not yet implemented."
	070 Add S0, S4, S7
	071 Subtract S1, S5, S6
	072 NotImplemented "Instruction FCMP not yet implemented."
	073 Move V0, [X2+8]
	074 Move V1, [X2+20]
	075 Move V2, [X1+8]
	076 Move V3, [X1+20]
	077 Subtract S4, S0, S1
	078 Add S0, S0, S1
	079 Subtract S1, S2, S3
	080 Add S5, S2, S3
	081 NotImplemented "Instruction FCMP not yet implemented."
	082 NotImplemented "Instruction CSET not yet implemented."
	083 NotImplemented "Instruction FCMP not yet implemented."
	084 NotImplemented "Instruction CSET not yet implemented."
	085 And W0, W8, W9
	086 Return X0

Method: System.Void .ctor()

Disassembly:
	0x01CF6CF4 ADD W10, W10, 0x1
	0x01CF6CF8 STR W10, [X21 + 0x1C]
	0x01CF6CFC ADRP X29, 0x225A000
	0x01CF6D00 LDR X8, [X21 + 0x10]

ISIL:
	001 Move W8, 5
	002 Move X1, X31
	003 Move [X0+56], W8
	004 Call ForceNode..ctor, X0
	005 Return 

