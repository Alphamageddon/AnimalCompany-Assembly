Type: AnimalCompany.GameGen.BlobRoomsArchetype

Method: System.String get_NodeTitle()

Disassembly:
	0x01E08A08 LDR X1, [X8]
	0x01E08A0C BL 0x21D79F4
	0x01E08A10 LDR X1, [X20 + 0x68]
	0x01E08A14 LDR X4, [X20 + 0x80]
	0x01E08A18 LDR X5, [X20 + 0xB0]
	0x01E08A1C LDR W6, [X20 + 0x54]
	0x01E08A20 MOV X2, X0
	0x01E08A24 STR X0, [X20 + 0xB8]
	0x01E08A28 ADD X7, X31, 0x78
	0x01E08A2C MOVZ W3, 0x2
	0x01E08A30 MOV X0, X20
	0x01E08A34 MOV V0.16B, V8.16B
	0x01E08A38 BL 0x1E06B58
	0x01E08A3C TBZ X0, 0x0, 0x1E08B24
	0x01E08A40 LDR X0, [X26]
	0x01E08A44 BL 0x1C16F10
	0x01E08A48 LDR X1, [X25]
	0x01E08A4C MOV X21, X0
	0x01E08A50 BL 0x301B7C4
	0x01E08A54 LDRB W8, [X20 + 0x58]
	0x01E08A58 CBZ W8, 0x1E08A78
	0x01E08A5C CBZ X21, 0x1E08BB8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x25D1000
	006 Move X20, 0x22F2000
	007 Move W8, [X21+3493]
	008 Move X20, [X20+2688]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22F2000
	015 Move X0, [X0+2688]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3493], W8
	019 Add X19, X19, 56
	020 Move X0, [X19]
	021 Move X1, X31
	022 Call String.IsNullOrEmpty, X0
	023 And W31, W0, 1
	024 NotImplemented "Instruction CSEL not yet implemented."
	025 Move X0, [X8]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.String get_NodeIcon()

Disassembly:
	0x01E08A60 ADRP X8, 0x22F1000
	0x01E08A64 LDR X1, [X20 + 0x78]
	0x01E08A68 LDR X8, [X8 + 0xB00]
	0x01E08A6C MOV X0, X21
	0x01E08A70 LDR X2, [X8]
	0x01E08A74 BL 0x301C194
	0x01E08A78 LDRB W8, [X20 + 0x59]
	0x01E08A7C CBZ W8, 0x1E08A9C
	0x01E08A80 CBZ X21, 0x1E08BB8
	0x01E08A84 ADRP X8, 0x22F1000
	0x01E08A88 LDR X1, [X20 + 0xB8]
	0x01E08A8C LDR X8, [X8 + 0xB00]
	0x01E08A90 MOV X0, X21
	0x01E08A94 LDR X2, [X8]
	0x01E08A98 BL 0x301C194
	0x01E08A9C MOV X0, X21
	0x01E08AA0 MOV X1, X31
	0x01E08AA4 BL 0x1E0FB6C
	0x01E08AA8 LDR X8, [X20 + 0x80]
	0x01E08AAC LDR X9, [X20 + 0xA8]
	0x01E08AB0 MOVZ W10, 0x1
	0x01E08AB4 STRB W10, [X20 + 0x90]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x25D1000
	005 Move X19, 0x22F2000
	006 Move W8, [X20+3494]
	007 Move X19, [X19+2696]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22F2000
	013 Move X0, [X0+2696]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3494], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+16]
	027 Move X30, [X31+32]
	028 Return X0

Method: AnimalCompany.GameGen.NodeGenerationResponse Generate(AnimalCompany.GameGen.Socket source, AnimalCompany.GameGen.Generator generator)

Disassembly:
	0x01E08AB8 STP X0, X8, [X20 + 0x98]
	0x01E08ABC CBZ X9, 0x1E08BB8
	0x01E08AC0 LDR X8, [X31 + 0x88]
	0x01E08AC4 CBZ X8, 0x1E08BB8
	0x01E08AC8 LDR X0, [X9 + 0x20]
	0x01E08ACC CBZ X0, 0x1E08BB8
	0x01E08AD0 ADRP X19, 0x22F1000
	0x01E08AD4 LDR X1, [X8 + 0x20]
	0x01E08AD8 LDR X19, [X19 + 0xAF8]
	0x01E08ADC LDR X2, [X19]
	0x01E08AE0 BL 0x301C194
	0x01E08AE4 LDR X9, [X20 + 0xA8]
	0x01E08AE8 CBZ X9, 0x1E08BB8
	0x01E08AEC LDR X8, [X31 + 0x78]
	0x01E08AF0 CBZ X8, 0x1E08BB8
	0x01E08AF4 LDR X0, [X9 + 0x20]
	0x01E08AF8 CBZ X0, 0x1E08BB8
	0x01E08AFC LDR X1, [X8 + 0x20]
	0x01E08B00 LDR X2, [X19]
	0x01E08B04 BL 0x301C194
	0x01E08B08 B 0x1E08BFC
	0x01E08B0C ADRP X8, 0x22F1000
	0x01E08B10 LDR X8, [X8 + 0xA90]
	0x01E08B14 ADD X0, X31, 0x60
	0x01E08B18 LDR X1, [X8]
	0x01E08B1C BL 0x2BC434C
	0x01E08B20 B 0x1E08C08
	0x01E08B24 LDR X19, [X31 + 0x88]
	0x01E08B28 CBZ X19, 0x1E08BB8
	0x01E08B2C LDR X0, [X19 + 0x20]
	0x01E08B30 CBZ X0, 0x1E08BB8
	0x01E08B34 LDR W8, [X0 + 0x18]
	0x01E08B38 SUBS W21, W8, 0x1
	0x01E08B3C B.MI 0x1E08BBC
	0x01E08B40 ADRP X23, 0x22F1000
	0x01E08B44 ADRP X25, 0x22EB000
	0x01E08B48 ADRP X26, 0x22F1000
	0x01E08B4C LDR X23, [X23 + 0xA48]
	0x01E08B50 LDR X25, [X25 + 0x598]
	0x01E08B54 LDR X26, [X26 + 0xA30]
	0x01E08B58 LDR X2, [X23]
	0x01E08B5C MOV W1, W21
	0x01E08B60 BL 0x301BCCC
	0x01E08B64 CBZ X0, 0x1E08BB8
	0x01E08B68 MOV X1, X31
	0x01E08B6C BL 0x3C32ECC
	0x01E08B70 LDR X8, [X25]
	0x01E08B74 MOV X22, X0
	0x01E08B78 LDR W9, [X8 + 0xE0]
	0x01E08B7C CBNZ W9, 0x1E08B88
	0x01E08B80 MOV X0, X8
	0x01E08B84 BL 0x1C16DFC
	0x01E08B88 MOV X0, X22
	0x01E08B8C MOV X1, X31
	0x01E08B90 BL 0x3C39564
	0x01E08B94 LDR X0, [X19 + 0x20]
	0x01E08B98 CBZ X0, 0x1E08BB8
	0x01E08B9C LDR X2, [X26]
	0x01E08BA0 MOV W1, W21
	0x01E08BA4 BL 0x301DA48
	0x01E08BA8 SUBS W21, W21, 0x1
	0x01E08BAC B.MI 0x1E08BBC
	0x01E08BB0 LDR X0, [X19 + 0x20]
	0x01E08BB4 CBNZ X0, 0x1E08B58
	0x01E08BB8 BL 0x1C16F20
	0x01E08BBC LDR X0, [X20 + 0x88]
	0x01E08BC0 STRB W31, [X20 + 0x90]
	0x01E08BC4 CBZ X0, 0x1E08BB8
	0x01E08BC8 MOV X1, X31
	0x01E08BCC BL 0x3C32ECC
	0x01E08BD0 ADRP X8, 0x22EB000
	0x01E08BD4 LDR X8, [X8 + 0x598]
	0x01E08BD8 MOV X20, X0
	0x01E08BDC LDR X8, [X8]
	0x01E08BE0 LDR W9, [X8 + 0xE0]
	0x01E08BE4 CBNZ W9, 0x1E08BF0
	0x01E08BE8 MOV X0, X8
	0x01E08BEC BL 0x1C16DFC
	0x01E08BF0 MOV X0, X20
	0x01E08BF4 MOV X1, X31
	0x01E08BF8 BL 0x3C39564
	0x01E08BFC LDP V1, V0, [X24]
	0x01E08C00 LDR X8, [X31 + 0x10]
	0x01E08C04 STP V1, V0, [X8]
	0x01E08C08 LDP X20, X19, [X31 + 0xE0]
	0x01E08C0C LDP X22, X21, [X31 + 0xD0]
	0x01E08C10 LDP X24, X23, [X31 + 0xC0]
	0x01E08C14 LDP X26, X25, [X31 + 0xB0]
	0x01E08C18 LDP X28, X27, [X31 + 0xA0]
	0x01E08C1C LDP X29, X30, [X31 + 0x90]
	0x01E08C20 LDR V8, [X31 + 0x80]
	0x01E08C24 ADD X31, X31, 0xF0
	0x01E08C28 RET
	0x01E08C2C STR X1, [X31 + 0x8]
	0x01E08C30 MOV X23, X31
	0x01E08C34 LDR X1, [X29]
	0x01E08C38 ADD X0, X31, 0x40
	0x01E08C3C BL 0x2BD1F58
	0x01E08C40 LDR X1, [X31 + 0x8]
	0x01E08C44 CBZ X23, 0x1E08D64
	0x01E08C48 MOV X0, X23
	0x01E08C4C BL 0x1C16F18
	0x01E08C50 STR X1, [X31 + 0x8]
	0x01E08C54 MOV X23, X31
	0x01E08C58 LDR X1, [X29]
	0x01E08C5C ADD X0, X31, 0x40
	0x01E08C60 BL 0x2BD1F58
	0x01E08C64 ADRP X25, 0x22F1000
	0x01E08C68 ADRP X26, 0x22F1000
	0x01E08C6C LDR X1, [X31 + 0x8]
	0x01E08C70 LDR X25, [X25 + 0xAC0]
	0x01E08C74 LDR X26, [X26 + 0xAE0]
	0x01E08C78 LDR X19, [X31 + 0x18]
	0x01E08C7C CBZ X23, 0x1E08CEC
	0x01E08C80 MOV X0, X23
	0x01E08C84 BL 0x1C16F18
	0x01E08C88 BL 0x1C16F20
	0x01E08C8C BL 0x1C16F20
	0x01E08C90 MOV X0, X23
	0x01E08C94 BL 0x1C16F18
	0x01E08C98 MOV X0, X23
	0x01E08C9C BL 0x1C16F18
	0x01E08CA0 BL 0x1C16F20
	0x01E08CA4 BL 0x1C16F20
	0x01E08CA8 MOV X22, X0
	0x01E08CAC STR X1, [X31 + 0x8]
	0x01E08CB0 B 0x1E08C58
	0x01E08CB4 MOV X22, X0
	0x01E08CB8 STR X1, [X31 + 0x8]
	0x01E08CBC B 0x1E08C34
	0x01E08CC0 B 0x1E08CD4
	0x01E08CC4 B 0x1E08CD4
	0x01E08CC8 B 0x1E08CD4
	0x01E08CCC B 0x1E08CD4
	0x01E08CD0 B 0x1E08CD4
	0x01E08CD4 ADRP X25, 0x22F1000
	0x01E08CD8 ADRP X26, 0x22F1000
	0x01E08CDC LDR X25, [X25 + 0xAC0]
	0x01E08CE0 LDR X26, [X26 + 0xAE0]
	0x01E08CE4 LDR X19, [X31 + 0x18]
	0x01E08CE8 MOV X22, X0
	0x01E08CEC CMP W1, 0x1
	0x01E08CF0 B.NE 0x1E08D20
	0x01E08CF4 MOV X0, X22
	0x01E08CF8 BL 0x3EB1AD0
	0x01E08CFC LDR X23, [X0]
	0x01E08D00 BL 0x3EB1AE0
	0x01E08D04 ADRP X8, 0x22F1000
	0x01E08D08 LDR X8, [X8 + 0xA90]
	0x01E08D0C ADD X0, X31, 0x60
	0x01E08D10 LDR X1, [X8]
	0x01E08D14 BL 0x2BC434C
	0x01E08D18 CBZ X23, 0x1E08728
	0x01E08D1C B 0x1E08D94
	0x01E08D20 MOV X23, X31
	0x01E08D24 B 0x1E08D2C
	0x01E08D28 MOV X22, X0
	0x01E08D2C ADRP X8, 0x22F1000
	0x01E08D30 LDR X8, [X8 + 0xA90]
	0x01E08D34 LDR X1, [X8]
	0x01E08D38 ADD X0, X31, 0x60
	0x01E08D3C BL 0x2BC434C
	0x01E08D40 CBZ X23, 0x1E08DC0
	0x01E08D44 MOV X0, X23
	0x01E08D48 BL 0x1C16F18
	0x01E08D4C B 0x1E08D60
	0x01E08D50 B 0x1E08D60
	0x01E08D54 B 0x1E08D60
	0x01E08D58 B 0x1E08D60
	0x01E08D5C B 0x1E08D60
	0x01E08D60 MOV X22, X0
	0x01E08D64 CMP W1, 0x1
	0x01E08D68 B.NE 0x1E08D9C
	0x01E08D6C MOV X0, X22
	0x01E08D70 BL 0x3EB1AD0
	0x01E08D74 LDR X23, [X0]
	0x01E08D78 BL 0x3EB1AE0
	0x01E08D7C ADRP X8, 0x22F1000
	0x01E08D80 LDR X8, [X8 + 0xA90]
	0x01E08D84 ADD X0, X31, 0x60
	0x01E08D88 LDR X1, [X8]
	0x01E08D8C BL 0x2BC434C
	0x01E08D90 CBZ X23, 0x1E085B8
	0x01E08D94 MOV X0, X23
	0x01E08D98 BL 0x1C16F18
	0x01E08D9C MOV X23, X31
	0x01E08DA0 B 0x1E08DA8
	0x01E08DA4 MOV X22, X0
	0x01E08DA8 ADRP X8, 0x22F1000
	0x01E08DAC LDR X8, [X8 + 0xA90]
	0x01E08DB0 LDR X1, [X8]
	0x01E08DB4 ADD X0, X31, 0x60
	0x01E08DB8 BL 0x2BC434C
	0x01E08DBC CBNZ X23, 0x1E08DC8
	0x01E08DC0 MOV X0, X22
	0x01E08DC4 BL 0x1D2C690
	0x01E08DC8 MOV X0, X23
	0x01E08DCC BL 0x1C16F18
	0x01E08DD0 BL 0x1990590
	0x01E08DD4 MOV W0, W31
	0x01E08DD8 RET
	0x01E08DDC MOVI V0.2S, 0x5
	0x01E08DE0 MOVZ W8, 0x1
	0x01E08DE4 MOV X1, X31
	0x01E08DE8 STR D0, [X0 + 0x50]
	0x01E08DEC STRB W8, [X0 + 0x58]
	0x01E08DF0 B 0x31CD6DC
	0x01E08DF4 STR X30, [X31 - 0x20]!
	0x01E08DF8 STP X20, X19, [X31 + 0x10]
	0x01E08DFC ADRP X19, 0x25D0000
	0x01E08E00 ADRP X20, 0x22F1000
	0x01E08E04 LDRB W8, [X19 + 0xDAB]
	0x01E08E08 LDR X20, [X20 + 0xB10]
	0x01E08E0C TBNZ X8, 0x0, 0x1E08E24
	0x01E08E10 ADRP X0, 0x22F1000
	0x01E08E14 LDR X0, [X0 + 0xB10]
	0x01E08E18 BL 0x1C16CF4
	0x01E08E1C MOVZ W8, 0x1
	0x01E08E20 STRB W8, [X19 + 0xDAB]
	0x01E08E24 LDR X0, [X20]
	0x01E08E28 BL 0x1C16F10
	0x01E08E2C MOV X1, X31
	0x01E08E30 MOV X19, X0
	0x01E08E34 BL 0x33BDD8C
	0x01E08E38 LDR X8, [X20]
	0x01E08E3C LDR X8, [X8 + 0xB8]
	0x01E08E40 STR X19, [X8]
	0x01E08E44 LDP X20, X19, [X31 + 0x10]
	0x01E08E48 LDR X30, [X31], #0x20
	0x01E08E4C RET
	0x01E08E50 MOV X1, X31
	0x01E08E54 B 0x33BDD8C
	0x01E08E58 STR X30, [X31 - 0x10]!
	0x01E08E5C CBZ X1, 0x1E08E70
	0x01E08E60 LDRB W8, [X1 + 0x30]
	0x01E08E64 UBFM W0, W8, 0x1, 0x1
	0x01E08E68 LDR X30, [X31], #0x10
	0x01E08E6C RET
	0x01E08E70 BL 0x1C16F20
	0x01E08E74 B 0x1E08E78
	0x01E08E78 STP X30, X21, [X31 - 0x20]!
	0x01E08E7C STP X20, X19, [X31 + 0x10]
	0x01E08E80 ADRP X21, 0x25D0000
	0x01E08E84 ADRP X20, 0x22F1000
	0x01E08E88 LDRB W8, [X21 + 0xDAD]
	0x01E08E8C LDR X20, [X20 + 0xB18]
	0x01E08E90 MOV X19, X0
	0x01E08E94 TBNZ X8, 0x0, 0x1E08EAC
	0x01E08E98 ADRP X0, 0x22F1000
	0x01E08E9C LDR X0, [X0 + 0xB18]
	0x01E08EA0 BL 0x1C16CF4
	0x01E08EA4 MOVZ W8, 0x1
	0x01E08EA8 STRB W8, [X21 + 0xDAD]
	0x01E08EAC LDR X9, [X19 + 0x18]
	0x01E08EB0 LDR X8, [X20]
	0x01E08EB4 CBZ X9, 0x1E08EE0
	0x01E08EB8 LDR X9, [X9]
	0x01E08EBC LDRB W10, [X8 + 0x130]
	0x01E08EC0 LDRB W11, [X9 + 0x130]
	0x01E08EC4 CMP W11, W10
	0x01E08EC8 B.CC 0x1E08EE0
	0x01E08ECC LDR X9, [X9 + 0xC8]
	0x01E08ED0 ADD X9, X9, X10, 0x3, LSL
	0x01E08ED4 LDUR X9, [X9 - 0x8]
	0x01E08ED8 CMP X9, X8
	0x01E08EDC B.EQ 0x1E08F1C
	0x01E08EE0 LDR X9, [X19 + 0x20]
	0x01E08EE4 CBZ X9, 0x1E08F10
	0x01E08EE8 LDR X9, [X9]
	0x01E08EEC LDRB W10, [X8 + 0x130]
	0x01E08EF0 LDRB W11, [X9 + 0x130]
	0x01E08EF4 CMP W11, W10
	0x01E08EF8 B.CC 0x1E08F10
	0x01E08EFC LDR X9, [X9 + 0xC8]
	0x01E08F00 ADD X9, X9, X10, 0x3, LSL
	0x01E08F04 LDUR X9, [X9 - 0x8]
	0x01E08F08 CMP X9, X8
	0x01E08F0C B.EQ 0x1E08F1C
	0x01E08F10 FMOV S0, 1
	0x01E08F14 FMOV S2, 1
	0x01E08F18 B 0x1E08F28
	0x01E08F1C ADRP X8, 0xFFFFFFFFFECE2000
	0x01E08F20 LDR V2, [X8 + 0x118]
	0x01E08F24 FMOV S0, W31
	0x01E08F28 LDP X20, X19, [X31 + 0x10]
	0x01E08F2C FMOV S1, 1
	0x01E08F30 FMOV S3, 1
	0x01E08F34 LDP X30, X21, [X31], #0x20
	0x01E08F38 RET
	0x01E08F3C LDRB W8, [X0 + 0x28]
	0x01E08F40 CMP W8, 0x0
	0x01E08F44 CSET W0, EQ
	0x01E08F48 RET
	0x01E08F4C STP X30, X23, [X31 - 0x30]!
	0x01E08F50 STP X22, X21, [X31 + 0x10]
	0x01E08F54 STP X20, X19, [X31 + 0x20]
	0x01E08F58 ADRP X21, 0x25D0000
	0x01E08F5C ADRP X23, 0x22EB000
	0x01E08F60 LDRB W8, [X21 + 0xDAC]
	0x01E08F64 LDR X23, [X23 + 0x598]
	0x01E08F68 MOV X19, X1
	0x01E08F6C MOV X20, X0
	0x01E08F70 TBNZ X8, 0x0, 0x1E08F88
	0x01E08F74 ADRP X0, 0x22EB000
	0x01E08F78 LDR X0, [X0 + 0x598]
	0x01E08F7C BL 0x1C16CF4
	0x01E08F80 MOVZ W8, 0x1
	0x01E08F84 STRB W8, [X21 + 0xDAC]
	0x01E08F88 MOV X22, X20
	0x01E08F8C LDR X21, [X22 + 0x18]!
	0x01E08F90 LDR X0, [X23]
	0x01E08F94 LDR W8, [X0 + 0xE0]
	0x01E08F98 CBNZ W8, 0x1E08FA0
	0x01E08F9C BL 0x1C16DFC
	0x01E08FA0 MOV X0, X21
	0x01E08FA4 MOV X1, X19
	0x01E08FA8 MOV X2, X31
	0x01E08FAC BL 0x3C3883C
	0x01E08FB0 ADD X9, X20, 0x20
	0x01E08FB4 TBNZ X0, 0x0, 0x1E08FEC
	0x01E08FB8 LDR X0, [X23]
	0x01E08FBC LDR X20, [X9]
	0x01E08FC0 LDR W8, [X0 + 0xE0]
	0x01E08FC4 CBNZ W8, 0x1E08FCC
	0x01E08FC8 BL 0x1C16DFC
	0x01E08FCC MOV X0, X20
	0x01E08FD0 MOV X1, X19
	0x01E08FD4 MOV X2, X31
	0x01E08FD8 BL 0x3C3883C
	0x01E08FDC MOV W8, W0
	0x01E08FE0 MOV X0, X31
	0x01E08FE4 MOV X9, X22
	0x01E08FE8 TBZ X8, 0x0, 0x1E08FF0
	0x01E08FEC LDR X0, [X9]
	0x01E08FF0 LDP X20, X19, [X31 + 0x20]
	0x01E08FF4 LDP X22, X21, [X31 + 0x10]
	0x01E08FF8 LDP X30, X23, [X31], #0x30
	0x01E08FFC RET
	0x01E09000 STP X30, X21, [X31 - 0x20]!
	0x01E09004 STP X20, X19, [X31 + 0x10]
	0x01E09008 ADRP X21, 0x25CF000
	0x01E0900C ADRP X20, 0x22EA000
	0x01E09010 LDRB W8, [X21 + 0xDAE]
	0x01E09014 LDR X20, [X20 + 0x988]
	0x01E09018 MOV X19, X0
	0x01E0901C TBNZ X8, 0x0, 0x1E09034
	0x01E09020 ADRP X0, 0x22EA000
	0x01E09024 LDR X0, [X0 + 0x988]
	0x01E09028 BL 0x1C16CF4
	0x01E0902C MOVZ W8, 0x1
	0x01E09030 STRB W8, [X21 + 0xDAE]
	0x01E09034 MOVZ W8, 0x1
	0x01E09038 STRB W8, [X19 + 0x28]
	0x01E0903C LDR X8, [X20]
	0x01E09040 MOV X0, X19
	0x01E09044 MOV X1, X31
	0x01E09048 STR X8, [X19 + 0x30]
	0x01E0904C LDP X20, X19, [X31 + 0x10]
	0x01E09050 LDP X30, X21, [X31], #0x20
	0x01E09054 B 0x31CD144
	0x01E09058 ADRP X8, 0xFFFFFFFFFECE1000
	0x01E0905C LDR V2, [X8 + 0x118]
	0x01E09060 FMOV S0, W31
	0x01E09064 FMOV S1, 1
	0x01E09068 FMOV S3, 1
	0x01E0906C RET
	0x01E09070 FMOV S0, W31
	0x01E09074 FMOV S1, W31
	0x01E09078 FMOV S2, W31
	0x01E0907C FMOV S3, 1
	0x01E09080 RET
	0x01E09084 STR X30, [X31 - 0x20]!
	0x01E09088 STP X20, X19, [X31 + 0x10]
	0x01E0908C ADRP X19, 0x25CF000
	0x01E09090 ADRP X20, 0x22F0000
	0x01E09094 LDRB W8, [X19 + 0xDAF]
	0x01E09098 LDR X20, [X20 + 0xB20]
	0x01E0909C TBNZ X8, 0x0, 0x1E090B4
	0x01E090A0 ADRP X0, 0x22F0000
	0x01E090A4 LDR X0, [X0 + 0xB20]
	0x01E090A8 BL 0x1C16CF4
	0x01E090AC MOVZ W8, 0x1
	0x01E090B0 STRB W8, [X19 + 0xDAF]
	0x01E090B4 LDR X0, [X20]
	0x01E090B8 LDP X20, X19, [X31 + 0x10]
	0x01E090BC LDR X30, [X31], #0x20
	0x01E090C0 RET
	0x01E090C4 STR X30, [X31 - 0x20]!
	0x01E090C8 STP X20, X19, [X31 + 0x10]
	0x01E090CC ADRP X20, 0x25CF000
	0x01E090D0 ADRP X19, 0x22F0000
	0x01E090D4 LDRB W8, [X20 + 0xDB0]
	0x01E090D8 LDR X19, [X19 + 0xA88]
	0x01E090DC TBNZ X8, 0x0, 0x1E090F4
	0x01E090E0 ADRP X0, 0x22F0000
	0x01E090E4 LDR X0, [X0 + 0xA88]
	0x01E090E8 BL 0x1C16CF4
	0x01E090EC MOVZ W8, 0x1
	0x01E090F0 STRB W8, [X20 + 0xDB0]
	0x01E090F4 LDR X0, [X19]
	0x01E090F8 LDR W8, [X0 + 0xE0]
	0x01E090FC CBNZ W8, 0x1E09108
	0x01E09100 BL 0x1C16DFC
	0x01E09104 LDR X0, [X19]
	0x01E09108 LDR X8, [X0 + 0xB8]
	0x01E0910C LDP X20, X19, [X31 + 0x10]
	0x01E09110 LDR X0, [X8 + 0x20]
	0x01E09114 LDR X30, [X31], #0x20
	0x01E09118 RET
	0x01E0911C MOVZ W8, 0x3F800000
	0x01E09120 MOV X1, X31
	0x01E09124 STR W8, [X0 + 0x2C]
	0x01E09128 B 0x31CD6DC
	0x01E0912C SUB X31, X31, 0x90
	0x01E09130 STR X30, [X31 + 0x40]
	0x01E09134 STP X26, X25, [X31 + 0x50]
	0x01E09138 STP X24, X23, [X31 + 0x60]
	0x01E0913C STP X22, X21, [X31 + 0x70]
	0x01E09140 STP X20, X19, [X31 + 0x80]
	0x01E09144 ADRP X23, 0x25CF000
	0x01E09148 ADRP X22, 0x22F0000
	0x01E0914C ADRP X19, 0x22F0000
	0x01E09150 LDRB W8, [X23 + 0xDB1]
	0x01E09154 LDR X22, [X22 + 0xB28]
	0x01E09158 LDR X19, [X19 + 0xB30]
	0x01E0915C MOV X20, X1
	0x01E09160 MOV X21, X0
	0x01E09164 TBNZ X8, 0x0, 0x1E091D0
	0x01E09168 ADRP X0, 0x22F0000

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], X29
	003 Move [X31+136], X30
	004 Move [X31+144], X28
	005 Move [X31+152], X27
	006 Move [X31+160], X26
	007 Move [X31+168], X25
	008 Move [X31+176], X24
	009 Move [X31+184], X23
	010 Move [X31+192], X22
	011 Move [X31+200], X21
	012 Move [X31+208], X20
	013 Move [X31+216], X19
	014 Move X22, 0x25D1000
	015 Move X20, 0x22F2000
	016 Move X19, X8
	017 Move W8, [X22+3495]
	018 Move X20, [X20+2544]
	019 Move X24, X2
	020 Move X23, X1
	021 Move X21, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {91}
	026 Move X0, 0x22F2000
	027 Move X0, [X0+2400]
	028 Call 0x1C17CF4
	029 Move X0, 0x22F2000
	030 Move X0, [X0+2704]
	031 Call 0x1C17CF4
	032 Move X0, 0x22F2000
	033 Move X0, [X0+2712]
	034 Call 0x1C17CF4
	035 Move X0, 0x22F2000
	036 Move X0, [X0+2408]
	037 Call 0x1C17CF4
	038 Move X0, 0x22F2000
	039 Move X0, [X0+2720]
	040 Call 0x1C17CF4
	041 Move X0, 0x22F2000
	042 Move X0, [X0+2416]
	043 Call 0x1C17CF4
	044 Move X0, 0x22EC000
	045 Move X0, [X0+2648]
	046 Call 0x1C17CF4
	047 Move X0, 0x22F2000
	048 Move X0, [X0+2576]
	049 Call 0x1C17CF4
	050 Move X0, 0x22F2000
	051 Move X0, [X0+2728]
	052 Call 0x1C17CF4
	053 Move X0, 0x22F2000
	054 Move X0, [X0+2424]
	055 Call 0x1C17CF4
	056 Move X0, 0x22F2000
	057 Move X0, [X0+2736]
	058 Call 0x1C17CF4
	059 Move X0, 0x22F2000
	060 Move X0, [X0+2744]
	061 Call 0x1C17CF4
	062 Move X0, 0x22F2000
	063 Move X0, [X0+2752]
	064 Call 0x1C17CF4
	065 Move X0, 0x22F2000
	066 Move X0, [X0+2760]
	067 Call 0x1C17CF4
	068 Move X0, 0x22F2000
	069 Move X0, [X0+2768]
	070 Call 0x1C17CF4
	071 Move X0, 0x22F2000
	072 Move X0, [X0+2776]
	073 Call 0x1C17CF4
	074 Move X0, 0x22F2000
	075 Move X0, [X0+2784]
	076 Call 0x1C17CF4
	077 Move X0, 0x22F2000
	078 Move X0, [X0+2544]
	079 Call 0x1C17CF4
	080 Move X0, 0x22EC000
	081 Move X0, [X0+1432]
	082 Call 0x1C17CF4
	083 Move X0, 0x22F2000
	084 Move X0, [X0+2792]
	085 Call 0x1C17CF4
	086 Move X0, 0x22EC000
	087 Move X0, [X0+3784]
	088 Call 0x1C17CF4
	089 Move W8, 1
	090 Move [X22+3495], W8
	091 Move X0, [X20]
	092 NotImplemented "Instruction MOVI not yet implemented."
	093 Move [X31+112], X31
	094 Move [X31+80], X31
	095 Move [X31+88], X31
	096 Move [X31+96], X31
	097 Move [X31+48], V0
	098 Move [X31+56], V0
	099 Move [X31+120], W31
	100 Move [X31+123], W31
	101 Call 0x1C17F10
	102 Move X1, X31
	103 Move X22, X0
	104 Call NodeGenerationResult..ctor, X0
	105 Compare X22, 0
	106 JumpIfEqual {440}
	107 Move [X31+8], X24
	108 Move X8, 0x22F2000
	109 Move X8, [X8+2776]
	110 Move [X22+16], X21
	111 Move X20, 0x22F2000
	112 Move X0, [X8]
	113 Move X20, [X20+2760]
	114 Call 0x1C17F10
	115 Move X1, [X20]
	116 Move X24, X0
	117 Call List`1<WeightedRoomTile>..ctor, X0
	118 Move X0, [X21+64]
	119 Move [X21+80], X24
	120 Compare X0, 0
	121 JumpIfEqual {440}
	122 Move X8, 0x22F2000
	123 Move X8, [X8+2736]
	124 Move X28, 0x22F2000
	125 Move X20, 0x22F2000
	126 Move X24, 0x22F2000
	127 Move X29, 0x22F2000
	128 Move X27, 0x22F2000
	129 Move X28, [X28+2712]
	130 Move X20, [X20+2424]
	131 Move X24, [X24+2408]
	132 Move X29, [X29+2728]
	133 Move X27, [X27+2400]
	134 Move X1, [X8]
	135 Move X25, 0x22F2000
	136 Move X25, [X25+2704]
	137 Add X8, X31, 16
	138 Call List`1<Object>.GetEnumerator, X0
	139 Move V0, [X31+1]
	140 Move X8, [X31+32]
	141 Move [X31+5], V0
	142 Move [X31+96], X8
	143 Move X1, [X28]
	144 Add X0, X31, 80
	145 Call Enumerator<Object>.MoveNext, X0
	146 Move TEMP, X0
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfNotEqual {206}
	150 Move X8, [X31+96]
	151 Compare X8, 0
	152 JumpIfEqual {436}
	153 Move X0, [X8+24]
	154 Compare X0, 0
	155 JumpIfEqual {437}
	156 Move X1, [X20]
	157 Add X8, X31, 16
	158 Call List`1<WeightedRoomTile>.GetEnumerator, X0
	159 Move V0, [X31+16]
	160 Move V1, [X31+32]
	161 Move [X31+48], V0
	162 Move [X31+56], V1
	163 Move X1, [X24]
	164 Add X0, X31, 48
	165 Call Enumerator<WeightedRoomTile>.MoveNext, X0
	166 Move TEMP, X0
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfNotEqual {194}
	170 Move X0, [X21+80]
	171 Compare X0, 0
	172 JumpIfEqual {200}
	173 Move W10, [X0+28]
	174 Move X1, [X31+64]
	175 Move X2, [X31+72]
	176 Move X8, [X0+16]
	177 Move X9, [X29]
	178 Add W10, W10, 1
	179 Move [X0+28], W10
	180 Compare X8, 0
	181 JumpIfEqual {201}
	182 NotImplemented "Instruction LDRSW not yet implemented."
	183 Move W11, [X8+24]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Add W9, W10, 1
	186 Add X8, X8, X10
	187 Move [X0+24], W9
	188 Move [X8+32], X1
	189 Move [X8+40], X2
	190 Move X8, [X9+32]
	191 Move X8, [X8+192]
	192 Move X3, [X8+112]
	193 Call List`1<WeightedRoomTile>.AddWithResize, X0, X1
	194 Move X26, X31
	195 Move X1, [X27]
	196 Add X0, X31, 48
	197 Call Enumerator<WeightedRoomTile>.Dispose, X0
	198 Compare X26, 0
	199 JumpIfEqual {143}
	200 Call 0x1C17F20
	201 Call 0x1C17F20
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Call 0x3EB2AD0
	204 Move X26, [X0]
	205 Call 0x3EB2AE0
	206 Move X1, [X25]
	207 Add X0, X31, 80
	208 Call Enumerator<Object>.Dispose, X0
	209 Move X8, 0x22F2000
	210 Move X8, [X8+2784]
	211 Move X0, [X8]
	212 Call 0x1C17F10
	213 Move X8, 0x22F2000
	214 Move X8, [X8+2752]
	215 Move X24, X0
	216 Move X1, [X8]
	217 Call List`1<Object>..ctor, X0
	218 Compare X24, 0
	219 JumpIfEqual {440}
	220 Move X9, 0x22F2000
	221 Move W10, [X24+28]
	222 Move X8, [X24+16]
	223 Move X9, [X9+2576]
	224 Add W10, W10, 1
	225 Move X9, [X9]
	226 Move [X24+28], W10
	227 Compare X8, 0
	228 JumpIfEqual {440}
	229 NotImplemented "Instruction LDRSW not yet implemented."
	230 Move W11, [X8+24]
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Add W9, W10, 1
	233 Add X8, X8, X10
	234 Move [X24+24], W9
	235 Move [X8+32], X23
	236 Move X8, [X9+32]
	237 Move X0, X24
	238 Move X1, X23
	239 Move X8, [X8+192]
	240 Move X2, [X8+112]
	241 Call List`1<Object>.AddWithResize, X0, X1
	242 Move X8, 0x22F2000
	243 Move X8, [X8+2768]
	244 Move X0, [X8]
	245 Call 0x1C17F10
	246 Move X8, 0x22F2000
	247 Move X8, [X8+2744]
	248 Move X25, X0
	249 Move X1, [X8]
	250 Call List`1<Bounds>..ctor, X0
	251 Move X0, X21
	252 Call BlobRoomsArchetype.get_NodeTitle, X0
	253 Move X8, 0x22EC000
	254 Move X8, [X8+3784]
	255 Move X9, 0x22F2000
	256 Move X1, X0
	257 Move X3, X31
	258 Move X8, [X8]
	259 Move X9, [X9+2792]
	260 Move X0, X8
	261 Move X2, [X9]
	262 Call String.Concat, X0, X1, X2
	263 Move X8, 0x22EC000
	264 Move X8, [X8+2648]
	265 Move X27, X0
	266 Move X8, [X8]
	267 Move X0, X8
	268 Call 0x1C17F10
	269 Move X1, X27
	270 Move X2, X31
	271 Move X26, X0
	272 Call GameObject..ctor, X0, X1
	273 Compare X26, 0
	274 JumpIfEqual {440}
	275 Move X0, X26
	276 Move X1, X31
	277 Call GameObject.get_transform, X0
	278 Compare X0, 0
	279 JumpIfEqual {440}
	280 Move X1, X31
	281 Move X26, X0
	282 Call Component.get_transform, X0
	283 Compare X23, 0
	284 JumpIfEqual {440}
	285 Move X27, X0
	286 Move X0, X23
	287 Move X1, X31
	288 Call Component.get_transform, X0
	289 Compare X27, 0
	290 JumpIfEqual {440}
	291 Move X1, X0
	292 Move X0, X27
	293 Move X2, X31
	294 Call Transform.set_parent, X0, X1
	295 Move X0, X26
	296 Move X1, X31
	297 Call Component.get_transform, X0
	298 Move X20, 0x25D1000
	299 Move W8, [X20+1923]
	300 Move X23, X0
	301 Compare W8, 0
	302 JumpIfNotEqual {308}
	303 Move X0, 0x22EC000
	304 Move X0, [X0+1440]
	305 Call 0x1C17CF4
	306 Move W8, 1
	307 Move [X20+1923], W8
	308 Compare X23, 0
	309 JumpIfEqual {440}
	310 Move X8, 0x22EC000
	311 Move X8, [X8+1440]
	312 Move X0, X23
	313 Move X1, X31
	314 Move X8, [X8]
	315 Move X8, [X8+184]
	316 Move S1, [X8+4]
	317 Move S2, [X8+8]
	318 Move V0, [X8]
	319 Call Transform.set_localPosition, X0, X1
	320 Move X0, X26
	321 Move X1, X31
	322 Call Component.get_transform, X0
	323 Move X20, 0x25D1000
	324 Move W8, [X20+1939]
	325 Move X23, X0
	326 Compare W8, 0
	327 JumpIfNotEqual {333}
	328 Move X0, 0x22ED000
	329 Move X0, [X0+1448]
	330 Call 0x1C17CF4
	331 Move W8, 1
	332 Move [X20+1939], W8
	333 Compare X23, 0
	334 JumpIfEqual {440}
	335 Move X8, 0x22ED000
	336 Move X8, [X8+1448]
	337 Move X0, X23
	338 Move X1, X31
	339 Move X8, [X8]
	340 Move X8, [X8+184]
	341 Move S2, [X8+8]
	342 Move S3, [X8+12]
	343 Move S0, [X8]
	344 Move S1, [X8+4]
	345 Call Transform.set_localRotation, X0, X1
	346 Move X0, X26
	347 Move X1, X31
	348 Call Component.get_gameObject, X0
	349 Move [X22+24], X0
	350 Compare X21, 0
	351 JumpIfEqual {440}
	352 Move W8, [X21+76]
	353 Move X9, -20029440
	354 Add X9, X9, 3000
	355 Move W6, [X21+72]
	356 NotImplemented "Instruction CMP not yet implemented."
	357 NotImplemented "Instruction CSET not yet implemented."
	358 Move V0, [X9]
	359 Move X1, [X21+80]
	360 Move X5, [X31+8]
	361 Add X7, X31, 112
	362 Move X0, X21
	363 Move X2, X24
	364 Move W3, W31
	365 Move X4, X25
	366 Call Archetype.TryGenerateRooms, X0, X1, X2, X3, X4, X5, X6, V0, X7
	367 Move TEMP, X0
	368 And TEMP, TEMP, 1
	369 Compare TEMP, 1
	370 JumpIfNotEqual {387}
	371 Move X8, [X31+112]
	372 Compare X8, 0
	373 JumpIfEqual {440}
	374 Move X8, [X8+32]
	375 Move X0, X24
	376 Move X1, X31
	377 Move [X22+32], X8
	378 Call GameGenUtil.GetOuterSockets, X0
	379 Move W8, [X31+120]
	380 NotImplemented "Instruction LDUR not yet implemented."
	381 Move W10, 1
	382 Move [X19], W10
	383 Move [X19+1], W8
	384 Move [X19+4], W9
	385 Move [X19+8], X0
	386 Move [X19+16], X25
	387 Move X0, X26
	388 Move X1, X31
	389 Call Component.get_gameObject, X0
	390 Move X8, 0x22EB000
	391 Move X8, [X8+1432]
	392 Move X20, X0
	393 Move X8, [X8]
	394 Move W9, [X8+224]
	395 Compare W9, 0
	396 JumpIfNotEqual {399}
	397 Move X0, X8
	398 Call 0x1C17DFC
	399 Move X0, X20
	400 Move X1, X31
	401 Call Object.DestroyImmediate, X0
	402 NotImplemented "Instruction LDUR not yet implemented."
	403 Move W9, [X31+120]
	404 Move [X19], W31
	405 Move [X19+8], X31
	406 Move [X19+16], X31
	407 Move [X19+4], W8
	408 Move [X19+1], W9
	409 Move [X19+24], X22
	410 Move X20, [X31+208]
	411 Move X19, [X31+216]
	412 Move X22, [X31+192]
	413 Move X21, [X31+200]
	414 Move X24, [X31+176]
	415 Move X23, [X31+184]
	416 Move X26, [X31+160]
	417 Move X25, [X31+168]
	418 Move X28, [X31+144]
	419 Move X27, [X31+152]
	420 Move X29, [X31+128]
	421 Move X30, [X31+136]
	422 Add X31, X31, 224
	423 Return X0
	424 Move X24, X1
	425 Move X20, X0
	426 Move X26, X31
	427 Move X1, [X27]
	428 Add X0, X31, 48
	429 Call Enumerator<WeightedRoomTile>.Dispose, X0
	430 Move X0, X20
	431 Move X1, X24
	432 Compare X26, 0
	433 JumpIfEqual {443}
	434 Move X0, X26
	435 Call 0x1C17F18
	436 Call 0x1C17F20
	437 Call 0x1C17F20
	438 Move X0, X26
	439 Call 0x1C17F18
	440 Call 0x1C17F20
	441 Move X24, X1
	442 Move X20, X0
	443 NotImplemented "Instruction CMP not yet implemented."
	444 Call 0x3EB2AD0
	445 Move X26, [X0]
	446 Call 0x3EB2AE0
	447 Move X1, [X25]
	448 Add X0, X31, 80
	449 Call Enumerator<Object>.Dispose, X0
	450 Compare X26, 0
	451 JumpIfEqual {209}
	452 Move X0, X26
	453 Call 0x1C17F18
	454 Move X19, X0
	455 Move X26, X31
	456 Move X19, X0
	457 Move X1, [X25]
	458 Add X0, X31, 80
	459 Call Enumerator<Object>.Dispose, X0
	460 Compare X26, 0
	461 JumpIfNotEqual {464}
	462 Move X0, X19
	463 Call 0x1D2D690
	464 Move X0, X26
	465 Call 0x1C17F18
	466 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x01E0916C LDR X0, [X0 + 0xB38]
	0x01E09170 BL 0x1C16CF4
	0x01E09174 ADRP X0, 0x22F0000
	0x01E09178 LDR X0, [X0 + 0xB40]

ISIL:
	001 Move W8, 5
	002 Move X1, X31
	003 Move [X0+72], W8
	004 Call ForceNode..ctor, X0
	005 Return 

