Type: AnimalCompany.GameGen.BranchAndLeafArchetype

Method: System.String get_NodeTitle()

Disassembly:
	0x01E0917C BL 0x1C16CF4
	0x01E09180 ADRP X0, 0x22F0000
	0x01E09184 LDR X0, [X0 + 0xB48]
	0x01E09188 BL 0x1C16CF4
	0x01E0918C ADRP X0, 0x22F0000
	0x01E09190 LDR X0, [X0 + 0xB50]
	0x01E09194 BL 0x1C16CF4
	0x01E09198 ADRP X0, 0x22F0000
	0x01E0919C LDR X0, [X0 + 0xB58]
	0x01E091A0 BL 0x1C16CF4
	0x01E091A4 ADRP X0, 0x22F0000
	0x01E091A8 LDR X0, [X0 + 0xB30]
	0x01E091AC BL 0x1C16CF4
	0x01E091B0 ADRP X0, 0x22F0000
	0x01E091B4 LDR X0, [X0 + 0xB28]
	0x01E091B8 BL 0x1C16CF4
	0x01E091BC ADRP X0, 0x22EA000
	0x01E091C0 LDR X0, [X0 + 0x598]
	0x01E091C4 BL 0x1C16CF4
	0x01E091C8 MOVZ W8, 0x1
	0x01E091CC STRB W8, [X23 + 0xDB1]
	0x01E091D0 LDR X0, [X22]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x25D0000
	006 Move X20, 0x22F1000
	007 Move W8, [X21+3496]
	008 Move X20, [X20+2800]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22F1000
	015 Move X0, [X0+2800]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3496], W8
	019 Add X19, X19, 56
	020 Move X0, [X19]
	021 Move X1, X31
	022 Call String.IsNullOrEmpty, X0
	023 And W31, W0, 1
	024 NotImplemented "Instruction CSEL not yet implemented."
	025 Move X0, [X8]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.String get_NodeIcon()

Disassembly:
	0x01E091D4 STP X31, X31, [X31 + 0x20]
	0x01E091D8 STR X31, [X31 + 0x30]
	0x01E091DC BL 0x1C16F10
	0x01E091E0 LDR X1, [X19]
	0x01E091E4 MOV X19, X0
	0x01E091E8 BL 0x301B7C4
	0x01E091EC LDR X0, [X21 + 0x20]
	0x01E091F0 CBZ X0, 0x1E09334
	0x01E091F4 ADRP X8, 0x22F0000
	0x01E091F8 LDR X8, [X8 + 0xB58]
	0x01E091FC ADRP X24, 0x22F0000
	0x01E09200 LDR X24, [X24 + 0xB40]
	0x01E09204 ADRP X25, 0x22EA000
	0x01E09208 LDR X1, [X8]
	0x01E0920C ADRP X26, 0x22F0000
	0x01E09210 ADRP X23, 0x22F0000
	0x01E09214 LDR X25, [X25 + 0x598]
	0x01E09218 LDR X26, [X26 + 0xB50]
	0x01E0921C LDR X23, [X23 + 0xB38]
	0x01E09220 ADD X8, X31, 0x8
	0x01E09224 BL 0x301CB58
	0x01E09228 LDUR V0, [X31 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x25D0000
	005 Move X19, 0x22F1000
	006 Move W8, [X20+3497]
	007 Move X19, [X19+2696]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22F1000
	013 Move X0, [X0+2696]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3497], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+160]
	027 Move X30, [X31+32]
	028 Return X0

Method: AnimalCompany.GameGen.NodeGenerationResponse Generate(AnimalCompany.GameGen.Socket source, AnimalCompany.GameGen.Generator gen)

Disassembly:
	0x01E0922C LDR X8, [X31 + 0x18]
	0x01E09230 STR V0, [X31 + 0x2]
	0x01E09234 STR X8, [X31 + 0x30]
	0x01E09238 LDR X1, [X24]
	0x01E0923C ADD X0, X31, 0x20
	0x01E09240 BL 0x2BC4350
	0x01E09244 TBZ X0, 0x0, 0x1E092FC
	0x01E09248 LDR X21, [X31 + 0x30]
	0x01E0924C CBZ X21, 0x1E09328
	0x01E09250 LDR X0, [X25]
	0x01E09254 LDR X22, [X21 + 0x18]
	0x01E09258 LDR W8, [X0 + 0xE0]
	0x01E0925C CBNZ W8, 0x1E09264
	0x01E09260 BL 0x1C16DFC
	0x01E09264 MOV X0, X22
	0x01E09268 MOV X1, X20
	0x01E0926C MOV X2, X31
	0x01E09270 BL 0x3C3883C
	0x01E09274 TBNZ X0, 0x0, 0x1E092A0
	0x01E09278 LDR X0, [X25]
	0x01E0927C LDR X22, [X21 + 0x20]
	0x01E09280 LDR W8, [X0 + 0xE0]
	0x01E09284 CBNZ W8, 0x1E0928C
	0x01E09288 BL 0x1C16DFC
	0x01E0928C MOV X0, X22
	0x01E09290 MOV X1, X20
	0x01E09294 MOV X2, X31
	0x01E09298 BL 0x3C3883C
	0x01E0929C TBZ X0, 0x0, 0x1E09238
	0x01E092A0 CBZ X19, 0x1E0932C
	0x01E092A4 LDR W10, [X19 + 0x1C]
	0x01E092A8 LDR X8, [X19 + 0x10]
	0x01E092AC LDR X9, [X26]
	0x01E092B0 ADD W10, W10, 0x1
	0x01E092B4 STR W10, [X19 + 0x1C]
	0x01E092B8 CBZ X8, 0x1E09330
	0x01E092BC LDRSW X10, [X19 + 0x18]
	0x01E092C0 LDR W11, [X8 + 0x18]
	0x01E092C4 CMP W10, W11
	0x01E092C8 B.CS 0x1E092E0
	0x01E092CC ADD W9, W10, 0x1
	0x01E092D0 ADD X8, X8, X10, 0x3, LSL
	0x01E092D4 STR W9, [X19 + 0x18]
	0x01E092D8 STR X21, [X8 + 0x20]
	0x01E092DC B 0x1E09238
	0x01E092E0 LDR X8, [X9 + 0x20]
	0x01E092E4 LDR X8, [X8 + 0xC0]
	0x01E092E8 LDR X2, [X8 + 0x70]
	0x01E092EC MOV X0, X19
	0x01E092F0 MOV X1, X21
	0x01E092F4 BL 0x301BF90
	0x01E092F8 B 0x1E09238
	0x01E092FC LDR X1, [X23]
	0x01E09300 ADD X0, X31, 0x20
	0x01E09304 BL 0x2BC434C
	0x01E09308 MOV X0, X19
	0x01E0930C LDP X20, X19, [X31 + 0x80]
	0x01E09310 LDP X22, X21, [X31 + 0x70]
	0x01E09314 LDP X24, X23, [X31 + 0x60]
	0x01E09318 LDP X26, X25, [X31 + 0x50]
	0x01E0931C LDR X30, [X31 + 0x40]
	0x01E09320 ADD X31, X31, 0x90
	0x01E09324 RET
	0x01E09328 BL 0x1C16F20
	0x01E0932C BL 0x1C16F20
	0x01E09330 BL 0x1C16F20
	0x01E09334 BL 0x1C16F20
	0x01E09338 B 0x1E09354
	0x01E0933C B 0x1E09354
	0x01E09340 B 0x1E09354
	0x01E09344 B 0x1E09354
	0x01E09348 B 0x1E09354
	0x01E0934C B 0x1E09354
	0x01E09350 B 0x1E09354
	0x01E09354 MOV X20, X0
	0x01E09358 CMP W1, 0x1
	0x01E0935C B.NE 0x1E09388
	0x01E09360 MOV X0, X20
	0x01E09364 BL 0x3EB1AD0
	0x01E09368 LDR X21, [X0]
	0x01E0936C BL 0x3EB1AE0
	0x01E09370 LDR X1, [X23]
	0x01E09374 ADD X0, X31, 0x20
	0x01E09378 BL 0x2BC434C
	0x01E0937C CBZ X21, 0x1E09308
	0x01E09380 MOV X0, X21
	0x01E09384 BL 0x1C16F18
	0x01E09388 MOV X21, X31
	0x01E0938C B 0x1E09394
	0x01E09390 MOV X20, X0
	0x01E09394 LDR X1, [X23]
	0x01E09398 ADD X0, X31, 0x20
	0x01E0939C BL 0x2BC434C
	0x01E093A0 CBNZ X21, 0x1E093AC
	0x01E093A4 MOV X0, X20
	0x01E093A8 BL 0x1D2C690
	0x01E093AC MOV X0, X21
	0x01E093B0 BL 0x1C16F18
	0x01E093B4 BL 0x1990590
	0x01E093B8 SUB X31, X31, 0xA0
	0x01E093BC STP X30, X23, [X31 + 0x70]
	0x01E093C0 STP X22, X21, [X31 + 0x80]
	0x01E093C4 STP X20, X19, [X31 + 0x90]
	0x01E093C8 ADRP X23, 0x25CF000
	0x01E093CC ADRP X21, 0x22F0000
	0x01E093D0 ADRP X19, 0x22F0000
	0x01E093D4 ADRP X20, 0x22F0000
	0x01E093D8 ADRP X22, 0x22EA000
	0x01E093DC LDRB W8, [X23 + 0xDB2]
	0x01E093E0 LDR X21, [X21 + 0xB60]
	0x01E093E4 LDR X19, [X19 + 0xB68]
	0x01E093E8 LDR X20, [X20 + 0xB70]
	0x01E093EC LDR X22, [X22 + 0x6C0]
	0x01E093F0 TBNZ X8, 0x0, 0x1E094E0
	0x01E093F4 ADRP X0, 0x22F0000
	0x01E093F8 LDR X0, [X0 + 0xB78]
	0x01E093FC BL 0x1C16CF4
	0x01E09400 ADRP X0, 0x22F0000
	0x01E09404 LDR X0, [X0 + 0xB80]
	0x01E09408 BL 0x1C16CF4
	0x01E0940C ADRP X0, 0x22F0000
	0x01E09410 LDR X0, [X0 + 0xB70]
	0x01E09414 BL 0x1C16CF4
	0x01E09418 ADRP X0, 0x22F0000
	0x01E0941C LDR X0, [X0 + 0xB88]
	0x01E09420 BL 0x1C16CF4
	0x01E09424 ADRP X0, 0x22F0000
	0x01E09428 LDR X0, [X0 + 0xB68]
	0x01E0942C BL 0x1C16CF4
	0x01E09430 ADRP X0, 0x22F0000
	0x01E09434 LDR X0, [X0 + 0xB60]
	0x01E09438 BL 0x1C16CF4
	0x01E0943C ADRP X0, 0x22F0000
	0x01E09440 LDR X0, [X0 + 0xB90]
	0x01E09444 BL 0x1C16CF4
	0x01E09448 ADRP X0, 0x22F0000
	0x01E0944C LDR X0, [X0 + 0xB98]
	0x01E09450 BL 0x1C16CF4
	0x01E09454 ADRP X0, 0x22F0000
	0x01E09458 LDR X0, [X0 + 0xBA0]
	0x01E0945C BL 0x1C16CF4
	0x01E09460 ADRP X0, 0x22F0000
	0x01E09464 LDR X0, [X0 + 0xBA8]
	0x01E09468 BL 0x1C16CF4
	0x01E0946C ADRP X0, 0x22EA000
	0x01E09470 LDR X0, [X0 + 0x6C0]
	0x01E09474 BL 0x1C16CF4
	0x01E09478 ADRP X0, 0x22F0000
	0x01E0947C LDR X0, [X0 + 0xBB0]
	0x01E09480 BL 0x1C16CF4
	0x01E09484 ADRP X0, 0x22F0000
	0x01E09488 LDR X0, [X0 + 0xA80]
	0x01E0948C BL 0x1C16CF4
	0x01E09490 ADRP X0, 0x22F0000
	0x01E09494 LDR X0, [X0 + 0xAF0]
	0x01E09498 BL 0x1C16CF4
	0x01E0949C ADRP X0, 0x22F0000
	0x01E094A0 LDR X0, [X0 + 0xBB8]
	0x01E094A4 BL 0x1C16CF4
	0x01E094A8 ADRP X0, 0x22F0000
	0x01E094AC LDR X0, [X0 + 0xBC0]
	0x01E094B0 BL 0x1C16CF4
	0x01E094B4 ADRP X0, 0x22F0000
	0x01E094B8 LDR X0, [X0 + 0xBC8]
	0x01E094BC BL 0x1C16CF4
	0x01E094C0 ADRP X0, 0x22F0000
	0x01E094C4 LDR X0, [X0 + 0xBD0]
	0x01E094C8 BL 0x1C16CF4
	0x01E094CC ADRP X0, 0x22F0000
	0x01E094D0 LDR X0, [X0 + 0xB20]
	0x01E094D4 BL 0x1C16CF4
	0x01E094D8 MOVZ W8, 0x1
	0x01E094DC STRB W8, [X23 + 0xDB2]
	0x01E094E0 LDR X0, [X21]
	0x01E094E4 ADRP X23, 0x22F0000
	0x01E094E8 ADRP X21, 0x22F0000
	0x01E094EC LDR X23, [X23 + 0xB20]
	0x01E094F0 LDR X21, [X21 + 0xBB0]
	0x01E094F4 BL 0x1C16F10
	0x01E094F8 LDR X1, [X19]
	0x01E094FC MOV X19, X0
	0x01E09500 BL 0x2F49774
	0x01E09504 LDR X0, [X22]
	0x01E09508 LDR X20, [X20]
	0x01E0950C LDR W8, [X0 + 0xE0]
	0x01E09510 CBNZ W8, 0x1E09518
	0x01E09514 BL 0x1C16DFC
	0x01E09518 MOV X0, X20
	0x01E0951C MOV X1, X31
	0x01E09520 BL 0x338C698
	0x01E09524 LDR X1, [X23]
	0x01E09528 LDR X3, [X21]
	0x01E0952C MOV X2, X0
	0x01E09530 ADD X0, X31, 0x60
	0x01E09534 STP X31, X31, [X31 + 0x60]
	0x01E09538 BL 0x27ABC80
	0x01E0953C CBZ X19, 0x1E098E4
	0x01E09540 ADRP X20, 0x22F0000
	0x01E09544 LDR X20, [X20 + 0xB88]
	0x01E09548 LDR W10, [X19 + 0x1C]
	0x01E0954C LDP X1, X2, [X31 + 0x60]
	0x01E09550 LDR X8, [X19 + 0x10]
	0x01E09554 LDR X9, [X20]
	0x01E09558 ADD W10, W10, 0x1
	0x01E0955C STR W10, [X19 + 0x1C]
	0x01E09560 CBZ X8, 0x1E098E4
	0x01E09564 LDRSW X10, [X19 + 0x18]
	0x01E09568 LDR W11, [X8 + 0x18]
	0x01E0956C ADRP X23, 0x22F0000
	0x01E09570 ADRP X22, 0x22F0000
	0x01E09574 LDR X23, [X23 + 0xB78]
	0x01E09578 LDR X22, [X22 + 0xA80]
	0x01E0957C CMP W10, W11
	0x01E09580 B.CS 0x1E09598
	0x01E09584 ADD W9, W10, 0x1
	0x01E09588 ADD X8, X8, X10, 0x4, LSL
	0x01E0958C STR W9, [X19 + 0x18]
	0x01E09590 STP X1, X2, [X8 + 0x20]
	0x01E09594 B 0x1E095AC
	0x01E09598 LDR X8, [X9 + 0x20]
	0x01E0959C MOV X0, X19
	0x01E095A0 LDR X8, [X8 + 0xC0]
	0x01E095A4 LDR X3, [X8 + 0x70]
	0x01E095A8 BL 0x2F49F80
	0x01E095AC LDR X0, [X23]
	0x01E095B0 MOV X1, X31
	0x01E095B4 BL 0x338C698
	0x01E095B8 LDR X1, [X22]
	0x01E095BC LDR X3, [X21]
	0x01E095C0 MOV X2, X0
	0x01E095C4 ADD X0, X31, 0x50
	0x01E095C8 STP X31, X31, [X31 + 0x50]
	0x01E095CC BL 0x27ABC80
	0x01E095D0 LDR W10, [X19 + 0x1C]
	0x01E095D4 LDP X1, X2, [X31 + 0x50]
	0x01E095D8 LDR X8, [X19 + 0x10]
	0x01E095DC LDR X9, [X20]
	0x01E095E0 ADD W10, W10, 0x1
	0x01E095E4 STR W10, [X19 + 0x1C]
	0x01E095E8 CBZ X8, 0x1E098E4
	0x01E095EC LDRSW X10, [X19 + 0x18]
	0x01E095F0 LDR W11, [X8 + 0x18]
	0x01E095F4 ADRP X23, 0x22F0000
	0x01E095F8 ADRP X22, 0x22F0000
	0x01E095FC LDR X23, [X23 + 0xB80]
	0x01E09600 LDR X22, [X22 + 0xAF0]
	0x01E09604 CMP W10, W11
	0x01E09608 B.CS 0x1E09620
	0x01E0960C ADD W9, W10, 0x1
	0x01E09610 ADD X8, X8, X10, 0x4, LSL
	0x01E09614 STR W9, [X19 + 0x18]
	0x01E09618 STP X1, X2, [X8 + 0x20]
	0x01E0961C B 0x1E09634
	0x01E09620 LDR X8, [X9 + 0x20]
	0x01E09624 MOV X0, X19
	0x01E09628 LDR X8, [X8 + 0xC0]
	0x01E0962C LDR X3, [X8 + 0x70]
	0x01E09630 BL 0x2F49F80
	0x01E09634 LDR X0, [X23]
	0x01E09638 MOV X1, X31
	0x01E0963C BL 0x338C698
	0x01E09640 LDR X1, [X22]
	0x01E09644 LDR X3, [X21]
	0x01E09648 MOV X2, X0
	0x01E0964C ADD X0, X31, 0x40
	0x01E09650 STP X31, X31, [X31 + 0x40]
	0x01E09654 BL 0x27ABC80
	0x01E09658 LDR W10, [X19 + 0x1C]
	0x01E0965C LDP X1, X2, [X31 + 0x40]
	0x01E09660 LDR X8, [X19 + 0x10]
	0x01E09664 LDR X9, [X20]
	0x01E09668 ADD W10, W10, 0x1
	0x01E0966C STR W10, [X19 + 0x1C]
	0x01E09670 CBZ X8, 0x1E098E4
	0x01E09674 LDRSW X10, [X19 + 0x18]
	0x01E09678 LDR W11, [X8 + 0x18]
	0x01E0967C ADRP X23, 0x22F0000
	0x01E09680 ADRP X22, 0x22F0000
	0x01E09684 LDR X23, [X23 + 0xBA0]
	0x01E09688 LDR X22, [X22 + 0xBD0]
	0x01E0968C CMP W10, W11
	0x01E09690 B.CS 0x1E096A8
	0x01E09694 ADD W9, W10, 0x1
	0x01E09698 ADD X8, X8, X10, 0x4, LSL
	0x01E0969C STR W9, [X19 + 0x18]
	0x01E096A0 STP X1, X2, [X8 + 0x20]
	0x01E096A4 B 0x1E096BC
	0x01E096A8 LDR X8, [X9 + 0x20]
	0x01E096AC MOV X0, X19
	0x01E096B0 LDR X8, [X8 + 0xC0]
	0x01E096B4 LDR X3, [X8 + 0x70]
	0x01E096B8 BL 0x2F49F80
	0x01E096BC LDR X0, [X23]
	0x01E096C0 MOV X1, X31
	0x01E096C4 BL 0x338C698
	0x01E096C8 LDR X1, [X22]
	0x01E096CC LDR X3, [X21]
	0x01E096D0 MOV X2, X0
	0x01E096D4 ADD X0, X31, 0x30
	0x01E096D8 STP X31, X31, [X31 + 0x30]
	0x01E096DC BL 0x27ABC80
	0x01E096E0 LDR W10, [X19 + 0x1C]
	0x01E096E4 LDP X1, X2, [X31 + 0x30]
	0x01E096E8 LDR X8, [X19 + 0x10]
	0x01E096EC LDR X9, [X20]
	0x01E096F0 ADD W10, W10, 0x1
	0x01E096F4 STR W10, [X19 + 0x1C]
	0x01E096F8 CBZ X8, 0x1E098E4
	0x01E096FC LDRSW X10, [X19 + 0x18]
	0x01E09700 LDR W11, [X8 + 0x18]
	0x01E09704 ADRP X23, 0x22F0000
	0x01E09708 ADRP X22, 0x22F0000
	0x01E0970C LDR X23, [X23 + 0xB98]
	0x01E09710 LDR X22, [X22 + 0xBC0]
	0x01E09714 CMP W10, W11
	0x01E09718 B.CS 0x1E09730
	0x01E0971C ADD W9, W10, 0x1
	0x01E09720 ADD X8, X8, X10, 0x4, LSL
	0x01E09724 STR W9, [X19 + 0x18]
	0x01E09728 STP X1, X2, [X8 + 0x20]
	0x01E0972C B 0x1E09744
	0x01E09730 LDR X8, [X9 + 0x20]
	0x01E09734 MOV X0, X19
	0x01E09738 LDR X8, [X8 + 0xC0]
	0x01E0973C LDR X3, [X8 + 0x70]
	0x01E09740 BL 0x2F49F80
	0x01E09744 LDR X0, [X23]
	0x01E09748 MOV X1, X31
	0x01E0974C BL 0x338C698
	0x01E09750 LDR X1, [X22]
	0x01E09754 LDR X3, [X21]
	0x01E09758 MOV X2, X0
	0x01E0975C ADD X0, X31, 0x20
	0x01E09760 STP X31, X31, [X31 + 0x20]
	0x01E09764 BL 0x27ABC80
	0x01E09768 LDR W10, [X19 + 0x1C]
	0x01E0976C LDP X1, X2, [X31 + 0x20]
	0x01E09770 LDR X8, [X19 + 0x10]
	0x01E09774 LDR X9, [X20]
	0x01E09778 ADD W10, W10, 0x1
	0x01E0977C STR W10, [X19 + 0x1C]
	0x01E09780 CBZ X8, 0x1E098E4
	0x01E09784 LDRSW X10, [X19 + 0x18]
	0x01E09788 LDR W11, [X8 + 0x18]
	0x01E0978C ADRP X23, 0x22F0000
	0x01E09790 ADRP X22, 0x22F0000
	0x01E09794 LDR X23, [X23 + 0xB90]
	0x01E09798 LDR X22, [X22 + 0xBC8]
	0x01E0979C CMP W10, W11
	0x01E097A0 B.CS 0x1E097B8
	0x01E097A4 ADD W9, W10, 0x1
	0x01E097A8 ADD X8, X8, X10, 0x4, LSL
	0x01E097AC STR W9, [X19 + 0x18]
	0x01E097B0 STP X1, X2, [X8 + 0x20]
	0x01E097B4 B 0x1E097CC
	0x01E097B8 LDR X8, [X9 + 0x20]
	0x01E097BC MOV X0, X19
	0x01E097C0 LDR X8, [X8 + 0xC0]
	0x01E097C4 LDR X3, [X8 + 0x70]
	0x01E097C8 BL 0x2F49F80
	0x01E097CC LDR X0, [X23]
	0x01E097D0 MOV X1, X31
	0x01E097D4 BL 0x338C698
	0x01E097D8 LDR X1, [X22]
	0x01E097DC LDR X3, [X21]
	0x01E097E0 MOV X2, X0
	0x01E097E4 ADD X0, X31, 0x10
	0x01E097E8 STP X31, X31, [X31 + 0x10]
	0x01E097EC BL 0x27ABC80
	0x01E097F0 LDR W10, [X19 + 0x1C]
	0x01E097F4 LDP X1, X2, [X31 + 0x10]
	0x01E097F8 LDR X8, [X19 + 0x10]
	0x01E097FC LDR X9, [X20]
	0x01E09800 ADD W10, W10, 0x1
	0x01E09804 STR W10, [X19 + 0x1C]
	0x01E09808 CBZ X8, 0x1E098E4
	0x01E0980C LDRSW X10, [X19 + 0x18]
	0x01E09810 LDR W11, [X8 + 0x18]
	0x01E09814 ADRP X23, 0x22F0000
	0x01E09818 ADRP X22, 0x22F0000
	0x01E0981C LDR X23, [X23 + 0xBA8]
	0x01E09820 LDR X22, [X22 + 0xBB8]
	0x01E09824 CMP W10, W11
	0x01E09828 B.CS 0x1E09840
	0x01E0982C ADD W9, W10, 0x1
	0x01E09830 ADD X8, X8, X10, 0x4, LSL
	0x01E09834 STR W9, [X19 + 0x18]
	0x01E09838 STP X1, X2, [X8 + 0x20]
	0x01E0983C B 0x1E09854
	0x01E09840 LDR X8, [X9 + 0x20]
	0x01E09844 MOV X0, X19
	0x01E09848 LDR X8, [X8 + 0xC0]
	0x01E0984C LDR X3, [X8 + 0x70]
	0x01E09850 BL 0x2F49F80
	0x01E09854 LDR X0, [X23]
	0x01E09858 MOV X1, X31
	0x01E0985C BL 0x338C698
	0x01E09860 LDR X1, [X22]
	0x01E09864 LDR X3, [X21]
	0x01E09868 MOV X2, X0
	0x01E0986C ADD X0, X31, 0x0
	0x01E09870 STP X31, X31, [X31]
	0x01E09874 BL 0x27ABC80
	0x01E09878 LDR W10, [X19 + 0x1C]
	0x01E0987C LDP X1, X2, [X31]
	0x01E09880 LDR X8, [X19 + 0x10]
	0x01E09884 LDR X9, [X20]
	0x01E09888 ADD W10, W10, 0x1
	0x01E0988C STR W10, [X19 + 0x1C]
	0x01E09890 CBZ X8, 0x1E098E4
	0x01E09894 LDRSW X10, [X19 + 0x18]
	0x01E09898 LDR W11, [X8 + 0x18]
	0x01E0989C CMP W10, W11
	0x01E098A0 B.CS 0x1E098B8
	0x01E098A4 ADD W9, W10, 0x1
	0x01E098A8 ADD X8, X8, X10, 0x4, LSL
	0x01E098AC STR W9, [X19 + 0x18]
	0x01E098B0 STP X1, X2, [X8 + 0x20]
	0x01E098B4 B 0x1E098CC
	0x01E098B8 LDR X8, [X9 + 0x20]
	0x01E098BC MOV X0, X19
	0x01E098C0 LDR X8, [X8 + 0xC0]
	0x01E098C4 LDR X3, [X8 + 0x70]
	0x01E098C8 BL 0x2F49F80
	0x01E098CC MOV X0, X19
	0x01E098D0 LDP X20, X19, [X31 + 0x90]
	0x01E098D4 LDP X22, X21, [X31 + 0x80]
	0x01E098D8 LDP X30, X23, [X31 + 0x70]
	0x01E098DC ADD X31, X31, 0xA0
	0x01E098E0 RET
	0x01E098E4 BL 0x1C16F20
	0x01E098E8 SUB X31, X31, 0x140
	0x01E098EC STP X29, X30, [X31 + 0xE0]
	0x01E098F0 STP X28, X27, [X31 + 0xF0]
	0x01E098F4 STP X26, X25, [X31 + 0x100]
	0x01E098F8 STP X24, X23, [X31 + 0x110]
	0x01E098FC STP X22, X21, [X31 + 0x120]
	0x01E09900 STP X20, X19, [X31 + 0x130]
	0x01E09904 ADRP X23, 0x25CF000
	0x01E09908 ADRP X22, 0x22F0000
	0x01E0990C ADRP X19, 0x22F0000
	0x01E09910 ADRP X20, 0x22F0000
	0x01E09914 ADRP X21, 0x22EA000
	0x01E09918 LDRB W8, [X23 + 0xDB3]
	0x01E0991C LDR X22, [X22 + 0xBD8]
	0x01E09920 LDR X19, [X19 + 0xBE0]
	0x01E09924 LDR X20, [X20 + 0xB70]
	0x01E09928 LDR X21, [X21 + 0x6C0]
	0x01E0992C TBNZ X8, 0x0, 0x1E09A34
	0x01E09930 ADRP X0, 0x22F0000
	0x01E09934 LDR X0, [X0 + 0xB78]
	0x01E09938 BL 0x1C16CF4
	0x01E0993C ADRP X0, 0x22F0000
	0x01E09940 LDR X0, [X0 + 0xB80]
	0x01E09944 BL 0x1C16CF4
	0x01E09948 ADRP X0, 0x22F0000
	0x01E0994C LDR X0, [X0 + 0xBE8]
	0x01E09950 BL 0x1C16CF4
	0x01E09954 ADRP X0, 0x22F0000
	0x01E09958 LDR X0, [X0 + 0xBE0]
	0x01E0995C BL 0x1C16CF4
	0x01E09960 ADRP X0, 0x22F0000
	0x01E09964 LDR X0, [X0 + 0xBD8]
	0x01E09968 BL 0x1C16CF4
	0x01E0996C ADRP X0, 0x22F0000
	0x01E09970 LDR X0, [X0 + 0xBF0]
	0x01E09974 BL 0x1C16CF4
	0x01E09978 ADRP X0, 0x22F0000
	0x01E0997C LDR X0, [X0 + 0xB70]
	0x01E09980 BL 0x1C16CF4
	0x01E09984 ADRP X0, 0x22F0000
	0x01E09988 LDR X0, [X0 + 0xB88]
	0x01E0998C BL 0x1C16CF4
	0x01E09990 ADRP X0, 0x22F0000
	0x01E09994 LDR X0, [X0 + 0xB68]
	0x01E09998 BL 0x1C16CF4
	0x01E0999C ADRP X0, 0x22F0000
	0x01E099A0 LDR X0, [X0 + 0xB60]
	0x01E099A4 BL 0x1C16CF4
	0x01E099A8 ADRP X0, 0x22F0000
	0x01E099AC LDR X0, [X0 + 0xB90]
	0x01E099B0 BL 0x1C16CF4
	0x01E099B4 ADRP X0, 0x22F0000
	0x01E099B8 LDR X0, [X0 + 0xBF8]
	0x01E099BC BL 0x1C16CF4
	0x01E099C0 ADRP X0, 0x22F0000
	0x01E099C4 LDR X0, [X0 + 0xB98]
	0x01E099C8 BL 0x1C16CF4
	0x01E099CC ADRP X0, 0x22F0000
	0x01E099D0 LDR X0, [X0 + 0xC00]
	0x01E099D4 BL 0x1C16CF4
	0x01E099D8 ADRP X0, 0x22F0000
	0x01E099DC LDR X0, [X0 + 0xBA0]
	0x01E099E0 BL 0x1C16CF4
	0x01E099E4 ADRP X0, 0x22F0000
	0x01E099E8 LDR X0, [X0 + 0xBA8]
	0x01E099EC BL 0x1C16CF4
	0x01E099F0 ADRP X0, 0x22EA000
	0x01E099F4 LDR X0, [X0 + 0x6C0]
	0x01E099F8 BL 0x1C16CF4
	0x01E099FC ADRP X0, 0x22F0000
	0x01E09A00 LDR X0, [X0 + 0xBB0]
	0x01E09A04 BL 0x1C16CF4
	0x01E09A08 ADRP X0, 0x22F0000
	0x01E09A0C LDR X0, [X0 + 0xC08]
	0x01E09A10 BL 0x1C16CF4
	0x01E09A14 ADRP X0, 0x22F0000
	0x01E09A18 LDR X0, [X0 + 0xC10]
	0x01E09A1C BL 0x1C16CF4
	0x01E09A20 ADRP X0, 0x22F0000
	0x01E09A24 LDR X0, [X0 + 0xC18]
	0x01E09A28 BL 0x1C16CF4
	0x01E09A2C MOVZ W8, 0x1
	0x01E09A30 STRB W8, [X23 + 0xDB3]
	0x01E09A34 ADRP X26, 0x22F0000
	0x01E09A38 ADRP X25, 0x22F0000
	0x01E09A3C LDR X26, [X26 + 0xB60]
	0x01E09A40 LDR X25, [X25 + 0xB68]
	0x01E09A44 LDR X0, [X22]
	0x01E09A48 ADRP X29, 0x22F0000
	0x01E09A4C ADRP X24, 0x22F0000
	0x01E09A50 ADRP X22, 0x22F0000
	0x01E09A54 LDR X29, [X29 + 0xBF0]
	0x01E09A58 LDR X24, [X24 + 0xC10]
	0x01E09A5C LDR X22, [X22 + 0xBB0]
	0x01E09A60 BL 0x1C16F10
	0x01E09A64 LDR X1, [X19]
	0x01E09A68 MOV X19, X0
	0x01E09A6C BL 0x2AA4804
	0x01E09A70 LDR X0, [X21]
	0x01E09A74 LDR X20, [X20]
	0x01E09A78 LDR W8, [X0 + 0xE0]
	0x01E09A7C CBNZ W8, 0x1E09A84
	0x01E09A80 BL 0x1C16DFC
	0x01E09A84 MOV X0, X20
	0x01E09A88 MOV X1, X31
	0x01E09A8C BL 0x338C698
	0x01E09A90 LDR X8, [X26]
	0x01E09A94 MOV X20, X0
	0x01E09A98 MOV X0, X8
	0x01E09A9C BL 0x1C16F10
	0x01E09AA0 LDR X1, [X25]
	0x01E09AA4 MOV X21, X0
	0x01E09AA8 BL 0x2F49774
	0x01E09AAC LDR X0, [X29]
	0x01E09AB0 MOV X1, X31
	0x01E09AB4 BL 0x338C698
	0x01E09AB8 LDR X1, [X24]
	0x01E09ABC LDR X3, [X22]
	0x01E09AC0 MOV X2, X0
	0x01E09AC4 ADD X0, X31, 0xD0
	0x01E09AC8 STP X31, X31, [X31 + 0xD0]
	0x01E09ACC BL 0x27ABC80
	0x01E09AD0 CBZ X21, 0x1E0A344
	0x01E09AD4 ADRP X27, 0x22F0000
	0x01E09AD8 LDR X27, [X27 + 0xB88]
	0x01E09ADC LDR W10, [X21 + 0x1C]
	0x01E09AE0 LDP X1, X2, [X31 + 0xD0]
	0x01E09AE4 LDR X8, [X21 + 0x10]
	0x01E09AE8 LDR X9, [X27]
	0x01E09AEC ADD W10, W10, 0x1
	0x01E09AF0 STR W10, [X21 + 0x1C]
	0x01E09AF4 CBZ X8, 0x1E0A344
	0x01E09AF8 LDRSW X10, [X21 + 0x18]
	0x01E09AFC LDR W11, [X8 + 0x18]
	0x01E09B00 CMP W10, W11
	0x01E09B04 B.CS 0x1E09B1C
	0x01E09B08 ADD W9, W10, 0x1
	0x01E09B0C ADD X8, X8, X10, 0x4, LSL
	0x01E09B10 STR W9, [X21 + 0x18]
	0x01E09B14 STP X1, X2, [X8 + 0x20]
	0x01E09B18 B 0x1E09B30
	0x01E09B1C LDR X8, [X9 + 0x20]
	0x01E09B20 MOV X0, X21
	0x01E09B24 LDR X8, [X8 + 0xC0]
	0x01E09B28 LDR X3, [X8 + 0x70]
	0x01E09B2C BL 0x2F49F80
	0x01E09B30 CBZ X19, 0x1E0A344
	0x01E09B34 ADRP X28, 0x22F0000
	0x01E09B38 LDR X28, [X28 + 0xBE8]
	0x01E09B3C ADRP X23, 0x22F0000
	0x01E09B40 MOV X0, X19
	0x01E09B44 MOV X1, X20
	0x01E09B48 LDR X3, [X28]
	0x01E09B4C LDR X23, [X23 + 0xB78]
	0x01E09B50 MOV X2, X21
	0x01E09B54 BL 0x2AA5098
	0x01E09B58 LDR X0, [X23]
	0x01E09B5C MOV X1, X31
	0x01E09B60 BL 0x338C698
	0x01E09B64 LDR X8, [X26]
	0x01E09B68 MOV X20, X0
	0x01E09B6C MOV X0, X8
	0x01E09B70 BL 0x1C16F10
	0x01E09B74 LDR X1, [X25]
	0x01E09B78 MOV X21, X0
	0x01E09B7C BL 0x2F49774
	0x01E09B80 LDR X0, [X29]
	0x01E09B84 MOV X1, X31
	0x01E09B88 BL 0x338C698
	0x01E09B8C LDR X1, [X24]
	0x01E09B90 LDR X3, [X22]
	0x01E09B94 MOV X2, X0
	0x01E09B98 ADD X0, X31, 0xC0
	0x01E09B9C STP X31, X31, [X31 + 0xC0]
	0x01E09BA0 BL 0x27ABC80
	0x01E09BA4 CBZ X21, 0x1E0A344
	0x01E09BA8 LDR W10, [X21 + 0x1C]
	0x01E09BAC LDP X1, X2, [X31 + 0xC0]
	0x01E09BB0 LDR X8, [X21 + 0x10]
	0x01E09BB4 LDR X9, [X27]
	0x01E09BB8 ADD W10, W10, 0x1
	0x01E09BBC STR W10, [X21 + 0x1C]
	0x01E09BC0 CBZ X8, 0x1E0A344
	0x01E09BC4 LDRSW X10, [X21 + 0x18]
	0x01E09BC8 LDR W11, [X8 + 0x18]
	0x01E09BCC ADRP X29, 0x22F0000
	0x01E09BD0 ADRP X24, 0x22F0000
	0x01E09BD4 LDR X29, [X29 + 0xC00]
	0x01E09BD8 LDR X24, [X24 + 0xC08]
	0x01E09BDC CMP W10, W11
	0x01E09BE0 B.CS 0x1E09BF8
	0x01E09BE4 ADD W9, W10, 0x1
	0x01E09BE8 ADD X8, X8, X10, 0x4, LSL
	0x01E09BEC STR W9, [X21 + 0x18]
	0x01E09BF0 STP X1, X2, [X8 + 0x20]
	0x01E09BF4 B 0x1E09C0C
	0x01E09BF8 LDR X8, [X9 + 0x20]
	0x01E09BFC MOV X0, X21
	0x01E09C00 LDR X8, [X8 + 0xC0]
	0x01E09C04 LDR X3, [X8 + 0x70]
	0x01E09C08 BL 0x2F49F80
	0x01E09C0C LDR X0, [X29]
	0x01E09C10 MOV X1, X31
	0x01E09C14 BL 0x338C698
	0x01E09C18 LDR X1, [X24]
	0x01E09C1C LDR X3, [X22]
	0x01E09C20 MOV X2, X0
	0x01E09C24 ADD X0, X31, 0xB0
	0x01E09C28 STP X31, X31, [X31 + 0xB0]
	0x01E09C2C BL 0x27ABC80
	0x01E09C30 LDR W10, [X21 + 0x1C]
	0x01E09C34 LDP X1, X2, [X31 + 0xB0]
	0x01E09C38 LDR X8, [X21 + 0x10]
	0x01E09C3C LDR X9, [X27]
	0x01E09C40 ADD W10, W10, 0x1
	0x01E09C44 STR W10, [X21 + 0x1C]
	0x01E09C48 CBZ X8, 0x1E0A344
	0x01E09C4C LDRSW X10, [X21 + 0x18]
	0x01E09C50 LDR W11, [X8 + 0x18]
	0x01E09C54 CMP W10, W11
	0x01E09C58 B.CS 0x1E09C70
	0x01E09C5C ADD W9, W10, 0x1
	0x01E09C60 ADD X8, X8, X10, 0x4, LSL
	0x01E09C64 STR W9, [X21 + 0x18]
	0x01E09C68 STP X1, X2, [X8 + 0x20]
	0x01E09C6C B 0x1E09C84
	0x01E09C70 LDR X8, [X9 + 0x20]
	0x01E09C74 MOV X0, X21
	0x01E09C78 LDR X8, [X8 + 0xC0]
	0x01E09C7C LDR X3, [X8 + 0x70]
	0x01E09C80 BL 0x2F49F80
	0x01E09C84 ADRP X8, 0x22F0000
	0x01E09C88 LDR X8, [X8 + 0xBF8]
	0x01E09C8C MOV X1, X31
	0x01E09C90 LDR X0, [X8]
	0x01E09C94 BL 0x338C698
	0x01E09C98 ADRP X8, 0x22F0000
	0x01E09C9C LDR X8, [X8 + 0xC18]
	0x01E09CA0 LDR X3, [X22]
	0x01E09CA4 MOV X2, X0
	0x01E09CA8 ADD X0, X31, 0xA0
	0x01E09CAC LDR X1, [X8]
	0x01E09CB0 STP X31, X31, [X31 + 0xA0]
	0x01E09CB4 BL 0x27ABC80
	0x01E09CB8 LDR W10, [X21 + 0x1C]
	0x01E09CBC LDP X1, X2, [X31 + 0xA0]
	0x01E09CC0 LDR X8, [X21 + 0x10]
	0x01E09CC4 LDR X9, [X27]
	0x01E09CC8 ADD W10, W10, 0x1
	0x01E09CCC STR W10, [X21 + 0x1C]
	0x01E09CD0 CBZ X8, 0x1E0A344
	0x01E09CD4 LDRSW X10, [X21 + 0x18]
	0x01E09CD8 LDR W11, [X8 + 0x18]
	0x01E09CDC ADRP X23, 0x22F0000
	0x01E09CE0 LDR X23, [X23 + 0xB80]
	0x01E09CE4 CMP W10, W11
	0x01E09CE8 B.CS 0x1E09D00
	0x01E09CEC ADD W9, W10, 0x1
	0x01E09CF0 ADD X8, X8, X10, 0x4, LSL
	0x01E09CF4 STR W9, [X21 + 0x18]
	0x01E09CF8 STP X1, X2, [X8 + 0x20]
	0x01E09CFC B 0x1E09D14
	0x01E09D00 LDR X8, [X9 + 0x20]
	0x01E09D04 MOV X0, X21
	0x01E09D08 LDR X8, [X8 + 0xC0]
	0x01E09D0C LDR X3, [X8 + 0x70]
	0x01E09D10 BL 0x2F49F80
	0x01E09D14 LDR X3, [X28]
	0x01E09D18 MOV X0, X19
	0x01E09D1C MOV X1, X20
	0x01E09D20 MOV X2, X21
	0x01E09D24 BL 0x2AA5098
	0x01E09D28 LDR X0, [X23]
	0x01E09D2C MOV X1, X31
	0x01E09D30 BL 0x338C698
	0x01E09D34 LDR X8, [X26]
	0x01E09D38 MOV X20, X0
	0x01E09D3C MOV X0, X8
	0x01E09D40 BL 0x1C16F10
	0x01E09D44 LDR X1, [X25]
	0x01E09D48 MOV X21, X0
	0x01E09D4C BL 0x2F49774
	0x01E09D50 ADRP X8, 0x22F0000
	0x01E09D54 LDR X8, [X8 + 0xBF0]
	0x01E09D58 MOV X1, X31
	0x01E09D5C LDR X0, [X8]
	0x01E09D60 BL 0x338C698
	0x01E09D64 ADRP X8, 0x22F0000
	0x01E09D68 LDR X8, [X8 + 0xC10]
	0x01E09D6C LDR X3, [X22]
	0x01E09D70 MOV X2, X0
	0x01E09D74 ADD X0, X31, 0x90
	0x01E09D78 LDR X1, [X8]
	0x01E09D7C STP X31, X31, [X31 + 0x90]
	0x01E09D80 BL 0x27ABC80
	0x01E09D84 CBZ X21, 0x1E0A344
	0x01E09D88 LDR W10, [X21 + 0x1C]
	0x01E09D8C LDP X1, X2, [X31 + 0x90]
	0x01E09D90 LDR X8, [X21 + 0x10]
	0x01E09D94 LDR X9, [X27]
	0x01E09D98 ADD W10, W10, 0x1
	0x01E09D9C STR W10, [X21 + 0x1C]
	0x01E09DA0 CBZ X8, 0x1E0A344
	0x01E09DA4 LDRSW X10, [X21 + 0x18]
	0x01E09DA8 LDR W11, [X8 + 0x18]
	0x01E09DAC CMP W10, W11
	0x01E09DB0 B.CS 0x1E09DC8
	0x01E09DB4 ADD W9, W10, 0x1
	0x01E09DB8 ADD X8, X8, X10, 0x4, LSL
	0x01E09DBC STR W9, [X21 + 0x18]
	0x01E09DC0 STP X1, X2, [X8 + 0x20]
	0x01E09DC4 B 0x1E09DDC
	0x01E09DC8 LDR X8, [X9 + 0x20]
	0x01E09DCC MOV X0, X21
	0x01E09DD0 LDR X8, [X8 + 0xC0]

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+128], D8
	003 Move [X31+144], X29
	004 Move [X31+152], X30
	005 Move [X31+160], X28
	006 Move [X31+168], X27
	007 Move [X31+176], X26
	008 Move [X31+184], X25
	009 Move [X31+192], X24
	010 Move [X31+200], X23
	011 Move [X31+208], X22
	012 Move [X31+216], X21
	013 Move [X31+224], X20
	014 Move [X31+232], X19
	015 Move [X31+16], X8
	016 Move X21, 0x25D0000
	017 Move X19, 0x22F1000
	018 Move W8, [X21+3498]
	019 Move X19, [X19+2544]
	020 Move X22, X2
	021 Move X25, X1
	022 Move X20, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {122}
	027 Move X0, 0x22F1000
	028 Move X0, [X0+2496]
	029 Call 0x1C17CF4
	030 Move X0, 0x22F1000
	031 Move X0, [X0+2504]
	032 Call 0x1C17CF4
	033 Move X0, 0x22F1000
	034 Move X0, [X0+2400]
	035 Call 0x1C17CF4
	036 Move X0, 0x22F1000
	037 Move X0, [X0+2704]
	038 Call 0x1C17CF4
	039 Move X0, 0x22F1000
	040 Move X0, [X0+2712]
	041 Call 0x1C17CF4
	042 Move X0, 0x22F1000
	043 Move X0, [X0+2408]
	044 Call 0x1C17CF4
	045 Move X0, 0x22F1000
	046 Move X0, [X0+2720]
	047 Call 0x1C17CF4
	048 Move X0, 0x22F1000
	049 Move X0, [X0+2416]
	050 Call 0x1C17CF4
	051 Move X0, 0x22F1000
	052 Move X0, [X0+2512]
	053 Call 0x1C17CF4
	054 Move X0, 0x22EB000
	055 Move X0, [X0+2648]
	056 Call 0x1C17CF4
	057 Move X0, 0x22F1000
	058 Move X0, [X0+2808]
	059 Call 0x1C17CF4
	060 Move X0, 0x22F1000
	061 Move X0, [X0+2816]
	062 Call 0x1C17CF4
	063 Move X0, 0x22F1000
	064 Move X0, [X0+2576]
	065 Call 0x1C17CF4
	066 Move X0, 0x22F1000
	067 Move X0, [X0+2728]
	068 Call 0x1C17CF4
	069 Move X0, 0x22F1000
	070 Move X0, [X0+2424]
	071 Call 0x1C17CF4
	072 Move X0, 0x22F1000
	073 Move X0, [X0+2736]
	074 Call 0x1C17CF4
	075 Move X0, 0x22F1000
	076 Move X0, [X0+2608]
	077 Call 0x1C17CF4
	078 Move X0, 0x22F1000
	079 Move X0, [X0+2744]
	080 Call 0x1C17CF4
	081 Move X0, 0x22F1000
	082 Move X0, [X0+2752]
	083 Call 0x1C17CF4
	084 Move X0, 0x22F1000
	085 Move X0, [X0+2760]
	086 Call 0x1C17CF4
	087 Move X0, 0x22F1000
	088 Move X0, [X0+2624]
	089 Call 0x1C17CF4
	090 Move X0, 0x22F1000
	091 Move X0, [X0+2632]
	092 Call 0x1C17CF4
	093 Move X0, 0x22F1000
	094 Move X0, [X0+2768]
	095 Call 0x1C17CF4
	096 Move X0, 0x22F1000
	097 Move X0, [X0+2776]
	098 Call 0x1C17CF4
	099 Move X0, 0x22F1000
	100 Move X0, [X0+2784]
	101 Call 0x1C17CF4
	102 Move X0, 0x22F1000
	103 Move X0, [X0+2544]
	104 Call 0x1C17CF4
	105 Move X0, 0x22EB000
	106 Move X0, [X0+1432]
	107 Call 0x1C17CF4
	108 Move X0, 0x22F1000
	109 Move X0, [X0+2824]
	110 Call 0x1C17CF4
	111 Move X0, 0x22F1000
	112 Move X0, [X0+2832]
	113 Call 0x1C17CF4
	114 Move X0, 0x22F1000
	115 Move X0, [X0+2792]
	116 Call 0x1C17CF4
	117 Move X0, 0x22EB000
	118 Move X0, [X0+3784]
	119 Call 0x1C17CF4
	120 Move W8, 1
	121 Move [X21+3498], W8
	122 NotImplemented "Instruction MOVI not yet implemented."
	123 Move X24, X20
	124 Move [X31+136], X31
	125 Move [X31+112], X31
	126 Move [X31+120], X31
	127 Move [X31+96], X31
	128 Move [X31+104], X31
	129 Move [X31+64], V0
	130 Move [X31+72], V0
	131 Move [X24+144], V0
	132 Move [X24+1], V0
	133 Move X0, [X19]
	134 Call 0x1C17F10
	135 Move X1, X31
	136 Move X23, X0
	137 Call NodeGenerationResult..ctor, X0
	138 Move [X24+24], X23
	139 Compare X23, 0
	140 JumpIfEqual {675}
	141 Move [X31+24], X25
	142 Move X8, 0x22F1000
	143 Move X8, [X8+2776]
	144 Move [X23+16], X20
	145 Move [X20+176], X22
	146 Move [X20+192], X31
	147 Move X0, [X8]
	148 Move X21, 0x22F1000
	149 Move X21, [X21+2760]
	150 Call 0x1C17F10
	151 Move X1, [X21]
	152 Move X22, X0
	153 Call List`1<WeightedRoomTile>..ctor, X0
	154 Move X0, [X20+64]
	155 Move [X20+96], X22
	156 Compare X0, 0
	157 JumpIfEqual {675}
	158 Move X27, 0x22F1000
	159 Move X27, [X27+2736]
	160 Move X25, 0x22F1000
	161 Move X26, 0x22F1000
	162 Move X28, 0x22F1000
	163 Move X19, 0x22F1000
	164 Move X29, 0x22F1000
	165 Move X25, [X25+2712]
	166 Move X26, [X26+2424]
	167 Move X28, [X28+2408]
	168 Move X19, [X19+2728]
	169 Move X29, [X29+2400]
	170 Move X1, [X27]
	171 Add X8, X31, 32
	172 Call List`1<Object>.GetEnumerator, X0
	173 Move V0, [X31+2]
	174 Move X8, [X31+48]
	175 Move [X31+6], V0
	176 Move [X31+112], X8
	177 Move X1, [X25]
	178 Add X0, X31, 96
	179 Call Enumerator<Object>.MoveNext, X0
	180 Move TEMP, X0
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfNotEqual {242}
	184 Move X8, [X31+112]
	185 Compare X8, 0
	186 JumpIfEqual {739}
	187 Move X0, [X8+24]
	188 Compare X0, 0
	189 JumpIfEqual {740}
	190 Move X1, [X26]
	191 Add X8, X31, 32
	192 Call List`1<WeightedRoomTile>.GetEnumerator, X0
	193 Move V0, [X31+32]
	194 Move V1, [X31+48]
	195 Move [X31+64], V0
	196 Move [X31+72], V1
	197 Move X1, [X28]
	198 Add X0, X31, 64
	199 Call Enumerator<WeightedRoomTile>.MoveNext, X0
	200 Move TEMP, X0
	201 And TEMP, TEMP, 1
	202 Compare TEMP, 1
	203 JumpIfNotEqual {228}
	204 Move X0, [X20+96]
	205 Compare X0, 0
	206 JumpIfEqual {234}
	207 Move W10, [X0+28]
	208 Move X1, [X31+80]
	209 Move X2, [X31+88]
	210 Move X8, [X0+16]
	211 Move X9, [X19]
	212 Add W10, W10, 1
	213 Move [X0+28], W10
	214 Compare X8, 0
	215 JumpIfEqual {235}
	216 NotImplemented "Instruction LDRSW not yet implemented."
	217 Move W11, [X8+24]
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Add W9, W10, 1
	220 Add X8, X8, X10
	221 Move [X0+24], W9
	222 Move [X8+32], X1
	223 Move [X8+40], X2
	224 Move X8, [X9+32]
	225 Move X8, [X8+192]
	226 Move X3, [X8+112]
	227 Call List`1<WeightedRoomTile>.AddWithResize, X0, X1
	228 Move X23, X31
	229 Move X1, [X29]
	230 Add X0, X31, 64
	231 Call Enumerator<WeightedRoomTile>.Dispose, X0
	232 Compare X23, 0
	233 JumpIfEqual {177}
	234 Call 0x1C17F20
	235 Call 0x1C17F20
	236 Move X22, X0
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move X0, X22
	239 Call 0x3EB2AD0
	240 Move X23, [X0]
	241 Call 0x3EB2AE0
	242 Move X8, 0x22F1000
	243 Move X8, [X8+2704]
	244 Add X0, X31, 96
	245 Move X1, [X8]
	246 Call Enumerator<Object>.Dispose, X0
	247 Move X8, 0x22F1000
	248 Move X8, [X8+2776]
	249 Move X0, [X8]
	250 Call 0x1C17F10
	251 Move X1, [X21]
	252 Move X22, X0
	253 Call List`1<WeightedRoomTile>..ctor, X0
	254 Move X0, [X20+72]
	255 Move [X20+104], X22
	256 Compare X0, 0
	257 JumpIfEqual {675}
	258 Move X1, [X27]
	259 Add X8, X31, 32
	260 Call List`1<Object>.GetEnumerator, X0
	261 Move V0, [X31+2]
	262 Move X8, [X31+48]
	263 Move [X31+6], V0
	264 Move [X31+112], X8
	265 Move X1, [X25]
	266 Add X0, X31, 96
	267 Call Enumerator<Object>.MoveNext, X0
	268 Move TEMP, X0
	269 And TEMP, TEMP, 1
	270 Compare TEMP, 1
	271 JumpIfNotEqual {335}
	272 Move X8, [X31+112]
	273 Compare X8, 0
	274 JumpIfEqual {745}
	275 Move X0, [X8+24]
	276 Compare X0, 0
	277 JumpIfEqual {746}
	278 Move X1, [X26]
	279 Add X8, X31, 32
	280 Call List`1<WeightedRoomTile>.GetEnumerator, X0
	281 Move V0, [X31+32]
	282 Move V1, [X31+48]
	283 Move [X31+64], V0
	284 Move [X31+72], V1
	285 Move X1, [X28]
	286 Add X0, X31, 64
	287 Call Enumerator<WeightedRoomTile>.MoveNext, X0
	288 Move TEMP, X0
	289 And TEMP, TEMP, 1
	290 Compare TEMP, 1
	291 JumpIfNotEqual {316}
	292 Move X0, [X20+104]
	293 Compare X0, 0
	294 JumpIfEqual {326}
	295 Move W10, [X0+28]
	296 Move X1, [X31+80]
	297 Move X2, [X31+88]
	298 Move X8, [X0+16]
	299 Move X9, [X19]
	300 Add W10, W10, 1
	301 Move [X0+28], W10
	302 Compare X8, 0
	303 JumpIfEqual {327}
	304 NotImplemented "Instruction LDRSW not yet implemented."
	305 Move W11, [X8+24]
	306 NotImplemented "Instruction CMP not yet implemented."
	307 Add W9, W10, 1
	308 Add X8, X8, X10
	309 Move [X0+24], W9
	310 Move [X8+32], X1
	311 Move [X8+40], X2
	312 Move X8, [X9+32]
	313 Move X8, [X8+192]
	314 Move X3, [X8+112]
	315 Call List`1<WeightedRoomTile>.AddWithResize, X0, X1
	316 Move X23, X31
	317 Move W21, 7
	318 Move X1, [X29]
	319 Add X0, X31, 64
	320 Call Enumerator<WeightedRoomTile>.Dispose, X0
	321 Compare X23, 0
	322 JumpIfNotEqual {743}
	323 NotImplemented "Instruction CMP not yet implemented."
	324 Compare W21, 0
	325 JumpIfEqual {265}
	326 Call 0x1C17F20
	327 Call 0x1C17F20
	328 Move X22, X0
	329 NotImplemented "Instruction CMP not yet implemented."
	330 Move X0, X22
	331 Call 0x3EB2AD0
	332 Move X23, [X0]
	333 Call 0x3EB2AE0
	334 Move W21, W31
	335 Move X8, 0x22F1000
	336 Move X8, [X8+2704]
	337 Add X0, X31, 96
	338 Move X1, [X8]
	339 Call Enumerator<Object>.Dispose, X0
	340 Move X25, 0x22F1000
	341 Move X26, 0x22F1000
	342 Move X25, [X25+2752]
	343 Move X26, [X26+2784]
	344 Move X19, [X31+24]
	345 Move X8, 0x22F1000
	346 Move X8, [X8+2768]
	347 Move X0, [X8]
	348 Call 0x1C17F10
	349 Move X8, 0x22F1000
	350 Move X8, [X8+2744]
	351 Move X22, X0
	352 Move X1, [X8]
	353 Call List`1<Bounds>..ctor, X0
	354 Move [X20+128], X22
	355 Move X0, [X26]
	356 Call 0x1C17F10
	357 Move X1, [X25]
	358 Move X22, X0
	359 Call List`1<Object>..ctor, X0
	360 Compare X22, 0
	361 JumpIfEqual {675}
	362 Move X9, 0x22F1000
	363 Move W10, [X22+28]
	364 Move X8, [X22+16]
	365 Move X9, [X9+2576]
	366 Add W10, W10, 1
	367 Move X9, [X9]
	368 Move [X22+28], W10
	369 Compare X8, 0
	370 JumpIfEqual {675}
	371 NotImplemented "Instruction LDRSW not yet implemented."
	372 Move W11, [X8+24]
	373 NotImplemented "Instruction CMP not yet implemented."
	374 Add W9, W10, 1
	375 Add X8, X8, X10
	376 Move [X22+24], W9
	377 Move [X8+32], X19
	378 Move X8, [X9+32]
	379 Move X0, X22
	380 Move X1, X19
	381 Move X8, [X8+192]
	382 Move X2, [X8+112]
	383 Call List`1<Object>.AddWithResize, X0, X1
	384 Move X0, X20
	385 Move [X20+120], X22
	386 Call BranchAndLeafArchetype.get_NodeTitle, X0
	387 Move X8, 0x22EB000
	388 Move X8, [X8+3784]
	389 Move X9, 0x22F1000
	390 Move X1, X0
	391 Move X3, X31
	392 Move X8, [X8]
	393 Move X9, [X9+2792]
	394 Move X0, X8
	395 Move X2, [X9]
	396 Call String.Concat, X0, X1, X2
	397 Move X8, 0x22EB000
	398 Move X8, [X8+2648]
	399 Move X23, X0
	400 Move X8, [X8]
	401 Move X0, X8
	402 Call 0x1C17F10
	403 Move X1, X23
	404 Move X2, X31
	405 Move X22, X0
	406 Call GameObject..ctor, X0, X1
	407 Compare X22, 0
	408 JumpIfEqual {675}
	409 Move X0, X22
	410 Move X1, X31
	411 Call GameObject.get_transform, X0
	412 Move [X20+136], X0
	413 Compare X0, 0
	414 JumpIfEqual {675}
	415 Move X1, X31
	416 Call Component.get_transform, X0
	417 Compare X19, 0
	418 JumpIfEqual {675}
	419 Move X22, X0
	420 Move X0, X19
	421 Move X1, X31
	422 Call Component.get_transform, X0
	423 Compare X22, 0
	424 JumpIfEqual {675}
	425 Move X1, X0
	426 Move X0, X22
	427 Move X2, X31
	428 Call Transform.set_parent, X0, X1
	429 Move X0, [X20+136]
	430 Compare X0, 0
	431 JumpIfEqual {675}
	432 Move X1, X31
	433 Call Component.get_transform, X0
	434 Move X19, 0x25D0000
	435 Move W8, [X19+1923]
	436 Move X21, X0
	437 Compare W8, 0
	438 JumpIfNotEqual {444}
	439 Move X0, 0x22EB000
	440 Move X0, [X0+1440]
	441 Call 0x1C17CF4
	442 Move W8, 1
	443 Move [X19+1923], W8
	444 Compare X21, 0
	445 JumpIfEqual {675}
	446 Move X8, 0x22EB000
	447 Move X8, [X8+1440]
	448 Move X0, X21
	449 Move X1, X31
	450 Move X8, [X8]
	451 Move X8, [X8+184]
	452 Move S1, [X8+4]
	453 Move S2, [X8+8]
	454 Move V0, [X8]
	455 Call Transform.set_localPosition, X0, X1
	456 Move X0, [X20+136]
	457 Compare X0, 0
	458 JumpIfEqual {675}
	459 Move X1, X31
	460 Call Component.get_transform, X0
	461 Move X19, 0x25D0000
	462 Move W8, [X19+1939]
	463 Move X21, X0
	464 Compare W8, 0
	465 JumpIfNotEqual {471}
	466 Move X0, 0x22EC000
	467 Move X0, [X0+1448]
	468 Call 0x1C17CF4
	469 Move W8, 1
	470 Move [X19+1939], W8
	471 Compare X21, 0
	472 JumpIfEqual {675}
	473 Move X8, 0x22EC000
	474 Move X8, [X8+1448]
	475 Move X0, X21
	476 Move X1, X31
	477 Move X8, [X8]
	478 Move X8, [X8+184]
	479 Move S2, [X8+8]
	480 Move S3, [X8+12]
	481 Move S0, [X8]
	482 Move S1, [X8+4]
	483 Call Transform.set_localRotation, X0, X1
	484 Move X0, [X20+136]
	485 Compare X0, 0
	486 JumpIfEqual {675}
	487 Move X19, [X20+168]
	488 Move X1, X31
	489 Call Component.get_gameObject, X0
	490 Compare X19, 0
	491 JumpIfEqual {675}
	492 Move X8, -20045824
	493 Move [X19+24], X0
	494 Move V8, [X8+816]
	495 Move X1, [X20+96]
	496 Move X2, [X20+120]
	497 Move X4, [X20+128]
	498 Move X5, [X20+176]
	499 Move W6, [X20+80]
	500 Add X7, X31, 136
	501 Move W3, 1
	502 Move X0, X20
	503 Move V0, V8
	504 Call Archetype.TryGenerateRooms, X0, X1, X2, X3, X4, X5, X6, V0, X7
	505 Move TEMP, X0
	506 And TEMP, TEMP, 1
	507 Compare TEMP, 1
	508 JumpIfNotEqual {676}
	509 Move X19, 0x22F1000
	510 Move X19, [X19+2832]
	511 Move X21, [X20+120]
	512 Move X0, [X19]
	513 Move W8, [X0+224]
	514 Compare W8, 0
	515 JumpIfNotEqual {518}
	516 Call 0x1C17DFC
	517 Move X0, [X19]
	518 Move X8, [X0+184]
	519 Move X22, [X8+8]
	520 Compare X22, 0
	521 JumpIfNotEqual {543}
	522 Move W8, [X0+224]
	523 Compare W8, 0
	524 JumpIfNotEqual {527}
	525 Call 0x1C17DFC
	526 Move X0, [X19]
	527 Move X9, 0x22F1000
	528 Move X8, [X0+184]
	529 Move X9, [X9+2512]
	530 Move X23, [X8]
	531 Move X0, [X9]
	532 Call 0x1C17F10
	533 Move X8, 0x22F1000
	534 Move X8, [X8+2824]
	535 Move X1, X23
	536 Move X3, X31
	537 Move X22, X0
	538 Move X2, [X8]
	539 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	540 Move X8, [X19]
	541 Move X8, [X8+184]
	542 Move [X8+8], X22
	543 Move X8, 0x22F1000
	544 Move X8, [X8+2504]
	545 Move X0, X21
	546 Move X1, X22
	547 Move X2, [X8]
	548 Call Enumerable.Where, X0, X1
	549 Move X8, 0x22F1000
	550 Move X8, [X8+2496]
	551 Move X1, [X8]
	552 Call Enumerable.ToList, X0
	553 Move X1, [X20+104]
	554 Move X4, [X20+128]
	555 Move X5, [X20+176]
	556 Move W6, [X20+84]
	557 Move X2, X0
	558 Move [X20+184], X0
	559 Add X7, X31, 120
	560 Move W3, 2
	561 Move X0, X20
	562 Move V0, V8
	563 Call Archetype.TryGenerateRooms, X0, X1, X2, X3, X4, X5, X6, V0, X7
	564 Move TEMP, X0
	565 And TEMP, TEMP, 1
	566 Compare TEMP, 1
	567 JumpIfNotEqual {634}
	568 Move X0, [X26]
	569 Call 0x1C17F10
	570 Move X1, [X25]
	571 Move X21, X0
	572 Call List`1<Object>..ctor, X0
	573 Move W8, [X20+88]
	574 Compare W8, 0
	575 JumpIfEqual {584}
	576 Compare X21, 0
	577 JumpIfEqual {675}
	578 Move X8, 0x22F1000
	579 Move X1, [X20+120]
	580 Move X8, [X8+2816]
	581 Move X0, X21
	582 Move X2, [X8]
	583 Call List`1<Object>.AddRange, X0, X1
	584 Move W8, [X20+89]
	585 Compare W8, 0
	586 JumpIfEqual {595}
	587 Compare X21, 0
	588 JumpIfEqual {675}
	589 Move X8, 0x22F1000
	590 Move X1, [X20+184]
	591 Move X8, [X8+2816]
	592 Move X0, X21
	593 Move X2, [X8]
	594 Call List`1<Object>.AddRange, X0, X1
	595 Move X0, X21
	596 Move X1, X31
	597 Call GameGenUtil.GetOuterSockets, X0
	598 Move X8, [X20+128]
	599 Move X9, [X20+168]
	600 Move W10, 1
	601 Move [X20+144], W10
	602 Move [X20+152], X0
	603 Move [X20+160], X8
	604 Compare X9, 0
	605 JumpIfEqual {675}
	606 Move X8, [X31+136]
	607 Compare X8, 0
	608 JumpIfEqual {675}
	609 Move X0, [X9+32]
	610 Compare X0, 0
	611 JumpIfEqual {675}
	612 Move X19, 0x22F1000
	613 Move X1, [X8+32]
	614 Move X19, [X19+2808]
	615 Move X2, [X19]
	616 Call List`1<Object>.AddRange, X0, X1
	617 Move X9, [X20+168]
	618 Compare X9, 0
	619 JumpIfEqual {675}
	620 Move X8, [X31+120]
	621 Compare X8, 0
	622 JumpIfEqual {675}
	623 Move X0, [X9+32]
	624 Compare X0, 0
	625 JumpIfEqual {675}
	626 Move X1, [X8+32]
	627 Move X2, [X19]
	628 Call List`1<Object>.AddRange, X0, X1
	629 Move X8, 0x22F1000
	630 Move X8, [X8+2704]
	631 Add X0, X31, 96
	632 Move X1, [X8]
	633 Call Enumerator<Object>.Dispose, X0
	634 Move X19, [X31+136]
	635 Compare X19, 0
	636 JumpIfEqual {675}
	637 Move X0, [X19+32]
	638 Compare X0, 0
	639 JumpIfEqual {675}
	640 Move W8, [X0+24]
	641 Subtract W21, W8, 1
	642 Move X23, 0x22F1000
	643 Move X25, 0x22EB000
	644 Move X26, 0x22F1000
	645 Move X23, [X23+2632]
	646 Move X25, [X25+1432]
	647 Move X26, [X26+2608]
	648 Move X2, [X23]
	649 Move W1, W21
	650 Call List`1<Object>.get_Item, X0, X1
	651 Compare X0, 0
	652 JumpIfEqual {675}
	653 Move X1, X31
	654 Call Component.get_gameObject, X0
	655 Move X8, [X25]
	656 Move X22, X0
	657 Move W9, [X8+224]
	658 Compare W9, 0
	659 JumpIfNotEqual {662}
	660 Move X0, X8
	661 Call 0x1C17DFC
	662 Move X0, X22
	663 Move X1, X31
	664 Call Object.DestroyImmediate, X0
	665 Move X0, [X19+32]
	666 Compare X0, 0
	667 JumpIfEqual {675}
	668 Move X2, [X26]
	669 Move W1, W21
	670 Call List`1<Object>.RemoveAt, X0, X1
	671 Subtract W21, W21, 1
	672 Move X0, [X19+32]
	673 Compare X0, 0
	674 JumpIfNotEqual {648}
	675 Call 0x1C17F20
	676 Move X0, [X20+136]
	677 Move [X20+144], W31
	678 Compare X0, 0
	679 JumpIfEqual {675}
	680 Move X1, X31
	681 Call Component.get_gameObject, X0
	682 Move X8, 0x22EB000
	683 Move X8, [X8+1432]
	684 Move X20, X0
	685 Move X8, [X8]
	686 Move W9, [X8+224]
	687 Compare W9, 0
	688 JumpIfNotEqual {691}
	689 Move X0, X8
	690 Call 0x1C17DFC
	691 Move X0, X20
	692 Move X1, X31
	693 Call Object.DestroyImmediate, X0
	694 Move V1, [X24]
	695 Move V0, [X24+16]
	696 Move X8, [X31+16]
	697 Move [X8], V1
	698 Move [X8+8], V0
	699 Move X20, [X31+224]
	700 Move X19, [X31+232]
	701 Move X22, [X31+208]
	702 Move X21, [X31+216]
	703 Move X24, [X31+192]
	704 Move X23, [X31+200]
	705 Move X26, [X31+176]
	706 Move X25, [X31+184]
	707 Move X28, [X31+160]
	708 Move X27, [X31+168]
	709 Move X29, [X31+144]
	710 Move X30, [X31+152]
	711 Move V8, [X31+128]
	712 Add X31, X31, 240
	713 Return X0
	714 Move [X31+8], X1
	715 Move X23, X31
	716 Move X1, [X29]
	717 Add X0, X31, 64
	718 Call Enumerator<WeightedRoomTile>.Dispose, X0
	719 Move X1, [X31+8]
	720 Compare X23, 0
	721 JumpIfEqual {781}
	722 Move X0, X23
	723 Call 0x1C17F18
	724 Move [X31+8], X1
	725 Move X23, X31
	726 Move X1, [X29]
	727 Add X0, X31, 64
	728 Call Enumerator<WeightedRoomTile>.Dispose, X0
	729 Move X25, 0x22F1000
	730 Move X26, 0x22F1000
	731 Move X1, [X31+8]
	732 Move X25, [X25+2752]
	733 Move X26, [X26+2784]
	734 Move X19, [X31+24]
	735 Compare X23, 0
	736 JumpIfEqual {757}
	737 Move X0, X23
	738 Call 0x1C17F18
	739 Call 0x1C17F20
	740 Call 0x1C17F20
	741 Move X0, X23
	742 Call 0x1C17F18
	743 Move X0, X23
	744 Call 0x1C17F18
	745 Call 0x1C17F20
	746 Call 0x1C17F20
	747 Move X22, X0
	748 Move [X31+8], X1
	749 Move X22, X0
	750 Move [X31+8], X1
	751 Move X25, 0x22F1000
	752 Move X26, 0x22F1000
	753 Move X25, [X25+2752]
	754 Move X26, [X26+2784]
	755 Move X19, [X31+24]
	756 Move X22, X0
	757 NotImplemented "Instruction CMP not yet implemented."
	758 Move X0, X22
	759 Call 0x3EB2AD0
	760 Move X23, [X0]
	761 Call 0x3EB2AE0
	762 Move X8, 0x22F1000
	763 Move X8, [X8+2704]
	764 Add X0, X31, 96
	765 Move X1, [X8]
	766 Call Enumerator<Object>.Dispose, X0
	767 Compare X23, 0
	768 JumpIfEqual {345}
	769 Move X23, X31
	770 Move X22, X0
	771 Move X8, 0x22F1000
	772 Move X8, [X8+2704]
	773 Move X1, [X8]
	774 Add X0, X31, 96
	775 Call Enumerator<Object>.Dispose, X0
	776 Compare X23, 0
	777 JumpIfEqual {804}
	778 Move X0, X23
	779 Call 0x1C17F18
	780 Move X22, X0
	781 NotImplemented "Instruction CMP not yet implemented."
	782 Move X0, X22
	783 Call 0x3EB2AD0
	784 Move X23, [X0]
	785 Call 0x3EB2AE0
	786 Move X8, 0x22F1000
	787 Move X8, [X8+2704]
	788 Add X0, X31, 96
	789 Move X1, [X8]
	790 Call Enumerator<Object>.Dispose, X0
	791 Compare X23, 0
	792 JumpIfEqual {247}
	793 Move X0, X23
	794 Call 0x1C17F18
	795 Move X23, X31
	796 Move X22, X0
	797 Move X8, 0x22F1000
	798 Move X8, [X8+2704]
	799 Move X1, [X8]
	800 Add X0, X31, 96
	801 Call Enumerator<Object>.Dispose, X0
	802 Compare X23, 0
	803 JumpIfNotEqual {806}
	804 Move X0, X22
	805 Call 0x1D2D690
	806 Move X0, X23
	807 Call 0x1C17F18
	808 Call 0x1991590

Method: System.Boolean GenerateLeaves()

Disassembly:
	0x01E09DD4 LDR X3, [X8 + 0x70]
	0x01E09DD8 BL 0x2F49F80

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x01E09DDC LDR X0, [X29]
	0x01E09DE0 MOV X1, X31
	0x01E09DE4 BL 0x338C698
	0x01E09DE8 LDR X1, [X24]
	0x01E09DEC LDR X3, [X22]
	0x01E09DF0 MOV X2, X0

ISIL:
	001 NotImplemented "Instruction MOVI not yet implemented."
	002 Move W8, 1
	003 Move X1, X31
	004 Move [X0+80], D0
	005 Move [X0+88], W8
	006 Call ForceNode..ctor, X0
	007 Return 

