Type: AnimalCompany.GameGen.GenerationNodeHandle/<>c

Method: System.Void .cctor()

Disassembly:
	0x01E169C8 LDR X8, [X0 + 0x18]
	0x01E169CC MOV X20, X0
	0x01E169D0 CBZ X8, 0x1E17148
	0x01E169D4 LDR X9, [X19 + 0x110]
	0x01E169D8 CBZ X9, 0x1E172AC
	0x01E169DC LDP W2, W10, [X9 + 0x18]
	0x01E169E0 ADD W10, W10, 0x1
	0x01E169E4 CMP W2, 0x1
	0x01E169E8 STP W31, W10, [X9 + 0x18]
	0x01E169EC B.LT 0x1E16A04
	0x01E169F0 LDR X0, [X9 + 0x10]
	0x01E169F4 MOV W1, W31
	0x01E169F8 MOV X3, X31
	0x01E169FC BL 0x339FA34
	0x01E16A00 LDR X8, [X20 + 0x18]
	0x01E16A04 CMP W8, 0x1
	0x01E16A08 B.LT 0x1E16AE0
	0x01E16A0C ADRP X25, 0x22E3000
	0x01E16A10 ADRP X27, 0x22DD000
	0x01E16A14 ADRP X28, 0x22E3000
	0x01E16A18 LDR X25, [X25 + 0x148]
	0x01E16A1C LDR X27, [X27 + 0x598]
	0x01E16A20 LDR X28, [X28 + 0x150]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x25C3000
	005 Move X20, 0x22E5000
	006 Move W8, [X19+3578]
	007 Move X20, [X20+696]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22E5000
	013 Move X0, [X0+696]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3578], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x01E16A24 MOV X23, X31
	0x01E16A28 ADD X24, X20, 0x20

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean <TryGenerate>b__9_2(AnimalCompany.GameGen.GenBranch b)

Disassembly:
	0x01E16A2C CMP W23, W8
	0x01E16A30 B.CS 0x1E172BC
	0x01E16A34 LDR X0, [X24, X23, LSL #3]
	0x01E16A38 CBZ X0, 0x1E172AC
	0x01E16A3C LDR X2, [X25]
	0x01E16A40 ADD X1, X31, 0x78
	0x01E16A44 BL 0x21A4990
	0x01E16A48 TBZ X0, 0x0, 0x1E16AD0
	0x01E16A4C LDR X0, [X27]
	0x01E16A50 LDR X21, [X31 + 0x78]
	0x01E16A54 LDR X22, [X19 + 0x108]
	0x01E16A58 LDR W8, [X0 + 0xE0]
	0x01E16A5C CBNZ W8, 0x1E16A64
	0x01E16A60 BL 0x1C16DFC
	0x01E16A64 MOV X0, X21
	0x01E16A68 MOV X1, X22
	0x01E16A6C MOV X2, X31
	0x01E16A70 BL 0x3C3883C
	0x01E16A74 TBNZ X0, 0x0, 0x1E16AE0
	0x01E16A78 LDR X0, [X19 + 0x110]
	0x01E16A7C CBZ X0, 0x1E172AC
	0x01E16A80 LDR W10, [X0 + 0x1C]
	0x01E16A84 LDR X1, [X31 + 0x78]
	0x01E16A88 LDR X8, [X0 + 0x10]
	0x01E16A8C LDR X9, [X28]
	0x01E16A90 ADD W10, W10, 0x1
	0x01E16A94 STR W10, [X0 + 0x1C]
	0x01E16A98 CBZ X8, 0x1E172AC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x25C3000
	005 Move W8, [X20+3579]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x22E5000
	012 Move X0, [X0+584]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3579], W8
	016 Compare X19, 0
	017 JumpIfEqual {35}
	018 Move X8, 0x22E5000
	019 Move X8, [X8+584]
	020 Move X19, [X19+48]
	021 Move X0, [X8]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X19
	027 Move X1, X31
	028 Call Ext.IsNullOrEmpty, X0
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 NotImplemented "Instruction ORN not yet implemented."
	032 And W0, W8, 1
	033 Move X30, [X31+32]
	034 Return X0
	035 Call 0x1C17F20

Method: System.Boolean <TryGenerate>b__9_4(AnimalCompany.GameGen.Socket s)

Disassembly:
	0x01E16A9C LDRSW X10, [X0 + 0x18]
	0x01E16AA0 LDR W11, [X8 + 0x18]
	0x01E16AA4 CMP W10, W11
	0x01E16AA8 B.CS 0x1E16AC0
	0x01E16AAC ADD W9, W10, 0x1
	0x01E16AB0 ADD X8, X8, X10, 0x3, LSL
	0x01E16AB4 STR W9, [X0 + 0x18]
	0x01E16AB8 STR X1, [X8 + 0x20]
	0x01E16ABC B 0x1E16AD0
	0x01E16AC0 LDR X8, [X9 + 0x20]
	0x01E16AC4 LDR X8, [X8 + 0xC0]
	0x01E16AC8 LDR X2, [X8 + 0x70]
	0x01E16ACC BL 0x301BF90
	0x01E16AD0 LDR W8, [X20 + 0x18]
	0x01E16AD4 ADD X23, X23, 0x1
	0x01E16AD8 CMP W23, W8
	0x01E16ADC B.LT 0x1E16A2C
	0x01E16AE0 ADRP X25, 0x22DD000
	0x01E16AE4 LDR X25, [X25 + 0x598]
	0x01E16AE8 LDR X20, [X19 + 0x108]
	0x01E16AEC LDR X0, [X25]
	0x01E16AF0 LDR W8, [X0 + 0xE0]
	0x01E16AF4 CBNZ W8, 0x1E16AFC
	0x01E16AF8 BL 0x1C16DFC
	0x01E16AFC MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x25C3000
	005 Move W8, [X20+3580]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x22E5000
	012 Move X0, [X0+584]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3580], W8
	016 Compare X19, 0
	017 JumpIfEqual {33}
	018 Move X8, 0x22E5000
	019 Move X8, [X8+584]
	020 Move X19, [X19+40]
	021 Move X0, [X8]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X1, X31
	030 Move X30, [X31+32]
	031 Call Ext.IsNullOrEmpty, X0
	032 Return X0
	033 Call 0x1C17F20

