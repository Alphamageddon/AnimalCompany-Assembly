Type: AnimalCompany.GameGen.GenGraph

Method: System.Collections.Generic.List`1<Less3.ForceGraph.ForceConnection> GetNodeConnections(Less3.ForceGraph.ForceNode node)

Disassembly:
	0x01E0A12C STR W10, [X21 + 0x1C]
	0x01E0A130 ADRP X29, 0x22EF000
	0x01E0A134 LDR X8, [X21 + 0x10]
	0x01E0A138 LDR X24, [X24 + 0xC10]
	0x01E0A13C LDR X29, [X29 + 0xBF0]
	0x01E0A140 CBZ X8, 0x1E0A344
	0x01E0A144 LDRSW X10, [X21 + 0x18]
	0x01E0A148 LDR W11, [X8 + 0x18]
	0x01E0A14C ADRP X23, 0x22EF000
	0x01E0A150 LDR X23, [X23 + 0xB90]
	0x01E0A154 CMP W10, W11
	0x01E0A158 B.CS 0x1E0A170
	0x01E0A15C ADD W9, W10, 0x1
	0x01E0A160 ADD X8, X8, X10, 0x4, LSL
	0x01E0A164 STR W9, [X21 + 0x18]
	0x01E0A168 STP X1, X2, [X8 + 0x20]
	0x01E0A16C B 0x1E0A184
	0x01E0A170 LDR X8, [X9 + 0x20]
	0x01E0A174 MOV X0, X21
	0x01E0A178 LDR X8, [X8 + 0xC0]
	0x01E0A17C LDR X3, [X8 + 0x70]
	0x01E0A180 BL 0x2F49F80
	0x01E0A184 LDR X3, [X28]
	0x01E0A188 MOV X0, X19
	0x01E0A18C MOV X1, X20
	0x01E0A190 MOV X2, X21
	0x01E0A194 BL 0x2AA5098
	0x01E0A198 LDR X0, [X23]
	0x01E0A19C MOV X1, X31
	0x01E0A1A0 BL 0x338C698
	0x01E0A1A4 LDR X8, [X26]
	0x01E0A1A8 MOV X20, X0
	0x01E0A1AC MOV X0, X8
	0x01E0A1B0 BL 0x1C16F10
	0x01E0A1B4 LDR X1, [X25]
	0x01E0A1B8 MOV X21, X0
	0x01E0A1BC BL 0x2F49774
	0x01E0A1C0 ADRP X8, 0x22EF000
	0x01E0A1C4 LDR X8, [X8 + 0xBF8]
	0x01E0A1C8 MOV X1, X31
	0x01E0A1CC LDR X0, [X8]
	0x01E0A1D0 BL 0x338C698
	0x01E0A1D4 ADRP X8, 0x22EF000
	0x01E0A1D8 LDR X8, [X8 + 0xC18]
	0x01E0A1DC LDR X3, [X22]
	0x01E0A1E0 MOV X2, X0
	0x01E0A1E4 ADD X0, X31, 0x20
	0x01E0A1E8 LDR X1, [X8]
	0x01E0A1EC STP X31, X31, [X31 + 0x20]
	0x01E0A1F0 BL 0x27ABC80
	0x01E0A1F4 CBZ X21, 0x1E0A344
	0x01E0A1F8 LDR W10, [X21 + 0x1C]
	0x01E0A1FC LDP X1, X2, [X31 + 0x20]
	0x01E0A200 LDR X8, [X21 + 0x10]
	0x01E0A204 LDR X9, [X27]
	0x01E0A208 ADD W10, W10, 0x1
	0x01E0A20C STR W10, [X21 + 0x1C]
	0x01E0A210 CBZ X8, 0x1E0A344
	0x01E0A214 LDRSW X10, [X21 + 0x18]
	0x01E0A218 LDR W11, [X8 + 0x18]
	0x01E0A21C ADRP X23, 0x22EF000
	0x01E0A220 LDR X23, [X23 + 0xBA8]
	0x01E0A224 CMP W10, W11
	0x01E0A228 B.CS 0x1E0A240
	0x01E0A22C ADD W9, W10, 0x1
	0x01E0A230 ADD X8, X8, X10, 0x4, LSL
	0x01E0A234 STR W9, [X21 + 0x18]
	0x01E0A238 STP X1, X2, [X8 + 0x20]
	0x01E0A23C B 0x1E0A254
	0x01E0A240 LDR X8, [X9 + 0x20]
	0x01E0A244 MOV X0, X21
	0x01E0A248 LDR X8, [X8 + 0xC0]
	0x01E0A24C LDR X3, [X8 + 0x70]
	0x01E0A250 BL 0x2F49F80
	0x01E0A254 LDR X3, [X28]
	0x01E0A258 MOV X0, X19
	0x01E0A25C MOV X1, X20
	0x01E0A260 MOV X2, X21
	0x01E0A264 BL 0x2AA5098
	0x01E0A268 LDR X0, [X23]
	0x01E0A26C MOV X1, X31
	0x01E0A270 BL 0x338C698
	0x01E0A274 LDR X8, [X26]
	0x01E0A278 MOV X20, X0
	0x01E0A27C MOV X0, X8
	0x01E0A280 BL 0x1C16F10
	0x01E0A284 LDR X1, [X25]
	0x01E0A288 MOV X21, X0
	0x01E0A28C BL 0x2F49774
	0x01E0A290 LDR X0, [X29]
	0x01E0A294 MOV X1, X31
	0x01E0A298 BL 0x338C698
	0x01E0A29C LDR X1, [X24]
	0x01E0A2A0 LDR X3, [X22]
	0x01E0A2A4 MOV X2, X0
	0x01E0A2A8 ADD X0, X31, 0x10
	0x01E0A2AC STP X31, X31, [X31 + 0x10]
	0x01E0A2B0 BL 0x27ABC80
	0x01E0A2B4 CBZ X21, 0x1E0A344
	0x01E0A2B8 LDR W10, [X21 + 0x1C]
	0x01E0A2BC LDP X1, X2, [X31 + 0x10]
	0x01E0A2C0 LDR X8, [X21 + 0x10]
	0x01E0A2C4 LDR X9, [X27]
	0x01E0A2C8 ADD W10, W10, 0x1
	0x01E0A2CC STR W10, [X21 + 0x1C]
	0x01E0A2D0 CBZ X8, 0x1E0A344
	0x01E0A2D4 LDRSW X10, [X21 + 0x18]
	0x01E0A2D8 LDR W11, [X8 + 0x18]
	0x01E0A2DC CMP W10, W11
	0x01E0A2E0 B.CS 0x1E0A2F8
	0x01E0A2E4 ADD W9, W10, 0x1
	0x01E0A2E8 ADD X8, X8, X10, 0x4, LSL
	0x01E0A2EC STR W9, [X21 + 0x18]
	0x01E0A2F0 STP X1, X2, [X8 + 0x20]
	0x01E0A2F4 B 0x1E0A30C
	0x01E0A2F8 LDR X8, [X9 + 0x20]
	0x01E0A2FC MOV X0, X21
	0x01E0A300 LDR X8, [X8 + 0xC0]
	0x01E0A304 LDR X3, [X8 + 0x70]
	0x01E0A308 BL 0x2F49F80
	0x01E0A30C LDR X3, [X28]
	0x01E0A310 MOV X0, X19
	0x01E0A314 MOV X1, X20
	0x01E0A318 MOV X2, X21
	0x01E0A31C BL 0x2AA5098
	0x01E0A320 MOV X0, X19
	0x01E0A324 LDP X20, X19, [X31 + 0x130]
	0x01E0A328 LDP X22, X21, [X31 + 0x120]
	0x01E0A32C LDP X24, X23, [X31 + 0x110]
	0x01E0A330 LDP X26, X25, [X31 + 0x100]
	0x01E0A334 LDP X28, X27, [X31 + 0xF0]
	0x01E0A338 LDP X29, X30, [X31 + 0xE0]
	0x01E0A33C ADD X31, X31, 0x140
	0x01E0A340 RET
	0x01E0A344 BL 0x1C16F20
	0x01E0A348 STP X30, X23, [X31 - 0x30]!
	0x01E0A34C STP X22, X21, [X31 + 0x10]
	0x01E0A350 STP X20, X19, [X31 + 0x20]
	0x01E0A354 ADRP X23, 0x25CE000
	0x01E0A358 LDRB W8, [X23 + 0xDB4]
	0x01E0A35C MOV X21, X3
	0x01E0A360 MOV X19, X2
	0x01E0A364 MOV X20, X1
	0x01E0A368 MOV X22, X0
	0x01E0A36C TBNZ X8, 0x0, 0x1E0A408
	0x01E0A370 ADRP X0, 0x22EF000
	0x01E0A374 LDR X0, [X0 + 0xC20]
	0x01E0A378 BL 0x1C16CF4
	0x01E0A37C ADRP X0, 0x22E9000
	0x01E0A380 LDR X0, [X0 + 0xA28]
	0x01E0A384 BL 0x1C16CF4
	0x01E0A388 ADRP X0, 0x22EF000
	0x01E0A38C LDR X0, [X0 + 0xBF0]
	0x01E0A390 BL 0x1C16CF4
	0x01E0A394 ADRP X0, 0x22EF000
	0x01E0A398 LDR X0, [X0 + 0xB18]
	0x01E0A39C BL 0x1C16CF4
	0x01E0A3A0 ADRP X0, 0x22EF000
	0x01E0A3A4 LDR X0, [X0 + 0xC28]
	0x01E0A3A8 BL 0x1C16CF4
	0x01E0A3AC ADRP X0, 0x22EF000
	0x01E0A3B0 LDR X0, [X0 + 0xBF8]
	0x01E0A3B4 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], X30
	003 Move [X31+80], X26
	004 Move [X31+88], X25
	005 Move [X31+96], X24
	006 Move [X31+104], X23
	007 Move [X31+112], X22
	008 Move [X31+120], X21
	009 Move [X31+128], X20
	010 Move [X31+136], X19
	011 Move X23, 0x25CF000
	012 Move X22, 0x22F0000
	013 Move X19, 0x22F0000
	014 Move W8, [X23+3505]
	015 Move X22, [X22+2856]
	016 Move X19, [X19+2864]
	017 Move X20, X1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {49}
	023 Move X0, 0x22F0000
	024 Move X0, [X0+2872]
	025 Call 0x1C17CF4
	026 Move X0, 0x22F0000
	027 Move X0, [X0+2880]
	028 Call 0x1C17CF4
	029 Move X0, 0x22F0000
	030 Move X0, [X0+2888]
	031 Call 0x1C17CF4
	032 Move X0, 0x22F0000
	033 Move X0, [X0+2896]
	034 Call 0x1C17CF4
	035 Move X0, 0x22F0000
	036 Move X0, [X0+2904]
	037 Call 0x1C17CF4
	038 Move X0, 0x22F0000
	039 Move X0, [X0+2864]
	040 Call 0x1C17CF4
	041 Move X0, 0x22F0000
	042 Move X0, [X0+2856]
	043 Call 0x1C17CF4
	044 Move X0, 0x22EA000
	045 Move X0, [X0+1432]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X23+3505], W8
	049 Move X0, [X22]
	050 Move [X31+32], X31
	051 Move [X31+40], X31
	052 Move [X31+48], X31
	053 Call 0x1C17F10
	054 Move X1, [X19]
	055 Move X19, X0
	056 Call List`1<Object>..ctor, X0
	057 Move X0, [X21+32]
	058 Compare X0, 0
	059 JumpIfEqual {155}
	060 Move X8, 0x22F0000
	061 Move X8, [X8+2904]
	062 Move X24, 0x22F0000
	063 Move X24, [X24+2880]
	064 Move X25, 0x22EA000
	065 Move X1, [X8]
	066 Move X26, 0x22F0000
	067 Move X23, 0x22F0000
	068 Move X25, [X25+1432]
	069 Move X26, [X26+2896]
	070 Move X23, [X23+2872]
	071 Add X8, X31, 8
	072 Call List`1<Object>.GetEnumerator, X0
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 Move X8, [X31+24]
	075 Move [X31+2], V0
	076 Move [X31+48], X8
	077 Move X1, [X24]
	078 Add X0, X31, 32
	079 Call Enumerator<Object>.MoveNext, X0
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {137}
	084 Move X21, [X31+48]
	085 Compare X21, 0
	086 JumpIfEqual {152}
	087 Move X0, [X25]
	088 Move X22, [X21+24]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 Move X0, X22
	094 Move X1, X20
	095 Move X2, X31
	096 Call Object.op_Equality, X0, X1
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfEqual {115}
	101 Move X0, [X25]
	102 Move X22, [X21+32]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 Move X0, X22
	108 Move X1, X20
	109 Move X2, X31
	110 Call Object.op_Equality, X0, X1
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {77}
	115 Compare X19, 0
	116 JumpIfEqual {153}
	117 Move W10, [X19+28]
	118 Move X8, [X19+16]
	119 Move X9, [X26]
	120 Add W10, W10, 1
	121 Move [X19+28], W10
	122 Compare X8, 0
	123 JumpIfEqual {154}
	124 NotImplemented "Instruction LDRSW not yet implemented."
	125 Move W11, [X8+24]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Add W9, W10, 1
	128 Add X8, X8, X10
	129 Move [X19+24], W9
	130 Move [X8+32], X21
	131 Move X8, [X9+32]
	132 Move X8, [X8+192]
	133 Move X2, [X8+112]
	134 Move X0, X19
	135 Move X1, X21
	136 Call List`1<Object>.AddWithResize, X0, X1
	137 Move X1, [X23]
	138 Add X0, X31, 32
	139 Call Enumerator<Object>.Dispose, X0
	140 Move X0, X19
	141 Move X20, [X31+128]
	142 Move X19, [X31+136]
	143 Move X22, [X31+112]
	144 Move X21, [X31+120]
	145 Move X24, [X31+96]
	146 Move X23, [X31+104]
	147 Move X26, [X31+80]
	148 Move X25, [X31+88]
	149 Move X30, [X31+64]
	150 Add X31, X31, 144
	151 Return X0
	152 Call 0x1C17F20
	153 Call 0x1C17F20
	154 Call 0x1C17F20
	155 Call 0x1C17F20
	156 Move X20, X0
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move X0, X20
	159 Call 0x3EB2AD0
	160 Move X21, [X0]
	161 Call 0x3EB2AE0
	162 Move X1, [X23]
	163 Add X0, X31, 32
	164 Call Enumerator<Object>.Dispose, X0
	165 Compare X21, 0
	166 JumpIfEqual {140}
	167 Move X0, X21
	168 Call 0x1C17F18
	169 Move X21, X31
	170 Move X20, X0
	171 Move X1, [X23]
	172 Add X0, X31, 32
	173 Call Enumerator<Object>.Dispose, X0
	174 Compare X21, 0
	175 JumpIfNotEqual {178}
	176 Move X0, X20
	177 Call 0x1D2D690
	178 Move X0, X21
	179 Call 0x1C17F18
	180 Call 0x1991590

Method: System.Collections.Generic.List`1<T> GetConnectionsOfType()

Disassembly:
	0x021E81F4 LDP X30, X21, [X31], #0x20
	0x021E81F8 RET
	0x021E81FC LDR W9, [X10]
	0x021E8200 ADD W9, W9, 0x1
	0x021E8204 ADD X8, X8, W9, 0x4, SXTW
	0x021E8208 ADD X0, X8, 0x138
	0x021E820C LDP X3, X2, [X0]
	0x021E8210 MOV X0, X20
	0x021E8214 MOV X1, X19
	0x021E8218 LDP X20, X19, [X31 + 0x10]
	0x021E821C LDP X30, X21, [X31], #0x20
	0x021E8220 BR X3
	0x021E8224 BL 0x1C16F20
	0x021E8228 SUB X31, X31, 0x40
	0x021E822C STP X30, X23, [X31 + 0x10]
	0x021E8230 STP X22, X21, [X31 + 0x20]
	0x021E8234 STP X20, X19, [X31 + 0x30]
	0x021E8238 ADRP X20, 0x21F1000
	0x021E823C LDRB W8, [X20 + 0x831]
	0x021E8240 MOV X19, X0
	0x021E8244 TBNZ X8, 0x0, 0x21E8280
	0x021E8248 ADRP X0, 0x1F33000
	0x021E824C LDR X0, [X0 + 0xAF8]
	0x021E8250 BL 0x1C16CF4
	0x021E8254 ADRP X0, 0x1F33000
	0x021E8258 LDR X0, [X0 + 0xAD8]
	0x021E825C BL 0x1C16CF4
	0x021E8260 ADRP X0, 0x1F33000
	0x021E8264 LDR X0, [X0 + 0xB00]
	0x021E8268 BL 0x1C16CF4
	0x021E826C ADRP X0, 0x1F33000
	0x021E8270 LDR X0, [X0 + 0xAF0]
	0x021E8274 BL 0x1C16CF4
	0x021E8278 MOVZ W8, 0x1
	0x021E827C STRB W8, [X20 + 0x831]
	0x021E8280 CBZ X19, 0x21E83B0
	0x021E8284 LDR X8, [X19 + 0x378]
	0x021E8288 ADRP X22, 0x1F33000
	0x021E828C LDR X22, [X22 + 0xAD8]
	0x021E8290 ADD X0, X31, 0x8
	0x021E8294 MOV X1, X31
	0x021E8298 STR X8, [X31 + 0x8]
	0x021E829C BL 0x3DF88DC
	0x021E82A0 CBZ X0, 0x21E82DC
	0x021E82A4 ADRP X23, 0x1F33000
	0x021E82A8 LDR X23, [X23 + 0xB00]
	0x021E82AC MOV X20, X0
	0x021E82B0 LDR X1, [X23]
	0x021E82B4 MOV X0, X20
	0x021E82B8 BL 0x1C16E00
	0x021E82BC CBNZ X0, 0x21E82E4
	0x021E82C0 LDR X8, [X20 + 0x378]
	0x021E82C4 ADD X0, X31, 0x8
	0x021E82C8 MOV X1, X31
	0x021E82CC STR X8, [X31 + 0x8]
	0x021E82D0 BL 0x3DF88DC
	0x021E82D4 MOV X20, X0
	0x021E82D8 CBNZ X0, 0x21E82B0
	0x021E82DC LDR X21, [X19 + 0x3A0]
	0x021E82E0 B 0x21E82E8
	0x021E82E4 MOV X21, X0
	0x021E82E8 LDR X0, [X22]
	0x021E82EC LDR W8, [X0 + 0xE0]
	0x021E82F0 CBNZ W8, 0x21E82F8
	0x021E82F4 BL 0x1C16DFC
	0x021E82F8 MOV X0, X21
	0x021E82FC MOV X1, X31
	0x021E8300 BL 0x3DB55E0
	0x021E8304 CBZ X0, 0x21E83B0
	0x021E8308 ADRP X10, 0x1F33000
	0x021E830C LDR X8, [X0]
	0x021E8310 LDR X10, [X10 + 0xAF0]
	0x021E8314 MOV X20, X0
	0x021E8318 LDRH W9, [X8 + 0x12E]
	0x021E831C LDR X1, [X10]
	0x021E8320 CBZ X9, 0x21E8344
	0x021E8324 LDR X10, [X8 + 0xB0]
	0x021E8328 ADD X10, X10, 0x8
	0x021E832C LDUR X11, [X10 - 0x8]
	0x021E8330 CMP X11, X1
	0x021E8334 B.EQ 0x21E8354
	0x021E8338 SUBS X9, X9, 0x1
	0x021E833C ADD X10, X10, 0x10
	0x021E8340 B.NE 0x21E832C
	0x021E8344 MOVZ W2, 0x2
	0x021E8348 MOV X0, X20
	0x021E834C BL 0x1C5C788
	0x021E8350 B 0x21E8364
	0x021E8354 LDR W9, [X10]
	0x021E8358 ADD W9, W9, 0x2
	0x021E835C ADD X8, X8, W9, 0x4, SXTW
	0x021E8360 ADD X0, X8, 0x138
	0x021E8364 LDP X8, X2, [X0]
	0x021E8368 MOV X0, X20
	0x021E836C MOV X1, X19
	0x021E8370 BLR X8
	0x021E8374 LDR X8, [X22]
	0x021E8378 LDR X8, [X8 + 0xB8]
	0x021E837C LDR X0, [X8 + 0x8]
	0x021E8380 CBZ X0, 0x21E83B0
	0x021E8384 ADRP X8, 0x1F33000
	0x021E8388 LDR X8, [X8 + 0xAF8]
	0x021E838C MOV X1, X19
	0x021E8390 MOV X2, X20
	0x021E8394 LDR X3, [X8]
	0x021E8398 BL 0x2AA5084
	0x021E839C LDP X20, X19, [X31 + 0x30]
	0x021E83A0 LDP X22, X21, [X31 + 0x20]
	0x021E83A4 LDP X30, X23, [X31 + 0x10]
	0x021E83A8 ADD X31, X31, 0x40
	0x021E83AC RET
	0x021E83B0 BL 0x1C16F20
	0x021E83B4 STP X30, X21, [X31 - 0x20]!
	0x021E83B8 STP X20, X19, [X31 + 0x10]
	0x021E83BC ADRP X20, 0x21F1000
	0x021E83C0 ADRP X21, 0x1F33000
	0x021E83C4 LDRB W8, [X20 + 0x832]
	0x021E83C8 LDR X21, [X21 + 0xAD8]
	0x021E83CC MOV X19, X0
	0x021E83D0 TBNZ X8, 0x0, 0x21E8418
	0x021E83D4 ADRP X0, 0x1F33000
	0x021E83D8 LDR X0, [X0 + 0xAE0]
	0x021E83DC BL 0x1C16CF4
	0x021E83E0 ADRP X0, 0x1F33000
	0x021E83E4 LDR X0, [X0 + 0xB08]
	0x021E83E8 BL 0x1C16CF4
	0x021E83EC ADRP X0, 0x1F33000
	0x021E83F0 LDR X0, [X0 + 0xAE8]
	0x021E83F4 BL 0x1C16CF4
	0x021E83F8 ADRP X0, 0x1F33000
	0x021E83FC LDR X0, [X0 + 0xAD8]
	0x021E8400 BL 0x1C16CF4
	0x021E8404 ADRP X0, 0x1F33000
	0x021E8408 LDR X0, [X0 + 0xAF0]
	0x021E840C BL 0x1C16CF4
	0x021E8410 MOVZ W8, 0x1
	0x021E8414 STRB W8, [X20 + 0x832]
	0x021E8418 LDR X0, [X21]
	0x021E841C LDR W8, [X0 + 0xE0]
	0x021E8420 CBNZ W8, 0x21E842C
	0x021E8424 BL 0x1C16DFC
	0x021E8428 LDR X0, [X21]
	0x021E842C LDR X8, [X0 + 0xB8]
	0x021E8430 LDR X0, [X8 + 0x8]
	0x021E8434 CBZ X0, 0x21E852C
	0x021E8438 ADRP X8, 0x1F33000
	0x021E843C LDR X8, [X8 + 0xAE0]
	0x021E8440 MOV X1, X19
	0x021E8444 LDR X2, [X8]
	0x021E8448 BL 0x2AA528C
	0x021E844C TBZ X0, 0x0, 0x21E84D4
	0x021E8450 LDR X0, [X21]
	0x021E8454 LDR W8, [X0 + 0xE0]
	0x021E8458 CBNZ W8, 0x21E8464
	0x021E845C BL 0x1C16DFC
	0x021E8460 LDR X0, [X21]
	0x021E8464 LDR X8, [X0 + 0xB8]
	0x021E8468 LDR X0, [X8 + 0x8]
	0x021E846C CBZ X0, 0x21E852C
	0x021E8470 ADRP X8, 0x1F33000
	0x021E8474 LDR X8, [X8 + 0xAE8]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X8, [X1+56]
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {31}
	013 Move X0, 0x1F12000
	014 Move X0, [X0+2872]
	015 Call 0x1C17CF4
	016 Move X0, 0x1F12000
	017 Move X0, [X0+2880]
	018 Call 0x1C17CF4
	019 Move X0, 0x1F12000
	020 Move X0, [X0+2888]
	021 Call 0x1C17CF4
	022 Move X0, 0x1F12000
	023 Move X0, [X0+2904]
	024 Call 0x1C17CF4
	025 Move X8, [X20+56]
	026 Compare X8, 0
	027 JumpIfNotEqual {31}
	028 Move X0, X20
	029 Call 0x1C5D6E0
	030 Move X8, [X20+56]
	031 Move [X31+32], X31
	032 Move [X31+40], X31
	033 Move [X31+48], X31
	034 Move X0, [X8]
	035 Move W8, [X0+309]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {41}
	040 Call 0x1C5D684
	041 Call 0x1C17F10
	042 Move X8, [X20+56]
	043 Move X19, X0
	044 Move X1, [X8+8]
	045 Call List`1<Object>..ctor, X0
	046 Move X0, [X21+32]
	047 Compare X0, 0
	048 JumpIfEqual {155}
	049 Move X8, 0x1F12000
	050 Move X8, [X8+2904]
	051 Move X1, [X8]
	052 Add X8, X31, 8
	053 Call List`1<Object>.GetEnumerator, X0
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 Move X8, [X31+24]
	056 Move X23, 0x1F12000
	057 Move [X31+2], V0
	058 Move [X31+48], X8
	059 Move X23, [X23+2880]
	060 Move X1, [X23]
	061 Add X0, X31, 32
	062 Call Enumerator<Object>.MoveNext, X0
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {136}
	067 Move X8, [X20+56]
	068 Move X21, [X31+48]
	069 Move X1, [X8+16]
	070 Move W8, [X1+309]
	071 Move TEMP, X8
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {78}
	075 Move X0, X1
	076 Call 0x1C5D684
	077 Move X1, X0
	078 Move X0, X21
	079 Call 0x1C17E00
	080 Compare X0, 0
	081 JumpIfEqual {60}
	082 Compare X19, 0
	083 JumpIfEqual {150}
	084 Move X8, [X20+56]
	085 Move X1, [X8+16]
	086 Move W8, [X1+309]
	087 Move TEMP, X8
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {94}
	091 Move X0, X1
	092 Call 0x1C5D684
	093 Move X1, X0
	094 Move X0, X21
	095 Call 0x1C17E00
	096 Move X8, [X20+56]
	097 Move X21, X0
	098 Move X22, [X8+16]
	099 Move W8, [X22+309]
	100 Move TEMP, X8
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {107}
	104 Move X0, X22
	105 Call 0x1C5D684
	106 Move X22, X0
	107 Compare X21, 0
	108 JumpIfEqual {115}
	109 Move X0, X21
	110 Move X1, X22
	111 Call 0x1C17E00
	112 Move X1, X0
	113 Compare X1, 0
	114 JumpIfNotEqual {116}
	115 Move X1, X31
	116 Move X9, [X20+56]
	117 Move W10, [X19+28]
	118 Move X8, [X19+16]
	119 Move X9, [X9+24]
	120 Add W10, W10, 1
	121 Move [X19+28], W10
	122 Compare X8, 0
	123 JumpIfEqual {151}
	124 NotImplemented "Instruction LDRSW not yet implemented."
	125 Move W11, [X8+24]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Add W9, W10, 1
	128 Add X8, X8, X10
	129 Move [X19+24], W9
	130 Move [X8+32], X1
	131 Move X8, [X9+32]
	132 Move X8, [X8+192]
	133 Move X2, [X8+112]
	134 Move X0, X19
	135 Call List`1<Object>.AddWithResize, X0, X1
	136 Move X8, 0x1F12000
	137 Move X8, [X8+2872]
	138 Add X0, X31, 32
	139 Move X1, [X8]
	140 Call Enumerator<Object>.Dispose, X0
	141 Move X0, X19
	142 Move X20, [X31+96]
	143 Move X19, [X31+104]
	144 Move X22, [X31+80]
	145 Move X21, [X31+88]
	146 Move X30, [X31+64]
	147 Move X23, [X31+72]
	148 Add X31, X31, 112
	149 Return X0
	150 Call 0x1C17F20
	151 Call 0x1C17F20
	152 Move X0, X21
	153 Move X1, X22
	154 Call 0x1C181E0
	155 Call 0x1C17F20
	156 Move X20, X0
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move X0, X20
	159 Call 0x3EB2AD0
	160 Move X21, [X0]
	161 Call 0x3EB2AE0
	162 Move X8, 0x1F12000
	163 Move X8, [X8+2872]
	164 Add X0, X31, 32
	165 Move X1, [X8]
	166 Call Enumerator<Object>.Dispose, X0
	167 Compare X21, 0
	168 JumpIfEqual {141}
	169 Move X0, X21
	170 Call 0x1C17F18
	171 Move X21, X31
	172 Move X20, X0
	173 Move X8, 0x1F12000
	174 Move X8, [X8+2872]
	175 Move X1, [X8]
	176 Add X0, X31, 32
	177 Call Enumerator<Object>.Dispose, X0
	178 Compare X21, 0
	179 JumpIfNotEqual {182}
	180 Move X0, X20
	181 Call 0x1D2D690
	182 Move X0, X21
	183 Call 0x1C17F18
	184 Call 0x1991590

Method: System.Collections.Generic.List`1<T> GetNodeConnectionsOfType(Less3.ForceGraph.ForceNode node)

Disassembly:
	0x021E8478 MOV X1, X19
	0x021E847C LDR X2, [X8]
	0x021E8480 BL 0x2AA5018
	0x021E8484 CBZ X0, 0x21E852C
	0x021E8488 ADRP X10, 0x1F33000
	0x021E848C LDR X8, [X0]
	0x021E8490 LDR X10, [X10 + 0xAF0]
	0x021E8494 MOV X20, X0
	0x021E8498 LDRH W9, [X8 + 0x12E]
	0x021E849C LDR X1, [X10]
	0x021E84A0 CBZ X9, 0x21E84C4
	0x021E84A4 LDR X10, [X8 + 0xB0]
	0x021E84A8 ADD X10, X10, 0x8
	0x021E84AC LDUR X11, [X10 - 0x8]
	0x021E84B0 CMP X11, X1
	0x021E84B4 B.EQ 0x21E84E0
	0x021E84B8 SUBS X9, X9, 0x1
	0x021E84BC ADD X10, X10, 0x10
	0x021E84C0 B.NE 0x21E84AC
	0x021E84C4 MOVZ W2, 0x3
	0x021E84C8 MOV X0, X20
	0x021E84CC BL 0x1C5C788
	0x021E84D0 B 0x21E84F0
	0x021E84D4 LDP X20, X19, [X31 + 0x10]
	0x021E84D8 LDP X30, X21, [X31], #0x20
	0x021E84DC RET
	0x021E84E0 LDR W9, [X10]
	0x021E84E4 ADD W9, W9, 0x3
	0x021E84E8 ADD X8, X8, W9, 0x4, SXTW
	0x021E84EC ADD X0, X8, 0x138
	0x021E84F0 LDP X8, X2, [X0]
	0x021E84F4 MOV X0, X20
	0x021E84F8 MOV X1, X19
	0x021E84FC BLR X8
	0x021E8500 LDR X8, [X21]
	0x021E8504 LDR X8, [X8 + 0xB8]
	0x021E8508 LDR X0, [X8 + 0x8]
	0x021E850C CBZ X0, 0x21E852C
	0x021E8510 ADRP X8, 0x1F33000
	0x021E8514 LDR X8, [X8 + 0xB08]
	0x021E8518 MOV X1, X19
	0x021E851C LDP X20, X19, [X31 + 0x10]
	0x021E8520 LDR X2, [X8]
	0x021E8524 LDP X30, X21, [X31], #0x20
	0x021E8528 B 0x2AA64F8
	0x021E852C BL 0x1C16F20
	0x021E8530 STR X30, [X31 - 0x20]!
	0x021E8534 STP X20, X19, [X31 + 0x10]
	0x021E8538 AND W8, W1, 0x1
	0x021E853C STRB W8, [X31 + 0xC]
	0x021E8540 LDR X8, [X2 + 0x38]
	0x021E8544 MOV X20, X2
	0x021E8548 MOV X19, X0
	0x021E854C CBNZ X8, 0x21E8578
	0x021E8550 ADRP X0, 0x1F0B000
	0x021E8554 LDR X0, [X0 + 0xB58]
	0x021E8558 BL 0x1C16CF4
	0x021E855C ADRP X0, 0x1F33000
	0x021E8560 LDR X0, [X0 + 0xB10]
	0x021E8564 BL 0x1C16CF4
	0x021E8568 LDR X8, [X20 + 0x38]
	0x021E856C CBNZ X8, 0x21E8578
	0x021E8570 MOV X0, X20
	0x021E8574 BL 0x1C5C6E0
	0x021E8578 ADRP X8, 0x1F0B000
	0x021E857C LDR X8, [X8 + 0xB58]
	0x021E8580 LDR X0, [X8]
	0x021E8584 LDR W8, [X0 + 0xE0]
	0x021E8588 CBNZ W8, 0x21E8590
	0x021E858C BL 0x1C16DFC
	0x021E8590 LDR X8, [X20 + 0x38]
	0x021E8594 ADD X0, X31, 0xC
	0x021E8598 LDR X1, [X8 + 0x8]
	0x021E859C BL 0x33176B4
	0x021E85A0 ADRP X8, 0x1F33000
	0x021E85A4 LDR X8, [X8 + 0xB10]
	0x021E85A8 MOV W20, W0
	0x021E85AC LDR X8, [X8]
	0x021E85B0 LDR W9, [X8 + 0xE0]
	0x021E85B4 CBNZ W9, 0x21E85C0
	0x021E85B8 MOV X0, X8
	0x021E85BC BL 0x1C16DFC
	0x021E85C0 MOV X0, X19
	0x021E85C4 MOV W1, W20
	0x021E85C8 MOV X2, X31
	0x021E85CC BL 0x337952C
	0x021E85D0 LDP X20, X19, [X31 + 0x10]
	0x021E85D4 LDR X30, [X31], #0x20
	0x021E85D8 RET
	0x021E85DC SUB X31, X31, 0x60
	0x021E85E0 STP D11, D10, [X31 + 0x10]
	0x021E85E4 STP D9, D8, [X31 + 0x20]
	0x021E85E8 STP X30, X23, [X31 + 0x30]
	0x021E85EC STP X22, X21, [X31 + 0x40]
	0x021E85F0 STP X20, X19, [X31 + 0x50]
	0x021E85F4 LDR X8, [X1 + 0x38]
	0x021E85F8 MOV V8.16B, V3.16B
	0x021E85FC MOV V9.16B, V2.16B
	0x021E8600 MOV V10.16B, V1.16B
	0x021E8604 MOV V11.16B, V0.16B
	0x021E8608 MOV X19, X0
	0x021E860C CBNZ X8, 0x21E8630
	0x021E8610 ADRP X0, 0x1F33000
	0x021E8614 LDR X0, [X0 + 0xB10]
	0x021E8618 MOV X20, X1
	0x021E861C BL 0x1C16CF4
	0x021E8620 LDR X8, [X20 + 0x38]
	0x021E8624 CBNZ X8, 0x21E8630
	0x021E8628 MOV X0, X20
	0x021E862C BL 0x1C5C6E0
	0x021E8630 ADD X8, X31, 0x0
	0x021E8634 ADD X0, X31, 0x0
	0x021E8638 MOV X1, X31
	0x021E863C STP S11, S10, [X31]
	0x021E8640 ORR X21, X8, 0x7
	0x021E8644 ADD X22, X8, 0x8
	0x021E8648 ADD X23, X8, 0xC
	0x021E864C STP S9, S8, [X31 + 0x8]
	0x021E8650 BL 0x338FE0C
	0x021E8654 MOV W20, W0
	0x021E8658 MOV X0, X21
	0x021E865C MOV X1, X31
	0x021E8660 BL 0x338FE0C
	0x021E8664 MOV W21, W0
	0x021E8668 MOV X0, X22
	0x021E866C MOV X1, X31
	0x021E8670 BL 0x338FE0C
	0x021E8674 MOV W22, W0
	0x021E8678 MOV X0, X23
	0x021E867C MOV X1, X31
	0x021E8680 BL 0x338FE0C
	0x021E8684 ADRP X8, 0x1F33000
	0x021E8688 LDR X8, [X8 + 0xB10]
	0x021E868C MOV W23, W0
	0x021E8690 LDR X8, [X8]
	0x021E8694 LDR W9, [X8 + 0xE0]
	0x021E8698 CBNZ W9, 0x21E86A4
	0x021E869C MOV X0, X8
	0x021E86A0 BL 0x1C16DFC
	0x021E86A4 EOR W8, W20, W21, 0x2
	0x021E86A8 EOR W8, W8, W22, 0x2
	0x021E86AC EOR W1, W8, W23, 0x1
	0x021E86B0 MOV X0, X19
	0x021E86B4 MOV X2, X31
	0x021E86B8 BL 0x337952C
	0x021E86BC LDP X20, X19, [X31 + 0x50]
	0x021E86C0 LDP X22, X21, [X31 + 0x40]
	0x021E86C4 LDP X30, X23, [X31 + 0x30]
	0x021E86C8 LDP D9, D8, [X31 + 0x20]
	0x021E86CC LDP D11, D10, [X31 + 0x10]
	0x021E86D0 ADD X31, X31, 0x60
	0x021E86D4 RET
	0x021E86D8 STR X30, [X31 - 0x20]!
	0x021E86DC STP X20, X19, [X31 + 0x10]
	0x021E86E0 STR W1, [X31 + 0xC]
	0x021E86E4 LDR X8, [X2 + 0x38]
	0x021E86E8 MOV X19, X0
	0x021E86EC CBNZ X8, 0x21E8714
	0x021E86F0 ADRP X0, 0x1F33000
	0x021E86F4 LDR X0, [X0 + 0xB10]
	0x021E86F8 MOV X20, X2
	0x021E86FC BL 0x1C16CF4
	0x021E8700 LDR X8, [X20 + 0x38]
	0x021E8704 CBNZ X8, 0x21E8714
	0x021E8708 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X8, [X2+56]
	009 Move X20, X2
	010 Move X21, X1
	011 Move X22, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {32}
	014 Move X0, 0x1F12000
	015 Move X0, [X0+2872]
	016 Call 0x1C17CF4
	017 Move X0, 0x1F12000
	018 Move X0, [X0+2880]
	019 Call 0x1C17CF4
	020 Move X0, 0x1F12000
	021 Move X0, [X0+2888]
	022 Call 0x1C17CF4
	023 Move X0, 0x1F12000
	024 Move X0, [X0+2904]
	025 Call 0x1C17CF4
	026 Move X8, [X20+56]
	027 Compare X8, 0
	028 JumpIfNotEqual {32}
	029 Move X0, X20
	030 Call 0x1C5D6E0
	031 Move X8, [X20+56]
	032 Move [X31+32], X31
	033 Move [X31+40], X31
	034 Move [X31+48], X31
	035 Move X0, [X8]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Call 0x1C17F10
	043 Move X8, [X20+56]
	044 Move X19, X0
	045 Move X1, [X8+8]
	046 Call List`1<Object>..ctor, X0
	047 Move X0, X22
	048 Move X1, X21
	049 Move X2, X31
	050 Call GenGraph.GetNodeConnections, X0, X1
	051 Compare X0, 0
	052 JumpIfEqual {159}
	053 Move X8, 0x1F12000
	054 Move X8, [X8+2904]
	055 Move X1, [X8]
	056 Add X8, X31, 8
	057 Call List`1<Object>.GetEnumerator, X0
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 Move X8, [X31+24]
	060 Move X23, 0x1F12000
	061 Move [X31+2], V0
	062 Move [X31+48], X8
	063 Move X23, [X23+2880]
	064 Move X1, [X23]
	065 Add X0, X31, 32
	066 Call Enumerator<Object>.MoveNext, X0
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {140}
	071 Move X8, [X20+56]
	072 Move X21, [X31+48]
	073 Move X1, [X8+16]
	074 Move W8, [X1+309]
	075 Move TEMP, X8
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {82}
	079 Move X0, X1
	080 Call 0x1C5D684
	081 Move X1, X0
	082 Move X0, X21
	083 Call 0x1C17E00
	084 Compare X0, 0
	085 JumpIfEqual {64}
	086 Compare X19, 0
	087 JumpIfEqual {154}
	088 Move X8, [X20+56]
	089 Move X1, [X8+16]
	090 Move W8, [X1+309]
	091 Move TEMP, X8
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfEqual {98}
	095 Move X0, X1
	096 Call 0x1C5D684
	097 Move X1, X0
	098 Move X0, X21
	099 Call 0x1C17E00
	100 Move X8, [X20+56]
	101 Move X21, X0
	102 Move X22, [X8+16]
	103 Move W8, [X22+309]
	104 Move TEMP, X8
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfEqual {111}
	108 Move X0, X22
	109 Call 0x1C5D684
	110 Move X22, X0
	111 Compare X21, 0
	112 JumpIfEqual {119}
	113 Move X0, X21
	114 Move X1, X22
	115 Call 0x1C17E00
	116 Move X1, X0
	117 Compare X1, 0
	118 JumpIfNotEqual {120}
	119 Move X1, X31
	120 Move X9, [X20+56]
	121 Move W10, [X19+28]
	122 Move X8, [X19+16]
	123 Move X9, [X9+24]
	124 Add W10, W10, 1
	125 Move [X19+28], W10
	126 Compare X8, 0
	127 JumpIfEqual {155}
	128 NotImplemented "Instruction LDRSW not yet implemented."
	129 Move W11, [X8+24]
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Add W9, W10, 1
	132 Add X8, X8, X10
	133 Move [X19+24], W9
	134 Move [X8+32], X1
	135 Move X8, [X9+32]
	136 Move X8, [X8+192]
	137 Move X2, [X8+112]
	138 Move X0, X19
	139 Call List`1<Object>.AddWithResize, X0, X1
	140 Move X8, 0x1F12000
	141 Move X8, [X8+2872]
	142 Add X0, X31, 32
	143 Move X1, [X8]
	144 Call Enumerator<Object>.Dispose, X0
	145 Move X0, X19
	146 Move X20, [X31+96]
	147 Move X19, [X31+104]
	148 Move X22, [X31+80]
	149 Move X21, [X31+88]
	150 Move X30, [X31+64]
	151 Move X23, [X31+72]
	152 Add X31, X31, 112
	153 Return X0
	154 Call 0x1C17F20
	155 Call 0x1C17F20
	156 Move X0, X21
	157 Move X1, X22
	158 Call 0x1C181E0
	159 Call 0x1C17F20
	160 Move X20, X0
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X0, X20
	163 Call 0x3EB2AD0
	164 Move X21, [X0]
	165 Call 0x3EB2AE0
	166 Move X8, 0x1F12000
	167 Move X8, [X8+2872]
	168 Add X0, X31, 32
	169 Move X1, [X8]
	170 Call Enumerator<Object>.Dispose, X0
	171 Compare X21, 0
	172 JumpIfEqual {145}
	173 Move X0, X21
	174 Call 0x1C17F18
	175 Move X21, X31
	176 Move X20, X0
	177 Move X8, 0x1F12000
	178 Move X8, [X8+2872]
	179 Move X1, [X8]
	180 Add X0, X31, 32
	181 Call Enumerator<Object>.Dispose, X0
	182 Compare X21, 0
	183 JumpIfNotEqual {186}
	184 Move X0, X20
	185 Call 0x1D2D690
	186 Move X0, X21
	187 Call 0x1C17F18
	188 Call 0x1991590

Method: System.Collections.Generic.List`1<T> GetNodesOfType(System.Boolean searchSubgraphs = True)

Disassembly:
	0x021E870C BL 0x1C5C6E0
	0x021E8710 LDR X8, [X20 + 0x38]
	0x021E8714 LDR X1, [X8 + 0x8]
	0x021E8718 ADD X0, X31, 0xC
	0x021E871C BL 0x337B6D8
	0x021E8720 ADRP X8, 0x1F33000
	0x021E8724 LDR X8, [X8 + 0xB10]
	0x021E8728 MOV W20, W0
	0x021E872C LDR X8, [X8]
	0x021E8730 LDR W9, [X8 + 0xE0]
	0x021E8734 CBNZ W9, 0x21E8740
	0x021E8738 MOV X0, X8
	0x021E873C BL 0x1C16DFC
	0x021E8740 MOV X0, X19
	0x021E8744 MOV W1, W20
	0x021E8748 MOV X2, X31
	0x021E874C BL 0x337952C
	0x021E8750 LDP X20, X19, [X31 + 0x10]
	0x021E8754 LDR X30, [X31], #0x20
	0x021E8758 RET
	0x021E875C STP X30, X21, [X31 - 0x20]!
	0x021E8760 STP X20, X19, [X31 + 0x10]
	0x021E8764 ADRP X21, 0x21F1000
	0x021E8768 LDRB W8, [X21 + 0x833]
	0x021E876C MOV X20, X1
	0x021E8770 MOV X19, X0
	0x021E8774 TBNZ X8, 0x0, 0x21E878C
	0x021E8778 ADRP X0, 0x1F33000
	0x021E877C LDR X0, [X0 + 0xB10]
	0x021E8780 BL 0x1C16CF4
	0x021E8784 MOVZ W8, 0x1
	0x021E8788 STRB W8, [X21 + 0x833]
	0x021E878C ADRP X21, 0x1F33000
	0x021E8790 LDR X21, [X21 + 0xB10]
	0x021E8794 CBZ X20, 0x21E87AC
	0x021E8798 LDR X8, [X20]
	0x021E879C MOV X0, X20
	0x021E87A0 LDP X9, X1, [X8 + 0x158]
	0x021E87A4 BLR X9
	0x021E87A8 MOV W20, W0
	0x021E87AC LDR X0, [X21]
	0x021E87B0 LDR W8, [X0 + 0xE0]
	0x021E87B4 CBNZ W8, 0x21E87BC
	0x021E87B8 BL 0x1C16DFC
	0x021E87BC MOV X0, X19
	0x021E87C0 MOV W1, W20
	0x021E87C4 LDP X20, X19, [X31 + 0x10]
	0x021E87C8 MOV X2, X31
	0x021E87CC LDP X30, X21, [X31], #0x20
	0x021E87D0 B 0x337952C
	0x021E87D4 SUB X31, X31, 0x30
	0x021E87D8 STR X30, [X31 + 0x10]
	0x021E87DC STP X20, X19, [X31 + 0x20]
	0x021E87E0 STP S0, S1, [X31]
	0x021E87E4 STP S2, S3, [X31 + 0x8]
	0x021E87E8 LDR X8, [X1 + 0x38]
	0x021E87EC MOV X19, X0
	0x021E87F0 CBNZ X8, 0x21E8818
	0x021E87F4 ADRP X0, 0x1F33000
	0x021E87F8 LDR X0, [X0 + 0xB10]
	0x021E87FC MOV X20, X1
	0x021E8800 BL 0x1C16CF4
	0x021E8804 LDR X8, [X20 + 0x38]
	0x021E8808 CBNZ X8, 0x21E8818
	0x021E880C MOV X0, X20
	0x021E8810 BL 0x1C5C6E0
	0x021E8814 LDR X8, [X20 + 0x38]
	0x021E8818 LDR X1, [X8 + 0x8]
	0x021E881C ADD X0, X31, 0x0
	0x021E8820 BL 0x3C0B718
	0x021E8824 ADRP X8, 0x1F33000
	0x021E8828 LDR X8, [X8 + 0xB10]
	0x021E882C MOV W20, W0
	0x021E8830 LDR X8, [X8]
	0x021E8834 LDR W9, [X8 + 0xE0]
	0x021E8838 CBNZ W9, 0x21E8844
	0x021E883C MOV X0, X8
	0x021E8840 BL 0x1C16DFC
	0x021E8844 MOV X0, X19
	0x021E8848 MOV W1, W20
	0x021E884C MOV X2, X31
	0x021E8850 BL 0x337952C
	0x021E8854 LDP X20, X19, [X31 + 0x20]
	0x021E8858 LDR X30, [X31 + 0x10]
	0x021E885C ADD X31, X31, 0x30
	0x021E8860 RET
	0x021E8864 STR X30, [X31 - 0x20]!
	0x021E8868 STP X20, X19, [X31 + 0x10]
	0x021E886C STR S0, [X31 + 0xC]
	0x021E8870 LDR X8, [X1 + 0x38]
	0x021E8874 MOV X19, X0
	0x021E8878 CBNZ X8, 0x21E88A0
	0x021E887C ADRP X0, 0x1F33000
	0x021E8880 LDR X0, [X0 + 0xB10]
	0x021E8884 MOV X20, X1
	0x021E8888 BL 0x1C16CF4
	0x021E888C LDR X8, [X20 + 0x38]
	0x021E8890 CBNZ X8, 0x21E88A0
	0x021E8894 MOV X0, X20
	0x021E8898 BL 0x1C5C6E0
	0x021E889C LDR X8, [X20 + 0x38]
	0x021E88A0 LDR X1, [X8 + 0x8]
	0x021E88A4 ADD X0, X31, 0xC
	0x021E88A8 BL 0x338FE0C
	0x021E88AC ADRP X8, 0x1F33000
	0x021E88B0 LDR X8, [X8 + 0xB10]
	0x021E88B4 MOV W20, W0
	0x021E88B8 LDR X8, [X8]
	0x021E88BC LDR W9, [X8 + 0xE0]
	0x021E88C0 CBNZ W9, 0x21E88CC
	0x021E88C4 MOV X0, X8
	0x021E88C8 BL 0x1C16DFC
	0x021E88CC MOV X0, X19
	0x021E88D0 MOV W1, W20
	0x021E88D4 MOV X2, X31
	0x021E88D8 BL 0x337952C
	0x021E88DC LDP X20, X19, [X31 + 0x10]
	0x021E88E0 LDR X30, [X31], #0x20
	0x021E88E4 RET
	0x021E88E8 SUB X31, X31, 0x40
	0x021E88EC STP X30, X23, [X31 + 0x10]
	0x021E88F0 STP X22, X21, [X31 + 0x20]
	0x021E88F4 STP X20, X19, [X31 + 0x30]
	0x021E88F8 STP S0, S1, [X31]
	0x021E88FC STP S2, S3, [X31 + 0x8]
	0x021E8900 LDR X8, [X1 + 0x38]
	0x021E8904 ADD X9, X31, 0x0
	0x021E8908 MOV X19, X0
	0x021E890C ORR X23, X9, 0x7
	0x021E8910 ADD X21, X9, 0x8
	0x021E8914 ADD X20, X9, 0xC
	0x021E8918 CBNZ X8, 0x21E893C
	0x021E891C ADRP X0, 0x1F33000
	0x021E8920 LDR X0, [X0 + 0xB10]
	0x021E8924 MOV X22, X1
	0x021E8928 BL 0x1C16CF4
	0x021E892C LDR X8, [X22 + 0x38]
	0x021E8930 CBNZ X8, 0x21E893C
	0x021E8934 MOV X0, X22
	0x021E8938 BL 0x1C5C6E0
	0x021E893C ADD X0, X31, 0x0
	0x021E8940 MOV X1, X31
	0x021E8944 BL 0x338FE0C
	0x021E8948 MOV W22, W0
	0x021E894C MOV X0, X23
	0x021E8950 MOV X1, X31
	0x021E8954 BL 0x338FE0C
	0x021E8958 MOV W23, W0
	0x021E895C MOV X0, X21
	0x021E8960 MOV X1, X31
	0x021E8964 BL 0x338FE0C
	0x021E8968 MOV W21, W0
	0x021E896C MOV X0, X20
	0x021E8970 MOV X1, X31
	0x021E8974 BL 0x338FE0C
	0x021E8978 ADRP X8, 0x1F33000
	0x021E897C LDR X8, [X8 + 0xB10]
	0x021E8980 MOV W20, W0
	0x021E8984 LDR X8, [X8]
	0x021E8988 LDR W9, [X8 + 0xE0]
	0x021E898C CBNZ W9, 0x21E8998
	0x021E8990 MOV X0, X8
	0x021E8994 BL 0x1C16DFC
	0x021E8998 EOR W8, W22, W23, 0x2
	0x021E899C EOR W8, W8, W21, 0x2
	0x021E89A0 EOR W1, W8, W20, 0x1
	0x021E89A4 MOV X0, X19
	0x021E89A8 MOV X2, X31
	0x021E89AC BL 0x337952C
	0x021E89B0 LDP X20, X19, [X31 + 0x30]
	0x021E89B4 LDP X22, X21, [X31 + 0x20]
	0x021E89B8 LDP X30, X23, [X31 + 0x10]
	0x021E89BC ADD X31, X31, 0x40
	0x021E89C0 RET
	0x021E89C4 STP X29, X30, [X31 - 0x50]!
	0x021E89C8 STP X26, X25, [X31 + 0x10]
	0x021E89CC STP X24, X23, [X31 + 0x20]
	0x021E89D0 STP X22, X21, [X31 + 0x30]
	0x021E89D4 STP X20, X19, [X31 + 0x40]
	0x021E89D8 ADD X29, X31, 0x0
	0x021E89DC SUB X31, X31, 0x20
	0x021E89E0 MRS X25, 0xC000
	0x021E89E4 LDR X8, [X25 + 0x28]
	0x021E89E8 MOV X21, X2
	0x021E89EC MOV X20, X1
	0x021E89F0 MOV X19, X0
	0x021E89F4 STUR X8, [X29 - 0x8]
	0x021E89F8 STUR X1, [X29 - 0x18]
	0x021E89FC LDR X26, [X2 + 0x38]
	0x021E8A00 CBNZ X26, 0x21E8A24
	0x021E8A04 ADRP X0, 0x1F33000
	0x021E8A08 LDR X0, [X0 + 0xB10]
	0x021E8A0C BL 0x1C16CF4
	0x021E8A10 LDR X26, [X21 + 0x38]
	0x021E8A14 CBNZ X26, 0x21E8A24
	0x021E8A18 MOV X0, X21
	0x021E8A1C BL 0x1C5C6E0
	0x021E8A20 LDR X26, [X21 + 0x38]
	0x021E8A24 LDR X0, [X26]
	0x021E8A28 LDR W23, [X0 + 0xFC]
	0x021E8A2C LDRB W9, [X0 + 0x135]
	0x021E8A30 TBNZ X9, 0x0, 0x21E8A48
	0x021E8A34 BL 0x1C5C684
	0x021E8A38 LDR X26, [X21 + 0x38]
	0x021E8A3C LDR W8, [X0 + 0xFC]
	0x021E8A40 LDR X0, [X26]
	0x021E8A44 B 0x21E8A4C
	0x021E8A48 MOV W8, W23
	0x021E8A4C ADD W8, W8, 0x10
	0x021E8A50 ADD X8, X8, 0xF
	0x021E8A54 ADD X9, X31, 0x0
	0x021E8A58 AND X8, X8, 0x1FFFFFFFF
	0x021E8A5C SUB X22, X9, X8
	0x021E8A60 ADD X31, X22, 0x0
	0x021E8A64 ADD X9, X23, 0xF
	0x021E8A68 ADD X8, X31, 0x0
	0x021E8A6C AND X9, X9, 0x1FFFFFFFF
	0x021E8A70 SUB X24, X8, X9
	0x021E8A74 ADD X31, X24, 0x0
	0x021E8A78 LDR W8, [X0 + 0x28]
	0x021E8A7C MOV X0, X24
	0x021E8A80 MOV X2, X23
	0x021E8A84 CMP W8, 0x0
	0x021E8A88 SUB X8, X29, 0x18
	0x021E8A8C CSEL X1, X20, X8, LT
	0x021E8A90 BL 0x3EB1AC0
	0x021E8A94 LDR X0, [X26]
	0x021E8A98 MOV X1, X24
	0x021E8A9C BL 0x1C16ED4
	0x021E8AA0 TBZ X0, 0x0, 0x21E8AEC
	0x021E8AA4 LDR X8, [X21 + 0x38]
	0x021E8AA8 LDR X0, [X8]
	0x021E8AAC LDRB W9, [X0 + 0x135]
	0x021E8AB0 TBNZ X9, 0x0, 0x21E8AC0
	0x021E8AB4 BL 0x1C5C684
	0x021E8AB8 LDR X8, [X21 + 0x38]
	0x021E8ABC LDUR X20, [X29 - 0x18]
	0x021E8AC0 LDP X9, X1, [X8]
	0x021E8AC4 SUB X8, X29, 0x18
	0x021E8AC8 SUB X5, X29, 0xC
	0x021E8ACC MOV X2, X22
	0x021E8AD0 LDR W9, [X9 + 0x28]
	0x021E8AD4 MOV X4, X31
	0x021E8AD8 CMP W9, 0x0
	0x021E8ADC CSEL X3, X20, X8, LT
	0x021E8AE0 BL 0x1C17728
	0x021E8AE4 LDUR W20, [X29 - 0xC]
	0x021E8AE8 B 0x21E8AF0
	0x021E8AEC MOV W20, W31
	0x021E8AF0 ADRP X8, 0x1F33000
	0x021E8AF4 LDR X8, [X8 + 0xB10]
	0x021E8AF8 LDR X0, [X8]
	0x021E8AFC LDR W8, [X0 + 0xE0]
	0x021E8B00 CBNZ W8, 0x21E8B08
	0x021E8B04 BL 0x1C16DFC
	0x021E8B08 MOV X0, X19
	0x021E8B0C MOV W1, W20
	0x021E8B10 MOV X2, X31
	0x021E8B14 BL 0x337952C
	0x021E8B18 LDR X8, [X25 + 0x28]
	0x021E8B1C LDUR X9, [X29 - 0x8]
	0x021E8B20 CMP X8, X9
	0x021E8B24 B.NE 0x21E8B44

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], X30
	003 Move [X31+80], X26
	004 Move [X31+88], X25
	005 Move [X31+96], X24
	006 Move [X31+104], X23
	007 Move [X31+112], X22
	008 Move [X31+120], X21
	009 Move [X31+128], X20
	010 Move [X31+136], X19
	011 Move X8, [X2+56]
	012 Move X20, X2
	013 Move W22, W1
	014 Move X21, X0
	015 Compare X8, 0
	016 JumpIfNotEqual {41}
	017 Move X0, 0x1F34000
	018 Move X0, [X0+2728]
	019 Call 0x1C17CF4
	020 Move X0, 0x1F34000
	021 Move X0, [X0+2736]
	022 Call 0x1C17CF4
	023 Move X0, 0x1F34000
	024 Move X0, [X0+2744]
	025 Call 0x1C17CF4
	026 Move X0, 0x1F34000
	027 Move X0, [X0+2752]
	028 Call 0x1C17CF4
	029 Move X0, 0x1F0C000
	030 Move X0, [X0+1432]
	031 Call 0x1C17CF4
	032 Move X0, 0x1F12000
	033 Move X0, [X0+3128]
	034 Call 0x1C17CF4
	035 Move X8, [X20+56]
	036 Compare X8, 0
	037 JumpIfNotEqual {41}
	038 Move X0, X20
	039 Call 0x1C5D6E0
	040 Move X8, [X20+56]
	041 Move [X31+32], X31
	042 Move [X31+40], X31
	043 Move [X31+48], X31
	044 Move X0, [X8]
	045 Move W8, [X0+309]
	046 Move TEMP, X8
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {51}
	050 Call 0x1C5D684
	051 Call 0x1C17F10
	052 Move X8, [X20+56]
	053 Move X19, X0
	054 Move X1, [X8+8]
	055 Call List`1<Object>..ctor, X0
	056 Move X0, [X21+24]
	057 Compare X0, 0
	058 JumpIfEqual {238}
	059 Move X26, 0x1F34000
	060 Move X26, [X26+2752]
	061 Add X8, X31, 8
	062 Move X1, [X26]
	063 Call List`1<Object>.GetEnumerator, X0
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 Move X8, [X31+24]
	066 Move X25, 0x1F34000
	067 Move [X31+2], V0
	068 Move [X31+48], X8
	069 Move X25, [X25+2736]
	070 Move X1, [X25]
	071 Add X0, X31, 32
	072 Call Enumerator<Object>.MoveNext, X0
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {146}
	077 Move X8, [X20+56]
	078 Move X23, [X31+48]
	079 Move X1, [X8+16]
	080 Move W8, [X1+309]
	081 Move TEMP, X8
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfEqual {88}
	085 Move X0, X1
	086 Call 0x1C5D684
	087 Move X1, X0
	088 Move X0, X23
	089 Call 0x1C17E00
	090 Compare X0, 0
	091 JumpIfEqual {70}
	092 Compare X19, 0
	093 JumpIfEqual {233}
	094 Move X8, [X20+56]
	095 Move X1, [X8+16]
	096 Move W8, [X1+309]
	097 Move TEMP, X8
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfEqual {104}
	101 Move X0, X1
	102 Call 0x1C5D684
	103 Move X1, X0
	104 Move X0, X23
	105 Call 0x1C17E00
	106 Move X8, [X20+56]
	107 Move X23, X0
	108 Move X24, [X8+16]
	109 Move W8, [X24+309]
	110 Move TEMP, X8
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfEqual {117}
	114 Move X0, X24
	115 Call 0x1C5D684
	116 Move X24, X0
	117 Compare X23, 0
	118 JumpIfEqual {125}
	119 Move X0, X23
	120 Move X1, X24
	121 Call 0x1C17E00
	122 Move X1, X0
	123 Compare X1, 0
	124 JumpIfNotEqual {126}
	125 Move X1, X31
	126 Move X9, [X20+56]
	127 Move W10, [X19+28]
	128 Move X8, [X19+16]
	129 Move X9, [X9+24]
	130 Add W10, W10, 1
	131 Move [X19+28], W10
	132 Compare X8, 0
	133 JumpIfEqual {234}
	134 NotImplemented "Instruction LDRSW not yet implemented."
	135 Move W11, [X8+24]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Add W9, W10, 1
	138 Add X8, X8, X10
	139 Move [X19+24], W9
	140 Move [X8+32], X1
	141 Move X8, [X9+32]
	142 Move X8, [X8+192]
	143 Move X2, [X8+112]
	144 Move X0, X19
	145 Call List`1<Object>.AddWithResize, X0, X1
	146 Move X8, 0x1F34000
	147 Move X8, [X8+2728]
	148 Add X0, X31, 32
	149 Move X1, [X8]
	150 Call Enumerator<Object>.Dispose, X0
	151 Move TEMP, X22
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfNotEqual {221}
	155 Move X0, [X21+24]
	156 Compare X0, 0
	157 JumpIfEqual {238}
	158 Move X1, [X26]
	159 Add X8, X31, 8
	160 Call List`1<Object>.GetEnumerator, X0
	161 NotImplemented "Instruction LDUR not yet implemented."
	162 Move X8, [X31+24]
	163 Move X22, 0x1F12000
	164 Move X22, [X22+3128]
	165 Move [X31+2], V0
	166 Move [X31+48], X8
	167 Move X23, 0x1F0C000
	168 Move X23, [X23+1432]
	169 Move X1, [X25]
	170 Add X0, X31, 32
	171 Call Enumerator<Object>.MoveNext, X0
	172 Move TEMP, X0
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfNotEqual {216}
	176 Move X24, [X31+48]
	177 Compare X24, 0
	178 JumpIfEqual {169}
	179 Move X9, [X24]
	180 Move X8, [X22]
	181 Move W11, [X9+304]
	182 Move W10, [X8+304]
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move X9, [X9+200]
	185 Add X9, X9, X10
	186 NotImplemented "Instruction LDUR not yet implemented."
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move X0, [X23]
	189 Move X21, [X24+56]
	190 Move W8, [X0+224]
	191 Compare W8, 0
	192 JumpIfNotEqual {194}
	193 Call 0x1C17DFC
	194 Move X0, X21
	195 Move X1, X31
	196 Move X2, X31
	197 Call Object.op_Inequality, X0, X1
	198 Move TEMP, X0
	199 And TEMP, TEMP, 1
	200 Compare TEMP, 1
	201 JumpIfNotEqual {169}
	202 Move X0, [X24+56]
	203 Compare X0, 0
	204 JumpIfEqual {239}
	205 Move X8, [X20+56]
	206 Move X2, [X8+32]
	207 Move W1, 1
	208 Call 0x21E870C, X0, X1
	209 Move X1, X0
	210 Compare X19, 0
	211 JumpIfEqual {240}
	212 Move X8, [X20+56]
	213 Move X2, [X8+40]
	214 Move X0, X19
	215 Call List`1<Object>.AddRange, X0, X1
	216 Move X8, 0x1F34000
	217 Move X8, [X8+2728]
	218 Add X0, X31, 32
	219 Move X1, [X8]
	220 Call Enumerator<Object>.Dispose, X0
	221 Move X0, X19
	222 Move X20, [X31+128]
	223 Move X19, [X31+136]
	224 Move X22, [X31+112]
	225 Move X21, [X31+120]
	226 Move X24, [X31+96]
	227 Move X23, [X31+104]
	228 Move X26, [X31+80]
	229 Move X25, [X31+88]
	230 Move X30, [X31+64]
	231 Add X31, X31, 144
	232 Return X0
	233 Call 0x1C17F20
	234 Call 0x1C17F20
	235 Move X0, X23
	236 Move X1, X24
	237 Call 0x1C181E0
	238 Call 0x1C17F20
	239 Call 0x1C17F20
	240 Call 0x1C17F20
	241 Move X20, X0
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Move X0, X20
	244 Call 0x3EB2AD0
	245 Move X21, [X0]
	246 Call 0x3EB2AE0
	247 Move X8, 0x1F34000
	248 Move X8, [X8+2728]
	249 Add X0, X31, 32
	250 Move X1, [X8]
	251 Call Enumerator<Object>.Dispose, X0
	252 Compare X21, 0
	253 JumpIfEqual {221}
	254 Move X0, X21
	255 Call 0x1C17F18
	256 Move X21, X31
	257 Move X20, X0
	258 Move X8, 0x1F34000
	259 Move X8, [X8+2728]
	260 Move X1, [X8]
	261 Add X0, X31, 32
	262 Call Enumerator<Object>.Dispose, X0
	263 Compare X21, 0
	264 JumpIfEqual {290}
	265 Move X0, X21
	266 Call 0x1C17F18
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Call 0x3EB2AD0
	269 Move X23, [X0]
	270 Call 0x3EB2AE0
	271 Move X8, 0x1F34000
	272 Move X8, [X8+2728]
	273 Add X0, X31, 32
	274 Move X1, [X8]
	275 Call Enumerator<Object>.Dispose, X0
	276 Compare X23, 0
	277 JumpIfEqual {151}
	278 Move X0, X23
	279 Call 0x1C17F18
	280 Move X20, X0
	281 Move X23, X31
	282 Move X20, X0
	283 Move X8, 0x1F34000
	284 Move X8, [X8+2728]
	285 Move X1, [X8]
	286 Add X0, X31, 32
	287 Call Enumerator<Object>.Dispose, X0
	288 Compare X23, 0
	289 JumpIfNotEqual {292}
	290 Move X0, X20
	291 Call 0x1D2D690
	292 Move X0, X23
	293 Call 0x1C17F18
	294 Call 0x1991590

Method: System.Collections.Generic.List`1<System.ValueTuple`2<System.String, System.Type>> GraphNodeTypes()

Disassembly:
	0x01E0A3B8 ADRP X0, 0x22EF000
	0x01E0A3BC LDR X0, [X0 + 0xC30]
	0x01E0A3C0 BL 0x1C16CF4
	0x01E0A3C4 ADRP X0, 0x22EF000
	0x01E0A3C8 LDR X0, [X0 + 0xC00]
	0x01E0A3CC BL 0x1C16CF4
	0x01E0A3D0 ADRP X0, 0x22EF000
	0x01E0A3D4 LDR X0, [X0 + 0xC38]
	0x01E0A3D8 BL 0x1C16CF4
	0x01E0A3DC ADRP X0, 0x22E9000
	0x01E0A3E0 LDR X0, [X0 + 0x6C0]
	0x01E0A3E4 BL 0x1C16CF4
	0x01E0A3E8 ADRP X0, 0x22EF000
	0x01E0A3EC LDR X0, [X0 + 0xC40]
	0x01E0A3F0 BL 0x1C16CF4
	0x01E0A3F4 ADRP X0, 0x22EF000
	0x01E0A3F8 LDR X0, [X0 + 0xC48]
	0x01E0A3FC BL 0x1C16CF4
	0x01E0A400 MOVZ W8, 0x1
	0x01E0A404 STRB W8, [X23 + 0xDB4]
	0x01E0A408 MOV X0, X22
	0x01E0A40C MOV X1, X20
	0x01E0A410 MOV X2, X19
	0x01E0A414 MOV X3, X21
	0x01E0A418 MOV X4, X31
	0x01E0A41C BL 0x31CD3A8
	0x01E0A420 TBZ X0, 0x0, 0x1E0A71C
	0x01E0A424 ADRP X23, 0x22E9000
	0x01E0A428 LDR X23, [X23 + 0x6C0]
	0x01E0A42C ADRP X8, 0x22EF000
	0x01E0A430 LDR X0, [X23]
	0x01E0A434 LDR X8, [X8 + 0xBF0]
	0x01E0A438 LDR W9, [X0 + 0xE0]
	0x01E0A43C LDR X22, [X8]
	0x01E0A440 CBNZ W9, 0x1E0A448
	0x01E0A444 BL 0x1C16DFC
	0x01E0A448 MOV X0, X22
	0x01E0A44C MOV X1, X31
	0x01E0A450 BL 0x338C698
	0x01E0A454 MOV X1, X0
	0x01E0A458 MOV X0, X21
	0x01E0A45C MOV X2, X31
	0x01E0A460 BL 0x3395194
	0x01E0A464 TBZ X0, 0x0, 0x1E0A504
	0x01E0A468 CBZ X20, 0x1E0A71C
	0x01E0A46C ADRP X8, 0x22EF000
	0x01E0A470 LDR X8, [X8 + 0xB18]
	0x01E0A474 LDR X10, [X20]
	0x01E0A478 LDR X8, [X8]
	0x01E0A47C LDRB W11, [X10 + 0x130]
	0x01E0A480 LDRB W9, [X8 + 0x130]
	0x01E0A484 CMP W11, W9
	0x01E0A488 B.CC 0x1E0A4A0
	0x01E0A48C LDR X12, [X10 + 0xC8]
	0x01E0A490 ADD X12, X12, X9, 0x3, LSL
	0x01E0A494 LDUR X12, [X12 - 0x8]
	0x01E0A498 CMP X12, X8
	0x01E0A49C B.EQ 0x1E0A650
	0x01E0A4A0 ADRP X12, 0x22EF000
	0x01E0A4A4 LDR X12, [X12 + 0xC20]
	0x01E0A4A8 LDR X12, [X12]
	0x01E0A4AC LDRB W13, [X12 + 0x130]
	0x01E0A4B0 CMP W11, W13
	0x01E0A4B4 B.CC 0x1E0A4CC
	0x01E0A4B8 LDR X14, [X10 + 0xC8]
	0x01E0A4BC ADD X13, X14, X13, 0x3, LSL
	0x01E0A4C0 LDUR X13, [X13 - 0x8]
	0x01E0A4C4 CMP X13, X12
	0x01E0A4C8 B.EQ 0x1E0A650
	0x01E0A4CC ADRP X12, 0x22EF000
	0x01E0A4D0 LDR X12, [X12 + 0xC38]
	0x01E0A4D4 LDR X12, [X12]
	0x01E0A4D8 LDRB W13, [X12 + 0x130]
	0x01E0A4DC CMP W11, W13
	0x01E0A4E0 B.CC 0x1E0A71C
	0x01E0A4E4 MOV W0, W31
	0x01E0A4E8 CBZ X19, 0x1E0A720
	0x01E0A4EC LDR X10, [X10 + 0xC8]
	0x01E0A4F0 ADD X10, X10, X13, 0x3, LSL
	0x01E0A4F4 LDUR X10, [X10 - 0x8]
	0x01E0A4F8 CMP X10, X12
	0x01E0A4FC B.EQ 0x1E0A654
	0x01E0A500 B 0x1E0A720
	0x01E0A504 ADRP X8, 0x22EF000
	0x01E0A508 LDR X0, [X23]
	0x01E0A50C LDR X8, [X8 + 0xC00]
	0x01E0A510 LDR W9, [X0 + 0xE0]
	0x01E0A514 LDR X22, [X8]
	0x01E0A518 CBNZ W9, 0x1E0A520
	0x01E0A51C BL 0x1C16DFC
	0x01E0A520 MOV X0, X22
	0x01E0A524 MOV X1, X31
	0x01E0A528 BL 0x338C698
	0x01E0A52C MOV X1, X0
	0x01E0A530 MOV X0, X21
	0x01E0A534 MOV X2, X31
	0x01E0A538 BL 0x3395194
	0x01E0A53C TBZ X0, 0x0, 0x1E0A54C
	0x01E0A540 ADRP X8, 0x22EF000
	0x01E0A544 LDR X8, [X8 + 0xC30]
	0x01E0A548 B 0x1E0A590
	0x01E0A54C ADRP X8, 0x22EF000
	0x01E0A550 LDR X0, [X23]
	0x01E0A554 LDR X8, [X8 + 0xBF8]
	0x01E0A558 LDR W9, [X0 + 0xE0]
	0x01E0A55C LDR X22, [X8]
	0x01E0A560 CBNZ W9, 0x1E0A568
	0x01E0A564 BL 0x1C16DFC
	0x01E0A568 MOV X0, X22
	0x01E0A56C MOV X1, X31
	0x01E0A570 BL 0x338C698
	0x01E0A574 MOV X1, X0
	0x01E0A578 MOV X0, X21
	0x01E0A57C MOV X2, X31
	0x01E0A580 BL 0x3395194
	0x01E0A584 TBZ X0, 0x0, 0x1E0A628
	0x01E0A588 ADRP X8, 0x22EF000
	0x01E0A58C LDR X8, [X8 + 0xC28]
	0x01E0A590 LDR X8, [X8]
	0x01E0A594 CBZ X19, 0x1E0A5C0
	0x01E0A598 LDR X9, [X19]
	0x01E0A59C LDRB W10, [X8 + 0x130]
	0x01E0A5A0 LDRB W11, [X9 + 0x130]
	0x01E0A5A4 CMP W11, W10
	0x01E0A5A8 B.CC 0x1E0A5C0
	0x01E0A5AC LDR X9, [X9 + 0xC8]
	0x01E0A5B0 ADD X9, X9, X10, 0x3, LSL
	0x01E0A5B4 LDUR X9, [X9 - 0x8]
	0x01E0A5B8 CMP X9, X8
	0x01E0A5BC B.EQ 0x1E0A730
	0x01E0A5C0 CBZ X20, 0x1E0A71C
	0x01E0A5C4 LDR X9, [X20]
	0x01E0A5C8 LDRB W10, [X8 + 0x130]
	0x01E0A5CC LDRB W11, [X9 + 0x130]
	0x01E0A5D0 CMP W11, W10
	0x01E0A5D4 B.CC 0x1E0A71C
	0x01E0A5D8 LDR X9, [X9 + 0xC8]
	0x01E0A5DC ADD X9, X9, X10, 0x3, LSL
	0x01E0A5E0 LDUR X9, [X9 - 0x8]
	0x01E0A5E4 CMP X9, X8
	0x01E0A5E8 B.NE 0x1E0A71C
	0x01E0A5EC CBZ X19, 0x1E0A71C
	0x01E0A5F0 ADRP X8, 0x22EF000
	0x01E0A5F4 LDR X8, [X8 + 0xC20]
	0x01E0A5F8 LDR X9, [X19]
	0x01E0A5FC LDR X8, [X8]
	0x01E0A600 LDRB W11, [X9 + 0x130]
	0x01E0A604 LDRB W10, [X8 + 0x130]
	0x01E0A608 CMP W11, W10
	0x01E0A60C B.CC 0x1E0A71C
	0x01E0A610 LDR X9, [X9 + 0xC8]
	0x01E0A614 ADD X9, X9, X10, 0x3, LSL
	0x01E0A618 LDUR X9, [X9 - 0x8]
	0x01E0A61C CMP X9, X8
	0x01E0A620 CSET W0, EQ
	0x01E0A624 B 0x1E0A720
	0x01E0A628 ADRP X8, 0x22EF000
	0x01E0A62C LDR X8, [X8 + 0xC48]
	0x01E0A630 LDR X19, [X8]
	0x01E0A634 CBZ X21, 0x1E0A6D4
	0x01E0A638 LDR X8, [X21]
	0x01E0A63C MOV X0, X21
	0x01E0A640 LDP X9, X1, [X8 + 0x168]
	0x01E0A644 BLR X9
	0x01E0A648 MOV X1, X0
	0x01E0A64C B 0x1E0A6D8
	0x01E0A650 CBZ X19, 0x1E0A71C
	0x01E0A654 LDR X10, [X19]
	0x01E0A658 LDRB W11, [X10 + 0x130]
	0x01E0A65C CMP W11, W9
	0x01E0A660 B.CC 0x1E0A678
	0x01E0A664 LDR X12, [X10 + 0xC8]
	0x01E0A668 ADD X9, X12, X9, 0x3, LSL
	0x01E0A66C LDUR X9, [X9 - 0x8]
	0x01E0A670 CMP X9, X8
	0x01E0A674 B.EQ 0x1E0A768
	0x01E0A678 ADRP X8, 0x22EF000
	0x01E0A67C LDR X8, [X8 + 0xC20]
	0x01E0A680 LDR X8, [X8]
	0x01E0A684 LDRB W9, [X8 + 0x130]
	0x01E0A688 CMP W11, W9
	0x01E0A68C B.CC 0x1E0A6A4
	0x01E0A690 LDR X12, [X10 + 0xC8]
	0x01E0A694 ADD X9, X12, X9, 0x3, LSL
	0x01E0A698 LDUR X9, [X9 - 0x8]
	0x01E0A69C CMP X9, X8
	0x01E0A6A0 B.EQ 0x1E0A768
	0x01E0A6A4 ADRP X8, 0x22EF000
	0x01E0A6A8 LDR X8, [X8 + 0xC38]
	0x01E0A6AC LDR X8, [X8]
	0x01E0A6B0 LDRB W9, [X8 + 0x130]
	0x01E0A6B4 CMP W11, W9
	0x01E0A6B8 B.CC 0x1E0A71C
	0x01E0A6BC LDR X10, [X10 + 0xC8]
	0x01E0A6C0 ADD X9, X10, X9, 0x3, LSL
	0x01E0A6C4 LDUR X9, [X9 - 0x8]
	0x01E0A6C8 CMP X9, X8
	0x01E0A6CC B.NE 0x1E0A71C
	0x01E0A6D0 B 0x1E0A768
	0x01E0A6D4 MOV X1, X31
	0x01E0A6D8 ADRP X8, 0x22EF000
	0x01E0A6DC LDR X8, [X8 + 0xC40]
	0x01E0A6E0 MOV X0, X19
	0x01E0A6E4 MOV X3, X31
	0x01E0A6E8 LDR X2, [X8]
	0x01E0A6EC BL 0x32274B8
	0x01E0A6F0 ADRP X8, 0x22E9000
	0x01E0A6F4 LDR X8, [X8 + 0xA28]
	0x01E0A6F8 MOV X19, X0
	0x01E0A6FC LDR X8, [X8]
	0x01E0A700 LDR W9, [X8 + 0xE0]
	0x01E0A704 CBNZ W9, 0x1E0A710
	0x01E0A708 MOV X0, X8
	0x01E0A70C BL 0x1C16DFC
	0x01E0A710 MOV X0, X19
	0x01E0A714 MOV X1, X31
	0x01E0A718 BL 0x3C06A04
	0x01E0A71C MOV W0, W31
	0x01E0A720 LDP X20, X19, [X31 + 0x20]
	0x01E0A724 LDP X22, X21, [X31 + 0x10]
	0x01E0A728 LDP X30, X23, [X31], #0x30
	0x01E0A72C RET
	0x01E0A730 CBZ X20, 0x1E0A71C
	0x01E0A734 ADRP X9, 0x22EF000
	0x01E0A738 LDR X9, [X9 + 0xC20]
	0x01E0A73C LDR X10, [X20]
	0x01E0A740 LDR X9, [X9]
	0x01E0A744 LDRB W12, [X10 + 0x130]
	0x01E0A748 LDRB W11, [X9 + 0x130]
	0x01E0A74C CMP W12, W11
	0x01E0A750 B.CC 0x1E0A5C4
	0x01E0A754 LDR X10, [X10 + 0xC8]
	0x01E0A758 ADD X10, X10, X11, 0x3, LSL
	0x01E0A75C LDUR X10, [X10 - 0x8]
	0x01E0A760 CMP X10, X9
	0x01E0A764 B.NE 0x1E0A5C4
	0x01E0A768 MOVZ W0, 0x1
	0x01E0A76C B 0x1E0A720
	0x01E0A770 MOVZ W8, 0xA
	0x01E0A774 MOV X1, X31
	0x01E0A778 STR W8, [X0 + 0x28]
	0x01E0A77C B 0x31CD5EC
	0x01E0A780 STR X30, [X31 - 0x30]!
	0x01E0A784 STP X22, X21, [X31 + 0x10]
	0x01E0A788 STP X20, X19, [X31 + 0x20]
	0x01E0A78C ADRP X21, 0x25CE000
	0x01E0A790 ADRP X22, 0x22EF000
	0x01E0A794 ADRP X20, 0x22EF000
	0x01E0A798 LDRB W8, [X21 + 0xDB5]
	0x01E0A79C LDR X22, [X22 + 0xC50]
	0x01E0A7A0 LDR X20, [X20 + 0xC58]
	0x01E0A7A4 MOV X19, X0
	0x01E0A7A8 TBNZ X8, 0x0, 0x1E0A7D8
	0x01E0A7AC ADRP X0, 0x22EF000
	0x01E0A7B0 LDR X0, [X0 + 0xC60]
	0x01E0A7B4 BL 0x1C16CF4
	0x01E0A7B8 ADRP X0, 0x22EF000
	0x01E0A7BC LDR X0, [X0 + 0xC58]
	0x01E0A7C0 BL 0x1C16CF4
	0x01E0A7C4 ADRP X0, 0x22EF000
	0x01E0A7C8 LDR X0, [X0 + 0xC50]
	0x01E0A7CC BL 0x1C16CF4
	0x01E0A7D0 MOVZ W8, 0x1
	0x01E0A7D4 STRB W8, [X21 + 0xDB5]
	0x01E0A7D8 LDR X0, [X22]
	0x01E0A7DC BL 0x1C16F10
	0x01E0A7E0 LDR X1, [X20]
	0x01E0A7E4 MOV X20, X0
	0x01E0A7E8 BL 0x30D123C
	0x01E0A7EC CBZ X20, 0x1E0A874
	0x01E0A7F0 ADRP X9, 0x22EF000
	0x01E0A7F4 LDR X9, [X9 + 0xC60]
	0x01E0A7F8 LDR W11, [X20 + 0x1C]
	0x01E0A7FC LDR X8, [X20 + 0x10]
	0x01E0A800 LDR X10, [X9]
	0x01E0A804 ADD W9, W11, 0x1
	0x01E0A808 STR W9, [X20 + 0x1C]
	0x01E0A80C CBZ X8, 0x1E0A874
	0x01E0A810 LDRSW X9, [X20 + 0x18]
	0x01E0A814 LDR W11, [X8 + 0x18]
	0x01E0A818 CMP W9, W11
	0x01E0A81C B.CS 0x1E0A83C
	0x01E0A820 ADRP X10, 0xFFFFFFFFFECE0000
	0x01E0A824 LDR V0, [X10 + 0x47]
	0x01E0A828 ADD W10, W9, 0x1
	0x01E0A82C ADD X8, X8, X9, 0x4, LSL
	0x01E0A830 STR W10, [X20 + 0x18]
	0x01E0A834 STR V0, [X8 + 0x2]
	0x01E0A838 B 0x1E0A858
	0x01E0A83C LDR X8, [X10 + 0x20]
	0x01E0A840 MOVZ W2, 0x3F800000
	0x01E0A844 MOV X0, X20
	0x01E0A848 MOV X1, X31
	0x01E0A84C LDR X8, [X8 + 0xC0]
	0x01E0A850 LDR X3, [X8 + 0x70]
	0x01E0A854 BL 0x30D1A48
	0x01E0A858 STR X20, [X19 + 0x18]
	0x01E0A85C MOV X0, X19
	0x01E0A860 LDP X20, X19, [X31 + 0x20]
	0x01E0A864 LDP X22, X21, [X31 + 0x10]
	0x01E0A868 MOV X1, X31
	0x01E0A86C LDR X30, [X31], #0x30
	0x01E0A870 B 0x3C36D2C
	0x01E0A874 BL 0x1C16F20
	0x01E0A878 SUB X31, X31, 0x30
	0x01E0A87C STR X30, [X31 + 0x10]
	0x01E0A880 STP X20, X19, [X31 + 0x20]
	0x01E0A884 ADRP X20, 0x25CE000
	0x01E0A888 ADRP X19, 0x22EF000
	0x01E0A88C LDRB W8, [X20 + 0xDB6]
	0x01E0A890 LDR X19, [X19 + 0xC68]
	0x01E0A894 TBNZ X8, 0x0, 0x1E0A8AC
	0x01E0A898 ADRP X0, 0x22EF000
	0x01E0A89C LDR X0, [X0 + 0xC68]
	0x01E0A8A0 BL 0x1C16CF4
	0x01E0A8A4 MOVZ W8, 0x1
	0x01E0A8A8 STRB W8, [X20 + 0xDB6]
	0x01E0A8AC LDR X0, [X19]
	0x01E0A8B0 ADD X1, X31, 0x0
	0x01E0A8B4 MOV X2, X31
	0x01E0A8B8 STP X31, X31, [X31]
	0x01E0A8BC BL 0x3C26394
	0x01E0A8C0 TBZ X0, 0x0, 0x1E0A8D0
	0x01E0A8C4 LDP S0, S1, [X31]
	0x01E0A8C8 LDP S2, S3, [X31 + 0x8]
	0x01E0A8CC B 0x1E0A8E8
	0x01E0A8D0 ADRP X8, 0xFFFFFFFFFECE0000
	0x01E0A8D4 ADRP X9, 0xFFFFFFFFFECDF000
	0x01E0A8D8 LDR V2, [X8 + 0x30]
	0x01E0A8DC LDR V1, [X9 + 0xF90]
	0x01E0A8E0 FMOV S0, 1
	0x01E0A8E4 FMOV S3, 1

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+112], X30
	003 Move [X31+120], X23
	004 Move [X31+128], X22
	005 Move [X31+136], X21
	006 Move [X31+144], X20
	007 Move [X31+152], X19
	008 Move X23, 0x25CF000
	009 Move X21, 0x22F0000
	010 Move X19, 0x22F0000
	011 Move X20, 0x22F0000
	012 Move X22, 0x22EA000
	013 Move W8, [X23+3506]
	014 Move X21, [X21+2912]
	015 Move X19, [X19+2920]
	016 Move X20, [X20+2928]
	017 Move X22, [X22+1728]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {81}
	022 Move X0, 0x22F0000
	023 Move X0, [X0+2936]
	024 Call 0x1C17CF4
	025 Move X0, 0x22F0000
	026 Move X0, [X0+2944]
	027 Call 0x1C17CF4
	028 Move X0, 0x22F0000
	029 Move X0, [X0+2928]
	030 Call 0x1C17CF4
	031 Move X0, 0x22F0000
	032 Move X0, [X0+2952]
	033 Call 0x1C17CF4
	034 Move X0, 0x22F0000
	035 Move X0, [X0+2920]
	036 Call 0x1C17CF4
	037 Move X0, 0x22F0000
	038 Move X0, [X0+2912]
	039 Call 0x1C17CF4
	040 Move X0, 0x22F0000
	041 Move X0, [X0+2960]
	042 Call 0x1C17CF4
	043 Move X0, 0x22F0000
	044 Move X0, [X0+2968]
	045 Call 0x1C17CF4
	046 Move X0, 0x22F0000
	047 Move X0, [X0+2976]
	048 Call 0x1C17CF4
	049 Move X0, 0x22F0000
	050 Move X0, [X0+2984]
	051 Call 0x1C17CF4
	052 Move X0, 0x22EA000
	053 Move X0, [X0+1728]
	054 Call 0x1C17CF4
	055 Move X0, 0x22F0000
	056 Move X0, [X0+2992]
	057 Call 0x1C17CF4
	058 Move X0, 0x22F0000
	059 Move X0, [X0+2688]
	060 Call 0x1C17CF4
	061 Move X0, 0x22F0000
	062 Move X0, [X0+2800]
	063 Call 0x1C17CF4
	064 Move X0, 0x22F0000
	065 Move X0, [X0+3000]
	066 Call 0x1C17CF4
	067 Move X0, 0x22F0000
	068 Move X0, [X0+3008]
	069 Call 0x1C17CF4
	070 Move X0, 0x22F0000
	071 Move X0, [X0+3016]
	072 Call 0x1C17CF4
	073 Move X0, 0x22F0000
	074 Move X0, [X0+3024]
	075 Call 0x1C17CF4
	076 Move X0, 0x22F0000
	077 Move X0, [X0+2848]
	078 Call 0x1C17CF4
	079 Move W8, 1
	080 Move [X23+3506], W8
	081 Move X0, [X21]
	082 Move X23, 0x22F0000
	083 Move X21, 0x22F0000
	084 Move X23, [X23+2848]
	085 Move X21, [X21+2992]
	086 Call 0x1C17F10
	087 Move X1, [X19]
	088 Move X19, X0
	089 Call List`1<ValueTuple`2<Object, Object>>..ctor, X0
	090 Move X0, [X22]
	091 Move X20, [X20]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move X0, X20
	097 Move X1, X31
	098 Call Type.GetTypeFromHandle, X0
	099 Move X1, [X23]
	100 Move X3, [X21]
	101 Move X2, X0
	102 Add X0, X31, 96
	103 Move [X31+96], X31
	104 Move [X31+104], X31
	105 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	106 Compare X19, 0
	107 JumpIfEqual {357}
	108 Move X20, 0x22F0000
	109 Move X20, [X20+2952]
	110 Move W10, [X19+28]
	111 Move X1, [X31+96]
	112 Move X2, [X31+104]
	113 Move X8, [X19+16]
	114 Move X9, [X20]
	115 Add W10, W10, 1
	116 Move [X19+28], W10
	117 Compare X8, 0
	118 JumpIfEqual {357}
	119 NotImplemented "Instruction LDRSW not yet implemented."
	120 Move W11, [X8+24]
	121 Move X23, 0x22F0000
	122 Move X22, 0x22F0000
	123 Move X23, [X23+2936]
	124 Move X22, [X22+2688]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Add W9, W10, 1
	127 Add X8, X8, X10
	128 Move [X19+24], W9
	129 Move [X8+32], X1
	130 Move [X8+40], X2
	131 Move X8, [X9+32]
	132 Move X0, X19
	133 Move X8, [X8+192]
	134 Move X3, [X8+112]
	135 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	136 Move X0, [X23]
	137 Move X1, X31
	138 Call Type.GetTypeFromHandle, X0
	139 Move X1, [X22]
	140 Move X3, [X21]
	141 Move X2, X0
	142 Add X0, X31, 80
	143 Move [X31+80], X31
	144 Move [X31+88], X31
	145 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	146 Move W10, [X19+28]
	147 Move X1, [X31+80]
	148 Move X2, [X31+88]
	149 Move X8, [X19+16]
	150 Move X9, [X20]
	151 Add W10, W10, 1
	152 Move [X19+28], W10
	153 Compare X8, 0
	154 JumpIfEqual {357}
	155 NotImplemented "Instruction LDRSW not yet implemented."
	156 Move W11, [X8+24]
	157 Move X23, 0x22F0000
	158 Move X22, 0x22F0000
	159 Move X23, [X23+2944]
	160 Move X22, [X22+2800]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Add W9, W10, 1
	163 Add X8, X8, X10
	164 Move [X19+24], W9
	165 Move [X8+32], X1
	166 Move [X8+40], X2
	167 Move X8, [X9+32]
	168 Move X0, X19
	169 Move X8, [X8+192]
	170 Move X3, [X8+112]
	171 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	172 Move X0, [X23]
	173 Move X1, X31
	174 Call Type.GetTypeFromHandle, X0
	175 Move X1, [X22]
	176 Move X3, [X21]
	177 Move X2, X0
	178 Add X0, X31, 64
	179 Move [X31+64], X31
	180 Move [X31+72], X31
	181 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	182 Move W10, [X19+28]
	183 Move X1, [X31+64]
	184 Move X2, [X31+72]
	185 Move X8, [X19+16]
	186 Move X9, [X20]
	187 Add W10, W10, 1
	188 Move [X19+28], W10
	189 Compare X8, 0
	190 JumpIfEqual {357}
	191 NotImplemented "Instruction LDRSW not yet implemented."
	192 Move W11, [X8+24]
	193 Move X23, 0x22F0000
	194 Move X22, 0x22F0000
	195 Move X23, [X23+2976]
	196 Move X22, [X22+3024]
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Add W9, W10, 1
	199 Add X8, X8, X10
	200 Move [X19+24], W9
	201 Move [X8+32], X1
	202 Move [X8+40], X2
	203 Move X8, [X9+32]
	204 Move X0, X19
	205 Move X8, [X8+192]
	206 Move X3, [X8+112]
	207 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	208 Move X0, [X23]
	209 Move X1, X31
	210 Call Type.GetTypeFromHandle, X0
	211 Move X1, [X22]
	212 Move X3, [X21]
	213 Move X2, X0
	214 Add X0, X31, 48
	215 Move [X31+48], X31
	216 Move [X31+56], X31
	217 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	218 Move W10, [X19+28]
	219 Move X1, [X31+48]
	220 Move X2, [X31+56]
	221 Move X8, [X19+16]
	222 Move X9, [X20]
	223 Add W10, W10, 1
	224 Move [X19+28], W10
	225 Compare X8, 0
	226 JumpIfEqual {357}
	227 NotImplemented "Instruction LDRSW not yet implemented."
	228 Move W11, [X8+24]
	229 Move X23, 0x22F0000
	230 Move X22, 0x22F0000
	231 Move X23, [X23+2968]
	232 Move X22, [X22+3008]
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Add W9, W10, 1
	235 Add X8, X8, X10
	236 Move [X19+24], W9
	237 Move [X8+32], X1
	238 Move [X8+40], X2
	239 Move X8, [X9+32]
	240 Move X0, X19
	241 Move X8, [X8+192]
	242 Move X3, [X8+112]
	243 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	244 Move X0, [X23]
	245 Move X1, X31
	246 Call Type.GetTypeFromHandle, X0
	247 Move X1, [X22]
	248 Move X3, [X21]
	249 Move X2, X0
	250 Add X0, X31, 32
	251 Move [X31+32], X31
	252 Move [X31+40], X31
	253 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	254 Move W10, [X19+28]
	255 Move X1, [X31+32]
	256 Move X2, [X31+40]
	257 Move X8, [X19+16]
	258 Move X9, [X20]
	259 Add W10, W10, 1
	260 Move [X19+28], W10
	261 Compare X8, 0
	262 JumpIfEqual {357}
	263 NotImplemented "Instruction LDRSW not yet implemented."
	264 Move W11, [X8+24]
	265 Move X23, 0x22F0000
	266 Move X22, 0x22F0000
	267 Move X23, [X23+2960]
	268 Move X22, [X22+3016]
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Add W9, W10, 1
	271 Add X8, X8, X10
	272 Move [X19+24], W9
	273 Move [X8+32], X1
	274 Move [X8+40], X2
	275 Move X8, [X9+32]
	276 Move X0, X19
	277 Move X8, [X8+192]
	278 Move X3, [X8+112]
	279 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	280 Move X0, [X23]
	281 Move X1, X31
	282 Call Type.GetTypeFromHandle, X0
	283 Move X1, [X22]
	284 Move X3, [X21]
	285 Move X2, X0
	286 Add X0, X31, 16
	287 Move [X31+16], X31
	288 Move [X31+24], X31
	289 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	290 Move W10, [X19+28]
	291 Move X1, [X31+16]
	292 Move X2, [X31+24]
	293 Move X8, [X19+16]
	294 Move X9, [X20]
	295 Add W10, W10, 1
	296 Move [X19+28], W10
	297 Compare X8, 0
	298 JumpIfEqual {357}
	299 NotImplemented "Instruction LDRSW not yet implemented."
	300 Move W11, [X8+24]
	301 Move X23, 0x22F0000
	302 Move X22, 0x22F0000
	303 Move X23, [X23+2984]
	304 Move X22, [X22+3000]
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Add W9, W10, 1
	307 Add X8, X8, X10
	308 Move [X19+24], W9
	309 Move [X8+32], X1
	310 Move [X8+40], X2
	311 Move X8, [X9+32]
	312 Move X0, X19
	313 Move X8, [X8+192]
	314 Move X3, [X8+112]
	315 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	316 Move X0, [X23]
	317 Move X1, X31
	318 Call Type.GetTypeFromHandle, X0
	319 Move X1, [X22]
	320 Move X3, [X21]
	321 Move X2, X0
	322 Add X0, X31, 0
	323 Move [X31], X31
	324 Move [X31+8], X31
	325 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	326 Move W10, [X19+28]
	327 Move X1, [X31]
	328 Move X2, [X31+8]
	329 Move X8, [X19+16]
	330 Move X9, [X20]
	331 Add W10, W10, 1
	332 Move [X19+28], W10
	333 Compare X8, 0
	334 JumpIfEqual {357}
	335 NotImplemented "Instruction LDRSW not yet implemented."
	336 Move W11, [X8+24]
	337 NotImplemented "Instruction CMP not yet implemented."
	338 Add W9, W10, 1
	339 Add X8, X8, X10
	340 Move [X19+24], W9
	341 Move [X8+32], X1
	342 Move [X8+40], X2
	343 Move X8, [X9+32]
	344 Move X0, X19
	345 Move X8, [X8+192]
	346 Move X3, [X8+112]
	347 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	348 Move X0, X19
	349 Move X20, [X31+144]
	350 Move X19, [X31+152]
	351 Move X22, [X31+128]
	352 Move X21, [X31+136]
	353 Move X30, [X31+112]
	354 Move X23, [X31+120]
	355 Add X31, X31, 160
	356 Return X0
	357 Call 0x1C17F20

Method: System.Collections.Generic.Dictionary`2<System.Type, System.Collections.Generic.List`1<System.ValueTuple`2<System.String, System.Type>>> GraphConnectionTypes()

Disassembly:
	0x01E0A8E8 LDP X20, X19, [X31 + 0x20]
	0x01E0A8EC LDR X30, [X31 + 0x10]
	0x01E0A8F0 ADD X31, X31, 0x30
	0x01E0A8F4 RET
	0x01E0A8F8 FMOV S0, W31
	0x01E0A8FC FMOV S1, W31
	0x01E0A900 FMOV S2, W31
	0x01E0A904 FMOV S3, 1
	0x01E0A908 RET
	0x01E0A90C STR X30, [X31 - 0x20]!
	0x01E0A910 STP X20, X19, [X31 + 0x10]
	0x01E0A914 ADRP X20, 0x25CE000
	0x01E0A918 ADRP X19, 0x22EF000
	0x01E0A91C LDRB W8, [X20 + 0xDB7]
	0x01E0A920 LDR X19, [X19 + 0xA88]
	0x01E0A924 TBNZ X8, 0x0, 0x1E0A93C
	0x01E0A928 ADRP X0, 0x22EF000
	0x01E0A92C LDR X0, [X0 + 0xA88]
	0x01E0A930 BL 0x1C16CF4
	0x01E0A934 MOVZ W8, 0x1
	0x01E0A938 STRB W8, [X20 + 0xDB7]
	0x01E0A93C LDR X0, [X19]
	0x01E0A940 LDR W8, [X0 + 0xE0]
	0x01E0A944 CBNZ W8, 0x1E0A950
	0x01E0A948 BL 0x1C16DFC
	0x01E0A94C LDR X0, [X19]
	0x01E0A950 LDR X8, [X0 + 0xB8]
	0x01E0A954 LDP X20, X19, [X31 + 0x10]
	0x01E0A958 LDR X0, [X8 + 0x70]
	0x01E0A95C LDR X30, [X31], #0x20
	0x01E0A960 RET
	0x01E0A964 STR X30, [X31 - 0x30]!
	0x01E0A968 STP X22, X21, [X31 + 0x10]
	0x01E0A96C STP X20, X19, [X31 + 0x20]
	0x01E0A970 ADRP X22, 0x25CE000
	0x01E0A974 ADRP X21, 0x22E9000
	0x01E0A978 ADRP X20, 0x22EF000
	0x01E0A97C LDRB W8, [X22 + 0xDB8]
	0x01E0A980 LDR X21, [X21 + 0x758]
	0x01E0A984 LDR X20, [X20 + 0xC70]
	0x01E0A988 MOV X19, X0
	0x01E0A98C TBNZ X8, 0x0, 0x1E0A9B0
	0x01E0A990 ADRP X0, 0x22E9000
	0x01E0A994 LDR X0, [X0 + 0x758]
	0x01E0A998 BL 0x1C16CF4
	0x01E0A99C ADRP X0, 0x22EF000
	0x01E0A9A0 LDR X0, [X0 + 0xC70]
	0x01E0A9A4 BL 0x1C16CF4
	0x01E0A9A8 MOVZ W8, 0x1
	0x01E0A9AC STRB W8, [X22 + 0xDB8]
	0x01E0A9B0 LDR W8, [X19 + 0x2C]
	0x01E0A9B4 LDR X0, [X21]
	0x01E0A9B8 ADD X1, X31, 0xC
	0x01E0A9BC STR W8, [X31 + 0xC]
	0x01E0A9C0 BL 0x1C16E04
	0x01E0A9C4 LDR X8, [X20]
	0x01E0A9C8 MOV X1, X0
	0x01E0A9CC MOV X2, X31
	0x01E0A9D0 MOV X0, X8
	0x01E0A9D4 BL 0x321EFD0
	0x01E0A9D8 LDP X20, X19, [X31 + 0x20]
	0x01E0A9DC LDP X22, X21, [X31 + 0x10]
	0x01E0A9E0 LDR X30, [X31], #0x30
	0x01E0A9E4 RET
	0x01E0A9E8 STR X30, [X31 - 0x30]!
	0x01E0A9EC STP X22, X21, [X31 + 0x10]
	0x01E0A9F0 STP X20, X19, [X31 + 0x20]
	0x01E0A9F4 ADRP X21, 0x25CE000
	0x01E0A9F8 ADRP X22, 0x22EF000
	0x01E0A9FC ADRP X20, 0x22EF000
	0x01E0AA00 LDRB W8, [X21 + 0xDB9]
	0x01E0AA04 LDR X22, [X22 + 0xC78]
	0x01E0AA08 LDR X20, [X20 + 0xC80]
	0x01E0AA0C MOV X19, X0
	0x01E0AA10 TBNZ X8, 0x0, 0x1E0AA34
	0x01E0AA14 ADRP X0, 0x22EF000
	0x01E0AA18 LDR X0, [X0 + 0xC80]
	0x01E0AA1C BL 0x1C16CF4
	0x01E0AA20 ADRP X0, 0x22EF000
	0x01E0AA24 LDR X0, [X0 + 0xC78]
	0x01E0AA28 BL 0x1C16CF4
	0x01E0AA2C MOVZ W8, 0x1
	0x01E0AA30 STRB W8, [X21 + 0xDB9]
	0x01E0AA34 LDR X0, [X22]
	0x01E0AA38 BL 0x1C16F10
	0x01E0AA3C LDR X1, [X20]
	0x01E0AA40 MOV X20, X0
	0x01E0AA44 BL 0x301B7C4
	0x01E0AA48 STR X20, [X19 + 0x30]
	0x01E0AA4C MOV X0, X19
	0x01E0AA50 LDP X20, X19, [X31 + 0x20]
	0x01E0AA54 LDP X22, X21, [X31 + 0x10]
	0x01E0AA58 MOV X1, X31
	0x01E0AA5C LDR X30, [X31], #0x30
	0x01E0AA60 B 0x31CD6DC
	0x01E0AA64 SUB X31, X31, 0x30
	0x01E0AA68 STR X30, [X31 + 0x10]
	0x01E0AA6C STP X20, X19, [X31 + 0x20]
	0x01E0AA70 ADRP X20, 0x25CE000
	0x01E0AA74 ADRP X19, 0x22EF000
	0x01E0AA78 LDRB W8, [X20 + 0xDBA]
	0x01E0AA7C LDR X19, [X19 + 0xC68]
	0x01E0AA80 TBNZ X8, 0x0, 0x1E0AA98
	0x01E0AA84 ADRP X0, 0x22EF000
	0x01E0AA88 LDR X0, [X0 + 0xC68]
	0x01E0AA8C BL 0x1C16CF4
	0x01E0AA90 MOVZ W8, 0x1
	0x01E0AA94 STRB W8, [X20 + 0xDBA]
	0x01E0AA98 LDR X0, [X19]
	0x01E0AA9C ADD X1, X31, 0x0
	0x01E0AAA0 MOV X2, X31
	0x01E0AAA4 STP X31, X31, [X31]
	0x01E0AAA8 BL 0x3C26394
	0x01E0AAAC TBZ X0, 0x0, 0x1E0AABC
	0x01E0AAB0 LDP S0, S1, [X31]
	0x01E0AAB4 LDP S2, S3, [X31 + 0x8]
	0x01E0AAB8 B 0x1E0AAD4
	0x01E0AABC ADRP X8, 0xFFFFFFFFFECE0000
	0x01E0AAC0 ADRP X9, 0xFFFFFFFFFECDF000
	0x01E0AAC4 LDR V2, [X8 + 0x30]
	0x01E0AAC8 LDR V1, [X9 + 0xF90]
	0x01E0AACC FMOV S0, 1
	0x01E0AAD0 FMOV S3, 1
	0x01E0AAD4 LDP X20, X19, [X31 + 0x20]
	0x01E0AAD8 LDR X30, [X31 + 0x10]
	0x01E0AADC ADD X31, X31, 0x30
	0x01E0AAE0 RET
	0x01E0AAE4 MOV W0, W31
	0x01E0AAE8 RET
	0x01E0AAEC STP X30, X23, [X31 - 0x30]!
	0x01E0AAF0 STP X22, X21, [X31 + 0x10]
	0x01E0AAF4 STP X20, X19, [X31 + 0x20]
	0x01E0AAF8 ADRP X21, 0x25CE000
	0x01E0AAFC ADRP X23, 0x22E9000
	0x01E0AB00 LDRB W8, [X21 + 0xDBB]
	0x01E0AB04 LDR X23, [X23 + 0x598]
	0x01E0AB08 MOV X19, X1
	0x01E0AB0C MOV X20, X0
	0x01E0AB10 TBNZ X8, 0x0, 0x1E0AB28
	0x01E0AB14 ADRP X0, 0x22E9000
	0x01E0AB18 LDR X0, [X0 + 0x598]
	0x01E0AB1C BL 0x1C16CF4
	0x01E0AB20 MOVZ W8, 0x1
	0x01E0AB24 STRB W8, [X21 + 0xDBB]
	0x01E0AB28 MOV X22, X20
	0x01E0AB2C LDR X21, [X22 + 0x18]!
	0x01E0AB30 LDR X0, [X23]
	0x01E0AB34 LDR W8, [X0 + 0xE0]
	0x01E0AB38 CBNZ W8, 0x1E0AB40
	0x01E0AB3C BL 0x1C16DFC
	0x01E0AB40 MOV X0, X21
	0x01E0AB44 MOV X1, X19
	0x01E0AB48 MOV X2, X31
	0x01E0AB4C BL 0x3C3883C
	0x01E0AB50 ADD X9, X20, 0x20
	0x01E0AB54 TBNZ X0, 0x0, 0x1E0AB8C
	0x01E0AB58 LDR X0, [X23]
	0x01E0AB5C LDR X20, [X9]
	0x01E0AB60 LDR W8, [X0 + 0xE0]
	0x01E0AB64 CBNZ W8, 0x1E0AB6C
	0x01E0AB68 BL 0x1C16DFC
	0x01E0AB6C MOV X0, X20
	0x01E0AB70 MOV X1, X19
	0x01E0AB74 MOV X2, X31
	0x01E0AB78 BL 0x3C3883C
	0x01E0AB7C MOV W8, W0
	0x01E0AB80 MOV X0, X31
	0x01E0AB84 MOV X9, X22
	0x01E0AB88 TBZ X8, 0x0, 0x1E0AB90
	0x01E0AB8C LDR X0, [X9]
	0x01E0AB90 LDP X20, X19, [X31 + 0x20]
	0x01E0AB94 LDP X22, X21, [X31 + 0x10]
	0x01E0AB98 LDP X30, X23, [X31], #0x30
	0x01E0AB9C RET
	0x01E0ABA0 MOVZ W8, 0x1
	0x01E0ABA4 MOV X1, X31
	0x01E0ABA8 STR W8, [X0 + 0x28]
	0x01E0ABAC B 0x31CD144
	0x01E0ABB0 SUB X31, X31, 0x30
	0x01E0ABB4 STR X30, [X31 + 0x10]
	0x01E0ABB8 STP X20, X19, [X31 + 0x20]
	0x01E0ABBC ADRP X20, 0x25CE000
	0x01E0ABC0 ADRP X19, 0x22EF000
	0x01E0ABC4 LDRB W8, [X20 + 0xDBC]
	0x01E0ABC8 LDR X19, [X19 + 0xC88]
	0x01E0ABCC TBNZ X8, 0x0, 0x1E0ABE4
	0x01E0ABD0 ADRP X0, 0x22EF000
	0x01E0ABD4 LDR X0, [X0 + 0xC88]
	0x01E0ABD8 BL 0x1C16CF4
	0x01E0ABDC MOVZ W8, 0x1
	0x01E0ABE0 STRB W8, [X20 + 0xDBC]
	0x01E0ABE4 LDR X0, [X19]
	0x01E0ABE8 ADD X1, X31, 0x0
	0x01E0ABEC MOV X2, X31
	0x01E0ABF0 STP X31, X31, [X31]
	0x01E0ABF4 BL 0x3C26394
	0x01E0ABF8 TBZ X0, 0x0, 0x1E0AC08
	0x01E0ABFC LDP S0, S1, [X31]
	0x01E0AC00 LDP S2, S3, [X31 + 0x8]
	0x01E0AC04 B 0x1E0AC18
	0x01E0AC08 FMOV S1, W31
	0x01E0AC0C FMOV S0, 1
	0x01E0AC10 FMOV S2, W31
	0x01E0AC14 FMOV S3, 1
	0x01E0AC18 LDP X20, X19, [X31 + 0x20]
	0x01E0AC1C LDR X30, [X31 + 0x10]
	0x01E0AC20 ADD X31, X31, 0x30
	0x01E0AC24 RET
	0x01E0AC28 FMOV S0, W31
	0x01E0AC2C FMOV S1, W31
	0x01E0AC30 FMOV S2, W31
	0x01E0AC34 FMOV S3, 1
	0x01E0AC38 RET
	0x01E0AC3C STR X30, [X31 - 0x20]!
	0x01E0AC40 STP X20, X19, [X31 + 0x10]
	0x01E0AC44 ADRP X20, 0x25CE000
	0x01E0AC48 ADRP X19, 0x22EF000
	0x01E0AC4C LDRB W8, [X20 + 0xDBD]
	0x01E0AC50 LDR X19, [X19 + 0xA88]
	0x01E0AC54 TBNZ X8, 0x0, 0x1E0AC6C
	0x01E0AC58 ADRP X0, 0x22EF000
	0x01E0AC5C LDR X0, [X0 + 0xA88]
	0x01E0AC60 BL 0x1C16CF4
	0x01E0AC64 MOVZ W8, 0x1
	0x01E0AC68 STRB W8, [X20 + 0xDBD]
	0x01E0AC6C LDR X0, [X19]
	0x01E0AC70 LDR W8, [X0 + 0xE0]
	0x01E0AC74 CBNZ W8, 0x1E0AC80
	0x01E0AC78 BL 0x1C16DFC
	0x01E0AC7C LDR X0, [X19]
	0x01E0AC80 LDR X8, [X0 + 0xB8]
	0x01E0AC84 LDP X20, X19, [X31 + 0x10]
	0x01E0AC88 LDR X0, [X8 + 0x68]
	0x01E0AC8C LDR X30, [X31], #0x20
	0x01E0AC90 RET
	0x01E0AC94 B 0x1E0AC98
	0x01E0AC98 STR X30, [X31 - 0x20]!
	0x01E0AC9C STP X20, X19, [X31 + 0x10]
	0x01E0ACA0 ADRP X20, 0x25CE000
	0x01E0ACA4 LDRB W8, [X20 + 0xDBE]
	0x01E0ACA8 MOV X19, X0
	0x01E0ACAC TBNZ X8, 0x0, 0x1E0ACE8
	0x01E0ACB0 ADRP X0, 0x22E9000
	0x01E0ACB4 LDR X0, [X0 + 0x758]
	0x01E0ACB8 BL 0x1C16CF4
	0x01E0ACBC ADRP X0, 0x22EF000
	0x01E0ACC0 LDR X0, [X0 + 0xC90]
	0x01E0ACC4 BL 0x1C16CF4
	0x01E0ACC8 ADRP X0, 0x22EF000
	0x01E0ACCC LDR X0, [X0 + 0xC98]
	0x01E0ACD0 BL 0x1C16CF4
	0x01E0ACD4 ADRP X0, 0x22EF000
	0x01E0ACD8 LDR X0, [X0 + 0xBC0]
	0x01E0ACDC BL 0x1C16CF4
	0x01E0ACE0 MOVZ W8, 0x1
	0x01E0ACE4 STRB W8, [X20 + 0xDBE]
	0x01E0ACE8 LDR X0, [X19 + 0x30]
	0x01E0ACEC LDR W20, [X19 + 0x40]
	0x01E0ACF0 MOV X1, X31
	0x01E0ACF4 BL 0x32277A8
	0x01E0ACF8 CMP W20, 0x1
	0x01E0ACFC B.NE 0x1E0AD14
	0x01E0AD00 TBZ X0, 0x0, 0x1E0AD54
	0x01E0AD04 ADRP X8, 0x22EF000
	0x01E0AD08 LDR X8, [X8 + 0xBC0]
	0x01E0AD0C LDR X0, [X8]
	0x01E0AD10 B 0x1E0AD9C
	0x01E0AD14 TBZ X0, 0x0, 0x1E0AD5C
	0x01E0AD18 ADRP X9, 0x22E9000
	0x01E0AD1C LDR W8, [X19 + 0x40]
	0x01E0AD20 LDR X9, [X9 + 0x758]
	0x01E0AD24 ADD X1, X31, 0x8
	0x01E0AD28 STR W8, [X31 + 0x8]
	0x01E0AD2C LDR X0, [X9]
	0x01E0AD30 BL 0x1C16E04
	0x01E0AD34 ADRP X8, 0x22EF000
	0x01E0AD38 LDR X8, [X8 + 0xC90]
	0x01E0AD3C MOV X1, X0
	0x01E0AD40 MOV X2, X31
	0x01E0AD44 LDR X8, [X8]
	0x01E0AD48 MOV X0, X8
	0x01E0AD4C BL 0x321EFD0
	0x01E0AD50 B 0x1E0AD9C
	0x01E0AD54 LDR X0, [X19 + 0x30]
	0x01E0AD58 B 0x1E0AD9C
	0x01E0AD5C ADRP X9, 0x22E9000
	0x01E0AD60 LDR X20, [X19 + 0x30]
	0x01E0AD64 LDR W8, [X19 + 0x40]
	0x01E0AD68 LDR X9, [X9 + 0x758]
	0x01E0AD6C ADD X1, X31, 0xC
	0x01E0AD70 STR W8, [X31 + 0xC]
	0x01E0AD74 LDR X0, [X9]
	0x01E0AD78 BL 0x1C16E04
	0x01E0AD7C ADRP X8, 0x22EF000
	0x01E0AD80 LDR X8, [X8 + 0xC98]
	0x01E0AD84 MOV X2, X0
	0x01E0AD88 MOV X1, X20
	0x01E0AD8C MOV X3, X31
	0x01E0AD90 LDR X8, [X8]
	0x01E0AD94 MOV X0, X8
	0x01E0AD98 BL 0x3227BD4
	0x01E0AD9C LDP X20, X19, [X31 + 0x10]
	0x01E0ADA0 LDR X30, [X31], #0x20
	0x01E0ADA4 RET
	0x01E0ADA8 MOVZ W8, 0x1
	0x01E0ADAC MOV X1, X31
	0x01E0ADB0 STR W8, [X0 + 0x40]
	0x01E0ADB4 B 0x31CD6DC
	0x01E0ADB8 SUB X31, X31, 0x30
	0x01E0ADBC STR X30, [X31 + 0x10]
	0x01E0ADC0 STP X20, X19, [X31 + 0x20]
	0x01E0ADC4 ADRP X20, 0x25CE000
	0x01E0ADC8 ADRP X19, 0x22EF000
	0x01E0ADCC LDRB W8, [X20 + 0xDBF]
	0x01E0ADD0 LDR X19, [X19 + 0xC88]
	0x01E0ADD4 TBNZ X8, 0x0, 0x1E0ADEC
	0x01E0ADD8 ADRP X0, 0x22EF000
	0x01E0ADDC LDR X0, [X0 + 0xC88]
	0x01E0ADE0 BL 0x1C16CF4
	0x01E0ADE4 MOVZ W8, 0x1
	0x01E0ADE8 STRB W8, [X20 + 0xDBF]
	0x01E0ADEC LDR X0, [X19]
	0x01E0ADF0 ADD X1, X31, 0x0
	0x01E0ADF4 MOV X2, X31
	0x01E0ADF8 STP X31, X31, [X31]
	0x01E0ADFC BL 0x3C26394
	0x01E0AE00 TBZ X0, 0x0, 0x1E0AE10
	0x01E0AE04 LDP S0, S1, [X31]
	0x01E0AE08 LDP S2, S3, [X31 + 0x8]
	0x01E0AE0C B 0x1E0AE20
	0x01E0AE10 FMOV S1, W31
	0x01E0AE14 FMOV S0, 1
	0x01E0AE18 FMOV S2, W31
	0x01E0AE1C FMOV S3, 1
	0x01E0AE20 LDP X20, X19, [X31 + 0x20]
	0x01E0AE24 LDR X30, [X31 + 0x10]
	0x01E0AE28 ADD X31, X31, 0x30
	0x01E0AE2C RET
	0x01E0AE30 MOV W0, W31
	0x01E0AE34 RET
	0x01E0AE38 STP X30, X23, [X31 - 0x30]!
	0x01E0AE3C STP X22, X21, [X31 + 0x10]
	0x01E0AE40 STP X20, X19, [X31 + 0x20]
	0x01E0AE44 ADRP X21, 0x25CE000
	0x01E0AE48 ADRP X23, 0x22E9000
	0x01E0AE4C LDRB W8, [X21 + 0xDC0]
	0x01E0AE50 LDR X23, [X23 + 0x598]
	0x01E0AE54 MOV X19, X1
	0x01E0AE58 MOV X20, X0
	0x01E0AE5C TBNZ X8, 0x0, 0x1E0AE74
	0x01E0AE60 ADRP X0, 0x22E9000
	0x01E0AE64 LDR X0, [X0 + 0x598]
	0x01E0AE68 BL 0x1C16CF4
	0x01E0AE6C MOVZ W8, 0x1
	0x01E0AE70 STRB W8, [X21 + 0xDC0]
	0x01E0AE74 MOV X22, X20
	0x01E0AE78 LDR X21, [X22 + 0x18]!
	0x01E0AE7C LDR X0, [X23]
	0x01E0AE80 LDR W8, [X0 + 0xE0]
	0x01E0AE84 CBNZ W8, 0x1E0AE8C
	0x01E0AE88 BL 0x1C16DFC
	0x01E0AE8C MOV X0, X21
	0x01E0AE90 MOV X1, X19
	0x01E0AE94 MOV X2, X31
	0x01E0AE98 BL 0x3C3883C
	0x01E0AE9C ADD X9, X20, 0x20
	0x01E0AEA0 TBNZ X0, 0x0, 0x1E0AED8
	0x01E0AEA4 LDR X0, [X23]
	0x01E0AEA8 LDR X20, [X9]
	0x01E0AEAC LDR W8, [X0 + 0xE0]
	0x01E0AEB0 CBNZ W8, 0x1E0AEB8
	0x01E0AEB4 BL 0x1C16DFC
	0x01E0AEB8 MOV X0, X20
	0x01E0AEBC MOV X1, X19
	0x01E0AEC0 MOV X2, X31
	0x01E0AEC4 BL 0x3C3883C
	0x01E0AEC8 MOV W8, W0
	0x01E0AECC MOV X0, X31
	0x01E0AED0 MOV X9, X22
	0x01E0AED4 TBZ X8, 0x0, 0x1E0AEDC
	0x01E0AED8 LDR X0, [X9]
	0x01E0AEDC LDP X20, X19, [X31 + 0x20]
	0x01E0AEE0 LDP X22, X21, [X31 + 0x10]
	0x01E0AEE4 LDP X30, X23, [X31], #0x30
	0x01E0AEE8 RET
	0x01E0AEEC MOV X1, X31
	0x01E0AEF0 B 0x31CD144
	0x01E0AEF4 STR X30, [X31 - 0x20]!
	0x01E0AEF8 STP X20, X19, [X31 + 0x10]
	0x01E0AEFC ADRP X20, 0x25CE000
	0x01E0AF00 LDRB W8, [X20 + 0xDC1]
	0x01E0AF04 MOV X19, X0
	0x01E0AF08 TBNZ X8, 0x0, 0x1E0AF2C
	0x01E0AF0C ADRP X0, 0x22EF000
	0x01E0AF10 LDR X0, [X0 + 0xCA0]
	0x01E0AF14 BL 0x1C16CF4
	0x01E0AF18 ADRP X0, 0x22EF000
	0x01E0AF1C LDR X0, [X0 + 0xCA8]
	0x01E0AF20 BL 0x1C16CF4
	0x01E0AF24 MOVZ W8, 0x1
	0x01E0AF28 STRB W8, [X20 + 0xDC1]
	0x01E0AF2C LDR X19, [X19 + 0x18]
	0x01E0AF30 CBZ X19, 0x1E0AF64
	0x01E0AF34 LDR W1, [X19 + 0x18]
	0x01E0AF38 ADRP X20, 0x22EF000
	0x01E0AF3C LDR X20, [X20 + 0xCA8]
	0x01E0AF40 MOV W0, W31
	0x01E0AF44 MOV X2, X31
	0x01E0AF48 BL 0x3C309A8
	0x01E0AF4C LDR X2, [X20]
	0x01E0AF50 MOV W1, W0
	0x01E0AF54 MOV X0, X19
	0x01E0AF58 LDP X20, X19, [X31 + 0x10]
	0x01E0AF5C LDR X30, [X31], #0x20
	0x01E0AF60 B 0x301BCCC
	0x01E0AF64 BL 0x1C16F20
	0x01E0AF68 STR X30, [X31 - 0x30]!
	0x01E0AF6C STP X22, X21, [X31 + 0x10]
	0x01E0AF70 STP X20, X19, [X31 + 0x20]
	0x01E0AF74 ADRP X21, 0x25CE000
	0x01E0AF78 ADRP X22, 0x22EF000
	0x01E0AF7C ADRP X20, 0x22EF000
	0x01E0AF80 LDRB W8, [X21 + 0xDC2]
	0x01E0AF84 LDR X22, [X22 + 0x548]
	0x01E0AF88 LDR X20, [X20 + 0x550]
	0x01E0AF8C MOV X19, X0
	0x01E0AF90 TBNZ X8, 0x0, 0x1E0AFB4
	0x01E0AF94 ADRP X0, 0x22EF000
	0x01E0AF98 LDR X0, [X0 + 0x550]
	0x01E0AF9C BL 0x1C16CF4
	0x01E0AFA0 ADRP X0, 0x22EF000
	0x01E0AFA4 LDR X0, [X0 + 0x548]
	0x01E0AFA8 BL 0x1C16CF4
	0x01E0AFAC MOVZ W8, 0x1
	0x01E0AFB0 STRB W8, [X21 + 0xDC2]
	0x01E0AFB4 LDR X0, [X22]
	0x01E0AFB8 BL 0x1C16F10
	0x01E0AFBC LDR X1, [X20]
	0x01E0AFC0 MOV X20, X0
	0x01E0AFC4 BL 0x301B7C4
	0x01E0AFC8 STR X20, [X19 + 0x18]
	0x01E0AFCC MOV X0, X19
	0x01E0AFD0 LDP X20, X19, [X31 + 0x20]
	0x01E0AFD4 LDP X22, X21, [X31 + 0x10]
	0x01E0AFD8 MOV X1, X31
	0x01E0AFDC LDR X30, [X31], #0x30
	0x01E0AFE0 B 0x3C36D2C
	0x01E0AFE4 MOV X1, X31
	0x01E0AFE8 B 0x31CD6DC
	0x01E0AFEC SUB X31, X31, 0x40
	0x01E0AFF0 STP X30, X21, [X31 + 0x20]
	0x01E0AFF4 STP X20, X19, [X31 + 0x30]
	0x01E0AFF8 ADRP X21, 0x25CE000
	0x01E0AFFC LDRB W8, [X21 + 0xDC3]
	0x01E0B000 MOV W19, W1
	0x01E0B004 MOV X20, X0
	0x01E0B008 TBNZ X8, 0x0, 0x1E0B02C
	0x01E0B00C ADRP X0, 0x22EE000
	0x01E0B010 LDR X0, [X0 + 0xCB0]
	0x01E0B014 BL 0x1C16CF4
	0x01E0B018 ADRP X0, 0x22EE000
	0x01E0B01C LDR X0, [X0 + 0xCB8]
	0x01E0B020 BL 0x1C16CF4
	0x01E0B024 MOVZ W8, 0x1
	0x01E0B028 STRB W8, [X21 + 0xDC3]
	0x01E0B02C CMP W19, 0x5
	0x01E0B030 B.HI 0x1E0B2B4
	0x01E0B034 ADRP X9, 0xFFFFFFFFFED22000
	0x01E0B038 MOV W8, W19
	0x01E0B03C ADD X9, X9, 0x988
	0x01E0B040 ADR X10, 0x10
	0x01E0B044 LDRB W11, [X9, X8, LSL]
	0x01E0B048 ADD X10, X10, X11, 0x2, LSL
	0x01E0B04C BR X10
	0x01E0B050 LDR X20, [X20 + 0x18]
	0x01E0B054 CBZ X20, 0x1E0B194
	0x01E0B058 LDR W1, [X20 + 0x18]
	0x01E0B05C MOV W0, W31
	0x01E0B060 MOV X2, X31
	0x01E0B064 BL 0x3C309A8
	0x01E0B068 MOV W1, W0
	0x01E0B06C ADRP X8, 0x22EE000
	0x01E0B070 LDR X8, [X8 + 0xCB8]
	0x01E0B074 LDR X2, [X8]
	0x01E0B078 MOV X0, X20
	0x01E0B07C BL 0x301BCCC
	0x01E0B080 B 0x1E0B2B8
	0x01E0B084 LDR X20, [X20 + 0x38]
	0x01E0B088 CBZ X20, 0x1E0B188
	0x01E0B08C LDR W1, [X20 + 0x18]
	0x01E0B090 MOV W0, W31
	0x01E0B094 MOV X2, X31
	0x01E0B098 BL 0x3C309A8
	0x01E0B09C MOV W1, W0
	0x01E0B0A0 ADRP X8, 0x22EE000
	0x01E0B0A4 LDR X8, [X8 + 0xCB8]
	0x01E0B0A8 LDR X2, [X8]
	0x01E0B0AC MOV X0, X20
	0x01E0B0B0 BL 0x301BCCC
	0x01E0B0B4 B 0x1E0B2B8
	0x01E0B0B8 LDR X20, [X20 + 0x28]
	0x01E0B0BC CBZ X20, 0x1E0B18C
	0x01E0B0C0 LDR W1, [X20 + 0x18]
	0x01E0B0C4 MOV W0, W31
	0x01E0B0C8 MOV X2, X31
	0x01E0B0CC BL 0x3C309A8
	0x01E0B0D0 MOV W1, W0
	0x01E0B0D4 ADRP X8, 0x22EE000
	0x01E0B0D8 LDR X8, [X8 + 0xCB8]
	0x01E0B0DC LDR X2, [X8]
	0x01E0B0E0 MOV X0, X20
	0x01E0B0E4 BL 0x301BCCC
	0x01E0B0E8 B 0x1E0B2B8
	0x01E0B0EC LDR X20, [X20 + 0x30]
	0x01E0B0F0 CBZ X20, 0x1E0B190
	0x01E0B0F4 LDR W1, [X20 + 0x18]
	0x01E0B0F8 MOV W0, W31
	0x01E0B0FC MOV X2, X31
	0x01E0B100 BL 0x3C309A8
	0x01E0B104 MOV W1, W0
	0x01E0B108 ADRP X8, 0x22EE000
	0x01E0B10C LDR X8, [X8 + 0xCB8]
	0x01E0B110 LDR X2, [X8]
	0x01E0B114 MOV X0, X20
	0x01E0B118 BL 0x301BCCC
	0x01E0B11C B 0x1E0B2B8
	0x01E0B120 LDR X20, [X20 + 0x20]
	0x01E0B124 CBZ X20, 0x1E0B198
	0x01E0B128 LDR W1, [X20 + 0x18]
	0x01E0B12C MOV W0, W31
	0x01E0B130 MOV X2, X31
	0x01E0B134 BL 0x3C309A8
	0x01E0B138 MOV W1, W0
	0x01E0B13C ADRP X8, 0x22EE000
	0x01E0B140 LDR X8, [X8 + 0xCB8]
	0x01E0B144 LDR X2, [X8]
	0x01E0B148 MOV X0, X20
	0x01E0B14C BL 0x301BCCC
	0x01E0B150 B 0x1E0B2B8
	0x01E0B154 LDR X20, [X20 + 0x40]
	0x01E0B158 CBZ X20, 0x1E0B19C
	0x01E0B15C LDR W1, [X20 + 0x18]
	0x01E0B160 MOV W0, W31
	0x01E0B164 MOV X2, X31
	0x01E0B168 BL 0x3C309A8
	0x01E0B16C MOV W1, W0
	0x01E0B170 ADRP X8, 0x22EE000
	0x01E0B174 LDR X8, [X8 + 0xCB8]
	0x01E0B178 LDR X2, [X8]
	0x01E0B17C MOV X0, X20
	0x01E0B180 BL 0x301BCCC
	0x01E0B184 B 0x1E0B2B8
	0x01E0B188 BL 0x1C16F20
	0x01E0B18C BL 0x1C16F20
	0x01E0B190 BL 0x1C16F20
	0x01E0B194 BL 0x1C16F20
	0x01E0B198 BL 0x1C16F20
	0x01E0B19C BL 0x1C16F20
	0x01E0B1A0 B 0x1E0B1E4
	0x01E0B1A4 B 0x1E0B1E4
	0x01E0B1A8 B 0x1E0B1E4
	0x01E0B1AC B 0x1E0B1E4
	0x01E0B1B0 B 0x1E0B1E4
	0x01E0B1B4 B 0x1E0B1E4
	0x01E0B1B8 B 0x1E0B1E4
	0x01E0B1BC B 0x1E0B1E4
	0x01E0B1C0 B 0x1E0B1E4
	0x01E0B1C4 B 0x1E0B1E4
	0x01E0B1C8 B 0x1E0B1E4
	0x01E0B1CC B 0x1E0B1E4
	0x01E0B1D0 B 0x1E0B1E4
	0x01E0B1D4 B 0x1E0B1E4
	0x01E0B1D8 B 0x1E0B1E4
	0x01E0B1DC B 0x1E0B1E4
	0x01E0B1E0 B 0x1E0B1E4
	0x01E0B1E4 MOV X20, X0
	0x01E0B1E8 CMP W1, 0x1
	0x01E0B1EC B.NE 0x1E0B2F0
	0x01E0B1F0 MOV X0, X20
	0x01E0B1F4 BL 0x3EB1AD0
	0x01E0B1F8 MOV X20, X0
	0x01E0B1FC ADRP X0, 0x22EE000
	0x01E0B200 LDR X0, [X0 + 0xCC0]
	0x01E0B204 BL 0x1C16D08
	0x01E0B208 LDR X8, [X20]
	0x01E0B20C LDR X1, [X8]
	0x01E0B210 BL 0x1C17270
	0x01E0B214 TBZ X0, 0x0, 0x1E0B2C8
	0x01E0B218 BL 0x3EB1AE0
	0x01E0B21C ADRP X0, 0x22EE000
	0x01E0B220 LDR X0, [X0 + 0xCC8]
	0x01E0B224 BL 0x1C16D08
	0x01E0B228 MOVN X8, 0x0
	0x01E0B22C STP X0, X8, [X31 + 0x8]
	0x01E0B230 ADD X0, X31, 0x8
	0x01E0B234 MOV X1, X31
	0x01E0B238 STR W19, [X31 + 0x18]
	0x01E0B23C BL 0x33B162C
	0x01E0B240 MOV X19, X0
	0x01E0B244 ADRP X0, 0x22EE000
	0x01E0B248 LDR X0, [X0 + 0xCD0]
	0x01E0B24C BL 0x1C16D08
	0x01E0B250 MOV X1, X19
	0x01E0B254 MOV X2, X31
	0x01E0B258 BL 0x321B938
	0x01E0B25C MOV X19, X0
	0x01E0B260 ADRP X0, 0x22E8000
	0x01E0B264 LDR X0, [X0 + 0x788]
	0x01E0B268 BL 0x1C16D08
	0x01E0B26C LDR W8, [X0 + 0xE0]
	0x01E0B270 CBNZ W8, 0x1E0B278
	0x01E0B274 BL 0x1C16DFC
	0x01E0B278 ADRP X0, 0x22EE000
	0x01E0B27C LDR X0, [X0 + 0xCD8]
	0x01E0B280 BL 0x1C16D08
	0x01E0B284 MOV X20, X0
	0x01E0B288 ADRP X0, 0x22EE000
	0x01E0B28C LDR X0, [X0 + 0xCE0]
	0x01E0B290 BL 0x1C16D08
	0x01E0B294 MOV X4, X0
	0x01E0B298 MOVZ W0, 0x20
	0x01E0B29C MOVZ W5, 0x34
	0x01E0B2A0 MOV X1, X19
	0x01E0B2A4 MOV X2, X31
	0x01E0B2A8 MOV X3, X20
	0x01E0B2AC MOV X6, X31
	0x01E0B2B0 BL 0x35C25CC
	0x01E0B2B4 MOV X0, X31
	0x01E0B2B8 LDP X20, X19, [X31 + 0x30]
	0x01E0B2BC LDP X30, X21, [X31 + 0x20]
	0x01E0B2C0 ADD X31, X31, 0x40
	0x01E0B2C4 RET
	0x01E0B2C8 MOVZ W0, 0x8
	0x01E0B2CC BL 0x3EB1AF0
	0x01E0B2D0 LDR X8, [X20]
	0x01E0B2D4 STR X8, [X0]
	0x01E0B2D8 ADRP X1, 0x20A9000
	0x01E0B2DC ADD X1, X1, 0xE58
	0x01E0B2E0 MOV X2, X31
	0x01E0B2E4 BL 0x3EB1B00
	0x01E0B2E8 MOV X20, X0
	0x01E0B2EC BL 0x3EB1AE0
	0x01E0B2F0 MOV X0, X20
	0x01E0B2F4 BL 0x1D2C690
	0x01E0B2F8 BL 0x1990590
	0x01E0B2FC STR X30, [X31 - 0x30]!
	0x01E0B300 STP X22, X21, [X31 + 0x10]
	0x01E0B304 STP X20, X19, [X31 + 0x20]
	0x01E0B308 ADRP X20, 0x25CD000
	0x01E0B30C ADRP X22, 0x22EE000
	0x01E0B310 ADRP X21, 0x22EE000
	0x01E0B314 LDRB W8, [X20 + 0xDC4]
	0x01E0B318 LDR X22, [X22 + 0xCE8]
	0x01E0B31C LDR X21, [X21 + 0xCF0]
	0x01E0B320 MOV X19, X0
	0x01E0B324 TBNZ X8, 0x0, 0x1E0B348
	0x01E0B328 ADRP X0, 0x22EE000
	0x01E0B32C LDR X0, [X0 + 0xCF0]
	0x01E0B330 BL 0x1C16CF4
	0x01E0B334 ADRP X0, 0x22EE000
	0x01E0B338 LDR X0, [X0 + 0xCE8]
	0x01E0B33C BL 0x1C16CF4
	0x01E0B340 MOVZ W8, 0x1
	0x01E0B344 STRB W8, [X20 + 0xDC4]

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+224], X29
	003 Move [X31+232], X30
	004 Move [X31+240], X28
	005 Move [X31+248], X27
	006 Move [X31+256], X26
	007 Move [X31+264], X25
	008 Move [X31+272], X24
	009 Move [X31+280], X23
	010 Move [X31+288], X22
	011 Move [X31+296], X21
	012 Move [X31+304], X20
	013 Move [X31+312], X19
	014 Move X23, 0x25CF000
	015 Move X22, 0x22F0000
	016 Move X19, 0x22F0000
	017 Move X20, 0x22F0000
	018 Move X21, 0x22EA000
	019 Move W8, [X23+3507]
	020 Move X22, [X22+3032]
	021 Move X19, [X19+3040]
	022 Move X20, [X20+2928]
	023 Move X21, [X21+1728]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {93}
	028 Move X0, 0x22F0000
	029 Move X0, [X0+2936]
	030 Call 0x1C17CF4
	031 Move X0, 0x22F0000
	032 Move X0, [X0+2944]
	033 Call 0x1C17CF4
	034 Move X0, 0x22F0000
	035 Move X0, [X0+3048]
	036 Call 0x1C17CF4
	037 Move X0, 0x22F0000
	038 Move X0, [X0+3040]
	039 Call 0x1C17CF4
	040 Move X0, 0x22F0000
	041 Move X0, [X0+3032]
	042 Call 0x1C17CF4
	043 Move X0, 0x22F0000
	044 Move X0, [X0+3056]
	045 Call 0x1C17CF4
	046 Move X0, 0x22F0000
	047 Move X0, [X0+2928]
	048 Call 0x1C17CF4
	049 Move X0, 0x22F0000
	050 Move X0, [X0+2952]
	051 Call 0x1C17CF4
	052 Move X0, 0x22F0000
	053 Move X0, [X0+2920]
	054 Call 0x1C17CF4
	055 Move X0, 0x22F0000
	056 Move X0, [X0+2912]
	057 Call 0x1C17CF4
	058 Move X0, 0x22F0000
	059 Move X0, [X0+2960]
	060 Call 0x1C17CF4
	061 Move X0, 0x22F0000
	062 Move X0, [X0+3064]
	063 Call 0x1C17CF4
	064 Move X0, 0x22F0000
	065 Move X0, [X0+2968]
	066 Call 0x1C17CF4
	067 Move X0, 0x22F0000
	068 Move X0, [X0+3072]
	069 Call 0x1C17CF4
	070 Move X0, 0x22F0000
	071 Move X0, [X0+2976]
	072 Call 0x1C17CF4
	073 Move X0, 0x22F0000
	074 Move X0, [X0+2984]
	075 Call 0x1C17CF4
	076 Move X0, 0x22EA000
	077 Move X0, [X0+1728]
	078 Call 0x1C17CF4
	079 Move X0, 0x22F0000
	080 Move X0, [X0+2992]
	081 Call 0x1C17CF4
	082 Move X0, 0x22F0000
	083 Move X0, [X0+3080]
	084 Call 0x1C17CF4
	085 Move X0, 0x22F0000
	086 Move X0, [X0+3088]
	087 Call 0x1C17CF4
	088 Move X0, 0x22F0000
	089 Move X0, [X0+3096]
	090 Call 0x1C17CF4
	091 Move W8, 1
	092 Move [X23+3507], W8
	093 Move X26, 0x22F0000
	094 Move X25, 0x22F0000
	095 Move X26, [X26+2912]
	096 Move X25, [X25+2920]
	097 Move X0, [X22]
	098 Move X29, 0x22F0000
	099 Move X24, 0x22F0000
	100 Move X22, 0x22F0000
	101 Move X29, [X29+3056]
	102 Move X24, [X24+3088]
	103 Move X22, [X22+2992]
	104 Call 0x1C17F10
	105 Move X1, [X19]
	106 Move X19, X0
	107 Call Dictionary`2<Object, Object>..ctor, X0
	108 Move X0, [X21]
	109 Move X20, [X20]
	110 Move W8, [X0+224]
	111 Compare W8, 0
	112 JumpIfNotEqual {114}
	113 Call 0x1C17DFC
	114 Move X0, X20
	115 Move X1, X31
	116 Call Type.GetTypeFromHandle, X0
	117 Move X8, [X26]
	118 Move X20, X0
	119 Move X0, X8
	120 Call 0x1C17F10
	121 Move X1, [X25]
	122 Move X21, X0
	123 Call List`1<ValueTuple`2<Object, Object>>..ctor, X0
	124 Move X0, [X29]
	125 Move X1, X31
	126 Call Type.GetTypeFromHandle, X0
	127 Move X1, [X24]
	128 Move X3, [X22]
	129 Move X2, X0
	130 Add X0, X31, 208
	131 Move [X31+208], X31
	132 Move [X31+216], X31
	133 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	134 Compare X21, 0
	135 JumpIfEqual {714}
	136 Move X27, 0x22F0000
	137 Move X27, [X27+2952]
	138 Move W10, [X21+28]
	139 Move X1, [X31+208]
	140 Move X2, [X31+216]
	141 Move X8, [X21+16]
	142 Move X9, [X27]
	143 Add W10, W10, 1
	144 Move [X21+28], W10
	145 Compare X8, 0
	146 JumpIfEqual {714}
	147 NotImplemented "Instruction LDRSW not yet implemented."
	148 Move W11, [X8+24]
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Add W9, W10, 1
	151 Add X8, X8, X10
	152 Move [X21+24], W9
	153 Move [X8+32], X1
	154 Move [X8+40], X2
	155 Move X8, [X9+32]
	156 Move X0, X21
	157 Move X8, [X8+192]
	158 Move X3, [X8+112]
	159 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	160 Compare X19, 0
	161 JumpIfEqual {714}
	162 Move X28, 0x22F0000
	163 Move X28, [X28+3048]
	164 Move X23, 0x22F0000
	165 Move X0, X19
	166 Move X1, X20
	167 Move X3, [X28]
	168 Move X23, [X23+2936]
	169 Move X2, X21
	170 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	171 Move X0, [X23]
	172 Move X1, X31
	173 Call Type.GetTypeFromHandle, X0
	174 Move X8, [X26]
	175 Move X20, X0
	176 Move X0, X8
	177 Call 0x1C17F10
	178 Move X1, [X25]
	179 Move X21, X0
	180 Call List`1<ValueTuple`2<Object, Object>>..ctor, X0
	181 Move X0, [X29]
	182 Move X1, X31
	183 Call Type.GetTypeFromHandle, X0
	184 Move X1, [X24]
	185 Move X3, [X22]
	186 Move X2, X0
	187 Add X0, X31, 192
	188 Move [X31+192], X31
	189 Move [X31+200], X31
	190 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	191 Compare X21, 0
	192 JumpIfEqual {714}
	193 Move W10, [X21+28]
	194 Move X1, [X31+192]
	195 Move X2, [X31+200]
	196 Move X8, [X21+16]
	197 Move X9, [X27]
	198 Add W10, W10, 1
	199 Move [X21+28], W10
	200 Compare X8, 0
	201 JumpIfEqual {714}
	202 NotImplemented "Instruction LDRSW not yet implemented."
	203 Move W11, [X8+24]
	204 Move X29, 0x22F0000
	205 Move X24, 0x22F0000
	206 Move X29, [X29+3072]
	207 Move X24, [X24+3080]
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Add W9, W10, 1
	210 Add X8, X8, X10
	211 Move [X21+24], W9
	212 Move [X8+32], X1
	213 Move [X8+40], X2
	214 Move X8, [X9+32]
	215 Move X0, X21
	216 Move X8, [X8+192]
	217 Move X3, [X8+112]
	218 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	219 Move X0, [X29]
	220 Move X1, X31
	221 Call Type.GetTypeFromHandle, X0
	222 Move X1, [X24]
	223 Move X3, [X22]
	224 Move X2, X0
	225 Add X0, X31, 176
	226 Move [X31+176], X31
	227 Move [X31+184], X31
	228 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	229 Move W10, [X21+28]
	230 Move X1, [X31+176]
	231 Move X2, [X31+184]
	232 Move X8, [X21+16]
	233 Move X9, [X27]
	234 Add W10, W10, 1
	235 Move [X21+28], W10
	236 Compare X8, 0
	237 JumpIfEqual {714}
	238 NotImplemented "Instruction LDRSW not yet implemented."
	239 Move W11, [X8+24]
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Add W9, W10, 1
	242 Add X8, X8, X10
	243 Move [X21+24], W9
	244 Move [X8+32], X1
	245 Move [X8+40], X2
	246 Move X8, [X9+32]
	247 Move X0, X21
	248 Move X8, [X8+192]
	249 Move X3, [X8+112]
	250 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	251 Move X8, 0x22F0000
	252 Move X8, [X8+3064]
	253 Move X1, X31
	254 Move X0, [X8]
	255 Call Type.GetTypeFromHandle, X0
	256 Move X8, 0x22F0000
	257 Move X8, [X8+3096]
	258 Move X3, [X22]
	259 Move X2, X0
	260 Add X0, X31, 160
	261 Move X1, [X8]
	262 Move [X31+160], X31
	263 Move [X31+168], X31
	264 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	265 Move W10, [X21+28]
	266 Move X1, [X31+160]
	267 Move X2, [X31+168]
	268 Move X8, [X21+16]
	269 Move X9, [X27]
	270 Add W10, W10, 1
	271 Move [X21+28], W10
	272 Compare X8, 0
	273 JumpIfEqual {714}
	274 NotImplemented "Instruction LDRSW not yet implemented."
	275 Move W11, [X8+24]
	276 Move X23, 0x22F0000
	277 Move X23, [X23+2944]
	278 NotImplemented "Instruction CMP not yet implemented."
	279 Add W9, W10, 1
	280 Add X8, X8, X10
	281 Move [X21+24], W9
	282 Move [X8+32], X1
	283 Move [X8+40], X2
	284 Move X8, [X9+32]
	285 Move X0, X21
	286 Move X8, [X8+192]
	287 Move X3, [X8+112]
	288 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	289 Move X3, [X28]
	290 Move X0, X19
	291 Move X1, X20
	292 Move X2, X21
	293 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	294 Move X0, [X23]
	295 Move X1, X31
	296 Call Type.GetTypeFromHandle, X0
	297 Move X8, [X26]
	298 Move X20, X0
	299 Move X0, X8
	300 Call 0x1C17F10
	301 Move X1, [X25]
	302 Move X21, X0
	303 Call List`1<ValueTuple`2<Object, Object>>..ctor, X0
	304 Move X8, 0x22F0000
	305 Move X8, [X8+3056]
	306 Move X1, X31
	307 Move X0, [X8]
	308 Call Type.GetTypeFromHandle, X0
	309 Move X8, 0x22F0000
	310 Move X8, [X8+3088]
	311 Move X3, [X22]
	312 Move X2, X0
	313 Add X0, X31, 144
	314 Move X1, [X8]
	315 Move [X31+144], X31
	316 Move [X31+152], X31
	317 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	318 Compare X21, 0
	319 JumpIfEqual {714}
	320 Move W10, [X21+28]
	321 Move X1, [X31+144]
	322 Move X2, [X31+152]
	323 Move X8, [X21+16]
	324 Move X9, [X27]
	325 Add W10, W10, 1
	326 Move [X21+28], W10
	327 Compare X8, 0
	328 JumpIfEqual {714}
	329 NotImplemented "Instruction LDRSW not yet implemented."
	330 Move W11, [X8+24]
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Add W9, W10, 1
	333 Add X8, X8, X10
	334 Move [X21+24], W9
	335 Move [X8+32], X1
	336 Move [X8+40], X2
	337 Move X8, [X9+32]
	338 Move X0, X21
	339 Move X8, [X8+192]
	340 Move X3, [X8+112]
	341 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	342 Move X0, [X29]
	343 Move X1, X31
	344 Call Type.GetTypeFromHandle, X0
	345 Move X1, [X24]
	346 Move X3, [X22]
	347 Move X2, X0
	348 Add X0, X31, 128
	349 Move [X31+128], X31
	350 Move [X31+136], X31
	351 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	352 Move W10, [X21+28]
	353 Move X1, [X31+128]
	354 Move X2, [X31+136]
	355 Move X8, [X21+16]
	356 Move X9, [X27]
	357 Add W10, W10, 1
	358 Move [X21+28], W10
	359 Compare X8, 0
	360 JumpIfEqual {714}
	361 NotImplemented "Instruction LDRSW not yet implemented."
	362 Move W11, [X8+24]
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Add W9, W10, 1
	365 Add X8, X8, X10
	366 Move [X21+24], W9
	367 Move [X8+32], X1
	368 Move [X8+40], X2
	369 Move X8, [X9+32]
	370 Move X0, X21
	371 Move X8, [X8+192]
	372 Move X3, [X8+112]
	373 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	374 Move X8, 0x22F0000
	375 Move X8, [X8+3064]
	376 Move X1, X31
	377 Move X0, [X8]
	378 Call Type.GetTypeFromHandle, X0
	379 Move X8, 0x22F0000
	380 Move X8, [X8+3096]
	381 Move X3, [X22]
	382 Move X2, X0
	383 Add X0, X31, 112
	384 Move X1, [X8]
	385 Move [X31+112], X31
	386 Move [X31+120], X31
	387 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	388 Move W10, [X21+28]
	389 Move X1, [X31+112]
	390 Move X2, [X31+120]
	391 Move X8, [X21+16]
	392 Move X9, [X27]
	393 Add W10, W10, 1
	394 Move [X21+28], W10
	395 Compare X8, 0
	396 JumpIfEqual {714}
	397 NotImplemented "Instruction LDRSW not yet implemented."
	398 Move W11, [X8+24]
	399 Move X23, 0x22F0000
	400 Move X23, [X23+2976]
	401 NotImplemented "Instruction CMP not yet implemented."
	402 Add W9, W10, 1
	403 Add X8, X8, X10
	404 Move [X21+24], W9
	405 Move [X8+32], X1
	406 Move [X8+40], X2
	407 Move X8, [X9+32]
	408 Move X0, X21
	409 Move X8, [X8+192]
	410 Move X3, [X8+112]
	411 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	412 Move X3, [X28]
	413 Move X0, X19
	414 Move X1, X20
	415 Move X2, X21
	416 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	417 Move X0, [X23]
	418 Move X1, X31
	419 Call Type.GetTypeFromHandle, X0
	420 Move X8, [X26]
	421 Move X20, X0
	422 Move X0, X8
	423 Call 0x1C17F10
	424 Move X1, [X25]
	425 Move X21, X0
	426 Call List`1<ValueTuple`2<Object, Object>>..ctor, X0
	427 Move X8, 0x22F0000
	428 Move X8, [X8+3056]
	429 Move X1, X31
	430 Move X0, [X8]
	431 Call Type.GetTypeFromHandle, X0
	432 Move X8, 0x22F0000
	433 Move X8, [X8+3088]
	434 Move X3, [X22]
	435 Move X2, X0
	436 Add X0, X31, 96
	437 Move X1, [X8]
	438 Move [X31+96], X31
	439 Move [X31+104], X31
	440 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	441 Compare X21, 0
	442 JumpIfEqual {714}
	443 Move W10, [X21+28]
	444 Move X1, [X31+96]
	445 Move X2, [X31+104]
	446 Move X8, [X21+16]
	447 Move X9, [X27]
	448 Add W10, W10, 1
	449 Move [X21+28], W10
	450 Compare X8, 0
	451 JumpIfEqual {714}
	452 NotImplemented "Instruction LDRSW not yet implemented."
	453 Move W11, [X8+24]
	454 NotImplemented "Instruction CMP not yet implemented."
	455 Add W9, W10, 1
	456 Add X8, X8, X10
	457 Move [X21+24], W9
	458 Move [X8+32], X1
	459 Move [X8+40], X2
	460 Move X8, [X9+32]
	461 Move X0, X21
	462 Move X8, [X8+192]
	463 Move X3, [X8+112]
	464 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	465 Move X0, [X29]
	466 Move X1, X31
	467 Call Type.GetTypeFromHandle, X0
	468 Move X1, [X24]
	469 Move X3, [X22]
	470 Move X2, X0
	471 Add X0, X31, 80
	472 Move [X31+80], X31
	473 Move [X31+88], X31
	474 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	475 Move W10, [X21+28]
	476 Move X1, [X31+80]
	477 Move X2, [X31+88]
	478 Move X8, [X21+16]
	479 Move X9, [X27]
	480 Add W10, W10, 1
	481 Move [X21+28], W10
	482 Compare X8, 0
	483 JumpIfEqual {714}
	484 NotImplemented "Instruction LDRSW not yet implemented."
	485 Move W11, [X8+24]
	486 NotImplemented "Instruction CMP not yet implemented."
	487 Add W9, W10, 1
	488 Add X8, X8, X10
	489 Move [X21+24], W9
	490 Move [X8+32], X1
	491 Move [X8+40], X2
	492 Move X8, [X9+32]
	493 Move X0, X21
	494 Move X8, [X8+192]
	495 Move X3, [X8+112]
	496 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	497 Move X8, 0x22EF000
	498 Move X8, [X8+3064]
	499 Move X1, X31
	500 Move X0, [X8]
	501 Call Type.GetTypeFromHandle, X0
	502 Move X8, 0x22EF000
	503 Move X8, [X8+3096]
	504 Move X3, [X22]
	505 Move X2, X0
	506 Add X0, X31, 64
	507 Move X1, [X8]
	508 Move [X31+64], X31
	509 Move [X31+72], X31
	510 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	511 Move W10, [X21+28]
	512 Move X1, [X31+64]
	513 Move X2, [X31+72]
	514 Move X8, [X21+16]
	515 Move X9, [X27]
	516 Add W10, W10, 1
	517 Move [X21+28], W10
	518 Compare X8, 0
	519 JumpIfEqual {714}
	520 NotImplemented "Instruction LDRSW not yet implemented."
	521 Move W11, [X8+24]
	522 Move X23, 0x22EF000
	523 Move X23, [X23+2968]
	524 NotImplemented "Instruction CMP not yet implemented."
	525 Add W9, W10, 1
	526 Add X8, X8, X10
	527 Move [X21+24], W9
	528 Move [X8+32], X1
	529 Move [X8+40], X2
	530 Move X8, [X9+32]
	531 Move X0, X21
	532 Move X8, [X8+192]
	533 Move X3, [X8+112]
	534 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	535 Move X3, [X28]
	536 Move X0, X19
	537 Move X1, X20
	538 Move X2, X21
	539 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	540 Move X0, [X23]
	541 Move X1, X31
	542 Call Type.GetTypeFromHandle, X0
	543 Move X8, [X26]
	544 Move X20, X0
	545 Move X0, X8
	546 Call 0x1C17F10
	547 Move X1, [X25]
	548 Move X21, X0
	549 Call List`1<ValueTuple`2<Object, Object>>..ctor, X0
	550 Move X0, [X29]
	551 Move X1, X31
	552 Call Type.GetTypeFromHandle, X0
	553 Move X1, [X24]
	554 Move X3, [X22]
	555 Move X2, X0
	556 Add X0, X31, 48
	557 Move [X31+48], X31
	558 Move [X31+56], X31
	559 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	560 Compare X21, 0
	561 JumpIfEqual {714}
	562 Move W10, [X21+28]
	563 Move X1, [X31+48]
	564 Move X2, [X31+56]
	565 Move X9, [X27]
	566 Move X24, 0x22EF000
	567 Add W10, W10, 1
	568 Move [X21+28], W10
	569 Move X29, 0x22EF000
	570 Move X8, [X21+16]
	571 Move X24, [X24+3088]
	572 Move X29, [X29+3056]
	573 Compare X8, 0
	574 JumpIfEqual {714}
	575 NotImplemented "Instruction LDRSW not yet implemented."
	576 Move W11, [X8+24]
	577 Move X23, 0x22EF000
	578 Move X23, [X23+2960]
	579 NotImplemented "Instruction CMP not yet implemented."
	580 Add W9, W10, 1
	581 Add X8, X8, X10
	582 Move [X21+24], W9
	583 Move [X8+32], X1
	584 Move [X8+40], X2
	585 Move X8, [X9+32]
	586 Move X0, X21
	587 Move X8, [X8+192]
	588 Move X3, [X8+112]
	589 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	590 Move X3, [X28]
	591 Move X0, X19
	592 Move X1, X20
	593 Move X2, X21
	594 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	595 Move X0, [X23]
	596 Move X1, X31
	597 Call Type.GetTypeFromHandle, X0
	598 Move X8, [X26]
	599 Move X20, X0
	600 Move X0, X8
	601 Call 0x1C17F10
	602 Move X1, [X25]
	603 Move X21, X0
	604 Call List`1<ValueTuple`2<Object, Object>>..ctor, X0
	605 Move X8, 0x22EF000
	606 Move X8, [X8+3064]
	607 Move X1, X31
	608 Move X0, [X8]
	609 Call Type.GetTypeFromHandle, X0
	610 Move X8, 0x22EF000
	611 Move X8, [X8+3096]
	612 Move X3, [X22]
	613 Move X2, X0
	614 Add X0, X31, 32
	615 Move X1, [X8]
	616 Move [X31+32], X31
	617 Move [X31+40], X31
	618 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	619 Compare X21, 0
	620 JumpIfEqual {714}
	621 Move W10, [X21+28]
	622 Move X1, [X31+32]
	623 Move X2, [X31+40]
	624 Move X8, [X21+16]
	625 Move X9, [X27]
	626 Add W10, W10, 1
	627 Move [X21+28], W10
	628 Compare X8, 0
	629 JumpIfEqual {714}
	630 NotImplemented "Instruction LDRSW not yet implemented."
	631 Move W11, [X8+24]
	632 Move X23, 0x22EF000
	633 Move X23, [X23+2984]
	634 NotImplemented "Instruction CMP not yet implemented."
	635 Add W9, W10, 1
	636 Add X8, X8, X10
	637 Move [X21+24], W9
	638 Move [X8+32], X1
	639 Move [X8+40], X2
	640 Move X8, [X9+32]
	641 Move X0, X21
	642 Move X8, [X8+192]
	643 Move X3, [X8+112]
	644 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	645 Move X3, [X28]
	646 Move X0, X19
	647 Move X1, X20
	648 Move X2, X21
	649 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	650 Move X0, [X23]
	651 Move X1, X31
	652 Call Type.GetTypeFromHandle, X0
	653 Move X8, [X26]
	654 Move X20, X0
	655 Move X0, X8
	656 Call 0x1C17F10
	657 Move X1, [X25]
	658 Move X21, X0
	659 Call List`1<ValueTuple`2<Object, Object>>..ctor, X0
	660 Move X0, [X29]
	661 Move X1, X31
	662 Call Type.GetTypeFromHandle, X0
	663 Move X1, [X24]
	664 Move X3, [X22]
	665 Move X2, X0
	666 Add X0, X31, 16
	667 Move [X31+16], X31
	668 Move [X31+24], X31
	669 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	670 Compare X21, 0
	671 JumpIfEqual {714}
	672 Move W10, [X21+28]
	673 Move X1, [X31+16]
	674 Move X2, [X31+24]
	675 Move X8, [X21+16]
	676 Move X9, [X27]
	677 Add W10, W10, 1
	678 Move [X21+28], W10
	679 Compare X8, 0
	680 JumpIfEqual {714}
	681 NotImplemented "Instruction LDRSW not yet implemented."
	682 Move W11, [X8+24]
	683 NotImplemented "Instruction CMP not yet implemented."
	684 Add W9, W10, 1
	685 Add X8, X8, X10
	686 Move [X21+24], W9
	687 Move [X8+32], X1
	688 Move [X8+40], X2
	689 Move X8, [X9+32]
	690 Move X0, X21
	691 Move X8, [X8+192]
	692 Move X3, [X8+112]
	693 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	694 Move X3, [X28]
	695 Move X0, X19
	696 Move X1, X20
	697 Move X2, X21
	698 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	699 Move X0, X19
	700 Move X20, [X31+304]
	701 Move X19, [X31+312]
	702 Move X22, [X31+288]
	703 Move X21, [X31+296]
	704 Move X24, [X31+272]
	705 Move X23, [X31+280]
	706 Move X26, [X31+256]
	707 Move X25, [X31+264]
	708 Move X28, [X31+240]
	709 Move X27, [X31+248]
	710 Move X29, [X31+224]
	711 Move X30, [X31+232]
	712 Add X31, X31, 320
	713 Return X0
	714 Call 0x1C17F20

Method: System.Boolean ValidateConnectionRequest(Less3.ForceGraph.ForceNode from, Less3.ForceGraph.ForceNode to, System.Type connectionType)

Disassembly:
	0x01E0B348 LDR X0, [X22]
	0x01E0B34C BL 0x1C16F10
	0x01E0B350 LDR X1, [X21]
	0x01E0B354 MOV X20, X0
	0x01E0B358 BL 0x301B7C4
	0x01E0B35C STR X20, [X19 + 0x18]
	0x01E0B360 LDR X0, [X22]
	0x01E0B364 BL 0x1C16F10
	0x01E0B368 LDR X1, [X21]
	0x01E0B36C MOV X20, X0
	0x01E0B370 BL 0x301B7C4
	0x01E0B374 STR X20, [X19 + 0x20]
	0x01E0B378 LDR X0, [X22]
	0x01E0B37C BL 0x1C16F10
	0x01E0B380 LDR X1, [X21]
	0x01E0B384 MOV X20, X0
	0x01E0B388 BL 0x301B7C4
	0x01E0B38C STR X20, [X19 + 0x28]
	0x01E0B390 LDR X0, [X22]
	0x01E0B394 BL 0x1C16F10
	0x01E0B398 LDR X1, [X21]
	0x01E0B39C MOV X20, X0
	0x01E0B3A0 BL 0x301B7C4
	0x01E0B3A4 STR X20, [X19 + 0x30]
	0x01E0B3A8 LDR X0, [X22]
	0x01E0B3AC BL 0x1C16F10
	0x01E0B3B0 LDR X1, [X21]
	0x01E0B3B4 MOV X20, X0
	0x01E0B3B8 BL 0x301B7C4
	0x01E0B3BC STR X20, [X19 + 0x38]
	0x01E0B3C0 LDR X0, [X22]
	0x01E0B3C4 BL 0x1C16F10
	0x01E0B3C8 LDR X1, [X21]
	0x01E0B3CC MOV X20, X0
	0x01E0B3D0 BL 0x301B7C4
	0x01E0B3D4 STR X20, [X19 + 0x40]
	0x01E0B3D8 MOV X0, X19
	0x01E0B3DC LDP X20, X19, [X31 + 0x20]
	0x01E0B3E0 LDP X22, X21, [X31 + 0x10]
	0x01E0B3E4 MOV X1, X31
	0x01E0B3E8 LDR X30, [X31], #0x30
	0x01E0B3EC B 0x3C36D2C
	0x01E0B3F0 STP X30, X21, [X31 - 0x20]!
	0x01E0B3F4 STP X20, X19, [X31 + 0x10]
	0x01E0B3F8 ADRP X21, 0x25CD000
	0x01E0B3FC ADRP X20, 0x22EE000
	0x01E0B400 LDRB W8, [X21 + 0xDC5]
	0x01E0B404 LDR X20, [X20 + 0xBD0]
	0x01E0B408 MOV X19, X0
	0x01E0B40C TBNZ X8, 0x0, 0x1E0B424
	0x01E0B410 ADRP X0, 0x22EE000
	0x01E0B414 LDR X0, [X0 + 0xBD0]
	0x01E0B418 BL 0x1C16CF4
	0x01E0B41C MOVZ W8, 0x1
	0x01E0B420 STRB W8, [X21 + 0xDC5]
	0x01E0B424 LDR X0, [X19 + 0x38]!
	0x01E0B428 MOV X1, X31
	0x01E0B42C BL 0x32277A8
	0x01E0B430 ANDS W31, W0, 0x1
	0x01E0B434 CSEL X8, X20, X19, NE
	0x01E0B438 LDR X0, [X8]
	0x01E0B43C LDP X20, X19, [X31 + 0x10]
	0x01E0B440 LDP X30, X21, [X31], #0x20
	0x01E0B444 RET
	0x01E0B448 STR X30, [X31 - 0x20]!
	0x01E0B44C STP X20, X19, [X31 + 0x10]
	0x01E0B450 ADRP X20, 0x25CD000
	0x01E0B454 ADRP X19, 0x22EE000
	0x01E0B458 LDRB W8, [X20 + 0xDC6]
	0x01E0B45C LDR X19, [X19 + 0xA88]
	0x01E0B460 TBNZ X8, 0x0, 0x1E0B478
	0x01E0B464 ADRP X0, 0x22EE000
	0x01E0B468 LDR X0, [X0 + 0xA88]
	0x01E0B46C BL 0x1C16CF4
	0x01E0B470 MOVZ W8, 0x1
	0x01E0B474 STRB W8, [X20 + 0xDC6]
	0x01E0B478 LDR X0, [X19]
	0x01E0B47C LDR W8, [X0 + 0xE0]
	0x01E0B480 CBNZ W8, 0x1E0B48C
	0x01E0B484 BL 0x1C16DFC
	0x01E0B488 LDR X0, [X19]
	0x01E0B48C LDR X8, [X0 + 0xB8]
	0x01E0B490 LDP X20, X19, [X31 + 0x10]
	0x01E0B494 LDR X0, [X8 + 0x98]
	0x01E0B498 LDR X30, [X31], #0x20
	0x01E0B49C RET
	0x01E0B4A0 SUB X31, X31, 0x1A0
	0x01E0B4A4 STP D15, D14, [X31 + 0x100]
	0x01E0B4A8 STP D13, D12, [X31 + 0x110]
	0x01E0B4AC STP D11, D10, [X31 + 0x120]
	0x01E0B4B0 STP D9, D8, [X31 + 0x130]
	0x01E0B4B4 STP X29, X30, [X31 + 0x140]
	0x01E0B4B8 STP X28, X27, [X31 + 0x150]
	0x01E0B4BC STP X26, X25, [X31 + 0x160]
	0x01E0B4C0 STP X24, X23, [X31 + 0x170]
	0x01E0B4C4 STP X22, X21, [X31 + 0x180]
	0x01E0B4C8 STP X20, X19, [X31 + 0x190]
	0x01E0B4CC ADRP X24, 0x25CD000
	0x01E0B4D0 ADRP X20, 0x22EE000
	0x01E0B4D4 MOV X19, X8
	0x01E0B4D8 LDRB W8, [X24 + 0xDC7]
	0x01E0B4DC LDR X20, [X20 + 0x9F0]
	0x01E0B4E0 MOV X23, X2
	0x01E0B4E4 MOV X22, X1
	0x01E0B4E8 MOV X21, X0
	0x01E0B4EC ADD X25, X31, 0xD8
	0x01E0B4F0 TBNZ X8, 0x0, 0x1E0B5D4
	0x01E0B4F4 ADRP X0, 0x22EE000
	0x01E0B4F8 LDR X0, [X0 + 0x9F8]
	0x01E0B4FC BL 0x1C16CF4
	0x01E0B500 ADRP X0, 0x22EE000
	0x01E0B504 LDR X0, [X0 + 0xA00]
	0x01E0B508 BL 0x1C16CF4
	0x01E0B50C ADRP X0, 0x22EE000
	0x01E0B510 LDR X0, [X0 + 0xA08]
	0x01E0B514 BL 0x1C16CF4
	0x01E0B518 ADRP X0, 0x22E8000
	0x01E0B51C LDR X0, [X0 + 0xA58]
	0x01E0B520 BL 0x1C16CF4
	0x01E0B524 ADRP X0, 0x22EE000
	0x01E0B528 LDR X0, [X0 + 0xA10]
	0x01E0B52C BL 0x1C16CF4
	0x01E0B530 ADRP X0, 0x22EE000
	0x01E0B534 LDR X0, [X0 + 0xA18]
	0x01E0B538 BL 0x1C16CF4
	0x01E0B53C ADRP X0, 0x22EE000
	0x01E0B540 LDR X0, [X0 + 0xA20]
	0x01E0B544 BL 0x1C16CF4
	0x01E0B548 ADRP X0, 0x22EE000
	0x01E0B54C LDR X0, [X0 + 0xA28]
	0x01E0B550 BL 0x1C16CF4
	0x01E0B554 ADRP X0, 0x22EE000
	0x01E0B558 LDR X0, [X0 + 0xAB8]
	0x01E0B55C BL 0x1C16CF4
	0x01E0B560 ADRP X0, 0x22EE000
	0x01E0B564 LDR X0, [X0 + 0xAC0]
	0x01E0B568 BL 0x1C16CF4
	0x01E0B56C ADRP X0, 0x22EE000
	0x01E0B570 LDR X0, [X0 + 0xAD0]
	0x01E0B574 BL 0x1C16CF4
	0x01E0B578 ADRP X0, 0x22EE000
	0x01E0B57C LDR X0, [X0 + 0xAE0]
	0x01E0B580 BL 0x1C16CF4
	0x01E0B584 ADRP X0, 0x22EE000
	0x01E0B588 LDR X0, [X0 + 0x9F0]
	0x01E0B58C BL 0x1C16CF4
	0x01E0B590 ADRP X0, 0x22EE000
	0x01E0B594 LDR X0, [X0 + 0xCF8]
	0x01E0B598 BL 0x1C16CF4
	0x01E0B59C ADRP X0, 0x22EE000
	0x01E0B5A0 LDR X0, [X0 + 0xA50]
	0x01E0B5A4 BL 0x1C16CF4
	0x01E0B5A8 ADRP X0, 0x22E8000
	0x01E0B5AC LDR X0, [X0 + 0x598]
	0x01E0B5B0 BL 0x1C16CF4
	0x01E0B5B4 ADRP X0, 0x22EE000
	0x01E0B5B8 LDR X0, [X0 + 0xD00]
	0x01E0B5BC BL 0x1C16CF4
	0x01E0B5C0 ADRP X0, 0x22E8000
	0x01E0B5C4 LDR X0, [X0 + 0xEC8]
	0x01E0B5C8 BL 0x1C16CF4
	0x01E0B5CC MOVZ W8, 0x1
	0x01E0B5D0 STRB W8, [X24 + 0xDC7]
	0x01E0B5D4 LDR X0, [X20]
	0x01E0B5D8 STP X31, X31, [X31 + 0xC0]
	0x01E0B5DC STR X31, [X31 + 0xD0]
	0x01E0B5E0 STP X31, X31, [X31 + 0xA0]
	0x01E0B5E4 STR X31, [X31 + 0xB0]
	0x01E0B5E8 STR W31, [X31 + 0xD8]
	0x01E0B5EC STUR W31, [X25 + 0x3]
	0x01E0B5F0 BL 0x1C16F10
	0x01E0B5F4 MOV X1, X31
	0x01E0B5F8 MOV X20, X0
	0x01E0B5FC BL 0x1E1017C
	0x01E0B600 CBZ X20, 0x1E0BE9C
	0x01E0B604 ADRP X24, 0x22E8000
	0x01E0B608 ADRP X25, 0x22EE000
	0x01E0B60C ADRP X26, 0x22E8000
	0x01E0B610 LDR X24, [X24 + 0xEC8]
	0x01E0B614 LDR X25, [X25 + 0xD00]
	0x01E0B618 LDR X26, [X26 + 0xA58]
	0x01E0B61C MOV X0, X21
	0x01E0B620 STR X21, [X20 + 0x10]
	0x01E0B624 BL 0x1E0B3F0
	0x01E0B628 LDR X8, [X24]
	0x01E0B62C LDR X2, [X25]
	0x01E0B630 MOV X1, X0
	0x01E0B634 MOV X3, X31
	0x01E0B638 MOV X0, X8
	0x01E0B63C BL 0x32274B8
	0x01E0B640 LDR X8, [X26]
	0x01E0B644 MOV X25, X0
	0x01E0B648 MOV X0, X8
	0x01E0B64C BL 0x1C16F10
	0x01E0B650 MOV X1, X25
	0x01E0B654 MOV X2, X31
	0x01E0B658 MOV X24, X0
	0x01E0B65C BL 0x3C35934
	0x01E0B660 CBZ X24, 0x1E0BE9C
	0x01E0B664 MOV X0, X24
	0x01E0B668 MOV X1, X31
	0x01E0B66C BL 0x3C356F8
	0x01E0B670 CBZ X0, 0x1E0BE9C
	0x01E0B674 MOV X1, X31
	0x01E0B678 MOV X24, X0
	0x01E0B67C BL 0x3C32E90
	0x01E0B680 CBZ X22, 0x1E0BE9C
	0x01E0B684 MOV X25, X0
	0x01E0B688 MOV X0, X22
	0x01E0B68C MOV X1, X31
	0x01E0B690 BL 0x3C32E90
	0x01E0B694 CBZ X25, 0x1E0BE9C
	0x01E0B698 MOV X1, X0
	0x01E0B69C MOV X0, X25
	0x01E0B6A0 MOV X2, X31
	0x01E0B6A4 BL 0x3C3FD20
	0x01E0B6A8 MOV X0, X24
	0x01E0B6AC MOV X1, X31
	0x01E0B6B0 BL 0x3C32E90
	0x01E0B6B4 ADRP X26, 0x25CD000
	0x01E0B6B8 LDRB W8, [X26 + 0x783]
	0x01E0B6BC MOV X25, X0
	0x01E0B6C0 CBNZ W8, 0x1E0B6D8
	0x01E0B6C4 ADRP X0, 0x22E8000
	0x01E0B6C8 LDR X0, [X0 + 0x5A0]
	0x01E0B6CC BL 0x1C16CF4
	0x01E0B6D0 MOVZ W8, 0x1
	0x01E0B6D4 STRB W8, [X26 + 0x783]
	0x01E0B6D8 CBZ X25, 0x1E0BE9C
	0x01E0B6DC ADRP X8, 0x22E8000
	0x01E0B6E0 LDR X8, [X8 + 0x5A0]
	0x01E0B6E4 MOV X0, X25
	0x01E0B6E8 MOV X1, X31
	0x01E0B6EC LDR X8, [X8]
	0x01E0B6F0 LDR X8, [X8 + 0xB8]
	0x01E0B6F4 LDP S1, S2, [X8 + 0x4]
	0x01E0B6F8 LDR V0, [X8]
	0x01E0B6FC BL 0x3C3EC04
	0x01E0B700 MOV X0, X24
	0x01E0B704 MOV X1, X31
	0x01E0B708 BL 0x3C32E90
	0x01E0B70C ADRP X26, 0x25CD000
	0x01E0B710 LDRB W8, [X26 + 0x793]
	0x01E0B714 MOV X25, X0
	0x01E0B718 CBNZ W8, 0x1E0B730
	0x01E0B71C ADRP X0, 0x22E9000
	0x01E0B720 LDR X0, [X0 + 0x5A8]
	0x01E0B724 BL 0x1C16CF4
	0x01E0B728 MOVZ W8, 0x1
	0x01E0B72C STRB W8, [X26 + 0x793]
	0x01E0B730 CBZ X25, 0x1E0BE9C
	0x01E0B734 ADRP X8, 0x22E9000
	0x01E0B738 LDR X8, [X8 + 0x5A8]
	0x01E0B73C MOV X0, X25
	0x01E0B740 MOV X1, X31
	0x01E0B744 LDR X8, [X8]
	0x01E0B748 LDR X8, [X8 + 0xB8]
	0x01E0B74C LDP S2, S3, [X8 + 0x8]
	0x01E0B750 LDP S0, S1, [X8]
	0x01E0B754 BL 0x3C3F8B8
	0x01E0B758 MOV X0, X24
	0x01E0B75C MOV X1, X31
	0x01E0B760 BL 0x3C32ECC
	0x01E0B764 STR X0, [X20 + 0x18]
	0x01E0B768 LDR X24, [X21 + 0x40]
	0x01E0B76C MOV X0, X22

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x25CE000
	008 Move W8, [X23+3508]
	009 Move X21, X3
	010 Move X19, X2
	011 Move X20, X1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {55}
	017 Move X0, 0x22EF000
	018 Move X0, [X0+3104]
	019 Call 0x1C17CF4
	020 Move X0, 0x22E9000
	021 Move X0, [X0+2600]
	022 Call 0x1C17CF4
	023 Move X0, 0x22EF000
	024 Move X0, [X0+3056]
	025 Call 0x1C17CF4
	026 Move X0, 0x22EF000
	027 Move X0, [X0+2840]
	028 Call 0x1C17CF4
	029 Move X0, 0x22EF000
	030 Move X0, [X0+3112]
	031 Call 0x1C17CF4
	032 Move X0, 0x22EF000
	033 Move X0, [X0+3064]
	034 Call 0x1C17CF4
	035 Move X0, 0x22EF000
	036 Move X0, [X0+3120]
	037 Call 0x1C17CF4
	038 Move X0, 0x22EF000
	039 Move X0, [X0+3072]
	040 Call 0x1C17CF4
	041 Move X0, 0x22EF000
	042 Move X0, [X0+3128]
	043 Call 0x1C17CF4
	044 Move X0, 0x22E9000
	045 Move X0, [X0+1728]
	046 Call 0x1C17CF4
	047 Move X0, 0x22EF000
	048 Move X0, [X0+3136]
	049 Call 0x1C17CF4
	050 Move X0, 0x22EF000
	051 Move X0, [X0+3144]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X23+3508], W8
	055 Move X0, X22
	056 Move X1, X20
	057 Move X2, X19
	058 Move X3, X21
	059 Move X4, X31
	060 Call ForceGraph.ValidateConnectionRequest, X0, X1, X2, X3
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {254}
	065 Move X23, 0x22E9000
	066 Move X23, [X23+1728]
	067 Move X8, 0x22EF000
	068 Move X0, [X23]
	069 Move X8, [X8+3056]
	070 Move W9, [X0+224]
	071 Move X22, [X8]
	072 Compare W9, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X0, X22
	076 Move X1, X31
	077 Call Type.GetTypeFromHandle, X0
	078 Move X1, X0
	079 Move X0, X21
	080 Move X2, X31
	081 Call Type.op_Equality, X0, X1
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {120}
	086 Compare X20, 0
	087 JumpIfEqual {254}
	088 Move X8, 0x22EF000
	089 Move X8, [X8+2840]
	090 Move X10, [X20]
	091 Move X8, [X8]
	092 Move W11, [X10+304]
	093 Move W9, [X8+304]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X12, [X10+200]
	096 Add X12, X12, X9
	097 NotImplemented "Instruction LDUR not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X12, 0x22EF000
	100 Move X12, [X12+3104]
	101 Move X12, [X12]
	102 Move W13, [X12+304]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X14, [X10+200]
	105 Add X13, X14, X13
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X12, 0x22EF000
	109 Move X12, [X12+3128]
	110 Move X12, [X12]
	111 Move W13, [X12+304]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move W0, W31
	114 Compare X19, 0
	115 JumpIfEqual {255}
	116 Move X10, [X10+200]
	117 Add X10, X10, X13
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X8, 0x22EF000
	121 Move X0, [X23]
	122 Move X8, [X8+3072]
	123 Move W9, [X0+224]
	124 Move X22, [X8]
	125 Compare W9, 0
	126 JumpIfNotEqual {128}
	127 Call 0x1C17DFC
	128 Move X0, X22
	129 Move X1, X31
	130 Call Type.GetTypeFromHandle, X0
	131 Move X1, X0
	132 Move X0, X21
	133 Move X2, X31
	134 Call Type.op_Equality, X0, X1
	135 Move TEMP, X0
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfNotEqual {141}
	139 Move X8, 0x22EF000
	140 Move X8, [X8+3120]
	141 Move X8, 0x22EF000
	142 Move X0, [X23]
	143 Move X8, [X8+3064]
	144 Move W9, [X0+224]
	145 Move X22, [X8]
	146 Compare W9, 0
	147 JumpIfNotEqual {149}
	148 Call 0x1C17DFC
	149 Move X0, X22
	150 Move X1, X31
	151 Call Type.GetTypeFromHandle, X0
	152 Move X1, X0
	153 Move X0, X21
	154 Move X2, X31
	155 Call Type.op_Equality, X0, X1
	156 Move TEMP, X0
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfNotEqual {197}
	160 Move X8, 0x22EF000
	161 Move X8, [X8+3112]
	162 Move X8, [X8]
	163 Compare X19, 0
	164 JumpIfEqual {173}
	165 Move X9, [X19]
	166 Move W10, [X8+304]
	167 Move W11, [X9+304]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X9, [X9+200]
	170 Add X9, X9, X10
	171 NotImplemented "Instruction LDUR not yet implemented."
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Compare X20, 0
	174 JumpIfEqual {254}
	175 Move X9, [X20]
	176 Move W10, [X8+304]
	177 Move W11, [X9+304]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X9, [X9+200]
	180 Add X9, X9, X10
	181 NotImplemented "Instruction LDUR not yet implemented."
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Compare X19, 0
	184 JumpIfEqual {254}
	185 Move X8, 0x22EF000
	186 Move X8, [X8+3104]
	187 Move X9, [X19]
	188 Move X8, [X8]
	189 Move W11, [X9+304]
	190 Move W10, [X8+304]
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move X9, [X9+200]
	193 Add X9, X9, X10
	194 NotImplemented "Instruction LDUR not yet implemented."
	195 NotImplemented "Instruction CMP not yet implemented."
	196 NotImplemented "Instruction CSET not yet implemented."
	197 Move X8, 0x22EF000
	198 Move X8, [X8+3144]
	199 Move X19, [X8]
	200 Compare X21, 0
	201 JumpIfEqual {235}
	202 Move X8, [X21]
	203 Move X0, X21
	204 Move X9, [X8+360]
	205 Move X1, [X8+368]
	206 NotImplemented "Instruction BLR not yet implemented."
	207 Move X1, X0
	208 Compare X19, 0
	209 JumpIfEqual {254}
	210 Move X10, [X19]
	211 Move W11, [X10+304]
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Move X12, [X10+200]
	214 Add X9, X12, X9
	215 NotImplemented "Instruction LDUR not yet implemented."
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Move X8, 0x22EF000
	218 Move X8, [X8+3104]
	219 Move X8, [X8]
	220 Move W9, [X8+304]
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Move X12, [X10+200]
	223 Add X9, X12, X9
	224 NotImplemented "Instruction LDUR not yet implemented."
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move X8, 0x22EF000
	227 Move X8, [X8+3128]
	228 Move X8, [X8]
	229 Move W9, [X8+304]
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Move X10, [X10+200]
	232 Add X9, X10, X9
	233 NotImplemented "Instruction LDUR not yet implemented."
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Move X1, X31
	236 Move X8, 0x22EF000
	237 Move X8, [X8+3136]
	238 Move X0, X19
	239 Move X3, X31
	240 Move X2, [X8]
	241 Call String.Concat, X0, X1, X2
	242 Move X8, 0x22E9000
	243 Move X8, [X8+2600]
	244 Move X19, X0
	245 Move X8, [X8]
	246 Move W9, [X8+224]
	247 Compare W9, 0
	248 JumpIfNotEqual {251}
	249 Move X0, X8
	250 Call 0x1C17DFC
	251 Move X0, X19
	252 Move X1, X31
	253 Call Debug.LogWarning, X0
	254 Move W0, W31
	255 Move X20, [X31+32]
	256 Move X19, [X31+40]
	257 Move X22, [X31+16]
	258 Move X21, [X31+24]
	259 Move X30, [X31+48]
	260 Move X23, [X31+56]
	261 Return X0
	262 Compare X20, 0
	263 JumpIfEqual {254}
	264 Move X9, 0x22EF000
	265 Move X9, [X9+3104]
	266 Move X10, [X20]
	267 Move X9, [X9]
	268 Move W12, [X10+304]
	269 Move W11, [X9+304]
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Move X10, [X10+200]
	272 Add X10, X10, X11
	273 NotImplemented "Instruction LDUR not yet implemented."
	274 NotImplemented "Instruction CMP not yet implemented."
	275 Move W0, 1

Method: System.Void .ctor()

Disassembly:
	0x01E0B770 MOV X1, X31
	0x01E0B774 BL 0x3C32E90
	0x01E0B778 CBZ X0, 0x1E0BE9C
	0x01E0B77C MOV X1, X31

ISIL:
	001 Move W8, 10
	002 Move X1, X31
	003 Move [X0+40], W8
	004 Call ForceGraph..ctor, X0
	005 Return 

