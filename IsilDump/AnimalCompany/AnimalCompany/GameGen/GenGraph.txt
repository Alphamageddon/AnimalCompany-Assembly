Type: AnimalCompany.GameGen.GenGraph

Method: System.Collections.Generic.List`1<Less3.ForceGraph.ForceConnection> GetNodeConnections(Less3.ForceGraph.ForceNode node)

Disassembly:
	0x01CF6F74 BL 0x1B6E7F0
	0x01CF6F78 ADRP X0, 0x225A000
	0x01CF6F7C LDR X0, [X0 + 0x928]
	0x01CF6F80 BL 0x1B6E7F0
	0x01CF6F84 ADRP X0, 0x225A000
	0x01CF6F88 LDR X0, [X0 + 0x960]
	0x01CF6F8C BL 0x1B6E7F0
	0x01CF6F90 ADRP X0, 0x225A000
	0x01CF6F94 LDR X0, [X0 + 0x930]
	0x01CF6F98 BL 0x1B6E7F0
	0x01CF6F9C ADRP X0, 0x225A000
	0x01CF6FA0 LDR X0, [X0 + 0x968]
	0x01CF6FA4 BL 0x1B6E7F0
	0x01CF6FA8 ADRP X0, 0x2257000
	0x01CF6FAC LDR X0, [X0 + 0x560]
	0x01CF6FB0 BL 0x1B6E7F0
	0x01CF6FB4 ADRP X0, 0x225A000
	0x01CF6FB8 LDR X0, [X0 + 0x970]
	0x01CF6FBC BL 0x1B6E7F0
	0x01CF6FC0 ADRP X0, 0x225A000
	0x01CF6FC4 LDR X0, [X0 + 0x978]
	0x01CF6FC8 BL 0x1B6E7F0
	0x01CF6FCC MOVZ W8, 0x1
	0x01CF6FD0 STRB W8, [X23 + 0x6F1]
	0x01CF6FD4 MOV X0, X22
	0x01CF6FD8 MOV X1, X20
	0x01CF6FDC MOV X2, X19
	0x01CF6FE0 MOV X3, X21
	0x01CF6FE4 MOV X4, X31
	0x01CF6FE8 BL 0x3036214
	0x01CF6FEC TBZ X0, 0x0, 0x1CF72E8
	0x01CF6FF0 ADRP X23, 0x2257000
	0x01CF6FF4 LDR X23, [X23 + 0x560]
	0x01CF6FF8 ADRP X8, 0x225A000
	0x01CF6FFC LDR X0, [X23]
	0x01CF7000 B 0x3D194D8
	0x01CF7004 LDR W9, [X0 + 0xE0]
	0x01CF7008 LDR X22, [X8]
	0x01CF700C CBNZ W9, 0x1CF7014
	0x01CF7010 BL 0x1B6E8F8
	0x01CF7014 MOV X0, X22
	0x01CF7018 MOV X1, X31
	0x01CF701C BL 0x31F5D3C
	0x01CF7020 MOV X1, X0
	0x01CF7024 MOV X0, X21
	0x01CF7028 MOV X2, X31
	0x01CF702C BL 0x31FEA9C
	0x01CF7030 TBZ X0, 0x0, 0x1CF70D0
	0x01CF7034 CBZ X20, 0x1CF72E8
	0x01CF7038 ADRP X8, 0x2259000
	0x01CF703C LDR X8, [X8 + 0x850]
	0x01CF7040 LDR X10, [X20]
	0x01CF7044 LDR X8, [X8]
	0x01CF7048 LDRB W11, [X10 + 0x130]
	0x01CF704C LDRB W9, [X8 + 0x130]
	0x01CF7050 CMP W11, W9
	0x01CF7054 B.CC 0x1CF706C
	0x01CF7058 LDR X12, [X10 + 0xC8]
	0x01CF705C ADD X12, X12, X9, 0x3, LSL
	0x01CF7060 LDUR X12, [X12 - 0x8]
	0x01CF7064 CMP X12, X8
	0x01CF7068 B.EQ 0x1CF721C
	0x01CF706C ADRP X12, 0x2259000
	0x01CF7070 LDR X12, [X12 + 0x950]
	0x01CF7074 LDR X12, [X12]
	0x01CF7078 LDRB W13, [X12 + 0x130]
	0x01CF707C CMP W11, W13
	0x01CF7080 B.CC 0x1CF7098
	0x01CF7084 LDR X14, [X10 + 0xC8]
	0x01CF7088 ADD X13, X14, X13, 0x3, LSL
	0x01CF708C LDUR X13, [X13 - 0x8]
	0x01CF7090 CMP X13, X12
	0x01CF7094 B.EQ 0x1CF721C
	0x01CF7098 ADRP X12, 0x2259000
	0x01CF709C LDR X12, [X12 + 0x968]
	0x01CF70A0 LDR X12, [X12]
	0x01CF70A4 LDRB W13, [X12 + 0x130]
	0x01CF70A8 CMP W11, W13
	0x01CF70AC B.CC 0x1CF72E8
	0x01CF70B0 MOV W0, W31
	0x01CF70B4 CBZ X19, 0x1CF72EC
	0x01CF70B8 LDR X10, [X10 + 0xC8]
	0x01CF70BC ADD X10, X10, X13, 0x3, LSL
	0x01CF70C0 LDUR X10, [X10 - 0x8]
	0x01CF70C4 CMP X10, X12
	0x01CF70C8 B.EQ 0x1CF7220
	0x01CF70CC B 0x1CF72EC
	0x01CF70D0 ADRP X8, 0x2259000
	0x01CF70D4 LDR X0, [X23]
	0x01CF70D8 LDR X8, [X8 + 0x930]
	0x01CF70DC LDR W9, [X0 + 0xE0]
	0x01CF70E0 LDR X22, [X8]
	0x01CF70E4 CBNZ W9, 0x1CF70EC
	0x01CF70E8 BL 0x1B6E8F8
	0x01CF70EC MOV X0, X22
	0x01CF70F0 MOV X1, X31
	0x01CF70F4 BL 0x31F5D3C
	0x01CF70F8 MOV X1, X0
	0x01CF70FC MOV X0, X21
	0x01CF7100 MOV X2, X31
	0x01CF7104 BL 0x31FEA9C
	0x01CF7108 TBZ X0, 0x0, 0x1CF7118
	0x01CF710C ADRP X8, 0x2259000
	0x01CF7110 LDR X8, [X8 + 0x960]
	0x01CF7114 B 0x1CF715C
	0x01CF7118 ADRP X8, 0x2259000
	0x01CF711C LDR X0, [X23]
	0x01CF7120 LDR X8, [X8 + 0x928]
	0x01CF7124 LDR W9, [X0 + 0xE0]
	0x01CF7128 LDR X22, [X8]
	0x01CF712C CBNZ W9, 0x1CF7134
	0x01CF7130 BL 0x1B6E8F8
	0x01CF7134 MOV X0, X22
	0x01CF7138 MOV X1, X31
	0x01CF713C BL 0x31F5D3C
	0x01CF7140 MOV X1, X0
	0x01CF7144 MOV X0, X21
	0x01CF7148 MOV X2, X31
	0x01CF714C BL 0x31FEA9C
	0x01CF7150 TBZ X0, 0x0, 0x1CF71F4
	0x01CF7154 ADRP X8, 0x2259000
	0x01CF7158 LDR X8, [X8 + 0x958]
	0x01CF715C LDR X8, [X8]
	0x01CF7160 CBZ X19, 0x1CF718C
	0x01CF7164 LDR X9, [X19]
	0x01CF7168 LDRB W10, [X8 + 0x130]
	0x01CF716C LDRB W11, [X9 + 0x130]
	0x01CF7170 CMP W11, W10
	0x01CF7174 B.CC 0x1CF718C
	0x01CF7178 LDR X9, [X9 + 0xC8]
	0x01CF717C ADD X9, X9, X10, 0x3, LSL
	0x01CF7180 LDUR X9, [X9 - 0x8]
	0x01CF7184 CMP X9, X8
	0x01CF7188 B.EQ 0x1CF72FC
	0x01CF718C CBZ X20, 0x1CF72E8
	0x01CF7190 LDR X9, [X20]
	0x01CF7194 LDRB W10, [X8 + 0x130]
	0x01CF7198 LDRB W11, [X9 + 0x130]
	0x01CF719C CMP W11, W10
	0x01CF71A0 B.CC 0x1CF72E8
	0x01CF71A4 LDR X9, [X9 + 0xC8]
	0x01CF71A8 ADD X9, X9, X10, 0x3, LSL
	0x01CF71AC LDUR X9, [X9 - 0x8]
	0x01CF71B0 CMP X9, X8
	0x01CF71B4 B.NE 0x1CF72E8
	0x01CF71B8 CBZ X19, 0x1CF72E8
	0x01CF71BC ADRP X8, 0x2259000
	0x01CF71C0 LDR X8, [X8 + 0x950]
	0x01CF71C4 LDR X9, [X19]
	0x01CF71C8 LDR X8, [X8]
	0x01CF71CC LDRB W11, [X9 + 0x130]
	0x01CF71D0 LDRB W10, [X8 + 0x130]
	0x01CF71D4 CMP W11, W10
	0x01CF71D8 B.CC 0x1CF72E8
	0x01CF71DC LDR X9, [X9 + 0xC8]
	0x01CF71E0 ADD X9, X9, X10, 0x3, LSL
	0x01CF71E4 LDUR X9, [X9 - 0x8]
	0x01CF71E8 CMP X9, X8
	0x01CF71EC CSET W0, EQ
	0x01CF71F0 B 0x1CF72EC
	0x01CF71F4 ADRP X8, 0x2259000
	0x01CF71F8 LDR X8, [X8 + 0x978]
	0x01CF71FC LDR X19, [X8]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], X30
	003 Move [X31+80], X26
	004 Move [X31+88], X25
	005 Move [X31+96], X24
	006 Move [X31+104], X23
	007 Move [X31+112], X22
	008 Move [X31+120], X21
	009 Move [X31+128], X20
	010 Move [X31+136], X19
	011 Move X23, 0x252E000
	012 Move X22, 0x225B000
	013 Move X19, 0x225B000
	014 Move W8, [X23+1774]
	015 Move X22, [X22+2144]
	016 Move X19, [X19+2152]
	017 Move X20, X1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {49}
	023 Move X0, 0x225B000
	024 Move X0, [X0+2160]
	025 Call 0x1B6F7F0
	026 Move X0, 0x225B000
	027 Move X0, [X0+2168]
	028 Call 0x1B6F7F0
	029 Move X0, 0x225B000
	030 Move X0, [X0+2176]
	031 Call 0x1B6F7F0
	032 Move X0, 0x225B000
	033 Move X0, [X0+2184]
	034 Call 0x1B6F7F0
	035 Move X0, 0x225B000
	036 Move X0, [X0+2192]
	037 Call 0x1B6F7F0
	038 Move X0, 0x225B000
	039 Move X0, [X0+2152]
	040 Call 0x1B6F7F0
	041 Move X0, 0x225B000
	042 Move X0, [X0+2144]
	043 Call 0x1B6F7F0
	044 Move X0, 0x2257000
	045 Move X0, [X0+1144]
	046 Call 0x1B6F7F0
	047 Move W8, 1
	048 Move [X23+1774], W8
	049 Move X0, [X22]
	050 Move [X31+32], X31
	051 Move [X31+40], X31
	052 Move [X31+48], X31
	053 Call 0x1B6FA0C
	054 Move X1, [X19]
	055 Move X19, X0
	056 Call List`1<Object>..ctor, X0
	057 Move X0, [X21+32]
	058 Compare X0, 0
	059 JumpIfEqual {155}
	060 Move X8, 0x225A000
	061 Move X8, [X8+2192]
	062 Move X24, 0x225A000
	063 Move X24, [X24+2168]
	064 Move X25, 0x2257000
	065 Move X1, [X8]
	066 Move X26, 0x225A000
	067 Move X23, 0x225A000
	068 Move X25, [X25+1144]
	069 Move X26, [X26+2184]
	070 Move X23, [X23+2160]
	071 Add X8, X31, 8
	072 Call List`1<Object>.GetEnumerator, X0
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 Move X8, [X31+24]
	075 Move [X31+2], V0
	076 Move [X31+48], X8
	077 Move X1, [X24]
	078 Add X0, X31, 32
	079 Call Enumerator<Object>.MoveNext, X0
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {137}
	084 Move X21, [X31+48]
	085 Compare X21, 0
	086 JumpIfEqual {152}
	087 Move X0, [X25]
	088 Move X22, [X21+24]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1B6F8F8
	093 Move X0, X22
	094 Move X1, X20
	095 Move X2, X31
	096 Call Object.op_Equality, X0, X1
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfEqual {115}
	101 Move X0, [X25]
	102 Move X22, [X21+32]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1B6F8F8
	107 Move X0, X22
	108 Move X1, X20
	109 Move X2, X31
	110 Call Object.op_Equality, X0, X1
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {77}
	115 Compare X19, 0
	116 JumpIfEqual {153}
	117 Move W10, [X19+28]
	118 Move X8, [X19+16]
	119 Move X9, [X26]
	120 Add W10, W10, 1
	121 Move [X19+28], W10
	122 Compare X8, 0
	123 JumpIfEqual {154}
	124 NotImplemented "Instruction LDRSW not yet implemented."
	125 Move W11, [X8+24]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Add W9, W10, 1
	128 Add X8, X8, X10
	129 Move [X19+24], W9
	130 Move [X8+32], X21
	131 Move X8, [X9+32]
	132 Move X8, [X8+192]
	133 Move X2, [X8+112]
	134 Move X0, X19
	135 Move X1, X21
	136 Call List`1<Object>.AddWithResize, X0, X1
	137 Move X1, [X23]
	138 Add X0, X31, 32
	139 Call Enumerator<Object>.Dispose, X0
	140 Move X0, X19
	141 Move X20, [X31+128]
	142 Move X19, [X31+136]
	143 Move X22, [X31+112]
	144 Move X21, [X31+120]
	145 Move X24, [X31+96]
	146 Move X23, [X31+104]
	147 Move X26, [X31+80]
	148 Move X25, [X31+88]
	149 Move X30, [X31+64]
	150 Add X31, X31, 144
	151 Return X0
	152 Call 0x1B6FA1C
	153 Call 0x1B6FA1C
	154 Call 0x1B6FA1C
	155 Call 0x1B6FA1C
	156 Move X20, X0
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move X0, X20
	159 Call 0x3D1A840
	160 Move X21, [X0]
	161 Call 0x3D1A850
	162 Move X1, [X23]
	163 Add X0, X31, 32
	164 Call Enumerator<Object>.Dispose, X0
	165 Compare X21, 0
	166 JumpIfEqual {140}
	167 Move X0, X21
	168 Call 0x1B6FA14
	169 Move X21, X31
	170 Move X20, X0
	171 Move X1, [X23]
	172 Add X0, X31, 32
	173 Call Enumerator<Object>.Dispose, X0
	174 Compare X21, 0
	175 JumpIfNotEqual {178}
	176 Move X0, X20
	177 Call 0x1C8518C
	178 Move X0, X21
	179 Call 0x1B6FA14
	180 Call 0x18F56A8

Method: System.Collections.Generic.List`1<T> GetConnectionsOfType()

Disassembly:
	0x020D1EC4 MOV X1, X19
	0x020D1EC8 MOV X2, X20
	0x020D1ECC LDR X3, [X8]
	0x020D1ED0 BL 0x28FA294
	0x020D1ED4 LDP X20, X19, [X31 + 0x30]
	0x020D1ED8 LDP X22, X21, [X31 + 0x20]
	0x020D1EDC LDP X30, X23, [X31 + 0x10]
	0x020D1EE0 ADD X31, X31, 0x40
	0x020D1EE4 RET
	0x020D1EE8 BL 0x1B6EA1C
	0x020D1EEC STP X30, X21, [X31 - 0x20]!
	0x020D1EF0 STP X20, X19, [X31 + 0x10]
	0x020D1EF4 ADRP X20, 0x2153000
	0x020D1EF8 ADRP X21, 0x1EA2000
	0x020D1EFC LDRB W8, [X20 + 0x223]
	0x020D1F00 LDR X21, [X21 + 0x4E0]
	0x020D1F04 MOV X19, X0
	0x020D1F08 TBNZ X8, 0x0, 0x20D1F50
	0x020D1F0C ADRP X0, 0x1EA2000
	0x020D1F10 LDR X0, [X0 + 0x4E8]
	0x020D1F14 BL 0x1B6E7F0
	0x020D1F18 ADRP X0, 0x1EA2000
	0x020D1F1C LDR X0, [X0 + 0x510]
	0x020D1F20 BL 0x1B6E7F0
	0x020D1F24 ADRP X0, 0x1EA2000
	0x020D1F28 LDR X0, [X0 + 0x4F0]
	0x020D1F2C BL 0x1B6E7F0
	0x020D1F30 ADRP X0, 0x1EA2000
	0x020D1F34 LDR X0, [X0 + 0x4E0]
	0x020D1F38 BL 0x1B6E7F0
	0x020D1F3C ADRP X0, 0x1EA2000
	0x020D1F40 LDR X0, [X0 + 0x4F8]
	0x020D1F44 BL 0x1B6E7F0
	0x020D1F48 MOVZ W8, 0x1
	0x020D1F4C STRB W8, [X20 + 0x223]
	0x020D1F50 LDR X0, [X21]
	0x020D1F54 LDR W8, [X0 + 0xE0]
	0x020D1F58 CBNZ W8, 0x20D1F64
	0x020D1F5C BL 0x1B6E8F8
	0x020D1F60 LDR X0, [X21]
	0x020D1F64 LDR X8, [X0 + 0xB8]
	0x020D1F68 LDR X0, [X8 + 0x8]
	0x020D1F6C CBZ X0, 0x20D2064
	0x020D1F70 ADRP X8, 0x1EA2000
	0x020D1F74 LDR X8, [X8 + 0x4E8]
	0x020D1F78 MOV X1, X19
	0x020D1F7C LDR X2, [X8]
	0x020D1F80 BL 0x28FA49C
	0x020D1F84 TBZ X0, 0x0, 0x20D200C
	0x020D1F88 LDR X0, [X21]
	0x020D1F8C LDR W8, [X0 + 0xE0]
	0x020D1F90 CBNZ W8, 0x20D1F9C
	0x020D1F94 BL 0x1B6E8F8
	0x020D1F98 LDR X0, [X21]
	0x020D1F9C LDR X8, [X0 + 0xB8]
	0x020D1FA0 LDR X0, [X8 + 0x8]
	0x020D1FA4 CBZ X0, 0x20D2064
	0x020D1FA8 ADRP X8, 0x1EA2000
	0x020D1FAC LDR X8, [X8 + 0x4F0]
	0x020D1FB0 MOV X1, X19
	0x020D1FB4 LDR X2, [X8]
	0x020D1FB8 BL 0x28FA228
	0x020D1FBC CBZ X0, 0x20D2064
	0x020D1FC0 ADRP X10, 0x1EA2000
	0x020D1FC4 LDR X8, [X0]
	0x020D1FC8 LDR X10, [X10 + 0x4F8]
	0x020D1FCC MOV X20, X0
	0x020D1FD0 LDRH W9, [X8 + 0x12E]
	0x020D1FD4 LDR X1, [X10]
	0x020D1FD8 CBZ X9, 0x20D1FFC
	0x020D1FDC LDR X10, [X8 + 0xB0]
	0x020D1FE0 ADD X10, X10, 0x8
	0x020D1FE4 LDUR X11, [X10 - 0x8]
	0x020D1FE8 CMP X11, X1
	0x020D1FEC B.EQ 0x20D2018
	0x020D1FF0 SUBS X9, X9, 0x1
	0x020D1FF4 ADD X10, X10, 0x10
	0x020D1FF8 B.NE 0x20D1FE4
	0x020D1FFC MOVZ W2, 0x3
	0x020D2000 MOV X0, X20
	0x020D2004 BL 0x1BB4284
	0x020D2008 B 0x20D2028
	0x020D200C LDP X20, X19, [X31 + 0x10]
	0x020D2010 LDP X30, X21, [X31], #0x20
	0x020D2014 RET
	0x020D2018 LDR W9, [X10]
	0x020D201C ADD W9, W9, 0x3
	0x020D2020 ADD X8, X8, W9, 0x4, SXTW
	0x020D2024 ADD X0, X8, 0x138
	0x020D2028 LDP X8, X2, [X0]
	0x020D202C MOV X0, X20
	0x020D2030 MOV X1, X19
	0x020D2034 BLR X8
	0x020D2038 LDR X8, [X21]
	0x020D203C LDR X8, [X8 + 0xB8]
	0x020D2040 LDR X0, [X8 + 0x8]
	0x020D2044 CBZ X0, 0x20D2064
	0x020D2048 ADRP X8, 0x1EA1000
	0x020D204C LDR X8, [X8 + 0x510]
	0x020D2050 MOV X1, X19
	0x020D2054 LDP X20, X19, [X31 + 0x10]
	0x020D2058 LDR X2, [X8]
	0x020D205C LDP X30, X21, [X31], #0x20
	0x020D2060 B 0x28FB708
	0x020D2064 BL 0x1B6EA1C
	0x020D2068 STR X30, [X31 - 0x20]!
	0x020D206C STP X20, X19, [X31 + 0x10]
	0x020D2070 AND W8, W1, 0x1
	0x020D2074 STRB W8, [X31 + 0xC]
	0x020D2078 LDR X8, [X2 + 0x38]
	0x020D207C MOV X20, X2
	0x020D2080 MOV X19, X0
	0x020D2084 CBNZ X8, 0x20D20B0
	0x020D2088 ADRP X0, 0x1E7B000
	0x020D208C LDR X0, [X0 + 0x9B0]
	0x020D2090 BL 0x1B6E7F0
	0x020D2094 ADRP X0, 0x1EA1000
	0x020D2098 LDR X0, [X0 + 0x518]
	0x020D209C BL 0x1B6E7F0
	0x020D20A0 LDR X8, [X20 + 0x38]
	0x020D20A4 CBNZ X8, 0x20D20B0
	0x020D20A8 MOV X0, X20
	0x020D20AC BL 0x1BB41DC
	0x020D20B0 ADRP X8, 0x1E7B000
	0x020D20B4 LDR X8, [X8 + 0x9B0]
	0x020D20B8 LDR X0, [X8]
	0x020D20BC LDR W8, [X0 + 0xE0]
	0x020D20C0 CBNZ W8, 0x20D20C8
	0x020D20C4 BL 0x1B6E8F8
	0x020D20C8 LDR X8, [X20 + 0x38]
	0x020D20CC ADD X0, X31, 0xC
	0x020D20D0 LDR X1, [X8 + 0x8]
	0x020D20D4 BL 0x3180E70
	0x020D20D8 ADRP X8, 0x1EA1000
	0x020D20DC LDR X8, [X8 + 0x518]
	0x020D20E0 MOV W20, W0
	0x020D20E4 LDR X8, [X8]
	0x020D20E8 LDR W9, [X8 + 0xE0]
	0x020D20EC CBNZ W9, 0x20D20F8
	0x020D20F0 MOV X0, X8
	0x020D20F4 BL 0x1B6E8F8
	0x020D20F8 MOV X0, X19
	0x020D20FC MOV W1, W20
	0x020D2100 MOV X2, X31
	0x020D2104 BL 0x31E2B60
	0x020D2108 LDP X20, X19, [X31 + 0x10]
	0x020D210C LDR X30, [X31], #0x20
	0x020D2110 RET
	0x020D2114 SUB X31, X31, 0x60
	0x020D2118 STP D11, D10, [X31 + 0x10]
	0x020D211C STP D9, D8, [X31 + 0x20]
	0x020D2120 STP X30, X23, [X31 + 0x30]
	0x020D2124 STP X22, X21, [X31 + 0x40]
	0x020D2128 STP X20, X19, [X31 + 0x50]
	0x020D212C LDR X8, [X1 + 0x38]
	0x020D2130 MOV V8.16B, V3.16B
	0x020D2134 MOV V9.16B, V2.16B
	0x020D2138 MOV V10.16B, V1.16B
	0x020D213C MOV V11.16B, V0.16B
	0x020D2140 MOV X19, X0
	0x020D2144 CBNZ X8, 0x20D2168

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X8, [X1+56]
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {31}
	013 Move X0, 0x1E80000
	014 Move X0, [X0+2160]
	015 Call 0x1B6F7F0
	016 Move X0, 0x1E80000
	017 Move X0, [X0+2168]
	018 Call 0x1B6F7F0
	019 Move X0, 0x1E80000
	020 Move X0, [X0+2176]
	021 Call 0x1B6F7F0
	022 Move X0, 0x1E80000
	023 Move X0, [X0+2192]
	024 Call 0x1B6F7F0
	025 Move X8, [X20+56]
	026 Compare X8, 0
	027 JumpIfNotEqual {31}
	028 Move X0, X20
	029 Call 0x1BB51DC
	030 Move X8, [X20+56]
	031 Move [X31+32], X31
	032 Move [X31+40], X31
	033 Move [X31+48], X31
	034 Move X0, [X8]
	035 Move W8, [X0+309]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {41}
	040 Call 0x1BB5180
	041 Call 0x1B6FA0C
	042 Move X8, [X20+56]
	043 Move X19, X0
	044 Move X1, [X8+8]
	045 Call List`1<Object>..ctor, X0
	046 Move X0, [X21+32]
	047 Compare X0, 0
	048 JumpIfEqual {155}
	049 Move X8, 0x1E80000
	050 Move X8, [X8+2192]
	051 Move X1, [X8]
	052 Add X8, X31, 8
	053 Call List`1<Object>.GetEnumerator, X0
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 Move X8, [X31+24]
	056 Move X23, 0x1E80000
	057 Move [X31+2], V0
	058 Move [X31+48], X8
	059 Move X23, [X23+2168]
	060 Move X1, [X23]
	061 Add X0, X31, 32
	062 Call Enumerator<Object>.MoveNext, X0
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {136}
	067 Move X8, [X20+56]
	068 Move X21, [X31+48]
	069 Move X1, [X8+16]
	070 Move W8, [X1+309]
	071 Move TEMP, X8
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {78}
	075 Move X0, X1
	076 Call 0x1BB5180
	077 Move X1, X0
	078 Move X0, X21
	079 Call 0x1B6F8FC
	080 Compare X0, 0
	081 JumpIfEqual {60}
	082 Compare X19, 0
	083 JumpIfEqual {150}
	084 Move X8, [X20+56]
	085 Move X1, [X8+16]
	086 Move W8, [X1+309]
	087 Move TEMP, X8
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {94}
	091 Move X0, X1
	092 Call 0x1BB5180
	093 Move X1, X0
	094 Move X0, X21
	095 Call 0x1B6F8FC
	096 Move X8, [X20+56]
	097 Move X21, X0
	098 Move X22, [X8+16]
	099 Move W8, [X22+309]
	100 Move TEMP, X8
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {107}
	104 Move X0, X22
	105 Call 0x1BB5180
	106 Move X22, X0
	107 Compare X21, 0
	108 JumpIfEqual {115}
	109 Move X0, X21
	110 Move X1, X22
	111 Call 0x1B6F8FC
	112 Move X1, X0
	113 Compare X1, 0
	114 JumpIfNotEqual {116}
	115 Move X1, X31
	116 Move X9, [X20+56]
	117 Move W10, [X19+28]
	118 Move X8, [X19+16]
	119 Move X9, [X9+24]
	120 Add W10, W10, 1
	121 Move [X19+28], W10
	122 Compare X8, 0
	123 JumpIfEqual {151}
	124 NotImplemented "Instruction LDRSW not yet implemented."
	125 Move W11, [X8+24]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Add W9, W10, 1
	128 Add X8, X8, X10
	129 Move [X19+24], W9
	130 Move [X8+32], X1
	131 Move X8, [X9+32]
	132 Move X8, [X8+192]
	133 Move X2, [X8+112]
	134 Move X0, X19
	135 Call List`1<Object>.AddWithResize, X0, X1
	136 Move X8, 0x1E7F000
	137 Move X8, [X8+2160]
	138 Add X0, X31, 32
	139 Move X1, [X8]
	140 Call Enumerator<Object>.Dispose, X0
	141 Move X0, X19
	142 Move X20, [X31+96]
	143 Move X19, [X31+104]
	144 Move X22, [X31+80]
	145 Move X21, [X31+88]
	146 Move X30, [X31+64]
	147 Move X23, [X31+72]
	148 Add X31, X31, 112
	149 Return X0
	150 Call 0x1B6FA1C
	151 Call 0x1B6FA1C
	152 Move X0, X21
	153 Move X1, X22
	154 Call 0x1B6FCDC
	155 Call 0x1B6FA1C
	156 Move X20, X0
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move X0, X20
	159 Call 0x3D1A840
	160 Move X21, [X0]
	161 Call 0x3D1A850
	162 Move X8, 0x1E7F000
	163 Move X8, [X8+2160]
	164 Add X0, X31, 32
	165 Move X1, [X8]
	166 Call Enumerator<Object>.Dispose, X0
	167 Compare X21, 0
	168 JumpIfEqual {141}
	169 Move X0, X21
	170 Call 0x1B6FA14
	171 Move X21, X31
	172 Move X20, X0
	173 Move X8, 0x1E7F000
	174 Move X8, [X8+2160]
	175 Move X1, [X8]
	176 Add X0, X31, 32
	177 Call Enumerator<Object>.Dispose, X0
	178 Compare X21, 0
	179 JumpIfNotEqual {182}
	180 Move X0, X20
	181 Call 0x1C8518C
	182 Move X0, X21
	183 Call 0x1B6FA14
	184 Call 0x18F56A8

Method: System.Collections.Generic.List`1<T> GetNodeConnectionsOfType(Less3.ForceGraph.ForceNode node)

Disassembly:
	0x020D2148 ADRP X0, 0x1EA1000
	0x020D214C LDR X0, [X0 + 0x518]
	0x020D2150 MOV X20, X1
	0x020D2154 BL 0x1B6E7F0
	0x020D2158 LDR X8, [X20 + 0x38]
	0x020D215C CBNZ X8, 0x20D2168
	0x020D2160 MOV X0, X20
	0x020D2164 BL 0x1BB41DC
	0x020D2168 ADD X8, X31, 0x0
	0x020D216C ADD X0, X31, 0x0
	0x020D2170 MOV X1, X31
	0x020D2174 STP S11, S10, [X31]
	0x020D2178 ORR X21, X8, 0x7
	0x020D217C ADD X22, X8, 0x8
	0x020D2180 ADD X23, X8, 0xC
	0x020D2184 STP S9, S8, [X31 + 0x8]
	0x020D2188 BL 0x31F94B0
	0x020D218C MOV W20, W0
	0x020D2190 MOV X0, X21
	0x020D2194 MOV X1, X31
	0x020D2198 BL 0x31F94B0
	0x020D219C MOV W21, W0
	0x020D21A0 MOV X0, X22
	0x020D21A4 MOV X1, X31
	0x020D21A8 BL 0x31F94B0
	0x020D21AC MOV W22, W0
	0x020D21B0 MOV X0, X23
	0x020D21B4 MOV X1, X31
	0x020D21B8 BL 0x31F94B0
	0x020D21BC ADRP X8, 0x1EA1000
	0x020D21C0 LDR X8, [X8 + 0x518]
	0x020D21C4 MOV W23, W0
	0x020D21C8 LDR X8, [X8]
	0x020D21CC LDR W9, [X8 + 0xE0]
	0x020D21D0 CBNZ W9, 0x20D21DC
	0x020D21D4 MOV X0, X8
	0x020D21D8 BL 0x1B6E8F8
	0x020D21DC EOR W8, W20, W21, 0x2
	0x020D21E0 EOR W8, W8, W22, 0x2
	0x020D21E4 EOR W1, W8, W23, 0x1
	0x020D21E8 MOV X0, X19
	0x020D21EC MOV X2, X31
	0x020D21F0 BL 0x31E2B60
	0x020D21F4 LDP X20, X19, [X31 + 0x50]
	0x020D21F8 LDP X22, X21, [X31 + 0x40]
	0x020D21FC LDP X30, X23, [X31 + 0x30]
	0x020D2200 LDP D9, D8, [X31 + 0x20]
	0x020D2204 LDP D11, D10, [X31 + 0x10]
	0x020D2208 ADD X31, X31, 0x60
	0x020D220C RET
	0x020D2210 STR X30, [X31 - 0x20]!
	0x020D2214 STP X20, X19, [X31 + 0x10]
	0x020D2218 STR W1, [X31 + 0xC]
	0x020D221C LDR X8, [X2 + 0x38]
	0x020D2220 MOV X19, X0
	0x020D2224 CBNZ X8, 0x20D224C
	0x020D2228 ADRP X0, 0x1EA1000
	0x020D222C LDR X0, [X0 + 0x518]
	0x020D2230 MOV X20, X2
	0x020D2234 BL 0x1B6E7F0
	0x020D2238 LDR X8, [X20 + 0x38]
	0x020D223C CBNZ X8, 0x20D224C
	0x020D2240 MOV X0, X20
	0x020D2244 BL 0x1BB41DC
	0x020D2248 LDR X8, [X20 + 0x38]
	0x020D224C LDR X1, [X8 + 0x8]
	0x020D2250 ADD X0, X31, 0xC
	0x020D2254 BL 0x31E4D0C
	0x020D2258 ADRP X8, 0x1EA1000
	0x020D225C LDR X8, [X8 + 0x518]
	0x020D2260 MOV W20, W0
	0x020D2264 LDR X8, [X8]
	0x020D2268 LDR W9, [X8 + 0xE0]
	0x020D226C CBNZ W9, 0x20D2278
	0x020D2270 MOV X0, X8
	0x020D2274 BL 0x1B6E8F8
	0x020D2278 MOV X0, X19
	0x020D227C MOV W1, W20
	0x020D2280 MOV X2, X31
	0x020D2284 BL 0x31E2B60
	0x020D2288 LDP X20, X19, [X31 + 0x10]
	0x020D228C LDR X30, [X31], #0x20
	0x020D2290 RET
	0x020D2294 STP X30, X21, [X31 - 0x20]!
	0x020D2298 STP X20, X19, [X31 + 0x10]
	0x020D229C ADRP X21, 0x2152000
	0x020D22A0 LDRB W8, [X21 + 0x224]
	0x020D22A4 MOV X20, X1
	0x020D22A8 MOV X19, X0
	0x020D22AC TBNZ X8, 0x0, 0x20D22C4
	0x020D22B0 ADRP X0, 0x1EA1000
	0x020D22B4 LDR X0, [X0 + 0x518]
	0x020D22B8 BL 0x1B6E7F0
	0x020D22BC MOVZ W8, 0x1
	0x020D22C0 STRB W8, [X21 + 0x224]
	0x020D22C4 ADRP X21, 0x1EA1000
	0x020D22C8 LDR X21, [X21 + 0x518]
	0x020D22CC CBZ X20, 0x20D22E4
	0x020D22D0 LDR X8, [X20]
	0x020D22D4 MOV X0, X20
	0x020D22D8 LDP X9, X1, [X8 + 0x158]
	0x020D22DC BLR X9
	0x020D22E0 MOV W20, W0
	0x020D22E4 LDR X0, [X21]
	0x020D22E8 LDR W8, [X0 + 0xE0]
	0x020D22EC CBNZ W8, 0x20D22F4
	0x020D22F0 BL 0x1B6E8F8
	0x020D22F4 MOV X0, X19
	0x020D22F8 MOV W1, W20
	0x020D22FC LDP X20, X19, [X31 + 0x10]
	0x020D2300 MOV X2, X31
	0x020D2304 LDP X30, X21, [X31], #0x20
	0x020D2308 B 0x31E2B60
	0x020D230C SUB X31, X31, 0x30
	0x020D2310 STR X30, [X31 + 0x10]
	0x020D2314 STP X20, X19, [X31 + 0x20]
	0x020D2318 STP S0, S1, [X31]
	0x020D231C STP S2, S3, [X31 + 0x8]
	0x020D2320 LDR X8, [X1 + 0x38]
	0x020D2324 MOV X19, X0
	0x020D2328 CBNZ X8, 0x20D2350
	0x020D232C ADRP X0, 0x1EA1000
	0x020D2330 LDR X0, [X0 + 0x518]
	0x020D2334 MOV X20, X1
	0x020D2338 BL 0x1B6E7F0
	0x020D233C LDR X8, [X20 + 0x38]
	0x020D2340 CBNZ X8, 0x20D2350
	0x020D2344 MOV X0, X20
	0x020D2348 BL 0x1BB41DC
	0x020D234C LDR X8, [X20 + 0x38]
	0x020D2350 LDR X1, [X8 + 0x8]
	0x020D2354 ADD X0, X31, 0x0
	0x020D2358 BL 0x3A741FC
	0x020D235C ADRP X8, 0x1EA1000
	0x020D2360 LDR X8, [X8 + 0x518]
	0x020D2364 MOV W20, W0
	0x020D2368 LDR X8, [X8]
	0x020D236C LDR W9, [X8 + 0xE0]
	0x020D2370 CBNZ W9, 0x20D237C
	0x020D2374 MOV X0, X8
	0x020D2378 BL 0x1B6E8F8
	0x020D237C MOV X0, X19
	0x020D2380 MOV W1, W20
	0x020D2384 MOV X2, X31
	0x020D2388 BL 0x31E2B60
	0x020D238C LDP X20, X19, [X31 + 0x20]
	0x020D2390 LDR X30, [X31 + 0x10]
	0x020D2394 ADD X31, X31, 0x30
	0x020D2398 RET
	0x020D239C STR X30, [X31 - 0x20]!
	0x020D23A0 STP X20, X19, [X31 + 0x10]
	0x020D23A4 STR S0, [X31 + 0xC]
	0x020D23A8 LDR X8, [X1 + 0x38]
	0x020D23AC MOV X19, X0
	0x020D23B0 CBNZ X8, 0x20D23D8
	0x020D23B4 ADRP X0, 0x1EA1000
	0x020D23B8 LDR X0, [X0 + 0x518]
	0x020D23BC MOV X20, X1
	0x020D23C0 BL 0x1B6E7F0
	0x020D23C4 LDR X8, [X20 + 0x38]
	0x020D23C8 CBNZ X8, 0x20D23D8
	0x020D23CC MOV X0, X20
	0x020D23D0 BL 0x1BB41DC
	0x020D23D4 LDR X8, [X20 + 0x38]
	0x020D23D8 LDR X1, [X8 + 0x8]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X8, [X2+56]
	009 Move X20, X2
	010 Move X21, X1
	011 Move X22, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {32}
	014 Move X0, 0x1E7F000
	015 Move X0, [X0+2160]
	016 Call 0x1B6F7F0
	017 Move X0, 0x1E7F000
	018 Move X0, [X0+2168]
	019 Call 0x1B6F7F0
	020 Move X0, 0x1E7F000
	021 Move X0, [X0+2176]
	022 Call 0x1B6F7F0
	023 Move X0, 0x1E7F000
	024 Move X0, [X0+2192]
	025 Call 0x1B6F7F0
	026 Move X8, [X20+56]
	027 Compare X8, 0
	028 JumpIfNotEqual {32}
	029 Move X0, X20
	030 Call 0x1BB51DC
	031 Move X8, [X20+56]
	032 Move [X31+32], X31
	033 Move [X31+40], X31
	034 Move [X31+48], X31
	035 Move X0, [X8]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1BB5180
	042 Call 0x1B6FA0C
	043 Move X8, [X20+56]
	044 Move X19, X0
	045 Move X1, [X8+8]
	046 Call List`1<Object>..ctor, X0
	047 Move X0, X22
	048 Move X1, X21
	049 Move X2, X31
	050 Call GenGraph.GetNodeConnections, X0, X1
	051 Compare X0, 0
	052 JumpIfEqual {159}
	053 Move X8, 0x1E7F000
	054 Move X8, [X8+2192]
	055 Move X1, [X8]
	056 Add X8, X31, 8
	057 Call List`1<Object>.GetEnumerator, X0
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 Move X8, [X31+24]
	060 Move X23, 0x1E7F000
	061 Move [X31+2], V0
	062 Move [X31+48], X8
	063 Move X23, [X23+2168]
	064 Move X1, [X23]
	065 Add X0, X31, 32
	066 Call Enumerator<Object>.MoveNext, X0
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {140}
	071 Move X8, [X20+56]
	072 Move X21, [X31+48]
	073 Move X1, [X8+16]
	074 Move W8, [X1+309]
	075 Move TEMP, X8
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {82}
	079 Move X0, X1
	080 Call 0x1BB5180
	081 Move X1, X0
	082 Move X0, X21
	083 Call 0x1B6F8FC
	084 Compare X0, 0
	085 JumpIfEqual {64}
	086 Compare X19, 0
	087 JumpIfEqual {154}
	088 Move X8, [X20+56]
	089 Move X1, [X8+16]
	090 Move W8, [X1+309]
	091 Move TEMP, X8
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfEqual {98}
	095 Move X0, X1
	096 Call 0x1BB5180
	097 Move X1, X0
	098 Move X0, X21
	099 Call 0x1B6F8FC
	100 Move X8, [X20+56]
	101 Move X21, X0
	102 Move X22, [X8+16]
	103 Move W8, [X22+309]
	104 Move TEMP, X8
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfEqual {111}
	108 Move X0, X22
	109 Call 0x1BB5180
	110 Move X22, X0
	111 Compare X21, 0
	112 JumpIfEqual {119}
	113 Move X0, X21
	114 Move X1, X22
	115 Call 0x1B6F8FC
	116 Move X1, X0
	117 Compare X1, 0
	118 JumpIfNotEqual {120}
	119 Move X1, X31
	120 Move X9, [X20+56]
	121 Move W10, [X19+28]
	122 Move X8, [X19+16]
	123 Move X9, [X9+24]
	124 Add W10, W10, 1
	125 Move [X19+28], W10
	126 Compare X8, 0
	127 JumpIfEqual {155}
	128 NotImplemented "Instruction LDRSW not yet implemented."
	129 Move W11, [X8+24]
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Add W9, W10, 1
	132 Add X8, X8, X10
	133 Move [X19+24], W9
	134 Move [X8+32], X1
	135 Move X8, [X9+32]
	136 Move X8, [X8+192]
	137 Move X2, [X8+112]
	138 Move X0, X19
	139 Call List`1<Object>.AddWithResize, X0, X1
	140 Move X8, 0x1E7F000
	141 Move X8, [X8+2160]
	142 Add X0, X31, 32
	143 Move X1, [X8]
	144 Call Enumerator<Object>.Dispose, X0
	145 Move X0, X19
	146 Move X20, [X31+96]
	147 Move X19, [X31+104]
	148 Move X22, [X31+80]
	149 Move X21, [X31+88]
	150 Move X30, [X31+64]
	151 Move X23, [X31+72]
	152 Add X31, X31, 112
	153 Return X0
	154 Call 0x1B6FA1C
	155 Call 0x1B6FA1C
	156 Move X0, X21
	157 Move X1, X22
	158 Call 0x1B6FCDC
	159 Call 0x1B6FA1C
	160 Move X20, X0
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X0, X20
	163 Call 0x3D1A840
	164 Move X21, [X0]
	165 Call 0x3D1A850
	166 Move X8, 0x1E7F000
	167 Move X8, [X8+2160]
	168 Add X0, X31, 32
	169 Move X1, [X8]
	170 Call Enumerator<Object>.Dispose, X0
	171 Compare X21, 0
	172 JumpIfEqual {145}
	173 Move X0, X21
	174 Call 0x1B6FA14
	175 Move X21, X31
	176 Move X20, X0
	177 Move X8, 0x1E7F000
	178 Move X8, [X8+2160]
	179 Move X1, [X8]
	180 Add X0, X31, 32
	181 Call Enumerator<Object>.Dispose, X0
	182 Compare X21, 0
	183 JumpIfNotEqual {186}
	184 Move X0, X20
	185 Call 0x1C8518C
	186 Move X0, X21
	187 Call 0x1B6FA14
	188 Call 0x18F56A8

Method: System.Collections.Generic.List`1<T> GetNodesOfType()

Disassembly:
	0x020D23DC ADD X0, X31, 0xC
	0x020D23E0 BL 0x31F94B0
	0x020D23E4 ADRP X8, 0x1EA1000
	0x020D23E8 LDR X8, [X8 + 0x518]
	0x020D23EC MOV W20, W0
	0x020D23F0 LDR X8, [X8]
	0x020D23F4 LDR W9, [X8 + 0xE0]
	0x020D23F8 CBNZ W9, 0x20D2404
	0x020D23FC MOV X0, X8
	0x020D2400 BL 0x1B6E8F8
	0x020D2404 MOV X0, X19
	0x020D2408 MOV W1, W20
	0x020D240C MOV X2, X31
	0x020D2410 BL 0x31E2B60
	0x020D2414 LDP X20, X19, [X31 + 0x10]
	0x020D2418 LDR X30, [X31], #0x20
	0x020D241C RET
	0x020D2420 SUB X31, X31, 0x40
	0x020D2424 STP X30, X23, [X31 + 0x10]
	0x020D2428 STP X22, X21, [X31 + 0x20]
	0x020D242C STP X20, X19, [X31 + 0x30]
	0x020D2430 STP S0, S1, [X31]
	0x020D2434 STP S2, S3, [X31 + 0x8]
	0x020D2438 LDR X8, [X1 + 0x38]
	0x020D243C ADD X9, X31, 0x0
	0x020D2440 MOV X19, X0
	0x020D2444 ORR X23, X9, 0x7
	0x020D2448 ADD X21, X9, 0x8
	0x020D244C ADD X20, X9, 0xC
	0x020D2450 CBNZ X8, 0x20D2474
	0x020D2454 ADRP X0, 0x1EA1000
	0x020D2458 LDR X0, [X0 + 0x518]
	0x020D245C MOV X22, X1
	0x020D2460 BL 0x1B6E7F0
	0x020D2464 LDR X8, [X22 + 0x38]
	0x020D2468 CBNZ X8, 0x20D2474
	0x020D246C MOV X0, X22
	0x020D2470 BL 0x1BB41DC
	0x020D2474 ADD X0, X31, 0x0
	0x020D2478 MOV X1, X31
	0x020D247C BL 0x31F94B0
	0x020D2480 MOV W22, W0
	0x020D2484 MOV X0, X23
	0x020D2488 MOV X1, X31
	0x020D248C BL 0x31F94B0
	0x020D2490 MOV W23, W0
	0x020D2494 MOV X0, X21
	0x020D2498 MOV X1, X31
	0x020D249C BL 0x31F94B0
	0x020D24A0 MOV W21, W0
	0x020D24A4 MOV X0, X20
	0x020D24A8 MOV X1, X31
	0x020D24AC BL 0x31F94B0
	0x020D24B0 ADRP X8, 0x1EA1000
	0x020D24B4 LDR X8, [X8 + 0x518]
	0x020D24B8 MOV W20, W0
	0x020D24BC LDR X8, [X8]
	0x020D24C0 LDR W9, [X8 + 0xE0]
	0x020D24C4 CBNZ W9, 0x20D24D0
	0x020D24C8 MOV X0, X8
	0x020D24CC BL 0x1B6E8F8
	0x020D24D0 EOR W8, W22, W23, 0x2
	0x020D24D4 EOR W8, W8, W21, 0x2
	0x020D24D8 EOR W1, W8, W20, 0x1
	0x020D24DC MOV X0, X19
	0x020D24E0 MOV X2, X31
	0x020D24E4 BL 0x31E2B60
	0x020D24E8 LDP X20, X19, [X31 + 0x30]
	0x020D24EC LDP X22, X21, [X31 + 0x20]
	0x020D24F0 LDP X30, X23, [X31 + 0x10]
	0x020D24F4 ADD X31, X31, 0x40
	0x020D24F8 RET
	0x020D24FC STP X29, X30, [X31 - 0x50]!
	0x020D2500 STP X26, X25, [X31 + 0x10]
	0x020D2504 STP X24, X23, [X31 + 0x20]
	0x020D2508 STP X22, X21, [X31 + 0x30]
	0x020D250C STP X20, X19, [X31 + 0x40]
	0x020D2510 ADD X29, X31, 0x0
	0x020D2514 SUB X31, X31, 0x20
	0x020D2518 MRS X25, 0xC000
	0x020D251C LDR X8, [X25 + 0x28]
	0x020D2520 MOV X21, X2
	0x020D2524 MOV X20, X1
	0x020D2528 MOV X19, X0
	0x020D252C STUR X8, [X29 - 0x8]
	0x020D2530 STUR X1, [X29 - 0x18]
	0x020D2534 LDR X26, [X2 + 0x38]
	0x020D2538 CBNZ X26, 0x20D255C
	0x020D253C ADRP X0, 0x1EA1000
	0x020D2540 LDR X0, [X0 + 0x518]
	0x020D2544 BL 0x1B6E7F0
	0x020D2548 LDR X26, [X21 + 0x38]
	0x020D254C CBNZ X26, 0x20D255C
	0x020D2550 MOV X0, X21
	0x020D2554 BL 0x1BB41DC
	0x020D2558 LDR X26, [X21 + 0x38]
	0x020D255C LDR X0, [X26]
	0x020D2560 LDR W23, [X0 + 0xFC]
	0x020D2564 LDRB W9, [X0 + 0x135]
	0x020D2568 TBNZ X9, 0x0, 0x20D2580
	0x020D256C BL 0x1BB4180
	0x020D2570 LDR X26, [X21 + 0x38]
	0x020D2574 LDR W8, [X0 + 0xFC]
	0x020D2578 LDR X0, [X26]
	0x020D257C B 0x20D2584
	0x020D2580 MOV W8, W23
	0x020D2584 ADD W8, W8, 0x10
	0x020D2588 ADD X8, X8, 0xF
	0x020D258C ADD X9, X31, 0x0
	0x020D2590 AND X8, X8, 0x1FFFFFFFF
	0x020D2594 SUB X22, X9, X8
	0x020D2598 ADD X31, X22, 0x0
	0x020D259C ADD X9, X23, 0xF
	0x020D25A0 ADD X8, X31, 0x0
	0x020D25A4 AND X9, X9, 0x1FFFFFFFF
	0x020D25A8 SUB X24, X8, X9
	0x020D25AC ADD X31, X24, 0x0
	0x020D25B0 LDR W8, [X0 + 0x28]
	0x020D25B4 MOV X0, X24
	0x020D25B8 MOV X2, X23
	0x020D25BC CMP W8, 0x0
	0x020D25C0 SUB X8, X29, 0x18
	0x020D25C4 CSEL X1, X20, X8, LT
	0x020D25C8 BL 0x3D198D0
	0x020D25CC LDR X0, [X26]
	0x020D25D0 MOV X1, X24
	0x020D25D4 BL 0x1B6E9D0
	0x020D25D8 TBZ X0, 0x0, 0x20D2624
	0x020D25DC LDR X8, [X21 + 0x38]
	0x020D25E0 LDR X0, [X8]
	0x020D25E4 LDRB W9, [X0 + 0x135]
	0x020D25E8 TBNZ X9, 0x0, 0x20D25F8
	0x020D25EC BL 0x1BB4180
	0x020D25F0 LDR X8, [X21 + 0x38]
	0x020D25F4 LDUR X20, [X29 - 0x18]
	0x020D25F8 LDP X9, X1, [X8]
	0x020D25FC SUB X8, X29, 0x18
	0x020D2600 SUB X5, X29, 0xC
	0x020D2604 MOV X2, X22
	0x020D2608 LDR W9, [X9 + 0x28]
	0x020D260C MOV X4, X31
	0x020D2610 CMP W9, 0x0
	0x020D2614 CSEL X3, X20, X8, LT
	0x020D2618 BL 0x1B6F224
	0x020D261C LDUR W20, [X29 - 0xC]
	0x020D2620 B 0x20D2628
	0x020D2624 MOV W20, W31
	0x020D2628 ADRP X8, 0x1EA1000
	0x020D262C LDR X8, [X8 + 0x518]
	0x020D2630 LDR X0, [X8]
	0x020D2634 LDR W8, [X0 + 0xE0]
	0x020D2638 CBNZ W8, 0x20D2640
	0x020D263C BL 0x1B6E8F8
	0x020D2640 MOV X0, X19
	0x020D2644 MOV W1, W20
	0x020D2648 MOV X2, X31
	0x020D264C BL 0x31E2B60
	0x020D2650 LDR X8, [X25 + 0x28]
	0x020D2654 LDUR X9, [X29 - 0x8]
	0x020D2658 CMP X8, X9
	0x020D265C B.NE 0x20D267C

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X8, [X1+56]
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {31}
	013 Move X0, 0x1EA2000
	014 Move X0, [X0+1200]
	015 Call 0x1B6F7F0
	016 Move X0, 0x1EA2000
	017 Move X0, [X0+1208]
	018 Call 0x1B6F7F0
	019 Move X0, 0x1EA2000
	020 Move X0, [X0+1216]
	021 Call 0x1B6F7F0
	022 Move X0, 0x1EA2000
	023 Move X0, [X0+1224]
	024 Call 0x1B6F7F0
	025 Move X8, [X20+56]
	026 Compare X8, 0
	027 JumpIfNotEqual {31}
	028 Move X0, X20
	029 Call 0x1BB51DC
	030 Move X8, [X20+56]
	031 Move [X31+32], X31
	032 Move [X31+40], X31
	033 Move [X31+48], X31
	034 Move X0, [X8]
	035 Move W8, [X0+309]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {41}
	040 Call 0x1BB5180
	041 Call 0x1B6FA0C
	042 Move X8, [X20+56]
	043 Move X19, X0
	044 Move X1, [X8+8]
	045 Call List`1<Object>..ctor, X0
	046 Move X0, [X21+24]
	047 Compare X0, 0
	048 JumpIfEqual {155}
	049 Move X8, 0x1EA2000
	050 Move X8, [X8+1224]
	051 Move X1, [X8]
	052 Add X8, X31, 8
	053 Call List`1<Object>.GetEnumerator, X0
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 Move X8, [X31+24]
	056 Move X23, 0x1EA2000
	057 Move [X31+2], V0
	058 Move [X31+48], X8
	059 Move X23, [X23+1208]
	060 Move X1, [X23]
	061 Add X0, X31, 32
	062 Call Enumerator<Object>.MoveNext, X0
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {136}
	067 Move X8, [X20+56]
	068 Move X21, [X31+48]
	069 Move X1, [X8+16]
	070 Move W8, [X1+309]
	071 Move TEMP, X8
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {78}
	075 Move X0, X1
	076 Call 0x1BB5180
	077 Move X1, X0
	078 Move X0, X21
	079 Call 0x1B6F8FC
	080 Compare X0, 0
	081 JumpIfEqual {60}
	082 Compare X19, 0
	083 JumpIfEqual {150}
	084 Move X8, [X20+56]
	085 Move X1, [X8+16]
	086 Move W8, [X1+309]
	087 Move TEMP, X8
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {94}
	091 Move X0, X1
	092 Call 0x1BB5180
	093 Move X1, X0
	094 Move X0, X21
	095 Call 0x1B6F8FC
	096 Move X8, [X20+56]
	097 Move X21, X0
	098 Move X22, [X8+16]
	099 Move W8, [X22+309]
	100 Move TEMP, X8
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {107}
	104 Move X0, X22
	105 Call 0x1BB5180
	106 Move X22, X0
	107 Compare X21, 0
	108 JumpIfEqual {115}
	109 Move X0, X21
	110 Move X1, X22
	111 Call 0x1B6F8FC
	112 Move X1, X0
	113 Compare X1, 0
	114 JumpIfNotEqual {116}
	115 Move X1, X31
	116 Move X9, [X20+56]
	117 Move W10, [X19+28]
	118 Move X8, [X19+16]
	119 Move X9, [X9+24]
	120 Add W10, W10, 1
	121 Move [X19+28], W10
	122 Compare X8, 0
	123 JumpIfEqual {151}
	124 NotImplemented "Instruction LDRSW not yet implemented."
	125 Move W11, [X8+24]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Add W9, W10, 1
	128 Add X8, X8, X10
	129 Move [X19+24], W9
	130 Move [X8+32], X1
	131 Move X8, [X9+32]
	132 Move X8, [X8+192]
	133 Move X2, [X8+112]
	134 Move X0, X19
	135 Call List`1<Object>.AddWithResize, X0, X1
	136 Move X8, 0x1EA2000
	137 Move X8, [X8+1200]
	138 Add X0, X31, 32
	139 Move X1, [X8]
	140 Call Enumerator<Object>.Dispose, X0
	141 Move X0, X19
	142 Move X20, [X31+96]
	143 Move X19, [X31+104]
	144 Move X22, [X31+80]
	145 Move X21, [X31+88]
	146 Move X30, [X31+64]
	147 Move X23, [X31+72]
	148 Add X31, X31, 112
	149 Return X0
	150 Call 0x1B6FA1C
	151 Call 0x1B6FA1C
	152 Move X0, X21
	153 Move X1, X22
	154 Call 0x1B6FCDC
	155 Call 0x1B6FA1C
	156 Move X20, X0
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move X0, X20
	159 Call 0x3D1A840
	160 Move X21, [X0]
	161 Call 0x3D1A850
	162 Move X8, 0x1EA2000
	163 Move X8, [X8+1200]
	164 Add X0, X31, 32
	165 Move X1, [X8]
	166 Call Enumerator<Object>.Dispose, X0
	167 Compare X21, 0
	168 JumpIfEqual {141}
	169 Move X0, X21
	170 Call 0x1B6FA14
	171 Move X21, X31
	172 Move X20, X0
	173 Move X8, 0x1EA2000
	174 Move X8, [X8+1200]
	175 Move X1, [X8]
	176 Add X0, X31, 32
	177 Call Enumerator<Object>.Dispose, X0
	178 Compare X21, 0
	179 JumpIfNotEqual {182}
	180 Move X0, X20
	181 Call 0x1C8518C
	182 Move X0, X21
	183 Call 0x1B6FA14
	184 Call 0x18F56A8

Method: System.Collections.Generic.List`1<System.ValueTuple`2<System.String, System.Type>> GraphNodeTypes()

Disassembly:
	0x01CF7200 CBZ X21, 0x1CF72A0
	0x01CF7204 LDR X8, [X21]
	0x01CF7208 MOV X0, X21
	0x01CF720C LDP X9, X1, [X8 + 0x168]
	0x01CF7210 BLR X9
	0x01CF7214 MOV X1, X0
	0x01CF7218 B 0x1CF72A4
	0x01CF721C CBZ X19, 0x1CF72E8
	0x01CF7220 LDR X10, [X19]
	0x01CF7224 LDRB W11, [X10 + 0x130]
	0x01CF7228 CMP W11, W9
	0x01CF722C B.CC 0x1CF7244
	0x01CF7230 LDR X12, [X10 + 0xC8]
	0x01CF7234 ADD X9, X12, X9, 0x3, LSL
	0x01CF7238 LDUR X9, [X9 - 0x8]
	0x01CF723C CMP X9, X8
	0x01CF7240 B.EQ 0x1CF7334
	0x01CF7244 ADRP X8, 0x2259000
	0x01CF7248 LDR X8, [X8 + 0x950]
	0x01CF724C LDR X8, [X8]
	0x01CF7250 LDRB W9, [X8 + 0x130]
	0x01CF7254 CMP W11, W9
	0x01CF7258 B.CC 0x1CF7270
	0x01CF725C LDR X12, [X10 + 0xC8]
	0x01CF7260 ADD X9, X12, X9, 0x3, LSL
	0x01CF7264 LDUR X9, [X9 - 0x8]
	0x01CF7268 CMP X9, X8
	0x01CF726C B.EQ 0x1CF7334
	0x01CF7270 ADRP X8, 0x2259000
	0x01CF7274 LDR X8, [X8 + 0x968]
	0x01CF7278 LDR X8, [X8]
	0x01CF727C LDRB W9, [X8 + 0x130]
	0x01CF7280 CMP W11, W9
	0x01CF7284 B.CC 0x1CF72E8
	0x01CF7288 LDR X10, [X10 + 0xC8]
	0x01CF728C ADD X9, X10, X9, 0x3, LSL
	0x01CF7290 LDUR X9, [X9 - 0x8]
	0x01CF7294 CMP X9, X8
	0x01CF7298 B.NE 0x1CF72E8
	0x01CF729C B 0x1CF7334
	0x01CF72A0 MOV X1, X31
	0x01CF72A4 ADRP X8, 0x2259000
	0x01CF72A8 LDR X8, [X8 + 0x970]
	0x01CF72AC MOV X0, X19
	0x01CF72B0 MOV X3, X31
	0x01CF72B4 LDR X2, [X8]
	0x01CF72B8 BL 0x3090300
	0x01CF72BC ADRP X8, 0x2256000
	0x01CF72C0 LDR X8, [X8 + 0x8B8]
	0x01CF72C4 MOV X19, X0
	0x01CF72C8 LDR X8, [X8]
	0x01CF72CC LDR W9, [X8 + 0xE0]
	0x01CF72D0 CBNZ W9, 0x1CF72DC
	0x01CF72D4 MOV X0, X8
	0x01CF72D8 BL 0x1B6E8F8
	0x01CF72DC MOV X0, X19
	0x01CF72E0 MOV X1, X31
	0x01CF72E4 BL 0x3A6F5F8
	0x01CF72E8 MOV W0, W31
	0x01CF72EC LDP X20, X19, [X31 + 0x20]
	0x01CF72F0 LDP X22, X21, [X31 + 0x10]
	0x01CF72F4 LDP X30, X23, [X31], #0x30
	0x01CF72F8 RET
	0x01CF72FC CBZ X20, 0x1CF72E8
	0x01CF7300 ADRP X9, 0x2259000
	0x01CF7304 LDR X9, [X9 + 0x950]
	0x01CF7308 LDR X10, [X20]
	0x01CF730C LDR X9, [X9]
	0x01CF7310 LDRB W12, [X10 + 0x130]
	0x01CF7314 LDRB W11, [X9 + 0x130]
	0x01CF7318 CMP W12, W11
	0x01CF731C B.CC 0x1CF7190
	0x01CF7320 LDR X10, [X10 + 0xC8]
	0x01CF7324 ADD X10, X10, X11, 0x3, LSL
	0x01CF7328 LDUR X10, [X10 - 0x8]
	0x01CF732C CMP X10, X9
	0x01CF7330 B.NE 0x1CF7190
	0x01CF7334 MOVZ W0, 0x1
	0x01CF7338 B 0x1CF72EC
	0x01CF733C MOVZ W8, 0x1
	0x01CF7340 MOVZ W9, 0xA
	0x01CF7344 MOV X1, X31
	0x01CF7348 STRB W8, [X0 + 0x28]
	0x01CF734C STR W9, [X0 + 0x2C]
	0x01CF7350 B 0x3036458
	0x01CF7354 STR X30, [X31 - 0x30]!
	0x01CF7358 STP X22, X21, [X31 + 0x10]
	0x01CF735C STP X20, X19, [X31 + 0x20]
	0x01CF7360 ADRP X21, 0x252C000
	0x01CF7364 ADRP X22, 0x2259000
	0x01CF7368 ADRP X20, 0x2259000
	0x01CF736C LDRB W8, [X21 + 0x6F2]
	0x01CF7370 LDR X22, [X22 + 0x980]
	0x01CF7374 LDR X20, [X20 + 0x988]
	0x01CF7378 MOV X19, X0
	0x01CF737C TBNZ X8, 0x0, 0x1CF73AC
	0x01CF7380 ADRP X0, 0x2259000
	0x01CF7384 LDR X0, [X0 + 0x990]
	0x01CF7388 BL 0x1B6E7F0
	0x01CF738C ADRP X0, 0x2259000
	0x01CF7390 LDR X0, [X0 + 0x988]
	0x01CF7394 BL 0x1B6E7F0
	0x01CF7398 ADRP X0, 0x2259000
	0x01CF739C LDR X0, [X0 + 0x980]
	0x01CF73A0 BL 0x1B6E7F0
	0x01CF73A4 MOVZ W8, 0x1
	0x01CF73A8 STRB W8, [X21 + 0x6F2]
	0x01CF73AC LDR X0, [X22]
	0x01CF73B0 BL 0x1B6EA0C
	0x01CF73B4 LDR X1, [X20]
	0x01CF73B8 MOV X20, X0
	0x01CF73BC BL 0x2ECFDD8
	0x01CF73C0 CBZ X20, 0x1CF7448
	0x01CF73C4 ADRP X9, 0x2259000
	0x01CF73C8 LDR X9, [X9 + 0x990]
	0x01CF73CC LDR W11, [X20 + 0x1C]
	0x01CF73D0 LDR X8, [X20 + 0x10]
	0x01CF73D4 LDR X10, [X9]
	0x01CF73D8 ADD W9, W11, 0x1
	0x01CF73DC STR W9, [X20 + 0x1C]
	0x01CF73E0 CBZ X8, 0x1CF7448
	0x01CF73E4 LDRSW X9, [X20 + 0x18]
	0x01CF73E8 LDR W11, [X8 + 0x18]
	0x01CF73EC CMP W9, W11
	0x01CF73F0 B.CS 0x1CF7410
	0x01CF73F4 ADRP X10, 0xFFFFFFFFFEDB2000
	0x01CF73F8 LDR V0, [X10 + 0xE4]
	0x01CF73FC ADD W10, W9, 0x1
	0x01CF7400 ADD X8, X8, X9, 0x4, LSL
	0x01CF7404 STR W10, [X20 + 0x18]
	0x01CF7408 STR V0, [X8 + 0x2]
	0x01CF740C B 0x1CF742C
	0x01CF7410 LDR X8, [X10 + 0x20]
	0x01CF7414 MOVZ W2, 0x3F800000
	0x01CF7418 MOV X0, X20
	0x01CF741C MOV X1, X31
	0x01CF7420 LDR X8, [X8 + 0xC0]
	0x01CF7424 LDR X3, [X8 + 0x70]
	0x01CF7428 BL 0x2ED05E4
	0x01CF742C STR X20, [X19 + 0x18]
	0x01CF7430 MOV X0, X19
	0x01CF7434 LDP X20, X19, [X31 + 0x20]
	0x01CF7438 LDP X22, X21, [X31 + 0x10]
	0x01CF743C MOV X1, X31
	0x01CF7440 LDR X30, [X31], #0x30
	0x01CF7444 B 0x3A9EFE0
	0x01CF7448 BL 0x1B6EA1C
	0x01CF744C SUB X31, X31, 0x30
	0x01CF7450 STR X30, [X31 + 0x10]
	0x01CF7454 STP X20, X19, [X31 + 0x20]
	0x01CF7458 ADRP X20, 0x252C000
	0x01CF745C ADRP X19, 0x2259000
	0x01CF7460 LDRB W8, [X20 + 0x6F3]
	0x01CF7464 LDR X19, [X19 + 0x998]
	0x01CF7468 TBNZ X8, 0x0, 0x1CF7480
	0x01CF746C ADRP X0, 0x2259000
	0x01CF7470 LDR X0, [X0 + 0x998]
	0x01CF7474 BL 0x1B6E7F0
	0x01CF7478 MOVZ W8, 0x1
	0x01CF747C STRB W8, [X20 + 0x6F3]
	0x01CF7480 LDR X0, [X19]
	0x01CF7484 ADD X1, X31, 0x0
	0x01CF7488 MOV X2, X31
	0x01CF748C STP X31, X31, [X31]
	0x01CF7490 BL 0x3A8EB28
	0x01CF7494 TBZ X0, 0x0, 0x1CF74A4
	0x01CF7498 LDP S0, S1, [X31]
	0x01CF749C LDP S2, S3, [X31 + 0x8]
	0x01CF74A0 B 0x1CF74BC
	0x01CF74A4 ADRP X8, 0xFFFFFFFFFEDB2000
	0x01CF74A8 ADRP X9, 0xFFFFFFFFFEDB2000
	0x01CF74AC LDR V2, [X8 + 0xA28]
	0x01CF74B0 LDR V1, [X9 + 0x994]
	0x01CF74B4 FMOV S0, 1
	0x01CF74B8 FMOV S3, 1
	0x01CF74BC LDP X20, X19, [X31 + 0x20]
	0x01CF74C0 LDR X30, [X31 + 0x10]
	0x01CF74C4 ADD X31, X31, 0x30
	0x01CF74C8 RET
	0x01CF74CC FMOV S0, W31
	0x01CF74D0 FMOV S1, W31
	0x01CF74D4 FMOV S2, W31
	0x01CF74D8 FMOV S3, 1
	0x01CF74DC RET
	0x01CF74E0 STR X30, [X31 - 0x20]!
	0x01CF74E4 STP X20, X19, [X31 + 0x10]
	0x01CF74E8 ADRP X20, 0x252C000
	0x01CF74EC ADRP X19, 0x2259000
	0x01CF74F0 LDRB W8, [X20 + 0x6F4]
	0x01CF74F4 LDR X19, [X19 + 0x720]
	0x01CF74F8 TBNZ X8, 0x0, 0x1CF7510
	0x01CF74FC ADRP X0, 0x2259000
	0x01CF7500 LDR X0, [X0 + 0x720]
	0x01CF7504 BL 0x1B6E7F0
	0x01CF7508 MOVZ W8, 0x1
	0x01CF750C STRB W8, [X20 + 0x6F4]
	0x01CF7510 LDR X0, [X19]
	0x01CF7514 LDR W8, [X0 + 0xE0]
	0x01CF7518 CBNZ W8, 0x1CF7524
	0x01CF751C BL 0x1B6E8F8
	0x01CF7520 LDR X0, [X19]
	0x01CF7524 LDR X8, [X0 + 0xB8]
	0x01CF7528 LDP X20, X19, [X31 + 0x10]
	0x01CF752C LDR X0, [X8 + 0x68]
	0x01CF7530 LDR X30, [X31], #0x20
	0x01CF7534 RET
	0x01CF7538 STR X30, [X31 - 0x30]!
	0x01CF753C STP X22, X21, [X31 + 0x10]
	0x01CF7540 STP X20, X19, [X31 + 0x20]
	0x01CF7544 ADRP X22, 0x252C000
	0x01CF7548 ADRP X21, 0x2256000
	0x01CF754C ADRP X20, 0x2257000
	0x01CF7550 LDRB W8, [X22 + 0x6F5]
	0x01CF7554 LDR X21, [X21 + 0x5F8]
	0x01CF7558 LDR X20, [X20 + 0x788]
	0x01CF755C MOV X19, X0
	0x01CF7560 TBNZ X8, 0x0, 0x1CF7584
	0x01CF7564 ADRP X0, 0x2256000
	0x01CF7568 LDR X0, [X0 + 0x5F8]
	0x01CF756C BL 0x1B6E7F0
	0x01CF7570 ADRP X0, 0x2257000
	0x01CF7574 LDR X0, [X0 + 0x788]
	0x01CF7578 BL 0x1B6E7F0
	0x01CF757C MOVZ W8, 0x1
	0x01CF7580 STRB W8, [X22 + 0x6F5]
	0x01CF7584 LDR W8, [X19 + 0x20]
	0x01CF7588 LDR X0, [X21]
	0x01CF758C ADD X1, X31, 0xC
	0x01CF7590 STR W8, [X31 + 0xC]
	0x01CF7594 BL 0x1B6E900
	0x01CF7598 LDR X8, [X20]
	0x01CF759C MOV X1, X0
	0x01CF75A0 MOV X2, X31
	0x01CF75A4 MOV X0, X8
	0x01CF75A8 BL 0x3087E18
	0x01CF75AC LDP X20, X19, [X31 + 0x20]
	0x01CF75B0 LDP X22, X21, [X31 + 0x10]
	0x01CF75B4 LDR X30, [X31], #0x30
	0x01CF75B8 RET
	0x01CF75BC STR X30, [X31 - 0x30]!
	0x01CF75C0 STP X22, X21, [X31 + 0x10]
	0x01CF75C4 STP X20, X19, [X31 + 0x20]
	0x01CF75C8 ADRP X21, 0x252C000
	0x01CF75CC ADRP X22, 0x2259000
	0x01CF75D0 ADRP X20, 0x2259000
	0x01CF75D4 LDRB W8, [X21 + 0x6F6]
	0x01CF75D8 LDR X22, [X22 + 0x9A0]
	0x01CF75DC LDR X20, [X20 + 0x9A8]
	0x01CF75E0 MOV X19, X0
	0x01CF75E4 TBNZ X8, 0x0, 0x1CF7608
	0x01CF75E8 ADRP X0, 0x2259000
	0x01CF75EC LDR X0, [X0 + 0x9A8]
	0x01CF75F0 BL 0x1B6E7F0
	0x01CF75F4 ADRP X0, 0x2259000
	0x01CF75F8 LDR X0, [X0 + 0x9A0]
	0x01CF75FC BL 0x1B6E7F0
	0x01CF7600 MOVZ W8, 0x1
	0x01CF7604 STRB W8, [X21 + 0x6F6]
	0x01CF7608 LDR X0, [X22]
	0x01CF760C BL 0x1B6EA0C
	0x01CF7610 LDR X1, [X20]
	0x01CF7614 MOV X20, X0
	0x01CF7618 BL 0x2E45D4C
	0x01CF761C STR X20, [X19 + 0x28]
	0x01CF7620 MOV X0, X19
	0x01CF7624 LDP X20, X19, [X31 + 0x20]
	0x01CF7628 LDP X22, X21, [X31 + 0x10]
	0x01CF762C MOV X1, X31
	0x01CF7630 LDR X30, [X31], #0x30
	0x01CF7634 B 0x3036524
	0x01CF7638 SUB X31, X31, 0x30
	0x01CF763C STR X30, [X31 + 0x10]
	0x01CF7640 STP X20, X19, [X31 + 0x20]
	0x01CF7644 ADRP X20, 0x252C000
	0x01CF7648 ADRP X19, 0x2259000
	0x01CF764C LDRB W8, [X20 + 0x6F7]
	0x01CF7650 LDR X19, [X19 + 0x998]
	0x01CF7654 TBNZ X8, 0x0, 0x1CF766C
	0x01CF7658 ADRP X0, 0x2259000
	0x01CF765C LDR X0, [X0 + 0x998]
	0x01CF7660 BL 0x1B6E7F0
	0x01CF7664 MOVZ W8, 0x1
	0x01CF7668 STRB W8, [X20 + 0x6F7]
	0x01CF766C LDR X0, [X19]
	0x01CF7670 ADD X1, X31, 0x0
	0x01CF7674 MOV X2, X31
	0x01CF7678 STP X31, X31, [X31]
	0x01CF767C BL 0x3A8EB28
	0x01CF7680 TBZ X0, 0x0, 0x1CF7690
	0x01CF7684 LDP S0, S1, [X31]
	0x01CF7688 LDP S2, S3, [X31 + 0x8]
	0x01CF768C B 0x1CF76A8

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+104], X23
	004 Move [X31+112], X22
	005 Move [X31+120], X21
	006 Move [X31+128], X20
	007 Move [X31+136], X19
	008 Move X23, 0x252D000
	009 Move X21, 0x225A000
	010 Move X19, 0x225A000
	011 Move X20, 0x225A000
	012 Move X22, 0x2257000
	013 Move W8, [X23+1775]
	014 Move X21, [X21+2200]
	015 Move X19, [X19+2208]
	016 Move X20, [X20+2216]
	017 Move X22, [X22+1376]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {75}
	022 Move X0, 0x225A000
	023 Move X0, [X0+2224]
	024 Call 0x1B6F7F0
	025 Move X0, 0x225A000
	026 Move X0, [X0+2216]
	027 Call 0x1B6F7F0
	028 Move X0, 0x225A000
	029 Move X0, [X0+2232]
	030 Call 0x1B6F7F0
	031 Move X0, 0x225A000
	032 Move X0, [X0+2208]
	033 Call 0x1B6F7F0
	034 Move X0, 0x225A000
	035 Move X0, [X0+2200]
	036 Call 0x1B6F7F0
	037 Move X0, 0x225A000
	038 Move X0, [X0+2240]
	039 Call 0x1B6F7F0
	040 Move X0, 0x225A000
	041 Move X0, [X0+2248]
	042 Call 0x1B6F7F0
	043 Move X0, 0x225A000
	044 Move X0, [X0+2256]
	045 Call 0x1B6F7F0
	046 Move X0, 0x225A000
	047 Move X0, [X0+2264]
	048 Call 0x1B6F7F0
	049 Move X0, 0x2257000
	050 Move X0, [X0+1376]
	051 Call 0x1B6F7F0
	052 Move X0, 0x225A000
	053 Move X0, [X0+2272]
	054 Call 0x1B6F7F0
	055 Move X0, 0x225A000
	056 Move X0, [X0+1816]
	057 Call 0x1B6F7F0
	058 Move X0, 0x225A000
	059 Move X0, [X0+2280]
	060 Call 0x1B6F7F0
	061 Move X0, 0x225A000
	062 Move X0, [X0+2288]
	063 Call 0x1B6F7F0
	064 Move X0, 0x225A000
	065 Move X0, [X0+2296]
	066 Call 0x1B6F7F0
	067 Move X0, 0x225A000
	068 Move X0, [X0+2304]
	069 Call 0x1B6F7F0
	070 Move X0, 0x225A000
	071 Move X0, [X0+2136]
	072 Call 0x1B6F7F0
	073 Move W8, 1
	074 Move [X23+1775], W8
	075 Move X0, [X21]
	076 Move X23, 0x225A000
	077 Move X21, 0x225A000
	078 Move X23, [X23+2136]
	079 Move X21, [X21+2272]
	080 Call 0x1B6FA0C
	081 Move X1, [X19]
	082 Move X19, X0
	083 Call List`1<ValueTuple`2<Object, Object>>..ctor, X0
	084 Move X0, [X22]
	085 Move X20, [X20]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1B6F8F8
	090 Move X0, X20
	091 Move X1, X31
	092 Call Type.GetTypeFromHandle, X0
	093 Move X1, [X23]
	094 Move X3, [X21]
	095 Move X2, X0
	096 Add X0, X31, 80
	097 Move [X31+80], X31
	098 Move [X31+88], X31
	099 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	100 Compare X19, 0
	101 JumpIfEqual {315}
	102 Move X20, 0x225A000
	103 Move X20, [X20+2232]
	104 Move W10, [X19+28]
	105 Move X1, [X31+80]
	106 Move X2, [X31+88]
	107 Move X8, [X19+16]
	108 Move X9, [X20]
	109 Add W10, W10, 1
	110 Move [X19+28], W10
	111 Compare X8, 0
	112 JumpIfEqual {315}
	113 NotImplemented "Instruction LDRSW not yet implemented."
	114 Move W11, [X8+24]
	115 Move X23, 0x225A000
	116 Move X22, 0x225A000
	117 Move X23, [X23+2224]
	118 Move X22, [X22+1816]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Add W9, W10, 1
	121 Add X8, X8, X10
	122 Move [X19+24], W9
	123 Move [X8+32], X1
	124 Move [X8+40], X2
	125 Move X8, [X9+32]
	126 Move X0, X19
	127 Move X8, [X8+192]
	128 Move X3, [X8+112]
	129 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	130 Move X0, [X23]
	131 Move X1, X31
	132 Call Type.GetTypeFromHandle, X0
	133 Move X1, [X22]
	134 Move X3, [X21]
	135 Move X2, X0
	136 Add X0, X31, 64
	137 Move [X31+64], X31
	138 Move [X31+72], X31
	139 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	140 Move W10, [X19+28]
	141 Move X1, [X31+64]
	142 Move X2, [X31+72]
	143 Move X8, [X19+16]
	144 Move X9, [X20]
	145 Add W10, W10, 1
	146 Move [X19+28], W10
	147 Compare X8, 0
	148 JumpIfEqual {315}
	149 NotImplemented "Instruction LDRSW not yet implemented."
	150 Move W11, [X8+24]
	151 Move X23, 0x225A000
	152 Move X22, 0x225A000
	153 Move X23, [X23+2256]
	154 Move X22, [X22+2304]
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Add W9, W10, 1
	157 Add X8, X8, X10
	158 Move [X19+24], W9
	159 Move [X8+32], X1
	160 Move [X8+40], X2
	161 Move X8, [X9+32]
	162 Move X0, X19
	163 Move X8, [X8+192]
	164 Move X3, [X8+112]
	165 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	166 Move X0, [X23]
	167 Move X1, X31
	168 Call Type.GetTypeFromHandle, X0
	169 Move X1, [X22]
	170 Move X3, [X21]
	171 Move X2, X0
	172 Add X0, X31, 48
	173 Move [X31+48], X31
	174 Move [X31+56], X31
	175 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	176 Move W10, [X19+28]
	177 Move X1, [X31+48]
	178 Move X2, [X31+56]
	179 Move X8, [X19+16]
	180 Move X9, [X20]
	181 Add W10, W10, 1
	182 Move [X19+28], W10
	183 Compare X8, 0
	184 JumpIfEqual {315}
	185 NotImplemented "Instruction LDRSW not yet implemented."
	186 Move W11, [X8+24]
	187 Move X23, 0x225A000
	188 Move X22, 0x225A000
	189 Move X23, [X23+2248]
	190 Move X22, [X22+2288]
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Add W9, W10, 1
	193 Add X8, X8, X10
	194 Move [X19+24], W9
	195 Move [X8+32], X1
	196 Move [X8+40], X2
	197 Move X8, [X9+32]
	198 Move X0, X19
	199 Move X8, [X8+192]
	200 Move X3, [X8+112]
	201 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	202 Move X0, [X23]
	203 Move X1, X31
	204 Call Type.GetTypeFromHandle, X0
	205 Move X1, [X22]
	206 Move X3, [X21]
	207 Move X2, X0
	208 Add X0, X31, 32
	209 Move [X31+32], X31
	210 Move [X31+40], X31
	211 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	212 Move W10, [X19+28]
	213 Move X1, [X31+32]
	214 Move X2, [X31+40]
	215 Move X8, [X19+16]
	216 Move X9, [X20]
	217 Add W10, W10, 1
	218 Move [X19+28], W10
	219 Compare X8, 0
	220 JumpIfEqual {315}
	221 NotImplemented "Instruction LDRSW not yet implemented."
	222 Move W11, [X8+24]
	223 Move X23, 0x225A000
	224 Move X22, 0x225A000
	225 Move X23, [X23+2240]
	226 Move X22, [X22+2296]
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Add W9, W10, 1
	229 Add X8, X8, X10
	230 Move [X19+24], W9
	231 Move [X8+32], X1
	232 Move [X8+40], X2
	233 Move X8, [X9+32]
	234 Move X0, X19
	235 Move X8, [X8+192]
	236 Move X3, [X8+112]
	237 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	238 Move X0, [X23]
	239 Move X1, X31
	240 Call Type.GetTypeFromHandle, X0
	241 Move X1, [X22]
	242 Move X3, [X21]
	243 Move X2, X0
	244 Add X0, X31, 16
	245 Move [X31+16], X31
	246 Move [X31+24], X31
	247 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	248 Move W10, [X19+28]
	249 Move X1, [X31+16]
	250 Move X2, [X31+24]
	251 Move X8, [X19+16]
	252 Move X9, [X20]
	253 Add W10, W10, 1
	254 Move [X19+28], W10
	255 Compare X8, 0
	256 JumpIfEqual {315}
	257 NotImplemented "Instruction LDRSW not yet implemented."
	258 Move W11, [X8+24]
	259 Move X23, 0x225A000
	260 Move X22, 0x225A000
	261 Move X23, [X23+2264]
	262 Move X22, [X22+2280]
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Add W9, W10, 1
	265 Add X8, X8, X10
	266 Move [X19+24], W9
	267 Move [X8+32], X1
	268 Move [X8+40], X2
	269 Move X8, [X9+32]
	270 Move X0, X19
	271 Move X8, [X8+192]
	272 Move X3, [X8+112]
	273 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	274 Move X0, [X23]
	275 Move X1, X31
	276 Call Type.GetTypeFromHandle, X0
	277 Move X1, [X22]
	278 Move X3, [X21]
	279 Move X2, X0
	280 Add X0, X31, 0
	281 Move [X31], X31
	282 Move [X31+8], X31
	283 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	284 Move W10, [X19+28]
	285 Move X1, [X31]
	286 Move X2, [X31+8]
	287 Move X8, [X19+16]
	288 Move X9, [X20]
	289 Add W10, W10, 1
	290 Move [X19+28], W10
	291 Compare X8, 0
	292 JumpIfEqual {315}
	293 NotImplemented "Instruction LDRSW not yet implemented."
	294 Move W11, [X8+24]
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Add W9, W10, 1
	297 Add X8, X8, X10
	298 Move [X19+24], W9
	299 Move [X8+32], X1
	300 Move [X8+40], X2
	301 Move X8, [X9+32]
	302 Move X0, X19
	303 Move X8, [X8+192]
	304 Move X3, [X8+112]
	305 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	306 Move X0, X19
	307 Move X20, [X31+128]
	308 Move X19, [X31+136]
	309 Move X22, [X31+112]
	310 Move X21, [X31+120]
	311 Move X30, [X31+96]
	312 Move X23, [X31+104]
	313 Add X31, X31, 144
	314 Return X0
	315 Call 0x1B6FA1C

Method: System.Collections.Generic.Dictionary`2<System.Type, System.Collections.Generic.List`1<System.ValueTuple`2<System.String, System.Type>>> GraphConnectionTypes()

Disassembly:
	0x01CF7690 ADRP X8, 0xFFFFFFFFFEDB2000
	0x01CF7694 ADRP X9, 0xFFFFFFFFFEDB2000
	0x01CF7698 LDR V2, [X8 + 0xA28]
	0x01CF769C LDR V1, [X9 + 0x994]
	0x01CF76A0 FMOV S0, 1
	0x01CF76A4 FMOV S3, 1
	0x01CF76A8 LDP X20, X19, [X31 + 0x20]
	0x01CF76AC LDR X30, [X31 + 0x10]
	0x01CF76B0 ADD X31, X31, 0x30
	0x01CF76B4 RET
	0x01CF76B8 MOV W0, W31
	0x01CF76BC RET
	0x01CF76C0 STP X30, X23, [X31 - 0x30]!
	0x01CF76C4 STP X22, X21, [X31 + 0x10]
	0x01CF76C8 STP X20, X19, [X31 + 0x20]
	0x01CF76CC ADRP X21, 0x252C000
	0x01CF76D0 ADRP X23, 0x2256000
	0x01CF76D4 LDRB W8, [X21 + 0x6F8]
	0x01CF76D8 LDR X23, [X23 + 0x478]
	0x01CF76DC MOV X19, X1
	0x01CF76E0 MOV X20, X0
	0x01CF76E4 TBNZ X8, 0x0, 0x1CF76FC
	0x01CF76E8 ADRP X0, 0x2256000
	0x01CF76EC LDR X0, [X0 + 0x478]
	0x01CF76F0 BL 0x1B6E7F0
	0x01CF76F4 MOVZ W8, 0x1
	0x01CF76F8 STRB W8, [X21 + 0x6F8]
	0x01CF76FC MOV X22, X20
	0x01CF7700 LDR X21, [X22 + 0x18]!
	0x01CF7704 LDR X0, [X23]
	0x01CF7708 LDR W8, [X0 + 0xE0]
	0x01CF770C CBNZ W8, 0x1CF7714
	0x01CF7710 BL 0x1B6E8F8
	0x01CF7714 MOV X0, X21
	0x01CF7718 MOV X1, X19
	0x01CF771C MOV X2, X31
	0x01CF7720 BL 0x3AA0AF0
	0x01CF7724 ADD X9, X20, 0x20
	0x01CF7728 TBNZ X0, 0x0, 0x1CF7760
	0x01CF772C LDR X0, [X23]
	0x01CF7730 LDR X20, [X9]
	0x01CF7734 LDR W8, [X0 + 0xE0]
	0x01CF7738 CBNZ W8, 0x1CF7740
	0x01CF773C BL 0x1B6E8F8
	0x01CF7740 MOV X0, X20
	0x01CF7744 MOV X1, X19
	0x01CF7748 MOV X2, X31
	0x01CF774C BL 0x3AA0AF0
	0x01CF7750 MOV W8, W0
	0x01CF7754 MOV X0, X31
	0x01CF7758 MOV X9, X22
	0x01CF775C TBZ X8, 0x0, 0x1CF7764
	0x01CF7760 LDR X0, [X9]
	0x01CF7764 LDP X20, X19, [X31 + 0x20]
	0x01CF7768 LDP X22, X21, [X31 + 0x10]
	0x01CF776C LDP X30, X23, [X31], #0x30
	0x01CF7770 RET
	0x01CF7774 MOVZ W8, 0x1
	0x01CF7778 MOV X1, X31
	0x01CF777C STR W8, [X0 + 0x28]
	0x01CF7780 B 0x303620C
	0x01CF7784 SUB X31, X31, 0x30
	0x01CF7788 STR X30, [X31 + 0x10]
	0x01CF778C STP X20, X19, [X31 + 0x20]
	0x01CF7790 ADRP X20, 0x252C000
	0x01CF7794 ADRP X19, 0x2259000
	0x01CF7798 LDRB W8, [X20 + 0x6F9]
	0x01CF779C LDR X19, [X19 + 0x9B0]
	0x01CF77A0 TBNZ X8, 0x0, 0x1CF77B8
	0x01CF77A4 ADRP X0, 0x2259000
	0x01CF77A8 LDR X0, [X0 + 0x9B0]
	0x01CF77AC BL 0x1B6E7F0
	0x01CF77B0 MOVZ W8, 0x1
	0x01CF77B4 STRB W8, [X20 + 0x6F9]
	0x01CF77B8 LDR X0, [X19]
	0x01CF77BC ADD X1, X31, 0x0
	0x01CF77C0 MOV X2, X31
	0x01CF77C4 STP X31, X31, [X31]
	0x01CF77C8 BL 0x3A8EB28
	0x01CF77CC TBZ X0, 0x0, 0x1CF77DC
	0x01CF77D0 LDP S0, S1, [X31]
	0x01CF77D4 LDP S2, S3, [X31 + 0x8]
	0x01CF77D8 B 0x1CF77EC
	0x01CF77DC FMOV S1, W31
	0x01CF77E0 FMOV S0, 1
	0x01CF77E4 FMOV S2, W31
	0x01CF77E8 FMOV S3, 1
	0x01CF77EC LDP X20, X19, [X31 + 0x20]
	0x01CF77F0 LDR X30, [X31 + 0x10]
	0x01CF77F4 ADD X31, X31, 0x30
	0x01CF77F8 RET
	0x01CF77FC FMOV S0, W31
	0x01CF7800 FMOV S1, W31
	0x01CF7804 FMOV S2, W31
	0x01CF7808 FMOV S3, 1
	0x01CF780C RET
	0x01CF7810 STR X30, [X31 - 0x20]!
	0x01CF7814 STP X20, X19, [X31 + 0x10]
	0x01CF7818 ADRP X20, 0x252C000
	0x01CF781C ADRP X19, 0x2259000
	0x01CF7820 LDRB W8, [X20 + 0x6FA]
	0x01CF7824 LDR X19, [X19 + 0x720]
	0x01CF7828 TBNZ X8, 0x0, 0x1CF7840
	0x01CF782C ADRP X0, 0x2259000
	0x01CF7830 LDR X0, [X0 + 0x720]
	0x01CF7834 BL 0x1B6E7F0
	0x01CF7838 MOVZ W8, 0x1
	0x01CF783C STRB W8, [X20 + 0x6FA]
	0x01CF7840 LDR X0, [X19]
	0x01CF7844 LDR W8, [X0 + 0xE0]
	0x01CF7848 CBNZ W8, 0x1CF7854
	0x01CF784C BL 0x1B6E8F8
	0x01CF7850 LDR X0, [X19]
	0x01CF7854 LDR X8, [X0 + 0xB8]
	0x01CF7858 LDP X20, X19, [X31 + 0x10]
	0x01CF785C LDR X0, [X8 + 0x60]
	0x01CF7860 LDR X30, [X31], #0x20
	0x01CF7864 RET
	0x01CF7868 B 0x1CF786C
	0x01CF786C STR X30, [X31 - 0x20]!
	0x01CF7870 STP X20, X19, [X31 + 0x10]
	0x01CF7874 ADRP X20, 0x252C000
	0x01CF7878 LDRB W8, [X20 + 0x6FB]
	0x01CF787C MOV X19, X0
	0x01CF7880 TBNZ X8, 0x0, 0x1CF78BC
	0x01CF7884 ADRP X0, 0x2256000
	0x01CF7888 LDR X0, [X0 + 0x5F8]
	0x01CF788C BL 0x1B6E7F0
	0x01CF7890 ADRP X0, 0x2259000
	0x01CF7894 LDR X0, [X0 + 0x9B8]
	0x01CF7898 BL 0x1B6E7F0
	0x01CF789C ADRP X0, 0x2259000
	0x01CF78A0 LDR X0, [X0 + 0x9C0]
	0x01CF78A4 BL 0x1B6E7F0
	0x01CF78A8 ADRP X0, 0x2259000
	0x01CF78AC LDR X0, [X0 + 0x8F0]
	0x01CF78B0 BL 0x1B6E7F0
	0x01CF78B4 MOVZ W8, 0x1
	0x01CF78B8 STRB W8, [X20 + 0x6FB]
	0x01CF78BC LDR X0, [X19 + 0x20]
	0x01CF78C0 LDR W20, [X19 + 0x30]
	0x01CF78C4 MOV X1, X31
	0x01CF78C8 BL 0x30905F0
	0x01CF78CC CMP W20, 0x1
	0x01CF78D0 B.NE 0x1CF78E8
	0x01CF78D4 TBZ X0, 0x0, 0x1CF7928
	0x01CF78D8 ADRP X8, 0x2259000
	0x01CF78DC LDR X8, [X8 + 0x8F0]
	0x01CF78E0 LDR X0, [X8]
	0x01CF78E4 B 0x1CF7970
	0x01CF78E8 TBZ X0, 0x0, 0x1CF7930
	0x01CF78EC ADRP X9, 0x2256000
	0x01CF78F0 LDR W8, [X19 + 0x30]
	0x01CF78F4 LDR X9, [X9 + 0x5F8]
	0x01CF78F8 ADD X1, X31, 0x8
	0x01CF78FC STR W8, [X31 + 0x8]
	0x01CF7900 LDR X0, [X9]
	0x01CF7904 BL 0x1B6E900
	0x01CF7908 ADRP X8, 0x2259000
	0x01CF790C LDR X8, [X8 + 0x9B8]
	0x01CF7910 MOV X1, X0
	0x01CF7914 MOV X2, X31
	0x01CF7918 LDR X8, [X8]
	0x01CF791C MOV X0, X8
	0x01CF7920 BL 0x3087E18
	0x01CF7924 B 0x1CF7970
	0x01CF7928 LDR X0, [X19 + 0x20]
	0x01CF792C B 0x1CF7970
	0x01CF7930 ADRP X9, 0x2256000
	0x01CF7934 LDR X20, [X19 + 0x20]
	0x01CF7938 LDR W8, [X19 + 0x30]
	0x01CF793C LDR X9, [X9 + 0x5F8]
	0x01CF7940 ADD X1, X31, 0xC
	0x01CF7944 STR W8, [X31 + 0xC]
	0x01CF7948 LDR X0, [X9]
	0x01CF794C BL 0x1B6E900
	0x01CF7950 ADRP X8, 0x2259000
	0x01CF7954 LDR X8, [X8 + 0x9C0]
	0x01CF7958 MOV X2, X0
	0x01CF795C MOV X1, X20
	0x01CF7960 MOV X3, X31
	0x01CF7964 LDR X8, [X8]
	0x01CF7968 MOV X0, X8
	0x01CF796C BL 0x3090A1C
	0x01CF7970 LDP X20, X19, [X31 + 0x10]
	0x01CF7974 LDR X30, [X31], #0x20
	0x01CF7978 RET
	0x01CF797C MOVZ W8, 0x1
	0x01CF7980 MOV X1, X31
	0x01CF7984 STR W8, [X0 + 0x30]
	0x01CF7988 B 0x3036524
	0x01CF798C SUB X31, X31, 0x30
	0x01CF7990 STR X30, [X31 + 0x10]
	0x01CF7994 STP X20, X19, [X31 + 0x20]
	0x01CF7998 ADRP X20, 0x252C000
	0x01CF799C ADRP X19, 0x2259000
	0x01CF79A0 LDRB W8, [X20 + 0x6FC]
	0x01CF79A4 LDR X19, [X19 + 0x9B0]
	0x01CF79A8 TBNZ X8, 0x0, 0x1CF79C0
	0x01CF79AC ADRP X0, 0x2259000
	0x01CF79B0 LDR X0, [X0 + 0x9B0]
	0x01CF79B4 BL 0x1B6E7F0
	0x01CF79B8 MOVZ W8, 0x1
	0x01CF79BC STRB W8, [X20 + 0x6FC]
	0x01CF79C0 LDR X0, [X19]
	0x01CF79C4 ADD X1, X31, 0x0
	0x01CF79C8 MOV X2, X31
	0x01CF79CC STP X31, X31, [X31]
	0x01CF79D0 BL 0x3A8EB28
	0x01CF79D4 TBZ X0, 0x0, 0x1CF79E4
	0x01CF79D8 LDP S0, S1, [X31]
	0x01CF79DC LDP S2, S3, [X31 + 0x8]
	0x01CF79E0 B 0x1CF79F4
	0x01CF79E4 FMOV S1, W31
	0x01CF79E8 FMOV S0, 1
	0x01CF79EC FMOV S2, W31
	0x01CF79F0 FMOV S3, 1
	0x01CF79F4 LDP X20, X19, [X31 + 0x20]
	0x01CF79F8 LDR X30, [X31 + 0x10]
	0x01CF79FC ADD X31, X31, 0x30
	0x01CF7A00 RET
	0x01CF7A04 MOV W0, W31
	0x01CF7A08 RET
	0x01CF7A0C STP X30, X23, [X31 - 0x30]!
	0x01CF7A10 STP X22, X21, [X31 + 0x10]
	0x01CF7A14 STP X20, X19, [X31 + 0x20]
	0x01CF7A18 ADRP X21, 0x252C000
	0x01CF7A1C ADRP X23, 0x2256000
	0x01CF7A20 LDRB W8, [X21 + 0x6FD]
	0x01CF7A24 LDR X23, [X23 + 0x478]
	0x01CF7A28 MOV X19, X1
	0x01CF7A2C MOV X20, X0
	0x01CF7A30 TBNZ X8, 0x0, 0x1CF7A48
	0x01CF7A34 ADRP X0, 0x2256000
	0x01CF7A38 LDR X0, [X0 + 0x478]
	0x01CF7A3C BL 0x1B6E7F0
	0x01CF7A40 MOVZ W8, 0x1
	0x01CF7A44 STRB W8, [X21 + 0x6FD]
	0x01CF7A48 MOV X22, X20
	0x01CF7A4C LDR X21, [X22 + 0x18]!
	0x01CF7A50 LDR X0, [X23]
	0x01CF7A54 LDR W8, [X0 + 0xE0]
	0x01CF7A58 CBNZ W8, 0x1CF7A60
	0x01CF7A5C BL 0x1B6E8F8
	0x01CF7A60 MOV X0, X21
	0x01CF7A64 MOV X1, X19
	0x01CF7A68 MOV X2, X31
	0x01CF7A6C BL 0x3AA0AF0
	0x01CF7A70 ADD X9, X20, 0x20
	0x01CF7A74 TBNZ X0, 0x0, 0x1CF7AAC
	0x01CF7A78 LDR X0, [X23]
	0x01CF7A7C LDR X20, [X9]
	0x01CF7A80 LDR W8, [X0 + 0xE0]
	0x01CF7A84 CBNZ W8, 0x1CF7A8C
	0x01CF7A88 BL 0x1B6E8F8
	0x01CF7A8C MOV X0, X20
	0x01CF7A90 MOV X1, X19
	0x01CF7A94 MOV X2, X31
	0x01CF7A98 BL 0x3AA0AF0
	0x01CF7A9C MOV W8, W0
	0x01CF7AA0 MOV X0, X31
	0x01CF7AA4 MOV X9, X22
	0x01CF7AA8 TBZ X8, 0x0, 0x1CF7AB0
	0x01CF7AAC LDR X0, [X9]
	0x01CF7AB0 LDP X20, X19, [X31 + 0x20]
	0x01CF7AB4 LDP X22, X21, [X31 + 0x10]
	0x01CF7AB8 LDP X30, X23, [X31], #0x30
	0x01CF7ABC RET
	0x01CF7AC0 MOV X1, X31
	0x01CF7AC4 B 0x303620C
	0x01CF7AC8 STR X30, [X31 - 0x20]!
	0x01CF7ACC STP X20, X19, [X31 + 0x10]
	0x01CF7AD0 ADRP X20, 0x252C000
	0x01CF7AD4 LDRB W8, [X20 + 0x6FE]
	0x01CF7AD8 MOV X19, X0
	0x01CF7ADC TBNZ X8, 0x0, 0x1CF7B00
	0x01CF7AE0 ADRP X0, 0x2259000
	0x01CF7AE4 LDR X0, [X0 + 0x9C8]
	0x01CF7AE8 BL 0x1B6E7F0
	0x01CF7AEC ADRP X0, 0x2259000
	0x01CF7AF0 LDR X0, [X0 + 0x9D0]
	0x01CF7AF4 BL 0x1B6E7F0
	0x01CF7AF8 MOVZ W8, 0x1
	0x01CF7AFC STRB W8, [X20 + 0x6FE]
	0x01CF7B00 LDR X19, [X19 + 0x18]
	0x01CF7B04 CBZ X19, 0x1CF7B38
	0x01CF7B08 LDR W1, [X19 + 0x18]
	0x01CF7B0C ADRP X20, 0x2259000
	0x01CF7B10 LDR X20, [X20 + 0x9D0]
	0x01CF7B14 MOV W0, W31
	0x01CF7B18 MOV X2, X31
	0x01CF7B1C BL 0x3A98D10
	0x01CF7B20 LDR X2, [X20]
	0x01CF7B24 MOV W1, W0
	0x01CF7B28 MOV X0, X19
	0x01CF7B2C LDP X20, X19, [X31 + 0x10]
	0x01CF7B30 LDR X30, [X31], #0x20
	0x01CF7B34 B 0x2E46254
	0x01CF7B38 BL 0x1B6EA1C
	0x01CF7B3C STR X30, [X31 - 0x30]!
	0x01CF7B40 STP X22, X21, [X31 + 0x10]
	0x01CF7B44 STP X20, X19, [X31 + 0x20]
	0x01CF7B48 ADRP X21, 0x252C000
	0x01CF7B4C ADRP X22, 0x2259000
	0x01CF7B50 ADRP X20, 0x2259000
	0x01CF7B54 LDRB W8, [X21 + 0x6FF]
	0x01CF7B58 LDR X22, [X22 + 0x3C8]
	0x01CF7B5C LDR X20, [X20 + 0x3D0]
	0x01CF7B60 MOV X19, X0
	0x01CF7B64 TBNZ X8, 0x0, 0x1CF7B88
	0x01CF7B68 ADRP X0, 0x2259000
	0x01CF7B6C LDR X0, [X0 + 0x3D0]
	0x01CF7B70 BL 0x1B6E7F0
	0x01CF7B74 ADRP X0, 0x2259000
	0x01CF7B78 LDR X0, [X0 + 0x3C8]
	0x01CF7B7C BL 0x1B6E7F0
	0x01CF7B80 MOVZ W8, 0x1
	0x01CF7B84 STRB W8, [X21 + 0x6FF]
	0x01CF7B88 LDR X0, [X22]
	0x01CF7B8C BL 0x1B6EA0C
	0x01CF7B90 LDR X1, [X20]
	0x01CF7B94 MOV X20, X0
	0x01CF7B98 BL 0x2E45D4C
	0x01CF7B9C STR X20, [X19 + 0x18]
	0x01CF7BA0 MOV X0, X19
	0x01CF7BA4 LDP X20, X19, [X31 + 0x20]
	0x01CF7BA8 LDP X22, X21, [X31 + 0x10]
	0x01CF7BAC MOV X1, X31
	0x01CF7BB0 LDR X30, [X31], #0x30
	0x01CF7BB4 B 0x3A9EFE0
	0x01CF7BB8 MOV X1, X31
	0x01CF7BBC B 0x3036524
	0x01CF7BC0 SUB X31, X31, 0x40
	0x01CF7BC4 STP X30, X21, [X31 + 0x20]
	0x01CF7BC8 STP X20, X19, [X31 + 0x30]
	0x01CF7BCC ADRP X21, 0x252C000
	0x01CF7BD0 LDRB W8, [X21 + 0x700]
	0x01CF7BD4 MOV W19, W1
	0x01CF7BD8 MOV X20, X0
	0x01CF7BDC TBNZ X8, 0x0, 0x1CF7C00
	0x01CF7BE0 ADRP X0, 0x2259000
	0x01CF7BE4 LDR X0, [X0 + 0x9D8]
	0x01CF7BE8 BL 0x1B6E7F0
	0x01CF7BEC ADRP X0, 0x2259000
	0x01CF7BF0 LDR X0, [X0 + 0x9E0]
	0x01CF7BF4 BL 0x1B6E7F0
	0x01CF7BF8 MOVZ W8, 0x1
	0x01CF7BFC STRB W8, [X21 + 0x700]
	0x01CF7C00 CMP W19, 0x5
	0x01CF7C04 B.HI 0x1CF7E88
	0x01CF7C08 ADRP X9, 0xFFFFFFFFFEDF5000
	0x01CF7C0C MOV W8, W19
	0x01CF7C10 ADD X9, X9, 0x965
	0x01CF7C14 ADR X10, 0x10
	0x01CF7C18 LDRB W11, [X9, X8, LSL]
	0x01CF7C1C ADD X10, X10, X11, 0x2, LSL
	0x01CF7C20 BR X10
	0x01CF7C24 LDR X20, [X20 + 0x18]
	0x01CF7C28 CBZ X20, 0x1CF7D68
	0x01CF7C2C LDR W1, [X20 + 0x18]
	0x01CF7C30 MOV W0, W31
	0x01CF7C34 MOV X2, X31
	0x01CF7C38 BL 0x3A98D10
	0x01CF7C3C MOV W1, W0
	0x01CF7C40 ADRP X8, 0x2259000
	0x01CF7C44 LDR X8, [X8 + 0x9E0]
	0x01CF7C48 LDR X2, [X8]
	0x01CF7C4C MOV X0, X20
	0x01CF7C50 BL 0x2E46254
	0x01CF7C54 B 0x1CF7E8C
	0x01CF7C58 LDR X20, [X20 + 0x38]
	0x01CF7C5C CBZ X20, 0x1CF7D5C
	0x01CF7C60 LDR W1, [X20 + 0x18]
	0x01CF7C64 MOV W0, W31
	0x01CF7C68 MOV X2, X31
	0x01CF7C6C BL 0x3A98D10
	0x01CF7C70 MOV W1, W0
	0x01CF7C74 ADRP X8, 0x2259000
	0x01CF7C78 LDR X8, [X8 + 0x9E0]
	0x01CF7C7C LDR X2, [X8]
	0x01CF7C80 MOV X0, X20
	0x01CF7C84 BL 0x2E46254
	0x01CF7C88 B 0x1CF7E8C
	0x01CF7C8C LDR X20, [X20 + 0x28]
	0x01CF7C90 CBZ X20, 0x1CF7D60
	0x01CF7C94 LDR W1, [X20 + 0x18]
	0x01CF7C98 MOV W0, W31
	0x01CF7C9C MOV X2, X31
	0x01CF7CA0 BL 0x3A98D10
	0x01CF7CA4 MOV W1, W0
	0x01CF7CA8 ADRP X8, 0x2259000
	0x01CF7CAC LDR X8, [X8 + 0x9E0]
	0x01CF7CB0 LDR X2, [X8]
	0x01CF7CB4 MOV X0, X20
	0x01CF7CB8 BL 0x2E46254
	0x01CF7CBC B 0x1CF7E8C
	0x01CF7CC0 LDR X20, [X20 + 0x30]
	0x01CF7CC4 CBZ X20, 0x1CF7D64
	0x01CF7CC8 LDR W1, [X20 + 0x18]
	0x01CF7CCC MOV W0, W31
	0x01CF7CD0 MOV X2, X31
	0x01CF7CD4 BL 0x3A98D10
	0x01CF7CD8 MOV W1, W0
	0x01CF7CDC ADRP X8, 0x2259000
	0x01CF7CE0 LDR X8, [X8 + 0x9E0]
	0x01CF7CE4 LDR X2, [X8]
	0x01CF7CE8 MOV X0, X20
	0x01CF7CEC BL 0x2E46254
	0x01CF7CF0 B 0x1CF7E8C
	0x01CF7CF4 LDR X20, [X20 + 0x20]
	0x01CF7CF8 CBZ X20, 0x1CF7D6C
	0x01CF7CFC LDR W1, [X20 + 0x18]
	0x01CF7D00 MOV W0, W31
	0x01CF7D04 MOV X2, X31
	0x01CF7D08 BL 0x3A98D10
	0x01CF7D0C MOV W1, W0
	0x01CF7D10 ADRP X8, 0x2259000
	0x01CF7D14 LDR X8, [X8 + 0x9E0]
	0x01CF7D18 LDR X2, [X8]
	0x01CF7D1C MOV X0, X20
	0x01CF7D20 BL 0x2E46254
	0x01CF7D24 B 0x1CF7E8C
	0x01CF7D28 LDR X20, [X20 + 0x40]
	0x01CF7D2C CBZ X20, 0x1CF7D70
	0x01CF7D30 LDR W1, [X20 + 0x18]
	0x01CF7D34 MOV W0, W31
	0x01CF7D38 MOV X2, X31
	0x01CF7D3C BL 0x3A98D10
	0x01CF7D40 MOV W1, W0
	0x01CF7D44 ADRP X8, 0x2259000
	0x01CF7D48 LDR X8, [X8 + 0x9E0]
	0x01CF7D4C LDR X2, [X8]
	0x01CF7D50 MOV X0, X20
	0x01CF7D54 BL 0x2E46254
	0x01CF7D58 B 0x1CF7E8C
	0x01CF7D5C BL 0x1B6EA1C
	0x01CF7D60 BL 0x1B6EA1C
	0x01CF7D64 BL 0x1B6EA1C
	0x01CF7D68 BL 0x1B6EA1C
	0x01CF7D6C BL 0x1B6EA1C
	0x01CF7D70 BL 0x1B6EA1C
	0x01CF7D74 B 0x1CF7DB8
	0x01CF7D78 B 0x1CF7DB8
	0x01CF7D7C B 0x1CF7DB8
	0x01CF7D80 B 0x1CF7DB8
	0x01CF7D84 B 0x1CF7DB8
	0x01CF7D88 B 0x1CF7DB8
	0x01CF7D8C B 0x1CF7DB8
	0x01CF7D90 B 0x1CF7DB8
	0x01CF7D94 B 0x1CF7DB8
	0x01CF7D98 B 0x1CF7DB8
	0x01CF7D9C B 0x1CF7DB8
	0x01CF7DA0 B 0x1CF7DB8
	0x01CF7DA4 B 0x1CF7DB8
	0x01CF7DA8 B 0x1CF7DB8
	0x01CF7DAC B 0x1CF7DB8
	0x01CF7DB0 B 0x1CF7DB8
	0x01CF7DB4 B 0x1CF7DB8
	0x01CF7DB8 MOV X20, X0
	0x01CF7DBC CMP W1, 0x1
	0x01CF7DC0 B.NE 0x1CF7EC4
	0x01CF7DC4 MOV X0, X20
	0x01CF7DC8 BL 0x3D19840
	0x01CF7DCC MOV X20, X0
	0x01CF7DD0 ADRP X0, 0x2258000
	0x01CF7DD4 LDR X0, [X0 + 0x9E8]
	0x01CF7DD8 BL 0x1B6E804
	0x01CF7DDC LDR X8, [X20]
	0x01CF7DE0 LDR X1, [X8]
	0x01CF7DE4 BL 0x1B6ED6C
	0x01CF7DE8 TBZ X0, 0x0, 0x1CF7E9C
	0x01CF7DEC BL 0x3D19850
	0x01CF7DF0 ADRP X0, 0x2259000
	0x01CF7DF4 LDR X0, [X0 + 0x9E8]
	0x01CF7DF8 BL 0x1B6E804
	0x01CF7DFC MOVN X8, 0x0
	0x01CF7E00 STP X0, X8, [X31 + 0x8]
	0x01CF7E04 ADD X0, X31, 0x8
	0x01CF7E08 MOV X1, X31
	0x01CF7E0C STR W19, [X31 + 0x18]
	0x01CF7E10 BL 0x321AF98
	0x01CF7E14 MOV X19, X0
	0x01CF7E18 ADRP X0, 0x2259000
	0x01CF7E1C LDR X0, [X0 + 0x9F0]
	0x01CF7E20 BL 0x1B6E804
	0x01CF7E24 MOV X1, X19
	0x01CF7E28 MOV X2, X31
	0x01CF7E2C BL 0x3084780
	0x01CF7E30 MOV X19, X0
	0x01CF7E34 ADRP X0, 0x2256000
	0x01CF7E38 LDR X0, [X0 + 0x628]
	0x01CF7E3C BL 0x1B6E804
	0x01CF7E40 LDR W8, [X0 + 0xE0]
	0x01CF7E44 CBNZ W8, 0x1CF7E4C
	0x01CF7E48 BL 0x1B6E8F8
	0x01CF7E4C ADRP X0, 0x2259000
	0x01CF7E50 LDR X0, [X0 + 0x9F8]
	0x01CF7E54 BL 0x1B6E804
	0x01CF7E58 MOV X20, X0
	0x01CF7E5C ADRP X0, 0x2259000
	0x01CF7E60 LDR X0, [X0 + 0xA00]
	0x01CF7E64 BL 0x1B6E804
	0x01CF7E68 MOV X4, X0
	0x01CF7E6C MOVZ W0, 0x20
	0x01CF7E70 MOVZ W5, 0x34
	0x01CF7E74 MOV X1, X19
	0x01CF7E78 MOV X2, X31
	0x01CF7E7C MOV X3, X20
	0x01CF7E80 MOV X6, X31
	0x01CF7E84 BL 0x342B7DC
	0x01CF7E88 MOV X0, X31
	0x01CF7E8C LDP X20, X19, [X31 + 0x30]
	0x01CF7E90 LDP X30, X21, [X31 + 0x20]
	0x01CF7E94 ADD X31, X31, 0x40
	0x01CF7E98 RET
	0x01CF7E9C MOVZ W0, 0x8
	0x01CF7EA0 BL 0x3D19860
	0x01CF7EA4 LDR X8, [X20]
	0x01CF7EA8 STR X8, [X0]
	0x01CF7EAC ADRP X1, 0x2025000
	0x01CF7EB0 ADD X1, X1, 0xBD8
	0x01CF7EB4 MOV X2, X31
	0x01CF7EB8 BL 0x3D19870
	0x01CF7EBC MOV X20, X0
	0x01CF7EC0 BL 0x3D19850
	0x01CF7EC4 MOV X0, X20
	0x01CF7EC8 BL 0x1C8418C
	0x01CF7ECC BL 0x18F46A8
	0x01CF7ED0 STR X30, [X31 - 0x30]!
	0x01CF7ED4 STP X22, X21, [X31 + 0x10]
	0x01CF7ED8 STP X20, X19, [X31 + 0x20]
	0x01CF7EDC ADRP X20, 0x252C000
	0x01CF7EE0 ADRP X22, 0x2259000
	0x01CF7EE4 ADRP X21, 0x2259000
	0x01CF7EE8 LDRB W8, [X20 + 0x701]
	0x01CF7EEC LDR X22, [X22 + 0xA08]
	0x01CF7EF0 LDR X21, [X21 + 0xA10]
	0x01CF7EF4 MOV X19, X0
	0x01CF7EF8 TBNZ X8, 0x0, 0x1CF7F1C
	0x01CF7EFC ADRP X0, 0x2259000
	0x01CF7F00 LDR X0, [X0 + 0xA10]
	0x01CF7F04 BL 0x1B6E7F0
	0x01CF7F08 ADRP X0, 0x2259000
	0x01CF7F0C LDR X0, [X0 + 0xA08]
	0x01CF7F10 BL 0x1B6E7F0

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+176], X29
	003 Move [X31+184], X30
	004 Move [X31+192], X28
	005 Move [X31+200], X27
	006 Move [X31+208], X26
	007 Move [X31+216], X25
	008 Move [X31+224], X24
	009 Move [X31+232], X23
	010 Move [X31+240], X22
	011 Move [X31+248], X21
	012 Move [X31+256], X20
	013 Move [X31+264], X19
	014 Move X23, 0x252D000
	015 Move X22, 0x225A000
	016 Move X19, 0x225A000
	017 Move X20, 0x225A000
	018 Move X21, 0x2257000
	019 Move W8, [X23+1776]
	020 Move X22, [X22+2312]
	021 Move X19, [X19+2320]
	022 Move X20, [X20+2216]
	023 Move X21, [X21+1376]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {90}
	028 Move X0, 0x225A000
	029 Move X0, [X0+2224]
	030 Call 0x1B6F7F0
	031 Move X0, 0x225A000
	032 Move X0, [X0+2328]
	033 Call 0x1B6F7F0
	034 Move X0, 0x225A000
	035 Move X0, [X0+2320]
	036 Call 0x1B6F7F0
	037 Move X0, 0x225A000
	038 Move X0, [X0+2312]
	039 Call 0x1B6F7F0
	040 Move X0, 0x225A000
	041 Move X0, [X0+2336]
	042 Call 0x1B6F7F0
	043 Move X0, 0x225A000
	044 Move X0, [X0+2216]
	045 Call 0x1B6F7F0
	046 Move X0, 0x225A000
	047 Move X0, [X0+2232]
	048 Call 0x1B6F7F0
	049 Move X0, 0x225A000
	050 Move X0, [X0+2208]
	051 Call 0x1B6F7F0
	052 Move X0, 0x225A000
	053 Move X0, [X0+2200]
	054 Call 0x1B6F7F0
	055 Move X0, 0x225A000
	056 Move X0, [X0+2240]
	057 Call 0x1B6F7F0
	058 Move X0, 0x225A000
	059 Move X0, [X0+2344]
	060 Call 0x1B6F7F0
	061 Move X0, 0x225A000
	062 Move X0, [X0+2248]
	063 Call 0x1B6F7F0
	064 Move X0, 0x225A000
	065 Move X0, [X0+2352]
	066 Call 0x1B6F7F0
	067 Move X0, 0x225A000
	068 Move X0, [X0+2256]
	069 Call 0x1B6F7F0
	070 Move X0, 0x225A000
	071 Move X0, [X0+2264]
	072 Call 0x1B6F7F0
	073 Move X0, 0x2257000
	074 Move X0, [X0+1376]
	075 Call 0x1B6F7F0
	076 Move X0, 0x225A000
	077 Move X0, [X0+2272]
	078 Call 0x1B6F7F0
	079 Move X0, 0x225A000
	080 Move X0, [X0+2360]
	081 Call 0x1B6F7F0
	082 Move X0, 0x225A000
	083 Move X0, [X0+2368]
	084 Call 0x1B6F7F0
	085 Move X0, 0x225A000
	086 Move X0, [X0+2376]
	087 Call 0x1B6F7F0
	088 Move W8, 1
	089 Move [X23+1776], W8
	090 Move X26, 0x225A000
	091 Move X25, 0x225A000
	092 Move X26, [X26+2200]
	093 Move X25, [X25+2208]
	094 Move X0, [X22]
	095 Move X29, 0x225A000
	096 Move X24, 0x225A000
	097 Move X22, 0x225A000
	098 Move X29, [X29+2336]
	099 Move X24, [X24+2368]
	100 Move X22, [X22+2272]
	101 Call 0x1B6FA0C
	102 Move X1, [X19]
	103 Move X19, X0
	104 Call Dictionary`2<Object, Object>..ctor, X0
	105 Move X0, [X21]
	106 Move X20, [X20]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1B6F8F8
	111 Move X0, X20
	112 Move X1, X31
	113 Call Type.GetTypeFromHandle, X0
	114 Move X8, [X26]
	115 Move X20, X0
	116 Move X0, X8
	117 Call 0x1B6FA0C
	118 Move X1, [X25]
	119 Move X21, X0
	120 Call List`1<ValueTuple`2<Object, Object>>..ctor, X0
	121 Move X0, [X29]
	122 Move X1, X31
	123 Call Type.GetTypeFromHandle, X0
	124 Move X1, [X24]
	125 Move X3, [X22]
	126 Move X2, X0
	127 Add X0, X31, 160
	128 Move [X31+160], X31
	129 Move [X31+168], X31
	130 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	131 Compare X21, 0
	132 JumpIfEqual {588}
	133 Move X27, 0x225A000
	134 Move X27, [X27+2232]
	135 Move W10, [X21+28]
	136 Move X1, [X31+160]
	137 Move X2, [X31+168]
	138 Move X8, [X21+16]
	139 Move X9, [X27]
	140 Add W10, W10, 1
	141 Move [X21+28], W10
	142 Compare X8, 0
	143 JumpIfEqual {588}
	144 NotImplemented "Instruction LDRSW not yet implemented."
	145 Move W11, [X8+24]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Add W9, W10, 1
	148 Add X8, X8, X10
	149 Move [X21+24], W9
	150 Move [X8+32], X1
	151 Move [X8+40], X2
	152 Move X8, [X9+32]
	153 Move X0, X21
	154 Move X8, [X8+192]
	155 Move X3, [X8+112]
	156 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	157 Compare X19, 0
	158 JumpIfEqual {588}
	159 Move X28, 0x225A000
	160 Move X28, [X28+2328]
	161 Move X23, 0x225A000
	162 Move X0, X19
	163 Move X1, X20
	164 Move X3, [X28]
	165 Move X23, [X23+2224]
	166 Move X2, X21
	167 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	168 Move X0, [X23]
	169 Move X1, X31
	170 Call Type.GetTypeFromHandle, X0
	171 Move X8, [X26]
	172 Move X20, X0
	173 Move X0, X8
	174 Call 0x1B6FA0C
	175 Move X1, [X25]
	176 Move X21, X0
	177 Call List`1<ValueTuple`2<Object, Object>>..ctor, X0
	178 Move X0, [X29]
	179 Move X1, X31
	180 Call Type.GetTypeFromHandle, X0
	181 Move X1, [X24]
	182 Move X3, [X22]
	183 Move X2, X0
	184 Add X0, X31, 144
	185 Move [X31+144], X31
	186 Move [X31+152], X31
	187 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	188 Compare X21, 0
	189 JumpIfEqual {588}
	190 Move W10, [X21+28]
	191 Move X1, [X31+144]
	192 Move X2, [X31+152]
	193 Move X8, [X21+16]
	194 Move X9, [X27]
	195 Add W10, W10, 1
	196 Move [X21+28], W10
	197 Compare X8, 0
	198 JumpIfEqual {588}
	199 NotImplemented "Instruction LDRSW not yet implemented."
	200 Move W11, [X8+24]
	201 Move X29, 0x225A000
	202 Move X24, 0x225A000
	203 Move X29, [X29+2352]
	204 Move X24, [X24+2360]
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Add W9, W10, 1
	207 Add X8, X8, X10
	208 Move [X21+24], W9
	209 Move [X8+32], X1
	210 Move [X8+40], X2
	211 Move X8, [X9+32]
	212 Move X0, X21
	213 Move X8, [X8+192]
	214 Move X3, [X8+112]
	215 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	216 Move X0, [X29]
	217 Move X1, X31
	218 Call Type.GetTypeFromHandle, X0
	219 Move X1, [X24]
	220 Move X3, [X22]
	221 Move X2, X0
	222 Add X0, X31, 128
	223 Move [X31+128], X31
	224 Move [X31+136], X31
	225 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	226 Move W10, [X21+28]
	227 Move X1, [X31+128]
	228 Move X2, [X31+136]
	229 Move X8, [X21+16]
	230 Move X9, [X27]
	231 Add W10, W10, 1
	232 Move [X21+28], W10
	233 Compare X8, 0
	234 JumpIfEqual {588}
	235 NotImplemented "Instruction LDRSW not yet implemented."
	236 Move W11, [X8+24]
	237 Move X23, 0x225A000
	238 Move X23, [X23+2376]
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Add W9, W10, 1
	241 Add X8, X8, X10
	242 Move [X21+24], W9
	243 Move [X8+32], X1
	244 Move [X8+40], X2
	245 Move X8, [X9+32]
	246 Move X0, X21
	247 Move X8, [X8+192]
	248 Move X3, [X8+112]
	249 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	250 Move X8, 0x225A000
	251 Move X8, [X8+2344]
	252 Move X1, X31
	253 Move X0, [X8]
	254 Call Type.GetTypeFromHandle, X0
	255 Move X1, [X23]
	256 Move X3, [X22]
	257 Move X2, X0
	258 Add X0, X31, 112
	259 Move [X31+112], X31
	260 Move [X31+120], X31
	261 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	262 Move W10, [X21+28]
	263 Move X1, [X31+112]
	264 Move X2, [X31+120]
	265 Move X8, [X21+16]
	266 Move X9, [X27]
	267 Add W10, W10, 1
	268 Move [X21+28], W10
	269 Compare X8, 0
	270 JumpIfEqual {588}
	271 NotImplemented "Instruction LDRSW not yet implemented."
	272 Move W11, [X8+24]
	273 Move X23, 0x225A000
	274 Move X23, [X23+2256]
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Add W9, W10, 1
	277 Add X8, X8, X10
	278 Move [X21+24], W9
	279 Move [X8+32], X1
	280 Move [X8+40], X2
	281 Move X8, [X9+32]
	282 Move X0, X21
	283 Move X8, [X8+192]
	284 Move X3, [X8+112]
	285 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	286 Move X3, [X28]
	287 Move X0, X19
	288 Move X1, X20
	289 Move X2, X21
	290 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	291 Move X0, [X23]
	292 Move X1, X31
	293 Call Type.GetTypeFromHandle, X0
	294 Move X8, [X26]
	295 Move X20, X0
	296 Move X0, X8
	297 Call 0x1B6FA0C
	298 Move X1, [X25]
	299 Move X21, X0
	300 Call List`1<ValueTuple`2<Object, Object>>..ctor, X0
	301 Move X8, 0x225A000
	302 Move X8, [X8+2336]
	303 Move X1, X31
	304 Move X0, [X8]
	305 Call Type.GetTypeFromHandle, X0
	306 Move X8, 0x225A000
	307 Move X8, [X8+2368]
	308 Move X3, [X22]
	309 Move X2, X0
	310 Add X0, X31, 96
	311 Move X1, [X8]
	312 Move [X31+96], X31
	313 Move [X31+104], X31
	314 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	315 Compare X21, 0
	316 JumpIfEqual {588}
	317 Move W10, [X21+28]
	318 Move X1, [X31+96]
	319 Move X2, [X31+104]
	320 Move X9, [X27]
	321 Move X23, 0x225A000
	322 Add W10, W10, 1
	323 Move [X21+28], W10
	324 Move X8, [X21+16]
	325 Move X23, [X23+2376]
	326 Compare X8, 0
	327 JumpIfEqual {588}
	328 NotImplemented "Instruction LDRSW not yet implemented."
	329 Move W11, [X8+24]
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Add W9, W10, 1
	332 Add X8, X8, X10
	333 Move [X21+24], W9
	334 Move [X8+32], X1
	335 Move [X8+40], X2
	336 Move X8, [X9+32]
	337 Move X0, X21
	338 Move X8, [X8+192]
	339 Move X3, [X8+112]
	340 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	341 Move X0, [X29]
	342 Move X1, X31
	343 Call Type.GetTypeFromHandle, X0
	344 Move X1, [X24]
	345 Move X3, [X22]
	346 Move X2, X0
	347 Add X0, X31, 80
	348 Move [X31+80], X31
	349 Move [X31+88], X31
	350 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	351 Move W10, [X21+28]
	352 Move X1, [X31+80]
	353 Move X2, [X31+88]
	354 Move X8, [X21+16]
	355 Move X9, [X27]
	356 Add W10, W10, 1
	357 Move [X21+28], W10
	358 Compare X8, 0
	359 JumpIfEqual {588}
	360 NotImplemented "Instruction LDRSW not yet implemented."
	361 Move W11, [X8+24]
	362 NotImplemented "Instruction CMP not yet implemented."
	363 Add W9, W10, 1
	364 Add X8, X8, X10
	365 Move [X21+24], W9
	366 Move [X8+32], X1
	367 Move [X8+40], X2
	368 Move X8, [X9+32]
	369 Move X0, X21
	370 Move X8, [X8+192]
	371 Move X3, [X8+112]
	372 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	373 Move X8, 0x225A000
	374 Move X8, [X8+2344]
	375 Move X1, X31
	376 Move X0, [X8]
	377 Call Type.GetTypeFromHandle, X0
	378 Move X1, [X23]
	379 Move X3, [X22]
	380 Move X2, X0
	381 Add X0, X31, 64
	382 Move [X31+64], X31
	383 Move [X31+72], X31
	384 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	385 Move W10, [X21+28]
	386 Move X1, [X31+64]
	387 Move X2, [X31+72]
	388 Move X8, [X21+16]
	389 Move X9, [X27]
	390 Add W10, W10, 1
	391 Move [X21+28], W10
	392 Compare X8, 0
	393 JumpIfEqual {588}
	394 NotImplemented "Instruction LDRSW not yet implemented."
	395 Move W11, [X8+24]
	396 Move X23, 0x225A000
	397 Move X23, [X23+2248]
	398 NotImplemented "Instruction CMP not yet implemented."
	399 Add W9, W10, 1
	400 Add X8, X8, X10
	401 Move [X21+24], W9
	402 Move [X8+32], X1
	403 Move [X8+40], X2
	404 Move X8, [X9+32]
	405 Move X0, X21
	406 Move X8, [X8+192]
	407 Move X3, [X8+112]
	408 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	409 Move X3, [X28]
	410 Move X0, X19
	411 Move X1, X20
	412 Move X2, X21
	413 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	414 Move X0, [X23]
	415 Move X1, X31
	416 Call Type.GetTypeFromHandle, X0
	417 Move X8, [X26]
	418 Move X20, X0
	419 Move X0, X8
	420 Call 0x1B6FA0C
	421 Move X1, [X25]
	422 Move X21, X0
	423 Call List`1<ValueTuple`2<Object, Object>>..ctor, X0
	424 Move X0, [X29]
	425 Move X1, X31
	426 Call Type.GetTypeFromHandle, X0
	427 Move X1, [X24]
	428 Move X3, [X22]
	429 Move X2, X0
	430 Add X0, X31, 48
	431 Move [X31+48], X31
	432 Move [X31+56], X31
	433 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	434 Compare X21, 0
	435 JumpIfEqual {588}
	436 Move W10, [X21+28]
	437 Move X1, [X31+48]
	438 Move X2, [X31+56]
	439 Move X9, [X27]
	440 Move X24, 0x225A000
	441 Add W10, W10, 1
	442 Move [X21+28], W10
	443 Move X29, 0x225A000
	444 Move X8, [X21+16]
	445 Move X24, [X24+2368]
	446 Move X29, [X29+2336]
	447 Compare X8, 0
	448 JumpIfEqual {588}
	449 NotImplemented "Instruction LDRSW not yet implemented."
	450 Move W11, [X8+24]
	451 Move X23, 0x225A000
	452 Move X23, [X23+2240]
	453 NotImplemented "Instruction CMP not yet implemented."
	454 Add W9, W10, 1
	455 Add X8, X8, X10
	456 Move [X21+24], W9
	457 Move [X8+32], X1
	458 Move [X8+40], X2
	459 Move X8, [X9+32]
	460 Move X0, X21
	461 Move X8, [X8+192]
	462 Move X3, [X8+112]
	463 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	464 Move X3, [X28]
	465 Move X0, X19
	466 Move X1, X20
	467 Move X2, X21
	468 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	469 Move X0, [X23]
	470 Move X1, X31
	471 Call Type.GetTypeFromHandle, X0
	472 Move X8, [X26]
	473 Move X20, X0
	474 Move X0, X8
	475 Call 0x1B6FA0C
	476 Move X1, [X25]
	477 Move X21, X0
	478 Call List`1<ValueTuple`2<Object, Object>>..ctor, X0
	479 Move X8, 0x225A000
	480 Move X8, [X8+2344]
	481 Move X1, X31
	482 Move X0, [X8]
	483 Call Type.GetTypeFromHandle, X0
	484 Move X8, 0x225A000
	485 Move X8, [X8+2376]
	486 Move X3, [X22]
	487 Move X2, X0
	488 Add X0, X31, 32
	489 Move X1, [X8]
	490 Move [X31+32], X31
	491 Move [X31+40], X31
	492 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	493 Compare X21, 0
	494 JumpIfEqual {588}
	495 Move W10, [X21+28]
	496 Move X1, [X31+32]
	497 Move X2, [X31+40]
	498 Move X8, [X21+16]
	499 Move X9, [X27]
	500 Add W10, W10, 1
	501 Move [X21+28], W10
	502 Compare X8, 0
	503 JumpIfEqual {588}
	504 NotImplemented "Instruction LDRSW not yet implemented."
	505 Move W11, [X8+24]
	506 Move X23, 0x225A000
	507 Move X23, [X23+2264]
	508 NotImplemented "Instruction CMP not yet implemented."
	509 Add W9, W10, 1
	510 Add X8, X8, X10
	511 Move [X21+24], W9
	512 Move [X8+32], X1
	513 Move [X8+40], X2
	514 Move X8, [X9+32]
	515 Move X0, X21
	516 Move X8, [X8+192]
	517 Move X3, [X8+112]
	518 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	519 Move X3, [X28]
	520 Move X0, X19
	521 Move X1, X20
	522 Move X2, X21
	523 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	524 Move X0, [X23]
	525 Move X1, X31
	526 Call Type.GetTypeFromHandle, X0
	527 Move X8, [X26]
	528 Move X20, X0
	529 Move X0, X8
	530 Call 0x1B6FA0C
	531 Move X1, [X25]
	532 Move X21, X0
	533 Call List`1<ValueTuple`2<Object, Object>>..ctor, X0
	534 Move X0, [X29]
	535 Move X1, X31
	536 Call Type.GetTypeFromHandle, X0
	537 Move X1, [X24]
	538 Move X3, [X22]
	539 Move X2, X0
	540 Add X0, X31, 16
	541 Move [X31+16], X31
	542 Move [X31+24], X31
	543 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	544 Compare X21, 0
	545 JumpIfEqual {588}
	546 Move W10, [X21+28]
	547 Move X1, [X31+16]
	548 Move X2, [X31+24]
	549 Move X8, [X21+16]
	550 Move X9, [X27]
	551 Add W10, W10, 1
	552 Move [X21+28], W10
	553 Compare X8, 0
	554 JumpIfEqual {588}
	555 NotImplemented "Instruction LDRSW not yet implemented."
	556 Move W11, [X8+24]
	557 NotImplemented "Instruction CMP not yet implemented."
	558 Add W9, W10, 1
	559 Add X8, X8, X10
	560 Move [X21+24], W9
	561 Move [X8+32], X1
	562 Move [X8+40], X2
	563 Move X8, [X9+32]
	564 Move X0, X21
	565 Move X8, [X8+192]
	566 Move X3, [X8+112]
	567 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	568 Move X3, [X28]
	569 Move X0, X19
	570 Move X1, X20
	571 Move X2, X21
	572 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	573 Move X0, X19
	574 Move X20, [X31+256]
	575 Move X19, [X31+264]
	576 Move X22, [X31+240]
	577 Move X21, [X31+248]
	578 Move X24, [X31+224]
	579 Move X23, [X31+232]
	580 Move X26, [X31+208]
	581 Move X25, [X31+216]
	582 Move X28, [X31+192]
	583 Move X27, [X31+200]
	584 Move X29, [X31+176]
	585 Move X30, [X31+184]
	586 Add X31, X31, 272
	587 Return X0
	588 Call 0x1B6FA1C

Method: System.Boolean ValidateConnectionRequest(Less3.ForceGraph.ForceNode from, Less3.ForceGraph.ForceNode to, System.Type connectionType)

Disassembly:
	0x01CF7F14 MOVZ W8, 0x1
	0x01CF7F18 STRB W8, [X20 + 0x701]
	0x01CF7F1C LDR X0, [X22]
	0x01CF7F20 BL 0x1B6EA0C
	0x01CF7F24 LDR X1, [X21]
	0x01CF7F28 MOV X20, X0
	0x01CF7F2C BL 0x2E45D4C
	0x01CF7F30 STR X20, [X19 + 0x18]
	0x01CF7F34 LDR X0, [X22]
	0x01CF7F38 BL 0x1B6EA0C
	0x01CF7F3C LDR X1, [X21]
	0x01CF7F40 MOV X20, X0
	0x01CF7F44 BL 0x2E45D4C
	0x01CF7F48 STR X20, [X19 + 0x20]
	0x01CF7F4C LDR X0, [X22]
	0x01CF7F50 BL 0x1B6EA0C
	0x01CF7F54 LDR X1, [X21]
	0x01CF7F58 MOV X20, X0
	0x01CF7F5C BL 0x2E45D4C
	0x01CF7F60 STR X20, [X19 + 0x28]
	0x01CF7F64 LDR X0, [X22]
	0x01CF7F68 BL 0x1B6EA0C
	0x01CF7F6C LDR X1, [X21]
	0x01CF7F70 MOV X20, X0
	0x01CF7F74 BL 0x2E45D4C
	0x01CF7F78 STR X20, [X19 + 0x30]
	0x01CF7F7C LDR X0, [X22]
	0x01CF7F80 BL 0x1B6EA0C
	0x01CF7F84 LDR X1, [X21]
	0x01CF7F88 MOV X20, X0
	0x01CF7F8C BL 0x2E45D4C
	0x01CF7F90 STR X20, [X19 + 0x38]
	0x01CF7F94 LDR X0, [X22]
	0x01CF7F98 BL 0x1B6EA0C
	0x01CF7F9C LDR X1, [X21]
	0x01CF7FA0 MOV X20, X0
	0x01CF7FA4 BL 0x2E45D4C
	0x01CF7FA8 STR X20, [X19 + 0x40]
	0x01CF7FAC MOV X0, X19
	0x01CF7FB0 LDP X20, X19, [X31 + 0x20]
	0x01CF7FB4 LDP X22, X21, [X31 + 0x10]
	0x01CF7FB8 MOV X1, X31
	0x01CF7FBC LDR X30, [X31], #0x30
	0x01CF7FC0 B 0x3A9EFE0
	0x01CF7FC4 STP X30, X21, [X31 - 0x20]!
	0x01CF7FC8 STP X20, X19, [X31 + 0x10]
	0x01CF7FCC ADRP X21, 0x252C000
	0x01CF7FD0 ADRP X20, 0x2259000
	0x01CF7FD4 LDRB W8, [X21 + 0x702]
	0x01CF7FD8 LDR X20, [X20 + 0x900]
	0x01CF7FDC MOV X19, X0
	0x01CF7FE0 TBNZ X8, 0x0, 0x1CF7FF8
	0x01CF7FE4 ADRP X0, 0x2259000
	0x01CF7FE8 LDR X0, [X0 + 0x900]
	0x01CF7FEC BL 0x1B6E7F0
	0x01CF7FF0 MOVZ W8, 0x1
	0x01CF7FF4 STRB W8, [X21 + 0x702]
	0x01CF7FF8 LDR X0, [X19 + 0x28]!
	0x01CF7FFC MOV X1, X31
	0x01CF8000 BL 0x30905F0
	0x01CF8004 ANDS W31, W0, 0x1
	0x01CF8008 CSEL X8, X20, X19, NE
	0x01CF800C LDR X0, [X8]
	0x01CF8010 LDP X20, X19, [X31 + 0x10]
	0x01CF8014 LDP X30, X21, [X31], #0x20
	0x01CF8018 RET
	0x01CF801C STR X30, [X31 - 0x20]!
	0x01CF8020 STP X20, X19, [X31 + 0x10]
	0x01CF8024 ADRP X20, 0x252B000
	0x01CF8028 ADRP X19, 0x2258000
	0x01CF802C LDRB W8, [X20 + 0x703]
	0x01CF8030 LDR X19, [X19 + 0x720]
	0x01CF8034 TBNZ X8, 0x0, 0x1CF804C
	0x01CF8038 ADRP X0, 0x2258000
	0x01CF803C LDR X0, [X0 + 0x720]
	0x01CF8040 BL 0x1B6E7F0
	0x01CF8044 MOVZ W8, 0x1
	0x01CF8048 STRB W8, [X20 + 0x703]
	0x01CF804C LDR X0, [X19]
	0x01CF8050 LDR W8, [X0 + 0xE0]
	0x01CF8054 CBNZ W8, 0x1CF8060
	0x01CF8058 BL 0x1B6E8F8
	0x01CF805C LDR X0, [X19]
	0x01CF8060 LDR X8, [X0 + 0xB8]
	0x01CF8064 LDP X20, X19, [X31 + 0x10]
	0x01CF8068 LDR X0, [X8 + 0x90]
	0x01CF806C LDR X30, [X31], #0x20
	0x01CF8070 RET
	0x01CF8074 SUB X31, X31, 0x1A0
	0x01CF8078 STP D15, D14, [X31 + 0x100]
	0x01CF807C STP D13, D12, [X31 + 0x110]
	0x01CF8080 STP D11, D10, [X31 + 0x120]
	0x01CF8084 STP D9, D8, [X31 + 0x130]
	0x01CF8088 STP X29, X30, [X31 + 0x140]
	0x01CF808C STP X28, X27, [X31 + 0x150]
	0x01CF8090 STP X26, X25, [X31 + 0x160]
	0x01CF8094 STP X24, X23, [X31 + 0x170]
	0x01CF8098 STP X22, X21, [X31 + 0x180]
	0x01CF809C STP X20, X19, [X31 + 0x190]
	0x01CF80A0 ADRP X24, 0x252B000
	0x01CF80A4 ADRP X20, 0x2258000
	0x01CF80A8 MOV X19, X8
	0x01CF80AC LDRB W8, [X24 + 0x704]
	0x01CF80B0 LDR X20, [X20 + 0x728]
	0x01CF80B4 MOV X23, X2
	0x01CF80B8 MOV X22, X1
	0x01CF80BC MOV X21, X0
	0x01CF80C0 ADD X25, X31, 0xD8
	0x01CF80C4 TBNZ X8, 0x0, 0x1CF81A8
	0x01CF80C8 ADRP X0, 0x2258000
	0x01CF80CC LDR X0, [X0 + 0x730]
	0x01CF80D0 BL 0x1B6E7F0
	0x01CF80D4 ADRP X0, 0x2258000
	0x01CF80D8 LDR X0, [X0 + 0x750]
	0x01CF80DC BL 0x1B6E7F0
	0x01CF80E0 ADRP X0, 0x2258000
	0x01CF80E4 LDR X0, [X0 + 0x760]
	0x01CF80E8 BL 0x1B6E7F0
	0x01CF80EC ADRP X0, 0x2255000
	0x01CF80F0 LDR X0, [X0 + 0x8E0]
	0x01CF80F4 BL 0x1B6E7F0
	0x01CF80F8 ADRP X0, 0x2258000
	0x01CF80FC LDR X0, [X0 + 0x780]
	0x01CF8100 BL 0x1B6E7F0
	0x01CF8104 ADRP X0, 0x2258000
	0x01CF8108 LDR X0, [X0 + 0x788]
	0x01CF810C BL 0x1B6E7F0
	0x01CF8110 ADRP X0, 0x2258000
	0x01CF8114 LDR X0, [X0 + 0x790]
	0x01CF8118 BL 0x1B6E7F0
	0x01CF811C ADRP X0, 0x2258000
	0x01CF8120 LDR X0, [X0 + 0x7B0]
	0x01CF8124 BL 0x1B6E7F0
	0x01CF8128 ADRP X0, 0x2258000
	0x01CF812C LDR X0, [X0 + 0x7C0]
	0x01CF8130 BL 0x1B6E7F0
	0x01CF8134 ADRP X0, 0x2258000
	0x01CF8138 LDR X0, [X0 + 0x7C8]
	0x01CF813C BL 0x1B6E7F0
	0x01CF8140 ADRP X0, 0x2258000
	0x01CF8144 LDR X0, [X0 + 0x7E8]
	0x01CF8148 BL 0x1B6E7F0
	0x01CF814C ADRP X0, 0x2258000
	0x01CF8150 LDR X0, [X0 + 0x7F8]
	0x01CF8154 BL 0x1B6E7F0
	0x01CF8158 ADRP X0, 0x2258000
	0x01CF815C LDR X0, [X0 + 0x728]
	0x01CF8160 BL 0x1B6E7F0
	0x01CF8164 ADRP X0, 0x2258000
	0x01CF8168 LDR X0, [X0 + 0xA18]
	0x01CF816C BL 0x1B6E7F0
	0x01CF8170 ADRP X0, 0x2258000
	0x01CF8174 LDR X0, [X0 + 0x800]
	0x01CF8178 BL 0x1B6E7F0
	0x01CF817C ADRP X0, 0x2255000
	0x01CF8180 LDR X0, [X0 + 0x478]
	0x01CF8184 BL 0x1B6E7F0
	0x01CF8188 ADRP X0, 0x2258000
	0x01CF818C LDR X0, [X0 + 0xA20]
	0x01CF8190 BL 0x1B6E7F0
	0x01CF8194 ADRP X0, 0x2255000
	0x01CF8198 LDR X0, [X0 + 0xC08]
	0x01CF819C BL 0x1B6E7F0
	0x01CF81A0 MOVZ W8, 0x1
	0x01CF81A4 STRB W8, [X24 + 0x704]
	0x01CF81A8 LDR X0, [X20]
	0x01CF81AC STP X31, X31, [X31 + 0xC0]
	0x01CF81B0 STR X31, [X31 + 0xD0]
	0x01CF81B4 STP X31, X31, [X31 + 0xA0]
	0x01CF81B8 STR X31, [X31 + 0xB0]
	0x01CF81BC STR W31, [X31 + 0xD8]
	0x01CF81C0 STUR W31, [X25 + 0x3]
	0x01CF81C4 BL 0x1B6EA0C
	0x01CF81C8 MOV X1, X31
	0x01CF81CC MOV X20, X0
	0x01CF81D0 BL 0x1CFCEA0
	0x01CF81D4 CBZ X20, 0x1CF8A80
	0x01CF81D8 ADRP X24, 0x2255000
	0x01CF81DC ADRP X25, 0x2258000
	0x01CF81E0 ADRP X26, 0x2255000
	0x01CF81E4 LDR X24, [X24 + 0xC08]
	0x01CF81E8 LDR X25, [X25 + 0xA20]
	0x01CF81EC LDR X26, [X26 + 0x8E0]
	0x01CF81F0 MOV X0, X21
	0x01CF81F4 STR X21, [X20 + 0x10]
	0x01CF81F8 BL 0x1CF7FC4
	0x01CF81FC LDR X8, [X24]
	0x01CF8200 LDR X2, [X25]
	0x01CF8204 MOV X1, X0
	0x01CF8208 MOV X3, X31
	0x01CF820C MOV X0, X8
	0x01CF8210 BL 0x3090300
	0x01CF8214 LDR X8, [X26]
	0x01CF8218 MOV X25, X0
	0x01CF821C MOV X0, X8
	0x01CF8220 BL 0x1B6EA0C
	0x01CF8224 MOV X1, X25
	0x01CF8228 MOV X2, X31
	0x01CF822C MOV X24, X0
	0x01CF8230 BL 0x3A9DAE4
	0x01CF8234 CBZ X24, 0x1CF8A80
	0x01CF8238 MOV X0, X24
	0x01CF823C MOV X1, X31
	0x01CF8240 BL 0x3A9D8EC
	0x01CF8244 CBZ X0, 0x1CF8A80
	0x01CF8248 MOV X1, X31
	0x01CF824C MOV X24, X0
	0x01CF8250 BL 0x3A9B084
	0x01CF8254 CBZ X22, 0x1CF8A80
	0x01CF8258 MOV X25, X0
	0x01CF825C MOV X0, X22
	0x01CF8260 MOV X1, X31
	0x01CF8264 BL 0x3A9B084
	0x01CF8268 CBZ X25, 0x1CF8A80
	0x01CF826C MOV X1, X0
	0x01CF8270 MOV X0, X25
	0x01CF8274 MOV X2, X31
	0x01CF8278 BL 0x3AA7DEC
	0x01CF827C MOV X0, X24
	0x01CF8280 MOV X1, X31
	0x01CF8284 BL 0x3A9B084
	0x01CF8288 ADRP X26, 0x252B000
	0x01CF828C LDRB W8, [X26 + 0x43F]
	0x01CF8290 MOV X25, X0
	0x01CF8294 CBNZ W8, 0x1CF82AC
	0x01CF8298 ADRP X0, 0x2255000
	0x01CF829C LDR X0, [X0 + 0x480]
	0x01CF82A0 BL 0x1B6E7F0
	0x01CF82A4 MOVZ W8, 0x1
	0x01CF82A8 STRB W8, [X26 + 0x43F]
	0x01CF82AC CBZ X25, 0x1CF8A80
	0x01CF82B0 ADRP X8, 0x2255000
	0x01CF82B4 LDR X8, [X8 + 0x480]
	0x01CF82B8 MOV X0, X25
	0x01CF82BC MOV X1, X31
	0x01CF82C0 LDR X8, [X8]
	0x01CF82C4 LDR X8, [X8 + 0xB8]
	0x01CF82C8 LDP S1, S2, [X8 + 0x4]
	0x01CF82CC LDR V0, [X8]
	0x01CF82D0 BL 0x3AA6D0C
	0x01CF82D4 MOV X0, X24
	0x01CF82D8 MOV X1, X31
	0x01CF82DC BL 0x3A9B084
	0x01CF82E0 ADRP X26, 0x252B000
	0x01CF82E4 LDRB W8, [X26 + 0x454]
	0x01CF82E8 MOV X25, X0
	0x01CF82EC CBNZ W8, 0x1CF8304
	0x01CF82F0 ADRP X0, 0x2256000
	0x01CF82F4 LDR X0, [X0 + 0x1F8]
	0x01CF82F8 BL 0x1B6E7F0
	0x01CF82FC MOVZ W8, 0x1
	0x01CF8300 STRB W8, [X26 + 0x454]
	0x01CF8304 CBZ X25, 0x1CF8A80
	0x01CF8308 ADRP X8, 0x2256000
	0x01CF830C LDR X8, [X8 + 0x1F8]
	0x01CF8310 MOV X0, X25
	0x01CF8314 MOV X1, X31
	0x01CF8318 LDR X8, [X8]
	0x01CF831C LDR X8, [X8 + 0xB8]
	0x01CF8320 LDP S2, S3, [X8 + 0x8]
	0x01CF8324 LDP S0, S1, [X8]
	0x01CF8328 BL 0x3AA7984
	0x01CF832C MOV X0, X24
	0x01CF8330 MOV X1, X31
	0x01CF8334 BL 0x3A9B0C0
	0x01CF8338 STR X0, [X20 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x252D000
	008 Move W8, [X23+1777]
	009 Move X21, X3
	010 Move X19, X2
	011 Move X20, X1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {55}
	017 Move X0, 0x225A000
	018 Move X0, [X0+2384]
	019 Call 0x1B6F7F0
	020 Move X0, 0x2257000
	021 Move X0, [X0+2232]
	022 Call 0x1B6F7F0
	023 Move X0, 0x225A000
	024 Move X0, [X0+2336]
	025 Call 0x1B6F7F0
	026 Move X0, 0x225A000
	027 Move X0, [X0+2128]
	028 Call 0x1B6F7F0
	029 Move X0, 0x225A000
	030 Move X0, [X0+2392]
	031 Call 0x1B6F7F0
	032 Move X0, 0x225A000
	033 Move X0, [X0+2344]
	034 Call 0x1B6F7F0
	035 Move X0, 0x225A000
	036 Move X0, [X0+2400]
	037 Call 0x1B6F7F0
	038 Move X0, 0x225A000
	039 Move X0, [X0+2352]
	040 Call 0x1B6F7F0
	041 Move X0, 0x225A000
	042 Move X0, [X0+2408]
	043 Call 0x1B6F7F0
	044 Move X0, 0x2257000
	045 Move X0, [X0+1376]
	046 Call 0x1B6F7F0
	047 Move X0, 0x225A000
	048 Move X0, [X0+2416]
	049 Call 0x1B6F7F0
	050 Move X0, 0x225A000
	051 Move X0, [X0+2424]
	052 Call 0x1B6F7F0
	053 Move W8, 1
	054 Move [X23+1777], W8
	055 Move X0, X22
	056 Move X1, X20
	057 Move X2, X19
	058 Move X3, X21
	059 Move X4, X31
	060 Call ForceGraph.ValidateConnectionRequest, X0, X1, X2, X3
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {255}
	065 Move X23, 0x2257000
	066 Move X23, [X23+1376]
	067 Move X8, 0x225A000
	068 Move X0, [X23]
	069 Call 0x3D1A4D8
	070 Return X0
	071 Move W9, [X0+224]
	072 Move X22, [X8]
	073 Compare W9, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1B6F8F8
	076 Move X0, X22
	077 Move X1, X31
	078 Call Type.GetTypeFromHandle, X0
	079 Move X1, X0
	080 Move X0, X21
	081 Move X2, X31
	082 Call Type.op_Equality, X0, X1
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {121}
	087 Compare X20, 0
	088 JumpIfEqual {255}
	089 Move X8, 0x2259000
	090 Move X8, [X8+2128]
	091 Move X10, [X20]
	092 Move X8, [X8]
	093 Move W11, [X10+304]
	094 Move W9, [X8+304]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X12, [X10+200]
	097 Add X12, X12, X9
	098 NotImplemented "Instruction LDUR not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X12, 0x2259000
	101 Move X12, [X12+2384]
	102 Move X12, [X12]
	103 Move W13, [X12+304]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X14, [X10+200]
	106 Add X13, X14, X13
	107 NotImplemented "Instruction LDUR not yet implemented."
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X12, 0x2259000
	110 Move X12, [X12+2408]
	111 Move X12, [X12]
	112 Move W13, [X12+304]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move W0, W31
	115 Compare X19, 0
	116 JumpIfEqual {256}
	117 Move X10, [X10+200]
	118 Add X10, X10, X13
	119 NotImplemented "Instruction LDUR not yet implemented."
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X8, 0x2259000
	122 Move X0, [X23]
	123 Move X8, [X8+2352]
	124 Move W9, [X0+224]
	125 Move X22, [X8]
	126 Compare W9, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1B6F8F8
	129 Move X0, X22
	130 Move X1, X31
	131 Call Type.GetTypeFromHandle, X0
	132 Move X1, X0
	133 Move X0, X21
	134 Move X2, X31
	135 Call Type.op_Equality, X0, X1
	136 Move TEMP, X0
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfNotEqual {142}
	140 Move X8, 0x2259000
	141 Move X8, [X8+2400]
	142 Move X8, 0x2259000
	143 Move X0, [X23]
	144 Move X8, [X8+2344]
	145 Move W9, [X0+224]
	146 Move X22, [X8]
	147 Compare W9, 0
	148 JumpIfNotEqual {150}
	149 Call 0x1B6F8F8
	150 Move X0, X22
	151 Move X1, X31
	152 Call Type.GetTypeFromHandle, X0
	153 Move X1, X0
	154 Move X0, X21
	155 Move X2, X31
	156 Call Type.op_Equality, X0, X1
	157 Move TEMP, X0
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfNotEqual {198}
	161 Move X8, 0x2259000
	162 Move X8, [X8+2392]
	163 Move X8, [X8]
	164 Compare X19, 0
	165 JumpIfEqual {174}
	166 Move X9, [X19]
	167 Move W10, [X8+304]
	168 Move W11, [X9+304]
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move X9, [X9+200]
	171 Add X9, X9, X10
	172 NotImplemented "Instruction LDUR not yet implemented."
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Compare X20, 0
	175 JumpIfEqual {255}
	176 Move X9, [X20]
	177 Move W10, [X8+304]
	178 Move W11, [X9+304]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move X9, [X9+200]
	181 Add X9, X9, X10
	182 NotImplemented "Instruction LDUR not yet implemented."
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Compare X19, 0
	185 JumpIfEqual {255}
	186 Move X8, 0x2259000
	187 Move X8, [X8+2384]
	188 Move X9, [X19]
	189 Move X8, [X8]
	190 Move W11, [X9+304]
	191 Move W10, [X8+304]
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move X9, [X9+200]
	194 Add X9, X9, X10
	195 NotImplemented "Instruction LDUR not yet implemented."
	196 NotImplemented "Instruction CMP not yet implemented."
	197 NotImplemented "Instruction CSET not yet implemented."
	198 Move X8, 0x2259000
	199 Move X8, [X8+2424]
	200 Move X19, [X8]
	201 Compare X21, 0
	202 JumpIfEqual {236}
	203 Move X8, [X21]
	204 Move X0, X21
	205 Move X9, [X8+360]
	206 Move X1, [X8+368]
	207 NotImplemented "Instruction BLR not yet implemented."
	208 Move X1, X0
	209 Compare X19, 0
	210 JumpIfEqual {255}
	211 Move X10, [X19]
	212 Move W11, [X10+304]
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move X12, [X10+200]
	215 Add X9, X12, X9
	216 NotImplemented "Instruction LDUR not yet implemented."
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Move X8, 0x2259000
	219 Move X8, [X8+2384]
	220 Move X8, [X8]
	221 Move W9, [X8+304]
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Move X12, [X10+200]
	224 Add X9, X12, X9
	225 NotImplemented "Instruction LDUR not yet implemented."
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Move X8, 0x2259000
	228 Move X8, [X8+2408]
	229 Move X8, [X8]
	230 Move W9, [X8+304]
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Move X10, [X10+200]
	233 Add X9, X10, X9
	234 NotImplemented "Instruction LDUR not yet implemented."
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Move X1, X31
	237 Move X8, 0x2259000
	238 Move X8, [X8+2416]
	239 Move X0, X19
	240 Move X3, X31
	241 Move X2, [X8]
	242 Call String.Concat, X0, X1, X2
	243 Move X8, 0x2256000
	244 Move X8, [X8+2232]
	245 Move X19, X0
	246 Move X8, [X8]
	247 Move W9, [X8+224]
	248 Compare W9, 0
	249 JumpIfNotEqual {252}
	250 Move X0, X8
	251 Call 0x1B6F8F8
	252 Move X0, X19
	253 Move X1, X31
	254 Call Debug.LogWarning, X0
	255 Move W0, W31
	256 Move X20, [X31+32]
	257 Move X19, [X31+40]
	258 Move X22, [X31+16]
	259 Move X21, [X31+24]
	260 Move X30, [X31+48]
	261 Move X23, [X31+56]
	262 Return X0
	263 Compare X20, 0
	264 JumpIfEqual {255}
	265 Move X9, 0x2259000
	266 Move X9, [X9+2384]
	267 Move X10, [X20]
	268 Move X9, [X9]
	269 Move W12, [X10+304]
	270 Move W11, [X9+304]
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Move X10, [X10+200]
	273 Add X10, X10, X11
	274 NotImplemented "Instruction LDUR not yet implemented."
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Move W0, 1

Method: System.Void .ctor()

Disassembly:
	0x01CF833C LDR X24, [X21 + 0x30]
	0x01CF8340 MOV X0, X22
	0x01CF8344 MOV X1, X31
	0x01CF8348 BL 0x3A9B084
	0x01CF834C CBZ X0, 0x1CF8A80
	0x01CF8350 MOV X1, X31

ISIL:
	001 Move W8, 1
	002 Move W9, 10
	003 Move X1, X31
	004 Move [X0+40], W8
	005 Move [X0+44], W9
	006 Call ForceGraph..ctor, X0
	007 Return 

