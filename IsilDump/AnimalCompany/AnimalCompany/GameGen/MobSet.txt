Type: AnimalCompany.GameGen.MobSet

Method: UnityEngine.GameObject GetRandomMob()

Disassembly:
	0x01CF8AC8 STP D9, D8, [X31 + 0xC0]
	0x01CF8ACC STP X29, X30, [X31 + 0xD0]
	0x01CF8AD0 STP X26, X25, [X31 + 0xE0]
	0x01CF8AD4 STP X24, X23, [X31 + 0xF0]
	0x01CF8AD8 STP X22, X21, [X31 + 0x100]
	0x01CF8ADC STP X20, X19, [X31 + 0x110]
	0x01CF8AE0 ADRP X23, 0x252B000
	0x01CF8AE4 LDRB W8, [X23 + 0x705]
	0x01CF8AE8 MOV X19, X4
	0x01CF8AEC MOV X21, X3
	0x01CF8AF0 MOV X22, X2
	0x01CF8AF4 MOV X20, X1
	0x01CF8AF8 TBNZ X8, 0x0, 0x1CF8B4C
	0x01CF8AFC ADRP X0, 0x2258000
	0x01CF8B00 LDR X0, [X0 + 0x830]
	0x01CF8B04 BL 0x1B6E7F0
	0x01CF8B08 ADRP X0, 0x2258000
	0x01CF8B0C LDR X0, [X0 + 0x838]
	0x01CF8B10 BL 0x1B6E7F0
	0x01CF8B14 ADRP X0, 0x2258000
	0x01CF8B18 LDR X0, [X0 + 0x840]
	0x01CF8B1C BL 0x1B6E7F0
	0x01CF8B20 ADRP X0, 0x2258000
	0x01CF8B24 LDR X0, [X0 + 0x848]
	0x01CF8B28 BL 0x1B6E7F0
	0x01CF8B2C ADRP X0, 0x2258000
	0x01CF8B30 LDR X0, [X0 + 0xA28]
	0x01CF8B34 BL 0x1B6E7F0
	0x01CF8B38 ADRP X0, 0x2258000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x252C000
	005 Move W8, [X20+1790]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x2259000
	012 Move X0, [X0+2504]
	013 Call 0x1B6F7F0
	014 Move X0, 0x2259000
	015 Move X0, [X0+2512]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X20+1790], W8
	019 Move X19, [X19+24]
	020 Compare X19, 0
	021 JumpIfEqual {36}
	022 Move W1, [X19+24]
	023 Move X20, 0x2259000
	024 Move X20, [X20+2512]
	025 Move W0, W31
	026 Move X2, X31
	027 Call Random.Range, X0, X1
	028 Move X2, [X20]
	029 Move W1, W0
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Call List`1<Object>.get_Item, X0, X1
	035 Return X0
	036 Call 0x1B6FA1C

Method: System.Void .ctor()

Disassembly:
	0x01CF8B3C LDR X0, [X0 + 0xA30]
	0x01CF8B40 BL 0x1B6E7F0
	0x01CF8B44 MOVZ W8, 0x1
	0x01CF8B48 STRB W8, [X23 + 0x705]
	0x01CF8B4C MOVI V0.2D, 0x0
	0x01CF8B50 STR X31, [X31 + 0xB0]
	0x01CF8B54 STP V0, V0, [X31 + 0x90]
	0x01CF8B58 CBZ X22, 0x1CF8D84
	0x01CF8B5C ADRP X26, 0x2258000
	0x01CF8B60 LDR X26, [X26 + 0x848]
	0x01CF8B64 ADRP X25, 0x2258000
	0x01CF8B68 ADRP X24, 0x2258000
	0x01CF8B6C ADD X8, X31, 0x68
	0x01CF8B70 LDR X1, [X26]
	0x01CF8B74 LDR X25, [X25 + 0x838]
	0x01CF8B78 LDR X24, [X24 + 0x830]
	0x01CF8B7C MOV X0, X22
	0x01CF8B80 BL 0x2D8E68C
	0x01CF8B84 ADRP X9, 0xFFFFFFFFFEDB1000
	0x01CF8B88 ADRP X10, 0xFFFFFFFFFEDB1000
	0x01CF8B8C LDUR V0, [X31 + 0x68]
	0x01CF8B90 LDUR V1, [X31 + 0x78]
	0x01CF8B94 LDR X8, [X31 + 0x88]
	0x01CF8B98 LDR V8, [X9 + 0xD08]
	0x01CF8B9C LDR V9, [X10 + 0x934]
	0x01CF8BA0 STP V0, V1, [X31 + 0x90]
	0x01CF8BA4 STR X8, [X31 + 0xB0]
	0x01CF8BA8 LDR X1, [X25]
	0x01CF8BAC ADD X0, X31, 0x90
	0x01CF8BB0 BL 0x2A079C8
	0x01CF8BB4 TBZ X0, 0x0, 0x1CF8C64

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x252C000
	007 Move X22, 0x2259000
	008 Move X20, 0x2259000
	009 Move W8, [X21+1791]
	010 Move X22, [X22+968]
	011 Move X20, [X20+976]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2259000
	018 Move X0, [X0+976]
	019 Call 0x1B6F7F0
	020 Move X0, 0x2259000
	021 Move X0, [X0+968]
	022 Call 0x1B6F7F0
	023 Move W8, 1
	024 Move [X21+1791], W8
	025 Move X0, [X22]
	026 Call 0x1B6FA0C
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call List`1<Object>..ctor, X0
	030 Move [X19+24], X20
	031 Move X0, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+48]
	038 Call ScriptableObject..ctor, X0
	039 Return 

