Type: AnimalCompany.GameGen.MobPlacementConnection

Method: UnityEngine.Color get_ConnectionColor()

Disassembly:
	0x01E0BDB8 STR V0, [X31 + 0x8]
	0x01E0BDBC STR X8, [X31 + 0x90]
	0x01E0BDC0 CBZ X22, 0x1E0BE9C
	0x01E0BDC4 LDR V0, [X31 + 0x8]
	0x01E0BDC8 LDR X8, [X31 + 0x90]
	0x01E0BDCC ADRP X9, 0x22EE000
	0x01E0BDD0 LDR X9, [X9 + 0xA20]
	0x01E0BDD4 STR V0, [X31 + 0xE]
	0x01E0BDD8 STR X8, [X31 + 0xF0]
	0x01E0BDDC LDR W11, [X22 + 0x1C]
	0x01E0BDE0 LDR X8, [X22 + 0x10]
	0x01E0BDE4 LDR X10, [X9]
	0x01E0BDE8 ADD W9, W11, 0x1
	0x01E0BDEC STR W9, [X22 + 0x1C]
	0x01E0BDF0 CBZ X8, 0x1E0BE9C
	0x01E0BDF4 LDRSW X9, [X22 + 0x18]
	0x01E0BDF8 LDR W11, [X8 + 0x18]
	0x01E0BDFC CMP W9, W11
	0x01E0BE00 B.CS 0x1E0BE28
	0x01E0BE04 ADD W10, W9, 0x1
	0x01E0BE08 STR W10, [X22 + 0x18]
	0x01E0BE0C LDR X10, [X31 + 0xF0]
	0x01E0BE10 LDR V0, [X31 + 0xE]
	0x01E0BE14 MOVZ W11, 0x18
	0x01E0BE18 MADD X8, X9, X11, X8
	0x01E0BE1C STR X10, [X8 + 0x30]
	0x01E0BE20 STR V0, [X8 + 0x2]
	0x01E0BE24 B 0x1E0BE50
	0x01E0BE28 LDR X8, [X10 + 0x20]
	0x01E0BE2C LDR V0, [X31 + 0xE]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x25CE000
	006 Move X19, 0x22EF000
	007 Move W8, [X20+3519]
	008 Move X19, [X19+3208]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x22EF000
	014 Move X0, [X0+3208]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+3519], W8
	018 Move X0, [X19]
	019 Add X1, X31, 0
	020 Move X2, X31
	021 Move [X31], X31
	022 Move [X31+8], X31
	023 Call ColorUtility.TryParseHtmlString, X0, X1
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {32}
	028 Move S0, [X31]
	029 Move S1, [X31+4]
	030 Move S2, [X31+8]
	031 Move S3, [X31+12]
	032 Move S1, W31
	033 Move S0, 1
	034 Move S2, W31
	035 Move S3, 1
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X30, [X31+16]
	039 Add X31, X31, 48
	040 Return X0

Method: System.Boolean get_Dashed()

Disassembly:
	0x01E0BE30 LDR X9, [X31 + 0xF0]
	0x01E0BE34 ADD X1, X31, 0x60

ISIL:
	001 Move W0, W31
	002 Return X0

Method: Less3.ForceGraph.ForceNode GetOtherNode(Less3.ForceGraph.ForceNode node)

Disassembly:
	0x01E0BE38 LDR X8, [X8 + 0xC0]
	0x01E0BE3C MOV X0, X22
	0x01E0BE40 LDR X2, [X8 + 0x70]
	0x01E0BE44 STR V0, [X31 + 0x6]
	0x01E0BE48 STR X9, [X31 + 0x70]
	0x01E0BE4C BL 0x2F64F1C
	0x01E0BE50 LDUR W8, [X24 + 0x3]
	0x01E0BE54 LDR W9, [X31 + 0xD8]
	0x01E0BE58 STRB W23, [X19]
	0x01E0BE5C STP X21, X22, [X19 + 0x8]
	0x01E0BE60 STR W8, [X19 + 0x4]
	0x01E0BE64 STUR W9, [X19 + 0x1]
	0x01E0BE68 STR X20, [X19 + 0x18]
	0x01E0BE6C LDP X20, X19, [X31 + 0x190]
	0x01E0BE70 LDP X22, X21, [X31 + 0x180]
	0x01E0BE74 LDP X24, X23, [X31 + 0x170]
	0x01E0BE78 LDP X26, X25, [X31 + 0x160]
	0x01E0BE7C LDP X28, X27, [X31 + 0x150]
	0x01E0BE80 LDP X29, X30, [X31 + 0x140]
	0x01E0BE84 LDP D9, D8, [X31 + 0x130]
	0x01E0BE88 LDP D11, D10, [X31 + 0x120]
	0x01E0BE8C LDP D13, D12, [X31 + 0x110]
	0x01E0BE90 LDP D15, D14, [X31 + 0x100]
	0x01E0BE94 ADD X31, X31, 0x1A0
	0x01E0BE98 RET
	0x01E0BE9C BL 0x1C16F20
	0x01E0BEA0 MOV X23, X31
	0x01E0BEA4 B 0x1E0BEB4
	0x01E0BEA8 MOV X0, X23
	0x01E0BEAC BL 0x1C16F18
	0x01E0BEB0 MOV X22, X0
	0x01E0BEB4 ADRP X8, 0x22EE000
	0x01E0BEB8 LDR X8, [X8 + 0x9F8]
	0x01E0BEBC LDR X1, [X8]
	0x01E0BEC0 ADD X0, X31, 0xA0
	0x01E0BEC4 BL 0x2BC434C
	0x01E0BEC8 CBNZ X23, 0x1E0BED4
	0x01E0BECC MOV X0, X22
	0x01E0BED0 BL 0x1D2C690
	0x01E0BED4 MOV X0, X23
	0x01E0BED8 BL 0x1C16F18
	0x01E0BEDC BL 0x1990590
	0x01E0BEE0 STR X30, [X31 - 0x40]!
	0x01E0BEE4 STP X24, X23, [X31 + 0x10]
	0x01E0BEE8 STP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x25CE000
	008 Move X23, 0x22E9000
	009 Move W8, [X21+3520]
	010 Move X23, [X23+1432]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x22E9000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3520], W8
	022 Move X22, X20
	023 Add X22, X22, 24
	024 Move X21, [X22]
	025 Move X0, [X23]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X21
	031 Move X1, X19
	032 Move X2, X31
	033 Call Object.op_Equality, X0, X1
	034 Add X9, X20, 32
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {56}
	039 Move X0, [X23]
	040 Move X20, [X9]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X20
	046 Move X1, X19
	047 Move X2, X31
	048 Call Object.op_Equality, X0, X1
	049 Move W8, W0
	050 Move X0, X31
	051 Move X9, X22
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {57}
	056 Move X0, [X9]
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Move X23, [X31+56]
	063 Return X0

Method: System.Void .ctor()

Disassembly:
	0x01E0BEEC STP X20, X19, [X31 + 0x30]
	0x01E0BEF0 ADRP X21, 0x25CD000

ISIL:
	001 Move X1, X31
	002 Call ForceConnection..ctor, X0
	003 Return 

