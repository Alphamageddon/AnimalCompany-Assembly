Type: AnimalCompany.GameGen.MobPlacementConnection

Method: UnityEngine.Color get_ConnectionColor()

Disassembly:
	0x01CF898C LDR X1, [X8]
	0x01CF8990 BL 0x2D8CF60
	0x01CF8994 LDR V0, [X31 + 0xC]
	0x01CF8998 LDR X8, [X31 + 0xD0]
	0x01CF899C STR V0, [X31 + 0x8]
	0x01CF89A0 STR X8, [X31 + 0x90]
	0x01CF89A4 CBZ X22, 0x1CF8A80
	0x01CF89A8 LDR V0, [X31 + 0x8]
	0x01CF89AC LDR X8, [X31 + 0x90]
	0x01CF89B0 ADRP X9, 0x2258000
	0x01CF89B4 LDR X9, [X9 + 0x790]
	0x01CF89B8 STR V0, [X31 + 0xE]
	0x01CF89BC STR X8, [X31 + 0xF0]
	0x01CF89C0 LDR W11, [X22 + 0x1C]
	0x01CF89C4 LDR X8, [X22 + 0x10]
	0x01CF89C8 LDR X10, [X9]
	0x01CF89CC ADD W9, W11, 0x1
	0x01CF89D0 STR W9, [X22 + 0x1C]
	0x01CF89D4 CBZ X8, 0x1CF8A80
	0x01CF89D8 LDRSW X9, [X22 + 0x18]
	0x01CF89DC LDR W11, [X8 + 0x18]
	0x01CF89E0 CMP W9, W11
	0x01CF89E4 B.CS 0x1CF8A0C
	0x01CF89E8 ADD W10, W9, 0x1
	0x01CF89EC STR W10, [X22 + 0x18]
	0x01CF89F0 LDR X10, [X31 + 0xF0]
	0x01CF89F4 LDR V0, [X31 + 0xE]
	0x01CF89F8 MOVZ W11, 0x18
	0x01CF89FC MADD X8, X9, X11, X8
	0x01CF8A00 STR X10, [X8 + 0x30]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x252C000
	006 Move X19, 0x2259000
	007 Move W8, [X20+1788]
	008 Move X19, [X19+2480]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2259000
	014 Move X0, [X0+2480]
	015 Call 0x1B6F7F0
	016 Move W8, 1
	017 Move [X20+1788], W8
	018 Move X0, [X19]
	019 Add X1, X31, 0
	020 Move X2, X31
	021 Move [X31], X31
	022 Move [X31+8], X31
	023 Call ColorUtility.TryParseHtmlString, X0, X1
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {32}
	028 Move S0, [X31]
	029 Move S1, [X31+4]
	030 Move S2, [X31+8]
	031 Move S3, [X31+12]
	032 Move S1, W31
	033 Move S0, 1
	034 Move S2, W31
	035 Move S3, 1
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X30, [X31+16]
	039 Add X31, X31, 48
	040 Return X0

Method: System.Boolean get_Dashed()

Disassembly:
	0x01CF8A04 STR V0, [X8 + 0x2]
	0x01CF8A08 B 0x1CF8A34

ISIL:
	001 Move W0, W31
	002 Return X0

Method: Less3.ForceGraph.ForceNode GetOtherNode(Less3.ForceGraph.ForceNode node)

Disassembly:
	0x01CF8A0C LDR X8, [X10 + 0x20]
	0x01CF8A10 LDR V0, [X31 + 0xE]
	0x01CF8A14 LDR X9, [X31 + 0xF0]
	0x01CF8A18 ADD X1, X31, 0x60
	0x01CF8A1C LDR X8, [X8 + 0xC0]
	0x01CF8A20 MOV X0, X22
	0x01CF8A24 LDR X2, [X8 + 0x70]
	0x01CF8A28 STR V0, [X31 + 0x6]
	0x01CF8A2C STR X9, [X31 + 0x70]
	0x01CF8A30 BL 0x2D8D804
	0x01CF8A34 LDUR W8, [X24 + 0x3]
	0x01CF8A38 LDR W9, [X31 + 0xD8]
	0x01CF8A3C STRB W23, [X19]
	0x01CF8A40 STP X21, X22, [X19 + 0x8]
	0x01CF8A44 STR W8, [X19 + 0x4]
	0x01CF8A48 STUR W9, [X19 + 0x1]
	0x01CF8A4C STR X20, [X19 + 0x18]
	0x01CF8A50 LDP X20, X19, [X31 + 0x190]
	0x01CF8A54 LDP X22, X21, [X31 + 0x180]
	0x01CF8A58 LDP X24, X23, [X31 + 0x170]
	0x01CF8A5C LDP X26, X25, [X31 + 0x160]
	0x01CF8A60 LDP X28, X27, [X31 + 0x150]
	0x01CF8A64 LDP X29, X30, [X31 + 0x140]
	0x01CF8A68 LDP D9, D8, [X31 + 0x130]
	0x01CF8A6C LDP D11, D10, [X31 + 0x120]
	0x01CF8A70 LDP D13, D12, [X31 + 0x110]
	0x01CF8A74 LDP D15, D14, [X31 + 0x100]
	0x01CF8A78 ADD X31, X31, 0x1A0
	0x01CF8A7C RET
	0x01CF8A80 BL 0x1B6EA1C
	0x01CF8A84 MOV X23, X31
	0x01CF8A88 B 0x1CF8A98
	0x01CF8A8C MOV X0, X23
	0x01CF8A90 BL 0x1B6EA14
	0x01CF8A94 MOV X22, X0
	0x01CF8A98 ADRP X8, 0x2258000
	0x01CF8A9C LDR X8, [X8 + 0x730]
	0x01CF8AA0 LDR X1, [X8]
	0x01CF8AA4 ADD X0, X31, 0xA0
	0x01CF8AA8 BL 0x2A14F2C
	0x01CF8AAC CBNZ X23, 0x1CF8AB8
	0x01CF8AB0 MOV X0, X22
	0x01CF8AB4 BL 0x1C8418C
	0x01CF8AB8 MOV X0, X23
	0x01CF8ABC BL 0x1B6EA14

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x252C000
	008 Move X23, 0x2256000
	009 Move W8, [X21+1789]
	010 Move X23, [X23+1144]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x2256000
	018 Move X0, [X0+1144]
	019 Call 0x1B6F7F0
	020 Move W8, 1
	021 Move [X21+1789], W8
	022 Move X22, X20
	023 Add X22, X22, 24
	024 Move X21, [X22]
	025 Move X0, [X23]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1B6F8F8
	030 Move X0, X21
	031 Move X1, X19
	032 Move X2, X31
	033 Call Object.op_Equality, X0, X1
	034 Add X9, X20, 32
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {56}
	039 Move X0, [X23]
	040 Move X20, [X9]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1B6F8F8
	045 Move X0, X20
	046 Move X1, X19
	047 Move X2, X31
	048 Call Object.op_Equality, X0, X1
	049 Move W8, W0
	050 Move X0, X31
	051 Move X9, X22
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {57}
	056 Move X0, [X9]
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Move X23, [X31+56]
	063 Return X0

Method: System.Void .ctor()

Disassembly:
	0x01CF8AC0 BL 0x18F46A8
	0x01CF8AC4 SUB X31, X31, 0x120

ISIL:
	001 Move X1, X31
	002 Call ForceConnection..ctor, X0
	003 Return 

