Type: AnimalCompany.GameGen.GenTester

Method: System.Void GenerateOnSocket()

Disassembly:
	0x01E16C40 FSUB S0, S0, S11
	0x01E16C44 FMUL S3, S0, S0
	0x01E16C48 FMUL S5, S2, S2
	0x01E16C4C FADD S3, S3, S4
	0x01E16C50 FADD S3, S5, S3
	0x01E16C54 FSQRT S6, S3
	0x01E16C58 FDIV S9, S0, S6
	0x01E16C5C FDIV S10, S1, S6
	0x01E16C60 FDIV S11, S2, S6
	0x01E16C64 ADD X0, X31, 0x30
	0x01E16C68 MOV V0.16B, V14.16B
	0x01E16C6C MOV V1.16B, V15.16B
	0x01E16C70 MOV V2.16B, V8.16B
	0x01E16C74 MOV V3.16B, V9.16B
	0x01E16C78 MOV V4.16B, V10.16B
	0x01E16C7C MOV V5.16B, V11.16B
	0x01E16C80 MOV W1, W23
	0x01E16C84 MOV X2, X31
	0x01E16C88 STR S6, [X31 + 0x10]
	0x01E16C8C BL 0x3C8B18C
	0x01E16C90 TBZ X0, 0x0, 0x1E171B0
	0x01E16C94 LDR X0, [X25]
	0x01E16C98 LDR X23, [X19 + 0x108]
	0x01E16C9C LDR W8, [X0 + 0xE0]
	0x01E16CA0 CBNZ W8, 0x1E16CA8
	0x01E16CA4 BL 0x1C16DFC
	0x01E16CA8 MOV X0, X23
	0x01E16CAC MOV X1, X31
	0x01E16CB0 MOV X2, X31
	0x01E16CB4 BL 0x3C3883C
	0x01E16CB8 TBZ X0, 0x0, 0x1E17084
	0x01E16CBC ADRP X8, 0x25C2000
	0x01E16CC0 LDRB W8, [X8 + 0x786]
	0x01E16CC4 CBNZ W8, 0x1E16CE0
	0x01E16CC8 ADRP X0, 0x22DD000
	0x01E16CCC LDR X0, [X0 + 0x5A0]
	0x01E16CD0 BL 0x1C16CF4
	0x01E16CD4 MOVZ W8, 0x1
	0x01E16CD8 ADRP X9, 0x25C2000
	0x01E16CDC STRB W8, [X9 + 0x786]
	0x01E16CE0 ADRP X8, 0x22DD000
	0x01E16CE4 LDR X8, [X8 + 0x5A0]
	0x01E16CE8 ADRP X9, 0x25C2000
	0x01E16CEC LDRB W9, [X9 + 0x785]
	0x01E16CF0 LDR X8, [X8]
	0x01E16CF4 LDR X8, [X8 + 0xB8]
	0x01E16CF8 LDP S8, S12, [X8 + 0x18]
	0x01E16CFC LDR V13, [X8 + 0x20]
	0x01E16D00 CBNZ W9, 0x1E16D18
	0x01E16D04 MOV X0, X20
	0x01E16D08 BL 0x1C16CF4
	0x01E16D0C MOVZ W8, 0x1
	0x01E16D10 ADRP X9, 0x25C2000
	0x01E16D14 STRB W8, [X9 + 0x785]
	0x01E16D18 LDR X0, [X20]
	0x01E16D1C LDR W8, [X0 + 0xE0]
	0x01E16D20 CBNZ W8, 0x1E16D28
	0x01E16D24 BL 0x1C16DFC
	0x01E16D28 FMUL S0, S10, S13
	0x01E16D2C FMUL S1, S11, S12
	0x01E16D30 FMUL S3, S11, S8
	0x01E16D34 FMUL S4, S9, S13
	0x01E16D38 FMUL S5, S9, S12
	0x01E16D3C FMUL S6, S10, S8
	0x01E16D40 FSUB S2, S0, S1
	0x01E16D44 FSUB S1, S3, S4
	0x01E16D48 FSUB S0, S5, S6
	0x01E16D4C FMUL S3, S2, S2
	0x01E16D50 FMUL S4, S1, S1
	0x01E16D54 FADD S3, S3, S4
	0x01E16D58 FMUL S4, S0, S0
	0x01E16D5C FADD S3, S4, S3
	0x01E16D60 LDR V4, [X31 + 0x8]
	0x01E16D64 FSQRT S3, S3
	0x01E16D68 FCMP S3, S4
	0x01E16D6C B.LE 0x1E16D80
	0x01E16D70 FDIV S11, S2, S3
	0x01E16D74 FDIV S14, S1, S3
	0x01E16D78 FDIV S13, S0, S3
	0x01E16D7C B 0x1E16DBC
	0x01E16D80 ADRP X8, 0x25C2000
	0x01E16D84 LDRB W8, [X8 + 0x783]
	0x01E16D88 CBNZ W8, 0x1E16DA4
	0x01E16D8C ADRP X0, 0x22DD000
	0x01E16D90 LDR X0, [X0 + 0x5A0]
	0x01E16D94 BL 0x1C16CF4
	0x01E16D98 MOVZ W8, 0x1
	0x01E16D9C ADRP X9, 0x25C2000
	0x01E16DA0 STRB W8, [X9 + 0x783]
	0x01E16DA4 ADRP X8, 0x22DD000
	0x01E16DA8 LDR X8, [X8 + 0x5A0]
	0x01E16DAC LDR X8, [X8]
	0x01E16DB0 LDR X8, [X8 + 0xB8]
	0x01E16DB4 LDP S11, S14, [X8]
	0x01E16DB8 LDR V13, [X8 + 0x8]
	0x01E16DBC ADRP X8, 0x22DF000
	0x01E16DC0 LDR X8, [X8 + 0x9B0]
	0x01E16DC4 LDR X0, [X8]
	0x01E16DC8 MOVZ W1, 0x4
	0x01E16DCC BL 0x1C16D6C
	0x01E16DD0 MOV X23, X0
	0x01E16DD4 MOV X0, X22
	0x01E16DD8 MOV X1, X31
	0x01E16DDC BL 0x3C32E90
	0x01E16DE0 CBZ X0, 0x1E172E4
	0x01E16DE4 MOV X1, X31
	0x01E16DE8 BL 0x3C3F58C
	0x01E16DEC LDR X0, [X19 + 0xA0]
	0x01E16DF0 CBZ X0, 0x1E172E8
	0x01E16DF4 MOV V8.16B, V0.16B
	0x01E16DF8 MOV V9.16B, V1.16B
	0x01E16DFC MOV V10.16B, V2.16B
	0x01E16E00 MOV X1, X31
	0x01E16E04 BL 0x3C3F988
	0x01E16E08 CBZ X23, 0x1E172D4
	0x01E16E0C LDR W8, [X23 + 0x18]
	0x01E16E10 CBZ W8, 0x1E172F0
	0x01E16E14 FMOV S3, 0.5
	0x01E16E18 FMUL S15, S11, S3
	0x01E16E1C FMUL S12, S14, S3
	0x01E16E20 FMUL S5, S13, S3
	0x01E16E24 LDR V3, [X31 + 0xC]
	0x01E16E28 FADD S4, S12, S9
	0x01E16E2C STR S5, [X31 + 0x14]
	0x01E16E30 FADD S5, S5, S10
	0x01E16E34 FMUL S0, S0, S3
	0x01E16E38 FMUL S1, S1, S3
	0x01E16E3C FMUL S2, S2, S3
	0x01E16E40 FADD S3, S15, S8
	0x01E16E44 FADD S0, S3, S0
	0x01E16E48 FADD S1, S4, S1
	0x01E16E4C FADD S2, S5, S2
	0x01E16E50 STP S0, S1, [X23 + 0x20]
	0x01E16E54 STR S2, [X23 + 0x28]
	0x01E16E58 MOV X0, X22
	0x01E16E5C MOV X1, X31
	0x01E16E60 BL 0x3C32E90
	0x01E16E64 CBZ X0, 0x1E172EC
	0x01E16E68 MOV X1, X31
	0x01E16E6C BL 0x3C3F58C
	0x01E16E70 LDR X0, [X19 + 0xA0]
	0x01E16E74 CBZ X0, 0x1E172E0
	0x01E16E78 MOV V8.16B, V0.16B
	0x01E16E7C MOV V9.16B, V1.16B
	0x01E16E80 MOV V10.16B, V2.16B
	0x01E16E84 MOV X1, X31
	0x01E16E88 BL 0x3C3F988
	0x01E16E8C LDR W8, [X23 + 0x18]
	0x01E16E90 CMP W8, 0x1
	0x01E16E94 B.LS 0x1E17300
	0x01E16E98 MOV V4.16B, V14.16B
	0x01E16E9C FMOV S3, -0.5
	0x01E16EA0 FMUL S14, S11, S3
	0x01E16EA4 FMUL S11, S4, S3
	0x01E16EA8 FMUL S13, S13, S3
	0x01E16EAC LDR V3, [X31 + 0xC]
	0x01E16EB0 FADD S4, S11, S9
	0x01E16EB4 FADD S5, S13, S10
	0x01E16EB8 FMUL S2, S2, S3
	0x01E16EBC FMUL S1, S1, S3
	0x01E16EC0 FMUL S0, S0, S3
	0x01E16EC4 FADD S3, S14, S8
	0x01E16EC8 FADD S2, S5, S2
	0x01E16ECC FADD S1, S4, S1
	0x01E16ED0 FADD S0, S3, S0
	0x01E16ED4 STP S0, S1, [X23 + 0x2C]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x25C3000
	011 Move X21, 0x22DE000
	012 Move W8, [X20+3583]
	013 Move X21, [X21+1432]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {48}
	019 Move X0, 0x22E4000
	020 Move X0, [X0+3384]
	021 Call 0x1C17CF4
	022 Move X0, 0x22DE000
	023 Move X0, [X0+1928]
	024 Call 0x1C17CF4
	025 Move X0, 0x22DE000
	026 Move X0, [X0+1432]
	027 Call 0x1C17CF4
	028 Move X0, 0x22E4000
	029 Move X0, [X0+3416]
	030 Call 0x1C17CF4
	031 Move X0, 0x22E5000
	032 Move X0, [X0+792]
	033 Call 0x1C17CF4
	034 Move X0, 0x22E5000
	035 Move X0, [X0+800]
	036 Call 0x1C17CF4
	037 Move X0, 0x22E5000
	038 Move X0, [X0+808]
	039 Call 0x1C17CF4
	040 Move X0, 0x22E5000
	041 Move X0, [X0+816]
	042 Call 0x1C17CF4
	043 Move X0, 0x22E4000
	044 Move X0, [X0+3456]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X20+3583], W8
	048 Move X0, [X21]
	049 Move X20, [X19+32]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X24, 0x22DE000
	055 Move X23, 0x22E5000
	056 Move X22, 0x22E5000
	057 Move X24, [X24+1928]
	058 Move X23, [X23+816]
	059 Move X22, [X22+792]
	060 Move X0, X20
	061 Move X1, X31
	062 Move X2, X31
	063 Call Object.op_Equality, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {82}
	068 Move X0, [X21]
	069 Move X20, [X19+40]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X0, X20
	075 Move X1, X31
	076 Move X2, X31
	077 Call Object.op_Equality, X0, X1
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {107}
	082 Move X0, [X24]
	083 Move X19, 0x22E4000
	084 Move W8, [X0+224]
	085 Move X19, [X19+3416]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move X1, [X19]
	090 Move X3, [X23]
	091 Move X4, [X22]
	092 Move W0, 32
	093 Move W5, 20
	094 Move X2, X31
	095 Move X6, X31
	096 Call Log.Error, X0, X1, X2, X3, X4, X5
	097 Move X20, [X31+64]
	098 Move X19, [X31+72]
	099 Move X22, [X31+48]
	100 Move X21, [X31+56]
	101 Move X24, [X31+32]
	102 Move X23, [X31+40]
	103 Move X30, [X31+16]
	104 Move X25, [X31+24]
	105 Add X31, X31, 80
	106 Return 
	107 Move X8, 0x22E4000
	108 Move X21, [X19+32]
	109 Move X8, [X8+3384]
	110 Move X0, [X8]
	111 Call 0x1C17F10
	112 Move X1, X21
	113 Move X20, X0
	114 Call Generator..ctor, X0, X1
	115 Move [X19+48], X20
	116 Move [X31+12], W31
	117 Move X21, [X19+40]
	118 Move W1, 0x86A0
	119 NotImplemented "Instruction MOVK not yet implemented."
	120 Move W0, W31
	121 Move X2, X31
	122 Call Random.Range, X0, X1
	123 Compare X20, 0
	124 JumpIfEqual {151}
	125 Move W3, W0
	126 Move W25, 1
	127 Move W5, 1
	128 Move X0, X20
	129 Move X1, X21
	130 Move X2, X31
	131 Move W4, W31
	132 Move W6, W31
	133 Call Generator.Generate, X0, X1, X2, X3, X4, X5, X6
	134 Move TEMP, X0
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfEqual {152}
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move [X31+12], W25
	140 Move X21, [X19+40]
	141 Move X20, [X19+48]
	142 Move W1, 0x86A0
	143 NotImplemented "Instruction MOVK not yet implemented."
	144 Move W0, W31
	145 Move X2, X31
	146 Call Random.Range, X0, X1
	147 Move W3, W0
	148 Add W25, W25, 1
	149 Compare X20, 0
	150 JumpIfNotEqual {127}
	151 Call 0x1C17F20
	152 Add X0, X31, 12
	153 Move X1, X31
	154 Call Int32.ToString, X0
	155 Move X8, 0x22E5000
	156 Move X8, [X8+808]
	157 Move X9, 0x22E4000
	158 Move X9, [X9+3456]
	159 Move X1, X0
	160 Move X8, [X8]
	161 Move X3, X31
	162 Move X2, [X9]
	163 Move X0, X8
	164 Call String.Concat, X0, X1, X2
	165 Move X8, [X24]
	166 Move X19, X0
	167 Move W9, [X8+224]
	168 Compare W9, 0
	169 JumpIfNotEqual {172}
	170 Move X0, X8
	171 Call 0x1C17DFC
	172 Move X3, [X23]
	173 Move X4, [X22]
	174 Move W0, 32
	175 Move W5, 29
	176 Move X1, X19
	177 Move X2, X31
	178 Move X6, X31
	179 Call Log.Debug, X0, X1, X2, X3, X4, X5
	180 Move X0, [X24]
	181 Move W8, [X0+224]
	182 Compare W8, 0
	183 JumpIfNotEqual {185}
	184 Call 0x1C17DFC
	185 Move X8, 0x22E5000
	186 Move X8, [X8+800]
	187 Move X3, [X23]
	188 Move X4, [X22]
	189 Move W0, 32
	190 Move X1, [X8]
	191 Move W5, 33

Method: System.Void .ctor()

Disassembly:
	0x01E16ED8 STR S2, [X23 + 0x34]
	0x01E16EDC MOV X0, X22

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

