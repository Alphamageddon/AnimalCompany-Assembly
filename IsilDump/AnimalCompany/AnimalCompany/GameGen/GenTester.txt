Type: AnimalCompany.GameGen.GenTester

Method: System.Void GenerateOnSocket()

Disassembly:
	0x01D03388 MOV V3.16B, V9.16B
	0x01D0338C MOV V4.16B, V10.16B
	0x01D03390 MOV V5.16B, V11.16B
	0x01D03394 MOV W1, W23
	0x01D03398 MOV X2, X31
	0x01D0339C STR S6, [X31 + 0x10]
	0x01D033A0 BL 0x3AF3258
	0x01D033A4 TBZ X0, 0x0, 0x1D038C4
	0x01D033A8 LDR X0, [X25]
	0x01D033AC LDR X23, [X19 + 0x108]
	0x01D033B0 LDR W8, [X0 + 0xE0]
	0x01D033B4 CBNZ W8, 0x1D033BC
	0x01D033B8 BL 0x1B6E8F8
	0x01D033BC MOV X0, X23
	0x01D033C0 MOV X1, X31
	0x01D033C4 MOV X2, X31
	0x01D033C8 BL 0x3AA0AF0
	0x01D033CC TBZ X0, 0x0, 0x1D03798
	0x01D033D0 ADRP X8, 0x2520000
	0x01D033D4 LDRB W8, [X8 + 0x442]
	0x01D033D8 CBNZ W8, 0x1D033F4
	0x01D033DC ADRP X0, 0x224A000
	0x01D033E0 LDR X0, [X0 + 0x480]
	0x01D033E4 BL 0x1B6E7F0
	0x01D033E8 MOVZ W8, 0x1
	0x01D033EC ADRP X9, 0x2520000
	0x01D033F0 STRB W8, [X9 + 0x442]
	0x01D033F4 ADRP X8, 0x224A000
	0x01D033F8 LDR X8, [X8 + 0x480]
	0x01D033FC ADRP X9, 0x2520000
	0x01D03400 LDRB W9, [X9 + 0x441]
	0x01D03404 LDR X8, [X8]
	0x01D03408 LDR X8, [X8 + 0xB8]
	0x01D0340C LDP S8, S12, [X8 + 0x18]
	0x01D03410 LDR V13, [X8 + 0x20]
	0x01D03414 CBNZ W9, 0x1D0342C
	0x01D03418 MOV X0, X20
	0x01D0341C BL 0x1B6E7F0
	0x01D03420 MOVZ W8, 0x1
	0x01D03424 ADRP X9, 0x2520000
	0x01D03428 STRB W8, [X9 + 0x441]
	0x01D0342C LDR X0, [X20]
	0x01D03430 LDR W8, [X0 + 0xE0]
	0x01D03434 CBNZ W8, 0x1D0343C
	0x01D03438 BL 0x1B6E8F8
	0x01D0343C FMUL S0, S10, S13
	0x01D03440 FMUL S1, S11, S12
	0x01D03444 FMUL S3, S11, S8
	0x01D03448 FMUL S4, S9, S13
	0x01D0344C FMUL S5, S9, S12
	0x01D03450 FMUL S6, S10, S8
	0x01D03454 FSUB S2, S0, S1
	0x01D03458 FSUB S1, S3, S4
	0x01D0345C FSUB S0, S5, S6
	0x01D03460 FMUL S3, S2, S2
	0x01D03464 FMUL S4, S1, S1
	0x01D03468 FADD S3, S3, S4
	0x01D0346C FMUL S4, S0, S0
	0x01D03470 FADD S3, S4, S3
	0x01D03474 LDR V4, [X31 + 0x8]
	0x01D03478 FSQRT S3, S3
	0x01D0347C FCMP S3, S4
	0x01D03480 B.LE 0x1D03494
	0x01D03484 FDIV S11, S2, S3
	0x01D03488 FDIV S14, S1, S3
	0x01D0348C FDIV S13, S0, S3
	0x01D03490 B 0x1D034D0
	0x01D03494 ADRP X8, 0x2520000
	0x01D03498 LDRB W8, [X8 + 0x43F]
	0x01D0349C CBNZ W8, 0x1D034B8
	0x01D034A0 ADRP X0, 0x224A000
	0x01D034A4 LDR X0, [X0 + 0x480]
	0x01D034A8 BL 0x1B6E7F0
	0x01D034AC MOVZ W8, 0x1
	0x01D034B0 ADRP X9, 0x2520000
	0x01D034B4 STRB W8, [X9 + 0x43F]
	0x01D034B8 ADRP X8, 0x224A000
	0x01D034BC LDR X8, [X8 + 0x480]
	0x01D034C0 LDR X8, [X8]
	0x01D034C4 LDR X8, [X8 + 0xB8]
	0x01D034C8 LDP S11, S14, [X8]
	0x01D034CC LDR V13, [X8 + 0x8]
	0x01D034D0 ADRP X8, 0x224C000
	0x01D034D4 LDR X8, [X8 + 0x2D0]
	0x01D034D8 LDR X0, [X8]
	0x01D034DC MOVZ W1, 0x4
	0x01D034E0 BL 0x1B6E868
	0x01D034E4 MOV X23, X0
	0x01D034E8 MOV X0, X22
	0x01D034EC MOV X1, X31
	0x01D034F0 BL 0x3A9B084
	0x01D034F4 CBZ X0, 0x1D039F8
	0x01D034F8 MOV X1, X31
	0x01D034FC BL 0x3AA7658
	0x01D03500 LDR X0, [X19 + 0xA0]
	0x01D03504 CBZ X0, 0x1D039FC
	0x01D03508 MOV V8.16B, V0.16B
	0x01D0350C MOV V9.16B, V1.16B
	0x01D03510 MOV V10.16B, V2.16B
	0x01D03514 MOV X1, X31
	0x01D03518 BL 0x3AA7A54
	0x01D0351C CBZ X23, 0x1D039E8
	0x01D03520 LDR W8, [X23 + 0x18]
	0x01D03524 CBZ W8, 0x1D03A04
	0x01D03528 FMOV S3, 0.5
	0x01D0352C FMUL S15, S11, S3
	0x01D03530 FMUL S12, S14, S3
	0x01D03534 FMUL S5, S13, S3
	0x01D03538 LDR V3, [X31 + 0xC]
	0x01D0353C FADD S4, S12, S9
	0x01D03540 STR S5, [X31 + 0x14]
	0x01D03544 FADD S5, S5, S10
	0x01D03548 FMUL S0, S0, S3
	0x01D0354C FMUL S1, S1, S3
	0x01D03550 FMUL S2, S2, S3
	0x01D03554 FADD S3, S15, S8
	0x01D03558 FADD S0, S3, S0
	0x01D0355C FADD S1, S4, S1
	0x01D03560 FADD S2, S5, S2
	0x01D03564 STP S0, S1, [X23 + 0x20]
	0x01D03568 STR S2, [X23 + 0x28]
	0x01D0356C MOV X0, X22
	0x01D03570 MOV X1, X31
	0x01D03574 BL 0x3A9B084
	0x01D03578 CBZ X0, 0x1D03A00
	0x01D0357C MOV X1, X31
	0x01D03580 BL 0x3AA7658
	0x01D03584 LDR X0, [X19 + 0xA0]
	0x01D03588 CBZ X0, 0x1D039F4
	0x01D0358C MOV V8.16B, V0.16B
	0x01D03590 MOV V9.16B, V1.16B
	0x01D03594 MOV V10.16B, V2.16B
	0x01D03598 MOV X1, X31
	0x01D0359C BL 0x3AA7A54
	0x01D035A0 LDR W8, [X23 + 0x18]
	0x01D035A4 CMP W8, 0x1
	0x01D035A8 B.LS 0x1D03A14
	0x01D035AC MOV V4.16B, V14.16B
	0x01D035B0 FMOV S3, -0.5
	0x01D035B4 FMUL S14, S11, S3
	0x01D035B8 FMUL S11, S4, S3
	0x01D035BC FMUL S13, S13, S3
	0x01D035C0 LDR V3, [X31 + 0xC]
	0x01D035C4 FADD S4, S11, S9
	0x01D035C8 FADD S5, S13, S10
	0x01D035CC FMUL S2, S2, S3
	0x01D035D0 FMUL S1, S1, S3
	0x01D035D4 FMUL S0, S0, S3
	0x01D035D8 FADD S3, S14, S8
	0x01D035DC FADD S2, S5, S2
	0x01D035E0 FADD S1, S4, S1
	0x01D035E4 FADD S0, S3, S0
	0x01D035E8 STP S0, S1, [X23 + 0x2C]
	0x01D035EC STR S2, [X23 + 0x34]
	0x01D035F0 MOV X0, X22
	0x01D035F4 MOV X1, X31
	0x01D035F8 BL 0x3A9B084
	0x01D035FC CBZ X0, 0x1D03A0C
	0x01D03600 MOV X1, X31
	0x01D03604 BL 0x3AA7658
	0x01D03608 LDR X0, [X19 + 0xA0]
	0x01D0360C CBZ X0, 0x1D039EC
	0x01D03610 MOV V8.16B, V0.16B
	0x01D03614 MOV V9.16B, V1.16B
	0x01D03618 MOV V10.16B, V2.16B
	0x01D0361C MOV X1, X31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x2521000
	011 Move X21, 0x224B000
	012 Move W8, [X20+1847]
	013 Move X21, [X21+1144]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {48}
	019 Move X0, 0x224E000
	020 Move X0, [X0+2640]
	021 Call 0x1B6F7F0
	022 Move X0, 0x224B000
	023 Move X0, [X0+1576]
	024 Call 0x1B6F7F0
	025 Move X0, 0x224B000
	026 Move X0, [X0+1144]
	027 Call 0x1B6F7F0
	028 Move X0, 0x224E000
	029 Move X0, [X0+2664]
	030 Call 0x1B6F7F0
	031 Move X0, 0x224E000
	032 Move X0, [X0+4088]
	033 Call 0x1B6F7F0
	034 Move X0, 0x224F000
	035 Move X0, [X0]
	036 Call 0x1B6F7F0
	037 Move X0, 0x224F000
	038 Move X0, [X0+8]
	039 Call 0x1B6F7F0
	040 Move X0, 0x224E000
	041 Move X0, [X0+2688]
	042 Call 0x1B6F7F0
	043 Move X0, 0x224E000
	044 Move X0, [X0+2704]
	045 Call 0x1B6F7F0
	046 Move W8, 1
	047 Move [X20+1847], W8
	048 Move X0, [X21]
	049 Move X20, [X19+32]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1B6F8F8
	054 Move X24, 0x224B000
	055 Move X23, 0x224E000
	056 Move X22, 0x224F000
	057 Move X24, [X24+1576]
	058 Move X23, [X23+4088]
	059 Move X22, [X22]
	060 Move X0, X20
	061 Move X1, X31
	062 Move X2, X31
	063 Call Object.op_Equality, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {82}
	068 Move X0, [X21]
	069 Move X20, [X19+40]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1B6F8F8
	074 Move X0, X20
	075 Move X1, X31
	076 Move X2, X31
	077 Call Object.op_Equality, X0, X1
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {107}
	082 Move X0, [X24]
	083 Move X19, 0x224E000
	084 Move W8, [X0+224]
	085 Move X19, [X19+2664]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1B6F8F8
	089 Move X1, [X19]
	090 Move X3, [X23]
	091 Move X4, [X22]
	092 Move W0, 32
	093 Move W5, 20
	094 Move X2, X31
	095 Move X6, X31
	096 Call Log.Error, X0, X1, X2, X3, X4, X5
	097 Move X20, [X31+64]
	098 Move X19, [X31+72]
	099 Move X22, [X31+48]
	100 Move X21, [X31+56]
	101 Move X24, [X31+32]
	102 Move X23, [X31+40]
	103 Move X30, [X31+16]
	104 Move X25, [X31+24]
	105 Add X31, X31, 80
	106 Return 
	107 Move X8, 0x224E000
	108 Move X21, [X19+32]
	109 Move X8, [X8+2640]
	110 Move X0, [X8]
	111 Call 0x1B6FA0C
	112 Move X1, X21
	113 Move X20, X0
	114 Call Generator..ctor, X0, X1
	115 Move [X19+48], X20
	116 Move [X31+12], W31
	117 Move X21, [X19+40]
	118 Move W1, 0x86A0
	119 NotImplemented "Instruction MOVK not yet implemented."
	120 Move W0, W31
	121 Move X2, X31
	122 Call Random.Range, X0, X1
	123 Compare X20, 0
	124 JumpIfEqual {151}
	125 Move W3, W0
	126 Move W25, 1
	127 Move W5, 1
	128 Move X0, X20
	129 Move X1, X21
	130 Move X2, X31
	131 Move W4, W31
	132 Move W6, W31
	133 Call Generator.Generate, X0, X1, X2, X3, X4, X5, X6
	134 Move TEMP, X0
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfEqual {152}
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move [X31+12], W25
	140 Move X21, [X19+40]
	141 Move X20, [X19+48]
	142 Move W1, 0x86A0
	143 NotImplemented "Instruction MOVK not yet implemented."
	144 Move W0, W31
	145 Move X2, X31
	146 Call Random.Range, X0, X1
	147 Move W3, W0
	148 Add W25, W25, 1
	149 Compare X20, 0
	150 JumpIfNotEqual {127}
	151 Call 0x1B6FA1C
	152 Add X0, X31, 12
	153 Move X1, X31
	154 Call Int32.ToString, X0
	155 Move X8, 0x224E000
	156 Move X8, [X8+2688]
	157 Move X9, 0x224E000
	158 Move X9, [X9+2704]
	159 Move X1, X0
	160 Move X8, [X8]
	161 Move X3, X31
	162 Move X2, [X9]
	163 Move X0, X8
	164 Call String.Concat, X0, X1, X2
	165 Move X8, [X24]
	166 Move X19, X0
	167 Move W9, [X8+224]
	168 Compare W9, 0
	169 JumpIfNotEqual {172}
	170 Move X0, X8
	171 Call 0x1B6F8F8
	172 Move X3, [X23]
	173 Move X4, [X22]
	174 Move W0, 32
	175 Move W5, 29
	176 Move X1, X19
	177 Move X2, X31
	178 Move X6, X31
	179 Call Log.Debug, X0, X1, X2, X3, X4, X5
	180 Move X0, [X24]
	181 Move W8, [X0+224]
	182 Compare W8, 0
	183 JumpIfNotEqual {185}
	184 Call 0x1B6F8F8
	185 Move X8, 0x224F000
	186 Move X8, [X8+8]
	187 Move X3, [X23]
	188 Move X4, [X22]
	189 Move W0, 32
	190 Move X1, [X8]
	191 Move W5, 33

Method: System.Void .ctor()

Disassembly:
	0x01D03620 BL 0x3AA7A54
	0x01D03624 LDR W8, [X23 + 0x18]

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

