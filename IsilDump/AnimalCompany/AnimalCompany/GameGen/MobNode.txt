Type: AnimalCompany.GameGen.MobNode

Method: UnityEngine.Color get_NodeBackgroundColor()

Disassembly:
	0x01CF8784 LDR W10, [X0 + 0x1C]
	0x01CF8788 LDR X8, [X0 + 0x10]
	0x01CF878C LDR X9, [X9]
	0x01CF8790 ADD W10, W10, 0x1
	0x01CF8794 STR W10, [X0 + 0x1C]
	0x01CF8798 CBZ X8, 0x1CF8A80
	0x01CF879C LDRSW X10, [X0 + 0x18]
	0x01CF87A0 LDR W11, [X8 + 0x18]
	0x01CF87A4 CMP W10, W11
	0x01CF87A8 B.CS 0x1CF87C0
	0x01CF87AC ADD W9, W10, 0x1
	0x01CF87B0 ADD X8, X8, X10, 0x3, LSL
	0x01CF87B4 STR W9, [X0 + 0x18]
	0x01CF87B8 STR X24, [X8 + 0x20]
	0x01CF87BC B 0x1CF87D4
	0x01CF87C0 LDR X8, [X9 + 0x20]
	0x01CF87C4 MOV X1, X24
	0x01CF87C8 LDR X8, [X8 + 0xC0]
	0x01CF87CC LDR X2, [X8 + 0x70]
	0x01CF87D0 BL 0x2E46518
	0x01CF87D4 LDR X0, [X24 + 0x38]
	0x01CF87D8 CBZ X0, 0x1CF8A80
	0x01CF87DC ADRP X8, 0x2258000
	0x01CF87E0 LDR X8, [X8 + 0x7B0]
	0x01CF87E4 LDR X1, [X8]
	0x01CF87E8 ADD X8, X31, 0x60
	0x01CF87EC BL 0x2E470E0
	0x01CF87F0 LDR V0, [X31 + 0x6]
	0x01CF87F4 LDR X8, [X31 + 0x70]
	0x01CF87F8 ADRP X23, 0x2258000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x252C000
	006 Move X19, 0x2259000
	007 Move W8, [X20+1785]
	008 Move X19, [X19+2480]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2259000
	014 Move X0, [X0+2480]
	015 Call 0x1B6F7F0
	016 Move W8, 1
	017 Move [X20+1785], W8
	018 Move X0, [X19]
	019 Add X1, X31, 0
	020 Move X2, X31
	021 Move [X31], X31
	022 Move [X31+8], X31
	023 Call ColorUtility.TryParseHtmlString, X0, X1
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {32}
	028 Move S0, [X31]
	029 Move S1, [X31+4]
	030 Move S2, [X31+8]
	031 Move S3, [X31+12]
	032 Move S1, W31
	033 Move S0, 1
	034 Move S2, W31
	035 Move S3, 1
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X30, [X31+16]
	039 Add X31, X31, 48
	040 Return X0

Method: UnityEngine.Color get_NodeLabelColor()

Disassembly:
	0x01CF87FC LDR X23, [X23 + 0x750]
	0x01CF8800 STR V0, [X31 + 0xA]
	0x01CF8804 STR X8, [X31 + 0xB0]
	0x01CF8808 ADRP X26, 0x2258000
	0x01CF880C LDR X26, [X26 + 0x780]

ISIL:
	001 Move S0, W31
	002 Move S1, W31
	003 Move S2, W31
	004 Move S3, 1
	005 Return X0

Method: System.String get_NodeIcon()

Disassembly:
	0x01CF8810 LDR X1, [X23]
	0x01CF8814 ADD X0, X31, 0xA0
	0x01CF8818 BL 0x2A14F30
	0x01CF881C TBZ X0, 0x0, 0x1CF88C8
	0x01CF8820 LDR X22, [X31 + 0xB0]
	0x01CF8824 LDR V0, [X31 + 0xC]
	0x01CF8828 LDR X8, [X31 + 0xD0]
	0x01CF882C STR V0, [X31 + 0x6]
	0x01CF8830 STR X8, [X31 + 0x70]
	0x01CF8834 CBZ X22, 0x1CF88E4
	0x01CF8838 LDR X8, [X31 + 0x70]
	0x01CF883C LDR V0, [X31 + 0x6]
	0x01CF8840 STR X8, [X22 + 0x48]
	0x01CF8844 STUR V0, [X22 + 0x38]
	0x01CF8848 LDR X0, [X28]
	0x01CF884C LDR W8, [X0 + 0xE0]
	0x01CF8850 CBNZ W8, 0x1CF8858
	0x01CF8854 BL 0x1B6E8F8
	0x01CF8858 MOV X0, X22
	0x01CF885C MOV X1, X25
	0x01CF8860 MOV X2, X31
	0x01CF8864 BL 0x3A9D6EC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x252C000
	005 Move X19, 0x2259000
	006 Move W8, [X20+1786]
	007 Move X19, [X19+1824]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2259000
	013 Move X0, [X0+1824]
	014 Call 0x1B6F7F0
	015 Move W8, 1
	016 Move [X20+1786], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1B6F8F8
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+96]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.String get_NodeTitle()

Disassembly:
	0x01CF8868 TBZ X0, 0x0, 0x1CF8810

ISIL:
No ISIL was generated
Method: System.String GetTitle()

Disassembly:
	0x01CF886C CBZ X21, 0x1CF88E8
	0x01CF8870 LDR W10, [X21 + 0x1C]
	0x01CF8874 LDR X8, [X21 + 0x10]
	0x01CF8878 LDR X9, [X26]
	0x01CF887C ADD W10, W10, 0x1
	0x01CF8880 STR W10, [X21 + 0x1C]
	0x01CF8884 CBZ X8, 0x1CF88EC
	0x01CF8888 LDRSW X10, [X21 + 0x18]
	0x01CF888C LDR W11, [X8 + 0x18]
	0x01CF8890 CMP W10, W11
	0x01CF8894 B.CS 0x1CF88AC
	0x01CF8898 ADD W9, W10, 0x1
	0x01CF889C ADD X8, X8, X10, 0x3, LSL
	0x01CF88A0 STR W9, [X21 + 0x18]
	0x01CF88A4 STR X22, [X8 + 0x20]
	0x01CF88A8 B 0x1CF8810
	0x01CF88AC LDR X8, [X9 + 0x20]
	0x01CF88B0 LDR X8, [X8 + 0xC0]
	0x01CF88B4 LDR X2, [X8 + 0x70]
	0x01CF88B8 MOV X0, X21
	0x01CF88BC MOV X1, X22
	0x01CF88C0 BL 0x2E46518
	0x01CF88C4 B 0x1CF8810
	0x01CF88C8 ADRP X8, 0x2258000
	0x01CF88CC LDR X8, [X8 + 0x730]
	0x01CF88D0 ADD X0, X31, 0xA0
	0x01CF88D4 LDR X1, [X8]
	0x01CF88D8 BL 0x2A14F2C
	0x01CF88DC MOVZ W23, 0x1
	0x01CF88E0 B 0x1CF896C
	0x01CF88E4 BL 0x1B6EA1C
	0x01CF88E8 BL 0x1B6EA1C
	0x01CF88EC BL 0x1B6EA1C
	0x01CF88F0 B 0x1CF8904
	0x01CF88F4 B 0x1CF8904
	0x01CF88F8 B 0x1CF8904
	0x01CF88FC B 0x1CF8904
	0x01CF8900 B 0x1CF8904
	0x01CF8904 MOV X22, X0
	0x01CF8908 CMP W1, 0x1
	0x01CF890C B.NE 0x1CF8A84
	0x01CF8910 MOV X0, X22
	0x01CF8914 BL 0x3D19840
	0x01CF8918 LDR X23, [X0]
	0x01CF891C BL 0x3D19850
	0x01CF8920 ADRP X8, 0x2258000
	0x01CF8924 LDR X8, [X8 + 0x730]
	0x01CF8928 ADD X0, X31, 0xA0
	0x01CF892C LDR X1, [X8]
	0x01CF8930 BL 0x2A14F2C
	0x01CF8934 CBNZ X23, 0x1CF8A8C
	0x01CF8938 MOV X0, X24
	0x01CF893C MOV X1, X31
	0x01CF8940 BL 0x3A9B0C0
	0x01CF8944 LDR X8, [X28]
	0x01CF8948 MOV X22, X0
	0x01CF894C LDR W9, [X8 + 0xE0]
	0x01CF8950 CBNZ W9, 0x1CF895C
	0x01CF8954 MOV X0, X8
	0x01CF8958 BL 0x1B6E8F8
	0x01CF895C MOV X0, X22
	0x01CF8960 MOV X1, X31
	0x01CF8964 BL 0x3AA16B0
	0x01CF8968 MOV W23, W31
	0x01CF896C ADRP X8, 0x2258000
	0x01CF8970 LDR X8, [X8 + 0x7E8]
	0x01CF8974 ADD X24, X31, 0xD8
	0x01CF8978 LDR X0, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x252C000
	005 Move W8, [X20+1787]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {25}
	011 Move X0, 0x2256000
	012 Move X0, [X0+1528]
	013 Call 0x1B6F7F0
	014 Move X0, 0x2259000
	015 Move X0, [X0+2488]
	016 Call 0x1B6F7F0
	017 Move X0, 0x2259000
	018 Move X0, [X0+2496]
	019 Call 0x1B6F7F0
	020 Move X0, 0x2259000
	021 Move X0, [X0+2288]
	022 Call 0x1B6F7F0
	023 Move W8, 1
	024 Move [X20+1787], W8
	025 Move X0, [X19+32]
	026 Move W20, [X19+48]
	027 Move X1, X31
	028 Call String.IsNullOrEmpty, X0
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {55}
	034 Move X8, 0x2259000
	035 Move X8, [X8+2288]
	036 Move X0, [X8]
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {56}
	041 Move X9, 0x2256000
	042 Move W8, [X19+48]
	043 Move X9, [X9+1528]
	044 Add X1, X31, 8
	045 Move [X31+8], W8
	046 Move X0, [X9]
	047 Call 0x1B6F900
	048 Move X8, 0x2259000
	049 Move X8, [X8+2488]
	050 Move X1, X0
	051 Move X2, X31
	052 Move X8, [X8]
	053 Move X0, X8
	054 Call String.Format, X0, X1
	055 Move X0, [X19+32]
	056 Move X9, 0x2256000
	057 Move X20, [X19+32]
	058 Move W8, [X19+48]
	059 Move X9, [X9+1528]
	060 Add X1, X31, 12
	061 Move [X31+12], W8
	062 Move X0, [X9]
	063 Call 0x1B6F900
	064 Move X8, 0x2259000
	065 Move X8, [X8+2496]
	066 Move X2, X0
	067 Move X1, X20
	068 Move X3, X31
	069 Move X8, [X8]
	070 Move X0, X8
	071 Call String.Format, X0, X1, X2
	072 Move X20, [X31+16]
	073 Move X19, [X31+24]
	074 Move X30, [X31+32]
	075 Return X0

Method: System.Void .ctor()

Disassembly:
	0x01CF897C BL 0x1B6EA0C
	0x01CF8980 ADRP X8, 0x2258000
	0x01CF8984 LDR X8, [X8 + 0x7C0]
	0x01CF8988 MOV X22, X0

ISIL:
	001 Move W8, 1
	002 Move X1, X31
	003 Move [X0+48], W8
	004 Call ForceNode..ctor, X0
	005 Return 

