Type: AnimalCompany.GameGen.MobNode

Method: UnityEngine.Color get_NodeBackgroundColor()

Disassembly:
	0x01E0BBB0 STR W10, [X0 + 0x1C]
	0x01E0BBB4 CBZ X8, 0x1E0BE9C
	0x01E0BBB8 LDRSW X10, [X0 + 0x18]
	0x01E0BBBC LDR W11, [X8 + 0x18]
	0x01E0BBC0 CMP W10, W11
	0x01E0BBC4 B.CS 0x1E0BBDC
	0x01E0BBC8 ADD W9, W10, 0x1
	0x01E0BBCC ADD X8, X8, X10, 0x3, LSL
	0x01E0BBD0 STR W9, [X0 + 0x18]
	0x01E0BBD4 STR X24, [X8 + 0x20]
	0x01E0BBD8 B 0x1E0BBF0
	0x01E0BBDC LDR X8, [X9 + 0x20]
	0x01E0BBE0 MOV X1, X24
	0x01E0BBE4 LDR X8, [X8 + 0xC0]
	0x01E0BBE8 LDR X2, [X8 + 0x70]
	0x01E0BBEC BL 0x301BF90
	0x01E0BBF0 LDR X0, [X24 + 0x38]
	0x01E0BBF4 CBZ X0, 0x1E0BE9C
	0x01E0BBF8 ADRP X8, 0x22EE000
	0x01E0BBFC LDR X8, [X8 + 0xA28]
	0x01E0BC00 LDR X1, [X8]
	0x01E0BC04 ADD X8, X31, 0x60
	0x01E0BC08 BL 0x301CB58
	0x01E0BC0C LDR V0, [X31 + 0x6]
	0x01E0BC10 LDR X8, [X31 + 0x70]
	0x01E0BC14 ADRP X23, 0x22EE000
	0x01E0BC18 LDR X23, [X23 + 0xA00]
	0x01E0BC1C STR V0, [X31 + 0xA]
	0x01E0BC20 STR X8, [X31 + 0xB0]
	0x01E0BC24 ADRP X26, 0x22EE000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x25CE000
	006 Move X19, 0x22EF000
	007 Move W8, [X20+3516]
	008 Move X19, [X19+3208]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x22EF000
	014 Move X0, [X0+3208]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+3516], W8
	018 Move X0, [X19]
	019 Add X1, X31, 0
	020 Move X2, X31
	021 Move [X31], X31
	022 Move [X31+8], X31
	023 Call ColorUtility.TryParseHtmlString, X0, X1
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {32}
	028 Move S0, [X31]
	029 Move S1, [X31+4]
	030 Move S2, [X31+8]
	031 Move S3, [X31+12]
	032 Move S1, W31
	033 Move S0, 1
	034 Move S2, W31
	035 Move S3, 1
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X30, [X31+16]
	039 Add X31, X31, 48
	040 Return X0

Method: UnityEngine.Color get_NodeLabelColor()

Disassembly:
	0x01E0BC28 LDR X26, [X26 + 0xA10]
	0x01E0BC2C LDR X1, [X23]
	0x01E0BC30 ADD X0, X31, 0xA0
	0x01E0BC34 BL 0x2BC4350
	0x01E0BC38 TBZ X0, 0x0, 0x1E0BCE4

ISIL:
	001 Move S0, W31
	002 Move S1, W31
	003 Move S2, W31
	004 Move S3, 1
	005 Return X0

Method: System.String get_NodeIcon()

Disassembly:
	0x01E0BC3C LDR X22, [X31 + 0xB0]
	0x01E0BC40 LDR V0, [X31 + 0xC]
	0x01E0BC44 LDR X8, [X31 + 0xD0]
	0x01E0BC48 STR V0, [X31 + 0x6]
	0x01E0BC4C STR X8, [X31 + 0x70]
	0x01E0BC50 CBZ X22, 0x1E0BD00
	0x01E0BC54 LDR X8, [X31 + 0x70]
	0x01E0BC58 LDR V0, [X31 + 0x6]
	0x01E0BC5C STR X8, [X22 + 0x58]
	0x01E0BC60 STUR V0, [X22 + 0x48]
	0x01E0BC64 LDR X0, [X28]
	0x01E0BC68 LDR W8, [X0 + 0xE0]
	0x01E0BC6C CBNZ W8, 0x1E0BC74
	0x01E0BC70 BL 0x1C16DFC
	0x01E0BC74 MOV X0, X22
	0x01E0BC78 MOV X1, X25
	0x01E0BC7C MOV X2, X31
	0x01E0BC80 BL 0x3C354F8
	0x01E0BC84 TBZ X0, 0x0, 0x1E0BC2C
	0x01E0BC88 CBZ X21, 0x1E0BD04
	0x01E0BC8C LDR W10, [X21 + 0x1C]
	0x01E0BC90 LDR X8, [X21 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x25CE000
	005 Move X19, 0x22EF000
	006 Move W8, [X20+3517]
	007 Move X19, [X19+2696]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22EF000
	013 Move X0, [X0+2696]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3517], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+104]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.String get_NodeTitle()

Disassembly:
	0x01E0BC94 LDR X9, [X26]

ISIL:
No ISIL was generated
Method: System.String GetTitle()

Disassembly:
	0x01E0BC98 ADD W10, W10, 0x1
	0x01E0BC9C STR W10, [X21 + 0x1C]
	0x01E0BCA0 CBZ X8, 0x1E0BD08
	0x01E0BCA4 LDRSW X10, [X21 + 0x18]
	0x01E0BCA8 LDR W11, [X8 + 0x18]
	0x01E0BCAC CMP W10, W11
	0x01E0BCB0 B.CS 0x1E0BCC8
	0x01E0BCB4 ADD W9, W10, 0x1
	0x01E0BCB8 ADD X8, X8, X10, 0x3, LSL
	0x01E0BCBC STR W9, [X21 + 0x18]
	0x01E0BCC0 STR X22, [X8 + 0x20]
	0x01E0BCC4 B 0x1E0BC2C
	0x01E0BCC8 LDR X8, [X9 + 0x20]
	0x01E0BCCC LDR X8, [X8 + 0xC0]
	0x01E0BCD0 LDR X2, [X8 + 0x70]
	0x01E0BCD4 MOV X0, X21
	0x01E0BCD8 MOV X1, X22
	0x01E0BCDC BL 0x301BF90
	0x01E0BCE0 B 0x1E0BC2C
	0x01E0BCE4 ADRP X8, 0x22EE000
	0x01E0BCE8 LDR X8, [X8 + 0x9F8]
	0x01E0BCEC ADD X0, X31, 0xA0
	0x01E0BCF0 LDR X1, [X8]
	0x01E0BCF4 BL 0x2BC434C
	0x01E0BCF8 MOVZ W23, 0x1
	0x01E0BCFC B 0x1E0BD88
	0x01E0BD00 BL 0x1C16F20
	0x01E0BD04 BL 0x1C16F20
	0x01E0BD08 BL 0x1C16F20
	0x01E0BD0C B 0x1E0BD20
	0x01E0BD10 B 0x1E0BD20
	0x01E0BD14 B 0x1E0BD20
	0x01E0BD18 B 0x1E0BD20
	0x01E0BD1C B 0x1E0BD20
	0x01E0BD20 MOV X22, X0
	0x01E0BD24 CMP W1, 0x1
	0x01E0BD28 B.NE 0x1E0BEA0
	0x01E0BD2C MOV X0, X22
	0x01E0BD30 BL 0x3EB1AD0
	0x01E0BD34 LDR X23, [X0]
	0x01E0BD38 BL 0x3EB1AE0
	0x01E0BD3C ADRP X8, 0x22EE000
	0x01E0BD40 LDR X8, [X8 + 0x9F8]
	0x01E0BD44 ADD X0, X31, 0xA0
	0x01E0BD48 LDR X1, [X8]
	0x01E0BD4C BL 0x2BC434C
	0x01E0BD50 CBNZ X23, 0x1E0BEA8
	0x01E0BD54 MOV X0, X24
	0x01E0BD58 MOV X1, X31
	0x01E0BD5C BL 0x3C32ECC
	0x01E0BD60 LDR X8, [X28]
	0x01E0BD64 MOV X22, X0
	0x01E0BD68 LDR W9, [X8 + 0xE0]
	0x01E0BD6C CBNZ W9, 0x1E0BD78
	0x01E0BD70 MOV X0, X8
	0x01E0BD74 BL 0x1C16DFC
	0x01E0BD78 MOV X0, X22
	0x01E0BD7C MOV X1, X31
	0x01E0BD80 BL 0x3C39564
	0x01E0BD84 MOV W23, W31
	0x01E0BD88 ADRP X8, 0x22EE000
	0x01E0BD8C LDR X8, [X8 + 0xAD0]
	0x01E0BD90 ADD X24, X31, 0xD8
	0x01E0BD94 LDR X0, [X8]
	0x01E0BD98 BL 0x1C16F10
	0x01E0BD9C ADRP X8, 0x22EE000
	0x01E0BDA0 LDR X8, [X8 + 0xAB8]
	0x01E0BDA4 MOV X22, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x25CE000
	005 Move W8, [X20+3518]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {25}
	011 Move X0, 0x22E9000
	012 Move X0, [X0+1880]
	013 Call 0x1C17CF4
	014 Move X0, 0x22EF000
	015 Move X0, [X0+3216]
	016 Call 0x1C17CF4
	017 Move X0, 0x22EF000
	018 Move X0, [X0+3224]
	019 Call 0x1C17CF4
	020 Move X0, 0x22EF000
	021 Move X0, [X0+3008]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+3518], W8
	025 Move X0, [X19+48]
	026 Move W20, [X19+64]
	027 Move X1, X31
	028 Call String.IsNullOrEmpty, X0
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {55}
	034 Move X8, 0x22EF000
	035 Move X8, [X8+3008]
	036 Move X0, [X8]
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {56}
	041 Move X9, 0x22E9000
	042 Move W8, [X19+64]
	043 Move X9, [X9+1880]
	044 Add X1, X31, 8
	045 Move [X31+8], W8
	046 Move X0, [X9]
	047 Call 0x1C17E04
	048 Move X8, 0x22EF000
	049 Move X8, [X8+3216]
	050 Move X1, X0
	051 Move X2, X31
	052 Move X8, [X8]
	053 Move X0, X8
	054 Call String.Format, X0, X1
	055 Move X0, [X19+48]
	056 Move X9, 0x22E9000
	057 Move X20, [X19+48]
	058 Move W8, [X19+64]
	059 Move X9, [X9+1880]
	060 Add X1, X31, 12
	061 Move [X31+12], W8
	062 Move X0, [X9]
	063 Call 0x1C17E04
	064 Move X8, 0x22EF000
	065 Move X8, [X8+3224]
	066 Move X2, X0
	067 Move X1, X20
	068 Move X3, X31
	069 Move X8, [X8]
	070 Move X0, X8
	071 Call String.Format, X0, X1, X2
	072 Move X20, [X31+16]
	073 Move X19, [X31+24]
	074 Move X30, [X31+32]
	075 Return X0

Method: System.Void .ctor()

Disassembly:
	0x01E0BDA8 LDR X1, [X8]
	0x01E0BDAC BL 0x2F64678
	0x01E0BDB0 LDR V0, [X31 + 0xC]
	0x01E0BDB4 LDR X8, [X31 + 0xD0]

ISIL:
	001 Move W8, 1
	002 Move X1, X31
	003 Move [X0+64], W8
	004 Call ForceNode..ctor, X0
	005 Return 

