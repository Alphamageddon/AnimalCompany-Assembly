Type: AnimalCompany.GameGen.GameGenUtil/<>c__DisplayClass1_0

Method: System.Void .ctor()

Disassembly:
	0x01CFDCDC BL 0x3AA7658
	0x01CFDCE0 LDR W8, [X19 + 0x18]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean <lowestXCoord>b__0(AnimalCompany.GameGen.Socket p)

Disassembly:
	0x01CFDD70 FADD S0, S0, S1
	0x01CFDD74 FMUL S1, S2, S2
	0x01CFDD78 FADD S0, S1, S0
	0x01CFDD7C FSQRT S0, S0
	0x01CFDD80 FCMP S0, S14
	0x01CFDD84 B.PL 0x1CFDDCC
	0x01CFDD88 LDR W8, [X19 + 0x18]
	0x01CFDD8C CMP X27, X8
	0x01CFDD90 B.CS 0x1CFDE80
	0x01CFDD94 ADRP X22, 0x2253000
	0x01CFDD98 LDR X22, [X22 + 0xC50]
	0x01CFDD9C CBZ X20, 0x1CFDE84
	0x01CFDDA0 LDR X1, [X21]
	0x01CFDDA4 LDR X2, [X22]
	0x01CFDDA8 MOV X0, X20
	0x01CFDDAC BL 0x2BD43FC
	0x01CFDDB0 LDR W8, [X19 + 0x18]
	0x01CFDDB4 CMP W25, W8
	0x01CFDDB8 B.CS 0x1CFDE80
	0x01CFDDBC LDR X1, [X26, X28, LSL #3]
	0x01CFDDC0 LDR X2, [X22]
	0x01CFDDC4 MOV X0, X20
	0x01CFDDC8 BL 0x2BD43FC
	0x01CFDDCC LDR X8, [X19 + 0x18]
	0x01CFDDD0 ADD X28, X28, 0x1
	0x01CFDDD4 ADD W9, W29, W28
	0x01CFDDD8 CMP W9, W8
	0x01CFDDDC B.LT 0x1CFDC58
	0x01CFDDE0 LDR X9, [X31 + 0x8]
	0x01CFDDE4 ADD X26, X26, 0x8
	0x01CFDDE8 CMP X9, W8, SXTW
	0x01CFDDEC ADD X29, X29, 0x1
	0x01CFDDF0 MOV X27, X9
	0x01CFDDF4 B.LT 0x1CFDC3C
	0x01CFDDF8 CMP W8, 0x1
	0x01CFDDFC B.LT 0x1CFDE50
	0x01CFDE00 ADRP X23, 0x2253000
	0x01CFDE04 LDR X23, [X23 + 0xC58]
	0x01CFDE08 MOV X22, X31
	0x01CFDE0C ADD X24, X19, 0x20
	0x01CFDE10 CMP W22, W8
	0x01CFDE14 B.CS 0x1CFDE80
	0x01CFDE18 CBZ X20, 0x1CFDE84
	0x01CFDE1C LDR X21, [X24, X22, LSL #3]
	0x01CFDE20 LDR X2, [X23]
	0x01CFDE24 MOV X0, X20
	0x01CFDE28 MOV X1, X21
	0x01CFDE2C BL 0x2BD397C
	0x01CFDE30 CBZ X21, 0x1CFDE84
	0x01CFDE34 AND W1, W0, 0x1
	0x01CFDE38 MOV X0, X21
	0x01CFDE3C BL 0x1CFBF7C
	0x01CFDE40 LDR W8, [X19 + 0x18]
	0x01CFDE44 ADD X22, X22, 0x1
	0x01CFDE48 CMP W22, W8
	0x01CFDE4C B.LT 0x1CFDE10
	0x01CFDE50 LDP X20, X19, [X31 + 0x90]
	0x01CFDE54 LDP X22, X21, [X31 + 0x80]
	0x01CFDE58 LDP X24, X23, [X31 + 0x70]
	0x01CFDE5C LDP X26, X25, [X31 + 0x60]
	0x01CFDE60 LDP X28, X27, [X31 + 0x50]
	0x01CFDE64 LDP X29, X30, [X31 + 0x40]
	0x01CFDE68 LDP D9, D8, [X31 + 0x30]
	0x01CFDE6C LDP D11, D10, [X31 + 0x20]
	0x01CFDE70 LDP D13, D12, [X31 + 0x10]
	0x01CFDE74 MOVZ W0, 0x1
	0x01CFDE78 LDR V14, [X31], #0xA0
	0x01CFDE7C RET
	0x01CFDE80 BL 0x1B6EA24
	0x01CFDE84 BL 0x1B6EA1C
	0x01CFDE88 SUB X31, X31, 0xE0
	0x01CFDE8C STR D10, [X31 + 0x60]
	0x01CFDE90 STP D9, D8, [X31 + 0x70]
	0x01CFDE94 STP X29, X30, [X31 + 0x80]
	0x01CFDE98 STP X28, X27, [X31 + 0x90]
	0x01CFDE9C STP X26, X25, [X31 + 0xA0]

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2527000
	009 Move W8, [X21+1823]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x2254000
	017 Move X0, [X0+2912]
	018 Call 0x1B6F7F0
	019 Move X0, 0x2254000
	020 Move X0, [X0+2920]
	021 Call 0x1B6F7F0
	022 Move X0, 0x2254000
	023 Move X0, [X0+2928]
	024 Call 0x1B6F7F0
	025 Move X0, 0x2254000
	026 Move X0, [X0+2904]
	027 Call 0x1B6F7F0
	028 Move W8, 1
	029 Move [X21+1823], W8
	030 Compare X20, 0
	031 JumpIfEqual {90}
	032 Move X0, X20
	033 Move X1, X31
	034 Call Component.get_transform, X0
	035 Compare X0, 0
	036 JumpIfEqual {90}
	037 Move X22, 0x2254000
	038 Move X22, [X22+2904]
	039 Move X1, X31
	040 Call Transform.get_position, X0
	041 Move X0, [X22]
	042 Move X19, [X19+16]
	043 Move V8, V0
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {49}
	047 Call 0x1B6F8F8
	048 Move X0, [X22]
	049 Move X8, [X0+184]
	050 Move X23, 0x2254000
	051 Move X20, [X8+8]
	052 Move X23, [X23+2912]
	053 Compare X20, 0
	054 JumpIfNotEqual {76}
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {60}
	058 Call 0x1B6F8F8
	059 Move X0, [X22]
	060 Move X9, 0x2254000
	061 Move X8, [X0+184]
	062 Move X9, [X9+2920]
	063 Move X21, [X8]
	064 Move X0, [X9]
	065 Call 0x1B6FA0C
	066 Move X8, 0x2254000
	067 Move X8, [X8+2928]
	068 Move X1, X21
	069 Move X3, X31
	070 Move X20, X0
	071 Move X2, [X8]
	072 Call Func`2<Object, Single>..ctor, X0, X1, X2
	073 Move X8, [X22]
	074 Move X8, [X8+184]
	075 Move [X8+8], X20
	076 Move X2, [X23]
	077 Move X0, X19
	078 Move X1, X20
	079 Call 0x20B5E0C, X0, X1
	080 Move X20, [X31+48]
	081 Move X19, [X31+56]
	082 Move X22, [X31+32]
	083 Move X21, [X31+40]
	084 Move X30, [X31+16]
	085 Move X23, [X31+24]
	086 NotImplemented "Instruction FCMP not yet implemented."
	087 NotImplemented "Instruction CSET not yet implemented."
	088 Move V8, [X31+64]
	089 Return X0
	090 Call 0x1B6FA1C

