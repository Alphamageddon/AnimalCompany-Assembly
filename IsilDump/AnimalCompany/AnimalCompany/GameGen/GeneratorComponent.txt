Type: AnimalCompany.GameGen.GeneratorComponent

Method: System.Void OnEnable()

Disassembly:
	0x01CFA454 LDR X22, [X22 + 0xA98]
	0x01CFA458 LDR X20, [X20 + 0x478]
	0x01CFA45C MOV X19, X0
	0x01CFA460 TBNZ X8, 0x0, 0x1CFA49C
	0x01CFA464 ADRP X0, 0x2256000
	0x01CFA468 LDR X0, [X0 + 0xA98]
	0x01CFA46C BL 0x1B6E7F0
	0x01CFA470 ADRP X0, 0x2253000
	0x01CFA474 LDR X0, [X0 + 0x8B8]
	0x01CFA478 BL 0x1B6E7F0
	0x01CFA47C ADRP X0, 0x2253000
	0x01CFA480 LDR X0, [X0 + 0x478]
	0x01CFA484 BL 0x1B6E7F0
	0x01CFA488 ADRP X0, 0x2256000
	0x01CFA48C LDR X0, [X0 + 0xAA0]
	0x01CFA490 BL 0x1B6E7F0
	0x01CFA494 MOVZ W8, 0x1
	0x01CFA498 STRB W8, [X21 + 0x712]
	0x01CFA49C LDR X1, [X22]
	0x01CFA4A0 MOV X0, X19
	0x01CFA4A4 BL 0x208FDE8
	0x01CFA4A8 LDR X8, [X20]
	0x01CFA4AC MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x252A000
	006 Move X20, 0x2257000
	007 Move W8, [X21+1805]
	008 Move X20, [X20+376]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2257000
	015 Move X0, [X0+376]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X21+1805], W8
	019 Move X0, [X20]
	020 Move X19, [X19+40]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1B6F8F8
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call GlobalNavZones.RegisterZones, X0
	032 Return 

Method: System.Void OnDisable()

Disassembly:
	0x01CFA4B0 LDR W9, [X8 + 0xE0]
	0x01CFA4B4 CBNZ W9, 0x1CFA4C0
	0x01CFA4B8 MOV X0, X8
	0x01CFA4BC BL 0x1B6E8F8
	0x01CFA4C0 MOV X0, X20
	0x01CFA4C4 MOV X1, X31
	0x01CFA4C8 MOV X2, X31
	0x01CFA4CC BL 0x3AA0AF0
	0x01CFA4D0 TBZ X0, 0x0, 0x1CFA540
	0x01CFA4D4 MOV X0, X19
	0x01CFA4D8 MOV X1, X31
	0x01CFA4DC BL 0x3A9B0C0
	0x01CFA4E0 CBZ X0, 0x1CFA568
	0x01CFA4E4 MOV X1, X31
	0x01CFA4E8 BL 0x3AA0C88
	0x01CFA4EC ADRP X8, 0x2256000
	0x01CFA4F0 LDR X8, [X8 + 0xAA0]
	0x01CFA4F4 MOV X1, X0
	0x01CFA4F8 MOV X2, X31
	0x01CFA4FC LDR X8, [X8]
	0x01CFA500 MOV X0, X8
	0x01CFA504 BL 0x3084780
	0x01CFA508 ADRP X8, 0x2253000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x252A000
	006 Move X20, 0x2257000
	007 Move W8, [X21+1806]
	008 Move X20, [X20+376]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2257000
	015 Move X0, [X0+376]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X21+1806], W8
	019 Move X0, [X20]
	020 Move X19, [X19+40]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1B6F8F8
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call GlobalNavZones.DeregisterZones, X0
	032 Return 

Method: System.Void Generate()

Disassembly:
	0x01CFA50C LDR X8, [X8 + 0x8B8]
	0x01CFA510 MOV X19, X0
	0x01CFA514 LDR X8, [X8]
	0x01CFA518 LDR W9, [X8 + 0xE0]
	0x01CFA51C CBNZ W9, 0x1CFA528
	0x01CFA520 MOV X0, X8
	0x01CFA524 BL 0x1B6E8F8
	0x01CFA528 MOV X0, X19
	0x01CFA52C LDP X20, X19, [X31 + 0x20]
	0x01CFA530 LDP X22, X21, [X31 + 0x10]
	0x01CFA534 MOV X1, X31
	0x01CFA538 LDR X30, [X31], #0x30
	0x01CFA53C B 0x3A6F5F8
	0x01CFA540 LDP S0, S1, [X19 + 0x20]
	0x01CFA544 MOV X0, X31
	0x01CFA548 BL 0x3A98CD0
	0x01CFA54C CBZ X20, 0x1CFA568
	0x01CFA550 MOV X0, X20
	0x01CFA554 LDP X20, X19, [X31 + 0x20]
	0x01CFA558 LDP X22, X21, [X31 + 0x10]
	0x01CFA55C MOV X1, X31
	0x01CFA560 LDR X30, [X31], #0x30
	0x01CFA564 B 0x3A7F1D4
	0x01CFA568 BL 0x1B6EA1C
	0x01CFA56C FMOV V0.2S, 0x0
	0x01CFA570 MOV X1, X31
	0x01CFA574 STR D0, [X0 + 0x20]
	0x01CFA578 B 0x3A9EEE4
	0x01CFA57C STP X30, X25, [X31 - 0x40]!
	0x01CFA580 STP X24, X23, [X31 + 0x10]
	0x01CFA584 STP X22, X21, [X31 + 0x20]
	0x01CFA588 STP X20, X19, [X31 + 0x30]
	0x01CFA58C ADRP X22, 0x2529000
	0x01CFA590 ADRP X23, 0x2256000
	0x01CFA594 LDRB W8, [X22 + 0x713]
	0x01CFA598 LDR X23, [X23 + 0xAA8]
	0x01CFA59C MOV X20, X2
	0x01CFA5A0 MOV X19, X1
	0x01CFA5A4 MOV X21, X0
	0x01CFA5A8 TBNZ X8, 0x0, 0x1CFA608
	0x01CFA5AC ADRP X0, 0x2256000
	0x01CFA5B0 LDR X0, [X0 + 0xAA8]
	0x01CFA5B4 BL 0x1B6E7F0
	0x01CFA5B8 ADRP X0, 0x2256000
	0x01CFA5BC LDR X0, [X0 + 0xAB0]
	0x01CFA5C0 BL 0x1B6E7F0
	0x01CFA5C4 ADRP X0, 0x2256000
	0x01CFA5C8 LDR X0, [X0 + 0xAB8]
	0x01CFA5CC BL 0x1B6E7F0
	0x01CFA5D0 ADRP X0, 0x2253000
	0x01CFA5D4 LDR X0, [X0 + 0x8E0]
	0x01CFA5D8 BL 0x1B6E7F0
	0x01CFA5DC ADRP X0, 0x2256000
	0x01CFA5E0 LDR X0, [X0 + 0xAC0]
	0x01CFA5E4 BL 0x1B6E7F0
	0x01CFA5E8 ADRP X0, 0x2253000
	0x01CFA5EC LDR X0, [X0 + 0x478]
	0x01CFA5F0 BL 0x1B6E7F0
	0x01CFA5F4 ADRP X0, 0x2256000
	0x01CFA5F8 LDR X0, [X0 + 0xAC8]
	0x01CFA5FC BL 0x1B6E7F0
	0x01CFA600 MOVZ W8, 0x1
	0x01CFA604 STRB W8, [X22 + 0x713]
	0x01CFA608 LDR X2, [X23]
	0x01CFA60C MOVZ W1, 0x1
	0x01CFA610 MOV X0, X21
	0x01CFA614 BL 0x2090B0C
	0x01CFA618 CBZ X0, 0x1CFA8C8
	0x01CFA61C LDR W8, [X0 + 0x18]
	0x01CFA620 MOV X22, X0
	0x01CFA624 CMP W8, 0x1
	0x01CFA628 B.LT 0x1CFA6B4
	0x01CFA62C ADRP X25, 0x2256000
	0x01CFA630 LDR X25, [X25 + 0xAC0]
	0x01CFA634 MOV W24, W31
	0x01CFA638 CMP W24, W8
	0x01CFA63C B.CS 0x1CFA8CC
	0x01CFA640 ADD X8, X22, W24, 0x3, SXTW
	0x01CFA644 LDR X23, [X8 + 0x20]
	0x01CFA648 CBZ X23, 0x1CFA8C8
	0x01CFA64C LDR X8, [X23]
	0x01CFA650 LDR X1, [X25]
	0x01CFA654 LDRH W9, [X8 + 0x12E]
	0x01CFA658 CBZ X9, 0x1CFA67C
	0x01CFA65C LDR X10, [X8 + 0xB0]
	0x01CFA660 ADD X10, X10, 0x8
	0x01CFA664 LDUR X11, [X10 - 0x8]
	0x01CFA668 CMP X11, X1
	0x01CFA66C B.EQ 0x1CFA68C
	0x01CFA670 SUBS X9, X9, 0x1
	0x01CFA674 ADD X10, X10, 0x10
	0x01CFA678 B.NE 0x1CFA664
	0x01CFA67C MOV X0, X23
	0x01CFA680 MOV W2, W31
	0x01CFA684 BL 0x1BB4284
	0x01CFA688 B 0x1CFA698
	0x01CFA68C LDRSW X9, [X10]
	0x01CFA690 ADD X8, X8, X9, 0x4, LSL
	0x01CFA694 ADD X0, X8, 0x138
	0x01CFA698 LDP X8, X1, [X0]
	0x01CFA69C MOV X0, X23
	0x01CFA6A0 BLR X8
	0x01CFA6A4 LDR W8, [X22 + 0x18]
	0x01CFA6A8 ADD W24, W24, 0x1
	0x01CFA6AC CMP W24, W8
	0x01CFA6B0 B.LT 0x1CFA638
	0x01CFA6B4 CBZ X19, 0x1CFA8C8
	0x01CFA6B8 ADRP X8, 0x2253000
	0x01CFA6BC LDR X8, [X8 + 0x478]
	0x01CFA6C0 LDR X22, [X19 + 0x20]
	0x01CFA6C4 LDR X0, [X8]
	0x01CFA6C8 LDR W8, [X0 + 0xE0]
	0x01CFA6CC CBNZ W8, 0x1CFA6D4
	0x01CFA6D0 BL 0x1B6E8F8
	0x01CFA6D4 MOV X0, X22
	0x01CFA6D8 MOV X1, X31
	0x01CFA6DC MOV X2, X31
	0x01CFA6E0 BL 0x3A9D6EC
	0x01CFA6E4 TBZ X0, 0x0, 0x1CFA8B4
	0x01CFA6E8 LDR X0, [X19 + 0x20]
	0x01CFA6EC CBZ X0, 0x1CFA8C8
	0x01CFA6F0 MOV X1, X31
	0x01CFA6F4 BL 0x3AA0C88
	0x01CFA6F8 ADRP X8, 0x2256000
	0x01CFA6FC LDR X8, [X8 + 0xAC8]
	0x01CFA700 MOV X1, X0
	0x01CFA704 MOV X2, X31
	0x01CFA708 LDR X8, [X8]
	0x01CFA70C MOV X0, X8
	0x01CFA710 BL 0x3084780
	0x01CFA714 ADRP X8, 0x2253000
	0x01CFA718 LDR X8, [X8 + 0x8E0]
	0x01CFA71C MOV X23, X0
	0x01CFA720 LDR X8, [X8]
	0x01CFA724 MOV X0, X8
	0x01CFA728 BL 0x1B6EA0C
	0x01CFA72C MOV X1, X23
	0x01CFA730 MOV X2, X31
	0x01CFA734 MOV X22, X0
	0x01CFA738 BL 0x3A9DAE4
	0x01CFA73C CBZ X22, 0x1CFA8C8
	0x01CFA740 MOV X0, X22
	0x01CFA744 MOV X1, X31
	0x01CFA748 BL 0x3A9D8EC
	0x01CFA74C MOV X23, X0
	0x01CFA750 MOV X0, X21
	0x01CFA754 MOV X1, X31
	0x01CFA758 BL 0x3A9B084
	0x01CFA75C CBZ X23, 0x1CFA8C8
	0x01CFA760 MOV X1, X0
	0x01CFA764 MOV X0, X23
	0x01CFA768 MOV X2, X31
	0x01CFA76C BL 0x3AA7DEC
	0x01CFA770 MOV X0, X22
	0x01CFA774 MOV X1, X31
	0x01CFA778 BL 0x3A9D8EC
	0x01CFA77C ADRP X23, 0x2529000
	0x01CFA780 LDRB W8, [X23 + 0x43F]
	0x01CFA784 MOV X21, X0
	0x01CFA788 CBNZ W8, 0x1CFA7A0
	0x01CFA78C ADRP X0, 0x2253000
	0x01CFA790 LDR X0, [X0 + 0x480]
	0x01CFA794 BL 0x1B6E7F0
	0x01CFA798 MOVZ W8, 0x1
	0x01CFA79C STRB W8, [X23 + 0x43F]
	0x01CFA7A0 CBZ X21, 0x1CFA8C8
	0x01CFA7A4 ADRP X8, 0x2253000
	0x01CFA7A8 LDR X8, [X8 + 0x480]
	0x01CFA7AC MOV X0, X21
	0x01CFA7B0 MOV X1, X31
	0x01CFA7B4 LDR X8, [X8]
	0x01CFA7B8 LDR X8, [X8 + 0xB8]
	0x01CFA7BC LDP S1, S2, [X8 + 0x4]
	0x01CFA7C0 LDR V0, [X8]
	0x01CFA7C4 BL 0x3AA6D0C
	0x01CFA7C8 MOV X0, X22
	0x01CFA7CC MOV X1, X31
	0x01CFA7D0 BL 0x3A9D8EC
	0x01CFA7D4 ADRP X23, 0x2529000
	0x01CFA7D8 LDRB W8, [X23 + 0x454]
	0x01CFA7DC MOV X21, X0
	0x01CFA7E0 CBNZ W8, 0x1CFA7F8
	0x01CFA7E4 ADRP X0, 0x2254000
	0x01CFA7E8 LDR X0, [X0 + 0x1F8]
	0x01CFA7EC BL 0x1B6E7F0
	0x01CFA7F0 MOVZ W8, 0x1
	0x01CFA7F4 STRB W8, [X23 + 0x454]
	0x01CFA7F8 CBZ X21, 0x1CFA8C8
	0x01CFA7FC ADRP X8, 0x2254000
	0x01CFA800 LDR X8, [X8 + 0x1F8]
	0x01CFA804 MOV X0, X21
	0x01CFA808 MOV X1, X31
	0x01CFA80C LDR X8, [X8]
	0x01CFA810 LDR X8, [X8 + 0xB8]
	0x01CFA814 LDP S2, S3, [X8 + 0x8]
	0x01CFA818 LDP S0, S1, [X8]
	0x01CFA81C BL 0x3AA7984
	0x01CFA820 MOVZ W1, 0x14
	0x01CFA824 MOV X0, X22
	0x01CFA828 MOV X2, X31
	0x01CFA82C BL 0x3A9D964
	0x01CFA830 ADRP X8, 0x2256000
	0x01CFA834 LDR X8, [X8 + 0xAB0]
	0x01CFA838 MOV X0, X22
	0x01CFA83C LDR X1, [X8]
	0x01CFA840 BL 0x20CEE08
	0x01CFA844 CBZ X20, 0x1CFA8C8
	0x01CFA848 MOV X21, X0
	0x01CFA84C CBZ X0, 0x1CFA8C8
	0x01CFA850 LDP S1, S2, [X20 + 0x24]
	0x01CFA854 LDR V0, [X20 + 0x20]
	0x01CFA858 MOV X0, X21
	0x01CFA85C MOV X1, X31
	0x01CFA860 BL 0x3AF7A20
	0x01CFA864 LDP S0, S1, [X20 + 0x2C]
	0x01CFA868 LDR V2, [X20 + 0x34]
	0x01CFA86C MOV X0, X21
	0x01CFA870 MOV X1, X31
	0x01CFA874 FADD S0, S0, S0
	0x01CFA878 FADD S1, S1, S1
	0x01CFA87C FADD S2, S2, S2
	0x01CFA880 BL 0x3AF7B58
	0x01CFA884 MOVZ W1, 0x1
	0x01CFA888 MOV X0, X21
	0x01CFA88C MOV X2, X31
	0x01CFA890 BL 0x3AF73C0
	0x01CFA894 ADRP X8, 0x2256000
	0x01CFA898 LDR X8, [X8 + 0xAB8]
	0x01CFA89C MOV X0, X22
	0x01CFA8A0 LDR X1, [X8]
	0x01CFA8A4 BL 0x20CEE08
	0x01CFA8A8 CBZ X0, 0x1CFA8C8
	0x01CFA8AC LDR X8, [X19 + 0x20]
	0x01CFA8B0 STR X8, [X0 + 0x20]
	0x01CFA8B4 LDP X20, X19, [X31 + 0x30]
	0x01CFA8B8 LDP X22, X21, [X31 + 0x20]
	0x01CFA8BC LDP X24, X23, [X31 + 0x10]
	0x01CFA8C0 LDP X30, X25, [X31], #0x40
	0x01CFA8C4 RET
	0x01CFA8C8 BL 0x1B6EA1C
	0x01CFA8CC BL 0x1B6EA24
	0x01CFA8D0 LDR W8, [X0 + 0x28]
	0x01CFA8D4 CMP W8, 0x4
	0x01CFA8D8 B.HI 0x1CFA8FC
	0x01CFA8DC ADRP X9, 0xFFFFFFFFFEDF2000
	0x01CFA8E0 ADD X9, X9, 0x96B
	0x01CFA8E4 ADR X10, 0x10
	0x01CFA8E8 LDRB W11, [X9, X8, LSL]
	0x01CFA8EC ADD X10, X10, X11, 0x2, LSL
	0x01CFA8F0 BR X10
	0x01CFA8F4 MOVZ W0, 0x1
	0x01CFA8F8 RET
	0x01CFA8FC MOV W0, W31
	0x01CFA900 RET
	0x01CFA904 CMP W1, 0x3
	0x01CFA908 B 0x1CFA920
	0x01CFA90C AND W8, W1, 0xFFFFFFFD
	0x01CFA910 CMP W8, 0x1
	0x01CFA914 B 0x1CFA920
	0x01CFA918 AND W8, W1, 0xFFFFFFFE
	0x01CFA91C CMP W8, 0x2
	0x01CFA920 CSET W0, NE
	0x01CFA924 RET
	0x01CFA928 CMP W1, 0x0
	0x01CFA92C CSET W0, EQ
	0x01CFA930 RET
	0x01CFA934 FMOV S0, 1
	0x01CFA938 B 0x1CFA93C
	0x01CFA93C STP D15, D14, [X31 - 0x80]!
	0x01CFA940 STP D13, D12, [X31 + 0x10]
	0x01CFA944 STP D11, D10, [X31 + 0x20]
	0x01CFA948 STP D9, D8, [X31 + 0x30]
	0x01CFA94C STR X29, [X31 + 0x40]
	0x01CFA950 STP X30, X23, [X31 + 0x50]
	0x01CFA954 STP X22, X21, [X31 + 0x60]
	0x01CFA958 STP X20, X19, [X31 + 0x70]
	0x01CFA95C SUB X31, X31, 0x1A0
	0x01CFA960 ADRP X20, 0x2529000
	0x01CFA964 ADRP X23, 0x2253000
	0x01CFA968 LDRB W8, [X20 + 0x714]
	0x01CFA96C LDR X23, [X23 + 0x478]
	0x01CFA970 MOV V8.16B, V0.16B
	0x01CFA974 MOV X19, X0
	0x01CFA978 TBNZ X8, 0x0, 0x1CFA990
	0x01CFA97C ADRP X0, 0x2253000
	0x01CFA980 LDR X0, [X0 + 0x478]
	0x01CFA984 BL 0x1B6E7F0
	0x01CFA988 MOVZ W8, 0x1
	0x01CFA98C STRB W8, [X20 + 0x714]
	0x01CFA990 MOV X22, X19
	0x01CFA994 LDR X20, [X22 + 0x20]!
	0x01CFA998 LDR X0, [X23]
	0x01CFA99C LDR W8, [X0 + 0xE0]
	0x01CFA9A0 CBNZ W8, 0x1CFA9A8
	0x01CFA9A4 BL 0x1B6E8F8
	0x01CFA9A8 MOV X0, X20
	0x01CFA9AC MOV X1, X31
	0x01CFA9B0 MOV X2, X31
	0x01CFA9B4 BL 0x3AA0AF0
	0x01CFA9B8 TBNZ X0, 0x0, 0x1CFB3CC
	0x01CFA9BC FMOV S0, 0.25
	0x01CFA9C0 FMUL S3, S8, S0
	0x01CFA9C4 FMOV S0, 1
	0x01CFA9C8 FMOV S1, 1
	0x01CFA9CC FMOV S2, 1
	0x01CFA9D0 MOV X0, X31
	0x01CFA9D4 BL 0x3A75B14
	0x01CFA9D8 MOV X0, X19
	0x01CFA9DC MOV X1, X31
	0x01CFA9E0 BL 0x3A9B084
	0x01CFA9E4 CBZ X0, 0x1CFB3F4
	0x01CFA9E8 ADD X8, X31, 0x160
	0x01CFA9EC MOV X1, X31
	0x01CFA9F0 BL 0x3AA7294
	0x01CFA9F4 LDP V0, V1, [X31 + 0x160]
	0x01CFA9F8 LDP V2, V3, [X31 + 0x180]
	0x01CFA9FC ADD X0, X31, 0x120

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0x252A000
	013 Move X23, 0x2254000
	014 Move W8, [X20+1807]
	015 Move X23, [X23+1144]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {53}
	021 Move X0, 0x2257000
	022 Move X0, [X0+2640]
	023 Call 0x1B6F7F0
	024 Move X0, 0x2254000
	025 Move X0, [X0+1528]
	026 Call 0x1B6F7F0
	027 Move X0, 0x2254000
	028 Move X0, [X0+1576]
	029 Call 0x1B6F7F0
	030 Move X0, 0x2254000
	031 Move X0, [X0+1144]
	032 Call 0x1B6F7F0
	033 Move X0, 0x2257000
	034 Move X0, [X0+2664]
	035 Call 0x1B6F7F0
	036 Move X0, 0x2257000
	037 Move X0, [X0+2672]
	038 Call 0x1B6F7F0
	039 Move X0, 0x2257000
	040 Move X0, [X0+2680]
	041 Call 0x1B6F7F0
	042 Move X0, 0x2257000
	043 Move X0, [X0+2688]
	044 Call 0x1B6F7F0
	045 Move X0, 0x2257000
	046 Move X0, [X0+2696]
	047 Call 0x1B6F7F0
	048 Move X0, 0x2257000
	049 Move X0, [X0+2704]
	050 Call 0x1B6F7F0
	051 Move W8, 1
	052 Move [X20+1807], W8
	053 Move X0, [X23]
	054 Move [X31+12], W31
	055 Move X20, [X19+48]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1B6F8F8
	060 Move X26, 0x2254000
	061 Move X25, 0x2257000
	062 Move X24, 0x2257000
	063 Move X26, [X26+1576]
	064 Move X25, [X25+2680]
	065 Move X24, [X24+2672]
	066 Move X0, X20
	067 Move X1, X31
	068 Move X2, X31
	069 Call Object.op_Equality, X0, X1
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {88}
	074 Move X0, [X23]
	075 Move X20, [X19+56]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1B6F8F8
	080 Move X0, X20
	081 Move X1, X31
	082 Move X2, X31
	083 Call Object.op_Equality, X0, X1
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {115}
	088 Move X0, [X26]
	089 Move X19, 0x2257000
	090 Move W8, [X0+224]
	091 Move X19, [X19+2664]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1B6F8F8
	095 Move X1, [X19]
	096 Move X3, [X25]
	097 Move X4, [X24]
	098 Move W0, 32
	099 Move W5, 67
	100 Move X2, X31
	101 Move X6, X31
	102 Call Log.Error, X0, X1, X2, X3, X4, X5
	103 Move X20, [X31+80]
	104 Move X19, [X31+88]
	105 Move X22, [X31+64]
	106 Move X21, [X31+72]
	107 Move X24, [X31+48]
	108 Move X23, [X31+56]
	109 Move X26, [X31+32]
	110 Move X25, [X31+40]
	111 Move X30, [X31+16]
	112 Move X27, [X31+24]
	113 Add X31, X31, 96
	114 Return 
	115 Move X0, X19
	116 Move X1, X31
	117 Call Component.get_transform, X0
	118 Compare X0, 0
	119 JumpIfEqual {365}
	120 Move X1, X31
	121 Call Transform.get_childCount, X0
	122 Subtract W20, W0, 1
	123 Move X0, X19
	124 Move X1, X31
	125 Call Component.get_transform, X0
	126 Compare X0, 0
	127 JumpIfEqual {365}
	128 Move W1, W20
	129 Move X2, X31
	130 Call Transform.GetChild, X0, X1
	131 Compare X0, 0
	132 JumpIfEqual {365}
	133 Move X1, X31
	134 Call Component.get_gameObject, X0
	135 Move X8, [X23]
	136 Move X21, X0
	137 Move W9, [X8+224]
	138 Compare W9, 0
	139 JumpIfNotEqual {142}
	140 Move X0, X8
	141 Call 0x1B6F8F8
	142 Move X0, X21
	143 Move X1, X31
	144 Call Object.DestroyImmediate, X0
	145 Subtract W20, W20, 1
	146 Move X8, 0x2257000
	147 Move X21, [X19+48]
	148 Move X8, [X8+2640]
	149 Move X0, [X8]
	150 Call 0x1B6FA0C
	151 Move X1, X21
	152 Move X2, X31
	153 Move X20, X0
	154 Call Generator..ctor, X0, X1
	155 Move W27, W31
	156 Move [X31+12], W31
	157 Move X21, [X19+56]
	158 Move X22, [X19+64]
	159 Move W1, 0x86A0
	160 NotImplemented "Instruction MOVK not yet implemented."
	161 Move W0, W31
	162 Move X2, X31
	163 Call Random.Range, X0, X1
	164 Compare X20, 0
	165 JumpIfEqual {365}
	166 Move W4, [X19+32]
	167 Move W3, W0
	168 Move W5, 1
	169 Move W6, 1
	170 Move X0, X20
	171 Move X1, X21
	172 Move X2, X22
	173 Move X7, X31
	174 Call Generator.Generate, X0, X1, X2, X3, X4, X5, X6
	175 Move TEMP, X0
	176 And TEMP, TEMP, 1
	177 Compare TEMP, 1
	178 JumpIfEqual {273}
	179 Move X0, X19
	180 Move X1, X31
	181 Call Component.get_transform, X0
	182 Compare X0, 0
	183 JumpIfEqual {365}
	184 Move X1, X31
	185 Call Transform.get_childCount, X0
	186 Subtract W21, W0, 1
	187 Move X0, X19
	188 Move X1, X31
	189 Call Component.get_transform, X0
	190 Compare X0, 0
	191 JumpIfEqual {365}
	192 Move W1, W21
	193 Move X2, X31
	194 Call Transform.GetChild, X0, X1
	195 Compare X0, 0
	196 JumpIfEqual {365}
	197 Move X1, X31
	198 Call Component.get_gameObject, X0
	199 Move X8, [X23]
	200 Move X22, X0
	201 Move W9, [X8+224]
	202 Compare W9, 0
	203 JumpIfNotEqual {206}
	204 Move X0, X8
	205 Call 0x1B6F8F8
	206 Move X0, X22
	207 Move X1, X31
	208 Call Object.DestroyImmediate, X0
	209 Subtract W21, W21, 1
	210 Add W27, W27, 1
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move [X31+12], W27
	213 Move X8, 0x2254000
	214 Move X8, [X8+1528]
	215 Add X1, X31, 8
	216 Move X0, [X8]
	217 Move W8, 64
	218 Move [X31+8], W8
	219 Call 0x1B6F900
	220 Move X8, 0x2257000
	221 Move X8, [X8+2696]
	222 Move X1, X0
	223 Move X2, X31
	224 Move X8, [X8]
	225 Move X0, X8
	226 Call String.Format, X0, X1
	227 Move X8, [X26]
	228 Move X20, X0
	229 Move W9, [X8+224]
	230 Compare W9, 0
	231 JumpIfNotEqual {234}
	232 Move X0, X8
	233 Call 0x1B6F8F8
	234 Move X3, [X25]
	235 Move X4, [X24]
	236 Move W0, 32
	237 Move W5, 107
	238 Move X1, X20
	239 Move X2, X31
	240 Move X6, X31
	241 Call Log.Error, X0, X1, X2, X3, X4, X5
	242 Move X0, X19
	243 Move X1, X31
	244 Call Component.get_transform, X0
	245 Compare X0, 0
	246 JumpIfEqual {365}
	247 Move X1, X31
	248 Call Transform.get_childCount, X0
	249 Subtract W20, W0, 1
	250 Move X0, X19
	251 Move X1, X31
	252 Call Component.get_transform, X0
	253 Compare X0, 0
	254 JumpIfEqual {365}
	255 Move W1, W20
	256 Move X2, X31
	257 Call Transform.GetChild, X0, X1
	258 Compare X0, 0
	259 JumpIfEqual {365}
	260 Move X1, X31
	261 Call Component.get_gameObject, X0
	262 Move X8, [X23]
	263 Move X21, X0
	264 Move W9, [X8+224]
	265 Compare W9, 0
	266 JumpIfNotEqual {269}
	267 Move X0, X8
	268 Call 0x1B6F8F8
	269 Move X0, X21
	270 Move X1, X31
	271 Call Object.DestroyImmediate, X0
	272 Subtract W20, W20, 1
	273 Add X0, X31, 12
	274 Move X1, X31
	275 Call Int32.ToString, X0
	276 Move X8, 0x2257000
	277 Move X8, [X8+2688]
	278 Move X9, 0x2257000
	279 Move X9, [X9+2704]
	280 Move X1, X0
	281 Move X8, [X8]
	282 Move X3, X31
	283 Move X2, [X9]
	284 Move X0, X8
	285 Call String.Concat, X0, X1, X2
	286 Move X8, [X26]
	287 Move X21, X0
	288 Move W9, [X8+224]
	289 Compare W9, 0
	290 JumpIfNotEqual {293}
	291 Move X0, X8
	292 Call 0x1B6F8F8
	293 Move X3, [X25]
	294 Move X4, [X24]
	295 Move W0, 32
	296 Move W5, 82
	297 Move X1, X21
	298 Move X2, X31
	299 Move X6, X31
	300 Call Log.Debug, X0, X1, X2, X3, X4, X5
	301 Move X8, [X20+40]
	302 Compare X8, 0
	303 JumpIfEqual {365}
	304 Move X8, [X8+32]
	305 Move X21, [X19+72]
	306 Move [X19+40], X8
	307 Move X0, [X23]
	308 Move W8, [X0+224]
	309 Compare W8, 0
	310 JumpIfNotEqual {312}
	311 Call 0x1B6F8F8
	312 Move X0, X21
	313 Move X1, X31
	314 Move X2, X31
	315 Call Object.op_Inequality, X0, X1
	316 Move TEMP, X0
	317 And TEMP, TEMP, 1
	318 Compare TEMP, 1
	319 JumpIfNotEqual {326}
	320 Move X0, [X20+72]
	321 Compare X0, 0
	322 JumpIfEqual {365}
	323 Move X1, [X19+72]
	324 Move X2, X31
	325 Call Transform.set_parent, X0, X1
	326 Move X0, [X23]
	327 Move X21, [X19+80]
	328 Move W8, [X0+224]
	329 Compare W8, 0
	330 JumpIfNotEqual {332}
	331 Call 0x1B6F8F8
	332 Move X0, X21
	333 Move X1, X31
	334 Move X2, X31
	335 Call Object.op_Inequality, X0, X1
	336 Move TEMP, X0
	337 And TEMP, TEMP, 1
	338 Compare TEMP, 1
	339 JumpIfNotEqual {346}
	340 Move X0, [X20+64]
	341 Compare X0, 0
	342 JumpIfEqual {365}
	343 Move X1, [X19+80]
	344 Move X2, X31
	345 Call Transform.set_parent, X0, X1
	346 Move X0, [X23]
	347 Move X20, [X19+88]
	348 Move W8, [X0+224]
	349 Compare W8, 0
	350 JumpIfNotEqual {352}
	351 Call 0x1B6F8F8
	352 Move X0, X20
	353 Move X1, X31
	354 Move X2, X31
	355 Call Object.op_Inequality, X0, X1
	356 Move TEMP, X0
	357 And TEMP, TEMP, 1
	358 Compare TEMP, 1
	359 JumpIfNotEqual {103}
	360 Move X0, [X19+88]
	361 Compare X0, 0
	362 JumpIfEqual {365}
	363 Move X1, X31
	364 Call NavMeshSurface.BuildNavMesh, X0
	365 Call 0x1B6FA1C

Method: System.Void OnDrawGizmosSelected()

Disassembly:
	0x01CFAA00 MOV X1, X31
	0x01CFAA04 STP V0, V1, [X31 + 0x120]
	0x01CFAA08 STP V2, V3, [X31 + 0x140]
	0x01CFAA0C BL 0x3A75C34
	0x01CFAA10 LDR X8, [X22]
	0x01CFAA14 CBZ X8, 0x1CFB3F4
	0x01CFAA18 LDP S2, S3, [X8 + 0x28]
	0x01CFAA1C LDP S4, S5, [X8 + 0x30]
	0x01CFAA20 LDP S0, S1, [X8 + 0x20]
	0x01CFAA24 MOV X0, X31
	0x01CFAA28 FADD S3, S3, S3
	0x01CFAA2C FADD S4, S4, S4
	0x01CFAA30 FADD S5, S5, S5
	0x01CFAA34 BL 0x3A757BC
	0x01CFAA38 LDR X8, [X22]
	0x01CFAA3C CBZ X8, 0x1CFB3F4
	0x01CFAA40 LDR X0, [X23]
	0x01CFAA44 LDR X20, [X8 + 0x48]
	0x01CFAA48 LDR W9, [X0 + 0xE0]
	0x01CFAA4C CBNZ W9, 0x1CFAA54
	0x01CFAA50 BL 0x1B6E8F8
	0x01CFAA54 MOV X0, X20
	0x01CFAA58 MOV X1, X31
	0x01CFAA5C MOV X2, X31
	0x01CFAA60 BL 0x3A9D6EC
	0x01CFAA64 STR S8, [X31 + 0x1EC]
	0x01CFAA68 TBZ X0, 0x0, 0x1CFAC9C
	0x01CFAA6C LDR W21, [X19 + 0x28]
	0x01CFAA70 FMOV S1, 1
	0x01CFAA74 FMOV S2, W31
	0x01CFAA78 MOV V3.16B, V8.16B
	0x01CFAA7C CMP W21, 0x5
	0x01CFAA80 FCSEL S0, S2, S1, CC
	0x01CFAA84 FCSEL S1, S1, S2, CC
	0x01CFAA88 MOV V2.16B, V1.16B
	0x01CFAA8C MOV X0, X31
	0x01CFAA90 BL 0x3A75B14
	0x01CFAA94 LDR X0, [X19 + 0x20]
	0x01CFAA98 CBZ X0, 0x1CFB3F4
	0x01CFAA9C MOV X1, X31
	0x01CFAAA0 BL 0x3A9B084
	0x01CFAAA4 LDR X8, [X22]
	0x01CFAAA8 CBZ X8, 0x1CFB3F4
	0x01CFAAAC MOV X20, X0
	0x01CFAAB0 LDR X0, [X8 + 0x48]
	0x01CFAAB4 CBZ X0, 0x1CFB3F4
	0x01CFAAB8 MOV X1, X31
	0x01CFAABC BL 0x3A9B084
	0x01CFAAC0 CBZ X0, 0x1CFB3F4
	0x01CFAAC4 MOV X1, X31
	0x01CFAAC8 BL 0x3AA7658
	0x01CFAACC CBZ X20, 0x1CFB3F4
	0x01CFAAD0 MOV X0, X20
	0x01CFAAD4 MOV X1, X31
	0x01CFAAD8 BL 0x3AA8C24
	0x01CFAADC LDR X0, [X22]
	0x01CFAAE0 CBZ X0, 0x1CFB3F4
	0x01CFAAE4 MOV X1, X31
	0x01CFAAE8 MOV V8.16B, V0.16B
	0x01CFAAEC MOV V9.16B, V1.16B
	0x01CFAAF0 MOV V10.16B, V2.16B
	0x01CFAAF4 BL 0x3A9B084
	0x01CFAAF8 CBZ X0, 0x1CFB3F4
	0x01CFAAFC MOV X1, X31
	0x01CFAB00 BL 0x3AA5FBC
	0x01CFAB04 MOV X0, X31
	0x01CFAB08 BL 0x3A925C8
	0x01CFAB0C LDR X8, [X22]
	0x01CFAB10 CBZ X8, 0x1CFB3F4
	0x01CFAB14 LDR X0, [X8 + 0x48]
	0x01CFAB18 CBZ X0, 0x1CFB3F4
	0x01CFAB1C MOV X1, X31
	0x01CFAB20 MOV V14.16B, V0.16B
	0x01CFAB24 MOV V13.16B, V1.16B
	0x01CFAB28 MOV V12.16B, V2.16B
	0x01CFAB2C MOV V15.16B, V3.16B
	0x01CFAB30 STP S10, S9, [X31 + 0x18]
	0x01CFAB34 STR S8, [X31 + 0x1E8]
	0x01CFAB38 BL 0x3A9B084
	0x01CFAB3C CBZ X0, 0x1CFB3F4
	0x01CFAB40 MOV X1, X31
	0x01CFAB44 BL 0x3AA5FBC
	0x01CFAB48 MOV X0, X19
	0x01CFAB4C MOV X1, X31
	0x01CFAB50 MOV V10.16B, V0.16B
	0x01CFAB54 MOV V9.16B, V1.16B
	0x01CFAB58 MOV V8.16B, V2.16B
	0x01CFAB5C MOV V11.16B, V3.16B
	0x01CFAB60 BL 0x3A9B084
	0x01CFAB64 CBZ X0, 0x1CFB3F4
	0x01CFAB68 FMUL S0, S15, S10
	0x01CFAB6C FMUL S1, S14, S11
	0x01CFAB70 FMUL S4, S15, S9
	0x01CFAB74 FMUL S5, S13, S11
	0x01CFAB78 FMUL S17, S14, S10
	0x01CFAB7C FMUL S20, S15, S8
	0x01CFAB80 FMUL S21, S15, S11
	0x01CFAB84 FMUL S22, S12, S11
	0x01CFAB88 FMUL S2, S13, S8

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+96], X30
	003 Move [X31+112], X20
	004 Move [X31+120], X19
	005 Move X20, 0x252A000
	006 Move W8, [X20+1808]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0x2257000
	013 Move X0, [X0+2096]
	014 Call 0x1B6F7F0
	015 Move X0, 0x2257000
	016 Move X0, [X0+2104]
	017 Call 0x1B6F7F0
	018 Move X0, 0x2257000
	019 Move X0, [X0+2112]
	020 Call 0x1B6F7F0
	021 Move X0, 0x2257000
	022 Move X0, [X0+2120]
	023 Call 0x1B6F7F0
	024 Move W8, 1
	025 Move [X20+1808], W8
	026 NotImplemented "Instruction MOVI not yet implemented."
	027 Move [X31+80], X31
	028 Move [X31+48], V0
	029 Move [X31+56], V0
	030 Move X8, [X19+64]
	031 Compare X8, 0
	032 JumpIfEqual {78}
	033 Move S0, 1
	034 Move S1, W31
	035 Move S2, W31
	036 Move S3, 1
	037 Move X0, X31
	038 Call Gizmos.set_color, X0
	039 Move X0, [X19+64]
	040 Compare X0, 0
	041 JumpIfEqual {83}
	042 Move X8, 0x2257000
	043 Move X8, [X8+2120]
	044 Move X20, 0x2257000
	045 Move X19, 0x2257000
	046 Move X1, [X8]
	047 Move X20, [X20+2104]
	048 Move X19, [X19+2096]
	049 Add X8, X31, 8
	050 Call List`1<Bounds>.GetEnumerator, X0
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 Move X8, [X31+40]
	054 Move [X31+48], V0
	055 Move [X31+56], V1
	056 Move [X31+80], X8
	057 Move X1, [X20]
	058 Add X0, X31, 48
	059 Call Enumerator<Bounds>.MoveNext, X0
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {75}
	064 Move S2, [X31+72]
	065 Move S3, [X31+76]
	066 Move S4, [X31+80]
	067 Move S5, [X31+84]
	068 Move S0, [X31+64]
	069 Move S1, [X31+68]
	070 Add S3, S3, S3
	071 Add S4, S4, S4
	072 Add S5, S5, S5
	073 Move X0, X31
	074 Call Gizmos.DrawWireCube, X0, X1
	075 Move X1, [X19]
	076 Add X0, X31, 48
	077 Call Enumerator<Bounds>.Dispose, X0
	078 Move X20, [X31+112]
	079 Move X19, [X31+120]
	080 Move X30, [X31+96]
	081 Add X31, X31, 128
	082 Return 
	083 Call 0x1B6FA1C
	084 Move X20, X0
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X0, X20
	087 Call 0x3D1A840
	088 Move X19, [X0]
	089 Call 0x3D1A850
	090 Move X8, 0x2257000
	091 Move X8, [X8+2096]
	092 Add X0, X31, 48
	093 Move X1, [X8]
	094 Call Enumerator<Bounds>.Dispose, X0
	095 Compare X19, 0
	096 JumpIfEqual {78}
	097 Move X0, X19
	098 Call 0x1B6FA14
	099 Move X19, X31
	100 Move X20, X0
	101 Move X8, 0x2257000
	102 Move X8, [X8+2096]
	103 Move X1, [X8]
	104 Add X0, X31, 48
	105 Call Enumerator<Bounds>.Dispose, X0
	106 Compare X19, 0
	107 JumpIfNotEqual {110}
	108 Move X0, X20
	109 Call 0x1C8518C
	110 Move X0, X19
	111 Call 0x1B6FA14
	112 Call 0x18F56A8

Method: System.Void .ctor()

Disassembly:
	0x01CFAB8C FMUL S6, S12, S10
	0x01CFAB90 FMUL S16, S14, S9

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

