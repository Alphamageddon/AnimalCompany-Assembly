Type: AnimalCompany.GameGen.RuledTileset

Method: AnimalCompany.GameGen.RuledTile GetRandomTile(AnimalCompany.GameGen.TileRuleType rule)

Disassembly:
	0x01E0BFEC LDR X8, [X8 + 0x9C8]
	0x01E0BFF0 MOV X0, X20
	0x01E0BFF4 MOV X1, X21
	0x01E0BFF8 LDR X2, [X8]
	0x01E0BFFC BL 0x21DA490
	0x01E0C000 ADRP X8, 0x22ED000
	0x01E0C004 LDR X8, [X8 + 0x9C0]
	0x01E0C008 LDR X1, [X8]
	0x01E0C00C BL 0x21D79F4
	0x01E0C010 CBZ X0, 0x1E0C078
	0x01E0C014 LDR W1, [X0 + 0x18]
	0x01E0C018 MOV X20, X0
	0x01E0C01C CMP W1, 0x1
	0x01E0C020 B.LT 0x1E0C040
	0x01E0C024 MOV W0, W31
	0x01E0C028 MOV X2, X31
	0x01E0C02C BL 0x3C309A8
	0x01E0C030 LDR X2, [X23]
	0x01E0C034 MOV W1, W0
	0x01E0C038 MOV X0, X20
	0x01E0C03C B 0x1E0C064
	0x01E0C040 LDR X19, [X19 + 0x38]
	0x01E0C044 CBZ X19, 0x1E0C078
	0x01E0C048 LDR W1, [X19 + 0x18]
	0x01E0C04C MOV W0, W31
	0x01E0C050 MOV X2, X31
	0x01E0C054 BL 0x3C309A8
	0x01E0C058 LDR X2, [X23]
	0x01E0C05C MOV W1, W0
	0x01E0C060 MOV X0, X19
	0x01E0C064 LDP X20, X19, [X31 + 0x30]
	0x01E0C068 LDP X22, X21, [X31 + 0x20]
	0x01E0C06C LDP X24, X23, [X31 + 0x10]
	0x01E0C070 LDR X30, [X31], #0x40
	0x01E0C074 B 0x301BCCC
	0x01E0C078 BL 0x1C16F20
	0x01E0C07C SUB X31, X31, 0x120
	0x01E0C080 STP D9, D8, [X31 + 0xC0]
	0x01E0C084 STP X29, X30, [X31 + 0xD0]
	0x01E0C088 STP X26, X25, [X31 + 0xE0]
	0x01E0C08C STP X24, X23, [X31 + 0xF0]
	0x01E0C090 STP X22, X21, [X31 + 0x100]
	0x01E0C094 STP X20, X19, [X31 + 0x110]
	0x01E0C098 ADRP X23, 0x25CC000
	0x01E0C09C LDRB W8, [X23 + 0xDC8]
	0x01E0C0A0 MOV X19, X4
	0x01E0C0A4 MOV X21, X3
	0x01E0C0A8 MOV X22, X2
	0x01E0C0AC MOV X20, X1
	0x01E0C0B0 TBNZ X8, 0x0, 0x1E0C104
	0x01E0C0B4 ADRP X0, 0x22ED000
	0x01E0C0B8 LDR X0, [X0 + 0x998]
	0x01E0C0BC BL 0x1C16CF4
	0x01E0C0C0 ADRP X0, 0x22ED000
	0x01E0C0C4 LDR X0, [X0 + 0x9A0]
	0x01E0C0C8 BL 0x1C16CF4
	0x01E0C0CC ADRP X0, 0x22ED000
	0x01E0C0D0 LDR X0, [X0 + 0x9A8]
	0x01E0C0D4 BL 0x1C16CF4
	0x01E0C0D8 ADRP X0, 0x22ED000
	0x01E0C0DC LDR X0, [X0 + 0x9B0]
	0x01E0C0E0 BL 0x1C16CF4
	0x01E0C0E4 ADRP X0, 0x22ED000
	0x01E0C0E8 LDR X0, [X0 + 0xD10]
	0x01E0C0EC BL 0x1C16CF4
	0x01E0C0F0 ADRP X0, 0x22ED000
	0x01E0C0F4 LDR X0, [X0 + 0xD18]
	0x01E0C0F8 BL 0x1C16CF4
	0x01E0C0FC MOVZ W8, 0x1
	0x01E0C100 STRB W8, [X23 + 0xDC8]
	0x01E0C104 MOVI V0.2D, 0x0
	0x01E0C108 STR X31, [X31 + 0xB0]
	0x01E0C10C STP V0, V0, [X31 + 0x90]
	0x01E0C110 CBZ X22, 0x1E0C33C
	0x01E0C114 ADRP X26, 0x22ED000
	0x01E0C118 LDR X26, [X26 + 0x9B0]
	0x01E0C11C ADRP X25, 0x22ED000
	0x01E0C120 ADRP X24, 0x22ED000
	0x01E0C124 ADD X8, X31, 0x68
	0x01E0C128 LDR X1, [X26]
	0x01E0C12C LDR X25, [X25 + 0x9A0]
	0x01E0C130 LDR X24, [X24 + 0x998]
	0x01E0C134 MOV X0, X22
	0x01E0C138 BL 0x2F65DA4
	0x01E0C13C ADRP X9, 0xFFFFFFFFFECDE000
	0x01E0C140 ADRP X10, 0xFFFFFFFFFECDD000
	0x01E0C144 LDUR V0, [X31 + 0x68]
	0x01E0C148 LDUR V1, [X31 + 0x78]
	0x01E0C14C LDR X8, [X31 + 0x88]
	0x01E0C150 LDR V8, [X9 + 0x330]
	0x01E0C154 LDR V9, [X10 + 0xF20]
	0x01E0C158 STP V0, V1, [X31 + 0x90]
	0x01E0C15C STR X8, [X31 + 0xB0]
	0x01E0C160 LDR X1, [X25]
	0x01E0C164 ADD X0, X31, 0x90
	0x01E0C168 BL 0x2BB6B08
	0x01E0C16C TBZ X0, 0x0, 0x1E0C21C
	0x01E0C170 LDP S0, S1, [X31 + 0xA0]
	0x01E0C174 LDP S2, S3, [X31 + 0xA8]
	0x01E0C178 LDRB W8, [X19]
	0x01E0C17C LDP S5, S4, [X31 + 0xB0]
	0x01E0C180 CBZ W8, 0x1E0C1E4
	0x01E0C184 LDP S6, S7, [X19 + 0x4]
	0x01E0C188 LDR V16, [X19 + 0xC]
	0x01E0C18C FSUB S6, S0, S6
	0x01E0C190 FSUB S7, S1, S7
	0x01E0C194 FSUB S16, S2, S16
	0x01E0C198 FMUL S6, S6, S6
	0x01E0C19C FMUL S7, S7, S7
	0x01E0C1A0 FADD S6, S7, S6
	0x01E0C1A4 FMUL S7, S16, S16
	0x01E0C1A8 FADD S6, S7, S6
	0x01E0C1AC FCMP S6, S9
	0x01E0C1B0 B.PL 0x1E0C1E4
	0x01E0C1B4 LDP S6, S7, [X19 + 0x10]
	0x01E0C1B8 LDR V16, [X19 + 0x18]
	0x01E0C1BC FSUB S6, S3, S6
	0x01E0C1C0 FSUB S7, S5, S7
	0x01E0C1C4 FSUB S16, S4, S16
	0x01E0C1C8 FMUL S6, S6, S6
	0x01E0C1CC FMUL S7, S7, S7
	0x01E0C1D0 FADD S6, S6, S7
	0x01E0C1D4 FMUL S7, S16, S16
	0x01E0C1D8 FADD S6, S7, S6
	0x01E0C1DC FCMP S6, S9
	0x01E0C1E0 B.MI 0x1E0C160
	0x01E0C1E4 LDR V6, [X20]
	0x01E0C1E8 LDR X8, [X20 + 0x10]
	0x01E0C1EC STP S0, S1, [X31 + 0x50]
	0x01E0C1F0 ADD X1, X31, 0x50
	0x01E0C1F4 ADD X2, X31, 0x30
	0x01E0C1F8 MOV V0.16B, V8.16B
	0x01E0C1FC STP S2, S3, [X31 + 0x58]
	0x01E0C200 STR X8, [X31 + 0x40]
	0x01E0C204 STR V6, [X31 + 0x3]
	0x01E0C208 STP S5, S4, [X31 + 0x60]
	0x01E0C20C BL 0x1E06930
	0x01E0C210 TBZ X0, 0x0, 0x1E0C160
	0x01E0C214 MOV W19, W31
	0x01E0C218 B 0x1E0C30C
	0x01E0C21C LDR X1, [X24]
	0x01E0C220 ADD X0, X31, 0x90
	0x01E0C224 BL 0x2BB6B04
	0x01E0C228 CBZ X21, 0x1E0C33C
	0x01E0C22C LDR X1, [X26]
	0x01E0C230 ADD X8, X31, 0x68
	0x01E0C234 MOV X0, X21
	0x01E0C238 BL 0x2F65DA4
	0x01E0C23C LDUR V0, [X31 + 0x68]
	0x01E0C240 LDUR V1, [X31 + 0x78]
	0x01E0C244 LDR X8, [X31 + 0x88]
	0x01E0C248 STP V0, V1, [X31 + 0x90]
	0x01E0C24C STR X8, [X31 + 0xB0]
	0x01E0C250 LDR X1, [X25]
	0x01E0C254 ADD X0, X31, 0x90
	0x01E0C258 BL 0x2BB6B08
	0x01E0C25C MOV W21, W0
	0x01E0C260 TBZ X0, 0x0, 0x1E0C308
	0x01E0C264 LDP S0, S1, [X31 + 0xA0]
	0x01E0C268 LDP S2, S3, [X31 + 0xA8]
	0x01E0C26C LDRB W8, [X19]
	0x01E0C270 LDP S5, S4, [X31 + 0xB0]
	0x01E0C274 CBZ W8, 0x1E0C2D8
	0x01E0C278 LDP S6, S7, [X19 + 0x4]
	0x01E0C27C LDR V16, [X19 + 0xC]
	0x01E0C280 FSUB S6, S0, S6
	0x01E0C284 FSUB S7, S1, S7
	0x01E0C288 FSUB S16, S2, S16
	0x01E0C28C FMUL S6, S6, S6
	0x01E0C290 FMUL S7, S7, S7
	0x01E0C294 FADD S6, S7, S6
	0x01E0C298 FMUL S7, S16, S16
	0x01E0C29C FADD S6, S7, S6
	0x01E0C2A0 FCMP S6, S9
	0x01E0C2A4 B.PL 0x1E0C2D8
	0x01E0C2A8 LDP S6, S7, [X19 + 0x10]
	0x01E0C2AC LDR V16, [X19 + 0x18]
	0x01E0C2B0 FSUB S6, S3, S6
	0x01E0C2B4 FSUB S7, S5, S7
	0x01E0C2B8 FSUB S16, S4, S16
	0x01E0C2BC FMUL S6, S6, S6
	0x01E0C2C0 FMUL S7, S7, S7
	0x01E0C2C4 FADD S6, S6, S7
	0x01E0C2C8 FMUL S7, S16, S16
	0x01E0C2CC FADD S6, S7, S6
	0x01E0C2D0 FCMP S6, S9
	0x01E0C2D4 B.MI 0x1E0C250
	0x01E0C2D8 LDR V6, [X20]
	0x01E0C2DC LDR X8, [X20 + 0x10]
	0x01E0C2E0 STP S0, S1, [X31 + 0x18]
	0x01E0C2E4 ADD X1, X31, 0x18
	0x01E0C2E8 ADD X2, X31, 0x0
	0x01E0C2EC MOV V0.16B, V8.16B
	0x01E0C2F0 STP S2, S3, [X31 + 0x20]
	0x01E0C2F4 STR X8, [X31 + 0x10]
	0x01E0C2F8 STR V6, [X31]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x25CE000
	007 Move W8, [X21+3523]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x22EE000
	015 Move X0, [X0+3248]
	016 Call 0x1C17CF4
	017 Move X0, 0x22EE000
	018 Move X0, [X0+3256]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3523], W8
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X9, -19783680
	024 Move W8, W19
	025 Add X9, X9, 2440
	026 NotImplemented "Instruction ADR not yet implemented."
	027 Move W11, [X9]
	028 Add X10, X10, X11
	029 CallNoReturn X10
	030 Move X20, [X20+24]
	031 Compare X20, 0
	032 JumpIfEqual {111}
	033 Move W1, [X20+24]
	034 Move W0, W31
	035 Move X2, X31
	036 Call Random.Range, X0, X1
	037 Move W1, W0
	038 Move X8, 0x22EE000
	039 Move X8, [X8+3256]
	040 Move X2, [X8]
	041 Move X0, X20
	042 Call List`1<Object>.get_Item, X0, X1
	043 Move X20, [X20+56]
	044 Compare X20, 0
	045 JumpIfEqual {108}
	046 Move W1, [X20+24]
	047 Move W0, W31
	048 Move X2, X31
	049 Call Random.Range, X0, X1
	050 Move W1, W0
	051 Move X8, 0x22EE000
	052 Move X8, [X8+3256]
	053 Move X2, [X8]
	054 Move X0, X20
	055 Call List`1<Object>.get_Item, X0, X1
	056 Move X20, [X20+40]
	057 Compare X20, 0
	058 JumpIfEqual {109}
	059 Move W1, [X20+24]
	060 Move W0, W31
	061 Move X2, X31
	062 Call Random.Range, X0, X1
	063 Move W1, W0
	064 Move X8, 0x22EE000
	065 Move X8, [X8+3256]
	066 Move X2, [X8]
	067 Move X0, X20
	068 Call List`1<Object>.get_Item, X0, X1
	069 Move X20, [X20+48]
	070 Compare X20, 0
	071 JumpIfEqual {110}
	072 Move W1, [X20+24]
	073 Move W0, W31
	074 Move X2, X31
	075 Call Random.Range, X0, X1
	076 Move W1, W0
	077 Move X8, 0x22EE000
	078 Move X8, [X8+3256]
	079 Move X2, [X8]
	080 Move X0, X20
	081 Call List`1<Object>.get_Item, X0, X1
	082 Move X20, [X20+32]
	083 Compare X20, 0
	084 JumpIfEqual {112}
	085 Move W1, [X20+24]
	086 Move W0, W31
	087 Move X2, X31
	088 Call Random.Range, X0, X1
	089 Move W1, W0
	090 Move X8, 0x22EE000
	091 Move X8, [X8+3256]
	092 Move X2, [X8]
	093 Move X0, X20
	094 Call List`1<Object>.get_Item, X0, X1
	095 Move X20, [X20+64]
	096 Compare X20, 0
	097 JumpIfEqual {113}
	098 Move W1, [X20+24]
	099 Move W0, W31
	100 Move X2, X31
	101 Call Random.Range, X0, X1
	102 Move W1, W0
	103 Move X8, 0x22EE000
	104 Move X8, [X8+3256]
	105 Move X2, [X8]
	106 Move X0, X20
	107 Call List`1<Object>.get_Item, X0, X1
	108 Call 0x1C17F20
	109 Call 0x1C17F20
	110 Call 0x1C17F20
	111 Call 0x1C17F20
	112 Call 0x1C17F20
	113 Call 0x1C17F20
	114 Move X20, X0
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X0, X20
	117 Call 0x3EB2AD0
	118 Move X20, X0
	119 Move X0, 0x22EE000
	120 Move X0, [X0+3264]
	121 Call 0x1C17D08
	122 Move X8, [X20]
	123 Move X1, [X8]
	124 Call 0x1C18270
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {179}
	129 Call 0x3EB2AE0
	130 Move X0, 0x22EE000
	131 Move X0, [X0+3272]
	132 Call 0x1C17D08
	133 Move TEMP, 0
	134 Not TEMP
	135 Move X8, TEMP
	136 Move [X31+8], X0
	137 Move [X31+16], X8
	138 Add X0, X31, 8
	139 Move X1, X31
	140 Move [X31+24], W19
	141 Call Enum.ToString, X0
	142 Move X19, X0
	143 Move X0, 0x22EE000
	144 Move X0, [X0+3280]
	145 Call 0x1C17D08
	146 Move X1, X19
	147 Move X2, X31
	148 Call String.Concat, X0, X1
	149 Move X19, X0
	150 Move X0, 0x22E8000
	151 Move X0, [X0+1928]
	152 Call 0x1C17D08
	153 Move W8, [X0+224]
	154 Compare W8, 0
	155 JumpIfNotEqual {157}
	156 Call 0x1C17DFC
	157 Move X0, 0x22EE000
	158 Move X0, [X0+3288]
	159 Call 0x1C17D08
	160 Move X20, X0
	161 Move X0, 0x22EE000
	162 Move X0, [X0+3296]
	163 Call 0x1C17D08
	164 Move X4, X0
	165 Move W0, 32
	166 Move W5, 52
	167 Move X1, X19
	168 Move X2, X31
	169 Move X3, X20
	170 Move X6, X31
	171 Call Log.Error, X0, X1, X2, X3, X4, X5
	172 Move X0, X31
	173 Move X20, [X31+48]
	174 Move X19, [X31+56]
	175 Move X30, [X31+32]
	176 Move X21, [X31+40]
	177 Add X31, X31, 64
	178 Return X0
	179 Move W0, 8
	180 Call 0x3EB2AF0
	181 Move X8, [X20]
	182 Move [X0], X8
	183 Move X1, 0x20A9000
	184 Add X1, X1, 3672
	185 Move X2, X31
	186 Call 0x3EB2B00
	187 Move X20, X0
	188 Call 0x3EB2AE0
	189 Move X0, X20
	190 Call 0x1D2D690
	191 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x01E0C2FC STP S5, S4, [X31 + 0x28]
	0x01E0C300 BL 0x1E06930
	0x01E0C304 TBZ X0, 0x0, 0x1E0C250
	0x01E0C308 EOR W19, W21, 0x1
	0x01E0C30C LDR X1, [X24]
	0x01E0C310 ADD X0, X31, 0x90
	0x01E0C314 BL 0x2BB6B04
	0x01E0C318 AND W0, W19, 0x1
	0x01E0C31C LDP X20, X19, [X31 + 0x110]
	0x01E0C320 LDP X22, X21, [X31 + 0x100]
	0x01E0C324 LDP X24, X23, [X31 + 0xF0]
	0x01E0C328 LDP X26, X25, [X31 + 0xE0]
	0x01E0C32C LDP X29, X30, [X31 + 0xD0]
	0x01E0C330 LDP D9, D8, [X31 + 0xC0]
	0x01E0C334 ADD X31, X31, 0x120
	0x01E0C338 RET
	0x01E0C33C BL 0x1C16F20
	0x01E0C340 CMP W1, 0x1
	0x01E0C344 MOV X22, X0
	0x01E0C348 B.NE 0x1E0C374
	0x01E0C34C MOV X0, X22
	0x01E0C350 BL 0x3EB1AD0
	0x01E0C354 LDR X19, [X0]
	0x01E0C358 BL 0x3EB1AE0
	0x01E0C35C LDR X1, [X24]
	0x01E0C360 ADD X0, X31, 0x90
	0x01E0C364 BL 0x2BB6B04
	0x01E0C368 CBNZ X19, 0x1E0C37C
	0x01E0C36C MOVZ W19, 0x1
	0x01E0C370 B 0x1E0C318
	0x01E0C374 MOV X19, X31
	0x01E0C378 B 0x1E0C388
	0x01E0C37C MOV X0, X19
	0x01E0C380 BL 0x1C16F18
	0x01E0C384 MOV X22, X0
	0x01E0C388 LDR X1, [X24]
	0x01E0C38C ADD X0, X31, 0x90
	0x01E0C390 BL 0x2BB6B04
	0x01E0C394 CBZ X19, 0x1E0C3F0
	0x01E0C398 MOV X0, X19
	0x01E0C39C BL 0x1C16F18
	0x01E0C3A0 CMP W1, 0x1
	0x01E0C3A4 MOV X22, X0
	0x01E0C3A8 B.NE 0x1E0C3D4
	0x01E0C3AC MOV X0, X22
	0x01E0C3B0 BL 0x3EB1AD0
	0x01E0C3B4 LDR X23, [X0]
	0x01E0C3B8 BL 0x3EB1AE0
	0x01E0C3BC LDR X1, [X24]
	0x01E0C3C0 ADD X0, X31, 0x90
	0x01E0C3C4 BL 0x2BB6B04
	0x01E0C3C8 CBZ X23, 0x1E0C228
	0x01E0C3CC MOV X0, X23
	0x01E0C3D0 BL 0x1C16F18
	0x01E0C3D4 MOV X23, X31
	0x01E0C3D8 B 0x1E0C3E0
	0x01E0C3DC MOV X22, X0
	0x01E0C3E0 LDR X1, [X24]
	0x01E0C3E4 ADD X0, X31, 0x90
	0x01E0C3E8 BL 0x2BB6B04
	0x01E0C3EC CBNZ X23, 0x1E0C3F8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x25CD000
	007 Move X22, 0x22EE000
	008 Move X21, 0x22EE000
	009 Move W8, [X20+3524]
	010 Move X22, [X22+3304]
	011 Move X21, [X21+3312]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x22EE000
	018 Move X0, [X0+3312]
	019 Call 0x1C17CF4
	020 Move X0, 0x22EE000
	021 Move X0, [X0+3304]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+3524], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X21]
	028 Move X20, X0
	029 Call List`1<Object>..ctor, X0
	030 Move [X19+24], X20
	031 Move X0, [X22]
	032 Call 0x1C17F10
	033 Move X1, [X21]
	034 Move X20, X0
	035 Call List`1<Object>..ctor, X0
	036 Move [X19+32], X20
	037 Move X0, [X22]
	038 Call 0x1C17F10
	039 Move X1, [X21]
	040 Move X20, X0
	041 Call List`1<Object>..ctor, X0
	042 Move [X19+40], X20
	043 Move X0, [X22]
	044 Call 0x1C17F10
	045 Move X1, [X21]
	046 Move X20, X0
	047 Call List`1<Object>..ctor, X0
	048 Move [X19+48], X20
	049 Move X0, [X22]
	050 Call 0x1C17F10
	051 Move X1, [X21]
	052 Move X20, X0
	053 Call List`1<Object>..ctor, X0
	054 Move [X19+56], X20
	055 Move X0, [X22]
	056 Call 0x1C17F10
	057 Move X1, [X21]
	058 Move X20, X0
	059 Call List`1<Object>..ctor, X0
	060 Move [X19+64], X20
	061 Move X0, X19
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X1, X31
	067 Move X30, [X31+48]
	068 Call ScriptableObject..ctor, X0
	069 Return 

