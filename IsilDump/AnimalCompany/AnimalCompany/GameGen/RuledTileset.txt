Type: AnimalCompany.GameGen.RuledTileset

Method: AnimalCompany.GameGen.RuledTile GetRandomTile(AnimalCompany.GameGen.TileRuleType rule)

Disassembly:
	0x01CF8BC0 LDRB W8, [X19]
	0x01CF8BC4 LDP S5, S4, [X31 + 0xB0]
	0x01CF8BC8 CBZ W8, 0x1CF8C2C
	0x01CF8BCC LDP S6, S7, [X19 + 0x4]
	0x01CF8BD0 LDR V16, [X19 + 0xC]
	0x01CF8BD4 FSUB S6, S0, S6
	0x01CF8BD8 FSUB S7, S1, S7
	0x01CF8BDC FSUB S16, S2, S16
	0x01CF8BE0 FMUL S6, S6, S6
	0x01CF8BE4 FMUL S7, S7, S7
	0x01CF8BE8 FADD S6, S7, S6
	0x01CF8BEC FMUL S7, S16, S16
	0x01CF8BF0 FADD S6, S7, S6
	0x01CF8BF4 FCMP S6, S9
	0x01CF8BF8 B.PL 0x1CF8C2C
	0x01CF8BFC LDP S6, S7, [X19 + 0x10]
	0x01CF8C00 LDR V16, [X19 + 0x18]
	0x01CF8C04 FSUB S6, S3, S6
	0x01CF8C08 FSUB S7, S5, S7
	0x01CF8C0C FSUB S16, S4, S16
	0x01CF8C10 FMUL S6, S6, S6
	0x01CF8C14 FMUL S7, S7, S7
	0x01CF8C18 FADD S6, S6, S7
	0x01CF8C1C FMUL S7, S16, S16
	0x01CF8C20 FADD S6, S7, S6
	0x01CF8C24 FCMP S6, S9
	0x01CF8C28 B.MI 0x1CF8BA8
	0x01CF8C2C LDR V6, [X20]
	0x01CF8C30 LDR X8, [X20 + 0x10]
	0x01CF8C34 STP S0, S1, [X31 + 0x50]
	0x01CF8C38 ADD X1, X31, 0x50
	0x01CF8C3C ADD X2, X31, 0x30
	0x01CF8C40 MOV V0.16B, V8.16B
	0x01CF8C44 STP S2, S3, [X31 + 0x58]
	0x01CF8C48 STR X8, [X31 + 0x40]
	0x01CF8C4C STR V6, [X31 + 0x3]
	0x01CF8C50 STP S5, S4, [X31 + 0x60]
	0x01CF8C54 BL 0x1CF8E4C
	0x01CF8C58 TBZ X0, 0x0, 0x1CF8BA8
	0x01CF8C5C MOV W19, W31
	0x01CF8C60 B 0x1CF8D54
	0x01CF8C64 LDR X1, [X24]
	0x01CF8C68 ADD X0, X31, 0x90
	0x01CF8C6C BL 0x2A079C4
	0x01CF8C70 CBZ X21, 0x1CF8D84
	0x01CF8C74 LDR X1, [X26]
	0x01CF8C78 ADD X8, X31, 0x68
	0x01CF8C7C MOV X0, X21
	0x01CF8C80 BL 0x2D8E68C
	0x01CF8C84 LDUR V0, [X31 + 0x68]
	0x01CF8C88 LDUR V1, [X31 + 0x78]
	0x01CF8C8C LDR X8, [X31 + 0x88]
	0x01CF8C90 STP V0, V1, [X31 + 0x90]
	0x01CF8C94 STR X8, [X31 + 0xB0]
	0x01CF8C98 LDR X1, [X25]
	0x01CF8C9C ADD X0, X31, 0x90
	0x01CF8CA0 BL 0x2A079C8
	0x01CF8CA4 MOV W21, W0
	0x01CF8CA8 TBZ X0, 0x0, 0x1CF8D50
	0x01CF8CAC LDP S0, S1, [X31 + 0xA0]
	0x01CF8CB0 LDP S2, S3, [X31 + 0xA8]
	0x01CF8CB4 LDRB W8, [X19]
	0x01CF8CB8 LDP S5, S4, [X31 + 0xB0]
	0x01CF8CBC CBZ W8, 0x1CF8D20
	0x01CF8CC0 LDP S6, S7, [X19 + 0x4]
	0x01CF8CC4 LDR V16, [X19 + 0xC]
	0x01CF8CC8 FSUB S6, S0, S6
	0x01CF8CCC FSUB S7, S1, S7
	0x01CF8CD0 FSUB S16, S2, S16
	0x01CF8CD4 FMUL S6, S6, S6
	0x01CF8CD8 FMUL S7, S7, S7
	0x01CF8CDC FADD S6, S7, S6
	0x01CF8CE0 FMUL S7, S16, S16
	0x01CF8CE4 FADD S6, S7, S6
	0x01CF8CE8 FCMP S6, S9
	0x01CF8CEC B.PL 0x1CF8D20
	0x01CF8CF0 LDP S6, S7, [X19 + 0x10]
	0x01CF8CF4 LDR V16, [X19 + 0x18]
	0x01CF8CF8 FSUB S6, S3, S6
	0x01CF8CFC FSUB S7, S5, S7
	0x01CF8D00 FSUB S16, S4, S16
	0x01CF8D04 FMUL S6, S6, S6
	0x01CF8D08 FMUL S7, S7, S7
	0x01CF8D0C FADD S6, S6, S7
	0x01CF8D10 FMUL S7, S16, S16
	0x01CF8D14 FADD S6, S7, S6
	0x01CF8D18 FCMP S6, S9
	0x01CF8D1C B.MI 0x1CF8C98
	0x01CF8D20 LDR V6, [X20]
	0x01CF8D24 LDR X8, [X20 + 0x10]
	0x01CF8D28 STP S0, S1, [X31 + 0x18]
	0x01CF8D2C ADD X1, X31, 0x18
	0x01CF8D30 ADD X2, X31, 0x0
	0x01CF8D34 MOV V0.16B, V8.16B
	0x01CF8D38 STP S2, S3, [X31 + 0x20]
	0x01CF8D3C STR X8, [X31 + 0x10]
	0x01CF8D40 STR V6, [X31]
	0x01CF8D44 STP S5, S4, [X31 + 0x28]
	0x01CF8D48 BL 0x1CF8E4C
	0x01CF8D4C TBZ X0, 0x0, 0x1CF8C98
	0x01CF8D50 EOR W19, W21, 0x1
	0x01CF8D54 LDR X1, [X24]
	0x01CF8D58 ADD X0, X31, 0x90
	0x01CF8D5C BL 0x2A079C4
	0x01CF8D60 AND W0, W19, 0x1
	0x01CF8D64 LDP X20, X19, [X31 + 0x110]
	0x01CF8D68 LDP X22, X21, [X31 + 0x100]
	0x01CF8D6C LDP X24, X23, [X31 + 0xF0]
	0x01CF8D70 LDP X26, X25, [X31 + 0xE0]
	0x01CF8D74 LDP X29, X30, [X31 + 0xD0]
	0x01CF8D78 LDP D9, D8, [X31 + 0xC0]
	0x01CF8D7C ADD X31, X31, 0x120
	0x01CF8D80 RET
	0x01CF8D84 BL 0x1B6EA1C
	0x01CF8D88 CMP W1, 0x1
	0x01CF8D8C MOV X22, X0
	0x01CF8D90 B.NE 0x1CF8DBC
	0x01CF8D94 MOV X0, X22
	0x01CF8D98 BL 0x3D19840
	0x01CF8D9C LDR X19, [X0]
	0x01CF8DA0 BL 0x3D19850
	0x01CF8DA4 LDR X1, [X24]
	0x01CF8DA8 ADD X0, X31, 0x90
	0x01CF8DAC BL 0x2A079C4
	0x01CF8DB0 CBNZ X19, 0x1CF8DC4
	0x01CF8DB4 MOVZ W19, 0x1
	0x01CF8DB8 B 0x1CF8D60
	0x01CF8DBC MOV X19, X31
	0x01CF8DC0 B 0x1CF8DD0
	0x01CF8DC4 MOV X0, X19
	0x01CF8DC8 BL 0x1B6EA14
	0x01CF8DCC MOV X22, X0
	0x01CF8DD0 LDR X1, [X24]
	0x01CF8DD4 ADD X0, X31, 0x90
	0x01CF8DD8 BL 0x2A079C4
	0x01CF8DDC CBZ X19, 0x1CF8E38
	0x01CF8DE0 MOV X0, X19
	0x01CF8DE4 BL 0x1B6EA14
	0x01CF8DE8 CMP W1, 0x1
	0x01CF8DEC MOV X22, X0
	0x01CF8DF0 B.NE 0x1CF8E1C
	0x01CF8DF4 MOV X0, X22
	0x01CF8DF8 BL 0x3D19840
	0x01CF8DFC LDR X23, [X0]
	0x01CF8E00 BL 0x3D19850
	0x01CF8E04 LDR X1, [X24]
	0x01CF8E08 ADD X0, X31, 0x90
	0x01CF8E0C BL 0x2A079C4
	0x01CF8E10 CBZ X23, 0x1CF8C70
	0x01CF8E14 MOV X0, X23
	0x01CF8E18 BL 0x1B6EA14
	0x01CF8E1C MOV X23, X31
	0x01CF8E20 B 0x1CF8E28
	0x01CF8E24 MOV X22, X0
	0x01CF8E28 LDR X1, [X24]
	0x01CF8E2C ADD X0, X31, 0x90
	0x01CF8E30 BL 0x2A079C4
	0x01CF8E34 CBNZ X23, 0x1CF8E40
	0x01CF8E38 MOV X0, X22
	0x01CF8E3C BL 0x1C8418C
	0x01CF8E40 MOV X0, X23
	0x01CF8E44 BL 0x1B6EA14
	0x01CF8E48 BL 0x18F46A8
	0x01CF8E4C LDR V1, [X1]
	0x01CF8E50 LDR V3, [X1 + 0xC]
	0x01CF8E54 LDR V2, [X2]
	0x01CF8E58 LDR V4, [X2 + 0xC]
	0x01CF8E5C FADD S5, S1, S3
	0x01CF8E60 FSUB S5, S5, S0
	0x01CF8E64 FSUB S6, S2, S4
	0x01CF8E68 FCMP S5, S6
	0x01CF8E6C B.PL 0x1CF8E78
	0x01CF8E70 MOV W0, W31
	0x01CF8E74 RET
	0x01CF8E78 LDP S5, S6, [X1 + 0x4]
	0x01CF8E7C LDP S7, S16, [X1 + 0x10]
	0x01CF8E80 LDP S17, S18, [X2 + 0x4]
	0x01CF8E84 LDP S19, S20, [X2 + 0x10]
	0x01CF8E88 FSUB S1, S1, S3
	0x01CF8E8C FADD S2, S2, S4
	0x01CF8E90 FADD S1, S1, S0
	0x01CF8E94 FADD S4, S5, S7
	0x01CF8E98 FCMP S1, S2
	0x01CF8E9C FSUB S2, S17, S19
	0x01CF8EA0 FSUB S5, S5, S7
	0x01CF8EA4 FSUB S4, S4, S0
	0x01CF8EA8 CSET W8, LE
	0x01CF8EAC FADD S3, S6, S16
	0x01CF8EB0 FADD S7, S17, S19
	0x01CF8EB4 FADD S5, S5, S0
	0x01CF8EB8 FCMP S4, S2
	0x01CF8EBC FSUB S1, S18, S20
	0x01CF8EC0 FSUB S6, S6, S16
	0x01CF8EC4 FSUB S3, S3, S0
	0x01CF8EC8 CSET W9, PL
	0x01CF8ECC FCMP S5, S7

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x252C000
	007 Move W8, [X21+1792]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2259000
	015 Move X0, [X0+2520]
	016 Call 0x1B6F7F0
	017 Move X0, 0x2259000
	018 Move X0, [X0+2528]
	019 Call 0x1B6F7F0
	020 Move W8, 1
	021 Move [X21+1792], W8
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X9, -18919424
	024 Move W8, W19
	025 Add X9, X9, 2405
	026 NotImplemented "Instruction ADR not yet implemented."
	027 Move W11, [X9]
	028 Add X10, X10, X11
	029 CallNoReturn X10
	030 Move X20, [X20+24]
	031 Compare X20, 0
	032 JumpIfEqual {111}
	033 Move W1, [X20+24]
	034 Move W0, W31
	035 Move X2, X31
	036 Call Random.Range, X0, X1
	037 Move W1, W0
	038 Move X8, 0x2259000
	039 Move X8, [X8+2528]
	040 Move X2, [X8]
	041 Move X0, X20
	042 Call List`1<Object>.get_Item, X0, X1
	043 Move X20, [X20+56]
	044 Compare X20, 0
	045 JumpIfEqual {108}
	046 Move W1, [X20+24]
	047 Move W0, W31
	048 Move X2, X31
	049 Call Random.Range, X0, X1
	050 Move W1, W0
	051 Move X8, 0x2259000
	052 Move X8, [X8+2528]
	053 Move X2, [X8]
	054 Move X0, X20
	055 Call List`1<Object>.get_Item, X0, X1
	056 Move X20, [X20+40]
	057 Compare X20, 0
	058 JumpIfEqual {109}
	059 Move W1, [X20+24]
	060 Move W0, W31
	061 Move X2, X31
	062 Call Random.Range, X0, X1
	063 Move W1, W0
	064 Move X8, 0x2259000
	065 Move X8, [X8+2528]
	066 Move X2, [X8]
	067 Move X0, X20
	068 Call List`1<Object>.get_Item, X0, X1
	069 Move X20, [X20+48]
	070 Compare X20, 0
	071 JumpIfEqual {110}
	072 Move W1, [X20+24]
	073 Move W0, W31
	074 Move X2, X31
	075 Call Random.Range, X0, X1
	076 Move W1, W0
	077 Move X8, 0x2259000
	078 Move X8, [X8+2528]
	079 Move X2, [X8]
	080 Move X0, X20
	081 Call List`1<Object>.get_Item, X0, X1
	082 Move X20, [X20+32]
	083 Compare X20, 0
	084 JumpIfEqual {112}
	085 Move W1, [X20+24]
	086 Move W0, W31
	087 Move X2, X31
	088 Call Random.Range, X0, X1
	089 Move W1, W0
	090 Move X8, 0x2259000
	091 Move X8, [X8+2528]
	092 Move X2, [X8]
	093 Move X0, X20
	094 Call List`1<Object>.get_Item, X0, X1
	095 Move X20, [X20+64]
	096 Compare X20, 0
	097 JumpIfEqual {113}
	098 Move W1, [X20+24]
	099 Move W0, W31
	100 Move X2, X31
	101 Call Random.Range, X0, X1
	102 Move W1, W0
	103 Move X8, 0x2259000
	104 Move X8, [X8+2528]
	105 Move X2, [X8]
	106 Move X0, X20
	107 Call List`1<Object>.get_Item, X0, X1
	108 Call 0x1B6FA1C
	109 Call 0x1B6FA1C
	110 Call 0x1B6FA1C
	111 Call 0x1B6FA1C
	112 Call 0x1B6FA1C
	113 Call 0x1B6FA1C
	114 Move X20, X0
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X0, X20
	117 Call 0x3D1A840
	118 Move X20, X0
	119 Move X0, 0x2258000
	120 Move X0, [X0+2536]
	121 Call 0x1B6F804
	122 Move X8, [X20]
	123 Move X1, [X8]
	124 Call 0x1B6FD6C
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {179}
	129 Call 0x3D1A850
	130 Move X0, 0x2259000
	131 Move X0, [X0+2536]
	132 Call 0x1B6F804
	133 Move TEMP, 0
	134 Not TEMP
	135 Move X8, TEMP
	136 Move [X31+8], X0
	137 Move [X31+16], X8
	138 Add X0, X31, 8
	139 Move X1, X31
	140 Move [X31+24], W19
	141 Call Enum.ToString, X0
	142 Move X19, X0
	143 Move X0, 0x2259000
	144 Move X0, [X0+2544]
	145 Call 0x1B6F804
	146 Move X1, X19
	147 Move X2, X31
	148 Call String.Concat, X0, X1
	149 Move X19, X0
	150 Move X0, 0x2256000
	151 Move X0, [X0+1576]
	152 Call 0x1B6F804
	153 Move W8, [X0+224]
	154 Compare W8, 0
	155 JumpIfNotEqual {157}
	156 Call 0x1B6F8F8
	157 Move X0, 0x2259000
	158 Move X0, [X0+2552]
	159 Call 0x1B6F804
	160 Move X20, X0
	161 Move X0, 0x2259000
	162 Move X0, [X0+2560]
	163 Call 0x1B6F804
	164 Move X4, X0
	165 Move W0, 32
	166 Move W5, 52
	167 Move X1, X19
	168 Move X2, X31
	169 Move X3, X20
	170 Move X6, X31
	171 Call Log.Error, X0, X1, X2, X3, X4, X5
	172 Move X0, X31
	173 Move X20, [X31+48]
	174 Move X19, [X31+56]
	175 Move X30, [X31+32]
	176 Move X21, [X31+40]
	177 Add X31, X31, 64
	178 Return X0
	179 Move W0, 8
	180 Call 0x3D1A860
	181 Move X8, [X20]
	182 Move [X0], X8
	183 Move X1, 0x2025000
	184 Add X1, X1, 3032
	185 Move X2, X31
	186 Call 0x3D1A870
	187 Move X20, X0
	188 Call 0x3D1A850
	189 Move X0, X20
	190 Call 0x1C8518C
	191 Call 0x18F56A8

Method: System.Void .ctor()

Disassembly:
	0x01CF8ED0 FADD S16, S18, S20
	0x01CF8ED4 FADD S0, S6, S0
	0x01CF8ED8 AND W8, W8, W9, 0x0
	0x01CF8EDC CSET W9, LE
	0x01CF8EE0 FCMP S3, S1
	0x01CF8EE4 AND W8, W9, W8, 0x0
	0x01CF8EE8 CSET W9, PL
	0x01CF8EEC FCMP S0, S16
	0x01CF8EF0 AND W8, W9, W8, 0x0
	0x01CF8EF4 CSET W9, LE
	0x01CF8EF8 AND W0, W9, W8, 0x0
	0x01CF8EFC RET
	0x01CF8F00 MOV X1, X31
	0x01CF8F04 B 0x3036524
	0x01CF8F08 SUB X31, X31, 0x30
	0x01CF8F0C STR X30, [X31 + 0x10]
	0x01CF8F10 STP X20, X19, [X31 + 0x20]
	0x01CF8F14 ADRP X20, 0x252B000
	0x01CF8F18 ADRP X19, 0x2258000
	0x01CF8F1C LDRB W8, [X20 + 0x706]
	0x01CF8F20 LDR X19, [X19 + 0xA38]
	0x01CF8F24 TBNZ X8, 0x0, 0x1CF8F3C
	0x01CF8F28 ADRP X0, 0x2258000
	0x01CF8F2C LDR X0, [X0 + 0xA38]
	0x01CF8F30 BL 0x1B6E7F0
	0x01CF8F34 MOVZ W8, 0x1
	0x01CF8F38 STRB W8, [X20 + 0x706]
	0x01CF8F3C LDR X0, [X19]
	0x01CF8F40 ADD X1, X31, 0x0
	0x01CF8F44 MOV X2, X31
	0x01CF8F48 STP X31, X31, [X31]
	0x01CF8F4C BL 0x3A8EB28
	0x01CF8F50 FMOV S0, 1
	0x01CF8F54 FMOV S1, 1
	0x01CF8F58 FMOV S2, 1
	0x01CF8F5C FMOV S3, 1
	0x01CF8F60 TBZ X0, 0x0, 0x1CF8F6C
	0x01CF8F64 LDP S0, S1, [X31]
	0x01CF8F68 LDP S2, S3, [X31 + 0x8]
	0x01CF8F6C LDP X20, X19, [X31 + 0x20]
	0x01CF8F70 LDR X30, [X31 + 0x10]
	0x01CF8F74 ADD X31, X31, 0x30
	0x01CF8F78 RET
	0x01CF8F7C FMOV S0, W31
	0x01CF8F80 FMOV S1, W31
	0x01CF8F84 FMOV S2, W31
	0x01CF8F88 FMOV S3, 1
	0x01CF8F8C RET
	0x01CF8F90 STR X30, [X31 - 0x20]!
	0x01CF8F94 STP X20, X19, [X31 + 0x10]
	0x01CF8F98 ADRP X19, 0x252B000
	0x01CF8F9C ADRP X20, 0x2258000
	0x01CF8FA0 LDRB W8, [X19 + 0x707]
	0x01CF8FA4 LDR X20, [X20 + 0xA40]
	0x01CF8FA8 TBNZ X8, 0x0, 0x1CF8FC0
	0x01CF8FAC ADRP X0, 0x2258000
	0x01CF8FB0 LDR X0, [X0 + 0xA40]
	0x01CF8FB4 BL 0x1B6E7F0
	0x01CF8FB8 MOVZ W8, 0x1
	0x01CF8FBC STRB W8, [X19 + 0x707]
	0x01CF8FC0 LDR X0, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x252C000
	007 Move X22, 0x2259000
	008 Move X21, 0x2259000
	009 Move W8, [X20+1793]
	010 Move X22, [X22+2568]
	011 Move X21, [X21+2576]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2259000
	018 Move X0, [X0+2576]
	019 Call 0x1B6F7F0
	020 Move X0, 0x2259000
	021 Move X0, [X0+2568]
	022 Call 0x1B6F7F0
	023 Move W8, 1
	024 Move [X20+1793], W8
	025 Move X0, [X22]
	026 Call 0x1B6FA0C
	027 Move X1, [X21]
	028 Move X20, X0
	029 Call List`1<Object>..ctor, X0
	030 Move [X19+24], X20
	031 Move X0, [X22]
	032 Call 0x1B6FA0C
	033 Move X1, [X21]
	034 Move X20, X0
	035 Call List`1<Object>..ctor, X0
	036 Move [X19+32], X20
	037 Move X0, [X22]
	038 Call 0x1B6FA0C
	039 Move X1, [X21]
	040 Move X20, X0
	041 Call List`1<Object>..ctor, X0
	042 Move [X19+40], X20
	043 Move X0, [X22]
	044 Call 0x1B6FA0C
	045 Move X1, [X21]
	046 Move X20, X0
	047 Call List`1<Object>..ctor, X0
	048 Move [X19+48], X20
	049 Move X0, [X22]
	050 Call 0x1B6FA0C
	051 Move X1, [X21]
	052 Move X20, X0
	053 Call List`1<Object>..ctor, X0
	054 Move [X19+56], X20
	055 Move X0, [X22]
	056 Call 0x1B6FA0C
	057 Move X1, [X21]
	058 Move X20, X0
	059 Call List`1<Object>..ctor, X0
	060 Move [X19+64], X20
	061 Move X0, X19
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X1, X31
	067 Move X30, [X31+48]
	068 Call ScriptableObject..ctor, X0
	069 Return 

