Type: AnimalCompany.Terminal

Method: System.Void Awake()

Disassembly:
	0x01DAFD00 LDP X30, X19, [X31], #0x10
	0x01DAFD04 B 0x1DAFE10
	0x01DAFD08 LDP X30, X19, [X31], #0x10
	0x01DAFD0C RET
	0x01DAFD10 BL 0x1C16F20
	0x01DAFD14 STP X30, X19, [X31 - 0x10]!
	0x01DAFD18 MOV X19, X0
	0x01DAFD1C LDR X0, [X0 + 0x28]
	0x01DAFD20 CBZ X0, 0x1DAFD54
	0x01DAFD24 LDR W8, [X0 + 0x10]
	0x01DAFD28 SUBS W2, W8, 0x1
	0x01DAFD2C B.LT 0x1DAFD4C
	0x01DAFD30 MOV W1, W31
	0x01DAFD34 MOV X3, X31
	0x01DAFD38 BL 0x3228DE4
	0x01DAFD3C STR X0, [X19 + 0x28]
	0x01DAFD40 MOV X0, X19
	0x01DAFD44 LDP X30, X19, [X31], #0x10
	0x01DAFD48 B 0x1DAFE10
	0x01DAFD4C LDP X30, X19, [X31], #0x10
	0x01DAFD50 RET
	0x01DAFD54 BL 0x1C16F20
	0x01DAFD58 STR X30, [X31 - 0x30]!
	0x01DAFD5C STP X22, X21, [X31 + 0x10]
	0x01DAFD60 STP X20, X19, [X31 + 0x20]
	0x01DAFD64 ADRP X21, 0x2629000
	0x01DAFD68 ADRP X22, 0x2348000
	0x01DAFD6C LDRB W8, [X21 + 0xAE7]
	0x01DAFD70 LDR X22, [X22 + 0x8F0]
	0x01DAFD74 MOV X20, X1
	0x01DAFD78 MOV X19, X0
	0x01DAFD7C TBNZ X8, 0x0, 0x1DAFDA0
	0x01DAFD80 ADRP X0, 0x2348000
	0x01DAFD84 LDR X0, [X0 + 0x8F0]
	0x01DAFD88 BL 0x1C16CF4
	0x01DAFD8C ADRP X0, 0x2344000
	0x01DAFD90 LDR X0, [X0 + 0x988]
	0x01DAFD94 BL 0x1C16CF4
	0x01DAFD98 MOVZ W8, 0x1
	0x01DAFD9C STRB W8, [X21 + 0xAE7]
	0x01DAFDA0 LDR X8, [X22]
	0x01DAFDA4 LDR X8, [X8 + 0xB8]
	0x01DAFDA8 LDR X8, [X8 + 0x8]
	0x01DAFDAC CBZ X8, 0x1DAFDF0
	0x01DAFDB0 LDR X1, [X19 + 0x28]
	0x01DAFDB4 LDR X9, [X8 + 0x18]
	0x01DAFDB8 LDR X0, [X8 + 0x40]
	0x01DAFDBC LDR X3, [X8 + 0x28]
	0x01DAFDC0 MOV X2, X20
	0x01DAFDC4 BLR X9
	0x01DAFDC8 TBZ X0, 0x0, 0x1DAFDF0
	0x01DAFDCC ADRP X8, 0x2344000
	0x01DAFDD0 LDR X8, [X8 + 0x988]
	0x01DAFDD4 MOV X0, X19
	0x01DAFDD8 LDP X22, X21, [X31 + 0x10]
	0x01DAFDDC LDR X8, [X8]
	0x01DAFDE0 STR X8, [X19 + 0x28]
	0x01DAFDE4 LDP X20, X19, [X31 + 0x20]
	0x01DAFDE8 LDR X30, [X31], #0x30
	0x01DAFDEC B 0x1DAFE10
	0x01DAFDF0 LDP X20, X19, [X31 + 0x20]
	0x01DAFDF4 LDP X22, X21, [X31 + 0x10]
	0x01DAFDF8 LDR X30, [X31], #0x30
	0x01DAFDFC RET
	0x01DAFE00 MOVZ W8, 0x1
	0x01DAFE04 MOV X1, X31
	0x01DAFE08 STRB W8, [X0 + 0x10]
	0x01DAFE0C B 0x33BDD8C
	0x01DAFE10 STP X30, X21, [X31 - 0x20]!
	0x01DAFE14 STP X20, X19, [X31 + 0x10]
	0x01DAFE18 ADRP X19, 0x2629000
	0x01DAFE1C ADRP X21, 0x2344000
	0x01DAFE20 LDRB W8, [X19 + 0xAE8]
	0x01DAFE24 LDR X21, [X21 + 0xDE0]
	0x01DAFE28 MOV X20, X0
	0x01DAFE2C TBNZ X8, 0x0, 0x1DAFE44
	0x01DAFE30 ADRP X0, 0x2344000
	0x01DAFE34 LDR X0, [X0 + 0xDE0]
	0x01DAFE38 BL 0x1C16CF4
	0x01DAFE3C MOVZ W8, 0x1
	0x01DAFE40 STRB W8, [X19 + 0xAE8]
	0x01DAFE44 LDP X0, X19, [X20 + 0x28]
	0x01DAFE48 LDR X1, [X21]
	0x01DAFE4C MOV X2, X31
	0x01DAFE50 BL 0x321B938
	0x01DAFE54 CBZ X19, 0x1DAFE78
	0x01DAFE58 LDR X8, [X19]
	0x01DAFE5C MOV X1, X0
	0x01DAFE60 MOV X0, X19
	0x01DAFE64 LDP X20, X19, [X31 + 0x10]
	0x01DAFE68 LDR X3, [X8 + 0x558]
	0x01DAFE6C LDR X2, [X8 + 0x560]
	0x01DAFE70 LDP X30, X21, [X31], #0x20
	0x01DAFE74 BR X3
	0x01DAFE78 BL 0x1C16F20
	0x01DAFE7C STP X30, X21, [X31 - 0x20]!
	0x01DAFE80 STP X20, X19, [X31 + 0x10]
	0x01DAFE84 ADRP X21, 0x2629000
	0x01DAFE88 ADRP X20, 0x2344000
	0x01DAFE8C LDRB W8, [X21 + 0xAE9]
	0x01DAFE90 LDR X20, [X20 + 0x988]
	0x01DAFE94 MOV X19, X0
	0x01DAFE98 TBNZ X8, 0x0, 0x1DAFEB0
	0x01DAFE9C ADRP X0, 0x2344000
	0x01DAFEA0 LDR X0, [X0 + 0x988]
	0x01DAFEA4 BL 0x1C16CF4
	0x01DAFEA8 MOVZ W8, 0x1
	0x01DAFEAC STRB W8, [X21 + 0xAE9]
	0x01DAFEB0 MOVZ W8, 0x8
	0x01DAFEB4 STR W8, [X19 + 0x20]
	0x01DAFEB8 LDR X8, [X20]
	0x01DAFEBC MOV X0, X19
	0x01DAFEC0 MOV X1, X31
	0x01DAFEC4 STR X8, [X19 + 0x28]
	0x01DAFEC8 LDP X20, X19, [X31 + 0x10]
	0x01DAFECC LDP X30, X21, [X31], #0x20
	0x01DAFED0 B 0x3C36C30
	0x01DAFED4 STP X30, X21, [X31 - 0x20]!
	0x01DAFED8 STP X20, X19, [X31 + 0x10]
	0x01DAFEDC LDR X8, [X2 + 0x8]
	0x01DAFEE0 STP X1, X2, [X0 + 0x20]
	0x01DAFEE4 MOV X19, X0
	0x01DAFEE8 MOV X20, X1
	0x01DAFEEC STR X8, [X0 + 0x10]
	0x01DAFEF0 LDRB W21, [X2 + 0x52]
	0x01DAFEF4 STR X0, [X0 + 0x40]
	0x01DAFEF8 MOV X0, X2
	0x01DAFEFC BL 0x1C16D84
	0x01DAFF00 TBZ X0, 0x0, 0x1DAFF18
	0x01DAFF04 CMP W21, 0x2
	0x01DAFF08 B.NE 0x1DAFF34
	0x01DAFF0C ADRP X8, 0xFFFFFFFFFFBE2000
	0x01DAFF10 ADD X8, X8, 0x54
	0x01DAFF14 B 0x1DAFF28
	0x01DAFF18 CMP W21, 0x1
	0x01DAFF1C B.NE 0x1DAFF30
	0x01DAFF20 ADRP X8, 0xFFFFFFFFFFBE2000
	0x01DAFF24 ADD X8, X8, 0x30
	0x01DAFF28 STR X8, [X19 + 0x18]
	0x01DAFF2C B 0x1DAFF44
	0x01DAFF30 CBZ X20, 0x1DAFF5C
	0x01DAFF34 LDR X8, [X19 + 0x10]
	0x01DAFF38 LDR X9, [X19 + 0x20]
	0x01DAFF3C STR X8, [X19 + 0x18]
	0x01DAFF40 STR X9, [X19 + 0x40]
	0x01DAFF44 ADRP X8, 0xFFFFFFFFFFBE1000
	0x01DAFF48 ADD X8, X8, 0xFCC
	0x01DAFF4C STR X8, [X19 + 0x38]
	0x01DAFF50 LDP X20, X19, [X31 + 0x10]
	0x01DAFF54 LDP X30, X21, [X31], #0x20
	0x01DAFF58 RET
	0x01DAFF5C ADRP X1, 0xFFFFFFFFFED6C000
	0x01DAFF60 ADD X1, X1, 0xEE3
	0x01DAFF64 MOV X0, X31
	0x01DAFF68 BL 0x1C16F3C
	0x01DAFF6C MOV X1, X31
	0x01DAFF70 BL 0x1C16DEC
	0x01DAFF74 LDR X8, [X0 + 0x40]
	0x01DAFF78 LDR X4, [X0 + 0x18]
	0x01DAFF7C LDR X3, [X0 + 0x28]
	0x01DAFF80 MOV X0, X8
	0x01DAFF84 BR X4
	0x01DAFF88 SUB X31, X31, 0x30
	0x01DAFF8C STP X31, X30, [X31 + 0x18]
	0x01DAFF90 STP X1, X2, [X31 + 0x8]
	0x01DAFF94 ADD X1, X31, 0x8
	0x01DAFF98 MOV X2, X3
	0x01DAFF9C MOV X3, X4
	0x01DAFFA0 BL 0x1C16CB0
	0x01DAFFA4 LDR X30, [X31 + 0x20]
	0x01DAFFA8 ADD X31, X31, 0x30
	0x01DAFFAC RET
	0x01DAFFB0 STR X30, [X31 - 0x10]!
	0x01DAFFB4 MOV X0, X1
	0x01DAFFB8 MOV X1, X31
	0x01DAFFBC BL 0x1C16CB4
	0x01DAFFC0 CBZ X0, 0x1DAFFD4
	0x01DAFFC4 BL 0x1C16E08
	0x01DAFFC8 LDRB W0, [X0]
	0x01DAFFCC LDR X30, [X31], #0x10
	0x01DAFFD0 RET
	0x01DAFFD4 BL 0x1C16F20
	0x01DAFFD8 STP X30, X21, [X31 - 0x20]!
	0x01DAFFDC STP X20, X19, [X31 + 0x10]
	0x01DAFFE0 ADRP X21, 0x2629000
	0x01DAFFE4 ADRP X20, 0x2346000
	0x01DAFFE8 LDRB W8, [X21 + 0xAEA]
	0x01DAFFEC LDR X20, [X20 + 0x5A8]
	0x01DAFFF0 MOV X19, X0
	0x01DAFFF4 TBNZ X8, 0x0, 0x1DB000C
	0x01DAFFF8 ADRP X0, 0x2346000
	0x01DAFFFC LDR X0, [X0 + 0x5A8]
	0x01DB0000 BL 0x1C16CF4
	0x01DB0004 MOVZ W8, 0x1
	0x01DB0008 STRB W8, [X21 + 0xAEA]
	0x01DB000C LDR X0, [X20]
	0x01DB0010 LDR W19, [X19 + 0x4C]
	0x01DB0014 LDR W8, [X0 + 0xE0]
	0x01DB0018 CBNZ W8, 0x1DB0020
	0x01DB001C BL 0x1C16DFC
	0x01DB0020 MOV W0, W19
	0x01DB0024 LDP X20, X19, [X31 + 0x10]
	0x01DB0028 MOV X1, X31
	0x01DB002C LDP X30, X21, [X31], #0x20
	0x01DB0030 B 0x31AD670
	0x01DB0034 SUB X31, X31, 0x30
	0x01DB0038 STP X30, X21, [X31 + 0x10]
	0x01DB003C STP X20, X19, [X31 + 0x20]
	0x01DB0040 ADRP X21, 0x2628000
	0x01DB0044 LDRB W8, [X21 + 0xAEB]
	0x01DB0048 MOV X20, X1
	0x01DB004C MOV X19, X0
	0x01DB0050 TBNZ X8, 0x0, 0x1DB0068
	0x01DB0054 ADRP X0, 0x2343000
	0x01DB0058 LDR X0, [X0 + 0x598]
	0x01DB005C BL 0x1C16CF4
	0x01DB0060 MOVZ W8, 0x1
	0x01DB0064 STRB W8, [X21 + 0xAEB]
	0x01DB0068 STR W31, [X31 + 0xC]
	0x01DB006C CBZ X20, 0x1DB00DC
	0x01DB0070 ADRP X21, 0x2343000
	0x01DB0074 LDR X21, [X21 + 0x598]
	0x01DB0078 MOV X0, X20
	0x01DB007C MOV X1, X31
	0x01DB0080 BL 0x3C8E82C
	0x01DB0084 LDR X8, [X21]
	0x01DB0088 MOV X21, X0
	0x01DB008C LDR W9, [X8 + 0xE0]
	0x01DB0090 CBNZ W9, 0x1DB009C
	0x01DB0094 MOV X0, X8
	0x01DB0098 BL 0x1C16DFC
	0x01DB009C MOV X0, X21
	0x01DB00A0 MOV X1, X31
	0x01DB00A4 MOV X2, X31
	0x01DB00A8 BL 0x3C3883C
	0x01DB00AC TBNZ X0, 0x0, 0x1DB00CC
	0x01DB00B0 ADD X1, X31, 0xC
	0x01DB00B4 MOV X0, X20
	0x01DB00B8 MOV X2, X31
	0x01DB00BC BL 0x1D7B2BC
	0x01DB00C0 TBZ X0, 0x0, 0x1DB00CC
	0x01DB00C4 MOV X0, X19
	0x01DB00C8 BL 0x1DB00E0
	0x01DB00CC LDP X20, X19, [X31 + 0x20]
	0x01DB00D0 LDP X30, X21, [X31 + 0x10]
	0x01DB00D4 ADD X31, X31, 0x30
	0x01DB00D8 RET
	0x01DB00DC BL 0x1C16F20
	0x01DB00E0 STP X30, X21, [X31 - 0x20]!
	0x01DB00E4 STP X20, X19, [X31 + 0x10]
	0x01DB00E8 ADRP X20, 0x2628000
	0x01DB00EC LDRB W8, [X20 + 0xAEC]
	0x01DB00F0 MOV X19, X0
	0x01DB00F4 TBNZ X8, 0x0, 0x1DB013C
	0x01DB00F8 ADRP X0, 0x2345000
	0x01DB00FC LDR X0, [X0 + 0x5B0]
	0x01DB0100 BL 0x1C16CF4
	0x01DB0104 ADRP X0, 0x2344000
	0x01DB0108 LDR X0, [X0 + 0xE70]
	0x01DB010C BL 0x1C16CF4
	0x01DB0110 ADRP X0, 0x2345000
	0x01DB0114 LDR X0, [X0 + 0x5A8]
	0x01DB0118 BL 0x1C16CF4
	0x01DB011C ADRP X0, 0x2347000
	0x01DB0120 LDR X0, [X0 + 0x960]
	0x01DB0124 BL 0x1C16CF4
	0x01DB0128 ADRP X0, 0x2347000
	0x01DB012C LDR X0, [X0 + 0x968]
	0x01DB0130 BL 0x1C16CF4
	0x01DB0134 MOVZ W8, 0x1
	0x01DB0138 STRB W8, [X20 + 0xAEC]
	0x01DB013C MOV X0, X31
	0x01DB0140 BL 0x3C3C6C4
	0x01DB0144 LDR V1, [X19 + 0x50]
	0x01DB0148 FSUB S0, S0, S1
	0x01DB014C FMOV S1, 0.25
	0x01DB0150 FCMP S0, S1
	0x01DB0154 B.MI 0x1DB02A8
	0x01DB0158 LDR X20, [X19 + 0x38]
	0x01DB015C MOV X0, X19
	0x01DB0160 MOV X1, X31
	0x01DB0164 BL 0x3C32E90
	0x01DB0168 CBZ X0, 0x1DB02B4
	0x01DB016C MOV X1, X31
	0x01DB0170 BL 0x3C3F58C
	0x01DB0174 CBZ X20, 0x1DB02B4
	0x01DB0178 FMOV S3, 1
	0x01DB017C MOVZ W1, 0x1
	0x01DB0180 MOV X0, X20
	0x01DB0184 MOV X2, X31
	0x01DB0188 BL 0x1DD0FA8
	0x01DB018C ADRP X8, 0x2345000
	0x01DB0190 LDR X8, [X8 + 0x5A8]
	0x01DB0194 LDR W20, [X19 + 0x4C]
	0x01DB0198 LDR X0, [X8]
	0x01DB019C LDR W8, [X0 + 0xE0]
	0x01DB01A0 CBNZ W8, 0x1DB01A8
	0x01DB01A4 BL 0x1C16DFC
	0x01DB01A8 MOV W0, W20
	0x01DB01AC MOV X1, X31
	0x01DB01B0 BL 0x31AD670
	0x01DB01B4 ADRP X8, 0xFFFFFFFFFED3A000
	0x01DB01B8 LDR V2, [X8 + 0x44C]
	0x01DB01BC FMOV S0, W31
	0x01DB01C0 FMOV S1, 1
	0x01DB01C4 MOV X0, X31
	0x01DB01C8 BL 0x31B22EC
	0x01DB01CC CBZ X0, 0x1DB02B4
	0x01DB01D0 MOV X1, X31
	0x01DB01D4 BL 0x31C5C5C
	0x01DB01D8 ADRP X8, 0x2345000
	0x01DB01DC LDR X8, [X8 + 0x5B0]
	0x01DB01E0 MOV X20, X0
	0x01DB01E4 LDR X8, [X8]
	0x01DB01E8 MOV X0, X8
	0x01DB01EC BL 0x1C16F10
	0x01DB01F0 ADRP X8, 0x2347000
	0x01DB01F4 LDR X8, [X8 + 0x960]
	0x01DB01F8 MOV X1, X19
	0x01DB01FC MOV X3, X31
	0x01DB0200 MOV X21, X0
	0x01DB0204 LDR X2, [X8]
	0x01DB0208 BL 0x2A6DA40
	0x01DB020C CBZ X20, 0x1DB02B4
	0x01DB0210 MOV X0, X20
	0x01DB0214 MOV X1, X21
	0x01DB0218 MOV X2, X31
	0x01DB021C BL 0x31C8070
	0x01DB0220 ADRP X8, 0x2344000
	0x01DB0224 LDR X8, [X8 + 0xE70]
	0x01DB0228 MOV X20, X0
	0x01DB022C LDR X8, [X8]
	0x01DB0230 MOV X0, X8
	0x01DB0234 BL 0x1C16F10
	0x01DB0238 ADRP X8, 0x2347000
	0x01DB023C LDR X8, [X8 + 0x968]
	0x01DB0240 MOV X1, X19
	0x01DB0244 MOV X3, X31
	0x01DB0248 MOV X21, X0
	0x01DB024C LDR X2, [X8]
	0x01DB0250 BL 0x3314368
	0x01DB0254 CBZ X20, 0x1DB02B4
	0x01DB0258 MOV X0, X20
	0x01DB025C MOV X1, X21
	0x01DB0260 MOV X2, X31
	0x01DB0264 BL 0x31C7FD8
	0x01DB0268 CBZ X0, 0x1DB02B4
	0x01DB026C MOV X1, X31
	0x01DB0270 BL 0x31BFBD4
	0x01DB0274 LDR X8, [X19 + 0x40]
	0x01DB0278 STR W0, [X19 + 0x4C]
	0x01DB027C CBZ X8, 0x1DB02B4
	0x01DB0280 LDR X8, [X8 + 0x20]
	0x01DB0284 CBZ X8, 0x1DB029C
	0x01DB0288 LDP W2, W1, [X19 + 0x20]
	0x01DB028C LDR X9, [X8 + 0x18]
	0x01DB0290 LDR X0, [X8 + 0x40]
	0x01DB0294 LDR X3, [X8 + 0x28]
	0x01DB0298 BLR X9
	0x01DB029C MOV X0, X31
	0x01DB02A0 BL 0x3C3C6C4
	0x01DB02A4 STR S0, [X19 + 0x50]
	0x01DB02A8 LDP X20, X19, [X31 + 0x10]
	0x01DB02AC LDP X30, X21, [X31], #0x20
	0x01DB02B0 RET
	0x01DB02B4 BL 0x1C16F20
	0x01DB02B8 LDR X8, [X0 + 0x20]
	0x01DB02BC CBZ X8, 0x1DB02D0
	0x01DB02C0 LDR X4, [X8 + 0x18]
	0x01DB02C4 LDR X0, [X8 + 0x40]
	0x01DB02C8 LDR X3, [X8 + 0x28]
	0x01DB02CC BR X4
	0x01DB02D0 RET
	0x01DB02D4 MOVZ W8, 0xCCCD
	0x01DB02D8 MOVK W8, 0xBECC0000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0x262A000
	012 Move X22, 0x2349000
	013 Move X20, 0x2349000
	014 Move W8, [X21+2784]
	015 Move X22, [X22+2288]
	016 Move X20, [X20+200]
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {63}
	022 Move X0, 0x2348000
	023 Move X0, [X0+1144]
	024 Call 0x1C17CF4
	025 Move X0, 0x2345000
	026 Move X0, [X0+1608]
	027 Call 0x1C17CF4
	028 Move X0, 0x2345000
	029 Move X0, [X0+2416]
	030 Call 0x1C17CF4
	031 Move X0, 0x2349000
	032 Move X0, [X0+200]
	033 Call 0x1C17CF4
	034 Move X0, 0x2345000
	035 Move X0, [X0+3504]
	036 Call 0x1C17CF4
	037 Move X0, 0x2345000
	038 Move X0, [X0+3488]
	039 Call 0x1C17CF4
	040 Move X0, 0x2349000
	041 Move X0, [X0+2296]
	042 Call 0x1C17CF4
	043 Move X0, 0x2349000
	044 Move X0, [X0+2304]
	045 Call 0x1C17CF4
	046 Move X0, 0x2349000
	047 Move X0, [X0+2312]
	048 Call 0x1C17CF4
	049 Move X0, 0x2349000
	050 Move X0, [X0+2320]
	051 Call 0x1C17CF4
	052 Move X0, 0x2349000
	053 Move X0, [X0+2328]
	054 Call 0x1C17CF4
	055 Move X0, 0x2349000
	056 Move X0, [X0+2288]
	057 Call 0x1C17CF4
	058 Move X0, 0x2349000
	059 Move X0, [X0+1536]
	060 Call 0x1C17CF4
	061 Move W8, 1
	062 Move [X21+2784], W8
	063 Move X8, [X22]
	064 Move X0, X19
	065 Move X8, [X8+184]
	066 Move [X8], X19
	067 Move X1, [X20]
	068 Call 0x21A4894, X0
	069 Move [X19+96], X0
	070 Compare X0, 0
	071 JumpIfEqual {428}
	072 Move X23, 0x2348000
	073 Move X23, [X23+1144]
	074 Move X20, X0
	075 Move X21, [X0+32]
	076 Move X22, 0x2349000
	077 Move X0, [X23]
	078 Move X22, [X22+2304]
	079 Call 0x1C17F10
	080 Move X2, [X22]
	081 Move X1, X19
	082 Move X3, X31
	083 Move X22, X0
	084 Call Action`2<Int32Enum, Int32Enum>..ctor, X0, X1, X2
	085 Move X0, X21
	086 Move X1, X22
	087 Move X2, X31
	088 Call Delegate.Combine, X0, X1
	089 Compare X0, 0
	090 JumpIfEqual {107}
	091 Move X22, [X23]
	092 Move X21, X0
	093 Move X1, X22
	094 Call 0x1C17E00
	095 Compare X0, 0
	096 JumpIfEqual {433}
	097 Move [X20+32], X0
	098 Move X20, [X23]
	099 Move X0, X21
	100 Move X1, X20
	101 Call 0x1C17E00
	102 Compare X0, 0
	103 JumpIfNotEqual {108}
	104 Move X0, X21
	105 Move X1, X20
	106 Call 0x1C181E0
	107 Move [X20+32], X31
	108 Move X25, 0x2345000
	109 Move X25, [X25+3488]
	110 Move X20, 0x2349000
	111 Move X24, 0x2345000
	112 Move X23, 0x2345000
	113 Move X0, [X25]
	114 Move X20, [X20+2296]
	115 Move X24, [X24+3504]
	116 Move X23, [X23+1608]
	117 Call 0x1C17F10
	118 Move X2, [X20]
	119 Move X1, X19
	120 Move X3, X31
	121 Move X20, X0
	122 Call ObserverDelegate..ctor, X0, X1, X2
	123 Move X0, [X24]
	124 Move W1, 3
	125 Call 0x1C17D6C
	126 Move X8, [X23]
	127 Move X21, X0
	128 Move W9, [X8+224]
	129 Compare W9, 0
	130 JumpIfNotEqual {133}
	131 Move X0, X8
	132 Call 0x1C17DFC
	133 Move X26, 0x262A000
	134 Move W8, [X26+1927]
	135 Compare W8, 0
	136 JumpIfNotEqual {142}
	137 Move X0, 0x2345000
	138 Move X0, [X0+1608]
	139 Call 0x1C17CF4
	140 Move W8, 1
	141 Move [X26+1927], W8
	142 Move X0, [X23]
	143 Move W8, [X0+224]
	144 Compare W8, 0
	145 JumpIfNotEqual {148}
	146 Call 0x1C17DFC
	147 Move X0, [X23]
	148 Move X8, [X0+184]
	149 Move X8, [X8]
	150 Compare X8, 0
	151 JumpIfEqual {428}
	152 Move X8, [X8+224]
	153 Compare X8, 0
	154 JumpIfEqual {428}
	155 Compare X21, 0
	156 JumpIfEqual {428}
	157 Move X22, [X8+72]
	158 Compare X22, 0
	159 JumpIfEqual {166}
	160 Move X8, [X21]
	161 Move X0, X22
	162 Move X1, [X8+64]
	163 Call 0x1C17E00
	164 Compare X0, 0
	165 JumpIfEqual {430}
	166 Move W8, [X21+24]
	167 Compare W8, 0
	168 JumpIfEqual {429}
	169 Move [X21+32], X22
	170 Move W8, [X26+1927]
	171 Compare W8, 0
	172 JumpIfNotEqual {178}
	173 Move X0, 0x2345000
	174 Move X0, [X0+1608]
	175 Call 0x1C17CF4
	176 Move W8, 1
	177 Move [X26+1927], W8
	178 Move X0, [X23]
	179 Move W8, [X0+224]
	180 Compare W8, 0
	181 JumpIfNotEqual {184}
	182 Call 0x1C17DFC
	183 Move X0, [X23]
	184 Move X8, [X0+184]
	185 Move X8, [X8]
	186 Compare X8, 0
	187 JumpIfEqual {428}
	188 Move X8, [X8+224]
	189 Compare X8, 0
	190 JumpIfEqual {428}
	191 Move X22, [X8+80]
	192 Compare X22, 0
	193 JumpIfEqual {200}
	194 Move X8, [X21]
	195 Move X0, X22
	196 Move X1, [X8+64]
	197 Call 0x1C17E00
	198 Compare X0, 0
	199 JumpIfEqual {430}
	200 Move W8, [X21+24]
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move [X21+40], X22
	203 Move W8, [X26+1927]
	204 Compare W8, 0
	205 JumpIfNotEqual {211}
	206 Move X0, 0x2345000
	207 Move X0, [X0+1608]
	208 Call 0x1C17CF4
	209 Move W8, 1
	210 Move [X26+1927], W8
	211 Move X0, [X23]
	212 Move W8, [X0+224]
	213 Compare W8, 0
	214 JumpIfNotEqual {217}
	215 Call 0x1C17DFC
	216 Move X0, [X23]
	217 Move X8, [X0+184]
	218 Move X8, [X8]
	219 Compare X8, 0
	220 JumpIfEqual {428}
	221 Move X22, [X8+240]
	222 Compare X22, 0
	223 JumpIfEqual {230}
	224 Move X8, [X21]
	225 Move X0, X22
	226 Move X1, [X8+64]
	227 Call 0x1C17E00
	228 Compare X0, 0
	229 JumpIfEqual {430}
	230 Move W8, [X21+24]
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Move X27, 0x2348000
	233 Move X27, [X27+2328]
	234 Move X0, X20
	235 Move X1, X21
	236 Move X2, X31
	237 Move [X21+48], X22
	238 Call App.RegisterObserver, X0, X1
	239 Move X0, [X25]
	240 Call 0x1C17F10
	241 Move X2, [X27]
	242 Move X1, X19
	243 Move X3, X31
	244 Move X20, X0
	245 Call ObserverDelegate..ctor, X0, X1, X2
	246 Move X0, [X24]
	247 Move W1, 1
	248 Move W22, 1
	249 Call 0x1C17D6C
	250 Move W8, [X26+1927]
	251 Move X21, X0
	252 Compare W8, 0
	253 JumpIfNotEqual {258}
	254 Move X0, 0x2344000
	255 Move X0, [X0+1608]
	256 Call 0x1C17CF4
	257 Move [X26+1927], W22
	258 Move X0, [X23]
	259 Move W8, [X0+224]
	260 Compare W8, 0
	261 JumpIfNotEqual {264}
	262 Call 0x1C17DFC
	263 Move X0, [X23]
	264 Move X8, [X0+184]
	265 Move X8, [X8]
	266 Compare X8, 0
	267 JumpIfEqual {428}
	268 Compare X21, 0
	269 JumpIfEqual {428}
	270 Move X22, [X8+232]
	271 Compare X22, 0
	272 JumpIfEqual {279}
	273 Move X8, [X21]
	274 Move X0, X22
	275 Move X1, [X8+64]
	276 Call 0x1C17E00
	277 Compare X0, 0
	278 JumpIfEqual {430}
	279 Move W8, [X21+24]
	280 Compare W8, 0
	281 JumpIfEqual {429}
	282 Move X27, 0x2348000
	283 Move X27, [X27+2312]
	284 Move X0, X20
	285 Move X1, X21
	286 Move X2, X31
	287 Move [X21+32], X22
	288 Call App.RegisterObserver, X0, X1
	289 Move X0, [X25]
	290 Call 0x1C17F10
	291 Move X2, [X27]
	292 Move X1, X19
	293 Move X3, X31
	294 Move X20, X0
	295 Call ObserverDelegate..ctor, X0, X1, X2
	296 Move X0, [X24]
	297 Move W1, 1
	298 Move W22, 1
	299 Call 0x1C17D6C
	300 Move W8, [X26+1927]
	301 Move X21, X0
	302 Compare W8, 0
	303 JumpIfNotEqual {308}
	304 Move X0, 0x2344000
	305 Move X0, [X0+1608]
	306 Call 0x1C17CF4
	307 Move [X26+1927], W22
	308 Move X0, [X23]
	309 Move W8, [X0+224]
	310 Compare W8, 0
	311 JumpIfNotEqual {314}
	312 Call 0x1C17DFC
	313 Move X0, [X23]
	314 Move X8, [X0+184]
	315 Move X8, [X8]
	316 Compare X8, 0
	317 JumpIfEqual {428}
	318 Move X8, [X8+224]
	319 Compare X8, 0
	320 JumpIfEqual {428}
	321 Compare X21, 0
	322 JumpIfEqual {428}
	323 Move X22, [X8+88]
	324 Compare X22, 0
	325 JumpIfEqual {332}
	326 Move X8, [X21]
	327 Move X0, X22
	328 Move X1, [X8+64]
	329 Call 0x1C17E00
	330 Compare X0, 0
	331 JumpIfEqual {430}
	332 Move W8, [X21+24]
	333 Compare W8, 0
	334 JumpIfEqual {429}
	335 Move X27, 0x2348000
	336 Move X27, [X27+2320]
	337 Move X0, X20
	338 Move X1, X21
	339 Move X2, X31
	340 Move [X21+32], X22
	341 Call App.RegisterObserver, X0, X1
	342 Move X0, [X25]
	343 Call 0x1C17F10
	344 Move X2, [X27]
	345 Move X1, X19
	346 Move X3, X31
	347 Move X20, X0
	348 Call ObserverDelegate..ctor, X0, X1, X2
	349 Move X0, [X24]
	350 Move W1, 1
	351 Move W22, 1
	352 Call 0x1C17D6C
	353 Move W8, [X26+1927]
	354 Move X21, X0
	355 Compare W8, 0
	356 JumpIfNotEqual {361}
	357 Move X0, 0x2344000
	358 Move X0, [X0+1608]
	359 Call 0x1C17CF4
	360 Move [X26+1927], W22
	361 Move X0, [X23]
	362 Move W8, [X0+224]
	363 Compare W8, 0
	364 JumpIfNotEqual {367}
	365 Call 0x1C17DFC
	366 Move X0, [X23]
	367 Move X8, [X0+184]
	368 Move X8, [X8]
	369 Compare X8, 0
	370 JumpIfEqual {428}
	371 Move X8, [X8+224]
	372 Compare X8, 0
	373 JumpIfEqual {428}
	374 Compare X21, 0
	375 JumpIfEqual {428}
	376 Move X22, [X8+104]
	377 Compare X22, 0
	378 JumpIfEqual {385}
	379 Move X8, [X21]
	380 Move X0, X22
	381 Move X1, [X8+64]
	382 Call 0x1C17E00
	383 Compare X0, 0
	384 JumpIfEqual {430}
	385 Move W8, [X21+24]
	386 Compare W8, 0
	387 JumpIfEqual {429}
	388 Move X24, 0x2344000
	389 Move X23, 0x2348000
	390 Move X24, [X24+2416]
	391 Move X23, [X23+1536]
	392 Move X0, X20
	393 Move X1, X21
	394 Move X2, X31
	395 Move [X21+32], X22
	396 Call App.RegisterObserver, X0, X1
	397 Move X0, [X24]
	398 Move X19, [X19+64]
	399 Move W8, [X0+224]
	400 Compare W8, 0
	401 JumpIfNotEqual {403}
	402 Call 0x1C17DFC
	403 Move X0, X31
	404 Call Application.get_version
	405 Move X8, [X23]
	406 Move X1, X0
	407 Move X2, X31
	408 Move X0, X8
	409 Call String.Concat, X0, X1
	410 Compare X19, 0
	411 JumpIfEqual {428}
	412 Move X8, [X19]
	413 Move X1, X0
	414 Move X0, X19
	415 Move X20, [X31+64]
	416 Move X19, [X31+72]
	417 Move X3, [X8+1368]
	418 Move X2, [X8+1376]
	419 Move X22, [X31+48]
	420 Move X21, [X31+56]
	421 Move X24, [X31+32]
	422 Move X23, [X31+40]
	423 Move X26, [X31+16]
	424 Move X25, [X31+24]
	425 Move X30, [X31+80]
	426 Move X27, [X31+88]
	427 CallNoReturn X3
	428 Call 0x1C17F20
	429 Call 0x1C17F28
	430 Call 0x1C17F44
	431 Move X1, X31
	432 Call 0x1C17DEC
	433 Move X0, X21
	434 Move X1, X22
	435 Call 0x1C181E0

Method: System.Void OnDestroy()

Disassembly:
	0x01DB02DC MOV X1, X31
	0x01DB02E0 STR W8, [X0 + 0x48]
	0x01DB02E4 B 0x3C36C30
	0x01DB02E8 STR D8, [X31 - 0x30]!
	0x01DB02EC STP X30, X21, [X31 + 0x10]
	0x01DB02F0 STP X20, X19, [X31 + 0x20]
	0x01DB02F4 ADRP X21, 0x2628000
	0x01DB02F8 ADRP X20, 0x2343000
	0x01DB02FC LDRB W8, [X21 + 0xAED]
	0x01DB0300 LDR X20, [X20 + 0x598]
	0x01DB0304 MOV V8.16B, V0.16B
	0x01DB0308 MOV X19, X0
	0x01DB030C TBNZ X8, 0x0, 0x1DB0330
	0x01DB0310 ADRP X0, 0x2345000
	0x01DB0314 LDR X0, [X0 + 0x5A8]
	0x01DB0318 BL 0x1C16CF4
	0x01DB031C ADRP X0, 0x2343000
	0x01DB0320 LDR X0, [X0 + 0x598]
	0x01DB0324 BL 0x1C16CF4
	0x01DB0328 MOVZ W8, 0x1
	0x01DB032C STRB W8, [X21 + 0xAED]
	0x01DB0330 LDR X0, [X20]
	0x01DB0334 LDR X20, [X19 + 0x30]
	0x01DB0338 LDR W8, [X0 + 0xE0]
	0x01DB033C CBNZ W8, 0x1DB0344
	0x01DB0340 BL 0x1C16DFC
	0x01DB0344 MOV X0, X20
	0x01DB0348 MOV X1, X31
	0x01DB034C MOV X2, X31
	0x01DB0350 BL 0x3C3883C
	0x01DB0354 TBZ X0, 0x0, 0x1DB038C
	0x01DB0358 ADRP X8, 0x2345000
	0x01DB035C LDR X8, [X8 + 0x5A8]
	0x01DB0360 LDR W19, [X19 + 0x4C]
	0x01DB0364 LDR X0, [X8]
	0x01DB0368 LDR W8, [X0 + 0xE0]
	0x01DB036C CBNZ W8, 0x1DB0374
	0x01DB0370 BL 0x1C16DFC
	0x01DB0374 MOV W0, W19
	0x01DB0378 LDP X20, X19, [X31 + 0x20]
	0x01DB037C LDP X30, X21, [X31 + 0x10]
	0x01DB0380 MOV X1, X31
	0x01DB0384 LDR V8, [X31], #0x30
	0x01DB0388 B 0x31AD670
	0x01DB038C LDR X0, [X19 + 0x30]
	0x01DB0390 CBZ X0, 0x1DB03D4
	0x01DB0394 LDR V1, [X19 + 0x48]
	0x01DB0398 FMOV S3, 1
	0x01DB039C FMOV S2, W31
	0x01DB03A0 FCMP S8, 0x0
	0x01DB03A4 FMIN S3, S8, S3
	0x01DB03A8 LDP X20, X19, [X31 + 0x20]
	0x01DB03AC LDP X30, X21, [X31 + 0x10]
	0x01DB03B0 FCSEL S3, S3, S2, PL
	0x01DB03B4 FSUB S2, S2, S1
	0x01DB03B8 FMUL S2, S3, S2
	0x01DB03BC FMOV S0, W31
	0x01DB03C0 FADD S1, S1, S2
	0x01DB03C4 FMOV S2, W31
	0x01DB03C8 MOV X1, X31
	0x01DB03CC LDR V8, [X31], #0x30
	0x01DB03D0 B 0x3C3EC04
	0x01DB03D4 BL 0x1C16F20
	0x01DB03D8 STP X30, X21, [X31 - 0x20]!
	0x01DB03DC STP X20, X19, [X31 + 0x10]
	0x01DB03E0 ADRP X21, 0x2628000
	0x01DB03E4 ADRP X20, 0x2343000
	0x01DB03E8 LDRB W8, [X21 + 0xAEE]
	0x01DB03EC LDR X20, [X20 + 0x598]
	0x01DB03F0 MOV X19, X0
	0x01DB03F4 TBNZ X8, 0x0, 0x1DB040C
	0x01DB03F8 ADRP X0, 0x2343000
	0x01DB03FC LDR X0, [X0 + 0x598]
	0x01DB0400 BL 0x1C16CF4
	0x01DB0404 MOVZ W8, 0x1
	0x01DB0408 STRB W8, [X21 + 0xAEE]
	0x01DB040C LDR X0, [X20]
	0x01DB0410 LDR X20, [X19 + 0x30]
	0x01DB0414 LDR W8, [X0 + 0xE0]
	0x01DB0418 CBNZ W8, 0x1DB0420
	0x01DB041C BL 0x1C16DFC
	0x01DB0420 MOV X0, X20
	0x01DB0424 MOV X1, X31
	0x01DB0428 MOV X2, X31
	0x01DB042C BL 0x3C3883C
	0x01DB0430 TBZ X0, 0x0, 0x1DB0440
	0x01DB0434 LDP X20, X19, [X31 + 0x10]
	0x01DB0438 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x2629000
	010 Move X21, 0x2344000
	011 Move X20, 0x2348000
	012 Move X24, 0x2344000
	013 Move W8, [X22+2785]
	014 Move X21, [X21+3488]
	015 Move X20, [X20+2296]
	016 Move X24, [X24+1608]
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {42}
	022 Move X0, 0x2344000
	023 Move X0, [X0+1608]
	024 Call 0x1C17CF4
	025 Move X0, 0x2344000
	026 Move X0, [X0+3488]
	027 Call 0x1C17CF4
	028 Move X0, 0x2348000
	029 Move X0, [X0+2296]
	030 Call 0x1C17CF4
	031 Move X0, 0x2348000
	032 Move X0, [X0+2312]
	033 Call 0x1C17CF4
	034 Move X0, 0x2348000
	035 Move X0, [X0+2320]
	036 Call 0x1C17CF4
	037 Move X0, 0x2348000
	038 Move X0, [X0+2328]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X22+2785], W8
	042 Move X0, [X21]
	043 Move X25, 0x2348000
	044 Move X23, 0x2348000
	045 Move X22, 0x2348000
	046 Move X25, [X25+2328]
	047 Move X23, [X23+2312]
	048 Move X22, [X22+2320]
	049 Call 0x1C17F10
	050 Move X2, [X20]
	051 Move X1, X19
	052 Move X3, X31
	053 Move X20, X0
	054 Call ObserverDelegate..ctor, X0, X1, X2
	055 Move X0, [X24]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X20
	061 Move X1, X31
	062 Call App.DeregisterObserver, X0
	063 Move X0, [X21]
	064 Call 0x1C17F10
	065 Move X2, [X25]
	066 Move X1, X19
	067 Move X3, X31
	068 Move X20, X0
	069 Call ObserverDelegate..ctor, X0, X1, X2
	070 Move X0, X20
	071 Move X1, X31
	072 Call App.DeregisterObserver, X0
	073 Move X0, [X21]
	074 Call 0x1C17F10
	075 Move X2, [X23]
	076 Move X1, X19
	077 Move X3, X31
	078 Move X20, X0
	079 Call ObserverDelegate..ctor, X0, X1, X2
	080 Move X0, X20
	081 Move X1, X31
	082 Call App.DeregisterObserver, X0
	083 Move X0, [X21]
	084 Call 0x1C17F10
	085 Move X2, [X22]
	086 Move X1, X19
	087 Move X3, X31
	088 Move X20, X0
	089 Call ObserverDelegate..ctor, X0, X1, X2
	090 Move X0, X20
	091 Move X20, [X31+48]
	092 Move X19, [X31+56]
	093 Move X22, [X31+32]
	094 Move X21, [X31+40]
	095 Move X24, [X31+16]
	096 Move X23, [X31+24]
	097 Move X1, X31
	098 Move X30, [X31+64]
	099 Move X25, [X31+72]
	100 Call App.DeregisterObserver, X0
	101 Return 

Method: System.Void HandleCurrentRoomCodeChanged(SpatialSys.ObservableState.StateChangedEventArgs args)

Disassembly:
	0x01DB043C RET
	0x01DB0440 ADRP X20, 0x2628000
	0x01DB0444 LDRB W8, [X20 + 0x783]
	0x01DB0448 LDR X19, [X19 + 0x30]
	0x01DB044C CBNZ W8, 0x1DB0464
	0x01DB0450 ADRP X0, 0x2343000
	0x01DB0454 LDR X0, [X0 + 0x5A0]
	0x01DB0458 BL 0x1C16CF4
	0x01DB045C MOVZ W8, 0x1
	0x01DB0460 STRB W8, [X20 + 0x783]
	0x01DB0464 CBZ X19, 0x1DB0494
	0x01DB0468 ADRP X8, 0x2343000
	0x01DB046C LDR X8, [X8 + 0x5A0]
	0x01DB0470 MOV X0, X19
	0x01DB0474 LDP X20, X19, [X31 + 0x10]
	0x01DB0478 MOV X1, X31
	0x01DB047C LDR X8, [X8]
	0x01DB0480 LDR X8, [X8 + 0xB8]
	0x01DB0484 LDP S1, S2, [X8 + 0x4]
	0x01DB0488 LDR V0, [X8]
	0x01DB048C LDP X30, X21, [X31], #0x20
	0x01DB0490 B 0x3C3EC04
	0x01DB0494 BL 0x1C16F20
	0x01DB0498 MOV X1, X31
	0x01DB049C B 0x3C36C30
	0x01DB04A0 MOV X1, X31
	0x01DB04A4 B 0x3C36C30
	0x01DB04A8 SUB X31, X31, 0x1B0
	0x01DB04AC STP D15, D14, [X31 + 0x110]
	0x01DB04B0 STP D13, D12, [X31 + 0x120]
	0x01DB04B4 STP D11, D10, [X31 + 0x130]
	0x01DB04B8 STP D9, D8, [X31 + 0x140]
	0x01DB04BC STP X29, X30, [X31 + 0x150]
	0x01DB04C0 STP X28, X27, [X31 + 0x160]
	0x01DB04C4 STP X26, X25, [X31 + 0x170]
	0x01DB04C8 STP X24, X23, [X31 + 0x180]
	0x01DB04CC STP X22, X21, [X31 + 0x190]
	0x01DB04D0 STP X20, X19, [X31 + 0x1A0]
	0x01DB04D4 ADRP X22, 0x2628000
	0x01DB04D8 ADRP X23, 0x2347000
	0x01DB04DC LDRB W8, [X22 + 0xAEF]
	0x01DB04E0 LDR X23, [X23 + 0x970]
	0x01DB04E4 MOV V9.16B, V1.16B
	0x01DB04E8 MOV V8.16B, V0.16B
	0x01DB04EC MOV X21, X2
	0x01DB04F0 MOV X20, X1
	0x01DB04F4 MOV X19, X0
	0x01DB04F8 TBNZ X8, 0x0, 0x1DB0534
	0x01DB04FC ADRP X0, 0x2347000
	0x01DB0500 LDR X0, [X0 + 0x978]
	0x01DB0504 BL 0x1C16CF4
	0x01DB0508 ADRP X0, 0x2347000
	0x01DB050C LDR X0, [X0 + 0x980]
	0x01DB0510 BL 0x1C16CF4
	0x01DB0514 ADRP X0, 0x2347000
	0x01DB0518 LDR X0, [X0 + 0x988]
	0x01DB051C BL 0x1C16CF4
	0x01DB0520 ADRP X0, 0x2347000
	0x01DB0524 LDR X0, [X0 + 0x970]
	0x01DB0528 BL 0x1C16CF4
	0x01DB052C MOVZ W8, 0x1
	0x01DB0530 STRB W8, [X22 + 0xAEF]
	0x01DB0534 LDR X0, [X23]
	0x01DB0538 LDR X22, [X19 + 0x28]
	0x01DB053C LDR W8, [X0 + 0xE0]
	0x01DB0540 CBNZ W8, 0x1DB0548
	0x01DB0544 BL 0x1C16DFC
	0x01DB0548 CBZ X22, 0x1DB0890
	0x01DB054C LDR X8, [X23]
	0x01DB0550 LDR V0, [X19 + 0x30]
	0x01DB0554 MOV X0, X22
	0x01DB0558 MOV X2, X31
	0x01DB055C LDR X8, [X8 + 0xB8]
	0x01DB0560 LDR W1, [X8]
	0x01DB0564 BL 0x3C15CD8
	0x01DB0568 LDR X0, [X19 + 0x28]
	0x01DB056C CBZ X0, 0x1DB0890
	0x01DB0570 LDR X8, [X23]
	0x01DB0574 MOV V0.16B, V9.16B
	0x01DB0578 MOV X2, X31
	0x01DB057C LDR X8, [X8 + 0xB8]
	0x01DB0580 LDR W1, [X8 + 0x4]
	0x01DB0584 BL 0x3C15CD8
	0x01DB0588 LDR X8, [X23]
	0x01DB058C LDR X23, [X19 + 0x28]
	0x01DB0590 MOV X0, X31
	0x01DB0594 LDR X8, [X8 + 0xB8]
	0x01DB0598 LDR W22, [X8 + 0x8]
	0x01DB059C BL 0x3C3C6C4
	0x01DB05A0 CBZ X23, 0x1DB0890
	0x01DB05A4 ADRP X24, 0x2347000
	0x01DB05A8 LDR X24, [X24 + 0x988]
	0x01DB05AC MOV X0, X23
	0x01DB05B0 MOV W1, W22
	0x01DB05B4 MOV X2, X31
	0x01DB05B8 BL 0x3C15CD8
	0x01DB05BC CBZ X21, 0x1DB06E4
	0x01DB05C0 LDR W1, [X21 + 0x18]
	0x01DB05C4 CBZ W1, 0x1DB06E4
	0x01DB05C8 LDR X0, [X24]
	0x01DB05CC BL 0x1C16D6C
	0x01DB05D0 STR X0, [X19 + 0x40]
	0x01DB05D4 CBZ X0, 0x1DB0890
	0x01DB05D8 ADRP X26, 0x2347000
	0x01DB05DC ADRP X24, 0x2343000
	0x01DB05E0 LDR X26, [X26 + 0x980]
	0x01DB05E4 LDR X24, [X24 + 0x5A0]
	0x01DB05E8 MOV X22, X0
	0x01DB05EC MOV X23, X31
	0x01DB05F0 MOVZ W25, 0x20
	0x01DB05F4 ADRP X27, 0x2628000
	0x01DB05F8 MOVZ W28, 0x1
	0x01DB05FC LDRSW X8, [X22 + 0x18]
	0x01DB0600 CMP X23, X8
	0x01DB0604 B.GE 0x1DB0894
	0x01DB0608 CBZ X20, 0x1DB0890
	0x01DB060C MOV X0, X20
	0x01DB0610 MOV X1, X31
	0x01DB0614 BL 0x3C3F58C
	0x01DB0618 LDR X2, [X26]
	0x01DB061C MOV X0, X21
	0x01DB0620 MOV W1, W23
	0x01DB0624 MOV V8.16B, V0.16B
	0x01DB0628 MOV V9.16B, V1.16B
	0x01DB062C MOV V10.16B, V2.16B
	0x01DB0630 BL 0x30CBE84
	0x01DB0634 MOV X0, X31
	0x01DB0638 BL 0x3C2A8C4
	0x01DB063C LDRB W8, [X27 + 0x85B]
	0x01DB0640 MOV V11.16B, V0.16B
	0x01DB0644 MOV V12.16B, V1.16B
	0x01DB0648 MOV V13.16B, V2.16B
	0x01DB064C MOV V14.16B, V3.16B
	0x01DB0650 CBNZ W8, 0x1DB0660
	0x01DB0654 MOV X0, X24
	0x01DB0658 BL 0x1C16CF4
	0x01DB065C STRB W28, [X27 + 0x85B]
	0x01DB0660 LDR X8, [X24]
	0x01DB0664 MOV V1.16B, V9.16B
	0x01DB0668 MOV V2.16B, V10.16B
	0x01DB066C MOV V3.16B, V11.16B
	0x01DB0670 LDR X8, [X8 + 0xB8]
	0x01DB0674 MOV V4.16B, V12.16B
	0x01DB0678 MOV V5.16B, V13.16B
	0x01DB067C MOV V6.16B, V14.16B
	0x01DB0680 LDR V0, [X8 + 0x14]
	0x01DB0684 LDUR X9, [X8 + 0xC]
	0x01DB0688 ADD X8, X31, 0xD0
	0x01DB068C MOV X0, X31
	0x01DB0690 STR S0, [X31 + 0x8]
	0x01DB0694 MOV V0.16B, V8.16B
	0x01DB0698 STR X9, [X31]
	0x01DB069C BL 0x3C26FA8
	0x01DB06A0 LDP V0, V1, [X31 + 0xD0]
	0x01DB06A4 LDP V2, V3, [X31 + 0xF0]
	0x01DB06A8 STP V0, V1, [X31 + 0x10]
	0x01DB06AC STP V2, V3, [X31 + 0x30]
	0x01DB06B0 LDR W8, [X22 + 0x18]
	0x01DB06B4 CMP X23, X8
	0x01DB06B8 B.CS 0x1DB08F4
	0x01DB06BC LDP V0, V1, [X31 + 0x30]
	0x01DB06C0 LDP V2, V3, [X31 + 0x10]
	0x01DB06C4 ADD X8, X22, X25
	0x01DB06C8 ADD X25, X25, 0x40
	0x01DB06CC STP V0, V1, [X8 + 0x20]
	0x01DB06D0 STP V2, V3, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x2629000
	006 Move X20, 0x2344000
	007 Move W8, [X19+2786]
	008 Move X20, [X20+1608]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {36}
	013 Move X0, 0x2344000
	014 Move X0, [X0+1608]
	015 Call 0x1C17CF4
	016 Move X0, 0x2344000
	017 Move X0, [X0+3528]
	018 Call 0x1C17CF4
	019 Move X0, 0x2345000
	020 Move X0, [X0+504]
	021 Call 0x1C17CF4
	022 Move X0, 0x2345000
	023 Move X0, [X0+376]
	024 Call 0x1C17CF4
	025 Move X0, 0x2348000
	026 Move X0, [X0+2288]
	027 Call 0x1C17CF4
	028 Move X0, 0x2345000
	029 Move X0, [X0+3976]
	030 Call 0x1C17CF4
	031 Move X0, 0x2348000
	032 Move X0, [X0+2336]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X19+2786], W8
	036 Move X0, [X20]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X21, 0x2629000
	042 Move W8, [X21+1927]
	043 Compare W8, 0
	044 JumpIfNotEqual {50}
	045 Move X0, 0x2344000
	046 Move X0, [X0+1608]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X21+1927], W8
	050 Move X0, [X20]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {56}
	054 Call 0x1C17DFC
	055 Move X0, [X20]
	056 Move X8, [X0+184]
	057 Move X8, [X8]
	058 Compare X8, 0
	059 JumpIfEqual {201}
	060 Move X8, [X8+224]
	061 Compare X8, 0
	062 JumpIfEqual {201}
	063 Move X9, 0x2345000
	064 Move X9, [X9+376]
	065 Move X0, [X8+72]
	066 Move X1, [X9]
	067 Call 0x2652A74, X0
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {104}
	072 Move X0, [X20]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move W8, [X21+1927]
	078 Compare W8, 0
	079 JumpIfNotEqual {85}
	080 Move X0, 0x2344000
	081 Move X0, [X0+1608]
	082 Call 0x1C17CF4
	083 Move W8, 1
	084 Move [X21+1927], W8
	085 Move X0, [X20]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {91}
	089 Call 0x1C17DFC
	090 Move X0, [X20]
	091 Move X8, [X0+184]
	092 Move X8, [X8]
	093 Compare X8, 0
	094 JumpIfEqual {201}
	095 Move X8, [X8+224]
	096 Compare X8, 0
	097 JumpIfEqual {201}
	098 Move X0, [X8+80]
	099 Move X8, 0x2345000
	100 Move X8, [X8+504]
	101 Move X1, [X8]
	102 Call StatePrimitive`1<Object>.op_Implicit, X0
	103 Move X19, X0
	104 Move X8, 0x2345000
	105 Move X8, [X8+3976]
	106 Move X19, [X8]
	107 Move X0, [X20]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move W8, [X21+1927]
	113 Compare W8, 0
	114 JumpIfNotEqual {120}
	115 Move X0, 0x2344000
	116 Move X0, [X0+1608]
	117 Call 0x1C17CF4
	118 Move W8, 1
	119 Move [X21+1927], W8
	120 Move X0, [X20]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {126}
	124 Call 0x1C17DFC
	125 Move X0, [X20]
	126 Move X8, [X0+184]
	127 Move X8, [X8]
	128 Compare X8, 0
	129 JumpIfEqual {201}
	130 Move X8, [X8+240]
	131 Compare X8, 0
	132 JumpIfEqual {201}
	133 Move X8, [X8+72]
	134 Compare X8, 0
	135 JumpIfEqual {201}
	136 Move X0, [X8+80]
	137 Move X1, X31
	138 Call String.IsNullOrEmpty, X0
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfEqual {175}
	143 Move X0, [X20]
	144 Move W8, [X0+224]
	145 Compare W8, 0
	146 JumpIfNotEqual {148}
	147 Call 0x1C17DFC
	148 Move W8, [X21+1927]
	149 Compare W8, 0
	150 JumpIfNotEqual {156}
	151 Move X0, 0x2344000
	152 Move X0, [X0+1608]
	153 Call 0x1C17CF4
	154 Move W8, 1
	155 Move [X21+1927], W8
	156 Move X0, [X20]
	157 Move W8, [X0+224]
	158 Compare W8, 0
	159 JumpIfNotEqual {162}
	160 Call 0x1C17DFC
	161 Move X0, [X20]
	162 Move X8, [X0+184]
	163 Move X8, [X8]
	164 Compare X8, 0
	165 JumpIfEqual {201}
	166 Move X8, [X8+240]
	167 Compare X8, 0
	168 JumpIfEqual {201}
	169 Move X0, [X8+72]
	170 Move X8, 0x2345000
	171 Move X8, [X8+504]
	172 Move X1, [X8]
	173 Call StatePrimitive`1<Object>.op_Implicit, X0
	174 Move X19, X0
	175 Move X8, 0x2348000
	176 Move X8, [X8+2288]
	177 Move X8, [X8]
	178 Move X8, [X8+184]
	179 Move X8, [X8]
	180 Compare X8, 0
	181 JumpIfEqual {201}
	182 Move X9, 0x2348000
	183 Move X9, [X9+2336]
	184 Move X20, [X8+56]
	185 Move X1, X19
	186 Move X2, X31
	187 Move X0, [X9]
	188 Call String.Concat, X0, X1
	189 Compare X20, 0
	190 JumpIfEqual {201}
	191 Move X8, [X20]
	192 Move X1, X0
	193 Move X0, X20
	194 Move X20, [X31+16]
	195 Move X19, [X31+24]
	196 Move X3, [X8+1368]
	197 Move X2, [X8+1376]
	198 Move X30, [X31+32]
	199 Move X21, [X31+40]
	200 CallNoReturn X3
	201 Call 0x1C17F20

Method: System.Void HandleSessionStatusChanged(SpatialSys.ObservableState.StateChangedEventArgs args)

Disassembly:
	0x01DB06D4 LDR X22, [X19 + 0x40]
	0x01DB06D8 ADD X23, X23, 0x1
	0x01DB06DC CBNZ X22, 0x1DB05FC
	0x01DB06E0 B 0x1DB0890
	0x01DB06E4 LDR X0, [X24]
	0x01DB06E8 MOVZ W1, 0x14
	0x01DB06EC BL 0x1C16D6C
	0x01DB06F0 STR X0, [X19 + 0x40]
	0x01DB06F4 CBZ X0, 0x1DB0890
	0x01DB06F8 ADRP X21, 0x2343000
	0x01DB06FC LDR X21, [X21 + 0x5A0]
	0x01DB0700 MOV X22, X31
	0x01DB0704 MOVZ W23, 0x20
	0x01DB0708 ADRP X24, 0x2628000
	0x01DB070C MOVZ W25, 0x1
	0x01DB0710 LDRSW X8, [X0 + 0x18]
	0x01DB0714 CMP X22, X8
	0x01DB0718 B.GE 0x1DB0894
	0x01DB071C MOV X0, X31
	0x01DB0720 BL 0x3C30A30
	0x01DB0724 MOV X0, X31
	0x01DB0728 MOV V9.16B, V0.16B
	0x01DB072C BL 0x3C30A30
	0x01DB0730 CBZ X20, 0x1DB0890
	0x01DB0734 FMOV S2, -0.5
	0x01DB0738 FADD S1, S9, S2
	0x01DB073C FADD S0, S0, S2
	0x01DB0740 MOV X0, X20
	0x01DB0744 MOV X1, X31
	0x01DB0748 FMUL S12, S1, S8
	0x01DB074C FMUL S13, S0, S8
	0x01DB0750 BL 0x3C3FA04
	0x01DB0754 MOV X0, X20
	0x01DB0758 MOV X1, X31
	0x01DB075C MOV V9.16B, V0.16B
	0x01DB0760 MOV V10.16B, V1.16B
	0x01DB0764 MOV V11.16B, V2.16B
	0x01DB0768 BL 0x3C3F90C
	0x01DB076C FMUL S0, S12, S0
	0x01DB0770 FMUL S1, S12, S1
	0x01DB0774 FMUL S2, S12, S2
	0x01DB0778 MOV X0, X20
	0x01DB077C MOV X1, X31
	0x01DB0780 FADD S9, S9, S0
	0x01DB0784 FADD S10, S10, S1
	0x01DB0788 FADD S11, S11, S2
	0x01DB078C BL 0x3C3F988
	0x01DB0790 LDR X26, [X19 + 0x40]
	0x01DB0794 FMUL S0, S13, S0
	0x01DB0798 FMUL S1, S13, S1
	0x01DB079C FMUL S2, S13, S2
	0x01DB07A0 MOV X0, X20
	0x01DB07A4 MOV X1, X31
	0x01DB07A8 FADD S12, S9, S0
	0x01DB07AC FADD S13, S10, S1
	0x01DB07B0 FADD S14, S11, S2
	0x01DB07B4 BL 0x3C3F58C
	0x01DB07B8 MOV V9.16B, V0.16B
	0x01DB07BC MOV V10.16B, V1.16B
	0x01DB07C0 MOV V11.16B, V2.16B
	0x01DB07C4 MOV V0.16B, V12.16B
	0x01DB07C8 MOV V1.16B, V13.16B
	0x01DB07CC MOV V2.16B, V14.16B
	0x01DB07D0 MOV X0, X31
	0x01DB07D4 BL 0x3C2A8C4
	0x01DB07D8 LDRB W8, [X24 + 0x85B]
	0x01DB07DC MOV V12.16B, V0.16B
	0x01DB07E0 MOV V13.16B, V1.16B
	0x01DB07E4 MOV V14.16B, V2.16B
	0x01DB07E8 MOV V15.16B, V3.16B
	0x01DB07EC CBNZ W8, 0x1DB07FC
	0x01DB07F0 MOV X0, X21
	0x01DB07F4 BL 0x1C16CF4
	0x01DB07F8 STRB W25, [X24 + 0x85B]
	0x01DB07FC LDR X8, [X21]
	0x01DB0800 MOV V1.16B, V10.16B
	0x01DB0804 MOV V2.16B, V11.16B
	0x01DB0808 MOV V3.16B, V12.16B
	0x01DB080C LDR X8, [X8 + 0xB8]
	0x01DB0810 MOV V4.16B, V13.16B
	0x01DB0814 MOV V5.16B, V14.16B
	0x01DB0818 MOV V6.16B, V15.16B
	0x01DB081C LDR V0, [X8 + 0x14]
	0x01DB0820 LDUR X9, [X8 + 0xC]
	0x01DB0824 ADD X8, X31, 0x90
	0x01DB0828 MOV X0, X31
	0x01DB082C STR S0, [X31 + 0x8]
	0x01DB0830 MOV V0.16B, V9.16B
	0x01DB0834 STR X9, [X31]
	0x01DB0838 BL 0x3C26FA8
	0x01DB083C LDP V0, V1, [X31 + 0x90]
	0x01DB0840 LDP V2, V3, [X31 + 0xB0]
	0x01DB0844 STP V0, V1, [X31 + 0xD0]
	0x01DB0848 STP V2, V3, [X31 + 0xF0]
	0x01DB084C CBZ X26, 0x1DB0890
	0x01DB0850 LDP V0, V1, [X31 + 0xD0]
	0x01DB0854 LDP V2, V3, [X31 + 0xF0]
	0x01DB0858 STP V0, V1, [X31 + 0x50]
	0x01DB085C STP V2, V3, [X31 + 0x70]
	0x01DB0860 LDR W8, [X26 + 0x18]
	0x01DB0864 CMP X22, X8
	0x01DB0868 B.CS 0x1DB08F4
	0x01DB086C LDP V0, V1, [X31 + 0x70]
	0x01DB0870 LDP V2, V3, [X31 + 0x50]
	0x01DB0874 ADD X8, X26, X23
	0x01DB0878 ADD X23, X23, 0x40
	0x01DB087C STP V0, V1, [X8 + 0x20]
	0x01DB0880 STP V2, V3, [X8]
	0x01DB0884 LDR X0, [X19 + 0x40]
	0x01DB0888 ADD X22, X22, 0x1
	0x01DB088C CBNZ X0, 0x1DB0710
	0x01DB0890 BL 0x1C16F20
	0x01DB0894 LDR X1, [X19 + 0x38]
	0x01DB0898 CBZ X1, 0x1DB08A8
	0x01DB089C MOV X0, X19
	0x01DB08A0 MOV X2, X31
	0x01DB08A4 BL 0x3C36834
	0x01DB08A8 MOV X0, X19
	0x01DB08AC BL 0x1DB08F8
	0x01DB08B0 MOV X1, X0
	0x01DB08B4 STR X0, [X19 + 0x38]
	0x01DB08B8 MOV X0, X19
	0x01DB08BC MOV X2, X31
	0x01DB08C0 BL 0x3C366FC
	0x01DB08C4 LDP X20, X19, [X31 + 0x1A0]
	0x01DB08C8 LDP X22, X21, [X31 + 0x190]
	0x01DB08CC LDP X24, X23, [X31 + 0x180]
	0x01DB08D0 LDP X26, X25, [X31 + 0x170]
	0x01DB08D4 LDP X28, X27, [X31 + 0x160]
	0x01DB08D8 LDP X29, X30, [X31 + 0x150]
	0x01DB08DC LDP D9, D8, [X31 + 0x140]
	0x01DB08E0 LDP D11, D10, [X31 + 0x130]
	0x01DB08E4 LDP D13, D12, [X31 + 0x120]
	0x01DB08E8 LDP D15, D14, [X31 + 0x110]
	0x01DB08EC ADD X31, X31, 0x1B0
	0x01DB08F0 RET
	0x01DB08F4 BL 0x1C16F28
	0x01DB08F8 STP X30, X21, [X31 - 0x20]!
	0x01DB08FC STP X20, X19, [X31 + 0x10]
	0x01DB0900 ADRP X20, 0x2628000
	0x01DB0904 ADRP X21, 0x2347000
	0x01DB0908 LDRB W8, [X20 + 0xAF0]
	0x01DB090C LDR X21, [X21 + 0x990]
	0x01DB0910 MOV X19, X0
	0x01DB0914 TBNZ X8, 0x0, 0x1DB092C
	0x01DB0918 ADRP X0, 0x2347000
	0x01DB091C LDR X0, [X0 + 0x990]
	0x01DB0920 BL 0x1C16CF4
	0x01DB0924 MOVZ W8, 0x1
	0x01DB0928 STRB W8, [X20 + 0xAF0]

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x2629000
	011 Move X20, 0x2344000
	012 Move X21, 0x2344000
	013 Move W8, [X22+2787]
	014 Move X20, [X20+2440]
	015 Move X21, [X21+1608]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {47}
	021 Move X0, 0x2344000
	022 Move X0, [X0+1608]
	023 Call 0x1C17CF4
	024 Move X0, 0x2345000
	025 Move X0, [X0+3888]
	026 Call 0x1C17CF4
	027 Move X0, 0x2345000
	028 Move X0, [X0+504]
	029 Call 0x1C17CF4
	030 Move X0, 0x2348000
	031 Move X0, [X0+2344]
	032 Call 0x1C17CF4
	033 Move X0, 0x2348000
	034 Move X0, [X0+2352]
	035 Call 0x1C17CF4
	036 Move X0, 0x2348000
	037 Move X0, [X0+2360]
	038 Call 0x1C17CF4
	039 Move X0, 0x2348000
	040 Move X0, [X0+2368]
	041 Call 0x1C17CF4
	042 Move X0, 0x2344000
	043 Move X0, [X0+2440]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X22+2787], W8
	047 Move X0, [X21]
	048 Move X20, [X20]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X22, 0x2629000
	054 Move W8, [X22+1927]
	055 Compare W8, 0
	056 JumpIfNotEqual {62}
	057 Move X0, 0x2344000
	058 Move X0, [X0+1608]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X22+1927], W8
	062 Move X0, [X21]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {68}
	066 Call 0x1C17DFC
	067 Move X0, [X21]
	068 Move X8, [X0+184]
	069 Move X8, [X8]
	070 Compare X8, 0
	071 JumpIfEqual {172}
	072 Move X8, [X8+232]
	073 Compare X8, 0
	074 JumpIfEqual {172}
	075 Move X8, [X8+72]
	076 Compare X8, 0
	077 JumpIfEqual {172}
	078 Move W8, [X8+76]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X8, 0x2348000
	083 Move X8, [X8+2360]
	084 Move S9, 1
	085 Move S8, W31
	086 Move X8, 0x2348000
	087 Move X8, [X8+2368]
	088 Move X20, [X8]
	089 Move S8, 1
	090 Move S9, 1
	091 Move S10, 1
	092 Move X8, 0x2348000
	093 Move X8, [X8+2352]
	094 Move S8, 1
	095 Move S9, W31
	096 Move X20, [X8]
	097 Move S10, W31
	098 Move W8, [X0+224]
	099 Move S11, 1
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Move W8, [X22+1927]
	104 Compare W8, 0
	105 JumpIfNotEqual {111}
	106 Move X0, 0x2344000
	107 Move X0, [X0+1608]
	108 Call 0x1C17CF4
	109 Move W8, 1
	110 Move [X22+1927], W8
	111 Move X0, [X21]
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {117}
	115 Call 0x1C17DFC
	116 Move X0, [X21]
	117 Move X8, [X0+184]
	118 Move X8, [X8]
	119 Compare X8, 0
	120 JumpIfEqual {172}
	121 Move X8, [X8+232]
	122 Compare X8, 0
	123 JumpIfEqual {172}
	124 Move X9, 0x2345000
	125 Move X9, [X9+504]
	126 Move X0, [X8+80]
	127 Move X1, [X9]
	128 Call StatePrimitive`1<Object>.op_Implicit, X0
	129 Move X1, X31
	130 Move X21, X0
	131 Call String.IsNullOrEmpty, X0
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfEqual {144}
	136 Move X8, 0x2348000
	137 Move X8, [X8+2344]
	138 Move X0, X20
	139 Move X2, X21
	140 Move X3, X31
	141 Move X1, [X8]
	142 Call String.Concat, X0, X1, X2
	143 Move X20, X0
	144 Move X0, [X19+72]
	145 Compare X0, 0
	146 JumpIfEqual {172}
	147 Move X8, [X0]
	148 Move X1, X20
	149 Move X9, [X8+1368]
	150 Move X2, [X8+1376]
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Move X0, [X19+72]
	153 Compare X0, 0
	154 JumpIfEqual {172}
	155 Move X8, [X0]
	156 Move V0, V8
	157 Move V1, V9
	158 Move X20, [X31+64]
	159 Move X19, [X31+72]
	160 Move X2, [X8+680]
	161 Move X1, [X8+688]
	162 Move X22, [X31+48]
	163 Move X21, [X31+56]
	164 Move X30, [X31+32]
	165 Move D9, [X31+16]
	166 Move D8, [X31+24]
	167 Move V2, V10
	168 Move V3, V11
	169 Move D11, [X31+80]
	170 Move D10, [X31+88]
	171 CallNoReturn X2
	172 Call 0x1C17F20

Method: System.Void HandleSessionPropertiesChanged(SpatialSys.ObservableState.StateChangedEventArgs args)

Disassembly:
	0x01DB092C LDR X0, [X21]
	0x01DB0930 BL 0x1C16F10
	0x01DB0934 MOV X1, X31
	0x01DB0938 MOV X20, X0
	0x01DB093C BL 0x33BDD8C
	0x01DB0940 STR W31, [X20 + 0x10]
	0x01DB0944 STR X19, [X20 + 0x20]
	0x01DB0948 MOV X0, X20
	0x01DB094C LDP X20, X19, [X31 + 0x10]
	0x01DB0950 LDP X30, X21, [X31], #0x20
	0x01DB0954 RET
	0x01DB0958 STR X30, [X31 - 0x20]!
	0x01DB095C STP X20, X19, [X31 + 0x10]
	0x01DB0960 MOV W19, W1
	0x01DB0964 MOV X1, X31
	0x01DB0968 MOV X20, X0
	0x01DB096C BL 0x33BDD8C
	0x01DB0970 STR W19, [X20 + 0x10]
	0x01DB0974 LDP X20, X19, [X31 + 0x10]
	0x01DB0978 LDR X30, [X31], #0x20
	0x01DB097C RET
	0x01DB0980 MOVZ W8, 0xCCCD
	0x01DB0984 MOVK W8, 0x3ECC0000
	0x01DB0988 MOV X1, X31
	0x01DB098C STR W8, [X0 + 0x30]
	0x01DB0990 B 0x3C36C30
	0x01DB0994 STP X30, X23, [X31 - 0x30]!
	0x01DB0998 STP X22, X21, [X31 + 0x10]
	0x01DB099C STP X20, X19, [X31 + 0x20]
	0x01DB09A0 ADRP X22, 0x2628000
	0x01DB09A4 ADRP X23, 0x2347000
	0x01DB09A8 ADRP X19, 0x2347000
	0x01DB09AC ADRP X21, 0x2347000
	0x01DB09B0 ADRP X20, 0x2347000
	0x01DB09B4 LDRB W8, [X22 + 0xAF1]
	0x01DB09B8 LDR X23, [X23 + 0x998]
	0x01DB09BC LDR X19, [X19 + 0x970]
	0x01DB09C0 LDR X21, [X21 + 0x9A0]
	0x01DB09C4 LDR X20, [X20 + 0x9A8]
	0x01DB09C8 TBNZ X8, 0x0, 0x1DB0A04
	0x01DB09CC ADRP X0, 0x2347000
	0x01DB09D0 LDR X0, [X0 + 0x970]
	0x01DB09D4 BL 0x1C16CF4
	0x01DB09D8 ADRP X0, 0x2347000
	0x01DB09DC LDR X0, [X0 + 0x9A0]
	0x01DB09E0 BL 0x1C16CF4
	0x01DB09E4 ADRP X0, 0x2347000
	0x01DB09E8 LDR X0, [X0 + 0x9A8]
	0x01DB09EC BL 0x1C16CF4
	0x01DB09F0 ADRP X0, 0x2347000
	0x01DB09F4 LDR X0, [X0 + 0x998]
	0x01DB09F8 BL 0x1C16CF4
	0x01DB09FC MOVZ W8, 0x1
	0x01DB0A00 STRB W8, [X22 + 0xAF1]
	0x01DB0A04 LDR X0, [X23]
	0x01DB0A08 MOV X1, X31
	0x01DB0A0C BL 0x3C124EC
	0x01DB0A10 LDR X8, [X19]
	0x01DB0A14 MOV X1, X31
	0x01DB0A18 LDR X8, [X8 + 0xB8]
	0x01DB0A1C STR W0, [X8]
	0x01DB0A20 LDR X0, [X21]
	0x01DB0A24 BL 0x3C124EC
	0x01DB0A28 LDR X8, [X19]
	0x01DB0A2C MOV X1, X31
	0x01DB0A30 LDR X8, [X8 + 0xB8]
	0x01DB0A34 STR W0, [X8 + 0x4]
	0x01DB0A38 LDR X0, [X20]
	0x01DB0A3C BL 0x3C124EC
	0x01DB0A40 LDR X8, [X19]
	0x01DB0A44 LDP X20, X19, [X31 + 0x20]
	0x01DB0A48 LDP X22, X21, [X31 + 0x10]
	0x01DB0A4C LDR X8, [X8 + 0xB8]
	0x01DB0A50 STR W0, [X8 + 0x8]
	0x01DB0A54 LDP X30, X23, [X31], #0x30
	0x01DB0A58 RET
	0x01DB0A5C RET
	0x01DB0A60 STR D8, [X31 - 0x30]!
	0x01DB0A64 STR X30, [X31 + 0x8]
	0x01DB0A68 STP X22, X21, [X31 + 0x10]
	0x01DB0A6C STP X20, X19, [X31 + 0x20]
	0x01DB0A70 ADRP X20, 0x2628000
	0x01DB0A74 LDRB W8, [X20 + 0xAF2]
	0x01DB0A78 MOV X19, X0

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x2629000
	008 Move X20, 0x2344000
	009 Move W8, [X21+2788]
	010 Move X20, [X20+1608]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x2344000
	017 Move X0, [X0+1608]
	018 Call 0x1C17CF4
	019 Move X0, 0x2345000
	020 Move X0, [X0+376]
	021 Call 0x1C17CF4
	022 Move X0, 0x2348000
	023 Move X0, [X0+2376]
	024 Call 0x1C17CF4
	025 Move X0, 0x2348000
	026 Move X0, [X0+2384]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+2788], W8
	030 Move X0, [X20]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X21, 0x2629000
	036 Move W8, [X21+1927]
	037 Compare W8, 0
	038 JumpIfNotEqual {44}
	039 Move X0, 0x2344000
	040 Move X0, [X0+1608]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X21+1927], W8
	044 Move X0, [X20]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X20]
	050 Move X8, [X0+184]
	051 Move X8, [X8]
	052 Compare X8, 0
	053 JumpIfEqual {101}
	054 Move X8, [X8+224]
	055 Compare X8, 0
	056 JumpIfEqual {101}
	057 Move X8, [X8+104]
	058 Compare X8, 0
	059 JumpIfEqual {101}
	060 Move X9, 0x2345000
	061 Move X9, [X9+376]
	062 Move X0, [X8+72]
	063 Move X1, [X9]
	064 Call 0x2652A74, X0
	065 Move X8, [X19+88]
	066 Compare X8, 0
	067 JumpIfEqual {101}
	068 Move X9, 0x2348000
	069 Move X10, 0x2348000
	070 Move X9, [X9+2384]
	071 Move X10, [X10+2376]
	072 Move X11, [X8]
	073 And W31, W0, 1
	074 Move S0, W31
	075 NotImplemented "Instruction CSEL not yet implemented."
	076 Move X1, [X9]
	077 Move X9, [X11+1368]
	078 Move X2, [X11+1376]
	079 Move S1, 1
	080 Move X0, X8
	081 NotImplemented "Instruction FCSEL not yet implemented."
	082 NotImplemented "Instruction FCSEL not yet implemented."
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move X0, [X19+88]
	085 Compare X0, 0
	086 JumpIfEqual {101}
	087 Move X8, [X0]
	088 Move X20, [X31+32]
	089 Move X19, [X31+40]
	090 Move X30, [X31+16]
	091 Move X21, [X31+24]
	092 Move S2, W31
	093 Move X2, [X8+680]
	094 Move X1, [X8+688]
	095 Move S3, 1
	096 Move V0, V9
	097 Move V1, V8
	098 Move D9, [X31+48]
	099 Move D8, [X31+56]
	100 CallNoReturn X2
	101 Call 0x1C17F20

Method: System.Void HandleSessionPlayerCountChanged(SpatialSys.ObservableState.StateChangedEventArgs args)

Disassembly:
	0x01DB0A7C TBNZ X8, 0x0, 0x1DB0A94
	0x01DB0A80 ADRP X0, 0x2347000
	0x01DB0A84 LDR X0, [X0 + 0x2C8]
	0x01DB0A88 BL 0x1C16CF4
	0x01DB0A8C MOVZ W8, 0x1
	0x01DB0A90 STRB W8, [X20 + 0xAF2]
	0x01DB0A94 LDR W8, [X19 + 0x10]
	0x01DB0A98 LDR X21, [X19 + 0x20]
	0x01DB0A9C CMP W8, 0x1
	0x01DB0AA0 B.EQ 0x1DB0ABC
	0x01DB0AA4 CBNZ W8, 0x1DB0B3C
	0x01DB0AA8 MOVN W8, 0x0
	0x01DB0AAC STR W31, [X19 + 0x28]
	0x01DB0AB0 STR W8, [X19 + 0x10]
	0x01DB0AB4 FMOV S8, W31
	0x01DB0AB8 B 0x1DB0AC8
	0x01DB0ABC LDR V8, [X19 + 0x28]
	0x01DB0AC0 MOVN W8, 0x0
	0x01DB0AC4 STR W8, [X19 + 0x10]
	0x01DB0AC8 CBZ X21, 0x1DB0B54
	0x01DB0ACC ADRP X8, 0xFFFFFFFFFED3A000
	0x01DB0AD0 LDR V0, [X21 + 0x30]
	0x01DB0AD4 LDR V1, [X8 + 0x200]
	0x01DB0AD8 FADD S0, S0, S1
	0x01DB0ADC FCMP S8, S0
	0x01DB0AE0 B.PL 0x1DB0B3C
	0x01DB0AE4 MOV X0, X31
	0x01DB0AE8 BL 0x3C3C714
	0x01DB0AEC FADD S0, S8, S0
	0x01DB0AF0 STR S0, [X19 + 0x28]
	0x01DB0AF4 ADRP X8, 0x2347000
	0x01DB0AF8 LDR X8, [X8 + 0x2C8]
	0x01DB0AFC LDP X22, X20, [X21 + 0x20]
	0x01DB0B00 LDR X21, [X21 + 0x40]
	0x01DB0B04 LDR X0, [X8]
	0x01DB0B08 LDR W8, [X0 + 0xE0]
	0x01DB0B0C CBNZ W8, 0x1DB0B14
	0x01DB0B10 BL 0x1C16DFC
	0x01DB0B14 MOV X0, X22
	0x01DB0B18 MOV W1, W31
	0x01DB0B1C MOV X2, X20
	0x01DB0B20 MOV X3, X21
	0x01DB0B24 MOV X4, X31
	0x01DB0B28 BL 0x3C0FA30
	0x01DB0B2C MOVZ W0, 0x1
	0x01DB0B30 STR X31, [X19 + 0x18]
	0x01DB0B34 STR W0, [X19 + 0x10]
	0x01DB0B38 B 0x1DB0B40
	0x01DB0B3C MOV W0, W31
	0x01DB0B40 LDP X20, X19, [X31 + 0x20]
	0x01DB0B44 LDP X22, X21, [X31 + 0x10]
	0x01DB0B48 LDR X30, [X31 + 0x8]
	0x01DB0B4C LDR V8, [X31], #0x30
	0x01DB0B50 RET
	0x01DB0B54 BL 0x1C16F20
	0x01DB0B58 LDR X0, [X0 + 0x18]
	0x01DB0B5C RET
	0x01DB0B60 STP X30, X19, [X31 - 0x10]!
	0x01DB0B64 ADRP X0, 0x2343000
	0x01DB0B68 LDR X0, [X0 + 0xB40]
	0x01DB0B6C BL 0x1C16D08
	0x01DB0B70 BL 0x1C16F10
	0x01DB0B74 MOV X1, X31
	0x01DB0B78 MOV X19, X0
	0x01DB0B7C BL 0x3380310
	0x01DB0B80 ADRP X0, 0x2347000
	0x01DB0B84 LDR X0, [X0 + 0x9B0]
	0x01DB0B88 BL 0x1C16D08
	0x01DB0B8C MOV X1, X0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2629000
	007 Move X20, 0x2344000
	008 Move W8, [X21+2789]
	009 Move X20, [X20+1608]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x2344000
	016 Move X0, [X0+1608]
	017 Call 0x1C17CF4
	018 Move X0, 0x2345000
	019 Move X0, [X0+2896]
	020 Call 0x1C17CF4
	021 Move X0, 0x2348000
	022 Move X0, [X0+2392]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2789], W8
	026 Move X0, [X20]
	027 Move X19, [X19+80]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X21, 0x2629000
	033 Move W8, [X21+1927]
	034 Compare W8, 0
	035 JumpIfNotEqual {41}
	036 Move X0, 0x2344000
	037 Move X0, [X0+1608]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+1927], W8
	041 Move X0, [X20]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X20]
	047 Move X8, [X0+184]
	048 Move X8, [X8]
	049 Compare X8, 0
	050 JumpIfEqual {83}
	051 Move X8, [X8+224]
	052 Compare X8, 0
	053 JumpIfEqual {83}
	054 Move X8, [X8+88]
	055 Compare X8, 0
	056 JumpIfEqual {83}
	057 Move W8, [X8+76]
	058 Move X20, 0x2348000
	059 Move X20, [X20+2392]
	060 Add X0, X31, 12
	061 Move X1, X31
	062 Move [X31+12], W8
	063 Call Int32.ToString, X0
	064 Move X8, [X20]
	065 Move X1, X0
	066 Move X2, X31
	067 Move X0, X8
	068 Call String.Concat, X0, X1
	069 Compare X19, 0
	070 JumpIfEqual {83}
	071 Move X8, [X19]
	072 Move X1, X0
	073 Move X0, X19
	074 Move X9, [X8+1368]
	075 Move X2, [X8+1376]
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move X20, [X31+32]
	078 Move X19, [X31+40]
	079 Move X30, [X31+16]
	080 Move X21, [X31+24]
	081 Add X31, X31, 48
	082 Return 
	083 Call 0x1C17F20

Method: System.Void HandleKeyInput(UnityEngine.KeyCode key, AnimalCompany.TerminalKeyType keyType)

Disassembly:
	0x01DB0B90 MOV X0, X19
	0x01DB0B94 BL 0x1C16DEC
	0x01DB0B98 LDR X0, [X0 + 0x18]
	0x01DB0B9C RET
	0x01DB0BA0 SUB X31, X31, 0xD0
	0x01DB0BA4 STP D13, D12, [X31 + 0x80]
	0x01DB0BA8 STP D11, D10, [X31 + 0x90]
	0x01DB0BAC STP D9, D8, [X31 + 0xA0]
	0x01DB0BB0 STP X30, X21, [X31 + 0xB0]
	0x01DB0BB4 STP X20, X19, [X31 + 0xC0]
	0x01DB0BB8 MOVI V0.2D, 0x0
	0x01DB0BBC STP V0, V0, [X31 + 0x60]
	0x01DB0BC0 STP V0, V0, [X31 + 0x40]
	0x01DB0BC4 LDUR V10, [X0 + 0x3C]
	0x01DB0BC8 LDR V9, [X0 + 0x44]
	0x01DB0BCC MOV X19, X0
	0x01DB0BD0 MOVZ W0, 0x77
	0x01DB0BD4 MOV X1, X31
	0x01DB0BD8 BL 0x3C84CAC
	0x01DB0BDC FMOV V8.2S, 0x0
	0x01DB0BE0 TBZ X0, 0x0, 0x1DB0C4C
	0x01DB0BE4 ADRP X20, 0x2628000
	0x01DB0BE8 LDRB W8, [X20 + 0xB6F]
	0x01DB0BEC CBNZ W8, 0x1DB0C04
	0x01DB0BF0 ADRP X0, 0x2343000
	0x01DB0BF4 LDR X0, [X0 + 0x5A0]
	0x01DB0BF8 BL 0x1C16CF4
	0x01DB0BFC MOVZ W8, 0x1
	0x01DB0C00 STRB W8, [X20 + 0xB6F]
	0x01DB0C04 ADRP X20, 0x2343000
	0x01DB0C08 LDR X20, [X20 + 0x5A0]
	0x01DB0C0C ADRP X21, 0x2628000
	0x01DB0C10 LDRB W9, [X21 + 0xA1F]
	0x01DB0C14 LDR X8, [X20]
	0x01DB0C18 LDR X8, [X8 + 0xB8]
	0x01DB0C1C LDR V10, [X8 + 0x30]
	0x01DB0C20 LDR V9, [X8 + 0x38]
	0x01DB0C24 CBNZ W9, 0x1DB0C40
	0x01DB0C28 MOV X0, X20
	0x01DB0C2C BL 0x1C16CF4
	0x01DB0C30 LDR X8, [X20]
	0x01DB0C34 MOVZ W9, 0x1
	0x01DB0C38 STRB W9, [X21 + 0xA1F]
	0x01DB0C3C LDR X8, [X8 + 0xB8]
	0x01DB0C40 ADD X9, X8, 0x48
	0x01DB0C44 ADD X8, X8, 0x50
	0x01DB0C48 B 0x1DB0CC0
	0x01DB0C4C MOVZ W0, 0x71
	0x01DB0C50 MOV X1, X31
	0x01DB0C54 BL 0x3C84CAC
	0x01DB0C58 TBZ X0, 0x0, 0x1DB0CDC
	0x01DB0C5C ADRP X20, 0x2628000
	0x01DB0C60 LDRB W8, [X20 + 0xB6F]
	0x01DB0C64 CBNZ W8, 0x1DB0C7C
	0x01DB0C68 ADRP X0, 0x2343000
	0x01DB0C6C LDR X0, [X0 + 0x5A0]
	0x01DB0C70 BL 0x1C16CF4
	0x01DB0C74 MOVZ W8, 0x1
	0x01DB0C78 STRB W8, [X20 + 0xB6F]
	0x01DB0C7C ADRP X20, 0x2343000
	0x01DB0C80 LDR X20, [X20 + 0x5A0]
	0x01DB0C84 ADRP X21, 0x2628000
	0x01DB0C88 LDRB W9, [X21 + 0xABD]
	0x01DB0C8C LDR X8, [X20]
	0x01DB0C90 LDR X8, [X8 + 0xB8]
	0x01DB0C94 LDR V10, [X8 + 0x30]
	0x01DB0C98 LDR V9, [X8 + 0x38]
	0x01DB0C9C CBNZ W9, 0x1DB0CB8
	0x01DB0CA0 MOV X0, X20
	0x01DB0CA4 BL 0x1C16CF4
	0x01DB0CA8 LDR X8, [X20]
	0x01DB0CAC MOVZ W9, 0x1
	0x01DB0CB0 STRB W9, [X21 + 0xABD]
	0x01DB0CB4 LDR X8, [X8 + 0xB8]
	0x01DB0CB8 ADD X9, X8, 0x24
	0x01DB0CBC ADD X8, X8, 0x2C
	0x01DB0CC0 LDR V0, [X9]
	0x01DB0CC4 LDR V2, [X8]
	0x01DB0CC8 FMOV S3, 0.25
	0x00000000 INVALID

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2629000
	007 Move W8, [X22+2790]
	008 Move W21, W2
	009 Move W20, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x2346000
	016 Move X0, [X0+368]
	017 Call 0x1C17CF4
	018 Move X0, 0x2346000
	019 Move X0, [X0+136]
	020 Call 0x1C17CF4
	021 Move X0, 0x2344000
	022 Move X0, [X0+2440]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+2790], W8
	026 Subtract W8, W21, 1
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X9, -19406848
	029 Add X9, X9, 2340
	030 NotImplemented "Instruction ADR not yet implemented."
	031 Move W11, [X9]
	032 Add X10, X10, X11
	033 CallNoReturn X10
	034 Subtract W8, W20, 48
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Subtract W8, W20, 97
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X8, 0x2346000
	039 Move X8, [X8+368]
	040 NotImplemented "Instruction STRH not yet implemented."
	041 Move X0, [X8]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Add X0, X31, 12
	047 Move X1, X31
	048 Call Char.ToString, X0
	049 Move X1, X0
	050 Move X0, X19
	051 Call Terminal.AddKeyInput, X0, X1
	052 Move X0, X19
	053 Call Terminal.Backspace, X0
	054 Move X8, 0x2344000
	055 Move X8, [X8+2440]
	056 Move X8, [X8]
	057 Move [X19+40], X8
	058 Move X0, X19
	059 Move X1, X31
	060 Move X8, 0x2344000
	061 Move X8, [X8+2440]
	062 Move X8, [X8]
	063 Move [X19+40], X8
	064 Move X8, 0x2346000
	065 Move X8, [X8+136]
	066 Move X0, [X8]
	067 Call 0x1C17F10
	068 Move W8, 1
	069 Move X1, X31
	070 Move X20, X0
	071 Move [X0+16], W8
	072 Call Object..ctor, X0
	073 Move X0, X19
	074 Move X1, X20
	075 Move [X20+16], W31
	076 Call Terminal.Enter, X0, X1
	077 Move X20, [X31+32]
	078 Move X19, [X31+40]
	079 Move X22, [X31+16]
	080 Move X21, [X31+24]
	081 Move X30, [X31+48]
	082 Return 

Method: System.Void AddKeyInput(System.String key)

Disassembly:
	0x01DB0CD0 FMUL S3, S9, S3
	0x01DB0CD4 FADD V10.2S, V1.2S, V0.2S
	0x01DB0CD8 FADD S9, S3, S2
	0x01DB0CDC LDUR V11, [X19 + 0x3C]
	0x01DB0CE0 LDR V12, [X19 + 0x44]
	0x01DB0CE4 LDR V13, [X19 + 0x38]
	0x01DB0CE8 MOV X0, X31
	0x01DB0CEC BL 0x3C3C714
	0x01DB0CF0 FMUL S0, S13, S0
	0x01DB0CF4 FMOV S1, 1
	0x01DB0CF8 FMIN S1, S0, S1
	0x01DB0CFC FCMP S0, 0x0
	0x01DB0D00 FMOV S0, W31
	0x01DB0D04 LDR X0, [X19 + 0x20]
	0x01DB0D08 FSUB V2.2S, V10.2S, V11.2S
	0x01DB0D0C FSUB S3, S9, S12
	0x01DB0D10 FCSEL S0, S1, S0, PL

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+40]
	005 Compare X0, 0
	006 JumpIfEqual {21}
	007 Move W8, [X0+16]
	008 Move W9, [X19+32]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X2, X31
	011 Call String.Concat, X0, X1
	012 Move [X19+40], X0
	013 Move X0, X19
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Call Terminal.UpdateText, X0
	017 Return 
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return 
	021 Call 0x1C17F20

Method: System.Void Enter(AnimalCompany.SessionProperties properties = null)

Disassembly:
	0x01DB0D58 LDP S0, S1, [X19 + 0x3C]
	0x01DB0D5C LDR V2, [X19 + 0x44]
	0x01DB0D60 BL 0x3C281F8
	0x01DB0D64 CBZ X20, 0x1DB0F38
	0x01DB0D68 MOV X0, X20
	0x01DB0D6C MOV X1, X31
	0x01DB0D70 BL 0x3C3F62C
	0x01DB0D74 LDR V10, [X19 + 0x48]
	0x01DB0D78 LDR V9, [X19 + 0x50]
	0x01DB0D7C MOVZ W0, 0x6F
	0x01DB0D80 MOV X1, X31
	0x01DB0D84 BL 0x3C84CAC
	0x01DB0D88 TBZ X0, 0x0, 0x1DB0DF4
	0x01DB0D8C ADRP X20, 0x2628000
	0x01DB0D90 LDRB W8, [X20 + 0xB70]
	0x01DB0D94 CBNZ W8, 0x1DB0DAC
	0x01DB0D98 ADRP X0, 0x2343000
	0x01DB0D9C LDR X0, [X0 + 0x5A0]
	0x01DB0DA0 BL 0x1C16CF4
	0x01DB0DA4 MOVZ W8, 0x1
	0x01DB0DA8 STRB W8, [X20 + 0xB70]
	0x01DB0DAC ADRP X20, 0x2343000
	0x01DB0DB0 LDR X20, [X20 + 0x5A0]
	0x01DB0DB4 ADRP X21, 0x2628000
	0x01DB0DB8 LDRB W9, [X21 + 0xA1F]
	0x01DB0DBC LDR X8, [X20]
	0x01DB0DC0 LDR X8, [X8 + 0xB8]
	0x01DB0DC4 LDUR V10, [X8 + 0x3C]
	0x01DB0DC8 LDR V9, [X8 + 0x44]
	0x01DB0DCC CBNZ W9, 0x1DB0DE8
	0x01DB0DD0 MOV X0, X20
	0x01DB0DD4 BL 0x1C16CF4
	0x01DB0DD8 LDR X8, [X20]
	0x01DB0DDC MOVZ W9, 0x1
	0x01DB0DE0 STRB W9, [X21 + 0xA1F]
	0x01DB0DE4 LDR X8, [X8 + 0xB8]
	0x01DB0DE8 ADD X9, X8, 0x48
	0x01DB0DEC ADD X8, X8, 0x50
	0x01DB0DF0 B 0x1DB0E68
	0x01DB0DF4 MOVZ W0, 0x70
	0x01DB0DF8 MOV X1, X31
	0x01DB0DFC BL 0x3C84CAC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2629000
	007 Move X22, 0x2348000
	008 Move W8, [X21+2791]
	009 Move X22, [X22+2288]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x2348000
	017 Move X0, [X0+2288]
	018 Call 0x1C17CF4
	019 Move X0, 0x2344000
	020 Move X0, [X0+2440]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2791], W8
	024 Move X8, [X22]
	025 Move X8, [X8+184]
	026 Move X8, [X8+8]
	027 Compare X8, 0
	028 JumpIfEqual {51}
	029 Move X1, [X19+40]
	030 Move X9, [X8+24]
	031 Move X0, [X8+64]
	032 Move X3, [X8+40]
	033 Move X2, X20
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {51}
	039 Move X8, 0x2344000
	040 Move X8, [X8+2440]
	041 Move X0, X19
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X8, [X8]
	045 Move [X19+40], X8
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X30, [X31+48]
	049 Call Terminal.UpdateText, X0
	050 Return 
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Return 

Method: System.Void Backspace()

Disassembly:
	0x00000000 INVALID
	0x01DB0D18 FMUL S0, S3, S0
	0x01DB0D1C FADD V1.2S, V11.2S, V1.2S
	0x01DB0D20 FADD S0, S12, S0
	0x01DB0D24 STUR D1, [X19 + 0x3C]
	0x01DB0D28 STR S0, [X19 + 0x44]
	0x01DB0D2C CBZ X0, 0x1DB0F38
	0x01DB0D30 LDR X20, [X19 + 0x30]
	0x01DB0D34 ADD X8, X31, 0x0
	0x01DB0D38 MOV X1, X31
	0x01DB0D3C BL 0x3C3F1C8
	0x01DB0D40 LDP V0, V1, [X31]
	0x01DB0D44 LDP V2, V3, [X31 + 0x20]
	0x01DB0D48 ADD X0, X31, 0x40
	0x01DB0D4C MOV X1, X31
	0x01DB0D50 STP V0, V1, [X31 + 0x40]
	0x01DB0D54 STP V2, V3, [X31 + 0x60]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+40]
	005 Compare X0, 0
	006 JumpIfEqual {21}
	007 Move W8, [X0+16]
	008 Subtract W2, W8, 1
	009 Move W1, W31
	010 Move X3, X31
	011 Call String.Substring, X0, X1, X2
	012 Move [X19+40], X0
	013 Move X0, X19
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Call Terminal.UpdateText, X0
	017 Return 
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return 
	021 Call 0x1C17F20

Method: System.Void UpdateText()

Disassembly:
	0x01DB0E10 ADRP X0, 0x2343000
	0x01DB0E14 LDR X0, [X0 + 0x5A0]
	0x01DB0E18 BL 0x1C16CF4
	0x01DB0E1C MOVZ W8, 0x1
	0x01DB0E20 STRB W8, [X20 + 0xB70]
	0x01DB0E24 ADRP X20, 0x2343000
	0x01DB0E28 LDR X20, [X20 + 0x5A0]
	0x01DB0E2C ADRP X21, 0x2628000
	0x01DB0E30 LDRB W9, [X21 + 0xABD]
	0x01DB0E34 LDR X8, [X20]
	0x01DB0E38 LDR X8, [X8 + 0xB8]
	0x01DB0E3C LDUR V10, [X8 + 0x3C]
	0x01DB0E40 LDR V9, [X8 + 0x44]
	0x01DB0E44 CBNZ W9, 0x1DB0E60
	0x01DB0E48 MOV X0, X20
	0x01DB0E4C BL 0x1C16CF4
	0x01DB0E50 LDR X8, [X20]
	0x01DB0E54 MOVZ W9, 0x1
	0x01DB0E58 STRB W9, [X21 + 0xABD]
	0x01DB0E5C LDR X8, [X8 + 0xB8]
	0x01DB0E60 ADD X9, X8, 0x24
	0x01DB0E64 ADD X8, X8, 0x2C
	0x01DB0E68 LDR V0, [X9]
	0x01DB0E6C LDR V2, [X8]
	0x01DB0E70 FMOV S3, 0.25
	0x00000000 INVALID
	0x01DB0E78 FMUL S3, S9, S3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x2629000
	006 Move X21, 0x2344000
	007 Move W8, [X19+2792]
	008 Move X21, [X21+3552]
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2344000
	015 Move X0, [X0+3552]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+2792], W8
	019 Move X0, [X20+40]
	020 Move X19, [X20+48]
	021 Move X1, [X21]
	022 Move X2, X31
	023 Call String.Concat, X0, X1
	024 Compare X19, 0
	025 JumpIfEqual {36}
	026 Move X8, [X19]
	027 Move X1, X0
	028 Move X0, X19
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X3, [X8+1368]
	032 Move X2, [X8+1376]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 CallNoReturn X3
	036 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01DB0E7C FADD V10.2S, V1.2S, V0.2S
	0x01DB0E80 FADD S9, S3, S2
	0x01DB0E84 LDR V8, [X19 + 0x48]
	0x01DB0E88 LDR V11, [X19 + 0x50]
	0x01DB0E8C LDR V12, [X19 + 0x38]
	0x01DB0E90 MOV X0, X31
	0x01DB0E94 BL 0x3C3C714
	0x01DB0E98 FMUL S0, S12, S0
	0x01DB0E9C FMOV S1, 1
	0x01DB0EA0 FMIN S1, S0, S1
	0x01DB0EA4 FCMP S0, 0x0
	0x01DB0EA8 FMOV S0, W31
	0x01DB0EAC LDR X0, [X19 + 0x20]
	0x01DB0EB0 FSUB V2.2S, V10.2S, V8.2S
	0x01DB0EB4 FSUB S3, S9, S11
	0x01DB0EB8 FCSEL S0, S1, S0, PL
	0x00000000 INVALID
	0x01DB0EC0 FMUL S0, S3, S0
	0x01DB0EC4 FADD V1.2S, V8.2S, V1.2S
	0x01DB0EC8 FADD S0, S11, S0
	0x01DB0ECC STR D1, [X19 + 0x48]
	0x01DB0ED0 STR S0, [X19 + 0x50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2629000
	006 Move X20, 0x2344000
	007 Move W8, [X21+2793]
	008 Move X20, [X20+2440]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2344000
	015 Move X0, [X0+2440]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2793], W8
	019 Move W8, 8
	020 Move [X19+32], W8
	021 Move X8, [X20]
	022 Move X0, X19
	023 Move X1, X31
	024 Move [X19+40], X8
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call MonoBehaviour..ctor, X0
	030 Return 

