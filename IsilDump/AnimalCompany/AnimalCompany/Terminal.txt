Type: AnimalCompany.Terminal

Method: System.Void Awake()

Disassembly:
	0x01CB58C4 MOV X1, X31
	0x01CB58C8 STP V0, V1, [X31 + 0x40]
	0x01CB58CC STP V2, V3, [X31 + 0x60]
	0x01CB58D0 LDP S0, S1, [X19 + 0x3C]
	0x01CB58D4 LDR V2, [X19 + 0x44]
	0x01CB58D8 BL 0x3A90598
	0x01CB58DC CBZ X20, 0x1CB5AB0
	0x01CB58E0 MOV X0, X20
	0x01CB58E4 MOV X1, X31
	0x01CB58E8 BL 0x3AA76F8
	0x01CB58EC LDR V10, [X19 + 0x48]
	0x01CB58F0 LDR V9, [X19 + 0x50]
	0x01CB58F4 MOVZ W0, 0x6F
	0x01CB58F8 MOV X1, X31
	0x01CB58FC BL 0x3AECD78
	0x01CB5900 TBZ X0, 0x0, 0x1CB596C
	0x01CB5904 ADRP X20, 0x256E000
	0x01CB5908 LDRB W8, [X20 + 0x511]
	0x01CB590C CBNZ W8, 0x1CB5924
	0x01CB5910 ADRP X0, 0x2298000
	0x01CB5914 LDR X0, [X0 + 0x480]
	0x01CB5918 BL 0x1B6E7F0
	0x01CB591C MOVZ W8, 0x1
	0x01CB5920 STRB W8, [X20 + 0x511]
	0x01CB5924 ADRP X20, 0x2298000
	0x01CB5928 LDR X20, [X20 + 0x480]
	0x01CB592C ADRP X21, 0x256E000
	0x01CB5930 LDRB W9, [X21 + 0x50F]
	0x01CB5934 LDR X8, [X20]
	0x01CB5938 LDR X8, [X8 + 0xB8]
	0x01CB593C LDUR V10, [X8 + 0x3C]
	0x01CB5940 LDR V9, [X8 + 0x44]
	0x01CB5944 CBNZ W9, 0x1CB5960
	0x01CB5948 MOV X0, X20
	0x01CB594C BL 0x1B6E7F0
	0x01CB5950 LDR X8, [X20]
	0x01CB5954 MOVZ W9, 0x1
	0x01CB5958 STRB W9, [X21 + 0x50F]
	0x01CB595C LDR X8, [X8 + 0xB8]
	0x01CB5960 ADD X9, X8, 0x48
	0x01CB5964 ADD X8, X8, 0x50
	0x01CB5968 B 0x1CB59E0
	0x01CB596C MOVZ W0, 0x70
	0x01CB5970 MOV X1, X31
	0x01CB5974 BL 0x3AECD78
	0x01CB5978 TBZ X0, 0x0, 0x1CB59FC
	0x01CB597C ADRP X20, 0x256E000
	0x01CB5980 LDRB W8, [X20 + 0x511]
	0x01CB5984 CBNZ W8, 0x1CB599C
	0x01CB5988 ADRP X0, 0x2298000
	0x01CB598C LDR X0, [X0 + 0x480]
	0x01CB5990 BL 0x1B6E7F0
	0x01CB5994 MOVZ W8, 0x1
	0x01CB5998 STRB W8, [X20 + 0x511]
	0x01CB599C ADRP X20, 0x2298000
	0x01CB59A0 LDR X20, [X20 + 0x480]
	0x01CB59A4 ADRP X21, 0x256E000
	0x01CB59A8 LDRB W9, [X21 + 0x510]
	0x01CB59AC LDR X8, [X20]
	0x01CB59B0 LDR X8, [X8 + 0xB8]
	0x01CB59B4 LDUR V10, [X8 + 0x3C]
	0x01CB59B8 LDR V9, [X8 + 0x44]
	0x01CB59BC CBNZ W9, 0x1CB59D8
	0x01CB59C0 MOV X0, X20
	0x01CB59C4 BL 0x1B6E7F0
	0x01CB59C8 LDR X8, [X20]
	0x01CB59CC MOVZ W9, 0x1
	0x01CB59D0 STRB W9, [X21 + 0x510]
	0x01CB59D4 LDR X8, [X8 + 0xB8]
	0x01CB59D8 ADD X9, X8, 0x24
	0x01CB59DC ADD X8, X8, 0x2C
	0x01CB59E0 LDR V0, [X9]
	0x01CB59E4 LDR V2, [X8]
	0x01CB59E8 FMOV S3, 0.25
	0x00000000 INVALID
	0x01CB59F0 FMUL S3, S9, S3
	0x01CB59F4 FADD V10.2S, V1.2S, V0.2S
	0x01CB59F8 FADD S9, S3, S2
	0x01CB59FC LDR V8, [X19 + 0x48]
	0x01CB5A00 LDR V11, [X19 + 0x50]
	0x01CB5A04 LDR V12, [X19 + 0x38]
	0x01CB5A08 MOV X0, X31
	0x01CB5A0C BL 0x3AA481C
	0x01CB5A10 FMUL S0, S12, S0
	0x01CB5A14 FMOV S1, 1
	0x01CB5A18 FMIN S1, S0, S1
	0x01CB5A1C FCMP S0, 0x0
	0x01CB5A20 FMOV S0, W31
	0x01CB5A24 LDR X0, [X19 + 0x20]
	0x01CB5A28 FSUB V2.2S, V10.2S, V8.2S
	0x01CB5A2C FSUB S3, S9, S11
	0x01CB5A30 FCSEL S0, S1, S0, PL
	0x00000000 INVALID
	0x01CB5A38 FMUL S0, S3, S0
	0x01CB5A3C FADD V1.2S, V8.2S, V1.2S
	0x01CB5A40 FADD S0, S11, S0
	0x01CB5A44 STR D1, [X19 + 0x48]
	0x01CB5A48 STR S0, [X19 + 0x50]
	0x01CB5A4C CBZ X0, 0x1CB5AB0
	0x01CB5A50 LDR X20, [X19 + 0x28]
	0x01CB5A54 ADD X8, X31, 0x0
	0x01CB5A58 MOV X1, X31
	0x01CB5A5C BL 0x3AA7294
	0x01CB5A60 LDP V0, V1, [X31]
	0x01CB5A64 LDP V2, V3, [X31 + 0x20]
	0x01CB5A68 ADD X0, X31, 0x40
	0x01CB5A6C MOV X1, X31
	0x01CB5A70 STP V0, V1, [X31 + 0x40]
	0x01CB5A74 STP V2, V3, [X31 + 0x60]
	0x01CB5A78 LDP S0, S1, [X19 + 0x48]
	0x01CB5A7C LDR V2, [X19 + 0x50]
	0x01CB5A80 BL 0x3A90598
	0x01CB5A84 CBZ X20, 0x1CB5AB0
	0x01CB5A88 MOV X0, X20
	0x01CB5A8C MOV X1, X31
	0x01CB5A90 BL 0x3AA76F8
	0x01CB5A94 LDP X20, X19, [X31 + 0xC0]
	0x01CB5A98 LDP X30, X21, [X31 + 0xB0]
	0x01CB5A9C LDP D9, D8, [X31 + 0xA0]
	0x01CB5AA0 LDP D11, D10, [X31 + 0x90]
	0x01CB5AA4 LDP D13, D12, [X31 + 0x80]
	0x01CB5AA8 ADD X31, X31, 0xD0
	0x01CB5AAC RET
	0x01CB5AB0 BL 0x1B6EA1C
	0x01CB5AB4 MOVZ W8, 0x40A00000
	0x01CB5AB8 MOV X1, X31
	0x01CB5ABC STR W8, [X0 + 0x38]
	0x01CB5AC0 B 0x3A9EEE4
	0x01CB5AC4 STP X30, X23, [X31 - 0x30]!
	0x01CB5AC8 STP X22, X21, [X31 + 0x10]
	0x01CB5ACC STP X20, X19, [X31 + 0x20]
	0x01CB5AD0 ADRP X20, 0x256E000
	0x01CB5AD4 ADRP X21, 0x2298000
	0x01CB5AD8 LDRB W8, [X20 + 0x4E2]
	0x01CB5ADC LDR X21, [X21 + 0x800]
	0x01CB5AE0 MOV X19, X0
	0x01CB5AE4 TBNZ X8, 0x0, 0x1CB5B44
	0x01CB5AE8 ADRP X0, 0x2299000
	0x01CB5AEC LDR X0, [X0 + 0x168]
	0x01CB5AF0 BL 0x1B6E7F0
	0x01CB5AF4 ADRP X0, 0x2298000
	0x01CB5AF8 LDR X0, [X0 + 0x800]
	0x01CB5AFC BL 0x1B6E7F0
	0x01CB5B00 ADRP X0, 0x2299000
	0x01CB5B04 LDR X0, [X0 + 0xE60]
	0x01CB5B08 BL 0x1B6E7F0
	0x01CB5B0C ADRP X0, 0x2299000
	0x01CB5B10 LDR X0, [X0 + 0xE68]
	0x01CB5B14 BL 0x1B6E7F0
	0x01CB5B18 ADRP X0, 0x2299000
	0x01CB5B1C LDR X0, [X0 + 0xE70]
	0x01CB5B20 BL 0x1B6E7F0
	0x01CB5B24 ADRP X0, 0x2299000
	0x01CB5B28 LDR X0, [X0 + 0xE78]
	0x01CB5B2C BL 0x1B6E7F0
	0x01CB5B30 ADRP X0, 0x2298000
	0x01CB5B34 LDR X0, [X0 + 0xF78]
	0x01CB5B38 BL 0x1B6E7F0
	0x01CB5B3C MOVZ W8, 0x1
	0x01CB5B40 STRB W8, [X20 + 0x4E2]
	0x01CB5B44 LDR X0, [X21]
	0x01CB5B48 LDR W8, [X0 + 0xE0]
	0x01CB5B4C CBNZ W8, 0x1CB5B54
	0x01CB5B50 BL 0x1B6E8F8
	0x01CB5B54 MOV X0, X31
	0x01CB5B58 BL 0x3A6BF90
	0x01CB5B5C TBZ X0, 0x0, 0x1CB5BB8
	0x01CB5B60 LDRB W8, [X19 + 0x20]
	0x01CB5B64 CBZ W8, 0x1CB5BB8
	0x01CB5B68 LDR X0, [X19 + 0x28]
	0x01CB5B6C CBZ X0, 0x1CB5C84
	0x01CB5B70 ADRP X8, 0x2299000
	0x01CB5B74 LDR X8, [X8 + 0xE60]
	0x01CB5B78 LDR X1, [X8]
	0x01CB5B7C BL 0x20CEEF0
	0x01CB5B80 CBZ X0, 0x1CB5C84
	0x01CB5B84 MOVZ W1, 0x1
	0x01CB5B88 MOV X2, X31
	0x01CB5B8C BL 0x3A9A604
	0x01CB5B90 LDR X0, [X19 + 0x28]
	0x01CB5B94 CBZ X0, 0x1CB5C84
	0x01CB5B98 ADRP X8, 0x2299000
	0x01CB5B9C LDR X8, [X8 + 0xE70]
	0x01CB5BA0 LDR X1, [X8]
	0x01CB5BA4 BL 0x20CEEF0
	0x01CB5BA8 CBZ X0, 0x1CB5C84
	0x01CB5BAC MOVZ W1, 0x1
	0x01CB5BB0 MOV X2, X31
	0x01CB5BB4 BL 0x3A9A604
	0x01CB5BB8 LDR X0, [X19 + 0x28]
	0x01CB5BBC CBZ X0, 0x1CB5C84
	0x01CB5BC0 ADRP X8, 0x2299000
	0x01CB5BC4 LDR X8, [X8 + 0xE68]
	0x01CB5BC8 ADRP X23, 0x2298000
	0x01CB5BCC ADRP X22, 0x2299000
	0x01CB5BD0 ADRP X21, 0x2299000
	0x01CB5BD4 LDR X1, [X8]
	0x01CB5BD8 LDR X23, [X23 + 0xF78]
	0x01CB5BDC LDR X22, [X22 + 0x168]
	0x01CB5BE0 LDR X21, [X21 + 0xE78]
	0x01CB5BE4 BL 0x20CEEF0
	0x01CB5BE8 STR X0, [X19 + 0x30]
	0x01CB5BEC LDR X8, [X23]
	0x01CB5BF0 LDR X0, [X22]
	0x01CB5BF4 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x256F000
	009 Move X22, 0x229A000
	010 Move X20, 0x229A000
	011 Move W8, [X21+1238]
	012 Move X22, [X22+3600]
	013 Move X20, [X20+1848]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {51}
	019 Move X0, 0x229A000
	020 Move X0, [X0+1856]
	021 Call 0x1B6F7F0
	022 Move X0, 0x2299000
	023 Move X0, [X0+1256]
	024 Call 0x1B6F7F0
	025 Move X0, 0x2299000
	026 Move X0, [X0+2048]
	027 Call 0x1B6F7F0
	028 Move X0, 0x229A000
	029 Move X0, [X0+1848]
	030 Call 0x1B6F7F0
	031 Move X0, 0x2299000
	032 Move X0, [X0+2976]
	033 Call 0x1B6F7F0
	034 Move X0, 0x2299000
	035 Move X0, [X0+2960]
	036 Call 0x1B6F7F0
	037 Move X0, 0x229A000
	038 Move X0, [X0+3608]
	039 Call 0x1B6F7F0
	040 Move X0, 0x229A000
	041 Move X0, [X0+3616]
	042 Call 0x1B6F7F0
	043 Move X0, 0x229A000
	044 Move X0, [X0+3600]
	045 Call 0x1B6F7F0
	046 Move X0, 0x229A000
	047 Move X0, [X0+2800]
	048 Call 0x1B6F7F0
	049 Move W8, 1
	050 Move [X21+1238], W8
	051 Move X8, [X22]
	052 Move X0, X19
	053 Move X8, [X8+184]
	054 Move [X8], X19
	055 Move X1, [X20]
	056 Call 0x2090DE8, X0
	057 Move [X19+72], X0
	058 Compare X0, 0
	059 JumpIfEqual {227}
	060 Move X23, 0x229A000
	061 Move X23, [X23+1856]
	062 Move X20, X0
	063 Move X21, [X0+32]
	064 Move X22, 0x229A000
	065 Move X0, [X23]
	066 Move X22, [X22+3616]
	067 Call 0x1B6FA0C
	068 Move X2, [X22]
	069 Move X1, X19
	070 Move X3, X31
	071 Move X22, X0
	072 Call Action`2<Int32Enum, Int32Enum>..ctor, X0, X1, X2
	073 Move X0, X21
	074 Move X1, X22
	075 Move X2, X31
	076 Call Delegate.Combine, X0, X1
	077 Compare X0, 0
	078 JumpIfEqual {95}
	079 Move X22, [X23]
	080 Move X21, X0
	081 Move X1, X22
	082 Call 0x1B6F8FC
	083 Compare X0, 0
	084 JumpIfEqual {232}
	085 Move [X20+32], X0
	086 Move X20, [X23]
	087 Move X0, X21
	088 Move X1, X20
	089 Call 0x1B6F8FC
	090 Compare X0, 0
	091 JumpIfNotEqual {96}
	092 Move X0, X21
	093 Move X1, X20
	094 Call 0x1B6FCDC
	095 Move [X20+32], X31
	096 Move X8, 0x2299000
	097 Move X8, [X8+2960]
	098 Move X20, 0x229A000
	099 Move X21, 0x2299000
	100 Move X23, 0x2299000
	101 Move X0, [X8]
	102 Move X20, [X20+3608]
	103 Move X21, [X21+2976]
	104 Move X23, [X23+1256]
	105 Call 0x1B6FA0C
	106 Move X2, [X20]
	107 Move X1, X19
	108 Move X3, X31
	109 Move X20, X0
	110 Call ObserverDelegate..ctor, X0, X1, X2
	111 Move X0, [X21]
	112 Move W1, 2
	113 Call 0x1B6F868
	114 Move X8, [X23]
	115 Move X21, X0
	116 Move W9, [X8+224]
	117 Compare W9, 0
	118 JumpIfNotEqual {121}
	119 Move X0, X8
	120 Call 0x1B6F8F8
	121 Move X24, 0x256F000
	122 Move W8, [X24+1091]
	123 Compare W8, 0
	124 JumpIfNotEqual {130}
	125 Move X0, 0x2299000
	126 Move X0, [X0+1256]
	127 Call 0x1B6F7F0
	128 Move W8, 1
	129 Move [X24+1091], W8
	130 Move X0, [X23]
	131 Move W8, [X0+224]
	132 Compare W8, 0
	133 JumpIfNotEqual {136}
	134 Call 0x1B6F8F8
	135 Move X0, [X23]
	136 Move X8, [X0+184]
	137 Move X8, [X8]
	138 Compare X8, 0
	139 JumpIfEqual {227}
	140 Move X8, [X8+176]
	141 Compare X8, 0
	142 JumpIfEqual {227}
	143 Compare X21, 0
	144 JumpIfEqual {227}
	145 Move X22, [X8+72]
	146 Compare X22, 0
	147 JumpIfEqual {154}
	148 Move X8, [X21]
	149 Move X0, X22
	150 Move X1, [X8+64]
	151 Call 0x1B6F8FC
	152 Compare X0, 0
	153 JumpIfEqual {229}
	154 Move W8, [X21+24]
	155 Compare W8, 0
	156 JumpIfEqual {228}
	157 Move [X21+32], X22
	158 Move W8, [X24+1091]
	159 Compare W8, 0
	160 JumpIfNotEqual {166}
	161 Move X0, 0x2299000
	162 Move X0, [X0+1256]
	163 Call 0x1B6F7F0
	164 Move W8, 1
	165 Move [X24+1091], W8
	166 Move X0, [X23]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {172}
	170 Call 0x1B6F8F8
	171 Move X0, [X23]
	172 Move X8, [X0+184]
	173 Move X8, [X8]
	174 Compare X8, 0
	175 JumpIfEqual {227}
	176 Move X8, [X8+176]
	177 Compare X8, 0
	178 JumpIfEqual {227}
	179 Move X22, [X8+80]
	180 Compare X22, 0
	181 JumpIfEqual {188}
	182 Move X8, [X21]
	183 Move X0, X22
	184 Move X1, [X8+64]
	185 Call 0x1B6F8FC
	186 Compare X0, 0
	187 JumpIfEqual {229}
	188 Move W8, [X21+24]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move X24, 0x2299000
	191 Move X23, 0x229A000
	192 Move X24, [X24+2048]
	193 Move X23, [X23+2800]
	194 Move X0, X20
	195 Move X1, X21
	196 Move X2, X31
	197 Move [X21+40], X22
	198 Call App.RegisterObserver, X0, X1
	199 Move X0, [X24]
	200 Move X19, [X19+64]
	201 Move W8, [X0+224]
	202 Compare W8, 0
	203 JumpIfNotEqual {205}
	204 Call 0x1B6F8F8
	205 Move X0, X31
	206 Call Application.get_version
	207 Move X8, [X23]
	208 Move X1, X0
	209 Move X2, X31
	210 Move X0, X8
	211 Call String.Concat, X0, X1
	212 Compare X19, 0
	213 JumpIfEqual {227}
	214 Move X8, [X19]
	215 Move X1, X0
	216 Move X0, X19
	217 Move X20, [X31+48]
	218 Move X19, [X31+56]
	219 Move X3, [X8+1368]
	220 Move X2, [X8+1376]
	221 Move X22, [X31+32]
	222 Move X21, [X31+40]
	223 Move X24, [X31+16]
	224 Move X23, [X31+24]
	225 Move X30, [X31+64]
	226 CallNoReturn X3
	227 Call 0x1B6FA1C
	228 Call 0x1B6FA24
	229 Call 0x1B6FA40
	230 Move X1, X31
	231 Call 0x1B6F8E8
	232 Move X0, X21
	233 Move X1, X22
	234 Call 0x1B6FCDC

Method: System.Void OnDestroy()

Disassembly:
	0x01CB5BF8 LDR X20, [X8 + 0x18]
	0x01CB5BFC BL 0x1B6EA0C
	0x01CB5C00 LDR X2, [X21]
	0x01CB5C04 MOV X1, X19
	0x01CB5C08 MOV X3, X31
	0x01CB5C0C MOV X21, X0
	0x01CB5C10 BL 0x27EC49C
	0x01CB5C14 MOV X0, X20
	0x01CB5C18 MOV X1, X21
	0x01CB5C1C MOV X2, X31
	0x01CB5C20 BL 0x322A750
	0x01CB5C24 CBZ X0, 0x1CB5C68
	0x01CB5C28 LDR X20, [X22]
	0x01CB5C2C MOV X19, X0
	0x01CB5C30 MOV X1, X20
	0x01CB5C34 BL 0x1B6E8FC
	0x01CB5C38 CBZ X0, 0x1CB5C5C
	0x01CB5C3C LDR X8, [X23]
	0x01CB5C40 LDR X8, [X8 + 0xB8]
	0x01CB5C44 STR X0, [X8 + 0x18]
	0x01CB5C48 LDR X20, [X22]
	0x01CB5C4C MOV X0, X19
	0x01CB5C50 MOV X1, X20
	0x01CB5C54 BL 0x1B6E8FC
	0x01CB5C58 CBNZ X0, 0x1CB5C74
	0x01CB5C5C MOV X0, X19
	0x01CB5C60 MOV X1, X20
	0x01CB5C64 BL 0x1B6ECDC
	0x01CB5C68 LDR X8, [X23]
	0x01CB5C6C LDR X8, [X8 + 0xB8]
	0x01CB5C70 STR X31, [X8 + 0x18]
	0x01CB5C74 LDP X20, X19, [X31 + 0x20]
	0x01CB5C78 LDP X22, X21, [X31 + 0x10]
	0x01CB5C7C LDP X30, X23, [X31], #0x30
	0x01CB5C80 RET
	0x01CB5C84 BL 0x1B6EA1C
	0x01CB5C88 STP X30, X23, [X31 - 0x30]!
	0x01CB5C8C STP X22, X21, [X31 + 0x10]
	0x01CB5C90 STP X20, X19, [X31 + 0x20]
	0x01CB5C94 ADRP X20, 0x256E000
	0x01CB5C98 LDRB W8, [X20 + 0x4E3]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x256F000
	008 Move X23, 0x2299000
	009 Move X20, 0x229A000
	010 Move X21, 0x2299000
	011 Move W8, [X22+1239]
	012 Move X23, [X23+2960]
	013 Move X20, [X20+3608]
	014 Move X21, [X21+1256]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x2299000
	021 Move X0, [X0+1256]
	022 Call 0x1B6F7F0
	023 Move X0, 0x2299000
	024 Move X0, [X0+2960]
	025 Call 0x1B6F7F0
	026 Move X0, 0x229A000
	027 Move X0, [X0+3608]
	028 Call 0x1B6F7F0
	029 Move W8, 1
	030 Move [X22+1239], W8
	031 Move X0, [X23]
	032 Call 0x1B6FA0C
	033 Move X2, [X20]
	034 Move X1, X19
	035 Move X3, X31
	036 Move X20, X0
	037 Call ObserverDelegate..ctor, X0, X1, X2
	038 Move X0, [X21]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1B6F8F8
	043 Move X0, X20
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X1, X31
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Call App.DeregisterObserver, X0
	052 Return 

Method: System.Void HandleCurrentRoomCodeChanged(SpatialSys.ObservableState.StateChangedEventArgs args)

Disassembly:
	0x01CB5C9C MOV X19, X0
	0x01CB5CA0 TBNZ X8, 0x0, 0x1CB5CDC
	0x01CB5CA4 ADRP X0, 0x2299000
	0x01CB5CA8 LDR X0, [X0 + 0x168]
	0x01CB5CAC BL 0x1B6E7F0
	0x01CB5CB0 ADRP X0, 0x2299000
	0x01CB5CB4 LDR X0, [X0 + 0xE78]
	0x01CB5CB8 BL 0x1B6E7F0
	0x01CB5CBC ADRP X0, 0x2298000
	0x01CB5CC0 LDR X0, [X0 + 0xF78]
	0x01CB5CC4 BL 0x1B6E7F0
	0x01CB5CC8 ADRP X0, 0x2298000
	0x01CB5CCC LDR X0, [X0 + 0x478]
	0x01CB5CD0 BL 0x1B6E7F0
	0x01CB5CD4 MOVZ W8, 0x1
	0x01CB5CD8 STRB W8, [X20 + 0x4E3]
	0x01CB5CDC ADRP X21, 0x256E000
	0x01CB5CE0 ADRP X22, 0x2298000
	0x01CB5CE4 ADRP X20, 0x2298000
	0x01CB5CE8 LDRB W8, [X21 + 0x508]
	0x01CB5CEC LDR X22, [X22 + 0xF78]
	0x01CB5CF0 LDR X20, [X20 + 0x478]
	0x01CB5CF4 CBNZ W8, 0x1CB5D0C
	0x01CB5CF8 ADRP X0, 0x2298000
	0x01CB5CFC LDR X0, [X0 + 0xF78]
	0x01CB5D00 BL 0x1B6E7F0
	0x01CB5D04 MOVZ W8, 0x1
	0x01CB5D08 STRB W8, [X21 + 0x508]
	0x01CB5D0C LDR X8, [X22]
	0x01CB5D10 LDR X0, [X20]
	0x01CB5D14 LDR X8, [X8 + 0xB8]
	0x01CB5D18 LDR W9, [X0 + 0xE0]
	0x01CB5D1C LDR X20, [X8 + 0x40]
	0x01CB5D20 CBNZ W9, 0x1CB5D28
	0x01CB5D24 BL 0x1B6E8F8
	0x01CB5D28 MOV X0, X20
	0x01CB5D2C MOV X1, X31
	0x01CB5D30 MOV X2, X31
	0x01CB5D34 BL 0x3A9D6EC
	0x01CB5D38 TBZ X0, 0x0, 0x1CB5DD4
	0x01CB5D3C LDR X8, [X22]
	0x01CB5D40 ADRP X23, 0x2299000
	0x01CB5D44 LDR X8, [X8 + 0xB8]
	0x01CB5D48 LDR X23, [X23 + 0x168]
	0x01CB5D4C LDR X20, [X8 + 0x18]
	0x01CB5D50 LDR X0, [X23]
	0x01CB5D54 BL 0x1B6EA0C
	0x01CB5D58 ADRP X8, 0x2299000
	0x01CB5D5C LDR X8, [X8 + 0xE78]
	0x01CB5D60 MOV X1, X19
	0x01CB5D64 MOV X3, X31
	0x01CB5D68 MOV X21, X0
	0x01CB5D6C LDR X2, [X8]
	0x01CB5D70 BL 0x27EC49C
	0x01CB5D74 MOV X0, X20
	0x01CB5D78 MOV X1, X21
	0x01CB5D7C MOV X2, X31
	0x01CB5D80 BL 0x322A948
	0x01CB5D84 CBZ X0, 0x1CB5DC8
	0x01CB5D88 LDR X20, [X23]
	0x01CB5D8C MOV X19, X0
	0x01CB5D90 MOV X1, X20
	0x01CB5D94 BL 0x1B6E8FC
	0x01CB5D98 CBZ X0, 0x1CB5DBC
	0x01CB5D9C LDR X8, [X22]
	0x01CB5DA0 LDR X8, [X8 + 0xB8]
	0x01CB5DA4 STR X0, [X8 + 0x18]
	0x01CB5DA8 LDR X20, [X23]
	0x01CB5DAC MOV X0, X19
	0x01CB5DB0 MOV X1, X20
	0x01CB5DB4 BL 0x1B6E8FC
	0x01CB5DB8 CBNZ X0, 0x1CB5DD4
	0x01CB5DBC MOV X0, X19
	0x01CB5DC0 MOV X1, X20
	0x01CB5DC4 BL 0x1B6ECDC
	0x01CB5DC8 LDR X8, [X22]
	0x01CB5DCC LDR X8, [X8 + 0xB8]
	0x01CB5DD0 STR X31, [X8 + 0x18]
	0x01CB5DD4 LDP X20, X19, [X31 + 0x20]
	0x01CB5DD8 LDP X22, X21, [X31 + 0x10]
	0x01CB5DDC LDP X30, X23, [X31], #0x30
	0x01CB5DE0 RET
	0x01CB5DE4 STR X30, [X31 - 0x10]!
	0x01CB5DE8 LDR X0, [X0 + 0x30]
	0x01CB5DEC CBZ X0, 0x1CB5DFC
	0x01CB5DF0 MOV X2, X31
	0x01CB5DF4 LDR X30, [X31], #0x10
	0x01CB5DF8 B 0x1E9E84C
	0x01CB5DFC BL 0x1B6EA1C
	0x01CB5E00 MOVZ W8, 0x1
	0x01CB5E04 MOV X1, X31
	0x01CB5E08 STRB W8, [X0 + 0x20]
	0x01CB5E0C B 0x3A9EEE4
	0x01CB5E10 STP X30, X21, [X31 - 0x20]!
	0x01CB5E14 STP X20, X19, [X31 + 0x10]
	0x01CB5E18 ADRP X21, 0x256E000
	0x01CB5E1C ADRP X20, 0x2298000
	0x01CB5E20 LDRB W8, [X21 + 0x4E4]
	0x01CB5E24 LDR X20, [X20 + 0x478]
	0x01CB5E28 MOV X19, X0
	0x01CB5E2C TBNZ X8, 0x0, 0x1CB5E50
	0x01CB5E30 ADRP X0, 0x2298000
	0x01CB5E34 LDR X0, [X0 + 0xF78]
	0x01CB5E38 BL 0x1B6E7F0
	0x01CB5E3C ADRP X0, 0x2298000
	0x01CB5E40 LDR X0, [X0 + 0x478]
	0x01CB5E44 BL 0x1B6E7F0
	0x01CB5E48 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x256F000
	005 Move X19, 0x2299000
	006 Move W8, [X20+1240]
	007 Move X19, [X19+1256]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {32}
	012 Move X0, 0x2299000
	013 Move X0, [X0+1256]
	014 Call 0x1B6F7F0
	015 Move X0, 0x229A000
	016 Move X0, [X0+3624]
	017 Call 0x1B6F7F0
	018 Move X0, 0x2299000
	019 Move X0, [X0+3328]
	020 Call 0x1B6F7F0
	021 Move X0, 0x229A000
	022 Move X0, [X0+3600]
	023 Call 0x1B6F7F0
	024 Move X0, 0x229A000
	025 Move X0, [X0+3632]
	026 Call 0x1B6F7F0
	027 Move X0, 0x229A000
	028 Move X0, [X0+3640]
	029 Call 0x1B6F7F0
	030 Move W8, 1
	031 Move [X20+1240], W8
	032 Move X0, [X19]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1B6F8F8
	037 Move X20, 0x256F000
	038 Move W8, [X20+1091]
	039 Compare W8, 0
	040 JumpIfNotEqual {46}
	041 Move X0, 0x2299000
	042 Move X0, [X0+1256]
	043 Call 0x1B6F7F0
	044 Move W8, 1
	045 Move [X20+1091], W8
	046 Move X0, [X19]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1B6F8F8
	051 Move X0, [X19]
	052 Move X8, [X0+184]
	053 Move X8, [X8]
	054 Compare X8, 0
	055 JumpIfEqual {127}
	056 Move X8, [X8+176]
	057 Compare X8, 0
	058 JumpIfEqual {127}
	059 Move X9, 0x2299000
	060 Move X9, [X9+3328]
	061 Move X0, [X8+72]
	062 Move X1, [X9]
	063 Call 0x24BA848, X0
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {100}
	068 Move X0, [X19]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1B6F8F8
	073 Move W8, [X20+1091]
	074 Compare W8, 0
	075 JumpIfNotEqual {81}
	076 Move X0, 0x2299000
	077 Move X0, [X0+1256]
	078 Call 0x1B6F7F0
	079 Move W8, 1
	080 Move [X20+1091], W8
	081 Move X0, [X19]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {87}
	085 Call 0x1B6F8F8
	086 Move X0, [X19]
	087 Move X8, [X0+184]
	088 Move X8, [X8]
	089 Compare X8, 0
	090 JumpIfEqual {127}
	091 Move X8, [X8+176]
	092 Compare X8, 0
	093 JumpIfEqual {127}
	094 Move X0, [X8+80]
	095 Move X8, 0x229A000
	096 Move X8, [X8+3624]
	097 Move X1, [X8]
	098 Call StatePrimitive`1<Object>.op_Implicit, X0
	099 Move X1, X0
	100 Move X8, 0x229A000
	101 Move X8, [X8+3632]
	102 Move X1, [X8]
	103 Move X8, 0x229A000
	104 Move X8, [X8+3600]
	105 Move X8, [X8]
	106 Move X8, [X8+184]
	107 Move X8, [X8]
	108 Compare X8, 0
	109 JumpIfEqual {127}
	110 Move X9, 0x229A000
	111 Move X9, [X9+3640]
	112 Move X19, [X8+56]
	113 Move X2, X31
	114 Move X0, [X9]
	115 Call String.Concat, X0, X1
	116 Compare X19, 0
	117 JumpIfEqual {127}
	118 Move X8, [X19]
	119 Move X1, X0
	120 Move X0, X19
	121 Move X20, [X31+16]
	122 Move X19, [X31+24]
	123 Move X3, [X8+1368]
	124 Move X2, [X8+1376]
	125 Move X30, [X31+32]
	126 CallNoReturn X3
	127 Call 0x1B6FA1C

Method: System.Void HandleKeyInput(UnityEngine.KeyCode key, AnimalCompany.TerminalKeyType keyType)

Disassembly:
	0x01CB5E4C STRB W8, [X21 + 0x4E4]
	0x01CB5E50 LDR X0, [X20]
	0x01CB5E54 LDR X20, [X19 + 0x40]
	0x01CB5E58 LDR W8, [X0 + 0xE0]
	0x01CB5E5C CBNZ W8, 0x1CB5E64
	0x01CB5E60 BL 0x1B6E8F8
	0x01CB5E64 MOV X0, X20
	0x01CB5E68 MOV X1, X31
	0x01CB5E6C MOV X2, X31
	0x01CB5E70 BL 0x3A9D6EC
	0x01CB5E74 TBZ X0, 0x0, 0x1CB5ED4
	0x01CB5E78 LDR X0, [X19 + 0x40]
	0x01CB5E7C CBZ X0, 0x1CB5EE0
	0x01CB5E80 MOV X1, X31
	0x01CB5E84 BL 0x1D9E5D0
	0x01CB5E88 TBZ X0, 0x0, 0x1CB5ED4
	0x01CB5E8C ADRP X8, 0x2298000
	0x01CB5E90 LDR X8, [X8 + 0xF78]
	0x01CB5E94 LDR X8, [X8]
	0x01CB5E98 LDR X8, [X8 + 0xB8]
	0x01CB5E9C LDR X20, [X8 + 0x38]
	0x01CB5EA0 CBZ X20, 0x1CB5ED4
	0x01CB5EA4 LDR X0, [X19 + 0x40]
	0x01CB5EA8 CBZ X0, 0x1CB5EE0
	0x01CB5EAC MOV X1, X31
	0x01CB5EB0 BL 0x1D9EB2C
	0x01CB5EB4 LDR X8, [X20 + 0x40]
	0x01CB5EB8 LDR X3, [X20 + 0x18]
	0x01CB5EBC LDR X2, [X20 + 0x28]
	0x01CB5EC0 LDP X20, X19, [X31 + 0x10]
	0x01CB5EC4 AND X1, X0, 0x0
	0x01CB5EC8 MOV X0, X8
	0x01CB5ECC LDP X30, X21, [X31], #0x20
	0x01CB5ED0 BR X3
	0x01CB5ED4 LDP X20, X19, [X31 + 0x10]
	0x01CB5ED8 LDP X30, X21, [X31], #0x20
	0x01CB5EDC RET
	0x01CB5EE0 BL 0x1B6EA1C
	0x01CB5EE4 MOV X1, X31
	0x01CB5EE8 B 0x1D661D8
	0x01CB5EEC RET
	0x01CB5EF0 RET
	0x01CB5EF4 STP X30, X19, [X31 - 0x10]!
	0x01CB5EF8 LDR X8, [X0 + 0x50]
	0x01CB5EFC CBZ X8, 0x1CB5F0C
	0x01CB5F00 LDR W0, [X8]
	0x01CB5F04 LDP X30, X19, [X31], #0x10
	0x01CB5F08 RET
	0x01CB5F0C ADRP X0, 0x2298000
	0x01CB5F10 LDR X0, [X0 + 0x490]
	0x01CB5F14 BL 0x1B6E804
	0x01CB5F18 BL 0x1B6EA0C
	0x01CB5F1C MOV X19, X0
	0x01CB5F20 ADRP X0, 0x2299000
	0x01CB5F24 LDR X0, [X0 + 0xE80]
	0x01CB5F28 BL 0x1B6E804

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x256F000
	007 Move W8, [X22+1241]
	008 Move W20, W2
	009 Move W21, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x229A000
	016 Move X0, [X0+3648]
	017 Call 0x1B6F7F0
	018 Move X0, 0x2299000
	019 Move X0, [X0+2072]
	020 Call 0x1B6F7F0
	021 Move W8, 1
	022 Move [X22+1241], W8
	023 Subtract W8, W21, 48
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Subtract W8, W21, 97
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X0, X19
	031 Call Terminal.Backspace, X0
	032 Move X8, 0x229A000
	033 Move X8, [X8+3648]
	034 NotImplemented "Instruction STRH not yet implemented."
	035 Move X0, [X8]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1B6F8F8
	040 Add X0, X31, 12
	041 Move X1, X31
	042 Call Char.ToString, X0
	043 Move X1, X0
	044 Move X0, X19
	045 Call Terminal.AddKeyInput, X0, X1
	046 Move X8, 0x2299000
	047 Move X8, [X8+2072]
	048 Move X8, [X8]
	049 Move [X19+40], X8
	050 Move X0, X19
	051 Call Terminal.Enter, X0
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X30, [X31+48]
	057 Return 

Method: System.Void AddKeyInput(System.String key)

Disassembly:
	0x01CB5F2C MOV X1, X0
	0x01CB5F30 MOV X0, X19
	0x01CB5F34 MOV X2, X31
	0x01CB5F38 BL 0x31E7550
	0x01CB5F3C ADRP X0, 0x2299000
	0x01CB5F40 LDR X0, [X0 + 0xE88]
	0x01CB5F44 BL 0x1B6E804
	0x01CB5F48 MOV X1, X0
	0x01CB5F4C MOV X0, X19
	0x01CB5F50 BL 0x1B6E8E8
	0x01CB5F54 STP X30, X19, [X31 - 0x10]!
	0x01CB5F58 LDR X8, [X0 + 0x50]
	0x01CB5F5C CBZ X8, 0x1CB5F6C
	0x01CB5F60 STR W1, [X8]
	0x01CB5F64 LDP X30, X19, [X31], #0x10
	0x01CB5F68 RET
	0x01CB5F6C ADRP X0, 0x2298000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+40]
	005 Compare X0, 0
	006 JumpIfEqual {21}
	007 Move W8, [X0+16]
	008 Move W9, [X19+32]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X2, X31
	011 Call String.Concat, X0, X1
	012 Move [X19+40], X0
	013 Move X0, X19
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Call Terminal.UpdateText, X0
	017 Return 
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return 
	021 Call 0x1B6FA1C

Method: System.Void Enter()

Disassembly:
	0x01CB5FB4 STP X30, X19, [X31 - 0x10]!
	0x01CB5FB8 LDR X8, [X0 + 0x50]
	0x01CB5FBC CBZ X8, 0x1CB5FD0
	0x01CB5FC0 STP S0, S1, [X8 + 0x4]
	0x01CB5FC4 STP S2, S3, [X8 + 0xC]
	0x01CB5FC8 LDP X30, X19, [X31], #0x10
	0x01CB5FCC RET
	0x01CB5FD0 ADRP X0, 0x2298000
	0x01CB5FD4 LDR X0, [X0 + 0x490]
	0x01CB5FD8 BL 0x1B6E804
	0x01CB5FDC BL 0x1B6EA0C
	0x01CB5FE0 MOV X19, X0
	0x01CB5FE4 ADRP X0, 0x2299000
	0x01CB5FE8 LDR X0, [X0 + 0xE00]
	0x01CB5FEC BL 0x1B6E804
	0x01CB5FF0 MOV X1, X0
	0x01CB5FF4 MOV X0, X19
	0x01CB5FF8 MOV X2, X31
	0x01CB5FFC BL 0x31E7550
	0x01CB6000 ADRP X0, 0x2298000
	0x01CB6004 LDR X0, [X0 + 0xE98]
	0x01CB6008 BL 0x1B6E804
	0x01CB600C MOV X1, X0
	0x01CB6010 MOV X0, X19
	0x01CB6014 BL 0x1B6E8E8
	0x01CB6018 STP X30, X19, [X31 - 0x10]!
	0x01CB601C LDR X8, [X0 + 0x50]
	0x01CB6020 CBZ X8, 0x1CB6034
	0x01CB6024 AND W9, W1, 0x1
	0x01CB6028 STR W9, [X8 + 0x14]
	0x01CB602C LDP X30, X19, [X31], #0x10
	0x01CB6030 RET
	0x01CB6034 ADRP X0, 0x2297000
	0x01CB6038 LDR X0, [X0 + 0x490]
	0x01CB603C BL 0x1B6E804
	0x01CB6040 BL 0x1B6EA0C
	0x01CB6044 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x256F000
	006 Move X21, 0x229A000
	007 Move W8, [X20+1242]
	008 Move X21, [X21+3600]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x229A000
	015 Move X0, [X0+3600]
	016 Call 0x1B6F7F0
	017 Move X0, 0x2299000
	018 Move X0, [X0+2072]
	019 Call 0x1B6F7F0
	020 Move W8, 1
	021 Move [X20+1242], W8
	022 Move X8, [X21]
	023 Move X8, [X8+184]
	024 Move X8, [X8+8]
	025 Compare X8, 0
	026 JumpIfEqual {45}
	027 Move X1, [X19+40]
	028 Move X9, [X8+24]
	029 Move X0, [X8+64]
	030 Move X2, [X8+40]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {45}
	036 Move X8, 0x2298000
	037 Move X8, [X8+2072]
	038 Move X0, X19
	039 Move X8, [X8]
	040 Move [X19+40], X8
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Return 

Method: System.Void Backspace()

Disassembly:
	0x01CB5F70 LDR X0, [X0 + 0x490]
	0x01CB5F74 BL 0x1B6E804
	0x01CB5F78 BL 0x1B6EA0C
	0x01CB5F7C MOV X19, X0
	0x01CB5F80 ADRP X0, 0x2299000
	0x01CB5F84 LDR X0, [X0 + 0xE80]
	0x01CB5F88 BL 0x1B6E804
	0x01CB5F8C MOV X1, X0
	0x01CB5F90 MOV X0, X19
	0x01CB5F94 MOV X2, X31
	0x01CB5F98 BL 0x31E7550
	0x01CB5F9C ADRP X0, 0x2299000
	0x01CB5FA0 LDR X0, [X0 + 0xE90]
	0x01CB5FA4 BL 0x1B6E804
	0x01CB5FA8 MOV X1, X0
	0x01CB5FAC MOV X0, X19
	0x01CB5FB0 BL 0x1B6E8E8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+40]
	005 Compare X0, 0
	006 JumpIfEqual {21}
	007 Move W8, [X0+16]
	008 Subtract W2, W8, 1
	009 Move W1, W31
	010 Move X3, X31
	011 Call String.Substring, X0, X1, X2
	012 Move [X19+40], X0
	013 Move X0, X19
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Call Terminal.UpdateText, X0
	017 Return 
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return 
	021 Call 0x1B6FA1C

Method: System.Void UpdateText()

Disassembly:
	0x01CB6048 ADRP X0, 0x2298000
	0x01CB604C LDR X0, [X0 + 0xDF0]
	0x01CB6050 BL 0x1B6E804
	0x01CB6054 MOV X1, X0
	0x01CB6058 MOV X0, X19
	0x01CB605C MOV X2, X31
	0x01CB6060 BL 0x31E7550
	0x01CB6064 ADRP X0, 0x2298000
	0x01CB6068 LDR X0, [X0 + 0xEA0]
	0x01CB606C BL 0x1B6E804
	0x01CB6070 MOV X1, X0
	0x01CB6074 MOV X0, X19
	0x01CB6078 BL 0x1B6E8E8
	0x01CB607C STP X30, X19, [X31 - 0x10]!
	0x01CB6080 LDR X8, [X0 + 0x50]
	0x01CB6084 CBZ X8, 0x1CB60AC
	0x01CB6088 MOV X19, X0
	0x01CB608C ADD X2, X0, 0x130
	0x01CB6090 ADD X0, X8, 0x18
	0x01CB6094 MOVZ W1, 0x10
	0x01CB6098 MOV X3, X31
	0x01CB609C BL 0x1D81958
	0x01CB60A0 LDR X0, [X19 + 0x130]
	0x01CB60A4 LDP X30, X19, [X31], #0x10
	0x01CB60A8 RET
	0x01CB60AC ADRP X0, 0x2297000
	0x01CB60B0 LDR X0, [X0 + 0x490]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x256E000
	006 Move X21, 0x2298000
	007 Move W8, [X19+1243]
	008 Move X21, [X21+3032]
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2298000
	015 Move X0, [X0+3032]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X19+1243], W8
	019 Move X0, [X20+40]
	020 Move X19, [X20+48]
	021 Move X1, [X21]
	022 Move X2, X31
	023 Call String.Concat, X0, X1
	024 Compare X19, 0
	025 JumpIfEqual {36}
	026 Move X8, [X19]
	027 Move X1, X0
	028 Move X0, X19
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X3, [X8+1368]
	032 Move X2, [X8+1376]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 CallNoReturn X3
	036 Call 0x1B6FA1C

Method: System.Void .ctor()

Disassembly:
	0x01CB60B4 BL 0x1B6E804
	0x01CB60B8 BL 0x1B6EA0C
	0x01CB60BC MOV X19, X0
	0x01CB60C0 ADRP X0, 0x2298000
	0x01CB60C4 LDR X0, [X0 + 0xEA8]
	0x01CB60C8 BL 0x1B6E804
	0x01CB60CC MOV X1, X0
	0x01CB60D0 MOV X0, X19
	0x01CB60D4 MOV X2, X31
	0x01CB60D8 BL 0x31E7550
	0x01CB60DC ADRP X0, 0x2298000
	0x01CB60E0 LDR X0, [X0 + 0xEB0]
	0x01CB60E4 BL 0x1B6E804
	0x01CB60E8 MOV X1, X0
	0x01CB60EC MOV X0, X19
	0x01CB60F0 BL 0x1B6E8E8
	0x01CB60F4 STP X30, X19, [X31 - 0x10]!
	0x01CB60F8 LDR X8, [X0 + 0x50]
	0x01CB60FC CBZ X8, 0x1CB611C
	0x01CB6100 MOV X2, X1
	0x01CB6104 ADD X3, X0, 0x130
	0x01CB6108 ADD X0, X8, 0x18

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x256E000
	006 Move X20, 0x2298000
	007 Move W8, [X21+1244]
	008 Move X20, [X20+2072]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2298000
	015 Move X0, [X0+2072]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X21+1244], W8
	019 Move W8, 8
	020 Move [X19+32], W8
	021 Move X8, [X20]
	022 Move X0, X19
	023 Move X1, X31
	024 Move [X19+40], X8
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call MonoBehaviour..ctor, X0
	030 Return 

