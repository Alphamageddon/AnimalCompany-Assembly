Type: AnimalCompany.RayMeshController

Method: System.Void Play(UnityEngine.Transform tip, System.Collections.Generic.List`1<UnityEngine.Vector3> rayDirections, System.Single shootSpread = 0.07, System.Single rayDistance = 20)

Disassembly:
	0x01DB14A8 RET
	0x01DB14AC STP X30, X19, [X31 - 0x10]!
	0x01DB14B0 LDR X8, [X0 + 0x50]
	0x01DB14B4 CBZ X8, 0x1DB14C4
	0x01DB14B8 LDRB W0, [X8]
	0x01DB14BC LDP X30, X19, [X31], #0x10
	0x01DB14C0 RET
	0x01DB14C4 ADRP X0, 0x2342000
	0x01DB14C8 LDR X0, [X0 + 0x5B0]
	0x01DB14CC BL 0x1C16D08
	0x01DB14D0 BL 0x1C16F10
	0x01DB14D4 MOV X19, X0
	0x01DB14D8 ADRP X0, 0x2346000
	0x01DB14DC LDR X0, [X0 + 0x9E0]
	0x01DB14E0 BL 0x1C16D08
	0x01DB14E4 MOV X1, X0
	0x01DB14E8 MOV X0, X19
	0x01DB14EC MOV X2, X31
	0x01DB14F0 BL 0x337DF1C
	0x01DB14F4 ADRP X0, 0x2346000
	0x01DB14F8 LDR X0, [X0 + 0x9E8]
	0x01DB14FC BL 0x1C16D08
	0x01DB1500 MOV X1, X0
	0x01DB1504 MOV X0, X19
	0x01DB1508 BL 0x1C16DEC
	0x01DB150C STP X30, X19, [X31 - 0x10]!
	0x01DB1510 LDR X8, [X0 + 0x50]
	0x01DB1514 CBZ X8, 0x1DB1524
	0x01DB1518 STRB W1, [X8]
	0x01DB151C LDP X30, X19, [X31], #0x10
	0x01DB1520 RET
	0x01DB1524 ADRP X0, 0x2342000
	0x01DB1528 LDR X0, [X0 + 0x5B0]
	0x01DB152C BL 0x1C16D08
	0x01DB1530 BL 0x1C16F10
	0x01DB1534 MOV X19, X0
	0x01DB1538 ADRP X0, 0x2346000
	0x01DB153C LDR X0, [X0 + 0x9E0]
	0x01DB1540 BL 0x1C16D08
	0x01DB1544 MOV X1, X0
	0x01DB1548 MOV X0, X19
	0x01DB154C MOV X2, X31
	0x01DB1550 BL 0x337DF1C
	0x01DB1554 ADRP X0, 0x2346000
	0x01DB1558 LDR X0, [X0 + 0x9F0]
	0x01DB155C BL 0x1C16D08
	0x01DB1560 MOV X1, X0
	0x01DB1564 MOV X0, X19
	0x01DB1568 BL 0x1C16DEC
	0x01DB156C STP X30, X19, [X31 - 0x10]!
	0x01DB1570 LDR X8, [X0 + 0x50]
	0x01DB1574 CBZ X8, 0x1DB1584
	0x01DB1578 LDRB W0, [X8 + 0x4]
	0x01DB157C LDP X30, X19, [X31], #0x10
	0x01DB1580 RET
	0x01DB1584 ADRP X0, 0x2342000
	0x01DB1588 LDR X0, [X0 + 0x5B0]
	0x01DB158C BL 0x1C16D08
	0x01DB1590 BL 0x1C16F10
	0x01DB1594 MOV X19, X0
	0x01DB1598 ADRP X0, 0x2346000
	0x01DB159C LDR X0, [X0 + 0x9F8]
	0x01DB15A0 BL 0x1C16D08
	0x01DB15A4 MOV X1, X0
	0x01DB15A8 MOV X0, X19
	0x01DB15AC MOV X2, X31
	0x01DB15B0 BL 0x337DF1C
	0x01DB15B4 ADRP X0, 0x2346000
	0x01DB15B8 LDR X0, [X0 + 0xA00]
	0x01DB15BC BL 0x1C16D08
	0x01DB15C0 MOV X1, X0
	0x01DB15C4 MOV X0, X19
	0x01DB15C8 BL 0x1C16DEC
	0x01DB15CC STP X30, X19, [X31 - 0x10]!
	0x01DB15D0 LDR X8, [X0 + 0x50]
	0x01DB15D4 CBZ X8, 0x1DB15E4
	0x01DB15D8 STRB W1, [X8 + 0x4]
	0x01DB15DC LDP X30, X19, [X31], #0x10
	0x01DB15E0 RET
	0x01DB15E4 ADRP X0, 0x2342000
	0x01DB15E8 LDR X0, [X0 + 0x5B0]
	0x01DB15EC BL 0x1C16D08
	0x01DB15F0 BL 0x1C16F10
	0x01DB15F4 MOV X19, X0
	0x01DB15F8 ADRP X0, 0x2346000
	0x01DB15FC LDR X0, [X0 + 0x9F8]
	0x01DB1600 BL 0x1C16D08
	0x01DB1604 MOV X1, X0
	0x01DB1608 MOV X0, X19
	0x01DB160C MOV X2, X31
	0x01DB1610 BL 0x337DF1C
	0x01DB1614 ADRP X0, 0x2346000
	0x01DB1618 LDR X0, [X0 + 0xA08]
	0x01DB161C BL 0x1C16D08
	0x01DB1620 MOV X1, X0
	0x01DB1624 MOV X0, X19
	0x01DB1628 BL 0x1C16DEC
	0x01DB162C STP X30, X19, [X31 - 0x10]!
	0x01DB1630 LDR X8, [X0 + 0x50]
	0x01DB1634 CBZ X8, 0x1DB1644
	0x01DB1638 LDRH W0, [X8 + 0x8]
	0x01DB163C LDP X30, X19, [X31], #0x10
	0x01DB1640 RET
	0x01DB1644 ADRP X0, 0x2342000
	0x01DB1648 LDR X0, [X0 + 0x5B0]
	0x01DB164C BL 0x1C16D08
	0x01DB1650 BL 0x1C16F10
	0x01DB1654 MOV X19, X0
	0x01DB1658 ADRP X0, 0x2346000
	0x01DB165C LDR X0, [X0 + 0xA10]
	0x01DB1660 BL 0x1C16D08
	0x01DB1664 MOV X1, X0
	0x01DB1668 MOV X0, X19
	0x01DB166C MOV X2, X31
	0x01DB1670 BL 0x337DF1C
	0x01DB1674 ADRP X0, 0x2346000
	0x01DB1678 LDR X0, [X0 + 0xA18]
	0x01DB167C BL 0x1C16D08
	0x01DB1680 MOV X1, X0
	0x01DB1684 MOV X0, X19
	0x01DB1688 BL 0x1C16DEC
	0x01DB168C STP X30, X19, [X31 - 0x10]!
	0x01DB1690 LDR X8, [X0 + 0x50]
	0x01DB1694 CBZ X8, 0x1DB16A4
	0x01DB1698 STRH W1, [X8 + 0x8]
	0x01DB169C LDP X30, X19, [X31], #0x10
	0x01DB16A0 RET
	0x01DB16A4 ADRP X0, 0x2342000
	0x01DB16A8 LDR X0, [X0 + 0x5B0]
	0x01DB16AC BL 0x1C16D08
	0x01DB16B0 BL 0x1C16F10
	0x01DB16B4 MOV X19, X0
	0x01DB16B8 ADRP X0, 0x2346000
	0x01DB16BC LDR X0, [X0 + 0xA10]
	0x01DB16C0 BL 0x1C16D08
	0x01DB16C4 MOV X1, X0
	0x01DB16C8 MOV X0, X19
	0x01DB16CC MOV X2, X31
	0x01DB16D0 BL 0x337DF1C
	0x01DB16D4 ADRP X0, 0x2346000
	0x01DB16D8 LDR X0, [X0 + 0xA20]
	0x01DB16DC BL 0x1C16D08
	0x01DB16E0 MOV X1, X0
	0x01DB16E4 MOV X0, X19
	0x01DB16E8 BL 0x1C16DEC
	0x01DB16EC STR D8, [X31 - 0x30]!
	0x01DB16F0 STP X30, X21, [X31 + 0x10]
	0x01DB16F4 STP X20, X19, [X31 + 0x20]
	0x01DB16F8 MOV X21, X0
	0x01DB16FC BL 0x1DB156C
	0x01DB1700 MOV W20, W0
	0x01DB1704 MOV X0, X21
	0x01DB1708 BL 0x1DB162C
	0x01DB170C MOV W19, W0
	0x01DB1710 MOV X0, X21
	0x01DB1714 MOV X1, X31
	0x01DB1718 BL 0x3C32E90
	0x01DB171C CBZ X0, 0x1DB1758
	0x01DB1720 AND W8, W20, 0xFF
	0x01DB1724 MOVZ W9, 0x437F0000
	0x01DB1728 UCVTF S0, W8
	0x01DB172C FMOV S1, W9
	0x01DB1730 MOV X1, X31
	0x01DB1734 FDIV S8, S0, S1
	0x01DB1738 BL 0x3C3F58C
	0x01DB173C MOV W0, W19
	0x01DB1740 LDP X20, X19, [X31 + 0x20]
	0x01DB1744 LDP X30, X21, [X31 + 0x10]
	0x01DB1748 MOV V3.16B, V8.16B
	0x01DB174C MOV X1, X31
	0x01DB1750 LDR V8, [X31], #0x30
	0x01DB1754 B 0x1DD253C
	0x01DB1758 BL 0x1C16F20
	0x01DB175C SUB X31, X31, 0x30
	0x01DB1760 STR D8, [X31 + 0x10]
	0x01DB1764 STR X30, [X31 + 0x18]
	0x01DB1768 STP X20, X19, [X31 + 0x20]
	0x01DB176C MOV X8, X1
	0x01DB1770 MOV X19, X0
	0x01DB1774 ADD X1, X31, 0xC
	0x01DB1778 MOV X0, X8
	0x01DB177C MOV X2, X31
	0x01DB1780 MOV V8.16B, V0.16B
	0x01DB1784 STRH W31, [X31 + 0xC]
	0x01DB1788 BL 0x1DD21D0
	0x01DB178C TBZ X0, 0x0, 0x1DB1844
	0x01DB1790 LDRH W1, [X31 + 0xC]
	0x01DB1794 MOV X0, X19
	0x01DB1798 BL 0x1DB168C
	0x01DB179C MOVZ W8, 0x437F0000
	0x01DB17A0 ADRP X20, 0x2627000
	0x01DB17A4 FMOV S0, 1
	0x01DB17A8 FMOV S1, W8
	0x01DB17AC LDRB W8, [X20 + 0xA23]
	0x01DB17B0 FMIN S0, S8, S0
	0x01DB17B4 FMUL S0, S0, S1
	0x01DB17B8 FCMP S8, 0x0
	0x01DB17BC FMOV S1, W31
	0x01DB17C0 FCSEL S8, S0, S1, PL
	0x01DB17C4 CBNZ W8, 0x1DB17DC
	0x01DB17C8 ADRP X0, 0x2342000
	0x01DB17CC LDR X0, [X0 + 0x5A8]
	0x01DB17D0 BL 0x1C16CF4
	0x01DB17D4 MOVZ W8, 0x1
	0x01DB17D8 STRB W8, [X20 + 0xA23]
	0x01DB17DC ADRP X8, 0x2342000
	0x01DB17E0 LDR X8, [X8 + 0x5A8]
	0x01DB17E4 LDR X0, [X8]
	0x01DB17E8 LDR W8, [X0 + 0xE0]
	0x01DB17EC CBNZ W8, 0x1DB17F4
	0x01DB17F0 BL 0x1C16DFC
	0x01DB17F4 MOVZ W8, 0x7F800000
	0x01DB17F8 FRINTM S0, S8
	0x01DB17FC FMOV S1, W8
	0x01DB1800 FCVTMS W9, S8
	0x01DB1804 FCMP S0, S1
	0x01DB1808 CSEL W1, W31, W9, EQ
	0x01DB180C MOV X0, X19
	0x01DB1810 BL 0x1DB15CC
	0x01DB1814 MOV X0, X19
	0x01DB1818 BL 0x1DB14AC
	0x01DB181C AND W8, W0, 0xFF
	0x01DB1820 MOVZ W9, 0x8081
	0x01DB1824 ADD W8, W8, 0x1
	0x01DB1828 MOVK W9, 0x80800000
	0x01DB182C UMADDL X9, X8, X9, X31
	0x01DB1830 UBFM X9, X9, 0x27, 0x3F
	0x01DB1834 SUB W9, W9, W9, 0x8, LSL
	0x01DB1838 ADD W1, W8, W9
	0x01DB183C MOV X0, X19
	0x01DB1840 BL 0x1DB150C
	0x01DB1844 LDP X20, X19, [X31 + 0x20]
	0x01DB1848 LDR X30, [X31 + 0x18]
	0x01DB184C LDR V8, [X31 + 0x10]
	0x01DB1850 ADD X31, X31, 0x30
	0x01DB1854 RET
	0x01DB1858 MOV X1, X31
	0x01DB185C B 0x1E74F04
	0x01DB1860 STP X30, X19, [X31 - 0x10]!
	0x01DB1864 LDRB W1, [X0 + 0x80]
	0x01DB1868 MOV X19, X0
	0x01DB186C BL 0x1DB150C
	0x01DB1870 LDRB W1, [X19 + 0x81]
	0x01DB1874 MOV X0, X19
	0x01DB1878 BL 0x1DB15CC
	0x01DB187C LDRH W1, [X19 + 0x82]
	0x01DB1880 MOV X0, X19
	0x01DB1884 LDP X30, X19, [X31], #0x10
	0x01DB1888 B 0x1DB168C
	0x01DB188C STP X30, X19, [X31 - 0x10]!
	0x01DB1890 MOV X19, X0
	0x01DB1894 BL 0x1DB14AC
	0x01DB1898 STRB W0, [X19 + 0x80]
	0x01DB189C MOV X0, X19
	0x01DB18A0 BL 0x1DB156C
	0x01DB18A4 STRB W0, [X19 + 0x81]
	0x01DB18A8 MOV X0, X19
	0x01DB18AC BL 0x1DB162C
	0x01DB18B0 STRH W0, [X19 + 0x82]
	0x01DB18B4 LDP X30, X19, [X31], #0x10
	0x01DB18B8 RET
	0x01DB18BC STP X30, X19, [X31 - 0x10]!
	0x01DB18C0 LDR X8, [X0 + 0x50]
	0x01DB18C4 CBZ X8, 0x1DB18D8
	0x01DB18C8 AND W9, W1, 0x1
	0x01DB18CC STR W9, [X8]
	0x01DB18D0 LDP X30, X19, [X31], #0x10
	0x01DB18D4 RET
	0x01DB18D8 ADRP X0, 0x2342000
	0x01DB18DC LDR X0, [X0 + 0x5B0]
	0x01DB18E0 BL 0x1C16D08
	0x01DB18E4 BL 0x1C16F10
	0x01DB18E8 MOV X19, X0
	0x01DB18EC ADRP X0, 0x2346000
	0x01DB18F0 LDR X0, [X0 + 0x8E0]
	0x01DB18F4 BL 0x1C16D08

ISIL:
	001 Subtract X31, X31, 432
	002 Move [X31+272], D15
	003 Move [X31+280], D14
	004 Move [X31+288], D13
	005 Move [X31+296], D12
	006 Move [X31+304], D11
	007 Move [X31+312], D10
	008 Move [X31+320], D9
	009 Move [X31+328], D8
	010 Move [X31+336], X29
	011 Move [X31+344], X30
	012 Move [X31+352], X28
	013 Move [X31+360], X27
	014 Move [X31+368], X26
	015 Move [X31+376], X25
	016 Move [X31+384], X24
	017 Move [X31+392], X23
	018 Move [X31+400], X22
	019 Move [X31+408], X21
	020 Move [X31+416], X20
	021 Move [X31+424], X19
	022 Move X22, 0x2628000
	023 Move X23, 0x2347000
	024 Move W8, [X22+2799]
	025 Move X23, [X23+2416]
	026 Move V9, V1
	027 Move V8, V0
	028 Move X21, X2
	029 Move X20, X1
	030 Move X19, X0
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {49}
	035 Move X0, 0x2347000
	036 Move X0, [X0+2424]
	037 Call 0x1C17CF4
	038 Move X0, 0x2347000
	039 Move X0, [X0+2432]
	040 Call 0x1C17CF4
	041 Move X0, 0x2347000
	042 Move X0, [X0+2440]
	043 Call 0x1C17CF4
	044 Move X0, 0x2347000
	045 Move X0, [X0+2416]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X22+2799], W8
	049 Move X0, [X23]
	050 Move X22, [X19+40]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Compare X22, 0
	056 JumpIfEqual {294}
	057 Move X8, [X23]
	058 Move V0, [X19+48]
	059 Move X0, X22
	060 Move X2, X31
	061 Move X8, [X8+184]
	062 Move W1, [X8]
	063 Call Material.SetFloat, X0, X1, V0
	064 Move X0, [X19+40]
	065 Compare X0, 0
	066 JumpIfEqual {294}
	067 Move X8, [X23]
	068 Move V0, V9
	069 Move X2, X31
	070 Move X8, [X8+184]
	071 Move W1, [X8+4]
	072 Call Material.SetFloat, X0, X1, V0
	073 Move X8, [X23]
	074 Move X23, [X19+40]
	075 Move X0, X31
	076 Move X8, [X8+184]
	077 Move W22, [X8+8]
	078 Call Time.get_time
	079 Compare X23, 0
	080 JumpIfEqual {294}
	081 Move X24, 0x2347000
	082 Move X24, [X24+2440]
	083 Move X0, X23
	084 Move W1, W22
	085 Move X2, X31
	086 Call Material.SetFloat, X0, X1, V0
	087 Compare X21, 0
	088 JumpIfEqual {172}
	089 Move W1, [X21+24]
	090 Compare W1, 0
	091 JumpIfEqual {172}
	092 Move X0, [X24]
	093 Call 0x1C17D6C
	094 Move [X19+64], X0
	095 Compare X0, 0
	096 JumpIfEqual {294}
	097 Move X26, 0x2347000
	098 Move X24, 0x2343000
	099 Move X26, [X26+2432]
	100 Move X24, [X24+1440]
	101 Move X22, X0
	102 Move X23, X31
	103 Move W25, 32
	104 Move X27, 0x2628000
	105 Move W28, 1
	106 NotImplemented "Instruction LDRSW not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Compare X20, 0
	109 JumpIfEqual {294}
	110 Move X0, X20
	111 Move X1, X31
	112 Call Transform.get_position, X0
	113 Move X2, [X26]
	114 Move X0, X21
	115 Move W1, W23
	116 Move V8, V0
	117 Move V9, V1
	118 Move V10, V2
	119 Call List`1<Vector3>.get_Item, X0, X1
	120 Move X0, X31
	121 Call Quaternion.LookRotation, X0
	122 Move W8, [X27+2139]
	123 Move V11, V0
	124 Move V12, V1
	125 Move V13, V2
	126 Move V14, V3
	127 Compare W8, 0
	128 JumpIfNotEqual {132}
	129 Move X0, X24
	130 Call 0x1C17CF4
	131 Move [X27+2139], W28
	132 Move X8, [X24]
	133 Move V1, V9
	134 Move V2, V10
	135 Move V3, V11
	136 Move X8, [X8+184]
	137 Move V4, V12
	138 Move V5, V13
	139 Move V6, V14
	140 Move V0, [X8+20]
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 Add X8, X31, 208
	143 Move X0, X31
	144 Move [X31+8], S0
	145 Move V0, V8
	146 Move [X31], X9
	147 Call Matrix4x4.TRS, X0, X1, X2
	148 Move V0, [X31+208]
	149 Move V1, [X31+224]
	150 Move V2, [X31+240]
	151 Move V3, [X31+256]
	152 Move [X31+16], V0
	153 Move [X31+24], V1
	154 Move [X31+48], V2
	155 Move [X31+56], V3
	156 Move W8, [X22+24]
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move V0, [X31+48]
	159 Move V1, [X31+64]
	160 Move V2, [X31+16]
	161 Move V3, [X31+32]
	162 Add X8, X22, X25
	163 Add X25, X25, 64
	164 Move [X8+32], V0
	165 Move [X8+40], V1
	166 Move [X8], V2
	167 Move [X8+8], V3
	168 Move X22, [X19+64]
	169 Add X23, X23, 1
	170 Compare X22, 0
	171 JumpIfNotEqual {106}
	172 Move X0, [X24]
	173 Move W1, 20
	174 Call 0x1C17D6C
	175 Move [X19+64], X0
	176 Compare X0, 0
	177 JumpIfEqual {294}
	178 Move X21, 0x2343000
	179 Move X21, [X21+1440]
	180 Move X22, X31
	181 Move W23, 32
	182 Move X24, 0x2628000
	183 Move W25, 1
	184 NotImplemented "Instruction LDRSW not yet implemented."
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X0, X31
	187 Call Random.get_value
	188 Move X0, X31
	189 Move V9, V0
	190 Call Random.get_value
	191 Compare X20, 0
	192 JumpIfEqual {294}
	193 Move S2, -0.5
	194 Add S1, S9, S2
	195 Add S0, S0, S2
	196 Move X0, X20
	197 Move X1, X31
	198 Multiply S12, S1, S8
	199 Multiply S13, S0, S8
	200 Call Transform.get_forward, X0
	201 Move X0, X20
	202 Move X1, X31
	203 Move V9, V0
	204 Move V10, V1
	205 Move V11, V2
	206 Call Transform.get_right, X0
	207 Multiply S0, S12, S0
	208 Multiply S1, S12, S1
	209 Multiply S2, S12, S2
	210 Move X0, X20
	211 Move X1, X31
	212 Add S9, S9, S0
	213 Add S10, S10, S1
	214 Add S11, S11, S2
	215 Call Transform.get_up, X0
	216 Move X26, [X19+64]
	217 Multiply S0, S13, S0
	218 Multiply S1, S13, S1
	219 Multiply S2, S13, S2
	220 Move X0, X20
	221 Move X1, X31
	222 Add S12, S9, S0
	223 Add S13, S10, S1
	224 Add S14, S11, S2
	225 Call Transform.get_position, X0
	226 Move V9, V0
	227 Move V10, V1
	228 Move V11, V2
	229 Move V0, V12
	230 Move V1, V13
	231 Move V2, V14
	232 Move X0, X31
	233 Call Quaternion.LookRotation, X0
	234 Move W8, [X24+2139]
	235 Move V12, V0
	236 Move V13, V1
	237 Move V14, V2
	238 Move V15, V3
	239 Compare W8, 0
	240 JumpIfNotEqual {244}
	241 Move X0, X21
	242 Call 0x1C17CF4
	243 Move [X24+2139], W25
	244 Move X8, [X21]
	245 Move V1, V10
	246 Move V2, V11
	247 Move V3, V12
	248 Move X8, [X8+184]
	249 Move V4, V13
	250 Move V5, V14
	251 Move V6, V15
	252 Move V0, [X8+20]
	253 NotImplemented "Instruction LDUR not yet implemented."
	254 Add X8, X31, 144
	255 Move X0, X31
	256 Move [X31+8], S0
	257 Move V0, V9
	258 Move [X31], X9
	259 Call Matrix4x4.TRS, X0, X1, X2
	260 Move V0, [X31+144]
	261 Move V1, [X31+160]
	262 Move V2, [X31+176]
	263 Move V3, [X31+192]
	264 Move [X31+208], V0
	265 Move [X31+216], V1
	266 Move [X31+240], V2
	267 Move [X31+248], V3
	268 Compare X26, 0
	269 JumpIfEqual {294}
	270 Move V0, [X31+208]
	271 Move V1, [X31+224]
	272 Move V2, [X31+240]
	273 Move V3, [X31+256]
	274 Move [X31+80], V0
	275 Move [X31+88], V1
	276 Move [X31+112], V2
	277 Move [X31+120], V3
	278 Move W8, [X26+24]
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Move V0, [X31+112]
	281 Move V1, [X31+128]
	282 Move V2, [X31+80]
	283 Move V3, [X31+96]
	284 Add X8, X26, X23
	285 Add X23, X23, 64
	286 Move [X8+32], V0
	287 Move [X8+40], V1
	288 Move [X8], V2
	289 Move [X8+8], V3
	290 Move X0, [X19+64]
	291 Add X22, X22, 1
	292 Compare X0, 0
	293 JumpIfNotEqual {184}
	294 Call 0x1C17F20
	295 Move X1, [X19+56]
	296 Compare X1, 0
	297 JumpIfEqual {301}
	298 Move X0, X19
	299 Move X2, X31
	300 Call MonoBehaviour.StopCoroutine, X0, X1
	301 Move X0, X19
	302 Call RayMeshController.PlayCoroutine, X0
	303 Move X1, X0
	304 Move [X19+56], X0
	305 Move X0, X19
	306 Move X2, X31
	307 Call MonoBehaviour.StartCoroutine, X0, X1
	308 Move X20, [X31+416]
	309 Move X19, [X31+424]
	310 Move X22, [X31+400]
	311 Move X21, [X31+408]
	312 Move X24, [X31+384]
	313 Move X23, [X31+392]
	314 Move X26, [X31+368]
	315 Move X25, [X31+376]
	316 Move X28, [X31+352]
	317 Move X27, [X31+360]
	318 Move X29, [X31+336]
	319 Move X30, [X31+344]
	320 Move D9, [X31+320]
	321 Move D8, [X31+328]
	322 Move D11, [X31+304]
	323 Move D10, [X31+312]
	324 Move D13, [X31+288]
	325 Move D12, [X31+296]
	326 Move D15, [X31+272]
	327 Move D14, [X31+280]
	328 Add X31, X31, 432
	329 Return 
	330 Call 0x1C17F28

Method: System.Collections.IEnumerator PlayCoroutine()

Disassembly:
	0x01DB18F8 MOV X1, X0
	0x01DB18FC MOV X0, X19
	0x01DB1900 MOV X2, X31
	0x01DB1904 BL 0x337DF1C
	0x01DB1908 ADRP X0, 0x2346000
	0x01DB190C LDR X0, [X0 + 0xA28]
	0x01DB1910 BL 0x1C16D08
	0x01DB1914 MOV X1, X0
	0x01DB1918 MOV X0, X19
	0x01DB191C BL 0x1C16DEC
	0x01DB1920 MOV X8, X0
	0x01DB1924 LDR X0, [X0 + 0x38]
	0x01DB1928 CBZ X0, 0x1DB1938
	0x01DB192C LDR X1, [X8 + 0x40]
	0x01DB1930 MOV X2, X31
	0x01DB1934 B 0x1EA1A20
	0x01DB1938 RET
	0x01DB193C STP X30, X19, [X31 - 0x10]!
	0x01DB1940 MOV X19, X0
	0x01DB1944 LDR X0, [X0 + 0x38]
	0x01DB1948 CBZ X0, 0x1DB1968
	0x01DB194C LDR X1, [X19 + 0x40]
	0x01DB1950 MOV X2, X31
	0x01DB1954 BL 0x1EA1A20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2628000
	006 Move X21, 0x2347000
	007 Move W8, [X20+2800]
	008 Move X21, [X21+2448]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2347000
	015 Move X0, [X0+2448]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2800], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move [X20+16], W31
	025 Move [X20+32], X19
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Void .ctor()

Disassembly:
	0x01DB1980 MOV X19, X0
	0x01DB1984 ADD X2, X0, 0x1E0
	0x01DB1988 ADD X0, X8, 0x4
	0x01DB198C MOVZ W1, 0x10
	0x01DB1990 MOV X3, X31

ISIL:
	001 Move W8, 0xCCCD
	002 NotImplemented "Instruction MOVK not yet implemented."
	003 Move X1, X31
	004 Move [X0+48], W8
	005 Call MonoBehaviour..ctor, X0
	006 Return 

Method: System.Void .cctor()

Disassembly:
	0x01DB1994 BL 0x1E8DF74
	0x01DB1998 LDR X0, [X19 + 0x1E0]
	0x01DB199C LDP X30, X19, [X31], #0x10
	0x01DB19A0 RET
	0x01DB19A4 ADRP X0, 0x2342000
	0x01DB19A8 LDR X0, [X0 + 0x5B0]
	0x01DB19AC BL 0x1C16D08
	0x01DB19B0 BL 0x1C16F10
	0x01DB19B4 MOV X19, X0
	0x01DB19B8 ADRP X0, 0x2346000
	0x01DB19BC LDR X0, [X0 + 0xA30]
	0x01DB19C0 BL 0x1C16D08
	0x01DB19C4 MOV X1, X0
	0x01DB19C8 MOV X0, X19
	0x01DB19CC MOV X2, X31
	0x01DB19D0 BL 0x337DF1C
	0x01DB19D4 ADRP X0, 0x2346000
	0x01DB19D8 LDR X0, [X0 + 0xA38]
	0x01DB19DC BL 0x1C16D08
	0x01DB19E0 MOV X1, X0
	0x01DB19E4 MOV X0, X19
	0x01DB19E8 BL 0x1C16DEC
	0x01DB19EC STP X30, X19, [X31 - 0x10]!
	0x01DB19F0 LDR X8, [X0 + 0x50]
	0x01DB19F4 CBZ X8, 0x1DB1A14
	0x01DB19F8 MOV X2, X1
	0x01DB19FC ADD X3, X0, 0x1E0
	0x01DB1A00 ADD X0, X8, 0x4
	0x01DB1A04 MOVZ W1, 0x10
	0x01DB1A08 MOV X4, X31
	0x01DB1A0C LDP X30, X19, [X31], #0x10
	0x01DB1A10 B 0x1E8DEC4
	0x01DB1A14 ADRP X0, 0x2342000
	0x01DB1A18 LDR X0, [X0 + 0x5B0]
	0x01DB1A1C BL 0x1C16D08
	0x01DB1A20 BL 0x1C16F10
	0x01DB1A24 MOV X19, X0
	0x01DB1A28 ADRP X0, 0x2346000
	0x01DB1A2C LDR X0, [X0 + 0xA30]
	0x01DB1A30 BL 0x1C16D08
	0x01DB1A34 MOV X1, X0
	0x01DB1A38 MOV X0, X19
	0x01DB1A3C MOV X2, X31
	0x01DB1A40 BL 0x337DF1C
	0x01DB1A44 ADRP X0, 0x2346000
	0x01DB1A48 LDR X0, [X0 + 0xA40]
	0x01DB1A4C BL 0x1C16D08
	0x01DB1A50 MOV X1, X0
	0x01DB1A54 MOV X0, X19
	0x01DB1A58 BL 0x1C16DEC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x2628000
	008 Move X23, 0x2347000
	009 Move X19, 0x2347000
	010 Move X21, 0x2347000
	011 Move X20, 0x2347000
	012 Move W8, [X22+2801]
	013 Move X23, [X23+2456]
	014 Move X19, [X19+2416]
	015 Move X21, [X21+2464]
	016 Move X20, [X20+2472]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0x2347000
	022 Move X0, [X0+2416]
	023 Call 0x1C17CF4
	024 Move X0, 0x2347000
	025 Move X0, [X0+2464]
	026 Call 0x1C17CF4
	027 Move X0, 0x2347000
	028 Move X0, [X0+2472]
	029 Call 0x1C17CF4
	030 Move X0, 0x2347000
	031 Move X0, [X0+2456]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+2801], W8
	035 Move X0, [X23]
	036 Move X1, X31
	037 Call Shader.PropertyToID, X0
	038 Move X8, [X19]
	039 Move X1, X31
	040 Move X8, [X8+184]
	041 Move [X8], W0
	042 Move X0, [X21]
	043 Call Shader.PropertyToID, X0
	044 Move X8, [X19]
	045 Move X1, X31
	046 Move X8, [X8+184]
	047 Move [X8+4], W0
	048 Move X0, [X20]
	049 Call Shader.PropertyToID, X0
	050 Move X8, [X19]
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X8, [X8+184]
	056 Move [X8+8], W0
	057 Move X30, [X31+48]
	058 Move X23, [X31+56]
	059 Return 

