Type: AnimalCompany.AttachedItemAnchor

Method: Fusion.NetworkBehaviourId get_grabbedItem()

Disassembly:
	0x01D890C4 STP S3, S2, [X31 + 0x80]
	0x01D890C8 STR S14, [X31 + 0x98]
	0x01D890CC AND W2, W19, 0x1
	0x01D890D0 STR S11, [X31 + 0x88]
	0x01D890D4 MOV X0, X20
	0x01D890D8 MOV X1, X21
	0x01D890DC MOV V0.16B, V15.16B
	0x01D890E0 MOV V1.16B, V10.16B
	0x01D890E4 MOV V2.16B, V9.16B
	0x01D890E8 MOV V3.16B, V8.16B
	0x01D890EC MOV V4.16B, V13.16B
	0x01D890F0 MOV V5.16B, V12.16B
	0x01D890F4 LDP X20, X19, [X31 + 0x70]
	0x01D890F8 LDP X22, X21, [X31 + 0x60]
	0x01D890FC LDR X30, [X31 + 0x50]
	0x01D89100 LDP D9, D8, [X31 + 0x40]
	0x01D89104 LDP D11, D10, [X31 + 0x30]
	0x01D89108 LDP D13, D12, [X31 + 0x20]
	0x01D8910C LDP D15, D14, [X31 + 0x10]
	0x01D89110 ADD X31, X31, 0x80
	0x01D89114 B 0x1D892FC
	0x01D89118 STP S3, S2, [X31 + 0x4]
	0x01D8911C STR S1, [X31 + 0xC]
	0x01D89120 STP S0, S6, [X31 + 0x58]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move X0, [X8]
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0
	010 Move X0, 0x236B000
	011 Move X0, [X0+1456]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0x236E000
	016 Move X0, [X0+2584]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x236E000
	023 Move X0, [X0+2592]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: System.Void set_grabbedItem(Fusion.NetworkBehaviourId value)

Disassembly:
	0x01D89124 ADRP X22, 0x236D000
	0x01D89128 LDR X22, [X22 + 0xA78]
	0x01D8912C LDR X0, [X22]
	0x01D89130 LDR W8, [X0 + 0xE0]
	0x01D89134 CBNZ W8, 0x1D8913C
	0x01D89138 BL 0x1C16DFC
	0x01D8913C MOV X0, X20
	0x01D89140 MOV X1, X31
	0x01D89144 BL 0x1E77B08
	0x01D89148 LDR X0, [X20 + 0x38]
	0x01D8914C CBZ X0, 0x1D892F8
	0x01D89150 MOV X1, X31
	0x01D89154 BL 0x1E9E538
	0x01D89158 CMP W0, 0x4
	0x01D8915C B.NE 0x1D89184
	0x01D89160 LDP X20, X19, [X31 + 0x70]
	0x01D89164 LDP X22, X21, [X31 + 0x60]
	0x01D89168 LDR X30, [X31 + 0x50]
	0x01D8916C LDP D9, D8, [X31 + 0x40]
	0x01D89170 LDP D11, D10, [X31 + 0x30]
	0x01D89174 LDP D13, D12, [X31 + 0x20]
	0x01D89178 LDP D15, D14, [X31 + 0x10]
	0x01D8917C ADD X31, X31, 0x80
	0x01D89180 RET

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move [X8], X1
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 
	010 Move X0, 0x236B000
	011 Move X0, [X0+1456]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0x236E000
	016 Move X0, [X0+2584]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x236E000
	023 Move X0, [X0+2600]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: UnityEngine.Vector3 get_velocity()

Disassembly:
	0x01D89184 LDR X0, [X20 + 0x40]
	0x01D89188 CBZ X0, 0x1D892F8
	0x01D8918C MOV X1, X31

ISIL:
	001 Move S0, [X0+168]
	002 Move S1, [X0+172]
	003 Move V2, [X0+176]
	004 Return X0

Method: AnimalCompany.GrabbableItem get_grabbableItem()

Disassembly:
	0x01D89190 BL 0x1E94078
	0x01D89194 ANDS W31, W0, 0x3

ISIL:
	001 Move X0, [X0+192]
	002 Return X0

Method: System.Boolean get_affectMovementWhileAttached()

Disassembly:
	0x01D89198 B.EQ 0x1D891F4
	0x01D8919C MOV W8, W0

ISIL:
	001 Move W0, [X0+132]
	002 Return X0

Method: System.Boolean get_isHand()

Disassembly:
	0x01D891A0 LDR X0, [X20 + 0x38]
	0x01D891A4 TBNZ X8, 0x0, 0x1D89244
	0x01D891A8 CBZ X0, 0x1D892F8
	0x01D891AC LDR X0, [X0 + 0x50]

ISIL:
	001 Move W8, [X0+128]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: AnimalCompany.GrabbableItem get_rootGrabbable()

Disassembly:
	0x01D891B0 CBZ X0, 0x1D892F8
	0x01D891B4 MOV X1, X31

ISIL:
	001 Move X0, [X0+200]
	002 Return X0

Method: System.Void Spawned()

Disassembly:
	0x01D891B8 BL 0x1EC4D00
	0x01D891BC TBZ X0, 0x0, 0x1D89160
	0x01D891C0 LDR X8, [X20 + 0x38]
	0x01D891C4 CBZ X8, 0x1D892F8
	0x01D891C8 LDR X0, [X8 + 0x50]
	0x01D891CC MOVZ W1, 0x48
	0x01D891D0 MOV X2, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call NetworkBehaviour.Spawned, X0
	006 Move X0, X19
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]

Method: System.Void Despawned(Fusion.NetworkRunner runner, System.Boolean hasState)

Disassembly:
	0x01D895F8 CBZ X0, 0x1D896B4
	0x01D895FC MOV X1, X31
	0x01D89600 BL 0x1EC4D00
	0x01D89604 TBZ X0, 0x0, 0x1D895C4
	0x01D89608 LDR X8, [X19 + 0x38]
	0x01D8960C CBZ X8, 0x1D896B4
	0x01D89610 LDR X0, [X8 + 0x50]
	0x01D89614 MOVZ W1, 0x8
	0x01D89618 MOV X2, X31
	0x01D8961C BL 0x1ED9318
	0x01D89620 LDR X8, [X19 + 0x40]
	0x01D89624 CBZ X8, 0x1D896B4
	0x01D89628 LDR X8, [X8 + 0x20]
	0x01D8962C MOV X20, X0
	0x01D89630 CBZ X8, 0x1D89674
	0x01D89634 LDR W0, [X8]
	0x01D89638 B 0x1D89678
	0x01D8963C LDR X0, [X20]
	0x01D89640 LDR X19, [X19 + 0x40]
	0x01D89644 LDR W8, [X0 + 0xE0]
	0x01D89648 CBNZ W8, 0x1D89650
	0x01D8964C BL 0x1C16DFC
	0x01D89650 ADRP X8, 0x236D000
	0x01D89654 LDR X8, [X8 + 0xA90]
	0x01D89658 MOV X1, X19
	0x01D8965C LDP X20, X19, [X31 + 0x10]
	0x01D89660 MOVZ W2, 0x3
	0x01D89664 LDR X0, [X8]
	0x01D89668 MOV X3, X31
	0x01D8966C LDR X30, [X31], #0x20
	0x01D89670 B 0x1E77B00
	0x01D89674 MOV X0, X31
	0x01D89678 LDR W1, [X19 + 0x68]
	0x01D8967C MOVZ W2, 0x3
	0x01D89680 MOV X3, X31
	0x01D89684 BL 0x1E9C23C
	0x01D89688 STUR X0, [X20 + 0x1C]
	0x01D8968C CBZ X20, 0x1D896B4
	0x01D89690 MOVZ W8, 0x40
	0x01D89694 STR W8, [X20 + 0xC]
	0x01D89698 LDR X0, [X19 + 0x38]
	0x01D8969C CBZ X0, 0x1D896B4
	0x01D896A0 MOV X1, X20
	0x01D896A4 LDP X20, X19, [X31 + 0x10]
	0x01D896A8 MOV X2, X31
	0x01D896AC LDR X30, [X31], #0x20
	0x01D896B0 B 0x1EA1E24

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x2650000
	008 Move X22, 0x236E000
	009 Move W8, [X23+2481]
	010 Move X22, [X22+2648]
	011 Move W21, W2
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x236E000
	019 Move X0, [X0+2648]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+2481], W8
	023 And W2, W21, 1
	024 Move X0, X19
	025 Move X1, X20
	026 Move X3, X31
	027 Call NetworkBehaviour.Despawned, X0, X1, X2
	028 Move X0, X19
	029 Call AttachedItemAnchor.ResetGrabbedItem, X0
	030 Move X8, [X22]
	031 Move X8, [X8+184]
	032 Move X8, [X8]
	033 Compare X8, 0
	034 JumpIfEqual {42}
	035 Move X9, [X19+64]
	036 Compare X9, 0
	037 JumpIfEqual {49}
	038 Move X9, [X9+32]
	039 Compare X9, 0
	040 JumpIfEqual {49}
	041 Move W1, [X9]
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Move X23, [X31+56]
	048 Return 
	049 Move X1, X31
	050 Move W9, [X19+104]
	051 Move X3, [X8+24]
	052 Move X0, [X8+64]
	053 Move X2, [X8+40]
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 NotImplemented "Instruction BFM not yet implemented."
	059 Move X30, [X31+48]
	060 Move X23, [X31+56]
	061 CallNoReturn X3

Method: System.Void Awake()

Disassembly:
	0x01D89858 RET
	0x01D8985C STP X30, X21, [X31 - 0x20]!
	0x01D89860 STP X20, X19, [X31 + 0x10]
	0x01D89864 ADRP X20, 0x264F000
	0x01D89868 ADRP X21, 0x236A000
	0x01D8986C LDRB W8, [X20 + 0x9B8]
	0x01D89870 LDR X21, [X21 + 0x598]
	0x01D89874 MOV X19, X0
	0x01D89878 TBNZ X8, 0x0, 0x1D89890
	0x01D8987C ADRP X0, 0x236A000
	0x01D89880 LDR X0, [X0 + 0x598]
	0x01D89884 BL 0x1C16CF4
	0x01D89888 MOVZ W8, 0x1
	0x01D8988C STRB W8, [X20 + 0x9B8]
	0x01D89890 LDR X0, [X21]
	0x01D89894 LDR X20, [X19 + 0xC0]
	0x01D89898 LDR W8, [X0 + 0xE0]
	0x01D8989C CBNZ W8, 0x1D898A4
	0x01D898A0 BL 0x1C16DFC
	0x01D898A4 MOV X0, X20
	0x01D898A8 MOV X1, X31
	0x01D898AC MOV X2, X31
	0x01D898B0 BL 0x3C354F8
	0x01D898B4 TBZ X0, 0x0, 0x1D898F4
	0x01D898B8 LDR X0, [X21]
	0x01D898BC LDP X21, X20, [X19 + 0xC0]
	0x01D898C0 LDR W8, [X0 + 0xE0]
	0x01D898C4 CBNZ W8, 0x1D898CC
	0x01D898C8 BL 0x1C16DFC
	0x01D898CC MOV X0, X21
	0x01D898D0 MOV X1, X20
	0x01D898D4 MOV X2, X31
	0x01D898D8 BL 0x3C354F8
	0x01D898DC TBZ X0, 0x0, 0x1D898F4
	0x01D898E0 LDR X0, [X19 + 0xC0]
	0x01D898E4 CBZ X0, 0x1D89900
	0x01D898E8 LDP X20, X19, [X31 + 0x10]
	0x01D898EC LDP X30, X21, [X31], #0x20
	0x01D898F0 B 0x1D89904
	0x01D898F4 LDP X20, X19, [X31 + 0x10]
	0x01D898F8 LDP X30, X21, [X31], #0x20
	0x01D898FC RET
	0x01D89900 BL 0x1C16F20
	0x01D89904 SUB X31, X31, 0x70
	0x01D89908 STP D15, D14, [X31 + 0x10]
	0x01D8990C STP D13, D12, [X31 + 0x20]
	0x01D89910 STP D11, D10, [X31 + 0x30]
	0x01D89914 STP D9, D8, [X31 + 0x40]
	0x01D89918 STP X30, X21, [X31 + 0x50]
	0x01D8991C STP X20, X19, [X31 + 0x60]
	0x01D89920 ADRP X20, 0x264F000
	0x01D89924 ADRP X21, 0x236A000
	0x01D89928 LDRB W8, [X20 + 0xA0B]
	0x01D8992C LDR X21, [X21 + 0x598]
	0x01D89930 MOV X19, X0
	0x01D89934 TBNZ X8, 0x0, 0x1D8994C
	0x01D89938 ADRP X0, 0x236A000
	0x01D8993C LDR X0, [X0 + 0x598]
	0x01D89940 BL 0x1C16CF4
	0x01D89944 MOVZ W8, 0x1
	0x01D89948 STRB W8, [X20 + 0xA0B]
	0x01D8994C LDR X0, [X21]
	0x01D89950 LDR X20, [X19 + 0x178]
	0x01D89954 LDR W8, [X0 + 0xE0]
	0x01D89958 CBNZ W8, 0x1D89960
	0x01D8995C BL 0x1C16DFC
	0x01D89960 MOV X0, X20
	0x01D89964 MOV X1, X31
	0x01D89968 MOV X2, X31
	0x01D8996C BL 0x3C354F8
	0x01D89970 TBZ X0, 0x0, 0x1D89C28
	0x01D89974 LDR X0, [X21]
	0x01D89978 LDR X20, [X19 + 0x1A8]
	0x01D8997C LDR W8, [X0 + 0xE0]
	0x01D89980 CBNZ W8, 0x1D89988
	0x01D89984 BL 0x1C16DFC
	0x01D89988 MOV X0, X20
	0x01D8998C MOV X1, X31
	0x01D89990 MOV X2, X31
	0x01D89994 BL 0x3C354F8
	0x01D89998 TBZ X0, 0x0, 0x1D89A30
	0x01D8999C ADRP X21, 0x264F000
	0x01D899A0 LDRB W8, [X21 + 0x783]
	0x01D899A4 LDR X20, [X19 + 0xC8]
	0x01D899A8 CBNZ W8, 0x1D899C0
	0x01D899AC ADRP X0, 0x236A000
	0x01D899B0 LDR X0, [X0 + 0x5A0]
	0x01D899B4 BL 0x1C16CF4
	0x01D899B8 MOVZ W8, 0x1
	0x01D899BC STRB W8, [X21 + 0x783]
	0x01D899C0 ADRP X8, 0x236A000
	0x01D899C4 LDR X8, [X8 + 0x5A0]
	0x01D899C8 ADRP X21, 0x264F000
	0x01D899CC LDRB W9, [X21 + 0x793]
	0x01D899D0 LDR X8, [X8]
	0x01D899D4 LDR X8, [X8 + 0xB8]
	0x01D899D8 LDP S10, S9, [X8]
	0x01D899DC LDR V8, [X8 + 0x8]
	0x01D899E0 CBNZ W9, 0x1D899F8
	0x01D899E4 ADRP X0, 0x236B000
	0x01D899E8 LDR X0, [X0 + 0x5A8]
	0x01D899EC BL 0x1C16CF4
	0x01D899F0 MOVZ W8, 0x1
	0x01D899F4 STRB W8, [X21 + 0x793]
	0x01D899F8 CBZ X20, 0x1D89C48
	0x01D899FC ADRP X8, 0x236B000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2650000
	008 Move W8, [X20+2482]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x236C000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move X0, 0x236E000
	018 Move X0, [X0+2656]
	019 Call 0x1C17CF4
	020 Move X0, 0x236E000
	021 Move X0, [X0+2664]
	022 Call 0x1C17CF4
	023 Move X0, 0x236E000
	024 Move X0, [X0+2672]
	025 Call 0x1C17CF4
	026 Move X0, 0x236B000
	027 Move X0, [X0+1432]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+2482], W8
	031 Move W8, [X19+128]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, 0x236E000
	034 Move X8, [X8+2672]
	035 Move X21, 0x236B000
	036 Move X0, X19
	037 Move X1, [X8]
	038 Move X21, [X21+1432]
	039 Call 0x21A4F50, X0
	040 Move [X19+200], X0
	041 Move X20, X0
	042 Move X0, [X21]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X20
	048 Move X1, X31
	049 Move X2, X31
	050 Call Object.op_Inequality, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {110}
	055 Move X23, [X19+200]
	056 Compare X23, 0
	057 JumpIfEqual {117}
	058 Move X22, 0x236C000
	059 Move X20, [X23+512]
	060 Move X22, [X22+3696]
	061 Move X0, [X22]
	062 Call 0x1C17F10
	063 Move X8, 0x236E000
	064 Move X8, [X8+2656]
	065 Move X1, X19
	066 Move X3, X31
	067 Move X21, X0
	068 Move X2, [X8]
	069 Call Action..ctor, X0, X1, X2
	070 Move X0, X20
	071 Move X1, X21
	072 Move X2, X31
	073 Call Delegate.Combine, X0, X1
	074 Move X1, [X22]
	075 Compare X0, 0
	076 JumpIfEqual {82}
	077 Move X8, [X0]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move [X23+512], X0
	080 Move X8, [X0]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move [X23+512], X0
	083 Move X23, [X19+200]
	084 Compare X23, 0
	085 JumpIfEqual {117}
	086 Move X20, [X23+520]
	087 Move X0, X1
	088 Call 0x1C17F10
	089 Move X8, 0x236E000
	090 Move X8, [X8+2664]
	091 Move X1, X19
	092 Move X3, X31
	093 Move X21, X0
	094 Move X2, [X8]
	095 Call Action..ctor, X0, X1, X2
	096 Move X0, X20
	097 Move X1, X21
	098 Move X2, X31
	099 Call Delegate.Combine, X0, X1
	100 Compare X0, 0
	101 JumpIfEqual {109}
	102 Move X1, [X22]
	103 Move X8, [X0]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move [X23+520], X0
	106 Move X8, [X0]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Call 0x1C181E0
	109 Move [X23+520], X0
	110 Move X20, [X31+32]
	111 Move X19, [X31+40]
	112 Move X22, [X31+16]
	113 Move X21, [X31+24]
	114 Move X30, [X31+48]
	115 Move X23, [X31+56]
	116 Return 
	117 Call 0x1C17F20

Method: System.Void OnDestroy()

Disassembly:
	0x01D89A00 LDR X8, [X8 + 0x5A8]
	0x01D89A04 MOV X0, X20
	0x01D89A08 MOV V0.16B, V10.16B
	0x01D89A0C MOV V1.16B, V9.16B
	0x01D89A10 LDR X8, [X8]
	0x01D89A14 MOV V2.16B, V8.16B
	0x01D89A18 MOV X1, X31
	0x01D89A1C LDR X8, [X8 + 0xB8]
	0x01D89A20 LDP S5, S6, [X8 + 0x8]
	0x01D89A24 LDP S3, S4, [X8]
	0x01D89A28 BL 0x3C400B4
	0x01D89A2C B 0x1D89BF4
	0x01D89A30 LDR X0, [X21]
	0x01D89A34 LDR X20, [X19 + 0x150]
	0x01D89A38 LDR W8, [X0 + 0xE0]
	0x01D89A3C CBNZ W8, 0x1D89A44
	0x01D89A40 BL 0x1C16DFC
	0x01D89A44 MOV X0, X20
	0x01D89A48 MOV X1, X31
	0x01D89A4C MOV X2, X31
	0x01D89A50 BL 0x3C354F8
	0x01D89A54 TBZ X0, 0x0, 0x1D89A9C
	0x01D89A58 LDR X8, [X19 + 0x150]
	0x01D89A5C CBZ X8, 0x1D89C48
	0x01D89A60 LDR X0, [X8 + 0x40]
	0x01D89A64 CBZ X0, 0x1D89A9C
	0x01D89A68 LDRB W8, [X0 + 0x60]
	0x01D89A6C TBNZ X8, 0x1, 0x1D89A9C
	0x01D89A70 MOV X1, X31
	0x01D89A74 BL 0x1E93668
	0x01D89A78 TBZ X0, 0x0, 0x1D89A9C
	0x01D89A7C LDRB W8, [X19 + 0x180]
	0x01D89A80 CBZ W8, 0x1D89A9C
	0x01D89A84 LDRB W8, [X19 + 0x89]
	0x01D89A88 CBZ W8, 0x1D89A9C
	0x01D89A8C LDR X8, [X19 + 0x150]
	0x01D89A90 CBZ X8, 0x1D89C48
	0x01D89A94 LDRB W8, [X8 + 0x84]
	0x01D89A98 CBNZ W8, 0x1D8999C
	0x01D89A9C LDR X0, [X19 + 0x178]
	0x01D89AA0 CBZ X0, 0x1D89C48
	0x01D89AA4 LDR X20, [X19 + 0xC8]
	0x01D89AA8 MOV X1, X31
	0x01D89AAC BL 0x3C3F58C
	0x01D89AB0 LDR X0, [X19 + 0x178]
	0x01D89AB4 CBZ X0, 0x1D89C48
	0x01D89AB8 MOV X1, X31
	0x01D89ABC MOV V13.16B, V0.16B
	0x01D89AC0 MOV V10.16B, V1.16B
	0x01D89AC4 MOV V14.16B, V2.16B
	0x01D89AC8 BL 0x3C3DEB4
	0x01D89ACC LDR X0, [X19 + 0xD0]
	0x01D89AD0 CBZ X0, 0x1D89C48
	0x01D89AD4 MOV X1, X31
	0x01D89AD8 MOV V8.16B, V0.16B
	0x01D89ADC MOV V9.16B, V1.16B
	0x01D89AE0 MOV V11.16B, V2.16B
	0x01D89AE4 MOV V12.16B, V3.16B
	0x01D89AE8 STP S14, S10, [X31 + 0x8]
	0x01D89AEC MOV V10.16B, V13.16B
	0x01D89AF0 BL 0x3C3EB78
	0x01D89AF4 MOV V4.16B, V0.16B
	0x01D89AF8 MOV V5.16B, V1.16B
	0x01D89AFC MOV V6.16B, V2.16B
	0x01D89B00 MOV V0.16B, V8.16B
	0x01D89B04 MOV V1.16B, V9.16B
	0x01D89B08 MOV V2.16B, V11.16B
	0x01D89B0C MOV V3.16B, V12.16B
	0x01D89B10 MOV X0, X31
	0x01D89B14 BL 0x3C2A9FC
	0x01D89B18 LDR X0, [X19 + 0x178]
	0x01D89B1C CBZ X0, 0x1D89C48
	0x01D89B20 MOV X1, X31
	0x01D89B24 MOV V15.16B, V0.16B
	0x01D89B28 MOV V8.16B, V1.16B
	0x01D89B2C MOV V9.16B, V2.16B
	0x01D89B30 BL 0x3C3DEB4
	0x01D89B34 LDR X0, [X19 + 0xD0]
	0x01D89B38 CBZ X0, 0x1D89C48
	0x01D89B3C MOV X1, X31
	0x01D89B40 MOV V12.16B, V0.16B
	0x01D89B44 MOV V13.16B, V1.16B
	0x01D89B48 MOV V11.16B, V2.16B
	0x01D89B4C MOV V14.16B, V3.16B
	0x01D89B50 BL 0x3C3F830
	0x01D89B54 CBZ X20, 0x1D89C48
	0x01D89B58 LDR V4, [X31 + 0xC]
	0x01D89B5C FMUL S5, S12, S0
	0x01D89B60 FMUL S20, S14, S2
	0x01D89B64 FMUL S21, S11, S3
	0x01D89B68 FADD S16, S4, S8
	0x01D89B6C LDR V4, [X31 + 0x8]
	0x01D89B70 FMUL S22, S13, S0
	0x01D89B74 FMUL S23, S13, S3
	0x01D89B78 FMUL S25, S11, S0
	0x01D89B7C FADD S7, S4, S9
	0x01D89B80 FMUL S4, S14, S3
	0x01D89B84 FMUL S3, S12, S3
	0x01D89B88 FMUL S0, S14, S0
	0x01D89B8C FMUL S26, S14, S1
	0x01D89B90 FMUL S6, S13, S1
	0x01D89B94 FMUL S19, S12, S1
	0x01D89B98 FMUL S24, S13, S2
	0x01D89B9C FSUB S4, S4, S5
	0x01D89BA0 FADD S5, S20, S21
	0x01D89BA4 FADD S20, S26, S23
	0x01D89BA8 FADD S0, S0, S3

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2650000
	008 Move X21, 0x236E000
	009 Move W8, [X20+2483]
	010 Move X21, [X21+2680]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x236C000
	017 Move X0, [X0+3696]
	018 Call 0x1C17CF4
	019 Move X0, 0x236E000
	020 Move X0, [X0+2656]
	021 Call 0x1C17CF4
	022 Move X0, 0x236E000
	023 Move X0, [X0+2664]
	024 Call 0x1C17CF4
	025 Move X0, 0x236E000
	026 Move X0, [X0+2680]
	027 Call 0x1C17CF4
	028 Move X0, 0x236B000
	029 Move X0, [X0+1432]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+2483], W8
	033 Move X0, [X21]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Compare X19, 0
	039 JumpIfEqual {121}
	040 Move W8, [X19+48]
	041 Move X9, 0x236B000
	042 Move X9, [X9+1432]
	043 Move X20, [X19+200]
	044 Or W8, W8, 8
	045 Move [X19+48], W8
	046 Move X0, [X9]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X20
	052 Move X1, X31
	053 Move X2, X31
	054 Call Object.op_Inequality, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {114}
	059 Move X23, [X19+200]
	060 Compare X23, 0
	061 JumpIfEqual {121}
	062 Move X22, 0x236C000
	063 Move X20, [X23+512]
	064 Move X22, [X22+3696]
	065 Move X0, [X22]
	066 Call 0x1C17F10
	067 Move X8, 0x236E000
	068 Move X8, [X8+2656]
	069 Move X1, X19
	070 Move X3, X31
	071 Move X21, X0
	072 Move X2, [X8]
	073 Call Action..ctor, X0, X1, X2
	074 Move X0, X20
	075 Move X1, X21
	076 Move X2, X31
	077 Call Delegate.Remove, X0, X1
	078 Move X1, [X22]
	079 Compare X0, 0
	080 JumpIfEqual {86}
	081 Move X8, [X0]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move [X23+512], X0
	084 Move X8, [X0]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move [X23+512], X0
	087 Move X23, [X19+200]
	088 Compare X23, 0
	089 JumpIfEqual {121}
	090 Move X20, [X23+520]
	091 Move X0, X1
	092 Call 0x1C17F10
	093 Move X8, 0x236E000
	094 Move X8, [X8+2664]
	095 Move X1, X19
	096 Move X3, X31
	097 Move X21, X0
	098 Move X2, [X8]
	099 Call Action..ctor, X0, X1, X2
	100 Move X0, X20
	101 Move X1, X21
	102 Move X2, X31
	103 Call Delegate.Remove, X0, X1
	104 Compare X0, 0
	105 JumpIfEqual {113}
	106 Move X1, [X22]
	107 Move X8, [X0]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move [X23+520], X0
	110 Move X8, [X0]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Call 0x1C181E0
	113 Move [X23+520], X0
	114 Move X20, [X31+32]
	115 Move X19, [X31+40]
	116 Move X22, [X31+16]
	117 Move X21, [X31+24]
	118 Move X30, [X31+48]
	119 Move X23, [X31+56]
	120 Return 
	121 Call 0x1C17F20

Method: System.Void Start()

Disassembly:
	0x01D89BAC FADD S17, S10, S15
	0x01D89BB0 FMUL S18, S11, S2
	0x01D89BB4 FMUL S2, S12, S2
	0x01D89BB8 FMUL S1, S11, S1
	0x01D89BBC FSUB S3, S4, S6
	0x01D89BC0 FADD S4, S19, S5
	0x01D89BC4 FADD S19, S25, S20
	0x01D89BC8 FADD S0, S24, S0
	0x01D89BCC FSUB S6, S3, S18
	0x01D89BD0 FSUB S5, S4, S22
	0x01D89BD4 FSUB S4, S19, S2
	0x01D89BD8 FSUB S3, S0, S1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call Component.get_transform, X0
	006 Compare X0, 0
	007 JumpIfEqual {16}
	008 Move X1, X31
	009 Call Transform.get_position, X0
	010 Move [X19+180], S0
	011 Move [X19+188], S1
	012 Move [X19+188], S2
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return 
	016 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x01D89BDC MOV X0, X20
	0x01D89BE0 MOV V0.16B, V17.16B
	0x01D89BE4 MOV V1.16B, V16.16B
	0x01D89BE8 MOV V2.16B, V7.16B
	0x01D89BEC MOV X1, X31
	0x01D89BF0 BL 0x3C40000
	0x01D89BF4 LDR X8, [X19 + 0x200]
	0x01D89BF8 CBZ X8, 0x1D89C28
	0x01D89BFC LDR X2, [X8 + 0x18]
	0x01D89C00 LDR X0, [X8 + 0x40]
	0x01D89C04 LDR X1, [X8 + 0x28]
	0x01D89C08 LDP X20, X19, [X31 + 0x60]
	0x01D89C0C LDP X30, X21, [X31 + 0x50]
	0x01D89C10 LDP D9, D8, [X31 + 0x40]
	0x01D89C14 LDP D11, D10, [X31 + 0x30]
	0x01D89C18 LDP D13, D12, [X31 + 0x20]
	0x01D89C1C LDP D15, D14, [X31 + 0x10]
	0x01D89C20 ADD X31, X31, 0x70
	0x01D89C24 BR X2
	0x01D89C28 LDP X20, X19, [X31 + 0x60]
	0x01D89C2C LDP X30, X21, [X31 + 0x50]
	0x01D89C30 LDP D9, D8, [X31 + 0x40]
	0x01D89C34 LDP D11, D10, [X31 + 0x30]
	0x01D89C38 LDP D13, D12, [X31 + 0x20]
	0x01D89C3C LDP D15, D14, [X31 + 0x10]
	0x01D89C40 ADD X31, X31, 0x70
	0x01D89C44 RET
	0x01D89C48 BL 0x1C16F20
	0x01D89C4C STP X30, X21, [X31 - 0x20]!
	0x01D89C50 STP X20, X19, [X31 + 0x10]
	0x01D89C54 ADRP X20, 0x264F000
	0x01D89C58 ADRP X21, 0x236A000
	0x01D89C5C LDRB W8, [X20 + 0x9B9]
	0x01D89C60 LDR X21, [X21 + 0x598]
	0x01D89C64 MOV X19, X0
	0x01D89C68 TBNZ X8, 0x0, 0x1D89C80
	0x01D89C6C ADRP X0, 0x236A000
	0x01D89C70 LDR X0, [X0 + 0x598]
	0x01D89C74 BL 0x1C16CF4
	0x01D89C78 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], D9
	002 Move [X31-24], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0+64]
	007 Compare X0, 0
	008 JumpIfEqual {49}
	009 Move W8, [X0+96]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 2
	012 Compare TEMP, 2
	013 JumpIfEqual {49}
	014 Move X1, X31
	015 Call NetworkObject.get_HasInputAuthority, X0
	016 Move TEMP, X0
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfNotEqual {49}
	020 Move X0, X19
	021 Move X1, X31
	022 Call Component.get_transform, X0
	023 Compare X0, 0
	024 JumpIfEqual {54}
	025 Move X1, X31
	026 Call Transform.get_position, X0
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 Move V4, [X19+188]
	029 Move X0, X31
	030 Move V0.S[1], V1.S[0]
	031 Subtract V8, V0, V3
	032 Subtract S9, S2, S4
	033 Call Time.get_deltaTime
	034 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	035 NotImplemented "Instruction FDIV not yet implemented."
	036 NotImplemented "Instruction INVALID not yet implemented."
	037 Move X0, X19
	038 Move X1, X31
	039 Move [X19+168], D1
	040 Move [X19+176], S0
	041 Call Component.get_transform, X0
	042 Compare X0, 0
	043 JumpIfEqual {54}
	044 Move X1, X31
	045 Call Transform.get_position, X0
	046 Move [X19+180], S0
	047 Move [X19+188], S1
	048 Move [X19+188], S2
	049 Move X30, [X31+16]
	050 Move X19, [X31+24]
	051 Move D9, [X31+32]
	052 Move D8, [X31+40]
	053 Return 
	054 Call 0x1C17F20

Method: System.Void RPC_TryGrabItem(Fusion.NetworkBehaviourId objectID, System.Boolean forceAssign = False, System.Boolean playSFX = True, Fusion.RpcInfo info = null)

Disassembly:
	0x01D89C7C STRB W8, [X20 + 0x9B9]
	0x01D89C80 LDR X0, [X21]
	0x01D89C84 LDR X20, [X19 + 0xC8]
	0x01D89C88 LDR W8, [X0 + 0xE0]
	0x01D89C8C CBNZ W8, 0x1D89C94
	0x01D89C90 BL 0x1C16DFC
	0x01D89C94 MOV X0, X20
	0x01D89C98 MOV X1, X31
	0x01D89C9C MOV X2, X31
	0x01D89CA0 BL 0x3C354F8
	0x01D89CA4 TBZ X0, 0x0, 0x1D89CFC
	0x01D89CA8 LDR X0, [X21]
	0x01D89CAC LDR X20, [X19 + 0xC0]
	0x01D89CB0 LDR W8, [X0 + 0xE0]
	0x01D89CB4 CBNZ W8, 0x1D89CBC
	0x01D89CB8 BL 0x1C16DFC
	0x01D89CBC MOV X0, X20
	0x01D89CC0 MOV X1, X31
	0x01D89CC4 MOV X2, X31
	0x01D89CC8 BL 0x3C354F8
	0x01D89CCC TBZ X0, 0x0, 0x1D89CFC
	0x01D89CD0 LDR X0, [X19 + 0xC8]
	0x01D89CD4 CBZ X0, 0x1D89D08
	0x01D89CD8 LDR X19, [X19 + 0xC0]
	0x01D89CDC BL 0x1D89D0C
	0x01D89CE0 CBZ X19, 0x1D89D08
	0x01D89CE4 ORN W8, W31, W0, 0x0
	0x01D89CE8 MOV X0, X19
	0x01D89CEC LDP X20, X19, [X31 + 0x10]
	0x01D89CF0 AND W1, W8, 0x1
	0x01D89CF4 LDP X30, X21, [X31], #0x20
	0x01D89CF8 B 0x1D8EAF8
	0x01D89CFC LDP X20, X19, [X31 + 0x10]
	0x01D89D00 LDP X30, X21, [X31], #0x20
	0x01D89D04 RET
	0x01D89D08 BL 0x1C16F20
	0x01D89D0C SUB X31, X31, 0x20
	0x01D89D10 STP X30, X19, [X31 + 0x10]
	0x01D89D14 MOV X19, X0
	0x01D89D18 BL 0x1D8EEF0
	0x01D89D1C TBZ X0, 0x0, 0x1D89D2C
	0x01D89D20 MOV X0, X19
	0x01D89D24 BL 0x1D8EA90
	0x01D89D28 TBZ X0, 0x0, 0x1D89D34
	0x01D89D2C MOV W8, W31
	0x01D89D30 B 0x1D89D50
	0x01D89D34 MOV X0, X19
	0x01D89D38 BL 0x1D8E6F8
	0x01D89D3C STR X0, [X31 + 0x8]
	0x01D89D40 ADD X0, X31, 0x8
	0x01D89D44 MOV X1, X31
	0x01D89D48 BL 0x1E74DE4
	0x01D89D4C EOR W8, W0, 0x1
	0x01D89D50 LDP X30, X19, [X31 + 0x10]
	0x01D89D54 AND W0, W8, 0x1
	0x01D89D58 ADD X31, X31, 0x20
	0x01D89D5C RET
	0x01D89D60 AND W1, W1, 0x1
	0x01D89D64 B 0x1D8EAF8
	0x01D89D68 STP X30, X23, [X31 - 0x30]!
	0x01D89D6C STP X22, X21, [X31 + 0x10]
	0x01D89D70 STP X20, X19, [X31 + 0x20]
	0x01D89D74 MOV X19, X0
	0x01D89D78 LDR X0, [X0 + 0xC0]
	0x01D89D7C CBZ X0, 0x1D89E18
	0x01D89D80 BL 0x1D896B8
	0x01D89D84 LDR X8, [X19 + 0x40]
	0x01D89D88 MOV X20, X0
	0x01D89D8C CBZ X8, 0x1D89DA0
	0x01D89D90 LDR X8, [X8 + 0x20]
	0x01D89D94 CBZ X8, 0x1D89DA0
	0x01D89D98 LDR W21, [X8]
	0x01D89D9C B 0x1D89DA4
	0x01D89DA0 MOV W21, W31
	0x01D89DA4 ADRP X23, 0x264F000
	0x01D89DA8 LDRB W8, [X23 + 0xA20]
	0x01D89DAC LDR W22, [X19 + 0x68]
	0x01D89DB0 CBNZ W8, 0x1D89DC8
	0x01D89DB4 ADRP X0, 0x236D000
	0x01D89DB8 LDR X0, [X0 + 0x398]
	0x01D89DBC BL 0x1C16CF4
	0x01D89DC0 MOVZ W8, 0x1
	0x01D89DC4 STRB W8, [X23 + 0xA20]
	0x01D89DC8 ADRP X8, 0x236D000
	0x01D89DCC LDR X8, [X8 + 0x398]
	0x01D89DD0 LDR X0, [X8]
	0x01D89DD4 LDR W8, [X0 + 0xE0]
	0x01D89DD8 CBNZ W8, 0x1D89DE0
	0x01D89DDC BL 0x1C16DFC
	0x01D89DE0 CMP W21, W20
	0x01D89DE4 B.NE 0x1D89E04
	0x01D89DE8 UBFM X8, X20, 0x20, 0x3F
	0x01D89DEC CMP W22, W8
	0x01D89DF0 B.NE 0x1D89E04
	0x01D89DF4 LDP X20, X19, [X31 + 0x20]
	0x01D89DF8 LDP X22, X21, [X31 + 0x10]
	0x01D89DFC LDP X30, X23, [X31], #0x30
	0x01D89E00 RET
	0x01D89E04 MOV X0, X19
	0x01D89E08 LDP X20, X19, [X31 + 0x20]
	0x01D89E0C LDP X22, X21, [X31 + 0x10]
	0x01D89E10 LDP X30, X23, [X31], #0x30
	0x01D89E14 B 0x1D89528
	0x01D89E18 BL 0x1C16F20
	0x01D89E1C B 0x1D89528
	0x01D89E20 STP X30, X19, [X31 - 0x10]!
	0x01D89E24 CBZ X1, 0x1D89E50
	0x01D89E28 MOV X19, X0
	0x01D89E2C MOV X0, X1
	0x01D89E30 MOV X1, X31
	0x01D89E34 BL 0x1E9E7CC
	0x01D89E38 TBZ X0, 0x0, 0x1D89E48
	0x01D89E3C MOV X0, X19
	0x01D89E40 LDP X30, X19, [X31], #0x10
	0x01D89E44 B 0x1D89528
	0x01D89E48 LDP X30, X19, [X31], #0x10
	0x01D89E4C RET
	0x01D89E50 BL 0x1C16F20
	0x01D89E54 STP X30, X21, [X31 - 0x20]!
	0x01D89E58 STP X20, X19, [X31 + 0x10]
	0x01D89E5C ADRP X21, 0x264F000
	0x01D89E60 ADRP X20, 0x236A000
	0x01D89E64 LDRB W8, [X21 + 0x9BC]
	0x01D89E68 LDR X20, [X20 + 0x598]
	0x01D89E6C MOV X19, X0
	0x01D89E70 TBNZ X8, 0x0, 0x1D89E88
	0x01D89E74 ADRP X0, 0x236A000
	0x01D89E78 LDR X0, [X0 + 0x598]
	0x01D89E7C BL 0x1C16CF4
	0x01D89E80 MOVZ W8, 0x1
	0x01D89E84 STRB W8, [X21 + 0x9BC]
	0x01D89E88 LDR X0, [X20]
	0x01D89E8C LDR X20, [X19 + 0xC0]
	0x01D89E90 LDR W8, [X0 + 0xE0]
	0x01D89E94 CBNZ W8, 0x1D89E9C
	0x01D89E98 BL 0x1C16DFC
	0x01D89E9C MOV X0, X20
	0x01D89EA0 MOV X1, X31
	0x01D89EA4 MOV X2, X31
	0x01D89EA8 BL 0x3C354F8
	0x01D89EAC TBZ X0, 0x0, 0x1D89ED8
	0x01D89EB0 LDR X8, [X19 + 0xA0]
	0x01D89EB4 CBZ X8, 0x1D89ED8
	0x01D89EB8 LDR X2, [X19 + 0xC0]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x2650000
	009 Move W8, [X23+2484]
	010 Move W20, W3
	011 Move W21, W2
	012 Move X22, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x236E000
	019 Move X0, [X0+2680]
	020 Call 0x1C17CF4
	021 Move X0, 0x236E000
	022 Move X0, [X0+2640]
	023 Call 0x1C17CF4
	024 Move X0, 0x236E000
	025 Move X0, [X0+2688]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+2484], W8
	029 Move [X31+8], X31
	030 Move W8, [X19+88]
	031 Compare W8, 0
	032 JumpIfEqual {69}
	033 Move [X19+88], W31
	034 Move X0, [X19+56]
	035 Compare X0, 0
	036 JumpIfEqual {180}
	037 Move X8, 0x236E000
	038 Move X8, [X8+2640]
	039 Add X2, X31, 8
	040 Move X1, X22
	041 Move X3, [X8]
	042 Call 0x222CD98, X0, X1, X2
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {172}
	047 Move X0, [X31+8]
	048 Compare X0, 0
	049 JumpIfEqual {180}
	050 Call GrabbableItem.get_canGrab, X0
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {59}
	055 Move TEMP, X21
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {172}
	059 Move X8, [X31+8]
	060 Compare X8, 0
	061 JumpIfEqual {180}
	062 Move X9, [X8+64]
	063 Compare X9, 0
	064 JumpIfEqual {123}
	065 Move X9, [X9+32]
	066 Compare X9, 0
	067 JumpIfEqual {123}
	068 Move W1, [X9]
	069 Move X23, 0x236E000
	070 Move X23, [X23+2680]
	071 Move X0, [X23]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X19
	077 Move X1, X31
	078 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	079 Move X0, [X19+56]
	080 Compare X0, 0
	081 JumpIfEqual {180}
	082 Move X1, X31
	083 Call NetworkRunner.get_Stage, X0
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X0, [X19+64]
	086 Compare X0, 0
	087 JumpIfEqual {180}
	088 Move X1, X31
	089 Call NetworkObject.GetLocalAuthorityMask, X0
	090 And W31, W0, 3
	091 Move W8, W0
	092 Move X0, [X19+56]
	093 Move TEMP, X8
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfEqual {147}
	097 Compare X0, 0
	098 JumpIfEqual {180}
	099 Move X0, [X0+80]
	100 Compare X0, 0
	101 JumpIfEqual {180}
	102 Move X1, X31
	103 Call Simulation.HasAnyActiveConnections, X0
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {172}
	108 Move X8, [X19+56]
	109 Compare X8, 0
	110 JumpIfEqual {180}
	111 Move X0, [X8+80]
	112 Move W1, 24
	113 Move X2, X31
	114 Call SimulationMessage.Allocate, X0, X1
	115 Move X8, [X19+64]
	116 Compare X8, 0
	117 JumpIfEqual {180}
	118 Move X8, [X8+32]
	119 Move X23, X0
	120 Compare X8, 0
	121 JumpIfEqual {151}
	122 Move W0, [X8]
	123 Move X1, X31
	124 Move W8, [X8+104]
	125 Move X0, X19
	126 NotImplemented "Instruction BFM not yet implemented."
	127 Call AttachedItemAnchor.set_grabbedItem, X0, X1
	128 Move X0, [X31+8]
	129 Compare X0, 0
	130 JumpIfEqual {180}
	131 And W2, W20, 1
	132 Move X1, X19
	133 Call GrabbableItem.Grab, X0, X1, X2
	134 Move X0, [X23]
	135 Move X19, [X19+64]
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {140}
	139 Call 0x1C17DFC
	140 Move X8, 0x236E000
	141 Move X8, [X8+2688]
	142 Move W2, 3
	143 Move X1, X19
	144 Move X3, X31
	145 Move X0, [X8]
	146 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	147 Move W1, W31
	148 Move W2, W31
	149 Move X3, X31
	150 Call RpcInfo.FromLocal, X0, X1, X2
	151 Move X0, X31
	152 Move W1, [X19+104]
	153 Move W2, 1
	154 Move X3, X31
	155 Call RpcHeader.Create, X0, X1, X2
	156 And W8, W21, 1
	157 And W9, W20, 1
	158 Move [X23+28], X0
	159 Move [X23+36], X22
	160 Move [X23+44], W8
	161 Move [X23+48], W9
	162 Compare X23, 0
	163 JumpIfEqual {180}
	164 Move W8, 192
	165 Move [X23+12], W8
	166 Move X0, [X19+56]
	167 Compare X0, 0
	168 JumpIfEqual {180}
	169 Move X1, X23
	170 Move X2, X31
	171 Call NetworkRunner.SendRpc, X0, X1
	172 Move X20, [X31+48]
	173 Move X19, [X31+56]
	174 Move X22, [X31+32]
	175 Move X21, [X31+40]
	176 Move X30, [X31+16]
	177 Move X23, [X31+24]
	178 Add X31, X31, 64
	179 Return 
	180 Call 0x1C17F20

Method: System.Void RPC_DropItem(Fusion.NetworkBehaviourId objectID, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, UnityEngine.Vector3 itemVelocity, UnityEngine.Vector3 itemAngularVelocity, System.Boolean fromDeath, Fusion.RpcInfo info = null)

Disassembly:
	0x01D89FDC STP D11, D10, [X31 + 0x60]
	0x01D89FE0 STP D9, D8, [X31 + 0x70]
	0x01D89FE4 STP X30, X21, [X31 + 0x80]
	0x01D89FE8 STP X20, X19, [X31 + 0x90]
	0x01D89FEC ADRP X21, 0x264F000
	0x01D89FF0 LDRB W8, [X21 + 0x9BF]
	0x01D89FF4 MOV W19, W1
	0x01D89FF8 MOV V8.16B, V2.16B
	0x01D89FFC MOV V9.16B, V1.16B
	0x01D8A000 MOV V15.16B, V0.16B
	0x01D8A004 MOV X20, X0
	0x01D8A008 TBNZ X8, 0x0, 0x1D8A020
	0x01D8A00C ADRP X0, 0x2369000
	0x01D8A010 LDR X0, [X0 + 0x598]
	0x01D8A014 BL 0x1C16CF4
	0x01D8A018 MOVZ W8, 0x1
	0x01D8A01C STRB W8, [X21 + 0x9BF]
	0x01D8A020 MOV X0, X20
	0x01D8A024 STR W31, [X31 + 0x30]
	0x01D8A028 STR X31, [X31 + 0x28]
	0x01D8A02C BL 0x1D880C4
	0x01D8A030 STR X0, [X31 + 0x38]
	0x01D8A034 ADD X0, X31, 0x38
	0x01D8A038 MOV X1, X31
	0x01D8A03C BL 0x1E74DE4
	0x01D8A040 TBZ X0, 0x0, 0x1D8A224
	0x01D8A044 MOV X0, X20
	0x01D8A048 MOV X1, X31
	0x01D8A04C BL 0x3C32E90
	0x01D8A050 CBZ X0, 0x1D8A244
	0x01D8A054 MOV X1, X31
	0x01D8A058 BL 0x3C3F58C
	0x01D8A05C MOV X0, X20
	0x01D8A060 MOV X1, X31
	0x01D8A064 MOV V11.16B, V0.16B
	0x01D8A068 STR S1, [X31 + 0x24]
	0x01D8A06C MOV V12.16B, V2.16B
	0x01D8A070 BL 0x3C32E90
	0x01D8A074 CBZ X0, 0x1D8A244
	0x01D8A078 MOV X1, X31
	0x01D8A07C BL 0x3C3DEB4
	0x01D8A080 ADRP X21, 0x264E000
	0x01D8A084 LDRB W8, [X21 + 0x783]
	0x01D8A088 MOV V13.16B, V0.16B
	0x01D8A08C MOV V14.16B, V1.16B
	0x01D8A090 MOV V10.16B, V2.16B
	0x01D8A094 STR S3, [X31 + 0x20]
	0x01D8A098 STP S15, S9, [X31 + 0x28]
	0x01D8A09C STR S8, [X31 + 0x30]
	0x01D8A0A0 CBNZ W8, 0x1D8A0B8
	0x01D8A0A4 ADRP X0, 0x2369000
	0x01D8A0A8 LDR X0, [X0 + 0x5A0]
	0x01D8A0AC BL 0x1C16CF4
	0x01D8A0B0 MOVZ W8, 0x1
	0x01D8A0B4 STRB W8, [X21 + 0x783]
	0x01D8A0B8 ADRP X8, 0x2369000
	0x01D8A0BC LDR X8, [X8 + 0x5A0]
	0x01D8A0C0 ADRP X9, 0x2369000
	0x01D8A0C4 LDR X8, [X8]
	0x01D8A0C8 LDR X9, [X9 + 0x598]
	0x01D8A0CC LDR X21, [X20 + 0xC0]
	0x01D8A0D0 LDR X8, [X8 + 0xB8]
	0x01D8A0D4 LDR X0, [X9]
	0x01D8A0D8 LDP S15, S8, [X8]
	0x01D8A0DC LDR W9, [X0 + 0xE0]
	0x01D8A0E0 LDR V9, [X8 + 0x8]
	0x01D8A0E4 CBNZ W9, 0x1D8A0EC
	0x01D8A0E8 BL 0x1C16DFC
	0x01D8A0EC MOV X0, X21
	0x01D8A0F0 MOV X1, X31
	0x01D8A0F4 MOV X2, X31
	0x01D8A0F8 BL 0x3C354F8
	0x01D8A0FC TBZ X0, 0x0, 0x1D8A1DC
	0x01D8A100 LDR X8, [X20 + 0xC0]
	0x01D8A104 CBZ X8, 0x1D8A244
	0x01D8A108 LDR X0, [X8 + 0x168]
	0x01D8A10C CBZ X0, 0x1D8A244
	0x01D8A110 MOV X1, X31
	0x01D8A114 BL 0x3C8EF74
	0x01D8A118 LDR X8, [X20 + 0xC0]
	0x01D8A11C CBZ X8, 0x1D8A244
	0x01D8A120 LDR X0, [X8 + 0x168]
	0x01D8A124 CBZ X0, 0x1D8A244
	0x01D8A128 MOV X1, X31
	0x01D8A12C MOV V15.16B, V0.16B
	0x01D8A130 MOV V11.16B, V1.16B
	0x01D8A134 MOV V12.16B, V2.16B
	0x01D8A138 BL 0x3C8F0AC
	0x01D8A13C LDR X8, [X20 + 0xC0]
	0x01D8A140 CBZ X8, 0x1D8A244
	0x01D8A144 LDR X0, [X8 + 0x168]
	0x01D8A148 STR S3, [X31 + 0x20]
	0x01D8A14C CBZ X0, 0x1D8A244
	0x01D8A150 LDR V8, [X31 + 0x28]
	0x01D8A154 LDR V9, [X31 + 0x30]
	0x01D8A158 MOV X1, X31
	0x01D8A15C MOV V13.16B, V0.16B
	0x01D8A160 MOV V14.16B, V1.16B
	0x01D8A164 MOV V10.16B, V2.16B
	0x01D8A168 BL 0x3C8E868
	0x01D8A16C FADD S2, S9, S2
	0x01D8A170 MOV V0.S[1], V1.S[0]
	0x01D8A174 FADD V0.2S, V8.2S, V0.2S
	0x01D8A178 STR D0, [X31 + 0x28]
	0x01D8A17C STR S2, [X31 + 0x30]
	0x01D8A180 LDR X8, [X20 + 0xC0]
	0x01D8A184 CBZ X8, 0x1D8A244
	0x01D8A188 LDR X0, [X8 + 0x168]
	0x01D8A18C STR S11, [X31 + 0x24]
	0x01D8A190 CBZ X0, 0x1D8A244
	0x01D8A194 MOV X1, X31
	0x01D8A198 MOV V11.16B, V15.16B
	0x01D8A19C BL 0x3C8E9A0
	0x01D8A1A0 LDR X8, [X20 + 0xC0]
	0x01D8A1A4 CBZ X8, 0x1D8A244
	0x01D8A1A8 LDR X0, [X8 + 0x168]
	0x01D8A1AC CBZ X0, 0x1D8A244
	0x01D8A1B0 MOV X1, X31
	0x01D8A1B4 MOV V15.16B, V0.16B
	0x01D8A1B8 MOV V8.16B, V1.16B
	0x01D8A1BC MOV V9.16B, V2.16B
	0x01D8A1C0 BL 0x3C8EBE8
	0x01D8A1C4 ADD X0, X31, 0x28
	0x01D8A1C8 FMOV S1, 25
	0x01D8A1CC FMOV S2, 10
	0x01D8A1D0 FMOV S3, 10
	0x01D8A1D4 MOV X1, X31
	0x01D8A1D8 BL 0x1E1C450
	0x01D8A1DC MOV X0, X20
	0x01D8A1E0 BL 0x1D880C4
	0x01D8A1E4 LDR V0, [X31 + 0x30]
	0x01D8A1E8 LDR X8, [X31 + 0x28]
	0x01D8A1EC LDP S6, S1, [X31 + 0x20]
	0x01D8A1F0 MOV X1, X0
	0x01D8A1F4 STR S0, [X31 + 0x8]
	0x01D8A1F8 AND W2, W19, 0x1
	0x01D8A1FC MOV X0, X20
	0x01D8A200 MOV V0.16B, V11.16B
	0x01D8A204 MOV V2.16B, V12.16B
	0x01D8A208 MOV V3.16B, V13.16B
	0x01D8A20C MOV V4.16B, V14.16B
	0x01D8A210 MOV V5.16B, V10.16B
	0x01D8A214 STP S8, S9, [X31 + 0x14]
	0x01D8A218 STR S15, [X31 + 0x10]
	0x01D8A21C STR X8, [X31]
	0x01D8A220 BL 0x1D88FDC
	0x01D8A224 LDP X20, X19, [X31 + 0x90]
	0x01D8A228 LDP X30, X21, [X31 + 0x80]
	0x01D8A22C LDP D9, D8, [X31 + 0x70]
	0x01D8A230 LDP D11, D10, [X31 + 0x60]
	0x01D8A234 LDP D13, D12, [X31 + 0x50]
	0x01D8A238 LDP D15, D14, [X31 + 0x40]
	0x01D8A23C ADD X31, X31, 0xA0
	0x01D8A240 RET
	0x01D8A244 BL 0x1C16F20
	0x01D8A248 SUB X31, X31, 0x30
	0x01D8A24C STP X30, X21, [X31 + 0x10]
	0x01D8A250 STP X20, X19, [X31 + 0x20]
	0x01D8A254 ADRP X20, 0x264E000
	0x01D8A258 ADRP X21, 0x2369000
	0x01D8A25C LDRB W8, [X20 + 0x9BE]
	0x01D8A260 LDR X21, [X21 + 0x598]
	0x01D8A264 MOV X19, X0
	0x01D8A268 TBNZ X8, 0x0, 0x1D8A28C
	0x01D8A26C ADRP X0, 0x236C000
	0x01D8A270 LDR X0, [X0 + 0xA50]
	0x01D8A274 BL 0x1C16CF4
	0x01D8A278 ADRP X0, 0x2369000
	0x01D8A27C LDR X0, [X0 + 0x598]
	0x01D8A280 BL 0x1C16CF4
	0x01D8A284 MOVZ W8, 0x1
	0x01D8A288 STRB W8, [X20 + 0x9BE]
	0x01D8A28C LDR X0, [X21]
	0x01D8A290 STR X31, [X31]
	0x01D8A294 LDR X20, [X19 + 0x40]
	0x01D8A298 LDR W8, [X0 + 0xE0]
	0x01D8A29C CBNZ W8, 0x1D8A2A4
	0x01D8A2A0 BL 0x1C16DFC
	0x01D8A2A4 MOV X0, X20
	0x01D8A2A8 MOV X1, X31
	0x01D8A2AC MOV X2, X31
	0x01D8A2B0 BL 0x3C3883C
	0x01D8A2B4 TBNZ X0, 0x0, 0x1D8A398
	0x01D8A2B8 LDR X0, [X19 + 0x40]
	0x01D8A2BC CBZ X0, 0x1D8A3A8
	0x01D8A2C0 MOV X1, X31
	0x01D8A2C4 BL 0x1E934B8
	0x01D8A2C8 TBZ X0, 0x0, 0x1D8A398
	0x01D8A2CC MOV X0, X19
	0x01D8A2D0 BL 0x1D880C4
	0x01D8A2D4 STR X0, [X31 + 0x8]
	0x01D8A2D8 ADD X0, X31, 0x8
	0x01D8A2DC MOV X1, X31
	0x01D8A2E0 BL 0x1E74DE4
	0x01D8A2E4 TBZ X0, 0x0, 0x1D8A398
	0x01D8A2E8 LDR X20, [X19 + 0x38]
	0x01D8A2EC MOV X0, X19
	0x01D8A2F0 BL 0x1D880C4
	0x01D8A2F4 CBZ X20, 0x1D8A3A8
	0x01D8A2F8 ADRP X8, 0x236C000

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+96], X22
	012 Move [X31+104], X21
	013 Move [X31+112], X20
	014 Move [X31+120], X19
	015 Move X22, 0x2650000
	016 Move V8, V3
	017 Move V9, V2
	018 Move V10, V1
	019 Move V15, V0
	020 Move S0, [X31+148]
	021 Move S14, [X31+152]
	022 Move V1, [X31+144]
	023 Move S2, [X31+132]
	024 Move S11, [X31+136]
	025 Move W8, [X22+2485]
	026 Move V3, [X31+128]
	027 Move W19, W2
	028 Move V12, V5
	029 Move V13, V4
	030 Move X21, X1
	031 Move X20, X0
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {70}
	036 Move X0, 0x236D000
	037 Move X0, [X0+2680]
	038 Move [X31+88], S11
	039 Move [X31+96], S15
	040 Move [X31+8], S14
	041 Move [X31+16], S10
	042 Move [X31+4], S9
	043 Move V9, V8
	044 Move V8, V13
	045 Move V13, V12
	046 Move V12, V6
	047 Move V15, V0
	048 Move V11, V1
	049 Move V10, V2
	050 Move V14, V3
	051 Call 0x1C17CF4
	052 Move X0, 0x236D000
	053 Move X0, [X0+2696]
	054 Call 0x1C17CF4
	055 Move V3, V14
	056 Move V2, V10
	057 Move V1, V11
	058 Move V0, V15
	059 Move V6, V12
	060 Move V12, V13
	061 Move V13, V8
	062 Move V8, V9
	063 Move S9, [X31+4]
	064 Move S14, [X31+8]
	065 Move V10, [X31+12]
	066 Move S11, [X31+88]
	067 Move S15, [X31+92]
	068 Move W8, 1
	069 Move [X22+2485], W8
	070 Move W8, [X20+88]
	071 Compare W8, 0
	072 JumpIfEqual {103}
	073 Move [X20+88], W31
	074 Move [X31+144], S1
	075 Move [X31+152], S0
	076 Move [X31+128], S3
	077 Move [X31+136], S2
	078 Move [X31+152], S14
	079 And W2, W19, 1
	080 Move [X31+136], S11
	081 Move X0, X20
	082 Move X1, X21
	083 Move V0, V15
	084 Move V1, V10
	085 Move V2, V9
	086 Move V3, V8
	087 Move V4, V13
	088 Move V5, V12
	089 Move X20, [X31+112]
	090 Move X19, [X31+120]
	091 Move X22, [X31+96]
	092 Move X21, [X31+104]
	093 Move X30, [X31+80]
	094 Move D9, [X31+64]
	095 Move D8, [X31+72]
	096 Move D11, [X31+48]
	097 Move D10, [X31+56]
	098 Move D13, [X31+32]
	099 Move D12, [X31+40]
	100 Move D15, [X31+16]
	101 Move D14, [X31+24]
	102 Add X31, X31, 128
	103 Move [X31+4], S3
	104 Move [X31+12], S2
	105 Move [X31+12], S1
	106 Move [X31+88], S0
	107 Move [X31+96], S6
	108 Move X22, 0x236D000
	109 Move X22, [X22+2680]
	110 Move X0, [X22]
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {115}
	114 Call 0x1C17DFC
	115 Move X0, X20
	116 Move X1, X31
	117 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	118 Move X0, [X20+56]
	119 Compare X0, 0
	120 JumpIfEqual {266}
	121 Move X1, X31
	122 Call NetworkRunner.get_Stage, X0
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X20, [X31+112]
	125 Move X19, [X31+120]
	126 Move X22, [X31+96]
	127 Move X21, [X31+104]
	128 Move X30, [X31+80]
	129 Move D9, [X31+64]
	130 Move D8, [X31+72]
	131 Move D11, [X31+48]
	132 Move D10, [X31+56]
	133 Move D13, [X31+32]
	134 Move D12, [X31+40]
	135 Move D15, [X31+16]
	136 Move D14, [X31+24]
	137 Add X31, X31, 128
	138 Return 
	139 Move X0, [X20+64]
	140 Compare X0, 0
	141 JumpIfEqual {266}
	142 Move X1, X31
	143 Call NetworkObject.GetLocalAuthorityMask, X0
	144 And W31, W0, 3
	145 Move W8, W0
	146 Move X0, [X20+56]
	147 Move TEMP, X8
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfEqual {205}
	151 Compare X0, 0
	152 JumpIfEqual {266}
	153 Move X0, [X0+80]
	154 Compare X0, 0
	155 JumpIfEqual {266}
	156 Move X1, X31
	157 Call Simulation.HasAnyActiveConnections, X0
	158 Move TEMP, X0
	159 And TEMP, TEMP, 1
	160 Compare TEMP, 1
	161 JumpIfNotEqual {124}
	162 Move X8, [X20+56]
	163 Compare X8, 0
	164 JumpIfEqual {266}
	165 Move X0, [X8+80]
	166 Move W1, 72
	167 Move X2, X31
	168 Call SimulationMessage.Allocate, X0, X1
	169 Move X8, [X20+64]
	170 Compare X8, 0
	171 JumpIfEqual {266}
	172 Move X8, [X8+32]
	173 Move X22, X0
	174 Compare X8, 0
	175 JumpIfEqual {214}
	176 Move W0, [X8]
	177 Move X0, [X22]
	178 Move X19, [X20+64]
	179 Move W8, [X0+224]
	180 Compare W8, 0
	181 JumpIfNotEqual {183}
	182 Call 0x1C17DFC
	183 Move X8, 0x236D000
	184 Move X8, [X8+2696]
	185 Move X1, X19
	186 Move X20, [X31+112]
	187 Move X19, [X31+120]
	188 Move X22, [X31+96]
	189 Move X21, [X31+104]
	190 Move X0, [X8]
	191 Move X30, [X31+80]
	192 Move D9, [X31+64]
	193 Move D8, [X31+72]
	194 Move D11, [X31+48]
	195 Move D10, [X31+56]
	196 Move D13, [X31+32]
	197 Move D12, [X31+40]
	198 Move D15, [X31+16]
	199 Move D14, [X31+24]
	200 Move W2, 3
	201 Move X3, X31
	202 Add X31, X31, 128
	203 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	204 Return 
	205 Move W1, W31
	206 Move W2, W31
	207 Move X3, X31
	208 Call RpcInfo.FromLocal, X0, X1, X2
	209 Move S0, [X31+88]
	210 Move S6, [X31+92]
	211 Move S2, [X31+8]
	212 Move S1, [X31+12]
	213 Move V3, [X31+4]
	214 Move X0, X31
	215 Move W1, [X20+104]
	216 Move W2, 2
	217 Move X3, X31
	218 Call RpcHeader.Create, X0, X1, X2
	219 Move V1, [X31+92]
	220 Move V0, [X31+4]
	221 And W8, W19, 1
	222 Move [X22+28], X0
	223 Move [X22+36], X21
	224 Move [X22+68], S1
	225 Move [X22+76], S0
	226 Move V0, [X31+8]
	227 Move V1, [X31+12]
	228 Move [X22+44], S15
	229 Move [X22+52], S10
	230 Move [X22+52], S9
	231 Move [X22+60], S8
	232 Move [X22+76], S0
	233 Move [X22+84], S11
	234 Move V0, [X31+88]
	235 Move [X22+60], S13
	236 Move [X22+68], S12
	237 Move [X22+92], S14
	238 Move [X22+96], W8
	239 Move [X22+84], S1
	240 Move [X22+92], S0
	241 Compare X22, 0
	242 JumpIfEqual {266}
	243 Move W8, 576
	244 Move [X22+12], W8
	245 Move X0, [X20+56]
	246 Compare X0, 0
	247 JumpIfEqual {266}
	248 Move X1, X22
	249 Move X20, [X31+112]
	250 Move X19, [X31+120]
	251 Move X22, [X31+96]
	252 Move X21, [X31+104]
	253 Move X30, [X31+80]
	254 Move D9, [X31+64]
	255 Move D8, [X31+72]
	256 Move D11, [X31+48]
	257 Move D10, [X31+56]
	258 Move D13, [X31+32]
	259 Move D12, [X31+40]
	260 Move D15, [X31+16]
	261 Move D14, [X31+24]
	262 Move X2, X31
	263 Add X31, X31, 128
	264 Call NetworkRunner.SendRpc, X0, X1
	265 Return 
	266 Call 0x1C17F20

Method: System.Void RPC_UnattachItem()

Disassembly:
	0x01D8A528 LDP W22, W23, [X21 + 0x2C]
	0x01D8A52C LDR X24, [X24 + 0xA58]
	0x01D8A530 MOV X1, X21
	0x01D8A534 MOV W2, W31
	0x01D8A538 MOV X3, X31
	0x01D8A53C BL 0x1E9C514
	0x01D8A540 MOVZ W8, 0x1
	0x01D8A544 STRB W8, [X19 + 0x58]
	0x01D8A548 LDR X8, [X19]
	0x01D8A54C LDR X1, [X24]
	0x01D8A550 LDRB W10, [X8 + 0x130]
	0x01D8A554 LDRB W9, [X1 + 0x130]
	0x01D8A558 CMP W10, W9
	0x01D8A55C B.CC 0x1D8A5A0
	0x01D8A560 LDR X8, [X8 + 0xC8]
	0x01D8A564 ADD X8, X8, X9, 0x3, LSL
	0x01D8A568 LDUR X8, [X8 - 0x8]
	0x01D8A56C CMP X8, X1
	0x01D8A570 B.NE 0x1D8A5A0
	0x01D8A574 CMP W23, 0x0
	0x01D8A578 CSET W3, NE
	0x01D8A57C CMP W22, 0x0
	0x01D8A580 MOV X0, X19
	0x01D8A584 MOV X1, X20
	0x01D8A588 LDP X20, X19, [X31 + 0x30]
	0x01D8A58C LDP X22, X21, [X31 + 0x20]
	0x01D8A590 LDP X24, X23, [X31 + 0x10]
	0x01D8A594 CSET W2, NE
	0x01D8A598 LDR X30, [X31], #0x40
	0x01D8A59C B 0x1D88C7C
	0x01D8A5A0 MOV X0, X19
	0x01D8A5A4 BL 0x1C171E0
	0x01D8A5A8 BL 0x1C16F20
	0x01D8A5AC SUB X31, X31, 0xA0
	0x01D8A5B0 STP D15, D14, [X31 + 0x30]
	0x01D8A5B4 STP D13, D12, [X31 + 0x40]
	0x01D8A5B8 STP D11, D10, [X31 + 0x50]
	0x01D8A5BC STP D9, D8, [X31 + 0x60]
	0x01D8A5C0 STP X30, X23, [X31 + 0x70]
	0x01D8A5C4 STP X22, X21, [X31 + 0x80]
	0x01D8A5C8 STP X20, X19, [X31 + 0x90]
	0x01D8A5CC ADRP X20, 0x264E000
	0x01D8A5D0 LDRB W8, [X20 + 0x9C1]
	0x01D8A5D4 MOV X21, X1
	0x01D8A5D8 MOV X19, X0
	0x01D8A5DC TBNZ X8, 0x0, 0x1D8A5F4
	0x01D8A5E0 ADRP X0, 0x236C000
	0x01D8A5E4 LDR X0, [X0 + 0xA58]
	0x01D8A5E8 BL 0x1C16CF4
	0x01D8A5EC MOVZ W8, 0x1
	0x01D8A5F0 STRB W8, [X20 + 0x9C1]
	0x01D8A5F4 CBZ X19, 0x1D8A6E4
	0x01D8A5F8 LDR V1, [X21 + 0x2C]
	0x01D8A5FC LDR V0, [X21 + 0x30]
	0x01D8A600 LDR X0, [X19 + 0x38]
	0x01D8A604 ADRP X23, 0x236C000
	0x01D8A608 LDUR X20, [X21 + 0x24]
	0x01D8A60C STP S0, S1, [X31 + 0x28]
	0x01D8A610 LDR V1, [X21 + 0x34]
	0x01D8A614 LDR V0, [X21 + 0x38]
	0x01D8A618 LDP S14, S15, [X21 + 0x44]
	0x01D8A61C LDP S8, S9, [X21 + 0x4C]
	0x01D8A620 LDP S10, S11, [X21 + 0x54]
	0x01D8A624 STP S0, S1, [X31 + 0x20]
	0x01D8A628 LDP S0, S13, [X21 + 0x3C]
	0x01D8A62C LDR V12, [X21 + 0x5C]
	0x01D8A630 LDR W22, [X21 + 0x60]
	0x01D8A634 MOV X1, X21
	0x01D8A638 STR S0, [X31 + 0x1C]
	0x01D8A63C LDR X23, [X23 + 0xA58]
	0x01D8A640 MOV W2, W31
	0x01D8A644 MOV X3, X31
	0x01D8A648 BL 0x1E9C514
	0x01D8A64C MOVZ W8, 0x1
	0x01D8A650 STRB W8, [X19 + 0x58]
	0x01D8A654 LDR X8, [X19]
	0x01D8A658 LDR X1, [X23]
	0x01D8A65C LDRB W10, [X8 + 0x130]
	0x01D8A660 LDRB W9, [X1 + 0x130]
	0x01D8A664 CMP W10, W9
	0x01D8A668 B.CC 0x1D8A6DC
	0x01D8A66C LDR X8, [X8 + 0xC8]
	0x01D8A670 ADD X8, X8, X9, 0x3, LSL
	0x01D8A674 LDUR X8, [X8 - 0x8]
	0x01D8A678 CMP X8, X1
	0x01D8A67C B.NE 0x1D8A6DC
	0x01D8A680 LDP S1, S0, [X31 + 0x28]
	0x01D8A684 LDP S3, S2, [X31 + 0x20]
	0x01D8A688 LDR V4, [X31 + 0x1C]
	0x01D8A68C CMP W22, 0x0
	0x01D8A690 CSET W2, NE
	0x01D8A694 MOV X0, X19
	0x01D8A698 MOV X1, X20
	0x01D8A69C MOV V5.16B, V13.16B
	0x01D8A6A0 MOV V6.16B, V14.16B
	0x01D8A6A4 STP S11, S12, [X31 + 0x14]
	0x01D8A6A8 STR S10, [X31 + 0x10]
	0x01D8A6AC STP S8, S9, [X31 + 0x4]
	0x01D8A6B0 STR S15, [X31]
	0x01D8A6B4 BL 0x1D88FDC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x264F000
	005 Move W8, [X20+2486]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x236D000
	012 Move X0, [X0+2680]
	013 Call 0x1C17CF4
	014 Move X0, 0x236D000
	015 Move X0, [X0+2704]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2486], W8
	019 Move W8, [X19+88]
	020 Compare W8, 0
	021 JumpIfEqual {32}
	022 Move [X19+88], W31
	023 Move X0, X31
	024 Call NetworkBehaviourId.get_None
	025 Move X1, X0
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Call AttachedItemAnchor.set_grabbedItem, X0, X1
	031 Return 
	032 Move X20, 0x236D000
	033 Move X20, [X20+2680]
	034 Move X0, [X20]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X19
	040 Move X1, X31
	041 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	042 Move X0, [X19+56]
	043 Compare X0, 0
	044 JumpIfEqual {126}
	045 Move X1, X31
	046 Call NetworkRunner.get_Stage, X0
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Return 
	052 Move X0, [X19+64]
	053 Compare X0, 0
	054 JumpIfEqual {126}
	055 Move X1, X31
	056 Call NetworkObject.GetLocalAuthorityMask, X0
	057 And W31, W0, 3
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {23}
	062 Move X8, [X19+56]
	063 Compare X8, 0
	064 JumpIfEqual {126}
	065 Move X0, [X8+80]
	066 Compare X0, 0
	067 JumpIfEqual {126}
	068 Move X1, X31
	069 Call Simulation.HasAnyActiveConnections, X0
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {48}
	074 Move X8, [X19+56]
	075 Compare X8, 0
	076 JumpIfEqual {126}
	077 Move X0, [X8+80]
	078 Move W1, 8
	079 Move X2, X31
	080 Call SimulationMessage.Allocate, X0, X1
	081 Move X8, [X19+64]
	082 Compare X8, 0
	083 JumpIfEqual {126}
	084 Move X8, [X8+32]
	085 Move X20, X0
	086 Compare X8, 0
	087 JumpIfEqual {106}
	088 Move W0, [X8]
	089 Move X0, [X20]
	090 Move X19, [X19+64]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X8, 0x236D000
	096 Move X8, [X8+2704]
	097 Move X1, X19
	098 Move X20, [X31+16]
	099 Move X19, [X31+24]
	100 Move W2, 3
	101 Move X0, [X8]
	102 Move X3, X31
	103 Move X30, [X31+32]
	104 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	105 Return 
	106 Move X0, X31
	107 Move W1, [X19+104]
	108 Move W2, 3
	109 Move X3, X31
	110 Call RpcHeader.Create, X0, X1, X2
	111 Move [X20+28], X0
	112 Compare X20, 0
	113 JumpIfEqual {126}
	114 Move W8, 64
	115 Move [X20+12], W8
	116 Move X0, [X19+56]
	117 Compare X0, 0
	118 JumpIfEqual {126}
	119 Move X1, X20
	120 Move X20, [X31+16]
	121 Move X19, [X31+24]
	122 Move X2, X31
	123 Move X30, [X31+32]
	124 Call NetworkRunner.SendRpc, X0, X1
	125 Return 
	126 Call 0x1C17F20

Method: System.Void HandleDrop(Fusion.NetworkBehaviourId objectID, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, UnityEngine.Vector3 velocity, UnityEngine.Vector3 angularVelocity, System.Boolean fromDeath)

Disassembly:
	0x01D8A2FC LDR X8, [X8 + 0xA50]
	0x01D8A300 MOV X1, X0
	0x01D8A304 ADD X2, X31, 0x0
	0x01D8A308 MOV X0, X20
	0x01D8A30C LDR X3, [X8]
	0x01D8A310 BL 0x222BD98
	0x01D8A314 TBZ X0, 0x0, 0x1D8A398
	0x01D8A318 LDR X0, [X21]
	0x01D8A31C LDR X19, [X31]
	0x01D8A320 LDR W8, [X0 + 0xE0]
	0x01D8A324 CBNZ W8, 0x1D8A32C
	0x01D8A328 BL 0x1C16DFC
	0x01D8A32C MOV X0, X19
	0x01D8A330 MOV X1, X31
	0x01D8A334 MOV X2, X31
	0x01D8A338 BL 0x3C354F8
	0x01D8A33C TBZ X0, 0x0, 0x1D8A398
	0x01D8A340 LDR X8, [X31]
	0x01D8A344 CBZ X8, 0x1D8A3A8
	0x01D8A348 LDR X0, [X21]
	0x01D8A34C LDR X19, [X8 + 0x40]
	0x01D8A350 LDR W9, [X0 + 0xE0]
	0x01D8A354 CBNZ W9, 0x1D8A35C
	0x01D8A358 BL 0x1C16DFC
	0x01D8A35C MOV X0, X19
	0x01D8A360 MOV X1, X31
	0x01D8A364 MOV X2, X31
	0x01D8A368 BL 0x3C354F8
	0x01D8A36C TBZ X0, 0x0, 0x1D8A398
	0x01D8A370 LDR X8, [X31]
	0x01D8A374 CBZ X8, 0x1D8A3A8
	0x01D8A378 LDR X0, [X8 + 0x40]
	0x01D8A37C CBZ X0, 0x1D8A3A8
	0x01D8A380 MOV X1, X31
	0x01D8A384 BL 0x1E934B8
	0x01D8A388 TBZ X0, 0x0, 0x1D8A398
	0x01D8A38C LDR X0, [X31]
	0x01D8A390 CBZ X0, 0x1D8A3A8
	0x01D8A394 BL 0x1D8A3AC
	0x01D8A398 LDP X20, X19, [X31 + 0x20]
	0x01D8A39C LDP X30, X21, [X31 + 0x10]
	0x01D8A3A0 ADD X31, X31, 0x30
	0x01D8A3A4 RET
	0x01D8A3A8 BL 0x1C16F20
	0x01D8A3AC STR X30, [X31 - 0x20]!
	0x01D8A3B0 STP X20, X19, [X31 + 0x10]
	0x01D8A3B4 MOV X19, X0
	0x01D8A3B8 LDR X0, [X0 + 0x168]
	0x01D8A3BC CBZ X0, 0x1D8A4AC
	0x01D8A3C0 MOV X1, X31
	0x01D8A3C4 BL 0x3C8F310
	0x01D8A3C8 LDR X0, [X19 + 0x178]
	0x01D8A3CC CBZ X0, 0x1D8A4AC
	0x01D8A3D0 LDR X20, [X19 + 0x168]
	0x01D8A3D4 MOV X1, X31
	0x01D8A3D8 BL 0x3C3F58C
	0x01D8A3DC CBZ X20, 0x1D8A4AC
	0x01D8A3E0 MOV X0, X20
	0x01D8A3E4 MOV X1, X31
	0x01D8A3E8 BL 0x3C8F014
	0x01D8A3EC LDR X0, [X19 + 0x178]
	0x01D8A3F0 CBZ X0, 0x1D8A4AC
	0x01D8A3F4 LDR X20, [X19 + 0x168]
	0x01D8A3F8 MOV X1, X31
	0x01D8A3FC BL 0x3C3DEB4
	0x01D8A400 CBZ X20, 0x1D8A4AC
	0x01D8A404 MOV X0, X20
	0x01D8A408 MOV X1, X31
	0x01D8A40C BL 0x3C8F148
	0x01D8A410 MOV X0, X19
	0x01D8A414 MOV X1, X31
	0x01D8A418 BL 0x3C32E90
	0x01D8A41C LDR X8, [X19 + 0x168]
	0x01D8A420 CBZ X8, 0x1D8A4AC
	0x01D8A424 MOV X20, X0
	0x01D8A428 MOV X0, X8
	0x01D8A42C MOV X1, X31
	0x01D8A430 BL 0x3C8EF74
	0x01D8A434 CBZ X20, 0x1D8A4AC
	0x01D8A438 MOV X0, X20
	0x01D8A43C MOV X1, X31
	0x01D8A440 BL 0x3C3F62C
	0x01D8A444 MOV X0, X19
	0x01D8A448 MOV X1, X31
	0x01D8A44C BL 0x3C32E90
	0x01D8A450 LDR X8, [X19 + 0x168]
	0x01D8A454 CBZ X8, 0x1D8A4AC
	0x01D8A458 MOV X20, X0
	0x01D8A45C MOV X0, X8
	0x01D8A460 MOV X1, X31
	0x01D8A464 BL 0x3C8F0AC
	0x01D8A468 CBZ X20, 0x1D8A4AC
	0x01D8A46C MOV X0, X20
	0x01D8A470 MOV X1, X31
	0x01D8A474 BL 0x3C3F7AC
	0x01D8A478 MOV X0, X19
	0x01D8A47C MOV X1, X31
	0x01D8A480 BL 0x3C32E90
	0x01D8A484 CBZ X0, 0x1D8A4AC
	0x01D8A488 MOV X1, X31
	0x01D8A48C BL 0x3C3F58C
	0x01D8A490 STR S0, [X19 + 0x194]
	0x01D8A494 STR S1, [X19 + 0x198]
	0x01D8A498 STR S2, [X19 + 0x19C]
	0x01D8A49C STRB W31, [X19 + 0x180]
	0x01D8A4A0 LDP X20, X19, [X31 + 0x10]
	0x01D8A4A4 LDR X30, [X31], #0x20
	0x01D8A4A8 RET
	0x01D8A4AC BL 0x1C16F20
	0x01D8A4B0 MOVZ W8, 0x1
	0x01D8A4B4 MOV X1, X31
	0x01D8A4B8 STRB W8, [X0 + 0x84]
	0x01D8A4BC B 0x1E74F04
	0x01D8A4C0 LDR X1, [X0 + 0x88]
	0x01D8A4C4 B 0x1D88124
	0x01D8A4C8 STP X30, X19, [X31 - 0x10]!
	0x01D8A4CC MOV X19, X0
	0x01D8A4D0 BL 0x1D880C4
	0x01D8A4D4 STR X0, [X19 + 0x88]
	0x01D8A4D8 LDP X30, X19, [X31], #0x10
	0x01D8A4DC RET
	0x01D8A4E0 STR X30, [X31 - 0x40]!
	0x01D8A4E4 STP X24, X23, [X31 + 0x10]
	0x01D8A4E8 STP X22, X21, [X31 + 0x20]
	0x01D8A4EC STP X20, X19, [X31 + 0x30]
	0x01D8A4F0 ADRP X20, 0x264E000
	0x01D8A4F4 LDRB W8, [X20 + 0x9C0]
	0x01D8A4F8 MOV X21, X1
	0x01D8A4FC MOV X19, X0
	0x01D8A500 TBNZ X8, 0x0, 0x1D8A518
	0x01D8A504 ADRP X0, 0x236C000
	0x01D8A508 LDR X0, [X0 + 0xA58]
	0x01D8A50C BL 0x1C16CF4
	0x01D8A510 MOVZ W8, 0x1
	0x01D8A514 STRB W8, [X20 + 0x9C0]
	0x01D8A518 CBZ X19, 0x1D8A5A8
	0x01D8A51C LDR X0, [X19 + 0x38]
	0x01D8A520 ADRP X24, 0x236C000
	0x01D8A524 LDUR X20, [X21 + 0x24]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+48], D14
	003 Move [X31+56], D13
	004 Move [X31+64], D12
	005 Move [X31+72], D11
	006 Move [X31+80], D10
	007 Move [X31+88], D9
	008 Move [X31+96], D8
	009 Move [X31+104], X30
	010 Move [X31+112], X24
	011 Move [X31+120], X23
	012 Move [X31+128], X22
	013 Move [X31+136], X21
	014 Move [X31+144], X20
	015 Move [X31+152], X19
	016 Move X22, 0x264F000
	017 Move W8, [X22+2487]
	018 Move W20, W2
	019 Move V8, V6
	020 Move V9, V5
	021 Move V10, V4
	022 Move V11, V3
	023 Move V12, V2
	024 Move V13, V1
	025 Move V14, V0
	026 Move X21, X1
	027 Move X19, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {40}
	032 Move X0, 0x236D000
	033 Move X0, [X0+2640]
	034 Call 0x1C17CF4
	035 Move X0, 0x236A000
	036 Move X0, [X0+1432]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X22+2487], W8
	040 Move [X31+40], X31
	041 Move X0, [X19+56]
	042 Compare X0, 0
	043 JumpIfEqual {181}
	044 Move X8, 0x236D000
	045 Move X8, [X8+2640]
	046 Add X2, X31, 40
	047 Move X1, X21
	048 Move X3, [X8]
	049 Call 0x222CD98, X0, X1, X2
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {165}
	054 Move X22, 0x236A000
	055 Move X22, [X22+1432]
	056 Move X21, [X31+40]
	057 Move X0, [X22]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X21
	063 Move X1, X31
	064 Move X2, X31
	065 Call Object.op_Inequality, X0, X1
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {165}
	070 Move X8, [X31+40]
	071 Compare X8, 0
	072 JumpIfEqual {181}
	073 Move X0, [X22]
	074 Move X21, [X8+64]
	075 Move W9, [X0+224]
	076 Compare W9, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X0, X21
	080 Move X1, X31
	081 Move X2, X31
	082 Call Object.op_Inequality, X0, X1
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {165}
	087 Move X8, [X31+40]
	088 Compare X8, 0
	089 JumpIfEqual {181}
	090 Move X0, [X8+64]
	091 Compare X0, 0
	092 JumpIfEqual {181}
	093 Move X1, X31
	094 Call NetworkObject.get_IsValid, X0
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfNotEqual {165}
	099 Move X0, [X31+40]
	100 Compare X0, 0
	101 JumpIfEqual {181}
	102 Call GrabbableItem.get_attachedAnchorId, X0
	103 Move X8, [X19+64]
	104 Move X21, X0
	105 Compare X8, 0
	106 JumpIfEqual {111}
	107 Move X8, [X8+32]
	108 Compare X8, 0
	109 JumpIfEqual {111}
	110 Move W22, [X8]
	111 Move W22, W31
	112 Move X24, 0x264F000
	113 Move W8, [X24+2592]
	114 Move W23, [X19+104]
	115 Compare W8, 0
	116 JumpIfNotEqual {122}
	117 Move X0, 0x236D000
	118 Move X0, [X0+920]
	119 Call 0x1C17CF4
	120 Move W8, 1
	121 Move [X24+2592], W8
	122 Move X8, 0x236D000
	123 Move X8, [X8+920]
	124 Move X0, [X8]
	125 Move W8, [X0+224]
	126 Compare W8, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X8, X21
	131 ShiftRight X8, 32
	132 And X8, X8, 0x7FFFFFFF
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X0, [X31+40]
	135 Compare X0, 0
	136 JumpIfEqual {181}
	137 Move S1, [X31+180]
	138 Move S0, [X31+184]
	139 Move V2, [X31+176]
	140 Move S4, [X31+164]
	141 Move S3, [X31+168]
	142 Move V5, [X31+160]
	143 Move [X31+24], S0
	144 Move [X31+16], S2
	145 Move [X31+24], S1
	146 And W3, W20, 1
	147 Move [X31], S5
	148 Move [X31+8], S4
	149 Move W2, 1
	150 Move [X31+8], S3
	151 Move X1, X19
	152 Move V0, V14
	153 Move V1, V13
	154 Move V2, V12
	155 Move V3, V11
	156 Move V4, V10
	157 Move V5, V9
	158 Move V6, V8
	159 Call GrabbableItem.Release, X0, X1, X2, X3, X4, X5, X6, X7
	160 Move X0, X31
	161 Call NetworkBehaviourId.get_None
	162 Move X1, X0
	163 Move X0, X19
	164 Call AttachedItemAnchor.set_grabbedItem, X0, X1
	165 Move X20, [X31+144]
	166 Move X19, [X31+152]
	167 Move X22, [X31+128]
	168 Move X21, [X31+136]
	169 Move X24, [X31+112]
	170 Move X23, [X31+120]
	171 Move X30, [X31+104]
	172 Move D9, [X31+88]
	173 Move D8, [X31+96]
	174 Move D11, [X31+72]
	175 Move D10, [X31+80]
	176 Move D13, [X31+56]
	177 Move D12, [X31+64]
	178 Move V14, [X31+48]
	179 Add X31, X31, 160
	180 Return 
	181 Call 0x1C17F20

Method: System.Void ItemCollision(UnityEngine.Collision collision, UnityEngine.Vector3 velocity)

Disassembly:
	0x01D8A838 BL 0x1C16DEC
	0x01D8A83C STP X30, X23, [X31 - 0x30]!
	0x01D8A840 STP X22, X21, [X31 + 0x10]
	0x01D8A844 STP X20, X19, [X31 + 0x20]
	0x01D8A848 ADRP X20, 0x264E000
	0x01D8A84C LDRB W8, [X20 + 0x9C3]
	0x01D8A850 MOV X19, X0
	0x01D8A854 TBNZ X8, 0x0, 0x1D8A878
	0x01D8A858 ADRP X0, 0x236A000

ISIL:
	001 Move X8, [X0+152]
	002 Compare X8, 0
	003 JumpIfEqual {10}
	004 Move X2, X1
	005 Move W1, [X0+128]
	006 Move X4, [X8+24]
	007 Move X0, [X8+64]
	008 Move X3, [X8+40]
	009 CallNoReturn X4
	010 Return 

Method: System.Void HandleRootItemViewUpdated()

Disassembly:
	0x01D8A85C LDR X0, [X0 + 0xE70]
	0x01D8A860 BL 0x1C16CF4
	0x01D8A864 ADRP X0, 0x236C000
	0x01D8A868 LDR X0, [X0 + 0xAC0]
	0x01D8A86C BL 0x1C16CF4
	0x01D8A870 MOVZ W8, 0x1
	0x01D8A874 STRB W8, [X20 + 0x9C3]
	0x01D8A878 LDR X22, [X19 + 0x80]
	0x01D8A87C CBZ X22, 0x1D8A8FC
	0x01D8A880 ADRP X23, 0x236A000
	0x01D8A884 LDR X23, [X23 + 0xE70]
	0x01D8A888 ADRP X21, 0x236C000
	0x01D8A88C LDR X20, [X22 + 0x1D0]
	0x01D8A890 LDR X0, [X23]
	0x01D8A894 LDR X21, [X21 + 0xAC0]
	0x01D8A898 BL 0x1C16F10
	0x01D8A89C LDR X2, [X21]
	0x01D8A8A0 MOV X1, X19
	0x01D8A8A4 MOV X3, X31
	0x01D8A8A8 MOV X21, X0
	0x01D8A8AC BL 0x3314368
	0x01D8A8B0 MOV X0, X20
	0x01D8A8B4 MOV X1, X21
	0x01D8A8B8 MOV X2, X31
	0x01D8A8BC BL 0x33C0DE4
	0x01D8A8C0 CBZ X0, 0x1D8A8E8
	0x01D8A8C4 LDR X1, [X23]
	0x01D8A8C8 LDR X8, [X0]
	0x01D8A8CC CMP X8, X1
	0x01D8A8D0 B.NE 0x1D8A8E4
	0x01D8A8D4 STR X0, [X22 + 0x1D0]
	0x01D8A8D8 LDR X8, [X0]
	0x01D8A8DC CMP X8, X1
	0x01D8A8E0 B.EQ 0x1D8A8EC
	0x01D8A8E4 BL 0x1C171E0
	0x01D8A8E8 STR X0, [X22 + 0x1D0]
	0x01D8A8EC LDP X20, X19, [X31 + 0x20]
	0x01D8A8F0 LDP X22, X21, [X31 + 0x10]
	0x01D8A8F4 LDP X30, X23, [X31], #0x30
	0x01D8A8F8 RET
	0x01D8A8FC BL 0x1C16F20
	0x01D8A900 STP X30, X23, [X31 - 0x30]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x264F000
	006 Move X21, 0x236A000
	007 Move W8, [X20+2488]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x236A000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2488], W8
	019 Move X0, [X21]
	020 Move X20, [X19+192]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Inequality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {55}
	033 Move X0, [X21]
	034 Move X21, [X19+192]
	035 Move X20, [X19+200]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X21
	041 Move X1, X20
	042 Move X2, X31
	043 Call Object.op_Inequality, X0, X1
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {55}
	048 Move X0, [X19+192]
	049 Compare X0, 0
	050 JumpIfEqual {60}
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Return 
	060 Call 0x1C17F20

Method: System.Void HandleRootItemVisibleUpdated()

Disassembly:
	0x01D8AC4C B 0x1EA1E24
	0x01D8AC50 BL 0x1C16F20
	0x01D8AC54 B 0x1D8AAC0
	0x01D8AC58 MOV X1, X31
	0x01D8AC5C B 0x1E74F04
	0x01D8AC60 LDRB W1, [X0 + 0x98]
	0x01D8AC64 B 0x1D8A7D8
	0x01D8AC68 STP X30, X19, [X31 - 0x10]!
	0x01D8AC6C MOV X19, X0
	0x01D8AC70 BL 0x1D8A770
	0x01D8AC74 AND W8, W0, 0x1
	0x01D8AC78 STRB W8, [X19 + 0x98]
	0x01D8AC7C LDP X30, X19, [X31], #0x10
	0x01D8AC80 RET
	0x01D8AC84 STR X30, [X31 - 0x20]!
	0x01D8AC88 STP X20, X19, [X31 + 0x10]
	0x01D8AC8C ADRP X20, 0x264E000
	0x01D8AC90 LDRB W8, [X20 + 0x9C6]
	0x01D8AC94 MOV X19, X0
	0x01D8AC98 TBNZ X8, 0x0, 0x1D8ACB0
	0x01D8AC9C ADRP X0, 0x236C000
	0x01D8ACA0 LDR X0, [X0 + 0xAD0]
	0x01D8ACA4 BL 0x1C16CF4
	0x01D8ACA8 MOVZ W8, 0x1
	0x01D8ACAC STRB W8, [X20 + 0x9C6]
	0x01D8ACB0 CBZ X19, 0x1D8AD08
	0x01D8ACB4 ADRP X9, 0x236C000
	0x01D8ACB8 LDR X9, [X9 + 0xAD0]
	0x01D8ACBC MOVZ W8, 0x1
	0x01D8ACC0 STRB W8, [X19 + 0x58]
	0x01D8ACC4 LDR X8, [X19]
	0x01D8ACC8 LDR X1, [X9]
	0x01D8ACCC LDRB W10, [X8 + 0x130]
	0x01D8ACD0 LDRB W9, [X1 + 0x130]
	0x01D8ACD4 CMP W10, W9
	0x01D8ACD8 B.CC 0x1D8AD00
	0x01D8ACDC LDR X8, [X8 + 0xC8]
	0x01D8ACE0 ADD X8, X8, X9, 0x3, LSL
	0x01D8ACE4 LDUR X8, [X8 - 0x8]
	0x01D8ACE8 CMP X8, X1
	0x01D8ACEC B.NE 0x1D8AD00
	0x01D8ACF0 MOV X0, X19
	0x01D8ACF4 LDP X20, X19, [X31 + 0x10]
	0x01D8ACF8 LDR X30, [X31], #0x20
	0x01D8ACFC B 0x1D8AAC0
	0x01D8AD00 MOV X0, X19
	0x01D8AD04 BL 0x1C171E0
	0x01D8AD08 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x264F000
	006 Move X21, 0x236A000
	007 Move W8, [X20+2489]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x236A000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2489], W8
	019 Move X0, [X21]
	020 Move X20, [X19+200]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Inequality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {63}
	033 Move X0, [X21]
	034 Move X20, [X19+192]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X20
	040 Move X1, X31
	041 Move X2, X31
	042 Call Object.op_Inequality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {63}
	047 Move X0, [X19+200]
	048 Compare X0, 0
	049 JumpIfEqual {68}
	050 Move X19, [X19+192]
	051 Call GrabbableItem.get_isVisible, X0
	052 Compare X19, 0
	053 JumpIfEqual {68}
	054 NotImplemented "Instruction ORN not yet implemented."
	055 Move X0, X19
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 And W1, W8, 1
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 Call GrabbableItem.set_isHidden, X0, X1
	062 Return 
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X30, [X31+32]
	066 Move X21, [X31+40]
	067 Return 
	068 Call 0x1C17F20

Method: System.Void ResetGrabbedItem()

Disassembly:
	0x01D896B4 BL 0x1C16F20
	0x01D896B8 STP X30, X19, [X31 - 0x10]!
	0x01D896BC LDR X8, [X0 + 0x50]
	0x01D896C0 CBZ X8, 0x1D896D0
	0x01D896C4 LDR X0, [X8]
	0x01D896C8 LDP X30, X19, [X31], #0x10
	0x01D896CC RET
	0x01D896D0 ADRP X0, 0x236A000
	0x01D896D4 LDR X0, [X0 + 0x5B0]
	0x01D896D8 BL 0x1C16D08
	0x01D896DC BL 0x1C16F10
	0x01D896E0 MOV X19, X0
	0x01D896E4 ADRP X0, 0x236D000
	0x01D896E8 LDR X0, [X0 + 0xA98]
	0x01D896EC BL 0x1C16D08
	0x01D896F0 MOV X1, X0
	0x01D896F4 MOV X0, X19
	0x01D896F8 MOV X2, X31
	0x01D896FC BL 0x337DF1C
	0x01D89700 ADRP X0, 0x236D000
	0x01D89704 LDR X0, [X0 + 0xAA0]
	0x01D89708 BL 0x1C16D08
	0x01D8970C MOV X1, X0
	0x01D89710 MOV X0, X19
	0x01D89714 BL 0x1C16DEC
	0x01D89718 SUB X31, X31, 0x90
	0x01D8971C STP D15, D14, [X31 + 0x10]
	0x01D89720 STP D13, D12, [X31 + 0x20]
	0x01D89724 STP D11, D10, [X31 + 0x30]
	0x01D89728 STP D9, D8, [X31 + 0x40]
	0x01D8972C STR X30, [X31 + 0x50]
	0x01D89730 STP X24, X23, [X31 + 0x60]
	0x01D89734 STP X22, X21, [X31 + 0x70]
	0x01D89738 STP X20, X19, [X31 + 0x80]
	0x01D8973C LDP S9, S8, [X31 + 0xA4]
	0x01D89740 LDR V11, [X31 + 0xA0]
	0x01D89744 LDP S10, S15, [X31 + 0x94]
	0x01D89748 LDR V12, [X31 + 0x90]
	0x01D8974C STP S5, S6, [X31 + 0x58]
	0x01D89750 STP S3, S4, [X31 + 0x8]
	0x01D89754 STR S2, [X31 + 0x4]
	0x01D89758 STR X31, [X0 + 0x1A0]
	0x01D8975C CBZ X1, 0x1D89834
	0x01D89760 ADRP X24, 0x264F000
	0x01D89764 LDRB W8, [X24 + 0xA22]
	0x01D89768 LDR X23, [X1 + 0x38]
	0x01D8976C MOV W19, W3
	0x01D89770 MOV W20, W2
	0x01D89774 MOV V13.16B, V1.16B
	0x01D89778 MOV V14.16B, V0.16B
	0x01D8977C MOV X22, X1
	0x01D89780 MOV X21, X0
	0x01D89784 CBNZ W8, 0x1D8979C
	0x01D89788 ADRP X0, 0x236A000
	0x01D8978C LDR X0, [X0 + 0x598]
	0x01D89790 BL 0x1C16CF4
	0x01D89794 MOVZ W8, 0x1
	0x01D89798 STRB W8, [X24 + 0xA22]
	0x01D8979C ADRP X8, 0x236A000
	0x01D897A0 LDR X8, [X8 + 0x598]
	0x01D897A4 LDR X0, [X8]
	0x01D897A8 LDR W8, [X0 + 0xE0]
	0x01D897AC CBNZ W8, 0x1D897B4
	0x01D897B0 BL 0x1C16DFC
	0x01D897B4 MOV X0, X23
	0x01D897B8 MOV X1, X31
	0x01D897BC BL 0x3C38948
	0x01D897C0 MOV X1, X31
	0x01D897C4 TBZ X0, 0x0, 0x1D897DC
	0x01D897C8 LDR X0, [X22 + 0x38]
	0x01D897CC MOV X1, X22
	0x01D897D0 MOV X2, X31
	0x01D897D4 BL 0x1E74CA0
	0x01D897D8 MOV X1, X0
	0x01D897DC STP S11, S9, [X31 + 0xA0]
	0x01D897E0 STP S12, S10, [X31 + 0x90]
	0x01D897E4 STR S8, [X31 + 0xA8]
	0x01D897E8 AND W2, W20, 0x1
	0x01D897EC AND W3, W19, 0x1
	0x01D897F0 STR S15, [X31 + 0x98]
	0x01D897F4 MOV X0, X21
	0x01D897F8 MOV V0.16B, V14.16B
	0x01D897FC MOV V1.16B, V13.16B
	0x01D89800 LDP S2, S3, [X31 + 0x4]
	0x01D89804 LDR V4, [X31 + 0xC]
	0x01D89808 LDP S5, S6, [X31 + 0x58]
	0x01D8980C LDP X20, X19, [X31 + 0x80]
	0x01D89810 LDP X22, X21, [X31 + 0x70]
	0x01D89814 LDP X24, X23, [X31 + 0x60]
	0x01D89818 LDR X30, [X31 + 0x50]
	0x01D8981C LDP D9, D8, [X31 + 0x40]
	0x01D89820 LDP D11, D10, [X31 + 0x30]
	0x01D89824 LDP D13, D12, [X31 + 0x20]
	0x01D89828 LDP D15, D14, [X31 + 0x10]
	0x01D8982C ADD X31, X31, 0x90
	0x01D89830 B 0x1D8FA3C
	0x01D89834 BL 0x1C16F20
	0x01D89838 LDR X8, [X0 + 0x98]
	0x01D8983C CBZ X8, 0x1D89858
	0x01D89840 MOV X2, X1
	0x01D89844 LDR W1, [X0 + 0x80]
	0x01D89848 LDR X4, [X8 + 0x18]
	0x01D8984C LDR X0, [X8 + 0x40]
	0x01D89850 LDR X3, [X8 + 0x28]
	0x01D89854 BR X4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x2650000
	008 Move X20, 0x236B000
	009 Move W8, [X21+2490]
	010 Move X20, [X20+1432]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x236E000
	017 Move X0, [X0+2608]
	018 Call 0x1C17CF4
	019 Move X0, 0x236C000
	020 Move X0, [X0+3696]
	021 Call 0x1C17CF4
	022 Move X0, 0x236E000
	023 Move X0, [X0+2616]
	024 Call 0x1C17CF4
	025 Move X0, 0x236E000
	026 Move X0, [X0+2624]
	027 Call 0x1C17CF4
	028 Move X0, 0x236B000
	029 Move X0, [X0+1432]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+2490], W8
	033 Move X0, [X20]
	034 Move X20, [X19+192]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X20
	040 Move X1, X31
	041 Move X2, X31
	042 Call Object.op_Inequality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {114}
	047 Move X22, [X19+192]
	048 Compare X22, 0
	049 JumpIfEqual {122}
	050 Move X23, 0x236C000
	051 Move X20, [X22+456]
	052 Move X23, [X23+3696]
	053 Move X0, [X23]
	054 Call 0x1C17F10
	055 Move X8, 0x236E000
	056 Move X8, [X8+2624]
	057 Move X1, X19
	058 Move X3, X31
	059 Move X21, X0
	060 Move X2, [X8]
	061 Call Action..ctor, X0, X1, X2
	062 Move X0, X20
	063 Move X1, X21
	064 Move X2, X31
	065 Call Delegate.Remove, X0, X1
	066 Compare X0, 0
	067 JumpIfEqual {75}
	068 Move X1, [X23]
	069 Move X8, [X0]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move [X22+456], X0
	072 Move X8, [X0]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Call 0x1C181E0
	075 Move [X22+456], X0
	076 Move X22, [X19+192]
	077 Compare X22, 0
	078 JumpIfEqual {122}
	079 Move X23, 0x236E000
	080 Move X20, [X22+496]
	081 Move X23, [X23+2608]
	082 Move X0, [X23]
	083 Call 0x1C17F10
	084 Move X8, 0x236E000
	085 Move X8, [X8+2616]
	086 Move X1, X19
	087 Move X3, X31
	088 Move X21, X0
	089 Move X2, [X8]
	090 Call Action`1<Object>..ctor, X0, X1, X2
	091 Move X0, X20
	092 Move X1, X21
	093 Move X2, X31
	094 Call Delegate.Remove, X0, X1
	095 Compare X0, 0
	096 JumpIfEqual {113}
	097 Move X21, [X23]
	098 Move X20, X0
	099 Move X1, X21
	100 Call 0x1C17E00
	101 Compare X0, 0
	102 JumpIfEqual {110}
	103 Move [X22+496], X0
	104 Move X21, [X23]
	105 Move X0, X20
	106 Move X1, X21
	107 Call 0x1C17E00
	108 Compare X0, 0
	109 JumpIfNotEqual {114}
	110 Move X0, X20
	111 Move X1, X21
	112 Call 0x1C181E0
	113 Move [X22+496], X31
	114 Move [X19+192], X31
	115 Move X20, [X31+32]
	116 Move X19, [X31+40]
	117 Move X22, [X31+16]
	118 Move X21, [X31+24]
	119 Move X30, [X31+48]
	120 Move X23, [X31+56]
	121 Return 
	122 Call 0x1C17F20

Method: System.Void HandleGrabbedItemChanged()

Disassembly:
	0x01D891D4 BL 0x1ED9318
	0x01D891D8 LDR X8, [X20 + 0x40]
	0x01D891DC CBZ X8, 0x1D892F8
	0x01D891E0 LDR X8, [X8 + 0x20]
	0x01D891E4 MOV X22, X0
	0x01D891E8 CBZ X8, 0x1D89264
	0x01D891EC LDR W0, [X8]
	0x01D891F0 B 0x1D89268
	0x01D891F4 LDR X0, [X22]
	0x01D891F8 LDR X19, [X20 + 0x40]
	0x01D891FC LDR W8, [X0 + 0xE0]
	0x01D89200 CBNZ W8, 0x1D89208
	0x01D89204 BL 0x1C16DFC
	0x01D89208 ADRP X8, 0x236D000
	0x01D8920C LDR X8, [X8 + 0xA88]
	0x01D89210 MOV X1, X19
	0x01D89214 LDP X20, X19, [X31 + 0x70]
	0x01D89218 LDP X22, X21, [X31 + 0x60]
	0x01D8921C LDR X0, [X8]
	0x01D89220 LDR X30, [X31 + 0x50]
	0x01D89224 LDP D9, D8, [X31 + 0x40]
	0x01D89228 LDP D11, D10, [X31 + 0x30]
	0x01D8922C LDP D13, D12, [X31 + 0x20]
	0x01D89230 LDP D15, D14, [X31 + 0x10]
	0x01D89234 MOVZ W2, 0x3
	0x01D89238 MOV X3, X31
	0x01D8923C ADD X31, X31, 0x80
	0x01D89240 B 0x1E77B00
	0x01D89244 MOV W1, W31
	0x01D89248 MOV W2, W31
	0x01D8924C MOV X3, X31
	0x01D89250 BL 0x1E9C494
	0x01D89254 LDP S0, S6, [X31 + 0x58]
	0x01D89258 LDP S2, S1, [X31 + 0x8]
	0x01D8925C LDR V3, [X31 + 0x4]
	0x01D89260 B 0x1D890C0
	0x01D89264 MOV X0, X31
	0x01D89268 LDR W1, [X20 + 0x68]
	0x01D8926C MOVZ W2, 0x2
	0x01D89270 MOV X3, X31
	0x01D89274 BL 0x1E9C23C
	0x01D89278 LDR V1, [X31 + 0x5C]
	0x01D8927C LDR V0, [X31 + 0x4]
	0x01D89280 AND W8, W19, 0x1
	0x01D89284 STUR X0, [X22 + 0x1C]
	0x01D89288 STUR X21, [X22 + 0x24]
	0x01D8928C STP S1, S0, [X22 + 0x44]
	0x01D89290 LDR V0, [X31 + 0x8]
	0x01D89294 LDR V1, [X31 + 0xC]
	0x01D89298 STP S15, S10, [X22 + 0x2C]
	0x01D8929C STP S9, S8, [X22 + 0x34]
	0x01D892A0 STP S0, S11, [X22 + 0x4C]
	0x01D892A4 LDR V0, [X31 + 0x58]
	0x01D892A8 STP S13, S12, [X22 + 0x3C]
	0x01D892AC STR S14, [X22 + 0x5C]
	0x01D892B0 STR W8, [X22 + 0x60]
	0x01D892B4 STP S1, S0, [X22 + 0x54]
	0x01D892B8 CBZ X22, 0x1D892F8
	0x01D892BC MOVZ W8, 0x240
	0x01D892C0 STR W8, [X22 + 0xC]
	0x01D892C4 LDR X0, [X20 + 0x38]
	0x01D892C8 CBZ X0, 0x1D892F8
	0x01D892CC MOV X1, X22
	0x01D892D0 LDP X20, X19, [X31 + 0x70]
	0x01D892D4 LDP X22, X21, [X31 + 0x60]
	0x01D892D8 LDR X30, [X31 + 0x50]
	0x01D892DC LDP D9, D8, [X31 + 0x40]
	0x01D892E0 LDP D11, D10, [X31 + 0x30]
	0x01D892E4 LDP D13, D12, [X31 + 0x20]
	0x01D892E8 LDP D15, D14, [X31 + 0x10]
	0x01D892EC MOV X2, X31
	0x01D892F0 ADD X31, X31, 0x80
	0x01D892F4 B 0x1EA1E24
	0x01D892F8 BL 0x1C16F20
	0x01D892FC SUB X31, X31, 0xA0
	0x01D89300 STR D14, [X31 + 0x30]
	0x01D89304 STP D13, D12, [X31 + 0x38]
	0x01D89308 STP D11, D10, [X31 + 0x48]
	0x01D8930C STP D9, D8, [X31 + 0x58]
	0x01D89310 STR X30, [X31 + 0x68]
	0x01D89314 STP X24, X23, [X31 + 0x70]
	0x01D89318 STP X22, X21, [X31 + 0x80]
	0x01D8931C STP X20, X19, [X31 + 0x90]
	0x01D89320 ADRP X22, 0x264F000
	0x01D89324 LDRB W8, [X22 + 0x9B7]
	0x01D89328 MOV W20, W2
	0x01D8932C MOV V8.16B, V6.16B
	0x01D89330 MOV V9.16B, V5.16B
	0x01D89334 MOV V10.16B, V4.16B
	0x01D89338 MOV V11.16B, V3.16B
	0x01D8933C MOV V12.16B, V2.16B
	0x01D89340 MOV V13.16B, V1.16B
	0x01D89344 MOV V14.16B, V0.16B
	0x01D89348 MOV X21, X1
	0x01D8934C MOV X19, X0
	0x01D89350 TBNZ X8, 0x0, 0x1D89374
	0x01D89354 ADRP X0, 0x236D000
	0x01D89358 LDR X0, [X0 + 0xA50]
	0x01D8935C BL 0x1C16CF4
	0x01D89360 ADRP X0, 0x236A000
	0x01D89364 LDR X0, [X0 + 0x598]
	0x01D89368 BL 0x1C16CF4
	0x01D8936C MOVZ W8, 0x1
	0x01D89370 STRB W8, [X22 + 0x9B7]
	0x01D89374 STR X31, [X31 + 0x28]
	0x01D89378 LDR X0, [X19 + 0x38]
	0x01D8937C CBZ X0, 0x1D89524
	0x01D89380 ADRP X8, 0x236D000
	0x01D89384 LDR X8, [X8 + 0xA50]
	0x01D89388 ADD X2, X31, 0x28
	0x01D8938C MOV X1, X21
	0x01D89390 LDR X3, [X8]
	0x01D89394 BL 0x222BD98
	0x01D89398 TBZ X0, 0x0, 0x1D894FC
	0x01D8939C ADRP X22, 0x236A000
	0x01D893A0 LDR X22, [X22 + 0x598]
	0x01D893A4 LDR X21, [X31 + 0x28]
	0x01D893A8 LDR X0, [X22]
	0x01D893AC LDR W8, [X0 + 0xE0]
	0x01D893B0 CBNZ W8, 0x1D893B8
	0x01D893B4 BL 0x1C16DFC
	0x01D893B8 MOV X0, X21
	0x01D893BC MOV X1, X31
	0x01D893C0 MOV X2, X31
	0x01D893C4 BL 0x3C354F8
	0x01D893C8 TBZ X0, 0x0, 0x1D894FC
	0x01D893CC LDR X8, [X31 + 0x28]
	0x01D893D0 CBZ X8, 0x1D89524
	0x01D893D4 LDR X0, [X22]
	0x01D893D8 LDR X21, [X8 + 0x40]
	0x01D893DC LDR W9, [X0 + 0xE0]
	0x01D893E0 CBNZ W9, 0x1D893E8
	0x01D893E4 BL 0x1C16DFC
	0x01D893E8 MOV X0, X21
	0x01D893EC MOV X1, X31
	0x01D893F0 MOV X2, X31
	0x01D893F4 BL 0x3C354F8
	0x01D893F8 TBZ X0, 0x0, 0x1D894FC
	0x01D893FC LDR X8, [X31 + 0x28]
	0x01D89400 CBZ X8, 0x1D89524
	0x01D89404 LDR X0, [X8 + 0x40]
	0x01D89408 CBZ X0, 0x1D89524
	0x01D8940C MOV X1, X31
	0x01D89410 BL 0x1E934B8
	0x01D89414 TBZ X0, 0x0, 0x1D894FC
	0x01D89418 LDR X0, [X31 + 0x28]
	0x01D8941C CBZ X0, 0x1D89524
	0x01D89420 BL 0x1D896B8
	0x01D89424 LDR X8, [X19 + 0x40]
	0x01D89428 MOV X21, X0
	0x01D8942C CBZ X8, 0x1D89440
	0x01D89430 LDR X8, [X8 + 0x20]
	0x01D89434 CBZ X8, 0x1D89440
	0x01D89438 LDR W22, [X8]
	0x01D8943C B 0x1D89444
	0x01D89440 MOV W22, W31
	0x01D89444 ADRP X24, 0x264F000
	0x01D89448 LDRB W8, [X24 + 0xA20]
	0x01D8944C LDR W23, [X19 + 0x68]
	0x01D89450 CBNZ W8, 0x1D89468
	0x01D89454 ADRP X0, 0x236D000
	0x01D89458 LDR X0, [X0 + 0x398]
	0x01D8945C BL 0x1C16CF4
	0x01D89460 MOVZ W8, 0x1
	0x01D89464 STRB W8, [X24 + 0xA20]
	0x01D89468 ADRP X8, 0x236D000
	0x01D8946C LDR X8, [X8 + 0x398]
	0x01D89470 LDR X0, [X8]
	0x01D89474 LDR W8, [X0 + 0xE0]
	0x01D89478 CBNZ W8, 0x1D89480
	0x01D8947C BL 0x1C16DFC
	0x01D89480 CMP W22, W21
	0x01D89484 B.NE 0x1D894FC
	0x01D89488 UBFM X8, X21, 0x20, 0x3F
	0x01D8948C CMP W23, W8
	0x01D89490 B.NE 0x1D894FC
	0x01D89494 LDR X0, [X31 + 0x28]
	0x01D89498 CBZ X0, 0x1D89524
	0x01D8949C LDP S1, S0, [X31 + 0xB4]
	0x01D894A0 LDR V2, [X31 + 0xB0]
	0x01D894A4 LDP S4, S3, [X31 + 0xA4]
	0x01D894A8 LDR V5, [X31 + 0xA0]
	0x01D894AC STR S0, [X31 + 0x18]
	0x01D894B0 STP S2, S1, [X31 + 0x10]
	0x01D894B4 AND W3, W20, 0x1
	0x01D894B8 STP S5, S4, [X31]
	0x01D894BC MOVZ W2, 0x1
	0x01D894C0 STR S3, [X31 + 0x8]
	0x01D894C4 MOV X1, X19
	0x01D894C8 MOV V0.16B, V14.16B
	0x01D894CC MOV V1.16B, V13.16B
	0x01D894D0 MOV V2.16B, V12.16B
	0x01D894D4 MOV V3.16B, V11.16B
	0x01D894D8 MOV V4.16B, V10.16B
	0x01D894DC MOV V5.16B, V9.16B
	0x01D894E0 MOV V6.16B, V8.16B
	0x01D894E4 BL 0x1D89718
	0x01D894E8 MOV X0, X31
	0x01D894EC BL 0x1E769D8
	0x01D894F0 MOV X1, X0
	0x01D894F4 MOV X0, X19
	0x01D894F8 BL 0x1D88124
	0x01D894FC LDP X20, X19, [X31 + 0x90]
	0x01D89500 LDP X22, X21, [X31 + 0x80]
	0x01D89504 LDP X24, X23, [X31 + 0x70]
	0x01D89508 LDR X30, [X31 + 0x68]
	0x01D8950C LDP D9, D8, [X31 + 0x58]
	0x01D89510 LDP D11, D10, [X31 + 0x48]
	0x01D89514 LDP D13, D12, [X31 + 0x38]
	0x01D89518 LDR V14, [X31 + 0x30]
	0x01D8951C ADD X31, X31, 0xA0
	0x01D89520 RET
	0x01D89524 BL 0x1C16F20
	0x01D89528 STR X30, [X31 - 0x20]!
	0x01D8952C STP X20, X19, [X31 + 0x10]
	0x01D89530 ADRP X20, 0x264F000
	0x01D89534 LDRB W8, [X20 + 0x9B6]
	0x01D89538 MOV X19, X0
	0x01D8953C TBNZ X8, 0x0, 0x1D89560
	0x01D89540 ADRP X0, 0x236D000
	0x01D89544 LDR X0, [X0 + 0xA78]
	0x01D89548 BL 0x1C16CF4
	0x01D8954C ADRP X0, 0x236D000
	0x01D89550 LDR X0, [X0 + 0xA90]
	0x01D89554 BL 0x1C16CF4
	0x01D89558 MOVZ W8, 0x1
	0x01D8955C STRB W8, [X20 + 0x9B6]
	0x01D89560 LDRB W8, [X19 + 0x58]
	0x01D89564 CBZ W8, 0x1D89588
	0x01D89568 STRB W31, [X19 + 0x58]
	0x01D8956C MOV X0, X31
	0x01D89570 BL 0x1E769D8
	0x01D89574 MOV X1, X0
	0x01D89578 MOV X0, X19
	0x01D8957C LDP X20, X19, [X31 + 0x10]
	0x01D89580 LDR X30, [X31], #0x20
	0x01D89584 B 0x1D88124
	0x01D89588 ADRP X20, 0x236D000
	0x01D8958C LDR X20, [X20 + 0xA78]
	0x01D89590 LDR X0, [X20]
	0x01D89594 LDR W8, [X0 + 0xE0]
	0x01D89598 CBNZ W8, 0x1D895A0
	0x01D8959C BL 0x1C16DFC
	0x01D895A0 MOV X0, X19
	0x01D895A4 MOV X1, X31
	0x01D895A8 BL 0x1E77B08
	0x01D895AC LDR X0, [X19 + 0x38]
	0x01D895B0 CBZ X0, 0x1D896B4
	0x01D895B4 MOV X1, X31
	0x01D895B8 BL 0x1E9E538
	0x01D895BC CMP W0, 0x4
	0x01D895C0 B.NE 0x1D895D0
	0x01D895C4 LDP X20, X19, [X31 + 0x10]
	0x01D895C8 LDR X30, [X31], #0x20
	0x01D895CC RET
	0x01D895D0 LDR X0, [X19 + 0x40]
	0x01D895D4 CBZ X0, 0x1D896B4
	0x01D895D8 MOV X1, X31
	0x01D895DC BL 0x1E94078
	0x01D895E0 ANDS W31, W0, 0x3
	0x01D895E4 B.EQ 0x1D8963C
	0x01D895E8 TBNZ X0, 0x0, 0x1D8956C
	0x01D895EC LDR X8, [X19 + 0x38]
	0x01D895F0 CBZ X8, 0x1D896B4
	0x01D895F4 LDR X0, [X8 + 0x50]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x2650000
	011 Move W8, [X20+2491]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {43}
	017 Move X0, 0x236E000
	018 Move X0, [X0+2608]
	019 Call 0x1C17CF4
	020 Move X0, 0x236C000
	021 Move X0, [X0+3696]
	022 Call 0x1C17CF4
	023 Move X0, 0x236E000
	024 Move X0, [X0+2616]
	025 Call 0x1C17CF4
	026 Move X0, 0x236E000
	027 Move X0, [X0+2624]
	028 Call 0x1C17CF4
	029 Move X0, 0x236E000
	030 Move X0, [X0+2632]
	031 Call 0x1C17CF4
	032 Move X0, 0x236E000
	033 Move X0, [X0+2640]
	034 Call 0x1C17CF4
	035 Move X0, 0x236B000
	036 Move X0, [X0+1432]
	037 Call 0x1C17CF4
	038 Move X0, 0x236D000
	039 Move X0, [X0+1992]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X20+2491], W8
	043 Move X0, X19
	044 Call AttachedItemAnchor.ResetGrabbedItem, X0
	045 Move X0, X19
	046 Call AttachedItemAnchor.get_grabbedItem, X0
	047 Move [X31+8], X0
	048 Add X0, X31, 8
	049 Move X1, X31
	050 Call NetworkBehaviourId.get_IsValid, X0
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {67}
	055 Move X20, [X19+56]
	056 Move X0, X19
	057 Call AttachedItemAnchor.get_grabbedItem, X0
	058 Compare X20, 0
	059 JumpIfEqual {312}
	060 Move X8, 0x236E000
	061 Move X8, [X8+2640]
	062 Move X1, X0
	063 Add X2, X19, 192
	064 Move X0, X20
	065 Move X3, [X8]
	066 Call 0x222CD98, X0, X1, X2
	067 Move X8, [X19+144]
	068 Compare X8, 0
	069 JumpIfEqual {76}
	070 Move W1, [X19+128]
	071 Move X2, [X19+192]
	072 Move X9, [X8+24]
	073 Move X0, [X8+64]
	074 Move X3, [X8+40]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move X0, [X19+64]
	077 Compare X0, 0
	078 JumpIfEqual {302}
	079 Move W8, [X0+96]
	080 Move TEMP, X8
	081 And TEMP, TEMP, 2
	082 Compare TEMP, 2
	083 JumpIfEqual {302}
	084 Move X1, X31
	085 Call NetworkObject.get_HasStateAuthority, X0
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {302}
	090 Move X22, 0x236B000
	091 Move X22, [X22+1432]
	092 Move X20, [X19+192]
	093 Move X0, [X22]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Move X0, X20
	099 Move X1, X31
	100 Move X2, X31
	101 Call Object.op_Inequality, X0, X1
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {173}
	106 Move X23, [X19+192]
	107 Compare X23, 0
	108 JumpIfEqual {312}
	109 Move X24, 0x236C000
	110 Move X20, [X23+456]
	111 Move X24, [X24+3696]
	112 Move X0, [X24]
	113 Call 0x1C17F10
	114 Move X8, 0x236E000
	115 Move X8, [X8+2624]
	116 Move X1, X19
	117 Move X3, X31
	118 Move X21, X0
	119 Move X2, [X8]
	120 Call Action..ctor, X0, X1, X2
	121 Move X0, X20
	122 Move X1, X21
	123 Move X2, X31
	124 Call Delegate.Combine, X0, X1
	125 Compare X0, 0
	126 JumpIfEqual {134}
	127 Move X1, [X24]
	128 Move X8, [X0]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move [X23+456], X0
	131 Move X8, [X0]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Call 0x1C181E0
	134 Move [X23+456], X0
	135 Move X23, [X19+192]
	136 Compare X23, 0
	137 JumpIfEqual {312}
	138 Move X24, 0x236E000
	139 Move X20, [X23+496]
	140 Move X24, [X24+2608]
	141 Move X0, [X24]
	142 Call 0x1C17F10
	143 Move X8, 0x236E000
	144 Move X8, [X8+2616]
	145 Move X1, X19
	146 Move X3, X31
	147 Move X21, X0
	148 Move X2, [X8]
	149 Call Action`1<Object>..ctor, X0, X1, X2
	150 Move X0, X20
	151 Move X1, X21
	152 Move X2, X31
	153 Call Delegate.Combine, X0, X1
	154 Compare X0, 0
	155 JumpIfEqual {172}
	156 Move X21, [X24]
	157 Move X20, X0
	158 Move X1, X21
	159 Call 0x1C17E00
	160 Compare X0, 0
	161 JumpIfEqual {169}
	162 Move [X23+496], X0
	163 Move X21, [X24]
	164 Move X0, X20
	165 Move X1, X21
	166 Call 0x1C17E00
	167 Compare X0, 0
	168 JumpIfNotEqual {173}
	169 Move X0, X20
	170 Move X1, X21
	171 Call 0x1C181E0
	172 Move [X23+496], X31
	173 Move W8, [X19+128]
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move X0, [X22]
	176 Move X20, [X19+192]
	177 Move W8, [X0+224]
	178 Compare W8, 0
	179 JumpIfNotEqual {181}
	180 Call 0x1C17DFC
	181 Move X0, X20
	182 Move X1, X31
	183 Move X2, X31
	184 Call Object.op_Inequality, X0, X1
	185 Move S8, W31
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {238}
	190 Move X0, [X19+192]
	191 Compare X0, 0
	192 JumpIfEqual {312}
	193 Move X8, 0x236E000
	194 Move X8, [X8+2632]
	195 Move X1, [X8]
	196 Call 0x21A4894, X0
	197 Move X8, [X22]
	198 Move X19, X0
	199 Move W9, [X8+224]
	200 Compare W9, 0
	201 JumpIfNotEqual {204}
	202 Move X0, X8
	203 Call 0x1C17DFC
	204 Move X0, X19
	205 Move X1, X31
	206 Move X2, X31
	207 Call Object.op_Inequality, X0, X1
	208 Move TEMP, X0
	209 And TEMP, TEMP, 1
	210 Compare TEMP, 1
	211 JumpIfNotEqual {238}
	212 Compare X19, 0
	213 JumpIfEqual {312}
	214 Move X0, X19
	215 Move X1, X31
	216 Call InventoryBag.GetFilledAmount, X0
	217 Move V8, V0
	218 Move W19, 1
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Move X0, [X22]
	221 Move X20, [X19+192]
	222 Move W8, [X0+224]
	223 Compare W8, 0
	224 JumpIfNotEqual {226}
	225 Call 0x1C17DFC
	226 Move X0, X20
	227 Move X1, X31
	228 Move X2, X31
	229 Call Object.op_Inequality, X0, X1
	230 Move TEMP, X0
	231 And TEMP, TEMP, 1
	232 Compare TEMP, 1
	233 JumpIfNotEqual {269}
	234 Move X8, [X19+192]
	235 Compare X8, 0
	236 JumpIfEqual {312}
	237 Move W20, [X8+188]
	238 Move W19, W31
	239 Move X20, 0x236D000
	240 Move X20, [X20+1992]
	241 Move X0, [X20]
	242 Move W8, [X0+224]
	243 Compare W8, 0
	244 JumpIfNotEqual {246}
	245 Call 0x1C17DFC
	246 Move X21, 0x2650000
	247 Move W8, [X21+2141]
	248 Compare W8, 0
	249 JumpIfNotEqual {255}
	250 Move X0, 0x236D000
	251 Move X0, [X0+1992]
	252 Call 0x1C17CF4
	253 Move W8, 1
	254 Move [X21+2141], W8
	255 Move X0, [X20]
	256 Move W8, [X0+224]
	257 Compare W8, 0
	258 JumpIfNotEqual {261}
	259 Call 0x1C17DFC
	260 Move X0, [X20]
	261 Move X8, [X0+184]
	262 Move X0, [X8]
	263 Compare X0, 0
	264 JumpIfEqual {312}
	265 Move W1, W19
	266 Move V0, V8
	267 Move X2, X31
	268 Call PlayerController.UpdateBackpack, X0, X1, V0
	269 Move W20, W31
	270 Move X21, 0x236D000
	271 Move X21, [X21+1992]
	272 Move X0, [X21]
	273 Move W8, [X0+224]
	274 Compare W8, 0
	275 JumpIfNotEqual {277}
	276 Call 0x1C17DFC
	277 Move X22, 0x2650000
	278 Move W8, [X22+2141]
	279 Compare W8, 0
	280 JumpIfNotEqual {286}
	281 Move X0, 0x236D000
	282 Move X0, [X0+1992]
	283 Call 0x1C17CF4
	284 Move W8, 1
	285 Move [X22+2141], W8
	286 Move X0, [X21]
	287 Move W8, [X0+224]
	288 Compare W8, 0
	289 JumpIfNotEqual {292}
	290 Call 0x1C17DFC
	291 Move X0, [X21]
	292 Move X8, [X0+184]
	293 Move X0, [X8]
	294 Compare X0, 0
	295 JumpIfEqual {312}
	296 Move W8, [X19+128]
	297 Move W2, W20
	298 Move X3, X31
	299 NotImplemented "Instruction CMP not yet implemented."
	300 NotImplemented "Instruction CSET not yet implemented."
	301 Call PlayerController.SetFingerUsage, X0, X1, X2
	302 Move X20, [X31+64]
	303 Move X19, [X31+72]
	304 Move X22, [X31+48]
	305 Move X21, [X31+56]
	306 Move X24, [X31+32]
	307 Move X23, [X31+40]
	308 Move X30, [X31+24]
	309 Move V8, [X31+16]
	310 Add X31, X31, 80
	311 Return 
	312 Call 0x1C17F20

Method: System.Void HandleItemGrabChanged()

Disassembly:
	0x01D8AD68 BL 0x1C16DEC
	0x01D8AD6C STP X30, X19, [X31 - 0x10]!
	0x01D8AD70 LDR X8, [X0 + 0x50]
	0x01D8AD74 CBZ X8, 0x1D8AD84
	0x01D8AD78 STR W1, [X8]
	0x01D8AD7C LDP X30, X19, [X31], #0x10
	0x01D8AD80 RET
	0x01D8AD84 ADRP X0, 0x2369000
	0x01D8AD88 LDR X0, [X0 + 0x5B0]
	0x01D8AD8C BL 0x1C16D08
	0x01D8AD90 BL 0x1C16F10
	0x01D8AD94 MOV X19, X0
	0x01D8AD98 ADRP X0, 0x236C000
	0x01D8AD9C LDR X0, [X0 + 0xAD8]
	0x01D8ADA0 BL 0x1C16D08
	0x01D8ADA4 MOV X1, X0
	0x01D8ADA8 MOV X0, X19
	0x01D8ADAC MOV X2, X31
	0x01D8ADB0 BL 0x337DF1C
	0x01D8ADB4 ADRP X0, 0x236C000
	0x01D8ADB8 LDR X0, [X0 + 0xAE8]
	0x01D8ADBC BL 0x1C16D08
	0x01D8ADC0 MOV X1, X0
	0x01D8ADC4 MOV X0, X19
	0x01D8ADC8 BL 0x1C16DEC
	0x01D8ADCC STP X30, X19, [X31 - 0x10]!
	0x01D8ADD0 LDR X8, [X0 + 0x50]
	0x01D8ADD4 CBZ X8, 0x1D8ADE4
	0x01D8ADD8 LDR W0, [X8 + 0x4]
	0x01D8ADDC LDP X30, X19, [X31], #0x10
	0x01D8ADE0 RET
	0x01D8ADE4 ADRP X0, 0x2369000
	0x01D8ADE8 LDR X0, [X0 + 0x5B0]
	0x01D8ADEC BL 0x1C16D08
	0x01D8ADF0 BL 0x1C16F10
	0x01D8ADF4 MOV X19, X0
	0x01D8ADF8 ADRP X0, 0x236C000
	0x01D8ADFC LDR X0, [X0 + 0xAF0]
	0x01D8AE00 BL 0x1C16D08
	0x01D8AE04 MOV X1, X0
	0x01D8AE08 MOV X0, X19
	0x01D8AE0C MOV X2, X31
	0x01D8AE10 BL 0x337DF1C
	0x01D8AE14 ADRP X0, 0x236C000
	0x01D8AE18 LDR X0, [X0 + 0xAF8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, X0
	008 Move X0, [X0+192]
	009 Compare X0, 0
	010 JumpIfEqual {59}
	011 Call GrabbableItem.get_attachedAnchorId, X0
	012 Move X8, [X19+64]
	013 Move X20, X0
	014 Compare X8, 0
	015 JumpIfEqual {20}
	016 Move X8, [X8+32]
	017 Compare X8, 0
	018 JumpIfEqual {20}
	019 Move W21, [X8]
	020 Move W21, W31
	021 Move X23, 0x264F000
	022 Move W8, [X23+2592]
	023 Move W22, [X19+104]
	024 Compare W8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, 0x236D000
	027 Move X0, [X0+920]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+2592], W8
	031 Move X8, 0x236D000
	032 Move X8, [X8+920]
	033 Move X0, [X8]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X8, X20
	040 ShiftRight X8, 32
	041 And X8, X8, 0x7FFFFFFF
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Move X23, [X31+56]
	049 Return 
	050 Move X0, X19
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Move X23, [X31+56]
	057 Call AttachedItemAnchor.RPC_UnattachItem, X0
	058 Return 
	059 Call 0x1C17F20

Method: System.Void HandleItemDespawned(Fusion.NetworkRunner runner)

Disassembly:
	0x01D8AE20 MOV X1, X0
	0x01D8AE24 MOV X0, X19
	0x01D8AE28 BL 0x1C16DEC
	0x01D8AE2C STP X30, X19, [X31 - 0x10]!
	0x01D8AE30 LDR X8, [X0 + 0x50]
	0x01D8AE34 CBZ X8, 0x1D8AE44
	0x01D8AE38 STR W1, [X8 + 0x4]
	0x01D8AE3C LDP X30, X19, [X31], #0x10
	0x01D8AE40 RET
	0x01D8AE44 ADRP X0, 0x2369000
	0x01D8AE48 LDR X0, [X0 + 0x5B0]
	0x01D8AE4C BL 0x1C16D08
	0x01D8AE50 BL 0x1C16F10

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {21}
	005 Move X19, X0
	006 Move X0, X1
	007 Move X1, X31
	008 Call NetworkRunner.get_IsRunning, X0
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {18}
	013 Move X0, X19
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Call AttachedItemAnchor.RPC_UnattachItem, X0
	017 Return 
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return 
	021 Call 0x1C17F20

Method: System.Void UpdatedItemMass()

Disassembly:
	0x01D8AE54 MOV X19, X0
	0x01D8AE58 ADRP X0, 0x236C000
	0x01D8AE5C LDR X0, [X0 + 0xAF0]
	0x01D8AE60 BL 0x1C16D08
	0x01D8AE64 MOV X1, X0
	0x01D8AE68 MOV X0, X19
	0x01D8AE6C MOV X2, X31
	0x01D8AE70 BL 0x337DF1C
	0x01D8AE74 ADRP X0, 0x236C000
	0x01D8AE78 LDR X0, [X0 + 0xB00]
	0x01D8AE7C BL 0x1C16D08
	0x01D8AE80 MOV X1, X0
	0x01D8AE84 MOV X0, X19
	0x01D8AE88 BL 0x1C16DEC
	0x01D8AE8C STR X30, [X31 - 0x20]!
	0x01D8AE90 STP X20, X19, [X31 + 0x10]
	0x01D8AE94 ADRP X20, 0x264E000
	0x01D8AE98 ADRP X19, 0x236C000
	0x01D8AE9C LDRB W8, [X20 + 0x9C7]
	0x01D8AEA0 LDR X19, [X19 + 0xB08]
	0x01D8AEA4 TBNZ X8, 0x0, 0x1D8AEBC
	0x01D8AEA8 ADRP X0, 0x236C000
	0x01D8AEAC LDR X0, [X0 + 0xB08]
	0x01D8AEB0 BL 0x1C16CF4
	0x01D8AEB4 MOVZ W8, 0x1
	0x01D8AEB8 STRB W8, [X20 + 0x9C7]
	0x01D8AEBC LDR X0, [X19]
	0x01D8AEC0 LDR W8, [X0 + 0xE0]
	0x01D8AEC4 CBNZ W8, 0x1D8AED0
	0x01D8AEC8 BL 0x1C16DFC
	0x01D8AECC LDR X0, [X19]
	0x01D8AED0 LDR X8, [X0 + 0xB8]
	0x01D8AED4 LDP X20, X19, [X31 + 0x10]
	0x01D8AED8 LDR X0, [X8]
	0x01D8AEDC LDR X30, [X31], #0x20
	0x01D8AEE0 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x264F000
	006 Move X20, 0x236A000
	007 Move W8, [X21+2492]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x236A000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2492], W8
	019 Move X0, [X20]
	020 Move X20, [X19+192]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Inequality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {46}
	033 Move X8, [X19+160]
	034 Compare X8, 0
	035 JumpIfEqual {46}
	036 Move X2, [X19+192]
	037 Move W1, [X19+128]
	038 Move X4, [X8+24]
	039 Move X0, [X8+64]
	040 Move X3, [X8+40]
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 CallNoReturn X4
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return 

Method: System.Void DropItemIfHolding(System.Boolean fromDeath = True)

Disassembly:
	0x01D8AEE4 SUB X31, X31, 0x60
	0x01D8AEE8 STP X30, X21, [X31 + 0x40]
	0x01D8AEEC STP X20, X19, [X31 + 0x50]
	0x01D8AEF0 ADRP X20, 0x264E000
	0x01D8AEF4 LDRB W8, [X20 + 0x9C8]
	0x01D8AEF8 MOV X19, X0
	0x01D8AEFC TBNZ X8, 0x0, 0x1D8AF38
	0x01D8AF00 ADRP X0, 0x236C000
	0x01D8AF04 LDR X0, [X0 + 0xB10]
	0x01D8AF08 BL 0x1C16CF4
	0x01D8AF0C ADRP X0, 0x236C000
	0x01D8AF10 LDR X0, [X0 + 0xB18]
	0x01D8AF14 BL 0x1C16CF4
	0x01D8AF18 ADRP X0, 0x236C000
	0x01D8AF1C LDR X0, [X0 + 0xB20]
	0x01D8AF20 BL 0x1C16CF4
	0x01D8AF24 ADRP X0, 0x236C000
	0x01D8AF28 LDR X0, [X0 + 0xB28]
	0x01D8AF2C BL 0x1C16CF4
	0x01D8AF30 MOVZ W8, 0x1
	0x01D8AF34 STRB W8, [X20 + 0x9C8]
	0x01D8AF38 MOVI V0.2D, 0x0
	0x01D8AF3C STP V0, V0, [X31 + 0x20]
	0x01D8AF40 LDR X8, [X19 + 0x90]
	0x01D8AF44 STR W31, [X19 + 0xA8]
	0x01D8AF48 CBZ X8, 0x1D8AFC0
	0x01D8AF4C LDR X0, [X8 + 0x18]
	0x01D8AF50 CBZ X0, 0x1D8AFC0
	0x01D8AF54 ADRP X8, 0x236C000
	0x01D8AF58 LDR X8, [X8 + 0xB28]
	0x01D8AF5C ADRP X20, 0x236C000
	0x01D8AF60 ADRP X21, 0x236C000
	0x01D8AF64 LDR X1, [X8]
	0x01D8AF68 LDR X20, [X20 + 0xB18]
	0x01D8AF6C LDR X21, [X21 + 0xB10]
	0x01D8AF70 ADD X8, X31, 0x0
	0x01D8AF74 BL 0x30D2660
	0x01D8AF78 LDP V0, V1, [X31]
	0x01D8AF7C STP V0, V1, [X31 + 0x20]
	0x01D8AF80 LDR X1, [X20]
	0x01D8AF84 ADD X0, X31, 0x20
	0x01D8AF88 BL 0x2BD1D7C
	0x01D8AF8C TBZ X0, 0x0, 0x1D8AFA4
	0x01D8AF90 LDR V0, [X31 + 0x38]
	0x01D8AF94 LDR V1, [X19 + 0xA8]
	0x01D8AF98 FADD S0, S1, S0
	0x01D8AF9C STR S0, [X19 + 0xA8]
	0x01D8AFA0 B 0x1D8AF80
	0x01D8AFA4 LDR X1, [X21]
	0x01D8AFA8 ADD X0, X31, 0x20
	0x01D8AFAC BL 0x2BD1D78
	0x01D8AFB0 LDP X20, X19, [X31 + 0x50]
	0x01D8AFB4 LDP X30, X21, [X31 + 0x40]
	0x01D8AFB8 ADD X31, X31, 0x60
	0x01D8AFBC RET
	0x01D8AFC0 BL 0x1C16F20
	0x01D8AFC4 CMP W1, 0x1
	0x01D8AFC8 MOV X20, X0
	0x01D8AFCC B.NE 0x1D8AFF8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x264F000
	007 Move X21, 0x236A000
	008 Move W8, [X22+2493]
	009 Move X21, [X21+1432]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x236A000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2493], W8
	021 Move X0, [X21]
	022 Move X21, [X19+64]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X21
	028 Move X1, X31
	029 Move X2, X31
	030 Call Object.op_Equality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {73}
	035 Move X0, [X19+64]
	036 Compare X0, 0
	037 JumpIfEqual {79}
	038 Move X1, X31
	039 Call NetworkObject.get_IsValid, X0
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {73}
	044 Move X0, X19
	045 Call AttachedItemAnchor.get_grabbedItem, X0
	046 Move [X31+8], X0
	047 Add X0, X31, 8
	048 Move X1, X31
	049 Call NetworkBehaviourId.get_IsValid, X0
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {73}
	054 Move X21, 0x264F000
	055 Move W8, [X21+1923]
	056 Compare W8, 0
	057 JumpIfNotEqual {63}
	058 Move X0, 0x236A000
	059 Move X0, [X0+1440]
	060 Call 0x1C17CF4
	061 Move W8, 1
	062 Move [X21+1923], W8
	063 Move X8, 0x236A000
	064 Move X8, [X8+1440]
	065 And W1, W20, 1
	066 Move X0, X19
	067 Move X8, [X8]
	068 Move X8, [X8+184]
	069 Move S0, [X8]
	070 Move S1, [X8+4]
	071 Move V2, [X8+8]
	072 Call AttachedItemAnchor.DropWithThrowVelocity, X0, X1, X2
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X30, [X31+48]
	078 Return 
	079 Call 0x1C17F20

Method: System.Void RepositionItemIfHolding()

Disassembly:
	0x01D8B248 CMP W20, 0x0
	0x01D8B24C B.GT 0x1D8B3CC
	0x01D8B250 MOV X0, X31
	0x01D8B254 BL 0x3C30A30
	0x01D8B258 ADRP X8, 0xFFFFFFFFFED5F000
	0x01D8B25C LDR V1, [X8 + 0xBC]
	0x01D8B260 MOV X0, X19
	0x01D8B264 FCMP S0, S1
	0x01D8B268 CSET W21, MI
	0x01D8B26C B.PL 0x1D8B278
	0x01D8B270 BL 0x1D8B4FC
	0x01D8B274 B 0x1D8B27C
	0x01D8B278 BL 0x1D8B6F8
	0x01D8B27C LDR X20, [X19 + 0x88]
	0x01D8B280 MOV X0, X19
	0x01D8B284 MOV X1, X31
	0x01D8B288 BL 0x3C32E90
	0x01D8B28C CBZ X0, 0x1D8B3E0
	0x01D8B290 MOV X1, X31
	0x01D8B294 BL 0x3C3F58C
	0x01D8B298 FMOV S3, 1
	0x01D8B29C MOV X0, X20
	0x01D8B2A0 MOV X1, X31
	0x01D8B2A4 BL 0x1DC15C4
	0x01D8B2A8 MOV X0, X19
	0x01D8B2AC MOV X1, X31
	0x01D8B2B0 BL 0x3C32E90
	0x01D8B2B4 CBZ X0, 0x1D8B3E0
	0x01D8B2B8 MOV X1, X31
	0x01D8B2BC BL 0x3C3F58C
	0x01D8B2C0 ADRP X20, 0x264D000
	0x01D8B2C4 LDRB W8, [X20 + 0x793]
	0x01D8B2C8 MOV V8.16B, V0.16B
	0x01D8B2CC MOV V9.16B, V1.16B
	0x01D8B2D0 MOV V10.16B, V2.16B
	0x01D8B2D4 CBNZ W8, 0x1D8B2EC
	0x01D8B2D8 ADRP X0, 0x2369000
	0x01D8B2DC LDR X0, [X0 + 0x5A8]
	0x01D8B2E0 BL 0x1C16CF4
	0x01D8B2E4 MOVZ W8, 0x1
	0x01D8B2E8 STRB W8, [X20 + 0x793]
	0x01D8B2EC ADRP X8, 0x2369000
	0x01D8B2F0 LDR X8, [X8 + 0x5A8]
	0x01D8B2F4 MOVZ W0, 0x2
	0x01D8B2F8 MOV V0.16B, V8.16B
	0x01D8B2FC MOV V1.16B, V9.16B
	0x01D8B300 LDR X8, [X8]
	0x01D8B304 MOV V2.16B, V10.16B
	0x01D8B308 MOV X1, X31
	0x01D8B30C LDR X8, [X8 + 0xB8]
	0x01D8B310 LDP S3, S4, [X8]
	0x01D8B314 LDP S5, S6, [X8 + 0x8]
	0x01D8B318 BL 0x1E04F44
	0x01D8B31C LDR X0, [X19 + 0x38]
	0x01D8B320 FMOV S0, 5
	0x01D8B324 MOV X1, X31
	0x01D8B328 BL 0x1E91E68
	0x01D8B32C AND X1, X0, 0x0
	0x01D8B330 MOV X0, X19
	0x01D8B334 BL 0x1D8AE2C
	0x01D8B338 ADRP X8, 0x2368000
	0x01D8B33C LDR X8, [X8 + 0x720]
	0x01D8B340 LDR X0, [X8]
	0x01D8B344 BL 0x1C16F10
	0x01D8B348 ADRP X8, 0x2368000
	0x01D8B34C LDR X8, [X8 + 0x718]
	0x01D8B350 MOV X19, X0
	0x01D8B354 LDR X1, [X8]
	0x01D8B358 BL 0x2AA4804
	0x01D8B35C ADRP X8, 0x2368000
	0x01D8B360 LDR X8, [X8 + 0xB58]
	0x01D8B364 ADD X1, X31, 0xC
	0x01D8B368 STRB W21, [X31 + 0xC]
	0x01D8B36C LDR X0, [X8]
	0x01D8B370 BL 0x1C16E04
	0x01D8B374 CBZ X19, 0x1D8B3E0
	0x01D8B378 ADRP X8, 0x236B000
	0x01D8B37C ADRP X9, 0x2368000
	0x01D8B380 LDR X8, [X8 + 0xB40]
	0x01D8B384 LDR X9, [X9 + 0x710]
	0x01D8B388 MOV X2, X0
	0x01D8B38C MOV X0, X19
	0x01D8B390 LDR X1, [X8]
	0x01D8B394 LDR X3, [X9]
	0x01D8B398 BL 0x2AA5098
	0x01D8B39C ADRP X8, 0x2368000
	0x01D8B3A0 LDR X8, [X8 + 0xB50]
	0x01D8B3A4 LDR X0, [X8]
	0x01D8B3A8 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x264E000
	007 Move X21, 0x2369000
	008 Move W8, [X20+2494]
	009 Move X21, [X21+1432]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x236C000
	016 Move X0, [X0+2640]
	017 Call 0x1C17CF4
	018 Move X0, 0x2369000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+2494], W8
	023 Move X0, [X21]
	024 Move [X31], X31
	025 Move X20, [X19+64]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X20
	031 Move X1, X31
	032 Move X2, X31
	033 Call Object.op_Equality, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {120}
	038 Move X0, [X19+64]
	039 Compare X0, 0
	040 JumpIfEqual {126}
	041 Move X1, X31
	042 Call NetworkObject.get_IsValid, X0
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {120}
	047 Move X0, X19
	048 Call AttachedItemAnchor.get_grabbedItem, X0
	049 Move [X31+8], X0
	050 Add X0, X31, 8
	051 Move X1, X31
	052 Call NetworkBehaviourId.get_IsValid, X0
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {120}
	057 Move X20, [X19+56]
	058 Move X0, X19
	059 Call AttachedItemAnchor.get_grabbedItem, X0
	060 Compare X20, 0
	061 JumpIfEqual {126}
	062 Move X8, 0x236C000
	063 Move X8, [X8+2640]
	064 Move X1, X0
	065 Add X2, X31, 0
	066 Move X0, X20
	067 Move X3, [X8]
	068 Call 0x222CD98, X0, X1, X2
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {120}
	073 Move X0, [X21]
	074 Move X19, [X31]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X0, X19
	080 Move X1, X31
	081 Move X2, X31
	082 Call Object.op_Inequality, X0, X1
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {120}
	087 Move X8, [X31]
	088 Compare X8, 0
	089 JumpIfEqual {126}
	090 Move X0, [X21]
	091 Move X19, [X8+64]
	092 Move W9, [X0+224]
	093 Compare W9, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move X0, X19
	097 Move X1, X31
	098 Move X2, X31
	099 Call Object.op_Inequality, X0, X1
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfNotEqual {120}
	104 Move X8, [X31]
	105 Compare X8, 0
	106 JumpIfEqual {126}
	107 Move X0, [X8+64]
	108 Compare X0, 0
	109 JumpIfEqual {126}
	110 Move X1, X31
	111 Call NetworkObject.get_IsValid, X0
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {120}
	116 Move X0, [X31]
	117 Compare X0, 0
	118 JumpIfEqual {126}
	119 Call GrabbableItem.SnapToFollow, X0
	120 Move X20, [X31+32]
	121 Move X19, [X31+40]
	122 Move X30, [X31+16]
	123 Move X21, [X31+24]
	124 Add X31, X31, 48
	125 Return 
	126 Call 0x1C17F20

Method: System.Void UnattachItem()

Disassembly:
	0x01D8AE1C BL 0x1C16D08

ISIL:
	001 Call AttachedItemAnchor.RPC_UnattachItem, X0
	002 Return 

Method: System.Void DropWithThrowVelocity(UnityEngine.Vector3 throwVelocity, System.Boolean fromDeath = False)

Disassembly:
	0x01D8AFD0 MOV X0, X20
	0x01D8AFD4 BL 0x3EB1AD0
	0x01D8AFD8 LDR X19, [X0]
	0x01D8AFDC BL 0x3EB1AE0
	0x01D8AFE0 LDR X1, [X21]
	0x01D8AFE4 ADD X0, X31, 0x20
	0x01D8AFE8 BL 0x2BD1D78
	0x01D8AFEC CBZ X19, 0x1D8AFB0
	0x01D8AFF0 MOV X0, X19
	0x01D8AFF4 BL 0x1C16F18
	0x01D8AFF8 MOV X19, X31
	0x01D8AFFC B 0x1D8B004
	0x01D8B000 MOV X20, X0
	0x01D8B004 LDR X1, [X21]
	0x01D8B008 ADD X0, X31, 0x20
	0x01D8B00C BL 0x2BD1D78
	0x01D8B010 CBNZ X19, 0x1D8B01C
	0x01D8B014 MOV X0, X20
	0x01D8B018 BL 0x1D2C690
	0x01D8B01C MOV X0, X19
	0x01D8B020 BL 0x1C16F18
	0x01D8B024 BL 0x1990590
	0x01D8B028 STP X30, X21, [X31 - 0x20]!
	0x01D8B02C STP X20, X19, [X31 + 0x10]
	0x01D8B030 ADRP X20, 0x264D000
	0x01D8B034 ADRP X21, 0x236B000
	0x01D8B038 LDRB W8, [X20 + 0x9C9]
	0x01D8B03C LDR X21, [X21 + 0xA78]
	0x01D8B040 MOV X19, X0
	0x01D8B044 TBNZ X8, 0x0, 0x1D8B074
	0x01D8B048 ADRP X0, 0x236B000
	0x01D8B04C LDR X0, [X0 + 0xB08]
	0x01D8B050 BL 0x1C16CF4
	0x01D8B054 ADRP X0, 0x236B000
	0x01D8B058 LDR X0, [X0 + 0xB30]
	0x01D8B05C BL 0x1C16CF4
	0x01D8B060 ADRP X0, 0x236B000
	0x01D8B064 LDR X0, [X0 + 0xA78]
	0x01D8B068 BL 0x1C16CF4
	0x01D8B06C MOVZ W8, 0x1
	0x01D8B070 STRB W8, [X20 + 0x9C9]
	0x01D8B074 LDR X0, [X21]
	0x01D8B078 LDR W8, [X0 + 0xE0]
	0x01D8B07C CBNZ W8, 0x1D8B084
	0x01D8B080 BL 0x1C16DFC
	0x01D8B084 CBZ X19, 0x1D8B0D8
	0x01D8B088 LDR W8, [X19 + 0x30]
	0x01D8B08C ADRP X20, 0x236B000
	0x01D8B090 LDR X20, [X20 + 0xB08]
	0x01D8B094 ORR W8, W8, 0x8
	0x01D8B098 STR W8, [X19 + 0x30]
	0x01D8B09C LDR X0, [X20]
	0x01D8B0A0 LDR W8, [X0 + 0xE0]
	0x01D8B0A4 CBNZ W8, 0x1D8B0B0
	0x01D8B0A8 BL 0x1C16DFC
	0x01D8B0AC LDR X0, [X20]
	0x01D8B0B0 LDR X8, [X0 + 0xB8]
	0x01D8B0B4 LDR X0, [X8]
	0x01D8B0B8 CBZ X0, 0x1D8B0D8
	0x01D8B0BC ADRP X8, 0x236B000
	0x01D8B0C0 LDR X8, [X8 + 0xB30]
	0x01D8B0C4 MOV X1, X19
	0x01D8B0C8 LDP X20, X19, [X31 + 0x10]
	0x01D8B0CC LDR X2, [X8]
	0x01D8B0D0 LDP X30, X21, [X31], #0x20
	0x01D8B0D4 B 0x2DBE67C
	0x01D8B0D8 BL 0x1C16F20
	0x01D8B0DC STP X30, X21, [X31 - 0x20]!
	0x01D8B0E0 STP X20, X19, [X31 + 0x10]
	0x01D8B0E4 ADRP X21, 0x264D000
	0x01D8B0E8 ADRP X20, 0x236B000
	0x01D8B0EC LDRB W8, [X21 + 0x9CA]
	0x01D8B0F0 LDR X20, [X20 + 0xB08]
	0x01D8B0F4 MOV X19, X0
	0x01D8B0F8 TBNZ X8, 0x0, 0x1D8B11C
	0x01D8B0FC ADRP X0, 0x236B000
	0x01D8B100 LDR X0, [X0 + 0xB08]
	0x01D8B104 BL 0x1C16CF4
	0x01D8B108 ADRP X0, 0x236B000
	0x01D8B10C LDR X0, [X0 + 0xB38]
	0x01D8B110 BL 0x1C16CF4
	0x01D8B114 MOVZ W8, 0x1
	0x01D8B118 STRB W8, [X21 + 0x9CA]
	0x01D8B11C MOV X0, X19
	0x01D8B120 MOV X1, X31
	0x01D8B124 BL 0x1E73F88
	0x01D8B128 LDR X0, [X20]
	0x01D8B12C LDR W8, [X0 + 0xE0]
	0x01D8B130 CBNZ W8, 0x1D8B13C
	0x01D8B134 BL 0x1C16DFC
	0x01D8B138 LDR X0, [X20]
	0x01D8B13C LDR X8, [X0 + 0xB8]
	0x01D8B140 LDR X0, [X8]
	0x01D8B144 CBZ X0, 0x1D8B16C
	0x01D8B148 ADRP X8, 0x236B000
	0x01D8B14C LDR X8, [X8 + 0xB38]
	0x01D8B150 MOV X1, X19
	0x01D8B154 LDR X2, [X8]
	0x01D8B158 BL 0x2DBEF30
	0x01D8B15C MOV X0, X19
	0x01D8B160 LDP X20, X19, [X31 + 0x10]
	0x01D8B164 LDP X30, X21, [X31], #0x20
	0x01D8B168 B 0x1D8B170
	0x01D8B16C BL 0x1C16F20
	0x01D8B170 STR D10, [X31 - 0x40]!
	0x01D8B174 STP D9, D8, [X31 + 0x10]
	0x01D8B178 STP X30, X21, [X31 + 0x20]
	0x01D8B17C STP X20, X19, [X31 + 0x30]
	0x01D8B180 ADRP X20, 0x264D000
	0x01D8B184 LDRB W8, [X20 + 0x9CC]
	0x01D8B188 MOV X19, X0
	0x01D8B18C TBNZ X8, 0x0, 0x1D8B1EC
	0x01D8B190 ADRP X0, 0x2368000
	0x01D8B194 LDR X0, [X0 + 0xB50]
	0x01D8B198 BL 0x1C16CF4
	0x01D8B19C ADRP X0, 0x2368000
	0x01D8B1A0 LDR X0, [X0 + 0xB58]
	0x01D8B1A4 BL 0x1C16CF4
	0x01D8B1A8 ADRP X0, 0x2368000
	0x01D8B1AC LDR X0, [X0 + 0x710]
	0x01D8B1B0 BL 0x1C16CF4
	0x01D8B1B4 ADRP X0, 0x2368000
	0x01D8B1B8 LDR X0, [X0 + 0x718]
	0x01D8B1BC BL 0x1C16CF4
	0x01D8B1C0 ADRP X0, 0x2368000
	0x01D8B1C4 LDR X0, [X0 + 0x720]
	0x01D8B1C8 BL 0x1C16CF4
	0x01D8B1CC ADRP X0, 0x236B000
	0x01D8B1D0 LDR X0, [X0 + 0xB40]
	0x01D8B1D4 BL 0x1C16CF4
	0x01D8B1D8 ADRP X0, 0x236B000
	0x01D8B1DC LDR X0, [X0 + 0xB48]
	0x01D8B1E0 BL 0x1C16CF4
	0x01D8B1E4 MOVZ W8, 0x1
	0x01D8B1E8 STRB W8, [X20 + 0x9CC]
	0x01D8B1EC MOV X0, X19
	0x01D8B1F0 BL 0x1D8AD0C
	0x01D8B1F4 LDR X8, [X19 + 0x80]
	0x01D8B1F8 CMP W0, 0x0
	0x01D8B1FC CSET W21, GT
	0x01D8B200 CBZ X8, 0x1D8B3E0
	0x01D8B204 CMP W0, 0x0
	0x01D8B208 MOV W20, W0
	0x01D8B20C CSET W1, GT
	0x01D8B210 MOV X0, X8
	0x01D8B214 MOV X2, X31
	0x01D8B218 BL 0x3C357B4
	0x01D8B21C LDRB W8, [X19 + 0xB4]
	0x01D8B220 CMP W8, W21
	0x01D8B224 B.EQ 0x1D8B3CC
	0x01D8B228 LDR X0, [X19 + 0x40]
	0x01D8B22C STRB W21, [X19 + 0xB4]
	0x01D8B230 CBZ X0, 0x1D8B3CC
	0x01D8B234 LDRB W8, [X0 + 0x60]
	0x01D8B238 TBNZ X8, 0x1, 0x1D8B3CC
	0x01D8B23C MOV X1, X31
	0x01D8B240 BL 0x1E93668
	0x01D8B244 TBZ X0, 0x0, 0x1D8B3CC

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], D15
	003 Move [X31+72], D14
	004 Move [X31+80], D13
	005 Move [X31+88], D12
	006 Move [X31+96], D11
	007 Move [X31+104], D10
	008 Move [X31+112], D9
	009 Move [X31+120], D8
	010 Move [X31+128], X30
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X21, 0x264F000
	015 Move W8, [X21+2495]
	016 Move W19, W1
	017 Move V8, V2
	018 Move V9, V1
	019 Move V15, V0
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x2369000
	026 Move X0, [X0+1432]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+2495], W8
	030 Move X0, X20
	031 Move [X31+48], W31
	032 Move [X31+40], X31
	033 Call AttachedItemAnchor.get_grabbedItem, X0
	034 Move [X31+56], X0
	035 Add X0, X31, 56
	036 Move X1, X31
	037 Call NetworkBehaviourId.get_IsValid, X0
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {183}
	042 Move X0, X20
	043 Move X1, X31
	044 Call Component.get_transform, X0
	045 Compare X0, 0
	046 JumpIfEqual {197}
	047 Move X1, X31
	048 Call Transform.get_position, X0
	049 Move X0, X20
	050 Move X1, X31
	051 Move V11, V0
	052 Move [X31+36], S1
	053 Move V12, V2
	054 Call Component.get_transform, X0
	055 Compare X0, 0
	056 JumpIfEqual {197}
	057 Move X1, X31
	058 Call Transform.get_rotation, X0
	059 Move X21, 0x264E000
	060 Move W8, [X21+1923]
	061 Move V13, V0
	062 Move V14, V1
	063 Move V10, V2
	064 Move [X31+32], S3
	065 Move [X31+40], S15
	066 Move [X31+48], S9
	067 Move [X31+48], S8
	068 Compare W8, 0
	069 JumpIfNotEqual {75}
	070 Move X0, 0x2369000
	071 Move X0, [X0+1440]
	072 Call 0x1C17CF4
	073 Move W8, 1
	074 Move [X21+1923], W8
	075 Move X8, 0x2369000
	076 Move X8, [X8+1440]
	077 Move X9, 0x2369000
	078 Move X8, [X8]
	079 Move X9, [X9+1432]
	080 Move X21, [X20+192]
	081 Move X8, [X8+184]
	082 Move X0, [X9]
	083 Move S15, [X8]
	084 Move S8, [X8+4]
	085 Move W9, [X0+224]
	086 Move V9, [X8+8]
	087 Compare W9, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X0, X21
	091 Move X1, X31
	092 Move X2, X31
	093 Call Object.op_Inequality, X0, X1
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {163}
	098 Move X8, [X20+192]
	099 Compare X8, 0
	100 JumpIfEqual {197}
	101 Move X0, [X8+360]
	102 Compare X0, 0
	103 JumpIfEqual {197}
	104 Move X1, X31
	105 Call Rigidbody.get_position, X0
	106 Move X8, [X20+192]
	107 Compare X8, 0
	108 JumpIfEqual {197}
	109 Move X0, [X8+360]
	110 Compare X0, 0
	111 JumpIfEqual {197}
	112 Move X1, X31
	113 Move V15, V0
	114 Move V11, V1
	115 Move V12, V2
	116 Call Rigidbody.get_rotation, X0
	117 Move X8, [X20+192]
	118 Compare X8, 0
	119 JumpIfEqual {197}
	120 Move X0, [X8+360]
	121 Move [X31+32], S3
	122 Compare X0, 0
	123 JumpIfEqual {197}
	124 Move V8, [X31+40]
	125 Move V9, [X31+48]
	126 Move X1, X31
	127 Move V13, V0
	128 Move V14, V1
	129 Move V10, V2
	130 Call Rigidbody.get_velocity, X0
	131 Add S2, S9, S2
	132 Move V0.S[1], V1.S[0]
	133 Add V0, V8, V0
	134 Move [X31+40], D0
	135 Move [X31+48], S2
	136 Move X8, [X20+192]
	137 Compare X8, 0
	138 JumpIfEqual {197}
	139 Move X0, [X8+360]
	140 Move [X31+36], S11
	141 Compare X0, 0
	142 JumpIfEqual {197}
	143 Move X1, X31
	144 Move V11, V15
	145 Call Rigidbody.get_angularVelocity, X0
	146 Move X8, [X20+192]
	147 Compare X8, 0
	148 JumpIfEqual {197}
	149 Move X0, [X8+360]
	150 Compare X0, 0
	151 JumpIfEqual {197}
	152 Move X1, X31
	153 Move V15, V0
	154 Move V8, V1
	155 Move V9, V2
	156 Call Rigidbody.get_mass, X0
	157 Add X0, X31, 40
	158 Move S1, 25
	159 Move S2, 10
	160 Move S3, 10
	161 Move X1, X31
	162 Call Player.CalculateClampedVelocity, X0, V0, V1, V2, V3
	163 Move X0, X20
	164 Call AttachedItemAnchor.get_grabbedItem, X0
	165 Move V0, [X31+48]
	166 Move X8, [X31+40]
	167 Move S6, [X31+32]
	168 Move S1, [X31+36]
	169 Move X1, X0
	170 Move [X31+8], S0
	171 And W2, W19, 1
	172 Move X0, X20
	173 Move V0, V11
	174 Move V2, V12
	175 Move V3, V13
	176 Move V4, V14
	177 Move V5, V10
	178 Move [X31+20], S8
	179 Move [X31+28], S9
	180 Move [X31+16], S15
	181 Move [X31], X8
	182 Call AttachedItemAnchor.RPC_DropItem, X0, X1, X2, X3, X4, X5, X6, X7
	183 Move X20, [X31+144]
	184 Move X19, [X31+152]
	185 Move X30, [X31+128]
	186 Move X21, [X31+136]
	187 Move D9, [X31+112]
	188 Move D8, [X31+120]
	189 Move D11, [X31+96]
	190 Move D10, [X31+104]
	191 Move D13, [X31+80]
	192 Move D12, [X31+88]
	193 Move D15, [X31+64]
	194 Move D14, [X31+72]
	195 Add X31, X31, 160
	196 Return 
	197 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01D8B4B0 BL 0x1E93668
	0x01D8B4B4 TBZ X0, 0x0, 0x1D8B4EC
	0x01D8B4B8 MOV X0, X19
	0x01D8B4BC BL 0x1D8ADCC

ISIL:
	001 Move W8, 1
	002 Move X1, X31
	003 Move [X0+132], W8
	004 Call NetworkBehaviour..ctor, X0
	005 Return 

Method: System.Void CopyBackingFieldsToState(System.Boolean param_0)

Disassembly:
	0x01D8B4C0 STR W0, [X31 + 0x8]
	0x01D8B4C4 LDR X1, [X19 + 0x38]

ISIL:
	001 Move X1, [X0+136]
	002 Call AttachedItemAnchor.set_grabbedItem, X0, X1
	003 Return 

Method: System.Void CopyStateToBackingFields()

Disassembly:
	0x01D8B4C8 ADD X0, X31, 0x8
	0x01D8B4CC MOV X2, X31
	0x01D8B4D0 BL 0x1E91B84
	0x01D8B4D4 TBZ X0, 0x0, 0x1D8B4EC
	0x01D8B4D8 LDR X0, [X19 + 0x38]
	0x01D8B4DC CBZ X0, 0x1D8B4F8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call AttachedItemAnchor.get_grabbedItem, X0
	005 Move [X19+136], X0
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Return 

Method: System.Void RPC_TryGrabItem@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01D8B4E0 LDR X1, [X19 + 0x40]
	0x01D8B4E4 MOV X2, X31
	0x01D8B4E8 BL 0x1EA3884
	0x01D8B4EC LDP X30, X19, [X31 + 0x10]
	0x01D8B4F0 ADD X31, X31, 0x20
	0x01D8B4F4 RET
	0x01D8B4F8 BL 0x1C16F20
	0x01D8B4FC SUB X31, X31, 0xD0
	0x01D8B500 STP X30, X25, [X31 + 0x90]
	0x01D8B504 STP X24, X23, [X31 + 0xA0]
	0x01D8B508 STP X22, X21, [X31 + 0xB0]
	0x01D8B50C STP X20, X19, [X31 + 0xC0]
	0x01D8B510 ADRP X19, 0x264D000
	0x01D8B514 LDRB W8, [X19 + 0x9CD]
	0x01D8B518 MOV X21, X0
	0x01D8B51C TBNZ X8, 0x0, 0x1D8B564
	0x01D8B520 ADRP X0, 0x236B000
	0x01D8B524 LDR X0, [X0 + 0xB50]
	0x01D8B528 BL 0x1C16CF4
	0x01D8B52C ADRP X0, 0x236B000
	0x01D8B530 LDR X0, [X0 + 0xB58]
	0x01D8B534 BL 0x1C16CF4
	0x01D8B538 ADRP X0, 0x236B000
	0x01D8B53C LDR X0, [X0 + 0xB60]
	0x01D8B540 BL 0x1C16CF4
	0x01D8B544 ADRP X0, 0x236B000
	0x01D8B548 LDR X0, [X0 + 0xB68]
	0x01D8B54C BL 0x1C16CF4
	0x01D8B550 ADRP X0, 0x236B000
	0x01D8B554 LDR X0, [X0 + 0xB70]
	0x01D8B558 BL 0x1C16CF4
	0x01D8B55C MOVZ W8, 0x1
	0x01D8B560 STRB W8, [X19 + 0x9CD]
	0x01D8B564 LDR X19, [X21 + 0x38]
	0x01D8B568 LDR X20, [X21 + 0x98]
	0x01D8B56C MOV X0, X21
	0x01D8B570 MOV X1, X31
	0x01D8B574 BL 0x3C32E90
	0x01D8B578 CBZ X0, 0x1D8B6F4
	0x01D8B57C ADRP X22, 0x236B000
	0x01D8B580 ADRP X21, 0x236B000
	0x01D8B584 ADRP X25, 0x236B000
	0x01D8B588 LDR X22, [X22 + 0xB58]
	0x01D8B58C LDR X21, [X21 + 0xB60]
	0x01D8B590 LDR X25, [X25 + 0xB70]
	0x01D8B594 MOV X1, X31
	0x01D8B598 BL 0x3C3F58C
	0x01D8B59C LDR X1, [X22]
	0x01D8B5A0 ADD X0, X31, 0x40
	0x01D8B5A4 STP X31, X31, [X31 + 0x40]
	0x01D8B5A8 BL 0x243BFEC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x264E000
	009 Move W8, [X20+2496]
	010 Move X21, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x236C000
	017 Move X0, [X0+2648]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+2496], W8
	021 Compare X19, 0
	022 JumpIfEqual {61}
	023 Move X0, [X19+56]
	024 Move X24, 0x236C000
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 Move W22, [X21+44]
	027 Move W23, [X21+48]
	028 Move X24, [X24+2648]
	029 Move X1, X21
	030 Move W2, W31
	031 Move X3, X31
	032 Call RpcInfo.FromMessage, X0, X1, X2
	033 Move W8, 1
	034 Move [X19+88], W8
	035 Move X8, [X19]
	036 Move X1, [X24]
	037 Move W10, [X8+304]
	038 Move W9, [X1+304]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X8, [X8+200]
	041 Add X8, X8, X9
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CSET not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X0, X19
	048 Move X1, X20
	049 Move X20, [X31+48]
	050 Move X19, [X31+56]
	051 Move X22, [X31+32]
	052 Move X21, [X31+40]
	053 Move X24, [X31+16]
	054 Move X23, [X31+24]
	055 NotImplemented "Instruction CSET not yet implemented."
	056 Move X30, [X31+64]
	057 Call AttachedItemAnchor.RPC_TryGrabItem, X0, X1, X2, X3, X4
	058 Return 
	059 Move X0, X19
	060 Call 0x1C181E0
	061 Call 0x1C17F20

Method: System.Void RPC_DropItem@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01D8B5AC ADRP X22, 0x264D000
	0x01D8B5B0 LDRB W8, [X22 + 0x793]
	0x01D8B5B4 CBNZ W8, 0x1D8B5CC
	0x01D8B5B8 ADRP X0, 0x2369000
	0x01D8B5BC LDR X0, [X0 + 0x5A8]
	0x01D8B5C0 BL 0x1C16CF4
	0x01D8B5C4 MOVZ W8, 0x1
	0x01D8B5C8 STRB W8, [X22 + 0x793]
	0x01D8B5CC ADRP X8, 0x2369000
	0x01D8B5D0 LDR X8, [X8 + 0x5A8]
	0x01D8B5D4 LDR X1, [X21]
	0x01D8B5D8 ADD X0, X31, 0x28
	0x01D8B5DC LDR X8, [X8]
	0x01D8B5E0 LDR X8, [X8 + 0xB8]
	0x01D8B5E4 LDP S0, S1, [X8]
	0x01D8B5E8 LDP S2, S3, [X8 + 0x8]
	0x01D8B5EC STP X31, X31, [X31 + 0x28]
	0x01D8B5F0 STR W31, [X31 + 0x38]
	0x01D8B5F4 BL 0x2437C9C
	0x01D8B5F8 LDR X0, [X25]
	0x01D8B5FC LDR W8, [X0 + 0xE0]
	0x01D8B600 CBNZ W8, 0x1D8B60C
	0x01D8B604 BL 0x1C16DFC
	0x01D8B608 LDR X0, [X25]
	0x01D8B60C LDR X8, [X0 + 0xB8]
	0x01D8B610 LDR X23, [X8 + 0x8]
	0x01D8B614 CBZ X23, 0x1D8B628
	0x01D8B618 LDUR V0, [X31 + 0x28]
	0x01D8B61C LDR W8, [X31 + 0x38]
	0x01D8B620 LDP X21, X22, [X31 + 0x40]
	0x01D8B624 B 0x1D8B694
	0x01D8B628 LDUR V0, [X31 + 0x28]
	0x01D8B62C LDR W8, [X31 + 0x38]
	0x01D8B630 LDP X21, X22, [X31 + 0x40]
	0x01D8B634 STR V0, [X31 + 0x5]
	0x01D8B638 STR W8, [X31 + 0x60]
	0x01D8B63C LDR W8, [X0 + 0xE0]
	0x01D8B640 CBNZ W8, 0x1D8B64C
	0x01D8B644 BL 0x1C16DFC
	0x01D8B648 LDR X0, [X25]
	0x01D8B64C ADRP X9, 0x236B000
	0x01D8B650 LDR X8, [X0 + 0xB8]
	0x01D8B654 LDR X9, [X9 + 0xB50]
	0x01D8B658 LDR X24, [X8]
	0x01D8B65C LDR X0, [X9]
	0x01D8B660 BL 0x1C16F10
	0x01D8B664 ADRP X8, 0x236B000
	0x01D8B668 LDR X8, [X8 + 0xB68]
	0x01D8B66C MOV X1, X24
	0x01D8B670 MOV X3, X31
	0x01D8B674 MOV X23, X0
	0x01D8B678 LDR X2, [X8]
	0x01D8B67C BL 0x1EB8ECC
	0x01D8B680 LDR X8, [X25]
	0x01D8B684 LDR X8, [X8 + 0xB8]
	0x01D8B688 STR X23, [X8 + 0x8]
	0x01D8B68C LDR V0, [X31 + 0x5]
	0x01D8B690 LDR W8, [X31 + 0x60]
	0x01D8B694 STR V0, [X31 + 0x7]
	0x01D8B698 STR W8, [X31 + 0x80]
	0x01D8B69C CBZ X19, 0x1D8B6F4
	0x01D8B6A0 LDR W8, [X31 + 0x80]
	0x01D8B6A4 LDR V0, [X31 + 0x7]
	0x01D8B6A8 ADD X4, X31, 0x10
	0x01D8B6AC MOV X0, X19
	0x01D8B6B0 STR W8, [X31 + 0x20]
	0x01D8B6B4 ADD X8, X31, 0x28
	0x01D8B6B8 MOV X1, X20
	0x01D8B6BC MOV X2, X21
	0x01D8B6C0 MOV X3, X22
	0x01D8B6C4 MOV X5, X31
	0x01D8B6C8 MOV X6, X31
	0x01D8B6CC MOV W7, W31
	0x01D8B6D0 STR V0, [X31 + 0x1]
	0x01D8B6D4 STP X23, X31, [X31]
	0x01D8B6D8 BL 0x1EAFF0C
	0x01D8B6DC LDP X20, X19, [X31 + 0xC0]
	0x01D8B6E0 LDP X22, X21, [X31 + 0xB0]
	0x01D8B6E4 LDP X24, X23, [X31 + 0xA0]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+48], D15
	003 Move [X31+56], D14
	004 Move [X31+64], D13
	005 Move [X31+72], D12
	006 Move [X31+80], D11
	007 Move [X31+88], D10
	008 Move [X31+96], D9
	009 Move [X31+104], D8
	010 Move [X31+112], X30
	011 Move [X31+120], X23
	012 Move [X31+128], X22
	013 Move [X31+136], X21
	014 Move [X31+144], X20
	015 Move [X31+152], X19
	016 Move X20, 0x264E000
	017 Move W8, [X20+2497]
	018 Move X21, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x236C000
	025 Move X0, [X0+2648]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+2497], W8
	029 Compare X19, 0
	030 JumpIfEqual {105}
	031 Move V1, [X21+44]
	032 Move V0, [X21+48]
	033 Move X0, [X19+56]
	034 Move X23, 0x236C000
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 Move [X31+40], S0
	037 Move [X31+48], S1
	038 Move V1, [X21+52]
	039 Move V0, [X21+56]
	040 Move S14, [X21+68]
	041 Move S15, [X21+72]
	042 Move S8, [X21+76]
	043 Move S9, [X21+80]
	044 Move S10, [X21+84]
	045 Move S11, [X21+88]
	046 Move [X31+32], S0
	047 Move [X31+40], S1
	048 Move S0, [X21+60]
	049 Move S13, [X21+64]
	050 Move V12, [X21+92]
	051 Move W22, [X21+96]
	052 Move X1, X21
	053 Move [X31+28], S0
	054 Move X23, [X23+2648]
	055 Move W2, W31
	056 Move X3, X31
	057 Call RpcInfo.FromMessage, X0, X1, X2
	058 Move W8, 1
	059 Move [X19+88], W8
	060 Move X8, [X19]
	061 Move X1, [X23]
	062 Move W10, [X8+304]
	063 Move W9, [X1+304]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X8, [X8+200]
	066 Add X8, X8, X9
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move S1, [X31+40]
	070 Move S0, [X31+44]
	071 Move S3, [X31+32]
	072 Move S2, [X31+36]
	073 Move V4, [X31+28]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 NotImplemented "Instruction CSET not yet implemented."
	076 Move X0, X19
	077 Move X1, X20
	078 Move V5, V13
	079 Move V6, V14
	080 Move [X31+20], S11
	081 Move [X31+28], S12
	082 Move [X31+16], S10
	083 Move [X31+4], S8
	084 Move [X31+12], S9
	085 Move [X31], S15
	086 Call AttachedItemAnchor.RPC_DropItem, X0, X1, X2, X3, X4, X5, X6, X7
	087 Move X20, [X31+144]
	088 Move X19, [X31+152]
	089 Move X22, [X31+128]
	090 Move X21, [X31+136]
	091 Move X30, [X31+112]
	092 Move X23, [X31+120]
	093 Move D9, [X31+96]
	094 Move D8, [X31+104]
	095 Move D11, [X31+80]
	096 Move D10, [X31+88]
	097 Move D13, [X31+64]
	098 Move D12, [X31+72]
	099 Move D15, [X31+48]
	100 Move D14, [X31+56]
	101 Add X31, X31, 160
	102 Return 
	103 Move X0, X19
	104 Call 0x1C181E0
	105 Call 0x1C17F20

Method: System.Void RPC_UnattachItem@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01D8B6E8 LDP X30, X25, [X31 + 0x90]
	0x01D8B6EC ADD X31, X31, 0xD0
	0x01D8B6F0 RET
	0x01D8B6F4 BL 0x1C16F20
	0x01D8B6F8 SUB X31, X31, 0x130
	0x01D8B6FC STP D15, D14, [X31 + 0x90]
	0x01D8B700 STP D13, D12, [X31 + 0xA0]
	0x01D8B704 STP D11, D10, [X31 + 0xB0]
	0x01D8B708 STP D9, D8, [X31 + 0xC0]
	0x01D8B70C STP X29, X30, [X31 + 0xD0]
	0x01D8B710 STP X28, X27, [X31 + 0xE0]
	0x01D8B714 STP X26, X25, [X31 + 0xF0]
	0x01D8B718 STP X24, X23, [X31 + 0x100]
	0x01D8B71C STP X22, X21, [X31 + 0x110]
	0x01D8B720 STP X20, X19, [X31 + 0x120]
	0x01D8B724 ADRP X20, 0x264D000
	0x01D8B728 LDRB W8, [X20 + 0x9CE]
	0x01D8B72C MOV X19, X0
	0x01D8B730 TBNZ X8, 0x0, 0x1D8B76C
	0x01D8B734 ADRP X0, 0x236B000
	0x01D8B738 LDR X0, [X0 + 0xB78]
	0x01D8B73C BL 0x1C16CF4
	0x01D8B740 ADRP X0, 0x236B000
	0x01D8B744 LDR X0, [X0 + 0xB50]
	0x01D8B748 BL 0x1C16CF4
	0x01D8B74C ADRP X0, 0x236B000
	0x01D8B750 LDR X0, [X0 + 0xB58]
	0x01D8B754 BL 0x1C16CF4
	0x01D8B758 ADRP X0, 0x236B000
	0x01D8B75C LDR X0, [X0 + 0xB60]
	0x01D8B760 BL 0x1C16CF4
	0x01D8B764 MOVZ W8, 0x1
	0x01D8B768 STRB W8, [X20 + 0x9CE]
	0x01D8B76C ADRP X8, 0xFFFFFFFFFED5F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x264E000
	005 Move W8, [X20+2498]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x236C000
	012 Move X0, [X0+2648]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2498], W8
	016 Compare X19, 0
	017 JumpIfEqual {39}
	018 Move X9, 0x236C000
	019 Move X9, [X9+2648]
	020 Move W8, 1
	021 Move [X19+88], W8
	022 Move X8, [X19]
	023 Move X1, [X9]
	024 Move W10, [X8+304]
	025 Move W9, [X1+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, [X8+200]
	028 Add X8, X8, X9
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Call AttachedItemAnchor.RPC_UnattachItem, X0
	036 Return 
	037 Move X0, X19
	038 Call 0x1C181E0
	039 Call 0x1C17F20

