Type: AnimalCompany.AttachedItemAnchor

Method: Fusion.NetworkBehaviourId get_grabbedItem()

Disassembly:
	0x01C99D1C BL 0x1D87040
	0x01C99D20 CMP W0, 0x4
	0x01C99D24 B.NE 0x1C99D4C
	0x01C99D28 LDP X20, X19, [X31 + 0x70]
	0x01C99D2C LDP X22, X21, [X31 + 0x60]
	0x01C99D30 LDR X30, [X31 + 0x50]
	0x01C99D34 LDP D9, D8, [X31 + 0x40]
	0x01C99D38 LDP D11, D10, [X31 + 0x30]
	0x01C99D3C LDP D13, D12, [X31 + 0x20]
	0x01C99D40 LDP D15, D14, [X31 + 0x10]
	0x01C99D44 ADD X31, X31, 0x80
	0x01C99D48 RET
	0x01C99D4C LDR X0, [X20 + 0x40]
	0x01C99D50 CBZ X0, 0x1C99ECC
	0x01C99D54 MOV X1, X31
	0x01C99D58 BL 0x1D9F538
	0x01C99D5C ANDS W31, W0, 0x3
	0x01C99D60 B.EQ 0x1C99DC8
	0x01C99D64 MOV W8, W0
	0x01C99D68 LDR X0, [X20 + 0x38]
	0x01C99D6C TBNZ X8, 0x0, 0x1C99E18
	0x01C99D70 CBZ X0, 0x1C99ECC
	0x01C99D74 LDR X0, [X0 + 0x50]
	0x01C99D78 CBZ X0, 0x1C99ECC

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move X0, [X8]
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0
	010 Move X0, 0x22B5000
	011 Move X0, [X0+1168]
	012 Call 0x1B6F804
	013 Call 0x1B6FA0C
	014 Move X19, X0
	015 Move X0, 0x22B6000
	016 Move X0, [X0+336]
	017 Call 0x1B6F804
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x22B6000
	023 Move X0, [X0+344]
	024 Call 0x1B6F804
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1B6F8E8

Method: System.Void set_grabbedItem(Fusion.NetworkBehaviourId value)

Disassembly:
	0x01C99D7C MOV X1, X31
	0x01C99D80 BL 0x1DBEFE4
	0x01C99D84 TBZ X0, 0x0, 0x1C99D28
	0x01C99D88 LDR X8, [X20 + 0x38]
	0x01C99D8C CBZ X8, 0x1C99ECC
	0x01C99D90 LDR X0, [X8 + 0x50]
	0x01C99D94 MOVZ W1, 0x48
	0x01C99D98 MOV X2, X31
	0x01C99D9C BL 0x1DD601C
	0x01C99DA0 MOV X22, X0
	0x01C99DA4 MOVZ W0, 0x1
	0x01C99DA8 MOV X1, X31
	0x01C99DAC BL 0x1D29EBC
	0x01C99DB0 LDR X8, [X20 + 0x40]
	0x01C99DB4 CBZ X8, 0x1C99ECC
	0x01C99DB8 LDR X8, [X8 + 0x20]
	0x01C99DBC CBZ X8, 0x1C99E38
	0x01C99DC0 LDR W0, [X8]
	0x01C99DC4 B 0x1C99E3C
	0x01C99DC8 LDR X0, [X22]
	0x01C99DCC LDR X19, [X20 + 0x40]
	0x01C99DD0 LDR W8, [X0 + 0xE0]
	0x01C99DD4 CBNZ W8, 0x1C99DDC
	0x01C99DD8 BL 0x1B6E8F8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move [X8], X1
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 
	010 Move X0, 0x22B5000
	011 Move X0, [X0+1168]
	012 Call 0x1B6F804
	013 Call 0x1B6FA0C
	014 Move X19, X0
	015 Move X0, 0x22B6000
	016 Move X0, [X0+336]
	017 Call 0x1B6F804
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x22B6000
	023 Move X0, [X0+352]
	024 Call 0x1B6F804
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1B6F8E8

Method: UnityEngine.Vector3 get_velocity()

Disassembly:
	0x01C99DDC ADRP X8, 0x22B5000
	0x01C99DE0 LDR X8, [X8 + 0x1E0]
	0x01C99DE4 MOV X1, X19

ISIL:
	001 Move S0, [X0+168]
	002 Move S1, [X0+172]
	003 Move V2, [X0+176]
	004 Return X0

Method: AnimalCompany.GrabbableItem get_grabbableItem()

Disassembly:
	0x01C99DE8 LDP X20, X19, [X31 + 0x70]
	0x01C99DEC LDP X22, X21, [X31 + 0x60]

ISIL:
	001 Move X0, [X0+192]
	002 Return X0

Method: System.Boolean get_affectMovementWhileAttached()

Disassembly:
	0x01C99DF0 LDR X0, [X8]
	0x01C99DF4 LDR X30, [X31 + 0x50]

ISIL:
	001 Move W0, [X0+132]
	002 Return X0

Method: System.Void Spawned()

Disassembly:
	0x01C99DF8 LDP D9, D8, [X31 + 0x40]
	0x01C99DFC LDP D11, D10, [X31 + 0x30]
	0x01C99E00 LDP D13, D12, [X31 + 0x20]
	0x01C99E04 LDP D15, D14, [X31 + 0x10]
	0x01C99E08 MOVZ W2, 0x3
	0x01C99E0C MOV X3, X31
	0x01C99E10 ADD X31, X31, 0x80

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call NetworkBehaviour.Spawned, X0
	006 Move X0, X19
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]

Method: System.Void Despawned(Fusion.NetworkRunner runner, System.Boolean hasState)

Disassembly:
	0x01C9A180 LDR X0, [X19 + 0x38]
	0x01C9A184 CBZ X0, 0x1C9A294
	0x01C9A188 MOV X1, X31
	0x01C9A18C BL 0x1D87040
	0x01C9A190 CMP W0, 0x4
	0x01C9A194 B.NE 0x1C9A1A4
	0x01C9A198 LDP X20, X19, [X31 + 0x10]
	0x01C9A19C LDR X30, [X31], #0x20
	0x01C9A1A0 RET
	0x01C9A1A4 LDR X0, [X19 + 0x40]
	0x01C9A1A8 CBZ X0, 0x1C9A294
	0x01C9A1AC MOV X1, X31
	0x01C9A1B0 BL 0x1D9F538
	0x01C9A1B4 ANDS W31, W0, 0x3
	0x01C9A1B8 B.EQ 0x1C9A21C
	0x01C9A1BC TBNZ X0, 0x0, 0x1C9A140
	0x01C9A1C0 LDR X8, [X19 + 0x38]
	0x01C9A1C4 CBZ X8, 0x1C9A294
	0x01C9A1C8 LDR X0, [X8 + 0x50]
	0x01C9A1CC CBZ X0, 0x1C9A294
	0x01C9A1D0 MOV X1, X31
	0x01C9A1D4 BL 0x1DBEFE4
	0x01C9A1D8 TBZ X0, 0x0, 0x1C9A198
	0x01C9A1DC LDR X8, [X19 + 0x38]
	0x01C9A1E0 CBZ X8, 0x1C9A294
	0x01C9A1E4 LDR X0, [X8 + 0x50]
	0x01C9A1E8 MOVZ W1, 0x8
	0x01C9A1EC MOV X2, X31
	0x01C9A1F0 BL 0x1DD601C
	0x01C9A1F4 MOV X20, X0
	0x01C9A1F8 MOVZ W0, 0x1
	0x01C9A1FC MOV X1, X31
	0x01C9A200 BL 0x1D29EBC
	0x01C9A204 LDR X8, [X19 + 0x40]
	0x01C9A208 CBZ X8, 0x1C9A294
	0x01C9A20C LDR X8, [X8 + 0x20]
	0x01C9A210 CBZ X8, 0x1C9A254
	0x01C9A214 LDR W0, [X8]
	0x01C9A218 B 0x1C9A258
	0x01C9A21C LDR X0, [X20]
	0x01C9A220 LDR X19, [X19 + 0x40]
	0x01C9A224 LDR W8, [X0 + 0xE0]
	0x01C9A228 CBNZ W8, 0x1C9A230
	0x01C9A22C BL 0x1B6E8F8
	0x01C9A230 ADRP X8, 0x22B4000
	0x01C9A234 LDR X8, [X8 + 0x1F0]
	0x01C9A238 MOV X1, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x258A000
	008 Move X22, 0x22B5000
	009 Move W8, [X23+994]
	010 Move X22, [X22+416]
	011 Move W21, W2
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x22B5000
	019 Move X0, [X0+416]
	020 Call 0x1B6F7F0
	021 Move W8, 1
	022 Move [X23+994], W8
	023 And W2, W21, 1
	024 Move X0, X19
	025 Move X1, X20
	026 Move X3, X31
	027 Call NetworkBehaviour.Despawned, X0, X1, X2
	028 Move X0, X19
	029 Call AttachedItemAnchor.ResetGrabbedItem, X0
	030 Move X8, [X22]
	031 Move X8, [X8+184]
	032 Move X8, [X8]
	033 Compare X8, 0
	034 JumpIfEqual {42}
	035 Move X9, [X19+64]
	036 Compare X9, 0
	037 JumpIfEqual {49}
	038 Move X9, [X9+32]
	039 Compare X9, 0
	040 JumpIfEqual {49}
	041 Move W1, [X9]
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Move X23, [X31+56]
	048 Return 
	049 Move X1, X31
	050 Move W9, [X19+104]
	051 Move X3, [X8+24]
	052 Move X0, [X8+64]
	053 Move X2, [X8+40]
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 NotImplemented "Instruction BFM not yet implemented."
	059 Move X30, [X31+48]
	060 Move X23, [X31+56]
	061 CallNoReturn X3

Method: System.Void Awake()

Disassembly:
	0x01C9A3E0 STP X20, X19, [X31 + 0x10]
	0x01C9A3E4 ADRP X20, 0x2589000
	0x01C9A3E8 ADRP X21, 0x22B3000
	0x01C9A3EC LDRB W8, [X20 + 0x3E9]
	0x01C9A3F0 LDR X21, [X21 + 0x478]
	0x01C9A3F4 MOV X19, X0
	0x01C9A3F8 TBNZ X8, 0x0, 0x1C9A410
	0x01C9A3FC ADRP X0, 0x22B3000
	0x01C9A400 LDR X0, [X0 + 0x478]
	0x01C9A404 BL 0x1B6E7F0
	0x01C9A408 MOVZ W8, 0x1
	0x01C9A40C STRB W8, [X20 + 0x3E9]
	0x01C9A410 LDR X0, [X21]
	0x01C9A414 LDR X20, [X19 + 0xC0]
	0x01C9A418 LDR W8, [X0 + 0xE0]
	0x01C9A41C CBNZ W8, 0x1C9A424
	0x01C9A420 BL 0x1B6E8F8
	0x01C9A424 MOV X0, X20
	0x01C9A428 MOV X1, X31
	0x01C9A42C MOV X2, X31
	0x01C9A430 BL 0x3A9D6EC
	0x01C9A434 TBZ X0, 0x0, 0x1C9A474
	0x01C9A438 LDR X0, [X21]
	0x01C9A43C LDP X21, X20, [X19 + 0xC0]
	0x01C9A440 LDR W8, [X0 + 0xE0]
	0x01C9A444 CBNZ W8, 0x1C9A44C
	0x01C9A448 BL 0x1B6E8F8
	0x01C9A44C MOV X0, X21
	0x01C9A450 MOV X1, X20
	0x01C9A454 MOV X2, X31
	0x01C9A458 BL 0x3A9D6EC
	0x01C9A45C TBZ X0, 0x0, 0x1C9A474
	0x01C9A460 LDR X0, [X19 + 0xC0]
	0x01C9A464 CBZ X0, 0x1C9A480
	0x01C9A468 LDP X20, X19, [X31 + 0x10]
	0x01C9A46C LDP X30, X21, [X31], #0x20
	0x01C9A470 B 0x1C9A484
	0x01C9A474 LDP X20, X19, [X31 + 0x10]
	0x01C9A478 LDP X30, X21, [X31], #0x20
	0x01C9A47C RET
	0x01C9A480 BL 0x1B6EA1C
	0x01C9A484 SUB X31, X31, 0x70
	0x01C9A488 STP D15, D14, [X31 + 0x10]
	0x01C9A48C STP D13, D12, [X31 + 0x20]
	0x01C9A490 STP D11, D10, [X31 + 0x30]
	0x01C9A494 STP D9, D8, [X31 + 0x40]
	0x01C9A498 STP X30, X21, [X31 + 0x50]
	0x01C9A49C STP X20, X19, [X31 + 0x60]
	0x01C9A4A0 ADRP X20, 0x2589000
	0x01C9A4A4 ADRP X21, 0x22B3000
	0x01C9A4A8 LDRB W8, [X20 + 0x42C]
	0x01C9A4AC LDR X21, [X21 + 0x478]
	0x01C9A4B0 MOV X19, X0
	0x01C9A4B4 TBNZ X8, 0x0, 0x1C9A4CC
	0x01C9A4B8 ADRP X0, 0x22B3000
	0x01C9A4BC LDR X0, [X0 + 0x478]
	0x01C9A4C0 BL 0x1B6E7F0
	0x01C9A4C4 MOVZ W8, 0x1
	0x01C9A4C8 STRB W8, [X20 + 0x42C]
	0x01C9A4CC LDR X0, [X21]
	0x01C9A4D0 LDR X20, [X19 + 0x148]
	0x01C9A4D4 LDR W8, [X0 + 0xE0]
	0x01C9A4D8 CBNZ W8, 0x1C9A4E0
	0x01C9A4DC BL 0x1B6E8F8
	0x01C9A4E0 MOV X0, X20
	0x01C9A4E4 MOV X1, X31
	0x01C9A4E8 MOV X2, X31
	0x01C9A4EC BL 0x3A9D6EC
	0x01C9A4F0 TBZ X0, 0x0, 0x1C9A780
	0x01C9A4F4 LDR X0, [X21]
	0x01C9A4F8 LDR X20, [X19 + 0x120]
	0x01C9A4FC LDR W8, [X0 + 0xE0]
	0x01C9A500 CBNZ W8, 0x1C9A508
	0x01C9A504 BL 0x1B6E8F8
	0x01C9A508 MOV X0, X20
	0x01C9A50C MOV X1, X31
	0x01C9A510 MOV X2, X31
	0x01C9A514 BL 0x3A9D6EC
	0x01C9A518 TBZ X0, 0x0, 0x1C9A5F4
	0x01C9A51C LDR X8, [X19 + 0x120]
	0x01C9A520 CBZ X8, 0x1C9A7A0
	0x01C9A524 LDR X0, [X8 + 0x40]
	0x01C9A528 CBZ X0, 0x1C9A5F4
	0x01C9A52C LDRB W8, [X0 + 0x60]
	0x01C9A530 TBNZ X8, 0x1, 0x1C9A5F4
	0x01C9A534 MOV X1, X31
	0x01C9A538 BL 0x1D9E780
	0x01C9A53C TBZ X0, 0x0, 0x1C9A5F4
	0x01C9A540 LDRB W8, [X19 + 0x150]
	0x01C9A544 CBZ W8, 0x1C9A5F4
	0x01C9A548 LDRB W8, [X19 + 0x89]
	0x01C9A54C CBZ W8, 0x1C9A5F4
	0x01C9A550 LDR X8, [X19 + 0x120]
	0x01C9A554 CBZ X8, 0x1C9A7A0
	0x01C9A558 LDRB W8, [X8 + 0x84]
	0x01C9A55C CBZ W8, 0x1C9A5F4
	0x01C9A560 ADRP X21, 0x2589000
	0x01C9A564 LDRB W8, [X21 + 0x43F]
	0x01C9A568 LDR X20, [X19 + 0xA0]
	0x01C9A56C CBNZ W8, 0x1C9A584
	0x01C9A570 ADRP X0, 0x22B3000
	0x01C9A574 LDR X0, [X0 + 0x480]
	0x01C9A578 BL 0x1B6E7F0
	0x01C9A57C MOVZ W8, 0x1
	0x01C9A580 STRB W8, [X21 + 0x43F]
	0x01C9A584 ADRP X8, 0x22B3000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x258A000
	008 Move W8, [X20+995]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x22B5000
	015 Move X0, [X0+368]
	016 Call 0x1B6F7F0
	017 Move X0, 0x22B5000
	018 Move X0, [X0+424]
	019 Call 0x1B6F7F0
	020 Move X0, 0x22B5000
	021 Move X0, [X0+432]
	022 Call 0x1B6F7F0
	023 Move X0, 0x22B5000
	024 Move X0, [X0+440]
	025 Call 0x1B6F7F0
	026 Move X0, 0x22B4000
	027 Move X0, [X0+1144]
	028 Call 0x1B6F7F0
	029 Move W8, 1
	030 Move [X20+995], W8
	031 Move W8, [X19+128]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, 0x22B5000
	034 Move X8, [X8+440]
	035 Move X21, 0x22B4000
	036 Move X0, X19
	037 Move X1, [X8]
	038 Move X21, [X21+1144]
	039 Call 0x20914A4, X0
	040 Move [X19+200], X0
	041 Move X20, X0
	042 Move X0, [X21]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1B6F8F8
	047 Move X0, X20
	048 Move X1, X31
	049 Move X2, X31
	050 Call Object.op_Inequality, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {110}
	055 Move X23, [X19+200]
	056 Compare X23, 0
	057 JumpIfEqual {117}
	058 Move X22, 0x22B5000
	059 Move X20, [X23+448]
	060 Move X22, [X22+368]
	061 Move X0, [X22]
	062 Call 0x1B6FA0C
	063 Move X8, 0x22B5000
	064 Move X8, [X8+424]
	065 Move X1, X19
	066 Move X3, X31
	067 Move X21, X0
	068 Move X2, [X8]
	069 Call Action..ctor, X0, X1, X2
	070 Move X0, X20
	071 Move X1, X21
	072 Move X2, X31
	073 Call Delegate.Combine, X0, X1
	074 Move X1, [X22]
	075 Compare X0, 0
	076 JumpIfEqual {82}
	077 Move X8, [X0]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move [X23+448], X0
	080 Move X8, [X0]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move [X23+448], X0
	083 Move X23, [X19+200]
	084 Compare X23, 0
	085 JumpIfEqual {117}
	086 Move X20, [X23+456]
	087 Move X0, X1
	088 Call 0x1B6FA0C
	089 Move X8, 0x22B5000
	090 Move X8, [X8+432]
	091 Move X1, X19
	092 Move X3, X31
	093 Move X21, X0
	094 Move X2, [X8]
	095 Call Action..ctor, X0, X1, X2
	096 Move X0, X20
	097 Move X1, X21
	098 Move X2, X31
	099 Call Delegate.Combine, X0, X1
	100 Compare X0, 0
	101 JumpIfEqual {109}
	102 Move X1, [X22]
	103 Move X8, [X0]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move [X23+456], X0
	106 Move X8, [X0]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Call 0x1B6FCDC
	109 Move [X23+456], X0
	110 Move X20, [X31+32]
	111 Move X19, [X31+40]
	112 Move X22, [X31+16]
	113 Move X21, [X31+24]
	114 Move X30, [X31+48]
	115 Move X23, [X31+56]
	116 Return 
	117 Call 0x1B6FA1C

Method: System.Void OnDestroy()

Disassembly:
	0x01C9A588 LDR X8, [X8 + 0x480]
	0x01C9A58C ADRP X21, 0x2589000
	0x01C9A590 LDRB W9, [X21 + 0x454]
	0x01C9A594 LDR X8, [X8]
	0x01C9A598 LDR X8, [X8 + 0xB8]
	0x01C9A59C LDP S10, S9, [X8]
	0x01C9A5A0 LDR V8, [X8 + 0x8]
	0x01C9A5A4 CBNZ W9, 0x1C9A5BC
	0x01C9A5A8 ADRP X0, 0x22B4000
	0x01C9A5AC LDR X0, [X0 + 0x1F8]
	0x01C9A5B0 BL 0x1B6E7F0
	0x01C9A5B4 MOVZ W8, 0x1
	0x01C9A5B8 STRB W8, [X21 + 0x454]
	0x01C9A5BC CBZ X20, 0x1C9A7A0
	0x01C9A5C0 ADRP X8, 0x22B4000
	0x01C9A5C4 LDR X8, [X8 + 0x1F8]
	0x01C9A5C8 MOV X0, X20
	0x01C9A5CC MOV V0.16B, V10.16B
	0x01C9A5D0 MOV V1.16B, V9.16B
	0x01C9A5D4 LDR X8, [X8]
	0x01C9A5D8 MOV V2.16B, V8.16B
	0x01C9A5DC MOV X1, X31
	0x01C9A5E0 LDR X8, [X8 + 0xB8]
	0x01C9A5E4 LDP S5, S6, [X8 + 0x8]
	0x01C9A5E8 LDP S3, S4, [X8]
	0x01C9A5EC BL 0x3AA8180
	0x01C9A5F0 B 0x1C9A74C
	0x01C9A5F4 LDR X0, [X19 + 0x148]
	0x01C9A5F8 CBZ X0, 0x1C9A7A0
	0x01C9A5FC LDR X20, [X19 + 0xA0]
	0x01C9A600 MOV X1, X31
	0x01C9A604 BL 0x3AA7658
	0x01C9A608 LDR X0, [X19 + 0x148]
	0x01C9A60C CBZ X0, 0x1C9A7A0
	0x01C9A610 MOV X1, X31
	0x01C9A614 MOV V13.16B, V0.16B
	0x01C9A618 MOV V10.16B, V1.16B
	0x01C9A61C MOV V14.16B, V2.16B
	0x01C9A620 BL 0x3AA5FBC
	0x01C9A624 LDR X0, [X19 + 0xA8]
	0x01C9A628 CBZ X0, 0x1C9A7A0
	0x01C9A62C MOV X1, X31
	0x01C9A630 MOV V8.16B, V0.16B
	0x01C9A634 MOV V9.16B, V1.16B
	0x01C9A638 MOV V11.16B, V2.16B
	0x01C9A63C MOV V12.16B, V3.16B
	0x01C9A640 STP S14, S10, [X31 + 0x8]
	0x01C9A644 MOV V10.16B, V13.16B
	0x01C9A648 BL 0x3AA6C80
	0x01C9A64C MOV V4.16B, V0.16B
	0x01C9A650 MOV V5.16B, V1.16B
	0x01C9A654 MOV V6.16B, V2.16B
	0x01C9A658 MOV V0.16B, V8.16B
	0x01C9A65C MOV V1.16B, V9.16B
	0x01C9A660 MOV V2.16B, V11.16B
	0x01C9A664 MOV V3.16B, V12.16B
	0x01C9A668 MOV X0, X31
	0x01C9A66C BL 0x3A92D64
	0x01C9A670 LDR X0, [X19 + 0x148]
	0x01C9A674 CBZ X0, 0x1C9A7A0
	0x01C9A678 MOV X1, X31
	0x01C9A67C MOV V15.16B, V0.16B
	0x01C9A680 MOV V8.16B, V1.16B
	0x01C9A684 MOV V9.16B, V2.16B
	0x01C9A688 BL 0x3AA5FBC
	0x01C9A68C LDR X0, [X19 + 0xA8]
	0x01C9A690 CBZ X0, 0x1C9A7A0
	0x01C9A694 MOV X1, X31
	0x01C9A698 MOV V12.16B, V0.16B
	0x01C9A69C MOV V13.16B, V1.16B
	0x01C9A6A0 MOV V11.16B, V2.16B
	0x01C9A6A4 MOV V14.16B, V3.16B
	0x01C9A6A8 BL 0x3AA78FC
	0x01C9A6AC CBZ X20, 0x1C9A7A0
	0x01C9A6B0 LDR V4, [X31 + 0xC]
	0x01C9A6B4 FMUL S5, S12, S0
	0x01C9A6B8 FMUL S20, S14, S2
	0x01C9A6BC FMUL S21, S11, S3
	0x01C9A6C0 FADD S16, S4, S8
	0x01C9A6C4 LDR V4, [X31 + 0x8]
	0x01C9A6C8 FMUL S22, S13, S0
	0x01C9A6CC FMUL S23, S13, S3
	0x01C9A6D0 FMUL S25, S11, S0
	0x01C9A6D4 FADD S7, S4, S9
	0x01C9A6D8 FMUL S4, S14, S3
	0x01C9A6DC FMUL S3, S12, S3
	0x01C9A6E0 FMUL S0, S14, S0
	0x01C9A6E4 FMUL S26, S14, S1
	0x01C9A6E8 FMUL S6, S13, S1
	0x01C9A6EC FMUL S19, S12, S1
	0x01C9A6F0 FMUL S24, S13, S2
	0x01C9A6F4 FSUB S4, S4, S5
	0x01C9A6F8 FADD S5, S20, S21
	0x01C9A6FC FADD S20, S26, S23
	0x01C9A700 FADD S0, S0, S3
	0x01C9A704 FADD S17, S10, S15
	0x01C9A708 FMUL S18, S11, S2
	0x01C9A70C FMUL S2, S12, S2
	0x01C9A710 FMUL S1, S11, S1
	0x01C9A714 FSUB S3, S4, S6
	0x01C9A718 FADD S4, S19, S5
	0x01C9A71C FADD S19, S25, S20
	0x01C9A720 FADD S0, S24, S0
	0x01C9A724 FSUB S6, S3, S18
	0x01C9A728 FSUB S5, S4, S22
	0x01C9A72C FSUB S4, S19, S2
	0x01C9A730 FSUB S3, S0, S1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x258A000
	008 Move X21, 0x22B5000
	009 Move W8, [X20+996]
	010 Move X21, [X21+448]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x22B5000
	017 Move X0, [X0+368]
	018 Call 0x1B6F7F0
	019 Move X0, 0x22B5000
	020 Move X0, [X0+424]
	021 Call 0x1B6F7F0
	022 Move X0, 0x22B5000
	023 Move X0, [X0+432]
	024 Call 0x1B6F7F0
	025 Move X0, 0x22B5000
	026 Move X0, [X0+448]
	027 Call 0x1B6F7F0
	028 Move X0, 0x22B4000
	029 Move X0, [X0+1144]
	030 Call 0x1B6F7F0
	031 Move W8, 1
	032 Move [X20+996], W8
	033 Move X0, [X21]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1B6F8F8
	038 Compare X19, 0
	039 JumpIfEqual {121}
	040 Move W8, [X19+48]
	041 Move X9, 0x22B4000
	042 Move X9, [X9+1144]
	043 Move X20, [X19+200]
	044 Or W8, W8, 8
	045 Move [X19+48], W8
	046 Move X0, [X9]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1B6F8F8
	051 Move X0, X20
	052 Move X1, X31
	053 Move X2, X31
	054 Call Object.op_Inequality, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {114}
	059 Move X23, [X19+200]
	060 Compare X23, 0
	061 JumpIfEqual {121}
	062 Move X22, 0x22B5000
	063 Move X20, [X23+448]
	064 Move X22, [X22+368]
	065 Move X0, [X22]
	066 Call 0x1B6FA0C
	067 Move X8, 0x22B5000
	068 Move X8, [X8+424]
	069 Move X1, X19
	070 Move X3, X31
	071 Move X21, X0
	072 Move X2, [X8]
	073 Call Action..ctor, X0, X1, X2
	074 Move X0, X20
	075 Move X1, X21
	076 Move X2, X31
	077 Call Delegate.Remove, X0, X1
	078 Move X1, [X22]
	079 Compare X0, 0
	080 JumpIfEqual {86}
	081 Move X8, [X0]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move [X23+448], X0
	084 Move X8, [X0]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move [X23+448], X0
	087 Move X23, [X19+200]
	088 Compare X23, 0
	089 JumpIfEqual {121}
	090 Move X20, [X23+456]
	091 Move X0, X1
	092 Call 0x1B6FA0C
	093 Move X8, 0x22B5000
	094 Move X8, [X8+432]
	095 Move X1, X19
	096 Move X3, X31
	097 Move X21, X0
	098 Move X2, [X8]
	099 Call Action..ctor, X0, X1, X2
	100 Move X0, X20
	101 Move X1, X21
	102 Move X2, X31
	103 Call Delegate.Remove, X0, X1
	104 Compare X0, 0
	105 JumpIfEqual {113}
	106 Move X1, [X22]
	107 Move X8, [X0]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move [X23+456], X0
	110 Move X8, [X0]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Call 0x1B6FCDC
	113 Move [X23+456], X0
	114 Move X20, [X31+32]
	115 Move X19, [X31+40]
	116 Move X22, [X31+16]
	117 Move X21, [X31+24]
	118 Move X30, [X31+48]
	119 Move X23, [X31+56]
	120 Return 
	121 Call 0x1B6FA1C

Method: System.Void Start()

Disassembly:
	0x01C9A734 MOV X0, X20
	0x01C9A738 MOV V0.16B, V17.16B
	0x01C9A73C MOV V1.16B, V16.16B
	0x01C9A740 MOV V2.16B, V7.16B
	0x01C9A744 MOV X1, X31
	0x01C9A748 BL 0x3AA80CC
	0x01C9A74C LDR X8, [X19 + 0x1C0]
	0x01C9A750 CBZ X8, 0x1C9A780
	0x01C9A754 LDR X2, [X8 + 0x18]
	0x01C9A758 LDR X0, [X8 + 0x40]
	0x01C9A75C LDR X1, [X8 + 0x28]
	0x01C9A760 LDP X20, X19, [X31 + 0x60]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call Component.get_transform, X0
	006 Compare X0, 0
	007 JumpIfEqual {16}
	008 Move X1, X31
	009 Call Transform.get_position, X0
	010 Move [X19+180], S0
	011 Move [X19+188], S1
	012 Move [X19+188], S2
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return 
	016 Call 0x1B6FA1C

Method: System.Void Update()

Disassembly:
	0x01C9A764 LDP X30, X21, [X31 + 0x50]
	0x01C9A768 LDP D9, D8, [X31 + 0x40]
	0x01C9A76C LDP D11, D10, [X31 + 0x30]
	0x01C9A770 LDP D13, D12, [X31 + 0x20]
	0x01C9A774 LDP D15, D14, [X31 + 0x10]
	0x01C9A778 ADD X31, X31, 0x70
	0x01C9A77C BR X2
	0x01C9A780 LDP X20, X19, [X31 + 0x60]
	0x01C9A784 LDP X30, X21, [X31 + 0x50]
	0x01C9A788 LDP D9, D8, [X31 + 0x40]
	0x01C9A78C LDP D11, D10, [X31 + 0x30]
	0x01C9A790 LDP D13, D12, [X31 + 0x20]
	0x01C9A794 LDP D15, D14, [X31 + 0x10]
	0x01C9A798 ADD X31, X31, 0x70
	0x01C9A79C RET
	0x01C9A7A0 BL 0x1B6EA1C
	0x01C9A7A4 STP X30, X21, [X31 - 0x20]!
	0x01C9A7A8 STP X20, X19, [X31 + 0x10]
	0x01C9A7AC ADRP X20, 0x2589000
	0x01C9A7B0 ADRP X21, 0x22B3000
	0x01C9A7B4 LDRB W8, [X20 + 0x3EA]
	0x01C9A7B8 LDR X21, [X21 + 0x478]
	0x01C9A7BC MOV X19, X0
	0x01C9A7C0 TBNZ X8, 0x0, 0x1C9A7D8
	0x01C9A7C4 ADRP X0, 0x22B3000
	0x01C9A7C8 LDR X0, [X0 + 0x478]
	0x01C9A7CC BL 0x1B6E7F0
	0x01C9A7D0 MOVZ W8, 0x1
	0x01C9A7D4 STRB W8, [X20 + 0x3EA]
	0x01C9A7D8 LDR X0, [X21]
	0x01C9A7DC LDR X20, [X19 + 0xC8]
	0x01C9A7E0 LDR W8, [X0 + 0xE0]
	0x01C9A7E4 CBNZ W8, 0x1C9A7EC
	0x01C9A7E8 BL 0x1B6E8F8
	0x01C9A7EC MOV X0, X20
	0x01C9A7F0 MOV X1, X31
	0x01C9A7F4 MOV X2, X31
	0x01C9A7F8 BL 0x3A9D6EC
	0x01C9A7FC TBZ X0, 0x0, 0x1C9A854
	0x01C9A800 LDR X0, [X21]

ISIL:
	001 Move [X31-32], D9
	002 Move [X31-24], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0+64]
	007 Compare X0, 0
	008 JumpIfEqual {49}
	009 Move W8, [X0+96]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 2
	012 Compare TEMP, 2
	013 JumpIfEqual {49}
	014 Move X1, X31
	015 Call NetworkObject.get_HasInputAuthority, X0
	016 Move TEMP, X0
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfNotEqual {49}
	020 Move X0, X19
	021 Move X1, X31
	022 Call Component.get_transform, X0
	023 Compare X0, 0
	024 JumpIfEqual {54}
	025 Move X1, X31
	026 Call Transform.get_position, X0
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 Move V4, [X19+188]
	029 Move X0, X31
	030 Move V0.S[1], V1.S[0]
	031 Subtract V8, V0, V3
	032 Subtract S9, S2, S4
	033 Call Time.get_deltaTime
	034 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	035 NotImplemented "Instruction FDIV not yet implemented."
	036 NotImplemented "Instruction INVALID not yet implemented."
	037 Move X0, X19
	038 Move X1, X31
	039 Move [X19+168], D1
	040 Move [X19+176], S0
	041 Call Component.get_transform, X0
	042 Compare X0, 0
	043 JumpIfEqual {54}
	044 Move X1, X31
	045 Call Transform.get_position, X0
	046 Move [X19+180], S0
	047 Move [X19+188], S1
	048 Move [X19+188], S2
	049 Move X30, [X31+16]
	050 Move X19, [X31+24]
	051 Move D9, [X31+32]
	052 Move D8, [X31+40]
	053 Return 
	054 Call 0x1B6FA1C

Method: System.Void RPC_TryGrabItem(Fusion.NetworkBehaviourId objectID, System.Boolean forceAssign = False, System.Boolean playSFX = True, Fusion.RpcInfo info = null)

Disassembly:
	0x01C9A804 LDR X20, [X19 + 0xC0]
	0x01C9A808 LDR W8, [X0 + 0xE0]
	0x01C9A80C CBNZ W8, 0x1C9A814
	0x01C9A810 BL 0x1B6E8F8
	0x01C9A814 MOV X0, X20
	0x01C9A818 MOV X1, X31
	0x01C9A81C MOV X2, X31
	0x01C9A820 BL 0x3A9D6EC
	0x01C9A824 TBZ X0, 0x0, 0x1C9A854
	0x01C9A828 LDR X0, [X19 + 0xC8]
	0x01C9A82C CBZ X0, 0x1C9A860
	0x01C9A830 LDR X19, [X19 + 0xC0]
	0x01C9A834 BL 0x1C9A864
	0x01C9A838 CBZ X19, 0x1C9A860
	0x01C9A83C ORN W8, W31, W0, 0x0
	0x01C9A840 MOV X0, X19
	0x01C9A844 LDP X20, X19, [X31 + 0x10]
	0x01C9A848 AND W1, W8, 0x1
	0x01C9A84C LDP X30, X21, [X31], #0x20
	0x01C9A850 B 0x1C9E384
	0x01C9A854 LDP X20, X19, [X31 + 0x10]
	0x01C9A858 LDP X30, X21, [X31], #0x20
	0x01C9A85C RET
	0x01C9A860 BL 0x1B6EA1C
	0x01C9A864 SUB X31, X31, 0x20
	0x01C9A868 STP X30, X19, [X31 + 0x10]
	0x01C9A86C MOV X19, X0
	0x01C9A870 BL 0x1C9E31C
	0x01C9A874 TBNZ X0, 0x0, 0x1C9A894
	0x01C9A878 MOV X0, X19
	0x01C9A87C BL 0x1C9DF64
	0x01C9A880 STR X0, [X31 + 0x8]
	0x01C9A884 ADD X0, X31, 0x8
	0x01C9A888 MOV X1, X31
	0x01C9A88C BL 0x1D680F0
	0x01C9A890 TBZ X0, 0x0, 0x1C9A89C
	0x01C9A894 MOV W0, W31
	0x01C9A898 B 0x1C9A8A4
	0x01C9A89C MOV X0, X19
	0x01C9A8A0 BL 0x1C9E598
	0x01C9A8A4 LDP X30, X19, [X31 + 0x10]
	0x01C9A8A8 AND W0, W0, 0x1
	0x01C9A8AC ADD X31, X31, 0x20
	0x01C9A8B0 RET
	0x01C9A8B4 AND W1, W1, 0x1
	0x01C9A8B8 B 0x1C9E384
	0x01C9A8BC STP X30, X23, [X31 - 0x30]!
	0x01C9A8C0 STP X22, X21, [X31 + 0x10]
	0x01C9A8C4 STP X20, X19, [X31 + 0x20]
	0x01C9A8C8 MOV X19, X0
	0x01C9A8CC LDR X0, [X0 + 0xC0]
	0x01C9A8D0 CBZ X0, 0x1C9A96C
	0x01C9A8D4 BL 0x1C99A60
	0x01C9A8D8 LDR X8, [X19 + 0x40]
	0x01C9A8DC MOV X20, X0
	0x01C9A8E0 CBZ X8, 0x1C9A8F4
	0x01C9A8E4 LDR X8, [X8 + 0x20]
	0x01C9A8E8 CBZ X8, 0x1C9A8F4
	0x01C9A8EC LDR W21, [X8]
	0x01C9A8F0 B 0x1C9A8F8
	0x01C9A8F4 MOV W21, W31
	0x01C9A8F8 ADRP X23, 0x2589000
	0x01C9A8FC LDRB W8, [X23 + 0x44E]
	0x01C9A900 LDR W22, [X19 + 0x68]
	0x01C9A904 CBNZ W8, 0x1C9A91C
	0x01C9A908 ADRP X0, 0x22B4000
	0x01C9A90C LDR X0, [X0 + 0x1E8]
	0x01C9A910 BL 0x1B6E7F0
	0x01C9A914 MOVZ W8, 0x1
	0x01C9A918 STRB W8, [X23 + 0x44E]
	0x01C9A91C ADRP X8, 0x22B4000
	0x01C9A920 LDR X8, [X8 + 0x1E8]
	0x01C9A924 LDR X0, [X8]
	0x01C9A928 LDR W8, [X0 + 0xE0]
	0x01C9A92C CBNZ W8, 0x1C9A934
	0x01C9A930 BL 0x1B6E8F8
	0x01C9A934 CMP W21, W20
	0x01C9A938 B.NE 0x1C9A958
	0x01C9A93C UBFM X8, X20, 0x20, 0x3F
	0x01C9A940 CMP W22, W8
	0x01C9A944 B.NE 0x1C9A958
	0x01C9A948 LDP X20, X19, [X31 + 0x20]
	0x01C9A94C LDP X22, X21, [X31 + 0x10]
	0x01C9A950 LDP X30, X23, [X31], #0x30
	0x01C9A954 RET
	0x01C9A958 MOV X0, X19
	0x01C9A95C LDP X20, X19, [X31 + 0x20]
	0x01C9A960 LDP X22, X21, [X31 + 0x10]
	0x01C9A964 LDP X30, X23, [X31], #0x30
	0x01C9A968 B 0x1C9A0FC
	0x01C9A96C BL 0x1B6EA1C
	0x01C9A970 B 0x1C9A0FC
	0x01C9A974 STP X30, X19, [X31 - 0x10]!
	0x01C9A978 CBZ X1, 0x1C9A9A4
	0x01C9A97C MOV X19, X0
	0x01C9A980 MOV X0, X1
	0x01C9A984 MOV X1, X31
	0x01C9A988 BL 0x1D872D4
	0x01C9A98C TBZ X0, 0x0, 0x1C9A99C
	0x01C9A990 MOV X0, X19
	0x01C9A994 LDP X30, X19, [X31], #0x10
	0x01C9A998 B 0x1C9A0FC
	0x01C9A99C LDP X30, X19, [X31], #0x10
	0x01C9A9A0 RET
	0x01C9A9A4 BL 0x1B6EA1C
	0x01C9A9A8 STP X30, X21, [X31 - 0x20]!
	0x01C9A9AC STP X20, X19, [X31 + 0x10]
	0x01C9A9B0 ADRP X21, 0x2589000
	0x01C9A9B4 ADRP X20, 0x22B3000
	0x01C9A9B8 LDRB W8, [X21 + 0x3ED]
	0x01C9A9BC LDR X20, [X20 + 0x478]
	0x01C9A9C0 MOV X19, X0
	0x01C9A9C4 TBNZ X8, 0x0, 0x1C9A9DC
	0x01C9A9C8 ADRP X0, 0x22B3000
	0x01C9A9CC LDR X0, [X0 + 0x478]
	0x01C9A9D0 BL 0x1B6E7F0
	0x01C9A9D4 MOVZ W8, 0x1
	0x01C9A9D8 STRB W8, [X21 + 0x3ED]
	0x01C9A9DC LDR X0, [X20]
	0x01C9A9E0 LDR X20, [X19 + 0xC0]
	0x01C9A9E4 LDR W8, [X0 + 0xE0]
	0x01C9A9E8 CBNZ W8, 0x1C9A9F0
	0x01C9A9EC BL 0x1B6E8F8
	0x01C9A9F0 MOV X0, X20
	0x01C9A9F4 MOV X1, X31
	0x01C9A9F8 MOV X2, X31
	0x01C9A9FC BL 0x3A9D6EC
	0x01C9AA00 TBZ X0, 0x0, 0x1C9AA2C
	0x01C9AA04 LDR X8, [X19 + 0xA0]
	0x01C9AA08 CBZ X8, 0x1C9AA2C
	0x01C9AA0C LDR X2, [X19 + 0xC0]
	0x01C9AA10 LDR W1, [X19 + 0x80]
	0x01C9AA14 LDR X4, [X8 + 0x18]
	0x01C9AA18 LDR X0, [X8 + 0x40]
	0x01C9AA1C LDR X3, [X8 + 0x28]
	0x01C9AA20 LDP X20, X19, [X31 + 0x10]
	0x01C9AA24 LDP X30, X21, [X31], #0x20
	0x01C9AA28 BR X4
	0x01C9AA2C LDP X20, X19, [X31 + 0x10]
	0x01C9AA30 LDP X30, X21, [X31], #0x20
	0x01C9AA34 RET
	0x01C9AA38 STR X30, [X31 - 0x30]!
	0x01C9AA3C STP X22, X21, [X31 + 0x10]
	0x01C9AA40 STP X20, X19, [X31 + 0x20]
	0x01C9AA44 ADRP X22, 0x2589000
	0x01C9AA48 ADRP X21, 0x22B3000
	0x01C9AA4C LDRB W8, [X22 + 0x3EE]
	0x01C9AA50 LDR X21, [X21 + 0x478]
	0x01C9AA54 MOV W20, W1
	0x01C9AA58 MOV X19, X0
	0x01C9AA5C TBNZ X8, 0x0, 0x1C9AA74

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x258A000
	009 Move W8, [X23+997]
	010 Move W20, W3
	011 Move W21, W2
	012 Move X22, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x22B5000
	019 Move X0, [X0+448]
	020 Call 0x1B6F7F0
	021 Move X0, 0x22B5000
	022 Move X0, [X0+400]
	023 Call 0x1B6F7F0
	024 Move X0, 0x22B5000
	025 Move X0, [X0+456]
	026 Call 0x1B6F7F0
	027 Move W8, 1
	028 Move [X23+997], W8
	029 Move [X31], X31
	030 Move [X31+8], X31
	031 Move W8, [X19+88]
	032 Compare W8, 0
	033 JumpIfEqual {74}
	034 Move [X19+88], W31
	035 Move X0, [X19+56]
	036 Compare X0, 0
	037 JumpIfEqual {188}
	038 Move X8, 0x22B5000
	039 Move X8, [X8+400]
	040 Add X2, X31, 8
	041 Move X1, X22
	042 Move X3, [X8]
	043 Call 0x2114594, X0, X1, X2
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {180}
	048 Move X0, [X31+8]
	049 Compare X0, 0
	050 JumpIfEqual {188}
	051 Call GrabbableItem.get_attachedAnchorId, X0
	052 Move [X31], X0
	053 Add X0, X31, 0
	054 Move X1, X31
	055 Call NetworkBehaviourId.get_IsValid, X0
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {64}
	060 Move TEMP, X21
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {180}
	064 Move X8, [X31+8]
	065 Compare X8, 0
	066 JumpIfEqual {188}
	067 Move X9, [X8+64]
	068 Compare X9, 0
	069 JumpIfEqual {131}
	070 Move X9, [X9+32]
	071 Compare X9, 0
	072 JumpIfEqual {131}
	073 Move W1, [X9]
	074 Move X23, 0x22B5000
	075 Move X23, [X23+448]
	076 Move X0, [X23]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1B6F8F8
	081 Move X0, X19
	082 Move X1, X31
	083 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	084 Move X0, [X19+56]
	085 Compare X0, 0
	086 JumpIfEqual {188}
	087 Move X1, X31
	088 Call NetworkRunner.get_Stage, X0
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X0, [X19+64]
	091 Compare X0, 0
	092 JumpIfEqual {188}
	093 Move X1, X31
	094 Call NetworkObject.GetLocalAuthorityMask, X0
	095 And W31, W0, 3
	096 Move W8, W0
	097 Move X0, [X19+56]
	098 Move TEMP, X8
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfEqual {155}
	102 Compare X0, 0
	103 JumpIfEqual {188}
	104 Move X0, [X0+80]
	105 Compare X0, 0
	106 JumpIfEqual {188}
	107 Move X1, X31
	108 Call Simulation.HasAnyActiveConnections, X0
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {180}
	113 Move X8, [X19+56]
	114 Compare X8, 0
	115 JumpIfEqual {188}
	116 Move X0, [X8+80]
	117 Move W1, 24
	118 Move X2, X31
	119 Call SimulationMessage.Allocate, X0, X1
	120 Move X23, X0
	121 Move W0, 1
	122 Move X1, X31
	123 Call Assert.Check, X0
	124 Move X8, [X19+64]
	125 Compare X8, 0
	126 JumpIfEqual {188}
	127 Move X8, [X8+32]
	128 Compare X8, 0
	129 JumpIfEqual {159}
	130 Move W0, [X8]
	131 Move X1, X31
	132 Move W8, [X8+104]
	133 Move X0, X19
	134 NotImplemented "Instruction BFM not yet implemented."
	135 Call AttachedItemAnchor.set_grabbedItem, X0, X1
	136 Move X0, [X31+8]
	137 Compare X0, 0
	138 JumpIfEqual {188}
	139 And W2, W20, 1
	140 Move X1, X19
	141 Call GrabbableItem.Grab, X0, X1, X2
	142 Move X0, [X23]
	143 Move X19, [X19+64]
	144 Move W8, [X0+224]
	145 Compare W8, 0
	146 JumpIfNotEqual {148}
	147 Call 0x1B6F8F8
	148 Move X8, 0x22B5000
	149 Move X8, [X8+456]
	150 Move W2, 3
	151 Move X1, X19
	152 Move X3, X31
	153 Move X0, [X8]
	154 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	155 Move W1, W31
	156 Move W2, W31
	157 Move X3, X31
	158 Call RpcInfo.FromLocal, X0, X1, X2
	159 Move X0, X31
	160 Move W1, [X19+104]
	161 Move W2, 1
	162 Move X3, X31
	163 Call RpcHeader.Create, X0, X1, X2
	164 And W8, W21, 1
	165 And W9, W20, 1
	166 Move [X23+28], X0
	167 Move [X23+36], X22
	168 Move [X23+44], W8
	169 Move [X23+48], W9
	170 Compare X23, 0
	171 JumpIfEqual {188}
	172 Move W8, 192
	173 Move [X23+12], W8
	174 Move X0, [X19+56]
	175 Compare X0, 0
	176 JumpIfEqual {188}
	177 Move X1, X23
	178 Move X2, X31
	179 Call NetworkRunner.SendRpc, X0, X1
	180 Move X20, [X31+48]
	181 Move X19, [X31+56]
	182 Move X22, [X31+32]
	183 Move X21, [X31+40]
	184 Move X30, [X31+16]
	185 Move X23, [X31+24]
	186 Add X31, X31, 64
	187 Return 
	188 Call 0x1B6FA1C

Method: System.Void RPC_DropItem(Fusion.NetworkBehaviourId objectID, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, UnityEngine.Vector3 itemVelocity, UnityEngine.Vector3 itemAngularVelocity, System.Boolean fromDeath, Fusion.RpcInfo info = null)

Disassembly:
	0x01C9ABA4 CBZ X0, 0x1C9AD98
	0x01C9ABA8 MOV X1, X31
	0x01C9ABAC BL 0x3AA7658
	0x01C9ABB0 MOV X0, X20
	0x01C9ABB4 MOV X1, X31
	0x01C9ABB8 MOV V11.16B, V0.16B
	0x01C9ABBC STR S1, [X31 + 0x24]
	0x01C9ABC0 MOV V12.16B, V2.16B
	0x01C9ABC4 BL 0x3A9B084
	0x01C9ABC8 CBZ X0, 0x1C9AD98
	0x01C9ABCC MOV X1, X31
	0x01C9ABD0 BL 0x3AA5FBC
	0x01C9ABD4 ADRP X21, 0x2589000
	0x01C9ABD8 LDRB W8, [X21 + 0x43F]
	0x01C9ABDC MOV V13.16B, V0.16B
	0x01C9ABE0 MOV V14.16B, V1.16B
	0x01C9ABE4 MOV V10.16B, V2.16B
	0x01C9ABE8 STR S3, [X31 + 0x20]
	0x01C9ABEC STP S15, S9, [X31 + 0x28]
	0x01C9ABF0 STR S8, [X31 + 0x30]
	0x01C9ABF4 CBNZ W8, 0x1C9AC0C
	0x01C9ABF8 ADRP X0, 0x22B3000
	0x01C9ABFC LDR X0, [X0 + 0x480]
	0x01C9AC00 BL 0x1B6E7F0
	0x01C9AC04 MOVZ W8, 0x1
	0x01C9AC08 STRB W8, [X21 + 0x43F]
	0x01C9AC0C ADRP X8, 0x22B3000
	0x01C9AC10 LDR X8, [X8 + 0x480]
	0x01C9AC14 ADRP X9, 0x22B3000
	0x01C9AC18 LDR X8, [X8]
	0x01C9AC1C LDR X9, [X9 + 0x478]
	0x01C9AC20 LDR X21, [X20 + 0xC0]
	0x01C9AC24 LDR X8, [X8 + 0xB8]
	0x01C9AC28 LDR X0, [X9]
	0x01C9AC2C LDP S15, S8, [X8]
	0x01C9AC30 LDR W9, [X0 + 0xE0]
	0x01C9AC34 LDR V9, [X8 + 0x8]
	0x01C9AC38 CBNZ W9, 0x1C9AC40
	0x01C9AC3C BL 0x1B6E8F8
	0x01C9AC40 MOV X0, X21
	0x01C9AC44 MOV X1, X31
	0x01C9AC48 MOV X2, X31
	0x01C9AC4C BL 0x3A9D6EC
	0x01C9AC50 TBZ X0, 0x0, 0x1C9AD30
	0x01C9AC54 LDR X8, [X20 + 0xC0]
	0x01C9AC58 CBZ X8, 0x1C9AD98
	0x01C9AC5C LDR X0, [X8 + 0x130]
	0x01C9AC60 CBZ X0, 0x1C9AD98
	0x01C9AC64 MOV X1, X31
	0x01C9AC68 BL 0x3AF6B78
	0x01C9AC6C LDR X8, [X20 + 0xC0]
	0x01C9AC70 CBZ X8, 0x1C9AD98
	0x01C9AC74 LDR X0, [X8 + 0x130]
	0x01C9AC78 CBZ X0, 0x1C9AD98
	0x01C9AC7C MOV X1, X31
	0x01C9AC80 MOV V15.16B, V0.16B
	0x01C9AC84 MOV V11.16B, V1.16B
	0x01C9AC88 MOV V12.16B, V2.16B
	0x01C9AC8C BL 0x3AF6CB0
	0x01C9AC90 LDR X8, [X20 + 0xC0]
	0x01C9AC94 CBZ X8, 0x1C9AD98
	0x01C9AC98 LDR X0, [X8 + 0x130]
	0x01C9AC9C STR S3, [X31 + 0x20]
	0x01C9ACA0 CBZ X0, 0x1C9AD98
	0x01C9ACA4 LDR V8, [X31 + 0x28]
	0x01C9ACA8 LDR V9, [X31 + 0x30]
	0x01C9ACAC MOV X1, X31
	0x01C9ACB0 MOV V13.16B, V0.16B
	0x01C9ACB4 MOV V14.16B, V1.16B
	0x01C9ACB8 MOV V10.16B, V2.16B
	0x01C9ACBC BL 0x3AF646C
	0x01C9ACC0 FADD S2, S9, S2
	0x01C9ACC4 MOV V0.S[1], V1.S[0]
	0x01C9ACC8 FADD V0.2S, V8.2S, V0.2S
	0x01C9ACCC STR D0, [X31 + 0x28]
	0x01C9ACD0 STR S2, [X31 + 0x30]
	0x01C9ACD4 LDR X8, [X20 + 0xC0]
	0x01C9ACD8 CBZ X8, 0x1C9AD98
	0x01C9ACDC LDR X0, [X8 + 0x130]
	0x01C9ACE0 STR S11, [X31 + 0x24]
	0x01C9ACE4 CBZ X0, 0x1C9AD98
	0x01C9ACE8 MOV X1, X31
	0x01C9ACEC MOV V11.16B, V15.16B
	0x01C9ACF0 BL 0x3AF65A4
	0x01C9ACF4 LDR X8, [X20 + 0xC0]
	0x01C9ACF8 CBZ X8, 0x1C9AD98
	0x01C9ACFC LDR X0, [X8 + 0x130]
	0x01C9AD00 CBZ X0, 0x1C9AD98
	0x01C9AD04 MOV X1, X31
	0x01C9AD08 MOV V15.16B, V0.16B
	0x01C9AD0C MOV V8.16B, V1.16B
	0x01C9AD10 MOV V9.16B, V2.16B
	0x01C9AD14 BL 0x3AF67EC
	0x01C9AD18 ADD X0, X31, 0x28
	0x01C9AD1C FMOV S1, 25
	0x01C9AD20 FMOV S2, 10
	0x01C9AD24 FMOV S3, 10
	0x01C9AD28 MOV X1, X31
	0x01C9AD2C BL 0x1D088CC
	0x01C9AD30 MOV X0, X20
	0x01C9AD34 BL 0x1C98D1C
	0x01C9AD38 LDR V0, [X31 + 0x30]
	0x01C9AD3C LDR X8, [X31 + 0x28]
	0x01C9AD40 LDP S6, S1, [X31 + 0x20]
	0x01C9AD44 MOV X1, X0
	0x01C9AD48 STR S0, [X31 + 0x8]
	0x01C9AD4C AND W2, W19, 0x1
	0x01C9AD50 MOV X0, X20
	0x01C9AD54 MOV V0.16B, V11.16B
	0x01C9AD58 MOV V2.16B, V12.16B
	0x01C9AD5C MOV V3.16B, V13.16B
	0x01C9AD60 MOV V4.16B, V14.16B
	0x01C9AD64 MOV V5.16B, V10.16B
	0x01C9AD68 STP S8, S9, [X31 + 0x14]
	0x01C9AD6C STR S15, [X31 + 0x10]
	0x01C9AD70 STR X8, [X31]
	0x01C9AD74 BL 0x1C99BA4
	0x01C9AD78 LDP X20, X19, [X31 + 0x90]
	0x01C9AD7C LDP X30, X21, [X31 + 0x80]
	0x01C9AD80 LDP D9, D8, [X31 + 0x70]
	0x01C9AD84 LDP D11, D10, [X31 + 0x60]
	0x01C9AD88 LDP D13, D12, [X31 + 0x50]
	0x01C9AD8C LDP D15, D14, [X31 + 0x40]
	0x01C9AD90 ADD X31, X31, 0xA0
	0x01C9AD94 RET
	0x01C9AD98 BL 0x1B6EA1C
	0x01C9AD9C SUB X31, X31, 0x30
	0x01C9ADA0 STP X30, X21, [X31 + 0x10]
	0x01C9ADA4 STP X20, X19, [X31 + 0x20]
	0x01C9ADA8 ADRP X20, 0x2589000
	0x01C9ADAC ADRP X21, 0x22B3000
	0x01C9ADB0 LDRB W8, [X20 + 0x3EF]
	0x01C9ADB4 LDR X21, [X21 + 0x478]
	0x01C9ADB8 MOV X19, X0
	0x01C9ADBC TBNZ X8, 0x0, 0x1C9ADE0
	0x01C9ADC0 ADRP X0, 0x22B4000
	0x01C9ADC4 LDR X0, [X0 + 0x190]
	0x01C9ADC8 BL 0x1B6E7F0
	0x01C9ADCC ADRP X0, 0x22B3000
	0x01C9ADD0 LDR X0, [X0 + 0x478]
	0x01C9ADD4 BL 0x1B6E7F0
	0x01C9ADD8 MOVZ W8, 0x1
	0x01C9ADDC STRB W8, [X20 + 0x3EF]
	0x01C9ADE0 LDR X0, [X21]
	0x01C9ADE4 STR X31, [X31]
	0x01C9ADE8 LDR X20, [X19 + 0x40]
	0x01C9ADEC LDR W8, [X0 + 0xE0]
	0x01C9ADF0 CBNZ W8, 0x1C9ADF8
	0x01C9ADF4 BL 0x1B6E8F8
	0x01C9ADF8 MOV X0, X20
	0x01C9ADFC MOV X1, X31
	0x01C9AE00 MOV X2, X31
	0x01C9AE04 BL 0x3AA0AF0
	0x01C9AE08 TBNZ X0, 0x0, 0x1C9AEEC
	0x01C9AE0C LDR X0, [X19 + 0x40]
	0x01C9AE10 CBZ X0, 0x1C9AEFC
	0x01C9AE14 MOV X1, X31
	0x01C9AE18 BL 0x1D9E5D0
	0x01C9AE1C TBZ X0, 0x0, 0x1C9AEEC
	0x01C9AE20 MOV X0, X19
	0x01C9AE24 BL 0x1C98D1C
	0x01C9AE28 STR X0, [X31 + 0x8]
	0x01C9AE2C ADD X0, X31, 0x8
	0x01C9AE30 MOV X1, X31
	0x01C9AE34 BL 0x1D680F0
	0x01C9AE38 TBZ X0, 0x0, 0x1C9AEEC
	0x01C9AE3C LDR X20, [X19 + 0x38]
	0x01C9AE40 MOV X0, X19
	0x01C9AE44 BL 0x1C98D1C
	0x01C9AE48 CBZ X20, 0x1C9AEFC
	0x01C9AE4C ADRP X8, 0x22B4000
	0x01C9AE50 LDR X8, [X8 + 0x190]
	0x01C9AE54 MOV X1, X0
	0x01C9AE58 ADD X2, X31, 0x0
	0x01C9AE5C MOV X0, X20
	0x01C9AE60 LDR X3, [X8]
	0x01C9AE64 BL 0x2113594
	0x01C9AE68 TBZ X0, 0x0, 0x1C9AEEC
	0x01C9AE6C LDR X0, [X21]
	0x01C9AE70 LDR X19, [X31]
	0x01C9AE74 LDR W8, [X0 + 0xE0]
	0x01C9AE78 CBNZ W8, 0x1C9AE80
	0x01C9AE7C BL 0x1B6E8F8
	0x01C9AE80 MOV X0, X19
	0x01C9AE84 MOV X1, X31
	0x01C9AE88 MOV X2, X31
	0x01C9AE8C BL 0x3A9D6EC
	0x01C9AE90 TBZ X0, 0x0, 0x1C9AEEC
	0x01C9AE94 LDR X8, [X31]
	0x01C9AE98 CBZ X8, 0x1C9AEFC
	0x01C9AE9C LDR X0, [X21]
	0x01C9AEA0 LDR X19, [X8 + 0x40]
	0x01C9AEA4 LDR W9, [X0 + 0xE0]
	0x01C9AEA8 CBNZ W9, 0x1C9AEB0
	0x01C9AEAC BL 0x1B6E8F8
	0x01C9AEB0 MOV X0, X19
	0x01C9AEB4 MOV X1, X31
	0x01C9AEB8 MOV X2, X31
	0x01C9AEBC BL 0x3A9D6EC
	0x01C9AEC0 TBZ X0, 0x0, 0x1C9AEEC
	0x01C9AEC4 LDR X8, [X31]
	0x01C9AEC8 CBZ X8, 0x1C9AEFC
	0x01C9AECC LDR X0, [X8 + 0x40]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+96], X22
	012 Move [X31+104], X21
	013 Move [X31+112], X20
	014 Move [X31+120], X19
	015 Move X22, 0x258A000
	016 Move V8, V3
	017 Move V9, V2
	018 Move V10, V1
	019 Move V15, V0
	020 Move S0, [X31+148]
	021 Move S14, [X31+152]
	022 Move V1, [X31+144]
	023 Move S2, [X31+132]
	024 Move S11, [X31+136]
	025 Move W8, [X22+998]
	026 Move V3, [X31+128]
	027 Move W19, W2
	028 Move V12, V5
	029 Move V13, V4
	030 Move X21, X1
	031 Move X20, X0
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {70}
	036 Move X0, 0x22B5000
	037 Move X0, [X0+448]
	038 Move [X31+88], S11
	039 Move [X31+96], S15
	040 Move [X31+8], S14
	041 Move [X31+16], S10
	042 Move [X31+4], S9
	043 Move V9, V8
	044 Move V8, V13
	045 Move V13, V12
	046 Move V12, V6
	047 Move V15, V0
	048 Move V11, V1
	049 Move V10, V2
	050 Move V14, V3
	051 Call 0x1B6F7F0
	052 Move X0, 0x22B5000
	053 Move X0, [X0+480]
	054 Call 0x1B6F7F0
	055 Move V3, V14
	056 Move V2, V10
	057 Move V1, V11
	058 Move V0, V15
	059 Move V6, V12
	060 Move V12, V13
	061 Move V13, V8
	062 Move V8, V9
	063 Move S9, [X31+4]
	064 Move S14, [X31+8]
	065 Move V10, [X31+12]
	066 Move S11, [X31+88]
	067 Move S15, [X31+92]
	068 Move W8, 1
	069 Move [X22+998], W8
	070 Move W8, [X20+88]
	071 Compare W8, 0
	072 JumpIfEqual {103}
	073 Move [X20+88], W31
	074 Move [X31+144], S1
	075 Move [X31+152], S0
	076 Move [X31+128], S3
	077 Move [X31+136], S2
	078 Move [X31+152], S14
	079 And W2, W19, 1
	080 Move [X31+136], S11
	081 Move X0, X20
	082 Move X1, X21
	083 Move V0, V15
	084 Move V1, V10
	085 Move V2, V9
	086 Move V3, V8
	087 Move V4, V13
	088 Move V5, V12
	089 Move X20, [X31+112]
	090 Move X19, [X31+120]
	091 Move X22, [X31+96]
	092 Move X21, [X31+104]
	093 Move X30, [X31+80]
	094 Move D9, [X31+64]
	095 Move D8, [X31+72]
	096 Move D11, [X31+48]
	097 Move D10, [X31+56]
	098 Move D13, [X31+32]
	099 Move D12, [X31+40]
	100 Move D15, [X31+16]
	101 Move D14, [X31+24]
	102 Add X31, X31, 128
	103 Move [X31+4], S3
	104 Move [X31+12], S2
	105 Move [X31+12], S1
	106 Move [X31+88], S0
	107 Move [X31+96], S6
	108 Move X22, 0x22B5000
	109 Move X22, [X22+448]
	110 Move X0, [X22]
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {115}
	114 Call 0x1B6F8F8
	115 Move X0, X20
	116 Move X1, X31
	117 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	118 Move X0, [X20+56]
	119 Compare X0, 0
	120 JumpIfEqual {269}
	121 Move X1, X31
	122 Call NetworkRunner.get_Stage, X0
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X20, [X31+112]
	125 Move X19, [X31+120]
	126 Move X22, [X31+96]
	127 Move X21, [X31+104]
	128 Move X30, [X31+80]
	129 Move D9, [X31+64]
	130 Move D8, [X31+72]
	131 Move D11, [X31+48]
	132 Move D10, [X31+56]
	133 Move D13, [X31+32]
	134 Move D12, [X31+40]
	135 Move D15, [X31+16]
	136 Move D14, [X31+24]
	137 Add X31, X31, 128
	138 Return 
	139 Move X0, [X20+64]
	140 Compare X0, 0
	141 JumpIfEqual {269}
	142 Move X1, X31
	143 Call NetworkObject.GetLocalAuthorityMask, X0
	144 And W31, W0, 3
	145 Move W8, W0
	146 Move X0, [X20+56]
	147 Move TEMP, X8
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfEqual {208}
	151 Compare X0, 0
	152 JumpIfEqual {269}
	153 Move X0, [X0+80]
	154 Compare X0, 0
	155 JumpIfEqual {269}
	156 Move X1, X31
	157 Call Simulation.HasAnyActiveConnections, X0
	158 Move TEMP, X0
	159 And TEMP, TEMP, 1
	160 Compare TEMP, 1
	161 JumpIfNotEqual {124}
	162 Move X8, [X20+56]
	163 Compare X8, 0
	164 JumpIfEqual {269}
	165 Move X0, [X8+80]
	166 Move W1, 72
	167 Move X2, X31
	168 Call SimulationMessage.Allocate, X0, X1
	169 Move X22, X0
	170 Move W0, 1
	171 Move X1, X31
	172 Call Assert.Check, X0
	173 Move X8, [X20+64]
	174 Compare X8, 0
	175 JumpIfEqual {269}
	176 Move X8, [X8+32]
	177 Compare X8, 0
	178 JumpIfEqual {217}
	179 Move W0, [X8]
	180 Move X0, [X22]
	181 Move X19, [X20+64]
	182 Move W8, [X0+224]
	183 Compare W8, 0
	184 JumpIfNotEqual {186}
	185 Call 0x1B6F8F8
	186 Move X8, 0x22B5000
	187 Move X8, [X8+480]
	188 Move X1, X19
	189 Move X20, [X31+112]
	190 Move X19, [X31+120]
	191 Move X22, [X31+96]
	192 Move X21, [X31+104]
	193 Move X0, [X8]
	194 Move X30, [X31+80]
	195 Move D9, [X31+64]
	196 Move D8, [X31+72]
	197 Move D11, [X31+48]
	198 Move D10, [X31+56]
	199 Move D13, [X31+32]
	200 Move D12, [X31+40]
	201 Move D15, [X31+16]
	202 Move D14, [X31+24]
	203 Move W2, 3
	204 Move X3, X31
	205 Add X31, X31, 128
	206 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	207 Return 
	208 Move W1, W31
	209 Move W2, W31
	210 Move X3, X31
	211 Call RpcInfo.FromLocal, X0, X1, X2
	212 Move S0, [X31+88]
	213 Move S6, [X31+92]
	214 Move S2, [X31+8]
	215 Move S1, [X31+12]
	216 Move V3, [X31+4]
	217 Move X0, X31
	218 Move W1, [X20+104]
	219 Move W2, 2
	220 Move X3, X31
	221 Call RpcHeader.Create, X0, X1, X2
	222 Move V1, [X31+92]
	223 Move V0, [X31+4]
	224 And W8, W19, 1
	225 Move [X22+28], X0
	226 Move [X22+36], X21
	227 Move [X22+68], S1
	228 Move [X22+76], S0
	229 Move V0, [X31+8]
	230 Move V1, [X31+12]
	231 Move [X22+44], S15
	232 Move [X22+52], S10
	233 Move [X22+52], S9
	234 Move [X22+60], S8
	235 Move [X22+76], S0
	236 Move [X22+84], S11
	237 Move V0, [X31+88]
	238 Move [X22+60], S13
	239 Move [X22+68], S12
	240 Move [X22+92], S14
	241 Move [X22+96], W8
	242 Move [X22+84], S1
	243 Move [X22+92], S0
	244 Compare X22, 0
	245 JumpIfEqual {269}
	246 Move W8, 576
	247 Move [X22+12], W8
	248 Move X0, [X20+56]
	249 Compare X0, 0
	250 JumpIfEqual {269}
	251 Move X1, X22
	252 Move X20, [X31+112]
	253 Move X19, [X31+120]
	254 Move X22, [X31+96]
	255 Move X21, [X31+104]
	256 Move X30, [X31+80]
	257 Move D9, [X31+64]
	258 Move D8, [X31+72]
	259 Move D11, [X31+48]
	260 Move D10, [X31+56]
	261 Move D13, [X31+32]
	262 Move D12, [X31+40]
	263 Move D15, [X31+16]
	264 Move D14, [X31+24]
	265 Move X2, X31
	266 Add X31, X31, 128
	267 Call NetworkRunner.SendRpc, X0, X1
	268 Return 
	269 Call 0x1B6FA1C

Method: System.Void RPC_UnattachItem()

Disassembly:
	0x01C9B0FC B 0x1C99804
	0x01C9B100 MOV X0, X19
	0x01C9B104 BL 0x1B6ECDC
	0x01C9B108 BL 0x1B6EA1C
	0x01C9B10C SUB X31, X31, 0xB0
	0x01C9B110 STP D15, D14, [X31 + 0x30]
	0x01C9B114 STP D13, D12, [X31 + 0x40]
	0x01C9B118 STP D11, D10, [X31 + 0x50]
	0x01C9B11C STP D9, D8, [X31 + 0x60]
	0x01C9B120 STR X30, [X31 + 0x70]
	0x01C9B124 STP X24, X23, [X31 + 0x80]
	0x01C9B128 STP X22, X21, [X31 + 0x90]
	0x01C9B12C STP X20, X19, [X31 + 0xA0]
	0x01C9B130 ADRP X20, 0x2588000
	0x01C9B134 LDRB W8, [X20 + 0x3F2]
	0x01C9B138 MOV X21, X1
	0x01C9B13C MOV X19, X0
	0x01C9B140 TBNZ X8, 0x0, 0x1C9B158
	0x01C9B144 ADRP X0, 0x22B3000
	0x01C9B148 LDR X0, [X0 + 0x1A0]
	0x01C9B14C BL 0x1B6E7F0
	0x01C9B150 MOVZ W8, 0x1
	0x01C9B154 STRB W8, [X20 + 0x3F2]
	0x01C9B158 MOVZ W0, 0x1
	0x01C9B15C MOV X1, X31
	0x01C9B160 MOVZ W22, 0x1
	0x01C9B164 BL 0x1D29EBC
	0x01C9B168 CBZ X19, 0x1C9B258
	0x01C9B16C LDR V1, [X21 + 0x2C]
	0x01C9B170 LDR V0, [X21 + 0x30]
	0x01C9B174 LDR X0, [X19 + 0x38]
	0x01C9B178 ADRP X24, 0x22B3000
	0x01C9B17C LDUR X20, [X21 + 0x24]
	0x01C9B180 STP S0, S1, [X31 + 0x78]
	0x01C9B184 LDR V1, [X21 + 0x34]
	0x01C9B188 LDR V0, [X21 + 0x38]
	0x01C9B18C LDP S14, S15, [X21 + 0x44]
	0x01C9B190 LDP S8, S9, [X21 + 0x4C]
	0x01C9B194 LDP S10, S11, [X21 + 0x54]
	0x01C9B198 STP S0, S1, [X31 + 0x28]
	0x01C9B19C LDP S0, S13, [X21 + 0x3C]
	0x01C9B1A0 LDR V12, [X21 + 0x5C]
	0x01C9B1A4 LDR W23, [X21 + 0x60]
	0x01C9B1A8 MOV X1, X21
	0x01C9B1AC STR S0, [X31 + 0x24]
	0x01C9B1B0 LDR X24, [X24 + 0x1A0]
	0x01C9B1B4 MOV W2, W31
	0x01C9B1B8 MOV X3, X31
	0x01C9B1BC BL 0x1DA8574
	0x01C9B1C0 STRB W22, [X19 + 0x58]
	0x01C9B1C4 LDR X8, [X19]
	0x01C9B1C8 LDR X1, [X24]
	0x01C9B1CC LDRB W10, [X8 + 0x130]
	0x01C9B1D0 LDRB W9, [X1 + 0x130]
	0x01C9B1D4 CMP W10, W9
	0x01C9B1D8 B.CC 0x1C9B250
	0x01C9B1DC LDR X8, [X8 + 0xC8]
	0x01C9B1E0 ADD X8, X8, X9, 0x3, LSL
	0x01C9B1E4 LDUR X8, [X8 - 0x8]
	0x01C9B1E8 CMP X8, X1
	0x01C9B1EC B.NE 0x1C9B250
	0x01C9B1F0 LDP S1, S0, [X31 + 0x78]
	0x01C9B1F4 LDP S3, S2, [X31 + 0x28]
	0x01C9B1F8 LDR V4, [X31 + 0x24]
	0x01C9B1FC CMP W23, 0x0
	0x01C9B200 CSET W2, NE
	0x01C9B204 MOV X0, X19
	0x01C9B208 MOV X1, X20
	0x01C9B20C MOV V5.16B, V13.16B
	0x01C9B210 MOV V6.16B, V14.16B
	0x01C9B214 STP S11, S12, [X31 + 0x14]
	0x01C9B218 STR S10, [X31 + 0x10]
	0x01C9B21C STP S8, S9, [X31 + 0x4]
	0x01C9B220 STR S15, [X31]
	0x01C9B224 BL 0x1C99BA4
	0x01C9B228 LDP X20, X19, [X31 + 0xA0]
	0x01C9B22C LDP X22, X21, [X31 + 0x90]
	0x01C9B230 LDP X24, X23, [X31 + 0x80]
	0x01C9B234 LDR X30, [X31 + 0x70]
	0x01C9B238 LDP D9, D8, [X31 + 0x60]
	0x01C9B23C LDP D11, D10, [X31 + 0x50]
	0x01C9B240 LDP D13, D12, [X31 + 0x40]
	0x01C9B244 LDP D15, D14, [X31 + 0x30]
	0x01C9B248 ADD X31, X31, 0xB0
	0x01C9B24C RET
	0x01C9B250 MOV X0, X19
	0x01C9B254 BL 0x1B6ECDC
	0x01C9B258 BL 0x1B6EA1C
	0x01C9B25C STR X30, [X31 - 0x20]!
	0x01C9B260 STP X20, X19, [X31 + 0x10]
	0x01C9B264 ADRP X20, 0x2588000
	0x01C9B268 LDRB W8, [X20 + 0x3F3]
	0x01C9B26C MOV X19, X0
	0x01C9B270 TBNZ X8, 0x0, 0x1C9B288
	0x01C9B274 ADRP X0, 0x22B3000
	0x01C9B278 LDR X0, [X0 + 0x1A0]
	0x01C9B27C BL 0x1B6E7F0
	0x01C9B280 MOVZ W8, 0x1
	0x01C9B284 STRB W8, [X20 + 0x3F3]
	0x01C9B288 MOVZ W0, 0x1
	0x01C9B28C MOV X1, X31
	0x01C9B290 MOVZ W20, 0x1
	0x01C9B294 BL 0x1D29EBC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2589000
	005 Move W8, [X20+999]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x22B4000
	012 Move X0, [X0+448]
	013 Call 0x1B6F7F0
	014 Move X0, 0x22B4000
	015 Move X0, [X0+496]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X20+999], W8
	019 Move W8, [X19+88]
	020 Compare W8, 0
	021 JumpIfEqual {32}
	022 Move [X19+88], W31
	023 Move X0, X31
	024 Call NetworkBehaviourId.get_None
	025 Move X1, X0
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Call AttachedItemAnchor.set_grabbedItem, X0, X1
	031 Return 
	032 Move X20, 0x22B4000
	033 Move X20, [X20+448]
	034 Move X0, [X20]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1B6F8F8
	039 Move X0, X19
	040 Move X1, X31
	041 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	042 Move X0, [X19+56]
	043 Compare X0, 0
	044 JumpIfEqual {129}
	045 Move X1, X31
	046 Call NetworkRunner.get_Stage, X0
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Return 
	052 Move X0, [X19+64]
	053 Compare X0, 0
	054 JumpIfEqual {129}
	055 Move X1, X31
	056 Call NetworkObject.GetLocalAuthorityMask, X0
	057 And W31, W0, 3
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {23}
	062 Move X8, [X19+56]
	063 Compare X8, 0
	064 JumpIfEqual {129}
	065 Move X0, [X8+80]
	066 Compare X0, 0
	067 JumpIfEqual {129}
	068 Move X1, X31
	069 Call Simulation.HasAnyActiveConnections, X0
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {48}
	074 Move X8, [X19+56]
	075 Compare X8, 0
	076 JumpIfEqual {129}
	077 Move X0, [X8+80]
	078 Move W1, 8
	079 Move X2, X31
	080 Call SimulationMessage.Allocate, X0, X1
	081 Move X20, X0
	082 Move W0, 1
	083 Move X1, X31
	084 Call Assert.Check, X0
	085 Move X8, [X19+64]
	086 Compare X8, 0
	087 JumpIfEqual {129}
	088 Move X8, [X8+32]
	089 Compare X8, 0
	090 JumpIfEqual {109}
	091 Move W0, [X8]
	092 Move X0, [X20]
	093 Move X19, [X19+64]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1B6F8F8
	098 Move X8, 0x22B4000
	099 Move X8, [X8+496]
	100 Move X1, X19
	101 Move X20, [X31+16]
	102 Move X19, [X31+24]
	103 Move W2, 3
	104 Move X0, [X8]
	105 Move X3, X31
	106 Move X30, [X31+32]
	107 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	108 Return 
	109 Move X0, X31
	110 Move W1, [X19+104]
	111 Move W2, 3
	112 Move X3, X31
	113 Call RpcHeader.Create, X0, X1, X2
	114 Move [X20+28], X0
	115 Compare X20, 0
	116 JumpIfEqual {129}
	117 Move W8, 64
	118 Move [X20+12], W8
	119 Move X0, [X19+56]
	120 Compare X0, 0
	121 JumpIfEqual {129}
	122 Move X1, X20
	123 Move X20, [X31+16]
	124 Move X19, [X31+24]
	125 Move X2, X31
	126 Move X30, [X31+32]
	127 Call NetworkRunner.SendRpc, X0, X1
	128 Return 
	129 Call 0x1B6FA1C

Method: System.Void HandleDrop(Fusion.NetworkBehaviourId objectID, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, UnityEngine.Vector3 velocity, UnityEngine.Vector3 angularVelocity, System.Boolean fromDeath)

Disassembly:
	0x01C9AED0 CBZ X0, 0x1C9AEFC
	0x01C9AED4 MOV X1, X31
	0x01C9AED8 BL 0x1D9E5D0
	0x01C9AEDC TBZ X0, 0x0, 0x1C9AEEC
	0x01C9AEE0 LDR X0, [X31]
	0x01C9AEE4 CBZ X0, 0x1C9AEFC
	0x01C9AEE8 BL 0x1C9AF00
	0x01C9AEEC LDP X20, X19, [X31 + 0x20]
	0x01C9AEF0 LDP X30, X21, [X31 + 0x10]
	0x01C9AEF4 ADD X31, X31, 0x30
	0x01C9AEF8 RET
	0x01C9AEFC BL 0x1B6EA1C
	0x01C9AF00 STR X30, [X31 - 0x20]!
	0x01C9AF04 STP X20, X19, [X31 + 0x10]
	0x01C9AF08 MOV X19, X0
	0x01C9AF0C LDR X0, [X0 + 0x130]
	0x01C9AF10 CBZ X0, 0x1C9B000
	0x01C9AF14 MOV X1, X31
	0x01C9AF18 BL 0x3AF6F14
	0x01C9AF1C LDR X0, [X19 + 0x148]
	0x01C9AF20 CBZ X0, 0x1C9B000
	0x01C9AF24 LDR X20, [X19 + 0x130]
	0x01C9AF28 MOV X1, X31
	0x01C9AF2C BL 0x3AA7658
	0x01C9AF30 CBZ X20, 0x1C9B000
	0x01C9AF34 MOV X0, X20
	0x01C9AF38 MOV X1, X31
	0x01C9AF3C BL 0x3AF6C18
	0x01C9AF40 LDR X0, [X19 + 0x148]
	0x01C9AF44 CBZ X0, 0x1C9B000
	0x01C9AF48 LDR X20, [X19 + 0x130]
	0x01C9AF4C MOV X1, X31
	0x01C9AF50 BL 0x3AA5FBC
	0x01C9AF54 CBZ X20, 0x1C9B000
	0x01C9AF58 MOV X0, X20
	0x01C9AF5C MOV X1, X31
	0x01C9AF60 BL 0x3AF6D4C
	0x01C9AF64 MOV X0, X19
	0x01C9AF68 MOV X1, X31
	0x01C9AF6C BL 0x3A9B084
	0x01C9AF70 LDR X8, [X19 + 0x130]
	0x01C9AF74 CBZ X8, 0x1C9B000
	0x01C9AF78 MOV X20, X0
	0x01C9AF7C MOV X0, X8
	0x01C9AF80 MOV X1, X31
	0x01C9AF84 BL 0x3AF6B78
	0x01C9AF88 CBZ X20, 0x1C9B000
	0x01C9AF8C MOV X0, X20
	0x01C9AF90 MOV X1, X31
	0x01C9AF94 BL 0x3AA76F8
	0x01C9AF98 MOV X0, X19
	0x01C9AF9C MOV X1, X31
	0x01C9AFA0 BL 0x3A9B084
	0x01C9AFA4 LDR X8, [X19 + 0x130]
	0x01C9AFA8 CBZ X8, 0x1C9B000
	0x01C9AFAC MOV X20, X0
	0x01C9AFB0 MOV X0, X8
	0x01C9AFB4 MOV X1, X31
	0x01C9AFB8 BL 0x3AF6CB0
	0x01C9AFBC CBZ X20, 0x1C9B000
	0x01C9AFC0 MOV X0, X20
	0x01C9AFC4 MOV X1, X31
	0x01C9AFC8 BL 0x3AA7878
	0x01C9AFCC MOV X0, X19
	0x01C9AFD0 MOV X1, X31
	0x01C9AFD4 BL 0x3A9B084
	0x01C9AFD8 CBZ X0, 0x1C9B000
	0x01C9AFDC MOV X1, X31
	0x01C9AFE0 BL 0x3AA7658
	0x01C9AFE4 STR S0, [X19 + 0x158]
	0x01C9AFE8 STR S1, [X19 + 0x15C]
	0x01C9AFEC STR S2, [X19 + 0x160]
	0x01C9AFF0 STRB W31, [X19 + 0x150]
	0x01C9AFF4 LDP X20, X19, [X31 + 0x10]
	0x01C9AFF8 LDR X30, [X31], #0x20
	0x01C9AFFC RET
	0x01C9B000 BL 0x1B6EA1C
	0x01C9B004 MOVZ W8, 0x1
	0x01C9B008 MOV X1, X31
	0x01C9B00C STRB W8, [X0 + 0x84]
	0x01C9B010 B 0x1D661D8
	0x01C9B014 LDR X1, [X0 + 0x88]
	0x01C9B018 B 0x1C98D7C
	0x01C9B01C STP X30, X19, [X31 - 0x10]!
	0x01C9B020 MOV X19, X0
	0x01C9B024 BL 0x1C98D1C
	0x01C9B028 STR X0, [X19 + 0x88]
	0x01C9B02C LDP X30, X19, [X31], #0x10
	0x01C9B030 RET
	0x01C9B034 STP X30, X25, [X31 - 0x40]!
	0x01C9B038 STP X24, X23, [X31 + 0x10]
	0x01C9B03C STP X22, X21, [X31 + 0x20]
	0x01C9B040 STP X20, X19, [X31 + 0x30]
	0x01C9B044 ADRP X20, 0x2588000
	0x01C9B048 LDRB W8, [X20 + 0x3F1]
	0x01C9B04C MOV X21, X1
	0x01C9B050 MOV X19, X0
	0x01C9B054 TBNZ X8, 0x0, 0x1C9B06C
	0x01C9B058 ADRP X0, 0x22B3000
	0x01C9B05C LDR X0, [X0 + 0x1A0]
	0x01C9B060 BL 0x1B6E7F0
	0x01C9B064 MOVZ W8, 0x1
	0x01C9B068 STRB W8, [X20 + 0x3F1]
	0x01C9B06C MOVZ W0, 0x1
	0x01C9B070 MOV X1, X31
	0x01C9B074 MOVZ W24, 0x1
	0x01C9B078 BL 0x1D29EBC
	0x01C9B07C CBZ X19, 0x1C9B108
	0x01C9B080 LDR X0, [X19 + 0x38]
	0x01C9B084 ADRP X25, 0x22B3000
	0x01C9B088 LDUR X20, [X21 + 0x24]
	0x01C9B08C LDP W22, W23, [X21 + 0x2C]
	0x01C9B090 LDR X25, [X25 + 0x1A0]
	0x01C9B094 MOV X1, X21
	0x01C9B098 MOV W2, W31
	0x01C9B09C MOV X3, X31
	0x01C9B0A0 BL 0x1DA8574
	0x01C9B0A4 STRB W24, [X19 + 0x58]
	0x01C9B0A8 LDR X8, [X19]
	0x01C9B0AC LDR X1, [X25]
	0x01C9B0B0 LDRB W10, [X8 + 0x130]
	0x01C9B0B4 LDRB W9, [X1 + 0x130]
	0x01C9B0B8 CMP W10, W9
	0x01C9B0BC B.CC 0x1C9B100
	0x01C9B0C0 LDR X8, [X8 + 0xC8]
	0x01C9B0C4 ADD X8, X8, X9, 0x3, LSL
	0x01C9B0C8 LDUR X8, [X8 - 0x8]
	0x01C9B0CC CMP X8, X1
	0x01C9B0D0 B.NE 0x1C9B100
	0x01C9B0D4 CMP W23, 0x0
	0x01C9B0D8 CSET W3, NE
	0x01C9B0DC CMP W22, 0x0
	0x01C9B0E0 MOV X0, X19
	0x01C9B0E4 MOV X1, X20
	0x01C9B0E8 LDP X20, X19, [X31 + 0x30]
	0x01C9B0EC LDP X22, X21, [X31 + 0x20]
	0x01C9B0F0 LDP X24, X23, [X31 + 0x10]
	0x01C9B0F4 CSET W2, NE
	0x01C9B0F8 LDP X30, X25, [X31], #0x40

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+48], D14
	003 Move [X31+56], D13
	004 Move [X31+64], D12
	005 Move [X31+72], D11
	006 Move [X31+80], D10
	007 Move [X31+88], D9
	008 Move [X31+96], D8
	009 Move [X31+104], X30
	010 Move [X31+112], X24
	011 Move [X31+120], X23
	012 Move [X31+128], X22
	013 Move [X31+136], X21
	014 Move [X31+144], X20
	015 Move [X31+152], X19
	016 Move X22, 0x258A000
	017 Move W8, [X22+1000]
	018 Move W20, W2
	019 Move V8, V6
	020 Move V9, V5
	021 Move V10, V4
	022 Move V11, V3
	023 Move V12, V2
	024 Move V13, V1
	025 Move V14, V0
	026 Move X21, X1
	027 Move X19, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {40}
	032 Move X0, 0x22B5000
	033 Move X0, [X0+400]
	034 Call 0x1B6F7F0
	035 Move X0, 0x22B4000
	036 Move X0, [X0+1144]
	037 Call 0x1B6F7F0
	038 Move W8, 1
	039 Move [X22+1000], W8
	040 Move [X31+40], X31
	041 Move X0, [X19+56]
	042 Compare X0, 0
	043 JumpIfEqual {181}
	044 Move X8, 0x22B5000
	045 Move X8, [X8+400]
	046 Add X2, X31, 40
	047 Move X1, X21
	048 Move X3, [X8]
	049 Call 0x2114594, X0, X1, X2
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {165}
	054 Move X22, 0x22B4000
	055 Move X22, [X22+1144]
	056 Move X21, [X31+40]
	057 Move X0, [X22]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1B6F8F8
	062 Move X0, X21
	063 Move X1, X31
	064 Move X2, X31
	065 Call Object.op_Inequality, X0, X1
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {165}
	070 Move X8, [X31+40]
	071 Compare X8, 0
	072 JumpIfEqual {181}
	073 Move X0, [X22]
	074 Move X21, [X8+64]
	075 Move W9, [X0+224]
	076 Compare W9, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1B6F8F8
	079 Move X0, X21
	080 Move X1, X31
	081 Move X2, X31
	082 Call Object.op_Inequality, X0, X1
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {165}
	087 Move X8, [X31+40]
	088 Compare X8, 0
	089 JumpIfEqual {181}
	090 Move X0, [X8+64]
	091 Compare X0, 0
	092 JumpIfEqual {181}
	093 Move X1, X31
	094 Call NetworkObject.get_IsValid, X0
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfNotEqual {165}
	099 Move X0, [X31+40]
	100 Compare X0, 0
	101 JumpIfEqual {181}
	102 Call GrabbableItem.get_attachedAnchorId, X0
	103 Move X8, [X19+64]
	104 Move X21, X0
	105 Compare X8, 0
	106 JumpIfEqual {111}
	107 Move X8, [X8+32]
	108 Compare X8, 0
	109 JumpIfEqual {111}
	110 Move W22, [X8]
	111 Move W22, W31
	112 Move X24, 0x2589000
	113 Move W8, [X24+1102]
	114 Move W23, [X19+104]
	115 Compare W8, 0
	116 JumpIfNotEqual {122}
	117 Move X0, 0x22B4000
	118 Move X0, [X0+488]
	119 Call 0x1B6F7F0
	120 Move W8, 1
	121 Move [X24+1102], W8
	122 Move X8, 0x22B4000
	123 Move X8, [X8+488]
	124 Move X0, [X8]
	125 Move W8, [X0+224]
	126 Compare W8, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1B6F8F8
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X8, X21
	131 ShiftRight X8, 32
	132 And X8, X8, 0x7FFFFFFF
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X0, [X31+40]
	135 Compare X0, 0
	136 JumpIfEqual {181}
	137 Move S1, [X31+180]
	138 Move S0, [X31+184]
	139 Move V2, [X31+176]
	140 Move S4, [X31+164]
	141 Move S3, [X31+168]
	142 Move V5, [X31+160]
	143 Move [X31+24], S0
	144 Move [X31+16], S2
	145 Move [X31+24], S1
	146 And W3, W20, 1
	147 Move [X31], S5
	148 Move [X31+8], S4
	149 Move W2, 1
	150 Move [X31+8], S3
	151 Move X1, X19
	152 Move V0, V14
	153 Move V1, V13
	154 Move V2, V12
	155 Move V3, V11
	156 Move V4, V10
	157 Move V5, V9
	158 Move V6, V8
	159 Call GrabbableItem.Release, X0, X1, X2, X3, X4, X5, X6, X7
	160 Move X0, X31
	161 Call NetworkBehaviourId.get_None
	162 Move X1, X0
	163 Move X0, X19
	164 Call AttachedItemAnchor.set_grabbedItem, X0, X1
	165 Move X20, [X31+144]
	166 Move X19, [X31+152]
	167 Move X22, [X31+128]
	168 Move X21, [X31+136]
	169 Move X24, [X31+112]
	170 Move X23, [X31+120]
	171 Move X30, [X31+104]
	172 Move D9, [X31+88]
	173 Move D8, [X31+96]
	174 Move D11, [X31+72]
	175 Move D10, [X31+80]
	176 Move D13, [X31+56]
	177 Move D12, [X31+64]
	178 Move V14, [X31+48]
	179 Add X31, X31, 160
	180 Return 
	181 Call 0x1B6FA1C

Method: System.Void ItemCollision(UnityEngine.Collision collision, UnityEngine.Vector3 velocity)

Disassembly:
	0x01C9B3B8 BL 0x1B6E8E8
	0x01C9B3BC STP X30, X23, [X31 - 0x30]!
	0x01C9B3C0 STP X22, X21, [X31 + 0x10]
	0x01C9B3C4 STP X20, X19, [X31 + 0x20]
	0x01C9B3C8 ADRP X20, 0x2588000
	0x01C9B3CC LDRB W8, [X20 + 0x3F4]
	0x01C9B3D0 MOV X19, X0
	0x01C9B3D4 TBNZ X8, 0x0, 0x1C9B3F8
	0x01C9B3D8 ADRP X0, 0x22B3000

ISIL:
	001 Move X8, [X0+152]
	002 Compare X8, 0
	003 JumpIfEqual {10}
	004 Move X2, X1
	005 Move W1, [X0+128]
	006 Move X4, [X8+24]
	007 Move X0, [X8+64]
	008 Move X3, [X8+40]
	009 CallNoReturn X4
	010 Return 

Method: System.Void HandleRootItemViewUpdated()

Disassembly:
	0x01C9B3DC LDR X0, [X0 + 0x170]
	0x01C9B3E0 BL 0x1B6E7F0
	0x01C9B3E4 ADRP X0, 0x22B3000
	0x01C9B3E8 LDR X0, [X0 + 0x218]
	0x01C9B3EC BL 0x1B6E7F0
	0x01C9B3F0 MOVZ W8, 0x1
	0x01C9B3F4 STRB W8, [X20 + 0x3F4]
	0x01C9B3F8 LDR X22, [X19 + 0x80]
	0x01C9B3FC CBZ X22, 0x1C9B47C
	0x01C9B400 ADRP X23, 0x22B3000
	0x01C9B404 LDR X23, [X23 + 0x170]
	0x01C9B408 ADRP X21, 0x22B3000
	0x01C9B40C LDR X20, [X22 + 0x190]
	0x01C9B410 LDR X0, [X23]
	0x01C9B414 LDR X21, [X21 + 0x218]
	0x01C9B418 BL 0x1B6EA0C
	0x01C9B41C LDR X2, [X21]
	0x01C9B420 MOV X1, X19
	0x01C9B424 MOV X3, X31
	0x01C9B428 MOV X21, X0
	0x01C9B42C BL 0x317DB24
	0x01C9B430 MOV X0, X20
	0x01C9B434 MOV X1, X21
	0x01C9B438 MOV X2, X31
	0x01C9B43C BL 0x322A750
	0x01C9B440 CBZ X0, 0x1C9B468
	0x01C9B444 LDR X1, [X23]
	0x01C9B448 LDR X8, [X0]
	0x01C9B44C CMP X8, X1
	0x01C9B450 B.NE 0x1C9B464
	0x01C9B454 STR X0, [X22 + 0x190]
	0x01C9B458 LDR X8, [X0]
	0x01C9B45C CMP X8, X1
	0x01C9B460 B.EQ 0x1C9B46C
	0x01C9B464 BL 0x1B6ECDC
	0x01C9B468 STR X0, [X22 + 0x190]
	0x01C9B46C LDP X20, X19, [X31 + 0x20]
	0x01C9B470 LDP X22, X21, [X31 + 0x10]
	0x01C9B474 LDP X30, X23, [X31], #0x30
	0x01C9B478 RET
	0x01C9B47C BL 0x1B6EA1C
	0x01C9B480 STP X30, X23, [X31 - 0x30]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2589000
	006 Move X21, 0x22B3000
	007 Move W8, [X20+1001]
	008 Move X21, [X21+1144]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22B3000
	015 Move X0, [X0+1144]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X20+1001], W8
	019 Move X0, [X21]
	020 Move X20, [X19+192]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1B6F8F8
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Inequality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {55}
	033 Move X0, [X21]
	034 Move X21, [X19+192]
	035 Move X20, [X19+200]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1B6F8F8
	040 Move X0, X21
	041 Move X1, X20
	042 Move X2, X31
	043 Call Object.op_Inequality, X0, X1
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {55}
	048 Move X0, [X19+192]
	049 Compare X0, 0
	050 JumpIfEqual {60}
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Return 
	060 Call 0x1B6FA1C

Method: System.Void HandleRootItemVisibleUpdated()

Disassembly:
	0x01C9B7A4 MOVZ W2, 0x1
	0x01C9B7A8 MOV X3, X31
	0x01C9B7AC BL 0x1DA8258
	0x01C9B7B0 STUR X0, [X20 + 0x1C]
	0x01C9B7B4 CBZ X20, 0x1C9B7DC
	0x01C9B7B8 MOVZ W8, 0x40
	0x01C9B7BC STR W8, [X20 + 0xC]
	0x01C9B7C0 LDR X0, [X19 + 0x38]
	0x01C9B7C4 CBZ X0, 0x1C9B7DC
	0x01C9B7C8 MOV X1, X20
	0x01C9B7CC LDP X20, X19, [X31 + 0x10]
	0x01C9B7D0 MOV X2, X31
	0x01C9B7D4 LDR X30, [X31], #0x20
	0x01C9B7D8 B 0x1D8A710
	0x01C9B7DC BL 0x1B6EA1C
	0x01C9B7E0 B 0x1C9B640
	0x01C9B7E4 MOV X1, X31
	0x01C9B7E8 B 0x1D661D8
	0x01C9B7EC LDRB W1, [X0 + 0x98]
	0x01C9B7F0 B 0x1C9B358
	0x01C9B7F4 STP X30, X19, [X31 - 0x10]!
	0x01C9B7F8 MOV X19, X0
	0x01C9B7FC BL 0x1C9B2F0
	0x01C9B800 AND W8, W0, 0x1
	0x01C9B804 STRB W8, [X19 + 0x98]
	0x01C9B808 LDP X30, X19, [X31], #0x10
	0x01C9B80C RET
	0x01C9B810 STR X30, [X31 - 0x20]!
	0x01C9B814 STP X20, X19, [X31 + 0x10]
	0x01C9B818 ADRP X20, 0x2588000
	0x01C9B81C LDRB W8, [X20 + 0x3F7]
	0x01C9B820 MOV X19, X0
	0x01C9B824 TBNZ X8, 0x0, 0x1C9B83C
	0x01C9B828 ADRP X0, 0x22B3000
	0x01C9B82C LDR X0, [X0 + 0x228]
	0x01C9B830 BL 0x1B6E7F0
	0x01C9B834 MOVZ W8, 0x1
	0x01C9B838 STRB W8, [X20 + 0x3F7]
	0x01C9B83C MOVZ W0, 0x1
	0x01C9B840 MOV X1, X31
	0x01C9B844 MOVZ W20, 0x1
	0x01C9B848 BL 0x1D29EBC
	0x01C9B84C CBZ X19, 0x1C9B8A0
	0x01C9B850 ADRP X9, 0x22B3000
	0x01C9B854 LDR X9, [X9 + 0x228]
	0x01C9B858 STRB W20, [X19 + 0x58]
	0x01C9B85C LDR X8, [X19]
	0x01C9B860 LDR X1, [X9]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2589000
	006 Move X21, 0x22B3000
	007 Move W8, [X20+1002]
	008 Move X21, [X21+1144]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22B3000
	015 Move X0, [X0+1144]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X20+1002], W8
	019 Move X0, [X21]
	020 Move X20, [X19+200]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1B6F8F8
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Inequality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {63}
	033 Move X0, [X21]
	034 Move X20, [X19+192]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1B6F8F8
	039 Move X0, X20
	040 Move X1, X31
	041 Move X2, X31
	042 Call Object.op_Inequality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {63}
	047 Move X0, [X19+200]
	048 Compare X0, 0
	049 JumpIfEqual {68}
	050 Move X19, [X19+192]
	051 Call GrabbableItem.get_isVisible, X0
	052 Compare X19, 0
	053 JumpIfEqual {68}
	054 NotImplemented "Instruction ORN not yet implemented."
	055 Move X0, X19
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 And W1, W8, 1
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 Call GrabbableItem.set_isHidden, X0, X1
	062 Return 
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X30, [X31+32]
	066 Move X21, [X31+40]
	067 Return 
	068 Call 0x1B6FA1C

Method: System.Void ResetGrabbedItem()

Disassembly:
	0x01C9A23C LDP X20, X19, [X31 + 0x10]
	0x01C9A240 MOVZ W2, 0x3
	0x01C9A244 LDR X0, [X8]
	0x01C9A248 MOV X3, X31
	0x01C9A24C LDR X30, [X31], #0x20
	0x01C9A250 B 0x1D69640
	0x01C9A254 MOV X0, X31
	0x01C9A258 LDR W1, [X19 + 0x68]
	0x01C9A25C MOVZ W2, 0x3
	0x01C9A260 MOV X3, X31
	0x01C9A264 BL 0x1DA8258
	0x01C9A268 STUR X0, [X20 + 0x1C]
	0x01C9A26C CBZ X20, 0x1C9A294
	0x01C9A270 MOVZ W8, 0x40
	0x01C9A274 STR W8, [X20 + 0xC]
	0x01C9A278 LDR X0, [X19 + 0x38]
	0x01C9A27C CBZ X0, 0x1C9A294
	0x01C9A280 MOV X1, X20
	0x01C9A284 LDP X20, X19, [X31 + 0x10]
	0x01C9A288 MOV X2, X31
	0x01C9A28C LDR X30, [X31], #0x20
	0x01C9A290 B 0x1D8A710
	0x01C9A294 BL 0x1B6EA1C
	0x01C9A298 SUB X31, X31, 0x90
	0x01C9A29C STP D15, D14, [X31 + 0x10]
	0x01C9A2A0 STP D13, D12, [X31 + 0x20]
	0x01C9A2A4 STP D11, D10, [X31 + 0x30]
	0x01C9A2A8 STP D9, D8, [X31 + 0x40]
	0x01C9A2AC STR X30, [X31 + 0x50]
	0x01C9A2B0 STP X24, X23, [X31 + 0x60]
	0x01C9A2B4 STP X22, X21, [X31 + 0x70]
	0x01C9A2B8 STP X20, X19, [X31 + 0x80]
	0x01C9A2BC LDP S9, S8, [X31 + 0xA4]
	0x01C9A2C0 LDR V11, [X31 + 0xA0]
	0x01C9A2C4 LDP S10, S15, [X31 + 0x94]
	0x01C9A2C8 LDR V12, [X31 + 0x90]
	0x01C9A2CC STP S5, S6, [X31 + 0x58]
	0x01C9A2D0 STP S3, S4, [X31 + 0x8]
	0x01C9A2D4 STR S2, [X31 + 0x4]
	0x01C9A2D8 STR X31, [X0 + 0x168]
	0x01C9A2DC CBZ X1, 0x1C9A3B4
	0x01C9A2E0 ADRP X24, 0x2589000
	0x01C9A2E4 LDRB W8, [X24 + 0x453]
	0x01C9A2E8 LDR X23, [X1 + 0x38]
	0x01C9A2EC MOV W19, W3
	0x01C9A2F0 MOV W20, W2
	0x01C9A2F4 MOV V13.16B, V1.16B
	0x01C9A2F8 MOV V14.16B, V0.16B
	0x01C9A2FC MOV X22, X1
	0x01C9A300 MOV X21, X0
	0x01C9A304 CBNZ W8, 0x1C9A31C
	0x01C9A308 ADRP X0, 0x22B3000
	0x01C9A30C LDR X0, [X0 + 0x478]
	0x01C9A310 BL 0x1B6E7F0
	0x01C9A314 MOVZ W8, 0x1
	0x01C9A318 STRB W8, [X24 + 0x453]
	0x01C9A31C ADRP X8, 0x22B3000
	0x01C9A320 LDR X8, [X8 + 0x478]
	0x01C9A324 LDR X0, [X8]
	0x01C9A328 LDR W8, [X0 + 0xE0]
	0x01C9A32C CBNZ W8, 0x1C9A334
	0x01C9A330 BL 0x1B6E8F8
	0x01C9A334 MOV X0, X23
	0x01C9A338 MOV X1, X31
	0x01C9A33C BL 0x3AA0BFC
	0x01C9A340 MOV X1, X31
	0x01C9A344 TBZ X0, 0x0, 0x1C9A35C
	0x01C9A348 LDR X0, [X22 + 0x38]
	0x01C9A34C MOV X1, X22
	0x01C9A350 MOV X2, X31
	0x01C9A354 BL 0x1D65FDC
	0x01C9A358 MOV X1, X0
	0x01C9A35C STP S11, S9, [X31 + 0xA0]
	0x01C9A360 STP S12, S10, [X31 + 0x90]
	0x01C9A364 STR S8, [X31 + 0xA8]
	0x01C9A368 AND W2, W20, 0x1
	0x01C9A36C AND W3, W19, 0x1
	0x01C9A370 STR S15, [X31 + 0x98]
	0x01C9A374 MOV X0, X21
	0x01C9A378 MOV V0.16B, V14.16B
	0x01C9A37C MOV V1.16B, V13.16B
	0x01C9A380 LDP S2, S3, [X31 + 0x4]
	0x01C9A384 LDR V4, [X31 + 0xC]
	0x01C9A388 LDP S5, S6, [X31 + 0x58]
	0x01C9A38C LDP X20, X19, [X31 + 0x80]
	0x01C9A390 LDP X22, X21, [X31 + 0x70]
	0x01C9A394 LDP X24, X23, [X31 + 0x60]
	0x01C9A398 LDR X30, [X31 + 0x50]
	0x01C9A39C LDP D9, D8, [X31 + 0x40]
	0x01C9A3A0 LDP D11, D10, [X31 + 0x30]
	0x01C9A3A4 LDP D13, D12, [X31 + 0x20]
	0x01C9A3A8 LDP D15, D14, [X31 + 0x10]
	0x01C9A3AC ADD X31, X31, 0x90
	0x01C9A3B0 B 0x1C9F150
	0x01C9A3B4 BL 0x1B6EA1C
	0x01C9A3B8 LDR X8, [X0 + 0x98]
	0x01C9A3BC CBZ X8, 0x1C9A3D8
	0x01C9A3C0 MOV X2, X1
	0x01C9A3C4 LDR W1, [X0 + 0x80]
	0x01C9A3C8 LDR X4, [X8 + 0x18]
	0x01C9A3CC LDR X0, [X8 + 0x40]
	0x01C9A3D0 LDR X3, [X8 + 0x28]
	0x01C9A3D4 BR X4
	0x01C9A3D8 RET
	0x01C9A3DC STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x258A000
	008 Move X20, 0x22B4000
	009 Move W8, [X21+1003]
	010 Move X20, [X20+1144]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x22B5000
	017 Move X0, [X0+360]
	018 Call 0x1B6F7F0
	019 Move X0, 0x22B5000
	020 Move X0, [X0+368]
	021 Call 0x1B6F7F0
	022 Move X0, 0x22B5000
	023 Move X0, [X0+376]
	024 Call 0x1B6F7F0
	025 Move X0, 0x22B5000
	026 Move X0, [X0+384]
	027 Call 0x1B6F7F0
	028 Move X0, 0x22B4000
	029 Move X0, [X0+1144]
	030 Call 0x1B6F7F0
	031 Move W8, 1
	032 Move [X21+1003], W8
	033 Move X0, [X20]
	034 Move X20, [X19+192]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1B6F8F8
	039 Move X0, X20
	040 Move X1, X31
	041 Move X2, X31
	042 Call Object.op_Inequality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {114}
	047 Move X22, [X19+192]
	048 Compare X22, 0
	049 JumpIfEqual {122}
	050 Move X23, 0x22B5000
	051 Move X20, [X22+392]
	052 Move X23, [X23+368]
	053 Move X0, [X23]
	054 Call 0x1B6FA0C
	055 Move X8, 0x22B5000
	056 Move X8, [X8+384]
	057 Move X1, X19
	058 Move X3, X31
	059 Move X21, X0
	060 Move X2, [X8]
	061 Call Action..ctor, X0, X1, X2
	062 Move X0, X20
	063 Move X1, X21
	064 Move X2, X31
	065 Call Delegate.Remove, X0, X1
	066 Compare X0, 0
	067 JumpIfEqual {75}
	068 Move X1, [X23]
	069 Move X8, [X0]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move [X22+392], X0
	072 Move X8, [X0]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Call 0x1B6FCDC
	075 Move [X22+392], X0
	076 Move X22, [X19+192]
	077 Compare X22, 0
	078 JumpIfEqual {122}
	079 Move X23, 0x22B5000
	080 Move X20, [X22+432]
	081 Move X23, [X23+360]
	082 Move X0, [X23]
	083 Call 0x1B6FA0C
	084 Move X8, 0x22B5000
	085 Move X8, [X8+376]
	086 Move X1, X19
	087 Move X3, X31
	088 Move X21, X0
	089 Move X2, [X8]
	090 Call Action`1<Object>..ctor, X0, X1, X2
	091 Move X0, X20
	092 Move X1, X21
	093 Move X2, X31
	094 Call Delegate.Remove, X0, X1
	095 Compare X0, 0
	096 JumpIfEqual {113}
	097 Move X21, [X23]
	098 Move X20, X0
	099 Move X1, X21
	100 Call 0x1B6F8FC
	101 Compare X0, 0
	102 JumpIfEqual {110}
	103 Move [X22+432], X0
	104 Move X21, [X23]
	105 Move X0, X20
	106 Move X1, X21
	107 Call 0x1B6F8FC
	108 Compare X0, 0
	109 JumpIfNotEqual {114}
	110 Move X0, X20
	111 Move X1, X21
	112 Call 0x1B6FCDC
	113 Move [X22+432], X31
	114 Move [X19+192], X31
	115 Move X20, [X31+32]
	116 Move X19, [X31+40]
	117 Move X22, [X31+16]
	118 Move X21, [X31+24]
	119 Move X30, [X31+48]
	120 Move X23, [X31+56]
	121 Return 
	122 Call 0x1B6FA1C

Method: System.Void HandleGrabbedItemChanged()

Disassembly:
	0x01C99E14 B 0x1D69640
	0x01C99E18 MOV W1, W31
	0x01C99E1C MOV W2, W31
	0x01C99E20 MOV X3, X31
	0x01C99E24 BL 0x1DA84F4
	0x01C99E28 LDP S0, S6, [X31 + 0x58]
	0x01C99E2C LDP S2, S1, [X31 + 0x8]
	0x01C99E30 LDR V3, [X31 + 0x4]
	0x01C99E34 B 0x1C99C88
	0x01C99E38 MOV X0, X31
	0x01C99E3C LDR W1, [X20 + 0x68]
	0x01C99E40 MOVZ W2, 0x2
	0x01C99E44 MOV X3, X31
	0x01C99E48 BL 0x1DA8258
	0x01C99E4C LDR V1, [X31 + 0x5C]
	0x01C99E50 LDR V0, [X31 + 0x4]
	0x01C99E54 AND W8, W19, 0x1
	0x01C99E58 STUR X0, [X22 + 0x1C]
	0x01C99E5C STUR X21, [X22 + 0x24]
	0x01C99E60 STP S1, S0, [X22 + 0x44]
	0x01C99E64 LDR V0, [X31 + 0x8]
	0x01C99E68 LDR V1, [X31 + 0xC]
	0x01C99E6C STP S15, S10, [X22 + 0x2C]
	0x01C99E70 STP S9, S8, [X22 + 0x34]
	0x01C99E74 STP S0, S11, [X22 + 0x4C]
	0x01C99E78 LDR V0, [X31 + 0x58]
	0x01C99E7C STP S13, S12, [X22 + 0x3C]
	0x01C99E80 STR S14, [X22 + 0x5C]
	0x01C99E84 STR W8, [X22 + 0x60]
	0x01C99E88 STP S1, S0, [X22 + 0x54]
	0x01C99E8C CBZ X22, 0x1C99ECC
	0x01C99E90 MOVZ W8, 0x240
	0x01C99E94 STR W8, [X22 + 0xC]
	0x01C99E98 LDR X0, [X20 + 0x38]
	0x01C99E9C CBZ X0, 0x1C99ECC
	0x01C99EA0 MOV X1, X22
	0x01C99EA4 LDP X20, X19, [X31 + 0x70]
	0x01C99EA8 LDP X22, X21, [X31 + 0x60]
	0x01C99EAC LDR X30, [X31 + 0x50]
	0x01C99EB0 LDP D9, D8, [X31 + 0x40]
	0x01C99EB4 LDP D11, D10, [X31 + 0x30]
	0x01C99EB8 LDP D13, D12, [X31 + 0x20]
	0x01C99EBC LDP D15, D14, [X31 + 0x10]
	0x01C99EC0 MOV X2, X31
	0x01C99EC4 ADD X31, X31, 0x80
	0x01C99EC8 B 0x1D8A710
	0x01C99ECC BL 0x1B6EA1C
	0x01C99ED0 SUB X31, X31, 0xA0
	0x01C99ED4 STR D14, [X31 + 0x30]
	0x01C99ED8 STP D13, D12, [X31 + 0x38]
	0x01C99EDC STP D11, D10, [X31 + 0x48]
	0x01C99EE0 STP D9, D8, [X31 + 0x58]
	0x01C99EE4 STR X30, [X31 + 0x68]
	0x01C99EE8 STP X24, X23, [X31 + 0x70]
	0x01C99EEC STP X22, X21, [X31 + 0x80]
	0x01C99EF0 STP X20, X19, [X31 + 0x90]
	0x01C99EF4 ADRP X22, 0x258A000
	0x01C99EF8 LDRB W8, [X22 + 0x3E8]
	0x01C99EFC MOV W20, W2
	0x01C99F00 MOV V8.16B, V6.16B
	0x01C99F04 MOV V9.16B, V5.16B
	0x01C99F08 MOV V10.16B, V4.16B
	0x01C99F0C MOV V11.16B, V3.16B
	0x01C99F10 MOV V12.16B, V2.16B
	0x01C99F14 MOV V13.16B, V1.16B
	0x01C99F18 MOV V14.16B, V0.16B
	0x01C99F1C MOV X21, X1
	0x01C99F20 MOV X19, X0
	0x01C99F24 TBNZ X8, 0x0, 0x1C99F48
	0x01C99F28 ADRP X0, 0x22B5000
	0x01C99F2C LDR X0, [X0 + 0x190]
	0x01C99F30 BL 0x1B6E7F0
	0x01C99F34 ADRP X0, 0x22B4000
	0x01C99F38 LDR X0, [X0 + 0x478]
	0x01C99F3C BL 0x1B6E7F0
	0x01C99F40 MOVZ W8, 0x1
	0x01C99F44 STRB W8, [X22 + 0x3E8]
	0x01C99F48 STR X31, [X31 + 0x28]
	0x01C99F4C LDR X0, [X19 + 0x38]
	0x01C99F50 CBZ X0, 0x1C9A0F8
	0x01C99F54 ADRP X8, 0x22B5000
	0x01C99F58 LDR X8, [X8 + 0x190]
	0x01C99F5C ADD X2, X31, 0x28
	0x01C99F60 MOV X1, X21
	0x01C99F64 LDR X3, [X8]
	0x01C99F68 BL 0x2113594
	0x01C99F6C TBZ X0, 0x0, 0x1C9A0D0
	0x01C99F70 ADRP X22, 0x22B4000
	0x01C99F74 LDR X22, [X22 + 0x478]
	0x01C99F78 LDR X21, [X31 + 0x28]
	0x01C99F7C LDR X0, [X22]
	0x01C99F80 LDR W8, [X0 + 0xE0]
	0x01C99F84 CBNZ W8, 0x1C99F8C
	0x01C99F88 BL 0x1B6E8F8
	0x01C99F8C MOV X0, X21
	0x01C99F90 MOV X1, X31
	0x01C99F94 MOV X2, X31
	0x01C99F98 BL 0x3A9D6EC
	0x01C99F9C TBZ X0, 0x0, 0x1C9A0D0
	0x01C99FA0 LDR X8, [X31 + 0x28]
	0x01C99FA4 CBZ X8, 0x1C9A0F8
	0x01C99FA8 LDR X0, [X22]
	0x01C99FAC LDR X21, [X8 + 0x40]
	0x01C99FB0 LDR W9, [X0 + 0xE0]
	0x01C99FB4 CBNZ W9, 0x1C99FBC
	0x01C99FB8 BL 0x1B6E8F8
	0x01C99FBC MOV X0, X21
	0x01C99FC0 MOV X1, X31
	0x01C99FC4 MOV X2, X31
	0x01C99FC8 BL 0x3A9D6EC
	0x01C99FCC TBZ X0, 0x0, 0x1C9A0D0
	0x01C99FD0 LDR X8, [X31 + 0x28]
	0x01C99FD4 CBZ X8, 0x1C9A0F8
	0x01C99FD8 LDR X0, [X8 + 0x40]
	0x01C99FDC CBZ X0, 0x1C9A0F8
	0x01C99FE0 MOV X1, X31
	0x01C99FE4 BL 0x1D9E5D0
	0x01C99FE8 TBZ X0, 0x0, 0x1C9A0D0
	0x01C99FEC LDR X0, [X31 + 0x28]
	0x01C99FF0 CBZ X0, 0x1C9A0F8
	0x01C99FF4 BL 0x1C99A60
	0x01C99FF8 LDR X8, [X19 + 0x40]
	0x01C99FFC MOV X21, X0
	0x01C9A000 CBZ X8, 0x1C9A014
	0x01C9A004 LDR X8, [X8 + 0x20]
	0x01C9A008 CBZ X8, 0x1C9A014
	0x01C9A00C LDR W22, [X8]
	0x01C9A010 B 0x1C9A018
	0x01C9A014 MOV W22, W31
	0x01C9A018 ADRP X24, 0x2589000
	0x01C9A01C LDRB W8, [X24 + 0x44E]
	0x01C9A020 LDR W23, [X19 + 0x68]
	0x01C9A024 CBNZ W8, 0x1C9A03C
	0x01C9A028 ADRP X0, 0x22B4000
	0x01C9A02C LDR X0, [X0 + 0x1E8]
	0x01C9A030 BL 0x1B6E7F0
	0x01C9A034 MOVZ W8, 0x1
	0x01C9A038 STRB W8, [X24 + 0x44E]
	0x01C9A03C ADRP X8, 0x22B4000
	0x01C9A040 LDR X8, [X8 + 0x1E8]
	0x01C9A044 LDR X0, [X8]
	0x01C9A048 LDR W8, [X0 + 0xE0]
	0x01C9A04C CBNZ W8, 0x1C9A054
	0x01C9A050 BL 0x1B6E8F8
	0x01C9A054 CMP W22, W21
	0x01C9A058 B.NE 0x1C9A0D0
	0x01C9A05C UBFM X8, X21, 0x20, 0x3F
	0x01C9A060 CMP W23, W8
	0x01C9A064 B.NE 0x1C9A0D0
	0x01C9A068 LDR X0, [X31 + 0x28]
	0x01C9A06C CBZ X0, 0x1C9A0F8
	0x01C9A070 LDP S1, S0, [X31 + 0xB4]
	0x01C9A074 LDR V2, [X31 + 0xB0]
	0x01C9A078 LDP S4, S3, [X31 + 0xA4]
	0x01C9A07C LDR V5, [X31 + 0xA0]
	0x01C9A080 STR S0, [X31 + 0x18]
	0x01C9A084 STP S2, S1, [X31 + 0x10]
	0x01C9A088 AND W3, W20, 0x1
	0x01C9A08C STP S5, S4, [X31]
	0x01C9A090 MOVZ W2, 0x1
	0x01C9A094 STR S3, [X31 + 0x8]
	0x01C9A098 MOV X1, X19
	0x01C9A09C MOV V0.16B, V14.16B
	0x01C9A0A0 MOV V1.16B, V13.16B
	0x01C9A0A4 MOV V2.16B, V12.16B
	0x01C9A0A8 MOV V3.16B, V11.16B
	0x01C9A0AC MOV V4.16B, V10.16B
	0x01C9A0B0 MOV V5.16B, V9.16B
	0x01C9A0B4 MOV V6.16B, V8.16B
	0x01C9A0B8 BL 0x1C9A298
	0x01C9A0BC MOV X0, X31
	0x01C9A0C0 BL 0x1D6815C
	0x01C9A0C4 MOV X1, X0
	0x01C9A0C8 MOV X0, X19
	0x01C9A0CC BL 0x1C98D7C
	0x01C9A0D0 LDP X20, X19, [X31 + 0x90]
	0x01C9A0D4 LDP X22, X21, [X31 + 0x80]
	0x01C9A0D8 LDP X24, X23, [X31 + 0x70]
	0x01C9A0DC LDR X30, [X31 + 0x68]
	0x01C9A0E0 LDP D9, D8, [X31 + 0x58]
	0x01C9A0E4 LDP D11, D10, [X31 + 0x48]
	0x01C9A0E8 LDP D13, D12, [X31 + 0x38]
	0x01C9A0EC LDR V14, [X31 + 0x30]
	0x01C9A0F0 ADD X31, X31, 0xA0
	0x01C9A0F4 RET
	0x01C9A0F8 BL 0x1B6EA1C
	0x01C9A0FC STR X30, [X31 - 0x20]!
	0x01C9A100 STP X20, X19, [X31 + 0x10]
	0x01C9A104 ADRP X20, 0x2589000
	0x01C9A108 LDRB W8, [X20 + 0x3E7]
	0x01C9A10C MOV X19, X0
	0x01C9A110 TBNZ X8, 0x0, 0x1C9A134
	0x01C9A114 ADRP X0, 0x22B4000
	0x01C9A118 LDR X0, [X0 + 0x1C0]
	0x01C9A11C BL 0x1B6E7F0
	0x01C9A120 ADRP X0, 0x22B4000
	0x01C9A124 LDR X0, [X0 + 0x1F0]
	0x01C9A128 BL 0x1B6E7F0
	0x01C9A12C MOVZ W8, 0x1
	0x01C9A130 STRB W8, [X20 + 0x3E7]
	0x01C9A134 LDRB W8, [X19 + 0x58]
	0x01C9A138 CBZ W8, 0x1C9A15C
	0x01C9A13C STRB W31, [X19 + 0x58]
	0x01C9A140 MOV X0, X31
	0x01C9A144 BL 0x1D6815C
	0x01C9A148 MOV X1, X0
	0x01C9A14C MOV X0, X19
	0x01C9A150 LDP X20, X19, [X31 + 0x10]
	0x01C9A154 LDR X30, [X31], #0x20
	0x01C9A158 B 0x1C98D7C
	0x01C9A15C ADRP X20, 0x22B4000
	0x01C9A160 LDR X20, [X20 + 0x1C0]
	0x01C9A164 LDR X0, [X20]
	0x01C9A168 LDR W8, [X0 + 0xE0]
	0x01C9A16C CBNZ W8, 0x1C9A174
	0x01C9A170 BL 0x1B6E8F8
	0x01C9A174 MOV X0, X19
	0x01C9A178 MOV X1, X31
	0x01C9A17C BL 0x1D697C8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x258B000
	011 Move W8, [X20+1004]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {43}
	017 Move X0, 0x22B6000
	018 Move X0, [X0+360]
	019 Call 0x1B6F7F0
	020 Move X0, 0x22B6000
	021 Move X0, [X0+368]
	022 Call 0x1B6F7F0
	023 Move X0, 0x22B6000
	024 Move X0, [X0+376]
	025 Call 0x1B6F7F0
	026 Move X0, 0x22B6000
	027 Move X0, [X0+384]
	028 Call 0x1B6F7F0
	029 Move X0, 0x22B6000
	030 Move X0, [X0+392]
	031 Call 0x1B6F7F0
	032 Move X0, 0x22B6000
	033 Move X0, [X0+400]
	034 Call 0x1B6F7F0
	035 Move X0, 0x22B5000
	036 Move X0, [X0+1144]
	037 Call 0x1B6F7F0
	038 Move X0, 0x22B6000
	039 Move X0, [X0+408]
	040 Call 0x1B6F7F0
	041 Move W8, 1
	042 Move [X20+1004], W8
	043 Move X0, X19
	044 Call AttachedItemAnchor.ResetGrabbedItem, X0
	045 Move X0, X19
	046 Call AttachedItemAnchor.get_grabbedItem, X0
	047 Move [X31+8], X0
	048 Add X0, X31, 8
	049 Move X1, X31
	050 Call NetworkBehaviourId.get_IsValid, X0
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {67}
	055 Move X20, [X19+56]
	056 Move X0, X19
	057 Call AttachedItemAnchor.get_grabbedItem, X0
	058 Compare X20, 0
	059 JumpIfEqual {260}
	060 Move X8, 0x22B6000
	061 Move X8, [X8+400]
	062 Move X1, X0
	063 Add X2, X19, 192
	064 Move X0, X20
	065 Move X3, [X8]
	066 Call 0x2114594, X0, X1, X2
	067 Move X8, [X19+144]
	068 Compare X8, 0
	069 JumpIfEqual {76}
	070 Move W1, [X19+128]
	071 Move X2, [X19+192]
	072 Move X9, [X8+24]
	073 Move X0, [X8+64]
	074 Move X3, [X8+40]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move X0, [X19+64]
	077 Compare X0, 0
	078 JumpIfEqual {250}
	079 Move W8, [X0+96]
	080 Move TEMP, X8
	081 And TEMP, TEMP, 2
	082 Compare TEMP, 2
	083 JumpIfEqual {250}
	084 Move X1, X31
	085 Call NetworkObject.get_HasStateAuthority, X0
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {250}
	090 Move X22, 0x22B5000
	091 Move X22, [X22+1144]
	092 Move X20, [X19+192]
	093 Move X0, [X22]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1B6F8F8
	098 Move X0, X20
	099 Move X1, X31
	100 Move X2, X31
	101 Call Object.op_Inequality, X0, X1
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {173}
	106 Move X23, [X19+192]
	107 Compare X23, 0
	108 JumpIfEqual {260}
	109 Move X24, 0x22B6000
	110 Move X20, [X23+392]
	111 Move X24, [X24+368]
	112 Move X0, [X24]
	113 Call 0x1B6FA0C
	114 Move X8, 0x22B6000
	115 Move X8, [X8+384]
	116 Move X1, X19
	117 Move X3, X31
	118 Move X21, X0
	119 Move X2, [X8]
	120 Call Action..ctor, X0, X1, X2
	121 Move X0, X20
	122 Move X1, X21
	123 Move X2, X31
	124 Call Delegate.Combine, X0, X1
	125 Compare X0, 0
	126 JumpIfEqual {134}
	127 Move X1, [X24]
	128 Move X8, [X0]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move [X23+392], X0
	131 Move X8, [X0]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Call 0x1B6FCDC
	134 Move [X23+392], X0
	135 Move X23, [X19+192]
	136 Compare X23, 0
	137 JumpIfEqual {260}
	138 Move X24, 0x22B6000
	139 Move X20, [X23+432]
	140 Move X24, [X24+360]
	141 Move X0, [X24]
	142 Call 0x1B6FA0C
	143 Move X8, 0x22B6000
	144 Move X8, [X8+376]
	145 Move X1, X19
	146 Move X3, X31
	147 Move X21, X0
	148 Move X2, [X8]
	149 Call Action`1<Object>..ctor, X0, X1, X2
	150 Move X0, X20
	151 Move X1, X21
	152 Move X2, X31
	153 Call Delegate.Combine, X0, X1
	154 Compare X0, 0
	155 JumpIfEqual {172}
	156 Move X21, [X24]
	157 Move X20, X0
	158 Move X1, X21
	159 Call 0x1B6F8FC
	160 Compare X0, 0
	161 JumpIfEqual {169}
	162 Move [X23+432], X0
	163 Move X21, [X24]
	164 Move X0, X20
	165 Move X1, X21
	166 Call 0x1B6F8FC
	167 Compare X0, 0
	168 JumpIfNotEqual {173}
	169 Move X0, X20
	170 Move X1, X21
	171 Call 0x1B6FCDC
	172 Move [X23+432], X31
	173 Move W8, [X19+128]
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move X0, [X22]
	176 Move X20, [X19+192]
	177 Move W8, [X0+224]
	178 Compare W8, 0
	179 JumpIfNotEqual {181}
	180 Call 0x1B6F8F8
	181 Move X0, X20
	182 Move X1, X31
	183 Move X2, X31
	184 Call Object.op_Inequality, X0, X1
	185 Move S8, W31
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {219}
	190 Move X0, [X19+192]
	191 Compare X0, 0
	192 JumpIfEqual {260}
	193 Move X8, 0x22B5000
	194 Move X8, [X8+392]
	195 Move X1, [X8]
	196 Call 0x2090DE8, X0
	197 Move X8, [X22]
	198 Move X19, X0
	199 Move W9, [X8+224]
	200 Compare W9, 0
	201 JumpIfNotEqual {204}
	202 Move X0, X8
	203 Call 0x1B6F8F8
	204 Move X0, X19
	205 Move X1, X31
	206 Move X2, X31
	207 Call Object.op_Inequality, X0, X1
	208 Move TEMP, X0
	209 And TEMP, TEMP, 1
	210 Compare TEMP, 1
	211 JumpIfNotEqual {219}
	212 Compare X19, 0
	213 JumpIfEqual {260}
	214 Move X0, X19
	215 Move X1, X31
	216 Call InventoryBag.GetFilledAmount, X0
	217 Move V8, V0
	218 Move W19, 1
	219 Move W19, W31
	220 Move X20, 0x22B5000
	221 Move X20, [X20+408]
	222 Move X0, [X20]
	223 Move W8, [X0+224]
	224 Compare W8, 0
	225 JumpIfNotEqual {227}
	226 Call 0x1B6F8F8
	227 Move X21, 0x258A000
	228 Move W8, [X21+1103]
	229 Compare W8, 0
	230 JumpIfNotEqual {236}
	231 Move X0, 0x22B5000
	232 Move X0, [X0+408]
	233 Call 0x1B6F7F0
	234 Move W8, 1
	235 Move [X21+1103], W8
	236 Move X0, [X20]
	237 Move W8, [X0+224]
	238 Compare W8, 0
	239 JumpIfNotEqual {242}
	240 Call 0x1B6F8F8
	241 Move X0, [X20]
	242 Move X8, [X0+184]
	243 Move X0, [X8]
	244 Compare X0, 0
	245 JumpIfEqual {260}
	246 Move W1, W19
	247 Move V0, V8
	248 Move X2, X31
	249 Call PlayerController.UpdateBackpack, X0, X1, V0
	250 Move X20, [X31+64]
	251 Move X19, [X31+72]
	252 Move X22, [X31+48]
	253 Move X21, [X31+56]
	254 Move X24, [X31+32]
	255 Move X23, [X31+40]
	256 Move X30, [X31+24]
	257 Move V8, [X31+16]
	258 Add X31, X31, 80
	259 Return 
	260 Call 0x1B6FA1C

Method: System.Void HandleItemGrabChanged()

Disassembly:
	0x01C9B8BC ADRP X0, 0x22B2000
	0x01C9B8C0 LDR X0, [X0 + 0x490]
	0x01C9B8C4 BL 0x1B6E804
	0x01C9B8C8 BL 0x1B6EA0C
	0x01C9B8CC MOV X19, X0
	0x01C9B8D0 ADRP X0, 0x22B3000
	0x01C9B8D4 LDR X0, [X0 + 0x230]
	0x01C9B8D8 BL 0x1B6E804
	0x01C9B8DC MOV X1, X0
	0x01C9B8E0 MOV X0, X19
	0x01C9B8E4 MOV X2, X31
	0x01C9B8E8 BL 0x31E7550
	0x01C9B8EC ADRP X0, 0x22B3000
	0x01C9B8F0 LDR X0, [X0 + 0x238]
	0x01C9B8F4 BL 0x1B6E804
	0x01C9B8F8 MOV X1, X0
	0x01C9B8FC MOV X0, X19
	0x01C9B900 BL 0x1B6E8E8
	0x01C9B904 STP X30, X19, [X31 - 0x10]!
	0x01C9B908 LDR X8, [X0 + 0x50]
	0x01C9B90C CBZ X8, 0x1C9B91C
	0x01C9B910 STR W1, [X8]
	0x01C9B914 LDP X30, X19, [X31], #0x10
	0x01C9B918 RET
	0x01C9B91C ADRP X0, 0x22B2000
	0x01C9B920 LDR X0, [X0 + 0x490]
	0x01C9B924 BL 0x1B6E804
	0x01C9B928 BL 0x1B6EA0C
	0x01C9B92C MOV X19, X0
	0x01C9B930 ADRP X0, 0x22B3000
	0x01C9B934 LDR X0, [X0 + 0x230]
	0x01C9B938 BL 0x1B6E804
	0x01C9B93C MOV X1, X0
	0x01C9B940 MOV X0, X19
	0x01C9B944 MOV X2, X31
	0x01C9B948 BL 0x31E7550
	0x01C9B94C ADRP X0, 0x22B3000
	0x01C9B950 LDR X0, [X0 + 0x240]
	0x01C9B954 BL 0x1B6E804
	0x01C9B958 MOV X1, X0
	0x01C9B95C MOV X0, X19
	0x01C9B960 BL 0x1B6E8E8
	0x01C9B964 STP X30, X19, [X31 - 0x10]!
	0x01C9B968 LDR X19, [X0 + 0x88]
	0x01C9B96C BL 0x1C9B8A4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, X0
	008 Move X0, [X0+192]
	009 Compare X0, 0
	010 JumpIfEqual {59}
	011 Call GrabbableItem.get_attachedAnchorId, X0
	012 Move X8, [X19+64]
	013 Move X20, X0
	014 Compare X8, 0
	015 JumpIfEqual {20}
	016 Move X8, [X8+32]
	017 Compare X8, 0
	018 JumpIfEqual {20}
	019 Move W21, [X8]
	020 Move W21, W31
	021 Move X23, 0x2589000
	022 Move W8, [X23+1102]
	023 Move W22, [X19+104]
	024 Compare W8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, 0x22B4000
	027 Move X0, [X0+488]
	028 Call 0x1B6F7F0
	029 Move W8, 1
	030 Move [X23+1102], W8
	031 Move X8, 0x22B4000
	032 Move X8, [X8+488]
	033 Move X0, [X8]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1B6F8F8
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X8, X20
	040 ShiftRight X8, 32
	041 And X8, X8, 0x7FFFFFFF
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Move X23, [X31+56]
	049 Return 
	050 Move X0, X19
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Move X23, [X31+56]
	057 Call AttachedItemAnchor.RPC_UnattachItem, X0
	058 Return 
	059 Call 0x1B6FA1C

Method: System.Void HandleItemDespawned(Fusion.NetworkRunner runner)

Disassembly:
	0x01C9B974 CMP W0, 0x0
	0x01C9B978 CSET W1, GT
	0x01C9B97C MOV X0, X19
	0x01C9B980 MOV X2, X31
	0x01C9B984 LDP X30, X19, [X31], #0x10
	0x01C9B988 B 0x3A9D9A8
	0x01C9B98C BL 0x1B6EA1C
	0x01C9B990 SUB X31, X31, 0xD0
	0x01C9B994 STP D13, D12, [X31 + 0x50]
	0x01C9B998 STP D11, D10, [X31 + 0x60]
	0x01C9B99C STP D9, D8, [X31 + 0x70]
	0x01C9B9A0 STR X30, [X31 + 0x80]
	0x01C9B9A4 STP X26, X25, [X31 + 0x90]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {21}
	005 Move X19, X0
	006 Move X0, X1
	007 Move X1, X31
	008 Call NetworkRunner.get_IsRunning, X0
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {18}
	013 Move X0, X19
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Call AttachedItemAnchor.RPC_UnattachItem, X0
	017 Return 
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return 
	021 Call 0x1B6FA1C

Method: System.Void UpdatedItemMass()

Disassembly:
	0x01C9B9A8 STP X24, X23, [X31 + 0xA0]
	0x01C9B9AC STP X22, X21, [X31 + 0xB0]
	0x01C9B9B0 STP X20, X19, [X31 + 0xC0]
	0x01C9B9B4 ADRP X24, 0x2588000
	0x01C9B9B8 LDRB W8, [X24 + 0x3F8]
	0x01C9B9BC MOV X20, X4
	0x01C9B9C0 MOV V8.16B, V5.16B
	0x01C9B9C4 MOV V9.16B, V4.16B
	0x01C9B9C8 MOV V10.16B, V3.16B
	0x01C9B9CC MOV X22, X3
	0x01C9B9D0 MOV X23, X2
	0x01C9B9D4 MOV V11.16B, V2.16B
	0x01C9B9D8 MOV V12.16B, V1.16B
	0x01C9B9DC MOV V13.16B, V0.16B
	0x01C9B9E0 MOV W21, W1
	0x01C9B9E4 MOV X19, X0
	0x01C9B9E8 TBNZ X8, 0x0, 0x1C9BA24
	0x01C9B9EC ADRP X0, 0x22B3000
	0x01C9B9F0 LDR X0, [X0 + 0x1C0]
	0x01C9B9F4 BL 0x1B6E7F0
	0x01C9B9F8 ADRP X0, 0x22B3000
	0x01C9B9FC LDR X0, [X0 + 0x248]
	0x01C9BA00 BL 0x1B6E7F0
	0x01C9BA04 ADRP X0, 0x22B3000
	0x01C9BA08 LDR X0, [X0 + 0x250]
	0x01C9BA0C BL 0x1B6E7F0
	0x01C9BA10 ADRP X0, 0x22B3000
	0x01C9BA14 LDR X0, [X0 + 0x258]
	0x01C9BA18 BL 0x1B6E7F0
	0x01C9BA1C MOVZ W8, 0x1
	0x01C9BA20 STRB W8, [X24 + 0x3F8]
	0x01C9BA24 LDRB W8, [X19 + 0x58]
	0x01C9BA28 CBZ W8, 0x1C9BB70
	0x01C9BA2C STRB W31, [X19 + 0x58]
	0x01C9BA30 LDR X0, [X19 + 0x40]
	0x01C9BA34 CBZ X0, 0x1C9BBAC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2589000
	006 Move X20, 0x22B3000
	007 Move W8, [X21+1005]
	008 Move X20, [X20+1144]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22B3000
	015 Move X0, [X0+1144]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X21+1005], W8
	019 Move X0, [X20]
	020 Move X20, [X19+192]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1B6F8F8
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Inequality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {46}
	033 Move X8, [X19+160]
	034 Compare X8, 0
	035 JumpIfEqual {46}
	036 Move X2, [X19+192]
	037 Move W1, [X19+128]
	038 Move X4, [X8+24]
	039 Move X0, [X8+64]
	040 Move X3, [X8+40]
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 CallNoReturn X4
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return 

Method: System.Void DropItemIfHolding(System.Boolean fromDeath = True)

Disassembly:
	0x01C9BA38 LDRB W8, [X0 + 0x60]
	0x01C9BA3C TBNZ X8, 0x1, 0x1C9BBAC
	0x01C9BA40 MOV X1, X31
	0x01C9BA44 BL 0x1D9E780
	0x01C9BA48 TBZ X0, 0x0, 0x1C9BBAC
	0x01C9BA4C MOV X0, X19
	0x01C9BA50 BL 0x1C9B8A4
	0x01C9BA54 SUB W8, W0, W21
	0x01C9BA58 BIC W1, W8, W8, 0x1F
	0x01C9BA5C MOV X0, X19
	0x01C9BA60 BL 0x1C9B904
	0x01C9BA64 MOV X0, X19
	0x01C9BA68 BL 0x1C9B8A4
	0x01C9BA6C CMP W0, 0x0
	0x01C9BA70 B.GT 0x1C9BBAC
	0x01C9BA74 LDR X0, [X19 + 0x88]
	0x01C9BA78 CBZ X0, 0x1C9BE08
	0x01C9BA7C MOV W1, W31
	0x01C9BA80 MOV X2, X31
	0x01C9BA84 BL 0x3A9D9A8
	0x01C9BA88 LDR X20, [X19 + 0x38]
	0x01C9BA8C LDR X21, [X19 + 0x80]
	0x01C9BA90 MOV X0, X19
	0x01C9BA94 MOV X1, X31
	0x01C9BA98 BL 0x3A9B084
	0x01C9BA9C CBZ X0, 0x1C9BE08
	0x01C9BAA0 MOV X1, X31
	0x01C9BAA4 BL 0x3AA7658
	0x01C9BAA8 ADRP X8, 0x22B3000
	0x01C9BAAC LDR X8, [X8 + 0x248]
	0x01C9BAB0 ADD X0, X31, 0x40
	0x01C9BAB4 STP X31, X31, [X31 + 0x40]
	0x01C9BAB8 LDR X1, [X8]
	0x01C9BABC BL 0x22DC630
	0x01C9BAC0 MOV X0, X19
	0x01C9BAC4 MOV X1, X31
	0x01C9BAC8 BL 0x3A9B084
	0x01C9BACC CBZ X0, 0x1C9BE08
	0x01C9BAD0 MOV X1, X31
	0x01C9BAD4 BL 0x3AA5FBC
	0x01C9BAD8 ADRP X8, 0x22B3000
	0x01C9BADC LDR X8, [X8 + 0x250]
	0x01C9BAE0 ADD X0, X31, 0x28
	0x01C9BAE4 STP X31, X31, [X31 + 0x28]
	0x01C9BAE8 STR W31, [X31 + 0x38]
	0x01C9BAEC LDR X1, [X8]
	0x01C9BAF0 BL 0x22D82D0
	0x01C9BAF4 CBZ X20, 0x1C9BE08
	0x01C9BAF8 LDUR V0, [X31 + 0x28]
	0x01C9BAFC LDR W8, [X31 + 0x38]
	0x01C9BB00 LDP X2, X3, [X31 + 0x40]
	0x01C9BB04 ADD X4, X31, 0x10
	0x01C9BB08 MOV X0, X20
	0x01C9BB0C MOV X1, X21
	0x01C9BB10 MOV X5, X31
	0x01C9BB14 MOV X6, X31
	0x01C9BB18 MOV W7, W31
	0x01C9BB1C STR V0, [X31 + 0x1]
	0x01C9BB20 STR W8, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2589000
	007 Move X21, 0x22B3000
	008 Move W8, [X22+1006]
	009 Move X21, [X21+1144]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x22B3000
	017 Move X0, [X0+1144]
	018 Call 0x1B6F7F0
	019 Move W8, 1
	020 Move [X22+1006], W8
	021 Move X0, [X21]
	022 Move X21, [X19+64]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1B6F8F8
	027 Move X0, X21
	028 Move X1, X31
	029 Move X2, X31
	030 Call Object.op_Equality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {73}
	035 Move X0, [X19+64]
	036 Compare X0, 0
	037 JumpIfEqual {79}
	038 Move X1, X31
	039 Call NetworkObject.get_IsValid, X0
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {73}
	044 Move X0, X19
	045 Call AttachedItemAnchor.get_grabbedItem, X0
	046 Move [X31+8], X0
	047 Add X0, X31, 8
	048 Move X1, X31
	049 Call NetworkBehaviourId.get_IsValid, X0
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {73}
	054 Move X21, 0x2589000
	055 Move W8, [X21+1087]
	056 Compare W8, 0
	057 JumpIfNotEqual {63}
	058 Move X0, 0x22B3000
	059 Move X0, [X0+1152]
	060 Call 0x1B6F7F0
	061 Move W8, 1
	062 Move [X21+1087], W8
	063 Move X8, 0x22B3000
	064 Move X8, [X8+1152]
	065 And W1, W20, 1
	066 Move X0, X19
	067 Move X8, [X8]
	068 Move X8, [X8+184]
	069 Move S0, [X8]
	070 Move S1, [X8+4]
	071 Move V2, [X8+8]
	072 Call AttachedItemAnchor.DropWithThrowVelocity, X0, X1, X2
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X30, [X31+48]
	078 Return 
	079 Call 0x1B6FA1C

Method: System.Void RepositionItemIfHolding()

Disassembly:
	0x01C9BD9C ADD X9, X25, W8, SXTW
	0x01C9BDA0 ADD X0, X25, W21, SXTW
	0x01C9BDA4 MOV X1, X20
	0x01C9BDA8 MOV X2, X31
	0x01C9BDAC STP S10, S9, [X9]
	0x01C9BDB0 STR S8, [X9 + 0x8]
	0x01C9BDB4 BL 0x1D816C4
	0x01C9BDB8 CBZ X24, 0x1C9BE08
	0x01C9BDBC ADD W8, W0, 0x3
	0x01C9BDC0 AND W8, W8, 0x1FFFFFFC
	0x01C9BDC4 ADD W8, W8, W21
	0x01C9BDC8 UBFM W8, W8, 0x1D, 0x1C
	0x01C9BDCC STR W8, [X24 + 0xC]
	0x01C9BDD0 LDR X0, [X19 + 0x38]
	0x01C9BDD4 CBZ X0, 0x1C9BE08
	0x01C9BDD8 MOV X1, X24
	0x01C9BDDC LDP X20, X19, [X31 + 0xC0]
	0x01C9BDE0 LDP X22, X21, [X31 + 0xB0]
	0x01C9BDE4 LDP X24, X23, [X31 + 0xA0]
	0x01C9BDE8 LDP X26, X25, [X31 + 0x90]
	0x01C9BDEC LDR X30, [X31 + 0x80]
	0x01C9BDF0 LDP D9, D8, [X31 + 0x70]
	0x01C9BDF4 LDP D11, D10, [X31 + 0x60]
	0x01C9BDF8 LDP D13, D12, [X31 + 0x50]
	0x01C9BDFC MOV X2, X31
	0x01C9BE00 ADD X31, X31, 0xD0
	0x01C9BE04 B 0x1D8A710
	0x01C9BE08 BL 0x1B6EA1C
	0x01C9BE0C STP D13, D12, [X31 - 0x70]!
	0x01C9BE10 STP D11, D10, [X31 + 0x10]
	0x01C9BE14 STP D9, D8, [X31 + 0x20]
	0x01C9BE18 STP X30, X25, [X31 + 0x30]
	0x01C9BE1C STP X24, X23, [X31 + 0x40]
	0x01C9BE20 STP X22, X21, [X31 + 0x50]
	0x01C9BE24 STP X20, X19, [X31 + 0x60]
	0x01C9BE28 ADRP X23, 0x2588000
	0x01C9BE2C ADRP X25, 0x22B2000
	0x01C9BE30 LDRB W8, [X23 + 0x3F9]
	0x01C9BE34 LDR X25, [X25 + 0x478]
	0x01C9BE38 MOV X19, X4
	0x01C9BE3C MOV V8.16B, V5.16B
	0x01C9BE40 MOV V9.16B, V4.16B
	0x01C9BE44 MOV V10.16B, V3.16B
	0x01C9BE48 MOV X22, X3
	0x01C9BE4C MOV X24, X2
	0x01C9BE50 MOV V11.16B, V2.16B
	0x01C9BE54 MOV V12.16B, V1.16B
	0x01C9BE58 MOV V13.16B, V0.16B
	0x01C9BE5C MOV W20, W1
	0x01C9BE60 MOV X21, X0
	0x01C9BE64 TBNZ X8, 0x0, 0x1C9BE7C
	0x01C9BE68 ADRP X0, 0x22B2000
	0x01C9BE6C LDR X0, [X0 + 0x478]
	0x01C9BE70 BL 0x1B6E7F0
	0x01C9BE74 MOVZ W8, 0x1
	0x01C9BE78 STRB W8, [X23 + 0x3F9]
	0x01C9BE7C LDR X0, [X25]
	0x01C9BE80 LDR W8, [X0 + 0xE0]
	0x01C9BE84 CBNZ W8, 0x1C9BE8C
	0x01C9BE88 BL 0x1B6E8F8
	0x01C9BE8C MOV X0, X24
	0x01C9BE90 MOV X1, X31
	0x01C9BE94 MOV X2, X31
	0x01C9BE98 BL 0x3A9D6EC
	0x01C9BE9C MOV X23, X31
	0x01C9BEA0 TBZ X0, 0x0, 0x1C9BEB8
	0x01C9BEA4 CBZ X24, 0x1C9BF40
	0x01C9BEA8 MOV X0, X24
	0x01C9BEAC MOV X1, X31
	0x01C9BEB0 BL 0x3AA0C88
	0x01C9BEB4 MOV X23, X0
	0x01C9BEB8 LDR X0, [X25]
	0x01C9BEBC LDR W8, [X0 + 0xE0]
	0x01C9BEC0 CBNZ W8, 0x1C9BEC8
	0x01C9BEC4 BL 0x1B6E8F8
	0x01C9BEC8 MOV X0, X22
	0x01C9BECC MOV X1, X31
	0x01C9BED0 MOV X2, X31
	0x01C9BED4 BL 0x3A9D6EC
	0x01C9BED8 MOV X3, X31
	0x01C9BEDC TBZ X0, 0x0, 0x1C9BEF4
	0x01C9BEE0 CBZ X22, 0x1C9BF40
	0x01C9BEE4 MOV X0, X22
	0x01C9BEE8 MOV X1, X31
	0x01C9BEEC BL 0x3AA0C88
	0x01C9BEF0 MOV X3, X0
	0x01C9BEF4 CBZ X21, 0x1C9BF40
	0x01C9BEF8 MOV X0, X21
	0x01C9BEFC MOV W1, W20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2589000
	007 Move X21, 0x22B3000
	008 Move W8, [X20+1007]
	009 Move X21, [X21+1144]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x22B4000
	016 Move X0, [X0+400]
	017 Call 0x1B6F7F0
	018 Move X0, 0x22B3000
	019 Move X0, [X0+1144]
	020 Call 0x1B6F7F0
	021 Move W8, 1
	022 Move [X20+1007], W8
	023 Move X0, [X21]
	024 Move [X31], X31
	025 Move X20, [X19+64]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1B6F8F8
	030 Move X0, X20
	031 Move X1, X31
	032 Move X2, X31
	033 Call Object.op_Equality, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {120}
	038 Move X0, [X19+64]
	039 Compare X0, 0
	040 JumpIfEqual {126}
	041 Move X1, X31
	042 Call NetworkObject.get_IsValid, X0
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {120}
	047 Move X0, X19
	048 Call AttachedItemAnchor.get_grabbedItem, X0
	049 Move [X31+8], X0
	050 Add X0, X31, 8
	051 Move X1, X31
	052 Call NetworkBehaviourId.get_IsValid, X0
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {120}
	057 Move X20, [X19+56]
	058 Move X0, X19
	059 Call AttachedItemAnchor.get_grabbedItem, X0
	060 Compare X20, 0
	061 JumpIfEqual {126}
	062 Move X8, 0x22B4000
	063 Move X8, [X8+400]
	064 Move X1, X0
	065 Add X2, X31, 0
	066 Move X0, X20
	067 Move X3, [X8]
	068 Call 0x2114594, X0, X1, X2
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {120}
	073 Move X0, [X21]
	074 Move X19, [X31]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1B6F8F8
	079 Move X0, X19
	080 Move X1, X31
	081 Move X2, X31
	082 Call Object.op_Inequality, X0, X1
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {120}
	087 Move X8, [X31]
	088 Compare X8, 0
	089 JumpIfEqual {126}
	090 Move X0, [X21]
	091 Move X19, [X8+64]
	092 Move W9, [X0+224]
	093 Compare W9, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1B6F8F8
	096 Move X0, X19
	097 Move X1, X31
	098 Move X2, X31
	099 Call Object.op_Inequality, X0, X1
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfNotEqual {120}
	104 Move X8, [X31]
	105 Compare X8, 0
	106 JumpIfEqual {126}
	107 Move X0, [X8+64]
	108 Compare X0, 0
	109 JumpIfEqual {126}
	110 Move X1, X31
	111 Call NetworkObject.get_IsValid, X0
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {120}
	116 Move X0, [X31]
	117 Compare X0, 0
	118 JumpIfEqual {126}
	119 Call GrabbableItem.SnapToFollow, X0
	120 Move X20, [X31+32]
	121 Move X19, [X31+40]
	122 Move X30, [X31+16]
	123 Move X21, [X31+24]
	124 Add X31, X31, 48
	125 Return 
	126 Call 0x1B6FA1C

Method: System.Void UnattachItem()

Disassembly:
	0x01C9B970 CBZ X19, 0x1C9B98C

ISIL:
	001 Call AttachedItemAnchor.RPC_UnattachItem, X0
	002 Return 

Method: System.Void DropWithThrowVelocity(UnityEngine.Vector3 throwVelocity, System.Boolean fromDeath = False)

Disassembly:
	0x01C9BB24 STR X31, [X31]
	0x01C9BB28 BL 0x1D98EB8
	0x01C9BB2C LDR X0, [X19 + 0x38]
	0x01C9BB30 CBZ X0, 0x1C9BE08
	0x01C9BB34 LDR X1, [X19 + 0x40]
	0x01C9BB38 MOV X2, X31
	0x01C9BB3C BL 0x1D8C548
	0x01C9BB40 LDR X20, [X19 + 0x90]
	0x01C9BB44 MOV X0, X19
	0x01C9BB48 MOV X1, X31
	0x01C9BB4C BL 0x3A9B084
	0x01C9BB50 CBZ X0, 0x1C9BE08
	0x01C9BB54 MOV X1, X31
	0x01C9BB58 BL 0x3AA7658
	0x01C9BB5C FMOV S3, 1
	0x01C9BB60 MOV X0, X20
	0x01C9BB64 MOV X1, X31
	0x01C9BB68 BL 0x1CC181C
	0x01C9BB6C B 0x1C9BBAC
	0x01C9BB70 ADRP X25, 0x22B3000
	0x01C9BB74 LDR X25, [X25 + 0x1C0]
	0x01C9BB78 LDR X0, [X25]
	0x01C9BB7C LDR W8, [X0 + 0xE0]
	0x01C9BB80 CBNZ W8, 0x1C9BB88
	0x01C9BB84 BL 0x1B6E8F8
	0x01C9BB88 MOV X0, X19
	0x01C9BB8C MOV X1, X31
	0x01C9BB90 BL 0x1D697C8
	0x01C9BB94 LDR X0, [X19 + 0x38]
	0x01C9BB98 CBZ X0, 0x1C9BE08
	0x01C9BB9C MOV X1, X31
	0x01C9BBA0 BL 0x1D87040
	0x01C9BBA4 CMP W0, 0x4
	0x01C9BBA8 B.NE 0x1C9BBD4
	0x01C9BBAC LDP X20, X19, [X31 + 0xC0]
	0x01C9BBB0 LDP X22, X21, [X31 + 0xB0]
	0x01C9BBB4 LDP X24, X23, [X31 + 0xA0]
	0x01C9BBB8 LDP X26, X25, [X31 + 0x90]
	0x01C9BBBC LDR X30, [X31 + 0x80]
	0x01C9BBC0 LDP D9, D8, [X31 + 0x70]
	0x01C9BBC4 LDP D11, D10, [X31 + 0x60]
	0x01C9BBC8 LDP D13, D12, [X31 + 0x50]
	0x01C9BBCC ADD X31, X31, 0xD0
	0x01C9BBD0 RET
	0x01C9BBD4 LDR X0, [X19 + 0x40]
	0x01C9BBD8 CBZ X0, 0x1C9BE08
	0x01C9BBDC MOV X1, X31
	0x01C9BBE0 BL 0x1D9F538
	0x01C9BBE4 ANDS W31, W0, 0x7
	0x01C9BBE8 B.EQ 0x1C9BCA0
	0x01C9BBEC TBNZ X0, 0x0, 0x1C9BA30
	0x01C9BBF0 MOV X0, X23
	0x01C9BBF4 MOV X1, X31
	0x01C9BBF8 BL 0x1D816D4
	0x01C9BBFC MOV W24, W0
	0x01C9BC00 MOV X0, X22
	0x01C9BC04 MOV X1, X31
	0x01C9BC08 BL 0x1D816D4
	0x01C9BC0C ADD W8, W0, 0x3
	0x01C9BC10 MOV X0, X20
	0x01C9BC14 MOV X1, X31
	0x01C9BC18 AND W26, W8, 0xFFFFFFFC
	0x01C9BC1C BL 0x1D816D4
	0x01C9BC20 ADD W9, W24, 0x27
	0x01C9BC24 ADD W8, W0, 0x3
	0x01C9BC28 AND W9, W9, 0xFFFFFFFC
	0x01C9BC2C AND W8, W8, 0xFFFFFFFC
	0x01C9BC30 ADD W9, W9, W26
	0x01C9BC34 ADD W24, W9, W8
	0x01C9BC38 CMP W24, 0x201
	0x01C9BC3C B.GE 0x1C9BCF4
	0x01C9BC40 LDR X8, [X19 + 0x38]
	0x01C9BC44 CBZ X8, 0x1C9BE08
	0x01C9BC48 LDR X0, [X8 + 0x50]
	0x01C9BC4C CBZ X0, 0x1C9BE08
	0x01C9BC50 MOV X1, X31
	0x01C9BC54 BL 0x1DBEFE4
	0x01C9BC58 TBZ X0, 0x0, 0x1C9BBAC
	0x01C9BC5C LDR X8, [X19 + 0x38]
	0x01C9BC60 CBZ X8, 0x1C9BE08
	0x01C9BC64 LDR X0, [X8 + 0x50]
	0x01C9BC68 MOV W1, W24
	0x01C9BC6C MOV X2, X31
	0x01C9BC70 BL 0x1DD601C
	0x01C9BC74 MOV X24, X0
	0x01C9BC78 MOVZ W0, 0x1
	0x01C9BC7C MOV X1, X31
	0x01C9BC80 BL 0x1D29EBC
	0x01C9BC84 LDR X8, [X19 + 0x40]
	0x01C9BC88 CBZ X8, 0x1C9BE08
	0x01C9BC8C LDR X8, [X8 + 0x20]
	0x01C9BC90 ADD X25, X24, 0x1C
	0x01C9BC94 CBZ X8, 0x1C9BD40
	0x01C9BC98 LDR W0, [X8]
	0x01C9BC9C B 0x1C9BD44
	0x01C9BCA0 LDR X0, [X25]
	0x01C9BCA4 LDR X19, [X19 + 0x40]
	0x01C9BCA8 LDR W8, [X0 + 0xE0]
	0x01C9BCAC CBNZ W8, 0x1C9BCB4
	0x01C9BCB0 BL 0x1B6E8F8
	0x01C9BCB4 ADRP X8, 0x22B3000
	0x01C9BCB8 LDR X8, [X8 + 0x258]
	0x01C9BCBC MOV X1, X19
	0x01C9BCC0 LDP X20, X19, [X31 + 0xC0]
	0x01C9BCC4 LDP X22, X21, [X31 + 0xB0]
	0x01C9BCC8 LDR X0, [X8]
	0x01C9BCCC LDP X24, X23, [X31 + 0xA0]
	0x01C9BCD0 LDP X26, X25, [X31 + 0x90]
	0x01C9BCD4 LDR X30, [X31 + 0x80]
	0x01C9BCD8 LDP D9, D8, [X31 + 0x70]
	0x01C9BCDC LDP D11, D10, [X31 + 0x60]
	0x01C9BCE0 LDP D13, D12, [X31 + 0x50]
	0x01C9BCE4 MOVZ W2, 0x7
	0x01C9BCE8 MOV X3, X31
	0x01C9BCEC ADD X31, X31, 0xD0
	0x01C9BCF0 B 0x1D69640
	0x01C9BCF4 LDR X0, [X25]
	0x01C9BCF8 LDR W8, [X0 + 0xE0]
	0x01C9BCFC CBNZ W8, 0x1C9BD04
	0x01C9BD00 BL 0x1B6E8F8
	0x01C9BD04 ADRP X8, 0x22B3000
	0x01C9BD08 LDR X8, [X8 + 0x258]
	0x01C9BD0C MOV W1, W24
	0x01C9BD10 LDP X20, X19, [X31 + 0xC0]
	0x01C9BD14 LDP X22, X21, [X31 + 0xB0]
	0x01C9BD18 LDR X0, [X8]
	0x01C9BD1C LDP X24, X23, [X31 + 0xA0]
	0x01C9BD20 LDP X26, X25, [X31 + 0x90]
	0x01C9BD24 LDR X30, [X31 + 0x80]
	0x01C9BD28 LDP D9, D8, [X31 + 0x70]
	0x01C9BD2C LDP D11, D10, [X31 + 0x60]
	0x01C9BD30 LDP D13, D12, [X31 + 0x50]
	0x01C9BD34 MOV X2, X31
	0x01C9BD38 ADD X31, X31, 0xD0
	0x01C9BD3C B 0x1D69494
	0x01C9BD40 MOV X0, X31
	0x01C9BD44 LDR W1, [X19 + 0x68]
	0x01C9BD48 MOVZ W2, 0x1
	0x01C9BD4C MOV X3, X31
	0x01C9BD50 BL 0x1DA8258
	0x01C9BD54 STUR X0, [X24 + 0x1C]
	0x01C9BD58 ADD X0, X24, 0x34
	0x01C9BD5C MOV X1, X23
	0x01C9BD60 MOV X2, X31
	0x01C9BD64 STR W21, [X24 + 0x24]
	0x01C9BD68 STP S13, S12, [X24 + 0x28]
	0x01C9BD6C STR S11, [X24 + 0x30]
	0x01C9BD70 BL 0x1D816C4
	0x01C9BD74 ADD W8, W0, 0x1B
	0x01C9BD78 AND W21, W8, 0xFFFFFFFC
	0x01C9BD7C ADD X0, X25, W21, SXTW
	0x01C9BD80 MOV X1, X22
	0x01C9BD84 MOV X2, X31
	0x01C9BD88 BL 0x1D816C4
	0x01C9BD8C ADD W8, W0, 0x3
	0x01C9BD90 AND W8, W8, 0xFFFFFFFC
	0x01C9BD94 ADD W8, W8, W21
	0x01C9BD98 ADD W21, W8, 0xC

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], D15
	003 Move [X31+72], D14
	004 Move [X31+80], D13
	005 Move [X31+88], D12
	006 Move [X31+96], D11
	007 Move [X31+104], D10
	008 Move [X31+112], D9
	009 Move [X31+120], D8
	010 Move [X31+128], X30
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X21, 0x2589000
	015 Move W8, [X21+1008]
	016 Move W19, W1
	017 Move V8, V2
	018 Move V9, V1
	019 Move V15, V0
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x22B3000
	026 Move X0, [X0+1144]
	027 Call 0x1B6F7F0
	028 Move W8, 1
	029 Move [X21+1008], W8
	030 Move X0, X20
	031 Move [X31+48], W31
	032 Move [X31+40], X31
	033 Call AttachedItemAnchor.get_grabbedItem, X0
	034 Move [X31+56], X0
	035 Add X0, X31, 56
	036 Move X1, X31
	037 Call NetworkBehaviourId.get_IsValid, X0
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {183}
	042 Move X0, X20
	043 Move X1, X31
	044 Call Component.get_transform, X0
	045 Compare X0, 0
	046 JumpIfEqual {197}
	047 Move X1, X31
	048 Call Transform.get_position, X0
	049 Move X0, X20
	050 Move X1, X31
	051 Move V11, V0
	052 Move [X31+36], S1
	053 Move V12, V2
	054 Call Component.get_transform, X0
	055 Compare X0, 0
	056 JumpIfEqual {197}
	057 Move X1, X31
	058 Call Transform.get_rotation, X0
	059 Move X21, 0x2589000
	060 Move W8, [X21+1087]
	061 Move V13, V0
	062 Move V14, V1
	063 Move V10, V2
	064 Move [X31+32], S3
	065 Move [X31+40], S15
	066 Move [X31+48], S9
	067 Move [X31+48], S8
	068 Compare W8, 0
	069 JumpIfNotEqual {75}
	070 Move X0, 0x22B3000
	071 Move X0, [X0+1152]
	072 Call 0x1B6F7F0
	073 Move W8, 1
	074 Move [X21+1087], W8
	075 Move X8, 0x22B3000
	076 Move X8, [X8+1152]
	077 Move X9, 0x22B3000
	078 Move X8, [X8]
	079 Move X9, [X9+1144]
	080 Move X21, [X20+192]
	081 Move X8, [X8+184]
	082 Move X0, [X9]
	083 Move S15, [X8]
	084 Move S8, [X8+4]
	085 Move W9, [X0+224]
	086 Move V9, [X8+8]
	087 Compare W9, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1B6F8F8
	090 Move X0, X21
	091 Move X1, X31
	092 Move X2, X31
	093 Call Object.op_Inequality, X0, X1
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {163}
	098 Move X8, [X20+192]
	099 Compare X8, 0
	100 JumpIfEqual {197}
	101 Move X0, [X8+304]
	102 Compare X0, 0
	103 JumpIfEqual {197}
	104 Move X1, X31
	105 Call Rigidbody.get_position, X0
	106 Move X8, [X20+192]
	107 Compare X8, 0
	108 JumpIfEqual {197}
	109 Move X0, [X8+304]
	110 Compare X0, 0
	111 JumpIfEqual {197}
	112 Move X1, X31
	113 Move V15, V0
	114 Move V11, V1
	115 Move V12, V2
	116 Call Rigidbody.get_rotation, X0
	117 Move X8, [X20+192]
	118 Compare X8, 0
	119 JumpIfEqual {197}
	120 Move X0, [X8+304]
	121 Move [X31+32], S3
	122 Compare X0, 0
	123 JumpIfEqual {197}
	124 Move V8, [X31+40]
	125 Move V9, [X31+48]
	126 Move X1, X31
	127 Move V13, V0
	128 Move V14, V1
	129 Move V10, V2
	130 Call Rigidbody.get_velocity, X0
	131 Add S2, S9, S2
	132 Move V0.S[1], V1.S[0]
	133 Add V0, V8, V0
	134 Move [X31+40], D0
	135 Move [X31+48], S2
	136 Move X8, [X20+192]
	137 Compare X8, 0
	138 JumpIfEqual {197}
	139 Move X0, [X8+304]
	140 Move [X31+36], S11
	141 Compare X0, 0
	142 JumpIfEqual {197}
	143 Move X1, X31
	144 Move V11, V15
	145 Call Rigidbody.get_angularVelocity, X0
	146 Move X8, [X20+192]
	147 Compare X8, 0
	148 JumpIfEqual {197}
	149 Move X0, [X8+304]
	150 Compare X0, 0
	151 JumpIfEqual {197}
	152 Move X1, X31
	153 Move V15, V0
	154 Move V8, V1
	155 Move V9, V2
	156 Call Rigidbody.get_mass, X0
	157 Add X0, X31, 40
	158 Move S1, 25
	159 Move S2, 10
	160 Move S3, 10
	161 Move X1, X31
	162 Call Player.CalculateClampedVelocity, X0, V0, V1, V2, V3
	163 Move X0, X20
	164 Call AttachedItemAnchor.get_grabbedItem, X0
	165 Move V0, [X31+48]
	166 Move X8, [X31+40]
	167 Move S6, [X31+32]
	168 Move S1, [X31+36]
	169 Move X1, X0
	170 Move [X31+8], S0
	171 And W2, W19, 1
	172 Move X0, X20
	173 Move V0, V11
	174 Move V2, V12
	175 Move V3, V13
	176 Move V4, V14
	177 Move V5, V10
	178 Move [X31+20], S8
	179 Move [X31+28], S9
	180 Move [X31+16], S15
	181 Move [X31], X8
	182 Call AttachedItemAnchor.RPC_DropItem, X0, X1, X2, X3, X4, X5, X6, X7
	183 Move X20, [X31+144]
	184 Move X19, [X31+152]
	185 Move X30, [X31+128]
	186 Move X21, [X31+136]
	187 Move D9, [X31+112]
	188 Move D8, [X31+120]
	189 Move D11, [X31+96]
	190 Move D10, [X31+104]
	191 Move D13, [X31+80]
	192 Move D12, [X31+88]
	193 Move D15, [X31+64]
	194 Move D14, [X31+72]
	195 Add X31, X31, 160
	196 Return 
	197 Call 0x1B6FA1C

Method: System.Void .ctor()

Disassembly:
	0x01C9C004 AND W8, W8, 0xFFFFFFFC
	0x01C9C008 ADD W8, W8, W21
	0x01C9C00C ADD X9, X23, W8, SXTW
	0x01C9C010 LDP S11, S12, [X9]

ISIL:
	001 Move W8, 1
	002 Move X1, X31
	003 Move [X0+132], W8
	004 Call NetworkBehaviour..ctor, X0
	005 Return 

Method: System.Void CopyBackingFieldsToState(System.Boolean param_0)

Disassembly:
	0x01C9C014 LDR V13, [X9 + 0x8]
	0x01C9C018 ADD W8, W8, 0xC

ISIL:
	001 Move X1, [X0+136]
	002 Call AttachedItemAnchor.set_grabbedItem, X0, X1
	003 Return 

Method: System.Void CopyStateToBackingFields()

Disassembly:
	0x01C9C01C ADD X0, X23, W8, SXTW
	0x01C9C020 ADD X1, X31, 0x8
	0x01C9C024 MOV X2, X31
	0x01C9C028 BL 0x1D816CC
	0x01C9C02C CBZ X19, 0x1C9C0BC
	0x01C9C030 ADRP X9, 0x22B2000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call AttachedItemAnchor.get_grabbedItem, X0
	005 Move [X19+136], X0
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Return 

Method: System.Void RPC_TryGrabItem@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01C9C034 LDR X9, [X9 + 0x260]
	0x01C9C038 STRB W22, [X19 + 0x58]
	0x01C9C03C LDR X8, [X19]
	0x01C9C040 LDR X1, [X9]
	0x01C9C044 LDRB W10, [X8 + 0x130]
	0x01C9C048 LDRB W9, [X1 + 0x130]
	0x01C9C04C CMP W10, W9
	0x01C9C050 B.CC 0x1C9C0B4
	0x01C9C054 LDR X8, [X8 + 0xC8]
	0x01C9C058 ADD X8, X8, X9, 0x3, LSL
	0x01C9C05C LDUR X8, [X8 - 0x8]
	0x01C9C060 CMP X8, X1
	0x01C9C064 B.NE 0x1C9C0B4
	0x01C9C068 LDP X3, X2, [X31 + 0x10]
	0x01C9C06C LDR X4, [X31 + 0x8]
	0x01C9C070 MOV X0, X19
	0x01C9C074 MOV W1, W20
	0x01C9C078 MOV V0.16B, V8.16B
	0x01C9C07C MOV V1.16B, V9.16B
	0x01C9C080 MOV V2.16B, V10.16B
	0x01C9C084 MOV V3.16B, V11.16B
	0x01C9C088 MOV V4.16B, V12.16B
	0x01C9C08C MOV V5.16B, V13.16B
	0x01C9C090 BL 0x1C9B990
	0x01C9C094 LDP X20, X19, [X31 + 0x70]
	0x01C9C098 LDP X22, X21, [X31 + 0x60]
	0x01C9C09C LDP X30, X23, [X31 + 0x50]
	0x01C9C0A0 LDP D9, D8, [X31 + 0x40]
	0x01C9C0A4 LDP D11, D10, [X31 + 0x30]
	0x01C9C0A8 LDP D13, D12, [X31 + 0x20]
	0x01C9C0AC ADD X31, X31, 0x80
	0x01C9C0B0 RET
	0x01C9C0B4 MOV X0, X19
	0x01C9C0B8 BL 0x1B6ECDC
	0x01C9C0BC BL 0x1B6EA1C
	0x01C9C0C0 STP X30, X23, [X31 - 0x30]!
	0x01C9C0C4 STP X22, X21, [X31 + 0x10]
	0x01C9C0C8 STP X20, X19, [X31 + 0x20]
	0x01C9C0CC ADRP X20, 0x2587000
	0x01C9C0D0 ADRP X21, 0x22B2000
	0x01C9C0D4 LDRB W8, [X20 + 0x3FB]
	0x01C9C0D8 LDR X21, [X21 + 0x268]
	0x01C9C0DC MOV X19, X0
	0x01C9C0E0 TBNZ X8, 0x0, 0x1C9C134
	0x01C9C0E4 ADRP X0, 0x22B2000
	0x01C9C0E8 LDR X0, [X0 + 0x270]
	0x01C9C0EC BL 0x1B6E7F0
	0x01C9C0F0 ADRP X0, 0x22B2000
	0x01C9C0F4 LDR X0, [X0 + 0x170]
	0x01C9C0F8 BL 0x1B6E7F0
	0x01C9C0FC ADRP X0, 0x22B2000
	0x01C9C100 LDR X0, [X0 + 0x268]
	0x01C9C104 BL 0x1B6E7F0
	0x01C9C108 ADRP X0, 0x22B2000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x2588000
	010 Move W8, [X20+1009]
	011 Move X21, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x22B3000
	018 Move X0, [X0+416]
	019 Call 0x1B6F7F0
	020 Move W8, 1
	021 Move [X20+1009], W8
	022 Move W0, 1
	023 Move X1, X31
	024 Move W24, 1
	025 Call Assert.Check, X0
	026 Compare X19, 0
	027 JumpIfEqual {66}
	028 Move X0, [X19+56]
	029 Move X25, 0x22B3000
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 Move W22, [X21+44]
	032 Move W23, [X21+48]
	033 Move X25, [X25+416]
	034 Move X1, X21
	035 Move W2, W31
	036 Move X3, X31
	037 Call RpcInfo.FromMessage, X0, X1, X2
	038 Move [X19+88], W24
	039 Move X8, [X19]
	040 Move X1, [X25]
	041 Move W10, [X8+304]
	042 Move W9, [X1+304]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X8, [X8+200]
	045 Add X8, X8, X9
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction CSET not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, X19
	052 Move X1, X20
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X24, [X31+16]
	058 Move X23, [X31+24]
	059 NotImplemented "Instruction CSET not yet implemented."
	060 Move X30, [X31+64]
	061 Move X25, [X31+72]
	062 Call AttachedItemAnchor.RPC_TryGrabItem, X0, X1, X2, X3, X4
	063 Return 
	064 Move X0, X19
	065 Call 0x1B6FCDC
	066 Call 0x1B6FA1C

Method: System.Void RPC_DropItem@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01C9C10C LDR X0, [X0 + 0x278]
	0x01C9C110 BL 0x1B6E7F0
	0x01C9C114 ADRP X0, 0x22B2000
	0x01C9C118 LDR X0, [X0 + 0x280]
	0x01C9C11C BL 0x1B6E7F0
	0x01C9C120 ADRP X0, 0x22B2000
	0x01C9C124 LDR X0, [X0 + 0x288]
	0x01C9C128 BL 0x1B6E7F0
	0x01C9C12C MOVZ W8, 0x1
	0x01C9C130 STRB W8, [X20 + 0x3FB]
	0x01C9C134 LDR X1, [X21]
	0x01C9C138 MOV X0, X19
	0x01C9C13C BL 0x208FDE8
	0x01C9C140 STR X0, [X19 + 0xA0]
	0x01C9C144 CBZ X0, 0x1C9C2BC
	0x01C9C148 ADRP X23, 0x22B2000
	0x01C9C14C LDR X23, [X23 + 0x170]
	0x01C9C150 MOV X20, X0
	0x01C9C154 LDR X21, [X0 + 0x198]
	0x01C9C158 ADRP X22, 0x22B2000
	0x01C9C15C LDR X0, [X23]
	0x01C9C160 LDR X22, [X22 + 0x280]
	0x01C9C164 BL 0x1B6EA0C
	0x01C9C168 LDR X2, [X22]
	0x01C9C16C MOV X1, X19
	0x01C9C170 MOV X3, X31
	0x01C9C174 MOV X22, X0
	0x01C9C178 BL 0x317DB24
	0x01C9C17C MOV X0, X21
	0x01C9C180 MOV X1, X22
	0x01C9C184 MOV X2, X31
	0x01C9C188 BL 0x322A750
	0x01C9C18C LDR X1, [X23]
	0x01C9C190 CBZ X0, 0x1C9C1B4
	0x01C9C194 LDR X8, [X0]
	0x01C9C198 CMP X8, X1
	0x01C9C19C B.NE 0x1C9C21C
	0x01C9C1A0 STR X0, [X20 + 0x198]
	0x01C9C1A4 LDR X8, [X0]
	0x01C9C1A8 CMP X8, X1
	0x01C9C1AC B.EQ 0x1C9C1B8
	0x01C9C1B0 B 0x1C9C21C
	0x01C9C1B4 STR X0, [X20 + 0x198]
	0x01C9C1B8 LDR X22, [X19 + 0xA0]
	0x01C9C1BC CBZ X22, 0x1C9C2BC
	0x01C9C1C0 ADRP X21, 0x22B2000
	0x01C9C1C4 LDR X20, [X22 + 0x190]
	0x01C9C1C8 LDR X21, [X21 + 0x288]
	0x01C9C1CC MOV X0, X1
	0x01C9C1D0 BL 0x1B6EA0C
	0x01C9C1D4 LDR X2, [X21]
	0x01C9C1D8 MOV X1, X19
	0x01C9C1DC MOV X3, X31
	0x01C9C1E0 MOV X21, X0
	0x01C9C1E4 BL 0x317DB24
	0x01C9C1E8 MOV X0, X20
	0x01C9C1EC MOV X1, X21
	0x01C9C1F0 MOV X2, X31
	0x01C9C1F4 BL 0x322A750
	0x01C9C1F8 CBZ X0, 0x1C9C220
	0x01C9C1FC LDR X1, [X23]
	0x01C9C200 LDR X8, [X0]
	0x01C9C204 CMP X8, X1
	0x01C9C208 B.NE 0x1C9C21C
	0x01C9C20C STR X0, [X22 + 0x190]
	0x01C9C210 LDR X8, [X0]
	0x01C9C214 CMP X8, X1
	0x01C9C218 B.EQ 0x1C9C224
	0x01C9C21C BL 0x1B6ECDC
	0x01C9C220 STR X0, [X22 + 0x190]
	0x01C9C224 LDR X22, [X19 + 0x80]
	0x01C9C228 CBZ X22, 0x1C9C2BC
	0x01C9C22C ADRP X23, 0x22B2000
	0x01C9C230 LDR X23, [X23 + 0x270]
	0x01C9C234 ADRP X21, 0x22B2000
	0x01C9C238 LDR X20, [X22 + 0x90]
	0x01C9C23C LDR X0, [X23]
	0x01C9C240 LDR X21, [X21 + 0x278]
	0x01C9C244 BL 0x1B6EA0C
	0x01C9C248 LDR X2, [X21]
	0x01C9C24C MOV X1, X19
	0x01C9C250 MOV X3, X31
	0x01C9C254 MOV X21, X0
	0x01C9C258 BL 0x28D5998

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+48], D15
	003 Move [X31+56], D14
	004 Move [X31+64], D13
	005 Move [X31+72], D12
	006 Move [X31+80], D11
	007 Move [X31+88], D10
	008 Move [X31+96], D9
	009 Move [X31+104], D8
	010 Move [X31+112], X30
	011 Move [X31+128], X24
	012 Move [X31+136], X23
	013 Move [X31+144], X22
	014 Move [X31+152], X21
	015 Move [X31+160], X20
	016 Move [X31+168], X19
	017 Move X20, 0x2588000
	018 Move W8, [X20+1010]
	019 Move X21, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x22B3000
	026 Move X0, [X0+416]
	027 Call 0x1B6F7F0
	028 Move W8, 1
	029 Move [X20+1010], W8
	030 Move W0, 1
	031 Move X1, X31
	032 Move W22, 1
	033 Call Assert.Check, X0
	034 Compare X19, 0
	035 JumpIfEqual {110}
	036 Move V1, [X21+44]
	037 Move V0, [X21+48]
	038 Move X0, [X19+56]
	039 Move X24, 0x22B3000
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 Move [X31+120], S0
	042 Move [X31+128], S1
	043 Move V1, [X21+52]
	044 Move V0, [X21+56]
	045 Move S14, [X21+68]
	046 Move S15, [X21+72]
	047 Move S8, [X21+76]
	048 Move S9, [X21+80]
	049 Move S10, [X21+84]
	050 Move S11, [X21+88]
	051 Move [X31+40], S0
	052 Move [X31+48], S1
	053 Move S0, [X21+60]
	054 Move S13, [X21+64]
	055 Move V12, [X21+92]
	056 Move W23, [X21+96]
	057 Move X1, X21
	058 Move [X31+36], S0
	059 Move X24, [X24+416]
	060 Move W2, W31
	061 Move X3, X31
	062 Call RpcInfo.FromMessage, X0, X1, X2
	063 Move [X19+88], W22
	064 Move X8, [X19]
	065 Move X1, [X24]
	066 Move W10, [X8+304]
	067 Move W9, [X1+304]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X8, [X8+200]
	070 Add X8, X8, X9
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move S1, [X31+120]
	074 Move S0, [X31+124]
	075 Move S3, [X31+40]
	076 Move S2, [X31+44]
	077 Move V4, [X31+36]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 NotImplemented "Instruction CSET not yet implemented."
	080 Move X0, X19
	081 Move X1, X20
	082 Move V5, V13
	083 Move V6, V14
	084 Move [X31+20], S11
	085 Move [X31+28], S12
	086 Move [X31+16], S10
	087 Move [X31+4], S8
	088 Move [X31+12], S9
	089 Move [X31], S15
	090 Call AttachedItemAnchor.RPC_DropItem, X0, X1, X2, X3, X4, X5, X6, X7
	091 Move X20, [X31+160]
	092 Move X19, [X31+168]
	093 Move X22, [X31+144]
	094 Move X21, [X31+152]
	095 Move X24, [X31+128]
	096 Move X23, [X31+136]
	097 Move X30, [X31+112]
	098 Move D9, [X31+96]
	099 Move D8, [X31+104]
	100 Move D11, [X31+80]
	101 Move D10, [X31+88]
	102 Move D13, [X31+64]
	103 Move D12, [X31+72]
	104 Move D15, [X31+48]
	105 Move D14, [X31+56]
	106 Add X31, X31, 176
	107 Return 
	108 Move X0, X19
	109 Call 0x1B6FCDC
	110 Call 0x1B6FA1C

Method: System.Void RPC_UnattachItem@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01C9C25C MOV X0, X20
	0x01C9C260 MOV X1, X21
	0x01C9C264 MOV X2, X31
	0x01C9C268 BL 0x322A750
	0x01C9C26C CBZ X0, 0x1C9C2A8
	0x01C9C270 LDR X20, [X23]
	0x01C9C274 MOV X19, X0
	0x01C9C278 MOV X1, X20
	0x01C9C27C BL 0x1B6E8FC
	0x01C9C280 CBZ X0, 0x1C9C29C
	0x01C9C284 STR X0, [X22 + 0x90]
	0x01C9C288 LDR X20, [X23]
	0x01C9C28C MOV X0, X19
	0x01C9C290 MOV X1, X20
	0x01C9C294 BL 0x1B6E8FC
	0x01C9C298 CBNZ X0, 0x1C9C2AC
	0x01C9C29C MOV X0, X19
	0x01C9C2A0 MOV X1, X20
	0x01C9C2A4 BL 0x1B6ECDC
	0x01C9C2A8 STR X31, [X22 + 0x90]
	0x01C9C2AC LDP X20, X19, [X31 + 0x20]
	0x01C9C2B0 LDP X22, X21, [X31 + 0x10]
	0x01C9C2B4 LDP X30, X23, [X31], #0x30
	0x01C9C2B8 RET
	0x01C9C2BC BL 0x1B6EA1C
	0x01C9C2C0 STP X30, X23, [X31 - 0x30]!
	0x01C9C2C4 STP X22, X21, [X31 + 0x10]
	0x01C9C2C8 STP X20, X19, [X31 + 0x20]
	0x01C9C2CC ADRP X20, 0x2587000
	0x01C9C2D0 ADRP X21, 0x22B2000
	0x01C9C2D4 LDRB W8, [X20 + 0x3FC]
	0x01C9C2D8 LDR X21, [X21 + 0x1C0]
	0x01C9C2DC MOV X19, X0
	0x01C9C2E0 TBNZ X8, 0x0, 0x1C9C334
	0x01C9C2E4 ADRP X0, 0x22B2000
	0x01C9C2E8 LDR X0, [X0 + 0x270]
	0x01C9C2EC BL 0x1B6E7F0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2588000
	005 Move W8, [X20+1011]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x22B3000
	012 Move X0, [X0+416]
	013 Call 0x1B6F7F0
	014 Move W8, 1
	015 Move [X20+1011], W8
	016 Move W0, 1
	017 Move X1, X31
	018 Move W20, 1
	019 Call Assert.Check, X0
	020 Compare X19, 0
	021 JumpIfEqual {42}
	022 Move X9, 0x22B3000
	023 Move X9, [X9+416]
	024 Move [X19+88], W20
	025 Move X8, [X19]
	026 Move X1, [X9]
	027 Move W10, [X8+304]
	028 Move W9, [X1+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, [X8+200]
	031 Add X8, X8, X9
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Call AttachedItemAnchor.RPC_UnattachItem, X0
	039 Return 
	040 Move X0, X19
	041 Call 0x1B6FCDC
	042 Call 0x1B6FA1C

