Type: AnimalCompany.ItemSellingMachineView/<PlayBulbEffectCoroutine>d__36

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01DDCF94 MOV X19, X0
	0x01DDCF98 TBNZ X8, 0x0, 0x1DDCFBC
	0x01DDCF9C ADRP X0, 0x231C000
	0x01DDCFA0 LDR X0, [X0 + 0x98]
	0x01DDCFA4 BL 0x1C16CF4
	0x01DDCFA8 ADRP X0, 0x2317000
	0x01DDCFAC LDR X0, [X0 + 0x988]
	0x01DDCFB0 BL 0x1C16CF4
	0x01DDCFB4 MOVZ W8, 0x1
	0x01DDCFB8 STRB W8, [X20 + 0xC72]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01DDD448 LDR X24, [X24 + 0xDA0]

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01DDD44C LDR X19, [X19 + 0xB60]
	0x01DDD450 LDR X22, [X22 + 0xDB0]
	0x01DDD454 LDR X21, [X21 + 0x648]
	0x01DDD458 MOV X20, X0
	0x01DDD45C TBNZ X8, 0x0, 0x1DDD498
	0x01DDD460 ADRP X0, 0x2316000
	0x01DDD464 LDR X0, [X0 + 0x648]
	0x01DDD468 BL 0x1C16CF4
	0x01DDD46C ADRP X0, 0x2316000
	0x01DDD470 LDR X0, [X0 + 0xDB0]
	0x01DDD474 BL 0x1C16CF4
	0x01DDD478 ADRP X0, 0x231B000
	0x01DDD47C LDR X0, [X0 + 0xB60]
	0x01DDD480 BL 0x1C16CF4
	0x01DDD484 ADRP X0, 0x2316000
	0x01DDD488 LDR X0, [X0 + 0xDA0]
	0x01DDD48C BL 0x1C16CF4
	0x01DDD490 MOVZ W8, 0x1
	0x01DDD494 STRB W8, [X23 + 0xC73]
	0x01DDD498 LDR X0, [X24]
	0x01DDD49C BL 0x1C16F10
	0x01DDD4A0 LDR X2, [X19]
	0x01DDD4A4 MOV X1, X20
	0x01DDD4A8 MOV X3, X31
	0x01DDD4AC MOV X19, X0
	0x01DDD4B0 BL 0x35C52F0
	0x01DDD4B4 LDR X0, [X22]
	0x01DDD4B8 MOVZ W1, 0x1
	0x01DDD4BC BL 0x1C16D6C
	0x01DDD4C0 LDR X8, [X21]
	0x01DDD4C4 MOV X20, X0
	0x01DDD4C8 LDR W9, [X8 + 0xE0]
	0x01DDD4CC CBNZ W9, 0x1DDD4D8
	0x01DDD4D0 MOV X0, X8
	0x01DDD4D4 BL 0x1C16DFC
	0x01DDD4D8 ADRP X22, 0x25FB000
	0x01DDD4DC LDRB W8, [X22 + 0x787]
	0x01DDD4E0 CBNZ W8, 0x1DDD4F8
	0x01DDD4E4 ADRP X0, 0x2316000
	0x01DDD4E8 LDR X0, [X0 + 0x648]
	0x01DDD4EC BL 0x1C16CF4
	0x01DDD4F0 MOVZ W8, 0x1
	0x01DDD4F4 STRB W8, [X22 + 0x787]
	0x01DDD4F8 LDR X0, [X21]
	0x01DDD4FC LDR W8, [X0 + 0xE0]
	0x01DDD500 CBNZ W8, 0x1DDD50C
	0x01DDD504 BL 0x1C16DFC
	0x01DDD508 LDR X0, [X21]
	0x01DDD50C LDR X8, [X0 + 0xB8]
	0x01DDD510 LDR X8, [X8]
	0x01DDD514 CBZ X8, 0x1DDD564
	0x01DDD518 CBZ X20, 0x1DDD564
	0x01DDD51C LDR X21, [X8 + 0xA0]
	0x01DDD520 CBZ X21, 0x1DDD538
	0x01DDD524 LDR X8, [X20]
	0x01DDD528 MOV X0, X21
	0x01DDD52C LDR X1, [X8 + 0x40]
	0x01DDD530 BL 0x1C16E00
	0x01DDD534 CBZ X0, 0x1DDD56C
	0x01DDD538 LDR W8, [X20 + 0x18]
	0x01DDD53C CBZ W8, 0x1DDD568
	0x01DDD540 STR X21, [X20 + 0x20]
	0x01DDD544 MOV X0, X19
	0x01DDD548 MOV X1, X20
	0x01DDD54C LDP X20, X19, [X31 + 0x30]
	0x01DDD550 LDP X22, X21, [X31 + 0x20]
	0x01DDD554 LDP X24, X23, [X31 + 0x10]
	0x01DDD558 MOV X2, X31
	0x01DDD55C LDR X30, [X31], #0x40
	0x01DDD560 B 0x1D363F0
	0x01DDD564 BL 0x1C16F20
	0x01DDD568 BL 0x1C16F28
	0x01DDD56C BL 0x1C16F44
	0x01DDD570 MOV X1, X31
	0x01DDD574 BL 0x1C16DEC
	0x01DDD578 STP X30, X23, [X31 - 0x30]!
	0x01DDD57C STP X22, X21, [X31 + 0x10]
	0x01DDD580 STP X20, X19, [X31 + 0x20]
	0x01DDD584 ADRP X22, 0x25FB000
	0x01DDD588 ADRP X23, 0x2316000
	0x01DDD58C ADRP X20, 0x231B000
	0x01DDD590 ADRP X21, 0x2316000
	0x01DDD594 LDRB W8, [X22 + 0xC74]
	0x01DDD598 LDR X23, [X23 + 0xDA0]
	0x01DDD59C LDR X20, [X20 + 0xB60]
	0x01DDD5A0 LDR X21, [X21 + 0x648]
	0x01DDD5A4 MOV X19, X0
	0x01DDD5A8 TBNZ X8, 0x0, 0x1DDD5D8
	0x01DDD5AC ADRP X0, 0x2316000
	0x01DDD5B0 LDR X0, [X0 + 0x648]
	0x01DDD5B4 BL 0x1C16CF4
	0x01DDD5B8 ADRP X0, 0x231B000
	0x01DDD5BC LDR X0, [X0 + 0xB60]
	0x01DDD5C0 BL 0x1C16CF4
	0x01DDD5C4 ADRP X0, 0x2316000
	0x01DDD5C8 LDR X0, [X0 + 0xDA0]
	0x01DDD5CC BL 0x1C16CF4
	0x01DDD5D0 MOVZ W8, 0x1
	0x01DDD5D4 STRB W8, [X22 + 0xC74]
	0x01DDD5D8 LDR X0, [X23]
	0x01DDD5DC BL 0x1C16F10
	0x01DDD5E0 LDR X2, [X20]
	0x01DDD5E4 MOV X1, X19
	0x01DDD5E8 MOV X3, X31
	0x01DDD5EC MOV X20, X0
	0x01DDD5F0 BL 0x35C52F0
	0x01DDD5F4 LDR X0, [X21]
	0x01DDD5F8 LDR W8, [X0 + 0xE0]
	0x01DDD5FC CBNZ W8, 0x1DDD604
	0x01DDD600 BL 0x1C16DFC
	0x01DDD604 MOV X0, X20
	0x01DDD608 MOV X1, X31
	0x01DDD60C BL 0x1D36978
	0x01DDD610 LDR X0, [X19 + 0x30]
	0x01DDD614 CBZ X0, 0x1DDD62C
	0x01DDD618 LDP X20, X19, [X31 + 0x20]
	0x01DDD61C LDP X22, X21, [X31 + 0x10]
	0x01DDD620 MOV X1, X31
	0x01DDD624 LDP X30, X23, [X31], #0x30
	0x01DDD628 B 0x35B9B84
	0x01DDD62C BL 0x1C16F20
	0x01DDD630 STR X30, [X31 - 0x30]!
	0x01DDD634 STP X22, X21, [X31 + 0x10]
	0x01DDD638 STP X20, X19, [X31 + 0x20]
	0x01DDD63C ADRP X20, 0x25FB000
	0x01DDD640 LDRB W8, [X20 + 0xC75]
	0x01DDD644 MOV X19, X0
	0x01DDD648 TBNZ X8, 0x0, 0x1DDD678
	0x01DDD64C ADRP X0, 0x2316000
	0x01DDD650 LDR X0, [X0 + 0x648]
	0x01DDD654 BL 0x1C16CF4
	0x01DDD658 ADRP X0, 0x2316000
	0x01DDD65C LDR X0, [X0 + 0x958]
	0x01DDD660 BL 0x1C16CF4
	0x01DDD664 ADRP X0, 0x231B000
	0x01DDD668 LDR X0, [X0 + 0xB68]
	0x01DDD66C BL 0x1C16CF4
	0x01DDD670 MOVZ W8, 0x1
	0x01DDD674 STRB W8, [X20 + 0xC75]
	0x01DDD678 LDR X0, [X19 + 0x30]
	0x01DDD67C CBZ X0, 0x1DDD708
	0x01DDD680 ADRP X20, 0x2316000
	0x01DDD684 ADRP X21, 0x231B000
	0x01DDD688 ADRP X22, 0x2316000
	0x01DDD68C LDR X20, [X20 + 0x958]
	0x01DDD690 LDR X21, [X21 + 0xB68]
	0x01DDD694 LDR X22, [X22 + 0x648]
	0x01DDD698 MOV X1, X31
	0x01DDD69C BL 0x35B9B84
	0x01DDD6A0 LDR X0, [X20]
	0x01DDD6A4 BL 0x1C16F10
	0x01DDD6A8 LDR X2, [X21]
	0x01DDD6AC MOV X1, X19
	0x01DDD6B0 MOV X3, X31
	0x01DDD6B4 MOV X20, X0
	0x01DDD6B8 BL 0x35BC6F0
	0x01DDD6BC MOV X0, X20
	0x01DDD6C0 MOV W1, W31
	0x01DDD6C4 MOV X2, X31
	0x01DDD6C8 BL 0x35BBFC4
	0x01DDD6CC LDR X8, [X22]
	0x01DDD6D0 MOV X20, X0
	0x01DDD6D4 LDR W9, [X8 + 0xE0]
	0x01DDD6D8 CBNZ W9, 0x1DDD6E4
	0x01DDD6DC MOV X0, X8
	0x01DDD6E0 BL 0x1C16DFC
	0x01DDD6E4 MOV X0, X20
	0x01DDD6E8 MOV W1, W31
	0x01DDD6EC MOV X2, X31
	0x01DDD6F0 BL 0x1D35D6C
	0x01DDD6F4 STR X0, [X19 + 0x30]
	0x01DDD6F8 LDP X20, X19, [X31 + 0x20]
	0x01DDD6FC LDP X22, X21, [X31 + 0x10]
	0x01DDD700 LDR X30, [X31], #0x30
	0x01DDD704 RET
	0x01DDD708 BL 0x1C16F20
	0x01DDD70C STP X30, X21, [X31 - 0x20]!
	0x01DDD710 STP X20, X19, [X31 + 0x10]
	0x01DDD714 ADRP X20, 0x25FB000
	0x01DDD718 ADRP X21, 0x231B000
	0x01DDD71C LDRB W8, [X20 + 0xC76]
	0x01DDD720 LDR X21, [X21 + 0xB70]
	0x01DDD724 MOV X19, X0
	0x01DDD728 TBNZ X8, 0x0, 0x1DDD740
	0x01DDD72C ADRP X0, 0x231B000
	0x01DDD730 LDR X0, [X0 + 0xB70]
	0x01DDD734 BL 0x1C16CF4
	0x01DDD738 MOVZ W8, 0x1
	0x01DDD73C STRB W8, [X20 + 0xC76]
	0x01DDD740 LDR X0, [X21]
	0x01DDD744 BL 0x1C16F10
	0x01DDD748 MOV X1, X31
	0x01DDD74C MOV X20, X0
	0x01DDD750 BL 0x33BDD8C
	0x01DDD754 STR W31, [X20 + 0x10]
	0x01DDD758 STR X19, [X20 + 0x20]
	0x01DDD75C MOV X0, X20
	0x01DDD760 LDP X20, X19, [X31 + 0x10]
	0x01DDD764 LDP X30, X21, [X31], #0x20
	0x01DDD768 RET
	0x01DDD76C STR X30, [X31 - 0x20]!
	0x01DDD770 STP X20, X19, [X31 + 0x10]
	0x01DDD774 MOV W19, W1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x25FC000
	009 Move W8, [X20+3184]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x231C000
	016 Move X0, [X0+2864]
	017 Call 0x1C17CF4
	018 Move X0, 0x231C000
	019 Move X0, [X0+2632]
	020 Call 0x1C17CF4
	021 Move X0, 0x231C000
	022 Move X0, [X0+2872]
	023 Call 0x1C17CF4
	024 Move X0, 0x231C000
	025 Move X0, [X0+2880]
	026 Call 0x1C17CF4
	027 Move X0, 0x231C000
	028 Move X0, [X0+2856]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+3184], W8
	032 Move W8, [X19+16]
	033 Move X22, [X19+32]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Compare W8, 0
	036 JumpIfNotEqual {225}
	037 Move TEMP, 0
	038 Not TEMP
	039 Move W8, TEMP
	040 Move [X19+16], W8
	041 Compare X22, 0
	042 JumpIfEqual {235}
	043 Move X0, [X22+56]
	044 Compare X0, 0
	045 JumpIfEqual {235}
	046 Move X1, X31
	047 Call Renderer.get_material, X0
	048 Move X21, 0x231C000
	049 Move X21, [X21+2632]
	050 Move X20, X0
	051 Move X8, [X21]
	052 Move W9, [X8+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {57}
	055 Move X0, X8
	056 Call 0x1C17DFC
	057 Compare X20, 0
	058 JumpIfEqual {235}
	059 Move X8, [X21]
	060 Move S0, 1
	061 Move X0, X20
	062 Move X2, X31
	063 Move X8, [X8+184]
	064 Move W1, [X8]
	065 Call Material.SetFloat, X0, X1, V0
	066 Move X8, [X22+64]
	067 Compare X8, 0
	068 JumpIfEqual {235}
	069 NotImplemented "Instruction LDRSW not yet implemented."
	070 Move W10, [X8+24]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Add X8, X8, X9
	073 Move X0, [X8+32]
	074 Compare X0, 0
	075 JumpIfEqual {235}
	076 Move X1, X31
	077 Call Renderer.get_material, X0
	078 Compare X0, 0
	079 JumpIfEqual {235}
	080 Move X8, [X21]
	081 Move S0, 1
	082 Move X2, X31
	083 Move X8, [X8+184]
	084 Move W1, [X8]
	085 Call Material.SetFloat, X0, X1, V0
	086 Move X8, [X22+72]
	087 Compare X8, 0
	088 JumpIfEqual {235}
	089 NotImplemented "Instruction LDRSW not yet implemented."
	090 Move W10, [X8+24]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Add X8, X8, X9
	093 Move X0, [X8+32]
	094 Compare X0, 0
	095 JumpIfEqual {235}
	096 Move W1, 1
	097 Move X2, X31
	098 Move W20, 1
	099 Call Behaviour.set_enabled, X0, X1
	100 Move X8, [X22+144]
	101 Move [X19+16], W20
	102 Move [X19+24], X8
	103 Move TEMP, 0
	104 Not TEMP
	105 Move W8, TEMP
	106 Move [X19+16], W8
	107 Compare X22, 0
	108 JumpIfEqual {235}
	109 Move X8, [X22+64]
	110 Compare X8, 0
	111 JumpIfEqual {235}
	112 NotImplemented "Instruction LDRSW not yet implemented."
	113 Move W10, [X8+24]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Add X8, X8, X9
	116 Move X0, [X8+32]
	117 Compare X0, 0
	118 JumpIfEqual {235}
	119 Move X1, X31
	120 Call Renderer.get_material, X0
	121 Move X23, 0x231C000
	122 Move X23, [X23+2632]
	123 Move X20, X0
	124 Move X8, [X23]
	125 Move W9, [X8+224]
	126 Compare W9, 0
	127 JumpIfNotEqual {130}
	128 Move X0, X8
	129 Call 0x1C17DFC
	130 Compare X20, 0
	131 JumpIfEqual {235}
	132 Move X8, [X23]
	133 Move S0, W31
	134 Move X0, X20
	135 Move X2, X31
	136 Move X8, [X8+184]
	137 Move W1, [X8]
	138 Call Material.SetFloat, X0, X1, V0
	139 Move X8, [X22+72]
	140 Compare X8, 0
	141 JumpIfEqual {235}
	142 NotImplemented "Instruction LDRSW not yet implemented."
	143 Move W10, [X8+24]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Add X8, X8, X9
	146 Move X0, [X8+32]
	147 Compare X0, 0
	148 JumpIfEqual {235}
	149 Move W1, W31
	150 Move X2, X31
	151 Call Behaviour.set_enabled, X0, X1
	152 Move X8, [X22+136]
	153 Compare X8, 0
	154 JumpIfEqual {235}
	155 NotImplemented "Instruction LDRSW not yet implemented."
	156 Move W10, [X8+24]
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Add X8, X8, X9
	159 Move [X8+32], X31
	160 Move X24, 0x231C000
	161 Move X24, [X24+2856]
	162 Move X19, [X22+136]
	163 Move X0, [X24]
	164 Move W8, [X0+224]
	165 Compare W8, 0
	166 JumpIfNotEqual {169}
	167 Call 0x1C17DFC
	168 Move X0, [X24]
	169 Move X8, [X0+184]
	170 Move X20, [X8+8]
	171 Compare X20, 0
	172 JumpIfNotEqual {194}
	173 Move W8, [X0+224]
	174 Compare W8, 0
	175 JumpIfNotEqual {178}
	176 Call 0x1C17DFC
	177 Move X0, [X24]
	178 Move X9, 0x231C000
	179 Move X8, [X0+184]
	180 Move X9, [X9+2872]
	181 Move X21, [X8]
	182 Move X0, [X9]
	183 Call 0x1C17F10
	184 Move X8, 0x231C000
	185 Move X8, [X8+2880]
	186 Move X1, X21
	187 Move X3, X31
	188 Move X20, X0
	189 Move X2, [X8]
	190 Call Predicate`1<Object>..ctor, X0, X1, X2
	191 Move X8, [X24]
	192 Move X8, [X8+184]
	193 Move [X8+8], X20
	194 Move X8, 0x231C000
	195 Move X8, [X8+2864]
	196 Move X0, X19
	197 Move X1, X20
	198 Move X2, [X8]
	199 Call Array.TrueForAll, X0, X1
	200 Move TEMP, X0
	201 And TEMP, TEMP, 1
	202 Compare TEMP, 1
	203 JumpIfNotEqual {225}
	204 Move X0, [X22+56]
	205 Compare X0, 0
	206 JumpIfEqual {235}
	207 Move X1, X31
	208 Call Renderer.get_material, X0
	209 Move X8, [X23]
	210 Move X19, X0
	211 Move W9, [X8+224]
	212 Compare W9, 0
	213 JumpIfNotEqual {216}
	214 Move X0, X8
	215 Call 0x1C17DFC
	216 Compare X19, 0
	217 JumpIfEqual {235}
	218 Move X8, [X23]
	219 Move S0, W31
	220 Move X0, X19
	221 Move X2, X31
	222 Move X8, [X8+184]
	223 Move W1, [X8]
	224 Call Material.SetFloat, X0, X1, V0
	225 Move W20, W31
	226 Move W0, W20
	227 Move X20, [X31+48]
	228 Move X19, [X31+56]
	229 Move X22, [X31+32]
	230 Move X21, [X31+40]
	231 Move X24, [X31+16]
	232 Move X23, [X31+24]
	233 Move X30, [X31+64]
	234 Return X0
	235 Call 0x1C17F20
	236 Call 0x1C17F28

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x01DDD778 MOV X1, X31
	0x01DDD77C MOV X20, X0

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01DDD780 BL 0x33BDD8C
	0x01DDD784 STR W19, [X20 + 0x10]
	0x01DDD788 LDP X20, X19, [X31 + 0x10]
	0x01DDD78C LDR X30, [X31], #0x20
	0x01DDD790 RET
	0x01DDD794 STP X30, X21, [X31 - 0x20]!
	0x01DDD798 STP X20, X19, [X31 + 0x10]
	0x01DDD79C ADRP X21, 0x25FB000
	0x01DDD7A0 ADRP X20, 0x2316000
	0x01DDD7A4 LDRB W8, [X21 + 0xC77]
	0x01DDD7A8 LDR X20, [X20 + 0x898]
	0x01DDD7AC MOV X19, X0
	0x01DDD7B0 TBNZ X8, 0x0, 0x1DDD7C8
	0x01DDD7B4 ADRP X0, 0x2316000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x2317000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x231C000
	011 Move X0, [X0+2888]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01DDD7B8 LDR X0, [X0 + 0x898]
	0x01DDD7BC BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

