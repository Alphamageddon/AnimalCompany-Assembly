Type: AnimalCompany.AddNotificationAction

Method: System.Void .ctor(Nakama.IApiNotification notification)

Disassembly:
	0x01D44280 STR X19, [X21 + 0x18]
	0x01D44284 CBZ X20, 0x1D442D4
	0x01D44288 LDR X8, [X20]
	0x01D4428C MOV X0, X21
	0x01D44290 LDR X1, [X8 + 0x40]
	0x01D44294 BL 0x1C16E00
	0x01D44298 CBZ X0, 0x1D442D8
	0x01D4429C LDR W8, [X20 + 0x18]
	0x01D442A0 CBZ W8, 0x1D442E4
	0x01D442A4 ADRP X8, 0x23AF000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+24], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void Execute(AnimalCompany.AppState state)

Disassembly:
	0x01D442A8 LDR X8, [X8 + 0x648]
	0x01D442AC STR X21, [X20 + 0x20]
	0x01D442B0 LDR X0, [X8]
	0x01D442B4 LDR W8, [X0 + 0xE0]
	0x01D442B8 CBNZ W8, 0x1D442C0
	0x01D442BC BL 0x1C16DFC
	0x01D442C0 MOV X0, X20
	0x01D442C4 LDP X20, X19, [X31 + 0x20]
	0x01D442C8 LDP X22, X21, [X31 + 0x10]
	0x01D442CC LDR X30, [X31], #0x30
	0x01D442D0 B 0x1D35B1C
	0x01D442D4 BL 0x1C16F20
	0x01D442D8 BL 0x1C16F44
	0x01D442DC MOV X1, X31
	0x01D442E0 BL 0x1C16DEC
	0x01D442E4 BL 0x1C16F28
	0x01D442E8 MOV X1, X31
	0x01D442EC B 0x3C36C30
	0x01D442F0 STR X30, [X31 - 0x20]!
	0x01D442F4 STP X20, X19, [X31 + 0x10]
	0x01D442F8 ADRP X19, 0x2694000
	0x01D442FC ADRP X20, 0x23B0000
	0x01D44300 LDRB W8, [X19 + 0x759]
	0x01D44304 LDR X20, [X20 + 0x398]
	0x01D44308 TBNZ X8, 0x0, 0x1D44320
	0x01D4430C ADRP X0, 0x23B0000
	0x01D44310 LDR X0, [X0 + 0x398]
	0x01D44314 BL 0x1C16CF4
	0x01D44318 MOVZ W8, 0x1
	0x01D4431C STRB W8, [X19 + 0x759]
	0x01D44320 LDR X0, [X20]
	0x01D44324 BL 0x1C16F10
	0x01D44328 MOV X1, X31
	0x01D4432C MOV X19, X0
	0x01D44330 BL 0x33BDD8C
	0x01D44334 LDR X8, [X20]
	0x01D44338 LDR X8, [X8 + 0xB8]
	0x01D4433C STR X19, [X8]
	0x01D44340 LDP X20, X19, [X31 + 0x10]
	0x01D44344 LDR X30, [X31], #0x20
	0x01D44348 RET
	0x01D4434C MOV X1, X31
	0x01D44350 B 0x33BDD8C
	0x01D44354 STP X30, X21, [X31 - 0x20]!
	0x01D44358 STP X20, X19, [X31 + 0x10]
	0x01D4435C ADRP X20, 0x2694000
	0x01D44360 ADRP X21, 0x23AF000
	0x01D44364 LDRB W8, [X20 + 0x75A]
	0x01D44368 LDR X21, [X21 + 0x648]
	0x01D4436C MOV X19, X1
	0x01D44370 TBNZ X8, 0x0, 0x1D44388
	0x01D44374 ADRP X0, 0x23AF000
	0x01D44378 LDR X0, [X0 + 0x648]
	0x01D4437C BL 0x1C16CF4
	0x01D44380 MOVZ W8, 0x1
	0x01D44384 STRB W8, [X20 + 0x75A]
	0x01D44388 LDR X0, [X21]
	0x01D4438C LDR W8, [X0 + 0xE0]
	0x01D44390 CBNZ W8, 0x1D44398
	0x01D44394 BL 0x1C16DFC
	0x01D44398 BL 0x1D32AF4
	0x01D4439C MOV X20, X0
	0x01D443A0 BL 0x1D32B7C
	0x01D443A4 CBZ X20, 0x1D443D0
	0x01D443A8 MOV X1, X0
	0x01D443AC MOV X0, X20
	0x01D443B0 MOV X5, X19
	0x01D443B4 LDP X20, X19, [X31 + 0x10]
	0x01D443B8 MOVZ W2, 0xA
	0x01D443BC MOV X3, X31
	0x01D443C0 MOV X4, X31
	0x01D443C4 MOV X6, X31
	0x01D443C8 LDP X30, X21, [X31], #0x20
	0x01D443CC B 0x1D6D740
	0x01D443D0 BL 0x1C16F20
	0x01D443D4 RET
	0x01D443D8 STR X30, [X31 - 0x30]!
	0x01D443DC STP X22, X21, [X31 + 0x10]
	0x01D443E0 STP X20, X19, [X31 + 0x20]
	0x01D443E4 ADRP X20, 0x2694000
	0x01D443E8 LDRB W8, [X20 + 0x75B]
	0x01D443EC MOV X19, X0
	0x01D443F0 TBNZ X8, 0x0, 0x1D44468
	0x01D443F4 ADRP X0, 0x23AF000
	0x01D443F8 LDR X0, [X0 + 0x648]
	0x01D443FC BL 0x1C16CF4
	0x01D44400 ADRP X0, 0x23AF000
	0x01D44404 LDR X0, [X0 + 0xAB0]
	0x01D44408 BL 0x1C16CF4
	0x01D4440C ADRP X0, 0x23B0000
	0x01D44410 LDR X0, [X0 + 0x3A0]
	0x01D44414 BL 0x1C16CF4
	0x01D44418 ADRP X0, 0x23B0000
	0x01D4441C LDR X0, [X0 + 0x3A8]
	0x01D44420 BL 0x1C16CF4
	0x01D44424 ADRP X0, 0x23B0000
	0x01D44428 LDR X0, [X0 + 0x3B0]
	0x01D4442C BL 0x1C16CF4
	0x01D44430 ADRP X0, 0x23B0000
	0x01D44434 LDR X0, [X0 + 0x3B8]
	0x01D44438 BL 0x1C16CF4
	0x01D4443C ADRP X0, 0x23B0000
	0x01D44440 LDR X0, [X0 + 0x3C0]
	0x01D44444 BL 0x1C16CF4
	0x01D44448 ADRP X0, 0x23B0000
	0x01D4444C LDR X0, [X0 + 0x398]
	0x01D44450 BL 0x1C16CF4
	0x01D44454 ADRP X0, 0x23B0000
	0x01D44458 LDR X0, [X0 + 0x3C8]
	0x01D4445C BL 0x1C16CF4
	0x01D44460 MOVZ W8, 0x1
	0x01D44464 STRB W8, [X20 + 0x75B]
	0x01D44468 LDR W8, [X19 + 0x10]
	0x01D4446C CMP W8, 0x1
	0x01D44470 B.EQ 0x1D44524
	0x01D44474 CBNZ W8, 0x1D44624
	0x01D44478 MOVN W8, 0x0
	0x01D4447C STR W8, [X19 + 0x10]
	0x01D44480 ADRP X22, 0x23B0000
	0x01D44484 LDR X22, [X22 + 0x398]
	0x01D44488 LDR X0, [X22]
	0x01D4448C LDR W8, [X0 + 0xE0]
	0x01D44490 CBNZ W8, 0x1D4449C
	0x01D44494 BL 0x1C16DFC
	0x01D44498 LDR X0, [X22]
	0x01D4449C LDR X8, [X0 + 0xB8]
	0x01D444A0 LDR X20, [X8 + 0x8]
	0x01D444A4 CBNZ X20, 0x1D444F8
	0x01D444A8 LDR W8, [X0 + 0xE0]
	0x01D444AC CBNZ W8, 0x1D444B8
	0x01D444B0 BL 0x1C16DFC
	0x01D444B4 LDR X0, [X22]
	0x01D444B8 ADRP X9, 0x23B0000
	0x01D444BC LDR X8, [X0 + 0xB8]
	0x01D444C0 LDR X9, [X9 + 0x3B8]
	0x01D444C4 LDR X21, [X8]
	0x01D444C8 LDR X0, [X9]
	0x01D444CC BL 0x1C16F10
	0x01D444D0 ADRP X8, 0x23B0000
	0x01D444D4 LDR X8, [X8 + 0x3C0]
	0x01D444D8 MOV X1, X21
	0x01D444DC MOV X3, X31
	0x01D444E0 MOV X20, X0
	0x01D444E4 LDR X2, [X8]
	0x01D444E8 BL 0x2695248
	0x01D444EC LDR X8, [X22]
	0x01D444F0 LDR X8, [X8 + 0xB8]
	0x01D444F4 STR X20, [X8 + 0x8]
	0x01D444F8 ADRP X8, 0x23B0000
	0x01D444FC LDR X8, [X8 + 0x3A0]
	0x01D44500 MOV X0, X20
	0x01D44504 MOV W1, W31
	0x01D44508 MOV X2, X31
	0x01D4450C LDR X3, [X8]
	0x01D44510 BL 0x21A2BE8
	0x01D44514 STP X0, X0, [X19 + 0x18]
	0x01D44518 MOVZ W0, 0x1
	0x01D4451C STR W0, [X19 + 0x10]
	0x01D44520 B 0x1D44628
	0x01D44524 MOVN W8, 0x0
	0x01D44528 STR W8, [X19 + 0x10]
	0x01D4452C ADRP X8, 0x23AF000
	0x01D44530 LDR X8, [X8 + 0xAB0]
	0x01D44534 MOVZ W1, 0x1
	0x01D44538 LDR X0, [X8]
	0x01D4453C BL 0x1C16D6C
	0x01D44540 LDR X8, [X19 + 0x20]
	0x01D44544 CBZ X8, 0x1D44638
	0x01D44548 LDR X20, [X8 + 0x58]
	0x01D4454C CBZ X20, 0x1D44638
	0x01D44550 ADRP X10, 0x23B0000
	0x01D44554 LDR X8, [X20]
	0x01D44558 LDR X10, [X10 + 0x3A8]
	0x01D4455C MOV X19, X0
	0x01D44560 LDRH W9, [X8 + 0x12E]
	0x01D44564 LDR X1, [X10]
	0x01D44568 CBZ X9, 0x1D4458C
	0x01D4456C LDR X10, [X8 + 0xB0]
	0x01D44570 ADD X10, X10, 0x8
	0x01D44574 LDUR X11, [X10 - 0x8]
	0x01D44578 CMP X11, X1
	0x01D4457C B.EQ 0x1D4459C
	0x01D44580 SUBS X9, X9, 0x1
	0x01D44584 ADD X10, X10, 0x10
	0x01D44588 B.NE 0x1D44574
	0x01D4458C MOVZ W2, 0x1
	0x01D44590 MOV X0, X20
	0x01D44594 BL 0x1C5C788
	0x01D44598 B 0x1D445AC
	0x01D4459C LDR W9, [X10]
	0x01D445A0 ADD W9, W9, 0x1
	0x01D445A4 ADD X8, X8, W9, 0x4, SXTW
	0x01D445A8 ADD X0, X8, 0x138
	0x01D445AC LDP X8, X1, [X0]
	0x01D445B0 MOV X0, X20
	0x01D445B4 BLR X8
	0x01D445B8 ADRP X8, 0x23B0000
	0x01D445BC LDR X8, [X8 + 0x3C8]
	0x01D445C0 MOV X21, X0
	0x01D445C4 LDR X8, [X8]
	0x01D445C8 MOV X0, X8
	0x01D445CC BL 0x1C16F10
	0x01D445D0 MOV X1, X31
	0x01D445D4 MOV X20, X0
	0x01D445D8 BL 0x33BDD8C
	0x01D445DC STR X21, [X20 + 0x18]
	0x01D445E0 CBZ X19, 0x1D44638
	0x01D445E4 LDR X8, [X19]
	0x01D445E8 MOV X0, X20
	0x01D445EC LDR X1, [X8 + 0x40]
	0x01D445F0 BL 0x1C16E00
	0x01D445F4 CBZ X0, 0x1D4463C
	0x01D445F8 LDR W8, [X19 + 0x18]
	0x01D445FC CBZ W8, 0x1D44648
	0x01D44600 STR X20, [X19 + 0x20]
	0x01D44604 ADRP X8, 0x23AF000
	0x01D44608 LDR X8, [X8 + 0x648]
	0x01D4460C LDR X0, [X8]
	0x01D44610 LDR W8, [X0 + 0xE0]
	0x01D44614 CBNZ W8, 0x1D4461C
	0x01D44618 BL 0x1C16DFC
	0x01D4461C MOV X0, X19
	0x01D44620 BL 0x1D351C4
	0x01D44624 MOV W0, W31
	0x01D44628 LDP X20, X19, [X31 + 0x20]
	0x01D4462C LDP X22, X21, [X31 + 0x10]
	0x01D44630 LDR X30, [X31], #0x30
	0x01D44634 RET
	0x01D44638 BL 0x1C16F20
	0x01D4463C BL 0x1C16F44
	0x01D44640 MOV X1, X31
	0x01D44644 BL 0x1C16DEC
	0x01D44648 BL 0x1C16F28
	0x01D4464C LDR X0, [X0 + 0x18]
	0x01D44650 RET
	0x01D44654 STP X30, X19, [X31 - 0x10]!
	0x01D44658 ADRP X0, 0x23AF000
	0x01D4465C LDR X0, [X0 + 0xB40]
	0x01D44660 BL 0x1C16D08
	0x01D44664 BL 0x1C16F10
	0x01D44668 MOV X1, X31
	0x01D4466C MOV X19, X0
	0x01D44670 BL 0x3380310
	0x01D44674 ADRP X0, 0x23B0000
	0x01D44678 LDR X0, [X0 + 0x3D0]
	0x01D4467C BL 0x1C16D08
	0x01D44680 MOV X1, X0
	0x01D44684 MOV X0, X19
	0x01D44688 BL 0x1C16DEC
	0x01D4468C LDR X0, [X0 + 0x18]
	0x01D44690 RET
	0x01D44694 LDR X0, [X0 + 0x48]
	0x01D44698 RET
	0x01D4469C STR X1, [X0 + 0x48]
	0x01D446A0 RET
	0x01D446A4 MOV X1, X31
	0x01D446A8 B 0x35CD9D4
	0x01D446AC LDR X0, [X0 + 0x48]
	0x01D446B0 RET
	0x01D446B4 STR X1, [X0 + 0x48]
	0x01D446B8 RET
	0x01D446BC LDR X0, [X0 + 0x50]
	0x01D446C0 RET
	0x01D446C4 STR X1, [X0 + 0x50]
	0x01D446C8 RET
	0x01D446CC LDR X0, [X0 + 0x58]
	0x01D446D0 RET
	0x01D446D4 STR X1, [X0 + 0x58]
	0x01D446D8 RET
	0x01D446DC LDR X0, [X0 + 0x60]
	0x01D446E0 RET
	0x01D446E4 STR X1, [X0 + 0x60]
	0x01D446E8 RET
	0x01D446EC LDR X0, [X0 + 0x68]
	0x01D446F0 RET
	0x01D446F4 STR X1, [X0 + 0x68]
	0x01D446F8 RET
	0x01D446FC LDR X0, [X0 + 0x70]
	0x01D44700 RET
	0x01D44704 STR X1, [X0 + 0x70]
	0x01D44708 RET
	0x01D4470C LDR X0, [X0 + 0x78]
	0x01D44710 RET
	0x01D44714 STR X1, [X0 + 0x78]
	0x01D44718 RET
	0x01D4471C MOV X1, X31
	0x01D44720 B 0x35CD9D4
	0x01D44724 STR X30, [X31 - 0x20]!
	0x01D44728 STP X20, X19, [X31 + 0x10]
	0x01D4472C ADRP X19, 0x2694000
	0x01D44730 ADRP X20, 0x23B0000
	0x01D44734 LDRB W8, [X19 + 0x75C]
	0x01D44738 LDR X20, [X20 + 0x3D8]
	0x01D4473C TBNZ X8, 0x0, 0x1D44754
	0x01D44740 ADRP X0, 0x23B0000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2695000
	009 Move W8, [X21+1869]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x23B1000
	017 Move X0, [X0+784]
	018 Call 0x1C17CF4
	019 Move X0, 0x23B1000
	020 Move X0, [X0+808]
	021 Call 0x1C17CF4
	022 Move X0, 0x23B0000
	023 Move X0, [X0+3632]
	024 Call 0x1C17CF4
	025 Move X0, 0x23B1000
	026 Move X0, [X0+816]
	027 Call 0x1C17CF4
	028 Move X0, 0x23B0000
	029 Move X0, [X0+2304]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+1869], W8
	033 Compare X20, 0
	034 JumpIfEqual {317}
	035 Move X8, [X20+184]
	036 Compare X8, 0
	037 JumpIfEqual {317}
	038 Move X9, [X8+168]
	039 Compare X9, 0
	040 JumpIfEqual {317}
	041 Move X21, [X19+24]
	042 Compare X21, 0
	043 JumpIfEqual {317}
	044 Move X23, 0x23B1000
	045 Move X8, [X21]
	046 Move X23, [X23+784]
	047 Move X20, [X9+72]
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 Move X1, [X23]
	050 Compare X9, 0
	051 JumpIfEqual {58}
	052 Move X10, [X8+176]
	053 Add X10, X10, 8
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Subtract X9, X9, 1
	057 Add X10, X10, 16
	058 Move W2, 3
	059 Move X0, X21
	060 Call 0x1C5D788
	061 Move W9, [X10]
	062 Add W9, W9, 3
	063 Add X8, X8, W9
	064 Add X0, X8, 312
	065 Move X8, [X0]
	066 Move X1, [X0+8]
	067 Move X0, X21
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Compare X20, 0
	070 JumpIfEqual {317}
	071 Move X8, 0x23B1000
	072 Move X8, [X8+808]
	073 Move X1, X0
	074 Move X0, X20
	075 Move X2, [X8]
	076 Call StateDictionary`2<Object, Object>.GetOrAddValue, X0, X1
	077 Compare X0, 0
	078 JumpIfEqual {317}
	079 Move X22, [X19+24]
	080 Compare X22, 0
	081 JumpIfEqual {317}
	082 Move X8, [X22]
	083 Move X21, [X0+72]
	084 Move X1, [X23]
	085 Move X20, X0
	086 NotImplemented "Instruction LDRH not yet implemented."
	087 Compare X9, 0
	088 JumpIfEqual {95}
	089 Move X10, [X8+176]
	090 Add X10, X10, 8
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Subtract X9, X9, 1
	094 Add X10, X10, 16
	095 Move W2, 3
	096 Move X0, X22
	097 Call 0x1C5D788
	098 Move W9, [X10]
	099 Add W9, W9, 3
	100 Add X8, X8, W9
	101 Add X0, X8, 312
	102 Move X8, [X0]
	103 Move X1, [X0+8]
	104 Move X0, X22
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Compare X21, 0
	107 JumpIfEqual {317}
	108 Move X24, 0x23B0000
	109 Move X24, [X24+2304]
	110 Move X1, X0
	111 Move X0, X21
	112 Move X2, [X24]
	113 Call StatePrimitive`1<Object>.set_value, X0, X1
	114 Move X22, [X19+24]
	115 Compare X22, 0
	116 JumpIfEqual {317}
	117 Move X8, [X22]
	118 Move X21, [X20+80]
	119 Move X1, [X23]
	120 NotImplemented "Instruction LDRH not yet implemented."
	121 Compare X9, 0
	122 JumpIfEqual {129}
	123 Move X10, [X8+176]
	124 Add X10, X10, 8
	125 NotImplemented "Instruction LDUR not yet implemented."
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Subtract X9, X9, 1
	128 Add X10, X10, 16
	129 Move X0, X22
	130 Move W2, W31
	131 Call 0x1C5D788
	132 NotImplemented "Instruction LDRSW not yet implemented."
	133 Add X8, X8, X9
	134 Add X0, X8, 312
	135 Move X8, [X0]
	136 Move X1, [X0+8]
	137 Move X0, X22
	138 NotImplemented "Instruction BLR not yet implemented."
	139 Compare X21, 0
	140 JumpIfEqual {317}
	141 Move X8, 0x23B1000
	142 Move X8, [X8+816]
	143 Move W1, W0
	144 Move X0, X21
	145 Move X2, [X8]
	146 Call StatePrimitive`1<Int32Enum>.set_value, X0, X1
	147 Move X22, [X19+24]
	148 Compare X22, 0
	149 JumpIfEqual {317}
	150 Move X8, [X22]
	151 Move X21, [X20+88]
	152 Move X1, [X23]
	153 NotImplemented "Instruction LDRH not yet implemented."
	154 Compare X9, 0
	155 JumpIfEqual {162}
	156 Move X10, [X8+176]
	157 Add X10, X10, 8
	158 NotImplemented "Instruction LDUR not yet implemented."
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Subtract X9, X9, 1
	161 Add X10, X10, 16
	162 Move W2, 6
	163 Move X0, X22
	164 Call 0x1C5D788
	165 Move W9, [X10]
	166 Add W9, W9, 6
	167 Add X8, X8, W9
	168 Add X0, X8, 312
	169 Move X8, [X0]
	170 Move X1, [X0+8]
	171 Move X0, X22
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Compare X21, 0
	174 JumpIfEqual {317}
	175 Move X2, [X24]
	176 Move X1, X0
	177 Move X0, X21
	178 Call StatePrimitive`1<Object>.set_value, X0, X1
	179 Move X22, [X19+24]
	180 Compare X22, 0
	181 JumpIfEqual {317}
	182 Move X8, [X22]
	183 Move X21, [X20+96]
	184 Move X1, [X23]
	185 NotImplemented "Instruction LDRH not yet implemented."
	186 Compare X9, 0
	187 JumpIfEqual {194}
	188 Move X10, [X8+176]
	189 Add X10, X10, 8
	190 NotImplemented "Instruction LDUR not yet implemented."
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Subtract X9, X9, 1
	193 Add X10, X10, 16
	194 Move W2, 1
	195 Move X0, X22
	196 Call 0x1C5D788
	197 Move W9, [X10]
	198 Add W9, W9, 1
	199 Add X8, X8, W9
	200 Add X0, X8, 312
	201 Move X8, [X0]
	202 Move X1, [X0+8]
	203 Move X0, X22
	204 NotImplemented "Instruction BLR not yet implemented."
	205 Compare X21, 0
	206 JumpIfEqual {317}
	207 Move X2, [X24]
	208 Move X1, X0
	209 Move X0, X21
	210 Call StatePrimitive`1<Object>.set_value, X0, X1
	211 Move X22, [X19+24]
	212 Compare X22, 0
	213 JumpIfEqual {317}
	214 Move X8, [X22]
	215 Move X21, [X20+104]
	216 Move X1, [X23]
	217 NotImplemented "Instruction LDRH not yet implemented."
	218 Compare X9, 0
	219 JumpIfEqual {226}
	220 Move X10, [X8+176]
	221 Add X10, X10, 8
	222 NotImplemented "Instruction LDUR not yet implemented."
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Subtract X9, X9, 1
	225 Add X10, X10, 16
	226 Move W2, 5
	227 Move X0, X22
	228 Call 0x1C5D788
	229 Move W9, [X10]
	230 Add W9, W9, 5
	231 Add X8, X8, W9
	232 Add X0, X8, 312
	233 Move X8, [X0]
	234 Move X1, [X0+8]
	235 Move X0, X22
	236 NotImplemented "Instruction BLR not yet implemented."
	237 Compare X21, 0
	238 JumpIfEqual {317}
	239 Move X2, [X24]
	240 Move X1, X0
	241 Move X0, X21
	242 Call StatePrimitive`1<Object>.set_value, X0, X1
	243 Move X22, [X19+24]
	244 Compare X22, 0
	245 JumpIfEqual {317}
	246 Move X8, [X22]
	247 Move X21, [X20+112]
	248 Move X1, [X23]
	249 NotImplemented "Instruction LDRH not yet implemented."
	250 Compare X9, 0
	251 JumpIfEqual {258}
	252 Move X10, [X8+176]
	253 Add X10, X10, 8
	254 NotImplemented "Instruction LDUR not yet implemented."
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Subtract X9, X9, 1
	257 Add X10, X10, 16
	258 Move W2, 2
	259 Move X0, X22
	260 Call 0x1C5D788
	261 Move W9, [X10]
	262 Add W9, W9, 2
	263 Add X8, X8, W9
	264 Add X0, X8, 312
	265 Move X8, [X0]
	266 Move X1, [X0+8]
	267 Move X0, X22
	268 NotImplemented "Instruction BLR not yet implemented."
	269 Compare X21, 0
	270 JumpIfEqual {317}
	271 Move X2, [X24]
	272 Move X1, X0
	273 Move X0, X21
	274 Call StatePrimitive`1<Object>.set_value, X0, X1
	275 Move X21, [X19+24]
	276 Compare X21, 0
	277 JumpIfEqual {317}
	278 Move X8, [X21]
	279 Move X19, [X20+120]
	280 Move X1, [X23]
	281 NotImplemented "Instruction LDRH not yet implemented."
	282 Compare X9, 0
	283 JumpIfEqual {290}
	284 Move X10, [X8+176]
	285 Add X10, X10, 8
	286 NotImplemented "Instruction LDUR not yet implemented."
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Subtract X9, X9, 1
	289 Add X10, X10, 16
	290 Move W2, 4
	291 Move X0, X21
	292 Call 0x1C5D788
	293 Move W9, [X10]
	294 Add W9, W9, 4
	295 Add X8, X8, W9
	296 Add X0, X8, 312
	297 Move X8, [X0]
	298 Move X1, [X0+8]
	299 Move X0, X21
	300 NotImplemented "Instruction BLR not yet implemented."
	301 Compare X19, 0
	302 JumpIfEqual {317}
	303 Move X8, 0x23B0000
	304 Move X8, [X8+3632]
	305 And W1, W0, 1
	306 Move X0, X19
	307 Move X20, [X31+48]
	308 Move X19, [X31+56]
	309 Move X2, [X8]
	310 Move X22, [X31+32]
	311 Move X21, [X31+40]
	312 Move X24, [X31+16]
	313 Move X23, [X31+24]
	314 Move X30, [X31+64]
	315 Call 0x26528D0, X0, X1
	316 Return 
	317 Call 0x1C17F20

