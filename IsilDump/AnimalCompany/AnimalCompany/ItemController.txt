Type: AnimalCompany.ItemController

Method: System.Void Awake()

Disassembly:
	0x01D65050 LDR X0, [X0 + 0x8C0]
	0x01D65054 BL 0x1C16CF4
	0x01D65058 ADRP X0, 0x2390000
	0x01D6505C LDR X0, [X0 + 0x8C8]
	0x01D65060 BL 0x1C16CF4
	0x01D65064 MOVZ W8, 0x1
	0x01D65068 STRB W8, [X20 + 0x869]
	0x01D6506C LDR X0, [X19 + 0x58]
	0x01D65070 CBNZ X0, 0x1D6510C
	0x01D65074 ADRP X8, 0x2390000
	0x01D65078 LDR X8, [X8 + 0x8C8]
	0x01D6507C LDR X0, [X8]
	0x01D65080 BL 0x1C16F10
	0x01D65084 ADRP X8, 0x2390000
	0x01D65088 LDR X8, [X8 + 0x8B8]
	0x01D6508C MOV X20, X0
	0x01D65090 LDR X1, [X8]
	0x01D65094 BL 0x2AA4804
	0x01D65098 LDR X22, [X19 + 0x40]
	0x01D6509C STR X20, [X19 + 0x58]
	0x01D650A0 CBZ X22, 0x1D65120
	0x01D650A4 LDR W8, [X22 + 0x18]
	0x01D650A8 CMP W8, 0x1
	0x01D650AC B.LT 0x1D65108
	0x01D650B0 ADRP X24, 0x2390000
	0x01D650B4 LDR X24, [X24 + 0x8C0]
	0x01D650B8 MOV W23, W31
	0x01D650BC CMP W23, W8
	0x01D650C0 B.CS 0x1D65124
	0x01D650C4 ADD X8, X22, W23, 0x3, SXTW
	0x01D650C8 LDR X20, [X8 + 0x20]
	0x01D650CC CBZ X20, 0x1D65120
	0x01D650D0 LDR X21, [X19 + 0x58]
	0x01D650D4 MOV X0, X20
	0x01D650D8 MOV X1, X31
	0x01D650DC BL 0x3C389D4
	0x01D650E0 CBZ X21, 0x1D65120
	0x01D650E4 LDR X3, [X24]
	0x01D650E8 MOV X1, X0
	0x01D650EC MOV X0, X21
	0x01D650F0 MOV X2, X20
	0x01D650F4 BL 0x2AA5084
	0x01D650F8 LDR W8, [X22 + 0x18]
	0x01D650FC ADD W23, W23, 0x1
	0x01D65100 CMP W23, W8
	0x01D65104 B.LT 0x1D650BC
	0x01D65108 LDR X0, [X19 + 0x58]
	0x01D6510C LDP X20, X19, [X31 + 0x30]
	0x01D65110 LDP X22, X21, [X31 + 0x20]
	0x01D65114 LDP X24, X23, [X31 + 0x10]
	0x01D65118 LDR X30, [X31], #0x40
	0x01D6511C RET
	0x01D65120 BL 0x1C16F20
	0x01D65124 BL 0x1C16F28

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2674000
	008 Move W8, [X20+2132]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2391000
	015 Move X0, [X0+1744]
	016 Call 0x1C17CF4
	017 Move X0, 0x2391000
	018 Move X0, [X0+2104]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2132], W8
	022 Move X22, [X19+40]
	023 Compare X22, 0
	024 JumpIfEqual {67}
	025 Move X23, 0x2391000
	026 Move X23, [X23+1744]
	027 Move X21, 0x2391000
	028 Move X20, [X22+32]
	029 Move X0, [X23]
	030 Move X21, [X21+2104]
	031 Call 0x1C17F10
	032 Move X2, [X21]
	033 Move X1, X19
	034 Move X3, X31
	035 Move X21, X0
	036 Call Action`1<Object>..ctor, X0, X1, X2
	037 Move X0, X20
	038 Move X1, X21
	039 Move X2, X31
	040 Call Delegate.Combine, X0, X1
	041 Compare X0, 0
	042 JumpIfEqual {59}
	043 Move X20, [X23]
	044 Move X19, X0
	045 Move X1, X20
	046 Call 0x1C17E00
	047 Compare X0, 0
	048 JumpIfEqual {56}
	049 Move [X22+32], X0
	050 Move X20, [X23]
	051 Move X0, X19
	052 Move X1, X20
	053 Call 0x1C17E00
	054 Compare X0, 0
	055 JumpIfNotEqual {60}
	056 Move X0, X19
	057 Move X1, X20
	058 Call 0x1C181E0
	059 Move [X22+32], X31
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X30, [X31+48]
	065 Move X23, [X31+56]
	066 Return 
	067 Call 0x1C17F20

Method: System.Void ClearItem()

Disassembly:
	0x01D63380 LDR X8, [X0 + 0xB8]
	0x01D63384 LDR X8, [X8]
	0x01D63388 CBZ X8, 0x1D633CC
	0x01D6338C LDR X8, [X8 + 0xB8]
	0x01D63390 CBZ X8, 0x1D633CC
	0x01D63394 LDR X8, [X8 + 0x78]
	0x01D63398 CBZ X8, 0x1D633CC
	0x01D6339C ADRP X9, 0x2392000
	0x01D633A0 LDR X9, [X9 + 0x7D8]
	0x01D633A4 LDR X0, [X8 + 0x50]
	0x01D633A8 LDR X1, [X9]
	0x01D633AC BL 0x2653CA8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call ItemController.DestroyViews, X0
	005 Move X0, X19
	006 Move X1, X31
	007 Call Component.get_gameObject, X0
	008 Compare X0, 0
	009 JumpIfEqual {16}
	010 Move W1, W31
	011 Move X2, X31
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Call GameObject.SetActive, X0, X1
	015 Return 
	016 Call 0x1C17F20

Method: System.Void SetItem(AnimalCompany.AvatarItemState data, AnimalCompany.API.ApiAvatarItemType itemType, System.Boolean isNullAccesory = False)

Disassembly:
	0x01D636C4 STR X31, [X23 + 0x20]
	0x01D636C8 LDR X23, [X19 + 0x28]
	0x01D636CC CBZ X23, 0x1D63758
	0x01D636D0 LDR X0, [X22]
	0x01D636D4 ADRP X21, 0x2392000
	0x01D636D8 LDR X20, [X23 + 0x28]
	0x01D636DC LDR X21, [X21 + 0x800]
	0x01D636E0 BL 0x1C16F10
	0x01D636E4 LDR X2, [X21]
	0x01D636E8 MOV X1, X19
	0x01D636EC MOV X3, X31
	0x01D636F0 MOV X21, X0
	0x01D636F4 BL 0x2A6B948
	0x01D636F8 MOV X0, X20
	0x01D636FC MOV X1, X21
	0x01D63700 MOV X2, X31
	0x01D63704 BL 0x33C0DE4
	0x01D63708 CBZ X0, 0x1D63744
	0x01D6370C LDR X20, [X22]
	0x01D63710 MOV X19, X0
	0x01D63714 MOV X1, X20
	0x01D63718 BL 0x1C16E00
	0x01D6371C CBZ X0, 0x1D63738
	0x01D63720 STR X0, [X23 + 0x28]
	0x01D63724 LDR X20, [X22]
	0x01D63728 MOV X0, X19
	0x01D6372C MOV X1, X20
	0x01D63730 BL 0x1C16E00
	0x01D63734 CBNZ X0, 0x1D63748
	0x01D63738 MOV X0, X19
	0x01D6373C MOV X1, X20
	0x01D63740 BL 0x1C171E0
	0x01D63744 STR X31, [X23 + 0x28]
	0x01D63748 LDP X20, X19, [X31 + 0x20]
	0x01D6374C LDP X22, X21, [X31 + 0x10]
	0x01D63750 LDP X30, X23, [X31], #0x30
	0x01D63754 RET
	0x01D63758 BL 0x1C16F20
	0x01D6375C MOV X1, X31
	0x01D63760 B 0x3C36C30
	0x01D63764 STR X30, [X31 - 0x20]!
	0x01D63768 STP X20, X19, [X31 + 0x10]
	0x01D6376C LDR X19, [X0 + 0x20]
	0x01D63770 CBZ X19, 0x1D637C4
	0x01D63774 LDR W8, [X19 + 0x18]
	0x01D63778 CMP W8, 0x1
	0x01D6377C B.LT 0x1D637B4
	0x01D63780 MOV W20, W31
	0x01D63784 CMP W20, W8
	0x01D63788 B.CS 0x1D637C0
	0x01D6378C ADD X8, X19, W20, 0x3, SXTW
	0x01D63790 LDR X0, [X8 + 0x20]
	0x01D63794 CBZ X0, 0x1D637C4
	0x01D63798 MOVZ W1, 0x1
	0x01D6379C MOV X2, X31
	0x01D637A0 BL 0x3C357B4
	0x01D637A4 LDR W8, [X19 + 0x18]
	0x01D637A8 ADD W20, W20, 0x1
	0x01D637AC CMP W20, W8
	0x01D637B0 B.LT 0x1D63784
	0x01D637B4 LDP X20, X19, [X31 + 0x10]
	0x01D637B8 LDR X30, [X31], #0x20
	0x01D637BC RET
	0x01D637C0 BL 0x1C16F28
	0x01D637C4 BL 0x1C16F20
	0x01D637C8 STR X30, [X31 - 0x20]!
	0x01D637CC STP X20, X19, [X31 + 0x10]
	0x01D637D0 LDR X19, [X0 + 0x20]
	0x01D637D4 CBZ X19, 0x1D63828
	0x01D637D8 LDR W8, [X19 + 0x18]
	0x01D637DC CMP W8, 0x1
	0x01D637E0 B.LT 0x1D63818
	0x01D637E4 MOV W20, W31
	0x01D637E8 CMP W20, W8
	0x01D637EC B.CS 0x1D63824
	0x01D637F0 ADD X8, X19, W20, 0x3, SXTW
	0x01D637F4 LDR X0, [X8 + 0x20]
	0x01D637F8 CBZ X0, 0x1D63828
	0x01D637FC MOV W1, W31
	0x01D63800 MOV X2, X31
	0x01D63804 BL 0x3C357B4
	0x01D63808 LDR W8, [X19 + 0x18]
	0x01D6380C ADD W20, W20, 0x1
	0x01D63810 CMP W20, W8
	0x01D63814 B.LT 0x1D637E8
	0x01D63818 LDP X20, X19, [X31 + 0x10]
	0x01D6381C LDR X30, [X31], #0x20
	0x01D63820 RET
	0x01D63824 BL 0x1C16F28
	0x01D63828 BL 0x1C16F20
	0x01D6382C STP X30, X23, [X31 - 0x30]!
	0x01D63830 STP X22, X21, [X31 + 0x10]
	0x01D63834 STP X20, X19, [X31 + 0x20]
	0x01D63838 ADRP X20, 0x2675000
	0x01D6383C ADRP X21, 0x2392000
	0x01D63840 LDRB W8, [X20 + 0x84D]
	0x01D63844 LDR X21, [X21 + 0x808]
	0x01D63848 MOV X19, X0
	0x01D6384C TBNZ X8, 0x0, 0x1D6387C
	0x01D63850 ADRP X0, 0x2391000
	0x01D63854 LDR X0, [X0 + 0xE70]
	0x01D63858 BL 0x1C16CF4
	0x01D6385C ADRP X0, 0x2392000
	0x01D63860 LDR X0, [X0 + 0x808]
	0x01D63864 BL 0x1C16CF4
	0x01D63868 ADRP X0, 0x2392000
	0x01D6386C LDR X0, [X0 + 0x810]
	0x01D63870 BL 0x1C16CF4
	0x01D63874 MOVZ W8, 0x1
	0x01D63878 STRB W8, [X20 + 0x84D]
	0x01D6387C LDR X1, [X21]
	0x01D63880 MOV X0, X19
	0x01D63884 BL 0x21A3894
	0x01D63888 STR X0, [X19 + 0x40]
	0x01D6388C CBZ X0, 0x1D63910
	0x01D63890 ADRP X23, 0x2391000
	0x01D63894 LDR X23, [X23 + 0xE70]
	0x01D63898 MOV X20, X0
	0x01D6389C LDR X21, [X0 + 0x20]
	0x01D638A0 ADRP X22, 0x2392000
	0x01D638A4 LDR X0, [X23]
	0x01D638A8 LDR X22, [X22 + 0x810]
	0x01D638AC BL 0x1C16F10
	0x01D638B0 LDR X2, [X22]
	0x01D638B4 MOV X1, X19
	0x01D638B8 MOV X3, X31
	0x01D638BC MOV X22, X0
	0x01D638C0 BL 0x3314368
	0x01D638C4 MOV X0, X21
	0x01D638C8 MOV X1, X22
	0x01D638CC MOV X2, X31
	0x01D638D0 BL 0x33C0DE4
	0x01D638D4 CBZ X0, 0x1D638FC
	0x01D638D8 LDR X1, [X23]
	0x01D638DC LDR X8, [X0]
	0x01D638E0 CMP X8, X1
	0x01D638E4 B.NE 0x1D638F8
	0x01D638E8 STR X0, [X20 + 0x20]
	0x01D638EC LDR X8, [X0]
	0x01D638F0 CMP X8, X1
	0x01D638F4 B.EQ 0x1D63900
	0x01D638F8 BL 0x1C171E0
	0x01D638FC STR X0, [X20 + 0x20]
	0x01D63900 LDP X20, X19, [X31 + 0x20]
	0x01D63904 LDP X22, X21, [X31 + 0x10]
	0x01D63908 LDP X30, X23, [X31], #0x30
	0x01D6390C RET
	0x01D63910 BL 0x1C16F20
	0x01D63914 STP X30, X23, [X31 - 0x30]!
	0x01D63918 STP X22, X21, [X31 + 0x10]
	0x01D6391C STP X20, X19, [X31 + 0x20]
	0x01D63920 ADRP X20, 0x2675000
	0x01D63924 LDRB W8, [X20 + 0x84E]
	0x01D63928 MOV X19, X0
	0x01D6392C TBNZ X8, 0x0, 0x1D63950
	0x01D63930 ADRP X0, 0x2391000
	0x01D63934 LDR X0, [X0 + 0xE70]
	0x01D63938 BL 0x1C16CF4
	0x01D6393C ADRP X0, 0x2392000
	0x01D63940 LDR X0, [X0 + 0x810]
	0x01D63944 BL 0x1C16CF4
	0x01D63948 MOVZ W8, 0x1
	0x01D6394C STRB W8, [X20 + 0x84E]
	0x01D63950 LDR X22, [X19 + 0x40]
	0x01D63954 CBZ X22, 0x1D639D4
	0x01D63958 ADRP X23, 0x2391000
	0x01D6395C LDR X23, [X23 + 0xE70]
	0x01D63960 ADRP X21, 0x2392000
	0x01D63964 LDR X20, [X22 + 0x20]
	0x01D63968 LDR X0, [X23]
	0x01D6396C LDR X21, [X21 + 0x810]
	0x01D63970 BL 0x1C16F10
	0x01D63974 LDR X2, [X21]
	0x01D63978 MOV X1, X19
	0x01D6397C MOV X3, X31
	0x01D63980 MOV X21, X0
	0x01D63984 BL 0x3314368
	0x01D63988 MOV X0, X20
	0x01D6398C MOV X1, X21
	0x01D63990 MOV X2, X31
	0x01D63994 BL 0x33C0FDC
	0x01D63998 CBZ X0, 0x1D639C0
	0x01D6399C LDR X1, [X23]
	0x01D639A0 LDR X8, [X0]
	0x01D639A4 CMP X8, X1
	0x01D639A8 B.NE 0x1D639BC
	0x01D639AC STR X0, [X22 + 0x20]
	0x01D639B0 LDR X8, [X0]
	0x01D639B4 CMP X8, X1
	0x01D639B8 B.EQ 0x1D639C4
	0x01D639BC BL 0x1C171E0
	0x01D639C0 STR X0, [X22 + 0x20]
	0x01D639C4 LDP X20, X19, [X31 + 0x20]
	0x01D639C8 LDP X22, X21, [X31 + 0x10]
	0x01D639CC LDP X30, X23, [X31], #0x30
	0x01D639D0 RET
	0x01D639D4 BL 0x1C16F20
	0x01D639D8 LDR X8, [X0 + 0x38]
	0x01D639DC CBZ X8, 0x1D639F4
	0x01D639E0 MOV X1, X0
	0x01D639E4 LDR X3, [X8 + 0x18]
	0x01D639E8 LDR X0, [X8 + 0x40]
	0x01D639EC LDR X2, [X8 + 0x28]
	0x01D639F0 BR X3
	0x01D639F4 RET
	0x01D639F8 MOV X1, X31
	0x01D639FC B 0x3C36C30
	0x01D63A00 STR X30, [X31 - 0x50]!
	0x01D63A04 STP X26, X25, [X31 + 0x10]
	0x01D63A08 STP X24, X23, [X31 + 0x20]
	0x01D63A0C STP X22, X21, [X31 + 0x30]
	0x01D63A10 STP X20, X19, [X31 + 0x40]
	0x01D63A14 ADRP X23, 0x2675000
	0x01D63A18 ADRP X24, 0x2390000
	0x01D63A1C ADRP X20, 0x2392000
	0x01D63A20 ADRP X21, 0x2390000
	0x01D63A24 ADRP X22, 0x2390000
	0x01D63A28 LDRB W8, [X23 + 0x84F]
	0x01D63A2C LDR X24, [X24 + 0xDA0]
	0x01D63A30 LDR X20, [X20 + 0x818]
	0x01D63A34 LDR X21, [X21 + 0xDB0]
	0x01D63A38 LDR X22, [X22 + 0x648]
	0x01D63A3C MOV X19, X0
	0x01D63A40 TBNZ X8, 0x0, 0x1D63A94
	0x01D63A44 ADRP X0, 0x2392000
	0x01D63A48 LDR X0, [X0 + 0x820]
	0x01D63A4C BL 0x1C16CF4
	0x01D63A50 ADRP X0, 0x2390000
	0x01D63A54 LDR X0, [X0 + 0x648]
	0x01D63A58 BL 0x1C16CF4
	0x01D63A5C ADRP X0, 0x2392000
	0x01D63A60 LDR X0, [X0 + 0x818]
	0x01D63A64 BL 0x1C16CF4
	0x01D63A68 ADRP X0, 0x2392000
	0x01D63A6C LDR X0, [X0 + 0x828]
	0x01D63A70 BL 0x1C16CF4
	0x01D63A74 ADRP X0, 0x2390000
	0x01D63A78 LDR X0, [X0 + 0xDB0]
	0x01D63A7C BL 0x1C16CF4
	0x01D63A80 ADRP X0, 0x2390000
	0x01D63A84 LDR X0, [X0 + 0xDA0]
	0x01D63A88 BL 0x1C16CF4
	0x01D63A8C MOVZ W8, 0x1
	0x01D63A90 STRB W8, [X23 + 0x84F]
	0x01D63A94 LDR X0, [X24]
	0x01D63A98 BL 0x1C16F10
	0x01D63A9C LDR X2, [X20]
	0x01D63AA0 MOV X1, X19
	0x01D63AA4 MOV X3, X31
	0x01D63AA8 MOV X20, X0
	0x01D63AAC BL 0x35C52F0
	0x01D63AB0 LDR X0, [X21]
	0x01D63AB4 MOVZ W1, 0x1
	0x01D63AB8 BL 0x1C16D6C
	0x01D63ABC LDR X8, [X22]
	0x01D63AC0 MOV X21, X0
	0x01D63AC4 LDR W9, [X8 + 0xE0]
	0x01D63AC8 CBNZ W9, 0x1D63AD4
	0x01D63ACC MOV X0, X8
	0x01D63AD0 BL 0x1C16DFC
	0x01D63AD4 ADRP X23, 0x2675000
	0x01D63AD8 LDRB W8, [X23 + 0x787]
	0x01D63ADC CBNZ W8, 0x1D63AF4
	0x01D63AE0 ADRP X0, 0x2390000
	0x01D63AE4 LDR X0, [X0 + 0x648]
	0x01D63AE8 BL 0x1C16CF4
	0x01D63AEC MOVZ W8, 0x1
	0x01D63AF0 STRB W8, [X23 + 0x787]
	0x01D63AF4 LDR X0, [X22]
	0x01D63AF8 LDR W8, [X0 + 0xE0]
	0x01D63AFC CBNZ W8, 0x1D63B08
	0x01D63B00 BL 0x1C16DFC
	0x01D63B04 LDR X0, [X22]
	0x01D63B08 LDR X8, [X0 + 0xB8]
	0x01D63B0C LDR X8, [X8]
	0x01D63B10 CBZ X8, 0x1D63C30
	0x01D63B14 LDR X8, [X8 + 0xC0]
	0x01D63B18 CBZ X8, 0x1D63C30
	0x01D63B1C CBZ X21, 0x1D63C30
	0x01D63B20 LDR X22, [X8 + 0x48]
	0x01D63B24 CBZ X22, 0x1D63B3C
	0x01D63B28 LDR X8, [X21]
	0x01D63B2C MOV X0, X22
	0x01D63B30 LDR X1, [X8 + 0x40]
	0x01D63B34 BL 0x1C16E00
	0x01D63B38 CBZ X0, 0x1D63C38
	0x01D63B3C LDR W8, [X21 + 0x18]
	0x01D63B40 CBZ W8, 0x1D63C34
	0x01D63B44 MOV X0, X20
	0x01D63B48 MOV X1, X21
	0x01D63B4C MOV X2, X31
	0x01D63B50 STR X22, [X21 + 0x20]
	0x01D63B54 BL 0x1D363F0
	0x01D63B58 LDR X22, [X19 + 0x20]
	0x01D63B5C CBZ X22, 0x1D63C30
	0x01D63B60 LDR W8, [X22 + 0x18]
	0x01D63B64 CMP W8, 0x1
	0x01D63B68 B.LT 0x1D63C0C
	0x01D63B6C ADRP X24, 0x2392000
	0x01D63B70 ADRP X25, 0x2392000
	0x01D63B74 LDR X24, [X24 + 0x820]
	0x01D63B78 LDR X25, [X25 + 0x828]
	0x01D63B7C MOV W23, W31
	0x01D63B80 CMP W23, W8
	0x01D63B84 B.CS 0x1D63C34
	0x01D63B88 ADD X8, X22, W23, 0x3, SXTW
	0x01D63B8C LDR X26, [X8 + 0x20]
	0x01D63B90 CBZ X26, 0x1D63C30
	0x01D63B94 LDR X0, [X24]
	0x01D63B98 LDR X20, [X26 + 0x38]
	0x01D63B9C BL 0x1C16F10
	0x01D63BA0 LDR X2, [X25]
	0x01D63BA4 MOV X1, X19
	0x01D63BA8 MOV X3, X31
	0x01D63BAC MOV X21, X0
	0x01D63BB0 BL 0x2A6B948
	0x01D63BB4 MOV X0, X20
	0x01D63BB8 MOV X1, X21
	0x01D63BBC MOV X2, X31
	0x01D63BC0 BL 0x33C0DE4
	0x01D63BC4 CBZ X0, 0x1D63BF8
	0x01D63BC8 LDR X21, [X24]
	0x01D63BCC MOV X20, X0
	0x01D63BD0 MOV X1, X21
	0x01D63BD4 BL 0x1C16E00
	0x01D63BD8 CBZ X0, 0x1D63C24
	0x01D63BDC STR X0, [X26 + 0x38]
	0x01D63BE0 LDR X21, [X24]
	0x01D63BE4 MOV X0, X20
	0x01D63BE8 MOV X1, X21
	0x01D63BEC BL 0x1C16E00
	0x01D63BF0 CBNZ X0, 0x1D63BFC
	0x01D63BF4 B 0x1D63C24
	0x01D63BF8 STR X31, [X26 + 0x38]
	0x01D63BFC LDR W8, [X22 + 0x18]
	0x01D63C00 ADD W23, W23, 0x1
	0x01D63C04 CMP W23, W8
	0x01D63C08 B.LT 0x1D63B80
	0x01D63C0C LDP X20, X19, [X31 + 0x40]
	0x01D63C10 LDP X22, X21, [X31 + 0x30]
	0x01D63C14 LDP X24, X23, [X31 + 0x20]
	0x01D63C18 LDP X26, X25, [X31 + 0x10]
	0x01D63C1C LDR X30, [X31], #0x50
	0x01D63C20 RET
	0x01D63C24 MOV X0, X20
	0x01D63C28 MOV X1, X21
	0x01D63C2C BL 0x1C171E0
	0x01D63C30 BL 0x1C16F20
	0x01D63C34 BL 0x1C16F28
	0x01D63C38 BL 0x1C16F44
	0x01D63C3C MOV X1, X31
	0x01D63C40 BL 0x1C16DEC
	0x01D63C44 STP X30, X23, [X31 - 0x30]!
	0x01D63C48 STP X22, X21, [X31 + 0x10]
	0x01D63C4C STP X20, X19, [X31 + 0x20]
	0x01D63C50 ADRP X22, 0x2675000
	0x01D63C54 ADRP X23, 0x2390000
	0x01D63C58 ADRP X20, 0x2392000
	0x01D63C5C ADRP X21, 0x2390000
	0x01D63C60 LDRB W8, [X22 + 0x850]
	0x01D63C64 LDR X23, [X23 + 0xDA0]
	0x01D63C68 LDR X20, [X20 + 0x818]
	0x01D63C6C LDR X21, [X21 + 0x648]
	0x01D63C70 MOV X19, X0
	0x01D63C74 TBNZ X8, 0x0, 0x1D63CA4
	0x01D63C78 ADRP X0, 0x2390000
	0x01D63C7C LDR X0, [X0 + 0x648]
	0x01D63C80 BL 0x1C16CF4
	0x01D63C84 ADRP X0, 0x2392000
	0x01D63C88 LDR X0, [X0 + 0x818]
	0x01D63C8C BL 0x1C16CF4
	0x01D63C90 ADRP X0, 0x2390000
	0x01D63C94 LDR X0, [X0 + 0xDA0]
	0x01D63C98 BL 0x1C16CF4
	0x01D63C9C MOVZ W8, 0x1
	0x01D63CA0 STRB W8, [X22 + 0x850]
	0x01D63CA4 LDR X0, [X23]
	0x01D63CA8 BL 0x1C16F10
	0x01D63CAC LDR X2, [X20]
	0x01D63CB0 MOV X1, X19
	0x01D63CB4 MOV X3, X31
	0x01D63CB8 MOV X20, X0
	0x01D63CBC BL 0x35C52F0
	0x01D63CC0 LDR X0, [X21]
	0x01D63CC4 LDR W8, [X0 + 0xE0]
	0x01D63CC8 CBNZ W8, 0x1D63CD0
	0x01D63CCC BL 0x1C16DFC
	0x01D63CD0 MOV X0, X20
	0x01D63CD4 LDP X20, X19, [X31 + 0x20]
	0x01D63CD8 LDP X22, X21, [X31 + 0x10]
	0x01D63CDC MOV X1, X31
	0x01D63CE0 LDP X30, X23, [X31], #0x30
	0x01D63CE4 B 0x1D36978
	0x01D63CE8 SUB X31, X31, 0x50
	0x01D63CEC STR X30, [X31 + 0x10]
	0x01D63CF0 STP X24, X23, [X31 + 0x20]
	0x01D63CF4 STP X22, X21, [X31 + 0x30]
	0x01D63CF8 STP X20, X19, [X31 + 0x40]
	0x01D63CFC ADRP X21, 0x2675000
	0x01D63D00 ADRP X20, 0x2390000
	0x01D63D04 LDRB W8, [X21 + 0x851]
	0x01D63D08 LDR X20, [X20 + 0x648]
	0x01D63D0C MOV X19, X0
	0x01D63D10 TBNZ X8, 0x0, 0x1D63D4C
	0x01D63D14 ADRP X0, 0x2390000
	0x01D63D18 LDR X0, [X0 + 0x648]
	0x01D63D1C BL 0x1C16CF4
	0x01D63D20 ADRP X0, 0x2391000
	0x01D63D24 LDR X0, [X0 + 0x420]
	0x01D63D28 BL 0x1C16CF4
	0x01D63D2C ADRP X0, 0x2390000
	0x01D63D30 LDR X0, [X0 + 0xDC8]
	0x01D63D34 BL 0x1C16CF4
	0x01D63D38 ADRP X0, 0x2391000
	0x01D63D3C LDR X0, [X0 + 0xB50]
	0x01D63D40 BL 0x1C16CF4
	0x01D63D44 MOVZ W8, 0x1
	0x01D63D48 STRB W8, [X21 + 0x851]
	0x01D63D4C LDR X0, [X20]
	0x01D63D50 STR X31, [X31 + 0x18]
	0x01D63D54 STR W31, [X31 + 0xC]
	0x01D63D58 LDR W8, [X0 + 0xE0]
	0x01D63D5C CBNZ W8, 0x1D63D64
	0x01D63D60 BL 0x1C16DFC
	0x01D63D64 ADRP X21, 0x2675000
	0x01D63D68 LDRB W8, [X21 + 0x787]
	0x01D63D6C CBNZ W8, 0x1D63D84
	0x01D63D70 ADRP X0, 0x2390000
	0x01D63D74 LDR X0, [X0 + 0x648]
	0x01D63D78 BL 0x1C16CF4
	0x01D63D7C MOVZ W8, 0x1
	0x01D63D80 STRB W8, [X21 + 0x787]
	0x01D63D84 LDR X0, [X20]
	0x01D63D88 LDR W8, [X0 + 0xE0]
	0x01D63D8C CBNZ W8, 0x1D63D98
	0x01D63D90 BL 0x1C16DFC
	0x01D63D94 LDR X0, [X20]
	0x01D63D98 LDR X8, [X0 + 0xB8]
	0x01D63D9C LDR X9, [X8]
	0x01D63DA0 CBZ X9, 0x1D63E94
	0x01D63DA4 LDR X20, [X19 + 0x20]
	0x01D63DA8 CBZ X20, 0x1D63E94
	0x01D63DAC LDR W8, [X20 + 0x18]
	0x01D63DB0 CMP W8, 0x1
	0x01D63DB4 B.LT 0x1D63E7C
	0x01D63DB8 ADRP X23, 0x2391000
	0x01D63DBC LDR X22, [X9 + 0xC0]
	0x01D63DC0 LDR X23, [X23 + 0x420]
	0x01D63DC4 MOV W21, W31
	0x01D63DC8 CMP W21, W8
	0x01D63DCC B.CS 0x1D63E98
	0x01D63DD0 CBZ X22, 0x1D63E94
	0x01D63DD4 ADD X8, X20, W21, 0x3, SXTW
	0x01D63DD8 LDR X24, [X8 + 0x20]
	0x01D63DDC CBZ X24, 0x1D63E94
	0x01D63DE0 LDR X0, [X22 + 0x48]
	0x01D63DE4 CBZ X0, 0x1D63E94
	0x01D63DE8 LDR X1, [X24 + 0x20]
	0x01D63DEC LDR X3, [X23]
	0x01D63DF0 ADD X2, X31, 0x18
	0x01D63DF4 BL 0x2609E34
	0x01D63DF8 TBZ X0, 0x0, 0x1D63E6C
	0x01D63DFC LDR X8, [X31 + 0x18]
	0x01D63E00 CBZ X8, 0x1D63E94
	0x01D63E04 LDR X8, [X8 + 0x70]
	0x01D63E08 CBZ X8, 0x1D63E94
	0x01D63E0C LDR W8, [X8 + 0x4C]
	0x01D63E10 LDR X19, [X24 + 0x28]
	0x01D63E14 ADD X0, X31, 0xC
	0x01D63E18 MOV X1, X31
	0x01D63E1C STR W8, [X31 + 0xC]
	0x01D63E20 BL 0x337B6E0
	0x01D63E24 CBZ X19, 0x1D63E94
	0x01D63E28 LDR X8, [X19]
	0x01D63E2C MOV X1, X0
	0x01D63E30 MOV X0, X19
	0x01D63E34 LDR X9, [X8 + 0x558]
	0x01D63E38 LDR X2, [X8 + 0x560]
	0x01D63E3C BLR X9
	0x01D63E40 LDR X8, [X31 + 0x18]
	0x01D63E44 CBZ X8, 0x1D63E94
	0x01D63E48 LDR X8, [X8 + 0x60]
	0x01D63E4C CBZ X8, 0x1D63E94
	0x01D63E50 LDR X0, [X24 + 0x30]
	0x01D63E54 CBZ X0, 0x1D63E94
	0x01D63E58 LDR X9, [X0]
	0x01D63E5C LDR X1, [X8 + 0x50]
	0x01D63E60 LDR X8, [X9 + 0x558]
	0x01D63E64 LDR X2, [X9 + 0x560]
	0x01D63E68 BLR X8
	0x01D63E6C LDR W8, [X20 + 0x18]
	0x01D63E70 ADD W21, W21, 0x1
	0x01D63E74 CMP W21, W8

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+80], D14
	003 Move [X31+88], D13
	004 Move [X31+96], D12
	005 Move [X31+104], D11
	006 Move [X31+112], D10
	007 Move [X31+120], D9
	008 Move [X31+128], D8
	009 Move [X31+136], X30
	010 Move [X31+144], X26
	011 Move [X31+152], X25
	012 Move [X31+160], X24
	013 Move [X31+168], X23
	014 Move [X31+176], X22
	015 Move [X31+184], X21
	016 Move [X31+192], X20
	017 Move [X31+200], X19
	018 Move X23, 0x2676000
	019 Move W8, [X23+2133]
	020 Move W21, W3
	021 Move W22, W2
	022 Move X20, X1
	023 Move X19, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {60}
	028 Move X0, 0x2391000
	029 Move X0, [X0+2600]
	030 Call 0x1C17CF4
	031 Move X0, 0x2393000
	032 Move X0, [X0+1928]
	033 Call 0x1C17CF4
	034 Move X0, 0x2393000
	035 Move X0, [X0+1936]
	036 Call 0x1C17CF4
	037 Move X0, 0x2391000
	038 Move X0, [X0+3448]
	039 Call 0x1C17CF4
	040 Move X0, 0x2391000
	041 Move X0, [X0+1432]
	042 Call 0x1C17CF4
	043 Move X0, 0x2392000
	044 Move X0, [X0+2896]
	045 Call 0x1C17CF4
	046 Move X0, 0x2392000
	047 Move X0, [X0+504]
	048 Call 0x1C17CF4
	049 Move X0, 0x2393000
	050 Move X0, [X0+1944]
	051 Call 0x1C17CF4
	052 Move X0, 0x2393000
	053 Move X0, [X0+1952]
	054 Call 0x1C17CF4
	055 Move X0, 0x2393000
	056 Move X0, [X0+1960]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X23+2133], W8
	060 Move X25, 0x2391000
	061 Move X24, 0x2391000
	062 Move X25, [X25+1432]
	063 Move X24, [X24+3448]
	064 Move [X31+72], X31
	065 Move [X31+68], W31
	066 Move [X19+128], X20
	067 Move [X19+140], W22
	068 Move TEMP, X21
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {167}
	072 Move W8, 1
	073 Move [X19+136], W8
	074 Move X0, [X25]
	075 Move X20, [X19+64]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X1, [X24]
	081 Move X0, X20
	082 Call 0x222E35C, X0
	083 Compare X0, 0
	084 JumpIfEqual {554}
	085 Move X1, X31
	086 Move X20, X0
	087 Call GameObject.get_transform, X0
	088 Compare X0, 0
	089 JumpIfEqual {554}
	090 Move X1, [X19+80]
	091 Move W2, W31
	092 Move X3, X31
	093 Call Transform.SetParent, X0, X1, X2
	094 Move X0, X20
	095 Move X1, X31
	096 Call GameObject.get_transform, X0
	097 Move X22, 0x2676000
	098 Move W8, [X22+1923]
	099 Move X21, X0
	100 Compare W8, 0
	101 JumpIfNotEqual {107}
	102 Move X0, 0x2391000
	103 Move X0, [X0+1440]
	104 Call 0x1C17CF4
	105 Move W8, 1
	106 Move [X22+1923], W8
	107 Compare X21, 0
	108 JumpIfEqual {554}
	109 Move X8, 0x2391000
	110 Move X8, [X8+1440]
	111 Move X0, X21
	112 Move X1, X31
	113 Move X8, [X8]
	114 Move X8, [X8+184]
	115 Move S1, [X8+4]
	116 Move S2, [X8+8]
	117 Move V0, [X8]
	118 Call Transform.set_localPosition, X0, X1
	119 Move X0, X20
	120 Move X1, X31
	121 Call GameObject.get_transform, X0
	122 Move X21, 0x2676000
	123 Move W8, [X21+1939]
	124 Move X20, X0
	125 Compare W8, 0
	126 JumpIfNotEqual {132}
	127 Move X0, 0x2392000
	128 Move X0, [X0+1448]
	129 Call 0x1C17CF4
	130 Move W8, 1
	131 Move [X21+1939], W8
	132 Compare X20, 0
	133 JumpIfEqual {554}
	134 Move X8, 0x2392000
	135 Move X8, [X8+1448]
	136 Move X0, X20
	137 Move X1, X31
	138 Move X8, [X8]
	139 Move X8, [X8+184]
	140 Move S2, [X8+8]
	141 Move S3, [X8+12]
	142 Move S0, [X8]
	143 Move S1, [X8+4]
	144 Call Transform.set_localRotation, X0, X1
	145 Move X0, [X19+72]
	146 Compare X0, 0
	147 JumpIfEqual {554}
	148 Move W1, W31
	149 Move X2, X31
	150 Call GameObject.SetActive, X0, X1
	151 Move X0, [X19+96]
	152 Compare X0, 0
	153 JumpIfEqual {554}
	154 Move W1, W31
	155 Move X2, X31
	156 Call GameObject.SetActive, X0, X1
	157 Move X0, [X19+88]
	158 Compare X0, 0
	159 JumpIfEqual {554}
	160 Move X9, 0x2393000
	161 Move X8, [X0]
	162 Move X9, [X9+1944]
	163 Move X2, [X8+1376]
	164 Move X1, [X9]
	165 Move X9, [X8+1368]
	166 NotImplemented "Instruction BLR not yet implemented."
	167 Compare X20, 0
	168 JumpIfEqual {208}
	169 Move X23, 0x2392000
	170 Move X21, [X19+88]
	171 Move X0, [X20+80]
	172 Move X23, [X23+504]
	173 Move X1, [X23]
	174 Call StatePrimitive`1<Object>.op_Implicit, X0
	175 Compare X21, 0
	176 JumpIfEqual {554}
	177 Move X8, [X21]
	178 Move X1, X0
	179 Move X0, X21
	180 Move X9, [X8+1368]
	181 Move X2, [X8+1376]
	182 NotImplemented "Instruction BLR not yet implemented."
	183 Move X0, [X19+48]
	184 Move [X19+136], W31
	185 Compare X0, 0
	186 JumpIfEqual {554}
	187 Move X1, X31
	188 Call AvatarSystemCatalog.get_shopPrefabsLookup, X0
	189 Move X8, [X20+72]
	190 Move X1, [X23]
	191 Move X21, X0
	192 Move X0, X8
	193 Call StatePrimitive`1<Object>.op_Implicit, X0
	194 Compare X21, 0
	195 JumpIfEqual {554}
	196 Move X8, 0x2393000
	197 Move X8, [X8+1928]
	198 Move X1, X0
	199 Add X2, X31, 72
	200 Move X0, X21
	201 Move X3, [X8]
	202 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfNotEqual {220}
	207 Move X21, [X31+72]
	208 Move X8, 0x2391000
	209 Move X8, [X8+2600]
	210 Move X0, [X8]
	211 Move W8, [X0+224]
	212 Compare W8, 0
	213 JumpIfNotEqual {215}
	214 Call 0x1C17DFC
	215 Move X8, 0x2393000
	216 Move X8, [X8+1952]
	217 Move X1, X31
	218 Move X0, [X8]
	219 Call Debug.LogWarning, X0
	220 Move X21, [X19+56]
	221 Move [X31+72], X21
	222 Move X0, [X25]
	223 Move W8, [X0+224]
	224 Compare W8, 0
	225 JumpIfNotEqual {227}
	226 Call 0x1C17DFC
	227 Move X1, [X24]
	228 Move X0, X21
	229 Call 0x222E35C, X0
	230 Compare X0, 0
	231 JumpIfEqual {554}
	232 Move X1, X31
	233 Move X21, X0
	234 Call GameObject.get_transform, X0
	235 Compare X0, 0
	236 JumpIfEqual {554}
	237 Move X1, X31
	238 Call Transform.get_position, X0
	239 Move X24, 0x2676000
	240 Move W8, [X24+1923]
	241 Move V8, V0
	242 Move [X31], D1
	243 Move [X31+16], D2
	244 Compare W8, 0
	245 JumpIfNotEqual {251}
	246 Move X0, 0x2391000
	247 Move X0, [X0+1440]
	248 Call 0x1C17CF4
	249 Move W8, 1
	250 Move [X24+1923], W8
	251 Move X25, 0x2391000
	252 Move X25, [X25+1440]
	253 Move X9, 0x2393000
	254 Move X0, X21
	255 Move X8, [X25]
	256 Move X8, [X8+184]
	257 Move X9, [X9+1936]
	258 Move V11, [X8]
	259 Move X1, [X9]
	260 NotImplemented "Instruction LDUR not yet implemented."
	261 Call 0x21E6F08, X0
	262 Move [X31+68], W31
	263 Compare X0, 0
	264 JumpIfEqual {554}
	265 Move W9, [X0+24]
	266 Move V1, [X31+1]
	267 NotImplemented "Instruction MOVI not yet implemented."
	268 NotImplemented "Instruction INVALID not yet implemented."
	269 Move S10, 0.5
	270 Move X22, X0
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Multiply S11, S11, S10
	273 Move V2, [X31]
	274 Move W8, W31
	275 Move V1.S[1], V2.S[0]
	276 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Add X8, X22, W8
	279 Move X0, [X8+32]
	280 Move [X31], V2
	281 Move [X31+8], V1
	282 Compare X0, 0
	283 JumpIfEqual {554}
	284 Add X8, X31, 40
	285 Move X1, X31
	286 Call Renderer.get_bounds, X0
	287 Move V0, [X31+40]
	288 NotImplemented "Instruction LDUR not yet implemented."
	289 Move V2, [X31+52]
	290 Move V3, [X31+56]
	291 Move V16, [X31]
	292 Move V7, [X31+16]
	293 Subtract S4, S8, S11
	294 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	295 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	296 Subtract V5, V7, V16
	297 Add V7, V16, V7
	298 Subtract S16, S0, S2
	299 Add S6, S11, S8
	300 Add S0, S0, S2
	301 Subtract V2, V1, V3
	302 NotImplemented "Instruction FCMP not yet implemented."
	303 Add V1, V1, V3
	304 NotImplemented "Instruction FCSEL not yet implemented."
	305 NotImplemented "Instruction INVALID not yet implemented."
	306 NotImplemented "Instruction FCMP not yet implemented."
	307 Move W8, [X31+68]
	308 NotImplemented "Instruction INVALID not yet implemented."
	309 NotImplemented "Instruction INVALID not yet implemented."
	310 NotImplemented "Instruction FCSEL not yet implemented."
	311 NotImplemented "Instruction INVALID not yet implemented."
	312 Subtract S5, S5, S3
	313 Subtract V2, V2, V4
	314 Multiply S5, S5, S10
	315 NotImplemented "Instruction INVALID not yet implemented."
	316 Add S3, S3, S5
	317 Add W8, W8, 1
	318 Add V4, V4, V2
	319 Subtract S6, S3, S5
	320 Move [X31+68], W8
	321 Subtract V7, V4, V2
	322 Add S3, S5, S3
	323 Add V2, V2, V4
	324 NotImplemented "Instruction FCMP not yet implemented."
	325 Move W9, [X22+24]
	326 NotImplemented "Instruction INVALID not yet implemented."
	327 NotImplemented "Instruction INVALID not yet implemented."
	328 NotImplemented "Instruction FCSEL not yet implemented."
	329 NotImplemented "Instruction FCMP not yet implemented."
	330 NotImplemented "Instruction INVALID not yet implemented."
	331 NotImplemented "Instruction INVALID not yet implemented."
	332 NotImplemented "Instruction FCSEL not yet implemented."
	333 Subtract V1, V1, V4
	334 Subtract S0, S0, S6
	335 NotImplemented "Instruction INVALID not yet implemented."
	336 Multiply S11, S0, S10
	337 NotImplemented "Instruction CMP not yet implemented."
	338 Add S8, S6, S11
	339 Add V1, V4, V2
	340 Move S0, V2.S[1]
	341 Move S2, V0.S[1]
	342 Move W8, [X24+1923]
	343 Add S10, S11, S11
	344 Add S9, S0, S0
	345 Add S8, S2, S2
	346 Compare W8, 0
	347 JumpIfNotEqual {353}
	348 Move X0, 0x2391000
	349 Move X0, [X0+1440]
	350 Call 0x1C17CF4
	351 Move W8, 1
	352 Move [X24+1923], W8
	353 Move X8, [X25]
	354 Move X8, [X8+184]
	355 Move S0, [X8]
	356 Move S1, [X8+4]
	357 Move V2, [X8+8]
	358 Move X8, -19369984
	359 Subtract S0, S10, S0
	360 Subtract S1, S9, S1
	361 Multiply S0, S0, S0
	362 Multiply S1, S1, S1
	363 Add S0, S0, S1
	364 Move V1, [X8+3872]
	365 Subtract S2, S8, S2
	366 Multiply S2, S2, S2
	367 Add S0, S2, S0
	368 NotImplemented "Instruction FCMP not yet implemented."
	369 Move X0, [X20+80]
	370 Move X1, [X23]
	371 Call StatePrimitive`1<Object>.op_Implicit, X0
	372 Move X8, 0x2393000
	373 Move X8, [X8+1960]
	374 Move X1, X0
	375 Move X2, X31
	376 Move X8, [X8]
	377 Move X0, X8
	378 Call String.Concat, X0, X1
	379 Move X8, 0x2391000
	380 Move X8, [X8+2600]
	381 Move X22, X0
	382 Move X8, [X8]
	383 Move W9, [X8+224]
	384 Compare W9, 0
	385 JumpIfNotEqual {388}
	386 Move X0, X8
	387 Call 0x1C17DFC
	388 Move X0, X22
	389 Move X1, X31
	390 Call Debug.LogWarning, X0
	391 Move X0, X21
	392 Move X1, X31
	393 Call GameObject.get_transform, X0
	394 Move X26, 0x2676000
	395 Move W8, [X26+2139]
	396 Move X22, X0
	397 Compare W8, 0
	398 JumpIfNotEqual {404}
	399 Move X0, 0x2391000
	400 Move X0, [X0+1440]
	401 Call 0x1C17CF4
	402 Move W8, 1
	403 Move [X26+2139], W8
	404 Move X8, [X25]
	405 Move X26, 0x2676000
	406 Move W9, [X26+1924]
	407 Move V13, [X19+112]
	408 Move X8, [X8+184]
	409 Move S14, [X8+12]
	410 Move S12, [X8+16]
	411 Move V11, [X8+20]
	412 Compare W9, 0
	413 JumpIfNotEqual {419}
	414 Move X0, 0x2391000
	415 Move X0, [X0+1448]
	416 Call 0x1C17CF4
	417 Move W8, 1
	418 Move [X26+1924], W8
	419 Move X8, 0x2391000
	420 Move X8, [X8+1448]
	421 Move X0, [X8]
	422 Move W8, [X0+224]
	423 Compare W8, 0
	424 JumpIfNotEqual {426}
	425 Call 0x1C17DFC
	426 Compare X22, 0
	427 JumpIfEqual {554}
	428 Multiply S3, S10, S10
	429 Multiply S4, S9, S9
	430 Multiply S5, S8, S8
	431 Add S3, S4, S3
	432 Add S3, S5, S3
	433 Multiply S0, S14, S13
	434 Multiply S1, S12, S13
	435 Multiply S2, S11, S13
	436 NotImplemented "Instruction FSQRT not yet implemented."
	437 NotImplemented "Instruction FDIV not yet implemented."
	438 NotImplemented "Instruction FDIV not yet implemented."
	439 NotImplemented "Instruction FDIV not yet implemented."
	440 Move X0, X22
	441 Move X1, X31
	442 Call Transform.set_localScale, X0, X1
	443 Move X0, [X20+72]
	444 Move X1, [X23]
	445 Call StatePrimitive`1<Object>.op_Implicit, X0
	446 Call AvatarItemUtil.IsItemOwned, X0
	447 Move X8, [X19+96]
	448 Compare X8, 0
	449 JumpIfEqual {554}
	450 NotImplemented "Instruction ORN not yet implemented."
	451 Move W22, W0
	452 And W1, W9, 1
	453 Move X0, X8
	454 Move X2, X31
	455 Call GameObject.SetActive, X0, X1
	456 Move TEMP, X22
	457 And TEMP, TEMP, 1
	458 Compare TEMP, 1
	459 JumpIfEqual {477}
	460 Move X8, [X20+112]
	461 Compare X8, 0
	462 JumpIfEqual {554}
	463 Move W8, [X8+76]
	464 Move X20, [X19+104]
	465 Add X0, X31, 68
	466 Move X1, X31
	467 Move [X31+68], W8
	468 Call Int32.ToString, X0
	469 Compare X20, 0
	470 JumpIfEqual {554}
	471 Move X8, [X20]
	472 Move X1, X0
	473 Move X0, X20
	474 Move X9, [X8+1368]
	475 Move X2, [X8+1376]
	476 NotImplemented "Instruction BLR not yet implemented."
	477 Move X0, X21
	478 Move X1, X31
	479 Call GameObject.get_transform, X0
	480 Compare X0, 0
	481 JumpIfEqual {554}
	482 Move X1, [X19+80]
	483 Move W2, W31
	484 Move X3, X31
	485 Call Transform.SetParent, X0, X1, X2
	486 Move X0, X21
	487 Move X1, X31
	488 Call GameObject.get_transform, X0
	489 Move W8, [X24+1923]
	490 Move X20, X0
	491 Compare W8, 0
	492 JumpIfNotEqual {498}
	493 Move X0, 0x2391000
	494 Move X0, [X0+1440]
	495 Call 0x1C17CF4
	496 Move W8, 1
	497 Move [X24+1923], W8
	498 Compare X20, 0
	499 JumpIfEqual {554}
	500 Move X8, [X25]
	501 Move X0, X20
	502 Move X1, X31
	503 Move X8, [X8+184]
	504 Move S1, [X8+4]
	505 Move S2, [X8+8]
	506 Move V0, [X8]
	507 Call Transform.set_localPosition, X0, X1
	508 Move X0, X21
	509 Move X1, X31
	510 Call GameObject.get_transform, X0
	511 Move X21, 0x2676000
	512 Move W8, [X21+1939]
	513 Move X20, X0
	514 Compare W8, 0
	515 JumpIfNotEqual {521}
	516 Move X0, 0x2392000
	517 Move X0, [X0+1448]
	518 Call 0x1C17CF4
	519 Move W8, 1
	520 Move [X21+1939], W8
	521 Compare X20, 0
	522 JumpIfEqual {554}
	523 Move X8, 0x2392000
	524 Move X8, [X8+1448]
	525 Move X0, X20
	526 Move X1, X31
	527 Move X8, [X8]
	528 Move X8, [X8+184]
	529 Move S2, [X8+8]
	530 Move S3, [X8+12]
	531 Move S0, [X8]
	532 Move S1, [X8+4]
	533 Call Transform.set_localRotation, X0, X1
	534 Move X0, X19
	535 Call ItemController.UpdateIsEquipped, X0
	536 Move X20, [X31+192]
	537 Move X19, [X31+200]
	538 Move X22, [X31+176]
	539 Move X21, [X31+184]
	540 Move X24, [X31+160]
	541 Move X23, [X31+168]
	542 Move X26, [X31+144]
	543 Move X25, [X31+152]
	544 Move X30, [X31+136]
	545 Move D9, [X31+120]
	546 Move D8, [X31+128]
	547 Move D11, [X31+104]
	548 Move D10, [X31+112]
	549 Move D13, [X31+88]
	550 Move D12, [X31+96]
	551 Move V14, [X31+80]
	552 Add X31, X31, 208
	553 Return 
	554 Call 0x1C17F20
	555 Call 0x1C17F28

Method: System.Void UpdateIsEquipped()

Disassembly:
	0x01D6217C LDR X0, [X8 + 0x20]
	0x01D62180 CBZ X0, 0x1D621C8
	0x01D62184 MOVZ W1, 0x1
	0x01D62188 MOV X2, X31
	0x01D6218C BL 0x3C357B4
	0x01D62190 LDR W8, [X20 + 0x18]
	0x01D62194 ADD W21, W21, 0x1
	0x01D62198 CMP W21, W8
	0x01D6219C B.LT 0x1D62170
	0x01D621A0 LDR X0, [X19 + 0x30]
	0x01D621A4 CBZ X0, 0x1D621C8
	0x01D621A8 LDR X1, [X19 + 0xA8]
	0x01D621AC BL 0x1D60244
	0x01D621B0 LDR X1, [X19 + 0xA8]
	0x01D621B4 MOV X0, X19
	0x01D621B8 LDP X20, X19, [X31 + 0x20]
	0x01D621BC LDP X22, X21, [X31 + 0x10]
	0x01D621C0 LDR X30, [X31], #0x30
	0x01D621C4 B 0x1D5F7E8
	0x01D621C8 BL 0x1C16F20
	0x01D621CC BL 0x1C16F28
	0x01D621D0 SUB X31, X31, 0x40
	0x01D621D4 STR D8, [X31 + 0x10]
	0x01D621D8 STP X30, X21, [X31 + 0x20]
	0x01D621DC STP X20, X19, [X31 + 0x30]
	0x01D621E0 MOV X19, X0
	0x01D621E4 LDR X0, [X0 + 0x60]
	0x01D621E8 CBZ X0, 0x1D62324
	0x01D621EC MOV V8.16B, V0.16B
	0x01D621F0 FMOV S0, 1
	0x01D621F4 FSUB S0, S0, S8
	0x01D621F8 MOV X1, X31
	0x01D621FC BL 0x3E222A8
	0x01D62200 LDR X0, [X19 + 0x60]
	0x01D62204 CBZ X0, 0x1D62324
	0x01D62208 MOV X1, X31
	0x01D6220C BL 0x3C32E90
	0x01D62210 ADRP X21, 0x2676000
	0x01D62214 LDRB W8, [X21 + 0x85B]
	0x01D62218 MOV X20, X0
	0x01D6221C CBNZ W8, 0x1D62234
	0x01D62220 ADRP X0, 0x2391000
	0x01D62224 LDR X0, [X0 + 0x5A0]
	0x01D62228 BL 0x1C16CF4
	0x01D6222C MOVZ W8, 0x1
	0x01D62230 STRB W8, [X21 + 0x85B]
	0x01D62234 FMOV S0, 1
	0x01D62238 FCMP S8, 0x0
	0x01D6223C FMIN S0, S8, S0
	0x01D62240 FMOV S1, W31
	0x01D62244 FCSEL S4, S0, S1, PL
	0x01D62248 CBZ X20, 0x1D62324
	0x01D6224C ADRP X8, 0x2391000
	0x01D62250 LDR X8, [X8 + 0x5A0]
	0x01D62254 FMOV S2, 1.5
	0x01D62258 FMOV V3.2S, 0x0
	0x01D6225C MOV X0, X20
	0x01D62260 LDR X8, [X8]
	0x01D62264 MOV X1, X31
	0x01D62268 STR V4, [X31]
	0x01D6226C LDR X8, [X8 + 0xB8]
	0x01D62270 LDR V0, [X8 + 0x14]
	0x01D62274 LDUR V1, [X8 + 0xC]
	0x01D62278 FSUB S2, S2, S0
	0x01D6227C FSUB V3.2S, V3.2S, V1.2S
	0x01D62280 FMUL S2, S4, S2
	0x00000000 INVALID
	0x01D62288 FADD S2, S0, S2
	0x01D6228C FADD V0.2S, V1.2S, V3.2S
	0x01D62290 MOV S1, V0.S[1]
	0x01D62294 BL 0x3C3FC4C
	0x01D62298 LDR X0, [X19 + 0x60]
	0x01D6229C CBZ X0, 0x1D62324
	0x01D622A0 MOV X1, X31
	0x01D622A4 BL 0x3C32E90
	0x01D622A8 LDR X8, [X19 + 0x60]
	0x01D622AC CBZ X8, 0x1D62324
	0x01D622B0 MOV X20, X0
	0x01D622B4 MOV X0, X8
	0x01D622B8 MOV X1, X31
	0x01D622BC BL 0x3C32E90
	0x01D622C0 CBZ X0, 0x1D62324
	0x01D622C4 MOV X1, X31
	0x01D622C8 BL 0x3C3EB78
	0x01D622CC LDR X0, [X19 + 0x60]
	0x01D622D0 CBZ X0, 0x1D62324
	0x01D622D4 MOV X1, X31
	0x01D622D8 MOV V8.16B, V0.16B
	0x01D622DC BL 0x3C32E90
	0x01D622E0 CBZ X0, 0x1D62324
	0x01D622E4 MOV X1, X31
	0x01D622E8 BL 0x3C3EB78
	0x01D622EC CBZ X20, 0x1D62324
	0x01D622F0 LDR V2, [X31]
	0x01D622F4 FMOV S0, -1.5
	0x01D622F8 MOV X0, X20
	0x01D622FC LDP X20, X19, [X31 + 0x30]
	0x01D62300 FMUL S0, S2, S0
	0x01D62304 FMOV S2, W31
	0x01D62308 FADD S2, S0, S2
	0x01D6230C MOV V0.16B, V8.16B
	0x01D62310 LDP X30, X21, [X31 + 0x20]
	0x01D62314 LDR V8, [X31 + 0x10]
	0x01D62318 MOV X1, X31
	0x01D6231C ADD X31, X31, 0x40
	0x01D62320 B 0x3C3EC04
	0x01D62324 BL 0x1C16F20
	0x01D62328 STR D8, [X31 - 0x10]!
	0x01D6232C STR X30, [X31 + 0x8]
	0x01D62330 LDR X0, [X0 + 0x50]
	0x01D62334 CBZ X0, 0x1D6237C
	0x01D62338 MOV X1, X31
	0x01D6233C MOV V8.16B, V0.16B
	0x01D62340 BL 0x3C32E90
	0x01D62344 CBZ X0, 0x1D6237C
	0x01D62348 FMOV S1, 1
	0x01D6234C FMOV S2, 5
	0x01D62350 FMIN S1, S8, S1
	0x01D62354 LDR X30, [X31 + 0x8]
	0x01D62358 FMUL S1, S1, S2
	0x01D6235C FCMP S8, 0x0
	0x01D62360 FSUB S1, S2, S1
	0x01D62364 FMOV S0, W31
	0x01D62368 FCSEL S2, S1, S2, PL
	0x01D6236C FMOV S1, W31
	0x01D62370 MOV X1, X31
	0x01D62374 LDR V8, [X31], #0x10
	0x01D62378 B 0x3C3EC04
	0x01D6237C BL 0x1C16F20
	0x01D62380 STP X30, X19, [X31 - 0x10]!
	0x01D62384 MOV X19, X0
	0x01D62388 BL 0x1D64128
	0x01D6238C MOV X0, X19
	0x01D62390 MOV X1, X31
	0x01D62394 BL 0x3C32ECC
	0x01D62398 CBZ X0, 0x1D623AC
	0x01D6239C MOV W1, W31
	0x01D623A0 MOV X2, X31
	0x01D623A4 LDP X30, X19, [X31], #0x10
	0x01D623A8 B 0x3C357B4
	0x01D623AC BL 0x1C16F20
	0x01D623B0 SUB X31, X31, 0x80
	0x01D623B4 STP X30, X25, [X31 + 0x40]
	0x01D623B8 STP X24, X23, [X31 + 0x50]
	0x01D623BC STP X22, X21, [X31 + 0x60]
	0x01D623C0 STP X20, X19, [X31 + 0x70]
	0x01D623C4 ADRP X23, 0x2676000
	0x01D623C8 ADRP X22, 0x2393000
	0x01D623CC ADRP X19, 0x2393000
	0x01D623D0 ADRP X21, 0x2391000
	0x01D623D4 LDRB W8, [X23 + 0x845]
	0x01D623D8 LDR X22, [X22 + 0x770]
	0x01D623DC LDR X19, [X19 + 0x778]
	0x01D623E0 LDR X21, [X21 + 0x648]
	0x01D623E4 MOV W20, W1
	0x01D623E8 TBNZ X8, 0x0, 0x1D62484
	0x01D623EC ADRP X0, 0x2391000
	0x01D623F0 LDR X0, [X0 + 0x648]
	0x01D623F4 BL 0x1C16CF4
	0x01D623F8 ADRP X0, 0x2393000
	0x01D623FC LDR X0, [X0 + 0x658]
	0x01D62400 BL 0x1C16CF4
	0x01D62404 ADRP X0, 0x2393000
	0x01D62408 LDR X0, [X0 + 0x660]
	0x01D6240C BL 0x1C16CF4
	0x01D62410 ADRP X0, 0x2393000
	0x01D62414 LDR X0, [X0 + 0x668]
	0x01D62418 BL 0x1C16CF4
	0x01D6241C ADRP X0, 0x2393000
	0x01D62420 LDR X0, [X0 + 0x780]
	0x01D62424 BL 0x1C16CF4
	0x01D62428 ADRP X0, 0x2393000
	0x01D6242C LDR X0, [X0 + 0x778]
	0x01D62430 BL 0x1C16CF4
	0x01D62434 ADRP X0, 0x2393000
	0x01D62438 LDR X0, [X0 + 0x770]
	0x01D6243C BL 0x1C16CF4
	0x01D62440 ADRP X0, 0x2393000
	0x01D62444 LDR X0, [X0 + 0x5E8]
	0x01D62448 BL 0x1C16CF4
	0x01D6244C ADRP X0, 0x2392000
	0x01D62450 LDR X0, [X0 + 0xEB8]
	0x01D62454 BL 0x1C16CF4
	0x01D62458 ADRP X0, 0x2392000
	0x01D6245C LDR X0, [X0 + 0xAD8]
	0x01D62460 BL 0x1C16CF4
	0x01D62464 ADRP X0, 0x2392000
	0x01D62468 LDR X0, [X0 + 0x1F8]
	0x01D6246C BL 0x1C16CF4
	0x01D62470 ADRP X0, 0x2393000
	0x01D62474 LDR X0, [X0 + 0x670]
	0x01D62478 BL 0x1C16CF4
	0x01D6247C MOVZ W8, 0x1
	0x01D62480 STRB W8, [X23 + 0x845]
	0x01D62484 LDR X0, [X22]
	0x01D62488 STP X31, X31, [X31 + 0x20]
	0x01D6248C STR X31, [X31 + 0x30]
	0x01D62490 BL 0x1C16F10
	0x01D62494 LDR X1, [X19]
	0x01D62498 MOV X19, X0
	0x01D6249C BL 0x301B7C4
	0x01D624A0 LDR X0, [X21]
	0x01D624A4 LDR W8, [X0 + 0xE0]
	0x01D624A8 CBNZ W8, 0x1D624B0
	0x01D624AC BL 0x1C16DFC
	0x01D624B0 ADRP X22, 0x2676000
	0x01D624B4 LDRB W8, [X22 + 0x787]
	0x01D624B8 CBNZ W8, 0x1D624D0
	0x01D624BC ADRP X0, 0x2391000
	0x01D624C0 LDR X0, [X0 + 0x648]
	0x01D624C4 BL 0x1C16CF4
	0x01D624C8 MOVZ W8, 0x1
	0x01D624CC STRB W8, [X22 + 0x787]
	0x01D624D0 LDR X0, [X21]
	0x01D624D4 LDR W8, [X0 + 0xE0]
	0x01D624D8 CBNZ W8, 0x1D624E4
	0x01D624DC BL 0x1C16DFC
	0x01D624E0 LDR X0, [X21]
	0x01D624E4 LDR X8, [X0 + 0xB8]
	0x01D624E8 LDR X8, [X8]
	0x01D624EC CBZ X8, 0x1D62640
	0x01D624F0 LDR X8, [X8 + 0xC8]
	0x01D624F4 CBZ X8, 0x1D62640
	0x01D624F8 LDR X0, [X8 + 0x50]
	0x01D624FC CBZ X0, 0x1D62640
	0x01D62500 ADRP X8, 0x2393000
	0x01D62504 LDR X8, [X8 + 0x5E8]
	0x01D62508 LDR X1, [X8]
	0x01D6250C BL 0x2608758
	0x01D62510 CBZ X0, 0x1D62640
	0x01D62514 ADRP X8, 0x2393000
	0x01D62518 LDR X8, [X8 + 0x670]
	0x01D6251C ADRP X23, 0x2393000
	0x01D62520 LDR X23, [X23 + 0x660]
	0x01D62524 ADRP X24, 0x2392000
	0x01D62528 LDR X1, [X8]
	0x01D6252C ADRP X25, 0x2393000
	0x01D62530 ADRP X22, 0x2393000
	0x01D62534 LDR X24, [X24 + 0x1F8]
	0x01D62538 LDR X25, [X25 + 0x780]
	0x01D6253C LDR X22, [X22 + 0x658]
	0x01D62540 ADD X8, X31, 0x8
	0x01D62544 BL 0x275A7AC
	0x01D62548 LDUR V0, [X31 + 0x8]
	0x01D6254C LDR X8, [X31 + 0x18]
	0x01D62550 STR V0, [X31 + 0x2]
	0x01D62554 STR X8, [X31 + 0x30]
	0x01D62558 LDR X1, [X23]
	0x01D6255C ADD X0, X31, 0x20
	0x01D62560 BL 0x2C0B1F0
	0x01D62564 TBZ X0, 0x0, 0x1D62604
	0x01D62568 LDR X21, [X31 + 0x30]
	0x01D6256C CBZ X21, 0x1D6262C
	0x01D62570 LDR X8, [X21 + 0x58]
	0x01D62574 CBZ X8, 0x1D62630
	0x01D62578 LDR W8, [X8 + 0x4C]
	0x01D6257C CMP W8, W20
	0x01D62580 B.NE 0x1D62558
	0x01D62584 LDR X8, [X21 + 0x60]
	0x01D62588 CBZ X8, 0x1D62634
	0x01D6258C LDRB W8, [X8 + 0x4C]
	0x01D62590 CBNZ W8, 0x1D625A8
	0x01D62594 LDR X0, [X21 + 0x48]
	0x01D62598 LDR X1, [X24]
	0x01D6259C BL 0x265C594
	0x01D625A0 BL 0x1D5D508
	0x01D625A4 TBZ X0, 0x0, 0x1D62558
	0x01D625A8 CBZ X19, 0x1D6263C
	0x01D625AC LDR W10, [X19 + 0x1C]
	0x01D625B0 LDR X8, [X19 + 0x10]
	0x01D625B4 LDR X9, [X25]
	0x01D625B8 ADD W10, W10, 0x1
	0x01D625BC STR W10, [X19 + 0x1C]
	0x01D625C0 CBZ X8, 0x1D62638
	0x01D625C4 LDRSW X10, [X19 + 0x18]
	0x01D625C8 LDR W11, [X8 + 0x18]
	0x01D625CC CMP W10, W11
	0x01D625D0 B.CS 0x1D625E8
	0x01D625D4 ADD W9, W10, 0x1
	0x01D625D8 ADD X8, X8, X10, 0x3, LSL
	0x01D625DC STR W9, [X19 + 0x18]
	0x01D625E0 STR X21, [X8 + 0x20]
	0x01D625E4 B 0x1D62558
	0x01D625E8 LDR X8, [X9 + 0x20]
	0x01D625EC LDR X8, [X8 + 0xC0]
	0x01D625F0 LDR X2, [X8 + 0x70]
	0x01D625F4 MOV X0, X19
	0x01D625F8 MOV X1, X21
	0x01D625FC BL 0x301BF90
	0x01D62600 B 0x1D62558
	0x01D62604 LDR X1, [X22]
	0x01D62608 ADD X0, X31, 0x20
	0x01D6260C BL 0x2C0B1EC
	0x01D62610 MOV X0, X19
	0x01D62614 LDP X20, X19, [X31 + 0x70]
	0x01D62618 LDP X22, X21, [X31 + 0x60]
	0x01D6261C LDP X24, X23, [X31 + 0x50]
	0x01D62620 LDP X30, X25, [X31 + 0x40]
	0x01D62624 ADD X31, X31, 0x80
	0x01D62628 RET
	0x01D6262C BL 0x1C16F20
	0x01D62630 BL 0x1C16F20
	0x01D62634 BL 0x1C16F20
	0x01D62638 BL 0x1C16F20
	0x01D6263C BL 0x1C16F20
	0x01D62640 BL 0x1C16F20
	0x01D62644 B 0x1D62660
	0x01D62648 B 0x1D62660
	0x01D6264C B 0x1D62660
	0x01D62650 B 0x1D62660
	0x01D62654 B 0x1D62660
	0x01D62658 B 0x1D62660
	0x01D6265C B 0x1D62660
	0x01D62660 MOV X20, X0
	0x01D62664 CMP W1, 0x1
	0x01D62668 B.NE 0x1D62694
	0x01D6266C MOV X0, X20
	0x01D62670 BL 0x3EB1AD0
	0x01D62674 LDR X21, [X0]
	0x01D62678 BL 0x3EB1AE0
	0x01D6267C LDR X1, [X22]
	0x01D62680 ADD X0, X31, 0x20
	0x01D62684 BL 0x2C0B1EC
	0x01D62688 CBZ X21, 0x1D62610
	0x01D6268C MOV X0, X21
	0x01D62690 BL 0x1C16F18
	0x01D62694 MOV X21, X31
	0x01D62698 B 0x1D626A0
	0x01D6269C MOV X20, X0
	0x01D626A0 LDR X1, [X22]
	0x01D626A4 ADD X0, X31, 0x20
	0x01D626A8 BL 0x2C0B1EC
	0x01D626AC CBNZ X21, 0x1D626B8
	0x01D626B0 MOV X0, X20
	0x01D626B4 BL 0x1D2C690
	0x01D626B8 MOV X0, X21
	0x01D626BC BL 0x1C16F18
	0x01D626C0 BL 0x1990590
	0x01D626C4 SUB X31, X31, 0xD0
	0x01D626C8 STR D14, [X31 + 0x50]
	0x01D626CC STP D13, D12, [X31 + 0x58]
	0x01D626D0 STP D11, D10, [X31 + 0x68]
	0x01D626D4 STP D9, D8, [X31 + 0x78]
	0x01D626D8 STR X30, [X31 + 0x88]
	0x01D626DC STP X26, X25, [X31 + 0x90]
	0x01D626E0 STP X24, X23, [X31 + 0xA0]
	0x01D626E4 STP X22, X21, [X31 + 0xB0]
	0x01D626E8 STP X20, X19, [X31 + 0xC0]
	0x01D626EC ADRP X23, 0x2676000
	0x01D626F0 LDRB W8, [X23 + 0x855]
	0x01D626F4 MOV W21, W3
	0x01D626F8 MOV W22, W2
	0x01D626FC MOV X20, X1
	0x01D62700 MOV X19, X0
	0x01D62704 TBNZ X8, 0x0, 0x1D62788
	0x01D62708 ADRP X0, 0x2391000
	0x01D6270C LDR X0, [X0 + 0xA28]
	0x01D62710 BL 0x1C16CF4
	0x01D62714 ADRP X0, 0x2393000
	0x01D62718 LDR X0, [X0 + 0x788]
	0x01D6271C BL 0x1C16CF4
	0x01D62720 ADRP X0, 0x2393000
	0x01D62724 LDR X0, [X0 + 0x790]
	0x01D62728 BL 0x1C16CF4
	0x01D6272C ADRP X0, 0x2391000
	0x01D62730 LDR X0, [X0 + 0xD78]
	0x01D62734 BL 0x1C16CF4
	0x01D62738 ADRP X0, 0x2391000
	0x01D6273C LDR X0, [X0 + 0x598]
	0x01D62740 BL 0x1C16CF4
	0x01D62744 ADRP X0, 0x2392000
	0x01D62748 LDR X0, [X0 + 0xB50]
	0x01D6274C BL 0x1C16CF4
	0x01D62750 ADRP X0, 0x2392000
	0x01D62754 LDR X0, [X0 + 0x1F8]
	0x01D62758 BL 0x1C16CF4
	0x01D6275C ADRP X0, 0x2393000
	0x01D62760 LDR X0, [X0 + 0x798]
	0x01D62764 BL 0x1C16CF4
	0x01D62768 ADRP X0, 0x2393000
	0x01D6276C LDR X0, [X0 + 0x7A0]
	0x01D62770 BL 0x1C16CF4
	0x01D62774 ADRP X0, 0x2393000
	0x01D62778 LDR X0, [X0 + 0x7A8]
	0x01D6277C BL 0x1C16CF4
	0x01D62780 MOVZ W8, 0x1
	0x01D62784 STRB W8, [X23 + 0x855]
	0x01D62788 ADRP X25, 0x2391000
	0x01D6278C ADRP X24, 0x2391000
	0x01D62790 LDR X25, [X25 + 0x598]
	0x01D62794 LDR X24, [X24 + 0xD78]
	0x01D62798 STR X31, [X31 + 0x48]
	0x01D6279C STR W31, [X31 + 0x44]
	0x01D627A0 STR X20, [X19 + 0x80]
	0x01D627A4 STR W22, [X19 + 0x8C]
	0x01D627A8 TBZ X21, 0x0, 0x1D628F8
	0x01D627AC MOVZ W8, 0x1
	0x01D627B0 STRB W8, [X19 + 0x88]
	0x01D627B4 LDR X0, [X25]
	0x01D627B8 LDR X20, [X19 + 0x40]
	0x01D627BC LDR W8, [X0 + 0xE0]
	0x01D627C0 CBNZ W8, 0x1D627C8
	0x01D627C4 BL 0x1C16DFC
	0x01D627C8 LDR X1, [X24]
	0x01D627CC MOV X0, X20
	0x01D627D0 BL 0x222D35C
	0x01D627D4 CBZ X0, 0x1D62E70
	0x01D627D8 MOV X1, X31
	0x01D627DC MOV X20, X0
	0x01D627E0 BL 0x3C356F8
	0x01D627E4 CBZ X0, 0x1D62E70
	0x01D627E8 LDR X1, [X19 + 0x50]
	0x01D627EC MOV W2, W31
	0x01D627F0 MOV X3, X31
	0x01D627F4 BL 0x3C3FEB8
	0x01D627F8 MOV X0, X20
	0x01D627FC MOV X1, X31
	0x01D62800 BL 0x3C356F8
	0x01D62804 ADRP X22, 0x2676000
	0x01D62808 LDRB W8, [X22 + 0x783]
	0x01D6280C MOV X21, X0
	0x01D62810 CBNZ W8, 0x1D62828
	0x01D62814 ADRP X0, 0x2391000
	0x01D62818 LDR X0, [X0 + 0x5A0]
	0x01D6281C BL 0x1C16CF4
	0x01D62820 MOVZ W8, 0x1
	0x01D62824 STRB W8, [X22 + 0x783]
	0x01D62828 CBZ X21, 0x1D62E70
	0x01D6282C ADRP X8, 0x2391000
	0x01D62830 LDR X8, [X8 + 0x5A0]
	0x01D62834 MOV X0, X21
	0x01D62838 MOV X1, X31
	0x01D6283C LDR X8, [X8]
	0x01D62840 LDR X8, [X8 + 0xB8]
	0x01D62844 LDP S1, S2, [X8 + 0x4]
	0x01D62848 LDR V0, [X8]
	0x01D6284C BL 0x3C3EC04
	0x01D62850 MOV X0, X20
	0x01D62854 MOV X1, X31
	0x01D62858 BL 0x3C356F8
	0x01D6285C ADRP X21, 0x2676000
	0x01D62860 LDRB W8, [X21 + 0x793]
	0x01D62864 MOV X20, X0
	0x01D62868 CBNZ W8, 0x1D62880
	0x01D6286C ADRP X0, 0x2392000
	0x01D62870 LDR X0, [X0 + 0x5A8]
	0x01D62874 BL 0x1C16CF4
	0x01D62878 MOVZ W8, 0x1
	0x01D6287C STRB W8, [X21 + 0x793]
	0x01D62880 CBZ X20, 0x1D62E70
	0x01D62884 ADRP X8, 0x2392000
	0x01D62888 LDR X8, [X8 + 0x5A8]
	0x01D6288C MOV X0, X20
	0x01D62890 MOV X1, X31
	0x01D62894 LDR X8, [X8]
	0x01D62898 LDR X8, [X8 + 0xB8]
	0x01D6289C LDP S2, S3, [X8 + 0x8]
	0x01D628A0 LDP S0, S1, [X8]
	0x01D628A4 BL 0x3C3F8B8
	0x01D628A8 LDR X0, [X19 + 0x48]
	0x01D628AC CBZ X0, 0x1D62E70
	0x01D628B0 MOV W1, W31
	0x01D628B4 MOV X2, X31
	0x01D628B8 BL 0x3C357B4
	0x01D628BC LDR X0, [X19 + 0x60]
	0x01D628C0 CBZ X0, 0x1D62E70
	0x01D628C4 MOV W1, W31
	0x01D628C8 MOV X2, X31
	0x01D628CC BL 0x3C357B4
	0x01D628D0 LDR X0, [X19 + 0x58]
	0x01D628D4 CBZ X0, 0x1D62E70
	0x01D628D8 ADRP X9, 0x2393000
	0x01D628DC LDR X8, [X0]
	0x01D628E0 LDR X9, [X9 + 0x798]
	0x01D628E4 LDR X2, [X8 + 0x560]
	0x01D628E8 LDR X1, [X9]
	0x01D628EC LDR X9, [X8 + 0x558]
	0x01D628F0 BLR X9
	0x01D628F4 B 0x1D62E3C
	0x01D628F8 CBZ X20, 0x1D62984
	0x01D628FC ADRP X23, 0x2392000
	0x01D62900 LDR X21, [X19 + 0x58]
	0x01D62904 LDR X0, [X20 + 0x50]
	0x01D62908 LDR X23, [X23 + 0x1F8]
	0x01D6290C LDR X1, [X23]
	0x01D62910 BL 0x265C594
	0x01D62914 CBZ X21, 0x1D62E70
	0x01D62918 LDR X8, [X21]
	0x01D6291C MOV X1, X0
	0x01D62920 MOV X0, X21
	0x01D62924 LDR X9, [X8 + 0x558]
	0x01D62928 LDR X2, [X8 + 0x560]
	0x01D6292C BLR X9
	0x01D62930 LDR X0, [X19 + 0x30]
	0x01D62934 STRB W31, [X19 + 0x88]
	0x01D62938 CBZ X0, 0x1D62E70
	0x01D6293C MOV X1, X31
	0x01D62940 BL 0x1D65128
	0x01D62944 LDR X8, [X20 + 0x48]
	0x01D62948 LDR X1, [X23]
	0x01D6294C MOV X21, X0
	0x01D62950 MOV X0, X8
	0x01D62954 BL 0x265C594
	0x01D62958 CBZ X21, 0x1D62E70
	0x01D6295C ADRP X8, 0x2393000
	0x01D62960 LDR X8, [X8 + 0x788]
	0x01D62964 MOV X1, X0
	0x01D62968 ADD X2, X31, 0x48
	0x01D6296C MOV X0, X21
	0x01D62970 LDR X3, [X8]
	0x01D62974 BL 0x2AA6B2C
	0x01D62978 TBZ X0, 0x0, 0x1D629B4
	0x01D6297C LDR X21, [X31 + 0x48]
	0x01D62980 B 0x1D629BC
	0x01D62984 ADRP X8, 0x2391000
	0x01D62988 LDR X8, [X8 + 0xA28]
	0x01D6298C LDR X0, [X8]
	0x01D62990 LDR W8, [X0 + 0xE0]
	0x01D62994 CBNZ W8, 0x1D6299C
	0x01D62998 BL 0x1C16DFC
	0x01D6299C ADRP X8, 0x2393000
	0x01D629A0 LDR X8, [X8 + 0x7A0]
	0x01D629A4 MOV X1, X31
	0x01D629A8 LDR X0, [X8]
	0x01D629AC BL 0x3C06A04
	0x01D629B0 B 0x1D62E44
	0x01D629B4 LDR X21, [X19 + 0x38]
	0x01D629B8 STR X21, [X31 + 0x48]
	0x01D629BC LDR X0, [X25]
	0x01D629C0 LDR W8, [X0 + 0xE0]
	0x01D629C4 CBNZ W8, 0x1D629CC
	0x01D629C8 BL 0x1C16DFC
	0x01D629CC LDR X1, [X24]
	0x01D629D0 MOV X0, X21
	0x01D629D4 BL 0x222D35C
	0x01D629D8 CBZ X0, 0x1D62E70
	0x01D629DC MOV X1, X31
	0x01D629E0 MOV X21, X0
	0x01D629E4 BL 0x3C356F8
	0x01D629E8 CBZ X0, 0x1D62E70
	0x01D629EC MOV X1, X31
	0x01D629F0 BL 0x3C3F58C
	0x01D629F4 ADRP X24, 0x2676000
	0x01D629F8 LDRB W8, [X24 + 0x783]
	0x01D629FC MOV V8.16B, V0.16B
	0x01D62A00 STR D1, [X31]
	0x01D62A04 STR D2, [X31 + 0x10]
	0x01D62A08 CBNZ W8, 0x1D62A20
	0x01D62A0C ADRP X0, 0x2391000
	0x01D62A10 LDR X0, [X0 + 0x5A0]
	0x01D62A14 BL 0x1C16CF4
	0x01D62A18 MOVZ W8, 0x1
	0x01D62A1C STRB W8, [X24 + 0x783]
	0x01D62A20 ADRP X25, 0x2391000
	0x01D62A24 LDR X25, [X25 + 0x5A0]
	0x01D62A28 ADRP X9, 0x2393000
	0x01D62A2C MOV X0, X21
	0x01D62A30 LDR X8, [X25]
	0x01D62A34 LDR X8, [X8 + 0xB8]
	0x01D62A38 LDR X9, [X9 + 0x790]
	0x01D62A3C LDR V11, [X8]
	0x01D62A40 LDR X1, [X9]
	0x01D62A44 LDUR V10, [X8 + 0x4]
	0x01D62A48 BL 0x21E5F08
	0x01D62A4C STR W31, [X31 + 0x44]
	0x01D62A50 CBZ X0, 0x1D62E70
	0x01D62A54 LDR W9, [X0 + 0x18]
	0x01D62A58 LDR V1, [X31 + 0x1]
	0x01D62A5C MOVI V9.2S, 0x3F, 0x18
	0x00000000 INVALID
	0x01D62A64 FMOV S10, 0.5
	0x01D62A68 MOV X22, X0
	0x01D62A6C CMP W9, 0x1
	0x01D62A70 FMUL S11, S11, S10
	0x01D62A74 B.LT 0x1D62B88
	0x01D62A78 LDR V2, [X31]
	0x01D62A7C MOV W8, W31
	0x01D62A80 MOV V1.S[1], V2.S[0]
	0x01D62A84 UNIMPLEMENTED
	0x01D62A88 CMP W8, W9
	0x01D62A8C B.CS 0x1D62E74
	0x01D62A90 ADD X8, X22, W8, 0x3, SXTW
	0x01D62A94 LDR X0, [X8 + 0x20]
	0x01D62A98 STP V2, V1, [X31]
	0x01D62A9C CBZ X0, 0x1D62E70
	0x01D62AA0 ADD X8, X31, 0x28
	0x01D62AA4 MOV X1, X31
	0x01D62AA8 BL 0x3C12A28
	0x01D62AAC LDR V0, [X31 + 0x28]
	0x01D62AB0 LDUR V1, [X31 + 0x2C]
	0x01D62AB4 LDR V2, [X31 + 0x34]
	0x01D62AB8 LDR V3, [X31 + 0x38]
	0x01D62ABC LDP V16, V7, [X31]
	0x01D62AC0 FSUB S4, S8, S11
	0x01D62AC4 UNIMPLEMENTED
	0x01D62AC8 UNIMPLEMENTED
	0x01D62ACC FSUB V5.2S, V7.2S, V16.2S
	0x01D62AD0 FADD V7.2S, V16.2S, V7.2S
	0x01D62AD4 FSUB S16, S0, S2
	0x01D62AD8 FADD S6, S11, S8
	0x01D62ADC FADD S0, S0, S2
	0x01D62AE0 FSUB V2.2S, V1.2S, V3.2S
	0x01D62AE4 FCMP S4, S16
	0x01D62AE8 FADD V1.2S, V1.2S, V3.2S
	0x01D62AEC FCSEL S3, S4, S16, MI
	0x00000000 INVALID
	0x01D62AF4 FCMP S6, S16
	0x01D62AF8 LDR W8, [X31 + 0x44]
	0x00000000 INVALID
	0x00000000 INVALID
	0x01D62B04 FCSEL S5, S6, S16, GT
	0x00000000 INVALID
	0x01D62B0C FSUB S5, S5, S3
	0x01D62B10 FSUB V2.2S, V2.2S, V4.2S
	0x01D62B14 FMUL S5, S5, S10
	0x00000000 INVALID
	0x01D62B1C FADD S3, S3, S5
	0x01D62B20 ADD W8, W8, 0x1
	0x01D62B24 FADD V4.2S, V4.2S, V2.2S
	0x01D62B28 FSUB S6, S3, S5
	0x01D62B2C STR W8, [X31 + 0x44]
	0x01D62B30 FSUB V7.2S, V4.2S, V2.2S
	0x01D62B34 FADD S3, S5, S3
	0x01D62B38 FADD V2.2S, V2.2S, V4.2S
	0x01D62B3C FCMP S6, S0
	0x01D62B40 LDR W9, [X22 + 0x18]
	0x00000000 INVALID
	0x00000000 INVALID
	0x01D62B4C FCSEL S6, S6, S0, MI
	0x01D62B50 FCMP S3, S0
	0x00000000 INVALID
	0x00000000 INVALID
	0x01D62B5C FCSEL S0, S3, S0, GT
	0x01D62B60 FSUB V1.2S, V1.2S, V4.2S
	0x01D62B64 FSUB S0, S0, S6
	0x00000000 INVALID
	0x01D62B6C FMUL S11, S0, S10
	0x01D62B70 CMP W8, W9
	0x01D62B74 FADD S8, S6, S11
	0x01D62B78 FADD V1.2S, V4.2S, V2.2S
	0x01D62B7C B.LT 0x1D62A88
	0x01D62B80 MOV S0, V2.S[1]
	0x01D62B84 B 0x1D62B8C
	0x01D62B88 MOV S2, V0.S[1]
	0x01D62B8C LDRB W8, [X24 + 0x783]
	0x01D62B90 FADD S10, S11, S11
	0x01D62B94 FADD S9, S0, S0
	0x01D62B98 FADD S8, S2, S2
	0x01D62B9C CBNZ W8, 0x1D62BB4
	0x01D62BA0 ADRP X0, 0x2391000
	0x01D62BA4 LDR X0, [X0 + 0x5A0]
	0x01D62BA8 BL 0x1C16CF4
	0x01D62BAC MOVZ W8, 0x1
	0x01D62BB0 STRB W8, [X24 + 0x783]
	0x01D62BB4 LDR X8, [X25]
	0x01D62BB8 LDR X8, [X8 + 0xB8]
	0x01D62BBC LDP S0, S1, [X8]
	0x01D62BC0 LDR V2, [X8 + 0x8]
	0x01D62BC4 ADRP X8, 0xFFFFFFFFFED87000
	0x01D62BC8 FSUB S0, S10, S0
	0x01D62BCC FSUB S1, S9, S1
	0x01D62BD0 FMUL S0, S0, S0
	0x01D62BD4 FMUL S1, S1, S1
	0x01D62BD8 FADD S0, S0, S1
	0x01D62BDC LDR V1, [X8 + 0xF20]
	0x01D62BE0 FSUB S2, S8, S2
	0x01D62BE4 FMUL S2, S2, S2
	0x01D62BE8 FADD S0, S2, S0
	0x01D62BEC FCMP S0, S1
	0x01D62BF0 B.PL 0x1D62C4C
	0x01D62BF4 LDR X0, [X20 + 0x50]
	0x01D62BF8 LDR X1, [X23]
	0x01D62BFC BL 0x265C594
	0x01D62C00 ADRP X8, 0x2393000
	0x01D62C04 LDR X8, [X8 + 0x7A8]
	0x01D62C08 MOV X1, X0
	0x01D62C0C MOV X2, X31
	0x01D62C10 LDR X8, [X8]
	0x01D62C14 MOV X0, X8
	0x01D62C18 BL 0x321B938
	0x01D62C1C ADRP X8, 0x2391000
	0x01D62C20 LDR X8, [X8 + 0xA28]
	0x01D62C24 MOV X22, X0
	0x01D62C28 LDR X8, [X8]
	0x01D62C2C LDR W9, [X8 + 0xE0]
	0x01D62C30 CBNZ W9, 0x1D62C3C
	0x01D62C34 MOV X0, X8
	0x01D62C38 BL 0x1C16DFC
	0x01D62C3C MOV X0, X22
	0x01D62C40 MOV X1, X31
	0x01D62C44 BL 0x3C06A04
	0x01D62C48 B 0x1D62D08
	0x01D62C4C MOV X0, X21
	0x01D62C50 MOV X1, X31
	0x01D62C54 BL 0x3C356F8
	0x01D62C58 ADRP X26, 0x2676000
	0x01D62C5C LDRB W8, [X26 + 0x85B]
	0x01D62C60 MOV X22, X0
	0x01D62C64 CBNZ W8, 0x1D62C7C
	0x01D62C68 ADRP X0, 0x2391000
	0x01D62C6C LDR X0, [X0 + 0x5A0]
	0x01D62C70 BL 0x1C16CF4
	0x01D62C74 MOVZ W8, 0x1
	0x01D62C78 STRB W8, [X26 + 0x85B]
	0x01D62C7C LDR X8, [X25]
	0x01D62C80 ADRP X26, 0x2676000
	0x01D62C84 LDRB W9, [X26 + 0x784]
	0x01D62C88 LDR V13, [X19 + 0x70]
	0x01D62C8C LDR X8, [X8 + 0xB8]
	0x01D62C90 LDP S14, S12, [X8 + 0xC]
	0x01D62C94 LDR V11, [X8 + 0x14]
	0x01D62C98 CBNZ W9, 0x1D62CB0
	0x01D62C9C ADRP X0, 0x2391000
	0x01D62CA0 LDR X0, [X0 + 0x5A8]
	0x01D62CA4 BL 0x1C16CF4
	0x01D62CA8 MOVZ W8, 0x1
	0x01D62CAC STRB W8, [X26 + 0x784]
	0x01D62CB0 ADRP X8, 0x2391000
	0x01D62CB4 LDR X8, [X8 + 0x5A8]
	0x01D62CB8 LDR X0, [X8]
	0x01D62CBC LDR W8, [X0 + 0xE0]
	0x01D62CC0 CBNZ W8, 0x1D62CC8
	0x01D62CC4 BL 0x1C16DFC
	0x01D62CC8 CBZ X22, 0x1D62E70
	0x01D62CCC FMUL S3, S10, S10
	0x01D62CD0 FMUL S4, S9, S9
	0x01D62CD4 FMUL S5, S8, S8
	0x01D62CD8 FADD S3, S4, S3
	0x01D62CDC FADD S3, S5, S3
	0x01D62CE0 FMUL S0, S14, S13
	0x01D62CE4 FMUL S1, S12, S13
	0x01D62CE8 FMUL S2, S11, S13
	0x01D62CEC FSQRT S3, S3
	0x01D62CF0 FDIV S2, S2, S3
	0x01D62CF4 FDIV S1, S1, S3
	0x01D62CF8 FDIV S0, S0, S3
	0x01D62CFC MOV X0, X22
	0x01D62D00 MOV X1, X31
	0x01D62D04 BL 0x3C3FC4C
	0x01D62D08 LDR X0, [X20 + 0x48]
	0x01D62D0C LDR X1, [X23]
	0x01D62D10 BL 0x265C594
	0x01D62D14 BL 0x1D5D508
	0x01D62D18 LDR X8, [X19 + 0x60]
	0x01D62D1C CBZ X8, 0x1D62E70
	0x01D62D20 ORN W9, W31, W0, 0x0
	0x01D62D24 MOV W22, W0
	0x01D62D28 AND W1, W9, 0x1
	0x01D62D2C MOV X0, X8
	0x01D62D30 MOV X2, X31
	0x01D62D34 BL 0x3C357B4
	0x01D62D38 TBNZ X22, 0x0, 0x1D62D78
	0x01D62D3C LDR X8, [X20 + 0x70]
	0x01D62D40 CBZ X8, 0x1D62E70
	0x01D62D44 LDR W8, [X8 + 0x4C]
	0x01D62D48 LDR X20, [X19 + 0x68]
	0x01D62D4C ADD X0, X31, 0x44
	0x01D62D50 MOV X1, X31
	0x01D62D54 STR W8, [X31 + 0x44]
	0x01D62D58 BL 0x337B6E0
	0x01D62D5C CBZ X20, 0x1D62E70
	0x01D62D60 LDR X8, [X20]
	0x01D62D64 MOV X1, X0
	0x01D62D68 MOV X0, X20
	0x01D62D6C LDR X9, [X8 + 0x558]
	0x01D62D70 LDR X2, [X8 + 0x560]
	0x01D62D74 BLR X9
	0x01D62D78 MOV X0, X21
	0x01D62D7C MOV X1, X31
	0x01D62D80 BL 0x3C356F8
	0x01D62D84 CBZ X0, 0x1D62E70
	0x01D62D88 LDR X1, [X19 + 0x50]
	0x01D62D8C MOV W2, W31
	0x01D62D90 MOV X3, X31
	0x01D62D94 BL 0x3C3FEB8
	0x01D62D98 MOV X0, X21
	0x01D62D9C MOV X1, X31
	0x01D62DA0 BL 0x3C356F8
	0x01D62DA4 LDRB W8, [X24 + 0x783]
	0x01D62DA8 MOV X20, X0
	0x01D62DAC CBNZ W8, 0x1D62DC4
	0x01D62DB0 ADRP X0, 0x2391000
	0x01D62DB4 LDR X0, [X0 + 0x5A0]
	0x01D62DB8 BL 0x1C16CF4
	0x01D62DBC MOVZ W8, 0x1
	0x01D62DC0 STRB W8, [X24 + 0x783]
	0x01D62DC4 CBZ X20, 0x1D62E70
	0x01D62DC8 LDR X8, [X25]
	0x01D62DCC MOV X0, X20
	0x01D62DD0 MOV X1, X31
	0x01D62DD4 LDR X8, [X8 + 0xB8]
	0x01D62DD8 LDP S1, S2, [X8 + 0x4]
	0x01D62DDC LDR V0, [X8]
	0x01D62DE0 BL 0x3C3EC04
	0x01D62DE4 MOV X0, X21
	0x01D62DE8 MOV X1, X31
	0x01D62DEC BL 0x3C356F8
	0x01D62DF0 ADRP X21, 0x2676000
	0x01D62DF4 LDRB W8, [X21 + 0x793]
	0x01D62DF8 MOV X20, X0
	0x01D62DFC CBNZ W8, 0x1D62E14
	0x01D62E00 ADRP X0, 0x2392000
	0x01D62E04 LDR X0, [X0 + 0x5A8]
	0x01D62E08 BL 0x1C16CF4
	0x01D62E0C MOVZ W8, 0x1
	0x01D62E10 STRB W8, [X21 + 0x793]
	0x01D62E14 CBZ X20, 0x1D62E70
	0x01D62E18 ADRP X8, 0x2392000
	0x01D62E1C LDR X8, [X8 + 0x5A8]
	0x01D62E20 MOV X0, X20
	0x01D62E24 MOV X1, X31
	0x01D62E28 LDR X8, [X8]
	0x01D62E2C LDR X8, [X8 + 0xB8]
	0x01D62E30 LDP S2, S3, [X8 + 0x8]
	0x01D62E34 LDP S0, S1, [X8]
	0x01D62E38 BL 0x3C3F8B8
	0x01D62E3C MOV X0, X19
	0x01D62E40 BL 0x1D6117C
	0x01D62E44 LDP X20, X19, [X31 + 0xC0]
	0x01D62E48 LDP X22, X21, [X31 + 0xB0]
	0x01D62E4C LDP X24, X23, [X31 + 0xA0]
	0x01D62E50 LDP X26, X25, [X31 + 0x90]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0x2677000
	015 Move W8, [X20+2134]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {59}
	021 Move X0, 0x2392000
	022 Move X0, [X0+1608]
	023 Call 0x1C17CF4
	024 Move X0, 0x2392000
	025 Move X0, [X0+3584]
	026 Call 0x1C17CF4
	027 Move X0, 0x2392000
	028 Move X0, [X0+3952]
	029 Call 0x1C17CF4
	030 Move X0, 0x2393000
	031 Move X0, [X0+2736]
	032 Call 0x1C17CF4
	033 Move X0, 0x2392000
	034 Move X0, [X0+3960]
	035 Call 0x1C17CF4
	036 Move X0, 0x2393000
	037 Move X0, [X0+2744]
	038 Call 0x1C17CF4
	039 Move X0, 0x2392000
	040 Move X0, [X0+3608]
	041 Call 0x1C17CF4
	042 Move X0, 0x2393000
	043 Move X0, [X0+2752]
	044 Call 0x1C17CF4
	045 Move X0, 0x2393000
	046 Move X0, [X0+2776]
	047 Call 0x1C17CF4
	048 Move X0, 0x2392000
	049 Move X0, [X0+3528]
	050 Call 0x1C17CF4
	051 Move X0, 0x2393000
	052 Move X0, [X0+504]
	053 Call 0x1C17CF4
	054 Move X0, 0x2394000
	055 Move X0, [X0+1888]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X20+2134], W8
	059 Move [X31], X31
	060 Move [X31+8], X31
	061 Move X20, 0x2392000
	062 Move X22, 0x2393000
	063 Move W8, [X19+136]
	064 Move X20, [X20+1608]
	065 Move X22, [X22+2736]
	066 Compare W8, 0
	067 JumpIfEqual {115}
	068 Move X0, [X20]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X24, 0x2677000
	074 Move W8, [X24+1927]
	075 Compare W8, 0
	076 JumpIfNotEqual {82}
	077 Move X0, 0x2392000
	078 Move X0, [X0+1608]
	079 Call 0x1C17CF4
	080 Move W8, 1
	081 Move [X24+1927], W8
	082 Move X0, [X20]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {88}
	086 Call 0x1C17DFC
	087 Move X0, [X20]
	088 Move X8, [X0+184]
	089 Move X8, [X8]
	090 Compare X8, 0
	091 JumpIfEqual {732}
	092 Move X8, [X8+184]
	093 Compare X8, 0
	094 JumpIfEqual {732}
	095 Move X8, [X8+120]
	096 Compare X8, 0
	097 JumpIfEqual {732}
	098 Move X21, [X8+152]
	099 Compare X21, 0
	100 JumpIfEqual {732}
	101 Move X8, [X21]
	102 Move X1, [X22]
	103 NotImplemented "Instruction LDRH not yet implemented."
	104 Compare X9, 0
	105 JumpIfEqual {112}
	106 Move X10, [X8+176]
	107 Add X10, X10, 8
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Subtract X9, X9, 1
	111 Add X10, X10, 16
	112 Move X0, X21
	113 Move W2, W31
	114 Call 0x1C5D788
	115 Move X8, [X19+128]
	116 Compare X8, 0
	117 JumpIfEqual {323}
	118 Move X8, [X8+88]
	119 Compare X8, 0
	120 JumpIfEqual {732}
	121 Move W0, [X8+76]
	122 Move X1, X31
	123 Call ApiAvatarItemTypeUtil.IsEquipable, X0
	124 Move X8, [X19+128]
	125 Compare X8, 0
	126 JumpIfEqual {732}
	127 Move TEMP, X0
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfNotEqual {359}
	131 Move X8, [X8+88]
	132 Compare X8, 0
	133 JumpIfEqual {732}
	134 Move W0, [X8+76]
	135 Move X1, X31
	136 Call ApiAvatarItemTypeUtil.IsAccesory, X0
	137 Move X8, [X20]
	138 Move W21, W0
	139 Move W9, [X8+224]
	140 Compare W9, 0
	141 JumpIfNotEqual {144}
	142 Move X0, X8
	143 Call 0x1C17DFC
	144 Move X23, 0x2677000
	145 Move W8, [X23+1927]
	146 Compare W8, 0
	147 JumpIfNotEqual {153}
	148 Move X0, 0x2392000
	149 Move X0, [X0+1608]
	150 Call 0x1C17CF4
	151 Move W8, 1
	152 Move [X23+1927], W8
	153 Move X0, [X20]
	154 Move W8, [X0+224]
	155 Compare W8, 0
	156 JumpIfNotEqual {159}
	157 Call 0x1C17DFC
	158 Move X0, [X20]
	159 Move X8, [X0+184]
	160 Move X8, [X8]
	161 Compare X8, 0
	162 JumpIfEqual {732}
	163 Move X8, [X8+184]
	164 Compare X8, 0
	165 JumpIfEqual {732}
	166 Move X0, [X8+120]
	167 Move TEMP, X21
	168 And TEMP, TEMP, 1
	169 Compare TEMP, 1
	170 JumpIfNotEqual {378}
	171 Compare X0, 0
	172 JumpIfEqual {732}
	173 Move X20, [X0+152]
	174 Compare X20, 0
	175 JumpIfEqual {732}
	176 Move X8, [X20]
	177 Move X1, [X22]
	178 NotImplemented "Instruction LDRH not yet implemented."
	179 Compare X9, 0
	180 JumpIfEqual {187}
	181 Move X10, [X8+176]
	182 Add X10, X10, 8
	183 NotImplemented "Instruction LDUR not yet implemented."
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Subtract X9, X9, 1
	186 Add X10, X10, 16
	187 Move X0, X20
	188 Move W2, W31
	189 Call 0x1C5D788
	190 NotImplemented "Instruction LDRSW not yet implemented."
	191 Add X8, X8, X9
	192 Add X0, X8, 312
	193 Move X8, [X0]
	194 Move X1, [X0+8]
	195 Move X0, X21
	196 NotImplemented "Instruction BLR not yet implemented."
	197 Move X21, X0
	198 Compare X0, 0
	199 JumpIfEqual {742}
	200 Move X25, 0x2392000
	201 Move X26, 0x2393000
	202 Move X28, 0x2393000
	203 Move X29, 0x2394000
	204 Move X25, [X25+3608]
	205 Move X26, [X26+2744]
	206 Move X28, [X28+2752]
	207 Move X29, [X29+1888]
	208 Move W27, 1
	209 Move X8, [X21]
	210 Move X1, [X25]
	211 NotImplemented "Instruction LDRH not yet implemented."
	212 Compare X9, 0
	213 JumpIfEqual {220}
	214 Move X10, [X8+176]
	215 Add X10, X10, 8
	216 NotImplemented "Instruction LDUR not yet implemented."
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Subtract X9, X9, 1
	219 Add X10, X10, 16
	220 Move X0, X21
	221 Move W2, W31
	222 Call 0x1C5D788
	223 NotImplemented "Instruction LDRSW not yet implemented."
	224 Add X8, X8, X9
	225 Add X0, X8, 312
	226 Move X8, [X0]
	227 Move X1, [X0+8]
	228 Move X0, X21
	229 NotImplemented "Instruction BLR not yet implemented."
	230 Move W23, W0
	231 Move TEMP, X0
	232 And TEMP, TEMP, 1
	233 Compare TEMP, 1
	234 JumpIfNotEqual {302}
	235 Move X8, [X21]
	236 Move X1, [X26]
	237 NotImplemented "Instruction LDRH not yet implemented."
	238 Compare X9, 0
	239 JumpIfEqual {246}
	240 Move X10, [X8+176]
	241 Add X10, X10, 8
	242 NotImplemented "Instruction LDUR not yet implemented."
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Subtract X9, X9, 1
	245 Add X10, X10, 16
	246 Move X0, X21
	247 Move W2, W31
	248 Call 0x1C5D788
	249 NotImplemented "Instruction LDRSW not yet implemented."
	250 Add X8, X8, X9
	251 Add X0, X8, 312
	252 Move X8, [X0]
	253 Move X1, [X0+8]
	254 Move X0, X21
	255 NotImplemented "Instruction BLR not yet implemented."
	256 Move X22, X0
	257 Move X0, [X20]
	258 Move W8, [X0+224]
	259 Compare W8, 0
	260 JumpIfNotEqual {262}
	261 Call 0x1C17DFC
	262 Move W8, [X24+1927]
	263 Compare W8, 0
	264 JumpIfNotEqual {268}
	265 Move X0, X20
	266 Call 0x1C17CF4
	267 Move [X24+1927], W27
	268 Move X0, [X20]
	269 Move W8, [X0+224]
	270 Compare W8, 0
	271 JumpIfNotEqual {274}
	272 Call 0x1C17DFC
	273 Move X0, [X20]
	274 Move X8, [X0+184]
	275 Move X8, [X8]
	276 Compare X8, 0
	277 JumpIfEqual {729}
	278 Move X8, [X8+200]
	279 Compare X8, 0
	280 JumpIfEqual {730}
	281 Compare X22, 0
	282 JumpIfEqual {727}
	283 Move X0, [X8+80]
	284 Compare X0, 0
	285 JumpIfEqual {728}
	286 Move X1, [X22+80]
	287 Move X3, [X28]
	288 Add X2, X31, 8
	289 Call StateDictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	290 Move TEMP, X0
	291 And TEMP, TEMP, 1
	292 Compare TEMP, 1
	293 JumpIfNotEqual {209}
	294 Move X8, [X31+8]
	295 Compare X8, 0
	296 JumpIfEqual {731}
	297 Move X0, [X8+88]
	298 Move X1, [X29]
	299 Call StatePrimitive`1<Int32Enum>.op_Implicit, X0
	300 Move W8, [X19+140]
	301 NotImplemented "Instruction CMP not yet implemented."
	302 Move X22, X31
	303 Xor W20, W23, 1
	304 Move W23, 5
	305 Compare X21, 0
	306 JumpIfEqual {334}
	307 Move X10, 0x2392000
	308 Move X8, [X21]
	309 Move X10, [X10+3584]
	310 NotImplemented "Instruction LDRH not yet implemented."
	311 Move X1, [X10]
	312 Compare X9, 0
	313 JumpIfEqual {320}
	314 Move X10, [X8+176]
	315 Add X10, X10, 8
	316 NotImplemented "Instruction LDUR not yet implemented."
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Subtract X9, X9, 1
	319 Add X10, X10, 16
	320 Move X0, X21
	321 Move W2, W31
	322 Call 0x1C5D788
	323 Move X0, [X19+72]
	324 Compare X0, 0
	325 JumpIfEqual {732}
	326 Move W1, W31
	327 NotImplemented "Instruction LDRSW not yet implemented."
	328 Add X8, X8, X9
	329 Add X0, X8, 312
	330 Move X8, [X0]
	331 Move X1, [X0+8]
	332 Move X0, X21
	333 NotImplemented "Instruction BLR not yet implemented."
	334 Compare X22, 0
	335 JumpIfNotEqual {740}
	336 NotImplemented "Instruction CMP not yet implemented."
	337 Compare W23, 0
	338 JumpIfNotEqual {345}
	339 Move X0, [X19+72]
	340 Compare X0, 0
	341 JumpIfEqual {732}
	342 And W1, W20, 1
	343 Move X2, X31
	344 Call GameObject.SetActive, X0, X1
	345 Move X20, [X31+96]
	346 Move X19, [X31+104]
	347 Move X22, [X31+80]
	348 Move X21, [X31+88]
	349 Move X24, [X31+64]
	350 Move X23, [X31+72]
	351 Move X26, [X31+48]
	352 Move X25, [X31+56]
	353 Move X28, [X31+32]
	354 Move X27, [X31+40]
	355 Move X29, [X31+16]
	356 Move X30, [X31+24]
	357 Add X31, X31, 112
	358 Return 
	359 Move X21, [X8+128]
	360 Compare X21, 0
	361 JumpIfEqual {732}
	362 Move X10, 0x2392000
	363 Move X8, [X21]
	364 Move X10, [X10+3952]
	365 NotImplemented "Instruction LDRH not yet implemented."
	366 Move X1, [X10]
	367 Compare X9, 0
	368 JumpIfEqual {375}
	369 Move X10, [X8+176]
	370 Add X10, X10, 8
	371 NotImplemented "Instruction LDUR not yet implemented."
	372 NotImplemented "Instruction CMP not yet implemented."
	373 Subtract X9, X9, 1
	374 Add X10, X10, 16
	375 Move X0, X21
	376 Move W2, W31
	377 Call 0x1C5D788
	378 Move X21, [X19+128]
	379 Compare X21, 0
	380 JumpIfEqual {732}
	381 Move X8, [X21+88]
	382 Compare X8, 0
	383 JumpIfEqual {732}
	384 Compare X0, 0
	385 JumpIfEqual {732}
	386 Move W1, [X8+76]
	387 Call UserAvatarState.GetStateFromPartType, X0, X1
	388 Compare X0, 0
	389 JumpIfEqual {400}
	390 Move X8, 0x2393000
	391 Move X20, [X0+80]
	392 Move X0, [X21+72]
	393 Move X8, [X8+504]
	394 Move X1, [X8]
	395 Call StatePrimitive`1<Object>.op_Implicit, X0
	396 Move X1, X0
	397 Move X0, X20
	398 Move X2, X31
	399 Call String.op_Equality, X0, X1
	400 Move X8, [X19+72]
	401 Compare X8, 0
	402 JumpIfEqual {732}
	403 And W1, W0, 1
	404 Move X0, X8
	405 NotImplemented "Instruction LDRSW not yet implemented."
	406 Add X8, X8, X9
	407 Add X0, X8, 312
	408 Move X8, [X0]
	409 Move X1, [X0+8]
	410 Move X0, X21
	411 NotImplemented "Instruction BLR not yet implemented."
	412 Move X21, X0
	413 Compare X0, 0
	414 JumpIfEqual {748}
	415 Move X23, 0x2392000
	416 Move X24, 0x2392000
	417 Move X27, 0x2393000
	418 Move X28, 0x2393000
	419 Move X23, [X23+3608]
	420 Move X24, [X24+3960]
	421 Move X27, [X27+2752]
	422 Move X28, [X28+504]
	423 Move X25, 0x2677000
	424 Move W26, 1
	425 Move X8, [X21]
	426 Move X1, [X23]
	427 NotImplemented "Instruction LDRH not yet implemented."
	428 Compare X9, 0
	429 JumpIfEqual {436}
	430 Move X10, [X8+176]
	431 Add X10, X10, 8
	432 NotImplemented "Instruction LDUR not yet implemented."
	433 NotImplemented "Instruction CMP not yet implemented."
	434 Subtract X9, X9, 1
	435 Add X10, X10, 16
	436 Move X0, X21
	437 Move W2, W31
	438 Call 0x1C5D788
	439 NotImplemented "Instruction LDRSW not yet implemented."
	440 Add X8, X8, X9
	441 Add X0, X8, 312
	442 Move X8, [X0]
	443 Move X1, [X0+8]
	444 Move X0, X21
	445 NotImplemented "Instruction BLR not yet implemented."
	446 Move TEMP, X0
	447 And TEMP, TEMP, 1
	448 Compare TEMP, 1
	449 JumpIfNotEqual {579}
	450 Move X8, [X21]
	451 Move X1, [X24]
	452 NotImplemented "Instruction LDRH not yet implemented."
	453 Compare X9, 0
	454 JumpIfEqual {461}
	455 Move X10, [X8+176]
	456 Add X10, X10, 8
	457 NotImplemented "Instruction LDUR not yet implemented."
	458 NotImplemented "Instruction CMP not yet implemented."
	459 Subtract X9, X9, 1
	460 Add X10, X10, 16
	461 Move X0, X21
	462 Move W2, W31
	463 Call 0x1C5D788
	464 NotImplemented "Instruction LDRSW not yet implemented."
	465 Add X8, X8, X9
	466 Add X0, X8, 312
	467 Move X8, [X0]
	468 Move X1, [X0+8]
	469 Move X0, X21
	470 NotImplemented "Instruction BLR not yet implemented."
	471 Move X22, X0
	472 Move X0, [X20]
	473 Move W8, [X0+224]
	474 Compare W8, 0
	475 JumpIfNotEqual {477}
	476 Call 0x1C17DFC
	477 Move W8, [X25+1927]
	478 Compare W8, 0
	479 JumpIfNotEqual {483}
	480 Move X0, X20
	481 Call 0x1C17CF4
	482 Move [X25+1927], W26
	483 Move X0, [X20]
	484 Move W8, [X0+224]
	485 Compare W8, 0
	486 JumpIfNotEqual {489}
	487 Call 0x1C17DFC
	488 Move X0, [X20]
	489 Move X8, [X0+184]
	490 Move X8, [X8]
	491 Compare X8, 0
	492 JumpIfEqual {734}
	493 Move X8, [X8+200]
	494 Compare X8, 0
	495 JumpIfEqual {735}
	496 Move X0, [X8+80]
	497 Compare X0, 0
	498 JumpIfEqual {733}
	499 Move X3, [X27]
	500 Add X2, X31, 0
	501 Move X1, X22
	502 Call StateDictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	503 Move TEMP, X0
	504 And TEMP, TEMP, 1
	505 Compare TEMP, 1
	506 JumpIfNotEqual {425}
	507 Move X8, [X31]
	508 Compare X8, 0
	509 JumpIfEqual {737}
	510 Move X8, [X8+88]
	511 Compare X8, 0
	512 JumpIfEqual {736}
	513 Move W0, [X8+76]
	514 Move X1, X31
	515 Call ApiAvatarItemTypeUtil.IsEquipable, X0
	516 Move TEMP, X0
	517 And TEMP, TEMP, 1
	518 Compare TEMP, 1
	519 JumpIfNotEqual {425}
	520 Move X0, [X20]
	521 Move W8, [X0+224]
	522 Compare W8, 0
	523 JumpIfNotEqual {525}
	524 Call 0x1C17DFC
	525 Move W8, [X25+1927]
	526 Compare W8, 0
	527 JumpIfNotEqual {531}
	528 Move X0, X20
	529 Call 0x1C17CF4
	530 Move [X25+1927], W26
	531 Move X0, [X20]
	532 Move W8, [X0+224]
	533 Compare W8, 0
	534 JumpIfNotEqual {537}
	535 Call 0x1C17DFC
	536 Move X0, [X20]
	537 Move X8, [X0+184]
	538 Move X8, [X8]
	539 Compare X8, 0
	540 JumpIfEqual {743}
	541 Move X8, [X8+184]
	542 Compare X8, 0
	543 JumpIfEqual {744}
	544 Move X29, [X31]
	545 Compare X29, 0
	546 JumpIfEqual {746}
	547 Move X9, [X29+88]
	548 Compare X9, 0
	549 JumpIfEqual {747}
	550 Move X0, [X8+120]
	551 Compare X0, 0
	552 JumpIfEqual {745}
	553 Move W1, [X9+76]
	554 Call UserAvatarState.GetStateFromPartType, X0, X1
	555 Compare X0, 0
	556 JumpIfEqual {569}
	557 Move X22, [X0+80]
	558 Move X0, [X29+72]
	559 Move X1, [X28]
	560 Call StatePrimitive`1<Object>.op_Implicit, X0
	561 Move X1, X0
	562 Move X0, X22
	563 Move X2, X31
	564 Call String.op_Inequality, X0, X1
	565 Move TEMP, X0
	566 And TEMP, TEMP, 1
	567 Compare TEMP, 1
	568 JumpIfNotEqual {425}
	569 Move X0, [X19+72]
	570 Compare X0, 0
	571 JumpIfEqual {750}
	572 Move W1, W31
	573 Move X2, X31
	574 Call GameObject.SetActive, X0, X1
	575 Move X22, X31
	576 Move W20, 17
	577 Compare X21, 0
	578 JumpIfNotEqual {583}
	579 Move X22, X31
	580 Move W20, 18
	581 Compare X21, 0
	582 JumpIfEqual {606}
	583 Move X10, 0x2392000
	584 Move X8, [X21]
	585 Move X10, [X10+3584]
	586 NotImplemented "Instruction LDRH not yet implemented."
	587 Move X1, [X10]
	588 Compare X9, 0
	589 JumpIfEqual {596}
	590 Move X10, [X8+176]
	591 Add X10, X10, 8
	592 NotImplemented "Instruction LDUR not yet implemented."
	593 NotImplemented "Instruction CMP not yet implemented."
	594 Subtract X9, X9, 1
	595 Add X10, X10, 16
	596 Move X0, X21
	597 Move W2, W31
	598 Call 0x1C5D788
	599 NotImplemented "Instruction LDRSW not yet implemented."
	600 Add X8, X8, X9
	601 Add X0, X8, 312
	602 Move X8, [X0]
	603 Move X1, [X0+8]
	604 Move X0, X21
	605 NotImplemented "Instruction BLR not yet implemented."
	606 Compare X22, 0
	607 JumpIfNotEqual {740}
	608 NotImplemented "Instruction CMP not yet implemented."
	609 Compare W20, 0
	610 JumpIfNotEqual {345}
	611 Move X0, [X19+72]
	612 Compare X0, 0
	613 JumpIfEqual {732}
	614 Move W1, 1
	615 NotImplemented "Instruction LDRSW not yet implemented."
	616 Add X8, X8, X9
	617 Add X0, X8, 312
	618 Move X8, [X0]
	619 Move X1, [X0+8]
	620 Move X0, X20
	621 NotImplemented "Instruction BLR not yet implemented."
	622 Move X21, X0
	623 Compare X0, 0
	624 JumpIfEqual {749}
	625 Move X23, 0x2392000
	626 Move X24, 0x2393000
	627 Move X25, 0x2393000
	628 Move X23, [X23+3608]
	629 Move X24, [X24+2744]
	630 Move X25, [X25+504]
	631 Move X8, [X21]
	632 Move X1, [X23]
	633 NotImplemented "Instruction LDRH not yet implemented."
	634 Compare X9, 0
	635 JumpIfEqual {642}
	636 Move X10, [X8+176]
	637 Add X10, X10, 8
	638 NotImplemented "Instruction LDUR not yet implemented."
	639 NotImplemented "Instruction CMP not yet implemented."
	640 Subtract X9, X9, 1
	641 Add X10, X10, 16
	642 Move X0, X21
	643 Move W2, W31
	644 Call 0x1C5D788
	645 NotImplemented "Instruction LDRSW not yet implemented."
	646 Add X8, X8, X9
	647 Add X0, X8, 312
	648 Move X8, [X0]
	649 Move X1, [X0+8]
	650 Move X0, X21
	651 NotImplemented "Instruction BLR not yet implemented."
	652 Move W20, W0
	653 Move TEMP, X0
	654 And TEMP, TEMP, 1
	655 Compare TEMP, 1
	656 JumpIfNotEqual {696}
	657 Move X8, [X21]
	658 Move X1, [X24]
	659 NotImplemented "Instruction LDRH not yet implemented."
	660 Compare X9, 0
	661 JumpIfEqual {668}
	662 Move X10, [X8+176]
	663 Add X10, X10, 8
	664 NotImplemented "Instruction LDUR not yet implemented."
	665 NotImplemented "Instruction CMP not yet implemented."
	666 Subtract X9, X9, 1
	667 Add X10, X10, 16
	668 Move X0, X21
	669 Move W2, W31
	670 Call 0x1C5D788
	671 NotImplemented "Instruction LDRSW not yet implemented."
	672 Add X8, X8, X9
	673 Add X0, X8, 312
	674 Move X8, [X0]
	675 Move X1, [X0+8]
	676 Move X0, X21
	677 NotImplemented "Instruction BLR not yet implemented."
	678 Compare X0, 0
	679 JumpIfEqual {738}
	680 Move X8, [X19+128]
	681 Compare X8, 0
	682 JumpIfEqual {739}
	683 Move X22, [X0+80]
	684 Move X0, [X8+72]
	685 Move X1, [X25]
	686 Call StatePrimitive`1<Object>.op_Implicit, X0
	687 Move X1, X0
	688 Move X0, X22
	689 Move X2, X31
	690 Call String.op_Equality, X0, X1
	691 Move TEMP, X0
	692 And TEMP, TEMP, 1
	693 Compare TEMP, 1
	694 JumpIfNotEqual {631}
	695 Move X22, X31
	696 Move X22, X31
	697 Move W20, W31
	698 Move W23, 11
	699 Compare X21, 0
	700 JumpIfEqual {724}
	701 Move X10, 0x2392000
	702 Move X8, [X21]
	703 Move X10, [X10+3584]
	704 NotImplemented "Instruction LDRH not yet implemented."
	705 Move X1, [X10]
	706 Compare X9, 0
	707 JumpIfEqual {714}
	708 Move X10, [X8+176]
	709 Add X10, X10, 8
	710 NotImplemented "Instruction LDUR not yet implemented."
	711 NotImplemented "Instruction CMP not yet implemented."
	712 Subtract X9, X9, 1
	713 Add X10, X10, 16
	714 Move X0, X21
	715 Move W2, W31
	716 Call 0x1C5D788
	717 NotImplemented "Instruction LDRSW not yet implemented."
	718 Add X8, X8, X9
	719 Add X0, X8, 312
	720 Move X8, [X0]
	721 Move X1, [X0+8]
	722 Move X0, X21
	723 NotImplemented "Instruction BLR not yet implemented."
	724 Compare X22, 0
	725 JumpIfNotEqual {740}
	726 NotImplemented "Instruction CMP not yet implemented."
	727 Call 0x1C17F20
	728 Call 0x1C17F20
	729 Call 0x1C17F20
	730 Call 0x1C17F20
	731 Call 0x1C17F20
	732 Call 0x1C17F20
	733 Call 0x1C17F20
	734 Call 0x1C17F20
	735 Call 0x1C17F20
	736 Call 0x1C17F20
	737 Call 0x1C17F20
	738 Call 0x1C17F20
	739 Call 0x1C17F20
	740 Move X0, X22
	741 Call 0x1C17F18
	742 Call 0x1C17F20
	743 Call 0x1C17F20
	744 Call 0x1C17F20
	745 Call 0x1C17F20
	746 Call 0x1C17F20
	747 Call 0x1C17F20
	748 Call 0x1C17F20
	749 Call 0x1C17F20
	750 Call 0x1C17F20
	751 Move X20, X0
	752 NotImplemented "Instruction CMP not yet implemented."
	753 Move X0, X20
	754 Call 0x3EB2AD0
	755 Move X22, [X0]
	756 Call 0x3EB2AE0
	757 Move W23, W31
	758 Move W20, W31
	759 Compare X21, 0
	760 JumpIfNotEqual {701}
	761 Move X22, X31
	762 Move X20, X0
	763 Compare X21, 0
	764 JumpIfEqual {788}
	765 Move X10, 0x2392000
	766 Move X8, [X21]
	767 Move X10, [X10+3584]
	768 NotImplemented "Instruction LDRH not yet implemented."
	769 Move X1, [X10]
	770 Compare X9, 0
	771 JumpIfEqual {778}
	772 Move X10, [X8+176]
	773 Add X10, X10, 8
	774 NotImplemented "Instruction LDUR not yet implemented."
	775 NotImplemented "Instruction CMP not yet implemented."
	776 Subtract X9, X9, 1
	777 Add X10, X10, 16
	778 Move X0, X21
	779 Move W2, W31
	780 Call 0x1C5D788
	781 NotImplemented "Instruction LDRSW not yet implemented."
	782 Add X8, X8, X9
	783 Add X0, X8, 312
	784 Move X8, [X0]
	785 Move X1, [X0+8]
	786 Move X0, X21
	787 NotImplemented "Instruction BLR not yet implemented."
	788 Compare X22, 0
	789 JumpIfEqual {871}
	790 Move X0, X22
	791 Call 0x1C17F18
	792 Move X20, X0
	793 NotImplemented "Instruction CMP not yet implemented."
	794 Move X0, X20
	795 Call 0x3EB2AD0
	796 Move X22, [X0]
	797 Call 0x3EB2AE0
	798 Move W20, W31
	799 Compare X21, 0
	800 JumpIfNotEqual {583}
	801 Move X22, X31
	802 Move X20, X0
	803 Compare X21, 0
	804 JumpIfEqual {828}
	805 Move X10, 0x2392000
	806 Move X8, [X21]
	807 Move X10, [X10+3584]
	808 NotImplemented "Instruction LDRH not yet implemented."
	809 Move X1, [X10]
	810 Compare X9, 0
	811 JumpIfEqual {818}
	812 Move X10, [X8+176]
	813 Add X10, X10, 8
	814 NotImplemented "Instruction LDUR not yet implemented."
	815 NotImplemented "Instruction CMP not yet implemented."
	816 Subtract X9, X9, 1
	817 Add X10, X10, 16
	818 Move X0, X21
	819 Move W2, W31
	820 Call 0x1C5D788
	821 NotImplemented "Instruction LDRSW not yet implemented."
	822 Add X8, X8, X9
	823 Add X0, X8, 312
	824 Move X8, [X0]
	825 Move X1, [X0+8]
	826 Move X0, X21
	827 NotImplemented "Instruction BLR not yet implemented."
	828 Compare X22, 0
	829 JumpIfEqual {871}
	830 Move X0, X22
	831 Call 0x1C17F18
	832 Move X20, X0
	833 NotImplemented "Instruction CMP not yet implemented."
	834 Move X0, X20
	835 Call 0x3EB2AD0
	836 Move X22, [X0]
	837 Call 0x3EB2AE0
	838 Move W23, W31
	839 Move W20, 1
	840 Compare X21, 0
	841 JumpIfNotEqual {307}
	842 Move X22, X31
	843 Move X20, X0
	844 Compare X21, 0
	845 JumpIfEqual {869}
	846 Move X10, 0x2392000
	847 Move X8, [X21]
	848 Move X10, [X10+3584]
	849 NotImplemented "Instruction LDRH not yet implemented."
	850 Move X1, [X10]
	851 Compare X9, 0
	852 JumpIfEqual {859}
	853 Move X10, [X8+176]
	854 Add X10, X10, 8
	855 NotImplemented "Instruction LDUR not yet implemented."
	856 NotImplemented "Instruction CMP not yet implemented."
	857 Subtract X9, X9, 1
	858 Add X10, X10, 16
	859 Move X0, X21
	860 Move W2, W31
	861 Call 0x1C5D788
	862 NotImplemented "Instruction LDRSW not yet implemented."
	863 Add X8, X8, X9
	864 Add X0, X8, 312
	865 Move X8, [X0]
	866 Move X1, [X0+8]
	867 Move X0, X21
	868 NotImplemented "Instruction BLR not yet implemented."
	869 Compare X22, 0
	870 JumpIfNotEqual {873}
	871 Move X0, X20
	872 Call 0x1D2D690
	873 Move X0, X22
	874 Call 0x1C17F18
	875 Call 0x1991590

Method: System.Void TriggerEnter(UnityEngine.Collider other)

Disassembly:
	0x01D651D8 LDR X21, [X19 + 0x60]
	0x01D651DC MOV X0, X20
	0x01D651E0 MOV X1, X31
	0x01D651E4 BL 0x3C389D4
	0x01D651E8 CBZ X21, 0x1D65228
	0x01D651EC LDR X3, [X24]
	0x01D651F0 MOV X1, X0
	0x01D651F4 MOV X0, X21
	0x01D651F8 MOV X2, X20
	0x01D651FC BL 0x2AA5084
	0x01D65200 LDR W8, [X22 + 0x18]
	0x01D65204 ADD W23, W23, 0x1
	0x01D65208 CMP W23, W8
	0x01D6520C B.LT 0x1D651C4
	0x01D65210 LDR X0, [X19 + 0x60]
	0x01D65214 LDP X20, X19, [X31 + 0x30]
	0x01D65218 LDP X22, X21, [X31 + 0x20]
	0x01D6521C LDP X24, X23, [X31 + 0x10]
	0x01D65220 LDR X30, [X31], #0x40
	0x01D65224 RET
	0x01D65228 BL 0x1C16F20
	0x01D6522C BL 0x1C16F28
	0x01D65230 MOV X1, X31
	0x01D65234 B 0x3C36D2C
	0x01D65238 MOV X1, X31
	0x01D6523C B 0x3C36C30
	0x01D65240 STR X30, [X31 - 0x20]!
	0x01D65244 STP X20, X19, [X31 + 0x10]
	0x01D65248 ADRP X20, 0x2673000
	0x01D6524C LDRB W8, [X20 + 0x86B]
	0x01D65250 MOV X19, X0
	0x01D65254 TBNZ X8, 0x0, 0x1D65278
	0x01D65258 ADRP X0, 0x238F000
	0x01D6525C LDR X0, [X0 + 0xB18]
	0x01D65260 BL 0x1C16CF4
	0x01D65264 ADRP X0, 0x2390000
	0x01D65268 LDR X0, [X0 + 0x2A0]
	0x01D6526C BL 0x1C16CF4
	0x01D65270 MOVZ W8, 0x1
	0x01D65274 STRB W8, [X20 + 0x86B]
	0x01D65278 LDR W1, [X19 + 0x20]
	0x01D6527C MOV X0, X19
	0x01D65280 BL 0x1D652D4
	0x01D65284 CBZ X0, 0x1D652D0
	0x01D65288 MOV X20, X0
	0x01D6528C LDR X0, [X19 + 0x28]
	0x01D65290 CBZ X0, 0x1D652D0
	0x01D65294 LDR X1, [X20 + 0x60]
	0x01D65298 MOV X2, X31
	0x01D6529C BL 0x1DC0C1C
	0x01D652A0 LDR X8, [X20 + 0x60]
	0x01D652A4 CBZ X8, 0x1D652D0
	0x01D652A8 LDR X8, [X8 + 0x50]
	0x01D652AC CBZ X8, 0x1D652D0
	0x01D652B0 LDR X0, [X19 + 0x28]
	0x01D652B4 CBZ X0, 0x1D652D0
	0x01D652B8 LDP S2, S3, [X8 + 0x54]
	0x01D652BC LDP S0, S1, [X8 + 0x4C]
	0x01D652C0 LDP X20, X19, [X31 + 0x10]
	0x01D652C4 MOV X1, X31
	0x01D652C8 LDR X30, [X31], #0x20
	0x01D652CC B 0x1DC0C38
	0x01D652D0 BL 0x1C16F20
	0x01D652D4 STP D11, D10, [X31 - 0x50]!
	0x01D652D8 STP D9, D8, [X31 + 0x10]
	0x01D652DC STR X30, [X31 + 0x20]
	0x01D652E0 STP X22, X21, [X31 + 0x30]
	0x01D652E4 STP X20, X19, [X31 + 0x40]
	0x01D652E8 ADRP X22, 0x2673000
	0x01D652EC ADRP X21, 0x2390000
	0x01D652F0 ADRP X19, 0x2390000
	0x01D652F4 LDRB W8, [X22 + 0x86D]
	0x01D652F8 LDR X21, [X21 + 0x320]
	0x01D652FC LDR X19, [X19 + 0x318]
	0x01D65300 MOV W20, W1
	0x01D65304 TBNZ X8, 0x0, 0x1D65460
	0x01D65308 ADRP X0, 0x238F000
	0x01D6530C LDR X0, [X0 + 0xA00]
	0x01D65310 BL 0x1C16CF4
	0x01D65314 ADRP X0, 0x238E000
	0x01D65318 LDR X0, [X0 + 0x900]
	0x01D6531C BL 0x1C16CF4
	0x01D65320 ADRP X0, 0x2390000
	0x01D65324 LDR X0, [X0 + 0x318]
	0x01D65328 BL 0x1C16CF4
	0x01D6532C ADRP X0, 0x2390000
	0x01D65330 LDR X0, [X0 + 0x2A0]
	0x01D65334 BL 0x1C16CF4
	0x01D65338 ADRP X0, 0x2390000
	0x01D6533C LDR X0, [X0 + 0x320]
	0x01D65340 BL 0x1C16CF4
	0x01D65344 ADRP X0, 0x2390000
	0x01D65348 LDR X0, [X0 + 0x8E8]
	0x01D6534C BL 0x1C16CF4
	0x01D65350 ADRP X0, 0x2390000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2674000
	007 Move W8, [X21+2135]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x238F000
	015 Move X0, [X0+1608]
	016 Call 0x1C17CF4
	017 Move X0, 0x238F000
	018 Move X0, [X0+2736]
	019 Call 0x1C17CF4
	020 Move X0, 0x2391000
	021 Move X0, [X0+2112]
	022 Call 0x1C17CF4
	023 Move X0, 0x2391000
	024 Move X0, [X0+2120]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+2135], W8
	028 Add X1, X31, 12
	029 Move X0, X19
	030 Move X2, X31
	031 Move [X31+12], W31
	032 Call HandInputUtility.HandleFingerTipInput, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {92}
	037 Move X19, [X20+120]
	038 Move X0, X20
	039 Move X1, X31
	040 Call Component.get_transform, X0
	041 Compare X0, 0
	042 JumpIfEqual {109}
	043 Move X1, X31
	044 Call Transform.get_position, X0
	045 Compare X19, 0
	046 JumpIfEqual {109}
	047 Move S3, 1
	048 Move X0, X19
	049 Move W1, W31
	050 Move X2, X31
	051 Call RandomSFX.Play, X0, X1, V0, X2
	052 Move X8, 0x238F000
	053 Move W21, [X20+136]
	054 Move X8, [X8+2736]
	055 Move W1, 1
	056 Move X0, [X8]
	057 Call 0x1C17D6C
	058 Move X19, X0
	059 Compare W21, 0
	060 JumpIfEqual {98}
	061 Move X8, 0x2391000
	062 Move W21, [X20+140]
	063 Move X8, [X8+2112]
	064 Move X0, [X8]
	065 Call 0x1C17F10
	066 Move X1, X31
	067 Move X20, X0
	068 Call BaseAction..ctor, X0
	069 Move [X20+20], W21
	070 Compare X19, 0
	071 JumpIfEqual {109}
	072 Move X8, [X19]
	073 Move X0, X20
	074 Move X1, [X8+64]
	075 Call 0x1C17E00
	076 Compare X0, 0
	077 JumpIfEqual {110}
	078 Move W8, [X19+24]
	079 Compare W8, 0
	080 JumpIfEqual {113}
	081 Move [X19+32], X20
	082 Move X8, 0x238F000
	083 Move X8, [X8+1608]
	084 Move X0, [X8]
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move X0, X19
	090 Move X1, X31
	091 Call App.ExecuteActionOrDelay, X0
	092 Move X20, [X31+32]
	093 Move X19, [X31+40]
	094 Move X30, [X31+16]
	095 Move X21, [X31+24]
	096 Add X31, X31, 48
	097 Return 
	098 Move X8, 0x2391000
	099 Move X21, [X20+128]
	100 Move X8, [X8+2120]
	101 Move X0, [X8]
	102 Call 0x1C17F10
	103 Move X1, X31
	104 Move X20, X0
	105 Call BaseAction..ctor, X0
	106 Move [X20+24], X21
	107 Compare X19, 0
	108 JumpIfNotEqual {72}
	109 Call 0x1C17F20
	110 Call 0x1C17F44
	111 Move X1, X31
	112 Call 0x1C17DEC
	113 Call 0x1C17F28

Method: System.Void DestroyViews()

Disassembly:
	0x01D65128 STR X30, [X31 - 0x40]!
	0x01D6512C STP X24, X23, [X31 + 0x10]
	0x01D65130 STP X22, X21, [X31 + 0x20]
	0x01D65134 STP X20, X19, [X31 + 0x30]
	0x01D65138 ADRP X20, 0x2673000
	0x01D6513C LDRB W8, [X20 + 0x86A]
	0x01D65140 MOV X19, X0
	0x01D65144 TBNZ X8, 0x0, 0x1D65174
	0x01D65148 ADRP X0, 0x2390000
	0x01D6514C LDR X0, [X0 + 0x8D0]
	0x01D65150 BL 0x1C16CF4
	0x01D65154 ADRP X0, 0x2390000
	0x01D65158 LDR X0, [X0 + 0x8D8]
	0x01D6515C BL 0x1C16CF4
	0x01D65160 ADRP X0, 0x2390000
	0x01D65164 LDR X0, [X0 + 0x8E0]
	0x01D65168 BL 0x1C16CF4
	0x01D6516C MOVZ W8, 0x1
	0x01D65170 STRB W8, [X20 + 0x86A]
	0x01D65174 LDR X0, [X19 + 0x60]
	0x01D65178 CBNZ X0, 0x1D65214
	0x01D6517C ADRP X8, 0x2390000
	0x01D65180 LDR X8, [X8 + 0x8E0]
	0x01D65184 LDR X0, [X8]
	0x01D65188 BL 0x1C16F10
	0x01D6518C ADRP X8, 0x2390000
	0x01D65190 LDR X8, [X8 + 0x8D0]
	0x01D65194 MOV X20, X0
	0x01D65198 LDR X1, [X8]
	0x01D6519C BL 0x2AA4804
	0x01D651A0 LDR X22, [X19 + 0x48]
	0x01D651A4 STR X20, [X19 + 0x60]
	0x01D651A8 CBZ X22, 0x1D65228
	0x01D651AC LDR W8, [X22 + 0x18]
	0x01D651B0 CMP W8, 0x1
	0x01D651B4 B.LT 0x1D65210
	0x01D651B8 ADRP X24, 0x2390000
	0x01D651BC LDR X24, [X24 + 0x8D8]
	0x01D651C0 MOV W23, W31
	0x01D651C4 CMP W23, W8
	0x01D651C8 B.CS 0x1D6522C
	0x01D651CC ADD X8, X22, W23, 0x3, SXTW
	0x01D651D0 LDR X20, [X8 + 0x20]
	0x01D651D4 CBZ X20, 0x1D65228

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2674000
	007 Move W8, [X20+2136]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x238F000
	014 Move X0, [X0+1432]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+2136], W8
	018 Move X0, [X19+80]
	019 Compare X0, 0
	020 JumpIfEqual {53}
	021 Move X1, X31
	022 Call Transform.get_childCount, X0
	023 Subtract W20, W0, 1
	024 Move X22, 0x238F000
	025 Move X22, [X22+1432]
	026 Move X0, [X19+80]
	027 Compare X0, 0
	028 JumpIfEqual {53}
	029 Move W1, W20
	030 Move X2, X31
	031 Call Transform.GetChild, X0, X1
	032 Compare X0, 0
	033 JumpIfEqual {53}
	034 Move X1, X31
	035 Call Component.get_gameObject, X0
	036 Move X8, [X22]
	037 Move X21, X0
	038 Move W9, [X8+224]
	039 Compare W9, 0
	040 JumpIfNotEqual {43}
	041 Move X0, X8
	042 Call 0x1C17DFC
	043 Move X0, X21
	044 Move X1, X31
	045 Call Object.Destroy, X0
	046 Subtract W20, W20, 1
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Return 
	053 Call 0x1C17F20

Method: System.Void InspectorSelect()

Disassembly:
	0x01D65354 LDR X0, [X0 + 0x8F0]
	0x01D65358 BL 0x1C16CF4
	0x01D6535C ADRP X0, 0x2390000
	0x01D65360 LDR X0, [X0 + 0x8F8]
	0x01D65364 BL 0x1C16CF4
	0x01D65368 ADRP X0, 0x2390000
	0x01D6536C LDR X0, [X0 + 0x900]
	0x01D65370 BL 0x1C16CF4
	0x01D65374 ADRP X0, 0x2390000
	0x01D65378 LDR X0, [X0 + 0x908]
	0x01D6537C BL 0x1C16CF4
	0x01D65380 ADRP X0, 0x2390000
	0x01D65384 LDR X0, [X0 + 0x910]
	0x01D65388 BL 0x1C16CF4
	0x01D6538C ADRP X0, 0x2390000
	0x01D65390 LDR X0, [X0 + 0x918]
	0x01D65394 BL 0x1C16CF4
	0x01D65398 ADRP X0, 0x2390000
	0x01D6539C LDR X0, [X0 + 0x920]
	0x01D653A0 BL 0x1C16CF4
	0x01D653A4 ADRP X0, 0x2390000
	0x01D653A8 LDR X0, [X0 + 0x928]
	0x01D653AC BL 0x1C16CF4
	0x01D653B0 ADRP X0, 0x2390000
	0x01D653B4 LDR X0, [X0 + 0x930]
	0x01D653B8 BL 0x1C16CF4
	0x01D653BC ADRP X0, 0x2390000
	0x01D653C0 LDR X0, [X0 + 0x938]
	0x01D653C4 BL 0x1C16CF4
	0x01D653C8 ADRP X0, 0x2390000
	0x01D653CC LDR X0, [X0 + 0x940]
	0x01D653D0 BL 0x1C16CF4
	0x01D653D4 ADRP X0, 0x2390000
	0x01D653D8 LDR X0, [X0 + 0x948]
	0x01D653DC BL 0x1C16CF4
	0x01D653E0 ADRP X0, 0x2390000
	0x01D653E4 LDR X0, [X0 + 0x950]
	0x01D653E8 BL 0x1C16CF4
	0x01D653EC ADRP X0, 0x2390000
	0x01D653F0 LDR X0, [X0 + 0x958]
	0x01D653F4 BL 0x1C16CF4
	0x01D653F8 ADRP X0, 0x2390000
	0x01D653FC LDR X0, [X0 + 0x960]
	0x01D65400 BL 0x1C16CF4
	0x01D65404 ADRP X0, 0x2390000
	0x01D65408 LDR X0, [X0 + 0x968]
	0x01D6540C BL 0x1C16CF4
	0x01D65410 ADRP X0, 0x2390000
	0x01D65414 LDR X0, [X0 + 0x970]
	0x01D65418 BL 0x1C16CF4
	0x01D6541C ADRP X0, 0x2390000
	0x01D65420 LDR X0, [X0 + 0x978]
	0x01D65424 BL 0x1C16CF4
	0x01D65428 ADRP X0, 0x2390000
	0x01D6542C LDR X0, [X0 + 0x980]
	0x01D65430 BL 0x1C16CF4
	0x01D65434 ADRP X0, 0x2390000
	0x01D65438 LDR X0, [X0 + 0x988]
	0x01D6543C BL 0x1C16CF4
	0x01D65440 ADRP X0, 0x2390000
	0x01D65444 LDR X0, [X0 + 0x990]
	0x01D65448 BL 0x1C16CF4
	0x01D6544C ADRP X0, 0x2390000
	0x01D65450 LDR X0, [X0 + 0x998]
	0x01D65454 BL 0x1C16CF4
	0x01D65458 MOVZ W8, 0x1
	0x01D6545C STRB W8, [X22 + 0x86D]
	0x01D65460 BL 0x1D659AC
	0x01D65464 LDR X0, [X21]
	0x01D65468 MOV V8.16B, V0.16B
	0x01D6546C MOV V9.16B, V1.16B
	0x01D65470 MOV V10.16B, V2.16B
	0x01D65474 MOV V11.16B, V3.16B
	0x01D65478 BL 0x1C16F10
	0x01D6547C LDR X2, [X19]
	0x01D65480 MOV X1, X31
	0x01D65484 MOV X19, X0
	0x01D65488 BL 0x26AFB18
	0x01D6548C CMP W20, 0x1
	0x01D65490 B.EQ 0x1D65578
	0x01D65494 CMP W20, 0x2
	0x01D65498 B.EQ 0x1D65694
	0x01D6549C CMP W20, 0x3
	0x01D654A0 B.NE 0x1D65768
	0x01D654A4 CBZ X19, 0x1D658D0
	0x01D654A8 LDR X8, [X19 + 0x60]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2674000
	007 Move W8, [X20+2137]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x238F000
	014 Move X0, [X0+1608]
	015 Call 0x1C17CF4
	016 Move X0, 0x238F000
	017 Move X0, [X0+2736]
	018 Call 0x1C17CF4
	019 Move X0, 0x2391000
	020 Move X0, [X0+2112]
	021 Call 0x1C17CF4
	022 Move X0, 0x2391000
	023 Move X0, [X0+2120]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+2137], W8
	027 Move X8, 0x238F000
	028 Move X21, 0x238F000
	029 Move W9, [X19+136]
	030 Move X8, [X8+2736]
	031 Move X21, [X21+1608]
	032 Compare W9, 0
	033 JumpIfEqual {74}
	034 Move X0, [X8]
	035 Move X20, 0x2391000
	036 Move X20, [X20+2112]
	037 Move W1, 1
	038 Call 0x1C17D6C
	039 Move X8, [X20]
	040 Move W22, [X19+140]
	041 Move X19, X0
	042 Move X0, X8
	043 Call 0x1C17F10
	044 Move X1, X31
	045 Move X20, X0
	046 Call BaseAction..ctor, X0
	047 Move [X20+20], W22
	048 Compare X19, 0
	049 JumpIfEqual {93}
	050 Move X8, [X19]
	051 Move X0, X20
	052 Move X1, [X8+64]
	053 Call 0x1C17E00
	054 Compare X0, 0
	055 JumpIfEqual {100}
	056 Move W8, [X19+24]
	057 Compare W8, 0
	058 JumpIfEqual {103}
	059 Move [X19+32], X20
	060 Move X0, [X21]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X0, X19
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X1, X31
	071 Move X30, [X31+48]
	072 Call App.ExecuteActionOrDelay, X0
	073 Return 
	074 Move X9, [X19+128]
	075 Compare X9, 0
	076 JumpIfEqual {94}
	077 Move X0, [X8]
	078 Move W1, 1
	079 Call 0x1C17D6C
	080 Move X8, 0x2391000
	081 Move X22, [X19+128]
	082 Move X8, [X8+2120]
	083 Move X19, X0
	084 Move X8, [X8]
	085 Move X0, X8
	086 Call 0x1C17F10
	087 Move X1, X31
	088 Move X20, X0
	089 Call BaseAction..ctor, X0
	090 Move [X20+24], X22
	091 Compare X19, 0
	092 JumpIfNotEqual {50}
	093 Call 0x1C17F20
	094 Move X20, [X31+32]
	095 Move X19, [X31+40]
	096 Move X22, [X31+16]
	097 Move X21, [X31+24]
	098 Move X30, [X31+48]
	099 Return 
	100 Call 0x1C17F44
	101 Move X1, X31
	102 Call 0x1C17DEC
	103 Call 0x1C17F28

Method: System.Void OnDrawGizmos()

Disassembly:
	0x01D654AC CBZ X8, 0x1D658D0
	0x01D654B0 LDR X0, [X8 + 0x58]
	0x01D654B4 CBZ X0, 0x1D658D0
	0x01D654B8 ADRP X8, 0x2390000
	0x01D654BC ADRP X20, 0x238E000
	0x01D654C0 LDR X8, [X8 + 0x968]
	0x01D654C4 LDR X20, [X20 + 0x900]
	0x01D654C8 LDR X1, [X8]
	0x01D654CC LDR X2, [X20]
	0x01D654D0 BL 0x265C3F4
	0x01D654D4 LDR X8, [X19 + 0x60]
	0x01D654D8 CBZ X8, 0x1D658D0
	0x01D654DC LDR X0, [X8 + 0x60]
	0x01D654E0 CBZ X0, 0x1D658D0
	0x01D654E4 ADRP X21, 0x2390000
	0x01D654E8 LDR X21, [X21 + 0x938]
	0x01D654EC LDR X2, [X20]
	0x01D654F0 LDR X1, [X21]
	0x01D654F4 BL 0x265C3F4
	0x01D654F8 LDR X8, [X19 + 0x60]
	0x01D654FC CBZ X8, 0x1D658D0
	0x01D65500 LDR X0, [X8 + 0x68]
	0x01D65504 CBZ X0, 0x1D658D0
	0x01D65508 LDR X1, [X21]
	0x01D6550C LDR X2, [X20]
	0x01D65510 BL 0x265C3F4
	0x01D65514 LDR X8, [X19 + 0x60]
	0x01D65518 CBZ X8, 0x1D658D0
	0x01D6551C LDR X0, [X8 + 0x70]
	0x01D65520 CBZ X0, 0x1D658D0
	0x01D65524 ADRP X8, 0x2390000
	0x01D65528 LDR X8, [X8 + 0x978]
	0x01D6552C LDR X2, [X20]
	0x01D65530 LDR X1, [X8]
	0x01D65534 BL 0x265C3F4
	0x01D65538 LDR X8, [X19 + 0x60]
	0x01D6553C CBZ X8, 0x1D658D0
	0x01D65540 LDR X0, [X8 + 0x78]
	0x01D65544 CBZ X0, 0x1D658D0
	0x01D65548 ADRP X8, 0x2390000
	0x01D6554C LDR X8, [X8 + 0x970]
	0x01D65550 LDR X2, [X20]
	0x01D65554 LDR X1, [X8]
	0x01D65558 BL 0x265C3F4
	0x01D6555C LDR X8, [X19 + 0x60]
	0x01D65560 CBZ X8, 0x1D658D0
	0x01D65564 LDR X0, [X8 + 0x80]
	0x01D65568 CBZ X0, 0x1D658D0
	0x01D6556C ADRP X8, 0x2390000
	0x01D65570 LDR X8, [X8 + 0x900]
	0x01D65574 B 0x1D65878
	0x01D65578 CBZ X19, 0x1D658D0
	0x01D6557C LDR X8, [X19 + 0x60]
	0x01D65580 CBZ X8, 0x1D658D0
	0x01D65584 LDR X0, [X8 + 0x58]
	0x01D65588 CBZ X0, 0x1D658D0
	0x01D6558C ADRP X8, 0x2390000
	0x01D65590 ADRP X20, 0x238E000
	0x01D65594 LDR X8, [X8 + 0x960]
	0x01D65598 LDR X20, [X20 + 0x900]
	0x01D6559C LDR X1, [X8]
	0x01D655A0 LDR X2, [X20]
	0x01D655A4 BL 0x265C3F4
	0x01D655A8 LDR X8, [X19 + 0x60]
	0x01D655AC CBZ X8, 0x1D658D0
	0x01D655B0 LDR X0, [X8 + 0x60]
	0x01D655B4 CBZ X0, 0x1D658D0
	0x01D655B8 ADRP X21, 0x2390000
	0x01D655BC LDR X21, [X21 + 0x8F0]
	0x01D655C0 LDR X2, [X20]
	0x01D655C4 LDR X1, [X21]
	0x01D655C8 BL 0x265C3F4
	0x01D655CC LDR X8, [X19 + 0x60]
	0x01D655D0 CBZ X8, 0x1D658D0
	0x01D655D4 LDR X0, [X8 + 0x68]
	0x01D655D8 CBZ X0, 0x1D658D0
	0x01D655DC LDR X1, [X21]
	0x01D655E0 LDR X2, [X20]
	0x01D655E4 BL 0x265C3F4
	0x01D655E8 LDR X8, [X19 + 0x60]
	0x01D655EC CBZ X8, 0x1D658D0
	0x01D655F0 LDR X0, [X8 + 0x70]
	0x01D655F4 CBZ X0, 0x1D658D0
	0x01D655F8 ADRP X8, 0x2390000
	0x01D655FC LDR X8, [X8 + 0x8E8]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], D10
	003 Move [X31+144], D9
	004 Move [X31+152], D8
	005 Move [X31+160], X30
	006 Move [X31+168], X21
	007 Move [X31+176], X20
	008 Move [X31+184], X19
	009 Move X21, 0x2674000
	010 Move X20, 0x238F000
	011 Move W8, [X21+2138]
	012 Move X20, [X20+1432]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x238F000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+2138], W8
	023 Move S0, W31
	024 Move S1, 1
	025 Move S2, W31
	026 Move S3, 1
	027 Move X0, X31
	028 Call Gizmos.set_color, X0
	029 Move X0, [X20]
	030 Move X20, [X19+80]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X20
	036 Move X1, X31
	037 Move X2, X31
	038 Call Object.op_Inequality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {98}
	043 Move X0, [X19+80]
	044 Compare X0, 0
	045 JumpIfEqual {107}
	046 Add X8, X31, 64
	047 Move X1, X31
	048 Call Transform.get_localToWorldMatrix, X0
	049 Move V0, [X31+64]
	050 Move V1, [X31+80]
	051 Move V2, [X31+96]
	052 Move V3, [X31+112]
	053 Add X0, X31, 0
	054 Move X1, X31
	055 Move [X31], V0
	056 Move [X31+8], V1
	057 Move [X31+32], V2
	058 Move [X31+40], V3
	059 Call Gizmos.set_matrix, X0
	060 Move X20, 0x2674000
	061 Move W8, [X20+1923]
	062 Compare W8, 0
	063 JumpIfNotEqual {69}
	064 Move X0, 0x238F000
	065 Move X0, [X0+1440]
	066 Call 0x1C17CF4
	067 Move W8, 1
	068 Move [X20+1923], W8
	069 Move X20, 0x238F000
	070 Move X20, [X20+1440]
	071 Move X21, 0x2674000
	072 Move W9, [X21+2139]
	073 Move X8, [X20]
	074 Move X8, [X8+184]
	075 Move S10, [X8]
	076 Move S9, [X8+4]
	077 Move V8, [X8+8]
	078 Compare W9, 0
	079 JumpIfNotEqual {86}
	080 Move X0, X20
	081 Call 0x1C17CF4
	082 Move X8, [X20]
	083 Move W9, 1
	084 Move [X21+2139], W9
	085 Move X8, [X8+184]
	086 Move V0, [X19+112]
	087 Move S1, [X8+12]
	088 Move S2, [X8+16]
	089 Move V5, [X8+20]
	090 Move X0, X31
	091 Multiply S3, S1, S0
	092 Multiply S4, S2, S0
	093 Multiply S5, S5, S0
	094 Move V0, V10
	095 Move V1, V9
	096 Move V2, V8
	097 Call Gizmos.DrawWireCube, X0, X1
	098 Move X20, [X31+176]
	099 Move X19, [X31+184]
	100 Move X30, [X31+160]
	101 Move X21, [X31+168]
	102 Move D9, [X31+144]
	103 Move D8, [X31+152]
	104 Move V10, [X31+128]
	105 Add X31, X31, 192
	106 Return 
	107 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01D65600 LDR X2, [X20]
	0x01D65604 LDR X1, [X8]
	0x01D65608 BL 0x265C3F4
	0x01D6560C LDR X8, [X19 + 0x60]

ISIL:
	001 Move W8, 0x40000000
	002 Move X1, X31
	003 Move [X0+112], W8
	004 Call MonoBehaviour..ctor, X0
	005 Return 

