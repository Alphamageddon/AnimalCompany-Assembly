Type: AnimalCompany.LogInUserAction

Method: System.Void .ctor(AnimalCompany.AuthCommands/LoginResult loginResult)

Disassembly:
	0x01D4C6A4 LDR W9, [X10]
	0x01D4C6A8 ADD W9, W9, 0x6
	0x01D4C6AC ADD X8, X8, W9, 0x4, SXTW
	0x01D4C6B0 ADD X0, X8, 0x138
	0x01D4C6B4 LDP X8, X1, [X0]
	0x01D4C6B8 MOV X0, X21
	0x01D4C6BC BLR X8
	0x01D4C6C0 MOV X1, X31
	0x01D4C6C4 BL 0x32277A8
	0x01D4C6C8 TBNZ X0, 0x0, 0x1D4C794
	0x01D4C6CC LDR X21, [X19 + 0x18]
	0x01D4C6D0 CBZ X21, 0x1D4C7B0
	0x01D4C6D4 LDR X8, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call BaseAction..ctor, X0
	008 Add X0, X20, 24
	009 Move W2, 112
	010 Move X1, X19
	011 Call 0x3EB2B30
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void Execute(AnimalCompany.AppState state)

Disassembly:
	0x01D4C6D8 LDR X1, [X23]
	0x01D4C6DC LDRH W9, [X8 + 0x12E]
	0x01D4C6E0 CBZ X9, 0x1D4C704
	0x01D4C6E4 LDR X10, [X8 + 0xB0]
	0x01D4C6E8 ADD X10, X10, 0x8
	0x01D4C6EC LDUR X11, [X10 - 0x8]
	0x01D4C6F0 CMP X11, X1
	0x01D4C6F4 B.EQ 0x1D4C714
	0x01D4C6F8 SUBS X9, X9, 0x1
	0x01D4C6FC ADD X10, X10, 0x10
	0x01D4C700 B.NE 0x1D4C6EC
	0x01D4C704 MOVZ W2, 0x6
	0x01D4C708 MOV X0, X21
	0x01D4C70C BL 0x1C5C788
	0x01D4C710 B 0x1D4C724
	0x01D4C714 LDR W9, [X10]
	0x01D4C718 ADD W9, W9, 0x6
	0x01D4C71C ADD X8, X8, W9, 0x4, SXTW
	0x01D4C720 ADD X0, X8, 0x138
	0x01D4C724 LDP X8, X1, [X0]
	0x01D4C728 MOV X0, X21
	0x01D4C72C BLR X8
	0x01D4C730 ADRP X8, 0x23A8000
	0x01D4C734 LDR X8, [X8 + 0xA18]
	0x01D4C738 LDR X1, [X8]
	0x01D4C73C BL 0x22112F8
	0x01D4C740 LDR X8, [X20 + 0xB8]
	0x01D4C744 CBZ X8, 0x1D4C7B8
	0x01D4C748 LDR X8, [X8 + 0x80]
	0x01D4C74C CBZ X8, 0x1D4C7BC
	0x01D4C750 MOV X21, X0
	0x01D4C754 LDR X0, [X8 + 0x48]
	0x01D4C758 CBZ X0, 0x1D4C7C8
	0x01D4C75C ADRP X22, 0x23A7000
	0x01D4C760 LDR X22, [X22 + 0xE40]
	0x01D4C764 LDR X2, [X22]
	0x01D4C768 MOV W1, W21
	0x01D4C76C BL 0x2658054
	0x01D4C770 LDR X8, [X20 + 0xB8]
	0x01D4C774 CBZ X8, 0x1D4C7D0
	0x01D4C778 LDR X8, [X8 + 0x80]
	0x01D4C77C CBZ X8, 0x1D4C7D4
	0x01D4C780 LDR X0, [X8 + 0x50]
	0x01D4C784 CBZ X0, 0x1D4C7D8
	0x01D4C788 LDR X2, [X22]
	0x01D4C78C UBFM X1, X21, 0x20, 0x3F
	0x01D4C790 BL 0x2658054
	0x01D4C794 LDP X20, X19, [X31 + 0x30]
	0x01D4C798 LDP X22, X21, [X31 + 0x20]
	0x01D4C79C LDP X24, X23, [X31 + 0x10]
	0x01D4C7A0 LDP X30, X25, [X31], #0x40
	0x01D4C7A4 RET
	0x01D4C7A8 MOV X25, X23
	0x01D4C7AC BL 0x1C16F20
	0x01D4C7B0 BL 0x1C16F20
	0x01D4C7B4 BL 0x1C16F20
	0x01D4C7B8 BL 0x1C16F20
	0x01D4C7BC BL 0x1C16F20
	0x01D4C7C0 MOV X25, X23
	0x01D4C7C4 BL 0x1C16F20
	0x01D4C7C8 BL 0x1C16F20
	0x01D4C7CC BL 0x1C16F20
	0x01D4C7D0 BL 0x1C16F20
	0x01D4C7D4 BL 0x1C16F20
	0x01D4C7D8 BL 0x1C16F20
	0x01D4C7DC B 0x1D4C810
	0x01D4C7E0 B 0x1D4C810
	0x01D4C7E4 B 0x1D4CAE0
	0x01D4C7E8 B 0x1D4C810
	0x01D4C7EC B 0x1D4CADC
	0x01D4C7F0 B 0x1D4C810
	0x01D4C7F4 B 0x1D4C810
	0x01D4C7F8 B 0x1D4C810
	0x01D4C7FC B 0x1D4CAE0
	0x01D4C800 B 0x1D4CADC
	0x01D4C804 B 0x1D4C810
	0x01D4C808 B 0x1D4C810
	0x01D4C80C B 0x1D4CADC
	0x01D4C810 MOV X21, X0
	0x01D4C814 CMP W1, 0x1
	0x01D4C818 B.NE 0x1D4CE10
	0x01D4C81C MOV X0, X21
	0x01D4C820 BL 0x3EB1AD0
	0x01D4C824 MOV X20, X0
	0x01D4C828 ADRP X0, 0x23A7000
	0x01D4C82C LDR X0, [X0 + 0x7D0]
	0x01D4C830 BL 0x1C16D08
	0x01D4C834 LDR X8, [X20]
	0x01D4C838 LDR X1, [X8]
	0x01D4C83C BL 0x1C17270
	0x01D4C840 TBZ X0, 0x0, 0x1D4CAAC
	0x01D4C844 LDR X20, [X20]
	0x01D4C848 BL 0x3EB1AE0
	0x01D4C84C ADRP X0, 0x23A7000
	0x01D4C850 LDR X0, [X0 + 0x720]
	0x01D4C854 BL 0x1C16D08
	0x01D4C858 BL 0x1C16F10
	0x01D4C85C MOV X21, X0
	0x01D4C860 ADRP X0, 0x23A7000
	0x01D4C864 LDR X0, [X0 + 0x718]
	0x01D4C868 BL 0x1C16D08
	0x01D4C86C MOV X1, X0
	0x01D4C870 MOV X0, X21
	0x01D4C874 BL 0x2AA4804
	0x01D4C878 LDR X22, [X19 + 0x18]
	0x01D4C87C CBZ X22, 0x1D4CD24
	0x01D4C880 ADRP X0, 0x23A8000
	0x01D4C884 LDR X0, [X0 + 0x918]
	0x01D4C888 BL 0x1C16D08
	0x01D4C88C LDR X8, [X22]
	0x01D4C890 MOV X1, X0
	0x01D4C894 LDRH W9, [X8 + 0x12E]
	0x01D4C898 CBZ X9, 0x1D4C8BC
	0x01D4C89C LDR X10, [X8 + 0xB0]
	0x01D4C8A0 ADD X10, X10, 0x8
	0x01D4C8A4 LDUR X11, [X10 - 0x8]
	0x01D4C8A8 CMP X11, X1
	0x01D4C8AC B.EQ 0x1D4C8CC
	0x01D4C8B0 SUBS X9, X9, 0x1
	0x01D4C8B4 ADD X10, X10, 0x10
	0x01D4C8B8 B.NE 0x1D4C8A4
	0x01D4C8BC MOVZ W2, 0x4
	0x01D4C8C0 MOV X0, X22
	0x01D4C8C4 BL 0x1C5C788
	0x01D4C8C8 B 0x1D4C8DC
	0x01D4C8CC LDR W9, [X10]
	0x01D4C8D0 ADD W9, W9, 0x4
	0x01D4C8D4 ADD X8, X8, W9, 0x4, SXTW
	0x01D4C8D8 ADD X0, X8, 0x138
	0x01D4C8DC LDP X8, X1, [X0]
	0x01D4C8E0 MOV X0, X22
	0x01D4C8E4 BLR X8
	0x01D4C8E8 CBZ X0, 0x1D4CD24
	0x01D4C8EC MOV X22, X0
	0x01D4C8F0 ADRP X0, 0x23A7000
	0x01D4C8F4 LDR X0, [X0 + 0xF28]
	0x01D4C8F8 BL 0x1C16D08
	0x01D4C8FC LDR X8, [X22]
	0x01D4C900 MOV X1, X0
	0x01D4C904 LDRH W9, [X8 + 0x12E]
	0x01D4C908 CBZ X9, 0x1D4C92C
	0x01D4C90C LDR X10, [X8 + 0xB0]
	0x01D4C910 ADD X10, X10, 0x8
	0x01D4C914 LDUR X11, [X10 - 0x8]
	0x01D4C918 CMP X11, X1
	0x01D4C91C B.EQ 0x1D4C93C
	0x01D4C920 SUBS X9, X9, 0x1
	0x01D4C924 ADD X10, X10, 0x10
	0x01D4C928 B.NE 0x1D4C914
	0x01D4C92C MOVZ W2, 0x9
	0x01D4C930 MOV X0, X22
	0x01D4C934 BL 0x1C5C788
	0x01D4C938 B 0x1D4C94C
	0x01D4C93C LDR W9, [X10]
	0x01D4C940 ADD W9, W9, 0x9
	0x01D4C944 ADD X8, X8, W9, 0x4, SXTW
	0x01D4C948 ADD X0, X8, 0x138
	0x01D4C94C LDP X8, X1, [X0]
	0x01D4C950 MOV X0, X22
	0x01D4C954 BLR X8
	0x01D4C958 CBZ X21, 0x1D4CD24
	0x01D4C95C MOV X22, X0
	0x01D4C960 ADRP X0, 0x23A8000
	0x01D4C964 LDR X0, [X0 + 0xA20]
	0x01D4C968 BL 0x1C16D08
	0x01D4C96C MOV X23, X0
	0x01D4C970 ADRP X0, 0x23A7000
	0x01D4C974 LDR X0, [X0 + 0x710]
	0x01D4C978 BL 0x1C16D08
	0x01D4C97C MOV X3, X0
	0x01D4C980 MOV X0, X21
	0x01D4C984 MOV X1, X23
	0x01D4C988 MOV X2, X22
	0x01D4C98C BL 0x2AA5098
	0x01D4C990 LDR X19, [X19 + 0x18]
	0x01D4C994 CBZ X19, 0x1D4CD24
	0x01D4C998 ADRP X0, 0x23A8000
	0x01D4C99C LDR X0, [X0 + 0x918]
	0x01D4C9A0 BL 0x1C16D08
	0x01D4C9A4 LDR X8, [X19]
	0x01D4C9A8 MOV X1, X0
	0x01D4C9AC LDRH W9, [X8 + 0x12E]
	0x01D4C9B0 CBZ X9, 0x1D4C9D4
	0x01D4C9B4 LDR X10, [X8 + 0xB0]
	0x01D4C9B8 ADD X10, X10, 0x8
	0x01D4C9BC LDUR X11, [X10 - 0x8]
	0x01D4C9C0 CMP X11, X1
	0x01D4C9C4 B.EQ 0x1D4C9E4
	0x01D4C9C8 SUBS X9, X9, 0x1
	0x01D4C9CC ADD X10, X10, 0x10
	0x01D4C9D0 B.NE 0x1D4C9BC
	0x01D4C9D4 MOVZ W2, 0x6
	0x01D4C9D8 MOV X0, X19
	0x01D4C9DC BL 0x1C5C788
	0x01D4C9E0 B 0x1D4C9F4
	0x01D4C9E4 LDR W9, [X10]
	0x01D4C9E8 ADD W9, W9, 0x6
	0x01D4C9EC ADD X8, X8, W9, 0x4, SXTW
	0x01D4C9F0 ADD X0, X8, 0x138
	0x01D4C9F4 LDP X8, X1, [X0]
	0x01D4C9F8 MOV X0, X19
	0x01D4C9FC BLR X8
	0x01D4CA00 MOV X19, X0
	0x01D4CA04 ADRP X0, 0x23A8000
	0x01D4CA08 LDR X0, [X0 + 0xA28]
	0x01D4CA0C BL 0x1C16D08
	0x01D4CA10 MOV X22, X0
	0x01D4CA14 ADRP X0, 0x23A7000
	0x01D4CA18 LDR X0, [X0 + 0x710]
	0x01D4CA1C BL 0x1C16D08
	0x01D4CA20 MOV X3, X0
	0x01D4CA24 MOV X0, X21
	0x01D4CA28 MOV X1, X22
	0x01D4CA2C MOV X2, X19
	0x01D4CA30 BL 0x2AA5098
	0x01D4CA34 ADRP X0, 0x23A7000
	0x01D4CA38 LDR X0, [X0 + 0x788]
	0x01D4CA3C BL 0x1C16D08
	0x01D4CA40 LDR W8, [X0 + 0xE0]
	0x01D4CA44 CBNZ W8, 0x1D4CA4C
	0x01D4CA48 BL 0x1C16DFC
	0x01D4CA4C ADRP X0, 0x23A8000
	0x01D4CA50 LDR X0, [X0 + 0xA30]
	0x01D4CA54 BL 0x1C16D08
	0x01D4CA58 MOV X19, X0
	0x01D4CA5C ADRP X0, 0x23A8000
	0x01D4CA60 LDR X0, [X0 + 0xA38]
	0x01D4CA64 BL 0x1C16D08
	0x01D4CA68 MOV X22, X0
	0x01D4CA6C ADRP X0, 0x23A8000
	0x01D4CA70 LDR X0, [X0 + 0xA40]
	0x01D4CA74 BL 0x1C16D08
	0x01D4CA78 MOV X1, X19
	0x01D4CA7C MOV X2, X20
	0x01D4CA80 MOV X3, X21
	0x01D4CA84 MOV X4, X22
	0x01D4CA88 LDP X20, X19, [X31 + 0x30]
	0x01D4CA8C LDP X22, X21, [X31 + 0x20]
	0x01D4CA90 LDP X24, X23, [X31 + 0x10]
	0x01D4CA94 MOV X5, X0
	0x01D4CA98 MOVZ W0, 0x800
	0x01D4CA9C MOVZ W6, 0x69
	0x01D4CAA0 MOV X7, X31
	0x01D4CAA4 LDP X30, X25, [X31], #0x40
	0x01D4CAA8 B 0x35C2674
	0x01D4CAAC MOVZ W0, 0x8
	0x01D4CAB0 BL 0x3EB1AF0
	0x01D4CAB4 LDR X8, [X20]
	0x01D4CAB8 STR X8, [X0]
	0x01D4CABC ADRP X1, 0x2168000
	0x01D4CAC0 ADD X1, X1, 0xE58
	0x01D4CAC4 MOV X2, X31
	0x01D4CAC8 BL 0x3EB1B00
	0x01D4CACC B 0x1D4CE08
	0x01D4CAD0 MOV X21, X0
	0x01D4CAD4 BL 0x3EB1AE0
	0x01D4CAD8 B 0x1D4CE10
	0x01D4CADC MOV X25, X23
	0x01D4CAE0 MOV X21, X0
	0x01D4CAE4 CMP W1, 0x1
	0x01D4CAE8 B.NE 0x1D4CE10
	0x01D4CAEC MOV X0, X21
	0x01D4CAF0 BL 0x3EB1AD0
	0x01D4CAF4 MOV X21, X0
	0x01D4CAF8 ADRP X0, 0x23A7000
	0x01D4CAFC LDR X0, [X0 + 0x7D0]
	0x01D4CB00 BL 0x1C16D08
	0x01D4CB04 LDR X8, [X21]
	0x01D4CB08 LDR X1, [X8]
	0x01D4CB0C BL 0x1C17270
	0x01D4CB10 TBZ X0, 0x0, 0x1D4CDE8
	0x01D4CB14 LDR X21, [X21]
	0x01D4CB18 BL 0x3EB1AE0
	0x01D4CB1C ADRP X0, 0x23A7000
	0x01D4CB20 LDR X0, [X0 + 0x720]
	0x01D4CB24 BL 0x1C16D08
	0x01D4CB28 BL 0x1C16F10
	0x01D4CB2C MOV X22, X0
	0x01D4CB30 ADRP X0, 0x23A7000
	0x01D4CB34 LDR X0, [X0 + 0x718]
	0x01D4CB38 BL 0x1C16D08
	0x01D4CB3C MOV X1, X0
	0x01D4CB40 MOV X0, X22
	0x01D4CB44 BL 0x2AA4804
	0x01D4CB48 LDR X23, [X19 + 0x18]
	0x01D4CB4C CBZ X23, 0x1D4CD24

ISIL:
	001 Subtract X31, X31, 400
	002 Move [X31+320], X29
	003 Move [X31+336], X30
	004 Move [X31+344], X25
	005 Move [X31+352], X24
	006 Move [X31+360], X23
	007 Move [X31+368], X22
	008 Move [X31+376], X21
	009 Move [X31+384], X20
	010 Move [X31+392], X19
	011 Move X22, 0x268D000
	012 Move X21, 0x23A9000
	013 Move W8, [X22+1940]
	014 Move X21, [X21+1360]
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {50}
	021 Move X0, 0x23A8000
	022 Move X0, [X0+2416]
	023 Call 0x1C17CF4
	024 Move X0, 0x23A9000
	025 Move X0, [X0+2328]
	026 Call 0x1C17CF4
	027 Move X0, 0x23A8000
	028 Move X0, [X0+3880]
	029 Call 0x1C17CF4
	030 Move X0, 0x23A8000
	031 Move X0, [X0+2080]
	032 Call 0x1C17CF4
	033 Move X0, 0x23A9000
	034 Move X0, [X0+376]
	035 Call 0x1C17CF4
	036 Move X0, 0x23A8000
	037 Move X0, [X0+3632]
	038 Call 0x1C17CF4
	039 Move X0, 0x23A8000
	040 Move X0, [X0+2320]
	041 Call 0x1C17CF4
	042 Move X0, 0x23A9000
	043 Move X0, [X0+1360]
	044 Call 0x1C17CF4
	045 Move X0, 0x23A9000
	046 Move X0, [X0+1368]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X22+1940], W8
	050 Move X0, [X21]
	051 Move X22, [X20+32]
	052 Call 0x1C17F10
	053 Move X1, X31
	054 Move X21, X0
	055 Call BaseAction..ctor, X0
	056 Move X8, [X21]
	057 Move [X21+24], X22
	058 Move X0, X21
	059 Move X1, X19
	060 Move X9, [X8+424]
	061 Move X2, [X8+432]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Compare X19, 0
	064 JumpIfEqual {316}
	065 Move X8, [X19+184]
	066 Compare X8, 0
	067 JumpIfEqual {316}
	068 Move X22, [X8+112]
	069 Add X21, X20, 40
	070 Add X0, X31, 240
	071 Move W2, 80
	072 Move X1, X21
	073 Call 0x3EB2AC0
	074 Move X23, [X20+32]
	075 Compare X23, 0
	076 JumpIfEqual {316}
	077 Move X24, 0x23A9000
	078 Move X8, [X23]
	079 Move X24, [X24+2328]
	080 NotImplemented "Instruction LDRH not yet implemented."
	081 Move X1, [X24]
	082 Compare X9, 0
	083 JumpIfEqual {90}
	084 Move X10, [X8+176]
	085 Add X10, X10, 8
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Subtract X9, X9, 1
	089 Add X10, X10, 16
	090 Move W2, 4
	091 Move X0, X23
	092 Call 0x1C5D788
	093 Move W9, [X10]
	094 Add W9, W9, 4
	095 Add X8, X8, W9
	096 Add X0, X8, 312
	097 Move X8, [X0]
	098 Move X1, [X0+8]
	099 Move X0, X23
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Compare X0, 0
	102 JumpIfEqual {316}
	103 Move X25, 0x23A8000
	104 Move X8, [X0]
	105 Move X25, [X25+3880]
	106 Move X23, X0
	107 NotImplemented "Instruction LDRH not yet implemented."
	108 Move X1, [X25]
	109 Compare X9, 0
	110 JumpIfEqual {117}
	111 Move X10, [X8+176]
	112 Add X10, X10, 8
	113 NotImplemented "Instruction LDUR not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Subtract X9, X9, 1
	116 Add X10, X10, 16
	117 Move W2, 9
	118 Move X0, X23
	119 Call 0x1C5D788
	120 Move W9, [X10]
	121 Add W9, W9, 9
	122 Add X8, X8, W9
	123 Add X0, X8, 312
	124 Move X8, [X0]
	125 Move X1, [X0+8]
	126 Move X0, X23
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Compare X22, 0
	129 JumpIfEqual {316}
	130 Move X23, X0
	131 Add X0, X31, 160
	132 Add X1, X31, 240
	133 Move W2, 80
	134 Call 0x3EB2AC0
	135 Add X1, X31, 160
	136 Move X0, X22
	137 Move X2, X23
	138 Call UserAvatarState.FromApiModel, X0, X1, X2
	139 Move X8, [X19+184]
	140 Compare X8, 0
	141 JumpIfEqual {316}
	142 Move X22, [X8+120]
	143 Add X0, X31, 80
	144 Move W2, 80
	145 Move X1, X21
	146 Call 0x3EB2AC0
	147 Move X21, [X20+32]
	148 Compare X21, 0
	149 JumpIfEqual {316}
	150 Move X8, [X21]
	151 Move X1, [X24]
	152 NotImplemented "Instruction LDRH not yet implemented."
	153 Compare X9, 0
	154 JumpIfEqual {161}
	155 Move X10, [X8+176]
	156 Add X10, X10, 8
	157 NotImplemented "Instruction LDUR not yet implemented."
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Subtract X9, X9, 1
	160 Add X10, X10, 16
	161 Move W2, 4
	162 Move X0, X21
	163 Call 0x1C5D788
	164 Move W9, [X10]
	165 Add W9, W9, 4
	166 Add X8, X8, W9
	167 Add X0, X8, 312
	168 Move X8, [X0]
	169 Move X1, [X0+8]
	170 Move X0, X21
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Compare X0, 0
	173 JumpIfEqual {316}
	174 Move X8, [X0]
	175 Move X1, [X25]
	176 Move X21, X0
	177 NotImplemented "Instruction LDRH not yet implemented."
	178 Compare X9, 0
	179 JumpIfEqual {186}
	180 Move X10, [X8+176]
	181 Add X10, X10, 8
	182 NotImplemented "Instruction LDUR not yet implemented."
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Subtract X9, X9, 1
	185 Add X10, X10, 16
	186 Move W2, 9
	187 Move X0, X21
	188 Call 0x1C5D788
	189 Move W9, [X10]
	190 Add W9, W9, 9
	191 Add X8, X8, W9
	192 Add X0, X8, 312
	193 Move X8, [X0]
	194 Move X1, [X0+8]
	195 Move X0, X21
	196 NotImplemented "Instruction BLR not yet implemented."
	197 Compare X22, 0
	198 JumpIfEqual {316}
	199 Move X23, 0x23A9000
	200 Move X24, 0x23A8000
	201 Move X23, [X23+1368]
	202 Move X24, [X24+2416]
	203 Move X21, X0
	204 Add X0, X31, 0
	205 Add X1, X31, 80
	206 Move W2, 80
	207 Call 0x3EB2AC0
	208 Add X1, X31, 0
	209 Move X0, X22
	210 Move X2, X21
	211 Call UserAvatarState.FromApiModel, X0, X1, X2
	212 Move X0, [X23]
	213 Move X21, [X20+120]
	214 Call 0x1C17F10
	215 Move X1, X31
	216 Move X20, X0
	217 Call BaseAction..ctor, X0
	218 Move X8, [X20]
	219 Move [X20+24], X21
	220 Move X0, X20
	221 Move X1, X19
	222 Move X9, [X8+424]
	223 Move X2, [X8+432]
	224 NotImplemented "Instruction BLR not yet implemented."
	225 Move X0, [X24]
	226 Move W8, [X0+224]
	227 Compare W8, 0
	228 JumpIfNotEqual {230}
	229 Call 0x1C17DFC
	230 Move X20, 0x23A8000
	231 Move X20, [X20+3632]
	232 Move X0, X31
	233 Call Application.get_isEditor
	234 Move TEMP, X0
	235 And TEMP, TEMP, 1
	236 Compare TEMP, 1
	237 JumpIfNotEqual {247}
	238 Move X8, [X19+184]
	239 Compare X8, 0
	240 JumpIfEqual {316}
	241 Move X0, [X8+152]
	242 Compare X0, 0
	243 JumpIfEqual {316}
	244 Move X2, [X20]
	245 Move W1, 1
	246 Call 0x26528D0, X0, X1
	247 Move X8, [X19+184]
	248 Compare X8, 0
	249 JumpIfEqual {316}
	250 Move X9, 0x23A9000
	251 Move X9, [X9+376]
	252 Move X0, [X8+152]
	253 Move X1, [X9]
	254 Call 0x2652A74, X0
	255 Move TEMP, X0
	256 And TEMP, TEMP, 1
	257 Compare TEMP, 1
	258 JumpIfNotEqual {267}
	259 Move X8, [X19+168]
	260 Compare X8, 0
	261 JumpIfEqual {316}
	262 Move X0, [X8+88]
	263 Compare X0, 0
	264 JumpIfEqual {316}
	265 Move W8, [X0+76]
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Move X0, X31
	268 Call Random.get_value
	269 Move X8, -19271680
	270 Move V1, [X8+816]
	271 NotImplemented "Instruction FCMP not yet implemented."
	272 Move X8, [X19+168]
	273 Compare X8, 0
	274 JumpIfEqual {316}
	275 Move X0, [X8+88]
	276 Compare X0, 0
	277 JumpIfEqual {316}
	278 Move W8, [X0+76]
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Move X8, -19271680
	281 Move V1, [X8+1036]
	282 NotImplemented "Instruction FCMP not yet implemented."
	283 Move X8, [X19+168]
	284 Compare X8, 0
	285 JumpIfEqual {316}
	286 Move X0, [X8+88]
	287 Compare X0, 0
	288 JumpIfEqual {316}
	289 Move W8, [X0+76]
	290 NotImplemented "Instruction CMP not yet implemented."
	291 Move X8, 0x23A8000
	292 Move X8, [X8+2320]
	293 Move W1, 4
	294 Move X8, 0x23A8000
	295 Move X8, [X8+2320]
	296 Move W1, 3
	297 Move X2, [X8]
	298 Call StatePrimitive`1<Int32Enum>.set_value, X0, X1
	299 Move X0, [X19+176]
	300 Compare X0, 0
	301 JumpIfEqual {316}
	302 Move X2, [X20]
	303 Move X20, [X31+384]
	304 Move X19, [X31+392]
	305 Move X22, [X31+368]
	306 Move X21, [X31+376]
	307 Move X24, [X31+352]
	308 Move X23, [X31+360]
	309 Move X30, [X31+336]
	310 Move X25, [X31+344]
	311 Move X29, [X31+320]
	312 Move W1, 1
	313 Add X31, X31, 400
	314 Call 0x26528D0, X0, X1
	315 Return 
	316 Call 0x1C17F20

