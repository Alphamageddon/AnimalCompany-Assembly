Type: AnimalCompany.LogInUserAction

Method: System.Void .ctor(Nakama.ISession session, Nakama.IApiAccount account)

Disassembly:
	0x01C90520 BL 0x3425E3C
	0x01C90524 ADRP X8, 0x22BD000
	0x01C90528 LDR X8, [X8 + 0xB58]
	0x01C9052C LDR X0, [X8]
	0x01C90530 BL 0x1B6EA0C
	0x01C90534 MOV X1, X22
	0x01C90538 MOV X2, X31
	0x01C9053C MOV X21, X0
	0x01C90540 BL 0x3424944
	0x01C90544 MOVZ W8, 0x2
	0x01C90548 STR X21, [X19 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move X19, X2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move [X21+24], X20
	011 Move [X21+32], X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return 

Method: System.Void Execute(AnimalCompany.AppState state)

Disassembly:
	0x01C973D8 CBNZ W8, 0x1C973E0
	0x01C973DC BL 0x1B6E8F8
	0x01C973E0 ADRP X0, 0x22B7000
	0x01C973E4 LDR X0, [X0 + 0xC0]
	0x01C973E8 BL 0x1B6E804
	0x01C973EC MOV X23, X0
	0x01C973F0 ADRP X0, 0x22B7000
	0x01C973F4 LDR X0, [X0 + 0xA8]
	0x01C973F8 BL 0x1B6E804
	0x01C973FC MOV X24, X0
	0x01C97400 ADRP X0, 0x22B7000
	0x01C97404 LDR X0, [X0 + 0xB0]
	0x01C97408 BL 0x1B6E804
	0x01C9740C MOV X5, X0
	0x01C97410 MOVZ W0, 0x800
	0x01C97414 MOVZ W6, 0x26
	0x01C97418 MOV X1, X23
	0x01C9741C MOV X2, X21
	0x01C97420 MOV X3, X22
	0x01C97424 MOV X4, X24
	0x01C97428 MOV X7, X31
	0x01C9742C BL 0x342B884
	0x01C97430 ADRP X22, 0x22B7000
	0x01C97434 LDR X22, [X22 + 0x80]
	0x01C97438 MOV X23, X25
	0x01C9743C B 0x1C96BD4
	0x01C97440 MOVZ W0, 0x8
	0x01C97444 BL 0x3D19860
	0x01C97448 LDR X8, [X21]
	0x01C9744C STR X8, [X0]
	0x01C97450 ADRP X1, 0x2085000
	0x01C97454 ADD X1, X1, 0xBD8
	0x01C97458 MOV X2, X31
	0x01C9745C BL 0x3D19870
	0x01C97460 MOV X21, X0
	0x01C97464 BL 0x3D19850
	0x01C97468 MOV X0, X21
	0x01C9746C BL 0x1C8418C
	0x01C97470 BL 0x18F46A8
	0x01C97474 STR X30, [X31 - 0x20]!
	0x01C97478 STP X20, X19, [X31 + 0x10]
	0x01C9747C MOV W19, W1
	0x01C97480 MOV X1, X31
	0x01C97484 MOV X20, X0
	0x01C97488 BL 0x32276F8
	0x01C9748C STR W19, [X20 + 0x14]
	0x01C97490 LDP X20, X19, [X31 + 0x10]
	0x01C97494 LDR X30, [X31], #0x20
	0x01C97498 RET
	0x01C9749C STP X30, X21, [X31 - 0x20]!
	0x01C974A0 STP X20, X19, [X31 + 0x10]
	0x01C974A4 ADRP X21, 0x258C000
	0x01C974A8 LDRB W8, [X21 + 0x3D8]
	0x01C974AC MOV X20, X1
	0x01C974B0 MOV X19, X0
	0x01C974B4 TBNZ X8, 0x0, 0x1C974CC
	0x01C974B8 ADRP X0, 0x22B7000
	0x01C974BC LDR X0, [X0 + 0x88]
	0x01C974C0 BL 0x1B6E7F0
	0x01C974C4 MOVZ W8, 0x1
	0x01C974C8 STRB W8, [X21 + 0x3D8]
	0x01C974CC CBZ X20, 0x1C97504
	0x01C974D0 LDR X8, [X20 + 0xA8]
	0x01C974D4 CBZ X8, 0x1C97504
	0x01C974D8 LDR X8, [X8 + 0x68]
	0x01C974DC CBZ X8, 0x1C97504
	0x01C974E0 LDR X0, [X8 + 0x48]
	0x01C974E4 CBZ X0, 0x1C97504
	0x01C974E8 ADRP X8, 0x22B7000
	0x01C974EC LDR X8, [X8 + 0x88]
	0x01C974F0 LDR W1, [X19 + 0x14]
	0x01C974F4 LDP X20, X19, [X31 + 0x10]
	0x01C974F8 LDR X2, [X8]
	0x01C974FC LDP X30, X21, [X31], #0x20
	0x01C97500 B 0x24BB894
	0x01C97504 BL 0x1B6EA1C
	0x01C97508 LDR X0, [X0 + 0x48]
	0x01C9750C RET
	0x01C97510 STR X1, [X0 + 0x48]
	0x01C97514 RET
	0x01C97518 LDR X0, [X0 + 0x50]
	0x01C9751C RET
	0x01C97520 STR X1, [X0 + 0x50]
	0x01C97524 RET
	0x01C97528 LDR X0, [X0 + 0x58]
	0x01C9752C RET
	0x01C97530 STR X1, [X0 + 0x58]
	0x01C97534 RET
	0x01C97538 LDR X0, [X0 + 0x60]
	0x01C9753C RET
	0x01C97540 STR X1, [X0 + 0x60]
	0x01C97544 RET
	0x01C97548 LDR X0, [X0 + 0x68]
	0x01C9754C RET
	0x01C97550 STR X1, [X0 + 0x68]
	0x01C97554 RET
	0x01C97558 LDR X0, [X0 + 0x70]
	0x01C9755C RET
	0x01C97560 STR X1, [X0 + 0x70]
	0x01C97564 RET
	0x01C97568 MOV X1, X31
	0x01C9756C B 0x3436BE4
	0x01C97570 LDR X0, [X0 + 0x48]
	0x01C97574 RET
	0x01C97578 STR X1, [X0 + 0x48]
	0x01C9757C RET
	0x01C97580 MOV X1, X31
	0x01C97584 B 0x3436BE4
	0x01C97588 STR X30, [X31 - 0x40]!
	0x01C9758C STP X24, X23, [X31 + 0x10]
	0x01C97590 STP X22, X21, [X31 + 0x20]
	0x01C97594 STP X20, X19, [X31 + 0x30]
	0x01C97598 ADRP X23, 0x258C000
	0x01C9759C ADRP X24, 0x22B6000
	0x01C975A0 ADRP X19, 0x22B7000
	0x01C975A4 ADRP X22, 0x22B6000
	0x01C975A8 ADRP X21, 0x22B6000
	0x01C975AC LDRB W8, [X23 + 0x3D9]
	0x01C975B0 LDR X24, [X24 + 0xB90]
	0x01C975B4 LDR X19, [X19 + 0xC8]
	0x01C975B8 LDR X22, [X22 + 0xBA0]
	0x01C975BC LDR X21, [X21 + 0x4E8]
	0x01C975C0 MOV X20, X0
	0x01C975C4 TBNZ X8, 0x0, 0x1C97600
	0x01C975C8 ADRP X0, 0x22B6000
	0x01C975CC LDR X0, [X0 + 0x4E8]
	0x01C975D0 BL 0x1B6E7F0
	0x01C975D4 ADRP X0, 0x22B6000
	0x01C975D8 LDR X0, [X0 + 0xBA0]
	0x01C975DC BL 0x1B6E7F0
	0x01C975E0 ADRP X0, 0x22B6000
	0x01C975E4 LDR X0, [X0 + 0xB90]
	0x01C975E8 BL 0x1B6E7F0
	0x01C975EC ADRP X0, 0x22B7000
	0x01C975F0 LDR X0, [X0 + 0xC8]
	0x01C975F4 BL 0x1B6E7F0
	0x01C975F8 MOVZ W8, 0x1
	0x01C975FC STRB W8, [X23 + 0x3D9]
	0x01C97600 LDR X0, [X24]
	0x01C97604 BL 0x1B6EA0C
	0x01C97608 LDR X2, [X19]
	0x01C9760C MOV X1, X20
	0x01C97610 MOV X3, X31
	0x01C97614 MOV X19, X0
	0x01C97618 BL 0x342E500
	0x01C9761C LDR X0, [X22]
	0x01C97620 MOVZ W1, 0x1
	0x01C97624 BL 0x1B6E868
	0x01C97628 LDR X8, [X21]
	0x01C9762C MOV X20, X0
	0x01C97630 LDR W9, [X8 + 0xE0]
	0x01C97634 CBNZ W9, 0x1C97640
	0x01C97638 MOV X0, X8
	0x01C9763C BL 0x1B6E8F8
	0x01C97640 ADRP X22, 0x258C000
	0x01C97644 LDRB W8, [X22 + 0x443]
	0x01C97648 CBNZ W8, 0x1C97660
	0x01C9764C ADRP X0, 0x22B6000
	0x01C97650 LDR X0, [X0 + 0x4E8]
	0x01C97654 BL 0x1B6E7F0
	0x01C97658 MOVZ W8, 0x1
	0x01C9765C STRB W8, [X22 + 0x443]
	0x01C97660 LDR X0, [X21]
	0x01C97664 LDR W8, [X0 + 0xE0]
	0x01C97668 CBNZ W8, 0x1C97674
	0x01C9766C BL 0x1B6E8F8
	0x01C97670 LDR X0, [X21]
	0x01C97674 LDR X8, [X0 + 0xB8]
	0x01C97678 LDR X8, [X8]
	0x01C9767C CBZ X8, 0x1C976C8
	0x01C97680 CBZ X20, 0x1C976C8
	0x01C97684 LDR X21, [X8 + 0x98]
	0x01C97688 CBZ X21, 0x1C976A0
	0x01C9768C LDR X8, [X20]
	0x01C97690 MOV X0, X21
	0x01C97694 LDR X1, [X8 + 0x40]
	0x01C97698 BL 0x1B6E8FC
	0x01C9769C CBZ X0, 0x1C976D0
	0x01C976A0 LDR W8, [X20 + 0x18]
	0x01C976A4 CBZ W8, 0x1C976CC
	0x01C976A8 STR X21, [X20 + 0x20]
	0x01C976AC MOV X0, X19
	0x01C976B0 MOV X1, X20
	0x01C976B4 LDP X20, X19, [X31 + 0x30]
	0x01C976B8 LDP X22, X21, [X31 + 0x20]
	0x01C976BC LDP X24, X23, [X31 + 0x10]
	0x01C976C0 LDR X30, [X31], #0x40
	0x01C976C4 B 0x1C8CFDC
	0x01C976C8 BL 0x1B6EA1C
	0x01C976CC BL 0x1B6EA24
	0x01C976D0 BL 0x1B6EA40
	0x01C976D4 MOV X1, X31
	0x01C976D8 BL 0x1B6E8E8
	0x01C976DC STP X30, X23, [X31 - 0x30]!
	0x01C976E0 STP X22, X21, [X31 + 0x10]
	0x01C976E4 STP X20, X19, [X31 + 0x20]
	0x01C976E8 ADRP X20, 0x258C000
	0x01C976EC LDRB W8, [X20 + 0x3DA]
	0x01C976F0 MOV X19, X0
	0x01C976F4 TBNZ X8, 0x0, 0x1C97730
	0x01C976F8 ADRP X0, 0x22B6000
	0x01C976FC LDR X0, [X0 + 0x4E8]
	0x01C97700 BL 0x1B6E7F0
	0x01C97704 ADRP X0, 0x22B6000
	0x01C97708 LDR X0, [X0 + 0xB90]
	0x01C9770C BL 0x1B6E7F0
	0x01C97710 ADRP X0, 0x22B7000
	0x01C97714 LDR X0, [X0 + 0xC8]
	0x01C97718 BL 0x1B6E7F0
	0x01C9771C ADRP X0, 0x22B7000
	0x01C97720 LDR X0, [X0 + 0xD0]
	0x01C97724 BL 0x1B6E7F0
	0x01C97728 MOVZ W8, 0x1
	0x01C9772C STRB W8, [X20 + 0x3DA]
	0x01C97730 LDR X0, [X19 + 0x20]
	0x01C97734 CBZ X0, 0x1C977C4
	0x01C97738 ADRP X22, 0x22B6000
	0x01C9773C ADRP X20, 0x22B7000
	0x01C97740 ADRP X23, 0x22B6000
	0x01C97744 ADRP X21, 0x22B7000
	0x01C97748 LDR X22, [X22 + 0xB90]
	0x01C9774C LDR X20, [X20 + 0xC8]
	0x01C97750 LDR X23, [X23 + 0x4E8]
	0x01C97754 LDR X21, [X21 + 0xD0]
	0x01C97758 MOV X1, X31
	0x01C9775C BL 0x342364C
	0x01C97760 LDR X0, [X22]
	0x01C97764 BL 0x1B6EA0C
	0x01C97768 LDR X2, [X20]
	0x01C9776C MOV X1, X19
	0x01C97770 MOV X3, X31
	0x01C97774 MOV X20, X0
	0x01C97778 BL 0x342E500
	0x01C9777C LDR X0, [X23]
	0x01C97780 LDR W8, [X0 + 0xE0]
	0x01C97784 CBNZ W8, 0x1C9778C
	0x01C97788 BL 0x1B6E8F8
	0x01C9778C MOV X0, X20
	0x01C97790 BL 0x1C8D564
	0x01C97794 LDR X0, [X22]
	0x01C97798 BL 0x1B6EA0C
	0x01C9779C LDR X2, [X21]
	0x01C977A0 MOV X1, X19
	0x01C977A4 MOV X3, X31
	0x01C977A8 MOV X20, X0
	0x01C977AC BL 0x342E500
	0x01C977B0 MOV X0, X20
	0x01C977B4 LDP X20, X19, [X31 + 0x20]
	0x01C977B8 LDP X22, X21, [X31 + 0x10]
	0x01C977BC LDP X30, X23, [X31], #0x30
	0x01C977C0 B 0x1C8D564
	0x01C977C4 BL 0x1B6EA1C
	0x01C977C8 STR X30, [X31 - 0x40]!
	0x01C977CC STP X24, X23, [X31 + 0x10]
	0x01C977D0 STP X22, X21, [X31 + 0x20]
	0x01C977D4 STP X20, X19, [X31 + 0x30]
	0x01C977D8 ADRP X20, 0x258C000
	0x01C977DC ADRP X23, 0x22B6000
	0x01C977E0 ADRP X22, 0x22B7000
	0x01C977E4 ADRP X21, 0x22B6000
	0x01C977E8 LDRB W8, [X20 + 0x3DB]
	0x01C977EC LDR X23, [X23 + 0xB90]
	0x01C977F0 LDR X22, [X22 + 0xD0]
	0x01C977F4 LDR X21, [X21 + 0x4E8]
	0x01C977F8 MOV X19, X0
	0x01C977FC TBNZ X8, 0x0, 0x1C97844
	0x01C97800 ADRP X0, 0x22B6000
	0x01C97804 LDR X0, [X0 + 0x4E8]
	0x01C97808 BL 0x1B6E7F0
	0x01C9780C ADRP X0, 0x22B6000
	0x01C97810 LDR X0, [X0 + 0xBA0]
	0x01C97814 BL 0x1B6E7F0
	0x01C97818 ADRP X0, 0x22B6000
	0x01C9781C LDR X0, [X0 + 0xB90]
	0x01C97820 BL 0x1B6E7F0
	0x01C97824 ADRP X0, 0x22B6000
	0x01C97828 LDR X0, [X0 + 0xD00]
	0x01C9782C BL 0x1B6E7F0
	0x01C97830 ADRP X0, 0x22B7000
	0x01C97834 LDR X0, [X0 + 0xD0]
	0x01C97838 BL 0x1B6E7F0
	0x01C9783C MOVZ W8, 0x1
	0x01C97840 STRB W8, [X20 + 0x3DB]
	0x01C97844 LDR X0, [X23]
	0x01C97848 BL 0x1B6EA0C
	0x01C9784C LDR X2, [X22]
	0x01C97850 MOV X1, X19
	0x01C97854 MOV X3, X31
	0x01C97858 MOV X20, X0
	0x01C9785C BL 0x342E500
	0x01C97860 LDR X0, [X21]
	0x01C97864 LDR W8, [X0 + 0xE0]
	0x01C97868 CBNZ W8, 0x1C97870
	0x01C9786C BL 0x1B6E8F8
	0x01C97870 MOV X0, X20
	0x01C97874 BL 0x1C8D564
	0x01C97878 ADRP X24, 0x258C000
	0x01C9787C LDRB W8, [X24 + 0x443]
	0x01C97880 CBNZ W8, 0x1C97898
	0x01C97884 ADRP X0, 0x22B6000
	0x01C97888 LDR X0, [X0 + 0x4E8]
	0x01C9788C BL 0x1B6E7F0
	0x01C97890 MOVZ W8, 0x1
	0x01C97894 STRB W8, [X24 + 0x443]
	0x01C97898 LDR X0, [X21]
	0x01C9789C LDR W8, [X0 + 0xE0]
	0x01C978A0 CBNZ W8, 0x1C978AC
	0x01C978A4 BL 0x1B6E8F8
	0x01C978A8 LDR X0, [X21]
	0x01C978AC LDR X8, [X0 + 0xB8]
	0x01C978B0 LDR X8, [X8]
	0x01C978B4 CBZ X8, 0x1C979C0
	0x01C978B8 ADRP X9, 0x22B6000
	0x01C978BC LDR X9, [X9 + 0xD00]
	0x01C978C0 LDR X0, [X8 + 0x98]
	0x01C978C4 LDR X1, [X9]
	0x01C978C8 BL 0x24B9848
	0x01C978CC TBZ X0, 0x0, 0x1C979AC
	0x01C978D0 LDR X0, [X23]
	0x01C978D4 BL 0x1B6EA0C
	0x01C978D8 LDR X2, [X22]
	0x01C978DC MOV X1, X19
	0x01C978E0 MOV X3, X31
	0x01C978E4 MOV X20, X0
	0x01C978E8 BL 0x342E500
	0x01C978EC ADRP X8, 0x22B6000
	0x01C978F0 LDR X8, [X8 + 0xBA0]
	0x01C978F4 MOVZ W1, 0x1
	0x01C978F8 LDR X0, [X8]
	0x01C978FC BL 0x1B6E868
	0x01C97900 LDR X8, [X21]
	0x01C97904 MOV X19, X0
	0x01C97908 LDR W9, [X8 + 0xE0]
	0x01C9790C CBNZ W9, 0x1C97918
	0x01C97910 MOV X0, X8
	0x01C97914 BL 0x1B6E8F8
	0x01C97918 LDRB W8, [X24 + 0x443]
	0x01C9791C CBNZ W8, 0x1C97934
	0x01C97920 ADRP X0, 0x22B6000
	0x01C97924 LDR X0, [X0 + 0x4E8]
	0x01C97928 BL 0x1B6E7F0
	0x01C9792C MOVZ W8, 0x1
	0x01C97930 STRB W8, [X24 + 0x443]
	0x01C97934 LDR X0, [X21]
	0x01C97938 LDR W8, [X0 + 0xE0]
	0x01C9793C CBNZ W8, 0x1C97948
	0x01C97940 BL 0x1B6E8F8
	0x01C97944 LDR X0, [X21]
	0x01C97948 LDR X8, [X0 + 0xB8]
	0x01C9794C LDR X8, [X8]
	0x01C97950 CBZ X8, 0x1C979C0
	0x01C97954 LDR X8, [X8 + 0xA8]
	0x01C97958 CBZ X8, 0x1C979C0
	0x01C9795C LDR X8, [X8 + 0x68]
	0x01C97960 CBZ X8, 0x1C979C0
	0x01C97964 CBZ X19, 0x1C979C0
	0x01C97968 LDR X21, [X8 + 0x48]
	0x01C9796C CBZ X21, 0x1C97984
	0x01C97970 LDR X8, [X19]
	0x01C97974 MOV X0, X21
	0x01C97978 LDR X1, [X8 + 0x40]
	0x01C9797C BL 0x1B6E8FC
	0x01C97980 CBZ X0, 0x1C979C8
	0x01C97984 LDR W8, [X19 + 0x18]
	0x01C97988 CBZ W8, 0x1C979C4
	0x01C9798C STR X21, [X19 + 0x20]
	0x01C97990 MOV X0, X20
	0x01C97994 MOV X1, X19
	0x01C97998 LDP X20, X19, [X31 + 0x30]
	0x01C9799C LDP X22, X21, [X31 + 0x20]
	0x01C979A0 LDP X24, X23, [X31 + 0x10]
	0x01C979A4 LDR X30, [X31], #0x40
	0x01C979A8 B 0x1C8CFDC
	0x01C979AC LDP X20, X19, [X31 + 0x30]
	0x01C979B0 LDP X22, X21, [X31 + 0x20]
	0x01C979B4 LDP X24, X23, [X31 + 0x10]
	0x01C979B8 LDR X30, [X31], #0x40
	0x01C979BC RET
	0x01C979C0 BL 0x1B6EA1C
	0x01C979C4 BL 0x1B6EA24
	0x01C979C8 BL 0x1B6EA40
	0x01C979CC MOV X1, X31
	0x01C979D0 BL 0x1B6E8E8
	0x01C979D4 STP X30, X21, [X31 - 0x20]!
	0x01C979D8 STP X20, X19, [X31 + 0x10]
	0x01C979DC ADRP X21, 0x258C000
	0x01C979E0 LDRB W8, [X21 + 0x3DC]
	0x01C979E4 MOV X20, X1
	0x01C979E8 MOV X19, X0
	0x01C979EC TBNZ X8, 0x0, 0x1C97A28
	0x01C979F0 ADRP X0, 0x22B6000
	0x01C979F4 LDR X0, [X0 + 0x4E8]
	0x01C979F8 BL 0x1B6E7F0
	0x01C979FC ADRP X0, 0x22B6000
	0x01C97A00 LDR X0, [X0 + 0x7E8]
	0x01C97A04 BL 0x1B6E7F0
	0x01C97A08 ADRP X0, 0x22B7000
	0x01C97A0C LDR X0, [X0 + 0xD8]
	0x01C97A10 BL 0x1B6E7F0
	0x01C97A14 ADRP X0, 0x22B7000
	0x01C97A18 LDR X0, [X0 + 0xE0]
	0x01C97A1C BL 0x1B6E7F0
	0x01C97A20 MOVZ W8, 0x1
	0x01C97A24 STRB W8, [X21 + 0x3DC]
	0x01C97A28 ADRP X21, 0x22B6000
	0x01C97A2C LDR X21, [X21 + 0x4E8]
	0x01C97A30 ANDS W31, W20, 0xFF
	0x01C97A34 B.EQ 0x1C97AAC
	0x01C97A38 LDR X0, [X21]
	0x01C97A3C LDR W8, [X0 + 0xE0]
	0x01C97A40 CBNZ W8, 0x1C97A48
	0x01C97A44 BL 0x1B6E8F8
	0x01C97A48 ADRP X20, 0x258C000
	0x01C97A4C LDRB W8, [X20 + 0x443]
	0x01C97A50 CBNZ W8, 0x1C97A68
	0x01C97A54 ADRP X0, 0x22B6000
	0x01C97A58 LDR X0, [X0 + 0x4E8]
	0x01C97A5C BL 0x1B6E7F0
	0x01C97A60 MOVZ W8, 0x1
	0x01C97A64 STRB W8, [X20 + 0x443]
	0x01C97A68 LDR X0, [X21]
	0x01C97A6C LDR W8, [X0 + 0xE0]
	0x01C97A70 CBNZ W8, 0x1C97A7C
	0x01C97A74 BL 0x1B6E8F8
	0x01C97A78 LDR X0, [X21]
	0x01C97A7C LDR X8, [X0 + 0xB8]
	0x01C97A80 LDR X8, [X8]
	0x01C97A84 CBZ X8, 0x1C97B30
	0x01C97A88 LDR X8, [X8 + 0xA8]
	0x01C97A8C CBZ X8, 0x1C97B30
	0x01C97A90 LDR X8, [X8 + 0x68]
	0x01C97A94 CBZ X8, 0x1C97B30
	0x01C97A98 LDR X8, [X8 + 0x48]
	0x01C97A9C CBZ X8, 0x1C97B30
	0x01C97AA0 LDR W8, [X8 + 0x4C]
	0x01C97AA4 STR W8, [X19 + 0x28]
	0x01C97AA8 B 0x1C97B24
	0x01C97AAC LDR X0, [X19 + 0x20]
	0x01C97AB0 CBZ X0, 0x1C97B30
	0x01C97AB4 MOV X1, X31
	0x01C97AB8 BL 0x34234E4
	0x01C97ABC TBZ X0, 0x0, 0x1C97B24
	0x01C97AC0 ADRP X8, 0x22B6000
	0x01C97AC4 LDR X8, [X8 + 0x7E8]
	0x01C97AC8 LDR X0, [X8]
	0x01C97ACC BL 0x1B6EA0C
	0x01C97AD0 ADRP X8, 0x22B7000
	0x01C97AD4 LDR X8, [X8 + 0xE0]
	0x01C97AD8 MOV X1, X19
	0x01C97ADC MOV X3, X31
	0x01C97AE0 MOV X20, X0
	0x01C97AE4 LDR X2, [X8]
	0x01C97AE8 BL 0x3425F88
	0x01C97AEC MOV X0, X20
	0x01C97AF0 MOV W1, W31
	0x01C97AF4 MOV X2, X31
	0x01C97AF8 BL 0x3425A8C
	0x01C97AFC LDR X8, [X21]
	0x01C97B00 MOV X20, X0
	0x01C97B04 LDR W9, [X8 + 0xE0]
	0x01C97B08 CBNZ W9, 0x1C97B14
	0x01C97B0C MOV X0, X8
	0x01C97B10 BL 0x1B6E8F8
	0x01C97B14 MOV X0, X20
	0x01C97B18 MOV W1, W31
	0x01C97B1C BL 0x1C8C958
	0x01C97B20 STR X0, [X19 + 0x20]
	0x01C97B24 LDP X20, X19, [X31 + 0x10]
	0x01C97B28 LDP X30, X21, [X31], #0x20
	0x01C97B2C RET
	0x01C97B30 BL 0x1B6EA1C
	0x01C97B34 STP X30, X21, [X31 - 0x20]!
	0x01C97B38 STP X20, X19, [X31 + 0x10]
	0x01C97B3C ADRP X20, 0x258C000
	0x01C97B40 ADRP X21, 0x22B7000
	0x01C97B44 LDRB W8, [X20 + 0x3DD]
	0x01C97B48 LDR X21, [X21 + 0xE8]
	0x01C97B4C MOV X19, X0
	0x01C97B50 TBNZ X8, 0x0, 0x1C97B68
	0x01C97B54 ADRP X0, 0x22B7000
	0x01C97B58 LDR X0, [X0 + 0xE8]
	0x01C97B5C BL 0x1B6E7F0
	0x01C97B60 MOVZ W8, 0x1
	0x01C97B64 STRB W8, [X20 + 0x3DD]
	0x01C97B68 LDR X0, [X21]
	0x01C97B6C BL 0x1B6EA0C
	0x01C97B70 MOV X1, X31
	0x01C97B74 MOV X20, X0
	0x01C97B78 BL 0x32276F8
	0x01C97B7C STR W31, [X20 + 0x10]
	0x01C97B80 STR X19, [X20 + 0x20]
	0x01C97B84 MOV X0, X20
	0x01C97B88 LDP X20, X19, [X31 + 0x10]
	0x01C97B8C LDP X30, X21, [X31], #0x20
	0x01C97B90 RET
	0x01C97B94 STR X30, [X31 - 0x20]!
	0x01C97B98 STP X20, X19, [X31 + 0x10]
	0x01C97B9C MOV W19, W1
	0x01C97BA0 MOV X1, X31
	0x01C97BA4 MOV X20, X0
	0x01C97BA8 BL 0x32276F8
	0x01C97BAC STR W19, [X20 + 0x10]
	0x01C97BB0 LDP X20, X19, [X31 + 0x10]
	0x01C97BB4 LDR X30, [X31], #0x20
	0x01C97BB8 RET
	0x01C97BBC STP X30, X21, [X31 - 0x20]!
	0x01C97BC0 STP X20, X19, [X31 + 0x10]
	0x01C97BC4 ADRP X21, 0x258C000
	0x01C97BC8 ADRP X20, 0x22B6000
	0x01C97BCC LDRB W8, [X21 + 0x3DE]
	0x01C97BD0 LDR X20, [X20 + 0x738]
	0x01C97BD4 MOV X19, X0
	0x01C97BD8 TBNZ X8, 0x0, 0x1C97BF0
	0x01C97BDC ADRP X0, 0x22B6000
	0x01C97BE0 LDR X0, [X0 + 0x738]
	0x01C97BE4 BL 0x1B6E7F0
	0x01C97BE8 MOVZ W8, 0x1
	0x01C97BEC STRB W8, [X21 + 0x3DE]
	0x01C97BF0 LDR X0, [X20]
	0x01C97BF4 LDR W8, [X0 + 0xE0]
	0x01C97BF8 CBNZ W8, 0x1C97C00
	0x01C97BFC BL 0x1B6E8F8
	0x01C97C00 ADRP X21, 0x258C000
	0x01C97C04 LDRB W8, [X21 + 0x447]
	0x01C97C08 CBNZ W8, 0x1C97C20
	0x01C97C0C ADRP X0, 0x22B6000
	0x01C97C10 LDR X0, [X0 + 0x738]
	0x01C97C14 BL 0x1B6E7F0
	0x01C97C18 MOVZ W8, 0x1
	0x01C97C1C STRB W8, [X21 + 0x447]
	0x01C97C20 LDR X0, [X20]
	0x01C97C24 LDR W8, [X0 + 0xE0]
	0x01C97C28 CBNZ W8, 0x1C97C34
	0x01C97C2C BL 0x1B6E8F8
	0x01C97C30 LDR X0, [X20]
	0x01C97C34 LDR X8, [X0 + 0xB8]
	0x01C97C38 MOV X0, X19
	0x01C97C3C MOV X1, X31
	0x01C97C40 LDR X8, [X8]
	0x01C97C44 STR X8, [X19 + 0x20]
	0x01C97C48 LDP X20, X19, [X31 + 0x10]
	0x01C97C4C LDP X30, X21, [X31], #0x20
	0x01C97C50 B 0x3A9EEE4
	0x01C97C54 MOV X1, X31
	0x01C97C58 B 0x32276F8
	0x01C97C5C STR X30, [X31 - 0x30]!
	0x01C97C60 STP X22, X21, [X31 + 0x10]
	0x01C97C64 STP X20, X19, [X31 + 0x20]
	0x01C97C68 ADRP X21, 0x258C000
	0x01C97C6C ADRP X22, 0x22B6000
	0x01C97C70 LDRB W8, [X21 + 0x3DF]
	0x01C97C74 LDR X22, [X22 + 0x4E8]
	0x01C97C78 MOV X19, X1
	0x01C97C7C MOV X20, X0
	0x01C97C80 TBNZ X8, 0x0, 0x1C97C98
	0x01C97C84 ADRP X0, 0x22B6000
	0x01C97C88 LDR X0, [X0 + 0x4E8]
	0x01C97C8C BL 0x1B6E7F0
	0x01C97C90 MOVZ W8, 0x1
	0x01C97C94 STRB W8, [X21 + 0x3DF]
	0x01C97C98 LDR X0, [X22]
	0x01C97C9C LDR W8, [X0 + 0xE0]
	0x01C97CA0 CBNZ W8, 0x1C97CA8
	0x01C97CA4 BL 0x1B6E8F8
	0x01C97CA8 BL 0x1C896E0
	0x01C97CAC MOV X21, X0
	0x01C97CB0 BL 0x1C89768
	0x01C97CB4 CBZ X21, 0x1C97CDC
	0x01C97CB8 MOV X1, X0
	0x01C97CBC LDR W2, [X20 + 0x10]
	0x01C97CC0 MOV X0, X21
	0x01C97CC4 MOV X3, X19
	0x01C97CC8 LDP X20, X19, [X31 + 0x20]
	0x01C97CCC LDP X22, X21, [X31 + 0x10]
	0x01C97CD0 MOV X4, X31
	0x01C97CD4 LDR X30, [X31], #0x30
	0x01C97CD8 B 0x1D0B5EC
	0x01C97CDC BL 0x1B6EA1C
	0x01C97CE0 RET
	0x01C97CE4 STP X30, X23, [X31 - 0x30]!
	0x01C97CE8 STP X22, X21, [X31 + 0x10]
	0x01C97CEC STP X20, X19, [X31 + 0x20]
	0x01C97CF0 ADRP X20, 0x258C000
	0x01C97CF4 LDRB W8, [X20 + 0x3E0]
	0x01C97CF8 MOV X19, X0
	0x01C97CFC TBNZ X8, 0x0, 0x1C97DB0
	0x01C97D00 ADRP X0, 0x22B6000
	0x01C97D04 LDR X0, [X0 + 0xD80]
	0x01C97D08 BL 0x1B6E7F0
	0x01C97D0C ADRP X0, 0x22B6000
	0x01C97D10 LDR X0, [X0 + 0x4E8]
	0x01C97D14 BL 0x1B6E7F0
	0x01C97D18 ADRP X0, 0x22B7000
	0x01C97D1C LDR X0, [X0 + 0xF0]
	0x01C97D20 BL 0x1B6E7F0
	0x01C97D24 ADRP X0, 0x22B6000
	0x01C97D28 LDR X0, [X0 + 0x7E8]
	0x01C97D2C BL 0x1B6E7F0
	0x01C97D30 ADRP X0, 0x22B6000
	0x01C97D34 LDR X0, [X0 + 0x628]
	0x01C97D38 BL 0x1B6E7F0
	0x01C97D3C ADRP X0, 0x22B7000
	0x01C97D40 LDR X0, [X0 + 0xD8]
	0x01C97D44 BL 0x1B6E7F0
	0x01C97D48 ADRP X0, 0x22B7000
	0x01C97D4C LDR X0, [X0 + 0xF8]
	0x01C97D50 BL 0x1B6E7F0
	0x01C97D54 ADRP X0, 0x22B7000
	0x01C97D58 LDR X0, [X0 + 0x100]
	0x01C97D5C BL 0x1B6E7F0
	0x01C97D60 ADRP X0, 0x22B7000
	0x01C97D64 LDR X0, [X0 + 0x108]
	0x01C97D68 BL 0x1B6E7F0
	0x01C97D6C ADRP X0, 0x22B7000
	0x01C97D70 LDR X0, [X0 + 0xE0]
	0x01C97D74 BL 0x1B6E7F0
	0x01C97D78 ADRP X0, 0x22B7000
	0x01C97D7C LDR X0, [X0 + 0x110]
	0x01C97D80 BL 0x1B6E7F0
	0x01C97D84 ADRP X0, 0x22B7000
	0x01C97D88 LDR X0, [X0 + 0x118]
	0x01C97D8C BL 0x1B6E7F0
	0x01C97D90 ADRP X0, 0x22B7000
	0x01C97D94 LDR X0, [X0 + 0x120]
	0x01C97D98 BL 0x1B6E7F0
	0x01C97D9C ADRP X0, 0x22B7000
	0x01C97DA0 LDR X0, [X0 + 0x128]
	0x01C97DA4 BL 0x1B6E7F0
	0x01C97DA8 MOVZ W8, 0x1
	0x01C97DAC STRB W8, [X20 + 0x3E0]
	0x01C97DB0 LDR W8, [X19 + 0x10]
	0x01C97DB4 LDR X20, [X19 + 0x20]
	0x01C97DB8 CMP W8, 0x2
	0x01C97DBC B.EQ 0x1C97EEC
	0x01C97DC0 CMP W8, 0x1
	0x01C97DC4 B.EQ 0x1C97FE8
	0x01C97DC8 CBNZ W8, 0x1C980D0
	0x01C97DCC MOVN W8, 0x0
	0x01C97DD0 STR W8, [X19 + 0x10]
	0x01C97DD4 ADRP X8, 0x22B7000
	0x01C97DD8 LDR X8, [X8 + 0x108]
	0x01C97DDC LDR X0, [X8]
	0x01C97DE0 BL 0x1B6EA0C
	0x01C97DE4 MOV X1, X31
	0x01C97DE8 MOV X21, X0
	0x01C97DEC BL 0x32276F8
	0x01C97DF0 ADRP X22, 0x22B6000
	0x01C97DF4 LDR X22, [X22 + 0x4E8]
	0x01C97DF8 LDR X0, [X22]
	0x01C97DFC LDR W8, [X0 + 0xE0]
	0x01C97E00 CBNZ W8, 0x1C97E08
	0x01C97E04 BL 0x1B6E8F8
	0x01C97E08 ADRP X23, 0x258C000
	0x01C97E0C LDRB W8, [X23 + 0x443]
	0x01C97E10 CBNZ W8, 0x1C97E28
	0x01C97E14 ADRP X0, 0x22B6000
	0x01C97E18 LDR X0, [X0 + 0x4E8]
	0x01C97E1C BL 0x1B6E7F0
	0x01C97E20 MOVZ W8, 0x1
	0x01C97E24 STRB W8, [X23 + 0x443]
	0x01C97E28 LDR X0, [X22]
	0x01C97E2C LDR W8, [X0 + 0xE0]
	0x01C97E30 CBNZ W8, 0x1C97E3C
	0x01C97E34 BL 0x1B6E8F8
	0x01C97E38 LDR X0, [X22]
	0x01C97E3C LDR X8, [X0 + 0xB8]
	0x01C97E40 LDR X8, [X8]
	0x01C97E44 CBZ X8, 0x1C98118
	0x01C97E48 LDR X8, [X8 + 0xA8]
	0x01C97E4C CBZ X8, 0x1C98118
	0x01C97E50 LDR X8, [X8 + 0x68]
	0x01C97E54 CBZ X8, 0x1C98118
	0x01C97E58 LDR X8, [X8 + 0x48]
	0x01C97E5C CBZ X8, 0x1C98118
	0x01C97E60 LDR W8, [X8 + 0x4C]
	0x01C97E64 STR W8, [X19 + 0x28]
	0x01C97E68 CBZ X20, 0x1C98118
	0x01C97E6C CBZ X21, 0x1C98118
	0x01C97E70 LDR W9, [X20 + 0x28]
	0x01C97E74 SUB W8, W8, W9
	0x01C97E78 STR W8, [X21 + 0x10]
	0x01C97E7C ADRP X8, 0x22B7000
	0x01C97E80 LDR X8, [X8 + 0xF8]
	0x01C97E84 LDR X0, [X8]
	0x01C97E88 BL 0x1B6EA0C
	0x01C97E8C ADRP X8, 0x22B7000
	0x01C97E90 LDR X8, [X8 + 0x100]
	0x01C97E94 MOV X1, X21
	0x01C97E98 MOV X3, X31
	0x01C97E9C MOV X20, X0
	0x01C97EA0 LDR X2, [X8]
	0x01C97EA4 BL 0x24F0258
	0x01C97EA8 ADRP X8, 0x22B7000
	0x01C97EAC ADRP X9, 0x22B7000
	0x01C97EB0 LDR X8, [X8 + 0x118]
	0x01C97EB4 LDR X9, [X9 + 0xF0]
	0x01C97EB8 MOV X1, X20
	0x01C97EBC MOV W2, W31
	0x01C97EC0 LDR X0, [X8]
	0x01C97EC4 LDR X4, [X9]
	0x01C97EC8 MOV X3, X31
	0x01C97ECC BL 0x208F930
	0x01C97ED0 STR X0, [X19 + 0x30]
	0x01C97ED4 CBZ X0, 0x1C98118
	0x01C97ED8 STRB W31, [X0 + 0x14]
	0x01C97EDC STR X0, [X19 + 0x18]
	0x01C97EE0 MOVZ W0, 0x1
	0x01C97EE4 STR W0, [X19 + 0x10]
	0x01C97EE8 B 0x1C98108
	0x01C97EEC MOVN W8, 0x0
	0x01C97EF0 STR W8, [X19 + 0x10]
	0x01C97EF4 CBZ X20, 0x1C98118
	0x01C97EF8 ADRP X21, 0x22B6000
	0x01C97EFC LDR X21, [X21 + 0x4E8]
	0x01C97F00 LDR W19, [X20 + 0x28]
	0x01C97F04 LDR X0, [X21]
	0x01C97F08 LDR W8, [X0 + 0xE0]
	0x01C97F0C CBNZ W8, 0x1C97F14
	0x01C97F10 BL 0x1B6E8F8
	0x01C97F14 ADRP X22, 0x258C000
	0x01C97F18 LDRB W8, [X22 + 0x443]
	0x01C97F1C CBNZ W8, 0x1C97F34
	0x01C97F20 ADRP X0, 0x22B6000
	0x01C97F24 LDR X0, [X0 + 0x4E8]
	0x01C97F28 BL 0x1B6E7F0
	0x01C97F2C MOVZ W8, 0x1
	0x01C97F30 STRB W8, [X22 + 0x443]
	0x01C97F34 LDR X0, [X21]
	0x01C97F38 LDR W8, [X0 + 0xE0]
	0x01C97F3C CBNZ W8, 0x1C97F48
	0x01C97F40 BL 0x1B6E8F8
	0x01C97F44 LDR X0, [X21]
	0x01C97F48 LDR X8, [X0 + 0xB8]
	0x01C97F4C LDR X8, [X8]
	0x01C97F50 CBZ X8, 0x1C98118
	0x01C97F54 LDR X8, [X8 + 0xA8]
	0x01C97F58 CBZ X8, 0x1C98118
	0x01C97F5C LDR X8, [X8 + 0x68]
	0x01C97F60 CBZ X8, 0x1C98118
	0x01C97F64 LDR X8, [X8 + 0x48]
	0x01C97F68 CBZ X8, 0x1C98118
	0x01C97F6C LDR W8, [X8 + 0x4C]
	0x01C97F70 CMP W19, W8
	0x01C97F74 B.EQ 0x1C980D0
	0x01C97F78 ADRP X8, 0x22B6000
	0x01C97F7C LDR X8, [X8 + 0x7E8]
	0x01C97F80 LDR X0, [X8]
	0x01C97F84 BL 0x1B6EA0C
	0x01C97F88 ADRP X8, 0x22B7000
	0x01C97F8C LDR X8, [X8 + 0xE0]
	0x01C97F90 MOV X1, X20
	0x01C97F94 MOV X3, X31
	0x01C97F98 MOV X19, X0
	0x01C97F9C LDR X2, [X8]
	0x01C97FA0 BL 0x3425F88
	0x01C97FA4 MOV X0, X19
	0x01C97FA8 MOV W1, W31
	0x01C97FAC MOV X2, X31
	0x01C97FB0 BL 0x3425A8C
	0x01C97FB4 LDR X8, [X21]
	0x01C97FB8 MOV X19, X0
	0x01C97FBC LDR W9, [X8 + 0xE0]
	0x01C97FC0 CBNZ W9, 0x1C97FCC
	0x01C97FC4 MOV X0, X8
	0x01C97FC8 BL 0x1B6E8F8
	0x01C97FCC MOV X0, X19
	0x01C97FD0 MOV W1, W31
	0x01C97FD4 BL 0x1C8C958
	0x01C97FD8 MOV X8, X0
	0x01C97FDC MOV W0, W31
	0x01C97FE0 STR X8, [X20 + 0x20]
	0x01C97FE4 B 0x1C98108
	0x01C97FE8 LDR X0, [X19 + 0x30]
	0x01C97FEC MOVN W8, 0x0
	0x01C97FF0 STR W8, [X19 + 0x10]
	0x01C97FF4 CBZ X0, 0x1C98118
	0x01C97FF8 MOV X1, X31
	0x01C97FFC BL 0x3423F28
	0x01C98000 TBZ X0, 0x0, 0x1C980D8
	0x01C98004 LDR X8, [X19 + 0x30]
	0x01C98008 CBZ X8, 0x1C98118
	0x01C9800C LDR X8, [X8 + 0x18]
	0x01C98010 CBZ X8, 0x1C98118
	0x01C98014 LDR X8, [X8 + 0x28]
	0x01C98018 CBZ X8, 0x1C980D0
	0x01C9801C ADRP X9, 0x22B5000
	0x01C98020 LDR X9, [X9 + 0xD80]
	0x01C98024 LDR X10, [X8]
	0x01C98028 LDR X9, [X9]
	0x01C9802C CMP X10, X9
	0x01C98030 B.NE 0x1C980D0
	0x01C98034 LDR X8, [X8 + 0x90]
	0x01C98038 CMP X8, 0x191
	0x01C9803C B.NE 0x1C980D0
	0x01C98040 ADRP X8, 0x22B5000
	0x01C98044 LDR X8, [X8 + 0x628]
	0x01C98048 LDR X0, [X8]
	0x01C9804C LDR W8, [X0 + 0xE0]
	0x01C98050 CBNZ W8, 0x1C98058
	0x01C98054 BL 0x1B6E8F8
	0x01C98058 ADRP X8, 0x22B6000
	0x01C9805C ADRP X9, 0x22B6000
	0x01C98060 ADRP X10, 0x22B6000
	0x01C98064 LDR X8, [X8 + 0x110]
	0x01C98068 LDR X9, [X9 + 0x120]
	0x01C9806C LDR X10, [X10 + 0x128]
	0x01C98070 MOVZ W4, 0x44
	0x01C98074 LDR X0, [X8]
	0x01C98078 LDR X2, [X9]
	0x01C9807C LDR X3, [X10]
	0x01C98080 MOV X1, X31
	0x01C98084 MOV X5, X31
	0x01C98088 BL 0x342B554
	0x01C9808C ADRP X8, 0x22B5000
	0x01C98090 LDR X8, [X8 + 0x4E8]
	0x01C98094 LDR X0, [X8]
	0x01C98098 LDR W8, [X0 + 0xE0]
	0x01C9809C CBNZ W8, 0x1C980A4
	0x01C980A0 BL 0x1B6E8F8
	0x01C980A4 BL 0x1C896E0
	0x01C980A8 MOV X19, X0
	0x01C980AC BL 0x1C89768
	0x01C980B0 CBZ X19, 0x1C98118
	0x01C980B4 MOV X1, X0
	0x01C980B8 MOV X0, X19
	0x01C980BC MOV X2, X31
	0x01C980C0 MOV X3, X31
	0x01C980C4 MOV X4, X31
	0x01C980C8 MOV X5, X31
	0x01C980CC BL 0x1D10678
	0x01C980D0 MOV W0, W31
	0x01C980D4 B 0x1C98108
	0x01C980D8 CBZ X20, 0x1C98118
	0x01C980DC LDR W8, [X19 + 0x28]
	0x01C980E0 MOV W0, W31
	0x01C980E4 MOV X1, X31
	0x01C980E8 STR W8, [X20 + 0x28]
	0x01C980EC MOVZ W8, 0x42700000
	0x01C980F0 FMOV S0, W8
	0x01C980F4 BL 0x3424CAC
	0x01C980F8 MOVZ W8, 0x2
	0x01C980FC STR X0, [X19 + 0x18]
	0x01C98100 STR W8, [X19 + 0x10]
	0x01C98104 MOVZ W0, 0x1
	0x01C98108 LDP X20, X19, [X31 + 0x20]
	0x01C9810C LDP X22, X21, [X31 + 0x10]
	0x01C98110 LDP X30, X23, [X31], #0x30
	0x01C98114 RET
	0x01C98118 BL 0x1B6EA1C
	0x01C9811C LDR X0, [X0 + 0x18]
	0x01C98120 RET
	0x01C98124 STP X30, X19, [X31 - 0x10]!
	0x01C98128 ADRP X0, 0x22B5000
	0x01C9812C LDR X0, [X0 + 0x990]
	0x01C98130 BL 0x1B6E804
	0x01C98134 BL 0x1B6EA0C
	0x01C98138 MOV X1, X31
	0x01C9813C MOV X19, X0
	0x01C98140 BL 0x31E99B4
	0x01C98144 ADRP X0, 0x22B6000
	0x01C98148 LDR X0, [X0 + 0x130]
	0x01C9814C BL 0x1B6E804
	0x01C98150 MOV X1, X0
	0x01C98154 MOV X0, X19
	0x01C98158 BL 0x1B6E8E8
	0x01C9815C LDR X0, [X0 + 0x18]
	0x01C98160 RET
	0x01C98164 STP D13, D12, [X31 - 0x50]!
	0x01C98168 STP D11, D10, [X31 + 0x10]
	0x01C9816C STP D9, D8, [X31 + 0x20]
	0x01C98170 STR X30, [X31 + 0x30]
	0x01C98174 STP X20, X19, [X31 + 0x40]
	0x01C98178 MOV X1, X31
	0x01C9817C MOV X19, X0
	0x01C98180 BL 0x3A9B084
	0x01C98184 CBZ X0, 0x1C982A0
	0x01C98188 MOV X1, X31
	0x01C9818C BL 0x3AA7AD0
	0x01C98190 MOV X0, X19
	0x01C98194 MOV X1, X31
	0x01C98198 MOV V11.16B, V0.16B
	0x01C9819C MOV V12.16B, V1.16B
	0x01C981A0 MOV V13.16B, V2.16B
	0x01C981A4 BL 0x3A9B084
	0x01C981A8 CBZ X0, 0x1C982A0
	0x01C981AC MOV X1, X31
	0x01C981B0 BL 0x3AA7658
	0x01C981B4 ADRP X20, 0x258B000
	0x01C981B8 LDRB W8, [X20 + 0x441]
	0x01C981BC MOV V8.16B, V0.16B
	0x01C981C0 MOV V9.16B, V1.16B
	0x01C981C4 MOV V10.16B, V2.16B
	0x01C981C8 CBNZ W8, 0x1C981E0
	0x01C981CC ADRP X0, 0x22B5000
	0x01C981D0 LDR X0, [X0 + 0x488]
	0x01C981D4 BL 0x1B6E7F0
	0x01C981D8 MOVZ W8, 0x1
	0x01C981DC STRB W8, [X20 + 0x441]
	0x01C981E0 ADRP X8, 0x22B5000
	0x01C981E4 LDR X8, [X8 + 0x488]
	0x01C981E8 LDR X0, [X8]
	0x01C981EC LDR W8, [X0 + 0xE0]
	0x01C981F0 CBNZ W8, 0x1C981F8
	0x01C981F4 BL 0x1B6E8F8
	0x01C981F8 FMUL S0, S11, S11
	0x01C981FC FMUL S1, S12, S12
	0x01C98200 ADRP X8, 0xFFFFFFFFFEE11000
	0x01C98204 FADD S0, S0, S1
	0x01C98208 LDR V1, [X8 + 0xB64]
	0x01C9820C FMUL S2, S13, S13
	0x01C98210 FADD S0, S2, S0
	0x01C98214 FSQRT S2, S0
	0x01C98218 FCMP S2, S1
	0x01C9821C B.LE 0x1C98230
	0x01C98220 FDIV S0, S11, S2
	0x01C98224 FDIV S1, S12, S2
	0x01C98228 FDIV S2, S13, S2
	0x01C9822C B 0x1C98268
	0x01C98230 ADRP X20, 0x258B000
	0x01C98234 LDRB W8, [X20 + 0x43F]
	0x01C98238 CBNZ W8, 0x1C98250
	0x01C9823C ADRP X0, 0x22B5000
	0x01C98240 LDR X0, [X0 + 0x480]
	0x01C98244 BL 0x1B6E7F0
	0x01C98248 MOVZ W8, 0x1
	0x01C9824C STRB W8, [X20 + 0x43F]
	0x01C98250 ADRP X8, 0x22B5000
	0x01C98254 LDR X8, [X8 + 0x480]
	0x01C98258 LDR X8, [X8]
	0x01C9825C LDR X8, [X8 + 0xB8]
	0x01C98260 LDP S0, S1, [X8]
	0x01C98264 LDR V2, [X8 + 0x8]
	0x01C98268 FMUL S3, S8, S0
	0x01C9826C FMUL S4, S9, S1
	0x01C98270 FMUL S5, S10, S2
	0x01C98274 STP S0, S1, [X19 + 0x2C]
	0x01C98278 FADD S0, S3, S4
	0x01C9827C FADD S0, S5, S0
	0x01C98280 FNEG S0, S0
	0x01C98284 STP S2, S0, [X19 + 0x34]
	0x01C98288 LDP X20, X19, [X31 + 0x40]
	0x01C9828C LDR X30, [X31 + 0x30]
	0x01C98290 LDP D9, D8, [X31 + 0x20]
	0x01C98294 LDP D11, D10, [X31 + 0x10]
	0x01C98298 LDP D13, D12, [X31], #0x50
	0x01C9829C RET
	0x01C982A0 BL 0x1B6EA1C
	0x01C982A4 STR D14, [X31 - 0x50]!
	0x01C982A8 STP D13, D12, [X31 + 0x10]
	0x01C982AC STP D11, D10, [X31 + 0x20]
	0x01C982B0 STP D9, D8, [X31 + 0x30]
	0x01C982B4 STP X30, X19, [X31 + 0x40]
	0x01C982B8 MOV X19, X0
	0x01C982BC MOV X0, X31
	0x01C982C0 BL 0x3A6D510
	0x01C982C4 CBZ X0, 0x1C98390
	0x01C982C8 MOV X1, X31
	0x01C982CC BL 0x3A9B084
	0x01C982D0 CBZ X0, 0x1C98390
	0x01C982D4 MOV X1, X31
	0x01C982D8 BL 0x3AA7658
	0x01C982DC LDP S11, S12, [X19 + 0x2C]
	0x01C982E0 LDP S13, S14, [X19 + 0x34]
	0x01C982E4 MOV X0, X31
	0x01C982E8 MOV V8.16B, V0.16B
	0x01C982EC MOV V9.16B, V1.16B
	0x01C982F0 MOV V10.16B, V2.16B
	0x01C982F4 BL 0x3A6D510
	0x01C982F8 CBZ X0, 0x1C98390
	0x01C982FC MOV X1, X31
	0x01C98300 BL 0x3A9B084
	0x01C98304 CBZ X0, 0x1C98390
	0x01C98308 MOV X1, X31
	0x01C9830C BL 0x3AA7658
	0x01C98310 LDR X0, [X19 + 0x20]
	0x01C98314 CBZ X0, 0x1C98390
	0x01C98318 FMUL S3, S8, S11
	0x01C9831C FMUL S4, S9, S12
	0x01C98320 FADD S3, S3, S4
	0x01C98324 FMUL S4, S10, S13
	0x01C98328 FADD S3, S4, S3
	0x01C9832C FADD S3, S14, S3
	0x01C98330 FMUL S5, S11, S3
	0x01C98334 FMUL S6, S12, S3
	0x01C98338 FMUL S3, S13, S3
	0x01C9833C FSUB S5, S8, S5
	0x01C98340 FSUB S6, S9, S6
	0x01C98344 LDR V4, [X19 + 0x28]
	0x01C98348 FSUB S3, S10, S3
	0x01C9834C FSUB S0, S5, S0
	0x01C98350 FSUB S1, S6, S1
	0x01C98354 FSUB S2, S3, S2
	0x01C98358 FMUL S0, S0, S0
	0x01C9835C FMUL S1, S1, S1
	0x01C98360 FADD S0, S0, S1
	0x01C98364 FMUL S1, S2, S2
	0x01C98368 LDP X30, X19, [X31 + 0x40]
	0x01C9836C LDP D9, D8, [X31 + 0x30]
	0x01C98370 LDP D11, D10, [X31 + 0x20]
	0x01C98374 LDP D13, D12, [X31 + 0x10]
	0x01C98378 FADD S0, S1, S0
	0x01C9837C FCMP S0, S4
	0x01C98380 CSET W1, MI
	0x01C98384 MOV X2, X31
	0x01C98388 LDR V14, [X31], #0x50
	0x01C9838C B 0x3A7B8E0
	0x01C98390 BL 0x1B6EA1C
	0x01C98394 MOVZ W8, 0x42C80000
	0x01C98398 MOV X1, X31
	0x01C9839C STR W8, [X0 + 0x28]
	0x01C983A0 B 0x3A9EEE4
	0x01C983A4 STR D10, [X31 - 0x30]!
	0x01C983A8 STP D9, D8, [X31 + 0x10]
	0x01C983AC STP X30, X19, [X31 + 0x20]
	0x01C983B0 MOV X1, X31
	0x01C983B4 MOV X19, X0
	0x01C983B8 BL 0x3A9B084
	0x01C983BC LDP S8, S9, [X19 + 0x20]
	0x01C983C0 LDR V10, [X19 + 0x28]
	0x01C983C4 MOV X19, X0
	0x01C983C8 MOV X0, X31
	0x01C983CC BL 0x3AA481C
	0x01C983D0 CBZ X19, 0x1C983F8
	0x01C983D4 FMUL S2, S10, S0
	0x01C983D8 FMUL S1, S9, S0
	0x01C983DC FMUL S0, S8, S0
	0x01C983E0 MOV X0, X19
	0x01C983E4 LDP X30, X19, [X31 + 0x20]
	0x01C983E8 LDP D9, D8, [X31 + 0x10]
	0x01C983EC MOV X1, X31
	0x01C983F0 LDR V10, [X31], #0x30
	0x01C983F4 B 0x3AA8564
	0x01C983F8 BL 0x1B6EA1C
	0x01C983FC MOV X1, X31
	0x01C98400 STR X31, [X0 + 0x20]
	0x01C98404 STR W31, [X0 + 0x28]
	0x01C98408 B 0x3A9EEE4
	0x01C9840C STP X30, X19, [X31 - 0x10]!
	0x01C98410 MOV X19, X0
	0x01C98414 LDR X0, [X0 + 0x20]
	0x01C98418 CBZ X0, 0x1C98448
	0x01C9841C MOVZ W1, 0x1
	0x01C98420 MOV X2, X31
	0x01C98424 BL 0x3A9D9A8
	0x01C98428 MOV X0, X19
	0x01C9842C MOV X1, X31
	0x01C98430 BL 0x3A9B0C0
	0x01C98434 CBZ X0, 0x1C98448
	0x01C98438 MOV W1, W31
	0x01C9843C MOV X2, X31
	0x01C98440 LDP X30, X19, [X31], #0x10
	0x01C98444 B 0x3A9D9A8
	0x01C98448 BL 0x1B6EA1C
	0x01C9844C SUB X31, X31, 0x90
	0x01C98450 STP D13, D12, [X31 + 0x30]
	0x01C98454 STP D11, D10, [X31 + 0x40]
	0x01C98458 STP D9, D8, [X31 + 0x50]
	0x01C9845C STP X30, X23, [X31 + 0x60]
	0x01C98460 STP X22, X21, [X31 + 0x70]
	0x01C98464 STP X20, X19, [X31 + 0x80]
	0x01C98468 ADRP X20, 0x258B000
	0x01C9846C LDRB W8, [X20 + 0x3E1]
	0x01C98470 MOV X19, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x258D000
	010 Move W8, [X21+983]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {52}
	017 Move X0, 0x22B7000
	018 Move X0, [X0+2048]
	019 Call 0x1B6F7F0
	020 Move X0, 0x22B7000
	021 Move X0, [X0+4064]
	022 Call 0x1B6F7F0
	023 Move X0, 0x22B8000
	024 Move X0, [X0+104]
	025 Call 0x1B6F7F0
	026 Move X0, 0x22B8000
	027 Move X0, [X0+112]
	028 Call 0x1B6F7F0
	029 Move X0, 0x22B8000
	030 Move X0, [X0+120]
	031 Call 0x1B6F7F0
	032 Move X0, 0x22B7000
	033 Move X0, [X0+1728]
	034 Call 0x1B6F7F0
	035 Move X0, 0x22B7000
	036 Move X0, [X0+3328]
	037 Call 0x1B6F7F0
	038 Move X0, 0x22B8000
	039 Move X0, [X0+128]
	040 Call 0x1B6F7F0
	041 Move X0, 0x22B7000
	042 Move X0, [X0+1968]
	043 Call 0x1B6F7F0
	044 Move X0, 0x22B8000
	045 Move X0, [X0+136]
	046 Call 0x1B6F7F0
	047 Move X0, 0x22B7000
	048 Move X0, [X0+1952]
	049 Call 0x1B6F7F0
	050 Move W8, 1
	051 Move [X21+983], W8
	052 Compare X19, 0
	053 JumpIfEqual {1041}
	054 Move X9, [X19+168]
	055 Compare X9, 0
	056 JumpIfEqual {1041}
	057 Move X22, [X20+32]
	058 Compare X22, 0
	059 JumpIfEqual {1041}
	060 Move X23, 0x22B7000
	061 Move X8, [X22]
	062 Move X23, [X23+4064]
	063 Move X21, [X9+72]
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 Move X1, [X23]
	066 Compare X9, 0
	067 JumpIfEqual {74}
	068 Move X10, [X8+176]
	069 Add X10, X10, 8
	070 NotImplemented "Instruction LDUR not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Subtract X9, X9, 1
	073 Add X10, X10, 16
	074 Move W2, 4
	075 Move X0, X22
	076 Call 0x1BB5284
	077 Move W9, [X10]
	078 Add W9, W9, 4
	079 Add X8, X8, W9
	080 Add X0, X8, 312
	081 Move X8, [X0]
	082 Move X1, [X0+8]
	083 Move X0, X22
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Compare X0, 0
	086 JumpIfEqual {1041}
	087 Move X24, 0x22B8000
	088 Move X8, [X0]
	089 Move X24, [X24+104]
	090 Move X22, X0
	091 NotImplemented "Instruction LDRH not yet implemented."
	092 Move X1, [X24]
	093 Compare X9, 0
	094 JumpIfEqual {101}
	095 Move X10, [X8+176]
	096 Add X10, X10, 8
	097 NotImplemented "Instruction LDUR not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Subtract X9, X9, 1
	100 Add X10, X10, 16
	101 Move W2, 9
	102 Move X0, X22
	103 Call 0x1BB5284
	104 Move W9, [X10]
	105 Add W9, W9, 9
	106 Add X8, X8, W9
	107 Add X0, X8, 312
	108 Move X8, [X0]
	109 Move X1, [X0+8]
	110 Move X0, X22
	111 NotImplemented "Instruction BLR not yet implemented."
	112 Compare X21, 0
	113 JumpIfEqual {1041}
	114 Move X25, 0x22B7000
	115 Move X25, [X25+1952]
	116 Move X1, X0
	117 Move X0, X21
	118 Move X2, [X25]
	119 Call StatePrimitive`1<Object>.set_value, X0, X1
	120 Move X9, [X19+168]
	121 Compare X9, 0
	122 JumpIfEqual {1041}
	123 Move X22, [X20+32]
	124 Compare X22, 0
	125 JumpIfEqual {1041}
	126 Move X8, [X22]
	127 Move X21, [X9+80]
	128 Move X1, [X23]
	129 NotImplemented "Instruction LDRH not yet implemented."
	130 Compare X9, 0
	131 JumpIfEqual {138}
	132 Move X10, [X8+176]
	133 Add X10, X10, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X9, X9, 1
	137 Add X10, X10, 16
	138 Move W2, 4
	139 Move X0, X22
	140 Call 0x1BB5284
	141 Move W9, [X10]
	142 Add W9, W9, 4
	143 Add X8, X8, W9
	144 Add X0, X8, 312
	145 Move X8, [X0]
	146 Move X1, [X0+8]
	147 Move X0, X22
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Compare X0, 0
	150 JumpIfEqual {1041}
	151 Move X8, [X0]
	152 Move X1, [X24]
	153 Move X22, X0
	154 NotImplemented "Instruction LDRH not yet implemented."
	155 Compare X9, 0
	156 JumpIfEqual {163}
	157 Move X10, [X8+176]
	158 Add X10, X10, 8
	159 NotImplemented "Instruction LDUR not yet implemented."
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Subtract X9, X9, 1
	162 Add X10, X10, 16
	163 Move W2, 17
	164 Move X0, X22
	165 Call 0x1BB5284
	166 Move W9, [X10]
	167 Add W9, W9, 17
	168 Add X8, X8, W9
	169 Add X0, X8, 312
	170 Move X8, [X0]
	171 Move X1, [X0+8]
	172 Move X0, X22
	173 NotImplemented "Instruction BLR not yet implemented."
	174 Compare X21, 0
	175 JumpIfEqual {1041}
	176 Move X2, [X25]
	177 Move X1, X0
	178 Move X0, X21
	179 Call StatePrimitive`1<Object>.set_value, X0, X1
	180 Move X9, [X19+168]
	181 Compare X9, 0
	182 JumpIfEqual {1041}
	183 Move X22, [X20+32]
	184 Compare X22, 0
	185 JumpIfEqual {1041}
	186 Move X8, [X22]
	187 Move X21, [X9+88]
	188 Move X1, [X23]
	189 NotImplemented "Instruction LDRH not yet implemented."
	190 Compare X9, 0
	191 JumpIfEqual {198}
	192 Move X10, [X8+176]
	193 Add X10, X10, 8
	194 NotImplemented "Instruction LDUR not yet implemented."
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Subtract X9, X9, 1
	197 Add X10, X10, 16
	198 Move W2, 4
	199 Move X0, X22
	200 Call 0x1BB5284
	201 Move W9, [X10]
	202 Add W9, W9, 4
	203 Add X8, X8, W9
	204 Add X0, X8, 312
	205 Move X8, [X0]
	206 Move X1, [X0+8]
	207 Move X0, X22
	208 NotImplemented "Instruction BLR not yet implemented."
	209 Compare X0, 0
	210 JumpIfEqual {1041}
	211 Move X8, [X0]
	212 Move X1, [X24]
	213 Move X22, X0
	214 NotImplemented "Instruction LDRH not yet implemented."
	215 Compare X9, 0
	216 JumpIfEqual {223}
	217 Move X10, [X8+176]
	218 Add X10, X10, 8
	219 NotImplemented "Instruction LDUR not yet implemented."
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Subtract X9, X9, 1
	222 Add X10, X10, 16
	223 Move W2, 3
	224 Move X0, X22
	225 Call 0x1BB5284
	226 Move W9, [X10]
	227 Add W9, W9, 3
	228 Add X8, X8, W9
	229 Add X0, X8, 312
	230 Move X8, [X0]
	231 Move X1, [X0+8]
	232 Move X0, X22
	233 NotImplemented "Instruction BLR not yet implemented."
	234 Compare X21, 0
	235 JumpIfEqual {1041}
	236 Move X2, [X25]
	237 Move X1, X0
	238 Move X0, X21
	239 Call StatePrimitive`1<Object>.set_value, X0, X1
	240 Move X21, [X20+32]
	241 Compare X21, 0
	242 JumpIfEqual {1041}
	243 Move X8, [X21]
	244 Move X1, [X23]
	245 NotImplemented "Instruction LDRH not yet implemented."
	246 Compare X9, 0
	247 JumpIfEqual {254}
	248 Move X10, [X8+176]
	249 Add X10, X10, 8
	250 NotImplemented "Instruction LDUR not yet implemented."
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Subtract X9, X9, 1
	253 Add X10, X10, 16
	254 Move W2, 4
	255 Move X0, X21
	256 Call 0x1BB5284
	257 Move W9, [X10]
	258 Add W9, W9, 4
	259 Add X8, X8, W9
	260 Add X0, X8, 312
	261 Move X8, [X0]
	262 Move X1, [X0+8]
	263 Move X0, X21
	264 NotImplemented "Instruction BLR not yet implemented."
	265 Compare X0, 0
	266 JumpIfEqual {1041}
	267 Move X8, [X0]
	268 Move X1, [X24]
	269 Move X21, X0
	270 NotImplemented "Instruction LDRH not yet implemented."
	271 Compare X9, 0
	272 JumpIfEqual {279}
	273 Move X10, [X8+176]
	274 Add X10, X10, 8
	275 NotImplemented "Instruction LDUR not yet implemented."
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Subtract X9, X9, 1
	278 Add X10, X10, 16
	279 Move W2, 3
	280 Move X0, X21
	281 Call 0x1BB5284
	282 Move W9, [X10]
	283 Add W9, W9, 3
	284 Add X8, X8, W9
	285 Add X0, X8, 312
	286 Move X8, [X0]
	287 Move X1, [X0+8]
	288 Move X0, X21
	289 NotImplemented "Instruction BLR not yet implemented."
	290 Move X1, X31
	291 Call String.IsNullOrEmpty, X0
	292 Move TEMP, X0
	293 And TEMP, TEMP, 1
	294 Compare TEMP, 1
	295 JumpIfNotEqual {356}
	296 Move X9, [X19+168]
	297 Compare X9, 0
	298 JumpIfEqual {1041}
	299 Move X22, [X20+32]
	300 Compare X22, 0
	301 JumpIfEqual {1041}
	302 Move X8, [X22]
	303 Move X21, [X9+88]
	304 Move X1, [X23]
	305 NotImplemented "Instruction LDRH not yet implemented."
	306 Compare X9, 0
	307 JumpIfEqual {314}
	308 Move X10, [X8+176]
	309 Add X10, X10, 8
	310 NotImplemented "Instruction LDUR not yet implemented."
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Subtract X9, X9, 1
	313 Add X10, X10, 16
	314 Move W2, 4
	315 Move X0, X22
	316 Call 0x1BB5284
	317 Move W9, [X10]
	318 Add W9, W9, 4
	319 Add X8, X8, W9
	320 Add X0, X8, 312
	321 Move X8, [X0]
	322 Move X1, [X0+8]
	323 Move X0, X22
	324 NotImplemented "Instruction BLR not yet implemented."
	325 Compare X0, 0
	326 JumpIfEqual {1041}
	327 Move X8, [X0]
	328 Move X1, [X24]
	329 Move X22, X0
	330 NotImplemented "Instruction LDRH not yet implemented."
	331 Compare X9, 0
	332 JumpIfEqual {339}
	333 Move X10, [X8+176]
	334 Add X10, X10, 8
	335 NotImplemented "Instruction LDUR not yet implemented."
	336 NotImplemented "Instruction CMP not yet implemented."
	337 Subtract X9, X9, 1
	338 Add X10, X10, 16
	339 Move W2, 17
	340 Move X0, X22
	341 Call 0x1BB5284
	342 Move W9, [X10]
	343 Add W9, W9, 17
	344 Add X8, X8, W9
	345 Add X0, X8, 312
	346 Move X8, [X0]
	347 Move X1, [X0+8]
	348 Move X0, X22
	349 NotImplemented "Instruction BLR not yet implemented."
	350 Compare X21, 0
	351 JumpIfEqual {1041}
	352 Move X2, [X25]
	353 Move X1, X0
	354 Move X0, X21
	355 Call StatePrimitive`1<Object>.set_value, X0, X1
	356 Move X9, [X19+168]
	357 Compare X9, 0
	358 JumpIfEqual {1041}
	359 Move X22, [X20+32]
	360 Compare X22, 0
	361 JumpIfEqual {1041}
	362 Move X8, [X22]
	363 Move X21, [X9+96]
	364 Move X1, [X23]
	365 NotImplemented "Instruction LDRH not yet implemented."
	366 Compare X9, 0
	367 JumpIfEqual {374}
	368 Move X10, [X8+176]
	369 Add X10, X10, 8
	370 NotImplemented "Instruction LDUR not yet implemented."
	371 NotImplemented "Instruction CMP not yet implemented."
	372 Subtract X9, X9, 1
	373 Add X10, X10, 16
	374 Move W2, 4
	375 Move X0, X22
	376 Call 0x1BB5284
	377 Move W9, [X10]
	378 Add W9, W9, 4
	379 Add X8, X8, W9
	380 Add X0, X8, 312
	381 Move X8, [X0]
	382 Move X1, [X0+8]
	383 Move X0, X22
	384 NotImplemented "Instruction BLR not yet implemented."
	385 Compare X0, 0
	386 JumpIfEqual {1041}
	387 Move X8, [X0]
	388 Move X1, [X24]
	389 Move X22, X0
	390 NotImplemented "Instruction LDRH not yet implemented."
	391 Compare X9, 0
	392 JumpIfEqual {399}
	393 Move X10, [X8+176]
	394 Add X10, X10, 8
	395 NotImplemented "Instruction LDUR not yet implemented."
	396 NotImplemented "Instruction CMP not yet implemented."
	397 Subtract X9, X9, 1
	398 Add X10, X10, 16
	399 Move W2, 1
	400 Move X0, X22
	401 Call 0x1BB5284
	402 Move W9, [X10]
	403 Add W9, W9, 1
	404 Add X8, X8, W9
	405 Add X0, X8, 312
	406 Move X8, [X0]
	407 Move X1, [X0+8]
	408 Move X0, X22
	409 NotImplemented "Instruction BLR not yet implemented."
	410 Compare X21, 0
	411 JumpIfEqual {1041}
	412 Move X2, [X25]
	413 Move X1, X0
	414 Move X0, X21
	415 Call StatePrimitive`1<Object>.set_value, X0, X1
	416 Move X21, [X20+32]
	417 Compare X21, 0
	418 JumpIfEqual {1041}
	419 Move X8, [X21]
	420 Move X1, [X23]
	421 NotImplemented "Instruction LDRH not yet implemented."
	422 Compare X9, 0
	423 JumpIfEqual {430}
	424 Move X10, [X8+176]
	425 Add X10, X10, 8
	426 NotImplemented "Instruction LDUR not yet implemented."
	427 NotImplemented "Instruction CMP not yet implemented."
	428 Subtract X9, X9, 1
	429 Add X10, X10, 16
	430 Move W2, 4
	431 Move X0, X21
	432 Call 0x1BB5284
	433 Move W9, [X10]
	434 Add W9, W9, 4
	435 Add X8, X8, W9
	436 Add X0, X8, 312
	437 Move X8, [X0]
	438 Move X1, [X0+8]
	439 Move X0, X21
	440 NotImplemented "Instruction BLR not yet implemented."
	441 Compare X0, 0
	442 JumpIfEqual {1041}
	443 Move X8, [X0]
	444 Move X1, [X24]
	445 Move X21, X0
	446 NotImplemented "Instruction LDRH not yet implemented."
	447 Compare X9, 0
	448 JumpIfEqual {455}
	449 Move X10, [X8+176]
	450 Add X10, X10, 8
	451 NotImplemented "Instruction LDUR not yet implemented."
	452 NotImplemented "Instruction CMP not yet implemented."
	453 Subtract X9, X9, 1
	454 Add X10, X10, 16
	455 Move W2, 12
	456 Move X0, X21
	457 Call 0x1BB5284
	458 Move W9, [X10]
	459 Add W9, W9, 12
	460 Add X8, X8, W9
	461 Add X0, X8, 312
	462 Move X8, [X0]
	463 Move X1, [X0+8]
	464 Move X22, 0x22B8000
	465 Move X22, [X22+128]
	466 Move X0, X21
	467 NotImplemented "Instruction BLR not yet implemented."
	468 Move X1, X31
	469 Call String.IsNullOrEmpty, X0
	470 Move TEMP, X0
	471 And TEMP, TEMP, 1
	472 Compare TEMP, 1
	473 JumpIfEqual {538}
	474 Move X21, [X20+32]
	475 Compare X21, 0
	476 JumpIfEqual {701}
	477 Move X8, [X21]
	478 Move X1, [X23]
	479 NotImplemented "Instruction LDRH not yet implemented."
	480 Compare X9, 0
	481 JumpIfEqual {488}
	482 Move X10, [X8+176]
	483 Add X10, X10, 8
	484 NotImplemented "Instruction LDUR not yet implemented."
	485 NotImplemented "Instruction CMP not yet implemented."
	486 Subtract X9, X9, 1
	487 Add X10, X10, 16
	488 Move W2, 4
	489 Move X0, X21
	490 Call 0x1BB5284
	491 Move W9, [X10]
	492 Add W9, W9, 4
	493 Add X8, X8, W9
	494 Add X0, X8, 312
	495 Move X8, [X0]
	496 Move X1, [X0+8]
	497 Move X0, X21
	498 NotImplemented "Instruction BLR not yet implemented."
	499 Move X21, X0
	500 Compare X0, 0
	501 JumpIfEqual {705}
	502 Move X8, [X21]
	503 Move X1, [X24]
	504 NotImplemented "Instruction LDRH not yet implemented."
	505 Compare X9, 0
	506 JumpIfEqual {513}
	507 Move X10, [X8+176]
	508 Add X10, X10, 8
	509 NotImplemented "Instruction LDUR not yet implemented."
	510 NotImplemented "Instruction CMP not yet implemented."
	511 Subtract X9, X9, 1
	512 Add X10, X10, 16
	513 Move W2, 12
	514 Move X0, X21
	515 Call 0x1BB5284
	516 Move W9, [X10]
	517 Add W9, W9, 12
	518 Add X8, X8, W9
	519 Add X0, X8, 312
	520 Move X8, [X0]
	521 Move X1, [X0+8]
	522 Move X0, X21
	523 NotImplemented "Instruction BLR not yet implemented."
	524 Move X8, 0x22B8000
	525 Move X8, [X8+112]
	526 Move X1, [X8]
	527 Call JsonUtility.FromJson, X0
	528 Move X8, [X19+168]
	529 Compare X8, 0
	530 JumpIfEqual {710}
	531 Move X8, [X8+112]
	532 Compare X8, 0
	533 JumpIfEqual {713}
	534 Move X2, [X22]
	535 And W1, W0, 1
	536 Move X0, X8
	537 Call 0x24BA6A4, X0, X1
	538 Move X21, [X20+32]
	539 Compare X21, 0
	540 JumpIfEqual {1041}
	541 Move X8, [X21]
	542 Move X1, [X23]
	543 NotImplemented "Instruction LDRH not yet implemented."
	544 Compare X9, 0
	545 JumpIfEqual {552}
	546 Move X10, [X8+176]
	547 Add X10, X10, 8
	548 NotImplemented "Instruction LDUR not yet implemented."
	549 NotImplemented "Instruction CMP not yet implemented."
	550 Subtract X9, X9, 1
	551 Add X10, X10, 16
	552 Move W2, 6
	553 Move X0, X21
	554 Call 0x1BB5284
	555 Move W9, [X10]
	556 Add W9, W9, 6
	557 Add X8, X8, W9
	558 Add X0, X8, 312
	559 Move X8, [X0]
	560 Move X1, [X0+8]
	561 Move X0, X21
	562 NotImplemented "Instruction BLR not yet implemented."
	563 Move X1, X31
	564 Call String.IsNullOrEmpty, X0
	565 Move TEMP, X0
	566 And TEMP, TEMP, 1
	567 Compare TEMP, 1
	568 JumpIfEqual {612}
	569 Move X21, [X20+32]
	570 Compare X21, 0
	571 JumpIfEqual {703}
	572 Move X8, [X21]
	573 Move X1, [X23]
	574 NotImplemented "Instruction LDRH not yet implemented."
	575 Compare X9, 0
	576 JumpIfEqual {583}
	577 Move X10, [X8+176]
	578 Add X10, X10, 8
	579 NotImplemented "Instruction LDUR not yet implemented."
	580 NotImplemented "Instruction CMP not yet implemented."
	581 Subtract X9, X9, 1
	582 Add X10, X10, 16
	583 Move W2, 6
	584 Move X0, X21
	585 Call 0x1BB5284
	586 Move W9, [X10]
	587 Add W9, W9, 6
	588 Add X8, X8, W9
	589 Add X0, X8, 312
	590 Move X8, [X0]
	591 Move X1, [X0+8]
	592 Move X0, X21
	593 NotImplemented "Instruction BLR not yet implemented."
	594 Move X8, 0x22B8000
	595 Move X8, [X8+120]
	596 Move X1, [X8]
	597 Call JsonUtility.FromJson, X0
	598 Move X1, X0
	599 Move X8, [X19+168]
	600 Compare X8, 0
	601 JumpIfEqual {706}
	602 Move X8, [X8+104]
	603 Compare X8, 0
	604 JumpIfEqual {708}
	605 Move X0, [X8+72]
	606 Compare X0, 0
	607 JumpIfEqual {712}
	608 Move X8, 0x22B8000
	609 Move X8, [X8+136]
	610 Move X2, [X8]
	611 Call StatePrimitive`1<Int32>.set_value, X0, X1
	612 Move X8, 0x22B7000
	613 Move X8, [X8+2048]
	614 Move X0, [X8]
	615 Move W8, [X0+224]
	616 Compare W8, 0
	617 JumpIfNotEqual {619}
	618 Call 0x1B6F8F8
	619 Move X0, X31
	620 Call Application.get_isEditor
	621 Move TEMP, X0
	622 And TEMP, TEMP, 1
	623 Compare TEMP, 1
	624 JumpIfNotEqual {634}
	625 Move X8, [X19+168]
	626 Compare X8, 0
	627 JumpIfEqual {1041}
	628 Move X0, [X8+112]
	629 Compare X0, 0
	630 JumpIfEqual {1041}
	631 Move X2, [X22]
	632 Move W1, 1
	633 Call 0x24BA6A4, X0, X1
	634 Move X8, [X19+168]
	635 Compare X8, 0
	636 JumpIfEqual {1041}
	637 Move X9, 0x22B7000
	638 Move X9, [X9+3328]
	639 Move X0, [X8+112]
	640 Move X1, [X9]
	641 Call 0x24BA848, X0
	642 Move TEMP, X0
	643 And TEMP, TEMP, 1
	644 Compare TEMP, 1
	645 JumpIfNotEqual {654}
	646 Move X8, [X19+184]
	647 Compare X8, 0
	648 JumpIfEqual {1041}
	649 Move X0, [X8+88]
	650 Compare X0, 0
	651 JumpIfEqual {1041}
	652 Move W8, [X0+76]
	653 NotImplemented "Instruction CMP not yet implemented."
	654 Move X0, X31
	655 Call Random.get_value
	656 Move X8, -18796544
	657 Move V1, [X8+3336]
	658 NotImplemented "Instruction FCMP not yet implemented."
	659 Move X8, [X19+184]
	660 Compare X8, 0
	661 JumpIfEqual {1041}
	662 Move X0, [X8+88]
	663 Compare X0, 0
	664 JumpIfEqual {1041}
	665 Move W8, [X0+76]
	666 NotImplemented "Instruction CMP not yet implemented."
	667 Move X8, -18796544
	668 Move V1, [X8+3552]
	669 NotImplemented "Instruction FCMP not yet implemented."
	670 Move X8, [X19+184]
	671 Compare X8, 0
	672 JumpIfEqual {1041}
	673 Move X0, [X8+88]
	674 Compare X0, 0
	675 JumpIfEqual {1041}
	676 Move W8, [X0+76]
	677 NotImplemented "Instruction CMP not yet implemented."
	678 Move X8, 0x22B7000
	679 Move X8, [X8+1968]
	680 Move W1, 4
	681 Move X8, 0x22B7000
	682 Move X8, [X8+1968]
	683 Move W1, 3
	684 Move X2, [X8]
	685 Call StatePrimitive`1<Int32Enum>.set_value, X0, X1
	686 Move X0, [X19+152]
	687 Compare X0, 0
	688 JumpIfEqual {1041}
	689 Move X2, [X22]
	690 Move X20, [X31+48]
	691 Move X19, [X31+56]
	692 Move X22, [X31+32]
	693 Move X21, [X31+40]
	694 Move X24, [X31+16]
	695 Move X23, [X31+24]
	696 Move W1, 1
	697 Move X30, [X31+64]
	698 Move X25, [X31+72]
	699 Call 0x24BA6A4, X0, X1
	700 Return 
	701 Move X25, X23
	702 Call 0x1B6FA1C
	703 Move X25, X22
	704 Call 0x1B6FA1C
	705 Call 0x1B6FA1C
	706 Move X25, X22
	707 Call 0x1B6FA1C
	708 Move X25, X22
	709 Call 0x1B6FA1C
	710 Move X25, X23
	711 Call 0x1B6FA1C
	712 Call 0x1B6FA1C
	713 Call 0x1B6FA1C
	714 Move X25, X22
	715 Move X21, X0
	716 NotImplemented "Instruction CMP not yet implemented."
	717 Move X0, X21
	718 Call 0x3D1A840
	719 Move X21, X0
	720 Move X0, 0x22B7000
	721 Move X0, [X0+1648]
	722 Call 0x1B6F804
	723 Move X8, [X21]
	724 Move X1, [X8]
	725 Call 0x1B6FD6C
	726 Move TEMP, X0
	727 And TEMP, TEMP, 1
	728 Compare TEMP, 1
	729 JumpIfNotEqual {883}
	730 Move X21, [X21]
	731 Call 0x3D1A850
	732 Move X0, 0x22B7000
	733 Move X0, [X0+1472]
	734 Call 0x1B6F804
	735 Call 0x1B6FA0C
	736 Move X22, X0
	737 Move X0, 0x22B7000
	738 Move X0, [X0+1464]
	739 Call 0x1B6F804
	740 Move X1, X0
	741 Move X0, X22
	742 Call Dictionary`2<Object, Object>..ctor, X0
	743 Move X23, [X20+32]
	744 Compare X23, 0
	745 JumpIfEqual {1041}
	746 Move X0, 0x22B7000
	747 Move X0, [X0+4064]
	748 Call 0x1B6F804
	749 Move X8, [X23]
	750 Move X1, X0
	751 NotImplemented "Instruction LDRH not yet implemented."
	752 Compare X9, 0
	753 JumpIfEqual {760}
	754 Move X10, [X8+176]
	755 Add X10, X10, 8
	756 NotImplemented "Instruction LDUR not yet implemented."
	757 NotImplemented "Instruction CMP not yet implemented."
	758 Subtract X9, X9, 1
	759 Add X10, X10, 16
	760 Move W2, 4
	761 Move X0, X23
	762 Call 0x1BB5284
	763 Move W9, [X10]
	764 Add W9, W9, 4
	765 Add X8, X8, W9
	766 Add X0, X8, 312
	767 Move X8, [X0]
	768 Move X1, [X0+8]
	769 Move X0, X23
	770 NotImplemented "Instruction BLR not yet implemented."
	771 Compare X0, 0
	772 JumpIfEqual {1041}
	773 Move X23, X0
	774 Move X0, 0x22B8000
	775 Move X0, [X0+104]
	776 Call 0x1B6F804
	777 Move X8, [X23]
	778 Move X1, X0
	779 NotImplemented "Instruction LDRH not yet implemented."
	780 Compare X9, 0
	781 JumpIfEqual {788}
	782 Move X10, [X8+176]
	783 Add X10, X10, 8
	784 NotImplemented "Instruction LDUR not yet implemented."
	785 NotImplemented "Instruction CMP not yet implemented."
	786 Subtract X9, X9, 1
	787 Add X10, X10, 16
	788 Move W2, 9
	789 Move X0, X23
	790 Call 0x1BB5284
	791 Move W9, [X10]
	792 Add W9, W9, 9
	793 Add X8, X8, W9
	794 Add X0, X8, 312
	795 Move X8, [X0]
	796 Move X1, [X0+8]
	797 Move X0, X23
	798 NotImplemented "Instruction BLR not yet implemented."
	799 Compare X22, 0
	800 JumpIfEqual {1041}
	801 Move X23, X0
	802 Move X0, 0x22B8000
	803 Move X0, [X0+144]
	804 Call 0x1B6F804
	805 Move X24, X0
	806 Move X0, 0x22B7000
	807 Move X0, [X0+1456]
	808 Call 0x1B6F804
	809 Move X3, X0
	810 Move X0, X22
	811 Move X1, X24
	812 Move X2, X23
	813 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	814 Move X20, [X20+32]
	815 Compare X20, 0
	816 JumpIfEqual {1041}
	817 Move X0, 0x22B7000
	818 Move X0, [X0+4064]
	819 Call 0x1B6F804
	820 Move X8, [X20]
	821 Move X1, X0
	822 NotImplemented "Instruction LDRH not yet implemented."
	823 Compare X9, 0
	824 JumpIfEqual {831}
	825 Move X10, [X8+176]
	826 Add X10, X10, 8
	827 NotImplemented "Instruction LDUR not yet implemented."
	828 NotImplemented "Instruction CMP not yet implemented."
	829 Subtract X9, X9, 1
	830 Add X10, X10, 16
	831 Move W2, 6
	832 Move X0, X20
	833 Call 0x1BB5284
	834 Move W9, [X10]
	835 Add W9, W9, 6
	836 Add X8, X8, W9
	837 Add X0, X8, 312
	838 Move X8, [X0]
	839 Move X1, [X0+8]
	840 Move X0, X20
	841 NotImplemented "Instruction BLR not yet implemented."
	842 Move X20, X0
	843 Move X0, 0x22B7000
	844 Move X0, [X0+152]
	845 Call 0x1B6F804
	846 Move X23, X0
	847 Move X0, 0x22B6000
	848 Move X0, [X0+1456]
	849 Call 0x1B6F804
	850 Move X3, X0
	851 Move X0, X22
	852 Move X1, X23
	853 Move X2, X20
	854 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	855 Move X0, 0x22B6000
	856 Move X0, [X0+1576]
	857 Call 0x1B6F804
	858 Move W8, [X0+224]
	859 Compare W8, 0
	860 JumpIfNotEqual {862}
	861 Call 0x1B6F8F8
	862 Move X0, 0x22B7000
	863 Move X0, [X0+160]
	864 Call 0x1B6F804
	865 Move X20, X0
	866 Move X0, 0x22B7000
	867 Move X0, [X0+168]
	868 Call 0x1B6F804
	869 Move X23, X0
	870 Move X0, 0x22B7000
	871 Move X0, [X0+176]
	872 Call 0x1B6F804
	873 Move X5, X0
	874 Move W0, 2048
	875 Move W6, 55
	876 Move X1, X20
	877 Move X2, X21
	878 Move X3, X22
	879 Move X4, X23
	880 Move X7, X31
	881 Call Log.Error, X0, X1, X2, X3, X4, X5, X6
	882 Move X22, X25
	883 Move W0, 8
	884 Call 0x3D1A860
	885 Move X8, [X21]
	886 Move [X0], X8
	887 Move X1, 0x2085000
	888 Add X1, X1, 3032
	889 Move X2, X31
	890 Call 0x3D1A870
	891 Move X21, X0
	892 Call 0x3D1A850
	893 Move X25, X23
	894 Move X21, X0
	895 NotImplemented "Instruction CMP not yet implemented."
	896 Move X0, X21
	897 Call 0x3D1A840
	898 Move X21, X0
	899 Move X0, 0x22B6000
	900 Move X0, [X0+1648]
	901 Call 0x1B6F804
	902 Move X8, [X21]
	903 Move X1, [X8]
	904 Call 0x1B6FD6C
	905 Move TEMP, X0
	906 And TEMP, TEMP, 1
	907 Compare TEMP, 1
	908 JumpIfNotEqual {1093}
	909 Move X21, [X21]
	910 Call 0x3D1A850
	911 Move X0, 0x22B6000
	912 Move X0, [X0+1472]
	913 Call 0x1B6F804
	914 Call 0x1B6FA0C
	915 Move X22, X0
	916 Move X0, 0x22B6000
	917 Move X0, [X0+1464]
	918 Call 0x1B6F804
	919 Move X1, X0
	920 Move X0, X22
	921 Call Dictionary`2<Object, Object>..ctor, X0
	922 Move X23, [X20+32]
	923 Compare X23, 0
	924 JumpIfEqual {1041}
	925 Move X0, 0x22B6000
	926 Move X0, [X0+4064]
	927 Call 0x1B6F804
	928 Move X8, [X23]
	929 Move X1, X0
	930 NotImplemented "Instruction LDRH not yet implemented."
	931 Compare X9, 0
	932 JumpIfEqual {939}
	933 Move X10, [X8+176]
	934 Add X10, X10, 8
	935 NotImplemented "Instruction LDUR not yet implemented."
	936 NotImplemented "Instruction CMP not yet implemented."
	937 Subtract X9, X9, 1
	938 Add X10, X10, 16
	939 Move W2, 4
	940 Move X0, X23
	941 Call 0x1BB5284
	942 Move W9, [X10]
	943 Add W9, W9, 4
	944 Add X8, X8, W9
	945 Add X0, X8, 312
	946 Move X8, [X0]
	947 Move X1, [X0+8]
	948 Move X0, X23
	949 NotImplemented "Instruction BLR not yet implemented."
	950 Compare X0, 0
	951 JumpIfEqual {1041}
	952 Move X23, X0
	953 Move X0, 0x22B7000
	954 Move X0, [X0+104]
	955 Call 0x1B6F804
	956 Move X8, [X23]
	957 Move X1, X0
	958 NotImplemented "Instruction LDRH not yet implemented."
	959 Compare X9, 0
	960 JumpIfEqual {967}
	961 Move X10, [X8+176]
	962 Add X10, X10, 8
	963 NotImplemented "Instruction LDUR not yet implemented."
	964 NotImplemented "Instruction CMP not yet implemented."
	965 Subtract X9, X9, 1
	966 Add X10, X10, 16
	967 Move W2, 9
	968 Move X0, X23
	969 Call 0x1BB5284
	970 Move W9, [X10]
	971 Add W9, W9, 9
	972 Add X8, X8, W9
	973 Add X0, X8, 312
	974 Move X8, [X0]
	975 Move X1, [X0+8]
	976 Move X0, X23
	977 NotImplemented "Instruction BLR not yet implemented."
	978 Compare X22, 0
	979 JumpIfEqual {1041}
	980 Move X23, X0
	981 Move X0, 0x22B7000
	982 Move X0, [X0+144]
	983 Call 0x1B6F804
	984 Move X24, X0
	985 Move X0, 0x22B6000
	986 Move X0, [X0+1456]
	987 Call 0x1B6F804
	988 Move X3, X0
	989 Move X0, X22
	990 Move X1, X24
	991 Move X2, X23
	992 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	993 Move X23, [X20+32]
	994 Compare X23, 0
	995 JumpIfEqual {1041}
	996 Move X0, 0x22B6000
	997 Move X0, [X0+4064]
	998 Call 0x1B6F804
	999 Move X8, [X23]
	1000 Move X1, X0
	1001 NotImplemented "Instruction LDRH not yet implemented."
	1002 Compare X9, 0
	1003 JumpIfEqual {1010}
	1004 Move X10, [X8+176]
	1005 Add X10, X10, 8
	1006 NotImplemented "Instruction LDUR not yet implemented."
	1007 NotImplemented "Instruction CMP not yet implemented."
	1008 Subtract X9, X9, 1
	1009 Add X10, X10, 16
	1010 Move W2, 4
	1011 Move X0, X23
	1012 Call 0x1BB5284
	1013 Move W9, [X10]
	1014 Add W9, W9, 4
	1015 Add X8, X8, W9
	1016 Add X0, X8, 312
	1017 Move X8, [X0]
	1018 Move X1, [X0+8]
	1019 Move X0, X23
	1020 NotImplemented "Instruction BLR not yet implemented."
	1021 Compare X0, 0
	1022 JumpIfEqual {1041}
	1023 Move X23, X0
	1024 Move X0, 0x22B7000
	1025 Move X0, [X0+104]
	1026 Call 0x1B6F804
	1027 Move X8, [X23]
	1028 Move X1, X0
	1029 NotImplemented "Instruction LDRH not yet implemented."
	1030 Compare X9, 0
	1031 JumpIfEqual {1038}
	1032 Move X10, [X8+176]
	1033 Add X10, X10, 8
	1034 NotImplemented "Instruction LDUR not yet implemented."
	1035 NotImplemented "Instruction CMP not yet implemented."
	1036 Subtract X9, X9, 1
	1037 Add X10, X10, 16
	1038 Move W2, 12
	1039 Move X0, X23
	1040 Call 0x1BB5284
	1041 Call 0x1B6FA1C
	1042 Move W9, [X10]
	1043 Add W9, W9, 12
	1044 Add X8, X8, W9
	1045 Add X0, X8, 312
	1046 Move X8, [X0]
	1047 Move X1, [X0+8]
	1048 Move X0, X23
	1049 NotImplemented "Instruction BLR not yet implemented."
	1050 Move X23, X0
	1051 Move X0, 0x22B7000
	1052 Move X0, [X0+184]
	1053 Call 0x1B6F804
	1054 Move X24, X0
	1055 Move X0, 0x22B6000
	1056 Move X0, [X0+1456]
	1057 Call 0x1B6F804
	1058 Move X3, X0
	1059 Move X0, X22
	1060 Move X1, X24
	1061 Move X2, X23
	1062 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1063 Move X0, 0x22B6000
	1064 Move X0, [X0+1576]
	1065 Call 0x1B6F804
	1066 Move W8, [X0+224]
	1067 Compare W8, 0
	1068 JumpIfNotEqual {1070}
	1069 Call 0x1B6F8F8
	1070 Move X0, 0x22B7000
	1071 Move X0, [X0+192]
	1072 Call 0x1B6F804
	1073 Move X23, X0
	1074 Move X0, 0x22B7000
	1075 Move X0, [X0+168]
	1076 Call 0x1B6F804
	1077 Move X24, X0
	1078 Move X0, 0x22B7000
	1079 Move X0, [X0+176]
	1080 Call 0x1B6F804
	1081 Move X5, X0
	1082 Move W0, 2048
	1083 Move W6, 38
	1084 Move X1, X23
	1085 Move X2, X21
	1086 Move X3, X22
	1087 Move X4, X24
	1088 Move X7, X31
	1089 Call Log.Error, X0, X1, X2, X3, X4, X5, X6
	1090 Move X22, 0x22B7000
	1091 Move X22, [X22+128]
	1092 Move X23, X25
	1093 Move W0, 8
	1094 Call 0x3D1A860
	1095 Move X8, [X21]
	1096 Move [X0], X8
	1097 Move X1, 0x2085000
	1098 Add X1, X1, 3032
	1099 Move X2, X31
	1100 Call 0x3D1A870
	1101 Move X21, X0
	1102 Call 0x3D1A850
	1103 Move X0, X21
	1104 Call 0x1C8518C
	1105 Call 0x18F56A8

