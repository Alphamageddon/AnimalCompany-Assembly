Type: AnimalCompany.MobData

Method: System.Single get_bodySizeSqr()

Disassembly:
	0x01DF8E04 BL 0x1C16CF4
	0x01DF8E08 ADRP X0, 0x2301000
	0x01DF8E0C LDR X0, [X0 + 0x428]

ISIL:
	001 Move V0, [X0+72]
	002 Multiply S0, S0, S0
	003 Return V0

Method: System.Single get_attackRangeSqr()

Disassembly:
	0x01DEB4D4 MOV X0, X20
	0x01DEB4D8 MOV X1, X31
	0x01DEB4DC BL 0x3C3F62C

ISIL:
	001 Move V0, [X0+76]
	002 Multiply S0, S0, S0
	003 Return V0

Method: System.Single get_hearingDistanceSqr()

Disassembly:
	0x01DF8E10 BL 0x1C16CF4
	0x01DF8E14 ADRP X0, 0x22FB000
	0x01DF8E18 LDR X0, [X0 + 0x5D8]

ISIL:
	001 Move V0, [X0+128]
	002 Multiply S0, S0, S0
	003 Return V0

Method: System.Void .ctor()

Disassembly:
	0x01DF8E1C BL 0x1C16CF4
	0x01DF8E20 ADRP X0, 0x2301000
	0x01DF8E24 LDR X0, [X0 + 0x150]
	0x01DF8E28 BL 0x1C16CF4
	0x01DF8E2C ADRP X0, 0x2301000
	0x01DF8E30 LDR X0, [X0 + 0x480]
	0x01DF8E34 BL 0x1C16CF4
	0x01DF8E38 ADRP X0, 0x2300000
	0x01DF8E3C LDR X0, [X0 + 0xCB0]
	0x01DF8E40 BL 0x1C16CF4
	0x01DF8E44 ADRP X0, 0x2300000
	0x01DF8E48 LDR X0, [X0 + 0xEE8]
	0x01DF8E4C BL 0x1C16CF4
	0x01DF8E50 ADRP X0, 0x22FD000
	0x01DF8E54 LDR X0, [X0 + 0x9A0]
	0x01DF8E58 BL 0x1C16CF4
	0x01DF8E5C ADRP X0, 0x22FB000
	0x01DF8E60 LDR X0, [X0 + 0x5F8]
	0x01DF8E64 BL 0x1C16CF4
	0x01DF8E68 ADRP X0, 0x2301000
	0x01DF8E6C LDR X0, [X0 + 0x430]
	0x01DF8E70 BL 0x1C16CF4
	0x01DF8E74 MOVZ W8, 0x1
	0x01DF8E78 STRB W8, [X21 + 0xD22]
	0x01DF8E7C MOVI V0.2D, 0x0
	0x01DF8E80 STP X31, X31, [X31 + 0x80]
	0x01DF8E84 STR X31, [X31 + 0x90]
	0x01DF8E88 STUR V0, [X31 + 0x6C]
	0x01DF8E8C STP V0, V0, [X31 + 0x50]
	0x01DF8E90 CBZ X20, 0x1DF9274
	0x01DF8E94 LDR X0, [X20 + 0xD0]
	0x01DF8E98 CBZ X0, 0x1DF9274
	0x01DF8E9C MOV X1, X31
	0x01DF8EA0 BL 0x3C3F58C
	0x01DF8EA4 LDR X8, [X20 + 0xC0]
	0x01DF8EA8 STP S1, S0, [X31 + 0x28]
	0x01DF8EAC STR S2, [X31 + 0x24]
	0x01DF8EB0 CBZ X8, 0x1DF9274
	0x01DF8EB4 ADRP X9, 0x2300000
	0x01DF8EB8 LDR X9, [X9 + 0xEE8]
	0x01DF8EBC ADRP X20, 0x2301000
	0x01DF8EC0 ADRP X21, 0x22FD000
	0x01DF8EC4 LDR V8, [X8 + 0x48]
	0x01DF8EC8 LDR X0, [X9]
	0x01DF8ECC LDR X20, [X20 + 0x480]
	0x01DF8ED0 LDR X21, [X21 + 0x9A0]
	0x01DF8ED4 BL 0x1C16F10
	0x01DF8ED8 LDR X1, [X20]
	0x01DF8EDC MOV X20, X0
	0x01DF8EE0 BL 0x301B7C4
	0x01DF8EE4 STR X20, [X19]
	0x01DF8EE8 LDR X0, [X21]
	0x01DF8EEC LDR W8, [X0 + 0xE0]
	0x01DF8EF0 CBNZ W8, 0x1DF8EF8
	0x01DF8EF4 BL 0x1C16DFC
	0x01DF8EF8 ADRP X20, 0x25E0000
	0x01DF8EFC LDRB W8, [X20 + 0xB6A]
	0x01DF8F00 CBNZ W8, 0x1DF8F18
	0x01DF8F04 ADRP X0, 0x22FD000
	0x01DF8F08 LDR X0, [X0 + 0x9A0]
	0x01DF8F0C BL 0x1C16CF4
	0x01DF8F10 MOVZ W8, 0x1
	0x01DF8F14 STRB W8, [X20 + 0xB6A]
	0x01DF8F18 LDR X0, [X21]
	0x01DF8F1C LDR W8, [X0 + 0xE0]
	0x01DF8F20 CBNZ W8, 0x1DF8F2C
	0x01DF8F24 BL 0x1C16DFC
	0x01DF8F28 LDR X0, [X21]
	0x01DF8F2C LDR X8, [X0 + 0xB8]
	0x01DF8F30 LDR X0, [X8]
	0x01DF8F34 CBZ X0, 0x1DF9274
	0x01DF8F38 ADRP X8, 0x22FF000
	0x01DF8F3C LDR X8, [X8 + 0x850]
	0x01DF8F40 LDR X1, [X8]
	0x01DF8F44 BL 0x2B0EEFC
	0x01DF8F48 CBZ X0, 0x1DF9274
	0x01DF8F4C ADRP X8, 0x2301000
	0x01DF8F50 LDR X8, [X8 + 0x430]
	0x01DF8F54 ADRP X25, 0x2301000
	0x01DF8F58 LDR X25, [X25 + 0x420]
	0x01DF8F5C FMOV S0, 0.5
	0x01DF8F60 LDR X1, [X8]
	0x01DF8F64 FMUL S0, S8, S0
	0x01DF8F68 ADD X8, X31, 0x38
	0x01DF8F6C STR S0, [X31 + 0x1C]
	0x01DF8F70 BL 0x27850A8
	0x01DF8F74 ADRP X9, 0xFFFFFFFFFECF2000
	0x01DF8F78 LDUR V0, [X31 + 0x38]
	0x01DF8F7C LDR V1, [X9 + 0x17C]
	0x01DF8F80 ADRP X20, 0x22FB000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x25E1000
	006 Move X20, 0x22FC000
	007 Move W8, [X21+3351]
	008 Move X20, [X20+1592]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22FC000
	015 Move X0, [X0+1592]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3351], W8
	019 Move X8, -19963904
	020 Move V0, [X8+2312]
	021 Move W8, 0x3F800000
	022 Move [X19+40], W8
	023 Move W1, 1
	024 Move [X19+32], D0
	025 Move X0, [X20]
	026 Call 0x1C17D6C
	027 Compare X0, 0
	028 JumpIfEqual {107}
	029 Move W8, [X0+24]
	030 Compare W8, 0
	031 JumpIfEqual {106}
	032 Move W8, 0x40400000
	033 Move [X0+32], W8
	034 Move [X19+48], X0
	035 Move X0, [X20]
	036 Move W1, 2
	037 Call 0x1C17D6C
	038 Compare X0, 0
	039 JumpIfEqual {107}
	040 Move W8, [X0+24]
	041 Compare W8, 0
	042 JumpIfEqual {106}
	043 Move W9, 0x40E00000
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move [X0+32], W9
	046 Move X8, -19972096
	047 Move V0, [X8+93]
	048 Move W8, 0x41400000
	049 Move [X0+36], W8
	050 Move [X19+56], X0
	051 Move [X19+4], V0
	052 Move X0, [X20]
	053 Move W1, 1
	054 Call 0x1C17D6C
	055 Compare X0, 0
	056 JumpIfEqual {107}
	057 Move W8, [X0+24]
	058 Compare W8, 0
	059 JumpIfEqual {106}
	060 Move W8, 0x40400000
	061 Move [X0+32], W8
	062 Move [X19+88], X0
	063 Move X0, [X20]
	064 Move W1, 1
	065 Call 0x1C17D6C
	066 Compare X0, 0
	067 JumpIfEqual {107}
	068 Move W8, [X0+24]
	069 Compare W8, 0
	070 JumpIfEqual {106}
	071 Move W8, 0x42C80000
	072 Move V0, 0
	073 Move W9, 0x42DC0000
	074 Move [X0+32], W8
	075 Move [X19+96], X0
	076 Move [X19+104], D0
	077 Move [X19+112], W9
	078 Move X0, [X20]
	079 Move W1, 1
	080 Call 0x1C17D6C
	081 Compare X0, 0
	082 JumpIfEqual {107}
	083 Move W8, [X0+24]
	084 Compare W8, 0
	085 JumpIfEqual {106}
	086 Move X9, -19963904
	087 Move V0, [X9+2896]
	088 Move W8, 0x41000000
	089 Move W10, 0x3F800000
	090 Move W11, 1
	091 Move W12, 0x42700000
	092 Move [X0+32], W8
	093 Move [X19+120], X0
	094 Move [X19+136], W10
	095 Move [X19+140], W11
	096 Move [X19+128], D0
	097 Move [X19+144], W12
	098 Move X0, X19
	099 Move X20, [X31+16]
	100 Move X19, [X31+24]
	101 Move X1, X31
	102 Move X30, [X31+32]
	103 Move X21, [X31+40]
	104 Call ScriptableObject..ctor, X0
	105 Return 
	106 Call 0x1C17F28
	107 Call 0x1C17F20

