Type: AnimalCompany.EnvironmentVolumeManager

Method: AnimalCompany.EnvironmentVolumeProfile get_currentProfile()

Disassembly:
	0x01E06C18 LDR X0, [X0 + 0xA38]
	0x01E06C1C BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_currentProfile(AnimalCompany.EnvironmentVolumeProfile value)

Disassembly:
	0x01E06C20 ADRP X0, 0x22F3000
	0x01E06C24 LDR X0, [X0 + 0x9D8]

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.Void Awake()

Disassembly:
	0x01E06C28 BL 0x1C16CF4
	0x01E06C2C ADRP X0, 0x22F3000
	0x01E06C30 LDR X0, [X0 + 0xA40]
	0x01E06C34 BL 0x1C16CF4
	0x01E06C38 ADRP X0, 0x22F3000
	0x01E06C3C LDR X0, [X0 + 0xA48]
	0x01E06C40 BL 0x1C16CF4
	0x01E06C44 ADRP X0, 0x22F3000
	0x01E06C48 LDR X0, [X0 + 0x9F0]
	0x01E06C4C BL 0x1C16CF4
	0x01E06C50 ADRP X0, 0x22F3000
	0x01E06C54 LDR X0, [X0 + 0xA50]
	0x01E06C58 BL 0x1C16CF4
	0x01E06C5C ADRP X0, 0x22ED000
	0x01E06C60 LDR X0, [X0 + 0x598]
	0x01E06C64 BL 0x1C16CF4
	0x01E06C68 ADRP X0, 0x22F3000
	0x01E06C6C LDR X0, [X0 + 0xA58]
	0x01E06C70 BL 0x1C16CF4
	0x01E06C74 MOVZ W8, 0x1
	0x01E06C78 STRB W8, [X21 + 0xDA4]
	0x01E06C7C LDR X0, [X20]
	0x01E06C80 STP X31, X31, [X31 + 0xF0]
	0x01E06C84 STP X31, X31, [X31 + 0xD8]
	0x01E06C88 STR X31, [X31 + 0xE8]
	0x01E06C8C STP X31, X31, [X31 + 0xC0]
	0x01E06C90 STR X31, [X31 + 0xD0]
	0x01E06C94 BL 0x1C16F10
	0x01E06C98 MOV X1, X31
	0x01E06C9C MOV X20, X0
	0x01E06CA0 BL 0x1E1017C
	0x01E06CA4 LDR X8, [X31 + 0x20]
	0x01E06CA8 CMP W25, 0x1
	0x01E06CAC STR X20, [X8]
	0x01E06CB0 B.LT 0x1E07470
	0x01E06CB4 CBZ X24, 0x1E075CC
	0x01E06CB8 STR X31, [X31 + 0x18]
	0x01E06CBC ADRP X26, 0x22F3000
	0x01E06CC0 LDR X26, [X26 + 0xA50]
	0x01E06CC4 MOV W22, W31
	0x01E06CC8 MOV W8, W31
	0x01E06CCC MOVZ W21, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x25D3000
	005 Move X20, 0x22EE000
	006 Move W8, [X19+3484]
	007 Move X20, [X20+2416]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x22EE000
	013 Move X0, [X0+2416]
	014 Call 0x1C17CF4
	015 Move X0, 0x22F2000
	016 Move X0, [X0+3232]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+3484], W8
	020 Move X0, [X20]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X31
	026 Call Application.get_isPlaying
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {50}
	031 Move X0, X31
	032 Call RenderSettings.get_skybox
	033 Move X8, 0x22F2000
	034 Move X8, [X8+3232]
	035 Move X19, X0
	036 Move X8, [X8]
	037 Move X0, X8
	038 Call 0x1C17F10
	039 Move X1, X19
	040 Move X2, X31
	041 Move X20, X0
	042 Call Material..ctor, X0, X1
	043 Move X0, X20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X1, X31
	047 Move X30, [X31+32]
	048 Call RenderSettings.set_skybox, X0
	049 Return 
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Return 

Method: System.Void OnEnable()

Disassembly:
	0x01E06CD0 STR W25, [X31 + 0x10]
	0x01E06CD4 MOV W25, W31
	0x01E06CD8 STR W8, [X31 + 0x14]
	0x01E06CDC LDR W8, [X24 + 0x18]
	0x01E06CE0 CBZ W8, 0x1E075D0
	0x01E06CE4 ADD X3, X31, 0xF8
	0x01E06CE8 MOV X1, X24
	0x01E06CEC MOV W2, W23
	0x01E06CF0 BL 0x1E069E4
	0x01E06CF4 TBZ X0, 0x0, 0x1E075D0
	0x01E06CF8 MOV X1, X19
	0x01E06CFC BL 0x1E0632C
	0x01E06D00 LDR X29, [X31 + 0xF8]
	0x01E06D04 CBZ X29, 0x1E075CC
	0x01E06D08 MOV X20, X0
	0x01E06D0C MOV X0, X29
	0x01E06D10 MOV X1, X31
	0x01E06D14 BL 0x3C32E90
	0x01E06D18 CBZ X0, 0x1E075CC
	0x01E06D1C MOV X1, X31
	0x01E06D20 BL 0x3C3F58C
	0x01E06D24 MOV X0, X29
	0x01E06D28 MOV X1, X31
	0x01E06D2C MOV V8.16B, V0.16B
	0x01E06D30 MOV V9.16B, V1.16B
	0x01E06D34 MOV V10.16B, V2.16B
	0x01E06D38 BL 0x3C32E90
	0x01E06D3C CBZ X0, 0x1E075CC
	0x01E06D40 MOV X1, X31
	0x01E06D44 BL 0x3C3DEB4
	0x01E06D48 MOV X0, X29
	0x01E06D4C MOV X1, X31
	0x01E06D50 MOV V11.16B, V0.16B
	0x01E06D54 MOV V12.16B, V1.16B
	0x01E06D58 MOV V13.16B, V2.16B
	0x01E06D5C MOV V14.16B, V3.16B
	0x01E06D60 BL 0x3C32E90
	0x01E06D64 ADRP X8, 0x22ED000
	0x01E06D68 LDR X8, [X8 + 0x598]
	0x01E06D6C MOV X27, X0
	0x01E06D70 LDR X8, [X8]
	0x01E06D74 LDR W9, [X8 + 0xE0]
	0x01E06D78 CBNZ W9, 0x1E06D84
	0x01E06D7C MOV X0, X8
	0x01E06D80 BL 0x1C16DFC
	0x01E06D84 LDR X2, [X26]
	0x01E06D88 MOV X0, X20
	0x01E06D8C MOV V0.16B, V8.16B
	0x01E06D90 MOV V1.16B, V9.16B
	0x01E06D94 MOV V2.16B, V10.16B
	0x01E06D98 MOV V3.16B, V11.16B
	0x01E06D9C MOV V4.16B, V12.16B
	0x01E06DA0 MOV V5.16B, V13.16B
	0x01E06DA4 MOV V6.16B, V14.16B
	0x01E06DA8 MOV X1, X27
	0x01E06DAC BL 0x222D6B8
	0x01E06DB0 CBZ X0, 0x1E075CC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x25D3000
	007 Move X21, 0x22F3000
	008 Move W8, [X20+3485]
	009 Move X21, [X21+56]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x22F3000
	016 Move X0, [X0+56]
	017 Call 0x1C17CF4
	018 Move X0, 0x22EE000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3485], W8
	023 Move X0, [X21]
	024 Move X22, 0x22EE000
	025 Move W8, [X0+224]
	026 Move X22, [X22+1432]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X21]
	031 Move X8, [X22]
	032 Move X9, [X0+184]
	033 Move W10, [X8+224]
	034 Move X20, [X9+8]
	035 Compare W10, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X8
	038 Call 0x1C17DFC
	039 Move X0, X20
	040 Move X1, X31
	041 Move X2, X31
	042 Call Object.op_Equality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {61}
	047 Move X0, [X21]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {53}
	051 Call 0x1C17DFC
	052 Move X0, [X21]
	053 Move X8, [X0+184]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move [X8+8], X19
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X30, [X31+48]
	060 Return 
	061 Move X0, [X22]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, X19
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X1, X31
	072 Move X30, [X31+48]
	073 Call Object.Destroy, X0
	074 Return 

Method: System.Void SetEnvironmentProfile(AnimalCompany.EnvironmentVolumeProfile profile)

Disassembly:
	0x01E06B4C BL 0x1C16F20
	0x01E06B50 MOV X1, X31
	0x01E06B54 B 0x33BDD8C
	0x01E06B58 SUB X31, X31, 0x1E0
	0x01E06B5C STP D15, D14, [X31 + 0x140]
	0x01E06B60 STP D13, D12, [X31 + 0x150]
	0x01E06B64 STP D11, D10, [X31 + 0x160]
	0x01E06B68 STP D9, D8, [X31 + 0x170]
	0x01E06B6C STP X29, X30, [X31 + 0x180]
	0x01E06B70 STP X28, X27, [X31 + 0x190]
	0x01E06B74 STP X26, X25, [X31 + 0x1A0]
	0x01E06B78 STP X24, X23, [X31 + 0x1B0]
	0x01E06B7C STP X22, X21, [X31 + 0x1C0]
	0x01E06B80 STP X20, X19, [X31 + 0x1D0]
	0x01E06B84 STP X7, X0, [X31 + 0x20]
	0x01E06B88 STR S0, [X31 + 0x34]
	0x01E06B8C STP X5, X4, [X31 + 0x38]
	0x01E06B90 ADRP X21, 0x25D2000
	0x01E06B94 ADRP X20, 0x22F3000
	0x01E06B98 LDRB W8, [X21 + 0xDA4]
	0x01E06B9C LDR X20, [X20 + 0x9F0]
	0x01E06BA0 MOV W25, W6
	0x01E06BA4 MOV W23, W3
	0x01E06BA8 MOV X24, X2
	0x01E06BAC MOV X19, X1
	0x01E06BB0 TBNZ X8, 0x0, 0x1E06C7C
	0x01E06BB4 ADRP X0, 0x22F3000
	0x01E06BB8 LDR X0, [X0 + 0x9F8]
	0x01E06BBC BL 0x1C16CF4
	0x01E06BC0 ADRP X0, 0x22F3000
	0x01E06BC4 LDR X0, [X0 + 0xA00]
	0x01E06BC8 BL 0x1C16CF4
	0x01E06BCC ADRP X0, 0x22F3000
	0x01E06BD0 LDR X0, [X0 + 0xA08]
	0x01E06BD4 BL 0x1C16CF4
	0x01E06BD8 ADRP X0, 0x22F3000
	0x01E06BDC LDR X0, [X0 + 0xA10]
	0x01E06BE0 BL 0x1C16CF4
	0x01E06BE4 ADRP X0, 0x22F3000
	0x01E06BE8 LDR X0, [X0 + 0xA18]
	0x01E06BEC BL 0x1C16CF4
	0x01E06BF0 ADRP X0, 0x22F3000
	0x01E06BF4 LDR X0, [X0 + 0xA20]
	0x01E06BF8 BL 0x1C16CF4
	0x01E06BFC ADRP X0, 0x22F3000
	0x01E06C00 LDR X0, [X0 + 0xA28]
	0x01E06C04 BL 0x1C16CF4
	0x01E06C08 ADRP X0, 0x22F3000
	0x01E06C0C LDR X0, [X0 + 0xA30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x25D3000
	006 Move X21, 0x22F3000
	007 Move W8, [X20+3486]
	008 Move X21, [X21+56]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x22F3000
	015 Move X0, [X0+56]
	016 Call 0x1C17CF4
	017 Move X0, 0x22EE000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3486], W8
	022 Move X0, [X21]
	023 Move X20, 0x22EE000
	024 Move W8, [X0+224]
	025 Move X20, [X20+1432]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X21]
	030 Move X8, [X20]
	031 Move X9, [X0+184]
	032 Move W10, [X8+224]
	033 Move X20, [X9+8]
	034 Compare W10, 0
	035 JumpIfNotEqual {38}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 Move X0, X20
	039 Move X1, X31
	040 Move X2, X31
	041 Call Object.op_Equality, X0, X1
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {58}
	046 Move X0, [X21]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X21]
	052 Move X8, [X0+184]
	053 Move X9, [X8+8]
	054 Compare X9, 0
	055 JumpIfEqual {63}
	056 Move [X9+32], X19
	057 Move [X8+16], W31
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Return 
	063 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x01E06DB4 ADD X3, X31, 0xF0
	0x01E06DB8 MOVZ W1, 0x1
	0x01E06DBC MOV W2, W23
	0x01E06DC0 MOV X27, X0
	0x01E06DC4 BL 0x1E0763C
	0x01E06DC8 TBZ X0, 0x0, 0x1E07114
	0x01E06DCC LDR X28, [X31 + 0xF0]
	0x01E06DD0 CBZ X28, 0x1E075CC
	0x01E06DD4 MOV X0, X28
	0x01E06DD8 MOV X1, X31
	0x01E06DDC BL 0x3C32E90
	0x01E06DE0 CBZ X0, 0x1E075CC
	0x01E06DE4 MOV X1, X31
	0x01E06DE8 BL 0x3C3FA04
	0x01E06DEC FNEG S0, S0
	0x01E06DF0 FNEG S1, S1
	0x01E06DF4 FNEG S2, S2
	0x01E06DF8 MOV X0, X31
	0x01E06DFC BL 0x3C2A8C4
	0x01E06E00 MOV X0, X31
	0x01E06E04 BL 0x3C2A260
	0x01E06E08 MOV X0, X27
	0x01E06E0C MOV X1, X31
	0x01E06E10 MOV V11.16B, V0.16B
	0x01E06E14 MOV V10.16B, V1.16B
	0x01E06E18 MOV V9.16B, V2.16B
	0x01E06E1C MOV V12.16B, V3.16B
	0x01E06E20 BL 0x3C32E90
	0x01E06E24 CBZ X0, 0x1E075CC
	0x01E06E28 MOV X1, X31
	0x01E06E2C BL 0x3C3FA04
	0x01E06E30 MOV X0, X31
	0x01E06E34 BL 0x3C2A8C4
	0x01E06E38 MOV X0, X27
	0x01E06E3C MOV X1, X31
	0x01E06E40 MOV V15.16B, V0.16B
	0x01E06E44 MOV V14.16B, V1.16B
	0x01E06E48 MOV V13.16B, V2.16B
	0x01E06E4C MOV V8.16B, V3.16B
	0x01E06E50 BL 0x3C32E90
	0x01E06E54 MOV X20, X0
	0x01E06E58 MOV X0, X27
	0x01E06E5C MOV X1, X31
	0x01E06E60 BL 0x3C32E90
	0x01E06E64 CBZ X0, 0x1E075CC
	0x01E06E68 MOV X1, X31
	0x01E06E6C BL 0x3C3DEB4
	0x01E06E70 CBZ X20, 0x1E075CC
	0x01E06E74 FMUL S4, S12, S15
	0x01E06E78 FMUL S5, S11, S8
	0x01E06E7C FMUL S16, S12, S14
	0x01E06E80 FMUL S17, S10, S8
	0x01E06E84 FMUL S21, S11, S15
	0x01E06E88 FMUL S24, S12, S13
	0x01E06E8C FMUL S25, S12, S8
	0x01E06E90 FMUL S26, S9, S8
	0x01E06E94 FMUL S6, S10, S13
	0x01E06E98 FMUL S18, S9, S15
	0x01E06E9C FMUL S20, S11, S14
	0x01E06EA0 FMUL S23, S10, S14
	0x01E06EA4 FADD S4, S4, S5
	0x01E06EA8 FADD S5, S16, S17
	0x01E06EAC FADD S16, S24, S26
	0x01E06EB0 FSUB S17, S25, S21
	0x01E06EB4 FMUL S7, S9, S14
	0x01E06EB8 FMUL S19, S11, S13
	0x01E06EBC FMUL S22, S10, S15
	0x01E06EC0 FMUL S27, S9, S13
	0x01E06EC4 FADD S4, S6, S4
	0x01E06EC8 FADD S5, S18, S5
	0x01E06ECC FADD S6, S20, S16
	0x01E06ED0 FSUB S16, S17, S23
	0x01E06ED4 FSUB S4, S4, S7
	0x01E06ED8 FSUB S5, S5, S19
	0x01E06EDC FSUB S6, S6, S22
	0x01E06EE0 FSUB S7, S16, S27
	0x01E06EE4 FMUL S16, S7, S3
	0x01E06EE8 FMUL S17, S4, S0
	0x01E06EEC FMUL S18, S5, S1
	0x01E06EF0 FMUL S19, S6, S2
	0x01E06EF4 FMUL S20, S5, S0
	0x01E06EF8 FMUL S21, S6, S3
	0x01E06EFC FMUL S22, S7, S2
	0x01E06F00 FMUL S23, S4, S1
	0x01E06F04 FMUL S24, S7, S1
	0x01E06F08 FMUL S1, S6, S1
	0x01E06F0C FMUL S6, S6, S0
	0x01E06F10 FMUL S0, S7, S0
	0x01E06F14 FMUL S7, S4, S2
	0x01E06F18 FMUL S4, S4, S3
	0x01E06F1C FMUL S3, S5, S3
	0x01E06F20 FMUL S5, S5, S2
	0x01E06F24 FSUB S2, S16, S17
	0x01E06F28 FADD S16, S21, S22
	0x01E06F2C FADD S3, S3, S24
	0x01E06F30 FADD S0, S4, S0
	0x01E06F34 FSUB S2, S2, S18
	0x01E06F38 FADD S4, S20, S16
	0x01E06F3C FADD S7, S7, S3
	0x01E06F40 FADD S0, S1, S0
	0x01E06F44 FSUB S3, S2, S19
	0x01E06F48 FSUB S2, S4, S23
	0x01E06F4C FSUB S1, S7, S6
	0x01E06F50 FSUB S0, S0, S5
	0x01E06F54 MOV X0, X20
	0x01E06F58 MOV X1, X31
	0x01E06F5C BL 0x3C3F7AC
	0x01E06F60 MOV X0, X27
	0x01E06F64 MOV X1, X31
	0x01E06F68 BL 0x3C32E90
	0x01E06F6C CBZ X0, 0x1E075CC
	0x01E06F70 MOV X1, X31
	0x01E06F74 BL 0x3C3F58C
	0x01E06F78 MOV X0, X28
	0x01E06F7C MOV X1, X31
	0x01E06F80 MOV V12.16B, V0.16B
	0x01E06F84 MOV V9.16B, V1.16B
	0x01E06F88 MOV V10.16B, V2.16B
	0x01E06F8C BL 0x3C32E90
	0x01E06F90 CBZ X0, 0x1E075CC
	0x01E06F94 MOV X1, X31
	0x01E06F98 BL 0x3C3F58C
	0x01E06F9C MOV X0, X29
	0x01E06FA0 MOV X1, X31
	0x01E06FA4 MOV V13.16B, V0.16B
	0x01E06FA8 STP S2, S1, [X31 + 0x58]
	0x01E06FAC BL 0x3C32E90
	0x01E06FB0 CBZ X0, 0x1E075CC
	0x01E06FB4 MOV X1, X31
	0x01E06FB8 STP S9, S10, [X31 + 0x50]
	0x01E06FBC BL 0x3C3F58C
	0x01E06FC0 MOV X0, X27
	0x01E06FC4 MOV X1, X31
	0x01E06FC8 MOV V14.16B, V0.16B
	0x01E06FCC MOV V15.16B, V1.16B
	0x01E06FD0 MOV V9.16B, V2.16B
	0x01E06FD4 BL 0x3C32E90
	0x01E06FD8 CBZ X0, 0x1E075CC
	0x01E06FDC MOV X1, X31
	0x01E06FE0 BL 0x3C3F58C
	0x01E06FE4 MOV X0, X27
	0x01E06FE8 MOV X1, X31
	0x01E06FEC MOV V10.16B, V0.16B
	0x01E06FF0 MOV V11.16B, V1.16B
	0x01E06FF4 MOV V8.16B, V2.16B
	0x01E06FF8 BL 0x3C32E90
	0x01E06FFC CBZ X0, 0x1E075CC
	0x01E07000 FSUB S0, S12, S13
	0x01E07004 STR S0, [X31 + 0x4C]
	0x01E07008 LDR V0, [X31 + 0x50]
	0x01E0700C LDR V1, [X31 + 0x5C]
	0x01E07010 MOV X1, X31
	0x01E07014 MOV X20, X0
	0x01E07018 FSUB S8, S9, S8
	0x01E0701C FSUB S12, S0, S1
	0x01E07020 LDP S0, S1, [X31 + 0x54]
	0x01E07024 FSUB S9, S15, S11
	0x01E07028 FSUB S10, S14, S10
	0x01E0702C FSUB S13, S0, S1
	0x01E07030 BL 0x3C3F58C
	0x01E07034 LDR V3, [X31 + 0x4C]
	0x01E07038 FADD S4, S12, S9
	0x01E0703C FADD S5, S13, S8
	0x01E07040 FADD S1, S4, S1
	0x01E07044 FADD S3, S3, S10
	0x01E07048 FADD S0, S3, S0
	0x01E0704C FADD S2, S5, S2
	0x01E07050 MOV X0, X20
	0x01E07054 MOV X1, X31
	0x01E07058 BL 0x3C3F62C
	0x01E0705C ADD X8, X31, 0xD8
	0x01E07060 MOV X0, X27
	0x01E07064 BL 0x1E0789C
	0x01E07068 LDR X8, [X31 + 0xE8]
	0x01E0706C LDUR V0, [X31 + 0xD8]
	0x01E07070 STR X8, [X31 + 0x130]
	0x01E07074 LDR X8, [X31 + 0x38]
	0x01E07078 STR V0, [X31 + 0x12]
	0x01E0707C CBZ X8, 0x1E075CC
	0x01E07080 LDUR V0, [X29 + 0x48]
	0x01E07084 LDR X3, [X8 + 0x30]
	0x01E07088 LDR X8, [X29 + 0x58]
	0x01E0708C LDR V1, [X31 + 0x12]
	0x01E07090 LDR X9, [X31 + 0x130]
	0x01E07094 STR V0, [X31 + 0x8]
	0x01E07098 LDR X0, [X31 + 0x28]
	0x01E0709C LDR X2, [X31 + 0x40]
	0x01E070A0 LDR V0, [X31 + 0x34]
	0x01E070A4 ADD X1, X31, 0xA0
	0x01E070A8 ADD X4, X31, 0x80
	0x01E070AC STR X8, [X31 + 0x90]
	0x01E070B0 STR V1, [X31 + 0xA]
	0x01E070B4 STR X9, [X31 + 0xB0]
	0x01E070B8 BL 0x1E065D4
	0x01E070BC TBNZ X0, 0x0, 0x1E0716C
	0x01E070C0 MOV X0, X27
	0x01E070C4 MOV X1, X31
	0x01E070C8 BL 0x3C32ECC
	0x01E070CC ADRP X8, 0x22EC000
	0x01E070D0 LDR X8, [X8 + 0x598]
	0x01E070D4 MOV X20, X0
	0x01E070D8 LDR X8, [X8]
	0x01E070DC LDR W9, [X8 + 0xE0]
	0x01E070E0 CBNZ W9, 0x1E070EC
	0x01E070E4 MOV X0, X8
	0x01E070E8 BL 0x1C16DFC
	0x01E070EC MOV X0, X20
	0x01E070F0 MOV X1, X31
	0x01E070F4 BL 0x3C39564
	0x01E070F8 CMP W25, 0x8
	0x01E070FC B.GT 0x1E07524
	0x01E07100 ADD W22, W22, 0x1
	0x01E07104 CMP W22, 0x32
	0x01E07108 B.GE 0x1E07524
	0x01E0710C ADD W25, W25, 0x1
	0x01E07110 B 0x1E07164
	0x01E07114 MOV X0, X27
	0x01E07118 MOV X1, X31
	0x01E0711C BL 0x3C32ECC
	0x01E07120 ADRP X8, 0x22EC000
	0x01E07124 LDR X8, [X8 + 0x598]
	0x01E07128 MOV X20, X0
	0x01E0712C LDR X8, [X8]
	0x01E07130 LDR W9, [X8 + 0xE0]
	0x01E07134 CBNZ W9, 0x1E07140
	0x01E07138 MOV X0, X8
	0x01E0713C BL 0x1C16DFC
	0x01E07140 MOV X0, X20
	0x01E07144 MOV X1, X31
	0x01E07148 BL 0x3C39564
	0x01E0714C ADD W25, W25, 0x1
	0x01E07150 CMP W25, 0x9
	0x01E07154 B.GT 0x1E07478
	0x01E07158 ADD W22, W22, 0x1
	0x01E0715C CMP W22, 0x31
	0x01E07160 B.GT 0x1E07478
	0x01E07164 TBNZ X21, 0x0, 0x1E06CDC
	0x01E07168 B 0x1E07470
	0x01E0716C ADRP X8, 0x22F2000
	0x01E07170 LDR X8, [X8 + 0xA58]
	0x01E07174 MOV X0, X28
	0x01E07178 MOV X2, X31
	0x01E0717C LDR X1, [X8]
	0x01E07180 BL 0x3C38A84
	0x01E07184 LDR X8, [X31 + 0x20]
	0x01E07188 LDR X8, [X8]
	0x01E0718C CBZ X8, 0x1E075CC
	0x01E07190 LDR X0, [X8 + 0x20]
	0x01E07194 LDR W25, [X31 + 0x10]
	0x01E07198 LDR X21, [X31 + 0x18]
	0x01E0719C CBZ X0, 0x1E075CC
	0x01E071A0 ADRP X9, 0x22F2000
	0x01E071A4 LDR W10, [X0 + 0x1C]
	0x01E071A8 LDR X8, [X0 + 0x10]
	0x01E071AC LDR X9, [X9 + 0xA18]
	0x01E071B0 ADD W10, W10, 0x1
	0x01E071B4 LDR X9, [X9]
	0x01E071B8 STR W10, [X0 + 0x1C]
	0x01E071BC CBZ X8, 0x1E075CC
	0x01E071C0 LDRSW X10, [X0 + 0x18]
	0x01E071C4 LDR W11, [X8 + 0x18]
	0x01E071C8 CMP W10, W11
	0x01E071CC B.CS 0x1E071E4
	0x01E071D0 ADD W9, W10, 0x1
	0x01E071D4 ADD X8, X8, X10, 0x3, LSL
	0x01E071D8 STR W9, [X0 + 0x18]
	0x01E071DC STR X27, [X8 + 0x20]
	0x01E071E0 B 0x1E071F8
	0x01E071E4 LDR X8, [X9 + 0x20]
	0x01E071E8 MOV X1, X27
	0x01E071EC LDR X8, [X8 + 0xC0]
	0x01E071F0 LDR X2, [X8 + 0x70]
	0x01E071F4 BL 0x301BF90
	0x01E071F8 ADRP X8, 0x22EC000
	0x01E071FC LDR X8, [X8 + 0x598]
	0x01E07200 LDR X0, [X8]
	0x01E07204 LDR W8, [X0 + 0xE0]
	0x01E07208 CBNZ W8, 0x1E07210
	0x01E0720C BL 0x1C16DFC
	0x01E07210 MOV X0, X21
	0x01E07214 MOV X1, X31
	0x01E07218 MOV X2, X31
	0x01E0721C BL 0x3C3883C
	0x01E07220 LDUR V0, [X31 + 0xD8]
	0x01E07224 LDR X8, [X31 + 0xE8]
	0x01E07228 ANDS W31, W0, 0x1
	0x01E0722C LDR X0, [X31 + 0x40]
	0x01E07230 CSEL X21, X27, X21, NE
	0x01E07234 STR V0, [X31 + 0x6]
	0x01E07238 STR X8, [X31 + 0x70]
	0x01E0723C CBZ X0, 0x1E075CC
	0x01E07240 LDR V0, [X31 + 0x6]
	0x01E07244 LDR X8, [X31 + 0x70]
	0x01E07248 ADRP X10, 0x22F2000
	0x01E0724C STR V0, [X31 + 0x10]
	0x01E07250 STR X8, [X31 + 0x110]
	0x01E07254 LDR W9, [X0 + 0x1C]
	0x01E07258 LDR X8, [X0 + 0x10]
	0x01E0725C LDR X10, [X10 + 0xA20]
	0x01E07260 ADD W9, W9, 0x1
	0x01E07264 LDR X10, [X10]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], D9
	003 Move [X31+88], D8
	004 Move [X31+96], X30
	005 Move [X31+104], X23
	006 Move [X31+112], X22
	007 Move [X31+120], X21
	008 Move [X31+128], X20
	009 Move [X31+136], X19
	010 Move X20, 0x25D3000
	011 Move X22, 0x22EE000
	012 Move W8, [X20+3487]
	013 Move X22, [X22+1432]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x22F3000
	020 Move X0, [X0+56]
	021 Call 0x1C17CF4
	022 Move X0, 0x22EE000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move X0, 0x22F4000
	026 Move X0, [X0+2384]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+3487], W8
	030 Move X0, [X22]
	031 Move X20, [X19+32]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X20
	037 Move X1, X31
	038 Move X2, X31
	039 Call Object.op_Inequality, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {339}
	044 Move X21, 0x22F3000
	045 Move X21, [X21+56]
	046 Move X0, [X21]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X21]
	052 Move X8, [X0+184]
	053 Move S0, 1
	054 Move V8, [X8+16]
	055 NotImplemented "Instruction FCMP not yet implemented."
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {63}
	059 Call 0x1C17DFC
	060 Move X8, [X21]
	061 Move X8, [X8+184]
	062 Move V8, [X8+16]
	063 Move X0, X31
	064 Call Time.get_deltaTime
	065 Move X8, -20037632
	066 Move X0, [X21]
	067 Move V1, [X8+3988]
	068 Move X8, [X0+184]
	069 Multiply S0, S0, S1
	070 Add S0, S8, S0
	071 Move S1, 1
	072 NotImplemented "Instruction FCMP not yet implemented."
	073 Move [X8+16], S0
	074 Move W9, [X0+224]
	075 Compare W9, 0
	076 JumpIfNotEqual {80}
	077 Call 0x1C17DFC
	078 Move X8, [X21]
	079 Move X8, [X8+184]
	080 Move W9, 0x3F800000
	081 Move [X8+16], W9
	082 Move X0, X31
	083 Call RenderSettings.get_subtractiveShadowColor
	084 Move X8, [X19+32]
	085 Compare X8, 0
	086 JumpIfEqual {349}
	087 Move X0, [X21]
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 Move W9, [X0+224]
	090 Compare W9, 0
	091 JumpIfNotEqual {104}
	092 Move [X31+48], V3
	093 Move [X31+56], V0
	094 Move [X31+16], V1
	095 Move [X31+24], V2
	096 Move [X31], V5
	097 Call 0x1C17DFC
	098 Move V5, [X31]
	099 Move V1, [X31+16]
	100 Move V2, [X31+32]
	101 Move V3, [X31+48]
	102 Move V0, [X31+4]
	103 Move X0, [X21]
	104 Move X8, [X0+184]
	105 Move V0.S[1], V1.S[0]
	106 Move S8, 1
	107 Move V0.S[2], V2.S[0]
	108 Move V4, [X8+16]
	109 Move S9, W31
	110 Move V0.S[3], V3.S[0]
	111 Subtract V1, V5, V0
	112 NotImplemented "Instruction FMIN not yet implemented."
	113 NotImplemented "Instruction FCMP not yet implemented."
	114 NotImplemented "Instruction FCSEL not yet implemented."
	115 NotImplemented "Instruction INVALID not yet implemented."
	116 Add V0, V0, V1
	117 Move S1, V0.S[1]
	118 Move S2, V0.S[2]
	119 Move S3, V0.S[3]
	120 Move X0, X31
	121 Call RenderSettings.set_subtractiveShadowColor, X0
	122 Move X0, X31
	123 Call RenderSettings.get_ambientLight
	124 Move X8, [X19+32]
	125 Compare X8, 0
	126 JumpIfEqual {349}
	127 Move X9, [X21]
	128 Move V0.S[1], V1.S[0]
	129 NotImplemented "Instruction LDUR not yet implemented."
	130 Move V0.S[2], V2.S[0]
	131 Move X9, [X9+184]
	132 Move V0.S[3], V3.S[0]
	133 Subtract V2, V4, V0
	134 Move X0, X31
	135 Move V1, [X9+16]
	136 NotImplemented "Instruction FMIN not yet implemented."
	137 NotImplemented "Instruction FCMP not yet implemented."
	138 NotImplemented "Instruction FCSEL not yet implemented."
	139 NotImplemented "Instruction INVALID not yet implemented."
	140 Add V0, V0, V1
	141 Move S1, V0.S[1]
	142 Move S2, V0.S[2]
	143 Move S3, V0.S[3]
	144 Call RenderSettings.set_ambientLight, X0
	145 Move X0, X31
	146 Call RenderSettings.get_fogColor
	147 Move X8, [X19+32]
	148 Compare X8, 0
	149 JumpIfEqual {349}
	150 Move X9, [X21]
	151 NotImplemented "Instruction LDUR not yet implemented."
	152 Move V0.S[1], V1.S[0]
	153 Move S8, 1
	154 Move X8, [X9+184]
	155 Move V0.S[2], V2.S[0]
	156 Move S9, W31
	157 Move V0.S[3], V3.S[0]
	158 Move V1, [X8+16]
	159 Subtract V2, V4, V0
	160 Move X0, X31
	161 NotImplemented "Instruction FMIN not yet implemented."
	162 NotImplemented "Instruction FCMP not yet implemented."
	163 NotImplemented "Instruction FCSEL not yet implemented."
	164 NotImplemented "Instruction INVALID not yet implemented."
	165 Add V0, V0, V1
	166 Move S1, V0.S[1]
	167 Move S2, V0.S[2]
	168 Move S3, V0.S[3]
	169 Call RenderSettings.set_fogColor, X0
	170 Move X0, X31
	171 Call RenderSettings.get_fogDensity
	172 Move X8, [X19+32]
	173 Compare X8, 0
	174 JumpIfEqual {349}
	175 Move X9, [X21]
	176 Move V2, [X8+88]
	177 Move X0, X31
	178 Move X9, [X9+184]
	179 Subtract S2, S2, S0
	180 Move V1, [X9+16]
	181 NotImplemented "Instruction FMIN not yet implemented."
	182 NotImplemented "Instruction FCMP not yet implemented."
	183 NotImplemented "Instruction FCSEL not yet implemented."
	184 Multiply S1, S2, S1
	185 Add S0, S0, S1
	186 Call RenderSettings.set_fogDensity, V0
	187 Move X0, X31
	188 Call RenderSettings.get_skybox
	189 Move X20, X0
	190 Move X0, X31
	191 Call RenderSettings.get_skybox
	192 Compare X0, 0
	193 JumpIfEqual {349}
	194 Move X23, 0x22F3000
	195 Move X23, [X23+2384]
	196 Move X2, X31
	197 Move X1, [X23]
	198 Call Material.GetColor, X0, X1
	199 Move X8, [X19+32]
	200 Compare X8, 0
	201 JumpIfEqual {349}
	202 Compare X20, 0
	203 JumpIfEqual {349}
	204 Move X9, [X21]
	205 Move V0.S[1], V1.S[0]
	206 Move V0.S[2], V2.S[0]
	207 NotImplemented "Instruction LDUR not yet implemented."
	208 Move X9, [X9+184]
	209 Move S4, 1
	210 Move S5, W31
	211 Move V0.S[3], V3.S[0]
	212 Move V2, [X9+16]
	213 Move X1, [X23]
	214 Subtract V1, V1, V0
	215 Move X0, X20
	216 NotImplemented "Instruction FMIN not yet implemented."
	217 NotImplemented "Instruction FCMP not yet implemented."
	218 NotImplemented "Instruction FCSEL not yet implemented."
	219 NotImplemented "Instruction INVALID not yet implemented."
	220 Add V0, V0, V1
	221 Move S1, V0.S[1]
	222 Move S2, V0.S[2]
	223 Move S3, V0.S[3]
	224 Move X2, X31
	225 Call Material.SetColor, X0, X1, X2
	226 Move X0, [X22]
	227 Move X20, [X19+40]
	228 Move W8, [X0+224]
	229 Compare W8, 0
	230 JumpIfNotEqual {232}
	231 Call 0x1C17DFC
	232 Move X0, X20
	233 Move X1, X31
	234 Move X2, X31
	235 Call Object.op_Inequality, X0, X1
	236 Move TEMP, X0
	237 And TEMP, TEMP, 1
	238 Compare TEMP, 1
	239 JumpIfNotEqual {309}
	240 Move X20, [X19+40]
	241 Compare X20, 0
	242 JumpIfEqual {349}
	243 Move X0, X20
	244 Move X1, X31
	245 Call Light.get_color, X0
	246 Move X8, [X19+32]
	247 Compare X8, 0
	248 JumpIfEqual {349}
	249 Move X0, [X21]
	250 NotImplemented "Instruction LDUR not yet implemented."
	251 Move W9, [X0+224]
	252 Compare W9, 0
	253 JumpIfNotEqual {266}
	254 Move [X31+48], V3
	255 Move [X31+56], V0
	256 Move [X31+16], V1
	257 Move [X31+24], V2
	258 Move [X31], V7
	259 Call 0x1C17DFC
	260 Move V7, [X31]
	261 Move V1, [X31+16]
	262 Move V2, [X31+32]
	263 Move V3, [X31+48]
	264 Move V0, [X31+4]
	265 Move X0, [X21]
	266 Move X8, [X0+184]
	267 Move V0.S[1], V1.S[0]
	268 Move S4, 1
	269 Move V0.S[2], V2.S[0]
	270 Move V5, [X8+16]
	271 Move S6, W31
	272 Move V0.S[3], V3.S[0]
	273 Subtract V3, V7, V0
	274 NotImplemented "Instruction FMIN not yet implemented."
	275 NotImplemented "Instruction FCMP not yet implemented."
	276 NotImplemented "Instruction FCSEL not yet implemented."
	277 NotImplemented "Instruction INVALID not yet implemented."
	278 Add V0, V0, V1
	279 Move S1, V0.S[1]
	280 Move S2, V0.S[2]
	281 Move S3, V0.S[3]
	282 Move X0, X20
	283 Move X1, X31
	284 Call Light.set_color, X0, X1
	285 Move X20, [X19+40]
	286 Compare X20, 0
	287 JumpIfEqual {349}
	288 Move X0, X20
	289 Move X1, X31
	290 Call Light.get_intensity, X0
	291 Move X8, [X19+32]
	292 Compare X8, 0
	293 JumpIfEqual {349}
	294 Move X9, [X21]
	295 Move V2, [X8+108]
	296 Move S3, 1
	297 Move S4, W31
	298 Move X9, [X9+184]
	299 Subtract S2, S2, S0
	300 Move X0, X20
	301 Move X1, X31
	302 Move V1, [X9+16]
	303 NotImplemented "Instruction FMIN not yet implemented."
	304 NotImplemented "Instruction FCMP not yet implemented."
	305 NotImplemented "Instruction FCSEL not yet implemented."
	306 Multiply S1, S2, S1
	307 Add S0, S0, S1
	308 Call Light.set_intensity, X0, V0
	309 Move X8, [X19+32]
	310 Compare X8, 0
	311 JumpIfEqual {349}
	312 Move X0, [X21]
	313 Move V8, [X19+48]
	314 Move V9, [X8+112]
	315 Move W9, [X0+224]
	316 Compare W9, 0
	317 JumpIfNotEqual {320}
	318 Call 0x1C17DFC
	319 Move X0, [X21]
	320 Move X8, [X0+184]
	321 Subtract S1, S9, S8
	322 Move X22, [X31+112]
	323 Move X21, [X31+120]
	324 Move X30, [X31+96]
	325 Move X23, [X31+104]
	326 Move V0, [X8+16]
	327 Move X1, X31
	328 Multiply S0, S1, S0
	329 Add S0, S8, S0
	330 Move [X19+48], S0
	331 Move W0, [X8]
	332 Move X20, [X31+128]
	333 Move X19, [X31+136]
	334 Move D9, [X31+80]
	335 Move D8, [X31+88]
	336 Add X31, X31, 144
	337 Call Shader.SetGlobalFloat, X0, V0
	338 Return 
	339 Move X20, [X31+128]
	340 Move X19, [X31+136]
	341 Move X22, [X31+112]
	342 Move X21, [X31+120]
	343 Move X30, [X31+96]
	344 Move X23, [X31+104]
	345 Move D9, [X31+80]
	346 Move D8, [X31+88]
	347 Add X31, X31, 144
	348 Return 
	349 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01E07268 STR W9, [X0 + 0x1C]
	0x01E0726C CBZ X8, 0x1E075CC

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x01E07270 LDRSW X9, [X0 + 0x18]
	0x01E07274 LDR W11, [X8 + 0x18]
	0x01E07278 CMP W9, W11
	0x01E0727C B.CS 0x1E072A4
	0x01E07280 ADD W10, W9, 0x1
	0x01E07284 STR W10, [X0 + 0x18]
	0x01E07288 LDR X10, [X31 + 0x110]
	0x01E0728C LDR V0, [X31 + 0x10]
	0x01E07290 MOVZ W11, 0x18
	0x01E07294 MADD X8, X9, X11, X8
	0x01E07298 STR X10, [X8 + 0x30]
	0x01E0729C STR V0, [X8 + 0x2]
	0x01E072A0 B 0x1E072C8
	0x01E072A4 LDR X8, [X10 + 0x20]
	0x01E072A8 LDR V0, [X31 + 0x10]
	0x01E072AC LDR X9, [X31 + 0x110]
	0x01E072B0 ADD X1, X31, 0x120
	0x01E072B4 LDR X8, [X8 + 0xC0]
	0x01E072B8 LDR X2, [X8 + 0x70]
	0x01E072BC STR V0, [X31 + 0x12]
	0x01E072C0 STR X9, [X31 + 0x130]
	0x01E072C4 BL 0x2F64F1C
	0x01E072C8 ADRP X8, 0x22F2000
	0x01E072CC LDR X8, [X8 + 0xA38]
	0x01E072D0 MOV X0, X24
	0x01E072D4 MOV X1, X29
	0x01E072D8 LDR X2, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x25D2000
	006 Move X21, 0x22F3000
	007 Move X19, 0x22F2000
	008 Move W8, [X20+3488]
	009 Move X21, [X21+2392]
	010 Move X19, [X19+56]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x22F2000
	016 Move X0, [X0+56]
	017 Call 0x1C17CF4
	018 Move X0, 0x22F3000
	019 Move X0, [X0+2392]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3488], W8
	023 Move X0, [X21]
	024 Move X1, X31
	025 Call Shader.PropertyToID, X0
	026 Move X8, [X19]
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X8, [X8+184]
	030 Move [X8], W0
	031 Move [X8+16], W31
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return 

