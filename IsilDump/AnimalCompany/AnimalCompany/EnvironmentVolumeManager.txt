Type: AnimalCompany.EnvironmentVolumeManager

Method: AnimalCompany.EnvironmentVolumeProfile get_currentProfile()

Disassembly:
	0x01CF4D18 FMUL S18, S5, S1
	0x01CF4D1C FMUL S19, S6, S2

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_currentProfile(AnimalCompany.EnvironmentVolumeProfile value)

Disassembly:
	0x01CF4D20 FMUL S20, S5, S0
	0x01CF4D24 FMUL S21, S6, S3

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.Void Awake()

Disassembly:
	0x01CF4D28 FMUL S22, S7, S2
	0x01CF4D2C FMUL S23, S4, S1
	0x01CF4D30 FMUL S24, S7, S1
	0x01CF4D34 FMUL S1, S6, S1
	0x01CF4D38 FMUL S6, S6, S0
	0x01CF4D3C FMUL S0, S7, S0
	0x01CF4D40 FMUL S7, S4, S2
	0x01CF4D44 FMUL S4, S4, S3
	0x01CF4D48 FMUL S3, S5, S3
	0x01CF4D4C FMUL S5, S5, S2
	0x01CF4D50 FSUB S2, S16, S17
	0x01CF4D54 FADD S16, S21, S22
	0x01CF4D58 FADD S3, S3, S24
	0x01CF4D5C FADD S0, S4, S0
	0x01CF4D60 FSUB S2, S2, S18
	0x01CF4D64 FADD S4, S20, S16
	0x01CF4D68 FADD S7, S7, S3
	0x01CF4D6C FADD S0, S1, S0
	0x01CF4D70 FSUB S3, S2, S19
	0x01CF4D74 FSUB S2, S4, S23
	0x01CF4D78 FSUB S1, S7, S6
	0x01CF4D7C FSUB S0, S0, S5
	0x01CF4D80 MOV X0, X29
	0x01CF4D84 MOV X1, X31
	0x01CF4D88 BL 0x3AA7878
	0x01CF4D8C MOV X0, X28
	0x01CF4D90 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2530000
	005 Move X19, 0x225B000
	006 Move W8, [X20+1760]
	007 Move X19, [X19+4080]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x225B000
	013 Move X0, [X0+4080]
	014 Call 0x1B6F7F0
	015 Move W8, 1
	016 Move [X20+1760], W8
	017 Move X0, X31
	018 Call RenderSettings.get_skybox
	019 Move X8, [X19]
	020 Move X19, X0
	021 Move X0, X8
	022 Call 0x1B6FA0C
	023 Move X1, X19
	024 Move X2, X31
	025 Move X20, X0
	026 Call Material..ctor, X0, X1
	027 Move X0, X20
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X1, X31
	031 Move X30, [X31+32]
	032 Call RenderSettings.set_skybox, X0
	033 Return 

Method: System.Void OnEnable()

Disassembly:
	0x01CF4D94 BL 0x3A9B084
	0x01CF4D98 CBZ X0, 0x1CF53B8
	0x01CF4D9C MOV X1, X31
	0x01CF4DA0 BL 0x3AA7658
	0x01CF4DA4 MOV X0, X26
	0x01CF4DA8 MOV X1, X31
	0x01CF4DAC MOV V12.16B, V0.16B
	0x01CF4DB0 MOV V9.16B, V1.16B
	0x01CF4DB4 MOV V10.16B, V2.16B
	0x01CF4DB8 BL 0x3A9B084
	0x01CF4DBC CBZ X0, 0x1CF53B8
	0x01CF4DC0 MOV X1, X31
	0x01CF4DC4 BL 0x3AA7658
	0x01CF4DC8 MOV X0, X27
	0x01CF4DCC MOV X1, X31
	0x01CF4DD0 MOV V13.16B, V0.16B
	0x01CF4DD4 STP S2, S1, [X31 + 0x48]
	0x01CF4DD8 BL 0x3A9B084
	0x01CF4DDC CBZ X0, 0x1CF53B8
	0x01CF4DE0 MOV X1, X31
	0x01CF4DE4 STP S9, S10, [X31 + 0x40]
	0x01CF4DE8 BL 0x3AA7658
	0x01CF4DEC MOV X0, X28
	0x01CF4DF0 MOV X1, X31
	0x01CF4DF4 MOV V14.16B, V0.16B
	0x01CF4DF8 MOV V15.16B, V1.16B
	0x01CF4DFC MOV V9.16B, V2.16B
	0x01CF4E00 BL 0x3A9B084
	0x01CF4E04 CBZ X0, 0x1CF53B8
	0x01CF4E08 MOV X1, X31
	0x01CF4E0C BL 0x3AA7658
	0x01CF4E10 MOV X0, X28
	0x01CF4E14 MOV X1, X31
	0x01CF4E18 MOV V10.16B, V0.16B
	0x01CF4E1C MOV V11.16B, V1.16B
	0x01CF4E20 MOV V8.16B, V2.16B
	0x01CF4E24 BL 0x3A9B084
	0x01CF4E28 CBZ X0, 0x1CF53B8
	0x01CF4E2C FSUB S0, S12, S13
	0x01CF4E30 STR S0, [X31 + 0x3C]
	0x01CF4E34 LDR V0, [X31 + 0x40]
	0x01CF4E38 LDR V1, [X31 + 0x4C]
	0x01CF4E3C MOV X1, X31
	0x01CF4E40 MOV X29, X0
	0x01CF4E44 FSUB S8, S9, S8
	0x01CF4E48 FSUB S12, S0, S1
	0x01CF4E4C LDP S0, S1, [X31 + 0x44]
	0x01CF4E50 FSUB S9, S15, S11
	0x01CF4E54 FSUB S10, S14, S10
	0x01CF4E58 FSUB S13, S0, S1
	0x01CF4E5C BL 0x3AA7658
	0x01CF4E60 LDR V3, [X31 + 0x3C]
	0x01CF4E64 FADD S4, S12, S9
	0x01CF4E68 FADD S5, S13, S8
	0x01CF4E6C FADD S1, S4, S1
	0x01CF4E70 FADD S3, S3, S10
	0x01CF4E74 FADD S0, S3, S0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2530000
	007 Move X21, 0x225C000
	008 Move W8, [X20+1761]
	009 Move X21, [X21+800]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x225C000
	016 Move X0, [X0+800]
	017 Call 0x1B6F7F0
	018 Move X0, 0x225A000
	019 Move X0, [X0+1144]
	020 Call 0x1B6F7F0
	021 Move W8, 1
	022 Move [X20+1761], W8
	023 Move X0, [X21]
	024 Move X22, 0x225A000
	025 Move W8, [X0+224]
	026 Move X22, [X22+1144]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1B6F8F8
	030 Move X0, [X21]
	031 Move X8, [X22]
	032 Move X9, [X0+184]
	033 Move W10, [X8+224]
	034 Move X20, [X9+8]
	035 Compare W10, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X8
	038 Call 0x1B6F8F8
	039 Move X0, X20
	040 Move X1, X31
	041 Move X2, X31
	042 Call Object.op_Equality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {61}
	047 Move X0, [X21]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {53}
	051 Call 0x1B6F8F8
	052 Move X0, [X21]
	053 Move X8, [X0+184]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move [X8+8], X19
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X30, [X31+48]
	060 Return 
	061 Move X0, [X22]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1B6F8F8
	066 Move X0, X19
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X1, X31
	072 Move X30, [X31+48]
	073 Call Object.Destroy, X0
	074 Return 

Method: System.Void SetEnvironmentProfile(AnimalCompany.EnvironmentVolumeProfile profile)

Disassembly:
	0x01CF4C4C BL 0x3A9B084
	0x01CF4C50 CBZ X0, 0x1CF53B8
	0x01CF4C54 MOV X1, X31
	0x01CF4C58 BL 0x3AA7AD0
	0x01CF4C5C MOV X0, X31
	0x01CF4C60 BL 0x3A92C2C
	0x01CF4C64 MOV X0, X28
	0x01CF4C68 MOV X1, X31
	0x01CF4C6C MOV V15.16B, V0.16B
	0x01CF4C70 MOV V14.16B, V1.16B
	0x01CF4C74 MOV V13.16B, V2.16B
	0x01CF4C78 MOV V8.16B, V3.16B
	0x01CF4C7C BL 0x3A9B084
	0x01CF4C80 MOV X29, X0
	0x01CF4C84 MOV X0, X28
	0x01CF4C88 MOV X1, X31
	0x01CF4C8C BL 0x3A9B084
	0x01CF4C90 CBZ X0, 0x1CF53B8
	0x01CF4C94 MOV X1, X31
	0x01CF4C98 BL 0x3AA5FBC
	0x01CF4C9C CBZ X29, 0x1CF53B8
	0x01CF4CA0 FMUL S4, S12, S15
	0x01CF4CA4 FMUL S5, S11, S8
	0x01CF4CA8 FMUL S16, S12, S14
	0x01CF4CAC FMUL S17, S10, S8
	0x01CF4CB0 FMUL S21, S11, S15
	0x01CF4CB4 FMUL S24, S12, S13
	0x01CF4CB8 FMUL S25, S12, S8
	0x01CF4CBC FMUL S26, S9, S8
	0x01CF4CC0 FMUL S6, S10, S13
	0x01CF4CC4 FMUL S18, S9, S15
	0x01CF4CC8 FMUL S20, S11, S14
	0x01CF4CCC FMUL S23, S10, S14
	0x01CF4CD0 FADD S4, S4, S5
	0x01CF4CD4 FADD S5, S16, S17
	0x01CF4CD8 FADD S16, S24, S26
	0x01CF4CDC FSUB S17, S25, S21
	0x01CF4CE0 FMUL S7, S9, S14
	0x01CF4CE4 FMUL S19, S11, S13
	0x01CF4CE8 FMUL S22, S10, S15
	0x01CF4CEC FMUL S27, S9, S13
	0x01CF4CF0 FADD S4, S6, S4
	0x01CF4CF4 FADD S5, S18, S5
	0x01CF4CF8 FADD S6, S20, S16
	0x01CF4CFC FSUB S16, S17, S23
	0x01CF4D00 FSUB S4, S4, S7
	0x01CF4D04 FSUB S5, S5, S19
	0x01CF4D08 FSUB S6, S6, S22
	0x01CF4D0C FSUB S7, S16, S27

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2530000
	006 Move X21, 0x225C000
	007 Move W8, [X20+1762]
	008 Move X21, [X21+800]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x225C000
	015 Move X0, [X0+800]
	016 Call 0x1B6F7F0
	017 Move X0, 0x225A000
	018 Move X0, [X0+1144]
	019 Call 0x1B6F7F0
	020 Move W8, 1
	021 Move [X20+1762], W8
	022 Move X0, [X21]
	023 Move X20, 0x225A000
	024 Move W8, [X0+224]
	025 Move X20, [X20+1144]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1B6F8F8
	029 Move X0, [X21]
	030 Move X8, [X20]
	031 Move X9, [X0+184]
	032 Move W10, [X8+224]
	033 Move X20, [X9+8]
	034 Compare W10, 0
	035 JumpIfNotEqual {38}
	036 Move X0, X8
	037 Call 0x1B6F8F8
	038 Move X0, X20
	039 Move X1, X31
	040 Move X2, X31
	041 Call Object.op_Equality, X0, X1
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {58}
	046 Move X0, [X21]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1B6F8F8
	051 Move X0, [X21]
	052 Move X8, [X0+184]
	053 Move X9, [X8+8]
	054 Compare X9, 0
	055 JumpIfEqual {63}
	056 Move [X9+32], X19
	057 Move [X8+16], W31
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Return 
	063 Call 0x1B6FA1C

Method: System.Void Update()

Disassembly:
	0x01CF4E78 FADD S2, S5, S2
	0x01CF4E7C MOV X0, X29
	0x01CF4E80 MOV X1, X31
	0x01CF4E84 BL 0x3AA76F8
	0x01CF4E88 ADD X8, X31, 0xB0
	0x01CF4E8C MOV X0, X28
	0x01CF4E90 MOV X1, X31
	0x01CF4E94 BL 0x1CFC4A8
	0x01CF4E98 LDR V0, [X31 + 0xB]
	0x01CF4E9C LDR X8, [X31 + 0xC0]
	0x01CF4EA0 STR V0, [X31 + 0x10]
	0x01CF4EA4 STR X8, [X31 + 0x110]
	0x01CF4EA8 STR V0, [X31 + 0xB]
	0x01CF4EAC STR X8, [X31 + 0xC0]
	0x01CF4EB0 CBZ X20, 0x1CF53B8
	0x01CF4EB4 LDR X3, [X20 + 0x30]
	0x01CF4EB8 LDR X8, [X27 + 0x48]
	0x01CF4EBC LDUR V0, [X27 + 0x38]
	0x01CF4EC0 LDR V1, [X31 + 0xB]
	0x01CF4EC4 LDR X9, [X31 + 0xC0]
	0x01CF4EC8 ADD X1, X31, 0x90
	0x01CF4ECC ADD X4, X31, 0x70
	0x01CF4ED0 MOV X0, X21
	0x01CF4ED4 MOV X2, X23
	0x01CF4ED8 STR X8, [X31 + 0x80]
	0x01CF4EDC STR V0, [X31 + 0x7]
	0x01CF4EE0 STR V1, [X31 + 0x9]
	0x01CF4EE4 STR X9, [X31 + 0xA0]
	0x01CF4EE8 BL 0x1CF5828
	0x01CF4EEC ADRP X29, 0x2259000
	0x01CF4EF0 LDR X29, [X29 + 0x478]
	0x01CF4EF4 TBNZ X0, 0x0, 0x1CF4F4C
	0x01CF4EF8 CMP W19, 0x4
	0x01CF4EFC B.HI 0x1CF5274
	0x01CF4F00 ADD W8, W25, W19
	0x01CF4F04 ADD W8, W8, 0x1
	0x01CF4F08 CMP W8, 0x32
	0x01CF4F0C B.GE 0x1CF5274
	0x01CF4F10 MOV X0, X28
	0x01CF4F14 MOV X1, X31
	0x01CF4F18 BL 0x3A9B0C0
	0x01CF4F1C LDR X8, [X29]
	0x01CF4F20 MOV X26, X0
	0x01CF4F24 LDR W9, [X8 + 0xE0]
	0x01CF4F28 CBNZ W9, 0x1CF4F34
	0x01CF4F2C MOV X0, X8
	0x01CF4F30 BL 0x1B6E8F8
	0x01CF4F34 MOV X0, X26
	0x01CF4F38 MOV X1, X31
	0x01CF4F3C ADD W19, W19, 0x1
	0x01CF4F40 BL 0x3AA16B0
	0x01CF4F44 TBNZ X22, 0x0, 0x1CF4B00
	0x01CF4F48 B 0x1CF523C
	0x01CF4F4C ADRP X8, 0x225C000
	0x01CF4F50 LDR X8, [X8 + 0x810]
	0x01CF4F54 MOV X0, X26
	0x01CF4F58 MOV X2, X31
	0x01CF4F5C LDR X1, [X8]
	0x01CF4F60 BL 0x3AA0D38
	0x01CF4F64 LDR X8, [X31 + 0x30]
	0x01CF4F68 LDR X0, [X8 + 0x20]
	0x01CF4F6C CBZ X0, 0x1CF53B8
	0x01CF4F70 ADRP X9, 0x225C000
	0x01CF4F74 LDR W10, [X0 + 0x1C]
	0x01CF4F78 LDR X8, [X0 + 0x10]
	0x01CF4F7C LDR X9, [X9 + 0x788]
	0x01CF4F80 ADD W10, W10, 0x1
	0x01CF4F84 LDR X9, [X9]
	0x01CF4F88 STR W10, [X0 + 0x1C]
	0x01CF4F8C CBZ X8, 0x1CF53B8
	0x01CF4F90 LDRSW X10, [X0 + 0x18]
	0x01CF4F94 LDR W11, [X8 + 0x18]
	0x01CF4F98 CMP W10, W11
	0x01CF4F9C B.CS 0x1CF4FB4
	0x01CF4FA0 ADD W9, W10, 0x1
	0x01CF4FA4 ADD X8, X8, X10, 0x3, LSL
	0x01CF4FA8 STR W9, [X0 + 0x18]
	0x01CF4FAC STR X28, [X8 + 0x20]
	0x01CF4FB0 B 0x1CF4FC8
	0x01CF4FB4 LDR X8, [X9 + 0x20]
	0x01CF4FB8 MOV X1, X28
	0x01CF4FBC LDR X8, [X8 + 0xC0]
	0x01CF4FC0 LDR X2, [X8 + 0x70]
	0x01CF4FC4 BL 0x2E46518
	0x01CF4FC8 LDR X0, [X29]
	0x01CF4FCC LDR W8, [X0 + 0xE0]
	0x01CF4FD0 CBNZ W8, 0x1CF4FD8
	0x01CF4FD4 BL 0x1B6E8F8
	0x01CF4FD8 LDR X22, [X31 + 0x10]
	0x01CF4FDC MOV X1, X31
	0x01CF4FE0 MOV X2, X31
	0x01CF4FE4 MOV X0, X22
	0x01CF4FE8 BL 0x3AA0AF0
	0x01CF4FEC LDR V0, [X31 + 0x10]
	0x01CF4FF0 LDR X8, [X31 + 0x110]
	0x01CF4FF4 ANDS W31, W0, 0x1
	0x01CF4FF8 CSEL X22, X28, X22, NE
	0x01CF4FFC STR X22, [X31 + 0x10]
	0x01CF5000 STR V0, [X31 + 0x5]
	0x01CF5004 STR X8, [X31 + 0x60]
	0x01CF5008 CBZ X23, 0x1CF53B8
	0x01CF500C LDR V0, [X31 + 0x5]
	0x01CF5010 LDR X8, [X31 + 0x60]
	0x01CF5014 ADRP X10, 0x225B000
	0x01CF5018 STR V0, [X31 + 0x1B]
	0x01CF501C STR X8, [X31 + 0x1C0]
	0x01CF5020 LDR W9, [X23 + 0x1C]
	0x01CF5024 LDR X8, [X23 + 0x10]
	0x01CF5028 LDR X10, [X10 + 0x790]
	0x01CF502C ADD W9, W9, 0x1
	0x01CF5030 LDR X10, [X10]
	0x01CF5034 STR W9, [X23 + 0x1C]
	0x01CF5038 CBZ X8, 0x1CF53B8
	0x01CF503C LDRSW X9, [X23 + 0x18]
	0x01CF5040 LDR W11, [X8 + 0x18]
	0x01CF5044 ADRP X22, 0x225B000
	0x01CF5048 LDR X22, [X22 + 0x780]
	0x01CF504C CMP W9, W11
	0x01CF5050 B.CS 0x1CF5078
	0x01CF5054 ADD W10, W9, 0x1
	0x01CF5058 STR W10, [X23 + 0x18]
	0x01CF505C LDR X10, [X31 + 0x1C0]
	0x01CF5060 LDR V0, [X31 + 0x1B]
	0x01CF5064 MOVZ W11, 0x18
	0x01CF5068 MADD X8, X9, X11, X8
	0x01CF506C STR X10, [X8 + 0x30]
	0x01CF5070 STR V0, [X8 + 0x2]
	0x01CF5074 B 0x1CF50A0
	0x01CF5078 LDR X8, [X10 + 0x20]
	0x01CF507C LDR V0, [X31 + 0x1B]
	0x01CF5080 LDR X9, [X31 + 0x1C0]
	0x01CF5084 ADD X1, X31, 0xB0
	0x01CF5088 LDR X8, [X8 + 0xC0]
	0x01CF508C MOV X0, X23
	0x01CF5090 LDR X2, [X8 + 0x70]
	0x01CF5094 STR V0, [X31 + 0xB]
	0x01CF5098 STR X9, [X31 + 0xC0]
	0x01CF509C BL 0x2D8D804
	0x01CF50A0 ADRP X8, 0x225B000
	0x01CF50A4 LDR X8, [X8 + 0x7B8]
	0x01CF50A8 MOV X0, X24
	0x01CF50AC MOV X1, X27
	0x01CF50B0 LDR X2, [X8]
	0x01CF50B4 BL 0x2E47D30
	0x01CF50B8 LDR X0, [X28 + 0x38]
	0x01CF50BC CBZ X0, 0x1CF53B8
	0x01CF50C0 ADRP X8, 0x225B000
	0x01CF50C4 LDR X8, [X8 + 0x7B0]
	0x01CF50C8 ADD W25, W25, W19
	0x01CF50CC LDR X1, [X8]
	0x01CF50D0 ADD X8, X31, 0xB0
	0x01CF50D4 BL 0x2E470E0
	0x01CF50D8 LDR V0, [X31 + 0xB]
	0x01CF50DC LDR X8, [X31 + 0xC0]
	0x01CF50E0 ADRP X19, 0x225B000
	0x01CF50E4 STR V0, [X31 + 0xE]
	0x01CF50E8 STR X8, [X31 + 0xF0]
	0x01CF50EC LDR X19, [X19 + 0x750]
	0x01CF50F0 LDR X1, [X19]
	0x01CF50F4 ADD X0, X31, 0xE0
	0x01CF50F8 BL 0x2A14F30
	0x01CF50FC TBZ X0, 0x0, 0x1CF51A4
	0x01CF5100 LDR X27, [X31 + 0xF0]
	0x01CF5104 LDR V0, [X31 + 0x10]
	0x01CF5108 LDR X8, [X31 + 0x110]
	0x01CF510C STR V0, [X31 + 0xB]
	0x01CF5110 STR X8, [X31 + 0xC0]
	0x01CF5114 CBZ X27, 0x1CF51D4
	0x01CF5118 LDR X8, [X31 + 0xC0]
	0x01CF511C LDR V0, [X31 + 0xB]
	0x01CF5120 STR X8, [X27 + 0x48]
	0x01CF5124 STUR V0, [X27 + 0x38]
	0x01CF5128 LDR X0, [X29]
	0x01CF512C LDR W8, [X0 + 0xE0]
	0x01CF5130 CBNZ W8, 0x1CF5138
	0x01CF5134 BL 0x1B6E8F8
	0x01CF5138 MOV X0, X27
	0x01CF513C MOV X1, X26
	0x01CF5140 MOV X2, X31
	0x01CF5144 BL 0x3A9D6EC
	0x01CF5148 TBZ X0, 0x0, 0x1CF50F0
	0x01CF514C LDR W10, [X24 + 0x1C]
	0x01CF5150 LDR X8, [X24 + 0x10]
	0x01CF5154 LDR X9, [X22]
	0x01CF5158 ADD W10, W10, 0x1
	0x01CF515C STR W10, [X24 + 0x1C]
	0x01CF5160 CBZ X8, 0x1CF51DC
	0x01CF5164 LDRSW X10, [X24 + 0x18]
	0x01CF5168 LDR W11, [X8 + 0x18]
	0x01CF516C CMP W10, W11
	0x01CF5170 B.CS 0x1CF5188
	0x01CF5174 ADD W9, W10, 0x1
	0x01CF5178 ADD X8, X8, X10, 0x3, LSL
	0x01CF517C STR W9, [X24 + 0x18]
	0x01CF5180 STR X27, [X8 + 0x20]
	0x01CF5184 B 0x1CF50F0
	0x01CF5188 LDR X8, [X9 + 0x20]
	0x01CF518C LDR X8, [X8 + 0xC0]
	0x01CF5190 LDR X2, [X8 + 0x70]
	0x01CF5194 MOV X0, X24
	0x01CF5198 MOV X1, X27
	0x01CF519C BL 0x2E46518
	0x01CF51A0 B 0x1CF50F0
	0x01CF51A4 ADRP X8, 0x225B000
	0x01CF51A8 LDR X8, [X8 + 0x730]
	0x01CF51AC ADD X0, X31, 0xE0
	0x01CF51B0 LDR X1, [X8]
	0x01CF51B4 BL 0x2A14F2C
	0x01CF51B8 LDP W8, W9, [X31 + 0x20]
	0x01CF51BC ADD W9, W9, 0x1
	0x01CF51C0 CMP W9, W8
	0x01CF51C4 CSET W22, LT
	0x01CF51C8 STR W9, [X31 + 0x24]
	0x01CF51CC B.NE 0x1CF4AE8
	0x01CF51D0 B 0x1CF523C
	0x01CF51D4 BL 0x1B6EA1C
	0x01CF51D8 B 0x1CF5408
	0x01CF51DC BL 0x1B6EA1C
	0x01CF51E0 B 0x1CF5408
	0x01CF51E4 B 0x1CF51F8
	0x01CF51E8 B 0x1CF51F8
	0x01CF51EC B 0x1CF51F8
	0x01CF51F0 B 0x1CF51F8
	0x01CF51F4 B 0x1CF51F8
	0x01CF51F8 MOV X19, X0
	0x01CF51FC CMP W1, 0x1
	0x01CF5200 B.NE 0x1CF5408
	0x01CF5204 MOV X0, X19
	0x01CF5208 BL 0x3D19840
	0x01CF520C LDR X27, [X0]
	0x01CF5210 BL 0x3D19850
	0x01CF5214 ADRP X8, 0x225B000
	0x01CF5218 LDR X8, [X8 + 0x730]
	0x01CF521C ADD X0, X31, 0xE0
	0x01CF5220 LDR X1, [X8]
	0x01CF5224 BL 0x2A14F2C
	0x01CF5228 ADRP X29, 0x2258000
	0x01CF522C LDR X29, [X29 + 0x478]
	0x01CF5230 CBZ X27, 0x1CF51B8
	0x01CF5234 MOV X0, X27
	0x01CF5238 BL 0x1B6EA14
	0x01CF523C MOV X0, X24
	0x01CF5240 MOV X1, X31
	0x01CF5244 BL 0x1CFC890
	0x01CF5248 CBZ X0, 0x1CF53B8
	0x01CF524C ADD X8, X31, 0x168
	0x01CF5250 LDUR W8, [X8 + 0x3]
	0x01CF5254 LDR W9, [X31 + 0x168]
	0x01CF5258 LDR X11, [X31 + 0x28]
	0x01CF525C MOVZ W10, 0x1
	0x01CF5260 STRB W10, [X11]
	0x01CF5264 STR W8, [X11 + 0x4]
	0x01CF5268 STUR W9, [X11 + 0x1]
	0x01CF526C STP X0, X23, [X11 + 0x8]
	0x01CF5270 B 0x1CF5380
	0x01CF5274 LDR X8, [X20 + 0x18]
	0x01CF5278 CBZ X8, 0x1CF53B8
	0x01CF527C LDRB W8, [X8 + 0x28]
	0x01CF5280 LDR X19, [X31 + 0x10]
	0x01CF5284 CBZ W8, 0x1CF5334
	0x01CF5288 LDR X0, [X29]
	0x01CF528C LDR W8, [X0 + 0xE0]
	0x01CF5290 CBNZ W8, 0x1CF5298
	0x01CF5294 BL 0x1B6E8F8
	0x01CF5298 MOV X0, X28
	0x01CF529C MOV X1, X19
	0x01CF52A0 MOV X2, X31
	0x01CF52A4 BL 0x3A9D6EC
	0x01CF52A8 TBZ X0, 0x0, 0x1CF52DC
	0x01CF52AC MOV X0, X28
	0x01CF52B0 MOV X1, X31
	0x01CF52B4 BL 0x3A9B0C0
	0x01CF52B8 LDR X8, [X29]
	0x01CF52BC MOV X21, X0
	0x01CF52C0 LDR W9, [X8 + 0xE0]
	0x01CF52C4 CBNZ W9, 0x1CF52D0
	0x01CF52C8 MOV X0, X8
	0x01CF52CC BL 0x1B6E8F8
	0x01CF52D0 MOV X0, X21
	0x01CF52D4 MOV X1, X31
	0x01CF52D8 BL 0x3AA16B0
	0x01CF52DC LDR X0, [X29]
	0x01CF52E0 LDR W8, [X0 + 0xE0]
	0x01CF52E4 CBNZ W8, 0x1CF52EC
	0x01CF52E8 BL 0x1B6E8F8
	0x01CF52EC MOV X0, X19
	0x01CF52F0 MOV X1, X31
	0x01CF52F4 MOV X2, X31
	0x01CF52F8 BL 0x3A9D6EC
	0x01CF52FC TBZ X0, 0x0, 0x1CF5334
	0x01CF5300 CBZ X19, 0x1CF53B8
	0x01CF5304 MOV X0, X19
	0x01CF5308 MOV X1, X31
	0x01CF530C BL 0x3A9B0C0
	0x01CF5310 LDR X8, [X29]
	0x01CF5314 MOV X21, X0
	0x01CF5318 LDR W9, [X8 + 0xE0]
	0x01CF531C CBNZ W9, 0x1CF5328
	0x01CF5320 MOV X0, X8
	0x01CF5324 BL 0x1B6E8F8
	0x01CF5328 MOV X0, X21

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], D9
	003 Move [X31+88], D8
	004 Move [X31+96], X30
	005 Move [X31+104], X23
	006 Move [X31+112], X22
	007 Move [X31+120], X21
	008 Move [X31+128], X20
	009 Move [X31+136], X19
	010 Move X20, 0x2530000
	011 Move X22, 0x225A000
	012 Move W8, [X20+1763]
	013 Move X22, [X22+1144]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x225C000
	020 Move X0, [X0+800]
	021 Call 0x1B6F7F0
	022 Move X0, 0x225A000
	023 Move X0, [X0+1144]
	024 Call 0x1B6F7F0
	025 Move X0, 0x225D000
	026 Move X0, [X0+1800]
	027 Call 0x1B6F7F0
	028 Move W8, 1
	029 Move [X20+1763], W8
	030 Move X0, [X22]
	031 Move X20, [X19+32]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1B6F8F8
	036 Move X0, X20
	037 Move X1, X31
	038 Move X2, X31
	039 Call Object.op_Inequality, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {339}
	044 Move X21, 0x225C000
	045 Move X21, [X21+800]
	046 Move X0, [X21]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1B6F8F8
	051 Move X0, [X21]
	052 Move X8, [X0+184]
	053 Move S0, 1
	054 Move V8, [X8+16]
	055 NotImplemented "Instruction FCMP not yet implemented."
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {63}
	059 Call 0x1B6F8F8
	060 Move X8, [X21]
	061 Move X8, [X8+184]
	062 Move V8, [X8+16]
	063 Move X0, X31
	064 Call Time.get_deltaTime
	065 Move X8, -19177472
	066 Move X0, [X21]
	067 Move V1, [X8+2456]
	068 Move X8, [X0+184]
	069 Multiply S0, S0, S1
	070 Add S0, S8, S0
	071 Move S1, 1
	072 NotImplemented "Instruction FCMP not yet implemented."
	073 Move [X8+16], S0
	074 Move W9, [X0+224]
	075 Compare W9, 0
	076 JumpIfNotEqual {80}
	077 Call 0x1B6F8F8
	078 Move X8, [X21]
	079 Move X8, [X8+184]
	080 Move W9, 0x3F800000
	081 Move [X8+16], W9
	082 Move X0, X31
	083 Call RenderSettings.get_subtractiveShadowColor
	084 Move X8, [X19+32]
	085 Compare X8, 0
	086 JumpIfEqual {349}
	087 Move X0, [X21]
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 Move W9, [X0+224]
	090 Compare W9, 0
	091 JumpIfNotEqual {104}
	092 Move [X31+48], V3
	093 Move [X31+56], V0
	094 Move [X31+16], V1
	095 Move [X31+24], V2
	096 Move [X31], V5
	097 Call 0x1B6F8F8
	098 Move V5, [X31]
	099 Move V1, [X31+16]
	100 Move V2, [X31+32]
	101 Move V3, [X31+48]
	102 Move V0, [X31+4]
	103 Move X0, [X21]
	104 Move X8, [X0+184]
	105 Move V0.S[1], V1.S[0]
	106 Move S8, 1
	107 Move V0.S[2], V2.S[0]
	108 Move V4, [X8+16]
	109 Move S9, W31
	110 Move V0.S[3], V3.S[0]
	111 Subtract V1, V5, V0
	112 NotImplemented "Instruction FMIN not yet implemented."
	113 NotImplemented "Instruction FCMP not yet implemented."
	114 NotImplemented "Instruction FCSEL not yet implemented."
	115 NotImplemented "Instruction INVALID not yet implemented."
	116 Add V0, V0, V1
	117 Move S1, V0.S[1]
	118 Move S2, V0.S[2]
	119 Move S3, V0.S[3]
	120 Move X0, X31
	121 Call RenderSettings.set_subtractiveShadowColor, X0
	122 Move X0, X31
	123 Call RenderSettings.get_ambientLight
	124 Move X8, [X19+32]
	125 Compare X8, 0
	126 JumpIfEqual {349}
	127 Move X9, [X21]
	128 Move V0.S[1], V1.S[0]
	129 NotImplemented "Instruction LDUR not yet implemented."
	130 Move V0.S[2], V2.S[0]
	131 Move X9, [X9+184]
	132 Move V0.S[3], V3.S[0]
	133 Subtract V2, V4, V0
	134 Move X0, X31
	135 Move V1, [X9+16]
	136 NotImplemented "Instruction FMIN not yet implemented."
	137 NotImplemented "Instruction FCMP not yet implemented."
	138 NotImplemented "Instruction FCSEL not yet implemented."
	139 NotImplemented "Instruction INVALID not yet implemented."
	140 Add V0, V0, V1
	141 Move S1, V0.S[1]
	142 Move S2, V0.S[2]
	143 Move S3, V0.S[3]
	144 Call RenderSettings.set_ambientLight, X0
	145 Move X0, X31
	146 Call RenderSettings.get_fogColor
	147 Move X8, [X19+32]
	148 Compare X8, 0
	149 JumpIfEqual {349}
	150 Move X9, [X21]
	151 NotImplemented "Instruction LDUR not yet implemented."
	152 Move V0.S[1], V1.S[0]
	153 Move S8, 1
	154 Move X8, [X9+184]
	155 Move V0.S[2], V2.S[0]
	156 Move S9, W31
	157 Move V0.S[3], V3.S[0]
	158 Move V1, [X8+16]
	159 Subtract V2, V4, V0
	160 Move X0, X31
	161 NotImplemented "Instruction FMIN not yet implemented."
	162 NotImplemented "Instruction FCMP not yet implemented."
	163 NotImplemented "Instruction FCSEL not yet implemented."
	164 NotImplemented "Instruction INVALID not yet implemented."
	165 Add V0, V0, V1
	166 Move S1, V0.S[1]
	167 Move S2, V0.S[2]
	168 Move S3, V0.S[3]
	169 Call RenderSettings.set_fogColor, X0
	170 Move X0, X31
	171 Call RenderSettings.get_fogDensity
	172 Move X8, [X19+32]
	173 Compare X8, 0
	174 JumpIfEqual {349}
	175 Move X9, [X21]
	176 Move V2, [X8+88]
	177 Move X0, X31
	178 Move X9, [X9+184]
	179 Subtract S2, S2, S0
	180 Move V1, [X9+16]
	181 NotImplemented "Instruction FMIN not yet implemented."
	182 NotImplemented "Instruction FCMP not yet implemented."
	183 NotImplemented "Instruction FCSEL not yet implemented."
	184 Multiply S1, S2, S1
	185 Add S0, S0, S1
	186 Call RenderSettings.set_fogDensity, V0
	187 Move X0, X31
	188 Call RenderSettings.get_skybox
	189 Move X20, X0
	190 Move X0, X31
	191 Call RenderSettings.get_skybox
	192 Compare X0, 0
	193 JumpIfEqual {349}
	194 Move X23, 0x225C000
	195 Move X23, [X23+1800]
	196 Move X2, X31
	197 Move X1, [X23]
	198 Call Material.GetColor, X0, X1
	199 Move X8, [X19+32]
	200 Compare X8, 0
	201 JumpIfEqual {349}
	202 Compare X20, 0
	203 JumpIfEqual {349}
	204 Move X9, [X21]
	205 Move V0.S[1], V1.S[0]
	206 Move V0.S[2], V2.S[0]
	207 NotImplemented "Instruction LDUR not yet implemented."
	208 Move X9, [X9+184]
	209 Move S4, 1
	210 Move S5, W31
	211 Move V0.S[3], V3.S[0]
	212 Move V2, [X9+16]
	213 Move X1, [X23]
	214 Subtract V1, V1, V0
	215 Move X0, X20
	216 NotImplemented "Instruction FMIN not yet implemented."
	217 NotImplemented "Instruction FCMP not yet implemented."
	218 NotImplemented "Instruction FCSEL not yet implemented."
	219 NotImplemented "Instruction INVALID not yet implemented."
	220 Add V0, V0, V1
	221 Move S1, V0.S[1]
	222 Move S2, V0.S[2]
	223 Move S3, V0.S[3]
	224 Move X2, X31
	225 Call Material.SetColor, X0, X1, X2
	226 Move X0, [X22]
	227 Move X20, [X19+40]
	228 Move W8, [X0+224]
	229 Compare W8, 0
	230 JumpIfNotEqual {232}
	231 Call 0x1B6F8F8
	232 Move X0, X20
	233 Move X1, X31
	234 Move X2, X31
	235 Call Object.op_Inequality, X0, X1
	236 Move TEMP, X0
	237 And TEMP, TEMP, 1
	238 Compare TEMP, 1
	239 JumpIfNotEqual {309}
	240 Move X20, [X19+40]
	241 Compare X20, 0
	242 JumpIfEqual {349}
	243 Move X0, X20
	244 Move X1, X31
	245 Call Light.get_color, X0
	246 Move X8, [X19+32]
	247 Compare X8, 0
	248 JumpIfEqual {349}
	249 Move X0, [X21]
	250 NotImplemented "Instruction LDUR not yet implemented."
	251 Move W9, [X0+224]
	252 Compare W9, 0
	253 JumpIfNotEqual {266}
	254 Move [X31+48], V3
	255 Move [X31+56], V0
	256 Move [X31+16], V1
	257 Move [X31+24], V2
	258 Move [X31], V7
	259 Call 0x1B6F8F8
	260 Move V7, [X31]
	261 Move V1, [X31+16]
	262 Move V2, [X31+32]
	263 Move V3, [X31+48]
	264 Move V0, [X31+4]
	265 Move X0, [X21]
	266 Move X8, [X0+184]
	267 Move V0.S[1], V1.S[0]
	268 Move S4, 1
	269 Move V0.S[2], V2.S[0]
	270 Move V5, [X8+16]
	271 Move S6, W31
	272 Move V0.S[3], V3.S[0]
	273 Subtract V3, V7, V0
	274 NotImplemented "Instruction FMIN not yet implemented."
	275 NotImplemented "Instruction FCMP not yet implemented."
	276 NotImplemented "Instruction FCSEL not yet implemented."
	277 NotImplemented "Instruction INVALID not yet implemented."
	278 Add V0, V0, V1
	279 Move S1, V0.S[1]
	280 Move S2, V0.S[2]
	281 Move S3, V0.S[3]
	282 Move X0, X20
	283 Move X1, X31
	284 Call Light.set_color, X0, X1
	285 Move X20, [X19+40]
	286 Compare X20, 0
	287 JumpIfEqual {349}
	288 Move X0, X20
	289 Move X1, X31
	290 Call Light.get_intensity, X0
	291 Move X8, [X19+32]
	292 Compare X8, 0
	293 JumpIfEqual {349}
	294 Move X9, [X21]
	295 Move V2, [X8+108]
	296 Move S3, 1
	297 Move S4, W31
	298 Move X9, [X9+184]
	299 Subtract S2, S2, S0
	300 Move X0, X20
	301 Move X1, X31
	302 Move V1, [X9+16]
	303 NotImplemented "Instruction FMIN not yet implemented."
	304 NotImplemented "Instruction FCMP not yet implemented."
	305 NotImplemented "Instruction FCSEL not yet implemented."
	306 Multiply S1, S2, S1
	307 Add S0, S0, S1
	308 Call Light.set_intensity, X0, V0
	309 Move X8, [X19+32]
	310 Compare X8, 0
	311 JumpIfEqual {349}
	312 Move X0, [X21]
	313 Move V8, [X19+48]
	314 Move V9, [X8+112]
	315 Move W9, [X0+224]
	316 Compare W9, 0
	317 JumpIfNotEqual {320}
	318 Call 0x1B6F8F8
	319 Move X0, [X21]
	320 Move X8, [X0+184]
	321 Subtract S1, S9, S8
	322 Move X22, [X31+112]
	323 Move X21, [X31+120]
	324 Move X30, [X31+96]
	325 Move X23, [X31+104]
	326 Move V0, [X8+16]
	327 Move X1, X31
	328 Multiply S0, S1, S0
	329 Add S0, S8, S0
	330 Move [X19+48], S0
	331 Move W0, [X8]
	332 Move X20, [X31+128]
	333 Move X19, [X31+136]
	334 Move D9, [X31+80]
	335 Move D8, [X31+88]
	336 Add X31, X31, 144
	337 Call Shader.SetGlobalFloat, X0, V0
	338 Return 
	339 Move X20, [X31+128]
	340 Move X19, [X31+136]
	341 Move X22, [X31+112]
	342 Move X21, [X31+120]
	343 Move X30, [X31+96]
	344 Move X23, [X31+104]
	345 Move D9, [X31+80]
	346 Move D8, [X31+88]
	347 Add X31, X31, 144
	348 Return 
	349 Call 0x1B6FA1C

Method: System.Void .ctor()

Disassembly:
	0x01CF532C MOV X1, X31
	0x01CF5330 BL 0x3AA16B0

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x01CF5334 LDR X8, [X20 + 0x18]
	0x01CF5338 CBZ X8, 0x1CF53B8
	0x01CF533C LDRB W8, [X8 + 0x28]
	0x01CF5340 CBNZ W8, 0x1CF5360
	0x01CF5344 LDR X0, [X20 + 0x30]
	0x01CF5348 CBZ X0, 0x1CF53B8
	0x01CF534C ADRP X8, 0x225B000
	0x01CF5350 LDR X8, [X8 + 0x778]
	0x01CF5354 MOV X1, X23
	0x01CF5358 LDR X2, [X8]
	0x01CF535C BL 0x2D8DA88
	0x01CF5360 ADD X8, X31, 0x168
	0x01CF5364 LDUR W8, [X8 + 0x3]
	0x01CF5368 LDR W9, [X31 + 0x168]
	0x01CF536C LDR X11, [X31 + 0x28]
	0x01CF5370 STRB W31, [X11]
	0x01CF5374 STR W8, [X11 + 0x4]
	0x01CF5378 STUR W9, [X11 + 0x1]
	0x01CF537C STP X31, X31, [X11 + 0x8]
	0x01CF5380 LDR X8, [X31 + 0x30]
	0x01CF5384 STR X8, [X11 + 0x18]
	0x01CF5388 ADD X31, X31, 0x1D0
	0x01CF538C LDP X20, X19, [X31 + 0x90]
	0x01CF5390 LDP X22, X21, [X31 + 0x80]
	0x01CF5394 LDP X24, X23, [X31 + 0x70]
	0x01CF5398 LDP X26, X25, [X31 + 0x60]
	0x01CF539C LDP X28, X27, [X31 + 0x50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x252F000
	006 Move X21, 0x225C000
	007 Move X19, 0x225B000
	008 Move W8, [X20+1764]
	009 Move X21, [X21+1808]
	010 Move X19, [X19+800]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x225B000
	016 Move X0, [X0+800]
	017 Call 0x1B6F7F0
	018 Move X0, 0x225C000
	019 Move X0, [X0+1808]
	020 Call 0x1B6F7F0
	021 Move W8, 1
	022 Move [X20+1764], W8
	023 Move X0, [X21]
	024 Move X1, X31
	025 Call Shader.PropertyToID, X0
	026 Move X8, [X19]
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X8, [X8+184]
	030 Move [X8], W0
	031 Move [X8+16], W31
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return 

