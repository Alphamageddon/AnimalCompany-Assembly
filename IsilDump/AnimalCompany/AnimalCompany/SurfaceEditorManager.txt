Type: AnimalCompany.SurfaceEditorManager

Method: System.Void AddSurfaceComponent(AnimalCompany.SurfaceComponent surfaceComponent)

Disassembly:
	0x01E0473C MOV W8, W0
	0x01E04740 LDR X0, [X21]
	0x01E04744 LDR V0, [X31 + 0x14]
	0x01E04748 FMOV S1, W31
	0x01E0474C ANDS W31, W8, 0x1
	0x01E04750 LDR W9, [X0 + 0xE0]
	0x01E04754 FADD S0, S0, S1
	0x01E04758 FCSEL S8, S0, S1, NE
	0x01E0475C CBNZ W9, 0x1E04768
	0x01E04760 BL 0x1C16DFC
	0x01E04764 LDR X0, [X21]
	0x01E04768 LDR X8, [X0 + 0xB8]
	0x01E0476C ADD X0, X23, 0x68
	0x01E04770 LDR X1, [X8 + 0x88]
	0x01E04774 ADD X2, X31, 0x8
	0x01E04778 MOV X3, X31
	0x01E0477C BL 0x3E643E0
	0x01E04780 LDR V0, [X31 + 0xC]
	0x01E04784 LDR X8, [X23 + 0x48]
	0x01E04788 ANDS W31, W0, 0x1
	0x01E0478C FADD S0, S8, S0
	0x01E04790 FCSEL S10, S0, S8, NE
	0x01E04794 CBZ X8, 0x1E04884
	0x01E04798 LDR X1, [X20]
	0x01E0479C MOV X0, X8
	0x01E047A0 BL 0x21F5D8C
	0x01E047A4 LDR X20, [X23 + 0x30]
	0x01E047A8 CBZ X20, 0x1E04888
	0x01E047AC MOV V8.16B, V0.16B
	0x01E047B0 MOV X0, X20
	0x01E047B4 MOV X1, X31
	0x01E047B8 BL 0x3E3F670
	0x01E047BC MOV V9.16B, V0.16B
	0x01E047C0 MOV X0, X31
	0x01E047C4 BL 0x3C3C714
	0x01E047C8 ADRP X8, 0xFFFFFFFFFECE6000
	0x01E047CC LDR V1, [X8 + 0xBC]
	0x01E047D0 FADD S2, S10, S8
	0x01E047D4 FMUL S1, S2, S1
	0x01E047D8 FMUL S0, S1, S0
	0x01E047DC FADD S0, S9, S0
	0x01E047E0 MOV X0, X20
	0x01E047E4 MOV X1, X31
	0x01E047E8 BL 0x3E3F7CC
	0x01E047EC LDR V0, [X19 + 0x30]
	0x01E047F0 FMOV S1, 1
	0x01E047F4 FMIN S1, S0, S1
	0x01E047F8 FCMP S0, 0x0
	0x01E047FC FMOV S0, W31
	0x01E04800 FCSEL S0, S1, S0, PL
	0x01E04804 STR S0, [X19 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x25D5000
	006 Move X20, 0x22F6000
	007 Move W8, [X21+3459]
	008 Move X20, [X20+1984]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x22F6000
	015 Move X0, [X0+2072]
	016 Call 0x1C17CF4
	017 Move X0, 0x22F6000
	018 Move X0, [X0+1984]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3459], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X0, [X8]
	030 Compare X0, 0
	031 JumpIfEqual {63}
	032 Move X9, 0x22F6000
	033 Move X9, [X9+2072]
	034 Move W10, [X0+28]
	035 Move X8, [X0+16]
	036 Move X9, [X9]
	037 Add W10, W10, 1
	038 Move [X0+28], W10
	039 Compare X8, 0
	040 JumpIfEqual {63}
	041 NotImplemented "Instruction LDRSW not yet implemented."
	042 Move W11, [X8+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Add W9, W10, 1
	045 Add X8, X8, X10
	046 Move [X0+24], W9
	047 Move [X8+32], X19
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Return 
	053 Move X8, [X9+32]
	054 Move X1, X19
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X8, [X8+192]
	058 Move X2, [X8+112]
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 Call List`1<Object>.AddWithResize, X0, X1
	062 Return 
	063 Call 0x1C17F20

Method: System.Void RemoveSurfaceComponent(AnimalCompany.SurfaceComponent surfaceComponent)

Disassembly:
	0x01E04808 LDR X0, [X23 + 0x40]
	0x01E0480C CBZ X0, 0x1E0488C
	0x01E04810 MOV X1, X31
	0x01E04814 BL 0x3CE013C
	0x01E04818 MOVZ W0, 0x1
	0x01E0481C STR X31, [X19 + 0x18]
	0x01E04820 STR W0, [X19 + 0x10]
	0x01E04824 LDP X20, X19, [X31 + 0x80]
	0x01E04828 LDP X22, X21, [X31 + 0x70]
	0x01E0482C LDP X24, X23, [X31 + 0x60]
	0x01E04830 LDP X26, X25, [X31 + 0x50]
	0x01E04834 LDP X28, X27, [X31 + 0x40]
	0x01E04838 LDR X30, [X31 + 0x38]
	0x01E0483C LDP D9, D8, [X31 + 0x28]
	0x01E04840 LDR V10, [X31 + 0x20]
	0x01E04844 ADD X31, X31, 0x90
	0x01E04848 RET
	0x01E0484C BL 0x1C16F28
	0x01E04850 BL 0x1C16F20
	0x01E04854 BL 0x1C16F20
	0x01E04858 BL 0x1C16F20
	0x01E0485C BL 0x1C16F20
	0x01E04860 BL 0x1C16F20
	0x01E04864 BL 0x1C16F20
	0x01E04868 BL 0x1C16F20
	0x01E0486C BL 0x1C16F20
	0x01E04870 BL 0x1C16F20
	0x01E04874 BL 0x1C16F20
	0x01E04878 BL 0x1C16F20
	0x01E0487C BL 0x1C16F20
	0x01E04880 BL 0x1C16F20
	0x01E04884 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x25D5000
	006 Move X20, 0x22F6000
	007 Move W8, [X21+3460]
	008 Move X20, [X20+1984]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x22F6000
	015 Move X0, [X0+2080]
	016 Call 0x1C17CF4
	017 Move X0, 0x22F6000
	018 Move X0, [X0+1984]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3460], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X0, [X8]
	030 Compare X0, 0
	031 JumpIfEqual {42}
	032 Move X8, 0x22F6000
	033 Move X8, [X8+2080]
	034 Move X1, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X2, [X8]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Call List`1<Object>.Remove, X0, X1
	041 Return 
	042 Call 0x1C17F20

Method: System.Void UpdateSurfaceComponents()

Disassembly:
	0x01E042F0 LDR W8, [X19 + 0x30]
	0x01E042F4 ADD W8, W8, 0x1
	0x01E042F8 STR W8, [X19 + 0x30]
	0x01E042FC LDR X9, [X19 + 0x28]
	0x01E04300 CBZ X9, 0x1E042E4
	0x01E04304 LDR W9, [X9 + 0x18]
	0x01E04308 CMP W8, W9
	0x01E0430C B.LT 0x1E04244
	0x01E04310 CBZ X23, 0x1E042E4
	0x01E04314 LDR X0, [X23 + 0x28]
	0x01E04318 CBZ X0, 0x1E042E4
	0x01E0431C MOV X1, X31
	0x01E04320 BL 0x3C32ECC
	0x01E04324 CBZ X0, 0x1E042E4
	0x01E04328 MOV W1, W31
	0x01E0432C MOV X2, X31
	0x01E04330 BL 0x3C357B4
	0x01E04334 MOV W0, W31
	0x01E04338 B 0x1E043A0
	0x01E0433C LDR X0, [X23 + 0x20]
	0x01E04340 CBZ X0, 0x1E042E4
	0x01E04344 LDR X2, [X24]
	0x01E04348 MOV W1, W22
	0x01E0434C BL 0x301BCCC
	0x01E04350 STR X0, [X20 + 0x10]
	0x01E04354 CBZ X0, 0x1E042F0
	0x01E04358 ADRP X8, 0x22EF000
	0x01E0435C LDR X8, [X8 + 0x958]
	0x01E04360 LDR X0, [X8]
	0x01E04364 BL 0x1C16F10
	0x01E04368 ADRP X8, 0x22F5000
	0x01E0436C LDR X8, [X8 + 0x8A8]
	0x01E04370 MOV X1, X20
	0x01E04374 MOV X3, X31
	0x01E04378 MOV X21, X0
	0x01E0437C LDR X2, [X8]
	0x01E04380 BL 0x35BC6F0
	0x01E04384 MOV X0, X21
	0x01E04388 MOV W1, W31
	0x01E0438C MOV X2, X31
	0x01E04390 BL 0x35BBFC4
	0x01E04394 STR X0, [X19 + 0x18]
	0x01E04398 MOVZ W0, 0x1
	0x01E0439C STR W0, [X19 + 0x10]
	0x01E043A0 LDP X20, X19, [X31 + 0x30]
	0x01E043A4 LDP X22, X21, [X31 + 0x20]
	0x01E043A8 LDP X24, X23, [X31 + 0x10]
	0x01E043AC LDR X30, [X31], #0x40
	0x01E043B0 RET
	0x01E043B4 BL 0x1C16F28
	0x01E043B8 LDR X0, [X0 + 0x18]
	0x01E043BC RET
	0x01E043C0 STP X30, X19, [X31 - 0x10]!
	0x01E043C4 ADRP X0, 0x22EF000
	0x01E043C8 LDR X0, [X0 + 0xB40]
	0x01E043CC BL 0x1C16D08
	0x01E043D0 BL 0x1C16F10
	0x01E043D4 MOV X1, X31
	0x01E043D8 MOV X19, X0
	0x01E043DC BL 0x3380310
	0x01E043E0 ADRP X0, 0x22F5000
	0x01E043E4 LDR X0, [X0 + 0x8B8]
	0x01E043E8 BL 0x1C16D08
	0x01E043EC MOV X1, X0
	0x01E043F0 MOV X0, X19
	0x01E043F4 BL 0x1C16DEC
	0x01E043F8 LDR X0, [X0 + 0x18]
	0x01E043FC RET
	0x01E04400 RET
	0x01E04404 SUB X31, X31, 0x90
	0x01E04408 STR D10, [X31 + 0x20]
	0x01E0440C STP D9, D8, [X31 + 0x28]
	0x01E04410 STR X30, [X31 + 0x38]
	0x01E04414 STP X28, X27, [X31 + 0x40]
	0x01E04418 STP X26, X25, [X31 + 0x50]
	0x01E0441C STP X24, X23, [X31 + 0x60]
	0x01E04420 STP X22, X21, [X31 + 0x70]
	0x01E04424 STP X20, X19, [X31 + 0x80]
	0x01E04428 ADRP X20, 0x25D4000
	0x01E0442C LDRB W8, [X20 + 0xD8E]
	0x01E04430 MOV X19, X0
	0x01E04434 TBNZ X8, 0x0, 0x1E04464
	0x01E04438 ADRP X0, 0x22F4000
	0x01E0443C LDR X0, [X0 + 0x158]
	0x01E04440 BL 0x1C16CF4
	0x01E04444 ADRP X0, 0x22F5000
	0x01E04448 LDR X0, [X0 + 0x8C0]
	0x01E0444C BL 0x1C16CF4
	0x01E04450 ADRP X0, 0x22F5000
	0x01E04454 LDR X0, [X0 + 0x8C8]
	0x01E04458 BL 0x1C16CF4
	0x01E0445C MOVZ W8, 0x1
	0x01E04460 STRB W8, [X20 + 0xD8E]
	0x01E04464 STRB W31, [X31 + 0x1C]
	0x01E04468 STRB W31, [X31 + 0x18]
	0x01E0446C STP X31, X31, [X31 + 0x8]
	0x01E04470 LDR W8, [X19 + 0x10]
	0x01E04474 CMP W8, 0x2
	0x01E04478 B.EQ 0x1E0464C
	0x01E0447C LDR X23, [X19 + 0x28]
	0x01E04480 CMP W8, 0x1
	0x01E04484 B.EQ 0x1E04528
	0x01E04488 MOV W0, W31
	0x01E0448C CBNZ W8, 0x1E04824
	0x01E04490 LDR X8, [X19 + 0x20]
	0x01E04494 MOVN W9, 0x0
	0x01E04498 STR W9, [X19 + 0x10]
	0x01E0449C STR W31, [X19 + 0x30]
	0x01E044A0 CBZ X8, 0x1E04854
	0x01E044A4 LDR X0, [X8 + 0x20]
	0x01E044A8 CBZ X0, 0x1E04858

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X20, 0x25D5000
	008 Move X19, 0x22F6000
	009 Move W8, [X20+3461]
	010 Move X19, [X19+1984]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0x22F6000
	016 Move X0, [X0+1992]
	017 Call 0x1C17CF4
	018 Move X0, 0x22F6000
	019 Move X0, [X0+2000]
	020 Call 0x1C17CF4
	021 Move X0, 0x22F6000
	022 Move X0, [X0+2008]
	023 Call 0x1C17CF4
	024 Move X0, 0x22F6000
	025 Move X0, [X0+2016]
	026 Call 0x1C17CF4
	027 Move X0, 0x22F0000
	028 Move X0, [X0+1432]
	029 Call 0x1C17CF4
	030 Move X0, 0x22F6000
	031 Move X0, [X0+1984]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+3461], W8
	035 Move X0, [X19]
	036 Move [X31+8], X31
	037 Move [X31+16], X31
	038 Move [X31+24], X31
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X19]
	044 Move X8, [X0+184]
	045 Move X0, [X8]
	046 Compare X0, 0
	047 JumpIfEqual {95}
	048 Move X8, 0x22F6000
	049 Move X8, [X8+2016]
	050 Move X21, 0x22F6000
	051 Move X22, 0x22F0000
	052 Move X20, 0x22F6000
	053 Move X1, [X8]
	054 Move X21, [X21+2000]
	055 Move X22, [X22+1432]
	056 Move X20, [X20+1992]
	057 Add X8, X31, 8
	058 Call List`1<Object>.GetEnumerator, X0
	059 Move X1, [X21]
	060 Add X0, X31, 8
	061 Call Enumerator<Object>.MoveNext, X0
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {84}
	066 Move X0, [X22]
	067 Move X19, [X31+24]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X0, X19
	073 Move X1, X31
	074 Move X2, X31
	075 Call Object.op_Equality, X0, X1
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {59}
	080 Compare X19, 0
	081 JumpIfEqual {94}
	082 Move X0, X19
	083 Call SurfaceComponent.ApplySurface, X0
	084 Move X1, [X20]
	085 Add X0, X31, 8
	086 Call Enumerator<Object>.Dispose, X0
	087 Move X20, [X31+64]
	088 Move X19, [X31+72]
	089 Move X22, [X31+48]
	090 Move X21, [X31+56]
	091 Move X30, [X31+32]
	092 Add X31, X31, 80
	093 Return 
	094 Call 0x1C17F20
	095 Call 0x1C17F20
	096 Move X19, X0
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X0, X19
	099 Call 0x3EB2AD0
	100 Move X20, [X0]
	101 Call 0x3EB2AE0
	102 Move X8, 0x22F6000
	103 Move X8, [X8+1992]
	104 Add X0, X31, 8
	105 Move X1, [X8]
	106 Call Enumerator<Object>.Dispose, X0
	107 Compare X20, 0
	108 JumpIfEqual {87}
	109 Move X0, X20
	110 Call 0x1C17F18
	111 Move X20, X31
	112 Move X19, X0
	113 Move X8, 0x22F6000
	114 Move X8, [X8+1992]
	115 Move X1, [X8]
	116 Add X0, X31, 8
	117 Call Enumerator<Object>.Dispose, X0
	118 Compare X20, 0
	119 JumpIfNotEqual {122}
	120 Move X0, X19
	121 Call 0x1D2D690
	122 Move X0, X20
	123 Call 0x1C17F18
	124 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x01E04888 BL 0x1C16F20
	0x01E0488C BL 0x1C16F20
	0x01E04890 B 0x1E049C4
	0x01E04894 B 0x1E049C4
	0x01E04898 B 0x1E049C4
	0x01E0489C B 0x1E049C4
	0x01E048A0 B 0x1E049C4
	0x01E048A4 B 0x1E049C4
	0x01E048A8 B 0x1E049C4
	0x01E048AC B 0x1E049C4
	0x01E048B0 B 0x1E049C4
	0x01E048B4 B 0x1E049C4
	0x01E048B8 B 0x1E049C4
	0x01E048BC B 0x1E048F8
	0x01E048C0 B 0x1E048F8
	0x01E048C4 B 0x1E048F8
	0x01E048C8 B 0x1E049C4
	0x01E048CC B 0x1E049C4
	0x01E048D0 B 0x1E049C4
	0x01E048D4 B 0x1E049C4
	0x01E048D8 B 0x1E048F8
	0x01E048DC B 0x1E048F8
	0x01E048E0 B 0x1E048F8
	0x01E048E4 B 0x1E048F8
	0x01E048E8 B 0x1E049C4
	0x01E048EC B 0x1E049C4
	0x01E048F0 B 0x1E048F8
	0x01E048F4 B 0x1E048F8
	0x01E048F8 MOV X19, X0
	0x01E048FC CMP W1, 0x1
	0x01E04900 B.NE 0x1E04A94
	0x01E04904 MOV X0, X19
	0x01E04908 BL 0x3EB1AD0
	0x01E0490C MOV X19, X0
	0x01E04910 ADRP X0, 0x22EF000
	0x01E04914 LDR X0, [X0 + 0x7D0]
	0x01E04918 BL 0x1C16D08
	0x01E0491C LDR X8, [X19]
	0x01E04920 LDR X1, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x25D5000
	007 Move X22, 0x22F6000
	008 Move X19, 0x22F6000
	009 Move X20, 0x22F6000
	010 Move W8, [X21+3462]
	011 Move X22, [X22+2088]
	012 Move X19, [X19+2096]
	013 Move X20, [X20+1984]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x22F6000
	019 Move X0, [X0+2096]
	020 Call 0x1C17CF4
	021 Move X0, 0x22F6000
	022 Move X0, [X0+2088]
	023 Call 0x1C17CF4
	024 Move X0, 0x22F6000
	025 Move X0, [X0+1984]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+3462], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call List`1<Object>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move W9, 0x40A00000
	038 Move X8, [X8+184]
	039 Move [X8], X19
	040 Move X8, [X20]
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X8, [X8+184]
	044 Move [X8+8], W9
	045 Move X30, [X31+48]
	046 Return 

