Type: AnimalCompany.SurfaceEditorManager

Method: System.Void AddSurfaceComponent(AnimalCompany.SurfaceComponent surfaceComponent)

Disassembly:
	0x01CF3FD0 MOV V0.S[1], V1.S[0]
	0x01CF3FD4 FMOV S8, 1
	0x01CF3FD8 MOV V0.S[2], V2.S[0]
	0x01CF3FDC LDR V4, [X8 + 0x10]
	0x01CF3FE0 FMOV S9, W31
	0x01CF3FE4 MOV V0.S[3], V3.S[0]
	0x01CF3FE8 FSUB V1.4S, V5.4S, V0.4S
	0x01CF3FEC FMIN S2, S4, S8
	0x01CF3FF0 FCMP S4, 0x0
	0x01CF3FF4 FCSEL S2, S2, S9, PL
	0x00000000 INVALID
	0x01CF3FFC FADD V0.4S, V0.4S, V1.4S
	0x01CF4000 MOV S1, V0.S[1]
	0x01CF4004 MOV S2, V0.S[2]
	0x01CF4008 MOV S3, V0.S[3]
	0x01CF400C MOV X0, X31
	0x01CF4010 BL 0x3A7C510
	0x01CF4014 MOV X0, X31
	0x01CF4018 BL 0x3A7C388
	0x01CF401C LDR X8, [X19 + 0x20]
	0x01CF4020 CBZ X8, 0x1CF4328
	0x01CF4024 LDR X9, [X21]
	0x01CF4028 MOV V0.S[1], V1.S[0]
	0x01CF402C LDUR V4, [X8 + 0x28]
	0x01CF4030 MOV V0.S[2], V2.S[0]
	0x01CF4034 LDR X9, [X9 + 0xB8]
	0x01CF4038 MOV V0.S[3], V3.S[0]
	0x01CF403C FSUB V2.4S, V4.4S, V0.4S
	0x01CF4040 MOV X0, X31
	0x01CF4044 LDR V1, [X9 + 0x10]
	0x01CF4048 FMIN S3, S1, S8
	0x01CF404C FCMP S1, 0x0
	0x01CF4050 FCSEL S1, S3, S9, PL
	0x00000000 INVALID
	0x01CF4058 FADD V0.4S, V0.4S, V1.4S
	0x01CF405C MOV S1, V0.S[1]
	0x01CF4060 MOV S2, V0.S[2]
	0x01CF4064 MOV S3, V0.S[3]
	0x01CF4068 BL 0x3A7C40C
	0x01CF406C MOV X0, X31
	0x01CF4070 BL 0x3A7C098
	0x01CF4074 LDR X8, [X19 + 0x20]
	0x01CF4078 CBZ X8, 0x1CF4328
	0x01CF407C LDR X9, [X21]
	0x01CF4080 LDUR V4, [X8 + 0x48]
	0x01CF4084 MOV V0.S[1], V1.S[0]
	0x01CF4088 FMOV S8, 1
	0x01CF408C LDR X8, [X9 + 0xB8]
	0x01CF4090 MOV V0.S[2], V2.S[0]
	0x01CF4094 FMOV S9, W31
	0x01CF4098 MOV V0.S[3], V3.S[0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2531000
	006 Move X20, 0x225E000
	007 Move W8, [X21+1746]
	008 Move X20, [X20+1592]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x225E000
	015 Move X0, [X0+1680]
	016 Call 0x1B6F7F0
	017 Move X0, 0x225E000
	018 Move X0, [X0+1592]
	019 Call 0x1B6F7F0
	020 Move W8, 1
	021 Move [X21+1746], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1B6F8F8
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X0, [X8]
	030 Compare X0, 0
	031 JumpIfEqual {63}
	032 Move X9, 0x225D000
	033 Move X9, [X9+1680]
	034 Move W10, [X0+28]
	035 Move X8, [X0+16]
	036 Move X9, [X9]
	037 Add W10, W10, 1
	038 Move [X0+28], W10
	039 Compare X8, 0
	040 JumpIfEqual {63}
	041 NotImplemented "Instruction LDRSW not yet implemented."
	042 Move W11, [X8+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Add W9, W10, 1
	045 Add X8, X8, X10
	046 Move [X0+24], W9
	047 Move [X8+32], X19
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Return 
	053 Move X8, [X9+32]
	054 Move X1, X19
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X8, [X8+192]
	058 Move X2, [X8+112]
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 Call List`1<Object>.AddWithResize, X0, X1
	062 Return 
	063 Call 0x1B6FA1C

Method: System.Void RemoveSurfaceComponent(AnimalCompany.SurfaceComponent surfaceComponent)

Disassembly:
	0x01CF409C LDR V1, [X8 + 0x10]
	0x01CF40A0 FSUB V2.4S, V4.4S, V0.4S
	0x01CF40A4 MOV X0, X31
	0x01CF40A8 FMIN S3, S1, S8
	0x01CF40AC FCMP S1, 0x0
	0x01CF40B0 FCSEL S1, S3, S9, PL
	0x00000000 INVALID
	0x01CF40B8 FADD V0.4S, V0.4S, V1.4S
	0x01CF40BC MOV S1, V0.S[1]
	0x01CF40C0 MOV S2, V0.S[2]
	0x01CF40C4 MOV S3, V0.S[3]
	0x01CF40C8 BL 0x3A7C11C
	0x01CF40CC MOV X0, X31
	0x01CF40D0 BL 0x3A7C19C
	0x01CF40D4 LDR X8, [X19 + 0x20]
	0x01CF40D8 CBZ X8, 0x1CF4328
	0x01CF40DC LDR X9, [X21]
	0x01CF40E0 LDR V2, [X8 + 0x58]
	0x01CF40E4 MOV X0, X31
	0x01CF40E8 LDR X9, [X9 + 0xB8]
	0x01CF40EC FSUB S2, S2, S0
	0x01CF40F0 LDR V1, [X9 + 0x10]
	0x01CF40F4 FMIN S3, S1, S8
	0x01CF40F8 FCMP S1, 0x0
	0x01CF40FC FCSEL S1, S3, S9, PL
	0x01CF4100 FMUL S1, S2, S1
	0x01CF4104 FADD S0, S0, S1
	0x01CF4108 BL 0x3A7C1C4
	0x01CF410C MOV X0, X31
	0x01CF4110 BL 0x3A7C590
	0x01CF4114 MOV X20, X0
	0x01CF4118 MOV X0, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2530000
	006 Move X20, 0x225D000
	007 Move W8, [X21+1747]
	008 Move X20, [X20+1592]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x225D000
	015 Move X0, [X0+1688]
	016 Call 0x1B6F7F0
	017 Move X0, 0x225D000
	018 Move X0, [X0+1592]
	019 Call 0x1B6F7F0
	020 Move W8, 1
	021 Move [X21+1747], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1B6F8F8
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X0, [X8]
	030 Compare X0, 0
	031 JumpIfEqual {42}
	032 Move X8, 0x225D000
	033 Move X8, [X8+1688]
	034 Move X1, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X2, [X8]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Call List`1<Object>.Remove, X0, X1
	041 Return 
	042 Call 0x1B6FA1C

Method: System.Void UpdateSurfaceComponents()

Disassembly:
	0x01CF3B88 ADRP X8, 0x225D000
	0x01CF3B8C LDR X8, [X8 + 0x700]
	0x01CF3B90 MOV X0, X19
	0x01CF3B94 LDR X1, [X8]
	0x01CF3B98 BL 0x208FDE8
	0x01CF3B9C STR X0, [X19 + 0x28]
	0x01CF3BA0 B 0x1CF3BA8
	0x01CF3BA4 LDR X0, [X19 + 0x28]
	0x01CF3BA8 LDP X20, X19, [X31 + 0x10]
	0x01CF3BAC LDP X30, X21, [X31], #0x20
	0x01CF3BB0 RET
	0x01CF3BB4 STP X30, X21, [X31 - 0x20]!
	0x01CF3BB8 STP X20, X19, [X31 + 0x10]
	0x01CF3BBC ADRP X21, 0x2530000
	0x01CF3BC0 LDRB W8, [X21 + 0x6DF]
	0x01CF3BC4 MOV X20, X1
	0x01CF3BC8 MOV X19, X0
	0x01CF3BCC TBNZ X8, 0x0, 0x1CF3BF0
	0x01CF3BD0 ADRP X0, 0x225C000
	0x01CF3BD4 LDR X0, [X0 + 0x320]
	0x01CF3BD8 BL 0x1B6E7F0
	0x01CF3BDC ADRP X0, 0x225C000
	0x01CF3BE0 LDR X0, [X0 + 0x980]
	0x01CF3BE4 BL 0x1B6E7F0
	0x01CF3BE8 MOVZ W8, 0x1
	0x01CF3BEC STRB W8, [X21 + 0x6DF]
	0x01CF3BF0 CBZ X20, 0x1CF3C48
	0x01CF3BF4 ADRP X8, 0x225C000
	0x01CF3BF8 LDR X8, [X8 + 0x980]
	0x01CF3BFC MOV X0, X20
	0x01CF3C00 MOV X2, X31
	0x01CF3C04 LDR X1, [X8]
	0x01CF3C08 BL 0x3A9B614
	0x01CF3C0C TBZ X0, 0x0, 0x1CF3C3C
	0x01CF3C10 ADRP X8, 0x225C000
	0x01CF3C14 LDR X8, [X8 + 0x320]
	0x01CF3C18 LDR X19, [X19 + 0x20]
	0x01CF3C1C LDR X0, [X8]
	0x01CF3C20 LDR W8, [X0 + 0xE0]
	0x01CF3C24 CBNZ W8, 0x1CF3C2C
	0x01CF3C28 BL 0x1B6E8F8
	0x01CF3C2C MOV X0, X19
	0x01CF3C30 LDP X20, X19, [X31 + 0x10]
	0x01CF3C34 LDP X30, X21, [X31], #0x20
	0x01CF3C38 B 0x1CF3C4C
	0x01CF3C3C LDP X20, X19, [X31 + 0x10]
	0x01CF3C40 LDP X30, X21, [X31], #0x20
	0x01CF3C44 RET
	0x01CF3C48 BL 0x1B6EA1C
	0x01CF3C4C STP X30, X21, [X31 - 0x20]!
	0x01CF3C50 STP X20, X19, [X31 + 0x10]
	0x01CF3C54 ADRP X20, 0x2530000
	0x01CF3C58 ADRP X21, 0x225C000
	0x01CF3C5C LDRB W8, [X20 + 0x6E2]
	0x01CF3C60 LDR X21, [X21 + 0x320]
	0x01CF3C64 MOV X19, X0
	0x01CF3C68 TBNZ X8, 0x0, 0x1CF3C8C
	0x01CF3C6C ADRP X0, 0x225C000
	0x01CF3C70 LDR X0, [X0 + 0x320]
	0x01CF3C74 BL 0x1B6E7F0
	0x01CF3C78 ADRP X0, 0x225A000
	0x01CF3C7C LDR X0, [X0 + 0x478]
	0x01CF3C80 BL 0x1B6E7F0
	0x01CF3C84 MOVZ W8, 0x1
	0x01CF3C88 STRB W8, [X20 + 0x6E2]
	0x01CF3C8C LDR X0, [X21]
	0x01CF3C90 ADRP X20, 0x225A000
	0x01CF3C94 LDR W8, [X0 + 0xE0]
	0x01CF3C98 LDR X20, [X20 + 0x478]
	0x01CF3C9C CBNZ W8, 0x1CF3CA8
	0x01CF3CA0 BL 0x1B6E8F8
	0x01CF3CA4 LDR X0, [X21]
	0x01CF3CA8 LDR X8, [X20]
	0x01CF3CAC LDR X9, [X0 + 0xB8]
	0x01CF3CB0 LDR W10, [X8 + 0xE0]
	0x01CF3CB4 LDR X20, [X9 + 0x8]
	0x01CF3CB8 CBNZ W10, 0x1CF3CC4
	0x01CF3CBC MOV X0, X8
	0x01CF3CC0 BL 0x1B6E8F8
	0x01CF3CC4 MOV X0, X20
	0x01CF3CC8 MOV X1, X31
	0x01CF3CCC MOV X2, X31
	0x01CF3CD0 BL 0x3AA0AF0
	0x01CF3CD4 TBNZ X0, 0x0, 0x1CF3D00
	0x01CF3CD8 LDR X0, [X21]
	0x01CF3CDC LDR W8, [X0 + 0xE0]
	0x01CF3CE0 CBNZ W8, 0x1CF3CEC
	0x01CF3CE4 BL 0x1B6E8F8
	0x01CF3CE8 LDR X0, [X21]
	0x01CF3CEC LDR X8, [X0 + 0xB8]
	0x01CF3CF0 LDR X9, [X8 + 0x8]
	0x01CF3CF4 CBZ X9, 0x1CF3D0C
	0x01CF3CF8 STR X19, [X9 + 0x20]
	0x01CF3CFC STR W31, [X8 + 0x10]
	0x01CF3D00 LDP X20, X19, [X31 + 0x10]
	0x01CF3D04 LDP X30, X21, [X31], #0x20
	0x01CF3D08 RET
	0x01CF3D0C BL 0x1B6EA1C
	0x01CF3D10 MOV X1, X31
	0x01CF3D14 B 0x3A9EEE4
	0x01CF3D18 LDR X0, [X0 + 0x20]
	0x01CF3D1C RET
	0x01CF3D20 STR X1, [X0 + 0x20]
	0x01CF3D24 RET
	0x01CF3D28 STR X30, [X31 - 0x20]!
	0x01CF3D2C STP X20, X19, [X31 + 0x10]
	0x01CF3D30 ADRP X20, 0x2530000
	0x01CF3D34 ADRP X19, 0x225B000
	0x01CF3D38 LDRB W8, [X20 + 0x6E0]
	0x01CF3D3C LDR X19, [X19 + 0xFF0]
	0x01CF3D40 TBNZ X8, 0x0, 0x1CF3D58

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X20, 0x2531000
	008 Move X19, 0x225E000
	009 Move W8, [X20+1748]
	010 Move X19, [X19+1592]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0x225E000
	016 Move X0, [X0+1600]
	017 Call 0x1B6F7F0
	018 Move X0, 0x225E000
	019 Move X0, [X0+1608]
	020 Call 0x1B6F7F0
	021 Move X0, 0x225E000
	022 Move X0, [X0+1616]
	023 Call 0x1B6F7F0
	024 Move X0, 0x225E000
	025 Move X0, [X0+1624]
	026 Call 0x1B6F7F0
	027 Move X0, 0x225B000
	028 Move X0, [X0+1144]
	029 Call 0x1B6F7F0
	030 Move X0, 0x225E000
	031 Move X0, [X0+1592]
	032 Call 0x1B6F7F0
	033 Move W8, 1
	034 Move [X20+1748], W8
	035 Move X0, [X19]
	036 Move [X31+8], X31
	037 Move [X31+16], X31
	038 Move [X31+24], X31
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1B6F8F8
	043 Move X0, [X19]
	044 Move X8, [X0+184]
	045 Move X0, [X8]
	046 Compare X0, 0
	047 JumpIfEqual {95}
	048 Move X8, 0x225E000
	049 Move X8, [X8+1624]
	050 Move X21, 0x225E000
	051 Move X22, 0x225B000
	052 Move X20, 0x225E000
	053 Move X1, [X8]
	054 Move X21, [X21+1608]
	055 Move X22, [X22+1144]
	056 Move X20, [X20+1600]
	057 Add X8, X31, 8
	058 Call List`1<Object>.GetEnumerator, X0
	059 Move X1, [X21]
	060 Add X0, X31, 8
	061 Call Enumerator<Object>.MoveNext, X0
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {84}
	066 Move X0, [X22]
	067 Move X19, [X31+24]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1B6F8F8
	072 Move X0, X19
	073 Move X1, X31
	074 Move X2, X31
	075 Call Object.op_Equality, X0, X1
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {59}
	080 Compare X19, 0
	081 JumpIfEqual {94}
	082 Move X0, X19
	083 Call SurfaceComponent.ApplySurface, X0
	084 Move X1, [X20]
	085 Add X0, X31, 8
	086 Call Enumerator<Object>.Dispose, X0
	087 Move X20, [X31+64]
	088 Move X19, [X31+72]
	089 Move X22, [X31+48]
	090 Move X21, [X31+56]
	091 Move X30, [X31+32]
	092 Add X31, X31, 80
	093 Return 
	094 Call 0x1B6FA1C
	095 Call 0x1B6FA1C
	096 Move X19, X0
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X0, X19
	099 Call 0x3D1A840
	100 Move X20, [X0]
	101 Call 0x3D1A850
	102 Move X8, 0x225E000
	103 Move X8, [X8+1600]
	104 Add X0, X31, 8
	105 Move X1, [X8]
	106 Call Enumerator<Object>.Dispose, X0
	107 Compare X20, 0
	108 JumpIfEqual {87}
	109 Move X0, X20
	110 Call 0x1B6FA14
	111 Move X20, X31
	112 Move X19, X0
	113 Move X8, 0x225E000
	114 Move X8, [X8+1600]
	115 Move X1, [X8]
	116 Add X0, X31, 8
	117 Call Enumerator<Object>.Dispose, X0
	118 Compare X20, 0
	119 JumpIfNotEqual {122}
	120 Move X0, X19
	121 Call 0x1C8518C
	122 Move X0, X20
	123 Call 0x1B6FA14
	124 Call 0x18F56A8

Method: System.Void .cctor()

Disassembly:
	0x01CF411C BL 0x3A7C590
	0x01CF4120 CBZ X0, 0x1CF4328
	0x01CF4124 ADRP X23, 0x225C000
	0x01CF4128 LDR X23, [X23 + 0x708]
	0x01CF412C MOV X2, X31
	0x01CF4130 LDR X1, [X23]
	0x01CF4134 BL 0x3A7D114
	0x01CF4138 LDR X8, [X19 + 0x20]
	0x01CF413C CBZ X8, 0x1CF4328
	0x01CF4140 CBZ X20, 0x1CF4328
	0x01CF4144 LDR X9, [X21]
	0x01CF4148 MOV V0.S[1], V1.S[0]
	0x01CF414C MOV V0.S[2], V2.S[0]
	0x01CF4150 LDUR V1, [X8 + 0x38]
	0x01CF4154 LDR X9, [X9 + 0xB8]
	0x01CF4158 FMOV S4, 1
	0x01CF415C FMOV S5, W31
	0x01CF4160 MOV V0.S[3], V3.S[0]
	0x01CF4164 LDR V2, [X9 + 0x10]
	0x01CF4168 LDR X1, [X23]
	0x01CF416C FSUB V1.4S, V1.4S, V0.4S
	0x01CF4170 MOV X0, X20
	0x01CF4174 FMIN S3, S2, S4
	0x01CF4178 FCMP S2, 0x0
	0x01CF417C FCSEL S2, S3, S5, PL
	0x00000000 INVALID
	0x01CF4184 FADD V0.4S, V0.4S, V1.4S
	0x01CF4188 MOV S1, V0.S[1]
	0x01CF418C MOV S2, V0.S[2]
	0x01CF4190 MOV S3, V0.S[3]
	0x01CF4194 MOV X2, X31
	0x01CF4198 BL 0x3A7D238
	0x01CF419C LDR X0, [X22]
	0x01CF41A0 LDR X20, [X19 + 0x28]
	0x01CF41A4 LDR W8, [X0 + 0xE0]
	0x01CF41A8 CBNZ W8, 0x1CF41B0
	0x01CF41AC BL 0x1B6E8F8
	0x01CF41B0 MOV X0, X20
	0x01CF41B4 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2530000
	007 Move X22, 0x225D000
	008 Move X19, 0x225D000
	009 Move X20, 0x225D000
	010 Move W8, [X21+1749]
	011 Move X22, [X22+1696]
	012 Move X19, [X19+1704]
	013 Move X20, [X20+1592]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x225D000
	019 Move X0, [X0+1704]
	020 Call 0x1B6F7F0
	021 Move X0, 0x225D000
	022 Move X0, [X0+1696]
	023 Call 0x1B6F7F0
	024 Move X0, 0x225D000
	025 Move X0, [X0+1592]
	026 Call 0x1B6F7F0
	027 Move W8, 1
	028 Move [X21+1749], W8
	029 Move X0, [X22]
	030 Call 0x1B6FA0C
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call List`1<Object>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move W9, 0x40A00000
	038 Move X8, [X8+184]
	039 Move [X8], X19
	040 Move X8, [X20]
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X8, [X8+184]
	044 Move [X8+8], W9
	045 Move X30, [X31+48]
	046 Return 

