Type: AnimalCompany.MobView/<MobEffectCoroutine>d__56

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01DFB84C STP X30, X21, [X31 + 0x50]
	0x01DFB850 STP X20, X19, [X31 + 0x60]
	0x01DFB854 MOV X19, X0
	0x01DFB858 LDR X0, [X0 + 0x160]
	0x01DFB85C CBZ X0, 0x1DFBBBC
	0x01DFB860 MOV X1, X31
	0x01DFB864 BL 0x3C32E90
	0x01DFB868 CBZ X0, 0x1DFBBBC
	0x01DFB86C MOV X1, X31
	0x01DFB870 BL 0x3C3F58C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01DFB874 MOV X0, X19

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01DFB878 MOV X1, X31
	0x01DFB87C MOV V8.16B, V0.16B
	0x01DFB880 MOV V9.16B, V1.16B
	0x01DFB884 MOV V10.16B, V2.16B
	0x01DFB888 BL 0x3C32E90
	0x01DFB88C CBZ X0, 0x1DFBBBC
	0x01DFB890 MOV X1, X31
	0x01DFB894 BL 0x3C3F58C
	0x01DFB898 ADRP X20, 0x25DD000
	0x01DFB89C LDRB W8, [X20 + 0x785]
	0x01DFB8A0 MOV V11.16B, V0.16B
	0x01DFB8A4 MOV V12.16B, V1.16B
	0x01DFB8A8 MOV V13.16B, V2.16B
	0x01DFB8AC CBNZ W8, 0x1DFB8C4
	0x01DFB8B0 ADRP X0, 0x22F8000
	0x01DFB8B4 LDR X0, [X0 + 0x5A8]
	0x01DFB8B8 BL 0x1C16CF4
	0x01DFB8BC MOVZ W8, 0x1
	0x01DFB8C0 STRB W8, [X20 + 0x785]
	0x01DFB8C4 ADRP X20, 0x22F8000
	0x01DFB8C8 LDR X20, [X20 + 0x5A8]
	0x01DFB8CC FSUB S11, S8, S11
	0x01DFB8D0 FSUB S9, S9, S12
	0x01DFB8D4 FSUB S8, S10, S13
	0x01DFB8D8 LDR X0, [X20]
	0x01DFB8DC LDR W8, [X0 + 0xE0]
	0x01DFB8E0 CBNZ W8, 0x1DFB8E8
	0x01DFB8E4 BL 0x1C16DFC
	0x01DFB8E8 FMUL S0, S11, S11
	0x01DFB8EC FMUL S1, S9, S9
	0x01DFB8F0 ADRP X8, 0xFFFFFFFFFECEF000
	0x01DFB8F4 FADD S0, S0, S1
	0x01DFB8F8 LDR V1, [X8 + 0x17C]
	0x01DFB8FC FMUL S2, S8, S8
	0x01DFB900 FADD S0, S2, S0
	0x01DFB904 FSQRT S0, S0
	0x01DFB908 FCMP S0, S1
	0x01DFB90C B.LE 0x1DFB920
	0x01DFB910 FDIV S12, S11, S0
	0x01DFB914 FDIV S13, S9, S0
	0x01DFB918 FDIV S14, S8, S0
	0x01DFB91C B 0x1DFB958
	0x01DFB920 ADRP X21, 0x25DD000
	0x01DFB924 LDRB W8, [X21 + 0x783]
	0x01DFB928 CBNZ W8, 0x1DFB940
	0x01DFB92C ADRP X0, 0x22F8000
	0x01DFB930 LDR X0, [X0 + 0x5A0]
	0x01DFB934 BL 0x1C16CF4
	0x01DFB938 MOVZ W8, 0x1
	0x01DFB93C STRB W8, [X21 + 0x783]
	0x01DFB940 ADRP X8, 0x22F8000
	0x01DFB944 LDR X8, [X8 + 0x5A0]
	0x01DFB948 LDR X8, [X8]
	0x01DFB94C LDR X8, [X8 + 0xB8]
	0x01DFB950 LDP S12, S13, [X8]
	0x01DFB954 LDR V14, [X8 + 0x8]
	0x01DFB958 LDR V0, [X19 + 0x1F4]
	0x01DFB95C LDR V1, [X19 + 0x1F8]
	0x01DFB960 LDR V2, [X19 + 0x1FC]
	0x01DFB964 LDR X8, [X19 + 0xC0]
	0x01DFB968 FMUL S3, S12, S0
	0x01DFB96C FMUL S4, S13, S1
	0x01DFB970 FADD S3, S3, S4
	0x01DFB974 FMUL S4, S14, S2
	0x01DFB978 FADD S3, S4, S3
	0x01DFB97C FNEG S4, S0
	0x01DFB980 FCMP S3, 0x0
	0x01DFB984 FNEG S3, S1
	0x01DFB988 FCSEL S0, S0, S4, GT
	0x01DFB98C FNEG S4, S2
	0x01DFB990 FCSEL S1, S1, S3, GT
	0x01DFB994 FCSEL S2, S2, S4, GT
	0x01DFB998 STR S0, [X19 + 0x1CC]
	0x01DFB99C STR S1, [X19 + 0x1D0]
	0x01DFB9A0 STR S2, [X19 + 0x1D4]
	0x01DFB9A4 CBZ X8, 0x1DFBBBC
	0x01DFB9A8 LDR V8, [X8 + 0x40]
	0x01DFB9AC MOV X0, X19
	0x01DFB9B0 MOV X1, X31
	0x01DFB9B4 BL 0x3C32E90
	0x01DFB9B8 CBZ X0, 0x1DFBBBC
	0x01DFB9BC MOV X1, X31
	0x01DFB9C0 STR S8, [X31 + 0xC]
	0x01DFB9C4 BL 0x3C3FA04
	0x01DFB9C8 ADRP X21, 0x25DD000
	0x01DFB9CC LDRB W8, [X21 + 0xA24]
	0x01DFB9D0 MOV V8.16B, V0.16B
	0x01DFB9D4 MOV V9.16B, V1.16B
	0x01DFB9D8 MOV V10.16B, V2.16B
	0x01DFB9DC CBNZ W8, 0x1DFB9F4
	0x01DFB9E0 ADRP X0, 0x22F8000
	0x01DFB9E4 LDR X0, [X0 + 0x5A8]
	0x01DFB9E8 BL 0x1C16CF4
	0x01DFB9EC MOVZ W8, 0x1
	0x01DFB9F0 STRB W8, [X21 + 0xA24]
	0x01DFB9F4 LDR X0, [X20]
	0x01DFB9F8 FMUL S0, S12, S12
	0x01DFB9FC FMUL S1, S13, S13
	0x01DFBA00 FADD S0, S0, S1
	0x01DFBA04 FMUL S1, S14, S14
	0x01DFBA08 LDR W8, [X0 + 0xE0]
	0x01DFBA0C FADD S15, S1, S0
	0x01DFBA10 FMUL S0, S8, S8
	0x01DFBA14 FMUL S1, S9, S9
	0x01DFBA18 FADD S0, S0, S1
	0x01DFBA1C FMUL S1, S10, S10
	0x01DFBA20 FADD S11, S1, S0
	0x01DFBA24 CBNZ W8, 0x1DFBA2C
	0x01DFBA28 BL 0x1C16DFC
	0x01DFBA2C ADRP X8, 0xFFFFFFFFFECEE000
	0x01DFBA30 LDR V1, [X8 + 0xFE8]
	0x01DFBA34 FMUL S0, S15, S11
	0x01DFBA38 FSQRT S0, S0
	0x01DFBA3C FMOV S15, W31
	0x01DFBA40 FCMP S0, S1
	0x01DFBA44 B.MI 0x1DFBA9C
	0x01DFBA48 LDR X0, [X20]
	0x01DFBA4C FMUL S1, S12, S8
	0x01DFBA50 FMUL S2, S13, S9
	0x01DFBA54 FMUL S3, S14, S10
	0x01DFBA58 FADD S1, S1, S2
	0x01DFBA5C FADD S1, S3, S1
	0x01DFBA60 LDR W8, [X0 + 0xE0]
	0x01DFBA64 FDIV S0, S1, S0
	0x01DFBA68 FMOV S1, 1
	0x01DFBA6C FMOV S2, -1
	0x01DFBA70 FMIN S1, S0, S1
	0x01DFBA74 FCMP S0, S2
	0x01DFBA78 FCSEL S8, S1, S2, PL
	0x01DFBA7C CBNZ W8, 0x1DFBA84
	0x01DFBA80 BL 0x1C16DFC
	0x01DFBA84 FCVT S0, S8
	0x01DFBA88 BL 0x3EB1B80
	0x01DFBA8C ADRP X8, 0xFFFFFFFFFECEF000
	0x01DFBA90 LDR V1, [X8 + 0x448]
	0x00000000 INVALID
	0x01DFBA98 FMUL S15, S0, S1
	0x01DFBA9C MOV X0, X19
	0x01DFBAA0 MOV X1, X31
	0x01DFBAA4 BL 0x3C32E90
	0x01DFBAA8 MOV X20, X0
	0x01DFBAAC MOV X0, X19
	0x01DFBAB0 MOV X1, X31
	0x01DFBAB4 BL 0x3C32E90
	0x01DFBAB8 CBZ X0, 0x1DFBBBC
	0x01DFBABC LDR V0, [X31 + 0xC]
	0x01DFBAC0 MOV X1, X31
	0x01DFBAC4 FDIV S0, S0, S15
	0x01DFBAC8 STR S0, [X31 + 0xC]
	0x01DFBACC BL 0x3C3DEB4
	0x01DFBAD0 MOV V8.16B, V0.16B
	0x01DFBAD4 MOV V9.16B, V1.16B
	0x01DFBAD8 MOV V10.16B, V2.16B
	0x01DFBADC LDR V0, [X19 + 0x1CC]
	0x01DFBAE0 LDR V1, [X19 + 0x1D0]
	0x01DFBAE4 LDR V2, [X19 + 0x1D4]
	0x01DFBAE8 MOV X0, X31
	0x01DFBAEC MOV V11.16B, V3.16B
	0x01DFBAF0 BL 0x3C2A8C4
	0x01DFBAF4 MOV X0, X19
	0x01DFBAF8 MOV X1, X31
	0x01DFBAFC MOV V12.16B, V0.16B
	0x01DFBB00 MOV V13.16B, V1.16B
	0x01DFBB04 MOV V14.16B, V2.16B
	0x01DFBB08 MOV V15.16B, V3.16B
	0x01DFBB0C BL 0x1DEA4B8
	0x01DFBB10 LDR V1, [X31 + 0xC]
	0x01DFBB14 MOV V2.16B, V10.16B
	0x01DFBB18 MOV V3.16B, V11.16B
	0x01DFBB1C MOV V4.16B, V12.16B
	0x01DFBB20 FMUL S0, S1, S0

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x25DE000
	010 Move W8, [X20+3382]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x22FE000
	017 Move X0, [X0+3208]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3382], W8
	021 Move W8, [X19+16]
	022 Move X20, [X19+32]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Compare W8, 0
	025 JumpIfNotEqual {72}
	026 Move TEMP, 0
	027 Not TEMP
	028 Move W8, TEMP
	029 Move [X19+16], W8
	030 Compare X20, 0
	031 JumpIfEqual {183}
	032 Move X0, X20
	033 Move X1, X31
	034 Call Component.get_transform, X0
	035 Compare X0, 0
	036 JumpIfEqual {183}
	037 Move X1, X31
	038 Call Transform.get_lossyScale, X0
	039 Move [X19+40], S0
	040 Move [X19+48], S1
	041 Move [X19+48], S2
	042 Move TEMP, 0
	043 Not TEMP
	044 Move W8, TEMP
	045 Move [X19+16], W8
	046 Compare X20, 0
	047 JumpIfEqual {183}
	048 Move V8, [X20+144]
	049 NotImplemented "Instruction FCMP not yet implemented."
	050 Move V0, [X20+148]
	051 NotImplemented "Instruction FCMP not yet implemented."
	052 Move X0, X31
	053 Call Time.get_deltaTime
	054 Move V9, [X20+148]
	055 Subtract S0, S8, S0
	056 Move X0, X31
	057 Move [X20+144], S0
	058 Call Time.get_deltaTime
	059 Move V8, [X20+144]
	060 Move W9, [X20+152]
	061 Subtract S9, S9, S0
	062 Move [X20+148], S9
	063 NotImplemented "Instruction FCMP not yet implemented."
	064 NotImplemented "Instruction CSET not yet implemented."
	065 NotImplemented "Instruction FCMP not yet implemented."
	066 NotImplemented "Instruction CSET not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X9, X20
	069 Add X9, X9, 153
	070 Move W10, [X9]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move W0, W31
	073 Add X9, X9, 153
	074 Move W11, [X9]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 NotImplemented "Instruction STURB not yet implemented."
	077 Move [X9], W8
	078 NotImplemented "Instruction FCMP not yet implemented."
	079 Move X21, 0x22FE000
	080 Move X21, [X21+3208]
	081 Move X0, [X21]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {87}
	085 Call 0x1C17DFC
	086 Move X0, [X21]
	087 Move X11, [X0+184]
	088 Add X8, X11, 8
	089 Add X9, X11, 12
	090 Add X10, X11, 16
	091 Add X11, X11, 20
	092 NotImplemented "Instruction FCMP not yet implemented."
	093 Move X21, 0x22FE000
	094 Move X21, [X21+3208]
	095 Move X0, [X21]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {101}
	099 Call 0x1C17DFC
	100 Move X0, [X21]
	101 Move X11, [X0+184]
	102 Add X8, X11, 24
	103 Add X9, X11, 28
	104 Add X10, X11, 32
	105 Add X11, X11, 36
	106 Move V2, [X10]
	107 Move V1, [X9]
	108 Move V0, [X8]
	109 Move V3, [X11]
	110 Move X0, X20
	111 Move X1, X31
	112 NotImplemented "Instruction STRH not yet implemented."
	113 Call Component.get_transform, X0
	114 Compare X0, 0
	115 JumpIfEqual {183}
	116 Move S1, [X20+160]
	117 Move S2, [X20+164]
	118 Move V0, [X20+156]
	119 Move X1, X31
	120 Call Transform.set_localPosition, X0, X1
	121 Move S0, W31
	122 Move S1, W31
	123 Move S2, W31
	124 Move S3, 1
	125 Move X0, X20
	126 Move X1, X31
	127 Call MobView.SetColorAdditive, X0, X1
	128 Move W0, W31
	129 Move [X20+136], X31
	130 Move S3, 1
	131 Move S0, W31
	132 Move S1, W31
	133 Move S2, W31
	134 NotImplemented "Instruction FCMP not yet implemented."
	135 NotImplemented "Instruction CSET not yet implemented."
	136 NotImplemented "Instruction FCMP not yet implemented."
	137 Move X0, X20
	138 Move X1, X31
	139 NotImplemented "Instruction CSET not yet implemented."
	140 Call MobView.SetColorAdditive, X0, X1
	141 And W1, W21, W22
	142 Move X0, X20
	143 Move X2, X31
	144 Call MobView.SetColorAdditiveFresnel, X0, X1
	145 Move X0, X20
	146 Move X1, X31
	147 Call Component.get_transform, X0
	148 Move S8, [X20+156]
	149 Move S9, [X20+160]
	150 Move V10, [X20+164]
	151 Move X20, X0
	152 Move X0, X31
	153 Call Random.get_insideUnitSphere
	154 Compare X20, 0
	155 JumpIfEqual {183}
	156 Move X8, -19988480
	157 Move V3, [X8+512]
	158 Move V4, [X19+40]
	159 Move X0, X20
	160 Move X1, X31
	161 Multiply S2, S2, S3
	162 Multiply S1, S1, S3
	163 Multiply S0, S0, S3
	164 Multiply S2, S4, S2
	165 Multiply S1, S4, S1
	166 Multiply S0, S4, S0
	167 Add S2, S10, S2
	168 Add S1, S9, S1
	169 Add S0, S8, S0
	170 Call Transform.set_localPosition, X0, X1
	171 Move W0, 1
	172 Move [X19+24], X31
	173 Move [X19+16], W0
	174 Move X20, [X31+48]
	175 Move X19, [X31+56]
	176 Move X22, [X31+32]
	177 Move X21, [X31+40]
	178 Move X30, [X31+24]
	179 Move D9, [X31+8]
	180 Move D8, [X31+16]
	181 Move V10, [X31+64]
	182 Return X0
	183 Call 0x1C17F20

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x01DFBB24 STR S0, [X31]
	0x01DFBB28 MOV V0.16B, V8.16B

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01DFBB2C MOV V1.16B, V9.16B
	0x01DFBB30 MOV V5.16B, V13.16B
	0x01DFBB34 MOV V6.16B, V14.16B
	0x01DFBB38 MOV V7.16B, V15.16B
	0x01DFBB3C MOV X0, X31
	0x01DFBB40 BL 0x3C2A2F8
	0x01DFBB44 CBZ X20, 0x1DFBBBC
	0x01DFBB48 MOV X0, X20
	0x01DFBB4C MOV X1, X31
	0x01DFBB50 BL 0x3C3F7AC
	0x01DFBB54 LDR V8, [X19 + 0x1A8]
	0x01DFBB58 FMOV S0, 1.5
	0x01DFBB5C FCMP S8, S0
	0x01DFBB60 B.GE 0x1DFBB98

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x22F9000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x22FF000
	011 Move X0, [X0+1288]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01DFBB64 MOV X0, X19
	0x01DFBB68 MOV X1, X31

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

