Type: AnimalCompany.ProductsManager/FetchProductsCommand/<>c__DisplayClass0_0

Method: System.Void .ctor()

Disassembly:
	0x01D47BA0 LDR X21, [X21 + 0x6A0]
	0x01D47BA4 LDR X19, [X19 + 0x6B8]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <ExecuteAsync>b__1(Oculus.Platform.Message`1<Oculus.Platform.Models.ProductList> result)

Disassembly:
	0x01D47BA8 LDR X20, [X20 + 0x6B0]
	0x01D47BAC CBNZ W8, 0x1D47BB4
	0x01D47BB0 BL 0x1C16DFC
	0x01D47BB4 LDR X0, [X21]
	0x01D47BB8 ADD X8, X31, 0x8
	0x01D47BBC BL 0x263AAF8
	0x01D47BC0 LDUR V0, [X31 + 0x8]
	0x01D47BC4 LDR X9, [X31 + 0x18]
	0x01D47BC8 LDR X2, [X19]
	0x01D47BCC ADD X8, X31, 0x20
	0x01D47BD0 ORR X19, X8, 0xF
	0x01D47BD4 MOVN W10, 0x0
	0x01D47BD8 ADD X1, X31, 0x20
	0x01D47BDC MOV X0, X19
	0x01D47BE0 STUR V0, [X31 + 0x28]
	0x01D47BE4 STR X9, [X31 + 0x38]
	0x01D47BE8 STR W10, [X31 + 0x20]
	0x01D47BEC BL 0x212CD30
	0x01D47BF0 LDR X1, [X20]
	0x01D47BF4 MOV X0, X19
	0x01D47BF8 BL 0x263AB0C
	0x01D47BFC LDP X20, X19, [X31 + 0x70]
	0x01D47C00 LDP X30, X21, [X31 + 0x60]
	0x01D47C04 ADD X31, X31, 0x80
	0x01D47C08 RET
	0x01D47C0C STP X30, X21, [X31 - 0x20]!
	0x01D47C10 STP X20, X19, [X31 + 0x10]
	0x01D47C14 ADRP X20, 0x2691000
	0x01D47C18 LDRB W8, [X20 + 0x775]
	0x01D47C1C MOV X19, X0
	0x01D47C20 TBNZ X8, 0x0, 0x1D47C74
	0x01D47C24 ADRP X0, 0x23AC000
	0x01D47C28 LDR X0, [X0 + 0x648]
	0x01D47C2C BL 0x1C16CF4
	0x01D47C30 ADRP X0, 0x23AD000
	0x01D47C34 LDR X0, [X0 + 0x6C0]
	0x01D47C38 BL 0x1C16CF4
	0x01D47C3C ADRP X0, 0x23AD000
	0x01D47C40 LDR X0, [X0 + 0x6C8]
	0x01D47C44 BL 0x1C16CF4
	0x01D47C48 ADRP X0, 0x23AD000
	0x01D47C4C LDR X0, [X0 + 0x6D0]
	0x01D47C50 BL 0x1C16CF4
	0x01D47C54 ADRP X0, 0x23AC000
	0x01D47C58 LDR X0, [X0 + 0xDC8]
	0x01D47C5C BL 0x1C16CF4
	0x01D47C60 ADRP X0, 0x23AD000
	0x01D47C64 LDR X0, [X0 + 0x6D8]
	0x01D47C68 BL 0x1C16CF4
	0x01D47C6C MOVZ W8, 0x1
	0x01D47C70 STRB W8, [X20 + 0x775]
	0x01D47C74 ADRP X20, 0x23AC000
	0x01D47C78 LDR X20, [X20 + 0x648]
	0x01D47C7C CBNZ X19, 0x1D47CA4
	0x01D47C80 ADRP X8, 0x23AD000
	0x01D47C84 LDR X8, [X8 + 0x6D0]
	0x01D47C88 LDR X0, [X8]
	0x01D47C8C BL 0x1C16F10
	0x01D47C90 ADRP X8, 0x23AD000
	0x01D47C94 LDR X8, [X8 + 0x6C0]
	0x01D47C98 MOV X19, X0
	0x01D47C9C LDR X1, [X8]
	0x01D47CA0 BL 0x2AA4804
	0x01D47CA4 LDR X0, [X20]
	0x01D47CA8 LDR W8, [X0 + 0xE0]
	0x01D47CAC CBNZ W8, 0x1D47CB4
	0x01D47CB0 BL 0x1C16DFC
	0x01D47CB4 ADRP X21, 0x2691000
	0x01D47CB8 LDRB W8, [X21 + 0x787]
	0x01D47CBC CBNZ W8, 0x1D47CD4
	0x01D47CC0 ADRP X0, 0x23AC000
	0x01D47CC4 LDR X0, [X0 + 0x648]
	0x01D47CC8 BL 0x1C16CF4
	0x01D47CCC MOVZ W8, 0x1
	0x01D47CD0 STRB W8, [X21 + 0x787]
	0x01D47CD4 LDR X0, [X20]
	0x01D47CD8 LDR W8, [X0 + 0xE0]
	0x01D47CDC CBNZ W8, 0x1D47CE8
	0x01D47CE0 BL 0x1C16DFC
	0x01D47CE4 LDR X0, [X20]
	0x01D47CE8 LDR X8, [X0 + 0xB8]
	0x01D47CEC LDR X8, [X8]
	0x01D47CF0 CBZ X8, 0x1D47D34
	0x01D47CF4 LDR X8, [X8 + 0x80]
	0x01D47CF8 CBZ X8, 0x1D47D34
	0x01D47CFC CBZ X19, 0x1D47D34
	0x01D47D00 ADRP X9, 0x23AD000
	0x01D47D04 ADRP X10, 0x23AD000
	0x01D47D08 LDR X9, [X9 + 0x6D8]
	0x01D47D0C LDR X10, [X10 + 0x6C8]
	0x01D47D10 LDR X2, [X8 + 0x50]
	0x01D47D14 MOV X0, X19
	0x01D47D18 LDR X1, [X9]
	0x01D47D1C LDR X3, [X10]
	0x01D47D20 BL 0x2AA5084
	0x01D47D24 MOV X0, X19
	0x01D47D28 LDP X20, X19, [X31 + 0x10]
	0x01D47D2C LDP X30, X21, [X31], #0x20
	0x01D47D30 RET
	0x01D47D34 BL 0x1C16F20
	0x01D47D38 STR X30, [X31 - 0x60]!
	0x01D47D3C STP X28, X27, [X31 + 0x10]
	0x01D47D40 STP X26, X25, [X31 + 0x20]
	0x01D47D44 STP X24, X23, [X31 + 0x30]
	0x01D47D48 STP X22, X21, [X31 + 0x40]
	0x01D47D4C STP X20, X19, [X31 + 0x50]
	0x01D47D50 ADRP X23, 0x2691000
	0x01D47D54 ADRP X24, 0x23AC000
	0x01D47D58 ADRP X21, 0x23AC000
	0x01D47D5C ADRP X22, 0x23AC000
	0x01D47D60 LDRB W8, [X23 + 0x777]
	0x01D47D64 LDR X24, [X24 + 0x720]
	0x01D47D68 LDR X21, [X21 + 0x718]
	0x01D47D6C LDR X22, [X22 + 0xB58]
	0x01D47D70 MOV X19, X1
	0x01D47D74 MOV X20, X0
	0x01D47D78 TBNZ X8, 0x0, 0x1D47E08
	0x01D47D7C ADRP X0, 0x23AC000
	0x01D47D80 LDR X0, [X0 + 0xB50]
	0x01D47D84 BL 0x1C16CF4
	0x01D47D88 ADRP X0, 0x23AC000
	0x01D47D8C LDR X0, [X0 + 0xB58]
	0x01D47D90 BL 0x1C16CF4
	0x01D47D94 ADRP X0, 0x23AC000
	0x01D47D98 LDR X0, [X0 + 0x710]
	0x01D47D9C BL 0x1C16CF4
	0x01D47DA0 ADRP X0, 0x23AC000
	0x01D47DA4 LDR X0, [X0 + 0x718]
	0x01D47DA8 BL 0x1C16CF4
	0x01D47DAC ADRP X0, 0x23AC000
	0x01D47DB0 LDR X0, [X0 + 0x720]
	0x01D47DB4 BL 0x1C16CF4
	0x01D47DB8 ADRP X0, 0x23AC000
	0x01D47DBC LDR X0, [X0 + 0xA88]
	0x01D47DC0 BL 0x1C16CF4
	0x01D47DC4 ADRP X0, 0x23AC000
	0x01D47DC8 LDR X0, [X0 + 0xBA8]
	0x01D47DCC BL 0x1C16CF4
	0x01D47DD0 ADRP X0, 0x23AD000
	0x01D47DD4 LDR X0, [X0 + 0x6E0]
	0x01D47DD8 BL 0x1C16CF4
	0x01D47DDC ADRP X0, 0x23AC000
	0x01D47DE0 LDR X0, [X0 + 0xBB0]
	0x01D47DE4 BL 0x1C16CF4
	0x01D47DE8 ADRP X0, 0x23AD000
	0x01D47DEC LDR X0, [X0 + 0x6E8]
	0x01D47DF0 BL 0x1C16CF4
	0x01D47DF4 ADRP X0, 0x23AC000
	0x01D47DF8 LDR X0, [X0 + 0xBC8]
	0x01D47DFC BL 0x1C16CF4
	0x01D47E00 MOVZ W8, 0x1
	0x01D47E04 STRB W8, [X23 + 0x777]
	0x01D47E08 LDR X0, [X24]
	0x01D47E0C BL 0x1C16F10
	0x01D47E10 LDR X1, [X21]
	0x01D47E14 MOV X21, X0
	0x01D47E18 BL 0x2AA4804
	0x01D47E1C LDR X8, [X20]
	0x01D47E20 LDR X0, [X22]
	0x01D47E24 ADD X1, X31, 0xC
	0x01D47E28 CMP X8, 0x0
	0x01D47E2C CSET W8, NE
	0x01D47E30 STRB W8, [X31 + 0xC]
	0x01D47E34 BL 0x1C16E04
	0x01D47E38 CBZ X21, 0x1D47F20
	0x01D47E3C ADRP X8, 0x23AC000
	0x01D47E40 ADRP X23, 0x23AC000
	0x01D47E44 LDR X8, [X8 + 0xBB0]
	0x01D47E48 LDR X23, [X23 + 0x710]
	0x01D47E4C ADRP X24, 0x23AC000
	0x01D47E50 ADRP X25, 0x23AC000
	0x01D47E54 ADRP X26, 0x23AC000
	0x01D47E58 LDR X24, [X24 + 0xBC8]
	0x01D47E5C LDR X25, [X25 + 0xA88]
	0x01D47E60 LDR X26, [X26 + 0xBA8]
	0x01D47E64 LDR X1, [X8]
	0x01D47E68 LDR X3, [X23]
	0x01D47E6C ADRP X27, 0x23AD000
	0x01D47E70 ADRP X28, 0x23AC000
	0x01D47E74 ADRP X22, 0x23AD000
	0x01D47E78 LDR X27, [X27 + 0x6E8]
	0x01D47E7C LDR X28, [X28 + 0xB50]
	0x01D47E80 LDR X22, [X22 + 0x6E0]
	0x01D47E84 MOV X2, X0
	0x01D47E88 MOV X0, X21
	0x01D47E8C BL 0x2AA5098
	0x01D47E90 BL 0x1D38C70
	0x01D47E94 LDR X1, [X24]
	0x01D47E98 LDR X3, [X23]
	0x01D47E9C MOV X2, X0
	0x01D47EA0 MOV X0, X21
	0x01D47EA4 BL 0x2AA5098
	0x01D47EA8 LDR W8, [X20 + 0x8]
	0x01D47EAC LDR X0, [X25]
	0x01D47EB0 ADD X1, X31, 0x8
	0x01D47EB4 STR W8, [X31 + 0x8]
	0x01D47EB8 BL 0x1C16E04
	0x01D47EBC LDR X1, [X26]
	0x01D47EC0 LDR X3, [X23]
	0x01D47EC4 MOV X2, X0
	0x01D47EC8 MOV X0, X21
	0x01D47ECC BL 0x2AA5098
	0x01D47ED0 LDR X1, [X27]
	0x01D47ED4 LDR X3, [X23]
	0x01D47ED8 MOV X0, X21
	0x01D47EDC MOV X2, X19
	0x01D47EE0 BL 0x2AA5098
	0x01D47EE4 LDR X0, [X28]
	0x01D47EE8 LDR W8, [X0 + 0xE0]
	0x01D47EEC CBNZ W8, 0x1D47EF4
	0x01D47EF0 BL 0x1C16DFC
	0x01D47EF4 LDR X0, [X22]
	0x01D47EF8 MOV X1, X21
	0x01D47EFC MOV X2, X31
	0x01D47F00 BL 0x1DC4DD0
	0x01D47F04 LDP X20, X19, [X31 + 0x50]
	0x01D47F08 LDP X22, X21, [X31 + 0x40]
	0x01D47F0C LDP X24, X23, [X31 + 0x30]
	0x01D47F10 LDP X26, X25, [X31 + 0x20]
	0x01D47F14 LDP X28, X27, [X31 + 0x10]
	0x01D47F18 LDR X30, [X31], #0x60
	0x01D47F1C RET
	0x01D47F20 BL 0x1C16F20
	0x01D47F24 LDR X8, [X0]
	0x01D47F28 CMP X8, 0x0
	0x01D47F2C CSET W0, NE
	0x01D47F30 RET
	0x01D47F34 MOV W8, W0
	0x01D47F38 MOV W0, W31
	0x01D47F3C CBZ W8, 0x1D47F48
	0x01D47F40 CMP W8, 0xC
	0x01D47F44 B.NE 0x1D47F4C
	0x01D47F48 RET
	0x01D47F4C MOVZ W0, 0x1
	0x01D47F50 RET
	0x01D47F54 STP X30, X21, [X31 - 0x20]!
	0x01D47F58 STP X20, X19, [X31 + 0x10]
	0x01D47F5C ADRP X21, 0x2691000
	0x01D47F60 LDRB W8, [X21 + 0x778]
	0x01D47F64 MOV X19, X1
	0x01D47F68 MOV X20, X0
	0x01D47F6C TBNZ X8, 0x0, 0x1D47FA8
	0x01D47F70 ADRP X0, 0x23AD000
	0x01D47F74 LDR X0, [X0 + 0x6F0]
	0x01D47F78 BL 0x1C16CF4
	0x01D47F7C ADRP X0, 0x23AD000
	0x01D47F80 LDR X0, [X0 + 0x6F8]
	0x01D47F84 BL 0x1C16CF4
	0x01D47F88 ADRP X0, 0x23AD000
	0x01D47F8C LDR X0, [X0 + 0x700]
	0x01D47F90 BL 0x1C16CF4
	0x01D47F94 ADRP X0, 0x23AD000
	0x01D47F98 LDR X0, [X0 + 0x708]
	0x01D47F9C BL 0x1C16CF4
	0x01D47FA0 MOVZ W8, 0x1
	0x01D47FA4 STRB W8, [X21 + 0x778]
	0x01D47FA8 CBZ X20, 0x1D47FF4
	0x01D47FAC ADRP X8, 0x23AD000
	0x01D47FB0 LDR X8, [X8 + 0x6F0]
	0x01D47FB4 LDR X9, [X8]
	0x01D47FB8 LDR X8, [X20]
	0x01D47FBC CMP X8, X9
	0x01D47FC0 B.EQ 0x1D48014
	0x01D47FC4 ADRP X9, 0x23AD000
	0x01D47FC8 LDR X9, [X9 + 0x6F8]
	0x01D47FCC LDRB W11, [X8 + 0x130]
	0x01D47FD0 LDR X9, [X9]
	0x01D47FD4 LDRB W10, [X9 + 0x130]
	0x01D47FD8 CMP W11, W10
	0x01D47FDC B.CC 0x1D47FF4
	0x01D47FE0 LDR X11, [X8 + 0xC8]
	0x01D47FE4 ADD X10, X11, X10, 0x3, LSL
	0x01D47FE8 LDUR X10, [X10 - 0x8]
	0x01D47FEC CMP X10, X9
	0x01D47FF0 B.EQ 0x1D48058
	0x01D47FF4 LDR W8, [X19 + 0x8]
	0x01D47FF8 CBZ W8, 0x1D48004
	0x01D47FFC MOV W0, W31
	0x01D48000 B 0x1D480A0
	0x01D48004 MOV W0, W31
	0x01D48008 MOVZ W8, 0x2
	0x01D4800C STR W8, [X19 + 0x8]
	0x01D48010 B 0x1D480A0
	0x01D48014 LDP X8, X1, [X9 + 0x188]
	0x01D48018 MOV X0, X20
	0x01D4801C BLR X8
	0x01D48020 CBZ X0, 0x1D480C0
	0x01D48024 ADRP X8, 0x23AC000
	0x01D48028 LDR X8, [X8 + 0x700]
	0x01D4802C MOV X2, X31
	0x01D48030 LDR X1, [X8]
	0x01D48034 BL 0x322BD1C
	0x01D48038 TBZ X0, 0x0, 0x1D48044
	0x01D4803C MOVZ W8, 0xC
	0x01D48040 B 0x1D48084
	0x01D48044 LDR W8, [X19 + 0x8]
	0x01D48048 CBNZ W8, 0x1D47FFC
	0x01D4804C MOV W0, W31
	0x01D48050 MOVZ W8, 0x9
	0x01D48054 B 0x1D4800C
	0x01D48058 LDP X9, X1, [X8 + 0x188]
	0x01D4805C MOV X0, X20
	0x01D48060 BLR X9
	0x01D48064 CBZ X0, 0x1D480C0
	0x01D48068 ADRP X8, 0x23AC000
	0x01D4806C LDR X8, [X8 + 0x708]
	0x01D48070 MOV X2, X31
	0x01D48074 LDR X1, [X8]
	0x01D48078 BL 0x322BD1C
	0x01D4807C TBZ X0, 0x0, 0x1D480AC
	0x01D48080 MOVZ W8, 0x8
	0x01D48084 STR W8, [X19 + 0x8]
	0x01D48088 LDR X8, [X20]
	0x01D4808C MOV X0, X20
	0x01D48090 LDP X9, X1, [X8 + 0x188]
	0x01D48094 BLR X9
	0x01D48098 STR X0, [X19 + 0x10]
	0x01D4809C MOVZ W0, 0x1
	0x01D480A0 LDP X20, X19, [X31 + 0x10]
	0x01D480A4 LDP X30, X21, [X31], #0x20
	0x01D480A8 RET
	0x01D480AC LDR W8, [X19 + 0x8]
	0x01D480B0 CBNZ W8, 0x1D47FFC
	0x01D480B4 MOV W0, W31
	0x01D480B8 MOVZ W8, 0xA
	0x01D480BC B 0x1D4800C
	0x01D480C0 BL 0x1C16F20
	0x01D480C4 LDR W8, [X0 + 0x8]
	0x01D480C8 CMP W8, 0x0
	0x01D480CC CSET W0, NE
	0x01D480D0 RET
	0x01D480D4 MOV X1, X31
	0x01D480D8 B 0x33BDD8C
	0x01D480DC STP X30, X21, [X31 - 0x20]!
	0x01D480E0 STP X20, X19, [X31 + 0x10]
	0x01D480E4 ADRP X21, 0x2690000
	0x01D480E8 LDRB W8, [X21 + 0x779]
	0x01D480EC MOV X20, X1
	0x01D480F0 MOV X19, X0
	0x01D480F4 TBNZ X8, 0x0, 0x1D4810C
	0x01D480F8 ADRP X0, 0x23AC000
	0x01D480FC LDR X0, [X0 + 0x710]
	0x01D48100 BL 0x1C16CF4
	0x01D48104 MOVZ W8, 0x1
	0x01D48108 STRB W8, [X21 + 0x779]
	0x01D4810C CBZ X20, 0x1D48184
	0x01D48110 ADRP X10, 0x23AC000
	0x01D48114 LDR X8, [X20]
	0x01D48118 LDR X10, [X10 + 0x710]
	0x01D4811C LDRH W9, [X8 + 0x12E]
	0x01D48120 LDR X1, [X10]
	0x01D48124 CBZ X9, 0x1D48148
	0x01D48128 LDR X10, [X8 + 0xB0]
	0x01D4812C ADD X10, X10, 0x8
	0x01D48130 LDUR X11, [X10 - 0x8]
	0x01D48134 CMP X11, X1
	0x01D48138 B.EQ 0x1D48158
	0x01D4813C SUBS X9, X9, 0x1
	0x01D48140 ADD X10, X10, 0x10
	0x01D48144 B.NE 0x1D48130
	0x01D48148 MOV X0, X20
	0x01D4814C MOV W2, W31
	0x01D48150 BL 0x1C5C788
	0x01D48154 B 0x1D48164
	0x01D48158 LDRSW X9, [X10]
	0x01D4815C ADD X8, X8, X9, 0x4, LSL
	0x01D48160 ADD X0, X8, 0x138
	0x01D48164 LDP X8, X1, [X0]
	0x01D48168 MOV X0, X20
	0x01D4816C BLR X8
	0x01D48170 LDR X1, [X19 + 0x10]
	0x01D48174 LDP X20, X19, [X31 + 0x10]
	0x01D48178 MOV X2, X31
	0x01D4817C LDP X30, X21, [X31], #0x20
	0x01D48180 B 0x321BA08
	0x01D48184 BL 0x1C16F20
	0x01D48188 MOV X1, X31
	0x01D4818C B 0x33BDD8C
	0x01D48190 SUB X31, X31, 0x70
	0x01D48194 STR X30, [X31 + 0x10]
	0x01D48198 STP X28, X27, [X31 + 0x20]
	0x01D4819C STP X26, X25, [X31 + 0x30]
	0x01D481A0 STP X24, X23, [X31 + 0x40]
	0x01D481A4 STP X22, X21, [X31 + 0x50]
	0x01D481A8 STP X20, X19, [X31 + 0x60]
	0x01D481AC ADRP X21, 0x2690000
	0x01D481B0 LDRB W8, [X21 + 0x77A]
	0x01D481B4 MOV X20, X1
	0x01D481B8 MOV X19, X0
	0x01D481BC TBNZ X8, 0x0, 0x1D4827C
	0x01D481C0 ADRP X0, 0x23AB000
	0x01D481C4 LDR X0, [X0 + 0xB58]
	0x01D481C8 BL 0x1C16CF4
	0x01D481CC ADRP X0, 0x23AB000
	0x01D481D0 LDR X0, [X0 + 0x710]
	0x01D481D4 BL 0x1C16CF4
	0x01D481D8 ADRP X0, 0x23AB000
	0x01D481DC LDR X0, [X0 + 0x718]
	0x01D481E0 BL 0x1C16CF4
	0x01D481E4 ADRP X0, 0x23AB000
	0x01D481E8 LDR X0, [X0 + 0x720]
	0x01D481EC BL 0x1C16CF4
	0x01D481F0 ADRP X0, 0x23AB000
	0x01D481F4 LDR X0, [X0 + 0x788]
	0x01D481F8 BL 0x1C16CF4
	0x01D481FC ADRP X0, 0x23AC000
	0x01D48200 LDR X0, [X0 + 0x468]
	0x01D48204 BL 0x1C16CF4
	0x01D48208 ADRP X0, 0x23AC000
	0x01D4820C LDR X0, [X0 + 0x470]
	0x01D48210 BL 0x1C16CF4
	0x01D48214 ADRP X0, 0x23AC000
	0x01D48218 LDR X0, [X0 + 0x478]
	0x01D4821C BL 0x1C16CF4
	0x01D48220 ADRP X0, 0x23AC000
	0x01D48224 LDR X0, [X0 + 0x718]
	0x01D48228 BL 0x1C16CF4
	0x01D4822C ADRP X0, 0x23AC000
	0x01D48230 LDR X0, [X0 + 0x720]
	0x01D48234 BL 0x1C16CF4
	0x01D48238 ADRP X0, 0x23AC000
	0x01D4823C LDR X0, [X0 + 0x728]
	0x01D48240 BL 0x1C16CF4
	0x01D48244 ADRP X0, 0x23AC000
	0x01D48248 LDR X0, [X0 + 0x730]
	0x01D4824C BL 0x1C16CF4
	0x01D48250 ADRP X0, 0x23AC000
	0x01D48254 LDR X0, [X0 + 0x738]
	0x01D48258 BL 0x1C16CF4
	0x01D4825C ADRP X0, 0x23AC000
	0x01D48260 LDR X0, [X0 + 0x740]
	0x01D48264 BL 0x1C16CF4
	0x01D48268 ADRP X0, 0x23AC000
	0x01D4826C LDR X0, [X0 + 0x748]
	0x01D48270 BL 0x1C16CF4
	0x01D48274 MOVZ W8, 0x1
	0x01D48278 STRB W8, [X21 + 0x77A]
	0x01D4827C CBZ X20, 0x1D4855C
	0x01D48280 ADRP X21, 0x23AB000
	0x01D48284 ADRP X22, 0x23AC000
	0x01D48288 ADRP X23, 0x23AC000
	0x01D4828C ADRP X26, 0x23AB000
	0x01D48290 ADRP X25, 0x23AC000
	0x01D48294 ADRP X24, 0x23AC000
	0x01D48298 LDR X21, [X21 + 0xB58]
	0x01D4829C LDR X22, [X22 + 0x468]
	0x01D482A0 LDR X23, [X23 + 0x748]
	0x01D482A4 LDR X26, [X26 + 0x788]
	0x01D482A8 LDR X25, [X25 + 0x718]
	0x01D482AC LDR X24, [X24 + 0x740]
	0x01D482B0 MOV X0, X20
	0x01D482B4 MOV X1, X31
	0x01D482B8 BL 0x34D072C
	0x01D482BC LDR X8, [X21]
	0x01D482C0 AND W9, W0, 0x1
	0x01D482C4 ADD X1, X31, 0x1C
	0x01D482C8 STRB W9, [X31 + 0x1C]
	0x01D482CC MOV X0, X8
	0x01D482D0 BL 0x1C16E04
	0x01D482D4 MOV X21, X0
	0x01D482D8 LDR W8, [X20 + 0x10]
	0x01D482DC LDR X0, [X22]
	0x01D482E0 ADD X1, X31, 0x8
	0x01D482E4 STR W8, [X31 + 0x8]
	0x01D482E8 BL 0x1C16E04
	0x01D482EC LDR X8, [X23]
	0x01D482F0 MOV X2, X0
	0x01D482F4 MOV X1, X21
	0x01D482F8 MOV X3, X31
	0x01D482FC MOV X0, X8
	0x01D48300 BL 0x3227BD4
	0x01D48304 LDR X8, [X26]
	0x01D48308 MOV X21, X0
	0x01D4830C LDR W9, [X8 + 0xE0]
	0x01D48310 CBNZ W9, 0x1D4831C
	0x01D48314 MOV X0, X8
	0x01D48318 BL 0x1C16DFC
	0x01D4831C LDR X3, [X25]
	0x01D48320 LDR X4, [X24]
	0x01D48324 MOVZ W0, 0x800
	0x01D48328 MOVZ W5, 0xCB
	0x01D4832C MOV X1, X21
	0x01D48330 MOV X2, X31
	0x01D48334 MOV X6, X31
	0x01D48338 BL 0x35C2158
	0x01D4833C MOV X0, X20
	0x01D48340 MOV X1, X31
	0x01D48344 BL 0x34D072C
	0x01D48348 TBZ X0, 0x0, 0x1D48374
	0x01D4834C LDR X8, [X20]
	0x01D48350 MOV X0, X20
	0x01D48354 LDP X9, X1, [X8 + 0x178]
	0x01D48358 BLR X9
	0x01D4835C ADRP X8, 0x23AC000
	0x01D48360 LDR X8, [X8 + 0x720]
	0x01D48364 LDR X8, [X8]
	0x01D48368 CBZ X0, 0x1D483B0
	0x01D4836C LDR X1, [X0 + 0x18]
	0x01D48370 B 0x1D483B4

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X19, 0x2692000
	015 Move W8, [X19+1904]
	016 Move X20, X1
	017 Move X25, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {105}
	022 Move X0, 0x23AD000
	023 Move X0, [X0+2904]
	024 Call 0x1C17CF4
	025 Move X0, 0x23AE000
	026 Move X0, [X0+1040]
	027 Call 0x1C17CF4
	028 Move X0, 0x23AE000
	029 Move X0, [X0+1488]
	030 Call 0x1C17CF4
	031 Move X0, 0x23AD000
	032 Move X0, [X0+1808]
	033 Call 0x1C17CF4
	034 Move X0, 0x23AD000
	035 Move X0, [X0+1816]
	036 Call 0x1C17CF4
	037 Move X0, 0x23AD000
	038 Move X0, [X0+1824]
	039 Call 0x1C17CF4
	040 Move X0, 0x23AD000
	041 Move X0, [X0+3584]
	042 Call 0x1C17CF4
	043 Move X0, 0x23AE000
	044 Move X0, [X0+1048]
	045 Call 0x1C17CF4
	046 Move X0, 0x23AD000
	047 Move X0, [X0+3608]
	048 Call 0x1C17CF4
	049 Move X0, 0x23AD000
	050 Move X0, [X0+1880]
	051 Call 0x1C17CF4
	052 Move X0, 0x23AD000
	053 Move X0, [X0+1928]
	054 Call 0x1C17CF4
	055 Move X0, 0x23AE000
	056 Move X0, [X0+1128]
	057 Call 0x1C17CF4
	058 Move X0, 0x23AE000
	059 Move X0, [X0+1496]
	060 Call 0x1C17CF4
	061 Move X0, 0x23AE000
	062 Move X0, [X0+1136]
	063 Call 0x1C17CF4
	064 Move X0, 0x23AE000
	065 Move X0, [X0+1144]
	066 Call 0x1C17CF4
	067 Move X0, 0x23AD000
	068 Move X0, [X0+2760]
	069 Call 0x1C17CF4
	070 Move X0, 0x23AE000
	071 Move X0, [X0+1152]
	072 Call 0x1C17CF4
	073 Move X0, 0x23AE000
	074 Move X0, [X0+136]
	075 Call 0x1C17CF4
	076 Move X0, 0x23AE000
	077 Move X0, [X0+1504]
	078 Call 0x1C17CF4
	079 Move X0, 0x23AD000
	080 Move X0, [X0+2984]
	081 Call 0x1C17CF4
	082 Move X0, 0x23AE000
	083 Move X0, [X0+1512]
	084 Call 0x1C17CF4
	085 Move X0, 0x23AE000
	086 Move X0, [X0+1520]
	087 Call 0x1C17CF4
	088 Move X0, 0x23AE000
	089 Move X0, [X0+1528]
	090 Call 0x1C17CF4
	091 Move X0, 0x23AE000
	092 Move X0, [X0+1192]
	093 Call 0x1C17CF4
	094 Move X0, 0x23AE000
	095 Move X0, [X0+1536]
	096 Call 0x1C17CF4
	097 Move X0, 0x23AE000
	098 Move X0, [X0+1544]
	099 Call 0x1C17CF4
	100 Move X0, 0x23AE000
	101 Move X0, [X0+1552]
	102 Call 0x1C17CF4
	103 Move W8, 1
	104 Move [X19+1904], W8
	105 Compare X20, 0
	106 JumpIfEqual {471}
	107 Move X0, X20
	108 Move X1, X31
	109 Call Message.get_IsError, X0
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfNotEqual {181}
	114 Move X0, X20
	115 Move X1, X31
	116 Call Message.get_IsError, X0
	117 Move X8, 0x23AD000
	118 Move X8, [X8+2904]
	119 And W9, W0, 1
	120 Add X1, X31, 28
	121 Move [X31+28], W9
	122 Move X8, [X8]
	123 Move X0, X8
	124 Call 0x1C17E04
	125 Move X9, 0x23AE000
	126 Move W8, [X20+16]
	127 Move X9, [X9+1128]
	128 Move X21, X0
	129 Add X1, X31, 16
	130 Move [X31+16], W8
	131 Move X0, [X9]
	132 Call 0x1C17E04
	133 Move X8, 0x23AE000
	134 Move X8, [X8+1504]
	135 Move X2, X0
	136 Move X1, X21
	137 Move X3, X31
	138 Move X8, [X8]
	139 Move X0, X8
	140 Call String.Format, X0, X1, X2
	141 Move X8, 0x23AD000
	142 Move X8, [X8+1824]
	143 Move X21, X0
	144 Move X8, [X8]
	145 Move X0, X8
	146 Call 0x1C17F10
	147 Move X8, 0x23AD000
	148 Move X8, [X8+1816]
	149 Move X22, X0
	150 Move X1, [X8]
	151 Call Dictionary`2<Object, Object>..ctor, X0
	152 Compare X22, 0
	153 JumpIfEqual {471}
	154 Move X8, 0x23AE000
	155 Move X19, 0x23AD000
	156 Move X2, [X25+16]
	157 Move X8, [X8+1512]
	158 Move X19, [X19+1808]
	159 Move X0, X22
	160 Move X1, [X8]
	161 Move X3, [X19]
	162 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	163 Move X8, [X20]
	164 Move X0, X20
	165 Move X9, [X8+376]
	166 Move X1, [X8+384]
	167 NotImplemented "Instruction BLR not yet implemented."
	168 Move X8, 0x23AD000
	169 Move X8, [X8+2984]
	170 Move X23, [X8]
	171 Compare X0, 0
	172 JumpIfEqual {355}
	173 Move X8, 0x23AE000
	174 Move W1, [X0+16]
	175 Move X8, [X8+1136]
	176 Add X0, X31, 16
	177 Move [X31+16], X31
	178 Move X2, [X8]
	179 Call Nullable`1<Int32>..ctor, X0, X1
	180 Move X8, [X31+16]
	181 Move X0, [X20+40]
	182 Move [X25+32], X0
	183 Compare X0, 0
	184 JumpIfEqual {471}
	185 Move X8, 0x23AE000
	186 Move X8, [X8+1488]
	187 Move X1, [X8]
	188 Call 0x29B559C, X0
	189 Move X8, 0x23AD000
	190 Move X8, [X8+1880]
	191 Move [X31+16], W0
	192 Add X1, X31, 16
	193 Move X8, [X8]
	194 Move X0, X8
	195 Call 0x1C17E04
	196 Move X8, 0x23AE000
	197 Move X8, [X8+1528]
	198 Move X1, X0
	199 Move X2, X31
	200 Move X8, [X8]
	201 Move X0, X8
	202 Call String.Format, X0, X1
	203 Move X22, 0x23AD000
	204 Move X22, [X22+1928]
	205 Move X20, X0
	206 Move X8, [X22]
	207 Move W9, [X8+224]
	208 Compare W9, 0
	209 JumpIfNotEqual {212}
	210 Move X0, X8
	211 Call 0x1C17DFC
	212 Move X23, 0x23AE000
	213 Move X24, 0x23AE000
	214 Move X23, [X23+1536]
	215 Move X24, [X24+136]
	216 Move W0, 0x4000
	217 Move W5, 72
	218 Move X3, [X23]
	219 Move X4, [X24]
	220 Move X1, X20
	221 Move X2, X31
	222 Move X6, X31
	223 Call Log.Info, X0, X1, X2, X3, X4, X5
	224 Move X0, [X25+32]
	225 Compare X0, 0
	226 JumpIfEqual {471}
	227 Move [X31+8], X25
	228 Move X8, 0x23AE000
	229 Move X8, [X8+1040]
	230 Move X1, [X8]
	231 Call 0x29B57A4, X0
	232 Move X20, X0
	233 Compare X0, 0
	234 JumpIfEqual {472}
	235 Move X25, 0x23AD000
	236 Move X26, 0x23AE000
	237 Move X27, 0x23AD000
	238 Move X28, 0x23AE000
	239 Move X29, 0x23AE000
	240 Move X19, 0x23AE000
	241 Move X25, [X25+3608]
	242 Move X26, [X26+1048]
	243 Move X27, [X27+2760]
	244 Move X28, [X28+1520]
	245 Move X29, [X29+1552]
	246 Move X19, [X19+1544]
	247 Move X8, [X20]
	248 Move X1, [X25]
	249 NotImplemented "Instruction LDRH not yet implemented."
	250 Compare X9, 0
	251 JumpIfEqual {258}
	252 Move X10, [X8+176]
	253 Add X10, X10, 8
	254 NotImplemented "Instruction LDUR not yet implemented."
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Subtract X9, X9, 1
	257 Add X10, X10, 16
	258 Move X0, X20
	259 Move W2, W31
	260 Call 0x1C5D788
	261 NotImplemented "Instruction LDRSW not yet implemented."
	262 Add X8, X8, X9
	263 Add X0, X8, 312
	264 Move X8, [X0]
	265 Move X1, [X0+8]
	266 Move X0, X20
	267 NotImplemented "Instruction BLR not yet implemented."
	268 Move TEMP, X0
	269 And TEMP, TEMP, 1
	270 Compare TEMP, 1
	271 JumpIfNotEqual {334}
	272 Move X8, [X20]
	273 Move X1, [X26]
	274 NotImplemented "Instruction LDRH not yet implemented."
	275 Compare X9, 0
	276 JumpIfEqual {283}
	277 Move X10, [X8+176]
	278 Add X10, X10, 8
	279 NotImplemented "Instruction LDUR not yet implemented."
	280 NotImplemented "Instruction CMP not yet implemented."
	281 Subtract X9, X9, 1
	282 Add X10, X10, 16
	283 Move X0, X20
	284 Move W2, W31
	285 Call 0x1C5D788
	286 NotImplemented "Instruction LDRSW not yet implemented."
	287 Add X8, X8, X9
	288 Add X0, X8, 312
	289 Move X8, [X0]
	290 Move X1, [X0+8]
	291 Move X0, X20
	292 NotImplemented "Instruction BLR not yet implemented."
	293 Move X21, X0
	294 Move X0, [X27]
	295 Move W1, 5
	296 Call 0x1C17D6C
	297 Compare X0, 0
	298 JumpIfEqual {467}
	299 Move W8, [X0+24]
	300 Compare W8, 0
	301 JumpIfEqual {468}
	302 Move X9, [X28]
	303 Move [X0+32], X9
	304 Compare X21, 0
	305 JumpIfEqual {465}
	306 NotImplemented "Instruction CMP not yet implemented."
	307 Move X9, [X21+32]
	308 NotImplemented "Instruction CMP not yet implemented."
	309 Move [X0+40], X9
	310 Move X9, [X29]
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Move [X0+48], X9
	313 Move X9, [X21+40]
	314 NotImplemented "Instruction CMP not yet implemented."
	315 Move [X0+56], X9
	316 Move X8, [X19]
	317 Move [X0+64], X8
	318 Move X1, X31
	319 Call String.Concat, X0
	320 Move X21, X0
	321 Move X0, [X22]
	322 Move W8, [X0+224]
	323 Compare W8, 0
	324 JumpIfNotEqual {326}
	325 Call 0x1C17DFC
	326 Move X3, [X23]
	327 Move X4, [X24]
	328 Move W0, 0x4000
	329 Move W5, 75
	330 Move X1, X21
	331 Move X2, X31
	332 Move X6, X31
	333 Call Log.Info, X0, X1, X2, X3, X4, X5
	334 Move X25, [X31+8]
	335 Move X21, X31
	336 Move W19, 9
	337 Compare X20, 0
	338 JumpIfEqual {443}
	339 Move X10, 0x23AC000
	340 Move X8, [X20]
	341 Move X10, [X10+3584]
	342 NotImplemented "Instruction LDRH not yet implemented."
	343 Move X1, [X10]
	344 Compare X9, 0
	345 JumpIfEqual {352}
	346 Move X10, [X8+176]
	347 Add X10, X10, 8
	348 NotImplemented "Instruction LDUR not yet implemented."
	349 NotImplemented "Instruction CMP not yet implemented."
	350 Subtract X9, X9, 1
	351 Add X10, X10, 16
	352 Move X0, X20
	353 Move W2, W31
	354 Call 0x1C5D788
	355 Move X8, X31
	356 Move X24, 0x23AD000
	357 Move X24, [X24+1144]
	358 Add X1, X31, 16
	359 Move [X31+16], X8
	360 Move X0, [X24]
	361 Call 0x1C17E04
	362 Move X3, [X19]
	363 Move X2, X0
	364 Move X0, X22
	365 Move X1, X23
	366 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	367 Move X8, [X20]
	368 Move X0, X20
	369 Move X9, [X8+376]
	370 Move X1, [X8+384]
	371 NotImplemented "Instruction BLR not yet implemented."
	372 Move X8, 0x23AD000
	373 Move X8, [X8+1192]
	374 Move X23, [X8]
	375 Compare X0, 0
	376 JumpIfEqual {385}
	377 Move X8, 0x23AD000
	378 Move W1, [X0+20]
	379 Move X8, [X8+1136]
	380 Add X0, X31, 16
	381 Move [X31+16], X31
	382 Move X2, [X8]
	383 Call Nullable`1<Int32>..ctor, X0, X1
	384 Move X8, [X31+16]
	385 Move X8, X31
	386 Move X0, [X24]
	387 Add X1, X31, 16
	388 Move [X31+16], X8
	389 Call 0x1C17E04
	390 Move X3, [X19]
	391 Move X2, X0
	392 Move X0, X22
	393 Move X1, X23
	394 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	395 Move X8, [X20]
	396 Move X0, X20
	397 Move X9, [X8+376]
	398 Move X1, [X8+384]
	399 NotImplemented "Instruction BLR not yet implemented."
	400 Move X8, 0x23AD000
	401 Move X8, [X8+1152]
	402 Move X1, [X8]
	403 Compare X0, 0
	404 JumpIfEqual {406}
	405 Move X2, [X0+24]
	406 Move X2, X31
	407 Move X3, [X19]
	408 Move X0, X22
	409 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	410 Move X8, 0x23AC000
	411 Move X8, [X8+1928]
	412 Move X0, [X8]
	413 Move W8, [X0+224]
	414 Compare W8, 0
	415 JumpIfNotEqual {417}
	416 Call 0x1C17DFC
	417 Move X8, 0x23AD000
	418 Move X9, 0x23AD000
	419 Move X8, [X8+1536]
	420 Move X9, [X9+136]
	421 Move W0, 0x4000
	422 Move W5, 60
	423 Move X3, [X8]
	424 Move X4, [X9]
	425 Move X1, X21
	426 Move X2, X22
	427 Move X6, X31
	428 Call Log.Error, X0, X1, X2, X3, X4, X5
	429 Move X0, [X25+24]
	430 Compare X0, 0
	431 JumpIfEqual {471}
	432 Move X8, [X0]
	433 Move X9, [X8+440]
	434 Move X1, [X8+448]
	435 NotImplemented "Instruction BLR not yet implemented."
	436 NotImplemented "Instruction LDRSW not yet implemented."
	437 Add X8, X8, X9
	438 Add X0, X8, 312
	439 Move X8, [X0]
	440 Move X1, [X0+8]
	441 Move X0, X20
	442 NotImplemented "Instruction BLR not yet implemented."
	443 Compare X21, 0
	444 JumpIfNotEqual {473}
	445 NotImplemented "Instruction CMP not yet implemented."
	446 Compare W19, 0
	447 JumpIfNotEqual {450}
	448 Move W8, 1
	449 Move [X25+40], W8
	450 Move X20, [X31+112]
	451 Move X19, [X31+120]
	452 Move X22, [X31+96]
	453 Move X21, [X31+104]
	454 Move X24, [X31+80]
	455 Move X23, [X31+88]
	456 Move X26, [X31+64]
	457 Move X25, [X31+72]
	458 Move X28, [X31+48]
	459 Move X27, [X31+56]
	460 Move X29, [X31+32]
	461 Move X30, [X31+40]
	462 Add X31, X31, 128
	463 Return 
	464 Call 0x1C17F28
	465 Call 0x1C17F20
	466 Call 0x1C17F28
	467 Call 0x1C17F20
	468 Call 0x1C17F28
	469 Call 0x1C17F28
	470 Call 0x1C17F28
	471 Call 0x1C17F20
	472 Call 0x1C17F20
	473 Move X0, X21
	474 Call 0x1C17F18
	475 Move X25, [X31+8]
	476 Move X22, X0
	477 NotImplemented "Instruction CMP not yet implemented."
	478 Move X0, X22
	479 Call 0x3EB2AD0
	480 Move X21, [X0]
	481 Call 0x3EB2AE0
	482 Move W19, W31
	483 Compare X20, 0
	484 JumpIfNotEqual {339}
	485 Move X21, X31
	486 Move X22, X0
	487 Compare X20, 0
	488 JumpIfEqual {512}
	489 Move X10, 0x23AC000
	490 Move X8, [X20]
	491 Move X10, [X10+3584]
	492 NotImplemented "Instruction LDRH not yet implemented."
	493 Move X1, [X10]
	494 Compare X9, 0
	495 JumpIfEqual {502}
	496 Move X10, [X8+176]
	497 Add X10, X10, 8
	498 NotImplemented "Instruction LDUR not yet implemented."
	499 NotImplemented "Instruction CMP not yet implemented."
	500 Subtract X9, X9, 1
	501 Add X10, X10, 16
	502 Move X0, X20
	503 Move W2, W31
	504 Call 0x1C5D788
	505 NotImplemented "Instruction LDRSW not yet implemented."
	506 Add X8, X8, X9
	507 Add X0, X8, 312
	508 Move X8, [X0]
	509 Move X1, [X0+8]
	510 Move X0, X20
	511 NotImplemented "Instruction BLR not yet implemented."
	512 Compare X21, 0
	513 JumpIfNotEqual {516}
	514 Move X0, X22
	515 Call 0x1D2D690
	516 Move X0, X21
	517 Call 0x1C17F18
	518 Call 0x1991590

