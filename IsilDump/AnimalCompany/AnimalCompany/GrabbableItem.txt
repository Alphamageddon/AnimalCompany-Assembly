Type: AnimalCompany.GrabbableItem

Method: AnimalCompany.ItemData get_itemData()

Disassembly:
	0x01C9F0F8 B 0x1C9EFB0
	0x01C9F0FC MOV X0, X31

ISIL:
	001 Move X0, [X0+128]
	002 Return X0

Method: System.Boolean IsContainsType(AnimalCompany.ItemData/Type type, AnimalCompany.ItemData/Type containedType)

Disassembly:
	0x01C9F100 LDR W1, [X19 + 0x68]
	0x01C9F104 MOVZ W2, 0x1
	0x01C9F108 MOV X3, X31

ISIL:
	001 NotImplemented "Instruction BICS not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: AnimalCompany.GrabbableItem/TimeoutAction get__timeoutAction()

Disassembly:
	0x01C9F10C BL 0x1DA8258
	0x01C9F110 AND W8, W21, 0x1
	0x01C9F114 STUR X0, [X22 + 0x1C]
	0x01C9F118 STUR X20, [X22 + 0x24]
	0x01C9F11C STR W8, [X22 + 0x2C]
	0x01C9F120 CBZ X22, 0x1C9F14C
	0x01C9F124 MOVZ W8, 0xA0
	0x01C9F128 STR W8, [X22 + 0xC]
	0x01C9F12C LDR X0, [X19 + 0x38]
	0x01C9F130 CBZ X0, 0x1C9F14C

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+128]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move W8, [X8+40]
	006 And W31, W8, 4
	007 Move W8, 1
	008 NotImplemented "Instruction CINC not yet implemented."
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1B6FA1C

Method: AnimalCompany.GrabbableItem/TimeoutAction get__salesAction()

Disassembly:
	0x01C9F144 LDP X30, X23, [X31], #0x30
	0x01C9F148 B 0x1D8A710
	0x01C9F14C BL 0x1B6EA1C
	0x01C9F150 SUB X31, X31, 0x90
	0x01C9F154 STP D15, D14, [X31 + 0x20]
	0x01C9F158 STP D13, D12, [X31 + 0x30]
	0x01C9F15C STP D11, D10, [X31 + 0x40]
	0x01C9F160 STP D9, D8, [X31 + 0x50]
	0x01C9F164 STP X30, X23, [X31 + 0x60]
	0x01C9F168 STP X22, X21, [X31 + 0x70]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+128]
	003 Compare X8, 0
	004 JumpIfEqual {13}
	005 Move W8, [X8+40]
	006 And W31, W8, 14
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Move W0, W8
	009 ShiftRight W0, 31
	010 And W0, W0, 0x3FFFFFFF
	011 Move X30, [X31+16]
	012 Return X0
	013 Call 0x1B6FA1C

Method: AnimalCompany.GrabbableItem/TimeoutAction GetTimeoutAction(AnimalCompany.ItemData/Type type)

Disassembly:
	0x01C9F134 MOV X1, X22
	0x01C9F138 LDP X20, X19, [X31 + 0x20]
	0x01C9F13C LDP X22, X21, [X31 + 0x10]
	0x01C9F140 MOV X2, X31

ISIL:
	001 And W31, W1, 4
	002 Move W8, 1
	003 NotImplemented "Instruction CINC not yet implemented."
	004 Return X0

Method: AnimalCompany.GrabbableItem/TimeoutAction GetSalesAction(AnimalCompany.ItemData/Type type)

Disassembly:
	0x01C9F16C STP X20, X19, [X31 + 0x80]
	0x01C9F170 ADRP X23, 0x2584000
	0x01C9F174 MOV V13.16B, V3.16B
	0x01C9F178 MOV V9.16B, V2.16B

ISIL:
	001 And W31, W1, 14
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Move W0, W8
	004 ShiftRight W0, 31
	005 And W0, W0, 0x3FFFFFFF
	006 Return X0

Method: Fusion.NetworkBehaviourId get_attachedAnchorId()

Disassembly:
	0x01C9AA60 ADRP X0, 0x22B3000
	0x01C9AA64 LDR X0, [X0 + 0x478]
	0x01C9AA68 BL 0x1B6E7F0
	0x01C9AA6C MOVZ W8, 0x1
	0x01C9AA70 STRB W8, [X22 + 0x3EE]
	0x01C9AA74 LDR X0, [X21]
	0x01C9AA78 LDR X21, [X19 + 0x40]
	0x01C9AA7C LDR W8, [X0 + 0xE0]
	0x01C9AA80 CBNZ W8, 0x1C9AA88
	0x01C9AA84 BL 0x1B6E8F8
	0x01C9AA88 MOV X0, X21
	0x01C9AA8C MOV X1, X31
	0x01C9AA90 MOV X2, X31
	0x01C9AA94 BL 0x3AA0AF0
	0x01C9AA98 TBNZ X0, 0x0, 0x1C9AB10
	0x01C9AA9C LDR X0, [X19 + 0x40]
	0x01C9AAA0 CBZ X0, 0x1C9AB20
	0x01C9AAA4 MOV X1, X31
	0x01C9AAA8 BL 0x1D9E5D0
	0x01C9AAAC TBZ X0, 0x0, 0x1C9AB10
	0x01C9AAB0 MOV X0, X19
	0x01C9AAB4 BL 0x1C98D1C
	0x01C9AAB8 STR X0, [X31 + 0x8]
	0x01C9AABC ADD X0, X31, 0x8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move X0, [X8]
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0
	010 Move X0, 0x22B4000
	011 Move X0, [X0+1168]
	012 Call 0x1B6F804
	013 Call 0x1B6FA0C
	014 Move X19, X0
	015 Move X0, 0x22B5000
	016 Move X0, [X0+464]
	017 Call 0x1B6F804
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x22B5000
	023 Move X0, [X0+472]
	024 Call 0x1B6F804
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1B6F8E8

Method: System.Void set_attachedAnchorId(Fusion.NetworkBehaviourId value)

Disassembly:
	0x01C9F17C MOV V10.16B, V1.16B
	0x01C9F180 MOV V15.16B, V0.16B
	0x01C9F184 LDP S0, S14, [X31 + 0xA4]
	0x01C9F188 LDR V1, [X31 + 0xA0]
	0x01C9F18C LDP S2, S11, [X31 + 0x94]
	0x01C9F190 LDRB W8, [X23 + 0x416]
	0x01C9F194 LDR V3, [X31 + 0x90]
	0x01C9F198 MOV W19, W3
	0x01C9F19C MOV W20, W2
	0x01C9F1A0 MOV V12.16B, V5.16B
	0x01C9F1A4 MOV V8.16B, V4.16B
	0x01C9F1A8 MOV X22, X1
	0x01C9F1AC MOV X21, X0
	0x01C9F1B0 TBNZ X8, 0x0, 0x1C9F22C
	0x01C9F1B4 ADRP X0, 0x22AF000
	0x01C9F1B8 LDR X0, [X0 + 0x1C0]
	0x01C9F1BC STP S11, S15, [X31 + 0x18]
	0x01C9F1C0 STP S14, S10, [X31 + 0x10]
	0x01C9F1C4 STR S9, [X31 + 0xC]
	0x01C9F1C8 MOV V9.16B, V13.16B
	0x01C9F1CC MOV V13.16B, V8.16B
	0x01C9F1D0 MOV V8.16B, V12.16B
	0x01C9F1D4 MOV V12.16B, V6.16B
	0x01C9F1D8 MOV V15.16B, V0.16B

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move [X8], X1
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 
	010 Move X0, 0x22AF000
	011 Move X0, [X0+1168]
	012 Call 0x1B6F804
	013 Call 0x1B6FA0C
	014 Move X19, X0
	015 Move X0, 0x22B0000
	016 Move X0, [X0+464]
	017 Call 0x1B6F804
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x22B0000
	023 Move X0, [X0+840]
	024 Call 0x1B6F804
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1B6F8E8

Method: Fusion.NetworkBehaviourId get_backpackId()

Disassembly:
	0x01C9EF64 STP X20, X19, [X31 + 0x20]
	0x01C9EF68 ADRP X23, 0x2585000
	0x01C9EF6C LDRB W8, [X23 + 0x414]
	0x01C9EF70 MOV X22, X3
	0x01C9EF74 MOV W21, W2
	0x01C9EF78 MOV X20, X1
	0x01C9EF7C MOV X19, X0
	0x01C9EF80 TBNZ X8, 0x0, 0x1C9EFA4
	0x01C9EF84 ADRP X0, 0x22B0000
	0x01C9EF88 LDR X0, [X0 + 0x1C0]
	0x01C9EF8C BL 0x1B6E7F0
	0x01C9EF90 ADRP X0, 0x22B0000
	0x01C9EF94 LDR X0, [X0 + 0x410]
	0x01C9EF98 BL 0x1B6E7F0
	0x01C9EF9C MOVZ W8, 0x1
	0x01C9EFA0 STRB W8, [X23 + 0x414]
	0x01C9EFA4 LDRB W8, [X19 + 0x58]
	0x01C9EFA8 CBZ W8, 0x1C9EFE0
	0x01C9EFAC STRB W31, [X19 + 0x58]
	0x01C9EFB0 LDR X0, [X19 + 0x40]
	0x01C9EFB4 CBZ X0, 0x1C9F14C
	0x01C9EFB8 UBFM X1, X22, 0x20, 0x3F
	0x01C9EFBC MOV X2, X31
	0x01C9EFC0 BL 0x1D9F778

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move X0, [X8+8]
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0
	010 Move X0, 0x22B0000
	011 Move X0, [X0+1168]
	012 Call 0x1B6F804
	013 Call 0x1B6FA0C
	014 Move X19, X0
	015 Move X0, 0x22B1000
	016 Move X0, [X0+816]
	017 Call 0x1B6F804
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x22B1000
	023 Move X0, [X0+824]
	024 Call 0x1B6F804
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1B6F8E8

Method: System.Void set_backpackId(Fusion.NetworkBehaviourId value)

Disassembly:
	0x01C9F1DC MOV V11.16B, V1.16B
	0x01C9F1E0 MOV V10.16B, V2.16B
	0x01C9F1E4 MOV V14.16B, V3.16B
	0x01C9F1E8 BL 0x1B6E7F0
	0x01C9F1EC ADRP X0, 0x22AF000
	0x01C9F1F0 LDR X0, [X0 + 0x418]
	0x01C9F1F4 BL 0x1B6E7F0
	0x01C9F1F8 MOV V3.16B, V14.16B
	0x01C9F1FC MOV V2.16B, V10.16B
	0x01C9F200 MOV V1.16B, V11.16B
	0x01C9F204 MOV V0.16B, V15.16B
	0x01C9F208 MOV V6.16B, V12.16B
	0x01C9F20C MOV V12.16B, V8.16B
	0x01C9F210 MOV V8.16B, V13.16B
	0x01C9F214 MOV V13.16B, V9.16B
	0x01C9F218 LDP S9, S14, [X31 + 0xC]
	0x01C9F21C LDP S10, S11, [X31 + 0x14]
	0x01C9F220 LDR V15, [X31 + 0x1C]
	0x01C9F224 MOVZ W8, 0x1
	0x01C9F228 STRB W8, [X23 + 0x416]
	0x01C9F22C LDRB W8, [X21 + 0x58]
	0x01C9F230 CBZ W8, 0x1C9F290
	0x01C9F234 STRB W31, [X21 + 0x58]
	0x01C9F238 STP S1, S0, [X31 + 0xA0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move [X8+8], X1
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 
	010 Move X0, 0x22AF000
	011 Move X0, [X0+1168]
	012 Call 0x1B6F804
	013 Call 0x1B6FA0C
	014 Move X19, X0
	015 Move X0, 0x22B0000
	016 Move X0, [X0+816]
	017 Call 0x1B6F804
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x22B0000
	023 Move X0, [X0+848]
	024 Call 0x1B6F804
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1B6F8E8

Method: AnimalCompany.GrabbedInfo get_grabbedInfo()

Disassembly:
	0x01C9F23C STP S3, S2, [X31 + 0x90]
	0x01C9F240 STR S14, [X31 + 0xA8]
	0x01C9F244 AND W2, W20, 0x1
	0x01C9F248 AND W3, W19, 0x1
	0x01C9F24C STR S11, [X31 + 0x98]
	0x01C9F250 MOV X0, X21
	0x01C9F254 MOV V0.16B, V15.16B
	0x01C9F258 MOV V1.16B, V10.16B
	0x01C9F25C MOV V2.16B, V9.16B
	0x01C9F260 MOV V3.16B, V13.16B
	0x01C9F264 MOV V4.16B, V8.16B
	0x01C9F268 MOV V5.16B, V12.16B
	0x01C9F26C LDP X20, X19, [X31 + 0x80]
	0x01C9F270 LDP X22, X21, [X31 + 0x70]
	0x01C9F274 LDP X30, X23, [X31 + 0x60]
	0x01C9F278 LDP D9, D8, [X31 + 0x50]
	0x01C9F27C LDP D11, D10, [X31 + 0x40]
	0x01C9F280 LDP D13, D12, [X31 + 0x30]
	0x01C9F284 LDP D15, D14, [X31 + 0x20]
	0x01C9F288 ADD X31, X31, 0x90
	0x01C9F28C B 0x1C9F46C
	0x01C9F290 STP S3, S2, [X31 + 0xC]
	0x01C9F294 STP S1, S0, [X31 + 0x14]
	0x01C9F298 STR S6, [X31 + 0x1C]
	0x01C9F29C ADRP X23, 0x22AF000
	0x01C9F2A0 LDR X23, [X23 + 0x1C0]
	0x01C9F2A4 LDR X0, [X23]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X9, [X0+80]
	004 Compare X9, 0
	005 JumpIfEqual {13}
	006 NotImplemented "Instruction LDUR not yet implemented."
	007 Move V1, [X9+1]
	008 Move [X8+12], V0
	009 Move [X8], V1
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return X0
	013 Move X0, 0x22AF000
	014 Move X0, [X0+1168]
	015 Call 0x1B6F804
	016 Call 0x1B6FA0C
	017 Move X19, X0
	018 Move X0, 0x22B0000
	019 Move X0, [X0+856]
	020 Call 0x1B6F804
	021 Move X1, X0
	022 Move X0, X19
	023 Move X2, X31
	024 Call InvalidOperationException..ctor, X0, X1
	025 Move X0, 0x22B0000
	026 Move X0, [X0+864]
	027 Call 0x1B6F804
	028 Move X1, X0
	029 Move X0, X19
	030 Call 0x1B6F8E8

Method: System.Void set_grabbedInfo(AnimalCompany.GrabbedInfo value)

Disassembly:
	0x01C9F2A8 LDR W8, [X0 + 0xE0]
	0x01C9F2AC CBNZ W8, 0x1C9F2B4
	0x01C9F2B0 BL 0x1B6E8F8
	0x01C9F2B4 MOV X0, X21
	0x01C9F2B8 MOV X1, X31
	0x01C9F2BC BL 0x1D697C8
	0x01C9F2C0 LDR X0, [X21 + 0x38]
	0x01C9F2C4 CBZ X0, 0x1C9F468
	0x01C9F2C8 MOV X1, X31
	0x01C9F2CC BL 0x1D87040
	0x01C9F2D0 CMP W0, 0x4
	0x01C9F2D4 B.NE 0x1C9F2FC
	0x01C9F2D8 LDP X20, X19, [X31 + 0x80]
	0x01C9F2DC LDP X22, X21, [X31 + 0x70]
	0x01C9F2E0 LDP X30, X23, [X31 + 0x60]
	0x01C9F2E4 LDP D9, D8, [X31 + 0x50]
	0x01C9F2E8 LDP D11, D10, [X31 + 0x40]
	0x01C9F2EC LDP D13, D12, [X31 + 0x30]
	0x01C9F2F0 LDP D15, D14, [X31 + 0x20]
	0x01C9F2F4 ADD X31, X31, 0x90
	0x01C9F2F8 RET
	0x01C9F2FC LDR X0, [X21 + 0x40]
	0x01C9F300 CBZ X0, 0x1C9F468
	0x01C9F304 MOV X1, X31
	0x01C9F308 BL 0x1D9F538
	0x01C9F30C ANDS W31, W0, 0x7
	0x01C9F310 B.EQ 0x1C9F380
	0x01C9F314 LDP S0, S6, [X31 + 0x18]
	0x01C9F318 LDP S2, S1, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {15}
	006 Move W9, [X1+24]
	007 Move X10, [X1+16]
	008 Move V0, [X1]
	009 Move [X8+40], W9
	010 Move [X8+32], X10
	011 Move [X8+1], V0
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return 
	015 Move X0, 0x22AF000
	016 Move X0, [X0+1168]
	017 Call 0x1B6F804
	018 Call 0x1B6FA0C
	019 Move X19, X0
	020 Move X0, 0x22B0000
	021 Move X0, [X0+856]
	022 Call 0x1B6F804
	023 Move X1, X0
	024 Move X0, X19
	025 Move X2, X31
	026 Call InvalidOperationException..ctor, X0, X1
	027 Move X0, 0x22B0000
	028 Move X0, [X0+872]
	029 Call 0x1B6F804
	030 Move X1, X0
	031 Move X0, X19
	032 Call 0x1B6F8E8

Method: System.Boolean get_isHidden()

Disassembly:
	0x01C9F31C LDR V3, [X31 + 0xC]
	0x01C9F320 TBNZ X0, 0x0, 0x1C9F238
	0x01C9F324 LDR X8, [X21 + 0x38]
	0x01C9F328 CBZ X8, 0x1C9F468
	0x01C9F32C LDR X0, [X8 + 0x50]
	0x01C9F330 CBZ X0, 0x1C9F468
	0x01C9F334 MOV X1, X31
	0x01C9F338 BL 0x1DBEFE4
	0x01C9F33C TBZ X0, 0x0, 0x1C9F2D8
	0x01C9F340 LDR X8, [X21 + 0x38]
	0x01C9F344 CBZ X8, 0x1C9F468
	0x01C9F348 LDR X0, [X8 + 0x50]
	0x01C9F34C MOVZ W1, 0x4C
	0x01C9F350 MOV X2, X31
	0x01C9F354 BL 0x1DD601C
	0x01C9F358 MOV X23, X0
	0x01C9F35C MOVZ W0, 0x1
	0x01C9F360 MOV X1, X31
	0x01C9F364 BL 0x1D29EBC
	0x01C9F368 LDR X8, [X21 + 0x40]
	0x01C9F36C CBZ X8, 0x1C9F468
	0x01C9F370 LDR X8, [X8 + 0x20]
	0x01C9F374 CBZ X8, 0x1C9F3D0
	0x01C9F378 LDR W0, [X8]
	0x01C9F37C B 0x1C9F3D4
	0x01C9F380 LDR X0, [X23]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {12}
	006 Move W8, [X8+44]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return X0
	012 Move X0, 0x22AF000
	013 Move X0, [X0+1168]
	014 Call 0x1B6F804
	015 Call 0x1B6FA0C
	016 Move X19, X0
	017 Move X0, 0x22B0000
	018 Move X0, [X0+880]
	019 Call 0x1B6F804
	020 Move X1, X0
	021 Move X0, X19
	022 Move X2, X31
	023 Call InvalidOperationException..ctor, X0, X1
	024 Move X0, 0x22B0000
	025 Move X0, [X0+888]
	026 Call 0x1B6F804
	027 Move X1, X0
	028 Move X0, X19
	029 Call 0x1B6F8E8

Method: System.Void set_isHidden(System.Boolean value)

Disassembly:
	0x01C9F384 LDR X19, [X21 + 0x40]
	0x01C9F388 LDR W8, [X0 + 0xE0]
	0x01C9F38C CBNZ W8, 0x1C9F394
	0x01C9F390 BL 0x1B6E8F8
	0x01C9F394 ADRP X8, 0x22AF000
	0x01C9F398 LDR X8, [X8 + 0x418]
	0x01C9F39C MOV X1, X19
	0x01C9F3A0 LDP X20, X19, [X31 + 0x80]
	0x01C9F3A4 LDP X22, X21, [X31 + 0x70]
	0x01C9F3A8 LDR X0, [X8]
	0x01C9F3AC LDP X30, X23, [X31 + 0x60]
	0x01C9F3B0 LDP D9, D8, [X31 + 0x50]
	0x01C9F3B4 LDP D11, D10, [X31 + 0x40]
	0x01C9F3B8 LDP D13, D12, [X31 + 0x30]
	0x01C9F3BC LDP D15, D14, [X31 + 0x20]
	0x01C9F3C0 MOVZ W2, 0x7
	0x01C9F3C4 MOV X3, X31
	0x01C9F3C8 ADD X31, X31, 0x90
	0x01C9F3CC B 0x1D69640
	0x01C9F3D0 MOV X0, X31
	0x01C9F3D4 LDR W1, [X21 + 0x68]
	0x01C9F3D8 MOVZ W2, 0x2
	0x01C9F3DC MOV X3, X31
	0x01C9F3E0 BL 0x1DA8258
	0x01C9F3E4 LDR V1, [X31 + 0x1C]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {11}
	006 And W9, W1, 1
	007 Move [X8+44], W9
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return 
	011 Move X0, 0x22AF000
	012 Move X0, [X0+1168]
	013 Call 0x1B6F804
	014 Call 0x1B6FA0C
	015 Move X19, X0
	016 Move X0, 0x22B0000
	017 Move X0, [X0+880]
	018 Call 0x1B6F804
	019 Move X1, X0
	020 Move X0, X19
	021 Move X2, X31
	022 Call InvalidOperationException..ctor, X0, X1
	023 Move X0, 0x22B0000
	024 Move X0, [X0+896]
	025 Call 0x1B6F804
	026 Move X1, X0
	027 Move X0, X19
	028 Call 0x1B6F8E8

Method: AnimalCompany.SpawnInfo get_spawnInfo()

Disassembly:
	0x01C9F3E8 LDR V0, [X31 + 0xC]
	0x01C9F3EC AND W8, W20, 0x1
	0x01C9F3F0 AND W9, W19, 0x1
	0x01C9F3F4 STUR X0, [X23 + 0x1C]
	0x01C9F3F8 STP S1, S0, [X23 + 0x44]
	0x01C9F3FC LDR V0, [X31 + 0x10]
	0x01C9F400 LDR V1, [X31 + 0x14]
	0x01C9F404 STUR X22, [X23 + 0x24]
	0x01C9F408 STP S15, S10, [X23 + 0x2C]
	0x01C9F40C STP S0, S11, [X23 + 0x4C]
	0x01C9F410 LDR V0, [X31 + 0x18]
	0x01C9F414 STP S9, S13, [X23 + 0x34]
	0x01C9F418 STP S8, S12, [X23 + 0x3C]
	0x01C9F41C STR S14, [X23 + 0x5C]
	0x01C9F420 STP S1, S0, [X23 + 0x54]
	0x01C9F424 STP W8, W9, [X23 + 0x60]
	0x01C9F428 CBZ X23, 0x1C9F468
	0x01C9F42C MOVZ W8, 0x260
	0x01C9F430 STR W8, [X23 + 0xC]
	0x01C9F434 LDR X0, [X21 + 0x38]
	0x01C9F438 CBZ X0, 0x1C9F468
	0x01C9F43C MOV X1, X23
	0x01C9F440 LDP X20, X19, [X31 + 0x80]
	0x01C9F444 LDP X22, X21, [X31 + 0x70]
	0x01C9F448 LDP X30, X23, [X31 + 0x60]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X9, [X0+80]
	004 Compare X9, 0
	005 JumpIfEqual {13}
	006 Move V1, [X9+48]
	007 Move V0, [X9+64]
	008 Move [X8], V1
	009 Move [X8+8], V0
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return X0
	013 Move X0, 0x22AF000
	014 Move X0, [X0+1168]
	015 Call 0x1B6F804
	016 Call 0x1B6FA0C
	017 Move X19, X0
	018 Move X0, 0x22B0000
	019 Move X0, [X0+904]
	020 Call 0x1B6F804
	021 Move X1, X0
	022 Move X0, X19
	023 Move X2, X31
	024 Call InvalidOperationException..ctor, X0, X1
	025 Move X0, 0x22B0000
	026 Move X0, [X0+912]
	027 Call 0x1B6F804
	028 Move X1, X0
	029 Move X0, X19
	030 Call 0x1B6F8E8

Method: System.Void set_spawnInfo(AnimalCompany.SpawnInfo value)

Disassembly:
	0x01C9F44C LDP D9, D8, [X31 + 0x50]
	0x01C9F450 LDP D11, D10, [X31 + 0x40]
	0x01C9F454 LDP D13, D12, [X31 + 0x30]
	0x01C9F458 LDP D15, D14, [X31 + 0x20]
	0x01C9F45C MOV X2, X31
	0x01C9F460 ADD X31, X31, 0x90
	0x01C9F464 B 0x1D8A710
	0x01C9F468 BL 0x1B6EA1C
	0x01C9F46C SUB X31, X31, 0x90
	0x01C9F470 STP D15, D14, [X31 + 0x10]
	0x01C9F474 STP D13, D12, [X31 + 0x20]
	0x01C9F478 STP D11, D10, [X31 + 0x30]
	0x01C9F47C STP D9, D8, [X31 + 0x40]
	0x01C9F480 STR X30, [X31 + 0x50]
	0x01C9F484 STP X24, X23, [X31 + 0x60]
	0x01C9F488 STP X22, X21, [X31 + 0x70]
	0x01C9F48C STP X20, X19, [X31 + 0x80]
	0x01C9F490 MOV V12.16B, V0.16B
	0x01C9F494 LDR V7, [X31 + 0xA8]
	0x01C9F498 LDR V0, [X31 + 0xA4]
	0x01C9F49C ADRP X22, 0x2584000
	0x01C9F4A0 LDRB W8, [X22 + 0x417]
	0x01C9F4A4 MOV W19, W3
	0x01C9F4A8 STP S0, S7, [X31 + 0x8]
	0x01C9F4AC LDR V0, [X31 + 0xA0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {13}
	006 Move V1, [X1]
	007 Move V0, [X1+16]
	008 Move [X8+48], V1
	009 Move [X8+56], V0
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return 
	013 Move X0, 0x22AF000
	014 Move X0, [X0+1168]
	015 Call 0x1B6F804
	016 Call 0x1B6FA0C
	017 Move X19, X0
	018 Move X0, 0x22B0000
	019 Move X0, [X0+904]
	020 Call 0x1B6F804
	021 Move X1, X0
	022 Move X0, X19
	023 Move X2, X31
	024 Call InvalidOperationException..ctor, X0, X1
	025 Move X0, 0x22B0000
	026 Move X0, [X0+920]
	027 Call 0x1B6F804
	028 Move X1, X0
	029 Move X0, X19
	030 Call 0x1B6F8E8

Method: Fusion.TickTimer get_respawnTimer()

Disassembly:
	0x01C9F4B0 LDR V7, [X31 + 0x98]
	0x01C9F4B4 MOV W21, W2
	0x01C9F4B8 MOV V14.16B, V6.16B
	0x01C9F4BC STR S0, [X31 + 0x4]
	0x01C9F4C0 LDP S13, S0, [X31 + 0x90]
	0x01C9F4C4 MOV V15.16B, V5.16B
	0x01C9F4C8 MOV V8.16B, V4.16B
	0x01C9F4CC MOV V9.16B, V3.16B
	0x01C9F4D0 MOV V10.16B, V2.16B
	0x01C9F4D4 MOV V11.16B, V1.16B
	0x01C9F4D8 MOV X20, X0
	0x01C9F4DC STP S0, S7, [X31 + 0x58]
	0x01C9F4E0 TBNZ X8, 0x0, 0x1C9F504
	0x01C9F4E4 ADRP X0, 0x22AE000
	0x01C9F4E8 LDR X0, [X0 + 0x478]
	0x01C9F4EC BL 0x1B6E7F0
	0x01C9F4F0 ADRP X0, 0x22AF000
	0x01C9F4F4 LDR X0, [X0 + 0x420]
	0x01C9F4F8 BL 0x1B6E7F0
	0x01C9F4FC MOVZ W8, 0x1
	0x01C9F500 STRB W8, [X22 + 0x417]
	0x01C9F504 MOV X0, X20
	0x01C9F508 BL 0x1C99A60
	0x01C9F50C MOV X22, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move W0, [X8+80]
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0
	010 Move X0, 0x22AF000
	011 Move X0, [X0+1168]
	012 Call 0x1B6F804
	013 Call 0x1B6FA0C
	014 Move X19, X0
	015 Move X0, 0x22B0000
	016 Move X0, [X0+928]
	017 Call 0x1B6F804
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x22B0000
	023 Move X0, [X0+936]
	024 Call 0x1B6F804
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1B6F8E8

Method: System.Void set_respawnTimer(Fusion.TickTimer value)

Disassembly:
	0x01C9F510 MOV X0, X31
	0x01C9F514 BL 0x1D6815C
	0x01C9F518 ADRP X24, 0x2584000
	0x01C9F51C LDRB W8, [X24 + 0x44E]
	0x01C9F520 MOV X23, X0
	0x01C9F524 CBNZ W8, 0x1C9F53C
	0x01C9F528 ADRP X0, 0x22AF000
	0x01C9F52C LDR X0, [X0 + 0x1E8]
	0x01C9F530 BL 0x1B6E7F0
	0x01C9F534 MOVZ W8, 0x1
	0x01C9F538 STRB W8, [X24 + 0x44E]
	0x01C9F53C ADRP X8, 0x22AF000
	0x01C9F540 LDR X8, [X8 + 0x1E8]
	0x01C9F544 LDR X0, [X8]
	0x01C9F548 LDR W8, [X0 + 0xE0]
	0x01C9F54C CBNZ W8, 0x1C9F554
	0x01C9F550 BL 0x1B6E8F8
	0x01C9F554 CMP W22, W23
	0x01C9F558 B.NE 0x1C9F56C
	0x01C9F55C UBFM X8, X23, 0x20, 0x3F
	0x01C9F560 UBFM X9, X22, 0x20, 0x3F
	0x01C9F564 CMP W9, W8
	0x01C9F568 B.EQ 0x1C9F6F0
	0x01C9F56C MOV X0, X20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move [X8+80], W1
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 
	010 Move X0, 0x22AF000
	011 Move X0, [X0+1168]
	012 Call 0x1B6F804
	013 Call 0x1B6FA0C
	014 Move X19, X0
	015 Move X0, 0x22B0000
	016 Move X0, [X0+928]
	017 Call 0x1B6F804
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x22B0000
	023 Move X0, [X0+944]
	024 Call 0x1B6F804
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1B6F8E8

Method: AnimalCompany.AttachedItemAnchor get_itemAnchor()

Disassembly:
	0x01C9F570 BL 0x1C9F71C
	0x01C9F574 MOV X0, X31

ISIL:
	001 Move X0, [X0+288]
	002 Return X0

Method: UnityEngine.Rigidbody get_itemRigidbody()

Disassembly:
	0x01C9F578 BL 0x1D6815C
	0x01C9F57C MOV X1, X0

ISIL:
	001 Move X0, [X0+304]
	002 Return X0

Method: System.Boolean get_allowAttachToBack()

Disassembly:
	0x01C9F580 MOV X0, X20
	0x01C9F584 BL 0x1C9E17C

ISIL:
	001 Move W0, [X0+140]
	002 Return X0

Method: System.Boolean get_allowAddToBag()

Disassembly:
	0x01C9F588 TBZ X21, 0x0, 0x1C9F5E8
	0x01C9F58C ADRP X8, 0x22AE000

ISIL:
	001 Move W0, [X0+141]
	002 Return X0

Method: System.Boolean get_allowAttachToItem()

Disassembly:
	0x01C9F590 LDR X8, [X8 + 0x478]
	0x01C9F594 LDR X21, [X20 + 0xB8]

ISIL:
	001 Move W0, [X0+142]
	002 Return X0

Method: System.Boolean get_isInterested()

Disassembly:
	0x01C9F598 LDR X0, [X8]
	0x01C9F59C LDR W8, [X0 + 0xE0]
	0x01C9F5A0 CBNZ W8, 0x1C9F5A8
	0x01C9F5A4 BL 0x1B6E8F8
	0x01C9F5A8 MOV X0, X21
	0x01C9F5AC MOV X1, X31
	0x01C9F5B0 MOV X2, X31
	0x01C9F5B4 BL 0x3A9D6EC
	0x01C9F5B8 TBZ X0, 0x0, 0x1C9F5E8
	0x01C9F5BC LDR X21, [X20 + 0xB8]
	0x01C9F5C0 MOV X0, X20
	0x01C9F5C4 MOV X1, X31
	0x01C9F5C8 BL 0x3A9B084
	0x01C9F5CC CBZ X0, 0x1C9F718
	0x01C9F5D0 MOV X1, X31
	0x01C9F5D4 BL 0x3AA7658
	0x01C9F5D8 FMOV S3, 1
	0x01C9F5DC MOV X0, X21
	0x01C9F5E0 MOV X1, X31
	0x01C9F5E4 BL 0x1CC181C
	0x01C9F5E8 MOV X0, X20
	0x01C9F5EC BL 0x1C9F768
	0x01C9F5F0 LDR X0, [X20 + 0x130]
	0x01C9F5F4 CBZ X0, 0x1C9F718
	0x01C9F5F8 MOV V0.16B, V12.16B
	0x01C9F5FC MOV V1.16B, V11.16B
	0x01C9F600 MOV V2.16B, V10.16B
	0x01C9F604 MOV X1, X31
	0x01C9F608 BL 0x3AF6C18
	0x01C9F60C LDR X0, [X20 + 0x130]
	0x01C9F610 CBZ X0, 0x1C9F718
	0x01C9F614 MOV V0.16B, V9.16B
	0x01C9F618 MOV V1.16B, V8.16B
	0x01C9F61C MOV V2.16B, V15.16B
	0x01C9F620 MOV V3.16B, V14.16B
	0x01C9F624 MOV X1, X31
	0x01C9F628 BL 0x3AF6D4C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2585000
	005 Move W8, [X20+1038]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x22B0000
	012 Move X0, [X0+952]
	013 Call 0x1B6F7F0
	014 Move X0, 0x22B0000
	015 Move X0, [X0+960]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X20+1038], W8
	019 Move X20, [X19+56]
	020 Compare X20, 0
	021 JumpIfEqual {42}
	022 Move X19, [X19+64]
	023 Move X0, X20
	024 Move X1, X31
	025 Call NetworkRunner.get_LocalPlayer, X0
	026 Move X8, [X20+80]
	027 Compare X8, 0
	028 JumpIfEqual {37}
	029 And X2, X0, 0
	030 Move X0, X8
	031 Move X1, X19
	032 Move X3, X31
	033 Call 0x1CA64FC
	034 And W31, W0, 255
	035 And X31, X0, 0xFFFF
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Move W0, 1
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return X0
	042 Call 0x1B6FA1C

Method: System.Boolean get_isVisible()

Disassembly:
	0x01C9B864 LDRB W10, [X8 + 0x130]
	0x01C9B868 LDRB W9, [X1 + 0x130]
	0x01C9B86C CMP W10, W9
	0x01C9B870 B.CC 0x1C9B898
	0x01C9B874 LDR X8, [X8 + 0xC8]
	0x01C9B878 ADD X8, X8, X9, 0x3, LSL
	0x01C9B87C LDUR X8, [X8 - 0x8]
	0x01C9B880 CMP X8, X1
	0x01C9B884 B.NE 0x1C9B898
	0x01C9B888 MOV X0, X19
	0x01C9B88C LDP X20, X19, [X31 + 0x10]
	0x01C9B890 LDR X30, [X31], #0x20
	0x01C9B894 B 0x1C9B640
	0x01C9B898 MOV X0, X19
	0x01C9B89C BL 0x1B6ECDC
	0x01C9B8A0 BL 0x1B6EA1C
	0x01C9B8A4 STP X30, X19, [X31 - 0x10]!
	0x01C9B8A8 LDR X8, [X0 + 0x50]
	0x01C9B8AC CBZ X8, 0x1C9B8BC
	0x01C9B8B0 LDR W0, [X8]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Call GrabbableItem.get_isHidden, X0
	006 Move TEMP, X0
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {20}
	010 Move X0, X19
	011 Call GrabbableItem.get_backpackId, X0
	012 Move [X31+8], X0
	013 Add X0, X31, 8
	014 Move X1, X31
	015 Call NetworkBehaviourId.get_IsValid, X0
	016 Move TEMP, X0
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfNotEqual {21}
	020 Move W0, W31
	021 Move X0, X19
	022 Call GrabbableItem.get_isInterested, X0
	023 Move X30, [X31+16]
	024 Move X19, [X31+24]
	025 And W0, W0, 1
	026 Add X31, X31, 32
	027 Return X0

Method: System.Boolean get_isAttached()

Disassembly:
	0x01C9DA04 MOV X0, X1
	0x01C9DA08 BL 0x1B6EA0C
	0x01C9DA0C LDR X2, [X21]
	0x01C9DA10 MOV X1, X19
	0x01C9DA14 MOV X3, X31
	0x01C9DA18 MOV X21, X0
	0x01C9DA1C BL 0x317DB24
	0x01C9DA20 MOV X0, X20
	0x01C9DA24 MOV X1, X21
	0x01C9DA28 MOV X2, X31
	0x01C9DA2C BL 0x322A750
	0x01C9DA30 CBZ X0, 0x1C9DA58
	0x01C9DA34 LDR X1, [X22]
	0x01C9DA38 LDR X8, [X0]
	0x01C9DA3C CMP X8, X1
	0x01C9DA40 B.NE 0x1C9DA54
	0x01C9DA44 STR X0, [X23 + 0x1A8]
	0x01C9DA48 LDR X8, [X0]
	0x01C9DA4C CMP X8, X1
	0x01C9DA50 B.EQ 0x1C9DA5C
	0x01C9DA54 BL 0x1B6ECDC
	0x01C9DA58 STR X0, [X23 + 0x1A8]
	0x01C9DA5C LDP X20, X19, [X31 + 0x20]
	0x01C9DA60 LDP X22, X21, [X31 + 0x10]
	0x01C9DA64 LDP X30, X23, [X31], #0x30
	0x01C9DA68 RET
	0x01C9DA6C BL 0x1B6EA1C
	0x01C9DA70 STP X30, X23, [X31 - 0x30]!
	0x01C9DA74 STP X22, X21, [X31 + 0x10]
	0x01C9DA78 STP X20, X19, [X31 + 0x20]
	0x01C9DA7C ADRP X20, 0x2586000
	0x01C9DA80 ADRP X21, 0x22B1000
	0x01C9DA84 LDRB W8, [X20 + 0x409]
	0x01C9DA88 LDR X21, [X21 + 0x1C0]
	0x01C9DA8C MOV X19, X0
	0x01C9DA90 TBNZ X8, 0x0, 0x1C9DACC
	0x01C9DA94 ADRP X0, 0x22B1000
	0x01C9DA98 LDR X0, [X0 + 0x170]
	0x01C9DA9C BL 0x1B6E7F0
	0x01C9DAA0 ADRP X0, 0x22B1000
	0x01C9DAA4 LDR X0, [X0 + 0x310]
	0x01C9DAA8 BL 0x1B6E7F0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Call GrabbableItem.get_attachedAnchorId, X0
	008 Move X20, X0
	009 Move X0, X31
	010 Call NetworkBehaviourId.get_None
	011 Move X22, 0x2587000
	012 Move W8, [X22+1102]
	013 Move X21, X0
	014 Compare W8, 0
	015 JumpIfNotEqual {21}
	016 Move X0, 0x22B2000
	017 Move X0, [X0+488]
	018 Call 0x1B6F7F0
	019 Move W8, 1
	020 Move [X22+1102], W8
	021 Move X8, 0x22B2000
	022 Move X8, [X8+488]
	023 Move X0, [X8]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1B6F8F8
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X8, X21
	030 ShiftRight X8, 32
	031 And X8, X8, 0x7FFFFFFF
	032 Move X9, X20
	033 ShiftRight X9, 32
	034 And X9, X9, 0x7FFFFFFF
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W0, W31
	037 Move X0, X19
	038 Call GrabbableItem.get_attachedAnchorId, X0
	039 Move [X31+8], X0
	040 Add X0, X31, 8
	041 Move X1, X31
	042 Call NetworkBehaviourId.get_IsValid, X0
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 And W0, W0, 1
	048 Move X30, [X31+48]
	049 Return X0

Method: System.Boolean TryGetHandSide(out AnimalCompany.HandSide handSide)

Disassembly:
	0x01C9F62C LDR X0, [X20 + 0x130]
	0x01C9F630 CBZ X0, 0x1C9F718
	0x01C9F634 MOV X1, X31
	0x01C9F638 BL 0x3AF67EC
	0x01C9F63C MOV X0, X20
	0x01C9F640 MOV X1, X31
	0x01C9F644 BL 0x3A9B0C0
	0x01C9F648 CBZ X0, 0x1C9F718
	0x01C9F64C MOV X1, X31
	0x01C9F650 BL 0x3A9B5D8
	0x01C9F654 ADRP X8, 0x22AF000
	0x01C9F658 LDR X8, [X8 + 0x420]
	0x01C9F65C MOV X2, X31
	0x01C9F660 LDR X1, [X8]
	0x01C9F664 BL 0x3084850
	0x01C9F668 LDR X0, [X20 + 0x130]
	0x01C9F66C CBZ X0, 0x1C9F718
	0x01C9F670 LDP S1, S2, [X31 + 0x58]
	0x01C9F674 MOV V0.16B, V13.16B
	0x01C9F678 MOV X1, X31
	0x01C9F67C BL 0x3AF650C
	0x01C9F680 LDR X0, [X20 + 0x130]
	0x01C9F684 CBZ X0, 0x1C9F718
	0x01C9F688 LDP S0, S1, [X31 + 0x4]
	0x01C9F68C LDR V2, [X31 + 0xC]
	0x01C9F690 MOV X1, X31
	0x01C9F694 BL 0x3AF6644
	0x01C9F698 LDR X0, [X20 + 0x138]
	0x01C9F69C CBZ X0, 0x1C9F718
	0x01C9F6A0 LDR X8, [X0]
	0x01C9F6A4 MOV W1, W31
	0x01C9F6A8 LDP X9, X2, [X8 + 0x1F8]
	0x01C9F6AC BLR X9
	0x01C9F6B0 TBZ X19, 0x0, 0x1C9F6F0
	0x01C9F6B4 LDR X8, [X20 + 0x1B8]
	0x01C9F6B8 CBZ X8, 0x1C9F6F0
	0x01C9F6BC LDR X2, [X8 + 0x18]
	0x01C9F6C0 LDR X0, [X8 + 0x40]
	0x01C9F6C4 LDR X1, [X8 + 0x28]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2585000
	007 Move X21, 0x22AF000
	008 Move W8, [X22+1039]
	009 Move X21, [X21+1144]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x22AF000
	017 Move X0, [X0+1144]
	018 Call 0x1B6F7F0
	019 Move W8, 1
	020 Move [X22+1039], W8
	021 Move X0, [X21]
	022 Move X21, [X20+288]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1B6F8F8
	027 Move X0, X21
	028 Move X1, X31
	029 Move X2, X31
	030 Call Object.op_Inequality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {41}
	035 Move X8, [X20+288]
	036 Compare X8, 0
	037 JumpIfEqual {50}
	038 Move W8, [X8+128]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CSET not yet implemented."
	041 Move W8, 1
	042 Move [X19], W8
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 And W0, W0, 1
	048 Move X30, [X31+48]
	049 Return X0
	050 Call 0x1B6FA1C

Method: System.Collections.Generic.IEnumerable`1<AnimalCompany.GrabbableItem> get_allLootItems()

Disassembly:
	0x01C9F6C8 LDP X20, X19, [X31 + 0x80]
	0x01C9F6CC LDP X22, X21, [X31 + 0x70]
	0x01C9F6D0 LDP X24, X23, [X31 + 0x60]
	0x01C9F6D4 LDR X30, [X31 + 0x50]
	0x01C9F6D8 LDP D9, D8, [X31 + 0x40]
	0x01C9F6DC LDP D11, D10, [X31 + 0x30]
	0x01C9F6E0 LDP D13, D12, [X31 + 0x20]
	0x01C9F6E4 LDP D15, D14, [X31 + 0x10]
	0x01C9F6E8 ADD X31, X31, 0x90
	0x01C9F6EC BR X2
	0x01C9F6F0 LDP X20, X19, [X31 + 0x80]
	0x01C9F6F4 LDP X22, X21, [X31 + 0x70]
	0x01C9F6F8 LDP X24, X23, [X31 + 0x60]
	0x01C9F6FC LDR X30, [X31 + 0x50]
	0x01C9F700 LDP D9, D8, [X31 + 0x40]
	0x01C9F704 LDP D11, D10, [X31 + 0x30]
	0x01C9F708 LDP D13, D12, [X31 + 0x20]
	0x01C9F70C LDP D15, D14, [X31 + 0x10]
	0x01C9F710 ADD X31, X31, 0x90
	0x01C9F714 RET
	0x01C9F718 BL 0x1B6EA1C
	0x01C9F71C STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2585000
	005 Move X19, 0x22B0000
	006 Move W8, [X20+1040]
	007 Move X19, [X19+968]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22B0000
	013 Move X0, [X0+968]
	014 Call 0x1B6F7F0
	015 Move W8, 1
	016 Move [X20+1040], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1B6F8F8
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void Awake()

Disassembly:
	0x01C9F720 LDR X8, [X0 + 0x80]
	0x01C9F724 CBZ X8, 0x1C9F764
	0x01C9F728 LDR W8, [X8 + 0x28]
	0x01C9F72C MOV X19, X0
	0x01C9F730 LDR X0, [X0 + 0x38]
	0x01C9F734 MOVZ W9, 0x43960000
	0x01C9F738 MOVZ W10, 0x42700000
	0x01C9F73C ANDS W31, W8, 0x4
	0x01C9F740 FMOV S0, W9
	0x01C9F744 FMOV S1, W10
	0x01C9F748 FCSEL S0, S1, S0, EQ
	0x01C9F74C MOV X1, X31
	0x01C9F750 BL 0x1D9CEB8
	0x01C9F754 AND X1, X0, 0x0
	0x01C9F758 MOV X0, X19
	0x01C9F75C LDP X30, X19, [X31], #0x10
	0x01C9F760 B 0x1C9E510
	0x01C9F764 BL 0x1B6EA1C
	0x01C9F768 SUB X31, X31, 0x160
	0x01C9F76C STP D15, D14, [X31 + 0xC0]
	0x01C9F770 STP D13, D12, [X31 + 0xD0]
	0x01C9F774 STP D11, D10, [X31 + 0xE0]
	0x01C9F778 STP D9, D8, [X31 + 0xF0]
	0x01C9F77C STP X29, X30, [X31 + 0x100]
	0x01C9F780 STP X28, X27, [X31 + 0x110]
	0x01C9F784 STP X26, X25, [X31 + 0x120]
	0x01C9F788 STP X24, X23, [X31 + 0x130]
	0x01C9F78C STP X22, X21, [X31 + 0x140]
	0x01C9F790 STP X20, X19, [X31 + 0x150]
	0x01C9F794 MRS X23, 0xC000
	0x01C9F798 LDR X8, [X23 + 0x28]
	0x01C9F79C ADRP X20, 0x2584000
	0x01C9F7A0 MOV X19, X0
	0x01C9F7A4 STR X8, [X31 + 0xB8]
	0x01C9F7A8 LDRB W8, [X20 + 0x41E]
	0x01C9F7AC TBNZ X8, 0x0, 0x1C9F818
	0x01C9F7B0 ADRP X0, 0x22AF000
	0x01C9F7B4 LDR X0, [X0 + 0x170]
	0x01C9F7B8 BL 0x1B6E7F0
	0x01C9F7BC ADRP X0, 0x22AF000
	0x01C9F7C0 LDR X0, [X0 + 0x428]
	0x01C9F7C4 BL 0x1B6E7F0
	0x01C9F7C8 ADRP X0, 0x22AF000
	0x01C9F7CC LDR X0, [X0 + 0x430]
	0x01C9F7D0 BL 0x1B6E7F0
	0x01C9F7D4 ADRP X0, 0x22AF000
	0x01C9F7D8 LDR X0, [X0 + 0x438]
	0x01C9F7DC BL 0x1B6E7F0
	0x01C9F7E0 ADRP X0, 0x22AF000
	0x01C9F7E4 LDR X0, [X0 + 0x440]
	0x01C9F7E8 BL 0x1B6E7F0
	0x01C9F7EC ADRP X0, 0x22AF000
	0x01C9F7F0 LDR X0, [X0 + 0x448]
	0x01C9F7F4 BL 0x1B6E7F0
	0x01C9F7F8 ADRP X0, 0x22AE000
	0x01C9F7FC LDR X0, [X0 + 0x478]
	0x01C9F800 BL 0x1B6E7F0
	0x01C9F804 ADRP X0, 0x22AF000
	0x01C9F808 LDR X0, [X0 + 0x450]
	0x01C9F80C BL 0x1B6E7F0
	0x01C9F810 MOVZ W8, 0x1
	0x01C9F814 STRB W8, [X20 + 0x41E]
	0x01C9F818 ADRP X24, 0x22AE000
	0x01C9F81C LDR X24, [X24 + 0x478]
	0x01C9F820 MOVI V0.2D, 0x0
	0x01C9F824 MOVZ W1, 0x1
	0x01C9F828 MOV X0, X19
	0x01C9F82C STP V0, V0, [X31 + 0x70]
	0x01C9F830 STP V0, V0, [X31 + 0x50]
	0x01C9F834 BL 0x1CA0700
	0x01C9F838 MOV X0, X19
	0x01C9F83C BL 0x1C9CA04
	0x01C9F840 ADD X20, X19, 0x120
	0x01C9F844 STR X31, [X19 + 0x148]
	0x01C9F848 STP X31, X31, [X19 + 0x120]
	0x01C9F84C TBZ X0, 0x0, 0x1C9FC84
	0x01C9F850 LDR X21, [X19 + 0x38]
	0x01C9F854 MOV X0, X19
	0x01C9F858 BL 0x1C99A60
	0x01C9F85C CBZ X21, 0x1CA04E4
	0x01C9F860 ADRP X8, 0x22AF000
	0x01C9F864 LDR X8, [X8 + 0x448]
	0x01C9F868 MOV X1, X0
	0x01C9F86C MOV X0, X21
	0x01C9F870 MOV X2, X20
	0x01C9F874 LDR X3, [X8]
	0x01C9F878 BL 0x2113594
	0x01C9F87C TBZ X0, 0x0, 0x1C9FDA4
	0x01C9F880 LDR X0, [X20]
	0x01C9F884 CBZ X0, 0x1CA04E4
	0x01C9F888 ADRP X8, 0x22AF000
	0x01C9F88C LDR X8, [X8 + 0x428]
	0x01C9F890 LDR X1, [X8]
	0x01C9F894 BL 0x208FDE8
	0x01C9F898 STR X0, [X19 + 0x128]
	0x01C9F89C MOV X0, X19
	0x01C9F8A0 BL 0x1CA1278
	0x01C9F8A4 LDR X0, [X19 + 0x120]
	0x01C9F8A8 CBZ X0, 0x1CA04E4
	0x01C9F8AC LDR X8, [X0 + 0x40]
	0x01C9F8B0 CBZ X8, 0x1C9FD98
	0x01C9F8B4 LDRB W9, [X8 + 0x60]
	0x01C9F8B8 TBNZ X9, 0x1, 0x1C9FD98
	0x01C9F8BC MOV X0, X8
	0x01C9F8C0 MOV X1, X31
	0x01C9F8C4 BL 0x1D9E780
	0x01C9F8C8 TBZ X0, 0x0, 0x1C9FD90
	0x01C9F8CC LDRB W9, [X19 + 0x8B]
	0x01C9F8D0 LDR X8, [X19 + 0x120]
	0x01C9F8D4 CBZ W9, 0x1CA0118
	0x01C9F8D8 CBZ X8, 0x1CA04E4
	0x01C9F8DC LDR W9, [X8 + 0x80]
	0x01C9F8E0 AND W9, W9, 0xFFFFFFFE
	0x01C9F8E4 CMP W9, 0x2
	0x01C9F8E8 B.EQ 0x1CA011C
	0x01C9F8EC MOV X0, X19
	0x01C9F8F0 MOV X1, X31
	0x01C9F8F4 BL 0x3A9B084
	0x01C9F8F8 CBZ X0, 0x1CA04E4
	0x01C9F8FC MOV X1, X31
	0x01C9F900 BL 0x3AA7658
	0x01C9F904 MOV X0, X19
	0x01C9F908 MOV X1, X31
	0x01C9F90C MOV V12.16B, V0.16B
	0x01C9F910 MOV V15.16B, V1.16B
	0x01C9F914 MOV V14.16B, V2.16B
	0x01C9F918 BL 0x3A9B084
	0x01C9F91C CBZ X0, 0x1CA04E4
	0x01C9F920 ADRP X8, 0x22AF000
	0x01C9F924 LDR X8, [X8 + 0x430]
	0x01C9F928 LDR X1, [X8]
	0x01C9F92C BL 0x2090A90
	0x01C9F930 CBZ X0, 0x1CA04E4
	0x01C9F934 LDR W8, [X0 + 0x18]
	0x01C9F938 MOV X21, X0
	0x01C9F93C CMP W8, 0x1
	0x01C9F940 B.LT 0x1C9FA04
	0x01C9F944 MOVN W9, 0x80800000
	0x01C9F948 MOV W25, W31
	0x01C9F94C FMOV S11, W9
	0x01C9F950 CMP W25, W8
	0x01C9F954 B.CS 0x1CA04E8
	0x01C9F958 ADD X22, X21, W25, 0x3, SXTW
	0x01C9F95C LDR X0, [X22 + 0x20]!
	0x01C9F960 CBZ X0, 0x1CA04E4
	0x01C9F964 MOV X1, X31
	0x01C9F968 BL 0x3AF7384
	0x01C9F96C TBNZ X0, 0x0, 0x1C9F9F4
	0x01C9F970 LDR W8, [X21 + 0x18]
	0x01C9F974 CMP W25, W8
	0x01C9F978 B.CS 0x1CA04E8
	0x01C9F97C LDR X0, [X19 + 0x148]
	0x01C9F980 CBZ X0, 0x1CA04E4
	0x01C9F984 LDR X22, [X22]
	0x01C9F988 MOV X1, X31
	0x01C9F98C BL 0x3AA7658
	0x01C9F990 CBZ X22, 0x1CA04E4
	0x01C9F994 MOV X0, X22
	0x01C9F998 MOV X1, X31
	0x01C9F99C BL 0x3AF7404
	0x01C9F9A0 LDR X0, [X19 + 0x148]
	0x01C9F9A4 CBZ X0, 0x1CA04E4
	0x01C9F9A8 MOV X1, X31
	0x01C9F9AC MOV V8.16B, V0.16B
	0x01C9F9B0 MOV V9.16B, V1.16B
	0x01C9F9B4 MOV V10.16B, V2.16B
	0x01C9F9B8 BL 0x3AA7658
	0x01C9F9BC FSUB S0, S0, S8
	0x01C9F9C0 FSUB S1, S1, S9
	0x01C9F9C4 FSUB S2, S2, S10
	0x01C9F9C8 FMUL S0, S0, S0
	0x01C9F9CC FMUL S1, S1, S1
	0x01C9F9D0 FADD S0, S0, S1
	0x01C9F9D4 FMUL S1, S2, S2
	0x01C9F9D8 FADD S0, S1, S0
	0x01C9F9DC FCMP S0, S11
	0x01C9F9E0 B.PL 0x1C9F9F4
	0x01C9F9E4 MOV V11.16B, V0.16B
	0x01C9F9E8 MOV V14.16B, V10.16B
	0x01C9F9EC MOV V15.16B, V9.16B
	0x01C9F9F0 MOV V12.16B, V8.16B
	0x01C9F9F4 LDR W8, [X21 + 0x18]
	0x01C9F9F8 ADD W25, W25, 0x1
	0x01C9F9FC CMP W25, W8
	0x01C9FA00 B.LT 0x1C9F950
	0x01C9FA04 LDR X0, [X19 + 0x148]
	0x01C9FA08 CBZ X0, 0x1CA04E4
	0x01C9FA0C MOV X1, X31
	0x01C9FA10 BL 0x3AA5FBC
	0x01C9FA14 MOV X0, X31
	0x01C9FA18 BL 0x3A925C8
	0x01C9FA1C LDR X0, [X19 + 0xA8]
	0x01C9FA20 CBZ X0, 0x1CA04E4
	0x01C9FA24 MOV X1, X31
	0x01C9FA28 MOV V8.16B, V0.16B
	0x01C9FA2C MOV V9.16B, V1.16B
	0x01C9FA30 MOV V10.16B, V2.16B
	0x01C9FA34 MOV V11.16B, V3.16B
	0x01C9FA38 BL 0x3AA7658
	0x01C9FA3C FSUB S4, S0, S12

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x2585000
	009 Move X21, 0x22B0000
	010 Move X24, 0x22B0000
	011 Move X20, 0x22B0000
	012 Move W8, [X22+1041]
	013 Move X21, [X21+664]
	014 Move X24, [X24+976]
	015 Move X20, [X20+984]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {53}
	021 Move X0, 0x22B0000
	022 Move X0, [X0+992]
	023 Call 0x1B6F7F0
	024 Move X0, 0x22B0000
	025 Move X0, [X0+1000]
	026 Call 0x1B6F7F0
	027 Move X0, 0x22B0000
	028 Move X0, [X0+416]
	029 Call 0x1B6F7F0
	030 Move X0, 0x22B0000
	031 Move X0, [X0+976]
	032 Call 0x1B6F7F0
	033 Move X0, 0x22B0000
	034 Move X0, [X0+664]
	035 Call 0x1B6F7F0
	036 Move X0, 0x22B0000
	037 Move X0, [X0+1008]
	038 Call 0x1B6F7F0
	039 Move X0, 0x22B0000
	040 Move X0, [X0+1016]
	041 Call 0x1B6F7F0
	042 Move X0, 0x22B0000
	043 Move X0, [X0+1024]
	044 Call 0x1B6F7F0
	045 Move X0, 0x22B0000
	046 Move X0, [X0+984]
	047 Call 0x1B6F7F0
	048 Move X0, 0x22AF000
	049 Move X0, [X0+3960]
	050 Call 0x1B6F7F0
	051 Move W8, 1
	052 Move [X22+1041], W8
	053 Move X1, [X21]
	054 Move X23, 0x22AF000
	055 Move X22, 0x22B0000
	056 Move X21, 0x22B0000
	057 Move X23, [X23+3960]
	058 Move X22, [X22+1000]
	059 Move X21, [X21+1024]
	060 Move X0, X19
	061 Call 0x2090DE8, X0
	062 Move [X19+304], X0
	063 Move X1, [X24]
	064 Move X0, X19
	065 Call 0x2090DE8, X0
	066 Move X8, -18812928
	067 Move V0, [X8+1752]
	068 Add X8, X19, 380
	069 Move [X19+312], X0
	070 Move [X8], D0
	071 Move X0, [X20]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {77}
	075 Call 0x1B6F8F8
	076 Move X0, [X20]
	077 Move X8, [X0+184]
	078 Move X1, X31
	079 Move W0, [X8]
	080 Call LayerMask.op_Implicit, X0
	081 Move X8, [X20]
	082 Move W20, W0
	083 Move X1, X31
	084 Move X8, [X8+184]
	085 Move W8, [X8+4]
	086 Move X0, X8
	087 Call LayerMask.op_Implicit, X0
	088 Or W0, W0, W20
	089 Move X1, X31
	090 Call LayerMask.op_Implicit, X0
	091 Move [X19+320], W0
	092 Move X8, [X23]
	093 Move X0, [X22]
	094 Move X8, [X8+184]
	095 Move X20, [X8+48]
	096 Call 0x1B6FA0C
	097 Move X2, [X21]
	098 Move X1, X19
	099 Move X3, X31
	100 Move X21, X0
	101 Call Action`1<PlayerRef>..ctor, X0, X1, X2
	102 Move X0, X20
	103 Move X1, X21
	104 Move X2, X31
	105 Call Delegate.Combine, X0, X1
	106 Move X20, [X22]
	107 Compare X0, 0
	108 JumpIfEqual {126}
	109 Move X1, X20
	110 Move X21, X0
	111 Call 0x1B6F8FC
	112 Compare X0, 0
	113 JumpIfEqual {215}
	114 Move X8, [X23]
	115 Move X8, [X8+184]
	116 Move [X8+48], X0
	117 Move X20, [X22]
	118 Move X0, X21
	119 Move X1, X20
	120 Call 0x1B6F8FC
	121 Compare X0, 0
	122 JumpIfEqual {215}
	123 Move X8, [X23]
	124 Move X20, [X22]
	125 Move X8, [X8+184]
	126 Move X8, [X23]
	127 Move X8, [X8+184]
	128 Move [X8+48], X31
	129 Move X24, 0x22B0000
	130 Move X21, [X8+56]
	131 Move X24, [X24+1016]
	132 Move X0, X20
	133 Call 0x1B6FA0C
	134 Move X2, [X24]
	135 Move X1, X19
	136 Move X3, X31
	137 Move X20, X0
	138 Call Action`1<PlayerRef>..ctor, X0, X1, X2
	139 Move X0, X21
	140 Move X1, X20
	141 Move X2, X31
	142 Call Delegate.Combine, X0, X1
	143 Compare X0, 0
	144 JumpIfEqual {163}
	145 Move X21, [X22]
	146 Move X20, X0
	147 Move X1, X21
	148 Call 0x1B6F8FC
	149 Compare X0, 0
	150 JumpIfEqual {160}
	151 Move X8, [X23]
	152 Move X8, [X8+184]
	153 Move [X8+56], X0
	154 Move X21, [X22]
	155 Move X0, X20
	156 Move X1, X21
	157 Call 0x1B6F8FC
	158 Compare X0, 0
	159 JumpIfNotEqual {166}
	160 Move X0, X20
	161 Move X1, X21
	162 Call 0x1B6FCDC
	163 Move X8, [X23]
	164 Move X8, [X8+184]
	165 Move [X8+56], X31
	166 Move X22, 0x22B0000
	167 Move X22, [X22+416]
	168 Move X23, 0x22B0000
	169 Move X21, 0x22B0000
	170 Move X8, [X22]
	171 Move X8, [X8+184]
	172 Move X23, [X23+992]
	173 Move X20, [X8]
	174 Move X0, [X23]
	175 Move X21, [X21+1008]
	176 Call 0x1B6FA0C
	177 Move X2, [X21]
	178 Move X1, X19
	179 Move X3, X31
	180 Move X21, X0
	181 Call Action`1<NetworkBehaviourId>..ctor, X0, X1, X2
	182 Move X0, X20
	183 Move X1, X21
	184 Move X2, X31
	185 Call Delegate.Combine, X0, X1
	186 Compare X0, 0
	187 JumpIfEqual {204}
	188 Move X20, [X23]
	189 Move X19, X0
	190 Move X1, X20
	191 Call 0x1B6F8FC
	192 Compare X0, 0
	193 JumpIfEqual {203}
	194 Move X8, [X22]
	195 Move X8, [X8+184]
	196 Move [X8], X0
	197 Move X20, [X23]
	198 Move X0, X19
	199 Move X1, X20
	200 Call 0x1B6F8FC
	201 Compare X0, 0
	202 JumpIfNotEqual {207}
	203 Move X0, X19
	204 Move X8, [X22]
	205 Move X8, [X8+184]
	206 Move [X8], X31
	207 Move X20, [X31+48]
	208 Move X19, [X31+56]
	209 Move X22, [X31+32]
	210 Move X21, [X31+40]
	211 Move X24, [X31+16]
	212 Move X23, [X31+24]
	213 Move X30, [X31+64]
	214 Return 
	215 Move X0, X21
	216 Move X1, X20
	217 Call 0x1B6FCDC

Method: System.Void OnDestroy()

Disassembly:
	0x01C9FA40 FSUB S5, S1, S15
	0x01C9FA44 FSUB S6, S2, S14
	0x01C9FA48 MOV V0.16B, V8.16B
	0x01C9FA4C MOV V1.16B, V9.16B
	0x01C9FA50 MOV V2.16B, V10.16B
	0x01C9FA54 MOV V3.16B, V11.16B
	0x01C9FA58 MOV X0, X31
	0x01C9FA5C STR S12, [X31 + 0xC]
	0x01C9FA60 BL 0x3A92D64
	0x01C9FA64 MOV X0, X19
	0x01C9FA68 MOV X1, X31
	0x01C9FA6C MOV V11.16B, V0.16B
	0x01C9FA70 MOV V12.16B, V1.16B
	0x01C9FA74 MOV V13.16B, V2.16B
	0x01C9FA78 BL 0x3A9B084
	0x01C9FA7C CBZ X0, 0x1CA04E4
	0x01C9FA80 ADD X8, X31, 0x10
	0x01C9FA84 MOV X1, X31
	0x01C9FA88 BL 0x3AA7FD8
	0x01C9FA8C LDP V0, V1, [X31 + 0x10]
	0x01C9FA90 LDP V2, V3, [X31 + 0x30]
	0x01C9FA94 ADD X0, X31, 0x50
	0x01C9FA98 MOV X1, X31
	0x01C9FA9C STP V0, V1, [X31 + 0x50]
	0x01C9FAA0 STP V2, V3, [X31 + 0x70]
	0x01C9FAA4 BL 0x3A8F2DC
	0x01C9FAA8 LDR X0, [X19 + 0x148]
	0x01C9FAAC CBZ X0, 0x1CA04E4
	0x01C9FAB0 MOV X1, X31
	0x01C9FAB4 BL 0x3AA5FBC
	0x01C9FAB8 LDR X0, [X19 + 0xA8]
	0x01C9FABC CBZ X0, 0x1CA04E4
	0x01C9FAC0 MOV V0.16B, V11.16B
	0x01C9FAC4 MOV V1.16B, V12.16B
	0x01C9FAC8 MOV V2.16B, V13.16B
	0x01C9FACC MOV X1, X31
	0x01C9FAD0 BL 0x3AA6D0C
	0x01C9FAD4 LDR X0, [X19 + 0x148]
	0x01C9FAD8 CBZ X0, 0x1CA04E4
	0x01C9FADC LDR X21, [X19 + 0xA8]
	0x01C9FAE0 MOV X1, X31
	0x01C9FAE4 STP S15, S14, [X31 + 0x4]
	0x01C9FAE8 BL 0x3AA5FBC
	0x01C9FAEC MOV X0, X31
	0x01C9FAF0 BL 0x3A925C8
	0x01C9FAF4 MOV X0, X19
	0x01C9FAF8 MOV X1, X31
	0x01C9FAFC MOV V13.16B, V0.16B
	0x01C9FB00 MOV V12.16B, V1.16B
	0x01C9FB04 MOV V11.16B, V2.16B
	0x01C9FB08 MOV V14.16B, V3.16B
	0x01C9FB0C BL 0x3A9B084
	0x01C9FB10 CBZ X0, 0x1CA04E4
	0x01C9FB14 MOV X1, X31
	0x01C9FB18 BL 0x3AA5FBC
	0x01C9FB1C LDR X0, [X19 + 0xA8]
	0x01C9FB20 CBZ X0, 0x1CA04E4
	0x01C9FB24 MOV X1, X31
	0x01C9FB28 MOV V9.16B, V0.16B
	0x01C9FB2C MOV V8.16B, V1.16B
	0x01C9FB30 MOV V15.16B, V2.16B
	0x01C9FB34 MOV V10.16B, V3.16B
	0x01C9FB38 BL 0x3AA78FC
	0x01C9FB3C CBZ X21, 0x1CA04E4
	0x01C9FB40 FMUL S4, S14, S9
	0x01C9FB44 FMUL S5, S13, S10
	0x01C9FB48 FMUL S16, S14, S8
	0x01C9FB4C FMUL S17, S12, S10
	0x01C9FB50 FMUL S21, S13, S9
	0x01C9FB54 FMUL S24, S14, S15
	0x01C9FB58 FMUL S25, S14, S10
	0x01C9FB5C FMUL S26, S11, S10
	0x01C9FB60 FMUL S6, S12, S15
	0x01C9FB64 FMUL S18, S11, S9
	0x01C9FB68 FMUL S20, S13, S8
	0x01C9FB6C FMUL S23, S12, S8
	0x01C9FB70 FADD S4, S4, S5
	0x01C9FB74 FADD S5, S16, S17
	0x01C9FB78 FADD S16, S24, S26
	0x01C9FB7C FSUB S17, S25, S21
	0x01C9FB80 FMUL S7, S11, S8
	0x01C9FB84 FMUL S19, S13, S15
	0x01C9FB88 FMUL S22, S12, S9
	0x01C9FB8C FMUL S27, S11, S15
	0x01C9FB90 FADD S4, S6, S4
	0x01C9FB94 FADD S5, S18, S5
	0x01C9FB98 FADD S6, S20, S16
	0x01C9FB9C FSUB S16, S17, S23
	0x01C9FBA0 FSUB S4, S4, S7
	0x01C9FBA4 FSUB S5, S5, S19
	0x01C9FBA8 FSUB S6, S6, S22
	0x01C9FBAC FSUB S7, S16, S27
	0x01C9FBB0 FMUL S16, S7, S3
	0x01C9FBB4 FMUL S17, S4, S0
	0x01C9FBB8 FMUL S18, S5, S1
	0x01C9FBBC FMUL S19, S6, S2
	0x01C9FBC0 FMUL S20, S4, S1
	0x01C9FBC4 FMUL S21, S7, S2
	0x01C9FBC8 FMUL S22, S6, S3
	0x01C9FBCC FMUL S23, S5, S0
	0x01C9FBD0 FMUL S24, S5, S3
	0x01C9FBD4 FMUL S5, S5, S2
	0x01C9FBD8 FMUL S25, S4, S2
	0x01C9FBDC FMUL S2, S4, S3
	0x01C9FBE0 FMUL S3, S6, S0
	0x01C9FBE4 FMUL S0, S7, S0
	0x01C9FBE8 FMUL S4, S7, S1
	0x01C9FBEC FMUL S6, S6, S1
	0x01C9FBF0 FSUB S1, S16, S17
	0x01C9FBF4 FADD S7, S21, S22
	0x01C9FBF8 FADD S4, S4, S24
	0x01C9FBFC FADD S0, S0, S2
	0x01C9FC00 FSUB S1, S1, S18
	0x01C9FC04 FADD S2, S20, S7
	0x01C9FC08 FADD S4, S3, S4
	0x01C9FC0C FADD S0, S5, S0
	0x01C9FC10 FSUB S3, S1, S19
	0x01C9FC14 FSUB S2, S2, S23
	0x01C9FC18 FSUB S1, S4, S25
	0x01C9FC1C FSUB S0, S0, S6
	0x01C9FC20 MOV X0, X21
	0x01C9FC24 MOV X1, X31
	0x01C9FC28 BL 0x3AA7984
	0x01C9FC2C MOV X0, X19
	0x01C9FC30 MOV X1, X31
	0x01C9FC34 BL 0x3A9B084
	0x01C9FC38 CBZ X0, 0x1CA04E4
	0x01C9FC3C LDP S2, S0, [X31 + 0x8]
	0x01C9FC40 LDR V1, [X31 + 0x4]
	0x01C9FC44 MOV X1, X31
	0x01C9FC48 BL 0x3AA76F8
	0x01C9FC4C MOV X0, X19
	0x01C9FC50 MOV X1, X31
	0x01C9FC54 BL 0x3A9B084
	0x01C9FC58 LDR X8, [X19 + 0x148]
	0x01C9FC5C CBZ X8, 0x1CA04E4
	0x01C9FC60 MOV X21, X0
	0x01C9FC64 MOV X0, X8
	0x01C9FC68 MOV X1, X31
	0x01C9FC6C BL 0x3AA5FBC
	0x01C9FC70 CBZ X21, 0x1CA04E4
	0x01C9FC74 MOV X0, X21
	0x01C9FC78 MOV X1, X31
	0x01C9FC7C BL 0x3AA7878
	0x01C9FC80 B 0x1CA0274
	0x01C9FC84 LDR X0, [X24]
	0x01C9FC88 LDR X21, [X19 + 0xA0]
	0x01C9FC8C LDR W8, [X0 + 0xE0]
	0x01C9FC90 CBNZ W8, 0x1C9FC98
	0x01C9FC94 BL 0x1B6E8F8
	0x01C9FC98 MOV X0, X21
	0x01C9FC9C MOV X1, X31
	0x01C9FCA0 MOV X2, X31
	0x01C9FCA4 BL 0x3A9D6EC
	0x01C9FCA8 TBZ X0, 0x0, 0x1C9FD50
	0x01C9FCAC LDR X0, [X19 + 0xA0]
	0x01C9FCB0 CBZ X0, 0x1CA04E4
	0x01C9FCB4 LDR X1, [X19 + 0xA8]
	0x01C9FCB8 MOV X2, X31
	0x01C9FCBC BL 0x3AA7DEC
	0x01C9FCC0 ADRP X22, 0x2584000
	0x01C9FCC4 LDRB W8, [X22 + 0x43F]
	0x01C9FCC8 LDR X21, [X19 + 0xA0]
	0x01C9FCCC CBNZ W8, 0x1C9FCE4
	0x01C9FCD0 ADRP X0, 0x22AE000
	0x01C9FCD4 LDR X0, [X0 + 0x480]
	0x01C9FCD8 BL 0x1B6E7F0
	0x01C9FCDC MOVZ W8, 0x1
	0x01C9FCE0 STRB W8, [X22 + 0x43F]
	0x01C9FCE4 ADRP X8, 0x22AE000
	0x01C9FCE8 LDR X8, [X8 + 0x480]
	0x01C9FCEC ADRP X22, 0x2584000
	0x01C9FCF0 LDRB W9, [X22 + 0x454]
	0x01C9FCF4 LDR X8, [X8]
	0x01C9FCF8 LDR X8, [X8 + 0xB8]
	0x01C9FCFC LDP S10, S9, [X8]
	0x01C9FD00 LDR V8, [X8 + 0x8]
	0x01C9FD04 CBNZ W9, 0x1C9FD1C
	0x01C9FD08 ADRP X0, 0x22AF000
	0x01C9FD0C LDR X0, [X0 + 0x1F8]
	0x01C9FD10 BL 0x1B6E7F0
	0x01C9FD14 MOVZ W8, 0x1
	0x01C9FD18 STRB W8, [X22 + 0x454]
	0x01C9FD1C CBZ X21, 0x1CA04E4
	0x01C9FD20 ADRP X8, 0x22AF000
	0x01C9FD24 LDR X8, [X8 + 0x1F8]
	0x01C9FD28 MOV X0, X21
	0x01C9FD2C MOV V0.16B, V10.16B
	0x01C9FD30 MOV V1.16B, V9.16B
	0x01C9FD34 LDR X8, [X8]
	0x01C9FD38 MOV V2.16B, V8.16B
	0x01C9FD3C MOV X1, X31
	0x01C9FD40 LDR X8, [X8 + 0xB8]
	0x01C9FD44 LDP S5, S6, [X8 + 0x8]
	0x01C9FD48 LDP S3, S4, [X8]
	0x01C9FD4C BL 0x3AA8180

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x2585000
	009 Move X21, 0x22B0000
	010 Move W8, [X20+1042]
	011 Move X21, [X21+448]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {49}
	017 Move X0, 0x22B0000
	018 Move X0, [X0+992]
	019 Call 0x1B6F7F0
	020 Move X0, 0x22B0000
	021 Move X0, [X0+1000]
	022 Call 0x1B6F7F0
	023 Move X0, 0x22B0000
	024 Move X0, [X0+416]
	025 Call 0x1B6F7F0
	026 Move X0, 0x22B0000
	027 Move X0, [X0+1008]
	028 Call 0x1B6F7F0
	029 Move X0, 0x22B0000
	030 Move X0, [X0+1016]
	031 Call 0x1B6F7F0
	032 Move X0, 0x22B0000
	033 Move X0, [X0+1024]
	034 Call 0x1B6F7F0
	035 Move X0, 0x22B0000
	036 Move X0, [X0+968]
	037 Call 0x1B6F7F0
	038 Move X0, 0x22B0000
	039 Move X0, [X0+1032]
	040 Call 0x1B6F7F0
	041 Move X0, 0x22B0000
	042 Move X0, [X0+448]
	043 Call 0x1B6F7F0
	044 Move X0, 0x22AF000
	045 Move X0, [X0+3960]
	046 Call 0x1B6F7F0
	047 Move W8, 1
	048 Move [X20+1042], W8
	049 Move X0, [X21]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1B6F8F8
	054 Compare X19, 0
	055 JumpIfEqual {217}
	056 Move W8, [X19+48]
	057 Move X22, 0x22AF000
	058 Move X22, [X22+3960]
	059 Move X23, 0x22B0000
	060 Or W8, W8, 8
	061 Move [X19+48], W8
	062 Move X8, [X22]
	063 Move X21, 0x22B0000
	064 Move X8, [X8+184]
	065 Move X23, [X23+1000]
	066 Move X20, [X8+48]
	067 Move X0, [X23]
	068 Move X21, [X21+1024]
	069 Call 0x1B6FA0C
	070 Move X2, [X21]
	071 Move X1, X19
	072 Move X3, X31
	073 Move X21, X0
	074 Call Action`1<PlayerRef>..ctor, X0, X1, X2
	075 Move X0, X20
	076 Move X1, X21
	077 Move X2, X31
	078 Call Delegate.Remove, X0, X1
	079 Move X20, [X23]
	080 Compare X0, 0
	081 JumpIfEqual {99}
	082 Move X1, X20
	083 Move X21, X0
	084 Call 0x1B6F8FC
	085 Compare X0, 0
	086 JumpIfEqual {218}
	087 Move X8, [X22]
	088 Move X8, [X8+184]
	089 Move [X8+48], X0
	090 Move X20, [X23]
	091 Move X0, X21
	092 Move X1, X20
	093 Call 0x1B6F8FC
	094 Compare X0, 0
	095 JumpIfEqual {218}
	096 Move X8, [X22]
	097 Move X20, [X23]
	098 Move X8, [X8+184]
	099 Move X8, [X22]
	100 Move X8, [X8+184]
	101 Move [X8+48], X31
	102 Move X24, 0x22B0000
	103 Move X21, [X8+56]
	104 Move X24, [X24+1016]
	105 Move X0, X20
	106 Call 0x1B6FA0C
	107 Move X2, [X24]
	108 Move X1, X19
	109 Move X3, X31
	110 Move X20, X0
	111 Call Action`1<PlayerRef>..ctor, X0, X1, X2
	112 Move X0, X21
	113 Move X1, X20
	114 Move X2, X31
	115 Call Delegate.Remove, X0, X1
	116 Compare X0, 0
	117 JumpIfEqual {133}
	118 Move X21, [X23]
	119 Move X20, X0
	120 Move X1, X21
	121 Call 0x1B6F8FC
	122 Compare X0, 0
	123 JumpIfEqual {173}
	124 Move X8, [X22]
	125 Move X8, [X8+184]
	126 Move [X8+56], X0
	127 Move X21, [X23]
	128 Move X0, X20
	129 Move X1, X21
	130 Call 0x1B6F8FC
	131 Compare X0, 0
	132 JumpIfNotEqual {136}
	133 Move X8, [X22]
	134 Move X8, [X8+184]
	135 Move [X8+56], X31
	136 Move X22, 0x22B0000
	137 Move X22, [X22+416]
	138 Move X23, 0x22B0000
	139 Move X21, 0x22B0000
	140 Move X8, [X22]
	141 Move X8, [X8+184]
	142 Move X23, [X23+992]
	143 Move X20, [X8]
	144 Move X0, [X23]
	145 Move X21, [X21+1008]
	146 Call 0x1B6FA0C
	147 Move X2, [X21]
	148 Move X1, X19
	149 Move X3, X31
	150 Move X21, X0
	151 Call Action`1<NetworkBehaviourId>..ctor, X0, X1, X2
	152 Move X0, X20
	153 Move X1, X21
	154 Move X2, X31
	155 Call Delegate.Remove, X0, X1
	156 Compare X0, 0
	157 JumpIfEqual {176}
	158 Move X21, [X23]
	159 Move X20, X0
	160 Move X1, X21
	161 Call 0x1B6F8FC
	162 Compare X0, 0
	163 JumpIfEqual {173}
	164 Move X8, [X22]
	165 Move X8, [X8+184]
	166 Move [X8], X0
	167 Move X21, [X23]
	168 Move X0, X20
	169 Move X1, X21
	170 Call 0x1B6F8FC
	171 Compare X0, 0
	172 JumpIfNotEqual {179}
	173 Move X0, X20
	174 Move X1, X21
	175 Call 0x1B6FCDC
	176 Move X8, [X22]
	177 Move X8, [X8+184]
	178 Move [X8], X31
	179 Move X8, [X19+128]
	180 Compare X8, 0
	181 JumpIfEqual {217}
	182 Move W8, [X8+40]
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move X20, 0x22B0000
	185 Move X20, [X20+968]
	186 Move X0, [X20]
	187 Move W8, [X0+224]
	188 Compare W8, 0
	189 JumpIfNotEqual {192}
	190 Call 0x1B6F8F8
	191 Move X0, [X20]
	192 Move X8, [X0+184]
	193 Move X0, [X8]
	194 Compare X0, 0
	195 JumpIfEqual {217}
	196 Move X8, 0x22B0000
	197 Move X8, [X8+1032]
	198 Move X1, X19
	199 Move X20, [X31+48]
	200 Move X19, [X31+56]
	201 Move X22, [X31+32]
	202 Move X21, [X31+40]
	203 Move X2, [X8]
	204 Move X24, [X31+16]
	205 Move X23, [X31+24]
	206 Move X30, [X31+64]
	207 Call HashSet`1<Object>.Remove, X0, X1
	208 Return 
	209 Move X20, [X31+48]
	210 Move X19, [X31+56]
	211 Move X22, [X31+32]
	212 Move X21, [X31+40]
	213 Move X24, [X31+16]
	214 Move X23, [X31+24]
	215 Move X30, [X31+64]
	216 Return 
	217 Call 0x1B6FA1C
	218 Move X0, X21
	219 Move X1, X20
	220 Call 0x1B6FCDC

Method: System.Void AddExternalForce(UnityEngine.Vector3 force)

Disassembly:
	0x01C9FD50 LDR X0, [X24]
	0x01C9FD54 LDR X21, [X19 + 0x138]
	0x01C9FD58 LDR W8, [X0 + 0xE0]
	0x01C9FD5C CBNZ W8, 0x1C9FD64
	0x01C9FD60 BL 0x1B6E8F8
	0x01C9FD64 MOV X0, X21
	0x01C9FD68 MOV X1, X31
	0x01C9FD6C MOV X2, X31
	0x01C9FD70 BL 0x3A9D6EC
	0x01C9FD74 TBZ X0, 0x0, 0x1C9FDA4
	0x01C9FD78 LDR X0, [X19 + 0x138]
	0x01C9FD7C CBZ X0, 0x1CA04E4
	0x01C9FD80 MOVZ W1, 0x1
	0x01C9FD84 MOV X2, X31
	0x01C9FD88 BL 0x3A9A604
	0x01C9FD8C B 0x1C9FDA4
	0x01C9FD90 LDR X0, [X20]
	0x01C9FD94 CBZ X0, 0x1CA04E4
	0x01C9FD98 MOV X1, X31
	0x01C9FD9C BL 0x3A9B084
	0x01C9FDA0 STR X0, [X19 + 0x148]
	0x01C9FDA4 ADRP X25, 0x22AF000
	0x01C9FDA8 ADRP X26, 0x22AF000
	0x01C9FDAC ADRP X27, 0x22AF000
	0x01C9FDB0 LDR X25, [X25 + 0x450]
	0x01C9FDB4 LDR X26, [X26 + 0x170]
	0x01C9FDB8 LDR X27, [X27 + 0x440]
	0x01C9FDBC MOV X0, X19
	0x01C9FDC0 BL 0x1CA0788
	0x01C9FDC4 MOV X0, X19
	0x01C9FDC8 BL 0x1CA0F10
	0x01C9FDCC LDR X8, [X19 + 0x188]
	0x01C9FDD0 CBZ X8, 0x1C9FDE4
	0x01C9FDD4 LDR X9, [X8 + 0x18]
	0x01C9FDD8 LDR X0, [X8 + 0x40]
	0x01C9FDDC LDR X1, [X8 + 0x28]
	0x01C9FDE0 BLR X9
	0x01C9FDE4 LDR X8, [X25]
	0x01C9FDE8 LDR X0, [X26]
	0x01C9FDEC LDR X8, [X8 + 0xB8]
	0x01C9FDF0 LDR X21, [X8 + 0x78]
	0x01C9FDF4 BL 0x1B6EA0C
	0x01C9FDF8 LDR X2, [X27]
	0x01C9FDFC MOV X1, X19
	0x01C9FE00 MOV X3, X31
	0x01C9FE04 MOV X22, X0
	0x01C9FE08 BL 0x317DB24
	0x01C9FE0C MOV X0, X21
	0x01C9FE10 MOV X1, X22
	0x01C9FE14 MOV X2, X31
	0x01C9FE18 BL 0x322A948
	0x01C9FE1C LDR X1, [X26]
	0x01C9FE20 CBZ X0, 0x1C9FE4C
	0x01C9FE24 LDR X8, [X0]
	0x01C9FE28 CMP X8, X1
	0x01C9FE2C B.NE 0x1C9FF94
	0x01C9FE30 LDR X8, [X25]
	0x01C9FE34 LDR X8, [X8 + 0xB8]
	0x01C9FE38 STR X0, [X8 + 0x78]
	0x01C9FE3C LDR X9, [X0]
	0x01C9FE40 CMP X9, X1
	0x01C9FE44 B.EQ 0x1C9FE58
	0x01C9FE48 B 0x1C9FF94
	0x01C9FE4C LDR X8, [X25]
	0x01C9FE50 LDR X8, [X8 + 0xB8]
	0x01C9FE54 STR X0, [X8 + 0x78]
	0x01C9FE58 LDR X21, [X8 + 0x68]
	0x01C9FE5C MOV X0, X1
	0x01C9FE60 BL 0x1B6EA0C
	0x01C9FE64 LDR X2, [X27]
	0x01C9FE68 MOV X1, X19
	0x01C9FE6C MOV X3, X31
	0x01C9FE70 MOV X22, X0
	0x01C9FE74 BL 0x317DB24
	0x01C9FE78 MOV X0, X21
	0x01C9FE7C MOV X1, X22
	0x01C9FE80 MOV X2, X31

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2585000
	009 Move X20, 0x22AF000
	010 Move W8, [X21+1043]
	011 Move X20, [X20+1144]
	012 Move V8, V2
	013 Move V9, V1
	014 Move V10, V0
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x22AF000
	021 Move X0, [X0+1144]
	022 Call 0x1B6F7F0
	023 Move X0, 0x22B0000
	024 Move X0, [X0+408]
	025 Call 0x1B6F7F0
	026 Move W8, 1
	027 Move [X21+1043], W8
	028 Move X0, [X20]
	029 Move X20, [X19+288]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1B6F8F8
	034 Move X0, X20
	035 Move X1, X31
	036 Move X2, X31
	037 Call Object.op_Equality, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {98}
	042 Move X8, [X19+288]
	043 Compare X8, 0
	044 JumpIfEqual {106}
	045 Move X0, [X8+64]
	046 Compare X0, 0
	047 JumpIfEqual {98}
	048 Move W8, [X0+96]
	049 Move TEMP, X8
	050 And TEMP, TEMP, 2
	051 Compare TEMP, 2
	052 JumpIfEqual {98}
	053 Move X1, X31
	054 Call NetworkObject.get_HasInputAuthority, X0
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {98}
	059 Move X19, 0x22B0000
	060 Move X19, [X19+408]
	061 Move X0, [X19]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1B6F8F8
	066 Move X20, 0x2585000
	067 Move W8, [X20+1103]
	068 Compare W8, 0
	069 JumpIfNotEqual {75}
	070 Move X0, 0x22B0000
	071 Move X0, [X0+408]
	072 Call 0x1B6F7F0
	073 Move W8, 1
	074 Move [X20+1103], W8
	075 Move X0, [X19]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {81}
	079 Call 0x1B6F8F8
	080 Move X0, [X19]
	081 Move X8, [X0+184]
	082 Move X0, [X8]
	083 Compare X0, 0
	084 JumpIfEqual {106}
	085 Move V1, V9
	086 Move V2, V8
	087 Move X20, [X31+48]
	088 Move X19, [X31+56]
	089 Move X30, [X31+32]
	090 Move X21, [X31+40]
	091 Move D9, [X31+16]
	092 Move D8, [X31+24]
	093 Move V0, V10
	094 Move X1, X31
	095 Move V10, [X31+64]
	096 Call PlayerController.AddExternalForce, X0, X1
	097 Return 
	098 Move X20, [X31+48]
	099 Move X19, [X31+56]
	100 Move X30, [X31+32]
	101 Move X21, [X31+40]
	102 Move D9, [X31+16]
	103 Move D8, [X31+24]
	104 Move V10, [X31+64]
	105 Return 
	106 Call 0x1B6FA1C

Method: System.Void SnapToFollow()

Disassembly:
	0x01C9BF00 MOV V2.16B, V11.16B
	0x01C9BF04 MOV X2, X23
	0x01C9BF08 MOV V3.16B, V10.16B
	0x01C9BF0C MOV V4.16B, V9.16B
	0x01C9BF10 MOV V5.16B, V8.16B
	0x01C9BF14 MOV X4, X19
	0x01C9BF18 LDP X20, X19, [X31 + 0x60]
	0x01C9BF1C LDP X22, X21, [X31 + 0x50]
	0x01C9BF20 LDP X24, X23, [X31 + 0x40]
	0x01C9BF24 LDP X30, X25, [X31 + 0x30]
	0x01C9BF28 LDP D9, D8, [X31 + 0x20]
	0x01C9BF2C LDP D11, D10, [X31 + 0x10]
	0x01C9BF30 MOV V0.16B, V13.16B
	0x01C9BF34 MOV V1.16B, V12.16B
	0x01C9BF38 LDP D13, D12, [X31], #0x70
	0x01C9BF3C B 0x1C9B990
	0x01C9BF40 BL 0x1B6EA1C
	0x01C9BF44 MOV X1, X31
	0x01C9BF48 B 0x1D661D8
	0x01C9BF4C LDR W1, [X0 + 0x98]
	0x01C9BF50 B 0x1C9B904
	0x01C9BF54 STP X30, X19, [X31 - 0x10]!
	0x01C9BF58 MOV X19, X0
	0x01C9BF5C BL 0x1C9B8A4
	0x01C9BF60 STR W0, [X19 + 0x98]
	0x01C9BF64 LDP X30, X19, [X31], #0x10
	0x01C9BF68 RET
	0x01C9BF6C SUB X31, X31, 0x80
	0x01C9BF70 STP D13, D12, [X31 + 0x20]
	0x01C9BF74 STP D11, D10, [X31 + 0x30]
	0x01C9BF78 STP D9, D8, [X31 + 0x40]
	0x01C9BF7C STP X30, X23, [X31 + 0x50]
	0x01C9BF80 STP X22, X21, [X31 + 0x60]
	0x01C9BF84 STP X20, X19, [X31 + 0x70]
	0x01C9BF88 ADRP X20, 0x2588000
	0x01C9BF8C LDRB W8, [X20 + 0x3FA]
	0x01C9BF90 MOV X21, X1
	0x01C9BF94 MOV X19, X0
	0x01C9BF98 TBNZ X8, 0x0, 0x1C9BFB0
	0x01C9BF9C ADRP X0, 0x22B3000
	0x01C9BFA0 LDR X0, [X0 + 0x260]
	0x01C9BFA4 BL 0x1B6E7F0
	0x01C9BFA8 MOVZ W8, 0x1
	0x01C9BFAC STRB W8, [X20 + 0x3FA]
	0x01C9BFB0 MOVZ W0, 0x1
	0x01C9BFB4 MOV X1, X31
	0x01C9BFB8 STP X31, X31, [X31 + 0x10]
	0x01C9BFBC STR X31, [X31 + 0x8]
	0x01C9BFC0 MOVZ W22, 0x1
	0x01C9BFC4 BL 0x1D29EBC
	0x01C9BFC8 LDR W20, [X21 + 0x24]
	0x01C9BFCC LDP S8, S9, [X21 + 0x28]
	0x01C9BFD0 LDR V10, [X21 + 0x30]
	0x01C9BFD4 ADD X0, X21, 0x34
	0x01C9BFD8 ADD X1, X31, 0x18
	0x01C9BFDC MOV X2, X31
	0x01C9BFE0 ADD X23, X21, 0x1C
	0x01C9BFE4 BL 0x1D816CC
	0x01C9BFE8 ADD W8, W0, 0x1B
	0x01C9BFEC AND W21, W8, 0xFFFFFFFC
	0x01C9BFF0 ADD X0, X23, W21, SXTW
	0x01C9BFF4 ADD X1, X31, 0x10
	0x01C9BFF8 MOV X2, X31
	0x01C9BFFC BL 0x1D816CC
	0x01C9C000 ADD W8, W0, 0x3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+304]
	006 Compare X0, 0
	007 JumpIfEqual {77}
	008 Move X1, X31
	009 Call Rigidbody.Sleep, X0
	010 Move X0, [X19+328]
	011 Compare X0, 0
	012 JumpIfEqual {77}
	013 Move X20, [X19+304]
	014 Move X1, X31
	015 Call Transform.get_position, X0
	016 Compare X20, 0
	017 JumpIfEqual {77}
	018 Move X0, X20
	019 Move X1, X31
	020 Call Rigidbody.set_position, X0, X1
	021 Move X0, [X19+328]
	022 Compare X0, 0
	023 JumpIfEqual {77}
	024 Move X20, [X19+304]
	025 Move X1, X31
	026 Call Transform.get_rotation, X0
	027 Compare X20, 0
	028 JumpIfEqual {77}
	029 Move X0, X20
	030 Move X1, X31
	031 Call Rigidbody.set_rotation, X0, X1
	032 Move X0, X19
	033 Move X1, X31
	034 Call Component.get_transform, X0
	035 Move X8, [X19+304]
	036 Compare X8, 0
	037 JumpIfEqual {77}
	038 Move X20, X0
	039 Move X0, X8
	040 Move X1, X31
	041 Call Rigidbody.get_position, X0
	042 Compare X20, 0
	043 JumpIfEqual {77}
	044 Move X0, X20
	045 Move X1, X31
	046 Call Transform.set_position, X0, X1
	047 Move X0, X19
	048 Move X1, X31
	049 Call Component.get_transform, X0
	050 Move X8, [X19+304]
	051 Compare X8, 0
	052 JumpIfEqual {77}
	053 Move X20, X0
	054 Move X0, X8
	055 Move X1, X31
	056 Call Rigidbody.get_rotation, X0
	057 Compare X20, 0
	058 JumpIfEqual {77}
	059 Move X0, X20
	060 Move X1, X31
	061 Call Transform.set_rotation, X0, X1
	062 Move X0, X19
	063 Move X1, X31
	064 Call Component.get_transform, X0
	065 Compare X0, 0
	066 JumpIfEqual {77}
	067 Move X1, X31
	068 Call Transform.get_position, X0
	069 Move [X19+344], S0
	070 Move [X19+348], S1
	071 Move [X19+352], S2
	072 Move [X19+336], W31
	073 Move X20, [X31+16]
	074 Move X19, [X31+24]
	075 Move X30, [X31+32]
	076 Return 
	077 Call 0x1B6FA1C

Method: System.Void Grab(AnimalCompany.AttachedItemAnchor interactor, System.Boolean playSFX = True)

Disassembly:
	0x01C9AAC0 MOV X1, X31
	0x01C9AAC4 BL 0x1D680F0
	0x01C9AAC8 TBZ X0, 0x0, 0x1C9AB10
	0x01C9AACC ADRP X21, 0x2589000
	0x01C9AAD0 LDRB W8, [X21 + 0x43F]
	0x01C9AAD4 CBNZ W8, 0x1C9AAEC
	0x01C9AAD8 ADRP X0, 0x22B3000
	0x01C9AADC LDR X0, [X0 + 0x480]
	0x01C9AAE0 BL 0x1B6E7F0
	0x01C9AAE4 MOVZ W8, 0x1
	0x01C9AAE8 STRB W8, [X21 + 0x43F]
	0x01C9AAEC ADRP X8, 0x22B3000
	0x01C9AAF0 LDR X8, [X8 + 0x480]
	0x01C9AAF4 AND W1, W20, 0x1
	0x01C9AAF8 MOV X0, X19
	0x01C9AAFC LDR X8, [X8]
	0x01C9AB00 LDR X8, [X8 + 0xB8]
	0x01C9AB04 LDP S0, S1, [X8]
	0x01C9AB08 LDR V2, [X8 + 0x8]
	0x01C9AB0C BL 0x1C9AB24
	0x01C9AB10 LDP X20, X19, [X31 + 0x20]
	0x01C9AB14 LDP X22, X21, [X31 + 0x10]
	0x01C9AB18 LDR X30, [X31], #0x30
	0x01C9AB1C RET
	0x01C9AB20 BL 0x1B6EA1C
	0x01C9AB24 SUB X31, X31, 0xA0
	0x01C9AB28 STP D15, D14, [X31 + 0x40]
	0x01C9AB2C STP D13, D12, [X31 + 0x50]
	0x01C9AB30 STP D11, D10, [X31 + 0x60]
	0x01C9AB34 STP D9, D8, [X31 + 0x70]
	0x01C9AB38 STP X30, X21, [X31 + 0x80]
	0x01C9AB3C STP X20, X19, [X31 + 0x90]
	0x01C9AB40 ADRP X21, 0x2589000
	0x01C9AB44 LDRB W8, [X21 + 0x3F0]
	0x01C9AB48 MOV W19, W1
	0x01C9AB4C MOV V8.16B, V2.16B
	0x01C9AB50 MOV V9.16B, V1.16B
	0x01C9AB54 MOV V15.16B, V0.16B
	0x01C9AB58 MOV X20, X0
	0x01C9AB5C TBNZ X8, 0x0, 0x1C9AB74
	0x01C9AB60 ADRP X0, 0x22B3000
	0x01C9AB64 LDR X0, [X0 + 0x478]
	0x01C9AB68 BL 0x1B6E7F0
	0x01C9AB6C MOVZ W8, 0x1
	0x01C9AB70 STRB W8, [X21 + 0x3F0]
	0x01C9AB74 MOV X0, X20
	0x01C9AB78 STR W31, [X31 + 0x30]
	0x01C9AB7C STR X31, [X31 + 0x28]
	0x01C9AB80 BL 0x1C98D1C
	0x01C9AB84 STR X0, [X31 + 0x38]
	0x01C9AB88 ADD X0, X31, 0x38
	0x01C9AB8C MOV X1, X31
	0x01C9AB90 BL 0x1D680F0
	0x01C9AB94 TBZ X0, 0x0, 0x1C9AD78
	0x01C9AB98 MOV X0, X20
	0x01C9AB9C MOV X1, X31
	0x01C9ABA0 BL 0x3A9B084

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0+56]
	006 Move [X0+360], X1
	007 Compare X8, 0
	008 JumpIfEqual {80}
	009 Move W8, [X8+384]
	010 Move W20, W2
	011 Move X19, X0
	012 Move X21, X1
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X0, [X19+64]
	015 Compare X0, 0
	016 JumpIfEqual {80}
	017 Move W8, [X0+96]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 2
	020 Compare TEMP, 2
	021 JumpIfEqual {62}
	022 Move X1, X31
	023 Call NetworkObject.get_HasStateAuthority, X0
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {59}
	028 Compare X21, 0
	029 JumpIfEqual {80}
	030 Move X8, [X21+64]
	031 Compare X8, 0
	032 JumpIfEqual {69}
	033 Move X8, [X8+32]
	034 Compare X8, 0
	035 JumpIfEqual {69}
	036 Move W1, [X8]
	037 Compare X21, 0
	038 JumpIfEqual {80}
	039 Move X8, [X21+64]
	040 Compare X8, 0
	041 JumpIfEqual {46}
	042 Move X8, [X8+32]
	043 Compare X8, 0
	044 JumpIfEqual {46}
	045 Move W1, [X8]
	046 Move X1, X31
	047 Move W8, [X21+104]
	048 And W2, W20, 1
	049 Move X0, X19
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 NotImplemented "Instruction BFM not yet implemented."
	053 Move X3, X31
	054 Move X4, X31
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Call GrabbableItem.RPC_TryGrab, X0, X1, X2, X3
	058 Return 
	059 Move X0, [X19+64]
	060 Compare X0, 0
	061 JumpIfEqual {80}
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X1, X31
	065 Move X30, [X31+32]
	066 Move X21, [X31+40]
	067 Call NetworkObject.RequestStateAuthority, X0
	068 Return 
	069 Move X1, X31
	070 Move W8, [X21+104]
	071 And W2, W20, 1
	072 Move X0, X19
	073 Move X20, [X31+16]
	074 Move X19, [X31+24]
	075 NotImplemented "Instruction BFM not yet implemented."
	076 Move X30, [X31+32]
	077 Move X21, [X31+40]
	078 Call GrabbableItem.GrabInternal, X0, X1, X2
	079 Return 
	080 Call 0x1B6FA1C

Method: System.Void RPC_TryGrab(Fusion.NetworkBehaviourId interactorId, System.Boolean playSFX = True, Fusion.RpcInfo info = null)

Disassembly:
	0x01C9FF5C MOV X1, X22
	0x01C9FF60 MOV X2, X31
	0x01C9FF64 BL 0x322A948
	0x01C9FF68 CBZ X0, 0x1C9FF98
	0x01C9FF6C LDR X1, [X26]
	0x01C9FF70 LDR X8, [X0]
	0x01C9FF74 CMP X8, X1
	0x01C9FF78 B.NE 0x1C9FF94
	0x01C9FF7C LDR X8, [X25]
	0x01C9FF80 LDR X8, [X8 + 0xB8]
	0x01C9FF84 STR X0, [X8 + 0x8]
	0x01C9FF88 LDR X8, [X0]
	0x01C9FF8C CMP X8, X1
	0x01C9FF90 B.EQ 0x1C9FFA4
	0x01C9FF94 BL 0x1B6ECDC
	0x01C9FF98 LDR X8, [X25]
	0x01C9FF9C LDR X8, [X8 + 0xB8]
	0x01C9FFA0 STR X0, [X8 + 0x8]
	0x01C9FFA4 LDR X0, [X24]
	0x01C9FFA8 LDR X21, [X20]
	0x01C9FFAC LDR W8, [X0 + 0xE0]
	0x01C9FFB0 CBNZ W8, 0x1C9FFB8
	0x01C9FFB4 BL 0x1B6E8F8
	0x01C9FFB8 MOV X0, X21
	0x01C9FFBC MOV X1, X31
	0x01C9FFC0 MOV X2, X31
	0x01C9FFC4 BL 0x3A9D6EC
	0x01C9FFC8 TBZ X0, 0x0, 0x1CA04A4
	0x01C9FFCC LDR X8, [X20]
	0x01C9FFD0 CBZ X8, 0x1CA04E4
	0x01C9FFD4 LDR X0, [X8 + 0x40]
	0x01C9FFD8 CBZ X0, 0x1CA04A4
	0x01C9FFDC LDRB W8, [X0 + 0x60]
	0x01C9FFE0 TBNZ X8, 0x1, 0x1CA04A4
	0x01C9FFE4 MOV X1, X31
	0x01C9FFE8 BL 0x1D9E6A0
	0x01C9FFEC TBZ X0, 0x0, 0x1CA04A4
	0x01C9FFF0 LDR X8, [X20]
	0x01C9FFF4 CBZ X8, 0x1CA04E4
	0x01C9FFF8 LDR W8, [X8 + 0x80]
	0x01C9FFFC CMP W8, 0x2
	0x01CA0000 B.EQ 0x1CA0078
	0x01CA0004 CMP W8, 0x1
	0x01CA0008 B.EQ 0x1CA00B0
	0x01CA000C CBNZ W8, 0x1CA04A4
	0x01CA0010 LDR X8, [X25]
	0x01CA0014 LDR X0, [X26]
	0x01CA0018 LDR X8, [X8 + 0xB8]
	0x01CA001C LDR X20, [X8 + 0x68]
	0x01CA0020 BL 0x1B6EA0C
	0x01CA0024 LDR X2, [X27]
	0x01CA0028 MOV X1, X19
	0x01CA002C MOV X3, X31
	0x01CA0030 MOV X21, X0
	0x01CA0034 BL 0x317DB24
	0x01CA0038 MOV X0, X20
	0x01CA003C MOV X1, X21
	0x01CA0040 MOV X2, X31
	0x01CA0044 BL 0x322A750
	0x01CA0048 LDR X1, [X26]
	0x01CA004C CBZ X0, 0x1CA03BC
	0x01CA0050 LDR X8, [X0]
	0x01CA0054 CMP X8, X1
	0x01CA0058 B.NE 0x1C9FF94
	0x01CA005C LDR X8, [X25]
	0x01CA0060 LDR X8, [X8 + 0xB8]
	0x01CA0064 STR X0, [X8 + 0x68]
	0x01CA0068 LDR X9, [X0]
	0x01CA006C CMP X9, X1
	0x01CA0070 B.EQ 0x1CA03C8
	0x01CA0074 B 0x1C9FF94
	0x01CA0078 LDR X20, [X19 + 0xC0]
	0x01CA007C CBZ X20, 0x1CA04A4
	0x01CA0080 MOV X0, X19
	0x01CA0084 MOV X1, X31
	0x01CA0088 BL 0x3A9B084
	0x01CA008C CBZ X0, 0x1CA04E4
	0x01CA0090 MOV X1, X31
	0x01CA0094 BL 0x3AA7658
	0x01CA0098 FMOV S3, 1
	0x01CA009C MOVZ W1, 0x1
	0x01CA00A0 MOV X0, X20
	0x01CA00A4 MOV X2, X31
	0x01CA00A8 BL 0x1CC35DC
	0x01CA00AC B 0x1CA04A4
	0x01CA00B0 LDR X8, [X25]
	0x01CA00B4 LDR X0, [X26]
	0x01CA00B8 LDR X8, [X8 + 0xB8]
	0x01CA00BC LDR X20, [X8 + 0x78]
	0x01CA00C0 BL 0x1B6EA0C
	0x01CA00C4 LDR X2, [X27]
	0x01CA00C8 MOV X1, X19
	0x01CA00CC MOV X3, X31
	0x01CA00D0 MOV X21, X0
	0x01CA00D4 BL 0x317DB24
	0x01CA00D8 MOV X0, X20
	0x01CA00DC MOV X1, X21
	0x01CA00E0 MOV X2, X31
	0x01CA00E4 BL 0x322A750
	0x01CA00E8 LDR X1, [X26]
	0x01CA00EC CBZ X0, 0x1CA041C
	0x01CA00F0 LDR X8, [X0]
	0x01CA00F4 CMP X8, X1
	0x01CA00F8 B.NE 0x1C9FF94
	0x01CA00FC LDR X8, [X25]
	0x01CA0100 LDR X8, [X8 + 0xB8]
	0x01CA0104 STR X0, [X8 + 0x78]
	0x01CA0108 LDR X9, [X0]
	0x01CA010C CMP X9, X1
	0x01CA0110 B.EQ 0x1CA0428
	0x01CA0114 B 0x1C9FF94
	0x01CA0118 CBZ X8, 0x1CA04E4
	0x01CA011C LDR W8, [X8 + 0x80]
	0x01CA0120 CMP W8, 0x3
	0x01CA0124 B.NE 0x1CA01DC
	0x01CA0128 LDR X0, [X24]
	0x01CA012C LDR X21, [X19 + 0x90]
	0x01CA0130 LDR W8, [X0 + 0xE0]
	0x01CA0134 CBNZ W8, 0x1CA013C
	0x01CA0138 BL 0x1B6E8F8
	0x01CA013C MOV X0, X21
	0x01CA0140 MOV X1, X31
	0x01CA0144 MOV X2, X31
	0x01CA0148 BL 0x3A9D6EC
	0x01CA014C TBZ X0, 0x0, 0x1CA01DC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x2585000
	008 Move W8, [X23+1044]
	009 Move X22, X3
	010 Move W21, W2
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x22B0000
	018 Move X0, [X0+448]
	019 Call 0x1B6F7F0
	020 Move X0, 0x22B0000
	021 Move X0, [X0+1040]
	022 Call 0x1B6F7F0
	023 Move W8, 1
	024 Move [X23+1044], W8
	025 Move W8, [X19+88]
	026 Compare W8, 0
	027 JumpIfEqual {48}
	028 Move [X19+88], W31
	029 Move X0, [X19+64]
	030 Compare X0, 0
	031 JumpIfEqual {163}
	032 Move X1, X22
	033 ShiftRight X1, 32
	034 And X1, X1, 0x7FFFFFFF
	035 Move X2, X31
	036 Call NetworkObject.AssignInputAuthority, X0, X1
	037 And W2, W21, 1
	038 Move X0, X19
	039 Move X1, X20
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Move X23, [X31+56]
	046 Call GrabbableItem.GrabInternal, X0, X1, X2
	047 Return 
	048 Move X22, 0x22B0000
	049 Move X22, [X22+448]
	050 Move X0, [X22]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1B6F8F8
	055 Move X0, X19
	056 Move X1, X31
	057 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	058 Move X0, [X19+56]
	059 Compare X0, 0
	060 JumpIfEqual {163}
	061 Move X1, X31
	062 Call NetworkRunner.get_Stage, X0
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 Move X23, [X31+56]
	070 Return 
	071 Move X0, [X19+64]
	072 Compare X0, 0
	073 JumpIfEqual {163}
	074 Move X1, X31
	075 Call NetworkObject.GetLocalAuthorityMask, X0
	076 And W31, W0, 7
	077 Move W8, W0
	078 Move X0, [X19+56]
	079 Move TEMP, X8
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {132}
	083 Compare X0, 0
	084 JumpIfEqual {163}
	085 Move X0, [X0+80]
	086 Compare X0, 0
	087 JumpIfEqual {163}
	088 Move X1, X31
	089 Call Simulation.HasAnyActiveConnections, X0
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {64}
	094 Move X8, [X19+56]
	095 Compare X8, 0
	096 JumpIfEqual {163}
	097 Move X0, [X8+80]
	098 Move W1, 20
	099 Move X2, X31
	100 Call SimulationMessage.Allocate, X0, X1
	101 Move X22, X0
	102 Move W0, 1
	103 Move X1, X31
	104 Call Assert.Check, X0
	105 Move X8, [X19+64]
	106 Compare X8, 0
	107 JumpIfEqual {163}
	108 Move X8, [X8+32]
	109 Compare X8, 0
	110 JumpIfEqual {137}
	111 Move W0, [X8]
	112 Move X0, [X22]
	113 Move X19, [X19+64]
	114 Move W8, [X0+224]
	115 Compare W8, 0
	116 JumpIfNotEqual {118}
	117 Call 0x1B6F8F8
	118 Move X8, 0x22AF000
	119 Move X8, [X8+1040]
	120 Move X1, X19
	121 Move X20, [X31+32]
	122 Move X19, [X31+40]
	123 Move X22, [X31+16]
	124 Move X21, [X31+24]
	125 Move X0, [X8]
	126 Move W2, 7
	127 Move X3, X31
	128 Move X30, [X31+48]
	129 Move X23, [X31+56]
	130 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	131 Return 
	132 Move W1, W31
	133 Move W2, W31
	134 Move X3, X31
	135 Call RpcInfo.FromLocal, X0, X1, X2
	136 Move X22, X0
	137 Move X0, X31
	138 Move W1, [X19+104]
	139 Move W2, 1
	140 Move X3, X31
	141 Call RpcHeader.Create, X0, X1, X2
	142 And W8, W21, 1
	143 Move [X22+28], X0
	144 Move [X22+36], X20
	145 Move [X22+44], W8
	146 Compare X22, 0
	147 JumpIfEqual {163}
	148 Move W8, 160
	149 Move [X22+12], W8
	150 Move X0, [X19+56]
	151 Compare X0, 0
	152 JumpIfEqual {163}
	153 Move X1, X22
	154 Move X20, [X31+32]
	155 Move X19, [X31+40]
	156 Move X22, [X31+16]
	157 Move X21, [X31+24]
	158 Move X2, X31
	159 Move X30, [X31+48]
	160 Move X23, [X31+56]
	161 Call NetworkRunner.SendRpc, X0, X1
	162 Return 
	163 Call 0x1B6FA1C

Method: System.Void GrabInternal(Fusion.NetworkBehaviourId interactorId, System.Boolean playSFX = True)

Disassembly:
	0x01C9FE84 BL 0x322A948
	0x01C9FE88 LDR X1, [X26]
	0x01C9FE8C CBZ X0, 0x1C9FEB8
	0x01C9FE90 LDR X8, [X0]
	0x01C9FE94 CMP X8, X1
	0x01C9FE98 B.NE 0x1C9FF94
	0x01C9FE9C LDR X8, [X25]
	0x01C9FEA0 LDR X8, [X8 + 0xB8]
	0x01C9FEA4 STR X0, [X8 + 0x68]
	0x01C9FEA8 LDR X9, [X0]
	0x01C9FEAC CMP X9, X1
	0x01C9FEB0 B.EQ 0x1C9FEC4
	0x01C9FEB4 B 0x1C9FF94
	0x01C9FEB8 LDR X8, [X25]
	0x01C9FEBC LDR X8, [X8 + 0xB8]
	0x01C9FEC0 STR X0, [X8 + 0x68]
	0x01C9FEC4 ADRP X28, 0x22AF000
	0x01C9FEC8 LDR X21, [X8 + 0x18]
	0x01C9FECC LDR X28, [X28 + 0x438]
	0x01C9FED0 MOV X0, X1
	0x01C9FED4 BL 0x1B6EA0C
	0x01C9FED8 LDR X2, [X28]
	0x01C9FEDC MOV X1, X19
	0x01C9FEE0 MOV X3, X31
	0x01C9FEE4 MOV X22, X0
	0x01C9FEE8 BL 0x317DB24
	0x01C9FEEC MOV X0, X21
	0x01C9FEF0 MOV X1, X22
	0x01C9FEF4 MOV X2, X31
	0x01C9FEF8 BL 0x322A948
	0x01C9FEFC LDR X1, [X26]
	0x01C9FF00 CBZ X0, 0x1C9FF2C
	0x01C9FF04 LDR X8, [X0]
	0x01C9FF08 CMP X8, X1
	0x01C9FF0C B.NE 0x1C9FF94
	0x01C9FF10 LDR X8, [X25]
	0x01C9FF14 LDR X8, [X8 + 0xB8]
	0x01C9FF18 STR X0, [X8 + 0x18]
	0x01C9FF1C LDR X9, [X0]
	0x01C9FF20 CMP X9, X1
	0x01C9FF24 B.EQ 0x1C9FF38
	0x01C9FF28 B 0x1C9FF94
	0x01C9FF2C LDR X8, [X25]
	0x01C9FF30 LDR X8, [X8 + 0xB8]
	0x01C9FF34 STR X0, [X8 + 0x18]
	0x01C9FF38 LDR X21, [X8 + 0x8]
	0x01C9FF3C MOV X0, X1
	0x01C9FF40 BL 0x1B6EA0C
	0x01C9FF44 LDR X2, [X28]
	0x01C9FF48 MOV X1, X19
	0x01C9FF4C MOV X3, X31
	0x01C9FF50 MOV X22, X0
	0x01C9FF54 BL 0x317DB24
	0x01C9FF58 MOV X0, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2585000
	007 Move W8, [X22+1045]
	008 Move W20, W2
	009 Move X21, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x22AF000
	016 Move X0, [X0+1144]
	017 Call 0x1B6F7F0
	018 Move W8, 1
	019 Move [X22+1045], W8
	020 Move X0, X31
	021 Call TickTimer.get_None
	022 And X1, X0, 0
	023 Move X0, X19
	024 Call GrabbableItem.set_respawnTimer, X0, X1
	025 Move X0, X19
	026 Move X1, X21
	027 Call GrabbableItem.set_attachedAnchorId, X0, X1
	028 Move TEMP, X20
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {66}
	032 Move X8, 0x22AF000
	033 Move X8, [X8+1144]
	034 Move X20, [X19+176]
	035 Move X0, [X8]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1B6F8F8
	040 Move X0, X20
	041 Move X1, X31
	042 Move X2, X31
	043 Call Object.op_Inequality, X0, X1
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {66}
	048 Move X20, [X19+176]
	049 Move X0, X19
	050 Move X1, X31
	051 Call Component.get_transform, X0
	052 Compare X0, 0
	053 JumpIfEqual {72}
	054 Move X1, X31
	055 Call Transform.get_position, X0
	056 Move X0, X20
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move S3, 1
	062 Move X1, X31
	063 Move X30, [X31+48]
	064 Call SFXManager.PlaySFXAsRPC, X0, X1, V0
	065 Return 
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 Return 
	072 Call 0x1B6FA1C

Method: System.Void Release(AnimalCompany.AttachedItemAnchor interactor, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, UnityEngine.Vector3 velocity, UnityEngine.Vector3 angularVelocity, System.Boolean playSFX = True, System.Boolean fromDeath = False)

Disassembly:
	0x01C9B298 CBZ X19, 0x1C9B2EC
	0x01C9B29C ADRP X9, 0x22B3000
	0x01C9B2A0 LDR X9, [X9 + 0x1A0]
	0x01C9B2A4 STRB W20, [X19 + 0x58]
	0x01C9B2A8 LDR X8, [X19]
	0x01C9B2AC LDR X1, [X9]
	0x01C9B2B0 LDRB W10, [X8 + 0x130]
	0x01C9B2B4 LDRB W9, [X1 + 0x130]
	0x01C9B2B8 CMP W10, W9
	0x01C9B2BC B.CC 0x1C9B2E4
	0x01C9B2C0 LDR X8, [X8 + 0xC8]
	0x01C9B2C4 ADD X8, X8, X9, 0x3, LSL
	0x01C9B2C8 LDUR X8, [X8 - 0x8]
	0x01C9B2CC CMP X8, X1
	0x01C9B2D0 B.NE 0x1C9B2E4
	0x01C9B2D4 MOV X0, X19
	0x01C9B2D8 LDP X20, X19, [X31 + 0x10]
	0x01C9B2DC LDR X30, [X31], #0x20
	0x01C9B2E0 B 0x1C9A0FC
	0x01C9B2E4 MOV X0, X19
	0x01C9B2E8 BL 0x1B6ECDC
	0x01C9B2EC BL 0x1B6EA1C
	0x01C9B2F0 STP X30, X19, [X31 - 0x10]!
	0x01C9B2F4 LDR X8, [X0 + 0x50]
	0x01C9B2F8 CBZ X8, 0x1C9B310
	0x01C9B2FC LDR W8, [X8]
	0x01C9B300 CMP W8, 0x0
	0x01C9B304 CSET W0, NE
	0x01C9B308 LDP X30, X19, [X31], #0x10
	0x01C9B30C RET
	0x01C9B310 ADRP X0, 0x22B2000
	0x01C9B314 LDR X0, [X0 + 0x490]
	0x01C9B318 BL 0x1B6E804
	0x01C9B31C BL 0x1B6EA0C
	0x01C9B320 MOV X19, X0
	0x01C9B324 ADRP X0, 0x22B3000
	0x01C9B328 LDR X0, [X0 + 0x200]
	0x01C9B32C BL 0x1B6E804
	0x01C9B330 MOV X1, X0
	0x01C9B334 MOV X0, X19
	0x01C9B338 MOV X2, X31
	0x01C9B33C BL 0x31E7550
	0x01C9B340 ADRP X0, 0x22B3000
	0x01C9B344 LDR X0, [X0 + 0x208]
	0x01C9B348 BL 0x1B6E804
	0x01C9B34C MOV X1, X0
	0x01C9B350 MOV X0, X19
	0x01C9B354 BL 0x1B6E8E8
	0x01C9B358 STP X30, X19, [X31 - 0x10]!
	0x01C9B35C LDR X8, [X0 + 0x50]
	0x01C9B360 CBZ X8, 0x1C9B374
	0x01C9B364 AND W9, W1, 0x1
	0x01C9B368 STR W9, [X8]
	0x01C9B36C LDP X30, X19, [X31], #0x10
	0x01C9B370 RET
	0x01C9B374 ADRP X0, 0x22B2000
	0x01C9B378 LDR X0, [X0 + 0x490]
	0x01C9B37C BL 0x1B6E804
	0x01C9B380 BL 0x1B6EA0C
	0x01C9B384 MOV X19, X0
	0x01C9B388 ADRP X0, 0x22B3000
	0x01C9B38C LDR X0, [X0 + 0x200]
	0x01C9B390 BL 0x1B6E804
	0x01C9B394 MOV X1, X0
	0x01C9B398 MOV X0, X19
	0x01C9B39C MOV X2, X31
	0x01C9B3A0 BL 0x31E7550
	0x01C9B3A4 ADRP X0, 0x22B3000
	0x01C9B3A8 LDR X0, [X0 + 0x210]
	0x01C9B3AC BL 0x1B6E804
	0x01C9B3B0 MOV X1, X0
	0x01C9B3B4 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+96], X24
	012 Move [X31+104], X23
	013 Move [X31+112], X22
	014 Move [X31+120], X21
	015 Move [X31+128], X20
	016 Move [X31+136], X19
	017 Move S9, [X31+164]
	018 Move S8, [X31+168]
	019 Move V11, [X31+160]
	020 Move S10, [X31+148]
	021 Move S15, [X31+152]
	022 Move V12, [X31+144]
	023 Move [X31+88], S5
	024 Move [X31+96], S6
	025 Move [X31+8], S3
	026 Move [X31+16], S4
	027 Move [X31+4], S2
	028 Move [X0+360], X31
	029 Compare X1, 0
	030 JumpIfEqual {101}
	031 Move X24, 0x2589000
	032 Move W8, [X24+1107]
	033 Move X23, [X1+56]
	034 Move W19, W3
	035 Move W20, W2
	036 Move V13, V1
	037 Move V14, V0
	038 Move X22, X1
	039 Move X21, X0
	040 Compare W8, 0
	041 JumpIfNotEqual {47}
	042 Move X0, 0x22B3000
	043 Move X0, [X0+1144]
	044 Call 0x1B6F7F0
	045 Move W8, 1
	046 Move [X24+1107], W8
	047 Move X8, 0x22B3000
	048 Move X8, [X8+1144]
	049 Move X0, [X8]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1B6F8F8
	054 Move X0, X23
	055 Move X1, X31
	056 Call Object.op_Implicit, X0
	057 Move X1, X31
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {67}
	062 Move X0, [X22+56]
	063 Move X1, X22
	064 Move X2, X31
	065 Call NetworkBehaviour.NetworkWrap, X0, X1
	066 Move X1, X0
	067 Move [X31+160], S11
	068 Move [X31+168], S9
	069 Move [X31+144], S12
	070 Move [X31+152], S10
	071 Move [X31+168], S8
	072 And W2, W20, 1
	073 And W3, W19, 1
	074 Move [X31+152], S15
	075 Move X0, X21
	076 Move V0, V14
	077 Move V1, V13
	078 Move S2, [X31+4]
	079 Move S3, [X31+8]
	080 Move V4, [X31+12]
	081 Move S5, [X31+88]
	082 Move S6, [X31+92]
	083 Move X20, [X31+128]
	084 Move X19, [X31+136]
	085 Move X22, [X31+112]
	086 Move X21, [X31+120]
	087 Move X24, [X31+96]
	088 Move X23, [X31+104]
	089 Move X30, [X31+80]
	090 Move D9, [X31+64]
	091 Move D8, [X31+72]
	092 Move D11, [X31+48]
	093 Move D10, [X31+56]
	094 Move D13, [X31+32]
	095 Move D12, [X31+40]
	096 Move D15, [X31+16]
	097 Move D14, [X31+24]
	098 Add X31, X31, 144
	099 Call GrabbableItem.RPC_Release, X0, X1, X2, X3, X4, X5, X6, X7
	100 Return 
	101 Call 0x1B6FA1C

Method: System.Void RPC_Release(Fusion.NetworkBehaviourId interactorId, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, UnityEngine.Vector3 velocity, UnityEngine.Vector3 angularVelocity, System.Boolean playSFX = True, System.Boolean fromDeath = False)

Disassembly:
	0x01CA0150 LDR X0, [X19 + 0x90]
	0x01CA0154 CBZ X0, 0x1CA04E4
	0x01CA0158 MOV X1, X31
	0x01CA015C BL 0x3AA78FC
	0x01CA0160 MOV X0, X31
	0x01CA0164 BL 0x3A925C8
	0x01CA0168 LDR X0, [X19 + 0x90]
	0x01CA016C CBZ X0, 0x1CA04E4
	0x01CA0170 LDR X21, [X19 + 0xA8]
	0x01CA0174 MOV X1, X31
	0x01CA0178 MOV V8.16B, V0.16B
	0x01CA017C MOV V9.16B, V1.16B
	0x01CA0180 MOV V10.16B, V2.16B
	0x01CA0184 MOV V11.16B, V3.16B
	0x01CA0188 BL 0x3AA6C80
	0x01CA018C FNEG S4, S0
	0x01CA0190 FNEG S5, S1
	0x01CA0194 FNEG S6, S2
	0x01CA0198 MOV V0.16B, V8.16B
	0x01CA019C MOV V1.16B, V9.16B
	0x01CA01A0 MOV V2.16B, V10.16B
	0x01CA01A4 MOV V3.16B, V11.16B
	0x01CA01A8 MOV X0, X31
	0x01CA01AC BL 0x3A92D64
	0x01CA01B0 CBZ X21, 0x1CA04E4
	0x01CA01B4 MOV X0, X21
	0x01CA01B8 MOV X1, X31
	0x01CA01BC BL 0x3AA6D0C
	0x01CA01C0 LDR X0, [X19 + 0xA8]
	0x01CA01C4 CBZ X0, 0x1CA04E4
	0x01CA01C8 MOV V0.16B, V8.16B
	0x01CA01CC MOV V1.16B, V9.16B
	0x01CA01D0 MOV V2.16B, V10.16B
	0x01CA01D4 MOV V3.16B, V11.16B
	0x01CA01D8 B 0x1CA026C
	0x01CA01DC ADRP X22, 0x2583000
	0x01CA01E0 LDRB W8, [X22 + 0x43F]
	0x01CA01E4 LDR X21, [X19 + 0xA8]
	0x01CA01E8 CBNZ W8, 0x1CA0200
	0x01CA01EC ADRP X0, 0x22AD000
	0x01CA01F0 LDR X0, [X0 + 0x480]
	0x01CA01F4 BL 0x1B6E7F0
	0x01CA01F8 MOVZ W8, 0x1
	0x01CA01FC STRB W8, [X22 + 0x43F]
	0x01CA0200 CBZ X21, 0x1CA04E4
	0x01CA0204 ADRP X8, 0x22AD000
	0x01CA0208 LDR X8, [X8 + 0x480]
	0x01CA020C MOV X0, X21
	0x01CA0210 MOV X1, X31
	0x01CA0214 LDR X8, [X8]
	0x01CA0218 LDR X8, [X8 + 0xB8]
	0x01CA021C LDP S1, S2, [X8 + 0x4]
	0x01CA0220 LDR V0, [X8]
	0x01CA0224 BL 0x3AA6D0C
	0x01CA0228 ADRP X22, 0x2583000
	0x01CA022C LDRB W8, [X22 + 0x454]
	0x01CA0230 LDR X21, [X19 + 0xA8]
	0x01CA0234 CBNZ W8, 0x1CA024C
	0x01CA0238 ADRP X0, 0x22AE000
	0x01CA023C LDR X0, [X0 + 0x1F8]
	0x01CA0240 BL 0x1B6E7F0
	0x01CA0244 MOVZ W8, 0x1
	0x01CA0248 STRB W8, [X22 + 0x454]
	0x01CA024C CBZ X21, 0x1CA04E4
	0x01CA0250 ADRP X8, 0x22AE000
	0x01CA0254 LDR X8, [X8 + 0x1F8]
	0x01CA0258 MOV X0, X21
	0x01CA025C LDR X8, [X8]
	0x01CA0260 LDR X8, [X8 + 0xB8]
	0x01CA0264 LDP S2, S3, [X8 + 0x8]
	0x01CA0268 LDP S0, S1, [X8]
	0x01CA026C MOV X1, X31
	0x01CA0270 BL 0x3AA7984
	0x01CA0274 LDR X21, [X19 + 0x130]
	0x01CA0278 MOV X0, X19
	0x01CA027C MOV X1, X31
	0x01CA0280 BL 0x3A9B084
	0x01CA0284 CBZ X0, 0x1CA04E4
	0x01CA0288 MOV X1, X31
	0x01CA028C BL 0x3AA7658
	0x01CA0290 CBZ X21, 0x1CA04E4
	0x01CA0294 MOV X0, X21
	0x01CA0298 MOV X1, X31
	0x01CA029C BL 0x3AF6C18
	0x01CA02A0 LDR X21, [X19 + 0x130]
	0x01CA02A4 MOV X0, X19
	0x01CA02A8 MOV X1, X31
	0x01CA02AC BL 0x3A9B084
	0x01CA02B0 CBZ X0, 0x1CA04E4
	0x01CA02B4 MOV X1, X31
	0x01CA02B8 BL 0x3AA5FBC
	0x01CA02BC CBZ X21, 0x1CA04E4
	0x01CA02C0 MOV X0, X21
	0x01CA02C4 MOV X1, X31
	0x01CA02C8 BL 0x3AF6D4C
	0x01CA02CC MOV X0, X19
	0x01CA02D0 MOV X1, X31
	0x01CA02D4 BL 0x3A9B084
	0x01CA02D8 CBZ X0, 0x1CA04E4
	0x01CA02DC MOV X1, X31
	0x01CA02E0 BL 0x3AA7658
	0x01CA02E4 LDR X0, [X19 + 0xA8]
	0x01CA02E8 STR S0, [X19 + 0x158]
	0x01CA02EC STR S1, [X19 + 0x15C]
	0x01CA02F0 STR S2, [X19 + 0x160]
	0x01CA02F4 CBZ X0, 0x1CA04E4
	0x01CA02F8 MOV X1, X31
	0x01CA02FC BL 0x3AA6C80
	0x01CA0300 LDR X0, [X19 + 0xA8]
	0x01CA0304 CBZ X0, 0x1CA04E4
	0x01CA0308 MOV X1, X31
	0x01CA030C MOV V8.16B, V0.16B
	0x01CA0310 MOV V9.16B, V1.16B
	0x01CA0314 MOV V10.16B, V2.16B
	0x01CA0318 BL 0x3AA78FC
	0x01CA031C ADD X1, X31, 0x98
	0x01CA0320 MOV X0, X19
	0x01CA0324 STP S8, S9, [X31 + 0x98]
	0x01CA0328 STP S10, S0, [X31 + 0xA0]
	0x01CA032C STP S1, S2, [X31 + 0xA8]
	0x01CA0330 STR S3, [X31 + 0xB0]
	0x01CA0334 BL 0x1CA04F0
	0x01CA0338 MOV X0, X19
	0x01CA033C BL 0x1C9AF00
	0x01CA0340 LDR X0, [X19 + 0x40]
	0x01CA0344 CBZ X0, 0x1CA035C
	0x01CA0348 LDRB W8, [X0 + 0x60]
	0x01CA034C TBNZ X8, 0x1, 0x1CA035C
	0x01CA0350 MOV X1, X31
	0x01CA0354 BL 0x1D9E780
	0x01CA0358 TBNZ X0, 0x0, 0x1C9FDA4
	0x01CA035C LDR X8, [X19 + 0x38]
	0x01CA0360 CBZ X8, 0x1CA04E4
	0x01CA0364 LDR W8, [X8 + 0x180]
	0x01CA0368 CMP W8, 0x2
	0x01CA036C B.NE 0x1CA0384
	0x01CA0370 LDR X0, [X19 + 0x40]
	0x01CA0374 CBZ X0, 0x1CA04E4
	0x01CA0378 MOV X1, X31
	0x01CA037C BL 0x1D9F9D8
	0x01CA0380 B 0x1C9FDA4
	0x01CA0384 LDR X0, [X24]
	0x01CA0388 LDR X21, [X19 + 0x138]
	0x01CA038C LDR W8, [X0 + 0xE0]
	0x01CA0390 CBNZ W8, 0x1CA0398
	0x01CA0394 BL 0x1B6E8F8
	0x01CA0398 MOV X0, X21
	0x01CA039C MOV X1, X31
	0x01CA03A0 MOV X2, X31
	0x01CA03A4 BL 0x3A9D6EC
	0x01CA03A8 TBZ X0, 0x0, 0x1C9FDA4
	0x01CA03AC LDR X0, [X19 + 0x138]
	0x01CA03B0 CBZ X0, 0x1CA04E4
	0x01CA03B4 MOV W1, W31
	0x01CA03B8 B 0x1C9FD84
	0x01CA03BC LDR X8, [X25]
	0x01CA03C0 LDR X8, [X8 + 0xB8]
	0x01CA03C4 STR X0, [X8 + 0x68]
	0x01CA03C8 LDR X20, [X8 + 0x8]
	0x01CA03CC MOV X0, X1
	0x01CA03D0 BL 0x1B6EA0C
	0x01CA03D4 LDR X2, [X28]
	0x01CA03D8 MOV X1, X19
	0x01CA03DC MOV X3, X31
	0x01CA03E0 MOV X21, X0
	0x01CA03E4 BL 0x317DB24
	0x01CA03E8 MOV X0, X20
	0x01CA03EC MOV X1, X21
	0x01CA03F0 MOV X2, X31
	0x01CA03F4 BL 0x322A750
	0x01CA03F8 CBZ X0, 0x1CA0488
	0x01CA03FC LDR X1, [X26]
	0x01CA0400 LDR X8, [X0]
	0x01CA0404 CMP X8, X1
	0x01CA0408 B.NE 0x1C9FF94
	0x01CA040C LDR X8, [X25]
	0x01CA0410 LDR X8, [X8 + 0xB8]
	0x01CA0414 STR X0, [X8 + 0x8]
	0x01CA0418 B 0x1CA0478
	0x01CA041C LDR X8, [X25]
	0x01CA0420 LDR X8, [X8 + 0xB8]
	0x01CA0424 STR X0, [X8 + 0x78]
	0x01CA0428 LDR X20, [X8 + 0x18]
	0x01CA042C MOV X0, X1
	0x01CA0430 BL 0x1B6EA0C
	0x01CA0434 LDR X2, [X28]
	0x01CA0438 MOV X1, X19
	0x01CA043C MOV X3, X31
	0x01CA0440 MOV X21, X0
	0x01CA0444 BL 0x317DB24
	0x01CA0448 MOV X0, X20
	0x01CA044C MOV X1, X21
	0x01CA0450 MOV X2, X31
	0x01CA0454 BL 0x322A750
	0x01CA0458 CBZ X0, 0x1CA0498
	0x01CA045C LDR X1, [X26]
	0x01CA0460 LDR X8, [X0]
	0x01CA0464 CMP X8, X1
	0x01CA0468 B.NE 0x1C9FF94

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+32], D15
	003 Move [X31+40], D14
	004 Move [X31+48], D13
	005 Move [X31+56], D12
	006 Move [X31+64], D11
	007 Move [X31+72], D10
	008 Move [X31+80], D9
	009 Move [X31+88], D8
	010 Move [X31+96], X30
	011 Move [X31+104], X23
	012 Move [X31+112], X22
	013 Move [X31+120], X21
	014 Move [X31+128], X20
	015 Move [X31+136], X19
	016 Move X23, 0x2584000
	017 Move V13, V3
	018 Move V9, V2
	019 Move V10, V1
	020 Move V15, V0
	021 Move S0, [X31+164]
	022 Move S14, [X31+168]
	023 Move V1, [X31+160]
	024 Move S2, [X31+148]
	025 Move S11, [X31+152]
	026 Move W8, [X23+1046]
	027 Move V3, [X31+144]
	028 Move W19, W3
	029 Move W20, W2
	030 Move V12, V5
	031 Move V8, V4
	032 Move X22, X1
	033 Move X21, X0
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {72}
	038 Move X0, 0x22AF000
	039 Move X0, [X0+448]
	040 Move [X31+24], S11
	041 Move [X31+32], S15
	042 Move [X31+16], S14
	043 Move [X31+24], S10
	044 Move [X31+12], S9
	045 Move V9, V13
	046 Move V13, V8
	047 Move V8, V12
	048 Move V12, V6
	049 Move V15, V0
	050 Move V11, V1
	051 Move V10, V2
	052 Move V14, V3
	053 Call 0x1B6F7F0
	054 Move X0, 0x22AF000
	055 Move X0, [X0+1048]
	056 Call 0x1B6F7F0
	057 Move V3, V14
	058 Move V2, V10
	059 Move V1, V11
	060 Move V0, V15
	061 Move V6, V12
	062 Move V12, V8
	063 Move V8, V13
	064 Move V13, V9
	065 Move S9, [X31+12]
	066 Move S14, [X31+16]
	067 Move S10, [X31+20]
	068 Move S11, [X31+24]
	069 Move V15, [X31+28]
	070 Move W8, 1
	071 Move [X23+1046], W8
	072 Move W8, [X21+88]
	073 Compare W8, 0
	074 JumpIfEqual {106}
	075 Move [X21+88], W31
	076 Move [X31+160], S1
	077 Move [X31+168], S0
	078 Move [X31+144], S3
	079 Move [X31+152], S2
	080 Move [X31+168], S14
	081 And W2, W20, 1
	082 And W3, W19, 1
	083 Move [X31+152], S11
	084 Move X0, X21
	085 Move V0, V15
	086 Move V1, V10
	087 Move V2, V9
	088 Move V3, V13
	089 Move V4, V8
	090 Move V5, V12
	091 Move X20, [X31+128]
	092 Move X19, [X31+136]
	093 Move X22, [X31+112]
	094 Move X21, [X31+120]
	095 Move X30, [X31+96]
	096 Move X23, [X31+104]
	097 Move D9, [X31+80]
	098 Move D8, [X31+88]
	099 Move D11, [X31+64]
	100 Move D10, [X31+72]
	101 Move D13, [X31+48]
	102 Move D12, [X31+56]
	103 Move D15, [X31+32]
	104 Move D14, [X31+40]
	105 Add X31, X31, 144
	106 Move [X31+12], S3
	107 Move [X31+20], S2
	108 Move [X31+20], S1
	109 Move [X31+28], S0
	110 Move [X31+28], S6
	111 Move X23, 0x22AF000
	112 Move X23, [X23+448]
	113 Move X0, [X23]
	114 Move W8, [X0+224]
	115 Compare W8, 0
	116 JumpIfNotEqual {118}
	117 Call 0x1B6F8F8
	118 Move X0, X21
	119 Move X1, X31
	120 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	121 Move X0, [X21+56]
	122 Compare X0, 0
	123 JumpIfEqual {272}
	124 Move X1, X31
	125 Call NetworkRunner.get_Stage, X0
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X20, [X31+128]
	128 Move X19, [X31+136]
	129 Move X22, [X31+112]
	130 Move X21, [X31+120]
	131 Move X30, [X31+96]
	132 Move X23, [X31+104]
	133 Move D9, [X31+80]
	134 Move D8, [X31+88]
	135 Move D11, [X31+64]
	136 Move D10, [X31+72]
	137 Move D13, [X31+48]
	138 Move D12, [X31+56]
	139 Move D15, [X31+32]
	140 Move D14, [X31+40]
	141 Add X31, X31, 144
	142 Return 
	143 Move X0, [X21+64]
	144 Compare X0, 0
	145 JumpIfEqual {272}
	146 Move X1, X31
	147 Call NetworkObject.GetLocalAuthorityMask, X0
	148 And W31, W0, 7
	149 Move S0, [X31+24]
	150 Move S6, [X31+28]
	151 Move S2, [X31+16]
	152 Move S1, [X31+20]
	153 Move V3, [X31+12]
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfEqual {76}
	158 Move X8, [X21+56]
	159 Compare X8, 0
	160 JumpIfEqual {272}
	161 Move X0, [X8+80]
	162 Compare X0, 0
	163 JumpIfEqual {272}
	164 Move X1, X31
	165 Call Simulation.HasAnyActiveConnections, X0
	166 Move TEMP, X0
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfNotEqual {127}
	170 Move X8, [X21+56]
	171 Compare X8, 0
	172 JumpIfEqual {272}
	173 Move X0, [X8+80]
	174 Move W1, 76
	175 Move X2, X31
	176 Call SimulationMessage.Allocate, X0, X1
	177 Move X23, X0
	178 Move W0, 1
	179 Move X1, X31
	180 Call Assert.Check, X0
	181 Move X8, [X21+64]
	182 Compare X8, 0
	183 JumpIfEqual {272}
	184 Move X8, [X8+32]
	185 Compare X8, 0
	186 JumpIfEqual {217}
	187 Move W0, [X8]
	188 Move X0, [X23]
	189 Move X19, [X21+64]
	190 Move W8, [X0+224]
	191 Compare W8, 0
	192 JumpIfNotEqual {194}
	193 Call 0x1B6F8F8
	194 Move X8, 0x22AF000
	195 Move X8, [X8+1048]
	196 Move X1, X19
	197 Move X20, [X31+128]
	198 Move X19, [X31+136]
	199 Move X22, [X31+112]
	200 Move X21, [X31+120]
	201 Move X0, [X8]
	202 Move X30, [X31+96]
	203 Move X23, [X31+104]
	204 Move D9, [X31+80]
	205 Move D8, [X31+88]
	206 Move D11, [X31+64]
	207 Move D10, [X31+72]
	208 Move D13, [X31+48]
	209 Move D12, [X31+56]
	210 Move D15, [X31+32]
	211 Move D14, [X31+40]
	212 Move W2, 7
	213 Move X3, X31
	214 Add X31, X31, 144
	215 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	216 Return 
	217 Move X0, X31
	218 Move W1, [X21+104]
	219 Move W2, 2
	220 Move X3, X31
	221 Call RpcHeader.Create, X0, X1, X2
	222 Move V1, [X31+28]
	223 Move V0, [X31+12]
	224 And W8, W20, 1
	225 And W9, W19, 1
	226 Move [X23+28], X0
	227 Move [X23+68], S1
	228 Move [X23+76], S0
	229 Move V0, [X31+16]
	230 Move V1, [X31+20]
	231 Move [X23+36], X22
	232 Move [X23+44], S15
	233 Move [X23+52], S10
	234 Move [X23+76], S0
	235 Move [X23+84], S11
	236 Move V0, [X31+24]
	237 Move [X23+52], S9
	238 Move [X23+60], S13
	239 Move [X23+60], S8
	240 Move [X23+68], S12
	241 Move [X23+92], S14
	242 Move [X23+84], S1
	243 Move [X23+92], S0
	244 Move [X23+96], W8
	245 Move [X23+100], W9
	246 Compare X23, 0
	247 JumpIfEqual {272}
	248 Move W8, 608
	249 Move [X23+12], W8
	250 Move X0, [X21+56]
	251 Compare X0, 0
	252 JumpIfEqual {272}
	253 Move X1, X23
	254 Move X20, [X31+128]
	255 Move X19, [X31+136]
	256 Move X22, [X31+112]
	257 Move X21, [X31+120]
	258 Move X30, [X31+96]
	259 Move X23, [X31+104]
	260 Move D9, [X31+80]
	261 Move D8, [X31+88]
	262 Move D11, [X31+64]
	263 Move D10, [X31+72]
	264 Move D13, [X31+48]
	265 Move D12, [X31+56]
	266 Move D15, [X31+32]
	267 Move D14, [X31+40]
	268 Move X2, X31
	269 Add X31, X31, 144
	270 Call NetworkRunner.SendRpc, X0, X1
	271 Return 
	272 Call 0x1B6FA1C

Method: System.Void ReleaseInternal(Fusion.NetworkBehaviourId interactorId, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, UnityEngine.Vector3 velocity, UnityEngine.Vector3 angularVelocity, System.Boolean playSFX = True, System.Boolean fromDeath = False)

Disassembly:
	0x01CA046C LDR X8, [X25]
	0x01CA0470 LDR X8, [X8 + 0xB8]
	0x01CA0474 STR X0, [X8 + 0x18]
	0x01CA0478 LDR X8, [X0]
	0x01CA047C CMP X8, X1
	0x01CA0480 B.EQ 0x1CA04A4
	0x01CA0484 B 0x1C9FF94
	0x01CA0488 LDR X8, [X25]
	0x01CA048C LDR X8, [X8 + 0xB8]
	0x01CA0490 STR X0, [X8 + 0x8]
	0x01CA0494 B 0x1CA04A4
	0x01CA0498 LDR X8, [X25]
	0x01CA049C LDR X8, [X8 + 0xB8]
	0x01CA04A0 STR X0, [X8 + 0x18]
	0x01CA04A4 LDR X8, [X23 + 0x28]
	0x01CA04A8 LDR X9, [X31 + 0xB8]
	0x01CA04AC CMP X8, X9
	0x01CA04B0 B.NE 0x1CA04EC
	0x01CA04B4 LDP X20, X19, [X31 + 0x150]
	0x01CA04B8 LDP X22, X21, [X31 + 0x140]
	0x01CA04BC LDP X24, X23, [X31 + 0x130]
	0x01CA04C0 LDP X26, X25, [X31 + 0x120]
	0x01CA04C4 LDP X28, X27, [X31 + 0x110]
	0x01CA04C8 LDP X29, X30, [X31 + 0x100]
	0x01CA04CC LDP D9, D8, [X31 + 0xF0]
	0x01CA04D0 LDP D11, D10, [X31 + 0xE0]
	0x01CA04D4 LDP D13, D12, [X31 + 0xD0]
	0x01CA04D8 LDP D15, D14, [X31 + 0xC0]
	0x01CA04DC ADD X31, X31, 0x160
	0x01CA04E0 RET
	0x01CA04E4 BL 0x1B6EA1C
	0x01CA04E8 BL 0x1B6EA24
	0x01CA04EC BL 0x3D19880
	0x01CA04F0 SUB X31, X31, 0x60
	0x01CA04F4 STR X30, [X31 + 0x30]
	0x01CA04F8 STP X22, X21, [X31 + 0x40]
	0x01CA04FC STP X20, X19, [X31 + 0x50]
	0x01CA0500 MRS X22, 0xC000
	0x01CA0504 LDR X8, [X22 + 0x28]
	0x01CA0508 ADRP X21, 0x2583000
	0x01CA050C MOV X20, X1
	0x01CA0510 MOV X19, X0
	0x01CA0514 STR X8, [X31 + 0x28]
	0x01CA0518 LDRB W8, [X21 + 0x418]
	0x01CA051C TBNZ X8, 0x0, 0x1CA0540
	0x01CA0520 ADRP X0, 0x22AE000
	0x01CA0524 LDR X0, [X0 + 0x1C0]
	0x01CA0528 BL 0x1B6E7F0
	0x01CA052C ADRP X0, 0x22AE000
	0x01CA0530 LDR X0, [X0 + 0x458]
	0x01CA0534 BL 0x1B6E7F0
	0x01CA0538 MOVZ W8, 0x1
	0x01CA053C STRB W8, [X21 + 0x418]
	0x01CA0540 LDRB W8, [X19 + 0x58]
	0x01CA0544 CBZ W8, 0x1CA056C
	0x01CA0548 STRB W31, [X19 + 0x58]
	0x01CA054C LDUR V0, [X20 + 0xC]
	0x01CA0550 LDR V1, [X20]
	0x01CA0554 ADD X1, X31, 0x0
	0x01CA0558 MOV X0, X19
	0x01CA055C STUR V0, [X31 + 0xC]
	0x01CA0560 STR V1, [X31]
	0x01CA0564 BL 0x1C9E2A8
	0x01CA0568 B 0x1CA06A4
	0x01CA056C ADRP X21, 0x22AE000
	0x01CA0570 LDR X21, [X21 + 0x1C0]
	0x01CA0574 LDR X0, [X21]
	0x01CA0578 LDR W8, [X0 + 0xE0]
	0x01CA057C CBNZ W8, 0x1CA0584
	0x01CA0580 BL 0x1B6E8F8
	0x01CA0584 MOV X0, X19
	0x01CA0588 MOV X1, X31
	0x01CA058C BL 0x1D697C8
	0x01CA0590 LDR X0, [X19 + 0x38]
	0x01CA0594 CBZ X0, 0x1CA06C8
	0x01CA0598 MOV X1, X31
	0x01CA059C BL 0x1D87040
	0x01CA05A0 CMP W0, 0x4
	0x01CA05A4 B.EQ 0x1CA06A4
	0x01CA05A8 LDR X0, [X19 + 0x40]
	0x01CA05AC CBZ X0, 0x1CA06C8
	0x01CA05B0 MOV X1, X31
	0x01CA05B4 BL 0x1D9F538
	0x01CA05B8 ANDS W31, W0, 0x7
	0x01CA05BC B.EQ 0x1CA0620
	0x01CA05C0 TBNZ X0, 0x0, 0x1CA054C
	0x01CA05C4 LDR X8, [X19 + 0x38]
	0x01CA05C8 CBZ X8, 0x1CA06C8
	0x01CA05CC LDR X0, [X8 + 0x50]
	0x01CA05D0 CBZ X0, 0x1CA06C8
	0x01CA05D4 MOV X1, X31
	0x01CA05D8 BL 0x1DBEFE4
	0x01CA05DC TBZ X0, 0x0, 0x1CA06A4
	0x01CA05E0 LDR X8, [X19 + 0x38]
	0x01CA05E4 CBZ X8, 0x1CA06C8
	0x01CA05E8 LDR X0, [X8 + 0x50]
	0x01CA05EC MOVZ W1, 0x24
	0x01CA05F0 MOV X2, X31
	0x01CA05F4 BL 0x1DD601C
	0x01CA05F8 MOV X21, X0
	0x01CA05FC MOVZ W0, 0x1
	0x01CA0600 MOV X1, X31
	0x01CA0604 BL 0x1D29EBC
	0x01CA0608 LDR X8, [X19 + 0x40]
	0x01CA060C CBZ X8, 0x1CA06C8
	0x01CA0610 LDR X8, [X8 + 0x20]
	0x01CA0614 CBZ X8, 0x1CA0654
	0x01CA0618 LDR W0, [X8]
	0x01CA061C B 0x1CA0658
	0x01CA0620 LDR X0, [X21]
	0x01CA0624 LDR X19, [X19 + 0x40]
	0x01CA0628 LDR W8, [X0 + 0xE0]
	0x01CA062C CBNZ W8, 0x1CA0634
	0x01CA0630 BL 0x1B6E8F8
	0x01CA0634 ADRP X8, 0x22AE000
	0x01CA0638 LDR X8, [X8 + 0x458]
	0x01CA063C MOVZ W2, 0x7
	0x01CA0640 MOV X1, X19
	0x01CA0644 MOV X3, X31
	0x01CA0648 LDR X0, [X8]
	0x01CA064C BL 0x1D69640
	0x01CA0650 B 0x1CA06A4
	0x01CA0654 MOV X0, X31
	0x01CA0658 LDR W1, [X19 + 0x68]
	0x01CA065C MOVZ W2, 0x3
	0x01CA0660 MOV X3, X31
	0x01CA0664 BL 0x1DA8258
	0x01CA0668 STUR X0, [X21 + 0x1C]
	0x01CA066C LDR V0, [X20]
	0x01CA0670 LDR X8, [X20 + 0x10]
	0x01CA0674 LDR W9, [X20 + 0x18]
	0x01CA0678 STUR V0, [X21 + 0x24]
	0x01CA067C STUR X8, [X21 + 0x34]
	0x01CA0680 STR W9, [X21 + 0x3C]
	0x01CA0684 CBZ X21, 0x1CA06C8
	0x01CA0688 MOVZ W8, 0x120
	0x01CA068C STR W8, [X21 + 0xC]
	0x01CA0690 LDR X0, [X19 + 0x38]
	0x01CA0694 CBZ X0, 0x1CA06C8
	0x01CA0698 MOV X1, X21
	0x01CA069C MOV X2, X31
	0x01CA06A0 BL 0x1D8A710
	0x01CA06A4 LDR X8, [X22 + 0x28]
	0x01CA06A8 LDR X9, [X31 + 0x28]
	0x01CA06AC CMP X8, X9
	0x01CA06B0 B.NE 0x1CA06CC
	0x01CA06B4 LDP X20, X19, [X31 + 0x50]
	0x01CA06B8 LDP X22, X21, [X31 + 0x40]
	0x01CA06BC LDR X30, [X31 + 0x30]
	0x01CA06C0 ADD X31, X31, 0x60
	0x01CA06C4 RET
	0x01CA06C8 BL 0x1B6EA1C
	0x01CA06CC BL 0x3D19880
	0x01CA06D0 STP X30, X19, [X31 - 0x10]!
	0x01CA06D4 LDR X8, [X0 + 0x1A8]
	0x01CA06D8 MOV X19, X0
	0x01CA06DC CBZ X8, 0x1CA06F0
	0x01CA06E0 LDR X9, [X8 + 0x18]
	0x01CA06E4 LDR X0, [X8 + 0x40]
	0x01CA06E8 LDR X1, [X8 + 0x28]
	0x01CA06EC BLR X9
	0x01CA06F0 MOVZ W1, 0x1
	0x01CA06F4 MOV X0, X19
	0x01CA06F8 LDP X30, X19, [X31], #0x10
	0x01CA06FC B 0x1CA0700
	0x01CA0700 STR X30, [X31 - 0x20]!
	0x01CA0704 STP X20, X19, [X31 + 0x10]
	0x01CA0708 MOV X19, X0
	0x01CA070C TBZ X1, 0x0, 0x1CA0718
	0x01CA0710 MOVZ W8, 0x1
	0x01CA0714 STRB W8, [X19 + 0x184]
	0x01CA0718 LDR X0, [X19 + 0xA0]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+96], X24
	012 Move [X31+104], X23
	013 Move [X31+112], X22
	014 Move [X31+120], X21
	015 Move [X31+128], X20
	016 Move [X31+136], X19
	017 Move V12, V0
	018 Move V7, [X31+168]
	019 Move V0, [X31+164]
	020 Move X22, 0x2584000
	021 Move W8, [X22+1047]
	022 Move W19, W3
	023 Move [X31+8], S0
	024 Move [X31+16], S7
	025 Move V0, [X31+160]
	026 Move V7, [X31+152]
	027 Move W21, W2
	028 Move V14, V6
	029 Move [X31+4], S0
	030 Move S13, [X31+144]
	031 Move S0, [X31+148]
	032 Move V15, V5
	033 Move V8, V4
	034 Move V9, V3
	035 Move V10, V2
	036 Move V11, V1
	037 Move X20, X0
	038 Move [X31+88], S0
	039 Move [X31+96], S7
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {52}
	044 Move X0, 0x22AE000
	045 Move X0, [X0+1144]
	046 Call 0x1B6F7F0
	047 Move X0, 0x22AF000
	048 Move X0, [X0+1056]
	049 Call 0x1B6F7F0
	050 Move W8, 1
	051 Move [X22+1047], W8
	052 Move X0, X20
	053 Call GrabbableItem.get_attachedAnchorId, X0
	054 Move X22, X0
	055 Move X0, X31
	056 Call NetworkBehaviourId.get_None
	057 Move X24, 0x2584000
	058 Move W8, [X24+1102]
	059 Move X23, X0
	060 Compare W8, 0
	061 JumpIfNotEqual {67}
	062 Move X0, 0x22AF000
	063 Move X0, [X0+488]
	064 Call 0x1B6F7F0
	065 Move W8, 1
	066 Move [X24+1102], W8
	067 Move X8, 0x22AF000
	068 Move X8, [X8+488]
	069 Move X0, [X8]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1B6F8F8
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X8, X23
	076 ShiftRight X8, 32
	077 And X8, X8, 0x7FFFFFFF
	078 Move X9, X22
	079 ShiftRight X9, 32
	080 And X9, X9, 0x7FFFFFFF
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X0, X20
	083 Call GrabbableItem.StartTimeoutTimer, X0
	084 Move X0, X31
	085 Call NetworkBehaviourId.get_None
	086 Move X1, X0
	087 Move X0, X20
	088 Call GrabbableItem.set_attachedAnchorId, X0, X1
	089 Move TEMP, X21
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {121}
	093 Move X8, 0x22AE000
	094 Move X8, [X8+1144]
	095 Move X21, [X20+184]
	096 Move X0, [X8]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1B6F8F8
	101 Move X0, X21
	102 Move X1, X31
	103 Move X2, X31
	104 Call Object.op_Inequality, X0, X1
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {121}
	109 Move X21, [X20+184]
	110 Move X0, X20
	111 Move X1, X31
	112 Call Component.get_transform, X0
	113 Compare X0, 0
	114 JumpIfEqual {225}
	115 Move X1, X31
	116 Call Transform.get_position, X0
	117 Move S3, 1
	118 Move X0, X21
	119 Move X1, X31
	120 Call SFXManager.PlaySFXAsRPC, X0, X1, V0
	121 Move X0, X20
	122 Call GrabbableItem.HandleGrabbedChanged, X0
	123 Move X0, [X20+304]
	124 Compare X0, 0
	125 JumpIfEqual {225}
	126 Move V0, V12
	127 Move V1, V11
	128 Move V2, V10
	129 Move X1, X31
	130 Call Rigidbody.set_position, X0, X1
	131 Move X0, [X20+304]
	132 Compare X0, 0
	133 JumpIfEqual {225}
	134 Move V0, V9
	135 Move V1, V8
	136 Move V2, V15
	137 Move V3, V14
	138 Move X1, X31
	139 Call Rigidbody.set_rotation, X0, X1
	140 Move X0, [X20+304]
	141 Compare X0, 0
	142 JumpIfEqual {225}
	143 Move X1, X31
	144 Call Rigidbody.get_mass, X0
	145 Move X0, X20
	146 Move X1, X31
	147 Call Component.get_gameObject, X0
	148 Compare X0, 0
	149 JumpIfEqual {225}
	150 Move X1, X31
	151 Call GameObject.get_tag, X0
	152 Move X8, 0x22AF000
	153 Move X8, [X8+1056]
	154 Move X2, X31
	155 Move X1, [X8]
	156 Call String.op_Equality, X0, X1
	157 Move X0, [X20+304]
	158 Compare X0, 0
	159 JumpIfEqual {225}
	160 Move S1, [X31+88]
	161 Move S2, [X31+92]
	162 Move V0, V13
	163 Move X1, X31
	164 Call Rigidbody.set_velocity, X0, X1
	165 Move X0, [X20+304]
	166 Compare X0, 0
	167 JumpIfEqual {225}
	168 Move S0, [X31+4]
	169 Move S1, [X31+8]
	170 Move V2, [X31+12]
	171 Move X1, X31
	172 Call Rigidbody.set_angularVelocity, X0, X1
	173 Move X0, [X20+312]
	174 Compare X0, 0
	175 JumpIfEqual {225}
	176 Move X8, [X0]
	177 Move W1, W31
	178 Move X9, [X8+504]
	179 Move X2, [X8+512]
	180 NotImplemented "Instruction BLR not yet implemented."
	181 Move TEMP, X19
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfNotEqual {208}
	185 Move X8, [X20+440]
	186 Compare X8, 0
	187 JumpIfEqual {208}
	188 Move X2, [X8+24]
	189 Move X0, [X8+64]
	190 Move X1, [X8+40]
	191 Move X20, [X31+128]
	192 Move X19, [X31+136]
	193 Move X22, [X31+112]
	194 Move X21, [X31+120]
	195 Move X24, [X31+96]
	196 Move X23, [X31+104]
	197 Move X30, [X31+80]
	198 Move D9, [X31+64]
	199 Move D8, [X31+72]
	200 Move D11, [X31+48]
	201 Move D10, [X31+56]
	202 Move D13, [X31+32]
	203 Move D12, [X31+40]
	204 Move D15, [X31+16]
	205 Move D14, [X31+24]
	206 Add X31, X31, 144
	207 CallNoReturn X2
	208 Move X20, [X31+128]
	209 Move X19, [X31+136]
	210 Move X22, [X31+112]
	211 Move X21, [X31+120]
	212 Move X24, [X31+96]
	213 Move X23, [X31+104]
	214 Move X30, [X31+80]
	215 Move D9, [X31+64]
	216 Move D8, [X31+72]
	217 Move D11, [X31+48]
	218 Move D10, [X31+56]
	219 Move D13, [X31+32]
	220 Move D12, [X31+40]
	221 Move D15, [X31+16]
	222 Move D14, [X31+24]
	223 Add X31, X31, 144
	224 Return 
	225 Call 0x1B6FA1C

Method: System.Void StartTimeoutTimer()

Disassembly:
	0x01CA071C CBZ X0, 0x1CA0784
	0x01CA0720 MOV X1, X31
	0x01CA0724 BL 0x3A9B0C0
	0x01CA0728 MOV X20, X0
	0x01CA072C MOV X0, X19
	0x01CA0730 BL 0x1C9A864
	0x01CA0734 CBZ X20, 0x1CA0784
	0x01CA0738 AND W1, W0, 0x1
	0x01CA073C MOV X0, X20
	0x01CA0740 MOV X2, X31
	0x01CA0744 BL 0x3A9D9A8
	0x01CA0748 MOV X0, X19
	0x01CA074C BL 0x1CA0940
	0x01CA0750 MOV X0, X19
	0x01CA0754 BL 0x1CA0994
	0x01CA0758 LDR X8, [X19 + 0x1C8]
	0x01CA075C CBZ X8, 0x1CA0778
	0x01CA0760 LDR X2, [X8 + 0x18]
	0x01CA0764 LDR X0, [X8 + 0x40]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+128]
	004 Compare X8, 0
	005 JumpIfEqual {23}
	006 Move W8, [X8+40]
	007 Move X19, X0
	008 Move X0, [X0+56]
	009 Move W9, 0x43960000
	010 Move W10, 0x42700000
	011 And W31, W8, 4
	012 Move S0, W9
	013 Move S1, W10
	014 NotImplemented "Instruction FCSEL not yet implemented."
	015 Move X1, X31
	016 Call TickTimer.CreateFromSeconds, X0, V0
	017 And X1, X0, 0
	018 Move X0, X19
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Call GrabbableItem.set_respawnTimer, X0, X1
	022 Return 
	023 Call 0x1B6FA1C

Method: System.Void RPC_SetGrabbedOffsets(AnimalCompany.GrabbedInfo gInfo)

Disassembly:
	0x01CA14F0 BL 0x1B6E7F0
	0x01CA14F4 MOVZ W8, 0x1
	0x01CA14F8 STRB W8, [X22 + 0x43F]
	0x01CA14FC CBZ X20, 0x1CA16CC
	0x01CA1500 ADRP X23, 0x22AC000
	0x01CA1504 LDR X23, [X23 + 0x480]
	0x01CA1508 MOV X0, X20
	0x01CA150C MOV X1, X31
	0x01CA1510 LDR X8, [X23]
	0x01CA1514 LDR X8, [X8 + 0xB8]
	0x01CA1518 LDP S1, S2, [X8 + 0x4]
	0x01CA151C LDR V0, [X8]
	0x01CA1520 BL 0x3AF650C
	0x01CA1524 LDRB W8, [X22 + 0x43F]
	0x01CA1528 LDR X20, [X19 + 0x130]
	0x01CA152C CBNZ W8, 0x1CA1544
	0x01CA1530 ADRP X0, 0x22AC000
	0x01CA1534 LDR X0, [X0 + 0x480]
	0x01CA1538 BL 0x1B6E7F0
	0x01CA153C MOVZ W8, 0x1
	0x01CA1540 STRB W8, [X22 + 0x43F]
	0x01CA1544 CBZ X20, 0x1CA16CC
	0x01CA1548 LDR X8, [X23]
	0x01CA154C MOV X0, X20
	0x01CA1550 MOV X1, X31
	0x01CA1554 LDR X8, [X8 + 0xB8]
	0x01CA1558 LDP S1, S2, [X8 + 0x4]
	0x01CA155C LDR V0, [X8]
	0x01CA1560 BL 0x3AF6644
	0x01CA1564 LDRB W8, [X22 + 0x43F]
	0x01CA1568 LDR X20, [X19 + 0xA8]
	0x01CA156C CBNZ W8, 0x1CA1584
	0x01CA1570 ADRP X0, 0x22AC000
	0x01CA1574 LDR X0, [X0 + 0x480]
	0x01CA1578 BL 0x1B6E7F0
	0x01CA157C MOVZ W8, 0x1
	0x01CA1580 STRB W8, [X22 + 0x43F]
	0x01CA1584 CBZ X20, 0x1CA16CC
	0x01CA1588 LDR X8, [X23]
	0x01CA158C MOV X0, X20
	0x01CA1590 MOV X1, X31
	0x01CA1594 LDR X8, [X8 + 0xB8]
	0x01CA1598 LDP S1, S2, [X8 + 0x4]
	0x01CA159C LDR V0, [X8]
	0x01CA15A0 BL 0x3AA6D0C
	0x01CA15A4 ADRP X24, 0x2582000
	0x01CA15A8 LDRB W8, [X24 + 0x454]
	0x01CA15AC LDR X20, [X19 + 0xA8]
	0x01CA15B0 CBNZ W8, 0x1CA15C8
	0x01CA15B4 ADRP X0, 0x22AD000
	0x01CA15B8 LDR X0, [X0 + 0x1F8]
	0x01CA15BC BL 0x1B6E7F0
	0x01CA15C0 MOVZ W8, 0x1
	0x01CA15C4 STRB W8, [X24 + 0x454]
	0x01CA15C8 CBZ X20, 0x1CA16CC
	0x01CA15CC ADRP X25, 0x22AD000
	0x01CA15D0 LDR X25, [X25 + 0x1F8]
	0x01CA15D4 MOV X0, X20
	0x01CA15D8 MOV X1, X31
	0x01CA15DC LDR X8, [X25]
	0x01CA15E0 LDR X8, [X8 + 0xB8]
	0x01CA15E4 LDP S2, S3, [X8 + 0x8]
	0x01CA15E8 LDP S0, S1, [X8]
	0x01CA15EC BL 0x3AA7984
	0x01CA15F0 LDRB W8, [X22 + 0x43F]
	0x01CA15F4 CBNZ W8, 0x1CA160C
	0x01CA15F8 ADRP X0, 0x22AC000
	0x01CA15FC LDR X0, [X0 + 0x480]
	0x01CA1600 BL 0x1B6E7F0
	0x01CA1604 MOVZ W8, 0x1
	0x01CA1608 STRB W8, [X22 + 0x43F]
	0x01CA160C LDR X8, [X23]
	0x01CA1610 LDRB W9, [X24 + 0x454]
	0x01CA1614 LDR X8, [X8 + 0xB8]
	0x01CA1618 LDR V9, [X8]
	0x01CA161C LDR V8, [X8 + 0x8]
	0x01CA1620 CBNZ W9, 0x1CA1638
	0x01CA1624 ADRP X0, 0x22AD000
	0x01CA1628 LDR X0, [X0 + 0x1F8]
	0x01CA162C BL 0x1B6E7F0
	0x01CA1630 MOVZ W8, 0x1
	0x01CA1634 STRB W8, [X24 + 0x454]
	0x01CA1638 LDR X8, [X25]
	0x01CA163C ADD X1, X31, 0x8
	0x01CA1640 MOV X0, X19
	0x01CA1644 LDR X8, [X8 + 0xB8]
	0x01CA1648 LDR V0, [X8]
	0x01CA164C STR D9, [X31 + 0x8]
	0x01CA1650 STR S8, [X31 + 0x10]
	0x01CA1654 STUR V0, [X31 + 0x14]
	0x01CA1658 BL 0x1C9E2A8
	0x01CA165C MOV X0, X31
	0x01CA1660 BL 0x1D9CB50
	0x01CA1664 AND X1, X0, 0x0
	0x01CA1668 MOV X0, X19
	0x01CA166C BL 0x1C9E510
	0x01CA1670 MOV X0, X31
	0x01CA1674 BL 0x1D6815C
	0x01CA1678 MOV X1, X0
	0x01CA167C MOV X0, X19
	0x01CA1680 BL 0x1C9E17C
	0x01CA1684 MOV X0, X31
	0x01CA1688 BL 0x1D6815C
	0x01CA168C MOV X1, X0
	0x01CA1690 MOV X0, X19
	0x01CA1694 BL 0x1C9E1DC
	0x01CA1698 MOV X0, X19
	0x01CA169C BL 0x1C9F768
	0x01CA16A0 LDR X8, [X21 + 0x28]
	0x01CA16A4 LDR X9, [X31 + 0x28]
	0x01CA16A8 CMP X8, X9
	0x01CA16AC B.NE 0x1CA16D0
	0x01CA16B0 LDP X20, X19, [X31 + 0x70]
	0x01CA16B4 LDP X22, X21, [X31 + 0x60]
	0x01CA16B8 LDP X24, X23, [X31 + 0x50]
	0x01CA16BC LDP X30, X25, [X31 + 0x40]
	0x01CA16C0 LDP D9, D8, [X31 + 0x30]
	0x01CA16C4 ADD X31, X31, 0x80
	0x01CA16C8 RET
	0x01CA16CC BL 0x1B6EA1C

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 NotImplemented "Instruction MRS not yet implemented."
	008 Move X8, [X22+40]
	009 Move X21, 0x2583000
	010 Move X20, X1
	011 Move X19, X0
	012 Move [X31+40], X8
	013 Move W8, [X21+1048]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x22AE000
	019 Move X0, [X0+448]
	020 Call 0x1B6F7F0
	021 Move X0, 0x22AE000
	022 Move X0, [X0+1112]
	023 Call 0x1B6F7F0
	024 Move W8, 1
	025 Move [X21+1048], W8
	026 Move W8, [X19+88]
	027 Compare W8, 0
	028 JumpIfEqual {37}
	029 Move [X19+88], W31
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 Move V1, [X20]
	032 Add X1, X31, 0
	033 Move X0, X19
	034 Move [X31+12], V0
	035 Move [X31], V1
	036 Call GrabbableItem.set_grabbedInfo, X0, X1
	037 Move X21, 0x22AE000
	038 Move X21, [X21+448]
	039 Move X0, [X21]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1B6F8F8
	044 Move X0, X19
	045 Move X1, X31
	046 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	047 Move X0, [X19+56]
	048 Compare X0, 0
	049 JumpIfEqual {138}
	050 Move X1, X31
	051 Call NetworkRunner.get_Stage, X0
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X0, [X19+64]
	054 Compare X0, 0
	055 JumpIfEqual {138}
	056 Move X1, X31
	057 Call NetworkObject.GetLocalAuthorityMask, X0
	058 And W31, W0, 7
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {30}
	063 Move X8, [X19+56]
	064 Compare X8, 0
	065 JumpIfEqual {138}
	066 Move X0, [X8+80]
	067 Compare X0, 0
	068 JumpIfEqual {138}
	069 Move X1, X31
	070 Call Simulation.HasAnyActiveConnections, X0
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {128}
	075 Move X8, [X19+56]
	076 Compare X8, 0
	077 JumpIfEqual {138}
	078 Move X0, [X8+80]
	079 Move W1, 36
	080 Move X2, X31
	081 Call SimulationMessage.Allocate, X0, X1
	082 Move X21, X0
	083 Move W0, 1
	084 Move X1, X31
	085 Call Assert.Check, X0
	086 Move X8, [X19+64]
	087 Compare X8, 0
	088 JumpIfEqual {138}
	089 Move X8, [X8+32]
	090 Compare X8, 0
	091 JumpIfEqual {106}
	092 Move W0, [X8]
	093 Move X0, [X21]
	094 Move X19, [X19+64]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1B6F8F8
	099 Move X8, 0x22AE000
	100 Move X8, [X8+1112]
	101 Move W2, 7
	102 Move X1, X19
	103 Move X3, X31
	104 Move X0, [X8]
	105 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	106 Move X0, X31
	107 Move W1, [X19+104]
	108 Move W2, 3
	109 Move X3, X31
	110 Call RpcHeader.Create, X0, X1, X2
	111 Move [X21+28], X0
	112 Move V0, [X20]
	113 Move X8, [X20+16]
	114 Move W9, [X20+24]
	115 Move [X21+36], V0
	116 Move [X21+52], X8
	117 Move [X21+60], W9
	118 Compare X21, 0
	119 JumpIfEqual {138}
	120 Move W8, 288
	121 Move [X21+12], W8
	122 Move X0, [X19+56]
	123 Compare X0, 0
	124 JumpIfEqual {138}
	125 Move X1, X21
	126 Move X2, X31
	127 Call NetworkRunner.SendRpc, X0, X1
	128 Move X8, [X22+40]
	129 Move X9, [X31+40]
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move X20, [X31+80]
	132 Move X19, [X31+88]
	133 Move X22, [X31+64]
	134 Move X21, [X31+72]
	135 Move X30, [X31+48]
	136 Add X31, X31, 96
	137 Return 
	138 Call 0x1B6FA1C
	139 Call 0x3D1A880

Method: System.Void HandleBackpackIdChanged()

Disassembly:
	0x01CA16D0 BL 0x3D19880
	0x01CA16D4 B 0x1CA16D8
	0x01CA16D8 STR X30, [X31 - 0x20]!
	0x01CA16DC STP X20, X19, [X31 + 0x10]
	0x01CA16E0 ADRP X20, 0x2582000
	0x01CA16E4 LDRB W8, [X20 + 0x41F]
	0x01CA16E8 MOV X19, X0
	0x01CA16EC TBNZ X8, 0x0, 0x1CA1710
	0x01CA16F0 ADRP X0, 0x22AD000
	0x01CA16F4 LDR X0, [X0 + 0x1C0]
	0x01CA16F8 BL 0x1B6E7F0
	0x01CA16FC ADRP X0, 0x22AD000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+424]
	004 Move X19, X0
	005 Compare X8, 0
	006 JumpIfEqual {11}
	007 Move X9, [X8+24]
	008 Move X0, [X8+64]
	009 Move X1, [X8+40]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move W1, 1
	012 Move X0, X19
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]

Method: System.Void HandleGrabbedInfoChanged()

Disassembly:
	0x01CA1788 B.EQ 0x1CA17EC
	0x01CA178C TBNZ X0, 0x0, 0x1CA171C
	0x01CA1790 LDR X8, [X19 + 0x38]
	0x01CA1794 CBZ X8, 0x1CA1864
	0x01CA1798 LDR X0, [X8 + 0x50]
	0x01CA179C CBZ X0, 0x1CA1864
	0x01CA17A0 MOV X1, X31
	0x01CA17A4 BL 0x1DBEFE4
	0x01CA17A8 TBZ X0, 0x0, 0x1CA1768
	0x01CA17AC LDR X8, [X19 + 0x38]
	0x01CA17B0 CBZ X8, 0x1CA1864
	0x01CA17B4 LDR X0, [X8 + 0x50]
	0x01CA17B8 MOVZ W1, 0x8
	0x01CA17BC MOV X2, X31
	0x01CA17C0 BL 0x1DD601C
	0x01CA17C4 MOV X20, X0
	0x01CA17C8 MOVZ W0, 0x1
	0x01CA17CC MOV X1, X31
	0x01CA17D0 BL 0x1D29EBC
	0x01CA17D4 LDR X8, [X19 + 0x40]
	0x01CA17D8 CBZ X8, 0x1CA1864
	0x01CA17DC LDR X8, [X8 + 0x20]
	0x01CA17E0 CBZ X8, 0x1CA1824
	0x01CA17E4 LDR W0, [X8]
	0x01CA17E8 B 0x1CA1828
	0x01CA17EC LDR X0, [X20]
	0x01CA17F0 LDR X19, [X19 + 0x40]
	0x01CA17F4 LDR W8, [X0 + 0xE0]
	0x01CA17F8 CBNZ W8, 0x1CA1800
	0x01CA17FC BL 0x1B6E8F8
	0x01CA1800 ADRP X8, 0x22AD000
	0x01CA1804 LDR X8, [X8 + 0x488]
	0x01CA1808 MOV X1, X19
	0x01CA180C LDP X20, X19, [X31 + 0x10]
	0x01CA1810 MOVZ W2, 0x7
	0x01CA1814 LDR X0, [X8]
	0x01CA1818 MOV X3, X31
	0x01CA181C LDR X30, [X31], #0x20
	0x01CA1820 B 0x1D69640
	0x01CA1824 MOV X0, X31
	0x01CA1828 LDR W1, [X19 + 0x68]
	0x01CA182C MOVZ W2, 0x6
	0x01CA1830 MOV X3, X31
	0x01CA1834 BL 0x1DA8258
	0x01CA1838 STUR X0, [X20 + 0x1C]
	0x01CA183C CBZ X20, 0x1CA1864
	0x01CA1840 MOVZ W8, 0x40
	0x01CA1844 STR W8, [X20 + 0xC]
	0x01CA1848 LDR X0, [X19 + 0x38]
	0x01CA184C CBZ X0, 0x1CA1864
	0x01CA1850 MOV X1, X20
	0x01CA1854 LDP X20, X19, [X31 + 0x10]
	0x01CA1858 MOV X2, X31
	0x01CA185C LDR X30, [X31], #0x20
	0x01CA1860 B 0x1D8A710
	0x01CA1864 BL 0x1B6EA1C
	0x01CA1868 SUB X31, X31, 0x50
	0x01CA186C STP X30, X21, [X31 + 0x30]
	0x01CA1870 STP X20, X19, [X31 + 0x40]
	0x01CA1874 MRS X21, 0xC000
	0x01CA1878 LDR X8, [X21 + 0x28]
	0x01CA187C MOV X19, X0
	0x01CA1880 STR X8, [X31 + 0x28]
	0x01CA1884 ADD X8, X31, 0x8
	0x01CA1888 BL 0x1C9E3E8
	0x01CA188C LDRB W8, [X31 + 0x24]
	0x01CA1890 TBZ X8, 0x0, 0x1CA1954
	0x01CA1894 MOV X0, X19
	0x01CA1898 MOV X1, X31
	0x01CA189C BL 0x3A9B084
	0x01CA18A0 MOV X20, X0
	0x01CA18A4 ADD X8, X31, 0x8
	0x01CA18A8 MOV X0, X19
	0x01CA18AC BL 0x1C9E3E8
	0x01CA18B0 CBZ X20, 0x1CA19AC
	0x01CA18B4 LDP S0, S1, [X31 + 0x8]
	0x01CA18B8 LDR V2, [X31 + 0x10]
	0x01CA18BC MOV X0, X20
	0x01CA18C0 MOV X1, X31
	0x01CA18C4 BL 0x3AA76F8
	0x01CA18C8 MOV X0, X19
	0x01CA18CC MOV X1, X31
	0x01CA18D0 BL 0x3A9B084
	0x01CA18D4 MOV X20, X0
	0x01CA18D8 ADD X8, X31, 0x8
	0x01CA18DC MOV X0, X19
	0x01CA18E0 BL 0x1C9E3E8
	0x01CA18E4 CBZ X20, 0x1CA19AC
	0x01CA18E8 LDP S0, S1, [X31 + 0x14]
	0x01CA18EC LDP S2, S3, [X31 + 0x1C]
	0x01CA18F0 MOV X0, X20
	0x01CA18F4 MOV X1, X31
	0x01CA18F8 BL 0x3AA7878
	0x01CA18FC LDR X20, [X19 + 0x130]
	0x01CA1900 MOV X0, X19
	0x01CA1904 MOV X1, X31
	0x01CA1908 BL 0x3A9B084
	0x01CA190C CBZ X0, 0x1CA19AC
	0x01CA1910 MOV X1, X31
	0x01CA1914 BL 0x3AA7658
	0x01CA1918 CBZ X20, 0x1CA19AC
	0x01CA191C MOV X0, X20
	0x01CA1920 MOV X1, X31
	0x01CA1924 BL 0x3AF6C18
	0x01CA1928 LDR X20, [X19 + 0x130]
	0x01CA192C MOV X0, X19
	0x01CA1930 MOV X1, X31
	0x01CA1934 BL 0x3A9B084

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], D10
	003 Move [X31+56], D9
	004 Move [X31+64], D8
	005 Move [X31+72], X30
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X21+40]
	012 Move X22, 0x2583000
	013 Move X20, 0x22AD000
	014 Move X19, X0
	015 Move [X31+40], X8
	016 Move W8, [X22+1049]
	017 Move X20, [X20+1144]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x22AD000
	023 Move X0, [X0+1144]
	024 Call 0x1B6F7F0
	025 Move W8, 1
	026 Move [X22+1049], W8
	027 Move X0, [X20]
	028 Move X20, [X19+288]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1B6F8F8
	033 Move X0, X20
	034 Move X1, X31
	035 Move X2, X31
	036 Call Object.op_Equality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {58}
	041 Move X8, [X19+288]
	042 Compare X8, 0
	043 JumpIfEqual {138}
	044 Move X0, [X8+64]
	045 Compare X0, 0
	046 JumpIfEqual {58}
	047 Move W8, [X0+96]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 2
	050 Compare TEMP, 2
	051 JumpIfEqual {58}
	052 Move X1, X31
	053 Call NetworkObject.get_HasInputAuthority, X0
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {125}
	058 Move X20, [X19+168]
	059 Add X8, X31, 8
	060 Move X0, X19
	061 Call GrabbableItem.get_grabbedInfo, X0
	062 Compare X20, 0
	063 JumpIfEqual {138}
	064 Move S0, [X31+8]
	065 Move S1, [X31+12]
	066 Move V2, [X31+16]
	067 Move X0, X20
	068 Move X1, X31
	069 Call Transform.set_localPosition, X0, X1
	070 Move X20, [X19+168]
	071 Add X8, X31, 8
	072 Move X0, X19
	073 Call GrabbableItem.get_grabbedInfo, X0
	074 Compare X20, 0
	075 JumpIfEqual {138}
	076 Move S0, [X31+20]
	077 Move S1, [X31+24]
	078 Move S2, [X31+28]
	079 Move S3, [X31+32]
	080 Move X0, X20
	081 Move X1, X31
	082 Call Transform.set_localRotation, X0, X1
	083 Move X20, 0x2583000
	084 Move W8, [X20+1087]
	085 Move X19, [X19+160]
	086 Compare W8, 0
	087 JumpIfNotEqual {93}
	088 Move X0, 0x22AD000
	089 Move X0, [X0+1152]
	090 Call 0x1B6F7F0
	091 Move W8, 1
	092 Move [X20+1087], W8
	093 Move X8, 0x22AD000
	094 Move X8, [X8+1152]
	095 Move X20, 0x2583000
	096 Move W9, [X20+1108]
	097 Move X8, [X8]
	098 Move X8, [X8+184]
	099 Move S10, [X8]
	100 Move S9, [X8+4]
	101 Move V8, [X8+8]
	102 Compare W9, 0
	103 JumpIfNotEqual {109}
	104 Move X0, 0x22AE000
	105 Move X0, [X0+504]
	106 Call 0x1B6F7F0
	107 Move W8, 1
	108 Move [X20+1108], W8
	109 Compare X19, 0
	110 JumpIfEqual {138}
	111 Move X8, 0x22AE000
	112 Move X8, [X8+504]
	113 Move X0, X19
	114 Move V0, V10
	115 Move V1, V9
	116 Move X8, [X8]
	117 Move V2, V8
	118 Move X1, X31
	119 Move X8, [X8+184]
	120 Move S5, [X8+8]
	121 Move S6, [X8+12]
	122 Move S3, [X8]
	123 Move S4, [X8+4]
	124 Call Transform.SetLocalPositionAndRotation, X0, X1, X2
	125 Move X8, [X21+40]
	126 Move X9, [X31+40]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X20, [X31+96]
	129 Move X19, [X31+104]
	130 Move X22, [X31+80]
	131 Move X21, [X31+88]
	132 Move X30, [X31+72]
	133 Move D9, [X31+56]
	134 Move D8, [X31+64]
	135 Move V10, [X31+48]
	136 Add X31, X31, 112
	137 Return 
	138 Call 0x1B6FA1C
	139 Call 0x3D1A880

Method: System.Void HandleIsHiddenChanged()

Disassembly:
	0x01CA1938 CBZ X0, 0x1CA19AC
	0x01CA193C MOV X1, X31

ISIL:
	001 Move W1, 1
	002 Call GrabbableItem.UpdateIsVisible, X0, X1
	003 Return 

Method: System.Void SetIsHidden(System.Boolean hide)

Disassembly:
	0x01C9B8B4 LDP X30, X19, [X31], #0x10
	0x01C9B8B8 RET

ISIL:
	001 And W1, W1, 1
	002 Call GrabbableItem.set_isHidden, X0, X1
	003 Return 

Method: System.Void UpdateIsVisible(System.Boolean applyOnNextUpdate = True)

Disassembly:
	0x01CA1700 LDR X0, [X0 + 0x488]
	0x01CA1704 BL 0x1B6E7F0
	0x01CA1708 MOVZ W8, 0x1
	0x01CA170C STRB W8, [X20 + 0x41F]
	0x01CA1710 LDRB W8, [X19 + 0x58]
	0x01CA1714 CBZ W8, 0x1CA172C
	0x01CA1718 STRB W31, [X19 + 0x58]
	0x01CA171C MOV X0, X19
	0x01CA1720 LDP X20, X19, [X31 + 0x10]
	0x01CA1724 LDR X30, [X31], #0x20
	0x01CA1728 B 0x1CA1868
	0x01CA172C ADRP X20, 0x22AD000
	0x01CA1730 LDR X20, [X20 + 0x1C0]
	0x01CA1734 LDR X0, [X20]
	0x01CA1738 LDR W8, [X0 + 0xE0]
	0x01CA173C CBNZ W8, 0x1CA1744
	0x01CA1740 BL 0x1B6E8F8
	0x01CA1744 MOV X0, X19
	0x01CA1748 MOV X1, X31
	0x01CA174C BL 0x1D697C8
	0x01CA1750 LDR X0, [X19 + 0x38]
	0x01CA1754 CBZ X0, 0x1CA1864
	0x01CA1758 MOV X1, X31
	0x01CA175C BL 0x1D87040
	0x01CA1760 CMP W0, 0x4
	0x01CA1764 B.NE 0x1CA1774
	0x01CA1768 LDP X20, X19, [X31 + 0x10]
	0x01CA176C LDR X30, [X31], #0x20
	0x01CA1770 RET
	0x01CA1774 LDR X0, [X19 + 0x40]
	0x01CA1778 CBZ X0, 0x1CA1864
	0x01CA177C MOV X1, X31
	0x01CA1780 BL 0x1D9F538
	0x01CA1784 ANDS W31, W0, 0x7

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move TEMP, X1
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfNotEqual {11}
	009 Move W8, 1
	010 Move [X19+388], W8
	011 Move X0, [X19+160]
	012 Compare X0, 0
	013 JumpIfEqual {43}
	014 Move X1, X31
	015 Call Component.get_gameObject, X0
	016 Move X20, X0
	017 Move X0, X19
	018 Call GrabbableItem.get_isVisible, X0
	019 Compare X20, 0
	020 JumpIfEqual {43}
	021 And W1, W0, 1
	022 Move X0, X20
	023 Move X2, X31
	024 Call GameObject.SetActive, X0, X1
	025 Move X0, X19
	026 Call GrabbableItem.UpdateUseGravity, X0
	027 Move X0, X19
	028 Call GrabbableItem.UpdateDetectCollisions, X0
	029 Move X8, [X19+456]
	030 Compare X8, 0
	031 JumpIfEqual {39}
	032 Move X2, [X8+24]
	033 Move X0, [X8+64]
	034 Move X1, [X8+40]
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 CallNoReturn X2
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return 
	043 Call 0x1B6FA1C

Method: System.Void UpdateUseGravity()

Disassembly:
	0x01CA1940 BL 0x3AA5FBC
	0x01CA1944 CBZ X20, 0x1CA19AC
	0x01CA1948 MOV X0, X20
	0x01CA194C MOV X1, X31
	0x01CA1950 BL 0x3AF6D4C
	0x01CA1954 MOV X0, X19
	0x01CA1958 BL 0x1CA14B0
	0x01CA195C LDR X0, [X19 + 0x138]
	0x01CA1960 CBZ X0, 0x1CA19AC
	0x01CA1964 LDR X8, [X0]
	0x01CA1968 MOV W1, W31
	0x01CA196C LDP X9, X2, [X8 + 0x1F8]
	0x01CA1970 BLR X9
	0x01CA1974 LDR X8, [X19 + 0x1A0]
	0x01CA1978 CBZ X8, 0x1CA198C
	0x01CA197C LDR X9, [X8 + 0x18]
	0x01CA1980 LDR X0, [X8 + 0x40]
	0x01CA1984 LDR X1, [X8 + 0x28]
	0x01CA1988 BLR X9
	0x01CA198C LDR X8, [X21 + 0x28]
	0x01CA1990 LDR X9, [X31 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, [X0+304]
	005 Move X20, X0
	006 Call GrabbableItem.get_isVisible, X0
	007 Move TEMP, X0
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfNotEqual {17}
	011 Move X0, X20
	012 Call GrabbableItem.get_isAttached, X0
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {27}
	017 Move W1, W31
	018 Compare X19, 0
	019 JumpIfEqual {32}
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X2, X31
	024 Move X30, [X31+32]
	025 Call Rigidbody.set_useGravity, X0, X1
	026 Return 
	027 Move W8, [X20+138]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CSET not yet implemented."
	030 Compare X19, 0
	031 JumpIfNotEqual {20}
	032 Call 0x1B6FA1C

Method: System.Void AddToBag(Fusion.NetworkBehaviourId bagId)

Disassembly:
	0x01CA19F4 LDR X0, [X0 + 0x490]

ISIL:
No ISIL was generated
Method: System.Void RemoveFromBag(UnityEngine.Vector3 position)

Disassembly:
	0x01CA1C40 MOV X1, X31

ISIL:
No ISIL was generated
Method: System.Void RPC_AddToBag(Fusion.NetworkBehaviourId backpackId)

Disassembly:
	0x01CA19F8 BL 0x1B6E7F0
	0x01CA19FC MOVZ W8, 0x1
	0x01CA1A00 STRB W8, [X20 + 0x420]
	0x01CA1A04 LDRB W8, [X19 + 0x58]
	0x01CA1A08 CBZ W8, 0x1CA1B88
	0x01CA1A0C STRB W31, [X19 + 0x58]
	0x01CA1A10 MOV X0, X19
	0x01CA1A14 BL 0x1C99A60
	0x01CA1A18 MOV X20, X0
	0x01CA1A1C MOV X0, X31
	0x01CA1A20 BL 0x1D6815C
	0x01CA1A24 ADRP X22, 0x2582000
	0x01CA1A28 LDRB W8, [X22 + 0x44E]
	0x01CA1A2C MOV X21, X0
	0x01CA1A30 CBNZ W8, 0x1CA1A48
	0x01CA1A34 ADRP X0, 0x22AD000
	0x01CA1A38 LDR X0, [X0 + 0x1E8]
	0x01CA1A3C BL 0x1B6E7F0
	0x01CA1A40 MOVZ W8, 0x1
	0x01CA1A44 STRB W8, [X22 + 0x44E]
	0x01CA1A48 ADRP X8, 0x22AD000
	0x01CA1A4C LDR X8, [X8 + 0x1E8]
	0x01CA1A50 LDR X0, [X8]
	0x01CA1A54 LDR W8, [X0 + 0xE0]
	0x01CA1A58 CBNZ W8, 0x1CA1A60
	0x01CA1A5C BL 0x1B6E8F8
	0x01CA1A60 CMP W20, W21
	0x01CA1A64 B.NE 0x1CA1A78
	0x01CA1A68 UBFM X8, X21, 0x20, 0x3F
	0x01CA1A6C UBFM X9, X20, 0x20, 0x3F
	0x01CA1A70 CMP W9, W8
	0x01CA1A74 B.EQ 0x1CA1B40
	0x01CA1A78 MOV X0, X19
	0x01CA1A7C BL 0x1C99A60
	0x01CA1A80 MOV X0, X19
	0x01CA1A84 MOV X1, X31
	0x01CA1A88 BL 0x3A9B084
	0x01CA1A8C CBZ X0, 0x1CA1D08
	0x01CA1A90 MOV X1, X31
	0x01CA1A94 BL 0x3AA7658
	0x01CA1A98 MOV X0, X19
	0x01CA1A9C MOV X1, X31
	0x01CA1AA0 MOV V8.16B, V0.16B
	0x01CA1AA4 MOV V9.16B, V1.16B
	0x01CA1AA8 MOV V10.16B, V2.16B
	0x01CA1AAC BL 0x3A9B084
	0x01CA1AB0 CBZ X0, 0x1CA1D08
	0x01CA1AB4 MOV X1, X31
	0x01CA1AB8 BL 0x3AA5FBC
	0x01CA1ABC ADRP X20, 0x2582000
	0x01CA1AC0 LDRB W8, [X20 + 0x43F]
	0x01CA1AC4 MOV V11.16B, V0.16B
	0x01CA1AC8 MOV V12.16B, V1.16B
	0x01CA1ACC MOV V13.16B, V2.16B
	0x01CA1AD0 MOV V14.16B, V3.16B
	0x01CA1AD4 CBNZ W8, 0x1CA1AEC
	0x01CA1AD8 ADRP X0, 0x22AC000
	0x01CA1ADC LDR X0, [X0 + 0x480]
	0x01CA1AE0 BL 0x1B6E7F0
	0x01CA1AE4 MOVZ W8, 0x1
	0x01CA1AE8 STRB W8, [X20 + 0x43F]
	0x01CA1AEC ADRP X8, 0x22AC000
	0x01CA1AF0 LDR X8, [X8 + 0x480]
	0x01CA1AF4 MOVZ W2, 0x1
	0x01CA1AF8 MOV X0, X19
	0x01CA1AFC MOV V3.16B, V11.16B
	0x01CA1B00 LDR X8, [X8]
	0x01CA1B04 MOV V4.16B, V12.16B
	0x01CA1B08 MOV V5.16B, V13.16B
	0x01CA1B0C MOV V6.16B, V14.16B
	0x01CA1B10 LDR X8, [X8 + 0xB8]
	0x01CA1B14 MOV W3, W31
	0x01CA1B18 LDP S0, S1, [X8]
	0x01CA1B1C LDR V2, [X8 + 0x8]
	0x01CA1B20 STR S0, [X31 + 0x10]
	0x01CA1B24 STP S1, S2, [X31 + 0x14]
	0x01CA1B28 STP S1, S2, [X31 + 0x4]
	0x01CA1B2C STR S0, [X31]
	0x01CA1B30 MOV V0.16B, V8.16B
	0x01CA1B34 MOV V1.16B, V9.16B
	0x01CA1B38 MOV V2.16B, V10.16B
	0x01CA1B3C BL 0x1C9F46C
	0x01CA1B40 LDR X8, [X19 + 0x80]
	0x01CA1B44 CBZ X8, 0x1CA1D08
	0x01CA1B48 LDRB W8, [X8 + 0x28]
	0x01CA1B4C ANDS W31, W8, 0xE
	0x01CA1B50 B.EQ 0x1CA1BC4
	0x01CA1B54 LDR X0, [X19 + 0x38]
	0x01CA1B58 CBZ X0, 0x1CA1D08
	0x01CA1B5C LDR X1, [X19 + 0x40]
	0x01CA1B60 LDP X20, X19, [X31 + 0x70]
	0x01CA1B64 LDP X22, X21, [X31 + 0x60]
	0x01CA1B68 LDR X30, [X31 + 0x58]
	0x01CA1B6C LDP D9, D8, [X31 + 0x48]
	0x01CA1B70 LDP D11, D10, [X31 + 0x38]
	0x01CA1B74 LDP D13, D12, [X31 + 0x28]
	0x01CA1B78 LDR V14, [X31 + 0x20]
	0x01CA1B7C MOV X2, X31
	0x01CA1B80 ADD X31, X31, 0x80
	0x01CA1B84 B 0x1D8C548
	0x01CA1B88 ADRP X20, 0x22AD000
	0x01CA1B8C LDR X20, [X20 + 0x1C0]
	0x01CA1B90 LDR X0, [X20]
	0x01CA1B94 LDR W8, [X0 + 0xE0]
	0x01CA1B98 CBNZ W8, 0x1CA1BA0
	0x01CA1B9C BL 0x1B6E8F8
	0x01CA1BA0 MOV X0, X19
	0x01CA1BA4 MOV X1, X31
	0x01CA1BA8 BL 0x1D697C8
	0x01CA1BAC LDR X0, [X19 + 0x38]
	0x01CA1BB0 CBZ X0, 0x1CA1D08
	0x01CA1BB4 MOV X1, X31
	0x01CA1BB8 BL 0x1D87040
	0x01CA1BBC CMP W0, 0x4
	0x01CA1BC0 B.NE 0x1CA1BE8
	0x01CA1BC4 LDP X20, X19, [X31 + 0x70]
	0x01CA1BC8 LDP X22, X21, [X31 + 0x60]
	0x01CA1BCC LDR X30, [X31 + 0x58]
	0x01CA1BD0 LDP D9, D8, [X31 + 0x48]
	0x01CA1BD4 LDP D11, D10, [X31 + 0x38]
	0x01CA1BD8 LDP D13, D12, [X31 + 0x28]
	0x01CA1BDC LDR V14, [X31 + 0x20]
	0x01CA1BE0 ADD X31, X31, 0x80
	0x01CA1BE4 RET
	0x01CA1BE8 LDR X0, [X19 + 0x40]
	0x01CA1BEC CBZ X0, 0x1CA1D08
	0x01CA1BF0 MOV X1, X31
	0x01CA1BF4 BL 0x1D9F538
	0x01CA1BF8 ANDS W31, W0, 0x7
	0x01CA1BFC B.EQ 0x1CA1C60
	0x01CA1C00 TBNZ X0, 0x0, 0x1CA1A10
	0x01CA1C04 LDR X8, [X19 + 0x38]
	0x01CA1C08 CBZ X8, 0x1CA1D08
	0x01CA1C0C LDR X0, [X8 + 0x50]
	0x01CA1C10 CBZ X0, 0x1CA1D08
	0x01CA1C14 MOV X1, X31
	0x01CA1C18 BL 0x1DBEFE4
	0x01CA1C1C TBZ X0, 0x0, 0x1CA1BC4
	0x01CA1C20 LDR X8, [X19 + 0x38]
	0x01CA1C24 CBZ X8, 0x1CA1D08
	0x01CA1C28 LDR X0, [X8 + 0x50]
	0x01CA1C2C MOVZ W1, 0x8
	0x01CA1C30 MOV X2, X31
	0x01CA1C34 BL 0x1DD601C
	0x01CA1C38 MOV X20, X0
	0x01CA1C3C MOVZ W0, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2583000
	007 Move W8, [X21+1050]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x22AE000
	015 Move X0, [X0+448]
	016 Call 0x1B6F7F0
	017 Move X0, 0x22AE000
	018 Move X0, [X0+1120]
	019 Call 0x1B6F7F0
	020 Move W8, 1
	021 Move [X21+1050], W8
	022 Move W8, [X19+88]
	023 Compare W8, 0
	024 JumpIfEqual {79}
	025 Move [X19+88], W31
	026 Move X0, X19
	027 Move X1, X20
	028 Call GrabbableItem.set_backpackId, X0, X1
	029 Move X21, 0x2583000
	030 Move W8, [X21+1087]
	031 Move X20, [X19+304]
	032 Compare W8, 0
	033 JumpIfNotEqual {39}
	034 Move X0, 0x22AD000
	035 Move X0, [X0+1152]
	036 Call 0x1B6F7F0
	037 Move W8, 1
	038 Move [X21+1087], W8
	039 Compare X20, 0
	040 JumpIfEqual {183}
	041 Move X22, 0x22AD000
	042 Move X22, [X22+1152]
	043 Move X0, X20
	044 Move X1, X31
	045 Move X8, [X22]
	046 Move X8, [X8+184]
	047 Move S1, [X8+4]
	048 Move S2, [X8+8]
	049 Move V0, [X8]
	050 Call Rigidbody.set_velocity, X0, X1
	051 Move W8, [X21+1087]
	052 Move X20, [X19+304]
	053 Compare W8, 0
	054 JumpIfNotEqual {60}
	055 Move X0, 0x22AD000
	056 Move X0, [X0+1152]
	057 Call 0x1B6F7F0
	058 Move W8, 1
	059 Move [X21+1087], W8
	060 Compare X20, 0
	061 JumpIfEqual {183}
	062 Move X8, [X22]
	063 Move X0, X20
	064 Move X1, X31
	065 Move X8, [X8+184]
	066 Move S1, [X8+4]
	067 Move S2, [X8+8]
	068 Move V0, [X8]
	069 Call Rigidbody.set_angularVelocity, X0, X1
	070 Move X0, X19
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move W1, 1
	076 Move X30, [X31+48]
	077 Call GrabbableItem.UpdateIsVisible, X0, X1
	078 Return 
	079 Move X21, 0x22AE000
	080 Move X21, [X21+448]
	081 Move X0, [X21]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1B6F8F8
	086 Move X0, X19
	087 Move X1, X31
	088 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	089 Move X0, [X19+56]
	090 Compare X0, 0
	091 JumpIfEqual {183}
	092 Move X1, X31
	093 Call NetworkRunner.get_Stage, X0
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X20, [X31+32]
	096 Move X19, [X31+40]
	097 Move X22, [X31+16]
	098 Move X21, [X31+24]
	099 Move X30, [X31+48]
	100 Return 
	101 Move X0, [X19+64]
	102 Compare X0, 0
	103 JumpIfEqual {183}
	104 Move X1, X31
	105 Call NetworkObject.GetLocalAuthorityMask, X0
	106 And W31, W0, 7
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfEqual {26}
	111 Move X8, [X19+56]
	112 Compare X8, 0
	113 JumpIfEqual {183}
	114 Move X0, [X8+80]
	115 Compare X0, 0
	116 JumpIfEqual {183}
	117 Move X1, X31
	118 Call Simulation.HasAnyActiveConnections, X0
	119 Move TEMP, X0
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfNotEqual {95}
	123 Move X8, [X19+56]
	124 Compare X8, 0
	125 JumpIfEqual {183}
	126 Move X0, [X8+80]
	127 Move W1, 16
	128 Move X2, X31
	129 Call SimulationMessage.Allocate, X0, X1
	130 Move X21, X0
	131 Move W0, 1
	132 Move X1, X31
	133 Call Assert.Check, X0
	134 Move X8, [X19+64]
	135 Compare X8, 0
	136 JumpIfEqual {183}
	137 Move X8, [X8+32]
	138 Compare X8, 0
	139 JumpIfEqual {160}
	140 Move W0, [X8]
	141 Move X0, [X21]
	142 Move X19, [X19+64]
	143 Move W8, [X0+224]
	144 Compare W8, 0
	145 JumpIfNotEqual {147}
	146 Call 0x1B6F8F8
	147 Move X8, 0x22AE000
	148 Move X8, [X8+1120]
	149 Move X1, X19
	150 Move X20, [X31+32]
	151 Move X19, [X31+40]
	152 Move X22, [X31+16]
	153 Move X21, [X31+24]
	154 Move X0, [X8]
	155 Move W2, 7
	156 Move X3, X31
	157 Move X30, [X31+48]
	158 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	159 Return 
	160 Move X0, X31
	161 Move W1, [X19+104]
	162 Move W2, 4
	163 Move X3, X31
	164 Call RpcHeader.Create, X0, X1, X2
	165 Move [X21+28], X0
	166 Move [X21+36], X20
	167 Compare X21, 0
	168 JumpIfEqual {183}
	169 Move W8, 128
	170 Move [X21+12], W8
	171 Move X0, [X19+56]
	172 Compare X0, 0
	173 JumpIfEqual {183}
	174 Move X1, X21
	175 Move X20, [X31+32]
	176 Move X19, [X31+40]
	177 Move X22, [X31+16]
	178 Move X21, [X31+24]
	179 Move X2, X31
	180 Move X30, [X31+48]
	181 Call NetworkRunner.SendRpc, X0, X1
	182 Return 
	183 Call 0x1B6FA1C

Method: System.Void RPC_RemoveFromBag(UnityEngine.Vector3 position)

Disassembly:
	0x01CA1C44 BL 0x1D29EBC
	0x01CA1C48 LDR X8, [X19 + 0x40]
	0x01CA1C4C CBZ X8, 0x1CA1D08
	0x01CA1C50 LDR X8, [X8 + 0x20]
	0x01CA1C54 CBZ X8, 0x1CA1CB0
	0x01CA1C58 LDR W0, [X8]
	0x01CA1C5C B 0x1CA1CB4
	0x01CA1C60 LDR X0, [X20]
	0x01CA1C64 LDR X19, [X19 + 0x40]
	0x01CA1C68 LDR W8, [X0 + 0xE0]
	0x01CA1C6C CBNZ W8, 0x1CA1C74
	0x01CA1C70 BL 0x1B6E8F8
	0x01CA1C74 ADRP X8, 0x22AD000
	0x01CA1C78 LDR X8, [X8 + 0x490]
	0x01CA1C7C MOV X1, X19
	0x01CA1C80 LDP X20, X19, [X31 + 0x70]
	0x01CA1C84 LDP X22, X21, [X31 + 0x60]
	0x01CA1C88 LDR X0, [X8]
	0x01CA1C8C LDR X30, [X31 + 0x58]
	0x01CA1C90 LDP D9, D8, [X31 + 0x48]
	0x01CA1C94 LDP D11, D10, [X31 + 0x38]
	0x01CA1C98 LDP D13, D12, [X31 + 0x28]
	0x01CA1C9C LDR V14, [X31 + 0x20]
	0x01CA1CA0 MOVZ W2, 0x7
	0x01CA1CA4 MOV X3, X31
	0x01CA1CA8 ADD X31, X31, 0x80
	0x01CA1CAC B 0x1D69640
	0x01CA1CB0 MOV X0, X31
	0x01CA1CB4 LDR W1, [X19 + 0x68]
	0x01CA1CB8 MOVZ W2, 0x7
	0x01CA1CBC MOV X3, X31
	0x01CA1CC0 BL 0x1DA8258
	0x01CA1CC4 STUR X0, [X20 + 0x1C]
	0x01CA1CC8 CBZ X20, 0x1CA1D08
	0x01CA1CCC MOVZ W8, 0x40
	0x01CA1CD0 STR W8, [X20 + 0xC]
	0x01CA1CD4 LDR X0, [X19 + 0x38]
	0x01CA1CD8 CBZ X0, 0x1CA1D08
	0x01CA1CDC MOV X1, X20
	0x01CA1CE0 LDP X20, X19, [X31 + 0x70]
	0x01CA1CE4 LDP X22, X21, [X31 + 0x60]
	0x01CA1CE8 LDR X30, [X31 + 0x58]
	0x01CA1CEC LDP D9, D8, [X31 + 0x48]
	0x01CA1CF0 LDP D11, D10, [X31 + 0x38]
	0x01CA1CF4 LDP D13, D12, [X31 + 0x28]
	0x01CA1CF8 LDR V14, [X31 + 0x20]
	0x01CA1CFC MOV X2, X31
	0x01CA1D00 ADD X31, X31, 0x80
	0x01CA1D04 B 0x1D8A710
	0x01CA1D08 BL 0x1B6EA1C
	0x01CA1D0C STP X30, X27, [X31 - 0x50]!
	0x01CA1D10 STP X26, X25, [X31 + 0x10]
	0x01CA1D14 STP X24, X23, [X31 + 0x20]
	0x01CA1D18 STP X22, X21, [X31 + 0x30]
	0x01CA1D1C STP X20, X19, [X31 + 0x40]
	0x01CA1D20 ADRP X19, 0x2582000
	0x01CA1D24 LDRB W8, [X19 + 0x421]
	0x01CA1D28 MOV X20, X0
	0x01CA1D2C TBNZ X8, 0x0, 0x1CA1D74
	0x01CA1D30 ADRP X0, 0x22AD000
	0x01CA1D34 LDR X0, [X0 + 0x470]
	0x01CA1D38 BL 0x1B6E7F0
	0x01CA1D3C ADRP X0, 0x22AD000
	0x01CA1D40 LDR X0, [X0 + 0x498]
	0x01CA1D44 BL 0x1B6E7F0
	0x01CA1D48 ADRP X0, 0x22AD000
	0x01CA1D4C LDR X0, [X0 + 0x4A0]
	0x01CA1D50 BL 0x1B6E7F0
	0x01CA1D54 ADRP X0, 0x22AD000
	0x01CA1D58 LDR X0, [X0 + 0x478]
	0x01CA1D5C BL 0x1B6E7F0
	0x01CA1D60 ADRP X0, 0x22AD000
	0x01CA1D64 LDR X0, [X0 + 0x4A8]
	0x01CA1D68 BL 0x1B6E7F0
	0x01CA1D6C MOVZ W8, 0x1
	0x01CA1D70 STRB W8, [X19 + 0x421]
	0x01CA1D74 LDR X0, [X20 + 0x40]
	0x01CA1D78 CBZ X0, 0x1CA1FB8
	0x01CA1D7C LDRB W8, [X0 + 0x60]
	0x01CA1D80 TBNZ X8, 0x1, 0x1CA1FB8
	0x01CA1D84 MOV X1, X31
	0x01CA1D88 BL 0x1D9E780
	0x01CA1D8C TBZ X0, 0x0, 0x1CA1FB8
	0x01CA1D90 LDR X0, [X20 + 0x38]
	0x01CA1D94 CBZ X0, 0x1CA1FD4
	0x01CA1D98 MOV X1, X31
	0x01CA1D9C BL 0x1D87590
	0x01CA1DA0 CBZ X0, 0x1CA1FD4
	0x01CA1DA4 ADRP X10, 0x22AD000
	0x01CA1DA8 LDR X8, [X0]
	0x01CA1DAC LDR X10, [X10 + 0x498]
	0x01CA1DB0 MOV X19, X0
	0x01CA1DB4 LDRH W9, [X8 + 0x12E]
	0x01CA1DB8 LDR X1, [X10]
	0x01CA1DBC CBZ X9, 0x1CA1DE0
	0x01CA1DC0 LDR X10, [X8 + 0xB0]
	0x01CA1DC4 ADD X10, X10, 0x8
	0x01CA1DC8 LDUR X11, [X10 - 0x8]
	0x01CA1DCC CMP X11, X1
	0x01CA1DD0 B.EQ 0x1CA1DF0
	0x01CA1DD4 SUBS X9, X9, 0x1
	0x01CA1DD8 ADD X10, X10, 0x10
	0x01CA1DDC B.NE 0x1CA1DC8
	0x01CA1DE0 MOV X0, X19
	0x01CA1DE4 MOV W2, W31
	0x01CA1DE8 BL 0x1BB4284
	0x01CA1DEC B 0x1CA1DFC
	0x01CA1DF0 LDRSW X9, [X10]
	0x01CA1DF4 ADD X8, X8, X9, 0x4, LSL
	0x01CA1DF8 ADD X0, X8, 0x138
	0x01CA1DFC LDP X8, X1, [X0]
	0x01CA1E00 MOV X0, X19
	0x01CA1E04 BLR X8
	0x01CA1E08 MOV X19, X0
	0x01CA1E0C CBZ X0, 0x1CA1FD8
	0x01CA1E10 ADRP X25, 0x22AD000
	0x01CA1E14 ADRP X26, 0x22AD000
	0x01CA1E18 ADRP X27, 0x22AD000
	0x01CA1E1C LDR X25, [X25 + 0x478]
	0x01CA1E20 LDR X26, [X26 + 0x4A0]
	0x01CA1E24 LDR X27, [X27 + 0x4A8]
	0x01CA1E28 LDR X8, [X19]
	0x01CA1E2C LDR X1, [X25]
	0x01CA1E30 LDRH W9, [X8 + 0x12E]
	0x01CA1E34 CBZ X9, 0x1CA1E58
	0x01CA1E38 LDR X10, [X8 + 0xB0]
	0x01CA1E3C ADD X10, X10, 0x8
	0x01CA1E40 LDUR X11, [X10 - 0x8]
	0x01CA1E44 CMP X11, X1
	0x01CA1E48 B.EQ 0x1CA1E68
	0x01CA1E4C SUBS X9, X9, 0x1
	0x01CA1E50 ADD X10, X10, 0x10
	0x01CA1E54 B.NE 0x1CA1E40
	0x01CA1E58 MOV X0, X19
	0x01CA1E5C MOV W2, W31
	0x01CA1E60 BL 0x1BB4284
	0x01CA1E64 B 0x1CA1E74
	0x01CA1E68 LDRSW X9, [X10]
	0x01CA1E6C ADD X8, X8, X9, 0x4, LSL
	0x01CA1E70 ADD X0, X8, 0x138
	0x01CA1E74 LDP X8, X1, [X0]
	0x01CA1E78 MOV X0, X19
	0x01CA1E7C BLR X8
	0x01CA1E80 TBZ X0, 0x0, 0x1CA1F4C
	0x01CA1E84 LDR X8, [X19]
	0x01CA1E88 LDR X1, [X26]
	0x01CA1E8C LDRH W9, [X8 + 0x12E]
	0x01CA1E90 CBZ X9, 0x1CA1EB4
	0x01CA1E94 LDR X10, [X8 + 0xB0]
	0x01CA1E98 ADD X10, X10, 0x8
	0x01CA1E9C LDUR X11, [X10 - 0x8]
	0x01CA1EA0 CMP X11, X1
	0x01CA1EA4 B.EQ 0x1CA1EC4
	0x01CA1EA8 SUBS X9, X9, 0x1
	0x01CA1EAC ADD X10, X10, 0x10
	0x01CA1EB0 B.NE 0x1CA1E9C
	0x01CA1EB4 MOV X0, X19
	0x01CA1EB8 MOV W2, W31
	0x01CA1EBC BL 0x1BB4284
	0x01CA1EC0 B 0x1CA1ED0
	0x01CA1EC4 LDRSW X9, [X10]
	0x01CA1EC8 ADD X8, X8, X9, 0x4, LSL
	0x01CA1ECC ADD X0, X8, 0x138
	0x01CA1ED0 LDP X8, X1, [X0]
	0x01CA1ED4 MOV X0, X19
	0x01CA1ED8 BLR X8
	0x01CA1EDC LDR X21, [X20 + 0x38]
	0x01CA1EE0 CBZ X21, 0x1CA1FD0
	0x01CA1EE4 LDR X23, [X20 + 0x40]
	0x01CA1EE8 MOV X22, X0
	0x01CA1EEC MOV X0, X21
	0x01CA1EF0 MOV X1, X31
	0x01CA1EF4 BL 0x1D87528
	0x01CA1EF8 MOV X24, X0
	0x01CA1EFC LDR X0, [X27]
	0x01CA1F00 LDR W8, [X0 + 0xE0]
	0x01CA1F04 CBNZ W8, 0x1CA1F0C
	0x01CA1F08 BL 0x1B6E8F8
	0x01CA1F0C CMP W22, W24

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x2583000
	010 Move W8, [X20+1051]
	011 Move V8, V2
	012 Move V9, V1
	013 Move V10, V0
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x22AE000
	020 Move X0, [X0+448]
	021 Call 0x1B6F7F0
	022 Move X0, 0x22AE000
	023 Move X0, [X0+1128]
	024 Call 0x1B6F7F0
	025 Move W8, 1
	026 Move [X20+1051], W8
	027 Move W8, [X19+88]
	028 Compare W8, 0
	029 JumpIfEqual {109}
	030 Move [X19+88], W31
	031 Move X0, X31
	032 Call NetworkBehaviourId.get_None
	033 Move X1, X0
	034 Move X0, X19
	035 Call GrabbableItem.set_backpackId, X0, X1
	036 Move X0, X19
	037 Move X1, X31
	038 Call Component.get_transform, X0
	039 Compare X0, 0
	040 JumpIfEqual {224}
	041 Move V0, V10
	042 Move V1, V9
	043 Move V2, V8
	044 Move X1, X31
	045 Call Transform.set_position, X0, X1
	046 Move W1, 1
	047 Move X0, X19
	048 Call GrabbableItem.UpdateIsVisible, X0, X1
	049 Move X0, [X19+304]
	050 Compare X0, 0
	051 JumpIfEqual {224}
	052 Move V0, V10
	053 Move V1, V9
	054 Move V2, V8
	055 Move X1, X31
	056 Call Rigidbody.set_position, X0, X1
	057 Move X21, 0x2583000
	058 Move W8, [X21+1087]
	059 Move X20, [X19+304]
	060 Compare W8, 0
	061 JumpIfNotEqual {67}
	062 Move X0, 0x22AD000
	063 Move X0, [X0+1152]
	064 Call 0x1B6F7F0
	065 Move W8, 1
	066 Move [X21+1087], W8
	067 Compare X20, 0
	068 JumpIfEqual {224}
	069 Move X22, 0x22AD000
	070 Move X22, [X22+1152]
	071 Move X0, X20
	072 Move X1, X31
	073 Move X8, [X22]
	074 Move X8, [X8+184]
	075 Move S1, [X8+4]
	076 Move S2, [X8+8]
	077 Move V0, [X8]
	078 Call Rigidbody.set_velocity, X0, X1
	079 Move W8, [X21+1087]
	080 Move X20, [X19+304]
	081 Compare W8, 0
	082 JumpIfNotEqual {88}
	083 Move X0, 0x22AD000
	084 Move X0, [X0+1152]
	085 Call 0x1B6F7F0
	086 Move W8, 1
	087 Move [X21+1087], W8
	088 Compare X20, 0
	089 JumpIfEqual {224}
	090 Move X8, [X22]
	091 Move X0, X20
	092 Move X1, X31
	093 Move X8, [X8+184]
	094 Move S1, [X8+4]
	095 Move S2, [X8+8]
	096 Move V0, [X8]
	097 Call Rigidbody.set_angularVelocity, X0, X1
	098 Move X0, X19
	099 Move X20, [X31+48]
	100 Move X19, [X31+56]
	101 Move X22, [X31+32]
	102 Move X21, [X31+40]
	103 Move X30, [X31+24]
	104 Move D9, [X31+8]
	105 Move D8, [X31+16]
	106 Move V10, [X31+64]
	107 Call GrabbableItem.StartTimeoutTimer, X0
	108 Return 
	109 Move X20, 0x22AE000
	110 Move X20, [X20+448]
	111 Move X0, [X20]
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {116}
	115 Call 0x1B6F8F8
	116 Move X0, X19
	117 Move X1, X31
	118 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	119 Move X0, [X19+56]
	120 Compare X0, 0
	121 JumpIfEqual {224}
	122 Move X1, X31
	123 Call NetworkRunner.get_Stage, X0
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X20, [X31+48]
	126 Move X19, [X31+56]
	127 Move X22, [X31+32]
	128 Move X21, [X31+40]
	129 Move X30, [X31+24]
	130 Move D9, [X31+8]
	131 Move D8, [X31+16]
	132 Move V10, [X31+64]
	133 Return 
	134 Move X0, [X19+64]
	135 Compare X0, 0
	136 JumpIfEqual {224}
	137 Move X1, X31
	138 Call NetworkObject.GetLocalAuthorityMask, X0
	139 And W31, W0, 7
	140 Move TEMP, X0
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfEqual {31}
	144 Move X8, [X19+56]
	145 Compare X8, 0
	146 JumpIfEqual {224}
	147 Move X0, [X8+80]
	148 Compare X0, 0
	149 JumpIfEqual {224}
	150 Move X1, X31
	151 Call Simulation.HasAnyActiveConnections, X0
	152 Move TEMP, X0
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfNotEqual {125}
	156 Move X8, [X19+56]
	157 Compare X8, 0
	158 JumpIfEqual {224}
	159 Move X0, [X8+80]
	160 Move W1, 20
	161 Move X2, X31
	162 Call SimulationMessage.Allocate, X0, X1
	163 Move X20, X0
	164 Move W0, 1
	165 Move X1, X31
	166 Call Assert.Check, X0
	167 Move X8, [X19+64]
	168 Compare X8, 0
	169 JumpIfEqual {224}
	170 Move X8, [X8+32]
	171 Compare X8, 0
	172 JumpIfEqual {196}
	173 Move W0, [X8]
	174 Move X0, [X20]
	175 Move X19, [X19+64]
	176 Move W8, [X0+224]
	177 Compare W8, 0
	178 JumpIfNotEqual {180}
	179 Call 0x1B6F8F8
	180 Move X8, 0x22AE000
	181 Move X8, [X8+1128]
	182 Move X1, X19
	183 Move X20, [X31+48]
	184 Move X19, [X31+56]
	185 Move X22, [X31+32]
	186 Move X21, [X31+40]
	187 Move X0, [X8]
	188 Move X30, [X31+24]
	189 Move D9, [X31+8]
	190 Move D8, [X31+16]
	191 Move W2, 7
	192 Move X3, X31
	193 Move V10, [X31+64]
	194 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	195 Return 
	196 Move X0, X31
	197 Move W1, [X19+104]
	198 Move W2, 5
	199 Move X3, X31
	200 Call RpcHeader.Create, X0, X1, X2
	201 Move [X20+28], X0
	202 Move [X20+36], S10
	203 Move [X20+44], S9
	204 Move [X20+44], S8
	205 Compare X20, 0
	206 JumpIfEqual {224}
	207 Move W8, 160
	208 Move [X20+12], W8
	209 Move X0, [X19+56]
	210 Compare X0, 0
	211 JumpIfEqual {224}
	212 Move X1, X20
	213 Move X20, [X31+48]
	214 Move X19, [X31+56]
	215 Move X22, [X31+32]
	216 Move X21, [X31+40]
	217 Move X30, [X31+24]
	218 Move D9, [X31+8]
	219 Move D8, [X31+16]
	220 Move X2, X31
	221 Move V10, [X31+64]
	222 Call NetworkRunner.SendRpc, X0, X1
	223 Return 
	224 Call 0x1B6FA1C

Method: System.Void UpdateDetectCollisions()

Disassembly:
	0x01CA1994 CMP X8, X9
	0x01CA1998 B.NE 0x1CA19B0
	0x01CA199C LDP X20, X19, [X31 + 0x40]
	0x01CA19A0 LDP X30, X21, [X31 + 0x30]
	0x01CA19A4 ADD X31, X31, 0x50
	0x01CA19A8 RET
	0x01CA19AC BL 0x1B6EA1C
	0x01CA19B0 BL 0x3D19880
	0x01CA19B4 SUB X31, X31, 0x80
	0x01CA19B8 STR D14, [X31 + 0x20]
	0x01CA19BC STP D13, D12, [X31 + 0x28]
	0x01CA19C0 STP D11, D10, [X31 + 0x38]
	0x01CA19C4 STP D9, D8, [X31 + 0x48]
	0x01CA19C8 STR X30, [X31 + 0x58]
	0x01CA19CC STP X22, X21, [X31 + 0x60]
	0x01CA19D0 STP X20, X19, [X31 + 0x70]
	0x01CA19D4 ADRP X20, 0x2582000
	0x01CA19D8 LDRB W8, [X20 + 0x420]
	0x01CA19DC MOV X19, X0
	0x01CA19E0 TBNZ X8, 0x0, 0x1CA1A04
	0x01CA19E4 ADRP X0, 0x22AD000
	0x01CA19E8 LDR X0, [X0 + 0x1C0]
	0x01CA19EC BL 0x1B6E7F0
	0x01CA19F0 ADRP X0, 0x22AD000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, [X0+304]
	005 Move X20, X0
	006 Call GrabbableItem.get_isVisible, X0
	007 Move TEMP, X0
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfNotEqual {22}
	011 Move X0, X20
	012 Call GrabbableItem.get_isAttached, X0
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {32}
	017 Move W8, [X20+136]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 NotImplemented "Instruction CSET not yet implemented."
	020 Compare X19, 0
	021 JumpIfNotEqual {25}
	022 Move W1, W31
	023 Compare X19, 0
	024 JumpIfEqual {35}
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X2, X31
	029 Move X30, [X31+32]
	030 Call Rigidbody.set_detectCollisions, X0, X1
	031 Return 
	032 Move W1, 1
	033 Compare X19, 0
	034 JumpIfNotEqual {25}
	035 Call 0x1B6FA1C

Method: System.Void UpdateLayer()

Disassembly:
	0x01CA1F10 B.NE 0x1CA1F1C
	0x01CA1F14 MOVZ W3, 0x1
	0x01CA1F18 B 0x1CA1F34
	0x01CA1F1C LDR X0, [X27]
	0x01CA1F20 LDR W8, [X0 + 0xE0]
	0x01CA1F24 CBNZ W8, 0x1CA1F2C
	0x01CA1F28 BL 0x1B6E8F8
	0x01CA1F2C ADDS W31, W22, 0x1
	0x01CA1F30 CSET W3, EQ
	0x01CA1F34 AND X1, X22, 0x0
	0x01CA1F38 MOV X0, X21
	0x01CA1F3C MOV X2, X23
	0x01CA1F40 MOV X4, X31
	0x01CA1F44 BL 0x1D8BD2C
	0x01CA1F48 B 0x1CA1E28
	0x01CA1F4C MOV X20, X31
	0x01CA1F50 CBZ X19, 0x1CA1FB4
	0x01CA1F54 ADRP X10, 0x22AD000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Call GrabbableItem.get_isAttached, X0
	006 And W31, W0, 1
	007 Move W8, 380
	008 Move W9, 384
	009 NotImplemented "Instruction CSEL not yet implemented."
	010 Move W20, [X19]
	011 Move X0, X19
	012 Move X1, X31
	013 Call Component.get_gameObject, X0
	014 Move X1, X0
	015 Move X0, X19
	016 Move W2, W20
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]

Method: System.Void UpdateLayerRecursively(UnityEngine.GameObject go, System.Int32 layer)

Disassembly:
	0x01CA1F58 LDR X8, [X19]
	0x01CA1F5C LDR X10, [X10 + 0x470]
	0x01CA1F60 LDRH W9, [X8 + 0x12E]
	0x01CA1F64 LDR X1, [X10]
	0x01CA1F68 CBZ X9, 0x1CA1F8C
	0x01CA1F6C LDR X10, [X8 + 0xB0]
	0x01CA1F70 ADD X10, X10, 0x8
	0x01CA1F74 LDUR X11, [X10 - 0x8]
	0x01CA1F78 CMP X11, X1
	0x01CA1F7C B.EQ 0x1CA1F9C
	0x01CA1F80 SUBS X9, X9, 0x1
	0x01CA1F84 ADD X10, X10, 0x10
	0x01CA1F88 B.NE 0x1CA1F74
	0x01CA1F8C MOV X0, X19
	0x01CA1F90 MOV W2, W31
	0x01CA1F94 BL 0x1BB4284
	0x01CA1F98 B 0x1CA1FA8
	0x01CA1F9C LDRSW X9, [X10]
	0x01CA1FA0 ADD X8, X8, X9, 0x4, LSL
	0x01CA1FA4 ADD X0, X8, 0x138
	0x01CA1FA8 LDP X8, X1, [X0]
	0x01CA1FAC MOV X0, X19
	0x01CA1FB0 BLR X8
	0x01CA1FB4 CBNZ X20, 0x1CA1FDC
	0x01CA1FB8 LDP X20, X19, [X31 + 0x40]
	0x01CA1FBC LDP X22, X21, [X31 + 0x30]
	0x01CA1FC0 LDP X24, X23, [X31 + 0x20]
	0x01CA1FC4 LDP X26, X25, [X31 + 0x10]
	0x01CA1FC8 LDP X30, X27, [X31], #0x50
	0x01CA1FCC RET
	0x01CA1FD0 BL 0x1B6EA1C
	0x01CA1FD4 BL 0x1B6EA1C
	0x01CA1FD8 BL 0x1B6EA1C
	0x01CA1FDC MOV X0, X20
	0x01CA1FE0 BL 0x1B6EA14
	0x01CA1FE4 B 0x1CA1FFC
	0x01CA1FE8 B 0x1CA1FFC
	0x01CA1FEC B 0x1CA1FFC
	0x01CA1FF0 B 0x1CA1FFC
	0x01CA1FF4 B 0x1CA1FFC
	0x01CA1FF8 B 0x1CA1FFC
	0x01CA1FFC MOV X21, X0
	0x01CA2000 CMP W1, 0x1
	0x01CA2004 B.NE 0x1CA201C
	0x01CA2008 MOV X0, X21
	0x01CA200C BL 0x3D19840
	0x01CA2010 LDR X20, [X0]
	0x01CA2014 BL 0x3D19850
	0x01CA2018 B 0x1CA1F50
	0x01CA201C MOV X20, X31
	0x01CA2020 B 0x1CA2028
	0x01CA2024 MOV X21, X0
	0x01CA2028 CBZ X19, 0x1CA208C
	0x01CA202C ADRP X10, 0x22AC000
	0x01CA2030 LDR X8, [X19]
	0x01CA2034 LDR X10, [X10 + 0x470]
	0x01CA2038 LDRH W9, [X8 + 0x12E]
	0x01CA203C LDR X1, [X10]
	0x01CA2040 CBZ X9, 0x1CA2064
	0x01CA2044 LDR X10, [X8 + 0xB0]
	0x01CA2048 ADD X10, X10, 0x8
	0x01CA204C LDUR X11, [X10 - 0x8]
	0x01CA2050 CMP X11, X1
	0x01CA2054 B.EQ 0x1CA2074
	0x01CA2058 SUBS X9, X9, 0x1
	0x01CA205C ADD X10, X10, 0x10
	0x01CA2060 B.NE 0x1CA204C
	0x01CA2064 MOV X0, X19
	0x01CA2068 MOV W2, W31
	0x01CA206C BL 0x1BB4284
	0x01CA2070 B 0x1CA2080
	0x01CA2074 LDRSW X9, [X10]
	0x01CA2078 ADD X8, X8, X9, 0x4, LSL
	0x01CA207C ADD X0, X8, 0x138
	0x01CA2080 LDP X8, X1, [X0]
	0x01CA2084 MOV X0, X19
	0x01CA2088 BLR X8
	0x01CA208C CBNZ X20, 0x1CA2098
	0x01CA2090 MOV X0, X21
	0x01CA2094 BL 0x1C8418C
	0x01CA2098 MOV X0, X20
	0x01CA209C BL 0x1B6EA14
	0x01CA20A0 BL 0x18F46A8
	0x01CA20A4 SUB X31, X31, 0xC0
	0x01CA20A8 STR D14, [X31 + 0x50]
	0x01CA20AC STP D13, D12, [X31 + 0x58]
	0x01CA20B0 STP D11, D10, [X31 + 0x68]
	0x01CA20B4 STP D9, D8, [X31 + 0x78]
	0x01CA20B8 STR X30, [X31 + 0x88]
	0x01CA20BC STP X24, X23, [X31 + 0x90]
	0x01CA20C0 STP X22, X21, [X31 + 0xA0]
	0x01CA20C4 STP X20, X19, [X31 + 0xB0]
	0x01CA20C8 MRS X22, 0xC000
	0x01CA20CC LDR X8, [X22 + 0x28]
	0x01CA20D0 ADRP X20, 0x2581000
	0x01CA20D4 MOV X19, X0
	0x01CA20D8 STR X8, [X31 + 0x48]
	0x01CA20DC LDRB W8, [X20 + 0x422]
	0x01CA20E0 TBNZ X8, 0x0, 0x1CA2104
	0x01CA20E4 ADRP X0, 0x22AC000
	0x01CA20E8 LDR X0, [X0 + 0x4B0]
	0x01CA20EC BL 0x1B6E7F0
	0x01CA20F0 ADRP X0, 0x22AB000
	0x01CA20F4 LDR X0, [X0 + 0x478]
	0x01CA20F8 BL 0x1B6E7F0
	0x01CA20FC MOVZ W8, 0x1
	0x01CA2100 STRB W8, [X20 + 0x422]
	0x01CA2104 LDR X0, [X19 + 0x38]
	0x01CA2108 CBZ X0, 0x1CA23F8
	0x01CA210C LDR W8, [X0 + 0x180]
	0x01CA2110 CMP W8, 0x2
	0x01CA2114 B.NE 0x1CA23C0
	0x01CA2118 LDR X8, [X19 + 0x40]
	0x01CA211C CBZ X8, 0x1CA2190
	0x01CA2120 LDRB W9, [X8 + 0x60]
	0x01CA2124 TBNZ X9, 0x1, 0x1CA2190
	0x01CA2128 MOV X0, X8
	0x01CA212C MOV X1, X31
	0x01CA2130 BL 0x1D9E780
	0x01CA2134 TBZ X0, 0x0, 0x1CA2188
	0x01CA2138 ADRP X23, 0x22AB000
	0x01CA213C LDR X23, [X23 + 0x478]
	0x01CA2140 LDR X20, [X19 + 0x168]
	0x01CA2144 LDR X0, [X23]
	0x01CA2148 LDR W8, [X0 + 0xE0]
	0x01CA214C CBNZ W8, 0x1CA2154
	0x01CA2150 BL 0x1B6E8F8
	0x01CA2154 MOV X0, X20
	0x01CA2158 MOV X1, X31
	0x01CA215C MOV X2, X31
	0x01CA2160 BL 0x3A9D6EC
	0x01CA2164 TBZ X0, 0x0, 0x1CA21F4
	0x01CA2168 LDR X8, [X19 + 0x168]
	0x01CA216C CBZ X8, 0x1CA23F8
	0x01CA2170 LDR X9, [X8 + 0x40]
	0x01CA2174 CBZ X9, 0x1CA2328
	0x01CA2178 LDR X9, [X9 + 0x20]
	0x01CA217C CBZ X9, 0x1CA2328
	0x01CA2180 LDR W1, [X9]
	0x01CA2184 B 0x1CA232C
	0x01CA2188 LDR X0, [X19 + 0x38]
	0x01CA218C CBZ X0, 0x1CA23F8
	0x01CA2190 MOV X1, X31
	0x01CA2194 BL 0x1D87590
	0x01CA2198 LDR X8, [X19 + 0x40]
	0x01CA219C CBZ X8, 0x1CA23F8
	0x01CA21A0 MOV X20, X0
	0x01CA21A4 MOV X0, X8
	0x01CA21A8 MOV X1, X31
	0x01CA21AC BL 0x1D9EB2C
	0x01CA21B0 ADRP X8, 0x22AC000
	0x01CA21B4 LDR X8, [X8 + 0x4B0]
	0x01CA21B8 AND X1, X0, 0x0
	0x01CA21BC MOV X0, X20
	0x01CA21C0 LDR X2, [X8]
	0x01CA21C4 BL 0x20A6910
	0x01CA21C8 TBNZ X0, 0x0, 0x1CA23C0
	0x01CA21CC LDR X0, [X19 + 0x38]
	0x01CA21D0 CBZ X0, 0x1CA23F8
	0x01CA21D4 MOV X1, X31
	0x01CA21D8 BL 0x1D8B250
	0x01CA21DC TBZ X0, 0x0, 0x1CA23C0
	0x01CA21E0 LDR X0, [X19 + 0x40]
	0x01CA21E4 CBZ X0, 0x1CA23F8
	0x01CA21E8 MOV X1, X31
	0x01CA21EC BL 0x1D9F9D8
	0x01CA21F0 B 0x1CA23C0
	0x01CA21F4 MOV X0, X19
	0x01CA21F8 BL 0x1C99A60
	0x01CA21FC MOV X20, X0
	0x01CA2200 MOV X0, X31
	0x01CA2204 BL 0x1D6815C
	0x01CA2208 ADRP X24, 0x2581000
	0x01CA220C LDRB W8, [X24 + 0x44E]
	0x01CA2210 MOV X21, X0
	0x01CA2214 CBNZ W8, 0x1CA222C
	0x01CA2218 ADRP X0, 0x22AC000
	0x01CA221C LDR X0, [X0 + 0x1E8]
	0x01CA2220 BL 0x1B6E7F0
	0x01CA2224 MOVZ W8, 0x1
	0x01CA2228 STRB W8, [X24 + 0x44E]
	0x01CA222C ADRP X8, 0x22AC000
	0x01CA2230 LDR X8, [X8 + 0x1E8]
	0x01CA2234 LDR X0, [X8]
	0x01CA2238 LDR W8, [X0 + 0xE0]
	0x01CA223C CBNZ W8, 0x1CA2244
	0x01CA2240 BL 0x1B6E8F8
	0x01CA2244 CMP W20, W21
	0x01CA2248 B.NE 0x1CA225C
	0x01CA224C UBFM X8, X21, 0x20, 0x3F
	0x01CA2250 UBFM X9, X20, 0x20, 0x3F
	0x01CA2254 CMP W9, W8
	0x01CA2258 B.EQ 0x1CA2340
	0x01CA225C MOV X0, X19
	0x01CA2260 BL 0x1C99A60
	0x01CA2264 MOV X0, X19
	0x01CA2268 MOV X1, X31
	0x01CA226C BL 0x3A9B084
	0x01CA2270 CBZ X0, 0x1CA23F8
	0x01CA2274 MOV X1, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x2583000
	009 Move W8, [X22+1052]
	010 Move W20, W2
	011 Move X19, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x22AE000
	018 Move X0, [X0+1136]
	019 Call 0x1B6F7F0
	020 Move X0, 0x22AE000
	021 Move X0, [X0+1144]
	022 Call 0x1B6F7F0
	023 Move X0, 0x22AE000
	024 Move X0, [X0+1152]
	025 Call 0x1B6F7F0
	026 Move W8, 1
	027 Move [X22+1052], W8
	028 Compare X19, 0
	029 JumpIfEqual {159}
	030 Move X0, X19
	031 Move X1, X31
	032 Call GameObject.get_layer, X0
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, X19
	035 Move W1, W20
	036 Move X2, X31
	037 Call GameObject.set_layer, X0, X1
	038 Move X0, X19
	039 Move X1, X31
	040 Call GameObject.get_transform, X0
	041 Compare X0, 0
	042 JumpIfEqual {159}
	043 Move X22, 0x22AE000
	044 Move X22, [X22+1136]
	045 Move X1, X31
	046 Call Transform.GetEnumerator, X0
	047 Move X19, X0
	048 Compare X0, 0
	049 JumpIfEqual {160}
	050 Move X23, 0x22AE000
	051 Move X24, 0x22AD000
	052 Move X23, [X23+1144]
	053 Call 0x3D1A158
	054 Return 
	055 Move X8, [X19]
	056 Move X1, [X23]
	057 NotImplemented "Instruction LDRH not yet implemented."
	058 Compare X9, 0
	059 JumpIfEqual {66}
	060 Move X10, [X8+176]
	061 Add X10, X10, 8
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Subtract X9, X9, 1
	065 Add X10, X10, 16
	066 Move X0, X19
	067 Move W2, W31
	068 Call 0x1BB5284
	069 NotImplemented "Instruction LDRSW not yet implemented."
	070 Add X8, X8, X9
	071 Add X0, X8, 312
	072 Move X8, [X0]
	073 Move X1, [X0+8]
	074 Move X0, X19
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {119}
	080 Move X8, [X19]
	081 Move X1, [X23]
	082 NotImplemented "Instruction LDRH not yet implemented."
	083 Compare X9, 0
	084 JumpIfEqual {91}
	085 Move X10, [X8+176]
	086 Add X10, X10, 8
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Subtract X9, X9, 1
	090 Add X10, X10, 16
	091 Move W2, 1
	092 Move X0, X19
	093 Call 0x1BB5284
	094 Move W9, [X10]
	095 Add W9, W9, 1
	096 Add X8, X8, W9
	097 Add X0, X8, 312
	098 Move X8, [X0]
	099 Move X1, [X0+8]
	100 Move X0, X19
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Compare X0, 0
	103 JumpIfEqual {158}
	104 Move X8, [X0]
	105 Move X1, [X24]
	106 Move W10, [X8+304]
	107 Move W9, [X1+304]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X8, [X8+200]
	110 Add X8, X8, X9
	111 NotImplemented "Instruction LDUR not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X1, X31
	114 Call Component.get_gameObject, X0
	115 Move X1, X0
	116 Move X0, X21
	117 Move W2, W20
	118 Call GrabbableItem.UpdateLayerRecursively, X0, X1, X2
	119 Move X20, X31
	120 Move X1, [X22]
	121 Move X0, X19
	122 Call 0x1B6F8FC
	123 Compare X0, 0
	124 JumpIfEqual {147}
	125 Move X8, [X0]
	126 Move X1, [X22]
	127 Move X19, X0
	128 NotImplemented "Instruction LDRH not yet implemented."
	129 Compare X9, 0
	130 JumpIfEqual {137}
	131 Move X10, [X8+176]
	132 Add X10, X10, 8
	133 NotImplemented "Instruction LDUR not yet implemented."
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Subtract X9, X9, 1
	136 Add X10, X10, 16
	137 Move X0, X19
	138 Move W2, W31
	139 Call 0x1BB5284
	140 NotImplemented "Instruction LDRSW not yet implemented."
	141 Add X8, X8, X9
	142 Add X0, X8, 312
	143 Move X8, [X0]
	144 Move X1, [X0+8]
	145 Move X0, X19
	146 NotImplemented "Instruction BLR not yet implemented."
	147 Compare X20, 0
	148 JumpIfNotEqual {161}
	149 Move X20, [X31+48]
	150 Move X19, [X31+56]
	151 Move X22, [X31+32]
	152 Move X21, [X31+40]
	153 Move X24, [X31+16]
	154 Move X23, [X31+24]
	155 Move X30, [X31+64]
	156 Return 
	157 Call 0x1B6FCDC
	158 Call 0x1B6FA1C
	159 Call 0x1B6FA1C
	160 Call 0x1B6FA1C
	161 Move X0, X20
	162 Call 0x1B6FA14
	163 Move X21, X0
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X0, X21
	166 Call 0x3D1A840
	167 Move X20, [X0]
	168 Call 0x3D1A850
	169 Move X20, X31
	170 Move X21, X0
	171 Move X1, [X22]
	172 Move X0, X19
	173 Call 0x1B6F8FC
	174 Move X19, X0
	175 Compare X0, 0
	176 JumpIfEqual {198}
	177 Move X8, [X19]
	178 Move X1, [X22]
	179 NotImplemented "Instruction LDRH not yet implemented."
	180 Compare X9, 0
	181 JumpIfEqual {188}
	182 Move X10, [X8+176]
	183 Add X10, X10, 8
	184 NotImplemented "Instruction LDUR not yet implemented."
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Subtract X9, X9, 1
	187 Add X10, X10, 16
	188 Move X0, X19
	189 Move W2, W31
	190 Call 0x1BB5284
	191 NotImplemented "Instruction LDRSW not yet implemented."
	192 Add X8, X8, X9
	193 Add X0, X8, 312
	194 Move X8, [X0]
	195 Move X1, [X0+8]
	196 Move X0, X19
	197 NotImplemented "Instruction BLR not yet implemented."
	198 Compare X20, 0
	199 JumpIfNotEqual {202}
	200 Move X0, X21
	201 Call 0x1C8518C
	202 Move X0, X20
	203 Call 0x1B6FA14
	204 Call 0x18F56A8

Method: System.Void UpdateFollowTransform()

Disassembly:
	0x01CA2278 BL 0x3AA7658
	0x01CA227C MOV X0, X19
	0x01CA2280 MOV X1, X31
	0x01CA2284 MOV V8.16B, V0.16B
	0x01CA2288 MOV V9.16B, V1.16B
	0x01CA228C MOV V10.16B, V2.16B
	0x01CA2290 BL 0x3A9B084
	0x01CA2294 CBZ X0, 0x1CA23F8
	0x01CA2298 MOV X1, X31
	0x01CA229C BL 0x3AA5FBC
	0x01CA22A0 ADRP X20, 0x2581000
	0x01CA22A4 LDRB W8, [X20 + 0x43F]
	0x01CA22A8 MOV V11.16B, V0.16B
	0x01CA22AC MOV V12.16B, V1.16B
	0x01CA22B0 MOV V13.16B, V2.16B
	0x01CA22B4 MOV V14.16B, V3.16B
	0x01CA22B8 CBNZ W8, 0x1CA22D0
	0x01CA22BC ADRP X0, 0x22AB000
	0x01CA22C0 LDR X0, [X0 + 0x480]
	0x01CA22C4 BL 0x1B6E7F0
	0x01CA22C8 MOVZ W8, 0x1
	0x01CA22CC STRB W8, [X20 + 0x43F]
	0x01CA22D0 ADRP X8, 0x22AB000
	0x01CA22D4 LDR X8, [X8 + 0x480]
	0x01CA22D8 MOVZ W2, 0x1
	0x01CA22DC MOV X0, X19
	0x01CA22E0 MOV V3.16B, V11.16B
	0x01CA22E4 LDR X8, [X8]
	0x01CA22E8 MOV V4.16B, V12.16B
	0x01CA22EC MOV V5.16B, V13.16B
	0x01CA22F0 MOV V6.16B, V14.16B
	0x01CA22F4 LDR X8, [X8 + 0xB8]
	0x01CA22F8 MOV W3, W31
	0x01CA22FC LDP S0, S1, [X8]
	0x01CA2300 LDR V2, [X8 + 0x8]
	0x01CA2304 STR S0, [X31 + 0x10]
	0x01CA2308 STP S1, S2, [X31 + 0x14]
	0x01CA230C STP S1, S2, [X31 + 0x4]
	0x01CA2310 STR S0, [X31]
	0x01CA2314 MOV V0.16B, V8.16B
	0x01CA2318 MOV V1.16B, V9.16B
	0x01CA231C MOV V2.16B, V10.16B
	0x01CA2320 BL 0x1C9F46C
	0x01CA2324 B 0x1CA2340
	0x01CA2328 MOV X1, X31
	0x01CA232C LDR W8, [X8 + 0x68]
	0x01CA2330 MOVZ W2, 0x1
	0x01CA2334 MOV X0, X19
	0x01CA2338 BFM X1, X8, 0x20, 0x1F
	0x01CA233C BL 0x1C9EE84
	0x01CA2340 MOV X0, X19
	0x01CA2344 BL 0x1C9F768
	0x01CA2348 LDR X0, [X23]
	0x01CA234C LDR X20, [X19 + 0xA8]
	0x01CA2350 LDR W8, [X0 + 0xE0]
	0x01CA2354 CBNZ W8, 0x1CA235C
	0x01CA2358 BL 0x1B6E8F8
	0x01CA235C MOV X0, X20
	0x01CA2360 MOV X1, X31
	0x01CA2364 MOV X2, X31
	0x01CA2368 BL 0x3A9D6EC
	0x01CA236C TBZ X0, 0x0, 0x1CA23B8
	0x01CA2370 LDR X0, [X19 + 0xA8]
	0x01CA2374 CBZ X0, 0x1CA23F8
	0x01CA2378 MOV X1, X31
	0x01CA237C BL 0x3AA6C80
	0x01CA2380 LDR X0, [X19 + 0xA8]
	0x01CA2384 CBZ X0, 0x1CA23F8
	0x01CA2388 MOV X1, X31
	0x01CA238C MOV V8.16B, V0.16B
	0x01CA2390 MOV V9.16B, V1.16B
	0x01CA2394 MOV V10.16B, V2.16B
	0x01CA2398 BL 0x3AA78FC
	0x01CA239C ADD X1, X31, 0x28
	0x01CA23A0 MOV X0, X19
	0x01CA23A4 STP S8, S9, [X31 + 0x28]
	0x01CA23A8 STP S10, S0, [X31 + 0x30]
	0x01CA23AC STP S1, S2, [X31 + 0x38]
	0x01CA23B0 STR S3, [X31 + 0x40]
	0x01CA23B4 BL 0x1C9E2A8
	0x01CA23B8 MOVZ W8, 0x1
	0x01CA23BC STRB W8, [X19 + 0x185]
	0x01CA23C0 LDR X8, [X22 + 0x28]
	0x01CA23C4 LDR X9, [X31 + 0x48]
	0x01CA23C8 CMP X8, X9
	0x01CA23CC B.NE 0x1CA23FC
	0x01CA23D0 LDP X20, X19, [X31 + 0xB0]
	0x01CA23D4 LDP X22, X21, [X31 + 0xA0]
	0x01CA23D8 LDP X24, X23, [X31 + 0x90]
	0x01CA23DC LDR X30, [X31 + 0x88]
	0x01CA23E0 LDP D9, D8, [X31 + 0x78]
	0x01CA23E4 LDP D11, D10, [X31 + 0x68]
	0x01CA23E8 LDP D13, D12, [X31 + 0x58]
	0x01CA23EC LDR V14, [X31 + 0x50]
	0x01CA23F0 ADD X31, X31, 0xC0
	0x01CA23F4 RET
	0x01CA23F8 BL 0x1B6EA1C
	0x01CA23FC BL 0x3D19880
	0x01CA2400 STR X30, [X31 - 0x30]!
	0x01CA2404 STP X22, X21, [X31 + 0x10]
	0x01CA2408 STP X20, X19, [X31 + 0x20]
	0x01CA240C ADRP X21, 0x2581000
	0x01CA2410 ADRP X22, 0x22AB000
	0x01CA2414 LDRB W8, [X21 + 0x423]
	0x01CA2418 LDR X22, [X22 + 0x478]
	0x01CA241C MOV X20, X1
	0x01CA2420 MOV X19, X0
	0x01CA2424 TBNZ X8, 0x0, 0x1CA2454
	0x01CA2428 ADRP X0, 0x22AC000
	0x01CA242C LDR X0, [X0 + 0x4B0]
	0x01CA2430 BL 0x1B6E7F0
	0x01CA2434 ADRP X0, 0x22AB000
	0x01CA2438 LDR X0, [X0 + 0x478]
	0x01CA243C BL 0x1B6E7F0
	0x01CA2440 ADRP X0, 0x22AC000
	0x01CA2444 LDR X0, [X0 + 0x4A8]
	0x01CA2448 BL 0x1B6E7F0
	0x01CA244C MOVZ W8, 0x1
	0x01CA2450 STRB W8, [X21 + 0x423]
	0x01CA2454 LDR X0, [X22]
	0x01CA2458 LDR X21, [X19 + 0x38]
	0x01CA245C LDR W8, [X0 + 0xE0]
	0x01CA2460 CBNZ W8, 0x1CA2468
	0x01CA2464 BL 0x1B6E8F8
	0x01CA2468 MOV X0, X21
	0x01CA246C MOV X1, X31
	0x01CA2470 MOV X2, X31
	0x01CA2474 BL 0x3A9D6EC
	0x01CA2478 TBZ X0, 0x0, 0x1CA2578
	0x01CA247C LDR X8, [X19 + 0x38]
	0x01CA2480 CBZ X8, 0x1CA2588
	0x01CA2484 LDR W8, [X8 + 0x180]
	0x01CA2488 CMP W8, 0x2
	0x01CA248C B.NE 0x1CA2578
	0x01CA2490 LDR X0, [X22]
	0x01CA2494 LDR X21, [X19 + 0x40]
	0x01CA2498 LDR W8, [X0 + 0xE0]
	0x01CA249C CBNZ W8, 0x1CA24A4
	0x01CA24A0 BL 0x1B6E8F8
	0x01CA24A4 MOV X0, X21
	0x01CA24A8 MOV X1, X31
	0x01CA24AC MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2582000
	007 Move X21, 0x22AC000
	008 Move W8, [X20+1053]
	009 Move X21, [X21+1144]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x22AC000
	016 Move X0, [X0+1144]
	017 Call 0x1B6F7F0
	018 Move X0, 0x22AD000
	019 Move X0, [X0+408]
	020 Call 0x1B6F7F0
	021 Move W8, 1
	022 Move [X20+1053], W8
	023 Move X0, [X21]
	024 Move X20, [X19+288]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1B6F8F8
	029 Move X0, X20
	030 Move X1, X31
	031 Move X2, X31
	032 Call Object.op_Equality, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {38}
	037 Move [X19+328], X31
	038 Move X8, [X19+288]
	039 Compare X8, 0
	040 JumpIfEqual {174}
	041 Move X0, [X8+64]
	042 Compare X0, 0
	043 JumpIfEqual {148}
	044 Move W8, [X0+96]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 2
	047 Compare TEMP, 2
	048 JumpIfEqual {148}
	049 Move X1, X31
	050 Call NetworkObject.get_HasInputAuthority, X0
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {148}
	055 Move X8, [X19+288]
	056 Compare X8, 0
	057 JumpIfEqual {174}
	058 Move W8, [X8+128]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Compare W8, 0
	062 JumpIfNotEqual {147}
	063 Move X20, 0x22AD000
	064 Move X20, [X20+408]
	065 Move X0, [X20]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1B6F8F8
	070 Move X22, 0x2582000
	071 Move W8, [X22+1103]
	072 Compare W8, 0
	073 JumpIfNotEqual {79}
	074 Move X0, 0x22AD000
	075 Move X0, [X0+408]
	076 Call 0x1B6F7F0
	077 Move W8, 1
	078 Move [X22+1103], W8
	079 Move X0, [X20]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {85}
	083 Call 0x1B6F8F8
	084 Move X0, [X20]
	085 Move X8, [X0+184]
	086 Move X8, [X8]
	087 Compare X8, 0
	088 JumpIfEqual {174}
	089 Move X8, [X8+112]
	090 Move X20, 0x22AD000
	091 Move X20, [X20+408]
	092 Move X0, [X20]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1B6F8F8
	097 Move X22, 0x2582000
	098 Move W8, [X22+1103]
	099 Compare W8, 0
	100 JumpIfNotEqual {106}
	101 Move X0, 0x22AD000
	102 Move X0, [X0+408]
	103 Call 0x1B6F7F0
	104 Move W8, 1
	105 Move [X22+1103], W8
	106 Move X0, [X20]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {112}
	110 Call 0x1B6F8F8
	111 Move X0, [X20]
	112 Move X8, [X0+184]
	113 Move X0, [X8]
	114 Compare X0, 0
	115 JumpIfEqual {174}
	116 Move X1, X31
	117 Call PlayerController.get_backAttachAnchor, X0
	118 Move [X19+328], X0
	119 Move X20, 0x22AD000
	120 Move X20, [X20+408]
	121 Move X0, [X20]
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfNotEqual {126}
	125 Call 0x1B6F8F8
	126 Move X22, 0x2582000
	127 Move W8, [X22+1103]
	128 Compare W8, 0
	129 JumpIfNotEqual {135}
	130 Move X0, 0x22AD000
	131 Move X0, [X0+408]
	132 Call 0x1B6F7F0
	133 Move W8, 1
	134 Move [X22+1103], W8
	135 Move X0, [X20]
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {141}
	139 Call 0x1B6F8F8
	140 Move X0, [X20]
	141 Move X8, [X0+184]
	142 Move X8, [X8]
	143 Compare X8, 0
	144 JumpIfEqual {174}
	145 Move X8, [X8+120]
	146 Move [X19+328], X8
	147 Move [X19+328], X31
	148 Move X0, [X21]
	149 Move X20, [X19+328]
	150 Move W8, [X0+224]
	151 Compare W8, 0
	152 JumpIfNotEqual {154}
	153 Call 0x1B6F8F8
	154 Move X0, X20
	155 Move X1, X31
	156 Move X2, X31
	157 Call Object.op_Equality, X0, X1
	158 Move TEMP, X0
	159 And TEMP, TEMP, 1
	160 Compare TEMP, 1
	161 JumpIfNotEqual {168}
	162 Move X0, [X19+288]
	163 Compare X0, 0
	164 JumpIfEqual {174}
	165 Move X1, X31
	166 Call Component.get_transform, X0
	167 Move [X19+328], X0
	168 Move X20, [X31+32]
	169 Move X19, [X31+40]
	170 Move X22, [X31+16]
	171 Move X21, [X31+24]
	172 Move X30, [X31+48]
	173 Return 
	174 Call 0x1B6FA1C

Method: System.Void HandleGrabbedChanged()

Disassembly:
	0x01CA0768 LDR X1, [X8 + 0x28]
	0x01CA076C LDP X20, X19, [X31 + 0x10]
	0x01CA0770 LDR X30, [X31], #0x20
	0x01CA0774 BR X2
	0x01CA0778 LDP X20, X19, [X31 + 0x10]
	0x01CA077C LDR X30, [X31], #0x20
	0x01CA0780 RET
	0x01CA0784 BL 0x1B6EA1C
	0x01CA0788 SUB X31, X31, 0x70
	0x01CA078C STR D10, [X31 + 0x30]
	0x01CA0790 STP D9, D8, [X31 + 0x38]
	0x01CA0794 STR X30, [X31 + 0x48]
	0x01CA0798 STP X22, X21, [X31 + 0x50]
	0x01CA079C STP X20, X19, [X31 + 0x60]
	0x01CA07A0 MRS X21, 0xC000
	0x01CA07A4 LDR X8, [X21 + 0x28]
	0x01CA07A8 ADRP X22, 0x2583000
	0x01CA07AC ADRP X20, 0x22AD000
	0x01CA07B0 MOV X19, X0
	0x01CA07B4 STR X8, [X31 + 0x28]
	0x01CA07B8 LDRB W8, [X22 + 0x419]
	0x01CA07BC LDR X20, [X20 + 0x478]
	0x01CA07C0 TBNZ X8, 0x0, 0x1CA07D8
	0x01CA07C4 ADRP X0, 0x22AD000
	0x01CA07C8 LDR X0, [X0 + 0x478]
	0x01CA07CC BL 0x1B6E7F0
	0x01CA07D0 MOVZ W8, 0x1
	0x01CA07D4 STRB W8, [X22 + 0x419]
	0x01CA07D8 LDR X0, [X20]
	0x01CA07DC LDR X20, [X19 + 0x120]
	0x01CA07E0 LDR W8, [X0 + 0xE0]
	0x01CA07E4 CBNZ W8, 0x1CA07EC
	0x01CA07E8 BL 0x1B6E8F8
	0x01CA07EC MOV X0, X20
	0x01CA07F0 MOV X1, X31
	0x01CA07F4 MOV X2, X31
	0x01CA07F8 BL 0x3AA0AF0
	0x01CA07FC TBNZ X0, 0x0, 0x1CA0824
	0x01CA0800 LDR X8, [X19 + 0x120]
	0x01CA0804 CBZ X8, 0x1CA0930
	0x01CA0808 LDR X0, [X8 + 0x40]
	0x01CA080C CBZ X0, 0x1CA0824
	0x01CA0810 LDRB W8, [X0 + 0x60]
	0x01CA0814 TBNZ X8, 0x1, 0x1CA0824
	0x01CA0818 MOV X1, X31
	0x01CA081C BL 0x1D9E6A0
	0x01CA0820 TBNZ X0, 0x0, 0x1CA0904
	0x01CA0824 LDR X20, [X19 + 0xA8]
	0x01CA0828 ADD X8, X31, 0x8
	0x01CA082C MOV X0, X19
	0x01CA0830 BL 0x1C9E23C
	0x01CA0834 CBZ X20, 0x1CA0930
	0x01CA0838 LDP S0, S1, [X31 + 0x8]
	0x01CA083C LDR V2, [X31 + 0x10]
	0x01CA0840 MOV X0, X20
	0x01CA0844 MOV X1, X31
	0x01CA0848 BL 0x3AA6D0C
	0x01CA084C LDR X20, [X19 + 0xA8]
	0x01CA0850 ADD X8, X31, 0x8
	0x01CA0854 MOV X0, X19
	0x01CA0858 BL 0x1C9E23C
	0x01CA085C CBZ X20, 0x1CA0930
	0x01CA0860 LDP S0, S1, [X31 + 0x14]
	0x01CA0864 LDP S2, S3, [X31 + 0x1C]
	0x01CA0868 MOV X0, X20
	0x01CA086C MOV X1, X31
	0x01CA0870 BL 0x3AA7984
	0x01CA0874 ADRP X20, 0x2583000
	0x01CA0878 LDRB W8, [X20 + 0x43F]
	0x01CA087C LDR X19, [X19 + 0xA0]
	0x01CA0880 CBNZ W8, 0x1CA0898
	0x01CA0884 ADRP X0, 0x22AD000
	0x01CA0888 LDR X0, [X0 + 0x480]
	0x01CA088C BL 0x1B6E7F0
	0x01CA0890 MOVZ W8, 0x1
	0x01CA0894 STRB W8, [X20 + 0x43F]
	0x01CA0898 ADRP X8, 0x22AD000
	0x01CA089C LDR X8, [X8 + 0x480]
	0x01CA08A0 ADRP X20, 0x2583000
	0x01CA08A4 LDRB W9, [X20 + 0x454]
	0x01CA08A8 LDR X8, [X8]
	0x01CA08AC LDR X8, [X8 + 0xB8]
	0x01CA08B0 LDP S10, S9, [X8]
	0x01CA08B4 LDR V8, [X8 + 0x8]
	0x01CA08B8 CBNZ W9, 0x1CA08D0
	0x01CA08BC ADRP X0, 0x22AE000
	0x01CA08C0 LDR X0, [X0 + 0x1F8]
	0x01CA08C4 BL 0x1B6E7F0
	0x01CA08C8 MOVZ W8, 0x1
	0x01CA08CC STRB W8, [X20 + 0x454]
	0x01CA08D0 CBZ X19, 0x1CA0930
	0x01CA08D4 ADRP X8, 0x22AE000
	0x01CA08D8 LDR X8, [X8 + 0x1F8]
	0x01CA08DC MOV X0, X19
	0x01CA08E0 MOV V0.16B, V10.16B
	0x01CA08E4 MOV V1.16B, V9.16B
	0x01CA08E8 LDR X8, [X8]
	0x01CA08EC MOV V2.16B, V8.16B
	0x01CA08F0 MOV X1, X31
	0x01CA08F4 LDR X8, [X8 + 0xB8]
	0x01CA08F8 LDP S5, S6, [X8 + 0x8]
	0x01CA08FC LDP S3, S4, [X8]
	0x01CA0900 BL 0x3AA8180
	0x01CA0904 LDR X8, [X21 + 0x28]
	0x01CA0908 LDR X9, [X31 + 0x28]
	0x01CA090C CMP X8, X9
	0x01CA0910 B.NE 0x1CA0934
	0x01CA0914 LDP X20, X19, [X31 + 0x60]
	0x01CA0918 LDP X22, X21, [X31 + 0x50]
	0x01CA091C LDR X30, [X31 + 0x48]
	0x01CA0920 LDP D9, D8, [X31 + 0x38]
	0x01CA0924 LDR V10, [X31 + 0x30]
	0x01CA0928 ADD X31, X31, 0x70
	0x01CA092C RET
	0x01CA0930 BL 0x1B6EA1C
	0x01CA0934 BL 0x3D19880
	0x01CA0938 MOVZ W1, 0x1
	0x01CA093C B 0x1CA0700
	0x01CA0940 STR X30, [X31 - 0x20]!
	0x01CA0944 STP X20, X19, [X31 + 0x10]
	0x01CA0948 LDR X19, [X0 + 0x130]
	0x01CA094C MOV X20, X0
	0x01CA0950 BL 0x1C9A864
	0x01CA0954 TBZ X0, 0x0, 0x1CA0964
	0x01CA0958 MOV X0, X20
	0x01CA095C BL 0x1C9CA04
	0x01CA0960 TBZ X0, 0x0, 0x1CA0980
	0x01CA0964 MOV W1, W31
	0x01CA0968 CBZ X19, 0x1CA0990
	0x01CA096C MOV X0, X19
	0x01CA0970 LDP X20, X19, [X31 + 0x10]
	0x01CA0974 MOV X2, X31
	0x01CA0978 LDR X30, [X31], #0x20
	0x01CA097C B 0x3AF68B0
	0x01CA0980 LDRB W8, [X20 + 0x8A]
	0x01CA0984 CMP W8, 0x0
	0x01CA0988 CSET W1, NE
	0x01CA098C CBNZ X19, 0x1CA096C
	0x01CA0990 BL 0x1B6EA1C
	0x01CA0994 STR X30, [X31 - 0x20]!
	0x01CA0998 STP X20, X19, [X31 + 0x10]
	0x01CA099C LDR X19, [X0 + 0x130]
	0x01CA09A0 MOV X20, X0
	0x01CA09A4 BL 0x1C9A864
	0x01CA09A8 TBZ X0, 0x0, 0x1CA09CC
	0x01CA09AC MOV X0, X20
	0x01CA09B0 BL 0x1C9CA04
	0x01CA09B4 TBZ X0, 0x0, 0x1CA09E8
	0x01CA09B8 LDRB W8, [X20 + 0x88]
	0x01CA09BC CMP W8, 0x0
	0x01CA09C0 CSET W1, NE
	0x01CA09C4 CBNZ X19, 0x1CA09D4
	0x01CA09C8 B 0x1CA09F0
	0x01CA09CC MOV W1, W31
	0x01CA09D0 CBZ X19, 0x1CA09F0
	0x01CA09D4 MOV X0, X19
	0x01CA09D8 LDP X20, X19, [X31 + 0x10]
	0x01CA09DC MOV X2, X31
	0x01CA09E0 LDR X30, [X31], #0x20
	0x01CA09E4 B 0x3AF6B34
	0x01CA09E8 MOVZ W1, 0x1
	0x01CA09EC CBNZ X19, 0x1CA09D4
	0x01CA09F0 BL 0x1B6EA1C
	0x01CA09F4 B 0x1CA09F8
	0x01CA09F8 STR X30, [X31 - 0x30]!
	0x01CA09FC STP X22, X21, [X31 + 0x10]
	0x01CA0A00 STP X20, X19, [X31 + 0x20]
	0x01CA0A04 ADRP X21, 0x2583000
	0x01CA0A08 LDRB W8, [X21 + 0x41A]
	0x01CA0A0C MOV X20, X1
	0x01CA0A10 MOV X19, X0
	0x01CA0A14 TBNZ X8, 0x0, 0x1CA0A38
	0x01CA0A18 ADRP X0, 0x22AE000
	0x01CA0A1C LDR X0, [X0 + 0x1C0]
	0x01CA0A20 BL 0x1B6E7F0
	0x01CA0A24 ADRP X0, 0x22AE000
	0x01CA0A28 LDR X0, [X0 + 0x460]
	0x01CA0A2C BL 0x1B6E7F0
	0x01CA0A30 MOVZ W8, 0x1
	0x01CA0A34 STRB W8, [X21 + 0x41A]
	0x01CA0A38 LDRB W8, [X19 + 0x58]
	0x01CA0A3C CBZ W8, 0x1CA0AF4
	0x01CA0A40 STRB W31, [X19 + 0x58]
	0x01CA0A44 MOV X0, X19
	0x01CA0A48 MOV X1, X20
	0x01CA0A4C BL 0x1C9E1DC
	0x01CA0A50 ADRP X21, 0x2583000
	0x01CA0A54 LDRB W8, [X21 + 0x43F]
	0x01CA0A58 LDR X20, [X19 + 0x130]
	0x01CA0A5C CBNZ W8, 0x1CA0A74
	0x01CA0A60 ADRP X0, 0x22AD000
	0x01CA0A64 LDR X0, [X0 + 0x480]
	0x01CA0A68 BL 0x1B6E7F0
	0x01CA0A6C MOVZ W8, 0x1
	0x01CA0A70 STRB W8, [X21 + 0x43F]
	0x01CA0A74 CBZ X20, 0x1CA0C3C
	0x01CA0A78 ADRP X22, 0x22AD000
	0x01CA0A7C LDR X22, [X22 + 0x480]
	0x01CA0A80 MOV X0, X20
	0x01CA0A84 MOV X1, X31
	0x01CA0A88 LDR X8, [X22]
	0x01CA0A8C LDR X8, [X8 + 0xB8]
	0x01CA0A90 LDP S1, S2, [X8 + 0x4]
	0x01CA0A94 LDR V0, [X8]
	0x01CA0A98 BL 0x3AF650C
	0x01CA0A9C LDRB W8, [X21 + 0x43F]
	0x01CA0AA0 LDR X20, [X19 + 0x130]
	0x01CA0AA4 CBNZ W8, 0x1CA0ABC
	0x01CA0AA8 ADRP X0, 0x22AD000
	0x01CA0AAC LDR X0, [X0 + 0x480]
	0x01CA0AB0 BL 0x1B6E7F0
	0x01CA0AB4 MOVZ W8, 0x1
	0x01CA0AB8 STRB W8, [X21 + 0x43F]
	0x01CA0ABC CBZ X20, 0x1CA0C3C
	0x01CA0AC0 LDR X8, [X22]
	0x01CA0AC4 MOV X0, X20
	0x01CA0AC8 MOV X1, X31
	0x01CA0ACC LDR X8, [X8 + 0xB8]
	0x01CA0AD0 LDP S1, S2, [X8 + 0x4]
	0x01CA0AD4 LDR V0, [X8]
	0x01CA0AD8 BL 0x3AF6644
	0x01CA0ADC MOV X0, X19
	0x01CA0AE0 LDP X20, X19, [X31 + 0x20]
	0x01CA0AE4 LDP X22, X21, [X31 + 0x10]
	0x01CA0AE8 MOVZ W1, 0x1
	0x01CA0AEC LDR X30, [X31], #0x30
	0x01CA0AF0 B 0x1CA0700
	0x01CA0AF4 ADRP X21, 0x22AE000
	0x01CA0AF8 LDR X21, [X21 + 0x1C0]
	0x01CA0AFC LDR X0, [X21]
	0x01CA0B00 LDR W8, [X0 + 0xE0]
	0x01CA0B04 CBNZ W8, 0x1CA0B0C
	0x01CA0B08 BL 0x1B6E8F8
	0x01CA0B0C MOV X0, X19
	0x01CA0B10 MOV X1, X31
	0x01CA0B14 BL 0x1D697C8
	0x01CA0B18 LDR X0, [X19 + 0x38]
	0x01CA0B1C CBZ X0, 0x1CA0C3C
	0x01CA0B20 MOV X1, X31
	0x01CA0B24 BL 0x1D87040
	0x01CA0B28 CMP W0, 0x4
	0x01CA0B2C B.NE 0x1CA0B40
	0x01CA0B30 LDP X20, X19, [X31 + 0x20]
	0x01CA0B34 LDP X22, X21, [X31 + 0x10]
	0x01CA0B38 LDR X30, [X31], #0x30
	0x01CA0B3C RET
	0x01CA0B40 LDR X0, [X19 + 0x40]
	0x01CA0B44 CBZ X0, 0x1CA0C3C
	0x01CA0B48 MOV X1, X31
	0x01CA0B4C BL 0x1D9F538
	0x01CA0B50 ANDS W31, W0, 0x7
	0x01CA0B54 B.EQ 0x1CA0BB8
	0x01CA0B58 TBNZ X0, 0x0, 0x1CA0A44
	0x01CA0B5C LDR X8, [X19 + 0x38]
	0x01CA0B60 CBZ X8, 0x1CA0C3C
	0x01CA0B64 LDR X0, [X8 + 0x50]
	0x01CA0B68 CBZ X0, 0x1CA0C3C
	0x01CA0B6C MOV X1, X31
	0x01CA0B70 BL 0x1DBEFE4
	0x01CA0B74 TBZ X0, 0x0, 0x1CA0B30
	0x01CA0B78 LDR X8, [X19 + 0x38]
	0x01CA0B7C CBZ X8, 0x1CA0C3C
	0x01CA0B80 LDR X0, [X8 + 0x50]
	0x01CA0B84 MOVZ W1, 0x10
	0x01CA0B88 MOV X2, X31
	0x01CA0B8C BL 0x1DD601C
	0x01CA0B90 MOV X21, X0
	0x01CA0B94 MOVZ W0, 0x1
	0x01CA0B98 MOV X1, X31
	0x01CA0B9C BL 0x1D29EBC
	0x01CA0BA0 LDR X8, [X19 + 0x40]
	0x01CA0BA4 CBZ X8, 0x1CA0C3C
	0x01CA0BA8 LDR X8, [X8 + 0x20]
	0x01CA0BAC CBZ X8, 0x1CA0BF4
	0x01CA0BB0 LDR W0, [X8]
	0x01CA0BB4 B 0x1CA0BF8
	0x01CA0BB8 LDR X0, [X21]
	0x01CA0BBC LDR X19, [X19 + 0x40]
	0x01CA0BC0 LDR W8, [X0 + 0xE0]
	0x01CA0BC4 CBNZ W8, 0x1CA0BCC
	0x01CA0BC8 BL 0x1B6E8F8
	0x01CA0BCC ADRP X8, 0x22AE000
	0x01CA0BD0 LDR X8, [X8 + 0x460]
	0x01CA0BD4 MOV X1, X19
	0x01CA0BD8 LDP X20, X19, [X31 + 0x20]
	0x01CA0BDC LDP X22, X21, [X31 + 0x10]
	0x01CA0BE0 LDR X0, [X8]
	0x01CA0BE4 MOVZ W2, 0x7
	0x01CA0BE8 MOV X3, X31
	0x01CA0BEC LDR X30, [X31], #0x30
	0x01CA0BF0 B 0x1D69640
	0x01CA0BF4 MOV X0, X31
	0x01CA0BF8 LDR W1, [X19 + 0x68]
	0x01CA0BFC MOVZ W2, 0x4
	0x01CA0C00 MOV X3, X31
	0x01CA0C04 BL 0x1DA8258
	0x01CA0C08 STUR X0, [X21 + 0x1C]
	0x01CA0C0C STUR X20, [X21 + 0x24]
	0x01CA0C10 CBZ X21, 0x1CA0C3C
	0x01CA0C14 MOVZ W8, 0x80
	0x01CA0C18 STR W8, [X21 + 0xC]
	0x01CA0C1C LDR X0, [X19 + 0x38]
	0x01CA0C20 CBZ X0, 0x1CA0C3C
	0x01CA0C24 MOV X1, X21
	0x01CA0C28 LDP X20, X19, [X31 + 0x20]
	0x01CA0C2C LDP X22, X21, [X31 + 0x10]
	0x01CA0C30 MOV X2, X31
	0x01CA0C34 LDR X30, [X31], #0x30
	0x01CA0C38 B 0x1D8A710
	0x01CA0C3C BL 0x1B6EA1C
	0x01CA0C40 B 0x1CA0C44
	0x01CA0C44 STR D10, [X31 - 0x40]!
	0x01CA0C48 STP D9, D8, [X31 + 0x8]
	0x01CA0C4C STR X30, [X31 + 0x18]
	0x01CA0C50 STP X22, X21, [X31 + 0x20]
	0x01CA0C54 STP X20, X19, [X31 + 0x30]
	0x01CA0C58 ADRP X20, 0x2583000
	0x01CA0C5C LDRB W8, [X20 + 0x41B]
	0x01CA0C60 MOV V8.16B, V2.16B
	0x01CA0C64 MOV V9.16B, V1.16B
	0x01CA0C68 MOV V10.16B, V0.16B
	0x01CA0C6C MOV X19, X0
	0x01CA0C70 TBNZ X8, 0x0, 0x1CA0C94
	0x01CA0C74 ADRP X0, 0x22AE000
	0x01CA0C78 LDR X0, [X0 + 0x1C0]
	0x01CA0C7C BL 0x1B6E7F0
	0x01CA0C80 ADRP X0, 0x22AE000
	0x01CA0C84 LDR X0, [X0 + 0x468]
	0x01CA0C88 BL 0x1B6E7F0
	0x01CA0C8C MOVZ W8, 0x1
	0x01CA0C90 STRB W8, [X20 + 0x41B]
	0x01CA0C94 LDRB W8, [X19 + 0x58]
	0x01CA0C98 CBZ W8, 0x1CA0DA8
	0x01CA0C9C STRB W31, [X19 + 0x58]
	0x01CA0CA0 MOV X0, X31
	0x01CA0CA4 BL 0x1D6815C
	0x01CA0CA8 MOV X1, X0
	0x01CA0CAC MOV X0, X19
	0x01CA0CB0 BL 0x1C9E1DC
	0x01CA0CB4 MOV X0, X19
	0x01CA0CB8 MOV X1, X31
	0x01CA0CBC BL 0x3A9B084
	0x01CA0CC0 CBZ X0, 0x1CA0F0C
	0x01CA0CC4 MOV V0.16B, V10.16B
	0x01CA0CC8 MOV V1.16B, V9.16B
	0x01CA0CCC MOV V2.16B, V8.16B
	0x01CA0CD0 MOV X1, X31
	0x01CA0CD4 BL 0x3AA76F8
	0x01CA0CD8 MOVZ W1, 0x1
	0x01CA0CDC MOV X0, X19
	0x01CA0CE0 BL 0x1CA0700
	0x01CA0CE4 LDR X0, [X19 + 0x130]
	0x01CA0CE8 CBZ X0, 0x1CA0F0C
	0x01CA0CEC MOV V0.16B, V10.16B
	0x01CA0CF0 MOV V1.16B, V9.16B
	0x01CA0CF4 MOV V2.16B, V8.16B
	0x01CA0CF8 MOV X1, X31
	0x01CA0CFC BL 0x3AF6C18
	0x01CA0D00 ADRP X21, 0x2583000
	0x01CA0D04 LDRB W8, [X21 + 0x43F]
	0x01CA0D08 LDR X20, [X19 + 0x130]
	0x01CA0D0C CBNZ W8, 0x1CA0D24
	0x01CA0D10 ADRP X0, 0x22AD000
	0x01CA0D14 LDR X0, [X0 + 0x480]
	0x01CA0D18 BL 0x1B6E7F0
	0x01CA0D1C MOVZ W8, 0x1
	0x01CA0D20 STRB W8, [X21 + 0x43F]
	0x01CA0D24 CBZ X20, 0x1CA0F0C
	0x01CA0D28 ADRP X22, 0x22AD000
	0x01CA0D2C LDR X22, [X22 + 0x480]
	0x01CA0D30 MOV X0, X20
	0x01CA0D34 MOV X1, X31
	0x01CA0D38 LDR X8, [X22]
	0x01CA0D3C LDR X8, [X8 + 0xB8]
	0x01CA0D40 LDP S1, S2, [X8 + 0x4]
	0x01CA0D44 LDR V0, [X8]
	0x01CA0D48 BL 0x3AF650C
	0x01CA0D4C LDRB W8, [X21 + 0x43F]
	0x01CA0D50 LDR X20, [X19 + 0x130]
	0x01CA0D54 CBNZ W8, 0x1CA0D6C
	0x01CA0D58 ADRP X0, 0x22AD000
	0x01CA0D5C LDR X0, [X0 + 0x480]
	0x01CA0D60 BL 0x1B6E7F0
	0x01CA0D64 MOVZ W8, 0x1
	0x01CA0D68 STRB W8, [X21 + 0x43F]
	0x01CA0D6C CBZ X20, 0x1CA0F0C
	0x01CA0D70 LDR X8, [X22]
	0x01CA0D74 MOV X0, X20
	0x01CA0D78 MOV X1, X31
	0x01CA0D7C LDR X8, [X8 + 0xB8]
	0x01CA0D80 LDP S1, S2, [X8 + 0x4]
	0x01CA0D84 LDR V0, [X8]
	0x01CA0D88 BL 0x3AF6644
	0x01CA0D8C MOV X0, X19
	0x01CA0D90 LDP X20, X19, [X31 + 0x30]
	0x01CA0D94 LDP X22, X21, [X31 + 0x20]
	0x01CA0D98 LDR X30, [X31 + 0x18]
	0x01CA0D9C LDP D9, D8, [X31 + 0x8]
	0x01CA0DA0 LDR V10, [X31], #0x40
	0x01CA0DA4 B 0x1C9F71C
	0x01CA0DA8 ADRP X20, 0x22AE000
	0x01CA0DAC LDR X20, [X20 + 0x1C0]
	0x01CA0DB0 LDR X0, [X20]
	0x01CA0DB4 LDR W8, [X0 + 0xE0]
	0x01CA0DB8 CBNZ W8, 0x1CA0DC0
	0x01CA0DBC BL 0x1B6E8F8
	0x01CA0DC0 MOV X0, X19
	0x01CA0DC4 MOV X1, X31
	0x01CA0DC8 BL 0x1D697C8
	0x01CA0DCC LDR X0, [X19 + 0x38]
	0x01CA0DD0 CBZ X0, 0x1CA0F0C
	0x01CA0DD4 MOV X1, X31
	0x01CA0DD8 BL 0x1D87040
	0x01CA0DDC CMP W0, 0x4
	0x01CA0DE0 B.NE 0x1CA0DFC
	0x01CA0DE4 LDP X20, X19, [X31 + 0x30]
	0x01CA0DE8 LDP X22, X21, [X31 + 0x20]
	0x01CA0DEC LDR X30, [X31 + 0x18]
	0x01CA0DF0 LDP D9, D8, [X31 + 0x8]
	0x01CA0DF4 LDR V10, [X31], #0x40
	0x01CA0DF8 RET
	0x01CA0DFC LDR X0, [X19 + 0x40]
	0x01CA0E00 CBZ X0, 0x1CA0F0C
	0x01CA0E04 MOV X1, X31
	0x01CA0E08 BL 0x1D9F538
	0x01CA0E0C ANDS W31, W0, 0x7
	0x01CA0E10 B.EQ 0x1CA0E74
	0x01CA0E14 TBNZ X0, 0x0, 0x1CA0CA0
	0x01CA0E18 LDR X8, [X19 + 0x38]
	0x01CA0E1C CBZ X8, 0x1CA0F0C
	0x01CA0E20 LDR X0, [X8 + 0x50]
	0x01CA0E24 CBZ X0, 0x1CA0F0C
	0x01CA0E28 MOV X1, X31
	0x01CA0E2C BL 0x1DBEFE4
	0x01CA0E30 TBZ X0, 0x0, 0x1CA0DE4
	0x01CA0E34 LDR X8, [X19 + 0x38]
	0x01CA0E38 CBZ X8, 0x1CA0F0C
	0x01CA0E3C LDR X0, [X8 + 0x50]
	0x01CA0E40 MOVZ W1, 0x14
	0x01CA0E44 MOV X2, X31
	0x01CA0E48 BL 0x1DD601C
	0x01CA0E4C MOV X20, X0
	0x01CA0E50 MOVZ W0, 0x1
	0x01CA0E54 MOV X1, X31
	0x01CA0E58 BL 0x1D29EBC
	0x01CA0E5C LDR X8, [X19 + 0x40]
	0x01CA0E60 CBZ X8, 0x1CA0F0C
	0x01CA0E64 LDR X8, [X8 + 0x20]
	0x01CA0E68 CBZ X8, 0x1CA0EB8
	0x01CA0E6C LDR W0, [X8]
	0x01CA0E70 B 0x1CA0EBC
	0x01CA0E74 LDR X0, [X20]
	0x01CA0E78 LDR X19, [X19 + 0x40]
	0x01CA0E7C LDR W8, [X0 + 0xE0]
	0x01CA0E80 CBNZ W8, 0x1CA0E88
	0x01CA0E84 BL 0x1B6E8F8
	0x01CA0E88 ADRP X8, 0x22AE000
	0x01CA0E8C LDR X8, [X8 + 0x468]
	0x01CA0E90 MOV X1, X19
	0x01CA0E94 LDP X20, X19, [X31 + 0x30]
	0x01CA0E98 LDP X22, X21, [X31 + 0x20]
	0x01CA0E9C LDR X0, [X8]
	0x01CA0EA0 LDR X30, [X31 + 0x18]
	0x01CA0EA4 LDP D9, D8, [X31 + 0x8]
	0x01CA0EA8 MOVZ W2, 0x7
	0x01CA0EAC MOV X3, X31
	0x01CA0EB0 LDR V10, [X31], #0x40
	0x01CA0EB4 B 0x1D69640
	0x01CA0EB8 MOV X0, X31
	0x01CA0EBC LDR W1, [X19 + 0x68]
	0x01CA0EC0 MOVZ W2, 0x5
	0x01CA0EC4 MOV X3, X31
	0x01CA0EC8 BL 0x1DA8258
	0x01CA0ECC STUR X0, [X20 + 0x1C]
	0x01CA0ED0 STP S10, S9, [X20 + 0x24]
	0x01CA0ED4 STR S8, [X20 + 0x2C]
	0x01CA0ED8 CBZ X20, 0x1CA0F0C
	0x01CA0EDC MOVZ W8, 0xA0
	0x01CA0EE0 STR W8, [X20 + 0xC]
	0x01CA0EE4 LDR X0, [X19 + 0x38]
	0x01CA0EE8 CBZ X0, 0x1CA0F0C
	0x01CA0EEC MOV X1, X20
	0x01CA0EF0 LDP X20, X19, [X31 + 0x30]
	0x01CA0EF4 LDP X22, X21, [X31 + 0x20]
	0x01CA0EF8 LDR X30, [X31 + 0x18]
	0x01CA0EFC LDP D9, D8, [X31 + 0x8]
	0x01CA0F00 MOV X2, X31
	0x01CA0F04 LDR V10, [X31], #0x40
	0x01CA0F08 B 0x1D8A710
	0x01CA0F0C BL 0x1B6EA1C
	0x01CA0F10 STR X30, [X31 - 0x20]!
	0x01CA0F14 STP X20, X19, [X31 + 0x10]
	0x01CA0F18 MOV X19, X0
	0x01CA0F1C BL 0x1C9CA04
	0x01CA0F20 ANDS W31, W0, 0x1
	0x01CA0F24 MOVZ W8, 0x17C
	0x01CA0F28 MOVZ W9, 0x180
	0x01CA0F2C CSEL X8, X9, X8, NE
	0x01CA0F30 LDR W20, [X19, X8, LSL]
	0x01CA0F34 MOV X0, X19
	0x01CA0F38 MOV X1, X31
	0x01CA0F3C BL 0x3A9B0C0
	0x01CA0F40 MOV X1, X0
	0x01CA0F44 MOV X0, X19
	0x01CA0F48 MOV W2, W20
	0x01CA0F4C LDP X20, X19, [X31 + 0x10]
	0x01CA0F50 LDR X30, [X31], #0x20
	0x01CA0F54 B 0x1CA0F58
	0x01CA0F58 STR X30, [X31 - 0x40]!
	0x01CA0F5C STP X24, X23, [X31 + 0x10]
	0x01CA0F60 STP X22, X21, [X31 + 0x20]
	0x01CA0F64 STP X20, X19, [X31 + 0x30]
	0x01CA0F68 ADRP X22, 0x2583000
	0x01CA0F6C LDRB W8, [X22 + 0x41C]
	0x01CA0F70 MOV W20, W2
	0x01CA0F74 MOV X19, X1
	0x01CA0F78 MOV X21, X0
	0x01CA0F7C TBNZ X8, 0x0, 0x1CA0FAC
	0x01CA0F80 ADRP X0, 0x22AE000
	0x01CA0F84 LDR X0, [X0 + 0x470]
	0x01CA0F88 BL 0x1B6E7F0
	0x01CA0F8C ADRP X0, 0x22AE000
	0x01CA0F90 LDR X0, [X0 + 0x478]
	0x01CA0F94 BL 0x1B6E7F0
	0x01CA0F98 ADRP X0, 0x22AE000
	0x01CA0F9C LDR X0, [X0 + 0x480]
	0x01CA0FA0 BL 0x1B6E7F0
	0x01CA0FA4 MOVZ W8, 0x1
	0x01CA0FA8 STRB W8, [X22 + 0x41C]
	0x01CA0FAC CBZ X19, 0x1CA11A0
	0x01CA0FB0 MOV X0, X19
	0x01CA0FB4 MOV X1, X31
	0x01CA0FB8 BL 0x3A9D928
	0x01CA0FBC CMP W0, 0x1A
	0x01CA0FC0 B.EQ 0x1CA0FD4
	0x01CA0FC4 MOV X0, X19
	0x01CA0FC8 MOV W1, W20
	0x01CA0FCC MOV X2, X31
	0x01CA0FD0 BL 0x3A9D964
	0x01CA0FD4 MOV X0, X19
	0x01CA0FD8 MOV X1, X31
	0x01CA0FDC BL 0x3A9D8EC
	0x01CA0FE0 CBZ X0, 0x1CA11A0
	0x01CA0FE4 ADRP X22, 0x22AE000
	0x01CA0FE8 LDR X22, [X22 + 0x470]
	0x01CA0FEC MOV X1, X31
	0x01CA0FF0 BL 0x3AA90D8
	0x01CA0FF4 MOV X19, X0
	0x01CA0FF8 CBZ X0, 0x1CA11A4
	0x01CA0FFC ADRP X23, 0x22AE000
	0x01CA1000 ADRP X24, 0x22AD000
	0x01CA1004 LDR X23, [X23 + 0x478]
	0x01CA1008 B 0x3D19158
	0x01CA100C LDR X8, [X19]
	0x01CA1010 LDR X1, [X23]
	0x01CA1014 LDRH W9, [X8 + 0x12E]
	0x01CA1018 CBZ X9, 0x1CA103C
	0x01CA101C LDR X10, [X8 + 0xB0]
	0x01CA1020 ADD X10, X10, 0x8
	0x01CA1024 LDUR X11, [X10 - 0x8]
	0x01CA1028 CMP X11, X1
	0x01CA102C B.EQ 0x1CA104C
	0x01CA1030 SUBS X9, X9, 0x1
	0x01CA1034 ADD X10, X10, 0x10
	0x01CA1038 B.NE 0x1CA1024
	0x01CA103C MOV X0, X19
	0x01CA1040 MOV W2, W31
	0x01CA1044 BL 0x1BB4284
	0x01CA1048 B 0x1CA1058
	0x01CA104C LDRSW X9, [X10]
	0x01CA1050 ADD X8, X8, X9, 0x4, LSL
	0x01CA1054 ADD X0, X8, 0x138
	0x01CA1058 LDP X8, X1, [X0]
	0x01CA105C MOV X0, X19
	0x01CA1060 BLR X8
	0x01CA1064 TBZ X0, 0x0, 0x1CA1110
	0x01CA1068 LDR X8, [X19]
	0x01CA106C LDR X1, [X23]
	0x01CA1070 LDRH W9, [X8 + 0x12E]
	0x01CA1074 CBZ X9, 0x1CA1098
	0x01CA1078 LDR X10, [X8 + 0xB0]
	0x01CA107C ADD X10, X10, 0x8
	0x01CA1080 LDUR X11, [X10 - 0x8]
	0x01CA1084 CMP X11, X1
	0x01CA1088 B.EQ 0x1CA10A8
	0x01CA108C SUBS X9, X9, 0x1
	0x01CA1090 ADD X10, X10, 0x10
	0x01CA1094 B.NE 0x1CA1080
	0x01CA1098 MOVZ W2, 0x1
	0x01CA109C MOV X0, X19
	0x01CA10A0 BL 0x1BB4284
	0x01CA10A4 B 0x1CA10B8
	0x01CA10A8 LDR W9, [X10]
	0x01CA10AC ADD W9, W9, 0x1
	0x01CA10B0 ADD X8, X8, W9, 0x4, SXTW
	0x01CA10B4 ADD X0, X8, 0x138
	0x01CA10B8 LDP X8, X1, [X0]
	0x01CA10BC MOV X0, X19
	0x01CA10C0 BLR X8
	0x01CA10C4 CBZ X0, 0x1CA119C
	0x01CA10C8 LDR X8, [X0]
	0x01CA10CC LDR X1, [X24]
	0x01CA10D0 LDRB W10, [X8 + 0x130]
	0x01CA10D4 LDRB W9, [X1 + 0x130]
	0x01CA10D8 CMP W10, W9
	0x01CA10DC B.CC 0x1CA1198
	0x01CA10E0 LDR X8, [X8 + 0xC8]
	0x01CA10E4 ADD X8, X8, X9, 0x3, LSL
	0x01CA10E8 LDUR X8, [X8 - 0x8]
	0x01CA10EC CMP X8, X1
	0x01CA10F0 B.NE 0x1CA1198
	0x01CA10F4 MOV X1, X31
	0x01CA10F8 BL 0x3A9B0C0
	0x01CA10FC MOV X1, X0
	0x01CA1100 MOV X0, X21
	0x01CA1104 MOV W2, W20
	0x01CA1108 BL 0x1CA0F58
	0x01CA110C B 0x1CA100C
	0x01CA1110 MOV X20, X31
	0x01CA1114 LDR X1, [X22]
	0x01CA1118 MOV X0, X19
	0x01CA111C BL 0x1B6E8FC
	0x01CA1120 CBZ X0, 0x1CA1180
	0x01CA1124 LDR X8, [X0]
	0x01CA1128 LDR X1, [X22]
	0x01CA112C MOV X19, X0
	0x01CA1130 LDRH W9, [X8 + 0x12E]
	0x01CA1134 CBZ X9, 0x1CA1158
	0x01CA1138 LDR X10, [X8 + 0xB0]
	0x01CA113C ADD X10, X10, 0x8
	0x01CA1140 LDUR X11, [X10 - 0x8]
	0x01CA1144 CMP X11, X1
	0x01CA1148 B.EQ 0x1CA1168
	0x01CA114C SUBS X9, X9, 0x1
	0x01CA1150 ADD X10, X10, 0x10
	0x01CA1154 B.NE 0x1CA1140
	0x01CA1158 MOV X0, X19
	0x01CA115C MOV W2, W31
	0x01CA1160 BL 0x1BB4284
	0x01CA1164 B 0x1CA1174
	0x01CA1168 LDRSW X9, [X10]
	0x01CA116C ADD X8, X8, X9, 0x4, LSL
	0x01CA1170 ADD X0, X8, 0x138
	0x01CA1174 LDP X8, X1, [X0]
	0x01CA1178 MOV X0, X19
	0x01CA117C BLR X8
	0x01CA1180 CBNZ X20, 0x1CA11A8
	0x01CA1184 LDP X20, X19, [X31 + 0x30]
	0x01CA1188 LDP X22, X21, [X31 + 0x20]
	0x01CA118C LDP X24, X23, [X31 + 0x10]
	0x01CA1190 LDR X30, [X31], #0x40
	0x01CA1194 RET
	0x01CA1198 BL 0x1B6ECDC
	0x01CA119C BL 0x1B6EA1C
	0x01CA11A0 BL 0x1B6EA1C
	0x01CA11A4 BL 0x1B6EA1C
	0x01CA11A8 MOV X0, X20
	0x01CA11AC BL 0x1B6EA14
	0x01CA11B0 B 0x1CA11C8
	0x01CA11B4 B 0x1CA11C8
	0x01CA11B8 B 0x1CA11C8
	0x01CA11BC B 0x1CA11C8
	0x01CA11C0 B 0x1CA11C8
	0x01CA11C4 B 0x1CA11C8
	0x01CA11C8 MOV X21, X0
	0x01CA11CC CMP W1, 0x1
	0x01CA11D0 B.NE 0x1CA11E8
	0x01CA11D4 MOV X0, X21
	0x01CA11D8 BL 0x3D19840
	0x01CA11DC LDR X20, [X0]
	0x01CA11E0 BL 0x3D19850
	0x01CA11E4 B 0x1CA1114
	0x01CA11E8 MOV X20, X31
	0x01CA11EC B 0x1CA11F4
	0x01CA11F0 MOV X21, X0
	0x01CA11F4 LDR X1, [X22]
	0x01CA11F8 MOV X0, X19
	0x01CA11FC BL 0x1B6E8FC
	0x01CA1200 MOV X19, X0
	0x01CA1204 CBZ X0, 0x1CA1260
	0x01CA1208 LDR X8, [X19]
	0x01CA120C LDR X1, [X22]
	0x01CA1210 LDRH W9, [X8 + 0x12E]
	0x01CA1214 CBZ X9, 0x1CA1238
	0x01CA1218 LDR X10, [X8 + 0xB0]
	0x01CA121C ADD X10, X10, 0x8
	0x01CA1220 LDUR X11, [X10 - 0x8]
	0x01CA1224 CMP X11, X1
	0x01CA1228 B.EQ 0x1CA1248
	0x01CA122C SUBS X9, X9, 0x1
	0x01CA1230 ADD X10, X10, 0x10
	0x01CA1234 B.NE 0x1CA1220
	0x01CA1238 MOV X0, X19
	0x01CA123C MOV W2, W31
	0x01CA1240 BL 0x1BB4284
	0x01CA1244 B 0x1CA1254
	0x01CA1248 LDRSW X9, [X10]
	0x01CA124C ADD X8, X8, X9, 0x4, LSL
	0x01CA1250 ADD X0, X8, 0x138
	0x01CA1254 LDP X8, X1, [X0]
	0x01CA1258 MOV X0, X19
	0x01CA125C BLR X8
	0x01CA1260 CBNZ X20, 0x1CA126C
	0x01CA1264 MOV X0, X21
	0x01CA1268 BL 0x1C8418C
	0x01CA126C MOV X0, X20
	0x01CA1270 BL 0x1B6EA14
	0x01CA1274 BL 0x18F46A8
	0x01CA1278 STR X30, [X31 - 0x30]!
	0x01CA127C STP X22, X21, [X31 + 0x10]
	0x01CA1280 STP X20, X19, [X31 + 0x20]
	0x01CA1284 ADRP X20, 0x2582000
	0x01CA1288 ADRP X21, 0x22AC000
	0x01CA128C LDRB W8, [X20 + 0x41D]
	0x01CA1290 LDR X21, [X21 + 0x478]
	0x01CA1294 MOV X19, X0
	0x01CA1298 TBNZ X8, 0x0, 0x1CA12BC
	0x01CA129C ADRP X0, 0x22AC000
	0x01CA12A0 LDR X0, [X0 + 0x478]
	0x01CA12A4 BL 0x1B6E7F0
	0x01CA12A8 ADRP X0, 0x22AD000
	0x01CA12AC LDR X0, [X0 + 0x198]
	0x01CA12B0 BL 0x1B6E7F0
	0x01CA12B4 MOVZ W8, 0x1
	0x01CA12B8 STRB W8, [X20 + 0x41D]
	0x01CA12BC LDR X0, [X21]
	0x01CA12C0 LDR X20, [X19 + 0x120]
	0x01CA12C4 LDR W8, [X0 + 0xE0]
	0x01CA12C8 CBNZ W8, 0x1CA12D0
	0x01CA12CC BL 0x1B6E8F8
	0x01CA12D0 MOV X0, X20
	0x01CA12D4 MOV X1, X31
	0x01CA12D8 MOV X2, X31
	0x01CA12DC BL 0x3AA0AF0
	0x01CA12E0 TBZ X0, 0x0, 0x1CA12EC
	0x01CA12E4 STR X31, [X19 + 0x148]
	0x01CA12E8 B 0x1CA149C
	0x01CA12EC LDR X8, [X19 + 0x120]
	0x01CA12F0 CBZ X8, 0x1CA14AC
	0x01CA12F4 LDR X0, [X8 + 0x40]
	0x01CA12F8 CBZ X0, 0x1CA1460
	0x01CA12FC LDRB W8, [X0 + 0x60]
	0x01CA1300 TBNZ X8, 0x1, 0x1CA1460
	0x01CA1304 MOV X1, X31
	0x01CA1308 BL 0x1D9E6A0
	0x01CA130C TBZ X0, 0x0, 0x1CA1460
	0x01CA1310 LDR X8, [X19 + 0x120]
	0x01CA1314 CBZ X8, 0x1CA14AC
	0x01CA1318 LDR W8, [X8 + 0x80]
	0x01CA131C CMP W8, 0x2
	0x01CA1320 B.EQ 0x1CA1390
	0x01CA1324 CMP W8, 0x1
	0x01CA1328 B.EQ 0x1CA13F8
	0x01CA132C CBNZ W8, 0x1CA145C
	0x01CA1330 ADRP X20, 0x22AD000
	0x01CA1334 LDR X20, [X20 + 0x198]
	0x01CA1338 LDR X0, [X20]
	0x01CA133C LDR W8, [X0 + 0xE0]
	0x01CA1340 CBNZ W8, 0x1CA1348
	0x01CA1344 BL 0x1B6E8F8
	0x01CA1348 ADRP X22, 0x2582000
	0x01CA134C LDRB W8, [X22 + 0x44F]
	0x01CA1350 CBNZ W8, 0x1CA1368
	0x01CA1354 ADRP X0, 0x22AD000
	0x01CA1358 LDR X0, [X0 + 0x198]
	0x01CA135C BL 0x1B6E7F0
	0x01CA1360 MOVZ W8, 0x1
	0x01CA1364 STRB W8, [X22 + 0x44F]
	0x01CA1368 LDR X0, [X20]
	0x01CA136C LDR W8, [X0 + 0xE0]
	0x01CA1370 CBNZ W8, 0x1CA137C
	0x01CA1374 BL 0x1B6E8F8
	0x01CA1378 LDR X0, [X20]
	0x01CA137C LDR X8, [X0 + 0xB8]
	0x01CA1380 LDR X8, [X8]
	0x01CA1384 CBZ X8, 0x1CA14AC
	0x01CA1388 LDR X8, [X8 + 0x70]
	0x01CA138C B 0x1CA1454
	0x01CA1390 ADRP X20, 0x22AD000
	0x01CA1394 LDR X20, [X20 + 0x198]
	0x01CA1398 LDR X0, [X20]
	0x01CA139C LDR W8, [X0 + 0xE0]
	0x01CA13A0 CBNZ W8, 0x1CA13A8
	0x01CA13A4 BL 0x1B6E8F8
	0x01CA13A8 ADRP X22, 0x2582000
	0x01CA13AC LDRB W8, [X22 + 0x44F]
	0x01CA13B0 CBNZ W8, 0x1CA13C8
	0x01CA13B4 ADRP X0, 0x22AD000
	0x01CA13B8 LDR X0, [X0 + 0x198]
	0x01CA13BC BL 0x1B6E7F0
	0x01CA13C0 MOVZ W8, 0x1
	0x01CA13C4 STRB W8, [X22 + 0x44F]
	0x01CA13C8 LDR X0, [X20]
	0x01CA13CC LDR W8, [X0 + 0xE0]
	0x01CA13D0 CBNZ W8, 0x1CA13DC
	0x01CA13D4 BL 0x1B6E8F8
	0x01CA13D8 LDR X0, [X20]
	0x01CA13DC LDR X8, [X0 + 0xB8]
	0x01CA13E0 LDR X0, [X8]
	0x01CA13E4 CBZ X0, 0x1CA14AC
	0x01CA13E8 MOV X1, X31
	0x01CA13EC BL 0x1CC0098
	0x01CA13F0 STR X0, [X19 + 0x148]
	0x01CA13F4 B 0x1CA1460
	0x01CA13F8 ADRP X20, 0x22AD000
	0x01CA13FC LDR X20, [X20 + 0x198]
	0x01CA1400 LDR X0, [X20]
	0x01CA1404 LDR W8, [X0 + 0xE0]
	0x01CA1408 CBNZ W8, 0x1CA1410
	0x01CA140C BL 0x1B6E8F8
	0x01CA1410 ADRP X22, 0x2582000
	0x01CA1414 LDRB W8, [X22 + 0x44F]
	0x01CA1418 CBNZ W8, 0x1CA1430
	0x01CA141C ADRP X0, 0x22AD000
	0x01CA1420 LDR X0, [X0 + 0x198]
	0x01CA1424 BL 0x1B6E7F0
	0x01CA1428 MOVZ W8, 0x1
	0x01CA142C STRB W8, [X22 + 0x44F]
	0x01CA1430 LDR X0, [X20]
	0x01CA1434 LDR W8, [X0 + 0xE0]
	0x01CA1438 CBNZ W8, 0x1CA1444
	0x01CA143C BL 0x1B6E8F8
	0x01CA1440 LDR X0, [X20]
	0x01CA1444 LDR X8, [X0 + 0xB8]
	0x01CA1448 LDR X8, [X8]
	0x01CA144C CBZ X8, 0x1CA14AC
	0x01CA1450 LDR X8, [X8 + 0x78]
	0x01CA1454 STR X8, [X19 + 0x148]
	0x01CA1458 B 0x1CA1460
	0x01CA145C STR X31, [X19 + 0x148]
	0x01CA1460 LDR X0, [X21]
	0x01CA1464 LDR X20, [X19 + 0x148]
	0x01CA1468 LDR W8, [X0 + 0xE0]
	0x01CA146C CBNZ W8, 0x1CA1474
	0x01CA1470 BL 0x1B6E8F8
	0x01CA1474 MOV X0, X20
	0x01CA1478 MOV X1, X31
	0x01CA147C MOV X2, X31
	0x01CA1480 BL 0x3AA0AF0
	0x01CA1484 TBZ X0, 0x0, 0x1CA149C
	0x01CA1488 LDR X0, [X19 + 0x120]
	0x01CA148C CBZ X0, 0x1CA14AC
	0x01CA1490 MOV X1, X31
	0x01CA1494 BL 0x3A9B084
	0x01CA1498 STR X0, [X19 + 0x148]
	0x01CA149C LDP X20, X19, [X31 + 0x20]
	0x01CA14A0 LDP X22, X21, [X31 + 0x10]
	0x01CA14A4 LDR X30, [X31], #0x30
	0x01CA14A8 RET
	0x01CA14AC BL 0x1B6EA1C
	0x01CA14B0 SUB X31, X31, 0x80
	0x01CA14B4 STP D9, D8, [X31 + 0x30]
	0x01CA14B8 STP X30, X25, [X31 + 0x40]
	0x01CA14BC STP X24, X23, [X31 + 0x50]
	0x01CA14C0 STP X22, X21, [X31 + 0x60]
	0x01CA14C4 STP X20, X19, [X31 + 0x70]
	0x01CA14C8 MRS X21, 0xC000
	0x01CA14CC LDR X8, [X21 + 0x28]
	0x01CA14D0 ADRP X22, 0x2582000
	0x01CA14D4 MOV X19, X0
	0x01CA14D8 STR X8, [X31 + 0x28]
	0x01CA14DC LDRB W8, [X22 + 0x43F]
	0x01CA14E0 LDR X20, [X0 + 0x130]
	0x01CA14E4 CBNZ W8, 0x1CA14FC
	0x01CA14E8 ADRP X0, 0x22AC000
	0x01CA14EC LDR X0, [X0 + 0x480]

ISIL:
	001 Subtract X31, X31, 352
	002 Move [X31+192], D15
	003 Move [X31+200], D14
	004 Move [X31+208], D13
	005 Move [X31+216], D12
	006 Move [X31+224], D11
	007 Move [X31+232], D10
	008 Move [X31+240], D9
	009 Move [X31+248], D8
	010 Move [X31+256], X29
	011 Move [X31+264], X30
	012 Move [X31+272], X28
	013 Move [X31+280], X27
	014 Move [X31+288], X26
	015 Move [X31+296], X25
	016 Move [X31+304], X24
	017 Move [X31+312], X23
	018 Move [X31+320], X22
	019 Move [X31+328], X21
	020 Move [X31+336], X20
	021 Move [X31+344], X19
	022 NotImplemented "Instruction MRS not yet implemented."
	023 Move X8, [X23+40]
	024 Move X20, 0x2584000
	025 Move X19, X0
	026 Move [X31+184], X8
	027 Move W8, [X20+1054]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {58}
	032 Move X0, 0x22AF000
	033 Move X0, [X0+368]
	034 Call 0x1B6F7F0
	035 Move X0, 0x22AF000
	036 Move X0, [X0+1064]
	037 Call 0x1B6F7F0
	038 Move X0, 0x22AF000
	039 Move X0, [X0+1072]
	040 Call 0x1B6F7F0
	041 Move X0, 0x22AF000
	042 Move X0, [X0+1080]
	043 Call 0x1B6F7F0
	044 Move X0, 0x22AF000
	045 Move X0, [X0+1088]
	046 Call 0x1B6F7F0
	047 Move X0, 0x22AF000
	048 Move X0, [X0+1096]
	049 Call 0x1B6F7F0
	050 Move X0, 0x22AE000
	051 Move X0, [X0+1144]
	052 Call 0x1B6F7F0
	053 Move X0, 0x22AF000
	054 Move X0, [X0+1104]
	055 Call 0x1B6F7F0
	056 Move W8, 1
	057 Move [X20+1054], W8
	058 Move X24, 0x22AE000
	059 Move X24, [X24+1144]
	060 NotImplemented "Instruction MOVI not yet implemented."
	061 Move W1, 1
	062 Move X0, X19
	063 Move [X31+112], V0
	064 Move [X31+120], V0
	065 Move [X31+80], V0
	066 Move [X31+88], V0
	067 Call GrabbableItem.UpdateIsVisible, X0, X1
	068 Move X0, X19
	069 Call GrabbableItem.get_isAttached, X0
	070 Add X20, X19, 288
	071 Move [X19+328], X31
	072 Move [X19+288], X31
	073 Move [X19+296], X31
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {386}
	078 Move X21, [X19+56]
	079 Move X0, X19
	080 Call GrabbableItem.get_attachedAnchorId, X0
	081 Compare X21, 0
	082 JumpIfEqual {981}
	083 Move X8, 0x22AF000
	084 Move X8, [X8+1096]
	085 Move X1, X0
	086 Move X0, X21
	087 Move X2, X20
	088 Move X3, [X8]
	089 Call 0x2114594, X0, X1, X2
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {474}
	094 Move X0, [X20]
	095 Compare X0, 0
	096 JumpIfEqual {981}
	097 Move X8, 0x22AF000
	098 Move X8, [X8+1064]
	099 Move X1, [X8]
	100 Call 0x2090DE8, X0
	101 Move [X19+296], X0
	102 Move X0, X19
	103 Call GrabbableItem.UpdateFollowTransform, X0
	104 Move X0, [X19+288]
	105 Compare X0, 0
	106 JumpIfEqual {981}
	107 Move X8, [X0+64]
	108 Compare X8, 0
	109 JumpIfEqual {471}
	110 Move W9, [X8+96]
	111 Move TEMP, X9
	112 And TEMP, TEMP, 2
	113 Compare TEMP, 2
	114 JumpIfEqual {471}
	115 Move X0, X8
	116 Move X1, X31
	117 Call NetworkObject.get_HasStateAuthority, X0
	118 Move TEMP, X0
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfNotEqual {468}
	122 Move W9, [X19+139]
	123 Move X8, [X19+288]
	124 Compare W9, 0
	125 JumpIfEqual {698}
	126 Compare X8, 0
	127 JumpIfEqual {981}
	128 Move W9, [X8+128]
	129 And W9, W9, 0xFFFFFFFE
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move X0, X19
	132 Move X1, X31
	133 Call Component.get_transform, X0
	134 Compare X0, 0
	135 JumpIfEqual {981}
	136 Move X1, X31
	137 Call Transform.get_position, X0
	138 Move X0, X19
	139 Move X1, X31
	140 Move V12, V0
	141 Move V15, V1
	142 Move V14, V2
	143 Call Component.get_transform, X0
	144 Compare X0, 0
	145 JumpIfEqual {981}
	146 Move X8, 0x22AF000
	147 Move X8, [X8+1072]
	148 Move X1, [X8]
	149 Call 0x2091A90, X0
	150 Compare X0, 0
	151 JumpIfEqual {981}
	152 Move W8, [X0+24]
	153 Move X21, X0
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move TEMP, 0x80800000
	156 Not TEMP
	157 Move W9, TEMP
	158 Move W25, W31
	159 Move S11, W9
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Add X22, X21, W25
	162 Add X22, X22, 32
	163 Move X0, [X22]
	164 Compare X0, 0
	165 JumpIfEqual {981}
	166 Move X1, X31
	167 Call Collider.get_isTrigger, X0
	168 Move TEMP, X0
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfEqual {206}
	172 Move W8, [X21+24]
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X0, [X19+328]
	175 Compare X0, 0
	176 JumpIfEqual {981}
	177 Move X22, [X22]
	178 Move X1, X31
	179 Call Transform.get_position, X0
	180 Compare X22, 0
	181 JumpIfEqual {981}
	182 Move X0, X22
	183 Move X1, X31
	184 Call Collider.ClosestPoint, X0, X1
	185 Move X0, [X19+328]
	186 Compare X0, 0
	187 JumpIfEqual {981}
	188 Move X1, X31
	189 Move V8, V0
	190 Move V9, V1
	191 Move V10, V2
	192 Call Transform.get_position, X0
	193 Subtract S0, S0, S8
	194 Subtract S1, S1, S9
	195 Subtract S2, S2, S10
	196 Multiply S0, S0, S0
	197 Multiply S1, S1, S1
	198 Add S0, S0, S1
	199 Multiply S1, S2, S2
	200 Add S0, S1, S0
	201 NotImplemented "Instruction FCMP not yet implemented."
	202 Move V11, V0
	203 Move V14, V10
	204 Move V15, V9
	205 Move V12, V8
	206 Move W8, [X21+24]
	207 Add W25, W25, 1
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Move X0, [X19+328]
	210 Compare X0, 0
	211 JumpIfEqual {981}
	212 Move X1, X31
	213 Call Transform.get_rotation, X0
	214 Move X0, X31
	215 Call Quaternion.Inverse, X0
	216 Move X0, [X19+168]
	217 Compare X0, 0
	218 JumpIfEqual {981}
	219 Move X1, X31
	220 Move V8, V0
	221 Move V9, V1
	222 Move V10, V2
	223 Move V11, V3
	224 Call Transform.get_position, X0
	225 Subtract S4, S0, S12
	226 Subtract S5, S1, S15
	227 Subtract S6, S2, S14
	228 Move V0, V8
	229 Move V1, V9
	230 Move V2, V10
	231 Move V3, V11
	232 Move X0, X31
	233 Move [X31+12], S12
	234 Call Quaternion.op_Multiply, X0, X1
	235 Move X0, X19
	236 Move X1, X31
	237 Move V11, V0
	238 Move V12, V1
	239 Move V13, V2
	240 Call Component.get_transform, X0
	241 Compare X0, 0
	242 JumpIfEqual {981}
	243 Add X8, X31, 16
	244 Move X1, X31
	245 Call Transform.get_worldToLocalMatrix, X0
	246 Move V0, [X31+16]
	247 Move V1, [X31+32]
	248 Move V2, [X31+48]
	249 Move V3, [X31+64]
	250 Add X0, X31, 80
	251 Move X1, X31
	252 Move [X31+80], V0
	253 Move [X31+88], V1
	254 Move [X31+112], V2
	255 Move [X31+120], V3
	256 Call Matrix4x4.get_rotation, X0
	257 Move X0, [X19+328]
	258 Compare X0, 0
	259 JumpIfEqual {981}
	260 Move X1, X31
	261 Call Transform.get_rotation, X0
	262 Move X0, [X19+168]
	263 Compare X0, 0
	264 JumpIfEqual {981}
	265 Move V0, V11
	266 Move V1, V12
	267 Move V2, V13
	268 Move X1, X31
	269 Call Transform.set_localPosition, X0, X1
	270 Move X0, [X19+328]
	271 Compare X0, 0
	272 JumpIfEqual {981}
	273 Move X21, [X19+168]
	274 Move X1, X31
	275 Move [X31+4], S15
	276 Move [X31+12], S14
	277 Call Transform.get_rotation, X0
	278 Move X0, X31
	279 Call Quaternion.Inverse, X0
	280 Move X0, X19
	281 Move X1, X31
	282 Move V13, V0
	283 Move V12, V1
	284 Move V11, V2
	285 Move V14, V3
	286 Call Component.get_transform, X0
	287 Compare X0, 0
	288 JumpIfEqual {981}
	289 Move X1, X31
	290 Call Transform.get_rotation, X0
	291 Move X0, [X19+168]
	292 Compare X0, 0
	293 JumpIfEqual {981}
	294 Move X1, X31
	295 Move V9, V0
	296 Move V8, V1
	297 Move V15, V2
	298 Move V10, V3
	299 Call Transform.get_localRotation, X0
	300 Compare X21, 0
	301 JumpIfEqual {981}
	302 Multiply S4, S14, S9
	303 Multiply S5, S13, S10
	304 Multiply S16, S14, S8
	305 Multiply S17, S12, S10
	306 Multiply S21, S13, S9
	307 Multiply S24, S14, S15
	308 Multiply S25, S14, S10
	309 Multiply S26, S11, S10
	310 Multiply S6, S12, S15
	311 Multiply S18, S11, S9
	312 Multiply S20, S13, S8
	313 Multiply S23, S12, S8
	314 Add S4, S4, S5
	315 Add S5, S16, S17
	316 Add S16, S24, S26
	317 Subtract S17, S25, S21
	318 Multiply S7, S11, S8
	319 Multiply S19, S13, S15
	320 Multiply S22, S12, S9
	321 Multiply S27, S11, S15
	322 Add S4, S6, S4
	323 Add S5, S18, S5
	324 Add S6, S20, S16
	325 Subtract S16, S17, S23
	326 Subtract S4, S4, S7
	327 Subtract S5, S5, S19
	328 Subtract S6, S6, S22
	329 Subtract S7, S16, S27
	330 Multiply S16, S7, S3
	331 Multiply S17, S4, S0
	332 Multiply S18, S5, S1
	333 Multiply S19, S6, S2
	334 Multiply S20, S4, S1
	335 Multiply S21, S7, S2
	336 Multiply S22, S6, S3
	337 Multiply S23, S5, S0
	338 Multiply S24, S5, S3
	339 Multiply S5, S5, S2
	340 Multiply S25, S4, S2
	341 Multiply S2, S4, S3
	342 Multiply S3, S6, S0
	343 Multiply S0, S7, S0
	344 Multiply S4, S7, S1
	345 Multiply S6, S6, S1
	346 Subtract S1, S16, S17
	347 Add S7, S21, S22
	348 Add S4, S4, S24
	349 Add S0, S0, S2
	350 Subtract S1, S1, S18
	351 Add S2, S20, S7
	352 Add S4, S3, S4
	353 Add S0, S5, S0
	354 Subtract S3, S1, S19
	355 Subtract S2, S2, S23
	356 Subtract S1, S4, S25
	357 Subtract S0, S0, S6
	358 Move X0, X21
	359 Move X1, X31
	360 Call Transform.set_localRotation, X0, X1
	361 Move X0, X19
	362 Move X1, X31
	363 Call Component.get_transform, X0
	364 Compare X0, 0
	365 JumpIfEqual {981}
	366 Move S2, [X31+8]
	367 Move S0, [X31+12]
	368 Move V1, [X31+4]
	369 Move X1, X31
	370 Call Transform.set_position, X0, X1
	371 Move X0, X19
	372 Move X1, X31
	373 Call Component.get_transform, X0
	374 Move X8, [X19+328]
	375 Compare X8, 0
	376 JumpIfEqual {981}
	377 Move X21, X0
	378 Move X0, X8
	379 Move X1, X31
	380 Call Transform.get_rotation, X0
	381 Compare X21, 0
	382 JumpIfEqual {981}
	383 Move X0, X21
	384 Move X1, X31
	385 Call Transform.set_rotation, X0, X1
	386 Move X0, [X24]
	387 Move X21, [X19+160]
	388 Move W8, [X0+224]
	389 Compare W8, 0
	390 JumpIfNotEqual {392}
	391 Call 0x1B6F8F8
	392 Move X0, X21
	393 Move X1, X31
	394 Move X2, X31
	395 Call Object.op_Inequality, X0, X1
	396 Move TEMP, X0
	397 And TEMP, TEMP, 1
	398 Compare TEMP, 1
	399 JumpIfNotEqual {448}
	400 Move X0, [X19+160]
	401 Compare X0, 0
	402 JumpIfEqual {981}
	403 Move X1, [X19+168]
	404 Move X2, X31
	405 Call Transform.set_parent, X0, X1
	406 Move X22, 0x2584000
	407 Move W8, [X22+1087]
	408 Move X21, [X19+160]
	409 Compare W8, 0
	410 JumpIfNotEqual {416}
	411 Move X0, 0x22AE000
	412 Move X0, [X0+1152]
	413 Call 0x1B6F7F0
	414 Move W8, 1
	415 Move [X22+1087], W8
	416 Move X8, 0x22AE000
	417 Move X8, [X8+1152]
	418 Move X22, 0x2584000
	419 Move W9, [X22+1108]
	420 Move X8, [X8]
	421 Move X8, [X8+184]
	422 Move S10, [X8]
	423 Move S9, [X8+4]
	424 Move V8, [X8+8]
	425 Compare W9, 0
	426 JumpIfNotEqual {432}
	427 Move X0, 0x22AF000
	428 Move X0, [X0+504]
	429 Call 0x1B6F7F0
	430 Move W8, 1
	431 Move [X22+1108], W8
	432 Compare X21, 0
	433 JumpIfEqual {981}
	434 Move X8, 0x22AF000
	435 Move X8, [X8+504]
	436 Move X0, X21
	437 Move V0, V10
	438 Move V1, V9
	439 Move X8, [X8]
	440 Move V2, V8
	441 Move X1, X31
	442 Move X8, [X8+184]
	443 Move S5, [X8+8]
	444 Move S6, [X8+12]
	445 Move S3, [X8]
	446 Move S4, [X8+4]
	447 Call Transform.SetLocalPositionAndRotation, X0, X1, X2
	448 Move X0, [X24]
	449 Move X21, [X19+312]
	450 Move W8, [X0+224]
	451 Compare W8, 0
	452 JumpIfNotEqual {454}
	453 Call 0x1B6F8F8
	454 Move X0, X21
	455 Move X1, X31
	456 Move X2, X31
	457 Call Object.op_Inequality, X0, X1
	458 Move TEMP, X0
	459 And TEMP, TEMP, 1
	460 Compare TEMP, 1
	461 JumpIfNotEqual {474}
	462 Move X0, [X19+312]
	463 Compare X0, 0
	464 JumpIfEqual {981}
	465 Move W1, 1
	466 Move X2, X31
	467 Call Behaviour.set_enabled, X0, X1
	468 Move X0, [X20]
	469 Compare X0, 0
	470 JumpIfEqual {981}
	471 Move X1, X31
	472 Call Component.get_transform, X0
	473 Move [X19+328], X0
	474 Move X25, 0x22AF000
	475 Move X26, 0x22AF000
	476 Move X27, 0x22AF000
	477 Move X25, [X25+1104]
	478 Move X26, [X26+368]
	479 Move X27, [X27+1088]
	480 Move X0, X19
	481 Call GrabbableItem.HandleGrabbedInfoChanged, X0
	482 Move X0, X19
	483 Call GrabbableItem.UpdateLayer, X0
	484 Move X8, [X19+392]
	485 Compare X8, 0
	486 JumpIfEqual {491}
	487 Move X9, [X8+24]
	488 Move X0, [X8+64]
	489 Move X1, [X8+40]
	490 NotImplemented "Instruction BLR not yet implemented."
	491 Move X8, [X25]
	492 Move X0, [X26]
	493 Move X8, [X8+184]
	494 Move X21, [X8+120]
	495 Call 0x1B6FA0C
	496 Move X2, [X27]
	497 Move X1, X19
	498 Move X3, X31
	499 Move X22, X0
	500 Call Action..ctor, X0, X1, X2
	501 Move X0, X21
	502 Move X1, X22
	503 Move X2, X31
	504 Call Delegate.Remove, X0, X1
	505 Move X1, [X26]
	506 Compare X0, 0
	507 JumpIfEqual {515}
	508 Move X8, [X0]
	509 NotImplemented "Instruction CMP not yet implemented."
	510 Move X8, [X25]
	511 Move X8, [X8+184]
	512 Move [X8+120], X0
	513 Move X9, [X0]
	514 NotImplemented "Instruction CMP not yet implemented."
	515 Move X8, [X25]
	516 Move X8, [X8+184]
	517 Move [X8+120], X0
	518 Move X21, [X8+104]
	519 Move X0, X1
	520 Call 0x1B6FA0C
	521 Move X2, [X27]
	522 Move X1, X19
	523 Move X3, X31
	524 Move X22, X0
	525 Call Action..ctor, X0, X1, X2
	526 Move X0, X21
	527 Move X1, X22
	528 Move X2, X31
	529 Call Delegate.Remove, X0, X1
	530 Move X1, [X26]
	531 Compare X0, 0
	532 JumpIfEqual {540}
	533 Move X8, [X0]
	534 NotImplemented "Instruction CMP not yet implemented."
	535 Move X8, [X25]
	536 Move X8, [X8+184]
	537 Move [X8+104], X0
	538 Move X9, [X0]
	539 NotImplemented "Instruction CMP not yet implemented."
	540 Move X8, [X25]
	541 Move X8, [X8+184]
	542 Move [X8+104], X0
	543 Move X28, 0x22AF000
	544 Move X21, [X8+24]
	545 Move X28, [X28+1080]
	546 Move X0, X1
	547 Call 0x1B6FA0C
	548 Move X2, [X28]
	549 Move X1, X19
	550 Move X3, X31
	551 Move X22, X0
	552 Call Action..ctor, X0, X1, X2
	553 Move X0, X21
	554 Move X1, X22
	555 Move X2, X31
	556 Call Delegate.Remove, X0, X1
	557 Move X1, [X26]
	558 Compare X0, 0
	559 JumpIfEqual {567}
	560 Move X8, [X0]
	561 NotImplemented "Instruction CMP not yet implemented."
	562 Move X8, [X25]
	563 Move X8, [X8+184]
	564 Move [X8+24], X0
	565 Move X9, [X0]
	566 NotImplemented "Instruction CMP not yet implemented."
	567 Move X8, [X25]
	568 Move X8, [X8+184]
	569 Move [X8+24], X0
	570 Move X21, [X8+8]
	571 Move X0, X1
	572 Call 0x1B6FA0C
	573 Move X2, [X28]
	574 Move X1, X19
	575 Move X3, X31
	576 Move X22, X0
	577 Call Action..ctor, X0, X1, X2
	578 Move X0, X21
	579 Move X1, X22
	580 Move X2, X31
	581 Call Delegate.Remove, X0, X1
	582 Compare X0, 0
	583 JumpIfEqual {593}
	584 Move X1, [X26]
	585 Move X8, [X0]
	586 NotImplemented "Instruction CMP not yet implemented."
	587 Move X8, [X25]
	588 Move X8, [X8+184]
	589 Move [X8+8], X0
	590 Move X8, [X0]
	591 NotImplemented "Instruction CMP not yet implemented."
	592 Call 0x1B6FCDC
	593 Move X8, [X25]
	594 Move X8, [X8+184]
	595 Move [X8+8], X0
	596 Move X0, [X24]
	597 Move X21, [X20]
	598 Move W8, [X0+224]
	599 Compare W8, 0
	600 JumpIfNotEqual {602}
	601 Call 0x1B6F8F8
	602 Move X0, X21
	603 Move X1, X31
	604 Move X2, X31
	605 Call Object.op_Inequality, X0, X1
	606 Move TEMP, X0
	607 And TEMP, TEMP, 1
	608 Compare TEMP, 1
	609 JumpIfNotEqual {956}
	610 Move X8, [X20]
	611 Compare X8, 0
	612 JumpIfEqual {981}
	613 Move X0, [X8+64]
	614 Compare X0, 0
	615 JumpIfEqual {956}
	616 Move W8, [X0+96]
	617 Move TEMP, X8
	618 And TEMP, TEMP, 2
	619 Compare TEMP, 2
	620 JumpIfEqual {956}
	621 Move X1, X31
	622 Call NetworkObject.get_HasInputAuthority, X0
	623 Move TEMP, X0
	624 And TEMP, TEMP, 1
	625 Compare TEMP, 1
	626 JumpIfNotEqual {956}
	627 Move X8, [X20]
	628 Compare X8, 0
	629 JumpIfEqual {981}
	630 Move W8, [X8+128]
	631 NotImplemented "Instruction CMP not yet implemented."
	632 NotImplemented "Instruction CMP not yet implemented."
	633 Compare W8, 0
	634 JumpIfNotEqual {956}
	635 Move X8, [X25]
	636 Move X0, [X26]
	637 Move X8, [X8+184]
	638 Move X20, [X8+104]
	639 Call 0x1B6FA0C
	640 Move X2, [X27]
	641 Move X1, X19
	642 Move X3, X31
	643 Move X21, X0
	644 Call Action..ctor, X0, X1, X2
	645 Move X0, X20
	646 Move X1, X21
	647 Move X2, X31
	648 Call Delegate.Combine, X0, X1
	649 Move X1, [X26]
	650 Compare X0, 0
	651 JumpIfEqual {902}
	652 Move X8, [X0]
	653 NotImplemented "Instruction CMP not yet implemented."
	654 Move X8, [X25]
	655 Move X8, [X8+184]
	656 Move [X8+104], X0
	657 Move X9, [X0]
	658 NotImplemented "Instruction CMP not yet implemented."
	659 Move X20, [X19+192]
	660 Compare X20, 0
	661 JumpIfEqual {956}
	662 Move X0, X19
	663 Move X1, X31
	664 Call Component.get_transform, X0
	665 Compare X0, 0
	666 JumpIfEqual {981}
	667 Move X1, X31
	668 Call Transform.get_position, X0
	669 Move S3, 1
	670 Move W1, 1
	671 Move X0, X20
	672 Move X2, X31
	673 Call RandomSFX.Play, X0, X1, V0, X2
	674 Move X8, [X25]
	675 Move X0, [X26]
	676 Move X8, [X8+184]
	677 Move X20, [X8+120]
	678 Call 0x1B6FA0C
	679 Move X2, [X27]
	680 Move X1, X19
	681 Move X3, X31
	682 Move X21, X0
	683 Call Action..ctor, X0, X1, X2
	684 Move X0, X20
	685 Move X1, X21
	686 Move X2, X31
	687 Call Delegate.Combine, X0, X1
	688 Move X1, [X26]
	689 Compare X0, 0
	690 JumpIfEqual {925}
	691 Move X8, [X0]
	692 NotImplemented "Instruction CMP not yet implemented."
	693 Move X8, [X25]
	694 Move X8, [X8+184]
	695 Move [X8+120], X0
	696 Move X9, [X0]
	697 NotImplemented "Instruction CMP not yet implemented."
	698 Compare X8, 0
	699 JumpIfEqual {981}
	700 Move W8, [X8+128]
	701 NotImplemented "Instruction CMP not yet implemented."
	702 Move X0, [X24]
	703 Move X21, [X19+144]
	704 Move W8, [X0+224]
	705 Compare W8, 0
	706 JumpIfNotEqual {708}
	707 Call 0x1B6F8F8
	708 Move X0, X21
	709 Move X1, X31
	710 Move X2, X31
	711 Call Object.op_Inequality, X0, X1
	712 Move TEMP, X0
	713 And TEMP, TEMP, 1
	714 Compare TEMP, 1
	715 JumpIfNotEqual {754}
	716 Move X0, [X19+144]
	717 Compare X0, 0
	718 JumpIfEqual {981}
	719 Move X1, X31
	720 Call Transform.get_localRotation, X0
	721 Move X0, X31
	722 Call Quaternion.Inverse, X0
	723 Move X0, [X19+144]
	724 Compare X0, 0
	725 JumpIfEqual {981}
	726 Move X21, [X19+168]
	727 Move X1, X31
	728 Move V8, V0
	729 Move V9, V1
	730 Move V10, V2
	731 Move V11, V3
	732 Call Transform.get_localPosition, X0
	733 NotImplemented "Instruction FNEG not yet implemented."
	734 NotImplemented "Instruction FNEG not yet implemented."
	735 NotImplemented "Instruction FNEG not yet implemented."
	736 Move V0, V8
	737 Move V1, V9
	738 Move V2, V10
	739 Move V3, V11
	740 Move X0, X31
	741 Call Quaternion.op_Multiply, X0, X1
	742 Compare X21, 0
	743 JumpIfEqual {981}
	744 Move X0, X21
	745 Move X1, X31
	746 Call Transform.set_localPosition, X0, X1
	747 Move X0, [X19+168]
	748 Compare X0, 0
	749 JumpIfEqual {981}
	750 Move V0, V8
	751 Move V1, V9
	752 Move V2, V10
	753 Move V3, V11
	754 Move X22, 0x2583000
	755 Move W8, [X22+1087]
	756 Move X21, [X19+168]
	757 Compare W8, 0
	758 JumpIfNotEqual {764}
	759 Move X0, 0x22AD000
	760 Move X0, [X0+1152]
	761 Call 0x1B6F7F0
	762 Move W8, 1
	763 Move [X22+1087], W8
	764 Compare X21, 0
	765 JumpIfEqual {981}
	766 Move X8, 0x22AD000
	767 Move X8, [X8+1152]
	768 Move X0, X21
	769 Move X1, X31
	770 Move X8, [X8]
	771 Move X8, [X8+184]
	772 Move S1, [X8+4]
	773 Move S2, [X8+8]
	774 Move V0, [X8]
	775 Call Transform.set_localPosition, X0, X1
	776 Move X22, 0x2583000
	777 Move W8, [X22+1108]
	778 Move X21, [X19+168]
	779 Compare W8, 0
	780 JumpIfNotEqual {786}
	781 Move X0, 0x22AE000
	782 Move X0, [X0+504]
	783 Call 0x1B6F7F0
	784 Move W8, 1
	785 Move [X22+1108], W8
	786 Compare X21, 0
	787 JumpIfEqual {981}
	788 Move X8, 0x22AE000
	789 Move X8, [X8+504]
	790 Move X0, X21
	791 Move X8, [X8]
	792 Move X8, [X8+184]
	793 Move S2, [X8+8]
	794 Move S3, [X8+12]
	795 Move S0, [X8]
	796 Move S1, [X8+4]
	797 Move X1, X31
	798 Call Transform.set_localRotation, X0, X1
	799 Move X21, [X19+304]
	800 Move X0, X19
	801 Move X1, X31
	802 Call Component.get_transform, X0
	803 Compare X0, 0
	804 JumpIfEqual {981}
	805 Move X1, X31
	806 Call Transform.get_position, X0
	807 Compare X21, 0
	808 JumpIfEqual {981}
	809 Move X0, X21
	810 Move X1, X31
	811 Call Rigidbody.set_position, X0, X1
	812 Move X21, [X19+304]
	813 Move X0, X19
	814 Move X1, X31
	815 Call Component.get_transform, X0
	816 Compare X0, 0
	817 JumpIfEqual {981}
	818 Move X1, X31
	819 Call Transform.get_rotation, X0
	820 Compare X21, 0
	821 JumpIfEqual {981}
	822 Move X0, X21
	823 Move X1, X31
	824 Call Rigidbody.set_rotation, X0, X1
	825 Move X0, X19
	826 Move X1, X31
	827 Call Component.get_transform, X0
	828 Compare X0, 0
	829 JumpIfEqual {981}
	830 Move X1, X31
	831 Call Transform.get_position, X0
	832 Move X0, [X19+168]
	833 Move [X19+344], S0
	834 Move [X19+348], S1
	835 Move [X19+352], S2
	836 Compare X0, 0
	837 JumpIfEqual {981}
	838 Move X1, X31
	839 Call Transform.get_localPosition, X0
	840 Move X0, [X19+168]
	841 Compare X0, 0
	842 JumpIfEqual {981}
	843 Move X1, X31
	844 Move V8, V0
	845 Move V9, V1
	846 Move V10, V2
	847 Call Transform.get_localRotation, X0
	848 Add X1, X31, 152
	849 Move X0, X19
	850 Move [X31+152], S8
	851 Move [X31+160], S9
	852 Move [X31+160], S10
	853 Move [X31+168], S0
	854 Move [X31+168], S1
	855 Move [X31+176], S2
	856 Move [X31+176], S3
	857 Call GrabbableItem.RPC_SetGrabbedOffsets, X0, X1
	858 Move X0, X19
	859 Call GrabbableItem.SnapToFollow, X0
	860 Move X0, [X19+64]
	861 Compare X0, 0
	862 JumpIfEqual {874}
	863 Move W8, [X0+96]
	864 Move TEMP, X8
	865 And TEMP, TEMP, 2
	866 Compare TEMP, 2
	867 JumpIfEqual {874}
	868 Move X1, X31
	869 Call NetworkObject.get_HasStateAuthority, X0
	870 Move TEMP, X0
	871 And TEMP, TEMP, 1
	872 Compare TEMP, 1
	873 JumpIfEqual {474}
	874 Move X8, [X19+56]
	875 Compare X8, 0
	876 JumpIfEqual {981}
	877 Move W8, [X8+384]
	878 NotImplemented "Instruction CMP not yet implemented."
	879 Move X0, [X19+64]
	880 Compare X0, 0
	881 JumpIfEqual {981}
	882 Move X1, X31
	883 Call NetworkObject.RequestStateAuthority, X0
	884 Move X0, [X24]
	885 Move X21, [X19+312]
	886 Move W8, [X0+224]
	887 Compare W8, 0
	888 JumpIfNotEqual {890}
	889 Call 0x1B6F8F8
	890 Move X0, X21
	891 Move X1, X31
	892 Move X2, X31
	893 Call Object.op_Inequality, X0, X1
	894 Move TEMP, X0
	895 And TEMP, TEMP, 1
	896 Compare TEMP, 1
	897 JumpIfNotEqual {474}
	898 Move X0, [X19+312]
	899 Compare X0, 0
	900 JumpIfEqual {981}
	901 Move W1, W31
	902 Move X8, [X25]
	903 Move X8, [X8+184]
	904 Move [X8+104], X0
	905 Move X20, [X8+8]
	906 Move X0, X1
	907 Call 0x1B6FA0C
	908 Move X2, [X28]
	909 Move X1, X19
	910 Move X3, X31
	911 Move X21, X0
	912 Call Action..ctor, X0, X1, X2
	913 Move X0, X20
	914 Move X1, X21
	915 Move X2, X31
	916 Call Delegate.Combine, X0, X1
	917 Compare X0, 0
	918 JumpIfEqual {950}
	919 Move X1, [X26]
	920 Move X8, [X0]
	921 NotImplemented "Instruction CMP not yet implemented."
	922 Move X8, [X25]
	923 Move X8, [X8+184]
	924 Move [X8+8], X0
	925 Move X8, [X25]
	926 Move X8, [X8+184]
	927 Move [X8+120], X0
	928 Move X20, [X8+24]
	929 Move X0, X1
	930 Call 0x1B6FA0C
	931 Move X2, [X28]
	932 Move X1, X19
	933 Move X3, X31
	934 Move X21, X0
	935 Call Action..ctor, X0, X1, X2
	936 Move X0, X20
	937 Move X1, X21
	938 Move X2, X31
	939 Call Delegate.Combine, X0, X1
	940 Compare X0, 0
	941 JumpIfEqual {953}
	942 Move X1, [X26]
	943 Move X8, [X0]
	944 NotImplemented "Instruction CMP not yet implemented."
	945 Move X8, [X25]
	946 Move X8, [X8+184]
	947 Move [X8+24], X0
	948 Move X8, [X0]
	949 NotImplemented "Instruction CMP not yet implemented."
	950 Move X8, [X25]
	951 Move X8, [X8+184]
	952 Move [X8+8], X0
	953 Move X8, [X25]
	954 Move X8, [X8+184]
	955 Move [X8+24], X0
	956 Move X8, [X23+40]
	957 Move X9, [X31+184]
	958 NotImplemented "Instruction CMP not yet implemented."
	959 Move X20, [X31+336]
	960 Move X19, [X31+344]
	961 Move X22, [X31+320]
	962 Move X21, [X31+328]
	963 Move X24, [X31+304]
	964 Move X23, [X31+312]
	965 Move X26, [X31+288]
	966 Move X25, [X31+296]
	967 Move X28, [X31+272]
	968 Move X27, [X31+280]
	969 Move X29, [X31+256]
	970 Move X30, [X31+264]
	971 Move D9, [X31+240]
	972 Move D8, [X31+248]
	973 Move D11, [X31+224]
	974 Move D10, [X31+232]
	975 Move D13, [X31+208]
	976 Move D12, [X31+216]
	977 Move D15, [X31+192]
	978 Move D14, [X31+200]
	979 Add X31, X31, 352
	980 Return 
	981 Call 0x1B6FA1C
	982 Call 0x1B6FA24
	983 Call 0x3D1A880

Method: System.Void InitSpawn()

Disassembly:
	0x01CA24B0 BL 0x3A9D6EC
	0x01CA24B4 TBZ X0, 0x0, 0x1CA2578
	0x01CA24B8 LDR X0, [X19 + 0x40]
	0x01CA24BC CBZ X0, 0x1CA2588
	0x01CA24C0 MOV X1, X31
	0x01CA24C4 BL 0x1D9E5D0
	0x01CA24C8 TBZ X0, 0x0, 0x1CA2578
	0x01CA24CC LDR X0, [X19 + 0x40]
	0x01CA24D0 CBZ X0, 0x1CA2588
	0x01CA24D4 MOV X1, X31
	0x01CA24D8 BL 0x1D9EB2C
	0x01CA24DC ADRP X8, 0x22AC000
	0x01CA24E0 LDR X8, [X8 + 0x4A8]
	0x01CA24E4 MOV X21, X0
	0x01CA24E8 LDR X8, [X8]
	0x01CA24EC LDR W9, [X8 + 0xE0]
	0x01CA24F0 CBNZ W9, 0x1CA24FC
	0x01CA24F4 MOV X0, X8
	0x01CA24F8 BL 0x1B6E8F8
	0x01CA24FC CMP W21, W20
	0x01CA2500 B.EQ 0x1CA2548
	0x01CA2504 LDR X0, [X19 + 0x38]
	0x01CA2508 CBZ X0, 0x1CA2588
	0x01CA250C MOV X1, X31
	0x01CA2510 BL 0x1D87590
	0x01CA2514 LDR X8, [X19 + 0x40]
	0x01CA2518 CBZ X8, 0x1CA2588
	0x01CA251C MOV X20, X0
	0x01CA2520 MOV X0, X8
	0x01CA2524 MOV X1, X31
	0x01CA2528 BL 0x1D9EB2C
	0x01CA252C ADRP X8, 0x22AC000
	0x01CA2530 LDR X8, [X8 + 0x4B0]
	0x01CA2534 AND X1, X0, 0x0
	0x01CA2538 MOV X0, X20
	0x01CA253C LDR X2, [X8]
	0x01CA2540 BL 0x20A6910
	0x01CA2544 TBNZ X0, 0x0, 0x1CA2578
	0x01CA2548 LDR X0, [X19 + 0x38]
	0x01CA254C CBZ X0, 0x1CA2588
	0x01CA2550 MOV X1, X31
	0x01CA2554 BL 0x1D8B250
	0x01CA2558 TBZ X0, 0x0, 0x1CA2578
	0x01CA255C LDR X0, [X19 + 0x40]
	0x01CA2560 CBZ X0, 0x1CA2588
	0x01CA2564 LDP X20, X19, [X31 + 0x20]
	0x01CA2568 LDP X22, X21, [X31 + 0x10]
	0x01CA256C MOV X1, X31
	0x01CA2570 LDR X30, [X31], #0x30
	0x01CA2574 B 0x1D9F9D8
	0x01CA2578 LDP X20, X19, [X31 + 0x20]
	0x01CA257C LDP X22, X21, [X31 + 0x10]
	0x01CA2580 LDR X30, [X31], #0x30
	0x01CA2584 RET
	0x01CA2588 BL 0x1B6EA1C
	0x01CA258C STR X30, [X31 - 0x30]!
	0x01CA2590 STP X22, X21, [X31 + 0x10]
	0x01CA2594 STP X20, X19, [X31 + 0x20]
	0x01CA2598 ADRP X21, 0x2581000
	0x01CA259C ADRP X22, 0x22AB000
	0x01CA25A0 LDRB W8, [X21 + 0x424]
	0x01CA25A4 LDR X22, [X22 + 0x478]
	0x01CA25A8 MOV X20, X1
	0x01CA25AC MOV X19, X0
	0x01CA25B0 TBNZ X8, 0x0, 0x1CA25E0
	0x01CA25B4 ADRP X0, 0x22AC000
	0x01CA25B8 LDR X0, [X0 + 0x4B0]
	0x01CA25BC BL 0x1B6E7F0
	0x01CA25C0 ADRP X0, 0x22AB000
	0x01CA25C4 LDR X0, [X0 + 0x478]
	0x01CA25C8 BL 0x1B6E7F0
	0x01CA25CC ADRP X0, 0x22AC000
	0x01CA25D0 LDR X0, [X0 + 0x4A8]
	0x01CA25D4 BL 0x1B6E7F0
	0x01CA25D8 MOVZ W8, 0x1
	0x01CA25DC STRB W8, [X21 + 0x424]
	0x01CA25E0 LDR X0, [X22]
	0x01CA25E4 LDR X21, [X19 + 0x38]
	0x01CA25E8 LDR W8, [X0 + 0xE0]
	0x01CA25EC CBNZ W8, 0x1CA25F4
	0x01CA25F0 BL 0x1B6E8F8
	0x01CA25F4 MOV X0, X21
	0x01CA25F8 MOV X1, X31
	0x01CA25FC MOV X2, X31
	0x01CA2600 BL 0x3A9D6EC
	0x01CA2604 TBZ X0, 0x0, 0x1CA26E4
	0x01CA2608 LDR X0, [X22]
	0x01CA260C LDR X21, [X19 + 0x40]
	0x01CA2610 LDR W8, [X0 + 0xE0]
	0x01CA2614 CBNZ W8, 0x1CA261C
	0x01CA2618 BL 0x1B6E8F8
	0x01CA261C MOV X0, X21
	0x01CA2620 MOV X1, X31
	0x01CA2624 MOV X2, X31
	0x01CA2628 BL 0x3A9D6EC
	0x01CA262C TBZ X0, 0x0, 0x1CA26E4
	0x01CA2630 LDR X0, [X19 + 0x40]
	0x01CA2634 CBZ X0, 0x1CA2710
	0x01CA2638 MOV X1, X31
	0x01CA263C BL 0x1D9E5D0
	0x01CA2640 TBZ X0, 0x0, 0x1CA26E4
	0x01CA2644 LDR X0, [X19 + 0x38]
	0x01CA2648 CBZ X0, 0x1CA2710
	0x01CA264C MOV X1, X31
	0x01CA2650 BL 0x1D87528
	0x01CA2654 ADRP X8, 0x22AC000
	0x01CA2658 LDR X8, [X8 + 0x4A8]
	0x01CA265C MOV X21, X0
	0x01CA2660 LDR X8, [X8]
	0x01CA2664 LDR W9, [X8 + 0xE0]
	0x01CA2668 CBNZ W9, 0x1CA2674
	0x01CA266C MOV X0, X8
	0x01CA2670 BL 0x1B6E8F8
	0x01CA2674 CMP W21, W20
	0x01CA2678 B.NE 0x1CA26C0
	0x01CA267C LDR X0, [X19 + 0x38]
	0x01CA2680 CBZ X0, 0x1CA2710
	0x01CA2684 MOV X1, X31
	0x01CA2688 BL 0x1D87590
	0x01CA268C LDR X8, [X19 + 0x40]
	0x01CA2690 CBZ X8, 0x1CA2710
	0x01CA2694 MOV X20, X0
	0x01CA2698 MOV X0, X8
	0x01CA269C MOV X1, X31
	0x01CA26A0 BL 0x1D9EB2C
	0x01CA26A4 ADRP X8, 0x22AC000
	0x01CA26A8 LDR X8, [X8 + 0x4B0]
	0x01CA26AC AND X1, X0, 0x0
	0x01CA26B0 MOV X0, X20
	0x01CA26B4 LDR X2, [X8]
	0x01CA26B8 BL 0x20A6910
	0x01CA26BC TBZ X0, 0x0, 0x1CA26F4
	0x01CA26C0 LDR X0, [X19 + 0x40]
	0x01CA26C4 CBZ X0, 0x1CA26E4
	0x01CA26C8 LDRB W8, [X0 + 0x60]
	0x01CA26CC TBNZ X8, 0x1, 0x1CA26E4
	0x01CA26D0 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], D9
	003 Move [X31+56], D8
	004 Move [X31+64], X30
	005 Move [X31+72], X25
	006 Move [X31+80], X24
	007 Move [X31+88], X23
	008 Move [X31+96], X22
	009 Move [X31+104], X21
	010 Move [X31+112], X20
	011 Move [X31+120], X19
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X21+40]
	014 Move X22, 0x2582000
	015 Move X19, X0
	016 Move [X31+40], X8
	017 Move W8, [X22+1087]
	018 Move X20, [X0+304]
	019 Compare W8, 0
	020 JumpIfNotEqual {26}
	021 Move X0, 0x22AC000
	022 Move X0, [X0+1152]
	023 Call 0x1B6F7F0
	024 Move W8, 1
	025 Move [X22+1087], W8
	026 Compare X20, 0
	027 JumpIfEqual {160}
	028 Move X23, 0x22AC000
	029 Move X23, [X23+1152]
	030 Move X0, X20
	031 Move X1, X31
	032 Move X8, [X23]
	033 Move X8, [X8+184]
	034 Move S1, [X8+4]
	035 Move S2, [X8+8]
	036 Move V0, [X8]
	037 Call Rigidbody.set_velocity, X0, X1
	038 Move W8, [X22+1087]
	039 Move X20, [X19+304]
	040 Compare W8, 0
	041 JumpIfNotEqual {47}
	042 Move X0, 0x22AC000
	043 Move X0, [X0+1152]
	044 Call 0x1B6F7F0
	045 Move W8, 1
	046 Move [X22+1087], W8
	047 Compare X20, 0
	048 JumpIfEqual {160}
	049 Move X8, [X23]
	050 Move X0, X20
	051 Move X1, X31
	052 Move X8, [X8+184]
	053 Move S1, [X8+4]
	054 Move S2, [X8+8]
	055 Move V0, [X8]
	056 Call Rigidbody.set_angularVelocity, X0, X1
	057 Move W8, [X22+1087]
	058 Move X20, [X19+168]
	059 Compare W8, 0
	060 JumpIfNotEqual {66}
	061 Move X0, 0x22AC000
	062 Move X0, [X0+1152]
	063 Call 0x1B6F7F0
	064 Move W8, 1
	065 Move [X22+1087], W8
	066 Compare X20, 0
	067 JumpIfEqual {160}
	068 Move X8, [X23]
	069 Move X0, X20
	070 Move X1, X31
	071 Move X8, [X8+184]
	072 Move S1, [X8+4]
	073 Move S2, [X8+8]
	074 Move V0, [X8]
	075 Call Transform.set_localPosition, X0, X1
	076 Move X24, 0x2582000
	077 Move W8, [X24+1108]
	078 Move X20, [X19+168]
	079 Compare W8, 0
	080 JumpIfNotEqual {86}
	081 Move X0, 0x22AD000
	082 Move X0, [X0+504]
	083 Call 0x1B6F7F0
	084 Move W8, 1
	085 Move [X24+1108], W8
	086 Compare X20, 0
	087 JumpIfEqual {160}
	088 Move X25, 0x22AD000
	089 Move X25, [X25+504]
	090 Move X0, X20
	091 Move X1, X31
	092 Move X8, [X25]
	093 Move X8, [X8+184]
	094 Move S2, [X8+8]
	095 Move S3, [X8+12]
	096 Move S0, [X8]
	097 Move S1, [X8+4]
	098 Call Transform.set_localRotation, X0, X1
	099 Move W8, [X22+1087]
	100 Compare W8, 0
	101 JumpIfNotEqual {107}
	102 Move X0, 0x22AC000
	103 Move X0, [X0+1152]
	104 Call 0x1B6F7F0
	105 Move W8, 1
	106 Move [X22+1087], W8
	107 Move X8, [X23]
	108 Move W9, [X24+1108]
	109 Move X8, [X8+184]
	110 Move V9, [X8]
	111 Move V8, [X8+8]
	112 Compare W9, 0
	113 JumpIfNotEqual {119}
	114 Move X0, 0x22AD000
	115 Move X0, [X0+504]
	116 Call 0x1B6F7F0
	117 Move W8, 1
	118 Move [X24+1108], W8
	119 Move X8, [X25]
	120 Add X1, X31, 8
	121 Move X0, X19
	122 Move X8, [X8+184]
	123 Move V0, [X8]
	124 Move [X31+8], D9
	125 Move [X31+16], S8
	126 Move [X31+20], V0
	127 Call GrabbableItem.set_grabbedInfo, X0, X1
	128 Move X0, X31
	129 Call TickTimer.get_None
	130 And X1, X0, 0
	131 Move X0, X19
	132 Call GrabbableItem.set_respawnTimer, X0, X1
	133 Move X0, X31
	134 Call NetworkBehaviourId.get_None
	135 Move X1, X0
	136 Move X0, X19
	137 Call GrabbableItem.set_attachedAnchorId, X0, X1
	138 Move X0, X31
	139 Call NetworkBehaviourId.get_None
	140 Move X1, X0
	141 Move X0, X19
	142 Call GrabbableItem.set_backpackId, X0, X1
	143 Move X0, X19
	144 Call GrabbableItem.HandleGrabbedChanged, X0
	145 Move X8, [X21+40]
	146 Move X9, [X31+40]
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X20, [X31+112]
	149 Move X19, [X31+120]
	150 Move X22, [X31+96]
	151 Move X21, [X31+104]
	152 Move X24, [X31+80]
	153 Move X23, [X31+88]
	154 Move X30, [X31+64]
	155 Move X25, [X31+72]
	156 Move D9, [X31+48]
	157 Move D8, [X31+56]
	158 Add X31, X31, 128
	159 Return 
	160 Call 0x1B6FA1C
	161 Call 0x3D1A880

Method: System.Void Respawn()

Disassembly:
	0x01CA26D4 BL 0x1D9E780

ISIL:
No ISIL was generated
Method: System.Void RPC_Respawn()

Disassembly:
	0x01CA26D8 TBZ X0, 0x0, 0x1CA26E4
	0x01CA26DC MOVZ W8, 0x1
	0x01CA26E0 STRB W8, [X19 + 0x185]
	0x01CA26E4 LDP X20, X19, [X31 + 0x20]
	0x01CA26E8 LDP X22, X21, [X31 + 0x10]
	0x01CA26EC LDR X30, [X31], #0x30
	0x01CA26F0 RET
	0x01CA26F4 LDR X0, [X19 + 0x40]
	0x01CA26F8 CBZ X0, 0x1CA2710
	0x01CA26FC LDP X20, X19, [X31 + 0x20]
	0x01CA2700 LDP X22, X21, [X31 + 0x10]
	0x01CA2704 MOV X1, X31
	0x01CA2708 LDR X30, [X31], #0x30
	0x01CA270C B 0x1D9F9D8
	0x01CA2710 BL 0x1B6EA1C
	0x01CA2714 SUB X31, X31, 0x80
	0x01CA2718 STR D14, [X31 + 0x20]
	0x01CA271C STP D13, D12, [X31 + 0x28]
	0x01CA2720 STP D11, D10, [X31 + 0x38]
	0x01CA2724 STP D9, D8, [X31 + 0x48]
	0x01CA2728 STR X30, [X31 + 0x58]
	0x01CA272C STP X22, X21, [X31 + 0x60]
	0x01CA2730 STP X20, X19, [X31 + 0x70]
	0x01CA2734 ADRP X22, 0x2581000
	0x01CA2738 ADRP X21, 0x22AB000
	0x01CA273C LDRB W8, [X22 + 0x425]
	0x01CA2740 LDR X21, [X21 + 0x478]
	0x01CA2744 MOV X20, X1
	0x01CA2748 MOV X19, X0
	0x01CA274C TBNZ X8, 0x0, 0x1CA2764
	0x01CA2750 ADRP X0, 0x22AB000
	0x01CA2754 LDR X0, [X0 + 0x478]
	0x01CA2758 BL 0x1B6E7F0
	0x01CA275C MOVZ W8, 0x1
	0x01CA2760 STRB W8, [X22 + 0x425]
	0x01CA2764 LDR X0, [X21]
	0x01CA2768 LDR X21, [X19 + 0x40]
	0x01CA276C LDR W8, [X0 + 0xE0]
	0x01CA2770 CBNZ W8, 0x1CA2778
	0x01CA2774 BL 0x1B6E8F8
	0x01CA2778 MOV X0, X21
	0x01CA277C MOV X1, X31
	0x01CA2780 MOV X2, X31
	0x01CA2784 BL 0x3A9D6EC
	0x01CA2788 TBZ X0, 0x0, 0x1CA28D8
	0x01CA278C LDR X0, [X19 + 0x40]
	0x01CA2790 CBZ X0, 0x1CA28FC
	0x01CA2794 MOV X1, X31
	0x01CA2798 BL 0x1D9E5D0
	0x01CA279C TBZ X0, 0x0, 0x1CA28D8
	0x01CA27A0 MOV X0, X19
	0x01CA27A4 BL 0x1C99A60
	0x01CA27A8 ADRP X22, 0x2581000
	0x01CA27AC LDRB W8, [X22 + 0x44E]
	0x01CA27B0 MOV X21, X0
	0x01CA27B4 CBNZ W8, 0x1CA27CC
	0x01CA27B8 ADRP X0, 0x22AC000
	0x01CA27BC LDR X0, [X0 + 0x1E8]
	0x01CA27C0 BL 0x1B6E7F0
	0x01CA27C4 MOVZ W8, 0x1
	0x01CA27C8 STRB W8, [X22 + 0x44E]
	0x01CA27CC ADRP X8, 0x22AC000
	0x01CA27D0 LDR X8, [X8 + 0x1E8]
	0x01CA27D4 LDR X0, [X8]
	0x01CA27D8 LDR W8, [X0 + 0xE0]
	0x01CA27DC CBNZ W8, 0x1CA27E4
	0x01CA27E0 BL 0x1B6E8F8
	0x01CA27E4 CMP W20, W21
	0x01CA27E8 B.NE 0x1CA28D8
	0x01CA27EC UBFM X8, X21, 0x20, 0x3F
	0x01CA27F0 UBFM X9, X20, 0x20, 0x3F
	0x01CA27F4 CMP W9, W8
	0x01CA27F8 B.NE 0x1CA28D8
	0x01CA27FC LDR X0, [X19 + 0x40]
	0x01CA2800 CBZ X0, 0x1CA28D8
	0x01CA2804 LDRB W8, [X0 + 0x60]
	0x01CA2808 TBNZ X8, 0x1, 0x1CA28D8
	0x01CA280C MOV X1, X31
	0x01CA2810 BL 0x1D9E780
	0x01CA2814 TBZ X0, 0x0, 0x1CA28D8
	0x01CA2818 MOV X0, X19
	0x01CA281C MOV X1, X31
	0x01CA2820 BL 0x3A9B084
	0x01CA2824 CBZ X0, 0x1CA28FC
	0x01CA2828 MOV X1, X31
	0x01CA282C BL 0x3AA7658
	0x01CA2830 MOV X0, X19
	0x01CA2834 MOV X1, X31
	0x01CA2838 MOV V8.16B, V0.16B
	0x01CA283C MOV V9.16B, V1.16B
	0x01CA2840 MOV V10.16B, V2.16B
	0x01CA2844 BL 0x3A9B084
	0x01CA2848 CBZ X0, 0x1CA28FC
	0x01CA284C MOV X1, X31
	0x01CA2850 BL 0x3AA5FBC
	0x01CA2854 ADRP X20, 0x2581000
	0x01CA2858 LDRB W8, [X20 + 0x43F]
	0x01CA285C MOV V11.16B, V0.16B
	0x01CA2860 MOV V12.16B, V1.16B
	0x01CA2864 MOV V13.16B, V2.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2582000
	005 Move W8, [X20+1055]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x22AD000
	012 Move X0, [X0+448]
	013 Call 0x1B6F7F0
	014 Move X0, 0x22AD000
	015 Move X0, [X0+1160]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X20+1055], W8
	019 Move W8, [X19+88]
	020 Compare W8, 0
	021 JumpIfEqual {27}
	022 Move [X19+88], W31
	023 Move X0, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Move X20, 0x22AD000
	028 Move X20, [X20+448]
	029 Move X0, [X20]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1B6F8F8
	034 Move X0, X19
	035 Move X1, X31
	036 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	037 Move X0, [X19+56]
	038 Compare X0, 0
	039 JumpIfEqual {124}
	040 Move X1, X31
	041 Call NetworkRunner.get_Stage, X0
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Return 
	047 Move X0, [X19+64]
	048 Compare X0, 0
	049 JumpIfEqual {124}
	050 Move X1, X31
	051 Call NetworkObject.GetLocalAuthorityMask, X0
	052 And W31, W0, 7
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {23}
	057 Move X8, [X19+56]
	058 Compare X8, 0
	059 JumpIfEqual {124}
	060 Move X0, [X8+80]
	061 Compare X0, 0
	062 JumpIfEqual {124}
	063 Move X1, X31
	064 Call Simulation.HasAnyActiveConnections, X0
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {43}
	069 Move X8, [X19+56]
	070 Compare X8, 0
	071 JumpIfEqual {124}
	072 Move X0, [X8+80]
	073 Move W1, 8
	074 Move X2, X31
	075 Call SimulationMessage.Allocate, X0, X1
	076 Move X20, X0
	077 Move W0, 1
	078 Move X1, X31
	079 Call Assert.Check, X0
	080 Move X8, [X19+64]
	081 Compare X8, 0
	082 JumpIfEqual {124}
	083 Move X8, [X8+32]
	084 Compare X8, 0
	085 JumpIfEqual {104}
	086 Move W0, [X8]
	087 Move X0, [X20]
	088 Move X19, [X19+64]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1B6F8F8
	093 Move X8, 0x22AD000
	094 Move X8, [X8+1160]
	095 Move X1, X19
	096 Move X20, [X31+16]
	097 Move X19, [X31+24]
	098 Move W2, 7
	099 Move X0, [X8]
	100 Move X3, X31
	101 Move X30, [X31+32]
	102 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	103 Return 
	104 Move X0, X31
	105 Move W1, [X19+104]
	106 Move W2, 6
	107 Move X3, X31
	108 Call RpcHeader.Create, X0, X1, X2
	109 Move [X20+28], X0
	110 Compare X20, 0
	111 JumpIfEqual {124}
	112 Move W8, 64
	113 Move [X20+12], W8
	114 Move X0, [X19+56]
	115 Compare X0, 0
	116 JumpIfEqual {124}
	117 Move X1, X20
	118 Move X20, [X31+16]
	119 Move X19, [X31+24]
	120 Move X2, X31
	121 Move X30, [X31+32]
	122 Call NetworkRunner.SendRpc, X0, X1
	123 Return 
	124 Call 0x1B6FA1C

Method: System.Void RespawnInternally()

Disassembly:
	0x01CA2868 MOV V14.16B, V3.16B
	0x01CA286C CBNZ W8, 0x1CA2884
	0x01CA2870 ADRP X0, 0x22AB000
	0x01CA2874 LDR X0, [X0 + 0x480]
	0x01CA2878 BL 0x1B6E7F0
	0x01CA287C MOVZ W8, 0x1
	0x01CA2880 STRB W8, [X20 + 0x43F]
	0x01CA2884 ADRP X8, 0x22AB000
	0x01CA2888 LDR X8, [X8 + 0x480]
	0x01CA288C MOVZ W2, 0x1
	0x01CA2890 MOV X0, X19
	0x01CA2894 MOV V3.16B, V11.16B
	0x01CA2898 LDR X8, [X8]
	0x01CA289C MOV V4.16B, V12.16B
	0x01CA28A0 MOV V5.16B, V13.16B
	0x01CA28A4 MOV V6.16B, V14.16B
	0x01CA28A8 LDR X8, [X8 + 0xB8]
	0x01CA28AC MOV W3, W31
	0x01CA28B0 LDP S0, S1, [X8]
	0x01CA28B4 LDR V2, [X8 + 0x8]
	0x01CA28B8 STR S0, [X31 + 0x10]
	0x01CA28BC STP S1, S2, [X31 + 0x14]
	0x01CA28C0 STP S1, S2, [X31 + 0x4]
	0x01CA28C4 STR S0, [X31]
	0x01CA28C8 MOV V0.16B, V8.16B
	0x01CA28CC MOV V1.16B, V9.16B
	0x01CA28D0 MOV V2.16B, V10.16B
	0x01CA28D4 BL 0x1C9F46C
	0x01CA28D8 LDP X20, X19, [X31 + 0x70]
	0x01CA28DC LDP X22, X21, [X31 + 0x60]
	0x01CA28E0 LDR X30, [X31 + 0x58]
	0x01CA28E4 LDP D9, D8, [X31 + 0x48]
	0x01CA28E8 LDP D11, D10, [X31 + 0x38]
	0x01CA28EC LDP D13, D12, [X31 + 0x28]
	0x01CA28F0 LDR V14, [X31 + 0x20]
	0x01CA28F4 ADD X31, X31, 0x80
	0x01CA28F8 RET
	0x01CA28FC BL 0x1B6EA1C
	0x01CA2900 SUB X31, X31, 0x90
	0x01CA2904 STR D10, [X31 + 0x50]
	0x01CA2908 STP D9, D8, [X31 + 0x60]
	0x01CA290C STP X30, X21, [X31 + 0x70]
	0x01CA2910 STP X20, X19, [X31 + 0x80]
	0x01CA2914 MRS X20, 0xC000
	0x01CA2918 LDR X8, [X20 + 0x28]
	0x01CA291C ADRP X21, 0x2581000
	0x01CA2920 MOV X19, X0
	0x01CA2924 STR X8, [X31 + 0x48]
	0x01CA2928 LDRB W8, [X21 + 0x426]
	0x01CA292C TBNZ X8, 0x0, 0x1CA2950
	0x01CA2930 ADRP X0, 0x22AC000
	0x01CA2934 LDR X0, [X0 + 0x3C8]
	0x01CA2938 BL 0x1B6E7F0
	0x01CA293C ADRP X0, 0x22AC000
	0x01CA2940 LDR X0, [X0 + 0x4B8]
	0x01CA2944 BL 0x1B6E7F0
	0x01CA2948 MOVZ W8, 0x1
	0x01CA294C STRB W8, [X21 + 0x426]
	0x01CA2950 MOV X0, X19
	0x01CA2954 MOV X1, X31
	0x01CA2958 STRB W31, [X31 + 0x6]
	0x01CA295C STRH W31, [X31 + 0x4]
	0x01CA2960 BL 0x1D65284
	0x01CA2964 ADD X8, X31, 0x28
	0x01CA2968 MOV X0, X19
	0x01CA296C BL 0x1C9E3E8
	0x01CA2970 LDRB W8, [X31 + 0x44]
	0x01CA2974 TBNZ X8, 0x0, 0x1CA2A04
	0x01CA2978 LDR X0, [X19 + 0x40]
	0x01CA297C CBZ X0, 0x1CA2A04
	0x01CA2980 LDRB W8, [X0 + 0x60]
	0x01CA2984 TBNZ X8, 0x1, 0x1CA2A04
	0x01CA2988 MOV X1, X31
	0x01CA298C BL 0x1D9E780
	0x01CA2990 TBZ X0, 0x0, 0x1CA2A04
	0x01CA2994 MOV X0, X19
	0x01CA2998 MOV X1, X31
	0x01CA299C BL 0x3A9B084
	0x01CA29A0 CBZ X0, 0x1CA2AE0
	0x01CA29A4 MOV X1, X31
	0x01CA29A8 BL 0x3AA7658
	0x01CA29AC MOV X0, X19
	0x01CA29B0 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 NotImplemented "Instruction MRS not yet implemented."
	007 Move X8, [X21+40]
	008 Move X19, X0
	009 Move [X31+40], X8
	010 Add X8, X31, 8
	011 Call GrabbableItem.get_spawnInfo, X0
	012 Move W8, [X31+36]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {74}
	017 Move X0, X19
	018 Move X1, X31
	019 Call Component.get_transform, X0
	020 Move X20, X0
	021 Add X8, X31, 8
	022 Move X0, X19
	023 Call GrabbableItem.get_spawnInfo, X0
	024 Compare X20, 0
	025 JumpIfEqual {100}
	026 Move S0, [X31+8]
	027 Move S1, [X31+12]
	028 Move V2, [X31+16]
	029 Move X0, X20
	030 Move X1, X31
	031 Call Transform.set_position, X0, X1
	032 Move X0, X19
	033 Move X1, X31
	034 Call Component.get_transform, X0
	035 Move X20, X0
	036 Add X8, X31, 8
	037 Move X0, X19
	038 Call GrabbableItem.get_spawnInfo, X0
	039 Compare X20, 0
	040 JumpIfEqual {100}
	041 Move S0, [X31+20]
	042 Move S1, [X31+24]
	043 Move S2, [X31+28]
	044 Move S3, [X31+32]
	045 Move X0, X20
	046 Move X1, X31
	047 Call Transform.set_rotation, X0, X1
	048 Move X20, [X19+304]
	049 Move X0, X19
	050 Move X1, X31
	051 Call Component.get_transform, X0
	052 Compare X0, 0
	053 JumpIfEqual {100}
	054 Move X1, X31
	055 Call Transform.get_position, X0
	056 Compare X20, 0
	057 JumpIfEqual {100}
	058 Move X0, X20
	059 Move X1, X31
	060 Call Rigidbody.set_position, X0, X1
	061 Move X20, [X19+304]
	062 Move X0, X19
	063 Move X1, X31
	064 Call Component.get_transform, X0
	065 Compare X0, 0
	066 JumpIfEqual {100}
	067 Move X1, X31
	068 Call Transform.get_rotation, X0
	069 Compare X20, 0
	070 JumpIfEqual {100}
	071 Move X0, X20
	072 Move X1, X31
	073 Call Rigidbody.set_rotation, X0, X1
	074 Move X0, X19
	075 Call GrabbableItem.InitSpawn, X0
	076 Move X0, [X19+312]
	077 Compare X0, 0
	078 JumpIfEqual {100}
	079 Move X8, [X0]
	080 Move W1, W31
	081 Move X9, [X8+504]
	082 Move X2, [X8+512]
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move X8, [X19+416]
	085 Compare X8, 0
	086 JumpIfEqual {91}
	087 Move X9, [X8+24]
	088 Move X0, [X8+64]
	089 Move X1, [X8+40]
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move X8, [X21+40]
	092 Move X9, [X31+40]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X20, [X31+64]
	095 Move X19, [X31+72]
	096 Move X30, [X31+48]
	097 Move X21, [X31+56]
	098 Add X31, X31, 80
	099 Return 
	100 Call 0x1B6FA1C
	101 Call 0x3D1A880

Method: System.Void RPC_HandleItemSold()

Disassembly:
	0x01CA29B4 MOV V8.16B, V0.16B
	0x01CA29B8 MOV V9.16B, V1.16B
	0x01CA29BC MOV V10.16B, V2.16B
	0x01CA29C0 BL 0x3A9B084
	0x01CA29C4 CBZ X0, 0x1CA2AE0
	0x01CA29C8 MOV X1, X31
	0x01CA29CC BL 0x3AA5FBC
	0x01CA29D0 MOVZ W8, 0x1
	0x01CA29D4 STRB W8, [X31 + 0x24]
	0x01CA29D8 LDRH W8, [X31 + 0x4]
	0x01CA29DC ADD X1, X31, 0x8
	0x01CA29E0 MOV X0, X19
	0x01CA29E4 STP S8, S9, [X31 + 0x8]
	0x01CA29E8 STURH W8, [X31 + 0x25]
	0x01CA29EC LDRB W8, [X31 + 0x6]
	0x01CA29F0 STP S10, S0, [X31 + 0x10]
	0x01CA29F4 STP S1, S2, [X31 + 0x18]
	0x01CA29F8 STR S3, [X31 + 0x20]
	0x01CA29FC STRB W8, [X31 + 0x27]
	0x01CA2A00 BL 0x1C9E44C
	0x01CA2A04 LDR X0, [X19 + 0x40]
	0x01CA2A08 CBZ X0, 0x1CA2A58
	0x01CA2A0C LDRB W8, [X0 + 0x60]
	0x01CA2A10 TBNZ X8, 0x1, 0x1CA2A58
	0x01CA2A14 MOV X1, X31
	0x01CA2A18 BL 0x1D9E780
	0x01CA2A1C TBZ X0, 0x0, 0x1CA2A58
	0x01CA2A20 MOV X0, X19
	0x01CA2A24 BL 0x1CA14B0
	0x01CA2A28 LDR X8, [X19 + 0x80]
	0x01CA2A2C CBZ X8, 0x1CA2AE0
	0x01CA2A30 LDRB W8, [X8 + 0x28]
	0x01CA2A34 TBZ X8, 0x2, 0x1CA2A58
	0x01CA2A38 LDR X0, [X19 + 0x38]
	0x01CA2A3C MOVZ W8, 0x43960000
	0x01CA2A40 FMOV S0, W8
	0x01CA2A44 MOV X1, X31
	0x01CA2A48 BL 0x1D9CEB8
	0x01CA2A4C AND X1, X0, 0x0
	0x01CA2A50 MOV X0, X19
	0x01CA2A54 BL 0x1C9E510
	0x01CA2A58 MOV X0, X19
	0x01CA2A5C BL 0x1C9F768
	0x01CA2A60 LDR X8, [X19 + 0x80]
	0x01CA2A64 CBZ X8, 0x1CA2AE0
	0x01CA2A68 LDR W8, [X8 + 0x28]
	0x01CA2A6C CMP W8, 0x2
	0x01CA2A70 B.NE 0x1CA2AB0
	0x01CA2A74 ADRP X21, 0x22AC000
	0x01CA2A78 LDR X21, [X21 + 0x3C8]
	0x01CA2A7C LDR X0, [X21]
	0x01CA2A80 LDR W8, [X0 + 0xE0]
	0x01CA2A84 CBNZ W8, 0x1CA2A90
	0x01CA2A88 BL 0x1B6E8F8
	0x01CA2A8C LDR X0, [X21]
	0x01CA2A90 LDR X8, [X0 + 0xB8]
	0x01CA2A94 LDR X0, [X8]
	0x01CA2A98 CBZ X0, 0x1CA2AE0
	0x01CA2A9C ADRP X8, 0x22AC000
	0x01CA2AA0 LDR X8, [X8 + 0x4B8]
	0x01CA2AA4 MOV X1, X19
	0x01CA2AA8 LDR X2, [X8]
	0x01CA2AAC BL 0x2BD43FC
	0x01CA2AB0 MOVZ W8, 0x1
	0x01CA2AB4 STRB W8, [X19 + 0x184]
	0x01CA2AB8 LDR X8, [X20 + 0x28]
	0x01CA2ABC LDR X9, [X31 + 0x48]
	0x01CA2AC0 CMP X8, X9
	0x01CA2AC4 B.NE 0x1CA2AE4
	0x01CA2AC8 LDP X20, X19, [X31 + 0x80]
	0x01CA2ACC LDP X30, X21, [X31 + 0x70]
	0x01CA2AD0 LDP D9, D8, [X31 + 0x60]
	0x01CA2AD4 LDR V10, [X31 + 0x50]
	0x01CA2AD8 ADD X31, X31, 0x90
	0x01CA2ADC RET
	0x01CA2AE0 BL 0x1B6EA1C
	0x01CA2AE4 BL 0x3D19880
	0x01CA2AE8 STR X30, [X31 - 0x30]!
	0x01CA2AEC STP X22, X21, [X31 + 0x10]
	0x01CA2AF0 STP X20, X19, [X31 + 0x20]
	0x01CA2AF4 ADRP X22, 0x2581000
	0x01CA2AF8 LDRB W8, [X22 + 0x427]
	0x01CA2AFC MOV W21, W2
	0x01CA2B00 MOV X20, X1
	0x01CA2B04 MOV X19, X0
	0x01CA2B08 TBNZ X8, 0x0, 0x1CA2B2C
	0x01CA2B0C ADRP X0, 0x22AC000
	0x01CA2B10 LDR X0, [X0 + 0x3C8]
	0x01CA2B14 BL 0x1B6E7F0
	0x01CA2B18 ADRP X0, 0x22AC000
	0x01CA2B1C LDR X0, [X0 + 0x408]
	0x01CA2B20 BL 0x1B6E7F0
	0x01CA2B24 MOVZ W8, 0x1
	0x01CA2B28 STRB W8, [X22 + 0x427]
	0x01CA2B2C AND W2, W21, 0x1
	0x01CA2B30 MOV X0, X19
	0x01CA2B34 MOV X1, X20
	0x01CA2B38 MOV X3, X31
	0x01CA2B3C BL 0x1D65288
	0x01CA2B40 LDR X8, [X19 + 0x1B0]
	0x01CA2B44 CBZ X8, 0x1CA2B5C
	0x01CA2B48 LDR X9, [X8 + 0x18]
	0x01CA2B4C LDR X0, [X8 + 0x40]
	0x01CA2B50 LDR X2, [X8 + 0x28]
	0x01CA2B54 MOV X1, X20
	0x01CA2B58 BLR X9
	0x01CA2B5C LDR X8, [X19 + 0x80]
	0x01CA2B60 CBZ X8, 0x1CA2BC8
	0x01CA2B64 LDR W8, [X8 + 0x28]
	0x01CA2B68 CMP W8, 0x2
	0x01CA2B6C B.NE 0x1CA2BB8
	0x01CA2B70 ADRP X20, 0x22AC000
	0x01CA2B74 LDR X20, [X20 + 0x3C8]
	0x01CA2B78 LDR X0, [X20]
	0x01CA2B7C LDR W8, [X0 + 0xE0]
	0x01CA2B80 CBNZ W8, 0x1CA2B8C
	0x01CA2B84 BL 0x1B6E8F8
	0x01CA2B88 LDR X0, [X20]
	0x01CA2B8C LDR X8, [X0 + 0xB8]
	0x01CA2B90 LDR X0, [X8]
	0x01CA2B94 CBZ X0, 0x1CA2BC8
	0x01CA2B98 ADRP X8, 0x22AC000
	0x01CA2B9C LDR X8, [X8 + 0x408]
	0x01CA2BA0 MOV X1, X19
	0x01CA2BA4 LDP X20, X19, [X31 + 0x20]
	0x01CA2BA8 LDP X22, X21, [X31 + 0x10]
	0x01CA2BAC LDR X2, [X8]
	0x01CA2BB0 LDR X30, [X31], #0x30
	0x01CA2BB4 B 0x2BD3B48
	0x01CA2BB8 LDP X20, X19, [X31 + 0x20]
	0x01CA2BBC LDP X22, X21, [X31 + 0x10]
	0x01CA2BC0 LDR X30, [X31], #0x30
	0x01CA2BC4 RET
	0x01CA2BC8 BL 0x1B6EA1C
	0x01CA2BCC LDR X8, [X0 + 0x190]
	0x01CA2BD0 CBZ X8, 0x1CA2BE4
	0x01CA2BD4 LDR X2, [X8 + 0x18]
	0x01CA2BD8 LDR X0, [X8 + 0x40]
	0x01CA2BDC LDR X1, [X8 + 0x28]
	0x01CA2BE0 BR X2
	0x01CA2BE4 RET
	0x01CA2BE8 LDR X8, [X0 + 0x198]
	0x01CA2BEC CBZ X8, 0x1CA2C00
	0x01CA2BF0 LDR X2, [X8 + 0x18]
	0x01CA2BF4 LDR X0, [X8 + 0x40]
	0x01CA2BF8 LDR X1, [X8 + 0x28]
	0x01CA2BFC BR X2
	0x01CA2C00 RET
	0x01CA2C04 STR D10, [X31 - 0x30]!
	0x01CA2C08 STP D9, D8, [X31 + 0x8]
	0x01CA2C0C STR X30, [X31 + 0x18]
	0x01CA2C10 STP X20, X19, [X31 + 0x20]
	0x01CA2C14 MOV X19, X0
	0x01CA2C18 LDR X0, [X0 + 0x130]
	0x01CA2C1C CBZ X0, 0x1CA2CCC
	0x01CA2C20 MOV X1, X31
	0x01CA2C24 BL 0x3AF6B78
	0x01CA2C28 LDR X0, [X19 + 0x130]
	0x01CA2C2C CBZ X0, 0x1CA2CCC
	0x01CA2C30 MOV X1, X31
	0x01CA2C34 BL 0x3AF6CB0
	0x01CA2C38 LDR X0, [X19 + 0x130]
	0x01CA2C3C CBZ X0, 0x1CA2CCC
	0x01CA2C40 MOV X1, X31
	0x01CA2C44 BL 0x3AF646C
	0x01CA2C48 ADRP X20, 0x2581000
	0x01CA2C4C LDRB W8, [X20 + 0x442]
	0x01CA2C50 MOV V8.16B, V0.16B
	0x01CA2C54 MOV V9.16B, V1.16B
	0x01CA2C58 MOV V10.16B, V2.16B
	0x01CA2C5C CBNZ W8, 0x1CA2C74
	0x01CA2C60 ADRP X0, 0x22AB000
	0x01CA2C64 LDR X0, [X0 + 0x480]
	0x01CA2C68 BL 0x1B6E7F0
	0x01CA2C6C MOVZ W8, 0x1
	0x01CA2C70 STRB W8, [X20 + 0x442]
	0x01CA2C74 ADRP X8, 0x22AB000
	0x01CA2C78 LDR X8, [X8 + 0x480]
	0x01CA2C7C FMOV S5, 5
	0x01CA2C80 MOV X0, X31
	0x01CA2C84 LDR X8, [X8]
	0x01CA2C88 LDR X8, [X8 + 0xB8]
	0x01CA2C8C LDP S0, S1, [X8 + 0x18]
	0x01CA2C90 LDR V2, [X8 + 0x20]
	0x01CA2C94 FMUL S3, S0, S5
	0x01CA2C98 FMUL S4, S1, S5
	0x01CA2C9C FMUL S5, S2, S5
	0x01CA2CA0 MOV V0.16B, V8.16B
	0x01CA2CA4 MOV V1.16B, V9.16B
	0x01CA2CA8 MOV V2.16B, V10.16B
	0x01CA2CAC BL 0x1CA54EC
	0x01CA2CB0 LDR X20, [X19 + 0x130]
	0x01CA2CB4 MOV X0, X20
	0x01CA2CB8 BL 0x18F44E0
	0x01CA2CBC MOV X0, X20
	0x01CA2CC0 MOV X1, X31
	0x01CA2CC4 BL 0x3AF65A4
	0x01CA2CC8 STR X31, [X19 + 0x168]
	0x01CA2CCC BL 0x1B6EA1C
	0x01CA2CD0 LDR X8, [X0 + 0x190]
	0x01CA2CD4 CBZ X8, 0x1CA2CE8
	0x01CA2CD8 LDR X2, [X8 + 0x18]
	0x01CA2CDC LDR X0, [X8 + 0x40]
	0x01CA2CE0 LDR X1, [X8 + 0x28]
	0x01CA2CE4 BR X2
	0x01CA2CE8 RET
	0x01CA2CEC LDR X8, [X0 + 0x198]
	0x01CA2CF0 CBZ X8, 0x1CA2D04
	0x01CA2CF4 LDR X2, [X8 + 0x18]
	0x01CA2CF8 LDR X0, [X8 + 0x40]
	0x01CA2CFC LDR X1, [X8 + 0x28]
	0x01CA2D00 BR X2
	0x01CA2D04 RET
	0x01CA2D08 SUB X31, X31, 0xA0

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], D14
	003 Move [X31+40], D13
	004 Move [X31+48], D12
	005 Move [X31+56], D11
	006 Move [X31+64], D10
	007 Move [X31+72], D9
	008 Move [X31+80], D8
	009 Move [X31+88], X30
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X20, 0x2582000
	015 Move W8, [X20+1056]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x22AD000
	022 Move X0, [X0+448]
	023 Call 0x1B6F7F0
	024 Move X0, 0x22AD000
	025 Move X0, [X0+1168]
	026 Call 0x1B6F7F0
	027 Move W8, 1
	028 Move [X20+1056], W8
	029 Move W8, [X19+88]
	030 Compare W8, 0
	031 JumpIfEqual {144}
	032 Move [X19+88], W31
	033 Move X0, X19
	034 Call GrabbableItem.get_attachedAnchorId, X0
	035 Move X20, X0
	036 Move X0, X31
	037 Call NetworkBehaviourId.get_None
	038 Move X22, 0x2582000
	039 Move W8, [X22+1102]
	040 Move X21, X0
	041 Compare W8, 0
	042 JumpIfNotEqual {48}
	043 Move X0, 0x22AD000
	044 Move X0, [X0+488]
	045 Call 0x1B6F7F0
	046 Move W8, 1
	047 Move [X22+1102], W8
	048 Move X8, 0x22AD000
	049 Move X8, [X8+488]
	050 Move X0, [X8]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1B6F8F8
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X8, X21
	057 ShiftRight X8, 32
	058 And X8, X8, 0x7FFFFFFF
	059 Move X9, X20
	060 ShiftRight X9, 32
	061 And X9, X9, 0x7FFFFFFF
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X0, X19
	064 Call GrabbableItem.get_attachedAnchorId, X0
	065 Move X0, X19
	066 Move X1, X31
	067 Call Component.get_transform, X0
	068 Compare X0, 0
	069 JumpIfEqual {271}
	070 Move X1, X31
	071 Call Transform.get_position, X0
	072 Move X0, X19
	073 Move X1, X31
	074 Move V8, V0
	075 Move V9, V1
	076 Move V10, V2
	077 Call Component.get_transform, X0
	078 Compare X0, 0
	079 JumpIfEqual {271}
	080 Move X1, X31
	081 Call Transform.get_rotation, X0
	082 Move X20, 0x2582000
	083 Move W8, [X20+1087]
	084 Move V11, V0
	085 Move V12, V1
	086 Move V13, V2
	087 Move V14, V3
	088 Compare W8, 0
	089 JumpIfNotEqual {95}
	090 Move X0, 0x22AC000
	091 Move X0, [X0+1152]
	092 Call 0x1B6F7F0
	093 Move W8, 1
	094 Move [X20+1087], W8
	095 Move X8, 0x22AC000
	096 Move X8, [X8+1152]
	097 Move W2, 1
	098 Move X0, X19
	099 Move V3, V11
	100 Move X8, [X8]
	101 Move V4, V12
	102 Move V5, V13
	103 Move V6, V14
	104 Move X8, [X8+184]
	105 Move W3, W31
	106 Move S0, [X8]
	107 Move S1, [X8+4]
	108 Move V2, [X8+8]
	109 Move [X31+16], S0
	110 Move [X31+20], S1
	111 Move [X31+28], S2
	112 Move [X31+4], S1
	113 Move [X31+12], S2
	114 Move [X31], S0
	115 Move V0, V8
	116 Move V1, V9
	117 Move V2, V10
	118 Call GrabbableItem.ReleaseInternal, X0, X1, X2, X3, X4, X5, X6, X7
	119 Move X8, [X19+128]
	120 Compare X8, 0
	121 JumpIfEqual {271}
	122 Move W8, [X8+40]
	123 And W31, W8, 14
	124 Move X0, [X19+56]
	125 Compare X0, 0
	126 JumpIfEqual {271}
	127 Move X1, [X19+64]
	128 Move X20, [X31+112]
	129 Move X19, [X31+120]
	130 Move X22, [X31+96]
	131 Move X21, [X31+104]
	132 Move X30, [X31+88]
	133 Move D9, [X31+72]
	134 Move D8, [X31+80]
	135 Move D11, [X31+56]
	136 Move D10, [X31+64]
	137 Move D13, [X31+40]
	138 Move D12, [X31+48]
	139 Move V14, [X31+32]
	140 Move X2, X31
	141 Add X31, X31, 128
	142 Call NetworkRunner.Despawn, X0, X1
	143 Return 
	144 Move X20, 0x22AD000
	145 Move X20, [X20+448]
	146 Move X0, [X20]
	147 Move W8, [X0+224]
	148 Compare W8, 0
	149 JumpIfNotEqual {151}
	150 Call 0x1B6F8F8
	151 Move X0, X19
	152 Move X1, X31
	153 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	154 Move X0, [X19+56]
	155 Compare X0, 0
	156 JumpIfEqual {271}
	157 Move X1, X31
	158 Call NetworkRunner.get_Stage, X0
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Move X20, [X31+112]
	161 Move X19, [X31+120]
	162 Move X22, [X31+96]
	163 Move X21, [X31+104]
	164 Move X30, [X31+88]
	165 Move D9, [X31+72]
	166 Move D8, [X31+80]
	167 Move D11, [X31+56]
	168 Move D10, [X31+64]
	169 Move D13, [X31+40]
	170 Move D12, [X31+48]
	171 Move V14, [X31+32]
	172 Add X31, X31, 128
	173 Return 
	174 Move X0, [X19+64]
	175 Compare X0, 0
	176 JumpIfEqual {271}
	177 Move X1, X31
	178 Call NetworkObject.GetLocalAuthorityMask, X0
	179 And W31, W0, 7
	180 Move TEMP, X0
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfEqual {33}
	184 Move X8, [X19+56]
	185 Compare X8, 0
	186 JumpIfEqual {271}
	187 Move X0, [X8+80]
	188 Compare X0, 0
	189 JumpIfEqual {271}
	190 Move X1, X31
	191 Call Simulation.HasAnyActiveConnections, X0
	192 Move TEMP, X0
	193 And TEMP, TEMP, 1
	194 Compare TEMP, 1
	195 JumpIfNotEqual {160}
	196 Move X8, [X19+56]
	197 Compare X8, 0
	198 JumpIfEqual {271}
	199 Move X0, [X8+80]
	200 Move W1, 8
	201 Move X2, X31
	202 Call SimulationMessage.Allocate, X0, X1
	203 Move X20, X0
	204 Move W0, 1
	205 Move X1, X31
	206 Call Assert.Check, X0
	207 Move X8, [X19+64]
	208 Compare X8, 0
	209 JumpIfEqual {271}
	210 Move X8, [X8+32]
	211 Compare X8, 0
	212 JumpIfEqual {241}
	213 Move W0, [X8]
	214 Move X0, [X20]
	215 Move X19, [X19+64]
	216 Move W8, [X0+224]
	217 Compare W8, 0
	218 JumpIfNotEqual {220}
	219 Call 0x1B6F8F8
	220 Move X8, 0x22AD000
	221 Move X8, [X8+1168]
	222 Move X1, X19
	223 Move X20, [X31+112]
	224 Move X19, [X31+120]
	225 Move X22, [X31+96]
	226 Move X21, [X31+104]
	227 Move X0, [X8]
	228 Move X30, [X31+88]
	229 Move D9, [X31+72]
	230 Move D8, [X31+80]
	231 Move D11, [X31+56]
	232 Move D10, [X31+64]
	233 Move D13, [X31+40]
	234 Move D12, [X31+48]
	235 Move V14, [X31+32]
	236 Move W2, 7
	237 Move X3, X31
	238 Add X31, X31, 128
	239 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	240 Return 
	241 Move X0, X31
	242 Move W1, [X19+104]
	243 Move W2, 7
	244 Move X3, X31
	245 Call RpcHeader.Create, X0, X1, X2
	246 Move [X20+28], X0
	247 Compare X20, 0
	248 JumpIfEqual {271}
	249 Move W8, 64
	250 Move [X20+12], W8
	251 Move X0, [X19+56]
	252 Compare X0, 0
	253 JumpIfEqual {271}
	254 Move X1, X20
	255 Move X20, [X31+112]
	256 Move X19, [X31+120]
	257 Move X22, [X31+96]
	258 Move X21, [X31+104]
	259 Move X30, [X31+88]
	260 Move D9, [X31+72]
	261 Move D8, [X31+80]
	262 Move D11, [X31+56]
	263 Move D10, [X31+64]
	264 Move D13, [X31+40]
	265 Move D12, [X31+48]
	266 Move V14, [X31+32]
	267 Move X2, X31
	268 Add X31, X31, 128
	269 Call NetworkRunner.SendRpc, X0, X1
	270 Return 
	271 Call 0x1B6FA1C

Method: System.Void UpdatePlayersAlwaysInterested()

Disassembly:
	0x01CA2D0C STR D14, [X31 + 0x30]
	0x01CA2D10 STP D13, D12, [X31 + 0x38]
	0x01CA2D14 STP D11, D10, [X31 + 0x48]
	0x01CA2D18 STP D9, D8, [X31 + 0x58]
	0x01CA2D1C STR X30, [X31 + 0x68]
	0x01CA2D20 STP X24, X23, [X31 + 0x70]
	0x01CA2D24 STP X22, X21, [X31 + 0x80]
	0x01CA2D28 STP X20, X19, [X31 + 0x90]
	0x01CA2D2C ADRP X20, 0x2581000
	0x01CA2D30 LDRB W8, [X20 + 0x428]
	0x01CA2D34 MOV X19, X0
	0x01CA2D38 TBNZ X8, 0x0, 0x1CA2DB0
	0x01CA2D3C ADRP X0, 0x22AB000
	0x01CA2D40 LDR X0, [X0 + 0x5B0]
	0x01CA2D44 BL 0x1B6E7F0
	0x01CA2D48 ADRP X0, 0x22AB000
	0x01CA2D4C LDR X0, [X0 + 0x5B8]
	0x01CA2D50 BL 0x1B6E7F0
	0x01CA2D54 ADRP X0, 0x22AB000
	0x01CA2D58 LDR X0, [X0 + 0x5C0]
	0x01CA2D5C BL 0x1B6E7F0
	0x01CA2D60 ADRP X0, 0x22AB000
	0x01CA2D64 LDR X0, [X0 + 0x628]
	0x01CA2D68 BL 0x1B6E7F0
	0x01CA2D6C ADRP X0, 0x22AB000
	0x01CA2D70 LDR X0, [X0 + 0x478]
	0x01CA2D74 BL 0x1B6E7F0
	0x01CA2D78 ADRP X0, 0x22AC000
	0x01CA2D7C LDR X0, [X0 + 0x4C0]
	0x01CA2D80 BL 0x1B6E7F0
	0x01CA2D84 ADRP X0, 0x22AC000
	0x01CA2D88 LDR X0, [X0 + 0x4C8]
	0x01CA2D8C BL 0x1B6E7F0
	0x01CA2D90 ADRP X0, 0x22AC000
	0x01CA2D94 LDR X0, [X0 + 0x4D0]
	0x01CA2D98 BL 0x1B6E7F0
	0x01CA2D9C ADRP X0, 0x22AC000
	0x01CA2DA0 LDR X0, [X0 + 0x4D8]
	0x01CA2DA4 BL 0x1B6E7F0
	0x01CA2DA8 MOVZ W8, 0x1
	0x01CA2DAC STRB W8, [X20 + 0x428]
	0x01CA2DB0 MOV X0, X19
	0x01CA2DB4 MOV X1, X31
	0x01CA2DB8 STR X31, [X31 + 0x28]
	0x01CA2DBC STR W31, [X31 + 0x20]
	0x01CA2DC0 BL 0x1D65000
	0x01CA2DC4 LDR X0, [X19 + 0x40]
	0x01CA2DC8 CBZ X0, 0x1CA3278
	0x01CA2DCC LDRB W8, [X0 + 0x60]
	0x01CA2DD0 TBNZ X8, 0x1, 0x1CA3278
	0x01CA2DD4 MOV X1, X31
	0x01CA2DD8 BL 0x1D9E780
	0x01CA2DDC TBZ X0, 0x0, 0x1CA3278
	0x01CA2DE0 MOV X0, X19
	0x01CA2DE4 BL 0x1C9CA04
	0x01CA2DE8 ADRP X22, 0x22AB000
	0x01CA2DEC LDR X22, [X22 + 0x478]
	0x01CA2DF0 LDR X21, [X19 + 0x120]
	0x01CA2DF4 MOV W20, W0
	0x01CA2DF8 LDR X8, [X22]
	0x01CA2DFC LDR W9, [X8 + 0xE0]
	0x01CA2E00 CBNZ W9, 0x1CA2E0C
	0x01CA2E04 MOV X0, X8
	0x01CA2E08 BL 0x1B6E8F8
	0x01CA2E0C MOV X0, X21
	0x01CA2E10 MOV X1, X31
	0x01CA2E14 MOV X2, X31
	0x01CA2E18 BL 0x3A9D6EC
	0x01CA2E1C TBZ X20, 0x0, 0x1CA2FA4
	0x01CA2E20 TBZ X0, 0x0, 0x1CA3000
	0x01CA2E24 LDR X0, [X19 + 0x120]
	0x01CA2E28 CBZ X0, 0x1CA32A0
	0x01CA2E2C LDR X8, [X0 + 0x40]
	0x01CA2E30 CBZ X8, 0x1CA2E54
	0x01CA2E34 LDRB W9, [X8 + 0x60]
	0x01CA2E38 TBNZ X9, 0x1, 0x1CA2E54
	0x01CA2E3C MOV X0, X8
	0x01CA2E40 MOV X1, X31
	0x01CA2E44 BL 0x1D9E780
	0x01CA2E48 TBNZ X0, 0x0, 0x1CA2F38
	0x01CA2E4C LDR X0, [X19 + 0x120]
	0x01CA2E50 CBZ X0, 0x1CA32A0
	0x01CA2E54 LDR X20, [X19 + 0x130]
	0x01CA2E58 MOV X1, X31
	0x01CA2E5C BL 0x3A9B084
	0x01CA2E60 CBZ X0, 0x1CA32A0
	0x01CA2E64 MOV X1, X31
	0x01CA2E68 BL 0x3AA7658
	0x01CA2E6C CBZ X20, 0x1CA32A0
	0x01CA2E70 MOV X0, X20
	0x01CA2E74 MOV X1, X31
	0x01CA2E78 BL 0x3AF6C18
	0x01CA2E7C LDR X0, [X19 + 0x120]
	0x01CA2E80 CBZ X0, 0x1CA32A0
	0x01CA2E84 LDR X20, [X19 + 0x130]
	0x01CA2E88 MOV X1, X31
	0x01CA2E8C BL 0x3A9B084
	0x01CA2E90 CBZ X0, 0x1CA32A0
	0x01CA2E94 MOV X1, X31
	0x01CA2E98 BL 0x3AA5FBC
	0x01CA2E9C CBZ X20, 0x1CA32A0
	0x01CA2EA0 MOV X0, X20
	0x01CA2EA4 MOV X1, X31
	0x01CA2EA8 BL 0x3AF6D4C
	0x01CA2EAC ADRP X21, 0x2581000
	0x01CA2EB0 LDRB W8, [X21 + 0x43F]
	0x01CA2EB4 LDR X20, [X19 + 0x130]
	0x01CA2EB8 CBNZ W8, 0x1CA2ED0
	0x01CA2EBC ADRP X0, 0x22AB000
	0x01CA2EC0 LDR X0, [X0 + 0x480]
	0x01CA2EC4 BL 0x1B6E7F0
	0x01CA2EC8 MOVZ W8, 0x1
	0x01CA2ECC STRB W8, [X21 + 0x43F]
	0x01CA2ED0 CBZ X20, 0x1CA32A0
	0x01CA2ED4 ADRP X23, 0x22AB000
	0x01CA2ED8 LDR X23, [X23 + 0x480]
	0x01CA2EDC MOV X0, X20
	0x01CA2EE0 MOV X1, X31
	0x01CA2EE4 LDR X8, [X23]
	0x01CA2EE8 LDR X8, [X8 + 0xB8]
	0x01CA2EEC LDP S1, S2, [X8 + 0x4]
	0x01CA2EF0 LDR V0, [X8]
	0x01CA2EF4 BL 0x3AF650C
	0x01CA2EF8 LDRB W8, [X21 + 0x43F]
	0x01CA2EFC LDR X20, [X19 + 0x130]
	0x01CA2F00 CBNZ W8, 0x1CA2F18
	0x01CA2F04 ADRP X0, 0x22AB000
	0x01CA2F08 LDR X0, [X0 + 0x480]
	0x01CA2F0C BL 0x1B6E7F0
	0x01CA2F10 MOVZ W8, 0x1
	0x01CA2F14 STRB W8, [X21 + 0x43F]
	0x01CA2F18 CBZ X20, 0x1CA32A0
	0x01CA2F1C LDR X8, [X23]
	0x01CA2F20 MOV X0, X20
	0x01CA2F24 MOV X1, X31
	0x01CA2F28 LDR X8, [X8 + 0xB8]
	0x01CA2F2C LDP S1, S2, [X8 + 0x4]
	0x01CA2F30 LDR V0, [X8]
	0x01CA2F34 BL 0x3AF6644
	0x01CA2F38 LDR X8, [X19 + 0x120]
	0x01CA2F3C CBZ X8, 0x1CA32A0
	0x01CA2F40 LDR X0, [X22]
	0x01CA2F44 LDR X20, [X8 + 0x40]
	0x01CA2F48 LDR W9, [X0 + 0xE0]
	0x01CA2F4C CBNZ W9, 0x1CA2F54
	0x01CA2F50 BL 0x1B6E8F8
	0x01CA2F54 MOV X0, X20
	0x01CA2F58 MOV X1, X31
	0x01CA2F5C MOV X2, X31
	0x01CA2F60 BL 0x3AA0AF0
	0x01CA2F64 TBNZ X0, 0x0, 0x1CA3104
	0x01CA2F68 LDR X8, [X19 + 0x120]
	0x01CA2F6C CBZ X8, 0x1CA32A0
	0x01CA2F70 LDR X0, [X8 + 0x40]
	0x01CA2F74 CBZ X0, 0x1CA32A0
	0x01CA2F78 MOV X1, X31
	0x01CA2F7C BL 0x1D9E5D0
	0x01CA2F80 TBZ X0, 0x0, 0x1CA3104
	0x01CA2F84 LDR X8, [X19 + 0x120]
	0x01CA2F88 CBZ X8, 0x1CA32A0
	0x01CA2F8C LDR X9, [X8 + 0x40]
	0x01CA2F90 CBZ X9, 0x1CA3034
	0x01CA2F94 LDR X9, [X9 + 0x20]
	0x01CA2F98 CBZ X9, 0x1CA3034
	0x01CA2F9C LDR W23, [X9]
	0x01CA2FA0 B 0x1CA3038
	0x01CA2FA4 TBZ X0, 0x0, 0x1CA2FB0
	0x01CA2FA8 MOV X0, X19
	0x01CA2FAC BL 0x1C9F768
	0x01CA2FB0 MOV X0, X19
	0x01CA2FB4 BL 0x1C9DF64
	0x01CA2FB8 STR X0, [X31 + 0x28]
	0x01CA2FBC ADD X0, X31, 0x28
	0x01CA2FC0 MOV X1, X31
	0x01CA2FC4 BL 0x1D680F0
	0x01CA2FC8 TBNZ X0, 0x0, 0x1CA3264
	0x01CA2FCC LDR X8, [X19 + 0x80]
	0x01CA2FD0 CBZ X8, 0x1CA32A0
	0x01CA2FD4 MOV X0, X19
	0x01CA2FD8 BL 0x1C9E4B0
	0x01CA2FDC STR W0, [X31 + 0x20]
	0x01CA2FE0 LDR X1, [X19 + 0x38]
	0x01CA2FE4 ADD X0, X31, 0x20
	0x01CA2FE8 MOV X2, X31
	0x01CA2FEC BL 0x1D9CBCC
	0x01CA2FF0 TBZ X0, 0x0, 0x1CA3264
	0x01CA2FF4 MOV X0, X19
	0x01CA2FF8 BL 0x1CA32A4
	0x01CA2FFC B 0x1CA3264
	0x01CA3000 MOV X0, X19
	0x01CA3004 BL 0x1C9F768
	0x01CA3008 LDR X0, [X22]
	0x01CA300C LDR X20, [X19 + 0x120]
	0x01CA3010 LDR W8, [X0 + 0xE0]
	0x01CA3014 CBNZ W8, 0x1CA301C
	0x01CA3018 BL 0x1B6E8F8
	0x01CA301C MOV X0, X20
	0x01CA3020 MOV X1, X31
	0x01CA3024 MOV X2, X31
	0x01CA3028 BL 0x3AA0AF0
	0x01CA302C TBNZ X0, 0x0, 0x1CA31AC
	0x01CA3030 B 0x1CA3264
	0x01CA3034 MOV W23, W31
	0x01CA3038 LDR W24, [X8 + 0x68]
	0x01CA303C MOV X0, X19
	0x01CA3040 BL 0x1C99A60
	0x01CA3044 ADRP X21, 0x2580000
	0x01CA3048 LDRB W8, [X21 + 0x44E]
	0x01CA304C MOV X20, X0
	0x01CA3050 CBNZ W8, 0x1CA3068
	0x01CA3054 ADRP X0, 0x22AB000
	0x01CA3058 LDR X0, [X0 + 0x1E8]
	0x01CA305C BL 0x1B6E7F0
	0x01CA3060 MOVZ W8, 0x1
	0x01CA3064 STRB W8, [X21 + 0x44E]
	0x01CA3068 ADRP X22, 0x22AB000
	0x01CA306C LDR X22, [X22 + 0x1E8]
	0x01CA3070 LDR X0, [X22]
	0x01CA3074 LDR W8, [X0 + 0xE0]
	0x01CA3078 CBNZ W8, 0x1CA3080
	0x01CA307C BL 0x1B6E8F8
	0x01CA3080 CMP W23, W20
	0x01CA3084 B.NE 0x1CA3264
	0x01CA3088 UBFM X8, X20, 0x20, 0x3F
	0x01CA308C CMP W24, W8
	0x01CA3090 B.NE 0x1CA3264
	0x01CA3094 LDR X0, [X19 + 0x120]
	0x01CA3098 CBZ X0, 0x1CA32A0
	0x01CA309C BL 0x1C98D1C
	0x01CA30A0 LDR X8, [X19 + 0x40]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X19, 0x2582000
	012 Move W8, [X19+1057]
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x22AD000
	019 Move X0, [X0+1136]
	020 Call 0x1B6F7F0
	021 Move X0, 0x22AD000
	022 Move X0, [X0+1176]
	023 Call 0x1B6F7F0
	024 Move X0, 0x22AD000
	025 Move X0, [X0+1184]
	026 Call 0x1B6F7F0
	027 Move X0, 0x22AD000
	028 Move X0, [X0+1144]
	029 Call 0x1B6F7F0
	030 Move X0, 0x22AD000
	031 Move X0, [X0+1192]
	032 Call 0x1B6F7F0
	033 Move W8, 1
	034 Move [X19+1057], W8
	035 Move X0, [X20+64]
	036 Compare X0, 0
	037 JumpIfEqual {191}
	038 Move W8, [X0+96]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 2
	041 Compare TEMP, 2
	042 JumpIfEqual {191}
	043 Move X1, X31
	044 Call NetworkObject.get_HasStateAuthority, X0
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {191}
	049 Move X0, [X20+56]
	050 Compare X0, 0
	051 JumpIfEqual {203}
	052 Move X1, X31
	053 Call NetworkRunner.get_ActivePlayers, X0
	054 Compare X0, 0
	055 JumpIfEqual {203}
	056 Move X10, 0x22AD000
	057 Move X8, [X0]
	058 Move X10, [X10+1176]
	059 Move X19, X0
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Move X1, [X10]
	062 Compare X9, 0
	063 JumpIfEqual {70}
	064 Move X10, [X8+176]
	065 Add X10, X10, 8
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Subtract X9, X9, 1
	069 Add X10, X10, 16
	070 Move X0, X19
	071 Move W2, W31
	072 Call 0x1BB5284
	073 NotImplemented "Instruction LDRSW not yet implemented."
	074 Add X8, X8, X9
	075 Add X0, X8, 312
	076 Move X8, [X0]
	077 Move X1, [X0+8]
	078 Move X0, X19
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move X19, X0
	081 Compare X0, 0
	082 JumpIfEqual {204}
	083 Move X25, 0x22AD000
	084 Move X26, 0x22AD000
	085 Move X27, 0x22AD000
	086 Move X25, [X25+1144]
	087 Move X26, [X26+1184]
	088 Move X27, [X27+1192]
	089 Move X8, [X19]
	090 Move X1, [X25]
	091 NotImplemented "Instruction LDRH not yet implemented."
	092 Compare X9, 0
	093 JumpIfEqual {100}
	094 Move X10, [X8+176]
	095 Add X10, X10, 8
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract X9, X9, 1
	099 Add X10, X10, 16
	100 Move X0, X19
	101 Move W2, W31
	102 Call 0x1BB5284
	103 NotImplemented "Instruction LDRSW not yet implemented."
	104 Add X8, X8, X9
	105 Add X0, X8, 312
	106 Move X8, [X0]
	107 Move X1, [X0+8]
	108 Move X0, X19
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfNotEqual {163}
	114 Move X8, [X19]
	115 Move X1, [X26]
	116 NotImplemented "Instruction LDRH not yet implemented."
	117 Compare X9, 0
	118 JumpIfEqual {125}
	119 Move X10, [X8+176]
	120 Add X10, X10, 8
	121 NotImplemented "Instruction LDUR not yet implemented."
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Subtract X9, X9, 1
	124 Add X10, X10, 16
	125 Move X0, X19
	126 Move W2, W31
	127 Call 0x1BB5284
	128 NotImplemented "Instruction LDRSW not yet implemented."
	129 Add X8, X8, X9
	130 Add X0, X8, 312
	131 Move X8, [X0]
	132 Move X1, [X0+8]
	133 Move X0, X19
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Move X21, [X20+56]
	136 Compare X21, 0
	137 JumpIfEqual {202}
	138 Move X23, [X20+64]
	139 Move X22, X0
	140 Move X0, X21
	141 Move X1, X31
	142 Call NetworkRunner.get_LocalPlayer, X0
	143 Move X24, X0
	144 Move X0, [X27]
	145 Move W8, [X0+224]
	146 Compare W8, 0
	147 JumpIfNotEqual {149}
	148 Call 0x1B6F8F8
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move W3, 1
	151 Move X0, [X27]
	152 Move W8, [X0+224]
	153 Compare W8, 0
	154 JumpIfNotEqual {156}
	155 Call 0x1B6F8F8
	156 Add W31, W22, 1
	157 NotImplemented "Instruction CSET not yet implemented."
	158 And X1, X22, 0
	159 Move X0, X21
	160 Move X2, X23
	161 Move X4, X31
	162 Call NetworkRunner.SetPlayerAlwaysInterested, X0, X1, X2, X3
	163 Move X20, X31
	164 Compare X19, 0
	165 JumpIfEqual {189}
	166 Move X10, 0x22AD000
	167 Move X8, [X19]
	168 Move X10, [X10+1136]
	169 NotImplemented "Instruction LDRH not yet implemented."
	170 Move X1, [X10]
	171 Compare X9, 0
	172 JumpIfEqual {179}
	173 Move X10, [X8+176]
	174 Add X10, X10, 8
	175 NotImplemented "Instruction LDUR not yet implemented."
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Subtract X9, X9, 1
	178 Add X10, X10, 16
	179 Move X0, X19
	180 Move W2, W31
	181 Call 0x1BB5284
	182 NotImplemented "Instruction LDRSW not yet implemented."
	183 Add X8, X8, X9
	184 Add X0, X8, 312
	185 Move X8, [X0]
	186 Move X1, [X0+8]
	187 Move X0, X19
	188 NotImplemented "Instruction BLR not yet implemented."
	189 Compare X20, 0
	190 JumpIfNotEqual {205}
	191 Move X20, [X31+64]
	192 Move X19, [X31+72]
	193 Move X22, [X31+48]
	194 Move X21, [X31+56]
	195 Move X24, [X31+32]
	196 Move X23, [X31+40]
	197 Move X26, [X31+16]
	198 Move X25, [X31+24]
	199 Move X30, [X31+80]
	200 Move X27, [X31+88]
	201 Return 
	202 Call 0x1B6FA1C
	203 Call 0x1B6FA1C
	204 Call 0x1B6FA1C
	205 Move X0, X20
	206 Call 0x1B6FA14
	207 Move X21, X0
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Move X0, X21
	210 Call 0x3D1A840
	211 Move X20, [X0]
	212 Call 0x3D1A850
	213 Move X20, X31
	214 Move X21, X0
	215 Compare X19, 0
	216 JumpIfEqual {240}
	217 Move X10, 0x22AC000
	218 Move X8, [X19]
	219 Move X10, [X10+1136]
	220 NotImplemented "Instruction LDRH not yet implemented."
	221 Move X1, [X10]
	222 Compare X9, 0
	223 JumpIfEqual {230}
	224 Move X10, [X8+176]
	225 Add X10, X10, 8
	226 NotImplemented "Instruction LDUR not yet implemented."
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Subtract X9, X9, 1
	229 Add X10, X10, 16
	230 Move X0, X19
	231 Move W2, W31
	232 Call 0x1BB5284
	233 NotImplemented "Instruction LDRSW not yet implemented."
	234 Add X8, X8, X9
	235 Add X0, X8, 312
	236 Move X8, [X0]
	237 Move X1, [X0+8]
	238 Move X0, X19
	239 NotImplemented "Instruction BLR not yet implemented."
	240 Compare X20, 0
	241 JumpIfNotEqual {244}
	242 Move X0, X21
	243 Call 0x1C8518C
	244 Move X0, X20
	245 Call 0x1B6FA14
	246 Call 0x18F56A8

Method: System.Void StateAuthorityChanged()

Disassembly:
	0x01CA30A4 MOV X20, X0
	0x01CA30A8 CBZ X8, 0x1CA30BC
	0x01CA30AC LDR X8, [X8 + 0x20]
	0x01CA30B0 CBZ X8, 0x1CA30BC
	0x01CA30B4 LDR W23, [X8]
	0x01CA30B8 B 0x1CA30C0
	0x01CA30BC MOV W23, W31
	0x01CA30C0 LDRB W8, [X21 + 0x44E]
	0x01CA30C4 LDR W24, [X19 + 0x68]
	0x01CA30C8 CBNZ W8, 0x1CA30E0
	0x01CA30CC ADRP X0, 0x22AB000
	0x01CA30D0 LDR X0, [X0 + 0x1E8]
	0x01CA30D4 BL 0x1B6E7F0
	0x01CA30D8 MOVZ W8, 0x1
	0x01CA30DC STRB W8, [X21 + 0x44E]
	0x01CA30E0 LDR X0, [X22]
	0x01CA30E4 LDR W8, [X0 + 0xE0]
	0x01CA30E8 CBNZ W8, 0x1CA30F0
	0x01CA30EC BL 0x1B6E8F8
	0x01CA30F0 CMP W23, W20
	0x01CA30F4 B.NE 0x1CA3104
	0x01CA30F8 UBFM X8, X20, 0x20, 0x3F
	0x01CA30FC CMP W24, W8
	0x01CA3100 B.EQ 0x1CA3264
	0x01CA3104 ADRP X8, 0x22AA000
	0x01CA3108 LDR X8, [X8 + 0x5C0]
	0x01CA310C LDR X0, [X8]
	0x01CA3110 BL 0x1B6EA0C
	0x01CA3114 ADRP X8, 0x22AA000
	0x01CA3118 LDR X8, [X8 + 0x5B8]
	0x01CA311C MOV X20, X0
	0x01CA3120 LDR X1, [X8]
	0x01CA3124 BL 0x28F9A14
	0x01CA3128 LDR X0, [X19 + 0x80]
	0x01CA312C CBZ X0, 0x1CA32A0
	0x01CA3130 MOV X1, X31
	0x01CA3134 BL 0x3AA0C88
	0x01CA3138 CBZ X20, 0x1CA32A0
	0x01CA313C ADRP X8, 0x22AB000
	0x01CA3140 ADRP X9, 0x22AA000
	0x01CA3144 LDR X8, [X8 + 0x4D0]
	0x01CA3148 LDR X9, [X9 + 0x5B0]
	0x01CA314C MOV X2, X0
	0x01CA3150 MOV X0, X20
	0x01CA3154 LDR X1, [X8]
	0x01CA3158 LDR X3, [X9]
	0x01CA315C BL 0x28FA2A8
	0x01CA3160 ADRP X8, 0x22AA000
	0x01CA3164 LDR X8, [X8 + 0x628]
	0x01CA3168 LDR X0, [X8]
	0x01CA316C LDR W8, [X0 + 0xE0]
	0x01CA3170 CBNZ W8, 0x1CA3178
	0x01CA3174 BL 0x1B6E8F8
	0x01CA3178 ADRP X8, 0x22AB000
	0x01CA317C ADRP X9, 0x22AB000
	0x01CA3180 ADRP X10, 0x22AB000
	0x01CA3184 LDR X8, [X8 + 0x4D8]
	0x01CA3188 LDR X9, [X9 + 0x4C0]
	0x01CA318C LDR X10, [X10 + 0x4C8]
	0x01CA3190 MOVZ W4, 0x396
	0x01CA3194 LDR X0, [X8]
	0x01CA3198 LDR X2, [X9]
	0x01CA319C LDR X3, [X10]
	0x01CA31A0 MOV X1, X20
	0x01CA31A4 MOV X5, X31
	0x01CA31A8 BL 0x342B410
	0x01CA31AC MOV X0, X19
	0x01CA31B0 BL 0x1C99A60
	0x01CA31B4 LDR X0, [X19 + 0x130]
	0x01CA31B8 CBZ X0, 0x1CA32A0
	0x01CA31BC MOV X1, X31
	0x01CA31C0 BL 0x3AF6B78
	0x01CA31C4 LDR X0, [X19 + 0x130]
	0x01CA31C8 CBZ X0, 0x1CA32A0
	0x01CA31CC MOV X1, X31
	0x01CA31D0 MOV V8.16B, V0.16B
	0x01CA31D4 MOV V9.16B, V1.16B
	0x01CA31D8 MOV V10.16B, V2.16B
	0x01CA31DC BL 0x3AF6CB0
	0x01CA31E0 ADRP X20, 0x2580000
	0x01CA31E4 LDRB W8, [X20 + 0x43F]
	0x01CA31E8 MOV V11.16B, V0.16B
	0x01CA31EC MOV V12.16B, V1.16B
	0x01CA31F0 MOV V13.16B, V2.16B
	0x01CA31F4 MOV V14.16B, V3.16B
	0x01CA31F8 CBNZ W8, 0x1CA3210
	0x01CA31FC ADRP X0, 0x22AA000
	0x01CA3200 LDR X0, [X0 + 0x480]
	0x01CA3204 BL 0x1B6E7F0
	0x01CA3208 MOVZ W8, 0x1
	0x01CA320C STRB W8, [X20 + 0x43F]
	0x01CA3210 ADRP X8, 0x22AA000
	0x01CA3214 LDR X8, [X8 + 0x480]
	0x01CA3218 MOV X0, X19
	0x01CA321C MOV V3.16B, V11.16B
	0x01CA3220 MOV V4.16B, V12.16B
	0x01CA3224 LDR X8, [X8]
	0x01CA3228 MOV V5.16B, V13.16B
	0x01CA322C MOV V6.16B, V14.16B
	0x01CA3230 MOV W2, W31
	0x01CA3234 LDR X8, [X8 + 0xB8]
	0x01CA3238 MOV W3, W31
	0x01CA323C LDP S0, S1, [X8]
	0x01CA3240 LDR V2, [X8 + 0x8]
	0x01CA3244 STR S0, [X31 + 0x10]
	0x01CA3248 STP S1, S2, [X31 + 0x14]
	0x01CA324C STP S1, S2, [X31 + 0x4]
	0x01CA3250 STR S0, [X31]
	0x01CA3254 MOV V0.16B, V8.16B
	0x01CA3258 MOV V1.16B, V9.16B
	0x01CA325C MOV V2.16B, V10.16B
	0x01CA3260 BL 0x1C9F46C
	0x01CA3264 LDRB W8, [X19 + 0x185]
	0x01CA3268 CBZ W8, 0x1CA3278
	0x01CA326C MOV X0, X19
	0x01CA3270 BL 0x1CA1D0C
	0x01CA3274 STRB W31, [X19 + 0x185]
	0x01CA3278 LDP X20, X19, [X31 + 0x90]
	0x01CA327C LDP X22, X21, [X31 + 0x80]
	0x01CA3280 LDP X24, X23, [X31 + 0x70]
	0x01CA3284 LDR X30, [X31 + 0x68]
	0x01CA3288 LDP D9, D8, [X31 + 0x58]
	0x01CA328C LDP D11, D10, [X31 + 0x48]
	0x01CA3290 LDP D13, D12, [X31 + 0x38]
	0x01CA3294 LDR V14, [X31 + 0x30]
	0x01CA3298 ADD X31, X31, 0xA0
	0x01CA329C RET
	0x01CA32A0 BL 0x1B6EA1C
	0x01CA32A4 STP X30, X21, [X31 - 0x20]!
	0x01CA32A8 STP X20, X19, [X31 + 0x10]
	0x01CA32AC ADRP X21, 0x2580000
	0x01CA32B0 ADRP X20, 0x22AA000
	0x01CA32B4 LDRB W8, [X21 + 0x429]
	0x01CA32B8 LDR X20, [X20 + 0x478]
	0x01CA32BC MOV X19, X0
	0x01CA32C0 TBNZ X8, 0x0, 0x1CA32D8
	0x01CA32C4 ADRP X0, 0x22AA000
	0x01CA32C8 LDR X0, [X0 + 0x478]
	0x01CA32CC BL 0x1B6E7F0
	0x01CA32D0 MOVZ W8, 0x1
	0x01CA32D4 STRB W8, [X21 + 0x429]
	0x01CA32D8 LDR X0, [X20]
	0x01CA32DC LDR X20, [X19 + 0x40]
	0x01CA32E0 LDR W8, [X0 + 0xE0]
	0x01CA32E4 CBNZ W8, 0x1CA32EC
	0x01CA32E8 BL 0x1B6E8F8
	0x01CA32EC MOV X0, X20
	0x01CA32F0 MOV X1, X31
	0x01CA32F4 MOV X2, X31
	0x01CA32F8 BL 0x3AA0AF0
	0x01CA32FC TBNZ X0, 0x0, 0x1CA335C
	0x01CA3300 LDR X0, [X19 + 0x40]
	0x01CA3304 CBZ X0, 0x1CA3384
	0x01CA3308 MOV X1, X31
	0x01CA330C BL 0x1D9E5D0
	0x01CA3310 TBZ X0, 0x0, 0x1CA335C
	0x01CA3314 MOV X0, X31
	0x01CA3318 BL 0x1D6815C
	0x01CA331C MOV X1, X0
	0x01CA3320 MOV X0, X19
	0x01CA3324 BL 0x1C9E17C
	0x01CA3328 MOV X0, X31
	0x01CA332C BL 0x1D6815C
	0x01CA3330 MOV X1, X0
	0x01CA3334 MOV X0, X19
	0x01CA3338 BL 0x1C9E1DC
	0x01CA333C LDR X8, [X19 + 0x80]
	0x01CA3340 CBZ X8, 0x1CA3384
	0x01CA3344 LDRB W8, [X8 + 0x28]
	0x01CA3348 TBNZ X8, 0x2, 0x1CA3368
	0x01CA334C MOV X0, X19
	0x01CA3350 LDP X20, X19, [X31 + 0x10]
	0x01CA3354 LDP X30, X21, [X31], #0x20
	0x01CA3358 B 0x1CA16D8
	0x01CA335C LDP X20, X19, [X31 + 0x10]
	0x01CA3360 LDP X30, X21, [X31], #0x20
	0x01CA3364 RET
	0x01CA3368 LDR X0, [X19 + 0x38]
	0x01CA336C CBZ X0, 0x1CA3384
	0x01CA3370 LDR X1, [X19 + 0x40]
	0x01CA3374 LDP X20, X19, [X31 + 0x10]
	0x01CA3378 MOV X2, X31
	0x01CA337C LDP X30, X21, [X31], #0x20
	0x01CA3380 B 0x1D8C548
	0x01CA3384 BL 0x1B6EA1C
	0x01CA3388 STP X30, X19, [X31 - 0x10]!
	0x01CA338C MOV X1, X31
	0x01CA3390 MOV X19, X0
	0x01CA3394 BL 0x1D6B3E0
	0x01CA3398 LDRB W8, [X19 + 0x184]
	0x01CA339C CBZ W8, 0x1CA33B0
	0x01CA33A0 MOV X0, X19
	0x01CA33A4 MOV W1, W31
	0x01CA33A8 BL 0x1CA0700
	0x01CA33AC STRB W31, [X19 + 0x184]
	0x01CA33B0 LDP X30, X19, [X31], #0x10
	0x01CA33B4 RET
	0x01CA33B8 STR X30, [X31 - 0x10]!
	0x01CA33BC MOV X8, X0
	0x01CA33C0 LDR X0, [X0 + 0x38]
	0x01CA33C4 CBZ X0, 0x1CA33D8
	0x01CA33C8 LDR X1, [X8 + 0x40]
	0x01CA33CC MOV X2, X31
	0x01CA33D0 LDR X30, [X31], #0x10
	0x01CA33D4 B 0x1D8C548
	0x01CA33D8 BL 0x1B6EA1C
	0x01CA33DC SUB X31, X31, 0xB0
	0x01CA33E0 STP D15, D14, [X31 + 0x10]
	0x01CA33E4 STP D13, D12, [X31 + 0x20]
	0x01CA33E8 STP D11, D10, [X31 + 0x30]
	0x01CA33EC STP D9, D8, [X31 + 0x40]
	0x01CA33F0 STR X30, [X31 + 0x50]
	0x01CA33F4 STP X28, X27, [X31 + 0x60]
	0x01CA33F8 STP X26, X25, [X31 + 0x70]
	0x01CA33FC STP X24, X23, [X31 + 0x80]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+80], D14
	003 Move [X31+88], D13
	004 Move [X31+96], D12
	005 Move [X31+104], D11
	006 Move [X31+112], D10
	007 Move [X31+120], D9
	008 Move [X31+128], D8
	009 Move [X31+136], X30
	010 Move [X31+144], X24
	011 Move [X31+152], X23
	012 Move [X31+160], X22
	013 Move [X31+168], X21
	014 Move [X31+176], X20
	015 Move [X31+184], X19
	016 NotImplemented "Instruction MRS not yet implemented."
	017 Move X8, [X22+40]
	018 Move X20, 0x2581000
	019 Move X19, X0
	020 Move [X31+72], X8
	021 Move W8, [X20+1058]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {34}
	026 Move X0, 0x22AC000
	027 Move X0, [X0+1200]
	028 Call 0x1B6F7F0
	029 Move X0, 0x22AB000
	030 Move X0, [X0+1144]
	031 Call 0x1B6F7F0
	032 Move W8, 1
	033 Move [X20+1058], W8
	034 Move X0, [X19+56]
	035 Compare X0, 0
	036 JumpIfEqual {268}
	037 Move W8, [X0+384]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X8, [X19+64]
	040 Compare X8, 0
	041 JumpIfEqual {83}
	042 Move W9, [X8+96]
	043 Move TEMP, X9
	044 And TEMP, TEMP, 2
	045 Compare TEMP, 2
	046 JumpIfEqual {83}
	047 Move X0, X8
	048 Move X1, X31
	049 Call NetworkObject.get_HasStateAuthority, X0
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {80}
	054 Move X23, 0x22AB000
	055 Move X23, [X23+1144]
	056 Move X20, [X19+360]
	057 Move X0, [X23]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1B6F8F8
	062 Move X0, X20
	063 Move X1, X31
	064 Move X2, X31
	065 Call Object.op_Inequality, X0, X1
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {116}
	070 Move X8, [X19+360]
	071 Compare X8, 0
	072 JumpIfEqual {268}
	073 Move X9, [X8+64]
	074 Compare X9, 0
	075 JumpIfEqual {202}
	076 Move X9, [X9+32]
	077 Compare X9, 0
	078 JumpIfEqual {202}
	079 Move W1, [X9]
	080 Move X0, [X19+56]
	081 Compare X0, 0
	082 JumpIfEqual {268}
	083 Move X1, X31
	084 Call NetworkRunner.get_ActivePlayers, X0
	085 Move X8, [X19+64]
	086 Compare X8, 0
	087 JumpIfEqual {268}
	088 Move X20, X0
	089 Move X0, X8
	090 Move X1, X31
	091 Call NetworkObject.get_StateAuthority, X0
	092 Move X8, 0x22AC000
	093 Move X8, [X8+1200]
	094 And X1, X0, 0
	095 Move X0, X20
	096 Move X2, [X8]
	097 Call Enumerable.Contains, X0, X1
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfEqual {249}
	102 Move X0, [X19+56]
	103 Compare X0, 0
	104 JumpIfEqual {268}
	105 Move X1, X31
	106 Call NetworkRunner.get_IsSharedModeMasterClient, X0
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfNotEqual {249}
	111 Move X0, [X19+64]
	112 Compare X0, 0
	113 JumpIfEqual {268}
	114 Move X1, X31
	115 Call NetworkObject.RequestStateAuthority, X0
	116 Move X0, X19
	117 Call GrabbableItem.get_attachedAnchorId, X0
	118 Move X20, X0
	119 Move X0, X31
	120 Call NetworkBehaviourId.get_None
	121 Move X24, 0x2581000
	122 Move W8, [X24+1102]
	123 Move X21, X0
	124 Compare W8, 0
	125 JumpIfNotEqual {131}
	126 Move X0, 0x22AC000
	127 Move X0, [X0+488]
	128 Call 0x1B6F7F0
	129 Move W8, 1
	130 Move [X24+1102], W8
	131 Move X8, 0x22AC000
	132 Move X8, [X8+488]
	133 Move X0, [X8]
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1B6F8F8
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X8, X21
	140 ShiftRight X8, 32
	141 And X8, X8, 0x7FFFFFFF
	142 Move X9, X20
	143 ShiftRight X9, 32
	144 And X9, X9, 0x7FFFFFFF
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X0, X19
	147 Call GrabbableItem.get_attachedAnchorId, X0
	148 Move X0, X19
	149 Move X1, X31
	150 Call Component.get_transform, X0
	151 Compare X0, 0
	152 JumpIfEqual {268}
	153 Move X1, X31
	154 Call Transform.get_position, X0
	155 Move X0, X19
	156 Move X1, X31
	157 Move V8, V0
	158 Move V9, V1
	159 Move V10, V2
	160 Call Component.get_transform, X0
	161 Compare X0, 0
	162 JumpIfEqual {268}
	163 Move X1, X31
	164 Call Transform.get_rotation, X0
	165 Move X20, 0x2581000
	166 Move W8, [X20+1087]
	167 Move V11, V0
	168 Move V12, V1
	169 Move V13, V2
	170 Move V14, V3
	171 Compare W8, 0
	172 JumpIfNotEqual {178}
	173 Move X0, 0x22AB000
	174 Move X0, [X0+1152]
	175 Call 0x1B6F7F0
	176 Move W8, 1
	177 Move [X20+1087], W8
	178 Move X8, 0x22AB000
	179 Move X8, [X8+1152]
	180 Move W2, 1
	181 Move X0, X19
	182 Move V3, V11
	183 Move X8, [X8]
	184 Move V4, V12
	185 Move V5, V13
	186 Move V6, V14
	187 Move X8, [X8+184]
	188 Move W3, W31
	189 Move S0, [X8]
	190 Move S1, [X8+4]
	191 Move V2, [X8+8]
	192 Move [X31+16], S0
	193 Move [X31+20], S1
	194 Move [X31+28], S2
	195 Move [X31+4], S1
	196 Move [X31+12], S2
	197 Move [X31], S0
	198 Move V0, V8
	199 Move V1, V9
	200 Move V2, V10
	201 Call GrabbableItem.ReleaseInternal, X0, X1, X2, X3, X4, X5, X6, X7
	202 Move X1, X31
	203 Move W8, [X8+104]
	204 Move W2, 1
	205 Move X0, X19
	206 NotImplemented "Instruction BFM not yet implemented."
	207 Call GrabbableItem.GrabInternal, X0, X1, X2
	208 Move X0, X19
	209 Call GrabbableItem.HandleGrabbedChanged, X0
	210 Move X0, [X23]
	211 Move X20, [X19+168]
	212 Move W8, [X0+224]
	213 Compare W8, 0
	214 JumpIfNotEqual {216}
	215 Call 0x1B6F8F8
	216 Move X0, X20
	217 Move X1, X31
	218 Move X2, X31
	219 Call Object.op_Inequality, X0, X1
	220 Move TEMP, X0
	221 And TEMP, TEMP, 1
	222 Compare TEMP, 1
	223 JumpIfNotEqual {247}
	224 Move X0, [X19+168]
	225 Compare X0, 0
	226 JumpIfEqual {268}
	227 Move X1, X31
	228 Call Transform.get_localPosition, X0
	229 Move X0, [X19+168]
	230 Compare X0, 0
	231 JumpIfEqual {268}
	232 Move X1, X31
	233 Move V8, V0
	234 Move V9, V1
	235 Move V10, V2
	236 Call Transform.get_localRotation, X0
	237 Add X1, X31, 40
	238 Move X0, X19
	239 Move [X31+40], S8
	240 Move [X31+48], S9
	241 Move [X31+48], S10
	242 Move [X31+56], S0
	243 Move [X31+56], S1
	244 Move [X31+64], S2
	245 Move [X31+64], S3
	246 Call GrabbableItem.set_grabbedInfo, X0, X1
	247 Move W8, 1
	248 Move [X19+389], W8
	249 Move X8, [X22+40]
	250 Move X9, [X31+72]
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Move X20, [X31+176]
	253 Move X19, [X31+184]
	254 Move X22, [X31+160]
	255 Move X21, [X31+168]
	256 Move X24, [X31+144]
	257 Move X23, [X31+152]
	258 Move X30, [X31+136]
	259 Move D9, [X31+120]
	260 Move D8, [X31+128]
	261 Move D11, [X31+104]
	262 Move D10, [X31+112]
	263 Move D13, [X31+88]
	264 Move D12, [X31+96]
	265 Move V14, [X31+80]
	266 Add X31, X31, 192
	267 Return 
	268 Call 0x1B6FA1C
	269 Call 0x3D1A880

Method: System.Void HandlePlayerLeft(Fusion.PlayerRef player)

Disassembly:
	0x01CA3400 STP X22, X21, [X31 + 0x90]
	0x01CA3404 STP X20, X19, [X31 + 0xA0]
	0x01CA3408 ADRP X20, 0x2580000
	0x01CA340C ADRP X21, 0x22AA000
	0x01CA3410 LDRB W8, [X20 + 0x42A]
	0x01CA3414 LDR X21, [X21 + 0x478]
	0x01CA3418 MOV X19, X0
	0x01CA341C TBNZ X8, 0x0, 0x1CA3440
	0x01CA3420 ADRP X0, 0x22AA000
	0x01CA3424 LDR X0, [X0 + 0x478]
	0x01CA3428 BL 0x1B6E7F0
	0x01CA342C ADRP X0, 0x22AB000
	0x01CA3430 LDR X0, [X0 + 0x198]
	0x01CA3434 BL 0x1B6E7F0
	0x01CA3438 MOVZ W8, 0x1
	0x01CA343C STRB W8, [X20 + 0x42A]
	0x01CA3440 LDR X0, [X21]
	0x01CA3444 LDR X20, [X19 + 0x120]
	0x01CA3448 LDR W8, [X0 + 0xE0]
	0x01CA344C CBNZ W8, 0x1CA3454
	0x01CA3450 BL 0x1B6E8F8
	0x01CA3454 MOV X0, X20
	0x01CA3458 MOV X1, X31
	0x01CA345C MOV X2, X31
	0x01CA3460 BL 0x3AA0AF0
	0x01CA3464 TBNZ X0, 0x0, 0x1CA37DC
	0x01CA3468 LDR X8, [X19 + 0x120]
	0x01CA346C CBZ X8, 0x1CA380C
	0x01CA3470 LDR X0, [X8 + 0x40]
	0x01CA3474 CBZ X0, 0x1CA37DC
	0x01CA3478 LDRB W8, [X0 + 0x60]
	0x01CA347C TBNZ X8, 0x1, 0x1CA37DC
	0x01CA3480 MOV X1, X31
	0x01CA3484 BL 0x1D9E780
	0x01CA3488 TBZ X0, 0x0, 0x1CA37DC
	0x01CA348C LDR X0, [X21]
	0x01CA3490 LDR X20, [X19 + 0x148]
	0x01CA3494 LDR W8, [X0 + 0xE0]
	0x01CA3498 CBNZ W8, 0x1CA34A0
	0x01CA349C BL 0x1B6E8F8
	0x01CA34A0 MOV X0, X20
	0x01CA34A4 MOV X1, X31
	0x01CA34A8 MOV X2, X31
	0x01CA34AC BL 0x3A9D6EC
	0x01CA34B0 TBZ X0, 0x0, 0x1CA37DC
	0x01CA34B4 MOV X0, X19
	0x01CA34B8 MOV X1, X31
	0x01CA34BC BL 0x3A9B084
	0x01CA34C0 CBZ X0, 0x1CA380C
	0x01CA34C4 MOV X1, X31
	0x01CA34C8 BL 0x3AA7658
	0x01CA34CC LDR X0, [X19 + 0x148]
	0x01CA34D0 CBZ X0, 0x1CA380C
	0x01CA34D4 MOV X1, X31
	0x01CA34D8 MOV V8.16B, V0.16B
	0x01CA34DC MOV V9.16B, V1.16B
	0x01CA34E0 MOV V10.16B, V2.16B
	0x01CA34E4 BL 0x3AA7658
	0x01CA34E8 FSUB S0, S8, S0
	0x01CA34EC FSUB S1, S9, S1
	0x01CA34F0 FSUB S2, S10, S2
	0x01CA34F4 FMUL S0, S0, S0
	0x01CA34F8 FMUL S1, S1, S1
	0x01CA34FC FMUL S2, S2, S2
	0x01CA3500 FADD S0, S0, S1
	0x01CA3504 FADD S0, S2, S0
	0x01CA3508 FMOV S1, 1
	0x01CA350C FCMP S0, S1
	0x01CA3510 B.LE 0x1CA351C
	0x01CA3514 MOV X0, X19
	0x01CA3518 BL 0x1C9AF00
	0x01CA351C LDRB W8, [X19 + 0x89]
	0x01CA3520 CBZ W8, 0x1CA37DC
	0x01CA3524 LDR X8, [X19 + 0x120]
	0x01CA3528 CBZ X8, 0x1CA380C
	0x01CA352C LDRB W8, [X8 + 0x84]
	0x01CA3530 CBZ W8, 0x1CA37DC
	0x01CA3534 LDRB W8, [X19 + 0x150]
	0x01CA3538 CBZ W8, 0x1CA37DC
	0x01CA353C LDR W8, [X19 + 0x1D8]
	0x01CA3540 CMP W8, 0x1
	0x01CA3544 B.LT 0x1CA37DC
	0x01CA3548 ADRP X8, 0xFFFFFFFFFEE06000
	0x01CA354C LDR V0, [X8 + 0xB64]
	0x01CA3550 ADRP X20, 0x22AA000
	0x01CA3554 LDR X20, [X20 + 0x488]
	0x01CA3558 ADRP X21, 0x22AA000
	0x01CA355C STR S0, [X31 + 0x8]
	0x01CA3560 ADRP X22, 0x22AB000
	0x01CA3564 LDR X21, [X21 + 0x480]
	0x01CA3568 LDR X22, [X22 + 0x198]
	0x01CA356C MOV X23, X31
	0x01CA3570 MOV X24, X31
	0x01CA3574 ADRP X25, 0x2580000
	0x01CA3578 MOVZ W26, 0x1
	0x01CA357C ADRP X27, 0x2580000
	0x01CA3580 ADRP X28, 0x2580000
	0x01CA3584 MOV X0, X19
	0x01CA3588 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2581000
	007 Move X22, 0x22AB000
	008 Move W8, [X21+1059]
	009 Move X22, [X22+1144]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x22AC000
	017 Move X0, [X0+1200]
	018 Call 0x1B6F7F0
	019 Move X0, 0x22AB000
	020 Move X0, [X0+1144]
	021 Call 0x1B6F7F0
	022 Move X0, 0x22AC000
	023 Move X0, [X0+1192]
	024 Call 0x1B6F7F0
	025 Move W8, 1
	026 Move [X21+1059], W8
	027 Move X0, [X22]
	028 Move X21, [X19+56]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1B6F8F8
	033 Move X0, X21
	034 Move X1, X31
	035 Move X2, X31
	036 Call Object.op_Inequality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {126}
	041 Move X8, [X19+56]
	042 Compare X8, 0
	043 JumpIfEqual {132}
	044 Move W8, [X8+384]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X0, [X22]
	047 Move X21, [X19+64]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1B6F8F8
	052 Move X0, X21
	053 Move X1, X31
	054 Move X2, X31
	055 Call Object.op_Inequality, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {126}
	060 Move X0, [X19+64]
	061 Compare X0, 0
	062 JumpIfEqual {132}
	063 Move X1, X31
	064 Call NetworkObject.get_IsValid, X0
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {126}
	069 Move X0, [X19+64]
	070 Compare X0, 0
	071 JumpIfEqual {132}
	072 Move X1, X31
	073 Call NetworkObject.get_StateAuthority, X0
	074 Move X8, 0x22AC000
	075 Move X8, [X8+1192]
	076 Move X21, X0
	077 Move X8, [X8]
	078 Move W9, [X8+224]
	079 Compare W9, 0
	080 JumpIfNotEqual {83}
	081 Move X0, X8
	082 Call 0x1B6F8F8
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X0, [X19+56]
	085 Compare X0, 0
	086 JumpIfEqual {132}
	087 Move X1, X31
	088 Call NetworkRunner.get_ActivePlayers, X0
	089 Move X8, [X19+64]
	090 Compare X8, 0
	091 JumpIfEqual {132}
	092 Move X20, X0
	093 Move X0, X8
	094 Move X1, X31
	095 Call NetworkObject.get_StateAuthority, X0
	096 Move X8, 0x22AC000
	097 Move X8, [X8+1200]
	098 And X1, X0, 0
	099 Move X0, X20
	100 Move X2, [X8]
	101 Call Enumerable.Contains, X0, X1
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfEqual {126}
	106 Move X0, [X19+56]
	107 Compare X0, 0
	108 JumpIfEqual {132}
	109 Move X1, X31
	110 Call NetworkRunner.get_IsSharedModeMasterClient, X0
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {126}
	115 Move X0, [X19+64]
	116 Compare X0, 0
	117 JumpIfEqual {132}
	118 Move X20, [X31+32]
	119 Move X19, [X31+40]
	120 Move X22, [X31+16]
	121 Move X21, [X31+24]
	122 Move X1, X31
	123 Move X30, [X31+48]
	124 Call NetworkObject.RequestStateAuthority, X0
	125 Return 
	126 Move X20, [X31+32]
	127 Move X19, [X31+40]
	128 Move X22, [X31+16]
	129 Move X21, [X31+24]
	130 Move X30, [X31+48]
	131 Return 
	132 Call 0x1B6FA1C

Method: System.Void HandleMasterClientSwitched(Fusion.PlayerRef player)

Disassembly:
	0x01CA358C BL 0x3A9B084
	0x01CA3590 CBZ X0, 0x1CA380C
	0x01CA3594 MOV X1, X31
	0x01CA3598 BL 0x3AA7658
	0x01CA359C MOV X0, X19
	0x01CA35A0 MOV X1, X31
	0x01CA35A4 MOV V8.16B, V0.16B
	0x01CA35A8 MOV V9.16B, V1.16B
	0x01CA35AC MOV V10.16B, V2.16B
	0x01CA35B0 BL 0x3A9B084
	0x01CA35B4 CBZ X0, 0x1CA380C
	0x01CA35B8 MOV X1, X31
	0x01CA35BC BL 0x3AA5FBC
	0x01CA35C0 LDR X8, [X19 + 0x1D0]
	0x01CA35C4 CBZ X8, 0x1CA380C
	0x01CA35C8 LDR W9, [X8 + 0x18]
	0x01CA35CC CMP X24, X9
	0x01CA35D0 B.CS 0x1CA3810
	0x01CA35D4 ADD X8, X8, X23
	0x01CA35D8 LDP S4, S5, [X8 + 0x20]
	0x01CA35DC LDR V6, [X8 + 0x28]
	0x01CA35E0 MOV X0, X31
	0x01CA35E4 STR S10, [X31 + 0x5C]
	0x01CA35E8 MOV V10.16B, V9.16B
	0x01CA35EC MOV V9.16B, V8.16B
	0x01CA35F0 BL 0x3A92D64
	0x01CA35F4 LDR X0, [X19 + 0x148]
	0x01CA35F8 CBZ X0, 0x1CA380C
	0x01CA35FC MOV X1, X31
	0x01CA3600 MOV V11.16B, V0.16B
	0x01CA3604 MOV V12.16B, V1.16B
	0x01CA3608 MOV V13.16B, V2.16B
	0x01CA360C BL 0x3AA7658
	0x01CA3610 MOV X0, X19
	0x01CA3614 MOV X1, X31
	0x01CA3618 MOV V14.16B, V0.16B
	0x01CA361C MOV V15.16B, V1.16B
	0x01CA3620 MOV V8.16B, V2.16B
	0x01CA3624 BL 0x3A9B084
	0x01CA3628 CBZ X0, 0x1CA380C
	0x01CA362C MOV X1, X31
	0x01CA3630 BL 0x3AA7658
	0x01CA3634 LDR X8, [X19 + 0x1D0]
	0x01CA3638 CBZ X8, 0x1CA380C
	0x01CA363C LDR W9, [X8 + 0x18]
	0x01CA3640 CMP X24, X9
	0x01CA3644 B.CS 0x1CA3810
	0x01CA3648 LDR V5, [X31 + 0x5C]
	0x01CA364C FADD S3, S9, S11
	0x01CA3650 FADD S4, S10, S12
	0x01CA3654 FSUB S0, S14, S0
	0x01CA3658 FSUB S1, S15, S1
	0x01CA365C ADD X8, X8, X23
	0x01CA3660 FADD S11, S3, S0
	0x01CA3664 FADD S12, S4, S1
	0x01CA3668 LDP S0, S1, [X8 + 0x2C]
	0x01CA366C LDR V3, [X8 + 0x34]
	0x01CA3670 FADD S5, S5, S13
	0x01CA3674 FSUB S2, S8, S2
	0x01CA3678 FADD S13, S5, S2
	0x01CA367C MOV X0, X31
	0x01CA3680 STP S1, S0, [X31 + 0x58]
	0x01CA3684 FSUB S8, S11, S0
	0x01CA3688 FSUB S9, S12, S1
	0x01CA368C STR S3, [X31 + 0xC]
	0x01CA3690 FSUB S10, S13, S3
	0x01CA3694 BL 0x3AA481C
	0x01CA3698 FDIV S14, S8, S0
	0x01CA369C FDIV S15, S9, S0
	0x01CA36A0 FDIV S8, S10, S0
	0x01CA36A4 FMUL S0, S14, S14
	0x01CA36A8 FMUL S1, S15, S15
	0x01CA36AC FADD S0, S0, S1
	0x01CA36B0 FMUL S1, S8, S8
	0x01CA36B4 FADD S9, S1, S0
	0x01CA36B8 FMOV S0, 25
	0x01CA36BC FCMP S9, S0
	0x01CA36C0 B.LE 0x1CA3768
	0x01CA36C4 LDRB W8, [X25 + 0x441]
	0x01CA36C8 CBNZ W8, 0x1CA36D8
	0x01CA36CC MOV X0, X20
	0x01CA36D0 BL 0x1B6E7F0
	0x01CA36D4 STRB W26, [X25 + 0x441]
	0x01CA36D8 LDR X0, [X20]
	0x01CA36DC LDR W8, [X0 + 0xE0]
	0x01CA36E0 CBNZ W8, 0x1CA36E8
	0x01CA36E4 BL 0x1B6E8F8
	0x01CA36E8 LDR V0, [X31 + 0x8]
	0x01CA36EC FSQRT S2, S9
	0x01CA36F0 FCMP S2, S0
	0x01CA36F4 B.LE 0x1CA3708
	0x01CA36F8 FDIV S0, S14, S2
	0x01CA36FC FDIV S1, S15, S2
	0x01CA3700 FDIV S2, S8, S2
	0x01CA3704 B 0x1CA372C
	0x01CA3708 LDRB W8, [X27 + 0x43F]
	0x01CA370C CBNZ W8, 0x1CA371C
	0x01CA3710 MOV X0, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2581000
	007 Move X22, 0x22AB000
	008 Move W8, [X21+1060]
	009 Move X22, [X22+1144]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x22AC000
	017 Move X0, [X0+1200]
	018 Call 0x1B6F7F0
	019 Move X0, 0x22AB000
	020 Move X0, [X0+1144]
	021 Call 0x1B6F7F0
	022 Move X0, 0x22AC000
	023 Move X0, [X0+1192]
	024 Call 0x1B6F7F0
	025 Move W8, 1
	026 Move [X21+1060], W8
	027 Move X0, [X22]
	028 Move X21, [X19+56]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1B6F8F8
	033 Move X0, X21
	034 Move X1, X31
	035 Move X2, X31
	036 Call Object.op_Inequality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {117}
	041 Move X0, [X22]
	042 Move X21, [X19+64]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1B6F8F8
	047 Move X0, X21
	048 Move X1, X31
	049 Move X2, X31
	050 Call Object.op_Inequality, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {117}
	055 Move X0, [X19+64]
	056 Compare X0, 0
	057 JumpIfEqual {134}
	058 Move X1, X31
	059 Call NetworkObject.get_IsValid, X0
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {117}
	064 Move X0, [X19+56]
	065 Compare X0, 0
	066 JumpIfEqual {134}
	067 Move X1, X31
	068 Call NetworkRunner.get_LocalPlayer, X0
	069 Move X8, 0x22AC000
	070 Move X8, [X8+1192]
	071 Move X21, X0
	072 Move X8, [X8]
	073 Move W9, [X8+224]
	074 Compare W9, 0
	075 JumpIfNotEqual {78}
	076 Move X0, X8
	077 Call 0x1B6F8F8
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X0, [X19+56]
	080 Compare X0, 0
	081 JumpIfEqual {134}
	082 Move X1, X31
	083 Call NetworkRunner.get_ActivePlayers, X0
	084 Move X8, [X19+64]
	085 Compare X8, 0
	086 JumpIfEqual {134}
	087 Move X20, X0
	088 Move X0, X8
	089 Move X1, X31
	090 Call NetworkObject.get_StateAuthority, X0
	091 Move X8, 0x22AC000
	092 Move X8, [X8+1200]
	093 And X1, X0, 0
	094 Move X0, X20
	095 Move X2, [X8]
	096 Call Enumerable.Contains, X0, X1
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {123}
	101 Move X0, [X19+64]
	102 Compare X0, 0
	103 JumpIfEqual {117}
	104 Move W8, [X0+96]
	105 Move TEMP, X8
	106 And TEMP, TEMP, 2
	107 Compare TEMP, 2
	108 JumpIfEqual {117}
	109 Move X1, X31
	110 Call NetworkObject.get_HasStateAuthority, X0
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {117}
	115 Move W8, 1
	116 Move [X19+389], W8
	117 Move X20, [X31+32]
	118 Move X19, [X31+40]
	119 Move X22, [X31+16]
	120 Move X21, [X31+24]
	121 Move X30, [X31+48]
	122 Return 
	123 Move X0, [X19+64]
	124 Compare X0, 0
	125 JumpIfEqual {134}
	126 Move X20, [X31+32]
	127 Move X19, [X31+40]
	128 Move X22, [X31+16]
	129 Move X21, [X31+24]
	130 Move X1, X31
	131 Move X30, [X31+48]
	132 Call NetworkObject.RequestStateAuthority, X0
	133 Return 
	134 Call 0x1B6FA1C

Method: System.Void HandleAttachedAnchorDespawned(Fusion.NetworkBehaviourId anchorId)

Disassembly:
	0x01CA3714 BL 0x1B6E7F0
	0x01CA3718 STRB W26, [X27 + 0x43F]
	0x01CA371C LDR X8, [X21]
	0x01CA3720 LDR X8, [X8 + 0xB8]
	0x01CA3724 LDP S0, S1, [X8]
	0x01CA3728 LDR V2, [X8 + 0x8]
	0x01CA372C FMOV S3, 5
	0x01CA3730 MOV X0, X31
	0x01CA3734 FMUL S8, S0, S3
	0x01CA3738 FMUL S9, S1, S3
	0x01CA373C FMUL S10, S2, S3
	0x01CA3740 BL 0x3AA481C
	0x01CA3744 LDR V3, [X31 + 0x5C]
	0x01CA3748 FMUL S1, S8, S0
	0x01CA374C FMUL S2, S9, S0
	0x01CA3750 FMUL S0, S10, S0
	0x01CA3754 FADD S11, S3, S1
	0x01CA3758 LDR V1, [X31 + 0x58]
	0x01CA375C FADD S12, S1, S2
	0x01CA3760 LDR V1, [X31 + 0xC]
	0x01CA3764 FADD S13, S1, S0
	0x01CA3768 LDR X0, [X22]
	0x01CA376C LDR W8, [X0 + 0xE0]
	0x01CA3770 CBNZ W8, 0x1CA3778
	0x01CA3774 BL 0x1B6E8F8
	0x01CA3778 LDRB W8, [X28 + 0x44F]
	0x01CA377C CBNZ W8, 0x1CA378C
	0x01CA3780 MOV X0, X22
	0x01CA3784 BL 0x1B6E7F0
	0x01CA3788 STRB W26, [X28 + 0x44F]
	0x01CA378C LDR X0, [X22]
	0x01CA3790 LDR W8, [X0 + 0xE0]
	0x01CA3794 CBNZ W8, 0x1CA37A0
	0x01CA3798 BL 0x1B6E8F8
	0x01CA379C LDR X0, [X22]
	0x01CA37A0 LDR X8, [X0 + 0xB8]
	0x01CA37A4 LDR X0, [X8]
	0x01CA37A8 CBZ X0, 0x1CA380C
	0x01CA37AC LDP S4, S3, [X31 + 0x58]
	0x01CA37B0 LDR V5, [X31 + 0xC]
	0x01CA37B4 MOV V0.16B, V11.16B
	0x01CA37B8 MOV V1.16B, V12.16B
	0x01CA37BC MOV V2.16B, V13.16B
	0x01CA37C0 MOV X1, X31
	0x01CA37C4 BL 0x1CC2E48
	0x01CA37C8 LDRSW X8, [X19 + 0x1D8]
	0x01CA37CC ADD X24, X24, 0x1
	0x01CA37D0 ADD X23, X23, 0x18
	0x01CA37D4 CMP X24, X8
	0x01CA37D8 B.LT 0x1CA3584
	0x01CA37DC LDP X20, X19, [X31 + 0xA0]
	0x01CA37E0 LDP X22, X21, [X31 + 0x90]
	0x01CA37E4 LDP X24, X23, [X31 + 0x80]
	0x01CA37E8 LDP X26, X25, [X31 + 0x70]
	0x01CA37EC LDP X28, X27, [X31 + 0x60]
	0x01CA37F0 LDR X30, [X31 + 0x50]
	0x01CA37F4 LDP D9, D8, [X31 + 0x40]
	0x01CA37F8 LDP D11, D10, [X31 + 0x30]
	0x01CA37FC LDP D13, D12, [X31 + 0x20]
	0x01CA3800 LDP D15, D14, [X31 + 0x10]
	0x01CA3804 ADD X31, X31, 0xB0
	0x01CA3808 RET
	0x01CA380C BL 0x1B6EA1C
	0x01CA3810 BL 0x1B6EA24
	0x01CA3814 STP X30, X21, [X31 - 0x20]!
	0x01CA3818 STP X20, X19, [X31 + 0x10]
	0x01CA381C ADRP X21, 0x2580000
	0x01CA3820 ADRP X20, 0x22AA000
	0x01CA3824 LDRB W8, [X21 + 0x42B]
	0x01CA3828 LDR X20, [X20 + 0x478]
	0x01CA382C MOV X19, X0
	0x01CA3830 TBNZ X8, 0x0, 0x1CA3848
	0x01CA3834 ADRP X0, 0x22AA000
	0x01CA3838 LDR X0, [X0 + 0x478]
	0x01CA383C BL 0x1B6E7F0
	0x01CA3840 MOVZ W8, 0x1
	0x01CA3844 STRB W8, [X21 + 0x42B]
	0x01CA3848 LDR X0, [X20]
	0x01CA384C LDR X20, [X19 + 0x120]
	0x01CA3850 LDR W8, [X0 + 0xE0]
	0x01CA3854 CBNZ W8, 0x1CA385C
	0x01CA3858 BL 0x1B6E8F8
	0x01CA385C MOV X0, X20
	0x01CA3860 MOV X1, X31
	0x01CA3864 MOV X2, X31
	0x01CA3868 BL 0x3AA0AF0
	0x01CA386C TBNZ X0, 0x0, 0x1CA38B4
	0x01CA3870 MOV X0, X19
	0x01CA3874 BL 0x1C9A484
	0x01CA3878 LDR X8, [X19 + 0x120]
	0x01CA387C CBZ X8, 0x1CA38C0
	0x01CA3880 LDR X0, [X8 + 0x40]
	0x01CA3884 CBZ X0, 0x1CA38B4
	0x01CA3888 LDRB W8, [X0 + 0x60]
	0x01CA388C TBNZ X8, 0x1, 0x1CA38B4
	0x01CA3890 MOV X1, X31
	0x01CA3894 BL 0x1D9E780
	0x01CA3898 TBZ X0, 0x0, 0x1CA38B4
	0x01CA389C MOV X0, X31
	0x01CA38A0 BL 0x3AA481C
	0x01CA38A4 MOV X0, X19
	0x01CA38A8 LDP X20, X19, [X31 + 0x10]
	0x01CA38AC LDP X30, X21, [X31], #0x20
	0x01CA38B0 B 0x1CA38C4
	0x01CA38B4 LDP X20, X19, [X31 + 0x10]
	0x01CA38B8 LDP X30, X21, [X31], #0x20
	0x01CA38BC RET
	0x01CA38C0 BL 0x1B6EA1C
	0x01CA38C4 SUB X31, X31, 0xE0
	0x01CA38C8 STP D15, D14, [X31 + 0x70]
	0x01CA38CC STP D13, D12, [X31 + 0x80]
	0x01CA38D0 STP D11, D10, [X31 + 0x90]
	0x01CA38D4 STP D9, D8, [X31 + 0xA0]
	0x01CA38D8 STR X30, [X31 + 0xB0]
	0x01CA38DC STP X22, X21, [X31 + 0xC0]
	0x01CA38E0 STP X20, X19, [X31 + 0xD0]
	0x01CA38E4 ADRP X20, 0x2580000
	0x01CA38E8 ADRP X21, 0x22AA000
	0x01CA38EC LDRB W8, [X20 + 0x431]
	0x01CA38F0 LDR X21, [X21 + 0x478]
	0x01CA38F4 MOV V8.16B, V0.16B
	0x01CA38F8 MOV X19, X0
	0x01CA38FC TBNZ X8, 0x0, 0x1CA3914

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], D14
	003 Move [X31+40], D13
	004 Move [X31+48], D12
	005 Move [X31+56], D11
	006 Move [X31+64], D10
	007 Move [X31+72], D9
	008 Move [X31+80], D8
	009 Move [X31+88], X30
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X22, 0x2581000
	015 Move X21, 0x22AB000
	016 Move W8, [X22+1061]
	017 Move X21, [X21+1144]
	018 Move X20, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x22AB000
	025 Move X0, [X0+1144]
	026 Call 0x1B6F7F0
	027 Move W8, 1
	028 Move [X22+1061], W8
	029 Move X0, [X21]
	030 Move X21, [X19+64]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1B6F8F8
	035 Move X0, X21
	036 Move X1, X31
	037 Move X2, X31
	038 Call Object.op_Inequality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {147}
	043 Move X0, [X19+64]
	044 Compare X0, 0
	045 JumpIfEqual {161}
	046 Move X1, X31
	047 Call NetworkObject.get_IsValid, X0
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {147}
	052 Move X0, X19
	053 Call GrabbableItem.get_attachedAnchorId, X0
	054 Move X22, 0x2581000
	055 Move W8, [X22+1102]
	056 Move X21, X0
	057 Compare W8, 0
	058 JumpIfNotEqual {64}
	059 Move X0, 0x22AC000
	060 Move X0, [X0+488]
	061 Call 0x1B6F7F0
	062 Move W8, 1
	063 Move [X22+1102], W8
	064 Move X8, 0x22AC000
	065 Move X8, [X8+488]
	066 Move X0, [X8]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1B6F8F8
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X8, X21
	073 ShiftRight X8, 32
	074 And X8, X8, 0x7FFFFFFF
	075 Move X9, X20
	076 ShiftRight X9, 32
	077 And X9, X9, 0x7FFFFFFF
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X0, [X19+64]
	080 Compare X0, 0
	081 JumpIfEqual {147}
	082 Move W8, [X0+96]
	083 Move TEMP, X8
	084 And TEMP, TEMP, 2
	085 Compare TEMP, 2
	086 JumpIfEqual {147}
	087 Move X1, X31
	088 Call NetworkObject.get_HasStateAuthority, X0
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {147}
	093 Move X0, X19
	094 Move X1, X31
	095 Call Component.get_transform, X0
	096 Compare X0, 0
	097 JumpIfEqual {161}
	098 Move X1, X31
	099 Call Transform.get_position, X0
	100 Move X0, X19
	101 Move X1, X31
	102 Move V8, V0
	103 Move V9, V1
	104 Move V10, V2
	105 Call Component.get_transform, X0
	106 Compare X0, 0
	107 JumpIfEqual {161}
	108 Move X1, X31
	109 Call Transform.get_rotation, X0
	110 Move X20, 0x2581000
	111 Move W8, [X20+1087]
	112 Move V11, V0
	113 Move V12, V1
	114 Move V13, V2
	115 Move V14, V3
	116 Compare W8, 0
	117 JumpIfNotEqual {123}
	118 Move X0, 0x22AB000
	119 Move X0, [X0+1152]
	120 Call 0x1B6F7F0
	121 Move W8, 1
	122 Move [X20+1087], W8
	123 Move X8, 0x22AB000
	124 Move X8, [X8+1152]
	125 Move W2, 1
	126 Move X0, X19
	127 Move V3, V11
	128 Move X8, [X8]
	129 Move V4, V12
	130 Move V5, V13
	131 Move V6, V14
	132 Move X8, [X8+184]
	133 Move W3, W31
	134 Move S0, [X8]
	135 Move S1, [X8+4]
	136 Move V2, [X8+8]
	137 Move [X31+16], S0
	138 Move [X31+20], S1
	139 Move [X31+28], S2
	140 Move [X31+4], S1
	141 Move [X31+12], S2
	142 Move [X31], S0
	143 Move V0, V8
	144 Move V1, V9
	145 Move V2, V10
	146 Call GrabbableItem.ReleaseInternal, X0, X1, X2, X3, X4, X5, X6, X7
	147 Move X20, [X31+112]
	148 Move X19, [X31+120]
	149 Move X22, [X31+96]
	150 Move X21, [X31+104]
	151 Move X30, [X31+88]
	152 Move D9, [X31+72]
	153 Move D8, [X31+80]
	154 Move D11, [X31+56]
	155 Move D10, [X31+64]
	156 Move D13, [X31+40]
	157 Move D12, [X31+48]
	158 Move V14, [X31+32]
	159 Add X31, X31, 128
	160 Return 
	161 Call 0x1B6FA1C

Method: System.Void Spawned()

Disassembly:
	0x01CA3900 ADRP X0, 0x22AA000
	0x01CA3904 LDR X0, [X0 + 0x478]
	0x01CA3908 BL 0x1B6E7F0
	0x01CA390C MOVZ W8, 0x1
	0x01CA3910 STRB W8, [X20 + 0x431]
	0x01CA3914 LDR X0, [X21]
	0x01CA3918 STR W31, [X31 + 0xBC]
	0x01CA391C STR W31, [X31 + 0x68]
	0x01CA3920 STR X31, [X31 + 0x60]
	0x01CA3924 LDR W8, [X0 + 0xE0]
	0x01CA3928 LDR X20, [X19 + 0x120]
	0x01CA392C CBNZ W8, 0x1CA3934
	0x01CA3930 BL 0x1B6E8F8
	0x01CA3934 MOV X0, X20
	0x01CA3938 MOV X1, X31
	0x01CA393C MOV X2, X31
	0x01CA3940 BL 0x3AA0AF0
	0x01CA3944 TBNZ X0, 0x0, 0x1CA3F54
	0x01CA3948 LDR X8, [X19 + 0x120]
	0x01CA394C CBZ X8, 0x1CA3F78
	0x01CA3950 LDR X0, [X8 + 0x40]
	0x01CA3954 CBZ X0, 0x1CA3F54
	0x01CA3958 LDRB W8, [X0 + 0x60]
	0x01CA395C TBNZ X8, 0x1, 0x1CA3F54
	0x01CA3960 MOV X1, X31
	0x01CA3964 BL 0x1D9E780
	0x01CA3968 TBZ X0, 0x0, 0x1CA3F54
	0x01CA396C LDR X0, [X21]
	0x01CA3970 LDR X20, [X19 + 0x148]
	0x01CA3974 LDR W8, [X0 + 0xE0]
	0x01CA3978 CBNZ W8, 0x1CA3980
	0x01CA397C BL 0x1B6E8F8
	0x01CA3980 MOV X0, X20
	0x01CA3984 MOV X1, X31
	0x01CA3988 MOV X2, X31
	0x01CA398C BL 0x3A9D6EC
	0x01CA3990 TBZ X0, 0x0, 0x1CA3F50
	0x01CA3994 LDR X0, [X19 + 0x148]
	0x01CA3998 CBZ X0, 0x1CA3F78
	0x01CA399C MOV X1, X31
	0x01CA39A0 BL 0x3A9B084
	0x01CA39A4 CBZ X0, 0x1CA3F78
	0x01CA39A8 MOV X1, X31
	0x01CA39AC MOV X20, X0
	0x01CA39B0 BL 0x3AA7658
	0x01CA39B4 MOV X0, X20
	0x01CA39B8 MOV X1, X31
	0x01CA39BC MOV V9.16B, V0.16B
	0x01CA39C0 MOV V10.16B, V1.16B
	0x01CA39C4 STR S2, [X31 + 0xB8]
	0x01CA39C8 BL 0x3AA5FBC
	0x01CA39CC LDR X0, [X19 + 0x130]
	0x01CA39D0 CBZ X0, 0x1CA3F78
	0x01CA39D4 MOV X1, X31
	0x01CA39D8 MOV V12.16B, V0.16B
	0x01CA39DC MOV V13.16B, V1.16B
	0x01CA39E0 MOV V14.16B, V2.16B
	0x01CA39E4 MOV V15.16B, V3.16B
	0x01CA39E8 BL 0x3AF6B78
	0x01CA39EC LDR X0, [X19 + 0x130]
	0x01CA39F0 CBZ X0, 0x1CA3F78
	0x01CA39F4 FSUB S11, S9, S0
	0x01CA39F8 LDR V0, [X31 + 0xB8]
	0x01CA39FC MOV X1, X31
	0x01CA3A00 STP S10, S9, [X31 + 0x44]
	0x01CA3A04 FSUB S9, S10, S1
	0x01CA3A08 FSUB S0, S0, S2
	0x01CA3A0C STR S0, [X31 + 0x5C]
	0x01CA3A10 BL 0x3AF6CB0
	0x01CA3A14 MOV X0, X31
	0x01CA3A18 BL 0x3A925C8
	0x01CA3A1C FMUL S4, S15, S0
	0x01CA3A20 FMUL S5, S12, S3
	0x01CA3A24 FMUL S6, S15, S1
	0x01CA3A28 FMUL S7, S13, S3
	0x01CA3A2C FADD S4, S4, S5
	0x01CA3A30 FMUL S5, S15, S2
	0x01CA3A34 FADD S6, S6, S7
	0x01CA3A38 FMUL S7, S14, S3
	0x01CA3A3C FMUL S3, S15, S3
	0x01CA3A40 FADD S5, S5, S7
	0x01CA3A44 FMUL S7, S12, S0
	0x01CA3A48 FSUB S3, S3, S7
	0x01CA3A4C FMUL S7, S13, S2
	0x01CA3A50 FADD S4, S7, S4
	0x01CA3A54 FMUL S7, S14, S0
	0x01CA3A58 FADD S6, S7, S6
	0x01CA3A5C FMUL S7, S12, S1
	0x01CA3A60 FADD S5, S7, S5
	0x01CA3A64 FMUL S7, S14, S1
	0x01CA3A68 FMUL S1, S13, S1
	0x01CA3A6C FSUB S3, S3, S1
	0x01CA3A70 FMUL S1, S12, S2
	0x01CA3A74 FMUL S16, S13, S0
	0x01CA3A78 FMUL S17, S14, S2
	0x01CA3A7C FSUB S0, S4, S7
	0x01CA3A80 FSUB S1, S6, S1
	0x01CA3A84 FSUB S2, S5, S16
	0x01CA3A88 FSUB S3, S3, S17
	0x01CA3A8C ADD X0, X31, 0x60
	0x01CA3A90 ADD X1, X31, 0xBC
	0x01CA3A94 MOV X2, X31
	0x01CA3A98 BL 0x3A92A10
	0x01CA3A9C ADRP X8, 0xFFFFFFFFFEE06000
	0x01CA3AA0 LDR V0, [X31 + 0xBC]
	0x01CA3AA4 LDR V5, [X8 + 0xE1C]
	0x01CA3AA8 LDP S1, S2, [X31 + 0x60]
	0x01CA3AAC LDR V3, [X31 + 0x68]
	0x01CA3AB0 ADRP X8, 0xFFFFFFFFFEE06000
	0x01CA3AB4 FMUL S0, S0, S5
	0x01CA3AB8 LDR V4, [X8 + 0xAF4]
	0x01CA3ABC STR S0, [X31 + 0xBC]
	0x01CA3AC0 LDRB W8, [X19 + 0x150]
	0x01CA3AC4 FMUL S1, S0, S1
	0x01CA3AC8 FMUL S2, S0, S2
	0x01CA3ACC FMUL S0, S0, S3
	0x01CA3AD0 FMUL S3, S1, S4
	0x01CA3AD4 FMUL S1, S2, S4
	0x01CA3AD8 FMUL S10, S0, S4
	0x01CA3ADC STP S3, S1, [X31 + 0x54]
	0x01CA3AE0 STR S4, [X31 + 0x4C]
	0x01CA3AE4 CBZ W8, 0x1CA3C04

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], D10
	003 Move [X31+96], D9
	004 Move [X31+104], D8
	005 Move [X31+112], X30
	006 Move [X31+120], X21
	007 Move [X31+128], X20
	008 Move [X31+136], X19
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X20+40]
	011 Move X21, 0x2581000
	012 Move X19, X0
	013 Move [X31+72], X8
	014 Move W8, [X21+1062]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x22AC000
	020 Move X0, [X0+968]
	021 Call 0x1B6F7F0
	022 Move X0, 0x22AC000
	023 Move X0, [X0+1208]
	024 Call 0x1B6F7F0
	025 Move W8, 1
	026 Move [X21+1062], W8
	027 Move X0, X19
	028 Move X1, X31
	029 Move [X31+6], W31
	030 NotImplemented "Instruction STRH not yet implemented."
	031 Call NetworkBehaviour.Spawned, X0
	032 Add X8, X31, 40
	033 Move X0, X19
	034 Call GrabbableItem.get_spawnInfo, X0
	035 Move W8, [X31+68]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {87}
	040 Move X0, [X19+64]
	041 Compare X0, 0
	042 JumpIfEqual {87}
	043 Move W8, [X0+96]
	044 Move TEMP, X8
	045 And TEMP, TEMP, 2
	046 Compare TEMP, 2
	047 JumpIfEqual {87}
	048 Move X1, X31
	049 Call NetworkObject.get_HasStateAuthority, X0
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {87}
	054 Move X0, X19
	055 Move X1, X31
	056 Call Component.get_transform, X0
	057 Compare X0, 0
	058 JumpIfEqual {157}
	059 Move X1, X31
	060 Call Transform.get_position, X0
	061 Move X0, X19
	062 Move X1, X31
	063 Move V8, V0
	064 Move V9, V1
	065 Move V10, V2
	066 Call Component.get_transform, X0
	067 Compare X0, 0
	068 JumpIfEqual {157}
	069 Move X1, X31
	070 Call Transform.get_rotation, X0
	071 Move W8, 1
	072 Move [X31+36], W8
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 Add X1, X31, 8
	075 Move X0, X19
	076 Move [X31+8], S8
	077 Move [X31+16], S9
	078 NotImplemented "Instruction STURH not yet implemented."
	079 Move W8, [X31+6]
	080 Move [X31+16], S10
	081 Move [X31+24], S0
	082 Move [X31+24], S1
	083 Move [X31+32], S2
	084 Move [X31+32], S3
	085 Move [X31+39], W8
	086 Call GrabbableItem.set_spawnInfo, X0, X1
	087 Move X0, [X19+64]
	088 Compare X0, 0
	089 JumpIfEqual {119}
	090 Move W8, [X0+96]
	091 Move TEMP, X8
	092 And TEMP, TEMP, 2
	093 Compare TEMP, 2
	094 JumpIfEqual {119}
	095 Move X1, X31
	096 Call NetworkObject.get_HasStateAuthority, X0
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {119}
	101 Move X0, X19
	102 Call GrabbableItem.InitSpawn, X0
	103 Move X8, [X19+128]
	104 Compare X8, 0
	105 JumpIfEqual {157}
	106 Move W8, [X8+40]
	107 Move TEMP, X8
	108 And TEMP, TEMP, 4
	109 Compare TEMP, 4
	110 JumpIfNotEqual {119}
	111 Move X0, [X19+56]
	112 Move W8, 0x43960000
	113 Move S0, W8
	114 Move X1, X31
	115 Call TickTimer.CreateFromSeconds, X0, V0
	116 And X1, X0, 0
	117 Move X0, X19
	118 Call GrabbableItem.set_respawnTimer, X0, X1
	119 Move X0, X19
	120 Call GrabbableItem.HandleGrabbedChanged, X0
	121 Move X8, [X19+128]
	122 Compare X8, 0
	123 JumpIfEqual {157}
	124 Move W8, [X8+40]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X21, 0x22AC000
	127 Move X21, [X21+968]
	128 Move X0, [X21]
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {134}
	132 Call 0x1B6F8F8
	133 Move X0, [X21]
	134 Move X8, [X0+184]
	135 Move X0, [X8]
	136 Compare X0, 0
	137 JumpIfEqual {157}
	138 Move X8, 0x22AC000
	139 Move X8, [X8+1208]
	140 Move X1, X19
	141 Move X2, [X8]
	142 Call HashSet`1<Object>.Add, X0, X1
	143 Move W8, 1
	144 Move [X19+388], W8
	145 Move X8, [X20+40]
	146 Move X9, [X31+72]
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X20, [X31+128]
	149 Move X19, [X31+136]
	150 Move X30, [X31+112]
	151 Move X21, [X31+120]
	152 Move D9, [X31+96]
	153 Move D8, [X31+104]
	154 Move V10, [X31+80]
	155 Add X31, X31, 144
	156 Return 
	157 Call 0x1B6FA1C
	158 Call 0x3D1A880

Method: System.Void Despawned(Fusion.NetworkRunner runner, System.Boolean hasState)

Disassembly:
	0x01CA3AE8 STR S5, [X31 + 0xC]
	0x01CA3AEC LDR V4, [X19 + 0x1E8]
	0x01CA3AF0 LDR V5, [X19 + 0x1EC]
	0x01CA3AF4 LDR V6, [X19 + 0x1F0]
	0x01CA3AF8 MOV V0.16B, V12.16B
	0x01CA3AFC MOV V1.16B, V13.16B
	0x01CA3B00 MOV V2.16B, V14.16B
	0x01CA3B04 MOV V3.16B, V15.16B
	0x01CA3B08 MOV X0, X31
	0x01CA3B0C STP S10, S9, [X31 + 0x3C]
	0x01CA3B10 BL 0x3A92D64
	0x01CA3B14 LDR X0, [X19 + 0x130]
	0x01CA3B18 CBZ X0, 0x1CA3F78
	0x01CA3B1C STR S0, [X31 + 0x38]
	0x01CA3B20 LDR V0, [X19 + 0x1E4]
	0x01CA3B24 LDR V12, [X19 + 0x1DC]
	0x01CA3B28 LDR V15, [X19 + 0x1E0]
	0x01CA3B2C MOV X1, X31
	0x01CA3B30 STP S2, S1, [X31 + 0x30]
	0x01CA3B34 STR S0, [X31 + 0x50]
	0x01CA3B38 BL 0x3AF6B78
	0x01CA3B3C LDR X0, [X19 + 0x130]
	0x01CA3B40 CBZ X0, 0x1CA3F78
	0x01CA3B44 MOV X1, X31
	0x01CA3B48 MOV V14.16B, V0.16B
	0x01CA3B4C MOV V9.16B, V1.16B
	0x01CA3B50 MOV V10.16B, V2.16B
	0x01CA3B54 BL 0x3AF6B78
	0x01CA3B58 ADRP X21, 0x2580000
	0x01CA3B5C LDRB W8, [X21 + 0x441]
	0x01CA3B60 MOV V13.16B, V0.16B
	0x01CA3B64 STP S2, S1, [X31 + 0x20]
	0x01CA3B68 CBNZ W8, 0x1CA3B80
	0x01CA3B6C ADRP X0, 0x22AA000
	0x01CA3B70 LDR X0, [X0 + 0x488]
	0x01CA3B74 BL 0x1B6E7F0
	0x01CA3B78 MOVZ W8, 0x1
	0x01CA3B7C STRB W8, [X21 + 0x441]
	0x01CA3B80 ADRP X20, 0x22AA000
	0x01CA3B84 LDR X20, [X20 + 0x488]
	0x01CA3B88 LDR V0, [X31 + 0x50]
	0x01CA3B8C FSUB S2, S12, S14
	0x01CA3B90 FSUB S9, S15, S9
	0x01CA3B94 LDR X0, [X20]
	0x01CA3B98 FSUB S14, S0, S10
	0x01CA3B9C STR S15, [X31 + 0x1C]
	0x01CA3BA0 LDR W8, [X0 + 0xE0]
	0x01CA3BA4 CBNZ W8, 0x1CA3BB4
	0x01CA3BA8 MOV V10.16B, V2.16B
	0x01CA3BAC BL 0x1B6E8F8
	0x01CA3BB0 MOV V2.16B, V10.16B
	0x01CA3BB4 FMUL S0, S2, S2
	0x01CA3BB8 FMUL S1, S9, S9
	0x01CA3BBC ADRP X8, 0xFFFFFFFFFEE06000
	0x01CA3BC0 FADD S0, S0, S1
	0x01CA3BC4 LDR V15, [X8 + 0xB64]
	0x01CA3BC8 FMUL S1, S14, S14

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2581000
	007 Move W8, [X22+1063]
	008 Move W21, W2
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x22AC000
	016 Move X0, [X0+968]
	017 Call 0x1B6F7F0
	018 Move X0, 0x22AC000
	019 Move X0, [X0+1032]
	020 Call 0x1B6F7F0
	021 Move W8, 1
	022 Move [X22+1063], W8
	023 And W2, W21, 1
	024 Move X0, X19
	025 Move X1, X20
	026 Move X3, X31
	027 Call NetworkBehaviour.Despawned, X0, X1, X2
	028 Move X8, [X19+432]
	029 Compare X8, 0
	030 JumpIfEqual {36}
	031 Move X9, [X8+24]
	032 Move X0, [X8+64]
	033 Move X2, [X8+40]
	034 Move X1, X20
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move X8, [X19+128]
	037 Compare X8, 0
	038 JumpIfEqual {70}
	039 Move W8, [X8+40]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X20, 0x22AC000
	042 Move X20, [X20+968]
	043 Move X0, [X20]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {49}
	047 Call 0x1B6F8F8
	048 Move X0, [X20]
	049 Move X8, [X0+184]
	050 Move X0, [X8]
	051 Compare X0, 0
	052 JumpIfEqual {70}
	053 Move X8, 0x22AC000
	054 Move X8, [X8+1032]
	055 Move X1, X19
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X2, [X8]
	061 Move X30, [X31+48]
	062 Call HashSet`1<Object>.Remove, X0, X1
	063 Return 
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 Return 
	070 Call 0x1B6FA1C

Method: System.Void HandleUse()

Disassembly:
	0x01CA3BCC FADD S0, S1, S0
	0x01CA3BD0 MOV V1.16B, V9.16B
	0x01CA3BD4 LDP S10, S9, [X31 + 0x44]
	0x01CA3BD8 STP S0, S12, [X31 + 0x28]
	0x01CA3BDC FSQRT S0, S0
	0x01CA3BE0 FCMP S0, S15
	0x01CA3BE4 STP S1, S14, [X31 + 0x4]

ISIL:
	001 Move X8, [X0+400]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move X2, [X8+24]
	005 Move X0, [X8+64]
	006 Move X1, [X8+40]
	007 CallNoReturn X2
	008 Return 

Method: System.Void HandleTriggerUse()

Disassembly:
	0x01CA3BE8 STR S2, [X31]
	0x01CA3BEC B.LE 0x1CA3C10
	0x01CA3BF0 FDIV S2, S2, S0
	0x01CA3BF4 FDIV S1, S1, S0
	0x01CA3BF8 STP S1, S2, [X31 + 0x14]
	0x01CA3BFC FDIV S0, S14, S0
	0x01CA3C00 B 0x1CA3C50

ISIL:
	001 Move X8, [X0+408]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move X2, [X8+24]
	005 Move X0, [X8+64]
	006 Move X1, [X8+40]
	007 CallNoReturn X2
	008 Return 

Method: System.Void TestThrow()

Disassembly:
	0x01CA3C04 LDP S12, S13, [X31 + 0x58]
	0x01CA3C08 LDR V14, [X31 + 0x54]
	0x01CA3C0C B 0x1CA3F18
	0x01CA3C10 ADRP X22, 0x2580000
	0x01CA3C14 LDRB W8, [X22 + 0x43F]
	0x01CA3C18 CBNZ W8, 0x1CA3C30
	0x01CA3C1C ADRP X0, 0x22AA000
	0x01CA3C20 LDR X0, [X0 + 0x480]
	0x01CA3C24 BL 0x1B6E7F0
	0x01CA3C28 MOVZ W8, 0x1
	0x01CA3C2C STRB W8, [X22 + 0x43F]
	0x01CA3C30 ADRP X8, 0x22AA000
	0x01CA3C34 LDR X8, [X8 + 0x480]
	0x01CA3C38 LDR X8, [X8]
	0x01CA3C3C LDR X8, [X8 + 0xB8]
	0x01CA3C40 LDR V1, [X8]
	0x01CA3C44 LDR V0, [X8 + 0x4]
	0x01CA3C48 STP S0, S1, [X31 + 0x14]
	0x01CA3C4C LDR V0, [X8 + 0x8]
	0x01CA3C50 STR S0, [X31 + 0x10]
	0x01CA3C54 LDR V0, [X31 + 0x38]
	0x01CA3C58 LDRB W8, [X21 + 0x441]
	0x01CA3C5C FADD S12, S9, S0
	0x01CA3C60 LDP S1, S0, [X31 + 0x30]
	0x01CA3C64 FADD S10, S10, S0
	0x01CA3C68 LDR V0, [X31 + 0xB8]
	0x01CA3C6C FADD S9, S0, S1
	0x01CA3C70 CBNZ W8, 0x1CA3C88
	0x01CA3C74 ADRP X0, 0x22AA000
	0x01CA3C78 LDR X0, [X0 + 0x488]
	0x01CA3C7C BL 0x1B6E7F0
	0x01CA3C80 MOVZ W8, 0x1
	0x01CA3C84 STRB W8, [X21 + 0x441]
	0x01CA3C88 LDR V0, [X31 + 0x24]
	0x01CA3C8C LDR X0, [X20]
	0x01CA3C90 FSUB S2, S12, S13
	0x01CA3C94 STR S9, [X31 + 0x48]
	0x01CA3C98 FSUB S13, S10, S0
	0x01CA3C9C LDR V0, [X31 + 0x20]
	0x01CA3CA0 LDR W8, [X0 + 0xE0]
	0x01CA3CA4 FSUB S9, S9, S0
	0x01CA3CA8 CBNZ W8, 0x1CA3CC0
	0x01CA3CAC MOV V14.16B, V11.16B
	0x01CA3CB0 MOV V11.16B, V2.16B
	0x01CA3CB4 BL 0x1B6E8F8
	0x01CA3CB8 MOV V2.16B, V11.16B
	0x01CA3CBC MOV V11.16B, V14.16B
	0x01CA3CC0 FMUL S0, S2, S2
	0x01CA3CC4 FMUL S1, S13, S13
	0x01CA3CC8 FADD S0, S0, S1
	0x01CA3CCC FMUL S1, S9, S9

ISIL:
	001 Move [X31-48], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, X0
	008 Move X0, [X0+304]
	009 Compare X0, 0
	010 JumpIfEqual {58}
	011 Move X1, X31
	012 Call Rigidbody.get_position, X0
	013 Move X0, [X19+304]
	014 Compare X0, 0
	015 JumpIfEqual {58}
	016 Move X1, X31
	017 Call Rigidbody.get_rotation, X0
	018 Move X0, [X19+304]
	019 Compare X0, 0
	020 JumpIfEqual {58}
	021 Move X1, X31
	022 Call Rigidbody.get_velocity, X0
	023 Move X20, 0x2581000
	024 Move W8, [X20+1090]
	025 Move V8, V0
	026 Move V9, V1
	027 Move V10, V2
	028 Compare W8, 0
	029 JumpIfNotEqual {35}
	030 Move X0, 0x22AB000
	031 Move X0, [X0+1152]
	032 Call 0x1B6F7F0
	033 Move W8, 1
	034 Move [X20+1090], W8
	035 Move X8, 0x22AB000
	036 Move X8, [X8+1152]
	037 Move S5, 5
	038 Move X0, X31
	039 Move X8, [X8]
	040 Move X8, [X8+184]
	041 Move S0, [X8+24]
	042 Move S1, [X8+28]
	043 Move V2, [X8+32]
	044 Multiply S3, S0, S5
	045 Multiply S4, S1, S5
	046 Multiply S5, S2, S5
	047 Move V0, V8
	048 Move V1, V9
	049 Move V2, V10
	050 Call 0x1CA64EC
	051 Move X20, [X19+304]
	052 Move X0, X20
	053 Call 0x18F54E0
	054 Move X0, X20
	055 Move X1, X31
	056 Call Rigidbody.get_angularVelocity, X0
	057 Move [X19+360], X31
	058 Call 0x1B6FA1C

Method: System.Void TestUse()

Disassembly:
	0x01CA3CD0 FADD S3, S1, S0
	0x01CA3CD4 FSQRT S0, S3
	0x01CA3CD8 FCMP S0, S15
	0x01CA3CDC STR S9, [X31 + 0x44]
	0x01CA3CE0 STR S13, [X31 + 0x38]
	0x01CA3CE4 B.LE 0x1CA3CFC
	0x01CA3CE8 LDR V15, [X31 + 0x1C]

ISIL:
	001 Move X8, [X0+400]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move X2, [X8+24]
	005 Move X0, [X8+64]
	006 Move X1, [X8+40]
	007 CallNoReturn X2
	008 Return 

Method: System.Void TestTriggerUse()

Disassembly:
	0x01CA3CEC FDIV S4, S2, S0
	0x01CA3CF0 FDIV S13, S13, S0
	0x01CA3CF4 FDIV S9, S9, S0
	0x01CA3CF8 B 0x1CA3D48
	0x01CA3CFC ADRP X21, 0x2580000
	0x01CA3D00 LDRB W8, [X21 + 0x43F]
	0x01CA3D04 LDR V15, [X31 + 0x1C]

ISIL:
	001 Move X8, [X0+408]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move X2, [X8+24]
	005 Move X0, [X8+64]
	006 Move X1, [X8+40]
	007 CallNoReturn X2
	008 Return 

Method: System.Void FixedUpdateNetwork()

Disassembly:
	0x01CA3D08 CBNZ W8, 0x1CA3D30
	0x01CA3D0C ADRP X0, 0x22AA000
	0x01CA3D10 LDR X0, [X0 + 0x480]
	0x01CA3D14 MOV V9.16B, V2.16B
	0x01CA3D18 MOV V13.16B, V3.16B
	0x01CA3D1C BL 0x1B6E7F0
	0x01CA3D20 MOV V3.16B, V13.16B
	0x01CA3D24 MOV V2.16B, V9.16B
	0x01CA3D28 MOVZ W8, 0x1
	0x01CA3D2C STRB W8, [X21 + 0x43F]
	0x01CA3D30 ADRP X8, 0x22AA000
	0x01CA3D34 LDR X8, [X8 + 0x480]
	0x01CA3D38 LDR X8, [X8]
	0x01CA3D3C LDR X8, [X8 + 0xB8]
	0x01CA3D40 LDP S4, S13, [X8]
	0x01CA3D44 LDR V9, [X8 + 0x8]
	0x01CA3D48 ADRP X21, 0x2580000
	0x01CA3D4C LDRB W8, [X21 + 0x457]
	0x01CA3D50 STR S11, [X31 + 0xB8]
	0x01CA3D54 CBNZ W8, 0x1CA3D94
	0x01CA3D58 ADRP X0, 0x22AA000
	0x01CA3D5C LDR X0, [X0 + 0x488]
	0x01CA3D60 MOV V11.16B, V2.16B
	0x01CA3D64 MOV V14.16B, V3.16B
	0x01CA3D68 STR S12, [X31 + 0x34]
	0x01CA3D6C MOV V12.16B, V10.16B
	0x01CA3D70 MOV V10.16B, V4.16B
	0x01CA3D74 BL 0x1B6E7F0
	0x01CA3D78 MOV V4.16B, V10.16B
	0x01CA3D7C MOV V10.16B, V12.16B
	0x01CA3D80 LDR V12, [X31 + 0x34]
	0x01CA3D84 MOV V3.16B, V14.16B
	0x01CA3D88 MOV V2.16B, V11.16B
	0x01CA3D8C MOVZ W8, 0x1
	0x01CA3D90 STRB W8, [X21 + 0x457]
	0x01CA3D94 LDR V0, [X31 + 0x2C]
	0x01CA3D98 LDR V1, [X31 + 0x48]
	0x01CA3D9C LDR X0, [X20]
	0x01CA3DA0 FSUB S6, S10, S15
	0x01CA3DA4 FSUB S5, S12, S0
	0x01CA3DA8 LDR V0, [X31 + 0x50]
	0x01CA3DAC LDR W8, [X0 + 0xE0]
	0x01CA3DB0 FMOV S10, 0.5
	0x01CA3DB4 FSUB S7, S1, S0
	0x01CA3DB8 LDP S0, S1, [X31 + 0x10]
	0x01CA3DBC FMUL S12, S0, S13
	0x01CA3DC0 FMUL S14, S0, S4
	0x01CA3DC4 LDR V0, [X31 + 0x18]
	0x01CA3DC8 FMUL S11, S1, S9
	0x01CA3DCC FMUL S15, S0, S9
	0x01CA3DD0 FMUL S9, S0, S13
	0x01CA3DD4 FMUL S13, S1, S4
	0x01CA3DD8 CBNZ W8, 0x1CA3E00
	0x01CA3DDC STR S2, [X31 + 0x50]
	0x01CA3DE0 STR S3, [X31 + 0x48]
	0x01CA3DE4 STP S6, S5, [X31 + 0x30]
	0x01CA3DE8 STR S7, [X31 + 0x2C]
	0x01CA3DEC BL 0x1B6E8F8
	0x01CA3DF0 LDP S7, S6, [X31 + 0x2C]
	0x01CA3DF4 LDR V5, [X31 + 0x34]
	0x01CA3DF8 LDR V3, [X31 + 0x48]
	0x01CA3DFC LDR V2, [X31 + 0x50]
	0x01CA3E00 LDR V0, [X31 + 0x28]
	0x01CA3E04 ADRP X8, 0xFFFFFFFFFEE06000
	0x01CA3E08 LDR V1, [X8 + 0x9E4]
	0x01CA3E0C FMUL S5, S5, S10
	0x01CA3E10 FMUL S6, S6, S10
	0x01CA3E14 FMUL S7, S7, S10
	0x01CA3E18 FSUB S4, S11, S12
	0x01CA3E1C FSUB S12, S14, S15
	0x01CA3E20 FSUB S10, S9, S13
	0x01CA3E24 LDR V11, [X31 + 0xB8]
	0x01CA3E28 LDR V13, [X31 + 0x5C]
	0x01CA3E2C LDR V14, [X31 + 0x54]
	0x01CA3E30 FMUL S0, S0, S3
	0x01CA3E34 FSQRT S0, S0
	0x01CA3E38 FCMP S0, S1
	0x01CA3E3C FMOV S1, W31
	0x01CA3E40 B.MI 0x1CA3EC8
	0x01CA3E44 LDR V1, [X31]
	0x01CA3E48 LDR V3, [X31 + 0x38]
	0x01CA3E4C MOV V15.16B, V4.16B
	0x01CA3E50 LDR V4, [X31 + 0x44]
	0x01CA3E54 FMUL S1, S1, S2
	0x01CA3E58 LDR V2, [X31 + 0x4]
	0x01CA3E5C LDR X0, [X20]
	0x01CA3E60 STR S7, [X31 + 0x34]
	0x01CA3E64 STR S6, [X31 + 0x48]
	0x01CA3E68 FMUL S2, S2, S3
	0x01CA3E6C LDR V3, [X31 + 0x8]
	0x01CA3E70 FADD S1, S1, S2
	0x01CA3E74 LDR W8, [X0 + 0xE0]
	0x01CA3E78 FMOV S2, -1
	0x01CA3E7C FMUL S3, S3, S4
	0x01CA3E80 FADD S1, S3, S1
	0x01CA3E84 FDIV S0, S1, S0
	0x01CA3E88 FMOV S1, 1
	0x01CA3E8C FMIN S1, S0, S1
	0x01CA3E90 FCMP S0, S2
	0x01CA3E94 FCSEL S9, S1, S2, PL
	0x01CA3E98 STR S5, [X31 + 0x50]
	0x01CA3E9C CBNZ W8, 0x1CA3EA4
	0x01CA3EA0 BL 0x1B6E8F8
	0x01CA3EA4 FCVT S0, S9
	0x01CA3EA8 BL 0x3D19890
	0x01CA3EAC LDR V1, [X31 + 0xC]
	0x01CA3EB0 LDR V5, [X31 + 0x50]
	0x01CA3EB4 LDR V6, [X31 + 0x48]
	0x01CA3EB8 LDR V7, [X31 + 0x34]
	0x00000000 INVALID
	0x01CA3EC0 FMUL S1, S0, S1
	0x01CA3EC4 MOV V4.16B, V15.16B
	0x01CA3EC8 FMUL S0, S4, S1
	0x01CA3ECC LDR V4, [X31 + 0x4C]
	0x01CA3ED0 LDR V9, [X31 + 0x40]
	0x01CA3ED4 FMUL S2, S12, S1
	0x01CA3ED8 FMUL S1, S10, S1
	0x01CA3EDC LDR V12, [X31 + 0x58]
	0x01CA3EE0 LDR V10, [X31 + 0x3C]
	0x01CA3EE4 FMOV S3, 0.5
	0x01CA3EE8 FMUL S0, S0, S4
	0x01CA3EEC FMUL S2, S2, S4
	0x01CA3EF0 FMUL S1, S1, S4
	0x01CA3EF4 FMUL S0, S0, S3
	0x01CA3EF8 FMUL S2, S2, S3
	0x01CA3EFC FMUL S1, S1, S3
	0x01CA3F00 FSUB S11, S11, S5
	0x01CA3F04 FSUB S9, S9, S6
	0x01CA3F08 FSUB S13, S13, S7
	0x01CA3F0C FSUB S14, S14, S0
	0x01CA3F10 FSUB S12, S12, S2
	0x01CA3F14 FSUB S10, S10, S1
	0x01CA3F18 LDR X0, [X19 + 0x130]
	0x01CA3F1C CBZ X0, 0x1CA3F78
	0x01CA3F20 FDIV S2, S13, S8
	0x01CA3F24 FDIV S1, S9, S8
	0x01CA3F28 FDIV S0, S11, S8
	0x01CA3F2C MOV X1, X31
	0x01CA3F30 BL 0x3AF650C
	0x01CA3F34 LDR X0, [X19 + 0x130]
	0x01CA3F38 CBZ X0, 0x1CA3F78
	0x01CA3F3C FDIV S0, S14, S8
	0x01CA3F40 FDIV S1, S12, S8
	0x01CA3F44 FDIV S2, S10, S8
	0x01CA3F48 MOV X1, X31
	0x01CA3F4C BL 0x3AF6644
	0x01CA3F50 STRB W31, [X19 + 0x150]
	0x01CA3F54 LDP X20, X19, [X31 + 0xD0]
	0x01CA3F58 LDP X22, X21, [X31 + 0xC0]
	0x01CA3F5C LDR X30, [X31 + 0xB0]
	0x01CA3F60 LDP D9, D8, [X31 + 0xA0]
	0x01CA3F64 LDP D11, D10, [X31 + 0x90]
	0x01CA3F68 LDP D13, D12, [X31 + 0x80]
	0x01CA3F6C LDP D15, D14, [X31 + 0x70]
	0x01CA3F70 ADD X31, X31, 0xE0
	0x01CA3F74 RET
	0x01CA3F78 BL 0x1B6EA1C
	0x01CA3F7C STR X30, [X31 - 0x20]!
	0x01CA3F80 STP X20, X19, [X31 + 0x10]
	0x01CA3F84 MOV X19, X0
	0x01CA3F88 LDR X0, [X0 + 0x40]
	0x01CA3F8C CBZ X0, 0x1CA3FE4
	0x01CA3F90 LDRB W8, [X0 + 0x60]
	0x01CA3F94 TBNZ X8, 0x1, 0x1CA3FE4
	0x01CA3F98 MOV X20, X1
	0x01CA3F9C MOV X1, X31
	0x01CA3FA0 BL 0x1D9E780
	0x01CA3FA4 TBZ X0, 0x0, 0x1CA3FE4
	0x01CA3FA8 CBZ X20, 0x1CA3FF0
	0x01CA3FAC MOV X0, X20
	0x01CA3FB0 MOV X1, X31
	0x01CA3FB4 BL 0x3A9B0C0
	0x01CA3FB8 LDR X8, [X19 + 0x130]
	0x01CA3FBC CBZ X8, 0x1CA3FF0
	0x01CA3FC0 MOV X20, X0
	0x01CA3FC4 MOV X0, X8
	0x01CA3FC8 MOV X1, X31
	0x01CA3FCC BL 0x3AF646C
	0x01CA3FD0 MOV X0, X19
	0x01CA3FD4 MOV X1, X20
	0x01CA3FD8 LDP X20, X19, [X31 + 0x10]
	0x01CA3FDC LDR X30, [X31], #0x20
	0x01CA3FE0 B 0x1CA3FF4
	0x01CA3FE4 LDP X20, X19, [X31 + 0x10]
	0x01CA3FE8 LDR X30, [X31], #0x20
	0x01CA3FEC RET
	0x01CA3FF0 BL 0x1B6EA1C
	0x01CA3FF4 STP D15, D14, [X31 - 0x80]!
	0x01CA3FF8 STP D13, D12, [X31 + 0x10]
	0x01CA3FFC STP D11, D10, [X31 + 0x20]
	0x01CA4000 STP D9, D8, [X31 + 0x30]
	0x01CA4004 STR X30, [X31 + 0x40]
	0x01CA4008 STP X24, X23, [X31 + 0x50]
	0x01CA400C STP X22, X21, [X31 + 0x60]
	0x01CA4010 STP X20, X19, [X31 + 0x70]
	0x01CA4014 ADRP X21, 0x257F000
	0x01CA4018 ADRP X22, 0x22A9000
	0x01CA401C LDRB W8, [X21 + 0x42D]
	0x01CA4020 LDR X22, [X22 + 0x478]
	0x01CA4024 MOV V8.16B, V2.16B
	0x01CA4028 MOV V9.16B, V1.16B
	0x01CA402C MOV V10.16B, V0.16B
	0x01CA4030 MOV X20, X1
	0x01CA4034 MOV X19, X0
	0x01CA4038 TBNZ X8, 0x0, 0x1CA4080
	0x01CA403C ADRP X0, 0x22AA000
	0x01CA4040 LDR X0, [X0 + 0x2A0]
	0x01CA4044 BL 0x1B6E7F0
	0x01CA4048 ADRP X0, 0x22A9000
	0x01CA404C LDR X0, [X0 + 0x4B8]
	0x01CA4050 BL 0x1B6E7F0
	0x01CA4054 ADRP X0, 0x22AA000
	0x01CA4058 LDR X0, [X0 + 0x2A8]
	0x01CA405C BL 0x1B6E7F0
	0x01CA4060 ADRP X0, 0x22A9000
	0x01CA4064 LDR X0, [X0 + 0x478]
	0x01CA4068 BL 0x1B6E7F0
	0x01CA406C ADRP X0, 0x22AA000
	0x01CA4070 LDR X0, [X0 + 0x4E0]
	0x01CA4074 BL 0x1B6E7F0
	0x01CA4078 MOVZ W8, 0x1
	0x01CA407C STRB W8, [X21 + 0x42D]
	0x01CA4080 LDR X0, [X22]
	0x01CA4084 LDR W8, [X0 + 0xE0]
	0x01CA4088 CBNZ W8, 0x1CA4090
	0x01CA408C BL 0x1B6E8F8
	0x01CA4090 MOV X0, X20
	0x01CA4094 MOV X1, X31
	0x01CA4098 MOV X2, X31
	0x01CA409C BL 0x3AA0AF0
	0x01CA40A0 TBNZ X0, 0x0, 0x1CA43C8
	0x01CA40A4 LDR X0, [X19 + 0x40]
	0x01CA40A8 CBZ X0, 0x1CA43C8
	0x01CA40AC LDRB W8, [X0 + 0x60]
	0x01CA40B0 TBNZ X8, 0x1, 0x1CA43C8
	0x01CA40B4 MOV X1, X31
	0x01CA40B8 BL 0x1D9E780
	0x01CA40BC TBZ X0, 0x0, 0x1CA43C8
	0x01CA40C0 CBZ X20, 0x1CA43EC
	0x01CA40C4 ADRP X8, 0x22AA000
	0x01CA40C8 LDR X8, [X8 + 0x2A0]
	0x01CA40CC MOV X0, X20
	0x01CA40D0 LDR X1, [X8]
	0x01CA40D4 BL 0x20CF4D0
	0x01CA40D8 CBZ X0, 0x1CA43C8
	0x01CA40DC ADRP X8, 0x22AA000
	0x01CA40E0 LDR X8, [X8 + 0x2A8]
	0x01CA40E4 LDR X9, [X0]
	0x01CA40E8 MOV X20, X0
	0x01CA40EC LDR X8, [X8]
	0x01CA40F0 LDRB W11, [X9 + 0x130]
	0x01CA40F4 LDRB W10, [X8 + 0x130]
	0x01CA40F8 CMP W11, W10
	0x01CA40FC B.CC 0x1CA4124
	0x01CA4100 LDR X9, [X9 + 0xC8]
	0x01CA4104 ADD X9, X9, X10, 0x3, LSL
	0x01CA4108 LDUR X9, [X9 - 0x8]
	0x01CA410C CMP X9, X8
	0x01CA4110 B.NE 0x1CA4124
	0x01CA4114 MOV X0, X20
	0x01CA4118 MOV X1, X31
	0x01CA411C BL 0x1CAE940
	0x01CA4120 TBNZ X0, 0x0, 0x1CA43C8
	0x01CA4124 MOV X0, X31
	0x01CA4128 BL 0x3AA4844
	0x01CA412C LDR V1, [X19 + 0x1F4]
	0x01CA4130 ADRP X8, 0xFFFFFFFFFEE05000
	0x01CA4134 LDR V2, [X8 + 0xD30]
	0x01CA4138 FSUB S0, S0, S1
	0x01CA413C FCMP S0, S2
	0x01CA4140 B.MI 0x1CA43C8
	0x01CA4144 ADRP X21, 0x257F000
	0x01CA4148 LDRB W8, [X21 + 0x440]
	0x01CA414C CBNZ W8, 0x1CA4164
	0x01CA4150 ADRP X0, 0x22A9000
	0x01CA4154 LDR X0, [X0 + 0x488]
	0x01CA4158 BL 0x1B6E7F0
	0x01CA415C MOVZ W8, 0x1
	0x01CA4160 STRB W8, [X21 + 0x440]
	0x01CA4164 ADRP X23, 0x22A9000
	0x01CA4168 LDR X23, [X23 + 0x488]
	0x01CA416C LDR X0, [X23]
	0x01CA4170 LDR W8, [X0 + 0xE0]
	0x01CA4174 CBNZ W8, 0x1CA417C
	0x01CA4178 BL 0x1B6E8F8
	0x01CA417C LDR X0, [X19 + 0x130]
	0x01CA4180 CBZ X0, 0x1CA43EC
	0x01CA4184 FMUL S0, S10, S10
	0x01CA4188 FMUL S1, S9, S9
	0x01CA418C FADD S0, S0, S1
	0x01CA4190 FMUL S1, S8, S8
	0x01CA4194 FADD S0, S1, S0
	0x01CA4198 MOV X1, X31
	0x01CA419C FSQRT S14, S0
	0x01CA41A0 BL 0x3AF67EC
	0x01CA41A4 ADRP X21, 0x257F000
	0x01CA41A8 LDRB W8, [X21 + 0x455]
	0x01CA41AC FMOV S1, -20
	0x01CA41B0 FADD S11, S14, S1
	0x01CA41B4 FMOV S1, 0.125
	0x01CA41B8 FMUL S12, S0, S1
	0x01CA41BC CBNZ W8, 0x1CA41D4
	0x01CA41C0 ADRP X0, 0x22A9000
	0x01CA41C4 LDR X0, [X0 + 0x488]
	0x01CA41C8 BL 0x1B6E7F0
	0x01CA41CC MOVZ W8, 0x1
	0x01CA41D0 STRB W8, [X21 + 0x455]
	0x01CA41D4 LDR X0, [X23]
	0x01CA41D8 FMUL S11, S11, S12
	0x01CA41DC LDR W8, [X0 + 0xE0]
	0x01CA41E0 CBNZ W8, 0x1CA41E8
	0x01CA41E4 BL 0x1B6E8F8
	0x01CA41E8 MOVZ W8, 0x7F800000
	0x01CA41EC FRINTM S0, S11
	0x01CA41F0 FMOV S1, W8
	0x01CA41F4 FCVTMS W9, S11
	0x01CA41F8 FCMP S0, S1
	0x01CA41FC MOVZ W8, 0x80000000
	0x01CA4200 CSEL W8, W8, W9, EQ
	0x01CA4204 CMP W8, 0x1
	0x01CA4208 B.LT 0x1CA43C8
	0x01CA420C LDRB W9, [X21 + 0x455]
	0x01CA4210 LDR V11, [X19 + 0x98]
	0x01CA4214 CMP W8, 0xF
	0x01CA4218 MOVZ W10, 0xF
	0x01CA421C CSEL W8, W8, W10, LT
	0x01CA4220 SCVTF S15, W8
	0x01CA4224 CBNZ W9, 0x1CA423C
	0x01CA4228 ADRP X0, 0x22A9000
	0x01CA422C LDR X0, [X0 + 0x488]
	0x01CA4230 BL 0x1B6E7F0
	0x01CA4234 MOVZ W8, 0x1
	0x01CA4238 STRB W8, [X21 + 0x455]
	0x01CA423C LDR X0, [X23]
	0x01CA4240 FMUL S11, S11, S15
	0x01CA4244 LDR W8, [X0 + 0xE0]
	0x01CA4248 CBNZ W8, 0x1CA4250
	0x01CA424C BL 0x1B6E8F8
	0x01CA4250 MOVZ W8, 0x7F800000
	0x01CA4254 FRINTM S0, S11
	0x01CA4258 FMOV S1, W8
	0x01CA425C FCVTMS W9, S11
	0x01CA4260 FCMP S0, S1
	0x01CA4264 MOVZ W8, 0x80000000
	0x01CA4268 MOV X0, X19
	0x01CA426C MOV X1, X31
	0x01CA4270 CSEL W21, W8, W9, EQ
	0x01CA4274 BL 0x3A9B084
	0x01CA4278 CBZ X0, 0x1CA43EC
	0x01CA427C MOV X1, X31
	0x01CA4280 BL 0x3AA7658
	0x01CA4284 ADRP X24, 0x257F000
	0x01CA4288 LDRB W8, [X24 + 0x441]
	0x01CA428C LDR X22, [X19 + 0xB8]
	0x01CA4290 MOV V11.16B, V0.16B
	0x01CA4294 MOV V12.16B, V1.16B
	0x01CA4298 MOV V13.16B, V2.16B
	0x01CA429C CBNZ W8, 0x1CA42B4
	0x01CA42A0 ADRP X0, 0x22A9000

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+48], D14
	003 Move [X31+56], D13
	004 Move [X31+64], D12
	005 Move [X31+72], D11
	006 Move [X31+80], D10
	007 Move [X31+88], D9
	008 Move [X31+96], D8
	009 Move [X31+104], X30
	010 Move [X31+112], X24
	011 Move [X31+120], X23
	012 Move [X31+128], X22
	013 Move [X31+136], X21
	014 Move [X31+144], X20
	015 Move [X31+152], X19
	016 Move X20, 0x2581000
	017 Move W8, [X20+1064]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {52}
	023 Move X0, 0x22AB000
	024 Move X0, [X0+1456]
	025 Call 0x1B6F7F0
	026 Move X0, 0x22AB000
	027 Move X0, [X0+1464]
	028 Call 0x1B6F7F0
	029 Move X0, 0x22AB000
	030 Move X0, [X0+1472]
	031 Call 0x1B6F7F0
	032 Move X0, 0x22AB000
	033 Move X0, [X0+1576]
	034 Call 0x1B6F7F0
	035 Move X0, 0x22AB000
	036 Move X0, [X0+1144]
	037 Call 0x1B6F7F0
	038 Move X0, 0x22AC000
	039 Move X0, [X0+1216]
	040 Call 0x1B6F7F0
	041 Move X0, 0x22AC000
	042 Move X0, [X0+1224]
	043 Call 0x1B6F7F0
	044 Move X0, 0x22AC000
	045 Move X0, [X0+1232]
	046 Call 0x1B6F7F0
	047 Move X0, 0x22AC000
	048 Move X0, [X0+1240]
	049 Call 0x1B6F7F0
	050 Move W8, 1
	051 Move [X20+1064], W8
	052 Move X0, X19
	053 Move X1, X31
	054 Move [X31+40], X31
	055 Move [X31+32], W31
	056 Call NetworkBehaviour.FixedUpdateNetwork, X0
	057 Move X0, [X19+64]
	058 Compare X0, 0
	059 JumpIfEqual {432}
	060 Move W8, [X0+96]
	061 Move TEMP, X8
	062 And TEMP, TEMP, 2
	063 Compare TEMP, 2
	064 JumpIfEqual {432}
	065 Move X1, X31
	066 Call NetworkObject.get_HasStateAuthority, X0
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {432}
	071 Move X0, X19
	072 Call GrabbableItem.get_isAttached, X0
	073 Move X22, 0x22AB000
	074 Move X22, [X22+1144]
	075 Move X21, [X19+288]
	076 Move W20, W0
	077 Move X8, [X22]
	078 Move W9, [X8+224]
	079 Compare W9, 0
	080 JumpIfNotEqual {83}
	081 Move X0, X8
	082 Call 0x1B6F8F8
	083 Move X0, X21
	084 Move X1, X31
	085 Move X2, X31
	086 Call Object.op_Inequality, X0, X1
	087 Move TEMP, X20
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {223}
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {255}
	095 Move X0, [X19+288]
	096 Compare X0, 0
	097 JumpIfEqual {448}
	098 Move X8, [X0+64]
	099 Compare X8, 0
	100 JumpIfEqual {116}
	101 Move W9, [X8+96]
	102 Move TEMP, X9
	103 And TEMP, TEMP, 2
	104 Compare TEMP, 2
	105 JumpIfEqual {116}
	106 Move X0, X8
	107 Move X1, X31
	108 Call NetworkObject.get_HasStateAuthority, X0
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfEqual {184}
	113 Move X0, [X19+288]
	114 Compare X0, 0
	115 JumpIfEqual {448}
	116 Move X20, [X19+304]
	117 Move X1, X31
	118 Call Component.get_transform, X0
	119 Compare X0, 0
	120 JumpIfEqual {448}
	121 Move X1, X31
	122 Call Transform.get_position, X0
	123 Compare X20, 0
	124 JumpIfEqual {448}
	125 Move X0, X20
	126 Move X1, X31
	127 Call Rigidbody.set_position, X0, X1
	128 Move X0, [X19+288]
	129 Compare X0, 0
	130 JumpIfEqual {448}
	131 Move X20, [X19+304]
	132 Move X1, X31
	133 Call Component.get_transform, X0
	134 Compare X0, 0
	135 JumpIfEqual {448}
	136 Move X1, X31
	137 Call Transform.get_rotation, X0
	138 Compare X20, 0
	139 JumpIfEqual {448}
	140 Move X0, X20
	141 Move X1, X31
	142 Call Rigidbody.set_rotation, X0, X1
	143 Move X21, 0x2581000
	144 Move W8, [X21+1087]
	145 Move X20, [X19+304]
	146 Compare W8, 0
	147 JumpIfNotEqual {153}
	148 Move X0, 0x22AB000
	149 Move X0, [X0+1152]
	150 Call 0x1B6F7F0
	151 Move W8, 1
	152 Move [X21+1087], W8
	153 Compare X20, 0
	154 JumpIfEqual {448}
	155 Move X23, 0x22AB000
	156 Move X23, [X23+1152]
	157 Move X0, X20
	158 Move X1, X31
	159 Move X8, [X23]
	160 Move X8, [X8+184]
	161 Move S1, [X8+4]
	162 Move S2, [X8+8]
	163 Move V0, [X8]
	164 Call Rigidbody.set_velocity, X0, X1
	165 Move W8, [X21+1087]
	166 Move X20, [X19+304]
	167 Compare W8, 0
	168 JumpIfNotEqual {174}
	169 Move X0, 0x22AB000
	170 Move X0, [X0+1152]
	171 Call 0x1B6F7F0
	172 Move W8, 1
	173 Move [X21+1087], W8
	174 Compare X20, 0
	175 JumpIfEqual {448}
	176 Move X8, [X23]
	177 Move X0, X20
	178 Move X1, X31
	179 Move X8, [X8+184]
	180 Move S1, [X8+4]
	181 Move S2, [X8+8]
	182 Move V0, [X8]
	183 Call Rigidbody.set_angularVelocity, X0, X1
	184 Move X8, [X19+288]
	185 Compare X8, 0
	186 JumpIfEqual {448}
	187 Move X0, [X22]
	188 Move X20, [X8+64]
	189 Move W9, [X0+224]
	190 Compare W9, 0
	191 JumpIfNotEqual {193}
	192 Call 0x1B6F8F8
	193 Move X0, X20
	194 Move X1, X31
	195 Move X2, X31
	196 Call Object.op_Equality, X0, X1
	197 Move TEMP, X0
	198 And TEMP, TEMP, 1
	199 Compare TEMP, 1
	200 JumpIfEqual {329}
	201 Move X8, [X19+288]
	202 Compare X8, 0
	203 JumpIfEqual {448}
	204 Move X0, [X8+64]
	205 Compare X0, 0
	206 JumpIfEqual {448}
	207 Move X1, X31
	208 Call NetworkObject.get_IsValid, X0
	209 Move TEMP, X0
	210 And TEMP, TEMP, 1
	211 Compare TEMP, 1
	212 JumpIfNotEqual {329}
	213 Move X8, [X19+288]
	214 Compare X8, 0
	215 JumpIfEqual {448}
	216 Move X9, [X8+64]
	217 Compare X9, 0
	218 JumpIfEqual {271}
	219 Move X9, [X9+32]
	220 Compare X9, 0
	221 JumpIfEqual {271}
	222 Move W23, [X9]
	223 Move TEMP, X0
	224 And TEMP, TEMP, 1
	225 Compare TEMP, 1
	226 JumpIfNotEqual {229}
	227 Move X0, X19
	228 Call GrabbableItem.HandleGrabbedChanged, X0
	229 Move X0, X19
	230 Call GrabbableItem.get_backpackId, X0
	231 Move [X31+40], X0
	232 Add X0, X31, 40
	233 Move X1, X31
	234 Call NetworkBehaviourId.get_IsValid, X0
	235 Move TEMP, X0
	236 And TEMP, TEMP, 1
	237 Compare TEMP, 1
	238 JumpIfEqual {426}
	239 Move X8, [X19+128]
	240 Compare X8, 0
	241 JumpIfEqual {448}
	242 Move X0, X19
	243 Call GrabbableItem.get_respawnTimer, X0
	244 Move [X31+32], W0
	245 Move X1, [X19+56]
	246 Add X0, X31, 32
	247 Move X2, X31
	248 Call TickTimer.Expired, X0, X1
	249 Move TEMP, X0
	250 And TEMP, TEMP, 1
	251 Compare TEMP, 1
	252 JumpIfNotEqual {426}
	253 Move X0, X19
	254 Call GrabbableItem.RespawnOrDespawn, X0
	255 Move X0, X19
	256 Call GrabbableItem.HandleGrabbedChanged, X0
	257 Move X0, [X22]
	258 Move X20, [X19+288]
	259 Move W8, [X0+224]
	260 Compare W8, 0
	261 JumpIfNotEqual {263}
	262 Call 0x1B6F8F8
	263 Move X0, X20
	264 Move X1, X31
	265 Move X2, X31
	266 Call Object.op_Equality, X0, X1
	267 Move TEMP, X0
	268 And TEMP, TEMP, 1
	269 Compare TEMP, 1
	270 JumpIfEqual {374}
	271 Move W23, W31
	272 Move W24, [X8+104]
	273 Move X0, X19
	274 Call GrabbableItem.get_attachedAnchorId, X0
	275 Move X21, 0x2580000
	276 Move W8, [X21+1102]
	277 Move X20, X0
	278 Compare W8, 0
	279 JumpIfNotEqual {285}
	280 Move X0, 0x22AB000
	281 Move X0, [X0+488]
	282 Call 0x1B6F7F0
	283 Move W8, 1
	284 Move [X21+1102], W8
	285 Move X22, 0x22AB000
	286 Move X22, [X22+488]
	287 Move X0, [X22]
	288 Move W8, [X0+224]
	289 Compare W8, 0
	290 JumpIfNotEqual {292}
	291 Call 0x1B6F8F8
	292 NotImplemented "Instruction CMP not yet implemented."
	293 Move X8, X20
	294 ShiftRight X8, 32
	295 And X8, X8, 0x7FFFFFFF
	296 NotImplemented "Instruction CMP not yet implemented."
	297 Move X0, [X19+288]
	298 Compare X0, 0
	299 JumpIfEqual {448}
	300 Call AttachedItemAnchor.get_grabbedItem, X0
	301 Move X8, [X19+64]
	302 Move X20, X0
	303 Compare X8, 0
	304 JumpIfEqual {309}
	305 Move X8, [X8+32]
	306 Compare X8, 0
	307 JumpIfEqual {309}
	308 Move W23, [X8]
	309 Move W23, W31
	310 Move W8, [X21+1102]
	311 Move W24, [X19+104]
	312 Compare W8, 0
	313 JumpIfNotEqual {319}
	314 Move X0, 0x22AB000
	315 Move X0, [X0+488]
	316 Call 0x1B6F7F0
	317 Move W8, 1
	318 Move [X21+1102], W8
	319 Move X0, [X22]
	320 Move W8, [X0+224]
	321 Compare W8, 0
	322 JumpIfNotEqual {324}
	323 Call 0x1B6F8F8
	324 NotImplemented "Instruction CMP not yet implemented."
	325 Move X8, X20
	326 ShiftRight X8, 32
	327 And X8, X8, 0x7FFFFFFF
	328 NotImplemented "Instruction CMP not yet implemented."
	329 Move X8, 0x22AA000
	330 Move X8, [X8+1472]
	331 Move X0, [X8]
	332 Call 0x1B6FA0C
	333 Move X8, 0x22AA000
	334 Move X8, [X8+1464]
	335 Move X20, X0
	336 Move X1, [X8]
	337 Call Dictionary`2<Object, Object>..ctor, X0
	338 Move X0, [X19+128]
	339 Compare X0, 0
	340 JumpIfEqual {448}
	341 Move X1, X31
	342 Call Object.get_name, X0
	343 Compare X20, 0
	344 JumpIfEqual {448}
	345 Move X8, 0x22AB000
	346 Move X9, 0x22AA000
	347 Move X8, [X8+1232]
	348 Move X9, [X9+1456]
	349 Move X2, X0
	350 Move X0, X20
	351 Move X1, [X8]
	352 Move X3, [X9]
	353 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	354 Move X8, 0x22AA000
	355 Move X8, [X8+1576]
	356 Move X0, [X8]
	357 Move W8, [X0+224]
	358 Compare W8, 0
	359 JumpIfNotEqual {361}
	360 Call 0x1B6F8F8
	361 Move X8, 0x22AB000
	362 Move X9, 0x22AB000
	363 Move X10, 0x22AB000
	364 Move X8, [X8+1240]
	365 Move X9, [X9+1216]
	366 Move X10, [X10+1224]
	367 Move W4, 918
	368 Move X0, [X8]
	369 Move X2, [X9]
	370 Move X3, [X10]
	371 Move X1, X20
	372 Move X5, X31
	373 Call Log.Warning, X0, X1, X2, X3, X4
	374 Move X0, X19
	375 Call GrabbableItem.get_attachedAnchorId, X0
	376 Move X0, [X19+304]
	377 Compare X0, 0
	378 JumpIfEqual {448}
	379 Move X1, X31
	380 Call Rigidbody.get_position, X0
	381 Move X0, [X19+304]
	382 Compare X0, 0
	383 JumpIfEqual {448}
	384 Move X1, X31
	385 Move V8, V0
	386 Move V9, V1
	387 Move V10, V2
	388 Call Rigidbody.get_rotation, X0
	389 Move X20, 0x2580000
	390 Move W8, [X20+1087]
	391 Move V11, V0
	392 Move V12, V1
	393 Move V13, V2
	394 Move V14, V3
	395 Compare W8, 0
	396 JumpIfNotEqual {402}
	397 Move X0, 0x22AA000
	398 Move X0, [X0+1152]
	399 Call 0x1B6F7F0
	400 Move W8, 1
	401 Move [X20+1087], W8
	402 Move X8, 0x22AA000
	403 Move X8, [X8+1152]
	404 Move X0, X19
	405 Move V3, V11
	406 Move V4, V12
	407 Move X8, [X8]
	408 Move V5, V13
	409 Move V6, V14
	410 Move W2, W31
	411 Move X8, [X8+184]
	412 Move W3, W31
	413 Move S0, [X8]
	414 Move S1, [X8+4]
	415 Move V2, [X8+8]
	416 Move [X31+16], S0
	417 Move [X31+20], S1
	418 Move [X31+28], S2
	419 Move [X31+4], S1
	420 Move [X31+12], S2
	421 Move [X31], S0
	422 Move V0, V8
	423 Move V1, V9
	424 Move V2, V10
	425 Call GrabbableItem.ReleaseInternal, X0, X1, X2, X3, X4, X5, X6, X7
	426 Move W8, [X19+389]
	427 Compare W8, 0
	428 JumpIfEqual {432}
	429 Move X0, X19
	430 Call GrabbableItem.UpdatePlayersAlwaysInterested, X0
	431 Move [X19+389], W31
	432 Move X20, [X31+144]
	433 Move X19, [X31+152]
	434 Move X22, [X31+128]
	435 Move X21, [X31+136]
	436 Move X24, [X31+112]
	437 Move X23, [X31+120]
	438 Move X30, [X31+104]
	439 Move D9, [X31+88]
	440 Move D8, [X31+96]
	441 Move D11, [X31+72]
	442 Move D10, [X31+80]
	443 Move D13, [X31+56]
	444 Move D12, [X31+64]
	445 Move V14, [X31+48]
	446 Add X31, X31, 160
	447 Return 
	448 Call 0x1B6FA1C

Method: System.Void Render()

Disassembly:
	0x01CA4388 LDP X8, X5, [X0]
	0x01CA438C MOV X0, X20
	0x01CA4390 MOV W1, W21
	0x01CA4394 MOV V0.16B, V11.16B
	0x01CA4398 MOV V1.16B, V12.16B
	0x01CA439C MOV V2.16B, V13.16B
	0x01CA43A0 MOV X2, X22
	0x01CA43A4 MOV X3, X31
	0x01CA43A8 MOV V3.16B, V10.16B
	0x01CA43AC MOV V4.16B, V9.16B
	0x01CA43B0 MOV V5.16B, V8.16B
	0x01CA43B4 MOV X4, X23

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call SimulationBehaviour.Render, X0
	006 Move W8, [X19+388]
	007 Compare W8, 0
	008 JumpIfEqual {13}
	009 Move X0, X19
	010 Move W1, W31
	011 Call GrabbableItem.UpdateIsVisible, X0, X1
	012 Move [X19+388], W31
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return 

Method: System.Void RespawnOrDespawn()

Disassembly:
	0x01CA42A4 LDR X0, [X0 + 0x488]
	0x01CA42A8 BL 0x1B6E7F0
	0x01CA42AC MOVZ W8, 0x1
	0x01CA42B0 STRB W8, [X24 + 0x441]
	0x01CA42B4 LDR X0, [X23]
	0x01CA42B8 LDR W8, [X0 + 0xE0]
	0x01CA42BC CBNZ W8, 0x1CA42C4
	0x01CA42C0 BL 0x1B6E8F8
	0x01CA42C4 ADRP X8, 0xFFFFFFFFFEE05000
	0x01CA42C8 LDR V0, [X8 + 0xB64]
	0x01CA42CC FCMP S14, S0
	0x01CA42D0 B.LE 0x1CA42E4
	0x01CA42D4 FDIV S0, S10, S14
	0x01CA42D8 FDIV S1, S9, S14
	0x01CA42DC FDIV S2, S8, S14
	0x01CA42E0 B 0x1CA431C
	0x01CA42E4 ADRP X23, 0x257F000
	0x01CA42E8 LDRB W8, [X23 + 0x43F]
	0x01CA42EC CBNZ W8, 0x1CA4304
	0x01CA42F0 ADRP X0, 0x22A9000
	0x01CA42F4 LDR X0, [X0 + 0x480]
	0x01CA42F8 BL 0x1B6E7F0
	0x01CA42FC MOVZ W8, 0x1
	0x01CA4300 STRB W8, [X23 + 0x43F]
	0x01CA4304 ADRP X8, 0x22A9000
	0x01CA4308 LDR X8, [X8 + 0x480]
	0x01CA430C LDR X8, [X8]
	0x01CA4310 LDR X8, [X8 + 0xB8]
	0x01CA4314 LDP S0, S1, [X8]
	0x01CA4318 LDR V2, [X8 + 0x8]
	0x01CA431C ADRP X9, 0x22A9000
	0x01CA4320 LDR X8, [X20]
	0x01CA4324 LDR X9, [X9 + 0x4B8]
	0x01CA4328 ADRP X10, 0x22AA000
	0x01CA432C FMUL S8, S2, S15
	0x01CA4330 FMUL S9, S1, S15
	0x01CA4334 LDR X1, [X9]
	0x01CA4338 LDR X10, [X10 + 0x4E0]
	0x01CA433C LDRH W9, [X8 + 0x12E]
	0x01CA4340 FMUL S10, S0, S15
	0x01CA4344 LDR X23, [X10]
	0x01CA4348 CBZ X9, 0x1CA436C
	0x01CA434C LDR X10, [X8 + 0xB0]
	0x01CA4350 ADD X10, X10, 0x8
	0x01CA4354 LDUR X11, [X10 - 0x8]
	0x01CA4358 CMP X11, X1
	0x01CA435C B.EQ 0x1CA437C
	0x01CA4360 SUBS X9, X9, 0x1
	0x01CA4364 ADD X10, X10, 0x10
	0x01CA4368 B.NE 0x1CA4354
	0x01CA436C MOV X0, X20
	0x01CA4370 MOV W2, W31
	0x01CA4374 BL 0x1BB4284
	0x01CA4378 B 0x1CA4388
	0x01CA437C LDRSW X9, [X10]
	0x01CA4380 ADD X8, X8, X9, 0x4, LSL
	0x01CA4384 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2580000
	006 Move X20, 0x22AA000
	007 Move W8, [X21+1065]
	008 Move X20, [X20+1144]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22AA000
	015 Move X0, [X0+1144]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X21+1065], W8
	019 Move X0, [X20]
	020 Move X20, [X19+64]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1B6F8F8
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Equality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {67}
	033 Move X0, [X19+64]
	034 Compare X0, 0
	035 JumpIfEqual {83}
	036 Move X1, X31
	037 Call NetworkObject.get_IsValid, X0
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {67}
	042 Move X0, X31
	043 Call NetworkBehaviourId.get_None
	044 Move X1, X0
	045 Move X0, X19
	046 Call GrabbableItem.set_attachedAnchorId, X0, X1
	047 Move X0, X31
	048 Call NetworkBehaviourId.get_None
	049 Move X1, X0
	050 Move X0, X19
	051 Call GrabbableItem.set_backpackId, X0, X1
	052 Move X8, [X19+128]
	053 Compare X8, 0
	054 JumpIfEqual {83}
	055 Move W8, [X8+40]
	056 Move TEMP, X8
	057 And TEMP, TEMP, 4
	058 Compare TEMP, 4
	059 JumpIfEqual {72}
	060 Move X0, X19
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move X30, [X31+32]
	064 Move X21, [X31+40]
	065 Call GrabbableItem.RPC_Respawn, X0
	066 Return 
	067 Move X20, [X31+16]
	068 Move X19, [X31+24]
	069 Move X30, [X31+32]
	070 Move X21, [X31+40]
	071 Return 
	072 Move X0, [X19+56]
	073 Compare X0, 0
	074 JumpIfEqual {83}
	075 Move X1, [X19+64]
	076 Move X20, [X31+16]
	077 Move X19, [X31+24]
	078 Move X2, X31
	079 Move X30, [X31+32]
	080 Move X21, [X31+40]
	081 Call NetworkRunner.Despawn, X0, X1
	082 Return 
	083 Call 0x1B6FA1C

Method: System.Void Despawn()

Disassembly:
	0x01CA43B8 BLR X8
	0x01CA43BC MOV X0, X31
	0x01CA43C0 BL 0x3AA4844
	0x01CA43C4 STR S0, [X19 + 0x1F4]
	0x01CA43C8 LDP X20, X19, [X31 + 0x70]
	0x01CA43CC LDP X22, X21, [X31 + 0x60]
	0x01CA43D0 LDP X24, X23, [X31 + 0x50]
	0x01CA43D4 LDR X30, [X31 + 0x40]
	0x01CA43D8 LDP D9, D8, [X31 + 0x30]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, X0
	003 Move X0, [X0+56]
	004 Compare X0, 0
	005 JumpIfEqual {11}
	006 Move X1, [X8+64]
	007 Move X2, X31
	008 Move X30, [X31+16]
	009 Call NetworkRunner.Despawn, X0, X1
	010 Return 
	011 Call 0x1B6FA1C

Method: System.Void Update()

Disassembly:
	0x01CA43DC LDP D11, D10, [X31 + 0x20]
	0x01CA43E0 LDP D13, D12, [X31 + 0x10]
	0x01CA43E4 LDP D15, D14, [X31], #0x80
	0x01CA43E8 RET
	0x01CA43EC BL 0x1B6EA1C
	0x01CA43F0 STR X30, [X31 - 0x30]!
	0x01CA43F4 STP X22, X21, [X31 + 0x10]
	0x01CA43F8 STP X20, X19, [X31 + 0x20]
	0x01CA43FC ADRP X21, 0x257F000
	0x01CA4400 LDRB W8, [X21 + 0x42E]
	0x01CA4404 MOV X20, X1
	0x01CA4408 MOV X19, X0
	0x01CA440C TBNZ X8, 0x0, 0x1CA4424
	0x01CA4410 ADRP X0, 0x22A9000
	0x01CA4414 LDR X0, [X0 + 0x478]
	0x01CA4418 BL 0x1B6E7F0
	0x01CA441C MOVZ W8, 0x1
	0x01CA4420 STRB W8, [X21 + 0x42E]
	0x01CA4424 CBZ X20, 0x1CA4594
	0x01CA4428 ADRP X22, 0x22A9000
	0x01CA442C LDR X22, [X22 + 0x478]
	0x01CA4430 MOV X0, X20
	0x01CA4434 MOV X1, X31
	0x01CA4438 BL 0x3AF2368
	0x01CA443C MOV X21, X0
	0x01CA4440 MOV X0, X20
	0x01CA4444 MOV X1, X31
	0x01CA4448 BL 0x3AF208C
	0x01CA444C MOV X0, X19
	0x01CA4450 MOV X1, X21
	0x01CA4454 BL 0x1CA3FF4
	0x01CA4458 LDR X0, [X22]
	0x01CA445C LDR X21, [X19 + 0x120]
	0x01CA4460 LDR W8, [X0 + 0xE0]
	0x01CA4464 CBNZ W8, 0x1CA446C
	0x01CA4468 BL 0x1B6E8F8
	0x01CA446C MOV X0, X21
	0x01CA4470 MOV X1, X31
	0x01CA4474 MOV X2, X31
	0x01CA4478 BL 0x3AA0AF0
	0x01CA447C TBNZ X0, 0x0, 0x1CA4584
	0x01CA4480 LDR X8, [X19 + 0x120]
	0x01CA4484 CBZ X8, 0x1CA4594
	0x01CA4488 LDR X0, [X8 + 0x40]
	0x01CA448C CBZ X0, 0x1CA4584
	0x01CA4490 LDRB W8, [X0 + 0x60]
	0x01CA4494 TBNZ X8, 0x1, 0x1CA4584
	0x01CA4498 MOV X1, X31
	0x01CA449C BL 0x1D9E780
	0x01CA44A0 TBZ X0, 0x0, 0x1CA4584
	0x01CA44A4 LDRB W8, [X19 + 0x89]
	0x01CA44A8 CBZ W8, 0x1CA4534
	0x01CA44AC LDR X0, [X22]
	0x01CA44B0 LDR X21, [X19 + 0x120]
	0x01CA44B4 LDR W8, [X0 + 0xE0]
	0x01CA44B8 CBNZ W8, 0x1CA44C0
	0x01CA44BC BL 0x1B6E8F8
	0x01CA44C0 MOV X0, X21
	0x01CA44C4 MOV X1, X31
	0x01CA44C8 MOV X2, X31
	0x01CA44CC BL 0x3A9D6EC
	0x01CA44D0 TBZ X0, 0x0, 0x1CA4534
	0x01CA44D4 LDR X8, [X19 + 0x120]
	0x01CA44D8 CBZ X8, 0x1CA4594
	0x01CA44DC LDRB W8, [X8 + 0x84]
	0x01CA44E0 CBZ W8, 0x1CA4534
	0x01CA44E4 MOV X0, X31
	0x01CA44E8 BL 0x3AA4844
	0x01CA44EC LDR V1, [X19 + 0x154]
	0x01CA44F0 FSUB S0, S0, S1
	0x01CA44F4 FMOV S1, 0.25
	0x01CA44F8 FCMP S0, S1
	0x01CA44FC B.LE 0x1CA4534
	0x01CA4500 LDR X21, [X19 + 0x120]
	0x01CA4504 MOV X0, X20
	0x01CA4508 MOV X1, X31
	0x01CA450C BL 0x3AF208C
	0x01CA4510 CBZ X21, 0x1CA4594
	0x01CA4514 LDR X8, [X21 + 0x98]
	0x01CA4518 CBZ X8, 0x1CA4534
	0x01CA451C LDR W1, [X21 + 0x80]
	0x01CA4520 LDR X9, [X8 + 0x18]
	0x01CA4524 LDR X0, [X8 + 0x40]
	0x01CA4528 LDR X3, [X8 + 0x28]
	0x01CA452C MOV X2, X20
	0x01CA4530 BLR X9
	0x01CA4534 LDR W21, [X19 + 0x140]
	0x01CA4538 MOV X0, X20
	0x01CA453C MOV X1, X31
	0x01CA4540 BL 0x3AF2368
	0x01CA4544 CBZ X0, 0x1CA4594
	0x01CA4548 MOV X1, X31
	0x01CA454C BL 0x3A9D928
	0x01CA4550 MOV W1, W0
	0x01CA4554 MOV X0, X21
	0x01CA4558 MOV X2, X31
	0x01CA455C BL 0x398D3BC
	0x01CA4560 TBZ X0, 0x0, 0x1CA4578
	0x01CA4564 MOVZ W8, 0x1
	0x01CA4568 MOV X0, X19
	0x01CA456C MOV X1, X20
	0x01CA4570 STRB W8, [X19 + 0x150]
	0x01CA4574 BL 0x1CA4598
	0x01CA4578 MOV X0, X31
	0x01CA457C BL 0x3AA4844
	0x01CA4580 STR S0, [X19 + 0x154]
	0x01CA4584 LDP X20, X19, [X31 + 0x20]
	0x01CA4588 LDP X22, X21, [X31 + 0x10]
	0x01CA458C LDR X30, [X31], #0x30
	0x01CA4590 RET
	0x01CA4594 BL 0x1B6EA1C
	0x01CA4598 SUB X31, X31, 0x150
	0x01CA459C STR D14, [X31 + 0xD0]
	0x01CA45A0 STP D13, D12, [X31 + 0xE0]
	0x01CA45A4 STP D11, D10, [X31 + 0xF0]
	0x01CA45A8 STP D9, D8, [X31 + 0x100]
	0x01CA45AC STP X29, X30, [X31 + 0x110]
	0x01CA45B0 STP X24, X23, [X31 + 0x120]
	0x01CA45B4 STP X22, X21, [X31 + 0x130]
	0x01CA45B8 STP X20, X19, [X31 + 0x140]
	0x01CA45BC ADRP X21, 0x257F000
	0x01CA45C0 LDRB W8, [X21 + 0x430]
	0x01CA45C4 MOV X20, X1
	0x01CA45C8 MOV X19, X0
	0x01CA45CC TBNZ X8, 0x0, 0x1CA45E4
	0x01CA45D0 ADRP X0, 0x22AA000
	0x01CA45D4 LDR X0, [X0 + 0x4E8]
	0x01CA45D8 BL 0x1B6E7F0
	0x01CA45DC MOVZ W8, 0x1
	0x01CA45E0 STRB W8, [X21 + 0x430]
	0x01CA45E4 MOVI V0.2D, 0x0
	0x01CA45E8 STP V0, V0, [X31 + 0xB0]
	0x01CA45EC STP V0, V0, [X31 + 0x90]
	0x01CA45F0 STP V0, V0, [X31 + 0x70]
	0x01CA45F4 STP V0, V0, [X31 + 0x50]
	0x01CA45F8 CBZ X20, 0x1CA48D0
	0x01CA45FC MOV X0, X20
	0x01CA4600 MOV X1, X31
	0x01CA4604 BL 0x3AF2408
	0x01CA4608 LDR X8, [X19 + 0x1D0]
	0x01CA460C STR W0, [X19 + 0x1D8]
	0x01CA4610 CBZ X8, 0x1CA48D0
	0x01CA4614 LDR W8, [X8 + 0x18]
	0x01CA4618 MOV W1, W0
	0x01CA461C CMP W0, W8
	0x01CA4620 B.LE 0x1CA4638
	0x01CA4624 ADRP X8, 0x22AA000
	0x01CA4628 LDR X8, [X8 + 0x4E8]
	0x01CA462C LDR X0, [X8]
	0x01CA4630 BL 0x1B6E868
	0x01CA4634 STR X0, [X19 + 0x1D0]
	0x01CA4638 LDR X0, [X19 + 0x130]
	0x01CA463C CBZ X0, 0x1CA48D0
	0x01CA4640 MOV X1, X31
	0x01CA4644 BL 0x3AF6B78
	0x01CA4648 LDR X0, [X19 + 0x130]
	0x01CA464C CBZ X0, 0x1CA48D0
	0x01CA4650 MOV X1, X31
	0x01CA4654 MOV V8.16B, V0.16B
	0x01CA4658 MOV V9.16B, V1.16B
	0x01CA465C MOV V10.16B, V2.16B
	0x01CA4660 BL 0x3AF6CB0
	0x01CA4664 ADRP X21, 0x257F000
	0x01CA4668 LDRB W8, [X21 + 0x456]
	0x01CA466C MOV V11.16B, V0.16B
	0x01CA4670 MOV V12.16B, V1.16B
	0x01CA4674 MOV V13.16B, V2.16B
	0x01CA4678 MOV V14.16B, V3.16B
	0x01CA467C CBNZ W8, 0x1CA4694
	0x01CA4680 ADRP X0, 0x22A9000
	0x01CA4684 LDR X0, [X0 + 0x480]
	0x01CA4688 BL 0x1B6E7F0
	0x01CA468C MOVZ W8, 0x1
	0x01CA4690 STRB W8, [X21 + 0x456]
	0x01CA4694 ADRP X21, 0x22A9000
	0x01CA4698 LDR X21, [X21 + 0x480]
	0x01CA469C MOV V1.16B, V9.16B
	0x01CA46A0 MOV V2.16B, V10.16B
	0x01CA46A4 MOV V3.16B, V11.16B
	0x01CA46A8 LDR X8, [X21]
	0x01CA46AC MOV V4.16B, V12.16B
	0x01CA46B0 MOV V5.16B, V13.16B
	0x01CA46B4 MOV V6.16B, V14.16B
	0x01CA46B8 LDR X8, [X8 + 0xB8]
	0x01CA46BC MOV X0, X31
	0x01CA46C0 LDR V0, [X8 + 0x14]
	0x01CA46C4 LDUR X9, [X8 + 0xC]
	0x01CA46C8 ADD X8, X31, 0x10
	0x01CA46CC STR S0, [X31 + 0x8]
	0x01CA46D0 MOV V0.16B, V8.16B
	0x01CA46D4 STR X9, [X31]
	0x01CA46D8 BL 0x3A8F354
	0x01CA46DC LDP V0, V1, [X31 + 0x10]
	0x01CA46E0 LDP V2, V3, [X31 + 0x30]
	0x01CA46E4 ADD X8, X31, 0x10
	0x01CA46E8 ADD X0, X31, 0x50
	0x01CA46EC MOV X1, X31
	0x01CA46F0 STP V0, V1, [X31 + 0x50]
	0x01CA46F4 STP V2, V3, [X31 + 0x70]
	0x01CA46F8 BL 0x3A8F578
	0x01CA46FC ADRP X22, 0x257F000
	0x01CA4700 LDP V0, V1, [X31 + 0x10]
	0x01CA4704 LDP V2, V3, [X31 + 0x30]
	0x01CA4708 LDRB W8, [X22 + 0x43F]
	0x01CA470C STP V0, V1, [X31 + 0x90]
	0x01CA4710 STP V2, V3, [X31 + 0xB0]
	0x01CA4714 CBNZ W8, 0x1CA472C
	0x01CA4718 ADRP X0, 0x22A9000
	0x01CA471C LDR X0, [X0 + 0x480]
	0x01CA4720 BL 0x1B6E7F0
	0x01CA4724 MOVZ W8, 0x1
	0x01CA4728 STRB W8, [X22 + 0x43F]
	0x01CA472C LDR X8, [X21]
	0x01CA4730 LDR X9, [X8 + 0xB8]
	0x01CA4734 LDR W8, [X19 + 0x1D8]
	0x01CA4738 LDP S13, S12, [X9]
	0x01CA473C LDR V11, [X9 + 0x8]
	0x01CA4740 CMP W8, 0x1
	0x01CA4744 B.LT 0x1CA4874
	0x01CA4748 ADRP X8, 0xFFFFFFFFFEE05000
	0x01CA474C LDR V14, [X8 + 0xD08]
	0x01CA4750 MOV X21, X31
	0x01CA4754 MOV X22, X31
	0x01CA4758 MOVZ W23, 0x20
	0x01CA475C MOV X0, X20
	0x01CA4760 MOV X1, X31
	0x01CA4764 BL 0x3AF2410
	0x01CA4768 CBZ X0, 0x1CA48D0
	0x01CA476C LDR W8, [X0 + 0x18]
	0x01CA4770 CMP X22, X8
	0x01CA4774 B.CS 0x1CA48D4
	0x01CA4778 ADD X0, X0, X23
	0x01CA477C MOV X1, X31
	0x01CA4780 BL 0x3AF7D18
	0x01CA4784 MOV X0, X20
	0x01CA4788 MOV X1, X31
	0x01CA478C MOV V8.16B, V0.16B
	0x01CA4790 MOV V9.16B, V1.16B
	0x01CA4794 MOV V10.16B, V2.16B
	0x01CA4798 BL 0x3AF2410
	0x01CA479C CBZ X0, 0x1CA48D0
	0x01CA47A0 LDR W8, [X0 + 0x18]
	0x01CA47A4 CMP X22, X8
	0x01CA47A8 B.CS 0x1CA48D4
	0x01CA47AC ADD X0, X0, X23
	0x01CA47B0 MOV X1, X31
	0x01CA47B4 BL 0x3AF7D24
	0x01CA47B8 LDR X24, [X19 + 0x1D0]
	0x01CA47BC CBZ X24, 0x1CA48D0
	0x01CA47C0 FMUL S0, S0, S14
	0x01CA47C4 FMUL S1, S1, S14
	0x01CA47C8 FMUL S2, S2, S14
	0x01CA47CC FADD S8, S8, S0
	0x01CA47D0 FADD S9, S9, S1
	0x01CA47D4 FADD S10, S10, S2
	0x01CA47D8 ADD X0, X31, 0x90
	0x01CA47DC MOV V0.16B, V8.16B
	0x01CA47E0 MOV V1.16B, V9.16B
	0x01CA47E4 MOV V2.16B, V10.16B
	0x01CA47E8 MOV X1, X31
	0x01CA47EC BL 0x3A90598
	0x01CA47F0 LDR W8, [X24 + 0x18]
	0x01CA47F4 CMP X22, X8
	0x01CA47F8 B.CS 0x1CA48D4
	0x01CA47FC ADD X8, X24, X21
	0x01CA4800 STP S0, S1, [X8 + 0x20]
	0x01CA4804 STR S2, [X8 + 0x28]
	0x01CA4808 LDR X8, [X19 + 0x1D0]
	0x01CA480C CBZ X8, 0x1CA48D0
	0x01CA4810 LDR W9, [X8 + 0x18]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+96], X28
	012 Move [X31+104], X27
	013 Move [X31+112], X26
	014 Move [X31+120], X25
	015 Move [X31+128], X24
	016 Move [X31+136], X23
	017 Move [X31+144], X22
	018 Move [X31+152], X21
	019 Move [X31+160], X20
	020 Move [X31+168], X19
	021 Move X20, 0x2580000
	022 Move X21, 0x22AA000
	023 Move W8, [X20+1066]
	024 Move X21, [X21+1144]
	025 Move X19, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {38}
	030 Move X0, 0x22AA000
	031 Move X0, [X0+1144]
	032 Call 0x1B6F7F0
	033 Move X0, 0x22AB000
	034 Move X0, [X0+408]
	035 Call 0x1B6F7F0
	036 Move W8, 1
	037 Move [X20+1066], W8
	038 Move X0, [X21]
	039 Move X20, [X19+288]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1B6F8F8
	044 Move X0, X20
	045 Move X1, X31
	046 Move X2, X31
	047 Call Object.op_Equality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {301}
	052 Move X8, [X19+288]
	053 Compare X8, 0
	054 JumpIfEqual {322}
	055 Move X0, [X8+64]
	056 Compare X0, 0
	057 JumpIfEqual {301}
	058 Move W8, [X0+96]
	059 Move TEMP, X8
	060 And TEMP, TEMP, 2
	061 Compare TEMP, 2
	062 JumpIfEqual {301}
	063 Move X1, X31
	064 Call NetworkObject.get_HasStateAuthority, X0
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {301}
	069 Move X0, [X21]
	070 Move X20, [X19+328]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1B6F8F8
	075 Move X0, X20
	076 Move X1, X31
	077 Move X2, X31
	078 Call Object.op_Inequality, X0, X1
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {301}
	083 Move X0, X19
	084 Move X1, X31
	085 Call Component.get_transform, X0
	086 Compare X0, 0
	087 JumpIfEqual {322}
	088 Move X1, X31
	089 Call Transform.get_position, X0
	090 Move X0, [X19+328]
	091 Compare X0, 0
	092 JumpIfEqual {322}
	093 Move X1, X31
	094 Move V8, V0
	095 Move V9, V1
	096 Move V10, V2
	097 Call Transform.get_position, X0
	098 Subtract S0, S8, S0
	099 Subtract S1, S9, S1
	100 Subtract S2, S10, S2
	101 Multiply S0, S0, S0
	102 Multiply S1, S1, S1
	103 Multiply S2, S2, S2
	104 Add S0, S0, S1
	105 Add S0, S2, S0
	106 Move S1, 1
	107 NotImplemented "Instruction FCMP not yet implemented."
	108 Move X0, X19
	109 Call GrabbableItem.SnapToFollow, X0
	110 Move W8, [X19+137]
	111 Compare W8, 0
	112 JumpIfEqual {301}
	113 Move X8, [X19+288]
	114 Compare X8, 0
	115 JumpIfEqual {322}
	116 Move W8, [X8+132]
	117 Compare W8, 0
	118 JumpIfEqual {301}
	119 Move W8, [X19+336]
	120 Compare W8, 0
	121 JumpIfEqual {301}
	122 Move W8, [X19+472]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X8, -18849792
	125 Move V0, [X8+2916]
	126 Move X20, 0x22AA000
	127 Move X20, [X20+1160]
	128 Move X21, 0x22AA000
	129 Move [X31+8], S0
	130 Move X22, 0x22AB000
	131 Move X21, [X21+1152]
	132 Move X22, [X22+408]
	133 Move X23, X31
	134 Move X24, X31
	135 Move X25, 0x2580000
	136 Move W26, 1
	137 Move X27, 0x2580000
	138 Move X28, 0x2580000
	139 Move X0, X19
	140 Move X1, X31
	141 Call Component.get_transform, X0
	142 Compare X0, 0
	143 JumpIfEqual {322}
	144 Move X1, X31
	145 Call Transform.get_position, X0
	146 Move X0, X19
	147 Move X1, X31
	148 Move V8, V0
	149 Move V9, V1
	150 Move V10, V2
	151 Call Component.get_transform, X0
	152 Compare X0, 0
	153 JumpIfEqual {322}
	154 Move X1, X31
	155 Call Transform.get_rotation, X0
	156 Move X8, [X19+464]
	157 Compare X8, 0
	158 JumpIfEqual {322}
	159 Move W9, [X8+24]
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Add X8, X8, X23
	162 Move S4, [X8+32]
	163 Move S5, [X8+36]
	164 Move V6, [X8+40]
	165 Move X0, X31
	166 Move [X31+92], S10
	167 Move V10, V9
	168 Move V9, V8
	169 Call Quaternion.op_Multiply, X0, X1
	170 Move X0, [X19+328]
	171 Compare X0, 0
	172 JumpIfEqual {322}
	173 Move X1, X31
	174 Move V11, V0
	175 Move V12, V1
	176 Move V13, V2
	177 Call Transform.get_position, X0
	178 Move X0, X19
	179 Move X1, X31
	180 Move V14, V0
	181 Move V15, V1
	182 Move V8, V2
	183 Call Component.get_transform, X0
	184 Compare X0, 0
	185 JumpIfEqual {322}
	186 Move X1, X31
	187 Call Transform.get_position, X0
	188 Move X8, [X19+464]
	189 Compare X8, 0
	190 JumpIfEqual {322}
	191 Move W9, [X8+24]
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move V5, [X31+92]
	194 Add S3, S9, S11
	195 Add S4, S10, S12
	196 Subtract S0, S14, S0
	197 Subtract S1, S15, S1
	198 Add X8, X8, X23
	199 Add S11, S3, S0
	200 Add S12, S4, S1
	201 Move S0, [X8+44]
	202 Move S1, [X8+48]
	203 Move V3, [X8+52]
	204 Add S5, S5, S13
	205 Subtract S2, S8, S2
	206 Add S13, S5, S2
	207 Move X0, X31
	208 Move [X31+88], S1
	209 Move [X31+96], S0
	210 Subtract S8, S11, S0
	211 Subtract S9, S12, S1
	212 Move [X31+12], S3
	213 Subtract S10, S13, S3
	214 Call Time.get_deltaTime
	215 NotImplemented "Instruction FDIV not yet implemented."
	216 NotImplemented "Instruction FDIV not yet implemented."
	217 NotImplemented "Instruction FDIV not yet implemented."
	218 Multiply S0, S14, S14
	219 Multiply S1, S15, S15
	220 Add S0, S0, S1
	221 Multiply S1, S8, S8
	222 Add S9, S1, S0
	223 Move S0, 25
	224 NotImplemented "Instruction FCMP not yet implemented."
	225 Move W8, [X25+1089]
	226 Compare W8, 0
	227 JumpIfNotEqual {231}
	228 Move X0, X20
	229 Call 0x1B6F7F0
	230 Move [X25+1089], W26
	231 Move X0, [X20]
	232 Move W8, [X0+224]
	233 Compare W8, 0
	234 JumpIfNotEqual {236}
	235 Call 0x1B6F8F8
	236 Move V0, [X31+8]
	237 NotImplemented "Instruction FSQRT not yet implemented."
	238 NotImplemented "Instruction FCMP not yet implemented."
	239 NotImplemented "Instruction FDIV not yet implemented."
	240 NotImplemented "Instruction FDIV not yet implemented."
	241 NotImplemented "Instruction FDIV not yet implemented."
	242 Move W8, [X27+1087]
	243 Compare W8, 0
	244 JumpIfNotEqual {248}
	245 Move X0, X21
	246 Call 0x1B6F7F0
	247 Move [X27+1087], W26
	248 Move X8, [X21]
	249 Move X8, [X8+184]
	250 Move S0, [X8]
	251 Move S1, [X8+4]
	252 Move V2, [X8+8]
	253 Move S3, 5
	254 Move X0, X31
	255 Multiply S8, S0, S3
	256 Multiply S9, S1, S3
	257 Multiply S10, S2, S3
	258 Call Time.get_deltaTime
	259 Move V3, [X31+92]
	260 Multiply S1, S8, S0
	261 Multiply S2, S9, S0
	262 Multiply S0, S10, S0
	263 Add S11, S3, S1
	264 Move V1, [X31+88]
	265 Add S12, S1, S2
	266 Move V1, [X31+12]
	267 Add S13, S1, S0
	268 Move X0, [X22]
	269 Move W8, [X0+224]
	270 Compare W8, 0
	271 JumpIfNotEqual {273}
	272 Call 0x1B6F8F8
	273 Move W8, [X28+1103]
	274 Compare W8, 0
	275 JumpIfNotEqual {279}
	276 Move X0, X22
	277 Call 0x1B6F7F0
	278 Move [X28+1103], W26
	279 Move X0, [X22]
	280 Move W8, [X0+224]
	281 Compare W8, 0
	282 JumpIfNotEqual {285}
	283 Call 0x1B6F8F8
	284 Move X0, [X22]
	285 Move X8, [X0+184]
	286 Move X0, [X8]
	287 Compare X0, 0
	288 JumpIfEqual {322}
	289 Move S4, [X31+88]
	290 Move S3, [X31+92]
	291 Move V5, [X31+12]
	292 Move V0, V11
	293 Move V1, V12
	294 Move V2, V13
	295 Move X1, X31
	296 Call PlayerController.AddItemContactPoint, X0, X1, X2
	297 NotImplemented "Instruction LDRSW not yet implemented."
	298 Add X24, X24, 1
	299 Add X23, X23, 24
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Move X20, [X31+160]
	302 Move X19, [X31+168]
	303 Move X22, [X31+144]
	304 Move X21, [X31+152]
	305 Move X24, [X31+128]
	306 Move X23, [X31+136]
	307 Move X26, [X31+112]
	308 Move X25, [X31+120]
	309 Move X28, [X31+96]
	310 Move X27, [X31+104]
	311 Move X30, [X31+80]
	312 Move D9, [X31+64]
	313 Move D8, [X31+72]
	314 Move D11, [X31+48]
	315 Move D10, [X31+56]
	316 Move D13, [X31+32]
	317 Move D12, [X31+40]
	318 Move D15, [X31+16]
	319 Move D14, [X31+24]
	320 Add X31, X31, 176
	321 Return 
	322 Call 0x1B6FA1C
	323 Call 0x1B6FA24

Method: System.Void LateUpdate()

Disassembly:
	0x01CA4814 CMP X22, X9
	0x01CA4818 B.CS 0x1CA48D4
	0x01CA481C ADD X8, X8, X21
	0x01CA4820 MOV X0, X20
	0x01CA4824 MOV X1, X31
	0x01CA4828 STP S8, S9, [X8 + 0x2C]
	0x01CA482C STR S10, [X8 + 0x34]
	0x01CA4830 BL 0x3AF2410
	0x01CA4834 CBZ X0, 0x1CA48D0
	0x01CA4838 LDR W8, [X0 + 0x18]
	0x01CA483C CMP X22, X8
	0x01CA4840 B.CS 0x1CA48D4
	0x01CA4844 ADD X0, X0, X23
	0x01CA4848 MOV X1, X31
	0x01CA484C FADD S13, S13, S8
	0x01CA4850 FADD S12, S12, S9
	0x01CA4854 FADD S11, S11, S10
	0x01CA4858 BL 0x3AF7D24
	0x01CA485C LDRSW X8, [X19 + 0x1D8]
	0x01CA4860 ADD X22, X22, 0x1
	0x01CA4864 ADD X23, X23, 0x30
	0x01CA4868 ADD X21, X21, 0x18
	0x01CA486C CMP X22, X8
	0x01CA4870 B.LT 0x1CA475C
	0x01CA4874 SCVTF S2, W8
	0x01CA4878 FDIV S0, S13, S2
	0x01CA487C FDIV S1, S12, S2
	0x01CA4880 FDIV S2, S11, S2
	0x01CA4884 ADD X0, X31, 0x90
	0x01CA4888 MOV X1, X31
	0x01CA488C STR S0, [X19 + 0x1DC]
	0x01CA4890 STR S1, [X19 + 0x1E0]
	0x01CA4894 STR S2, [X19 + 0x1E4]
	0x01CA4898 BL 0x3A90598
	0x01CA489C STR S0, [X19 + 0x1E8]
	0x01CA48A0 STR S1, [X19 + 0x1EC]
	0x01CA48A4 STR S2, [X19 + 0x1F0]
	0x01CA48A8 LDP X20, X19, [X31 + 0x140]
	0x01CA48AC LDP X22, X21, [X31 + 0x130]
	0x01CA48B0 LDP X24, X23, [X31 + 0x120]
	0x01CA48B4 LDP X29, X30, [X31 + 0x110]
	0x01CA48B8 LDP D9, D8, [X31 + 0x100]
	0x01CA48BC LDP D11, D10, [X31 + 0xF0]
	0x01CA48C0 LDP D13, D12, [X31 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2580000
	006 Move X20, 0x22AA000
	007 Move W8, [X21+1067]
	008 Move X20, [X20+1144]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22AA000
	015 Move X0, [X0+1144]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X21+1067], W8
	019 Move X0, [X20]
	020 Move X20, [X19+288]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1B6F8F8
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Equality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {59}
	033 Move X0, X19
	034 Call GrabbableItem.UpdateViewTransform, X0
	035 Move X8, [X19+288]
	036 Compare X8, 0
	037 JumpIfEqual {64}
	038 Move X0, [X8+64]
	039 Compare X0, 0
	040 JumpIfEqual {59}
	041 Move W8, [X0+96]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 2
	044 Compare TEMP, 2
	045 JumpIfEqual {59}
	046 Move X1, X31
	047 Call NetworkObject.get_HasStateAuthority, X0
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {59}
	052 Move X0, X31
	053 Call Time.get_deltaTime
	054 Move X0, X19
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Return 
	064 Call 0x1B6FA1C

Method: System.Void UpdateViewTransform()

Disassembly:
	0x01C9B484 STP X22, X21, [X31 + 0x10]
	0x01C9B488 STP X20, X19, [X31 + 0x20]
	0x01C9B48C ADRP X20, 0x2588000
	0x01C9B490 ADRP X21, 0x22B3000
	0x01C9B494 LDRB W8, [X20 + 0x3F5]
	0x01C9B498 LDR X21, [X21 + 0x1C0]
	0x01C9B49C MOV X19, X0
	0x01C9B4A0 TBNZ X8, 0x0, 0x1C9B4D0
	0x01C9B4A4 ADRP X0, 0x22B3000
	0x01C9B4A8 LDR X0, [X0 + 0x170]
	0x01C9B4AC BL 0x1B6E7F0
	0x01C9B4B0 ADRP X0, 0x22B3000
	0x01C9B4B4 LDR X0, [X0 + 0x218]
	0x01C9B4B8 BL 0x1B6E7F0
	0x01C9B4BC ADRP X0, 0x22B3000
	0x01C9B4C0 LDR X0, [X0 + 0x1C0]
	0x01C9B4C4 BL 0x1B6E7F0
	0x01C9B4C8 MOVZ W8, 0x1
	0x01C9B4CC STRB W8, [X20 + 0x3F5]
	0x01C9B4D0 LDR X0, [X21]
	0x01C9B4D4 LDR W8, [X0 + 0xE0]
	0x01C9B4D8 CBNZ W8, 0x1C9B4E0
	0x01C9B4DC BL 0x1B6E8F8
	0x01C9B4E0 CBZ X19, 0x1C9B574
	0x01C9B4E4 LDR W8, [X19 + 0x30]
	0x01C9B4E8 LDR X22, [X19 + 0x80]
	0x01C9B4EC ORR W8, W8, 0x8
	0x01C9B4F0 STR W8, [X19 + 0x30]
	0x01C9B4F4 CBZ X22, 0x1C9B574
	0x01C9B4F8 ADRP X23, 0x22B3000
	0x01C9B4FC LDR X23, [X23 + 0x170]
	0x01C9B500 ADRP X21, 0x22B3000
	0x01C9B504 LDR X20, [X22 + 0x190]
	0x01C9B508 LDR X0, [X23]
	0x01C9B50C LDR X21, [X21 + 0x218]
	0x01C9B510 BL 0x1B6EA0C
	0x01C9B514 LDR X2, [X21]
	0x01C9B518 MOV X1, X19
	0x01C9B51C MOV X3, X31
	0x01C9B520 MOV X21, X0
	0x01C9B524 BL 0x317DB24
	0x01C9B528 MOV X0, X20
	0x01C9B52C MOV X1, X21
	0x01C9B530 MOV X2, X31
	0x01C9B534 BL 0x322A948
	0x01C9B538 CBZ X0, 0x1C9B560
	0x01C9B53C LDR X1, [X23]
	0x01C9B540 LDR X8, [X0]
	0x01C9B544 CMP X8, X1
	0x01C9B548 B.NE 0x1C9B55C
	0x01C9B54C STR X0, [X22 + 0x190]
	0x01C9B550 LDR X8, [X0]
	0x01C9B554 CMP X8, X1
	0x01C9B558 B.EQ 0x1C9B564
	0x01C9B55C BL 0x1B6ECDC
	0x01C9B560 STR X0, [X22 + 0x190]
	0x01C9B564 LDP X20, X19, [X31 + 0x20]
	0x01C9B568 LDP X22, X21, [X31 + 0x10]
	0x01C9B56C LDP X30, X23, [X31], #0x30
	0x01C9B570 RET
	0x01C9B574 BL 0x1B6EA1C
	0x01C9B578 STP X30, X19, [X31 - 0x10]!
	0x01C9B57C MOV X1, X31
	0x01C9B580 MOV X19, X0
	0x01C9B584 BL 0x1D65284
	0x01C9B588 MOV X0, X19
	0x01C9B58C LDP X30, X19, [X31], #0x10
	0x01C9B590 B 0x1C9B594
	0x01C9B594 STR X30, [X31 - 0x20]!
	0x01C9B598 STP X20, X19, [X31 + 0x10]
	0x01C9B59C MOV X19, X0
	0x01C9B5A0 LDR X0, [X0 + 0x90]
	0x01C9B5A4 CBZ X0, 0x1C9B63C
	0x01C9B5A8 MOV X1, X31
	0x01C9B5AC BL 0x3A65B14
	0x01C9B5B0 AND W20, W0, 0x1
	0x01C9B5B4 MOV X0, X19
	0x01C9B5B8 BL 0x1C9B2F0
	0x01C9B5BC AND W8, W0, 0x1
	0x01C9B5C0 CMP W20, W8
	0x01C9B5C4 B.EQ 0x1C9B61C
	0x01C9B5C8 LDR X20, [X19 + 0x88]
	0x01C9B5CC MOV X0, X19
	0x01C9B5D0 MOV X1, X31
	0x01C9B5D4 BL 0x3A9B084
	0x01C9B5D8 CBZ X0, 0x1C9B63C
	0x01C9B5DC MOV X1, X31
	0x01C9B5E0 BL 0x3AA7658
	0x01C9B5E4 FMOV S3, 1
	0x01C9B5E8 MOV X0, X20
	0x01C9B5EC MOV X1, X31
	0x01C9B5F0 BL 0x1CCD9CC
	0x01C9B5F4 MOV X0, X19
	0x01C9B5F8 BL 0x1C9B2F0
	0x01C9B5FC LDR X8, [X19 + 0x90]
	0x01C9B600 CBZ X8, 0x1C9B63C
	0x01C9B604 TBZ X0, 0x0, 0x1C9B628
	0x01C9B608 LDP X20, X19, [X31 + 0x10]
	0x01C9B60C MOV X0, X8
	0x01C9B610 MOV X1, X31
	0x01C9B614 LDR X30, [X31], #0x20
	0x01C9B618 B 0x3A65954
	0x01C9B61C LDP X20, X19, [X31 + 0x10]
	0x01C9B620 LDR X30, [X31], #0x20
	0x01C9B624 RET
	0x01C9B628 LDP X20, X19, [X31 + 0x10]
	0x01C9B62C MOV X0, X8
	0x01C9B630 MOV X1, X31
	0x01C9B634 LDR X30, [X31], #0x20
	0x01C9B638 B 0x3A65AD8
	0x01C9B63C BL 0x1B6EA1C
	0x01C9B640 STR X30, [X31 - 0x20]!
	0x01C9B644 STP X20, X19, [X31 + 0x10]
	0x01C9B648 ADRP X20, 0x2588000
	0x01C9B64C LDRB W8, [X20 + 0x3F6]
	0x01C9B650 MOV X19, X0
	0x01C9B654 TBNZ X8, 0x0, 0x1C9B678
	0x01C9B658 ADRP X0, 0x22B3000
	0x01C9B65C LDR X0, [X0 + 0x1C0]
	0x01C9B660 BL 0x1B6E7F0
	0x01C9B664 ADRP X0, 0x22B3000
	0x01C9B668 LDR X0, [X0 + 0x220]
	0x01C9B66C BL 0x1B6E7F0
	0x01C9B670 MOVZ W8, 0x1
	0x01C9B674 STRB W8, [X20 + 0x3F6]
	0x01C9B678 LDRB W8, [X19 + 0x58]
	0x01C9B67C CBZ W8, 0x1C9B6A4
	0x01C9B680 STRB W31, [X19 + 0x58]
	0x01C9B684 MOV X0, X19
	0x01C9B688 BL 0x1C9B2F0
	0x01C9B68C ORN W8, W31, W0, 0x0
	0x01C9B690 MOV X0, X19
	0x01C9B694 LDP X20, X19, [X31 + 0x10]
	0x01C9B698 AND W1, W8, 0x1
	0x01C9B69C LDR X30, [X31], #0x20
	0x01C9B6A0 B 0x1C9B358
	0x01C9B6A4 ADRP X20, 0x22B3000
	0x01C9B6A8 LDR X20, [X20 + 0x1C0]
	0x01C9B6AC LDR X0, [X20]
	0x01C9B6B0 LDR W8, [X0 + 0xE0]
	0x01C9B6B4 CBNZ W8, 0x1C9B6BC
	0x01C9B6B8 BL 0x1B6E8F8
	0x01C9B6BC MOV X0, X19
	0x01C9B6C0 MOV X1, X31
	0x01C9B6C4 BL 0x1D697C8
	0x01C9B6C8 LDR X0, [X19 + 0x38]
	0x01C9B6CC CBZ X0, 0x1C9B7DC
	0x01C9B6D0 MOV X1, X31
	0x01C9B6D4 BL 0x1D87040
	0x01C9B6D8 CMP W0, 0x4
	0x01C9B6DC B.NE 0x1C9B6EC
	0x01C9B6E0 LDP X20, X19, [X31 + 0x10]
	0x01C9B6E4 LDR X30, [X31], #0x20
	0x01C9B6E8 RET
	0x01C9B6EC LDR X0, [X19 + 0x40]
	0x01C9B6F0 CBZ X0, 0x1C9B7DC
	0x01C9B6F4 MOV X1, X31
	0x01C9B6F8 BL 0x1D9F538
	0x01C9B6FC ANDS W31, W0, 0x7
	0x01C9B700 B.EQ 0x1C9B764
	0x01C9B704 TBNZ X0, 0x0, 0x1C9B684
	0x01C9B708 LDR X8, [X19 + 0x38]
	0x01C9B70C CBZ X8, 0x1C9B7DC
	0x01C9B710 LDR X0, [X8 + 0x50]
	0x01C9B714 CBZ X0, 0x1C9B7DC
	0x01C9B718 MOV X1, X31
	0x01C9B71C BL 0x1DBEFE4
	0x01C9B720 TBZ X0, 0x0, 0x1C9B6E0
	0x01C9B724 LDR X8, [X19 + 0x38]
	0x01C9B728 CBZ X8, 0x1C9B7DC
	0x01C9B72C LDR X0, [X8 + 0x50]
	0x01C9B730 MOVZ W1, 0x8
	0x01C9B734 MOV X2, X31
	0x01C9B738 BL 0x1DD601C
	0x01C9B73C MOV X20, X0
	0x01C9B740 MOVZ W0, 0x1
	0x01C9B744 MOV X1, X31
	0x01C9B748 BL 0x1D29EBC
	0x01C9B74C LDR X8, [X19 + 0x40]
	0x01C9B750 CBZ X8, 0x1C9B7DC
	0x01C9B754 LDR X8, [X8 + 0x20]
	0x01C9B758 CBZ X8, 0x1C9B79C
	0x01C9B75C LDR W0, [X8]
	0x01C9B760 B 0x1C9B7A0
	0x01C9B764 LDR X0, [X20]
	0x01C9B768 LDR X19, [X19 + 0x40]
	0x01C9B76C LDR W8, [X0 + 0xE0]
	0x01C9B770 CBNZ W8, 0x1C9B778
	0x01C9B774 BL 0x1B6E8F8
	0x01C9B778 ADRP X8, 0x22B3000
	0x01C9B77C LDR X8, [X8 + 0x220]
	0x01C9B780 MOV X1, X19
	0x01C9B784 LDP X20, X19, [X31 + 0x10]
	0x01C9B788 MOVZ W2, 0x7
	0x01C9B78C LDR X0, [X8]
	0x01C9B790 MOV X3, X31
	0x01C9B794 LDR X30, [X31], #0x20
	0x01C9B798 B 0x1D69640
	0x01C9B79C MOV X0, X31
	0x01C9B7A0 LDR W1, [X19 + 0x68]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0x2589000
	015 Move X21, 0x22B3000
	016 Move W8, [X20+1068]
	017 Move X21, [X21+1144]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x22B3000
	024 Move X0, [X0+1144]
	025 Call 0x1B6F7F0
	026 Move W8, 1
	027 Move [X20+1068], W8
	028 Move X0, [X21]
	029 Move X20, [X19+328]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1B6F8F8
	034 Move X0, X20
	035 Move X1, X31
	036 Move X2, X31
	037 Call Object.op_Inequality, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {240}
	042 Move X0, [X21]
	043 Move X20, [X19+288]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1B6F8F8
	048 Move X0, X20
	049 Move X1, X31
	050 Move X2, X31
	051 Call Object.op_Inequality, X0, X1
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {127}
	056 Move X8, [X19+288]
	057 Compare X8, 0
	058 JumpIfEqual {254}
	059 Move X0, [X8+64]
	060 Compare X0, 0
	061 JumpIfEqual {127}
	062 Move W8, [X0+96]
	063 Move TEMP, X8
	064 And TEMP, TEMP, 2
	065 Compare TEMP, 2
	066 JumpIfEqual {127}
	067 Move X1, X31
	068 Call NetworkObject.get_HasStateAuthority, X0
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {127}
	073 Move W8, [X19+336]
	074 Compare W8, 0
	075 JumpIfEqual {127}
	076 Move W8, [X19+137]
	077 Compare W8, 0
	078 JumpIfEqual {127}
	079 Move X8, [X19+288]
	080 Compare X8, 0
	081 JumpIfEqual {254}
	082 Move W8, [X8+132]
	083 Compare W8, 0
	084 JumpIfEqual {127}
	085 Move X21, 0x2589000
	086 Move W8, [X21+1087]
	087 Move X20, [X19+160]
	088 Compare W8, 0
	089 JumpIfNotEqual {95}
	090 Move X0, 0x22B3000
	091 Move X0, [X0+1152]
	092 Call 0x1B6F7F0
	093 Move W8, 1
	094 Move [X21+1087], W8
	095 Move X8, 0x22B3000
	096 Move X8, [X8+1152]
	097 Move X21, 0x2589000
	098 Move W9, [X21+1108]
	099 Move X8, [X8]
	100 Move X8, [X8+184]
	101 Move S10, [X8]
	102 Move S9, [X8+4]
	103 Move V8, [X8+8]
	104 Compare W9, 0
	105 JumpIfNotEqual {111}
	106 Move X0, 0x22B4000
	107 Move X0, [X0+504]
	108 Call 0x1B6F7F0
	109 Move W8, 1
	110 Move [X21+1108], W8
	111 Compare X20, 0
	112 JumpIfEqual {254}
	113 Move X8, 0x22B4000
	114 Move X8, [X8+504]
	115 Move X0, X20
	116 Move V0, V10
	117 Move V1, V9
	118 Move X8, [X8]
	119 Move V2, V8
	120 Move X1, X31
	121 Move X8, [X8+184]
	122 Move S5, [X8+8]
	123 Move S6, [X8+12]
	124 Move S3, [X8]
	125 Move S4, [X8+4]
	126 Call Transform.SetLocalPositionAndRotation, X0, X1, X2
	127 Move X0, [X19+328]
	128 Compare X0, 0
	129 JumpIfEqual {254}
	130 Move X20, [X19+160]
	131 Move X1, X31
	132 Call Transform.get_position, X0
	133 Move X0, [X19+328]
	134 Compare X0, 0
	135 JumpIfEqual {254}
	136 Move X1, X31
	137 Move V13, V0
	138 Move V10, V1
	139 Move V14, V2
	140 Call Transform.get_rotation, X0
	141 Move X0, [X19+168]
	142 Compare X0, 0
	143 JumpIfEqual {254}
	144 Move X1, X31
	145 Move V8, V0
	146 Move V9, V1
	147 Move V11, V2
	148 Move V12, V3
	149 Move [X31+8], S14
	150 Move [X31+16], S10
	151 Move V10, V13
	152 Call Transform.get_localPosition, X0
	153 Move V4, V0
	154 Move V5, V1
	155 Move V6, V2
	156 Move V0, V8
	157 Move V1, V9
	158 Move V2, V11
	159 Move V3, V12
	160 Move X0, X31
	161 Call Quaternion.op_Multiply, X0, X1
	162 Move X0, [X19+328]
	163 Compare X0, 0
	164 JumpIfEqual {254}
	165 Move X1, X31
	166 Move V15, V0
	167 Move V8, V1
	168 Move V9, V2
	169 Call Transform.get_rotation, X0
	170 Move X0, [X19+168]
	171 Compare X0, 0
	172 JumpIfEqual {254}
	173 Move X1, X31
	174 Move V12, V0
	175 Move V13, V1
	176 Move V11, V2
	177 Move V14, V3
	178 Call Transform.get_localRotation, X0
	179 Compare X20, 0
	180 JumpIfEqual {254}
	181 Move V4, [X31+12]
	182 Multiply S5, S12, S0
	183 Multiply S20, S14, S2
	184 Multiply S21, S11, S3
	185 Add S16, S4, S8
	186 Move V4, [X31+8]
	187 Multiply S22, S13, S0
	188 Multiply S23, S13, S3
	189 Multiply S25, S11, S0
	190 Add S7, S4, S9
	191 Multiply S4, S14, S3
	192 Multiply S3, S12, S3
	193 Multiply S0, S14, S0
	194 Multiply S26, S14, S1
	195 Multiply S6, S13, S1
	196 Multiply S19, S12, S1
	197 Multiply S24, S13, S2
	198 Subtract S4, S4, S5
	199 Add S5, S20, S21
	200 Add S20, S26, S23
	201 Add S0, S0, S3
	202 Add S17, S10, S15
	203 Multiply S18, S11, S2
	204 Multiply S2, S12, S2
	205 Multiply S1, S11, S1
	206 Subtract S3, S4, S6
	207 Add S4, S19, S5
	208 Add S19, S25, S20
	209 Add S0, S24, S0
	210 Subtract S6, S3, S18
	211 Subtract S5, S4, S22
	212 Subtract S4, S19, S2
	213 Subtract S3, S0, S1
	214 Move X0, X20
	215 Move V0, V17
	216 Move V1, V16
	217 Move V2, V7
	218 Move X1, X31
	219 Call Transform.SetPositionAndRotation, X0, X1, X2
	220 Move X8, [X19+448]
	221 Compare X8, 0
	222 JumpIfEqual {240}
	223 Move X2, [X8+24]
	224 Move X0, [X8+64]
	225 Move X1, [X8+40]
	226 Move X20, [X31+96]
	227 Move X19, [X31+104]
	228 Move X30, [X31+80]
	229 Move X21, [X31+88]
	230 Move D9, [X31+64]
	231 Move D8, [X31+72]
	232 Move D11, [X31+48]
	233 Move D10, [X31+56]
	234 Move D13, [X31+32]
	235 Move D12, [X31+40]
	236 Move D15, [X31+16]
	237 Move D14, [X31+24]
	238 Add X31, X31, 112
	239 CallNoReturn X2
	240 Move X20, [X31+96]
	241 Move X19, [X31+104]
	242 Move X30, [X31+80]
	243 Move X21, [X31+88]
	244 Move D9, [X31+64]
	245 Move D8, [X31+72]
	246 Move D11, [X31+48]
	247 Move D10, [X31+56]
	248 Move D13, [X31+32]
	249 Move D12, [X31+40]
	250 Move D15, [X31+16]
	251 Move D14, [X31+24]
	252 Add X31, X31, 112
	253 Return 
	254 Call 0x1B6FA1C

Method: System.Void OnTriggerEnter(UnityEngine.Collider other)

Disassembly:
	0x01CA4F7C LDR X9, [X19]
	0x01CA4F80 LDR X8, [X24]
	0x01CA4F84 LDRB W11, [X9 + 0x130]
	0x01CA4F88 LDRB W10, [X8 + 0x130]
	0x01CA4F8C CMP W11, W10
	0x01CA4F90 B.CC 0x1CA4FD4
	0x01CA4F94 LDR X9, [X9 + 0xC8]
	0x01CA4F98 ADD X9, X9, X10, 0x3, LSL
	0x01CA4F9C LDUR X9, [X9 - 0x8]
	0x01CA4FA0 CMP X9, X8
	0x01CA4FA4 B.NE 0x1CA4FD4
	0x01CA4FA8 MOV X3, X0
	0x01CA4FAC MOV X4, X1
	0x01CA4FB0 CMP W22, 0x0
	0x01CA4FB4 MOV X0, X19
	0x01CA4FB8 MOV X1, X20
	0x01CA4FBC LDP X20, X19, [X31 + 0x30]
	0x01CA4FC0 LDP X22, X21, [X31 + 0x20]
	0x01CA4FC4 LDP X24, X23, [X31 + 0x10]
	0x01CA4FC8 CSET W2, NE
	0x01CA4FCC LDR X30, [X31], #0x40
	0x01CA4FD0 B 0x1C9EF5C
	0x01CA4FD4 MOV X0, X19
	0x01CA4FD8 MOV X1, X8
	0x01CA4FDC BL 0x1B6ECDC
	0x01CA4FE0 BL 0x1B6EA1C
	0x01CA4FE4 SUB X31, X31, 0x40
	0x01CA4FE8 STP X30, X21, [X31 + 0x20]
	0x01CA4FEC STP X20, X19, [X31 + 0x30]
	0x01CA4FF0 ADRP X21, 0x257F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+64]
	006 Compare X0, 0
	007 JumpIfEqual {37}
	008 Move W8, [X0+96]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 2
	011 Compare TEMP, 2
	012 JumpIfEqual {37}
	013 Move X20, X1
	014 Move X1, X31
	015 Call NetworkObject.get_HasStateAuthority, X0
	016 Move TEMP, X0
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfNotEqual {37}
	020 Compare X20, 0
	021 JumpIfEqual {41}
	022 Move X0, X20
	023 Move X1, X31
	024 Call Component.get_gameObject, X0
	025 Move X8, [X19+304]
	026 Compare X8, 0
	027 JumpIfEqual {41}
	028 Move X20, X0
	029 Move X0, X8
	030 Move X1, X31
	031 Call Rigidbody.get_velocity, X0
	032 Move X0, X19
	033 Move X1, X20
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Return 
	041 Call 0x1B6FA1C

Method: System.Void ApplyCollisionDamage(UnityEngine.GameObject target, UnityEngine.Vector3 velocity)

Disassembly:
	0x01CA4FF4 LDRB W8, [X21 + 0x438]
	0x01CA4FF8 MOV X20, X1
	0x01CA4FFC MOV X19, X0
	0x01CA5000 TBNZ X8, 0x0, 0x1CA5018
	0x01CA5004 ADRP X0, 0x22A9000
	0x01CA5008 LDR X0, [X0 + 0x3C8]
	0x01CA500C BL 0x1B6E7F0
	0x01CA5010 MOVZ W8, 0x1
	0x01CA5014 STRB W8, [X21 + 0x438]
	0x01CA5018 MOVZ W0, 0x1
	0x01CA501C MOV X1, X31
	0x01CA5020 MOVZ W21, 0x1
	0x01CA5024 BL 0x1D29EBC
	0x01CA5028 CBZ X19, 0x1CA50CC
	0x01CA502C ADRP X8, 0x22A9000
	0x01CA5030 LDR X8, [X8 + 0x3C8]
	0x01CA5034 LDUR X1, [X20 + 0x24]
	0x01CA5038 LDP S0, S1, [X20 + 0x2C]
	0x01CA503C LDP S2, S3, [X20 + 0x34]
	0x01CA5040 LDP S4, S5, [X20 + 0x3C]
	0x01CA5044 LDP S6, S7, [X20 + 0x44]
	0x01CA5048 LDP S16, S17, [X20 + 0x4C]
	0x01CA504C LDP S18, S19, [X20 + 0x54]
	0x01CA5050 LDR V20, [X20 + 0x5C]
	0x01CA5054 LDP W9, W10, [X20 + 0x60]
	0x01CA5058 STRB W21, [X19 + 0x58]
	0x01CA505C LDR X11, [X19]
	0x01CA5060 LDR X8, [X8]
	0x01CA5064 LDRB W13, [X11 + 0x130]
	0x01CA5068 LDRB W12, [X8 + 0x130]
	0x01CA506C CMP W13, W12
	0x01CA5070 B.CC 0x1CA50C0
	0x01CA5074 LDR X11, [X11 + 0xC8]
	0x01CA5078 ADD X11, X11, X12, 0x3, LSL
	0x01CA507C LDUR X11, [X11 - 0x8]
	0x01CA5080 CMP X11, X8
	0x01CA5084 B.NE 0x1CA50C0
	0x01CA5088 CMP W10, 0x0
	0x01CA508C CSET W3, NE
	0x01CA5090 CMP W9, 0x0
	0x01CA5094 CSET W2, NE
	0x01CA5098 MOV X0, X19
	0x01CA509C STP S19, S20, [X31 + 0x14]
	0x01CA50A0 STR S18, [X31 + 0x10]
	0x01CA50A4 STP S16, S17, [X31 + 0x4]
	0x01CA50A8 STR S7, [X31]
	0x01CA50AC BL 0x1C9F150
	0x01CA50B0 LDP X20, X19, [X31 + 0x30]
	0x01CA50B4 LDP X30, X21, [X31 + 0x20]
	0x01CA50B8 ADD X31, X31, 0x40
	0x01CA50BC RET
	0x01CA50C0 MOV X0, X19
	0x01CA50C4 MOV X1, X8
	0x01CA50C8 BL 0x1B6ECDC
	0x01CA50CC BL 0x1B6EA1C
	0x01CA50D0 SUB X31, X31, 0xA0
	0x01CA50D4 STR X30, [X31 + 0x70]
	0x01CA50D8 STP X22, X21, [X31 + 0x80]
	0x01CA50DC STP X20, X19, [X31 + 0x90]
	0x01CA50E0 MRS X21, 0xC000
	0x01CA50E4 LDR X8, [X21 + 0x28]
	0x01CA50E8 ADRP X22, 0x257E000
	0x01CA50EC MOV X20, X1
	0x01CA50F0 MOV X19, X0
	0x01CA50F4 STR X8, [X31 + 0x68]
	0x01CA50F8 LDRB W8, [X22 + 0x439]
	0x01CA50FC TBNZ X8, 0x0, 0x1CA5114
	0x01CA5100 ADRP X0, 0x22A9000
	0x01CA5104 LDR X0, [X0 + 0x3C8]
	0x01CA5108 BL 0x1B6E7F0
	0x01CA510C MOVZ W8, 0x1
	0x01CA5110 STRB W8, [X22 + 0x439]
	0x01CA5114 MOVZ W0, 0x1
	0x01CA5118 MOV X1, X31
	0x01CA511C STP X31, X31, [X31 + 0x40]
	0x01CA5120 STR W31, [X31 + 0x58]
	0x01CA5124 STR X31, [X31 + 0x50]
	0x01CA5128 MOVZ W22, 0x1
	0x01CA512C BL 0x1D29EBC
	0x01CA5130 LDR W8, [X20 + 0x3C]
	0x01CA5134 LDUR X9, [X20 + 0x34]
	0x01CA5138 LDUR V0, [X20 + 0x24]
	0x01CA513C STR W8, [X31 + 0x58]
	0x01CA5140 STR X9, [X31 + 0x50]
	0x01CA5144 STR V0, [X31 + 0x4]
	0x01CA5148 CBZ X19, 0x1CA51DC
	0x01CA514C STRB W22, [X19 + 0x58]
	0x01CA5150 LDR V0, [X31 + 0x4]
	0x01CA5154 LDUR V1, [X31 + 0x4C]
	0x01CA5158 ADRP X9, 0x22A9000
	0x01CA515C LDR X9, [X9 + 0x3C8]
	0x01CA5160 STR V0, [X31 + 0x2]
	0x01CA5164 STUR V1, [X31 + 0x2C]
	0x01CA5168 LDR X8, [X19]
	0x01CA516C LDR X1, [X9]
	0x01CA5170 LDRB W10, [X8 + 0x130]
	0x01CA5174 LDRB W9, [X1 + 0x130]
	0x01CA5178 CMP W10, W9
	0x01CA517C B.CC 0x1CA51D4
	0x01CA5180 LDR X8, [X8 + 0xC8]
	0x01CA5184 ADD X8, X8, X9, 0x3, LSL
	0x01CA5188 LDUR X8, [X8 - 0x8]
	0x01CA518C CMP X8, X1
	0x01CA5190 B.NE 0x1CA51D4
	0x01CA5194 LDR V0, [X31 + 0x2]
	0x01CA5198 LDUR V1, [X31 + 0x2C]
	0x01CA519C ADD X1, X31, 0x0
	0x01CA51A0 MOV X0, X19
	0x01CA51A4 STR V0, [X31]
	0x01CA51A8 STUR V1, [X31 + 0xC]
	0x01CA51AC BL 0x1CA04F0
	0x01CA51B0 LDR X8, [X21 + 0x28]
	0x01CA51B4 LDR X9, [X31 + 0x68]
	0x01CA51B8 CMP X8, X9
	0x01CA51BC B.NE 0x1CA51E0
	0x01CA51C0 LDP X20, X19, [X31 + 0x90]
	0x01CA51C4 LDP X22, X21, [X31 + 0x80]
	0x01CA51C8 LDR X30, [X31 + 0x70]
	0x01CA51CC ADD X31, X31, 0xA0
	0x01CA51D0 RET
	0x01CA51D4 MOV X0, X19
	0x01CA51D8 BL 0x1B6ECDC
	0x01CA51DC BL 0x1B6EA1C
	0x01CA51E0 BL 0x3D19880
	0x01CA51E4 STP X30, X21, [X31 - 0x20]!
	0x01CA51E8 STP X20, X19, [X31 + 0x10]
	0x01CA51EC ADRP X21, 0x257E000
	0x01CA51F0 LDRB W8, [X21 + 0x43A]
	0x01CA51F4 MOV X20, X1
	0x01CA51F8 MOV X19, X0
	0x01CA51FC TBNZ X8, 0x0, 0x1CA5214
	0x01CA5200 ADRP X0, 0x22A9000
	0x01CA5204 LDR X0, [X0 + 0x3C8]
	0x01CA5208 BL 0x1B6E7F0
	0x01CA520C MOVZ W8, 0x1
	0x01CA5210 STRB W8, [X21 + 0x43A]
	0x01CA5214 MOVZ W0, 0x1
	0x01CA5218 MOV X1, X31
	0x01CA521C MOVZ W21, 0x1
	0x01CA5220 BL 0x1D29EBC
	0x01CA5224 CBZ X19, 0x1CA5280
	0x01CA5228 ADRP X8, 0x22A9000
	0x01CA522C LDR X8, [X8 + 0x3C8]
	0x01CA5230 LDUR X1, [X20 + 0x24]
	0x01CA5234 STRB W21, [X19 + 0x58]
	0x01CA5238 LDR X9, [X19]
	0x01CA523C LDR X8, [X8]
	0x01CA5240 LDRB W11, [X9 + 0x130]
	0x01CA5244 LDRB W10, [X8 + 0x130]
	0x01CA5248 CMP W11, W10
	0x01CA524C B.CC 0x1CA5274
	0x01CA5250 LDR X9, [X9 + 0xC8]
	0x01CA5254 ADD X9, X9, X10, 0x3, LSL
	0x01CA5258 LDUR X9, [X9 - 0x8]
	0x01CA525C CMP X9, X8
	0x01CA5260 B.NE 0x1CA5274
	0x01CA5264 MOV X0, X19
	0x01CA5268 LDP X20, X19, [X31 + 0x10]
	0x01CA526C LDP X30, X21, [X31], #0x20
	0x01CA5270 B 0x1CA09F8
	0x01CA5274 MOV X0, X19
	0x01CA5278 MOV X1, X8
	0x01CA527C BL 0x1B6ECDC
	0x01CA5280 BL 0x1B6EA1C
	0x01CA5284 STP X30, X21, [X31 - 0x20]!
	0x01CA5288 STP X20, X19, [X31 + 0x10]
	0x01CA528C ADRP X21, 0x257E000
	0x01CA5290 LDRB W8, [X21 + 0x43B]
	0x01CA5294 MOV X20, X1
	0x01CA5298 MOV X19, X0
	0x01CA529C TBNZ X8, 0x0, 0x1CA52B4
	0x01CA52A0 ADRP X0, 0x22A9000
	0x01CA52A4 LDR X0, [X0 + 0x3C8]
	0x01CA52A8 BL 0x1B6E7F0
	0x01CA52AC MOVZ W8, 0x1
	0x01CA52B0 STRB W8, [X21 + 0x43B]
	0x01CA52B4 MOVZ W0, 0x1
	0x01CA52B8 MOV X1, X31
	0x01CA52BC MOVZ W21, 0x1
	0x01CA52C0 BL 0x1D29EBC
	0x01CA52C4 CBZ X19, 0x1CA5320
	0x01CA52C8 ADRP X9, 0x22A9000
	0x01CA52CC LDR X9, [X9 + 0x3C8]
	0x01CA52D0 LDP S0, S1, [X20 + 0x24]
	0x01CA52D4 LDR V2, [X20 + 0x2C]
	0x01CA52D8 STRB W21, [X19 + 0x58]
	0x01CA52DC LDR X8, [X19]
	0x01CA52E0 LDR X1, [X9]
	0x01CA52E4 LDRB W10, [X8 + 0x130]
	0x01CA52E8 LDRB W9, [X1 + 0x130]
	0x01CA52EC CMP W10, W9
	0x01CA52F0 B.CC 0x1CA5318
	0x01CA52F4 LDR X8, [X8 + 0xC8]
	0x01CA52F8 ADD X8, X8, X9, 0x3, LSL
	0x01CA52FC LDUR X8, [X8 - 0x8]
	0x01CA5300 CMP X8, X1
	0x01CA5304 B.NE 0x1CA5318
	0x01CA5308 MOV X0, X19
	0x01CA530C LDP X20, X19, [X31 + 0x10]
	0x01CA5310 LDP X30, X21, [X31], #0x20
	0x01CA5314 B 0x1CA0C44
	0x01CA5318 MOV X0, X19
	0x01CA531C BL 0x1B6ECDC
	0x01CA5320 BL 0x1B6EA1C
	0x01CA5324 STR X30, [X31 - 0x20]!
	0x01CA5328 STP X20, X19, [X31 + 0x10]
	0x01CA532C ADRP X20, 0x257E000
	0x01CA5330 LDRB W8, [X20 + 0x43C]
	0x01CA5334 MOV X19, X0
	0x01CA5338 TBNZ X8, 0x0, 0x1CA5350
	0x01CA533C ADRP X0, 0x22A9000
	0x01CA5340 LDR X0, [X0 + 0x3C8]
	0x01CA5344 BL 0x1B6E7F0
	0x01CA5348 MOVZ W8, 0x1
	0x01CA534C STRB W8, [X20 + 0x43C]
	0x01CA5350 MOVZ W0, 0x1
	0x01CA5354 MOV X1, X31
	0x01CA5358 MOVZ W20, 0x1
	0x01CA535C BL 0x1D29EBC
	0x01CA5360 CBZ X19, 0x1CA53B4
	0x01CA5364 ADRP X9, 0x22A9000
	0x01CA5368 LDR X9, [X9 + 0x3C8]
	0x01CA536C STRB W20, [X19 + 0x58]
	0x01CA5370 LDR X8, [X19]
	0x01CA5374 LDR X1, [X9]
	0x01CA5378 LDRB W10, [X8 + 0x130]
	0x01CA537C LDRB W9, [X1 + 0x130]
	0x01CA5380 CMP W10, W9
	0x01CA5384 B.CC 0x1CA53AC
	0x01CA5388 LDR X8, [X8 + 0xC8]
	0x01CA538C ADD X8, X8, X9, 0x3, LSL
	0x01CA5390 LDUR X8, [X8 - 0x8]
	0x01CA5394 CMP X8, X1
	0x01CA5398 B.NE 0x1CA53AC
	0x01CA539C MOV X0, X19
	0x01CA53A0 LDP X20, X19, [X31 + 0x10]
	0x01CA53A4 LDR X30, [X31], #0x20
	0x01CA53A8 B 0x1CA16D8
	0x01CA53AC MOV X0, X19
	0x01CA53B0 BL 0x1B6ECDC
	0x01CA53B4 BL 0x1B6EA1C
	0x01CA53B8 STR X30, [X31 - 0x20]!
	0x01CA53BC STP X20, X19, [X31 + 0x10]
	0x01CA53C0 ADRP X20, 0x257E000
	0x01CA53C4 LDRB W8, [X20 + 0x43D]
	0x01CA53C8 MOV X19, X0
	0x01CA53CC TBNZ X8, 0x0, 0x1CA53E4
	0x01CA53D0 ADRP X0, 0x22A9000
	0x01CA53D4 LDR X0, [X0 + 0x3C8]
	0x01CA53D8 BL 0x1B6E7F0
	0x01CA53DC MOVZ W8, 0x1
	0x01CA53E0 STRB W8, [X20 + 0x43D]
	0x01CA53E4 MOVZ W0, 0x1
	0x01CA53E8 MOV X1, X31
	0x01CA53EC MOVZ W20, 0x1

ISIL:
	001 Move [X31-128], D15
	002 Move [X31-120], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Move X21, 0x257F000
	017 Move X22, 0x22A9000
	018 Move W8, [X21+1069]
	019 Move X22, [X22+1144]
	020 Move V8, V2
	021 Move V9, V1
	022 Move V10, V0
	023 Move X20, X1
	024 Move X19, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {46}
	029 Move X0, 0x22AA000
	030 Move X0, [X0+672]
	031 Call 0x1B6F7F0
	032 Move X0, 0x22A9000
	033 Move X0, [X0+1208]
	034 Call 0x1B6F7F0
	035 Move X0, 0x22AA000
	036 Move X0, [X0+680]
	037 Call 0x1B6F7F0
	038 Move X0, 0x22A9000
	039 Move X0, [X0+1144]
	040 Call 0x1B6F7F0
	041 Move X0, 0x22AA000
	042 Move X0, [X0+1248]
	043 Call 0x1B6F7F0
	044 Move W8, 1
	045 Move [X21+1069], W8
	046 Move X0, [X22]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1B6F8F8
	051 Move X0, X20
	052 Move X1, X31
	053 Move X2, X31
	054 Call Object.op_Equality, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {277}
	059 Move X0, [X19+64]
	060 Compare X0, 0
	061 JumpIfEqual {277}
	062 Move W8, [X0+96]
	063 Move TEMP, X8
	064 And TEMP, TEMP, 2
	065 Compare TEMP, 2
	066 JumpIfEqual {277}
	067 Move X1, X31
	068 Call NetworkObject.get_HasStateAuthority, X0
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {277}
	073 Compare X20, 0
	074 JumpIfEqual {293}
	075 Move X8, 0x22AA000
	076 Move X8, [X8+672]
	077 Move X0, X20
	078 Move X1, [X8]
	079 Call 0x20D04D0, X0
	080 Compare X0, 0
	081 JumpIfEqual {277}
	082 Move X8, 0x22AA000
	083 Move X8, [X8+680]
	084 Move X9, [X0]
	085 Move X20, X0
	086 Move X8, [X8]
	087 Move W11, [X9+304]
	088 Move W10, [X8+304]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X9, [X9+200]
	091 Add X9, X9, X10
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X0, X20
	095 Move X1, X31
	096 Call NetPlayer.get_IsMine, X0
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfEqual {277}
	101 Move X0, X31
	102 Call Time.get_fixedTime
	103 Move V1, [X19+500]
	104 Move X8, -18853888
	105 Move V2, [X8+3376]
	106 Subtract S0, S0, S1
	107 NotImplemented "Instruction FCMP not yet implemented."
	108 Move X21, 0x257F000
	109 Move W8, [X21+1088]
	110 Compare W8, 0
	111 JumpIfNotEqual {117}
	112 Move X0, 0x22A9000
	113 Move X0, [X0+1160]
	114 Call 0x1B6F7F0
	115 Move W8, 1
	116 Move [X21+1088], W8
	117 Move X23, 0x22A9000
	118 Move X23, [X23+1160]
	119 Move X0, [X23]
	120 Move W8, [X0+224]
	121 Compare W8, 0
	122 JumpIfNotEqual {124}
	123 Call 0x1B6F8F8
	124 Move X0, [X19+304]
	125 Compare X0, 0
	126 JumpIfEqual {293}
	127 Multiply S0, S10, S10
	128 Multiply S1, S9, S9
	129 Add S0, S0, S1
	130 Multiply S1, S8, S8
	131 Add S0, S1, S0
	132 Move X1, X31
	133 NotImplemented "Instruction FSQRT not yet implemented."
	134 Call Rigidbody.get_mass, X0
	135 Move X21, 0x257F000
	136 Move W8, [X21+1109]
	137 Move S1, -20
	138 Add S11, S14, S1
	139 Move S1, 0.125
	140 Multiply S12, S0, S1
	141 Compare W8, 0
	142 JumpIfNotEqual {148}
	143 Move X0, 0x22A9000
	144 Move X0, [X0+1160]
	145 Call 0x1B6F7F0
	146 Move W8, 1
	147 Move [X21+1109], W8
	148 Move X0, [X23]
	149 Multiply S11, S11, S12
	150 Move W8, [X0+224]
	151 Compare W8, 0
	152 JumpIfNotEqual {154}
	153 Call 0x1B6F8F8
	154 Move W8, 0x7F800000
	155 NotImplemented "Instruction FRINTM not yet implemented."
	156 Move S1, W8
	157 NotImplemented "Instruction FCVTMS not yet implemented."
	158 NotImplemented "Instruction FCMP not yet implemented."
	159 Move W8, 0x80000000
	160 NotImplemented "Instruction CSEL not yet implemented."
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move W9, [X21+1109]
	163 Move V11, [X19+152]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move W10, 15
	166 NotImplemented "Instruction CSEL not yet implemented."
	167 NotImplemented "Instruction SCVTF not yet implemented."
	168 Compare W9, 0
	169 JumpIfNotEqual {175}
	170 Move X0, 0x22A9000
	171 Move X0, [X0+1160]
	172 Call 0x1B6F7F0
	173 Move W8, 1
	174 Move [X21+1109], W8
	175 Move X0, [X23]
	176 Multiply S11, S11, S15
	177 Move W8, [X0+224]
	178 Compare W8, 0
	179 JumpIfNotEqual {181}
	180 Call 0x1B6F8F8
	181 Move W8, 0x7F800000
	182 NotImplemented "Instruction FRINTM not yet implemented."
	183 Move S1, W8
	184 NotImplemented "Instruction FCVTMS not yet implemented."
	185 NotImplemented "Instruction FCMP not yet implemented."
	186 Move W8, 0x80000000
	187 Move X0, X19
	188 Move X1, X31
	189 NotImplemented "Instruction CSEL not yet implemented."
	190 Call Component.get_transform, X0
	191 Compare X0, 0
	192 JumpIfEqual {293}
	193 Move X1, X31
	194 Call Transform.get_position, X0
	195 Move X24, 0x257F000
	196 Move W8, [X24+1089]
	197 Move X22, [X19+184]
	198 Move V11, V0
	199 Move V12, V1
	200 Move V13, V2
	201 Compare W8, 0
	202 JumpIfNotEqual {208}
	203 Move X0, 0x22A9000
	204 Move X0, [X0+1160]
	205 Call 0x1B6F7F0
	206 Move W8, 1
	207 Move [X24+1089], W8
	208 Move X0, [X23]
	209 Move W8, [X0+224]
	210 Compare W8, 0
	211 JumpIfNotEqual {213}
	212 Call 0x1B6F8F8
	213 Move X8, -18853888
	214 Move V0, [X8+2916]
	215 NotImplemented "Instruction FCMP not yet implemented."
	216 NotImplemented "Instruction FDIV not yet implemented."
	217 NotImplemented "Instruction FDIV not yet implemented."
	218 NotImplemented "Instruction FDIV not yet implemented."
	219 Move X23, 0x257F000
	220 Move W8, [X23+1087]
	221 Compare W8, 0
	222 JumpIfNotEqual {228}
	223 Move X0, 0x22A9000
	224 Move X0, [X0+1152]
	225 Call 0x1B6F7F0
	226 Move W8, 1
	227 Move [X23+1087], W8
	228 Move X8, 0x22A9000
	229 Move X8, [X8+1152]
	230 Move X8, [X8]
	231 Move X8, [X8+184]
	232 Move S0, [X8]
	233 Move S1, [X8+4]
	234 Move V2, [X8+8]
	235 Move X9, 0x22A9000
	236 Move X8, [X20]
	237 Move X9, [X9+1208]
	238 Move X10, 0x22AA000
	239 Multiply S8, S2, S15
	240 Multiply S9, S1, S15
	241 Move X1, [X9]
	242 Move X10, [X10+1248]
	243 NotImplemented "Instruction LDRH not yet implemented."
	244 Multiply S10, S0, S15
	245 Move X23, [X10]
	246 Compare X9, 0
	247 JumpIfEqual {254}
	248 Move X10, [X8+176]
	249 Add X10, X10, 8
	250 NotImplemented "Instruction LDUR not yet implemented."
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Subtract X9, X9, 1
	253 Add X10, X10, 16
	254 Move X0, X20
	255 Move W2, W31
	256 Call 0x1BB5284
	257 NotImplemented "Instruction LDRSW not yet implemented."
	258 Add X8, X8, X9
	259 Add X0, X8, 312
	260 Move X8, [X0]
	261 Move X5, [X0+8]
	262 Move X0, X20
	263 Move W1, W21
	264 Move V0, V11
	265 Move V1, V12
	266 Move V2, V13
	267 Move X2, X22
	268 Move X3, X31
	269 Move V3, V10
	270 Move V4, V9
	271 Move V5, V8
	272 Move X4, X23
	273 NotImplemented "Instruction BLR not yet implemented."
	274 Move X0, X31
	275 Call Time.get_fixedTime
	276 Move [X19+500], S0
	277 Move X20, [X31+112]
	278 Move X19, [X31+120]
	279 Move X22, [X31+96]
	280 Move X21, [X31+104]
	281 Move X24, [X31+80]
	282 Move X23, [X31+88]
	283 Move X30, [X31+64]
	284 Move D9, [X31+48]
	285 Move D8, [X31+56]
	286 Move D11, [X31+32]
	287 Move D10, [X31+40]
	288 Move D13, [X31+16]
	289 Move D12, [X31+24]
	290 Move D15, [X31+128]
	291 Move D14, [X31+136]
	292 Return 
	293 Call 0x1B6FA1C

Method: System.Void OnCollisionEnter(UnityEngine.Collision collisionInfo)

Disassembly:
	0x01CA53F0 BL 0x1D29EBC
	0x01CA53F4 CBZ X19, 0x1CA5448
	0x01CA53F8 ADRP X9, 0x22A9000
	0x01CA53FC LDR X9, [X9 + 0x3C8]
	0x01CA5400 STRB W20, [X19 + 0x58]
	0x01CA5404 LDR X8, [X19]
	0x01CA5408 LDR X1, [X9]
	0x01CA540C LDRB W10, [X8 + 0x130]
	0x01CA5410 LDRB W9, [X1 + 0x130]
	0x01CA5414 CMP W10, W9
	0x01CA5418 B.CC 0x1CA5440
	0x01CA541C LDR X8, [X8 + 0xC8]
	0x01CA5420 ADD X8, X8, X9, 0x3, LSL
	0x01CA5424 LDUR X8, [X8 - 0x8]
	0x01CA5428 CMP X8, X1
	0x01CA542C B.NE 0x1CA5440
	0x01CA5430 MOV X0, X19
	0x01CA5434 LDP X20, X19, [X31 + 0x10]
	0x01CA5438 LDR X30, [X31], #0x20
	0x01CA543C B 0x1CA19B4
	0x01CA5440 MOV X0, X19
	0x01CA5444 BL 0x1B6ECDC
	0x01CA5448 BL 0x1B6EA1C
	0x01CA544C STP X30, X21, [X31 - 0x20]!
	0x01CA5450 STP X20, X19, [X31 + 0x10]
	0x01CA5454 ADRP X21, 0x257E000
	0x01CA5458 LDRB W8, [X21 + 0x43E]
	0x01CA545C MOV X20, X1
	0x01CA5460 MOV X19, X0
	0x01CA5464 TBNZ X8, 0x0, 0x1CA547C
	0x01CA5468 ADRP X0, 0x22A9000
	0x01CA546C LDR X0, [X0 + 0x3C8]
	0x01CA5470 BL 0x1B6E7F0
	0x01CA5474 MOVZ W8, 0x1
	0x01CA5478 STRB W8, [X21 + 0x43E]
	0x01CA547C MOVZ W0, 0x1
	0x01CA5480 MOV X1, X31
	0x01CA5484 MOVZ W21, 0x1
	0x01CA5488 BL 0x1D29EBC
	0x01CA548C CBZ X19, 0x1CA54E8
	0x01CA5490 ADRP X9, 0x22A9000
	0x01CA5494 LDR X9, [X9 + 0x3C8]
	0x01CA5498 LDP S0, S1, [X20 + 0x24]
	0x01CA549C LDR V2, [X20 + 0x2C]
	0x01CA54A0 STRB W21, [X19 + 0x58]
	0x01CA54A4 LDR X8, [X19]
	0x01CA54A8 LDR X1, [X9]
	0x01CA54AC LDRB W10, [X8 + 0x130]
	0x01CA54B0 LDRB W9, [X1 + 0x130]
	0x01CA54B4 CMP W10, W9
	0x01CA54B8 B.CC 0x1CA54E0
	0x01CA54BC LDR X8, [X8 + 0xC8]
	0x01CA54C0 ADD X8, X8, X9, 0x3, LSL
	0x01CA54C4 LDUR X8, [X8 - 0x8]
	0x01CA54C8 CMP X8, X1
	0x01CA54CC B.NE 0x1CA54E0
	0x01CA54D0 MOV X0, X19
	0x01CA54D4 LDP X20, X19, [X31 + 0x10]
	0x01CA54D8 LDP X30, X21, [X31], #0x20
	0x01CA54DC B 0x1CA49C8
	0x01CA54E0 MOV X0, X19
	0x01CA54E4 BL 0x1B6ECDC
	0x01CA54E8 BL 0x1B6EA1C
	0x01CA54EC FADD S0, S0, S3
	0x01CA54F0 FADD S1, S1, S4
	0x01CA54F4 FADD S2, S2, S5
	0x01CA54F8 RET
	0x01CA54FC SUB X31, X31, 0x40
	0x01CA5500 STR X30, [X31 + 0x10]
	0x01CA5504 STP X22, X21, [X31 + 0x20]
	0x01CA5508 STP X20, X19, [X31 + 0x30]
	0x01CA550C ADRP X22, 0x257E000
	0x01CA5510 LDRB W8, [X22 + 0x450]
	0x01CA5514 MOV X21, X2
	0x01CA5518 MOV X19, X1
	0x01CA551C MOV X20, X0
	0x01CA5520 CBNZ W8, 0x1CA5544
	0x01CA5524 ADRP X0, 0x22A9000
	0x01CA5528 LDR X0, [X0 + 0x520]
	0x01CA552C BL 0x1B6E7F0
	0x01CA5530 ADRP X0, 0x22A9000
	0x01CA5534 LDR X0, [X0 + 0x4A8]
	0x01CA5538 BL 0x1B6E7F0
	0x01CA553C MOVZ W8, 0x1
	0x01CA5540 STRB W8, [X22 + 0x450]
	0x01CA5544 STR X31, [X31 + 0x18]
	0x01CA5548 LDR X0, [X20 + 0x58]
	0x01CA554C CBZ X0, 0x1CA5764
	0x01CA5550 MOV X1, X31
	0x01CA5554 BL 0x1DD0FA8
	0x01CA5558 TBZ X0, 0x0, 0x1CA570C
	0x01CA555C MOV X0, X20
	0x01CA5560 MOV X1, X31
	0x01CA5564 BL 0x1DBA4A4
	0x01CA5568 TBZ X0, 0x0, 0x1CA5594
	0x01CA556C MOV X0, X20
	0x01CA5570 MOV X1, X31
	0x01CA5574 BL 0x1DBA450
	0x01CA5578 CMP W0, 0x1
	0x01CA557C B.NE 0x1CA5654
	0x01CA5580 MOV X0, X20
	0x01CA5584 MOV X1, X31
	0x01CA5588 BL 0x1DB6E90
	0x01CA558C TBZ X0, 0x0, 0x1CA568C
	0x01CA5590 B 0x1CA570C
	0x01CA5594 AND X21, X21, 0x0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x257F000
	007 Move W8, [X21+1070]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22A9000
	015 Move X0, [X0+1144]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X21+1070], W8
	019 Compare X20, 0
	020 JumpIfEqual {138}
	021 Move X22, 0x22A9000
	022 Move X22, [X22+1144]
	023 Move X0, X20
	024 Move X1, X31
	025 Call Collision.get_gameObject, X0
	026 Move X21, X0
	027 Move X0, X20
	028 Move X1, X31
	029 Call Collision.get_relativeVelocity, X0
	030 Move X0, X19
	031 Move X1, X21
	032 Call GrabbableItem.ApplyCollisionDamage, X0, X1, X2
	033 Move X0, [X22]
	034 Move X21, [X19+288]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1B6F8F8
	039 Move X0, X21
	040 Move X1, X31
	041 Move X2, X31
	042 Call Object.op_Equality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {132}
	047 Move X8, [X19+288]
	048 Compare X8, 0
	049 JumpIfEqual {138}
	050 Move X0, [X8+64]
	051 Compare X0, 0
	052 JumpIfEqual {132}
	053 Move W8, [X0+96]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 2
	056 Compare TEMP, 2
	057 JumpIfEqual {132}
	058 Move X1, X31
	059 Call NetworkObject.get_HasStateAuthority, X0
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {132}
	064 Move W8, [X19+137]
	065 Compare W8, 0
	066 JumpIfEqual {108}
	067 Move X0, [X22]
	068 Move X21, [X19+288]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1B6F8F8
	073 Move X0, X21
	074 Move X1, X31
	075 Move X2, X31
	076 Call Object.op_Inequality, X0, X1
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {108}
	081 Move X8, [X19+288]
	082 Compare X8, 0
	083 JumpIfEqual {138}
	084 Move W8, [X8+132]
	085 Compare W8, 0
	086 JumpIfEqual {108}
	087 Move X0, X31
	088 Call Time.get_fixedTime
	089 Move V1, [X19+340]
	090 Subtract S0, S0, S1
	091 Move S1, 0.25
	092 NotImplemented "Instruction FCMP not yet implemented."
	093 Move X21, [X19+288]
	094 Move X0, X20
	095 Move X1, X31
	096 Call Collision.get_relativeVelocity, X0
	097 Compare X21, 0
	098 JumpIfEqual {138}
	099 Move X8, [X21+152]
	100 Compare X8, 0
	101 JumpIfEqual {108}
	102 Move W1, [X21+128]
	103 Move X9, [X8+24]
	104 Move X0, [X8+64]
	105 Move X3, [X8+40]
	106 Move X2, X20
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move W21, [X19+320]
	109 Move X0, X20
	110 Move X1, X31
	111 Call Collision.get_gameObject, X0
	112 Compare X0, 0
	113 JumpIfEqual {138}
	114 Move X1, X31
	115 Call GameObject.get_layer, X0
	116 Move W1, W0
	117 Move X0, X21
	118 Move X2, X31
	119 Call LayerMaskExtensions.Contains, X0, X1
	120 Move TEMP, X0
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfNotEqual {129}
	124 Move W8, 1
	125 Move X0, X19
	126 Move X1, X20
	127 Move [X19+336], W8
	128 Call GrabbableItem.UpdateContactPoints, X0, X1
	129 Move X0, X31
	130 Call Time.get_fixedTime
	131 Move [X19+340], S0
	132 Move X20, [X31+32]
	133 Move X19, [X31+40]
	134 Move X22, [X31+16]
	135 Move X21, [X31+24]
	136 Move X30, [X31+48]
	137 Return 
	138 Call 0x1B6FA1C

Method: System.Void OnCollisionStay(UnityEngine.Collision collisionInfo)

Disassembly:
	0x01CA58D8 ADD X31, X31, 0x40
	0x01CA58DC RET
	0x01CA58E0 BL 0x1B6EA1C
	0x01CA58E4 STP X30, X19, [X31 - 0x10]!
	0x01CA58E8 LDR X8, [X0 + 0x50]
	0x01CA58EC CBZ X8, 0x1CA58FC
	0x01CA58F0 LDR W0, [X8]
	0x01CA58F4 LDP X30, X19, [X31], #0x10
	0x01CA58F8 RET
	0x01CA58FC ADRP X0, 0x22A8000
	0x01CA5900 LDR X0, [X0 + 0x490]
	0x01CA5904 BL 0x1B6E804
	0x01CA5908 BL 0x1B6EA0C
	0x01CA590C MOV X19, X0
	0x01CA5910 ADRP X0, 0x22A9000
	0x01CA5914 LDR X0, [X0 + 0x538]
	0x01CA5918 BL 0x1B6E804
	0x01CA591C MOV X1, X0
	0x01CA5920 MOV X0, X19
	0x01CA5924 MOV X2, X31
	0x01CA5928 BL 0x31E7550
	0x01CA592C ADRP X0, 0x22A9000
	0x01CA5930 LDR X0, [X0 + 0x540]
	0x01CA5934 BL 0x1B6E804
	0x01CA5938 MOV X1, X0
	0x01CA593C MOV X0, X19
	0x01CA5940 BL 0x1B6E8E8
	0x01CA5944 STP X30, X19, [X31 - 0x10]!
	0x01CA5948 LDR X8, [X0 + 0x50]
	0x01CA594C CBZ X8, 0x1CA595C
	0x01CA5950 STR W1, [X8]
	0x01CA5954 LDP X30, X19, [X31], #0x10
	0x01CA5958 RET
	0x01CA595C ADRP X0, 0x22A8000
	0x01CA5960 LDR X0, [X0 + 0x490]
	0x01CA5964 BL 0x1B6E804
	0x01CA5968 BL 0x1B6EA0C
	0x01CA596C MOV X19, X0
	0x01CA5970 ADRP X0, 0x22A9000
	0x01CA5974 LDR X0, [X0 + 0x538]
	0x01CA5978 BL 0x1B6E804
	0x01CA597C MOV X1, X0
	0x01CA5980 MOV X0, X19
	0x01CA5984 MOV X2, X31
	0x01CA5988 BL 0x31E7550
	0x01CA598C ADRP X0, 0x22A9000
	0x01CA5990 LDR X0, [X0 + 0x548]
	0x01CA5994 BL 0x1B6E804
	0x01CA5998 MOV X1, X0
	0x01CA599C MOV X0, X19
	0x01CA59A0 BL 0x1B6E8E8
	0x01CA59A4 STP X30, X19, [X31 - 0x10]!
	0x01CA59A8 LDR X8, [X0 + 0x50]
	0x01CA59AC CBZ X8, 0x1CA59BC
	0x01CA59B0 LDR W0, [X8 + 0x4]
	0x01CA59B4 LDP X30, X19, [X31], #0x10
	0x01CA59B8 RET
	0x01CA59BC ADRP X0, 0x22A8000
	0x01CA59C0 LDR X0, [X0 + 0x490]
	0x01CA59C4 BL 0x1B6E804

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x257F000
	007 Move X21, 0x22A9000
	008 Move W8, [X22+1071]
	009 Move X21, [X21+1144]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x22A9000
	017 Move X0, [X0+1144]
	018 Call 0x1B6F7F0
	019 Move W8, 1
	020 Move [X22+1071], W8
	021 Move X0, [X21]
	022 Move X21, [X20+288]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1B6F8F8
	027 Move X0, X21
	028 Move X1, X31
	029 Move X2, X31
	030 Call Object.op_Equality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {81}
	035 Move X8, [X20+288]
	036 Compare X8, 0
	037 JumpIfEqual {87}
	038 Move X0, [X8+64]
	039 Compare X0, 0
	040 JumpIfEqual {81}
	041 Move W8, [X0+96]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 2
	044 Compare TEMP, 2
	045 JumpIfEqual {81}
	046 Move X1, X31
	047 Call NetworkObject.get_HasStateAuthority, X0
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {81}
	052 Compare X19, 0
	053 JumpIfEqual {87}
	054 Move W21, [X20+320]
	055 Move X0, X19
	056 Move X1, X31
	057 Call Collision.get_gameObject, X0
	058 Compare X0, 0
	059 JumpIfEqual {87}
	060 Move X1, X31
	061 Call GameObject.get_layer, X0
	062 Move W1, W0
	063 Move X0, X21
	064 Move X2, X31
	065 Call LayerMaskExtensions.Contains, X0, X1
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {81}
	070 Move W8, 1
	071 Move [X20+336], W8
	072 Move X0, X20
	073 Move X1, X19
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X22, [X31+16]
	077 Move X21, [X31+24]
	078 Move X30, [X31+48]
	079 Call GrabbableItem.UpdateContactPoints, X0, X1
	080 Return 
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move X30, [X31+48]
	086 Return 
	087 Call 0x1B6FA1C

Method: System.Void UpdateContactPoints(UnityEngine.Collision collisionInfo)

Disassembly:
	0x01CA5598 MOV X0, X20
	0x01CA559C MOV X1, X21
	0x01CA55A0 MOV X2, X31
	0x01CA55A4 BL 0x1DBC85C
	0x01CA55A8 TBZ X0, 0x0, 0x1CA5744
	0x01CA55AC MOV X0, X20
	0x01CA55B0 MOV X1, X21
	0x01CA55B4 MOV X2, X31
	0x01CA55B8 BL 0x1DBCFFC
	0x01CA55BC TBNZ X0, 0x0, 0x1CA570C
	0x01CA55C0 ADRP X22, 0x257E000
	0x01CA55C4 LDRB W8, [X22 + 0x452]
	0x01CA55C8 CBNZ W8, 0x1CA55E0
	0x01CA55CC ADRP X0, 0x22A9000
	0x01CA55D0 LDR X0, [X0 + 0x528]
	0x01CA55D4 BL 0x1B6E7F0
	0x01CA55D8 MOVZ W8, 0x1
	0x01CA55DC STRB W8, [X22 + 0x452]
	0x01CA55E0 LDR X0, [X20 + 0xB8]
	0x01CA55E4 CBZ X0, 0x1CA5764
	0x01CA55E8 ADRP X8, 0x22A9000
	0x01CA55EC LDR X8, [X8 + 0x528]
	0x01CA55F0 MOV X1, X21
	0x01CA55F4 LDR X2, [X8]
	0x01CA55F8 BL 0x2938FB4
	0x01CA55FC MOV X20, X0
	0x01CA5600 MOV X0, X19
	0x01CA5604 MOV X1, X31
	0x01CA5608 BL 0x1D9FBB0
	0x01CA560C CBZ X20, 0x1CA5764
	0x01CA5610 AND X1, X0, 0x0
	0x01CA5614 ADD X2, X31, 0x18
	0x01CA5618 MOV X0, X20
	0x01CA561C MOV X3, X31
	0x01CA5620 BL 0x1DD1BC0
	0x01CA5624 TBZ X0, 0x0, 0x1CA574C
	0x01CA5628 LDR X0, [X31 + 0x18]
	0x01CA562C CBZ X0, 0x1CA5764
	0x01CA5630 MOVZ W1, 0x3
	0x01CA5634 MOV X2, X31
	0x01CA5638 BL 0x1DA0714
	0x01CA563C ADRP X8, 0x22A9000
	0x01CA5640 LDR X8, [X8 + 0x520]
	0x01CA5644 STRH W31, [X31 + 0xC]
	0x01CA5648 AND W1, W0, 0x1
	0x01CA564C LDR X2, [X8]
	0x01CA5650 B 0x1CA56F0
	0x01CA5654 LDR X8, [X20]
	0x01CA5658 MOV X0, X20
	0x01CA565C LDR X9, [X8 + 0x268]
	0x01CA5660 LDR X1, [X8 + 0x270]
	0x01CA5664 BLR X9
	0x01CA5668 CBZ X19, 0x1CA5764
	0x01CA566C LDR X8, [X19 + 0x20]
	0x01CA5670 CBZ X8, 0x1CA5764
	0x01CA5674 LDR W1, [X8 + 0x20]
	0x01CA5678 AND X2, X0, 0x0
	0x01CA567C MOV X0, X20
	0x01CA5680 MOV X3, X31
	0x01CA5684 BL 0x1CA5768
	0x01CA5688 TBNZ X0, 0x0, 0x1CA570C
	0x01CA568C LDR X8, [X20]
	0x01CA5690 MOV X0, X20
	0x01CA5694 LDR X9, [X8 + 0x268]
	0x01CA5698 LDR X1, [X8 + 0x270]
	0x01CA569C BLR X9
	0x01CA56A0 ADRP X8, 0x22A9000
	0x01CA56A4 LDR X8, [X8 + 0x4A8]
	0x01CA56A8 MOV X22, X0
	0x01CA56AC LDR X8, [X8]
	0x01CA56B0 LDR W9, [X8 + 0xE0]
	0x01CA56B4 CBNZ W9, 0x1CA56C0
	0x01CA56B8 MOV X0, X8
	0x01CA56BC BL 0x1B6E8F8
	0x01CA56C0 CMP W22, W21
	0x01CA56C4 B.NE 0x1CA56F8
	0x01CA56C8 CBZ X19, 0x1CA5764
	0x01CA56CC LDR X8, [X19 + 0x38]
	0x01CA56D0 CBZ X8, 0x1CA5764
	0x01CA56D4 ADRP X9, 0x22A9000
	0x01CA56D8 LDR W8, [X8 + 0x9C]
	0x01CA56DC LDR X9, [X9 + 0x520]
	0x01CA56E0 STRH W31, [X31 + 0xC]
	0x01CA56E4 ANDS W31, W8, 0x3
	0x01CA56E8 LDR X2, [X9]
	0x01CA56EC CSET W1, NE
	0x01CA56F0 ADD X0, X31, 0xC
	0x01CA56F4 B 0x1CA5724
	0x01CA56F8 AND X1, X21, 0x0
	0x01CA56FC MOV X0, X20
	0x01CA5700 MOV X2, X31
	0x01CA5704 BL 0x1DBCFFC
	0x01CA5708 TBZ X0, 0x0, 0x1CA5744
	0x01CA570C ADRP X8, 0x22A9000
	0x01CA5710 LDR X8, [X8 + 0x520]
	0x01CA5714 STRH W31, [X31 + 0xC]
	0x01CA5718 ADD X0, X31, 0xC
	0x01CA571C MOVZ W1, 0x1
	0x01CA5720 LDR X2, [X8]
	0x01CA5724 BL 0x22CFDA4
	0x01CA5728 LDRH W8, [X31 + 0xC]
	0x01CA572C LDP X20, X19, [X31 + 0x30]
	0x01CA5730 LDP X22, X21, [X31 + 0x20]
	0x01CA5734 LDR X30, [X31 + 0x10]
	0x01CA5738 MOV W0, W8
	0x01CA573C ADD X31, X31, 0x40
	0x01CA5740 RET
	0x01CA5744 MOV W8, W31
	0x01CA5748 B 0x1CA572C
	0x01CA574C ADRP X8, 0x22A9000
	0x01CA5750 LDR X8, [X8 + 0x520]
	0x01CA5754 ADD X0, X31, 0xC
	0x01CA5758 MOV W1, W31
	0x01CA575C STRH W31, [X31 + 0xC]
	0x01CA5760 B 0x1CA5720
	0x01CA5764 BL 0x1B6EA1C
	0x01CA5768 SUB X31, X31, 0x40
	0x01CA576C STR X30, [X31 + 0x10]
	0x01CA5770 STP X22, X21, [X31 + 0x20]
	0x01CA5774 STP X20, X19, [X31 + 0x30]
	0x01CA5778 ADRP X22, 0x257E000
	0x01CA577C LDRB W8, [X22 + 0x451]
	0x01CA5780 MOV X19, X2
	0x01CA5784 MOV X21, X1
	0x01CA5788 MOV X20, X0
	0x01CA578C CBNZ W8, 0x1CA57BC
	0x01CA5790 ADRP X0, 0x22A9000
	0x01CA5794 LDR X0, [X0 + 0x1E8]
	0x01CA5798 BL 0x1B6E7F0
	0x01CA579C ADRP X0, 0x22A9000
	0x01CA57A0 LDR X0, [X0 + 0x4A8]
	0x01CA57A4 BL 0x1B6E7F0
	0x01CA57A8 ADRP X0, 0x22A9000
	0x01CA57AC LDR X0, [X0 + 0x530]
	0x01CA57B0 BL 0x1B6E7F0
	0x01CA57B4 MOVZ W8, 0x1
	0x01CA57B8 STRB W8, [X22 + 0x451]
	0x01CA57BC ADRP X22, 0x22A9000
	0x01CA57C0 LDR X22, [X22 + 0x4A8]
	0x01CA57C4 STR X31, [X31 + 0x18]
	0x01CA57C8 STR W31, [X31 + 0x8]
	0x01CA57CC LDR X0, [X22]
	0x01CA57D0 LDR W8, [X0 + 0xE0]
	0x01CA57D4 CBZ W8, 0x1CA57E0
	0x01CA57D8 CBNZ W19, 0x1CA57E8
	0x01CA57DC B 0x1CA58C8
	0x01CA57E0 BL 0x1B6E8F8
	0x01CA57E4 CBZ W19, 0x1CA58C8
	0x01CA57E8 LDR X0, [X22]
	0x01CA57EC LDR W8, [X0 + 0xE0]
	0x01CA57F0 CBNZ W8, 0x1CA57F8
	0x01CA57F4 BL 0x1B6E8F8
	0x01CA57F8 CMP W21, W19
	0x01CA57FC B.NE 0x1CA5808
	0x01CA5800 MOVZ W0, 0x1
	0x01CA5804 B 0x1CA58CC
	0x01CA5808 LDR X0, [X22]
	0x01CA580C LDR W8, [X0 + 0xE0]
	0x01CA5810 CBZ W8, 0x1CA588C
	0x01CA5814 CBZ W21, 0x1CA5894
	0x01CA5818 LDR X0, [X22]
	0x01CA581C LDR W8, [X0 + 0xE0]
	0x01CA5820 CBNZ W8, 0x1CA5828
	0x01CA5824 BL 0x1B6E8F8
	0x01CA5828 ADDS W31, W21, 0x1
	0x01CA582C B.NE 0x1CA58C8
	0x01CA5830 ADRP X8, 0x22A9000
	0x01CA5834 LDR X8, [X8 + 0x1E8]
	0x01CA5838 LDR X0, [X8]
	0x01CA583C LDR W8, [X0 + 0xE0]
	0x01CA5840 CBNZ W8, 0x1CA5848
	0x01CA5844 BL 0x1B6E8F8
	0x01CA5848 MOV X0, X31
	0x01CA584C BL 0x1D9DF60
	0x01CA5850 ADRP X8, 0x22A9000
	0x01CA5854 LDR X8, [X8 + 0x530]
	0x01CA5858 AND X1, X0, 0x0
	0x01CA585C ADD X2, X31, 0x18
	0x01CA5860 MOV X0, X20
	0x01CA5864 LDR X3, [X8]
	0x01CA5868 BL 0x213C1FC
	0x01CA586C TBZ X0, 0x0, 0x1CA58C8
	0x01CA5870 LDR X8, [X31 + 0x18]
	0x01CA5874 CBZ X8, 0x1CA58E0
	0x01CA5878 LDR X0, [X22]
	0x01CA587C LDR W20, [X8 + 0x18]
	0x01CA5880 LDR W9, [X0 + 0xE0]
	0x01CA5884 CBNZ W9, 0x1CA58BC
	0x01CA5888 B 0x1CA58B8
	0x01CA588C BL 0x1B6E8F8
	0x01CA5890 CBNZ W21, 0x1CA5818
	0x01CA5894 ADD X1, X31, 0x8
	0x01CA5898 MOV X0, X20
	0x01CA589C MOV X2, X31
	0x01CA58A0 BL 0x1DBD0D4
	0x01CA58A4 TBZ X0, 0x0, 0x1CA58C8
	0x01CA58A8 LDR X0, [X22]
	0x01CA58AC LDR W20, [X31 + 0x8]
	0x01CA58B0 LDR W8, [X0 + 0xE0]
	0x01CA58B4 CBNZ W8, 0x1CA58BC
	0x01CA58B8 BL 0x1B6E8F8
	0x01CA58BC CMP W20, W19
	0x01CA58C0 CSET W0, EQ
	0x01CA58C4 B 0x1CA58CC
	0x01CA58C8 MOV W0, W31
	0x01CA58CC LDP X20, X19, [X31 + 0x30]
	0x01CA58D0 LDP X22, X21, [X31 + 0x20]
	0x01CA58D4 LDR X30, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 336
	002 Move [X31+208], D14
	003 Move [X31+224], D13
	004 Move [X31+232], D12
	005 Move [X31+240], D11
	006 Move [X31+248], D10
	007 Move [X31+256], D9
	008 Move [X31+264], D8
	009 Move [X31+272], X29
	010 Move [X31+280], X30
	011 Move [X31+288], X24
	012 Move [X31+296], X23
	013 Move [X31+304], X22
	014 Move [X31+312], X21
	015 Move [X31+320], X20
	016 Move [X31+328], X19
	017 Move X21, 0x257F000
	018 Move W8, [X21+1072]
	019 Move X20, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x22AA000
	026 Move X0, [X0+1256]
	027 Call 0x1B6F7F0
	028 Move W8, 1
	029 Move [X21+1072], W8
	030 NotImplemented "Instruction MOVI not yet implemented."
	031 Move [X31+176], V0
	032 Move [X31+184], V0
	033 Move [X31+144], V0
	034 Move [X31+152], V0
	035 Move [X31+112], V0
	036 Move [X31+120], V0
	037 Move [X31+80], V0
	038 Move [X31+88], V0
	039 Compare X20, 0
	040 JumpIfEqual {242}
	041 Move X0, X20
	042 Move X1, X31
	043 Call Collision.get_contactCount, X0
	044 Move X8, [X19+464]
	045 Move [X19+472], W0
	046 Compare X8, 0
	047 JumpIfEqual {242}
	048 Move W8, [X8+24]
	049 Move W1, W0
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X8, 0x22AA000
	052 Move X8, [X8+1256]
	053 Move X0, [X8]
	054 Call 0x1B6F868
	055 Move [X19+464], X0
	056 Move X0, [X19+304]
	057 Compare X0, 0
	058 JumpIfEqual {242}
	059 Move X1, X31
	060 Call Rigidbody.get_position, X0
	061 Move X0, [X19+304]
	062 Compare X0, 0
	063 JumpIfEqual {242}
	064 Move X1, X31
	065 Move V8, V0
	066 Move V9, V1
	067 Move V10, V2
	068 Call Rigidbody.get_rotation, X0
	069 Move X21, 0x257F000
	070 Move W8, [X21+1110]
	071 Move V11, V0
	072 Move V12, V1
	073 Move V13, V2
	074 Move V14, V3
	075 Compare W8, 0
	076 JumpIfNotEqual {82}
	077 Move X0, 0x22A9000
	078 Move X0, [X0+1152]
	079 Call 0x1B6F7F0
	080 Move W8, 1
	081 Move [X21+1110], W8
	082 Move X21, 0x22A9000
	083 Move X21, [X21+1152]
	084 Move V1, V9
	085 Move V2, V10
	086 Move V3, V11
	087 Move X8, [X21]
	088 Move V4, V12
	089 Move V5, V13
	090 Move V6, V14
	091 Move X8, [X8+184]
	092 Move X0, X31
	093 Move V0, [X8+20]
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 Add X8, X31, 16
	096 Move [X31+8], S0
	097 Move V0, V8
	098 Move [X31], X9
	099 Call Matrix4x4.TRS, X0, X1, X2
	100 Move V0, [X31+16]
	101 Move V1, [X31+32]
	102 Move V2, [X31+48]
	103 Move V3, [X31+64]
	104 Add X8, X31, 16
	105 Add X0, X31, 80
	106 Move X1, X31
	107 Move [X31+80], V0
	108 Move [X31+88], V1
	109 Move [X31+112], V2
	110 Move [X31+120], V3
	111 Call Matrix4x4.get_inverse, X0
	112 Move X22, 0x257F000
	113 Move V0, [X31+16]
	114 Move V1, [X31+32]
	115 Move V2, [X31+48]
	116 Move V3, [X31+64]
	117 Move W8, [X22+1087]
	118 Move [X31+144], V0
	119 Move [X31+152], V1
	120 Move [X31+176], V2
	121 Move [X31+184], V3
	122 Compare W8, 0
	123 JumpIfNotEqual {129}
	124 Move X0, 0x22A9000
	125 Move X0, [X0+1152]
	126 Call 0x1B6F7F0
	127 Move W8, 1
	128 Move [X22+1087], W8
	129 Move X8, [X21]
	130 Move X9, [X8+184]
	131 Move W8, [X19+472]
	132 Move S13, [X9]
	133 Move S12, [X9+4]
	134 Move V11, [X9+8]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X8, -18853888
	137 Move V14, [X8+3336]
	138 Move X21, X31
	139 Move X22, X31
	140 Move W23, 32
	141 Move X0, X20
	142 Move X1, X31
	143 Call Collision.get_contacts, X0
	144 Compare X0, 0
	145 JumpIfEqual {242}
	146 Move W8, [X0+24]
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Add X0, X0, X23
	149 Move X1, X31
	150 Call ContactPoint.get_point, X0
	151 Move X0, X20
	152 Move X1, X31
	153 Move V8, V0
	154 Move V9, V1
	155 Move V10, V2
	156 Call Collision.get_contacts, X0
	157 Compare X0, 0
	158 JumpIfEqual {242}
	159 Move W8, [X0+24]
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Add X0, X0, X23
	162 Move X1, X31
	163 Call ContactPoint.get_normal, X0
	164 Move X24, [X19+464]
	165 Compare X24, 0
	166 JumpIfEqual {242}
	167 Multiply S0, S0, S14
	168 Multiply S1, S1, S14
	169 Multiply S2, S2, S14
	170 Add S8, S8, S0
	171 Add S9, S9, S1
	172 Add S10, S10, S2
	173 Add X0, X31, 144
	174 Move V0, V8
	175 Move V1, V9
	176 Move V2, V10
	177 Move X1, X31
	178 Call Matrix4x4.MultiplyPoint, X0, X1
	179 Move W8, [X24+24]
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Add X8, X24, X21
	182 Move [X8+32], S0
	183 Move [X8+40], S1
	184 Move [X8+40], S2
	185 Move X8, [X19+464]
	186 Compare X8, 0
	187 JumpIfEqual {242}
	188 Move W9, [X8+24]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Add X8, X8, X21
	191 Move X0, X20
	192 Move X1, X31
	193 Move [X8+44], S8
	194 Move [X8+52], S9
	195 Move [X8+52], S10
	196 Call Collision.get_contacts, X0
	197 Compare X0, 0
	198 JumpIfEqual {242}
	199 Move W8, [X0+24]
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Add X0, X0, X23
	202 Move X1, X31
	203 Add S13, S13, S8
	204 Add S12, S12, S9
	205 Add S11, S11, S10
	206 Call ContactPoint.get_normal, X0
	207 NotImplemented "Instruction LDRSW not yet implemented."
	208 Add X22, X22, 1
	209 Add X23, X23, 48
	210 Add X21, X21, 24
	211 NotImplemented "Instruction CMP not yet implemented."
	212 NotImplemented "Instruction SCVTF not yet implemented."
	213 NotImplemented "Instruction FDIV not yet implemented."
	214 NotImplemented "Instruction FDIV not yet implemented."
	215 NotImplemented "Instruction FDIV not yet implemented."
	216 Add X0, X31, 144
	217 Move X1, X31
	218 Move [X19+476], S0
	219 Move [X19+480], S1
	220 Move [X19+484], S2
	221 Call Matrix4x4.MultiplyPoint, X0, X1
	222 Move [X19+488], S0
	223 Move [X19+492], S1
	224 Move [X19+496], S2
	225 Move X20, [X31+320]
	226 Move X19, [X31+328]
	227 Move X22, [X31+304]
	228 Move X21, [X31+312]
	229 Move X24, [X31+288]
	230 Move X23, [X31+296]
	231 Move X29, [X31+272]
	232 Move X30, [X31+280]
	233 Move D9, [X31+256]
	234 Move D8, [X31+264]
	235 Move D11, [X31+240]
	236 Move D10, [X31+248]
	237 Move D13, [X31+224]
	238 Move D12, [X31+232]
	239 Move V14, [X31+208]
	240 Add X31, X31, 336
	241 Return 
	242 Call 0x1B6FA1C
	243 Call 0x1B6FA24

Method: System.Void UpdateVelocities(System.Single dt)

Disassembly:
	0x01CA48C4 LDR V14, [X31 + 0xD0]
	0x01CA48C8 ADD X31, X31, 0x150
	0x01CA48CC RET
	0x01CA48D0 BL 0x1B6EA1C
	0x01CA48D4 BL 0x1B6EA24
	0x01CA48D8 STR X30, [X31 - 0x30]!
	0x01CA48DC STP X22, X21, [X31 + 0x10]
	0x01CA48E0 STP X20, X19, [X31 + 0x20]
	0x01CA48E4 ADRP X22, 0x257F000
	0x01CA48E8 ADRP X21, 0x22A9000
	0x01CA48EC LDRB W8, [X22 + 0x42F]
	0x01CA48F0 LDR X21, [X21 + 0x478]
	0x01CA48F4 MOV X19, X1
	0x01CA48F8 MOV X20, X0
	0x01CA48FC TBNZ X8, 0x0, 0x1CA4914
	0x01CA4900 ADRP X0, 0x22A9000
	0x01CA4904 LDR X0, [X0 + 0x478]
	0x01CA4908 BL 0x1B6E7F0
	0x01CA490C MOVZ W8, 0x1
	0x01CA4910 STRB W8, [X22 + 0x42F]
	0x01CA4914 LDR X0, [X21]
	0x01CA4918 LDR X21, [X20 + 0x120]
	0x01CA491C LDR W8, [X0 + 0xE0]
	0x01CA4920 CBNZ W8, 0x1CA4928
	0x01CA4924 BL 0x1B6E8F8
	0x01CA4928 MOV X0, X21
	0x01CA492C MOV X1, X31
	0x01CA4930 MOV X2, X31
	0x01CA4934 BL 0x3AA0AF0
	0x01CA4938 TBNZ X0, 0x0, 0x1CA49B4
	0x01CA493C LDR X8, [X20 + 0x120]
	0x01CA4940 CBZ X8, 0x1CA49C4
	0x01CA4944 LDR X0, [X8 + 0x40]
	0x01CA4948 CBZ X0, 0x1CA49B4
	0x01CA494C LDRB W8, [X0 + 0x60]
	0x01CA4950 TBNZ X8, 0x1, 0x1CA49B4
	0x01CA4954 MOV X1, X31
	0x01CA4958 BL 0x1D9E780
	0x01CA495C TBZ X0, 0x0, 0x1CA49B4
	0x01CA4960 CBZ X19, 0x1CA49C4
	0x01CA4964 LDR W21, [X20 + 0x140]
	0x01CA4968 MOV X0, X19
	0x01CA496C MOV X1, X31
	0x01CA4970 BL 0x3AF2368
	0x01CA4974 CBZ X0, 0x1CA49C4
	0x01CA4978 MOV X1, X31
	0x01CA497C BL 0x3A9D928
	0x01CA4980 MOV W1, W0
	0x01CA4984 MOV X0, X21
	0x01CA4988 MOV X2, X31
	0x01CA498C BL 0x398D3BC
	0x01CA4990 TBZ X0, 0x0, 0x1CA49B4
	0x01CA4994 MOVZ W8, 0x1
	0x01CA4998 STRB W8, [X20 + 0x150]
	0x01CA499C MOV X0, X20
	0x01CA49A0 MOV X1, X19
	0x01CA49A4 LDP X20, X19, [X31 + 0x20]
	0x01CA49A8 LDP X22, X21, [X31 + 0x10]
	0x01CA49AC LDR X30, [X31], #0x30
	0x01CA49B0 B 0x1CA4598
	0x01CA49B4 LDP X20, X19, [X31 + 0x20]
	0x01CA49B8 LDP X22, X21, [X31 + 0x10]
	0x01CA49BC LDR X30, [X31], #0x30
	0x01CA49C0 RET
	0x01CA49C4 BL 0x1B6EA1C
	0x01CA49C8 STR D10, [X31 - 0x30]!
	0x01CA49CC STP D9, D8, [X31 + 0x8]
	0x01CA49D0 STR X30, [X31 + 0x18]
	0x01CA49D4 STP X20, X19, [X31 + 0x20]
	0x01CA49D8 ADRP X20, 0x257F000
	0x01CA49DC LDRB W8, [X20 + 0x432]
	0x01CA49E0 MOV V8.16B, V2.16B
	0x01CA49E4 MOV V9.16B, V1.16B
	0x01CA49E8 MOV V10.16B, V0.16B
	0x01CA49EC MOV X19, X0
	0x01CA49F0 TBNZ X8, 0x0, 0x1CA4A14
	0x01CA49F4 ADRP X0, 0x22AA000
	0x01CA49F8 LDR X0, [X0 + 0x1C0]
	0x01CA49FC BL 0x1B6E7F0
	0x01CA4A00 ADRP X0, 0x22AA000
	0x01CA4A04 LDR X0, [X0 + 0x4F0]
	0x01CA4A08 BL 0x1B6E7F0
	0x01CA4A0C MOVZ W8, 0x1
	0x01CA4A10 STRB W8, [X20 + 0x432]
	0x01CA4A14 LDRB W8, [X19 + 0x58]
	0x01CA4A18 CBZ W8, 0x1CA4A54
	0x01CA4A1C STRB W31, [X19 + 0x58]
	0x01CA4A20 MOV X0, X19
	0x01CA4A24 MOV X1, X31
	0x01CA4A28 BL 0x3A9B084
	0x01CA4A2C CBZ X0, 0x1CA4BAC
	0x01CA4A30 MOV V1.16B, V9.16B
	0x01CA4A34 MOV V2.16B, V8.16B
	0x01CA4A38 LDP X20, X19, [X31 + 0x20]
	0x01CA4A3C LDR X30, [X31 + 0x18]
	0x01CA4A40 LDP D9, D8, [X31 + 0x8]
	0x01CA4A44 MOV V0.16B, V10.16B
	0x01CA4A48 MOV X1, X31
	0x01CA4A4C LDR V10, [X31], #0x30
	0x01CA4A50 B 0x3AA76F8
	0x01CA4A54 ADRP X20, 0x22AA000
	0x01CA4A58 LDR X20, [X20 + 0x1C0]
	0x01CA4A5C LDR X0, [X20]
	0x01CA4A60 LDR W8, [X0 + 0xE0]
	0x01CA4A64 CBNZ W8, 0x1CA4A6C
	0x01CA4A68 BL 0x1B6E8F8
	0x01CA4A6C MOV X0, X19
	0x01CA4A70 MOV X1, X31
	0x01CA4A74 BL 0x1D697C8
	0x01CA4A78 LDR X0, [X19 + 0x38]
	0x01CA4A7C CBZ X0, 0x1CA4BAC
	0x01CA4A80 MOV X1, X31
	0x01CA4A84 BL 0x1D87040
	0x01CA4A88 CMP W0, 0x4
	0x01CA4A8C B.NE 0x1CA4AA4
	0x01CA4A90 LDP X20, X19, [X31 + 0x20]
	0x01CA4A94 LDR X30, [X31 + 0x18]
	0x01CA4A98 LDP D9, D8, [X31 + 0x8]
	0x01CA4A9C LDR V10, [X31], #0x30
	0x01CA4AA0 RET
	0x01CA4AA4 LDR X0, [X19 + 0x40]
	0x01CA4AA8 CBZ X0, 0x1CA4BAC
	0x01CA4AAC MOV X1, X31
	0x01CA4AB0 BL 0x1D9F538
	0x01CA4AB4 ANDS W31, W0, 0x7
	0x01CA4AB8 B.EQ 0x1CA4B1C
	0x01CA4ABC TBNZ X0, 0x0, 0x1CA4A20
	0x01CA4AC0 LDR X8, [X19 + 0x38]
	0x01CA4AC4 CBZ X8, 0x1CA4BAC
	0x01CA4AC8 LDR X0, [X8 + 0x50]
	0x01CA4ACC CBZ X0, 0x1CA4BAC
	0x01CA4AD0 MOV X1, X31
	0x01CA4AD4 BL 0x1DBEFE4
	0x01CA4AD8 TBZ X0, 0x0, 0x1CA4A90
	0x01CA4ADC LDR X8, [X19 + 0x38]
	0x01CA4AE0 CBZ X8, 0x1CA4BAC
	0x01CA4AE4 LDR X0, [X8 + 0x50]
	0x01CA4AE8 MOVZ W1, 0x14
	0x01CA4AEC MOV X2, X31
	0x01CA4AF0 BL 0x1DD601C
	0x01CA4AF4 MOV X20, X0
	0x01CA4AF8 MOVZ W0, 0x1
	0x01CA4AFC MOV X1, X31
	0x01CA4B00 BL 0x1D29EBC
	0x01CA4B04 LDR X8, [X19 + 0x40]
	0x01CA4B08 CBZ X8, 0x1CA4BAC
	0x01CA4B0C LDR X8, [X8 + 0x20]
	0x01CA4B10 CBZ X8, 0x1CA4B5C
	0x01CA4B14 LDR W0, [X8]
	0x01CA4B18 B 0x1CA4B60
	0x01CA4B1C LDR X0, [X20]
	0x01CA4B20 LDR X19, [X19 + 0x40]
	0x01CA4B24 LDR W8, [X0 + 0xE0]
	0x01CA4B28 CBNZ W8, 0x1CA4B30
	0x01CA4B2C BL 0x1B6E8F8
	0x01CA4B30 ADRP X8, 0x22AA000
	0x01CA4B34 LDR X8, [X8 + 0x4F0]
	0x01CA4B38 MOV X1, X19
	0x01CA4B3C LDP X20, X19, [X31 + 0x20]
	0x01CA4B40 LDR X30, [X31 + 0x18]
	0x01CA4B44 LDR X0, [X8]
	0x01CA4B48 LDP D9, D8, [X31 + 0x8]
	0x01CA4B4C MOVZ W2, 0x7
	0x01CA4B50 MOV X3, X31
	0x01CA4B54 LDR V10, [X31], #0x30
	0x01CA4B58 B 0x1D69640
	0x01CA4B5C MOV X0, X31
	0x01CA4B60 LDR W1, [X19 + 0x68]
	0x01CA4B64 MOVZ W2, 0x8
	0x01CA4B68 MOV X3, X31
	0x01CA4B6C BL 0x1DA8258
	0x01CA4B70 STUR X0, [X20 + 0x1C]
	0x01CA4B74 STP S10, S9, [X20 + 0x24]
	0x01CA4B78 STR S8, [X20 + 0x2C]
	0x01CA4B7C CBZ X20, 0x1CA4BAC
	0x01CA4B80 MOVZ W8, 0xA0
	0x01CA4B84 STR W8, [X20 + 0xC]
	0x01CA4B88 LDR X0, [X19 + 0x38]
	0x01CA4B8C CBZ X0, 0x1CA4BAC
	0x01CA4B90 MOV X1, X20
	0x01CA4B94 LDP X20, X19, [X31 + 0x20]
	0x01CA4B98 LDR X30, [X31 + 0x18]
	0x01CA4B9C LDP D9, D8, [X31 + 0x8]
	0x01CA4BA0 MOV X2, X31
	0x01CA4BA4 LDR V10, [X31], #0x30
	0x01CA4BA8 B 0x1D8A710
	0x01CA4BAC BL 0x1B6EA1C
	0x01CA4BB0 STP X30, X21, [X31 - 0x20]!
	0x01CA4BB4 STP X20, X19, [X31 + 0x10]
	0x01CA4BB8 ADRP X21, 0x257F000
	0x01CA4BBC LDRB W8, [X21 + 0x433]
	0x01CA4BC0 MOV X20, X1
	0x01CA4BC4 MOV X19, X0
	0x01CA4BC8 TBNZ X8, 0x0, 0x1CA4BE0
	0x01CA4BCC ADRP X0, 0x22AA000
	0x01CA4BD0 LDR X0, [X0 + 0x4A8]
	0x01CA4BD4 BL 0x1B6E7F0
	0x01CA4BD8 MOVZ W8, 0x1
	0x01CA4BDC STRB W8, [X21 + 0x433]
	0x01CA4BE0 LDR X0, [X19 + 0x38]
	0x01CA4BE4 CBZ X0, 0x1CA4C34
	0x01CA4BE8 ADRP X21, 0x22AA000
	0x01CA4BEC LDR X21, [X21 + 0x4A8]
	0x01CA4BF0 MOV X1, X31
	0x01CA4BF4 BL 0x1D87528
	0x01CA4BF8 LDR X8, [X21]
	0x01CA4BFC MOV X21, X0
	0x01CA4C00 LDR W9, [X8 + 0xE0]
	0x01CA4C04 CBNZ W9, 0x1CA4C10
	0x01CA4C08 MOV X0, X8
	0x01CA4C0C BL 0x1B6E8F8
	0x01CA4C10 CMP W20, W21
	0x01CA4C14 B.NE 0x1CA4C28
	0x01CA4C18 MOV X0, X19
	0x01CA4C1C BL 0x1C9F768
	0x01CA4C20 MOVZ W8, 0x1
	0x01CA4C24 STRB W8, [X19 + 0x184]
	0x01CA4C28 LDP X20, X19, [X31 + 0x10]
	0x01CA4C2C LDP X30, X21, [X31], #0x20
	0x01CA4C30 RET
	0x01CA4C34 BL 0x1B6EA1C
	0x01CA4C38 STP X30, X21, [X31 - 0x20]!
	0x01CA4C3C STP X20, X19, [X31 + 0x10]
	0x01CA4C40 ADRP X21, 0x257F000
	0x01CA4C44 LDRB W8, [X21 + 0x434]
	0x01CA4C48 MOV X20, X1
	0x01CA4C4C MOV X19, X0
	0x01CA4C50 TBNZ X8, 0x0, 0x1CA4C68
	0x01CA4C54 ADRP X0, 0x22AA000
	0x01CA4C58 LDR X0, [X0 + 0x4A8]
	0x01CA4C5C BL 0x1B6E7F0
	0x01CA4C60 MOVZ W8, 0x1
	0x01CA4C64 STRB W8, [X21 + 0x434]
	0x01CA4C68 LDR X0, [X19 + 0x38]
	0x01CA4C6C CBZ X0, 0x1CA4CB4
	0x01CA4C70 ADRP X21, 0x22AA000
	0x01CA4C74 LDR X21, [X21 + 0x4A8]
	0x01CA4C78 MOV X1, X31
	0x01CA4C7C BL 0x1D87528
	0x01CA4C80 LDR X8, [X21]
	0x01CA4C84 MOV X21, X0
	0x01CA4C88 LDR W9, [X8 + 0xE0]
	0x01CA4C8C CBNZ W9, 0x1CA4C98
	0x01CA4C90 MOV X0, X8
	0x01CA4C94 BL 0x1B6E8F8
	0x01CA4C98 CMP W20, W21
	0x01CA4C9C B.NE 0x1CA4CA8
	0x01CA4CA0 MOVZ W8, 0x1
	0x01CA4CA4 STRB W8, [X19 + 0x184]
	0x01CA4CA8 LDP X20, X19, [X31 + 0x10]
	0x01CA4CAC LDP X30, X21, [X31], #0x20
	0x01CA4CB0 RET
	0x01CA4CB4 BL 0x1B6EA1C
	0x01CA4CB8 STP X30, X21, [X31 - 0x20]!
	0x01CA4CBC STP X20, X19, [X31 + 0x10]
	0x01CA4CC0 ADRP X21, 0x257F000
	0x01CA4CC4 ADRP X20, 0x22AA000
	0x01CA4CC8 LDRB W8, [X21 + 0x435]
	0x01CA4CCC LDR X20, [X20 + 0x4E8]
	0x01CA4CD0 MOV X19, X0
	0x01CA4CD4 TBNZ X8, 0x0, 0x1CA4CEC
	0x01CA4CD8 ADRP X0, 0x22AA000
	0x01CA4CDC LDR X0, [X0 + 0x4E8]
	0x01CA4CE0 BL 0x1B6E7F0
	0x01CA4CE4 MOVZ W8, 0x1
	0x01CA4CE8 STRB W8, [X21 + 0x435]
	0x01CA4CEC MOVZ W8, 0x1
	0x01CA4CF0 MOVZ W9, 0x101
	0x01CA4CF4 MOVZ W10, 0x3F800000
	0x01CA4CF8 STRB W8, [X19 + 0x88]
	0x01CA4CFC STRH W9, [X19 + 0x8A]
	0x01CA4D00 STURH W9, [X19 + 0x8D]
	0x01CA4D04 STR W10, [X19 + 0x98]
	0x01CA4D08 LDR X0, [X20]
	0x01CA4D0C MOVZ W1, 0xA
	0x01CA4D10 BL 0x1B6E868
	0x01CA4D14 STR X0, [X19 + 0x1D0]
	0x01CA4D18 MOV X0, X19
	0x01CA4D1C LDP X20, X19, [X31 + 0x10]
	0x01CA4D20 MOV X1, X31
	0x01CA4D24 LDP X30, X21, [X31], #0x20
	0x01CA4D28 B 0x1D661D8
	0x01CA4D2C STR X30, [X31 - 0x30]!
	0x01CA4D30 STP X22, X21, [X31 + 0x10]
	0x01CA4D34 STP X20, X19, [X31 + 0x20]
	0x01CA4D38 ADRP X21, 0x257F000
	0x01CA4D3C ADRP X22, 0x22AA000
	0x01CA4D40 ADRP X19, 0x22AA000
	0x01CA4D44 ADRP X20, 0x22AA000
	0x01CA4D48 LDRB W8, [X21 + 0x436]
	0x01CA4D4C LDR X22, [X22 + 0x4F8]
	0x01CA4D50 LDR X19, [X19 + 0x500]
	0x01CA4D54 LDR X20, [X20 + 0x3C8]
	0x01CA4D58 TBNZ X8, 0x0, 0x1CA4D88
	0x01CA4D5C ADRP X0, 0x22AA000
	0x01CA4D60 LDR X0, [X0 + 0x3C8]
	0x01CA4D64 BL 0x1B6E7F0
	0x01CA4D68 ADRP X0, 0x22AA000
	0x01CA4D6C LDR X0, [X0 + 0x500]
	0x01CA4D70 BL 0x1B6E7F0
	0x01CA4D74 ADRP X0, 0x22AA000
	0x01CA4D78 LDR X0, [X0 + 0x4F8]
	0x01CA4D7C BL 0x1B6E7F0
	0x01CA4D80 MOVZ W8, 0x1
	0x01CA4D84 STRB W8, [X21 + 0x436]
	0x01CA4D88 LDR X0, [X22]
	0x01CA4D8C BL 0x1B6EA0C
	0x01CA4D90 LDR X1, [X19]
	0x01CA4D94 MOV X19, X0
	0x01CA4D98 BL 0x2BD32D4
	0x01CA4D9C LDR X8, [X20]
	0x01CA4DA0 LDP X22, X21, [X31 + 0x10]
	0x01CA4DA4 LDR X8, [X8 + 0xB8]
	0x01CA4DA8 STR X19, [X8]
	0x01CA4DAC LDP X20, X19, [X31 + 0x20]
	0x01CA4DB0 LDR X30, [X31], #0x30
	0x01CA4DB4 RET
	0x01CA4DB8 SUB X31, X31, 0x70
	0x01CA4DBC STR X30, [X31 + 0x50]
	0x01CA4DC0 STP X20, X19, [X31 + 0x60]
	0x01CA4DC4 MRS X20, 0xC000
	0x01CA4DC8 LDR X8, [X20 + 0x28]
	0x01CA4DCC MOV X19, X0
	0x01CA4DD0 STR X8, [X31 + 0x48]
	0x01CA4DD4 LDR X1, [X0 + 0xC8]
	0x01CA4DD8 BL 0x1C9E17C
	0x01CA4DDC LDR X1, [X19 + 0xD0]
	0x01CA4DE0 MOV X0, X19
	0x01CA4DE4 BL 0x1C9E1DC
	0x01CA4DE8 LDUR V0, [X19 + 0xE4]
	0x01CA4DEC LDUR V1, [X19 + 0xD8]
	0x01CA4DF0 ADD X1, X31, 0x20
	0x01CA4DF4 MOV X0, X19
	0x01CA4DF8 STUR V0, [X31 + 0x2C]
	0x01CA4DFC STR V1, [X31 + 0x2]
	0x01CA4E00 BL 0x1C9E2A8
	0x01CA4E04 LDRB W1, [X19 + 0xF4]
	0x01CA4E08 MOV X0, X19
	0x01CA4E0C BL 0x1C9E384
	0x01CA4E10 ADD X8, X19, 0xF5
	0x01CA4E14 LDR V0, [X8 + 0x1]
	0x01CA4E18 LDUR V1, [X19 + 0xF5]
	0x01CA4E1C ADD X1, X31, 0x0
	0x01CA4E20 MOV X0, X19
	0x01CA4E24 STP V1, V0, [X31]
	0x01CA4E28 BL 0x1C9E44C
	0x01CA4E2C LDR W1, [X19 + 0x118]
	0x01CA4E30 MOV X0, X19
	0x01CA4E34 BL 0x1C9E510
	0x01CA4E38 LDR X8, [X20 + 0x28]
	0x01CA4E3C LDR X9, [X31 + 0x48]
	0x01CA4E40 CMP X8, X9
	0x01CA4E44 B.NE 0x1CA4E58
	0x01CA4E48 LDP X20, X19, [X31 + 0x60]
	0x01CA4E4C LDR X30, [X31 + 0x50]
	0x01CA4E50 ADD X31, X31, 0x70
	0x01CA4E54 RET
	0x01CA4E58 BL 0x3D19880
	0x01CA4E5C SUB X31, X31, 0x70
	0x01CA4E60 STR X30, [X31 + 0x50]
	0x01CA4E64 STP X20, X19, [X31 + 0x60]
	0x01CA4E68 MRS X20, 0xC000
	0x01CA4E6C LDR X8, [X20 + 0x28]
	0x01CA4E70 MOV X19, X0
	0x01CA4E74 STR X8, [X31 + 0x48]
	0x01CA4E78 BL 0x1C99A60
	0x01CA4E7C STR X0, [X19 + 0xC8]
	0x01CA4E80 MOV X0, X19
	0x01CA4E84 BL 0x1C9DF64
	0x01CA4E88 STR X0, [X19 + 0xD0]
	0x01CA4E8C ADD X8, X31, 0x28
	0x01CA4E90 MOV X0, X19
	0x01CA4E94 BL 0x1C9E23C
	0x01CA4E98 LDUR V0, [X31 + 0x34]
	0x01CA4E9C LDUR V1, [X31 + 0x28]
	0x01CA4EA0 MOV X0, X19
	0x01CA4EA4 STUR V0, [X19 + 0xE4]
	0x01CA4EA8 STUR V1, [X19 + 0xD8]
	0x01CA4EAC BL 0x1C9E31C
	0x01CA4EB0 AND W8, W0, 0x1
	0x01CA4EB4 STRB W8, [X19 + 0xF4]
	0x01CA4EB8 ADD X8, X31, 0x8
	0x01CA4EBC MOV X0, X19
	0x01CA4EC0 BL 0x1C9E3E8
	0x01CA4EC4 LDUR V0, [X31 + 0x18]
	0x01CA4EC8 LDUR V1, [X31 + 0x8]
	0x01CA4ECC ADD X8, X19, 0xF5
	0x01CA4ED0 MOV X0, X19
	0x01CA4ED4 STR V0, [X8 + 0x1]
	0x01CA4ED8 STUR V1, [X19 + 0xF5]
	0x01CA4EDC BL 0x1C9E4B0
	0x01CA4EE0 STR W0, [X19 + 0x118]
	0x01CA4EE4 LDR X8, [X20 + 0x28]
	0x01CA4EE8 LDR X9, [X31 + 0x48]
	0x01CA4EEC CMP X8, X9
	0x01CA4EF0 B.NE 0x1CA4F04
	0x01CA4EF4 LDP X20, X19, [X31 + 0x60]
	0x01CA4EF8 LDR X30, [X31 + 0x50]
	0x01CA4EFC ADD X31, X31, 0x70
	0x01CA4F00 RET
	0x01CA4F04 BL 0x3D19880
	0x01CA4F08 STR X30, [X31 - 0x40]!
	0x01CA4F0C STP X24, X23, [X31 + 0x10]
	0x01CA4F10 STP X22, X21, [X31 + 0x20]
	0x01CA4F14 STP X20, X19, [X31 + 0x30]
	0x01CA4F18 ADRP X20, 0x257F000
	0x01CA4F1C LDRB W8, [X20 + 0x437]
	0x01CA4F20 MOV X21, X1
	0x01CA4F24 MOV X19, X0
	0x01CA4F28 TBNZ X8, 0x0, 0x1CA4F40
	0x01CA4F2C ADRP X0, 0x22AA000
	0x01CA4F30 LDR X0, [X0 + 0x3C8]
	0x01CA4F34 BL 0x1B6E7F0
	0x01CA4F38 MOVZ W8, 0x1
	0x01CA4F3C STRB W8, [X20 + 0x437]
	0x01CA4F40 MOVZ W0, 0x1
	0x01CA4F44 MOV X1, X31
	0x01CA4F48 MOVZ W23, 0x1
	0x01CA4F4C BL 0x1D29EBC
	0x01CA4F50 CBZ X19, 0x1CA4FE0
	0x01CA4F54 LDR X0, [X19 + 0x38]
	0x01CA4F58 ADRP X24, 0x22AA000
	0x01CA4F5C LDUR X20, [X21 + 0x24]
	0x01CA4F60 LDR W22, [X21 + 0x2C]
	0x01CA4F64 LDR X24, [X24 + 0x3C8]
	0x01CA4F68 MOV X1, X21
	0x01CA4F6C MOV W2, W31
	0x01CA4F70 MOV X3, X31
	0x01CA4F74 BL 0x1DA8574
	0x01CA4F78 STRB W23, [X19 + 0x58]

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+112], D15
	003 Move [X31+120], D14
	004 Move [X31+128], D13
	005 Move [X31+136], D12
	006 Move [X31+144], D11
	007 Move [X31+152], D10
	008 Move [X31+160], D9
	009 Move [X31+168], D8
	010 Move [X31+176], X30
	011 Move [X31+192], X22
	012 Move [X31+200], X21
	013 Move [X31+208], X20
	014 Move [X31+216], X19
	015 Move X20, 0x2580000
	016 Move X21, 0x22AA000
	017 Move W8, [X20+1073]
	018 Move X21, [X21+1144]
	019 Move V8, V0
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x22AA000
	026 Move X0, [X0+1144]
	027 Call 0x1B6F7F0
	028 Move W8, 1
	029 Move [X20+1073], W8
	030 Move X0, [X21]
	031 Move [X31+188], W31
	032 Move [X31+104], W31
	033 Move [X31+96], X31
	034 Move W8, [X0+224]
	035 Move X20, [X19+288]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1B6F8F8
	039 Move X0, X20
	040 Move X1, X31
	041 Move X2, X31
	042 Call Object.op_Equality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {475}
	047 Move X8, [X19+288]
	048 Compare X8, 0
	049 JumpIfEqual {490}
	050 Move X0, [X8+64]
	051 Compare X0, 0
	052 JumpIfEqual {475}
	053 Move W8, [X0+96]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 2
	056 Compare TEMP, 2
	057 JumpIfEqual {475}
	058 Move X1, X31
	059 Call NetworkObject.get_HasStateAuthority, X0
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {475}
	064 Move X0, [X21]
	065 Move X20, [X19+328]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1B6F8F8
	070 Move X0, X20
	071 Move X1, X31
	072 Move X2, X31
	073 Call Object.op_Inequality, X0, X1
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {474}
	078 Move X0, [X19+328]
	079 Compare X0, 0
	080 JumpIfEqual {490}
	081 Move X1, X31
	082 Call Component.get_transform, X0
	083 Compare X0, 0
	084 JumpIfEqual {490}
	085 Move X1, X31
	086 Move X20, X0
	087 Call Transform.get_position, X0
	088 Move X0, X20
	089 Move X1, X31
	090 Move V9, V0
	091 Move V10, V1
	092 Move [X31+184], S2
	093 Call Transform.get_rotation, X0
	094 Move X0, [X19+304]
	095 Compare X0, 0
	096 JumpIfEqual {490}
	097 Move X1, X31
	098 Move V12, V0
	099 Move V13, V1
	100 Move V14, V2
	101 Move V15, V3
	102 Call Rigidbody.get_position, X0
	103 Move X0, [X19+304]
	104 Compare X0, 0
	105 JumpIfEqual {490}
	106 Subtract S11, S9, S0
	107 Move V0, [X31+184]
	108 Move X1, X31
	109 Move [X31+68], S10
	110 Move [X31+76], S9
	111 Subtract S9, S10, S1
	112 Subtract S0, S0, S2
	113 Move [X31+92], S0
	114 Call Rigidbody.get_rotation, X0
	115 Move X0, X31
	116 Call Quaternion.Inverse, X0
	117 Multiply S4, S15, S0
	118 Multiply S5, S12, S3
	119 Multiply S6, S15, S1
	120 Multiply S7, S13, S3
	121 Add S4, S4, S5
	122 Multiply S5, S15, S2
	123 Add S6, S6, S7
	124 Multiply S7, S14, S3
	125 Multiply S3, S15, S3
	126 Add S5, S5, S7
	127 Multiply S7, S12, S0
	128 Subtract S3, S3, S7
	129 Multiply S7, S13, S2
	130 Add S4, S7, S4
	131 Multiply S7, S14, S0
	132 Add S6, S7, S6
	133 Multiply S7, S12, S1
	134 Add S5, S7, S5
	135 Multiply S7, S14, S1
	136 Multiply S1, S13, S1
	137 Subtract S3, S3, S1
	138 Multiply S1, S12, S2
	139 Multiply S16, S13, S0
	140 Multiply S17, S14, S2
	141 Subtract S0, S4, S7
	142 Subtract S1, S6, S1
	143 Subtract S2, S5, S16
	144 Subtract S3, S3, S17
	145 Add X0, X31, 96
	146 Add X1, X31, 188
	147 Move X2, X31
	148 Call Quaternion.Internal_ToAxisAngleRad, X0, X1, X2
	149 Move X8, -18849792
	150 Move V0, [X31+188]
	151 Move V5, [X8+3612]
	152 Move S1, [X31+96]
	153 Move S2, [X31+100]
	154 Move V3, [X31+104]
	155 Move X8, -18849792
	156 Multiply S0, S0, S5
	157 Move V4, [X8+2804]
	158 Move [X31+188], S0
	159 Move W8, [X19+336]
	160 Multiply S1, S0, S1
	161 Multiply S2, S0, S2
	162 Multiply S0, S0, S3
	163 Multiply S3, S1, S4
	164 Multiply S1, S2, S4
	165 Multiply S10, S0, S4
	166 Move [X31+84], S3
	167 Move [X31+92], S1
	168 Move [X31+76], S4
	169 Compare W8, 0
	170 JumpIfEqual {251}
	171 Move [X31+12], S5
	172 Move V4, [X19+488]
	173 Move V5, [X19+492]
	174 Move V6, [X19+496]
	175 Move V0, V12
	176 Move V1, V13
	177 Move V2, V14
	178 Move V3, V15
	179 Move X0, X31
	180 Move [X31+60], S10
	181 Move [X31+68], S9
	182 Call Quaternion.op_Multiply, X0, X1
	183 Move X0, [X19+304]
	184 Compare X0, 0
	185 JumpIfEqual {490}
	186 Move [X31+56], S0
	187 Move V0, [X19+484]
	188 Move V12, [X19+476]
	189 Move V15, [X19+480]
	190 Move X1, X31
	191 Move [X31+48], S2
	192 Move [X31+56], S1
	193 Move [X31+80], S0
	194 Call Rigidbody.get_position, X0
	195 Move X0, [X19+304]
	196 Compare X0, 0
	197 JumpIfEqual {490}
	198 Move X1, X31
	199 Move V14, V0
	200 Move V9, V1
	201 Move V10, V2
	202 Call Rigidbody.get_position, X0
	203 Move X21, 0x2580000
	204 Move W8, [X21+1089]
	205 Move V13, V0
	206 Move [X31+32], S2
	207 Move [X31+40], S1
	208 Compare W8, 0
	209 JumpIfNotEqual {215}
	210 Move X0, 0x22AA000
	211 Move X0, [X0+1160]
	212 Call 0x1B6F7F0
	213 Move W8, 1
	214 Move [X21+1089], W8
	215 Move X20, 0x22AA000
	216 Move X20, [X20+1160]
	217 Move V0, [X31+80]
	218 Subtract S2, S12, S14
	219 Subtract S9, S15, S9
	220 Move X0, [X20]
	221 Subtract S14, S0, S10
	222 Move [X31+28], S15
	223 Move W8, [X0+224]
	224 Compare W8, 0
	225 JumpIfNotEqual {229}
	226 Move V10, V2
	227 Call 0x1B6F8F8
	228 Move V2, V10
	229 Multiply S0, S2, S2
	230 Multiply S1, S9, S9
	231 Move X8, -18849792
	232 Add S0, S0, S1
	233 Move V15, [X8+2916]
	234 Multiply S1, S14, S14
	235 Add S0, S1, S0
	236 Move V1, V9
	237 Move S10, [X31+68]
	238 Move S9, [X31+72]
	239 Move [X31+40], S0
	240 Move [X31+48], S12
	241 NotImplemented "Instruction FSQRT not yet implemented."
	242 NotImplemented "Instruction FCMP not yet implemented."
	243 Move [X31+4], S1
	244 Move [X31+12], S14
	245 Move [X31], S2
	246 NotImplemented "Instruction FDIV not yet implemented."
	247 NotImplemented "Instruction FDIV not yet implemented."
	248 Move [X31+20], S1
	249 Move [X31+28], S2
	250 NotImplemented "Instruction FDIV not yet implemented."
	251 Move S12, [X31+88]
	252 Move S13, [X31+92]
	253 Move V14, [X31+84]
	254 Move X22, 0x2580000
	255 Move W8, [X22+1087]
	256 Compare W8, 0
	257 JumpIfNotEqual {263}
	258 Move X0, 0x22AA000
	259 Move X0, [X0+1152]
	260 Call 0x1B6F7F0
	261 Move W8, 1
	262 Move [X22+1087], W8
	263 Move X8, 0x22AA000
	264 Move X8, [X8+1152]
	265 Move X8, [X8]
	266 Move X8, [X8+184]
	267 Move V1, [X8]
	268 Move V0, [X8+4]
	269 Move [X31+20], S0
	270 Move [X31+28], S1
	271 Move V0, [X8+8]
	272 Move [X31+16], S0
	273 Move V0, [X31+56]
	274 Move W8, [X21+1089]
	275 Add S12, S9, S0
	276 Move S1, [X31+48]
	277 Move S0, [X31+52]
	278 Add S10, S10, S0
	279 Move V0, [X31+184]
	280 Add S9, S0, S1
	281 Compare W8, 0
	282 JumpIfNotEqual {288}
	283 Move X0, 0x22AA000
	284 Move X0, [X0+1160]
	285 Call 0x1B6F7F0
	286 Move W8, 1
	287 Move [X21+1089], W8
	288 Move V0, [X31+36]
	289 Move X0, [X20]
	290 Subtract S2, S12, S13
	291 Move [X31+72], S9
	292 Subtract S13, S10, S0
	293 Move V0, [X31+32]
	294 Move W8, [X0+224]
	295 Subtract S9, S9, S0
	296 Compare W8, 0
	297 JumpIfNotEqual {303}
	298 Move V14, V11
	299 Move V11, V2
	300 Call 0x1B6F8F8
	301 Move V2, V11
	302 Move V11, V14
	303 Multiply S0, S2, S2
	304 Multiply S1, S13, S13
	305 Add S0, S0, S1
	306 Multiply S1, S9, S9
	307 Add S3, S1, S0
	308 NotImplemented "Instruction FSQRT not yet implemented."
	309 NotImplemented "Instruction FCMP not yet implemented."
	310 Move [X31+68], S9
	311 Move [X31+56], S13
	312 Move V15, [X31+28]
	313 NotImplemented "Instruction FDIV not yet implemented."
	314 NotImplemented "Instruction FDIV not yet implemented."
	315 NotImplemented "Instruction FDIV not yet implemented."
	316 Move X21, 0x2580000
	317 Move W8, [X21+1087]
	318 Move V15, [X31+28]
	319 Compare W8, 0
	320 JumpIfNotEqual {330}
	321 Move X0, 0x22AA000
	322 Move X0, [X0+1152]
	323 Move V9, V2
	324 Move V13, V3
	325 Call 0x1B6F7F0
	326 Move V3, V13
	327 Move V2, V9
	328 Move W8, 1
	329 Move [X21+1087], W8
	330 Move X8, 0x22AA000
	331 Move X8, [X8+1152]
	332 Move X8, [X8]
	333 Move X8, [X8+184]
	334 Move S4, [X8]
	335 Move S13, [X8+4]
	336 Move V9, [X8+8]
	337 Move X21, 0x2580000
	338 Move W8, [X21+1111]
	339 Move [X31+184], S11
	340 Compare W8, 0
	341 JumpIfNotEqual {357}
	342 Move X0, 0x22AA000
	343 Move X0, [X0+1160]
	344 Move V11, V2
	345 Move V14, V3
	346 Move [X31+52], S12
	347 Move V12, V10
	348 Move V10, V4
	349 Call 0x1B6F7F0
	350 Move V4, V10
	351 Move V10, V12
	352 Move V12, [X31+52]
	353 Move V3, V14
	354 Move V2, V11
	355 Move W8, 1
	356 Move [X21+1111], W8
	357 Move V0, [X31+44]
	358 Move V1, [X31+72]
	359 Move X0, [X20]
	360 Subtract S6, S10, S15
	361 Subtract S5, S12, S0
	362 Move V0, [X31+80]
	363 Move W8, [X0+224]
	364 Move S10, 0.5
	365 Subtract S7, S1, S0
	366 Move S0, [X31+16]
	367 Move S1, [X31+20]
	368 Multiply S12, S0, S13
	369 Multiply S14, S0, S4
	370 Move V0, [X31+24]
	371 Multiply S11, S1, S9
	372 Multiply S15, S0, S9
	373 Multiply S9, S0, S13
	374 Multiply S13, S1, S4
	375 Compare W8, 0
	376 JumpIfNotEqual {388}
	377 Move [X31+80], S2
	378 Move [X31+72], S3
	379 Move [X31+48], S6
	380 Move [X31+56], S5
	381 Move [X31+44], S7
	382 Call 0x1B6F8F8
	383 Move S7, [X31+44]
	384 Move S6, [X31+48]
	385 Move V5, [X31+52]
	386 Move V3, [X31+72]
	387 Move V2, [X31+80]
	388 Move V0, [X31+40]
	389 Move X8, -18849792
	390 Move V1, [X8+2532]
	391 Multiply S5, S5, S10
	392 Multiply S6, S6, S10
	393 Multiply S7, S7, S10
	394 Subtract S4, S11, S12
	395 Subtract S12, S14, S15
	396 Subtract S10, S9, S13
	397 Move V11, [X31+184]
	398 Move V13, [X31+92]
	399 Move V14, [X31+84]
	400 Multiply S0, S0, S3
	401 NotImplemented "Instruction FSQRT not yet implemented."
	402 NotImplemented "Instruction FCMP not yet implemented."
	403 Move S1, W31
	404 Move V1, [X31]
	405 Move V3, [X31+56]
	406 Move V15, V4
	407 Move V4, [X31+68]
	408 Multiply S1, S1, S2
	409 Move V2, [X31+4]
	410 Move X0, [X20]
	411 Move [X31+52], S7
	412 Move [X31+72], S6
	413 Multiply S2, S2, S3
	414 Move V3, [X31+8]
	415 Add S1, S1, S2
	416 Move W8, [X0+224]
	417 Move S2, -1
	418 Multiply S3, S3, S4
	419 Add S1, S3, S1
	420 NotImplemented "Instruction FDIV not yet implemented."
	421 Move S1, 1
	422 NotImplemented "Instruction FMIN not yet implemented."
	423 NotImplemented "Instruction FCMP not yet implemented."
	424 NotImplemented "Instruction FCSEL not yet implemented."
	425 Move [X31+80], S5
	426 Compare W8, 0
	427 JumpIfNotEqual {429}
	428 Call 0x1B6F8F8
	429 NotImplemented "Instruction FCVT not yet implemented."
	430 Call 0x3D1A890
	431 Move V1, [X31+12]
	432 Move V5, [X31+80]
	433 Move V6, [X31+72]
	434 Move V7, [X31+52]
	435 NotImplemented "Instruction INVALID not yet implemented."
	436 Multiply S1, S0, S1
	437 Move V4, V15
	438 Multiply S0, S4, S1
	439 Move V4, [X31+76]
	440 Move V9, [X31+64]
	441 Multiply S2, S12, S1
	442 Multiply S1, S10, S1
	443 Move V12, [X31+88]
	444 Move V10, [X31+60]
	445 Move S3, 0.5
	446 Multiply S0, S0, S4
	447 Multiply S2, S2, S4
	448 Multiply S1, S1, S4
	449 Multiply S0, S0, S3
	450 Multiply S2, S2, S3
	451 Multiply S1, S1, S3
	452 Subtract S11, S11, S5
	453 Subtract S9, S9, S6
	454 Subtract S13, S13, S7
	455 Subtract S14, S14, S0
	456 Subtract S12, S12, S2
	457 Subtract S10, S10, S1
	458 Move X0, [X19+304]
	459 Compare X0, 0
	460 JumpIfEqual {490}
	461 NotImplemented "Instruction FDIV not yet implemented."
	462 NotImplemented "Instruction FDIV not yet implemented."
	463 NotImplemented "Instruction FDIV not yet implemented."
	464 Move X1, X31
	465 Call Rigidbody.set_velocity, X0, X1
	466 Move X0, [X19+304]
	467 Compare X0, 0
	468 JumpIfEqual {490}
	469 NotImplemented "Instruction FDIV not yet implemented."
	470 NotImplemented "Instruction FDIV not yet implemented."
	471 NotImplemented "Instruction FDIV not yet implemented."
	472 Move X1, X31
	473 Call Rigidbody.set_angularVelocity, X0, X1
	474 Move [X19+336], W31
	475 Move X20, [X31+208]
	476 Move X19, [X31+216]
	477 Move X22, [X31+192]
	478 Move X21, [X31+200]
	479 Move X30, [X31+176]
	480 Move D9, [X31+160]
	481 Move D8, [X31+168]
	482 Move D11, [X31+144]
	483 Move D10, [X31+152]
	484 Move D13, [X31+128]
	485 Move D12, [X31+136]
	486 Move D15, [X31+112]
	487 Move D14, [X31+120]
	488 Add X31, X31, 224
	489 Return 
	490 Call 0x1B6FA1C

Method: System.Void RPC_Teleport(UnityEngine.Vector3 position)

Disassembly:
	0x01CA59C8 BL 0x1B6EA0C
	0x01CA59CC MOV X19, X0
	0x01CA59D0 ADRP X0, 0x22A9000
	0x01CA59D4 LDR X0, [X0 + 0x550]
	0x01CA59D8 BL 0x1B6E804
	0x01CA59DC MOV X1, X0
	0x01CA59E0 MOV X0, X19
	0x01CA59E4 MOV X2, X31
	0x01CA59E8 BL 0x31E7550
	0x01CA59EC ADRP X0, 0x22A9000
	0x01CA59F0 LDR X0, [X0 + 0x558]
	0x01CA59F4 BL 0x1B6E804
	0x01CA59F8 MOV X1, X0
	0x01CA59FC MOV X0, X19
	0x01CA5A00 BL 0x1B6E8E8
	0x01CA5A04 STP X30, X19, [X31 - 0x10]!
	0x01CA5A08 LDR X8, [X0 + 0x50]
	0x01CA5A0C CBZ X8, 0x1CA5A1C
	0x01CA5A10 STR W1, [X8 + 0x4]
	0x01CA5A14 LDP X30, X19, [X31], #0x10
	0x01CA5A18 RET
	0x01CA5A1C ADRP X0, 0x22A8000
	0x01CA5A20 LDR X0, [X0 + 0x490]
	0x01CA5A24 BL 0x1B6E804
	0x01CA5A28 BL 0x1B6EA0C
	0x01CA5A2C MOV X19, X0
	0x01CA5A30 ADRP X0, 0x22A9000
	0x01CA5A34 LDR X0, [X0 + 0x550]
	0x01CA5A38 BL 0x1B6E804
	0x01CA5A3C MOV X1, X0
	0x01CA5A40 MOV X0, X19
	0x01CA5A44 MOV X2, X31
	0x01CA5A48 BL 0x31E7550
	0x01CA5A4C ADRP X0, 0x22A9000
	0x01CA5A50 LDR X0, [X0 + 0x560]
	0x01CA5A54 BL 0x1B6E804
	0x01CA5A58 MOV X1, X0
	0x01CA5A5C MOV X0, X19
	0x01CA5A60 BL 0x1B6E8E8
	0x01CA5A64 STP X30, X19, [X31 - 0x10]!
	0x01CA5A68 LDR X8, [X0 + 0x50]
	0x01CA5A6C CBZ X8, 0x1CA5A7C
	0x01CA5A70 LDR W0, [X8 + 0x8]
	0x01CA5A74 LDP X30, X19, [X31], #0x10
	0x01CA5A78 RET
	0x01CA5A7C ADRP X0, 0x22A8000
	0x01CA5A80 LDR X0, [X0 + 0x490]
	0x01CA5A84 BL 0x1B6E804
	0x01CA5A88 BL 0x1B6EA0C
	0x01CA5A8C MOV X19, X0
	0x01CA5A90 ADRP X0, 0x22A9000
	0x01CA5A94 LDR X0, [X0 + 0x568]
	0x01CA5A98 BL 0x1B6E804
	0x01CA5A9C MOV X1, X0
	0x01CA5AA0 MOV X0, X19
	0x01CA5AA4 MOV X2, X31
	0x01CA5AA8 BL 0x31E7550
	0x01CA5AAC ADRP X0, 0x22A9000
	0x01CA5AB0 LDR X0, [X0 + 0x570]
	0x01CA5AB4 BL 0x1B6E804
	0x01CA5AB8 MOV X1, X0
	0x01CA5ABC MOV X0, X19
	0x01CA5AC0 BL 0x1B6E8E8
	0x01CA5AC4 STP X30, X19, [X31 - 0x10]!
	0x01CA5AC8 LDR X8, [X0 + 0x50]
	0x01CA5ACC CBZ X8, 0x1CA5ADC
	0x01CA5AD0 STR W1, [X8 + 0x8]
	0x01CA5AD4 LDP X30, X19, [X31], #0x10
	0x01CA5AD8 RET
	0x01CA5ADC ADRP X0, 0x22A8000
	0x01CA5AE0 LDR X0, [X0 + 0x490]
	0x01CA5AE4 BL 0x1B6E804
	0x01CA5AE8 BL 0x1B6EA0C
	0x01CA5AEC MOV X19, X0
	0x01CA5AF0 ADRP X0, 0x22A9000
	0x01CA5AF4 LDR X0, [X0 + 0x568]
	0x01CA5AF8 BL 0x1B6E804
	0x01CA5AFC MOV X1, X0
	0x01CA5B00 MOV X0, X19
	0x01CA5B04 MOV X2, X31
	0x01CA5B08 BL 0x31E7550
	0x01CA5B0C ADRP X0, 0x22A9000
	0x01CA5B10 LDR X0, [X0 + 0x578]
	0x01CA5B14 BL 0x1B6E804
	0x01CA5B18 MOV X1, X0
	0x01CA5B1C MOV X0, X19
	0x01CA5B20 BL 0x1B6E8E8
	0x01CA5B24 STP X30, X19, [X31 - 0x10]!
	0x01CA5B28 LDR X8, [X0 + 0x50]
	0x01CA5B2C CBZ X8, 0x1CA5B44
	0x01CA5B30 LDR W8, [X8 + 0xC]
	0x01CA5B34 CMP W8, 0x0
	0x01CA5B38 CSET W0, NE
	0x01CA5B3C LDP X30, X19, [X31], #0x10
	0x01CA5B40 RET
	0x01CA5B44 ADRP X0, 0x22A8000
	0x01CA5B48 LDR X0, [X0 + 0x490]
	0x01CA5B4C BL 0x1B6E804
	0x01CA5B50 BL 0x1B6EA0C
	0x01CA5B54 MOV X19, X0
	0x01CA5B58 ADRP X0, 0x22A9000
	0x01CA5B5C LDR X0, [X0 + 0x580]
	0x01CA5B60 BL 0x1B6E804
	0x01CA5B64 MOV X1, X0
	0x01CA5B68 MOV X0, X19
	0x01CA5B6C MOV X2, X31
	0x01CA5B70 BL 0x31E7550
	0x01CA5B74 ADRP X0, 0x22A9000
	0x01CA5B78 LDR X0, [X0 + 0x588]
	0x01CA5B7C BL 0x1B6E804
	0x01CA5B80 MOV X1, X0
	0x01CA5B84 MOV X0, X19
	0x01CA5B88 BL 0x1B6E8E8
	0x01CA5B8C STP X30, X19, [X31 - 0x10]!
	0x01CA5B90 LDR X8, [X0 + 0x50]
	0x01CA5B94 CBZ X8, 0x1CA5BA8
	0x01CA5B98 AND W9, W1, 0x1
	0x01CA5B9C STR W9, [X8 + 0xC]
	0x01CA5BA0 LDP X30, X19, [X31], #0x10
	0x01CA5BA4 RET
	0x01CA5BA8 ADRP X0, 0x22A8000
	0x01CA5BAC LDR X0, [X0 + 0x490]

ISIL:
	001 Move [X31-48], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x257F000
	008 Move W8, [X20+1074]
	009 Move V8, V2
	010 Move V9, V1
	011 Move V10, V0
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x22AA000
	018 Move X0, [X0+448]
	019 Call 0x1B6F7F0
	020 Move X0, 0x22AA000
	021 Move X0, [X0+1264]
	022 Call 0x1B6F7F0
	023 Move W8, 1
	024 Move [X20+1074], W8
	025 Move W8, [X19+88]
	026 Compare W8, 0
	027 JumpIfEqual {46}
	028 Move [X19+88], W31
	029 Move X0, X19
	030 Move X1, X31
	031 Call Component.get_transform, X0
	032 Compare X0, 0
	033 JumpIfEqual {155}
	034 Move V1, V9
	035 Move V2, V8
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X30, [X31+24]
	039 Move D9, [X31+8]
	040 Move D8, [X31+16]
	041 Move V0, V10
	042 Move X1, X31
	043 Move V10, [X31+48]
	044 Call Transform.set_position, X0, X1
	045 Return 
	046 Move X20, 0x22AA000
	047 Move X20, [X20+448]
	048 Move X0, [X20]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1B6F8F8
	053 Move X0, X19
	054 Move X1, X31
	055 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	056 Move X0, [X19+56]
	057 Compare X0, 0
	058 JumpIfEqual {155}
	059 Move X1, X31
	060 Call NetworkRunner.get_Stage, X0
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X30, [X31+24]
	065 Move D9, [X31+8]
	066 Move D8, [X31+16]
	067 Move V10, [X31+48]
	068 Return 
	069 Move X0, [X19+64]
	070 Compare X0, 0
	071 JumpIfEqual {155}
	072 Move X1, X31
	073 Call NetworkObject.GetLocalAuthorityMask, X0
	074 And W31, W0, 7
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {29}
	079 Move X8, [X19+56]
	080 Compare X8, 0
	081 JumpIfEqual {155}
	082 Move X0, [X8+80]
	083 Compare X0, 0
	084 JumpIfEqual {155}
	085 Move X1, X31
	086 Call Simulation.HasAnyActiveConnections, X0
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {62}
	091 Move X8, [X19+56]
	092 Compare X8, 0
	093 JumpIfEqual {155}
	094 Move X0, [X8+80]
	095 Move W1, 20
	096 Move X2, X31
	097 Call SimulationMessage.Allocate, X0, X1
	098 Move X20, X0
	099 Move W0, 1
	100 Move X1, X31
	101 Call Assert.Check, X0
	102 Move X8, [X19+64]
	103 Compare X8, 0
	104 JumpIfEqual {155}
	105 Move X8, [X8+32]
	106 Compare X8, 0
	107 JumpIfEqual {129}
	108 Move W0, [X8]
	109 Move X0, [X20]
	110 Move X19, [X19+64]
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {115}
	114 Call 0x1B6F8F8
	115 Move X8, 0x22AA000
	116 Move X8, [X8+1264]
	117 Move X1, X19
	118 Move X20, [X31+32]
	119 Move X19, [X31+40]
	120 Move X30, [X31+24]
	121 Move X0, [X8]
	122 Move D9, [X31+8]
	123 Move D8, [X31+16]
	124 Move W2, 7
	125 Move X3, X31
	126 Move V10, [X31+48]
	127 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	128 Return 
	129 Move X0, X31
	130 Move W1, [X19+104]
	131 Move W2, 8
	132 Move X3, X31
	133 Call RpcHeader.Create, X0, X1, X2
	134 Move [X20+28], X0
	135 Move [X20+36], S10
	136 Move [X20+44], S9
	137 Move [X20+44], S8
	138 Compare X20, 0
	139 JumpIfEqual {155}
	140 Move W8, 160
	141 Move [X20+12], W8
	142 Move X0, [X19+56]
	143 Compare X0, 0
	144 JumpIfEqual {155}
	145 Move X1, X20
	146 Move X20, [X31+32]
	147 Move X19, [X31+40]
	148 Move X30, [X31+24]
	149 Move D9, [X31+8]
	150 Move D8, [X31+16]
	151 Move X2, X31
	152 Move V10, [X31+48]
	153 Call NetworkRunner.SendRpc, X0, X1
	154 Return 
	155 Call 0x1B6FA1C

Method: System.Void InterestEnter(Fusion.PlayerRef player)

Disassembly:
	0x01CA5BB0 BL 0x1B6E804
	0x01CA5BB4 BL 0x1B6EA0C
	0x01CA5BB8 MOV X19, X0
	0x01CA5BBC ADRP X0, 0x22A9000
	0x01CA5BC0 LDR X0, [X0 + 0x580]
	0x01CA5BC4 BL 0x1B6E804
	0x01CA5BC8 MOV X1, X0
	0x01CA5BCC MOV X0, X19
	0x01CA5BD0 MOV X2, X31
	0x01CA5BD4 BL 0x31E7550
	0x01CA5BD8 ADRP X0, 0x22A9000
	0x01CA5BDC LDR X0, [X0 + 0x590]
	0x01CA5BE0 BL 0x1B6E804
	0x01CA5BE4 MOV X1, X0
	0x01CA5BE8 MOV X0, X19
	0x01CA5BEC BL 0x1B6E8E8
	0x01CA5BF0 STP X30, X19, [X31 - 0x10]!
	0x01CA5BF4 LDR X8, [X0 + 0x50]
	0x01CA5BF8 CBZ X8, 0x1CA5C10
	0x01CA5BFC LDR W8, [X8 + 0x10]
	0x01CA5C00 CMP W8, 0x0
	0x01CA5C04 CSET W0, NE
	0x01CA5C08 LDP X30, X19, [X31], #0x10
	0x01CA5C0C RET
	0x01CA5C10 ADRP X0, 0x22A8000
	0x01CA5C14 LDR X0, [X0 + 0x490]
	0x01CA5C18 BL 0x1B6E804
	0x01CA5C1C BL 0x1B6EA0C
	0x01CA5C20 MOV X19, X0
	0x01CA5C24 ADRP X0, 0x22A9000
	0x01CA5C28 LDR X0, [X0 + 0x598]
	0x01CA5C2C BL 0x1B6E804
	0x01CA5C30 MOV X1, X0
	0x01CA5C34 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x257F000
	006 Move W8, [X21+1075]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x22AA000
	014 Move X0, [X0+1192]
	015 Call 0x1B6F7F0
	016 Move W8, 1
	017 Move [X21+1075], W8
	018 Move X0, [X19+56]
	019 Compare X0, 0
	020 JumpIfEqual {42}
	021 Move X21, 0x22AA000
	022 Move X21, [X21+1192]
	023 Move X1, X31
	024 Call NetworkRunner.get_LocalPlayer, X0
	025 Move X8, [X21]
	026 Move X21, X0
	027 Move W9, [X8+224]
	028 Compare W9, 0
	029 JumpIfNotEqual {32}
	030 Move X0, X8
	031 Call 0x1B6F8F8
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X19
	034 Call GrabbableItem.HandleGrabbedChanged, X0
	035 Move W8, 1
	036 Move [X19+388], W8
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return 
	042 Call 0x1B6FA1C

Method: System.Void InterestExit(Fusion.PlayerRef player)

Disassembly:
	0x01CA5C38 MOV X2, X31
	0x01CA5C3C BL 0x31E7550
	0x01CA5C40 ADRP X0, 0x22A9000
	0x01CA5C44 LDR X0, [X0 + 0x5A0]
	0x01CA5C48 BL 0x1B6E804
	0x01CA5C4C MOV X1, X0
	0x01CA5C50 MOV X0, X19
	0x01CA5C54 BL 0x1B6E8E8
	0x01CA5C58 STP X30, X19, [X31 - 0x10]!
	0x01CA5C5C LDR X8, [X0 + 0x50]
	0x01CA5C60 CBZ X8, 0x1CA5C74
	0x01CA5C64 AND W9, W1, 0x1
	0x01CA5C68 STR W9, [X8 + 0x10]
	0x01CA5C6C LDP X30, X19, [X31], #0x10
	0x01CA5C70 RET
	0x01CA5C74 ADRP X0, 0x22A8000
	0x01CA5C78 LDR X0, [X0 + 0x490]
	0x01CA5C7C BL 0x1B6E804
	0x01CA5C80 BL 0x1B6EA0C
	0x01CA5C84 MOV X19, X0
	0x01CA5C88 ADRP X0, 0x22A9000
	0x01CA5C8C LDR X0, [X0 + 0x598]
	0x01CA5C90 BL 0x1B6E804
	0x01CA5C94 MOV X1, X0
	0x01CA5C98 MOV X0, X19
	0x01CA5C9C MOV X2, X31
	0x01CA5CA0 BL 0x31E7550
	0x01CA5CA4 ADRP X0, 0x22A9000
	0x01CA5CA8 LDR X0, [X0 + 0x5A8]
	0x01CA5CAC BL 0x1B6E804
	0x01CA5CB0 MOV X1, X0
	0x01CA5CB4 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x257F000
	006 Move W8, [X21+1076]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x22AA000
	014 Move X0, [X0+1192]
	015 Call 0x1B6F7F0
	016 Move W8, 1
	017 Move [X21+1076], W8
	018 Move X0, [X19+56]
	019 Compare X0, 0
	020 JumpIfEqual {40}
	021 Move X21, 0x22AA000
	022 Move X21, [X21+1192]
	023 Move X1, X31
	024 Call NetworkRunner.get_LocalPlayer, X0
	025 Move X8, [X21]
	026 Move X21, X0
	027 Move W9, [X8+224]
	028 Compare W9, 0
	029 JumpIfNotEqual {32}
	030 Move X0, X8
	031 Call 0x1B6F8F8
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W8, 1
	034 Move [X19+388], W8
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return 
	040 Call 0x1B6FA1C

Method: System.Void .ctor()

Disassembly:
	0x01CA5CB8 BL 0x1B6E8E8
	0x01CA5CBC STP X30, X23, [X31 - 0x30]!
	0x01CA5CC0 STP X22, X21, [X31 + 0x10]
	0x01CA5CC4 STP X20, X19, [X31 + 0x20]
	0x01CA5CC8 ADRP X20, 0x257E000
	0x01CA5CCC LDRB W8, [X20 + 0x458]
	0x01CA5CD0 MOV X19, X0
	0x01CA5CD4 TBNZ X8, 0x0, 0x1CA5D10
	0x01CA5CD8 ADRP X0, 0x22A9000
	0x01CA5CDC LDR X0, [X0 + 0x170]
	0x01CA5CE0 BL 0x1B6E7F0
	0x01CA5CE4 ADRP X0, 0x22A9000
	0x01CA5CE8 LDR X0, [X0 + 0x5B0]
	0x01CA5CEC BL 0x1B6E7F0
	0x01CA5CF0 ADRP X0, 0x22A9000
	0x01CA5CF4 LDR X0, [X0 + 0x5B8]
	0x01CA5CF8 BL 0x1B6E7F0
	0x01CA5CFC ADRP X0, 0x22A9000
	0x01CA5D00 LDR X0, [X0 + 0x5C0]
	0x01CA5D04 BL 0x1B6E7F0
	0x01CA5D08 MOVZ W8, 0x1
	0x01CA5D0C STRB W8, [X20 + 0x458]
	0x01CA5D10 LDR X23, [X19 + 0x80]
	0x01CA5D14 CBZ X23, 0x1CA5E6C
	0x01CA5D18 ADRP X22, 0x22A9000
	0x01CA5D1C LDR X22, [X22 + 0x170]
	0x01CA5D20 ADRP X21, 0x22A9000
	0x01CA5D24 LDR X20, [X23 + 0x190]
	0x01CA5D28 LDR X0, [X22]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x257F000
	006 Move X20, 0x22AA000
	007 Move W8, [X21+1077]
	008 Move X20, [X20+1256]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22AA000
	015 Move X0, [X0+1256]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X21+1077], W8
	019 Move W8, 1
	020 Move W9, 257
	021 Move W10, 0x3F800000
	022 Move [X19+136], W8
	023 NotImplemented "Instruction STRH not yet implemented."
	024 NotImplemented "Instruction STURH not yet implemented."
	025 Move [X19+152], W10
	026 Move X0, [X20]
	027 Move W1, 10
	028 Call 0x1B6F868
	029 Move [X19+464], X0
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X1, X31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call NetworkBehaviour..ctor, X0
	037 Return 

Method: System.Void .cctor()

Disassembly:
	0x01CA5D2C LDR X21, [X21 + 0x5C0]
	0x01CA5D30 BL 0x1B6EA0C
	0x01CA5D34 LDR X2, [X21]
	0x01CA5D38 MOV X1, X19
	0x01CA5D3C MOV X3, X31
	0x01CA5D40 MOV X21, X0
	0x01CA5D44 BL 0x317DB24
	0x01CA5D48 MOV X0, X20
	0x01CA5D4C MOV X1, X21
	0x01CA5D50 MOV X2, X31
	0x01CA5D54 BL 0x322A750
	0x01CA5D58 LDR X1, [X22]
	0x01CA5D5C CBZ X0, 0x1CA5D80
	0x01CA5D60 LDR X8, [X0]
	0x01CA5D64 CMP X8, X1
	0x01CA5D68 B.NE 0x1CA5E54
	0x01CA5D6C STR X0, [X23 + 0x190]
	0x01CA5D70 LDR X8, [X0]
	0x01CA5D74 CMP X8, X1
	0x01CA5D78 B.EQ 0x1CA5D84
	0x01CA5D7C B 0x1CA5E54
	0x01CA5D80 STR X0, [X23 + 0x190]
	0x01CA5D84 LDR X23, [X19 + 0x80]
	0x01CA5D88 CBZ X23, 0x1CA5E6C
	0x01CA5D8C ADRP X21, 0x22A9000
	0x01CA5D90 LDR X20, [X23 + 0x1A0]
	0x01CA5D94 LDR X21, [X21 + 0x5B8]
	0x01CA5D98 MOV X0, X1
	0x01CA5D9C BL 0x1B6EA0C
	0x01CA5DA0 LDR X2, [X21]
	0x01CA5DA4 MOV X1, X19
	0x01CA5DA8 MOV X3, X31
	0x01CA5DAC MOV X21, X0
	0x01CA5DB0 BL 0x317DB24
	0x01CA5DB4 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x257F000
	007 Move X22, 0x22AA000
	008 Move X19, 0x22AA000
	009 Move X20, 0x22AA000
	010 Move W8, [X21+1078]
	011 Move X22, [X22+1272]
	012 Move X19, [X19+1280]
	013 Move X20, [X20+968]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x22AA000
	019 Move X0, [X0+968]
	020 Call 0x1B6F7F0
	021 Move X0, 0x22AA000
	022 Move X0, [X0+1280]
	023 Call 0x1B6F7F0
	024 Move X0, 0x22AA000
	025 Move X0, [X0+1272]
	026 Call 0x1B6F7F0
	027 Move W8, 1
	028 Move [X21+1078], W8
	029 Move X0, [X22]
	030 Call 0x1B6FA0C
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call HashSet`1<Object>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+48]
	042 Return 

Method: System.Void CopyBackingFieldsToState(System.Boolean param_0)

Disassembly:
	0x01CA5DB8 MOV X1, X21
	0x01CA5DBC MOV X2, X31
	0x01CA5DC0 BL 0x322A750
	0x01CA5DC4 LDR X1, [X22]
	0x01CA5DC8 CBZ X0, 0x1CA5DEC
	0x01CA5DCC LDR X8, [X0]
	0x01CA5DD0 CMP X8, X1
	0x01CA5DD4 B.NE 0x1CA5E54
	0x01CA5DD8 STR X0, [X23 + 0x1A0]
	0x01CA5DDC LDR X8, [X0]
	0x01CA5DE0 CMP X8, X1
	0x01CA5DE4 B.EQ 0x1CA5DF0
	0x01CA5DE8 B 0x1CA5E54
	0x01CA5DEC STR X0, [X23 + 0x1A0]
	0x01CA5DF0 LDR X23, [X19 + 0x80]
	0x01CA5DF4 CBZ X23, 0x1CA5E6C
	0x01CA5DF8 ADRP X21, 0x22A9000
	0x01CA5DFC LDR X20, [X23 + 0x1B8]
	0x01CA5E00 LDR X21, [X21 + 0x5B0]
	0x01CA5E04 MOV X0, X1
	0x01CA5E08 BL 0x1B6EA0C
	0x01CA5E0C LDR X2, [X21]
	0x01CA5E10 MOV X1, X19
	0x01CA5E14 MOV X3, X31
	0x01CA5E18 MOV X21, X0
	0x01CA5E1C BL 0x317DB24
	0x01CA5E20 MOV X0, X20
	0x01CA5E24 MOV X1, X21
	0x01CA5E28 MOV X2, X31
	0x01CA5E2C BL 0x322A750
	0x01CA5E30 CBZ X0, 0x1CA5E58
	0x01CA5E34 LDR X1, [X22]
	0x01CA5E38 LDR X8, [X0]
	0x01CA5E3C CMP X8, X1
	0x01CA5E40 B.NE 0x1CA5E54
	0x01CA5E44 STR X0, [X23 + 0x1B8]
	0x01CA5E48 LDR X8, [X0]
	0x01CA5E4C CMP X8, X1
	0x01CA5E50 B.EQ 0x1CA5E5C
	0x01CA5E54 BL 0x1B6ECDC
	0x01CA5E58 STR X0, [X23 + 0x1B8]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+80], X30
	003 Move [X31+96], X20
	004 Move [X31+104], X19
	005 NotImplemented "Instruction MRS not yet implemented."
	006 Move X8, [X20+40]
	007 Move X19, X0
	008 Move [X31+72], X8
	009 Move X1, [X0+200]
	010 Call GrabbableItem.set_attachedAnchorId, X0, X1
	011 Move X1, [X19+208]
	012 Move X0, X19
	013 Call GrabbableItem.set_backpackId, X0, X1
	014 NotImplemented "Instruction LDUR not yet implemented."
	015 NotImplemented "Instruction LDUR not yet implemented."
	016 Add X1, X31, 32
	017 Move X0, X19
	018 Move [X31+44], V0
	019 Move [X31+2], V1
	020 Call GrabbableItem.set_grabbedInfo, X0, X1
	021 Move W1, [X19+244]
	022 Move X0, X19
	023 Call GrabbableItem.set_isHidden, X0, X1
	024 Add X8, X19, 245
	025 Move V0, [X8+1]
	026 NotImplemented "Instruction LDUR not yet implemented."
	027 Add X1, X31, 0
	028 Move X0, X19
	029 Move [X31], V1
	030 Move [X31+8], V0
	031 Call GrabbableItem.set_spawnInfo, X0, X1
	032 Move W1, [X19+280]
	033 Move X0, X19
	034 Call GrabbableItem.set_respawnTimer, X0, X1
	035 Move X8, [X20+40]
	036 Move X9, [X31+72]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X20, [X31+96]
	039 Move X19, [X31+104]
	040 Move X30, [X31+80]
	041 Add X31, X31, 112
	042 Return 
	043 Call 0x3D1A880

Method: System.Void CopyStateToBackingFields()

Disassembly:
	0x01CA5E5C LDP X20, X19, [X31 + 0x20]
	0x01CA5E60 LDP X22, X21, [X31 + 0x10]
	0x01CA5E64 LDP X30, X23, [X31], #0x30
	0x01CA5E68 RET
	0x01CA5E6C BL 0x1B6EA1C
	0x01CA5E70 STP X30, X23, [X31 - 0x30]!
	0x01CA5E74 STP X22, X21, [X31 + 0x10]
	0x01CA5E78 STP X20, X19, [X31 + 0x20]
	0x01CA5E7C ADRP X20, 0x257E000
	0x01CA5E80 ADRP X21, 0x22A9000
	0x01CA5E84 LDRB W8, [X20 + 0x459]
	0x01CA5E88 LDR X21, [X21 + 0x1C0]
	0x01CA5E8C MOV X19, X0
	0x01CA5E90 TBNZ X8, 0x0, 0x1CA5ED8
	0x01CA5E94 ADRP X0, 0x22A9000
	0x01CA5E98 LDR X0, [X0 + 0x170]
	0x01CA5E9C BL 0x1B6E7F0
	0x01CA5EA0 ADRP X0, 0x22A9000
	0x01CA5EA4 LDR X0, [X0 + 0x5B0]
	0x01CA5EA8 BL 0x1B6E7F0
	0x01CA5EAC ADRP X0, 0x22A9000
	0x01CA5EB0 LDR X0, [X0 + 0x5B8]
	0x01CA5EB4 BL 0x1B6E7F0
	0x01CA5EB8 ADRP X0, 0x22A9000
	0x01CA5EBC LDR X0, [X0 + 0x5C0]
	0x01CA5EC0 BL 0x1B6E7F0
	0x01CA5EC4 ADRP X0, 0x22A9000
	0x01CA5EC8 LDR X0, [X0 + 0x1C0]
	0x01CA5ECC BL 0x1B6E7F0
	0x01CA5ED0 MOVZ W8, 0x1
	0x01CA5ED4 STRB W8, [X20 + 0x459]
	0x01CA5ED8 LDR X0, [X21]
	0x01CA5EDC LDR W8, [X0 + 0xE0]
	0x01CA5EE0 CBNZ W8, 0x1CA5EE8
	0x01CA5EE4 BL 0x1B6E8F8
	0x01CA5EE8 CBZ X19, 0x1CA6054
	0x01CA5EEC LDR W8, [X19 + 0x30]
	0x01CA5EF0 LDR X23, [X19 + 0x80]
	0x01CA5EF4 ORR W8, W8, 0x8
	0x01CA5EF8 STR W8, [X19 + 0x30]
	0x01CA5EFC CBZ X23, 0x1CA6054
	0x01CA5F00 ADRP X22, 0x22A9000
	0x01CA5F04 LDR X22, [X22 + 0x170]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+80], X30
	003 Move [X31+96], X20
	004 Move [X31+104], X19
	005 NotImplemented "Instruction MRS not yet implemented."
	006 Move X8, [X20+40]
	007 Move X19, X0
	008 Move [X31+72], X8
	009 Call GrabbableItem.get_attachedAnchorId, X0
	010 Move [X19+200], X0
	011 Move X0, X19
	012 Call GrabbableItem.get_backpackId, X0
	013 Move [X19+208], X0
	014 Add X8, X31, 40
	015 Move X0, X19
	016 Call GrabbableItem.get_grabbedInfo, X0
	017 NotImplemented "Instruction LDUR not yet implemented."
	018 NotImplemented "Instruction LDUR not yet implemented."
	019 Move X0, X19
	020 Move [X19+228], V0
	021 Move [X19+216], V1
	022 Call GrabbableItem.get_isHidden, X0
	023 And W8, W0, 1
	024 Move [X19+244], W8
	025 Add X8, X31, 8
	026 Move X0, X19
	027 Call GrabbableItem.get_spawnInfo, X0
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 Add X8, X19, 245
	031 Move X0, X19
	032 Move [X8+1], V0
	033 Move [X19+245], V1
	034 Call GrabbableItem.get_respawnTimer, X0
	035 Move [X19+280], W0
	036 Move X8, [X20+40]
	037 Move X9, [X31+72]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X20, [X31+96]
	040 Move X19, [X31+104]
	041 Move X30, [X31+80]
	042 Add X31, X31, 112
	043 Return 
	044 Call 0x3D1A880

Method: System.Void RPC_TryGrab@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01CA5F08 ADRP X21, 0x22A9000
	0x01CA5F0C LDR X20, [X23 + 0x190]
	0x01CA5F10 LDR X0, [X22]
	0x01CA5F14 LDR X21, [X21 + 0x5C0]
	0x01CA5F18 BL 0x1B6EA0C
	0x01CA5F1C LDR X2, [X21]
	0x01CA5F20 MOV X1, X19
	0x01CA5F24 MOV X3, X31
	0x01CA5F28 MOV X21, X0
	0x01CA5F2C BL 0x317DB24
	0x01CA5F30 MOV X0, X20
	0x01CA5F34 MOV X1, X21
	0x01CA5F38 MOV X2, X31
	0x01CA5F3C BL 0x322A948
	0x01CA5F40 LDR X1, [X22]
	0x01CA5F44 CBZ X0, 0x1CA5F68
	0x01CA5F48 LDR X8, [X0]
	0x01CA5F4C CMP X8, X1
	0x01CA5F50 B.NE 0x1CA603C
	0x01CA5F54 STR X0, [X23 + 0x190]
	0x01CA5F58 LDR X8, [X0]
	0x01CA5F5C CMP X8, X1
	0x01CA5F60 B.EQ 0x1CA5F6C
	0x01CA5F64 B 0x1CA603C
	0x01CA5F68 STR X0, [X23 + 0x190]
	0x01CA5F6C LDR X23, [X19 + 0x80]
	0x01CA5F70 CBZ X23, 0x1CA6054
	0x01CA5F74 ADRP X21, 0x22A9000
	0x01CA5F78 LDR X20, [X23 + 0x1A0]
	0x01CA5F7C LDR X21, [X21 + 0x5B8]
	0x01CA5F80 MOV X0, X1
	0x01CA5F84 BL 0x1B6EA0C
	0x01CA5F88 LDR X2, [X21]
	0x01CA5F8C MOV X1, X19
	0x01CA5F90 MOV X3, X31
	0x01CA5F94 MOV X21, X0
	0x01CA5F98 BL 0x317DB24
	0x01CA5F9C MOV X0, X20
	0x01CA5FA0 MOV X1, X21
	0x01CA5FA4 MOV X2, X31
	0x01CA5FA8 BL 0x322A948
	0x01CA5FAC LDR X1, [X22]
	0x01CA5FB0 CBZ X0, 0x1CA5FD4
	0x01CA5FB4 LDR X8, [X0]
	0x01CA5FB8 CMP X8, X1
	0x01CA5FBC B.NE 0x1CA603C
	0x01CA5FC0 STR X0, [X23 + 0x1A0]
	0x01CA5FC4 LDR X8, [X0]
	0x01CA5FC8 CMP X8, X1
	0x01CA5FCC B.EQ 0x1CA5FD8
	0x01CA5FD0 B 0x1CA603C
	0x01CA5FD4 STR X0, [X23 + 0x1A0]
	0x01CA5FD8 LDR X23, [X19 + 0x80]
	0x01CA5FDC CBZ X23, 0x1CA6054
	0x01CA5FE0 ADRP X21, 0x22A9000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x257F000
	009 Move W8, [X20+1079]
	010 Move X21, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x22AA000
	017 Move X0, [X0+968]
	018 Call 0x1B6F7F0
	019 Move W8, 1
	020 Move [X20+1079], W8
	021 Move W0, 1
	022 Move X1, X31
	023 Move W23, 1
	024 Call Assert.Check, X0
	025 Compare X19, 0
	026 JumpIfEqual {64}
	027 Move X0, [X19+56]
	028 Move X24, 0x22AA000
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 Move W22, [X21+44]
	031 Move X24, [X24+968]
	032 Move X1, X21
	033 Move W2, W31
	034 Move X3, X31
	035 Call RpcInfo.FromMessage, X0, X1, X2
	036 Move [X19+88], W23
	037 Move X9, [X19]
	038 Move X8, [X24]
	039 Move W11, [X9+304]
	040 Move W10, [X8+304]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X9, [X9+200]
	043 Add X9, X9, X10
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X3, X0
	047 Move X4, X1
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X0, X19
	050 Move X1, X20
	051 Move X20, [X31+48]
	052 Move X19, [X31+56]
	053 Move X22, [X31+32]
	054 Move X21, [X31+40]
	055 Move X24, [X31+16]
	056 Move X23, [X31+24]
	057 NotImplemented "Instruction CSET not yet implemented."
	058 Move X30, [X31+64]
	059 Call GrabbableItem.RPC_TryGrab, X0, X1, X2, X3
	060 Return 
	061 Move X0, X19
	062 Move X1, X8
	063 Call 0x1B6FCDC
	064 Call 0x1B6FA1C

Method: System.Void RPC_Release@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01CA5FE4 LDR X20, [X23 + 0x1B8]
	0x01CA5FE8 LDR X21, [X21 + 0x5B0]
	0x01CA5FEC MOV X0, X1
	0x01CA5FF0 BL 0x1B6EA0C
	0x01CA5FF4 LDR X2, [X21]
	0x01CA5FF8 MOV X1, X19
	0x01CA5FFC MOV X3, X31
	0x01CA6000 MOV X21, X0
	0x01CA6004 BL 0x317DB24
	0x01CA6008 MOV X0, X20
	0x01CA600C MOV X1, X21
	0x01CA6010 MOV X2, X31
	0x01CA6014 BL 0x322A948
	0x01CA6018 CBZ X0, 0x1CA6040
	0x01CA601C LDR X1, [X22]
	0x01CA6020 LDR X8, [X0]
	0x01CA6024 CMP X8, X1
	0x01CA6028 B.NE 0x1CA603C
	0x01CA602C STR X0, [X23 + 0x1B8]
	0x01CA6030 LDR X8, [X0]
	0x01CA6034 CMP X8, X1
	0x01CA6038 B.EQ 0x1CA6044
	0x01CA603C BL 0x1B6ECDC
	0x01CA6040 STR X0, [X23 + 0x1B8]
	0x01CA6044 LDP X20, X19, [X31 + 0x20]
	0x01CA6048 LDP X22, X21, [X31 + 0x10]
	0x01CA604C LDP X30, X23, [X31], #0x30
	0x01CA6050 RET
	0x01CA6054 BL 0x1B6EA1C
	0x01CA6058 STP X30, X19, [X31 - 0x10]!
	0x01CA605C MOV X1, X31
	0x01CA6060 MOV X19, X0
	0x01CA6064 BL 0x1D65284
	0x01CA6068 MOV X0, X19
	0x01CA606C BL 0x1CA607C
	0x01CA6070 MOV X0, X19
	0x01CA6074 LDP X30, X19, [X31], #0x10
	0x01CA6078 B 0x1CA60D8
	0x01CA607C STR X30, [X31 - 0x20]!
	0x01CA6080 STP X20, X19, [X31 + 0x10]
	0x01CA6084 LDR X20, [X0 + 0x90]
	0x01CA6088 MOV X19, X0
	0x01CA608C BL 0x1CA5BF0
	0x01CA6090 CBZ X20, 0x1CA60D4
	0x01CA6094 ORN W8, W31, W0, 0x0
	0x01CA6098 AND W1, W8, 0x1
	0x01CA609C MOV X0, X20
	0x01CA60A0 MOV X2, X31
	0x01CA60A4 BL 0x3A9D9A8
	0x01CA60A8 LDR X20, [X19 + 0x88]
	0x01CA60AC MOV X0, X19
	0x01CA60B0 BL 0x1CA5BF0
	0x01CA60B4 CBZ X20, 0x1CA60D4
	0x01CA60B8 ORN W8, W31, W0, 0x0
	0x01CA60BC MOV X0, X20
	0x01CA60C0 LDP X20, X19, [X31 + 0x10]
	0x01CA60C4 AND W1, W8, 0x1
	0x01CA60C8 MOV X2, X31
	0x01CA60CC LDR X30, [X31], #0x20

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x257F000
	007 Move W8, [X21+1080]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22A9000
	015 Move X0, [X0+968]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X21+1080], W8
	019 Move W0, 1
	020 Move X1, X31
	021 Move W21, 1
	022 Call Assert.Check, X0
	023 Compare X19, 0
	024 JumpIfEqual {74}
	025 Move X8, 0x22A9000
	026 Move X8, [X8+968]
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 Move S0, [X20+44]
	029 Move S1, [X20+48]
	030 Move S2, [X20+52]
	031 Move S3, [X20+56]
	032 Move S4, [X20+60]
	033 Move S5, [X20+64]
	034 Move S6, [X20+68]
	035 Move S7, [X20+72]
	036 Move S16, [X20+76]
	037 Move S17, [X20+80]
	038 Move S18, [X20+84]
	039 Move S19, [X20+88]
	040 Move V20, [X20+92]
	041 Move W9, [X20+96]
	042 Move W10, [X20+100]
	043 Move [X19+88], W21
	044 Move X11, [X19]
	045 Move X8, [X8]
	046 Move W13, [X11+304]
	047 Move W12, [X8+304]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X11, [X11+200]
	050 Add X11, X11, X12
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CSET not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CSET not yet implemented."
	057 Move X0, X19
	058 Move [X31+20], S19
	059 Move [X31+28], S20
	060 Move [X31+16], S18
	061 Move [X31+4], S16
	062 Move [X31+12], S17
	063 Move [X31], S7
	064 Call GrabbableItem.RPC_Release, X0, X1, X2, X3, X4, X5, X6, X7
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X30, [X31+32]
	068 Move X21, [X31+40]
	069 Add X31, X31, 64
	070 Return 
	071 Move X0, X19
	072 Move X1, X8
	073 Call 0x1B6FCDC
	074 Call 0x1B6FA1C

Method: System.Void RPC_SetGrabbedOffsets@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01CA60D0 B 0x3A9D9A8
	0x01CA60D4 BL 0x1B6EA1C
	0x01CA60D8 STP X30, X19, [X31 - 0x10]!
	0x01CA60DC MOV X19, X0
	0x01CA60E0 BL 0x1CA5B24
	0x01CA60E4 LDR X1, [X19 + 0x88]
	0x01CA60E8 TBZ X0, 0x0, 0x1CA60FC
	0x01CA60EC BL 0x1CA6A70
	0x01CA60F0 LDR X1, [X19 + 0x90]
	0x01CA60F4 LDP X30, X19, [X31], #0x10
	0x01CA60F8 B 0x1CA6A70
	0x01CA60FC MOV X0, X19
	0x01CA6100 BL 0x1CA6BB4
	0x01CA6104 LDR X1, [X19 + 0x90]
	0x01CA6108 MOV X0, X19
	0x01CA610C LDP X30, X19, [X31], #0x10
	0x01CA6110 B 0x1CA6BB4
	0x01CA6114 STP X30, X23, [X31 - 0x30]!
	0x01CA6118 STP X22, X21, [X31 + 0x10]
	0x01CA611C STP X20, X19, [X31 + 0x20]
	0x01CA6120 ADRP X23, 0x257D000
	0x01CA6124 ADRP X22, 0x22A7000
	0x01CA6128 LDRB W8, [X23 + 0x45A]
	0x01CA612C LDR X22, [X22 + 0x478]
	0x01CA6130 MOV W20, W2
	0x01CA6134 MOV X19, X1
	0x01CA6138 MOV X21, X0
	0x01CA613C TBNZ X8, 0x0, 0x1CA6154
	0x01CA6140 ADRP X0, 0x22A7000
	0x01CA6144 LDR X0, [X0 + 0x478]
	0x01CA6148 BL 0x1B6E7F0
	0x01CA614C MOVZ W8, 0x1
	0x01CA6150 STRB W8, [X23 + 0x45A]
	0x01CA6154 LDR X0, [X22]
	0x01CA6158 LDR X22, [X21 + 0x88]
	0x01CA615C LDR W8, [X0 + 0xE0]
	0x01CA6160 CBNZ W8, 0x1CA6168
	0x01CA6164 BL 0x1B6E8F8
	0x01CA6168 MOV X0, X22
	0x01CA616C MOV X1, X31
	0x01CA6170 BL 0x3AA15F4
	0x01CA6174 LDR X0, [X21 + 0x90]
	0x01CA6178 MOV X1, X31
	0x01CA617C BL 0x3AA15F4
	0x01CA6180 AND W2, W20, 0x1
	0x01CA6184 MOV X0, X21
	0x01CA6188 MOV X1, X19
	0x01CA618C LDP X20, X19, [X31 + 0x20]
	0x01CA6190 LDP X22, X21, [X31 + 0x10]
	0x01CA6194 MOV X3, X31
	0x01CA6198 LDP X30, X23, [X31], #0x30
	0x01CA619C B 0x1D65288
	0x01CA61A0 SUB X31, X31, 0x30
	0x01CA61A4 STR X30, [X31 + 0x10]
	0x01CA61A8 STP X20, X19, [X31 + 0x20]
	0x01CA61AC ADRP X20, 0x257D000
	0x01CA61B0 LDRB W8, [X20 + 0x45B]
	0x01CA61B4 MOV X19, X0
	0x01CA61B8 TBNZ X8, 0x0, 0x1CA61DC
	0x01CA61BC ADRP X0, 0x22A8000
	0x01CA61C0 LDR X0, [X0 + 0x5C8]
	0x01CA61C4 BL 0x1B6E7F0
	0x01CA61C8 ADRP X0, 0x22A8000
	0x01CA61CC LDR X0, [X0 + 0x5D0]
	0x01CA61D0 BL 0x1B6E7F0
	0x01CA61D4 MOVZ W8, 0x1
	0x01CA61D8 STRB W8, [X20 + 0x45B]
	0x01CA61DC MOV X0, X19
	0x01CA61E0 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+112], X30
	003 Move [X31+128], X22
	004 Move [X31+136], X21
	005 Move [X31+144], X20
	006 Move [X31+152], X19
	007 NotImplemented "Instruction MRS not yet implemented."
	008 Move X8, [X21+40]
	009 Move X22, 0x257E000
	010 Move X20, X1
	011 Move X19, X0
	012 Move [X31+104], X8
	013 Move W8, [X22+1081]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x22A9000
	019 Move X0, [X0+968]
	020 Call 0x1B6F7F0
	021 Move W8, 1
	022 Move [X22+1081], W8
	023 Move W0, 1
	024 Move X1, X31
	025 Move [X31+64], X31
	026 Move [X31+72], X31
	027 Move [X31+88], W31
	028 Move [X31+80], X31
	029 Move W22, 1
	030 Call Assert.Check, X0
	031 Move W8, [X20+60]
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 Move [X31+88], W8
	035 Move [X31+80], X9
	036 Move [X31+4], V0
	037 Compare X19, 0
	038 JumpIfEqual {74}
	039 Move [X19+88], W22
	040 Move V0, [X31+4]
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 Move X9, 0x22A9000
	043 Move X9, [X9+968]
	044 Move [X31+2], V0
	045 Move [X31+44], V1
	046 Move X8, [X19]
	047 Move X1, [X9]
	048 Move W10, [X8+304]
	049 Move W9, [X1+304]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X8, [X8+200]
	052 Add X8, X8, X9
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move V0, [X31+2]
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 Add X1, X31, 0
	058 Move X0, X19
	059 Move [X31], V0
	060 Move [X31+12], V1
	061 Call GrabbableItem.RPC_SetGrabbedOffsets, X0, X1
	062 Move X8, [X21+40]
	063 Move X9, [X31+104]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X20, [X31+144]
	066 Move X19, [X31+152]
	067 Move X22, [X31+128]
	068 Move X21, [X31+136]
	069 Move X30, [X31+112]
	070 Add X31, X31, 160
	071 Return 
	072 Move X0, X19
	073 Call 0x1B6FCDC
	074 Call 0x1B6FA1C
	075 Call 0x3D1A880

Method: System.Void RPC_AddToBag@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01CA61E4 STR X31, [X31 + 0x8]
	0x01CA61E8 STR W31, [X31]
	0x01CA61EC BL 0x1D65000
	0x01CA61F0 LDR X0, [X19 + 0x40]
	0x01CA61F4 CBZ X0, 0x1CA6330
	0x01CA61F8 LDRB W8, [X0 + 0x60]
	0x01CA61FC TBNZ X8, 0x1, 0x1CA6330
	0x01CA6200 MOV X1, X31
	0x01CA6204 BL 0x1D9E780
	0x01CA6208 TBZ X0, 0x0, 0x1CA6330
	0x01CA620C MOV X0, X19
	0x01CA6210 BL 0x1CA5B24
	0x01CA6214 TBZ X0, 0x0, 0x1CA6330
	0x01CA6218 LDR X0, [X19 + 0x80]
	0x01CA621C CBZ X0, 0x1CA6340
	0x01CA6220 MOV X1, X31
	0x01CA6224 BL 0x1C9DF64
	0x01CA6228 STR X0, [X31 + 0x18]
	0x01CA622C ADD X0, X31, 0x18
	0x01CA6230 MOV X1, X31
	0x01CA6234 BL 0x1D680F0
	0x01CA6238 MOV W20, W0
	0x01CA623C MOV X0, X19
	0x01CA6240 BL 0x1CA59A4
	0x01CA6244 TBZ X20, 0x0, 0x1CA6298
	0x01CA6248 CBNZ W0, 0x1CA62FC
	0x01CA624C MOV X0, X19
	0x01CA6250 BL 0x1CA58E4
	0x01CA6254 STR W0, [X31]
	0x01CA6258 LDR X1, [X19 + 0x38]
	0x01CA625C ADD X0, X31, 0x0
	0x01CA6260 MOV X2, X31
	0x01CA6264 BL 0x1D9CCC4
	0x01CA6268 ANDS W31, W0, 0xFF
	0x01CA626C STR X0, [X31 + 0x8]
	0x01CA6270 B.EQ 0x1CA62FC
	0x01CA6274 ADRP X8, 0x22A8000
	0x01CA6278 LDR X8, [X8 + 0x5D0]
	0x01CA627C ADD X0, X31, 0x8
	0x01CA6280 LDR X1, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x257E000
	006 Move W8, [X21+1082]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x22A9000
	014 Move X0, [X0+968]
	015 Call 0x1B6F7F0
	016 Move W8, 1
	017 Move [X21+1082], W8
	018 Move W0, 1
	019 Move X1, X31
	020 Move W21, 1
	021 Call Assert.Check, X0
	022 Compare X19, 0
	023 JumpIfEqual {47}
	024 Move X8, 0x22A9000
	025 Move X8, [X8+968]
	026 NotImplemented "Instruction LDUR not yet implemented."
	027 Move [X19+88], W21
	028 Move X9, [X19]
	029 Move X8, [X8]
	030 Move W11, [X9+304]
	031 Move W10, [X8+304]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X9, [X9+200]
	034 Add X9, X9, X10
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X0, X19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Call GrabbableItem.RPC_AddToBag, X0, X1
	043 Return 
	044 Move X0, X19
	045 Move X1, X8
	046 Call 0x1B6FCDC
	047 Call 0x1B6FA1C

Method: System.Void RPC_RemoveFromBag@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01CA6284 BL 0x22D4824
	0x01CA6288 MOV W1, W0
	0x01CA628C MOV X0, X19
	0x01CA6290 BL 0x1CA5A04
	0x01CA6294 B 0x1CA62FC
	0x01CA6298 CMP W0, 0x1
	0x01CA629C B.LT 0x1CA62D4
	0x01CA62A0 LDR X20, [X19 + 0x38]
	0x01CA62A4 MOV X0, X19
	0x01CA62A8 BL 0x1CA59A4
	0x01CA62AC MOV W1, W0
	0x01CA62B0 MOV X0, X20
	0x01CA62B4 MOV X2, X31
	0x01CA62B8 BL 0x1D9CFC4
	0x01CA62BC AND X1, X0, 0x0
	0x01CA62C0 MOV X0, X19
	0x01CA62C4 BL 0x1CA5944
	0x01CA62C8 MOV X0, X19
	0x01CA62CC MOV W1, W31
	0x01CA62D0 BL 0x1CA5A04
	0x01CA62D4 MOV X0, X19
	0x01CA62D8 BL 0x1CA58E4
	0x01CA62DC STR W0, [X31]
	0x01CA62E0 LDR X1, [X19 + 0x38]
	0x01CA62E4 ADD X0, X31, 0x0
	0x01CA62E8 MOV X2, X31
	0x01CA62EC BL 0x1D9CBCC
	0x01CA62F0 TBZ X0, 0x0, 0x1CA62FC
	0x01CA62F4 MOV X0, X19
	0x01CA62F8 BL 0x1CA6344
	0x01CA62FC MOV X0, X19
	0x01CA6300 BL 0x1CA5A64
	0x01CA6304 STR W0, [X31]
	0x01CA6308 LDR X1, [X19 + 0x38]
	0x01CA630C ADD X0, X31, 0x0
	0x01CA6310 MOV X2, X31
	0x01CA6314 BL 0x1D9CBCC
	0x01CA6318 TBZ X0, 0x0, 0x1CA6330
	0x01CA631C MOV X0, X31
	0x01CA6320 BL 0x1D9CB50

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x257E000
	006 Move W8, [X21+1083]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x22A9000
	014 Move X0, [X0+968]
	015 Call 0x1B6F7F0
	016 Move W8, 1
	017 Move [X21+1083], W8
	018 Move W0, 1
	019 Move X1, X31
	020 Move W21, 1
	021 Call Assert.Check, X0
	022 Compare X19, 0
	023 JumpIfEqual {48}
	024 Move X9, 0x22A9000
	025 Move X9, [X9+968]
	026 Move S0, [X20+36]
	027 Move S1, [X20+40]
	028 Move V2, [X20+44]
	029 Move [X19+88], W21
	030 Move X8, [X19]
	031 Move X1, [X9]
	032 Move W10, [X8+304]
	033 Move W9, [X1+304]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X8, [X8+200]
	036 Add X8, X8, X9
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X0, X19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Call GrabbableItem.RPC_RemoveFromBag, X0, X1
	045 Return 
	046 Move X0, X19
	047 Call 0x1B6FCDC
	048 Call 0x1B6FA1C

Method: System.Void RPC_Respawn@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01CA6324 AND X1, X0, 0x0
	0x01CA6328 MOV X0, X19
	0x01CA632C BL 0x1CA5AC4
	0x01CA6330 LDP X20, X19, [X31 + 0x20]
	0x01CA6334 LDR X30, [X31 + 0x10]
	0x01CA6338 ADD X31, X31, 0x30
	0x01CA633C RET
	0x01CA6340 BL 0x1B6EA1C
	0x01CA6344 SUB X31, X31, 0x90
	0x01CA6348 STR X30, [X31 + 0x60]
	0x01CA634C STP X22, X21, [X31 + 0x70]
	0x01CA6350 STP X20, X19, [X31 + 0x80]
	0x01CA6354 ADRP X20, 0x257D000
	0x01CA6358 LDRB W8, [X20 + 0x45D]
	0x01CA635C MOV X19, X0
	0x01CA6360 TBNZ X8, 0x0, 0x1CA639C
	0x01CA6364 ADRP X0, 0x22A8000
	0x01CA6368 LDR X0, [X0 + 0x5D8]
	0x01CA636C BL 0x1B6E7F0
	0x01CA6370 ADRP X0, 0x22A8000
	0x01CA6374 LDR X0, [X0 + 0x5E0]
	0x01CA6378 BL 0x1B6E7F0
	0x01CA637C ADRP X0, 0x22A8000
	0x01CA6380 LDR X0, [X0 + 0x248]
	0x01CA6384 BL 0x1B6E7F0
	0x01CA6388 ADRP X0, 0x22A8000
	0x01CA638C LDR X0, [X0 + 0x250]
	0x01CA6390 BL 0x1B6E7F0
	0x01CA6394 MOVZ W8, 0x1
	0x01CA6398 STRB W8, [X20 + 0x45D]
	0x01CA639C MOV X0, X19
	0x01CA63A0 STR X31, [X31 + 0x68]
	0x01CA63A4 STR X31, [X31 + 0x38]
	0x01CA63A8 BL 0x1CA5BF0
	0x01CA63AC TBNZ X0, 0x0, 0x1CA6530
	0x01CA63B0 MOVZ W1, 0x1
	0x01CA63B4 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x257E000
	005 Move W8, [X20+1084]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x22A9000
	012 Move X0, [X0+968]
	013 Call 0x1B6F7F0
	014 Move W8, 1
	015 Move [X20+1084], W8
	016 Move W0, 1
	017 Move X1, X31
	018 Move W20, 1
	019 Call Assert.Check, X0
	020 Compare X19, 0
	021 JumpIfEqual {42}
	022 Move X9, 0x22A9000
	023 Move X9, [X9+968]
	024 Move [X19+88], W20
	025 Move X8, [X19]
	026 Move X1, [X9]
	027 Move W10, [X8+304]
	028 Move W9, [X1+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, [X8+200]
	031 Add X8, X8, X9
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Call GrabbableItem.RPC_Respawn, X0
	039 Return 
	040 Move X0, X19
	041 Call 0x1B6FCDC
	042 Call 0x1B6FA1C

Method: System.Void RPC_HandleItemSold@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01CA63B8 BL 0x1CA5C58
	0x01CA63BC LDR X0, [X19 + 0x80]
	0x01CA63C0 CBZ X0, 0x1CA6544
	0x01CA63C4 MOVZ W1, 0x1
	0x01CA63C8 MOV X2, X31
	0x01CA63CC BL 0x1C9A8B4
	0x01CA63D0 MOV X0, X31
	0x01CA63D4 BL 0x1D9CB50
	0x01CA63D8 AND X1, X0, 0x0
	0x01CA63DC MOV X0, X19
	0x01CA63E0 BL 0x1CA5944
	0x01CA63E4 MOV X0, X19
	0x01CA63E8 MOV W1, W31
	0x01CA63EC BL 0x1CA5A04
	0x01CA63F0 LDR X20, [X19 + 0x38]
	0x01CA63F4 LDR X21, [X19 + 0xA0]
	0x01CA63F8 MOV X0, X19
	0x01CA63FC MOV X1, X31
	0x01CA6400 BL 0x3A9B084
	0x01CA6404 CBZ X0, 0x1CA6544
	0x01CA6408 MOV X1, X31
	0x01CA640C BL 0x3AA7658
	0x01CA6410 ADRP X8, 0x22A8000
	0x01CA6414 LDR X8, [X8 + 0x248]
	0x01CA6418 ADD X0, X31, 0x28
	0x01CA641C STP X31, X31, [X31 + 0x28]
	0x01CA6420 LDR X1, [X8]
	0x01CA6424 BL 0x22DC630
	0x01CA6428 ADRP X22, 0x257D000
	0x01CA642C LDRB W8, [X22 + 0x454]
	0x01CA6430 CBNZ W8, 0x1CA6448
	0x01CA6434 ADRP X0, 0x22A8000
	0x01CA6438 LDR X0, [X0 + 0x1F8]
	0x01CA643C BL 0x1B6E7F0
	0x01CA6440 MOVZ W8, 0x1
	0x01CA6444 STRB W8, [X22 + 0x454]
	0x01CA6448 ADRP X8, 0x22A8000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x257E000
	005 Move W8, [X20+1085]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x22A9000
	012 Move X0, [X0+968]
	013 Call 0x1B6F7F0
	014 Move W8, 1
	015 Move [X20+1085], W8
	016 Move W0, 1
	017 Move X1, X31
	018 Move W20, 1
	019 Call Assert.Check, X0
	020 Compare X19, 0
	021 JumpIfEqual {42}
	022 Move X9, 0x22A9000
	023 Move X9, [X9+968]
	024 Move [X19+88], W20
	025 Move X8, [X19]
	026 Move X1, [X9]
	027 Move W10, [X8+304]
	028 Move W9, [X1+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, [X8+200]
	031 Add X8, X8, X9
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Call GrabbableItem.RPC_HandleItemSold, X0
	039 Return 
	040 Move X0, X19
	041 Call 0x1B6FCDC
	042 Call 0x1B6FA1C

Method: System.Void RPC_Teleport@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01CA644C LDR X8, [X8 + 0x1F8]
	0x01CA6450 ADRP X9, 0x22A8000
	0x01CA6454 ADD X0, X31, 0x10
	0x01CA6458 LDR X8, [X8]
	0x01CA645C LDR X8, [X8 + 0xB8]
	0x01CA6460 LDR X9, [X9 + 0x250]
	0x01CA6464 LDP S0, S1, [X8]
	0x01CA6468 LDP S2, S3, [X8 + 0x8]
	0x01CA646C LDR X1, [X9]
	0x01CA6470 STP X31, X31, [X31 + 0x10]
	0x01CA6474 STR W31, [X31 + 0x20]
	0x01CA6478 BL 0x22D82D0
	0x01CA647C CBZ X20, 0x1CA6544
	0x01CA6480 ADRP X8, 0x22A8000
	0x01CA6484 LDP X2, X3, [X31 + 0x28]
	0x01CA6488 LDR X8, [X8 + 0x5D8]
	0x01CA648C LDR V0, [X31 + 0x1]
	0x01CA6490 LDR W9, [X31 + 0x20]
	0x01CA6494 ADD X4, X31, 0x40
	0x01CA6498 LDR X8, [X8]
	0x01CA649C MOV X0, X20
	0x01CA64A0 MOV X1, X21
	0x01CA64A4 MOV X5, X31
	0x01CA64A8 MOV X6, X31
	0x01CA64AC MOV W7, W31
	0x01CA64B0 STR V0, [X31 + 0x4]
	0x01CA64B4 STR W9, [X31 + 0x50]
	0x01CA64B8 STR X8, [X31]
	0x01CA64BC BL 0x2112E18
	0x01CA64C0 MOV X0, X19
	0x01CA64C4 BL 0x1CA607C
	0x01CA64C8 LDR X0, [X19 + 0x80]
	0x01CA64CC CBZ X0, 0x1CA6544
	0x01CA64D0 MOV X1, X31
	0x01CA64D4 BL 0x1C9F71C
	0x01CA64D8 LDR X0, [X19 + 0x80]
	0x01CA64DC CBZ X0, 0x1CA6544
	0x01CA64E0 MOV X1, X31
	0x01CA64E4 BL 0x1C9DF64
	0x01CA64E8 STR X0, [X31 + 0x68]
	0x01CA64EC ADD X0, X31, 0x68
	0x01CA64F0 MOV X1, X31
	0x01CA64F4 BL 0x1D680F0
	0x01CA64F8 TBZ X0, 0x0, 0x1CA6530
	0x01CA64FC LDR X0, [X19 + 0x80]
	0x01CA6500 CBZ X0, 0x1CA6544
	0x01CA6504 LDR X19, [X19 + 0x38]
	0x01CA6508 MOV X1, X31
	0x01CA650C BL 0x1C9DF64
	0x01CA6510 CBZ X19, 0x1CA6544
	0x01CA6514 ADRP X8, 0x22A8000
	0x01CA6518 LDR X8, [X8 + 0x5E0]
	0x01CA651C MOV X1, X0
	0x01CA6520 ADD X2, X31, 0x38
	0x01CA6524 MOV X0, X19
	0x01CA6528 LDR X3, [X8]
	0x01CA652C BL 0x2113594
	0x01CA6530 LDP X20, X19, [X31 + 0x80]
	0x01CA6534 LDP X22, X21, [X31 + 0x70]
	0x01CA6538 LDR X30, [X31 + 0x60]
	0x01CA653C ADD X31, X31, 0x90
	0x01CA6540 RET
	0x01CA6544 BL 0x1B6EA1C
	0x01CA6548 STR X30, [X31 - 0x20]!
	0x01CA654C STP X20, X19, [X31 + 0x10]
	0x01CA6550 ADRP X20, 0x257D000
	0x01CA6554 LDRB W8, [X20 + 0x45C]
	0x01CA6558 MOV X19, X0
	0x01CA655C TBNZ X8, 0x0, 0x1CA6580
	0x01CA6560 ADRP X0, 0x22A8000
	0x01CA6564 LDR X0, [X0 + 0x1C0]
	0x01CA6568 BL 0x1B6E7F0
	0x01CA656C ADRP X0, 0x22A8000
	0x01CA6570 LDR X0, [X0 + 0x5E8]
	0x01CA6574 BL 0x1B6E7F0
	0x01CA6578 MOVZ W8, 0x1
	0x01CA657C STRB W8, [X20 + 0x45C]
	0x01CA6580 LDRB W8, [X19 + 0x58]
	0x01CA6584 CBZ W8, 0x1CA659C
	0x01CA6588 STRB W31, [X19 + 0x58]
	0x01CA658C MOV X0, X19
	0x01CA6590 LDP X20, X19, [X31 + 0x10]
	0x01CA6594 LDR X30, [X31], #0x20
	0x01CA6598 B 0x1CA6344
	0x01CA659C ADRP X20, 0x22A8000
	0x01CA65A0 LDR X20, [X20 + 0x1C0]
	0x01CA65A4 LDR X0, [X20]
	0x01CA65A8 LDR W8, [X0 + 0xE0]
	0x01CA65AC CBNZ W8, 0x1CA65B4
	0x01CA65B0 BL 0x1B6E8F8
	0x01CA65B4 MOV X0, X19
	0x01CA65B8 MOV X1, X31
	0x01CA65BC BL 0x1D697C8
	0x01CA65C0 LDR X0, [X19 + 0x38]
	0x01CA65C4 CBZ X0, 0x1CA66D4
	0x01CA65C8 MOV X1, X31
	0x01CA65CC BL 0x1D87040
	0x01CA65D0 CMP W0, 0x4
	0x01CA65D4 B.NE 0x1CA65E4
	0x01CA65D8 LDP X20, X19, [X31 + 0x10]
	0x01CA65DC LDR X30, [X31], #0x20
	0x01CA65E0 RET
	0x01CA65E4 LDR X0, [X19 + 0x40]
	0x01CA65E8 CBZ X0, 0x1CA66D4
	0x01CA65EC MOV X1, X31
	0x01CA65F0 BL 0x1D9F538
	0x01CA65F4 ANDS W31, W0, 0x7
	0x01CA65F8 B.EQ 0x1CA665C
	0x01CA65FC TBNZ X0, 0x0, 0x1CA658C
	0x01CA6600 LDR X8, [X19 + 0x38]
	0x01CA6604 CBZ X8, 0x1CA66D4
	0x01CA6608 LDR X0, [X8 + 0x50]
	0x01CA660C CBZ X0, 0x1CA66D4
	0x01CA6610 MOV X1, X31
	0x01CA6614 BL 0x1DBEFE4
	0x01CA6618 TBZ X0, 0x0, 0x1CA65D8
	0x01CA661C LDR X8, [X19 + 0x38]
	0x01CA6620 CBZ X8, 0x1CA66D4
	0x01CA6624 LDR X0, [X8 + 0x50]
	0x01CA6628 MOVZ W1, 0x8
	0x01CA662C MOV X2, X31
	0x01CA6630 BL 0x1DD601C
	0x01CA6634 MOV X20, X0
	0x01CA6638 MOVZ W0, 0x1
	0x01CA663C MOV X1, X31
	0x01CA6640 BL 0x1D29EBC
	0x01CA6644 LDR X8, [X19 + 0x40]
	0x01CA6648 CBZ X8, 0x1CA66D4
	0x01CA664C LDR X8, [X8 + 0x20]
	0x01CA6650 CBZ X8, 0x1CA6694
	0x01CA6654 LDR W0, [X8]
	0x01CA6658 B 0x1CA6698
	0x01CA665C LDR X0, [X20]
	0x01CA6660 LDR X19, [X19 + 0x40]
	0x01CA6664 LDR W8, [X0 + 0xE0]
	0x01CA6668 CBNZ W8, 0x1CA6670
	0x01CA666C BL 0x1B6E8F8
	0x01CA6670 ADRP X8, 0x22A8000
	0x01CA6674 LDR X8, [X8 + 0x5E8]
	0x01CA6678 MOV X1, X19
	0x01CA667C LDP X20, X19, [X31 + 0x10]
	0x01CA6680 MOVZ W2, 0x7
	0x01CA6684 LDR X0, [X8]
	0x01CA6688 MOV X3, X31
	0x01CA668C LDR X30, [X31], #0x20
	0x01CA6690 B 0x1D69640
	0x01CA6694 MOV X0, X31
	0x01CA6698 LDR W1, [X19 + 0x68]
	0x01CA669C MOVZ W2, 0x1
	0x01CA66A0 MOV X3, X31
	0x01CA66A4 BL 0x1DA8258
	0x01CA66A8 STUR X0, [X20 + 0x1C]
	0x01CA66AC CBZ X20, 0x1CA66D4
	0x01CA66B0 MOVZ W8, 0x40
	0x01CA66B4 STR W8, [X20 + 0xC]
	0x01CA66B8 LDR X0, [X19 + 0x38]
	0x01CA66BC CBZ X0, 0x1CA66D4
	0x01CA66C0 MOV X1, X20
	0x01CA66C4 LDP X20, X19, [X31 + 0x10]
	0x01CA66C8 MOV X2, X31
	0x01CA66CC LDR X30, [X31], #0x20
	0x01CA66D0 B 0x1D8A710
	0x01CA66D4 BL 0x1B6EA1C
	0x01CA66D8 STP X30, X21, [X31 - 0x20]!
	0x01CA66DC STP X20, X19, [X31 + 0x10]
	0x01CA66E0 ADRP X21, 0x257D000
	0x01CA66E4 LDRB W8, [X21 + 0x45E]
	0x01CA66E8 MOV W20, W1
	0x01CA66EC MOV X19, X0
	0x01CA66F0 TBNZ X8, 0x0, 0x1CA6714
	0x01CA66F4 ADRP X0, 0x22A8000
	0x01CA66F8 LDR X0, [X0 + 0x1C0]
	0x01CA66FC BL 0x1B6E7F0
	0x01CA6700 ADRP X0, 0x22A8000
	0x01CA6704 LDR X0, [X0 + 0x5F0]
	0x01CA6708 BL 0x1B6E7F0
	0x01CA670C MOVZ W8, 0x1
	0x01CA6710 STRB W8, [X21 + 0x45E]
	0x01CA6714 LDRB W8, [X19 + 0x58]
	0x01CA6718 CBZ W8, 0x1CA6790
	0x01CA671C STRB W31, [X19 + 0x58]
	0x01CA6720 MOV X0, X19
	0x01CA6724 BL 0x1CA5B24
	0x01CA6728 TBNZ X0, 0x0, 0x1CA67CC
	0x01CA672C MOVZ W1, 0x1
	0x01CA6730 MOV X0, X19
	0x01CA6734 BL 0x1CA5B8C
	0x01CA6738 LDR X0, [X19 + 0x38]
	0x01CA673C ANDS W31, W20, 0x1
	0x01CA6740 FMOV S0, 5
	0x01CA6744 FMOV S1, 1
	0x01CA6748 FCSEL S0, S1, S0, NE
	0x01CA674C MOV X1, X31
	0x01CA6750 BL 0x1D9CEB8
	0x01CA6754 AND X1, X0, 0x0
	0x01CA6758 MOV X0, X19
	0x01CA675C BL 0x1CA5944
	0x01CA6760 MOV X0, X19
	0x01CA6764 MOV W1, W31
	0x01CA6768 BL 0x1CA5A04
	0x01CA676C LDR X0, [X19 + 0x38]
	0x01CA6770 FMOV S0, 20
	0x01CA6774 MOV X1, X31
	0x01CA6778 BL 0x1D9CEB8
	0x01CA677C AND X1, X0, 0x0
	0x01CA6780 MOV X0, X19
	0x01CA6784 LDP X20, X19, [X31 + 0x10]
	0x01CA6788 LDP X30, X21, [X31], #0x20
	0x01CA678C B 0x1CA5AC4
	0x01CA6790 ADRP X21, 0x22A8000
	0x01CA6794 LDR X21, [X21 + 0x1C0]
	0x01CA6798 LDR X0, [X21]
	0x01CA679C LDR W8, [X0 + 0xE0]
	0x01CA67A0 CBNZ W8, 0x1CA67A8
	0x01CA67A4 BL 0x1B6E8F8
	0x01CA67A8 MOV X0, X19
	0x01CA67AC MOV X1, X31
	0x01CA67B0 BL 0x1D697C8
	0x01CA67B4 LDR X0, [X19 + 0x38]
	0x01CA67B8 CBZ X0, 0x1CA68D0
	0x01CA67BC MOV X1, X31
	0x01CA67C0 BL 0x1D87040
	0x01CA67C4 CMP W0, 0x4
	0x01CA67C8 B.NE 0x1CA67D8
	0x01CA67CC LDP X20, X19, [X31 + 0x10]
	0x01CA67D0 LDP X30, X21, [X31], #0x20
	0x01CA67D4 RET
	0x01CA67D8 LDR X0, [X19 + 0x40]
	0x01CA67DC CBZ X0, 0x1CA68D0
	0x01CA67E0 MOV X1, X31
	0x01CA67E4 BL 0x1D9F538
	0x01CA67E8 ANDS W31, W0, 0x7
	0x01CA67EC B.EQ 0x1CA6850
	0x01CA67F0 TBNZ X0, 0x0, 0x1CA6720
	0x01CA67F4 LDR X8, [X19 + 0x38]
	0x01CA67F8 CBZ X8, 0x1CA68D0
	0x01CA67FC LDR X0, [X8 + 0x50]
	0x01CA6800 CBZ X0, 0x1CA68D0
	0x01CA6804 MOV X1, X31
	0x01CA6808 BL 0x1DBEFE4
	0x01CA680C TBZ X0, 0x0, 0x1CA67CC
	0x01CA6810 LDR X8, [X19 + 0x38]
	0x01CA6814 CBZ X8, 0x1CA68D0
	0x01CA6818 LDR X0, [X8 + 0x50]
	0x01CA681C MOVZ W1, 0xC
	0x01CA6820 MOV X2, X31
	0x01CA6824 BL 0x1DD601C
	0x01CA6828 MOV X21, X0
	0x01CA682C MOVZ W0, 0x1
	0x01CA6830 MOV X1, X31
	0x01CA6834 BL 0x1D29EBC
	0x01CA6838 LDR X8, [X19 + 0x40]
	0x01CA683C CBZ X8, 0x1CA68D0
	0x01CA6840 LDR X8, [X8 + 0x20]
	0x01CA6844 CBZ X8, 0x1CA6888
	0x01CA6848 LDR W0, [X8]
	0x01CA684C B 0x1CA688C
	0x01CA6850 LDR X0, [X21]
	0x01CA6854 LDR X19, [X19 + 0x40]
	0x01CA6858 LDR W8, [X0 + 0xE0]
	0x01CA685C CBNZ W8, 0x1CA6864
	0x01CA6860 BL 0x1B6E8F8
	0x01CA6864 ADRP X8, 0x22A8000
	0x01CA6868 LDR X8, [X8 + 0x5F0]
	0x01CA686C MOV X1, X19
	0x01CA6870 LDP X20, X19, [X31 + 0x10]
	0x01CA6874 MOVZ W2, 0x7
	0x01CA6878 LDR X0, [X8]
	0x01CA687C MOV X3, X31
	0x01CA6880 LDP X30, X21, [X31], #0x20
	0x01CA6884 B 0x1D69640
	0x01CA6888 MOV X0, X31
	0x01CA688C LDR W1, [X19 + 0x68]
	0x01CA6890 MOVZ W2, 0x2
	0x01CA6894 MOV X3, X31
	0x01CA6898 BL 0x1DA8258
	0x01CA689C AND W8, W20, 0x1
	0x01CA68A0 STUR X0, [X21 + 0x1C]
	0x01CA68A4 STR W8, [X21 + 0x24]
	0x01CA68A8 CBZ X21, 0x1CA68D0
	0x01CA68AC MOVZ W8, 0x60
	0x01CA68B0 STR W8, [X21 + 0xC]
	0x01CA68B4 LDR X0, [X19 + 0x38]
	0x01CA68B8 CBZ X0, 0x1CA68D0
	0x01CA68BC LDP X20, X19, [X31 + 0x10]
	0x01CA68C0 MOV X1, X21
	0x01CA68C4 MOV X2, X31
	0x01CA68C8 LDP X30, X21, [X31], #0x20
	0x01CA68CC B 0x1D8A710
	0x01CA68D0 BL 0x1B6EA1C
	0x01CA68D4 STR X30, [X31 - 0x20]!
	0x01CA68D8 STP X20, X19, [X31 + 0x10]
	0x01CA68DC ADRP X20, 0x257D000
	0x01CA68E0 LDRB W8, [X20 + 0x45F]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x257E000
	006 Move W8, [X21+1086]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x22A9000
	014 Move X0, [X0+968]
	015 Call 0x1B6F7F0
	016 Move W8, 1
	017 Move [X21+1086], W8
	018 Move W0, 1
	019 Move X1, X31
	020 Move W21, 1
	021 Call Assert.Check, X0
	022 Compare X19, 0
	023 JumpIfEqual {48}
	024 Move X9, 0x22A9000
	025 Move X9, [X9+968]
	026 Move S0, [X20+36]
	027 Move S1, [X20+40]
	028 Move V2, [X20+44]
	029 Move [X19+88], W21
	030 Move X8, [X19]
	031 Move X1, [X9]
	032 Move W10, [X8+304]
	033 Move W9, [X1+304]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X8, [X8+200]
	036 Add X8, X8, X9
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X0, X19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Call GrabbableItem.RPC_Teleport, X0, X1
	045 Return 
	046 Move X0, X19
	047 Call 0x1B6FCDC
	048 Call 0x1B6FA1C
	049 Add S0, S0, S3
	050 Add S1, S1, S4
	051 Add S2, S2, S5
	052 Return 
	053 Subtract X31, X31, 64
	054 Move [X31+16], X30
	055 Move [X31+32], X22
	056 Move [X31+40], X21
	057 Move [X31+48], X20
	058 Move [X31+56], X19
	059 Move X22, 0x257E000
	060 Move W8, [X22+1104]
	061 Move X21, X2
	062 Move X19, X1
	063 Move X20, X0
	064 Compare W8, 0
	065 JumpIfNotEqual {74}
	066 Move X0, 0x22A9000
	067 Move X0, [X0+1312]
	068 Call 0x1B6F7F0
	069 Move X0, 0x22A9000
	070 Move X0, [X0+1192]
	071 Call 0x1B6F7F0
	072 Move W8, 1
	073 Move [X22+1104], W8
	074 Move [X31+24], X31
	075 Move X0, [X20+88]
	076 Compare X0, 0
	077 JumpIfEqual {239}
	078 Move X1, X31
	079 Call SimulationConfig.get_AreaOfInterestEnabled, X0
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {217}
	084 Move X0, X20
	085 Move X1, X31
	086 Call Simulation.get_IsClient, X0
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {102}
	091 Move X0, X20
	092 Move X1, X31
	093 Call Simulation.get_Topology, X0
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X0, X20
	096 Move X1, X31
	097 Call Simulation.get_IsServer, X0
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {181}
	102 And X21, X21, 0
	103 Move X0, X20
	104 Move X1, X21
	105 Move X2, X31
	106 Call Simulation.PlayerValid, X0, X1
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfNotEqual {233}
	111 Move X0, X20
	112 Move X1, X21
	113 Move X2, X31
	114 Call Simulation.IsHostPlayer, X0, X1
	115 Move TEMP, X0
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfEqual {217}
	119 Move X22, 0x257E000
	120 Move W8, [X22+1106]
	121 Compare W8, 0
	122 JumpIfNotEqual {128}
	123 Move X0, 0x22A9000
	124 Move X0, [X0+1320]
	125 Call 0x1B6F7F0
	126 Move W8, 1
	127 Move [X22+1106], W8
	128 Move X0, [X20+184]
	129 Compare X0, 0
	130 JumpIfEqual {239}
	131 Move X8, 0x22A9000
	132 Move X8, [X8+1320]
	133 Move X1, X21
	134 Move X2, [X8]
	135 Call Dictionary`2<PlayerRef, Object>.get_Item, X0, X1
	136 Move X20, X0
	137 Move X0, X19
	138 Move X1, X31
	139 Call NetworkObject.op_Implicit, X0
	140 Compare X20, 0
	141 JumpIfEqual {239}
	142 And X1, X0, 0
	143 Add X2, X31, 24
	144 Move X0, X20
	145 Move X3, X31
	146 Call SimulationConnection.TryGetObjectData, X0, X1, X2
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfNotEqual {234}
	151 Move X0, [X31+24]
	152 Compare X0, 0
	153 JumpIfEqual {239}
	154 Move W1, 3
	155 Move X2, X31
	156 Call NetworkObjectConnectionData.HasAnyPlayerDataFlag, X0, X1
	157 Move X8, 0x22A9000
	158 Move X8, [X8+1312]
	159 NotImplemented "Instruction STRH not yet implemented."
	160 And W1, W0, 1
	161 Move X2, [X8]
	162 Move X8, [X20]
	163 Move X0, X20
	164 Move X9, [X8+616]
	165 Move X1, [X8+624]
	166 NotImplemented "Instruction BLR not yet implemented."
	167 Compare X19, 0
	168 JumpIfEqual {239}
	169 Move X8, [X19+32]
	170 Compare X8, 0
	171 JumpIfEqual {239}
	172 Move W1, [X8+32]
	173 And X2, X0, 0
	174 Move X0, X20
	175 Move X3, X31
	176 Call 0x1CA6768
	177 Move TEMP, X0
	178 And TEMP, TEMP, 1
	179 Compare TEMP, 1
	180 JumpIfEqual {217}
	181 Move X8, [X20]
	182 Move X0, X20
	183 Move X9, [X8+616]
	184 Move X1, [X8+624]
	185 NotImplemented "Instruction BLR not yet implemented."
	186 Move X8, 0x22A9000
	187 Move X8, [X8+1192]
	188 Move X22, X0
	189 Move X8, [X8]
	190 Move W9, [X8+224]
	191 Compare W9, 0
	192 JumpIfNotEqual {195}
	193 Move X0, X8
	194 Call 0x1B6F8F8
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Compare X19, 0
	197 JumpIfEqual {239}
	198 Move X8, [X19+56]
	199 Compare X8, 0
	200 JumpIfEqual {239}
	201 Move X9, 0x22A9000
	202 Move W8, [X8+156]
	203 Move X9, [X9+1312]
	204 NotImplemented "Instruction STRH not yet implemented."
	205 And W31, W8, 3
	206 Move X2, [X9]
	207 NotImplemented "Instruction CSET not yet implemented."
	208 Add X0, X31, 12
	209 And X1, X21, 0
	210 Move X0, X20
	211 Move X2, X31
	212 Call Simulation.IsHostPlayer, X0, X1
	213 Move TEMP, X0
	214 And TEMP, TEMP, 1
	215 Compare TEMP, 1
	216 JumpIfNotEqual {233}
	217 Move X8, 0x22A9000
	218 Move X8, [X8+1312]
	219 NotImplemented "Instruction STRH not yet implemented."
	220 Add X0, X31, 12
	221 Move W1, 1
	222 Move X2, [X8]
	223 Call Nullable`1<Boolean>..ctor, X0, X1
	224 NotImplemented "Instruction LDRH not yet implemented."
	225 Move X20, [X31+48]
	226 Move X19, [X31+56]
	227 Move X22, [X31+32]
	228 Move X21, [X31+40]
	229 Move X30, [X31+16]
	230 Move W0, W8
	231 Add X31, X31, 64
	232 Return 
	233 Move W8, W31
	234 Move X8, 0x22A9000
	235 Move X8, [X8+1312]
	236 Add X0, X31, 12
	237 Move W1, W31
	238 NotImplemented "Instruction STRH not yet implemented."
	239 Call 0x1B6FA1C
	240 Subtract X31, X31, 64
	241 Move [X31+16], X30
	242 Move [X31+32], X22
	243 Move [X31+40], X21
	244 Move [X31+48], X20
	245 Move [X31+56], X19
	246 Move X22, 0x257E000
	247 Move W8, [X22+1105]
	248 Move X19, X2
	249 Move X21, X1
	250 Move X20, X0
	251 Compare W8, 0
	252 JumpIfNotEqual {264}
	253 Move X0, 0x22A9000
	254 Move X0, [X0+488]
	255 Call 0x1B6F7F0
	256 Move X0, 0x22A9000
	257 Move X0, [X0+1192]
	258 Call 0x1B6F7F0
	259 Move X0, 0x22A9000
	260 Move X0, [X0+1328]
	261 Call 0x1B6F7F0
	262 Move W8, 1
	263 Move [X22+1105], W8
	264 Move X22, 0x22A9000
	265 Move X22, [X22+1192]
	266 Move [X31+24], X31
	267 Move [X31+8], W31
	268 Move X0, [X22]
	269 Move W8, [X0+224]
	270 Compare W8, 0
	271 JumpIfEqual {274}
	272 Compare W19, 0
	273 JumpIfNotEqual {277}
	274 Call 0x1B6F8F8
	275 Compare W19, 0
	276 JumpIfEqual {343}
	277 Move X0, [X22]
	278 Move W8, [X0+224]
	279 Compare W8, 0
	280 JumpIfNotEqual {282}
	281 Call 0x1B6F8F8
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Move W0, 1
	284 Move X0, [X22]
	285 Move W8, [X0+224]
	286 Compare W8, 0
	287 JumpIfEqual {324}
	288 Compare W21, 0
	289 JumpIfEqual {327}
	290 Move X0, [X22]
	291 Move W8, [X0+224]
	292 Compare W8, 0
	293 JumpIfNotEqual {295}
	294 Call 0x1B6F8F8
	295 Add W31, W21, 1
	296 Move X8, 0x22A9000
	297 Move X8, [X8+488]
	298 Move X0, [X8]
	299 Move W8, [X0+224]
	300 Compare W8, 0
	301 JumpIfNotEqual {303}
	302 Call 0x1B6F8F8
	303 Move X0, X31
	304 Call NetworkId.get_RuntimeConfig
	305 Move X8, 0x22A9000
	306 Move X8, [X8+1328]
	307 And X1, X0, 0
	308 Add X2, X31, 24
	309 Move X0, X20
	310 Move X3, [X8]
	311 Call Simulation.TryGetStructData, X0, X1, X2
	312 Move TEMP, X0
	313 And TEMP, TEMP, 1
	314 Compare TEMP, 1
	315 JumpIfNotEqual {343}
	316 Move X8, [X31+24]
	317 Compare X8, 0
	318 JumpIfEqual {351}
	319 Move X0, [X22]
	320 Move W20, [X8+24]
	321 Move W9, [X0+224]
	322 Compare W9, 0
	323 JumpIfNotEqual {341}
	324 Call 0x1B6F8F8
	325 Compare W21, 0
	326 JumpIfNotEqual {290}
	327 Add X1, X31, 8
	328 Move X0, X20
	329 Move X2, X31
	330 Call Simulation.TryGetHostPlayer, X0, X1
	331 Move TEMP, X0
	332 And TEMP, TEMP, 1
	333 Compare TEMP, 1
	334 JumpIfNotEqual {343}
	335 Move X0, [X22]
	336 Move W20, [X31+8]
	337 Move W8, [X0+224]
	338 Compare W8, 0
	339 JumpIfNotEqual {341}
	340 Call 0x1B6F8F8
	341 NotImplemented "Instruction CMP not yet implemented."
	342 NotImplemented "Instruction CSET not yet implemented."
	343 Move W0, W31
	344 Move X20, [X31+48]
	345 Move X19, [X31+56]
	346 Move X22, [X31+32]
	347 Move X21, [X31+40]
	348 Move X30, [X31+16]
	349 Add X31, X31, 64
	350 Return 
	351 Call 0x1B6FA1C

