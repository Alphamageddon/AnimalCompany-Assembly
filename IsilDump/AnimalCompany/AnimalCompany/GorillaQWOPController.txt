Type: AnimalCompany.GorillaQWOPController

Method: System.Void Update()

Disassembly:
	0x01DB1BA0 LDUR V0, [X9 + 0x88]
	0x01DB1BA4 LDUR V1, [X9 + 0x78]
	0x01DB1BA8 LDUR V2, [X9 + 0x68]
	0x01DB1BAC STP V1, V0, [X8 + 0x10]
	0x01DB1BB0 STR V2, [X8]
	0x01DB1BB4 LDP X30, X19, [X31], #0x10
	0x01DB1BB8 RET
	0x01DB1BBC ADRP X0, 0x2342000
	0x01DB1BC0 LDR X0, [X0 + 0x5B0]
	0x01DB1BC4 BL 0x1C16D08
	0x01DB1BC8 BL 0x1C16F10
	0x01DB1BCC MOV X19, X0
	0x01DB1BD0 ADRP X0, 0x2346000
	0x01DB1BD4 LDR X0, [X0 + 0xA68]
	0x01DB1BD8 BL 0x1C16D08
	0x01DB1BDC MOV X1, X0
	0x01DB1BE0 MOV X0, X19
	0x01DB1BE4 MOV X2, X31
	0x01DB1BE8 BL 0x337DF1C
	0x01DB1BEC ADRP X0, 0x2346000
	0x01DB1BF0 LDR X0, [X0 + 0xA70]
	0x01DB1BF4 BL 0x1C16D08
	0x01DB1BF8 MOV X1, X0
	0x01DB1BFC MOV X0, X19
	0x01DB1C00 BL 0x1C16DEC
	0x01DB1C04 STP X30, X19, [X31 - 0x10]!
	0x01DB1C08 LDR X8, [X0 + 0x50]
	0x01DB1C0C CBZ X8, 0x1DB1C2C
	0x01DB1C10 LDP V1, V0, [X1 + 0x10]
	0x01DB1C14 LDR V2, [X1]
	0x01DB1C18 STUR V0, [X8 + 0x88]
	0x01DB1C1C STUR V1, [X8 + 0x78]
	0x01DB1C20 STUR V2, [X8 + 0x68]
	0x01DB1C24 LDP X30, X19, [X31], #0x10
	0x01DB1C28 RET
	0x01DB1C2C ADRP X0, 0x2342000
	0x01DB1C30 LDR X0, [X0 + 0x5B0]
	0x01DB1C34 BL 0x1C16D08
	0x01DB1C38 BL 0x1C16F10
	0x01DB1C3C MOV X19, X0
	0x01DB1C40 ADRP X0, 0x2346000
	0x01DB1C44 LDR X0, [X0 + 0xA68]
	0x01DB1C48 BL 0x1C16D08
	0x01DB1C4C MOV X1, X0
	0x01DB1C50 MOV X0, X19
	0x01DB1C54 MOV X2, X31
	0x01DB1C58 BL 0x337DF1C
	0x01DB1C5C ADRP X0, 0x2346000
	0x01DB1C60 LDR X0, [X0 + 0xA78]
	0x01DB1C64 BL 0x1C16D08
	0x01DB1C68 MOV X1, X0
	0x01DB1C6C MOV X0, X19
	0x01DB1C70 BL 0x1C16DEC
	0x01DB1C74 STP X30, X19, [X31 - 0x10]!
	0x01DB1C78 LDR X8, [X0 + 0x50]
	0x01DB1C7C CBZ X8, 0x1DB1CA4
	0x01DB1C80 MOV X19, X0
	0x01DB1C84 ADD X2, X0, 0x1E8
	0x01DB1C88 ADD X0, X8, 0x98
	0x01DB1C8C MOVZ W1, 0x10
	0x01DB1C90 MOV X3, X31
	0x01DB1C94 BL 0x1E8DF74
	0x01DB1C98 LDR X0, [X19 + 0x1E8]
	0x01DB1C9C LDP X30, X19, [X31], #0x10
	0x01DB1CA0 RET
	0x01DB1CA4 ADRP X0, 0x2342000
	0x01DB1CA8 LDR X0, [X0 + 0x5B0]
	0x01DB1CAC BL 0x1C16D08
	0x01DB1CB0 BL 0x1C16F10
	0x01DB1CB4 MOV X19, X0
	0x01DB1CB8 ADRP X0, 0x2346000
	0x01DB1CBC LDR X0, [X0 + 0xA80]
	0x01DB1CC0 BL 0x1C16D08
	0x01DB1CC4 MOV X1, X0
	0x01DB1CC8 MOV X0, X19
	0x01DB1CCC MOV X2, X31
	0x01DB1CD0 BL 0x337DF1C
	0x01DB1CD4 ADRP X0, 0x2346000
	0x01DB1CD8 LDR X0, [X0 + 0xA88]
	0x01DB1CDC BL 0x1C16D08
	0x01DB1CE0 MOV X1, X0
	0x01DB1CE4 MOV X0, X19
	0x01DB1CE8 BL 0x1C16DEC
	0x01DB1CEC STP X30, X19, [X31 - 0x10]!
	0x01DB1CF0 LDR X8, [X0 + 0x50]
	0x01DB1CF4 CBZ X8, 0x1DB1D14
	0x01DB1CF8 MOV X2, X1
	0x01DB1CFC ADD X3, X0, 0x1E8
	0x01DB1D00 ADD X0, X8, 0x98
	0x01DB1D04 MOVZ W1, 0x10
	0x01DB1D08 MOV X4, X31
	0x01DB1D0C LDP X30, X19, [X31], #0x10
	0x01DB1D10 B 0x1E8DEC4
	0x01DB1D14 ADRP X0, 0x2342000
	0x01DB1D18 LDR X0, [X0 + 0x5B0]
	0x01DB1D1C BL 0x1C16D08
	0x01DB1D20 BL 0x1C16F10
	0x01DB1D24 MOV X19, X0
	0x01DB1D28 ADRP X0, 0x2346000
	0x01DB1D2C LDR X0, [X0 + 0xA80]
	0x01DB1D30 BL 0x1C16D08
	0x01DB1D34 MOV X1, X0
	0x01DB1D38 MOV X0, X19
	0x01DB1D3C MOV X2, X31
	0x01DB1D40 BL 0x337DF1C
	0x01DB1D44 ADRP X0, 0x2346000
	0x01DB1D48 LDR X0, [X0 + 0xA90]
	0x01DB1D4C BL 0x1C16D08
	0x01DB1D50 MOV X1, X0
	0x01DB1D54 MOV X0, X19
	0x01DB1D58 BL 0x1C16DEC
	0x01DB1D5C LDR V0, [X0 + 0x174]
	0x01DB1D60 RET
	0x01DB1D64 STR S0, [X0 + 0x174]
	0x01DB1D68 RET
	0x01DB1D6C LDR X0, [X0 + 0xE8]
	0x01DB1D70 RET
	0x01DB1D74 STR X30, [X31 - 0x20]!
	0x01DB1D78 STP X20, X19, [X31 + 0x10]
	0x01DB1D7C ADRP X20, 0x2627000
	0x01DB1D80 ADRP X19, 0x2344000
	0x01DB1D84 LDRB W8, [X20 + 0xAF8]
	0x01DB1D88 LDR X19, [X19 + 0x9A0]
	0x01DB1D8C TBNZ X8, 0x0, 0x1DB1DA4
	0x01DB1D90 ADRP X0, 0x2344000
	0x01DB1D94 LDR X0, [X0 + 0x9A0]
	0x01DB1D98 BL 0x1C16CF4
	0x01DB1D9C MOVZ W8, 0x1
	0x01DB1DA0 STRB W8, [X20 + 0xAF8]
	0x01DB1DA4 LDR X0, [X19]
	0x01DB1DA8 LDR W8, [X0 + 0xE0]
	0x01DB1DAC CBNZ W8, 0x1DB1DB8
	0x01DB1DB0 BL 0x1C16DFC
	0x01DB1DB4 LDR X0, [X19]
	0x01DB1DB8 LDR X8, [X0 + 0xB8]
	0x01DB1DBC LDP X20, X19, [X31 + 0x10]
	0x01DB1DC0 LDR X0, [X8]
	0x01DB1DC4 LDR X30, [X31], #0x20
	0x01DB1DC8 RET
	0x01DB1DCC STP X30, X23, [X31 - 0x30]!
	0x01DB1DD0 STP X22, X21, [X31 + 0x10]
	0x01DB1DD4 STP X20, X19, [X31 + 0x20]
	0x01DB1DD8 ADRP X19, 0x2627000
	0x01DB1DDC ADRP X22, 0x2344000
	0x01DB1DE0 LDRB W8, [X19 + 0xAF9]
	0x01DB1DE4 LDR X22, [X22 + 0x9A0]
	0x01DB1DE8 TBNZ X8, 0x0, 0x1DB1E48
	0x01DB1DEC ADRP X0, 0x2346000
	0x01DB1DF0 LDR X0, [X0 + 0x850]
	0x01DB1DF4 BL 0x1C16CF4
	0x01DB1DF8 ADRP X0, 0x2346000
	0x01DB1DFC LDR X0, [X0 + 0xA98]
	0x01DB1E00 BL 0x1C16CF4
	0x01DB1E04 ADRP X0, 0x2346000
	0x01DB1E08 LDR X0, [X0 + 0xAA0]
	0x01DB1E0C BL 0x1C16CF4
	0x01DB1E10 ADRP X0, 0x2344000
	0x01DB1E14 LDR X0, [X0 + 0x9A0]
	0x01DB1E18 BL 0x1C16CF4
	0x01DB1E1C ADRP X0, 0x2342000
	0x01DB1E20 LDR X0, [X0 + 0x598]
	0x01DB1E24 BL 0x1C16CF4
	0x01DB1E28 ADRP X0, 0x2346000
	0x01DB1E2C LDR X0, [X0 + 0xAA8]
	0x01DB1E30 BL 0x1C16CF4
	0x01DB1E34 ADRP X0, 0x2346000
	0x01DB1E38 LDR X0, [X0 + 0xAB0]
	0x01DB1E3C BL 0x1C16CF4
	0x01DB1E40 MOVZ W8, 0x1
	0x01DB1E44 STRB W8, [X19 + 0xAF9]
	0x01DB1E48 LDR X0, [X22]
	0x01DB1E4C ADRP X19, 0x2342000
	0x01DB1E50 LDR W8, [X0 + 0xE0]
	0x01DB1E54 LDR X19, [X19 + 0x598]
	0x01DB1E58 CBNZ W8, 0x1DB1E64
	0x01DB1E5C BL 0x1C16DFC
	0x01DB1E60 LDR X0, [X22]
	0x01DB1E64 LDR X8, [X19]
	0x01DB1E68 LDR X9, [X0 + 0xB8]
	0x01DB1E6C LDR W10, [X8 + 0xE0]
	0x01DB1E70 LDR X19, [X9 + 0x8]
	0x01DB1E74 CBNZ W10, 0x1DB1E80
	0x01DB1E78 MOV X0, X8
	0x01DB1E7C BL 0x1C16DFC
	0x01DB1E80 MOV X0, X19
	0x01DB1E84 MOV X1, X31
	0x01DB1E88 MOV X2, X31
	0x01DB1E8C BL 0x3C354F8
	0x01DB1E90 LDR X8, [X22]
	0x01DB1E94 MOV W19, W0
	0x01DB1E98 LDR W9, [X8 + 0xE0]
	0x01DB1E9C CBNZ W9, 0x1DB1EAC
	0x01DB1EA0 MOV X0, X8
	0x01DB1EA4 BL 0x1C16DFC
	0x01DB1EA8 LDR X8, [X22]
	0x01DB1EAC LDR X8, [X8 + 0xB8]
	0x01DB1EB0 TBZ X19, 0x0, 0x1DB1EBC
	0x01DB1EB4 LDR X19, [X8 + 0x8]
	0x01DB1EB8 B 0x1DB1F94
	0x01DB1EBC LDR X0, [X8]
	0x01DB1EC0 CBZ X0, 0x1DB1FA8
	0x01DB1EC4 ADRP X8, 0x2346000
	0x01DB1EC8 LDR X8, [X8 + 0x850]
	0x01DB1ECC LDR X1, [X8]
	0x01DB1ED0 BL 0x2B0EEFC
	0x01DB1ED4 ADRP X23, 0x2346000
	0x01DB1ED8 LDR X23, [X23 + 0xAB0]
	0x01DB1EDC MOV X19, X0
	0x01DB1EE0 LDR X8, [X23]
	0x01DB1EE4 LDR W9, [X8 + 0xE0]
	0x01DB1EE8 CBNZ W9, 0x1DB1EF8
	0x01DB1EEC MOV X0, X8
	0x01DB1EF0 BL 0x1C16DFC
	0x01DB1EF4 LDR X8, [X23]
	0x01DB1EF8 LDR X9, [X8 + 0xB8]
	0x01DB1EFC LDR X20, [X9 + 0x8]
	0x01DB1F00 CBNZ X20, 0x1DB1F58
	0x01DB1F04 LDR W9, [X8 + 0xE0]
	0x01DB1F08 CBNZ W9, 0x1DB1F18
	0x01DB1F0C MOV X0, X8
	0x01DB1F10 BL 0x1C16DFC
	0x01DB1F14 LDR X8, [X23]
	0x01DB1F18 ADRP X9, 0x2346000
	0x01DB1F1C LDR X8, [X8 + 0xB8]
	0x01DB1F20 LDR X9, [X9 + 0xAA0]
	0x01DB1F24 LDR X21, [X8]
	0x01DB1F28 LDR X0, [X9]
	0x01DB1F2C BL 0x1C16F10
	0x01DB1F30 ADRP X8, 0x2346000
	0x01DB1F34 LDR X8, [X8 + 0xAA8]
	0x01DB1F38 MOV X1, X21

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], D13
	003 Move [X31+136], D12
	004 Move [X31+144], D11
	005 Move [X31+152], D10
	006 Move [X31+160], D9
	007 Move [X31+168], D8
	008 Move [X31+176], X30
	009 Move [X31+184], X21
	010 Move [X31+192], X20
	011 Move [X31+200], X19
	012 NotImplemented "Instruction MOVI not yet implemented."
	013 Move [X31+96], V0
	014 Move [X31+104], V0
	015 Move [X31+64], V0
	016 Move [X31+72], V0
	017 NotImplemented "Instruction LDUR not yet implemented."
	018 Move V9, [X0+68]
	019 Move X19, X0
	020 Move W0, 119
	021 Move X1, X31
	022 Call Input.GetKey, X0
	023 Move V8, 0
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {55}
	028 Move X20, 0x2628000
	029 Move W8, [X20+2927]
	030 Compare W8, 0
	031 JumpIfNotEqual {37}
	032 Move X0, 0x2343000
	033 Move X0, [X0+1440]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+2927], W8
	037 Move X20, 0x2343000
	038 Move X20, [X20+1440]
	039 Move X21, 0x2628000
	040 Move W9, [X21+2591]
	041 Move X8, [X20]
	042 Move X8, [X8+184]
	043 Move V10, [X8+48]
	044 Move V9, [X8+56]
	045 Compare W9, 0
	046 JumpIfNotEqual {53}
	047 Move X0, X20
	048 Call 0x1C17CF4
	049 Move X8, [X20]
	050 Move W9, 1
	051 Move [X21+2591], W9
	052 Move X8, [X8+184]
	053 Add X9, X8, 72
	054 Add X8, X8, 80
	055 Move W0, 113
	056 Move X1, X31
	057 Call Input.GetKey, X0
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {96}
	062 Move X20, 0x2628000
	063 Move W8, [X20+2927]
	064 Compare W8, 0
	065 JumpIfNotEqual {71}
	066 Move X0, 0x2343000
	067 Move X0, [X0+1440]
	068 Call 0x1C17CF4
	069 Move W8, 1
	070 Move [X20+2927], W8
	071 Move X20, 0x2343000
	072 Move X20, [X20+1440]
	073 Move X21, 0x2628000
	074 Move W9, [X21+2749]
	075 Move X8, [X20]
	076 Move X8, [X8+184]
	077 Move V10, [X8+48]
	078 Move V9, [X8+56]
	079 Compare W9, 0
	080 JumpIfNotEqual {87}
	081 Move X0, X20
	082 Call 0x1C17CF4
	083 Move X8, [X20]
	084 Move W9, 1
	085 Move [X21+2749], W9
	086 Move X8, [X8+184]
	087 Add X9, X8, 36
	088 Add X8, X8, 44
	089 Move V0, [X9]
	090 Move V2, [X8]
	091 Move S3, 0.25
	092 NotImplemented "Instruction INVALID not yet implemented."
	093 Multiply S3, S9, S3
	094 Add V10, V1, V0
	095 Add S9, S3, S2
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 Move V12, [X19+68]
	098 Move V13, [X19+56]
	099 Move X0, X31
	100 Call Time.get_deltaTime
	101 Multiply S0, S13, S0
	102 Move S1, 1
	103 NotImplemented "Instruction FMIN not yet implemented."
	104 NotImplemented "Instruction FCMP not yet implemented."
	105 Move S0, W31
	106 Move X0, [X19+32]
	107 Subtract V2, V10, V11
	108 Subtract S3, S9, S12
	109 NotImplemented "Instruction FCSEL not yet implemented."
	110 NotImplemented "Instruction INVALID not yet implemented."
	111 Multiply S0, S3, S0
	112 Add V1, V11, V1
	113 Add S0, S12, S0
	114 Move [X19+60], D1
	115 Move [X19+68], S0
	116 Compare X0, 0
	117 JumpIfEqual {275}
	118 Move X20, [X19+48]
	119 Add X8, X31, 0
	120 Move X1, X31
	121 Call Transform.get_localToWorldMatrix, X0
	122 Move V0, [X31]
	123 Move V1, [X31+16]
	124 Move V2, [X31+32]
	125 Move V3, [X31+48]
	126 Add X0, X31, 64
	127 Move X1, X31
	128 Move [X31+64], V0
	129 Move [X31+72], V1
	130 Move [X31+96], V2
	131 Move [X31+104], V3
	132 Move S0, [X19+60]
	133 Move S1, [X19+64]
	134 Move V2, [X19+68]
	135 Call Matrix4x4.MultiplyPoint, X0, X1
	136 Compare X20, 0
	137 JumpIfEqual {275}
	138 Move X0, X20
	139 Move X1, X31
	140 Call Transform.set_position, X0, X1
	141 Move V10, [X19+72]
	142 Move V9, [X19+80]
	143 Move W0, 111
	144 Move X1, X31
	145 Call Input.GetKey, X0
	146 Move TEMP, X0
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfNotEqual {177}
	150 Move X20, 0x2628000
	151 Move W8, [X20+2928]
	152 Compare W8, 0
	153 JumpIfNotEqual {159}
	154 Move X0, 0x2343000
	155 Move X0, [X0+1440]
	156 Call 0x1C17CF4
	157 Move W8, 1
	158 Move [X20+2928], W8
	159 Move X20, 0x2343000
	160 Move X20, [X20+1440]
	161 Move X21, 0x2628000
	162 Move W9, [X21+2591]
	163 Move X8, [X20]
	164 Move X8, [X8+184]
	165 NotImplemented "Instruction LDUR not yet implemented."
	166 Move V9, [X8+68]
	167 Compare W9, 0
	168 JumpIfNotEqual {175}
	169 Move X0, X20
	170 Call 0x1C17CF4
	171 Move X8, [X20]
	172 Move W9, 1
	173 Move [X21+2591], W9
	174 Move X8, [X8+184]
	175 Add X9, X8, 72
	176 Add X8, X8, 80
	177 Move W0, 112
	178 Move X1, X31
	179 Call Input.GetKey, X0
	180 Move TEMP, X0
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfNotEqual {218}
	184 Move X20, 0x2628000
	185 Move W8, [X20+2928]
	186 Compare W8, 0
	187 JumpIfNotEqual {193}
	188 Move X0, 0x2343000
	189 Move X0, [X0+1440]
	190 Call 0x1C17CF4
	191 Move W8, 1
	192 Move [X20+2928], W8
	193 Move X20, 0x2343000
	194 Move X20, [X20+1440]
	195 Move X21, 0x2628000
	196 Move W9, [X21+2749]
	197 Move X8, [X20]
	198 Move X8, [X8+184]
	199 NotImplemented "Instruction LDUR not yet implemented."
	200 Move V9, [X8+68]
	201 Compare W9, 0
	202 JumpIfNotEqual {209}
	203 Move X0, X20
	204 Call 0x1C17CF4
	205 Move X8, [X20]
	206 Move W9, 1
	207 Move [X21+2749], W9
	208 Move X8, [X8+184]
	209 Add X9, X8, 36
	210 Add X8, X8, 44
	211 Move V0, [X9]
	212 Move V2, [X8]
	213 Move S3, 0.25
	214 NotImplemented "Instruction INVALID not yet implemented."
	215 Multiply S3, S9, S3
	216 Add V10, V1, V0
	217 Add S9, S3, S2
	218 Move V8, [X19+72]
	219 Move V11, [X19+80]
	220 Move V12, [X19+56]
	221 Move X0, X31
	222 Call Time.get_deltaTime
	223 Multiply S0, S12, S0
	224 Move S1, 1
	225 NotImplemented "Instruction FMIN not yet implemented."
	226 NotImplemented "Instruction FCMP not yet implemented."
	227 Move S0, W31
	228 Move X0, [X19+32]
	229 Subtract V2, V10, V8
	230 Subtract S3, S9, S11
	231 NotImplemented "Instruction FCSEL not yet implemented."
	232 NotImplemented "Instruction INVALID not yet implemented."
	233 Multiply S0, S3, S0
	234 Add V1, V8, V1
	235 Add S0, S11, S0
	236 Move [X19+72], D1
	237 Move [X19+80], S0
	238 Compare X0, 0
	239 JumpIfEqual {275}
	240 Move X20, [X19+40]
	241 Add X8, X31, 0
	242 Move X1, X31
	243 Call Transform.get_localToWorldMatrix, X0
	244 Move V0, [X31]
	245 Move V1, [X31+16]
	246 Move V2, [X31+32]
	247 Move V3, [X31+48]
	248 Add X0, X31, 64
	249 Move X1, X31
	250 Move [X31+64], V0
	251 Move [X31+72], V1
	252 Move [X31+96], V2
	253 Move [X31+104], V3
	254 Move S0, [X19+72]
	255 Move S1, [X19+76]
	256 Move V2, [X19+80]
	257 Call Matrix4x4.MultiplyPoint, X0, X1
	258 Compare X20, 0
	259 JumpIfEqual {275}
	260 Move X0, X20
	261 Move X1, X31
	262 Call Transform.set_position, X0, X1
	263 Move X20, [X31+192]
	264 Move X19, [X31+200]
	265 Move X30, [X31+176]
	266 Move X21, [X31+184]
	267 Move D9, [X31+160]
	268 Move D8, [X31+168]
	269 Move D11, [X31+144]
	270 Move D10, [X31+152]
	271 Move D13, [X31+128]
	272 Move D12, [X31+136]
	273 Add X31, X31, 208
	274 Return 
	275 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01DB1F3C MOV X3, X31
	0x01DB1F40 MOV X20, X0
	0x01DB1F44 LDR X2, [X8]
	0x01DB1F48 BL 0x2D2F428

ISIL:
	001 Move W8, 0x40A00000
	002 Move X1, X31
	003 Move [X0+56], W8
	004 Call MonoBehaviour..ctor, X0
	005 Return 

