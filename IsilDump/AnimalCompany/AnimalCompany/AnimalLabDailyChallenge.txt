Type: AnimalCompany.AnimalLabDailyChallenge

Method: System.Void Start()

Disassembly:
	0x01D5D348 MOV X1, X21
	0x01D5D34C MOV X2, X31
	0x01D5D350 STR X22, [X21 + 0x20]
	0x01D5D354 BL 0x1D363F0
	0x01D5D358 MOV X0, X19
	0x01D5D35C BL 0x1D5D3E4
	0x01D5D360 MOV X1, X0
	0x01D5D364 MOV X0, X19
	0x01D5D368 LDP X20, X19, [X31 + 0x20]
	0x01D5D36C LDP X22, X21, [X31 + 0x10]
	0x01D5D370 MOV X2, X31
	0x01D5D374 LDP X30, X23, [X31], #0x30
	0x01D5D378 B 0x3C366FC
	0x01D5D37C BL 0x1C16F20
	0x01D5D380 BL 0x1C16F28
	0x01D5D384 BL 0x1C16F44
	0x01D5D388 MOV X1, X31
	0x01D5D38C BL 0x1C16DEC
	0x01D5D390 STR X30, [X31 - 0x20]!
	0x01D5D394 STP X20, X19, [X31 + 0x10]
	0x01D5D398 MOV X20, X0
	0x01D5D39C LDR X0, [X0 + 0x38]
	0x01D5D3A0 CBZ X0, 0x1D5D3E0
	0x01D5D3A4 MOV W19, W1
	0x01D5D3A8 AND W1, W1, 0x1
	0x01D5D3AC MOV X2, X31
	0x01D5D3B0 BL 0x3C357B4
	0x01D5D3B4 LDR X0, [X20 + 0x30]
	0x01D5D3B8 CBZ X0, 0x1D5D3E0
	0x01D5D3BC MOV X1, X31
	0x01D5D3C0 BL 0x3C32ECC
	0x01D5D3C4 CBZ X0, 0x1D5D3E0
	0x01D5D3C8 ORN W8, W31, W19, 0x0
	0x01D5D3CC LDP X20, X19, [X31 + 0x10]
	0x01D5D3D0 AND W1, W8, 0x1
	0x01D5D3D4 MOV X2, X31
	0x01D5D3D8 LDR X30, [X31], #0x20
	0x01D5D3DC B 0x3C357B4
	0x01D5D3E0 BL 0x1C16F20
	0x01D5D3E4 STP X30, X21, [X31 - 0x20]!
	0x01D5D3E8 STP X20, X19, [X31 + 0x10]
	0x01D5D3EC ADRP X20, 0x267B000
	0x01D5D3F0 ADRP X21, 0x2398000
	0x01D5D3F4 LDRB W8, [X20 + 0x81F]
	0x01D5D3F8 LDR X21, [X21 + 0x540]
	0x01D5D3FC MOV X19, X0
	0x01D5D400 TBNZ X8, 0x0, 0x1D5D418
	0x01D5D404 ADRP X0, 0x2398000
	0x01D5D408 LDR X0, [X0 + 0x540]
	0x01D5D40C BL 0x1C16CF4
	0x01D5D410 MOVZ W8, 0x1
	0x01D5D414 STRB W8, [X20 + 0x81F]
	0x01D5D418 LDR X0, [X21]
	0x01D5D41C BL 0x1C16F10
	0x01D5D420 MOV X1, X31
	0x01D5D424 MOV X20, X0
	0x01D5D428 BL 0x33BDD8C
	0x01D5D42C STR W31, [X20 + 0x10]
	0x01D5D430 STR X19, [X20 + 0x20]
	0x01D5D434 MOV X0, X20
	0x01D5D438 LDP X20, X19, [X31 + 0x10]
	0x01D5D43C LDP X30, X21, [X31], #0x20
	0x01D5D440 RET
	0x01D5D444 STP X30, X23, [X31 - 0x30]!
	0x01D5D448 STP X22, X21, [X31 + 0x10]
	0x01D5D44C STP X20, X19, [X31 + 0x20]
	0x01D5D450 ADRP X22, 0x267B000
	0x01D5D454 ADRP X23, 0x2396000
	0x01D5D458 ADRP X20, 0x2398000
	0x01D5D45C ADRP X21, 0x2396000
	0x01D5D460 LDRB W8, [X22 + 0x81D]
	0x01D5D464 LDR X23, [X23 + 0xDA0]
	0x01D5D468 LDR X20, [X20 + 0x530]
	0x01D5D46C LDR X21, [X21 + 0x648]
	0x01D5D470 MOV X19, X0
	0x01D5D474 TBNZ X8, 0x0, 0x1D5D4A4
	0x01D5D478 ADRP X0, 0x2398000
	0x01D5D47C LDR X0, [X0 + 0x530]
	0x01D5D480 BL 0x1C16CF4
	0x01D5D484 ADRP X0, 0x2396000
	0x01D5D488 LDR X0, [X0 + 0x648]
	0x01D5D48C BL 0x1C16CF4
	0x01D5D490 ADRP X0, 0x2396000
	0x01D5D494 LDR X0, [X0 + 0xDA0]
	0x01D5D498 BL 0x1C16CF4
	0x01D5D49C MOVZ W8, 0x1
	0x01D5D4A0 STRB W8, [X22 + 0x81D]
	0x01D5D4A4 LDR X0, [X23]
	0x01D5D4A8 BL 0x1C16F10
	0x01D5D4AC LDR X2, [X20]
	0x01D5D4B0 MOV X1, X19
	0x01D5D4B4 MOV X3, X31
	0x01D5D4B8 MOV X20, X0
	0x01D5D4BC BL 0x35C52F0
	0x01D5D4C0 LDR X0, [X21]
	0x01D5D4C4 LDR W8, [X0 + 0xE0]
	0x01D5D4C8 CBNZ W8, 0x1D5D4D0
	0x01D5D4CC BL 0x1C16DFC
	0x01D5D4D0 MOV X0, X20
	0x01D5D4D4 LDP X20, X19, [X31 + 0x20]
	0x01D5D4D8 LDP X22, X21, [X31 + 0x10]
	0x01D5D4DC MOV X1, X31
	0x01D5D4E0 LDP X30, X23, [X31], #0x30
	0x01D5D4E4 B 0x1D36978
	0x01D5D4E8 STP X30, X19, [X31 - 0x10]!
	0x01D5D4EC MOV X19, X0
	0x01D5D4F0 LDR X0, [X0 + 0x28]
	0x01D5D4F4 BL 0x1D5D508
	0x01D5D4F8 AND W1, W0, 0x1
	0x01D5D4FC MOV X0, X19
	0x01D5D500 LDP X30, X19, [X31], #0x10
	0x01D5D504 B 0x1D5D390
	0x01D5D508 STP X30, X21, [X31 - 0x20]!
	0x01D5D50C STP X20, X19, [X31 + 0x10]
	0x01D5D510 ADRP X21, 0x267B000
	0x01D5D514 ADRP X20, 0x2396000
	0x01D5D518 LDRB W8, [X21 + 0x831]
	0x01D5D51C LDR X20, [X20 + 0x648]
	0x01D5D520 MOV X19, X0
	0x01D5D524 TBNZ X8, 0x0, 0x1D5D554
	0x01D5D528 ADRP X0, 0x2396000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x267C000
	008 Move W8, [X20+2066]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0x2398000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move X0, 0x2399000
	018 Move X0, [X0+1216]
	019 Call 0x1C17CF4
	020 Move X0, 0x2399000
	021 Move X0, [X0+1224]
	022 Call 0x1C17CF4
	023 Move X0, 0x2397000
	024 Move X0, [X0+1608]
	025 Call 0x1C17CF4
	026 Move X0, 0x2397000
	027 Move X0, [X0+3504]
	028 Call 0x1C17CF4
	029 Move X0, 0x2397000
	030 Move X0, [X0+3488]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+2066], W8
	034 Move X22, [X19+32]
	035 Compare X22, 0
	036 JumpIfEqual {136}
	037 Move X23, 0x2398000
	038 Move X23, [X23+3696]
	039 Move X21, 0x2399000
	040 Move X20, [X22+32]
	041 Move X0, [X23]
	042 Move X21, [X21+1216]
	043 Call 0x1C17F10
	044 Move X2, [X21]
	045 Move X1, X19
	046 Move X3, X31
	047 Move X21, X0
	048 Call Action..ctor, X0, X1, X2
	049 Move X0, X20
	050 Move X1, X21
	051 Move X2, X31
	052 Call Delegate.Combine, X0, X1
	053 Compare X0, 0
	054 JumpIfEqual {62}
	055 Move X1, [X23]
	056 Move X8, [X0]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move [X22+32], X0
	059 Move X8, [X0]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Call 0x1C181E0
	062 Move [X22+32], X0
	063 Move X8, 0x2397000
	064 Move X8, [X8+3488]
	065 Move X20, 0x2399000
	066 Move X22, 0x2397000
	067 Move X21, 0x2397000
	068 Move X0, [X8]
	069 Move X20, [X20+1224]
	070 Move X22, [X22+3504]
	071 Move X21, [X21+1608]
	072 Call 0x1C17F10
	073 Move X2, [X20]
	074 Move X1, X19
	075 Move X3, X31
	076 Move X20, X0
	077 Call ObserverDelegate..ctor, X0, X1, X2
	078 Move X0, [X22]
	079 Move W1, 1
	080 Call 0x1C17D6C
	081 Move X8, [X21]
	082 Move X19, X0
	083 Move W9, [X8+224]
	084 Compare W9, 0
	085 JumpIfNotEqual {88}
	086 Move X0, X8
	087 Call 0x1C17DFC
	088 Move X22, 0x267C000
	089 Move W8, [X22+1927]
	090 Compare W8, 0
	091 JumpIfNotEqual {97}
	092 Move X0, 0x2397000
	093 Move X0, [X0+1608]
	094 Call 0x1C17CF4
	095 Move W8, 1
	096 Move [X22+1927], W8
	097 Move X0, [X21]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {103}
	101 Call 0x1C17DFC
	102 Move X0, [X21]
	103 Move X8, [X0+184]
	104 Move X8, [X8]
	105 Compare X8, 0
	106 JumpIfEqual {136}
	107 Move X8, [X8+184]
	108 Compare X8, 0
	109 JumpIfEqual {136}
	110 Compare X19, 0
	111 JumpIfEqual {136}
	112 Move X21, [X8+144]
	113 Compare X21, 0
	114 JumpIfEqual {121}
	115 Move X8, [X19]
	116 Move X0, X21
	117 Move X1, [X8+64]
	118 Call 0x1C17E00
	119 Compare X0, 0
	120 JumpIfEqual {138}
	121 Move W8, [X19+24]
	122 Compare W8, 0
	123 JumpIfEqual {137}
	124 Move [X19+32], X21
	125 Move X0, X20
	126 Move X1, X19
	127 Move X20, [X31+32]
	128 Move X19, [X31+40]
	129 Move X22, [X31+16]
	130 Move X21, [X31+24]
	131 Move X2, X31
	132 Move X30, [X31+48]
	133 Move X23, [X31+56]
	134 Call App.RegisterObserver, X0, X1
	135 Return 
	136 Call 0x1C17F20
	137 Call 0x1C17F28
	138 Call 0x1C17F44
	139 Move X1, X31
	140 Call 0x1C17DEC

Method: System.Void OnDestroy()

Disassembly:
	0x01D5D52C LDR X0, [X0 + 0x648]
	0x01D5D530 BL 0x1C16CF4
	0x01D5D534 ADRP X0, 0x2398000
	0x01D5D538 LDR X0, [X0 + 0x548]
	0x01D5D53C BL 0x1C16CF4
	0x01D5D540 ADRP X0, 0x2397000
	0x01D5D544 LDR X0, [X0 + 0xD70]
	0x01D5D548 BL 0x1C16CF4
	0x01D5D54C MOVZ W8, 0x1
	0x01D5D550 STRB W8, [X21 + 0x831]
	0x01D5D554 LDR X0, [X20]
	0x01D5D558 LDR W8, [X0 + 0xE0]
	0x01D5D55C CBNZ W8, 0x1D5D564
	0x01D5D560 BL 0x1C16DFC
	0x01D5D564 ADRP X21, 0x267B000
	0x01D5D568 LDRB W8, [X21 + 0x787]
	0x01D5D56C CBNZ W8, 0x1D5D584
	0x01D5D570 ADRP X0, 0x2396000
	0x01D5D574 LDR X0, [X0 + 0x648]
	0x01D5D578 BL 0x1C16CF4
	0x01D5D57C MOVZ W8, 0x1
	0x01D5D580 STRB W8, [X21 + 0x787]
	0x01D5D584 LDR X0, [X20]
	0x01D5D588 LDR W8, [X0 + 0xE0]
	0x01D5D58C CBNZ W8, 0x1D5D598
	0x01D5D590 BL 0x1C16DFC
	0x01D5D594 LDR X0, [X20]
	0x01D5D598 LDR X8, [X0 + 0xB8]
	0x01D5D59C LDR X8, [X8]
	0x01D5D5A0 CBZ X8, 0x1D5D65C
	0x01D5D5A4 LDR X8, [X8 + 0xB8]
	0x01D5D5A8 CBZ X8, 0x1D5D65C
	0x01D5D5AC LDR X8, [X8 + 0x88]
	0x01D5D5B0 CBZ X8, 0x1D5D65C
	0x01D5D5B4 LDR X0, [X8 + 0x48]
	0x01D5D5B8 CBZ X0, 0x1D5D65C
	0x01D5D5BC ADRP X8, 0x2397000
	0x01D5D5C0 LDR X8, [X8 + 0xD70]
	0x01D5D5C4 MOV X1, X19
	0x01D5D5C8 LDR X2, [X8]
	0x01D5D5CC BL 0x262DAD8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x267C000
	008 Move X23, 0x2397000
	009 Move X20, 0x2399000
	010 Move X21, 0x2397000
	011 Move W8, [X22+2067]
	012 Move X23, [X23+3488]
	013 Move X20, [X20+1224]
	014 Move X21, [X21+1608]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x2399000
	021 Move X0, [X0+1224]
	022 Call 0x1C17CF4
	023 Move X0, 0x2397000
	024 Move X0, [X0+1608]
	025 Call 0x1C17CF4
	026 Move X0, 0x2397000
	027 Move X0, [X0+3488]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+2067], W8
	031 Move X0, [X23]
	032 Call 0x1C17F10
	033 Move X2, [X20]
	034 Move X1, X19
	035 Move X3, X31
	036 Move X20, X0
	037 Call ObserverDelegate..ctor, X0, X1, X2
	038 Move X0, [X21]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X20
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X1, X31
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Call App.DeregisterObserver, X0
	052 Return 

Method: System.Void HandleCanClaimDailyRewardChanged(SpatialSys.ObservableState.StateChangedEventArgs args)

Disassembly:
	0x01D5D5D0 TBZ X0, 0x0, 0x1D5D64C
	0x01D5D5D4 LDR X0, [X20]
	0x01D5D5D8 LDR W8, [X0 + 0xE0]
	0x01D5D5DC CBNZ W8, 0x1D5D5E4
	0x01D5D5E0 BL 0x1C16DFC
	0x01D5D5E4 LDRB W8, [X21 + 0x787]
	0x01D5D5E8 CBNZ W8, 0x1D5D600
	0x01D5D5EC ADRP X0, 0x2396000
	0x01D5D5F0 LDR X0, [X0 + 0x648]
	0x01D5D5F4 BL 0x1C16CF4
	0x01D5D5F8 MOVZ W8, 0x1
	0x01D5D5FC STRB W8, [X21 + 0x787]
	0x01D5D600 LDR X0, [X20]
	0x01D5D604 LDR W8, [X0 + 0xE0]
	0x01D5D608 CBNZ W8, 0x1D5D614
	0x01D5D60C BL 0x1C16DFC
	0x01D5D610 LDR X0, [X20]
	0x01D5D614 LDR X8, [X0 + 0xB8]
	0x01D5D618 LDR X8, [X8]
	0x01D5D61C CBZ X8, 0x1D5D65C
	0x01D5D620 LDR X8, [X8 + 0xC8]
	0x01D5D624 CBZ X8, 0x1D5D65C
	0x01D5D628 LDR X0, [X8 + 0x50]
	0x01D5D62C CBZ X0, 0x1D5D65C
	0x01D5D630 ADRP X8, 0x2398000
	0x01D5D634 LDR X8, [X8 + 0x548]
	0x01D5D638 MOV X1, X19
	0x01D5D63C LDP X20, X19, [X31 + 0x10]
	0x01D5D640 LDR X2, [X8]
	0x01D5D644 LDP X30, X21, [X31], #0x20
	0x01D5D648 B 0x26098A0
	0x01D5D64C LDP X20, X19, [X31 + 0x10]
	0x01D5D650 MOV W0, W31
	0x01D5D654 LDP X30, X21, [X31], #0x20
	0x01D5D658 RET
	0x01D5D65C BL 0x1C16F20
	0x01D5D660 STR X30, [X31 - 0x20]!
	0x01D5D664 STP X20, X19, [X31 + 0x10]
	0x01D5D668 ADRP X20, 0x267B000
	0x01D5D66C LDRB W8, [X20 + 0x81E]
	0x01D5D670 MOV X19, X0
	0x01D5D674 TBNZ X8, 0x0, 0x1D5D6BC
	0x01D5D678 ADRP X0, 0x2396000
	0x01D5D67C LDR X0, [X0 + 0x648]
	0x01D5D680 BL 0x1C16CF4
	0x01D5D684 ADRP X0, 0x2396000
	0x01D5D688 LDR X0, [X0 + 0x788]
	0x01D5D68C BL 0x1C16CF4
	0x01D5D690 ADRP X0, 0x2398000
	0x01D5D694 LDR X0, [X0 + 0x550]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x267C000
	006 Move X20, 0x2397000
	007 Move W8, [X21+2068]
	008 Move X20, [X20+1608]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2397000
	015 Move X0, [X0+1608]
	016 Call 0x1C17CF4
	017 Move X0, 0x2398000
	018 Move X0, [X0+376]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2068], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X21, 0x267C000
	028 Move W8, [X21+1927]
	029 Compare W8, 0
	030 JumpIfNotEqual {36}
	031 Move X0, 0x2397000
	032 Move X0, [X0+1608]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+1927], W8
	036 Move X0, [X20]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X20]
	042 Move X8, [X0+184]
	043 Move X8, [X8]
	044 Compare X8, 0
	045 JumpIfEqual {61}
	046 Move X8, [X8+184]
	047 Compare X8, 0
	048 JumpIfEqual {61}
	049 Move X9, 0x2398000
	050 Move X9, [X9+376]
	051 Move X0, [X8+144]
	052 Move X1, [X9]
	053 Call 0x2652A74, X0
	054 NotImplemented "Instruction ORN not yet implemented."
	055 Move X0, X19
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 And W1, W8, 1
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 Call 0x1C17F20

Method: System.Void SetClaimed(System.Boolean claimed)

Disassembly:
	0x01D5D698 BL 0x1C16CF4
	0x01D5D69C ADRP X0, 0x2398000
	0x01D5D6A0 LDR X0, [X0 + 0x558]
	0x01D5D6A4 BL 0x1C16CF4
	0x01D5D6A8 ADRP X0, 0x2398000
	0x01D5D6AC LDR X0, [X0 + 0x560]
	0x01D5D6B0 BL 0x1C16CF4
	0x01D5D6B4 MOVZ W8, 0x1
	0x01D5D6B8 STRB W8, [X20 + 0x81E]
	0x01D5D6BC LDR X0, [X19 + 0x50]
	0x01D5D6C0 CBZ X0, 0x1D5D770
	0x01D5D6C4 MOV X1, X31
	0x01D5D6C8 BL 0x35B9A1C
	0x01D5D6CC TBZ X0, 0x0, 0x1D5D71C
	0x01D5D6D0 LDR X0, [X19 + 0x20]
	0x01D5D6D4 MOV X1, X31
	0x01D5D6D8 BL 0x1D45388
	0x01D5D6DC ADRP X8, 0x2396000
	0x01D5D6E0 LDR X8, [X8 + 0x648]
	0x01D5D6E4 MOV X20, X0
	0x01D5D6E8 LDR X8, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Move X0, [X0+40]
	006 Compare X0, 0
	007 JumpIfEqual {27}
	008 Move W19, W1
	009 And W1, W1, 1
	010 Move X2, X31
	011 Call GameObject.SetActive, X0, X1
	012 Move X0, [X20+32]
	013 Compare X0, 0
	014 JumpIfEqual {27}
	015 Move X1, X31
	016 Call Component.get_gameObject, X0
	017 Compare X0, 0
	018 JumpIfEqual {27}
	019 NotImplemented "Instruction ORN not yet implemented."
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 And W1, W8, 1
	023 Move X2, X31
	024 Move X30, [X31+32]
	025 Call GameObject.SetActive, X0, X1
	026 Return 
	027 Call 0x1C17F20

Method: System.Void ClaimReward()

Disassembly:
	0x01D5D6EC LDR W9, [X8 + 0xE0]
	0x01D5D6F0 CBNZ W9, 0x1D5D6FC
	0x01D5D6F4 MOV X0, X8
	0x01D5D6F8 BL 0x1C16DFC
	0x01D5D6FC MOV X0, X20
	0x01D5D700 MOV W1, W31
	0x01D5D704 MOV X2, X31
	0x01D5D708 BL 0x1D35D6C
	0x01D5D70C STR X0, [X19 + 0x50]
	0x01D5D710 LDP X20, X19, [X31 + 0x10]
	0x01D5D714 LDR X30, [X31], #0x20
	0x01D5D718 RET
	0x01D5D71C ADRP X8, 0x2396000
	0x01D5D720 LDR X8, [X8 + 0x788]
	0x01D5D724 LDR X0, [X8]
	0x01D5D728 LDR W8, [X0 + 0xE0]
	0x01D5D72C CBNZ W8, 0x1D5D734
	0x01D5D730 BL 0x1C16DFC
	0x01D5D734 ADRP X8, 0x2398000
	0x01D5D738 ADRP X9, 0x2398000
	0x01D5D73C ADRP X10, 0x2398000
	0x01D5D740 LDR X8, [X8 + 0x550]
	0x01D5D744 LDR X9, [X9 + 0x560]
	0x01D5D748 LDR X10, [X10 + 0x558]
	0x01D5D74C LDP X20, X19, [X31 + 0x10]
	0x01D5D750 LDR X0, [X8]
	0x01D5D754 LDR X2, [X9]
	0x01D5D758 LDR X3, [X10]
	0x01D5D75C MOVZ W4, 0x36
	0x01D5D760 MOV X1, X31
	0x01D5D764 MOV X5, X31
	0x01D5D768 LDR X30, [X31], #0x20
	0x01D5D76C B 0x35C2344
	0x01D5D770 BL 0x1C16F20
	0x01D5D774 STR X30, [X31 - 0x20]!
	0x01D5D778 STP X20, X19, [X31 + 0x10]
	0x01D5D77C MOV W19, W1
	0x01D5D780 MOV X1, X31
	0x01D5D784 MOV X20, X0
	0x01D5D788 BL 0x33BDD8C
	0x01D5D78C STR W19, [X20 + 0x10]
	0x01D5D790 LDP X20, X19, [X31 + 0x10]
	0x01D5D794 LDR X30, [X31], #0x20
	0x01D5D798 RET
	0x01D5D79C STP X30, X21, [X31 - 0x20]!
	0x01D5D7A0 STP X20, X19, [X31 + 0x10]
	0x01D5D7A4 ADRP X21, 0x267B000
	0x01D5D7A8 ADRP X20, 0x2396000
	0x01D5D7AC LDRB W8, [X21 + 0x820]
	0x01D5D7B0 LDR X20, [X20 + 0x898]
	0x01D5D7B4 MOV X19, X0
	0x01D5D7B8 TBNZ X8, 0x0, 0x1D5D7D0
	0x01D5D7BC ADRP X0, 0x2396000
	0x01D5D7C0 LDR X0, [X0 + 0x898]
	0x01D5D7C4 BL 0x1C16CF4
	0x01D5D7C8 MOVZ W8, 0x1
	0x01D5D7CC STRB W8, [X21 + 0x820]
	0x01D5D7D0 LDR X0, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x267C000
	006 Move W8, [X20+2069]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x2399000
	013 Move X0, [X0+1232]
	014 Call 0x1C17CF4
	015 Move X0, 0x2397000
	016 Move X0, [X0+1608]
	017 Call 0x1C17CF4
	018 Move X0, 0x2397000
	019 Move X0, [X0+2392]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+2069], W8
	023 Move X0, [X19+48]
	024 Compare X0, 0
	025 JumpIfEqual {71}
	026 Move X1, X31
	027 Call CommandHandle.get_hasFinalized, X0
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {37}
	032 Move X0, [X19+48]
	033 Compare X0, 0
	034 JumpIfEqual {71}
	035 Move X1, X31
	036 Call CommandHandle.Cancel, X0
	037 Move X8, 0x2397000
	038 Move X8, [X8+2392]
	039 Move X20, 0x2399000
	040 Move X21, 0x2397000
	041 Move X0, [X8]
	042 Move X20, [X20+1232]
	043 Move X21, [X21+1608]
	044 Call 0x1C17F10
	045 Move X2, [X20]
	046 Move X1, X19
	047 Move X3, X31
	048 Move X20, X0
	049 Call CoroutineGenerator..ctor, X0, X1, X2
	050 Move X0, X20
	051 Move W1, W31
	052 Move X2, X31
	053 Call Commands.Coroutine, X0, X1
	054 Move X8, [X21]
	055 Move X20, X0
	056 Move W9, [X8+224]
	057 Compare W9, 0
	058 JumpIfNotEqual {61}
	059 Move X0, X8
	060 Call 0x1C17DFC
	061 Move X0, X20
	062 Move W1, W31
	063 Move X2, X31
	064 Call App.ExecuteCommand, X0, X1
	065 Move [X19+48], X0
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 Move X21, [X31+40]
	070 Return 
	071 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerator`1<SpatialSys.CommandLib.Command> ClaimRewardCommand()

Disassembly:
	0x01D5D7D4 LDR W8, [X0 + 0xE0]
	0x01D5D7D8 CBNZ W8, 0x1D5D7E0
	0x01D5D7DC BL 0x1C16DFC
	0x01D5D7E0 ADRP X21, 0x267B000
	0x01D5D7E4 LDRB W8, [X21 + 0x78B]
	0x01D5D7E8 CBNZ W8, 0x1D5D800
	0x01D5D7EC ADRP X0, 0x2396000
	0x01D5D7F0 LDR X0, [X0 + 0x898]
	0x01D5D7F4 BL 0x1C16CF4
	0x01D5D7F8 MOVZ W8, 0x1
	0x01D5D7FC STRB W8, [X21 + 0x78B]
	0x01D5D800 LDR X0, [X20]
	0x01D5D804 LDR W8, [X0 + 0xE0]
	0x01D5D808 CBNZ W8, 0x1D5D814
	0x01D5D80C BL 0x1C16DFC
	0x01D5D810 LDR X0, [X20]
	0x01D5D814 LDR X8, [X0 + 0xB8]
	0x01D5D818 MOV X0, X19
	0x01D5D81C MOV X1, X31
	0x01D5D820 LDR X8, [X8]
	0x01D5D824 STR X8, [X19 + 0x50]
	0x01D5D828 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x267C000
	005 Move X20, 0x2399000
	006 Move W8, [X19+2070]
	007 Move X20, [X20+1240]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2399000
	013 Move X0, [X0+1240]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2070], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move [X19+16], W31
	023 Move X0, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return X0

Method: System.Void .ctor()

Disassembly:
	0x01D5D854 ADRP X0, 0x2398000
	0x01D5D858 LDR X0, [X0 + 0x568]
	0x01D5D85C BL 0x1C16CF4
	0x01D5D860 MOVZ W8, 0x1
	0x01D5D864 STRB W8, [X20 + 0x821]
	0x01D5D868 ADD X0, X31, 0x18
	0x01D5D86C MOVZ W1, 0x7E8
	0x01D5D870 MOVZ W2, 0xA
	0x01D5D874 MOVZ W3, 0x7
	0x01D5D878 MOVZ W4, 0x7
	0x01D5D87C MOVZ W7, 0x1
	0x01D5D880 MOV W5, W31
	0x01D5D884 MOV W6, W31
	0x01D5D888 STR X31, [X31 + 0x18]
	0x01D5D88C STR X31, [X31]
	0x01D5D890 BL 0x335F47C
	0x01D5D894 LDR X8, [X19]
	0x01D5D898 LDP X30, X9, [X31 + 0x10]
	0x01D5D89C LDP X20, X19, [X31 + 0x20]
	0x01D5D8A0 LDR X8, [X8 + 0xB8]
	0x01D5D8A4 STR X9, [X8]
	0x01D5D8A8 ADD X31, X31, 0x30
	0x01D5D8AC RET
	0x01D5D8B0 RET
	0x01D5D8B4 SUB X31, X31, 0x60
	0x01D5D8B8 STR D8, [X31 + 0x20]
	0x01D5D8BC STR X30, [X31 + 0x28]
	0x01D5D8C0 STP X24, X23, [X31 + 0x30]
	0x01D5D8C4 STP X22, X21, [X31 + 0x40]
	0x01D5D8C8 STP X20, X19, [X31 + 0x50]
	0x01D5D8CC ADRP X20, 0x267B000
	0x01D5D8D0 LDRB W8, [X20 + 0x822]
	0x01D5D8D4 MOV X19, X0
	0x01D5D8D8 TBNZ X8, 0x0, 0x1D5D980
	0x01D5D8DC ADRP X0, 0x2398000
	0x01D5D8E0 LDR X0, [X0 + 0x568]
	0x01D5D8E4 BL 0x1C16CF4
	0x01D5D8E8 ADRP X0, 0x2397000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x267C000
	006 Move X20, 0x2397000
	007 Move W8, [X21+2071]
	008 Move X20, [X20+2200]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2397000
	015 Move X0, [X0+2200]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2071], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X21, 0x267C000
	025 Move W8, [X21+1931]
	026 Compare W8, 0
	027 JumpIfNotEqual {33}
	028 Move X0, 0x2397000
	029 Move X0, [X0+2200]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+1931], W8
	033 Move X0, [X20]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X20]
	039 Move X8, [X0+184]
	040 Move X0, X19
	041 Move X1, X31
	042 Move X8, [X8]
	043 Move [X19+48], X8
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Call MonoBehaviour..ctor, X0
	049 Return 

