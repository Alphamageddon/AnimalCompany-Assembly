Type: AnimalCompany.AppStartup/<BootstrapCommand>d__18

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01C8F668 BL 0x1B6E7F0
	0x01C8F66C ADRP X0, 0x22BE000
	0x01C8F670 LDR X0, [X0 + 0xA80]
	0x01C8F674 BL 0x1B6E7F0
	0x01C8F678 ADRP X0, 0x22BE000
	0x01C8F67C LDR X0, [X0 + 0xA88]
	0x01C8F680 BL 0x1B6E7F0
	0x01C8F684 ADRP X0, 0x22BE000
	0x01C8F688 LDR X0, [X0 + 0xA90]
	0x01C8F68C BL 0x1B6E7F0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01C8FB00 MOV W1, W31

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01C8FB04 MOV X3, X31
	0x01C8FB08 BL 0x3091C2C
	0x01C8FB0C MOV X23, X0
	0x01C8FB10 LDR X0, [X24]
	0x01C8FB14 ADD X1, X31, 0x10
	0x01C8FB18 STR W21, [X31 + 0x10]
	0x01C8FB1C BL 0x1B6E900
	0x01C8FB20 ADRP X8, 0x22BE000
	0x01C8FB24 LDR X8, [X8 + 0xAC8]
	0x01C8FB28 MOV X2, X0
	0x01C8FB2C MOV X1, X23
	0x01C8FB30 MOV X3, X31
	0x01C8FB34 LDR X8, [X8]
	0x01C8FB38 MOV X0, X8
	0x01C8FB3C BL 0x3090A1C
	0x01C8FB40 CBZ X22, 0x1C8FFFC
	0x01C8FB44 LDR X8, [X22 + 0x20]
	0x01C8FB48 CBZ X8, 0x1C8FFFC
	0x01C8FB4C STR X0, [X8 + 0x30]
	0x01C8FB50 ADRP X8, 0x22BE000
	0x01C8FB54 LDR X8, [X8 + 0xAB0]
	0x01C8FB58 LDR X0, [X8]
	0x01C8FB5C LDR W8, [X0 + 0xE0]
	0x01C8FB60 CBNZ W8, 0x1C8FB68
	0x01C8FB64 BL 0x1B6E8F8
	0x01C8FB68 MOVZ W0, 0x3
	0x01C8FB6C MOVZ W1, 0x1
	0x01C8FB70 MOV X2, X31
	0x01C8FB74 BL 0x3AAFB28
	0x01C8FB78 STR X0, [X19 + 0x38]
	0x01C8FB7C MOVZ W0, 0x2
	0x01C8FB80 MOVZ W1, 0x1
	0x01C8FB84 MOV X2, X31
	0x01C8FB88 BL 0x3AAFB28
	0x01C8FB8C LDR X8, [X19 + 0x38]
	0x01C8FB90 STR X0, [X19 + 0x40]
	0x01C8FB94 CBZ X8, 0x1C8FFFC
	0x01C8FB98 MOV X0, X8
	0x01C8FB9C MOV W1, W31
	0x01C8FBA0 MOV X2, X31
	0x01C8FBA4 BL 0x3A99760
	0x01C8FBA8 LDR X0, [X19 + 0x40]
	0x01C8FBAC CBZ X0, 0x1C8FFFC
	0x01C8FBB0 MOV W1, W31
	0x01C8FBB4 MOV X2, X31
	0x01C8FBB8 BL 0x3A99760
	0x01C8FBBC ADRP X8, 0x22BE000
	0x01C8FBC0 LDR X8, [X8 + 0x7E8]
	0x01C8FBC4 LDR X0, [X8]
	0x01C8FBC8 BL 0x1B6EA0C
	0x01C8FBCC ADRP X8, 0x22BE000
	0x01C8FBD0 LDR X8, [X8 + 0xA60]
	0x01C8FBD4 MOV X1, X20
	0x01C8FBD8 MOV X3, X31
	0x01C8FBDC MOV X21, X0
	0x01C8FBE0 LDR X2, [X8]
	0x01C8FBE4 BL 0x3425F88
	0x01C8FBE8 MOV X0, X21
	0x01C8FBEC MOV W1, W31
	0x01C8FBF0 MOV X2, X31
	0x01C8FBF4 BL 0x3425A8C
	0x01C8FBF8 STR X0, [X19 + 0x18]
	0x01C8FBFC MOVZ W8, 0x3
	0x01C8FC00 B 0x1C8FFD0
	0x01C8FC04 MOVN W8, 0x0
	0x01C8FC08 STR W8, [X19 + 0x10]
	0x01C8FC0C ADRP X8, 0x22BE000
	0x01C8FC10 LDR X8, [X8 + 0x7E8]
	0x01C8FC14 LDR X0, [X8]
	0x01C8FC18 BL 0x1B6EA0C
	0x01C8FC1C ADRP X8, 0x22BE000
	0x01C8FC20 LDR X8, [X8 + 0xA58]
	0x01C8FC24 MOV X1, X20
	0x01C8FC28 MOV X3, X31
	0x01C8FC2C MOV X21, X0
	0x01C8FC30 LDR X2, [X8]
	0x01C8FC34 BL 0x3425F88
	0x01C8FC38 MOV X0, X21
	0x01C8FC3C MOV W1, W31
	0x01C8FC40 MOV X2, X31
	0x01C8FC44 BL 0x3425A8C
	0x01C8FC48 STR X0, [X19 + 0x18]
	0x01C8FC4C MOVZ W8, 0x4
	0x01C8FC50 B 0x1C8FFD0
	0x01C8FC54 MOVN W8, 0x0
	0x01C8FC58 STR W8, [X19 + 0x10]
	0x01C8FC5C ADRP X8, 0x22BE000
	0x01C8FC60 LDR X8, [X8 + 0xAB0]
	0x01C8FC64 LDR X0, [X8]
	0x01C8FC68 LDR W8, [X0 + 0xE0]
	0x01C8FC6C CBNZ W8, 0x1C8FC74
	0x01C8FC70 BL 0x1B6E8F8
	0x01C8FC74 MOVZ W0, 0x1
	0x01C8FC78 MOV X1, X31
	0x01C8FC7C BL 0x3AAF038
	0x01C8FC80 AND X0, X0, 0x0
	0x01C8FC84 MOV X1, X31
	0x01C8FC88 BL 0x3AAEF80
	0x01C8FC8C ADRP X21, 0x22BE000
	0x01C8FC90 LDR X21, [X21 + 0xA78]
	0x01C8FC94 LDR X0, [X21]
	0x01C8FC98 LDR W8, [X0 + 0xE0]
	0x01C8FC9C CBNZ W8, 0x1C8FCA4
	0x01C8FCA0 BL 0x1B6E8F8
	0x01C8FCA4 ADRP X22, 0x2594000
	0x01C8FCA8 LDRB W8, [X22 + 0x449]
	0x01C8FCAC CBNZ W8, 0x1C8FCC4
	0x01C8FCB0 ADRP X0, 0x22BE000
	0x01C8FCB4 LDR X0, [X0 + 0xA78]
	0x01C8FCB8 BL 0x1B6E7F0
	0x01C8FCBC MOVZ W8, 0x1
	0x01C8FCC0 STRB W8, [X22 + 0x449]
	0x01C8FCC4 LDR X0, [X21]
	0x01C8FCC8 LDR W8, [X0 + 0xE0]
	0x01C8FCCC CBNZ W8, 0x1C8FCD8
	0x01C8FCD0 BL 0x1B6E8F8
	0x01C8FCD4 LDR X0, [X21]
	0x01C8FCD8 LDR X8, [X0 + 0xB8]
	0x01C8FCDC LDRB W8, [X8]
	0x01C8FCE0 CBNZ W8, 0x1C8FD24
	0x01C8FCE4 ADRP X8, 0x22BE000
	0x01C8FCE8 LDR X8, [X8 + 0x800]
	0x01C8FCEC LDR X0, [X8]
	0x01C8FCF0 LDR W8, [X0 + 0xE0]
	0x01C8FCF4 CBNZ W8, 0x1C8FCFC
	0x01C8FCF8 BL 0x1B6E8F8
	0x01C8FCFC MOV X0, X31
	0x01C8FD00 BL 0x3A6BF90
	0x01C8FD04 TBNZ X0, 0x0, 0x1C8FD24
	0x01C8FD08 LDR X0, [X21]
	0x01C8FD0C LDR W8, [X0 + 0xE0]
	0x01C8FD10 CBNZ W8, 0x1C8FD18
	0x01C8FD14 BL 0x1B6E8F8
	0x01C8FD18 MOV X0, X31
	0x01C8FD1C MOV X1, X31
	0x01C8FD20 BL 0x3343E94
	0x01C8FD24 CBZ X20, 0x1C8FFFC
	0x01C8FD28 ADRP X8, 0x22BE000
	0x01C8FD2C LDR X8, [X8 + 0xAD0]
	0x01C8FD30 MOV X0, X20
	0x01C8FD34 LDR X1, [X8]
	0x01C8FD38 BL 0x1C8E690
	0x01C8FD3C CBZ X0, 0x1C8FFFC
	0x01C8FD40 ADRP X8, 0x22BE000
	0x01C8FD44 LDR X8, [X8 + 0xA98]
	0x01C8FD48 MOV X21, X0
	0x01C8FD4C LDR X1, [X8]
	0x01C8FD50 BL 0x20CEE08
	0x01C8FD54 ADRP X8, 0x22BE000
	0x01C8FD58 LDR X8, [X8 + 0xA80]
	0x01C8FD5C MOV X0, X21
	0x01C8FD60 LDR X1, [X8]
	0x01C8FD64 BL 0x20CEE08
	0x01C8FD68 ADRP X8, 0x22BE000
	0x01C8FD6C LDR X8, [X8 + 0xAF0]
	0x01C8FD70 MOV X0, X20
	0x01C8FD74 LDR X1, [X8]
	0x01C8FD78 BL 0x1C8E690
	0x01C8FD7C CBZ X0, 0x1C8FFFC
	0x01C8FD80 ADRP X8, 0x22BE000
	0x01C8FD84 LDR X8, [X8 + 0xA90]
	0x01C8FD88 MOV X21, X0
	0x01C8FD8C LDR X1, [X8]
	0x01C8FD90 BL 0x20CEE08
	0x01C8FD94 ADRP X8, 0x22BE000
	0x01C8FD98 LDR X8, [X8 + 0xA88]
	0x01C8FD9C MOV X0, X21
	0x01C8FDA0 LDR X1, [X8]
	0x01C8FDA4 BL 0x20CEE08
	0x01C8FDA8 ADRP X8, 0x22BE000
	0x01C8FDAC LDR X8, [X8 + 0xA50]
	0x01C8FDB0 MOV X0, X20
	0x01C8FDB4 LDR X1, [X8]
	0x01C8FDB8 BL 0x21A5688
	0x01C8FDBC ADRP X8, 0x22BE000
	0x01C8FDC0 LDR X8, [X8 + 0xAF8]
	0x01C8FDC4 MOVZ W1, 0x1
	0x01C8FDC8 MOV X2, X31
	0x01C8FDCC MOVZ W22, 0x1
	0x01C8FDD0 LDR X0, [X8]
	0x01C8FDD4 BL 0x1CB083C
	0x01C8FDD8 ADRP X8, 0x22BE000
	0x01C8FDDC LDR X8, [X8 + 0x7E8]
	0x01C8FDE0 LDR X0, [X8]
	0x01C8FDE4 BL 0x1B6EA0C
	0x01C8FDE8 ADRP X8, 0x22BE000
	0x01C8FDEC LDR X8, [X8 + 0xA68]
	0x01C8FDF0 MOV X1, X20
	0x01C8FDF4 MOV X3, X31
	0x01C8FDF8 MOV X21, X0
	0x01C8FDFC LDR X2, [X8]
	0x01C8FE00 BL 0x3425F88
	0x01C8FE04 MOV X0, X21
	0x01C8FE08 MOV W1, W31
	0x01C8FE0C MOV X2, X31
	0x01C8FE10 BL 0x3425A8C
	0x01C8FE14 MOVZ W8, 0x2
	0x01C8FE18 STR X0, [X19 + 0x18]
	0x01C8FE1C STR W8, [X19 + 0x10]
	0x01C8FE20 B 0x1C8FFD8
	0x01C8FE24 MOVN W8, 0x0
	0x01C8FE28 STR W8, [X19 + 0x10]
	0x01C8FE2C ADRP X8, 0x22BE000
	0x01C8FE30 LDR X8, [X8 + 0xAE8]
	0x01C8FE34 MOVZ W1, 0x1
	0x01C8FE38 MOV X2, X31
	0x01C8FE3C LDR X0, [X8]
	0x01C8FE40 BL 0x1CB083C
	0x01C8FE44 LDR X0, [X19 + 0x38]
	0x01C8FE48 CBZ X0, 0x1C8FFFC
	0x01C8FE4C MOVZ W1, 0x1
	0x01C8FE50 MOV X2, X31
	0x01C8FE54 BL 0x3A99760
	0x01C8FE58 B 0x1C8FE64
	0x01C8FE5C MOVN W8, 0x0
	0x01C8FE60 STR W8, [X19 + 0x10]
	0x01C8FE64 LDR X0, [X19 + 0x40]
	0x01C8FE68 CBZ X0, 0x1C8FFFC
	0x01C8FE6C MOV X1, X31
	0x01C8FE70 BL 0x3A996E8
	0x01C8FE74 TBZ X0, 0x0, 0x1C8FF44
	0x01C8FE78 ADRP X8, 0x22BE000
	0x01C8FE7C LDR X8, [X8 + 0xAB0]
	0x01C8FE80 LDR X0, [X8]
	0x01C8FE84 LDR W8, [X0 + 0xE0]
	0x01C8FE88 CBNZ W8, 0x1C8FE90
	0x01C8FE8C BL 0x1B6E8F8
	0x01C8FE90 MOVZ W0, 0x3
	0x01C8FE94 MOV X1, X31
	0x01C8FE98 BL 0x3AAF038
	0x01C8FE9C AND X0, X0, 0x0
	0x01C8FEA0 MOV X1, X31
	0x01C8FEA4 BL 0x3AAEF80

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x2595000
	009 Move W8, [X20+938]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {65}
	015 Move X0, 0x22BF000
	016 Move X0, [X0+2344]
	017 Call 0x1B6F7F0
	018 Move X0, 0x22BF000
	019 Move X0, [X0+1528]
	020 Call 0x1B6F7F0
	021 Move X0, 0x22BF000
	022 Move X0, [X0+1576]
	023 Call 0x1B6F7F0
	024 Move X0, 0x22BF000
	025 Move X0, [X0+2352]
	026 Call 0x1B6F7F0
	027 Move X0, 0x22BF000
	028 Move X0, [X0+2360]
	029 Call 0x1B6F7F0
	030 Move X0, 0x22BF000
	031 Move X0, [X0+2368]
	032 Call 0x1B6F7F0
	033 Move X0, 0x22BF000
	034 Move X0, [X0+2376]
	035 Call 0x1B6F7F0
	036 Move X0, 0x22BF000
	037 Move X0, [X0+2280]
	038 Call 0x1B6F7F0
	039 Move X0, 0x22BF000
	040 Move X0, [X0+2384]
	041 Call 0x1B6F7F0
	042 Move X0, 0x22BF000
	043 Move X0, [X0+2392]
	044 Call 0x1B6F7F0
	045 Move X0, 0x22BF000
	046 Move X0, [X0+2400]
	047 Call 0x1B6F7F0
	048 Move X0, 0x22BF000
	049 Move X0, [X0+2408]
	050 Call 0x1B6F7F0
	051 Move X0, 0x22BF000
	052 Move X0, [X0+2416]
	053 Call 0x1B6F7F0
	054 Move X0, 0x22BF000
	055 Move X0, [X0+2424]
	056 Call 0x1B6F7F0
	057 Move X0, 0x22BF000
	058 Move X0, [X0+2432]
	059 Call 0x1B6F7F0
	060 Move X0, 0x22BF000
	061 Move X0, [X0+2440]
	062 Call 0x1B6F7F0
	063 Move W8, 1
	064 Move [X20+938], W8
	065 Move W8, [X19+16]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Compare W8, 0
	069 JumpIfNotEqual {215}
	070 Move X9, 1
	071 Move TEMP, 0
	072 Not TEMP
	073 Move W8, TEMP
	074 NotImplemented "Instruction MOVK not yet implemented."
	075 Move [X19+16], W8
	076 Move [X19+40], X9
	077 Move W8, [X19+40]
	078 Move TEMP, 0
	079 Not TEMP
	080 Move W9, TEMP
	081 Move [X19+16], W9
	082 Move [X19+48], X31
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X9, 0x22BF000
	085 Move X9, [X9+1528]
	086 Add X1, X31, 12
	087 Move [X31+12], W8
	088 Move X0, [X9]
	089 Call 0x1B6F900
	090 Move X8, 0x22BF000
	091 Move X8, [X8+2432]
	092 Move X1, X0
	093 Move X2, X31
	094 Move X8, [X8]
	095 Move X0, X8
	096 Call String.Format, X0, X1
	097 Move X8, 0x22BF000
	098 Move X8, [X8+2400]
	099 Move X0, [X8]
	100 Move W1, 1
	101 Move X2, X31
	102 Call LoadingScreenView.SetStatus, X0, X1
	103 Move X23, 0x22BF000
	104 Move X23, [X23+2280]
	105 Move X0, [X23]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {111}
	109 Call 0x1B6F8F8
	110 Move X0, [X23]
	111 Move X8, [X0+184]
	112 Move X21, [X8+16]
	113 Move X8, 0x22BF000
	114 Move X8, [X8+2440]
	115 Move X20, [X8]
	116 Compare X21, 0
	117 JumpIfNotEqual {139}
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {123}
	121 Call 0x1B6F8F8
	122 Move X0, [X23]
	123 Move X9, 0x22BF000
	124 Move X8, [X0+184]
	125 Move X9, [X9+2368]
	126 Move X22, [X8]
	127 Move X0, [X9]
	128 Call 0x1B6FA0C
	129 Move X8, 0x22BF000
	130 Move X8, [X8+2376]
	131 Move X1, X22
	132 Move X3, X31
	133 Move X21, X0
	134 Move X2, [X8]
	135 Call TaskGenerator`1<ClientBootstrapResponse>..ctor, X0, X1, X2
	136 Move X8, [X23]
	137 Move X8, [X8+184]
	138 Move [X8+16], X21
	139 Move X8, 0x22BF000
	140 Move X8, [X8+2344]
	141 Move X0, X20
	142 Move X1, X21
	143 Move W2, W31
	144 Move X4, [X8]
	145 Move X3, X31
	146 Call Commands.Task, X0, X1, X2, X3
	147 Move [X19+48], X0
	148 Compare X0, 0
	149 JumpIfEqual {256}
	150 Move [X0+20], W31
	151 Move [X19+24], X0
	152 Move W0, 1
	153 Move [X19+16], W0
	154 Move X0, [X19+48]
	155 Move X21, [X19+32]
	156 Move TEMP, 0
	157 Not TEMP
	158 Move W8, TEMP
	159 Move [X19+16], W8
	160 Compare X0, 0
	161 JumpIfEqual {256}
	162 Move X1, X31
	163 Call Command.get_isAborted, X0
	164 Move X8, [X19+48]
	165 Compare X8, 0
	166 JumpIfEqual {256}
	167 Move TEMP, X0
	168 And TEMP, TEMP, 1
	169 Compare TEMP, 1
	170 JumpIfNotEqual {216}
	171 Move X8, [X8+24]
	172 Compare X8, 0
	173 JumpIfEqual {256}
	174 Move X9, 0x22BF000
	175 Move X9, [X9+1576]
	176 Move X20, [X8+40]
	177 Move X0, [X9]
	178 Move W9, [X0+224]
	179 Compare W9, 0
	180 JumpIfNotEqual {182}
	181 Call 0x1B6F8F8
	182 Move X8, 0x22BF000
	183 Move X9, 0x22BF000
	184 Move X10, 0x22BF000
	185 Move X8, [X8+2424]
	186 Move X9, [X9+2416]
	187 Move X10, [X10+2384]
	188 Move W0, 4096
	189 Move X1, [X8]
	190 Move X4, [X9]
	191 Move X5, [X10]
	192 Move W6, 328
	193 Move X2, X20
	194 Move X3, X31
	195 Move X7, X31
	196 Call Log.Error, X0, X1, X2, X3, X4, X5, X6
	197 Move V0, [X19+44]
	198 Move W8, [X19+40]
	199 Move S1, 20
	200 Move S2, 4
	201 Add S0, S0, S0
	202 NotImplemented "Instruction FMIN not yet implemented."
	203 NotImplemented "Instruction FCMP not yet implemented."
	204 Add W8, W8, 1
	205 NotImplemented "Instruction FCSEL not yet implemented."
	206 Move W0, W31
	207 Move X1, X31
	208 Move [X19+44], S0
	209 Move [X19+40], W8
	210 Call Commands.WaitForSeconds, V0, X0
	211 Move W8, 2
	212 Move [X19+24], X0
	213 Move [X19+16], W8
	214 Move W0, 1
	215 Move W0, W31
	216 Move W9, [X8+88]
	217 Move X19, [X8+96]
	218 Move X20, [X8+104]
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Move X8, 0x22BF000
	221 Move X8, [X8+2392]
	222 Move W1, W31
	223 Move X2, X31
	224 Move X0, [X8]
	225 Call LoadingScreenView.SetStatus, X0, X1
	226 Compare X21, 0
	227 JumpIfEqual {256}
	228 Move X0, [X21+64]
	229 Compare X0, 0
	230 JumpIfEqual {256}
	231 Move X1, X31
	232 Call CommandHandle.Cancel, X0
	233 Move X8, 0x22BF000
	234 Move X9, 0x22BF000
	235 Move X8, [X8+2408]
	236 Move X9, [X9+2352]
	237 Move X0, [X8]
	238 Move X1, [X9]
	239 Call 0x212A3B0, X0
	240 Compare X0, 0
	241 JumpIfEqual {256}
	242 Move X8, [X0+32]
	243 Compare X8, 0
	244 JumpIfEqual {256}
	245 Move W0, W31
	246 Move [X8+24], X19
	247 Move [X8+40], X20
	248 Move X20, [X31+48]
	249 Move X19, [X31+56]
	250 Move X22, [X31+32]
	251 Move X21, [X31+40]
	252 Move X30, [X31+16]
	253 Move X23, [X31+24]
	254 Add X31, X31, 64
	255 Return X0
	256 Call 0x1B6FA1C

Method: SpatialSys.CommandLib.Command System.Collections.Generic.IEnumerator<SpatialSys.CommandLib.Command>.get_Current()

Disassembly:
	0x01C8FEA8 ADRP X8, 0x22BE000
	0x01C8FEAC LDR X8, [X8 + 0x9A8]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01C8FEB0 MOVZ W1, 0x1
	0x01C8FEB4 LDR X0, [X8]
	0x01C8FEB8 BL 0x1B6E868
	0x01C8FEBC ADRP X8, 0x22BE000
	0x01C8FEC0 LDR X8, [X8 + 0xA40]
	0x01C8FEC4 MOV X19, X0
	0x01C8FEC8 LDR X8, [X8]
	0x01C8FECC MOV X0, X8
	0x01C8FED0 BL 0x1B6EA0C
	0x01C8FED4 MOVZ W1, 0x1
	0x01C8FED8 MOV X21, X0
	0x01C8FEDC BL 0x1C8D960
	0x01C8FEE0 CBZ X19, 0x1C8FFFC
	0x01C8FEE4 CBZ X21, 0x1C8FEFC

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x22BF000
	004 Move X0, [X0+2448]
	005 Call 0x1B6F804
	006 Call 0x1B6FA0C
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x22BF000
	011 Move X0, [X0+2456]
	012 Call 0x1B6F804
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1B6F8E8

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01C8FEE8 LDR X8, [X19]
	0x01C8FEEC MOV X0, X21

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

