Type: AnimalCompany.AppStartup/<BootstrapCommand>d__18

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01D38B60 MOV X0, X20
	0x01D38B64 LDR X1, [X8 + 0x40]
	0x01D38B68 BL 0x1C16E00
	0x01D38B6C CBZ X0, 0x1D38C54
	0x01D38B70 LDR W8, [X19 + 0x18]
	0x01D38B74 CBZ W8, 0x1D38C50
	0x01D38B78 STR X20, [X19 + 0x20]
	0x01D38B7C ADRP X8, 0x23BB000
	0x01D38B80 LDR X8, [X8 + 0x648]
	0x01D38B84 LDR X0, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01D390CC MOV X23, X0

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01D390D0 LDR X8, [X8]
	0x01D390D4 MOV X0, X8
	0x01D390D8 BL 0x1C16F10
	0x01D390DC MOV X1, X31
	0x01D390E0 MOV X24, X0
	0x01D390E4 BL 0x33BDD8C
	0x01D390E8 STP W26, W27, [X24 + 0x14]
	0x01D390EC STP W28, W29, [X24 + 0x1C]
	0x01D390F0 CBZ X23, 0x1D39968
	0x01D390F4 LDR X8, [X23]
	0x01D390F8 MOV X0, X24
	0x01D390FC LDR X1, [X8 + 0x40]
	0x01D39100 BL 0x1C16E00
	0x01D39104 CBZ X0, 0x1D39970
	0x01D39108 LDR W8, [X23 + 0x18]
	0x01D3910C CBZ W8, 0x1D3996C
	0x01D39110 STR X24, [X23 + 0x20]
	0x01D39114 ADRP X8, 0x23BA000
	0x01D39118 LDR X8, [X8 + 0x648]
	0x01D3911C LDR X0, [X8]
	0x01D39120 LDR W8, [X0 + 0xE0]
	0x01D39124 CBNZ W8, 0x1D3912C
	0x01D39128 BL 0x1C16DFC
	0x01D3912C MOV X0, X23
	0x01D39130 BL 0x1D335B0
	0x01D39134 MOV X0, X20
	0x01D39138 MOV X1, X31
	0x01D3913C BL 0x3C32E90
	0x01D39140 CBZ X0, 0x1D39968
	0x01D39144 ADRP X8, 0x23BA000
	0x01D39148 LDR X8, [X8 + 0xCC8]
	0x01D3914C MOV X2, X31
	0x01D39150 LDR X1, [X8]
	0x01D39154 BL 0x3C40E14
	0x01D39158 CBZ X0, 0x1D39968
	0x01D3915C MOV X1, X31
	0x01D39160 BL 0x3C32ECC
	0x01D39164 CBZ X0, 0x1D39968
	0x01D39168 ADRP X8, 0x23BA000
	0x01D3916C LDR X8, [X8 + 0xC78]
	0x01D39170 LDR X1, [X8]
	0x01D39174 BL 0x21E51FC
	0x01D39178 LDR X0, [X25]
	0x01D3917C MOVZ W1, 0x1
	0x01D39180 MOVZ W23, 0x1
	0x01D39184 BL 0x1C16D6C
	0x01D39188 LDR V0, [X22]
	0x01D3918C ADRP X8, 0x23BA000
	0x01D39190 LDP X25, X24, [X31 + 0x20]
	0x01D39194 MOV X20, X0
	0x01D39198 STR V0, [X31]
	0x01D3919C LDR X8, [X8 + 0xC80]
	0x01D391A0 LDR X8, [X8]
	0x01D391A4 MOV X0, X8
	0x01D391A8 BL 0x1C16F10
	0x01D391AC MOV X1, X31
	0x01D391B0 MOV X22, X0
	0x01D391B4 BL 0x33BDD8C
	0x01D391B8 LDR V0, [X31]
	0x01D391BC STR W23, [X22 + 0x14]
	0x01D391C0 STP X24, X25, [X22 + 0x28]
	0x01D391C4 STUR V0, [X22 + 0x18]
	0x01D391C8 CBZ X20, 0x1D39968
	0x01D391CC LDR X8, [X20]
	0x01D391D0 MOV X0, X22
	0x01D391D4 LDR X1, [X8 + 0x40]
	0x01D391D8 BL 0x1C16E00
	0x01D391DC CBZ X0, 0x1D39970
	0x01D391E0 LDR W8, [X20 + 0x18]
	0x01D391E4 CBZ W8, 0x1D3996C
	0x01D391E8 MOV X0, X20
	0x01D391EC STR X22, [X20 + 0x20]
	0x01D391F0 BL 0x1D335B0
	0x01D391F4 ADRP X8, 0x23BA000
	0x01D391F8 LDR X8, [X8 + 0xC90]
	0x01D391FC LDR X0, [X8]
	0x01D39200 LDR W8, [X0 + 0xE0]
	0x01D39204 CBNZ W8, 0x1D3920C
	0x01D39208 BL 0x1C16DFC
	0x01D3920C MOVZ W0, 0x1
	0x01D39210 MOVZ W1, 0x1
	0x01D39214 MOV X2, X31
	0x01D39218 MOVZ W22, 0x1
	0x01D3921C BL 0x3C47A5C
	0x01D39220 CBZ X21, 0x1D39968
	0x01D39224 STR X0, [X21 + 0x10]
	0x01D39228 ADRP X8, 0x23BA000
	0x01D3922C LDR X8, [X8 + 0xB60]
	0x01D39230 LDR X0, [X8]
	0x01D39234 BL 0x1C16F10
	0x01D39238 ADRP X8, 0x23BA000
	0x01D3923C LDR X8, [X8 + 0xC98]
	0x01D39240 MOV X1, X21
	0x01D39244 MOV X3, X31
	0x01D39248 MOV X20, X0
	0x01D3924C LDR X2, [X8]
	0x01D39250 BL 0x35BC5A4
	0x01D39254 MOV X0, X20
	0x01D39258 MOV W1, W31
	0x01D3925C MOV X2, X31
	0x01D39260 BL 0x35BADE8
	0x01D39264 STR X0, [X19 + 0x18]
	0x01D39268 STR W22, [X19 + 0x10]
	0x01D3926C B 0x1D39944
	0x01D39270 MOVN W8, 0x0
	0x01D39274 STR W8, [X19 + 0x10]
	0x01D39278 ADRP X8, 0x23BA000
	0x01D3927C LDR X8, [X8 + 0x958]
	0x01D39280 LDR X0, [X8]
	0x01D39284 BL 0x1C16F10
	0x01D39288 ADRP X8, 0x23BA000
	0x01D3928C LDR X8, [X8 + 0xBF0]
	0x01D39290 MOV X1, X20
	0x01D39294 MOV X3, X31
	0x01D39298 MOV X21, X0
	0x01D3929C LDR X2, [X8]
	0x01D392A0 BL 0x35BC6F0
	0x01D392A4 MOV X0, X21
	0x01D392A8 MOV W1, W31
	0x01D392AC MOV X2, X31
	0x01D392B0 BL 0x35BBFC4
	0x01D392B4 STR X0, [X19 + 0x18]
	0x01D392B8 MOVZ W8, 0x5
	0x01D392BC B 0x1D3993C
	0x01D392C0 MOVN W8, 0x0
	0x01D392C4 STR W8, [X19 + 0x10]
	0x01D392C8 CBZ X20, 0x1D39968
	0x01D392CC LDR X1, [X19 + 0x30]
	0x01D392D0 BL 0x1D373B0
	0x01D392D4 ADRP X24, 0x23BA000
	0x01D392D8 LDR X24, [X24 + 0x758]
	0x01D392DC MOV W21, W0
	0x01D392E0 STR W0, [X31 + 0x14]
	0x01D392E4 ADD X1, X31, 0x14
	0x01D392E8 LDR X8, [X24]
	0x01D392EC MOV X0, X8
	0x01D392F0 BL 0x1C16E04
	0x01D392F4 ADRP X8, 0x23BA000
	0x01D392F8 LDR X8, [X8 + 0xB50]
	0x01D392FC MOV X22, X0
	0x01D39300 LDR X8, [X8]
	0x01D39304 LDR W9, [X8 + 0xE0]
	0x01D39308 CBNZ W9, 0x1D39314
	0x01D3930C MOV X0, X8
	0x01D39310 BL 0x1C16DFC
	0x01D39314 ADRP X8, 0x23BA000
	0x01D39318 LDR X8, [X8 + 0xCC0]
	0x01D3931C MOV X1, X22
	0x01D39320 MOV X2, X31
	0x01D39324 LDR X0, [X8]
	0x01D39328 BL 0x1DD33A8
	0x01D3932C ADRP X8, 0x23BA000
	0x01D39330 ADRP X9, 0x23BA000
	0x01D39334 LDR X8, [X8 + 0xB18]
	0x01D39338 LDR X9, [X9 + 0xAC0]
	0x01D3933C LDR X0, [X8]
	0x01D39340 LDR X1, [X9]
	0x01D39344 BL 0x2241FB8
	0x01D39348 LDR X23, [X19 + 0x28]
	0x01D3934C CBZ X23, 0x1D39968
	0x01D39350 MOV X22, X0
	0x01D39354 MOVZ W1, 0x2E
	0x01D39358 MOV X0, X23
	0x01D3935C MOV X2, X31
	0x01D39360 BL 0x322C668
	0x01D39364 MOV W2, W0
	0x01D39368 MOV X0, X23
	0x01D3936C MOV W1, W31
	0x01D39370 MOV X3, X31
	0x01D39374 BL 0x3228DE4
	0x01D39378 MOV X23, X0
	0x01D3937C LDR X0, [X24]
	0x01D39380 ADD X1, X31, 0x10
	0x01D39384 STR W21, [X31 + 0x10]
	0x01D39388 BL 0x1C16E04
	0x01D3938C ADRP X8, 0x23BA000
	0x01D39390 LDR X8, [X8 + 0xCA8]
	0x01D39394 MOV X2, X0
	0x01D39398 MOV X1, X23
	0x01D3939C MOV X3, X31
	0x01D393A0 LDR X8, [X8]
	0x01D393A4 MOV X0, X8
	0x01D393A8 BL 0x3227BD4
	0x01D393AC CBZ X22, 0x1D39968
	0x01D393B0 LDR X8, [X22 + 0x20]
	0x01D393B4 CBZ X8, 0x1D39968
	0x01D393B8 STR X0, [X8 + 0x30]
	0x01D393BC ADRP X8, 0x23BA000
	0x01D393C0 LDR X8, [X8 + 0xC90]
	0x01D393C4 LDR X0, [X8]
	0x01D393C8 LDR W8, [X0 + 0xE0]
	0x01D393CC CBNZ W8, 0x1D393D4
	0x01D393D0 BL 0x1C16DFC
	0x01D393D4 MOVZ W0, 0x3
	0x01D393D8 MOVZ W1, 0x1
	0x01D393DC MOV X2, X31
	0x01D393E0 BL 0x3C47A5C
	0x01D393E4 STR X0, [X19 + 0x38]
	0x01D393E8 MOVZ W0, 0x2
	0x01D393EC MOVZ W1, 0x1
	0x01D393F0 MOV X2, X31
	0x01D393F4 BL 0x3C47A5C
	0x01D393F8 LDR X8, [X19 + 0x38]
	0x01D393FC STR X0, [X19 + 0x40]
	0x01D39400 CBZ X8, 0x1D39968
	0x01D39404 MOV X0, X8
	0x01D39408 MOV W1, W31
	0x01D3940C MOV X2, X31
	0x01D39410 BL 0x3C3156C
	0x01D39414 LDR X0, [X19 + 0x40]
	0x01D39418 CBZ X0, 0x1D39968
	0x01D3941C MOV W1, W31
	0x01D39420 MOV X2, X31
	0x01D39424 BL 0x3C3156C
	0x01D39428 ADRP X8, 0x23BA000
	0x01D3942C LDR X8, [X8 + 0x958]
	0x01D39430 LDR X0, [X8]
	0x01D39434 BL 0x1C16F10
	0x01D39438 ADRP X8, 0x23BA000
	0x01D3943C LDR X8, [X8 + 0xC38]
	0x01D39440 MOV X1, X20
	0x01D39444 MOV X3, X31
	0x01D39448 MOV X21, X0
	0x01D3944C LDR X2, [X8]
	0x01D39450 BL 0x35BC6F0
	0x01D39454 MOV X0, X21
	0x01D39458 MOV W1, W31
	0x01D3945C MOV X2, X31
	0x01D39460 BL 0x35BBFC4
	0x01D39464 STR X0, [X19 + 0x18]
	0x01D39468 MOVZ W8, 0x3
	0x01D3946C B 0x1D3993C
	0x01D39470 MOVN W8, 0x0
	0x01D39474 STR W8, [X19 + 0x10]
	0x01D39478 ADRP X8, 0x23BA000
	0x01D3947C LDR X8, [X8 + 0x958]
	0x01D39480 LDR X0, [X8]
	0x01D39484 BL 0x1C16F10
	0x01D39488 ADRP X8, 0x23BA000
	0x01D3948C LDR X8, [X8 + 0xC30]
	0x01D39490 MOV X1, X20
	0x01D39494 MOV X3, X31
	0x01D39498 MOV X21, X0
	0x01D3949C LDR X2, [X8]
	0x01D394A0 BL 0x35BC6F0
	0x01D394A4 MOV X0, X21
	0x01D394A8 MOV W1, W31
	0x01D394AC MOV X2, X31
	0x01D394B0 BL 0x35BBFC4
	0x01D394B4 STR X0, [X19 + 0x18]
	0x01D394B8 MOVZ W8, 0x4
	0x01D394BC B 0x1D3993C
	0x01D394C0 MOVN W8, 0x0
	0x01D394C4 STR W8, [X19 + 0x10]
	0x01D394C8 ADRP X8, 0x23BA000
	0x01D394CC LDR X8, [X8 + 0xC90]
	0x01D394D0 LDR X0, [X8]
	0x01D394D4 LDR W8, [X0 + 0xE0]
	0x01D394D8 CBNZ W8, 0x1D394E0
	0x01D394DC BL 0x1C16DFC
	0x01D394E0 MOVZ W0, 0x1
	0x01D394E4 MOV X1, X31
	0x01D394E8 BL 0x3C46F6C
	0x01D394EC AND X0, X0, 0x0
	0x01D394F0 MOV X1, X31
	0x01D394F4 BL 0x3C46EB4
	0x01D394F8 ADRP X21, 0x23BA000
	0x01D394FC LDR X21, [X21 + 0xC50]
	0x01D39500 LDR X0, [X21]
	0x01D39504 LDR W8, [X0 + 0xE0]
	0x01D39508 CBNZ W8, 0x1D39510
	0x01D3950C BL 0x1C16DFC
	0x01D39510 ADRP X22, 0x269F000
	0x01D39514 LDRB W8, [X22 + 0x78D]
	0x01D39518 CBNZ W8, 0x1D39530
	0x01D3951C ADRP X0, 0x23BA000
	0x01D39520 LDR X0, [X0 + 0xC50]
	0x01D39524 BL 0x1C16CF4
	0x01D39528 MOVZ W8, 0x1
	0x01D3952C STRB W8, [X22 + 0x78D]
	0x01D39530 LDR X0, [X21]
	0x01D39534 LDR W8, [X0 + 0xE0]
	0x01D39538 CBNZ W8, 0x1D39544
	0x01D3953C BL 0x1C16DFC
	0x01D39540 LDR X0, [X21]
	0x01D39544 LDR X8, [X0 + 0xB8]
	0x01D39548 LDRB W8, [X8]
	0x01D3954C CBNZ W8, 0x1D39590
	0x01D39550 ADRP X8, 0x23BA000
	0x01D39554 LDR X8, [X8 + 0x970]
	0x01D39558 LDR X0, [X8]
	0x01D3955C LDR W8, [X0 + 0xE0]
	0x01D39560 CBNZ W8, 0x1D39568
	0x01D39564 BL 0x1C16DFC
	0x01D39568 MOV X0, X31
	0x01D3956C BL 0x3C03278
	0x01D39570 TBNZ X0, 0x0, 0x1D39590
	0x01D39574 LDR X0, [X21]
	0x01D39578 LDR W8, [X0 + 0xE0]
	0x01D3957C CBNZ W8, 0x1D39584
	0x01D39580 BL 0x1C16DFC
	0x01D39584 MOV X0, X31
	0x01D39588 MOV X1, X31
	0x01D3958C BL 0x34DA528
	0x01D39590 CBZ X20, 0x1D39968
	0x01D39594 ADRP X8, 0x23BA000
	0x01D39598 LDR X8, [X8 + 0xCB8]
	0x01D3959C MOV X0, X20
	0x01D395A0 LDR X1, [X8]
	0x01D395A4 BL 0x1D37C10
	0x01D395A8 CBZ X0, 0x1D39968
	0x01D395AC ADRP X8, 0x23BA000
	0x01D395B0 LDR X8, [X8 + 0xC70]
	0x01D395B4 MOV X21, X0
	0x01D395B8 LDR X1, [X8]
	0x01D395BC BL 0x21E51FC
	0x01D395C0 ADRP X8, 0x23BA000
	0x01D395C4 LDR X8, [X8 + 0xC58]
	0x01D395C8 MOV X0, X21
	0x01D395CC LDR X1, [X8]
	0x01D395D0 BL 0x21E51FC
	0x01D395D4 ADRP X8, 0x23BA000
	0x01D395D8 LDR X8, [X8 + 0xCD8]
	0x01D395DC MOV X0, X20
	0x01D395E0 LDR X1, [X8]
	0x01D395E4 BL 0x1D37C10
	0x01D395E8 CBZ X0, 0x1D39968
	0x01D395EC ADRP X8, 0x23BA000
	0x01D395F0 LDR X8, [X8 + 0xC68]
	0x01D395F4 MOV X21, X0
	0x01D395F8 LDR X1, [X8]
	0x01D395FC BL 0x21E51FC
	0x01D39600 ADRP X8, 0x23BA000
	0x01D39604 LDR X8, [X8 + 0xC60]
	0x01D39608 MOV X0, X21
	0x01D3960C LDR X1, [X8]
	0x01D39610 BL 0x21E51FC
	0x01D39614 ADRP X8, 0x23BA000
	0x01D39618 LDR X8, [X8 + 0xC28]
	0x01D3961C MOV X0, X20
	0x01D39620 LDR X1, [X8]
	0x01D39624 BL 0x22C96CC
	0x01D39628 ADRP X8, 0x23BA000
	0x01D3962C LDR X8, [X8 + 0xB50]
	0x01D39630 LDR X0, [X8]
	0x01D39634 LDR W8, [X0 + 0xE0]
	0x01D39638 CBNZ W8, 0x1D39640
	0x01D3963C BL 0x1C16DFC
	0x01D39640 ADRP X8, 0x23BA000
	0x01D39644 LDR X8, [X8 + 0xCB0]
	0x01D39648 MOV X1, X31
	0x01D3964C LDR X0, [X8]
	0x01D39650 BL 0x1DD3244
	0x01D39654 ADRP X8, 0x23BA000
	0x01D39658 LDR X8, [X8 + 0xCE8]
	0x01D3965C MOVZ W1, 0x1
	0x01D39660 MOV X2, X31
	0x01D39664 MOVZ W22, 0x1
	0x01D39668 LDR X0, [X8]
	0x01D3966C BL 0x1DAA730
	0x01D39670 ADRP X8, 0x23BA000
	0x01D39674 LDR X8, [X8 + 0x958]
	0x01D39678 LDR X0, [X8]
	0x01D3967C BL 0x1C16F10
	0x01D39680 ADRP X8, 0x23BA000
	0x01D39684 LDR X8, [X8 + 0xC40]
	0x01D39688 MOV X1, X20
	0x01D3968C MOV X3, X31
	0x01D39690 MOV X21, X0
	0x01D39694 LDR X2, [X8]
	0x01D39698 BL 0x35BC6F0
	0x01D3969C MOV X0, X21
	0x01D396A0 MOV W1, W31
	0x01D396A4 MOV X2, X31
	0x01D396A8 BL 0x35BBFC4
	0x01D396AC MOVZ W8, 0x2

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+96], X30
	003 Move [X31+104], X21
	004 Move [X31+112], X20
	005 Move [X31+120], X19
	006 Move X20, 0x26A0000
	007 Move W8, [X20+1788]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {87}
	013 Move X0, 0x23BB000
	014 Move X0, [X0+2720]
	015 Call 0x1C17CF4
	016 Move X0, 0x23BB000
	017 Move X0, [X0+1608]
	018 Call 0x1C17CF4
	019 Move X0, 0x23BB000
	020 Move X0, [X0+2728]
	021 Call 0x1C17CF4
	022 Move X0, 0x23BB000
	023 Move X0, [X0+2736]
	024 Call 0x1C17CF4
	025 Move X0, 0x23BB000
	026 Move X0, [X0+2744]
	027 Call 0x1C17CF4
	028 Move X0, 0x23BB000
	029 Move X0, [X0+2392]
	030 Call 0x1C17CF4
	031 Move X0, 0x23BB000
	032 Move X0, [X0+1880]
	033 Call 0x1C17CF4
	034 Move X0, 0x23BB000
	035 Move X0, [X0+1928]
	036 Call 0x1C17CF4
	037 Move X0, 0x23BB000
	038 Move X0, [X0+2752]
	039 Call 0x1C17CF4
	040 Move X0, 0x23BB000
	041 Move X0, [X0+2760]
	042 Call 0x1C17CF4
	043 Move X0, 0x23BB000
	044 Move X0, [X0+2768]
	045 Call 0x1C17CF4
	046 Move X0, 0x23BB000
	047 Move X0, [X0+2776]
	048 Call 0x1C17CF4
	049 Move X0, 0x23BB000
	050 Move X0, [X0+2784]
	051 Call 0x1C17CF4
	052 Move X0, 0x23BB000
	053 Move X0, [X0+2792]
	054 Call 0x1C17CF4
	055 Move X0, 0x23BB000
	056 Move X0, [X0+2800]
	057 Call 0x1C17CF4
	058 Move X0, 0x23BB000
	059 Move X0, [X0+2808]
	060 Call 0x1C17CF4
	061 Move X0, 0x23BB000
	062 Move X0, [X0+2816]
	063 Call 0x1C17CF4
	064 Move X0, 0x23BB000
	065 Move X0, [X0+2824]
	066 Call 0x1C17CF4
	067 Move X0, 0x23BB000
	068 Move X0, [X0+2832]
	069 Call 0x1C17CF4
	070 Move X0, 0x23BB000
	071 Move X0, [X0+2840]
	072 Call 0x1C17CF4
	073 Move X0, 0x23BB000
	074 Move X0, [X0+2848]
	075 Call 0x1C17CF4
	076 Move X0, 0x23BB000
	077 Move X0, [X0+2856]
	078 Call 0x1C17CF4
	079 Move X0, 0x23BB000
	080 Move X0, [X0+2864]
	081 Call 0x1C17CF4
	082 Move X0, 0x23BB000
	083 Move X0, [X0+2872]
	084 Call 0x1C17CF4
	085 Move W8, 1
	086 Move [X20+1788], W8
	087 Move W8, [X19+16]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X9, -19177472
	090 Add X9, X9, 1464
	091 NotImplemented "Instruction ADR not yet implemented."
	092 Move W11, [X9]
	093 Add X10, X10, X11
	094 CallNoReturn X10
	095 Move TEMP, 0
	096 Not TEMP
	097 Move W8, TEMP
	098 Move [X19+16], W8
	099 Move X8, 0x23BB000
	100 Move X8, [X8+2792]
	101 Move X0, [X8]
	102 Call 0x1C17F10
	103 Move X1, X31
	104 Move X20, X0
	105 Call Object..ctor, X0
	106 Move [X19+40], X20
	107 Compare X20, 0
	108 JumpIfEqual {410}
	109 Move X8, [X19+32]
	110 Move X9, 1
	111 NotImplemented "Instruction MOVK not yet implemented."
	112 Move W1, W31
	113 Move [X20+16], X8
	114 Move [X19+48], X9
	115 Move X8, 0x23BB000
	116 Move X8, [X8+2760]
	117 Move X0, [X8]
	118 Call 0x1C17D6C
	119 Move [X19+56], X0
	120 Move W0, W31
	121 Move X0, [X19+64]
	122 Move X21, [X19+32]
	123 Move TEMP, 0
	124 Not TEMP
	125 Move W8, TEMP
	126 Move [X19+16], W8
	127 Compare X0, 0
	128 JumpIfEqual {410}
	129 Move X1, X31
	130 Call Command.get_isAborted, X0
	131 Move TEMP, X0
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfNotEqual {337}
	135 Move X8, [X19+64]
	136 Compare X8, 0
	137 JumpIfEqual {410}
	138 Move X8, [X8+24]
	139 Compare X8, 0
	140 JumpIfEqual {410}
	141 Move X9, 0x23BB000
	142 Move X9, [X9+1928]
	143 Move X20, [X8+40]
	144 Move X0, [X9]
	145 Move W9, [X0+224]
	146 Compare W9, 0
	147 JumpIfNotEqual {149}
	148 Call 0x1C17DFC
	149 Move X8, 0x23BB000
	150 Move X9, 0x23BB000
	151 Move X10, 0x23BB000
	152 Move X8, [X8+2856]
	153 Move X9, [X9+2848]
	154 Move X10, [X10+2816]
	155 Move W0, 4096
	156 Move X1, [X8]
	157 Move X4, [X9]
	158 Move X5, [X10]
	159 Move W6, 349
	160 Move X2, X20
	161 Move X3, X31
	162 Move X7, X31
	163 Call Log.Error, X0, X1, X2, X3, X4, X5, X6
	164 Move V0, [X19+52]
	165 Move W8, [X19+48]
	166 Move S1, 20
	167 Move S2, 4
	168 Add S0, S0, S0
	169 NotImplemented "Instruction FMIN not yet implemented."
	170 NotImplemented "Instruction FCMP not yet implemented."
	171 Add W8, W8, 1
	172 NotImplemented "Instruction FCSEL not yet implemented."
	173 Move W0, W31
	174 Move X1, X31
	175 Move [X19+52], S0
	176 Move [X19+48], W8
	177 Call Commands.WaitForSeconds, V0, X0
	178 Move [X19+24], X0
	179 Move W8, 3
	180 Move X8, [X19+40]
	181 Move TEMP, 0
	182 Not TEMP
	183 Move W9, TEMP
	184 Move [X19+16], W9
	185 Compare X8, 0
	186 JumpIfEqual {410}
	187 Move X8, [X8+56]
	188 Move [X19+56], X8
	189 Move TEMP, 0
	190 Not TEMP
	191 Move W8, TEMP
	192 Move [X19+16], W8
	193 Move [X19+64], X31
	194 Move X8, 0x23BB000
	195 Move X8, [X8+2808]
	196 Move X0, [X8]
	197 Call 0x1C17F10
	198 Move X1, X31
	199 Move X20, X0
	200 Call Object..ctor, X0
	201 Move W8, [X19+48]
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move X9, 0x23BB000
	204 Move X9, [X9+1880]
	205 Add X1, X31, 48
	206 Move [X31+48], W8
	207 Move X0, [X9]
	208 Call 0x1C17E04
	209 Move X8, 0x23BB000
	210 Move X8, [X8+2864]
	211 Move X1, X0
	212 Move X2, X31
	213 Move X8, [X8]
	214 Move X0, X8
	215 Call String.Format, X0, X1
	216 Move X8, 0x23BB000
	217 Move X8, [X8+2832]
	218 Move X0, [X8]
	219 Move W1, 1
	220 Move X2, X31
	221 Call LoadingScreenView.SetStatus, X0, X1
	222 Move X8, 0x23BB000
	223 Move X8, [X8+2720]
	224 Move X0, [X8]
	225 Call 0x1C17F10
	226 Move X1, X31
	227 Move X21, X0
	228 Call ApiBootstrapRequest..ctor, X0
	229 Compare X20, 0
	230 JumpIfEqual {410}
	231 Move [X20+16], X21
	232 Compare X21, 0
	233 JumpIfEqual {410}
	234 Move X8, [X19+56]
	235 Move [X21+16], X8
	236 Move X8, 0x23BB000
	237 Move X8, [X8+2776]
	238 Move X0, [X8]
	239 Call 0x1C17F10
	240 Move X8, 0x23BB000
	241 Move X8, [X8+2800]
	242 Move X1, X20
	243 Move X3, X31
	244 Move X21, X0
	245 Move X2, [X8]
	246 Call TaskGenerator`1<ClientBootstrapResponse>..ctor, X0, X1, X2
	247 Move X8, 0x23BB000
	248 Move X9, 0x23BB000
	249 Move X8, [X8+2872]
	250 Move X9, [X9+2744]
	251 Move X1, X21
	252 Move W2, W31
	253 Move X0, [X8]
	254 Move X4, [X9]
	255 Move X3, X31
	256 Call Commands.Task, X0, X1, X2, X3
	257 Move [X19+64], X0
	258 Compare X0, 0
	259 JumpIfEqual {410}
	260 Move [X0+20], W31
	261 Move [X19+24], X0
	262 Move W0, 1
	263 Move [X19+16], W0
	264 Move TEMP, 0
	265 Not TEMP
	266 Move W8, TEMP
	267 Move [X19+16], W8
	268 Move X8, 0x23BB000
	269 Move X8, [X8+2736]
	270 Move W1, 1
	271 Move X0, [X8]
	272 Call 0x1C17D6C
	273 Move X8, [X19+40]
	274 Compare X8, 0
	275 JumpIfEqual {410}
	276 NotImplemented "Instruction LDUR not yet implemented."
	277 NotImplemented "Instruction LDUR not yet implemented."
	278 NotImplemented "Instruction LDUR not yet implemented."
	279 Move X8, 0x23BB000
	280 Move X8, [X8+2728]
	281 Move X20, X0
	282 Move [X31+16], V2
	283 Move [X31+24], V1
	284 Move [X31], V0
	285 Move X0, [X8]
	286 Call 0x1C17F10
	287 Move X1, X31
	288 Move X21, X0
	289 Call Object..ctor, X0
	290 Move V1, [X31+16]
	291 Move V0, [X31+32]
	292 Move V2, [X31]
	293 Move [X21+56], V0
	294 Move [X21+40], V1
	295 Move [X21+24], V2
	296 Compare X20, 0
	297 JumpIfEqual {410}
	298 Move X8, [X20]
	299 Move X0, X21
	300 Move X1, [X8+64]
	301 Call 0x1C17E00
	302 Compare X0, 0
	303 JumpIfEqual {411}
	304 Move W8, [X20+24]
	305 Compare W8, 0
	306 JumpIfEqual {414}
	307 Move [X20+32], X21
	308 Move X8, 0x23BB000
	309 Move X8, [X8+1608]
	310 Move X0, [X8]
	311 Move W8, [X0+224]
	312 Compare W8, 0
	313 JumpIfNotEqual {315}
	314 Call 0x1C17DFC
	315 Move X0, X20
	316 Call App.ExecuteActionOrDelay, X0
	317 Move X8, 0x23BB000
	318 Move X9, 0x23BB000
	319 Move X8, [X8+2840]
	320 Move X9, [X9+2752]
	321 Move X0, [X8]
	322 Move X1, [X9]
	323 Call 0x2242FB8, X0
	324 Compare X0, 0
	325 JumpIfEqual {410}
	326 Move X8, [X19+40]
	327 Compare X8, 0
	328 JumpIfEqual {410}
	329 Move X9, [X0+32]
	330 Compare X9, 0
	331 JumpIfEqual {410}
	332 Move X10, [X8+32]
	333 Move W0, W31
	334 Move [X9+24], X10
	335 Move X8, [X8+40]
	336 Move [X9+40], X8
	337 Move X9, [X19+64]
	338 Compare X9, 0
	339 JumpIfEqual {410}
	340 Move X8, [X19+40]
	341 NotImplemented "Instruction LDUR not yet implemented."
	342 NotImplemented "Instruction LDUR not yet implemented."
	343 NotImplemented "Instruction LDUR not yet implemented."
	344 Move [X31+64], V1
	345 Move [X31+72], V0
	346 Move [X31+3], V2
	347 Compare X8, 0
	348 JumpIfEqual {410}
	349 Move V1, [X31+64]
	350 Move V0, [X31+80]
	351 Move V2, [X31+3]
	352 Move [X8+56], V0
	353 Move [X8+40], V1
	354 Move [X8+24], V2
	355 Move X20, [X19+40]
	356 Compare X20, 0
	357 JumpIfEqual {410}
	358 Move X8, [X20+56]
	359 Compare X8, 0
	360 JumpIfEqual {410}
	361 Move X8, [X8+24]
	362 Compare X8, 0
	363 JumpIfEqual {385}
	364 Move X21, [X20+72]
	365 Compare X21, 0
	366 JumpIfNotEqual {379}
	367 Move X8, 0x23BB000
	368 Move X8, [X8+2392]
	369 Move X0, [X8]
	370 Call 0x1C17F10
	371 Move X8, 0x23BB000
	372 Move X8, [X8+2784]
	373 Move X1, X20
	374 Move X3, X31
	375 Move X21, X0
	376 Move X2, [X8]
	377 Call CoroutineGenerator..ctor, X0, X1, X2
	378 Move [X20+72], X21
	379 Move X0, X21
	380 Move W1, W31
	381 Move X2, X31
	382 Call Commands.Coroutine, X0, X1
	383 Move [X19+24], X0
	384 Move W8, 2
	385 Move W8, [X20+24]
	386 NotImplemented "Instruction CMP not yet implemented."
	387 Move X8, 0x23BB000
	388 Move X8, [X8+2824]
	389 Move W1, W31
	390 Move X2, X31
	391 Move X0, [X8]
	392 Call LoadingScreenView.SetStatus, X0, X1
	393 Compare X21, 0
	394 JumpIfEqual {410}
	395 Move X0, [X21+64]
	396 Compare X0, 0
	397 JumpIfEqual {410}
	398 Move X1, X31
	399 Call CommandHandle.Cancel, X0
	400 Move W8, 4
	401 Move [X19+24], X31
	402 Move [X19+16], W8
	403 Move W0, 1
	404 Move X20, [X31+112]
	405 Move X19, [X31+120]
	406 Move X30, [X31+96]
	407 Move X21, [X31+104]
	408 Add X31, X31, 128
	409 Return X0
	410 Call 0x1C17F20
	411 Call 0x1C17F44
	412 Move X1, X31
	413 Call 0x1C17DEC
	414 Call 0x1C17F28

Method: SpatialSys.CommandLib.Command System.Collections.Generic.IEnumerator<SpatialSys.CommandLib.Command>.get_Current()

Disassembly:
	0x01D396B0 STR X0, [X19 + 0x18]
	0x01D396B4 STR W8, [X19 + 0x10]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01D396B8 B 0x1D39944
	0x01D396BC MOVN W8, 0x0
	0x01D396C0 STR W8, [X19 + 0x10]
	0x01D396C4 CBZ X20, 0x1D39968
	0x01D396C8 ADRP X8, 0x23BA000
	0x01D396CC LDR X8, [X8 + 0xC10]
	0x01D396D0 MOV X0, X20
	0x01D396D4 LDR X1, [X8]
	0x01D396D8 BL 0x22C96CC
	0x01D396DC ADRP X8, 0x23BA000
	0x01D396E0 LDR X8, [X8 + 0xBF8]
	0x01D396E4 MOV X0, X20
	0x01D396E8 LDR X1, [X8]
	0x01D396EC BL 0x22C96CC

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x23BB000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x23BB000
	011 Move X0, [X0+2888]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01D396F0 ADRP X8, 0x23BA000
	0x01D396F4 LDR X8, [X8 + 0xC08]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

