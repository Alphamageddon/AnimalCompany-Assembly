Type: AnimalCompany.CategoryController

Method: System.Void Awake()

Disassembly:
	0x01D6052C MOV X1, X21
	0x01D60530 BL 0x1C16E00
	0x01D60534 CBNZ X0, 0x1D60540
	0x01D60538 B 0x1D605B0
	0x01D6053C STR X31, [X23 + 0x20]
	0x01D60540 LDR X23, [X19 + 0x48]
	0x01D60544 CBZ X23, 0x1D605D8
	0x01D60548 LDR X0, [X22]
	0x01D6054C ADRP X21, 0x2395000
	0x01D60550 LDR X20, [X23 + 0x28]
	0x01D60554 LDR X21, [X21 + 0x6E0]
	0x01D60558 BL 0x1C16F10
	0x01D6055C LDR X2, [X21]
	0x01D60560 MOV X1, X19
	0x01D60564 MOV X3, X31
	0x01D60568 MOV X21, X0
	0x01D6056C BL 0x2A6B948
	0x01D60570 MOV X0, X20
	0x01D60574 MOV X1, X21
	0x01D60578 MOV X2, X31
	0x01D6057C BL 0x33C0DE4
	0x01D60580 CBZ X0, 0x1D605BC
	0x01D60584 LDR X21, [X22]
	0x01D60588 MOV X20, X0
	0x01D6058C MOV X1, X21
	0x01D60590 BL 0x1C16E00
	0x01D60594 CBZ X0, 0x1D605B0
	0x01D60598 STR X0, [X23 + 0x28]
	0x01D6059C LDR X21, [X22]
	0x01D605A0 MOV X0, X20
	0x01D605A4 MOV X1, X21
	0x01D605A8 BL 0x1C16E00

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2679000
	005 Move W8, [X20+2099]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2396000
	012 Move X0, [X0+1656]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2099], W8
	016 Move W0, [X19+40]
	017 Move X19, [X19+80]
	018 Compare W0, 0
	019 JumpIfEqual {26}
	020 Move X1, X31
	021 Call ApiAvatarItemTypeUtil.GetPrettyName, X0
	022 Compare X19, 0
	023 JumpIfEqual {39}
	024 Move X8, [X19]
	025 Move X1, X0
	026 Compare X19, 0
	027 JumpIfEqual {39}
	028 Move X9, 0x2396000
	029 Move X8, [X19]
	030 Move X9, [X9+1656]
	031 Move X1, [X9]
	032 Move X3, [X8+1368]
	033 Move X2, [X8+1376]
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 CallNoReturn X3
	039 Call 0x1C17F20

Method: System.Void SetAlpha(System.Single f)

Disassembly:
	0x01D605AC CBNZ X0, 0x1D605C0
	0x01D605B0 MOV X0, X20
	0x01D605B4 MOV X1, X21
	0x01D605B8 BL 0x1C171E0
	0x01D605BC STR X31, [X23 + 0x28]
	0x01D605C0 MOV X0, X19
	0x01D605C4 LDP X20, X19, [X31 + 0x20]
	0x01D605C8 LDP X22, X21, [X31 + 0x10]
	0x01D605CC MOV W1, W31
	0x01D605D0 LDP X30, X23, [X31], #0x30
	0x01D605D4 B 0x1D60950
	0x01D605D8 BL 0x1C16F20
	0x01D605DC SUB X31, X31, 0x80
	0x01D605E0 STP X30, X25, [X31 + 0x40]
	0x01D605E4 STP X24, X23, [X31 + 0x50]
	0x01D605E8 STP X22, X21, [X31 + 0x60]
	0x01D605EC STP X20, X19, [X31 + 0x70]
	0x01D605F0 ADRP X20, 0x2678000
	0x01D605F4 LDRB W8, [X20 + 0x844]
	0x01D605F8 MOV X19, X0
	0x01D605FC TBNZ X8, 0x0, 0x1D6068C
	0x01D60600 ADRP X0, 0x2395000
	0x01D60604 LDR X0, [X0 + 0x6E8]
	0x01D60608 BL 0x1C16CF4
	0x01D6060C ADRP X0, 0x2393000
	0x01D60610 LDR X0, [X0 + 0xA28]
	0x01D60614 BL 0x1C16CF4
	0x01D60618 ADRP X0, 0x2395000
	0x01D6061C LDR X0, [X0 + 0x6F0]
	0x01D60620 BL 0x1C16CF4
	0x01D60624 ADRP X0, 0x2395000
	0x01D60628 LDR X0, [X0 + 0x6F8]
	0x01D6062C BL 0x1C16CF4
	0x01D60630 ADRP X0, 0x2395000
	0x01D60634 LDR X0, [X0 + 0x700]
	0x01D60638 BL 0x1C16CF4
	0x01D6063C ADRP X0, 0x2395000
	0x01D60640 LDR X0, [X0 + 0x708]
	0x01D60644 BL 0x1C16CF4
	0x01D60648 ADRP X0, 0x2395000
	0x01D6064C LDR X0, [X0 + 0x710]
	0x01D60650 BL 0x1C16CF4
	0x01D60654 ADRP X0, 0x2395000
	0x01D60658 LDR X0, [X0 + 0x718]
	0x01D6065C BL 0x1C16CF4
	0x01D60660 ADRP X0, 0x2395000
	0x01D60664 LDR X0, [X0 + 0x720]
	0x01D60668 BL 0x1C16CF4
	0x01D6066C ADRP X0, 0x2395000
	0x01D60670 LDR X0, [X0 + 0x728]
	0x01D60674 BL 0x1C16CF4
	0x01D60678 ADRP X0, 0x2395000
	0x01D6067C LDR X0, [X0 + 0x730]
	0x01D60680 BL 0x1C16CF4
	0x01D60684 MOVZ W8, 0x1
	0x01D60688 STRB W8, [X20 + 0x844]
	0x01D6068C STP X31, X31, [X31 + 0x20]
	0x01D60690 STR X31, [X31 + 0x30]
	0x01D60694 LDR X0, [X19 + 0xB0]
	0x01D60698 CBZ X0, 0x1D608DC
	0x01D6069C ADRP X8, 0x2395000
	0x01D606A0 LDR X8, [X8 + 0x708]
	0x01D606A4 ADRP X20, 0x2395000
	0x01D606A8 ADRP X22, 0x2395000
	0x01D606AC LDR X1, [X8]
	0x01D606B0 LDR X20, [X20 + 0x6F8]
	0x01D606B4 LDR X22, [X22 + 0x6F0]
	0x01D606B8 ADD X8, X31, 0x8
	0x01D606BC BL 0x301CB58
	0x01D606C0 LDUR V0, [X31 + 0x8]
	0x01D606C4 LDR X8, [X31 + 0x18]
	0x01D606C8 STR V0, [X31 + 0x2]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2679000
	007 Move W8, [X20+2100]
	008 Move V8, V0
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2396000
	015 Move X0, [X0+1664]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2100], W8
	019 Move X0, [X19+56]
	020 Compare X0, 0
	021 JumpIfEqual {88}
	022 Move X1, X31
	023 Call Renderer.get_material, X0
	024 Compare X0, 0
	025 JumpIfEqual {88}
	026 Move X20, 0x2396000
	027 Move X20, [X20+1664]
	028 Move V0, V8
	029 Move X2, X31
	030 Move X1, [X20]
	031 Call Material.SetFloat, X0, X1, V0
	032 Move X0, [X19+64]
	033 Compare X0, 0
	034 JumpIfEqual {88}
	035 Move X1, X31
	036 Call Renderer.get_material, X0
	037 Compare X0, 0
	038 JumpIfEqual {88}
	039 Move X1, [X20]
	040 Move V0, V8
	041 Move X2, X31
	042 Call Material.SetFloat, X0, X1, V0
	043 Move X20, [X19+48]
	044 Compare X20, 0
	045 JumpIfEqual {88}
	046 Move S9, 1
	047 Subtract S0, S9, S8
	048 Move S1, 5
	049 Call 0x3EB2B50
	050 Subtract S0, S9, S0
	051 Move X0, X20
	052 Move X1, X31
	053 Call CanvasGroup.set_alpha, X0, V0
	054 Move X0, [X19+56]
	055 Compare X0, 0
	056 JumpIfEqual {88}
	057 Move X8, -19353600
	058 Move V9, [X8+816]
	059 Move X2, X31
	060 NotImplemented "Instruction FCMP not yet implemented."
	061 NotImplemented "Instruction CSET not yet implemented."
	062 Call Renderer.set_enabled, X0, X1
	063 Move X0, [X19+64]
	064 Compare X0, 0
	065 JumpIfEqual {88}
	066 NotImplemented "Instruction FCMP not yet implemented."
	067 NotImplemented "Instruction CSET not yet implemented."
	068 Move X2, X31
	069 Call Renderer.set_enabled, X0, X1
	070 Move X0, [X19+48]
	071 Compare X0, 0
	072 JumpIfEqual {88}
	073 Move X1, X31
	074 Call Component.get_gameObject, X0
	075 Compare X0, 0
	076 JumpIfEqual {88}
	077 NotImplemented "Instruction FCMP not yet implemented."
	078 NotImplemented "Instruction CSET not yet implemented."
	079 Move X2, X31
	080 Call GameObject.SetActive, X0, X1
	081 Move [X19+144], S8
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X30, [X31+16]
	085 Move D9, [X31+48]
	086 Move D8, [X31+56]
	087 Return 
	088 Call 0x1C17F20

Method: System.Void SetIsSelectedVisual(System.Boolean selected)

Disassembly:
	0x01D606CC STR X8, [X31 + 0x30]
	0x01D606D0 LDR X1, [X20]
	0x01D606D4 ADD X0, X31, 0x20
	0x01D606D8 BL 0x2BC4350
	0x01D606DC TBZ X0, 0x0, 0x1D606F0
	0x01D606E0 LDR X0, [X31 + 0x30]
	0x01D606E4 CBZ X0, 0x1D608E0
	0x01D606E8 BL 0x1D62380
	0x01D606EC B 0x1D606D0
	0x01D606F0 LDR X1, [X22]
	0x01D606F4 ADD X0, X31, 0x20
	0x01D606F8 BL 0x2BC434C
	0x01D606FC LDR W1, [X19 + 0x98]
	0x01D60700 BL 0x1D623B0
	0x01D60704 LDR W8, [X19 + 0x98]
	0x01D60708 MOV X20, X0
	0x01D6070C MOV X1, X31
	0x01D60710 MOV W0, W8
	0x01D60714 BL 0x1D75984
	0x01D60718 TBZ X0, 0x0, 0x1D60784
	0x01D6071C LDR X0, [X19 + 0xB0]
	0x01D60720 CBZ X0, 0x1D608DC
	0x01D60724 ADRP X21, 0x2395000
	0x01D60728 LDR X21, [X21 + 0x720]
	0x01D6072C MOV W1, W31
	0x01D60730 LDR X2, [X21]
	0x01D60734 BL 0x301BCCC
	0x01D60738 CBZ X0, 0x1D608DC
	0x01D6073C MOV X1, X31
	0x01D60740 BL 0x3C32ECC
	0x01D60744 CBZ X0, 0x1D608DC
	0x01D60748 MOVZ W1, 0x1
	0x01D6074C MOV X2, X31
	0x01D60750 BL 0x3C357B4
	0x01D60754 LDR X0, [X19 + 0xB0]
	0x01D60758 CBZ X0, 0x1D608DC
	0x01D6075C LDR X2, [X21]
	0x01D60760 MOV W1, W31
	0x01D60764 BL 0x301BCCC
	0x01D60768 CBZ X0, 0x1D608DC
	0x01D6076C LDR W2, [X19 + 0x98]
	0x01D60770 MOVZ W3, 0x1
	0x01D60774 MOV X1, X31
	0x01D60778 MOVZ W23, 0x1
	0x01D6077C BL 0x1D626C4
	0x01D60780 B 0x1D60788
	0x01D60784 MOV W23, W31
	0x01D60788 CBZ X20, 0x1D608DC
	0x01D6078C LDR W8, [X20 + 0x18]
	0x01D60790 ADD W0, W8, W23
	0x01D60794 CMP W23, W0
	0x01D60798 B.GE 0x1D608C4
	0x01D6079C ADRP X24, 0x2395000
	0x01D607A0 ADRP X25, 0x2395000
	0x01D607A4 LDR X24, [X24 + 0x720]
	0x01D607A8 LDR X25, [X25 + 0x728]
	0x01D607AC MOV W21, W31
	0x01D607B0 LDR X0, [X19 + 0xB0]
	0x01D607B4 CBZ X0, 0x1D608DC
	0x01D607B8 LDR W8, [X0 + 0x18]
	0x01D607BC ADD W22, W23, W21
	0x01D607C0 CMP W22, W8
	0x01D607C4 B.GE 0x1D6084C
	0x01D607C8 LDR X2, [X24]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+56]
	006 Compare X0, 0
	007 JumpIfEqual {76}
	008 Move W20, W1
	009 Move X1, X31
	010 Call Component.get_gameObject, X0
	011 Compare X0, 0
	012 JumpIfEqual {76}
	013 And W1, W20, 1
	014 Move X2, X31
	015 Call GameObject.SetActive, X0, X1
	016 Move X0, [X19+64]
	017 Compare X0, 0
	018 JumpIfEqual {76}
	019 Move X1, X31
	020 Call Component.get_gameObject, X0
	021 Compare X0, 0
	022 JumpIfEqual {76}
	023 NotImplemented "Instruction ORN not yet implemented."
	024 And W1, W8, 1
	025 Move X2, X31
	026 Call GameObject.SetActive, X0, X1
	027 Move X0, [X19+80]
	028 Move TEMP, X20
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {36}
	032 Add X8, X19, 96
	033 Add X9, X19, 100
	034 Add X10, X19, 104
	035 Add X11, X19, 108
	036 Add X8, X19, 112
	037 Add X9, X19, 116
	038 Add X10, X19, 120
	039 Add X11, X19, 124
	040 Compare X0, 0
	041 JumpIfEqual {76}
	042 Move V3, [X11]
	043 Move X11, [X0]
	044 Move V2, [X10]
	045 Move V1, [X9]
	046 Move V0, [X8]
	047 Move X8, [X11+680]
	048 Move X1, [X11+688]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X0, [X19+88]
	051 Move TEMP, X20
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {59}
	055 Add X8, X19, 96
	056 Add X9, X19, 100
	057 Add X10, X19, 104
	058 Add X11, X19, 108
	059 Add X8, X19, 112
	060 Add X9, X19, 116
	061 Add X10, X19, 120
	062 Add X11, X19, 124
	063 Compare X0, 0
	064 JumpIfEqual {76}
	065 Move V3, [X11]
	066 Move X11, [X0]
	067 Move V2, [X10]
	068 Move V1, [X9]
	069 Move V0, [X8]
	070 Move X2, [X11+680]
	071 Move X1, [X11+688]
	072 Move X20, [X31+16]
	073 Move X19, [X31+24]
	074 Move X30, [X31+32]
	075 CallNoReturn X2
	076 Call 0x1C17F20

Method: System.Void TestSelect()

Disassembly:
	0x01D607CC MOV W1, W22
	0x01D607D0 BL 0x301BCCC
	0x01D607D4 CBZ X0, 0x1D608DC
	0x01D607D8 MOV X1, X31
	0x01D607DC BL 0x3C32ECC
	0x01D607E0 CBZ X0, 0x1D608DC
	0x01D607E4 MOVZ W1, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move X1, X0
	003 Move X0, [X0+32]
	004 Compare X0, 0
	005 JumpIfEqual {7}
	006 Move X30, [X31+16]
	007 Call 0x1C17F20

Method: System.Void OnTriggerEnter(UnityEngine.Collider other)

Disassembly:
	0x01D60A78 MOV X1, X31
	0x01D60A7C BL 0x31BFBD4
	0x01D60A80 STR W0, [X19 + 0x68]
	0x01D60A84 FMOV S0, 1
	0x01D60A88 FMOV S1, W31
	0x01D60A8C FMOV S2, 0.5
	0x01D60A90 MOV X0, X31
	0x01D60A94 BL 0x31B22EC
	0x01D60A98 CBZ X0, 0x1D60B94
	0x01D60A9C ADRP X21, 0x2395000
	0x01D60AA0 LDR X21, [X21 + 0x748]
	0x01D60AA4 MOV X1, X31
	0x01D60AA8 BL 0x31C541C
	0x01D60AAC LDR X8, [X22]
	0x01D60AB0 MOV X20, X0
	0x01D60AB4 MOV X0, X8
	0x01D60AB8 BL 0x1C16F10
	0x01D60ABC LDR X2, [X21]
	0x01D60AC0 MOV X1, X19
	0x01D60AC4 MOV X3, X31
	0x01D60AC8 MOV X21, X0
	0x01D60ACC BL 0x2A6DA40
	0x01D60AD0 CBZ X20, 0x1D60B94
	0x01D60AD4 ADRP X22, 0x2394000
	0x01D60AD8 ADRP X23, 0x2395000
	0x01D60ADC LDR X22, [X22 + 0xE70]
	0x01D60AE0 LDR X23, [X23 + 0x740]
	0x01D60AE4 MOV X0, X20
	0x01D60AE8 MOV X1, X21
	0x01D60AEC MOV X2, X31
	0x01D60AF0 BL 0x31C8070
	0x01D60AF4 LDR X8, [X22]
	0x01D60AF8 MOV X20, X0
	0x01D60AFC MOV X0, X8
	0x01D60B00 BL 0x1C16F10
	0x01D60B04 LDR X2, [X23]
	0x01D60B08 MOV X1, X19
	0x01D60B0C MOV X3, X31
	0x01D60B10 MOV X21, X0
	0x01D60B14 BL 0x3314368
	0x01D60B18 CBZ X20, 0x1D60B94
	0x01D60B1C MOV X0, X20
	0x01D60B20 MOV X1, X21
	0x01D60B24 MOV X2, X31
	0x01D60B28 BL 0x31C7FD8
	0x01D60B2C CBZ X0, 0x1D60B94
	0x01D60B30 MOV X1, X31
	0x01D60B34 BL 0x31BFBD4
	0x01D60B38 LDR X20, [X19 + 0x88]
	0x01D60B3C STR W0, [X19 + 0x58]
	0x01D60B40 CBZ X20, 0x1D60B94
	0x01D60B44 LDR W8, [X20 + 0x18]
	0x01D60B48 CMP W8, 0x1
	0x01D60B4C B.LT 0x1D60B84
	0x01D60B50 MOV W19, W31
	0x01D60B54 CMP W19, W8
	0x01D60B58 B.CS 0x1D60B98
	0x01D60B5C ADD X8, X20, W19, 0x3, SXTW
	0x01D60B60 LDR X0, [X8 + 0x20]
	0x01D60B64 CBZ X0, 0x1D60B94
	0x01D60B68 MOV W1, W31
	0x01D60B6C MOV X2, X31
	0x01D60B70 BL 0x3C357B4
	0x01D60B74 LDR W8, [X20 + 0x18]
	0x01D60B78 ADD W19, W19, 0x1
	0x01D60B7C CMP W19, W8
	0x01D60B80 B.LT 0x1D60B54
	0x01D60B84 LDP X20, X19, [X31 + 0x20]
	0x01D60B88 LDP X22, X21, [X31 + 0x10]
	0x01D60B8C LDP X30, X23, [X31], #0x30
	0x01D60B90 RET
	0x01D60B94 BL 0x1C16F20
	0x01D60B98 BL 0x1C16F28
	0x01D60B9C STR X30, [X31 - 0x40]!
	0x01D60BA0 STP X24, X23, [X31 + 0x10]
	0x01D60BA4 STP X22, X21, [X31 + 0x20]
	0x01D60BA8 STP X20, X19, [X31 + 0x30]
	0x01D60BAC ADRP X23, 0x2678000
	0x01D60BB0 ADRP X24, 0x2393000
	0x01D60BB4 ADRP X19, 0x2395000
	0x01D60BB8 ADRP X22, 0x2393000
	0x01D60BBC ADRP X21, 0x2393000
	0x01D60BC0 LDRB W8, [X23 + 0x83B]
	0x01D60BC4 LDR X24, [X24 + 0xDA0]
	0x01D60BC8 LDR X19, [X19 + 0x750]
	0x01D60BCC LDR X22, [X22 + 0xDB0]
	0x01D60BD0 LDR X21, [X21 + 0x648]
	0x01D60BD4 MOV X20, X0
	0x01D60BD8 TBNZ X8, 0x0, 0x1D60C14
	0x01D60BDC ADRP X0, 0x2393000
	0x01D60BE0 LDR X0, [X0 + 0x648]
	0x01D60BE4 BL 0x1C16CF4
	0x01D60BE8 ADRP X0, 0x2395000
	0x01D60BEC LDR X0, [X0 + 0x750]
	0x01D60BF0 BL 0x1C16CF4
	0x01D60BF4 ADRP X0, 0x2393000
	0x01D60BF8 LDR X0, [X0 + 0xDB0]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2679000
	007 Move W8, [X21+2101]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x2396000
	015 Move X0, [X0+1456]
	016 Call 0x1C17CF4
	017 Move X0, 0x2396000
	018 Move X0, [X0+1704]
	019 Call 0x1C17CF4
	020 Move X0, 0x2396000
	021 Move X0, [X0+1448]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2101], W8
	025 Move [X31+12], W31
	026 Move X8, -19353600
	027 Move V0, [X19+144]
	028 Move V1, [X8+188]
	029 NotImplemented "Instruction FCMP not yet implemented."
	030 Add X1, X31, 12
	031 Move X0, X20
	032 Move X2, X31
	033 Call HandInputUtility.HandleFingerTipInput, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {108}
	038 Move X0, [X19+32]
	039 Compare X0, 0
	040 JumpIfEqual {114}
	041 Move X1, X19
	042 Call DoodEditorManager.SelectCategory, X0, X1
	043 Move X20, [X19+128]
	044 Move X0, X19
	045 Move X1, X31
	046 Call Component.get_transform, X0
	047 Compare X0, 0
	048 JumpIfEqual {114}
	049 Move X1, X31
	050 Call Transform.get_position, X0
	051 Compare X20, 0
	052 JumpIfEqual {114}
	053 Move S3, 1
	054 Move X0, X20
	055 Move W1, W31
	056 Move X2, X31
	057 Call RandomSFX.Play, X0, X1, V0, X2
	058 Move X8, 0x2396000
	059 Move X8, [X8+1448]
	060 Move W20, [X19+148]
	061 Move X0, [X8]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move W0, W20
	067 Move X1, X31
	068 Call LeanTween.cancel, X0
	069 Move X0, [X19+72]
	070 Compare X0, 0
	071 JumpIfEqual {114}
	072 Move X1, X31
	073 Call Component.get_gameObject, X0
	074 Move X8, -19353600
	075 Move V2, [X8+88]
	076 Move S0, 1.5
	077 Move S1, 1
	078 Move X1, X31
	079 Call LeanTween.value, X0, V0, V1, V2
	080 Compare X0, 0
	081 JumpIfEqual {114}
	082 Move X1, X31
	083 Call LTDescr.setEaseOutCubic, X0
	084 Move X8, 0x2396000
	085 Move X8, [X8+1456]
	086 Move X20, X0
	087 Move X8, [X8]
	088 Move X0, X8
	089 Call 0x1C17F10
	090 Move X8, 0x2396000
	091 Move X8, [X8+1704]
	092 Move X1, X19
	093 Move X3, X31
	094 Move X21, X0
	095 Move X2, [X8]
	096 Call Action`1<Single>..ctor, X0, X1, X2
	097 Compare X20, 0
	098 JumpIfEqual {114}
	099 Move X0, X20
	100 Move X1, X21
	101 Move X2, X31
	102 Call LTDescr.setOnUpdate, X0, X1
	103 Compare X0, 0
	104 JumpIfEqual {114}
	105 Move X1, X31
	106 Call LTDescr.get_id, X0
	107 Move [X19+148], W0
	108 Move X20, [X31+32]
	109 Move X19, [X31+40]
	110 Move X30, [X31+16]
	111 Move X21, [X31+24]
	112 Add X31, X31, 48
	113 Return 
	114 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01D60BFC BL 0x1C16CF4
	0x01D60C00 ADRP X0, 0x2393000

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

Method: System.Void <OnTriggerEnter>b__19_0(System.Single val)

Disassembly:
	0x01D60C04 LDR X0, [X0 + 0xDA0]
	0x01D60C08 BL 0x1C16CF4
	0x01D60C0C MOVZ W8, 0x1
	0x01D60C10 STRB W8, [X23 + 0x83B]
	0x01D60C14 LDR X0, [X24]
	0x01D60C18 BL 0x1C16F10
	0x01D60C1C LDR X2, [X19]
	0x01D60C20 MOV X1, X20
	0x01D60C24 MOV X3, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+72]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move V1, V0
	006 Move V2, V0
	007 Move X1, X31
	008 Move X30, [X31+16]
	009 Call Transform.set_localScale, X0, X1
	010 Return 
	011 Call 0x1C17F20

