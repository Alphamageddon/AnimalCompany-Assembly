Type: AnimalCompany.NetworkedLootManager

Method: System.Void Awake()

Disassembly:
	0x01CB1FBC RET
	0x01CB1FC0 ADRP X8, 0x229C000
	0x01CB1FC4 LDR X8, [X8 + 0x918]
	0x01CB1FC8 ADD X1, X31, 0x68
	0x01CB1FCC STR S8, [X31 + 0x68]
	0x01CB1FD0 LDR X0, [X8]
	0x01CB1FD4 BL 0x1B6E900
	0x01CB1FD8 ADRP X8, 0x229D000
	0x01CB1FDC LDR X8, [X8 + 0xCB8]
	0x01CB1FE0 MOV X1, X0
	0x01CB1FE4 MOV X2, X31
	0x01CB1FE8 LDR X8, [X8]
	0x01CB1FEC MOV X0, X8
	0x01CB1FF0 BL 0x3087E18
	0x01CB1FF4 ADRP X8, 0x229C000
	0x01CB1FF8 LDR X8, [X8 + 0x628]
	0x01CB1FFC MOV X20, X0
	0x01CB2000 LDR X8, [X8]
	0x01CB2004 LDR W9, [X8 + 0xE0]
	0x01CB2008 CBNZ W9, 0x1CB2014
	0x01CB200C MOV X0, X8
	0x01CB2010 BL 0x1B6E8F8
	0x01CB2014 ADRP X8, 0x229C000
	0x01CB2018 ADRP X9, 0x229C000
	0x01CB201C LDR X8, [X8 + 0xC08]
	0x01CB2020 LDR X9, [X9 + 0xCC0]
	0x01CB2024 MOVZ W4, 0xA3
	0x01CB2028 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2573000
	006 Move X20, 0x229D000
	007 Move W8, [X21+1218]
	008 Move X20, [X20+1144]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x229E000
	015 Move X0, [X0+2944]
	016 Call 0x1B6F7F0
	017 Move X0, 0x229D000
	018 Move X0, [X0+1144]
	019 Call 0x1B6F7F0
	020 Move W8, 1
	021 Move [X21+1218], W8
	022 Move X0, [X20]
	023 Move X20, 0x229D000
	024 Move W8, [X0+224]
	025 Call 0x3D1A160
	026 Return 
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1B6F8F8
	030 Move X0, [X20]
	031 Call 0x2115BC8
	032 Move [X19+136], X0
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return 

Method: System.Void Spawned()

Disassembly:
	0x01CB202C LDR X2, [X8]
	0x01CB2030 LDR X3, [X9]
	0x01CB2034 MOV X1, X31
	0x01CB2038 MOV X5, X31
	0x01CB203C BL 0x342B2CC
	0x01CB2040 B 0x1CB1F7C
	0x01CB2044 BL 0x1B6EA1C
	0x01CB2048 MOV X22, X31
	0x01CB204C B 0x1CB2054
	0x01CB2050 MOV X23, X0
	0x01CB2054 ADRP X8, 0x229C000
	0x01CB2058 LDR X8, [X8 + 0xC18]
	0x01CB205C LDR X1, [X8]
	0x01CB2060 ADD X0, X31, 0x80
	0x01CB2064 BL 0x2A14F2C
	0x01CB2068 CBNZ X22, 0x1CB2074
	0x01CB206C MOV X0, X23
	0x01CB2070 BL 0x1C8418C
	0x01CB2074 MOV X0, X22
	0x01CB2078 BL 0x1B6EA14
	0x01CB207C BL 0x18F46A8
	0x01CB2080 SUB X31, X31, 0x20
	0x01CB2084 STP X30, X19, [X31 + 0x10]
	0x01CB2088 MOV X1, X31
	0x01CB208C MOV X19, X0
	0x01CB2090 BL 0x1D65000
	0x01CB2094 LDR X0, [X19 + 0x40]
	0x01CB2098 CBZ X0, 0x1CB20D8
	0x01CB209C LDRB W8, [X0 + 0x60]
	0x01CB20A0 TBNZ X8, 0x1, 0x1CB20D8
	0x01CB20A4 MOV X1, X31
	0x01CB20A8 BL 0x1D9E780
	0x01CB20AC TBZ X0, 0x0, 0x1CB20D8
	0x01CB20B0 MOV X0, X19
	0x01CB20B4 BL 0x1CB1460
	0x01CB20B8 STR W0, [X31 + 0x8]
	0x01CB20BC LDR X1, [X19 + 0x38]
	0x01CB20C0 ADD X0, X31, 0x8
	0x01CB20C4 MOV X2, X31
	0x01CB20C8 BL 0x1D9CC70
	0x01CB20CC TBZ X0, 0x0, 0x1CB20D8
	0x01CB20D0 MOV X0, X19
	0x01CB20D4 BL 0x1CB1700
	0x01CB20D8 LDP X30, X19, [X31 + 0x10]
	0x01CB20DC ADD X31, X31, 0x20
	0x01CB20E0 RET
	0x01CB20E4 STR X30, [X31 - 0x60]!
	0x01CB20E8 STP X28, X27, [X31 + 0x10]
	0x01CB20EC STP X26, X25, [X31 + 0x20]
	0x01CB20F0 STP X24, X23, [X31 + 0x30]
	0x01CB20F4 STP X22, X21, [X31 + 0x40]
	0x01CB20F8 STP X20, X19, [X31 + 0x50]
	0x01CB20FC ADRP X20, 0x2571000
	0x01CB2100 LDRB W8, [X20 + 0x4C7]
	0x01CB2104 MOV X19, X0
	0x01CB2108 TBNZ X8, 0x0, 0x1CB2198
	0x01CB210C ADRP X0, 0x229C000
	0x01CB2110 LDR X0, [X0 + 0xCC8]
	0x01CB2114 BL 0x1B6E7F0
	0x01CB2118 ADRP X0, 0x229C000
	0x01CB211C LDR X0, [X0 + 0xCD0]
	0x01CB2120 BL 0x1B6E7F0
	0x01CB2124 ADRP X0, 0x229C000
	0x01CB2128 LDR X0, [X0 + 0xCD8]
	0x01CB212C BL 0x1B6E7F0
	0x01CB2130 ADRP X0, 0x229C000
	0x01CB2134 LDR X0, [X0 + 0xCE0]
	0x01CB2138 BL 0x1B6E7F0
	0x01CB213C ADRP X0, 0x229C000
	0x01CB2140 LDR X0, [X0 + 0xCE8]
	0x01CB2144 BL 0x1B6E7F0
	0x01CB2148 ADRP X0, 0x229C000
	0x01CB214C LDR X0, [X0 + 0xCF0]
	0x01CB2150 BL 0x1B6E7F0
	0x01CB2154 ADRP X0, 0x229C000
	0x01CB2158 LDR X0, [X0 + 0xC48]
	0x01CB215C BL 0x1B6E7F0
	0x01CB2160 ADRP X0, 0x229C000
	0x01CB2164 LDR X0, [X0 + 0xCF8]
	0x01CB2168 BL 0x1B6E7F0
	0x01CB216C ADRP X0, 0x229C000
	0x01CB2170 LDR X0, [X0 + 0xC60]
	0x01CB2174 BL 0x1B6E7F0
	0x01CB2178 ADRP X0, 0x229C000
	0x01CB217C LDR X0, [X0 + 0xC68]
	0x01CB2180 BL 0x1B6E7F0
	0x01CB2184 ADRP X0, 0x229C000
	0x01CB2188 LDR X0, [X0 + 0xD00]
	0x01CB218C BL 0x1B6E7F0
	0x01CB2190 MOVZ W8, 0x1
	0x01CB2194 STRB W8, [X20 + 0x4C7]
	0x01CB2198 LDR X8, [X19 + 0xA0]
	0x01CB219C CBZ X8, 0x1CB2374
	0x01CB21A0 LDP W2, W9, [X8 + 0x18]
	0x01CB21A4 ADD W9, W9, 0x1
	0x01CB21A8 CMP W2, 0x1
	0x01CB21AC STP W31, W9, [X8 + 0x18]
	0x01CB21B0 B.LT 0x1CB21C4
	0x01CB21B4 LDR X0, [X8 + 0x10]
	0x01CB21B8 MOV W1, W31
	0x01CB21BC MOV X3, X31
	0x01CB21C0 BL 0x32093A0
	0x01CB21C4 LDR X9, [X19 + 0xA8]
	0x01CB21C8 CBZ X9, 0x1CB2374
	0x01CB21CC ADRP X23, 0x229C000
	0x01CB21D0 ADRP X24, 0x229C000
	0x01CB21D4 ADRP X25, 0x229C000
	0x01CB21D8 ADRP X26, 0x229C000
	0x01CB21DC ADRP X27, 0x229C000
	0x01CB21E0 ADRP X28, 0x229C000
	0x01CB21E4 LDR X23, [X23 + 0xC68]
	0x01CB21E8 LDR X24, [X24 + 0xC60]
	0x01CB21EC LDR X25, [X25 + 0xCD0]
	0x01CB21F0 LDR X26, [X26 + 0xD00]
	0x01CB21F4 LDR X27, [X27 + 0xCE8]
	0x01CB21F8 LDR X28, [X28 + 0xCC8]
	0x01CB21FC MOV W8, W31
	0x01CB2200 LDR X9, [X9 + 0x28]
	0x01CB2204 CBZ X9, 0x1CB2374
	0x01CB2208 LDR W9, [X9 + 0x18]
	0x01CB220C AND W20, W8, 0xFF
	0x01CB2210 CMP W20, W9
	0x01CB2214 B.GE 0x1CB2378
	0x01CB2218 LDR X21, [X19 + 0xA0]
	0x01CB221C CBZ X21, 0x1CB2374
	0x01CB2220 LDR W8, [X21 + 0x18]
	0x01CB2224 CMP W8, W20
	0x01CB2228 B.LE 0x1CB2250
	0x01CB222C LDR X2, [X23]
	0x01CB2230 MOV X0, X21
	0x01CB2234 MOV W1, W20

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X20, 0x2572000
	015 Move W8, [X20+1219]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move X0, 0x229D000
	022 Move X0, [X0+584]
	023 Call 0x1B6F7F0
	024 Move X0, 0x229D000
	025 Move X0, [X0+592]
	026 Call 0x1B6F7F0
	027 Move X0, 0x229D000
	028 Move X0, [X0+2952]
	029 Call 0x1B6F7F0
	030 Move X0, 0x229D000
	031 Move X0, [X0+2960]
	032 Call 0x1B6F7F0
	033 Move X0, 0x229D000
	034 Move X0, [X0+2968]
	035 Call 0x1B6F7F0
	036 Move W8, 1
	037 Move [X20+1219], W8
	038 Move X0, X19
	039 Move X1, X31
	040 Call NetworkBehaviour.Spawned, X0
	041 Move X0, [X19+64]
	042 Compare X0, 0
	043 JumpIfEqual {146}
	044 Move W8, [X0+96]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 2
	047 Compare TEMP, 2
	048 JumpIfEqual {146}
	049 Move X1, X31
	050 Call NetworkObject.get_HasStateAuthority, X0
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {146}
	055 Move X24, [X19+136]
	056 Compare X24, 0
	057 JumpIfEqual {160}
	058 Move W8, [X24+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X29, 0x229D000
	061 Move X27, 0x229D000
	062 Move X28, 0x229D000
	063 Move X29, [X29+592]
	064 Move X27, [X27+2952]
	065 Move X28, [X28+2960]
	066 Move X25, X31
	067 Add X26, X24, 32
	068 Move X8, 0x229D000
	069 Move X8, [X8+2968]
	070 Move X0, [X8]
	071 Call 0x1B6FA0C
	072 Move X1, X31
	073 Move X21, X0
	074 Call Object..ctor, X0
	075 Move W8, [X24+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Compare X21, 0
	078 JumpIfEqual {160}
	079 Move X8, [X26]
	080 Move [X21+16], X8
	081 Move X0, [X19+128]
	082 Compare X0, 0
	083 JumpIfEqual {160}
	084 Move X20, [X19+56]
	085 Move X1, X31
	086 Call Component.get_gameObject, X0
	087 Move X8, [X21+16]
	088 Compare X8, 0
	089 JumpIfEqual {160}
	090 Move X22, X0
	091 Move X0, X8
	092 Move X1, X31
	093 Call Component.get_transform, X0
	094 Compare X0, 0
	095 JumpIfEqual {160}
	096 Move X1, X31
	097 Call Transform.get_position, X0
	098 Move X8, 0x229D000
	099 Move X8, [X8+584]
	100 Add X0, X31, 64
	101 Move [X31+64], X31
	102 Move [X31+72], X31
	103 Move X1, [X8]
	104 Call Nullable`1<Vector3>..ctor, X0, X1
	105 Move X0, [X21+16]
	106 Compare X0, 0
	107 JumpIfEqual {160}
	108 Move X1, X31
	109 Call Component.get_transform, X0
	110 Compare X0, 0
	111 JumpIfEqual {160}
	112 Move X1, X31
	113 Call Transform.get_rotation, X0
	114 Move X1, [X29]
	115 Add X0, X31, 40
	116 Move [X31+40], X31
	117 Move [X31+48], X31
	118 Move [X31+56], W31
	119 Call Nullable`1<Quaternion>..ctor, X0, X1
	120 Move X0, [X27]
	121 Call 0x1B6FA0C
	122 Move X2, [X28]
	123 Move X1, X21
	124 Move X3, X31
	125 Move X23, X0
	126 Call OnBeforeSpawned..ctor, X0, X1, X2
	127 Compare X20, 0
	128 JumpIfEqual {160}
	129 NotImplemented "Instruction LDUR not yet implemented."
	130 Move W8, [X31+56]
	131 Move X2, [X31+64]
	132 Move X3, [X31+72]
	133 Add X4, X31, 16
	134 Move X0, X20
	135 Move X1, X22
	136 Move X5, X31
	137 Move X6, X23
	138 Move W7, W31
	139 Move [X31+1], V0
	140 Move [X31+32], W8
	141 Move [X31], X31
	142 Call NetworkRunner.Spawn, X0, X1, X2, X3, X4, X5, X6
	143 NotImplemented "Instruction LDRSW not yet implemented."
	144 Add X25, X25, 1
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X20, [X31+160]
	147 Move X19, [X31+168]
	148 Move X22, [X31+144]
	149 Move X21, [X31+152]
	150 Move X24, [X31+128]
	151 Move X23, [X31+136]
	152 Move X26, [X31+112]
	153 Move X25, [X31+120]
	154 Move X28, [X31+96]
	155 Move X27, [X31+104]
	156 Move X29, [X31+80]
	157 Move X30, [X31+88]
	158 Add X31, X31, 176
	159 Return 
	160 Call 0x1B6FA1C
	161 Call 0x1B6FA24

Method: System.Void .ctor()

Disassembly:
	0x01CB2240 LDR W8, [X0 + 0x1C]
	0x01CB2244 ADD W8, W8, 0x1

ISIL:
	001 Move X1, X31
	002 Call NetworkBehaviour..ctor, X0
	003 Return 

Method: System.Void CopyBackingFieldsToState(System.Boolean param_0)

Disassembly:
	0x01CB2248 STP W31, W8, [X0 + 0x18]

ISIL:
	001 Return 

Method: System.Void CopyStateToBackingFields()

Disassembly:
	0x01CB224C B 0x1CB22B8

ISIL:
	001 Return 

