Type: AnimalCompany.NetworkedLootManager

Method: System.Void Awake()

Disassembly:
	0x01DAC06C LDP X28, X27, [X31 + 0xE0]
	0x01DAC070 LDP X29, X30, [X31 + 0xD0]
	0x01DAC074 LDR V8, [X31 + 0xC0]
	0x01DAC078 ADD X31, X31, 0x130
	0x01DAC07C RET
	0x01DAC080 ADRP X8, 0x2347000
	0x01DAC084 LDR X8, [X8 + 0xA90]
	0x01DAC088 ADD X1, X31, 0x68
	0x01DAC08C STR S8, [X31 + 0x68]
	0x01DAC090 LDR X0, [X8]
	0x01DAC094 BL 0x1C16E04
	0x01DAC098 ADRP X8, 0x234B000
	0x01DAC09C LDR X8, [X8 + 0x7C0]
	0x01DAC0A0 MOV X1, X0
	0x01DAC0A4 MOV X2, X31
	0x01DAC0A8 LDR X8, [X8]
	0x01DAC0AC MOV X0, X8
	0x01DAC0B0 BL 0x321EFD0
	0x01DAC0B4 ADRP X8, 0x2347000
	0x01DAC0B8 LDR X8, [X8 + 0x788]
	0x01DAC0BC MOV X20, X0
	0x01DAC0C0 LDR X8, [X8]
	0x01DAC0C4 LDR W9, [X8 + 0xE0]
	0x01DAC0C8 CBNZ W9, 0x1DAC0D4
	0x01DAC0CC MOV X0, X8
	0x01DAC0D0 BL 0x1C16DFC
	0x01DAC0D4 ADRP X8, 0x234B000
	0x01DAC0D8 ADRP X9, 0x234B000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x262D000
	006 Move X20, 0x2348000
	007 Move W8, [X21+2765]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x234C000
	015 Move X0, [X0+1680]
	016 Call 0x1C17CF4
	017 Move X0, 0x2348000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2765], W8
	022 Move X0, [X20]
	023 Move X20, 0x234C000
	024 Move W8, [X0+224]
	025 Move X20, [X20+1680]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, [X20]
	030 Call 0x222E200
	031 Move [X19+136], X0
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return 

Method: System.Void Spawned()

Disassembly:
	0x01DAC0DC LDR X8, [X8 + 0x710]
	0x01DAC0E0 LDR X9, [X9 + 0x7C8]
	0x01DAC0E4 MOVZ W4, 0x97
	0x01DAC0E8 MOV X0, X20
	0x01DAC0EC LDR X2, [X8]
	0x01DAC0F0 LDR X3, [X9]
	0x01DAC0F4 MOV X1, X31
	0x01DAC0F8 MOV X5, X31
	0x01DAC0FC BL 0x35C20BC
	0x01DAC100 B 0x1DAC03C
	0x01DAC104 BL 0x1C16F20
	0x01DAC108 MOV X22, X31
	0x01DAC10C B 0x1DAC114
	0x01DAC110 MOV X23, X0
	0x01DAC114 ADRP X8, 0x234B000
	0x01DAC118 LDR X8, [X8 + 0x720]
	0x01DAC11C LDR X1, [X8]
	0x01DAC120 ADD X0, X31, 0x80
	0x01DAC124 BL 0x2BC434C
	0x01DAC128 CBNZ X22, 0x1DAC134
	0x01DAC12C MOV X0, X23
	0x01DAC130 BL 0x1D2C690
	0x01DAC134 MOV X0, X22
	0x01DAC138 BL 0x1C16F18
	0x01DAC13C BL 0x1990590
	0x01DAC140 SUB X31, X31, 0x20
	0x01DAC144 STP X30, X19, [X31 + 0x10]
	0x01DAC148 MOV X1, X31
	0x01DAC14C MOV X19, X0
	0x01DAC150 BL 0x1E73D04
	0x01DAC154 LDR X0, [X19 + 0x40]
	0x01DAC158 CBZ X0, 0x1DAC198
	0x01DAC15C LDRB W8, [X0 + 0x60]
	0x01DAC160 TBNZ X8, 0x1, 0x1DAC198
	0x01DAC164 MOV X1, X31
	0x01DAC168 BL 0x1E93668
	0x01DAC16C TBZ X0, 0x0, 0x1DAC198
	0x01DAC170 MOV X0, X19
	0x01DAC174 BL 0x1DAB510
	0x01DAC178 STR W0, [X31 + 0x8]
	0x01DAC17C LDR X1, [X19 + 0x38]
	0x01DAC180 ADD X0, X31, 0x8
	0x01DAC184 MOV X2, X31
	0x01DAC188 BL 0x1E91C28
	0x01DAC18C TBZ X0, 0x0, 0x1DAC198
	0x01DAC190 MOV X0, X19
	0x01DAC194 BL 0x1DAB7B0
	0x01DAC198 LDP X30, X19, [X31 + 0x10]
	0x01DAC19C ADD X31, X31, 0x20
	0x01DAC1A0 RET
	0x01DAC1A4 STR X30, [X31 - 0x60]!
	0x01DAC1A8 STP X28, X27, [X31 + 0x10]
	0x01DAC1AC STP X26, X25, [X31 + 0x20]
	0x01DAC1B0 STP X24, X23, [X31 + 0x30]
	0x01DAC1B4 STP X22, X21, [X31 + 0x40]
	0x01DAC1B8 STP X20, X19, [X31 + 0x50]
	0x01DAC1BC ADRP X20, 0x262C000
	0x01DAC1C0 LDRB W8, [X20 + 0xAD2]
	0x01DAC1C4 MOV X19, X0
	0x01DAC1C8 TBNZ X8, 0x0, 0x1DAC258
	0x01DAC1CC ADRP X0, 0x234B000
	0x01DAC1D0 LDR X0, [X0 + 0x7D0]
	0x01DAC1D4 BL 0x1C16CF4
	0x01DAC1D8 ADRP X0, 0x234B000
	0x01DAC1DC LDR X0, [X0 + 0x7D8]
	0x01DAC1E0 BL 0x1C16CF4
	0x01DAC1E4 ADRP X0, 0x234B000
	0x01DAC1E8 LDR X0, [X0 + 0x7E0]
	0x01DAC1EC BL 0x1C16CF4
	0x01DAC1F0 ADRP X0, 0x234B000
	0x01DAC1F4 LDR X0, [X0 + 0x7E8]
	0x01DAC1F8 BL 0x1C16CF4
	0x01DAC1FC ADRP X0, 0x234B000
	0x01DAC200 LDR X0, [X0 + 0x7F0]
	0x01DAC204 BL 0x1C16CF4
	0x01DAC208 ADRP X0, 0x234B000
	0x01DAC20C LDR X0, [X0 + 0x7F8]
	0x01DAC210 BL 0x1C16CF4
	0x01DAC214 ADRP X0, 0x234B000
	0x01DAC218 LDR X0, [X0 + 0x750]
	0x01DAC21C BL 0x1C16CF4
	0x01DAC220 ADRP X0, 0x234B000
	0x01DAC224 LDR X0, [X0 + 0x800]
	0x01DAC228 BL 0x1C16CF4
	0x01DAC22C ADRP X0, 0x234B000
	0x01DAC230 LDR X0, [X0 + 0x768]
	0x01DAC234 BL 0x1C16CF4
	0x01DAC238 ADRP X0, 0x234B000
	0x01DAC23C LDR X0, [X0 + 0x770]
	0x01DAC240 BL 0x1C16CF4
	0x01DAC244 ADRP X0, 0x234B000
	0x01DAC248 LDR X0, [X0 + 0x808]
	0x01DAC24C BL 0x1C16CF4
	0x01DAC250 MOVZ W8, 0x1
	0x01DAC254 STRB W8, [X20 + 0xAD2]
	0x01DAC258 LDR X8, [X19 + 0xA0]
	0x01DAC25C CBZ X8, 0x1DAC434
	0x01DAC260 LDP W2, W9, [X8 + 0x18]
	0x01DAC264 ADD W9, W9, 0x1
	0x01DAC268 CMP W2, 0x1
	0x01DAC26C STP W31, W9, [X8 + 0x18]
	0x01DAC270 B.LT 0x1DAC284
	0x01DAC274 LDR X0, [X8 + 0x10]
	0x01DAC278 MOV W1, W31
	0x01DAC27C MOV X3, X31
	0x01DAC280 BL 0x339FA34
	0x01DAC284 LDR X9, [X19 + 0xA8]
	0x01DAC288 CBZ X9, 0x1DAC434
	0x01DAC28C ADRP X23, 0x234B000
	0x01DAC290 ADRP X24, 0x234B000
	0x01DAC294 ADRP X25, 0x234B000
	0x01DAC298 ADRP X26, 0x234B000
	0x01DAC29C ADRP X27, 0x234B000
	0x01DAC2A0 ADRP X28, 0x234B000
	0x01DAC2A4 LDR X23, [X23 + 0x770]
	0x01DAC2A8 LDR X24, [X24 + 0x768]
	0x01DAC2AC LDR X25, [X25 + 0x7D8]
	0x01DAC2B0 LDR X26, [X26 + 0x808]
	0x01DAC2B4 LDR X27, [X27 + 0x7F0]
	0x01DAC2B8 LDR X28, [X28 + 0x7D0]
	0x01DAC2BC MOV W8, W31
	0x01DAC2C0 LDR X9, [X9 + 0x28]
	0x01DAC2C4 CBZ X9, 0x1DAC434
	0x01DAC2C8 LDR W9, [X9 + 0x18]
	0x01DAC2CC AND W20, W8, 0xFF
	0x01DAC2D0 CMP W20, W9
	0x01DAC2D4 B.GE 0x1DAC438
	0x01DAC2D8 LDR X21, [X19 + 0xA0]
	0x01DAC2DC CBZ X21, 0x1DAC434
	0x01DAC2E0 LDR W8, [X21 + 0x18]
	0x01DAC2E4 CMP W8, W20

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X20, 0x262D000
	015 Move W8, [X20+2766]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move X0, 0x234B000
	022 Move X0, [X0+2904]
	023 Call 0x1C17CF4
	024 Move X0, 0x234B000
	025 Move X0, [X0+2912]
	026 Call 0x1C17CF4
	027 Move X0, 0x234C000
	028 Move X0, [X0+320]
	029 Call 0x1C17CF4
	030 Move X0, 0x234C000
	031 Move X0, [X0+1688]
	032 Call 0x1C17CF4
	033 Move X0, 0x234C000
	034 Move X0, [X0+1696]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X20+2766], W8
	038 Move X0, X19
	039 Move X1, X31
	040 Call NetworkBehaviour.Spawned, X0
	041 Move X0, [X19+64]
	042 Compare X0, 0
	043 JumpIfEqual {146}
	044 Move W8, [X0+96]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 2
	047 Compare TEMP, 2
	048 JumpIfEqual {146}
	049 Move X1, X31
	050 Call NetworkObject.get_HasStateAuthority, X0
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {146}
	055 Move X24, [X19+136]
	056 Compare X24, 0
	057 JumpIfEqual {160}
	058 Move W8, [X24+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X29, 0x234B000
	061 Move X27, 0x234C000
	062 Move X28, 0x234C000
	063 Move X29, [X29+2912]
	064 Move X27, [X27+320]
	065 Move X28, [X28+1688]
	066 Move X25, X31
	067 Add X26, X24, 32
	068 Move X8, 0x234C000
	069 Move X8, [X8+1696]
	070 Move X0, [X8]
	071 Call 0x1C17F10
	072 Move X1, X31
	073 Move X21, X0
	074 Call Object..ctor, X0
	075 Move W8, [X24+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Compare X21, 0
	078 JumpIfEqual {160}
	079 Move X8, [X26]
	080 Move [X21+16], X8
	081 Move X0, [X19+128]
	082 Compare X0, 0
	083 JumpIfEqual {160}
	084 Move X20, [X19+56]
	085 Move X1, X31
	086 Call Component.get_gameObject, X0
	087 Move X8, [X21+16]
	088 Compare X8, 0
	089 JumpIfEqual {160}
	090 Move X22, X0
	091 Move X0, X8
	092 Move X1, X31
	093 Call Component.get_transform, X0
	094 Compare X0, 0
	095 JumpIfEqual {160}
	096 Move X1, X31
	097 Call Transform.get_position, X0
	098 Move X8, 0x234B000
	099 Move X8, [X8+2904]
	100 Add X0, X31, 64
	101 Move [X31+64], X31
	102 Move [X31+72], X31
	103 Move X1, [X8]
	104 Call Nullable`1<Vector3>..ctor, X0, X1
	105 Move X0, [X21+16]
	106 Compare X0, 0
	107 JumpIfEqual {160}
	108 Move X1, X31
	109 Call Component.get_transform, X0
	110 Compare X0, 0
	111 JumpIfEqual {160}
	112 Move X1, X31
	113 Call Transform.get_rotation, X0
	114 Move X1, [X29]
	115 Add X0, X31, 40
	116 Move [X31+40], X31
	117 Move [X31+48], X31
	118 Move [X31+56], W31
	119 Call Nullable`1<Quaternion>..ctor, X0, X1
	120 Move X0, [X27]
	121 Call 0x1C17F10
	122 Move X2, [X28]
	123 Move X1, X21
	124 Move X3, X31
	125 Move X23, X0
	126 Call OnBeforeSpawned..ctor, X0, X1, X2
	127 Compare X20, 0
	128 JumpIfEqual {160}
	129 NotImplemented "Instruction LDUR not yet implemented."
	130 Move W8, [X31+56]
	131 Move X2, [X31+64]
	132 Move X3, [X31+72]
	133 Add X4, X31, 16
	134 Move X0, X20
	135 Move X1, X22
	136 Move X5, X31
	137 Move X6, X23
	138 Move W7, W31
	139 Move [X31+1], V0
	140 Move [X31+32], W8
	141 Move [X31], X31
	142 Call NetworkRunner.Spawn, X0, X1, X2, X3, X4, X5, X6
	143 NotImplemented "Instruction LDRSW not yet implemented."
	144 Add X25, X25, 1
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X20, [X31+160]
	147 Move X19, [X31+168]
	148 Move X22, [X31+144]
	149 Move X21, [X31+152]
	150 Move X24, [X31+128]
	151 Move X23, [X31+136]
	152 Move X26, [X31+112]
	153 Move X25, [X31+120]
	154 Move X28, [X31+96]
	155 Move X27, [X31+104]
	156 Move X29, [X31+80]
	157 Move X30, [X31+88]
	158 Add X31, X31, 176
	159 Return 
	160 Call 0x1C17F20
	161 Call 0x1C17F28

Method: System.Void .ctor()

Disassembly:
	0x01DAC2F0 MOV X0, X21
	0x01DAC2F4 MOV W1, W20

ISIL:
	001 Move X1, X31
	002 Call NetworkBehaviour..ctor, X0
	003 Return 

Method: System.Void CopyBackingFieldsToState(System.Boolean param_0)

Disassembly:
	0x01DAC2F8 BL 0x301BCCC

ISIL:
	001 Return 

Method: System.Void CopyStateToBackingFields()

Disassembly:
	0x01DAC2FC CBZ X0, 0x1DAC434

ISIL:
	001 Return 

