Type: AnimalCompany.PollBootstrapCommand/<ExecuteAsync>d__1

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01D4577C BL 0x1D32AF4
	0x01D45780 MOV X20, X0
	0x01D45784 BL 0x1D32B7C
	0x01D45788 CBZ X20, 0x1D457A8
	0x01D4578C MOV X1, X0
	0x01D45790 MOV X0, X20
	0x01D45794 MOV X2, X19
	0x01D45798 LDP X20, X19, [X31 + 0x10]
	0x01D4579C MOV X3, X31
	0x01D457A0 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01D45830 ADRP X0, 0x23AE000

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01D45834 LDR X0, [X0 + 0x788]
	0x01D45838 BL 0x1C16CF4
	0x01D4583C ADRP X0, 0x23AF000
	0x01D45840 LDR X0, [X0 + 0x468]
	0x01D45844 BL 0x1C16CF4
	0x01D45848 ADRP X0, 0x23AF000
	0x01D4584C LDR X0, [X0 + 0x470]
	0x01D45850 BL 0x1C16CF4
	0x01D45854 ADRP X0, 0x23AF000
	0x01D45858 LDR X0, [X0 + 0x478]
	0x01D4585C BL 0x1C16CF4
	0x01D45860 ADRP X0, 0x23AF000
	0x01D45864 LDR X0, [X0 + 0x480]
	0x01D45868 BL 0x1C16CF4
	0x01D4586C ADRP X0, 0x23AF000
	0x01D45870 LDR X0, [X0 + 0x88]
	0x01D45874 BL 0x1C16CF4
	0x01D45878 ADRP X0, 0x23AF000
	0x01D4587C LDR X0, [X0 + 0x488]
	0x01D45880 BL 0x1C16CF4
	0x01D45884 ADRP X0, 0x23AF000
	0x01D45888 LDR X0, [X0 + 0x490]
	0x01D4588C BL 0x1C16CF4
	0x01D45890 ADRP X0, 0x23AE000
	0x01D45894 LDR X0, [X0 + 0xBA8]
	0x01D45898 BL 0x1C16CF4
	0x01D4589C ADRP X0, 0x23AF000
	0x01D458A0 LDR X0, [X0 + 0x498]
	0x01D458A4 BL 0x1C16CF4
	0x01D458A8 ADRP X0, 0x23AF000
	0x01D458AC LDR X0, [X0 + 0x4A0]
	0x01D458B0 BL 0x1C16CF4
	0x01D458B4 ADRP X0, 0x23AF000
	0x01D458B8 LDR X0, [X0 + 0x4A8]
	0x01D458BC BL 0x1C16CF4
	0x01D458C0 ADRP X0, 0x23AF000
	0x01D458C4 LDR X0, [X0 + 0x448]
	0x01D458C8 BL 0x1C16CF4
	0x01D458CC ADRP X0, 0x23AF000
	0x01D458D0 LDR X0, [X0 + 0x4B0]
	0x01D458D4 BL 0x1C16CF4
	0x01D458D8 ADRP X0, 0x23AF000
	0x01D458DC LDR X0, [X0 + 0x4B8]
	0x01D458E0 BL 0x1C16CF4
	0x01D458E4 ADRP X0, 0x23AF000
	0x01D458E8 LDR X0, [X0 + 0x4C0]
	0x01D458EC BL 0x1C16CF4
	0x01D458F0 ADRP X0, 0x23AF000
	0x01D458F4 LDR X0, [X0 + 0x4C8]
	0x01D458F8 BL 0x1C16CF4
	0x01D458FC MOVZ W8, 0x1
	0x01D45900 STRB W8, [X21 + 0x767]
	0x01D45904 CBZ X20, 0x1D45D98
	0x01D45908 MOV X0, X20
	0x01D4590C MOV X1, X31
	0x01D45910 BL 0x34D072C
	0x01D45914 LDR X8, [X20]
	0x01D45918 TBZ X0, 0x0, 0x1D45C04
	0x01D4591C LDP X9, X1, [X8 + 0x178]
	0x01D45920 MOV X0, X20
	0x01D45924 BLR X9
	0x01D45928 CBZ X0, 0x1D45930
	0x01D4592C LDR X0, [X0 + 0x18]
	0x01D45930 MOV X1, X31
	0x01D45934 BL 0x35B9804
	0x01D45938 ADRP X8, 0x23AF000
	0x01D4593C LDR X8, [X8 + 0x460]
	0x01D45940 MOV X21, X0
	0x01D45944 LDR X8, [X8]
	0x01D45948 LDR W9, [X8 + 0xE0]
	0x01D4594C CBNZ W9, 0x1D45958
	0x01D45950 MOV X0, X8
	0x01D45954 BL 0x1C16DFC
	0x01D45958 MOV X0, X21
	0x01D4595C MOV X1, X31
	0x01D45960 MOV X2, X31
	0x01D45964 BL 0x35ADA5C
	0x01D45968 TBZ X0, 0x0, 0x1D45AE8
	0x01D4596C CBZ X21, 0x1D45D98
	0x01D45970 ADRP X9, 0x23AF000
	0x01D45974 LDR X8, [X21]
	0x01D45978 LDR X9, [X9 + 0x4C8]
	0x01D4597C MOV X0, X21
	0x01D45980 LDR X1, [X9]
	0x01D45984 LDP X9, X2, [X8 + 0x1A8]
	0x01D45988 BLR X9
	0x01D4598C CBZ X0, 0x1D45D98
	0x01D45990 LDR X8, [X0]
	0x01D45994 LDP X9, X1, [X8 + 0x1C8]
	0x01D45998 BLR X9
	0x01D4599C ADRP X8, 0x23AF000
	0x01D459A0 LDR X8, [X8 + 0x4A0]
	0x01D459A4 MOV X2, X31
	0x01D459A8 LDR X1, [X8]
	0x01D459AC BL 0x321BA08
	0x01D459B0 TBZ X0, 0x0, 0x1D45AE8
	0x01D459B4 ADRP X22, 0x23AE000
	0x01D459B8 LDR X22, [X22 + 0x720]
	0x01D459BC LDR X0, [X22]
	0x01D459C0 BL 0x1C16F10
	0x01D459C4 ADRP X23, 0x23AE000
	0x01D459C8 LDR X23, [X23 + 0x718]
	0x01D459CC MOV X21, X0
	0x01D459D0 LDR X1, [X23]
	0x01D459D4 BL 0x2AA4804
	0x01D459D8 LDR X8, [X19 + 0x10]
	0x01D459DC CBZ X8, 0x1D45D98
	0x01D459E0 CBZ X21, 0x1D45D98
	0x01D459E4 LDR X2, [X8 + 0x58]
	0x01D459E8 ADRP X8, 0x23AF000
	0x01D459EC ADRP X24, 0x23AE000
	0x01D459F0 LDR X8, [X8 + 0x448]
	0x01D459F4 LDR X24, [X24 + 0x710]
	0x01D459F8 MOV X0, X21
	0x01D459FC LDR X1, [X8]
	0x01D45A00 LDR X3, [X24]
	0x01D45A04 BL 0x2AA5098
	0x01D45A08 ADRP X8, 0x23AE000
	0x01D45A0C LDR X8, [X8 + 0xB50]
	0x01D45A10 LDR X0, [X8]
	0x01D45A14 LDR W8, [X0 + 0xE0]
	0x01D45A18 CBNZ W8, 0x1D45A20
	0x01D45A1C BL 0x1C16DFC
	0x01D45A20 ADRP X8, 0x23AF000
	0x01D45A24 LDR X8, [X8 + 0x4B8]
	0x01D45A28 MOV X1, X21
	0x01D45A2C MOV X2, X31
	0x01D45A30 LDR X0, [X8]
	0x01D45A34 BL 0x1DC4DD0
	0x01D45A38 LDR X8, [X19 + 0x10]
	0x01D45A3C CBZ X8, 0x1D45D98
	0x01D45A40 MOVZ W9, 0x4
	0x01D45A44 STR W9, [X8 + 0x64]
	0x01D45A48 LDR X0, [X22]
	0x01D45A4C BL 0x1C16F10
	0x01D45A50 LDR X1, [X23]
	0x01D45A54 MOV X21, X0
	0x01D45A58 BL 0x2AA4804
	0x01D45A5C LDR X8, [X19 + 0x10]
	0x01D45A60 CBZ X8, 0x1D45D98
	0x01D45A64 CBZ X21, 0x1D45D98
	0x01D45A68 LDR X2, [X8 + 0x58]
	0x01D45A6C ADRP X8, 0x23AF000
	0x01D45A70 LDR X8, [X8 + 0x490]
	0x01D45A74 LDR X3, [X24]
	0x01D45A78 MOV X0, X21
	0x01D45A7C LDR X1, [X8]
	0x01D45A80 BL 0x2AA5098
	0x01D45A84 ADRP X8, 0x23AE000
	0x01D45A88 LDR X8, [X8 + 0x788]
	0x01D45A8C LDR X0, [X8]
	0x01D45A90 LDR W8, [X0 + 0xE0]
	0x01D45A94 CBNZ W8, 0x1D45A9C
	0x01D45A98 BL 0x1C16DFC
	0x01D45A9C ADRP X8, 0x23AF000
	0x01D45AA0 ADRP X9, 0x23AF000
	0x01D45AA4 ADRP X10, 0x23AF000
	0x01D45AA8 LDR X8, [X8 + 0x4C0]
	0x01D45AAC LDR X9, [X9 + 0x488]
	0x01D45AB0 LDR X10, [X10 + 0x88]
	0x01D45AB4 MOVZ W0, 0x4000
	0x01D45AB8 LDR X1, [X8]
	0x01D45ABC LDR X3, [X9]
	0x01D45AC0 LDR X4, [X10]
	0x01D45AC4 MOVZ W5, 0x31
	0x01D45AC8 MOV X2, X21
	0x01D45ACC MOV X6, X31
	0x01D45AD0 BL 0x35C2158
	0x01D45AD4 LDR X0, [X19 + 0x10]
	0x01D45AD8 CBZ X0, 0x1D45D98
	0x01D45ADC LDR X8, [X0]
	0x01D45AE0 LDP X9, X1, [X8 + 0x1B8]
	0x01D45AE4 BLR X9
	0x01D45AE8 LDR X8, [X19 + 0x10]
	0x01D45AEC CBZ X8, 0x1D45D98
	0x01D45AF0 MOVZ W9, 0x5
	0x01D45AF4 MOV X0, X20
	0x01D45AF8 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X20, 0x2694000
	008 Move W8, [X20+1886]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {46}
	014 Move X0, 0x23AF000
	015 Move X0, [X0+2720]
	016 Call 0x1C17CF4
	017 Move X0, 0x23AF000
	018 Move X0, [X0+1608]
	019 Call 0x1C17CF4
	020 Move X0, 0x23AF000
	021 Move X0, [X0+2728]
	022 Call 0x1C17CF4
	023 Move X0, 0x23AF000
	024 Move X0, [X0+2736]
	025 Call 0x1C17CF4
	026 Move X0, 0x23AF000
	027 Move X0, [X0+2744]
	028 Call 0x1C17CF4
	029 Move X0, 0x23AF000
	030 Move X0, [X0+2768]
	031 Call 0x1C17CF4
	032 Move X0, 0x23AF000
	033 Move X0, [X0+2776]
	034 Call 0x1C17CF4
	035 Move X0, 0x23B0000
	036 Move X0, [X0+992]
	037 Call 0x1C17CF4
	038 Move X0, 0x23B0000
	039 Move X0, [X0+1000]
	040 Call 0x1C17CF4
	041 Move X0, 0x23AF000
	042 Move X0, [X0+2872]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X20+1886], W8
	046 Move W8, [X19+16]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Compare W8, 0
	050 JumpIfNotEqual {192}
	051 Move TEMP, 0
	052 Not TEMP
	053 Move W8, TEMP
	054 Move [X19+16], W8
	055 Move X8, 0x23B0000
	056 Move X8, [X8+1000]
	057 Move X0, [X8]
	058 Call 0x1C17F10
	059 Move X1, X31
	060 Move X20, X0
	061 Call Object..ctor, X0
	062 Move [X19+32], X20
	063 Move X8, 0x23AF000
	064 Move X8, [X8+2720]
	065 Move X0, [X8]
	066 Call 0x1C17F10
	067 Move X1, X31
	068 Move X21, X0
	069 Call ApiBootstrapRequest..ctor, X0
	070 Compare X20, 0
	071 JumpIfEqual {200}
	072 Move [X20+16], X21
	073 Move X0, [X19+40]
	074 Move TEMP, 0
	075 Not TEMP
	076 Move W8, TEMP
	077 Move [X19+16], W8
	078 Compare X0, 0
	079 JumpIfEqual {200}
	080 Move X1, X31
	081 Call Command.get_isAborted, X0
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {144}
	086 Move X8, 0x23AF000
	087 Move X8, [X8+2736]
	088 Move W1, 1
	089 Move X0, [X8]
	090 Call 0x1C17D6C
	091 Move X8, [X19+40]
	092 Compare X8, 0
	093 JumpIfEqual {200}
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 Move X8, 0x23AF000
	098 Move X8, [X8+2728]
	099 Move X20, X0
	100 Move [X31+16], V2
	101 Move [X31+24], V1
	102 Move [X31], V0
	103 Move X0, [X8]
	104 Call 0x1C17F10
	105 Move X1, X31
	106 Move X21, X0
	107 Call Object..ctor, X0
	108 Move V1, [X31+16]
	109 Move V0, [X31+32]
	110 Move V2, [X31]
	111 Move X8, [X21]
	112 Move W1, 1
	113 Move [X21+56], V0
	114 Move [X21+40], V1
	115 Move [X21+24], V2
	116 Move X9, [X8+408]
	117 Move X2, [X8+416]
	118 Move X0, X21
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Compare X20, 0
	121 JumpIfEqual {200}
	122 Move X21, X0
	123 Compare X0, 0
	124 JumpIfEqual {131}
	125 Move X8, [X20]
	126 Move X0, X21
	127 Move X1, [X8+64]
	128 Call 0x1C17E00
	129 Compare X0, 0
	130 JumpIfEqual {202}
	131 Move W8, [X20+24]
	132 Compare W8, 0
	133 JumpIfEqual {201}
	134 Move [X20+32], X21
	135 Move X8, 0x23AF000
	136 Move X8, [X8+1608]
	137 Move X0, [X8]
	138 Move W8, [X0+224]
	139 Compare W8, 0
	140 JumpIfNotEqual {142}
	141 Call 0x1C17DFC
	142 Move X0, X20
	143 Call App.ExecuteAction, X0
	144 Move [X19+40], X31
	145 Move W8, 0x43960000
	146 Move S0, W8
	147 Move W0, W31
	148 Move X1, X31
	149 Call Commands.WaitForSeconds, V0, X0
	150 Move W8, 1
	151 Move X21, [X19+32]
	152 Move TEMP, 0
	153 Not TEMP
	154 Move W8, TEMP
	155 Move [X19+16], W8
	156 Compare X21, 0
	157 JumpIfEqual {200}
	158 Move X8, 0x23AF000
	159 Move X22, [X21+24]
	160 Move X8, [X8+2872]
	161 Move X20, [X8]
	162 Compare X22, 0
	163 JumpIfNotEqual {176}
	164 Move X8, 0x23AF000
	165 Move X8, [X8+2776]
	166 Move X0, [X8]
	167 Call 0x1C17F10
	168 Move X8, 0x23B0000
	169 Move X8, [X8+992]
	170 Move X1, X21
	171 Move X3, X31
	172 Move X22, X0
	173 Move X2, [X8]
	174 Call TaskGenerator`1<ClientBootstrapResponse>..ctor, X0, X1, X2
	175 Move [X21+24], X22
	176 Move X8, 0x23AF000
	177 Move X8, [X8+2744]
	178 Move X0, X20
	179 Move X1, X22
	180 Move W2, W31
	181 Move X4, [X8]
	182 Move X3, X31
	183 Call Commands.Task, X0, X1, X2, X3
	184 Move [X19+40], X0
	185 Compare X0, 0
	186 JumpIfEqual {200}
	187 Move W8, 2
	188 Move [X0+20], W31
	189 Move [X19+24], X0
	190 Move W0, 1
	191 Move [X19+16], W8
	192 Move W0, W31
	193 Move X20, [X31+80]
	194 Move X19, [X31+88]
	195 Move X22, [X31+64]
	196 Move X21, [X31+72]
	197 Move X30, [X31+48]
	198 Add X31, X31, 96
	199 Return X0
	200 Call 0x1C17F20
	201 Call 0x1C17F28
	202 Call 0x1C17F44
	203 Move X1, X31
	204 Call 0x1C17DEC

Method: SpatialSys.CommandLib.Command System.Collections.Generic.IEnumerator<SpatialSys.CommandLib.Command>.get_Current()

Disassembly:
	0x01D45AFC STR W9, [X8 + 0x64]
	0x01D45B00 BL 0x34D072C

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01D45B04 ADRP X8, 0x23AE000
	0x01D45B08 LDR X8, [X8 + 0xB58]
	0x01D45B0C AND W9, W0, 0x1
	0x01D45B10 ADD X1, X31, 0xC
	0x01D45B14 STRB W9, [X31 + 0xC]
	0x01D45B18 LDR X8, [X8]
	0x01D45B1C MOV X0, X8
	0x01D45B20 BL 0x1C16E04
	0x01D45B24 ADRP X9, 0x23AF000
	0x01D45B28 LDR W8, [X20 + 0x10]
	0x01D45B2C LDR X9, [X9 + 0x468]
	0x01D45B30 MOV X21, X0
	0x01D45B34 ADD X1, X31, 0x0
	0x01D45B38 STR W8, [X31]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x23AF000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x23B0000
	011 Move X0, [X0+1008]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01D45B3C LDR X0, [X9]
	0x01D45B40 BL 0x1C16E04

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

