Type: AnimalCompany.SetAvatarItemsCacheInitializedAction/<>c

Method: System.Void .cctor()

Disassembly:
	0x01D3BD94 TBNZ X8, 0x0, 0x1D3BDAC
	0x01D3BD98 ADRP X0, 0x23B8000
	0x01D3BD9C LDR X0, [X0 + 0x7D0]
	0x01D3BDA0 BL 0x1C16CF4
	0x01D3BDA4 MOVZ W8, 0x1
	0x01D3BDA8 STRB W8, [X21 + 0x717]
	0x01D3BDAC LDR X0, [X22]
	0x01D3BDB0 LDR W8, [X0 + 0xE0]
	0x01D3BDB4 CBNZ W8, 0x1D3BDBC
	0x01D3BDB8 BL 0x1C16DFC
	0x01D3BDBC MOV X0, X20
	0x01D3BDC0 MOV X1, X19
	0x01D3BDC4 LDP X20, X19, [X31 + 0x20]
	0x01D3BDC8 LDP X22, X21, [X31 + 0x10]
	0x01D3BDCC MOV X2, X31
	0x01D3BDD0 LDR X30, [X31], #0x30
	0x01D3BDD4 B 0x33B2C70
	0x01D3BDD8 STP X30, X23, [X31 - 0x30]!
	0x01D3BDDC STP X22, X21, [X31 + 0x10]
	0x01D3BDE0 STP X20, X19, [X31 + 0x20]
	0x01D3BDE4 ADRP X22, 0x269D000
	0x01D3BDE8 ADRP X23, 0x23B8000
	0x01D3BDEC LDRB W8, [X22 + 0x718]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x269E000
	005 Move X20, 0x23B9000
	006 Move W8, [X19+1799]
	007 Move X20, [X20+3656]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x23B9000
	013 Move X0, [X0+3656]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1799], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x01D3BDF0 LDR X23, [X23 + 0x7D0]
	0x01D3BDF4 MOV X19, X2

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: SpatialSys.ObservableState.StatePrimitive`1<System.Boolean> <.ctor>b__0_0(AnimalCompany.AppState s)

Disassembly:
	0x01D3BDF8 MOV X20, X1
	0x01D3BDFC MOV X21, X0
	0x01D3BE00 TBNZ X8, 0x0, 0x1D3BE18
	0x01D3BE04 ADRP X0, 0x23B8000
	0x01D3BE08 LDR X0, [X0 + 0x7D0]
	0x01D3BE0C BL 0x1C16CF4
	0x01D3BE10 MOVZ W8, 0x1
	0x01D3BE14 STRB W8, [X22 + 0x718]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {10}
	004 Move X8, [X1+200]
	005 Compare X8, 0
	006 JumpIfEqual {10}
	007 Move X0, [X8+72]
	008 Move X30, [X31+16]
	009 Return X0
	010 Call 0x1C17F20

