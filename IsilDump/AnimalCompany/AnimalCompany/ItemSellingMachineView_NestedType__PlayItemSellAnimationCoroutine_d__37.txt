Type: AnimalCompany.ItemSellingMachineView/<PlayItemSellAnimationCoroutine>d__37

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01CD8714 CMP W21, W8
	0x01CD8718 B.LT 0x1CD86EC
	0x01CD871C ADRP X8, 0x2275000
	0x01CD8720 LDR X8, [X8 + 0x818]
	0x01CD8724 FMOV S8, W31
	0x01CD8728 LDR X8, [X8]
	0x01CD872C STR W31, [X19 + 0x38]
	0x01CD8730 STR X8, [X19 + 0x30]
	0x01CD8734 B 0x1CD8760
	0x01CD8738 MOVZ W8, 0x2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01CD8E90 LDR X0, [X0 + 0x490]

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01CD8E94 BL 0x1B6E804
	0x01CD8E98 BL 0x1B6EA0C
	0x01CD8E9C MOV X19, X0
	0x01CD8EA0 ADRP X0, 0x2277000
	0x01CD8EA4 LDR X0, [X0 + 0xD68]
	0x01CD8EA8 BL 0x1B6E804
	0x01CD8EAC MOV X1, X0
	0x01CD8EB0 MOV X0, X19
	0x01CD8EB4 MOV X2, X31
	0x01CD8EB8 BL 0x31E7550
	0x01CD8EBC ADRP X0, 0x2277000
	0x01CD8EC0 LDR X0, [X0 + 0xD78]
	0x01CD8EC4 BL 0x1B6E804
	0x01CD8EC8 MOV X1, X0
	0x01CD8ECC MOV X0, X19
	0x01CD8ED0 BL 0x1B6E8E8
	0x01CD8ED4 STP X30, X19, [X31 - 0x10]!
	0x01CD8ED8 LDR X8, [X0 + 0x50]
	0x01CD8EDC CBZ X8, 0x1CD8EEC
	0x01CD8EE0 LDR V0, [X8 + 0x44]
	0x01CD8EE4 LDP X30, X19, [X31], #0x10
	0x01CD8EE8 RET
	0x01CD8EEC ADRP X0, 0x2275000
	0x01CD8EF0 LDR X0, [X0 + 0x490]
	0x01CD8EF4 BL 0x1B6E804
	0x01CD8EF8 BL 0x1B6EA0C
	0x01CD8EFC MOV X19, X0
	0x01CD8F00 ADRP X0, 0x2277000
	0x01CD8F04 LDR X0, [X0 + 0xD80]
	0x01CD8F08 BL 0x1B6E804
	0x01CD8F0C MOV X1, X0
	0x01CD8F10 MOV X0, X19
	0x01CD8F14 MOV X2, X31
	0x01CD8F18 BL 0x31E7550
	0x01CD8F1C ADRP X0, 0x2277000
	0x01CD8F20 LDR X0, [X0 + 0xD88]
	0x01CD8F24 BL 0x1B6E804
	0x01CD8F28 MOV X1, X0
	0x01CD8F2C MOV X0, X19
	0x01CD8F30 BL 0x1B6E8E8
	0x01CD8F34 STP X30, X19, [X31 - 0x10]!
	0x01CD8F38 LDR X8, [X0 + 0x50]
	0x01CD8F3C CBZ X8, 0x1CD8F4C
	0x01CD8F40 STR S0, [X8 + 0x44]
	0x01CD8F44 LDP X30, X19, [X31], #0x10
	0x01CD8F48 RET
	0x01CD8F4C ADRP X0, 0x2275000
	0x01CD8F50 LDR X0, [X0 + 0x490]
	0x01CD8F54 BL 0x1B6E804
	0x01CD8F58 BL 0x1B6EA0C
	0x01CD8F5C MOV X19, X0
	0x01CD8F60 ADRP X0, 0x2277000
	0x01CD8F64 LDR X0, [X0 + 0xD80]
	0x01CD8F68 BL 0x1B6E804
	0x01CD8F6C MOV X1, X0
	0x01CD8F70 MOV X0, X19
	0x01CD8F74 MOV X2, X31
	0x01CD8F78 BL 0x31E7550
	0x01CD8F7C ADRP X0, 0x2277000
	0x01CD8F80 LDR X0, [X0 + 0xD90]
	0x01CD8F84 BL 0x1B6E804
	0x01CD8F88 MOV X1, X0
	0x01CD8F8C MOV X0, X19
	0x01CD8F90 BL 0x1B6E8E8
	0x01CD8F94 STR X30, [X31 - 0x10]!
	0x01CD8F98 LDR X0, [X0 + 0xD0]
	0x01CD8F9C CBZ X0, 0x1CD8FAC
	0x01CD8FA0 MOV X1, X31
	0x01CD8FA4 LDR X30, [X31], #0x10
	0x01CD8FA8 B 0x3AA7658
	0x01CD8FAC BL 0x1B6EA1C
	0x01CD8FB0 STP X30, X19, [X31 - 0x10]!
	0x01CD8FB4 MOV X1, X31
	0x01CD8FB8 MOV X19, X0
	0x01CD8FBC BL 0x1CE54EC
	0x01CD8FC0 LDR X0, [X19 + 0x40]
	0x01CD8FC4 CBZ X0, 0x1CD9010
	0x01CD8FC8 MOV X1, X31
	0x01CD8FCC BL 0x1D9E780
	0x01CD8FD0 TBZ X0, 0x0, 0x1CD8FDC
	0x01CD8FD4 MOV X0, X19
	0x01CD8FD8 BL 0x1CD9014
	0x01CD8FDC LDR X0, [X19 + 0xC8]
	0x01CD8FE0 CBZ X0, 0x1CD9010
	0x01CD8FE4 MOVZ W1, 0x1
	0x01CD8FE8 MOV X2, X31
	0x01CD8FEC BL 0x3A4ACE4
	0x01CD8FF0 LDR X0, [X19 + 0xC8]
	0x01CD8FF4 CBZ X0, 0x1CD9010
	0x01CD8FF8 MOVZ W1, 0x1
	0x01CD8FFC MOV X2, X31
	0x01CD9000 BL 0x3A4AD28
	0x01CD9004 MOV X0, X19
	0x01CD9008 LDP X30, X19, [X31], #0x10
	0x01CD900C B 0x1CD90C4
	0x01CD9010 BL 0x1B6EA1C
	0x01CD9014 STP X30, X19, [X31 - 0x10]!
	0x01CD9018 MOVZ W1, 0x1
	0x01CD901C MOV X19, X0
	0x01CD9020 BL 0x1CD8DB4
	0x01CD9024 LDR X8, [X19]
	0x01CD9028 MOV X0, X19
	0x01CD902C MOV X1, X31
	0x01CD9030 LDR X9, [X8 + 0x338]
	0x01CD9034 LDR X2, [X8 + 0x340]
	0x01CD9038 BLR X9
	0x01CD903C LDR X9, [X19 + 0xB8]
	0x01CD9040 CBZ X9, 0x1CD90BC
	0x01CD9044 LDR X8, [X9 + 0x30]
	0x01CD9048 CBZ X8, 0x1CD90BC
	0x01CD904C LDR W10, [X8 + 0x18]
	0x01CD9050 CBZ W10, 0x1CD90C0
	0x01CD9054 LDR X10, [X9 + 0x58]
	0x01CD9058 CBZ X10, 0x1CD90BC
	0x01CD905C LDR W11, [X10 + 0x18]
	0x01CD9060 CBZ W11, 0x1CD90C0
	0x01CD9064 LDR X9, [X9 + 0x60]
	0x01CD9068 CBZ X9, 0x1CD90BC
	0x01CD906C LDR W11, [X9 + 0x18]
	0x01CD9070 CBZ W11, 0x1CD90C0
	0x01CD9074 LDR X11, [X19]
	0x01CD9078 LDR V0, [X8 + 0x20]
	0x01CD907C LDR V1, [X10 + 0x20]
	0x01CD9080 LDR V2, [X9 + 0x20]
	0x01CD9084 LDR X8, [X11 + 0x2A8]
	0x01CD9088 LDR X2, [X11 + 0x2B0]
	0x01CD908C MOV X0, X19
	0x01CD9090 MOV W1, W31
	0x01CD9094 BLR X8
	0x01CD9098 LDR X8, [X19]
	0x01CD909C MOVZ W1, 0x1
	0x01CD90A0 MOV X0, X19
	0x01CD90A4 LDR X9, [X8 + 0x308]
	0x01CD90A8 LDR X2, [X8 + 0x310]
	0x01CD90AC BLR X9
	0x01CD90B0 STR W31, [X19 + 0xE0]
	0x01CD90B4 LDP X30, X19, [X31], #0x10
	0x01CD90B8 RET
	0x01CD90BC BL 0x1B6EA1C
	0x01CD90C0 BL 0x1B6EA24
	0x01CD90C4 STP X30, X21, [X31 - 0x20]!
	0x01CD90C8 STP X20, X19, [X31 + 0x10]
	0x01CD90CC MOV X19, X0
	0x01CD90D0 BL 0x1CD8D54
	0x01CD90D4 SUB W8, W0, 0x1
	0x01CD90D8 CMP W8, 0x4
	0x01CD90DC B.HI 0x1CD9170
	0x01CD90E0 ADRP X9, 0xFFFFFFFFFEE13000
	0x01CD90E4 ADD X9, X9, 0x92C
	0x01CD90E8 ADR X10, 0x10
	0x01CD90EC LDRB W11, [X9, X8, LSL]
	0x01CD90F0 ADD X10, X10, X11, 0x2, LSL
	0x01CD90F4 BR X10
	0x01CD90F8 LDR X0, [X19 + 0xC0]
	0x01CD90FC CBZ X0, 0x1CD920C
	0x01CD9100 LDR X8, [X0]
	0x01CD9104 LDP X9, X1, [X8 + 0x1C8]
	0x01CD9108 B 0x1CD9168
	0x01CD910C LDR X0, [X19 + 0xC0]
	0x01CD9110 CBZ X0, 0x1CD920C
	0x01CD9114 LDR X8, [X0]
	0x01CD9118 FMOV S0, 1
	0x01CD911C LDP X9, X1, [X8 + 0x1C8]
	0x01CD9120 BLR X9
	0x01CD9124 LDR X8, [X19 + 0x188]
	0x01CD9128 CBZ X8, 0x1CD920C
	0x01CD912C LDR X0, [X8 + 0xC0]
	0x01CD9130 CBZ X0, 0x1CD920C
	0x01CD9134 MOV X1, X31
	0x01CD9138 BL 0x3A65954
	0x01CD913C B 0x1CD9170
	0x01CD9140 LDR X0, [X19 + 0xC0]
	0x01CD9144 CBZ X0, 0x1CD920C
	0x01CD9148 LDR X8, [X0]
	0x01CD914C LDP X9, X1, [X8 + 0x1E8]
	0x01CD9150 BLR X9
	0x01CD9154 B 0x1CD9170
	0x01CD9158 LDR X0, [X19 + 0xC0]
	0x01CD915C CBZ X0, 0x1CD920C
	0x01CD9160 LDR X8, [X0]
	0x01CD9164 LDP X9, X1, [X8 + 0x1D8]
	0x01CD9168 FMOV S0, 1
	0x01CD916C BLR X9
	0x01CD9170 LDR X20, [X19 + 0x188]
	0x01CD9174 MOV X0, X19
	0x01CD9178 BL 0x1CD8D54
	0x01CD917C CBZ X20, 0x1CD920C
	0x01CD9180 CMP W0, 0x5
	0x01CD9184 CSET W1, EQ
	0x01CD9188 FMOV S0, 1
	0x01CD918C MOV X0, X20
	0x01CD9190 BL 0x1CD92B0
	0x01CD9194 LDR X20, [X19 + 0x188]
	0x01CD9198 MOV X0, X19
	0x01CD919C BL 0x1CD8D54
	0x01CD91A0 CBZ X20, 0x1CD920C
	0x01CD91A4 CMP W0, 0x5
	0x01CD91A8 FMOV S0, 1.5
	0x01CD91AC FMOV S1, 3.5
	0x01CD91B0 FCSEL S0, S1, S0, EQ
	0x01CD91B4 STR S0, [X20 + 0xE0]
	0x01CD91B8 LDR X20, [X19 + 0x188]
	0x01CD91BC MOV X0, X19
	0x01CD91C0 BL 0x1CD8D54
	0x01CD91C4 CMP W0, 0x4
	0x01CD91C8 B.NE 0x1CD91D4
	0x01CD91CC MOVZ W21, 0x1
	0x01CD91D0 B 0x1CD91E4
	0x01CD91D4 MOV X0, X19
	0x01CD91D8 BL 0x1CD8D54
	0x01CD91DC CMP W0, 0x5
	0x01CD91E0 CSET W21, EQ
	0x01CD91E4 MOV X0, X19
	0x01CD91E8 BL 0x1CD8D54
	0x01CD91EC CBZ X20, 0x1CD920C
	0x01CD91F0 CMP W0, 0x4
	0x01CD91F4 MOV X0, X20
	0x01CD91F8 LDP X20, X19, [X31 + 0x10]
	0x01CD91FC CSET W2, EQ
	0x01CD9200 MOV W1, W21
	0x01CD9204 LDP X30, X21, [X31], #0x20
	0x01CD9208 B 0x1CD9354
	0x01CD920C BL 0x1B6EA1C
	0x01CD9210 STP X30, X19, [X31 - 0x10]!
	0x01CD9214 MOV X1, X31
	0x01CD9218 MOV X19, X0
	0x01CD921C BL 0x1CE5C84
	0x01CD9220 LDR X0, [X19 + 0x40]
	0x01CD9224 CBZ X0, 0x1CD9248
	0x01CD9228 MOV X1, X31
	0x01CD922C BL 0x1D9E780
	0x01CD9230 TBZ X0, 0x0, 0x1CD9240
	0x01CD9234 MOV X0, X19
	0x01CD9238 LDP X30, X19, [X31], #0x10
	0x01CD923C B 0x1CD9014
	0x01CD9240 LDP X30, X19, [X31], #0x10
	0x01CD9244 RET
	0x01CD9248 BL 0x1B6EA1C
	0x01CD924C STP X30, X19, [X31 - 0x10]!
	0x01CD9250 MOV X1, X31
	0x01CD9254 MOV X19, X0
	0x01CD9258 BL 0x1CE5B40
	0x01CD925C LDR X0, [X19 + 0x40]
	0x01CD9260 CBZ X0, 0x1CD9288
	0x01CD9264 MOV X1, X31
	0x01CD9268 BL 0x1D9E780
	0x01CD926C TBZ X0, 0x0, 0x1CD9280
	0x01CD9270 MOVZ W1, 0x6
	0x01CD9274 MOV X0, X19
	0x01CD9278 LDP X30, X19, [X31], #0x10
	0x01CD927C B 0x1CD8DB4
	0x01CD9280 LDP X30, X19, [X31], #0x10
	0x01CD9284 RET
	0x01CD9288 BL 0x1B6EA1C
	0x01CD928C STR X1, [X0 + 0x178]
	0x01CD9290 RET
	0x01CD9294 STR X30, [X31 - 0x10]!
	0x01CD9298 LDR X0, [X0 + 0xC0]
	0x01CD929C CBZ X0, 0x1CD92AC
	0x01CD92A0 MOV X1, X31
	0x01CD92A4 LDR X30, [X31], #0x10
	0x01CD92A8 B 0x3A65954
	0x01CD92AC BL 0x1B6EA1C
	0x01CD92B0 STR D8, [X31 - 0x20]!
	0x01CD92B4 STR X30, [X31 + 0x8]
	0x01CD92B8 STP X20, X19, [X31 + 0x10]
	0x01CD92BC MOV X19, X0
	0x01CD92C0 LDR X0, [X0 + 0xD0]
	0x01CD92C4 CBZ X0, 0x1CD9328
	0x01CD92C8 MOV W20, W1
	0x01CD92CC MOV X1, X31
	0x01CD92D0 MOV V8.16B, V0.16B
	0x01CD92D4 BL 0x3A65B14
	0x01CD92D8 TBZ X20, 0x0, 0x1CD92F4
	0x01CD92DC TBNZ X0, 0x0, 0x1CD9308
	0x01CD92E0 LDR X0, [X19 + 0xD0]
	0x01CD92E4 CBZ X0, 0x1CD9328
	0x01CD92E8 MOV X1, X31
	0x01CD92EC BL 0x3A65954
	0x01CD92F0 B 0x1CD9308
	0x01CD92F4 TBZ X0, 0x0, 0x1CD9308
	0x01CD92F8 LDR X0, [X19 + 0xD0]
	0x01CD92FC CBZ X0, 0x1CD9328
	0x01CD9300 MOV X1, X31
	0x01CD9304 BL 0x3A65A98
	0x01CD9308 LDR X0, [X19 + 0xD0]
	0x01CD930C CBZ X0, 0x1CD9328
	0x01CD9310 LDP X20, X19, [X31 + 0x10]
	0x01CD9314 LDR X30, [X31 + 0x8]
	0x01CD9318 MOV V0.16B, V8.16B
	0x01CD931C MOV X1, X31
	0x01CD9320 LDR V8, [X31], #0x20
	0x01CD9324 B 0x3A657B4
	0x01CD9328 BL 0x1B6EA1C
	0x01CD932C STR X30, [X31 - 0x10]!
	0x01CD9330 CBZ X0, 0x1CD9350
	0x01CD9334 ANDS W31, W1, 0x1
	0x01CD9338 FMOV S0, 1.5
	0x01CD933C FMOV S1, 3.5
	0x01CD9340 FCSEL S0, S1, S0, NE
	0x01CD9344 STR S0, [X0 + 0xE0]
	0x01CD9348 LDR X30, [X31], #0x10
	0x01CD934C RET
	0x01CD9350 BL 0x1B6EA1C
	0x01CD9354 STP X30, X23, [X31 - 0x30]!
	0x01CD9358 STP X22, X21, [X31 + 0x10]
	0x01CD935C STP X20, X19, [X31 + 0x20]
	0x01CD9360 ADRP X22, 0x254A000
	0x01CD9364 LDRB W8, [X22 + 0x61E]
	0x01CD9368 MOV W19, W2
	0x01CD936C MOV W21, W1
	0x01CD9370 MOV X20, X0
	0x01CD9374 TBNZ X8, 0x0, 0x1CD938C
	0x01CD9378 ADRP X0, 0x2276000
	0x01CD937C LDR X0, [X0 + 0xD98]
	0x01CD9380 BL 0x1B6E7F0
	0x01CD9384 MOVZ W8, 0x1
	0x01CD9388 STRB W8, [X22 + 0x61E]
	0x01CD938C LDR X0, [X20 + 0xB0]
	0x01CD9390 CBZ X0, 0x1CD9460
	0x01CD9394 ADRP X23, 0x2276000
	0x01CD9398 LDR X23, [X23 + 0xD98]
	0x01CD939C MOV X1, X31
	0x01CD93A0 BL 0x3A7BCC8
	0x01CD93A4 LDR X8, [X23]
	0x01CD93A8 MOV X22, X0
	0x01CD93AC LDR W9, [X8 + 0xE0]
	0x01CD93B0 CBZ W9, 0x1CD93CC
	0x01CD93B4 TBZ X21, 0x0, 0x1CD93DC
	0x01CD93B8 ADD X9, X20, 0x88
	0x01CD93BC ADD X10, X20, 0x8C
	0x01CD93C0 ADD X11, X20, 0x90
	0x01CD93C4 ADD X12, X20, 0x94
	0x01CD93C8 B 0x1CD93EC
	0x01CD93CC MOV X0, X8
	0x01CD93D0 BL 0x1B6E8F8
	0x01CD93D4 LDR X8, [X23]
	0x01CD93D8 TBNZ X21, 0x0, 0x1CD93B8
	0x01CD93DC ADD X9, X20, 0x98
	0x01CD93E0 ADD X10, X20, 0x9C
	0x01CD93E4 ADD X11, X20, 0xA0
	0x01CD93E8 ADD X12, X20, 0xA4
	0x01CD93EC CBZ X22, 0x1CD9460
	0x01CD93F0 LDR X8, [X8 + 0xB8]
	0x01CD93F4 LDR V3, [X12]
	0x01CD93F8 LDR V2, [X11]
	0x01CD93FC LDR V1, [X10]
	0x01CD9400 LDR W1, [X8]
	0x01CD9404 LDR V0, [X9]
	0x01CD9408 MOV X0, X22
	0x01CD940C MOV X2, X31
	0x01CD9410 BL 0x3A7D234
	0x01CD9414 LDR X0, [X20 + 0xA8]
	0x01CD9418 CBZ X0, 0x1CD9460
	0x01CD941C AND W1, W21, 0x1
	0x01CD9420 MOV X2, X31
	0x01CD9424 BL 0x3A9A604
	0x01CD9428 TBZ X21, 0x0, 0x1CD9450
	0x01CD942C TBZ X19, 0x0, 0x1CD9450
	0x01CD9430 LDR X0, [X20 + 0xA8]
	0x01CD9434 CBZ X0, 0x1CD9460
	0x01CD9438 LDP X20, X19, [X31 + 0x20]
	0x01CD943C LDP X22, X21, [X31 + 0x10]
	0x01CD9440 FMOV S0, W31
	0x01CD9444 MOV X1, X31
	0x01CD9448 LDP X30, X23, [X31], #0x30
	0x01CD944C B 0x3A7F1D4
	0x01CD9450 LDP X20, X19, [X31 + 0x20]
	0x01CD9454 LDP X22, X21, [X31 + 0x10]
	0x01CD9458 LDP X30, X23, [X31], #0x30
	0x01CD945C RET
	0x01CD9460 BL 0x1B6EA1C
	0x01CD9464 SUB X31, X31, 0x40
	0x01CD9468 STR X30, [X31 + 0x20]
	0x01CD946C STP X20, X19, [X31 + 0x30]
	0x01CD9470 ADRP X20, 0x254A000
	0x01CD9474 LDRB W8, [X20 + 0x613]
	0x01CD9478 MOV X19, X0
	0x01CD947C TBNZ X8, 0x0, 0x1CD9494
	0x01CD9480 ADRP X0, 0x2276000
	0x01CD9484 LDR X0, [X0 + 0xDA0]
	0x01CD9488 BL 0x1B6E7F0
	0x01CD948C MOVZ W8, 0x1
	0x01CD9490 STRB W8, [X20 + 0x613]
	0x01CD9494 MOV X0, X19
	0x01CD9498 MOV X1, X31
	0x01CD949C BL 0x1CE58BC
	0x01CD94A0 MOV X0, X19
	0x01CD94A4 MOV X1, X31
	0x01CD94A8 BL 0x1CE4CE0
	0x01CD94AC TBZ X0, 0x0, 0x1CD9578
	0x01CD94B0 MOV X0, X19
	0x01CD94B4 BL 0x1CD8D54
	0x01CD94B8 SUB W8, W0, 0x1
	0x01CD94BC CMP W8, 0x4
	0x01CD94C0 B.HI 0x1CD9524
	0x01CD94C4 ADRP X9, 0xFFFFFFFFFEE13000
	0x01CD94C8 ADD X9, X9, 0x931
	0x01CD94CC ADR X10, 0x10
	0x01CD94D0 LDRB W11, [X9, X8, LSL]
	0x01CD94D4 ADD X10, X10, X11, 0x2, LSL
	0x01CD94D8 BR X10
	0x01CD94DC LDR X8, [X19]
	0x01CD94E0 LDR X9, [X8 + 0x328]
	0x01CD94E4 LDR X1, [X8 + 0x330]
	0x01CD94E8 B 0x1CD951C
	0x01CD94EC MOV X0, X19
	0x01CD94F0 BL 0x1CD9588
	0x01CD94F4 B 0x1CD9524
	0x01CD94F8 MOV X0, X19
	0x01CD94FC BL 0x1CD9F74
	0x01CD9500 B 0x1CD9524
	0x01CD9504 MOV X0, X19
	0x01CD9508 BL 0x1CDA424
	0x01CD950C B 0x1CD9524
	0x01CD9510 LDR X8, [X19]
	0x01CD9514 LDR X9, [X8 + 0x348]
	0x01CD9518 LDR X1, [X8 + 0x350]
	0x01CD951C MOV X0, X19
	0x01CD9520 BLR X9
	0x01CD9524 BL 0x1CD2434
	0x01CD9528 TBZ X0, 0x0, 0x1CD9578
	0x01CD952C LDR X20, [X19 + 0x168]
	0x01CD9530 CBZ X20, 0x1CD9578
	0x01CD9534 MOV X0, X19
	0x01CD9538 BL 0x1CD8D54
	0x01CD953C ADRP X8, 0x2276000
	0x01CD9540 LDR X8, [X8 + 0xDA0]
	0x01CD9544 MOVN X9, 0x0
	0x01CD9548 STR W0, [X31 + 0x18]
	0x01CD954C ADD X0, X31, 0x8
	0x01CD9550 LDR X8, [X8]
	0x01CD9554 MOV X1, X31
	0x01CD9558 STP X8, X9, [X31 + 0x8]
	0x01CD955C BL 0x321AF98
	0x01CD9560 LDR X8, [X20 + 0x40]
	0x01CD9564 LDR X9, [X20 + 0x18]
	0x01CD9568 LDR X2, [X20 + 0x28]
	0x01CD956C MOV X1, X0
	0x01CD9570 MOV X0, X8
	0x01CD9574 BLR X9
	0x01CD9578 LDP X20, X19, [X31 + 0x30]
	0x01CD957C LDR X30, [X31 + 0x20]
	0x01CD9580 ADD X31, X31, 0x40
	0x01CD9584 RET
	0x01CD9588 SUB X31, X31, 0xE0
	0x01CD958C STP D15, D14, [X31 + 0x60]
	0x01CD9590 STP D13, D12, [X31 + 0x70]
	0x01CD9594 STP D11, D10, [X31 + 0x80]
	0x01CD9598 STP D9, D8, [X31 + 0x90]
	0x01CD959C STR X30, [X31 + 0xA0]
	0x01CD95A0 STP X24, X23, [X31 + 0xB0]
	0x01CD95A4 STP X22, X21, [X31 + 0xC0]
	0x01CD95A8 STP X20, X19, [X31 + 0xD0]
	0x01CD95AC ADRP X20, 0x254A000
	0x01CD95B0 LDRB W8, [X20 + 0x615]
	0x01CD95B4 MOV X19, X0
	0x01CD95B8 TBNZ X8, 0x0, 0x1CD9600
	0x01CD95BC ADRP X0, 0x2276000
	0x01CD95C0 LDR X0, [X0 + 0xDA8]
	0x01CD95C4 BL 0x1B6E7F0
	0x01CD95C8 ADRP X0, 0x2276000
	0x01CD95CC LDR X0, [X0 + 0xDB0]
	0x01CD95D0 BL 0x1B6E7F0
	0x01CD95D4 ADRP X0, 0x2276000
	0x01CD95D8 LDR X0, [X0 + 0xDB8]
	0x01CD95DC BL 0x1B6E7F0
	0x01CD95E0 ADRP X0, 0x2276000
	0x01CD95E4 LDR X0, [X0 + 0xDC0]
	0x01CD95E8 BL 0x1B6E7F0
	0x01CD95EC ADRP X0, 0x2274000
	0x01CD95F0 LDR X0, [X0 + 0x478]
	0x01CD95F4 BL 0x1B6E7F0
	0x01CD95F8 MOVZ W8, 0x1
	0x01CD95FC STRB W8, [X20 + 0x615]

ISIL:
	001 Move [X31-80], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x254C000
	012 Move W8, [X20+1551]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x2278000
	019 Move X0, [X0+3112]
	020 Call 0x1B6F7F0
	021 Move X0, 0x2277000
	022 Move X0, [X0+744]
	023 Call 0x1B6F7F0
	024 Move W8, 1
	025 Move [X20+1551], W8
	026 Move W8, [X19+16]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X20, [X19+32]
	029 Move X9, -18788352
	030 Add X9, X9, 2337
	031 NotImplemented "Instruction ADR not yet implemented."
	032 Move W11, [X9]
	033 Add X10, X10, X11
	034 CallNoReturn X10
	035 Move TEMP, 0
	036 Not TEMP
	037 Move W8, TEMP
	038 Move [X19+16], W8
	039 Compare X20, 0
	040 JumpIfEqual {506}
	041 Move X21, [X20+128]
	042 Compare X21, 0
	043 JumpIfEqual {506}
	044 Move X8, [X21+24]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X22, X31
	047 And X8, X8, 0
	048 Add X23, X21, 32
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X1, [X23]
	051 Compare X1, 0
	052 JumpIfEqual {56}
	053 Move X0, X20
	054 Move X2, X31
	055 Call MonoBehaviour.StopCoroutine, X0, X1
	056 Move W8, [X21+24]
	057 Add X22, X22, 1
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X8, [X20+72]
	060 Compare X8, 0
	061 JumpIfEqual {506}
	062 Move W9, [X8+24]
	063 Compare W9, 0
	064 JumpIfEqual {507}
	065 Move X0, [X8+32]
	066 Compare X0, 0
	067 JumpIfEqual {506}
	068 Move X1, X31
	069 Call Light.get_intensity, X0
	070 Move [X19+56], S0
	071 Move X21, [X20+72]
	072 Compare X21, 0
	073 JumpIfEqual {506}
	074 Move W8, [X21+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move W22, W31
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Add X8, X21, W22
	079 Move X0, [X8+32]
	080 Compare X0, 0
	081 JumpIfEqual {506}
	082 Move W1, W31
	083 Move X2, X31
	084 Call Behaviour.set_enabled, X0, X1
	085 Move W8, [X21+24]
	086 Add W22, W22, 1
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X0, [X20+56]
	089 Compare X0, 0
	090 JumpIfEqual {506}
	091 Move X1, X31
	092 Call Renderer.get_material, X0
	093 Move X22, 0x2278000
	094 Move X22, [X22+3112]
	095 Move X21, X0
	096 Move X8, [X22]
	097 Move W9, [X8+224]
	098 Compare W9, 0
	099 JumpIfNotEqual {102}
	100 Move X0, X8
	101 Call 0x1B6F8F8
	102 Compare X21, 0
	103 JumpIfEqual {506}
	104 Move X8, [X22]
	105 Move S0, 1
	106 Move X0, X21
	107 Move X2, X31
	108 Move X8, [X8+184]
	109 Move W1, [X8]
	110 Call Material.SetFloat, X0, X1, V0
	111 Move X23, [X20+64]
	112 Compare X23, 0
	113 JumpIfEqual {506}
	114 Move W8, [X23+24]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move W24, W31
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Add X8, X23, W24
	119 Move X0, [X8+32]
	120 Compare X0, 0
	121 JumpIfEqual {506}
	122 Move X1, X31
	123 Call Renderer.get_material, X0
	124 Move X8, [X22]
	125 Move X21, X0
	126 Move W9, [X8+224]
	127 Compare W9, 0
	128 JumpIfNotEqual {131}
	129 Move X0, X8
	130 Call 0x1B6F8F8
	131 Compare X21, 0
	132 JumpIfEqual {506}
	133 Move X8, [X22]
	134 Move S0, 1
	135 Move X0, X21
	136 Move X2, X31
	137 Move X8, [X8+184]
	138 Move W1, [X8]
	139 Call Material.SetFloat, X0, X1, V0
	140 Move W8, [X23+24]
	141 Add W24, W24, 1
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move X21, [X20+88]
	144 Move X0, X20
	145 Move X1, X31
	146 Call Component.get_transform, X0
	147 Compare X0, 0
	148 JumpIfEqual {506}
	149 Move X1, X31
	150 Call Transform.get_position, X0
	151 Move S3, 1
	152 Move X0, X21
	153 Move X1, X31
	154 Call SFXManager.PlaySFX, X0, X1, V0
	155 Move V8, [X19+40]
	156 Move [X19+60], S8
	157 Move V8, [X19+60]
	158 Move TEMP, 0
	159 Not TEMP
	160 Move W8, TEMP
	161 Move [X19+16], W8
	162 NotImplemented "Instruction FCMP not yet implemented."
	163 Move X0, X31
	164 Call Time.get_deltaTime
	165 Subtract S0, S8, S0
	166 Move [X19+60], S0
	167 Compare X20, 0
	168 JumpIfEqual {506}
	169 Move X8, [X20+112]
	170 Compare X8, 0
	171 JumpIfEqual {506}
	172 Move V1, [X19+40]
	173 Move X22, 0x2277000
	174 Move X22, [X22+3112]
	175 Move S9, 1
	176 NotImplemented "Instruction FDIV not yet implemented."
	177 Move TEMP, 0
	178 Not TEMP
	179 Move W21, TEMP
	180 Subtract S8, S9, S0
	181 Move S10, W31
	182 Move W8, [X8+24]
	183 Add W23, W21, 1
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Subtract S0, S9, S8
	186 Move S1, 3
	187 Call 0x3D1A8E0
	188 Move X0, [X22]
	189 Move V8, V0
	190 Move W8, [X0+224]
	191 Compare W8, 0
	192 JumpIfNotEqual {195}
	193 Call 0x1B6F8F8
	194 Move X0, [X22]
	195 Move X8, [X0+184]
	196 Move X8, [X8+16]
	197 Compare X8, 0
	198 JumpIfEqual {506}
	199 Move W9, [X8+24]
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move X9, [X20+112]
	202 Subtract S8, S9, S8
	203 NotImplemented "Instruction FMIN not yet implemented."
	204 NotImplemented "Instruction FCMP not yet implemented."
	205 NotImplemented "Instruction FCSEL not yet implemented."
	206 Compare X9, 0
	207 JumpIfEqual {506}
	208 Move W10, [X9+24]
	209 Add W21, W21, 1
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Move X10, W23
	212 Add X9, X9, X10
	213 Move X0, [X9+32]
	214 Compare X0, 0
	215 JumpIfEqual {506}
	216 Add X8, X8, X10
	217 Move V1, [X8+32]
	218 Move X1, X31
	219 Subtract S2, S10, S1
	220 Multiply S0, S0, S2
	221 Add S0, S1, S0
	222 Move S1, W31
	223 Move S2, W31
	224 Call Transform.set_localEulerAngles, X0, X1
	225 Move X8, [X20+112]
	226 Compare X8, 0
	227 JumpIfNotEqual {182}
	228 Move V8, [X19+60]
	229 Move TEMP, 0
	230 Not TEMP
	231 Move W8, TEMP
	232 Move [X19+16], W8
	233 Move TEMP, 0
	234 Not TEMP
	235 Move W8, TEMP
	236 Move [X19+16], W8
	237 Compare X20, 0
	238 JumpIfEqual {506}
	239 Move X21, [X20+96]
	240 Move X0, X20
	241 Move X1, X31
	242 Call Component.get_transform, X0
	243 Compare X0, 0
	244 JumpIfEqual {506}
	245 Move X1, X31
	246 Call Transform.get_position, X0
	247 Move S3, 1
	248 Move X0, X21
	249 Move X1, X31
	250 Call SFXManager.PlaySFX, X0, X1, V0
	251 Move V8, [X19+52]
	252 Move [X19+60], S8
	253 Move V8, [X19+60]
	254 Move TEMP, 0
	255 Not TEMP
	256 Move W8, TEMP
	257 Move [X19+16], W8
	258 NotImplemented "Instruction FCMP not yet implemented."
	259 Move X0, X31
	260 Call Time.get_deltaTime
	261 Subtract S0, S8, S0
	262 Move [X19+60], S0
	263 Compare X20, 0
	264 JumpIfEqual {506}
	265 Move X8, [X20+112]
	266 Compare X8, 0
	267 JumpIfEqual {506}
	268 Move V1, [X19+52]
	269 Move X22, 0x2277000
	270 Move X22, [X22+3112]
	271 Move S9, 1
	272 NotImplemented "Instruction FDIV not yet implemented."
	273 Move W21, W31
	274 Subtract S8, S9, S0
	275 Move S10, W31
	276 Move W8, [X8+24]
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Subtract S0, S9, S8
	279 Move S1, 3
	280 Call 0x3D1A8E0
	281 Move X0, [X22]
	282 Move V8, V0
	283 Move W8, [X0+224]
	284 Compare W8, 0
	285 JumpIfNotEqual {288}
	286 Call 0x1B6F8F8
	287 Move X0, [X22]
	288 Move X8, [X0+184]
	289 Move X8, [X8+16]
	290 Compare X8, 0
	291 JumpIfEqual {506}
	292 Move W9, [X8+24]
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Move X9, [X20+112]
	295 Subtract S8, S9, S8
	296 NotImplemented "Instruction FMIN not yet implemented."
	297 NotImplemented "Instruction FCMP not yet implemented."
	298 NotImplemented "Instruction FCSEL not yet implemented."
	299 Compare X9, 0
	300 JumpIfEqual {506}
	301 Move W10, [X9+24]
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Move X10, W21
	304 Add X9, X9, X10
	305 Move X0, [X9+32]
	306 Compare X0, 0
	307 JumpIfEqual {506}
	308 Add X8, X8, X10
	309 Move V1, [X8+32]
	310 Move S2, W31
	311 Move X1, X31
	312 Add W21, W21, 1
	313 Multiply S0, S0, S1
	314 Add S0, S0, S10
	315 Move S1, W31
	316 Call Transform.set_localEulerAngles, X0, X1
	317 Move X8, [X20+112]
	318 Compare X8, 0
	319 JumpIfNotEqual {276}
	320 Move W0, W31
	321 Compare X20, 0
	322 JumpIfEqual {506}
	323 Move X21, [X20+104]
	324 Move X0, X20
	325 Move X1, X31
	326 Call Component.get_transform, X0
	327 Compare X0, 0
	328 JumpIfEqual {506}
	329 Move X1, X31
	330 Call Transform.get_position, X0
	331 Move S3, 1
	332 Move X0, X21
	333 Move X1, X31
	334 Call SFXManager.PlaySFX, X0, X1, V0
	335 Move X22, [X20+72]
	336 Compare X22, 0
	337 JumpIfEqual {506}
	338 Move W8, [X22+24]
	339 NotImplemented "Instruction CMP not yet implemented."
	340 Move W23, W31
	341 NotImplemented "Instruction CMP not yet implemented."
	342 Add X8, X22, W23
	343 Move X21, [X8+32]
	344 Compare X21, 0
	345 JumpIfEqual {506}
	346 Move W1, 1
	347 Move X0, X21
	348 Move X2, X31
	349 Call Behaviour.set_enabled, X0, X1
	350 Move S0, W31
	351 Move X0, X21
	352 Move X1, X31
	353 Call Light.set_intensity, X0, V0
	354 Move W8, [X22+24]
	355 Add W23, W23, 1
	356 NotImplemented "Instruction CMP not yet implemented."
	357 Move V8, [X19+44]
	358 Move [X19+60], S8
	359 NotImplemented "Instruction FCMP not yet implemented."
	360 Move X0, X31
	361 Call Time.get_deltaTime
	362 Subtract S0, S8, S0
	363 Move [X19+60], S0
	364 Compare X20, 0
	365 JumpIfEqual {506}
	366 Move X20, [X20+72]
	367 Compare X20, 0
	368 JumpIfEqual {506}
	369 Move W8, [X20+24]
	370 NotImplemented "Instruction CMP not yet implemented."
	371 Move V1, [X19+44]
	372 Move S2, 1
	373 Move S3, -1
	374 Move W21, W31
	375 NotImplemented "Instruction FDIV not yet implemented."
	376 Subtract S0, S2, S0
	377 Add S0, S0, S0
	378 Add S0, S0, S3
	379 Multiply S1, S0, S0
	380 Move V3, [X19+56]
	381 Multiply S1, S0, S1
	382 Multiply S0, S0, S1
	383 Subtract S0, S2, S0
	384 Multiply S8, S3, S0
	385 NotImplemented "Instruction CMP not yet implemented."
	386 Add X8, X20, W21
	387 Move X0, [X8+32]
	388 Compare X0, 0
	389 JumpIfEqual {506}
	390 Move V0, V8
	391 Move X1, X31
	392 Call Light.set_intensity, X0, V0
	393 Move W8, [X20+24]
	394 Add W21, W21, 1
	395 NotImplemented "Instruction CMP not yet implemented."
	396 Move W8, 2
	397 Move [X19+24], X31
	398 Compare X20, 0
	399 JumpIfEqual {506}
	400 Move X22, [X20+72]
	401 Compare X22, 0
	402 JumpIfEqual {506}
	403 Move W8, [X22+24]
	404 NotImplemented "Instruction CMP not yet implemented."
	405 Move W23, W31
	406 NotImplemented "Instruction CMP not yet implemented."
	407 Add X8, X22, W23
	408 Move X21, [X8+32]
	409 Compare X21, 0
	410 JumpIfEqual {506}
	411 Move X0, X21
	412 Move W1, W31
	413 Move X2, X31
	414 Call Behaviour.set_enabled, X0, X1
	415 Move V0, [X19+56]
	416 Move X0, X21
	417 Move X1, X31
	418 Call Light.set_intensity, X0, V0
	419 Move W8, [X22+24]
	420 Add W23, W23, 1
	421 NotImplemented "Instruction CMP not yet implemented."
	422 Move X0, [X20+56]
	423 Compare X0, 0
	424 JumpIfEqual {506}
	425 Move X1, X31
	426 Call Renderer.get_material, X0
	427 Move X22, 0x2277000
	428 Move X22, [X22+3112]
	429 Move X21, X0
	430 Move X8, [X22]
	431 Move W9, [X8+224]
	432 Compare W9, 0
	433 JumpIfNotEqual {436}
	434 Move X0, X8
	435 Call 0x1B6F8F8
	436 Compare X21, 0
	437 JumpIfEqual {506}
	438 Move X8, [X22]
	439 Move S0, W31
	440 Move X0, X21
	441 Move X2, X31
	442 Move X8, [X8+184]
	443 Move W1, [X8]
	444 Call Material.SetFloat, X0, X1, V0
	445 Move X21, [X20+64]
	446 Compare X21, 0
	447 JumpIfEqual {506}
	448 Move W8, [X21+24]
	449 NotImplemented "Instruction CMP not yet implemented."
	450 Move W23, W31
	451 NotImplemented "Instruction CMP not yet implemented."
	452 Add X8, X21, W23
	453 Move X0, [X8+32]
	454 Compare X0, 0
	455 JumpIfEqual {506}
	456 Move X1, X31
	457 Call Renderer.get_material, X0
	458 Move X8, [X22]
	459 Move X20, X0
	460 Move W9, [X8+224]
	461 Compare W9, 0
	462 JumpIfNotEqual {465}
	463 Move X0, X8
	464 Call 0x1B6F8F8
	465 Compare X20, 0
	466 JumpIfEqual {506}
	467 Move X8, [X22]
	468 Move S0, W31
	469 Move X0, X20
	470 Move X2, X31
	471 Move X8, [X8+184]
	472 Move W1, [X8]
	473 Call Material.SetFloat, X0, X1, V0
	474 Move W8, [X21+24]
	475 Add W23, W23, 1
	476 NotImplemented "Instruction CMP not yet implemented."
	477 Move X8, 0x2276000
	478 Move V8, [X19+48]
	479 Move X8, [X8+744]
	480 Move X0, [X8]
	481 Call 0x1B6FA0C
	482 Move V0, V8
	483 Move X1, X31
	484 Move X20, X0
	485 Call WaitForSeconds..ctor, X0, V0
	486 Move [X19+24], X20
	487 Move W8, 3
	488 Move [X19+24], X31
	489 Move W8, 4
	490 Move [X19+16], W8
	491 Move W0, 1
	492 Move W0, 1
	493 Move [X19+24], X31
	494 Move [X19+16], W0
	495 Move X20, [X31+64]
	496 Move X19, [X31+72]
	497 Move X22, [X31+48]
	498 Move X21, [X31+56]
	499 Move X24, [X31+32]
	500 Move X23, [X31+40]
	501 Move X30, [X31+24]
	502 Move D9, [X31+8]
	503 Move D8, [X31+16]
	504 Move V10, [X31+80]
	505 Return X0
	506 Call 0x1B6FA1C
	507 Call 0x1B6FA24

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x01CD9600 STR X31, [X31 + 0xA8]
	0x01CD9604 STP X31, X31, [X31 + 0x40]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01CD9608 STR X31, [X31 + 0x50]
	0x01CD960C STR X31, [X31 + 0x38]
	0x01CD9610 LDR X0, [X19 + 0xD0]
	0x01CD9614 CBZ X0, 0x1CD9EF4
	0x01CD9618 MOV X1, X31
	0x01CD961C BL 0x3AA7658
	0x01CD9620 LDR X8, [X19 + 0xB8]
	0x01CD9624 CBZ X8, 0x1CD9EF4
	0x01CD9628 LDR X8, [X8 + 0x78]
	0x01CD962C CBZ X8, 0x1CD9EF4
	0x01CD9630 LDR W9, [X8 + 0x18]
	0x01CD9634 CBZ W9, 0x1CD9EF8
	0x01CD9638 LDR V3, [X8 + 0x20]
	0x01CD963C ADD X1, X31, 0xA8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x2275000
	004 Move X0, [X0+2448]
	005 Call 0x1B6F804
	006 Call 0x1B6FA0C
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2277000
	011 Move X0, [X0+3384]
	012 Call 0x1B6F804
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1B6F8E8

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01CD9640 MOV X0, X19
	0x01CD9644 MOV X2, X31

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

