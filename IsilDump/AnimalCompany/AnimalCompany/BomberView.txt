Type: AnimalCompany.BomberView

Method: System.Void SetEmission(System.Boolean emission)

Disassembly:
	0x01CDF044 BL 0x1B6E8E8
	0x01CDF048 STP X30, X19, [X31 - 0x10]!
	0x01CDF04C LDR X8, [X0 + 0x50]
	0x01CDF050 CBZ X8, 0x1CDF060
	0x01CDF054 LDR W0, [X8 + 0x40]
	0x01CDF058 LDP X30, X19, [X31], #0x10
	0x01CDF05C RET
	0x01CDF060 ADRP X0, 0x226E000
	0x01CDF064 LDR X0, [X0 + 0x490]
	0x01CDF068 BL 0x1B6E804
	0x01CDF06C BL 0x1B6EA0C
	0x01CDF070 MOV X19, X0
	0x01CDF074 ADRP X0, 0x2270000
	0x01CDF078 LDR X0, [X0 + 0xEA8]
	0x01CDF07C BL 0x1B6E804
	0x01CDF080 MOV X1, X0
	0x01CDF084 MOV X0, X19
	0x01CDF088 MOV X2, X31
	0x01CDF08C BL 0x31E7550
	0x01CDF090 ADRP X0, 0x2270000
	0x01CDF094 LDR X0, [X0 + 0xEB0]
	0x01CDF098 BL 0x1B6E804
	0x01CDF09C MOV X1, X0
	0x01CDF0A0 MOV X0, X19
	0x01CDF0A4 BL 0x1B6E8E8
	0x01CDF0A8 STP X30, X19, [X31 - 0x10]!
	0x01CDF0AC LDR X8, [X0 + 0x50]
	0x01CDF0B0 CBZ X8, 0x1CDF0C0
	0x01CDF0B4 STR W1, [X8 + 0x40]
	0x01CDF0B8 LDP X30, X19, [X31], #0x10
	0x01CDF0BC RET
	0x01CDF0C0 ADRP X0, 0x226E000
	0x01CDF0C4 LDR X0, [X0 + 0x490]
	0x01CDF0C8 BL 0x1B6E804
	0x01CDF0CC BL 0x1B6EA0C
	0x01CDF0D0 MOV X19, X0
	0x01CDF0D4 ADRP X0, 0x2270000
	0x01CDF0D8 LDR X0, [X0 + 0xEA8]
	0x01CDF0DC BL 0x1B6E804
	0x01CDF0E0 MOV X1, X0
	0x01CDF0E4 MOV X0, X19
	0x01CDF0E8 MOV X2, X31
	0x01CDF0EC BL 0x31E7550
	0x01CDF0F0 ADRP X0, 0x2270000
	0x01CDF0F4 LDR X0, [X0 + 0xEB8]
	0x01CDF0F8 BL 0x1B6E804
	0x01CDF0FC MOV X1, X0
	0x01CDF100 MOV X0, X19
	0x01CDF104 BL 0x1B6E8E8
	0x01CDF108 STP X30, X19, [X31 - 0x10]!
	0x01CDF10C LDR X8, [X0 + 0x50]
	0x01CDF110 CBZ X8, 0x1CDF124
	0x01CDF114 LDP S0, S1, [X8 + 0x44]
	0x01CDF118 LDR V2, [X8 + 0x4C]
	0x01CDF11C LDP X30, X19, [X31], #0x10
	0x01CDF120 RET
	0x01CDF124 ADRP X0, 0x226E000
	0x01CDF128 LDR X0, [X0 + 0x490]
	0x01CDF12C BL 0x1B6E804
	0x01CDF130 BL 0x1B6EA0C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2545000
	007 Move W8, [X22+1585]
	008 Move W20, W1
	009 Move X19, X0
	010 And W21, W1, 1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2271000
	016 Move X0, [X0+3704]
	017 Call 0x1B6F7F0
	018 Move W8, 1
	019 Move [X22+1585], W8
	020 Move W8, [X19+144]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X20, [X31+32]
	023 Move X19, [X31+40]
	024 Move X22, [X31+16]
	025 Move X21, [X31+24]
	026 Move X30, [X31+48]
	027 Return 
	028 Move X0, [X19+136]
	029 Move [X19+144], W21
	030 Compare X0, 0
	031 JumpIfEqual {77}
	032 Move X1, X31
	033 Call Renderer.get_material, X0
	034 Move X22, 0x2271000
	035 Move X22, [X22+3704]
	036 Move X19, X0
	037 Move X8, [X22]
	038 Move W9, [X8+224]
	039 Compare W9, 0
	040 JumpIfNotEqual {44}
	041 Move X0, X8
	042 Call 0x1B6F8F8
	043 Move X8, [X22]
	044 Move X9, [X8+184]
	045 Move W21, [X9]
	046 Move TEMP, X20
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {61}
	050 Move W10, [X8+224]
	051 Compare W10, 0
	052 JumpIfNotEqual {57}
	053 Move X0, X8
	054 Call 0x1B6F8F8
	055 Move X8, [X22]
	056 Move X9, [X8+184]
	057 Move S0, [X9+8]
	058 Move S1, [X9+12]
	059 Move S2, [X9+16]
	060 Move S3, [X9+20]
	061 Move S2, W31
	062 Move S3, 1
	063 Move S1, W31
	064 Move S0, W31
	065 Compare X19, 0
	066 JumpIfEqual {77}
	067 Move X0, X19
	068 Move W1, W21
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X2, X31
	074 Move X30, [X31+48]
	075 Call Material.SetColor, X0, X1, X2
	076 Return 
	077 Call 0x1B6FA1C

Method: System.Void Update()

Disassembly:
	0x01CDFD88 MOV X0, X20
	0x01CDFD8C LDP X20, X19, [X31 + 0x10]
	0x01CDFD90 MOV X1, X31
	0x01CDFD94 LDR X30, [X31], #0x20
	0x01CDFD98 B 0x3A4A810
	0x01CDFD9C BL 0x1B6EA1C
	0x01CDFDA0 BL 0x1B6EA24
	0x01CDFDA4 STP X30, X19, [X31 - 0x10]!
	0x01CDFDA8 MOV X1, X31
	0x01CDFDAC MOV X19, X0
	0x01CDFDB0 BL 0x1CE5B40
	0x01CDFDB4 LDR X0, [X19 + 0x40]
	0x01CDFDB8 CBZ X0, 0x1CDFDE0
	0x01CDFDBC MOV X1, X31
	0x01CDFDC0 BL 0x1D9E780
	0x01CDFDC4 TBZ X0, 0x0, 0x1CDFDD8
	0x01CDFDC8 MOVZ W1, 0x6
	0x01CDFDCC MOV X0, X19
	0x01CDFDD0 LDP X30, X19, [X31], #0x10
	0x01CDFDD4 B 0x1CDEFE8
	0x01CDFDD8 LDP X30, X19, [X31], #0x10
	0x01CDFDDC RET
	0x01CDFDE0 BL 0x1B6EA1C
	0x01CDFDE4 SUB X31, X31, 0xD0
	0x01CDFDE8 STR D14, [X31 + 0x60]
	0x01CDFDEC STP D13, D12, [X31 + 0x68]
	0x01CDFDF0 STP D11, D10, [X31 + 0x78]
	0x01CDFDF4 STP D9, D8, [X31 + 0x88]
	0x01CDFDF8 STR X30, [X31 + 0x98]
	0x01CDFDFC STP X24, X23, [X31 + 0xA0]
	0x01CDFE00 STP X22, X21, [X31 + 0xB0]
	0x01CDFE04 STP X20, X19, [X31 + 0xC0]
	0x01CDFE08 ADRP X20, 0x2544000
	0x01CDFE0C ADRP X23, 0x226F000
	0x01CDFE10 ADRP X22, 0x226F000
	0x01CDFE14 LDRB W8, [X20 + 0x639]
	0x01CDFE18 LDR X23, [X23 + 0x248]
	0x01CDFE1C LDR X22, [X22 + 0x250]
	0x01CDFE20 MOV V8.16B, V6.16B
	0x01CDFE24 MOV V9.16B, V5.16B
	0x01CDFE28 MOV V10.16B, V4.16B
	0x01CDFE2C MOV V11.16B, V3.16B
	0x01CDFE30 MOV V12.16B, V2.16B
	0x01CDFE34 MOV V13.16B, V1.16B
	0x01CDFE38 MOV V14.16B, V0.16B
	0x01CDFE3C MOV X19, X0
	0x01CDFE40 TBNZ X8, 0x0, 0x1CDFE88
	0x01CDFE44 ADRP X0, 0x2270000
	0x01CDFE48 LDR X0, [X0 + 0xEF8]
	0x01CDFE4C BL 0x1B6E7F0
	0x01CDFE50 ADRP X0, 0x226F000
	0x01CDFE54 LDR X0, [X0 + 0x248]
	0x01CDFE58 BL 0x1B6E7F0
	0x01CDFE5C ADRP X0, 0x2270000
	0x01CDFE60 LDR X0, [X0 + 0x148]
	0x01CDFE64 BL 0x1B6E7F0
	0x01CDFE68 ADRP X0, 0x226F000
	0x01CDFE6C LDR X0, [X0 + 0x250]
	0x01CDFE70 BL 0x1B6E7F0
	0x01CDFE74 ADRP X0, 0x226F000
	0x01CDFE78 LDR X0, [X0 + 0xB88]
	0x01CDFE7C BL 0x1B6E7F0
	0x01CDFE80 MOVZ W8, 0x1
	0x01CDFE84 STRB W8, [X20 + 0x639]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2545000
	005 Move W8, [X20+1586]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2271000
	012 Move X0, [X0+3704]
	013 Call 0x1B6F7F0
	014 Move W8, 1
	015 Move [X20+1586], W8
	016 Move X0, X19
	017 Move X1, X31
	018 Call MobView.Update, X0
	019 Move W8, [X19+144]
	020 Compare W8, 0
	021 JumpIfEqual {72}
	022 Move X0, [X19+136]
	023 Compare X0, 0
	024 JumpIfEqual {76}
	025 Move X1, X31
	026 Call Renderer.get_materials, X0
	027 Compare X0, 0
	028 JumpIfEqual {76}
	029 Move W9, [X0+24]
	030 Move X8, X0
	031 Compare W9, 0
	032 JumpIfEqual {77}
	033 Move X20, 0x2271000
	034 Move X20, [X20+3704]
	035 Move X19, [X8+32]
	036 Move X0, [X20]
	037 Move W9, [X0+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1B6F8F8
	041 Move X0, [X20]
	042 Move X8, [X0+184]
	043 Move X0, X31
	044 Move W20, [X8+4]
	045 Call Time.get_time
	046 Compare X19, 0
	047 JumpIfEqual {76}
	048 Move S1, 8
	049 Move S2, 0.5
	050 Multiply S0, S0, S1
	051 Multiply S2, S0, S2
	052 NotImplemented "Instruction FRINTM not yet implemented."
	053 Add S2, S2, S2
	054 Move S1, 2
	055 Subtract S0, S0, S2
	056 Move S2, -1
	057 NotImplemented "Instruction FMIN not yet implemented."
	058 NotImplemented "Instruction FCMP not yet implemented."
	059 Add S0, S1, S2
	060 Move X0, X19
	061 Move W1, W20
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 NotImplemented "Instruction FCSEL not yet implemented."
	065 NotImplemented "Instruction FABS not yet implemented."
	066 Move S1, 1
	067 Subtract S0, S1, S0
	068 Move X2, X31
	069 Move X30, [X31+32]
	070 Call Material.SetFloat, X0, X1, V0
	071 Return 
	072 Move X20, [X31+16]
	073 Move X19, [X31+24]
	074 Move X30, [X31+32]
	075 Return 
	076 Call 0x1B6FA1C
	077 Call 0x1B6FA24

Method: System.Void .ctor()

Disassembly:
	0x01CDFE88 LDR X1, [X23]
	0x01CDFE8C LDR X20, [X19 + 0x38]
	0x01CDFE90 LDR X21, [X19 + 0x1B0]
	0x01CDFE94 ADD X0, X31, 0x50
	0x01CDFE98 MOV V0.16B, V14.16B
	0x01CDFE9C MOV V1.16B, V13.16B
	0x01CDFEA0 MOV V2.16B, V12.16B
	0x01CDFEA4 STP X31, X31, [X31 + 0x50]
	0x01CDFEA8 BL 0x22DC630
	0x01CDFEAC LDR X1, [X22]
	0x01CDFEB0 ADD X0, X31, 0x38
	0x01CDFEB4 MOV V0.16B, V11.16B
	0x01CDFEB8 MOV V1.16B, V10.16B
	0x01CDFEBC MOV V2.16B, V9.16B
	0x01CDFEC0 MOV V3.16B, V8.16B
	0x01CDFEC4 STP X31, X31, [X31 + 0x38]
	0x01CDFEC8 STR W31, [X31 + 0x48]
	0x01CDFECC BL 0x22D82D0
	0x01CDFED0 LDR X0, [X19 + 0x40]
	0x01CDFED4 CBZ X0, 0x1CDFF88
	0x01CDFED8 ADRP X22, 0x2270000
	0x01CDFEDC ADRP X23, 0x226F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2545000
	006 Move X21, 0x2271000
	007 Move W8, [X20+1587]
	008 Move X21, [X21+3592]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2271000
	015 Move X0, [X0+3592]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X20+1587], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1B6F8F8
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call MobView..ctor, X0
	031 Return 

Method: System.Void .cctor()

Disassembly:
	0x01CDFEE0 ADRP X24, 0x2270000
	0x01CDFEE4 LDR X22, [X22 + 0x148]
	0x01CDFEE8 LDR X23, [X23 + 0xB88]
	0x01CDFEEC LDR X24, [X24 + 0xEF8]
	0x01CDFEF0 MOV X1, X31
	0x01CDFEF4 BL 0x1D9EAAC
	0x01CDFEF8 LDR X2, [X22]
	0x01CDFEFC AND X1, X0, 0x0
	0x01CDFF00 ADD X0, X31, 0x30
	0x01CDFF04 STR X31, [X31 + 0x30]
	0x01CDFF08 BL 0x22D7A5C
	0x01CDFF0C LDR X0, [X23]
	0x01CDFF10 BL 0x1B6EA0C
	0x01CDFF14 LDR X2, [X24]
	0x01CDFF18 MOV X1, X19
	0x01CDFF1C MOV X3, X31
	0x01CDFF20 MOV X22, X0
	0x01CDFF24 BL 0x1DA90FC
	0x01CDFF28 CBZ X20, 0x1CDFF88
	0x01CDFF2C LDP X2, X3, [X31 + 0x50]
	0x01CDFF30 LDUR V0, [X31 + 0x38]
	0x01CDFF34 LDR W8, [X31 + 0x48]
	0x01CDFF38 LDR X5, [X31 + 0x30]
	0x01CDFF3C ADD X4, X31, 0x10
	0x01CDFF40 MOV X0, X20
	0x01CDFF44 MOV X1, X21
	0x01CDFF48 MOV X6, X22
	0x01CDFF4C MOV W7, W31
	0x01CDFF50 STR V0, [X31 + 0x1]
	0x01CDFF54 STR W8, [X31 + 0x20]
	0x01CDFF58 STR X31, [X31]
	0x01CDFF5C BL 0x1D98EB8
	0x01CDFF60 LDP X20, X19, [X31 + 0xC0]
	0x01CDFF64 LDP X22, X21, [X31 + 0xB0]
	0x01CDFF68 LDP X24, X23, [X31 + 0xA0]
	0x01CDFF6C LDR X30, [X31 + 0x98]
	0x01CDFF70 LDP D9, D8, [X31 + 0x88]
	0x01CDFF74 LDP D11, D10, [X31 + 0x78]
	0x01CDFF78 LDP D13, D12, [X31 + 0x68]
	0x01CDFF7C LDR V14, [X31 + 0x60]
	0x01CDFF80 ADD X31, X31, 0xD0
	0x01CDFF84 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2545000
	007 Move X22, 0x2270000
	008 Move X19, 0x2271000
	009 Move X20, 0x2271000
	010 Move W8, [X21+1588]
	011 Move X22, [X22+832]
	012 Move X19, [X19+3704]
	013 Move X20, [X20+3720]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x2271000
	019 Move X0, [X0+3704]
	020 Call 0x1B6F7F0
	021 Move X0, 0x2271000
	022 Move X0, [X0+3720]
	023 Call 0x1B6F7F0
	024 Move X0, 0x2270000
	025 Move X0, [X0+832]
	026 Call 0x1B6F7F0
	027 Move W8, 1
	028 Move [X21+1588], W8
	029 Move X0, [X22]
	030 Move X1, X31
	031 Call Shader.PropertyToID, X0
	032 Move X8, [X19]
	033 Move X1, X31
	034 Move X8, [X8+184]
	035 Move [X8], W0
	036 Move X0, [X20]
	037 Call Shader.PropertyToID, X0
	038 Move X8, [X19]
	039 Move X9, -19083264
	040 Move V0, [X9+84]
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X8, [X8+184]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move [X8+4], W0
	047 Move [X8+8], V0
	048 Move X30, [X31+48]
	049 Return 

