Type: AnimalCompany.BomberView

Method: System.Void SetEmission(System.Boolean emission)

Disassembly:
	0x01DE84C4 MOV V10.16B, V2.16B
	0x01DE84C8 CBNZ W8, 0x1DE84E0
	0x01DE84CC ADRP X0, 0x230C000
	0x01DE84D0 LDR X0, [X0 + 0x5A8]
	0x01DE84D4 BL 0x1C16CF4
	0x01DE84D8 MOVZ W8, 0x1
	0x01DE84DC STRB W8, [X22 + 0x793]
	0x01DE84E0 ADRP X8, 0x230C000
	0x01DE84E4 LDR X8, [X8 + 0x5A8]
	0x01DE84E8 LDR X0, [X21]
	0x01DE84EC ADRP X21, 0x2310000
	0x01DE84F0 LDR X8, [X8]
	0x01DE84F4 LDR W9, [X0 + 0xE0]
	0x01DE84F8 LDR X8, [X8 + 0xB8]
	0x01DE84FC LDP S14, S13, [X8]
	0x01DE8500 LDP S12, S11, [X8 + 0x8]
	0x01DE8504 LDR X21, [X21 + 0xE40]
	0x01DE8508 CBNZ W9, 0x1DE8510
	0x01DE850C BL 0x1C16DFC
	0x01DE8510 LDR X1, [X21]
	0x01DE8514 MOV X0, X20
	0x01DE8518 MOV V0.16B, V8.16B
	0x01DE851C MOV V1.16B, V9.16B
	0x01DE8520 MOV V2.16B, V10.16B
	0x01DE8524 MOV V3.16B, V14.16B
	0x01DE8528 MOV V4.16B, V13.16B
	0x01DE852C MOV V5.16B, V12.16B
	0x01DE8530 MOV V6.16B, V11.16B
	0x01DE8534 BL 0x222D5B8
	0x01DE8538 LDR X8, [X19 + 0xE8]
	0x01DE853C STR X0, [X19 + 0x1D8]
	0x01DE8540 CBZ X8, 0x1DE8594
	0x01DE8544 MOVZ W1, 0x1
	0x01DE8548 MOV X0, X8
	0x01DE854C MOV X2, X31
	0x01DE8550 BL 0x3BE1A80
	0x01DE8554 LDR X0, [X19 + 0xE8]
	0x01DE8558 CBZ X0, 0x1DE8594
	0x01DE855C MOVZ W1, 0x1
	0x01DE8560 MOV X2, X31
	0x01DE8564 BL 0x3BE1AC4
	0x01DE8568 MOV X0, X19
	0x01DE856C BL 0x1DE80B0
	0x01DE8570 MOV X0, X19
	0x01DE8574 LDP X20, X19, [X31 + 0x50]
	0x01DE8578 LDP X22, X21, [X31 + 0x40]
	0x01DE857C LDR X30, [X31 + 0x38]
	0x01DE8580 LDP D9, D8, [X31 + 0x28]
	0x01DE8584 LDP D11, D10, [X31 + 0x18]
	0x01DE8588 LDP D13, D12, [X31 + 0x8]
	0x01DE858C LDR V14, [X31], #0x60
	0x01DE8590 B 0x1DE8294
	0x01DE8594 BL 0x1C16F20
	0x01DE8598 SUB X31, X31, 0x40
	0x01DE859C STR X30, [X31 + 0x20]
	0x01DE85A0 STP X20, X19, [X31 + 0x30]
	0x01DE85A4 ADRP X20, 0x25F0000
	0x01DE85A8 LDRB W8, [X20 + 0xCFD]
	0x01DE85AC MOV X19, X0
	0x01DE85B0 TBNZ X8, 0x0, 0x1DE85EC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x25F1000
	007 Move W8, [X22+3246]
	008 Move W20, W1
	009 Move X19, X0
	010 And W21, W1, 1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2311000
	016 Move X0, [X0+3536]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+3246], W8
	020 Move W8, [X19+184]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X20, [X31+32]
	023 Move X19, [X31+40]
	024 Move X22, [X31+16]
	025 Move X21, [X31+24]
	026 Move X30, [X31+48]
	027 Return 
	028 Move X0, [X19+176]
	029 Move [X19+184], W21
	030 Compare X0, 0
	031 JumpIfEqual {77}
	032 Move X1, X31
	033 Call Renderer.get_material, X0
	034 Move X22, 0x2311000
	035 Move X22, [X22+3536]
	036 Move X19, X0
	037 Move X8, [X22]
	038 Move W9, [X8+224]
	039 Compare W9, 0
	040 JumpIfNotEqual {44}
	041 Move X0, X8
	042 Call 0x1C17DFC
	043 Move X8, [X22]
	044 Move X9, [X8+184]
	045 Move W21, [X9]
	046 Move TEMP, X20
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {61}
	050 Move W10, [X8+224]
	051 Compare W10, 0
	052 JumpIfNotEqual {57}
	053 Move X0, X8
	054 Call 0x1C17DFC
	055 Move X8, [X22]
	056 Move X9, [X8+184]
	057 Move S0, [X9+8]
	058 Move S1, [X9+12]
	059 Move S2, [X9+16]
	060 Move S3, [X9+20]
	061 Move S2, W31
	062 Move S3, 1
	063 Move S1, W31
	064 Move S0, W31
	065 Compare X19, 0
	066 JumpIfEqual {77}
	067 Move X0, X19
	068 Move W1, W21
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X2, X31
	074 Move X30, [X31+48]
	075 Call Material.SetColor, X0, X1, X2
	076 Return 
	077 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x01DE85B4 ADRP X0, 0x230B000
	0x01DE85B8 LDR X0, [X0 + 0x788]
	0x01DE85BC BL 0x1C16CF4
	0x01DE85C0 ADRP X0, 0x2310000
	0x01DE85C4 LDR X0, [X0 + 0xE48]
	0x01DE85C8 BL 0x1C16CF4
	0x01DE85CC ADRP X0, 0x2310000
	0x01DE85D0 LDR X0, [X0 + 0xE50]
	0x01DE85D4 BL 0x1C16CF4
	0x01DE85D8 ADRP X0, 0x2310000
	0x01DE85DC LDR X0, [X0 + 0xE58]
	0x01DE85E0 BL 0x1C16CF4
	0x01DE85E4 MOVZ W8, 0x1
	0x01DE85E8 STRB W8, [X20 + 0xCFD]
	0x01DE85EC LDRB W8, [X19 + 0x1A0]
	0x01DE85F0 CBNZ W8, 0x1DE8770
	0x01DE85F4 LDR X0, [X19 + 0x40]
	0x01DE85F8 CBZ X0, 0x1DE86B0
	0x01DE85FC LDRB W8, [X0 + 0x60]
	0x01DE8600 TBNZ X8, 0x1, 0x1DE86B0
	0x01DE8604 MOV X1, X31
	0x01DE8608 BL 0x1E93668
	0x01DE860C TBZ X0, 0x0, 0x1DE86B0
	0x01DE8610 MOV X0, X19
	0x01DE8614 MOV W1, W31
	0x01DE8618 BL 0x1DF48B8
	0x01DE861C LDR X8, [X19 + 0xC0]
	0x01DE8620 CBZ X8, 0x1DE8780
	0x01DE8624 LDR W1, [X8 + 0x20]
	0x01DE8628 MOV X0, X19
	0x01DE862C BL 0x1DF49EC
	0x01DE8630 LDR X8, [X19 + 0xC0]
	0x01DE8634 CBZ X8, 0x1DE8780
	0x01DE8638 LDR X8, [X8 + 0x30]
	0x01DE863C CBZ X8, 0x1DE8780
	0x01DE8640 LDR W9, [X8 + 0x18]
	0x01DE8644 CBZ W9, 0x1DE8784
	0x01DE8648 LDR V0, [X8 + 0x20]
	0x01DE864C MOV X0, X19
	0x01DE8650 BL 0x1DF4A4C
	0x01DE8654 LDR X8, [X19 + 0xC0]
	0x01DE8658 CBZ X8, 0x1DE8780
	0x01DE865C LDR V0, [X8 + 0x40]
	0x01DE8660 MOV X0, X19
	0x01DE8664 BL 0x1DF4B0C
	0x01DE8668 LDR X8, [X19 + 0xC0]
	0x01DE866C CBZ X8, 0x1DE8780
	0x01DE8670 LDR X8, [X8 + 0x58]
	0x01DE8674 CBZ X8, 0x1DE8780
	0x01DE8678 LDR W9, [X8 + 0x18]
	0x01DE867C CBZ W9, 0x1DE8784
	0x01DE8680 LDR V0, [X8 + 0x20]
	0x01DE8684 MOV X0, X19
	0x01DE8688 BL 0x1DF4BCC
	0x01DE868C LDR X8, [X19 + 0xC0]
	0x01DE8690 CBZ X8, 0x1DE8780
	0x01DE8694 LDR X8, [X8 + 0x60]
	0x01DE8698 CBZ X8, 0x1DE8780
	0x01DE869C LDR W9, [X8 + 0x18]
	0x01DE86A0 CBZ W9, 0x1DE8784
	0x01DE86A4 LDR V0, [X8 + 0x20]
	0x01DE86A8 MOV X0, X19
	0x01DE86AC BL 0x1DF4C8C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x25F1000
	005 Move W8, [X20+3247]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2311000
	012 Move X0, [X0+3536]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3247], W8
	016 Move X0, X19
	017 Call MobView.Update, X0
	018 Move W8, [X19+184]
	019 Compare W8, 0
	020 JumpIfEqual {71}
	021 Move X0, [X19+176]
	022 Compare X0, 0
	023 JumpIfEqual {75}
	024 Move X1, X31
	025 Call Renderer.get_materials, X0
	026 Compare X0, 0
	027 JumpIfEqual {75}
	028 Move W9, [X0+24]
	029 Move X8, X0
	030 Compare W9, 0
	031 JumpIfEqual {76}
	032 Move X20, 0x2311000
	033 Move X20, [X20+3536]
	034 Move X19, [X8+32]
	035 Move X0, [X20]
	036 Move W9, [X0+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {41}
	039 Call 0x1C17DFC
	040 Move X0, [X20]
	041 Move X8, [X0+184]
	042 Move X0, X31
	043 Move W20, [X8+4]
	044 Call Time.get_time
	045 Compare X19, 0
	046 JumpIfEqual {75}
	047 Move S1, 8
	048 Move S2, 0.5
	049 Multiply S0, S0, S1
	050 Multiply S2, S0, S2
	051 NotImplemented "Instruction FRINTM not yet implemented."
	052 Add S2, S2, S2
	053 Move S1, 2
	054 Subtract S0, S0, S2
	055 Move S2, -1
	056 NotImplemented "Instruction FMIN not yet implemented."
	057 NotImplemented "Instruction FCMP not yet implemented."
	058 Add S0, S1, S2
	059 Move X0, X19
	060 Move W1, W20
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 NotImplemented "Instruction FCSEL not yet implemented."
	064 NotImplemented "Instruction FABS not yet implemented."
	065 Move S1, 1
	066 Subtract S0, S1, S0
	067 Move X2, X31
	068 Move X30, [X31+32]
	069 Call Material.SetFloat, X0, X1, V0
	070 Return 
	071 Move X20, [X31+16]
	072 Move X19, [X31+24]
	073 Move X30, [X31+32]
	074 Return 
	075 Call 0x1C17F20
	076 Call 0x1C17F28

Method: System.Void .ctor()

Disassembly:
	0x01DE891C TBNZ X0, 0x0, 0x1DE8828
	0x01DE8920 LDP X20, X19, [X31 + 0x30]
	0x01DE8924 LDP X30, X21, [X31 + 0x20]
	0x01DE8928 LDP D9, D8, [X31 + 0x10]
	0x01DE892C LDR V10, [X31], #0x40
	0x01DE8930 RET
	0x01DE8934 STP X30, X19, [X31 - 0x10]!
	0x01DE8938 MOVZ W1, 0x1
	0x01DE893C MOV X19, X0
	0x01DE8940 BL 0x1DE7AC4
	0x01DE8944 LDR X8, [X19]
	0x01DE8948 MOV X0, X19
	0x01DE894C MOV X1, X31
	0x01DE8950 LDR X9, [X8 + 0x3B8]
	0x01DE8954 LDR X2, [X8 + 0x3C0]
	0x01DE8958 BLR X9
	0x01DE895C LDR X9, [X19 + 0xC0]
	0x01DE8960 CBZ X9, 0x1DE89AC
	0x01DE8964 LDR X8, [X9 + 0x58]
	0x01DE8968 CBZ X8, 0x1DE89AC
	0x01DE896C LDR W10, [X8 + 0x18]
	0x01DE8970 CBZ W10, 0x1DE89B0
	0x01DE8974 LDR X9, [X9 + 0x60]
	0x01DE8978 CBZ X9, 0x1DE89AC
	0x01DE897C LDR W10, [X9 + 0x18]
	0x01DE8980 CBZ W10, 0x1DE89B0
	0x01DE8984 LDR X10, [X19]
	0x01DE8988 LDR V1, [X8 + 0x20]
	0x01DE898C LDR V2, [X9 + 0x20]
	0x01DE8990 FMOV S0, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x25F1000
	006 Move X21, 0x2311000
	007 Move W8, [X20+3248]
	008 Move X21, [X21+3208]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2311000
	015 Move X0, [X0+3208]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3248], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X8, -19894272
	025 Move V0, [X8+616]
	026 Move W8, 1
	027 Move W9, 0x3F800000
	028 Move [X19+80], W31
	029 Move [X19+84], W8
	030 Move [X19+72], D0
	031 Move [X19+128], W9
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X1, X31
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Call MonoBehaviour..ctor, X0
	039 Return 

Method: System.Void .cctor()

Disassembly:
	0x01DE89BC BL 0x1DE89FC
	0x01DE89C0 MOV X0, X19
	0x01DE89C4 BL 0x1DE7BE4
	0x01DE89C8 MOV X0, X19
	0x01DE89CC BL 0x1DE8AA8
	0x01DE89D0 LDR X0, [X19 + 0x40]
	0x01DE89D4 CBZ X0, 0x1DE89F8
	0x01DE89D8 MOV X1, X31
	0x01DE89DC BL 0x1E93668
	0x01DE89E0 TBZ X0, 0x0, 0x1DE89F0
	0x01DE89E4 MOV X0, X19
	0x01DE89E8 LDP X30, X19, [X31], #0x10
	0x01DE89EC B 0x1DE8AFC
	0x01DE89F0 LDP X30, X19, [X31], #0x10
	0x01DE89F4 RET
	0x01DE89F8 BL 0x1C16F20
	0x01DE89FC SUB X31, X31, 0x20
	0x01DE8A00 STP X30, X19, [X31 + 0x10]
	0x01DE8A04 STR X31, [X31 + 0x8]
	0x01DE8A08 MOV X19, X0
	0x01DE8A0C LDR X0, [X0 + 0x40]
	0x01DE8A10 CBZ X0, 0x1DE8A88
	0x01DE8A14 LDRB W8, [X0 + 0x60]
	0x01DE8A18 TBNZ X8, 0x1, 0x1DE8A88
	0x01DE8A1C MOV X1, X31
	0x01DE8A20 BL 0x1E93668
	0x01DE8A24 TBZ X0, 0x0, 0x1DE8A88
	0x01DE8A28 MOV X0, X31
	0x01DE8A2C BL 0x1E91B08
	0x01DE8A30 AND X1, X0, 0x0
	0x01DE8A34 MOV X0, X19
	0x01DE8A38 BL 0x1DF498C
	0x01DE8A3C LDR X8, [X19 + 0xC0]
	0x01DE8A40 CBZ X8, 0x1DE8AA4
	0x01DE8A44 LDR W1, [X8 + 0x20]
	0x01DE8A48 MOV X0, X19
	0x01DE8A4C BL 0x1DF49EC
	0x01DE8A50 LDR X8, [X19 + 0xC0]
	0x01DE8A54 CBZ X8, 0x1DE8AA4
	0x01DE8A58 LDRB W8, [X8 + 0x8C]
	0x01DE8A5C CBZ W8, 0x1DE8A88
	0x01DE8A60 ADD X1, X31, 0x8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x25F1000
	007 Move X22, 0x230F000
	008 Move X19, 0x2311000
	009 Move X20, 0x2311000
	010 Move W8, [X21+3249]
	011 Move X22, [X22+3208]
	012 Move X19, [X19+3536]
	013 Move X20, [X20+3544]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x2311000
	019 Move X0, [X0+3536]
	020 Call 0x1C17CF4
	021 Move X0, 0x2311000
	022 Move X0, [X0+3544]
	023 Call 0x1C17CF4
	024 Move X0, 0x230F000
	025 Move X0, [X0+3208]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+3249], W8
	029 Move X0, [X22]
	030 Move X1, X31
	031 Call Shader.PropertyToID, X0
	032 Move X8, [X19]
	033 Move X1, X31
	034 Move X8, [X8+184]
	035 Move [X8], W0
	036 Move X0, [X20]
	037 Call Shader.PropertyToID, X0
	038 Move X8, [X19]
	039 Move X9, -19906560
	040 Move V0, [X9+190]
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X8, [X8+184]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move [X8+4], W0
	047 Move [X8+8], V0
	048 Move X30, [X31+48]
	049 Return 

