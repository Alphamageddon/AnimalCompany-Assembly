Type: AnimalCompany.CageOverlapDebug

Method: System.Void OnEnable()

Disassembly:
	0x01D54E9C LDRB W8, [X20 + 0x7EC]
	0x01D54EA0 LDR X24, [X24 + 0x720]
	0x01D54EA4 LDR X22, [X22 + 0x718]
	0x01D54EA8 LDR X23, [X23 + 0xEC8]
	0x01D54EAC MOV X19, X1
	0x01D54EB0 MOV X21, X0
	0x01D54EB4 TBNZ X8, 0x0, 0x1D54F8C
	0x01D54EB8 ADRP X0, 0x239F000
	0x01D54EBC LDR X0, [X0 + 0x710]
	0x01D54EC0 BL 0x1C16CF4
	0x01D54EC4 ADRP X0, 0x239F000
	0x01D54EC8 LDR X0, [X0 + 0x718]
	0x01D54ECC BL 0x1C16CF4
	0x01D54ED0 ADRP X0, 0x23A0000
	0x01D54ED4 LDR X0, [X0 + 0x250]
	0x01D54ED8 BL 0x1C16CF4
	0x01D54EDC ADRP X0, 0x239F000
	0x01D54EE0 LDR X0, [X0 + 0x720]
	0x01D54EE4 BL 0x1C16CF4
	0x01D54EE8 ADRP X0, 0x23A0000
	0x01D54EEC LDR X0, [X0 + 0xED0]
	0x01D54EF0 BL 0x1C16CF4
	0x01D54EF4 ADRP X0, 0x23A0000
	0x01D54EF8 LDR X0, [X0 + 0xED8]
	0x01D54EFC BL 0x1C16CF4
	0x01D54F00 ADRP X0, 0x23A0000
	0x01D54F04 LDR X0, [X0 + 0xEE0]
	0x01D54F08 BL 0x1C16CF4
	0x01D54F0C ADRP X0, 0x23A0000
	0x01D54F10 LDR X0, [X0 + 0xEE8]
	0x01D54F14 BL 0x1C16CF4
	0x01D54F18 ADRP X0, 0x23A0000
	0x01D54F1C LDR X0, [X0 + 0xEF0]
	0x01D54F20 BL 0x1C16CF4
	0x01D54F24 ADRP X0, 0x23A0000
	0x01D54F28 LDR X0, [X0 + 0xEC8]
	0x01D54F2C BL 0x1C16CF4
	0x01D54F30 ADRP X0, 0x23A0000
	0x01D54F34 LDR X0, [X0 + 0xEF8]
	0x01D54F38 BL 0x1C16CF4
	0x01D54F3C ADRP X0, 0x23A0000
	0x01D54F40 LDR X0, [X0 + 0xF00]
	0x01D54F44 BL 0x1C16CF4
	0x01D54F48 ADRP X0, 0x23A0000
	0x01D54F4C LDR X0, [X0 + 0xF08]
	0x01D54F50 BL 0x1C16CF4
	0x01D54F54 ADRP X0, 0x23A0000
	0x01D54F58 LDR X0, [X0 + 0xF10]
	0x01D54F5C BL 0x1C16CF4
	0x01D54F60 ADRP X0, 0x23A0000
	0x01D54F64 LDR X0, [X0 + 0xF18]
	0x01D54F68 BL 0x1C16CF4
	0x01D54F6C ADRP X0, 0x23A0000
	0x01D54F70 LDR X0, [X0 + 0xF20]
	0x01D54F74 BL 0x1C16CF4
	0x01D54F78 ADRP X0, 0x23A0000
	0x01D54F7C LDR X0, [X0 + 0xF28]
	0x01D54F80 BL 0x1C16CF4
	0x01D54F84 MOVZ W8, 0x1
	0x01D54F88 STRB W8, [X20 + 0x7EC]
	0x01D54F8C MOV X0, X21
	0x01D54F90 MOV X1, X31
	0x01D54F94 BL 0x33BDD8C
	0x01D54F98 LDR X0, [X24]
	0x01D54F9C BL 0x1C16F10
	0x01D54FA0 LDR X1, [X22]
	0x01D54FA4 MOV X20, X0
	0x01D54FA8 BL 0x2AA4804
	0x01D54FAC LDR X8, [X23]
	0x01D54FB0 STP X20, X8, [X21 + 0x10]
	0x01D54FB4 LDR X0, [X24]
	0x01D54FB8 BL 0x1C16F10
	0x01D54FBC LDR X1, [X22]
	0x01D54FC0 MOV X21, X0
	0x01D54FC4 BL 0x2AA4804
	0x01D54FC8 LDR X0, [X24]
	0x01D54FCC BL 0x1C16F10
	0x01D54FD0 LDR X1, [X22]
	0x01D54FD4 MOV X22, X0
	0x01D54FD8 BL 0x2AA4804
	0x01D54FDC CBZ X22, 0x1D55110
	0x01D54FE0 ADRP X8, 0x23A0000
	0x01D54FE4 ADRP X9, 0x23A0000
	0x01D54FE8 ADRP X24, 0x239F000
	0x01D54FEC LDR X8, [X8 + 0xED8]
	0x01D54FF0 LDR X9, [X9 + 0xF28]
	0x01D54FF4 LDR X24, [X24 + 0x710]
	0x01D54FF8 ADRP X25, 0x23A0000
	0x01D54FFC ADRP X26, 0x23A0000
	0x01D55000 LDR X25, [X25 + 0xEE0]
	0x01D55004 B 0x3EB17AC
	0x01D55008 LDR X1, [X8]
	0x01D5500C LDR X2, [X9]
	0x01D55010 LDR X3, [X24]
	0x01D55014 ADRP X27, 0x239F000
	0x01D55018 ADRP X28, 0x239F000
	0x01D5501C ADRP X29, 0x239F000
	0x01D55020 LDR X27, [X27 + 0xF08]
	0x01D55024 LDR X28, [X28 + 0xF18]
	0x01D55028 LDR X29, [X29 + 0xF00]
	0x01D5502C MOV X0, X22
	0x01D55030 BL 0x2AA5098
	0x01D55034 LDR X0, [X25]
	0x01D55038 LDR X2, [X26]
	0x01D5503C MOV X1, X19
	0x01D55040 MOV X3, X31
	0x01D55044 BL 0x32274B8
	0x01D55048 LDR X1, [X27]
	0x01D5504C LDR X3, [X24]
	0x01D55050 MOV X2, X0
	0x01D55054 MOV X0, X22
	0x01D55058 BL 0x2AA5098
	0x01D5505C LDR X1, [X28]
	0x01D55060 LDR X2, [X29]
	0x01D55064 LDR X3, [X24]
	0x01D55068 MOV X0, X22
	0x01D5506C BL 0x2AA5098
	0x01D55070 CBZ X21, 0x1D55110
	0x01D55074 ADRP X8, 0x239F000
	0x01D55078 LDR X8, [X8 + 0xEF0]
	0x01D5507C ADRP X19, 0x239F000
	0x01D55080 LDR X19, [X19 + 0xF10]
	0x01D55084 LDR X3, [X24]
	0x01D55088 LDR X1, [X8]
	0x01D5508C ADRP X25, 0x239F000
	0x01D55090 ADRP X26, 0x239F000
	0x01D55094 ADRP X27, 0x239F000
	0x01D55098 LDR X25, [X25 + 0xEF8]
	0x01D5509C LDR X26, [X26 + 0xF20]
	0x01D550A0 LDR X27, [X27 + 0xEE8]
	0x01D550A4 MOV X0, X21
	0x01D550A8 MOV X2, X22
	0x01D550AC BL 0x2AA5098
	0x01D550B0 LDR X1, [X19]
	0x01D550B4 LDR X2, [X25]
	0x01D550B8 LDR X3, [X24]
	0x01D550BC MOV X0, X21
	0x01D550C0 BL 0x2AA5098
	0x01D550C4 LDR X1, [X26]
	0x01D550C8 LDR X2, [X27]
	0x01D550CC LDR X3, [X24]
	0x01D550D0 MOV X0, X21
	0x01D550D4 BL 0x2AA5098
	0x01D550D8 CBZ X20, 0x1D55110
	0x01D550DC ADRP X8, 0x239F000
	0x01D550E0 LDR X8, [X8 + 0x250]
	0x01D550E4 LDR X1, [X23]
	0x01D550E8 MOV X0, X20
	0x01D550EC MOV X2, X21
	0x01D550F0 LDR X3, [X8]
	0x01D550F4 LDP X20, X19, [X31 + 0x50]
	0x01D550F8 LDP X22, X21, [X31 + 0x40]
	0x01D550FC LDP X24, X23, [X31 + 0x30]
	0x01D55100 LDP X26, X25, [X31 + 0x20]
	0x01D55104 LDP X28, X27, [X31 + 0x10]
	0x01D55108 LDP X29, X30, [X31], #0x60
	0x01D5510C B 0x2AA5084
	0x01D55110 BL 0x1C16F20
	0x01D55114 STR X30, [X31 - 0x40]!
	0x01D55118 STP X24, X23, [X31 + 0x10]
	0x01D5511C STP X22, X21, [X31 + 0x20]
	0x01D55120 STP X20, X19, [X31 + 0x30]
	0x01D55124 ADRP X20, 0x2683000
	0x01D55128 LDRB W8, [X20 + 0x7D8]
	0x01D5512C MOV X19, X0
	0x01D55130 TBNZ X8, 0x0, 0x1D55220
	0x01D55134 ADRP X0, 0x239E000
	0x01D55138 LDR X0, [X0 + 0x648]
	0x01D5513C BL 0x1C16CF4
	0x01D55140 ADRP X0, 0x239E000
	0x01D55144 LDR X0, [X0 + 0x758]
	0x01D55148 BL 0x1C16CF4
	0x01D5514C ADRP X0, 0x239F000
	0x01D55150 LDR X0, [X0 + 0xF30]
	0x01D55154 BL 0x1C16CF4
	0x01D55158 ADRP X0, 0x239E000
	0x01D5515C LDR X0, [X0 + 0xDC8]
	0x01D55160 BL 0x1C16CF4
	0x01D55164 ADRP X0, 0x239F000
	0x01D55168 LDR X0, [X0 + 0xB50]
	0x01D5516C BL 0x1C16CF4
	0x01D55170 ADRP X0, 0x239F000
	0x01D55174 LDR X0, [X0 + 0xF38]
	0x01D55178 BL 0x1C16CF4
	0x01D5517C ADRP X0, 0x239F000
	0x01D55180 LDR X0, [X0 + 0x178]
	0x01D55184 BL 0x1C16CF4
	0x01D55188 ADRP X0, 0x239F000
	0x01D5518C LDR X0, [X0 + 0xF40]
	0x01D55190 BL 0x1C16CF4
	0x01D55194 ADRP X0, 0x239F000
	0x01D55198 LDR X0, [X0 + 0xF48]
	0x01D5519C BL 0x1C16CF4
	0x01D551A0 ADRP X0, 0x239F000
	0x01D551A4 LDR X0, [X0 + 0xF50]
	0x01D551A8 BL 0x1C16CF4
	0x01D551AC ADRP X0, 0x239F000
	0x01D551B0 LDR X0, [X0 + 0xF58]
	0x01D551B4 BL 0x1C16CF4
	0x01D551B8 ADRP X0, 0x239F000
	0x01D551BC LDR X0, [X0 + 0xF60]
	0x01D551C0 BL 0x1C16CF4
	0x01D551C4 ADRP X0, 0x239F000
	0x01D551C8 LDR X0, [X0 + 0xF68]
	0x01D551CC BL 0x1C16CF4
	0x01D551D0 ADRP X0, 0x239F000
	0x01D551D4 LDR X0, [X0 + 0xF70]
	0x01D551D8 BL 0x1C16CF4
	0x01D551DC ADRP X0, 0x239F000
	0x01D551E0 LDR X0, [X0 + 0xF78]
	0x01D551E4 BL 0x1C16CF4
	0x01D551E8 ADRP X0, 0x239F000
	0x01D551EC LDR X0, [X0 + 0xF80]
	0x01D551F0 BL 0x1C16CF4
	0x01D551F4 ADRP X0, 0x239F000
	0x01D551F8 LDR X0, [X0 + 0xF88]
	0x01D551FC BL 0x1C16CF4
	0x01D55200 ADRP X0, 0x239F000
	0x01D55204 LDR X0, [X0 + 0xF90]
	0x01D55208 BL 0x1C16CF4
	0x01D5520C ADRP X0, 0x239F000
	0x01D55210 LDR X0, [X0 + 0xF98]
	0x01D55214 BL 0x1C16CF4
	0x01D55218 MOVZ W8, 0x1
	0x01D5521C STRB W8, [X20 + 0x7D8]
	0x01D55220 LDR X0, [X19 + 0x30]
	0x01D55224 CBZ X0, 0x1D55728
	0x01D55228 ADRP X22, 0x239E000
	0x01D5522C LDR X22, [X22 + 0x648]
	0x01D55230 MOV X1, X31
	0x01D55234 BL 0x3232AC0
	0x01D55238 LDR X0, [X22]
	0x01D5523C LDR W8, [X0 + 0xE0]
	0x01D55240 CBNZ W8, 0x1D55248
	0x01D55244 BL 0x1C16DFC
	0x01D55248 ADRP X23, 0x2683000
	0x01D5524C LDRB W8, [X23 + 0x787]
	0x01D55250 CBNZ W8, 0x1D55268
	0x01D55254 ADRP X0, 0x239E000
	0x01D55258 LDR X0, [X0 + 0x648]
	0x01D5525C BL 0x1C16CF4
	0x01D55260 MOVZ W8, 0x1
	0x01D55264 STRB W8, [X23 + 0x787]
	0x01D55268 LDR X0, [X22]
	0x01D5526C LDR W8, [X0 + 0xE0]
	0x01D55270 CBNZ W8, 0x1D5527C
	0x01D55274 BL 0x1C16DFC
	0x01D55278 LDR X0, [X22]
	0x01D5527C LDR X8, [X0 + 0xB8]
	0x01D55280 LDR X8, [X8]
	0x01D55284 CBZ X8, 0x1D55728
	0x01D55288 LDR X8, [X8 + 0xE8]
	0x01D5528C CBZ X8, 0x1D55728
	0x01D55290 LDR X8, [X8 + 0x48]
	0x01D55294 CBZ X8, 0x1D55728
	0x01D55298 LDR W8, [X8 + 0x4C]
	0x01D5529C SUB W8, W8, 0x1
	0x01D552A0 CMP W8, 0x2
	0x01D552A4 B.HI 0x1D552B8
	0x01D552A8 ADRP X9, 0x215F000
	0x01D552AC ADD X9, X9, 0xE68
	0x01D552B0 LDR X8, [X9, W8, SXTW]
	0x01D552B4 B 0x1D552C0
	0x01D552B8 ADRP X8, 0x239F000
	0x01D552BC LDR X8, [X8 + 0xF60]
	0x01D552C0 LDR W9, [X0 + 0xE0]
	0x01D552C4 LDR X20, [X8]
	0x01D552C8 CBNZ W9, 0x1D552D0
	0x01D552CC BL 0x1C16DFC
	0x01D552D0 LDRB W8, [X23 + 0x787]
	0x01D552D4 CBNZ W8, 0x1D552EC
	0x01D552D8 ADRP X0, 0x239E000
	0x01D552DC LDR X0, [X0 + 0x648]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0x2685000
	015 Move X21, 0x23A0000
	016 Move W8, [X20+2002]
	017 Move X21, [X21+1432]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {46}
	023 Move X0, 0x23A0000
	024 Move X0, [X0+2600]
	025 Call 0x1C17CF4
	026 Move X0, 0x23A1000
	027 Move X0, [X0+3672]
	028 Call 0x1C17CF4
	029 Move X0, 0x23A0000
	030 Move X0, [X0+1880]
	031 Call 0x1C17CF4
	032 Move X0, 0x23A0000
	033 Move X0, [X0+2512]
	034 Call 0x1C17CF4
	035 Move X0, 0x23A1000
	036 Move X0, [X0+3640]
	037 Call 0x1C17CF4
	038 Move X0, 0x23A0000
	039 Move X0, [X0+1432]
	040 Call 0x1C17CF4
	041 Move X0, 0x23A1000
	042 Move X0, [X0+3680]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X20+2002], W8
	046 Move X0, [X21]
	047 Move X20, [X19+48]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X20
	053 Move X1, X31
	054 Move X2, X31
	055 Call Object.op_Inequality, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {69}
	060 Move X0, [X21]
	061 Move X20, [X19+48]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, X20
	067 Move X1, X31
	068 Call Object.Destroy, X0
	069 Move X0, [X21]
	070 Move X21, 0x23A1000
	071 Move X20, [X19+40]
	072 Move W8, [X0+224]
	073 Move X21, [X21+3640]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X1, [X21]
	078 Move X0, X20
	079 Call 0x222E35C, X0
	080 Move X8, [X19+40]
	081 Move [X19+48], X0
	082 Compare X8, 0
	083 JumpIfEqual {304}
	084 Move X0, X8
	085 Move X1, X31
	086 Call Mesh.get_triangles, X0
	087 Compare X0, 0
	088 JumpIfEqual {304}
	089 Move X8, [X19+32]
	090 Compare X8, 0
	091 JumpIfEqual {304}
	092 Move X8, [X8+96]
	093 Compare X8, 0
	094 JumpIfEqual {304}
	095 Move X8, [X8+48]
	096 Compare X8, 0
	097 JumpIfEqual {304}
	098 Move X10, 0x23A1000
	099 Move W9, [X0+24]
	100 Move W8, [X8+24]
	101 Move X10, [X10+3672]
	102 Move X20, X0
	103 Multiply W8, W9, W8
	104 Move X0, [X10]
	105 Add W1, W8, W8
	106 Call 0x1C17D6C
	107 Move W8, [X20+24]
	108 Move X21, X0
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X27, 0x239F000
	111 Move X29, 0x239F000
	112 Move X27, [X27+1880]
	113 Move X8, [X19+32]
	114 Move X29, [X29+2600]
	115 Move W26, 0x5556
	116 Move W24, W31
	117 Move W25, W31
	118 NotImplemented "Instruction MOVK not yet implemented."
	119 Compare X8, 0
	120 JumpIfEqual {304}
	121 Move X9, [X8+96]
	122 Compare X9, 0
	123 JumpIfEqual {304}
	124 Move X9, [X9+48]
	125 Compare X9, 0
	126 JumpIfEqual {304}
	127 Move W9, [X9+24]
	128 NotImplemented "Instruction SMADDL not yet implemented."
	129 Move X11, X10
	130 ShiftRight X11, 63
	131 And X11, X11, 0x7FFFFFFF
	132 Move X10, X10
	133 ShiftRight X10, 32
	134 And X10, X10, 0x7FFFFFFF
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Add W28, W10, W11
	137 Move X8, 0x239F000
	138 Move X8, [X8+2512]
	139 Move W1, 4
	140 Move X0, [X8]
	141 Call 0x1C17D6C
	142 Move X22, X0
	143 Move X0, [X27]
	144 Add X1, X31, 12
	145 Move [X31+12], W25
	146 Call 0x1C17E04
	147 Compare X22, 0
	148 JumpIfEqual {304}
	149 Move X23, X0
	150 Compare X0, 0
	151 JumpIfEqual {158}
	152 Move X8, [X22]
	153 Move X0, X23
	154 Move X1, [X8+64]
	155 Call 0x1C17E00
	156 Compare X0, 0
	157 JumpIfEqual {306}
	158 Move W8, [X22+24]
	159 Compare W8, 0
	160 JumpIfEqual {305}
	161 Move [X22+32], X23
	162 Move X0, [X27]
	163 Add X1, X31, 8
	164 Move [X31+8], W28
	165 Call 0x1C17E04
	166 Move X23, X0
	167 Compare X0, 0
	168 JumpIfEqual {175}
	169 Move X8, [X22]
	170 Move X0, X23
	171 Move X1, [X8+64]
	172 Call 0x1C17E00
	173 Compare X0, 0
	174 JumpIfEqual {306}
	175 Move W8, [X22+24]
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move [X22+40], X23
	178 Move X0, [X27]
	179 Add X1, X31, 4
	180 Move [X31+4], W24
	181 Call 0x1C17E04
	182 Move X23, X0
	183 Compare X0, 0
	184 JumpIfEqual {191}
	185 Move X8, [X22]
	186 Move X0, X23
	187 Move X1, [X8+64]
	188 Call 0x1C17E00
	189 Compare X0, 0
	190 JumpIfEqual {306}
	191 Move W8, [X22+24]
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move [X22+48], X23
	194 Move X8, [X19+32]
	195 Compare X8, 0
	196 JumpIfEqual {304}
	197 Move X8, [X8+96]
	198 Compare X8, 0
	199 JumpIfEqual {304}
	200 Move X8, [X8+48]
	201 Compare X8, 0
	202 JumpIfEqual {304}
	203 Move W9, [X8+24]
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Add X8, X8, W24
	206 Move W8, [X8+32]
	207 Move X0, [X27]
	208 Add X1, X31, 0
	209 Move [X31], W8
	210 Call 0x1C17E04
	211 Move X23, X0
	212 Compare X0, 0
	213 JumpIfEqual {220}
	214 Move X8, [X22]
	215 Move X0, X23
	216 Move X1, [X8+64]
	217 Call 0x1C17E00
	218 Compare X0, 0
	219 JumpIfEqual {306}
	220 Move W8, [X22+24]
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Move [X22+56], X23
	223 Move X8, 0x23A0000
	224 Move X8, [X8+3680]
	225 Move X1, X22
	226 Move X2, X31
	227 Move X0, [X8]
	228 Call String.Format, X0, X1
	229 Move X8, [X29]
	230 Move X22, X0
	231 Move W9, [X8+224]
	232 Compare W9, 0
	233 JumpIfNotEqual {236}
	234 Move X0, X8
	235 Call 0x1C17DFC
	236 Move X0, X22
	237 Move X1, X31
	238 Call Debug.Log, X0
	239 Move X8, [X19+32]
	240 Compare X8, 0
	241 JumpIfEqual {304}
	242 Move X9, [X8+96]
	243 Compare X9, 0
	244 JumpIfEqual {304}
	245 Move X9, [X9+48]
	246 Compare X9, 0
	247 JumpIfEqual {304}
	248 Move W10, [X9+24]
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Add X9, X9, W24
	251 Move W9, [X9+32]
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Move W9, [X20+24]
	254 Add W24, W24, 1
	255 Move W9, [X20+24]
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Compare X21, 0
	258 JumpIfEqual {304}
	259 Move W10, [X21+24]
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Move X11, W25
	262 Add X12, X20, X11
	263 Move W12, [X12+32]
	264 Add X13, X21, X11
	265 Add W11, W25, 1
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Move [X13+32], W12
	268 Move X11, W11
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Add X12, X20, X11
	271 Move W12, [X12+32]
	272 Add X13, X21, X11
	273 Add W11, W25, 2
	274 NotImplemented "Instruction CMP not yet implemented."
	275 Move [X13+32], W12
	276 Move X11, W11
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Add X10, X20, X11
	279 Move W10, [X10+32]
	280 Add X11, X21, X11
	281 Move [X11+32], W10
	282 Add W25, W25, 3
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Move X0, [X19+48]
	285 Compare X0, 0
	286 JumpIfEqual {304}
	287 Move X1, X21
	288 Move X2, X31
	289 Call Mesh.set_triangles, X0, X1
	290 Move X20, [X31+96]
	291 Move X19, [X31+104]
	292 Move X22, [X31+80]
	293 Move X21, [X31+88]
	294 Move X24, [X31+64]
	295 Move X23, [X31+72]
	296 Move X26, [X31+48]
	297 Move X25, [X31+56]
	298 Move X28, [X31+32]
	299 Move X27, [X31+40]
	300 Move X29, [X31+16]
	301 Move X30, [X31+24]
	302 Add X31, X31, 112
	303 Return 
	304 Call 0x1C17F20
	305 Call 0x1C17F28
	306 Call 0x1C17F44
	307 Move X1, X31
	308 Call 0x1C17DEC

Method: System.Void OnDrawGizmos()

Disassembly:
	0x01D552E0 BL 0x1C16CF4
	0x01D552E4 MOVZ W8, 0x1
	0x01D552E8 STRB W8, [X23 + 0x787]
	0x01D552EC LDR X0, [X22]
	0x01D552F0 LDR W8, [X0 + 0xE0]
	0x01D552F4 CBNZ W8, 0x1D55300
	0x01D552F8 BL 0x1C16DFC
	0x01D552FC LDR X0, [X22]
	0x01D55300 LDR X8, [X0 + 0xB8]
	0x01D55304 LDR X8, [X8]
	0x01D55308 CBZ X8, 0x1D55728
	0x01D5530C LDR X8, [X8 + 0xE0]
	0x01D55310 CBZ X8, 0x1D55728
	0x01D55314 LDR X8, [X8 + 0x50]
	0x01D55318 CBZ X8, 0x1D55728
	0x01D5531C LDR X0, [X8 + 0x50]
	0x01D55320 MOV X1, X31
	0x01D55324 BL 0x32277A8
	0x01D55328 TBZ X0, 0x0, 0x1D55338
	0x01D5532C ADRP X8, 0x239F000
	0x01D55330 LDR X8, [X8 + 0xF88]
	0x01D55334 B 0x1D55398
	0x01D55338 LDR X0, [X22]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+128], X30
	003 Move [X31+136], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call Component.get_transform, X0
	007 Compare X0, 0
	008 JumpIfEqual {30}
	009 Add X8, X31, 64
	010 Move X1, X31
	011 Call Transform.get_localToWorldMatrix, X0
	012 Move V0, [X31+64]
	013 Move V1, [X31+80]
	014 Move V2, [X31+96]
	015 Move V3, [X31+112]
	016 Add X0, X31, 0
	017 Move X1, X31
	018 Move [X31], V0
	019 Move [X31+8], V1
	020 Move [X31+32], V2
	021 Move [X31+40], V3
	022 Call Gizmos.set_matrix, X0
	023 Move X0, [X19+48]
	024 Move X1, X31
	025 Call Gizmos.DrawMesh, X0
	026 Move X30, [X31+128]
	027 Move X19, [X31+136]
	028 Add X31, X31, 144
	029 Return 
	030 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01D5533C LDR W8, [X0 + 0xE0]
	0x01D55340 CBNZ W8, 0x1D55348

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

