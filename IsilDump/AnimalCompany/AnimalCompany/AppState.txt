Type: AnimalCompany.AppState

Method: SpatialSys.ObservableState.StatePrimitive`1<System.Boolean> get_startupCompleted()

Disassembly:
	0x01C91658 LDR X8, [X8 + 0xCA8]
	0x01C9165C LDR X22, [X22 + 0xC58]

ISIL:
	001 Move X0, [X0+96]
	002 Return X0

Method: System.Void set_startupCompleted(SpatialSys.ObservableState.StatePrimitive`1<System.Boolean> value)

Disassembly:
	0x01C91660 ADRP X23, 0x22BC000
	0x01C91664 MOV X2, X0

ISIL:
	001 Move [X0+96], X1
	002 Return 

Method: SpatialSys.ObservableState.StatePrimitive`1<AnimalCompany.AppPlatform> get_platform()

Disassembly:
	0x01C91668 LDR X1, [X8]
	0x01C9166C LDR X3, [X22]

ISIL:
	001 Move X0, [X0+104]
	002 Return X0

Method: System.Void set_platform(SpatialSys.ObservableState.StatePrimitive`1<AnimalCompany.AppPlatform> value)

Disassembly:
	0x01C91670 LDR X23, [X23 + 0xCA0]
	0x01C91674 MOV X0, X20

ISIL:
	001 Move [X0+104], X1
	002 Return 

Method: SpatialSys.ObservableState.StatePrimitive`1<System.String> get_clientVersion()

Disassembly:
	0x01C91678 BL 0x28FA294
	0x01C9167C LDR X20, [X23]

ISIL:
	001 Move X0, [X0+112]
	002 Return X0

Method: System.Void set_clientVersion(SpatialSys.ObservableState.StatePrimitive`1<System.String> value)

Disassembly:
	0x01C91680 MOV X0, X31
	0x01C91684 BL 0x3A6BF90

ISIL:
	001 Move [X0+112], X1
	002 Return 

Method: SpatialSys.ObservableState.StatePrimitive`1<System.String> get_clientVersionSHA()

Disassembly:
	0x01C91688 TBZ X0, 0x0, 0x1C916A8
	0x01C9168C ADRP X8, 0x22BC000

ISIL:
	001 Move X0, [X0+120]
	002 Return X0

Method: System.Void set_clientVersionSHA(SpatialSys.ObservableState.StatePrimitive`1<System.String> value)

Disassembly:
	0x01C91690 LDR X8, [X8 + 0xBE0]
	0x01C91694 MOV X0, X20

ISIL:
	001 Move [X0+120], X1
	002 Return 

Method: SpatialSys.ObservableState.StatePrimitive`1<System.String> get_clientUserAgent()

Disassembly:
	0x01C91698 MOV X2, X31
	0x01C9169C LDR X1, [X8]

ISIL:
	001 Move X0, [X0+128]
	002 Return X0

Method: System.Void set_clientUserAgent(SpatialSys.ObservableState.StatePrimitive`1<System.String> value)

Disassembly:
	0x01C916A0 BL 0x3084780
	0x01C916A4 MOV X20, X0

ISIL:
	001 Move [X0+128], X1
	002 Return 

Method: SpatialSys.ObservableState.StatePrimitive`1<System.String> get_apiOrigin()

Disassembly:
	0x01C916A8 LDR X0, [X21]
	0x01C916AC LDR W8, [X0 + 0xE0]

ISIL:
	001 Move X0, [X0+136]
	002 Return X0

Method: System.Void set_apiOrigin(SpatialSys.ObservableState.StatePrimitive`1<System.String> value)

Disassembly:
	0x01C916B0 CBNZ W8, 0x1C916BC
	0x01C916B4 BL 0x1B6E8F8

ISIL:
	001 Move [X0+136], X1
	002 Return 

Method: SpatialSys.ObservableState.StatePrimitive`1<System.String> get_apiToken()

Disassembly:
	0x01C916B8 LDR X0, [X21]
	0x01C916BC LDR X8, [X0 + 0xB8]

ISIL:
	001 Move X0, [X0+144]
	002 Return X0

Method: System.Void set_apiToken(SpatialSys.ObservableState.StatePrimitive`1<System.String> value)

Disassembly:
	0x01C916C0 LDR X0, [X8 + 0x18]
	0x01C916C4 CBZ X0, 0x1C91AE8

ISIL:
	001 Move [X0+144], X1
	002 Return 

Method: SpatialSys.ObservableState.StatePrimitive`1<System.Boolean> get_isLoggedIn()

Disassembly:
	0x01C916C8 ADRP X8, 0x22BC000
	0x01C916CC LDR X8, [X8 + 0xC80]

ISIL:
	001 Move X0, [X0+152]
	002 Return X0

Method: System.Void set_isLoggedIn(SpatialSys.ObservableState.StatePrimitive`1<System.Boolean> value)

Disassembly:
	0x01C916D0 LDR X3, [X22]
	0x01C916D4 MOV X2, X20

ISIL:
	001 Move [X0+152], X1
	002 Return 

Method: SpatialSys.ObservableState.StatePrimitive`1<System.Boolean> get_apiSocketConnected()

Disassembly:
	0x01C916D8 LDR X1, [X8]
	0x01C916DC BL 0x28FA294

ISIL:
	001 Move X0, [X0+160]
	002 Return X0

Method: System.Void set_apiSocketConnected(SpatialSys.ObservableState.StatePrimitive`1<System.Boolean> value)

Disassembly:
	0x01C916E0 ADD X1, X31, 0x8
	0x01C916E4 ADD X2, X31, 0x4

ISIL:
	001 Move [X0+160], X1
	002 Return 

Method: AnimalCompany.UserState get_user()

Disassembly:
	0x01C916E8 BL 0x1C91AFC
	0x01C916EC LDR X8, [X21]

ISIL:
	001 Move X0, [X0+168]
	002 Return X0

Method: System.Void set_user(AnimalCompany.UserState value)

Disassembly:
	0x01C916F0 LDR X8, [X8 + 0xB8]
	0x01C916F4 LDR X0, [X8 + 0x18]

ISIL:
	001 Move [X0+168], X1
	002 Return 

Method: AnimalCompany.NetSessionState get_netSession()

Disassembly:
	0x01C916F8 CBZ X0, 0x1C91AE8
	0x01C916FC ADRP X8, 0x22BC000

ISIL:
	001 Move X0, [X0+176]
	002 Return X0

Method: System.Void set_netSession(AnimalCompany.NetSessionState value)

Disassembly:
	0x01C91700 LDR X8, [X8 + 0xC98]
	0x01C91704 LDR X2, [X31 + 0x8]

ISIL:
	001 Move [X0+176], X1
	002 Return 

Method: AnimalCompany.DebugState get_debug()

Disassembly:
	0x01C91708 LDR X3, [X22]
	0x01C9170C ADRP X23, 0x22BC000

ISIL:
	001 Move X0, [X0+184]
	002 Return X0

Method: System.Void set_debug(AnimalCompany.DebugState value)

Disassembly:
	0x01C91710 LDR X1, [X8]
	0x01C91714 LDR X23, [X23 + 0x5F8]

ISIL:
	001 Move [X0+184], X1
	002 Return 

Method: System.Void .ctor()

Disassembly:
	0x01C91718 BL 0x28FA294
	0x01C9171C LDR X8, [X21]
	0x01C91720 LDR W9, [X31 + 0x4]
	0x01C91724 LDR X0, [X23]
	0x01C91728 ADD X1, X31, 0x0
	0x01C9172C LDR X8, [X8 + 0xB8]
	0x01C91730 LDR X20, [X8 + 0x18]
	0x01C91734 STR W9, [X31]
	0x01C91738 BL 0x1B6E900
	0x01C9173C CBZ X20, 0x1C91AE8
	0x01C91740 ADRP X8, 0x22BC000
	0x01C91744 LDR X8, [X8 + 0xC78]
	0x01C91748 LDR X3, [X22]
	0x01C9174C MOV X2, X0
	0x01C91750 MOV X0, X20
	0x01C91754 LDR X1, [X8]
	0x01C91758 BL 0x28FA294
	0x01C9175C LDR X8, [X21]
	0x01C91760 MOV X0, X31
	0x01C91764 LDR X8, [X8 + 0xB8]
	0x01C91768 LDR X20, [X8 + 0x18]
	0x01C9176C BL 0x322AEAC
	0x01C91770 CBZ X20, 0x1C91AE8
	0x01C91774 ADRP X8, 0x22BC000
	0x01C91778 LDR X8, [X8 + 0xC88]
	0x01C9177C LDR X3, [X22]
	0x01C91780 MOV X2, X0
	0x01C91784 MOV X0, X20
	0x01C91788 LDR X1, [X8]
	0x01C9178C BL 0x28FA294
	0x01C91790 LDR X8, [X21]
	0x01C91794 MOV X0, X31
	0x01C91798 LDR X8, [X8 + 0xB8]
	0x01C9179C LDR X20, [X8 + 0x18]
	0x01C917A0 BL 0x3AA3A94
	0x01C917A4 CBZ X20, 0x1C91AE8
	0x01C917A8 ADRP X8, 0x22BC000
	0x01C917AC LDR X8, [X8 + 0xC90]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2593000
	007 Move X22, 0x22BD000
	008 Move X21, 0x22BD000
	009 Move W8, [X20+943]
	010 Move X22, [X22+2944]
	011 Move X21, [X21+2952]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x22BD000
	018 Move X0, [X0+2944]
	019 Call 0x1B6F7F0
	020 Move X0, 0x22BD000
	021 Move X0, [X0+2952]
	022 Call 0x1B6F7F0
	023 Move W8, 1
	024 Move [X20+943], W8
	025 Move X0, [X22]
	026 Call 0x1B6FA0C
	027 Move X1, X31
	028 Move X20, X0
	029 Call NoOpObservationContext..ctor, X0
	030 Move X0, [X21]
	031 Call 0x1B6FA0C
	032 Move X1, X31
	033 Move X21, X0
	034 Call NoOpTypeIDManifest..ctor, X0
	035 Move X0, X19
	036 Move X1, X20
	037 Move X2, X21
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X3, X31
	043 Move X4, X31
	044 Move X30, [X31+48]
	045 Call StateRoot..ctor, X0, X1, X2, X3
	046 Return 

Method: System.Void .ctor(SpatialSys.ObservableState.IStateObservationContext context, SpatialSys.ObservableState.IStateTypeIDManifest typeIDManifest)

Disassembly:
	0x01C8ADEC B 0x1C8AE38
	0x01C8ADF0 B 0x1C8AE38
	0x01C8ADF4 B 0x1C8AE38

ISIL:
	001 Move X3, X31
	002 Move X4, X31
	003 Call StateRoot..ctor, X0, X1, X2, X3
	004 Return 

Method: System.Void PostInitialize()

Disassembly:
	0x01C917B0 ADRP X26, 0x22BC000
	0x01C917B4 LDR X26, [X26 + 0xB90]
	0x01C917B8 LDR X3, [X22]
	0x01C917BC LDR X1, [X8]
	0x01C917C0 ADRP X21, 0x22BC000
	0x01C917C4 ADRP X25, 0x22BC000
	0x01C917C8 ADRP X23, 0x22BC000
	0x01C917CC LDR X21, [X21 + 0xC68]
	0x01C917D0 LDR X25, [X25 + 0xBA0]
	0x01C917D4 LDR X23, [X23 + 0x4E8]
	0x01C917D8 MOV X2, X0
	0x01C917DC MOV X0, X20
	0x01C917E0 BL 0x28FA294
	0x01C917E4 LDR X0, [X26]
	0x01C917E8 BL 0x1B6EA0C
	0x01C917EC LDR X2, [X21]
	0x01C917F0 MOV X1, X19
	0x01C917F4 MOV X3, X31
	0x01C917F8 MOV X20, X0
	0x01C917FC BL 0x342E500
	0x01C91800 LDR X0, [X25]
	0x01C91804 MOVZ W1, 0x1
	0x01C91808 BL 0x1B6E868
	0x01C9180C LDR X8, [X23]
	0x01C91810 MOV X21, X0
	0x01C91814 LDR W9, [X8 + 0xE0]
	0x01C91818 CBNZ W9, 0x1C91824
	0x01C9181C MOV X0, X8
	0x01C91820 BL 0x1B6E8F8
	0x01C91824 ADRP X24, 0x2592000
	0x01C91828 LDRB W8, [X24 + 0x443]
	0x01C9182C CBNZ W8, 0x1C91844
	0x01C91830 ADRP X0, 0x22BC000
	0x01C91834 LDR X0, [X0 + 0x4E8]
	0x01C91838 BL 0x1B6E7F0
	0x01C9183C MOVZ W8, 0x1
	0x01C91840 STRB W8, [X24 + 0x443]
	0x01C91844 LDR X0, [X23]
	0x01C91848 LDR W8, [X0 + 0xE0]
	0x01C9184C CBNZ W8, 0x1C91858
	0x01C91850 BL 0x1B6E8F8
	0x01C91854 LDR X0, [X23]
	0x01C91858 LDR X8, [X0 + 0xB8]
	0x01C9185C LDR X8, [X8]
	0x01C91860 CBZ X8, 0x1C91AE8
	0x01C91864 CBZ X21, 0x1C91AE8
	0x01C91868 LDR X22, [X8 + 0xB8]
	0x01C9186C CBZ X22, 0x1C91884
	0x01C91870 LDR X8, [X21]
	0x01C91874 MOV X0, X22
	0x01C91878 LDR X1, [X8 + 0x40]
	0x01C9187C BL 0x1B6E8FC
	0x01C91880 CBZ X0, 0x1C91AF0
	0x01C91884 LDR W8, [X21 + 0x18]
	0x01C91888 CBZ W8, 0x1C91AEC
	0x01C9188C ADRP X27, 0x22BC000
	0x01C91890 LDR X27, [X27 + 0xC60]
	0x01C91894 MOV X0, X20
	0x01C91898 MOV X1, X21
	0x01C9189C STR X22, [X21 + 0x20]
	0x01C918A0 BL 0x1C8CFDC
	0x01C918A4 LDR X0, [X26]
	0x01C918A8 BL 0x1B6EA0C
	0x01C918AC LDR X2, [X27]
	0x01C918B0 MOV X1, X19
	0x01C918B4 MOV X3, X31
	0x01C918B8 MOV X20, X0
	0x01C918BC BL 0x342E500
	0x01C918C0 LDR X0, [X25]
	0x01C918C4 MOVZ W1, 0x1
	0x01C918C8 MOVZ W22, 0x1
	0x01C918CC BL 0x1B6E868
	0x01C918D0 LDRB W8, [X24 + 0x443]
	0x01C918D4 MOV X21, X0
	0x01C918D8 CBNZ W8, 0x1C918EC
	0x01C918DC ADRP X0, 0x22BC000
	0x01C918E0 LDR X0, [X0 + 0x4E8]
	0x01C918E4 BL 0x1B6E7F0
	0x01C918E8 STRB W22, [X24 + 0x443]
	0x01C918EC LDR X0, [X23]
	0x01C918F0 LDR W8, [X0 + 0xE0]
	0x01C918F4 CBNZ W8, 0x1C91900
	0x01C918F8 BL 0x1B6E8F8
	0x01C918FC LDR X0, [X23]
	0x01C91900 LDR X8, [X0 + 0xB8]
	0x01C91904 LDR X8, [X8]
	0x01C91908 CBZ X8, 0x1C91AE8
	0x01C9190C CBZ X21, 0x1C91AE8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x2593000
	008 Move X23, 0x22BD000
	009 Move X21, 0x22BD000
	010 Move X22, 0x22BD000
	011 Move W8, [X19+944]
	012 Move X23, [X23+2960]
	013 Move X21, [X21+2968]
	014 Move X22, [X22+2976]
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x22BD000
	021 Move X0, [X0+2968]
	022 Call 0x1B6F7F0
	023 Move X0, 0x22BD000
	024 Move X0, [X0+2976]
	025 Call 0x1B6F7F0
	026 Move X0, 0x22BD000
	027 Move X0, [X0+2960]
	028 Call 0x1B6F7F0
	029 Move X0, 0x22BD000
	030 Move X0, [X0+2984]
	031 Call 0x1B6F7F0
	032 Move W8, 1
	033 Move [X19+944], W8
	034 Move X0, [X23]
	035 Move X19, [X20+128]
	036 Call 0x1B6FA0C
	037 Move X2, [X21]
	038 Move X1, X20
	039 Move X3, X31
	040 Move X21, X0
	041 Call ObserverDelegate..ctor, X0, X1, X2
	042 Move X0, [X22]
	043 Move W1, 3
	044 Call 0x1B6F868
	045 Compare X0, 0
	046 JumpIfEqual {102}
	047 Move X23, [X20+112]
	048 Move X22, X0
	049 Compare X23, 0
	050 JumpIfEqual {57}
	051 Move X8, [X22]
	052 Move X0, X23
	053 Move X1, [X8+64]
	054 Call 0x1B6F8FC
	055 Compare X0, 0
	056 JumpIfEqual {103}
	057 Move W8, [X22+24]
	058 Compare W8, 0
	059 JumpIfEqual {101}
	060 Move [X22+32], X23
	061 Move X23, [X20+120]
	062 Compare X23, 0
	063 JumpIfEqual {71}
	064 Move X8, [X22]
	065 Move X0, X23
	066 Move X1, [X8+64]
	067 Call 0x1B6F8FC
	068 Compare X0, 0
	069 JumpIfEqual {103}
	070 Move W8, [X22+24]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move [X22+40], X23
	073 Move X20, [X20+104]
	074 Compare X20, 0
	075 JumpIfEqual {83}
	076 Move X8, [X22]
	077 Move X0, X20
	078 Move X1, [X8+64]
	079 Call 0x1B6F8FC
	080 Compare X0, 0
	081 JumpIfEqual {103}
	082 Move W8, [X22+24]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move [X22+48], X20
	085 Compare X19, 0
	086 JumpIfEqual {102}
	087 Move X8, 0x22BD000
	088 Move X8, [X8+2984]
	089 Move X0, X19
	090 Move X1, X21
	091 Move X2, X22
	092 Move X3, [X8]
	093 Move X20, [X31+32]
	094 Move X19, [X31+40]
	095 Move X22, [X31+16]
	096 Move X21, [X31+24]
	097 Move X30, [X31+48]
	098 Move X23, [X31+56]
	099 Call StatePrimitive`1<Object>.RegisterDerivedState, X0, X1, X2
	100 Return 
	101 Call 0x1B6FA24
	102 Call 0x1B6FA1C
	103 Call 0x1B6FA40
	104 Move X1, X31
	105 Call 0x1B6F8E8

Method: System.Void Reset(System.Boolean recursively = True)

Disassembly:
	0x01C91910 LDR X22, [X8 + 0x88]
	0x01C91914 CBZ X22, 0x1C9192C
	0x01C91918 LDR X8, [X21]

ISIL:
	001 And W1, W1, 1
	002 Move X2, X31
	003 Call StateObject.Reset, X0, X1
	004 Return 

Method: System.Void <PostInitialize>b__50_0(SpatialSys.ObservableState.StateChangedEventArgs args)

Disassembly:
	0x01C9191C MOV X0, X22
	0x01C91920 LDR X1, [X8 + 0x40]
	0x01C91924 BL 0x1B6E8FC
	0x01C91928 CBZ X0, 0x1C91AF0
	0x01C9192C LDR W8, [X21 + 0x18]
	0x01C91930 CBZ W8, 0x1C91AEC
	0x01C91934 ADRP X27, 0x22BC000
	0x01C91938 LDR X27, [X27 + 0xC70]
	0x01C9193C MOV X0, X20
	0x01C91940 MOV X1, X21
	0x01C91944 STR X22, [X21 + 0x20]
	0x01C91948 BL 0x1C8CFDC
	0x01C9194C LDR X0, [X26]
	0x01C91950 BL 0x1B6EA0C
	0x01C91954 LDR X2, [X27]
	0x01C91958 MOV X1, X19
	0x01C9195C MOV X3, X31
	0x01C91960 MOV X20, X0
	0x01C91964 BL 0x342E500
	0x01C91968 LDR X0, [X25]
	0x01C9196C MOVZ W1, 0x3
	0x01C91970 BL 0x1B6E868
	0x01C91974 LDRB W8, [X24 + 0x443]
	0x01C91978 MOV X19, X0
	0x01C9197C CBNZ W8, 0x1C91994
	0x01C91980 ADRP X0, 0x22BC000
	0x01C91984 LDR X0, [X0 + 0x4E8]
	0x01C91988 BL 0x1B6E7F0
	0x01C9198C MOVZ W8, 0x1
	0x01C91990 STRB W8, [X24 + 0x443]
	0x01C91994 LDR X0, [X23]
	0x01C91998 LDR W8, [X0 + 0xE0]
	0x01C9199C CBNZ W8, 0x1C919A8
	0x01C919A0 BL 0x1B6E8F8
	0x01C919A4 LDR X0, [X23]
	0x01C919A8 LDR X8, [X0 + 0xB8]
	0x01C919AC LDR X8, [X8]
	0x01C919B0 CBZ X8, 0x1C91AE8
	0x01C919B4 CBZ X19, 0x1C91AE8
	0x01C919B8 LDR X21, [X8 + 0x98]
	0x01C919BC CBZ X21, 0x1C919D4
	0x01C919C0 LDR X8, [X19]
	0x01C919C4 MOV X0, X21
	0x01C919C8 LDR X1, [X8 + 0x40]
	0x01C919CC BL 0x1B6E8FC
	0x01C919D0 CBZ X0, 0x1C91AF0
	0x01C919D4 LDR W8, [X19 + 0x18]
	0x01C919D8 CBZ W8, 0x1C91AEC
	0x01C919DC STR X21, [X19 + 0x20]
	0x01C919E0 LDRB W8, [X24 + 0x443]
	0x01C919E4 CBNZ W8, 0x1C919FC
	0x01C919E8 ADRP X0, 0x22BC000
	0x01C919EC LDR X0, [X0 + 0x4E8]
	0x01C919F0 BL 0x1B6E7F0
	0x01C919F4 MOVZ W8, 0x1
	0x01C919F8 STRB W8, [X24 + 0x443]
	0x01C919FC LDR X0, [X23]
	0x01C91A00 LDR W8, [X0 + 0xE0]
	0x01C91A04 CBNZ W8, 0x1C91A10
	0x01C91A08 BL 0x1B6E8F8
	0x01C91A0C LDR X0, [X23]
	0x01C91A10 LDR X8, [X0 + 0xB8]
	0x01C91A14 LDR X8, [X8]
	0x01C91A18 CBZ X8, 0x1C91AE8
	0x01C91A1C LDR X8, [X8 + 0xA8]
	0x01C91A20 CBZ X8, 0x1C91AE8
	0x01C91A24 LDR X21, [X8 + 0x50]
	0x01C91A28 CBZ X21, 0x1C91A40
	0x01C91A2C LDR X8, [X19]
	0x01C91A30 MOV X0, X21
	0x01C91A34 LDR X1, [X8 + 0x40]
	0x01C91A38 BL 0x1B6E8FC
	0x01C91A3C CBZ X0, 0x1C91AF0
	0x01C91A40 LDR W8, [X19 + 0x18]
	0x01C91A44 CMP W8, 0x1
	0x01C91A48 B.LS 0x1C91AEC
	0x01C91A4C STR X21, [X19 + 0x28]
	0x01C91A50 LDRB W8, [X24 + 0x443]
	0x01C91A54 CBNZ W8, 0x1C91A6C
	0x01C91A58 ADRP X0, 0x22BC000
	0x01C91A5C LDR X0, [X0 + 0x4E8]
	0x01C91A60 BL 0x1B6E7F0
	0x01C91A64 MOVZ W8, 0x1
	0x01C91A68 STRB W8, [X24 + 0x443]
	0x01C91A6C LDR X0, [X23]
	0x01C91A70 LDR W8, [X0 + 0xE0]
	0x01C91A74 CBNZ W8, 0x1C91A80
	0x01C91A78 BL 0x1B6E8F8
	0x01C91A7C LDR X0, [X23]
	0x01C91A80 LDR X8, [X0 + 0xB8]
	0x01C91A84 LDR X8, [X8]
	0x01C91A88 CBZ X8, 0x1C91AE8
	0x01C91A8C LDR X8, [X8 + 0xB0]
	0x01C91A90 CBZ X8, 0x1C91AE8
	0x01C91A94 LDR X21, [X8 + 0x50]
	0x01C91A98 CBZ X21, 0x1C91AB0
	0x01C91A9C LDR X8, [X19]
	0x01C91AA0 MOV X0, X21
	0x01C91AA4 LDR X1, [X8 + 0x40]
	0x01C91AA8 BL 0x1B6E8FC
	0x01C91AAC CBZ X0, 0x1C91AF0
	0x01C91AB0 LDR W8, [X19 + 0x18]
	0x01C91AB4 CMP W8, 0x2
	0x01C91AB8 B.LS 0x1C91AEC
	0x01C91ABC MOV X0, X20
	0x01C91AC0 MOV X1, X19
	0x01C91AC4 STR X21, [X19 + 0x30]
	0x01C91AC8 BL 0x1C8CFDC
	0x01C91ACC LDP X20, X19, [X31 + 0x50]
	0x01C91AD0 LDP X22, X21, [X31 + 0x40]
	0x01C91AD4 LDP X24, X23, [X31 + 0x30]
	0x01C91AD8 LDP X26, X25, [X31 + 0x20]
	0x01C91ADC LDP X30, X27, [X31 + 0x10]
	0x01C91AE0 ADD X31, X31, 0x60
	0x01C91AE4 RET
	0x01C91AE8 BL 0x1B6EA1C
	0x01C91AEC BL 0x1B6EA24
	0x01C91AF0 BL 0x1B6EA40
	0x01C91AF4 MOV X1, X31
	0x01C91AF8 BL 0x1B6E8E8
	0x01C91AFC SUB X31, X31, 0x30
	0x01C91B00 STP X30, X21, [X31 + 0x10]
	0x01C91B04 STP X20, X19, [X31 + 0x20]
	0x01C91B08 ADRP X21, 0x2592000
	0x01C91B0C LDRB W8, [X21 + 0x3C2]
	0x01C91B10 MOV X19, X2
	0x01C91B14 MOV X20, X1
	0x01C91B18 TBNZ X8, 0x0, 0x1C91B48
	0x01C91B1C ADRP X0, 0x22BC000
	0x01C91B20 LDR X0, [X0 + 0xCB0]
	0x01C91B24 BL 0x1B6E7F0
	0x01C91B28 ADRP X0, 0x22BC000
	0x01C91B2C LDR X0, [X0 + 0xCB8]
	0x01C91B30 BL 0x1B6E7F0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2593000
	008 Move W8, [X20+945]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {43}
	014 Move X0, 0x22BD000
	015 Move X0, [X0+2992]
	016 Call 0x1B6F7F0
	017 Move X0, 0x22BD000
	018 Move X0, [X0+2048]
	019 Call 0x1B6F7F0
	020 Move X0, 0x22BD000
	021 Move X0, [X0+3000]
	022 Call 0x1B6F7F0
	023 Move X0, 0x22BD000
	024 Move X0, [X0+3008]
	025 Call 0x1B6F7F0
	026 Move X0, 0x22BD000
	027 Move X0, [X0+1952]
	028 Call 0x1B6F7F0
	029 Move X0, 0x22BD000
	030 Move X0, [X0+3016]
	031 Call 0x1B6F7F0
	032 Move X0, 0x22BD000
	033 Move X0, [X0+3024]
	034 Call 0x1B6F7F0
	035 Move X0, 0x22BD000
	036 Move X0, [X0+3032]
	037 Call 0x1B6F7F0
	038 Move X0, 0x22BD000
	039 Move X0, [X0+3040]
	040 Call 0x1B6F7F0
	041 Move W8, 1
	042 Move [X20+945], W8
	043 Move X8, [X19+112]
	044 Compare X8, 0
	045 JumpIfEqual {149}
	046 Move X23, 0x22BD000
	047 Move X8, [X8+80]
	048 Move X23, [X23+1952]
	049 Compare X8, 0
	050 JumpIfEqual {136}
	051 Move X8, 0x22BD000
	052 Move X8, [X8+3008]
	053 Move X0, [X19+104]
	054 Move X20, 0x22BD000
	055 Move X1, [X8]
	056 Move X20, [X20+2992]
	057 Call StatePrimitive`1<Int32Enum>.op_Implicit, X0
	058 Move X8, [X20]
	059 Move W20, W0
	060 Move W9, [X8+224]
	061 Compare W9, 0
	062 JumpIfNotEqual {65}
	063 Move X0, X8
	064 Call 0x1B6F8F8
	065 Move W0, W20
	066 Move X1, X31
	067 Call APIHelper.ToAPIPlatform, X0
	068 Compare X0, 0
	069 JumpIfEqual {149}
	070 Move X8, [X0]
	071 Move X21, 0x22BD000
	072 Move X9, [X8+360]
	073 Move X1, [X8+368]
	074 Move X21, [X21+3016]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move X8, [X21]
	077 Move X20, [X19+128]
	078 Move X22, X0
	079 Move W1, 6
	080 Move X0, X8
	081 Call 0x1B6F868
	082 Compare X0, 0
	083 JumpIfEqual {149}
	084 Move W8, [X0+24]
	085 Move X21, X0
	086 Compare W8, 0
	087 JumpIfEqual {150}
	088 Move X8, 0x22BD000
	089 Move X8, [X8+2048]
	090 Move [X21+32], X22
	091 Move X0, [X8]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1B6F8F8
	096 Move X0, X31
	097 Call Application.get_isEditor
	098 Move W8, [X21+24]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X9, 0x22BD000
	101 Move X9, [X9+3040]
	102 And W31, W0, 1
	103 Move X9, [X9]
	104 NotImplemented "Instruction CSEL not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move [X21+40], X9
	107 Move X9, 0x22BD000
	108 Move X9, [X9+3024]
	109 Move X9, [X9]
	110 Move [X21+48], X9
	111 Move X9, [X19+112]
	112 Compare X9, 0
	113 JumpIfEqual {149}
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X9, [X9+80]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move [X21+56], X9
	118 Move X9, 0x22BD000
	119 Move X9, [X9+3032]
	120 Move X9, [X9]
	121 Move [X21+64], X9
	122 Move X9, [X19+120]
	123 Compare X9, 0
	124 JumpIfEqual {149}
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X8, [X9+80]
	127 Move X0, X21
	128 Move X1, X31
	129 Move [X21+72], X8
	130 Call String.Concat, X0
	131 Compare X20, 0
	132 JumpIfEqual {149}
	133 Move X2, [X23]
	134 Move X1, X0
	135 Move X0, X20
	136 Move X0, [X19+128]
	137 Compare X0, 0
	138 JumpIfEqual {149}
	139 Move X2, [X23]
	140 Move X1, X31
	141 Move X20, [X31+32]
	142 Move X19, [X31+40]
	143 Move X22, [X31+16]
	144 Move X21, [X31+24]
	145 Move X30, [X31+48]
	146 Move X23, [X31+56]
	147 Call StatePrimitive`1<Object>.set_value, X0, X1
	148 Return 
	149 Call 0x1B6FA1C
	150 Call 0x1B6FA24

