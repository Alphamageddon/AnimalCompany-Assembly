Type: AnimalCompany.JetpackHandy/<JetpackAnimationCoroutine>d__27

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01DA0A6C FMUL S1, S9, S1
	0x01DA0A70 MOV X0, X31
	0x01DA0A74 FADD V10.2S, V0.2S, V3.2S
	0x01DA0A78 FADD S11, S2, S1
	0x01DA0A7C BL 0x3C3C714
	0x01DA0A80 LDR X0, [X19 + 0x90]
	0x00000000 INVALID
	0x01DA0A88 FMUL S0, S0, S11
	0x01DA0A8C FADD V1.2S, V8.2S, V1.2S
	0x01DA0A90 FADD S0, S9, S0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01DA0C7C MOV V9.16B, V14.16B

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01DA0C80 FDIV S5, S14, S0
	0x01DA0C84 B 0x1DA0CC4
	0x01DA0C88 ADRP X24, 0x2638000
	0x01DA0C8C LDRB W8, [X24 + 0x783]
	0x01DA0C90 CBNZ W8, 0x1DA0CA8
	0x01DA0C94 ADRP X0, 0x2353000
	0x01DA0C98 LDR X0, [X0 + 0x5A0]
	0x01DA0C9C BL 0x1C16CF4
	0x01DA0CA0 MOVZ W8, 0x1
	0x01DA0CA4 STRB W8, [X24 + 0x783]
	0x01DA0CA8 ADRP X8, 0x2353000
	0x01DA0CAC LDR X8, [X8 + 0x5A0]
	0x01DA0CB0 MOV V9.16B, V14.16B
	0x01DA0CB4 LDR X8, [X8]
	0x01DA0CB8 LDR X8, [X8 + 0xB8]
	0x01DA0CBC LDP S3, S4, [X8]
	0x01DA0CC0 LDR V5, [X8 + 0x8]
	0x01DA0CC4 MOV V0.16B, V11.16B
	0x01DA0CC8 MOV V1.16B, V12.16B
	0x01DA0CCC MOV V2.16B, V13.16B
	0x01DA0CD0 MOV X0, X31
	0x01DA0CD4 BL 0x3C2A1AC
	0x01DA0CD8 LDR X0, [X19 + 0x90]
	0x01DA0CDC CBZ X0, 0x1DA0F88
	0x01DA0CE0 MOV X1, X31
	0x01DA0CE4 MOV V11.16B, V0.16B
	0x01DA0CE8 MOV V12.16B, V1.16B
	0x01DA0CEC MOV V13.16B, V2.16B
	0x01DA0CF0 MOV V14.16B, V3.16B
	0x01DA0CF4 BL 0x3C3F8B8
	0x01DA0CF8 LDR V4, [X31 + 0x20]
	0x01DA0CFC LDR V5, [X31 + 0x10]
	0x01DA0D00 MOV V0.16B, V11.16B
	0x01DA0D04 MOV V1.16B, V12.16B
	0x01DA0D08 MOV V2.16B, V13.16B
	0x01DA0D0C MOV V3.16B, V14.16B
	0x01DA0D10 MOV V6.16B, V8.16B
	0x01DA0D14 MOV X0, X31
	0x01DA0D18 BL 0x3C2A9FC
	0x01DA0D1C MOV V8.16B, V2.16B
	0x01DA0D20 FMUL S2, S0, S0
	0x01DA0D24 FMUL S3, S1, S1
	0x01DA0D28 FADD S2, S2, S3
	0x01DA0D2C FMUL S3, S8, S8
	0x01DA0D30 FADD S11, S3, S2
	0x01DA0D34 FCMP S15, S11
	0x01DA0D38 B.PL 0x1DA0DA8
	0x01DA0D3C LDRB W8, [X23 + 0x785]
	0x01DA0D40 MOV V12.16B, V9.16B
	0x01DA0D44 CBNZ W8, 0x1DA0D64
	0x01DA0D48 ADRP X0, 0x2353000
	0x01DA0D4C LDR X0, [X0 + 0x5A8]
	0x01DA0D50 STP V1, V0, [X31 + 0x10]
	0x01DA0D54 BL 0x1C16CF4
	0x01DA0D58 LDP V1, V0, [X31 + 0x10]
	0x01DA0D5C MOVZ W8, 0x1
	0x01DA0D60 STRB W8, [X23 + 0x785]
	0x01DA0D64 LDR X0, [X20]
	0x01DA0D68 LDR V9, [X31 + 0x34]
	0x01DA0D6C LDR W8, [X0 + 0xE0]
	0x01DA0D70 CBNZ W8, 0x1DA0D80
	0x01DA0D74 STP V1, V0, [X31 + 0x10]
	0x01DA0D78 BL 0x1C16DFC
	0x01DA0D7C LDP V1, V0, [X31 + 0x10]
	0x01DA0D80 LDP V3, V2, [X31 + 0x40]
	0x01DA0D84 FSQRT S4, S11
	0x01DA0D88 FCMP S4, S10
	0x01DA0D8C B.LE 0x1DA0DC0
	0x01DA0D90 LDR V11, [X31 + 0x38]
	0x01DA0D94 FDIV S0, S0, S4
	0x01DA0D98 FDIV S1, S1, S4
	0x01DA0D9C FDIV S8, S8, S4
	0x01DA0DA0 MOV V0.S[1], V1.S[0]
	0x01DA0DA4 B 0x1DA0E00
	0x01DA0DA8 LDR V11, [X31 + 0x38]
	0x01DA0DAC LDP V3, V2, [X31 + 0x40]
	0x01DA0DB0 MOV V12.16B, V9.16B
	0x01DA0DB4 LDR V9, [X31 + 0x34]
	0x01DA0DB8 MOV V0.S[1], V1.S[0]
	0x01DA0DBC B 0x1DA0E54
	0x01DA0DC0 ADRP X23, 0x2638000
	0x01DA0DC4 LDRB W8, [X23 + 0x783]
	0x01DA0DC8 LDR V11, [X31 + 0x38]
	0x01DA0DCC CBNZ W8, 0x1DA0DE8
	0x01DA0DD0 ADRP X0, 0x2353000
	0x01DA0DD4 LDR X0, [X0 + 0x5A0]
	0x01DA0DD8 BL 0x1C16CF4
	0x01DA0DDC LDP V3, V2, [X31 + 0x40]
	0x01DA0DE0 MOVZ W8, 0x1
	0x01DA0DE4 STRB W8, [X23 + 0x783]
	0x01DA0DE8 ADRP X8, 0x2353000
	0x01DA0DEC LDR X8, [X8 + 0x5A0]
	0x01DA0DF0 LDR X8, [X8]
	0x01DA0DF4 LDR X8, [X8 + 0xB8]
	0x01DA0DF8 LDR V0, [X8]
	0x01DA0DFC LDR V8, [X8 + 0x8]
	0x01DA0E00 ADRP X23, 0x2638000
	0x01DA0E04 LDRB W8, [X23 + 0x784]
	0x01DA0E08 CBNZ W8, 0x1DA0E2C
	0x01DA0E0C ADRP X0, 0x2353000
	0x01DA0E10 LDR X0, [X0 + 0x5A8]
	0x01DA0E14 STR V0, [X31 + 0x2]
	0x01DA0E18 BL 0x1C16CF4
	0x01DA0E1C LDR V0, [X31 + 0x2]
	0x01DA0E20 LDP V3, V2, [X31 + 0x40]
	0x01DA0E24 MOVZ W8, 0x1
	0x01DA0E28 STRB W8, [X23 + 0x784]
	0x01DA0E2C LDR X0, [X20]
	0x01DA0E30 LDR W8, [X0 + 0xE0]
	0x01DA0E34 CBNZ W8, 0x1DA0E48
	0x01DA0E38 STR V0, [X31 + 0x2]
	0x01DA0E3C BL 0x1C16DFC
	0x01DA0E40 LDR V0, [X31 + 0x2]
	0x01DA0E44 LDP V3, V2, [X31 + 0x40]
	0x01DA0E48 LDR V1, [X31]

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x2639000
	009 Move W8, [X19+2667]
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2358000
	016 Move X0, [X0+504]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+2667], W8
	020 Move W8, [X20+16]
	021 Move X19, [X20+32]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Compare W8, 0
	024 JumpIfNotEqual {128}
	025 Move TEMP, 0
	026 Not TEMP
	027 Move W8, TEMP
	028 Move [X20+16], W8
	029 Compare X19, 0
	030 JumpIfEqual {137}
	031 Move X0, [X19+168]
	032 Compare X0, 0
	033 JumpIfEqual {137}
	034 Move X1, X31
	035 Call AudioSource.Play, X0
	036 Move W1, 1
	037 Move X0, X19
	038 Call JetpackHandy.SetJetpackFireOnOff, X0, X1
	039 Move S8, W31
	040 Move [X20+40], W31
	041 Move V8, [X20+40]
	042 Move S0, 2
	043 Move TEMP, 0
	044 Not TEMP
	045 Move W8, TEMP
	046 Move [X20+16], W8
	047 NotImplemented "Instruction FCMP not yet implemented."
	048 Move X0, X31
	049 Call Time.get_deltaTime
	050 Move X8, -19619840
	051 Move V1, [X8+3916]
	052 Add S0, S8, S0
	053 Move S2, 0.5
	054 Multiply S9, S0, S2
	055 Move [X20+40], S0
	056 Multiply S0, S9, S1
	057 Call 0x3EB2B70
	058 Move X0, X31
	059 Move V8, V0
	060 Call Time.get_time
	061 Compare X19, 0
	062 JumpIfEqual {137}
	063 Move X21, [X19+160]
	064 Compare X21, 0
	065 JumpIfEqual {137}
	066 Move X8, -19615744
	067 Move V1, [X8+644]
	068 Add S2, S8, S8
	069 Move S8, 1
	070 NotImplemented "Instruction FMIN not yet implemented."
	071 Multiply S0, S0, S1
	072 Call 0x3EB2B70
	073 Move X8, -19615744
	074 Move V1, [X8+860]
	075 Move X0, X21
	076 Move X1, X31
	077 Multiply S0, S0, S1
	078 Add S2, S0, S10
	079 Move S0, 1
	080 Move S1, 1
	081 Call Transform.set_localScale, X0, X1
	082 Move X0, [X19+168]
	083 Compare X0, 0
	084 JumpIfEqual {137}
	085 Multiply S0, S9, S9
	086 Subtract S0, S8, S0
	087 Move X1, X31
	088 Call AudioSource.set_volume, X0, V0
	089 Move W0, 1
	090 Move [X20+24], X31
	091 Move [X20+16], W0
	092 Compare X19, 0
	093 JumpIfEqual {137}
	094 Move X0, [X19+144]
	095 Compare X0, 0
	096 JumpIfEqual {137}
	097 Move X1, X31
	098 Call Renderer.get_material, X0
	099 Move X21, 0x2358000
	100 Move X21, [X21+504]
	101 Move X20, X0
	102 Move X8, [X21]
	103 Move W9, [X8+224]
	104 Compare W9, 0
	105 JumpIfNotEqual {109}
	106 Move X0, X8
	107 Call 0x1C17DFC
	108 Move X8, [X21]
	109 Compare X20, 0
	110 JumpIfEqual {137}
	111 Move X8, [X8+184]
	112 Move X0, X20
	113 Move X2, X31
	114 Move S2, [X8+48]
	115 Move S3, [X8+52]
	116 Move S0, [X8+40]
	117 Move S1, [X8+44]
	118 Move W1, [X8+4]
	119 Call Material.SetColor, X0, X1, X2
	120 Move X0, [X19+168]
	121 Compare X0, 0
	122 JumpIfEqual {137}
	123 Move X1, X31
	124 Call AudioSource.Stop, X0
	125 Move X0, X19
	126 Move W1, W31
	127 Call JetpackHandy.SetJetpackFireOnOff, X0, X1
	128 Move W0, W31
	129 Move X20, [X31+48]
	130 Move X19, [X31+56]
	131 Move X30, [X31+32]
	132 Move X21, [X31+40]
	133 Move D9, [X31+16]
	134 Move D8, [X31+24]
	135 Move V10, [X31+64]
	136 Return X0
	137 Call 0x1C17F20

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x00000000 INVALID
	0x01DA0E50 FMUL S8, S1, S8

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01DA0E54 MOV V2.S[1], V3.S[0]
	0x01DA0E58 LDR V3, [X21 + 0xFC0]
	0x01DA0E5C LDR X0, [X19 + 0x40]
	0x01DA0E60 FSUB V1.2S, V2.2S, V0.2S
	0x01DA0E64 FSUB S2, S12, S8
	0x01DA0E68 FADD V11.2S, V11.2S, V1.2S
	0x01DA0E6C FADD S1, S9, S2
	0x01DA0E70 FMAX S9, S1, S3
	0x01DA0E74 CBZ X0, 0x1DA0A28
	0x01DA0E78 LDRB W8, [X0 + 0x60]
	0x01DA0E7C TBNZ X8, 0x1, 0x1DA0A28
	0x01DA0E80 MOV X1, X31
	0x01DA0E84 BL 0x1E93668
	0x01DA0E88 TBZ X0, 0x0, 0x1DA0A28

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x2354000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2358000
	011 Move X0, [X0+552]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01DA0E8C ADRP X8, 0xFFFFFFFFFED4A000
	0x01DA0E90 LDR V8, [X8 + 0x150]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

