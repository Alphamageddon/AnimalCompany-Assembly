Type: AnimalCompany.Umbrella/<>c__DisplayClass29_0

Method: System.Void .ctor()

Disassembly:
	0x01DAB208 CBZ X0, 0x1DAB2E0
	0x01DAB20C MOV X1, X31

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <AnimateOpenClose>b__0(System.Single val)

Disassembly:
	0x01DAB210 BL 0x3C3F58C
	0x01DAB214 ADRP X8, 0x234B000
	0x01DAB218 LDR X8, [X8 + 0xB58]
	0x01DAB21C ADD X0, X31, 0x40
	0x01DAB220 STP X31, X31, [X31 + 0x40]
	0x01DAB224 LDR X1, [X8]
	0x01DAB228 BL 0x243BFEC
	0x01DAB22C LDR X0, [X21 + 0x10]
	0x01DAB230 CBZ X0, 0x1DAB2E0
	0x01DAB234 MOV X1, X31
	0x01DAB238 BL 0x3C32E90
	0x01DAB23C CBZ X0, 0x1DAB2E0
	0x01DAB240 MOV X1, X31
	0x01DAB244 BL 0x3C3DEB4
	0x01DAB248 LDR X1, [X29]
	0x01DAB24C ADD X0, X31, 0x28
	0x01DAB250 STP X31, X31, [X31 + 0x28]
	0x01DAB254 STR W31, [X31 + 0x38]
	0x01DAB258 BL 0x2437C9C
	0x01DAB25C LDR X0, [X27]
	0x01DAB260 BL 0x1C16F10
	0x01DAB264 LDR X2, [X28]
	0x01DAB268 MOV X1, X21
	0x01DAB26C MOV X3, X31
	0x01DAB270 MOV X23, X0
	0x01DAB274 BL 0x1EB1E84
	0x01DAB278 CBZ X20, 0x1DAB2E0
	0x01DAB27C LDUR V0, [X31 + 0x28]
	0x01DAB280 LDR W8, [X31 + 0x38]
	0x01DAB284 LDP X2, X3, [X31 + 0x40]
	0x01DAB288 ADD X4, X31, 0x10
	0x01DAB28C MOV X0, X20
	0x01DAB290 MOV X1, X22
	0x01DAB294 MOV X5, X31
	0x01DAB298 MOV X6, X23
	0x01DAB29C MOV W7, W31
	0x01DAB2A0 STR V0, [X31 + 0x1]
	0x01DAB2A4 STR W8, [X31 + 0x20]
	0x01DAB2A8 STR X31, [X31]
	0x01DAB2AC BL 0x1EAE6A8
	0x01DAB2B0 LDRSW X8, [X24 + 0x18]
	0x01DAB2B4 ADD X25, X25, 0x1
	0x01DAB2B8 CMP X25, X8
	0x01DAB2BC B.LT 0x1DAB1A8
	0x01DAB2C0 LDP X20, X19, [X31 + 0xA0]
	0x01DAB2C4 LDP X22, X21, [X31 + 0x90]
	0x01DAB2C8 LDP X24, X23, [X31 + 0x80]
	0x01DAB2CC LDP X26, X25, [X31 + 0x70]
	0x01DAB2D0 LDP X28, X27, [X31 + 0x60]
	0x01DAB2D4 LDP X29, X30, [X31 + 0x50]
	0x01DAB2D8 ADD X31, X31, 0xB0
	0x01DAB2DC RET
	0x01DAB2E0 BL 0x1C16F20
	0x01DAB2E4 BL 0x1C16F28
	0x01DAB2E8 MOV X1, X31
	0x01DAB2EC B 0x33BDD8C
	0x01DAB2F0 MOV X1, X31
	0x01DAB2F4 B 0x1E74F04
	0x01DAB2F8 RET
	0x01DAB2FC RET
	0x01DAB300 STP X30, X21, [X31 - 0x20]!
	0x01DAB304 STP X20, X19, [X31 + 0x10]
	0x01DAB308 ADRP X21, 0x262D000
	0x01DAB30C LDRB W8, [X21 + 0xACF]
	0x01DAB310 MOV X20, X2
	0x01DAB314 MOV X19, X0
	0x01DAB318 TBNZ X8, 0x0, 0x1DAB330
	0x01DAB31C ADRP X0, 0x234C000
	0x01DAB320 LDR X0, [X0 + 0x6A8]
	0x01DAB324 BL 0x1C16CF4
	0x01DAB328 MOVZ W8, 0x1
	0x01DAB32C STRB W8, [X21 + 0xACF]
	0x01DAB330 CBZ X20, 0x1DAB388
	0x01DAB334 ADRP X8, 0x234C000
	0x01DAB338 LDR X8, [X8 + 0x6A8]
	0x01DAB33C LDR X21, [X8]
	0x01DAB340 LDR X8, [X21 + 0x38]
	0x01DAB344 CBNZ X8, 0x1DAB350
	0x01DAB348 MOV X0, X21
	0x01DAB34C BL 0x1C5C6E0
	0x01DAB350 MOV X0, X20
	0x01DAB354 MOV X1, X31
	0x01DAB358 BL 0x3C32ECC
	0x01DAB35C CBZ X0, 0x1DAB388
	0x01DAB360 LDR X8, [X21 + 0x38]
	0x01DAB364 LDR X1, [X8]
	0x01DAB368 BL 0x21E5548
	0x01DAB36C LDR X8, [X19 + 0x10]
	0x01DAB370 CBZ X8, 0x1DAB388
	0x01DAB374 CBZ X0, 0x1DAB388
	0x01DAB378 LDRH W1, [X8 + 0x44]
	0x01DAB37C LDP X20, X19, [X31 + 0x10]
	0x01DAB380 LDP X30, X21, [X31], #0x20
	0x01DAB384 B 0x1DAB3F8
	0x01DAB388 BL 0x1C16F20
	0x01DAB38C B 0x1DAB3F8
	0x01DAB390 MOV X1, X31
	0x01DAB394 B 0x33BDD8C
	0x01DAB398 STP X30, X19, [X31 - 0x10]!
	0x01DAB39C LDR X8, [X0 + 0x50]
	0x01DAB3A0 CBZ X8, 0x1DAB3B0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], D10
	003 Move [X31+32], D9
	004 Move [X31+40], D8
	005 Move [X31+48], X30
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X20, 0x262E000
	010 Move W8, [X20+2753]
	011 Move V8, V0
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x2349000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2753], W8
	022 Move X8, [X19+16]
	023 Compare X8, 0
	024 JumpIfEqual {125}
	025 Move X9, 0x2349000
	026 Move X9, [X9+1432]
	027 Move X20, [X8+136]
	028 Move X0, [X9]
	029 Move W9, [X0+224]
	030 Compare W9, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X20
	034 Move X1, X31
	035 Move X2, X31
	036 Call Object.op_Equality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {50}
	041 Move X20, [X31+64]
	042 Move X19, [X31+72]
	043 Move X30, [X31+48]
	044 Move X21, [X31+56]
	045 Move D9, [X31+32]
	046 Move D8, [X31+40]
	047 Move V10, [X31+16]
	048 Add X31, X31, 80
	049 Return 
	050 Move X8, [X19+16]
	051 Compare X8, 0
	052 JumpIfEqual {125}
	053 Move X0, [X8+136]
	054 Move S0, 1
	055 NotImplemented "Instruction FMIN not yet implemented."
	056 NotImplemented "Instruction FCMP not yet implemented."
	057 Move S1, W31
	058 NotImplemented "Instruction FCSEL not yet implemented."
	059 Compare X0, 0
	060 JumpIfEqual {125}
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 Move V3, [X8+224]
	063 Move V1, [X8+244]
	064 Move V2, [X8+232]
	065 Move X1, X31
	066 Subtract V3, V3, V0
	067 NotImplemented "Instruction INVALID not yet implemented."
	068 Subtract S2, S2, S1
	069 Multiply S2, S4, S2
	070 Add V0, V0, V3
	071 Add S2, S1, S2
	072 Move S1, V0.S[1]
	073 Move [X31], V4
	074 Call Transform.set_localPosition, X0, X1
	075 Move X8, [X19+16]
	076 Compare X8, 0
	077 JumpIfEqual {125}
	078 Move X21, 0x262E000
	079 Move X20, [X8+136]
	080 Move V9, [X8+248]
	081 Move W9, [X21+2139]
	082 Move V10, [X8+256]
	083 Compare W9, 0
	084 JumpIfNotEqual {90}
	085 Move X0, 0x2349000
	086 Move X0, [X0+1440]
	087 Call 0x1C17CF4
	088 Move W8, 1
	089 Move [X21+2139], W8
	090 Compare X20, 0
	091 JumpIfEqual {125}
	092 Move X8, 0x2349000
	093 Move X8, [X8+1440]
	094 Move V3, [X31]
	095 Move X0, X20
	096 Move X1, X31
	097 Move X8, [X8]
	098 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	099 Move X8, [X8+184]
	100 Move V0, [X8+20]
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 Subtract S0, S0, S10
	103 Subtract V1, V1, V9
	104 Multiply S0, S3, S0
	105 NotImplemented "Instruction INVALID not yet implemented."
	106 Add S2, S10, S0
	107 Add V0, V9, V1
	108 Move S1, V0.S[1]
	109 Call Transform.set_localScale, X0, X1
	110 Move X0, [X19+16]
	111 Compare X0, 0
	112 JumpIfEqual {125}
	113 Move [X0+220], S8
	114 Move X20, [X31+64]
	115 Move X19, [X31+72]
	116 Move X30, [X31+48]
	117 Move X21, [X31+56]
	118 Move D9, [X31+32]
	119 Move D8, [X31+40]
	120 Move V10, [X31+16]
	121 Move X1, X31
	122 Add X31, X31, 80
	123 Call Umbrella.UpdateOpenedAmount, X0
	124 Return 
	125 Call 0x1C17F20

Method: System.Void <AnimateOpenClose>b__1()

Disassembly:
	0x01DAB3A4 LDRH W0, [X8]
	0x01DAB3A8 LDP X30, X19, [X31], #0x10
	0x01DAB3AC RET
	0x01DAB3B0 ADRP X0, 0x2348000
	0x01DAB3B4 LDR X0, [X0 + 0x5B0]
	0x01DAB3B8 BL 0x1C16D08
	0x01DAB3BC BL 0x1C16F10
	0x01DAB3C0 MOV X19, X0
	0x01DAB3C4 ADRP X0, 0x234C000
	0x01DAB3C8 LDR X0, [X0 + 0x6B0]
	0x01DAB3CC BL 0x1C16D08
	0x01DAB3D0 MOV X1, X0
	0x01DAB3D4 MOV X0, X19
	0x01DAB3D8 MOV X2, X31
	0x01DAB3DC BL 0x337DF1C
	0x01DAB3E0 ADRP X0, 0x234C000
	0x01DAB3E4 LDR X0, [X0 + 0x6B8]
	0x01DAB3E8 BL 0x1C16D08
	0x01DAB3EC MOV X1, X0
	0x01DAB3F0 MOV X0, X19
	0x01DAB3F4 BL 0x1C16DEC
	0x01DAB3F8 STP X30, X19, [X31 - 0x10]!
	0x01DAB3FC LDR X8, [X0 + 0x50]
	0x01DAB400 CBZ X8, 0x1DAB410
	0x01DAB404 STRH W1, [X8]
	0x01DAB408 LDP X30, X19, [X31], #0x10
	0x01DAB40C RET
	0x01DAB410 ADRP X0, 0x2348000
	0x01DAB414 LDR X0, [X0 + 0x5B0]
	0x01DAB418 BL 0x1C16D08
	0x01DAB41C BL 0x1C16F10
	0x01DAB420 MOV X19, X0
	0x01DAB424 ADRP X0, 0x234C000
	0x01DAB428 LDR X0, [X0 + 0x6B0]
	0x01DAB42C BL 0x1C16D08
	0x01DAB430 MOV X1, X0
	0x01DAB434 MOV X0, X19
	0x01DAB438 MOV X2, X31
	0x01DAB43C BL 0x337DF1C
	0x01DAB440 ADRP X0, 0x234C000
	0x01DAB444 LDR X0, [X0 + 0x6C0]
	0x01DAB448 BL 0x1C16D08
	0x01DAB44C MOV X1, X0
	0x01DAB450 MOV X0, X19
	0x01DAB454 BL 0x1C16DEC
	0x01DAB458 STP X30, X21, [X31 - 0x20]!
	0x01DAB45C STP X20, X19, [X31 + 0x10]
	0x01DAB460 ADRP X21, 0x262D000
	0x01DAB464 LDRB W9, [X21 + 0xAD0]
	0x01DAB468 MOV X20, X0
	0x01DAB46C MOV X19, X8
	0x01DAB470 TBNZ X9, 0x0, 0x1DAB488
	0x01DAB474 ADRP X0, 0x234C000
	0x01DAB478 LDR X0, [X0 + 0x6C8]
	0x01DAB47C BL 0x1C16CF4
	0x01DAB480 MOVZ W8, 0x1
	0x01DAB484 STRB W8, [X21 + 0xAD0]
	0x01DAB488 LDR X20, [X20 + 0x50]
	0x01DAB48C CBZ X20, 0x1DAB4C8
	0x01DAB490 ADRP X21, 0x234C000
	0x01DAB494 LDR X21, [X21 + 0x6C8]
	0x01DAB498 MOV X0, X31
	0x01DAB49C BL 0x1D794A8
	0x01DAB4A0 MOV X3, X0
	0x01DAB4A4 STP X31, X31, [X19 + 0x8]
	0x01DAB4A8 LDR X4, [X21]
	0x01DAB4AC ADD X1, X20, 0x4
	0x01DAB4B0 STR X31, [X19]
	0x01DAB4B4 MOV X0, X19
	0x01DAB4B8 LDP X20, X19, [X31 + 0x10]
	0x01DAB4BC MOVZ W2, 0x40
	0x01DAB4C0 LDP X30, X21, [X31], #0x20
	0x01DAB4C4 B 0x240D914
	0x01DAB4C8 ADRP X0, 0x2348000
	0x01DAB4CC LDR X0, [X0 + 0x5B0]
	0x01DAB4D0 BL 0x1C16D08
	0x01DAB4D4 BL 0x1C16F10
	0x01DAB4D8 MOV X19, X0
	0x01DAB4DC ADRP X0, 0x234C000
	0x01DAB4E0 LDR X0, [X0 + 0x6D0]
	0x01DAB4E4 BL 0x1C16D08
	0x01DAB4E8 MOV X1, X0
	0x01DAB4EC MOV X0, X19
	0x01DAB4F0 MOV X2, X31
	0x01DAB4F4 BL 0x337DF1C
	0x01DAB4F8 ADRP X0, 0x234C000
	0x01DAB4FC LDR X0, [X0 + 0x6D8]
	0x01DAB500 BL 0x1C16D08
	0x01DAB504 MOV X1, X0
	0x01DAB508 MOV X0, X19
	0x01DAB50C BL 0x1C16DEC
	0x01DAB510 STP X30, X19, [X31 - 0x10]!
	0x01DAB514 LDR X8, [X0 + 0x50]
	0x01DAB518 CBZ X8, 0x1DAB528
	0x01DAB51C LDR W0, [X8 + 0x304]
	0x01DAB520 LDP X30, X19, [X31], #0x10
	0x01DAB524 RET
	0x01DAB528 ADRP X0, 0x2348000
	0x01DAB52C LDR X0, [X0 + 0x5B0]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x262E000
	008 Move W8, [X20+2754]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2349000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2754], W8
	019 Move X8, [X19+16]
	020 Compare X8, 0
	021 JumpIfEqual {123}
	022 Move X9, 0x2349000
	023 Move X9, [X9+1432]
	024 Move X20, [X8+136]
	025 Move X0, [X9]
	026 Move W9, [X0+224]
	027 Compare W9, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X20
	031 Move X1, X31
	032 Move X2, X31
	033 Call Object.op_Equality, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {45}
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X30, [X31+16]
	041 Move X21, [X31+24]
	042 Move D9, [X31+48]
	043 Move D8, [X31+56]
	044 Return 
	045 Move X8, [X19+16]
	046 Compare X8, 0
	047 JumpIfEqual {123}
	048 Move V0, [X19+24]
	049 Move X0, [X8+136]
	050 Move S1, 1
	051 NotImplemented "Instruction FMIN not yet implemented."
	052 NotImplemented "Instruction FCMP not yet implemented."
	053 Move S0, W31
	054 NotImplemented "Instruction FCSEL not yet implemented."
	055 Compare X0, 0
	056 JumpIfEqual {123}
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 Move V2, [X8+244]
	059 Move V3, [X8+232]
	060 Move V4, [X8+224]
	061 Move X1, X31
	062 Subtract S3, S3, S2
	063 Subtract V4, V4, V1
	064 Multiply S3, S0, S3
	065 NotImplemented "Instruction INVALID not yet implemented."
	066 Add V0, V1, V0
	067 Add S2, S2, S3
	068 Move S1, V0.S[1]
	069 Call Transform.set_localPosition, X0, X1
	070 Move X8, [X19+16]
	071 Compare X8, 0
	072 JumpIfEqual {123}
	073 Move X21, 0x262E000
	074 Move X20, [X8+136]
	075 Move V8, [X8+248]
	076 Move W9, [X21+2139]
	077 Move V9, [X8+256]
	078 Compare W9, 0
	079 JumpIfNotEqual {85}
	080 Move X0, 0x2349000
	081 Move X0, [X0+1440]
	082 Call 0x1C17CF4
	083 Move W8, 1
	084 Move [X21+2139], W8
	085 Move V0, [X19+24]
	086 Move S1, 1
	087 NotImplemented "Instruction FMIN not yet implemented."
	088 NotImplemented "Instruction FCMP not yet implemented."
	089 Move S0, W31
	090 NotImplemented "Instruction FCSEL not yet implemented."
	091 Compare X20, 0
	092 JumpIfEqual {123}
	093 Move X8, 0x2349000
	094 Move X8, [X8+1440]
	095 Move X0, X20
	096 Move X1, X31
	097 Move X8, [X8]
	098 Move X8, [X8+184]
	099 Move V1, [X8+20]
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 Subtract S1, S1, S9
	102 Subtract V2, V2, V8
	103 Multiply S1, S0, S1
	104 NotImplemented "Instruction INVALID not yet implemented."
	105 Add V0, V8, V0
	106 Add S2, S9, S1
	107 Move S1, V0.S[1]
	108 Call Transform.set_localScale, X0, X1
	109 Move X0, [X19+16]
	110 Compare X0, 0
	111 JumpIfEqual {123}
	112 Move V0, [X19+24]
	113 Move X20, [X31+32]
	114 Move X19, [X31+40]
	115 Move X30, [X31+16]
	116 Move X21, [X31+24]
	117 Move X1, X31
	118 Move [X0+220], S0
	119 Move D9, [X31+48]
	120 Move D8, [X31+56]
	121 Call Umbrella.UpdateOpenedAmount, X0
	122 Return 
	123 Call 0x1C17F20

