Type: AnimalCompany.BodyPartCullDebug

Method: System.Void Awake()

Disassembly:
	0x01D5483C LDR W8, [X0 + 0xE0]
	0x01D54840 CBNZ W8, 0x1D5484C
	0x01D54844 BL 0x1C16DFC
	0x01D54848 LDR X0, [X23]
	0x01D5484C LDR X8, [X0 + 0xB8]
	0x01D54850 LDR X8, [X8]
	0x01D54854 CBZ X8, 0x1D54C28
	0x01D54858 LDR X8, [X8 + 0xE0]
	0x01D5485C CBZ X8, 0x1D54C28
	0x01D54860 LDR X22, [X8 + 0x68]
	0x01D54864 CBZ X22, 0x1D5487C
	0x01D54868 LDR X8, [X21]
	0x01D5486C MOV X0, X22
	0x01D54870 LDR X1, [X8 + 0x40]
	0x01D54874 BL 0x1C16E00
	0x01D54878 CBZ X0, 0x1D54C30
	0x01D5487C LDR W8, [X21 + 0x18]
	0x01D54880 CMP W8, 0x3
	0x01D54884 B.LS 0x1D54C2C
	0x01D54888 STR X22, [X21 + 0x38]
	0x01D5488C LDRB W8, [X24 + 0x787]
	0x01D54890 CBNZ W8, 0x1D548A8
	0x01D54894 ADRP X0, 0x239F000
	0x01D54898 LDR X0, [X0 + 0x648]
	0x01D5489C BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, [X0+40]
	005 Compare X19, 0
	006 JumpIfEqual {26}
	007 Move W8, [X19+24]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W20, W31
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Add X8, X19, W20
	012 Move X0, [X8+32]
	013 Compare X0, 0
	014 JumpIfEqual {26}
	015 Move X1, X31
	016 Move X2, X31
	017 Call SkinnedMeshRenderer.set_sharedMesh, X0, X1
	018 Move W8, [X19+24]
	019 Add W20, W20, 1
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return 
	025 Call 0x1C17F28
	026 Call 0x1C17F20

Method: System.Void OnEnable()

Disassembly:
	0x01D548A0 MOVZ W8, 0x1
	0x01D548A4 STRB W8, [X24 + 0x787]
	0x01D548A8 LDR X0, [X23]
	0x01D548AC LDR W8, [X0 + 0xE0]
	0x01D548B0 CBNZ W8, 0x1D548BC
	0x01D548B4 BL 0x1C16DFC
	0x01D548B8 LDR X0, [X23]
	0x01D548BC LDR X8, [X0 + 0xB8]
	0x01D548C0 LDR X8, [X8]
	0x01D548C4 CBZ X8, 0x1D54C28
	0x01D548C8 LDR X8, [X8 + 0xE0]
	0x01D548CC CBZ X8, 0x1D54C28
	0x01D548D0 LDR X22, [X8 + 0x58]
	0x01D548D4 CBZ X22, 0x1D548EC
	0x01D548D8 LDR X8, [X21]
	0x01D548DC MOV X0, X22
	0x01D548E0 LDR X1, [X8 + 0x40]
	0x01D548E4 BL 0x1C16E00
	0x01D548E8 CBZ X0, 0x1D54C30
	0x01D548EC LDR W8, [X21 + 0x18]
	0x01D548F0 CMP W8, 0x4
	0x01D548F4 B.LS 0x1D54C2C
	0x01D548F8 ADRP X27, 0x23A0000
	0x01D548FC LDR X27, [X27 + 0xEA8]
	0x01D54900 MOV X0, X20
	0x01D54904 MOV X1, X21
	0x01D54908 MOV X2, X31
	0x01D5490C STR X22, [X21 + 0x40]
	0x01D54910 BL 0x1D363F0
	0x01D54914 LDR X0, [X26]
	0x01D54918 BL 0x1C16F10
	0x01D5491C LDR X2, [X27]
	0x01D54920 MOV X1, X19
	0x01D54924 MOV X3, X31
	0x01D54928 MOV X20, X0
	0x01D5492C BL 0x35C52F0
	0x01D54930 LDR X0, [X25]
	0x01D54934 MOVZ W1, 0x1
	0x01D54938 MOVZ W22, 0x1
	0x01D5493C BL 0x1C16D6C
	0x01D54940 LDRB W8, [X24 + 0x787]
	0x01D54944 MOV X21, X0
	0x01D54948 CBNZ W8, 0x1D5495C
	0x01D5494C ADRP X0, 0x239F000
	0x01D54950 LDR X0, [X0 + 0x648]
	0x01D54954 BL 0x1C16CF4
	0x01D54958 STRB W22, [X24 + 0x787]
	0x01D5495C LDR X0, [X23]
	0x01D54960 LDR W8, [X0 + 0xE0]
	0x01D54964 CBNZ W8, 0x1D54970
	0x01D54968 BL 0x1C16DFC
	0x01D5496C LDR X0, [X23]
	0x01D54970 LDR X8, [X0 + 0xB8]
	0x01D54974 LDR X8, [X8]
	0x01D54978 CBZ X8, 0x1D54C28
	0x01D5497C CBZ X21, 0x1D54C28
	0x01D54980 LDR X22, [X8 + 0xB0]
	0x01D54984 CBZ X22, 0x1D5499C
	0x01D54988 LDR X8, [X21]
	0x01D5498C MOV X0, X22
	0x01D54990 LDR X1, [X8 + 0x40]
	0x01D54994 BL 0x1C16E00
	0x01D54998 CBZ X0, 0x1D54C30
	0x01D5499C LDR W8, [X21 + 0x18]
	0x01D549A0 CBZ W8, 0x1D54C2C
	0x01D549A4 MOV X0, X20
	0x01D549A8 MOV X1, X21
	0x01D549AC MOV X2, X31
	0x01D549B0 STR X22, [X21 + 0x20]
	0x01D549B4 BL 0x1D363F0
	0x01D549B8 LDR X23, [X19 + 0x20]
	0x01D549BC CBZ X23, 0x1D54C28
	0x01D549C0 ADRP X22, 0x23A0000
	0x01D549C4 LDR X22, [X22 + 0xE68]
	0x01D549C8 ADRP X21, 0x23A0000
	0x01D549CC LDR X20, [X23 + 0xF0]
	0x01D549D0 LDR X0, [X22]
	0x01D549D4 LDR X21, [X21 + 0xE80]
	0x01D549D8 BL 0x1C16F10
	0x01D549DC LDR X2, [X21]
	0x01D549E0 MOV X1, X19
	0x01D549E4 MOV X3, X31
	0x01D549E8 MOV X21, X0
	0x01D549EC BL 0x2A6B948
	0x01D549F0 MOV X0, X20
	0x01D549F4 MOV X1, X21
	0x01D549F8 MOV X2, X31
	0x01D549FC BL 0x33C0DE4
	0x01D54A00 CBZ X0, 0x1D54A34
	0x01D54A04 LDR X21, [X22]
	0x01D54A08 MOV X20, X0
	0x01D54A0C MOV X1, X21
	0x01D54A10 BL 0x1C16E00
	0x01D54A14 CBZ X0, 0x1D54B20
	0x01D54A18 STR X0, [X23 + 0xF0]
	0x01D54A1C LDR X21, [X22]
	0x01D54A20 MOV X0, X20
	0x01D54A24 MOV X1, X21
	0x01D54A28 BL 0x1C16E00
	0x01D54A2C CBNZ X0, 0x1D54A38
	0x01D54A30 B 0x1D54B20
	0x01D54A34 STR X31, [X23 + 0xF0]
	0x01D54A38 LDR X23, [X19 + 0x20]
	0x01D54A3C CBZ X23, 0x1D54C28
	0x01D54A40 LDR X0, [X22]
	0x01D54A44 ADRP X21, 0x23A0000
	0x01D54A48 LDR X20, [X23 + 0xF8]
	0x01D54A4C LDR X21, [X21 + 0xE78]
	0x01D54A50 BL 0x1C16F10
	0x01D54A54 LDR X2, [X21]
	0x01D54A58 MOV X1, X19
	0x01D54A5C MOV X3, X31
	0x01D54A60 MOV X21, X0
	0x01D54A64 BL 0x2A6B948
	0x01D54A68 MOV X0, X20
	0x01D54A6C MOV X1, X21
	0x01D54A70 MOV X2, X31
	0x01D54A74 BL 0x33C0DE4
	0x01D54A78 CBZ X0, 0x1D54AAC
	0x01D54A7C LDR X21, [X22]
	0x01D54A80 MOV X20, X0
	0x01D54A84 MOV X1, X21
	0x01D54A88 BL 0x1C16E00
	0x01D54A8C CBZ X0, 0x1D54B20
	0x01D54A90 STR X0, [X23 + 0xF8]
	0x01D54A94 LDR X21, [X22]
	0x01D54A98 MOV X0, X20
	0x01D54A9C MOV X1, X21
	0x01D54AA0 BL 0x1C16E00
	0x01D54AA4 CBNZ X0, 0x1D54AB0
	0x01D54AA8 B 0x1D54B20
	0x01D54AAC STR X31, [X23 + 0xF8]
	0x01D54AB0 LDR X23, [X19 + 0x20]
	0x01D54AB4 CBZ X23, 0x1D54C28
	0x01D54AB8 LDR X0, [X22]
	0x01D54ABC ADRP X21, 0x23A0000
	0x01D54AC0 LDR X20, [X23 + 0x100]
	0x01D54AC4 LDR X21, [X21 + 0xEA0]
	0x01D54AC8 BL 0x1C16F10
	0x01D54ACC LDR X2, [X21]
	0x01D54AD0 MOV X1, X19
	0x01D54AD4 MOV X3, X31
	0x01D54AD8 MOV X21, X0
	0x01D54ADC BL 0x2A6B948
	0x01D54AE0 MOV X0, X20
	0x01D54AE4 MOV X1, X21
	0x01D54AE8 MOV X2, X31
	0x01D54AEC BL 0x33C0DE4
	0x01D54AF0 CBZ X0, 0x1D54B2C
	0x01D54AF4 LDR X21, [X22]
	0x01D54AF8 MOV X20, X0
	0x01D54AFC MOV X1, X21
	0x01D54B00 BL 0x1C16E00
	0x01D54B04 CBZ X0, 0x1D54B20
	0x01D54B08 STR X0, [X23 + 0x100]
	0x01D54B0C LDR X21, [X22]
	0x01D54B10 MOV X0, X20
	0x01D54B14 MOV X1, X21
	0x01D54B18 BL 0x1C16E00
	0x01D54B1C CBNZ X0, 0x1D54B30
	0x01D54B20 MOV X0, X20
	0x01D54B24 MOV X1, X21
	0x01D54B28 BL 0x1C171E0
	0x01D54B2C STR X31, [X23 + 0x100]
	0x01D54B30 LDR X23, [X19 + 0x20]
	0x01D54B34 CBZ X23, 0x1D54C28
	0x01D54B38 ADRP X22, 0x23A0000
	0x01D54B3C LDR X22, [X22 + 0xE70]
	0x01D54B40 ADRP X21, 0x23A0000
	0x01D54B44 LDR X20, [X23 + 0x108]
	0x01D54B48 LDR X0, [X22]
	0x01D54B4C LDR X21, [X21 + 0xE90]
	0x01D54B50 BL 0x1C16F10
	0x01D54B54 LDR X2, [X21]
	0x01D54B58 MOV X1, X19
	0x01D54B5C MOV X3, X31
	0x01D54B60 MOV X21, X0
	0x01D54B64 BL 0x3314368
	0x01D54B68 MOV X0, X20
	0x01D54B6C MOV X1, X21
	0x01D54B70 MOV X2, X31
	0x01D54B74 BL 0x33C0DE4
	0x01D54B78 LDR X1, [X22]
	0x01D54B7C CBZ X0, 0x1D54BA0
	0x01D54B80 LDR X8, [X0]
	0x01D54B84 CMP X8, X1
	0x01D54B88 B.NE 0x1D54B28
	0x01D54B8C STR X0, [X23 + 0x108]
	0x01D54B90 LDR X8, [X0]
	0x01D54B94 CMP X8, X1
	0x01D54B98 B.EQ 0x1D54BA4
	0x01D54B9C B 0x1D54B28
	0x01D54BA0 STR X0, [X23 + 0x108]
	0x01D54BA4 LDR X23, [X19 + 0x20]
	0x01D54BA8 CBZ X23, 0x1D54C28
	0x01D54BAC ADRP X21, 0x23A0000
	0x01D54BB0 LDR X20, [X23 + 0x110]
	0x01D54BB4 LDR X21, [X21 + 0xE88]
	0x01D54BB8 MOV X0, X1
	0x01D54BBC BL 0x1C16F10
	0x01D54BC0 LDR X2, [X21]
	0x01D54BC4 MOV X1, X19
	0x01D54BC8 MOV X3, X31
	0x01D54BCC MOV X21, X0
	0x01D54BD0 BL 0x3314368
	0x01D54BD4 MOV X0, X20
	0x01D54BD8 MOV X1, X21
	0x01D54BDC MOV X2, X31
	0x01D54BE0 BL 0x33C0DE4
	0x01D54BE4 CBZ X0, 0x1D54C0C
	0x01D54BE8 LDR X1, [X22]
	0x01D54BEC LDR X8, [X0]
	0x01D54BF0 CMP X8, X1
	0x01D54BF4 B.NE 0x1D54B28
	0x01D54BF8 STR X0, [X23 + 0x110]
	0x01D54BFC LDR X8, [X0]
	0x01D54C00 CMP X8, X1
	0x01D54C04 B.EQ 0x1D54C10
	0x01D54C08 B 0x1D54B28
	0x01D54C0C STR X0, [X23 + 0x110]
	0x01D54C10 LDP X20, X19, [X31 + 0x40]
	0x01D54C14 LDP X22, X21, [X31 + 0x30]
	0x01D54C18 LDP X24, X23, [X31 + 0x20]
	0x01D54C1C LDP X26, X25, [X31 + 0x10]
	0x01D54C20 LDP X30, X27, [X31], #0x50
	0x01D54C24 RET
	0x01D54C28 BL 0x1C16F20
	0x01D54C2C BL 0x1C16F28
	0x01D54C30 BL 0x1C16F44
	0x01D54C34 MOV X1, X31
	0x01D54C38 BL 0x1C16DEC
	0x01D54C3C STR X30, [X31 - 0x10]!
	0x01D54C40 LDR X0, [X0 + 0x50]
	0x01D54C44 CBZ X0, 0x1D54C5C
	0x01D54C48 LDR X8, [X0]
	0x01D54C4C LDR X3, [X8 + 0x558]
	0x01D54C50 LDR X2, [X8 + 0x560]
	0x01D54C54 LDR X30, [X31], #0x10
	0x01D54C58 BR X3
	0x01D54C5C BL 0x1C16F20
	0x01D54C60 STR X30, [X31 - 0x30]!
	0x01D54C64 STP X22, X21, [X31 + 0x10]
	0x01D54C68 STP X20, X19, [X31 + 0x20]
	0x01D54C6C ADRP X20, 0x2684000
	0x01D54C70 LDRB W8, [X20 + 0x7D6]
	0x01D54C74 MOV X19, X0
	0x01D54C78 TBNZ X8, 0x0, 0x1D54CA8
	0x01D54C7C ADRP X0, 0x239F000
	0x01D54C80 LDR X0, [X0 + 0x648]
	0x01D54C84 BL 0x1C16CF4
	0x01D54C88 ADRP X0, 0x23A0000
	0x01D54C8C LDR X0, [X0 + 0xE98]
	0x01D54C90 BL 0x1C16CF4
	0x01D54C94 ADRP X0, 0x239F000
	0x01D54C98 LDR X0, [X0 + 0xDA0]
	0x01D54C9C BL 0x1C16CF4
	0x01D54CA0 MOVZ W8, 0x1
	0x01D54CA4 STRB W8, [X20 + 0x7D6]
	0x01D54CA8 LDR X0, [X19 + 0x40]
	0x01D54CAC CBZ X0, 0x1D54D24
	0x01D54CB0 MOV X1, X31
	0x01D54CB4 BL 0x35B9B84
	0x01D54CB8 LDR X0, [X19 + 0x48]
	0x01D54CBC CBZ X0, 0x1D54D24
	0x01D54CC0 ADRP X20, 0x239F000
	0x01D54CC4 ADRP X21, 0x23A0000
	0x01D54CC8 ADRP X22, 0x239F000
	0x01D54CCC LDR X20, [X20 + 0xDA0]
	0x01D54CD0 LDR X21, [X21 + 0xE98]
	0x01D54CD4 LDR X22, [X22 + 0x648]
	0x01D54CD8 MOV X1, X31
	0x01D54CDC BL 0x35B9B84
	0x01D54CE0 LDR X0, [X20]
	0x01D54CE4 BL 0x1C16F10
	0x01D54CE8 LDR X2, [X21]
	0x01D54CEC MOV X1, X19
	0x01D54CF0 MOV X3, X31
	0x01D54CF4 MOV X20, X0
	0x01D54CF8 BL 0x35C52F0
	0x01D54CFC LDR X0, [X22]
	0x01D54D00 LDR W8, [X0 + 0xE0]
	0x01D54D04 CBNZ W8, 0x1D54D0C
	0x01D54D08 BL 0x1C16DFC
	0x01D54D0C MOV X0, X20
	0x01D54D10 LDP X20, X19, [X31 + 0x20]
	0x01D54D14 LDP X22, X21, [X31 + 0x10]
	0x01D54D18 MOV X1, X31
	0x01D54D1C LDR X30, [X31], #0x30
	0x01D54D20 B 0x1D36978
	0x01D54D24 BL 0x1C16F20
	0x01D54D28 STP X30, X21, [X31 - 0x20]!
	0x01D54D2C STP X20, X19, [X31 + 0x10]
	0x01D54D30 ADRP X21, 0x2684000
	0x01D54D34 ADRP X20, 0x239F000
	0x01D54D38 LDRB W8, [X21 + 0x7D7]
	0x01D54D3C LDR X20, [X20 + 0x648]
	0x01D54D40 MOV X19, X0
	0x01D54D44 TBNZ X8, 0x0, 0x1D54D80
	0x01D54D48 ADRP X0, 0x239F000
	0x01D54D4C LDR X0, [X0 + 0x648]
	0x01D54D50 BL 0x1C16CF4
	0x01D54D54 ADRP X0, 0x23A0000
	0x01D54D58 LDR X0, [X0 + 0xEB8]
	0x01D54D5C BL 0x1C16CF4
	0x01D54D60 ADRP X0, 0x239F000
	0x01D54D64 LDR X0, [X0 + 0xDC8]
	0x01D54D68 BL 0x1C16CF4
	0x01D54D6C ADRP X0, 0x23A0000
	0x01D54D70 LDR X0, [X0 + 0xEC0]
	0x01D54D74 BL 0x1C16CF4
	0x01D54D78 MOVZ W8, 0x1
	0x01D54D7C STRB W8, [X21 + 0x7D7]
	0x01D54D80 LDR X0, [X20]
	0x01D54D84 LDR W8, [X0 + 0xE0]
	0x01D54D88 CBNZ W8, 0x1D54D90
	0x01D54D8C BL 0x1C16DFC
	0x01D54D90 ADRP X21, 0x2684000
	0x01D54D94 LDRB W8, [X21 + 0x787]
	0x01D54D98 CBNZ W8, 0x1D54DB0
	0x01D54D9C ADRP X0, 0x239F000
	0x01D54DA0 LDR X0, [X0 + 0x648]
	0x01D54DA4 BL 0x1C16CF4
	0x01D54DA8 MOVZ W8, 0x1
	0x01D54DAC STRB W8, [X21 + 0x787]
	0x01D54DB0 LDR X0, [X20]
	0x01D54DB4 LDR W8, [X0 + 0xE0]
	0x01D54DB8 CBNZ W8, 0x1D54DC4
	0x01D54DBC BL 0x1C16DFC
	0x01D54DC0 LDR X0, [X20]
	0x01D54DC4 LDR X8, [X0 + 0xB8]
	0x01D54DC8 LDR X8, [X8]
	0x01D54DCC CBZ X8, 0x1D54E70
	0x01D54DD0 LDR X8, [X8 + 0xB0]
	0x01D54DD4 CBZ X8, 0x1D54E70
	0x01D54DD8 LDRB W8, [X8 + 0x4C]
	0x01D54DDC CBZ W8, 0x1D54E64
	0x01D54DE0 LDR X8, [X19 + 0x28]
	0x01D54DE4 CBNZ X8, 0x1D54E64
	0x01D54DE8 LDR W8, [X0 + 0xE0]
	0x01D54DEC CBNZ W8, 0x1D54DF4
	0x01D54DF0 BL 0x1C16DFC
	0x01D54DF4 LDRB W8, [X21 + 0x787]
	0x01D54DF8 CBNZ W8, 0x1D54E10
	0x01D54DFC ADRP X0, 0x239F000
	0x01D54E00 LDR X0, [X0 + 0x648]
	0x01D54E04 BL 0x1C16CF4
	0x01D54E08 MOVZ W8, 0x1
	0x01D54E0C STRB W8, [X21 + 0x787]
	0x01D54E10 LDR X0, [X20]
	0x01D54E14 LDR W8, [X0 + 0xE0]
	0x01D54E18 CBNZ W8, 0x1D54E24
	0x01D54E1C BL 0x1C16DFC
	0x01D54E20 LDR X0, [X20]
	0x01D54E24 LDR X8, [X0 + 0xB8]
	0x01D54E28 LDR X8, [X8]
	0x01D54E2C CBZ X8, 0x1D54E70
	0x01D54E30 LDR X8, [X8 + 0xB8]
	0x01D54E34 CBZ X8, 0x1D54E70
	0x01D54E38 LDR X8, [X8 + 0x60]
	0x01D54E3C CBZ X8, 0x1D54E70
	0x01D54E40 LDR X20, [X8 + 0x50]
	0x01D54E44 ADRP X8, 0x23A0000
	0x01D54E48 LDR X8, [X8 + 0xEC0]
	0x01D54E4C LDR X0, [X8]
	0x01D54E50 BL 0x1C16F10
	0x01D54E54 MOV X1, X20
	0x01D54E58 MOV X21, X0
	0x01D54E5C BL 0x1D54E74
	0x01D54E60 STR X21, [X19 + 0x28]
	0x01D54E64 LDP X20, X19, [X31 + 0x10]
	0x01D54E68 LDP X30, X21, [X31], #0x20
	0x01D54E6C RET
	0x01D54E70 BL 0x1C16F20
	0x01D54E74 STP X29, X30, [X31 - 0x60]!
	0x01D54E78 STP X28, X27, [X31 + 0x10]
	0x01D54E7C STP X26, X25, [X31 + 0x20]
	0x01D54E80 STP X24, X23, [X31 + 0x30]
	0x01D54E84 STP X22, X21, [X31 + 0x40]
	0x01D54E88 STP X20, X19, [X31 + 0x50]
	0x01D54E8C ADRP X20, 0x2684000
	0x01D54E90 ADRP X24, 0x239F000

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X19, 0x2685000
	015 Move W8, [X19+2001]
	016 Move [X31], X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {65}
	021 Move X0, 0x23A0000
	022 Move X0, [X0+2600]
	023 Call 0x1C17CF4
	024 Move X0, 0x23A1000
	025 Move X0, [X0+3576]
	026 Call 0x1C17CF4
	027 Move X0, 0x23A1000
	028 Move X0, [X0+3584]
	029 Call 0x1C17CF4
	030 Move X0, 0x23A1000
	031 Move X0, [X0+3592]
	032 Call 0x1C17CF4
	033 Move X0, 0x23A1000
	034 Move X0, [X0+3600]
	035 Call 0x1C17CF4
	036 Move X0, 0x23A1000
	037 Move X0, [X0+3608]
	038 Call 0x1C17CF4
	039 Move X0, 0x23A1000
	040 Move X0, [X0+3616]
	041 Call 0x1C17CF4
	042 Move X0, 0x23A1000
	043 Move X0, [X0+3624]
	044 Call 0x1C17CF4
	045 Move X0, 0x23A1000
	046 Move X0, [X0+3632]
	047 Call 0x1C17CF4
	048 Move X0, 0x23A1000
	049 Move X0, [X0+3640]
	050 Call 0x1C17CF4
	051 Move X0, 0x23A0000
	052 Move X0, [X0+1432]
	053 Call 0x1C17CF4
	054 Move X0, 0x23A1000
	055 Move X0, [X0+3648]
	056 Call 0x1C17CF4
	057 Move X0, 0x23A1000
	058 Move X0, [X0+3656]
	059 Call 0x1C17CF4
	060 Move X0, 0x23A1000
	061 Move X0, [X0+3664]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X19+2001], W8
	065 Move X8, [X31]
	066 Move X19, [X8+40]
	067 Compare X19, 0
	068 JumpIfEqual {392}
	069 Move W8, [X19+24]
	070 Move X23, 0x23A0000
	071 Move X23, [X23+1432]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move W22, W31
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Add X8, X19, W22
	076 Move X20, [X8+32]
	077 Compare X20, 0
	078 JumpIfEqual {392}
	079 Move X0, X20
	080 Move X1, X31
	081 Call SkinnedMeshRenderer.get_sharedMesh, X0
	082 Move X8, [X23]
	083 Move X21, X0
	084 Move W9, [X8+224]
	085 Compare W9, 0
	086 JumpIfNotEqual {89}
	087 Move X0, X8
	088 Call 0x1C17DFC
	089 Move X0, X21
	090 Move X1, X31
	091 Move X2, X31
	092 Call Object.op_Inequality, X0, X1
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {110}
	097 Move X0, X20
	098 Move X1, X31
	099 Call SkinnedMeshRenderer.get_sharedMesh, X0
	100 Move X8, [X23]
	101 Move X20, X0
	102 Move W9, [X8+224]
	103 Compare W9, 0
	104 JumpIfNotEqual {107}
	105 Move X0, X8
	106 Call 0x1C17DFC
	107 Move X0, X20
	108 Move X1, X31
	109 Call Object.Destroy, X0
	110 Move W8, [X19+24]
	111 Add W22, W22, 1
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X8, [X31]
	114 Move X8, [X8+48]
	115 Compare X8, 0
	116 JumpIfEqual {392}
	117 Move X8, [X8+96]
	118 Compare X8, 0
	119 JumpIfEqual {392}
	120 Move X9, 0x23A1000
	121 Move X9, [X9+3592]
	122 Move X19, 0x23A1000
	123 Move X21, [X8+48]
	124 Move X0, [X9]
	125 Move X19, [X19+3584]
	126 Call 0x1C17F10
	127 Move X2, [X19]
	128 Move X1, X21
	129 Move [X31+24], X0
	130 Call HashSet`1<Int32>..ctor, X0, X1
	131 Move X19, [X31]
	132 Move X8, [X19+32]
	133 Compare X8, 0
	134 JumpIfEqual {392}
	135 Move W24, W31
	136 Move W9, [X8+24]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X9, [X19+40]
	140 Compare X9, 0
	141 JumpIfEqual {392}
	142 Move W10, [X9+24]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X10, W24
	145 Add X8, X8, X10
	146 Move X20, [X8+32]
	147 Compare X20, 0
	148 JumpIfEqual {392}
	149 Move X0, [X23]
	150 Add X8, X9, X10
	151 Move X21, [X8+32]
	152 Move X23, [X20+64]
	153 Move W8, [X0+224]
	154 Compare W8, 0
	155 JumpIfNotEqual {157}
	156 Call 0x1C17DFC
	157 Move X8, 0x23A1000
	158 Move X8, [X8+3640]
	159 Move X0, X23
	160 Move X1, [X8]
	161 Call 0x222E35C, X0
	162 Compare X21, 0
	163 JumpIfEqual {392}
	164 Move X1, X0
	165 Move X0, X21
	166 Move X2, X31
	167 Move [X31+16], X24
	168 Call SkinnedMeshRenderer.set_sharedMesh, X0, X1
	169 Move X0, [X20+64]
	170 Compare X0, 0
	171 JumpIfEqual {392}
	172 Move X1, X31
	173 Move [X31+8], X21
	174 Call Mesh.get_triangles, X0
	175 Compare X0, 0
	176 JumpIfEqual {392}
	177 Move X8, 0x23A1000
	178 Move X8, [X8+3632]
	179 Move X24, X0
	180 Move X0, [X8]
	181 Call 0x1C17F10
	182 Move X8, 0x23A1000
	183 Move W1, [X24+24]
	184 Move X8, [X8+3616]
	185 Move X23, X0
	186 Move X2, [X8]
	187 Call List`1<Int32>..ctor, X0, X1
	188 Move W8, [X24+24]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move W19, W31
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Add X22, X24, W19
	193 Move X9, [X20+96]
	194 NotImplemented "Instruction LDRSW not yet implemented."
	195 Compare X9, 0
	196 JumpIfEqual {392}
	197 Move W10, [X9+24]
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Add W29, W19, 1
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Add X11, X9, X11
	202 Add X27, X24, W29
	203 Move W1, [X11+32]
	204 NotImplemented "Instruction LDRSW not yet implemented."
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Add W21, W19, 2
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Add X8, X9, X11
	209 Add X28, X24, W21
	210 Move W25, [X8+32]
	211 NotImplemented "Instruction LDRSW not yet implemented."
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Move X0, [X31+24]
	214 Compare X0, 0
	215 JumpIfEqual {392}
	216 Add X8, X9, X8
	217 Move W26, [X8+32]
	218 Move X8, 0x23A1000
	219 Move X8, [X8+3576]
	220 Move X2, [X8]
	221 Call HashSet`1<Int32>.Contains, X0, X1
	222 Move TEMP, X0
	223 And TEMP, TEMP, 1
	224 Compare TEMP, 1
	225 JumpIfNotEqual {246}
	226 Move X8, 0x23A1000
	227 Move X8, [X8+3576]
	228 Move X0, [X31+24]
	229 Move W1, W25
	230 Move X2, [X8]
	231 Call HashSet`1<Int32>.Contains, X0, X1
	232 Move TEMP, X0
	233 And TEMP, TEMP, 1
	234 Compare TEMP, 1
	235 JumpIfNotEqual {246}
	236 Move X8, 0x23A1000
	237 Move X8, [X8+3576]
	238 Move X0, [X31+24]
	239 Move W1, W26
	240 Move X2, [X8]
	241 Call HashSet`1<Int32>.Contains, X0, X1
	242 Move TEMP, X0
	243 And TEMP, TEMP, 1
	244 Compare TEMP, 1
	245 JumpIfEqual {316}
	246 Move W8, [X24+24]
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Compare X23, 0
	249 JumpIfEqual {392}
	250 Move W1, [X22]
	251 Move X22, 0x23A1000
	252 Move W11, [X23+28]
	253 Move X9, [X23+16]
	254 Move X22, [X22+3600]
	255 Add W11, W11, 1
	256 Move X10, [X22]
	257 Move [X23+28], W11
	258 Compare X9, 0
	259 JumpIfEqual {392}
	260 NotImplemented "Instruction LDRSW not yet implemented."
	261 Move W12, [X9+24]
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Add W10, W11, 1
	264 Add X9, X9, X11
	265 Move [X23+24], W10
	266 Move [X9+32], W1
	267 Move X8, [X10+32]
	268 Move X0, X23
	269 Move X8, [X8+192]
	270 Move X2, [X8+112]
	271 Call List`1<Int32>.AddWithResize, X0, X1
	272 Move W8, [X24+24]
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Move W11, [X23+28]
	275 Move W1, [X27]
	276 Move X9, [X23+16]
	277 Move X10, [X22]
	278 Add W11, W11, 1
	279 Move [X23+28], W11
	280 Compare X9, 0
	281 JumpIfEqual {392}
	282 NotImplemented "Instruction LDRSW not yet implemented."
	283 Move W12, [X9+24]
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Add W10, W11, 1
	286 Add X9, X9, X11
	287 Move [X23+24], W10
	288 Move [X9+32], W1
	289 Move X8, [X10+32]
	290 Move X0, X23
	291 Move X8, [X8+192]
	292 Move X2, [X8+112]
	293 Call List`1<Int32>.AddWithResize, X0, X1
	294 Move W8, [X24+24]
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Move W10, [X23+28]
	297 Move W1, [X28]
	298 Move X8, [X23+16]
	299 Move X9, [X22]
	300 Add W10, W10, 1
	301 Move [X23+28], W10
	302 Compare X8, 0
	303 JumpIfEqual {392}
	304 NotImplemented "Instruction LDRSW not yet implemented."
	305 Move W11, [X8+24]
	306 NotImplemented "Instruction CMP not yet implemented."
	307 Add W9, W10, 1
	308 Add X8, X8, X10
	309 Move [X23+24], W9
	310 Move [X8+32], W1
	311 Move X8, [X9+32]
	312 Move X0, X23
	313 Move X8, [X8+192]
	314 Move X2, [X8+112]
	315 Call List`1<Int32>.AddWithResize, X0, X1
	316 Move X8, [X24+24]
	317 Add W19, W19, 3
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Move X19, [X31]
	320 Move X24, [X31+16]
	321 Compare X23, 0
	322 JumpIfEqual {392}
	323 Move W9, [X23+24]
	324 Compare W9, 0
	325 JumpIfEqual {335}
	326 NotImplemented "Instruction CMP not yet implemented."
	327 Move X0, X20
	328 Move X1, X31
	329 Call Object.get_name, X0
	330 Move X8, 0x23A1000
	331 Move X8, [X8+3656]
	332 Move X9, 0x23A1000
	333 Move X8, [X8]
	334 Move X9, [X9+3648]
	335 Move X0, X20
	336 Move X1, X31
	337 Call Object.get_name, X0
	338 Move X8, 0x23A1000
	339 Move X8, [X8+3656]
	340 Move X9, 0x23A1000
	341 Move X8, [X8]
	342 Move X9, [X9+3664]
	343 Move X2, [X9]
	344 Move X1, X0
	345 Move X0, X8
	346 Move X3, X31
	347 Call String.Concat, X0, X1, X2
	348 Move X8, 0x23A0000
	349 Move X8, [X8+2600]
	350 Move X21, X0
	351 Move X8, [X8]
	352 Move W9, [X8+224]
	353 Compare W9, 0
	354 JumpIfNotEqual {357}
	355 Move X0, X8
	356 Call 0x1C17DFC
	357 Move X0, X21
	358 Move X1, X31
	359 Call Debug.LogWarning, X0
	360 Move X23, 0x23A0000
	361 Move X23, [X23+1432]
	362 Move X21, [X31+8]
	363 Move X1, X31
	364 Move X0, X21
	365 Call SkinnedMeshRenderer.get_sharedMesh, X0
	366 Move X8, 0x23A1000
	367 Move X8, [X8+3608]
	368 Move X22, X0
	369 Move X0, X23
	370 Move X1, [X8]
	371 Call List`1<Int32>.ToArray, X0
	372 Compare X22, 0
	373 JumpIfEqual {392}
	374 Move X1, X0
	375 Move X0, X22
	376 Move X2, X31
	377 Call Mesh.set_triangles, X0, X1
	378 Move X0, X21
	379 Move X1, X31
	380 Call SkinnedMeshRenderer.get_sharedMesh, X0
	381 Move X23, 0x23A0000
	382 Move X23, [X23+1432]
	383 Compare X0, 0
	384 JumpIfEqual {392}
	385 Move W1, W31
	386 Move X2, X31
	387 Call Mesh.UploadMeshData, X0, X1
	388 Move X8, [X19+32]
	389 Add W24, W24, 1
	390 Compare X8, 0
	391 JumpIfNotEqual {136}
	392 Call 0x1C17F20
	393 Move X20, [X31+112]
	394 Move X19, [X31+120]
	395 Move X22, [X31+96]
	396 Move X21, [X31+104]
	397 Move X24, [X31+80]
	398 Move X23, [X31+88]
	399 Move X26, [X31+64]
	400 Move X25, [X31+72]
	401 Move X28, [X31+48]
	402 Move X27, [X31+56]
	403 Move X29, [X31+32]
	404 Move X30, [X31+40]
	405 Add X31, X31, 128
	406 Return 
	407 Call 0x1C17F28

Method: System.Void .ctor()

Disassembly:
	0x01D54E94 ADRP X22, 0x239F000
	0x01D54E98 ADRP X23, 0x23A0000

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

