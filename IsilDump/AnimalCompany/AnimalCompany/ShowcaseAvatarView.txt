Type: AnimalCompany.ShowcaseAvatarView

Method: System.Void Awake()

Disassembly:
	0x01D7BA00 FCMP S2, S1
	0x01D7BA04 STR S0, [X19 + 0x78]
	0x01D7BA08 B.LT 0x1D7BAF4
	0x01D7BA0C STR W31, [X19 + 0x78]
	0x01D7BA10 TBZ X20, 0x0, 0x1D7BB0C
	0x01D7BA14 LDR X20, [X19 + 0x68]
	0x01D7BA18 B 0x1D7BB10
	0x01D7BA1C MOV W20, W31
	0x01D7BA20 MOV X0, X31
	0x01D7BA24 BL 0x3C3C7DC
	0x01D7BA28 LDR V1, [X19 + 0x78]
	0x01D7BA2C LDR V2, [X19 + 0x60]
	0x01D7BA30 FDIV S0, S8, S0
	0x01D7BA34 STR S0, [X19 + 0x54]
	0x01D7BA38 FABS S1, S1
	0x01D7BA3C FCMP S1, S2
	0x01D7BA40 B.LT 0x1D7BAD0
	0x01D7BA44 STR W31, [X19 + 0x78]
	0x01D7BA48 TBZ X20, 0x0, 0x1D7BA54
	0x01D7BA4C LDR X20, [X19 + 0x68]
	0x01D7BA50 B 0x1D7BA58
	0x01D7BA54 LDR X20, [X19 + 0x70]
	0x01D7BA58 MOV X0, X19
	0x01D7BA5C MOV X1, X31
	0x01D7BA60 BL 0x3C32E90
	0x01D7BA64 CBZ X0, 0x1D7BB80
	0x01D7BA68 MOV X1, X31
	0x01D7BA6C BL 0x3C3F58C
	0x01D7BA70 CBZ X20, 0x1D7BB80
	0x01D7BA74 LDR V3, [X19 + 0x54]
	0x01D7BA78 FMOV S4, 30
	0x01D7BA7C ADRP X8, 0xFFFFFFFFFED6F000
	0x01D7BA80 FMOV S6, 1
	0x01D7BA84 FABS S3, S3
	0x01D7BA88 FDIV S3, S3, S4
	0x01D7BA8C LDR V4, [X8 + 0x5C]
	0x01D7BA90 ADRP X8, 0xFFFFFFFFFED6F000
	0x01D7BA94 LDR V5, [X8 + 0x44C]
	0x01D7BA98 FMIN S3, S3, S6
	0x01D7BA9C FMUL S3, S3, S4
	0x01D7BAA0 MOV X0, X20
	0x01D7BAA4 FADD S3, S3, S5
	0x01D7BAA8 MOV W1, W31
	0x01D7BAAC MOV X2, X31
	0x01D7BAB0 BL 0x1DD0FA8
	0x01D7BAB4 ADRP X8, 0xFFFFFFFFFED6F000
	0x01D7BAB8 ADRP X9, 0xFFFFFFFFFED6F000
	0x01D7BABC LDR W0, [X19 + 0x5C]
	0x01D7BAC0 LDR V0, [X8 + 0x14]
	0x01D7BAC4 LDR V1, [X9 + 0xBC]
	0x01D7BAC8 MOV X1, X31
	0x01D7BACC BL 0x1DC2324
	0x01D7BAD0 LDR X0, [X19 + 0x40]
	0x01D7BAD4 CBZ X0, 0x1D7BB80
	0x01D7BAD8 MOV X1, X31
	0x01D7BADC BL 0x3C32E90
	0x01D7BAE0 CBZ X0, 0x1D7BB80
	0x01D7BAE4 MOV X1, X31
	0x01D7BAE8 BL 0x3C3F58C
	0x01D7BAEC STP S0, S1, [X19 + 0x48]
	0x01D7BAF0 STR S2, [X19 + 0x50]
	0x01D7BAF4 LDP X20, X19, [X31 + 0x40]
	0x01D7BAF8 LDP X30, X21, [X31 + 0x30]
	0x01D7BAFC LDP D9, D8, [X31 + 0x20]
	0x01D7BB00 LDP D11, D10, [X31 + 0x10]
	0x01D7BB04 LDP D13, D12, [X31], #0x50
	0x01D7BB08 RET
	0x01D7BB0C LDR X20, [X19 + 0x70]
	0x01D7BB10 MOV X0, X19
	0x01D7BB14 MOV X1, X31
	0x01D7BB18 BL 0x3C32E90
	0x01D7BB1C CBZ X0, 0x1D7BB80
	0x01D7BB20 MOV X1, X31
	0x01D7BB24 BL 0x3C3F58C
	0x01D7BB28 CBZ X20, 0x1D7BB80
	0x01D7BB2C LDR V3, [X19 + 0x54]
	0x01D7BB30 ADRP X8, 0xFFFFFFFFFED6F000
	0x01D7BB34 ADRP X9, 0xFFFFFFFFFED6F000
	0x01D7BB38 LDR V5, [X8 + 0x5C]
	0x01D7BB3C FMOV S4, 30
	0x01D7BB40 LDR V6, [X9 + 0x44C]
	0x01D7BB44 FABS S3, S3
	0x01D7BB48 FDIV S3, S3, S4
	0x01D7BB4C FMOV S4, 1
	0x01D7BB50 MOV X0, X20
	0x01D7BB54 LDP X20, X19, [X31 + 0x40]
	0x01D7BB58 LDP X30, X21, [X31 + 0x30]
	0x01D7BB5C LDP D9, D8, [X31 + 0x20]
	0x01D7BB60 LDP D11, D10, [X31 + 0x10]
	0x01D7BB64 FMIN S3, S3, S4
	0x01D7BB68 FMUL S3, S3, S5
	0x01D7BB6C FADD S3, S3, S6
	0x01D7BB70 MOV W1, W31
	0x01D7BB74 MOV X2, X31
	0x01D7BB78 LDP D13, D12, [X31], #0x50
	0x01D7BB7C B 0x1DD0FA8
	0x01D7BB80 BL 0x1C16F20
	0x01D7BB84 STP X30, X21, [X31 - 0x20]!
	0x01D7BB88 STP X20, X19, [X31 + 0x10]
	0x01D7BB8C ADRP X21, 0x265D000
	0x01D7BB90 LDRB W8, [X21 + 0x947]
	0x01D7BB94 MOV X20, X1
	0x01D7BB98 MOV X19, X0
	0x01D7BB9C TBNZ X8, 0x0, 0x1D7BBB4
	0x01D7BBA0 ADRP X0, 0x237A000
	0x01D7BBA4 LDR X0, [X0 + 0x680]
	0x01D7BBA8 BL 0x1C16CF4
	0x01D7BBAC MOVZ W8, 0x1
	0x01D7BBB0 STRB W8, [X21 + 0x947]
	0x01D7BBB4 ADD X1, X19, 0x5C
	0x01D7BBB8 MOV X0, X20
	0x01D7BBBC BL 0x1D7B2BC
	0x01D7BBC0 STR X20, [X19 + 0x40]
	0x01D7BBC4 CBZ X20, 0x1D7BC1C
	0x01D7BBC8 MOV X0, X20
	0x01D7BBCC MOV X1, X31
	0x01D7BBD0 BL 0x3C32E90
	0x01D7BBD4 CBZ X0, 0x1D7BC1C
	0x01D7BBD8 MOV X1, X31
	0x01D7BBDC BL 0x3C3F58C
	0x01D7BBE0 LDR X0, [X19 + 0x30]
	0x01D7BBE4 STP S0, S1, [X19 + 0x48]
	0x01D7BBE8 STR S2, [X19 + 0x50]
	0x01D7BBEC CBZ X0, 0x1D7BC1C
	0x01D7BBF0 MOV X1, X31
	0x01D7BBF4 BL 0x3C1341C
	0x01D7BBF8 CBZ X0, 0x1D7BC1C
	0x01D7BBFC ADRP X8, 0x237A000
	0x01D7BC00 LDR X8, [X8 + 0x680]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x265E000
	007 Move X22, 0x237B000
	008 Move X20, 0x237B000
	009 Move W8, [X21+2368]
	010 Move X22, [X22+800]
	011 Move X20, [X20+792]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0x237A000
	018 Move X0, [X0+2552]
	019 Call 0x1C17CF4
	020 Move X0, 0x237A000
	021 Move X0, [X0+2560]
	022 Call 0x1C17CF4
	023 Move X0, 0x2379000
	024 Move X0, [X0+2304]
	025 Call 0x1C17CF4
	026 Move X0, 0x237B000
	027 Move X0, [X0+792]
	028 Call 0x1C17CF4
	029 Move X0, 0x237B000
	030 Move X0, [X0+672]
	031 Call 0x1C17CF4
	032 Move X0, 0x237B000
	033 Move X0, [X0+800]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+2368], W8
	037 Move X0, [X22]
	038 Call 0x1C17F10
	039 Move X2, [X20]
	040 Move X1, X31
	041 Move X20, X0
	042 Call 0x26B0B18, X0, X1
	043 Compare X20, 0
	044 JumpIfEqual {163}
	045 Move X8, [X20+96]
	046 Compare X8, 0
	047 JumpIfEqual {163}
	048 Move X0, [X8+80]
	049 Compare X0, 0
	050 JumpIfEqual {163}
	051 Move X8, 0x237A000
	052 Move X8, [X8+2560]
	053 Move S2, [X19+40]
	054 Move S3, [X19+44]
	055 Move S0, [X19+32]
	056 Move S1, [X19+36]
	057 Move X1, [X8]
	058 Call StatePrimitive`1<Color>.set_value, X0, X1
	059 Move X8, [X20+96]
	060 Compare X8, 0
	061 JumpIfEqual {163}
	062 Move X0, [X8+88]
	063 Compare X0, 0
	064 JumpIfEqual {163}
	065 Move X21, 0x2379000
	066 Move X21, [X21+2304]
	067 Move X1, [X19+48]
	068 Move X2, [X21]
	069 Call StatePrimitive`1<Object>.set_value, X0, X1
	070 Move X8, [X20+96]
	071 Compare X8, 0
	072 JumpIfEqual {163}
	073 Move X0, [X8+96]
	074 Compare X0, 0
	075 JumpIfEqual {163}
	076 Move X1, [X19+56]
	077 Move X2, [X21]
	078 Call StatePrimitive`1<Object>.set_value, X0, X1
	079 Move X8, [X20+96]
	080 Compare X8, 0
	081 JumpIfEqual {163}
	082 Move X0, [X8+104]
	083 Compare X0, 0
	084 JumpIfEqual {163}
	085 Move X1, [X19+64]
	086 Move X2, [X21]
	087 Call StatePrimitive`1<Object>.set_value, X0, X1
	088 Move X8, [X20+96]
	089 Compare X8, 0
	090 JumpIfEqual {163}
	091 Move X0, [X8+112]
	092 Compare X0, 0
	093 JumpIfEqual {163}
	094 Move X1, [X19+72]
	095 Move X2, [X21]
	096 Call StatePrimitive`1<Object>.set_value, X0, X1
	097 Move X8, [X20+96]
	098 Compare X8, 0
	099 JumpIfEqual {163}
	100 Move X0, [X8+120]
	101 Compare X0, 0
	102 JumpIfEqual {163}
	103 Move X1, [X19+80]
	104 Move X2, [X21]
	105 Call StatePrimitive`1<Object>.set_value, X0, X1
	106 Move X8, [X20+96]
	107 Compare X8, 0
	108 JumpIfEqual {163}
	109 Move X0, [X8+128]
	110 Compare X0, 0
	111 JumpIfEqual {163}
	112 Move X1, [X19+88]
	113 Move X2, [X21]
	114 Call StatePrimitive`1<Object>.set_value, X0, X1
	115 Move X8, [X20+96]
	116 Compare X8, 0
	117 JumpIfEqual {163}
	118 Move X0, [X8+136]
	119 Compare X0, 0
	120 JumpIfEqual {163}
	121 Move X1, [X19+96]
	122 Move X2, [X21]
	123 Call StatePrimitive`1<Object>.set_value, X0, X1
	124 Move X8, [X20+96]
	125 Compare X8, 0
	126 JumpIfEqual {163}
	127 Move X0, [X8+144]
	128 Compare X0, 0
	129 JumpIfEqual {163}
	130 Move X1, [X19+104]
	131 Move X2, [X21]
	132 Call StatePrimitive`1<Object>.set_value, X0, X1
	133 Move X8, [X20+96]
	134 Compare X8, 0
	135 JumpIfEqual {163}
	136 Move X9, 0x237A000
	137 Move X9, [X9+2552]
	138 Move X0, [X8+152]
	139 Move X1, [X19+112]
	140 Move X2, [X9]
	141 Call 0x222F4AC, X0, X1
	142 Move X0, [X19+120]
	143 Compare X0, 0
	144 JumpIfEqual {163}
	145 Move X1, [X20+96]
	146 Move X2, X31
	147 Call AvatarView.UpdateAvatar, X0, X1
	148 Move X0, [X19+120]
	149 Compare X0, 0
	150 JumpIfEqual {163}
	151 Move S2, [X19+40]
	152 Move S3, [X19+44]
	153 Move S0, [X19+32]
	154 Move S1, [X19+36]
	155 Move X20, [X31+32]
	156 Move X19, [X31+40]
	157 Move X22, [X31+16]
	158 Move X21, [X31+24]
	159 Move X1, X31
	160 Move X30, [X31+48]
	161 Call AvatarView.SetColor, X0, X1
	162 Return 
	163 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01D7BC04 LDP X20, X19, [X31 + 0x10]
	0x01D7BC08 FMOV S0, 1
	0x01D7BC0C MOV X2, X31
	0x01D7BC10 LDR X1, [X8]

ISIL:
	001 Move V0, 0
	002 Move X1, X31
	003 Move [X0+2], V0
	004 Call MonoBehaviour..ctor, X0
	005 Return 

