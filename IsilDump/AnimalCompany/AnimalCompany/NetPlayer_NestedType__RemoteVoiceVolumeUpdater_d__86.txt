Type: AnimalCompany.NetPlayer/<RemoteVoiceVolumeUpdater>d__86

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01CBB0B0 STRB W8, [X20 + 0x51D]
	0x01CBB0B4 LDR X8, [X19 + 0x50]
	0x01CBB0B8 CBZ X8, 0x1CBB0F4
	0x01CBB0BC LDR X0, [X8 + 0x50]
	0x01CBB0C0 LDR X19, [X19 + 0x48]
	0x01CBB0C4 MOV X1, X31
	0x01CBB0C8 BL 0x30905F0
	0x01CBB0CC CBZ X19, 0x1CBB0F4
	0x01CBB0D0 ADRP X8, 0x2293000
	0x01CBB0D4 LDR X8, [X8 + 0x80]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01CBB0D8 LDR X2, [X8]

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01CBB0DC ORN W8, W31, W0, 0x0
	0x01CBB0E0 MOV X0, X19
	0x01CBB0E4 LDP X20, X19, [X31 + 0x10]
	0x01CBB0E8 AND W1, W8, 0x1
	0x01CBB0EC LDR X30, [X31], #0x20
	0x01CBB0F0 B 0x24B96A4
	0x01CBB0F4 BL 0x1B6EA1C
	0x01CBB0F8 LDR X0, [X0 + 0x98]
	0x01CBB0FC RET
	0x01CBB100 STR X30, [X31 - 0x20]!
	0x01CBB104 STP X20, X19, [X31 + 0x10]
	0x01CBB108 ADRP X19, 0x2568000
	0x01CBB10C ADRP X20, 0x2292000
	0x01CBB110 LDRB W8, [X19 + 0x51E]
	0x01CBB114 LDR X20, [X20 + 0xF78]
	0x01CBB118 TBNZ X8, 0x0, 0x1CBB130
	0x01CBB11C ADRP X0, 0x2292000
	0x01CBB120 LDR X0, [X0 + 0xF78]
	0x01CBB124 BL 0x1B6E7F0
	0x01CBB128 MOVZ W8, 0x1
	0x01CBB12C STRB W8, [X19 + 0x51E]
	0x01CBB130 LDR X8, [X20]
	0x01CBB134 LDP X20, X19, [X31 + 0x10]
	0x01CBB138 LDR X8, [X8 + 0xB8]
	0x01CBB13C LDR X0, [X8 + 0x40]
	0x01CBB140 LDR X30, [X31], #0x20
	0x01CBB144 RET
	0x01CBB148 STR X30, [X31 - 0x20]!
	0x01CBB14C STP X20, X19, [X31 + 0x10]
	0x01CBB150 ADRP X19, 0x2568000
	0x01CBB154 ADRP X20, 0x2292000
	0x01CBB158 LDRB W8, [X19 + 0x51F]
	0x01CBB15C LDR X20, [X20 + 0xF78]
	0x01CBB160 TBNZ X8, 0x0, 0x1CBB178
	0x01CBB164 ADRP X0, 0x2292000
	0x01CBB168 LDR X0, [X0 + 0xF78]
	0x01CBB16C BL 0x1B6E7F0
	0x01CBB170 MOVZ W8, 0x1
	0x01CBB174 STRB W8, [X19 + 0x51F]
	0x01CBB178 LDR X8, [X20]
	0x01CBB17C LDP X20, X19, [X31 + 0x10]
	0x01CBB180 LDR X8, [X8 + 0xB8]
	0x01CBB184 LDR W0, [X8 + 0x8]
	0x01CBB188 LDR X30, [X31], #0x20
	0x01CBB18C RET
	0x01CBB190 STR X30, [X31 - 0x20]!
	0x01CBB194 STP X20, X19, [X31 + 0x10]
	0x01CBB198 ADRP X19, 0x2568000
	0x01CBB19C ADRP X20, 0x2292000
	0x01CBB1A0 LDRB W8, [X19 + 0x520]
	0x01CBB1A4 LDR X20, [X20 + 0xF78]
	0x01CBB1A8 TBNZ X8, 0x0, 0x1CBB1C0
	0x01CBB1AC ADRP X0, 0x2292000
	0x01CBB1B0 LDR X0, [X0 + 0xF78]
	0x01CBB1B4 BL 0x1B6E7F0
	0x01CBB1B8 MOVZ W8, 0x1
	0x01CBB1BC STRB W8, [X19 + 0x520]
	0x01CBB1C0 LDR X8, [X20]
	0x01CBB1C4 LDP X20, X19, [X31 + 0x10]
	0x01CBB1C8 LDR X8, [X8 + 0xB8]
	0x01CBB1CC LDRB W0, [X8 + 0x48]
	0x01CBB1D0 LDR X30, [X31], #0x20
	0x01CBB1D4 RET
	0x01CBB1D8 STP X30, X21, [X31 - 0x20]!
	0x01CBB1DC STP X20, X19, [X31 + 0x10]
	0x01CBB1E0 ADRP X21, 0x2568000
	0x01CBB1E4 ADRP X20, 0x2292000
	0x01CBB1E8 LDRB W8, [X21 + 0x521]
	0x01CBB1EC LDR X20, [X20 + 0xF78]
	0x01CBB1F0 MOV W19, W0
	0x01CBB1F4 TBNZ X8, 0x0, 0x1CBB20C
	0x01CBB1F8 ADRP X0, 0x2292000
	0x01CBB1FC LDR X0, [X0 + 0xF78]
	0x01CBB200 BL 0x1B6E7F0
	0x01CBB204 MOVZ W8, 0x1
	0x01CBB208 STRB W8, [X21 + 0x521]
	0x01CBB20C LDR X8, [X20]
	0x01CBB210 AND W9, W19, 0x1
	0x01CBB214 LDP X20, X19, [X31 + 0x10]
	0x01CBB218 LDR X8, [X8 + 0xB8]
	0x01CBB21C STRB W9, [X8 + 0x48]
	0x01CBB220 LDP X30, X21, [X31], #0x20
	0x01CBB224 RET
	0x01CBB228 SUB X31, X31, 0x60
	0x01CBB22C STR X30, [X31 + 0x20]
	0x01CBB230 STP X24, X23, [X31 + 0x30]
	0x01CBB234 STP X22, X21, [X31 + 0x40]
	0x01CBB238 STP X20, X19, [X31 + 0x50]
	0x01CBB23C ADRP X20, 0x2568000
	0x01CBB240 ADRP X21, 0x2292000
	0x01CBB244 LDRB W8, [X20 + 0x522]
	0x01CBB248 LDR X21, [X21 + 0xF78]
	0x01CBB24C MOV X19, X0
	0x01CBB250 TBNZ X8, 0x0, 0x1CBB2D4
	0x01CBB254 ADRP X0, 0x2292000
	0x01CBB258 LDR X0, [X0 + 0x4E8]
	0x01CBB25C BL 0x1B6E7F0
	0x01CBB260 ADRP X0, 0x2294000
	0x01CBB264 LDR X0, [X0 + 0x40]
	0x01CBB268 BL 0x1B6E7F0
	0x01CBB26C ADRP X0, 0x2292000
	0x01CBB270 LDR X0, [X0 + 0xBA0]
	0x01CBB274 BL 0x1B6E7F0
	0x01CBB278 ADRP X0, 0x2294000
	0x01CBB27C LDR X0, [X0 + 0x48]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2569000
	008 Move W8, [X20+1302]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2293000
	015 Move X0, [X0+1144]
	016 Call 0x1B6F7F0
	017 Move X0, 0x2294000
	018 Move X0, [X0+4032]
	019 Call 0x1B6F7F0
	020 Move W8, 1
	021 Move [X20+1302], W8
	022 Move W8, [X19+16]
	023 Move X22, [X19+32]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Compare W8, 0
	026 JumpIfNotEqual {121}
	027 Move TEMP, 0
	028 Not TEMP
	029 Move W8, TEMP
	030 Move [X19+16], W8
	031 Move X8, 0x2294000
	032 Move X8, [X8+4032]
	033 Move W1, 256
	034 Move X0, [X8]
	035 Call 0x1B6F868
	036 Move [X19+40], X0
	037 Move TEMP, 0
	038 Not TEMP
	039 Move W8, TEMP
	040 Move [X19+16], W8
	041 Compare X22, 0
	042 JumpIfEqual {129}
	043 Move X8, 0x2293000
	044 Move X8, [X8+1144]
	045 Move X20, [X22+296]
	046 Move X0, [X8]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1B6F8F8
	051 Move X0, X20
	052 Move X1, X31
	053 Move X2, X31
	054 Call Object.op_Inequality, X0, X1
	055 Move S8, W31
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {113}
	060 Move X0, [X22+296]
	061 Compare X0, 0
	062 JumpIfEqual {129}
	063 Move X1, X31
	064 Call AudioSource.get_isPlaying, X0
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {113}
	069 Move X0, [X22+296]
	070 Compare X0, 0
	071 JumpIfEqual {129}
	072 Move X1, X31
	073 Call AudioSource.get_clip, X0
	074 Move X8, [X22+296]
	075 Compare X8, 0
	076 JumpIfEqual {129}
	077 Move X21, [X19+40]
	078 Move X20, X0
	079 Move X0, X8
	080 Move X1, X31
	081 Call AudioSource.get_timeSamples, X0
	082 Compare X20, 0
	083 JumpIfEqual {129}
	084 Move W2, W0
	085 Move X0, X20
	086 Move X1, X21
	087 Move X3, X31
	088 Call AudioClip.GetData, X0, X1, X2
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {113}
	093 Move X11, [X19+40]
	094 Compare X11, 0
	095 JumpIfEqual {129}
	096 Move W8, [X11+24]
	097 Move X9, X8
	098 ShiftRight X9, 32
	099 And X9, X9, 0x7FFFFFFF
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X9, X31
	102 Move X10, W8
	103 Add X11, X11, 32
	104 Move S0, W31
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move V1, [X11]
	107 Add X9, X9, 1
	108 NotImplemented "Instruction FCMP not yet implemented."
	109 NotImplemented "Instruction FCSEL not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move S1, 5
	112 Multiply S8, S0, S1
	113 Move X0, [X22+168]
	114 Compare X0, 0
	115 JumpIfEqual {129}
	116 Move V0, V8
	117 Call PlayerView.UpdateVoice, X0, V0
	118 Move W0, 1
	119 Move [X19+24], X31
	120 Move [X19+16], W0
	121 Move W0, W31
	122 Move X20, [X31+32]
	123 Move X19, [X31+40]
	124 Move X22, [X31+16]
	125 Move X21, [X31+24]
	126 Move X30, [X31+8]
	127 Move V8, [X31+48]
	128 Return X0
	129 Call 0x1B6FA1C
	130 Call 0x1B6FA24

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x01CBB458 ADRP X22, 0x2292000
	0x01CBB45C ADRP X21, 0x2292000

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01CBB460 LDR X0, [X8]
	0x01CBB464 LDR X20, [X20 + 0x48]
	0x01CBB468 LDR X22, [X22 + 0xBA0]
	0x01CBB46C LDR X21, [X21 + 0x4E8]
	0x01CBB470 BL 0x1B6EA0C
	0x01CBB474 LDR X2, [X20]
	0x01CBB478 MOV X1, X19
	0x01CBB47C MOV X3, X31
	0x01CBB480 MOV X20, X0
	0x01CBB484 BL 0x342E500
	0x01CBB488 LDR X0, [X22]
	0x01CBB48C MOVZ W1, 0x1
	0x01CBB490 BL 0x1B6E868
	0x01CBB494 LDR X8, [X21]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x2293000
	004 Move X0, [X0+2448]
	005 Call 0x1B6F804
	006 Call 0x1B6FA0C
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2294000
	011 Move X0, [X0+4040]
	012 Call 0x1B6F804
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1B6F8E8

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01CBB498 MOV X19, X0
	0x01CBB49C LDR W9, [X8 + 0xE0]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

