Type: AnimalCompany.SurfaceComponent

Method: System.Void OnValidate()

Disassembly:
	0x01CF385C ADRP X0, 0x225C000

ISIL:
	001 Return 

Method: System.Void OnEnable()

Disassembly:
	0x01CF3860 LDR X0, [X0 + 0x720]

ISIL:
No ISIL was generated
Method: System.Void OnDisable()

Disassembly:
	0x01CF3968 LDR X0, [X22]

ISIL:
	001 Return 

Method: System.Void ApplySurface()

Disassembly:
	0x01CF3864 BL 0x1B6E804
	0x01CF3868 MOV X1, X0
	0x01CF386C MOV X0, X19
	0x01CF3870 MOV X2, X31
	0x01CF3874 BL 0x3173C38
	0x01CF3878 ADRP X0, 0x225D000
	0x01CF387C LDR X0, [X0 + 0x6E0]
	0x01CF3880 BL 0x1B6E804
	0x01CF3884 MOV X1, X0
	0x01CF3888 MOV X0, X19
	0x01CF388C BL 0x1B6E8E8
	0x01CF3890 STR X30, [X31 - 0x30]!
	0x01CF3894 STP X22, X21, [X31 + 0x10]
	0x01CF3898 STP X20, X19, [X31 + 0x20]
	0x01CF389C ADRP X21, 0x2530000
	0x01CF38A0 ADRP X22, 0x225D000
	0x01CF38A4 ADRP X20, 0x225D000
	0x01CF38A8 LDRB W8, [X21 + 0x6DB]
	0x01CF38AC LDR X22, [X22 + 0x6E8]
	0x01CF38B0 LDR X20, [X20 + 0x6F0]
	0x01CF38B4 MOV X19, X0
	0x01CF38B8 TBNZ X8, 0x0, 0x1CF38DC
	0x01CF38BC ADRP X0, 0x225D000
	0x01CF38C0 LDR X0, [X0 + 0x6F0]
	0x01CF38C4 BL 0x1B6E7F0
	0x01CF38C8 ADRP X0, 0x225D000
	0x01CF38CC LDR X0, [X0 + 0x6E8]
	0x01CF38D0 BL 0x1B6E7F0
	0x01CF38D4 MOVZ W8, 0x1
	0x01CF38D8 STRB W8, [X21 + 0x6DB]
	0x01CF38DC LDR X0, [X22]
	0x01CF38E0 BL 0x1B6EA0C
	0x01CF38E4 LDR X1, [X20]
	0x01CF38E8 MOV X20, X0
	0x01CF38EC BL 0x2471580
	0x01CF38F0 STR X20, [X19 + 0x50]
	0x01CF38F4 MOV X0, X19
	0x01CF38F8 LDP X20, X19, [X31 + 0x20]
	0x01CF38FC LDP X22, X21, [X31 + 0x10]
	0x01CF3900 MOV X1, X31
	0x01CF3904 LDR X30, [X31], #0x30
	0x01CF3908 B 0x1D6B70C
	0x01CF390C STR D14, [X31 - 0x70]!
	0x01CF3910 STP D13, D12, [X31 + 0x10]
	0x01CF3914 STP D11, D10, [X31 + 0x20]
	0x01CF3918 STP D9, D8, [X31 + 0x30]
	0x01CF391C STP X30, X23, [X31 + 0x40]
	0x01CF3920 STP X22, X21, [X31 + 0x50]
	0x01CF3924 STP X20, X19, [X31 + 0x60]
	0x01CF3928 ADRP X21, 0x2530000
	0x01CF392C ADRP X22, 0x225B000
	0x01CF3930 LDRB W8, [X21 + 0x6DC]
	0x01CF3934 LDR X22, [X22 + 0x1C0]
	0x01CF3938 MOV X20, X1
	0x01CF393C MOV X19, X0
	0x01CF3940 TBNZ X8, 0x0, 0x1CF3958
	0x01CF3944 ADRP X0, 0x225B000
	0x01CF3948 LDR X0, [X0 + 0x1C0]
	0x01CF394C BL 0x1B6E7F0
	0x01CF3950 MOVZ W8, 0x1
	0x01CF3954 STRB W8, [X21 + 0x6DC]
	0x01CF3958 MOVZ W0, 0x1
	0x01CF395C MOV X1, X31
	0x01CF3960 MOVZ W23, 0x1
	0x01CF3964 BL 0x1D29EBC

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2531000
	007 Move X20, 0x225B000
	008 Move W8, [X21+1740]
	009 Move X20, [X20+1144]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x225E000
	016 Move X0, [X0+1560]
	017 Call 0x1B6F7F0
	018 Move X0, 0x225B000
	019 Move X0, [X0+1144]
	020 Call 0x1B6F7F0
	021 Move X0, 0x225E000
	022 Move X0, [X0+1568]
	023 Call 0x1B6F7F0
	024 Move W8, 1
	025 Move [X21+1740], W8
	026 Move X0, [X20]
	027 Move [X31+8], X31
	028 Move X20, [X19+32]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1B6F8F8
	033 Move X0, X20
	034 Move X1, X31
	035 Move X2, X31
	036 Call Object.op_Equality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {74}
	041 Move X8, [X19+32]
	042 Compare X8, 0
	043 JumpIfEqual {74}
	044 Move X9, 0x225E000
	045 Move X9, [X9+1568]
	046 Move X10, [X8]
	047 Move X9, [X9]
	048 Move W12, [X10+304]
	049 Move W11, [X9+304]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X10, [X10+200]
	052 Add X10, X10, X11
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 NotImplemented "Instruction CSEL not yet implemented."
	056 Move X8, 0x225E000
	057 Move X8, [X8+1560]
	058 Add X1, X31, 8
	059 Move X0, X19
	060 Move X2, [X8]
	061 Call 0x2091EE4, X0, X1
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {74}
	066 Compare X20, 0
	067 JumpIfEqual {80}
	068 Move X0, [X31+8]
	069 Compare X0, 0
	070 JumpIfEqual {80}
	071 Move X1, [X20+64]
	072 Move X2, X31
	073 Call Renderer.set_sharedMaterial, X0, X1
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X30, [X31+16]
	077 Move X21, [X31+24]
	078 Add X31, X31, 48
	079 Return 
	080 Call 0x1B6FA1C

Method: System.Void OnDrawGizmos()

Disassembly:
	0x01CF396C LDRB W21, [X20 + 0x24]
	0x01CF3970 LDP S8, S9, [X20 + 0x28]
	0x01CF3974 LDP S14, S13, [X20 + 0x30]
	0x01CF3978 LDP S11, S10, [X20 + 0x38]
	0x01CF397C LDR W8, [X0 + 0xE0]
	0x01CF3980 LDR V12, [X20 + 0x40]
	0x01CF3984 CBNZ W8, 0x1CF3990
	0x01CF3988 BL 0x1B6E8F8
	0x01CF398C LDR X0, [X22]
	0x01CF3990 LDR X8, [X0 + 0xB8]
	0x01CF3994 MOV X0, X19
	0x01CF3998 MOV W1, W21
	0x01CF399C MOV V0.16B, V8.16B
	0x01CF39A0 STRB W23, [X8 + 0x20]
	0x01CF39A4 MOV V1.16B, V9.16B
	0x01CF39A8 MOV V3.16B, V13.16B
	0x01CF39AC MOV V4.16B, V11.16B
	0x01CF39B0 MOV V5.16B, V10.16B
	0x01CF39B4 MOV V6.16B, V12.16B
	0x01CF39B8 LDP X20, X19, [X31 + 0x60]
	0x01CF39BC LDP X22, X21, [X31 + 0x50]
	0x01CF39C0 LDP X30, X23, [X31 + 0x40]
	0x01CF39C4 LDP D9, D8, [X31 + 0x30]
	0x01CF39C8 LDP D11, D10, [X31 + 0x20]
	0x01CF39CC LDP D13, D12, [X31 + 0x10]
	0x01CF39D0 MOV V2.16B, V14.16B
	0x01CF39D4 LDR V14, [X31], #0x70
	0x01CF39D8 B 0x1CF35F4
	0x01CF39DC STR X30, [X31 - 0x30]!
	0x01CF39E0 STP X22, X21, [X31 + 0x10]
	0x01CF39E4 STP X20, X19, [X31 + 0x20]
	0x01CF39E8 ADRP X21, 0x2530000
	0x01CF39EC ADRP X22, 0x225B000
	0x01CF39F0 ADRP X20, 0x225A000
	0x01CF39F4 LDRB W8, [X21 + 0x6DD]
	0x01CF39F8 LDR X22, [X22 + 0xEE0]
	0x01CF39FC LDR X20, [X20 + 0x478]
	0x01CF3A00 MOV X19, X0
	0x01CF3A04 TBNZ X8, 0x0, 0x1CF3A40
	0x01CF3A08 ADRP X0, 0x225B000
	0x01CF3A0C LDR X0, [X0 + 0xEE0]
	0x01CF3A10 BL 0x1B6E7F0
	0x01CF3A14 ADRP X0, 0x225A000
	0x01CF3A18 LDR X0, [X0 + 0x8B8]
	0x01CF3A1C BL 0x1B6E7F0
	0x01CF3A20 ADRP X0, 0x225A000
	0x01CF3A24 LDR X0, [X0 + 0x478]
	0x01CF3A28 BL 0x1B6E7F0
	0x01CF3A2C ADRP X0, 0x225D000
	0x01CF3A30 LDR X0, [X0 + 0x6F8]
	0x01CF3A34 BL 0x1B6E7F0
	0x01CF3A38 MOVZ W8, 0x1
	0x01CF3A3C STRB W8, [X21 + 0x6DD]
	0x01CF3A40 LDR X1, [X22]
	0x01CF3A44 MOV X0, X19
	0x01CF3A48 BL 0x208FDE8
	0x01CF3A4C LDR X8, [X20]
	0x01CF3A50 MOV X20, X0
	0x01CF3A54 LDR W9, [X8 + 0xE0]
	0x01CF3A58 CBNZ W9, 0x1CF3A64
	0x01CF3A5C MOV X0, X8
	0x01CF3A60 BL 0x1B6E8F8
	0x01CF3A64 MOV X0, X20
	0x01CF3A68 MOV X1, X31
	0x01CF3A6C MOV X2, X31
	0x01CF3A70 BL 0x3AA0AF0
	0x01CF3A74 TBZ X0, 0x0, 0x1CF3AE4
	0x01CF3A78 MOV X0, X19
	0x01CF3A7C MOV X1, X31
	0x01CF3A80 BL 0x3A9B0C0
	0x01CF3A84 CBZ X0, 0x1CF3B0C
	0x01CF3A88 MOV X1, X31
	0x01CF3A8C BL 0x3AA0C88
	0x01CF3A90 ADRP X8, 0x225D000
	0x01CF3A94 LDR X8, [X8 + 0x6F8]
	0x01CF3A98 MOV X1, X0
	0x01CF3A9C MOV X2, X31
	0x01CF3AA0 LDR X8, [X8]
	0x01CF3AA4 MOV X0, X8
	0x01CF3AA8 BL 0x3084780
	0x01CF3AAC ADRP X8, 0x225A000
	0x01CF3AB0 LDR X8, [X8 + 0x8B8]
	0x01CF3AB4 MOV X19, X0
	0x01CF3AB8 LDR X8, [X8]
	0x01CF3ABC LDR W9, [X8 + 0xE0]
	0x01CF3AC0 CBNZ W9, 0x1CF3ACC
	0x01CF3AC4 MOV X0, X8
	0x01CF3AC8 BL 0x1B6E8F8
	0x01CF3ACC MOV X0, X19
	0x01CF3AD0 LDP X20, X19, [X31 + 0x20]
	0x01CF3AD4 LDP X22, X21, [X31 + 0x10]
	0x01CF3AD8 MOV X1, X31
	0x01CF3ADC LDR X30, [X31], #0x30
	0x01CF3AE0 B 0x3A6F5F8
	0x01CF3AE4 LDP S0, S1, [X19 + 0x20]
	0x01CF3AE8 MOV X0, X31
	0x01CF3AEC BL 0x3A98CD0
	0x01CF3AF0 CBZ X20, 0x1CF3B0C
	0x01CF3AF4 MOV X0, X20
	0x01CF3AF8 LDP X20, X19, [X31 + 0x20]
	0x01CF3AFC LDP X22, X21, [X31 + 0x10]
	0x01CF3B00 MOV X1, X31
	0x01CF3B04 LDR X30, [X31], #0x30
	0x01CF3B08 B 0x3A65800
	0x01CF3B0C BL 0x1B6EA1C
	0x01CF3B10 FMOV V0.2S, 0x0
	0x01CF3B14 MOV X1, X31
	0x01CF3B18 STR D0, [X0 + 0x20]
	0x01CF3B1C B 0x3A9EEE4
	0x01CF3B20 STP X30, X21, [X31 - 0x20]!
	0x01CF3B24 STP X20, X19, [X31 + 0x10]
	0x01CF3B28 ADRP X21, 0x2530000
	0x01CF3B2C ADRP X20, 0x225A000
	0x01CF3B30 LDRB W8, [X21 + 0x6DE]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], D10
	003 Move [X31+144], D9
	004 Move [X31+152], D8
	005 Move [X31+160], X30
	006 Move [X31+168], X21
	007 Move [X31+176], X20
	008 Move [X31+184], X19
	009 Move X21, 0x2531000
	010 Move X20, 0x225E000
	011 Move W8, [X21+1741]
	012 Move X20, [X20+1576]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x225E000
	019 Move X0, [X0+1576]
	020 Call 0x1B6F7F0
	021 Move X0, 0x225B000
	022 Move X0, [X0+1144]
	023 Call 0x1B6F7F0
	024 Move X0, 0x225E000
	025 Move X0, [X0+1584]
	026 Call 0x1B6F7F0
	027 Move W8, 1
	028 Move [X21+1741], W8
	029 Move X2, [X20]
	030 Add X1, X31, 136
	031 Move X0, X19
	032 Move [X31+136], X31
	033 Call 0x2091EE4, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {133}
	038 Move X8, 0x225B000
	039 Move X8, [X8+1144]
	040 Move X20, [X19+32]
	041 Move X0, [X8]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1B6F8F8
	046 Move X0, X20
	047 Move X1, X31
	048 Move X2, X31
	049 Call Object.op_Equality, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {59}
	054 Move X8, -19173376
	055 Move V3, [X8+2732]
	056 Move S0, 1
	057 Move S1, W31
	058 Move S2, 1
	059 Move X8, [X19+32]
	060 Compare X8, 0
	061 JumpIfEqual {142}
	062 Move S0, [X8+48]
	063 Move S1, [X8+52]
	064 Move S2, [X8+56]
	065 Move S3, [X8+60]
	066 Move X0, X31
	067 Call Gizmos.set_color, X0
	068 Move X0, X19
	069 Move X1, X31
	070 Call Component.get_transform, X0
	071 Compare X0, 0
	072 JumpIfEqual {142}
	073 Add X8, X31, 64
	074 Move X1, X31
	075 Call Transform.get_localToWorldMatrix, X0
	076 Move V0, [X31+64]
	077 Move V1, [X31+80]
	078 Move V2, [X31+96]
	079 Move V3, [X31+112]
	080 Add X0, X31, 0
	081 Move X1, X31
	082 Move [X31], V0
	083 Move [X31+8], V1
	084 Move [X31+32], V2
	085 Move [X31+40], V3
	086 Call Gizmos.set_matrix, X0
	087 Move X0, [X31+136]
	088 Compare X0, 0
	089 JumpIfEqual {142}
	090 Move X1, X31
	091 Call MeshFilter.get_sharedMesh, X0
	092 Move X20, 0x2531000
	093 Move W8, [X20+1087]
	094 Move X19, X0
	095 Compare W8, 0
	096 JumpIfNotEqual {102}
	097 Move X0, 0x225B000
	098 Move X0, [X0+1152]
	099 Call 0x1B6F7F0
	100 Move W8, 1
	101 Move [X20+1087], W8
	102 Move X8, 0x225B000
	103 Move X8, [X8+1152]
	104 Move X9, 0x225E000
	105 Move X0, X31
	106 Move X8, [X8]
	107 Move X9, [X9+1584]
	108 Move X8, [X8+184]
	109 Move X9, [X9]
	110 Move S8, [X8]
	111 Move S9, [X8+4]
	112 Move X9, [X9+184]
	113 Move V10, [X8+8]
	114 Move S0, [X9]
	115 Move S1, [X9+4]
	116 Move S2, [X9+8]
	117 Move S3, [X9+12]
	118 Call quaternion.op_Implicit, X0
	119 Move V4, V0
	120 Move V5, V1
	121 Move V6, V2
	122 Move V7, V3
	123 Move X0, X19
	124 Move V0, V8
	125 Move V1, V9
	126 Move V2, V10
	127 Move V3, V4
	128 Move V4, V5
	129 Move V5, V6
	130 Move V6, V7
	131 Move X1, X31
	132 Call Gizmos.DrawMesh, X0, X1, X2
	133 Move X20, [X31+176]
	134 Move X19, [X31+184]
	135 Move X30, [X31+160]
	136 Move X21, [X31+168]
	137 Move D9, [X31+144]
	138 Move D8, [X31+152]
	139 Move V10, [X31+128]
	140 Add X31, X31, 192
	141 Return 
	142 Call 0x1B6FA1C

Method: System.Void .ctor()

Disassembly:
	0x01CF3B34 LDR X20, [X20 + 0x478]
	0x01CF3B38 MOV X19, X0

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

