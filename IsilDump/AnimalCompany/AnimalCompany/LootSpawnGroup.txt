Type: AnimalCompany.LootSpawnGroup

Method: System.Int16 get_id()

Disassembly:
	0x01DAB9A0 STP X31, X31, [X31 + 0x80]
	0x01DAB9A4 STR X31, [X31 + 0x90]

ISIL:
	001 NotImplemented "Instruction LDRH not yet implemented."
	002 Return X0

Method: System.Void Awake()

Disassembly:
	0x01DAB9A8 MOV X20, X19
	0x01DAB9AC LDR X21, [X20 + 0xA8]!
	0x01DAB9B0 LDR X0, [X22]
	0x01DAB9B4 LDR W8, [X0 + 0xE0]
	0x01DAB9B8 CBNZ W8, 0x1DAB9C0
	0x01DAB9BC BL 0x1C16DFC
	0x01DAB9C0 MOV X0, X21
	0x01DAB9C4 MOV X1, X31
	0x01DAB9C8 MOV X2, X31
	0x01DAB9CC BL 0x3C3883C
	0x01DAB9D0 TBZ X0, 0x0, 0x1DABA0C
	0x01DAB9D4 MOV X0, X19
	0x01DAB9D8 BL 0x1DAB398
	0x01DAB9DC ADRP X8, 0x234C000
	0x01DAB9E0 LDR X8, [X8 + 0x610]
	0x01DAB9E4 MOV W21, W0
	0x01DAB9E8 LDR X8, [X8]
	0x01DAB9EC LDR W9, [X8 + 0xE0]
	0x01DAB9F0 CBNZ W9, 0x1DAB9FC
	0x01DAB9F4 MOV X0, X8
	0x01DAB9F8 BL 0x1C16DFC
	0x01DAB9FC MOV W0, W21
	0x01DABA00 MOV X1, X20
	0x01DABA04 BL 0x1DAAD8C
	0x01DABA08 TBZ X0, 0x0, 0x1DAC05C
	0x01DABA0C MOV X0, X19
	0x01DABA10 BL 0x1DAC1A4
	0x01DABA14 LDR X8, [X19 + 0xA8]
	0x01DABA18 CBZ X8, 0x1DAC104
	0x01DABA1C ADRP X9, 0x234C000
	0x01DABA20 LDR X9, [X9 + 0x7A8]
	0x01DABA24 ADRP X21, 0x234C000
	0x01DABA28 ADRP X26, 0x234C000
	0x01DABA2C ADRP X27, 0x234B000
	0x01DABA30 ADRP X29, 0x234C000
	0x01DABA34 LDR X21, [X21 + 0x7A0]
	0x01DABA38 LDR X26, [X26 + 0x788]
	0x01DABA3C LDR X27, [X27 + 0x398]
	0x01DABA40 LDR X29, [X29 + 0x798]
	0x01DABA44 LDR X0, [X9]
	0x01DABA48 LDR V8, [X8 + 0x20]
	0x01DABA4C BL 0x1C16F10
	0x01DABA50 LDR X1, [X21]
	0x01DABA54 MOV X21, X0
	0x01DABA58 BL 0x24EFEE4
	0x01DABA5C MOV W28, W31
	0x01DABA60 MOV W22, W31
	0x01DABA64 ADD X8, X31, 0x68
	0x01DABA68 MOV X0, X19
	0x01DABA6C BL 0x1DAB458
	0x01DABA70 LDUR V0, [X31 + 0x68]
	0x01DABA74 LDR X8, [X31 + 0x78]
	0x01DABA78 LDR X2, [X26]
	0x01DABA7C ADD X0, X31, 0xA0
	0x01DABA80 MOV W1, W22
	0x01DABA84 STR V0, [X31 + 0xA]
	0x01DABA88 STR X8, [X31 + 0xB0]
	0x01DABA8C BL 0x240D5C0
	0x01DABA90 MOV X23, X0
	0x01DABA94 LDR X0, [X27]
	0x01DABA98 MOV X24, X1
	0x01DABA9C LDR W8, [X0 + 0xE0]
	0x01DABAA0 CBZ W8, 0x1DABAAC
	0x01DABAA4 CBNZ W23, 0x1DABAB4
	0x01DABAA8 B 0x1DABB44
	0x01DABAAC BL 0x1C16DFC
	0x01DABAB0 CBZ W23, 0x1DABB44
	0x01DABAB4 LDR X0, [X19 + 0x38]
	0x01DABAB8 CBZ X0, 0x1DAC104
	0x01DABABC AND X1, X23, 0x0
	0x01DABAC0 ADD X2, X31, 0xC8
	0x01DABAC4 MOV X3, X31
	0x01DABAC8 BL 0x1EA323C
	0x01DABACC TBZ X0, 0x0, 0x1DABB44
	0x01DABAD0 LDR X0, [X31 + 0xC8]
	0x01DABAD4 CBZ X0, 0x1DAC104
	0x01DABAD8 ADRP X8, 0x234C000
	0x01DABADC LDR X8, [X8 + 0x718]
	0x01DABAE0 LDR X1, [X8]
	0x01DABAE4 BL 0x21A3894
	0x01DABAE8 LDR X8, [X19 + 0xA0]
	0x01DABAEC CBZ X8, 0x1DAC104
	0x01DABAF0 ADRP X9, 0x234C000
	0x01DABAF4 LDR X9, [X9 + 0x770]
	0x01DABAF8 MOV X25, X0
	0x01DABAFC AND W1, W24, 0xFF
	0x01DABB00 MOV X0, X8
	0x01DABB04 LDR X2, [X9]
	0x01DABB08 BL 0x301BCCC
	0x01DABB0C CBZ X0, 0x1DAC104
	0x01DABB10 ADRP X8, 0x234C000
	0x01DABB14 LDR X8, [X8 + 0x748]
	0x01DABB18 UBFM X1, X23, 0x20, 0x3F
	0x01DABB1C LDR X2, [X8]
	0x01DABB20 BL 0x2F69714
	0x01DABB24 CBZ X25, 0x1DAC104
	0x01DABB28 MOV X0, X25
	0x01DABB2C MOV X1, X31
	0x01DABB30 BL 0x1E0D16C
	0x01DABB34 SCVTF S0, W0
	0x01DABB38 FSUB S8, S8, S0
	0x01DABB3C ADD W28, W28, 0x1
	0x01DABB40 B 0x1DABB58
	0x01DABB44 CBZ X21, 0x1DAC104
	0x01DABB48 LDR X2, [X29]
	0x01DABB4C MOV X0, X21
	0x01DABB50 MOV W1, W22
	0x01DABB54 BL 0x24F039C
	0x01DABB58 ADD W22, W22, 0x1
	0x01DABB5C CMP W22, 0x40
	0x01DABB60 B.NE 0x1DABA64
	0x01DABB64 FCMP S8, 0x0
	0x01DABB68 B.LE 0x1DAC03C
	0x01DABB6C ADRP X8, 0x234C000
	0x01DABB70 ADRP X27, 0x234C000
	0x01DABB74 ADRP X22, 0x234C000
	0x01DABB78 LDR X8, [X8 + 0x738]
	0x01DABB7C LDR X27, [X27 + 0x728]
	0x01DABB80 LDR X22, [X22 + 0x720]
	0x01DABB84 MOV W29, W31
	0x01DABB88 LDR X0, [X19 + 0xA0]
	0x01DABB8C STR W29, [X31 + 0x1C]
	0x01DABB90 CBZ X0, 0x1DAC104
	0x01DABB94 LDR X1, [X8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x262E000
	007 Move X21, 0x234D000
	008 Move W8, [X20+2760]
	009 Move X21, [X21+1552]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {47}
	015 Move X0, 0x234D000
	016 Move X0, [X0+1560]
	017 Call 0x1C17CF4
	018 Move X0, 0x234D000
	019 Move X0, [X0+1568]
	020 Call 0x1C17CF4
	021 Move X0, 0x234D000
	022 Move X0, [X0+1576]
	023 Call 0x1C17CF4
	024 Move X0, 0x2349000
	025 Move X0, [X0+1928]
	026 Call 0x1C17CF4
	027 Move X0, 0x234D000
	028 Move X0, [X0+1552]
	029 Call 0x1C17CF4
	030 Move X0, 0x2349000
	031 Move X0, [X0+1432]
	032 Call 0x1C17CF4
	033 Move X0, 0x234D000
	034 Move X0, [X0+1584]
	035 Call 0x1C17CF4
	036 Move X0, 0x234D000
	037 Move X0, [X0+1592]
	038 Call 0x1C17CF4
	039 Move X0, 0x234D000
	040 Move X0, [X0+1600]
	041 Call 0x1C17CF4
	042 Move X0, 0x234D000
	043 Move X0, [X0+1608]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X20+2760], W8
	047 Move X0, [X21]
	048 Move [X31+8], X31
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1C17DFC
	053 Move X0, [X21]
	054 Move X8, [X0+184]
	055 Move X0, [X8]
	056 Compare X0, 0
	057 JumpIfEqual {143}
	058 Move X8, 0x234D000
	059 Move X8, [X8+1560]
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Add X2, X31, 8
	062 Move X3, [X8]
	063 Call Dictionary`2<Int16, Object>.TryGetValue, X0, X1, X2
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {121}
	068 Move X8, 0x2349000
	069 Move X8, [X8+1432]
	070 Move X20, [X31+8]
	071 Move X0, [X8]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X20
	077 Move X1, X31
	078 Move X2, X31
	079 Call Object.op_Inequality, X0, X1
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {121}
	084 Move X9, 0x234D000
	085 NotImplemented "Instruction LDRH not yet implemented."
	086 Move X9, [X9+1576]
	087 Add X1, X31, 4
	088 NotImplemented "Instruction STRH not yet implemented."
	089 Move X0, [X9]
	090 Call 0x1C17E04
	091 Move X8, 0x234D000
	092 Move X8, [X8+1600]
	093 Move X9, 0x234D000
	094 Move X9, [X9+1608]
	095 Move X2, X0
	096 Move X8, [X8]
	097 Move X3, X31
	098 Move X1, [X9]
	099 Move X0, X8
	100 Call String.Format, X0, X1, X2
	101 Move X8, 0x2349000
	102 Move X8, [X8+1928]
	103 Move X20, X0
	104 Move X8, [X8]
	105 Move W9, [X8+224]
	106 Compare W9, 0
	107 JumpIfNotEqual {110}
	108 Move X0, X8
	109 Call 0x1C17DFC
	110 Move X8, 0x234D000
	111 Move X9, 0x234D000
	112 Move X8, [X8+1584]
	113 Move X9, [X9+1592]
	114 Move W4, 27
	115 Move X0, X20
	116 Move X2, [X8]
	117 Move X3, [X9]
	118 Move X1, X31
	119 Move X5, X31
	120 Call Log.Error, X0, X1, X2, X3, X4
	121 Move X0, [X21]
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfNotEqual {127}
	125 Call 0x1C17DFC
	126 Move X0, [X21]
	127 Move X8, [X0+184]
	128 Move X0, [X8]
	129 Compare X0, 0
	130 JumpIfEqual {143}
	131 Move X8, 0x234D000
	132 Move X8, [X8+1568]
	133 NotImplemented "Instruction LDRH not yet implemented."
	134 Move X2, X19
	135 Move X3, [X8]
	136 Call Dictionary`2<Int16, Object>.set_Item, X0, X1, X2
	137 Move X20, [X31+32]
	138 Move X19, [X31+40]
	139 Move X30, [X31+16]
	140 Move X21, [X31+24]
	141 Add X31, X31, 48
	142 Return 
	143 Call 0x1C17F20

Method: System.Void OnValidate()

Disassembly:
	0x01DABB98 ADD X8, X31, 0x68
	0x01DABB9C BL 0x301CB58
	0x01DABBA0 LDUR V0, [X31 + 0x68]
	0x01DABBA4 LDR X8, [X31 + 0x78]
	0x01DABBA8 ADRP X29, 0x2348000
	0x01DABBAC MOV W24, W31
	0x01DABBB0 STR V0, [X31 + 0x8]
	0x01DABBB4 STR X8, [X31 + 0x90]
	0x01DABBB8 LDR X29, [X29 + 0x598]
	0x01DABBBC LDR X1, [X27]
	0x01DABBC0 ADD X0, X31, 0x80
	0x01DABBC4 BL 0x2BC4350
	0x01DABBC8 TBZ X0, 0x0, 0x1DABBE8
	0x01DABBCC LDR X8, [X31 + 0x90]
	0x01DABBD0 CBZ X8, 0x1DABF3C
	0x01DABBD4 LDR W8, [X8 + 0x18]
	0x01DABBD8 CMP W8, 0x0
	0x01DABBDC CSET W8, NE
	0x01DABBE0 ORR W24, W24, W8, 0x0
	0x01DABBE4 B 0x1DABBBC
	0x01DABBE8 LDR X1, [X22]
	0x01DABBEC ADD X0, X31, 0x80
	0x01DABBF0 BL 0x2BC434C
	0x01DABBF4 TBZ X24, 0x0, 0x1DAC080
	0x01DABBF8 LDR X8, [X20]
	0x01DABBFC CBZ X8, 0x1DAC104
	0x01DABC00 LDR W1, [X8 + 0x30]
	0x01DABC04 MOV W0, W31
	0x01DABC08 MOV X2, X31
	0x01DABC0C BL 0x3C309A8
	0x01DABC10 LDR X8, [X20]
	0x01DABC14 CBZ X8, 0x1DAC104
	0x01DABC18 MOV W23, W0
	0x01DABC1C MOV W22, W31
	0x01DABC20 LDR X0, [X8 + 0x28]
	0x01DABC24 CBZ X0, 0x1DAC104
	0x01DABC28 CMP W28, 0x3F
	0x01DABC2C B.GT 0x1DABF8C
	0x01DABC30 LDR W8, [X0 + 0x18]
	0x01DABC34 CMP W22, W8
	0x01DABC38 B.GE 0x1DABF8C
	0x01DABC3C ADRP X8, 0x234C000
	0x01DABC40 LDR X8, [X8 + 0x768]
	0x01DABC44 MOV W1, W22
	0x01DABC48 LDR X2, [X8]
	0x01DABC4C BL 0x301BCCC
	0x01DABC50 CBZ X0, 0x1DAC104
	0x01DABC54 LDR X8, [X19 + 0xA0]
	0x01DABC58 CBZ X8, 0x1DAC104
	0x01DABC5C ADRP X9, 0x234C000
	0x01DABC60 LDR W24, [X0 + 0x10]
	0x01DABC64 LDR X9, [X9 + 0x770]
	0x01DABC68 MOV X0, X8
	0x01DABC6C MOV W1, W22
	0x01DABC70 LDR X2, [X9]
	0x01DABC74 BL 0x301BCCC
	0x01DABC78 CBZ X0, 0x1DAC104
	0x01DABC7C SUB W23, W23, W24
	0x01DABC80 CMP W23, 0x0
	0x01DABC84 B.GT 0x1DABDC4
	0x01DABC88 LDR W8, [X0 + 0x18]
	0x01DABC8C CBZ W8, 0x1DABDC4
	0x01DABC90 LDR X0, [X19 + 0xA0]
	0x01DABC94 CBZ X0, 0x1DAC104
	0x01DABC98 ADRP X8, 0x234C000
	0x01DABC9C LDR X8, [X8 + 0x770]
	0x01DABCA0 MOV W1, W22
	0x01DABCA4 LDR X2, [X8]
	0x01DABCA8 BL 0x301BCCC
	0x01DABCAC CBZ X0, 0x1DAC104
	0x01DABCB0 LDR W1, [X0 + 0x18]
	0x01DABCB4 MOV W0, W31
	0x01DABCB8 MOV X2, X31
	0x01DABCBC BL 0x3C309A8
	0x01DABCC0 LDR X8, [X19 + 0xA0]
	0x01DABCC4 CBZ X8, 0x1DAC104
	0x01DABCC8 ADRP X9, 0x234C000
	0x01DABCCC LDR X9, [X9 + 0x770]
	0x01DABCD0 MOV W25, W0
	0x01DABCD4 MOV X0, X8
	0x01DABCD8 MOV W1, W22
	0x01DABCDC LDR X2, [X9]
	0x01DABCE0 BL 0x301BCCC
	0x01DABCE4 CBZ X0, 0x1DAC104
	0x01DABCE8 ADRP X8, 0x234C000
	0x01DABCEC LDR X8, [X8 + 0x778]
	0x01DABCF0 MOV W1, W25
	0x01DABCF4 LDR X2, [X8]
	0x01DABCF8 BL 0x2F67C1C
	0x01DABCFC LDR X8, [X20]
	0x01DABD00 CBZ X8, 0x1DAC104
	0x01DABD04 MOV W24, W0
	0x01DABD08 LDR X0, [X8 + 0x28]
	0x01DABD0C CBZ X0, 0x1DAC104
	0x01DABD10 ADRP X8, 0x234C000
	0x01DABD14 LDR X8, [X8 + 0x768]
	0x01DABD18 MOV W1, W22
	0x01DABD1C LDR X2, [X8]
	0x01DABD20 BL 0x301BCCC
	0x01DABD24 CBZ X0, 0x1DAC104
	0x01DABD28 LDR X0, [X0 + 0x18]
	0x01DABD2C CBZ X0, 0x1DAC104
	0x01DABD30 ADRP X8, 0x234C000
	0x01DABD34 LDR X8, [X8 + 0x760]
	0x01DABD38 AND W24, W24, 0xFF
	0x01DABD3C MOV W1, W24
	0x01DABD40 LDR X2, [X8]
	0x01DABD44 BL 0x301BCCC
	0x01DABD48 LDR X8, [X19 + 0xA0]
	0x01DABD4C CBZ X8, 0x1DAC104
	0x01DABD50 ADRP X9, 0x234C000
	0x01DABD54 LDR X9, [X9 + 0x770]
	0x01DABD58 MOV X26, X0
	0x01DABD5C MOV X0, X8
	0x01DABD60 MOV W1, W22
	0x01DABD64 LDR X2, [X9]
	0x01DABD68 BL 0x301BCCC
	0x01DABD6C CBZ X0, 0x1DAC104
	0x01DABD70 ADRP X8, 0x234C000
	0x01DABD74 LDR X8, [X8 + 0x740]
	0x01DABD78 MOV W1, W25
	0x01DABD7C LDR X2, [X8]
	0x01DABD80 BL 0x2F69998
	0x01DABD84 LDR X8, [X20]
	0x01DABD88 CBZ X8, 0x1DAC104

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X21, 0x262E000
	012 Move X20, 0x2349000
	013 Move W8, [X21+2761]
	014 Move X20, [X20+2416]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {43}
	020 Move X0, 0x2349000
	021 Move X0, [X0+2416]
	022 Call 0x1C17CF4
	023 Move X0, 0x234D000
	024 Move X0, [X0+1616]
	025 Call 0x1C17CF4
	026 Move X0, 0x234D000
	027 Move X0, [X0+1624]
	028 Call 0x1C17CF4
	029 Move X0, 0x234D000
	030 Move X0, [X0+1632]
	031 Call 0x1C17CF4
	032 Move X0, 0x234D000
	033 Move X0, [X0+1640]
	034 Call 0x1C17CF4
	035 Move X0, 0x234D000
	036 Move X0, [X0+1648]
	037 Call 0x1C17CF4
	038 Move X0, 0x2349000
	039 Move X0, [X0+1432]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X21+2761], W8
	043 Move X0, [X20]
	044 Move [X31], X31
	045 Move [X31+8], X31
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, X31
	051 Call Application.get_isPlaying
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {137}
	056 Move X23, 0x2349000
	057 Move X23, [X23+1432]
	058 Move X0, [X23]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X8, 0x234D000
	064 Move X8, [X8+1648]
	065 Move W0, 1
	066 Move X1, [X8]
	067 Call 0x222E2AC, X0
	068 Move X8, 0x234D000
	069 Move X8, [X8+1640]
	070 Move X21, X0
	071 Move X8, [X8]
	072 Move X0, X8
	073 Call 0x1C17F10
	074 Move X8, 0x234D000
	075 Move X8, [X8+1632]
	076 Move X20, X0
	077 Move X1, [X8]
	078 Call HashSet`1<Int16>..ctor, X0
	079 Compare X21, 0
	080 JumpIfEqual {148}
	081 Move X8, [X21+24]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X26, 0x234D000
	084 Move X26, [X26+1616]
	085 Move X24, X31
	086 And X8, X8, 0
	087 Add X25, X21, 32
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X0, [X23]
	090 Move X22, [X25]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X0, X22
	096 Move X1, X19
	097 Move X2, X31
	098 Call Object.op_Equality, X0, X1
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {111}
	103 Compare X22, 0
	104 JumpIfEqual {148}
	105 Compare X20, 0
	106 JumpIfEqual {148}
	107 Move X2, [X26]
	108 NotImplemented "Instruction LDRH not yet implemented."
	109 Move X0, X20
	110 Call HashSet`1<Int16>.Add, X0, X1
	111 Move W8, [X21+24]
	112 Add X24, X24, 1
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X22, 0x234D000
	115 NotImplemented "Instruction LDRH not yet implemented."
	116 Move X22, [X22+1624]
	117 And W31, W21, 0xFFFF
	118 Compare X20, 0
	119 JumpIfEqual {148}
	120 Move X2, [X22]
	121 Move X0, X20
	122 Move W1, W21
	123 Call HashSet`1<Int16>.Contains, X0, X1
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfNotEqual {136}
	128 Move X0, X31
	129 Call Guid.NewGuid
	130 Move [X31], X0
	131 Move [X31+8], X1
	132 Add X0, X31, 0
	133 Move X1, X31
	134 Call Guid.GetHashCode, X0
	135 Move W21, W0
	136 NotImplemented "Instruction STRH not yet implemented."
	137 Move X20, [X31+80]
	138 Move X19, [X31+88]
	139 Move X22, [X31+64]
	140 Move X21, [X31+72]
	141 Move X24, [X31+48]
	142 Move X23, [X31+56]
	143 Move X26, [X31+32]
	144 Move X25, [X31+40]
	145 Move X30, [X31+16]
	146 Add X31, X31, 96
	147 Return 
	148 Call 0x1C17F20
	149 Call 0x1C17F28

Method: System.Boolean TryGetSpawnGroup(System.Int16 id, out AnimalCompany.LootSpawnGroup spawnGroup)

Disassembly:
	0x01DABD8C LDR X0, [X8 + 0x38]
	0x01DABD90 LDR V0, [X8 + 0x40]
	0x01DABD94 BL 0x1DAAE2C
	0x01DABD98 LDR X8, [X29]
	0x01DABD9C MOV X25, X0
	0x01DABDA0 LDR W9, [X8 + 0xE0]
	0x01DABDA4 CBNZ W9, 0x1DABDB0
	0x01DABDA8 MOV X0, X8
	0x01DABDAC BL 0x1C16DFC
	0x01DABDB0 MOV X0, X25
	0x01DABDB4 MOV X1, X31
	0x01DABDB8 MOV X2, X31
	0x01DABDBC BL 0x3C3883C
	0x01DABDC0 TBZ X0, 0x0, 0x1DABDD4
	0x01DABDC4 LDR X8, [X20]
	0x01DABDC8 ADD W22, W22, 0x1
	0x01DABDCC CBNZ X8, 0x1DABC20
	0x01DABDD0 B 0x1DAC104
	0x01DABDD4 CBZ X25, 0x1DAC104
	0x01DABDD8 LDR X23, [X19 + 0x38]
	0x01DABDDC MOV X0, X25
	0x01DABDE0 MOV X1, X31
	0x01DABDE4 BL 0x1E0D0E4
	0x01DABDE8 LDR W29, [X31 + 0x1C]
	0x01DABDEC CBZ X0, 0x1DAC104
	0x01DABDF0 CBZ X26, 0x1DAC104
	0x01DABDF4 LDR X8, [X0 + 0x38]
	0x01DABDF8 MOV X0, X26
	0x01DABDFC MOV X1, X31
	0x01DABE00 STR X8, [X31 + 0x10]
	0x01DABE04 BL 0x1E0D53C
	0x01DABE08 ADRP X8, 0x234B000
	0x01DABE0C LDR X8, [X8 + 0xB58]
	0x01DABE10 ADD X0, X31, 0x58
	0x01DABE14 STP X31, X31, [X31 + 0x58]
	0x01DABE18 LDR X1, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x262E000
	007 Move X21, 0x234D000
	008 Move W8, [X22+2762]
	009 Move X21, [X21+1552]
	010 Move X19, X1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x234D000
	017 Move X0, [X0+1560]
	018 Call 0x1C17CF4
	019 Move X0, 0x234D000
	020 Move X0, [X0+1552]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2762], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Move X0, [X8]
	032 Compare X0, 0
	033 JumpIfEqual {46}
	034 Move X8, 0x234D000
	035 Move X8, [X8+1560]
	036 Move W1, W20
	037 Move X2, X19
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X3, [X8]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Call Dictionary`2<Int16, Object>.TryGetValue, X0, X1, X2
	045 Return X0
	046 Call 0x1C17F20

Method: AnimalCompany.GameGen.Item PickRandomItem()

Disassembly:
	0x01DABE1C BL 0x243BFEC
	0x01DABE20 MOV X0, X26
	0x01DABE24 MOV X1, X31
	0x01DABE28 BL 0x3C32E90

ISIL:
	001 Move X8, [X0+56]
	002 Move V0, [X0+64]
	003 Move X0, X8

Method: System.Void .ctor()

Disassembly:
	0x01DABFD8 LDR X9, [X9 + 0x710]
	0x01DABFDC MOV X2, X0

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x01DABFE0 MOV X0, X20
	0x01DABFE4 LDR X1, [X8]
	0x01DABFE8 LDR X3, [X9]
	0x01DABFEC BL 0x2AA5098
	0x01DABFF0 ADRP X8, 0x2348000
	0x01DABFF4 LDR X8, [X8 + 0x788]
	0x01DABFF8 LDR X0, [X8]
	0x01DABFFC LDR W8, [X0 + 0xE0]
	0x01DAC000 CBNZ W8, 0x1DAC008
	0x01DAC004 BL 0x1C16DFC
	0x01DAC008 ADRP X8, 0x234B000
	0x01DAC00C ADRP X9, 0x234B000
	0x01DAC010 ADRP X10, 0x234B000
	0x01DAC014 LDR X8, [X8 + 0x7B8]
	0x01DAC018 LDR X9, [X9 + 0x710]
	0x01DAC01C LDR X10, [X10 + 0x7C8]
	0x01DAC020 MOVZ W4, 0xCD
	0x01DAC024 LDR X0, [X8]
	0x01DAC028 LDR X2, [X9]
	0x01DAC02C LDR X3, [X10]
	0x01DAC030 MOV X1, X20
	0x01DAC034 MOV X5, X31
	0x01DAC038 BL 0x35C2200
	0x01DAC03C LDR X0, [X19 + 0x38]
	0x01DAC040 MOVZ W8, 0x43340000
	0x01DAC044 FMOV S0, W8
	0x01DAC048 MOV X1, X31
	0x01DAC04C BL 0x1E91E68
	0x01DAC050 AND X1, X0, 0x0
	0x01DAC054 MOV X0, X19
	0x01DAC058 BL 0x1DAB570
	0x01DAC05C LDP X20, X19, [X31 + 0x120]
	0x01DAC060 LDP X22, X21, [X31 + 0x110]
	0x01DAC064 LDP X24, X23, [X31 + 0x100]
	0x01DAC068 LDP X26, X25, [X31 + 0xF0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x262E000
	007 Move X22, 0x234D000
	008 Move X19, 0x234D000
	009 Move X20, 0x234D000
	010 Move W8, [X21+2763]
	011 Move X22, [X22+1664]
	012 Move X19, [X19+1672]
	013 Move X20, [X20+1552]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x234C000
	019 Move X0, [X0+1672]
	020 Call 0x1C17CF4
	021 Move X0, 0x234C000
	022 Move X0, [X0+1664]
	023 Call 0x1C17CF4
	024 Move X0, 0x234C000
	025 Move X0, [X0+1552]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2763], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call Dictionary`2<Int16, Object>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+48]
	042 Return 

