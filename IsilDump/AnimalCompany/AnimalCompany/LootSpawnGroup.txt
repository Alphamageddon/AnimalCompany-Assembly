Type: AnimalCompany.LootSpawnGroup

Method: System.Int16 get_id()

Disassembly:
	0x01CB1AAC CMP W22, 0x40
	0x01CB1AB0 B.NE 0x1CB19B4

ISIL:
	001 NotImplemented "Instruction LDRH not yet implemented."
	002 Return X0

Method: System.Void Awake()

Disassembly:
	0x01CB1AB4 FCMP S8, 0x0
	0x01CB1AB8 B.LE 0x1CB1F7C
	0x01CB1ABC ADRP X8, 0x229D000
	0x01CB1AC0 ADRP X27, 0x229D000
	0x01CB1AC4 ADRP X22, 0x229D000
	0x01CB1AC8 LDR X8, [X8 + 0xC30]
	0x01CB1ACC LDR X27, [X27 + 0xC20]
	0x01CB1AD0 LDR X22, [X22 + 0xC18]
	0x01CB1AD4 MOV W29, W31
	0x01CB1AD8 LDR X0, [X19 + 0xA0]
	0x01CB1ADC STR W29, [X31 + 0x1C]
	0x01CB1AE0 CBZ X0, 0x1CB2044
	0x01CB1AE4 LDR X1, [X8]
	0x01CB1AE8 ADD X8, X31, 0x68
	0x01CB1AEC BL 0x2E470E0
	0x01CB1AF0 LDUR V0, [X31 + 0x68]
	0x01CB1AF4 LDR X8, [X31 + 0x78]
	0x01CB1AF8 ADRP X29, 0x229C000
	0x01CB1AFC MOV W24, W31
	0x01CB1B00 STR V0, [X31 + 0x8]
	0x01CB1B04 STR X8, [X31 + 0x90]
	0x01CB1B08 LDR X29, [X29 + 0x478]
	0x01CB1B0C LDR X1, [X27]
	0x01CB1B10 ADD X0, X31, 0x80
	0x01CB1B14 BL 0x2A14F30
	0x01CB1B18 TBZ X0, 0x0, 0x1CB1B38
	0x01CB1B1C LDR X8, [X31 + 0x90]
	0x01CB1B20 CBZ X8, 0x1CB1E7C
	0x01CB1B24 LDR W8, [X8 + 0x18]
	0x01CB1B28 CMP W8, 0x0
	0x01CB1B2C CSET W8, NE
	0x01CB1B30 ORR W24, W24, W8, 0x0
	0x01CB1B34 B 0x1CB1B0C
	0x01CB1B38 LDR X1, [X22]
	0x01CB1B3C ADD X0, X31, 0x80
	0x01CB1B40 BL 0x2A14F2C
	0x01CB1B44 TBZ X24, 0x0, 0x1CB1FC0
	0x01CB1B48 LDR X8, [X20]
	0x01CB1B4C CBZ X8, 0x1CB2044
	0x01CB1B50 LDR W1, [X8 + 0x30]
	0x01CB1B54 MOV W0, W31
	0x01CB1B58 MOV X2, X31
	0x01CB1B5C BL 0x3A98D10
	0x01CB1B60 LDR X8, [X20]
	0x01CB1B64 CBZ X8, 0x1CB2044
	0x01CB1B68 MOV W23, W0
	0x01CB1B6C MOV W22, W31
	0x01CB1B70 LDR X0, [X8 + 0x28]
	0x01CB1B74 CBZ X0, 0x1CB2044
	0x01CB1B78 CMP W28, 0x3F
	0x01CB1B7C B.GT 0x1CB1ECC
	0x01CB1B80 LDR W8, [X0 + 0x18]
	0x01CB1B84 CMP W22, W8
	0x01CB1B88 B.GE 0x1CB1ECC
	0x01CB1B8C ADRP X8, 0x229D000
	0x01CB1B90 LDR X8, [X8 + 0xC60]
	0x01CB1B94 MOV W1, W22
	0x01CB1B98 LDR X2, [X8]
	0x01CB1B9C BL 0x2E46254
	0x01CB1BA0 CBZ X0, 0x1CB2044
	0x01CB1BA4 LDR X8, [X19 + 0xA0]
	0x01CB1BA8 CBZ X8, 0x1CB2044
	0x01CB1BAC ADRP X9, 0x229D000
	0x01CB1BB0 LDR W24, [X0 + 0x10]
	0x01CB1BB4 LDR X9, [X9 + 0xC68]
	0x01CB1BB8 MOV X0, X8
	0x01CB1BBC MOV W1, W22
	0x01CB1BC0 LDR X2, [X9]
	0x01CB1BC4 BL 0x2E46254
	0x01CB1BC8 CBZ X0, 0x1CB2044
	0x01CB1BCC SUB W23, W23, W24
	0x01CB1BD0 CMP W23, 0x0
	0x01CB1BD4 B.GT 0x1CB1D08
	0x01CB1BD8 LDR W8, [X0 + 0x18]
	0x01CB1BDC CBZ W8, 0x1CB1D08
	0x01CB1BE0 LDR X0, [X19 + 0xA0]
	0x01CB1BE4 CBZ X0, 0x1CB2044
	0x01CB1BE8 ADRP X8, 0x229D000
	0x01CB1BEC LDR X8, [X8 + 0xC68]
	0x01CB1BF0 MOV W1, W22
	0x01CB1BF4 LDR X2, [X8]
	0x01CB1BF8 BL 0x2E46254
	0x01CB1BFC CBZ X0, 0x1CB2044
	0x01CB1C00 LDR W1, [X0 + 0x18]
	0x01CB1C04 MOV W0, W31
	0x01CB1C08 MOV X2, X31
	0x01CB1C0C BL 0x3A98D10
	0x01CB1C10 LDR X8, [X19 + 0xA0]
	0x01CB1C14 CBZ X8, 0x1CB2044
	0x01CB1C18 ADRP X9, 0x229D000
	0x01CB1C1C LDR X9, [X9 + 0xC68]
	0x01CB1C20 MOV W25, W0
	0x01CB1C24 MOV X0, X8
	0x01CB1C28 MOV W1, W22
	0x01CB1C2C LDR X2, [X9]
	0x01CB1C30 BL 0x2E46254
	0x01CB1C34 CBZ X0, 0x1CB2044
	0x01CB1C38 ADRP X8, 0x229D000
	0x01CB1C3C LDR X8, [X8 + 0xC70]
	0x01CB1C40 MOV W1, W25
	0x01CB1C44 LDR X2, [X8]
	0x01CB1C48 BL 0x2D90504
	0x01CB1C4C LDR X8, [X20]
	0x01CB1C50 CBZ X8, 0x1CB2044
	0x01CB1C54 MOV W24, W0
	0x01CB1C58 LDR X0, [X8 + 0x28]
	0x01CB1C5C CBZ X0, 0x1CB2044
	0x01CB1C60 ADRP X8, 0x229D000
	0x01CB1C64 LDR X8, [X8 + 0xC60]
	0x01CB1C68 MOV W1, W22
	0x01CB1C6C LDR X2, [X8]
	0x01CB1C70 BL 0x2E46254
	0x01CB1C74 CBZ X0, 0x1CB2044
	0x01CB1C78 LDR X0, [X0 + 0x18]
	0x01CB1C7C CBZ X0, 0x1CB2044
	0x01CB1C80 ADRP X8, 0x229D000
	0x01CB1C84 LDR X8, [X8 + 0xC58]
	0x01CB1C88 AND W24, W24, 0xFF
	0x01CB1C8C MOV W1, W24
	0x01CB1C90 LDR X2, [X8]
	0x01CB1C94 BL 0x2E46254
	0x01CB1C98 LDR X8, [X19 + 0xA0]
	0x01CB1C9C CBZ X8, 0x1CB2044
	0x01CB1CA0 ADRP X9, 0x229D000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2573000
	007 Move X21, 0x229E000
	008 Move W8, [X20+1214]
	009 Move X21, [X21+2824]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {47}
	015 Move X0, 0x229E000
	016 Move X0, [X0+2832]
	017 Call 0x1B6F7F0
	018 Move X0, 0x229E000
	019 Move X0, [X0+2840]
	020 Call 0x1B6F7F0
	021 Move X0, 0x229E000
	022 Move X0, [X0+2848]
	023 Call 0x1B6F7F0
	024 Move X0, 0x229D000
	025 Move X0, [X0+1576]
	026 Call 0x1B6F7F0
	027 Move X0, 0x229E000
	028 Move X0, [X0+2824]
	029 Call 0x1B6F7F0
	030 Move X0, 0x229D000
	031 Move X0, [X0+1144]
	032 Call 0x1B6F7F0
	033 Move X0, 0x229E000
	034 Move X0, [X0+2856]
	035 Call 0x1B6F7F0
	036 Move X0, 0x229E000
	037 Move X0, [X0+2864]
	038 Call 0x1B6F7F0
	039 Move X0, 0x229E000
	040 Move X0, [X0+2872]
	041 Call 0x1B6F7F0
	042 Move X0, 0x229E000
	043 Move X0, [X0+2880]
	044 Call 0x1B6F7F0
	045 Move W8, 1
	046 Move [X20+1214], W8
	047 Move X0, [X21]
	048 Move [X31+8], X31
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1B6F8F8
	053 Move X0, [X21]
	054 Move X8, [X0+184]
	055 Move X0, [X8]
	056 Compare X0, 0
	057 JumpIfEqual {143}
	058 Move X8, 0x229E000
	059 Move X8, [X8+2832]
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Add X2, X31, 8
	062 Move X3, [X8]
	063 Call Dictionary`2<Int16, Object>.TryGetValue, X0, X1, X2
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {121}
	068 Move X8, 0x229D000
	069 Move X8, [X8+1144]
	070 Move X20, [X31+8]
	071 Move X0, [X8]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1B6F8F8
	076 Move X0, X20
	077 Move X1, X31
	078 Move X2, X31
	079 Call Object.op_Inequality, X0, X1
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {121}
	084 Move X9, 0x229E000
	085 NotImplemented "Instruction LDRH not yet implemented."
	086 Move X9, [X9+2848]
	087 Add X1, X31, 4
	088 NotImplemented "Instruction STRH not yet implemented."
	089 Move X0, [X9]
	090 Call 0x1B6F900
	091 Move X8, 0x229E000
	092 Move X8, [X8+2872]
	093 Move X9, 0x229E000
	094 Move X9, [X9+2880]
	095 Move X2, X0
	096 Move X8, [X8]
	097 Move X3, X31
	098 Move X1, [X9]
	099 Move X0, X8
	100 Call String.Format, X0, X1, X2
	101 Move X8, 0x229D000
	102 Move X8, [X8+1576]
	103 Move X20, X0
	104 Move X8, [X8]
	105 Move W9, [X8+224]
	106 Compare W9, 0
	107 JumpIfNotEqual {110}
	108 Move X0, X8
	109 Call 0x1B6F8F8
	110 Move X8, 0x229E000
	111 Move X9, 0x229E000
	112 Move X8, [X8+2856]
	113 Move X9, [X9+2864]
	114 Move W4, 27
	115 Move X0, X20
	116 Move X2, [X8]
	117 Move X3, [X9]
	118 Move X1, X31
	119 Move X5, X31
	120 Call Log.Error, X0, X1, X2, X3, X4
	121 Move X0, [X21]
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfNotEqual {127}
	125 Call 0x1B6F8F8
	126 Move X0, [X21]
	127 Move X8, [X0+184]
	128 Move X0, [X8]
	129 Compare X0, 0
	130 JumpIfEqual {143}
	131 Move X8, 0x229E000
	132 Move X8, [X8+2840]
	133 NotImplemented "Instruction LDRH not yet implemented."
	134 Move X2, X19
	135 Move X3, [X8]
	136 Call Dictionary`2<Int16, Object>.set_Item, X0, X1, X2
	137 Move X20, [X31+32]
	138 Move X19, [X31+40]
	139 Move X30, [X31+16]
	140 Move X21, [X31+24]
	141 Add X31, X31, 48
	142 Return 
	143 Call 0x1B6FA1C

Method: System.Void OnValidate()

Disassembly:
	0x01CB1CA4 LDR X9, [X9 + 0xC68]
	0x01CB1CA8 MOV X26, X0
	0x01CB1CAC MOV X0, X8
	0x01CB1CB0 MOV W1, W22
	0x01CB1CB4 LDR X2, [X9]
	0x01CB1CB8 BL 0x2E46254
	0x01CB1CBC CBZ X0, 0x1CB2044
	0x01CB1CC0 ADRP X8, 0x229D000
	0x01CB1CC4 LDR X8, [X8 + 0xC38]
	0x01CB1CC8 MOV W1, W25
	0x01CB1CCC LDR X2, [X8]
	0x01CB1CD0 BL 0x2D92280
	0x01CB1CD4 MOV X0, X19
	0x01CB1CD8 BL 0x1CB2394
	0x01CB1CDC LDR X8, [X29]
	0x01CB1CE0 MOV X25, X0
	0x01CB1CE4 LDR W9, [X8 + 0xE0]
	0x01CB1CE8 CBNZ W9, 0x1CB1CF4
	0x01CB1CEC MOV X0, X8
	0x01CB1CF0 BL 0x1B6E8F8
	0x01CB1CF4 MOV X0, X25
	0x01CB1CF8 MOV X1, X31
	0x01CB1CFC MOV X2, X31
	0x01CB1D00 BL 0x3AA0AF0
	0x01CB1D04 TBZ X0, 0x0, 0x1CB1D18
	0x01CB1D08 LDR X8, [X20]
	0x01CB1D0C ADD W22, W22, 0x1
	0x01CB1D10 CBNZ X8, 0x1CB1B70
	0x01CB1D14 B 0x1CB2044
	0x01CB1D18 CBZ X25, 0x1CB2044
	0x01CB1D1C LDR X0, [X25 + 0x20]
	0x01CB1D20 LDR W29, [X31 + 0x1C]
	0x01CB1D24 CBZ X0, 0x1CB2044
	0x01CB1D28 LDR X23, [X19 + 0x38]
	0x01CB1D2C MOV X1, X31
	0x01CB1D30 BL 0x3A9B0C0
	0x01CB1D34 STR X0, [X31 + 0x10]
	0x01CB1D38 CBZ X26, 0x1CB2044
	0x01CB1D3C MOV X0, X26
	0x01CB1D40 MOV X1, X31
	0x01CB1D44 BL 0x1CF9F6C
	0x01CB1D48 ADRP X8, 0x229D000
	0x01CB1D4C LDR X8, [X8 + 0x248]
	0x01CB1D50 ADD X0, X31, 0x58
	0x01CB1D54 STP X31, X31, [X31 + 0x58]
	0x01CB1D58 LDR X1, [X8]
	0x01CB1D5C BL 0x22DC630
	0x01CB1D60 MOV X0, X26
	0x01CB1D64 MOV X1, X31
	0x01CB1D68 BL 0x3A9B084
	0x01CB1D6C CBZ X0, 0x1CB2044
	0x01CB1D70 MOV X1, X31
	0x01CB1D74 BL 0x3AA5FBC
	0x01CB1D78 ADRP X8, 0x229D000
	0x01CB1D7C LDR X8, [X8 + 0x250]
	0x01CB1D80 ADD X0, X31, 0x40
	0x01CB1D84 STP X31, X31, [X31 + 0x40]
	0x01CB1D88 STR W31, [X31 + 0x50]
	0x01CB1D8C LDR X1, [X8]
	0x01CB1D90 BL 0x22D82D0
	0x01CB1D94 CBZ X23, 0x1CB2044
	0x01CB1D98 LDR V0, [X31 + 0x4]
	0x01CB1D9C LDR W8, [X31 + 0x50]
	0x01CB1DA0 LDP X2, X3, [X31 + 0x58]
	0x01CB1DA4 LDR X1, [X31 + 0x10]
	0x01CB1DA8 ADD X4, X31, 0x20
	0x01CB1DAC MOV X0, X23
	0x01CB1DB0 MOV X5, X31
	0x01CB1DB4 MOV X6, X31
	0x01CB1DB8 MOV W7, W31
	0x01CB1DBC STR V0, [X31 + 0x2]
	0x01CB1DC0 STR W8, [X31 + 0x30]
	0x01CB1DC4 STR X31, [X31]
	0x01CB1DC8 BL 0x1D98EB8
	0x01CB1DCC CBZ X0, 0x1CB2044
	0x01CB1DD0 LDR X8, [X0 + 0x20]
	0x01CB1DD4 CBZ X8, 0x1CB1DE4
	0x01CB1DD8 LDR W23, [X8]
	0x01CB1DDC CBNZ X21, 0x1CB1DEC
	0x01CB1DE0 B 0x1CB2044
	0x01CB1DE4 MOV X23, X31
	0x01CB1DE8 CBZ X21, 0x1CB2044
	0x01CB1DEC ADRP X8, 0x229D000
	0x01CB1DF0 LDR X8, [X8 + 0xC88]
	0x01CB1DF4 MOV X0, X21
	0x01CB1DF8 BFM W29, W22, 0x0, 0x7
	0x01CB1DFC LDR X1, [X8]
	0x01CB1E00 BL 0x23677C8
	0x01CB1E04 MOV W22, W0
	0x01CB1E08 ADD X8, X31, 0x68
	0x01CB1E0C MOV X0, X19
	0x01CB1E10 BL 0x1CB13A8
	0x01CB1E14 ADRP X9, 0x229D000
	0x01CB1E18 LDUR V0, [X31 + 0x68]
	0x01CB1E1C LDR X8, [X31 + 0x78]
	0x01CB1E20 LDR X9, [X9 + 0xC78]
	0x01CB1E24 BFM X23, X24, 0x20, 0x7
	0x01CB1E28 MOV W3, W29
	0x01CB1E2C ADD X0, X31, 0xA0
	0x01CB1E30 LDR X4, [X9]
	0x01CB1E34 MOV W1, W22
	0x01CB1E38 MOV X2, X23
	0x01CB1E3C STR V0, [X31 + 0xA]
	0x01CB1E40 STR X8, [X31 + 0xB0]
	0x01CB1E44 BL 0x22AF8F8
	0x01CB1E48 MOV X0, X25
	0x01CB1E4C MOV X1, X31
	0x01CB1E50 ADD W28, W28, 0x1
	0x01CB1E54 BL 0x1CF9B94
	0x01CB1E58 ADRP X22, 0x229D000
	0x01CB1E5C ADRP X8, 0x229D000
	0x01CB1E60 LDR X22, [X22 + 0xC18]
	0x01CB1E64 LDR X8, [X8 + 0xC30]
	0x01CB1E68 SCVTF S0, W0
	0x01CB1E6C FSUB S8, S8, S0
	0x01CB1E70 FCMP S8, 0x0
	0x01CB1E74 B.GT 0x1CB1AD8
	0x01CB1E78 B 0x1CB1F7C
	0x01CB1E7C BL 0x1B6EA1C
	0x01CB1E80 B 0x1CB2048
	0x01CB1E84 B 0x1CB1E88
	0x01CB1E88 MOV X23, X0
	0x01CB1E8C CMP W1, 0x1
	0x01CB1E90 B.NE 0x1CB2048
	0x01CB1E94 MOV X0, X23

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X21, 0x2573000
	012 Move X20, 0x229D000
	013 Move W8, [X21+1215]
	014 Move X20, [X20+2048]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {43}
	020 Move X0, 0x229D000
	021 Move X0, [X0+2048]
	022 Call 0x1B6F7F0
	023 Move X0, 0x229E000
	024 Move X0, [X0+2888]
	025 Call 0x1B6F7F0
	026 Move X0, 0x229E000
	027 Move X0, [X0+2896]
	028 Call 0x1B6F7F0
	029 Move X0, 0x229E000
	030 Move X0, [X0+2904]
	031 Call 0x1B6F7F0
	032 Move X0, 0x229E000
	033 Move X0, [X0+2912]
	034 Call 0x1B6F7F0
	035 Move X0, 0x229E000
	036 Move X0, [X0+2920]
	037 Call 0x1B6F7F0
	038 Move X0, 0x229D000
	039 Move X0, [X0+1144]
	040 Call 0x1B6F7F0
	041 Move W8, 1
	042 Move [X21+1215], W8
	043 Move X0, [X20]
	044 Move [X31], X31
	045 Move [X31+8], X31
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1B6F8F8
	050 Move X0, X31
	051 Call Application.get_isPlaying
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {137}
	056 Move X23, 0x229D000
	057 Move X23, [X23+1144]
	058 Move X0, [X23]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1B6F8F8
	063 Move X8, 0x229E000
	064 Move X8, [X8+2920]
	065 Move W0, 1
	066 Move X1, [X8]
	067 Call 0x2115C74, X0
	068 Move X8, 0x229E000
	069 Move X8, [X8+2912]
	070 Move X21, X0
	071 Move X8, [X8]
	072 Move X0, X8
	073 Call 0x1B6FA0C
	074 Move X8, 0x229E000
	075 Move X8, [X8+2904]
	076 Move X20, X0
	077 Move X1, [X8]
	078 Call HashSet`1<Int16>..ctor, X0
	079 Compare X21, 0
	080 JumpIfEqual {148}
	081 Move X8, [X21+24]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X26, 0x229E000
	084 Move X26, [X26+2888]
	085 Move X24, X31
	086 And X8, X8, 0
	087 Add X25, X21, 32
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X0, [X23]
	090 Move X22, [X25]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1B6F8F8
	095 Move X0, X22
	096 Move X1, X19
	097 Move X2, X31
	098 Call Object.op_Equality, X0, X1
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {111}
	103 Compare X22, 0
	104 JumpIfEqual {148}
	105 Compare X20, 0
	106 JumpIfEqual {148}
	107 Move X2, [X26]
	108 NotImplemented "Instruction LDRH not yet implemented."
	109 Move X0, X20
	110 Call HashSet`1<Int16>.Add, X0, X1
	111 Move W8, [X21+24]
	112 Add X24, X24, 1
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X22, 0x229E000
	115 NotImplemented "Instruction LDRH not yet implemented."
	116 Move X22, [X22+2896]
	117 And W31, W21, 0xFFFF
	118 Compare X20, 0
	119 JumpIfEqual {148}
	120 Move X2, [X22]
	121 Move X0, X20
	122 Move W1, W21
	123 Call HashSet`1<Int16>.Contains, X0, X1
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfNotEqual {136}
	128 Move X0, X31
	129 Call Guid.NewGuid
	130 Move [X31], X0
	131 Move [X31+8], X1
	132 Add X0, X31, 0
	133 Move X1, X31
	134 Call Guid.GetHashCode, X0
	135 Move W21, W0
	136 NotImplemented "Instruction STRH not yet implemented."
	137 Move X20, [X31+80]
	138 Move X19, [X31+88]
	139 Move X22, [X31+64]
	140 Move X21, [X31+72]
	141 Move X24, [X31+48]
	142 Move X23, [X31+56]
	143 Move X26, [X31+32]
	144 Move X25, [X31+40]
	145 Move X30, [X31+16]
	146 Add X31, X31, 96
	147 Return 
	148 Call 0x1B6FA1C
	149 Call 0x1B6FA24

Method: System.Boolean TryGetSpawnGroup(System.Int16 id, out AnimalCompany.LootSpawnGroup spawnGroup)

Disassembly:
	0x01CB1E98 BL 0x3D19840
	0x01CB1E9C LDR X22, [X0]
	0x01CB1EA0 BL 0x3D19850
	0x01CB1EA4 ADRP X8, 0x229D000
	0x01CB1EA8 LDR X8, [X8 + 0xC18]
	0x01CB1EAC ADD X0, X31, 0x80
	0x01CB1EB0 LDR X1, [X8]
	0x01CB1EB4 BL 0x2A14F2C
	0x01CB1EB8 ADRP X29, 0x229C000
	0x01CB1EBC LDR X29, [X29 + 0x478]
	0x01CB1EC0 CBZ X22, 0x1CB1B44
	0x01CB1EC4 MOV X0, X22
	0x01CB1EC8 BL 0x1B6EA14
	0x01CB1ECC ADRP X8, 0x229C000
	0x01CB1ED0 LDR X8, [X8 + 0x5C0]
	0x01CB1ED4 LDR X0, [X8]
	0x01CB1ED8 BL 0x1B6EA0C
	0x01CB1EDC ADRP X8, 0x229C000
	0x01CB1EE0 LDR X8, [X8 + 0x5B8]
	0x01CB1EE4 MOV X20, X0
	0x01CB1EE8 LDR X1, [X8]
	0x01CB1EEC BL 0x28F9A14
	0x01CB1EF0 ADRP X8, 0x229C000
	0x01CB1EF4 LDR X8, [X8 + 0x5F8]
	0x01CB1EF8 ADD X1, X31, 0x68
	0x01CB1EFC STR W28, [X31 + 0x68]
	0x01CB1F00 LDR X0, [X8]
	0x01CB1F04 BL 0x1B6E900
	0x01CB1F08 CBZ X20, 0x1CB2044
	0x01CB1F0C ADRP X8, 0x229D000
	0x01CB1F10 ADRP X9, 0x229C000
	0x01CB1F14 LDR X8, [X8 + 0xCA8]
	0x01CB1F18 LDR X9, [X9 + 0x5B0]
	0x01CB1F1C MOV X2, X0
	0x01CB1F20 MOV X0, X20
	0x01CB1F24 LDR X1, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2573000
	007 Move X21, 0x229E000
	008 Move W8, [X22+1216]
	009 Move X21, [X21+2824]
	010 Move X19, X1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x229E000
	017 Move X0, [X0+2832]
	018 Call 0x1B6F7F0
	019 Move X0, 0x229E000
	020 Move X0, [X0+2824]
	021 Call 0x1B6F7F0
	022 Move W8, 1
	023 Move [X22+1216], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1B6F8F8
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Move X0, [X8]
	032 Compare X0, 0
	033 JumpIfEqual {46}
	034 Move X8, 0x229E000
	035 Move X8, [X8+2832]
	036 Move W1, W20
	037 Move X2, X19
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X3, [X8]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Call Dictionary`2<Int16, Object>.TryGetValue, X0, X1, X2
	045 Return X0
	046 Call 0x1B6FA1C

Method: System.Void .ctor()

Disassembly:
	0x01CB1F28 LDR X3, [X9]
	0x01CB1F2C BL 0x28FA2A8

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x01CB1F30 ADRP X8, 0x229C000
	0x01CB1F34 LDR X8, [X8 + 0x628]
	0x01CB1F38 LDR X0, [X8]
	0x01CB1F3C LDR W8, [X0 + 0xE0]
	0x01CB1F40 CBNZ W8, 0x1CB1F48
	0x01CB1F44 BL 0x1B6E8F8
	0x01CB1F48 ADRP X8, 0x229D000
	0x01CB1F4C ADRP X9, 0x229D000
	0x01CB1F50 ADRP X10, 0x229D000
	0x01CB1F54 LDR X8, [X8 + 0xCB0]
	0x01CB1F58 LDR X9, [X9 + 0xC08]
	0x01CB1F5C LDR X10, [X10 + 0xCC0]
	0x01CB1F60 MOVZ W4, 0xD9
	0x01CB1F64 LDR X0, [X8]
	0x01CB1F68 LDR X2, [X9]
	0x01CB1F6C LDR X3, [X10]
	0x01CB1F70 MOV X1, X20
	0x01CB1F74 MOV X5, X31
	0x01CB1F78 BL 0x342B410
	0x01CB1F7C LDR X0, [X19 + 0x38]
	0x01CB1F80 MOVZ W8, 0x43340000
	0x01CB1F84 FMOV S0, W8
	0x01CB1F88 MOV X1, X31
	0x01CB1F8C BL 0x1D9CEB8
	0x01CB1F90 AND X1, X0, 0x0
	0x01CB1F94 MOV X0, X19
	0x01CB1F98 BL 0x1CB14C0
	0x01CB1F9C LDP X20, X19, [X31 + 0x120]
	0x01CB1FA0 LDP X22, X21, [X31 + 0x110]
	0x01CB1FA4 LDP X24, X23, [X31 + 0x100]
	0x01CB1FA8 LDP X26, X25, [X31 + 0xF0]
	0x01CB1FAC LDP X28, X27, [X31 + 0xE0]
	0x01CB1FB0 LDP X29, X30, [X31 + 0xD0]
	0x01CB1FB4 LDR V8, [X31 + 0xC0]
	0x01CB1FB8 ADD X31, X31, 0x130

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2573000
	007 Move X22, 0x229E000
	008 Move X19, 0x229E000
	009 Move X20, 0x229E000
	010 Move W8, [X21+1217]
	011 Move X22, [X22+2928]
	012 Move X19, [X19+2936]
	013 Move X20, [X20+2824]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x229E000
	019 Move X0, [X0+2936]
	020 Call 0x1B6F7F0
	021 Move X0, 0x229E000
	022 Move X0, [X0+2928]
	023 Call 0x1B6F7F0
	024 Move X0, 0x229E000
	025 Move X0, [X0+2824]
	026 Call 0x1B6F7F0
	027 Move W8, 1
	028 Move [X21+1217], W8
	029 Move X0, [X22]
	030 Call 0x1B6FA0C
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call Dictionary`2<Int16, Object>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+48]
	042 Return 

