Type: AnimalCompany.AnalyticTrigger

Method: System.Void Start()

Disassembly:
	0x01DD517C STR D0, [X8 + 0x20]
	0x01DD5180 STR S1, [X8 + 0x28]
	0x01DD5184 LDR W8, [X19 + 0x18]
	0x01DD5188 CBZ W8, 0x1DD52E0
	0x01DD518C ADRP X22, 0x2603000
	0x01DD5190 LDP V1, V0, [X31 + 0x10]
	0x01DD5194 LDR V9, [X19 + 0x20]
	0x01DD5198 LDRB W8, [X22 + 0x785]
	0x01DD519C LDR V11, [X19 + 0x28]
	0x01DD51A0 MOV V0.S[1], V1.S[0]
	0x01DD51A4 CBNZ W8, 0x1DD51C4
	0x01DD51A8 ADRP X0, 0x231E000
	0x01DD51AC LDR X0, [X0 + 0x5A8]
	0x01DD51B0 STR V0, [X31 + 0x2]
	0x01DD51B4 BL 0x1C16CF4
	0x01DD51B8 LDR V0, [X31 + 0x2]
	0x01DD51BC MOVZ W8, 0x1
	0x01DD51C0 STRB W8, [X22 + 0x785]
	0x01DD51C4 ADRP X8, 0x231E000
	0x01DD51C8 LDR X8, [X8 + 0x5A8]
	0x01DD51CC FSUB V10.2S, V0.2S, V9.2S
	0x01DD51D0 FSUB S9, S8, S11
	0x01DD51D4 LDR X0, [X8]
	0x01DD51D8 LDR W8, [X0 + 0xE0]
	0x01DD51DC CBNZ W8, 0x1DD51E4
	0x01DD51E0 BL 0x1C16DFC
	0x01DD51E4 ADRP X8, 0xFFFFFFFFFED15000
	0x00000000 INVALID
	0x01DD51EC LDR V1, [X8 + 0x17C]
	0x01DD51F0 FADDP S0, V0.2S
	0x01DD51F4 FMUL S2, S9, S9
	0x01DD51F8 FADD S0, S2, S0
	0x01DD51FC FSQRT S0, S0
	0x01DD5200 FCMP S0, S1
	0x01DD5204 B.LE 0x1DD5218
	0x01DD5208 UNIMPLEMENTED
	0x00000000 INVALID
	0x01DD5210 FDIV S9, S9, S0
	0x01DD5214 B 0x1DD5250
	0x01DD5218 ADRP X22, 0x2603000
	0x01DD521C LDRB W8, [X22 + 0x783]
	0x01DD5220 CBNZ W8, 0x1DD5238
	0x01DD5224 ADRP X0, 0x231E000
	0x01DD5228 LDR X0, [X0 + 0x5A0]
	0x01DD522C BL 0x1C16CF4
	0x01DD5230 MOVZ W8, 0x1
	0x01DD5234 STRB W8, [X22 + 0x783]
	0x01DD5238 ADRP X8, 0x231E000
	0x01DD523C LDR X8, [X8 + 0x5A0]
	0x01DD5240 LDR X8, [X8]
	0x01DD5244 LDR X8, [X8 + 0xB8]
	0x01DD5248 LDR V8, [X8]
	0x01DD524C LDR V9, [X8 + 0x8]
	0x01DD5250 LDR X0, [X21]
	0x01DD5254 MOVZ W1, 0x2
	0x01DD5258 BL 0x1C16D6C
	0x01DD525C LDR W8, [X19 + 0x18]
	0x01DD5260 CBZ W8, 0x1DD52E0
	0x01DD5264 CBZ X0, 0x1DD52E4
	0x01DD5268 LDR W8, [X0 + 0x18]
	0x01DD526C CBZ W8, 0x1DD52E0
	0x01DD5270 LDR V1, [X31]
	0x01DD5274 LDR V2, [X19 + 0x20]
	0x01DD5278 LDR V3, [X19 + 0x28]
	0x00000000 INVALID
	0x01DD5280 FMUL S1, S9, S1
	0x01DD5284 FADD V2.2S, V0.2S, V2.2S
	0x01DD5288 FADD S3, S1, S3
	0x01DD528C STR D2, [X0 + 0x20]
	0x01DD5290 STR S3, [X0 + 0x28]
	0x01DD5294 LDR W9, [X19 + 0x18]
	0x01DD5298 CMP W9, 0x1
	0x01DD529C B.LS 0x1DD52E0
	0x01DD52A0 CMP W8, 0x1
	0x01DD52A4 B.LS 0x1DD52E0
	0x01DD52A8 LDR V2, [X19 + 0x34]
	0x01DD52AC LDUR V3, [X19 + 0x2C]
	0x01DD52B0 LDP X22, X21, [X31 + 0x60]
	0x01DD52B4 LDR X30, [X31 + 0x50]
	0x01DD52B8 FSUB S1, S2, S1
	0x01DD52BC FSUB V0.2S, V3.2S, V0.2S
	0x01DD52C0 STUR D0, [X0 + 0x2C]
	0x01DD52C4 STR S1, [X0 + 0x34]
	0x01DD52C8 STR X0, [X20 + 0x20]
	0x01DD52CC LDP X20, X19, [X31 + 0x70]
	0x01DD52D0 LDP D9, D8, [X31 + 0x40]
	0x01DD52D4 LDP D11, D10, [X31 + 0x30]
	0x01DD52D8 ADD X31, X31, 0x80
	0x01DD52DC RET
	0x01DD52E0 BL 0x1C16F28
	0x01DD52E4 BL 0x1C16F20
	0x01DD52E8 STR D10, [X31 - 0x30]!
	0x01DD52EC STP D9, D8, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2604000
	007 Move W8, [X20+3101]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {33}
	013 Move X0, 0x2324000
	014 Move X0, [X0+1896]
	015 Call 0x1C17CF4
	016 Move X0, 0x231F000
	017 Move X0, [X0+1928]
	018 Call 0x1C17CF4
	019 Move X0, 0x2324000
	020 Move X0, [X0+1904]
	021 Call 0x1C17CF4
	022 Move X0, 0x2324000
	023 Move X0, [X0+1912]
	024 Call 0x1C17CF4
	025 Move X0, 0x2324000
	026 Move X0, [X0+1920]
	027 Call 0x1C17CF4
	028 Move X0, 0x2324000
	029 Move X0, [X0+1928]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+3101], W8
	033 Move [X31+8], X31
	034 Move X0, [X19+32]
	035 Move X22, 0x231F000
	036 Move X21, 0x2324000
	037 Move X20, 0x2324000
	038 Move X22, [X22+1928]
	039 Move X21, [X21+1928]
	040 Move X20, [X20+1920]
	041 Move X1, X31
	042 Call String.IsNullOrEmpty, X0
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {59}
	047 Move X0, [X22]
	048 Move X22, 0x2324000
	049 Move W8, [X0+224]
	050 Move X22, [X22+1904]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X1, [X22]
	055 Move X3, [X21]
	056 Move X4, [X20]
	057 Move W0, 16
	058 Move W5, 38
	059 Move X0, X19
	060 Move X1, X31
	061 Call Component.get_gameObject, X0
	062 Compare X0, 0
	063 JumpIfEqual {108}
	064 Move W1, 20
	065 Move X2, X31
	066 Call GameObject.set_layer, X0, X1
	067 Move X8, 0x2324000
	068 Move X8, [X8+1896]
	069 Add X1, X31, 8
	070 Move X0, X19
	071 Move X2, [X8]
	072 Call 0x21A5990, X0, X1
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {83}
	077 Move X0, [X31+8]
	078 Compare X0, 0
	079 JumpIfEqual {108}
	080 Move W1, 1
	081 Move X2, X31
	082 Call Collider.set_isTrigger, X0, X1
	083 Move X0, [X22]
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Move X8, 0x2324000
	089 Move X8, [X8+1912]
	090 Move X3, [X21]
	091 Move X4, [X20]
	092 Move W0, 16
	093 Move X1, [X8]
	094 Move W5, 50
	095 Move X2, X31
	096 Move X6, X31
	097 Call Log.Warning, X0, X1, X2, X3, X4, X5
	098 Move X0, X19
	099 Move W1, W31
	100 Move X2, X31
	101 Call Behaviour.set_enabled, X0, X1
	102 Move X20, [X31+32]
	103 Move X19, [X31+40]
	104 Move X22, [X31+16]
	105 Move X21, [X31+24]
	106 Move X30, [X31+48]
	107 Return 
	108 Call 0x1C17F20

Method: System.Void OnTriggerEnter(UnityEngine.Collider other)

Disassembly:
	0x01DD52F0 STP X30, X19, [X31 + 0x20]
	0x01DD52F4 MOV X1, X31
	0x01DD52F8 MOV X19, X0
	0x01DD52FC BL 0x3C32E90
	0x01DD5300 CBZ X0, 0x1DD535C
	0x01DD5304 MOV X1, X31
	0x01DD5308 BL 0x3C3F58C
	0x01DD530C MOV X0, X19
	0x01DD5310 MOV X1, X31
	0x01DD5314 MOV V8.16B, V0.16B
	0x01DD5318 MOV V9.16B, V1.16B
	0x01DD531C MOV V10.16B, V2.16B
	0x01DD5320 BL 0x3C32E90
	0x01DD5324 CBZ X0, 0x1DD535C
	0x01DD5328 MOV X1, X31
	0x01DD532C BL 0x3C3DEB4
	0x01DD5330 LDP S4, S5, [X19 + 0x24]
	0x01DD5334 LDR V6, [X19 + 0x2C]
	0x01DD5338 MOV X0, X31
	0x01DD533C BL 0x3C2A9FC
	0x01DD5340 FADD S0, S8, S0
	0x01DD5344 FADD S1, S9, S1
	0x01DD5348 LDP X30, X19, [X31 + 0x20]
	0x01DD534C LDP D9, D8, [X31 + 0x10]
	0x01DD5350 FADD S2, S10, S2
	0x01DD5354 LDR V10, [X31], #0x30
	0x01DD5358 RET
	0x01DD535C BL 0x1C16F20
	0x01DD5360 STP D11, D10, [X31 - 0x30]!
	0x01DD5364 STP D9, D8, [X31 + 0x10]
	0x01DD5368 STP X30, X19, [X31 + 0x20]
	0x01DD536C LDR W8, [X0 + 0x20]
	0x01DD5370 CMP W8, 0x2
	0x01DD5374 B.EQ 0x1DD53E4
	0x01DD5378 CMP W8, 0x1
	0x01DD537C B.EQ 0x1DD5444
	0x01DD5380 CBNZ W8, 0x1DD54C4
	0x01DD5384 MOV X1, X31
	0x01DD5388 BL 0x3C32E90
	0x01DD538C CBZ X0, 0x1DD550C
	0x01DD5390 MOV X1, X31
	0x01DD5394 BL 0x3C3DEB4
	0x01DD5398 ADRP X19, 0x2603000
	0x01DD539C LDRB W8, [X19 + 0xA1F]
	0x01DD53A0 MOV V8.16B, V0.16B
	0x01DD53A4 MOV V9.16B, V1.16B
	0x01DD53A8 MOV V10.16B, V2.16B
	0x01DD53AC MOV V11.16B, V3.16B
	0x01DD53B0 CBNZ W8, 0x1DD53C8
	0x01DD53B4 ADRP X0, 0x231E000
	0x01DD53B8 LDR X0, [X0 + 0x5A0]
	0x01DD53BC BL 0x1C16CF4
	0x01DD53C0 MOVZ W8, 0x1
	0x01DD53C4 STRB W8, [X19 + 0xA1F]
	0x01DD53C8 ADRP X8, 0x231E000
	0x01DD53CC LDR X8, [X8 + 0x5A0]
	0x01DD53D0 LDR X8, [X8]
	0x01DD53D4 LDR X8, [X8 + 0xB8]
	0x01DD53D8 LDP S4, S5, [X8 + 0x48]
	0x01DD53DC LDR V6, [X8 + 0x50]
	0x01DD53E0 B 0x1DD54A0
	0x01DD53E4 MOV X1, X31
	0x01DD53E8 BL 0x3C32E90
	0x01DD53EC CBZ X0, 0x1DD550C
	0x01DD53F0 MOV X1, X31
	0x01DD53F4 BL 0x3C3DEB4
	0x01DD53F8 ADRP X19, 0x2603000
	0x01DD53FC LDRB W8, [X19 + 0x786]
	0x01DD5400 MOV V8.16B, V0.16B
	0x01DD5404 MOV V9.16B, V1.16B
	0x01DD5408 MOV V10.16B, V2.16B
	0x01DD540C MOV V11.16B, V3.16B
	0x01DD5410 CBNZ W8, 0x1DD5428
	0x01DD5414 ADRP X0, 0x231E000
	0x01DD5418 LDR X0, [X0 + 0x5A0]
	0x01DD541C BL 0x1C16CF4
	0x01DD5420 MOVZ W8, 0x1
	0x01DD5424 STRB W8, [X19 + 0x786]
	0x01DD5428 ADRP X8, 0x231E000
	0x01DD542C LDR X8, [X8 + 0x5A0]
	0x01DD5430 LDR X8, [X8]
	0x01DD5434 LDR X8, [X8 + 0xB8]
	0x01DD5438 LDP S4, S5, [X8 + 0x18]
	0x01DD543C LDR V6, [X8 + 0x20]
	0x01DD5440 B 0x1DD54A0
	0x01DD5444 MOV X1, X31
	0x01DD5448 BL 0x3C32E90
	0x01DD544C CBZ X0, 0x1DD550C
	0x01DD5450 MOV X1, X31
	0x01DD5454 BL 0x3C3DEB4
	0x01DD5458 ADRP X19, 0x2603000
	0x01DD545C LDRB W8, [X19 + 0xB70]
	0x01DD5460 MOV V8.16B, V0.16B
	0x01DD5464 MOV V9.16B, V1.16B
	0x01DD5468 MOV V10.16B, V2.16B
	0x01DD546C MOV V11.16B, V3.16B
	0x01DD5470 CBNZ W8, 0x1DD5488
	0x01DD5474 ADRP X0, 0x231E000
	0x01DD5478 LDR X0, [X0 + 0x5A0]
	0x01DD547C BL 0x1C16CF4
	0x01DD5480 MOVZ W8, 0x1
	0x01DD5484 STRB W8, [X19 + 0xB70]
	0x01DD5488 ADRP X8, 0x231E000
	0x01DD548C LDR X8, [X8 + 0x5A0]
	0x01DD5490 LDR X8, [X8]
	0x01DD5494 LDR X8, [X8 + 0xB8]
	0x01DD5498 LDP S4, S5, [X8 + 0x3C]
	0x01DD549C LDR V6, [X8 + 0x44]
	0x01DD54A0 MOV V0.16B, V8.16B
	0x01DD54A4 MOV V1.16B, V9.16B
	0x01DD54A8 LDP X30, X19, [X31 + 0x20]
	0x01DD54AC LDP D9, D8, [X31 + 0x10]
	0x01DD54B0 MOV V2.16B, V10.16B
	0x01DD54B4 MOV V3.16B, V11.16B
	0x01DD54B8 MOV X0, X31
	0x01DD54BC LDP D11, D10, [X31], #0x30
	0x01DD54C0 B 0x3C2A9FC
	0x01DD54C4 ADRP X19, 0x2603000
	0x01DD54C8 LDRB W8, [X19 + 0xA1F]
	0x01DD54CC CBNZ W8, 0x1DD54E4
	0x01DD54D0 ADRP X0, 0x231E000
	0x01DD54D4 LDR X0, [X0 + 0x5A0]
	0x01DD54D8 BL 0x1C16CF4
	0x01DD54DC MOVZ W8, 0x1
	0x01DD54E0 STRB W8, [X19 + 0xA1F]
	0x01DD54E4 ADRP X8, 0x231E000
	0x01DD54E8 LDR X8, [X8 + 0x5A0]
	0x01DD54EC LDP X30, X19, [X31 + 0x20]
	0x01DD54F0 LDP D9, D8, [X31 + 0x10]
	0x01DD54F4 LDR X8, [X8]
	0x01DD54F8 LDR X8, [X8 + 0xB8]
	0x01DD54FC LDP S0, S1, [X8 + 0x48]
	0x01DD5500 LDR V2, [X8 + 0x50]
	0x01DD5504 LDP D11, D10, [X31], #0x30
	0x01DD5508 RET
	0x01DD550C BL 0x1C16F20
	0x01DD5510 STR D10, [X31 - 0x40]!
	0x01DD5514 STP D9, D8, [X31 + 0x10]
	0x01DD5518 STP X30, X21, [X31 + 0x20]
	0x01DD551C STP X20, X19, [X31 + 0x30]
	0x01DD5520 ADRP X20, 0x2603000
	0x01DD5524 ADRP X21, 0x2320000
	0x01DD5528 LDRB W8, [X20 + 0xC31]
	0x01DD552C LDR X21, [X21 + 0x9B0]
	0x01DD5530 MOV X19, X0
	0x01DD5534 TBNZ X8, 0x0, 0x1DD554C
	0x01DD5538 ADRP X0, 0x2320000
	0x01DD553C LDR X0, [X0 + 0x9B0]
	0x01DD5540 BL 0x1C16CF4
	0x01DD5544 MOVZ W8, 0x1
	0x01DD5548 STRB W8, [X20 + 0xC31]
	0x01DD554C LDR X0, [X21]
	0x01DD5550 MOVZ W1, 0x2
	0x01DD5554 BL 0x1C16D6C
	0x01DD5558 MOV X20, X0
	0x01DD555C MOV X0, X19
	0x01DD5560 BL 0x1DD52E8
	0x01DD5564 MOV X0, X19
	0x01DD5568 MOV V8.16B, V0.16B
	0x01DD556C MOV V9.16B, V1.16B
	0x01DD5570 MOV V10.16B, V2.16B
	0x01DD5574 BL 0x1DD5360
	0x01DD5578 CBZ X20, 0x1DD5620
	0x01DD557C LDR W8, [X20 + 0x18]
	0x01DD5580 CBZ W8, 0x1DD561C
	0x01DD5584 LDR V3, [X19 + 0x30]
	0x01DD5588 FMOV S4, 0.5
	0x01DD558C MOV X0, X19
	0x01DD5590 FMUL S3, S3, S4
	0x01DD5594 FMUL S0, S0, S3
	0x01DD5598 FMUL S1, S1, S3
	0x01DD559C FMUL S2, S2, S3
	0x01DD55A0 FADD S0, S8, S0
	0x01DD55A4 FADD S1, S9, S1
	0x01DD55A8 FADD S2, S10, S2
	0x01DD55AC STP S0, S1, [X20 + 0x20]
	0x01DD55B0 STR S2, [X20 + 0x28]
	0x01DD55B4 BL 0x1DD52E8
	0x01DD55B8 MOV X0, X19
	0x01DD55BC MOV V8.16B, V0.16B
	0x01DD55C0 MOV V9.16B, V1.16B
	0x01DD55C4 MOV V10.16B, V2.16B
	0x01DD55C8 BL 0x1DD5360
	0x01DD55CC LDR W8, [X20 + 0x18]
	0x01DD55D0 CMP W8, 0x1
	0x01DD55D4 B.LS 0x1DD561C
	0x01DD55D8 LDR V3, [X19 + 0x30]
	0x01DD55DC FMOV S4, 0.5
	0x01DD55E0 MOV X0, X20
	0x01DD55E4 LDP X30, X21, [X31 + 0x20]
	0x01DD55E8 FMUL S3, S3, S4
	0x01DD55EC FMUL S2, S2, S3
	0x01DD55F0 FMUL S1, S1, S3
	0x01DD55F4 FMUL S0, S0, S3
	0x01DD55F8 FSUB S2, S10, S2
	0x01DD55FC FSUB S1, S9, S1
	0x01DD5600 FSUB S0, S8, S0
	0x01DD5604 STP S0, S1, [X20 + 0x2C]
	0x01DD5608 STR S2, [X20 + 0x34]
	0x01DD560C LDP X20, X19, [X31 + 0x30]
	0x01DD5610 LDP D9, D8, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X21, 0x2604000
	009 Move W8, [X21+3102]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {57}
	016 Move X0, 0x2324000
	017 Move X0, [X0+1936]
	018 Call 0x1C17CF4
	019 Move X0, 0x231F000
	020 Move X0, [X0+2896]
	021 Call 0x1C17CF4
	022 Move X0, 0x231F000
	023 Move X0, [X0+2904]
	024 Call 0x1C17CF4
	025 Move X0, 0x2324000
	026 Move X0, [X0+1944]
	027 Call 0x1C17CF4
	028 Move X0, 0x2324000
	029 Move X0, [X0+1952]
	030 Call 0x1C17CF4
	031 Move X0, 0x2324000
	032 Move X0, [X0+1960]
	033 Call 0x1C17CF4
	034 Move X0, 0x231F000
	035 Move X0, [X0+1880]
	036 Call 0x1C17CF4
	037 Move X0, 0x2323000
	038 Move X0, [X0+352]
	039 Call 0x1C17CF4
	040 Move X0, 0x2323000
	041 Move X0, [X0+360]
	042 Call 0x1C17CF4
	043 Move X0, 0x2324000
	044 Move X0, [X0+1968]
	045 Call 0x1C17CF4
	046 Move X0, 0x2324000
	047 Move X0, [X0+1976]
	048 Call 0x1C17CF4
	049 Move X0, 0x2324000
	050 Move X0, [X0+1984]
	051 Call 0x1C17CF4
	052 Move X0, 0x2321000
	053 Move X0, [X0+1896]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X21+3102], W8
	057 Compare X20, 0
	058 JumpIfEqual {231}
	059 Move X8, 0x2321000
	060 Move X8, [X8+1896]
	061 Move X0, X20
	062 Move X2, X31
	063 Move X1, [X8]
	064 Call Component.CompareTag, X0, X1
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {223}
	069 Move W8, [X19+40]
	070 Compare W8, 0
	071 JumpIfNotEqual {93}
	072 Move X20, 0x2324000
	073 Move X20, [X20+1936]
	074 Move X0, [X20]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {80}
	078 Call 0x1C17DFC
	079 Move X0, [X20]
	080 Move X8, [X0+184]
	081 Move X0, [X8]
	082 Compare X0, 0
	083 JumpIfEqual {231}
	084 Move X8, 0x2324000
	085 Move X1, [X19+32]
	086 Move X8, [X8+1944]
	087 Move X2, [X8]
	088 Call Dictionary`2<Object, Int32>.ContainsKey, X0, X1
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {223}
	093 Move X22, 0x2324000
	094 Move X22, [X22+1936]
	095 Move X0, [X22]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {101}
	099 Call 0x1C17DFC
	100 Move X0, [X22]
	101 Move X8, [X0+184]
	102 Move X20, [X8]
	103 Compare X20, 0
	104 JumpIfEqual {231}
	105 Move X8, 0x2324000
	106 Move X21, [X19+32]
	107 Move X8, [X8+1944]
	108 Move X0, X20
	109 Move X1, X21
	110 Move X2, [X8]
	111 Call Dictionary`2<Object, Int32>.ContainsKey, X0, X1
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {132}
	116 Move X0, [X22]
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {122}
	120 Call 0x1C17DFC
	121 Move X0, [X22]
	122 Move X8, [X0+184]
	123 Move X0, [X8]
	124 Compare X0, 0
	125 JumpIfEqual {231}
	126 Move X8, 0x2324000
	127 Move X1, [X19+32]
	128 Move X8, [X8+1952]
	129 Move X2, [X8]
	130 Call Dictionary`2<Object, Int32>.get_Item, X0, X1
	131 Add W2, W0, 1
	132 Move W2, 1
	133 Move X8, 0x2324000
	134 Move X8, [X8+1960]
	135 Move X0, X20
	136 Move X1, X21
	137 Move X3, [X8]
	138 Call Dictionary`2<Object, Int32>.set_Item, X0, X1, X2
	139 Move X8, 0x2324000
	140 Move X1, [X19+32]
	141 Move X8, [X8+1984]
	142 Move X2, X31
	143 Move X0, [X8]
	144 Call String.Concat, X0, X1
	145 Move X8, 0x2323000
	146 Move X8, [X8+352]
	147 Move X20, X0
	148 Move W1, 2
	149 Move X8, [X8]
	150 Move X0, X8
	151 Call 0x1C17D6C
	152 Move X9, 0x231F000
	153 Move W8, [X19+40]
	154 Move X9, [X9+2904]
	155 Move X21, X0
	156 Add X1, X31, 60
	157 Move [X31+60], W8
	158 Move X0, [X9]
	159 Call 0x1C17E04
	160 Move X8, 0x2324000
	161 Move X23, 0x2323000
	162 Move X8, [X8+1976]
	163 Move X23, [X23+360]
	164 Move X2, X0
	165 Add X0, X31, 32
	166 Move X1, [X8]
	167 Move X3, [X23]
	168 Move [X31+32], X31
	169 Move [X31+40], X31
	170 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	171 Compare X21, 0
	172 JumpIfEqual {231}
	173 Move W8, [X21+24]
	174 Compare W8, 0
	175 JumpIfEqual {232}
	176 Move V0, [X31+2]
	177 Move [X21+2], V0
	178 Move X0, [X22]
	179 Move W8, [X0+224]
	180 Compare W8, 0
	181 JumpIfNotEqual {184}
	182 Call 0x1C17DFC
	183 Move X0, [X22]
	184 Move X8, [X0+184]
	185 Move X0, [X8]
	186 Compare X0, 0
	187 JumpIfEqual {231}
	188 Move X8, 0x2324000
	189 Move X1, [X19+32]
	190 Move X8, [X8+1952]
	191 Move X2, [X8]
	192 Call Dictionary`2<Object, Int32>.get_Item, X0, X1
	193 Move X8, 0x231F000
	194 Move X8, [X8+1880]
	195 Move [X31+28], W0
	196 Add X1, X31, 28
	197 Move X8, [X8]
	198 Move X0, X8
	199 Call 0x1C17E04
	200 Move X8, 0x2324000
	201 Move X8, [X8+1968]
	202 Move X3, [X23]
	203 Move X2, X0
	204 Add X0, X31, 0
	205 Move X1, [X8]
	206 Move [X31], X31
	207 Move [X31+8], X31
	208 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	209 Move W8, [X21+24]
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Move V0, [X31]
	212 Move X8, 0x231F000
	213 Move [X21+3], V0
	214 Move X8, [X8+2896]
	215 Move X0, [X8]
	216 Move W8, [X0+224]
	217 Compare W8, 0
	218 JumpIfNotEqual {220}
	219 Call 0x1C17DFC
	220 Move X0, X20
	221 Move X1, X21
	222 Call Analytics.Track, X0, X1
	223 Move X20, [X31+96]
	224 Move X19, [X31+104]
	225 Move X22, [X31+80]
	226 Move X21, [X31+88]
	227 Move X30, [X31+64]
	228 Move X23, [X31+72]
	229 Add X31, X31, 112
	230 Return 
	231 Call 0x1C17F20
	232 Call 0x1C17F28

Method: System.Void .ctor()

Disassembly:
	0x01DD5614 LDR V10, [X31], #0x40
	0x01DD5618 RET
	0x01DD561C BL 0x1C16F28
	0x01DD5620 BL 0x1C16F20

ISIL:
	001 Move W8, 1
	002 Move X1, X31
	003 Move [X0+41], W8
	004 Call MonoBehaviour..ctor, X0
	005 Return 

Method: System.Void .cctor()

Disassembly:
	0x01DD5624 STR D14, [X31 - 0x50]!
	0x01DD5628 STP D13, D12, [X31 + 0x8]
	0x01DD562C STP D11, D10, [X31 + 0x18]
	0x01DD5630 STP D9, D8, [X31 + 0x28]
	0x01DD5634 STR X30, [X31 + 0x38]
	0x01DD5638 STP X20, X19, [X31 + 0x40]
	0x01DD563C MOV V8.16B, V0.16B
	0x01DD5640 MOV X19, X0
	0x01DD5644 MOV X20, X8
	0x01DD5648 BL 0x1DD52E8
	0x01DD564C MOV X0, X19
	0x01DD5650 MOV V9.16B, V0.16B
	0x01DD5654 MOV V10.16B, V1.16B
	0x01DD5658 MOV V11.16B, V2.16B
	0x01DD565C BL 0x1DD5360
	0x01DD5660 MOV X0, X19
	0x01DD5664 MOV V12.16B, V0.16B
	0x01DD5668 MOV V13.16B, V1.16B
	0x01DD566C MOV V14.16B, V2.16B
	0x01DD5670 BL 0x1DD5510
	0x01DD5674 MOVI V0.2D, 0x0
	0x01DD5678 MOV X1, X0
	0x01DD567C STP V0, V0, [X20]
	0x01DD5680 STR X31, [X20 + 0x20]
	0x01DD5684 MOV X0, X20
	0x01DD5688 MOV V0.16B, V9.16B
	0x01DD568C MOV V1.16B, V10.16B
	0x01DD5690 MOV V2.16B, V11.16B
	0x01DD5694 MOV V3.16B, V12.16B
	0x01DD5698 MOV V4.16B, V13.16B
	0x01DD569C MOV V6.16B, V8.16B
	0x01DD56A0 LDP X20, X19, [X31 + 0x40]
	0x01DD56A4 LDR X30, [X31 + 0x38]
	0x01DD56A8 LDP D9, D8, [X31 + 0x28]
	0x01DD56AC LDP D11, D10, [X31 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2604000
	007 Move X22, 0x2321000
	008 Move X19, 0x2321000
	009 Move X20, 0x2324000
	010 Move W8, [X21+3103]
	011 Move X22, [X22+2840]
	012 Move X19, [X19+2848]
	013 Move X20, [X20+1936]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x2324000
	019 Move X0, [X0+1936]
	020 Call 0x1C17CF4
	021 Move X0, 0x2321000
	022 Move X0, [X0+2848]
	023 Call 0x1C17CF4
	024 Move X0, 0x2321000
	025 Move X0, [X0+2840]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+3103], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call Dictionary`2<Object, Int32>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+48]
	042 Return 

