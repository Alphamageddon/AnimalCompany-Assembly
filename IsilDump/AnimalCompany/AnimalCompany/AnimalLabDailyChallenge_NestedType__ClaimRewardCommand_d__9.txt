Type: AnimalCompany.AnimalLabDailyChallenge/<ClaimRewardCommand>d__9

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01D5D82C LDP X30, X21, [X31], #0x20
	0x01D5D830 B 0x3C36C30
	0x01D5D834 SUB X31, X31, 0x30
	0x01D5D838 STR X30, [X31 + 0x10]
	0x01D5D83C STP X20, X19, [X31 + 0x20]
	0x01D5D840 ADRP X20, 0x267B000
	0x01D5D844 ADRP X19, 0x2398000
	0x01D5D848 LDRB W8, [X20 + 0x821]
	0x01D5D84C LDR X19, [X19 + 0x568]
	0x01D5D850 TBNZ X8, 0x0, 0x1D5D868

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01D5DA64 LDR X8, [X21]

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01D5DA68 MOV X20, X0
	0x01D5DA6C LDR W9, [X8 + 0xE0]
	0x01D5DA70 CBNZ W9, 0x1D5DA7C
	0x01D5DA74 MOV X0, X8
	0x01D5DA78 BL 0x1C16DFC
	0x01D5DA7C ADD X0, X31, 0x18
	0x01D5DA80 MOV X1, X31
	0x01D5DA84 BL 0x33941D0
	0x01D5DA88 ADRP X24, 0x2396000
	0x01D5DA8C LDR X24, [X24 + 0x758]
	0x01D5DA90 MOVZ X9, 0x7FF00000
	0x01D5DA94 FMOV D1, X9
	0x01D5DA98 FCVTZS W8, D0
	0x01D5DA9C LDR X0, [X24]
	0x01D5DAA0 FCMP D0, D1
	0x01D5DAA4 MOVZ W9, 0x80000000
	0x01D5DAA8 CSEL W8, W9, W8, EQ
	0x01D5DAAC ADD X1, X31, 0x14
	0x01D5DAB0 STR W8, [X31 + 0x14]
	0x01D5DAB4 BL 0x1C16E04
	0x01D5DAB8 CBZ X20, 0x1D5DE2C
	0x01D5DABC MOV X21, X0
	0x01D5DAC0 CBZ X0, 0x1D5DAD8
	0x01D5DAC4 LDR X8, [X20]
	0x01D5DAC8 MOV X0, X21
	0x01D5DACC LDR X1, [X8 + 0x40]
	0x01D5DAD0 BL 0x1C16E00
	0x01D5DAD4 CBZ X0, 0x1D5DE34
	0x01D5DAD8 LDR W8, [X20 + 0x18]
	0x01D5DADC CBZ W8, 0x1D5DE30
	0x01D5DAE0 ADD X0, X31, 0x18
	0x01D5DAE4 MOV X1, X31
	0x01D5DAE8 STR X21, [X20 + 0x20]
	0x01D5DAEC BL 0x33940AC
	0x01D5DAF0 LDR X8, [X24]
	0x01D5DAF4 STR W0, [X31 + 0x10]
	0x01D5DAF8 ADD X1, X31, 0x10
	0x01D5DAFC MOV X0, X8
	0x01D5DB00 BL 0x1C16E04
	0x01D5DB04 MOV X21, X0
	0x01D5DB08 CBZ X0, 0x1D5DB20
	0x01D5DB0C LDR X8, [X20]
	0x01D5DB10 MOV X0, X21
	0x01D5DB14 LDR X1, [X8 + 0x40]
	0x01D5DB18 BL 0x1C16E00
	0x01D5DB1C CBZ X0, 0x1D5DE34
	0x01D5DB20 LDR W8, [X20 + 0x18]
	0x01D5DB24 CMP W8, 0x1
	0x01D5DB28 B.LS 0x1D5DE30
	0x01D5DB2C ADD X0, X31, 0x18
	0x01D5DB30 MOV X1, X31
	0x01D5DB34 STR X21, [X20 + 0x28]
	0x01D5DB38 BL 0x339413C
	0x01D5DB3C LDR X8, [X24]
	0x01D5DB40 STR W0, [X31 + 0xC]
	0x01D5DB44 ADD X1, X31, 0xC
	0x01D5DB48 MOV X0, X8
	0x01D5DB4C BL 0x1C16E04
	0x01D5DB50 MOV X21, X0
	0x01D5DB54 CBZ X0, 0x1D5DB6C
	0x01D5DB58 LDR X8, [X20]
	0x01D5DB5C MOV X0, X21
	0x01D5DB60 LDR X1, [X8 + 0x40]
	0x01D5DB64 BL 0x1C16E00
	0x01D5DB68 CBZ X0, 0x1D5DE34
	0x01D5DB6C LDR W8, [X20 + 0x18]
	0x01D5DB70 CMP W8, 0x2
	0x01D5DB74 B.LS 0x1D5DE30
	0x01D5DB78 ADD X0, X31, 0x18
	0x01D5DB7C MOV X1, X31
	0x01D5DB80 STR X21, [X20 + 0x30]
	0x01D5DB84 BL 0x3394184
	0x01D5DB88 LDR X8, [X24]
	0x01D5DB8C STR W0, [X31 + 0x8]
	0x01D5DB90 ADD X1, X31, 0x8
	0x01D5DB94 MOV X0, X8
	0x01D5DB98 BL 0x1C16E04
	0x01D5DB9C MOV X21, X0
	0x01D5DBA0 CBZ X0, 0x1D5DBB8
	0x01D5DBA4 LDR X8, [X20]
	0x01D5DBA8 MOV X0, X21
	0x01D5DBAC LDR X1, [X8 + 0x40]
	0x01D5DBB0 BL 0x1C16E00
	0x01D5DBB4 CBZ X0, 0x1D5DE34
	0x01D5DBB8 LDR W8, [X20 + 0x18]
	0x01D5DBBC CMP W8, 0x3
	0x01D5DBC0 B.LS 0x1D5DE30
	0x01D5DBC4 STR X21, [X20 + 0x38]
	0x01D5DBC8 ADRP X8, 0x2398000
	0x01D5DBCC LDR X8, [X8 + 0x588]
	0x01D5DBD0 MOV X1, X20
	0x01D5DBD4 MOV X2, X31
	0x01D5DBD8 LDR X0, [X8]
	0x01D5DBDC BL 0x3227C5C
	0x01D5DBE0 B 0x1D5DD2C
	0x01D5DBE4 ADRP X8, 0x2398000
	0x01D5DBE8 LDR X8, [X8 + 0x598]
	0x01D5DBEC LDR X20, [X8]
	0x01D5DBF0 B 0x1D5DD30
	0x01D5DBF4 LDR X0, [X21]
	0x01D5DBF8 LDR W8, [X0 + 0xE0]
	0x01D5DBFC CBNZ W8, 0x1D5DC04
	0x01D5DC00 BL 0x1C16DFC
	0x01D5DC04 ADD X0, X31, 0x18
	0x01D5DC08 MOV X1, X31
	0x01D5DC0C BL 0x33941E8
	0x01D5DC10 LDR X0, [X21]
	0x01D5DC14 MOV V8.16B, V0.16B
	0x01D5DC18 LDR W8, [X0 + 0xE0]
	0x01D5DC1C CBNZ W8, 0x1D5DC24
	0x01D5DC20 BL 0x1C16DFC
	0x01D5DC24 FMOV D0, 1
	0x01D5DC28 ADD X0, X31, 0x18
	0x01D5DC2C MOV X1, X31
	0x01D5DC30 FCMP D8, D0
	0x01D5DC34 B.LE 0x1D5DCC8
	0x01D5DC38 BL 0x33940AC
	0x01D5DC3C ADRP X24, 0x2396000
	0x01D5DC40 LDR X24, [X24 + 0x758]
	0x01D5DC44 STR W0, [X31 + 0x14]
	0x01D5DC48 ADD X1, X31, 0x14
	0x01D5DC4C LDR X8, [X24]
	0x01D5DC50 MOV X0, X8
	0x01D5DC54 BL 0x1C16E04
	0x01D5DC58 MOV X20, X0
	0x01D5DC5C ADD X0, X31, 0x18
	0x01D5DC60 MOV X1, X31
	0x01D5DC64 BL 0x339413C
	0x01D5DC68 LDR X8, [X24]
	0x01D5DC6C STR W0, [X31 + 0x10]
	0x01D5DC70 ADD X1, X31, 0x10
	0x01D5DC74 MOV X0, X8
	0x01D5DC78 BL 0x1C16E04
	0x01D5DC7C MOV X21, X0
	0x01D5DC80 ADD X0, X31, 0x18
	0x01D5DC84 MOV X1, X31
	0x01D5DC88 BL 0x3394184
	0x01D5DC8C LDR X8, [X24]
	0x01D5DC90 STR W0, [X31 + 0xC]
	0x01D5DC94 ADD X1, X31, 0xC
	0x01D5DC98 MOV X0, X8
	0x01D5DC9C BL 0x1C16E04
	0x01D5DCA0 ADRP X8, 0x2398000
	0x01D5DCA4 LDR X8, [X8 + 0x578]
	0x01D5DCA8 MOV X3, X0
	0x01D5DCAC MOV X1, X20
	0x01D5DCB0 MOV X2, X21
	0x01D5DCB4 LDR X8, [X8]
	0x01D5DCB8 MOV X4, X31
	0x01D5DCBC MOV X0, X8
	0x01D5DCC0 BL 0x3227C18
	0x01D5DCC4 B 0x1D5DD2C
	0x01D5DCC8 BL 0x339413C
	0x01D5DCCC ADRP X21, 0x2396000
	0x01D5DCD0 LDR X21, [X21 + 0x758]
	0x01D5DCD4 STR W0, [X31 + 0x14]
	0x01D5DCD8 ADD X1, X31, 0x14
	0x01D5DCDC LDR X8, [X21]
	0x01D5DCE0 MOV X0, X8
	0x01D5DCE4 BL 0x1C16E04
	0x01D5DCE8 MOV X20, X0
	0x01D5DCEC ADD X0, X31, 0x18
	0x01D5DCF0 MOV X1, X31
	0x01D5DCF4 BL 0x3394184
	0x01D5DCF8 LDR X8, [X21]
	0x01D5DCFC STR W0, [X31 + 0x10]
	0x01D5DD00 ADD X1, X31, 0x10
	0x01D5DD04 MOV X0, X8
	0x01D5DD08 BL 0x1C16E04
	0x01D5DD0C ADRP X8, 0x2398000
	0x01D5DD10 LDR X8, [X8 + 0x580]
	0x01D5DD14 MOV X2, X0
	0x01D5DD18 MOV X1, X20
	0x01D5DD1C MOV X3, X31
	0x01D5DD20 LDR X8, [X8]
	0x01D5DD24 MOV X0, X8
	0x01D5DD28 BL 0x3227BD4
	0x01D5DD2C MOV X20, X0
	0x01D5DD30 CBZ X23, 0x1D5DE2C
	0x01D5DD34 ADRP X24, 0x2396000
	0x01D5DD38 LDR X24, [X24 + 0x598]
	0x01D5DD3C LDR X21, [X23 + 0x40]
	0x01D5DD40 LDR X0, [X24]
	0x01D5DD44 LDR W8, [X0 + 0xE0]
	0x01D5DD48 CBNZ W8, 0x1D5DD50
	0x01D5DD4C BL 0x1C16DFC
	0x01D5DD50 MOV X0, X21
	0x01D5DD54 MOV X1, X31
	0x01D5DD58 MOV X2, X31
	0x01D5DD5C BL 0x3C354F8
	0x01D5DD60 TBZ X0, 0x0, 0x1D5DD9C
	0x01D5DD64 ADRP X8, 0x2398000
	0x01D5DD68 LDR X21, [X23 + 0x40]
	0x01D5DD6C LDR X8, [X8 + 0x590]
	0x01D5DD70 MOV X1, X20
	0x01D5DD74 MOV X2, X31
	0x01D5DD78 LDR X0, [X8]
	0x01D5DD7C BL 0x321B938
	0x01D5DD80 CBZ X21, 0x1D5DE2C
	0x01D5DD84 LDR X8, [X21]
	0x01D5DD88 MOV X1, X0
	0x01D5DD8C MOV X0, X21
	0x01D5DD90 LDR X9, [X8 + 0x558]
	0x01D5DD94 LDR X2, [X8 + 0x560]
	0x01D5DD98 BLR X9
	0x01D5DD9C LDR X0, [X24]
	0x01D5DDA0 LDR X21, [X23 + 0x48]
	0x01D5DDA4 LDR W8, [X0 + 0xE0]
	0x01D5DDA8 CBNZ W8, 0x1D5DDB0
	0x01D5DDAC BL 0x1C16DFC
	0x01D5DDB0 MOV X0, X21
	0x01D5DDB4 MOV X1, X31
	0x01D5DDB8 MOV X2, X31
	0x01D5DDBC BL 0x3C354F8
	0x01D5DDC0 TBZ X0, 0x0, 0x1D5DDE0
	0x01D5DDC4 LDR X0, [X23 + 0x48]
	0x01D5DDC8 CBZ X0, 0x1D5DE2C
	0x01D5DDCC LDR X8, [X0]
	0x01D5DDD0 MOV X1, X20
	0x01D5DDD4 LDR X9, [X8 + 0x558]
	0x01D5DDD8 LDR X2, [X8 + 0x560]
	0x01D5DDDC BLR X9
	0x01D5DDE0 ADRP X8, 0x2396000
	0x01D5DDE4 LDR X8, [X8 + 0xA90]
	0x01D5DDE8 ADD X1, X31, 0x14
	0x01D5DDEC LDR X0, [X8]
	0x01D5DDF0 MOVZ W8, 0x3F800000
	0x01D5DDF4 STR W8, [X31 + 0x14]
	0x01D5DDF8 BL 0x1C16E04
	0x01D5DDFC MOVZ W8, 0x1
	0x01D5DE00 STR X0, [X19 + 0x18]
	0x01D5DE04 STR W8, [X19 + 0x10]
	0x01D5DE08 CMP W22, 0x2
	0x01D5DE0C LDP X20, X19, [X31 + 0x50]
	0x01D5DE10 LDP X22, X21, [X31 + 0x40]
	0x01D5DE14 LDP X24, X23, [X31 + 0x30]
	0x01D5DE18 LDR X30, [X31 + 0x28]
	0x01D5DE1C LDR V8, [X31 + 0x20]
	0x01D5DE20 CSET W0, CC
	0x01D5DE24 ADD X31, X31, 0x60
	0x01D5DE28 RET
	0x01D5DE2C BL 0x1C16F20
	0x01D5DE30 BL 0x1C16F28
	0x01D5DE34 BL 0x1C16F44
	0x01D5DE38 MOV X1, X31
	0x01D5DE3C BL 0x1C16DEC
	0x01D5DE40 LDR X0, [X0 + 0x18]
	0x01D5DE44 RET
	0x01D5DE48 STP X30, X19, [X31 - 0x10]!
	0x01D5DE4C ADRP X0, 0x2396000
	0x01D5DE50 LDR X0, [X0 + 0xB40]
	0x01D5DE54 BL 0x1C16D08
	0x01D5DE58 BL 0x1C16F10
	0x01D5DE5C MOV X1, X31
	0x01D5DE60 MOV X19, X0
	0x01D5DE64 BL 0x3380310
	0x01D5DE68 ADRP X0, 0x2398000
	0x01D5DE6C LDR X0, [X0 + 0x5A0]
	0x01D5DE70 BL 0x1C16D08
	0x01D5DE74 MOV X1, X0
	0x01D5DE78 MOV X0, X19
	0x01D5DE7C BL 0x1C16DEC
	0x01D5DE80 LDR X0, [X0 + 0x18]
	0x01D5DE84 RET
	0x01D5DE88 STP X30, X23, [X31 - 0x30]!
	0x01D5DE8C STP X22, X21, [X31 + 0x10]
	0x01D5DE90 STP X20, X19, [X31 + 0x20]
	0x01D5DE94 ADRP X21, 0x267B000
	0x01D5DE98 ADRP X20, 0x2398000
	0x01D5DE9C LDRB W8, [X21 + 0x823]
	0x01D5DEA0 LDR X20, [X20 + 0x5A8]
	0x01D5DEA4 MOV X19, X0
	0x01D5DEA8 TBNZ X8, 0x0, 0x1D5DEF0
	0x01D5DEAC ADRP X0, 0x2398000
	0x01D5DEB0 LDR X0, [X0 + 0x5B0]
	0x01D5DEB4 BL 0x1C16CF4
	0x01D5DEB8 ADRP X0, 0x2397000
	0x01D5DEBC LDR X0, [X0 + 0xE70]
	0x01D5DEC0 BL 0x1C16CF4
	0x01D5DEC4 ADRP X0, 0x2398000
	0x01D5DEC8 LDR X0, [X0 + 0x5B8]
	0x01D5DECC BL 0x1C16CF4
	0x01D5DED0 ADRP X0, 0x2398000
	0x01D5DED4 LDR X0, [X0 + 0x5C0]
	0x01D5DED8 BL 0x1C16CF4
	0x01D5DEDC ADRP X0, 0x2398000
	0x01D5DEE0 LDR X0, [X0 + 0x5A8]
	0x01D5DEE4 BL 0x1C16CF4
	0x01D5DEE8 MOVZ W8, 0x1
	0x01D5DEEC STRB W8, [X21 + 0x823]
	0x01D5DEF0 LDR X0, [X20]
	0x01D5DEF4 LDR W20, [X19 + 0x20]
	0x01D5DEF8 LDR W8, [X0 + 0xE0]
	0x01D5DEFC CBNZ W8, 0x1D5DF04
	0x01D5DF00 BL 0x1C16DFC
	0x01D5DF04 MOV W0, W20
	0x01D5DF08 MOV X1, X31
	0x01D5DF0C BL 0x31AD670
	0x01D5DF10 MOV X0, X19
	0x01D5DF14 MOV X1, X31
	0x01D5DF18 BL 0x3C32E90
	0x01D5DF1C ADRP X21, 0x267B000
	0x01D5DF20 LDRB W8, [X21 + 0x783]
	0x01D5DF24 MOV X20, X0
	0x01D5DF28 CBNZ W8, 0x1D5DF40
	0x01D5DF2C ADRP X0, 0x2396000
	0x01D5DF30 LDR X0, [X0 + 0x5A0]
	0x01D5DF34 BL 0x1C16CF4
	0x01D5DF38 MOVZ W8, 0x1
	0x01D5DF3C STRB W8, [X21 + 0x783]
	0x01D5DF40 CBZ X20, 0x1D5E03C
	0x01D5DF44 ADRP X8, 0x2396000
	0x01D5DF48 LDR X8, [X8 + 0x5A0]
	0x01D5DF4C MOV X0, X20
	0x01D5DF50 MOV X1, X31
	0x01D5DF54 LDR X8, [X8]
	0x01D5DF58 LDR X8, [X8 + 0xB8]
	0x01D5DF5C LDP S1, S2, [X8 + 0x4]
	0x01D5DF60 LDR V0, [X8]
	0x01D5DF64 BL 0x3C3FC4C
	0x01D5DF68 ADRP X8, 0xFFFFFFFFFED8D000
	0x01D5DF6C LDR V2, [X8 + 0x2AC]
	0x01D5DF70 FMOV S0, W31
	0x01D5DF74 FMOV S1, 1
	0x01D5DF78 MOV X0, X31
	0x01D5DF7C BL 0x31B22EC
	0x01D5DF80 CBZ X0, 0x1D5E03C
	0x01D5DF84 ADRP X20, 0x2398000
	0x01D5DF88 ADRP X21, 0x2398000
	0x01D5DF8C LDR X20, [X20 + 0x5B0]
	0x01D5DF90 LDR X21, [X21 + 0x5B8]
	0x01D5DF94 MOV X1, X31
	0x01D5DF98 BL 0x31C5F74
	0x01D5DF9C LDR X8, [X20]
	0x01D5DFA0 MOV X20, X0
	0x01D5DFA4 MOV X0, X8
	0x01D5DFA8 BL 0x1C16F10
	0x01D5DFAC LDR X2, [X21]
	0x01D5DFB0 MOV X1, X19
	0x01D5DFB4 MOV X3, X31
	0x01D5DFB8 MOV X21, X0
	0x01D5DFBC BL 0x2A6DA40
	0x01D5DFC0 CBZ X20, 0x1D5E03C
	0x01D5DFC4 ADRP X22, 0x2397000
	0x01D5DFC8 ADRP X23, 0x2398000
	0x01D5DFCC LDR X22, [X22 + 0xE70]
	0x01D5DFD0 LDR X23, [X23 + 0x5C0]
	0x01D5DFD4 MOV X0, X20
	0x01D5DFD8 MOV X1, X21
	0x01D5DFDC MOV X2, X31
	0x01D5DFE0 BL 0x31C8070
	0x01D5DFE4 LDR X8, [X22]
	0x01D5DFE8 MOV X20, X0
	0x01D5DFEC MOV X0, X8
	0x01D5DFF0 BL 0x1C16F10
	0x01D5DFF4 LDR X2, [X23]
	0x01D5DFF8 MOV X1, X19
	0x01D5DFFC MOV X3, X31
	0x01D5E000 MOV X21, X0
	0x01D5E004 BL 0x3314368
	0x01D5E008 CBZ X20, 0x1D5E03C
	0x01D5E00C MOV X0, X20
	0x01D5E010 MOV X1, X21
	0x01D5E014 MOV X2, X31
	0x01D5E018 BL 0x31C7FD8
	0x01D5E01C CBZ X0, 0x1D5E03C
	0x01D5E020 MOV X1, X31
	0x01D5E024 BL 0x31BFBD4
	0x01D5E028 STR W0, [X19 + 0x20]
	0x01D5E02C LDP X20, X19, [X31 + 0x20]
	0x01D5E030 LDP X22, X21, [X31 + 0x10]
	0x01D5E034 LDP X30, X23, [X31], #0x30
	0x01D5E038 RET
	0x01D5E03C BL 0x1C16F20
	0x01D5E040 MOV X1, X31
	0x01D5E044 B 0x3C36C30
	0x01D5E048 STR D8, [X31 - 0x10]!
	0x01D5E04C STR X30, [X31 + 0x8]
	0x01D5E050 MOV X1, X31
	0x01D5E054 MOV V8.16B, V0.16B
	0x01D5E058 BL 0x3C32E90
	0x01D5E05C CBZ X0, 0x1D5E07C
	0x01D5E060 LDR X30, [X31 + 0x8]
	0x01D5E064 MOV V0.16B, V8.16B
	0x01D5E068 MOV V1.16B, V8.16B
	0x01D5E06C MOV V2.16B, V8.16B
	0x01D5E070 MOV X1, X31
	0x01D5E074 LDR V8, [X31], #0x10
	0x01D5E078 B 0x3C3FC4C
	0x01D5E07C BL 0x1C16F20
	0x01D5E080 STR X30, [X31 - 0x20]!
	0x01D5E084 STP X20, X19, [X31 + 0x10]
	0x01D5E088 MOV X1, X31
	0x01D5E08C BL 0x3C32E90
	0x01D5E090 ADRP X20, 0x267A000
	0x01D5E094 LDRB W8, [X20 + 0x85B]
	0x01D5E098 MOV X19, X0
	0x01D5E09C CBNZ W8, 0x1D5E0B4
	0x01D5E0A0 ADRP X0, 0x2395000
	0x01D5E0A4 LDR X0, [X0 + 0x5A0]
	0x01D5E0A8 BL 0x1C16CF4
	0x01D5E0AC MOVZ W8, 0x1
	0x01D5E0B0 STRB W8, [X20 + 0x85B]
	0x01D5E0B4 CBZ X19, 0x1D5E0E4
	0x01D5E0B8 ADRP X8, 0x2395000
	0x01D5E0BC LDR X8, [X8 + 0x5A0]
	0x01D5E0C0 MOV X0, X19
	0x01D5E0C4 LDP X20, X19, [X31 + 0x10]
	0x01D5E0C8 MOV X1, X31
	0x01D5E0CC LDR X8, [X8]
	0x01D5E0D0 LDR X8, [X8 + 0xB8]
	0x01D5E0D4 LDP S1, S2, [X8 + 0x10]
	0x01D5E0D8 LDR V0, [X8 + 0xC]
	0x01D5E0DC LDR X30, [X31], #0x20
	0x01D5E0E0 B 0x3C3FC4C
	0x01D5E0E4 BL 0x1C16F20
	0x01D5E0E8 STP X30, X23, [X31 - 0x30]!
	0x01D5E0EC STP X22, X21, [X31 + 0x10]
	0x01D5E0F0 STP X20, X19, [X31 + 0x20]
	0x01D5E0F4 ADRP X20, 0x267A000
	0x01D5E0F8 LDRB W8, [X20 + 0x824]
	0x01D5E0FC MOV X19, X0
	0x01D5E100 TBNZ X8, 0x0, 0x1D5E124
	0x01D5E104 ADRP X0, 0x2397000
	0x01D5E108 LDR X0, [X0 + 0x5C8]
	0x01D5E10C BL 0x1C16CF4
	0x01D5E110 ADRP X0, 0x2397000
	0x01D5E114 LDR X0, [X0 + 0x4A0]
	0x01D5E118 BL 0x1C16CF4
	0x01D5E11C MOVZ W8, 0x1
	0x01D5E120 STRB W8, [X20 + 0x824]
	0x01D5E124 LDR X22, [X19 + 0x20]
	0x01D5E128 CBZ X22, 0x1D5E1BC
	0x01D5E12C ADRP X23, 0x2397000
	0x01D5E130 LDR X23, [X23 + 0x4A0]
	0x01D5E134 ADRP X21, 0x2397000
	0x01D5E138 LDR X20, [X22 + 0x20]
	0x01D5E13C LDR X0, [X23]

ISIL:
	001 Move [X31-80], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x267C000
	011 Move W8, [X20+2075]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {85}
	017 Move X0, 0x2397000
	018 Move X0, [X0+2896]
	019 Call 0x1C17CF4
	020 Move X0, 0x2397000
	021 Move X0, [X0+1608]
	022 Call 0x1C17CF4
	023 Move X0, 0x2397000
	024 Move X0, [X0+2736]
	025 Call 0x1C17CF4
	026 Move X0, 0x2399000
	027 Move X0, [X0+1264]
	028 Call 0x1C17CF4
	029 Move X0, 0x2398000
	030 Move X0, [X0+1248]
	031 Call 0x1C17CF4
	032 Move X0, 0x2397000
	033 Move X0, [X0+1808]
	034 Call 0x1C17CF4
	035 Move X0, 0x2397000
	036 Move X0, [X0+1816]
	037 Call 0x1C17CF4
	038 Move X0, 0x2397000
	039 Move X0, [X0+1824]
	040 Call 0x1C17CF4
	041 Move X0, 0x2397000
	042 Move X0, [X0+2328]
	043 Call 0x1C17CF4
	044 Move X0, 0x2398000
	045 Move X0, [X0+1288]
	046 Call 0x1C17CF4
	047 Move X0, 0x2399000
	048 Move X0, [X0+1272]
	049 Call 0x1C17CF4
	050 Move X0, 0x2399000
	051 Move X0, [X0+1280]
	052 Call 0x1C17CF4
	053 Move X0, 0x2398000
	054 Move X0, [X0+1304]
	055 Call 0x1C17CF4
	056 Move X0, 0x2399000
	057 Move X0, [X0+1288]
	058 Call 0x1C17CF4
	059 Move X0, 0x2399000
	060 Move X0, [X0+1296]
	061 Call 0x1C17CF4
	062 Move X0, 0x2399000
	063 Move X0, [X0+1248]
	064 Call 0x1C17CF4
	065 Move X0, 0x2398000
	066 Move X0, [X0+1360]
	067 Call 0x1C17CF4
	068 Move X0, 0x2399000
	069 Move X0, [X0+1256]
	070 Call 0x1C17CF4
	071 Move X0, 0x2398000
	072 Move X0, [X0+1392]
	073 Call 0x1C17CF4
	074 Move X0, 0x2399000
	075 Move X0, [X0+1304]
	076 Call 0x1C17CF4
	077 Move X0, 0x2398000
	078 Move X0, [X0+1408]
	079 Call 0x1C17CF4
	080 Move X0, 0x2399000
	081 Move X0, [X0+1312]
	082 Call 0x1C17CF4
	083 Move W8, 1
	084 Move [X20+2075], W8
	085 Move W8, [X19+16]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Compare W8, 0
	089 JumpIfNotEqual {287}
	090 Move TEMP, 0
	091 Not TEMP
	092 Move W8, TEMP
	093 Move [X19+16], W8
	094 Move X8, 0x2397000
	095 Move X8, [X8+2736]
	096 Move W1, 1
	097 Move X0, [X8]
	098 Call 0x1C17D6C
	099 Move X8, 0x2397000
	100 Move X8, [X8+2328]
	101 Move X20, X0
	102 Move X8, [X8]
	103 Move X0, X8
	104 Call 0x1C17F10
	105 Move W1, W31
	106 Move X21, X0
	107 Call SetUserDailyRewardEligibilityAction..ctor, X0, X1
	108 Compare X20, 0
	109 JumpIfEqual {497}
	110 Compare X21, 0
	111 JumpIfEqual {118}
	112 Move X8, [X20]
	113 Move X0, X21
	114 Move X1, [X8+64]
	115 Call 0x1C17E00
	116 Compare X0, 0
	117 JumpIfEqual {499}
	118 Move W8, [X20+24]
	119 Compare W8, 0
	120 JumpIfEqual {498}
	121 Move [X20+32], X21
	122 Move X8, 0x2397000
	123 Move X8, [X8+1608]
	124 Move X0, [X8]
	125 Move W8, [X0+224]
	126 Compare W8, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 Move X0, X20
	130 Move X1, X31
	131 Call App.ExecuteActionOrDelay, X0
	132 Move X22, 0x2399000
	133 Move X22, [X22+1248]
	134 Move X0, [X22]
	135 Move W8, [X0+224]
	136 Compare W8, 0
	137 JumpIfNotEqual {140}
	138 Call 0x1C17DFC
	139 Move X0, [X22]
	140 Move X8, [X0+184]
	141 Move X20, [X8+8]
	142 Compare X20, 0
	143 JumpIfNotEqual {165}
	144 Move W8, [X0+224]
	145 Compare W8, 0
	146 JumpIfNotEqual {149}
	147 Call 0x1C17DFC
	148 Move X0, [X22]
	149 Move X9, 0x2399000
	150 Move X8, [X0+184]
	151 Move X9, [X9+1280]
	152 Move X21, [X8]
	153 Move X0, [X9]
	154 Call 0x1C17F10
	155 Move X8, 0x2399000
	156 Move X8, [X8+1288]
	157 Move X1, X21
	158 Move X3, X31
	159 Move X20, X0
	160 Move X2, [X8]
	161 Call TaskGenerator`1<ClaimRewardResponse>..ctor, X0, X1, X2
	162 Move X8, [X22]
	163 Move X8, [X8+184]
	164 Move [X8+8], X20
	165 Move X8, 0x2399000
	166 Move X8, [X8+1264]
	167 Move X0, X20
	168 Move W1, W31
	169 Move X2, X31
	170 Move X3, [X8]
	171 Call Commands.Task, X0, X1, X2
	172 Move [X19+24], X0
	173 Move [X19+32], X0
	174 Move W0, 1
	175 Move [X19+16], W0
	176 Move X0, [X19+40]
	177 Move TEMP, 0
	178 Not TEMP
	179 Move W8, TEMP
	180 Move [X19+16], W8
	181 Compare X0, 0
	182 JumpIfEqual {497}
	183 Move X1, X31
	184 Call Command.get_isAborted, X0
	185 Move TEMP, X0
	186 And TEMP, TEMP, 1
	187 Compare TEMP, 1
	188 JumpIfEqual {229}
	189 Move X8, 0x2397000
	190 Move X8, [X8+2736]
	191 Move W1, 1
	192 Move X0, [X8]
	193 Call 0x1C17D6C
	194 Move X8, [X19+40]
	195 Compare X8, 0
	196 JumpIfEqual {497}
	197 Move X22, [X8+88]
	198 Move X8, 0x2398000
	199 Move X8, [X8+1360]
	200 Move X20, X0
	201 Move X0, [X8]
	202 Call 0x1C17F10
	203 Move X1, X31
	204 Move X21, X0
	205 Call BaseAction..ctor, X0
	206 Move [X21+24], X22
	207 Compare X20, 0
	208 JumpIfEqual {497}
	209 Move X8, [X20]
	210 Move X0, X21
	211 Move X1, [X8+64]
	212 Call 0x1C17E00
	213 Compare X0, 0
	214 JumpIfEqual {499}
	215 Move W8, [X20+24]
	216 Compare W8, 0
	217 JumpIfEqual {498}
	218 Move [X20+32], X21
	219 Move X8, 0x2397000
	220 Move X8, [X8+1608]
	221 Move X0, [X8]
	222 Move W8, [X0+224]
	223 Compare W8, 0
	224 JumpIfNotEqual {226}
	225 Call 0x1C17DFC
	226 Move X0, X20
	227 Move X1, X31
	228 Call App.ExecuteAction, X0
	229 Move W0, W31
	230 Move [X19+40], X31
	231 Move X8, [X19+32]
	232 Move TEMP, 0
	233 Not TEMP
	234 Move W9, TEMP
	235 Move [X19+16], W9
	236 Compare X8, 0
	237 JumpIfEqual {497}
	238 Move X8, [X8+88]
	239 Move TEMP, X8
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfEqual {288}
	243 Move X9, 0x2397000
	244 Move X9, [X9+2736]
	245 Move X8, X8
	246 ShiftRight X8, 32
	247 And X8, X8, 0x7FFFFFFF
	248 Subtract W8, W8, 4
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Move X0, [X9]
	251 Move W1, 1
	252 NotImplemented "Instruction CSET not yet implemented."
	253 Call 0x1C17D6C
	254 Move X8, 0x2397000
	255 Move X8, [X8+2328]
	256 Move X19, X0
	257 Move X8, [X8]
	258 Move X0, X8
	259 Call 0x1C17F10
	260 Move W1, W21
	261 Move X20, X0
	262 Call SetUserDailyRewardEligibilityAction..ctor, X0, X1
	263 Compare X19, 0
	264 JumpIfEqual {497}
	265 Compare X20, 0
	266 JumpIfEqual {273}
	267 Move X8, [X19]
	268 Move X0, X20
	269 Move X1, [X8+64]
	270 Call 0x1C17E00
	271 Compare X0, 0
	272 JumpIfEqual {499}
	273 Move W8, [X19+24]
	274 Compare W8, 0
	275 JumpIfEqual {498}
	276 Move [X19+32], X20
	277 Move X8, 0x2397000
	278 Move X8, [X8+1608]
	279 Move X0, [X8]
	280 Move W8, [X0+224]
	281 Compare W8, 0
	282 JumpIfNotEqual {284}
	283 Call 0x1C17DFC
	284 Move X0, X19
	285 Move X1, X31
	286 Call App.ExecuteActionOrDelay, X0
	287 Move W0, W31
	288 Move X8, 0x2397000
	289 Move X8, [X8+2736]
	290 Move W1, 1
	291 Move X0, [X8]
	292 Call 0x1C17D6C
	293 Move X8, 0x2397000
	294 Move X8, [X8+2328]
	295 Move X20, X0
	296 Move X8, [X8]
	297 Move X0, X8
	298 Call 0x1C17F10
	299 Move W1, W31
	300 Move X21, X0
	301 Call SetUserDailyRewardEligibilityAction..ctor, X0, X1
	302 Compare X20, 0
	303 JumpIfEqual {497}
	304 Compare X21, 0
	305 JumpIfEqual {312}
	306 Move X8, [X20]
	307 Move X0, X21
	308 Move X1, [X8+64]
	309 Call 0x1C17E00
	310 Compare X0, 0
	311 JumpIfEqual {499}
	312 Move W8, [X20+24]
	313 Compare W8, 0
	314 JumpIfEqual {498}
	315 Move [X20+32], X21
	316 Move X8, 0x2397000
	317 Move X8, [X8+1608]
	318 Move X0, [X8]
	319 Move W8, [X0+224]
	320 Compare W8, 0
	321 JumpIfNotEqual {323}
	322 Call 0x1C17DFC
	323 Move X0, X20
	324 Move X1, X31
	325 Call App.ExecuteActionOrDelay, X0
	326 Move X20, 0x267C000
	327 Move W8, [X20+1938]
	328 Compare W8, 0
	329 JumpIfNotEqual {335}
	330 Move X0, 0x2398000
	331 Move X0, [X0+1440]
	332 Call 0x1C17CF4
	333 Move W8, 1
	334 Move [X20+1938], W8
	335 Move X21, 0x2398000
	336 Move X21, [X21+1440]
	337 Move X8, [X21]
	338 Move X8, [X8+184]
	339 Move X0, [X8]
	340 Compare X0, 0
	341 JumpIfEqual {497}
	342 Move X1, X31
	343 Call Component.get_transform, X0
	344 Compare X0, 0
	345 JumpIfEqual {497}
	346 Move X1, X31
	347 Call Transform.get_position, X0
	348 Move X22, 0x267C000
	349 Move W8, [X22+1939]
	350 Move V8, V0
	351 Move V9, V1
	352 Move V10, V2
	353 Compare W8, 0
	354 JumpIfNotEqual {360}
	355 Move X0, 0x2398000
	356 Move X0, [X0+1448]
	357 Call 0x1C17CF4
	358 Move W8, 1
	359 Move [X22+1939], W8
	360 Move X8, 0x2398000
	361 Move X8, [X8+1448]
	362 Move W0, 33
	363 Move V0, V8
	364 Move V1, V9
	365 Move X8, [X8]
	366 Move V2, V10
	367 Move X1, X31
	368 Move X8, [X8+184]
	369 Move S3, [X8]
	370 Move S4, [X8+4]
	371 Move S5, [X8+8]
	372 Move S6, [X8+12]
	373 Call NetworkVFX.PlayVFX, X0, X1, X2
	374 Move W8, [X20+1938]
	375 Compare W8, 0
	376 JumpIfNotEqual {382}
	377 Move X0, 0x2398000
	378 Move X0, [X0+1440]
	379 Call 0x1C17CF4
	380 Move W8, 1
	381 Move [X20+1938], W8
	382 Move X8, [X21]
	383 Move X8, [X8+184]
	384 Move X0, [X8]
	385 Compare X0, 0
	386 JumpIfEqual {497}
	387 Move X1, X31
	388 Call Component.get_transform, X0
	389 Compare X0, 0
	390 JumpIfEqual {497}
	391 Move X1, X31
	392 Call Transform.get_position, X0
	393 Move X8, 0x2398000
	394 Move X8, [X8+1392]
	395 Move S3, 1
	396 Move X1, X31
	397 Move X0, [X8]
	398 Call SFXManager.PlaySFXAsRPC, X0, X1, V0
	399 Move X8, 0x2397000
	400 Move X8, [X8+1824]
	401 Move X0, [X8]
	402 Call 0x1C17F10
	403 Move X8, 0x2397000
	404 Move X8, [X8+1816]
	405 Move X20, X0
	406 Move X1, [X8]
	407 Call Dictionary`2<Object, Object>..ctor, X0
	408 Compare X20, 0
	409 JumpIfEqual {497}
	410 Move X8, 0x2399000
	411 Move X9, 0x2399000
	412 Move X10, 0x2396000
	413 Move X8, [X8+1304]
	414 Move X9, [X9+1256]
	415 Call 0x3EB24F4
	416 Return X0
	417 Move X0, X20
	418 Move X1, [X8]
	419 Move X2, [X9]
	420 Move X3, [X10]
	421 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	422 Move X8, 0x2396000
	423 Move X8, [X8+2896]
	424 Move X0, [X8]
	425 Move W8, [X0+224]
	426 Compare W8, 0
	427 JumpIfNotEqual {429}
	428 Call 0x1C17DFC
	429 Move X8, 0x2398000
	430 Move X8, [X8+1312]
	431 Move X1, X20
	432 Move X2, X31
	433 Move X0, [X8]
	434 Call Analytics.Track, X0, X1
	435 Move X23, 0x2398000
	436 Move X23, [X23+1248]
	437 Move X0, [X23]
	438 Move W8, [X0+224]
	439 Compare W8, 0
	440 JumpIfNotEqual {443}
	441 Call 0x1C17DFC
	442 Move X0, [X23]
	443 Move X8, [X0+184]
	444 Move X21, [X8+16]
	445 Move X8, 0x2397000
	446 Move X8, [X8+1408]
	447 Move X20, [X8]
	448 Compare X21, 0
	449 JumpIfNotEqual {471}
	450 Move W8, [X0+224]
	451 Compare W8, 0
	452 JumpIfNotEqual {455}
	453 Call 0x1C17DFC
	454 Move X0, [X23]
	455 Move X9, 0x2397000
	456 Move X8, [X0+184]
	457 Move X9, [X9+1304]
	458 Move X22, [X8]
	459 Move X0, [X9]
	460 Call 0x1C17F10
	461 Move X8, 0x2398000
	462 Move X8, [X8+1296]
	463 Move X1, X22
	464 Move X3, X31
	465 Move X21, X0
	466 Move X2, [X8]
	467 Call TaskGenerator`1<Object>..ctor, X0, X1, X2
	468 Move X8, [X23]
	469 Move X8, [X8+184]
	470 Move [X8+16], X21
	471 Move X8, 0x2397000
	472 Move X8, [X8+1248]
	473 Move X0, X20
	474 Move X1, X21
	475 Move W2, W31
	476 Move X4, [X8]
	477 Move X3, X31
	478 Call Commands.Task, X0, X1, X2, X3
	479 Move [X19+40], X0
	480 Compare X0, 0
	481 JumpIfEqual {497}
	482 Move W8, 2
	483 Move [X0+20], W31
	484 Move [X19+24], X0
	485 Move [X19+16], W8
	486 Move W0, 1
	487 Move X20, [X31+64]
	488 Move X19, [X31+72]
	489 Move X22, [X31+48]
	490 Move X21, [X31+56]
	491 Move X30, [X31+32]
	492 Move X23, [X31+40]
	493 Move D9, [X31+16]
	494 Move D8, [X31+24]
	495 Move V10, [X31+80]
	496 Return X0
	497 Call 0x1C17F20
	498 Call 0x1C17F28
	499 Call 0x1C17F44
	500 Move X1, X31
	501 Call 0x1C17DEC

Method: SpatialSys.CommandLib.Command System.Collections.Generic.IEnumerator<SpatialSys.CommandLib.Command>.get_Current()

Disassembly:
	0x01D5E140 LDR X21, [X21 + 0x5C8]
	0x01D5E144 BL 0x1C16F10

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01D5E148 LDR X2, [X21]
	0x01D5E14C MOV X1, X19
	0x01D5E150 MOV X3, X31
	0x01D5E154 MOV X21, X0
	0x01D5E158 BL 0x2D32B84
	0x01D5E15C MOV X0, X20
	0x01D5E160 MOV X1, X21
	0x01D5E164 MOV X2, X31
	0x01D5E168 BL 0x33C0DE4
	0x01D5E16C CBZ X0, 0x1D5E1A8
	0x01D5E170 LDR X20, [X23]
	0x01D5E174 MOV X19, X0
	0x01D5E178 MOV X1, X20
	0x01D5E17C BL 0x1C16E00

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x2396000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2398000
	011 Move X0, [X0+1320]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01D5E180 CBZ X0, 0x1D5E19C
	0x01D5E184 STR X0, [X22 + 0x20]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

