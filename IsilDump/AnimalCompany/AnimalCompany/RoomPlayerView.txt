Type: AnimalCompany.RoomPlayerView

Method: System.String get_displayName()

Disassembly:
	0x01D86BF0 LDR X8, [X8 + 0x9A0]
	0x01D86BF4 B 0x1D86B64
	0x01D86BF8 ADRP X8, 0x2370000
	0x01D86BFC LDR X8, [X8 + 0x9B8]
	0x01D86C00 B 0x1D86B90
	0x01D86C04 CMP W1, 0x7F
	0x01D86C08 B.NE 0x1D86C28
	0x01D86C0C LDR X8, [X0 + 0x38]
	0x01D86C10 CBZ X8, 0x1D86C28

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+1352]
	007 Move X1, [X8+1360]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Void add_onAddFriend(System.Action`1<System.String> value)

Disassembly:
	0x01D7F724 LDR X0, [X9]
	0x01D7F728 BL 0x1C16F10
	0x01D7F72C ADRP X8, 0x2377000
	0x01D7F730 LDR X8, [X8 + 0x5C0]
	0x01D7F734 MOV X1, X22
	0x01D7F738 MOV X3, X31
	0x01D7F73C MOV X21, X0
	0x01D7F740 LDR X2, [X8]
	0x01D7F744 BL 0x2D30578
	0x01D7F748 LDR X8, [X23]
	0x01D7F74C LDR X8, [X8 + 0xB8]
	0x01D7F750 STR X21, [X8 + 0x68]
	0x01D7F754 LDR X2, [X24]
	0x01D7F758 MOV X0, X20
	0x01D7F75C MOV X1, X21
	0x01D7F760 BL 0x21C9B5C
	0x01D7F764 CBZ X0, 0x1D7F96C
	0x01D7F768 ADRP X10, 0x2377000
	0x01D7F76C LDR X8, [X0]
	0x01D7F770 LDR X10, [X10 + 0x5A8]
	0x01D7F774 MOV X20, X0
	0x01D7F778 LDRH W9, [X8 + 0x12E]
	0x01D7F77C LDR X1, [X10]
	0x01D7F780 CBZ X9, 0x1D7F7A4
	0x01D7F784 LDR X10, [X8 + 0xB0]
	0x01D7F788 ADD X10, X10, 0x8
	0x01D7F78C LDUR X11, [X10 - 0x8]
	0x01D7F790 CMP X11, X1
	0x01D7F794 B.EQ 0x1D7F7B4
	0x01D7F798 SUBS X9, X9, 0x1
	0x01D7F79C ADD X10, X10, 0x10
	0x01D7F7A0 B.NE 0x1D7F78C
	0x01D7F7A4 MOV X0, X20
	0x01D7F7A8 MOV W2, W31
	0x01D7F7AC BL 0x1C5C788
	0x01D7F7B0 B 0x1D7F7C0
	0x01D7F7B4 LDRSW X9, [X10]
	0x01D7F7B8 ADD X8, X8, X9, 0x4, LSL
	0x01D7F7BC ADD X0, X8, 0x138
	0x01D7F7C0 LDP X8, X1, [X0]
	0x01D7F7C4 ADRP X22, 0x2374000
	0x01D7F7C8 LDR X22, [X22 + 0xE00]
	0x01D7F7CC MOV X0, X20
	0x01D7F7D0 BLR X8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x265A000
	009 Move W8, [X21+2466]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2376000
	017 Move X0, [X0+3688]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2466], W8
	021 Move X24, 0x2376000
	022 Add X20, X20, 112
	023 Move X21, [X20]
	024 Move X24, [X24+3688]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_onAddFriend(System.Action`1<System.String> value)

Disassembly:
	0x01D8859C STRB W8, [X22 + 0x85D]
	0x01D885A0 LDR X0, [X21]
	0x01D885A4 LDR W8, [X0 + 0xE0]
	0x01D885A8 CBNZ W8, 0x1D885B4
	0x01D885AC BL 0x1C16DFC
	0x01D885B0 LDR X0, [X21]
	0x01D885B4 LDR X8, [X0 + 0xB8]
	0x01D885B8 LDR X0, [X8]
	0x01D885BC CBZ X0, 0x1D885F4
	0x01D885C0 LDR W8, [X19 + 0x80]
	0x01D885C4 MOV W2, W20
	0x01D885C8 MOV X3, X31
	0x01D885CC CMP W8, 0x0
	0x01D885D0 CSET W1, NE
	0x01D885D4 BL 0x1DC2FC4
	0x01D885D8 LDP X20, X19, [X31 + 0x40]
	0x01D885DC LDP X22, X21, [X31 + 0x30]
	0x01D885E0 LDP X24, X23, [X31 + 0x20]
	0x01D885E4 LDR X30, [X31 + 0x18]
	0x01D885E8 LDR V8, [X31 + 0x10]
	0x01D885EC ADD X31, X31, 0x50
	0x01D885F0 RET
	0x01D885F4 BL 0x1C16F20
	0x01D885F8 STP X30, X23, [X31 - 0x30]!
	0x01D885FC STP X22, X21, [X31 + 0x10]
	0x01D88600 STP X20, X19, [X31 + 0x20]
	0x01D88604 ADRP X23, 0x2650000
	0x01D88608 ADRP X22, 0x236E000
	0x01D8860C LDRB W8, [X23 + 0x9B1]
	0x01D88610 LDR X22, [X22 + 0xA58]
	0x01D88614 MOV W21, W2
	0x01D88618 MOV X20, X1
	0x01D8861C MOV X19, X0
	0x01D88620 TBNZ X8, 0x0, 0x1D88638
	0x01D88624 ADRP X0, 0x236E000
	0x01D88628 LDR X0, [X0 + 0xA58]
	0x01D8862C BL 0x1C16CF4
	0x01D88630 MOVZ W8, 0x1
	0x01D88634 STRB W8, [X23 + 0x9B1]
	0x01D88638 AND W2, W21, 0x1
	0x01D8863C MOV X0, X19
	0x01D88640 MOV X1, X20
	0x01D88644 MOV X3, X31
	0x01D88648 BL 0x1E73F8C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2651000
	009 Move W8, [X21+2467]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x236D000
	017 Move X0, [X0+3688]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2467], W8
	021 Move X24, 0x236D000
	022 Add X20, X20, 112
	023 Move X21, [X20]
	024 Move X24, [X24+3688]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_onBlock(System.Action`1<System.String> value)

Disassembly:
	0x01D7F934 CBZ W8, 0x1D7F94C
	0x01D7F938 LDP X20, X19, [X31 + 0x30]
	0x01D7F93C LDP X22, X21, [X31 + 0x20]
	0x01D7F940 LDP X24, X23, [X31 + 0x10]
	0x01D7F944 LDR X30, [X31], #0x40
	0x01D7F948 RET
	0x01D7F94C MOV X0, X19
	0x01D7F950 LDP X20, X19, [X31 + 0x30]
	0x01D7F954 LDP X22, X21, [X31 + 0x20]
	0x01D7F958 LDP X24, X23, [X31 + 0x10]
	0x01D7F95C LDR X30, [X31], #0x40
	0x01D7F960 B 0x1D84E84
	0x01D7F964 BL 0x1C16F20
	0x01D7F968 BL 0x1C16F20
	0x01D7F96C BL 0x1C16F20
	0x01D7F970 BL 0x1C16F20
	0x01D7F974 MOV X0, X21
	0x01D7F978 BL 0x1C16F18
	0x01D7F97C B 0x1D7F990
	0x01D7F980 B 0x1D7F990
	0x01D7F984 B 0x1D7F990
	0x01D7F988 B 0x1D7F990
	0x01D7F98C B 0x1D7F990
	0x01D7F990 CMP W1, 0x1
	0x01D7F994 B.NE 0x1D7F9B0
	0x01D7F998 BL 0x3EB1AD0
	0x01D7F99C LDR X21, [X0]
	0x01D7F9A0 BL 0x3EB1AE0
	0x01D7F9A4 MOV W23, W31
	0x01D7F9A8 CBNZ X20, 0x1D7F8C8
	0x01D7F9AC B 0x1D7F920
	0x01D7F9B0 MOV X19, X0
	0x01D7F9B4 MOV X21, X31
	0x01D7F9B8 B 0x1D7F9C0
	0x01D7F9BC MOV X19, X0
	0x01D7F9C0 CBZ X20, 0x1D7FA1C
	0x01D7F9C4 LDR X8, [X20]
	0x01D7F9C8 LDR X1, [X22]
	0x01D7F9CC LDRH W9, [X8 + 0x12E]
	0x01D7F9D0 CBZ X9, 0x1D7F9F4
	0x01D7F9D4 LDR X10, [X8 + 0xB0]
	0x01D7F9D8 ADD X10, X10, 0x8
	0x01D7F9DC LDUR X11, [X10 - 0x8]
	0x01D7F9E0 CMP X11, X1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x265A000
	009 Move W8, [X21+2468]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2376000
	017 Move X0, [X0+3688]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2468], W8
	021 Move X24, 0x2376000
	022 Add X20, X20, 120
	023 Move X21, [X20]
	024 Move X24, [X24+3688]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_onBlock(System.Action`1<System.String> value)

Disassembly:
	0x01D8864C MOV X0, X19
	0x01D88650 BL 0x1D886B4
	0x01D88654 LDR X8, [X22]
	0x01D88658 LDR X8, [X8 + 0xB8]
	0x01D8865C LDR X8, [X8]
	0x01D88660 CBZ X8, 0x1D8867C
	0x01D88664 LDR X9, [X19 + 0x40]
	0x01D88668 CBZ X9, 0x1D8868C
	0x01D8866C LDR X9, [X9 + 0x20]
	0x01D88670 CBZ X9, 0x1D8868C
	0x01D88674 LDR W1, [X9]
	0x01D88678 B 0x1D88690
	0x01D8867C LDP X20, X19, [X31 + 0x20]
	0x01D88680 LDP X22, X21, [X31 + 0x10]
	0x01D88684 LDP X30, X23, [X31], #0x30
	0x01D88688 RET
	0x01D8868C MOV X1, X31
	0x01D88690 LDR W9, [X19 + 0x68]
	0x01D88694 LDR X3, [X8 + 0x18]
	0x01D88698 LDR X0, [X8 + 0x40]
	0x01D8869C LDR X2, [X8 + 0x28]
	0x01D886A0 LDP X20, X19, [X31 + 0x20]
	0x01D886A4 LDP X22, X21, [X31 + 0x10]
	0x01D886A8 BFM X1, X9, 0x20, 0x1F
	0x01D886AC LDP X30, X23, [X31], #0x30
	0x01D886B0 BR X3
	0x01D886B4 STP X30, X23, [X31 - 0x30]!
	0x01D886B8 STP X22, X21, [X31 + 0x10]
	0x01D886BC STP X20, X19, [X31 + 0x20]
	0x01D886C0 ADRP X21, 0x2650000
	0x01D886C4 ADRP X20, 0x236B000
	0x01D886C8 LDRB W8, [X21 + 0x9BA]
	0x01D886CC LDR X20, [X20 + 0x598]
	0x01D886D0 MOV X19, X0
	0x01D886D4 TBNZ X8, 0x0, 0x1D8871C
	0x01D886D8 ADRP X0, 0x236E000
	0x01D886DC LDR X0, [X0 + 0xA30]
	0x01D886E0 BL 0x1C16CF4
	0x01D886E4 ADRP X0, 0x236C000
	0x01D886E8 LDR X0, [X0 + 0xE70]
	0x01D886EC BL 0x1C16CF4
	0x01D886F0 ADRP X0, 0x236E000
	0x01D886F4 LDR X0, [X0 + 0xA38]
	0x01D886F8 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2651000
	009 Move W8, [X21+2469]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x236D000
	017 Move X0, [X0+3688]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2469], W8
	021 Move X24, 0x236D000
	022 Add X20, X20, 120
	023 Move X21, [X20]
	024 Move X24, [X24+3688]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_onUnblock(System.Action`1<System.String> value)

Disassembly:
	0x01D7F9E4 B.EQ 0x1D7FA04
	0x01D7F9E8 SUBS X9, X9, 0x1
	0x01D7F9EC ADD X10, X10, 0x10
	0x01D7F9F0 B.NE 0x1D7F9DC
	0x01D7F9F4 MOV X0, X20
	0x01D7F9F8 MOV W2, W31
	0x01D7F9FC BL 0x1C5C788
	0x01D7FA00 B 0x1D7FA10
	0x01D7FA04 LDRSW X9, [X10]
	0x01D7FA08 ADD X8, X8, X9, 0x4, LSL
	0x01D7FA0C ADD X0, X8, 0x138
	0x01D7FA10 LDP X8, X1, [X0]
	0x01D7FA14 MOV X0, X20
	0x01D7FA18 BLR X8
	0x01D7FA1C CBNZ X21, 0x1D7FA28
	0x01D7FA20 MOV X0, X19
	0x01D7FA24 BL 0x1D2C690
	0x01D7FA28 MOV X0, X21
	0x01D7FA2C BL 0x1C16F18
	0x01D7FA30 BL 0x1990590
	0x01D7FA34 STR X30, [X31 - 0x60]!
	0x01D7FA38 STP X28, X27, [X31 + 0x10]
	0x01D7FA3C STP X26, X25, [X31 + 0x20]
	0x01D7FA40 STP X24, X23, [X31 + 0x30]
	0x01D7FA44 STP X22, X21, [X31 + 0x40]
	0x01D7FA48 STP X20, X19, [X31 + 0x50]
	0x01D7FA4C ADRP X21, 0x2659000
	0x01D7FA50 ADRP X20, 0x2377000
	0x01D7FA54 ADRP X25, 0x2377000
	0x01D7FA58 LDRB W8, [X21 + 0x97C]
	0x01D7FA5C LDR X20, [X20 + 0x578]
	0x01D7FA60 LDR X25, [X25 + 0x580]
	0x01D7FA64 MOV X19, X0
	0x01D7FA68 TBNZ X8, 0x0, 0x1D7FB4C
	0x01D7FA6C ADRP X0, 0x2377000
	0x01D7FA70 LDR X0, [X0 + 0x578]
	0x01D7FA74 BL 0x1C16CF4
	0x01D7FA78 ADRP X0, 0x2377000
	0x01D7FA7C LDR X0, [X0 + 0x5C8]
	0x01D7FA80 BL 0x1C16CF4
	0x01D7FA84 ADRP X0, 0x2377000
	0x01D7FA88 LDR X0, [X0 + 0x5D0]
	0x01D7FA8C BL 0x1C16CF4
	0x01D7FA90 ADRP X0, 0x2377000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x265A000
	009 Move W8, [X21+2470]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2376000
	017 Move X0, [X0+3688]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2470], W8
	021 Move X24, 0x2376000
	022 Add X20, X20, 128
	023 Move X21, [X20]
	024 Move X24, [X24+3688]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_onUnblock(System.Action`1<System.String> value)

Disassembly:
	0x01D886FC ADRP X0, 0x236E000
	0x01D88700 LDR X0, [X0 + 0xA40]
	0x01D88704 BL 0x1C16CF4
	0x01D88708 ADRP X0, 0x236B000
	0x01D8870C LDR X0, [X0 + 0x598]
	0x01D88710 BL 0x1C16CF4
	0x01D88714 MOVZ W8, 0x1
	0x01D88718 STRB W8, [X21 + 0x9BA]
	0x01D8871C LDR X0, [X20]
	0x01D88720 LDR X20, [X19 + 0xC0]
	0x01D88724 LDR W8, [X0 + 0xE0]
	0x01D88728 CBNZ W8, 0x1D88730
	0x01D8872C BL 0x1C16DFC
	0x01D88730 MOV X0, X20
	0x01D88734 MOV X1, X31
	0x01D88738 MOV X2, X31
	0x01D8873C BL 0x3C354F8
	0x01D88740 TBZ X0, 0x0, 0x1D88840
	0x01D88744 LDR X22, [X19 + 0xC0]
	0x01D88748 CBZ X22, 0x1D88854
	0x01D8874C ADRP X23, 0x236C000
	0x01D88750 LDR X20, [X22 + 0x1C8]
	0x01D88754 LDR X23, [X23 + 0xE70]
	0x01D88758 LDR X0, [X23]
	0x01D8875C BL 0x1C16F10
	0x01D88760 ADRP X8, 0x236E000
	0x01D88764 LDR X8, [X8 + 0xA40]
	0x01D88768 MOV X1, X19
	0x01D8876C MOV X3, X31
	0x01D88770 MOV X21, X0
	0x01D88774 LDR X2, [X8]
	0x01D88778 BL 0x3314368
	0x01D8877C MOV X0, X20
	0x01D88780 MOV X1, X21
	0x01D88784 MOV X2, X31
	0x01D88788 BL 0x33C0FDC
	0x01D8878C CBZ X0, 0x1D887B4
	0x01D88790 LDR X1, [X23]
	0x01D88794 LDR X8, [X0]
	0x01D88798 CMP X8, X1
	0x01D8879C B.NE 0x1D887B0
	0x01D887A0 STR X0, [X22 + 0x1C8]
	0x01D887A4 LDR X8, [X0]
	0x01D887A8 CMP X8, X1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2651000
	009 Move W8, [X21+2471]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x236D000
	017 Move X0, [X0+3688]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2471], W8
	021 Move X24, 0x236D000
	022 Add X20, X20, 128
	023 Move X21, [X20]
	024 Move X24, [X24+3688]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_onMute(System.Action`1<System.String> value)

Disassembly:
	0x01D7F7D4 MOV X20, X0
	0x01D7F7D8 CBZ X0, 0x1D7F970
	0x01D7F7DC ADRP X21, 0x2374000
	0x01D7F7E0 ADRP X23, 0x2377000
	0x01D7F7E4 LDR X21, [X21 + 0xE18]
	0x01D7F7E8 LDR X23, [X23 + 0x5B0]
	0x01D7F7EC LDR X8, [X20]
	0x01D7F7F0 LDR X1, [X21]
	0x01D7F7F4 LDRH W9, [X8 + 0x12E]
	0x01D7F7F8 CBZ X9, 0x1D7F81C
	0x01D7F7FC LDR X10, [X8 + 0xB0]
	0x01D7F800 ADD X10, X10, 0x8
	0x01D7F804 LDUR X11, [X10 - 0x8]
	0x01D7F808 CMP X11, X1
	0x01D7F80C B.EQ 0x1D7F82C
	0x01D7F810 SUBS X9, X9, 0x1
	0x01D7F814 ADD X10, X10, 0x10
	0x01D7F818 B.NE 0x1D7F804
	0x01D7F81C MOV X0, X20
	0x01D7F820 MOV W2, W31
	0x01D7F824 BL 0x1C5C788
	0x01D7F828 B 0x1D7F838
	0x01D7F82C LDRSW X9, [X10]
	0x01D7F830 ADD X8, X8, X9, 0x4, LSL
	0x01D7F834 ADD X0, X8, 0x138
	0x01D7F838 LDP X8, X1, [X0]
	0x01D7F83C MOV X0, X20
	0x01D7F840 BLR X8
	0x01D7F844 TBZ X0, 0x0, 0x1D7F8BC
	0x01D7F848 LDR X8, [X20]
	0x01D7F84C LDR X1, [X23]
	0x01D7F850 LDRH W9, [X8 + 0x12E]
	0x01D7F854 CBZ X9, 0x1D7F878
	0x01D7F858 LDR X10, [X8 + 0xB0]
	0x01D7F85C ADD X10, X10, 0x8
	0x01D7F860 LDUR X11, [X10 - 0x8]
	0x01D7F864 CMP X11, X1
	0x01D7F868 B.EQ 0x1D7F888
	0x01D7F86C SUBS X9, X9, 0x1
	0x01D7F870 ADD X10, X10, 0x10
	0x01D7F874 B.NE 0x1D7F860
	0x01D7F878 MOV X0, X20
	0x01D7F87C MOV W2, W31
	0x01D7F880 BL 0x1C5C788

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x265A000
	009 Move W8, [X21+2472]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2376000
	017 Move X0, [X0+3688]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2472], W8
	021 Move X24, 0x2376000
	022 Add X20, X20, 136
	023 Move X21, [X20]
	024 Move X24, [X24+3688]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_onMute(System.Action`1<System.String> value)

Disassembly:
	0x01D887AC B.EQ 0x1D887B8
	0x01D887B0 BL 0x1C171E0
	0x01D887B4 STR X0, [X22 + 0x1C8]
	0x01D887B8 LDR X22, [X19 + 0xC0]
	0x01D887BC CBZ X22, 0x1D88854
	0x01D887C0 ADRP X23, 0x236E000
	0x01D887C4 LDR X20, [X22 + 0x1F0]
	0x01D887C8 LDR X23, [X23 + 0xA30]
	0x01D887CC LDR X0, [X23]
	0x01D887D0 BL 0x1C16F10
	0x01D887D4 ADRP X8, 0x236E000
	0x01D887D8 LDR X8, [X8 + 0xA38]
	0x01D887DC MOV X1, X19
	0x01D887E0 MOV X3, X31
	0x01D887E4 MOV X21, X0
	0x01D887E8 LDR X2, [X8]
	0x01D887EC BL 0x2A6B948
	0x01D887F0 MOV X0, X20
	0x01D887F4 MOV X1, X21
	0x01D887F8 MOV X2, X31
	0x01D887FC BL 0x33C0FDC
	0x01D88800 CBZ X0, 0x1D8883C
	0x01D88804 LDR X21, [X23]
	0x01D88808 MOV X20, X0
	0x01D8880C MOV X1, X21
	0x01D88810 BL 0x1C16E00
	0x01D88814 CBZ X0, 0x1D88830
	0x01D88818 STR X0, [X22 + 0x1F0]
	0x01D8881C LDR X21, [X23]
	0x01D88820 MOV X0, X20
	0x01D88824 MOV X1, X21
	0x01D88828 BL 0x1C16E00
	0x01D8882C CBNZ X0, 0x1D88840
	0x01D88830 MOV X0, X20
	0x01D88834 MOV X1, X21
	0x01D88838 BL 0x1C171E0
	0x01D8883C STR X31, [X22 + 0x1F0]
	0x01D88840 STR X31, [X19 + 0xC0]
	0x01D88844 LDP X20, X19, [X31 + 0x20]
	0x01D88848 LDP X22, X21, [X31 + 0x10]
	0x01D8884C LDP X30, X23, [X31], #0x30
	0x01D88850 RET
	0x01D88854 BL 0x1C16F20
	0x01D88858 STP X30, X23, [X31 - 0x30]!

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2651000
	009 Move W8, [X21+2473]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x236D000
	017 Move X0, [X0+3688]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2473], W8
	021 Move X24, 0x236D000
	022 Add X20, X20, 136
	023 Move X21, [X20]
	024 Move X24, [X24+3688]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_onUnmute(System.Action`1<System.String> value)

Disassembly:
	0x01D7F884 B 0x1D7F894
	0x01D7F888 LDRSW X9, [X10]
	0x01D7F88C ADD X8, X8, X9, 0x4, LSL
	0x01D7F890 ADD X0, X8, 0x138
	0x01D7F894 LDP X8, X1, [X0]
	0x01D7F898 MOV X0, X20
	0x01D7F89C BLR X8
	0x01D7F8A0 CBZ X0, 0x1D7F964
	0x01D7F8A4 MOV X1, X31
	0x01D7F8A8 BL 0x3C32E90
	0x01D7F8AC CBZ X0, 0x1D7F968
	0x01D7F8B0 MOV X1, X31
	0x01D7F8B4 BL 0x3C40D04
	0x01D7F8B8 B 0x1D7F7EC
	0x01D7F8BC MOV X21, X31
	0x01D7F8C0 MOVZ W23, 0x6
	0x01D7F8C4 CBZ X20, 0x1D7F920
	0x01D7F8C8 LDR X8, [X20]
	0x01D7F8CC LDR X1, [X22]
	0x01D7F8D0 LDRH W9, [X8 + 0x12E]
	0x01D7F8D4 CBZ X9, 0x1D7F8F8
	0x01D7F8D8 LDR X10, [X8 + 0xB0]
	0x01D7F8DC ADD X10, X10, 0x8
	0x01D7F8E0 LDUR X11, [X10 - 0x8]
	0x01D7F8E4 CMP X11, X1
	0x01D7F8E8 B.EQ 0x1D7F908
	0x01D7F8EC SUBS X9, X9, 0x1
	0x01D7F8F0 ADD X10, X10, 0x10
	0x01D7F8F4 B.NE 0x1D7F8E0
	0x01D7F8F8 MOV X0, X20
	0x01D7F8FC MOV W2, W31
	0x01D7F900 BL 0x1C5C788
	0x01D7F904 B 0x1D7F914
	0x01D7F908 LDRSW X9, [X10]
	0x01D7F90C ADD X8, X8, X9, 0x4, LSL
	0x01D7F910 ADD X0, X8, 0x138
	0x01D7F914 LDP X8, X1, [X0]
	0x01D7F918 MOV X0, X20
	0x01D7F91C BLR X8
	0x01D7F920 CBNZ X21, 0x1D7F974
	0x01D7F924 CMP W23, 0x6
	0x01D7F928 B.EQ 0x1D7F930
	0x01D7F92C CBNZ W23, 0x1D7F938
	0x01D7F930 LDR W8, [X19 + 0xB8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x265A000
	009 Move W8, [X21+2474]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2376000
	017 Move X0, [X0+3688]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2474], W8
	021 Move X24, 0x2376000
	022 Add X20, X20, 144
	023 Move X21, [X20]
	024 Move X24, [X24+3688]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_onUnmute(System.Action`1<System.String> value)

Disassembly:
	0x01D8885C STP X22, X21, [X31 + 0x10]
	0x01D88860 STP X20, X19, [X31 + 0x20]
	0x01D88864 ADRP X20, 0x2650000
	0x01D88868 LDRB W8, [X20 + 0x9B2]
	0x01D8886C MOV X19, X0
	0x01D88870 TBNZ X8, 0x0, 0x1D888B8
	0x01D88874 ADRP X0, 0x236C000
	0x01D88878 LDR X0, [X0 + 0xE70]
	0x01D8887C BL 0x1C16CF4
	0x01D88880 ADRP X0, 0x236E000
	0x01D88884 LDR X0, [X0 + 0xA60]
	0x01D88888 BL 0x1C16CF4
	0x01D8888C ADRP X0, 0x236E000
	0x01D88890 LDR X0, [X0 + 0xA68]
	0x01D88894 BL 0x1C16CF4
	0x01D88898 ADRP X0, 0x236E000
	0x01D8889C LDR X0, [X0 + 0xA70]
	0x01D888A0 BL 0x1C16CF4
	0x01D888A4 ADRP X0, 0x236B000
	0x01D888A8 LDR X0, [X0 + 0x598]
	0x01D888AC BL 0x1C16CF4
	0x01D888B0 MOVZ W8, 0x1
	0x01D888B4 STRB W8, [X20 + 0x9B2]
	0x01D888B8 LDR W8, [X19 + 0x80]
	0x01D888BC CMP W8, 0x3
	0x01D888C0 B.NE 0x1D889EC
	0x01D888C4 ADRP X8, 0x236E000
	0x01D888C8 LDR X8, [X8 + 0xA70]
	0x01D888CC ADRP X21, 0x236B000
	0x01D888D0 MOV X0, X19
	0x01D888D4 LDR X1, [X8]
	0x01D888D8 LDR X21, [X21 + 0x598]
	0x01D888DC BL 0x21A3F50
	0x01D888E0 STR X0, [X19 + 0xC8]
	0x01D888E4 MOV X20, X0
	0x01D888E8 LDR X0, [X21]
	0x01D888EC LDR W8, [X0 + 0xE0]
	0x01D888F0 CBNZ W8, 0x1D888F8
	0x01D888F4 BL 0x1C16DFC
	0x01D888F8 MOV X0, X20
	0x01D888FC MOV X1, X31
	0x01D88900 MOV X2, X31
	0x01D88904 BL 0x3C354F8
	0x01D88908 TBZ X0, 0x0, 0x1D889EC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2651000
	009 Move W8, [X21+2475]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x236D000
	017 Move X0, [X0+3688]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2475], W8
	021 Move X24, 0x236D000
	022 Add X20, X20, 144
	023 Move X21, [X20]
	024 Move X24, [X24+3688]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_onCancel(System.Action`1<System.String> value)

Disassembly:
	0x01D7FA94 LDR X0, [X0 + 0x5D8]
	0x01D7FA98 BL 0x1C16CF4
	0x01D7FA9C ADRP X0, 0x2377000
	0x01D7FAA0 LDR X0, [X0 + 0x5E0]
	0x01D7FAA4 BL 0x1C16CF4
	0x01D7FAA8 ADRP X0, 0x2377000
	0x01D7FAAC LDR X0, [X0 + 0x5E8]
	0x01D7FAB0 BL 0x1C16CF4
	0x01D7FAB4 ADRP X0, 0x2377000
	0x01D7FAB8 LDR X0, [X0 + 0x5F0]
	0x01D7FABC BL 0x1C16CF4
	0x01D7FAC0 ADRP X0, 0x2377000
	0x01D7FAC4 LDR X0, [X0 + 0x5F8]
	0x01D7FAC8 BL 0x1C16CF4
	0x01D7FACC ADRP X0, 0x2377000
	0x01D7FAD0 LDR X0, [X0 + 0x600]
	0x01D7FAD4 BL 0x1C16CF4
	0x01D7FAD8 ADRP X0, 0x2377000
	0x01D7FADC LDR X0, [X0 + 0x608]
	0x01D7FAE0 BL 0x1C16CF4
	0x01D7FAE4 ADRP X0, 0x2377000
	0x01D7FAE8 LDR X0, [X0 + 0x610]
	0x01D7FAEC BL 0x1C16CF4
	0x01D7FAF0 ADRP X0, 0x2377000
	0x01D7FAF4 LDR X0, [X0 + 0x618]
	0x01D7FAF8 BL 0x1C16CF4
	0x01D7FAFC ADRP X0, 0x2377000
	0x01D7FB00 LDR X0, [X0 + 0x620]
	0x01D7FB04 BL 0x1C16CF4
	0x01D7FB08 ADRP X0, 0x2377000
	0x01D7FB0C LDR X0, [X0 + 0x628]
	0x01D7FB10 BL 0x1C16CF4
	0x01D7FB14 ADRP X0, 0x2377000
	0x01D7FB18 LDR X0, [X0 + 0x630]
	0x01D7FB1C BL 0x1C16CF4
	0x01D7FB20 ADRP X0, 0x2377000
	0x01D7FB24 LDR X0, [X0 + 0x638]
	0x01D7FB28 BL 0x1C16CF4
	0x01D7FB2C ADRP X0, 0x2377000
	0x01D7FB30 LDR X0, [X0 + 0x640]
	0x01D7FB34 BL 0x1C16CF4
	0x01D7FB38 ADRP X0, 0x2377000
	0x01D7FB3C LDR X0, [X0 + 0x580]
	0x01D7FB40 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x265A000
	009 Move W8, [X21+2476]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2376000
	017 Move X0, [X0+3688]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2476], W8
	021 Move X24, 0x2376000
	022 Add X20, X20, 152
	023 Move X21, [X20]
	024 Move X24, [X24+3688]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_onCancel(System.Action`1<System.String> value)

Disassembly:
	0x01D8890C LDR X23, [X19 + 0xC8]
	0x01D88910 CBZ X23, 0x1D889FC
	0x01D88914 ADRP X22, 0x236C000
	0x01D88918 LDR X20, [X23 + 0x200]
	0x01D8891C LDR X22, [X22 + 0xE70]
	0x01D88920 LDR X0, [X22]
	0x01D88924 BL 0x1C16F10
	0x01D88928 ADRP X8, 0x236E000
	0x01D8892C LDR X8, [X8 + 0xA60]
	0x01D88930 MOV X1, X19
	0x01D88934 MOV X3, X31
	0x01D88938 MOV X21, X0
	0x01D8893C LDR X2, [X8]
	0x01D88940 BL 0x3314368
	0x01D88944 MOV X0, X20
	0x01D88948 MOV X1, X21
	0x01D8894C MOV X2, X31
	0x01D88950 BL 0x33C0DE4
	0x01D88954 LDR X1, [X22]
	0x01D88958 CBZ X0, 0x1D8897C
	0x01D8895C LDR X8, [X0]
	0x01D88960 CMP X8, X1
	0x01D88964 B.NE 0x1D889E4
	0x01D88968 STR X0, [X23 + 0x200]
	0x01D8896C LDR X8, [X0]
	0x01D88970 CMP X8, X1
	0x01D88974 B.EQ 0x1D88980
	0x01D88978 B 0x1D889E4
	0x01D8897C STR X0, [X23 + 0x200]
	0x01D88980 LDR X23, [X19 + 0xC8]
	0x01D88984 CBZ X23, 0x1D889FC
	0x01D88988 LDR X20, [X23 + 0x208]
	0x01D8898C MOV X0, X1
	0x01D88990 BL 0x1C16F10
	0x01D88994 ADRP X8, 0x236E000
	0x01D88998 LDR X8, [X8 + 0xA68]
	0x01D8899C MOV X1, X19
	0x01D889A0 MOV X3, X31
	0x01D889A4 MOV X21, X0
	0x01D889A8 LDR X2, [X8]
	0x01D889AC BL 0x3314368
	0x01D889B0 MOV X0, X20
	0x01D889B4 MOV X1, X21
	0x01D889B8 MOV X2, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2651000
	009 Move W8, [X21+2477]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x236D000
	017 Move X0, [X0+3688]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2477], W8
	021 Move X24, 0x236D000
	022 Add X20, X20, 152
	023 Move X21, [X20]
	024 Move X24, [X24+3688]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void OnEnable()

Disassembly:
	0x01D889BC BL 0x33C0DE4
	0x01D889C0 CBZ X0, 0x1D889E8
	0x01D889C4 LDR X1, [X22]
	0x01D889C8 LDR X8, [X0]
	0x01D889CC CMP X8, X1
	0x01D889D0 B.NE 0x1D889E4
	0x01D889D4 STR X0, [X23 + 0x208]
	0x01D889D8 LDR X8, [X0]
	0x01D889DC CMP X8, X1
	0x01D889E0 B.EQ 0x1D889EC
	0x01D889E4 BL 0x1C171E0
	0x01D889E8 STR X0, [X23 + 0x208]
	0x01D889EC LDP X20, X19, [X31 + 0x20]
	0x01D889F0 LDP X22, X21, [X31 + 0x10]
	0x01D889F4 LDP X30, X23, [X31], #0x30
	0x01D889F8 RET
	0x01D889FC BL 0x1C16F20
	0x01D88A00 STP X30, X23, [X31 - 0x30]!
	0x01D88A04 STP X22, X21, [X31 + 0x10]
	0x01D88A08 STP X20, X19, [X31 + 0x20]
	0x01D88A0C ADRP X20, 0x2650000
	0x01D88A10 ADRP X21, 0x236E000
	0x01D88A14 LDRB W8, [X20 + 0x9B3]
	0x01D88A18 LDR X21, [X21 + 0xA78]
	0x01D88A1C MOV X19, X0
	0x01D88A20 TBNZ X8, 0x0, 0x1D88A68
	0x01D88A24 ADRP X0, 0x236C000
	0x01D88A28 LDR X0, [X0 + 0xE70]
	0x01D88A2C BL 0x1C16CF4
	0x01D88A30 ADRP X0, 0x236E000
	0x01D88A34 LDR X0, [X0 + 0xA60]
	0x01D88A38 BL 0x1C16CF4
	0x01D88A3C ADRP X0, 0x236E000
	0x01D88A40 LDR X0, [X0 + 0xA68]
	0x01D88A44 BL 0x1C16CF4
	0x01D88A48 ADRP X0, 0x236E000
	0x01D88A4C LDR X0, [X0 + 0xA78]
	0x01D88A50 BL 0x1C16CF4
	0x01D88A54 ADRP X0, 0x236B000
	0x01D88A58 LDR X0, [X0 + 0x598]
	0x01D88A5C BL 0x1C16CF4
	0x01D88A60 MOVZ W8, 0x1
	0x01D88A64 STRB W8, [X20 + 0x9B3]
	0x01D88A68 LDR X0, [X21]
	0x01D88A6C LDR W8, [X0 + 0xE0]
	0x01D88A70 CBNZ W8, 0x1D88A78
	0x01D88A74 BL 0x1C16DFC
	0x01D88A78 CBZ X19, 0x1D88BA8
	0x01D88A7C LDR W8, [X19 + 0x30]
	0x01D88A80 ADRP X9, 0x236B000
	0x01D88A84 LDR X9, [X9 + 0x598]
	0x01D88A88 LDR X20, [X19 + 0xC8]
	0x01D88A8C ORR W8, W8, 0x8
	0x01D88A90 STR W8, [X19 + 0x30]
	0x01D88A94 LDR X0, [X9]
	0x01D88A98 LDR W8, [X0 + 0xE0]
	0x01D88A9C CBNZ W8, 0x1D88AA4
	0x01D88AA0 BL 0x1C16DFC
	0x01D88AA4 MOV X0, X20
	0x01D88AA8 MOV X1, X31
	0x01D88AAC MOV X2, X31
	0x01D88AB0 BL 0x3C354F8
	0x01D88AB4 TBZ X0, 0x0, 0x1D88B98
	0x01D88AB8 LDR X23, [X19 + 0xC8]
	0x01D88ABC CBZ X23, 0x1D88BA8
	0x01D88AC0 ADRP X22, 0x236C000
	0x01D88AC4 LDR X20, [X23 + 0x200]
	0x01D88AC8 LDR X22, [X22 + 0xE70]
	0x01D88ACC LDR X0, [X22]
	0x01D88AD0 BL 0x1C16F10
	0x01D88AD4 ADRP X8, 0x236E000
	0x01D88AD8 LDR X8, [X8 + 0xA60]
	0x01D88ADC MOV X1, X19
	0x01D88AE0 MOV X3, X31
	0x01D88AE4 MOV X21, X0
	0x01D88AE8 LDR X2, [X8]
	0x01D88AEC BL 0x3314368
	0x01D88AF0 MOV X0, X20
	0x01D88AF4 MOV X1, X21
	0x01D88AF8 MOV X2, X31
	0x01D88AFC BL 0x33C0FDC
	0x01D88B00 LDR X1, [X22]
	0x01D88B04 CBZ X0, 0x1D88B28
	0x01D88B08 LDR X8, [X0]
	0x01D88B0C CMP X8, X1
	0x01D88B10 B.NE 0x1D88B90
	0x01D88B14 STR X0, [X23 + 0x200]
	0x01D88B18 LDR X8, [X0]
	0x01D88B1C CMP X8, X1
	0x01D88B20 B.EQ 0x1D88B2C
	0x01D88B24 B 0x1D88B90
	0x01D88B28 STR X0, [X23 + 0x200]
	0x01D88B2C LDR X23, [X19 + 0xC8]
	0x01D88B30 CBZ X23, 0x1D88BA8
	0x01D88B34 LDR X20, [X23 + 0x208]
	0x01D88B38 MOV X0, X1
	0x01D88B3C BL 0x1C16F10
	0x01D88B40 ADRP X8, 0x236E000
	0x01D88B44 LDR X8, [X8 + 0xA68]
	0x01D88B48 MOV X1, X19
	0x01D88B4C MOV X3, X31
	0x01D88B50 MOV X21, X0
	0x01D88B54 LDR X2, [X8]
	0x01D88B58 BL 0x3314368
	0x01D88B5C MOV X0, X20
	0x01D88B60 MOV X1, X21
	0x01D88B64 MOV X2, X31
	0x01D88B68 BL 0x33C0FDC
	0x01D88B6C CBZ X0, 0x1D88B94
	0x01D88B70 LDR X1, [X22]
	0x01D88B74 LDR X8, [X0]
	0x01D88B78 CMP X8, X1
	0x01D88B7C B.NE 0x1D88B90
	0x01D88B80 STR X0, [X23 + 0x208]
	0x01D88B84 LDR X8, [X0]
	0x01D88B88 CMP X8, X1
	0x01D88B8C B.EQ 0x1D88B98
	0x01D88B90 BL 0x1C171E0
	0x01D88B94 STR X0, [X23 + 0x208]
	0x01D88B98 LDP X20, X19, [X31 + 0x20]
	0x01D88B9C LDP X22, X21, [X31 + 0x10]
	0x01D88BA0 LDP X30, X23, [X31], #0x30
	0x01D88BA4 RET
	0x01D88BA8 BL 0x1C16F20
	0x01D88BAC STP X30, X19, [X31 - 0x10]!
	0x01D88BB0 MOV X1, X31
	0x01D88BB4 MOV X19, X0
	0x01D88BB8 BL 0x3C32E90
	0x01D88BBC CBZ X0, 0x1D88BD8
	0x01D88BC0 MOV X1, X31
	0x01D88BC4 BL 0x3C3F58C
	0x01D88BC8 STP S0, S1, [X19 + 0xB4]
	0x01D88BCC STR S2, [X19 + 0xBC]
	0x01D88BD0 LDP X30, X19, [X31], #0x10
	0x01D88BD4 RET
	0x01D88BD8 BL 0x1C16F20
	0x01D88BDC STP D9, D8, [X31 - 0x20]!
	0x01D88BE0 STP X30, X19, [X31 + 0x10]
	0x01D88BE4 MOV X19, X0
	0x01D88BE8 LDR X0, [X0 + 0x40]
	0x01D88BEC CBZ X0, 0x1D88C6C
	0x01D88BF0 LDRB W8, [X0 + 0x60]
	0x01D88BF4 TBNZ X8, 0x1, 0x1D88C6C
	0x01D88BF8 MOV X1, X31
	0x01D88BFC BL 0x1E93588
	0x01D88C00 TBZ X0, 0x0, 0x1D88C6C
	0x01D88C04 MOV X0, X19
	0x01D88C08 MOV X1, X31
	0x01D88C0C BL 0x3C32E90
	0x01D88C10 CBZ X0, 0x1D88C78
	0x01D88C14 MOV X1, X31
	0x01D88C18 BL 0x3C3F58C
	0x01D88C1C LDUR V3, [X19 + 0xB4]
	0x01D88C20 LDR V4, [X19 + 0xBC]
	0x01D88C24 MOV X0, X31
	0x01D88C28 MOV V0.S[1], V1.S[0]
	0x01D88C2C FSUB V8.2S, V0.2S, V3.2S
	0x01D88C30 FSUB S9, S2, S4
	0x01D88C34 BL 0x3C3C714
	0x01D88C38 UNIMPLEMENTED
	0x01D88C3C FDIV S0, S9, S0
	0x00000000 INVALID
	0x01D88C44 MOV X0, X19
	0x01D88C48 MOV X1, X31
	0x01D88C4C STR D1, [X19 + 0xA8]
	0x01D88C50 STR S0, [X19 + 0xB0]
	0x01D88C54 BL 0x3C32E90
	0x01D88C58 CBZ X0, 0x1D88C78
	0x01D88C5C MOV X1, X31
	0x01D88C60 BL 0x3C3F58C
	0x01D88C64 STP S0, S1, [X19 + 0xB4]
	0x01D88C68 STR S2, [X19 + 0xBC]
	0x01D88C6C LDP X30, X19, [X31 + 0x10]
	0x01D88C70 LDP D9, D8, [X31], #0x20
	0x01D88C74 RET
	0x01D88C78 BL 0x1C16F20
	0x01D88C7C SUB X31, X31, 0x40
	0x01D88C80 STP X30, X23, [X31 + 0x10]
	0x01D88C84 STP X22, X21, [X31 + 0x20]
	0x01D88C88 STP X20, X19, [X31 + 0x30]
	0x01D88C8C ADRP X23, 0x2650000
	0x01D88C90 LDRB W8, [X23 + 0x9B4]
	0x01D88C94 MOV W20, W3
	0x01D88C98 MOV W21, W2
	0x01D88C9C MOV X22, X1
	0x01D88CA0 MOV X19, X0
	0x01D88CA4 TBNZ X8, 0x0, 0x1D88CD4
	0x01D88CA8 ADRP X0, 0x236E000
	0x01D88CAC LDR X0, [X0 + 0xA78]
	0x01D88CB0 BL 0x1C16CF4
	0x01D88CB4 ADRP X0, 0x236E000
	0x01D88CB8 LDR X0, [X0 + 0xA50]
	0x01D88CBC BL 0x1C16CF4
	0x01D88CC0 ADRP X0, 0x236E000
	0x01D88CC4 LDR X0, [X0 + 0xA80]
	0x01D88CC8 BL 0x1C16CF4
	0x01D88CCC MOVZ W8, 0x1
	0x01D88CD0 STRB W8, [X23 + 0x9B4]
	0x01D88CD4 STR X31, [X31 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2651000
	008 Move W8, [X20+2478]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {37}
	014 Move X0, 0x236D000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move X0, 0x236F000
	018 Move X0, [X0+2536]
	019 Call 0x1C17CF4
	020 Move X0, 0x236F000
	021 Move X0, [X0+2544]
	022 Call 0x1C17CF4
	023 Move X0, 0x236F000
	024 Move X0, [X0+2552]
	025 Call 0x1C17CF4
	026 Move X0, 0x236F000
	027 Move X0, [X0+2560]
	028 Call 0x1C17CF4
	029 Move X0, 0x236F000
	030 Move X0, [X0+2568]
	031 Call 0x1C17CF4
	032 Move X0, 0x236F000
	033 Move X0, [X0+2576]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+2478], W8
	037 Move X23, [X19+56]
	038 Compare X23, 0
	039 JumpIfEqual {203}
	040 Move X22, 0x236D000
	041 Move X22, [X22+3696]
	042 Move X21, 0x236F000
	043 Move X20, [X23+32]
	044 Move X0, [X22]
	045 Move X21, [X21+2560]
	046 Call 0x1C17F10
	047 Move X2, [X21]
	048 Move X1, X19
	049 Move X3, X31
	050 Move X21, X0
	051 Call Action..ctor, X0, X1, X2
	052 Move X0, X20
	053 Move X1, X21
	054 Move X2, X31
	055 Call Delegate.Combine, X0, X1
	056 Move X1, [X22]
	057 Compare X0, 0
	058 JumpIfEqual {64}
	059 Move X8, [X0]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move [X23+32], X0
	062 Move X8, [X0]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move [X23+32], X0
	065 Move X23, [X19+64]
	066 Compare X23, 0
	067 JumpIfEqual {203}
	068 Move X21, 0x236F000
	069 Move X20, [X23+32]
	070 Move X21, [X21+2576]
	071 Move X0, X1
	072 Call 0x1C17F10
	073 Move X2, [X21]
	074 Move X1, X19
	075 Move X3, X31
	076 Move X21, X0
	077 Call Action..ctor, X0, X1, X2
	078 Move X0, X20
	079 Move X1, X21
	080 Move X2, X31
	081 Call Delegate.Combine, X0, X1
	082 Move X1, [X22]
	083 Compare X0, 0
	084 JumpIfEqual {90}
	085 Move X8, [X0]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move [X23+32], X0
	088 Move X8, [X0]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move [X23+32], X0
	091 Move X23, [X19+72]
	092 Compare X23, 0
	093 JumpIfEqual {203}
	094 Move X21, 0x236F000
	095 Move X20, [X23+32]
	096 Move X21, [X21+2536]
	097 Move X0, X1
	098 Call 0x1C17F10
	099 Move X2, [X21]
	100 Move X1, X19
	101 Move X3, X31
	102 Move X21, X0
	103 Call Action..ctor, X0, X1, X2
	104 Move X0, X20
	105 Move X1, X21
	106 Move X2, X31
	107 Call Delegate.Combine, X0, X1
	108 Move X1, [X22]
	109 Compare X0, 0
	110 JumpIfEqual {116}
	111 Move X8, [X0]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move [X23+32], X0
	114 Move X8, [X0]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move [X23+32], X0
	117 Move X23, [X19+80]
	118 Compare X23, 0
	119 JumpIfEqual {203}
	120 Move X21, 0x236F000
	121 Move X20, [X23+32]
	122 Move X21, [X21+2544]
	123 Move X0, X1
	124 Call 0x1C17F10
	125 Move X2, [X21]
	126 Move X1, X19
	127 Move X3, X31
	128 Move X21, X0
	129 Call Action..ctor, X0, X1, X2
	130 Move X0, X20
	131 Move X1, X21
	132 Move X2, X31
	133 Call Delegate.Combine, X0, X1
	134 Move X1, [X22]
	135 Compare X0, 0
	136 JumpIfEqual {142}
	137 Move X8, [X0]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move [X23+32], X0
	140 Move X8, [X0]
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move [X23+32], X0
	143 Move X23, [X19+88]
	144 Compare X23, 0
	145 JumpIfEqual {203}
	146 Move X21, 0x236F000
	147 Move X20, [X23+32]
	148 Move X21, [X21+2568]
	149 Move X0, X1
	150 Call 0x1C17F10
	151 Move X2, [X21]
	152 Move X1, X19
	153 Move X3, X31
	154 Move X21, X0
	155 Call Action..ctor, X0, X1, X2
	156 Move X0, X20
	157 Move X1, X21
	158 Move X2, X31
	159 Call Delegate.Combine, X0, X1
	160 Move X1, [X22]
	161 Compare X0, 0
	162 JumpIfEqual {168}
	163 Move X8, [X0]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move [X23+32], X0
	166 Move X8, [X0]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move [X23+32], X0
	169 Move X23, [X19+96]
	170 Compare X23, 0
	171 JumpIfEqual {203}
	172 Move X21, 0x236F000
	173 Move X20, [X23+32]
	174 Move X21, [X21+2552]
	175 Move X0, X1
	176 Call 0x1C17F10
	177 Move X2, [X21]
	178 Move X1, X19
	179 Move X3, X31
	180 Move X21, X0
	181 Call Action..ctor, X0, X1, X2
	182 Move X0, X20
	183 Move X1, X21
	184 Move X2, X31
	185 Call Delegate.Combine, X0, X1
	186 Compare X0, 0
	187 JumpIfEqual {195}
	188 Move X1, [X22]
	189 Move X8, [X0]
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move [X23+32], X0
	192 Move X8, [X0]
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Call 0x1C181E0
	195 Move [X23+32], X0
	196 Move X20, [X31+32]
	197 Move X19, [X31+40]
	198 Move X22, [X31+16]
	199 Move X21, [X31+24]
	200 Move X30, [X31+48]
	201 Move X23, [X31+56]
	202 Return 
	203 Call 0x1C17F20

Method: System.Void OnDisable()

Disassembly:
	0x01D88CD8 LDRB W8, [X19 + 0x58]
	0x01D88CDC CBZ W8, 0x1D88D3C
	0x01D88CE0 STRB W31, [X19 + 0x58]
	0x01D88CE4 LDR X0, [X19 + 0x38]
	0x01D88CE8 CBZ X0, 0x1D88EB8
	0x01D88CEC ADRP X8, 0x236E000
	0x01D88CF0 LDR X8, [X8 + 0xA50]
	0x01D88CF4 ADD X2, X31, 0x8
	0x01D88CF8 MOV X1, X22
	0x01D88CFC LDR X3, [X8]
	0x01D88D00 BL 0x222BD98
	0x01D88D04 TBZ X0, 0x0, 0x1D88EA4
	0x01D88D08 LDR X0, [X31 + 0x8]
	0x01D88D0C CBZ X0, 0x1D88EB8
	0x01D88D10 BL 0x1D88EBC
	0x01D88D14 TBNZ X0, 0x0, 0x1D88D1C
	0x01D88D18 TBZ X21, 0x0, 0x1D88EA4
	0x01D88D1C LDR X8, [X31 + 0x8]
	0x01D88D20 CBZ X8, 0x1D88EB8
	0x01D88D24 LDR X9, [X8 + 0x40]
	0x01D88D28 CBZ X9, 0x1D88DE8
	0x01D88D2C LDR X9, [X9 + 0x20]
	0x01D88D30 CBZ X9, 0x1D88DE8
	0x01D88D34 LDR W1, [X9]
	0x01D88D38 B 0x1D88DEC
	0x01D88D3C ADRP X23, 0x236E000
	0x01D88D40 LDR X23, [X23 + 0xA78]
	0x01D88D44 LDR X0, [X23]
	0x01D88D48 LDR W8, [X0 + 0xE0]
	0x01D88D4C CBNZ W8, 0x1D88D54
	0x01D88D50 BL 0x1C16DFC
	0x01D88D54 MOV X0, X19
	0x01D88D58 MOV X1, X31
	0x01D88D5C BL 0x1E77B08
	0x01D88D60 LDR X0, [X19 + 0x38]
	0x01D88D64 CBZ X0, 0x1D88EB8
	0x01D88D68 MOV X1, X31
	0x01D88D6C BL 0x1E9E538
	0x01D88D70 CMP W0, 0x4
	0x01D88D74 B.EQ 0x1D88EA4
	0x01D88D78 LDR X0, [X19 + 0x40]
	0x01D88D7C CBZ X0, 0x1D88EB8
	0x01D88D80 MOV X1, X31
	0x01D88D84 BL 0x1E94078
	0x01D88D88 ANDS W31, W0, 0x3
	0x01D88D8C B.EQ 0x1D88E14
	0x01D88D90 MOV W8, W0
	0x01D88D94 LDR X0, [X19 + 0x38]
	0x01D88D98 TBNZ X8, 0x0, 0x1D88E48
	0x01D88D9C CBZ X0, 0x1D88EB8
	0x01D88DA0 LDR X0, [X0 + 0x50]
	0x01D88DA4 CBZ X0, 0x1D88EB8
	0x01D88DA8 MOV X1, X31
	0x01D88DAC BL 0x1EC4D00
	0x01D88DB0 TBZ X0, 0x0, 0x1D88EA4
	0x01D88DB4 LDR X8, [X19 + 0x38]
	0x01D88DB8 CBZ X8, 0x1D88EB8
	0x01D88DBC LDR X0, [X8 + 0x50]
	0x01D88DC0 MOVZ W1, 0x18
	0x01D88DC4 MOV X2, X31
	0x01D88DC8 BL 0x1ED9318
	0x01D88DCC LDR X8, [X19 + 0x40]
	0x01D88DD0 CBZ X8, 0x1D88EB8
	0x01D88DD4 LDR X8, [X8 + 0x20]
	0x01D88DD8 MOV X23, X0
	0x01D88DDC CBZ X8, 0x1D88E5C
	0x01D88DE0 LDR W0, [X8]
	0x01D88DE4 B 0x1D88E60
	0x01D88DE8 MOV X1, X31
	0x01D88DEC LDR W8, [X8 + 0x68]
	0x01D88DF0 MOV X0, X19
	0x01D88DF4 BFM X1, X8, 0x20, 0x1F
	0x01D88DF8 BL 0x1D88124
	0x01D88DFC LDR X0, [X31 + 0x8]
	0x01D88E00 CBZ X0, 0x1D88EB8
	0x01D88E04 AND W2, W20, 0x1
	0x01D88E08 MOV X1, X19
	0x01D88E0C BL 0x1D88EF8
	0x01D88E10 B 0x1D88EA4
	0x01D88E14 LDR X0, [X23]
	0x01D88E18 LDR X19, [X19 + 0x40]
	0x01D88E1C LDR W8, [X0 + 0xE0]
	0x01D88E20 CBNZ W8, 0x1D88E28
	0x01D88E24 BL 0x1C16DFC
	0x01D88E28 ADRP X8, 0x236E000
	0x01D88E2C LDR X8, [X8 + 0xA80]
	0x01D88E30 MOVZ W2, 0x3
	0x01D88E34 MOV X1, X19
	0x01D88E38 MOV X3, X31
	0x01D88E3C LDR X0, [X8]
	0x01D88E40 BL 0x1E77B00
	0x01D88E44 B 0x1D88EA4
	0x01D88E48 MOV W1, W31
	0x01D88E4C MOV W2, W31
	0x01D88E50 MOV X3, X31
	0x01D88E54 BL 0x1E9C494
	0x01D88E58 B 0x1D88CE4
	0x01D88E5C MOV X0, X31
	0x01D88E60 LDR W1, [X19 + 0x68]
	0x01D88E64 MOVZ W2, 0x1
	0x01D88E68 MOV X3, X31
	0x01D88E6C BL 0x1E9C23C
	0x01D88E70 AND W8, W21, 0x1
	0x01D88E74 AND W9, W20, 0x1
	0x01D88E78 STUR X0, [X23 + 0x1C]
	0x01D88E7C STUR X22, [X23 + 0x24]
	0x01D88E80 STP W8, W9, [X23 + 0x2C]
	0x01D88E84 CBZ X23, 0x1D88EB8
	0x01D88E88 MOVZ W8, 0xC0
	0x01D88E8C STR W8, [X23 + 0xC]
	0x01D88E90 LDR X0, [X19 + 0x38]
	0x01D88E94 CBZ X0, 0x1D88EB8
	0x01D88E98 MOV X1, X23
	0x01D88E9C MOV X2, X31
	0x01D88EA0 BL 0x1EA1E24
	0x01D88EA4 LDP X20, X19, [X31 + 0x30]
	0x01D88EA8 LDP X22, X21, [X31 + 0x20]
	0x01D88EAC LDP X30, X23, [X31 + 0x10]
	0x01D88EB0 ADD X31, X31, 0x40
	0x01D88EB4 RET
	0x01D88EB8 BL 0x1C16F20
	0x01D88EBC STP X30, X19, [X31 - 0x10]!
	0x01D88EC0 MOV X19, X0
	0x01D88EC4 BL 0x1D8D0A8
	0x01D88EC8 TBZ X0, 0x0, 0x1D88ED8
	0x01D88ECC MOV W0, W31
	0x01D88ED0 LDP X30, X19, [X31], #0x10
	0x01D88ED4 RET
	0x01D88ED8 MOV X0, X19
	0x01D88EDC BL 0x1D8EE20
	0x01D88EE0 TBZ X0, 0x0, 0x1D88EEC
	0x01D88EE4 LDRB W8, [X19 + 0xC0]
	0x01D88EE8 CBZ W8, 0x1D88ECC
	0x01D88EEC MOV X0, X19
	0x01D88EF0 LDP X30, X19, [X31], #0x10
	0x01D88EF4 B 0x1D89D0C
	0x01D88EF8 STP X30, X21, [X31 - 0x20]!
	0x01D88EFC STP X20, X19, [X31 + 0x10]
	0x01D88F00 LDR X8, [X0 + 0x38]
	0x01D88F04 STR X1, [X0 + 0x1A0]
	0x01D88F08 CBZ X8, 0x1D88FD8
	0x01D88F0C LDR W8, [X8 + 0x188]
	0x01D88F10 MOV W20, W2
	0x01D88F14 MOV X19, X0
	0x01D88F18 MOV X21, X1
	0x01D88F1C CMP W8, 0x2
	0x01D88F20 B.NE 0x1D88F5C
	0x01D88F24 LDR X0, [X19 + 0x40]
	0x01D88F28 CBZ X0, 0x1D88FD8
	0x01D88F2C LDRB W8, [X0 + 0x60]
	0x01D88F30 TBNZ X8, 0x1, 0x1D88FA8
	0x01D88F34 MOV X1, X31
	0x01D88F38 BL 0x1E93668
	0x01D88F3C TBZ X0, 0x0, 0x1D88FA0
	0x01D88F40 CBZ X21, 0x1D88FD8
	0x01D88F44 LDR X8, [X21 + 0x40]
	0x01D88F48 CBZ X8, 0x1D88FB8
	0x01D88F4C LDR X8, [X8 + 0x20]
	0x01D88F50 CBZ X8, 0x1D88FB8
	0x01D88F54 LDR W1, [X8]
	0x01D88F58 B 0x1D88FBC
	0x01D88F5C CBZ X21, 0x1D88FD8
	0x01D88F60 LDR X8, [X21 + 0x40]
	0x01D88F64 CBZ X8, 0x1D88F78
	0x01D88F68 LDR X8, [X8 + 0x20]
	0x01D88F6C CBZ X8, 0x1D88F78
	0x01D88F70 LDR W1, [X8]
	0x01D88F74 B 0x1D88F7C
	0x01D88F78 MOV X1, X31
	0x01D88F7C LDR W8, [X21 + 0x68]
	0x01D88F80 AND W2, W20, 0x1
	0x01D88F84 MOV X0, X19
	0x01D88F88 LDP X20, X19, [X31 + 0x10]
	0x01D88F8C BFM X1, X8, 0x20, 0x1F
	0x01D88F90 MOV X3, X31
	0x01D88F94 MOV X4, X31
	0x01D88F98 LDP X30, X21, [X31], #0x20
	0x01D88F9C B 0x1D8F738
	0x01D88FA0 LDR X0, [X19 + 0x40]
	0x01D88FA4 CBZ X0, 0x1D88FD8
	0x01D88FA8 LDP X20, X19, [X31 + 0x10]
	0x01D88FAC MOV X1, X31
	0x01D88FB0 LDP X30, X21, [X31], #0x20
	0x01D88FB4 B 0x1E94414
	0x01D88FB8 MOV X1, X31
	0x01D88FBC LDR W8, [X21 + 0x68]
	0x01D88FC0 AND W2, W20, 0x1
	0x01D88FC4 MOV X0, X19
	0x01D88FC8 LDP X20, X19, [X31 + 0x10]
	0x01D88FCC BFM X1, X8, 0x20, 0x1F
	0x01D88FD0 LDP X30, X21, [X31], #0x20
	0x01D88FD4 B 0x1D8F660
	0x01D88FD8 BL 0x1C16F20
	0x01D88FDC SUB X31, X31, 0x80
	0x01D88FE0 STP D15, D14, [X31 + 0x10]
	0x01D88FE4 STP D13, D12, [X31 + 0x20]
	0x01D88FE8 STP D11, D10, [X31 + 0x30]
	0x01D88FEC STP D9, D8, [X31 + 0x40]
	0x01D88FF0 STR X30, [X31 + 0x50]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2651000
	008 Move W8, [X20+2479]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {37}
	014 Move X0, 0x236D000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move X0, 0x236F000
	018 Move X0, [X0+2536]
	019 Call 0x1C17CF4
	020 Move X0, 0x236F000
	021 Move X0, [X0+2544]
	022 Call 0x1C17CF4
	023 Move X0, 0x236F000
	024 Move X0, [X0+2552]
	025 Call 0x1C17CF4
	026 Move X0, 0x236F000
	027 Move X0, [X0+2560]
	028 Call 0x1C17CF4
	029 Move X0, 0x236F000
	030 Move X0, [X0+2568]
	031 Call 0x1C17CF4
	032 Move X0, 0x236F000
	033 Move X0, [X0+2576]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+2479], W8
	037 Move X23, [X19+56]
	038 Compare X23, 0
	039 JumpIfEqual {203}
	040 Move X22, 0x236D000
	041 Move X22, [X22+3696]
	042 Move X21, 0x236F000
	043 Move X20, [X23+32]
	044 Move X0, [X22]
	045 Move X21, [X21+2560]
	046 Call 0x1C17F10
	047 Move X2, [X21]
	048 Move X1, X19
	049 Move X3, X31
	050 Move X21, X0
	051 Call Action..ctor, X0, X1, X2
	052 Move X0, X20
	053 Move X1, X21
	054 Move X2, X31
	055 Call Delegate.Remove, X0, X1
	056 Move X1, [X22]
	057 Compare X0, 0
	058 JumpIfEqual {64}
	059 Move X8, [X0]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move [X23+32], X0
	062 Move X8, [X0]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move [X23+32], X0
	065 Move X23, [X19+64]
	066 Compare X23, 0
	067 JumpIfEqual {203}
	068 Move X21, 0x236F000
	069 Move X20, [X23+32]
	070 Move X21, [X21+2576]
	071 Move X0, X1
	072 Call 0x1C17F10
	073 Move X2, [X21]
	074 Move X1, X19
	075 Move X3, X31
	076 Move X21, X0
	077 Call Action..ctor, X0, X1, X2
	078 Move X0, X20
	079 Move X1, X21
	080 Move X2, X31
	081 Call Delegate.Remove, X0, X1
	082 Move X1, [X22]
	083 Compare X0, 0
	084 JumpIfEqual {90}
	085 Move X8, [X0]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move [X23+32], X0
	088 Move X8, [X0]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move [X23+32], X0
	091 Move X23, [X19+72]
	092 Compare X23, 0
	093 JumpIfEqual {203}
	094 Move X21, 0x236F000
	095 Move X20, [X23+32]
	096 Move X21, [X21+2536]
	097 Move X0, X1
	098 Call 0x1C17F10
	099 Move X2, [X21]
	100 Move X1, X19
	101 Move X3, X31
	102 Move X21, X0
	103 Call Action..ctor, X0, X1, X2
	104 Move X0, X20
	105 Move X1, X21
	106 Move X2, X31
	107 Call Delegate.Remove, X0, X1
	108 Move X1, [X22]
	109 Compare X0, 0
	110 JumpIfEqual {116}
	111 Move X8, [X0]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move [X23+32], X0
	114 Move X8, [X0]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move [X23+32], X0
	117 Move X23, [X19+80]
	118 Compare X23, 0
	119 JumpIfEqual {203}
	120 Move X21, 0x236F000
	121 Move X20, [X23+32]
	122 Move X21, [X21+2544]
	123 Move X0, X1
	124 Call 0x1C17F10
	125 Move X2, [X21]
	126 Move X1, X19
	127 Move X3, X31
	128 Move X21, X0
	129 Call Action..ctor, X0, X1, X2
	130 Move X0, X20
	131 Move X1, X21
	132 Move X2, X31
	133 Call Delegate.Remove, X0, X1
	134 Move X1, [X22]
	135 Compare X0, 0
	136 JumpIfEqual {142}
	137 Move X8, [X0]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move [X23+32], X0
	140 Move X8, [X0]
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move [X23+32], X0
	143 Move X23, [X19+88]
	144 Compare X23, 0
	145 JumpIfEqual {203}
	146 Move X21, 0x236F000
	147 Move X20, [X23+32]
	148 Move X21, [X21+2568]
	149 Move X0, X1
	150 Call 0x1C17F10
	151 Move X2, [X21]
	152 Move X1, X19
	153 Move X3, X31
	154 Move X21, X0
	155 Call Action..ctor, X0, X1, X2
	156 Move X0, X20
	157 Move X1, X21
	158 Move X2, X31
	159 Call Delegate.Remove, X0, X1
	160 Move X1, [X22]
	161 Compare X0, 0
	162 JumpIfEqual {168}
	163 Move X8, [X0]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move [X23+32], X0
	166 Move X8, [X0]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move [X23+32], X0
	169 Move X23, [X19+96]
	170 Compare X23, 0
	171 JumpIfEqual {203}
	172 Move X21, 0x236F000
	173 Move X20, [X23+32]
	174 Move X21, [X21+2552]
	175 Move X0, X1
	176 Call 0x1C17F10
	177 Move X2, [X21]
	178 Move X1, X19
	179 Move X3, X31
	180 Move X21, X0
	181 Call Action..ctor, X0, X1, X2
	182 Move X0, X20
	183 Move X1, X21
	184 Move X2, X31
	185 Call Delegate.Remove, X0, X1
	186 Compare X0, 0
	187 JumpIfEqual {195}
	188 Move X1, [X22]
	189 Move X8, [X0]
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move [X23+32], X0
	192 Move X8, [X0]
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Call 0x1C181E0
	195 Move [X23+32], X0
	196 Move X20, [X31+32]
	197 Move X19, [X31+40]
	198 Move X22, [X31+16]
	199 Move X21, [X31+24]
	200 Move X30, [X31+48]
	201 Move X23, [X31+56]
	202 Return 
	203 Call 0x1C17F20

Method: System.Void Setup(System.String id, System.String name, System.Boolean mute, AnimalCompany.RoomPlayerView/PlayerType playerType)

Disassembly:
	0x01D7FB44 MOVZ W8, 0x1
	0x01D7FB48 STRB W8, [X21 + 0x97C]
	0x01D7FB4C LDR X0, [X19 + 0x30]
	0x01D7FB50 LDR X1, [X20]
	0x01D7FB54 BL 0x21B44BC
	0x01D7FB58 LDR X8, [X25]
	0x01D7FB5C MOV X20, X0
	0x01D7FB60 LDR W9, [X8 + 0xE0]
	0x01D7FB64 CBNZ W9, 0x1D7FB74
	0x01D7FB68 MOV X0, X8
	0x01D7FB6C BL 0x1C16DFC
	0x01D7FB70 LDR X8, [X25]
	0x01D7FB74 LDR X9, [X8 + 0xB8]
	0x01D7FB78 ADRP X23, 0x2377000
	0x01D7FB7C LDR X21, [X9 + 0x8]
	0x01D7FB80 LDR X23, [X23 + 0x5D8]
	0x01D7FB84 CBNZ X21, 0x1D7FBDC
	0x01D7FB88 LDR W9, [X8 + 0xE0]
	0x01D7FB8C CBNZ W9, 0x1D7FB9C
	0x01D7FB90 MOV X0, X8
	0x01D7FB94 BL 0x1C16DFC
	0x01D7FB98 LDR X8, [X25]
	0x01D7FB9C ADRP X9, 0x2377000
	0x01D7FBA0 LDR X8, [X8 + 0xB8]
	0x01D7FBA4 LDR X9, [X9 + 0x5F0]
	0x01D7FBA8 LDR X22, [X8]
	0x01D7FBAC LDR X0, [X9]
	0x01D7FBB0 BL 0x1C16F10
	0x01D7FBB4 ADRP X8, 0x2377000
	0x01D7FBB8 LDR X8, [X8 + 0x608]
	0x01D7FBBC MOV X1, X22
	0x01D7FBC0 MOV X3, X31
	0x01D7FBC4 MOV X21, X0
	0x01D7FBC8 LDR X2, [X8]
	0x01D7FBCC BL 0x2D30578
	0x01D7FBD0 LDR X8, [X25]
	0x01D7FBD4 LDR X8, [X8 + 0xB8]
	0x01D7FBD8 STR X21, [X8 + 0x8]
	0x01D7FBDC LDR X2, [X23]
	0x01D7FBE0 MOV X0, X20
	0x01D7FBE4 MOV X1, X21
	0x01D7FBE8 BL 0x21CF224
	0x01D7FBEC LDR X8, [X25]
	0x01D7FBF0 MOV X20, X0
	0x01D7FBF4 LDR W9, [X8 + 0xE0]
	0x01D7FBF8 CBNZ W9, 0x1D7FC08
	0x01D7FBFC MOV X0, X8
	0x01D7FC00 BL 0x1C16DFC
	0x01D7FC04 LDR X8, [X25]
	0x01D7FC08 LDR X9, [X8 + 0xB8]
	0x01D7FC0C ADRP X27, 0x2377000
	0x01D7FC10 LDR X21, [X9 + 0x10]
	0x01D7FC14 LDR X27, [X27 + 0x5E8]
	0x01D7FC18 CBNZ X21, 0x1D7FC70
	0x01D7FC1C LDR W9, [X8 + 0xE0]
	0x01D7FC20 CBNZ W9, 0x1D7FC30
	0x01D7FC24 MOV X0, X8
	0x01D7FC28 BL 0x1C16DFC
	0x01D7FC2C LDR X8, [X25]
	0x01D7FC30 ADRP X9, 0x2377000
	0x01D7FC34 LDR X8, [X8 + 0xB8]
	0x01D7FC38 LDR X9, [X9 + 0x5F8]
	0x01D7FC3C LDR X22, [X8]
	0x01D7FC40 LDR X0, [X9]
	0x01D7FC44 BL 0x1C16F10
	0x01D7FC48 ADRP X8, 0x2377000
	0x01D7FC4C LDR X8, [X8 + 0x610]
	0x01D7FC50 MOV X1, X22
	0x01D7FC54 MOV X3, X31
	0x01D7FC58 MOV X21, X0
	0x01D7FC5C LDR X2, [X8]
	0x01D7FC60 BL 0x2D2F428
	0x01D7FC64 LDR X8, [X25]
	0x01D7FC68 LDR X8, [X8 + 0xB8]
	0x01D7FC6C STR X21, [X8 + 0x10]
	0x01D7FC70 LDR X2, [X27]
	0x01D7FC74 MOV X0, X20
	0x01D7FC78 MOV X1, X21
	0x01D7FC7C BL 0x21DA490
	0x01D7FC80 LDR X8, [X25]
	0x01D7FC84 MOV X21, X0
	0x01D7FC88 LDR W9, [X8 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X0
	007 Move X0, [X0+40]
	008 Move [X20+104], X1
	009 Compare X0, 0
	010 JumpIfEqual {99}
	011 Move X8, [X0]
	012 Move X1, X2
	013 Move W19, W4
	014 Move W22, W3
	015 Move X9, [X8+1368]
	016 Move X8, [X8+1376]
	017 Move X2, X8
	018 NotImplemented "Instruction BLR not yet implemented."
	019 Or W8, W19, 2
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move W21, 1
	022 Move W21, W31
	023 Move X0, [X20+72]
	024 Compare X0, 0
	025 JumpIfEqual {99}
	026 Move X1, X31
	027 Call Component.get_gameObject, X0
	028 Compare X0, 0
	029 JumpIfEqual {99}
	030 Move W1, W21
	031 Move X2, X31
	032 Call GameObject.SetActive, X0, X1
	033 Move X0, [X20+56]
	034 Compare X0, 0
	035 JumpIfEqual {99}
	036 Move X1, X31
	037 Call Component.get_gameObject, X0
	038 Compare X0, 0
	039 JumpIfEqual {99}
	040 Xor W8, W22, 1
	041 And W1, W21, W8
	042 Move X2, X31
	043 Call GameObject.SetActive, X0, X1
	044 Move X0, [X20+64]
	045 Compare X0, 0
	046 JumpIfEqual {99}
	047 Move X1, X31
	048 Call Component.get_gameObject, X0
	049 Compare X0, 0
	050 JumpIfEqual {99}
	051 And W1, W21, W22
	052 Move X2, X31
	053 Call GameObject.SetActive, X0, X1
	054 Move X0, [X20+80]
	055 Compare X0, 0
	056 JumpIfEqual {99}
	057 Move X1, X31
	058 Call Component.get_gameObject, X0
	059 Compare X0, 0
	060 JumpIfEqual {99}
	061 Move W1, W21
	062 Move X2, X31
	063 Call GameObject.SetActive, X0, X1
	064 Move X0, [X20+48]
	065 Compare X0, 0
	066 JumpIfEqual {99}
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction CSET not yet implemented."
	069 Move X2, X31
	070 Call GameObject.SetActive, X0, X1
	071 Move X0, [X20+96]
	072 Compare X0, 0
	073 JumpIfEqual {99}
	074 Move X1, X31
	075 Call Component.get_gameObject, X0
	076 Compare X0, 0
	077 JumpIfEqual {99}
	078 NotImplemented "Instruction CMP not yet implemented."
	079 NotImplemented "Instruction CSET not yet implemented."
	080 Move X2, X31
	081 Call GameObject.SetActive, X0, X1
	082 Move X0, [X20+88]
	083 Compare X0, 0
	084 JumpIfEqual {99}
	085 Move X1, X31
	086 Call Component.get_gameObject, X0
	087 Compare X0, 0
	088 JumpIfEqual {99}
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X20, [X31+32]
	091 Move X19, [X31+40]
	092 Move X22, [X31+16]
	093 Move X21, [X31+24]
	094 NotImplemented "Instruction CSET not yet implemented."
	095 Move X2, X31
	096 Move X30, [X31+48]
	097 Call GameObject.SetActive, X0, X1
	098 Return 
	099 Call 0x1C17F20

Method: System.Void SetupAvatarView(AnimalCompany.UserAvatarState avatarState)

Disassembly:
	0x01D82C74 ADRP X8, 0x2374000
	0x01D82C78 LDR X2, [X31 + 0x20]
	0x01D82C7C LDR X8, [X8 + 0x4D0]
	0x01D82C80 LDR X3, [X8]
	0x01D82C84 MOV X1, X21
	0x01D82C88 BL 0x2AA5098

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {8}
	005 Move X30, [X31+16]
	006 Call AvatarHeadView.Setup, X0, X1
	007 Return 
	008 Call 0x1C17F20

Method: System.Void UpdateVoice(System.Single voice)

Disassembly:
	0x01D8564C CBZ X20, 0x1D856B0
	0x01D85650 ADRP X10, 0x236E000
	0x01D85654 LDR X8, [X20]
	0x01D85658 LDR X10, [X10 + 0xE00]
	0x01D8565C LDRH W9, [X8 + 0x12E]
	0x01D85660 LDR X1, [X10]
	0x01D85664 CBZ X9, 0x1D85688
	0x01D85668 LDR X10, [X8 + 0xB0]
	0x01D8566C ADD X10, X10, 0x8
	0x01D85670 LDUR X11, [X10 - 0x8]
	0x01D85674 CMP X11, X1
	0x01D85678 B.EQ 0x1D85698

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+32]
	003 Compare X8, 0
	004 JumpIfEqual {13}
	005 Move S1, 1
	006 NotImplemented "Instruction FCMP not yet implemented."
	007 NotImplemented "Instruction FMIN not yet implemented."
	008 Move S1, W31
	009 NotImplemented "Instruction FCSEL not yet implemented."
	010 Move [X8+64], S0
	011 Move X30, [X31+16]
	012 Return 
	013 Call 0x1C17F20

Method: System.Void HandleAddFriendPressed()

Disassembly:
	0x01D88FF4 STP X22, X21, [X31 + 0x60]
	0x01D88FF8 STP X20, X19, [X31 + 0x70]
	0x01D88FFC ADRP X22, 0x2650000
	0x01D89000 MOV V8.16B, V3.16B
	0x01D89004 MOV V9.16B, V2.16B
	0x01D89008 MOV V10.16B, V1.16B
	0x01D8900C MOV V15.16B, V0.16B
	0x01D89010 LDP S0, S14, [X31 + 0x94]

ISIL:
	001 Move X8, [X0+112]
	002 Compare X8, 0
	003 JumpIfEqual {9}
	004 Move X1, [X0+104]
	005 Move X3, [X8+24]
	006 Move X0, [X8+64]
	007 Move X2, [X8+40]
	008 CallNoReturn X3
	009 Return 

Method: System.Void HandleBlockPressed()

Disassembly:
	0x01D89014 LDR V1, [X31 + 0x90]
	0x01D89018 LDP S2, S11, [X31 + 0x84]
	0x01D8901C LDRB W8, [X22 + 0x9B5]
	0x01D89020 LDR V3, [X31 + 0x80]
	0x01D89024 MOV W19, W2
	0x01D89028 MOV V12.16B, V5.16B
	0x01D8902C MOV V13.16B, V4.16B
	0x01D89030 MOV X21, X1

ISIL:
	001 Move X8, [X0+120]
	002 Compare X8, 0
	003 JumpIfEqual {9}
	004 Move X1, [X0+104]
	005 Move X3, [X8+24]
	006 Move X0, [X8+64]
	007 Move X2, [X8+40]
	008 CallNoReturn X3
	009 Return 

Method: System.Void HandleUnblockPressed()

Disassembly:
	0x01D89034 MOV X20, X0
	0x01D89038 TBNZ X8, 0x0, 0x1D890B4
	0x01D8903C ADRP X0, 0x236D000
	0x01D89040 LDR X0, [X0 + 0xA78]
	0x01D89044 STP S11, S15, [X31 + 0x58]
	0x01D89048 STP S14, S10, [X31 + 0x8]
	0x01D8904C STR S9, [X31 + 0x4]
	0x01D89050 MOV V9.16B, V8.16B

ISIL:
	001 Move X8, [X0+128]
	002 Compare X8, 0
	003 JumpIfEqual {9}
	004 Move X1, [X0+104]
	005 Move X3, [X8+24]
	006 Move X0, [X8+64]
	007 Move X2, [X8+40]
	008 CallNoReturn X3
	009 Return 

Method: System.Void HandleMutePressed()

Disassembly:
	0x01D89054 MOV V8.16B, V13.16B
	0x01D89058 MOV V13.16B, V12.16B
	0x01D8905C MOV V12.16B, V6.16B
	0x01D89060 MOV V15.16B, V0.16B
	0x01D89064 MOV V11.16B, V1.16B
	0x01D89068 MOV V10.16B, V2.16B
	0x01D8906C MOV V14.16B, V3.16B
	0x01D89070 BL 0x1C16CF4

ISIL:
	001 Move X8, [X0+136]
	002 Compare X8, 0
	003 JumpIfEqual {9}
	004 Move X1, [X0+104]
	005 Move X3, [X8+24]
	006 Move X0, [X8+64]
	007 Move X2, [X8+40]
	008 CallNoReturn X3
	009 Return 

Method: System.Void HandleUnmutePressed()

Disassembly:
	0x01D89074 ADRP X0, 0x236D000
	0x01D89078 LDR X0, [X0 + 0xA88]
	0x01D8907C BL 0x1C16CF4
	0x01D89080 MOV V3.16B, V14.16B
	0x01D89084 MOV V2.16B, V10.16B
	0x01D89088 MOV V1.16B, V11.16B
	0x01D8908C MOV V0.16B, V15.16B
	0x01D89090 MOV V6.16B, V12.16B

ISIL:
	001 Move X8, [X0+144]
	002 Compare X8, 0
	003 JumpIfEqual {9}
	004 Move X1, [X0+104]
	005 Move X3, [X8+24]
	006 Move X0, [X8+64]
	007 Move X2, [X8+40]
	008 CallNoReturn X3
	009 Return 

Method: System.Void HandleCancelPressed()

Disassembly:
	0x01D89094 MOV V12.16B, V13.16B
	0x01D89098 MOV V13.16B, V8.16B
	0x01D8909C MOV V8.16B, V9.16B
	0x01D890A0 LDP S9, S14, [X31 + 0x4]
	0x01D890A4 LDR V10, [X31 + 0xC]
	0x01D890A8 LDP S11, S15, [X31 + 0x58]
	0x01D890AC MOVZ W8, 0x1
	0x01D890B0 STRB W8, [X22 + 0x9B5]

ISIL:
	001 Move X8, [X0+152]
	002 Compare X8, 0
	003 JumpIfEqual {9}
	004 Move X1, [X0+104]
	005 Move X3, [X8+24]
	006 Move X0, [X8+64]
	007 Move X2, [X8+40]
	008 CallNoReturn X3
	009 Return 

Method: System.Void .ctor()

Disassembly:
	0x01D890B4 LDRB W8, [X20 + 0x58]
	0x01D890B8 CBZ W8, 0x1D89118

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

