Type: AnimalCompany.AnimalLabIAPBundleManager/<CountdownTimer>d__13

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01D5E774 STR X30, [X31 - 0x20]!
	0x01D5E778 STP X20, X19, [X31 + 0x10]
	0x01D5E77C ADRP X20, 0x267A000
	0x01D5E780 LDRB W8, [X20 + 0x829]
	0x01D5E784 MOV X19, X1
	0x01D5E788 TBNZ X8, 0x0, 0x1D5E7A0
	0x01D5E78C ADRP X0, 0x2396000
	0x01D5E790 LDR X0, [X0 + 0x178]
	0x01D5E794 BL 0x1C16CF4
	0x01D5E798 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01D5E8B0 LDR X2, [X21]

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01D5E8B4 BL 0x265C3F4
	0x01D5E8B8 LDR X0, [X20 + 0x60]
	0x01D5E8BC CBZ X0, 0x1D5E980
	0x01D5E8C0 ADRP X22, 0x2397000
	0x01D5E8C4 LDR X22, [X22 + 0x608]
	0x01D5E8C8 LDR X2, [X21]
	0x01D5E8CC LDR X1, [X22]
	0x01D5E8D0 BL 0x265C3F4
	0x01D5E8D4 LDR X0, [X20 + 0x68]
	0x01D5E8D8 CBZ X0, 0x1D5E980
	0x01D5E8DC LDR X1, [X22]
	0x01D5E8E0 LDR X2, [X21]
	0x01D5E8E4 BL 0x265C3F4
	0x01D5E8E8 LDR X0, [X20 + 0x70]
	0x01D5E8EC CBZ X0, 0x1D5E980
	0x01D5E8F0 ADRP X8, 0x2397000
	0x01D5E8F4 LDR X8, [X8 + 0x618]
	0x01D5E8F8 LDR X2, [X21]
	0x01D5E8FC LDR X1, [X8]
	0x01D5E900 BL 0x265C3F4
	0x01D5E904 LDR X0, [X20 + 0x78]
	0x01D5E908 CBZ X0, 0x1D5E980
	0x01D5E90C ADRP X8, 0x2397000
	0x01D5E910 LDR X8, [X8 + 0x600]
	0x01D5E914 LDR X2, [X21]
	0x01D5E918 LDR X1, [X8]
	0x01D5E91C BL 0x265C3F4
	0x01D5E920 LDR X0, [X20 + 0x80]
	0x01D5E924 CBZ X0, 0x1D5E980
	0x01D5E928 ADRP X8, 0x2397000
	0x01D5E92C LDR X8, [X8 + 0x630]
	0x01D5E930 LDR X2, [X21]
	0x01D5E934 LDR X1, [X8]
	0x01D5E938 BL 0x265C3F4
	0x01D5E93C LDR X0, [X20 + 0x88]
	0x01D5E940 CBZ X0, 0x1D5E980
	0x01D5E944 ADRP X8, 0x2397000
	0x01D5E948 LDR X8, [X8 + 0x628]
	0x01D5E94C LDR X2, [X21]
	0x01D5E950 ADRP X20, 0x2397000
	0x01D5E954 LDR X1, [X8]
	0x01D5E958 LDR X20, [X20 + 0x610]
	0x01D5E95C BL 0x265C3F4
	0x01D5E960 LDR X0, [X20]
	0x01D5E964 MOV X1, X31
	0x01D5E968 BL 0x3BF5D64
	0x01D5E96C STR W0, [X19 + 0x80]
	0x01D5E970 LDP X20, X19, [X31 + 0x20]
	0x01D5E974 LDP X22, X21, [X31 + 0x10]
	0x01D5E978 LDR X30, [X31], #0x30
	0x01D5E97C RET
	0x01D5E980 BL 0x1C16F20
	0x01D5E984 STP D13, D12, [X31 - 0x60]!
	0x01D5E988 STP D11, D10, [X31 + 0x10]
	0x01D5E98C STP D9, D8, [X31 + 0x20]
	0x01D5E990 STR X30, [X31 + 0x30]
	0x01D5E994 STP X22, X21, [X31 + 0x40]
	0x01D5E998 STP X20, X19, [X31 + 0x50]
	0x01D5E99C ADRP X20, 0x267A000
	0x01D5E9A0 LDRB W8, [X20 + 0x82B]
	0x01D5E9A4 MOV X19, X0
	0x01D5E9A8 TBNZ X8, 0x0, 0x1D5E9D8
	0x01D5E9AC ADRP X0, 0x2395000
	0x01D5E9B0 LDR X0, [X0 + 0xE00]
	0x01D5E9B4 BL 0x1C16CF4
	0x01D5E9B8 ADRP X0, 0x2395000
	0x01D5E9BC LDR X0, [X0 + 0xE18]
	0x01D5E9C0 BL 0x1C16CF4
	0x01D5E9C4 ADRP X0, 0x2397000
	0x01D5E9C8 LDR X0, [X0 + 0x638]
	0x01D5E9CC BL 0x1C16CF4
	0x01D5E9D0 MOVZ W8, 0x1
	0x01D5E9D4 STRB W8, [X20 + 0x82B]
	0x01D5E9D8 LDR V8, [X19 + 0x6C]
	0x01D5E9DC MOV X0, X31
	0x01D5E9E0 BL 0x3C3C714
	0x01D5E9E4 FADD S0, S8, S0
	0x01D5E9E8 FMOV S1, 1
	0x01D5E9EC FCMP S0, S1
	0x01D5E9F0 STR S0, [X19 + 0x6C]
	0x01D5E9F4 B.LT 0x1D5EC70
	0x01D5E9F8 MOV X0, X31
	0x01D5E9FC STR W31, [X19 + 0x6C]
	0x01D5EA00 BL 0x3C047F8
	0x01D5EA04 CBZ X0, 0x1D5ED14
	0x01D5EA08 MOV X1, X31
	0x01D5EA0C BL 0x3C32E90
	0x01D5EA10 CBZ X0, 0x1D5ED14
	0x01D5EA14 MOV X1, X31
	0x01D5EA18 BL 0x3C3F58C
	0x01D5EA1C MOV X0, X19
	0x01D5EA20 MOV X1, X31
	0x01D5EA24 MOV V8.16B, V0.16B
	0x01D5EA28 MOV V9.16B, V1.16B
	0x01D5EA2C MOV V10.16B, V2.16B
	0x01D5EA30 BL 0x3C32E90
	0x01D5EA34 CBZ X0, 0x1D5ED14
	0x01D5EA38 MOV X1, X31
	0x01D5EA3C BL 0x3C3F58C
	0x01D5EA40 ADRP X20, 0x267A000
	0x01D5EA44 LDRB W8, [X20 + 0x85C]
	0x01D5EA48 MOV V11.16B, V0.16B
	0x01D5EA4C MOV V12.16B, V1.16B
	0x01D5EA50 MOV V13.16B, V2.16B
	0x01D5EA54 CBNZ W8, 0x1D5EA6C
	0x01D5EA58 ADRP X0, 0x2395000
	0x01D5EA5C LDR X0, [X0 + 0x5A8]
	0x01D5EA60 BL 0x1C16CF4
	0x01D5EA64 MOVZ W8, 0x1
	0x01D5EA68 STRB W8, [X20 + 0x85C]
	0x01D5EA6C ADRP X8, 0x2395000
	0x01D5EA70 LDR X8, [X8 + 0x5A8]
	0x01D5EA74 FSUB S11, S8, S11
	0x01D5EA78 FSUB S9, S9, S12
	0x01D5EA7C FSUB S8, S10, S13
	0x01D5EA80 LDR X0, [X8]
	0x01D5EA84 LDR W8, [X0 + 0xE0]
	0x01D5EA88 CBNZ W8, 0x1D5EA90
	0x01D5EA8C BL 0x1C16DFC
	0x01D5EA90 FMUL S0, S11, S11
	0x01D5EA94 FMUL S1, S9, S9
	0x01D5EA98 LDR V2, [X19 + 0x50]
	0x01D5EA9C FADD S0, S0, S1
	0x01D5EAA0 FMUL S1, S8, S8
	0x01D5EAA4 FADD S0, S1, S0
	0x01D5EAA8 FSQRT S0, S0
	0x01D5EAAC FCMP S0, S2
	0x01D5EAB0 CSET W8, GE
	0x01D5EAB4 MOV X0, X19
	0x01D5EAB8 MOV X1, X31
	0x01D5EABC STRB W8, [X19 + 0x64]
	0x01D5EAC0 BL 0x3C32E90
	0x01D5EAC4 CBZ X0, 0x1D5ED14
	0x01D5EAC8 MOV X1, X31
	0x01D5EACC BL 0x3C4100C
	0x01D5EAD0 MOV X20, X0
	0x01D5EAD4 CBZ X0, 0x1D5ED18
	0x01D5EAD8 ADRP X21, 0x2395000
	0x01D5EADC ADRP X22, 0x2397000
	0x01D5EAE0 LDR X21, [X21 + 0xE18]
	0x01D5EAE4 LDR X22, [X22 + 0x638]
	0x01D5EAE8 LDR X8, [X20]
	0x01D5EAEC LDR X1, [X21]
	0x01D5EAF0 LDRH W9, [X8 + 0x12E]
	0x01D5EAF4 CBZ X9, 0x1D5EB18
	0x01D5EAF8 LDR X10, [X8 + 0xB0]
	0x01D5EAFC ADD X10, X10, 0x8
	0x01D5EB00 LDUR X11, [X10 - 0x8]
	0x01D5EB04 CMP X11, X1
	0x01D5EB08 B.EQ 0x1D5EB28
	0x01D5EB0C SUBS X9, X9, 0x1
	0x01D5EB10 ADD X10, X10, 0x10
	0x01D5EB14 B.NE 0x1D5EB00
	0x01D5EB18 MOV X0, X20
	0x01D5EB1C MOV W2, W31
	0x01D5EB20 BL 0x1C5C788
	0x01D5EB24 B 0x1D5EB34
	0x01D5EB28 LDRSW X9, [X10]
	0x01D5EB2C ADD X8, X8, X9, 0x4, LSL
	0x01D5EB30 ADD X0, X8, 0x138
	0x01D5EB34 LDP X8, X1, [X0]
	0x01D5EB38 MOV X0, X20
	0x01D5EB3C BLR X8
	0x01D5EB40 TBZ X0, 0x0, 0x1D5EBF4
	0x01D5EB44 LDR X8, [X20]
	0x01D5EB48 LDR X1, [X21]
	0x01D5EB4C LDRH W9, [X8 + 0x12E]
	0x01D5EB50 CBZ X9, 0x1D5EB74
	0x01D5EB54 LDR X10, [X8 + 0xB0]
	0x01D5EB58 ADD X10, X10, 0x8
	0x01D5EB5C LDUR X11, [X10 - 0x8]
	0x01D5EB60 CMP X11, X1
	0x01D5EB64 B.EQ 0x1D5EB84
	0x01D5EB68 SUBS X9, X9, 0x1
	0x01D5EB6C ADD X10, X10, 0x10
	0x01D5EB70 B.NE 0x1D5EB5C
	0x01D5EB74 MOVZ W2, 0x1
	0x01D5EB78 MOV X0, X20
	0x01D5EB7C BL 0x1C5C788
	0x01D5EB80 B 0x1D5EB94
	0x01D5EB84 LDR W9, [X10]
	0x01D5EB88 ADD W9, W9, 0x1
	0x01D5EB8C ADD X8, X8, W9, 0x4, SXTW
	0x01D5EB90 ADD X0, X8, 0x138
	0x01D5EB94 LDP X8, X1, [X0]
	0x01D5EB98 MOV X0, X20
	0x01D5EB9C BLR X8
	0x01D5EBA0 CBZ X0, 0x1D5ED0C
	0x01D5EBA4 LDR X8, [X0]
	0x01D5EBA8 LDR X1, [X22]
	0x01D5EBAC LDRB W10, [X8 + 0x130]
	0x01D5EBB0 LDRB W9, [X1 + 0x130]
	0x01D5EBB4 CMP W10, W9
	0x01D5EBB8 B.CC 0x1D5ED08
	0x01D5EBBC LDR X8, [X8 + 0xC8]
	0x01D5EBC0 ADD X8, X8, X9, 0x3, LSL
	0x01D5EBC4 LDUR X8, [X8 - 0x8]
	0x01D5EBC8 CMP X8, X1
	0x01D5EBCC B.NE 0x1D5ED08
	0x01D5EBD0 MOV X1, X31
	0x01D5EBD4 BL 0x3C32ECC
	0x01D5EBD8 CBZ X0, 0x1D5ED10
	0x01D5EBDC LDRB W8, [X19 + 0x64]
	0x01D5EBE0 CMP W8, 0x0
	0x01D5EBE4 CSET W1, EQ
	0x01D5EBE8 MOV X2, X31
	0x01D5EBEC BL 0x3C357B4
	0x01D5EBF0 B 0x1D5EAE8
	0x01D5EBF4 MOV X21, X31
	0x01D5EBF8 ADRP X22, 0x2395000
	0x01D5EBFC LDR X22, [X22 + 0xE00]
	0x01D5EC00 MOV X0, X20
	0x01D5EC04 LDR X1, [X22]
	0x01D5EC08 BL 0x1C16E00
	0x01D5EC0C CBZ X0, 0x1D5EC6C
	0x01D5EC10 LDR X8, [X0]
	0x01D5EC14 LDR X1, [X22]
	0x01D5EC18 MOV X20, X0
	0x01D5EC1C LDRH W9, [X8 + 0x12E]
	0x01D5EC20 CBZ X9, 0x1D5EC44
	0x01D5EC24 LDR X10, [X8 + 0xB0]
	0x01D5EC28 ADD X10, X10, 0x8
	0x01D5EC2C LDUR X11, [X10 - 0x8]
	0x01D5EC30 CMP X11, X1
	0x01D5EC34 B.EQ 0x1D5EC54
	0x01D5EC38 SUBS X9, X9, 0x1
	0x01D5EC3C ADD X10, X10, 0x10
	0x01D5EC40 B.NE 0x1D5EC2C
	0x01D5EC44 MOV X0, X20
	0x01D5EC48 MOV W2, W31
	0x01D5EC4C BL 0x1C5C788
	0x01D5EC50 B 0x1D5EC60
	0x01D5EC54 LDRSW X9, [X10]
	0x01D5EC58 ADD X8, X8, X9, 0x4, LSL
	0x01D5EC5C ADD X0, X8, 0x138
	0x01D5EC60 LDP X8, X1, [X0]
	0x01D5EC64 MOV X0, X20
	0x01D5EC68 BLR X8
	0x01D5EC6C CBNZ X21, 0x1D5ED1C
	0x01D5EC70 LDRB W8, [X19 + 0x64]
	0x01D5EC74 CBNZ W8, 0x1D5EC98
	0x01D5EC78 LDR V8, [X19 + 0x68]
	0x01D5EC7C MOV X0, X31
	0x01D5EC80 BL 0x3C3C714
	0x01D5EC84 FADD S0, S8, S0
	0x01D5EC88 FMOV S1, 5
	0x01D5EC8C FCMP S0, S1
	0x01D5EC90 STR S0, [X19 + 0x68]
	0x01D5EC94 B.GE 0x1D5ECB4
	0x01D5EC98 LDP X20, X19, [X31 + 0x50]
	0x01D5EC9C LDP X22, X21, [X31 + 0x40]
	0x01D5ECA0 LDR X30, [X31 + 0x30]
	0x01D5ECA4 LDP D9, D8, [X31 + 0x20]
	0x01D5ECA8 LDP D11, D10, [X31 + 0x10]
	0x01D5ECAC LDP D13, D12, [X31], #0x60
	0x01D5ECB0 RET
	0x01D5ECB4 LDR X8, [X19 + 0x58]
	0x01D5ECB8 STR W31, [X19 + 0x68]
	0x01D5ECBC CBZ X8, 0x1D5ED14
	0x01D5ECC0 LDR W9, [X19 + 0x60]
	0x01D5ECC4 LDR W10, [X8 + 0x18]
	0x01D5ECC8 ADD W9, W9, 0x1
	0x01D5ECCC SDIV W11, W9, W10
	0x01D5ECD0 MSUB W9, W11, W10, W9
	0x01D5ECD4 CMP W9, W10
	0x01D5ECD8 STR W9, [X19 + 0x60]
	0x01D5ECDC B.CS 0x1D5ED24
	0x01D5ECE0 ADD X8, X8, W9, 0x3, SXTW
	0x01D5ECE4 LDR X1, [X8 + 0x20]
	0x01D5ECE8 MOV X0, X19
	0x01D5ECEC LDP X20, X19, [X31 + 0x50]
	0x01D5ECF0 LDP X22, X21, [X31 + 0x40]
	0x01D5ECF4 LDR X30, [X31 + 0x30]
	0x01D5ECF8 LDP D9, D8, [X31 + 0x20]
	0x01D5ECFC LDP D11, D10, [X31 + 0x10]
	0x01D5ED00 LDP D13, D12, [X31], #0x60
	0x01D5ED04 B 0x1D5EDF4
	0x01D5ED08 BL 0x1C171E0
	0x01D5ED0C BL 0x1C16F20
	0x01D5ED10 BL 0x1C16F20
	0x01D5ED14 BL 0x1C16F20
	0x01D5ED18 BL 0x1C16F20
	0x01D5ED1C MOV X0, X21
	0x01D5ED20 BL 0x1C16F18
	0x01D5ED24 BL 0x1C16F28
	0x01D5ED28 B 0x1D5ED40
	0x01D5ED2C B 0x1D5ED40
	0x01D5ED30 B 0x1D5ED40
	0x01D5ED34 B 0x1D5ED40
	0x01D5ED38 B 0x1D5ED40
	0x01D5ED3C B 0x1D5ED40
	0x01D5ED40 CMP W1, 0x1
	0x01D5ED44 B.NE 0x1D5ED58
	0x01D5ED48 BL 0x3EB1AD0
	0x01D5ED4C LDR X21, [X0]
	0x01D5ED50 BL 0x3EB1AE0
	0x01D5ED54 B 0x1D5EBF8
	0x01D5ED58 MOV X19, X0
	0x01D5ED5C MOV X21, X31
	0x01D5ED60 B 0x1D5ED68
	0x01D5ED64 MOV X19, X0
	0x01D5ED68 ADRP X22, 0x2395000
	0x01D5ED6C LDR X22, [X22 + 0xE00]
	0x01D5ED70 LDR X1, [X22]
	0x01D5ED74 MOV X0, X20
	0x01D5ED78 BL 0x1C16E00
	0x01D5ED7C MOV X20, X0
	0x01D5ED80 CBZ X0, 0x1D5EDDC
	0x01D5ED84 LDR X8, [X20]
	0x01D5ED88 LDR X1, [X22]
	0x01D5ED8C LDRH W9, [X8 + 0x12E]
	0x01D5ED90 CBZ X9, 0x1D5EDB4
	0x01D5ED94 LDR X10, [X8 + 0xB0]
	0x01D5ED98 ADD X10, X10, 0x8
	0x01D5ED9C LDUR X11, [X10 - 0x8]
	0x01D5EDA0 CMP X11, X1
	0x01D5EDA4 B.EQ 0x1D5EDC4
	0x01D5EDA8 SUBS X9, X9, 0x1
	0x01D5EDAC ADD X10, X10, 0x10
	0x01D5EDB0 B.NE 0x1D5ED9C
	0x01D5EDB4 MOV X0, X20
	0x01D5EDB8 MOV W2, W31
	0x01D5EDBC BL 0x1C5C788
	0x01D5EDC0 B 0x1D5EDD0
	0x01D5EDC4 LDRSW X9, [X10]
	0x01D5EDC8 ADD X8, X8, X9, 0x4, LSL
	0x01D5EDCC ADD X0, X8, 0x138
	0x01D5EDD0 LDP X8, X1, [X0]
	0x01D5EDD4 MOV X0, X20
	0x01D5EDD8 BLR X8
	0x01D5EDDC CBNZ X21, 0x1D5EDE8
	0x01D5EDE0 MOV X0, X19
	0x01D5EDE4 BL 0x1D2C690
	0x01D5EDE8 MOV X0, X21
	0x01D5EDEC BL 0x1C16F18
	0x01D5EDF0 BL 0x1990590
	0x01D5EDF4 STR X30, [X31 - 0x50]!
	0x01D5EDF8 STP X26, X25, [X31 + 0x10]
	0x01D5EDFC STP X24, X23, [X31 + 0x20]
	0x01D5EE00 STP X22, X21, [X31 + 0x30]
	0x01D5EE04 STP X20, X19, [X31 + 0x40]
	0x01D5EE08 ADRP X21, 0x267A000
	0x01D5EE0C LDRB W8, [X21 + 0x82C]
	0x01D5EE10 MOV X20, X1
	0x01D5EE14 MOV X19, X0
	0x01D5EE18 TBNZ X8, 0x0, 0x1D5EE84
	0x01D5EE1C ADRP X0, 0x2397000
	0x01D5EE20 LDR X0, [X0 + 0x5B0]
	0x01D5EE24 BL 0x1C16CF4
	0x01D5EE28 ADRP X0, 0x2395000
	0x01D5EE2C LDR X0, [X0 + 0x648]
	0x01D5EE30 BL 0x1C16CF4
	0x01D5EE34 ADRP X0, 0x2397000
	0x01D5EE38 LDR X0, [X0 + 0x640]
	0x01D5EE3C BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], D8
	003 Move [X31+40], X30
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X20, 0x267B000
	011 Move W8, [X20+2082]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {58}
	017 Move X0, 0x2398000
	018 Move X0, [X0+1384]
	019 Call 0x1C17CF4
	020 Move X0, 0x2397000
	021 Move X0, [X0+2544]
	022 Call 0x1C17CF4
	023 Move X0, 0x2396000
	024 Move X0, [X0+1880]
	025 Call 0x1C17CF4
	026 Move X0, 0x2396000
	027 Move X0, [X0+2512]
	028 Call 0x1C17CF4
	029 Move X0, 0x2396000
	030 Move X0, [X0+1432]
	031 Call 0x1C17CF4
	032 Move X0, 0x2396000
	033 Move X0, [X0+2704]
	034 Call 0x1C17CF4
	035 Move X0, 0x2398000
	036 Move X0, [X0+1392]
	037 Call 0x1C17CF4
	038 Move X0, 0x2398000
	039 Move X0, [X0+1400]
	040 Call 0x1C17CF4
	041 Move X0, 0x2398000
	042 Move X0, [X0+1408]
	043 Call 0x1C17CF4
	044 Move X0, 0x2398000
	045 Move X0, [X0+1416]
	046 Call 0x1C17CF4
	047 Move X0, 0x2398000
	048 Move X0, [X0+1424]
	049 Call 0x1C17CF4
	050 Move X0, 0x2398000
	051 Move X0, [X0+1432]
	052 Call 0x1C17CF4
	053 Move X0, 0x2396000
	054 Move X0, [X0+2440]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X20+2082], W8
	058 Move [X31+24], X31
	059 Move W22, [X19+16]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X21, 0x2398000
	062 Move X21, [X21+1384]
	063 Move TEMP, 0
	064 Not TEMP
	065 Move W8, TEMP
	066 Move [X19+16], W8
	067 Move X20, 0x2397000
	068 Move X0, [X21]
	069 Move X23, [X19+32]
	070 Move W8, [X0+224]
	071 Move X20, [X20+2544]
	072 Compare W8, 0
	073 JumpIfNotEqual {76}
	074 Call 0x1C17DFC
	075 Move X0, [X21]
	076 Move X8, [X20]
	077 Move X9, [X0+184]
	078 Move X21, 0x2398000
	079 Move W10, [X8+224]
	080 Move X20, [X9]
	081 Move X21, [X21+1392]
	082 Compare W10, 0
	083 JumpIfNotEqual {86}
	084 Move X0, X8
	085 Call 0x1C17DFC
	086 Move X0, X31
	087 Call DateTime.get_UtcNow
	088 Move X1, X0
	089 Move X0, X20
	090 Move X2, X31
	091 Call DateTime.op_Subtraction, X0, X1
	092 Move X8, [X21]
	093 Move [X31+24], X0
	094 Move W9, [X8+224]
	095 Compare W9, 0
	096 JumpIfNotEqual {99}
	097 Move X0, X8
	098 Call 0x1C17DFC
	099 Add X0, X31, 24
	100 Move X1, X31
	101 Call TimeSpan.get_TotalSeconds, X0
	102 NotImplemented "Instruction FCMP not yet implemented."
	103 Move X0, [X21]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {108}
	107 Call 0x1C17DFC
	108 Add X0, X31, 24
	109 Move X1, X31
	110 Call TimeSpan.get_TotalDays, X0
	111 Move D1, 1
	112 NotImplemented "Instruction FCMP not yet implemented."
	113 Move X8, 0x2396000
	114 Move X8, [X8+2512]
	115 Move W1, 4
	116 Move X0, [X8]
	117 Call 0x1C17D6C
	118 Move X8, [X21]
	119 Move X20, X0
	120 Move W9, [X8+224]
	121 Compare W9, 0
	122 JumpIfNotEqual {125}
	123 Move X0, X8
	124 Call 0x1C17DFC
	125 Add X0, X31, 24
	126 Move X1, X31
	127 Call TimeSpan.get_TotalDays, X0
	128 Move X24, 0x2396000
	129 Move X24, [X24+1880]
	130 Move X9, 0x7FF00000
	131 Move D1, X9
	132 NotImplemented "Instruction FCVTZS not yet implemented."
	133 Move X0, [X24]
	134 NotImplemented "Instruction FCMP not yet implemented."
	135 Move W9, 0x80000000
	136 NotImplemented "Instruction CSEL not yet implemented."
	137 Add X1, X31, 20
	138 Move [X31+20], W8
	139 Call 0x1C17E04
	140 Compare X20, 0
	141 JumpIfEqual {380}
	142 Move X21, X0
	143 Compare X0, 0
	144 JumpIfEqual {151}
	145 Move X8, [X20]
	146 Move X0, X21
	147 Move X1, [X8+64]
	148 Call 0x1C17E00
	149 Compare X0, 0
	150 JumpIfEqual {382}
	151 Move W8, [X20+24]
	152 Compare W8, 0
	153 JumpIfEqual {381}
	154 Add X0, X31, 24
	155 Move X1, X31
	156 Move [X20+32], X21
	157 Call TimeSpan.get_Hours, X0
	158 Move X8, [X24]
	159 Move [X31+16], W0
	160 Add X1, X31, 16
	161 Move X0, X8
	162 Call 0x1C17E04
	163 Move X21, X0
	164 Compare X0, 0
	165 JumpIfEqual {172}
	166 Move X8, [X20]
	167 Move X0, X21
	168 Move X1, [X8+64]
	169 Call 0x1C17E00
	170 Compare X0, 0
	171 JumpIfEqual {382}
	172 Move W8, [X20+24]
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Add X0, X31, 24
	175 Move X1, X31
	176 Move [X20+40], X21
	177 Call TimeSpan.get_Minutes, X0
	178 Move X8, [X24]
	179 Move [X31+12], W0
	180 Add X1, X31, 12
	181 Move X0, X8
	182 Call 0x1C17E04
	183 Move X21, X0
	184 Compare X0, 0
	185 JumpIfEqual {192}
	186 Move X8, [X20]
	187 Move X0, X21
	188 Move X1, [X8+64]
	189 Call 0x1C17E00
	190 Compare X0, 0
	191 JumpIfEqual {382}
	192 Move W8, [X20+24]
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Add X0, X31, 24
	195 Move X1, X31
	196 Move [X20+48], X21
	197 Call TimeSpan.get_Seconds, X0
	198 Move X8, [X24]
	199 Move [X31+8], W0
	200 Add X1, X31, 8
	201 Move X0, X8
	202 Call 0x1C17E04
	203 Move X21, X0
	204 Compare X0, 0
	205 JumpIfEqual {212}
	206 Move X8, [X20]
	207 Move X0, X21
	208 Move X1, [X8+64]
	209 Call 0x1C17E00
	210 Compare X0, 0
	211 JumpIfEqual {382}
	212 Move W8, [X20+24]
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move [X20+56], X21
	215 Move X8, 0x2398000
	216 Move X8, [X8+1416]
	217 Move X1, X20
	218 Move X2, X31
	219 Move X0, [X8]
	220 Call String.Format, X0, X1
	221 Move X8, 0x2398000
	222 Move X8, [X8+1432]
	223 Move X20, [X8]
	224 Move X0, [X21]
	225 Move W8, [X0+224]
	226 Compare W8, 0
	227 JumpIfNotEqual {229}
	228 Call 0x1C17DFC
	229 Add X0, X31, 24
	230 Move X1, X31
	231 Call TimeSpan.get_TotalHours, X0
	232 Move X0, [X21]
	233 Move V8, V0
	234 Move W8, [X0+224]
	235 Compare W8, 0
	236 JumpIfNotEqual {238}
	237 Call 0x1C17DFC
	238 Move D0, 1
	239 Add X0, X31, 24
	240 Move X1, X31
	241 NotImplemented "Instruction FCMP not yet implemented."
	242 Call TimeSpan.get_Hours, X0
	243 Move X24, 0x2396000
	244 Move X24, [X24+1880]
	245 Move [X31+20], W0
	246 Add X1, X31, 20
	247 Move X8, [X24]
	248 Move X0, X8
	249 Call 0x1C17E04
	250 Move X20, X0
	251 Add X0, X31, 24
	252 Move X1, X31
	253 Call TimeSpan.get_Minutes, X0
	254 Move X8, [X24]
	255 Move [X31+16], W0
	256 Add X1, X31, 16
	257 Move X0, X8
	258 Call 0x1C17E04
	259 Move X21, X0
	260 Add X0, X31, 24
	261 Move X1, X31
	262 Call TimeSpan.get_Seconds, X0
	263 Move X8, [X24]
	264 Move [X31+12], W0
	265 Add X1, X31, 12
	266 Move X0, X8
	267 Call 0x1C17E04
	268 Move X8, 0x2398000
	269 Move X8, [X8+1400]
	270 Move X3, X0
	271 Move X1, X20
	272 Move X2, X21
	273 Move X8, [X8]
	274 Move X4, X31
	275 Move X0, X8
	276 Call String.Format, X0, X1, X2, X3
	277 Call TimeSpan.get_Minutes, X0
	278 Move X21, 0x2396000
	279 Move X21, [X21+1880]
	280 Move [X31+20], W0
	281 Add X1, X31, 20
	282 Move X8, [X21]
	283 Move X0, X8
	284 Call 0x1C17E04
	285 Move X20, X0
	286 Add X0, X31, 24
	287 Move X1, X31
	288 Call TimeSpan.get_Seconds, X0
	289 Move X8, [X21]
	290 Move [X31+16], W0
	291 Add X1, X31, 16
	292 Move X0, X8
	293 Call 0x1C17E04
	294 Move X8, 0x2398000
	295 Move X8, [X8+1408]
	296 Move X2, X0
	297 Move X1, X20
	298 Move X3, X31
	299 Move X8, [X8]
	300 Move X0, X8
	301 Call String.Format, X0, X1, X2
	302 Move X20, X0
	303 Compare X23, 0
	304 JumpIfEqual {380}
	305 Move X24, 0x2396000
	306 Move X24, [X24+1432]
	307 Move X21, [X23+64]
	308 Move X0, [X24]
	309 Move W8, [X0+224]
	310 Compare W8, 0
	311 JumpIfNotEqual {313}
	312 Call 0x1C17DFC
	313 Move X0, X21
	314 Move X1, X31
	315 Move X2, X31
	316 Call Object.op_Inequality, X0, X1
	317 Move TEMP, X0
	318 And TEMP, TEMP, 1
	319 Compare TEMP, 1
	320 JumpIfNotEqual {336}
	321 Move X8, 0x2398000
	322 Move X21, [X23+64]
	323 Move X8, [X8+1424]
	324 Move X1, X20
	325 Move X2, X31
	326 Move X0, [X8]
	327 Call String.Concat, X0, X1
	328 Compare X21, 0
	329 JumpIfEqual {380}
	330 Move X8, [X21]
	331 Move X1, X0
	332 Move X0, X21
	333 Move X9, [X8+1368]
	334 Move X2, [X8+1376]
	335 NotImplemented "Instruction BLR not yet implemented."
	336 Move X0, [X24]
	337 Move X21, [X23+72]
	338 Move W8, [X0+224]
	339 Compare W8, 0
	340 JumpIfNotEqual {342}
	341 Call 0x1C17DFC
	342 Move X0, X21
	343 Move X1, X31
	344 Move X2, X31
	345 Call Object.op_Inequality, X0, X1
	346 Move TEMP, X0
	347 And TEMP, TEMP, 1
	348 Compare TEMP, 1
	349 JumpIfNotEqual {358}
	350 Move X0, [X23+72]
	351 Compare X0, 0
	352 JumpIfEqual {380}
	353 Move X8, [X0]
	354 Move X1, X20
	355 Move X9, [X8+1368]
	356 Move X2, [X8+1376]
	357 NotImplemented "Instruction BLR not yet implemented."
	358 Move X8, 0x2396000
	359 Move X8, [X8+2704]
	360 Add X1, X31, 20
	361 Move X0, [X8]
	362 Move W8, 0x3F800000
	363 Move [X31+20], W8
	364 Call 0x1C17E04
	365 Move W8, 1
	366 Move [X19+24], X0
	367 Move [X19+16], W8
	368 NotImplemented "Instruction CMP not yet implemented."
	369 Move X20, [X31+80]
	370 Move X19, [X31+88]
	371 Move X22, [X31+64]
	372 Move X21, [X31+72]
	373 Move X24, [X31+48]
	374 Move X23, [X31+56]
	375 Move X30, [X31+40]
	376 Move V8, [X31+32]
	377 NotImplemented "Instruction CSET not yet implemented."
	378 Add X31, X31, 96
	379 Return X0
	380 Call 0x1C17F20
	381 Call 0x1C17F28
	382 Call 0x1C17F44
	383 Move X1, X31
	384 Call 0x1C17DEC

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x01D5EE40 ADRP X0, 0x2397000
	0x01D5EE44 LDR X0, [X0 + 0x5A8]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01D5EE48 BL 0x1C16CF4
	0x01D5EE4C ADRP X0, 0x2397000
	0x01D5EE50 LDR X0, [X0 + 0x548]
	0x01D5EE54 BL 0x1C16CF4
	0x01D5EE58 ADRP X0, 0x2395000
	0x01D5EE5C LDR X0, [X0 + 0xDC8]
	0x01D5EE60 BL 0x1C16CF4
	0x01D5EE64 ADRP X0, 0x2397000
	0x01D5EE68 LDR X0, [X0 + 0x2A0]
	0x01D5EE6C BL 0x1C16CF4
	0x01D5EE70 ADRP X0, 0x2397000
	0x01D5EE74 LDR X0, [X0 + 0x648]
	0x01D5EE78 BL 0x1C16CF4
	0x01D5EE7C MOVZ W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x2396000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2398000
	011 Move X0, [X0+1440]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01D5EE80 STRB W8, [X21 + 0x82C]
	0x01D5EE84 LDR X9, [X19 + 0x70]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

