Type: AnimalCompany.FriendView

Method: System.String get_id()

Disassembly:
	0x01D86CF0 MOV X1, X21
	0x01D86CF4 BL 0x1C16E00

ISIL:
	001 Move X0, [X0+120]
	002 Return X0

Method: System.String get_displayName()

Disassembly:
	0x01D86930 ADRP X0, 0x236D000
	0x01D86934 LDR X0, [X0 + 0x758]
	0x01D86938 BL 0x1C16CF4
	0x01D8693C ADRP X0, 0x236D000
	0x01D86940 LDR X0, [X0 + 0x5A8]
	0x01D86944 BL 0x1C16CF4
	0x01D86948 ADRP X0, 0x236F000
	0x01D8694C LDR X0, [X0 + 0x570]
	0x01D86950 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+1352]
	007 Move X1, [X8+1360]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Boolean get_isOnline()

Disassembly:
	0x01D869E8 MOV X1, X19
	0x01D869EC MOV X2, X31
	0x01D869F0 BL 0x3361F58
	0x01D869F4 LDR X8, [X20]
	0x01D869F8 STR X0, [X31 + 0x18]
	0x01D869FC LDR W9, [X8 + 0xE0]
	0x01D86A00 CBNZ W9, 0x1D86A0C
	0x01D86A04 MOV X0, X8
	0x01D86A08 BL 0x1C16DFC
	0x01D86A0C ADD X0, X31, 0x18

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {13}
	005 Move X1, X31
	006 Call Component.get_gameObject, X0
	007 Compare X0, 0
	008 JumpIfEqual {13}
	009 Move X1, X31
	010 Move X30, [X31+16]
	011 Call GameObject.get_activeSelf, X0
	012 Return X0
	013 Call 0x1C17F20

Method: System.Boolean get_isOffline()

Disassembly:
	0x01D86CF8 CBZ X0, 0x1D86D8C
	0x01D86CFC STR X0, [X23 + 0x20]
	0x01D86D00 LDR X21, [X22]
	0x01D86D04 MOV X0, X20
	0x01D86D08 MOV X1, X21
	0x01D86D0C BL 0x1C16E00
	0x01D86D10 CBNZ X0, 0x1D86D1C
	0x01D86D14 B 0x1D86D8C
	0x01D86D18 STR X31, [X23 + 0x20]
	0x01D86D1C LDR X23, [X19 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+56]
	003 Compare X0, 0
	004 JumpIfEqual {13}
	005 Move X1, X31
	006 Call Component.get_gameObject, X0
	007 Compare X0, 0
	008 JumpIfEqual {13}
	009 Move X1, X31
	010 Move X30, [X31+16]
	011 Call GameObject.get_activeSelf, X0
	012 Return X0
	013 Call 0x1C17F20

Method: System.Boolean get_isInRoom()

Disassembly:
	0x01D86D20 CBZ X23, 0x1D86DB4
	0x01D86D24 LDR X0, [X22]
	0x01D86D28 ADRP X21, 0x2370000
	0x01D86D2C LDR X20, [X23 + 0x28]
	0x01D86D30 LDR X21, [X21 + 0x9C8]
	0x01D86D34 BL 0x1C16F10
	0x01D86D38 LDR X2, [X21]
	0x01D86D3C MOV X1, X19
	0x01D86D40 MOV X3, X31
	0x01D86D44 MOV X21, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+64]
	003 Compare X0, 0
	004 JumpIfEqual {13}
	005 Move X1, X31
	006 Call GameObject.get_gameObject, X0
	007 Compare X0, 0
	008 JumpIfEqual {13}
	009 Move X1, X31
	010 Move X30, [X31+16]
	011 Call GameObject.get_activeSelf, X0
	012 Return X0
	013 Call 0x1C17F20

Method: AnimalCompany.FriendshipState get_friendshipState()

Disassembly:
	0x01D86D48 BL 0x2A6B948
	0x01D86D4C MOV X0, X20

ISIL:
	001 Move W0, [X0+128]
	002 Return X0

Method: System.Void add_onJoin(System.Action`1<System.String> value)

Disassembly:
	0x01D7FFC4 LDR X8, [X25]
	0x01D7FFC8 LDR X8, [X8 + 0xB8]
	0x01D7FFCC STR X23, [X8 + 0x40]
	0x01D7FFD0 LDR X2, [X26]
	0x01D7FFD4 MOV X0, X20
	0x01D7FFD8 MOV X1, X23
	0x01D7FFDC BL 0x21C9B5C
	0x01D7FFE0 LDR X2, [X19 + 0x88]
	0x01D7FFE4 MOV X1, X21
	0x01D7FFE8 MOV X20, X0
	0x01D7FFEC BL 0x1D85450
	0x01D7FFF0 LDR X2, [X19 + 0x90]
	0x01D7FFF4 MOV X1, X22
	0x01D7FFF8 BL 0x1D85450
	0x01D7FFFC LDR X2, [X19 + 0x98]
	0x01D80000 MOV X1, X20
	0x01D80004 BL 0x1D85450
	0x01D80008 LDR W8, [X19 + 0xB8]
	0x01D8000C CMP W8, 0x1
	0x01D80010 B.NE 0x1D80034
	0x01D80014 MOV X0, X19
	0x01D80018 LDP X20, X19, [X31 + 0x50]
	0x01D8001C LDP X22, X21, [X31 + 0x40]
	0x01D80020 LDP X24, X23, [X31 + 0x30]
	0x01D80024 LDP X26, X25, [X31 + 0x20]
	0x01D80028 LDP X28, X27, [X31 + 0x10]
	0x01D8002C LDR X30, [X31], #0x60
	0x01D80030 B 0x1D84E84
	0x01D80034 LDP X20, X19, [X31 + 0x50]
	0x01D80038 LDP X22, X21, [X31 + 0x40]
	0x01D8003C LDP X24, X23, [X31 + 0x30]
	0x01D80040 LDP X26, X25, [X31 + 0x20]
	0x01D80044 LDP X28, X27, [X31 + 0x10]
	0x01D80048 LDR X30, [X31], #0x60
	0x01D8004C RET
	0x01D80050 STR X30, [X31 - 0x40]!
	0x01D80054 STP X24, X23, [X31 + 0x10]
	0x01D80058 STP X22, X21, [X31 + 0x20]
	0x01D8005C STP X20, X19, [X31 + 0x30]
	0x01D80060 ADRP X21, 0x2658000
	0x01D80064 ADRP X20, 0x2376000
	0x01D80068 ADRP X23, 0x2376000
	0x01D8006C LDRB W8, [X21 + 0x97E]
	0x01D80070 LDR X20, [X20 + 0x578]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x265A000
	009 Move W8, [X21+2442]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2376000
	017 Move X0, [X0+3688]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2442], W8
	021 Move X24, 0x2376000
	022 Add X20, X20, 136
	023 Move X21, [X20]
	024 Call 0x3EB27BC
	025 Return 
	026 Move X0, X21
	027 Move X1, X19
	028 Move X2, X31
	029 Call Delegate.Combine, X0, X1
	030 Compare X0, 0
	031 JumpIfEqual {39}
	032 Move X23, [X24]
	033 Move X22, X0
	034 Move X1, X23
	035 Call 0x1C17E00
	036 Move X1, X0
	037 Compare X0, 0
	038 JumpIfNotEqual {40}
	039 Move X1, X31
	040 Move X0, X20
	041 Move X2, X21
	042 Call 0x1C25138
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X21, X0
	045 Move X20, [X31+48]
	046 Move X19, [X31+56]
	047 Move X22, [X31+32]
	048 Move X21, [X31+40]
	049 Move X24, [X31+16]
	050 Move X23, [X31+24]
	051 Move X30, [X31+64]
	052 Return 
	053 Move X0, X22
	054 Move X1, X23
	055 Call 0x1C181E0

Method: System.Void remove_onJoin(System.Action`1<System.String> value)

Disassembly:
	0x01D86D50 MOV X1, X21
	0x01D86D54 MOV X2, X31
	0x01D86D58 BL 0x33C0DE4
	0x01D86D5C CBZ X0, 0x1D86D98
	0x01D86D60 LDR X21, [X22]
	0x01D86D64 MOV X20, X0
	0x01D86D68 MOV X1, X21
	0x01D86D6C BL 0x1C16E00
	0x01D86D70 CBZ X0, 0x1D86D8C
	0x01D86D74 STR X0, [X23 + 0x28]
	0x01D86D78 LDR X21, [X22]
	0x01D86D7C MOV X0, X20
	0x01D86D80 MOV X1, X21
	0x01D86D84 BL 0x1C16E00
	0x01D86D88 CBNZ X0, 0x1D86D9C
	0x01D86D8C MOV X0, X20
	0x01D86D90 MOV X1, X21
	0x01D86D94 BL 0x1C171E0
	0x01D86D98 STR X31, [X23 + 0x28]
	0x01D86D9C MOV X0, X19
	0x01D86DA0 LDP X20, X19, [X31 + 0x20]
	0x01D86DA4 LDP X22, X21, [X31 + 0x10]
	0x01D86DA8 MOV W1, W31
	0x01D86DAC LDP X30, X23, [X31], #0x30
	0x01D86DB0 B 0x1D86DB8
	0x01D86DB4 BL 0x1C16F20
	0x01D86DB8 STP X30, X23, [X31 - 0x30]!
	0x01D86DBC STP X22, X21, [X31 + 0x10]
	0x01D86DC0 STP X20, X19, [X31 + 0x20]
	0x01D86DC4 ADRP X21, 0x2652000
	0x01D86DC8 LDRB W8, [X21 + 0x9A0]
	0x01D86DCC MOV W20, W1
	0x01D86DD0 MOV X19, X0
	0x01D86DD4 TBNZ X8, 0x0, 0x1D86E28
	0x01D86DD8 ADRP X0, 0x236F000
	0x01D86DDC LDR X0, [X0 + 0x5B0]
	0x01D86DE0 BL 0x1C16CF4
	0x01D86DE4 ADRP X0, 0x236E000
	0x01D86DE8 LDR X0, [X0 + 0xE70]
	0x01D86DEC BL 0x1C16CF4
	0x01D86DF0 ADRP X0, 0x236F000
	0x01D86DF4 LDR X0, [X0 + 0x5A8]
	0x01D86DF8 BL 0x1C16CF4
	0x01D86DFC ADRP X0, 0x2370000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2653000
	009 Move W8, [X21+2443]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x236F000
	017 Move X0, [X0+3688]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2443], W8
	021 Move X24, 0x236F000
	022 Add X20, X20, 136
	023 Move X21, [X20]
	024 Move X24, [X24+3688]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_onAccept(System.Action`1<System.String> value)

Disassembly:
	0x01D7FD04 LDR X2, [X26]
	0x01D7FD08 MOV X0, X21
	0x01D7FD0C MOV X1, X22
	0x01D7FD10 BL 0x21C9B5C
	0x01D7FD14 LDR X8, [X25]
	0x01D7FD18 MOV X21, X0
	0x01D7FD1C LDR W9, [X8 + 0xE0]
	0x01D7FD20 CBNZ W9, 0x1D7FD30
	0x01D7FD24 MOV X0, X8
	0x01D7FD28 BL 0x1C16DFC
	0x01D7FD2C LDR X8, [X25]
	0x01D7FD30 LDR X9, [X8 + 0xB8]
	0x01D7FD34 LDR X22, [X9 + 0x20]
	0x01D7FD38 CBNZ X22, 0x1D7FD90
	0x01D7FD3C LDR W9, [X8 + 0xE0]
	0x01D7FD40 CBNZ W9, 0x1D7FD50
	0x01D7FD44 MOV X0, X8
	0x01D7FD48 BL 0x1C16DFC
	0x01D7FD4C LDR X8, [X25]
	0x01D7FD50 ADRP X9, 0x2377000
	0x01D7FD54 LDR X8, [X8 + 0xB8]
	0x01D7FD58 LDR X9, [X9 + 0x5F8]
	0x01D7FD5C LDR X23, [X8]
	0x01D7FD60 LDR X0, [X9]
	0x01D7FD64 BL 0x1C16F10
	0x01D7FD68 ADRP X8, 0x2377000
	0x01D7FD6C LDR X8, [X8 + 0x620]
	0x01D7FD70 MOV X1, X23
	0x01D7FD74 MOV X3, X31
	0x01D7FD78 MOV X22, X0
	0x01D7FD7C LDR X2, [X8]
	0x01D7FD80 BL 0x2D2F428
	0x01D7FD84 LDR X8, [X25]
	0x01D7FD88 LDR X8, [X8 + 0xB8]
	0x01D7FD8C STR X22, [X8 + 0x20]
	0x01D7FD90 LDR X2, [X27]
	0x01D7FD94 MOV X0, X20
	0x01D7FD98 MOV X1, X22
	0x01D7FD9C BL 0x21DA490
	0x01D7FDA0 LDR X8, [X25]
	0x01D7FDA4 MOV X22, X0
	0x01D7FDA8 LDR W9, [X8 + 0xE0]
	0x01D7FDAC CBNZ W9, 0x1D7FDBC
	0x01D7FDB0 MOV X0, X8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x265A000
	009 Move W8, [X21+2444]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2376000
	017 Move X0, [X0+3688]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2444], W8
	021 Move X24, 0x2376000
	022 Add X20, X20, 144
	023 Move X21, [X20]
	024 Move X24, [X24+3688]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_onAccept(System.Action`1<System.String> value)

Disassembly:
	0x01D86E00 LDR X0, [X0 + 0x9D0]
	0x01D86E04 BL 0x1C16CF4
	0x01D86E08 ADRP X0, 0x2370000
	0x01D86E0C LDR X0, [X0 + 0x9D8]
	0x01D86E10 BL 0x1C16CF4
	0x01D86E14 ADRP X0, 0x2370000
	0x01D86E18 LDR X0, [X0 + 0x9E0]
	0x01D86E1C BL 0x1C16CF4
	0x01D86E20 MOVZ W8, 0x1
	0x01D86E24 STRB W8, [X21 + 0x9A0]
	0x01D86E28 STRB W31, [X19 + 0x61]
	0x01D86E2C TBZ X20, 0x0, 0x1D86E40
	0x01D86E30 LDR X0, [X19 + 0x50]
	0x01D86E34 CBZ X0, 0x1D86FFC
	0x01D86E38 MOV X1, X31
	0x01D86E3C BL 0x3BFCAC0
	0x01D86E40 ADRP X8, 0x236F000
	0x01D86E44 LDR X8, [X8 + 0x5A8]
	0x01D86E48 LDR W20, [X19 + 0x30]
	0x01D86E4C LDR X0, [X8]
	0x01D86E50 LDR W8, [X0 + 0xE0]
	0x01D86E54 CBNZ W8, 0x1D86E5C
	0x01D86E58 BL 0x1C16DFC
	0x01D86E5C MOV W0, W20
	0x01D86E60 MOV X1, X31
	0x01D86E64 BL 0x31AD670
	0x01D86E68 LDR W0, [X19 + 0x40]
	0x01D86E6C MOV X1, X31
	0x01D86E70 BL 0x31AD670
	0x01D86E74 FMOV S0, 1
	0x01D86E78 FMOV S1, W31
	0x01D86E7C FMOV S2, 0.75
	0x01D86E80 MOV X0, X31
	0x01D86E84 BL 0x31B22EC
	0x01D86E88 CBZ X0, 0x1D86FFC
	0x01D86E8C ADRP X22, 0x236F000
	0x01D86E90 ADRP X21, 0x2370000
	0x01D86E94 LDR X22, [X22 + 0x5B0]
	0x01D86E98 LDR X21, [X21 + 0x9D0]
	0x01D86E9C MOV X1, X31
	0x01D86EA0 BL 0x31C5524
	0x01D86EA4 LDR X8, [X22]
	0x01D86EA8 MOV X20, X0
	0x01D86EAC MOV X0, X8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2653000
	009 Move W8, [X21+2445]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x236F000
	017 Move X0, [X0+3688]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2445], W8
	021 Move X24, 0x236F000
	022 Add X20, X20, 144
	023 Move X21, [X20]
	024 Move X24, [X24+3688]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_onDecline(System.Action`1<System.String> value)

Disassembly:
	0x01D7FE64 LDR W9, [X8 + 0xE0]
	0x01D7FE68 CBNZ W9, 0x1D7FE78
	0x01D7FE6C MOV X0, X8
	0x01D7FE70 BL 0x1C16DFC
	0x01D7FE74 LDR X8, [X25]
	0x01D7FE78 ADRP X9, 0x2377000
	0x01D7FE7C LDR X8, [X8 + 0xB8]
	0x01D7FE80 LDR X9, [X9 + 0x600]
	0x01D7FE84 LDR X24, [X8]
	0x01D7FE88 LDR X0, [X9]
	0x01D7FE8C BL 0x1C16F10
	0x01D7FE90 ADRP X8, 0x2377000
	0x01D7FE94 LDR X8, [X8 + 0x630]
	0x01D7FE98 MOV X1, X24
	0x01D7FE9C MOV X3, X31
	0x01D7FEA0 MOV X23, X0
	0x01D7FEA4 LDR X2, [X8]
	0x01D7FEA8 BL 0x2D30578
	0x01D7FEAC LDR X8, [X25]
	0x01D7FEB0 LDR X8, [X8 + 0xB8]
	0x01D7FEB4 STR X23, [X8 + 0x30]
	0x01D7FEB8 LDR X2, [X28]
	0x01D7FEBC MOV X0, X22
	0x01D7FEC0 MOV X1, X23
	0x01D7FEC4 BL 0x21D4EB8
	0x01D7FEC8 LDR X8, [X25]
	0x01D7FECC MOV X22, X0
	0x01D7FED0 LDR W9, [X8 + 0xE0]
	0x01D7FED4 CBNZ W9, 0x1D7FEE4
	0x01D7FED8 MOV X0, X8
	0x01D7FEDC BL 0x1C16DFC
	0x01D7FEE0 LDR X8, [X25]
	0x01D7FEE4 LDR X9, [X8 + 0xB8]
	0x01D7FEE8 LDR X23, [X9 + 0x38]
	0x01D7FEEC CBNZ X23, 0x1D7FF44
	0x01D7FEF0 LDR W9, [X8 + 0xE0]
	0x01D7FEF4 CBNZ W9, 0x1D7FF04
	0x01D7FEF8 MOV X0, X8
	0x01D7FEFC BL 0x1C16DFC
	0x01D7FF00 LDR X8, [X25]
	0x01D7FF04 ADRP X9, 0x2377000
	0x01D7FF08 LDR X8, [X8 + 0xB8]
	0x01D7FF0C LDR X9, [X9 + 0x5F8]
	0x01D7FF10 LDR X24, [X8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x265A000
	009 Move W8, [X21+2446]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2376000
	017 Move X0, [X0+3688]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2446], W8
	021 Move X24, 0x2376000
	022 Add X20, X20, 152
	023 Move X21, [X20]
	024 Move X24, [X24+3688]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_onDecline(System.Action`1<System.String> value)

Disassembly:
	0x01D86EB0 BL 0x1C16F10
	0x01D86EB4 LDR X2, [X21]
	0x01D86EB8 MOV X1, X19
	0x01D86EBC MOV X3, X31
	0x01D86EC0 MOV X21, X0
	0x01D86EC4 BL 0x2A6DA40
	0x01D86EC8 CBZ X20, 0x1D86FFC
	0x01D86ECC MOV X0, X20
	0x01D86ED0 MOV X1, X21
	0x01D86ED4 MOV X2, X31
	0x01D86ED8 BL 0x31C8070
	0x01D86EDC CBZ X0, 0x1D86FFC
	0x01D86EE0 MOV X1, X31
	0x01D86EE4 BL 0x31BFBD4
	0x01D86EE8 STR W0, [X19 + 0x40]
	0x01D86EEC FMOV S0, 1
	0x01D86EF0 FMOV S1, W31
	0x01D86EF4 FMOV S2, 0.5
	0x01D86EF8 MOV X0, X31
	0x01D86EFC BL 0x31B22EC
	0x01D86F00 CBZ X0, 0x1D86FFC
	0x01D86F04 ADRP X21, 0x2370000
	0x01D86F08 LDR X21, [X21 + 0x9E0]
	0x01D86F0C MOV X1, X31
	0x01D86F10 BL 0x31C541C
	0x01D86F14 LDR X8, [X22]
	0x01D86F18 MOV X20, X0
	0x01D86F1C MOV X0, X8
	0x01D86F20 BL 0x1C16F10
	0x01D86F24 LDR X2, [X21]
	0x01D86F28 MOV X1, X19
	0x01D86F2C MOV X3, X31
	0x01D86F30 MOV X21, X0
	0x01D86F34 BL 0x2A6DA40
	0x01D86F38 CBZ X20, 0x1D86FFC
	0x01D86F3C ADRP X22, 0x236E000
	0x01D86F40 ADRP X23, 0x2370000
	0x01D86F44 LDR X22, [X22 + 0xE70]
	0x01D86F48 LDR X23, [X23 + 0x9D8]
	0x01D86F4C MOV X0, X20
	0x01D86F50 MOV X1, X21
	0x01D86F54 MOV X2, X31
	0x01D86F58 BL 0x31C8070
	0x01D86F5C LDR X8, [X22]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2653000
	009 Move W8, [X21+2447]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x236F000
	017 Move X0, [X0+3688]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2447], W8
	021 Move X24, 0x236F000
	022 Add X20, X20, 152
	023 Move X21, [X20]
	024 Move X24, [X24+3688]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_onDelete(System.Action`1<System.String> value)

Disassembly:
	0x01D7FF14 LDR X0, [X9]
	0x01D7FF18 BL 0x1C16F10
	0x01D7FF1C ADRP X8, 0x2377000
	0x01D7FF20 LDR X8, [X8 + 0x638]
	0x01D7FF24 MOV X1, X24
	0x01D7FF28 MOV X3, X31
	0x01D7FF2C MOV X23, X0
	0x01D7FF30 LDR X2, [X8]
	0x01D7FF34 BL 0x2D2F428
	0x01D7FF38 LDR X8, [X25]
	0x01D7FF3C LDR X8, [X8 + 0xB8]
	0x01D7FF40 STR X23, [X8 + 0x38]
	0x01D7FF44 LDR X2, [X27]
	0x01D7FF48 MOV X0, X20
	0x01D7FF4C MOV X1, X23
	0x01D7FF50 BL 0x21DA490
	0x01D7FF54 LDR X8, [X25]
	0x01D7FF58 MOV X20, X0
	0x01D7FF5C LDR W9, [X8 + 0xE0]
	0x01D7FF60 CBNZ W9, 0x1D7FF70
	0x01D7FF64 MOV X0, X8
	0x01D7FF68 BL 0x1C16DFC
	0x01D7FF6C LDR X8, [X25]
	0x01D7FF70 LDR X9, [X8 + 0xB8]
	0x01D7FF74 LDR X23, [X9 + 0x40]
	0x01D7FF78 CBNZ X23, 0x1D7FFD0
	0x01D7FF7C LDR W9, [X8 + 0xE0]
	0x01D7FF80 CBNZ W9, 0x1D7FF90
	0x01D7FF84 MOV X0, X8
	0x01D7FF88 BL 0x1C16DFC
	0x01D7FF8C LDR X8, [X25]
	0x01D7FF90 ADRP X9, 0x2377000
	0x01D7FF94 LDR X8, [X8 + 0xB8]
	0x01D7FF98 LDR X9, [X9 + 0x600]
	0x01D7FF9C LDR X24, [X8]
	0x01D7FFA0 LDR X0, [X9]
	0x01D7FFA4 BL 0x1C16F10
	0x01D7FFA8 ADRP X8, 0x2377000
	0x01D7FFAC LDR X8, [X8 + 0x640]
	0x01D7FFB0 MOV X1, X24
	0x01D7FFB4 MOV X3, X31
	0x01D7FFB8 MOV X23, X0
	0x01D7FFBC LDR X2, [X8]
	0x01D7FFC0 BL 0x2D30578

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x265A000
	009 Move W8, [X21+2448]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2376000
	017 Move X0, [X0+3688]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2448], W8
	021 Move X24, 0x2376000
	022 Add X20, X20, 160
	023 Move X21, [X20]
	024 Move X24, [X24+3688]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_onDelete(System.Action`1<System.String> value)

Disassembly:
	0x01D86F60 MOV X20, X0
	0x01D86F64 MOV X0, X8
	0x01D86F68 BL 0x1C16F10
	0x01D86F6C LDR X2, [X23]
	0x01D86F70 MOV X1, X19
	0x01D86F74 MOV X3, X31
	0x01D86F78 MOV X21, X0
	0x01D86F7C BL 0x3314368
	0x01D86F80 CBZ X20, 0x1D86FFC
	0x01D86F84 MOV X0, X20
	0x01D86F88 MOV X1, X21
	0x01D86F8C MOV X2, X31
	0x01D86F90 BL 0x31C7FD8
	0x01D86F94 CBZ X0, 0x1D86FFC
	0x01D86F98 MOV X1, X31
	0x01D86F9C BL 0x31BFBD4
	0x01D86FA0 LDR X20, [X19 + 0x58]
	0x01D86FA4 STR W0, [X19 + 0x30]
	0x01D86FA8 CBZ X20, 0x1D86FFC
	0x01D86FAC LDR W8, [X20 + 0x18]
	0x01D86FB0 CMP W8, 0x1
	0x01D86FB4 B.LT 0x1D86FEC
	0x01D86FB8 MOV W19, W31
	0x01D86FBC CMP W19, W8
	0x01D86FC0 B.CS 0x1D87000
	0x01D86FC4 ADD X8, X20, W19, 0x3, SXTW
	0x01D86FC8 LDR X0, [X8 + 0x20]
	0x01D86FCC CBZ X0, 0x1D86FFC
	0x01D86FD0 MOV W1, W31
	0x01D86FD4 MOV X2, X31
	0x01D86FD8 BL 0x3C357B4
	0x01D86FDC LDR W8, [X20 + 0x18]
	0x01D86FE0 ADD W19, W19, 0x1
	0x01D86FE4 CMP W19, W8
	0x01D86FE8 B.LT 0x1D86FBC
	0x01D86FEC LDP X20, X19, [X31 + 0x20]
	0x01D86FF0 LDP X22, X21, [X31 + 0x10]
	0x01D86FF4 LDP X30, X23, [X31], #0x30
	0x01D86FF8 RET
	0x01D86FFC BL 0x1C16F20
	0x01D87000 BL 0x1C16F28
	0x01D87004 STP X30, X21, [X31 - 0x20]!
	0x01D87008 STP X20, X19, [X31 + 0x10]
	0x01D8700C ADRP X21, 0x2651000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2653000
	009 Move W8, [X21+2449]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x236F000
	017 Move X0, [X0+3688]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2449], W8
	021 Move X24, 0x236F000
	022 Add X20, X20, 160
	023 Move X21, [X20]
	024 Move X24, [X24+3688]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_onCancel(System.Action`1<System.String> value)

Disassembly:
	0x01D7FDB4 BL 0x1C16DFC
	0x01D7FDB8 LDR X8, [X25]
	0x01D7FDBC LDR X9, [X8 + 0xB8]
	0x01D7FDC0 ADRP X28, 0x2377000
	0x01D7FDC4 LDR X23, [X9 + 0x28]
	0x01D7FDC8 LDR X28, [X28 + 0x5C8]
	0x01D7FDCC CBNZ X23, 0x1D7FE24
	0x01D7FDD0 LDR W9, [X8 + 0xE0]
	0x01D7FDD4 CBNZ W9, 0x1D7FDE4
	0x01D7FDD8 MOV X0, X8
	0x01D7FDDC BL 0x1C16DFC
	0x01D7FDE0 LDR X8, [X25]
	0x01D7FDE4 ADRP X9, 0x2377000
	0x01D7FDE8 LDR X8, [X8 + 0xB8]
	0x01D7FDEC LDR X9, [X9 + 0x5F8]
	0x01D7FDF0 LDR X24, [X8]
	0x01D7FDF4 LDR X0, [X9]
	0x01D7FDF8 BL 0x1C16F10
	0x01D7FDFC ADRP X8, 0x2377000
	0x01D7FE00 LDR X8, [X8 + 0x628]
	0x01D7FE04 MOV X1, X24
	0x01D7FE08 MOV X3, X31
	0x01D7FE0C MOV X23, X0
	0x01D7FE10 LDR X2, [X8]
	0x01D7FE14 BL 0x2D2F428
	0x01D7FE18 LDR X8, [X25]
	0x01D7FE1C LDR X8, [X8 + 0xB8]
	0x01D7FE20 STR X23, [X8 + 0x28]
	0x01D7FE24 LDR X2, [X28]
	0x01D7FE28 MOV X0, X22
	0x01D7FE2C MOV X1, X23
	0x01D7FE30 BL 0x21C9A18
	0x01D7FE34 LDR X8, [X25]
	0x01D7FE38 MOV X22, X0
	0x01D7FE3C LDR W9, [X8 + 0xE0]
	0x01D7FE40 CBNZ W9, 0x1D7FE50
	0x01D7FE44 MOV X0, X8
	0x01D7FE48 BL 0x1C16DFC
	0x01D7FE4C LDR X8, [X25]
	0x01D7FE50 LDR X9, [X8 + 0xB8]
	0x01D7FE54 ADRP X28, 0x2377000
	0x01D7FE58 LDR X23, [X9 + 0x30]
	0x01D7FE5C LDR X28, [X28 + 0x5E0]
	0x01D7FE60 CBNZ X23, 0x1D7FEB8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x265A000
	009 Move W8, [X21+2450]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2376000
	017 Move X0, [X0+3688]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2450], W8
	021 Move X24, 0x2376000
	022 Add X20, X20, 168
	023 Move X21, [X20]
	024 Move X24, [X24+3688]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_onCancel(System.Action`1<System.String> value)

Disassembly:
	0x01D87010 LDRB W8, [X21 + 0x99D]
	0x01D87014 MOV X20, X1
	0x01D87018 MOV X19, X0
	0x01D8701C TBNZ X8, 0x0, 0x1D87034
	0x01D87020 ADRP X0, 0x236E000
	0x01D87024 LDR X0, [X0 + 0x768]
	0x01D87028 BL 0x1C16CF4
	0x01D8702C MOVZ W8, 0x1
	0x01D87030 STRB W8, [X21 + 0x99D]
	0x01D87034 CBZ X20, 0x1D87068
	0x01D87038 ADRP X8, 0x236E000
	0x01D8703C LDR X8, [X8 + 0x768]
	0x01D87040 MOV X0, X20
	0x01D87044 MOV X2, X31
	0x01D87048 LDR X1, [X8]
	0x01D8704C BL 0x3C33420
	0x01D87050 TBZ X0, 0x0, 0x1D8705C
	0x01D87054 MOVZ W8, 0x1
	0x01D87058 STRB W8, [X19 + 0x60]
	0x01D8705C LDP X20, X19, [X31 + 0x10]
	0x01D87060 LDP X30, X21, [X31], #0x20
	0x01D87064 RET
	0x01D87068 BL 0x1C16F20
	0x01D8706C STP X30, X21, [X31 - 0x20]!
	0x01D87070 STP X20, X19, [X31 + 0x10]
	0x01D87074 ADRP X21, 0x2651000
	0x01D87078 LDRB W8, [X21 + 0x99E]
	0x01D8707C MOV X20, X1
	0x01D87080 MOV X19, X0
	0x01D87084 TBNZ X8, 0x0, 0x1D8709C
	0x01D87088 ADRP X0, 0x236E000
	0x01D8708C LDR X0, [X0 + 0x768]
	0x01D87090 BL 0x1C16CF4
	0x01D87094 MOVZ W8, 0x1
	0x01D87098 STRB W8, [X21 + 0x99E]
	0x01D8709C CBZ X20, 0x1D870CC
	0x01D870A0 ADRP X8, 0x236E000
	0x01D870A4 LDR X8, [X8 + 0x768]
	0x01D870A8 MOV X0, X20
	0x01D870AC MOV X2, X31
	0x01D870B0 LDR X1, [X8]
	0x01D870B4 BL 0x3C33420
	0x01D870B8 TBZ X0, 0x0, 0x1D870C0
	0x01D870BC STRB W31, [X19 + 0x60]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2652000
	009 Move W8, [X21+2451]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x236E000
	017 Move X0, [X0+3688]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2451], W8
	021 Move X24, 0x236E000
	022 Add X20, X20, 168
	023 Move X21, [X20]
	024 Move X24, [X24+3688]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void OnEnable()

Disassembly:
	0x01D870C0 LDP X20, X19, [X31 + 0x10]
	0x01D870C4 LDP X30, X21, [X31], #0x20
	0x01D870C8 RET
	0x01D870CC BL 0x1C16F20
	0x01D870D0 STR D8, [X31 - 0x20]!
	0x01D870D4 STP X30, X19, [X31 + 0x10]
	0x01D870D8 LDRB W9, [X0 + 0x60]
	0x01D870DC LDRB W8, [X0 + 0x61]
	0x01D870E0 MOV X19, X0
	0x01D870E4 CBZ W9, 0x1D8711C
	0x01D870E8 CBNZ W8, 0x1D8713C
	0x01D870EC LDR V8, [X19 + 0x64]
	0x01D870F0 MOV X0, X31
	0x01D870F4 BL 0x3C3C714
	0x01D870F8 FADD S0, S8, S0
	0x01D870FC FMOV S1, 0.25
	0x01D87100 FCMP S0, S1
	0x01D87104 STR S0, [X19 + 0x64]
	0x01D87108 B.LT 0x1D8713C
	0x01D8710C MOV X0, X19
	0x01D87110 LDP X30, X19, [X31 + 0x10]
	0x01D87114 LDR V8, [X31], #0x20
	0x01D87118 B 0x1D8715C
	0x01D8711C CBZ W8, 0x1D8713C
	0x01D87120 LDR V8, [X19 + 0x64]
	0x01D87124 MOV X0, X31
	0x01D87128 BL 0x3C3C714
	0x01D8712C FSUB S0, S8, S0
	0x01D87130 FCMP S0, 0x0
	0x01D87134 STR S0, [X19 + 0x64]
	0x01D87138 B.LS 0x1D87148
	0x01D8713C LDP X30, X19, [X31 + 0x10]
	0x01D87140 LDR V8, [X31], #0x20
	0x01D87144 RET
	0x01D87148 MOV X0, X19
	0x01D8714C LDP X30, X19, [X31 + 0x10]
	0x01D87150 MOVZ W1, 0x1
	0x01D87154 LDR V8, [X31], #0x20
	0x01D87158 B 0x1D86DB8
	0x01D8715C STR X30, [X31 - 0x30]!
	0x01D87160 STP X22, X21, [X31 + 0x10]
	0x01D87164 STP X20, X19, [X31 + 0x20]
	0x01D87168 ADRP X20, 0x2651000
	0x01D8716C LDRB W8, [X20 + 0x99F]
	0x01D87170 MOV X19, X0
	0x01D87174 TBNZ X8, 0x0, 0x1D871B0
	0x01D87178 ADRP X0, 0x236E000
	0x01D8717C LDR X0, [X0 + 0x5B0]
	0x01D87180 BL 0x1C16CF4
	0x01D87184 ADRP X0, 0x236E000
	0x01D87188 LDR X0, [X0 + 0x5A8]
	0x01D8718C BL 0x1C16CF4
	0x01D87190 ADRP X0, 0x236F000
	0x01D87194 LDR X0, [X0 + 0x9D0]
	0x01D87198 BL 0x1C16CF4
	0x01D8719C ADRP X0, 0x236F000
	0x01D871A0 LDR X0, [X0 + 0x9E0]
	0x01D871A4 BL 0x1C16CF4
	0x01D871A8 MOVZ W8, 0x1
	0x01D871AC STRB W8, [X20 + 0x99F]
	0x01D871B0 LDR X0, [X19 + 0x48]
	0x01D871B4 MOVZ W8, 0x1
	0x01D871B8 STRB W8, [X19 + 0x61]
	0x01D871BC CBZ X0, 0x1D87360
	0x01D871C0 ADRP X20, 0x236E000
	0x01D871C4 LDR X20, [X20 + 0x5A8]
	0x01D871C8 MOV X1, X31
	0x01D871CC BL 0x3BFCAC0
	0x01D871D0 LDR X0, [X20]
	0x01D871D4 LDR W20, [X19 + 0x30]
	0x01D871D8 LDR W8, [X0 + 0xE0]
	0x01D871DC CBNZ W8, 0x1D871E4
	0x01D871E0 BL 0x1C16DFC
	0x01D871E4 MOV W0, W20
	0x01D871E8 MOV X1, X31
	0x01D871EC BL 0x31AD670
	0x01D871F0 LDR W0, [X19 + 0x40]
	0x01D871F4 MOV X1, X31
	0x01D871F8 BL 0x31AD670
	0x01D871FC LDR X0, [X19 + 0x28]
	0x01D87200 CBZ X0, 0x1D87360
	0x01D87204 MOV X1, X31
	0x01D87208 BL 0x3C32ECC
	0x01D8720C CBZ X0, 0x1D87360
	0x01D87210 MOVZ W1, 0x1
	0x01D87214 MOV X2, X31
	0x01D87218 BL 0x3C357B4
	0x01D8721C ADRP X8, 0xFFFFFFFFFED63000
	0x01D87220 LDR V2, [X8 + 0x30C]
	0x01D87224 FMOV S0, W31
	0x01D87228 FMOV S1, 1
	0x01D8722C MOV X0, X31
	0x01D87230 BL 0x31B22EC
	0x01D87234 CBZ X0, 0x1D87360
	0x01D87238 ADRP X22, 0x236E000
	0x01D8723C ADRP X21, 0x236F000
	0x01D87240 LDR X22, [X22 + 0x5B0]
	0x01D87244 LDR X21, [X21 + 0x9D0]
	0x01D87248 MOV X1, X31
	0x01D8724C BL 0x31C541C
	0x01D87250 LDR X8, [X22]
	0x01D87254 MOV X20, X0
	0x01D87258 MOV X0, X8
	0x01D8725C BL 0x1C16F10
	0x01D87260 LDR X2, [X21]
	0x01D87264 MOV X1, X19
	0x01D87268 MOV X3, X31
	0x01D8726C MOV X21, X0
	0x01D87270 BL 0x2A6DA40
	0x01D87274 CBZ X20, 0x1D87360
	0x01D87278 MOV X0, X20
	0x01D8727C MOV X1, X21
	0x01D87280 MOV X2, X31
	0x01D87284 BL 0x31C8070
	0x01D87288 CBZ X0, 0x1D87360
	0x01D8728C MOV X1, X31
	0x01D87290 BL 0x31BFBD4
	0x01D87294 STR W0, [X19 + 0x40]
	0x01D87298 FMOV S0, W31
	0x01D8729C FMOV S1, 1
	0x01D872A0 FMOV S2, 0.75
	0x01D872A4 MOV X0, X31
	0x01D872A8 BL 0x31B22EC
	0x01D872AC CBZ X0, 0x1D87360
	0x01D872B0 ADRP X21, 0x236F000
	0x01D872B4 LDR X21, [X21 + 0x9E0]
	0x01D872B8 MOV X1, X31
	0x01D872BC BL 0x31C5CE0
	0x01D872C0 LDR X8, [X22]
	0x01D872C4 MOV X20, X0
	0x01D872C8 MOV X0, X8
	0x01D872CC BL 0x1C16F10
	0x01D872D0 LDR X2, [X21]
	0x01D872D4 MOV X1, X19
	0x01D872D8 MOV X3, X31
	0x01D872DC MOV X21, X0
	0x01D872E0 BL 0x2A6DA40
	0x01D872E4 CBZ X20, 0x1D87360
	0x01D872E8 MOV X0, X20
	0x01D872EC MOV X1, X21
	0x01D872F0 MOV X2, X31
	0x01D872F4 BL 0x31C8070
	0x01D872F8 CBZ X0, 0x1D87360
	0x01D872FC MOV X1, X31
	0x01D87300 BL 0x31BFBD4
	0x01D87304 LDR X20, [X19 + 0x58]
	0x01D87308 STR W0, [X19 + 0x30]
	0x01D8730C CBZ X20, 0x1D87360
	0x01D87310 LDR W8, [X20 + 0x18]
	0x01D87314 CMP W8, 0x1
	0x01D87318 B.LT 0x1D87350
	0x01D8731C MOV W19, W31
	0x01D87320 CMP W19, W8
	0x01D87324 B.CS 0x1D87364
	0x01D87328 ADD X8, X20, W19, 0x3, SXTW
	0x01D8732C LDR X0, [X8 + 0x20]
	0x01D87330 CBZ X0, 0x1D87360
	0x01D87334 MOVZ W1, 0x1
	0x01D87338 MOV X2, X31
	0x01D8733C BL 0x3C357B4
	0x01D87340 LDR W8, [X20 + 0x18]
	0x01D87344 ADD W19, W19, 0x1
	0x01D87348 CMP W19, W8
	0x01D8734C B.LT 0x1D87320
	0x01D87350 LDP X20, X19, [X31 + 0x20]
	0x01D87354 LDP X22, X21, [X31 + 0x10]
	0x01D87358 LDR X30, [X31], #0x30
	0x01D8735C RET
	0x01D87360 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2652000
	008 Move W8, [X20+2452]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0x236E000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move X0, 0x2370000
	018 Move X0, [X0+2376]
	019 Call 0x1C17CF4
	020 Move X0, 0x2370000
	021 Move X0, [X0+2384]
	022 Call 0x1C17CF4
	023 Move X0, 0x2370000
	024 Move X0, [X0+2392]
	025 Call 0x1C17CF4
	026 Move X0, 0x2370000
	027 Move X0, [X0+2400]
	028 Call 0x1C17CF4
	029 Move X0, 0x2370000
	030 Move X0, [X0+2408]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+2452], W8
	034 Move X23, [X19+72]
	035 Compare X23, 0
	036 JumpIfEqual {174}
	037 Move X22, 0x236E000
	038 Move X22, [X22+3696]
	039 Move X21, 0x2370000
	040 Move X20, [X23+32]
	041 Move X0, [X22]
	042 Move X21, [X21+2408]
	043 Call 0x1C17F10
	044 Move X2, [X21]
	045 Move X1, X19
	046 Move X3, X31
	047 Move X21, X0
	048 Call Action..ctor, X0, X1, X2
	049 Move X0, X20
	050 Move X1, X21
	051 Move X2, X31
	052 Call Delegate.Combine, X0, X1
	053 Move X1, [X22]
	054 Compare X0, 0
	055 JumpIfEqual {61}
	056 Move X8, [X0]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move [X23+32], X0
	059 Move X8, [X0]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move [X23+32], X0
	062 Move X23, [X19+80]
	063 Compare X23, 0
	064 JumpIfEqual {174}
	065 Move X21, 0x2370000
	066 Move X20, [X23+32]
	067 Move X21, [X21+2376]
	068 Move X0, X1
	069 Call 0x1C17F10
	070 Move X2, [X21]
	071 Move X1, X19
	072 Move X3, X31
	073 Move X21, X0
	074 Call Action..ctor, X0, X1, X2
	075 Move X0, X20
	076 Move X1, X21
	077 Move X2, X31
	078 Call Delegate.Combine, X0, X1
	079 Move X1, [X22]
	080 Compare X0, 0
	081 JumpIfEqual {87}
	082 Move X8, [X0]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move [X23+32], X0
	085 Move X8, [X0]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move [X23+32], X0
	088 Move X23, [X19+88]
	089 Compare X23, 0
	090 JumpIfEqual {174}
	091 Move X21, 0x2370000
	092 Move X20, [X23+32]
	093 Move X21, [X21+2392]
	094 Move X0, X1
	095 Call 0x1C17F10
	096 Move X2, [X21]
	097 Move X1, X19
	098 Move X3, X31
	099 Move X21, X0
	100 Call Action..ctor, X0, X1, X2
	101 Move X0, X20
	102 Move X1, X21
	103 Move X2, X31
	104 Call Delegate.Combine, X0, X1
	105 Move X1, [X22]
	106 Compare X0, 0
	107 JumpIfEqual {113}
	108 Move X8, [X0]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move [X23+32], X0
	111 Move X8, [X0]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move [X23+32], X0
	114 Move X23, [X19+96]
	115 Compare X23, 0
	116 JumpIfEqual {174}
	117 Move X21, 0x2370000
	118 Move X20, [X23+32]
	119 Move X21, [X21+2400]
	120 Move X0, X1
	121 Call 0x1C17F10
	122 Move X2, [X21]
	123 Move X1, X19
	124 Move X3, X31
	125 Move X21, X0
	126 Call Action..ctor, X0, X1, X2
	127 Move X0, X20
	128 Move X1, X21
	129 Move X2, X31
	130 Call Delegate.Combine, X0, X1
	131 Move X1, [X22]
	132 Compare X0, 0
	133 JumpIfEqual {139}
	134 Move X8, [X0]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move [X23+32], X0
	137 Move X8, [X0]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move [X23+32], X0
	140 Move X23, [X19+112]
	141 Compare X23, 0
	142 JumpIfEqual {174}
	143 Move X21, 0x2370000
	144 Move X20, [X23+32]
	145 Move X21, [X21+2384]
	146 Move X0, X1
	147 Call 0x1C17F10
	148 Move X2, [X21]
	149 Move X1, X19
	150 Move X3, X31
	151 Move X21, X0
	152 Call Action..ctor, X0, X1, X2
	153 Move X0, X20
	154 Move X1, X21
	155 Move X2, X31
	156 Call Delegate.Combine, X0, X1
	157 Compare X0, 0
	158 JumpIfEqual {166}
	159 Move X1, [X22]
	160 Move X8, [X0]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move [X23+32], X0
	163 Move X8, [X0]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Call 0x1C181E0
	166 Move [X23+32], X0
	167 Move X20, [X31+32]
	168 Move X19, [X31+40]
	169 Move X22, [X31+16]
	170 Move X21, [X31+24]
	171 Move X30, [X31+48]
	172 Move X23, [X31+56]
	173 Return 
	174 Call 0x1C17F20

Method: System.Void OnDisable()

Disassembly:
	0x01D87364 BL 0x1C16F28
	0x01D87368 SUB X31, X31, 0x40
	0x01D8736C STR D8, [X31 + 0x10]
	0x01D87370 STP X30, X21, [X31 + 0x20]
	0x01D87374 STP X20, X19, [X31 + 0x30]
	0x01D87378 MOV X19, X0
	0x01D8737C LDR X0, [X0 + 0x38]
	0x01D87380 CBZ X0, 0x1D874BC
	0x01D87384 MOV V8.16B, V0.16B
	0x01D87388 FMOV S0, 1
	0x01D8738C FSUB S0, S0, S8
	0x01D87390 MOV X1, X31
	0x01D87394 BL 0x3E222A8
	0x01D87398 LDR X0, [X19 + 0x38]
	0x01D8739C CBZ X0, 0x1D874BC
	0x01D873A0 MOV X1, X31
	0x01D873A4 BL 0x3C32E90
	0x01D873A8 ADRP X21, 0x2651000
	0x01D873AC LDRB W8, [X21 + 0x85B]
	0x01D873B0 MOV X20, X0
	0x01D873B4 CBNZ W8, 0x1D873CC
	0x01D873B8 ADRP X0, 0x236C000
	0x01D873BC LDR X0, [X0 + 0x5A0]
	0x01D873C0 BL 0x1C16CF4
	0x01D873C4 MOVZ W8, 0x1
	0x01D873C8 STRB W8, [X21 + 0x85B]
	0x01D873CC FMOV S0, 1
	0x01D873D0 FCMP S8, 0x0
	0x01D873D4 FMIN S0, S8, S0
	0x01D873D8 FMOV S1, W31
	0x01D873DC FCSEL S4, S0, S1, PL
	0x01D873E0 CBZ X20, 0x1D874BC
	0x01D873E4 ADRP X8, 0x236C000
	0x01D873E8 LDR X8, [X8 + 0x5A0]
	0x01D873EC FMOV S2, 1.5
	0x01D873F0 FMOV V3.2S, 0x0
	0x01D873F4 MOV X0, X20
	0x01D873F8 LDR X8, [X8]
	0x01D873FC MOV X1, X31
	0x01D87400 STR V4, [X31]
	0x01D87404 LDR X8, [X8 + 0xB8]
	0x01D87408 LDR V0, [X8 + 0x14]
	0x01D8740C LDUR V1, [X8 + 0xC]
	0x01D87410 FSUB S2, S2, S0
	0x01D87414 FSUB V3.2S, V3.2S, V1.2S
	0x01D87418 FMUL S2, S4, S2
	0x00000000 INVALID
	0x01D87420 FADD S2, S0, S2
	0x01D87424 FADD V0.2S, V1.2S, V3.2S
	0x01D87428 MOV S1, V0.S[1]
	0x01D8742C BL 0x3C3FC4C
	0x01D87430 LDR X0, [X19 + 0x38]
	0x01D87434 CBZ X0, 0x1D874BC
	0x01D87438 MOV X1, X31
	0x01D8743C BL 0x3C32E90
	0x01D87440 LDR X8, [X19 + 0x38]
	0x01D87444 CBZ X8, 0x1D874BC
	0x01D87448 MOV X20, X0
	0x01D8744C MOV X0, X8
	0x01D87450 MOV X1, X31
	0x01D87454 BL 0x3C32E90
	0x01D87458 CBZ X0, 0x1D874BC
	0x01D8745C MOV X1, X31
	0x01D87460 BL 0x3C3EB78
	0x01D87464 LDR X0, [X19 + 0x38]
	0x01D87468 CBZ X0, 0x1D874BC
	0x01D8746C MOV X1, X31
	0x01D87470 MOV V8.16B, V0.16B
	0x01D87474 BL 0x3C32E90
	0x01D87478 CBZ X0, 0x1D874BC
	0x01D8747C MOV X1, X31
	0x01D87480 BL 0x3C3EB78
	0x01D87484 CBZ X20, 0x1D874BC
	0x01D87488 LDR V2, [X31]
	0x01D8748C FMOV S0, 1.5
	0x01D87490 MOV X0, X20
	0x01D87494 LDP X20, X19, [X31 + 0x30]
	0x01D87498 FMUL S0, S2, S0
	0x01D8749C FMOV S2, W31
	0x01D874A0 FADD S2, S0, S2
	0x01D874A4 MOV V0.16B, V8.16B
	0x01D874A8 LDP X30, X21, [X31 + 0x20]
	0x01D874AC LDR V8, [X31 + 0x10]
	0x01D874B0 MOV X1, X31
	0x01D874B4 ADD X31, X31, 0x40
	0x01D874B8 B 0x3C3EC04
	0x01D874BC BL 0x1C16F20
	0x01D874C0 STR D8, [X31 - 0x10]!
	0x01D874C4 STR X30, [X31 + 0x8]
	0x01D874C8 LDR X0, [X0 + 0x28]
	0x01D874CC CBZ X0, 0x1D8750C
	0x01D874D0 MOV X1, X31
	0x01D874D4 MOV V8.16B, V0.16B
	0x01D874D8 BL 0x3C32E90
	0x01D874DC CBZ X0, 0x1D8750C
	0x01D874E0 FMOV S1, 1
	0x01D874E4 LDR X30, [X31 + 0x8]
	0x01D874E8 FMIN S2, S8, S1
	0x01D874EC FCMP S8, 0x0
	0x01D874F0 FSUB S2, S1, S2
	0x01D874F4 FMOV S0, W31
	0x01D874F8 FCSEL S2, S2, S1, PL
	0x01D874FC FMOV S1, W31
	0x01D87500 MOV X1, X31
	0x01D87504 LDR V8, [X31], #0x10
	0x01D87508 B 0x3C3EC04
	0x01D8750C BL 0x1C16F20
	0x01D87510 STP X30, X21, [X31 - 0x20]!
	0x01D87514 STP X20, X19, [X31 + 0x10]
	0x01D87518 ADRP X20, 0x2651000
	0x01D8751C ADRP X21, 0x236E000
	0x01D87520 LDRB W8, [X20 + 0x9A1]
	0x01D87524 LDR X21, [X21 + 0x7B0]
	0x01D87528 MOV X19, X0
	0x01D8752C TBNZ X8, 0x0, 0x1D87544
	0x01D87530 ADRP X0, 0x236E000
	0x01D87534 LDR X0, [X0 + 0x7B0]
	0x01D87538 BL 0x1C16CF4
	0x01D8753C MOVZ W8, 0x1
	0x01D87540 STRB W8, [X20 + 0x9A1]
	0x01D87544 LDR X0, [X21]
	0x01D87548 MOV W1, W31
	0x01D8754C BL 0x1C16D6C
	0x01D87550 MOVZ W8, 0x3F800000
	0x01D87554 STR X0, [X19 + 0x58]
	0x01D87558 STR W8, [X19 + 0x6C]
	0x01D8755C MOV X0, X19
	0x01D87560 LDP X20, X19, [X31 + 0x10]
	0x01D87564 MOV X1, X31
	0x01D87568 LDP X30, X21, [X31], #0x20
	0x01D8756C B 0x3C36C30
	0x01D87570 STR X30, [X31 - 0x10]!
	0x01D87574 LDR X0, [X0 + 0x28]
	0x01D87578 CBZ X0, 0x1D87598
	0x01D8757C MOV X1, X31
	0x01D87580 BL 0x3C32ECC
	0x01D87584 CBZ X0, 0x1D87598
	0x01D87588 MOV W1, W31
	0x01D8758C MOV X2, X31
	0x01D87590 LDR X30, [X31], #0x10
	0x01D87594 B 0x3C357B4
	0x01D87598 BL 0x1C16F20
	0x01D8759C STR X30, [X31 - 0x40]!
	0x01D875A0 STP X24, X23, [X31 + 0x10]
	0x01D875A4 STP X22, X21, [X31 + 0x20]
	0x01D875A8 STP X20, X19, [X31 + 0x30]
	0x01D875AC ADRP X21, 0x2651000
	0x01D875B0 LDRB W8, [X21 + 0x9A3]
	0x01D875B4 MOV X19, X1
	0x01D875B8 MOV X20, X0
	0x01D875BC TBNZ X8, 0x0, 0x1D875D4
	0x01D875C0 ADRP X0, 0x236D000
	0x01D875C4 LDR X0, [X0 + 0xE68]
	0x01D875C8 BL 0x1C16CF4
	0x01D875CC MOVZ W8, 0x1
	0x01D875D0 STRB W8, [X21 + 0x9A3]
	0x01D875D4 ADRP X24, 0x236D000
	0x01D875D8 LDR X21, [X20 + 0x70]!
	0x01D875DC LDR X24, [X24 + 0xE68]
	0x01D875E0 MOV X0, X21
	0x01D875E4 MOV X1, X19
	0x01D875E8 MOV X2, X31
	0x01D875EC BL 0x33C0FDC
	0x01D875F0 CBZ X0, 0x1D87610
	0x01D875F4 LDR X23, [X24]
	0x01D875F8 MOV X22, X0
	0x01D875FC MOV X1, X23
	0x01D87600 BL 0x1C16E00
	0x01D87604 MOV X1, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2652000
	008 Move W8, [X20+2453]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0x236E000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move X0, 0x2370000
	018 Move X0, [X0+2376]
	019 Call 0x1C17CF4
	020 Move X0, 0x2370000
	021 Move X0, [X0+2384]
	022 Call 0x1C17CF4
	023 Move X0, 0x2370000
	024 Move X0, [X0+2392]
	025 Call 0x1C17CF4
	026 Move X0, 0x2370000
	027 Move X0, [X0+2400]
	028 Call 0x1C17CF4
	029 Move X0, 0x2370000
	030 Move X0, [X0+2408]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+2453], W8
	034 Move X23, [X19+72]
	035 Compare X23, 0
	036 JumpIfEqual {174}
	037 Move X22, 0x236E000
	038 Move X22, [X22+3696]
	039 Move X21, 0x2370000
	040 Move X20, [X23+32]
	041 Move X0, [X22]
	042 Move X21, [X21+2408]
	043 Call 0x1C17F10
	044 Move X2, [X21]
	045 Move X1, X19
	046 Move X3, X31
	047 Move X21, X0
	048 Call Action..ctor, X0, X1, X2
	049 Move X0, X20
	050 Move X1, X21
	051 Move X2, X31
	052 Call Delegate.Remove, X0, X1
	053 Move X1, [X22]
	054 Compare X0, 0
	055 JumpIfEqual {61}
	056 Move X8, [X0]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move [X23+32], X0
	059 Move X8, [X0]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move [X23+32], X0
	062 Move X23, [X19+80]
	063 Compare X23, 0
	064 JumpIfEqual {174}
	065 Move X21, 0x2370000
	066 Move X20, [X23+32]
	067 Move X21, [X21+2376]
	068 Move X0, X1
	069 Call 0x1C17F10
	070 Move X2, [X21]
	071 Move X1, X19
	072 Move X3, X31
	073 Move X21, X0
	074 Call Action..ctor, X0, X1, X2
	075 Move X0, X20
	076 Move X1, X21
	077 Move X2, X31
	078 Call Delegate.Remove, X0, X1
	079 Move X1, [X22]
	080 Compare X0, 0
	081 JumpIfEqual {87}
	082 Move X8, [X0]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move [X23+32], X0
	085 Move X8, [X0]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move [X23+32], X0
	088 Move X23, [X19+88]
	089 Compare X23, 0
	090 JumpIfEqual {174}
	091 Move X21, 0x2370000
	092 Move X20, [X23+32]
	093 Move X21, [X21+2392]
	094 Move X0, X1
	095 Call 0x1C17F10
	096 Move X2, [X21]
	097 Move X1, X19
	098 Move X3, X31
	099 Move X21, X0
	100 Call Action..ctor, X0, X1, X2
	101 Move X0, X20
	102 Move X1, X21
	103 Move X2, X31
	104 Call Delegate.Remove, X0, X1
	105 Move X1, [X22]
	106 Compare X0, 0
	107 JumpIfEqual {113}
	108 Move X8, [X0]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move [X23+32], X0
	111 Move X8, [X0]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move [X23+32], X0
	114 Move X23, [X19+96]
	115 Compare X23, 0
	116 JumpIfEqual {174}
	117 Move X21, 0x2370000
	118 Move X20, [X23+32]
	119 Move X21, [X21+2400]
	120 Move X0, X1
	121 Call 0x1C17F10
	122 Move X2, [X21]
	123 Move X1, X19
	124 Move X3, X31
	125 Move X21, X0
	126 Call Action..ctor, X0, X1, X2
	127 Move X0, X20
	128 Move X1, X21
	129 Move X2, X31
	130 Call Delegate.Remove, X0, X1
	131 Move X1, [X22]
	132 Compare X0, 0
	133 JumpIfEqual {139}
	134 Move X8, [X0]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move [X23+32], X0
	137 Move X8, [X0]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move [X23+32], X0
	140 Move X23, [X19+112]
	141 Compare X23, 0
	142 JumpIfEqual {174}
	143 Move X21, 0x2370000
	144 Move X20, [X23+32]
	145 Move X21, [X21+2384]
	146 Move X0, X1
	147 Call 0x1C17F10
	148 Move X2, [X21]
	149 Move X1, X19
	150 Move X3, X31
	151 Move X21, X0
	152 Call Action..ctor, X0, X1, X2
	153 Move X0, X20
	154 Move X1, X21
	155 Move X2, X31
	156 Call Delegate.Remove, X0, X1
	157 Compare X0, 0
	158 JumpIfEqual {166}
	159 Move X1, [X22]
	160 Move X8, [X0]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move [X23+32], X0
	163 Move X8, [X0]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Call 0x1C181E0
	166 Move [X23+32], X0
	167 Move X20, [X31+32]
	168 Move X19, [X31+40]
	169 Move X22, [X31+16]
	170 Move X21, [X31+24]
	171 Move X30, [X31+48]
	172 Move X23, [X31+56]
	173 Return 
	174 Call 0x1C17F20

Method: System.Void Setup(System.String id, System.String name, AnimalCompany.FriendshipState friendshipState, System.Boolean inRoom, System.Boolean isOnline)

Disassembly:
	0x01D80074 LDR X23, [X23 + 0x580]
	0x01D80078 MOV X19, X0
	0x01D8007C TBNZ X8, 0x0, 0x1D8013C
	0x01D80080 ADRP X0, 0x2376000
	0x01D80084 LDR X0, [X0 + 0x578]
	0x01D80088 BL 0x1C16CF4
	0x01D8008C ADRP X0, 0x2376000
	0x01D80090 LDR X0, [X0 + 0x5D0]
	0x01D80094 BL 0x1C16CF4
	0x01D80098 ADRP X0, 0x2376000
	0x01D8009C LDR X0, [X0 + 0x5D8]
	0x01D800A0 BL 0x1C16CF4
	0x01D800A4 ADRP X0, 0x2376000
	0x01D800A8 LDR X0, [X0 + 0x5E8]
	0x01D800AC BL 0x1C16CF4
	0x01D800B0 ADRP X0, 0x2376000
	0x01D800B4 LDR X0, [X0 + 0x5F0]
	0x01D800B8 BL 0x1C16CF4
	0x01D800BC ADRP X0, 0x2376000
	0x01D800C0 LDR X0, [X0 + 0x5F8]
	0x01D800C4 BL 0x1C16CF4
	0x01D800C8 ADRP X0, 0x2376000
	0x01D800CC LDR X0, [X0 + 0x600]
	0x01D800D0 BL 0x1C16CF4
	0x01D800D4 ADRP X0, 0x2373000
	0x01D800D8 LDR X0, [X0 + 0xE00]
	0x01D800DC BL 0x1C16CF4
	0x01D800E0 ADRP X0, 0x2376000
	0x01D800E4 LDR X0, [X0 + 0x648]
	0x01D800E8 BL 0x1C16CF4
	0x01D800EC ADRP X0, 0x2376000
	0x01D800F0 LDR X0, [X0 + 0x650]
	0x01D800F4 BL 0x1C16CF4
	0x01D800F8 ADRP X0, 0x2373000
	0x01D800FC LDR X0, [X0 + 0xE18]
	0x01D80100 BL 0x1C16CF4
	0x01D80104 ADRP X0, 0x2376000
	0x01D80108 LDR X0, [X0 + 0x658]
	0x01D8010C BL 0x1C16CF4
	0x01D80110 ADRP X0, 0x2376000
	0x01D80114 LDR X0, [X0 + 0x660]
	0x01D80118 BL 0x1C16CF4
	0x01D8011C ADRP X0, 0x2376000
	0x01D80120 LDR X0, [X0 + 0x668]
	0x01D80124 BL 0x1C16CF4
	0x01D80128 ADRP X0, 0x2376000
	0x01D8012C LDR X0, [X0 + 0x580]
	0x01D80130 BL 0x1C16CF4
	0x01D80134 MOVZ W8, 0x1
	0x01D80138 STRB W8, [X21 + 0x97E]
	0x01D8013C LDR X0, [X19 + 0x38]
	0x01D80140 LDR X1, [X20]
	0x01D80144 BL 0x21B44BC
	0x01D80148 LDR X8, [X23]
	0x01D8014C MOV X20, X0
	0x01D80150 LDR W9, [X8 + 0xE0]
	0x01D80154 CBNZ W9, 0x1D80164
	0x01D80158 MOV X0, X8
	0x01D8015C BL 0x1C16DFC
	0x01D80160 LDR X8, [X23]
	0x01D80164 LDR X9, [X8 + 0xB8]
	0x01D80168 ADRP X24, 0x2376000
	0x01D8016C LDR X21, [X9 + 0x48]
	0x01D80170 LDR X24, [X24 + 0x5D8]
	0x01D80174 CBNZ X21, 0x1D801CC
	0x01D80178 LDR W9, [X8 + 0xE0]
	0x01D8017C CBNZ W9, 0x1D8018C
	0x01D80180 MOV X0, X8
	0x01D80184 BL 0x1C16DFC
	0x01D80188 LDR X8, [X23]
	0x01D8018C ADRP X9, 0x2376000
	0x01D80190 LDR X8, [X8 + 0xB8]
	0x01D80194 LDR X9, [X9 + 0x5F0]
	0x01D80198 LDR X22, [X8]
	0x01D8019C LDR X0, [X9]
	0x01D801A0 BL 0x1C16F10
	0x01D801A4 ADRP X8, 0x2376000
	0x01D801A8 LDR X8, [X8 + 0x658]
	0x01D801AC MOV X1, X22
	0x01D801B0 MOV X3, X31
	0x01D801B4 MOV X21, X0
	0x01D801B8 LDR X2, [X8]
	0x01D801BC BL 0x2D30578
	0x01D801C0 LDR X8, [X23]
	0x01D801C4 LDR X8, [X8 + 0xB8]
	0x01D801C8 STR X21, [X8 + 0x48]
	0x01D801CC LDR X2, [X24]
	0x01D801D0 MOV X0, X20
	0x01D801D4 MOV X1, X21
	0x01D801D8 BL 0x21CF224
	0x01D801DC LDR X8, [X23]
	0x01D801E0 MOV X20, X0
	0x01D801E4 LDR W9, [X8 + 0xE0]
	0x01D801E8 CBNZ W9, 0x1D801F8
	0x01D801EC MOV X0, X8
	0x01D801F0 BL 0x1C16DFC
	0x01D801F4 LDR X8, [X23]
	0x01D801F8 LDR X9, [X8 + 0xB8]
	0x01D801FC ADRP X24, 0x2376000
	0x01D80200 LDR X21, [X9 + 0x50]
	0x01D80204 LDR X24, [X24 + 0x5E8]
	0x01D80208 CBNZ X21, 0x1D80260
	0x01D8020C LDR W9, [X8 + 0xE0]
	0x01D80210 CBNZ W9, 0x1D80220
	0x01D80214 MOV X0, X8
	0x01D80218 BL 0x1C16DFC
	0x01D8021C LDR X8, [X23]
	0x01D80220 ADRP X9, 0x2376000
	0x01D80224 LDR X8, [X8 + 0xB8]
	0x01D80228 LDR X9, [X9 + 0x5F8]
	0x01D8022C LDR X22, [X8]
	0x01D80230 LDR X0, [X9]
	0x01D80234 BL 0x1C16F10
	0x01D80238 ADRP X8, 0x2376000
	0x01D8023C LDR X8, [X8 + 0x660]
	0x01D80240 MOV X1, X22
	0x01D80244 MOV X3, X31
	0x01D80248 MOV X21, X0
	0x01D8024C LDR X2, [X8]
	0x01D80250 BL 0x2D2F428
	0x01D80254 LDR X8, [X23]
	0x01D80258 LDR X8, [X8 + 0xB8]
	0x01D8025C STR X21, [X8 + 0x50]
	0x01D80260 LDR X2, [X24]
	0x01D80264 MOV X0, X20
	0x01D80268 MOV X1, X21
	0x01D8026C BL 0x21DA490
	0x01D80270 LDR X8, [X23]
	0x01D80274 MOV X20, X0
	0x01D80278 LDR W9, [X8 + 0xE0]
	0x01D8027C CBNZ W9, 0x1D8028C
	0x01D80280 MOV X0, X8
	0x01D80284 BL 0x1C16DFC
	0x01D80288 LDR X8, [X23]
	0x01D8028C LDR X9, [X8 + 0xB8]
	0x01D80290 ADRP X24, 0x2376000
	0x01D80294 LDR X21, [X9 + 0x58]
	0x01D80298 LDR X24, [X24 + 0x5D0]
	0x01D8029C CBNZ X21, 0x1D802F4
	0x01D802A0 LDR W9, [X8 + 0xE0]
	0x01D802A4 CBNZ W9, 0x1D802B4
	0x01D802A8 MOV X0, X8
	0x01D802AC BL 0x1C16DFC
	0x01D802B0 LDR X8, [X23]
	0x01D802B4 ADRP X9, 0x2376000
	0x01D802B8 LDR X8, [X8 + 0xB8]
	0x01D802BC LDR X9, [X9 + 0x600]
	0x01D802C0 LDR X22, [X8]
	0x01D802C4 LDR X0, [X9]
	0x01D802C8 BL 0x1C16F10
	0x01D802CC ADRP X8, 0x2376000
	0x01D802D0 LDR X8, [X8 + 0x668]
	0x01D802D4 MOV X1, X22
	0x01D802D8 MOV X3, X31
	0x01D802DC MOV X21, X0
	0x01D802E0 LDR X2, [X8]
	0x01D802E4 BL 0x2D30578
	0x01D802E8 LDR X8, [X23]
	0x01D802EC LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Move X0, [X0+40]
	008 Move [X19+120], X1
	009 Move [X19+128], W3
	010 Compare X0, 0
	011 JumpIfEqual {194}
	012 Move X8, [X0]
	013 Move X1, X2
	014 Move W20, W5
	015 Move W21, W4
	016 Move X9, [X8+1368]
	017 Move X8, [X8+1376]
	018 Move W22, W3
	019 Move X2, X8
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move X0, [X19+64]
	022 Compare X0, 0
	023 JumpIfEqual {194}
	024 Move W1, W31
	025 Move X2, X31
	026 Call GameObject.SetActive, X0, X1
	027 Move X0, [X19+72]
	028 Compare X0, 0
	029 JumpIfEqual {194}
	030 Move X1, X31
	031 Call Component.get_gameObject, X0
	032 Compare X0, 0
	033 JumpIfEqual {194}
	034 Move W1, W31
	035 Move X2, X31
	036 Call GameObject.SetActive, X0, X1
	037 Move X0, [X19+48]
	038 Compare X0, 0
	039 JumpIfEqual {194}
	040 Move X1, X31
	041 Call Component.get_gameObject, X0
	042 Compare X0, 0
	043 JumpIfEqual {194}
	044 Move W1, W31
	045 Move X2, X31
	046 Call GameObject.SetActive, X0, X1
	047 Move X0, [X19+56]
	048 Compare X0, 0
	049 JumpIfEqual {194}
	050 Move X1, X31
	051 Call Component.get_gameObject, X0
	052 Compare X0, 0
	053 JumpIfEqual {194}
	054 Move W1, W31
	055 Move X2, X31
	056 Call GameObject.SetActive, X0, X1
	057 Move X0, [X19+80]
	058 Compare X0, 0
	059 JumpIfEqual {194}
	060 Move X1, X31
	061 Call Component.get_gameObject, X0
	062 Compare X0, 0
	063 JumpIfEqual {194}
	064 Move W1, W31
	065 Move X2, X31
	066 Call GameObject.SetActive, X0, X1
	067 Move X0, [X19+88]
	068 Compare X0, 0
	069 JumpIfEqual {194}
	070 Move X1, X31
	071 Call Component.get_gameObject, X0
	072 Compare X0, 0
	073 JumpIfEqual {194}
	074 Move W1, W31
	075 Move X2, X31
	076 Call GameObject.SetActive, X0, X1
	077 Move X0, [X19+112]
	078 Compare X0, 0
	079 JumpIfEqual {194}
	080 Move X1, X31
	081 Call Component.get_gameObject, X0
	082 Compare X0, 0
	083 JumpIfEqual {194}
	084 Move W1, W31
	085 Move X2, X31
	086 Call GameObject.SetActive, X0, X1
	087 Move X0, [X19+104]
	088 Compare X0, 0
	089 JumpIfEqual {194}
	090 Move X1, X31
	091 Call Component.get_gameObject, X0
	092 Compare X0, 0
	093 JumpIfEqual {194}
	094 Move W1, W31
	095 Move X2, X31
	096 Call GameObject.SetActive, X0, X1
	097 Move X0, [X19+96]
	098 Compare X0, 0
	099 JumpIfEqual {194}
	100 Move X1, X31
	101 Call Component.get_gameObject, X0
	102 Compare X0, 0
	103 JumpIfEqual {194}
	104 Move W1, W31
	105 Move X2, X31
	106 Call GameObject.SetActive, X0, X1
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X9, -19210240
	109 Move W8, W22
	110 Add X9, X9, 2328
	111 NotImplemented "Instruction ADR not yet implemented."
	112 Move W11, [X9]
	113 Add X10, X10, X11
	114 CallNoReturn X10
	115 Move X0, [X19+64]
	116 Compare X0, 0
	117 JumpIfEqual {194}
	118 And W1, W21, 1
	119 Move X2, X31
	120 Call GameObject.SetActive, X0, X1
	121 Move X0, [X19+72]
	122 Compare X0, 0
	123 JumpIfEqual {194}
	124 Move X1, X31
	125 Call Component.get_gameObject, X0
	126 Compare X0, 0
	127 JumpIfEqual {194}
	128 NotImplemented "Instruction BIC not yet implemented."
	129 And W1, W8, 1
	130 Move X2, X31
	131 Call GameObject.SetActive, X0, X1
	132 Move X0, [X19+48]
	133 Compare X0, 0
	134 JumpIfEqual {194}
	135 Move X1, X31
	136 Call Component.get_gameObject, X0
	137 Compare X0, 0
	138 JumpIfEqual {194}
	139 And W1, W20, 1
	140 Move X2, X31
	141 Call GameObject.SetActive, X0, X1
	142 Move X0, [X19+56]
	143 Compare X0, 0
	144 JumpIfEqual {194}
	145 Move X1, X31
	146 Call Component.get_gameObject, X0
	147 Compare X0, 0
	148 JumpIfEqual {194}
	149 NotImplemented "Instruction ORN not yet implemented."
	150 And W1, W8, 1
	151 Move X2, X31
	152 Call GameObject.SetActive, X0, X1
	153 Move X0, [X19+96]
	154 Compare X0, 0
	155 JumpIfNotEqual {181}
	156 Move X20, [X31+32]
	157 Move X19, [X31+40]
	158 Move X22, [X31+16]
	159 Move X21, [X31+24]
	160 Move X30, [X31+48]
	161 Return 
	162 Move X0, [X19+112]
	163 Compare X0, 0
	164 JumpIfNotEqual {181}
	165 Move X0, [X19+80]
	166 Compare X0, 0
	167 JumpIfEqual {194}
	168 Move X1, X31
	169 Call Component.get_gameObject, X0
	170 Compare X0, 0
	171 JumpIfEqual {194}
	172 Move W1, 1
	173 Move X2, X31
	174 Call GameObject.SetActive, X0, X1
	175 Move X0, [X19+88]
	176 Compare X0, 0
	177 JumpIfNotEqual {181}
	178 Move X0, [X19+104]
	179 Compare X0, 0
	180 JumpIfEqual {194}
	181 Move X1, X31
	182 Call Component.get_gameObject, X0
	183 Compare X0, 0
	184 JumpIfEqual {194}
	185 Move X20, [X31+32]
	186 Move X19, [X31+40]
	187 Move X22, [X31+16]
	188 Move X21, [X31+24]
	189 Move W1, 1
	190 Move X2, X31
	191 Move X30, [X31+48]
	192 Call GameObject.SetActive, X0, X1
	193 Return 
	194 Call 0x1C17F20

Method: System.Void SetInRoom(System.Boolean inRoom)

Disassembly:
	0x01D81F38 BL 0x1C16CF4
	0x01D81F3C ADRP X0, 0x2372000
	0x01D81F40 LDR X0, [X0 + 0xAC8]
	0x01D81F44 BL 0x1C16CF4
	0x01D81F48 MOVZ W8, 0x1
	0x01D81F4C STRB W8, [X20 + 0x958]
	0x01D81F50 LDR X0, [X21]
	0x01D81F54 MOVZ W1, 0x1
	0x01D81F58 BL 0x1C16D6C
	0x01D81F5C CBZ X0, 0x1D81FAC
	0x01D81F60 LDR W8, [X0 + 0x18]
	0x01D81F64 CBZ W8, 0x1D81FB0
	0x01D81F68 ADRP X20, 0x2372000
	0x01D81F6C LDR X20, [X20 + 0x648]
	0x01D81F70 MOV X1, X31
	0x01D81F74 STR X19, [X0 + 0x20]
	0x01D81F78 BL 0x1D3DA7C
	0x01D81F7C LDR X8, [X20]
	0x01D81F80 MOV X19, X0
	0x01D81F84 LDR W9, [X8 + 0xE0]
	0x01D81F88 CBNZ W9, 0x1D81F94
	0x01D81F8C MOV X0, X8
	0x01D81F90 BL 0x1C16DFC
	0x01D81F94 MOV X0, X19
	0x01D81F98 LDP X20, X19, [X31 + 0x10]
	0x01D81F9C MOV W1, W31
	0x01D81FA0 MOV X2, X31
	0x01D81FA4 LDP X30, X21, [X31], #0x20
	0x01D81FA8 B 0x1D35D6C
	0x01D81FAC BL 0x1C16F20
	0x01D81FB0 BL 0x1C16F28
	0x01D81FB4 SUB X31, X31, 0xB0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+128]
	006 Compare W8, 0
	007 JumpIfEqual {13}
	008 Move X20, [X31+16]
	009 Move X19, [X31+24]
	010 Move X30, [X31+32]
	011 Move X21, [X31+40]
	012 Return 
	013 Move X19, X0
	014 Move X0, [X0+64]
	015 Compare X0, 0
	016 JumpIfEqual {45}
	017 Move W20, W1
	018 And W1, W1, 1
	019 Move X2, X31
	020 Call GameObject.SetActive, X0, X1
	021 Move X0, [X19+72]
	022 Compare X0, 0
	023 JumpIfEqual {45}
	024 Move X1, X31
	025 Call Component.get_gameObject, X0
	026 Move X21, X0
	027 Move TEMP, X20
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {32}
	031 Move W0, W31
	032 Move X0, X19
	033 Call FriendView.get_isOnline, X0
	034 Compare X21, 0
	035 JumpIfEqual {45}
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 And W1, W0, 1
	039 Move X0, X21
	040 Move X2, X31
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Call GameObject.SetActive, X0, X1
	044 Return 
	045 Call 0x1C17F20

Method: System.Void SetupAvatarView(AnimalCompany.UserAvatarState avatarState)

Disassembly:
	0x01D802F0 STR X21, [X8 + 0x58]
	0x01D802F4 LDR X2, [X24]
	0x01D802F8 MOV X0, X20
	0x01D802FC MOV X1, X21
	0x01D80300 BL 0x21C9B5C
	0x01D80304 CBZ X0, 0x1D80510

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {8}
	005 Move X30, [X31+16]
	006 Call AvatarHeadView.Setup, X0, X1
	007 Return 
	008 Call 0x1C17F20

Method: System.Void UpdateVoice(System.Single voice)

Disassembly:
	0x01D8567C SUBS X9, X9, 0x1
	0x01D85680 ADD X10, X10, 0x10
	0x01D85684 B.NE 0x1D85670
	0x01D85688 MOV X0, X20
	0x01D8568C MOV W2, W31
	0x01D85690 BL 0x1C5C788
	0x01D85694 B 0x1D856A4
	0x01D85698 LDRSW X9, [X10]
	0x01D8569C ADD X8, X8, X9, 0x4, LSL
	0x01D856A0 ADD X0, X8, 0x138
	0x01D856A4 LDP X8, X1, [X0]
	0x01D856A8 MOV X0, X20

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+32]
	003 Compare X8, 0
	004 JumpIfEqual {13}
	005 Move S1, 1
	006 NotImplemented "Instruction FCMP not yet implemented."
	007 NotImplemented "Instruction FMIN not yet implemented."
	008 Move S1, W31
	009 NotImplemented "Instruction FCSEL not yet implemented."
	010 Move [X8+64], S0
	011 Move X30, [X31+16]
	012 Return 
	013 Call 0x1C17F20

Method: System.Void HandleJoinPressed()

Disassembly:
	0x01D87608 CBNZ X0, 0x1D87614
	0x01D8760C B 0x1D87640
	0x01D87610 MOV X1, X31
	0x01D87614 MOV X0, X20
	0x01D87618 MOV X2, X21
	0x01D8761C BL 0x1C24138
	0x01D87620 CMP X21, X0
	0x01D87624 MOV X21, X0

ISIL:
	001 Move X8, [X0+136]
	002 Compare X8, 0
	003 JumpIfEqual {9}
	004 Move X1, [X0+120]
	005 Move X3, [X8+24]
	006 Move X0, [X8+64]
	007 Move X2, [X8+40]
	008 CallNoReturn X3
	009 Return 

Method: System.Void HandleAcceptPressed()

Disassembly:
	0x01D87628 B.NE 0x1D875E0
	0x01D8762C LDP X20, X19, [X31 + 0x30]
	0x01D87630 LDP X22, X21, [X31 + 0x20]
	0x01D87634 LDP X24, X23, [X31 + 0x10]
	0x01D87638 LDR X30, [X31], #0x40
	0x01D8763C RET
	0x01D87640 MOV X0, X22
	0x01D87644 MOV X1, X23

ISIL:
	001 Move X8, [X0+144]
	002 Compare X8, 0
	003 JumpIfEqual {9}
	004 Move X1, [X0+120]
	005 Move X3, [X8+24]
	006 Move X0, [X8+64]
	007 Move X2, [X8+40]
	008 CallNoReturn X3
	009 Return 

Method: System.Void HandleDeclinePressed()

Disassembly:
	0x01D87648 BL 0x1C171E0
	0x01D8764C STR X30, [X31 - 0x40]!
	0x01D87650 STP X24, X23, [X31 + 0x10]
	0x01D87654 STP X22, X21, [X31 + 0x20]
	0x01D87658 STP X20, X19, [X31 + 0x30]
	0x01D8765C ADRP X21, 0x2651000
	0x01D87660 LDRB W8, [X21 + 0x9A5]
	0x01D87664 MOV X19, X1

ISIL:
	001 Move X8, [X0+152]
	002 Compare X8, 0
	003 JumpIfEqual {9}
	004 Move X1, [X0+120]
	005 Move X3, [X8+24]
	006 Move X0, [X8+64]
	007 Move X2, [X8+40]
	008 CallNoReturn X3
	009 Return 

Method: System.Void HandleDeletePressed()

Disassembly:
	0x01D87668 MOV X20, X0
	0x01D8766C TBNZ X8, 0x0, 0x1D87684
	0x01D87670 ADRP X0, 0x236D000
	0x01D87674 LDR X0, [X0 + 0xE68]
	0x01D87678 BL 0x1C16CF4
	0x01D8767C MOVZ W8, 0x1
	0x01D87680 STRB W8, [X21 + 0x9A5]
	0x01D87684 ADRP X24, 0x236D000

ISIL:
	001 Move X8, [X0+160]
	002 Compare X8, 0
	003 JumpIfEqual {9}
	004 Move X1, [X0+120]
	005 Move X3, [X8+24]
	006 Move X0, [X8+64]
	007 Move X2, [X8+40]
	008 CallNoReturn X3
	009 Return 

Method: System.Void HandleCancelPressed()

Disassembly:
	0x01D87688 LDR X21, [X20 + 0x78]!
	0x01D8768C LDR X24, [X24 + 0xE68]
	0x01D87690 MOV X0, X21
	0x01D87694 MOV X1, X19
	0x01D87698 MOV X2, X31
	0x01D8769C BL 0x33C0FDC
	0x01D876A0 CBZ X0, 0x1D876C0
	0x01D876A4 LDR X23, [X24]

ISIL:
	001 Move X8, [X0+168]
	002 Compare X8, 0
	003 JumpIfEqual {9}
	004 Move X1, [X0+120]
	005 Move X3, [X8+24]
	006 Move X0, [X8+64]
	007 Move X2, [X8+40]
	008 CallNoReturn X3
	009 Return 

Method: System.Void .ctor()

Disassembly:
	0x01D876A8 MOV X22, X0
	0x01D876AC MOV X1, X23

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

