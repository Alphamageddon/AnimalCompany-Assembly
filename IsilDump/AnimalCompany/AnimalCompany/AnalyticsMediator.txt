Type: AnimalCompany.AnalyticsMediator

Method: System.Void Awake()

Disassembly:
	0x01CD0858 MOV X19, X0
	0x01CD085C TBNZ X8, 0x0, 0x1CD0874
	0x01CD0860 ADRP X0, 0x227F000
	0x01CD0864 LDR X0, [X0 + 0x9F0]
	0x01CD0868 BL 0x1B6E7F0
	0x01CD086C MOVZ W8, 0x1
	0x01CD0870 STRB W8, [X20 + 0x5CA]
	0x01CD0874 LDR X0, [X21]
	0x01CD0878 BL 0x1B6EA0C
	0x01CD087C MOV X1, X31
	0x01CD0880 MOV X20, X0
	0x01CD0884 BL 0x32276F8
	0x01CD0888 STR W31, [X20 + 0x10]
	0x01CD088C STR X19, [X20 + 0x20]
	0x01CD0890 MOV X0, X20
	0x01CD0894 LDP X20, X19, [X31 + 0x10]
	0x01CD0898 LDP X30, X21, [X31], #0x20
	0x01CD089C RET
	0x01CD08A0 STR X30, [X31 - 0x20]!
	0x01CD08A4 STP X20, X19, [X31 + 0x10]
	0x01CD08A8 MOV W19, W1
	0x01CD08AC MOV X1, X31
	0x01CD08B0 MOV X20, X0
	0x01CD08B4 BL 0x32276F8
	0x01CD08B8 STR W19, [X20 + 0x10]
	0x01CD08BC LDP X20, X19, [X31 + 0x10]
	0x01CD08C0 LDR X30, [X31], #0x20
	0x01CD08C4 RET
	0x01CD08C8 STP X30, X21, [X31 - 0x20]!
	0x01CD08CC STP X20, X19, [X31 + 0x10]
	0x01CD08D0 ADRP X21, 0x2553000
	0x01CD08D4 ADRP X20, 0x227E000
	0x01CD08D8 LDRB W8, [X21 + 0x5CB]
	0x01CD08DC LDR X20, [X20 + 0x2E8]
	0x01CD08E0 MOV X19, X0
	0x01CD08E4 TBNZ X8, 0x0, 0x1CD08FC
	0x01CD08E8 ADRP X0, 0x227E000
	0x01CD08EC LDR X0, [X0 + 0x2E8]
	0x01CD08F0 BL 0x1B6E7F0
	0x01CD08F4 MOVZ W8, 0x1
	0x01CD08F8 STRB W8, [X21 + 0x5CB]
	0x01CD08FC ADRP X8, 0xFFFFFFFFFEDDD000
	0x01CD0900 LDR V0, [X8 + 0x40]
	0x01CD0904 STR D0, [X19 + 0x20]
	0x01CD0908 LDR X0, [X20]
	0x01CD090C BL 0x1B6EA0C
	0x01CD0910 FMOV S0, 1
	0x01CD0914 MOV X1, X31
	0x01CD0918 MOV X20, X0
	0x01CD091C BL 0x3AA273C
	0x01CD0920 STR X20, [X19 + 0x30]
	0x01CD0924 MOV X0, X19
	0x01CD0928 LDP X20, X19, [X31 + 0x10]
	0x01CD092C MOV X1, X31
	0x01CD0930 LDP X30, X21, [X31], #0x20
	0x01CD0934 B 0x3A9EEE4
	0x01CD0938 RET
	0x01CD093C SUB X31, X31, 0x50
	0x01CD0940 STR X30, [X31 + 0x10]
	0x01CD0944 STP X24, X23, [X31 + 0x20]
	0x01CD0948 STP X22, X21, [X31 + 0x30]
	0x01CD094C STP X20, X19, [X31 + 0x40]
	0x01CD0950 ADRP X20, 0x2553000
	0x01CD0954 LDRB W8, [X20 + 0x5CC]
	0x01CD0958 MOV X19, X0
	0x01CD095C TBNZ X8, 0x0, 0x1CD09C8
	0x01CD0960 ADRP X0, 0x227F000
	0x01CD0964 LDR X0, [X0 + 0x998]
	0x01CD0968 BL 0x1B6E7F0
	0x01CD096C ADRP X0, 0x227D000
	0x01CD0970 LDR X0, [X0 + 0x5F8]
	0x01CD0974 BL 0x1B6E7F0
	0x01CD0978 ADRP X0, 0x227D000
	0x01CD097C LDR X0, [X0 + 0x860]
	0x01CD0980 BL 0x1B6E7F0
	0x01CD0984 ADRP X0, 0x227D000
	0x01CD0988 LDR X0, [X0 + 0x478]
	0x01CD098C BL 0x1B6E7F0
	0x01CD0990 ADRP X0, 0x227F000
	0x01CD0994 LDR X0, [X0 + 0x9A0]
	0x01CD0998 BL 0x1B6E7F0
	0x01CD099C ADRP X0, 0x227F000
	0x01CD09A0 LDR X0, [X0 + 0x9F8]
	0x01CD09A4 BL 0x1B6E7F0
	0x01CD09A8 ADRP X0, 0x227F000
	0x01CD09AC LDR X0, [X0 + 0xA00]
	0x01CD09B0 BL 0x1B6E7F0
	0x01CD09B4 ADRP X0, 0x227D000
	0x01CD09B8 LDR X0, [X0 + 0x818]
	0x01CD09BC BL 0x1B6E7F0
	0x01CD09C0 MOVZ W8, 0x1
	0x01CD09C4 STRB W8, [X20 + 0x5CC]
	0x01CD09C8 LDR W23, [X19 + 0x10]
	0x01CD09CC CMP W23, 0x1
	0x01CD09D0 B.HI 0x1CD0C40
	0x01CD09D4 LDR X20, [X19 + 0x20]
	0x01CD09D8 MOVN W8, 0x0
	0x01CD09DC STR W8, [X19 + 0x10]
	0x01CD09E0 CBZ X20, 0x1CD0C64
	0x01CD09E4 ADRP X8, 0x227F000
	0x01CD09E8 LDR X8, [X8 + 0x998]
	0x01CD09EC LDR X21, [X20 + 0x38]
	0x01CD09F0 LDR X0, [X8]
	0x01CD09F4 LDR W8, [X0 + 0xE0]
	0x01CD09F8 CBNZ W8, 0x1CD0A00
	0x01CD09FC BL 0x1B6E8F8
	0x01CD0A00 MOV X0, X31
	0x01CD0A04 BL 0x31CADF8
	0x01CD0A08 MOV X1, X0
	0x01CD0A0C MOV X0, X21
	0x01CD0A10 MOV X2, X31
	0x01CD0A14 BL 0x31CC66C
	0x01CD0A18 ADRP X21, 0x227F000
	0x01CD0A1C LDR X21, [X21 + 0x9A0]
	0x01CD0A20 STR X0, [X31 + 0x18]
	0x01CD0A24 LDR X8, [X21]
	0x01CD0A28 LDR W9, [X8 + 0xE0]
	0x01CD0A2C CBNZ W9, 0x1CD0A38
	0x01CD0A30 MOV X0, X8
	0x01CD0A34 BL 0x1B6E8F8
	0x01CD0A38 ADD X0, X31, 0x18
	0x01CD0A3C MOV X1, X31
	0x01CD0A40 BL 0x31FD98C
	0x01CD0A44 FCMP D0, 0x0
	0x01CD0A48 B.LS 0x1CD0BD0
	0x01CD0A4C ADRP X8, 0x227D000
	0x01CD0A50 LDR X8, [X8 + 0x860]
	0x01CD0A54 MOVZ W1, 0x4
	0x01CD0A58 LDR X0, [X8]
	0x01CD0A5C BL 0x1B6E868
	0x01CD0A60 LDR X8, [X21]
	0x01CD0A64 MOV X21, X0
	0x01CD0A68 LDR W9, [X8 + 0xE0]
	0x01CD0A6C CBNZ W9, 0x1CD0A78
	0x01CD0A70 MOV X0, X8
	0x01CD0A74 BL 0x1B6E8F8
	0x01CD0A78 ADD X0, X31, 0x18
	0x01CD0A7C MOV X1, X31
	0x01CD0A80 BL 0x31FD7D8
	0x01CD0A84 ADRP X24, 0x227D000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x2554000
	012 Move X21, 0x227E000
	013 Move W8, [X20+1474]
	014 Move X21, [X21+1256]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {43}
	020 Move X0, 0x2280000
	021 Move X0, [X0+2312]
	022 Call 0x1B6F7F0
	023 Move X0, 0x227E000
	024 Move X0, [X0+2464]
	025 Call 0x1B6F7F0
	026 Move X0, 0x227E000
	027 Move X0, [X0+1256]
	028 Call 0x1B6F7F0
	029 Move X0, 0x227E000
	030 Move X0, [X0+2976]
	031 Call 0x1B6F7F0
	032 Move X0, 0x227E000
	033 Move X0, [X0+2960]
	034 Call 0x1B6F7F0
	035 Move X0, 0x227E000
	036 Move X0, [X0+3000]
	037 Call 0x1B6F7F0
	038 Move X0, 0x2280000
	039 Move X0, [X0+2320]
	040 Call 0x1B6F7F0
	041 Move W8, 1
	042 Move [X20+1474], W8
	043 Move X0, [X21]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1B6F8F8
	048 Move X22, 0x2554000
	049 Move W8, [X22+1091]
	050 Compare W8, 0
	051 JumpIfNotEqual {57}
	052 Move X0, 0x227E000
	053 Move X0, [X0+1256]
	054 Call 0x1B6F7F0
	055 Move W8, 1
	056 Move [X22+1091], W8
	057 Move X0, [X21]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {63}
	061 Call 0x1B6F8F8
	062 Move X0, [X21]
	063 Move X8, [X0+184]
	064 Move X8, [X8]
	065 Compare X8, 0
	066 JumpIfEqual {165}
	067 Move X8, [X8+112]
	068 Compare X8, 0
	069 JumpIfEqual {165}
	070 Move X20, [X8+80]
	071 Compare X20, 0
	072 JumpIfEqual {165}
	073 Move X27, 0x227E000
	074 Move X26, 0x2280000
	075 Move X25, 0x227E000
	076 Move X24, 0x2280000
	077 Move X23, 0x227E000
	078 Move X27, [X27+2464]
	079 Move X26, [X26+2320]
	080 Move X25, [X25+2960]
	081 Move X24, [X24+2312]
	082 Move X23, [X23+2976]
	083 Move W1, 46
	084 Move X0, X20
	085 Move X2, X31
	086 Call String.LastIndexOf, X0, X1
	087 Move W2, W0
	088 Move X0, X20
	089 Move W1, W31
	090 Move X3, X31
	091 Call String.Substring, X0, X1, X2
	092 Move X8, [X27]
	093 Move X20, X0
	094 Move W9, [X8+224]
	095 Compare W9, 0
	096 JumpIfNotEqual {99}
	097 Move X0, X8
	098 Call 0x1B6F8F8
	099 Move X0, [X26]
	100 Move X1, X20
	101 Move X2, X31
	102 Call Analytics.Register, X0, X1
	103 Move X0, [X25]
	104 Call 0x1B6FA0C
	105 Move X2, [X24]
	106 Move X1, X19
	107 Move X3, X31
	108 Move X20, X0
	109 Call ObserverDelegate..ctor, X0, X1, X2
	110 Move X0, [X23]
	111 Move W1, 1
	112 Move W23, 1
	113 Call 0x1B6F868
	114 Move W8, [X22+1091]
	115 Move X19, X0
	116 Compare W8, 0
	117 JumpIfNotEqual {122}
	118 Move X0, 0x227E000
	119 Move X0, [X0+1256]
	120 Call 0x1B6F7F0
	121 Move [X22+1091], W23
	122 Move X0, [X21]
	123 Move W8, [X0+224]
	124 Compare W8, 0
	125 JumpIfNotEqual {128}
	126 Call 0x1B6F8F8
	127 Move X0, [X21]
	128 Move X8, [X0+184]
	129 Move X8, [X8]
	130 Compare X8, 0
	131 JumpIfEqual {165}
	132 Move X8, [X8+168]
	133 Compare X8, 0
	134 JumpIfEqual {165}
	135 Compare X19, 0
	136 JumpIfEqual {165}
	137 Move X21, [X8+80]
	138 Compare X21, 0
	139 JumpIfEqual {146}
	140 Move X8, [X19]
	141 Move X0, X21
	142 Move X1, [X8+64]
	143 Call 0x1B6F8FC
	144 Compare X0, 0
	145 JumpIfEqual {167}
	146 Move W8, [X19+24]
	147 Compare W8, 0
	148 JumpIfEqual {166}
	149 Move [X19+32], X21
	150 Move X0, X20
	151 Move X1, X19
	152 Move X20, [X31+64]
	153 Move X19, [X31+72]
	154 Move X22, [X31+48]
	155 Move X21, [X31+56]
	156 Move X24, [X31+32]
	157 Move X23, [X31+40]
	158 Move X26, [X31+16]
	159 Move X25, [X31+24]
	160 Move X2, X31
	161 Move X30, [X31+80]
	162 Move X27, [X31+88]
	163 Call App.RegisterObserver, X0, X1
	164 Return 
	165 Call 0x1B6FA1C
	166 Call 0x1B6FA24
	167 Call 0x1B6FA40
	168 Move X1, X31
	169 Call 0x1B6F8E8

Method: System.Void OnDestroy()

Disassembly:
	0x01CD0A88 LDR X24, [X24 + 0x5F8]
	0x01CD0A8C STR W0, [X31 + 0xC]
	0x01CD0A90 ADD X1, X31, 0xC
	0x01CD0A94 LDR X8, [X24]
	0x01CD0A98 MOV X0, X8
	0x01CD0A9C BL 0x1B6E900
	0x01CD0AA0 CBZ X21, 0x1CD0C64
	0x01CD0AA4 MOV X22, X0
	0x01CD0AA8 CBZ X0, 0x1CD0AC0
	0x01CD0AAC LDR X8, [X21]
	0x01CD0AB0 MOV X0, X22
	0x01CD0AB4 LDR X1, [X8 + 0x40]
	0x01CD0AB8 BL 0x1B6E8FC
	0x01CD0ABC CBZ X0, 0x1CD0C68
	0x01CD0AC0 LDR W8, [X21 + 0x18]
	0x01CD0AC4 CBZ W8, 0x1CD0C60
	0x01CD0AC8 ADD X0, X31, 0x18
	0x01CD0ACC MOV X1, X31
	0x01CD0AD0 STR X22, [X21 + 0x20]
	0x01CD0AD4 BL 0x31FD804
	0x01CD0AD8 LDR X8, [X24]
	0x01CD0ADC STR W0, [X31 + 0x8]
	0x01CD0AE0 ADD X1, X31, 0x8
	0x01CD0AE4 MOV X0, X8
	0x01CD0AE8 BL 0x1B6E900
	0x01CD0AEC MOV X22, X0
	0x01CD0AF0 CBZ X0, 0x1CD0B08
	0x01CD0AF4 LDR X8, [X21]
	0x01CD0AF8 MOV X0, X22
	0x01CD0AFC LDR X1, [X8 + 0x40]
	0x01CD0B00 BL 0x1B6E8FC
	0x01CD0B04 CBZ X0, 0x1CD0C68
	0x01CD0B08 LDR W8, [X21 + 0x18]
	0x01CD0B0C CMP W8, 0x1
	0x01CD0B10 B.LS 0x1CD0C60
	0x01CD0B14 ADD X0, X31, 0x18
	0x01CD0B18 MOV X1, X31
	0x01CD0B1C STR X22, [X21 + 0x28]
	0x01CD0B20 BL 0x31FD894
	0x01CD0B24 LDR X8, [X24]
	0x01CD0B28 STR W0, [X31 + 0x4]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x2554000
	008 Move X23, 0x227E000
	009 Move X20, 0x2280000
	010 Move X21, 0x227E000
	011 Move W8, [X22+1475]
	012 Move X23, [X23+2960]
	013 Move X20, [X20+2312]
	014 Move X21, [X21+1256]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x2280000
	021 Move X0, [X0+2312]
	022 Call 0x1B6F7F0
	023 Move X0, 0x227E000
	024 Move X0, [X0+1256]
	025 Call 0x1B6F7F0
	026 Move X0, 0x227E000
	027 Move X0, [X0+2960]
	028 Call 0x1B6F7F0
	029 Move W8, 1
	030 Move [X22+1475], W8
	031 Move X0, [X23]
	032 Call 0x1B6FA0C
	033 Move X2, [X20]
	034 Move X1, X19
	035 Move X3, X31
	036 Move X20, X0
	037 Call ObserverDelegate..ctor, X0, X1, X2
	038 Move X0, [X21]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1B6F8F8
	043 Move X0, X20
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X1, X31
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Call App.DeregisterObserver, X0
	052 Return 

Method: System.Void HandleAnalyticsAppStateChanged(SpatialSys.ObservableState.StateChangedEventArgs args)

Disassembly:
	0x01CD0B2C ADD X1, X31, 0x4
	0x01CD0B30 MOV X0, X8
	0x01CD0B34 BL 0x1B6E900
	0x01CD0B38 MOV X22, X0
	0x01CD0B3C CBZ X0, 0x1CD0B54
	0x01CD0B40 LDR X8, [X21]
	0x01CD0B44 MOV X0, X22
	0x01CD0B48 LDR X1, [X8 + 0x40]
	0x01CD0B4C BL 0x1B6E8FC
	0x01CD0B50 CBZ X0, 0x1CD0C68
	0x01CD0B54 LDR W8, [X21 + 0x18]
	0x01CD0B58 CMP W8, 0x2
	0x01CD0B5C B.LS 0x1CD0C60
	0x01CD0B60 ADD X0, X31, 0x18
	0x01CD0B64 MOV X1, X31
	0x01CD0B68 STR X22, [X21 + 0x30]
	0x01CD0B6C BL 0x31FD8DC
	0x01CD0B70 LDR X8, [X24]
	0x01CD0B74 STR W0, [X31]
	0x01CD0B78 ADD X1, X31, 0x0
	0x01CD0B7C MOV X0, X8
	0x01CD0B80 BL 0x1B6E900
	0x01CD0B84 MOV X22, X0
	0x01CD0B88 CBZ X0, 0x1CD0BA0
	0x01CD0B8C LDR X8, [X21]
	0x01CD0B90 MOV X0, X22
	0x01CD0B94 LDR X1, [X8 + 0x40]
	0x01CD0B98 BL 0x1B6E8FC
	0x01CD0B9C CBZ X0, 0x1CD0C68
	0x01CD0BA0 LDR W8, [X21 + 0x18]
	0x01CD0BA4 CMP W8, 0x3
	0x01CD0BA8 B.LS 0x1CD0C60
	0x01CD0BAC STR X22, [X21 + 0x38]
	0x01CD0BB0 ADRP X8, 0x227F000
	0x01CD0BB4 LDR X8, [X8 + 0xA00]
	0x01CD0BB8 MOV X1, X21
	0x01CD0BBC MOV X2, X31
	0x01CD0BC0 LDR X0, [X8]
	0x01CD0BC4 BL 0x3090AA4
	0x01CD0BC8 MOV X21, X0
	0x01CD0BCC B 0x1CD0BE4
	0x01CD0BD0 ADRP X8, 0x227F000
	0x01CD0BD4 LDR X8, [X8 + 0x9F8]
	0x01CD0BD8 MOV X0, X20
	0x01CD0BDC LDR X21, [X8]
	0x01CD0BE0 BL 0x1CD0160
	0x01CD0BE4 ADRP X8, 0x227D000
	0x01CD0BE8 LDR X8, [X8 + 0x478]
	0x01CD0BEC LDR X22, [X20 + 0x28]
	0x01CD0BF0 LDR X0, [X8]
	0x01CD0BF4 LDR W8, [X0 + 0xE0]
	0x01CD0BF8 CBNZ W8, 0x1CD0C00
	0x01CD0BFC BL 0x1B6E8F8
	0x01CD0C00 MOV X0, X22
	0x01CD0C04 MOV X1, X31
	0x01CD0C08 MOV X2, X31
	0x01CD0C0C BL 0x3A9D6EC
	0x01CD0C10 TBZ X0, 0x0, 0x1CD0C30
	0x01CD0C14 LDR X0, [X20 + 0x28]
	0x01CD0C18 CBZ X0, 0x1CD0C64
	0x01CD0C1C LDR X8, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2554000
	005 Move X19, 0x227E000
	006 Move W8, [X20+1476]
	007 Move X19, [X19+1256]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0x227E000
	013 Move X0, [X0+2464]
	014 Call 0x1B6F7F0
	015 Move X0, 0x227E000
	016 Move X0, [X0+1256]
	017 Call 0x1B6F7F0
	018 Move X0, 0x227E000
	019 Move X0, [X0+3000]
	020 Call 0x1B6F7F0
	021 Move X0, 0x2280000
	022 Move X0, [X0+2328]
	023 Call 0x1B6F7F0
	024 Move W8, 1
	025 Move [X20+1476], W8
	026 Move X0, [X19]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1B6F8F8
	031 Move X20, 0x2554000
	032 Move W8, [X20+1091]
	033 Compare W8, 0
	034 JumpIfNotEqual {40}
	035 Move X0, 0x227E000
	036 Move X0, [X0+1256]
	037 Call 0x1B6F7F0
	038 Move W8, 1
	039 Move [X20+1091], W8
	040 Move X0, [X19]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1B6F8F8
	045 Move X0, [X19]
	046 Move X8, [X0+184]
	047 Move X8, [X8]
	048 Compare X8, 0
	049 JumpIfEqual {74}
	050 Move X8, [X8+168]
	051 Compare X8, 0
	052 JumpIfEqual {74}
	053 Move X8, [X8+80]
	054 Compare X8, 0
	055 JumpIfEqual {74}
	056 Move X9, 0x227E000
	057 Move X9, [X9+2464]
	058 Move X20, 0x2280000
	059 Move X19, [X8+80]
	060 Move X0, [X9]
	061 Move W9, [X0+224]
	062 Move X20, [X20+2328]
	063 Compare W9, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1B6F8F8
	066 Move X0, [X20]
	067 Move X1, X19
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X2, X31
	071 Move X30, [X31+32]
	072 Call Analytics.Register, X0, X1
	073 Return 
	074 Call 0x1B6FA1C

Method: System.Void .ctor()

Disassembly:
	0x01CD0C20 MOV X1, X21
	0x01CD0C24 LDR X9, [X8 + 0x558]

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

