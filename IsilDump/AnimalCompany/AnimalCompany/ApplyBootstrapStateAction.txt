Type: AnimalCompany.ApplyBootstrapStateAction

Method: System.Void .ctor(AnimalCompany.API.AnimalCompanyAPI/ClientBootstrapResponse bootstrapResponse)

Disassembly:
	0x01D37D74 LDP X22, X21, [X31 + 0x10]
	0x01D37D78 MOV X1, X31
	0x01D37D7C LDR X8, [X8]
	0x01D37D80 STR X8, [X19 + 0x40]
	0x01D37D84 LDP X20, X19, [X31 + 0x20]
	0x01D37D88 LDP X30, X23, [X31], #0x30
	0x01D37D8C B 0x3C36C30
	0x01D37D90 STR X30, [X31 - 0x20]!
	0x01D37D94 STP X20, X19, [X31 + 0x10]
	0x01D37D98 ADRP X19, 0x26A1000
	0x01D37D9C ADRP X20, 0x23BC000
	0x01D37DA0 LDRB W8, [X19 + 0x6F9]
	0x01D37DA4 LDR X20, [X20 + 0xA60]
	0x01D37DA8 TBNZ X8, 0x0, 0x1D37DC0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move V1, [X19+16]
	009 Move V0, [X19+32]
	010 Move V2, [X19]
	011 Move [X20+56], V0
	012 Move [X20+40], V1
	013 Move [X20+24], V2
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Return 

Method: System.Void Execute(AnimalCompany.AppState state)

Disassembly:
	0x01D37DAC ADRP X0, 0x23BC000
	0x01D37DB0 LDR X0, [X0 + 0xA60]
	0x01D37DB4 BL 0x1C16CF4
	0x01D37DB8 MOVZ W8, 0x1
	0x01D37DBC STRB W8, [X19 + 0x6F9]
	0x01D37DC0 LDR X0, [X20]
	0x01D37DC4 BL 0x1C16F10
	0x01D37DC8 MOV X1, X31
	0x01D37DCC MOV X19, X0
	0x01D37DD0 BL 0x33BDD8C
	0x01D37DD4 LDR X8, [X20]
	0x01D37DD8 LDR X8, [X8 + 0xB8]
	0x01D37DDC STR X19, [X8]
	0x01D37DE0 LDP X20, X19, [X31 + 0x10]
	0x01D37DE4 LDR X30, [X31], #0x20
	0x01D37DE8 RET
	0x01D37DEC MOV X1, X31
	0x01D37DF0 B 0x33BDD8C
	0x01D37DF4 B 0x1D37DF8
	0x01D37DF8 SUB X31, X31, 0x130
	0x01D37DFC STR X29, [X31 + 0xF0]
	0x01D37E00 STP X30, X23, [X31 + 0x100]
	0x01D37E04 STP X22, X21, [X31 + 0x110]
	0x01D37E08 STP X20, X19, [X31 + 0x120]
	0x01D37E0C ADRP X20, 0x26A1000
	0x01D37E10 ADRP X19, 0x23BC000
	0x01D37E14 LDRB W8, [X20 + 0x772]
	0x01D37E18 LDR X19, [X19 + 0xA68]
	0x01D37E1C TBNZ X8, 0x0, 0x1D37E58
	0x01D37E20 ADRP X0, 0x23BC000
	0x01D37E24 LDR X0, [X0 + 0xA70]
	0x01D37E28 BL 0x1C16CF4
	0x01D37E2C ADRP X0, 0x23BC000
	0x01D37E30 LDR X0, [X0 + 0xA78]
	0x01D37E34 BL 0x1C16CF4
	0x01D37E38 ADRP X0, 0x23BC000
	0x01D37E3C LDR X0, [X0 + 0xA80]
	0x01D37E40 BL 0x1C16CF4
	0x01D37E44 ADRP X0, 0x23BC000
	0x01D37E48 LDR X0, [X0 + 0xA68]
	0x01D37E4C BL 0x1C16CF4
	0x01D37E50 MOVZ W8, 0x1
	0x01D37E54 STRB W8, [X20 + 0x772]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x26A2000
	007 Move W8, [X21+1769]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x23BD000
	015 Move X0, [X0+2328]
	016 Call 0x1C17CF4
	017 Move X0, 0x23BD000
	018 Move X0, [X0+2336]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1769], W8
	022 Compare X19, 0
	023 JumpIfEqual {54}
	024 Move X0, [X19+160]
	025 Compare X0, 0
	026 JumpIfEqual {54}
	027 Move X8, 0x23BD000
	028 Move X8, [X8+2336]
	029 Move X1, [X20+48]
	030 Move X22, 0x23BD000
	031 Move X2, [X8]
	032 Move X22, [X22+2328]
	033 Call StatePrimitive`1<DateTime>.set_value, X0, X1
	034 Move X0, [X22]
	035 Move W21, [X20+64]
	036 Call 0x1C17F10
	037 Move W1, W21
	038 Move X2, X31
	039 Move X20, X0
	040 Call SetUserDailyRewardEligibilityAction..ctor, X0, X1
	041 Compare X20, 0
	042 JumpIfEqual {54}
	043 Move X8, [X20]
	044 Move X0, X20
	045 Move X1, X19
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X3, [X8+424]
	049 Move X2, [X8+432]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 CallNoReturn X3
	054 Call 0x1C17F20

