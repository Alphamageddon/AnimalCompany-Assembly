Type: AnimalCompany.NetworkedLootSpawnGroup

Method: System.Int16 get__groupID()

Disassembly:
	0x01CB22E8 CMP W8, W21, UXTB
	0x01CB22EC B.LE 0x1CB2368
	0x01CB22F0 LDR X0, [X19 + 0xA0]
	0x01CB22F4 CBZ X0, 0x1CB2374
	0x01CB22F8 LDR X2, [X23]
	0x01CB22FC MOV W1, W20
	0x01CB2300 BL 0x2E46254
	0x01CB2304 CBZ X0, 0x1CB2374
	0x01CB2308 LDR W10, [X0 + 0x1C]
	0x01CB230C LDR X8, [X0 + 0x10]
	0x01CB2310 LDR X9, [X25]
	0x01CB2314 ADD W10, W10, 0x1
	0x01CB2318 STR W10, [X0 + 0x1C]
	0x01CB231C CBZ X8, 0x1CB2374
	0x01CB2320 LDRSW X10, [X0 + 0x18]
	0x01CB2324 LDR W11, [X8 + 0x18]
	0x01CB2328 CMP W10, W11
	0x01CB232C B.CS 0x1CB2344
	0x01CB2330 ADD W9, W10, 0x1
	0x01CB2334 ADD X8, X8, X10
	0x01CB2338 STR W9, [X0 + 0x18]
	0x01CB233C STRB W21, [X8 + 0x20]
	0x01CB2340 B 0x1CB2358
	0x01CB2344 LDR X8, [X9 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 NotImplemented "Instruction LDRH not yet implemented."
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0
	010 Move X0, 0x229C000
	011 Move X0, [X0+1168]
	012 Call 0x1B6F804
	013 Call 0x1B6FA0C
	014 Move X19, X0
	015 Move X0, 0x229D000
	016 Move X0, [X0+2984]
	017 Call 0x1B6F804
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x229D000
	023 Move X0, [X0+2992]
	024 Call 0x1B6F804
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1B6F8E8

Method: System.Void set__groupID(System.Int16 value)

Disassembly:
	0x01CB2348 MOV W1, W21
	0x01CB234C LDR X8, [X8 + 0xC0]
	0x01CB2350 LDR X2, [X8 + 0x70]
	0x01CB2354 BL 0x2D907F4
	0x01CB2358 LDR X8, [X19 + 0xA8]
	0x01CB235C ADD W21, W21, 0x1
	0x01CB2360 CBNZ X8, 0x1CB22C4
	0x01CB2364 B 0x1CB2374
	0x01CB2368 LDR X9, [X19 + 0xA8]
	0x01CB236C ADD W8, W20, 0x1
	0x01CB2370 CBNZ X9, 0x1CB2200
	0x01CB2374 BL 0x1B6EA1C
	0x01CB2378 LDP X20, X19, [X31 + 0x50]
	0x01CB237C LDP X22, X21, [X31 + 0x40]
	0x01CB2380 LDP X24, X23, [X31 + 0x30]
	0x01CB2384 LDP X26, X25, [X31 + 0x20]
	0x01CB2388 LDP X28, X27, [X31 + 0x10]
	0x01CB238C LDR X30, [X31], #0x60
	0x01CB2390 RET
	0x01CB2394 SUB X31, X31, 0x70
	0x01CB2398 STR D8, [X31 + 0x40]
	0x01CB239C STR X30, [X31 + 0x48]
	0x01CB23A0 STP X22, X21, [X31 + 0x50]
	0x01CB23A4 STP X20, X19, [X31 + 0x60]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 NotImplemented "Instruction STRH not yet implemented."
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 
	010 Move X0, 0x229C000
	011 Move X0, [X0+1168]
	012 Call 0x1B6F804
	013 Call 0x1B6FA0C
	014 Move X19, X0
	015 Move X0, 0x229D000
	016 Move X0, [X0+2984]
	017 Call 0x1B6F804
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x229D000
	023 Move X0, [X0+3000]
	024 Call 0x1B6F804
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1B6F8E8

Method: Fusion.NetworkArray`1<AnimalCompany.SpawnedLoot> get__spawnedLoot()

Disassembly:
	0x01CB23A8 ADRP X20, 0x2571000
	0x01CB23AC LDRB W8, [X20 + 0x4C8]
	0x01CB23B0 MOV X19, X0
	0x01CB23B4 TBNZ X8, 0x0, 0x1CB23FC
	0x01CB23B8 ADRP X0, 0x229C000
	0x01CB23BC LDR X0, [X0 + 0xD08]
	0x01CB23C0 BL 0x1B6E7F0
	0x01CB23C4 ADRP X0, 0x229C000
	0x01CB23C8 LDR X0, [X0 + 0xD10]
	0x01CB23CC BL 0x1B6E7F0
	0x01CB23D0 ADRP X0, 0x229C000
	0x01CB23D4 LDR X0, [X0 + 0xD18]
	0x01CB23D8 BL 0x1B6E7F0
	0x01CB23DC ADRP X0, 0x229C000
	0x01CB23E0 LDR X0, [X0 + 0xD20]
	0x01CB23E4 BL 0x1B6E7F0
	0x01CB23E8 ADRP X0, 0x229C000
	0x01CB23EC LDR X0, [X0 + 0xD28]
	0x01CB23F0 BL 0x1B6E7F0
	0x01CB23F4 MOVZ W8, 0x1
	0x01CB23F8 STRB W8, [X20 + 0x4C8]
	0x01CB23FC MOVI V0.2D, 0x0
	0x01CB2400 STP V0, V0, [X31 + 0x20]
	0x01CB2404 LDR X8, [X19 + 0xA8]
	0x01CB2408 CBZ X8, 0x1CB24E0
	0x01CB240C LDR V1, [X8 + 0x40]
	0x01CB2410 FMOV S0, W31
	0x01CB2414 MOV X0, X31
	0x01CB2418 BL 0x3A98CD0
	0x01CB241C LDR X8, [X19 + 0xA8]
	0x01CB2420 CBZ X8, 0x1CB24E0
	0x01CB2424 LDR X0, [X8 + 0x38]
	0x01CB2428 CBZ X0, 0x1CB24E0
	0x01CB242C ADRP X8, 0x229C000
	0x01CB2430 LDR X8, [X8 + 0xD20]
	0x01CB2434 ADRP X21, 0x229C000
	0x01CB2438 ADRP X22, 0x229C000
	0x01CB243C ADRP X20, 0x229C000
	0x01CB2440 LDR X1, [X8]
	0x01CB2444 LDR X21, [X21 + 0xD10]
	0x01CB2448 LDR X22, [X22 + 0xD28]
	0x01CB244C LDR X20, [X20 + 0xD08]
	0x01CB2450 ADD X8, X31, 0x0
	0x01CB2454 MOV V8.16B, V0.16B
	0x01CB2458 BL 0x2ED11FC
	0x01CB245C LDP V0, V1, [X31]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2572000
	006 Move W9, [X21+1221]
	007 Move X20, X0
	008 Move X19, X8
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x229D000
	014 Move X0, [X0+3008]
	015 Call 0x1B6F7F0
	016 Move W8, 1
	017 Move [X21+1221], W8
	018 Move X20, [X20+80]
	019 Compare X20, 0
	020 JumpIfEqual {39}
	021 Move X21, 0x229D000
	022 Move X21, [X21+3008]
	023 Move X0, X31
	024 Call ReaderWriter@AnimalCompany_SpawnedLoot.GetInstance
	025 Move X3, X0
	026 Move [X19+8], X31
	027 Move [X19+16], X31
	028 Move X4, [X21]
	029 Add X1, X20, 4
	030 Move [X19], X31
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move W2, 64
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Call NetworkArray`1<SpawnedLoot>..ctor, X0, X1, X2, X3
	038 Return X0
	039 Move X0, 0x229C000
	040 Move X0, [X0+1168]
	041 Call 0x1B6F804
	042 Call 0x1B6FA0C
	043 Move X19, X0
	044 Move X0, 0x229D000
	045 Move X0, [X0+3016]
	046 Call 0x1B6F804
	047 Move X1, X0
	048 Move X0, X19
	049 Move X2, X31
	050 Call InvalidOperationException..ctor, X0, X1
	051 Move X0, 0x229D000
	052 Move X0, [X0+3024]
	053 Call 0x1B6F804
	054 Move X1, X0
	055 Move X0, X19
	056 Call 0x1B6F8E8

Method: Fusion.TickTimer get__respawnTimer()

Disassembly:
	0x01CB2460 STP V0, V1, [X31 + 0x20]
	0x01CB2464 LDR X1, [X21]
	0x01CB2468 ADD X0, X31, 0x20
	0x01CB246C BL 0x2A22344
	0x01CB2470 TBZ X0, 0x0, 0x1CB2498
	0x01CB2474 LDR V0, [X31 + 0x38]
	0x01CB2478 FSUB S8, S8, S0
	0x01CB247C FCMP S8, 0x0
	0x01CB2480 B.HI 0x1CB2464
	0x01CB2484 LDR X1, [X20]
	0x01CB2488 LDR X19, [X31 + 0x30]
	0x01CB248C ADD X0, X31, 0x20
	0x01CB2490 BL 0x2A22340
	0x01CB2494 B 0x1CB24C4
	0x01CB2498 LDR X1, [X20]
	0x01CB249C ADD X0, X31, 0x20
	0x01CB24A0 BL 0x2A22340
	0x01CB24A4 LDR X8, [X19 + 0xA8]
	0x01CB24A8 CBZ X8, 0x1CB24E0
	0x01CB24AC LDR X0, [X8 + 0x38]
	0x01CB24B0 CBZ X0, 0x1CB24E0
	0x01CB24B4 LDR X2, [X22]
	0x01CB24B8 MOV W1, W31
	0x01CB24BC BL 0x2ED02E0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move W0, [X8+772]
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0
	010 Move X0, 0x229C000
	011 Move X0, [X0+1168]
	012 Call 0x1B6F804
	013 Call 0x1B6FA0C
	014 Move X19, X0
	015 Move X0, 0x229D000
	016 Move X0, [X0+3032]
	017 Call 0x1B6F804
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x229D000
	023 Move X0, [X0+3040]
	024 Call 0x1B6F804
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1B6F8E8

Method: System.Void set__respawnTimer(Fusion.TickTimer value)

Disassembly:
	0x01CB24C0 MOV X19, X0
	0x01CB24C4 MOV X0, X19
	0x01CB24C8 LDP X20, X19, [X31 + 0x60]
	0x01CB24CC LDP X22, X21, [X31 + 0x50]
	0x01CB24D0 LDR X30, [X31 + 0x48]
	0x01CB24D4 LDR V8, [X31 + 0x40]
	0x01CB24D8 ADD X31, X31, 0x70
	0x01CB24DC RET
	0x01CB24E0 BL 0x1B6EA1C
	0x01CB24E4 CMP W1, 0x1
	0x01CB24E8 MOV X21, X0
	0x01CB24EC B.NE 0x1CB2520
	0x01CB24F0 MOV X0, X21
	0x01CB24F4 BL 0x3D19840
	0x01CB24F8 LDR X20, [X0]
	0x01CB24FC BL 0x3D19850
	0x01CB2500 ADRP X8, 0x229C000
	0x01CB2504 LDR X8, [X8 + 0xD08]
	0x01CB2508 ADD X0, X31, 0x20
	0x01CB250C LDR X1, [X8]
	0x01CB2510 BL 0x2A22340
	0x01CB2514 CBZ X20, 0x1CB24A4
	0x01CB2518 MOV X0, X20
	0x01CB251C BL 0x1B6EA14

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move [X8+772], W1
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 
	010 Move X0, 0x229C000
	011 Move X0, [X0+1168]
	012 Call 0x1B6F804
	013 Call 0x1B6FA0C
	014 Move X19, X0
	015 Move X0, 0x229D000
	016 Move X0, [X0+3032]
	017 Call 0x1B6F804
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x229D000
	023 Move X0, [X0+3048]
	024 Call 0x1B6F804
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1B6F8E8

Method: System.Void Spawned()

Disassembly:
	0x01CB2520 MOV X20, X31
	0x01CB2524 B 0x1CB252C
	0x01CB2528 MOV X21, X0
	0x01CB252C ADRP X8, 0x229C000
	0x01CB2530 LDR X8, [X8 + 0xD08]
	0x01CB2534 LDR X1, [X8]
	0x01CB2538 ADD X0, X31, 0x20
	0x01CB253C BL 0x2A22340
	0x01CB2540 CBNZ X20, 0x1CB254C
	0x01CB2544 MOV X0, X21
	0x01CB2548 BL 0x1C8418C
	0x01CB254C MOV X0, X20
	0x01CB2550 BL 0x1B6EA14
	0x01CB2554 BL 0x18F46A8
	0x01CB2558 STR X30, [X31 - 0x40]!
	0x01CB255C STP X24, X23, [X31 + 0x10]
	0x01CB2560 STP X22, X21, [X31 + 0x20]
	0x01CB2564 STP X20, X19, [X31 + 0x30]
	0x01CB2568 ADRP X23, 0x2571000
	0x01CB256C ADRP X24, 0x229C000
	0x01CB2570 ADRP X20, 0x229C000
	0x01CB2574 ADRP X22, 0x229C000
	0x01CB2578 ADRP X21, 0x229C000
	0x01CB257C LDRB W8, [X23 + 0x4CA]
	0x01CB2580 LDR X24, [X24 + 0xD30]
	0x01CB2584 LDR X20, [X20 + 0xD38]
	0x01CB2588 LDR X22, [X22 + 0xD40]
	0x01CB258C LDR X21, [X21 + 0xD48]
	0x01CB2590 MOV X19, X0
	0x01CB2594 TBNZ X8, 0x0, 0x1CB25D0
	0x01CB2598 ADRP X0, 0x229C000
	0x01CB259C LDR X0, [X0 + 0xD38]
	0x01CB25A0 BL 0x1B6E7F0
	0x01CB25A4 ADRP X0, 0x229C000
	0x01CB25A8 LDR X0, [X0 + 0xD30]
	0x01CB25AC BL 0x1B6E7F0
	0x01CB25B0 ADRP X0, 0x229C000
	0x01CB25B4 LDR X0, [X0 + 0xD48]
	0x01CB25B8 BL 0x1B6E7F0
	0x01CB25BC ADRP X0, 0x229C000
	0x01CB25C0 LDR X0, [X0 + 0xD40]
	0x01CB25C4 BL 0x1B6E7F0
	0x01CB25C8 MOVZ W8, 0x1
	0x01CB25CC STRB W8, [X23 + 0x4CA]
	0x01CB25D0 LDR X0, [X24]
	0x01CB25D4 BL 0x1B6EA0C
	0x01CB25D8 LDR X1, [X20]
	0x01CB25DC MOV X20, X0
	0x01CB25E0 BL 0x2BA1564
	0x01CB25E4 STR X20, [X19 + 0x98]
	0x01CB25E8 LDR X0, [X22]
	0x01CB25EC BL 0x1B6EA0C
	0x01CB25F0 LDR X1, [X21]
	0x01CB25F4 MOV X20, X0
	0x01CB25F8 BL 0x2E45D4C
	0x01CB25FC STR X20, [X19 + 0xA0]
	0x01CB2600 MOV X0, X19
	0x01CB2604 LDP X20, X19, [X31 + 0x30]
	0x01CB2608 LDP X22, X21, [X31 + 0x20]
	0x01CB260C LDP X24, X23, [X31 + 0x10]
	0x01CB2610 MOV X1, X31
	0x01CB2614 LDR X30, [X31], #0x40
	0x01CB2618 B 0x1D661D8
	0x01CB261C SUB X31, X31, 0x70
	0x01CB2620 STR X30, [X31 + 0x40]
	0x01CB2624 STP X22, X21, [X31 + 0x50]
	0x01CB2628 STP X20, X19, [X31 + 0x60]
	0x01CB262C ADRP X21, 0x2571000
	0x01CB2630 ADRP X20, 0x229C000
	0x01CB2634 LDRB W8, [X21 + 0x4CB]
	0x01CB2638 LDR X20, [X20 + 0x1C0]
	0x01CB263C MOV X19, X0
	0x01CB2640 TBNZ X8, 0x0, 0x1CB2670
	0x01CB2644 ADRP X0, 0x229C000
	0x01CB2648 LDR X0, [X0 + 0xD50]
	0x01CB264C BL 0x1B6E7F0
	0x01CB2650 ADRP X0, 0x229C000
	0x01CB2654 LDR X0, [X0 + 0x1C0]
	0x01CB2658 BL 0x1B6E7F0
	0x01CB265C ADRP X0, 0x229C000
	0x01CB2660 LDR X0, [X0 + 0xD58]
	0x01CB2664 BL 0x1B6E7F0
	0x01CB2668 MOVZ W8, 0x1
	0x01CB266C STRB W8, [X21 + 0x4CB]
	0x01CB2670 LDRH W1, [X19 + 0x80]
	0x01CB2674 ADRP X22, 0x229C000
	0x01CB2678 ADRP X21, 0x229C000
	0x01CB267C LDR X22, [X22 + 0xD58]
	0x01CB2680 LDR X21, [X21 + 0xD50]
	0x01CB2684 MOV X0, X19
	0x01CB2688 BL 0x1CB1348
	0x01CB268C ADD X8, X31, 0x20
	0x01CB2690 MOV X0, X19
	0x01CB2694 BL 0x1CB13A8
	0x01CB2698 LDR V0, [X31 + 0x2]
	0x01CB269C LDR X8, [X31 + 0x30]
	0x01CB26A0 LDR X0, [X20]
	0x01CB26A4 STR V0, [X31]
	0x01CB26A8 STR X8, [X31 + 0x10]
	0x01CB26AC LDR W8, [X0 + 0xE0]
	0x01CB26B0 LDR X20, [X19 + 0x88]
	0x01CB26B4 CBNZ W8, 0x1CB26BC
	0x01CB26B8 BL 0x1B6E8F8
	0x01CB26BC LDR X2, [X22]
	0x01CB26C0 LDR V0, [X31]
	0x01CB26C4 LDR X8, [X31 + 0x10]
	0x01CB26C8 LDR X3, [X21]
	0x01CB26CC ADD X0, X31, 0x20
	0x01CB26D0 MOV X1, X20
	0x01CB26D4 STR V0, [X31 + 0x2]
	0x01CB26D8 STR X8, [X31 + 0x30]
	0x01CB26DC BL 0x210FBD8
	0x01CB26E0 LDR W1, [X19 + 0x90]
	0x01CB26E4 MOV X0, X19
	0x01CB26E8 BL 0x1CB14C0
	0x01CB26EC LDP X20, X19, [X31 + 0x60]
	0x01CB26F0 LDP X22, X21, [X31 + 0x50]
	0x01CB26F4 LDR X30, [X31 + 0x40]
	0x01CB26F8 ADD X31, X31, 0x70
	0x01CB26FC RET

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2572000
	007 Move W8, [X20+1222]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {45}
	013 Move X0, 0x229C000
	014 Move X0, [X0+1456]
	015 Call 0x1B6F7F0
	016 Move X0, 0x229C000
	017 Move X0, [X0+1464]
	018 Call 0x1B6F7F0
	019 Move X0, 0x229C000
	020 Move X0, [X0+1472]
	021 Call 0x1B6F7F0
	022 Move X0, 0x229D000
	023 Move X0, [X0+2848]
	024 Call 0x1B6F7F0
	025 Move X0, 0x229C000
	026 Move X0, [X0+1576]
	027 Call 0x1B6F7F0
	028 Move X0, 0x229D000
	029 Move X0, [X0+2824]
	030 Call 0x1B6F7F0
	031 Move X0, 0x229D000
	032 Move X0, [X0+3056]
	033 Call 0x1B6F7F0
	034 Move X0, 0x229D000
	035 Move X0, [X0+3064]
	036 Call 0x1B6F7F0
	037 Move X0, 0x229D000
	038 Move X0, [X0+3072]
	039 Call 0x1B6F7F0
	040 Move X0, 0x229D000
	041 Move X0, [X0+3080]
	042 Call 0x1B6F7F0
	043 Move W8, 1
	044 Move [X20+1222], W8
	045 Move X0, X19
	046 Move X1, X31
	047 Call NetworkBehaviour.Spawned, X0
	048 Move X0, [X19+64]
	049 Compare X0, 0
	050 JumpIfEqual {135}
	051 Move W8, [X0+96]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 2
	054 Compare TEMP, 2
	055 JumpIfEqual {135}
	056 Move X1, X31
	057 Call NetworkObject.get_HasStateAuthority, X0
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {135}
	062 Move X0, X19
	063 Call NetworkedLootSpawnGroup.get__groupID, X0
	064 Move X8, 0x229D000
	065 Move X8, [X8+2824]
	066 Move W20, W0
	067 Add X21, X19, 168
	068 Move X0, [X8]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1B6F8F8
	073 Move W0, W20
	074 Move X1, X21
	075 Call LootSpawnGroup.TryGetSpawnGroup, X0, X1
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {86}
	080 Move X0, X19
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X30, [X31+16]
	084 Move X21, [X31+24]
	085 Add X31, X31, 48
	086 Move X8, 0x229C000
	087 Move X8, [X8+1472]
	088 Move X0, [X8]
	089 Call 0x1B6FA0C
	090 Move X8, 0x229C000
	091 Move X8, [X8+1464]
	092 Move X20, X0
	093 Move X1, [X8]
	094 Call Dictionary`2<Object, Object>..ctor, X0
	095 Move X0, X19
	096 Call NetworkedLootSpawnGroup.get__groupID, X0
	097 Move X8, 0x229D000
	098 Move X8, [X8+2848]
	099 NotImplemented "Instruction STRH not yet implemented."
	100 Add X1, X31, 12
	101 Move X8, [X8]
	102 Move X0, X8
	103 Call 0x1B6F900
	104 Compare X20, 0
	105 JumpIfEqual {141}
	106 Move X8, 0x229D000
	107 Move X9, 0x229C000
	108 Move X8, [X8+3064]
	109 Move X9, [X9+1456]
	110 Move X2, X0
	111 Move X0, X20
	112 Move X1, [X8]
	113 Move X3, [X9]
	114 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	115 Move X8, 0x229C000
	116 Move X8, [X8+1576]
	117 Move X0, [X8]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1B6F8F8
	122 Move X8, 0x229D000
	123 Move X9, 0x229D000
	124 Move X10, 0x229D000
	125 Move X8, [X8+3072]
	126 Move X9, [X9+3080]
	127 Move X10, [X10+3056]
	128 Move W4, 56
	129 Move X0, [X8]
	130 Move X2, [X9]
	131 Move X3, [X10]
	132 Move X1, X20
	133 Move X5, X31
	134 Call Log.Error, X0, X1, X2, X3, X4
	135 Move X20, [X31+32]
	136 Move X19, [X31+40]
	137 Move X30, [X31+16]
	138 Move X21, [X31+24]
	139 Add X31, X31, 48
	140 Return 
	141 Call 0x1B6FA1C

Method: System.Void FixedUpdateNetwork()

Disassembly:
	0x01CB3080 B 0x1CB30E0
	0x01CB3084 B 0x1CB30E0
	0x01CB3088 B 0x1CB30E0
	0x01CB308C B 0x1CB30E0
	0x01CB3090 B 0x1CB30E0
	0x01CB3094 B 0x1CB30E0
	0x01CB3098 B 0x1CB30E0
	0x01CB309C B 0x1CB30E0
	0x01CB30A0 B 0x1CB30E0
	0x01CB30A4 B 0x1CB30E0
	0x01CB30A8 B 0x1CB30E0
	0x01CB30AC B 0x1CB30E0
	0x01CB30B0 B 0x1CB30E0
	0x01CB30B4 B 0x1CB30E0
	0x01CB30B8 B 0x1CB30E0
	0x01CB30BC B 0x1CB30E0
	0x01CB30C0 B 0x1CB30E0
	0x01CB30C4 B 0x1CB30E0
	0x01CB30C8 B 0x1CB30E0
	0x01CB30CC MOV X21, X0
	0x01CB30D0 MOV X26, X31
	0x01CB30D4 B 0x1CB30E4
	0x01CB30D8 B 0x1CB30E0
	0x01CB30DC B 0x1CB30E0
	0x01CB30E0 MOV X21, X0

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call NetworkBehaviour.FixedUpdateNetwork, X0
	007 Move X0, [X19+64]
	008 Compare X0, 0
	009 JumpIfEqual {34}
	010 Move W8, [X0+96]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 2
	013 Compare TEMP, 2
	014 JumpIfEqual {34}
	015 Move X1, X31
	016 Call NetworkObject.get_HasStateAuthority, X0
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {34}
	021 Move X0, X19
	022 Call NetworkedLootSpawnGroup.get__respawnTimer, X0
	023 Move [X31+8], W0
	024 Move X1, [X19+56]
	025 Add X0, X31, 8
	026 Move X2, X31
	027 Call TickTimer.ExpiredOrNotRunning, X0, X1
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {34}
	032 Move X0, X19
	033 Call NetworkedLootSpawnGroup.CheckAndSpawnLoot, X0
	034 Move X30, [X31+16]
	035 Move X19, [X31+24]
	036 Add X31, X31, 32
	037 Return 

Method: System.Void SetGroupID(System.Int16 id)

Disassembly:
	0x01CB22DC LDR X8, [X0 + 0x18]

ISIL:
	001 Call NetworkedLootSpawnGroup.set__groupID, X0, X1
	002 Return 

Method: System.Void ResetAvailableItemPoints()

Disassembly:
	0x01CB30E4 CMP W1, 0x1
	0x01CB30E8 B.NE 0x1CB3108
	0x01CB30EC MOV X0, X21
	0x01CB30F0 BL 0x3D19840
	0x01CB30F4 LDR X22, [X0]
	0x01CB30F8 BL 0x3D19850
	0x01CB30FC MOV W21, W31
	0x01CB3100 CBNZ X20, 0x1CB2F14
	0x01CB3104 B 0x1CB2F74
	0x01CB3108 MOV X22, X31
	0x01CB310C B 0x1CB3114
	0x01CB3110 MOV X21, X0
	0x01CB3114 CBZ X20, 0x1CB3178
	0x01CB3118 LDR X8, [X20]
	0x01CB311C ADRP X10, 0x229B000
	0x01CB3120 LDRH W9, [X8 + 0x12E]
	0x01CB3124 LDR X10, [X10 + 0x470]
	0x01CB3128 LDR X1, [X10]
	0x01CB312C CBZ X9, 0x1CB3150
	0x01CB3130 LDR X10, [X8 + 0xB0]
	0x01CB3134 ADD X10, X10, 0x8
	0x01CB3138 LDUR X11, [X10 - 0x8]
	0x01CB313C CMP X11, X1
	0x01CB3140 B.EQ 0x1CB3160
	0x01CB3144 SUBS X9, X9, 0x1
	0x01CB3148 ADD X10, X10, 0x10
	0x01CB314C B.NE 0x1CB3138
	0x01CB3150 MOV X0, X20
	0x01CB3154 MOV W2, W31
	0x01CB3158 BL 0x1BB4284
	0x01CB315C B 0x1CB316C
	0x01CB3160 LDRSW X9, [X10]
	0x01CB3164 ADD X8, X8, X9, 0x4, LSL
	0x01CB3168 ADD X0, X8, 0x138
	0x01CB316C LDP X8, X1, [X0]
	0x01CB3170 MOV X0, X20
	0x01CB3174 BLR X8
	0x01CB3178 CBNZ X22, 0x1CB3184
	0x01CB317C MOV X0, X21
	0x01CB3180 BL 0x1C8418C
	0x01CB3184 MOV X0, X22
	0x01CB3188 BL 0x1B6EA14
	0x01CB318C BL 0x18F46A8
	0x01CB3190 STR D12, [X31 - 0x90]!
	0x01CB3194 STP D11, D10, [X31 + 0x10]
	0x01CB3198 STP D9, D8, [X31 + 0x20]
	0x01CB319C STP X29, X30, [X31 + 0x30]
	0x01CB31A0 STP X28, X27, [X31 + 0x40]
	0x01CB31A4 STP X26, X25, [X31 + 0x50]
	0x01CB31A8 STP X24, X23, [X31 + 0x60]
	0x01CB31AC STP X22, X21, [X31 + 0x70]
	0x01CB31B0 STP X20, X19, [X31 + 0x80]
	0x01CB31B4 ADRP X22, 0x2570000
	0x01CB31B8 LDRB W8, [X22 + 0x4D4]
	0x01CB31BC MOV X20, X2
	0x01CB31C0 MOV X21, X1
	0x01CB31C4 MOV X19, X0
	0x01CB31C8 TBNZ X8, 0x0, 0x1CB3228
	0x01CB31CC ADRP X0, 0x229B000
	0x01CB31D0 LDR X0, [X0 + 0xD90]
	0x01CB31D4 BL 0x1B6E7F0
	0x01CB31D8 ADRP X0, 0x229B000
	0x01CB31DC LDR X0, [X0 + 0x470]
	0x01CB31E0 BL 0x1B6E7F0
	0x01CB31E4 ADRP X0, 0x229B000
	0x01CB31E8 LDR X0, [X0 + 0xD98]
	0x01CB31EC BL 0x1B6E7F0
	0x01CB31F0 ADRP X0, 0x229B000
	0x01CB31F4 LDR X0, [X0 + 0xDA0]
	0x01CB31F8 BL 0x1B6E7F0
	0x01CB31FC ADRP X0, 0x229B000
	0x01CB3200 LDR X0, [X0 + 0xDA8]
	0x01CB3204 BL 0x1B6E7F0
	0x01CB3208 ADRP X0, 0x229B000
	0x01CB320C LDR X0, [X0 + 0xDB0]
	0x01CB3210 BL 0x1B6E7F0
	0x01CB3214 ADRP X0, 0x229B000
	0x01CB3218 LDR X0, [X0 + 0x478]
	0x01CB321C BL 0x1B6E7F0
	0x01CB3220 MOVZ W8, 0x1
	0x01CB3224 STRB W8, [X22 + 0x4D4]
	0x01CB3228 CBZ X21, 0x1CB38CC
	0x01CB322C ADRP X10, 0x229B000
	0x01CB3230 LDR X8, [X21]
	0x01CB3234 LDR X10, [X10 + 0xD98]
	0x01CB3238 LDRH W9, [X8 + 0x12E]
	0x01CB323C LDR X1, [X10]
	0x01CB3240 CBZ X9, 0x1CB3264
	0x01CB3244 LDR X10, [X8 + 0xB0]
	0x01CB3248 ADD X10, X10, 0x8
	0x01CB324C LDUR X11, [X10 - 0x8]
	0x01CB3250 CMP X11, X1
	0x01CB3254 B.EQ 0x1CB3274
	0x01CB3258 SUBS X9, X9, 0x1
	0x01CB325C ADD X10, X10, 0x10
	0x01CB3260 B.NE 0x1CB324C
	0x01CB3264 MOV X0, X21
	0x01CB3268 MOV W2, W31
	0x01CB326C BL 0x1BB4284
	0x01CB3270 B 0x1CB3280
	0x01CB3274 LDRSW X9, [X10]
	0x01CB3278 ADD X8, X8, X9, 0x4, LSL
	0x01CB327C ADD X0, X8, 0x138
	0x01CB3280 LDP X8, X1, [X0]
	0x01CB3284 ADRP X25, 0x229B000
	0x01CB3288 ADRP X24, 0x229B000
	0x01CB328C LDR X25, [X25 + 0x478]
	0x01CB3290 LDR X24, [X24 + 0x470]
	0x01CB3294 MOV X0, X21
	0x01CB3298 BLR X8
	0x01CB329C MOV X21, X0
	0x01CB32A0 CBZ X0, 0x1CB393C
	0x01CB32A4 ADRP X27, 0x229B000
	0x01CB32A8 ADRP X28, 0x229B000
	0x01CB32AC LDR X27, [X27 + 0xDB0]
	0x01CB32B0 LDR X28, [X28 + 0xD90]
	0x01CB32B4 MOV W26, W31
	0x01CB32B8 SXTW X29, W26
	0x01CB32BC LDR X8, [X21]
	0x01CB32C0 LDR X1, [X25]
	0x01CB32C4 LDRH W9, [X8 + 0x12E]
	0x01CB32C8 CBZ X9, 0x1CB32EC
	0x01CB32CC LDR X10, [X8 + 0xB0]
	0x01CB32D0 ADD X10, X10, 0x8
	0x01CB32D4 LDUR X11, [X10 - 0x8]
	0x01CB32D8 CMP X11, X1
	0x01CB32DC B.EQ 0x1CB32FC
	0x01CB32E0 SUBS X9, X9, 0x1
	0x01CB32E4 ADD X10, X10, 0x10
	0x01CB32E8 B.NE 0x1CB32D4
	0x01CB32EC MOV X0, X21
	0x01CB32F0 MOV W2, W31
	0x01CB32F4 BL 0x1BB4284
	0x01CB32F8 B 0x1CB3308
	0x01CB32FC LDRSW X9, [X10]
	0x01CB3300 ADD X8, X8, X9, 0x4, LSL
	0x01CB3304 ADD X0, X8, 0x138
	0x01CB3308 LDP X8, X1, [X0]
	0x01CB330C MOV X0, X21
	0x01CB3310 BLR X8
	0x01CB3314 TBZ X0, 0x0, 0x1CB3528
	0x01CB3318 LDR X8, [X21]
	0x01CB331C LDR X1, [X27]
	0x01CB3320 LDRH W9, [X8 + 0x12E]
	0x01CB3324 CBZ X9, 0x1CB3348
	0x01CB3328 LDR X10, [X8 + 0xB0]
	0x01CB332C ADD X10, X10, 0x8
	0x01CB3330 LDUR X11, [X10 - 0x8]
	0x01CB3334 CMP X11, X1
	0x01CB3338 B.EQ 0x1CB3358
	0x01CB333C SUBS X9, X9, 0x1
	0x01CB3340 ADD X10, X10, 0x10
	0x01CB3344 B.NE 0x1CB3330
	0x01CB3348 MOV X0, X21
	0x01CB334C MOV W2, W31
	0x01CB3350 BL 0x1BB4284
	0x01CB3354 B 0x1CB3364
	0x01CB3358 LDRSW X9, [X10]
	0x01CB335C ADD X8, X8, X9, 0x4, LSL
	0x01CB3360 ADD X0, X8, 0x138
	0x01CB3364 LDP X8, X1, [X0]
	0x01CB3368 MOV X0, X21
	0x01CB336C BLR X8
	0x01CB3370 LDR X8, [X19 + 0x60]
	0x01CB3374 CBZ X8, 0x1CB38F8
	0x01CB3378 LDR W8, [X8 + 0x18]
	0x01CB337C CMP W26, W8
	0x01CB3380 B.GE 0x1CB3528
	0x01CB3384 MOV X22, X0
	0x01CB3388 CBZ X0, 0x1CB33E0
	0x01CB338C LDR X9, [X22]
	0x01CB3390 LDR X8, [X28]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0x2571000
	013 Move W8, [X20+1223]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {54}
	019 Move X0, 0x229C000
	020 Move X0, [X0+3272]
	021 Call 0x1B6F7F0
	022 Move X0, 0x229C000
	023 Move X0, [X0+3280]
	024 Call 0x1B6F7F0
	025 Move X0, 0x229C000
	026 Move X0, [X0+3288]
	027 Call 0x1B6F7F0
	028 Move X0, 0x229C000
	029 Move X0, [X0+3296]
	030 Call 0x1B6F7F0
	031 Move X0, 0x229C000
	032 Move X0, [X0+3304]
	033 Call 0x1B6F7F0
	034 Move X0, 0x229C000
	035 Move X0, [X0+3312]
	036 Call 0x1B6F7F0
	037 Move X0, 0x229C000
	038 Move X0, [X0+3144]
	039 Call 0x1B6F7F0
	040 Move X0, 0x229C000
	041 Move X0, [X0+3320]
	042 Call 0x1B6F7F0
	043 Move X0, 0x229C000
	044 Move X0, [X0+3168]
	045 Call 0x1B6F7F0
	046 Move X0, 0x229C000
	047 Move X0, [X0+3176]
	048 Call 0x1B6F7F0
	049 Move X0, 0x229C000
	050 Move X0, [X0+3328]
	051 Call 0x1B6F7F0
	052 Move W8, 1
	053 Move [X20+1223], W8
	054 Move X8, [X19+160]
	055 Compare X8, 0
	056 JumpIfEqual {181}
	057 Move W2, [X8+24]
	058 Move W9, [X8+28]
	059 Add W9, W9, 1
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move [X8+24], W31
	062 Move [X8+28], W9
	063 Move X0, [X8+16]
	064 Move W1, W31
	065 Move X3, X31
	066 Call Array.Clear, X0, X1, X2
	067 Move X9, [X19+168]
	068 Compare X9, 0
	069 JumpIfEqual {181}
	070 Move X23, 0x229C000
	071 Move X24, 0x229C000
	072 Move X25, 0x229C000
	073 Move X26, 0x229C000
	074 Move X27, 0x229C000
	075 Move X28, 0x229C000
	076 Move X23, [X23+3176]
	077 Move X24, [X24+3168]
	078 Move X25, [X25+3280]
	079 Move X26, [X26+3328]
	080 Move X27, [X27+3304]
	081 Move X28, [X28+3272]
	082 Move W8, W31
	083 Move X9, [X9+40]
	084 Compare X9, 0
	085 JumpIfEqual {181}
	086 Move W9, [X9+24]
	087 And W20, W8, 255
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X21, [X19+160]
	090 Compare X21, 0
	091 JumpIfEqual {181}
	092 Move W8, [X21+24]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X2, [X23]
	095 Move X0, X21
	096 Move W1, W20
	097 Call List`1<Object>.get_Item, X0, X1
	098 Compare X0, 0
	099 JumpIfEqual {181}
	100 Move W8, [X0+28]
	101 Add W8, W8, 1
	102 Move [X0+24], W31
	103 Move [X0+28], W8
	104 Move X0, [X26]
	105 Call 0x1B6FA0C
	106 Move X1, [X27]
	107 Move X22, X0
	108 Call List`1<Byte>..ctor, X0
	109 Move W10, [X21+28]
	110 Move X8, [X21+16]
	111 Move X9, [X28]
	112 Add W10, W10, 1
	113 Move [X21+28], W10
	114 Compare X8, 0
	115 JumpIfEqual {181}
	116 NotImplemented "Instruction LDRSW not yet implemented."
	117 Move W11, [X8+24]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Add W9, W10, 1
	120 Add X8, X8, X10
	121 Move [X21+24], W9
	122 Move [X8+32], X22
	123 Move X8, [X9+32]
	124 Move X0, X21
	125 Move X1, X22
	126 Move X8, [X8+192]
	127 Move X2, [X8+112]
	128 Call List`1<Object>.AddWithResize, X0, X1
	129 Move X8, [X19+168]
	130 Compare X8, 0
	131 JumpIfEqual {181}
	132 Move W21, W31
	133 Move X0, [X8+40]
	134 Compare X0, 0
	135 JumpIfEqual {181}
	136 Move X2, [X24]
	137 Move W1, W20
	138 Call List`1<Object>.get_Item, X0, X1
	139 Compare X0, 0
	140 JumpIfEqual {181}
	141 Move X8, [X0+24]
	142 Compare X8, 0
	143 JumpIfEqual {181}
	144 Move W8, [X8+24]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X0, [X19+160]
	147 Compare X0, 0
	148 JumpIfEqual {181}
	149 Move X2, [X23]
	150 Move W1, W20
	151 Call List`1<Object>.get_Item, X0, X1
	152 Compare X0, 0
	153 JumpIfEqual {181}
	154 Move W10, [X0+28]
	155 Move X8, [X0+16]
	156 Move X9, [X25]
	157 Add W10, W10, 1
	158 Move [X0+28], W10
	159 Compare X8, 0
	160 JumpIfEqual {181}
	161 NotImplemented "Instruction LDRSW not yet implemented."
	162 Move W11, [X8+24]
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Add W9, W10, 1
	165 Add X8, X8, X10
	166 Move [X0+24], W9
	167 Move [X8+32], W21
	168 Move X8, [X9+32]
	169 Move W1, W21
	170 Move X8, [X8+192]
	171 Move X2, [X8+112]
	172 Call List`1<Byte>.AddWithResize, X0, X1
	173 Move X8, [X19+168]
	174 Add W21, W21, 1
	175 Compare X8, 0
	176 JumpIfNotEqual {133}
	177 Move X9, [X19+168]
	178 Add W8, W20, 1
	179 Compare X9, 0
	180 JumpIfNotEqual {83}
	181 Call 0x1B6FA1C
	182 Move X20, [X31+80]
	183 Move X19, [X31+88]
	184 Move X22, [X31+64]
	185 Move X21, [X31+72]
	186 Move X24, [X31+48]
	187 Move X23, [X31+56]
	188 Move X26, [X31+32]
	189 Move X25, [X31+40]
	190 Move X28, [X31+16]
	191 Move X27, [X31+24]
	192 Move X30, [X31+96]
	193 Return 

Method: AnimalCompany.GameGen.Item PickRandomItem()

Disassembly:
	0x01CB3394 LDRB W11, [X9 + 0x130]
	0x01CB3398 LDRB W10, [X8 + 0x130]
	0x01CB339C CMP W11, W10
	0x01CB33A0 B.CC 0x1CB33E0
	0x01CB33A4 LDR X9, [X9 + 0xC8]
	0x01CB33A8 ADD X9, X9, X10, 0x3, LSL
	0x01CB33AC LDUR X9, [X9 - 0x8]
	0x01CB33B0 CMP X9, X8
	0x01CB33B4 B.NE 0x1CB33E0
	0x01CB33B8 MOV X0, X22
	0x01CB33BC MOV X1, X31
	0x01CB33C0 BL 0x1CD8D54
	0x01CB33C4 CMP W0, 0x4
	0x01CB33C8 B.EQ 0x1CB33E0
	0x01CB33CC MOV X0, X22
	0x01CB33D0 MOV X1, X31
	0x01CB33D4 BL 0x1CD8D54
	0x01CB33D8 CMP W0, 0x5
	0x01CB33DC B.NE 0x1CB32BC
	0x01CB33E0 LDR X8, [X19 + 0x60]
	0x01CB33E4 CBZ X8, 0x1CB3904
	0x01CB33E8 LDR W9, [X8 + 0x18]
	0x01CB33EC CMP W26, W9
	0x01CB33F0 B.CS 0x1CB38FC
	0x01CB33F4 CBZ X22, 0x1CB3908
	0x01CB33F8 ADD X8, X8, X29, 0x3, LSL
	0x01CB33FC LDR X23, [X8 + 0x20]
	0x01CB3400 MOV X0, X22
	0x01CB3404 MOV X1, X31
	0x01CB3408 BL 0x3A9B084
	0x01CB340C CBZ X0, 0x1CB3900
	0x01CB3410 MOV X1, X31
	0x01CB3414 BL 0x3AA7658
	0x01CB3418 LDRB W8, [X19 + 0x50]
	0x01CB341C MOV V8.16B, V0.16B
	0x01CB3420 MOV V9.16B, V2.16B
	0x01CB3424 CBZ W8, 0x1CB3448
	0x01CB3428 MOV X0, X19
	0x01CB342C MOV X1, X31
	0x01CB3430 BL 0x3A9B084
	0x01CB3434 CBZ X0, 0x1CB3920
	0x01CB3438 MOV X1, X31
	0x01CB343C BL 0x3AA7658
	0x01CB3440 FSUB S8, S8, S0
	0x01CB3444 FSUB S9, S9, S2
	0x01CB3448 MOV X0, X22
	0x01CB344C MOV X1, X31
	0x01CB3450 BL 0x3A9B084
	0x01CB3454 CBZ X0, 0x1CB390C
	0x01CB3458 MOV X1, X31
	0x01CB345C BL 0x3AA7658
	0x01CB3460 MOV V10.16B, V0.16B
	0x01CB3464 MOV V11.16B, V1.16B
	0x01CB3468 MOV V12.16B, V2.16B
	0x01CB346C MOV X0, X19
	0x01CB3470 MOV X1, X31
	0x01CB3474 BL 0x3A9B084
	0x01CB3478 CBZ X0, 0x1CB3910
	0x01CB347C MOV X1, X31
	0x01CB3480 BL 0x3AA7658
	0x01CB3484 LDR V3, [X19 + 0x54]
	0x01CB3488 FSUB S0, S10, S0
	0x01CB348C FSUB S1, S11, S1
	0x01CB3490 FSUB S2, S12, S2
	0x01CB3494 FMUL S0, S0, S0
	0x01CB3498 FMUL S1, S1, S1
	0x01CB349C FADD S0, S0, S1
	0x01CB34A0 FMUL S1, S2, S2
	0x01CB34A4 FADD S0, S1, S0
	0x01CB34A8 FMUL S1, S3, S3
	0x01CB34AC FCMP S0, S1
	0x01CB34B0 B.GT 0x1CB32BC
	0x01CB34B4 MOV X0, X22
	0x01CB34B8 MOV X1, X31
	0x01CB34BC BL 0x1CE4000
	0x01CB34C0 CBZ X23, 0x1CB3958
	0x01CB34C4 AND W1, W0, 0x1
	0x01CB34C8 MOV X0, X23
	0x01CB34CC BL 0x1CB4174
	0x01CB34D0 LDR X0, [X23 + 0x30]
	0x01CB34D4 CBZ X0, 0x1CB3954
	0x01CB34D8 FADD S1, S9, S9
	0x01CB34DC FADD S0, S8, S8
	0x01CB34E0 MOV X1, X31
	0x01CB34E4 BL 0x3AA6988
	0x01CB34E8 MOV X0, X23
	0x01CB34EC MOV X1, X31
	0x01CB34F0 BL 0x3A9B0C0
	0x01CB34F4 CBZ X0, 0x1CB395C
	0x01CB34F8 MOV X1, X31
	0x01CB34FC BL 0x3A9D9EC
	0x01CB3500 TBNZ X0, 0x0, 0x1CB3520
	0x01CB3504 MOV X0, X23
	0x01CB3508 MOV X1, X31
	0x01CB350C BL 0x3A9B0C0
	0x01CB3510 CBZ X0, 0x1CB3960
	0x01CB3514 MOVZ W1, 0x1
	0x01CB3518 MOV X2, X31
	0x01CB351C BL 0x3A9D9A8
	0x01CB3520 ADD W26, W26, 0x1
	0x01CB3524 B 0x1CB32B8
	0x01CB3528 MOV X22, X31
	0x01CB352C MOVZ W23, 0x5
	0x01CB3530 CBZ X21, 0x1CB358C
	0x01CB3534 LDR X8, [X21]
	0x01CB3538 LDR X1, [X24]
	0x01CB353C LDRH W9, [X8 + 0x12E]
	0x01CB3540 CBZ X9, 0x1CB3564
	0x01CB3544 LDR X10, [X8 + 0xB0]
	0x01CB3548 ADD X10, X10, 0x8
	0x01CB354C LDUR X11, [X10 - 0x8]
	0x01CB3550 CMP X11, X1
	0x01CB3554 B.EQ 0x1CB3574

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], D8
	003 Move [X31+72], X30
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X20, 0x2571000
	009 Move W8, [X20+1224]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x229C000
	016 Move X0, [X0+3336]
	017 Call 0x1B6F7F0
	018 Move X0, 0x229C000
	019 Move X0, [X0+3344]
	020 Call 0x1B6F7F0
	021 Move X0, 0x229C000
	022 Move X0, [X0+3352]
	023 Call 0x1B6F7F0
	024 Move X0, 0x229C000
	025 Move X0, [X0+3360]
	026 Call 0x1B6F7F0
	027 Move X0, 0x229C000
	028 Move X0, [X0+3368]
	029 Call 0x1B6F7F0
	030 Move W8, 1
	031 Move [X20+1224], W8
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+32], V0
	034 Move [X31+40], V0
	035 Move X8, [X19+168]
	036 Compare X8, 0
	037 JumpIfEqual {100}
	038 Move V1, [X8+64]
	039 Move S0, W31
	040 Move X0, X31
	041 Call Random.Range, V0, V1
	042 Move X8, [X19+168]
	043 Compare X8, 0
	044 JumpIfEqual {100}
	045 Move X0, [X8+56]
	046 Compare X0, 0
	047 JumpIfEqual {100}
	048 Move X8, 0x229C000
	049 Move X8, [X8+3360]
	050 Move X21, 0x229C000
	051 Move X22, 0x229C000
	052 Move X20, 0x229C000
	053 Move X1, [X8]
	054 Move X21, [X21+3344]
	055 Move X22, [X22+3368]
	056 Move X20, [X20+3336]
	057 Add X8, X31, 0
	058 Move V8, V0
	059 Call List`1<WeightedItem>.GetEnumerator, X0
	060 Move V0, [X31]
	061 Move V1, [X31+16]
	062 Move [X31+32], V0
	063 Move [X31+40], V1
	064 Move X1, [X21]
	065 Add X0, X31, 32
	066 Call Enumerator<WeightedItem>.MoveNext, X0
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {78}
	071 Move V0, [X31+56]
	072 Subtract S8, S8, S0
	073 NotImplemented "Instruction FCMP not yet implemented."
	074 Move X1, [X20]
	075 Move X19, [X31+48]
	076 Add X0, X31, 32
	077 Call Enumerator<WeightedItem>.Dispose, X0
	078 Move X1, [X20]
	079 Add X0, X31, 32
	080 Call Enumerator<WeightedItem>.Dispose, X0
	081 Move X8, [X19+168]
	082 Compare X8, 0
	083 JumpIfEqual {100}
	084 Move X0, [X8+56]
	085 Compare X0, 0
	086 JumpIfEqual {100}
	087 Move X2, [X22]
	088 Move W1, W31
	089 Call List`1<WeightedItem>.get_Item, X0, X1
	090 Move X19, X0
	091 Move X0, X19
	092 Move X20, [X31+96]
	093 Move X19, [X31+104]
	094 Move X22, [X31+80]
	095 Move X21, [X31+88]
	096 Move X30, [X31+72]
	097 Move V8, [X31+64]
	098 Add X31, X31, 112
	099 Return X0
	100 Call 0x1B6FA1C
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X21, X0
	103 Move X0, X21
	104 Call 0x3D1A840
	105 Move X20, [X0]
	106 Call 0x3D1A850
	107 Move X8, 0x229C000
	108 Move X8, [X8+3336]
	109 Add X0, X31, 32
	110 Move X1, [X8]
	111 Call Enumerator<WeightedItem>.Dispose, X0
	112 Compare X20, 0
	113 JumpIfEqual {81}
	114 Move X0, X20
	115 Call 0x1B6FA14
	116 Move X20, X31
	117 Move X21, X0
	118 Move X8, 0x229C000
	119 Move X8, [X8+3336]
	120 Move X1, [X8]
	121 Add X0, X31, 32
	122 Call Enumerator<WeightedItem>.Dispose, X0
	123 Compare X20, 0
	124 JumpIfNotEqual {127}
	125 Move X0, X21
	126 Call 0x1C8518C
	127 Move X0, X20
	128 Call 0x1B6FA14
	129 Call 0x18F56A8

Method: System.Void CheckAndSpawnLoot()

Disassembly:
	0x01CB2700 SUB X31, X31, 0x60
	0x01CB2704 STP X30, X21, [X31 + 0x40]
	0x01CB2708 STP X20, X19, [X31 + 0x50]
	0x01CB270C ADRP X21, 0x2571000
	0x01CB2710 ADRP X20, 0x229C000
	0x01CB2714 LDRB W8, [X21 + 0x4CC]
	0x01CB2718 LDR X20, [X20 + 0x1C0]
	0x01CB271C MOV X19, X0
	0x01CB2720 TBNZ X8, 0x0, 0x1CB2744
	0x01CB2724 ADRP X0, 0x229C000
	0x01CB2728 LDR X0, [X0 + 0xD60]
	0x01CB272C BL 0x1B6E7F0
	0x01CB2730 ADRP X0, 0x229C000
	0x01CB2734 LDR X0, [X0 + 0x1C0]
	0x01CB2738 BL 0x1B6E7F0
	0x01CB273C MOVZ W8, 0x1
	0x01CB2740 STRB W8, [X21 + 0x4CC]
	0x01CB2744 ADRP X21, 0x229C000
	0x01CB2748 LDR X21, [X21 + 0xD60]
	0x01CB274C MOV X0, X19
	0x01CB2750 BL 0x1CB12E8
	0x01CB2754 STRH W0, [X19 + 0x80]
	0x01CB2758 ADD X8, X31, 0x20
	0x01CB275C MOV X0, X19
	0x01CB2760 BL 0x1CB13A8
	0x01CB2764 LDR V0, [X31 + 0x2]
	0x01CB2768 LDR X8, [X31 + 0x30]
	0x01CB276C LDR X0, [X20]
	0x01CB2770 STR V0, [X31]
	0x01CB2774 STR X8, [X31 + 0x10]
	0x01CB2778 LDR W8, [X0 + 0xE0]
	0x01CB277C CBNZ W8, 0x1CB2784
	0x01CB2780 BL 0x1B6E8F8
	0x01CB2784 LDR V0, [X31]
	0x01CB2788 LDR X8, [X31 + 0x10]
	0x01CB278C LDR X2, [X21]
	0x01CB2790 ADD X1, X19, 0x88
	0x01CB2794 ADD X0, X31, 0x20
	0x01CB2798 STR V0, [X31 + 0x2]
	0x01CB279C STR X8, [X31 + 0x30]
	0x01CB27A0 BL 0x210EE6C
	0x01CB27A4 MOV X0, X19
	0x01CB27A8 BL 0x1CB1460
	0x01CB27AC STR W0, [X19 + 0x90]
	0x01CB27B0 LDP X20, X19, [X31 + 0x50]
	0x01CB27B4 LDP X30, X21, [X31 + 0x40]
	0x01CB27B8 ADD X31, X31, 0x60
	0x01CB27BC RET
	0x01CB27C0 STR D10, [X31 - 0x50]!
	0x01CB27C4 STP D9, D8, [X31 + 0x10]
	0x01CB27C8 STP X30, X23, [X31 + 0x20]
	0x01CB27CC STP X22, X21, [X31 + 0x30]
	0x01CB27D0 STP X20, X19, [X31 + 0x40]
	0x01CB27D4 ADRP X20, 0x2571000
	0x01CB27D8 LDRB W8, [X20 + 0x4CD]
	0x01CB27DC MOV X19, X0
	0x01CB27E0 TBNZ X8, 0x0, 0x1CB2834
	0x01CB27E4 ADRP X0, 0x229C000
	0x01CB27E8 LDR X0, [X0 + 0xD68]
	0x01CB27EC BL 0x1B6E7F0
	0x01CB27F0 ADRP X0, 0x229C000
	0x01CB27F4 LDR X0, [X0 + 0x808]
	0x01CB27F8 BL 0x1B6E7F0
	0x01CB27FC ADRP X0, 0x229C000
	0x01CB2800 LDR X0, [X0 + 0x3C8]
	0x01CB2804 BL 0x1B6E7F0
	0x01CB2808 ADRP X0, 0x229C000
	0x01CB280C LDR X0, [X0 + 0xD70]
	0x01CB2810 BL 0x1B6E7F0
	0x01CB2814 ADRP X0, 0x229C000
	0x01CB2818 LDR X0, [X0 + 0xD78]
	0x01CB281C BL 0x1B6E7F0
	0x01CB2820 ADRP X0, 0x229C000
	0x01CB2824 LDR X0, [X0 + 0x2A8]
	0x01CB2828 BL 0x1B6E7F0
	0x01CB282C MOVZ W8, 0x1
	0x01CB2830 STRB W8, [X20 + 0x4CD]
	0x01CB2834 MOV X0, X31
	0x01CB2838 BL 0x3AA47CC
	0x01CB283C LDR V1, [X19 + 0x28]
	0x01CB2840 ADRP X8, 0xFFFFFFFFFEDF7000
	0x01CB2844 LDR V2, [X8 + 0xD30]
	0x01CB2848 FSUB S0, S0, S1
	0x01CB284C FCMP S0, S2
	0x01CB2850 B.LE 0x1CB2AE8
	0x01CB2854 MOV X0, X19
	0x01CB2858 MOV X1, X31
	0x01CB285C BL 0x3A9B084
	0x01CB2860 CBZ X0, 0x1CB2B00
	0x01CB2864 MOV X1, X31
	0x01CB2868 BL 0x3AA7658
	0x01CB286C MOV X0, X31
	0x01CB2870 MOV V8.16B, V0.16B
	0x01CB2874 MOV V9.16B, V1.16B
	0x01CB2878 MOV V10.16B, V2.16B
	0x01CB287C BL 0x3A6D510
	0x01CB2880 CBZ X0, 0x1CB2B00
	0x01CB2884 MOV X1, X31
	0x01CB2888 BL 0x3A9B084
	0x01CB288C CBZ X0, 0x1CB2B00
	0x01CB2890 MOV X1, X31
	0x01CB2894 BL 0x3AA7658
	0x01CB2898 FSUB S0, S8, S0
	0x01CB289C FSUB S1, S9, S1
	0x01CB28A0 FSUB S2, S10, S2
	0x01CB28A4 FMUL S0, S0, S0
	0x01CB28A8 FMUL S1, S1, S1
	0x01CB28AC FMUL S2, S2, S2
	0x01CB28B0 FADD S0, S0, S1
	0x01CB28B4 FADD S0, S2, S0
	0x01CB28B8 FMOV S1, 1
	0x01CB28BC FCMP S0, S1
	0x01CB28C0 B.PL 0x1CB2AE8
	0x01CB28C4 ADRP X22, 0x229C000
	0x01CB28C8 LDR X22, [X22 + 0x2A8]
	0x01CB28CC LDR X20, [X19 + 0x20]
	0x01CB28D0 LDR X0, [X22]
	0x01CB28D4 LDR W8, [X0 + 0xE0]
	0x01CB28D8 CBNZ W8, 0x1CB28E0
	0x01CB28DC BL 0x1B6E8F8
	0x01CB28E0 ADRP X23, 0x2571000
	0x01CB28E4 LDRB W8, [X23 + 0x50A]
	0x01CB28E8 CBNZ W8, 0x1CB2900
	0x01CB28EC ADRP X0, 0x229C000
	0x01CB28F0 LDR X0, [X0 + 0x2A8]
	0x01CB28F4 BL 0x1B6E7F0
	0x01CB28F8 MOVZ W8, 0x1
	0x01CB28FC STRB W8, [X23 + 0x50A]
	0x01CB2900 LDR X0, [X22]
	0x01CB2904 LDR W8, [X0 + 0xE0]
	0x01CB2908 CBNZ W8, 0x1CB2914
	0x01CB290C BL 0x1B6E8F8
	0x01CB2910 LDR X0, [X22]
	0x01CB2914 LDR X8, [X0 + 0xB8]
	0x01CB2918 LDR X0, [X8]
	0x01CB291C CBZ X0, 0x1CB2B00
	0x01CB2920 ADRP X8, 0x229C000
	0x01CB2924 LDR X8, [X8 + 0x808]
	0x01CB2928 LDR X1, [X8]
	0x01CB292C BL 0x2961038
	0x01CB2930 LDRB W8, [X23 + 0x50A]
	0x01CB2934 MOV X21, X0
	0x01CB2938 CBNZ W8, 0x1CB2950
	0x01CB293C ADRP X0, 0x229C000
	0x01CB2940 LDR X0, [X0 + 0x2A8]
	0x01CB2944 BL 0x1B6E7F0
	0x01CB2948 MOVZ W8, 0x1
	0x01CB294C STRB W8, [X23 + 0x50A]
	0x01CB2950 LDR X0, [X22]
	0x01CB2954 LDR W8, [X0 + 0xE0]
	0x01CB2958 CBNZ W8, 0x1CB2964
	0x01CB295C BL 0x1B6E8F8
	0x01CB2960 LDR X0, [X22]
	0x01CB2964 LDR X8, [X0 + 0xB8]
	0x01CB2968 LDR X0, [X8]
	0x01CB296C CBZ X0, 0x1CB2B00
	0x01CB2970 ADRP X8, 0x229C000
	0x01CB2974 LDR X8, [X8 + 0xD68]
	0x01CB2978 LDR X1, [X8]
	0x01CB297C BL 0x2960F68
	0x01CB2980 CBZ X20, 0x1CB2B00
	0x01CB2984 MOV X0, X20
	0x01CB2988 MOV X1, X21
	0x01CB298C BL 0x1CB2B04
	0x01CB2990 MOV X0, X31
	0x01CB2994 BL 0x3AA47CC
	0x01CB2998 MOV X0, X31
	0x01CB299C STR S0, [X19 + 0x28]
	0x01CB29A0 BL 0x3AA47CC
	0x01CB29A4 LDR V1, [X19 + 0x2C]
	0x01CB29A8 FSUB S0, S0, S1
	0x01CB29AC FMOV S1, 0.5
	0x01CB29B0 FCMP S0, S1
	0x01CB29B4 B.LE 0x1CB2AE8
	0x01CB29B8 ADRP X21, 0x229C000
	0x01CB29BC LDR X21, [X21 + 0xD78]
	0x01CB29C0 LDR X20, [X19 + 0x20]
	0x01CB29C4 LDR X0, [X21]
	0x01CB29C8 LDR W8, [X0 + 0xE0]
	0x01CB29CC CBNZ W8, 0x1CB29D4
	0x01CB29D0 BL 0x1B6E8F8
	0x01CB29D4 ADRP X22, 0x2571000
	0x01CB29D8 LDRB W8, [X22 + 0x50B]
	0x01CB29DC CBNZ W8, 0x1CB29F4
	0x01CB29E0 ADRP X0, 0x229C000
	0x01CB29E4 LDR X0, [X0 + 0xD78]
	0x01CB29E8 BL 0x1B6E7F0
	0x01CB29EC MOVZ W8, 0x1
	0x01CB29F0 STRB W8, [X22 + 0x50B]
	0x01CB29F4 LDR X0, [X21]
	0x01CB29F8 LDR W8, [X0 + 0xE0]
	0x01CB29FC CBNZ W8, 0x1CB2A08
	0x01CB2A00 BL 0x1B6E8F8
	0x01CB2A04 LDR X0, [X21]
	0x01CB2A08 ADRP X22, 0x229C000
	0x01CB2A0C LDR X22, [X22 + 0xD70]
	0x01CB2A10 LDR X9, [X0 + 0xB8]
	0x01CB2A14 LDR X8, [X22]
	0x01CB2A18 LDR X21, [X9 + 0x8]
	0x01CB2A1C LDR W10, [X8 + 0xE0]
	0x01CB2A20 CBNZ W10, 0x1CB2A2C
	0x01CB2A24 MOV X0, X8
	0x01CB2A28 BL 0x1B6E8F8
	0x01CB2A2C ADRP X23, 0x2571000
	0x01CB2A30 LDRB W8, [X23 + 0x50C]
	0x01CB2A34 CBNZ W8, 0x1CB2A4C
	0x01CB2A38 ADRP X0, 0x229C000
	0x01CB2A3C LDR X0, [X0 + 0xD70]
	0x01CB2A40 BL 0x1B6E7F0
	0x01CB2A44 MOVZ W8, 0x1
	0x01CB2A48 STRB W8, [X23 + 0x50C]
	0x01CB2A4C LDR X0, [X22]
	0x01CB2A50 LDR W8, [X0 + 0xE0]
	0x01CB2A54 CBNZ W8, 0x1CB2A60
	0x01CB2A58 BL 0x1B6E8F8
	0x01CB2A5C LDR X0, [X22]
	0x01CB2A60 CBZ X20, 0x1CB2B00
	0x01CB2A64 LDR X8, [X0 + 0xB8]
	0x01CB2A68 MOV X0, X20
	0x01CB2A6C MOV X1, X21
	0x01CB2A70 LDR X2, [X8 + 0x18]
	0x01CB2A74 BL 0x1CB3190
	0x01CB2A78 ADRP X21, 0x229C000
	0x01CB2A7C LDR X21, [X21 + 0x3C8]
	0x01CB2A80 LDR X20, [X19 + 0x20]
	0x01CB2A84 LDR X0, [X21]
	0x01CB2A88 LDR W8, [X0 + 0xE0]
	0x01CB2A8C CBNZ W8, 0x1CB2A94
	0x01CB2A90 BL 0x1B6E8F8
	0x01CB2A94 ADRP X22, 0x2571000
	0x01CB2A98 LDRB W8, [X22 + 0x50D]
	0x01CB2A9C CBNZ W8, 0x1CB2AB4
	0x01CB2AA0 ADRP X0, 0x229C000
	0x01CB2AA4 LDR X0, [X0 + 0x3C8]
	0x01CB2AA8 BL 0x1B6E7F0
	0x01CB2AAC MOVZ W8, 0x1
	0x01CB2AB0 STRB W8, [X22 + 0x50D]
	0x01CB2AB4 LDR X0, [X21]
	0x01CB2AB8 LDR W8, [X0 + 0xE0]
	0x01CB2ABC CBNZ W8, 0x1CB2AC8
	0x01CB2AC0 BL 0x1B6E8F8
	0x01CB2AC4 LDR X0, [X21]
	0x01CB2AC8 CBZ X20, 0x1CB2B00
	0x01CB2ACC LDR X8, [X0 + 0xB8]
	0x01CB2AD0 MOV X0, X20
	0x01CB2AD4 LDR X1, [X8]
	0x01CB2AD8 BL 0x1CB3B94
	0x01CB2ADC MOV X0, X31
	0x01CB2AE0 BL 0x3AA47CC
	0x01CB2AE4 STR S0, [X19 + 0x2C]
	0x01CB2AE8 LDP X20, X19, [X31 + 0x40]
	0x01CB2AEC LDP X22, X21, [X31 + 0x30]
	0x01CB2AF0 LDP X30, X23, [X31 + 0x20]
	0x01CB2AF4 LDP D9, D8, [X31 + 0x10]
	0x01CB2AF8 LDR V10, [X31], #0x50
	0x01CB2AFC RET
	0x01CB2B00 BL 0x1B6EA1C
	0x01CB2B04 STP D11, D10, [X31 - 0x80]!
	0x01CB2B08 STP D9, D8, [X31 + 0x10]
	0x01CB2B0C STP X29, X30, [X31 + 0x20]
	0x01CB2B10 STP X28, X27, [X31 + 0x30]
	0x01CB2B14 STP X26, X25, [X31 + 0x40]
	0x01CB2B18 STP X24, X23, [X31 + 0x50]
	0x01CB2B1C STP X22, X21, [X31 + 0x60]
	0x01CB2B20 STP X20, X19, [X31 + 0x70]
	0x01CB2B24 ADRP X21, 0x2571000
	0x01CB2B28 LDRB W8, [X21 + 0x4D5]
	0x01CB2B2C MOV X20, X1
	0x01CB2B30 MOV X19, X0
	0x01CB2B34 TBNZ X8, 0x0, 0x1CB2B7C
	0x01CB2B38 ADRP X0, 0x229C000
	0x01CB2B3C LDR X0, [X0 + 0x470]
	0x01CB2B40 BL 0x1B6E7F0
	0x01CB2B44 ADRP X0, 0x229C000
	0x01CB2B48 LDR X0, [X0 + 0xD80]
	0x01CB2B4C BL 0x1B6E7F0
	0x01CB2B50 ADRP X0, 0x229C000
	0x01CB2B54 LDR X0, [X0 + 0xD88]
	0x01CB2B58 BL 0x1B6E7F0
	0x01CB2B5C ADRP X0, 0x229C000
	0x01CB2B60 LDR X0, [X0 + 0x478]
	0x01CB2B64 BL 0x1B6E7F0
	0x01CB2B68 ADRP X0, 0x229C000
	0x01CB2B6C LDR X0, [X0 + 0x198]
	0x01CB2B70 BL 0x1B6E7F0
	0x01CB2B74 MOVZ W8, 0x1
	0x01CB2B78 STRB W8, [X21 + 0x4D5]
	0x01CB2B7C CBZ X20, 0x1CB2FBC
	0x01CB2B80 ADRP X10, 0x229C000
	0x01CB2B84 LDR X8, [X20]
	0x01CB2B88 LDR X10, [X10 + 0xD80]
	0x01CB2B8C LDRH W9, [X8 + 0x12E]
	0x01CB2B90 LDR X1, [X10]
	0x01CB2B94 CBZ X9, 0x1CB2BB8
	0x01CB2B98 LDR X10, [X8 + 0xB0]
	0x01CB2B9C ADD X10, X10, 0x8
	0x01CB2BA0 LDUR X11, [X10 - 0x8]
	0x01CB2BA4 CMP X11, X1
	0x01CB2BA8 B.EQ 0x1CB2BC8
	0x01CB2BAC SUBS X9, X9, 0x1
	0x01CB2BB0 ADD X10, X10, 0x10
	0x01CB2BB4 B.NE 0x1CB2BA0
	0x01CB2BB8 MOV X0, X20
	0x01CB2BBC MOV W2, W31
	0x01CB2BC0 BL 0x1BB4284
	0x01CB2BC4 B 0x1CB2BD4
	0x01CB2BC8 LDRSW X9, [X10]
	0x01CB2BCC ADD X8, X8, X9, 0x4, LSL
	0x01CB2BD0 ADD X0, X8, 0x138
	0x01CB2BD4 ADRP X28, 0x229C000
	0x01CB2BD8 LDR X28, [X28 + 0x478]
	0x01CB2BDC LDP X8, X1, [X0]
	0x01CB2BE0 ADRP X29, 0x229C000
	0x01CB2BE4 ADRP X21, 0x229C000
	0x01CB2BE8 LDR X29, [X29 + 0xD88]
	0x01CB2BEC LDR X21, [X21 + 0x198]
	0x01CB2BF0 MOV X0, X20
	0x01CB2BF4 BLR X8
	0x01CB2BF8 ADRP X8, 0xFFFFFFFFFEDF7000
	0x01CB2BFC ADRP X9, 0xFFFFFFFFFEDF7000
	0x01CB2C00 LDR V10, [X8 + 0xE1C]
	0x01CB2C04 LDR V11, [X9 + 0xA50]
	0x01CB2C08 MOV X20, X0
	0x01CB2C0C MOV X26, X31
	0x01CB2C10 MOVZ W27, 0x1
	0x01CB2C14 ADRP X22, 0x2571000
	0x01CB2C18 CBZ X20, 0x1CB2FE8
	0x01CB2C1C LDR X8, [X20]
	0x01CB2C20 LDR X1, [X28]
	0x01CB2C24 LDRH W9, [X8 + 0x12E]
	0x01CB2C28 CBZ X9, 0x1CB2C4C
	0x01CB2C2C LDR X10, [X8 + 0xB0]
	0x01CB2C30 ADD X10, X10, 0x8
	0x01CB2C34 LDUR X11, [X10 - 0x8]
	0x01CB2C38 CMP X11, X1
	0x01CB2C3C B.EQ 0x1CB2C5C
	0x01CB2C40 SUBS X9, X9, 0x1
	0x01CB2C44 ADD X10, X10, 0x10
	0x01CB2C48 B.NE 0x1CB2C34
	0x01CB2C4C MOV X0, X20
	0x01CB2C50 MOV W2, W31
	0x01CB2C54 BL 0x1BB4284
	0x01CB2C58 B 0x1CB2C68
	0x01CB2C5C LDRSW X9, [X10]
	0x01CB2C60 ADD X8, X8, X9, 0x4, LSL
	0x01CB2C64 ADD X0, X8, 0x138
	0x01CB2C68 LDP X8, X1, [X0]
	0x01CB2C6C MOV X0, X20
	0x01CB2C70 BLR X8
	0x01CB2C74 TBZ X0, 0x0, 0x1CB2F08
	0x01CB2C78 LDR X8, [X20]
	0x01CB2C7C LDR X1, [X29]
	0x01CB2C80 LDRH W9, [X8 + 0x12E]
	0x01CB2C84 CBZ X9, 0x1CB2CA8
	0x01CB2C88 LDR X10, [X8 + 0xB0]
	0x01CB2C8C ADD X10, X10, 0x8
	0x01CB2C90 LDUR X11, [X10 - 0x8]
	0x01CB2C94 CMP X11, X1
	0x01CB2C98 B.EQ 0x1CB2CB8
	0x01CB2C9C SUBS X9, X9, 0x1
	0x01CB2CA0 ADD X10, X10, 0x10
	0x01CB2CA4 B.NE 0x1CB2C90
	0x01CB2CA8 MOV X0, X20
	0x01CB2CAC MOV W2, W31
	0x01CB2CB0 BL 0x1BB4284
	0x01CB2CB4 B 0x1CB2CC4
	0x01CB2CB8 LDRSW X9, [X10]
	0x01CB2CBC ADD X8, X8, X9, 0x4, LSL
	0x01CB2CC0 ADD X0, X8, 0x138
	0x01CB2CC4 LDP X8, X1, [X0]
	0x01CB2CC8 MOV X0, X20
	0x01CB2CCC BLR X8
	0x01CB2CD0 LDR X8, [X19 + 0x58]
	0x01CB2CD4 CBZ X8, 0x1CB2FEC
	0x01CB2CD8 LDR W9, [X8 + 0x18]
	0x01CB2CDC CMP X26, W9, SXTW
	0x01CB2CE0 B.GE 0x1CB2F08
	0x01CB2CE4 CMP X26, X9
	0x01CB2CE8 B.CS 0x1CB2FF0
	0x01CB2CEC ADD X8, X8, X26, 0x3, LSL
	0x01CB2CF0 LDRB W9, [X19 + 0x51]
	0x01CB2CF4 LDR X24, [X8 + 0x20]
	0x01CB2CF8 MOV X23, X0
	0x01CB2CFC CBZ W9, 0x1CB2D64
	0x01CB2D00 CBZ X23, 0x1CB2FF8
	0x01CB2D04 MOV X0, X23
	0x01CB2D08 BL 0x1CB4780
	0x01CB2D0C MOV W25, W0
	0x01CB2D10 LDR X0, [X21]
	0x01CB2D14 LDR W8, [X0 + 0xE0]
	0x01CB2D18 CBNZ W8, 0x1CB2D20
	0x01CB2D1C BL 0x1B6E8F8
	0x01CB2D20 LDRB W8, [X22 + 0x44F]
	0x01CB2D24 CBNZ W8, 0x1CB2D34
	0x01CB2D28 MOV X0, X21
	0x01CB2D2C BL 0x1B6E7F0
	0x01CB2D30 STRB W27, [X22 + 0x44F]
	0x01CB2D34 LDR X0, [X21]
	0x01CB2D38 LDR W8, [X0 + 0xE0]
	0x01CB2D3C CBNZ W8, 0x1CB2D48
	0x01CB2D40 BL 0x1B6E8F8
	0x01CB2D44 LDR X0, [X21]
	0x01CB2D48 LDR X8, [X0 + 0xB8]
	0x01CB2D4C LDR X8, [X8]
	0x01CB2D50 CBZ X8, 0x1CB2FF4
	0x01CB2D54 LDR W8, [X8 + 0x110]
	0x01CB2D58 CMP W25, W8
	0x01CB2D5C B.NE 0x1CB2C18
	0x01CB2D60 B 0x1CB2D68
	0x01CB2D64 CBZ X23, 0x1CB3020
	0x01CB2D68 LDR X0, [X23 + 0x88]
	0x01CB2D6C CBZ X0, 0x1CB300C
	0x01CB2D70 MOV X1, X31
	0x01CB2D74 BL 0x3AA7658
	0x01CB2D78 LDRB W8, [X19 + 0x50]
	0x01CB2D7C MOV V8.16B, V0.16B
	0x01CB2D80 MOV V9.16B, V2.16B
	0x01CB2D84 CBZ W8, 0x1CB2DA8
	0x01CB2D88 MOV X0, X19
	0x01CB2D8C MOV X1, X31
	0x01CB2D90 BL 0x3A9B084
	0x01CB2D94 CBZ X0, 0x1CB301C
	0x01CB2D98 MOV X1, X31
	0x01CB2D9C BL 0x3AA7658
	0x01CB2DA0 FSUB S8, S8, S0
	0x01CB2DA4 FSUB S9, S9, S2
	0x01CB2DA8 MOV X0, X23
	0x01CB2DAC BL 0x1CB47E0
	0x01CB2DB0 CBZ X24, 0x1CB3014
	0x01CB2DB4 AND W1, W0, 0x1
	0x01CB2DB8 MOV X0, X24
	0x01CB2DBC BL 0x1CB4174
	0x01CB2DC0 MOV X0, X23
	0x01CB2DC4 BL 0x1CB4848
	0x01CB2DC8 LDR X0, [X24 + 0x20]
	0x01CB2DCC CBZ X0, 0x1CB3010
	0x01CB2DD0 LDR X8, [X0]
	0x01CB2DD4 LDR X1, [X8 + 0x2B0]
	0x01CB2DD8 LDR X9, [X8 + 0x2A8]
	0x01CB2DDC BLR X9
	0x01CB2DE0 LDR X0, [X24 + 0x30]
	0x01CB2DE4 CBZ X0, 0x1CB3008
	0x01CB2DE8 FADD S1, S9, S9
	0x01CB2DEC FADD S0, S8, S8
	0x01CB2DF0 MOV X1, X31
	0x01CB2DF4 BL 0x3AA6988
	0x01CB2DF8 MOV X0, X23
	0x01CB2DFC BL 0x1CB47E0
	0x01CB2E00 LDR X25, [X24 + 0x30]
	0x01CB2E04 TBZ X0, 0x0, 0x1CB2E54
	0x01CB2E08 ADRP X8, 0x2571000
	0x01CB2E0C LDRB W8, [X8 + 0x454]
	0x01CB2E10 CBNZ W8, 0x1CB2E28
	0x01CB2E14 ADRP X0, 0x229C000
	0x01CB2E18 LDR X0, [X0 + 0x1F8]
	0x01CB2E1C BL 0x1B6E7F0
	0x01CB2E20 ADRP X8, 0x2571000
	0x01CB2E24 STRB W27, [X8 + 0x454]
	0x01CB2E28 CBZ X25, 0x1CB3034
	0x01CB2E2C ADRP X8, 0x229C000
	0x01CB2E30 LDR X8, [X8 + 0x1F8]
	0x01CB2E34 LDR X8, [X8]
	0x01CB2E38 LDR X8, [X8 + 0xB8]
	0x01CB2E3C LDP S2, S3, [X8 + 0x8]
	0x01CB2E40 LDP S0, S1, [X8]
	0x01CB2E44 MOV X0, X25
	0x01CB2E48 MOV X1, X31
	0x01CB2E4C BL 0x3AA7984
	0x01CB2E50 B 0x1CB2EA4
	0x01CB2E54 LDR X0, [X23 + 0x88]
	0x01CB2E58 CBZ X0, 0x1CB3028
	0x01CB2E5C MOV X1, X31
	0x01CB2E60 BL 0x3AA5FBC
	0x01CB2E64 MOV X0, X31
	0x01CB2E68 BL 0x3A92974
	0x01CB2E6C FMUL S1, S1, S10
	0x01CB2E70 FMUL S0, S0, S10
	0x01CB2E74 FMUL S2, S2, S10
	0x01CB2E78 MOV X0, X31
	0x01CB2E7C BL 0x3A92EFC
	0x01CB2E80 FMUL S2, S1, S11
	0x01CB2E84 FMOV S0, W31
	0x01CB2E88 FMOV S1, W31
	0x01CB2E8C MOV X0, X31
	0x01CB2E90 BL 0x3A928DC
	0x01CB2E94 CBZ X25, 0x1CB3024
	0x01CB2E98 MOV X0, X25
	0x01CB2E9C MOV X1, X31
	0x01CB2EA0 BL 0x3AA7984
	0x01CB2EA4 MOV X0, X24
	0x01CB2EA8 MOV X1, X31
	0x01CB2EAC BL 0x3A9B0C0
	0x01CB2EB0 CBZ X0, 0x1CB3004
	0x01CB2EB4 MOV X1, X31
	0x01CB2EB8 BL 0x3A9D9EC
	0x01CB2EBC TBNZ X0, 0x0, 0x1CB2EDC
	0x01CB2EC0 MOV X0, X24
	0x01CB2EC4 MOV X1, X31
	0x01CB2EC8 BL 0x3A9B0C0
	0x01CB2ECC CBZ X0, 0x1CB302C
	0x01CB2ED0 MOVZ W1, 0x1
	0x01CB2ED4 MOV X2, X31
	0x01CB2ED8 BL 0x3A9D9A8
	0x01CB2EDC LDR X0, [X23 + 0x40]
	0x01CB2EE0 CBZ X0, 0x1CB3018
	0x01CB2EE4 MOV X1, X31
	0x01CB2EE8 BL 0x1D9E6A0
	0x01CB2EEC TBZ X0, 0x0, 0x1CB2F00
	0x01CB2EF0 LDR X0, [X24 + 0x30]
	0x01CB2EF4 CBZ X0, 0x1CB3030
	0x01CB2EF8 MOV X1, X31
	0x01CB2EFC BL 0x3AA8DD0
	0x01CB2F00 ADD X26, X26, 0x1
	0x01CB2F04 B 0x1CB2C18
	0x01CB2F08 MOV X22, X31
	0x01CB2F0C MOVZ W21, 0x5
	0x01CB2F10 CBZ X20, 0x1CB2F74
	0x01CB2F14 LDR X8, [X20]
	0x01CB2F18 ADRP X10, 0x229C000
	0x01CB2F1C LDRH W9, [X8 + 0x12E]
	0x01CB2F20 LDR X10, [X10 + 0x470]
	0x01CB2F24 LDR X1, [X10]
	0x01CB2F28 CBZ X9, 0x1CB2F4C
	0x01CB2F2C LDR X10, [X8 + 0xB0]
	0x01CB2F30 ADD X10, X10, 0x8
	0x01CB2F34 LDUR X11, [X10 - 0x8]
	0x01CB2F38 CMP X11, X1
	0x01CB2F3C B.EQ 0x1CB2F5C
	0x01CB2F40 SUBS X9, X9, 0x1
	0x01CB2F44 ADD X10, X10, 0x10
	0x01CB2F48 B.NE 0x1CB2F34
	0x01CB2F4C MOV X0, X20
	0x01CB2F50 MOV W2, W31
	0x01CB2F54 BL 0x1BB4284
	0x01CB2F58 B 0x1CB2F68
	0x01CB2F5C LDRSW X9, [X10]
	0x01CB2F60 ADD X8, X8, X9, 0x4, LSL
	0x01CB2F64 ADD X0, X8, 0x138
	0x01CB2F68 LDP X8, X1, [X0]
	0x01CB2F6C MOV X0, X20
	0x01CB2F70 BLR X8
	0x01CB2F74 CBNZ X22, 0x1CB2FFC
	0x01CB2F78 CMP W21, 0x5
	0x01CB2F7C B.EQ 0x1CB2F84
	0x01CB2F80 CBNZ W21, 0x1CB2FC0
	0x01CB2F84 LDR X8, [X19 + 0x58]
	0x01CB2F88 CBZ X8, 0x1CB2FBC
	0x01CB2F8C AND X20, X26, 0x0
	0x01CB2F90 LDR W9, [X8 + 0x18]
	0x01CB2F94 CMP X20, W9, SXTW
	0x01CB2F98 B.GE 0x1CB2FC0
	0x01CB2F9C CMP X20, X9
	0x01CB2FA0 B.CS 0x1CB2FE4
	0x01CB2FA4 ADD X8, X8, X20, 0x3, LSL
	0x01CB2FA8 LDR X1, [X8 + 0x20]
	0x01CB2FAC BL 0x1CB4658
	0x01CB2FB0 LDR X8, [X19 + 0x58]
	0x01CB2FB4 ADD X20, X20, 0x1
	0x01CB2FB8 CBNZ X8, 0x1CB2F90
	0x01CB2FBC BL 0x1B6EA1C
	0x01CB2FC0 LDP X20, X19, [X31 + 0x70]
	0x01CB2FC4 LDP X22, X21, [X31 + 0x60]
	0x01CB2FC8 LDP X24, X23, [X31 + 0x50]
	0x01CB2FCC LDP X26, X25, [X31 + 0x40]
	0x01CB2FD0 LDP X28, X27, [X31 + 0x30]
	0x01CB2FD4 LDP X29, X30, [X31 + 0x20]
	0x01CB2FD8 LDP D9, D8, [X31 + 0x10]
	0x01CB2FDC LDP D11, D10, [X31], #0x80
	0x01CB2FE0 RET
	0x01CB2FE4 BL 0x1B6EA24
	0x01CB2FE8 BL 0x1B6EA1C
	0x01CB2FEC BL 0x1B6EA1C
	0x01CB2FF0 BL 0x1B6EA24
	0x01CB2FF4 BL 0x1B6EA1C
	0x01CB2FF8 BL 0x1B6EA1C
	0x01CB2FFC MOV X0, X22
	0x01CB3000 BL 0x1B6EA14
	0x01CB3004 BL 0x1B6EA1C
	0x01CB3008 BL 0x1B6EA1C
	0x01CB300C BL 0x1B6EA1C
	0x01CB3010 BL 0x1B6EA1C
	0x01CB3014 BL 0x1B6EA1C
	0x01CB3018 BL 0x1B6EA1C
	0x01CB301C BL 0x1B6EA1C
	0x01CB3020 BL 0x1B6EA1C
	0x01CB3024 BL 0x1B6EA1C
	0x01CB3028 BL 0x1B6EA1C
	0x01CB302C BL 0x1B6EA1C
	0x01CB3030 BL 0x1B6EA1C
	0x01CB3034 BL 0x1B6EA1C
	0x01CB3038 B 0x1CB30E0
	0x01CB303C B 0x1CB30E0
	0x01CB3040 B 0x1CB30E0
	0x01CB3044 B 0x1CB30E0
	0x01CB3048 B 0x1CB30E0
	0x01CB304C B 0x1CB30E0
	0x01CB3050 B 0x1CB30E0
	0x01CB3054 B 0x1CB30E0
	0x01CB3058 B 0x1CB30E0
	0x01CB305C B 0x1CB30E0
	0x01CB3060 B 0x1CB30E0
	0x01CB3064 B 0x1CB30E0
	0x01CB3068 B 0x1CB30E0
	0x01CB306C B 0x1CB30E0
	0x01CB3070 B 0x1CB30E0
	0x01CB3074 B 0x1CB30E0
	0x01CB3078 B 0x1CB30E0
	0x01CB307C B 0x1CB30E0

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+192], D8
	003 Move [X31+208], X29
	004 Move [X31+216], X30
	005 Move [X31+224], X28
	006 Move [X31+232], X27
	007 Move [X31+240], X26
	008 Move [X31+248], X25
	009 Move [X31+256], X24
	010 Move [X31+264], X23
	011 Move [X31+272], X22
	012 Move [X31+280], X21
	013 Move [X31+288], X20
	014 Move [X31+296], X19
	015 Move X20, 0x2572000
	016 Move X22, 0x229C000
	017 Move W8, [X20+1225]
	018 Move X22, [X22+1144]
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {131}
	024 Move X0, 0x229D000
	025 Move X0, [X0+3088]
	026 Call 0x1B6F7F0
	027 Move X0, 0x229C000
	028 Move X0, [X0+1456]
	029 Call 0x1B6F7F0
	030 Move X0, 0x229C000
	031 Move X0, [X0+1464]
	032 Call 0x1B6F7F0
	033 Move X0, 0x229C000
	034 Move X0, [X0+1472]
	035 Call 0x1B6F7F0
	036 Move X0, 0x229D000
	037 Move X0, [X0+3096]
	038 Call 0x1B6F7F0
	039 Move X0, 0x229D000
	040 Move X0, [X0+3104]
	041 Call 0x1B6F7F0
	042 Move X0, 0x229D000
	043 Move X0, [X0+3112]
	044 Call 0x1B6F7F0
	045 Move X0, 0x229C000
	046 Move X0, [X0+1528]
	047 Call 0x1B6F7F0
	048 Move X0, 0x229D000
	049 Move X0, [X0+3120]
	050 Call 0x1B6F7F0
	051 Move X0, 0x229D000
	052 Move X0, [X0+3128]
	053 Call 0x1B6F7F0
	054 Move X0, 0x229D000
	055 Move X0, [X0+3136]
	056 Call 0x1B6F7F0
	057 Move X0, 0x229D000
	058 Move X0, [X0+3144]
	059 Call 0x1B6F7F0
	060 Move X0, 0x229D000
	061 Move X0, [X0+3152]
	062 Call 0x1B6F7F0
	063 Move X0, 0x229D000
	064 Move X0, [X0+3160]
	065 Call 0x1B6F7F0
	066 Move X0, 0x229D000
	067 Move X0, [X0+3168]
	068 Call 0x1B6F7F0
	069 Move X0, 0x229D000
	070 Move X0, [X0+3176]
	071 Call 0x1B6F7F0
	072 Move X0, 0x229D000
	073 Move X0, [X0+3184]
	074 Call 0x1B6F7F0
	075 Move X0, 0x229C000
	076 Move X0, [X0+1576]
	077 Call 0x1B6F7F0
	078 Move X0, 0x229D000
	079 Move X0, [X0+2824]
	080 Call 0x1B6F7F0
	081 Move X0, 0x229D000
	082 Move X0, [X0+3192]
	083 Call 0x1B6F7F0
	084 Move X0, 0x229D000
	085 Move X0, [X0+3200]
	086 Call 0x1B6F7F0
	087 Move X0, 0x229D000
	088 Move X0, [X0+488]
	089 Call 0x1B6F7F0
	090 Move X0, 0x229D000
	091 Move X0, [X0+584]
	092 Call 0x1B6F7F0
	093 Move X0, 0x229D000
	094 Move X0, [X0+592]
	095 Call 0x1B6F7F0
	096 Move X0, 0x229C000
	097 Move X0, [X0+1144]
	098 Call 0x1B6F7F0
	099 Move X0, 0x229D000
	100 Move X0, [X0+3208]
	101 Call 0x1B6F7F0
	102 Move X0, 0x229D000
	103 Move X0, [X0+3216]
	104 Call 0x1B6F7F0
	105 Move X0, 0x229D000
	106 Move X0, [X0+3224]
	107 Call 0x1B6F7F0
	108 Move X0, 0x229D000
	109 Move X0, [X0+3232]
	110 Call 0x1B6F7F0
	111 Move X0, 0x229C000
	112 Move X0, [X0+2328]
	113 Call 0x1B6F7F0
	114 Move X0, 0x229D000
	115 Move X0, [X0+3240]
	116 Call 0x1B6F7F0
	117 Move X0, 0x229D000
	118 Move X0, [X0+3248]
	119 Call 0x1B6F7F0
	120 Move X0, 0x229D000
	121 Move X0, [X0+3256]
	122 Call 0x1B6F7F0
	123 Move X0, 0x229D000
	124 Move X0, [X0+3264]
	125 Call 0x1B6F7F0
	126 Move X0, 0x229D000
	127 Move X0, [X0+3080]
	128 Call 0x1B6F7F0
	129 Move W8, 1
	130 Move [X20+1225], W8
	131 Move [X31+160], X31
	132 Move [X31+168], X31
	133 Move [X31+176], X31
	134 Move [X31+200], X31
	135 Move [X31+128], X31
	136 Move [X31+136], X31
	137 Move [X31+144], X31
	138 Move X20, X19
	139 Add X20, X20, 168
	140 Move X21, [X20]
	141 Move X0, [X22]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1B6F8F8
	146 Move X0, X21
	147 Move X1, X31
	148 Move X2, X31
	149 Call Object.op_Equality, X0, X1
	150 Move TEMP, X0
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfNotEqual {172}
	154 Move X0, X19
	155 Call NetworkedLootSpawnGroup.get__groupID, X0
	156 Move X8, 0x229D000
	157 Move X8, [X8+2824]
	158 Move W21, W0
	159 Move X8, [X8]
	160 Move W9, [X8+224]
	161 Compare W9, 0
	162 JumpIfNotEqual {165}
	163 Move X0, X8
	164 Call 0x1B6F8F8
	165 Move W0, W21
	166 Move X1, X20
	167 Call LootSpawnGroup.TryGetSpawnGroup, X0, X1
	168 Move TEMP, X0
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfNotEqual {617}
	172 Move X0, X19
	173 Call NetworkedLootSpawnGroup.ResetAvailableItemPoints, X0
	174 Move X8, [X19+168]
	175 Compare X8, 0
	176 JumpIfEqual {665}
	177 Move X9, 0x229D000
	178 Move X9, [X9+3232]
	179 Move X21, 0x229D000
	180 Move X26, 0x229D000
	181 Move X27, 0x229D000
	182 Move X29, 0x229D000
	183 Move X21, [X21+3224]
	184 Move X26, [X26+3200]
	185 Move X27, [X27+488]
	186 Move X29, [X29+3216]
	187 Move X0, [X9]
	188 Move V8, [X8+32]
	189 Call 0x1B6FA0C
	190 Move X1, [X21]
	191 Move X21, X0
	192 Call Queue`1<Int32>..ctor, X0
	193 Move W28, W31
	194 Move W22, W31
	195 Add X8, X31, 104
	196 Move X0, X19
	197 Call NetworkedLootSpawnGroup.get__spawnedLoot, X0
	198 NotImplemented "Instruction LDUR not yet implemented."
	199 Move X8, [X31+120]
	200 Move X2, [X26]
	201 Add X0, X31, 160
	202 Move W1, W22
	203 Move [X31+10], V0
	204 Move [X31+176], X8
	205 Call NetworkArray`1<SpawnedLoot>.get_Item, X0, X1
	206 Move X23, X0
	207 Move X0, [X27]
	208 Move X24, X1
	209 Move W8, [X0+224]
	210 Compare W8, 0
	211 JumpIfEqual {214}
	212 Compare W23, 0
	213 JumpIfNotEqual {217}
	214 Call 0x1B6F8F8
	215 Compare W23, 0
	216 JumpIfEqual {262}
	217 Move X0, [X19+56]
	218 Compare X0, 0
	219 JumpIfEqual {665}
	220 And X1, X23, 0
	221 Add X2, X31, 200
	222 Move X3, X31
	223 Call NetworkRunner.TryFindObject, X0, X1, X2
	224 Move TEMP, X0
	225 And TEMP, TEMP, 1
	226 Compare TEMP, 1
	227 JumpIfNotEqual {262}
	228 Move X0, [X31+200]
	229 Compare X0, 0
	230 JumpIfEqual {665}
	231 Move X8, 0x229D000
	232 Move X8, [X8+3088]
	233 Move X1, [X8]
	234 Call 0x2090DE8, X0
	235 Move X8, [X19+160]
	236 Compare X8, 0
	237 JumpIfEqual {665}
	238 Move X9, 0x229D000
	239 Move X9, [X9+3176]
	240 Move X25, X0
	241 And W1, W24, 255
	242 Move X0, X8
	243 Move X2, [X9]
	244 Call List`1<Object>.get_Item, X0, X1
	245 Compare X0, 0
	246 JumpIfEqual {665}
	247 Move X8, 0x229D000
	248 Move X8, [X8+3136]
	249 Move X1, X23
	250 ShiftRight X1, 32
	251 And X1, X1, 0x7FFFFFFF
	252 Move X2, [X8]
	253 Call List`1<Byte>.Remove, X0, X1
	254 Compare X25, 0
	255 JumpIfEqual {665}
	256 Move X0, X25
	257 Move X1, X31
	258 Call Item.get_itemValue, X0
	259 NotImplemented "Instruction SCVTF not yet implemented."
	260 Subtract S8, S8, S0
	261 Add W28, W28, 1
	262 Compare X21, 0
	263 JumpIfEqual {665}
	264 Move X2, [X29]
	265 Move X0, X21
	266 Move W1, W22
	267 Call Queue`1<Int32>.Enqueue, X0, X1
	268 Add W22, W22, 1
	269 NotImplemented "Instruction CMP not yet implemented."
	270 NotImplemented "Instruction FCMP not yet implemented."
	271 Move X8, 0x229D000
	272 Move X27, 0x229D000
	273 Move X22, 0x229D000
	274 Move X8, [X8+3120]
	275 Move X27, [X27+3104]
	276 Move X22, [X22+3096]
	277 Move W29, W31
	278 Move X0, [X19+160]
	279 Move [X31+28], W29
	280 Compare X0, 0
	281 JumpIfEqual {665}
	282 Move X1, [X8]
	283 Add X8, X31, 104
	284 Call List`1<Object>.GetEnumerator, X0
	285 NotImplemented "Instruction LDUR not yet implemented."
	286 Move X8, [X31+120]
	287 Move X29, 0x229C000
	288 Move W24, W31
	289 Move [X31+8], V0
	290 Move [X31+144], X8
	291 Move X29, [X29+1144]
	292 Move X1, [X27]
	293 Add X0, X31, 128
	294 Call Enumerator<Object>.MoveNext, X0
	295 Move TEMP, X0
	296 And TEMP, TEMP, 1
	297 Compare TEMP, 1
	298 JumpIfNotEqual {306}
	299 Move X8, [X31+144]
	300 Compare X8, 0
	301 JumpIfEqual {545}
	302 Move W8, [X8+24]
	303 NotImplemented "Instruction CMP not yet implemented."
	304 NotImplemented "Instruction CSET not yet implemented."
	305 Or W24, W24, W8
	306 Move X1, [X22]
	307 Add X0, X31, 128
	308 Call Enumerator<Object>.Dispose, X0
	309 Move TEMP, X24
	310 And TEMP, TEMP, 1
	311 Compare TEMP, 1
	312 JumpIfNotEqual {632}
	313 Move X8, [X20]
	314 Compare X8, 0
	315 JumpIfEqual {665}
	316 Move W1, [X8+48]
	317 Move W0, W31
	318 Move X2, X31
	319 Call Random.Range, X0, X1
	320 Move X8, [X20]
	321 Compare X8, 0
	322 JumpIfEqual {665}
	323 Move W23, W0
	324 Move W22, W31
	325 Move X0, [X8+40]
	326 Compare X0, 0
	327 JumpIfEqual {665}
	328 NotImplemented "Instruction CMP not yet implemented."
	329 Move W8, [X0+24]
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Move X8, 0x229D000
	332 Move X8, [X8+3168]
	333 Move W1, W22
	334 Move X2, [X8]
	335 Call List`1<Object>.get_Item, X0, X1
	336 Compare X0, 0
	337 JumpIfEqual {665}
	338 Move X8, [X19+160]
	339 Compare X8, 0
	340 JumpIfEqual {665}
	341 Move X9, 0x229D000
	342 Move W24, [X0+16]
	343 Move X9, [X9+3176]
	344 Move X0, X8
	345 Move W1, W22
	346 Move X2, [X9]
	347 Call List`1<Object>.get_Item, X0, X1
	348 Compare X0, 0
	349 JumpIfEqual {665}
	350 Subtract W23, W23, W24
	351 NotImplemented "Instruction CMP not yet implemented."
	352 Move W8, [X0+24]
	353 Compare W8, 0
	354 JumpIfEqual {443}
	355 Move X0, [X19+160]
	356 Compare X0, 0
	357 JumpIfEqual {665}
	358 Move X8, 0x229D000
	359 Move X8, [X8+3176]
	360 Move W1, W22
	361 Move X2, [X8]
	362 Call List`1<Object>.get_Item, X0, X1
	363 Compare X0, 0
	364 JumpIfEqual {665}
	365 Move W1, [X0+24]
	366 Move W0, W31
	367 Move X2, X31
	368 Call Random.Range, X0, X1
	369 Move X8, [X19+160]
	370 Compare X8, 0
	371 JumpIfEqual {665}
	372 Move X9, 0x229D000
	373 Move X9, [X9+3176]
	374 Move W25, W0
	375 Move X0, X8
	376 Move W1, W22
	377 Move X2, [X9]
	378 Call List`1<Object>.get_Item, X0, X1
	379 Compare X0, 0
	380 JumpIfEqual {665}
	381 Move X8, 0x229D000
	382 Move X8, [X8+3184]
	383 Move W1, W25
	384 Move X2, [X8]
	385 Call List`1<Byte>.get_Item, X0, X1
	386 Move X8, [X20]
	387 Compare X8, 0
	388 JumpIfEqual {665}
	389 Move W24, W0
	390 Move X0, [X8+40]
	391 Compare X0, 0
	392 JumpIfEqual {665}
	393 Move X8, 0x229D000
	394 Move X8, [X8+3168]
	395 Move W1, W22
	396 Move X2, [X8]
	397 Call List`1<Object>.get_Item, X0, X1
	398 Compare X0, 0
	399 JumpIfEqual {665}
	400 Move X0, [X0+24]
	401 Compare X0, 0
	402 JumpIfEqual {665}
	403 Move X8, 0x229D000
	404 Move X8, [X8+3160]
	405 And W24, W24, 255
	406 Move W1, W24
	407 Move X2, [X8]
	408 Call List`1<Object>.get_Item, X0, X1
	409 Move X8, [X19+160]
	410 Compare X8, 0
	411 JumpIfEqual {665}
	412 Move X9, 0x229D000
	413 Move X9, [X9+3176]
	414 Move X26, X0
	415 Move X0, X8
	416 Move W1, W22
	417 Move X2, [X9]
	418 Call List`1<Object>.get_Item, X0, X1
	419 Compare X0, 0
	420 JumpIfEqual {665}
	421 Move X8, 0x229D000
	422 Move X8, [X8+3128]
	423 Move W1, W25
	424 Move X2, [X8]
	425 Call List`1<Byte>.RemoveAt, X0, X1
	426 Move X0, X19
	427 Call NetworkedLootSpawnGroup.PickRandomItem, X0
	428 Move X8, [X29]
	429 Move X25, X0
	430 Move W9, [X8+224]
	431 Compare W9, 0
	432 JumpIfNotEqual {435}
	433 Move X0, X8
	434 Call 0x1B6F8F8
	435 Move X0, X25
	436 Move X1, X31
	437 Move X2, X31
	438 Call Object.op_Equality, X0, X1
	439 Move TEMP, X0
	440 And TEMP, TEMP, 1
	441 Compare TEMP, 1
	442 JumpIfNotEqual {447}
	443 Move X8, [X20]
	444 Add W22, W22, 1
	445 Compare X8, 0
	446 JumpIfNotEqual {325}
	447 Compare X25, 0
	448 JumpIfEqual {665}
	449 Move X0, [X25+32]
	450 Move W29, [X31+28]
	451 Compare X0, 0
	452 JumpIfEqual {665}
	453 Move X23, [X19+56]
	454 Move X1, X31
	455 Call Component.get_gameObject, X0
	456 Move [X31+16], X0
	457 Compare X26, 0
	458 JumpIfEqual {665}
	459 Move X0, X26
	460 Move X1, X31
	461 Call ItemPoint.GetCenterPosition, X0
	462 Move X8, 0x229D000
	463 Move X8, [X8+584]
	464 Add X0, X31, 88
	465 Move [X31+88], X31
	466 Move [X31+96], X31
	467 Move X1, [X8]
	468 Call Nullable`1<Vector3>..ctor, X0, X1
	469 Move X0, X26
	470 Move X1, X31
	471 Call Component.get_transform, X0
	472 Compare X0, 0
	473 JumpIfEqual {665}
	474 Move X1, X31
	475 Call Transform.get_rotation, X0
	476 Move X8, 0x229D000
	477 Move X8, [X8+592]
	478 Add X0, X31, 64
	479 Move [X31+64], X31
	480 Move [X31+72], X31
	481 Move [X31+80], W31
	482 Move X1, [X8]
	483 Call Nullable`1<Quaternion>..ctor, X0, X1
	484 Compare X23, 0
	485 JumpIfEqual {665}
	486 Move V0, [X31+4]
	487 Move W8, [X31+80]
	488 Move X2, [X31+88]
	489 Move X3, [X31+96]
	490 Move X1, [X31+16]
	491 Add X4, X31, 32
	492 Move X0, X23
	493 Move X5, X31
	494 Move X6, X31
	495 Move W7, W31
	496 Move [X31+2], V0
	497 Move [X31+48], W8
	498 Move [X31], X31
	499 Call NetworkRunner.Spawn, X0, X1, X2, X3, X4, X5, X6
	500 Compare X0, 0
	501 JumpIfEqual {665}
	502 Move X8, [X0+32]
	503 Compare X8, 0
	504 JumpIfEqual {508}
	505 Move W23, [X8]
	506 Compare X21, 0
	507 JumpIfNotEqual {511}
	508 Move X23, X31
	509 Compare X21, 0
	510 JumpIfEqual {665}
	511 Move X8, 0x229D000
	512 Move X8, [X8+3208]
	513 Move X0, X21
	514 NotImplemented "Instruction BFM not yet implemented."
	515 Move X1, [X8]
	516 Call Queue`1<Int32>.Dequeue, X0
	517 Move W22, W0
	518 Add X8, X31, 104
	519 Move X0, X19
	520 Call NetworkedLootSpawnGroup.get__spawnedLoot, X0
	521 Move X9, 0x229D000
	522 NotImplemented "Instruction LDUR not yet implemented."
	523 Move X8, [X31+120]
	524 Move X9, [X9+3192]
	525 NotImplemented "Instruction BFM not yet implemented."
	526 Move W3, W29
	527 Add X0, X31, 160
	528 Move X4, [X9]
	529 Move W1, W22
	530 Move X2, X23
	531 Move [X31+10], V0
	532 Move [X31+176], X8
	533 Call NetworkArray`1<SpawnedLoot>.Set, X0, X1, X2
	534 Move X0, X25
	535 Move X1, X31
	536 Add W28, W28, 1
	537 Call Item.get_itemValue, X0
	538 Move X22, 0x229D000
	539 Move X8, 0x229D000
	540 Move X22, [X22+3096]
	541 Move X8, [X8+3120]
	542 NotImplemented "Instruction SCVTF not yet implemented."
	543 Subtract S8, S8, S0
	544 NotImplemented "Instruction FCMP not yet implemented."
	545 Call 0x1B6FA1C
	546 Move X23, X0
	547 NotImplemented "Instruction CMP not yet implemented."
	548 Move X0, X23
	549 Call 0x3D1A840
	550 Move X22, [X0]
	551 Call 0x3D1A850
	552 Move X8, 0x229D000
	553 Move X8, [X8+3096]
	554 Add X0, X31, 128
	555 Move X1, [X8]
	556 Call Enumerator<Object>.Dispose, X0
	557 Move X29, 0x229C000
	558 Move X29, [X29+1144]
	559 Compare X22, 0
	560 JumpIfEqual {309}
	561 Move X0, X22
	562 Call 0x1B6FA14
	563 Move X8, 0x229C000
	564 Move X8, [X8+1472]
	565 Move X0, [X8]
	566 Call 0x1B6FA0C
	567 Move X8, 0x229C000
	568 Move X8, [X8+1464]
	569 Move X20, X0
	570 Move X1, [X8]
	571 Call Dictionary`2<Object, Object>..ctor, X0
	572 Move X8, 0x229C000
	573 Move X8, [X8+1528]
	574 Add X1, X31, 104
	575 Move [X31+104], W28
	576 Move X0, [X8]
	577 Call 0x1B6F900
	578 Compare X20, 0
	579 JumpIfEqual {665}
	580 Move X8, 0x229D000
	581 Move X9, 0x229C000
	582 Move X8, [X8+3240]
	583 Move X9, [X9+1456]
	584 Move X2, X0
	585 Move X0, X20
	586 Move X1, [X8]
	587 Move X3, [X9]
	588 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	589 Move X8, 0x229C000
	590 Move X8, [X8+1576]
	591 Move X0, [X8]
	592 Move W8, [X0+224]
	593 Compare W8, 0
	594 JumpIfNotEqual {596}
	595 Call 0x1B6F8F8
	596 Move X8, 0x229D000
	597 Move X9, 0x229D000
	598 Move X10, 0x229D000
	599 Move X8, [X8+3248]
	600 Move X9, [X9+3080]
	601 Move X10, [X10+3264]
	602 Move W4, 217
	603 Move X0, [X8]
	604 Move X2, [X9]
	605 Move X3, [X10]
	606 Move X1, X20
	607 Move X5, X31
	608 Call Log.Warning, X0, X1, X2, X3, X4
	609 Move X0, [X19+56]
	610 Move W8, 0x43340000
	611 Move S0, W8
	612 Move X1, X31
	613 Call TickTimer.CreateFromSeconds, X0, V0
	614 And X1, X0, 0
	615 Move X0, X19
	616 Call NetworkedLootSpawnGroup.set__respawnTimer, X0, X1
	617 Move X20, [X31+288]
	618 Move X19, [X31+296]
	619 Move X22, [X31+272]
	620 Move X21, [X31+280]
	621 Move X24, [X31+256]
	622 Move X23, [X31+264]
	623 Move X26, [X31+240]
	624 Move X25, [X31+248]
	625 Move X28, [X31+224]
	626 Move X27, [X31+232]
	627 Move X29, [X31+208]
	628 Move X30, [X31+216]
	629 Move V8, [X31+192]
	630 Add X31, X31, 304
	631 Return 
	632 Move X8, 0x229C000
	633 Move X8, [X8+2328]
	634 Add X1, X31, 104
	635 Move [X31+104], S8
	636 Move X0, [X8]
	637 Call 0x1B6F900
	638 Move X8, 0x229D000
	639 Move X8, [X8+3256]
	640 Move X1, X0
	641 Move X2, X31
	642 Move X8, [X8]
	643 Move X0, X8
	644 Call String.Format, X0, X1
	645 Move X8, 0x229C000
	646 Move X8, [X8+1576]
	647 Move X20, X0
	648 Move X8, [X8]
	649 Move W9, [X8+224]
	650 Compare W9, 0
	651 JumpIfNotEqual {654}
	652 Move X0, X8
	653 Call 0x1B6F8F8
	654 Move X8, 0x229C000
	655 Move X9, 0x229C000
	656 Move X8, [X8+3080]
	657 Move X9, [X9+3264]
	658 Move W4, 163
	659 Move X0, X20
	660 Move X2, [X8]
	661 Move X3, [X9]
	662 Move X1, X31
	663 Move X5, X31
	664 Call Log.Info, X0, X1, X2, X3, X4
	665 Call 0x1B6FA1C
	666 Move X22, X31
	667 Move X23, X0
	668 Move X8, 0x229C000
	669 Move X8, [X8+3096]
	670 Move X1, [X8]
	671 Add X0, X31, 128
	672 Call Enumerator<Object>.Dispose, X0
	673 Compare X22, 0
	674 JumpIfNotEqual {677}
	675 Move X0, X23
	676 Call 0x1C8518C
	677 Move X0, X22
	678 Call 0x1B6FA14
	679 Call 0x18F56A8

Method: System.Void .ctor()

Disassembly:
	0x01CB3558 SUBS X9, X9, 0x1
	0x01CB355C ADD X10, X10, 0x10
	0x01CB3560 B.NE 0x1CB354C
	0x01CB3564 MOV X0, X21
	0x01CB3568 MOV W2, W31
	0x01CB356C BL 0x1BB4284
	0x01CB3570 B 0x1CB3580
	0x01CB3574 LDRSW X9, [X10]
	0x01CB3578 ADD X8, X8, X9, 0x4, LSL
	0x01CB357C ADD X0, X8, 0x138
	0x01CB3580 LDP X8, X1, [X0]
	0x01CB3584 MOV X0, X21
	0x01CB3588 BLR X8
	0x01CB358C CBNZ X22, 0x1CB3940
	0x01CB3590 CMP W23, 0x5
	0x01CB3594 B.EQ 0x1CB359C
	0x01CB3598 CBNZ W23, 0x1CB38D0
	0x01CB359C CBZ X20, 0x1CB38CC
	0x01CB35A0 ADRP X10, 0x229B000
	0x01CB35A4 LDR X8, [X20]
	0x01CB35A8 LDR X10, [X10 + 0xDA0]
	0x01CB35AC LDRH W9, [X8 + 0x12E]
	0x01CB35B0 LDR X1, [X10]
	0x01CB35B4 CBZ X9, 0x1CB35D8
	0x01CB35B8 LDR X10, [X8 + 0xB0]
	0x01CB35BC ADD X10, X10, 0x8
	0x01CB35C0 LDUR X11, [X10 - 0x8]
	0x01CB35C4 CMP X11, X1
	0x01CB35C8 B.EQ 0x1CB35E8
	0x01CB35CC SUBS X9, X9, 0x1
	0x01CB35D0 ADD X10, X10, 0x10
	0x01CB35D4 B.NE 0x1CB35C0
	0x01CB35D8 MOV X0, X20
	0x01CB35DC MOV W2, W31
	0x01CB35E0 BL 0x1BB4284
	0x01CB35E4 B 0x1CB35F4
	0x01CB35E8 LDRSW X9, [X10]
	0x01CB35EC ADD X8, X8, X9, 0x4, LSL
	0x01CB35F0 ADD X0, X8, 0x138
	0x01CB35F4 LDP X8, X1, [X0]
	0x01CB35F8 MOV X0, X20
	0x01CB35FC BLR X8
	0x01CB3600 MOV X20, X0
	0x01CB3604 CBZ X0, 0x1CB3948
	0x01CB3608 ADRP X23, 0x229B000
	0x01CB360C LDR X23, [X23 + 0xDA8]
	0x01CB3610 SXTW X27, W26
	0x01CB3614 LDR X8, [X20]
	0x01CB3618 LDR X1, [X25]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x2571000
	009 Move X24, 0x229C000
	010 Move X20, 0x229C000
	011 Move X22, 0x229C000
	012 Move X21, 0x229C000
	013 Move W8, [X23+1226]
	014 Move X24, [X24+3376]
	015 Move X20, [X20+3384]
	016 Move X22, [X22+3392]
	017 Move X21, [X21+3400]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x229C000
	024 Move X0, [X0+3384]
	025 Call 0x1B6F7F0
	026 Move X0, 0x229C000
	027 Move X0, [X0+3376]
	028 Call 0x1B6F7F0
	029 Move X0, 0x229C000
	030 Move X0, [X0+3400]
	031 Call 0x1B6F7F0
	032 Move X0, 0x229C000
	033 Move X0, [X0+3392]
	034 Call 0x1B6F7F0
	035 Move W8, 1
	036 Move [X23+1226], W8
	037 Move X0, [X24]
	038 Call 0x1B6FA0C
	039 Move X1, [X20]
	040 Move X20, X0
	041 Call 0x2BA2564, X0
	042 Move [X19+152], X20
	043 Move X0, [X22]
	044 Call 0x1B6FA0C
	045 Move X1, [X21]
	046 Move X20, X0
	047 Call List`1<Object>..ctor, X0
	048 Move [X19+160], X20
	049 Move X0, X19
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move X1, X31
	057 Move X30, [X31+64]
	058 Call NetworkBehaviour..ctor, X0
	059 Return 

Method: System.Void CopyBackingFieldsToState(System.Boolean param_0)

Disassembly:
	0x01CB361C LDRH W9, [X8 + 0x12E]
	0x01CB3620 CBZ X9, 0x1CB3644
	0x01CB3624 LDR X10, [X8 + 0xB0]
	0x01CB3628 ADD X10, X10, 0x8
	0x01CB362C LDUR X11, [X10 - 0x8]
	0x01CB3630 CMP X11, X1
	0x01CB3634 B.EQ 0x1CB3654
	0x01CB3638 SUBS X9, X9, 0x1
	0x01CB363C ADD X10, X10, 0x10
	0x01CB3640 B.NE 0x1CB362C
	0x01CB3644 MOV X0, X20
	0x01CB3648 MOV W2, W31
	0x01CB364C BL 0x1BB4284
	0x01CB3650 B 0x1CB3660
	0x01CB3654 LDRSW X9, [X10]
	0x01CB3658 ADD X8, X8, X9, 0x4, LSL
	0x01CB365C ADD X0, X8, 0x138
	0x01CB3660 LDP X8, X1, [X0]
	0x01CB3664 MOV X0, X20
	0x01CB3668 BLR X8
	0x01CB366C TBZ X0, 0x0, 0x1CB3820
	0x01CB3670 LDR X8, [X20]
	0x01CB3674 LDR X1, [X23]
	0x01CB3678 LDRH W9, [X8 + 0x12E]
	0x01CB367C CBZ X9, 0x1CB36A0
	0x01CB3680 LDR X10, [X8 + 0xB0]
	0x01CB3684 ADD X10, X10, 0x8
	0x01CB3688 LDUR X11, [X10 - 0x8]
	0x01CB368C CMP X11, X1
	0x01CB3690 B.EQ 0x1CB36B0
	0x01CB3694 SUBS X9, X9, 0x1
	0x01CB3698 ADD X10, X10, 0x10
	0x01CB369C B.NE 0x1CB3688
	0x01CB36A0 MOV X0, X20
	0x01CB36A4 MOV W2, W31
	0x01CB36A8 BL 0x1BB4284
	0x01CB36AC B 0x1CB36BC
	0x01CB36B0 LDRSW X9, [X10]
	0x01CB36B4 ADD X8, X8, X9, 0x4, LSL
	0x01CB36B8 ADD X0, X8, 0x138
	0x01CB36BC LDP X8, X1, [X0]
	0x01CB36C0 MOV X0, X20
	0x01CB36C4 BLR X8
	0x01CB36C8 LDR X8, [X19 + 0x60]
	0x01CB36CC CBZ X8, 0x1CB3918
	0x01CB36D0 LDR W8, [X8 + 0x18]
	0x01CB36D4 CMP W26, W8
	0x01CB36D8 B.GE 0x1CB3820
	0x01CB36DC MOV X22, X0
	0x01CB36E0 CBZ X0, 0x1CB391C
	0x01CB36E4 MOV X0, X22
	0x01CB36E8 MOV X1, X31
	0x01CB36EC BL 0x1D05A74
	0x01CB36F0 TBNZ X0, 0x0, 0x1CB3614
	0x01CB36F4 LDR X8, [X19 + 0x60]
	0x01CB36F8 CBZ X8, 0x1CB3928
	0x01CB36FC LDR W9, [X8 + 0x18]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X21, 0x2571000
	008 Move X20, 0x229C000
	009 Move W8, [X21+1227]
	010 Move X20, [X20+448]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x229C000
	017 Move X0, [X0+3408]
	018 Call 0x1B6F7F0
	019 Move X0, 0x229C000
	020 Move X0, [X0+448]
	021 Call 0x1B6F7F0
	022 Move X0, 0x229C000
	023 Move X0, [X0+3416]
	024 Call 0x1B6F7F0
	025 Move W8, 1
	026 Move [X21+1227], W8
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Move X22, 0x229C000
	029 Move X21, 0x229C000
	030 Move X22, [X22+3416]
	031 Move X21, [X21+3408]
	032 Move X0, X19
	033 Call NetworkedLootSpawnGroup.set__groupID, X0, X1
	034 Add X8, X31, 32
	035 Move X0, X19
	036 Call NetworkedLootSpawnGroup.get__spawnedLoot, X0
	037 Move V0, [X31+2]
	038 Move X8, [X31+48]
	039 Move X0, [X20]
	040 Move [X31], V0
	041 Move [X31+16], X8
	042 Move W8, [X0+224]
	043 Move X20, [X19+136]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1B6F8F8
	047 Move X2, [X22]
	048 Move V0, [X31]
	049 Move X8, [X31+16]
	050 Move X3, [X21]
	051 Add X0, X31, 32
	052 Move X1, X20
	053 Move [X31+2], V0
	054 Move [X31+48], X8
	055 Call NetworkBehaviourUtils.InitializeNetworkArray, X0, X1, X2
	056 Move W1, [X19+144]
	057 Move X0, X19
	058 Call NetworkedLootSpawnGroup.set__respawnTimer, X0, X1
	059 Move X20, [X31+96]
	060 Move X19, [X31+104]
	061 Move X22, [X31+80]
	062 Move X21, [X31+88]
	063 Move X30, [X31+64]
	064 Add X31, X31, 112
	065 Return 

Method: System.Void CopyStateToBackingFields()

Disassembly:
	0x01CB3700 CMP W26, W9
	0x01CB3704 B.CS 0x1CB3924
	0x01CB3708 ADD X8, X8, X27, 0x3, LSL
	0x01CB370C LDR X21, [X8 + 0x20]
	0x01CB3710 MOV X0, X22
	0x01CB3714 MOV X1, X31
	0x01CB3718 BL 0x3A9B084
	0x01CB371C CBZ X0, 0x1CB3934
	0x01CB3720 MOV X1, X31
	0x01CB3724 BL 0x3AA7658
	0x01CB3728 LDRB W8, [X19 + 0x50]
	0x01CB372C MOV V8.16B, V0.16B
	0x01CB3730 MOV V9.16B, V2.16B
	0x01CB3734 CBZ W8, 0x1CB3758
	0x01CB3738 MOV X0, X19
	0x01CB373C MOV X1, X31
	0x01CB3740 BL 0x3A9B084
	0x01CB3744 CBZ X0, 0x1CB3938
	0x01CB3748 MOV X1, X31
	0x01CB374C BL 0x3AA7658
	0x01CB3750 FSUB S8, S8, S0
	0x01CB3754 FSUB S9, S9, S2
	0x01CB3758 MOV X0, X22
	0x01CB375C MOV X1, X31
	0x01CB3760 BL 0x3A9B084
	0x01CB3764 CBZ X0, 0x1CB392C
	0x01CB3768 MOV X1, X31
	0x01CB376C BL 0x3AA7658
	0x01CB3770 MOV V10.16B, V0.16B
	0x01CB3774 MOV V11.16B, V1.16B
	0x01CB3778 MOV V12.16B, V2.16B
	0x01CB377C MOV X0, X19
	0x01CB3780 MOV X1, X31
	0x01CB3784 BL 0x3A9B084
	0x01CB3788 CBZ X0, 0x1CB3930
	0x01CB378C MOV X1, X31
	0x01CB3790 BL 0x3AA7658
	0x01CB3794 LDR V3, [X19 + 0x54]
	0x01CB3798 FSUB S0, S10, S0
	0x01CB379C FSUB S1, S11, S1
	0x01CB37A0 FSUB S2, S12, S2
	0x01CB37A4 FMUL S0, S0, S0
	0x01CB37A8 FMUL S1, S1, S1
	0x01CB37AC FADD S0, S0, S1
	0x01CB37B0 FMUL S1, S2, S2
	0x01CB37B4 FADD S0, S1, S0
	0x01CB37B8 FMUL S1, S3, S3
	0x01CB37BC FCMP S0, S1

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X21, 0x2571000
	007 Move X20, 0x229C000
	008 Move W8, [X21+1228]
	009 Move X20, [X20+448]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x229C000
	016 Move X0, [X0+3424]
	017 Call 0x1B6F7F0
	018 Move X0, 0x229C000
	019 Move X0, [X0+448]
	020 Call 0x1B6F7F0
	021 Move W8, 1
	022 Move [X21+1228], W8
	023 Move X21, 0x229C000
	024 Move X21, [X21+3424]
	025 Move X0, X19
	026 Call NetworkedLootSpawnGroup.get__groupID, X0
	027 NotImplemented "Instruction STRH not yet implemented."
	028 Add X8, X31, 32
	029 Move X0, X19
	030 Call NetworkedLootSpawnGroup.get__spawnedLoot, X0
	031 Move V0, [X31+2]
	032 Move X8, [X31+48]
	033 Move X0, [X20]
	034 Move [X31], V0
	035 Move [X31+16], X8
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1B6F8F8
	040 Move V0, [X31]
	041 Move X8, [X31+16]
	042 Move X2, [X21]
	043 Add X1, X19, 136
	044 Add X0, X31, 32
	045 Move [X31+2], V0
	046 Move [X31+48], X8
	047 Call NetworkBehaviourUtils.CopyFromNetworkArray, X0, X1
	048 Move X0, X19
	049 Call NetworkedLootSpawnGroup.get__respawnTimer, X0
	050 Move [X19+144], W0
	051 Move X20, [X31+80]
	052 Move X19, [X31+88]
	053 Move X30, [X31+64]
	054 Move X21, [X31+72]
	055 Add X31, X31, 96
	056 Return 

