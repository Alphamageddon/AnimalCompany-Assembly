Type: AnimalCompany.NetworkedLootSpawnGroup

Method: System.Int16 get__groupID()

Disassembly:
	0x01DAC398 CBZ X0, 0x1DAC434
	0x01DAC39C LDR X8, [X0 + 0x18]
	0x01DAC3A0 CBZ X8, 0x1DAC434
	0x01DAC3A4 LDR W8, [X8 + 0x18]
	0x01DAC3A8 CMP W8, W21, UXTB
	0x01DAC3AC B.LE 0x1DAC428
	0x01DAC3B0 LDR X0, [X19 + 0xA0]
	0x01DAC3B4 CBZ X0, 0x1DAC434
	0x01DAC3B8 LDR X2, [X23]
	0x01DAC3BC MOV W1, W20
	0x01DAC3C0 BL 0x301BCCC
	0x01DAC3C4 CBZ X0, 0x1DAC434
	0x01DAC3C8 LDR W10, [X0 + 0x1C]
	0x01DAC3CC LDR X8, [X0 + 0x10]
	0x01DAC3D0 LDR X9, [X25]
	0x01DAC3D4 ADD W10, W10, 0x1
	0x01DAC3D8 STR W10, [X0 + 0x1C]
	0x01DAC3DC CBZ X8, 0x1DAC434
	0x01DAC3E0 LDRSW X10, [X0 + 0x18]
	0x01DAC3E4 LDR W11, [X8 + 0x18]
	0x01DAC3E8 CMP W10, W11
	0x01DAC3EC B.CS 0x1DAC404
	0x01DAC3F0 ADD W9, W10, 0x1
	0x01DAC3F4 ADD X8, X8, X10

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 NotImplemented "Instruction LDRH not yet implemented."
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0
	010 Move X0, 0x2348000
	011 Move X0, [X0+1456]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0x234C000
	016 Move X0, [X0+1712]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x234C000
	023 Move X0, [X0+1720]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: System.Void set__groupID(System.Int16 value)

Disassembly:
	0x01DAC3F8 STR W9, [X0 + 0x18]
	0x01DAC3FC STRB W21, [X8 + 0x20]
	0x01DAC400 B 0x1DAC418
	0x01DAC404 LDR X8, [X9 + 0x20]
	0x01DAC408 MOV W1, W21
	0x01DAC40C LDR X8, [X8 + 0xC0]
	0x01DAC410 LDR X2, [X8 + 0x70]
	0x01DAC414 BL 0x2F67F0C
	0x01DAC418 LDR X8, [X19 + 0xA8]
	0x01DAC41C ADD W21, W21, 0x1
	0x01DAC420 CBNZ X8, 0x1DAC384
	0x01DAC424 B 0x1DAC434
	0x01DAC428 LDR X9, [X19 + 0xA8]
	0x01DAC42C ADD W8, W20, 0x1
	0x01DAC430 CBNZ X9, 0x1DAC2C0
	0x01DAC434 BL 0x1C16F20
	0x01DAC438 LDP X20, X19, [X31 + 0x50]
	0x01DAC43C LDP X22, X21, [X31 + 0x40]
	0x01DAC440 LDP X24, X23, [X31 + 0x30]
	0x01DAC444 LDP X26, X25, [X31 + 0x20]
	0x01DAC448 LDP X28, X27, [X31 + 0x10]
	0x01DAC44C LDR X30, [X31], #0x60
	0x01DAC450 RET
	0x01DAC454 STR X30, [X31 - 0x40]!

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 NotImplemented "Instruction STRH not yet implemented."
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 
	010 Move X0, 0x2348000
	011 Move X0, [X0+1456]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0x234C000
	016 Move X0, [X0+1712]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x234C000
	023 Move X0, [X0+1728]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: Fusion.NetworkArray`1<AnimalCompany.SpawnedLoot> get__spawnedLoot()

Disassembly:
	0x01DAC458 STP X24, X23, [X31 + 0x10]
	0x01DAC45C STP X22, X21, [X31 + 0x20]
	0x01DAC460 STP X20, X19, [X31 + 0x30]
	0x01DAC464 ADRP X23, 0x262C000
	0x01DAC468 ADRP X24, 0x234B000
	0x01DAC46C ADRP X20, 0x234B000
	0x01DAC470 ADRP X22, 0x234B000
	0x01DAC474 ADRP X21, 0x234B000
	0x01DAC478 LDRB W8, [X23 + 0xAD4]
	0x01DAC47C LDR X24, [X24 + 0x810]
	0x01DAC480 LDR X20, [X20 + 0x818]
	0x01DAC484 LDR X22, [X22 + 0x820]
	0x01DAC488 LDR X21, [X21 + 0x828]
	0x01DAC48C MOV X19, X0
	0x01DAC490 TBNZ X8, 0x0, 0x1DAC4CC
	0x01DAC494 ADRP X0, 0x234B000
	0x01DAC498 LDR X0, [X0 + 0x818]
	0x01DAC49C BL 0x1C16CF4
	0x01DAC4A0 ADRP X0, 0x234B000
	0x01DAC4A4 LDR X0, [X0 + 0x810]
	0x01DAC4A8 BL 0x1C16CF4
	0x01DAC4AC ADRP X0, 0x234B000
	0x01DAC4B0 LDR X0, [X0 + 0x828]
	0x01DAC4B4 BL 0x1C16CF4
	0x01DAC4B8 ADRP X0, 0x234B000
	0x01DAC4BC LDR X0, [X0 + 0x820]
	0x01DAC4C0 BL 0x1C16CF4
	0x01DAC4C4 MOVZ W8, 0x1
	0x01DAC4C8 STRB W8, [X23 + 0xAD4]
	0x01DAC4CC LDR X0, [X24]
	0x01DAC4D0 BL 0x1C16F10
	0x01DAC4D4 LDR X1, [X20]
	0x01DAC4D8 MOV X20, X0
	0x01DAC4DC BL 0x2D59408
	0x01DAC4E0 STR X20, [X19 + 0x98]
	0x01DAC4E4 LDR X0, [X22]
	0x01DAC4E8 BL 0x1C16F10
	0x01DAC4EC LDR X1, [X21]
	0x01DAC4F0 MOV X20, X0
	0x01DAC4F4 BL 0x301B7C4
	0x01DAC4F8 STR X20, [X19 + 0xA0]
	0x01DAC4FC MOV X0, X19
	0x01DAC500 LDP X20, X19, [X31 + 0x30]
	0x01DAC504 LDP X22, X21, [X31 + 0x20]
	0x01DAC508 LDP X24, X23, [X31 + 0x10]
	0x01DAC50C MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x262D000
	006 Move W9, [X21+2768]
	007 Move X20, X0
	008 Move X19, X8
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x234C000
	014 Move X0, [X0+1736]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2768], W8
	018 Move X20, [X20+80]
	019 Compare X20, 0
	020 JumpIfEqual {39}
	021 Move X21, 0x234C000
	022 Move X21, [X21+1736]
	023 Move X0, X31
	024 Call ReaderWriter@AnimalCompany_SpawnedLoot.GetInstance
	025 Move X3, X0
	026 Move [X19+8], X31
	027 Move [X19+16], X31
	028 Move X4, [X21]
	029 Add X1, X20, 4
	030 Move [X19], X31
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move W2, 64
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Call NetworkArray`1<SpawnedLoot>..ctor, X0, X1, X2, X3
	038 Return X0
	039 Move X0, 0x2348000
	040 Move X0, [X0+1456]
	041 Call 0x1C17D08
	042 Call 0x1C17F10
	043 Move X19, X0
	044 Move X0, 0x234C000
	045 Move X0, [X0+1744]
	046 Call 0x1C17D08
	047 Move X1, X0
	048 Move X0, X19
	049 Move X2, X31
	050 Call InvalidOperationException..ctor, X0, X1
	051 Move X0, 0x234C000
	052 Move X0, [X0+1752]
	053 Call 0x1C17D08
	054 Move X1, X0
	055 Move X0, X19
	056 Call 0x1C17DEC

Method: Fusion.TickTimer get__respawnTimer()

Disassembly:
	0x01DAC510 LDR X30, [X31], #0x40
	0x01DAC514 B 0x1E74F04
	0x01DAC518 SUB X31, X31, 0x70
	0x01DAC51C STR X30, [X31 + 0x40]
	0x01DAC520 STP X22, X21, [X31 + 0x50]
	0x01DAC524 STP X20, X19, [X31 + 0x60]
	0x01DAC528 ADRP X21, 0x262C000
	0x01DAC52C ADRP X20, 0x234A000
	0x01DAC530 LDRB W8, [X21 + 0xAD5]
	0x01DAC534 LDR X20, [X20 + 0xA78]
	0x01DAC538 MOV X19, X0
	0x01DAC53C TBNZ X8, 0x0, 0x1DAC56C
	0x01DAC540 ADRP X0, 0x234B000
	0x01DAC544 LDR X0, [X0 + 0x830]
	0x01DAC548 BL 0x1C16CF4
	0x01DAC54C ADRP X0, 0x234A000
	0x01DAC550 LDR X0, [X0 + 0xA78]
	0x01DAC554 BL 0x1C16CF4
	0x01DAC558 ADRP X0, 0x234B000
	0x01DAC55C LDR X0, [X0 + 0x838]
	0x01DAC560 BL 0x1C16CF4
	0x01DAC564 MOVZ W8, 0x1
	0x01DAC568 STRB W8, [X21 + 0xAD5]
	0x01DAC56C LDRH W1, [X19 + 0x80]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move W0, [X8+772]
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0
	010 Move X0, 0x2348000
	011 Move X0, [X0+1456]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0x234C000
	016 Move X0, [X0+1760]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x234C000
	023 Move X0, [X0+1768]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: System.Void set__respawnTimer(Fusion.TickTimer value)

Disassembly:
	0x01DAC570 ADRP X22, 0x234B000
	0x01DAC574 ADRP X21, 0x234B000
	0x01DAC578 LDR X22, [X22 + 0x838]
	0x01DAC57C LDR X21, [X21 + 0x830]
	0x01DAC580 MOV X0, X19
	0x01DAC584 BL 0x1DAB3F8
	0x01DAC588 ADD X8, X31, 0x20
	0x01DAC58C MOV X0, X19
	0x01DAC590 BL 0x1DAB458
	0x01DAC594 LDR V0, [X31 + 0x2]
	0x01DAC598 LDR X8, [X31 + 0x30]
	0x01DAC59C LDR X0, [X20]
	0x01DAC5A0 STR V0, [X31]
	0x01DAC5A4 STR X8, [X31 + 0x10]
	0x01DAC5A8 LDR W8, [X0 + 0xE0]
	0x01DAC5AC LDR X20, [X19 + 0x88]
	0x01DAC5B0 CBNZ W8, 0x1DAC5B8
	0x01DAC5B4 BL 0x1C16DFC
	0x01DAC5B8 LDR X2, [X22]
	0x01DAC5BC LDR V0, [X31]
	0x01DAC5C0 LDR X8, [X31 + 0x10]
	0x01DAC5C4 LDR X3, [X21]
	0x01DAC5C8 ADD X0, X31, 0x20
	0x01DAC5CC MOV X1, X20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move [X8+772], W1
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 
	010 Move X0, 0x2348000
	011 Move X0, [X0+1456]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0x234C000
	016 Move X0, [X0+1760]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x234C000
	023 Move X0, [X0+1776]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: System.Void Spawned()

Disassembly:
	0x01DAC5D0 STR V0, [X31 + 0x2]
	0x01DAC5D4 STR X8, [X31 + 0x30]
	0x01DAC5D8 BL 0x2229024
	0x01DAC5DC LDR W1, [X19 + 0x90]
	0x01DAC5E0 MOV X0, X19
	0x01DAC5E4 BL 0x1DAB570
	0x01DAC5E8 LDP X20, X19, [X31 + 0x60]
	0x01DAC5EC LDP X22, X21, [X31 + 0x50]
	0x01DAC5F0 LDR X30, [X31 + 0x40]
	0x01DAC5F4 ADD X31, X31, 0x70
	0x01DAC5F8 RET
	0x01DAC5FC SUB X31, X31, 0x60
	0x01DAC600 STP X30, X21, [X31 + 0x40]
	0x01DAC604 STP X20, X19, [X31 + 0x50]
	0x01DAC608 ADRP X21, 0x262C000
	0x01DAC60C ADRP X20, 0x234A000
	0x01DAC610 LDRB W8, [X21 + 0xAD6]
	0x01DAC614 LDR X20, [X20 + 0xA78]
	0x01DAC618 MOV X19, X0
	0x01DAC61C TBNZ X8, 0x0, 0x1DAC640
	0x01DAC620 ADRP X0, 0x234B000
	0x01DAC624 LDR X0, [X0 + 0x840]
	0x01DAC628 BL 0x1C16CF4
	0x01DAC62C ADRP X0, 0x234A000
	0x01DAC630 LDR X0, [X0 + 0xA78]
	0x01DAC634 BL 0x1C16CF4
	0x01DAC638 MOVZ W8, 0x1
	0x01DAC63C STRB W8, [X21 + 0xAD6]
	0x01DAC640 ADRP X21, 0x234B000
	0x01DAC644 LDR X21, [X21 + 0x840]
	0x01DAC648 MOV X0, X19
	0x01DAC64C BL 0x1DAB398
	0x01DAC650 STRH W0, [X19 + 0x80]
	0x01DAC654 ADD X8, X31, 0x20
	0x01DAC658 MOV X0, X19
	0x01DAC65C BL 0x1DAB458
	0x01DAC660 LDR V0, [X31 + 0x2]
	0x01DAC664 LDR X8, [X31 + 0x30]
	0x01DAC668 LDR X0, [X20]
	0x01DAC66C STR V0, [X31]
	0x01DAC670 STR X8, [X31 + 0x10]
	0x01DAC674 LDR W8, [X0 + 0xE0]
	0x01DAC678 CBNZ W8, 0x1DAC680
	0x01DAC67C BL 0x1C16DFC
	0x01DAC680 LDR V0, [X31]
	0x01DAC684 LDR X8, [X31 + 0x10]
	0x01DAC688 LDR X2, [X21]
	0x01DAC68C ADD X1, X19, 0x88
	0x01DAC690 ADD X0, X31, 0x20
	0x01DAC694 STR V0, [X31 + 0x2]
	0x01DAC698 STR X8, [X31 + 0x30]
	0x01DAC69C BL 0x2227FC0
	0x01DAC6A0 MOV X0, X19
	0x01DAC6A4 BL 0x1DAB510
	0x01DAC6A8 STR W0, [X19 + 0x90]
	0x01DAC6AC LDP X20, X19, [X31 + 0x50]
	0x01DAC6B0 LDP X30, X21, [X31 + 0x40]
	0x01DAC6B4 ADD X31, X31, 0x60
	0x01DAC6B8 RET
	0x01DAC6BC STR D10, [X31 - 0x50]!
	0x01DAC6C0 STP D9, D8, [X31 + 0x10]
	0x01DAC6C4 STP X30, X23, [X31 + 0x20]
	0x01DAC6C8 STP X22, X21, [X31 + 0x30]
	0x01DAC6CC STP X20, X19, [X31 + 0x40]
	0x01DAC6D0 ADRP X20, 0x262C000
	0x01DAC6D4 LDRB W8, [X20 + 0xAD7]
	0x01DAC6D8 MOV X19, X0
	0x01DAC6DC TBNZ X8, 0x0, 0x1DAC73C
	0x01DAC6E0 ADRP X0, 0x234A000
	0x01DAC6E4 LDR X0, [X0 + 0xB08]
	0x01DAC6E8 BL 0x1C16CF4
	0x01DAC6EC ADRP X0, 0x234B000
	0x01DAC6F0 LDR X0, [X0 + 0x848]
	0x01DAC6F4 BL 0x1C16CF4
	0x01DAC6F8 ADRP X0, 0x234B000
	0x01DAC6FC LDR X0, [X0 + 0x850]
	0x01DAC700 BL 0x1C16CF4
	0x01DAC704 ADRP X0, 0x234A000
	0x01DAC708 LDR X0, [X0 + 0xD18]
	0x01DAC70C BL 0x1C16CF4
	0x01DAC710 ADRP X0, 0x234B000
	0x01DAC714 LDR X0, [X0 + 0x858]
	0x01DAC718 BL 0x1C16CF4
	0x01DAC71C ADRP X0, 0x234B000
	0x01DAC720 LDR X0, [X0 + 0x860]
	0x01DAC724 BL 0x1C16CF4
	0x01DAC728 ADRP X0, 0x2349000
	0x01DAC72C LDR X0, [X0 + 0x9A0]
	0x01DAC730 BL 0x1C16CF4
	0x01DAC734 MOVZ W8, 0x1
	0x01DAC738 STRB W8, [X20 + 0xAD7]
	0x01DAC73C MOV X0, X31
	0x01DAC740 BL 0x3C3C6C4
	0x01DAC744 LDR V1, [X19 + 0x28]
	0x01DAC748 ADRP X8, 0xFFFFFFFFFED3E000
	0x01DAC74C LDR V2, [X8 + 0x35C]
	0x01DAC750 FSUB S0, S0, S1
	0x01DAC754 FCMP S0, S2
	0x01DAC758 B.LE 0x1DACA4C
	0x01DAC75C MOV X0, X19
	0x01DAC760 MOV X1, X31
	0x01DAC764 BL 0x3C32E90
	0x01DAC768 CBZ X0, 0x1DACA64
	0x01DAC76C MOV X1, X31
	0x01DAC770 BL 0x3C3F58C
	0x01DAC774 MOV X0, X31
	0x01DAC778 MOV V8.16B, V0.16B
	0x01DAC77C MOV V9.16B, V1.16B
	0x01DAC780 MOV V10.16B, V2.16B
	0x01DAC784 BL 0x3C047F8
	0x01DAC788 CBZ X0, 0x1DACA64
	0x01DAC78C MOV X1, X31
	0x01DAC790 BL 0x3C32E90
	0x01DAC794 CBZ X0, 0x1DACA64
	0x01DAC798 MOV X1, X31
	0x01DAC79C BL 0x3C3F58C
	0x01DAC7A0 FSUB S0, S8, S0
	0x01DAC7A4 FSUB S1, S9, S1
	0x01DAC7A8 FSUB S2, S10, S2
	0x01DAC7AC FMUL S0, S0, S0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x262D000
	007 Move W8, [X20+2769]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {45}
	013 Move X0, 0x2348000
	014 Move X0, [X0+1808]
	015 Call 0x1C17CF4
	016 Move X0, 0x2348000
	017 Move X0, [X0+1816]
	018 Call 0x1C17CF4
	019 Move X0, 0x2348000
	020 Move X0, [X0+1824]
	021 Call 0x1C17CF4
	022 Move X0, 0x234C000
	023 Move X0, [X0+1576]
	024 Call 0x1C17CF4
	025 Move X0, 0x2348000
	026 Move X0, [X0+1928]
	027 Call 0x1C17CF4
	028 Move X0, 0x234C000
	029 Move X0, [X0+1552]
	030 Call 0x1C17CF4
	031 Move X0, 0x234C000
	032 Move X0, [X0+1784]
	033 Call 0x1C17CF4
	034 Move X0, 0x234C000
	035 Move X0, [X0+1792]
	036 Call 0x1C17CF4
	037 Move X0, 0x234C000
	038 Move X0, [X0+1800]
	039 Call 0x1C17CF4
	040 Move X0, 0x234C000
	041 Move X0, [X0+1808]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X20+2769], W8
	045 Move X0, X19
	046 Move X1, X31
	047 Call NetworkBehaviour.Spawned, X0
	048 Move X0, [X19+64]
	049 Compare X0, 0
	050 JumpIfEqual {135}
	051 Move W8, [X0+96]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 2
	054 Compare TEMP, 2
	055 JumpIfEqual {135}
	056 Move X1, X31
	057 Call NetworkObject.get_HasStateAuthority, X0
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {135}
	062 Move X0, X19
	063 Call NetworkedLootSpawnGroup.get__groupID, X0
	064 Move X8, 0x234C000
	065 Move X8, [X8+1552]
	066 Move W20, W0
	067 Add X21, X19, 168
	068 Move X0, [X8]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move W0, W20
	074 Move X1, X21
	075 Call LootSpawnGroup.TryGetSpawnGroup, X0, X1
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {86}
	080 Move X0, X19
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X30, [X31+16]
	084 Move X21, [X31+24]
	085 Add X31, X31, 48
	086 Move X8, 0x2348000
	087 Move X8, [X8+1824]
	088 Move X0, [X8]
	089 Call 0x1C17F10
	090 Move X8, 0x2348000
	091 Move X8, [X8+1816]
	092 Move X20, X0
	093 Move X1, [X8]
	094 Call Dictionary`2<Object, Object>..ctor, X0
	095 Move X0, X19
	096 Call NetworkedLootSpawnGroup.get__groupID, X0
	097 Move X8, 0x234C000
	098 Move X8, [X8+1576]
	099 NotImplemented "Instruction STRH not yet implemented."
	100 Add X1, X31, 12
	101 Move X8, [X8]
	102 Move X0, X8
	103 Call 0x1C17E04
	104 Compare X20, 0
	105 JumpIfEqual {141}
	106 Move X8, 0x234C000
	107 Move X9, 0x2348000
	108 Move X8, [X8+1792]
	109 Move X9, [X9+1808]
	110 Move X2, X0
	111 Move X0, X20
	112 Move X1, [X8]
	113 Move X3, [X9]
	114 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	115 Move X8, 0x2348000
	116 Move X8, [X8+1928]
	117 Move X0, [X8]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Move X8, 0x234C000
	123 Move X9, 0x234C000
	124 Move X10, 0x234C000
	125 Move X8, [X8+1800]
	126 Move X9, [X9+1808]
	127 Move X10, [X10+1784]
	128 Move W4, 56
	129 Move X0, [X8]
	130 Move X2, [X9]
	131 Move X3, [X10]
	132 Move X1, X20
	133 Move X5, X31
	134 Call Log.Error, X0, X1, X2, X3, X4
	135 Move X20, [X31+32]
	136 Move X19, [X31+40]
	137 Move X30, [X31+16]
	138 Move X21, [X31+24]
	139 Add X31, X31, 48
	140 Return 
	141 Call 0x1C17F20

Method: System.Void FixedUpdateNetwork()

Disassembly:
	0x01DAD140 LDRSW X9, [X10]
	0x01DAD144 ADD X8, X8, X9, 0x4, LSL
	0x01DAD148 ADD X0, X8, 0x138
	0x01DAD14C LDP X8, X1, [X0]
	0x01DAD150 MOV X0, X20
	0x01DAD154 BLR X8
	0x01DAD158 CBNZ X22, 0x1DAD164
	0x01DAD15C MOV X0, X21
	0x01DAD160 BL 0x1D2C690
	0x01DAD164 MOV X0, X22
	0x01DAD168 BL 0x1C16F18
	0x01DAD16C BL 0x1990590
	0x01DAD170 STR D12, [X31 - 0x90]!
	0x01DAD174 STP D11, D10, [X31 + 0x10]
	0x01DAD178 STP D9, D8, [X31 + 0x20]
	0x01DAD17C STP X29, X30, [X31 + 0x30]
	0x01DAD180 STP X28, X27, [X31 + 0x40]
	0x01DAD184 STP X26, X25, [X31 + 0x50]
	0x01DAD188 STP X24, X23, [X31 + 0x60]
	0x01DAD18C STP X22, X21, [X31 + 0x70]
	0x01DAD190 STP X20, X19, [X31 + 0x80]
	0x01DAD194 ADRP X22, 0x262B000
	0x01DAD198 LDRB W8, [X22 + 0xADE]
	0x01DAD19C MOV X20, X2
	0x01DAD1A0 MOV X21, X1

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call NetworkBehaviour.FixedUpdateNetwork, X0
	007 Move X0, [X19+64]
	008 Compare X0, 0
	009 JumpIfEqual {34}
	010 Move W8, [X0+96]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 2
	013 Compare TEMP, 2
	014 JumpIfEqual {34}
	015 Move X1, X31
	016 Call NetworkObject.get_HasStateAuthority, X0
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {34}
	021 Move X0, X19
	022 Call NetworkedLootSpawnGroup.get__respawnTimer, X0
	023 Move [X31+8], W0
	024 Move X1, [X19+56]
	025 Add X0, X31, 8
	026 Move X2, X31
	027 Call TickTimer.ExpiredOrNotRunning, X0, X1
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {34}
	032 Move X0, X19
	033 Call NetworkedLootSpawnGroup.CheckAndSpawnLoot, X0
	034 Move X30, [X31+16]
	035 Move X19, [X31+24]
	036 Add X31, X31, 32
	037 Return 

Method: System.Void SetGroupID(System.Int16 id)

Disassembly:
	0x01DAC38C LDR X2, [X24]

ISIL:
	001 Call NetworkedLootSpawnGroup.set__groupID, X0, X1
	002 Return 

Method: System.Void ResetAvailableItemPoints()

Disassembly:
	0x01DAD1A4 MOV X19, X0
	0x01DAD1A8 TBNZ X8, 0x0, 0x1DAD208
	0x01DAD1AC ADRP X0, 0x234A000
	0x01DAD1B0 LDR X0, [X0 + 0x878]
	0x01DAD1B4 BL 0x1C16CF4
	0x01DAD1B8 ADRP X0, 0x2346000
	0x01DAD1BC LDR X0, [X0 + 0xE00]
	0x01DAD1C0 BL 0x1C16CF4
	0x01DAD1C4 ADRP X0, 0x234A000
	0x01DAD1C8 LDR X0, [X0 + 0x880]
	0x01DAD1CC BL 0x1C16CF4
	0x01DAD1D0 ADRP X0, 0x234A000
	0x01DAD1D4 LDR X0, [X0 + 0x888]
	0x01DAD1D8 BL 0x1C16CF4
	0x01DAD1DC ADRP X0, 0x234A000
	0x01DAD1E0 LDR X0, [X0 + 0x890]
	0x01DAD1E4 BL 0x1C16CF4
	0x01DAD1E8 ADRP X0, 0x234A000
	0x01DAD1EC LDR X0, [X0 + 0x898]
	0x01DAD1F0 BL 0x1C16CF4
	0x01DAD1F4 ADRP X0, 0x2346000
	0x01DAD1F8 LDR X0, [X0 + 0xE18]
	0x01DAD1FC BL 0x1C16CF4
	0x01DAD200 MOVZ W8, 0x1
	0x01DAD204 STRB W8, [X22 + 0xADE]
	0x01DAD208 CBZ X21, 0x1DAD8AC
	0x01DAD20C ADRP X10, 0x234A000
	0x01DAD210 LDR X8, [X21]
	0x01DAD214 LDR X10, [X10 + 0x880]
	0x01DAD218 LDRH W9, [X8 + 0x12E]
	0x01DAD21C LDR X1, [X10]
	0x01DAD220 CBZ X9, 0x1DAD244
	0x01DAD224 LDR X10, [X8 + 0xB0]
	0x01DAD228 ADD X10, X10, 0x8
	0x01DAD22C LDUR X11, [X10 - 0x8]
	0x01DAD230 CMP X11, X1
	0x01DAD234 B.EQ 0x1DAD254
	0x01DAD238 SUBS X9, X9, 0x1
	0x01DAD23C ADD X10, X10, 0x10
	0x01DAD240 B.NE 0x1DAD22C
	0x01DAD244 MOV X0, X21
	0x01DAD248 MOV W2, W31
	0x01DAD24C BL 0x1C5C788
	0x01DAD250 B 0x1DAD260
	0x01DAD254 LDRSW X9, [X10]
	0x01DAD258 ADD X8, X8, X9, 0x4, LSL
	0x01DAD25C ADD X0, X8, 0x138
	0x01DAD260 LDP X8, X1, [X0]
	0x01DAD264 ADRP X25, 0x2346000
	0x01DAD268 ADRP X24, 0x2346000
	0x01DAD26C LDR X25, [X25 + 0xE18]
	0x01DAD270 LDR X24, [X24 + 0xE00]
	0x01DAD274 MOV X0, X21
	0x01DAD278 BLR X8
	0x01DAD27C MOV X21, X0
	0x01DAD280 CBZ X0, 0x1DAD91C
	0x01DAD284 ADRP X27, 0x234A000
	0x01DAD288 ADRP X28, 0x234A000
	0x01DAD28C LDR X27, [X27 + 0x898]
	0x01DAD290 LDR X28, [X28 + 0x878]
	0x01DAD294 MOV W26, W31
	0x01DAD298 SXTW X29, W26
	0x01DAD29C LDR X8, [X21]
	0x01DAD2A0 LDR X1, [X25]
	0x01DAD2A4 LDRH W9, [X8 + 0x12E]
	0x01DAD2A8 CBZ X9, 0x1DAD2CC
	0x01DAD2AC LDR X10, [X8 + 0xB0]
	0x01DAD2B0 ADD X10, X10, 0x8
	0x01DAD2B4 LDUR X11, [X10 - 0x8]
	0x01DAD2B8 CMP X11, X1
	0x01DAD2BC B.EQ 0x1DAD2DC
	0x01DAD2C0 SUBS X9, X9, 0x1
	0x01DAD2C4 ADD X10, X10, 0x10
	0x01DAD2C8 B.NE 0x1DAD2B4
	0x01DAD2CC MOV X0, X21
	0x01DAD2D0 MOV W2, W31
	0x01DAD2D4 BL 0x1C5C788
	0x01DAD2D8 B 0x1DAD2E8
	0x01DAD2DC LDRSW X9, [X10]
	0x01DAD2E0 ADD X8, X8, X9, 0x4, LSL
	0x01DAD2E4 ADD X0, X8, 0x138
	0x01DAD2E8 LDP X8, X1, [X0]
	0x01DAD2EC MOV X0, X21
	0x01DAD2F0 BLR X8
	0x01DAD2F4 TBZ X0, 0x0, 0x1DAD508
	0x01DAD2F8 LDR X8, [X21]
	0x01DAD2FC LDR X1, [X27]
	0x01DAD300 LDRH W9, [X8 + 0x12E]
	0x01DAD304 CBZ X9, 0x1DAD328
	0x01DAD308 LDR X10, [X8 + 0xB0]
	0x01DAD30C ADD X10, X10, 0x8
	0x01DAD310 LDUR X11, [X10 - 0x8]
	0x01DAD314 CMP X11, X1
	0x01DAD318 B.EQ 0x1DAD338
	0x01DAD31C SUBS X9, X9, 0x1
	0x01DAD320 ADD X10, X10, 0x10
	0x01DAD324 B.NE 0x1DAD310
	0x01DAD328 MOV X0, X21
	0x01DAD32C MOV W2, W31
	0x01DAD330 BL 0x1C5C788
	0x01DAD334 B 0x1DAD344
	0x01DAD338 LDRSW X9, [X10]
	0x01DAD33C ADD X8, X8, X9, 0x4, LSL
	0x01DAD340 ADD X0, X8, 0x138
	0x01DAD344 LDP X8, X1, [X0]
	0x01DAD348 MOV X0, X21
	0x01DAD34C BLR X8
	0x01DAD350 LDR X8, [X19 + 0x60]
	0x01DAD354 CBZ X8, 0x1DAD8D8
	0x01DAD358 LDR W8, [X8 + 0x18]
	0x01DAD35C CMP W26, W8
	0x01DAD360 B.GE 0x1DAD508
	0x01DAD364 MOV X22, X0
	0x01DAD368 CBZ X0, 0x1DAD3C0
	0x01DAD36C LDR X9, [X22]
	0x01DAD370 LDR X8, [X28]
	0x01DAD374 LDRB W11, [X9 + 0x130]
	0x01DAD378 LDRB W10, [X8 + 0x130]
	0x01DAD37C CMP W11, W10
	0x01DAD380 B.CC 0x1DAD3C0
	0x01DAD384 LDR X9, [X9 + 0xC8]
	0x01DAD388 ADD X9, X9, X10, 0x3, LSL
	0x01DAD38C LDUR X9, [X9 - 0x8]
	0x01DAD390 CMP X9, X8
	0x01DAD394 B.NE 0x1DAD3C0
	0x01DAD398 MOV X0, X22
	0x01DAD39C MOV X1, X31
	0x01DAD3A0 BL 0x1DDE3F0
	0x01DAD3A4 CMP W0, 0x4
	0x01DAD3A8 B.EQ 0x1DAD3C0
	0x01DAD3AC MOV X0, X22
	0x01DAD3B0 MOV X1, X31
	0x01DAD3B4 BL 0x1DDE3F0
	0x01DAD3B8 CMP W0, 0x5
	0x01DAD3BC B.NE 0x1DAD29C
	0x01DAD3C0 LDR X8, [X19 + 0x60]
	0x01DAD3C4 CBZ X8, 0x1DAD8E4
	0x01DAD3C8 LDR W9, [X8 + 0x18]
	0x01DAD3CC CMP W26, W9
	0x01DAD3D0 B.CS 0x1DAD8DC
	0x01DAD3D4 CBZ X22, 0x1DAD8E8
	0x01DAD3D8 ADD X8, X8, X29, 0x3, LSL
	0x01DAD3DC LDR X23, [X8 + 0x20]
	0x01DAD3E0 MOV X0, X22
	0x01DAD3E4 MOV X1, X31
	0x01DAD3E8 BL 0x3C32E90
	0x01DAD3EC CBZ X0, 0x1DAD8E0
	0x01DAD3F0 MOV X1, X31
	0x01DAD3F4 BL 0x3C3F58C
	0x01DAD3F8 LDRB W8, [X19 + 0x50]
	0x01DAD3FC MOV V8.16B, V0.16B
	0x01DAD400 MOV V9.16B, V2.16B
	0x01DAD404 CBZ W8, 0x1DAD428
	0x01DAD408 MOV X0, X19
	0x01DAD40C MOV X1, X31
	0x01DAD410 BL 0x3C32E90
	0x01DAD414 CBZ X0, 0x1DAD900
	0x01DAD418 MOV X1, X31
	0x01DAD41C BL 0x3C3F58C
	0x01DAD420 FSUB S8, S8, S0
	0x01DAD424 FSUB S9, S9, S2
	0x01DAD428 MOV X0, X22
	0x01DAD42C MOV X1, X31
	0x01DAD430 BL 0x3C32E90
	0x01DAD434 CBZ X0, 0x1DAD8EC
	0x01DAD438 MOV X1, X31
	0x01DAD43C BL 0x3C3F58C
	0x01DAD440 MOV V10.16B, V0.16B
	0x01DAD444 MOV V11.16B, V1.16B
	0x01DAD448 MOV V12.16B, V2.16B
	0x01DAD44C MOV X0, X19
	0x01DAD450 MOV X1, X31

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0x262C000
	013 Move W8, [X20+2770]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {54}
	019 Move X0, 0x234B000
	020 Move X0, [X0+2000]
	021 Call 0x1C17CF4
	022 Move X0, 0x234B000
	023 Move X0, [X0+2008]
	024 Call 0x1C17CF4
	025 Move X0, 0x234B000
	026 Move X0, [X0+2016]
	027 Call 0x1C17CF4
	028 Move X0, 0x234B000
	029 Move X0, [X0+2024]
	030 Call 0x1C17CF4
	031 Move X0, 0x234B000
	032 Move X0, [X0+2032]
	033 Call 0x1C17CF4
	034 Move X0, 0x234B000
	035 Move X0, [X0+2040]
	036 Call 0x1C17CF4
	037 Move X0, 0x234B000
	038 Move X0, [X0+1872]
	039 Call 0x1C17CF4
	040 Move X0, 0x234B000
	041 Move X0, [X0+2048]
	042 Call 0x1C17CF4
	043 Move X0, 0x234B000
	044 Move X0, [X0+1896]
	045 Call 0x1C17CF4
	046 Move X0, 0x234B000
	047 Move X0, [X0+1904]
	048 Call 0x1C17CF4
	049 Move X0, 0x234B000
	050 Move X0, [X0+2056]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X20+2770], W8
	054 Move X8, [X19+160]
	055 Compare X8, 0
	056 JumpIfEqual {181}
	057 Move W2, [X8+24]
	058 Move W9, [X8+28]
	059 Add W9, W9, 1
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move [X8+24], W31
	062 Move [X8+28], W9
	063 Move X0, [X8+16]
	064 Move W1, W31
	065 Move X3, X31
	066 Call Array.Clear, X0, X1, X2
	067 Move X9, [X19+168]
	068 Compare X9, 0
	069 JumpIfEqual {181}
	070 Move X23, 0x234B000
	071 Move X24, 0x234B000
	072 Move X25, 0x234B000
	073 Move X26, 0x234B000
	074 Move X27, 0x234B000
	075 Move X28, 0x234B000
	076 Move X23, [X23+1904]
	077 Move X24, [X24+1896]
	078 Move X25, [X25+2008]
	079 Move X26, [X26+2056]
	080 Move X27, [X27+2032]
	081 Move X28, [X28+2000]
	082 Move W8, W31
	083 Move X9, [X9+40]
	084 Compare X9, 0
	085 JumpIfEqual {181}
	086 Move W9, [X9+24]
	087 And W20, W8, 255
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X21, [X19+160]
	090 Compare X21, 0
	091 JumpIfEqual {181}
	092 Move W8, [X21+24]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X2, [X23]
	095 Move X0, X21
	096 Move W1, W20
	097 Call List`1<Object>.get_Item, X0, X1
	098 Compare X0, 0
	099 JumpIfEqual {181}
	100 Move W8, [X0+28]
	101 Add W8, W8, 1
	102 Move [X0+24], W31
	103 Move [X0+28], W8
	104 Move X0, [X26]
	105 Call 0x1C17F10
	106 Move X1, [X27]
	107 Move X22, X0
	108 Call List`1<Byte>..ctor, X0
	109 Move W10, [X21+28]
	110 Move X8, [X21+16]
	111 Move X9, [X28]
	112 Add W10, W10, 1
	113 Move [X21+28], W10
	114 Compare X8, 0
	115 JumpIfEqual {181}
	116 NotImplemented "Instruction LDRSW not yet implemented."
	117 Move W11, [X8+24]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Add W9, W10, 1
	120 Add X8, X8, X10
	121 Move [X21+24], W9
	122 Move [X8+32], X22
	123 Move X8, [X9+32]
	124 Move X0, X21
	125 Move X1, X22
	126 Move X8, [X8+192]
	127 Move X2, [X8+112]
	128 Call List`1<Object>.AddWithResize, X0, X1
	129 Move X8, [X19+168]
	130 Compare X8, 0
	131 JumpIfEqual {181}
	132 Move W21, W31
	133 Move X0, [X8+40]
	134 Compare X0, 0
	135 JumpIfEqual {181}
	136 Move X2, [X24]
	137 Move W1, W20
	138 Call List`1<Object>.get_Item, X0, X1
	139 Compare X0, 0
	140 JumpIfEqual {181}
	141 Move X8, [X0+24]
	142 Compare X8, 0
	143 JumpIfEqual {181}
	144 Move W8, [X8+24]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X0, [X19+160]
	147 Compare X0, 0
	148 JumpIfEqual {181}
	149 Move X2, [X23]
	150 Move W1, W20
	151 Call List`1<Object>.get_Item, X0, X1
	152 Compare X0, 0
	153 JumpIfEqual {181}
	154 Move W10, [X0+28]
	155 Move X8, [X0+16]
	156 Move X9, [X25]
	157 Add W10, W10, 1
	158 Move [X0+28], W10
	159 Compare X8, 0
	160 JumpIfEqual {181}
	161 NotImplemented "Instruction LDRSW not yet implemented."
	162 Move W11, [X8+24]
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Add W9, W10, 1
	165 Add X8, X8, X10
	166 Move [X0+24], W9
	167 Move [X8+32], W21
	168 Move X8, [X9+32]
	169 Move W1, W21
	170 Move X8, [X8+192]
	171 Move X2, [X8+112]
	172 Call List`1<Byte>.AddWithResize, X0, X1
	173 Move X8, [X19+168]
	174 Add W21, W21, 1
	175 Compare X8, 0
	176 JumpIfNotEqual {133}
	177 Move X9, [X19+168]
	178 Add W8, W20, 1
	179 Compare X9, 0
	180 JumpIfNotEqual {83}
	181 Call 0x1C17F20
	182 Move X20, [X31+80]
	183 Move X19, [X31+88]
	184 Move X22, [X31+64]
	185 Move X21, [X31+72]
	186 Move X24, [X31+48]
	187 Move X23, [X31+56]
	188 Move X26, [X31+32]
	189 Move X25, [X31+40]
	190 Move X28, [X31+16]
	191 Move X27, [X31+24]
	192 Move X30, [X31+96]
	193 Return 

Method: System.Void CheckAndSpawnLoot()

Disassembly:
	0x01DAC7B0 FMUL S1, S1, S1
	0x01DAC7B4 FMUL S2, S2, S2
	0x01DAC7B8 FADD S0, S0, S1
	0x01DAC7BC FADD S0, S2, S0
	0x01DAC7C0 FMOV S1, 1
	0x01DAC7C4 FCMP S0, S1
	0x01DAC7C8 B.PL 0x1DACA4C
	0x01DAC7CC ADRP X22, 0x2349000
	0x01DAC7D0 LDR X22, [X22 + 0x9A0]
	0x01DAC7D4 LDR X20, [X19 + 0x20]
	0x01DAC7D8 LDR X0, [X22]
	0x01DAC7DC LDR W8, [X0 + 0xE0]
	0x01DAC7E0 CBNZ W8, 0x1DAC7E8
	0x01DAC7E4 BL 0x1C16DFC
	0x01DAC7E8 ADRP X23, 0x262C000
	0x01DAC7EC LDRB W8, [X23 + 0xB6A]
	0x01DAC7F0 CBNZ W8, 0x1DAC808
	0x01DAC7F4 ADRP X0, 0x2349000
	0x01DAC7F8 LDR X0, [X0 + 0x9A0]
	0x01DAC7FC BL 0x1C16CF4
	0x01DAC800 MOVZ W8, 0x1
	0x01DAC804 STRB W8, [X23 + 0xB6A]
	0x01DAC808 LDR X0, [X22]
	0x01DAC80C LDR W8, [X0 + 0xE0]
	0x01DAC810 CBNZ W8, 0x1DAC81C
	0x01DAC814 BL 0x1C16DFC
	0x01DAC818 LDR X0, [X22]
	0x01DAC81C LDR X8, [X0 + 0xB8]
	0x01DAC820 LDR X0, [X8]
	0x01DAC824 CBZ X0, 0x1DACA64
	0x01DAC828 ADRP X8, 0x234B000
	0x01DAC82C LDR X8, [X8 + 0x850]
	0x01DAC830 LDR X1, [X8]
	0x01DAC834 BL 0x2B0EEFC
	0x01DAC838 LDRB W8, [X23 + 0xB6A]
	0x01DAC83C MOV X21, X0
	0x01DAC840 CBNZ W8, 0x1DAC858
	0x01DAC844 ADRP X0, 0x2349000
	0x01DAC848 LDR X0, [X0 + 0x9A0]
	0x01DAC84C BL 0x1C16CF4
	0x01DAC850 MOVZ W8, 0x1
	0x01DAC854 STRB W8, [X23 + 0xB6A]
	0x01DAC858 LDR X0, [X22]
	0x01DAC85C LDR W8, [X0 + 0xE0]
	0x01DAC860 CBNZ W8, 0x1DAC86C
	0x01DAC864 BL 0x1C16DFC
	0x01DAC868 LDR X0, [X22]
	0x01DAC86C LDR X8, [X0 + 0xB8]
	0x01DAC870 LDR X0, [X8]
	0x01DAC874 CBZ X0, 0x1DACA64
	0x01DAC878 ADRP X8, 0x234B000
	0x01DAC87C LDR X8, [X8 + 0x848]
	0x01DAC880 LDR X1, [X8]
	0x01DAC884 BL 0x2B0EE2C
	0x01DAC888 CBZ X20, 0x1DACA64
	0x01DAC88C MOV X0, X20
	0x01DAC890 MOV X1, X21
	0x01DAC894 BL 0x1DACA68
	0x01DAC898 MOV X0, X31
	0x01DAC89C BL 0x3C3C6C4
	0x01DAC8A0 MOV X0, X31
	0x01DAC8A4 STR S0, [X19 + 0x28]
	0x01DAC8A8 BL 0x3C3C6C4
	0x01DAC8AC LDR V1, [X19 + 0x2C]
	0x01DAC8B0 FSUB S0, S0, S1
	0x01DAC8B4 FMOV S1, 0.5
	0x01DAC8B8 FCMP S0, S1
	0x01DAC8BC B.LE 0x1DACA4C
	0x01DAC8C0 ADRP X21, 0x234B000
	0x01DAC8C4 LDR X21, [X21 + 0x860]
	0x01DAC8C8 LDR X20, [X19 + 0x20]
	0x01DAC8CC LDR X0, [X21]
	0x01DAC8D0 LDR W8, [X0 + 0xE0]
	0x01DAC8D4 CBNZ W8, 0x1DAC8DC
	0x01DAC8D8 BL 0x1C16DFC
	0x01DAC8DC ADRP X22, 0x262C000
	0x01DAC8E0 LDRB W8, [X22 + 0xB6B]
	0x01DAC8E4 CBNZ W8, 0x1DAC8FC
	0x01DAC8E8 ADRP X0, 0x234B000
	0x01DAC8EC LDR X0, [X0 + 0x860]
	0x01DAC8F0 BL 0x1C16CF4
	0x01DAC8F4 MOVZ W8, 0x1
	0x01DAC8F8 STRB W8, [X22 + 0xB6B]
	0x01DAC8FC LDR X0, [X21]
	0x01DAC900 LDR W8, [X0 + 0xE0]
	0x01DAC904 CBNZ W8, 0x1DAC910
	0x01DAC908 BL 0x1C16DFC
	0x01DAC90C LDR X0, [X21]
	0x01DAC910 ADRP X22, 0x234B000
	0x01DAC914 LDR X22, [X22 + 0x858]
	0x01DAC918 LDR X9, [X0 + 0xB8]
	0x01DAC91C LDR X8, [X22]
	0x01DAC920 LDR X21, [X9 + 0x8]
	0x01DAC924 LDR W10, [X8 + 0xE0]
	0x01DAC928 CBNZ W10, 0x1DAC934
	0x01DAC92C MOV X0, X8
	0x01DAC930 BL 0x1C16DFC
	0x01DAC934 ADRP X23, 0x262C000
	0x01DAC938 LDRB W8, [X23 + 0xB6C]
	0x01DAC93C CBNZ W8, 0x1DAC954
	0x01DAC940 ADRP X0, 0x234B000
	0x01DAC944 LDR X0, [X0 + 0x858]
	0x01DAC948 BL 0x1C16CF4
	0x01DAC94C MOVZ W8, 0x1
	0x01DAC950 STRB W8, [X23 + 0xB6C]
	0x01DAC954 LDR X0, [X22]
	0x01DAC958 LDR W8, [X0 + 0xE0]
	0x01DAC95C CBNZ W8, 0x1DAC968
	0x01DAC960 BL 0x1C16DFC
	0x01DAC964 LDR X0, [X22]
	0x01DAC968 CBZ X20, 0x1DACA64
	0x01DAC96C LDR X8, [X0 + 0xB8]
	0x01DAC970 MOV X0, X20
	0x01DAC974 MOV X1, X21
	0x01DAC978 LDR X2, [X8 + 0x18]
	0x01DAC97C BL 0x1DAD170
	0x01DAC980 ADRP X21, 0x234A000
	0x01DAC984 LDR X21, [X21 + 0xD18]
	0x01DAC988 LDR X20, [X19 + 0x20]
	0x01DAC98C LDR X0, [X21]
	0x01DAC990 LDR W8, [X0 + 0xE0]
	0x01DAC994 CBNZ W8, 0x1DAC99C
	0x01DAC998 BL 0x1C16DFC
	0x01DAC99C ADRP X22, 0x262C000
	0x01DAC9A0 LDRB W8, [X22 + 0xB6D]
	0x01DAC9A4 CBNZ W8, 0x1DAC9BC
	0x01DAC9A8 ADRP X0, 0x234A000
	0x01DAC9AC LDR X0, [X0 + 0xD18]
	0x01DAC9B0 BL 0x1C16CF4
	0x01DAC9B4 MOVZ W8, 0x1
	0x01DAC9B8 STRB W8, [X22 + 0xB6D]
	0x01DAC9BC LDR X0, [X21]
	0x01DAC9C0 LDR W8, [X0 + 0xE0]
	0x01DAC9C4 CBNZ W8, 0x1DAC9D0
	0x01DAC9C8 BL 0x1C16DFC
	0x01DAC9CC LDR X0, [X21]
	0x01DAC9D0 ADRP X22, 0x234A000
	0x01DAC9D4 LDR X22, [X22 + 0xB08]
	0x01DAC9D8 LDR X9, [X0 + 0xB8]
	0x01DAC9DC LDR X8, [X22]
	0x01DAC9E0 LDR X21, [X9]
	0x01DAC9E4 LDR W10, [X8 + 0xE0]
	0x01DAC9E8 CBNZ W10, 0x1DAC9F4
	0x01DAC9EC MOV X0, X8
	0x01DAC9F0 BL 0x1C16DFC
	0x01DAC9F4 ADRP X23, 0x262C000
	0x01DAC9F8 LDRB W8, [X23 + 0xB6E]
	0x01DAC9FC CBNZ W8, 0x1DACA14
	0x01DACA00 ADRP X0, 0x234A000
	0x01DACA04 LDR X0, [X0 + 0xB08]
	0x01DACA08 BL 0x1C16CF4
	0x01DACA0C MOVZ W8, 0x1
	0x01DACA10 STRB W8, [X23 + 0xB6E]
	0x01DACA14 LDR X0, [X22]
	0x01DACA18 LDR W8, [X0 + 0xE0]
	0x01DACA1C CBNZ W8, 0x1DACA28
	0x01DACA20 BL 0x1C16DFC
	0x01DACA24 LDR X0, [X22]
	0x01DACA28 CBZ X20, 0x1DACA64
	0x01DACA2C LDR X8, [X0 + 0xB8]
	0x01DACA30 MOV X0, X20
	0x01DACA34 MOV X1, X21
	0x01DACA38 LDR X2, [X8]
	0x01DACA3C BL 0x1DADB74
	0x01DACA40 MOV X0, X31
	0x01DACA44 BL 0x3C3C6C4
	0x01DACA48 STR S0, [X19 + 0x2C]
	0x01DACA4C LDP X20, X19, [X31 + 0x40]
	0x01DACA50 LDP X22, X21, [X31 + 0x30]
	0x01DACA54 LDP X30, X23, [X31 + 0x20]
	0x01DACA58 LDP D9, D8, [X31 + 0x10]
	0x01DACA5C LDR V10, [X31], #0x50
	0x01DACA60 RET
	0x01DACA64 BL 0x1C16F20
	0x01DACA68 STP D11, D10, [X31 - 0x80]!
	0x01DACA6C STP D9, D8, [X31 + 0x10]
	0x01DACA70 STP X29, X30, [X31 + 0x20]
	0x01DACA74 STP X28, X27, [X31 + 0x30]
	0x01DACA78 STP X26, X25, [X31 + 0x40]
	0x01DACA7C STP X24, X23, [X31 + 0x50]
	0x01DACA80 STP X22, X21, [X31 + 0x60]
	0x01DACA84 STP X20, X19, [X31 + 0x70]
	0x01DACA88 ADRP X21, 0x262C000
	0x01DACA8C LDRB W8, [X21 + 0xADF]
	0x01DACA90 MOV X20, X1
	0x01DACA94 MOV X19, X0
	0x01DACA98 TBNZ X8, 0x0, 0x1DACAEC
	0x01DACA9C ADRP X0, 0x2347000
	0x01DACAA0 LDR X0, [X0 + 0xE00]
	0x01DACAA4 BL 0x1C16CF4
	0x01DACAA8 ADRP X0, 0x234B000
	0x01DACAAC LDR X0, [X0 + 0x868]
	0x01DACAB0 BL 0x1C16CF4
	0x01DACAB4 ADRP X0, 0x234B000
	0x01DACAB8 LDR X0, [X0 + 0x870]
	0x01DACABC BL 0x1C16CF4
	0x01DACAC0 ADRP X0, 0x2347000
	0x01DACAC4 LDR X0, [X0 + 0xE18]
	0x01DACAC8 BL 0x1C16CF4
	0x01DACACC ADRP X0, 0x2347000
	0x01DACAD0 LDR X0, [X0 + 0x598]
	0x01DACAD4 BL 0x1C16CF4
	0x01DACAD8 ADRP X0, 0x2349000
	0x01DACADC LDR X0, [X0 + 0x7C8]
	0x01DACAE0 BL 0x1C16CF4
	0x01DACAE4 MOVZ W8, 0x1
	0x01DACAE8 STRB W8, [X21 + 0xADF]
	0x01DACAEC CBZ X20, 0x1DACF90
	0x01DACAF0 ADRP X10, 0x234B000
	0x01DACAF4 LDR X8, [X20]
	0x01DACAF8 LDR X10, [X10 + 0x868]
	0x01DACAFC LDRH W9, [X8 + 0x12E]
	0x01DACB00 LDR X1, [X10]
	0x01DACB04 CBZ X9, 0x1DACB28
	0x01DACB08 LDR X10, [X8 + 0xB0]
	0x01DACB0C ADD X10, X10, 0x8
	0x01DACB10 LDUR X11, [X10 - 0x8]
	0x01DACB14 CMP X11, X1
	0x01DACB18 B.EQ 0x1DACB38
	0x01DACB1C SUBS X9, X9, 0x1
	0x01DACB20 ADD X10, X10, 0x10
	0x01DACB24 B.NE 0x1DACB10
	0x01DACB28 MOV X0, X20
	0x01DACB2C MOV W2, W31
	0x01DACB30 BL 0x1C5C788
	0x01DACB34 B 0x1DACB44
	0x01DACB38 LDRSW X9, [X10]
	0x01DACB3C ADD X8, X8, X9, 0x4, LSL
	0x01DACB40 ADD X0, X8, 0x138
	0x01DACB44 LDP X8, X1, [X0]
	0x01DACB48 MOV X0, X20
	0x01DACB4C BLR X8
	0x01DACB50 MOV X20, X0
	0x01DACB54 CBZ X0, 0x1DACFD0
	0x01DACB58 ADRP X28, 0x2347000
	0x01DACB5C ADRP X29, 0x234B000
	0x01DACB60 ADRP X27, 0x2347000
	0x01DACB64 ADRP X21, 0x2349000
	0x01DACB68 ADRP X8, 0xFFFFFFFFFED3E000
	0x01DACB6C ADRP X9, 0xFFFFFFFFFED3E000
	0x01DACB70 LDR X28, [X28 + 0xE18]
	0x01DACB74 LDR X29, [X29 + 0x870]
	0x01DACB78 LDR X27, [X27 + 0x598]
	0x01DACB7C LDR X21, [X21 + 0x7C8]
	0x01DACB80 LDR V10, [X8 + 0x448]
	0x01DACB84 LDR V11, [X9 + 0x64]
	0x01DACB88 MOV X26, X31
	0x01DACB8C ADRP X22, 0x262C000
	0x01DACB90 LDR X8, [X20]
	0x01DACB94 LDR X1, [X28]
	0x01DACB98 LDRH W9, [X8 + 0x12E]
	0x01DACB9C CBZ X9, 0x1DACBC0
	0x01DACBA0 LDR X10, [X8 + 0xB0]
	0x01DACBA4 ADD X10, X10, 0x8
	0x01DACBA8 LDUR X11, [X10 - 0x8]
	0x01DACBAC CMP X11, X1
	0x01DACBB0 B.EQ 0x1DACBD0
	0x01DACBB4 SUBS X9, X9, 0x1
	0x01DACBB8 ADD X10, X10, 0x10
	0x01DACBBC B.NE 0x1DACBA8
	0x01DACBC0 MOV X0, X20
	0x01DACBC4 MOV W2, W31
	0x01DACBC8 BL 0x1C5C788
	0x01DACBCC B 0x1DACBDC
	0x01DACBD0 LDRSW X9, [X10]
	0x01DACBD4 ADD X8, X8, X9, 0x4, LSL
	0x01DACBD8 ADD X0, X8, 0x138
	0x01DACBDC LDP X8, X1, [X0]
	0x01DACBE0 MOV X0, X20
	0x01DACBE4 BLR X8
	0x01DACBE8 TBZ X0, 0x0, 0x1DACEDC
	0x01DACBEC LDR X8, [X20]
	0x01DACBF0 LDR X1, [X29]
	0x01DACBF4 LDRH W9, [X8 + 0x12E]
	0x01DACBF8 CBZ X9, 0x1DACC1C
	0x01DACBFC LDR X10, [X8 + 0xB0]
	0x01DACC00 ADD X10, X10, 0x8
	0x01DACC04 LDUR X11, [X10 - 0x8]
	0x01DACC08 CMP X11, X1
	0x01DACC0C B.EQ 0x1DACC2C
	0x01DACC10 SUBS X9, X9, 0x1
	0x01DACC14 ADD X10, X10, 0x10
	0x01DACC18 B.NE 0x1DACC04
	0x01DACC1C MOV X0, X20
	0x01DACC20 MOV W2, W31
	0x01DACC24 BL 0x1C5C788
	0x01DACC28 B 0x1DACC38
	0x01DACC2C LDRSW X9, [X10]
	0x01DACC30 ADD X8, X8, X9, 0x4, LSL
	0x01DACC34 ADD X0, X8, 0x138
	0x01DACC38 LDP X8, X1, [X0]
	0x01DACC3C MOV X0, X20
	0x01DACC40 BLR X8
	0x01DACC44 LDR X8, [X19 + 0x58]
	0x01DACC48 CBZ X8, 0x1DACFBC
	0x01DACC4C LDRSW X8, [X8 + 0x18]
	0x01DACC50 CMP X26, X8
	0x01DACC54 B.GE 0x1DACEDC
	0x01DACC58 MOV X23, X0
	0x01DACC5C LDR X0, [X27]
	0x01DACC60 LDR W8, [X0 + 0xE0]
	0x01DACC64 CBNZ W8, 0x1DACC6C
	0x01DACC68 BL 0x1C16DFC
	0x01DACC6C MOV X0, X23
	0x01DACC70 MOV X1, X31
	0x01DACC74 MOV X2, X31
	0x01DACC78 BL 0x3C3883C
	0x01DACC7C TBNZ X0, 0x0, 0x1DACB90
	0x01DACC80 CBZ X23, 0x1DACFC0
	0x01DACC84 LDR X0, [X27]
	0x01DACC88 LDR X24, [X23 + 0x90]
	0x01DACC8C LDR W8, [X0 + 0xE0]
	0x01DACC90 CBNZ W8, 0x1DACC98
	0x01DACC94 BL 0x1C16DFC
	0x01DACC98 MOV X0, X24
	0x01DACC9C MOV X1, X31
	0x01DACCA0 MOV X2, X31
	0x01DACCA4 BL 0x3C3883C
	0x01DACCA8 TBNZ X0, 0x0, 0x1DACB90
	0x01DACCAC LDR X8, [X19 + 0x58]
	0x01DACCB0 CBZ X8, 0x1DACFC4
	0x01DACCB4 LDR W9, [X8 + 0x18]
	0x01DACCB8 CMP X26, X9
	0x01DACCBC B.CS 0x1DACFC8
	0x01DACCC0 ADD X8, X8, X26, 0x3, LSL
	0x01DACCC4 LDRB W9, [X19 + 0x51]
	0x01DACCC8 LDR X24, [X8 + 0x20]
	0x01DACCCC CBZ W9, 0x1DACD30
	0x01DACCD0 MOV X0, X23
	0x01DACCD4 BL 0x1DAEC04
	0x01DACCD8 MOV W25, W0
	0x01DACCDC LDR X0, [X21]
	0x01DACCE0 LDR W8, [X0 + 0xE0]
	0x01DACCE4 CBNZ W8, 0x1DACCEC
	0x01DACCE8 BL 0x1C16DFC
	0x01DACCEC LDRB W8, [X22 + 0x85D]
	0x01DACCF0 CBNZ W8, 0x1DACD04
	0x01DACCF4 MOV X0, X21
	0x01DACCF8 BL 0x1C16CF4
	0x01DACCFC MOVZ W8, 0x1
	0x01DACD00 STRB W8, [X22 + 0x85D]
	0x01DACD04 LDR X0, [X21]
	0x01DACD08 LDR W8, [X0 + 0xE0]
	0x01DACD0C CBNZ W8, 0x1DACD18
	0x01DACD10 BL 0x1C16DFC
	0x01DACD14 LDR X0, [X21]
	0x01DACD18 LDR X8, [X0 + 0xB8]
	0x01DACD1C LDR X8, [X8]
	0x01DACD20 CBZ X8, 0x1DACFCC
	0x01DACD24 LDR W8, [X8 + 0x130]
	0x01DACD28 CMP W25, W8
	0x01DACD2C B.NE 0x1DACB90
	0x01DACD30 LDR X0, [X23 + 0x90]
	0x01DACD34 CBZ X0, 0x1DACFF0
	0x01DACD38 MOV X1, X31
	0x01DACD3C BL 0x3C3F58C
	0x01DACD40 LDRB W8, [X19 + 0x50]
	0x01DACD44 MOV V8.16B, V0.16B
	0x01DACD48 MOV V9.16B, V2.16B
	0x01DACD4C CBZ W8, 0x1DACD70
	0x01DACD50 MOV X0, X19
	0x01DACD54 MOV X1, X31
	0x01DACD58 BL 0x3C32E90
	0x01DACD5C CBZ X0, 0x1DACFF4
	0x01DACD60 MOV X1, X31
	0x01DACD64 BL 0x3C3F58C
	0x01DACD68 FSUB S8, S8, S0
	0x01DACD6C FSUB S9, S9, S2
	0x01DACD70 MOV X0, X23
	0x01DACD74 BL 0x1DAEC64
	0x01DACD78 CBZ X24, 0x1DACFE0
	0x01DACD7C AND W1, W0, 0x1
	0x01DACD80 MOV X0, X24
	0x01DACD84 BL 0x1DAE5F8
	0x01DACD88 LDR X0, [X24 + 0x20]
	0x01DACD8C CBZ X0, 0x1DACFE4
	0x01DACD90 LDR X8, [X0]
	0x01DACD94 LDR V0, [X23 + 0x1A8]
	0x01DACD98 LDR V1, [X23 + 0x1AC]
	0x01DACD9C LDR V2, [X23 + 0x1B0]
	0x01DACDA0 LDR X1, [X8 + 0x2B0]
	0x01DACDA4 LDR V3, [X23 + 0x1B4]
	0x01DACDA8 LDR X9, [X8 + 0x2A8]
	0x01DACDAC BLR X9
	0x01DACDB0 LDR X0, [X24 + 0x38]
	0x01DACDB4 CBZ X0, 0x1DACFEC
	0x01DACDB8 FADD S1, S9, S9
	0x01DACDBC FADD S0, S8, S8
	0x01DACDC0 MOV X1, X31
	0x01DACDC4 BL 0x3C3E880
	0x01DACDC8 MOV X0, X23
	0x01DACDCC BL 0x1DAEC64
	0x01DACDD0 LDR X25, [X24 + 0x38]
	0x01DACDD4 TBZ X0, 0x0, 0x1DACE28
	0x01DACDD8 ADRP X8, 0x262C000
	0x01DACDDC LDRB W8, [X8 + 0x793]
	0x01DACDE0 CBNZ W8, 0x1DACDFC
	0x01DACDE4 ADRP X0, 0x2348000
	0x01DACDE8 LDR X0, [X0 + 0x5A8]
	0x01DACDEC BL 0x1C16CF4
	0x01DACDF0 ADRP X8, 0x262C000
	0x01DACDF4 MOVZ W9, 0x1
	0x01DACDF8 STRB W9, [X8 + 0x793]
	0x01DACDFC CBZ X25, 0x1DAD008
	0x01DACE00 ADRP X8, 0x2348000
	0x01DACE04 LDR X8, [X8 + 0x5A8]
	0x01DACE08 LDR X8, [X8]
	0x01DACE0C LDR X8, [X8 + 0xB8]
	0x01DACE10 LDP S2, S3, [X8 + 0x8]
	0x01DACE14 LDP S0, S1, [X8]
	0x01DACE18 MOV X0, X25
	0x01DACE1C MOV X1, X31
	0x01DACE20 BL 0x3C3F8B8
	0x01DACE24 B 0x1DACE78
	0x01DACE28 LDR X0, [X23 + 0x90]
	0x01DACE2C CBZ X0, 0x1DACFFC
	0x01DACE30 MOV X1, X31
	0x01DACE34 BL 0x3C3DEB4
	0x01DACE38 MOV X0, X31
	0x01DACE3C BL 0x3C2A60C
	0x01DACE40 FMUL S1, S1, S10
	0x01DACE44 FMUL S0, S0, S10
	0x01DACE48 FMUL S2, S2, S10
	0x01DACE4C MOV X0, X31
	0x01DACE50 BL 0x3C2AB94
	0x01DACE54 FMUL S2, S1, S11
	0x01DACE58 FMOV S0, W31
	0x01DACE5C FMOV S1, W31
	0x01DACE60 MOV X0, X31
	0x01DACE64 BL 0x3C2A574
	0x01DACE68 CBZ X25, 0x1DAD004
	0x01DACE6C MOV X0, X25
	0x01DACE70 MOV X1, X31
	0x01DACE74 BL 0x3C3F8B8
	0x01DACE78 MOV X0, X24
	0x01DACE7C MOV X1, X31
	0x01DACE80 BL 0x3C32ECC
	0x01DACE84 CBZ X0, 0x1DACFDC
	0x01DACE88 MOV X1, X31
	0x01DACE8C BL 0x3C357F8
	0x01DACE90 TBNZ X0, 0x0, 0x1DACEB0
	0x01DACE94 MOV X0, X24
	0x01DACE98 MOV X1, X31
	0x01DACE9C BL 0x3C32ECC
	0x01DACEA0 CBZ X0, 0x1DAD000
	0x01DACEA4 MOVZ W1, 0x1
	0x01DACEA8 MOV X2, X31
	0x01DACEAC BL 0x3C357B4
	0x01DACEB0 LDR X0, [X23 + 0x40]
	0x01DACEB4 CBZ X0, 0x1DACFE8
	0x01DACEB8 MOV X1, X31
	0x01DACEBC BL 0x1E93588
	0x01DACEC0 TBZ X0, 0x0, 0x1DACED4
	0x01DACEC4 LDR X0, [X24 + 0x38]
	0x01DACEC8 CBZ X0, 0x1DACFF8
	0x01DACECC MOV X1, X31
	0x01DACED0 BL 0x3C40D04
	0x01DACED4 ADD X26, X26, 0x1
	0x01DACED8 B 0x1DACB90
	0x01DACEDC MOV X22, X31
	0x01DACEE0 MOVZ W21, 0x5
	0x01DACEE4 CBZ X20, 0x1DACF48
	0x01DACEE8 LDR X8, [X20]
	0x01DACEEC ADRP X10, 0x2347000
	0x01DACEF0 LDRH W9, [X8 + 0x12E]
	0x01DACEF4 LDR X10, [X10 + 0xE00]
	0x01DACEF8 LDR X1, [X10]
	0x01DACEFC CBZ X9, 0x1DACF20
	0x01DACF00 LDR X10, [X8 + 0xB0]
	0x01DACF04 ADD X10, X10, 0x8
	0x01DACF08 LDUR X11, [X10 - 0x8]
	0x01DACF0C CMP X11, X1
	0x01DACF10 B.EQ 0x1DACF30
	0x01DACF14 SUBS X9, X9, 0x1
	0x01DACF18 ADD X10, X10, 0x10
	0x01DACF1C B.NE 0x1DACF08
	0x01DACF20 MOV X0, X20
	0x01DACF24 MOV W2, W31
	0x01DACF28 BL 0x1C5C788
	0x01DACF2C B 0x1DACF3C
	0x01DACF30 LDRSW X9, [X10]
	0x01DACF34 ADD X8, X8, X9, 0x4, LSL
	0x01DACF38 ADD X0, X8, 0x138
	0x01DACF3C LDP X8, X1, [X0]
	0x01DACF40 MOV X0, X20
	0x01DACF44 BLR X8
	0x01DACF48 CBNZ X22, 0x1DACFD4
	0x01DACF4C CMP W21, 0x5
	0x01DACF50 B.EQ 0x1DACF58
	0x01DACF54 CBNZ W21, 0x1DACF94
	0x01DACF58 LDR X8, [X19 + 0x58]
	0x01DACF5C CBZ X8, 0x1DACF90
	0x01DACF60 SXTW X20, W26
	0x01DACF64 LDR X9, [X8 + 0x18]
	0x01DACF68 CMP X20, W9, SXTW
	0x01DACF6C B.GE 0x1DACF94
	0x01DACF70 CMP W20, W9
	0x01DACF74 B.CS 0x1DACFB8
	0x01DACF78 ADD X8, X8, X20, 0x3, LSL
	0x01DACF7C LDR X1, [X8 + 0x20]
	0x01DACF80 BL 0x1DAEADC
	0x01DACF84 LDR X8, [X19 + 0x58]
	0x01DACF88 ADD X20, X20, 0x1
	0x01DACF8C CBNZ X8, 0x1DACF64
	0x01DACF90 BL 0x1C16F20
	0x01DACF94 LDP X20, X19, [X31 + 0x70]
	0x01DACF98 LDP X22, X21, [X31 + 0x60]
	0x01DACF9C LDP X24, X23, [X31 + 0x50]
	0x01DACFA0 LDP X26, X25, [X31 + 0x40]
	0x01DACFA4 LDP X28, X27, [X31 + 0x30]
	0x01DACFA8 LDP X29, X30, [X31 + 0x20]
	0x01DACFAC LDP D9, D8, [X31 + 0x10]
	0x01DACFB0 LDP D11, D10, [X31], #0x80
	0x01DACFB4 RET
	0x01DACFB8 BL 0x1C16F28
	0x01DACFBC BL 0x1C16F20
	0x01DACFC0 BL 0x1C16F20
	0x01DACFC4 BL 0x1C16F20
	0x01DACFC8 BL 0x1C16F28
	0x01DACFCC BL 0x1C16F20
	0x01DACFD0 BL 0x1C16F20
	0x01DACFD4 MOV X0, X22
	0x01DACFD8 BL 0x1C16F18
	0x01DACFDC BL 0x1C16F20
	0x01DACFE0 BL 0x1C16F20
	0x01DACFE4 BL 0x1C16F20
	0x01DACFE8 BL 0x1C16F20
	0x01DACFEC BL 0x1C16F20
	0x01DACFF0 BL 0x1C16F20
	0x01DACFF4 BL 0x1C16F20
	0x01DACFF8 BL 0x1C16F20
	0x01DACFFC BL 0x1C16F20
	0x01DAD000 BL 0x1C16F20
	0x01DAD004 BL 0x1C16F20
	0x01DAD008 BL 0x1C16F20
	0x01DAD00C B 0x1DAD0C0
	0x01DAD010 B 0x1DAD0C0
	0x01DAD014 B 0x1DAD0C0
	0x01DAD018 B 0x1DAD0C0
	0x01DAD01C B 0x1DAD0C0
	0x01DAD020 B 0x1DAD0C0
	0x01DAD024 B 0x1DAD0C0
	0x01DAD028 B 0x1DAD0C0
	0x01DAD02C B 0x1DAD0C0
	0x01DAD030 B 0x1DAD0C0
	0x01DAD034 B 0x1DAD0C0
	0x01DAD038 B 0x1DAD0C0
	0x01DAD03C B 0x1DAD0C0
	0x01DAD040 B 0x1DAD0C0
	0x01DAD044 B 0x1DAD0C0
	0x01DAD048 B 0x1DAD0C0
	0x01DAD04C B 0x1DAD0C0
	0x01DAD050 B 0x1DAD0C0
	0x01DAD054 B 0x1DAD0C0
	0x01DAD058 B 0x1DAD0C0
	0x01DAD05C B 0x1DAD0C0
	0x01DAD060 B 0x1DAD0C0
	0x01DAD064 B 0x1DAD0C0
	0x01DAD068 B 0x1DAD0C0
	0x01DAD06C B 0x1DAD0C0
	0x01DAD070 B 0x1DAD0C0
	0x01DAD074 B 0x1DAD0C0
	0x01DAD078 B 0x1DAD0C0
	0x01DAD07C B 0x1DAD0C0
	0x01DAD080 B 0x1DAD0C0
	0x01DAD084 MOV X21, X0
	0x01DAD088 MOV X26, X31
	0x01DAD08C B 0x1DAD0C4
	0x01DAD090 B 0x1DAD0C0
	0x01DAD094 B 0x1DAD0C0
	0x01DAD098 B 0x1DAD0C0
	0x01DAD09C B 0x1DAD0C0
	0x01DAD0A0 B 0x1DAD0C0
	0x01DAD0A4 B 0x1DAD0C0
	0x01DAD0A8 B 0x1DAD0C0
	0x01DAD0AC B 0x1DAD0C0
	0x01DAD0B0 B 0x1DAD0C0
	0x01DAD0B4 B 0x1DAD0C0
	0x01DAD0B8 B 0x1DAD0C0
	0x01DAD0BC B 0x1DAD0C0
	0x01DAD0C0 MOV X21, X0
	0x01DAD0C4 CMP W1, 0x1
	0x01DAD0C8 B.NE 0x1DAD0E8
	0x01DAD0CC MOV X0, X21
	0x01DAD0D0 BL 0x3EB1AD0
	0x01DAD0D4 LDR X22, [X0]
	0x01DAD0D8 BL 0x3EB1AE0
	0x01DAD0DC MOV W21, W31
	0x01DAD0E0 CBNZ X20, 0x1DACEE8
	0x01DAD0E4 B 0x1DACF48
	0x01DAD0E8 MOV X22, X31
	0x01DAD0EC B 0x1DAD0F4
	0x01DAD0F0 MOV X21, X0
	0x01DAD0F4 CBZ X20, 0x1DAD158
	0x01DAD0F8 LDR X8, [X20]
	0x01DAD0FC ADRP X10, 0x2346000
	0x01DAD100 LDRH W9, [X8 + 0x12E]
	0x01DAD104 LDR X10, [X10 + 0xE00]
	0x01DAD108 LDR X1, [X10]
	0x01DAD10C CBZ X9, 0x1DAD130
	0x01DAD110 LDR X10, [X8 + 0xB0]
	0x01DAD114 ADD X10, X10, 0x8
	0x01DAD118 LDUR X11, [X10 - 0x8]
	0x01DAD11C CMP X11, X1
	0x01DAD120 B.EQ 0x1DAD140
	0x01DAD124 SUBS X9, X9, 0x1
	0x01DAD128 ADD X10, X10, 0x10
	0x01DAD12C B.NE 0x1DAD118
	0x01DAD130 MOV X0, X20
	0x01DAD134 MOV W2, W31
	0x01DAD138 BL 0x1C5C788
	0x01DAD13C B 0x1DAD14C

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+192], D8
	003 Move [X31+208], X29
	004 Move [X31+216], X30
	005 Move [X31+224], X28
	006 Move [X31+232], X27
	007 Move [X31+240], X26
	008 Move [X31+248], X25
	009 Move [X31+256], X24
	010 Move [X31+264], X23
	011 Move [X31+272], X22
	012 Move [X31+280], X21
	013 Move [X31+288], X20
	014 Move [X31+296], X19
	015 Move X20, 0x262D000
	016 Move X22, 0x2348000
	017 Move W8, [X20+2771]
	018 Move X22, [X22+1432]
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {131}
	024 Move X0, 0x234C000
	025 Move X0, [X0+1816]
	026 Call 0x1C17CF4
	027 Move X0, 0x2348000
	028 Move X0, [X0+1808]
	029 Call 0x1C17CF4
	030 Move X0, 0x2348000
	031 Move X0, [X0+1816]
	032 Call 0x1C17CF4
	033 Move X0, 0x2348000
	034 Move X0, [X0+1824]
	035 Call 0x1C17CF4
	036 Move X0, 0x234C000
	037 Move X0, [X0+1824]
	038 Call 0x1C17CF4
	039 Move X0, 0x234C000
	040 Move X0, [X0+1832]
	041 Call 0x1C17CF4
	042 Move X0, 0x234C000
	043 Move X0, [X0+1840]
	044 Call 0x1C17CF4
	045 Move X0, 0x2348000
	046 Move X0, [X0+1880]
	047 Call 0x1C17CF4
	048 Move X0, 0x234C000
	049 Move X0, [X0+1848]
	050 Call 0x1C17CF4
	051 Move X0, 0x234C000
	052 Move X0, [X0+1856]
	053 Call 0x1C17CF4
	054 Move X0, 0x234C000
	055 Move X0, [X0+1864]
	056 Call 0x1C17CF4
	057 Move X0, 0x234C000
	058 Move X0, [X0+1872]
	059 Call 0x1C17CF4
	060 Move X0, 0x234C000
	061 Move X0, [X0+1880]
	062 Call 0x1C17CF4
	063 Move X0, 0x234C000
	064 Move X0, [X0+1888]
	065 Call 0x1C17CF4
	066 Move X0, 0x234C000
	067 Move X0, [X0+1896]
	068 Call 0x1C17CF4
	069 Move X0, 0x234C000
	070 Move X0, [X0+1904]
	071 Call 0x1C17CF4
	072 Move X0, 0x234C000
	073 Move X0, [X0+1912]
	074 Call 0x1C17CF4
	075 Move X0, 0x2348000
	076 Move X0, [X0+1928]
	077 Call 0x1C17CF4
	078 Move X0, 0x234C000
	079 Move X0, [X0+1552]
	080 Call 0x1C17CF4
	081 Move X0, 0x234C000
	082 Move X0, [X0+1920]
	083 Call 0x1C17CF4
	084 Move X0, 0x234C000
	085 Move X0, [X0+1928]
	086 Call 0x1C17CF4
	087 Move X0, 0x234B000
	088 Move X0, [X0+920]
	089 Call 0x1C17CF4
	090 Move X0, 0x234B000
	091 Move X0, [X0+2904]
	092 Call 0x1C17CF4
	093 Move X0, 0x234B000
	094 Move X0, [X0+2912]
	095 Call 0x1C17CF4
	096 Move X0, 0x2348000
	097 Move X0, [X0+1432]
	098 Call 0x1C17CF4
	099 Move X0, 0x234C000
	100 Move X0, [X0+1936]
	101 Call 0x1C17CF4
	102 Move X0, 0x234C000
	103 Move X0, [X0+1944]
	104 Call 0x1C17CF4
	105 Move X0, 0x234C000
	106 Move X0, [X0+1952]
	107 Call 0x1C17CF4
	108 Move X0, 0x234C000
	109 Move X0, [X0+1960]
	110 Call 0x1C17CF4
	111 Move X0, 0x2348000
	112 Move X0, [X0+2704]
	113 Call 0x1C17CF4
	114 Move X0, 0x234C000
	115 Move X0, [X0+1968]
	116 Call 0x1C17CF4
	117 Move X0, 0x234C000
	118 Move X0, [X0+1808]
	119 Call 0x1C17CF4
	120 Move X0, 0x234C000
	121 Move X0, [X0+1976]
	122 Call 0x1C17CF4
	123 Move X0, 0x234C000
	124 Move X0, [X0+1984]
	125 Call 0x1C17CF4
	126 Move X0, 0x234C000
	127 Move X0, [X0+1992]
	128 Call 0x1C17CF4
	129 Move W8, 1
	130 Move [X20+2771], W8
	131 Move [X31+160], X31
	132 Move [X31+168], X31
	133 Move [X31+176], X31
	134 Move [X31+200], X31
	135 Move [X31+128], X31
	136 Move [X31+136], X31
	137 Move [X31+144], X31
	138 Move X20, X19
	139 Add X20, X20, 168
	140 Move X21, [X20]
	141 Move X0, [X22]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1C17DFC
	146 Move X0, X21
	147 Move X1, X31
	148 Move X2, X31
	149 Call Object.op_Equality, X0, X1
	150 Move TEMP, X0
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfNotEqual {172}
	154 Move X0, X19
	155 Call NetworkedLootSpawnGroup.get__groupID, X0
	156 Move X8, 0x234C000
	157 Move X8, [X8+1552]
	158 Move W21, W0
	159 Move X8, [X8]
	160 Move W9, [X8+224]
	161 Compare W9, 0
	162 JumpIfNotEqual {165}
	163 Move X0, X8
	164 Call 0x1C17DFC
	165 Move W0, W21
	166 Move X1, X20
	167 Call LootSpawnGroup.TryGetSpawnGroup, X0, X1
	168 Move TEMP, X0
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfNotEqual {622}
	172 Move X0, X19
	173 Call NetworkedLootSpawnGroup.ResetAvailableItemPoints, X0
	174 Move X8, [X19+168]
	175 Compare X8, 0
	176 JumpIfEqual {670}
	177 Move X9, 0x234C000
	178 Move X9, [X9+1960]
	179 Move X21, 0x234C000
	180 Move X26, 0x234C000
	181 Move X27, 0x234B000
	182 Move X29, 0x234C000
	183 Move X21, [X21+1952]
	184 Move X26, [X26+1928]
	185 Move X27, [X27+920]
	186 Move X29, [X29+1944]
	187 Move X0, [X9]
	188 Move V8, [X8+32]
	189 Call 0x1C17F10
	190 Move X1, [X21]
	191 Move X21, X0
	192 Call Queue`1<Int32>..ctor, X0
	193 Move W28, W31
	194 Move W22, W31
	195 Add X8, X31, 104
	196 Move X0, X19
	197 Call NetworkedLootSpawnGroup.get__spawnedLoot, X0
	198 NotImplemented "Instruction LDUR not yet implemented."
	199 Move X8, [X31+120]
	200 Move X2, [X26]
	201 Add X0, X31, 160
	202 Move W1, W22
	203 Move [X31+10], V0
	204 Move [X31+176], X8
	205 Call NetworkArray`1<SpawnedLoot>.get_Item, X0, X1
	206 Move X23, X0
	207 Move X0, [X27]
	208 Move X24, X1
	209 Move W8, [X0+224]
	210 Compare W8, 0
	211 JumpIfEqual {214}
	212 Compare W23, 0
	213 JumpIfNotEqual {217}
	214 Call 0x1C17DFC
	215 Compare W23, 0
	216 JumpIfEqual {262}
	217 Move X0, [X19+56]
	218 Compare X0, 0
	219 JumpIfEqual {670}
	220 And X1, X23, 0
	221 Add X2, X31, 200
	222 Move X3, X31
	223 Call NetworkRunner.TryFindObject, X0, X1, X2
	224 Move TEMP, X0
	225 And TEMP, TEMP, 1
	226 Compare TEMP, 1
	227 JumpIfNotEqual {262}
	228 Move X0, [X31+200]
	229 Compare X0, 0
	230 JumpIfEqual {670}
	231 Move X8, 0x234C000
	232 Move X8, [X8+1816]
	233 Move X1, [X8]
	234 Call 0x21A4894, X0
	235 Move X8, [X19+160]
	236 Compare X8, 0
	237 JumpIfEqual {670}
	238 Move X9, 0x234C000
	239 Move X9, [X9+1904]
	240 Move X25, X0
	241 And W1, W24, 255
	242 Move X0, X8
	243 Move X2, [X9]
	244 Call List`1<Object>.get_Item, X0, X1
	245 Compare X0, 0
	246 JumpIfEqual {670}
	247 Move X8, 0x234C000
	248 Move X8, [X8+1864]
	249 Move X1, X23
	250 ShiftRight X1, 32
	251 And X1, X1, 0x7FFFFFFF
	252 Move X2, [X8]
	253 Call List`1<Byte>.Remove, X0, X1
	254 Compare X25, 0
	255 JumpIfEqual {670}
	256 Move X0, X25
	257 Move X1, X31
	258 Call Item.get_itemValue, X0
	259 NotImplemented "Instruction SCVTF not yet implemented."
	260 Subtract S8, S8, S0
	261 Add W28, W28, 1
	262 Compare X21, 0
	263 JumpIfEqual {670}
	264 Move X2, [X29]
	265 Move X0, X21
	266 Move W1, W22
	267 Call Queue`1<Int32>.Enqueue, X0, X1
	268 Add W22, W22, 1
	269 NotImplemented "Instruction CMP not yet implemented."
	270 NotImplemented "Instruction FCMP not yet implemented."
	271 Move X8, 0x234C000
	272 Move X27, 0x234C000
	273 Move X22, 0x234C000
	274 Move X8, [X8+1848]
	275 Move X27, [X27+1832]
	276 Move X22, [X22+1824]
	277 Move W29, W31
	278 Move X0, [X19+160]
	279 Move [X31+28], W29
	280 Compare X0, 0
	281 JumpIfEqual {670}
	282 Move X1, [X8]
	283 Add X8, X31, 104
	284 Call List`1<Object>.GetEnumerator, X0
	285 NotImplemented "Instruction LDUR not yet implemented."
	286 Move X8, [X31+120]
	287 Move X29, 0x2348000
	288 Move W24, W31
	289 Move [X31+8], V0
	290 Move [X31+144], X8
	291 Move X29, [X29+1432]
	292 Move X1, [X27]
	293 Add X0, X31, 128
	294 Call Enumerator<Object>.MoveNext, X0
	295 Move TEMP, X0
	296 And TEMP, TEMP, 1
	297 Compare TEMP, 1
	298 JumpIfNotEqual {306}
	299 Move X8, [X31+144]
	300 Compare X8, 0
	301 JumpIfEqual {550}
	302 Move W8, [X8+24]
	303 NotImplemented "Instruction CMP not yet implemented."
	304 NotImplemented "Instruction CSET not yet implemented."
	305 Or W24, W24, W8
	306 Move X1, [X22]
	307 Add X0, X31, 128
	308 Call Enumerator<Object>.Dispose, X0
	309 Move TEMP, X24
	310 And TEMP, TEMP, 1
	311 Compare TEMP, 1
	312 JumpIfNotEqual {637}
	313 Move X8, [X20]
	314 Compare X8, 0
	315 JumpIfEqual {670}
	316 Move W1, [X8+48]
	317 Move W0, W31
	318 Move X2, X31
	319 Call Random.Range, X0, X1
	320 Move X8, [X20]
	321 Compare X8, 0
	322 JumpIfEqual {670}
	323 Move W23, W0
	324 Move W22, W31
	325 Move X0, [X8+40]
	326 Compare X0, 0
	327 JumpIfEqual {670}
	328 NotImplemented "Instruction CMP not yet implemented."
	329 Move W8, [X0+24]
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Move X8, 0x234C000
	332 Move X8, [X8+1896]
	333 Move W1, W22
	334 Move X2, [X8]
	335 Call List`1<Object>.get_Item, X0, X1
	336 Compare X0, 0
	337 JumpIfEqual {670}
	338 Move X8, [X19+160]
	339 Compare X8, 0
	340 JumpIfEqual {670}
	341 Move X9, 0x234C000
	342 Move W24, [X0+16]
	343 Move X9, [X9+1904]
	344 Move X0, X8
	345 Move W1, W22
	346 Move X2, [X9]
	347 Call List`1<Object>.get_Item, X0, X1
	348 Compare X0, 0
	349 JumpIfEqual {670}
	350 Subtract W23, W23, W24
	351 NotImplemented "Instruction CMP not yet implemented."
	352 Move W8, [X0+24]
	353 Compare W8, 0
	354 JumpIfEqual {447}
	355 Move X0, [X19+160]
	356 Compare X0, 0
	357 JumpIfEqual {670}
	358 Move X8, 0x234C000
	359 Move X8, [X8+1904]
	360 Move W1, W22
	361 Move X2, [X8]
	362 Call List`1<Object>.get_Item, X0, X1
	363 Compare X0, 0
	364 JumpIfEqual {670}
	365 Move W1, [X0+24]
	366 Move W0, W31
	367 Move X2, X31
	368 Call Random.Range, X0, X1
	369 Move X8, [X19+160]
	370 Compare X8, 0
	371 JumpIfEqual {670}
	372 Move X9, 0x234C000
	373 Move X9, [X9+1904]
	374 Move W25, W0
	375 Move X0, X8
	376 Move W1, W22
	377 Move X2, [X9]
	378 Call List`1<Object>.get_Item, X0, X1
	379 Compare X0, 0
	380 JumpIfEqual {670}
	381 Move X8, 0x234C000
	382 Move X8, [X8+1912]
	383 Move W1, W25
	384 Move X2, [X8]
	385 Call List`1<Byte>.get_Item, X0, X1
	386 Move X8, [X20]
	387 Compare X8, 0
	388 JumpIfEqual {670}
	389 Move W24, W0
	390 Move X0, [X8+40]
	391 Compare X0, 0
	392 JumpIfEqual {670}
	393 Move X8, 0x234C000
	394 Move X8, [X8+1896]
	395 Move W1, W22
	396 Move X2, [X8]
	397 Call List`1<Object>.get_Item, X0, X1
	398 Compare X0, 0
	399 JumpIfEqual {670}
	400 Move X0, [X0+24]
	401 Compare X0, 0
	402 JumpIfEqual {670}
	403 Move X8, 0x234C000
	404 Move X8, [X8+1888]
	405 And W24, W24, 255
	406 Move W1, W24
	407 Move X2, [X8]
	408 Call List`1<Object>.get_Item, X0, X1
	409 Move X8, [X19+160]
	410 Compare X8, 0
	411 JumpIfEqual {670}
	412 Move X9, 0x234C000
	413 Move X9, [X9+1904]
	414 Move X26, X0
	415 Move X0, X8
	416 Move W1, W22
	417 Move X2, [X9]
	418 Call List`1<Object>.get_Item, X0, X1
	419 Compare X0, 0
	420 JumpIfEqual {670}
	421 Move X8, 0x234C000
	422 Move X8, [X8+1856]
	423 Move W1, W25
	424 Move X2, [X8]
	425 Call List`1<Byte>.RemoveAt, X0, X1
	426 Move X8, [X20]
	427 Compare X8, 0
	428 JumpIfEqual {670}
	429 Move X0, [X8+56]
	430 Move V0, [X8+64]
	431 Call LootUtil.PickRandomItem, X0, V0
	432 Move X8, [X29]
	433 Move X25, X0
	434 Move W9, [X8+224]
	435 Compare W9, 0
	436 JumpIfNotEqual {439}
	437 Move X0, X8
	438 Call 0x1C17DFC
	439 Move X0, X25
	440 Move X1, X31
	441 Move X2, X31
	442 Call Object.op_Equality, X0, X1
	443 Move TEMP, X0
	444 And TEMP, TEMP, 1
	445 Compare TEMP, 1
	446 JumpIfNotEqual {451}
	447 Move X8, [X20]
	448 Add W22, W22, 1
	449 Compare X8, 0
	450 JumpIfNotEqual {325}
	451 Compare X25, 0
	452 JumpIfEqual {670}
	453 Move X23, [X19+56]
	454 Move X0, X25
	455 Move X1, X31
	456 Call Item.get_itemData, X0
	457 Move W29, [X31+28]
	458 Compare X0, 0
	459 JumpIfEqual {670}
	460 Compare X26, 0
	461 JumpIfEqual {670}
	462 Move X8, [X0+56]
	463 Move X0, X26
	464 Move X1, X31
	465 Move [X31+16], X8
	466 Call ItemPoint.GetCenterPosition, X0
	467 Move X8, 0x234B000
	468 Move X8, [X8+2904]
	469 Add X0, X31, 88
	470 Move [X31+88], X31
	471 Move [X31+96], X31
	472 Move X1, [X8]
	473 Call Nullable`1<Vector3>..ctor, X0, X1
	474 Move X0, X26
	475 Move X1, X31
	476 Call Component.get_transform, X0
	477 Compare X0, 0
	478 JumpIfEqual {670}
	479 Move X1, X31
	480 Call Transform.get_rotation, X0
	481 Move X8, 0x234B000
	482 Move X8, [X8+2912]
	483 Add X0, X31, 64
	484 Move [X31+64], X31
	485 Move [X31+72], X31
	486 Move [X31+80], W31
	487 Move X1, [X8]
	488 Call Nullable`1<Quaternion>..ctor, X0, X1
	489 Compare X23, 0
	490 JumpIfEqual {670}
	491 Move V0, [X31+4]
	492 Move W8, [X31+80]
	493 Move X2, [X31+88]
	494 Move X3, [X31+96]
	495 Move X1, [X31+16]
	496 Add X4, X31, 32
	497 Move X0, X23
	498 Move X5, X31
	499 Move X6, X31
	500 Move W7, W31
	501 Move [X31+2], V0
	502 Move [X31+48], W8
	503 Move [X31], X31
	504 Call NetworkRunner.Spawn, X0, X1, X2, X3, X4, X5, X6
	505 Compare X0, 0
	506 JumpIfEqual {670}
	507 Move X8, [X0+32]
	508 Compare X8, 0
	509 JumpIfEqual {513}
	510 Move W23, [X8]
	511 Compare X21, 0
	512 JumpIfNotEqual {516}
	513 Move X23, X31
	514 Compare X21, 0
	515 JumpIfEqual {670}
	516 Move X8, 0x234C000
	517 Move X8, [X8+1936]
	518 Move X0, X21
	519 NotImplemented "Instruction BFM not yet implemented."
	520 Move X1, [X8]
	521 Call Queue`1<Int32>.Dequeue, X0
	522 Move W22, W0
	523 Add X8, X31, 104
	524 Move X0, X19
	525 Call NetworkedLootSpawnGroup.get__spawnedLoot, X0
	526 Move X9, 0x234C000
	527 NotImplemented "Instruction LDUR not yet implemented."
	528 Move X8, [X31+120]
	529 Move X9, [X9+1920]
	530 NotImplemented "Instruction BFM not yet implemented."
	531 Move W3, W29
	532 Add X0, X31, 160
	533 Move X4, [X9]
	534 Move W1, W22
	535 Move X2, X23
	536 Move [X31+10], V0
	537 Move [X31+176], X8
	538 Call NetworkArray`1<SpawnedLoot>.Set, X0, X1, X2
	539 Move X0, X25
	540 Move X1, X31
	541 Add W28, W28, 1
	542 Call Item.get_itemValue, X0
	543 Move X22, 0x234C000
	544 Move X8, 0x234C000
	545 Move X22, [X22+1824]
	546 Move X8, [X8+1848]
	547 NotImplemented "Instruction SCVTF not yet implemented."
	548 Subtract S8, S8, S0
	549 NotImplemented "Instruction FCMP not yet implemented."
	550 Call 0x1C17F20
	551 Move X23, X0
	552 NotImplemented "Instruction CMP not yet implemented."
	553 Move X0, X23
	554 Call 0x3EB2AD0
	555 Move X22, [X0]
	556 Call 0x3EB2AE0
	557 Move X8, 0x234C000
	558 Move X8, [X8+1824]
	559 Add X0, X31, 128
	560 Move X1, [X8]
	561 Call Enumerator<Object>.Dispose, X0
	562 Move X29, 0x2348000
	563 Move X29, [X29+1432]
	564 Compare X22, 0
	565 JumpIfEqual {309}
	566 Move X0, X22
	567 Call 0x1C17F18
	568 Move X8, 0x2348000
	569 Move X8, [X8+1824]
	570 Move X0, [X8]
	571 Call 0x1C17F10
	572 Move X8, 0x2348000
	573 Move X8, [X8+1816]
	574 Move X20, X0
	575 Move X1, [X8]
	576 Call Dictionary`2<Object, Object>..ctor, X0
	577 Move X8, 0x2348000
	578 Move X8, [X8+1880]
	579 Add X1, X31, 104
	580 Move [X31+104], W28
	581 Move X0, [X8]
	582 Call 0x1C17E04
	583 Compare X20, 0
	584 JumpIfEqual {670}
	585 Move X8, 0x234C000
	586 Move X9, 0x2348000
	587 Move X8, [X8+1968]
	588 Move X9, [X9+1808]
	589 Move X2, X0
	590 Move X0, X20
	591 Move X1, [X8]
	592 Move X3, [X9]
	593 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	594 Move X8, 0x2348000
	595 Move X8, [X8+1928]
	596 Move X0, [X8]
	597 Move W8, [X0+224]
	598 Compare W8, 0
	599 JumpIfNotEqual {601}
	600 Call 0x1C17DFC
	601 Move X8, 0x234B000
	602 Move X9, 0x234B000
	603 Move X10, 0x234B000
	604 Move X8, [X8+1976]
	605 Move X9, [X9+1808]
	606 Move X10, [X10+1992]
	607 Move W4, 205
	608 Move X0, [X8]
	609 Move X2, [X9]
	610 Move X3, [X10]
	611 Move X1, X20
	612 Move X5, X31
	613 Call Log.Warning, X0, X1, X2, X3, X4
	614 Move X0, [X19+56]
	615 Move W8, 0x43340000
	616 Move S0, W8
	617 Move X1, X31
	618 Call TickTimer.CreateFromSeconds, X0, V0
	619 And X1, X0, 0
	620 Move X0, X19
	621 Call NetworkedLootSpawnGroup.set__respawnTimer, X0, X1
	622 Move X20, [X31+288]
	623 Move X19, [X31+296]
	624 Move X22, [X31+272]
	625 Move X21, [X31+280]
	626 Move X24, [X31+256]
	627 Move X23, [X31+264]
	628 Move X26, [X31+240]
	629 Move X25, [X31+248]
	630 Move X28, [X31+224]
	631 Move X27, [X31+232]
	632 Move X29, [X31+208]
	633 Move X30, [X31+216]
	634 Move V8, [X31+192]
	635 Add X31, X31, 304
	636 Return 
	637 Move X8, 0x2347000
	638 Move X8, [X8+2704]
	639 Add X1, X31, 104
	640 Move [X31+104], S8
	641 Move X0, [X8]
	642 Call 0x1C17E04
	643 Move X8, 0x234B000
	644 Move X8, [X8+1984]
	645 Move X1, X0
	646 Move X2, X31
	647 Move X8, [X8]
	648 Move X0, X8
	649 Call String.Format, X0, X1
	650 Move X8, 0x2347000
	651 Move X8, [X8+1928]
	652 Move X20, X0
	653 Move X8, [X8]
	654 Move W9, [X8+224]
	655 Compare W9, 0
	656 JumpIfNotEqual {659}
	657 Move X0, X8
	658 Call 0x1C17DFC
	659 Move X8, 0x234B000
	660 Move X9, 0x234B000
	661 Move X8, [X8+1808]
	662 Move X9, [X9+1992]
	663 Move W4, 151
	664 Move X0, X20
	665 Move X2, [X8]
	666 Move X3, [X9]
	667 Move X1, X31
	668 Move X5, X31
	669 Call Log.Info, X0, X1, X2, X3, X4
	670 Call 0x1C17F20
	671 Move X22, X31
	672 Move X23, X0
	673 Move X8, 0x234B000
	674 Move X8, [X8+1824]
	675 Move X1, [X8]
	676 Add X0, X31, 128
	677 Call Enumerator<Object>.Dispose, X0
	678 Compare X22, 0
	679 JumpIfNotEqual {682}
	680 Move X0, X23
	681 Call 0x1D2D690
	682 Move X0, X22
	683 Call 0x1C17F18
	684 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x01DAD454 BL 0x3C32E90
	0x01DAD458 CBZ X0, 0x1DAD8F0
	0x01DAD45C MOV X1, X31
	0x01DAD460 BL 0x3C3F58C
	0x01DAD464 LDR V3, [X19 + 0x54]
	0x01DAD468 FSUB S0, S10, S0
	0x01DAD46C FSUB S1, S11, S1
	0x01DAD470 FSUB S2, S12, S2
	0x01DAD474 FMUL S0, S0, S0
	0x01DAD478 FMUL S1, S1, S1
	0x01DAD47C FADD S0, S0, S1
	0x01DAD480 FMUL S1, S2, S2
	0x01DAD484 FADD S0, S1, S0
	0x01DAD488 FMUL S1, S3, S3
	0x01DAD48C FCMP S0, S1
	0x01DAD490 B.GT 0x1DAD29C
	0x01DAD494 MOV X0, X22
	0x01DAD498 MOV X1, X31
	0x01DAD49C BL 0x1DF00A4
	0x01DAD4A0 CBZ X23, 0x1DAD938
	0x01DAD4A4 AND W1, W0, 0x1
	0x01DAD4A8 MOV X0, X23
	0x01DAD4AC BL 0x1DAE5F8
	0x01DAD4B0 LDR X0, [X23 + 0x38]
	0x01DAD4B4 CBZ X0, 0x1DAD934
	0x01DAD4B8 FADD S1, S9, S9
	0x01DAD4BC FADD S0, S8, S8
	0x01DAD4C0 MOV X1, X31
	0x01DAD4C4 BL 0x3C3E880
	0x01DAD4C8 MOV X0, X23
	0x01DAD4CC MOV X1, X31
	0x01DAD4D0 BL 0x3C32ECC
	0x01DAD4D4 CBZ X0, 0x1DAD93C
	0x01DAD4D8 MOV X1, X31
	0x01DAD4DC BL 0x3C357F8
	0x01DAD4E0 TBNZ X0, 0x0, 0x1DAD500
	0x01DAD4E4 MOV X0, X23
	0x01DAD4E8 MOV X1, X31
	0x01DAD4EC BL 0x3C32ECC
	0x01DAD4F0 CBZ X0, 0x1DAD940
	0x01DAD4F4 MOVZ W1, 0x1
	0x01DAD4F8 MOV X2, X31
	0x01DAD4FC BL 0x3C357B4
	0x01DAD500 ADD W26, W26, 0x1
	0x01DAD504 B 0x1DAD298
	0x01DAD508 MOV X22, X31
	0x01DAD50C MOVZ W23, 0x5
	0x01DAD510 CBZ X21, 0x1DAD56C
	0x01DAD514 LDR X8, [X21]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x262C000
	009 Move X24, 0x234B000
	010 Move X20, 0x234B000
	011 Move X22, 0x234B000
	012 Move X21, 0x234B000
	013 Move W8, [X23+2772]
	014 Move X24, [X24+2064]
	015 Move X20, [X20+2072]
	016 Move X22, [X22+2080]
	017 Move X21, [X21+2088]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x234B000
	024 Move X0, [X0+2072]
	025 Call 0x1C17CF4
	026 Move X0, 0x234B000
	027 Move X0, [X0+2064]
	028 Call 0x1C17CF4
	029 Move X0, 0x234B000
	030 Move X0, [X0+2088]
	031 Call 0x1C17CF4
	032 Move X0, 0x234B000
	033 Move X0, [X0+2080]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+2772], W8
	037 Move X0, [X24]
	038 Call 0x1C17F10
	039 Move X1, [X20]
	040 Move X20, X0
	041 Call 0x2D5A408, X0
	042 Move [X19+152], X20
	043 Move X0, [X22]
	044 Call 0x1C17F10
	045 Move X1, [X21]
	046 Move X20, X0
	047 Call List`1<Object>..ctor, X0
	048 Move [X19+160], X20
	049 Move X0, X19
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move X1, X31
	057 Move X30, [X31+64]
	058 Call NetworkBehaviour..ctor, X0
	059 Return 

Method: System.Void CopyBackingFieldsToState(System.Boolean param_0)

Disassembly:
	0x01DAD518 LDR X1, [X24]
	0x01DAD51C LDRH W9, [X8 + 0x12E]
	0x01DAD520 CBZ X9, 0x1DAD544
	0x01DAD524 LDR X10, [X8 + 0xB0]
	0x01DAD528 ADD X10, X10, 0x8
	0x01DAD52C LDUR X11, [X10 - 0x8]
	0x01DAD530 CMP X11, X1
	0x01DAD534 B.EQ 0x1DAD554
	0x01DAD538 SUBS X9, X9, 0x1
	0x01DAD53C ADD X10, X10, 0x10
	0x01DAD540 B.NE 0x1DAD52C
	0x01DAD544 MOV X0, X21
	0x01DAD548 MOV W2, W31
	0x01DAD54C BL 0x1C5C788
	0x01DAD550 B 0x1DAD560
	0x01DAD554 LDRSW X9, [X10]
	0x01DAD558 ADD X8, X8, X9, 0x4, LSL
	0x01DAD55C ADD X0, X8, 0x138
	0x01DAD560 LDP X8, X1, [X0]
	0x01DAD564 MOV X0, X21
	0x01DAD568 BLR X8
	0x01DAD56C CBNZ X22, 0x1DAD920
	0x01DAD570 CMP W23, 0x5
	0x01DAD574 B.EQ 0x1DAD57C
	0x01DAD578 CBNZ W23, 0x1DAD8B0
	0x01DAD57C CBZ X20, 0x1DAD8AC
	0x01DAD580 ADRP X10, 0x234A000
	0x01DAD584 LDR X8, [X20]
	0x01DAD588 LDR X10, [X10 + 0x888]
	0x01DAD58C LDRH W9, [X8 + 0x12E]
	0x01DAD590 LDR X1, [X10]
	0x01DAD594 CBZ X9, 0x1DAD5B8
	0x01DAD598 LDR X10, [X8 + 0xB0]
	0x01DAD59C ADD X10, X10, 0x8
	0x01DAD5A0 LDUR X11, [X10 - 0x8]
	0x01DAD5A4 CMP X11, X1
	0x01DAD5A8 B.EQ 0x1DAD5C8
	0x01DAD5AC SUBS X9, X9, 0x1
	0x01DAD5B0 ADD X10, X10, 0x10
	0x01DAD5B4 B.NE 0x1DAD5A0
	0x01DAD5B8 MOV X0, X20
	0x01DAD5BC MOV W2, W31
	0x01DAD5C0 BL 0x1C5C788
	0x01DAD5C4 B 0x1DAD5D4
	0x01DAD5C8 LDRSW X9, [X10]
	0x01DAD5CC ADD X8, X8, X9, 0x4, LSL
	0x01DAD5D0 ADD X0, X8, 0x138
	0x01DAD5D4 LDP X8, X1, [X0]
	0x01DAD5D8 MOV X0, X20
	0x01DAD5DC BLR X8
	0x01DAD5E0 MOV X20, X0
	0x01DAD5E4 CBZ X0, 0x1DAD928
	0x01DAD5E8 ADRP X23, 0x234A000
	0x01DAD5EC LDR X23, [X23 + 0x890]
	0x01DAD5F0 SXTW X27, W26
	0x01DAD5F4 LDR X8, [X20]
	0x01DAD5F8 LDR X1, [X25]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X21, 0x262C000
	008 Move X20, 0x234A000
	009 Move W8, [X21+2773]
	010 Move X20, [X20+2680]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x234B000
	017 Move X0, [X0+2096]
	018 Call 0x1C17CF4
	019 Move X0, 0x234A000
	020 Move X0, [X0+2680]
	021 Call 0x1C17CF4
	022 Move X0, 0x234B000
	023 Move X0, [X0+2104]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+2773], W8
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Move X22, 0x234B000
	029 Move X21, 0x234B000
	030 Move X22, [X22+2104]
	031 Move X21, [X21+2096]
	032 Move X0, X19
	033 Call NetworkedLootSpawnGroup.set__groupID, X0, X1
	034 Add X8, X31, 32
	035 Move X0, X19
	036 Call NetworkedLootSpawnGroup.get__spawnedLoot, X0
	037 Move V0, [X31+2]
	038 Move X8, [X31+48]
	039 Move X0, [X20]
	040 Move [X31], V0
	041 Move [X31+16], X8
	042 Move W8, [X0+224]
	043 Move X20, [X19+136]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X2, [X22]
	048 Move V0, [X31]
	049 Move X8, [X31+16]
	050 Move X3, [X21]
	051 Add X0, X31, 32
	052 Move X1, X20
	053 Move [X31+2], V0
	054 Move [X31+48], X8
	055 Call NetworkBehaviourUtils.InitializeNetworkArray, X0, X1, X2
	056 Move W1, [X19+144]
	057 Move X0, X19
	058 Call NetworkedLootSpawnGroup.set__respawnTimer, X0, X1
	059 Move X20, [X31+96]
	060 Move X19, [X31+104]
	061 Move X22, [X31+80]
	062 Move X21, [X31+88]
	063 Move X30, [X31+64]
	064 Add X31, X31, 112
	065 Return 

Method: System.Void CopyStateToBackingFields()

Disassembly:
	0x01DAD5FC LDRH W9, [X8 + 0x12E]
	0x01DAD600 CBZ X9, 0x1DAD624
	0x01DAD604 LDR X10, [X8 + 0xB0]
	0x01DAD608 ADD X10, X10, 0x8
	0x01DAD60C LDUR X11, [X10 - 0x8]
	0x01DAD610 CMP X11, X1
	0x01DAD614 B.EQ 0x1DAD634
	0x01DAD618 SUBS X9, X9, 0x1
	0x01DAD61C ADD X10, X10, 0x10
	0x01DAD620 B.NE 0x1DAD60C
	0x01DAD624 MOV X0, X20
	0x01DAD628 MOV W2, W31
	0x01DAD62C BL 0x1C5C788
	0x01DAD630 B 0x1DAD640
	0x01DAD634 LDRSW X9, [X10]
	0x01DAD638 ADD X8, X8, X9, 0x4, LSL
	0x01DAD63C ADD X0, X8, 0x138
	0x01DAD640 LDP X8, X1, [X0]
	0x01DAD644 MOV X0, X20
	0x01DAD648 BLR X8
	0x01DAD64C TBZ X0, 0x0, 0x1DAD800
	0x01DAD650 LDR X8, [X20]
	0x01DAD654 LDR X1, [X23]
	0x01DAD658 LDRH W9, [X8 + 0x12E]
	0x01DAD65C CBZ X9, 0x1DAD680
	0x01DAD660 LDR X10, [X8 + 0xB0]
	0x01DAD664 ADD X10, X10, 0x8
	0x01DAD668 LDUR X11, [X10 - 0x8]
	0x01DAD66C CMP X11, X1
	0x01DAD670 B.EQ 0x1DAD690
	0x01DAD674 SUBS X9, X9, 0x1
	0x01DAD678 ADD X10, X10, 0x10
	0x01DAD67C B.NE 0x1DAD668
	0x01DAD680 MOV X0, X20
	0x01DAD684 MOV W2, W31
	0x01DAD688 BL 0x1C5C788
	0x01DAD68C B 0x1DAD69C
	0x01DAD690 LDRSW X9, [X10]
	0x01DAD694 ADD X8, X8, X9, 0x4, LSL
	0x01DAD698 ADD X0, X8, 0x138
	0x01DAD69C LDP X8, X1, [X0]
	0x01DAD6A0 MOV X0, X20
	0x01DAD6A4 BLR X8
	0x01DAD6A8 LDR X8, [X19 + 0x60]
	0x01DAD6AC CBZ X8, 0x1DAD8F8
	0x01DAD6B0 LDR W8, [X8 + 0x18]
	0x01DAD6B4 CMP W26, W8
	0x01DAD6B8 B.GE 0x1DAD800

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X21, 0x262C000
	007 Move X20, 0x234A000
	008 Move W8, [X21+2774]
	009 Move X20, [X20+2680]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x234B000
	016 Move X0, [X0+2112]
	017 Call 0x1C17CF4
	018 Move X0, 0x234A000
	019 Move X0, [X0+2680]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+2774], W8
	023 Move X21, 0x234B000
	024 Move X21, [X21+2112]
	025 Move X0, X19
	026 Call NetworkedLootSpawnGroup.get__groupID, X0
	027 NotImplemented "Instruction STRH not yet implemented."
	028 Add X8, X31, 32
	029 Move X0, X19
	030 Call NetworkedLootSpawnGroup.get__spawnedLoot, X0
	031 Move V0, [X31+2]
	032 Move X8, [X31+48]
	033 Move X0, [X20]
	034 Move [X31], V0
	035 Move [X31+16], X8
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move V0, [X31]
	041 Move X8, [X31+16]
	042 Move X2, [X21]
	043 Add X1, X19, 136
	044 Add X0, X31, 32
	045 Move [X31+2], V0
	046 Move [X31+48], X8
	047 Call NetworkBehaviourUtils.CopyFromNetworkArray, X0, X1
	048 Move X0, X19
	049 Call NetworkedLootSpawnGroup.get__respawnTimer, X0
	050 Move [X19+144], W0
	051 Move X20, [X31+80]
	052 Move X19, [X31+88]
	053 Move X30, [X31+64]
	054 Move X21, [X31+72]
	055 Add X31, X31, 96
	056 Return 

