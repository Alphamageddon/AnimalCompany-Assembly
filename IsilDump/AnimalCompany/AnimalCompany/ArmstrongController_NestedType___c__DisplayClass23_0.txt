Type: AnimalCompany.ArmstrongController/<>c__DisplayClass23_0

Method: System.Void .ctor()

Disassembly:
	0x01DE388C CBZ W9, 0x1DE38A0
	0x01DE3890 LDR V0, [X8 + 0x20]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean <UpdateRoaming>b__0(AnimalCompany.NetPlayer player)

Disassembly:
	0x01DE4300 FSUB S1, S1, S2
	0x01DE4304 STP S1, S0, [X22 + 0x2C]
	0x01DE4308 STR S3, [X22 + 0x34]
	0x01DE430C LDR X8, [X8 + 0x638]
	0x01DE4310 LDR X0, [X8]
	0x01DE4314 MOVZ W1, 0x3
	0x01DE4318 BL 0x1C16D6C
	0x01DE431C ADRP X8, 0x2314000
	0x01DE4320 LDR X8, [X8 + 0xD18]
	0x01DE4324 MOV X23, X0
	0x01DE4328 LDR X1, [X8]
	0x01DE432C MOV X2, X31
	0x01DE4330 BL 0x32C5BD8
	0x01DE4334 LDR X8, [X22 + 0x18]
	0x01DE4338 CMP W8, 0x1
	0x01DE433C B.LT 0x1DE4090
	0x01DE4340 MOV X25, X31
	0x01DE4344 AND X8, X8, 0x0
	0x01DE4348 ADD X28, X23, 0x20
	0x01DE434C CMP X25, W8, UXTW
	0x01DE4350 B.CS 0x1DE45A0
	0x01DE4354 CBZ X23, 0x1DE45A4
	0x01DE4358 LDR X8, [X23 + 0x18]
	0x01DE435C CMP W8, 0x1
	0x01DE4360 B.LT 0x1DE4530
	0x01DE4364 MOVZ W9, 0xC
	0x01DE4368 MADD X9, X25, X9, X22
	0x01DE436C LDP S0, S12, [X9 + 0x20]
	0x01DE4370 LDR V13, [X9 + 0x28]
	0x01DE4374 MOV X27, X31
	0x01DE4378 AND X8, X8, 0x0
	0x01DE437C STR S0, [X31 + 0x24]
	0x01DE4380 CMP X27, W8, UXTW
	0x01DE4384 B.CS 0x1DE459C
	0x01DE4388 LDR X0, [X29]
	0x01DE438C LDR V8, [X28, X27, LSL #2]
	0x01DE4390 LDR W8, [X0 + 0xE0]
	0x01DE4394 CBNZ W8, 0x1DE43A0
	0x01DE4398 BL 0x1C16DFC
	0x01DE439C LDR X0, [X29]
	0x01DE43A0 LDR X8, [X0 + 0xB8]
	0x01DE43A4 LDR W0, [X8]
	0x01DE43A8 MOV X1, X31
	0x01DE43AC BL 0x3C35CB8
	0x01DE43B0 MOV W24, W0
	0x01DE43B4 LDR X0, [X26]
	0x01DE43B8 LDR W8, [X0 + 0xE0]
	0x01DE43BC CBNZ W8, 0x1DE43C4
	0x01DE43C0 BL 0x1C16DFC
	0x01DE43C4 LDP S1, S0, [X31 + 0x1C]
	0x01DE43C8 LDR V2, [X31 + 0x18]
	0x01DE43CC LDR V3, [X31 + 0x24]
	0x01DE43D0 ADD X0, X31, 0x70
	0x01DE43D4 MOV V4.16B, V12.16B
	0x01DE43D8 MOV V5.16B, V13.16B
	0x01DE43DC MOV V6.16B, V8.16B
	0x01DE43E0 MOV W1, W24
	0x01DE43E4 MOV X2, X31

ISIL:
	001 Move [X31-80], D13
	002 Move [X31-72], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Compare X1, 0
	011 JumpIfEqual {72}
	012 Move X19, X0
	013 Move X0, X1
	014 Move X1, X31
	015 Call Component.get_transform, X0
	016 Compare X0, 0
	017 JumpIfEqual {72}
	018 Move X1, X31
	019 Call Transform.get_position, X0
	020 Move X8, [X19+16]
	021 Compare X8, 0
	022 JumpIfEqual {72}
	023 Move X0, [X8+208]
	024 Compare X0, 0
	025 JumpIfEqual {72}
	026 Move X1, X31
	027 Move V8, V0
	028 Move V9, V1
	029 Move V10, V2
	030 Call Transform.get_position, X0
	031 Move X20, 0x25F5000
	032 Move W8, [X20+2140]
	033 Move V11, V0
	034 Move V12, V1
	035 Move V13, V2
	036 Compare W8, 0
	037 JumpIfNotEqual {43}
	038 Move X0, 0x2310000
	039 Move X0, [X0+1448]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X20+2140], W8
	043 Move X8, 0x2310000
	044 Move X8, [X8+1448]
	045 Subtract S11, S8, S11
	046 Subtract S9, S9, S12
	047 Subtract S8, S10, S13
	048 Move X0, [X8]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Multiply S0, S11, S11
	054 Multiply S1, S9, S9
	055 Move V2, [X19+24]
	056 Add S0, S0, S1
	057 Multiply S1, S8, S8
	058 Add S0, S1, S0
	059 Move X20, [X31+64]
	060 Move X19, [X31+72]
	061 Move X30, [X31+48]
	062 Move D9, [X31+32]
	063 Move D8, [X31+40]
	064 Move D11, [X31+16]
	065 Move D10, [X31+24]
	066 NotImplemented "Instruction FSQRT not yet implemented."
	067 NotImplemented "Instruction FCMP not yet implemented."
	068 NotImplemented "Instruction CSET not yet implemented."
	069 Move D13, [X31+80]
	070 Move D12, [X31+88]
	071 Return X0
	072 Call 0x1C17F20

