Type: AnimalCompany.ArmstrongController/<>c__DisplayClass23_0

Method: System.Void .ctor()

Disassembly:
	0x01CDE040 BL 0x1B6EA24
	0x01CDE044 STR X30, [X31 - 0x30]!

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean <UpdateRoaming>b__0(AnimalCompany.NetPlayer player)

Disassembly:
	0x01CDEA50 MOV X0, X19
	0x01CDEA54 LDR X2, [X8 + 0x318]
	0x01CDEA58 LDR X1, [X8 + 0x320]
	0x01CDEA5C LDP X30, X19, [X31], #0x10
	0x01CDEA60 BR X2
	0x01CDEA64 BL 0x1B6EA1C
	0x01CDEA68 BL 0x1B6EA24
	0x01CDEA6C SUB X31, X31, 0x80
	0x01CDEA70 STP X30, X23, [X31 + 0x50]
	0x01CDEA74 STP X22, X21, [X31 + 0x60]
	0x01CDEA78 STP X20, X19, [X31 + 0x70]
	0x01CDEA7C ADRP X20, 0x2545000
	0x01CDEA80 LDRB W8, [X20 + 0x62E]
	0x01CDEA84 MOV X19, X0
	0x01CDEA88 TBNZ X8, 0x0, 0x1CDEAB8
	0x01CDEA8C ADRP X0, 0x2270000
	0x01CDEA90 LDR X0, [X0 + 0x5D8]
	0x01CDEA94 BL 0x1B6E7F0
	0x01CDEA98 ADRP X0, 0x2270000
	0x01CDEA9C LDR X0, [X0 + 0x248]
	0x01CDEAA0 BL 0x1B6E7F0
	0x01CDEAA4 ADRP X0, 0x2270000
	0x01CDEAA8 LDR X0, [X0 + 0x250]
	0x01CDEAAC BL 0x1B6E7F0
	0x01CDEAB0 MOVZ W8, 0x1
	0x01CDEAB4 STRB W8, [X20 + 0x62E]
	0x01CDEAB8 LDR X0, [X19 + 0xD0]
	0x01CDEABC CBZ X0, 0x1CDEBA4
	0x01CDEAC0 ADRP X23, 0x2270000
	0x01CDEAC4 ADRP X22, 0x2270000
	0x01CDEAC8 LDR X20, [X19 + 0x38]
	0x01CDEACC LDR X21, [X19 + 0x180]
	0x01CDEAD0 LDR X23, [X23 + 0x248]
	0x01CDEAD4 LDR X22, [X22 + 0x250]
	0x01CDEAD8 MOV X1, X31
	0x01CDEADC BL 0x3AA7658
	0x01CDEAE0 LDR X1, [X23]
	0x01CDEAE4 ADD X0, X31, 0x20
	0x01CDEAE8 STP X31, X31, [X31 + 0x20]
	0x01CDEAEC BL 0x22DC630
	0x01CDEAF0 ADRP X23, 0x2545000
	0x01CDEAF4 LDRB W8, [X23 + 0x454]
	0x01CDEAF8 CBNZ W8, 0x1CDEB10
	0x01CDEAFC ADRP X0, 0x2270000
	0x01CDEB00 LDR X0, [X0 + 0x1F8]
	0x01CDEB04 BL 0x1B6E7F0
	0x01CDEB08 MOVZ W8, 0x1
	0x01CDEB0C STRB W8, [X23 + 0x454]
	0x01CDEB10 ADRP X8, 0x2270000
	0x01CDEB14 LDR X8, [X8 + 0x1F8]
	0x01CDEB18 LDR X1, [X22]
	0x01CDEB1C ADD X0, X31, 0x8
	0x01CDEB20 LDR X8, [X8]
	0x01CDEB24 LDR X8, [X8 + 0xB8]
	0x01CDEB28 LDP S0, S1, [X8]
	0x01CDEB2C LDP S2, S3, [X8 + 0x8]
	0x01CDEB30 STP X31, X31, [X31 + 0x8]
	0x01CDEB34 STR W31, [X31 + 0x18]

ISIL:
	001 Move [X31-80], D13
	002 Move [X31-72], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Compare X1, 0
	011 JumpIfEqual {72}
	012 Move X19, X0
	013 Move X0, X1
	014 Move X1, X31
	015 Call Component.get_transform, X0
	016 Compare X0, 0
	017 JumpIfEqual {72}
	018 Move X1, X31
	019 Call Transform.get_position, X0
	020 Move X8, [X19+16]
	021 Compare X8, 0
	022 JumpIfEqual {72}
	023 Move X0, [X8+208]
	024 Compare X0, 0
	025 JumpIfEqual {72}
	026 Move X1, X31
	027 Move V8, V0
	028 Move V9, V1
	029 Move V10, V2
	030 Call Transform.get_position, X0
	031 Move X20, 0x2546000
	032 Move W8, [X20+1286]
	033 Move V11, V0
	034 Move V12, V1
	035 Move V13, V2
	036 Compare W8, 0
	037 JumpIfNotEqual {43}
	038 Move X0, 0x2270000
	039 Move X0, [X0+1160]
	040 Call 0x1B6F7F0
	041 Move W8, 1
	042 Move [X20+1286], W8
	043 Move X8, 0x2270000
	044 Move X8, [X8+1160]
	045 Subtract S11, S8, S11
	046 Subtract S9, S9, S12
	047 Subtract S8, S10, S13
	048 Move X0, [X8]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1B6F8F8
	053 Multiply S0, S11, S11
	054 Multiply S1, S9, S9
	055 Move V2, [X19+24]
	056 Add S0, S0, S1
	057 Multiply S1, S8, S8
	058 Add S0, S1, S0
	059 Move X20, [X31+64]
	060 Move X19, [X31+72]
	061 Move X30, [X31+48]
	062 Move D9, [X31+32]
	063 Move D8, [X31+40]
	064 Move D11, [X31+16]
	065 Move D10, [X31+24]
	066 NotImplemented "Instruction FSQRT not yet implemented."
	067 NotImplemented "Instruction FCMP not yet implemented."
	068 NotImplemented "Instruction CSET not yet implemented."
	069 Move D13, [X31+80]
	070 Move D12, [X31+88]
	071 Return X0
	072 Call 0x1B6FA1C

