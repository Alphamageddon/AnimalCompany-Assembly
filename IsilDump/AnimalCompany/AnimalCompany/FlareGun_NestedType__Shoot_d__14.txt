Type: AnimalCompany.FlareGun/<Shoot>d__14

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01D8ECC8 MOV X0, X19
	0x01D8ECCC MOV X2, X31
	0x01D8ECD0 BL 0x337DF1C
	0x01D8ECD4 ADRP X0, 0x2368000
	0x01D8ECD8 LDR X0, [X0 + 0xCF8]
	0x01D8ECDC BL 0x1C16D08
	0x01D8ECE0 MOV X1, X0
	0x01D8ECE4 MOV X0, X19
	0x01D8ECE8 BL 0x1C16DEC
	0x01D8ECEC STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01D8ED2C MOV X2, X31

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01D8ED30 BL 0x337DF1C
	0x01D8ED34 ADRP X0, 0x2368000
	0x01D8ED38 LDR X0, [X0 + 0xD08]
	0x01D8ED3C BL 0x1C16D08
	0x01D8ED40 MOV X1, X0
	0x01D8ED44 MOV X0, X19
	0x01D8ED48 BL 0x1C16DEC
	0x01D8ED4C STP X30, X19, [X31 - 0x10]!
	0x01D8ED50 LDR X8, [X0 + 0x50]
	0x01D8ED54 CBZ X8, 0x1D8ED64
	0x01D8ED58 STR W1, [X8 + 0x54]
	0x01D8ED5C LDP X30, X19, [X31], #0x10
	0x01D8ED60 RET
	0x01D8ED64 ADRP X0, 0x2365000
	0x01D8ED68 LDR X0, [X0 + 0x5B0]
	0x01D8ED6C BL 0x1C16D08
	0x01D8ED70 BL 0x1C16F10
	0x01D8ED74 MOV X19, X0
	0x01D8ED78 ADRP X0, 0x2368000
	0x01D8ED7C LDR X0, [X0 + 0xD00]
	0x01D8ED80 BL 0x1C16D08
	0x01D8ED84 MOV X1, X0
	0x01D8ED88 MOV X0, X19
	0x01D8ED8C MOV X2, X31
	0x01D8ED90 BL 0x337DF1C
	0x01D8ED94 ADRP X0, 0x2368000
	0x01D8ED98 LDR X0, [X0 + 0xD10]
	0x01D8ED9C BL 0x1C16D08
	0x01D8EDA0 MOV X1, X0
	0x01D8EDA4 MOV X0, X19
	0x01D8EDA8 BL 0x1C16DEC
	0x01D8EDAC LDRB W0, [X0 + 0x148]
	0x01D8EDB0 RET
	0x01D8EDB4 AND W8, W1, 0x1
	0x01D8EDB8 STRB W8, [X0 + 0x148]
	0x01D8EDBC RET
	0x01D8EDC0 LDR X0, [X0 + 0x150]
	0x01D8EDC4 RET
	0x01D8EDC8 LDR X0, [X0 + 0x168]
	0x01D8EDCC RET
	0x01D8EDD0 LDR X0, [X0 + 0x178]
	0x01D8EDD4 RET
	0x01D8EDD8 LDR X0, [X0 + 0x1A8]
	0x01D8EDDC RET
	0x01D8EDE0 LDR X0, [X0 + 0xB0]
	0x01D8EDE4 RET
	0x01D8EDE8 LDRB W0, [X0 + 0x8C]
	0x01D8EDEC RET
	0x01D8EDF0 STP X30, X19, [X31 - 0x10]!
	0x01D8EDF4 LDRB W8, [X0 + 0x8D]
	0x01D8EDF8 CBZ W8, 0x1D8EE08
	0x01D8EDFC MOV X19, X0
	0x01D8EE00 BL 0x1D8EE20
	0x01D8EE04 TBZ X0, 0x0, 0x1D8EE14
	0x01D8EE08 MOV W0, W31
	0x01D8EE0C LDP X30, X19, [X31], #0x10
	0x01D8EE10 RET
	0x01D8EE14 MOV X0, X19
	0x01D8EE18 LDP X30, X19, [X31], #0x10
	0x01D8EE1C B 0x1D89D0C
	0x01D8EE20 STP X30, X21, [X31 - 0x20]!
	0x01D8EE24 STP X20, X19, [X31 + 0x10]
	0x01D8EE28 ADRP X20, 0x264A000
	0x01D8EE2C ADRP X21, 0x2368000
	0x01D8EE30 LDRB W8, [X20 + 0x9E9]
	0x01D8EE34 LDR X21, [X21 + 0x398]
	0x01D8EE38 MOV X19, X0
	0x01D8EE3C TBNZ X8, 0x0, 0x1D8EE54
	0x01D8EE40 ADRP X0, 0x2368000
	0x01D8EE44 LDR X0, [X0 + 0x398]
	0x01D8EE48 BL 0x1C16CF4
	0x01D8EE4C MOVZ W8, 0x1
	0x01D8EE50 STRB W8, [X20 + 0x9E9]
	0x01D8EE54 MOV X0, X19
	0x01D8EE58 BL 0x1D8EB5C
	0x01D8EE5C LDR X8, [X21]
	0x01D8EE60 MOV X20, X0
	0x01D8EE64 LDR W9, [X8 + 0xE0]
	0x01D8EE68 CBZ W9, 0x1D8EE9C
	0x01D8EE6C CBZ W20, 0x1D8EEA8
	0x01D8EE70 MOV X0, X19
	0x01D8EE74 BL 0x1D8EB5C
	0x01D8EE78 LDR X8, [X21]
	0x01D8EE7C MOV X19, X0
	0x01D8EE80 LDR W9, [X8 + 0xE0]
	0x01D8EE84 CBNZ W9, 0x1D8EE90
	0x01D8EE88 MOV X0, X8
	0x01D8EE8C BL 0x1C16DFC
	0x01D8EE90 CMP W19, 0x0
	0x01D8EE94 CSET W0, NE
	0x01D8EE98 B 0x1D8EEAC
	0x01D8EE9C MOV X0, X8
	0x01D8EEA0 BL 0x1C16DFC
	0x01D8EEA4 CBNZ W20, 0x1D8EE70
	0x01D8EEA8 MOV W0, W31
	0x01D8EEAC LDP X20, X19, [X31 + 0x10]
	0x01D8EEB0 LDP X30, X21, [X31], #0x20
	0x01D8EEB4 RET
	0x01D8EEB8 STP X30, X19, [X31 - 0x10]!
	0x01D8EEBC LDRB W8, [X0 + 0x8E]
	0x01D8EEC0 CBZ W8, 0x1D8EED0
	0x01D8EEC4 MOV X19, X0
	0x01D8EEC8 BL 0x1D8EE20
	0x01D8EECC TBZ X0, 0x0, 0x1D8EEDC
	0x01D8EED0 MOV W0, W31
	0x01D8EED4 LDP X30, X19, [X31], #0x10
	0x01D8EED8 RET
	0x01D8EEDC MOV X0, X19
	0x01D8EEE0 LDP X30, X19, [X31], #0x10
	0x01D8EEE4 B 0x1D89D0C
	0x01D8EEE8 MOVZ W0, 0x1
	0x01D8EEEC RET
	0x01D8EEF0 STP X30, X21, [X31 - 0x20]!
	0x01D8EEF4 STP X20, X19, [X31 + 0x10]
	0x01D8EEF8 ADRP X21, 0x264A000
	0x01D8EEFC ADRP X20, 0x2365000
	0x01D8EF00 LDRB W8, [X21 + 0x9EA]
	0x01D8EF04 LDR X20, [X20 + 0x598]
	0x01D8EF08 MOV X19, X0
	0x01D8EF0C TBNZ X8, 0x0, 0x1D8EF24
	0x01D8EF10 ADRP X0, 0x2365000
	0x01D8EF14 LDR X0, [X0 + 0x598]
	0x01D8EF18 BL 0x1C16CF4
	0x01D8EF1C MOVZ W8, 0x1
	0x01D8EF20 STRB W8, [X21 + 0x9EA]
	0x01D8EF24 LDR X0, [X20]
	0x01D8EF28 LDR X20, [X19 + 0x38]
	0x01D8EF2C LDR W8, [X0 + 0xE0]
	0x01D8EF30 CBNZ W8, 0x1D8EF38
	0x01D8EF34 BL 0x1C16DFC
	0x01D8EF38 MOV X0, X20
	0x01D8EF3C MOV X1, X31
	0x01D8EF40 MOV X2, X31
	0x01D8EF44 BL 0x3C354F8
	0x01D8EF48 TBZ X0, 0x0, 0x1D8EF68
	0x01D8EF4C LDR X0, [X19 + 0x38]
	0x01D8EF50 CBZ X0, 0x1D8EF78
	0x01D8EF54 LDR X1, [X19 + 0x40]
	0x01D8EF58 LDP X20, X19, [X31 + 0x10]
	0x01D8EF5C MOV X2, X31
	0x01D8EF60 LDP X30, X21, [X31], #0x20
	0x01D8EF64 B 0x1EA1A20
	0x01D8EF68 LDP X20, X19, [X31 + 0x10]
	0x01D8EF6C MOV W0, W31
	0x01D8EF70 LDP X30, X21, [X31], #0x20
	0x01D8EF74 RET
	0x01D8EF78 BL 0x1C16F20
	0x01D8EF7C LDR W0, [X0 + 0xBC]
	0x01D8EF80 RET
	0x01D8EF84 LDRB W0, [X0 + 0x180]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], D10
	003 Move [X31+96], D9
	004 Move [X31+104], D8
	005 Move [X31+112], X30
	006 Move [X31+120], X21
	007 Move [X31+128], X20
	008 Move [X31+136], X19
	009 Move X19, 0x264B000
	010 Move W8, [X19+2530]
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x2369000
	017 Move X0, [X0+2968]
	018 Call 0x1C17CF4
	019 Move X0, 0x2369000
	020 Move X0, [X0+2904]
	021 Call 0x1C17CF4
	022 Move X0, 0x2369000
	023 Move X0, [X0+2912]
	024 Call 0x1C17CF4
	025 Move X0, 0x2369000
	026 Move X0, [X0+3120]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X19+2530], W8
	030 Move W8, [X20+16]
	031 Move X19, [X20+32]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Compare W8, 0
	034 JumpIfNotEqual {167}
	035 Move TEMP, 0
	036 Not TEMP
	037 Move W8, TEMP
	038 Move [X20+16], W8
	039 Compare X19, 0
	040 JumpIfEqual {177}
	041 Move X21, [X19+144]
	042 Compare X21, 0
	043 JumpIfEqual {56}
	044 Move X0, X19
	045 Move X1, X31
	046 Call Component.get_transform, X0
	047 Compare X0, 0
	048 JumpIfEqual {177}
	049 Move X1, X31
	050 Call Transform.get_position, X0
	051 Move S3, 1
	052 Move W1, 1
	053 Move X0, X21
	054 Move X2, X31
	055 Call RandomSFX.Play, X0, X1, V0, X2
	056 Move X8, 0x2369000
	057 Move X8, [X8+3120]
	058 Move X0, [X8]
	059 Call 0x1C17F10
	060 Move X8, -19546112
	061 Move V0, [X8+3876]
	062 Move X1, X31
	063 Move X19, X0
	064 Call WaitForSeconds..ctor, X0, V0
	065 Move W0, 1
	066 Move [X20+24], X19
	067 Move [X20+16], W0
	068 Move TEMP, 0
	069 Not TEMP
	070 Move W8, TEMP
	071 Move [X20+16], W8
	072 Compare X19, 0
	073 JumpIfEqual {177}
	074 Move X0, [X19+136]
	075 Compare X0, 0
	076 JumpIfEqual {177}
	077 Move X1, X31
	078 Call Transform.get_position, X0
	079 Move X0, [X19+136]
	080 Compare X0, 0
	081 JumpIfEqual {177}
	082 Move X1, X31
	083 Move V8, V0
	084 Move V9, V1
	085 Move V10, V2
	086 Call Transform.get_rotation, X0
	087 Move V4, V0
	088 Move V5, V1
	089 Move V6, V2
	090 Move V7, V3
	091 Move W0, 1
	092 Move V0, V8
	093 Move V1, V9
	094 Move V2, V10
	095 Move V3, V4
	096 Move V4, V5
	097 Move V5, V6
	098 Move V6, V7
	099 Move X1, X31
	100 Call NetworkVFX.PlayVFX, X0, X1, X2
	101 Move X0, [X19+136]
	102 Compare X0, 0
	103 JumpIfEqual {177}
	104 Move X20, [X19+56]
	105 Move X21, [X19+168]
	106 Move X1, X31
	107 Call Transform.get_position, X0
	108 Move X8, 0x2369000
	109 Move X8, [X8+2904]
	110 Add X0, X31, 64
	111 Move [X31+64], X31
	112 Move [X31+72], X31
	113 Move X1, [X8]
	114 Call Nullable`1<Vector3>..ctor, X0, X1
	115 Move X0, [X19+136]
	116 Compare X0, 0
	117 JumpIfEqual {177}
	118 Move X1, X31
	119 Call Transform.get_rotation, X0
	120 Move X8, 0x2369000
	121 Move X8, [X8+2912]
	122 Add X0, X31, 40
	123 Move [X31+40], X31
	124 Move [X31+48], X31
	125 Move [X31+56], W31
	126 Move X1, [X8]
	127 Call Nullable`1<Quaternion>..ctor, X0, X1
	128 Compare X20, 0
	129 JumpIfEqual {177}
	130 NotImplemented "Instruction LDUR not yet implemented."
	131 Move W8, [X31+56]
	132 Move X2, [X31+64]
	133 Move X3, [X31+72]
	134 Add X4, X31, 16
	135 Move X0, X20
	136 Move X1, X21
	137 Move X5, X31
	138 Move X6, X31
	139 Move W7, W31
	140 Move [X31+1], V0
	141 Move [X31+32], W8
	142 Move [X31], X31
	143 Call NetworkRunner.Spawn, X0, X1, X2, X3, X4, X5, X6
	144 Compare X0, 0
	145 JumpIfEqual {177}
	146 Move X8, 0x2369000
	147 Move X8, [X8+2968]
	148 Move X1, [X8]
	149 Call 0x21A4894, X0
	150 Move X8, [X19+136]
	151 Compare X8, 0
	152 JumpIfEqual {177}
	153 Move X20, X0
	154 Move X0, X8
	155 Move X1, X31
	156 Call Transform.get_forward, X0
	157 Compare X20, 0
	158 JumpIfEqual {177}
	159 Move V3, [X19+160]
	160 Move W1, 1
	161 Move X0, X20
	162 Move X2, X31
	163 Multiply S2, S2, S3
	164 Multiply S1, S1, S3
	165 Multiply S0, S0, S3
	166 Call Rigidbody.AddForce, X0, X1, X2
	167 Move W0, W31
	168 Move X20, [X31+128]
	169 Move X19, [X31+136]
	170 Move X30, [X31+112]
	171 Move X21, [X31+120]
	172 Move D9, [X31+96]
	173 Move D8, [X31+104]
	174 Move V10, [X31+80]
	175 Add X31, X31, 144
	176 Return X0
	177 Call 0x1C17F20

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x01D8EF88 RET
	0x01D8EF8C STR X30, [X31 - 0x30]!

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01D8EF90 STP X22, X21, [X31 + 0x10]
	0x01D8EF94 STP X20, X19, [X31 + 0x20]
	0x01D8EF98 ADRP X22, 0x264A000
	0x01D8EF9C ADRP X21, 0x2365000
	0x01D8EFA0 LDRB W8, [X22 + 0x9EB]
	0x01D8EFA4 LDR X21, [X21 + 0x598]
	0x01D8EFA8 MOV X19, X1
	0x01D8EFAC MOV X20, X0
	0x01D8EFB0 TBNZ X8, 0x0, 0x1D8EFC8
	0x01D8EFB4 ADRP X0, 0x2365000
	0x01D8EFB8 LDR X0, [X0 + 0x598]
	0x01D8EFBC BL 0x1C16CF4
	0x01D8EFC0 MOVZ W8, 0x1
	0x01D8EFC4 STRB W8, [X22 + 0x9EB]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x2366000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2369000
	011 Move X0, [X0+3128]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01D8EFC8 LDR X0, [X21]
	0x01D8EFCC LDR X21, [X20 + 0x150]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

