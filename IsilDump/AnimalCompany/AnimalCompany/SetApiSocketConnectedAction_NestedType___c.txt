Type: AnimalCompany.SetApiSocketConnectedAction/<>c

Method: System.Void .cctor()

Disassembly:
	0x01C8EBDC LDR X0, [X0 + 0x988]
	0x01C8EBE0 BL 0x1B6E7F0
	0x01C8EBE4 MOVZ W8, 0x1
	0x01C8EBE8 STRB W8, [X20 + 0x3AA]
	0x01C8EBEC LDR W8, [X19 + 0x10]
	0x01C8EBF0 CMP W8, 0x2
	0x01C8EBF4 B.EQ 0x1C8EC1C
	0x01C8EBF8 CMP W8, 0x1
	0x01C8EBFC B.EQ 0x1C8ED44
	0x01C8EC00 CBNZ W8, 0x1C8EE18
	0x01C8EC04 MOVZ X9, 0x1
	0x01C8EC08 MOVN W8, 0x0
	0x01C8EC0C MOVK X9, 0x40000000
	0x01C8EC10 STR W8, [X19 + 0x10]
	0x01C8EC14 STR X9, [X19 + 0x28]
	0x01C8EC18 B 0x1C8EC6C
	0x01C8EC1C LDR W8, [X19 + 0x28]
	0x01C8EC20 MOVN W9, 0x0
	0x01C8EC24 STR W9, [X19 + 0x10]
	0x01C8EC28 STR X31, [X19 + 0x30]
	0x01C8EC2C CMP W8, 0x1
	0x01C8EC30 B.LE 0x1C8EC6C
	0x01C8EC34 ADRP X9, 0x22BF000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x2596000
	005 Move X20, 0x22C0000
	006 Move W8, [X19+924]
	007 Move X20, [X20+2008]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22C0000
	013 Move X0, [X0+2008]
	014 Call 0x1B6F7F0
	015 Move W8, 1
	016 Move [X19+924], W8
	017 Move X0, [X20]
	018 Call 0x1B6FA0C
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x01C8EC38 LDR X9, [X9 + 0x5F8]
	0x01C8EC3C ADD X1, X31, 0xC

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: SpatialSys.ObservableState.StatePrimitive`1<System.Boolean> <.ctor>b__0_0(AnimalCompany.AppState state)

Disassembly:
	0x01C8EC40 STR W8, [X31 + 0xC]
	0x01C8EC44 LDR X0, [X9]
	0x01C8EC48 BL 0x1B6E900
	0x01C8EC4C ADRP X8, 0x22BF000
	0x01C8EC50 LDR X8, [X8 + 0x980]
	0x01C8EC54 MOV X1, X0

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {7}
	004 Move X0, [X1+160]
	005 Move X30, [X31+16]
	006 Return X0
	007 Call 0x1B6FA1C

