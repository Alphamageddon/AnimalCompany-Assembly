Type: AnimalCompany.NetworkManager

Method: Fusion.NetworkRunner get_currentRunner()

Disassembly:
	0x01CBC0F8 LDR X0, [X23]
	0x01CBC0FC BL 0x1B6EA0C

ISIL:
	001 Move X0, [X0+152]
	002 Return X0

Method: AnimalCompany.NetworkManager get_instance()

Disassembly:
	0x01CBC100 MOV X1, X31
	0x01CBC104 MOV X22, X0
	0x01CBC108 BL 0x32276F8
	0x01CBC10C STR W31, [X22 + 0x10]
	0x01CBC110 STR X21, [X22 + 0x20]
	0x01CBC114 STR W20, [X22 + 0x28]
	0x01CBC118 STR X19, [X22 + 0x30]
	0x01CBC11C MOV X0, X22
	0x01CBC120 LDP X20, X19, [X31 + 0x20]
	0x01CBC124 LDP X22, X21, [X31 + 0x10]
	0x01CBC128 LDP X30, X23, [X31], #0x30
	0x01CBC12C RET
	0x01CBC130 STR X30, [X31 - 0x20]!
	0x01CBC134 STP X20, X19, [X31 + 0x10]
	0x01CBC138 MOV W19, W1
	0x01CBC13C MOV X1, X31
	0x01CBC140 MOV X20, X0
	0x01CBC144 BL 0x32276F8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x2568000
	005 Move X20, 0x2292000
	006 Move W8, [X19+1310]
	007 Move X20, [X20+3960]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2292000
	013 Move X0, [X0+3960]
	014 Call 0x1B6F7F0
	015 Move W8, 1
	016 Move [X19+1310], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move X0, [X8+64]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Int32 get_LocalToken()

Disassembly:
	0x01CBC148 STR W19, [X20 + 0x10]
	0x01CBC14C LDP X20, X19, [X31 + 0x10]
	0x01CBC150 LDR X30, [X31], #0x20
	0x01CBC154 RET
	0x01CBC158 SUB X31, X31, 0xC0
	0x01CBC15C STR X30, [X31 + 0x80]
	0x01CBC160 STP X24, X23, [X31 + 0x90]
	0x01CBC164 STP X22, X21, [X31 + 0xA0]
	0x01CBC168 STP X20, X19, [X31 + 0xB0]
	0x01CBC16C ADRP X24, 0x2567000
	0x01CBC170 ADRP X23, 0x2293000
	0x01CBC174 LDRB W8, [X24 + 0x527]
	0x01CBC178 LDR X23, [X23 + 0xC8]
	0x01CBC17C MOV X19, X3
	0x01CBC180 MOV X20, X2
	0x01CBC184 MOV W22, W1
	0x01CBC188 MOV X21, X0
	0x01CBC18C TBNZ X8, 0x0, 0x1CBC1A4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x2568000
	005 Move X20, 0x2292000
	006 Move W8, [X19+1311]
	007 Move X20, [X20+3960]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2292000
	013 Move X0, [X0+3960]
	014 Call 0x1B6F7F0
	015 Move W8, 1
	016 Move [X19+1311], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move W0, [X8+8]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Boolean get_isVerified()

Disassembly:
	0x01CBC190 ADRP X0, 0x2293000
	0x01CBC194 LDR X0, [X0 + 0xC8]
	0x01CBC198 BL 0x1B6E7F0
	0x01CBC19C MOVZ W8, 0x1
	0x01CBC1A0 STRB W8, [X24 + 0x527]
	0x01CBC1A4 MOVI V0.2D, 0x0
	0x01CBC1A8 ADD X8, X31, 0x0
	0x01CBC1AC MOV X0, X31
	0x01CBC1B0 STR X31, [X31 + 0x70]
	0x01CBC1B4 STP V0, V0, [X31 + 0x50]
	0x01CBC1B8 STP V0, V0, [X31 + 0x30]
	0x01CBC1BC STR V0, [X31 + 0x2]
	0x01CBC1C0 BL 0x312CEE8
	0x01CBC1C4 LDP V0, V1, [X31]
	0x01CBC1C8 LDR X2, [X23]
	0x01CBC1CC ADD X8, X31, 0x20
	0x01CBC1D0 MOVN W9, 0x0
	0x01CBC1D4 ORR X0, X8, 0xF

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x2568000
	005 Move X20, 0x2292000
	006 Move W8, [X19+1312]
	007 Move X20, [X20+3960]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2292000
	013 Move X0, [X0+3960]
	014 Call 0x1B6F7F0
	015 Move W8, 1
	016 Move [X19+1312], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move W0, [X8+72]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Void set_isVerified(System.Boolean value)

Disassembly:
	0x01CBC1D8 ADD X1, X31, 0x20
	0x01CBC1DC STR W22, [X31 + 0x58]
	0x01CBC1E0 STR X20, [X31 + 0x60]
	0x01CBC1E4 STP X19, X21, [X31 + 0x48]
	0x01CBC1E8 STUR V0, [X31 + 0x28]
	0x01CBC1EC STUR V1, [X31 + 0x38]
	0x01CBC1F0 STR W9, [X31 + 0x20]
	0x01CBC1F4 BL 0x2089114
	0x01CBC1F8 LDP X20, X19, [X31 + 0xB0]
	0x01CBC1FC LDP X22, X21, [X31 + 0xA0]
	0x01CBC200 LDP X24, X23, [X31 + 0x90]
	0x01CBC204 LDR X30, [X31 + 0x80]
	0x01CBC208 ADD X31, X31, 0xC0
	0x01CBC20C RET
	0x01CBC210 SUB X31, X31, 0x170
	0x01CBC214 STR D10, [X31 + 0xF0]
	0x01CBC218 STP D9, D8, [X31 + 0x100]
	0x01CBC21C STP X29, X30, [X31 + 0x110]
	0x01CBC220 STP X28, X27, [X31 + 0x120]
	0x01CBC224 STP X26, X25, [X31 + 0x130]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2568000
	006 Move X20, 0x2292000
	007 Move W8, [X21+1313]
	008 Move X20, [X20+3960]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2292000
	015 Move X0, [X0+3960]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X21+1313], W8
	019 Move X8, [X20]
	020 And W9, W19, 1
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X8, [X8+184]
	024 Move [X8+72], W9
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return 

Method: System.Void Awake()

Disassembly:
	0x01CBC228 STP X24, X23, [X31 + 0x140]
	0x01CBC22C STP X22, X21, [X31 + 0x150]
	0x01CBC230 STP X20, X19, [X31 + 0x160]
	0x01CBC234 STR X0, [X31 + 0x30]
	0x01CBC238 MRS X23, 0xC000
	0x01CBC23C LDR X8, [X23 + 0x28]
	0x01CBC240 ADRP X21, 0x2567000
	0x01CBC244 ADRP X20, 0x2293000
	0x01CBC248 ADRP X19, 0x2293000
	0x01CBC24C STR X8, [X31 + 0xE8]
	0x01CBC250 LDRB W8, [X21 + 0x528]
	0x01CBC254 LDR X20, [X20 + 0xD0]
	0x01CBC258 LDR X19, [X19 + 0xD8]
	0x01CBC25C MOV X24, X1
	0x01CBC260 TBNZ X8, 0x0, 0x1CBC428
	0x01CBC264 ADRP X0, 0x2292000
	0x01CBC268 LDR X0, [X0 + 0x1A0]
	0x01CBC26C BL 0x1B6E7F0
	0x01CBC270 ADRP X0, 0x2293000
	0x01CBC274 LDR X0, [X0 + 0xE0]
	0x01CBC278 BL 0x1B6E7F0
	0x01CBC27C ADRP X0, 0x2293000
	0x01CBC280 LDR X0, [X0 + 0xE8]
	0x01CBC284 BL 0x1B6E7F0
	0x01CBC288 ADRP X0, 0x2293000
	0x01CBC28C LDR X0, [X0 + 0xF0]
	0x01CBC290 BL 0x1B6E7F0
	0x01CBC294 ADRP X0, 0x2292000
	0x01CBC298 LDR X0, [X0 + 0x298]
	0x01CBC29C BL 0x1B6E7F0
	0x01CBC2A0 ADRP X0, 0x2291000
	0x01CBC2A4 LDR X0, [X0 + 0x8B8]
	0x01CBC2A8 BL 0x1B6E7F0
	0x01CBC2AC ADRP X0, 0x2293000
	0x01CBC2B0 LDR X0, [X0 + 0xF8]
	0x01CBC2B4 BL 0x1B6E7F0
	0x01CBC2B8 ADRP X0, 0x2293000
	0x01CBC2BC LDR X0, [X0 + 0x100]
	0x01CBC2C0 BL 0x1B6E7F0
	0x01CBC2C4 ADRP X0, 0x2293000
	0x01CBC2C8 LDR X0, [X0 + 0x68]
	0x01CBC2CC BL 0x1B6E7F0
	0x01CBC2D0 ADRP X0, 0x2293000
	0x01CBC2D4 LDR X0, [X0 + 0xD8]
	0x01CBC2D8 BL 0x1B6E7F0
	0x01CBC2DC ADRP X0, 0x2293000
	0x01CBC2E0 LDR X0, [X0 + 0x108]
	0x01CBC2E4 BL 0x1B6E7F0
	0x01CBC2E8 ADRP X0, 0x2293000
	0x01CBC2EC LDR X0, [X0 + 0xD0]
	0x01CBC2F0 BL 0x1B6E7F0
	0x01CBC2F4 ADRP X0, 0x2292000
	0x01CBC2F8 LDR X0, [X0 + 0x470]
	0x01CBC2FC BL 0x1B6E7F0
	0x01CBC300 ADRP X0, 0x2293000
	0x01CBC304 LDR X0, [X0 + 0x110]
	0x01CBC308 BL 0x1B6E7F0
	0x01CBC30C ADRP X0, 0x2293000
	0x01CBC310 LDR X0, [X0 + 0x118]
	0x01CBC314 BL 0x1B6E7F0
	0x01CBC318 ADRP X0, 0x2293000
	0x01CBC31C LDR X0, [X0 + 0x120]
	0x01CBC320 BL 0x1B6E7F0
	0x01CBC324 ADRP X0, 0x2293000
	0x01CBC328 LDR X0, [X0 + 0x128]
	0x01CBC32C BL 0x1B6E7F0
	0x01CBC330 ADRP X0, 0x2292000
	0x01CBC334 LDR X0, [X0 + 0x478]
	0x01CBC338 BL 0x1B6E7F0
	0x01CBC33C ADRP X0, 0x2293000
	0x01CBC340 LDR X0, [X0 + 0x130]
	0x01CBC344 BL 0x1B6E7F0
	0x01CBC348 ADRP X0, 0x2291000
	0x01CBC34C LDR X0, [X0 + 0x628]
	0x01CBC350 BL 0x1B6E7F0
	0x01CBC354 ADRP X0, 0x2293000
	0x01CBC358 LDR X0, [X0 + 0x138]
	0x01CBC35C BL 0x1B6E7F0
	0x01CBC360 ADRP X0, 0x2293000
	0x01CBC364 LDR X0, [X0 + 0x140]
	0x01CBC368 BL 0x1B6E7F0
	0x01CBC36C ADRP X0, 0x2292000
	0x01CBC370 LDR X0, [X0 + 0x248]
	0x01CBC374 BL 0x1B6E7F0
	0x01CBC378 ADRP X0, 0x2293000
	0x01CBC37C LDR X0, [X0 + 0x148]
	0x01CBC380 BL 0x1B6E7F0
	0x01CBC384 ADRP X0, 0x2292000
	0x01CBC388 LDR X0, [X0 + 0x250]
	0x01CBC38C BL 0x1B6E7F0
	0x01CBC390 ADRP X0, 0x2291000
	0x01CBC394 LDR X0, [X0 + 0x478]
	0x01CBC398 BL 0x1B6E7F0
	0x01CBC39C ADRP X0, 0x2292000
	0x01CBC3A0 LDR X0, [X0 + 0xB88]
	0x01CBC3A4 BL 0x1B6E7F0
	0x01CBC3A8 ADRP X0, 0x2292000
	0x01CBC3AC LDR X0, [X0 + 0x4A8]
	0x01CBC3B0 BL 0x1B6E7F0
	0x01CBC3B4 ADRP X0, 0x2291000
	0x01CBC3B8 LDR X0, [X0 + 0xBC8]
	0x01CBC3BC BL 0x1B6E7F0
	0x01CBC3C0 ADRP X0, 0x2293000
	0x01CBC3C4 LDR X0, [X0 + 0x150]
	0x01CBC3C8 BL 0x1B6E7F0
	0x01CBC3CC ADRP X0, 0x2293000
	0x01CBC3D0 LDR X0, [X0 + 0x158]
	0x01CBC3D4 BL 0x1B6E7F0
	0x01CBC3D8 ADRP X0, 0x2293000
	0x01CBC3DC LDR X0, [X0 + 0x160]
	0x01CBC3E0 BL 0x1B6E7F0
	0x01CBC3E4 ADRP X0, 0x2293000
	0x01CBC3E8 LDR X0, [X0 + 0x168]
	0x01CBC3EC BL 0x1B6E7F0
	0x01CBC3F0 ADRP X0, 0x2293000
	0x01CBC3F4 LDR X0, [X0 + 0x170]
	0x01CBC3F8 BL 0x1B6E7F0
	0x01CBC3FC ADRP X0, 0x2293000
	0x01CBC400 LDR X0, [X0 + 0x178]
	0x01CBC404 BL 0x1B6E7F0
	0x01CBC408 ADRP X0, 0x2293000
	0x01CBC40C LDR X0, [X0 + 0x180]
	0x01CBC410 BL 0x1B6E7F0
	0x01CBC414 ADRP X0, 0x2293000
	0x01CBC418 LDR X0, [X0 + 0x188]
	0x01CBC41C BL 0x1B6E7F0
	0x01CBC420 MOVZ W8, 0x1
	0x01CBC424 STRB W8, [X21 + 0x528]
	0x01CBC428 LDR X0, [X20]
	0x01CBC42C STP X31, X31, [X31 + 0xA0]
	0x01CBC430 STR W31, [X31 + 0x98]
	0x01CBC434 STP X31, X31, [X31 + 0x88]
	0x01CBC438 STP X31, X31, [X31 + 0x78]
	0x01CBC43C BL 0x1B6EA0C
	0x01CBC440 LDR X1, [X19]
	0x01CBC444 MOV X20, X0
	0x01CBC448 BL 0x28BC23C
	0x01CBC44C CBZ X24, 0x1CBD3A0
	0x01CBC450 MOV X0, X24
	0x01CBC454 MOV X1, X31
	0x01CBC458 BL 0x1D856BC
	0x01CBC45C CBZ X0, 0x1CBD3A0
	0x01CBC460 ADRP X10, 0x2293000
	0x01CBC464 LDR X8, [X0]
	0x01CBC468 LDR X10, [X10 + 0x118]
	0x01CBC46C MOV X22, X0
	0x01CBC470 STP X23, X24, [X31 + 0x18]
	0x01CBC474 LDRH W9, [X8 + 0x12E]
	0x01CBC478 LDR X1, [X10]
	0x01CBC47C CBZ X9, 0x1CBC4A0
	0x01CBC480 LDR X10, [X8 + 0xB0]
	0x01CBC484 ADD X10, X10, 0x8
	0x01CBC488 LDUR X11, [X10 - 0x8]
	0x01CBC48C CMP X11, X1
	0x01CBC490 B.EQ 0x1CBC4B0
	0x01CBC494 SUBS X9, X9, 0x1
	0x01CBC498 ADD X10, X10, 0x10
	0x01CBC49C B.NE 0x1CBC488
	0x01CBC4A0 MOV X0, X22
	0x01CBC4A4 MOV W2, W31
	0x01CBC4A8 BL 0x1BB4284
	0x01CBC4AC B 0x1CBC4BC
	0x01CBC4B0 LDRSW X9, [X10]
	0x01CBC4B4 ADD X8, X8, X9, 0x4, LSL
	0x01CBC4B8 ADD X0, X8, 0x138
	0x01CBC4BC ADRP X29, 0x2292000
	0x01CBC4C0 ADRP X23, 0x2293000
	0x01CBC4C4 ADRP X21, 0x2293000
	0x01CBC4C8 ADRP X19, 0x2293000
	0x01CBC4CC LDR X29, [X29 + 0x478]
	0x01CBC4D0 LDR X23, [X23 + 0x158]
	0x01CBC4D4 LDR X21, [X21 + 0x120]
	0x01CBC4D8 LDR X19, [X19 + 0xF0]
	0x01CBC4DC LDP X8, X1, [X0]
	0x01CBC4E0 MOV X0, X22
	0x01CBC4E4 BLR X8
	0x01CBC4E8 MOV X22, X0
	0x01CBC4EC MOV X24, X31
	0x01CBC4F0 STR X20, [X31 + 0x38]
	0x01CBC4F4 STR X24, [X31 + 0x28]
	0x01CBC4F8 CBZ X22, 0x1CBD3B8
	0x01CBC4FC LDR X8, [X22]
	0x01CBC500 LDR X1, [X29]
	0x01CBC504 LDRH W9, [X8 + 0x12E]
	0x01CBC508 CBZ X9, 0x1CBC52C
	0x01CBC50C LDR X10, [X8 + 0xB0]
	0x01CBC510 ADD X10, X10, 0x8
	0x01CBC514 LDUR X11, [X10 - 0x8]
	0x01CBC518 CMP X11, X1
	0x01CBC51C B.EQ 0x1CBC53C
	0x01CBC520 SUBS X9, X9, 0x1
	0x01CBC524 ADD X10, X10, 0x10
	0x01CBC528 B.NE 0x1CBC514
	0x01CBC52C MOV X0, X22
	0x01CBC530 MOV W2, W31
	0x01CBC534 BL 0x1BB4284
	0x01CBC538 B 0x1CBC548
	0x01CBC53C LDRSW X9, [X10]
	0x01CBC540 ADD X8, X8, X9, 0x4, LSL
	0x01CBC544 ADD X0, X8, 0x138
	0x01CBC548 LDP X8, X1, [X0]
	0x01CBC54C MOV X0, X22
	0x01CBC550 BLR X8

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X20, 0x2568000
	010 Move X21, 0x2292000
	011 Move W8, [X20+1314]
	012 Move X21, [X21+3960]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {50}
	018 Move X0, 0x2292000
	019 Move X0, [X0+1256]
	020 Call 0x1B6F7F0
	021 Move X0, 0x2294000
	022 Move X0, [X0+64]
	023 Call 0x1B6F7F0
	024 Move X0, 0x2292000
	025 Move X0, [X0+2976]
	026 Call 0x1B6F7F0
	027 Move X0, 0x2294000
	028 Move X0, [X0+72]
	029 Call 0x1B6F7F0
	030 Move X0, 0x2294000
	031 Move X0, [X0+80]
	032 Call 0x1B6F7F0
	033 Move X0, 0x2292000
	034 Move X0, [X0+3960]
	035 Call 0x1B6F7F0
	036 Move X0, 0x2292000
	037 Move X0, [X0+1144]
	038 Call 0x1B6F7F0
	039 Move X0, 0x2292000
	040 Move X0, [X0+2960]
	041 Call 0x1B6F7F0
	042 Move X0, 0x2294000
	043 Move X0, [X0+88]
	044 Call 0x1B6F7F0
	045 Move X0, 0x2293000
	046 Move X0, [X0+3600]
	047 Call 0x1B6F7F0
	048 Move W8, 1
	049 Move [X20+1314], W8
	050 Move X8, [X21]
	051 Move X0, X19
	052 Move X1, X31
	053 Move X8, [X8+184]
	054 Move [X8+64], X19
	055 Call Component.get_gameObject, X0
	056 Compare X0, 0
	057 JumpIfEqual {225}
	058 Move X8, 0x2294000
	059 Move X8, [X8+64]
	060 Move X1, [X8]
	061 Call 0x20CFE08, X0
	062 Move [X19+176], X0
	063 Compare X0, 0
	064 JumpIfEqual {225}
	065 Move X8, 0x2292000
	066 Move X8, [X8+1144]
	067 Move [X0+32], W31
	068 Move X20, [X19+112]
	069 Move X0, [X8]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1B6F8F8
	074 Move X0, X20
	075 Move X1, X31
	076 Move X2, X31
	077 Call Object.op_Equality, X0, X1
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {86}
	082 Move X0, X19
	083 Move X1, X31
	084 Call Component.get_transform, X0
	085 Move [X19+112], X0
	086 Move X8, [X21]
	087 Move X22, 0x2293000
	088 Move X23, 0x2294000
	089 Move X24, 0x2294000
	090 Move X8, [X8+184]
	091 Move X8, [X8]
	092 Move X22, [X22+3600]
	093 Move X23, [X23+88]
	094 Move X24, [X24+80]
	095 Compare X8, 0
	096 JumpIfNotEqual {125}
	097 Move X0, X31
	098 Call Guid.NewGuid
	099 Move [X31+16], X0
	100 Move [X31+24], X1
	101 Add X0, X31, 16
	102 Move X1, X31
	103 Call Guid.ToByteArray, X0
	104 Move X8, [X21]
	105 Move X2, X31
	106 Move X8, [X8+184]
	107 Move [X8], X0
	108 Move X8, [X21]
	109 Add X0, X31, 0
	110 Move X8, [X8+184]
	111 Move X1, [X8]
	112 Move [X31+16], X31
	113 Move [X31+24], X31
	114 Move [X31], X31
	115 Move [X31+8], X31
	116 Call Guid..ctor, X0, X1
	117 Move V0, [X31]
	118 Add X0, X31, 16
	119 Move X1, X31
	120 Move [X31+1], V0
	121 Call Guid.GetHashCode, X0
	122 Move X8, [X21]
	123 Move X8, [X8+184]
	124 Move [X8+8], W0
	125 Move X8, [X22]
	126 Move X0, [X23]
	127 Move X8, [X8+184]
	128 Move X20, [X8+8]
	129 Call 0x1B6FA0C
	130 Move X2, [X24]
	131 Move X1, X19
	132 Move X3, X31
	133 Move X21, X0
	134 Call OnCodeEnteredDelegate..ctor, X0, X1, X2
	135 Move X0, X20
	136 Move X1, X21
	137 Move X2, X31
	138 Call Delegate.Combine, X0, X1
	139 Compare X0, 0
	140 JumpIfEqual {150}
	141 Move X1, [X23]
	142 Move X8, [X0]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X8, [X22]
	145 Move X8, [X8+184]
	146 Move [X8+8], X0
	147 Move X8, [X0]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Call 0x1B6FCDC
	150 Move X8, [X22]
	151 Move X8, [X8+184]
	152 Move [X8+8], X0
	153 Move X8, 0x2292000
	154 Move X8, [X8+2960]
	155 Move X20, 0x2294000
	156 Move X22, 0x2292000
	157 Move X21, 0x2292000
	158 Move X0, [X8]
	159 Move X20, [X20+72]
	160 Move X22, [X22+2976]
	161 Move X21, [X21+1256]
	162 Call 0x1B6FA0C
	163 Move X2, [X20]
	164 Move X1, X19
	165 Move X3, X31
	166 Move X20, X0
	167 Call ObserverDelegate..ctor, X0, X1, X2
	168 Move X0, [X22]
	169 Move W1, 1
	170 Call 0x1B6F868
	171 Move X8, [X21]
	172 Move X19, X0
	173 Move W9, [X8+224]
	174 Compare W9, 0
	175 JumpIfNotEqual {178}
	176 Move X0, X8
	177 Call 0x1B6F8F8
	178 Move X22, 0x2568000
	179 Move W8, [X22+1091]
	180 Compare W8, 0
	181 JumpIfNotEqual {187}
	182 Move X0, 0x2292000
	183 Move X0, [X0+1256]
	184 Call 0x1B6F7F0
	185 Move W8, 1
	186 Move [X22+1091], W8
	187 Move X0, [X21]
	188 Move W8, [X0+224]
	189 Compare W8, 0
	190 JumpIfNotEqual {193}
	191 Call 0x1B6F8F8
	192 Move X0, [X21]
	193 Move X8, [X0+184]
	194 Move X8, [X8]
	195 Compare X8, 0
	196 JumpIfEqual {225}
	197 Compare X19, 0
	198 JumpIfEqual {225}
	199 Move X21, [X8+96]
	200 Compare X21, 0
	201 JumpIfEqual {208}
	202 Move X8, [X19]
	203 Move X0, X21
	204 Move X1, [X8+64]
	205 Call 0x1B6F8FC
	206 Compare X0, 0
	207 JumpIfEqual {227}
	208 Move W8, [X19+24]
	209 Compare W8, 0
	210 JumpIfEqual {226}
	211 Move X0, X20
	212 Move X1, X19
	213 Move X2, X31
	214 Move [X19+32], X21
	215 Call App.RegisterObserver, X0, X1
	216 Move X20, [X31+80]
	217 Move X19, [X31+88]
	218 Move X22, [X31+64]
	219 Move X21, [X31+72]
	220 Move X24, [X31+48]
	221 Move X23, [X31+56]
	222 Move X30, [X31+32]
	223 Add X31, X31, 96
	224 Return 
	225 Call 0x1B6FA1C
	226 Call 0x1B6FA24
	227 Call 0x1B6FA40
	228 Move X1, X31
	229 Call 0x1B6F8E8

Method: System.Void OnDestroy()

Disassembly:
	0x01CBC5C0 BLR X8
	0x01CBC5C4 CBZ X24, 0x1CBD32C
	0x01CBC5C8 MOV X25, X0
	0x01CBC5CC STR X0, [X24 + 0x10]
	0x01CBC5D0 CBZ X0, 0x1CBD334
	0x01CBC5D4 LDR X26, [X19]
	0x01CBC5D8 LDR X8, [X26 + 0x38]
	0x01CBC5DC CBNZ X8, 0x1CBC5E8
	0x01CBC5E0 MOV X0, X26
	0x01CBC5E4 BL 0x1BB41DC
	0x01CBC5E8 MOV X0, X25
	0x01CBC5EC MOV X1, X31
	0x01CBC5F0 BL 0x3A9B0C0
	0x01CBC5F4 CBZ X0, 0x1CBD330
	0x01CBC5F8 LDR X8, [X26 + 0x38]
	0x01CBC5FC LDR X2, [X8 + 0x8]
	0x01CBC600 ADD X1, X31, 0xA8
	0x01CBC604 BL 0x20D02D0
	0x01CBC608 TBZ X0, 0x0, 0x1CBC4FC
	0x01CBC60C LDR X26, [X24 + 0x10]
	0x01CBC610 CBZ X26, 0x1CBD3C4
	0x01CBC614 ADRP X8, 0x2293000
	0x01CBC618 LDR X8, [X8 + 0xE0]
	0x01CBC61C LDR X25, [X8]
	0x01CBC620 LDR X8, [X25 + 0x38]
	0x01CBC624 CBNZ X8, 0x1CBC630
	0x01CBC628 MOV X0, X25
	0x01CBC62C BL 0x1BB41DC
	0x01CBC630 MOV X0, X26
	0x01CBC634 MOV X1, X31
	0x01CBC638 BL 0x3A9B0C0
	0x01CBC63C CBZ X0, 0x1CBD3C8
	0x01CBC640 LDR X8, [X25 + 0x38]
	0x01CBC644 LDR X1, [X8]
	0x01CBC648 BL 0x20CF154
	0x01CBC64C ADRP X8, 0x2291000
	0x01CBC650 LDR X8, [X8 + 0x478]
	0x01CBC654 MOV X26, X0
	0x01CBC658 STR X31, [X31 + 0xA0]
	0x01CBC65C LDR X0, [X8]
	0x01CBC660 LDR W8, [X0 + 0xE0]
	0x01CBC664 CBNZ W8, 0x1CBC66C
	0x01CBC668 BL 0x1B6E8F8
	0x01CBC66C MOV X0, X26
	0x01CBC670 MOV X1, X31
	0x01CBC674 MOV X2, X31
	0x01CBC678 BL 0x3A9D6EC
	0x01CBC67C TBZ X0, 0x0, 0x1CBC6EC
	0x01CBC680 CBZ X26, 0x1CBD3FC
	0x01CBC684 LDR X8, [X31 + 0x30]
	0x01CBC688 LDR X25, [X8 + 0x80]
	0x01CBC68C MOV X0, X26
	0x01CBC690 MOV X1, X31
	0x01CBC694 BL 0x1CB5EF4
	0x01CBC698 MOV W1, W0
	0x01CBC69C CBZ X25, 0x1CBD410
	0x01CBC6A0 ADRP X8, 0x2293000
	0x01CBC6A4 LDR X8, [X8 + 0x68]
	0x01CBC6A8 LDR X3, [X8]
	0x01CBC6AC ADD X2, X31, 0xA0
	0x01CBC6B0 MOV X0, X25
	0x01CBC6B4 BL 0x286A69C
	0x01CBC6B8 ADRP X8, 0x2291000
	0x01CBC6BC LDR X8, [X8 + 0x478]
	0x01CBC6C0 LDR X25, [X31 + 0xA0]
	0x01CBC6C4 LDR X0, [X8]
	0x01CBC6C8 LDR W8, [X0 + 0xE0]
	0x01CBC6CC CBNZ W8, 0x1CBC6D4
	0x01CBC6D0 BL 0x1B6E8F8
	0x01CBC6D4 MOV X0, X25
	0x01CBC6D8 MOV X1, X31
	0x01CBC6DC MOV X2, X31
	0x01CBC6E0 BL 0x3A9D6EC
	0x01CBC6E4 MOV W25, W0
	0x01CBC6E8 B 0x1CBC6F0
	0x01CBC6EC MOV W25, W31
	0x01CBC6F0 ADRP X8, 0x2291000
	0x01CBC6F4 LDR X8, [X8 + 0x478]
	0x01CBC6F8 LDR X27, [X31 + 0xA0]
	0x01CBC6FC LDR X0, [X8]
	0x01CBC700 LDR W8, [X0 + 0xE0]
	0x01CBC704 CBNZ W8, 0x1CBC70C
	0x01CBC708 BL 0x1B6E8F8
	0x01CBC70C MOV X0, X27
	0x01CBC710 MOV X1, X31
	0x01CBC714 MOV X2, X31
	0x01CBC718 BL 0x3AA0AF0
	0x01CBC71C TBZ X0, 0x0, 0x1CBC7E8
	0x01CBC720 LDR X0, [X24 + 0x10]
	0x01CBC724 CBZ X0, 0x1CBD408
	0x01CBC728 MOV X1, X31
	0x01CBC72C BL 0x1D9EAAC
	0x01CBC730 ADRP X8, 0x2292000
	0x01CBC734 LDR X8, [X8 + 0x4A8]
	0x01CBC738 MOV X26, X0
	0x01CBC73C LDR X0, [X8]
	0x01CBC740 LDR W8, [X0 + 0xE0]
	0x01CBC744 CBNZ W8, 0x1CBC74C
	0x01CBC748 BL 0x1B6E8F8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2568000
	008 Move X21, 0x2293000
	009 Move W8, [X20+1315]
	010 Move X21, [X21+448]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0x2292000
	017 Move X0, [X0+1256]
	018 Call 0x1B6F7F0
	019 Move X0, 0x2293000
	020 Move X0, [X0+448]
	021 Call 0x1B6F7F0
	022 Move X0, 0x2294000
	023 Move X0, [X0+72]
	024 Call 0x1B6F7F0
	025 Move X0, 0x2294000
	026 Move X0, [X0+80]
	027 Call 0x1B6F7F0
	028 Move X0, 0x2292000
	029 Move X0, [X0+2960]
	030 Call 0x1B6F7F0
	031 Move X0, 0x2294000
	032 Move X0, [X0+88]
	033 Call 0x1B6F7F0
	034 Move X0, 0x2293000
	035 Move X0, [X0+3600]
	036 Call 0x1B6F7F0
	037 Move W8, 1
	038 Move [X20+1315], W8
	039 Move X0, [X21]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1B6F8F8
	044 Compare X19, 0
	045 JumpIfEqual {111}
	046 Move W8, [X19+48]
	047 Move X22, 0x2293000
	048 Move X22, [X22+3600]
	049 Move X23, 0x2294000
	050 Or W8, W8, 8
	051 Move [X19+48], W8
	052 Move X8, [X22]
	053 Move X21, 0x2294000
	054 Move X8, [X8+184]
	055 Move X23, [X23+88]
	056 Move X20, [X8+8]
	057 Move X0, [X23]
	058 Move X21, [X21+80]
	059 Call 0x1B6FA0C
	060 Move X2, [X21]
	061 Move X1, X19
	062 Move X3, X31
	063 Move X21, X0
	064 Call OnCodeEnteredDelegate..ctor, X0, X1, X2
	065 Move X0, X20
	066 Move X1, X21
	067 Move X2, X31
	068 Call Delegate.Remove, X0, X1
	069 Compare X0, 0
	070 JumpIfEqual {80}
	071 Move X1, [X23]
	072 Move X8, [X0]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X8, [X22]
	075 Move X8, [X8+184]
	076 Move [X8+8], X0
	077 Move X8, [X0]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Call 0x1B6FCDC
	080 Move X8, [X22]
	081 Move X8, [X8+184]
	082 Move [X8+8], X0
	083 Move X8, 0x2292000
	084 Move X8, [X8+2960]
	085 Move X20, 0x2294000
	086 Move X21, 0x2292000
	087 Move X0, [X8]
	088 Move X20, [X20+72]
	089 Move X21, [X21+1256]
	090 Call 0x1B6FA0C
	091 Move X2, [X20]
	092 Move X1, X19
	093 Move X3, X31
	094 Move X20, X0
	095 Call ObserverDelegate..ctor, X0, X1, X2
	096 Move X0, [X21]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1B6F8F8
	101 Move X0, X20
	102 Move X20, [X31+32]
	103 Move X19, [X31+40]
	104 Move X22, [X31+16]
	105 Move X21, [X31+24]
	106 Move X1, X31
	107 Move X30, [X31+48]
	108 Move X23, [X31+56]
	109 Call App.DeregisterObserver, X0
	110 Return 
	111 Call 0x1B6FA1C

Method: System.Void HandleAppStartupComplete(SpatialSys.ObservableState.StateChangedEventArgs args)

Disassembly:
	0x01CBC74C MOV X0, X31
	0x01CBC750 BL 0x1D811AC
	0x01CBC754 CMP W26, W0
	0x01CBC758 B.EQ 0x1CBC968
	0x01CBC75C ADRP X8, 0x2292000
	0x01CBC760 LDR X8, [X8 + 0x4A8]
	0x01CBC764 LDR X9, [X31 + 0x30]
	0x01CBC768 LDR X0, [X8]
	0x01CBC76C LDR W20, [X9 + 0xBC]
	0x01CBC770 LDR W8, [X0 + 0xE0]
	0x01CBC774 CBNZ W8, 0x1CBC77C
	0x01CBC778 BL 0x1B6E8F8
	0x01CBC77C CMP W20, W26
	0x01CBC780 B.NE 0x1CBC968
	0x01CBC784 ADRP X8, 0x2291000
	0x01CBC788 LDR X8, [X8 + 0xBC8]
	0x01CBC78C LDR X0, [X8]
	0x01CBC790 MOVZ W1, 0x6
	0x01CBC794 BL 0x1B6E868
	0x01CBC798 MOV X26, X0
	0x01CBC79C CBZ X0, 0x1CBD438
	0x01CBC7A0 LDR W8, [X26 + 0x18]
	0x01CBC7A4 CBZ W8, 0x1CBD44C
	0x01CBC7A8 ADRP X9, 0x2293000
	0x01CBC7AC LDR X9, [X9 + 0x170]
	0x01CBC7B0 LDR X0, [X31 + 0x28]
	0x01CBC7B4 LDR X9, [X9]
	0x01CBC7B8 STR X9, [X26 + 0x20]
	0x01CBC7BC LDR X9, [X24 + 0x10]
	0x01CBC7C0 CMP X9, 0x0
	0x01CBC7C4 CSEL X0, X0, X9, EQ
	0x01CBC7C8 STR X0, [X31 + 0x28]
	0x01CBC7CC CBZ X9, 0x1CBC86C
	0x01CBC7D0 CBZ X0, 0x1CBD454
	0x01CBC7D4 LDR X8, [X0]
	0x01CBC7D8 LDP X9, X1, [X8 + 0x168]
	0x01CBC7DC BLR X9
	0x01CBC7E0 LDR W8, [X26 + 0x18]
	0x01CBC7E4 B 0x1CBC870
	0x01CBC7E8 LDR X0, [X31 + 0xA0]
	0x01CBC7EC CBZ X0, 0x1CBD424
	0x01CBC7F0 MOV X1, X31
	0x01CBC7F4 BL 0x3A9B084
	0x01CBC7F8 MOV X27, X0
	0x01CBC7FC LDR X0, [X31 + 0xA8]
	0x01CBC800 CBZ X0, 0x1CBD428
	0x01CBC804 ADD X8, X31, 0xB0
	0x01CBC808 MOV X1, X31
	0x01CBC80C BL 0x1D700DC
	0x01CBC810 LDR X0, [X31 + 0xA8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2568000
	006 Move X20, 0x2292000
	007 Move W8, [X21+1316]
	008 Move X20, [X20+1256]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2292000
	015 Move X0, [X0+1256]
	016 Call 0x1B6F7F0
	017 Move X0, 0x2292000
	018 Move X0, [X0+3328]
	019 Call 0x1B6F7F0
	020 Move W8, 1
	021 Move [X21+1316], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1B6F8F8
	027 Move X21, 0x2568000
	028 Move W8, [X21+1091]
	029 Compare W8, 0
	030 JumpIfNotEqual {36}
	031 Move X0, 0x2292000
	032 Move X0, [X0+1256]
	033 Call 0x1B6F7F0
	034 Move W8, 1
	035 Move [X21+1091], W8
	036 Move X0, [X20]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1B6F8F8
	041 Move X0, [X20]
	042 Move X8, [X0+184]
	043 Move X8, [X8]
	044 Compare X8, 0
	045 JumpIfEqual {65}
	046 Move X9, 0x2292000
	047 Move X9, [X9+3328]
	048 Move X0, [X8+96]
	049 Move X1, [X9]
	050 Call 0x24BA848, X0
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {60}
	055 Move X0, X19
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X30, [X31+32]
	063 Move X21, [X31+40]
	064 Return 
	065 Call 0x1B6FA1C

Method: System.Void TestJoinWithSessionCode()

Disassembly:
	0x01CBC878 CMP W8, 0x2
	0x01CBC87C STR X0, [X26 + 0x28]

ISIL:
	001 Move X1, [X0+80]

Method: System.Boolean JoinWithSessionCode(System.String code)

Disassembly:
	0x01CBC880 B.EQ 0x1CBD444
	0x01CBC884 ADRP X8, 0x2293000
	0x01CBC888 LDR X8, [X8 + 0x180]
	0x01CBC88C ADRP X9, 0x2292000
	0x01CBC890 LDR X8, [X8]
	0x01CBC894 STR X8, [X26 + 0x30]
	0x01CBC898 LDR X8, [X31 + 0x30]
	0x01CBC89C LDR W8, [X8 + 0xBC]
	0x01CBC8A0 LDR X9, [X9 + 0x4A8]
	0x01CBC8A4 STR W8, [X31 + 0x98]
	0x01CBC8A8 LDR X0, [X9]
	0x01CBC8AC LDR W8, [X0 + 0xE0]
	0x01CBC8B0 CBNZ W8, 0x1CBC8B8
	0x01CBC8B4 BL 0x1B6E8F8
	0x01CBC8B8 ADD X0, X31, 0x98
	0x01CBC8BC MOV X1, X31
	0x01CBC8C0 BL 0x1D812B0
	0x01CBC8C4 LDR W8, [X26 + 0x18]
	0x01CBC8C8 CMP W8, 0x3
	0x01CBC8CC B.LS 0x1CBD430
	0x01CBC8D0 CMP W8, 0x4
	0x01CBC8D4 STR X0, [X26 + 0x38]
	0x01CBC8D8 B.EQ 0x1CBD450
	0x01CBC8DC ADRP X8, 0x2293000
	0x01CBC8E0 LDR X8, [X8 + 0x160]
	0x01CBC8E4 LDR X8, [X8]
	0x01CBC8E8 STR X8, [X26 + 0x40]
	0x01CBC8EC LDR X8, [X31 + 0x30]
	0x01CBC8F0 LDR X0, [X8 + 0x38]
	0x01CBC8F4 CBZ X0, 0x1CBD448
	0x01CBC8F8 MOV X1, X31
	0x01CBC8FC BL 0x1D87528
	0x01CBC900 STR W0, [X31 + 0x98]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+152]
	006 Compare X0, 0
	007 JumpIfEqual {33}
	008 Move X20, X1
	009 Move X1, X31
	010 Call NetworkRunner.get_State, X0
	011 NotImplemented "Instruction CMP not yet implemented."
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X0, [X19+152]
	014 Move [X19+80], X20
	015 Compare X0, 0
	016 JumpIfEqual {33}
	017 Move W1, 1
	018 Move W2, W31
	019 Move W3, W31
	020 Move X4, X31
	021 Move W19, 1
	022 Call NetworkRunner.Shutdown, X0, X1, X2, X3
	023 Move X0, X19
	024 Move [X19+80], X20
	025 Call NetworkManager.AutoJoin, X0
	026 Move W19, 1
	027 Move W19, W31
	028 Move W0, W19
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return X0
	033 Call 0x1B6FA1C

Method: System.Void FixedUpdateNetwork()

Disassembly:
	0x01CBC904 ADD X0, X31, 0x98
	0x01CBC908 MOV X1, X31
	0x01CBC90C BL 0x1D812B0
	0x01CBC910 LDR W8, [X26 + 0x18]
	0x01CBC914 CMP W8, 0x5
	0x01CBC918 B.LS 0x1CBD43C
	0x01CBC91C STR X0, [X26 + 0x48]
	0x01CBC920 MOV X0, X26
	0x01CBC924 MOV X1, X31
	0x01CBC928 BL 0x3090714
	0x01CBC92C ADRP X8, 0x2291000
	0x01CBC930 LDR X8, [X8 + 0x8B8]
	0x01CBC934 MOV X26, X0
	0x01CBC938 LDR X0, [X8]
	0x01CBC93C LDR W8, [X0 + 0xE0]
	0x01CBC940 CBNZ W8, 0x1CBC948
	0x01CBC944 BL 0x1B6E8F8
	0x01CBC948 MOV X0, X26
	0x01CBC94C MOV X1, X31
	0x01CBC950 BL 0x3A6F5F8
	0x01CBC954 LDR X8, [X31 + 0x30]
	0x01CBC958 LDR X0, [X8 + 0x38]
	0x01CBC95C CBZ X0, 0x1CBD434
	0x01CBC960 MOV X1, X31
	0x01CBC964 BL 0x1D87528
	0x01CBC968 LDR X0, [X31 + 0xA8]
	0x01CBC96C CBZ X0, 0x1CBD418
	0x01CBC970 LDR X26, [X24 + 0x10]
	0x01CBC974 ADD X8, X31, 0xB0
	0x01CBC978 MOV X1, X31
	0x01CBC97C BL 0x1D700DC
	0x01CBC980 ADRP X8, 0x2292000
	0x01CBC984 LDP S0, S1, [X31 + 0xB8]
	0x01CBC988 LDR V2, [X31 + 0xC0]
	0x01CBC98C LDR X8, [X8 + 0x248]
	0x01CBC990 STP X31, X31, [X31 + 0x68]
	0x01CBC994 LDR X1, [X8]
	0x01CBC998 ADD X0, X31, 0x68
	0x01CBC99C BL 0x22DC630
	0x01CBC9A0 LDR X0, [X31 + 0xA8]
	0x01CBC9A4 CBZ X0, 0x1CBD400
	0x01CBC9A8 ADD X8, X31, 0xB0
	0x01CBC9AC MOV X1, X31
	0x01CBC9B0 BL 0x1D700DC
	0x01CBC9B4 ADRP X8, 0x2292000
	0x01CBC9B8 LDP S0, S1, [X31 + 0xC4]
	0x01CBC9BC LDP S2, S3, [X31 + 0xCC]
	0x01CBC9C0 LDR X8, [X8 + 0x250]
	0x01CBC9C4 STP X31, X31, [X31 + 0xB0]
	0x01CBC9C8 STR W31, [X31 + 0xC0]
	0x01CBC9CC LDR X1, [X8]
	0x01CBC9D0 ADD X0, X31, 0xB0
	0x01CBC9D4 BL 0x22D82D0
	0x01CBC9D8 LDR X0, [X24 + 0x10]
	0x01CBC9DC CBZ X0, 0x1CBD404
	0x01CBC9E0 MOV X1, X31
	0x01CBC9E4 BL 0x1D9EAAC
	0x01CBC9E8 ADRP X8, 0x2293000
	0x01CBC9EC LDR X8, [X8 + 0x148]
	0x01CBC9F0 AND X1, X0, 0x0
	0x01CBC9F4 STR X31, [X31 + 0x60]
	0x01CBC9F8 LDR X2, [X8]
	0x01CBC9FC ADD X0, X31, 0x60
	0x01CBCA00 BL 0x22D7A5C
	0x01CBCA04 ADRP X8, 0x2292000
	0x01CBCA08 LDR X8, [X8 + 0xB88]
	0x01CBCA0C LDR X0, [X8]
	0x01CBCA10 BL 0x1B6EA0C
	0x01CBCA14 ADRP X8, 0x2293000
	0x01CBCA18 LDR X8, [X8 + 0x150]
	0x01CBCA1C MOV X27, X0
	0x01CBCA20 LDR X2, [X8]
	0x01CBCA24 MOV X1, X24
	0x01CBCA28 MOV X3, X31
	0x01CBCA2C BL 0x1DA90FC
	0x01CBCA30 LDR V0, [X31 + 0xB]
	0x01CBCA34 LDR W8, [X31 + 0xC0]
	0x01CBCA38 LDP X2, X3, [X31 + 0x68]
	0x01CBCA3C LDR X5, [X31 + 0x60]
	0x01CBCA40 STR V0, [X31 + 0x4]
	0x01CBCA44 STR W8, [X31 + 0x50]
	0x01CBCA48 LDR X0, [X31 + 0x20]
	0x01CBCA4C ADD X4, X31, 0x40
	0x01CBCA50 MOV X1, X26
	0x01CBCA54 MOV X6, X27
	0x01CBCA58 MOV W7, W31
	0x01CBCA5C STR X31, [X31]
	0x01CBCA60 BL 0x1D99058
	0x01CBCA64 MOV X27, X0
	0x01CBCA68 STR X0, [X31 + 0xA0]
	0x01CBCA6C CBZ X0, 0x1CBD414
	0x01CBCA70 ADRP X8, 0x2293000
	0x01CBCA74 LDR X8, [X8 + 0xE0]
	0x01CBCA78 LDR X26, [X8]
	0x01CBCA7C LDR X8, [X26 + 0x38]
	0x01CBCA80 CBNZ X8, 0x1CBCA8C
	0x01CBCA84 MOV X0, X26
	0x01CBCA88 BL 0x1BB41DC
	0x01CBCA8C MOV X0, X27
	0x01CBCA90 MOV X1, X31
	0x01CBCA94 BL 0x3A9B0C0
	0x01CBCA98 CBZ X0, 0x1CBD40C
	0x01CBCA9C LDR X8, [X26 + 0x38]
	0x01CBCAA0 LDR X1, [X8]
	0x01CBCAA4 BL 0x20CF154
	0x01CBCAA8 MOV X26, X0
	0x01CBCAAC MOV W19, W25
	0x01CBCAB0 LDR X8, [X31 + 0xA0]
	0x01CBCAB4 CBZ X8, 0x1CBD338
	0x01CBCAB8 MOVZ W25, 0x4
	0x01CBCABC LDR X8, [X8 + 0x78]
	0x01CBCAC0 CBZ X8, 0x1CBD33C
	0x01CBCAC4 LDRSW X8, [X8 + 0x18]
	0x01CBCAC8 SUB X20, X25, 0x4
	0x01CBCACC CMP X20, X8
	0x01CBCAD0 B.GE 0x1CBCC24
	0x01CBCAD4 LDR X8, [X24 + 0x10]
	0x01CBCAD8 CBZ X8, 0x1CBD340
	0x01CBCADC LDR X8, [X8 + 0x78]
	0x01CBCAE0 CBZ X8, 0x1CBD348
	0x01CBCAE4 LDR W9, [X8 + 0x18]
	0x01CBCAE8 CMP X20, X9
	0x01CBCAEC B.CS 0x1CBD344
	0x01CBCAF0 LDR X8, [X8, X25, LSL #3]
	0x01CBCAF4 CBZ X8, 0x1CBCB18
	0x01CBCAF8 ADRP X9, 0x2293000
	0x01CBCAFC LDR X10, [X8]
	0x01CBCB00 LDR X9, [X9 + 0x140]
	0x01CBCB04 LDRB W12, [X10 + 0x130]
	0x01CBCB08 LDR X9, [X9]
	0x01CBCB0C LDRB W11, [X9 + 0x130]
	0x01CBCB10 CMP W12, W11
	0x01CBCB14 B.CS 0x1CBCB20
	0x01CBCB18 MOV X27, X31
	0x01CBCB1C B 0x1CBCB34
	0x01CBCB20 LDR X10, [X10 + 0xC8]
	0x01CBCB24 ADD X10, X10, X11, 0x3, LSL
	0x01CBCB28 LDUR X10, [X10 - 0x8]
	0x01CBCB2C CMP X10, X9
	0x01CBCB30 CSEL X27, X8, X31, EQ
	0x01CBCB34 ADRP X8, 0x2291000
	0x01CBCB38 LDR X8, [X8 + 0x478]
	0x01CBCB3C LDR X0, [X8]
	0x01CBCB40 LDR W8, [X0 + 0xE0]
	0x01CBCB44 CBNZ W8, 0x1CBCB4C
	0x01CBCB48 BL 0x1B6E8F8
	0x01CBCB4C MOV X0, X27
	0x01CBCB50 MOV X1, X31
	0x01CBCB54 MOV X2, X31
	0x01CBCB58 BL 0x3A9D6EC
	0x01CBCB5C TBZ X0, 0x0, 0x1CBCC14
	0x01CBCB60 LDR X8, [X31 + 0xA0]
	0x01CBCB64 CBZ X8, 0x1CBD368
	0x01CBCB68 LDR X8, [X8 + 0x78]
	0x01CBCB6C CBZ X8, 0x1CBD360
	0x01CBCB70 LDR W9, [X8 + 0x18]
	0x01CBCB74 CMP X20, X9
	0x01CBCB78 B.CS 0x1CBD380
	0x01CBCB7C LDR X0, [X8, X25, LSL #3]
	0x01CBCB80 CBZ X0, 0x1CBD364
	0x01CBCB84 MOV X1, X31
	0x01CBCB88 BL 0x3A9B084
	0x01CBCB8C CBZ X27, 0x1CBD36C
	0x01CBCB90 MOV X28, X0
	0x01CBCB94 ADD X8, X31, 0xB0
	0x01CBCB98 MOV X0, X27
	0x01CBCB9C MOV X1, X31
	0x01CBCBA0 BL 0x1D700DC
	0x01CBCBA4 CBZ X28, 0x1CBD378
	0x01CBCBA8 LDP S0, S1, [X31 + 0xB8]
	0x01CBCBAC LDR V2, [X31 + 0xC0]
	0x01CBCBB0 MOV X0, X28
	0x01CBCBB4 MOV X1, X31
	0x01CBCBB8 BL 0x3AA6D0C
	0x01CBCBBC LDR X8, [X31 + 0xA0]
	0x01CBCBC0 CBZ X8, 0x1CBD35C
	0x01CBCBC4 LDR X8, [X8 + 0x78]
	0x01CBCBC8 CBZ X8, 0x1CBD358
	0x01CBCBCC LDR W9, [X8 + 0x18]
	0x01CBCBD0 CMP X20, X9
	0x01CBCBD4 B.CS 0x1CBD37C
	0x01CBCBD8 LDR X0, [X8, X25, LSL #3]
	0x01CBCBDC CBZ X0, 0x1CBD370
	0x01CBCBE0 MOV X1, X31
	0x01CBCBE4 BL 0x3A9B084
	0x01CBCBE8 MOV X28, X0
	0x01CBCBEC ADD X8, X31, 0xB0
	0x01CBCBF0 MOV X0, X27
	0x01CBCBF4 MOV X1, X31
	0x01CBCBF8 BL 0x1D700DC
	0x01CBCBFC CBZ X28, 0x1CBD374
	0x01CBCC00 LDP S0, S1, [X31 + 0xC4]
	0x01CBCC04 LDP S2, S3, [X31 + 0xCC]
	0x01CBCC08 MOV X0, X28
	0x01CBCC0C MOV X1, X31
	0x01CBCC10 BL 0x3AA7984
	0x01CBCC14 LDR X8, [X31 + 0xA0]
	0x01CBCC18 ADD X25, X25, 0x1
	0x01CBCC1C CBNZ X8, 0x1CBCABC
	0x01CBCC20 B 0x1CBD338
	0x01CBCC24 ADRP X8, 0x2291000
	0x01CBCC28 LDR X8, [X8 + 0x478]
	0x01CBCC2C LDR X0, [X8]
	0x01CBCC30 LDR W8, [X0 + 0xE0]
	0x01CBCC34 CBNZ W8, 0x1CBCC3C
	0x01CBCC38 BL 0x1B6E8F8
	0x01CBCC3C MOV X0, X26
	0x01CBCC40 MOV X1, X31
	0x01CBCC44 MOV X2, X31
	0x01CBCC48 BL 0x3A9D6EC
	0x01CBCC4C ORN W8, W19, W0, 0x0
	0x01CBCC50 ADRP X19, 0x2293000
	0x01CBCC54 LDR X19, [X19 + 0xF0]
	0x01CBCC58 TBNZ X8, 0x0, 0x1CBCD08
	0x01CBCC5C CBZ X26, 0x1CBD420
	0x01CBCC60 LDR X8, [X31 + 0x30]
	0x01CBCC64 LDR X25, [X8 + 0x80]
	0x01CBCC68 MOV X0, X26
	0x01CBCC6C MOV X1, X31
	0x01CBCC70 BL 0x1CB5EF4
	0x01CBCC74 MOV W1, W0
	0x01CBCC78 CBZ X25, 0x1CBD42C
	0x01CBCC7C ADRP X8, 0x2293000
	0x01CBCC80 LDR X2, [X31 + 0xA0]
	0x01CBCC84 LDR X8, [X8 + 0x108]
	0x01CBCC88 LDR X3, [X8]
	0x01CBCC8C MOV X0, X25
	0x01CBCC90 BL 0x2868C68
	0x01CBCC94 LDR X8, [X31 + 0x30]
	0x01CBCC98 LDR X25, [X8 + 0x88]
	0x01CBCC9C MOV X0, X26
	0x01CBCCA0 MOV X1, X31
	0x01CBCCA4 BL 0x1CB5EF4
	0x01CBCCA8 MOV W1, W0
	0x01CBCCAC CBZ X25, 0x1CBD3F0
	0x01CBCCB0 ADRP X9, 0x2293000
	0x01CBCCB4 LDR W10, [X25 + 0x1C]
	0x01CBCCB8 LDR X8, [X25 + 0x10]
	0x01CBCCBC LDR X9, [X9 + 0x130]
	0x01CBCCC0 ADD W10, W10, 0x1
	0x01CBCCC4 LDR X9, [X9]
	0x01CBCCC8 STR W10, [X25 + 0x1C]
	0x01CBCCCC CBZ X8, 0x1CBD3EC
	0x01CBCCD0 LDRSW X10, [X25 + 0x18]
	0x01CBCCD4 LDR W11, [X8 + 0x18]
	0x01CBCCD8 CMP W10, W11
	0x01CBCCDC B.CS 0x1CBCCF4
	0x01CBCCE0 ADD W9, W10, 0x1
	0x01CBCCE4 ADD X8, X8, X10, 0x2, LSL
	0x01CBCCE8 STR W9, [X25 + 0x18]
	0x01CBCCEC STR W1, [X8 + 0x20]
	0x01CBCCF0 B 0x1CBCD08
	0x01CBCCF4 LDR X8, [X9 + 0x20]
	0x01CBCCF8 LDR X8, [X8 + 0xC0]
	0x01CBCCFC LDR X2, [X8 + 0x70]
	0x01CBCD00 MOV X0, X25
	0x01CBCD04 BL 0x2DDCF58
	0x01CBCD08 LDR X8, [X24 + 0x10]
	0x01CBCD0C CBZ X8, 0x1CBD3CC
	0x01CBCD10 LDR X8, [X8 + 0x20]
	0x01CBCD14 LDR X20, [X31 + 0x38]
	0x01CBCD18 LDR X24, [X31 + 0x28]
	0x01CBCD1C CBZ X8, 0x1CBCD2C
	0x01CBCD20 LDR W1, [X8]
	0x01CBCD24 CBNZ X20, 0x1CBCD34
	0x01CBCD28 B 0x1CBD3D0
	0x01CBCD2C MOV X1, X31

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X20, 0x2568000
	011 Move X24, 0x2292000
	012 Move W8, [X20+1317]
	013 Move X24, [X24+1144]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {48}
	019 Move X0, 0x2294000
	020 Move X0, [X0+96]
	021 Call 0x1B6F7F0
	022 Move X0, 0x2294000
	023 Move X0, [X0+104]
	024 Call 0x1B6F7F0
	025 Move X0, 0x2294000
	026 Move X0, [X0+112]
	027 Call 0x1B6F7F0
	028 Move X0, 0x2294000
	029 Move X0, [X0+120]
	030 Call 0x1B6F7F0
	031 Move X0, 0x2294000
	032 Move X0, [X0+128]
	033 Call 0x1B6F7F0
	034 Move X0, 0x2294000
	035 Move X0, [X0+136]
	036 Call 0x1B6F7F0
	037 Move X0, 0x2294000
	038 Move X0, [X0+144]
	039 Call 0x1B6F7F0
	040 Move X0, 0x2292000
	041 Move X0, [X0+1144]
	042 Call 0x1B6F7F0
	043 Move X0, 0x2293000
	044 Move X0, [X0+1192]
	045 Call 0x1B6F7F0
	046 Move W8, 1
	047 Move [X20+1317], W8
	048 Move X0, [X24]
	049 Move [X31+60], W31
	050 Move [X31+32], X31
	051 Move [X31+40], X31
	052 Move [X31+48], X31
	053 Move [X31+24], X31
	054 Move W8, [X0+224]
	055 Move X20, [X19+152]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1B6F8F8
	059 Move X0, X20
	060 Move X1, X31
	061 Move X2, X31
	062 Call Object.op_Equality, X0, X1
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {237}
	067 Move X0, [X19+152]
	068 Compare X0, 0
	069 JumpIfEqual {248}
	070 Move X1, X31
	071 Call NetworkRunner.get_IsServer, X0
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {181}
	076 Move X0, [X19+168]
	077 Compare X0, 0
	078 JumpIfEqual {248}
	079 Move W8, [X0+32]
	080 Compare W8, 0
	081 JumpIfEqual {181}
	082 Move X1, X31
	083 Call Stopwatch.get_ElapsedMilliseconds, X0
	084 Move W8, 0x2711
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X0, [X19+168]
	087 Compare X0, 0
	088 JumpIfEqual {248}
	089 Move X1, X31
	090 Call Stopwatch.Stop, X0
	091 Move X0, [X19+168]
	092 Compare X0, 0
	093 JumpIfEqual {248}
	094 Move X1, X31
	095 Call Stopwatch.Reset, X0
	096 Move X20, [X19+136]
	097 Move [X31+60], W31
	098 Add X1, X31, 60
	099 Move X0, X20
	100 Move X2, X31
	101 Call Monitor.Enter, X0, X1
	102 Move X0, [X19+136]
	103 Compare X0, 0
	104 JumpIfEqual {252}
	105 Move X8, 0x2294000
	106 Move X8, [X8+144]
	107 Move X1, [X8]
	108 Add X8, X31, 0
	109 Call List`1<Int32>.GetEnumerator, X0
	110 Move V0, [X31]
	111 Move X8, [X31+16]
	112 Move X22, 0x2294000
	113 Move X23, 0x2294000
	114 Move X22, [X22+120]
	115 Move X23, [X23+104]
	116 Move [X31+2], V0
	117 Move [X31+48], X8
	118 Move X25, 0x2294000
	119 Move X25, [X25+96]
	120 Move X1, [X22]
	121 Add X0, X31, 32
	122 Call Enumerator<Int32>.MoveNext, X0
	123 Move TEMP, X0
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfNotEqual {148}
	127 Move X0, [X19+128]
	128 Compare X0, 0
	129 JumpIfEqual {247}
	130 Move W21, [X31+48]
	131 Move X3, [X23]
	132 Add X2, X31, 24
	133 Move W1, W21
	134 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	135 Move TEMP, X0
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfNotEqual {120}
	139 Move X1, [X19+152]
	140 Move X2, [X31+24]
	141 Call NetworkManager.DespawnPlayerNetObject, X0, X1, X2
	142 Move X0, [X19+128]
	143 Compare X0, 0
	144 JumpIfEqual {249}
	145 Move X2, [X25]
	146 Move W1, W21
	147 Call Dictionary`2<Int32, Object>.Remove, X0, X1
	148 Move X21, X31
	149 Move W23, 6
	150 Move X8, 0x2294000
	151 Move X8, [X8+112]
	152 Move X1, [X8]
	153 Add X0, X31, 32
	154 Call Enumerator<Int32>.Dispose, X0
	155 Compare X21, 0
	156 JumpIfNotEqual {253}
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Compare W23, 0
	159 JumpIfNotEqual {169}
	160 Move X8, [X19+136]
	161 Compare X8, 0
	162 JumpIfEqual {255}
	163 Move W9, [X8+28]
	164 Move X22, X31
	165 Move W23, 3
	166 Add W9, W9, 1
	167 Move [X8+24], W31
	168 Move [X8+28], W9
	169 Move X22, X31
	170 Move W8, [X31+60]
	171 Compare W8, 0
	172 JumpIfEqual {176}
	173 Move X0, X20
	174 Move X1, X31
	175 Call Monitor.Exit, X0
	176 Compare X22, 0
	177 JumpIfNotEqual {250}
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Compare W23, 0
	180 JumpIfNotEqual {237}
	181 Move X0, [X19+56]
	182 Compare X0, 0
	183 JumpIfEqual {248}
	184 Move X1, X31
	185 Call NetworkRunner.get_LocalPlayer, X0
	186 Move X21, 0x2293000
	187 Move X21, [X21+1192]
	188 Move X20, X0
	189 Move X8, [X21]
	190 Move W9, [X8+224]
	191 Compare W9, 0
	192 JumpIfEqual {195}
	193 Compare W20, 0
	194 JumpIfNotEqual {199}
	195 Move X0, X8
	196 Call 0x1B6F8F8
	197 Compare W20, 0
	198 JumpIfEqual {237}
	199 Move X0, [X19+56]
	200 Compare X0, 0
	201 JumpIfEqual {248}
	202 Move X1, X31
	203 Call NetworkRunner.get_LocalPlayer, X0
	204 Move X8, [X21]
	205 Move X20, X0
	206 Move W9, [X8+224]
	207 Compare W9, 0
	208 JumpIfNotEqual {211}
	209 Move X0, X8
	210 Call 0x1B6F8F8
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move X0, [X24]
	213 Move X20, [X19+160]
	214 Move W8, [X0+224]
	215 Compare W8, 0
	216 JumpIfNotEqual {218}
	217 Call 0x1B6F8F8
	218 Move X0, X20
	219 Move X1, X31
	220 Move X2, X31
	221 Call Object.op_Inequality, X0, X1
	222 Move TEMP, X0
	223 And TEMP, TEMP, 1
	224 Compare TEMP, 1
	225 JumpIfNotEqual {237}
	226 Move X0, [X19+160]
	227 Compare X0, 0
	228 JumpIfEqual {248}
	229 Move X1, X31
	230 Call VoiceConnection.get_ClientState, X0
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Move X0, [X19+160]
	233 Compare X0, 0
	234 JumpIfEqual {248}
	235 Move X1, X31
	236 Call VoiceFollowClient.ConnectAndJoinRoom, X0
	237 Move X20, [X31+112]
	238 Move X19, [X31+120]
	239 Move X22, [X31+96]
	240 Move X21, [X31+104]
	241 Move X24, [X31+80]
	242 Move X23, [X31+88]
	243 Move X30, [X31+64]
	244 Move X25, [X31+72]
	245 Add X31, X31, 128
	246 Return 
	247 Call 0x1B6FA1C
	248 Call 0x1B6FA1C
	249 Call 0x1B6FA1C
	250 Move X0, X22
	251 Call 0x1B6FA14
	252 Call 0x1B6FA1C
	253 Move X0, X21
	254 Call 0x1B6FA14
	255 Call 0x1B6FA1C
	256 Move X22, X1
	257 Move X23, X0
	258 Move X22, X1
	259 Move X23, X0
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Move X0, X23
	262 Call 0x3D1A840
	263 Move X21, [X0]
	264 Call 0x3D1A850
	265 Move W23, W31
	266 Move X21, X31
	267 Move X8, 0x2294000
	268 Move X8, [X8+112]
	269 Move X1, [X8]
	270 Add X0, X31, 32
	271 Call Enumerator<Int32>.Dispose, X0
	272 Compare X21, 0
	273 JumpIfNotEqual {281}
	274 NotImplemented "Instruction CMP not yet implemented."
	275 Move X0, X23
	276 Call 0x3D1A840
	277 Move X22, [X0]
	278 Call 0x3D1A850
	279 Move W23, W31
	280 Move X22, X31
	281 Move X0, X21
	282 Call 0x1B6FA14
	283 Move X22, X1
	284 Move X23, X0
	285 Move X23, X0
	286 Move W8, [X31+60]
	287 Compare W8, 0
	288 JumpIfEqual {292}
	289 Move X0, X20
	290 Move X1, X31
	291 Call Monitor.Exit, X0
	292 Compare X22, 0
	293 JumpIfNotEqual {296}
	294 Move X0, X23
	295 Call 0x1C8518C
	296 Move X0, X22
	297 Call 0x1B6FA14
	298 Call 0x18F56A8

Method: System.Void AutoJoin()

Disassembly:
	0x01CBC814 CBZ X0, 0x1CBD41C
	0x01CBC818 LDP S8, S9, [X31 + 0xB8]
	0x01CBC81C LDR V10, [X31 + 0xC0]
	0x01CBC820 ADD X8, X31, 0xB0
	0x01CBC824 MOV X1, X31
	0x01CBC828 BL 0x1D700DC
	0x01CBC82C CBZ X27, 0x1CBD3F4
	0x01CBC830 LDP S3, S4, [X31 + 0xC4]
	0x01CBC834 LDP S5, S6, [X31 + 0xCC]
	0x01CBC838 MOV X0, X27
	0x01CBC83C MOV V0.16B, V8.16B
	0x01CBC840 MOV V1.16B, V9.16B
	0x01CBC844 MOV V2.16B, V10.16B
	0x01CBC848 MOV X1, X31
	0x01CBC84C BL 0x3AA80CC
	0x01CBC850 LDR X0, [X31 + 0xA0]
	0x01CBC854 CBZ X0, 0x1CBD3F8
	0x01CBC858 LDR X1, [X24 + 0x10]
	0x01CBC85C MOV W19, W25
	0x01CBC860 MOV X2, X31
	0x01CBC864 BL 0x1D9FC34
	0x01CBC868 B 0x1CBCAB0
	0x01CBC86C MOV X0, X31
	0x01CBC870 CMP W8, 0x1
	0x01CBC874 B.LS 0x1CBD440

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call NetworkManager.SetupRunner, X0
	005 Compare X19, 0
	006 JumpIfEqual {28}
	007 Move W8, [X19+72]
	008 Move X0, X19
	009 Move X2, X31
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move W8, 1
	012 NotImplemented "Instruction CINC not yet implemented."
	013 Call NetworkManager.JoinLobby, X0, X1, X2
	014 Move X1, X0
	015 Move X0, X19
	016 Move X2, X31
	017 Call MonoBehaviour.StartCoroutine, X0, X1
	018 Move V0, [X19+192]
	019 Move S1, 2
	020 Add S0, S0, S0
	021 NotImplemented "Instruction FMAX not yet implemented."
	022 Move S1, 30
	023 NotImplemented "Instruction FMIN not yet implemented."
	024 Move [X19+192], S0
	025 Move X30, [X31+16]
	026 Move X19, [X31+24]
	027 Return 
	028 Call 0x1B6FA1C

Method: System.Collections.IEnumerator JoinLobby(Fusion.GameMode mode, Fusion.HostMigrationToken hostMigrationToken = null)

Disassembly:
	0x01CBD0B8 MOV X0, X23
	0x01CBD0BC MOV X1, X31
	0x01CBD0C0 BL 0x3AF6D4C
	0x01CBD0C4 LDR X23, [X26]
	0x01CBD0C8 LDR X8, [X23 + 0x38]
	0x01CBD0CC CBNZ X8, 0x1CBD0D8
	0x01CBD0D0 MOV X0, X23
	0x01CBD0D4 BL 0x1BB41DC
	0x01CBD0D8 MOV X0, X22
	0x01CBD0DC MOV X1, X31
	0x01CBD0E0 BL 0x3A9B0C0
	0x01CBD0E4 CBZ X0, 0x1CBD34C
	0x01CBD0E8 LDR X8, [X23 + 0x38]
	0x01CBD0EC LDR X2, [X8 + 0x8]
	0x01CBD0F0 ADD X1, X31, 0x88
	0x01CBD0F4 BL 0x20D02D0
	0x01CBD0F8 TBZ X0, 0x0, 0x1CBD210
	0x01CBD0FC LDR X0, [X31 + 0x88]
	0x01CBD100 CBZ X0, 0x1CBD390
	0x01CBD104 MOV X1, X31
	0x01CBD108 BL 0x1C99A60
	0x01CBD10C STR X0, [X31 + 0x80]
	0x01CBD110 ADD X0, X31, 0x80
	0x01CBD114 MOV X1, X31
	0x01CBD118 BL 0x1D680F0
	0x01CBD11C TBZ X0, 0x0, 0x1CBD210
	0x01CBD120 LDR X0, [X31 + 0x38]
	0x01CBD124 CBZ X0, 0x1CBD39C
	0x01CBD128 ADRP X8, 0x2292000
	0x01CBD12C LDR W1, [X31 + 0x80]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x2567000
	008 Move X23, 0x2293000
	009 Move W8, [X22+1318]
	010 Move X23, [X23+192]
	011 Move X19, X2
	012 Move W20, W1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x2293000
	019 Move X0, [X0+192]
	020 Call 0x1B6F7F0
	021 Move W8, 1
	022 Move [X22+1318], W8
	023 Move X0, [X23]
	024 Call 0x1B6FA0C
	025 Move X1, X31
	026 Move X22, X0
	027 Call Object..ctor, X0
	028 Move [X22+16], W31
	029 Move [X22+32], X21
	030 Move [X22+40], W20
	031 Move [X22+48], X19
	032 Move X0, X22
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Move X23, [X31+56]
	039 Return X0

Method: System.Void StartGame(Fusion.GameMode mode, Fusion.HostMigrationToken hostMigrationToken = null, System.String sessionCode = null)

Disassembly:
	0x01CBD158 LDR W10, [X8 + 0x18]
	0x01CBD15C CMP W9, W10
	0x01CBD160 B.CS 0x1CBD3A4
	0x01CBD164 ADD X8, X8, X9, 0x3, LSL
	0x01CBD168 LDR X23, [X8 + 0x20]
	0x01CBD16C CBZ X23, 0x1CBD398
	0x01CBD170 ADRP X8, 0x2291000
	0x01CBD174 LDR X9, [X23]
	0x01CBD178 LDR X8, [X8 + 0x1A0]
	0x01CBD17C LDRB W11, [X9 + 0x130]
	0x01CBD180 LDR X8, [X8]
	0x01CBD184 LDRB W10, [X8 + 0x130]
	0x01CBD188 CMP W11, W10
	0x01CBD18C B.CC 0x1CBD398
	0x01CBD190 LDR X9, [X9 + 0xC8]
	0x01CBD194 ADD X9, X9, X10, 0x3, LSL
	0x01CBD198 LDUR X9, [X9 - 0x8]
	0x01CBD19C CMP X9, X8
	0x01CBD1A0 B.NE 0x1CBD398
	0x01CBD1A4 LDR X8, [X23 + 0x40]
	0x01CBD1A8 CBZ X8, 0x1CBD1BC
	0x01CBD1AC LDR X8, [X8 + 0x20]
	0x01CBD1B0 CBZ X8, 0x1CBD1BC
	0x01CBD1B4 LDR W1, [X8]
	0x01CBD1B8 B 0x1CBD1C0
	0x01CBD1BC MOV X1, X31
	0x01CBD1C0 LDR X0, [X31 + 0x88]
	0x01CBD1C4 CBZ X0, 0x1CBD3B4
	0x01CBD1C8 LDR W8, [X23 + 0x68]
	0x01CBD1CC BFM X1, X8, 0x20, 0x1F
	0x01CBD1D0 MOV X2, X31
	0x01CBD1D4 BL 0x1C9E17C
	0x01CBD1D8 LDR X8, [X31 + 0x88]
	0x01CBD1DC CBZ X8, 0x1CBD3B0
	0x01CBD1E0 LDR X9, [X8 + 0x40]
	0x01CBD1E4 CBZ X9, 0x1CBD1F8
	0x01CBD1E8 LDR X9, [X9 + 0x20]
	0x01CBD1EC CBZ X9, 0x1CBD1F8
	0x01CBD1F0 LDR W1, [X9]
	0x01CBD1F4 B 0x1CBD1FC
	0x01CBD1F8 MOV X1, X31
	0x01CBD1FC LDR W8, [X8 + 0x68]
	0x01CBD200 BFM X1, X8, 0x20, 0x1F
	0x01CBD204 MOV X0, X23
	0x01CBD208 MOV X2, X31
	0x01CBD20C BL 0x1C98D7C

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+144], X24
	004 Move [X31+152], X23
	005 Move [X31+160], X22
	006 Move [X31+168], X21
	007 Move [X31+176], X20
	008 Move [X31+184], X19
	009 Move X24, 0x2567000
	010 Move X23, 0x2293000
	011 Move W8, [X24+1319]
	012 Move X23, [X23+200]
	013 Move X19, X3
	014 Move X20, X2
	015 Move W22, W1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x2293000
	022 Move X0, [X0+200]
	023 Call 0x1B6F7F0
	024 Move W8, 1
	025 Move [X24+1319], W8
	026 NotImplemented "Instruction MOVI not yet implemented."
	027 Add X8, X31, 0
	028 Move X0, X31
	029 Move [X31+112], X31
	030 Move [X31+80], V0
	031 Move [X31+88], V0
	032 Move [X31+48], V0
	033 Move [X31+56], V0
	034 Move [X31+2], V0
	035 Call AsyncVoidMethodBuilder.Create
	036 Move V0, [X31]
	037 Move V1, [X31+16]
	038 Move X2, [X23]
	039 Add X8, X31, 32
	040 Move TEMP, 0
	041 Not TEMP
	042 Move W9, TEMP
	043 Or X0, X8, 15
	044 Add X1, X31, 32
	045 Move [X31+88], W22
	046 Move [X31+96], X20
	047 Move [X31+72], X19
	048 Move [X31+80], X21
	049 Move [X31+40], V0
	050 Move [X31+56], V1
	051 Move [X31+32], W9
	052 Call AsyncVoidMethodBuilder.Start, X0, X1
	053 Move X20, [X31+176]
	054 Move X19, [X31+184]
	055 Move X22, [X31+160]
	056 Move X21, [X31+168]
	057 Move X24, [X31+144]
	058 Move X23, [X31+152]
	059 Move X30, [X31+128]
	060 Add X31, X31, 192
	061 Return 

Method: System.Void OnHostMigrationResumed(Fusion.NetworkRunner runner)

Disassembly:
	0x01CBD210 MOV X0, X22
	0x01CBD214 MOV X1, X31
	0x01CBD218 BL 0x3AA0C88
	0x01CBD21C MOV X1, X0
	0x01CBD220 LDR X0, [X25]
	0x01CBD224 MOV X2, X31
	0x01CBD228 BL 0x3084780
	0x01CBD22C MOV X22, X0
	0x01CBD230 LDR X0, [X28]
	0x01CBD234 LDR W8, [X0 + 0xE0]
	0x01CBD238 CBNZ W8, 0x1CBD240
	0x01CBD23C BL 0x1B6E8F8
	0x01CBD240 LDR X2, [X27]
	0x01CBD244 LDR X3, [X24]
	0x01CBD248 MOVZ W4, 0x182
	0x01CBD24C MOV X0, X22
	0x01CBD250 MOV X1, X31
	0x01CBD254 MOV X5, X31
	0x01CBD258 BL 0x342B188
	0x01CBD25C B 0x1CBCE78
	0x01CBD260 MOV X20, X31
	0x01CBD264 MOVZ W19, 0x13
	0x01CBD268 CBZ X21, 0x1CBD2CC
	0x01CBD26C LDR X8, [X21]
	0x01CBD270 ADRP X10, 0x2291000
	0x01CBD274 LDRH W9, [X8 + 0x12E]
	0x01CBD278 LDR X10, [X10 + 0x470]
	0x01CBD27C LDR X1, [X10]
	0x01CBD280 CBZ X9, 0x1CBD2A4
	0x01CBD284 LDR X10, [X8 + 0xB0]
	0x01CBD288 ADD X10, X10, 0x8
	0x01CBD28C LDUR X11, [X10 - 0x8]
	0x01CBD290 CMP X11, X1
	0x01CBD294 B.EQ 0x1CBD2B4
	0x01CBD298 SUBS X9, X9, 0x1
	0x01CBD29C ADD X10, X10, 0x10
	0x01CBD2A0 B.NE 0x1CBD28C
	0x01CBD2A4 MOV X0, X21
	0x01CBD2A8 MOV W2, W31
	0x01CBD2AC BL 0x1BB4284
	0x01CBD2B0 B 0x1CBD2C0
	0x01CBD2B4 LDRSW X9, [X10]
	0x01CBD2B8 ADD X8, X8, X9, 0x4, LSL
	0x01CBD2BC ADD X0, X8, 0x138
	0x01CBD2C0 LDP X8, X1, [X0]
	0x01CBD2C4 MOV X0, X21
	0x01CBD2C8 BLR X8
	0x01CBD2CC CBNZ X20, 0x1CBD3D8
	0x01CBD2D0 CMP W19, 0x13
	0x01CBD2D4 B.EQ 0x1CBD2DC
	0x01CBD2D8 CBNZ W19, 0x1CBD2F0
	0x01CBD2DC LDR X8, [X31 + 0x30]
	0x01CBD2E0 LDR X0, [X8 + 0xA8]
	0x01CBD2E4 CBZ X0, 0x1CBD3A0
	0x01CBD2E8 MOV X1, X31
	0x01CBD2EC BL 0x34B557C
	0x01CBD2F0 LDR X8, [X31 + 0x18]
	0x01CBD2F4 LDR X8, [X8 + 0x28]
	0x01CBD2F8 LDR X9, [X31 + 0xE8]
	0x01CBD2FC CMP X8, X9
	0x01CBD300 B.NE 0x1CBD458
	0x01CBD304 LDP X20, X19, [X31 + 0x160]
	0x01CBD308 LDP X22, X21, [X31 + 0x150]
	0x01CBD30C LDP X24, X23, [X31 + 0x140]
	0x01CBD310 LDP X26, X25, [X31 + 0x130]
	0x01CBD314 LDP X28, X27, [X31 + 0x120]
	0x01CBD318 LDP X29, X30, [X31 + 0x110]
	0x01CBD31C LDP D9, D8, [X31 + 0x100]
	0x01CBD320 LDR V10, [X31 + 0xF0]
	0x01CBD324 ADD X31, X31, 0x170
	0x01CBD328 RET
	0x01CBD32C BL 0x1B6EA1C
	0x01CBD330 BL 0x1B6EA1C
	0x01CBD334 BL 0x1B6EA1C
	0x01CBD338 BL 0x1B6EA1C
	0x01CBD33C BL 0x1B6EA1C
	0x01CBD340 BL 0x1B6EA1C
	0x01CBD344 BL 0x1B6EA24
	0x01CBD348 BL 0x1B6EA1C
	0x01CBD34C BL 0x1B6EA1C
	0x01CBD350 BL 0x1B6EA1C
	0x01CBD354 BL 0x1B6EA1C
	0x01CBD358 BL 0x1B6EA1C
	0x01CBD35C BL 0x1B6EA1C
	0x01CBD360 BL 0x1B6EA1C
	0x01CBD364 BL 0x1B6EA1C
	0x01CBD368 BL 0x1B6EA1C
	0x01CBD36C BL 0x1B6EA1C
	0x01CBD370 BL 0x1B6EA1C
	0x01CBD374 BL 0x1B6EA1C
	0x01CBD378 BL 0x1B6EA1C
	0x01CBD37C BL 0x1B6EA24
	0x01CBD380 BL 0x1B6EA24
	0x01CBD384 BL 0x1B6EA1C
	0x01CBD388 BL 0x1B6EA1C
	0x01CBD38C BL 0x1B6EA1C
	0x01CBD390 BL 0x1B6EA1C
	0x01CBD394 BL 0x1B6EA1C
	0x01CBD398 BL 0x1B6EA1C
	0x01CBD39C BL 0x1B6EA1C
	0x01CBD3A0 BL 0x1B6EA1C
	0x01CBD3A4 BL 0x1B6EA24
	0x01CBD3A8 BL 0x1B6EA1C
	0x01CBD3AC BL 0x1B6EA1C
	0x01CBD3B0 BL 0x1B6EA1C
	0x01CBD3B4 BL 0x1B6EA1C
	0x01CBD3B8 BL 0x1B6EA1C
	0x01CBD3BC MOV X0, X24
	0x01CBD3C0 BL 0x1B6EA14
	0x01CBD3C4 BL 0x1B6EA1C
	0x01CBD3C8 BL 0x1B6EA1C
	0x01CBD3CC BL 0x1B6EA1C
	0x01CBD3D0 BL 0x1B6EA1C
	0x01CBD3D4 BL 0x1B6EA1C
	0x01CBD3D8 MOV X0, X20
	0x01CBD3DC BL 0x1B6EA14
	0x01CBD3E0 BL 0x1B6EA1C
	0x01CBD3E4 BL 0x1B6EA1C
	0x01CBD3E8 BL 0x1B6EA1C
	0x01CBD3EC BL 0x1B6EA1C
	0x01CBD3F0 BL 0x1B6EA1C
	0x01CBD3F4 BL 0x1B6EA1C
	0x01CBD3F8 BL 0x1B6EA1C
	0x01CBD3FC BL 0x1B6EA1C
	0x01CBD400 BL 0x1B6EA1C
	0x01CBD404 BL 0x1B6EA1C
	0x01CBD408 BL 0x1B6EA1C
	0x01CBD40C BL 0x1B6EA1C
	0x01CBD410 BL 0x1B6EA1C
	0x01CBD414 BL 0x1B6EA1C
	0x01CBD418 BL 0x1B6EA1C
	0x01CBD41C BL 0x1B6EA1C
	0x01CBD420 BL 0x1B6EA1C
	0x01CBD424 BL 0x1B6EA1C
	0x01CBD428 BL 0x1B6EA1C
	0x01CBD42C BL 0x1B6EA1C
	0x01CBD430 BL 0x1B6EA24
	0x01CBD434 BL 0x1B6EA1C
	0x01CBD438 BL 0x1B6EA1C
	0x01CBD43C BL 0x1B6EA24
	0x01CBD440 BL 0x1B6EA24
	0x01CBD444 BL 0x1B6EA24
	0x01CBD448 BL 0x1B6EA1C
	0x01CBD44C BL 0x1B6EA24
	0x01CBD450 BL 0x1B6EA24
	0x01CBD454 BL 0x1B6EA1C
	0x01CBD458 BL 0x3D19880
	0x01CBD45C B 0x1CBD66C
	0x01CBD460 B 0x1CBD66C
	0x01CBD464 B 0x1CBD66C
	0x01CBD468 B 0x1CBD66C
	0x01CBD46C B 0x1CBD66C
	0x01CBD470 B 0x1CBD66C
	0x01CBD474 B 0x1CBD66C
	0x01CBD478 B 0x1CBD66C
	0x01CBD47C B 0x1CBD66C
	0x01CBD480 B 0x1CBD66C
	0x01CBD484 B 0x1CBD66C
	0x01CBD488 B 0x1CBD66C
	0x01CBD48C B 0x1CBD66C
	0x01CBD490 B 0x1CBD66C
	0x01CBD494 B 0x1CBD66C
	0x01CBD498 B 0x1CBD66C
	0x01CBD49C B 0x1CBD66C
	0x01CBD4A0 B 0x1CBD66C
	0x01CBD4A4 B 0x1CBD66C
	0x01CBD4A8 B 0x1CBD66C
	0x01CBD4AC B 0x1CBD66C
	0x01CBD4B0 B 0x1CBD664
	0x01CBD4B4 B 0x1CBD72C
	0x01CBD4B8 B 0x1CBD66C
	0x01CBD4BC B 0x1CBD66C
	0x01CBD4C0 B 0x1CBD66C
	0x01CBD4C4 B 0x1CBD66C
	0x01CBD4C8 B 0x1CBD66C
	0x01CBD4CC B 0x1CBD66C
	0x01CBD4D0 B 0x1CBD66C
	0x01CBD4D4 B 0x1CBD66C
	0x01CBD4D8 B 0x1CBD66C
	0x01CBD4DC B 0x1CBD66C
	0x01CBD4E0 B 0x1CBD66C
	0x01CBD4E4 B 0x1CBD66C
	0x01CBD4E8 B 0x1CBD66C
	0x01CBD4EC B 0x1CBD66C
	0x01CBD4F0 B 0x1CBD66C
	0x01CBD4F4 B 0x1CBD66C
	0x01CBD4F8 B 0x1CBD66C
	0x01CBD4FC B 0x1CBD66C
	0x01CBD500 B 0x1CBD66C
	0x01CBD504 B 0x1CBD66C
	0x01CBD508 B 0x1CBD66C
	0x01CBD50C B 0x1CBD66C
	0x01CBD510 B 0x1CBD66C
	0x01CBD514 B 0x1CBD66C
	0x01CBD518 B 0x1CBD66C
	0x01CBD51C B 0x1CBD66C
	0x01CBD520 B 0x1CBD66C
	0x01CBD524 B 0x1CBD664
	0x01CBD528 B 0x1CBD66C
	0x01CBD52C B 0x1CBD66C
	0x01CBD530 B 0x1CBD66C
	0x01CBD534 B 0x1CBD66C
	0x01CBD538 B 0x1CBD664
	0x01CBD53C B 0x1CBD66C
	0x01CBD540 B 0x1CBD72C
	0x01CBD544 B 0x1CBD72C
	0x01CBD548 B 0x1CBD72C
	0x01CBD54C B 0x1CBD72C
	0x01CBD550 B 0x1CBD72C
	0x01CBD554 B 0x1CBD72C
	0x01CBD558 B 0x1CBD72C
	0x01CBD55C B 0x1CBD72C
	0x01CBD560 B 0x1CBD66C
	0x01CBD564 B 0x1CBD66C
	0x01CBD568 B 0x1CBD66C
	0x01CBD56C B 0x1CBD664
	0x01CBD570 B 0x1CBD66C
	0x01CBD574 B 0x1CBD66C
	0x01CBD578 B 0x1CBD66C
	0x01CBD57C B 0x1CBD66C
	0x01CBD580 B 0x1CBD66C
	0x01CBD584 B 0x1CBD66C
	0x01CBD588 B 0x1CBD66C
	0x01CBD58C B 0x1CBD66C
	0x01CBD590 B 0x1CBD72C
	0x01CBD594 B 0x1CBD72C
	0x01CBD598 B 0x1CBD66C
	0x01CBD59C B 0x1CBD66C
	0x01CBD5A0 B 0x1CBD72C
	0x01CBD5A4 B 0x1CBD72C
	0x01CBD5A8 B 0x1CBD72C
	0x01CBD5AC B 0x1CBD72C
	0x01CBD5B0 B 0x1CBD72C
	0x01CBD5B4 B 0x1CBD72C
	0x01CBD5B8 B 0x1CBD72C
	0x01CBD5BC B 0x1CBD72C
	0x01CBD5C0 B 0x1CBD72C
	0x01CBD5C4 B 0x1CBD72C
	0x01CBD5C8 B 0x1CBD72C
	0x01CBD5CC B 0x1CBD72C
	0x01CBD5D0 B 0x1CBD72C
	0x01CBD5D4 B 0x1CBD72C
	0x01CBD5D8 B 0x1CBD72C
	0x01CBD5DC B 0x1CBD72C
	0x01CBD5E0 B 0x1CBD72C
	0x01CBD5E4 B 0x1CBD72C
	0x01CBD5E8 B 0x1CBD72C
	0x01CBD5EC B 0x1CBD72C
	0x01CBD5F0 B 0x1CBD72C
	0x01CBD5F4 B 0x1CBD72C
	0x01CBD5F8 B 0x1CBD72C
	0x01CBD5FC B 0x1CBD664
	0x01CBD600 B 0x1CBD664
	0x01CBD604 B 0x1CBD664
	0x01CBD608 B 0x1CBD664
	0x01CBD60C B 0x1CBD664
	0x01CBD610 B 0x1CBD664
	0x01CBD614 B 0x1CBD664
	0x01CBD618 B 0x1CBD664
	0x01CBD61C B 0x1CBD664
	0x01CBD620 B 0x1CBD664
	0x01CBD624 B 0x1CBD664
	0x01CBD628 B 0x1CBD664
	0x01CBD62C B 0x1CBD664
	0x01CBD630 B 0x1CBD664
	0x01CBD634 B 0x1CBD72C
	0x01CBD638 B 0x1CBD72C
	0x01CBD63C B 0x1CBD72C
	0x01CBD640 B 0x1CBD72C
	0x01CBD644 B 0x1CBD72C
	0x01CBD648 B 0x1CBD664
	0x01CBD64C B 0x1CBD664
	0x01CBD650 B 0x1CBD664
	0x01CBD654 B 0x1CBD664
	0x01CBD658 B 0x1CBD664
	0x01CBD65C B 0x1CBD664
	0x01CBD660 B 0x1CBD664
	0x01CBD664 ADRP X19, 0x2292000
	0x01CBD668 LDR X19, [X19 + 0xF0]
	0x01CBD66C MOV X23, X0
	0x01CBD670 CMP W1, 0x1
	0x01CBD674 B.NE 0x1CBD694
	0x01CBD678 MOV X0, X23
	0x01CBD67C BL 0x3D19840
	0x01CBD680 LDR X24, [X0]
	0x01CBD684 BL 0x3D19850
	0x01CBD688 MOV W20, W31
	0x01CBD68C CBNZ X22, 0x1CBCD5C
	0x01CBD690 B 0x1CBCDBC
	0x01CBD694 MOV X24, X31
	0x01CBD698 B 0x1CBD6A0
	0x01CBD69C MOV X23, X0
	0x01CBD6A0 CBZ X22, 0x1CBD704
	0x01CBD6A4 LDR X8, [X22]
	0x01CBD6A8 ADRP X10, 0x2291000
	0x01CBD6AC LDRH W9, [X8 + 0x12E]
	0x01CBD6B0 LDR X10, [X10 + 0x470]
	0x01CBD6B4 LDR X1, [X10]
	0x01CBD6B8 CBZ X9, 0x1CBD6DC
	0x01CBD6BC LDR X10, [X8 + 0xB0]
	0x01CBD6C0 ADD X10, X10, 0x8
	0x01CBD6C4 LDUR X11, [X10 - 0x8]
	0x01CBD6C8 CMP X11, X1
	0x01CBD6CC B.EQ 0x1CBD6EC
	0x01CBD6D0 SUBS X9, X9, 0x1
	0x01CBD6D4 ADD X10, X10, 0x10
	0x01CBD6D8 B.NE 0x1CBD6C4
	0x01CBD6DC MOV X0, X22
	0x01CBD6E0 MOV W2, W31
	0x01CBD6E4 BL 0x1BB4284
	0x01CBD6E8 B 0x1CBD6F8
	0x01CBD6EC LDRSW X9, [X10]
	0x01CBD6F0 ADD X8, X8, X9, 0x4, LSL
	0x01CBD6F4 ADD X0, X8, 0x138
	0x01CBD6F8 LDP X8, X1, [X0]
	0x01CBD6FC MOV X0, X22
	0x01CBD700 BLR X8
	0x01CBD704 CBZ X24, 0x1CBD7C8
	0x01CBD708 MOV X0, X24
	0x01CBD70C BL 0x1B6EA14
	0x01CBD710 B 0x1CBD66C
	0x01CBD714 B 0x1CBD66C
	0x01CBD718 B 0x1CBD66C
	0x01CBD71C B 0x1CBD72C
	0x01CBD720 B 0x1CBD72C
	0x01CBD724 B 0x1CBD72C
	0x01CBD728 B 0x1CBD72C
	0x01CBD72C MOV X23, X0
	0x01CBD730 CMP W1, 0x1
	0x01CBD734 B.NE 0x1CBD754
	0x01CBD738 MOV X0, X23
	0x01CBD73C BL 0x3D19840
	0x01CBD740 LDR X20, [X0]
	0x01CBD744 BL 0x3D19850
	0x01CBD748 MOV W19, W31
	0x01CBD74C CBNZ X21, 0x1CBD26C
	0x01CBD750 B 0x1CBD2CC
	0x01CBD754 MOV X20, X31
	0x01CBD758 B 0x1CBD760
	0x01CBD75C MOV X23, X0
	0x01CBD760 CBZ X21, 0x1CBD7C4
	0x01CBD764 LDR X8, [X21]
	0x01CBD768 ADRP X10, 0x2291000
	0x01CBD76C LDRH W9, [X8 + 0x12E]
	0x01CBD770 LDR X10, [X10 + 0x470]
	0x01CBD774 LDR X1, [X10]
	0x01CBD778 CBZ X9, 0x1CBD79C
	0x01CBD77C LDR X10, [X8 + 0xB0]
	0x01CBD780 ADD X10, X10, 0x8
	0x01CBD784 LDUR X11, [X10 - 0x8]
	0x01CBD788 CMP X11, X1
	0x01CBD78C B.EQ 0x1CBD7AC
	0x01CBD790 SUBS X9, X9, 0x1
	0x01CBD794 ADD X10, X10, 0x10
	0x01CBD798 B.NE 0x1CBD784
	0x01CBD79C MOV X0, X21
	0x01CBD7A0 MOV W2, W31
	0x01CBD7A4 BL 0x1BB4284
	0x01CBD7A8 B 0x1CBD7B8
	0x01CBD7AC LDRSW X9, [X10]
	0x01CBD7B0 ADD X8, X8, X9, 0x4, LSL
	0x01CBD7B4 ADD X0, X8, 0x138
	0x01CBD7B8 LDP X8, X1, [X0]
	0x01CBD7BC MOV X0, X21
	0x01CBD7C0 BLR X8
	0x01CBD7C4 CBNZ X20, 0x1CBD7D0
	0x01CBD7C8 MOV X0, X23
	0x01CBD7CC BL 0x1C8418C
	0x01CBD7D0 MOV X0, X20
	0x01CBD7D4 BL 0x1B6EA14
	0x01CBD7D8 BL 0x18F46A8
	0x01CBD7DC B 0x1CBD66C
	0x01CBD7E0 B 0x1CBD66C
	0x01CBD7E4 B 0x1CBD66C
	0x01CBD7E8 B 0x1CBD66C
	0x01CBD7EC MOV X1, X31
	0x01CBD7F0 B 0x32276F8
	0x01CBD7F4 STR X30, [X31 - 0x10]!
	0x01CBD7F8 MOVZ W0, 0x86A0
	0x01CBD7FC MOVZ W1, 0x4240
	0x01CBD800 MOVK W0, 0x10000
	0x01CBD804 MOVK W1, 0xF0000
	0x01CBD808 MOV X2, X31
	0x01CBD80C BL 0x3A98D10
	0x01CBD810 STR W0, [X31 + 0xC]
	0x01CBD814 ADD X0, X31, 0xC
	0x01CBD818 MOV X1, X31
	0x01CBD81C BL 0x31E4D14
	0x01CBD820 LDR X30, [X31], #0x10
	0x01CBD824 RET
	0x01CBD828 STP X30, X21, [X31 - 0x20]!
	0x01CBD82C STP X20, X19, [X31 + 0x10]
	0x01CBD830 ADRP X21, 0x2566000
	0x01CBD834 ADRP X20, 0x2290000
	0x01CBD838 LDRB W8, [X21 + 0x52B]
	0x01CBD83C LDR X20, [X20 + 0xF78]
	0x01CBD840 MOV X19, X1
	0x01CBD844 TBNZ X8, 0x0, 0x1CBD880
	0x01CBD848 ADRP X0, 0x2290000
	0x01CBD84C LDR X0, [X0 + 0x4E8]
	0x01CBD850 BL 0x1B6E7F0
	0x01CBD854 ADRP X0, 0x2290000
	0x01CBD858 LDR X0, [X0 + 0x9A8]
	0x01CBD85C BL 0x1B6E7F0
	0x01CBD860 ADRP X0, 0x2292000
	0x01CBD864 LDR X0, [X0 + 0x190]
	0x01CBD868 BL 0x1B6E7F0
	0x01CBD86C ADRP X0, 0x2290000
	0x01CBD870 LDR X0, [X0 + 0xF78]
	0x01CBD874 BL 0x1B6E7F0
	0x01CBD878 MOVZ W8, 0x1
	0x01CBD87C STRB W8, [X21 + 0x52B]
	0x01CBD880 LDR X8, [X20]
	0x01CBD884 ADRP X20, 0x2290000
	0x01CBD888 LDR X8, [X8 + 0xB8]
	0x01CBD88C LDR X8, [X8 + 0x10]
	0x01CBD890 LDR X20, [X20 + 0x9A8]
	0x01CBD894 CBZ X8, 0x1CBD8AC
	0x01CBD898 LDR X9, [X8 + 0x18]
	0x01CBD89C LDR X0, [X8 + 0x40]
	0x01CBD8A0 LDR X2, [X8 + 0x28]
	0x01CBD8A4 MOV X1, X19
	0x01CBD8A8 BLR X9
	0x01CBD8AC LDR X0, [X20]
	0x01CBD8B0 MOVZ W1, 0x1
	0x01CBD8B4 BL 0x1B6E868
	0x01CBD8B8 CBZ X19, 0x1CBD93C
	0x01CBD8BC LDR X8, [X19 + 0x188]
	0x01CBD8C0 CBZ X8, 0x1CBD93C
	0x01CBD8C4 ADRP X9, 0x2292000
	0x01CBD8C8 LDR X9, [X9 + 0x190]
	0x01CBD8CC MOV X20, X0
	0x01CBD8D0 LDR X21, [X8 + 0x10]
	0x01CBD8D4 LDR X0, [X9]
	0x01CBD8D8 BL 0x1B6EA0C
	0x01CBD8DC MOV X1, X31
	0x01CBD8E0 MOV X19, X0
	0x01CBD8E4 BL 0x1C8D784
	0x01CBD8E8 STR X21, [X19 + 0x18]
	0x01CBD8EC CBZ X20, 0x1CBD93C
	0x01CBD8F0 LDR X8, [X20]
	0x01CBD8F4 MOV X0, X19
	0x01CBD8F8 LDR X1, [X8 + 0x40]
	0x01CBD8FC BL 0x1B6E8FC
	0x01CBD900 CBZ X0, 0x1CBD940
	0x01CBD904 LDR W8, [X20 + 0x18]
	0x01CBD908 CBZ W8, 0x1CBD94C
	0x01CBD90C ADRP X8, 0x2290000
	0x01CBD910 LDR X8, [X8 + 0x4E8]
	0x01CBD914 STR X19, [X20 + 0x20]
	0x01CBD918 LDR X0, [X8]
	0x01CBD91C LDR W8, [X0 + 0xE0]
	0x01CBD920 CBNZ W8, 0x1CBD928
	0x01CBD924 BL 0x1B6E8F8
	0x01CBD928 MOV X0, X20
	0x01CBD92C LDP X20, X19, [X31 + 0x10]
	0x01CBD930 MOV X1, X31
	0x01CBD934 LDP X30, X21, [X31], #0x20
	0x01CBD938 B 0x1C8A19C
	0x01CBD93C BL 0x1B6EA1C
	0x01CBD940 BL 0x1B6EA40
	0x01CBD944 MOV X1, X31
	0x01CBD948 BL 0x1B6E8E8
	0x01CBD94C BL 0x1B6EA24
	0x01CBD950 CBZ X1, 0x1CBD96C
	0x01CBD954 MOV X0, X1
	0x01CBD958 MOVZ W1, 0x1
	0x01CBD95C MOV W2, W31
	0x01CBD960 MOV W3, W31
	0x01CBD964 MOV X4, X31
	0x01CBD968 B 0x1D87A24
	0x01CBD96C STR X30, [X31 - 0x10]!
	0x01CBD970 BL 0x1B6EA1C
	0x01CBD974 RET
	0x01CBD978 RET
	0x01CBD97C STP X30, X21, [X31 - 0x20]!
	0x01CBD980 STP X20, X19, [X31 + 0x10]
	0x01CBD984 ADRP X20, 0x2566000
	0x01CBD988 LDRB W8, [X20 + 0x52C]
	0x01CBD98C MOV X19, X1
	0x01CBD990 TBNZ X8, 0x0, 0x1CBD9C0
	0x01CBD994 ADRP X0, 0x2290000
	0x01CBD998 LDR X0, [X0 + 0x4E8]
	0x01CBD99C BL 0x1B6E7F0
	0x01CBD9A0 ADRP X0, 0x2290000
	0x01CBD9A4 LDR X0, [X0 + 0x9A8]
	0x01CBD9A8 BL 0x1B6E7F0
	0x01CBD9AC ADRP X0, 0x2292000
	0x01CBD9B0 LDR X0, [X0 + 0x198]
	0x01CBD9B4 BL 0x1B6E7F0
	0x01CBD9B8 MOVZ W8, 0x1
	0x01CBD9BC STRB W8, [X20 + 0x52C]
	0x01CBD9C0 CBZ X19, 0x1CBDA68
	0x01CBD9C4 ADRP X20, 0x2290000
	0x01CBD9C8 ADRP X21, 0x2292000
	0x01CBD9CC LDR X20, [X20 + 0x9A8]
	0x01CBD9D0 LDR X21, [X21 + 0x198]
	0x01CBD9D4 MOVZ W1, 0x1
	0x01CBD9D8 MOV X0, X19
	0x01CBD9DC MOV W2, W31
	0x01CBD9E0 MOV W3, W31
	0x01CBD9E4 MOV X4, X31
	0x01CBD9E8 BL 0x1D87A24
	0x01CBD9EC LDR X0, [X20]
	0x01CBD9F0 MOVZ W1, 0x1
	0x01CBD9F4 BL 0x1B6E868
	0x01CBD9F8 LDR X8, [X21]
	0x01CBD9FC MOV X19, X0
	0x01CBDA00 MOV X0, X8
	0x01CBDA04 BL 0x1B6EA0C
	0x01CBDA08 MOV X1, X31
	0x01CBDA0C MOV X20, X0
	0x01CBDA10 BL 0x1C8D784
	0x01CBDA14 CBZ X19, 0x1CBDA68
	0x01CBDA18 CBZ X20, 0x1CBDA30
	0x01CBDA1C LDR X8, [X19]
	0x01CBDA20 MOV X0, X20
	0x01CBDA24 LDR X1, [X8 + 0x40]
	0x01CBDA28 BL 0x1B6E8FC
	0x01CBDA2C CBZ X0, 0x1CBDA70
	0x01CBDA30 LDR W8, [X19 + 0x18]
	0x01CBDA34 CBZ W8, 0x1CBDA6C
	0x01CBDA38 ADRP X8, 0x2290000
	0x01CBDA3C LDR X8, [X8 + 0x4E8]
	0x01CBDA40 STR X20, [X19 + 0x20]
	0x01CBDA44 LDR X0, [X8]
	0x01CBDA48 LDR W8, [X0 + 0xE0]
	0x01CBDA4C CBNZ W8, 0x1CBDA54
	0x01CBDA50 BL 0x1B6E8F8
	0x01CBDA54 MOV X0, X19
	0x01CBDA58 LDP X20, X19, [X31 + 0x10]
	0x01CBDA5C MOV X1, X31
	0x01CBDA60 LDP X30, X21, [X31], #0x20
	0x01CBDA64 B 0x1C8A19C
	0x01CBDA68 BL 0x1B6EA1C
	0x01CBDA6C BL 0x1B6EA24
	0x01CBDA70 BL 0x1B6EA40
	0x01CBDA74 MOV X1, X31
	0x01CBDA78 BL 0x1B6E8E8
	0x01CBDA7C SUB X31, X31, 0xA0
	0x01CBDA80 STP X30, X23, [X31 + 0x70]
	0x01CBDA84 STP X22, X21, [X31 + 0x80]
	0x01CBDA88 STP X20, X19, [X31 + 0x90]
	0x01CBDA8C ADRP X23, 0x2566000
	0x01CBDA90 ADRP X22, 0x2292000
	0x01CBDA94 LDRB W8, [X23 + 0x52D]
	0x01CBDA98 LDR X22, [X22 + 0x1A0]
	0x01CBDA9C MOV X19, X2
	0x01CBDAA0 MOV X20, X1
	0x01CBDAA4 MOV X21, X0
	0x01CBDAA8 TBNZ X8, 0x0, 0x1CBDAC0
	0x01CBDAAC ADRP X0, 0x2292000
	0x01CBDAB0 LDR X0, [X0 + 0x1A0]
	0x01CBDAB4 BL 0x1B6E7F0
	0x01CBDAB8 MOVZ W8, 0x1
	0x01CBDABC STRB W8, [X23 + 0x52D]
	0x01CBDAC0 MOVI V0.2D, 0x0
	0x01CBDAC4 ADD X8, X31, 0x0
	0x01CBDAC8 MOV X0, X31
	0x01CBDACC STR X31, [X31 + 0x60]
	0x01CBDAD0 STP V0, V0, [X31 + 0x40]
	0x01CBDAD4 STP V0, V0, [X31 + 0x20]
	0x01CBDAD8 BL 0x312CEE8
	0x01CBDADC LDP V0, V1, [X31]
	0x01CBDAE0 LDR X2, [X22]
	0x01CBDAE4 ADD X8, X31, 0x20
	0x01CBDAE8 MOVN W9, 0x0
	0x01CBDAEC ORR X0, X8, 0xF
	0x01CBDAF0 ADD X1, X31, 0x20
	0x01CBDAF4 STP X20, X21, [X31 + 0x48]
	0x01CBDAF8 STR X19, [X31 + 0x58]
	0x01CBDAFC STUR V0, [X31 + 0x28]
	0x01CBDB00 STUR V1, [X31 + 0x38]
	0x01CBDB04 STR W9, [X31 + 0x20]
	0x01CBDB08 BL 0x2089014
	0x01CBDB0C LDP X20, X19, [X31 + 0x90]
	0x01CBDB10 LDP X22, X21, [X31 + 0x80]
	0x01CBDB14 LDP X30, X23, [X31 + 0x70]
	0x01CBDB18 ADD X31, X31, 0xA0
	0x01CBDB1C RET
	0x01CBDB20 STR X30, [X31 - 0x30]!
	0x01CBDB24 STP X22, X21, [X31 + 0x10]
	0x01CBDB28 STP X20, X19, [X31 + 0x20]
	0x01CBDB2C ADRP X21, 0x2566000
	0x01CBDB30 ADRP X22, 0x2290000
	0x01CBDB34 LDRB W8, [X21 + 0x52E]
	0x01CBDB38 LDR X22, [X22 + 0xF78]
	0x01CBDB3C MOV X19, X3
	0x01CBDB40 MOV X20, X2
	0x01CBDB44 TBNZ X8, 0x0, 0x1CBDB5C
	0x01CBDB48 ADRP X0, 0x2290000
	0x01CBDB4C LDR X0, [X0 + 0xF78]
	0x01CBDB50 BL 0x1B6E7F0
	0x01CBDB54 MOVZ W8, 0x1
	0x01CBDB58 STRB W8, [X21 + 0x52E]
	0x01CBDB5C LDR X8, [X22]
	0x01CBDB60 LDR X8, [X8 + 0xB8]
	0x01CBDB64 LDR X8, [X8 + 0x20]
	0x01CBDB68 CBZ X8, 0x1CBDB90
	0x01CBDB6C LDR X4, [X8 + 0x18]
	0x01CBDB70 LDR X0, [X8 + 0x40]
	0x01CBDB74 LDR X3, [X8 + 0x28]
	0x01CBDB78 MOV X1, X20
	0x01CBDB7C MOV X2, X19
	0x01CBDB80 LDP X20, X19, [X31 + 0x20]
	0x01CBDB84 LDP X22, X21, [X31 + 0x10]
	0x01CBDB88 LDR X30, [X31], #0x30
	0x01CBDB8C BR X4
	0x01CBDB90 LDP X20, X19, [X31 + 0x20]
	0x01CBDB94 LDP X22, X21, [X31 + 0x10]
	0x01CBDB98 LDR X30, [X31], #0x30
	0x01CBDB9C RET
	0x01CBDBA0 RET
	0x01CBDBA4 RET
	0x01CBDBA8 RET
	0x01CBDBAC SUB X31, X31, 0x110
	0x01CBDBB0 STR D14, [X31 + 0x90]
	0x01CBDBB4 STP D13, D12, [X31 + 0x98]
	0x01CBDBB8 STP D11, D10, [X31 + 0xA8]
	0x01CBDBBC STP D9, D8, [X31 + 0xB8]
	0x01CBDBC0 STR X29, [X31 + 0xC8]
	0x01CBDBC4 STP X30, X25, [X31 + 0xD0]
	0x01CBDBC8 STP X24, X23, [X31 + 0xE0]
	0x01CBDBCC STP X22, X21, [X31 + 0xF0]
	0x01CBDBD0 STP X20, X19, [X31 + 0x100]
	0x01CBDBD4 ADRP X21, 0x2566000
	0x01CBDBD8 LDRB W8, [X21 + 0x52F]
	0x01CBDBDC MOV X22, X2
	0x01CBDBE0 MOV X19, X1
	0x01CBDBE4 MOV X20, X0
	0x01CBDBE8 STR W22, [X31 + 0x88]
	0x01CBDBEC TBNZ X8, 0x0, 0x1CBDCAC
	0x01CBDBF0 ADRP X0, 0x2292000
	0x01CBDBF4 LDR X0, [X0 + 0x68]
	0x01CBDBF8 BL 0x1B6E7F0
	0x01CBDBFC ADRP X0, 0x2292000
	0x01CBDC00 LDR X0, [X0 + 0x108]
	0x01CBDC04 BL 0x1B6E7F0
	0x01CBDC08 ADRP X0, 0x2292000
	0x01CBDC0C LDR X0, [X0 + 0x1A8]
	0x01CBDC10 BL 0x1B6E7F0
	0x01CBDC14 ADRP X0, 0x2292000
	0x01CBDC18 LDR X0, [X0 + 0x1B0]
	0x01CBDC1C BL 0x1B6E7F0
	0x01CBDC20 ADRP X0, 0x2292000
	0x01CBDC24 LDR X0, [X0 + 0x1B8]
	0x01CBDC28 BL 0x1B6E7F0
	0x01CBDC2C ADRP X0, 0x2290000
	0x01CBDC30 LDR X0, [X0 + 0xF78]
	0x01CBDC34 BL 0x1B6E7F0
	0x01CBDC38 ADRP X0, 0x2291000
	0x01CBDC3C LDR X0, [X0 + 0x248]
	0x01CBDC40 BL 0x1B6E7F0
	0x01CBDC44 ADRP X0, 0x2292000
	0x01CBDC48 LDR X0, [X0 + 0x148]
	0x01CBDC4C BL 0x1B6E7F0
	0x01CBDC50 ADRP X0, 0x2291000
	0x01CBDC54 LDR X0, [X0 + 0x250]
	0x01CBDC58 BL 0x1B6E7F0
	0x01CBDC5C ADRP X0, 0x2291000
	0x01CBDC60 LDR X0, [X0 + 0xB88]
	0x01CBDC64 BL 0x1B6E7F0
	0x01CBDC68 ADRP X0, 0x2291000
	0x01CBDC6C LDR X0, [X0 + 0x4A8]
	0x01CBDC70 BL 0x1B6E7F0
	0x01CBDC74 ADRP X0, 0x2292000
	0x01CBDC78 LDR X0, [X0 + 0x1C0]
	0x01CBDC7C BL 0x1B6E7F0
	0x01CBDC80 ADRP X0, 0x2292000
	0x01CBDC84 LDR X0, [X0 + 0x1C8]
	0x01CBDC88 BL 0x1B6E7F0
	0x01CBDC8C ADRP X0, 0x2292000
	0x01CBDC90 LDR X0, [X0 + 0x1D0]
	0x01CBDC94 BL 0x1B6E7F0
	0x01CBDC98 ADRP X0, 0x2292000
	0x01CBDC9C LDR X0, [X0 + 0x1D8]
	0x01CBDCA0 BL 0x1B6E7F0
	0x01CBDCA4 MOVZ W8, 0x1
	0x01CBDCA8 STRB W8, [X21 + 0x52F]
	0x01CBDCAC STR X31, [X31 + 0x80]
	0x01CBDCB0 STRB W31, [X31 + 0x7C]
	0x01CBDCB4 CBZ X19, 0x1CBE1B4
	0x01CBDCB8 LDR W8, [X19 + 0x180]
	0x01CBDCBC ADRP X25, 0x2291000
	0x01CBDCC0 LDR X25, [X25 + 0x4A8]
	0x01CBDCC4 CMP W8, 0x2
	0x01CBDCC8 B.NE 0x1CBDE28
	0x01CBDCCC LDR X0, [X20 + 0x38]
	0x01CBDCD0 CBZ X0, 0x1CBE1B4
	0x01CBDCD4 MOV X1, X31
	0x01CBDCD8 BL 0x1D87528
	0x01CBDCDC LDR X8, [X25]
	0x01CBDCE0 MOV X21, X0
	0x01CBDCE4 LDR W9, [X8 + 0xE0]
	0x01CBDCE8 CBNZ W9, 0x1CBDCF4
	0x01CBDCEC MOV X0, X8
	0x01CBDCF0 BL 0x1B6E8F8
	0x01CBDCF4 CMP W22, W21
	0x01CBDCF8 B.NE 0x1CBE0BC
	0x01CBDCFC ADRP X8, 0x2292000
	0x01CBDD00 LDR X8, [X8 + 0x1C8]
	0x01CBDD04 LDR X0, [X8]
	0x01CBDD08 BL 0x1B6EA0C
	0x01CBDD0C MOV X1, X31
	0x01CBDD10 MOV X21, X0
	0x01CBDD14 BL 0x32276F8
	0x01CBDD18 AND X2, X22, 0x0
	0x01CBDD1C MOV X1, X19
	0x01CBDD20 BL 0x1CBE23C
	0x01CBDD24 CBZ X21, 0x1CBE1B4
	0x01CBDD28 STR W0, [X21 + 0x10]
	0x01CBDD2C LDR X0, [X20 + 0x70]
	0x01CBDD30 CBZ X0, 0x1CBE1B4
	0x01CBDD34 MOV X1, X31
	0x01CBDD38 BL 0x3AA7658
	0x01CBDD3C LDR X0, [X20 + 0x70]
	0x01CBDD40 CBZ X0, 0x1CBE1B4
	0x01CBDD44 MOV X1, X31
	0x01CBDD48 MOV V8.16B, V0.16B
	0x01CBDD4C MOV V9.16B, V1.16B
	0x01CBDD50 MOV V10.16B, V2.16B
	0x01CBDD54 BL 0x3AA5FBC
	0x01CBDD58 ADRP X8, 0x2291000
	0x01CBDD5C LDP X22, X23, [X20 + 0x58]
	0x01CBDD60 LDR X8, [X8 + 0x248]
	0x01CBDD64 MOV V11.16B, V0.16B
	0x01CBDD68 MOV V12.16B, V1.16B
	0x01CBDD6C MOV V13.16B, V2.16B
	0x01CBDD70 LDR X1, [X8]
	0x01CBDD74 ADD X0, X31, 0x68
	0x01CBDD78 MOV V0.16B, V8.16B
	0x01CBDD7C MOV V1.16B, V9.16B
	0x01CBDD80 MOV V2.16B, V10.16B
	0x01CBDD84 MOV V14.16B, V3.16B
	0x01CBDD88 STP X31, X31, [X31 + 0x68]
	0x01CBDD8C BL 0x22DC630
	0x01CBDD90 ADRP X8, 0x2291000
	0x01CBDD94 LDR X8, [X8 + 0x250]
	0x01CBDD98 ADD X0, X31, 0x50
	0x01CBDD9C MOV V0.16B, V11.16B
	0x01CBDDA0 MOV V1.16B, V12.16B
	0x01CBDDA4 LDR X1, [X8]
	0x01CBDDA8 MOV V2.16B, V13.16B
	0x01CBDDAC MOV V3.16B, V14.16B
	0x01CBDDB0 STP X31, X31, [X31 + 0x50]
	0x01CBDDB4 STR W31, [X31 + 0x60]
	0x01CBDDB8 BL 0x22D82D0
	0x01CBDDBC ADRP X8, 0x2292000
	0x01CBDDC0 LDR W1, [X31 + 0x88]
	0x01CBDDC4 LDR X8, [X8 + 0x148]
	0x01CBDDC8 ADD X0, X31, 0x48
	0x01CBDDCC STR X31, [X31 + 0x48]
	0x01CBDDD0 LDR X2, [X8]
	0x01CBDDD4 BL 0x22D7A5C
	0x01CBDDD8 ADRP X8, 0x2291000
	0x01CBDDDC LDR X8, [X8 + 0xB88]
	0x01CBDDE0 LDR X0, [X8]
	0x01CBDDE4 BL 0x1B6EA0C
	0x01CBDDE8 ADRP X8, 0x2292000
	0x01CBDDEC LDR X8, [X8 + 0x1C0]
	0x01CBDDF0 MOV X1, X21
	0x01CBDDF4 MOV X3, X31
	0x01CBDDF8 MOV X24, X0
	0x01CBDDFC LDR X2, [X8]
	0x01CBDE00 BL 0x1DA90FC
	0x01CBDE04 LDP X3, X4, [X31 + 0x68]
	0x01CBDE08 LDR V0, [X31 + 0x5]
	0x01CBDE0C LDR W8, [X31 + 0x60]
	0x01CBDE10 LDR X6, [X31 + 0x48]
	0x01CBDE14 ADD X5, X31, 0x30
	0x01CBDE18 STR V0, [X31 + 0x3]
	0x01CBDE1C STR W8, [X31 + 0x40]
	0x01CBDE20 STR X31, [X31 + 0x8]
	0x01CBDE24 B 0x1CBE04C
	0x01CBDE28 MOV X0, X19
	0x01CBDE2C MOV X1, X31
	0x01CBDE30 BL 0x1D869B8
	0x01CBDE34 TBZ X0, 0x0, 0x1CBE0BC
	0x01CBDE38 ADRP X8, 0x2292000
	0x01CBDE3C LDR X8, [X8 + 0x1D8]
	0x01CBDE40 LDR X0, [X8]
	0x01CBDE44 BL 0x1B6EA0C
	0x01CBDE48 MOV X1, X31
	0x01CBDE4C MOV X21, X0
	0x01CBDE50 BL 0x32276F8
	0x01CBDE54 AND X2, X22, 0x0
	0x01CBDE58 MOV X1, X19
	0x01CBDE5C BL 0x1CBE23C
	0x01CBDE60 CBZ X21, 0x1CBE1B4
	0x01CBDE64 STR W0, [X21 + 0x10]
	0x01CBDE68 MOV W1, W0
	0x01CBDE6C LDR X0, [X20 + 0x80]
	0x01CBDE70 CBZ X0, 0x1CBE1B4
	0x01CBDE74 ADRP X8, 0x2292000
	0x01CBDE78 LDR X8, [X8 + 0x68]
	0x01CBDE7C ADD X2, X31, 0x80
	0x01CBDE80 LDR X3, [X8]
	0x01CBDE84 BL 0x286A69C
	0x01CBDE88 TBZ X0, 0x0, 0x1CBDF54
	0x01CBDE8C LDR X0, [X31 + 0x80]
	0x01CBDE90 CBZ X0, 0x1CBE1B4
	0x01CBDE94 LDR W1, [X31 + 0x88]
	0x01CBDE98 MOV X2, X31
	0x01CBDE9C BL 0x1D9F778
	0x01CBDEA0 LDR W1, [X31 + 0x88]
	0x01CBDEA4 LDR X2, [X31 + 0x80]
	0x01CBDEA8 MOV X0, X19
	0x01CBDEAC MOV X3, X31
	0x01CBDEB0 BL 0x1D8A48C
	0x01CBDEB4 LDR X0, [X20 + 0x78]
	0x01CBDEB8 CBZ X0, 0x1CBE1B4
	0x01CBDEBC ADRP X8, 0x2292000
	0x01CBDEC0 LDR X2, [X31 + 0x80]
	0x01CBDEC4 LDR W1, [X31 + 0x88]
	0x01CBDEC8 LDR X8, [X8 + 0x1A8]
	0x01CBDECC LDR X3, [X8]
	0x01CBDED0 BL 0x2939044
	0x01CBDED4 LDR X22, [X20 + 0x88]
	0x01CBDED8 STRB W31, [X31 + 0x7C]
	0x01CBDEDC ADD X1, X31, 0x7C
	0x01CBDEE0 MOV X0, X22
	0x01CBDEE4 MOV X2, X31
	0x01CBDEE8 BL 0x3247FB8
	0x01CBDEEC LDR X0, [X20 + 0x88]
	0x01CBDEF0 CBZ X0, 0x1CBE1C0
	0x01CBDEF4 ADRP X8, 0x2292000
	0x01CBDEF8 LDR W1, [X21 + 0x10]
	0x01CBDEFC LDR X8, [X8 + 0x1B0]
	0x01CBDF00 LDR X2, [X8]
	0x01CBDF04 BL 0x2DDD2D0
	0x01CBDF08 TBZ X0, 0x0, 0x1CBDF28
	0x01CBDF0C LDR X0, [X20 + 0x88]
	0x01CBDF10 CBZ X0, 0x1CBE1C4
	0x01CBDF14 ADRP X8, 0x2292000
	0x01CBDF18 LDR W1, [X21 + 0x10]
	0x01CBDF1C LDR X8, [X8 + 0x1B8]
	0x01CBDF20 LDR X2, [X8]
	0x01CBDF24 BL 0x2DDE758
	0x01CBDF28 MOV X23, X31
	0x01CBDF2C MOVZ W24, 0x3
	0x01CBDF30 LDRB W8, [X31 + 0x7C]
	0x01CBDF34 CBZ W8, 0x1CBDF44
	0x01CBDF38 MOV X0, X22
	0x01CBDF3C MOV X1, X31
	0x01CBDF40 BL 0x324AE50
	0x01CBDF44 CBNZ X23, 0x1CBE1B8
	0x01CBDF48 CMP W24, 0x3
	0x01CBDF4C B.EQ 0x1CBE0BC
	0x01CBDF50 CBNZ W24, 0x1CBE188
	0x01CBDF54 LDR X0, [X20 + 0x70]
	0x01CBDF58 CBZ X0, 0x1CBE1B4
	0x01CBDF5C MOV X1, X31
	0x01CBDF60 BL 0x3AA7658
	0x01CBDF64 LDR X0, [X20 + 0x70]
	0x01CBDF68 CBZ X0, 0x1CBE1B4
	0x01CBDF6C MOV X1, X31
	0x01CBDF70 MOV V8.16B, V0.16B
	0x01CBDF74 MOV V9.16B, V1.16B
	0x01CBDF78 MOV V10.16B, V2.16B
	0x01CBDF7C BL 0x3AA5FBC
	0x01CBDF80 ADRP X8, 0x2291000
	0x01CBDF84 LDP X22, X23, [X20 + 0x58]
	0x01CBDF88 LDR X8, [X8 + 0x248]
	0x01CBDF8C MOV V11.16B, V0.16B
	0x01CBDF90 MOV V12.16B, V1.16B
	0x01CBDF94 MOV V13.16B, V2.16B
	0x01CBDF98 LDR X1, [X8]
	0x01CBDF9C ADD X0, X31, 0x68
	0x01CBDFA0 MOV V0.16B, V8.16B
	0x01CBDFA4 MOV V1.16B, V9.16B
	0x01CBDFA8 MOV V2.16B, V10.16B
	0x01CBDFAC MOV V14.16B, V3.16B
	0x01CBDFB0 STP X31, X31, [X31 + 0x68]
	0x01CBDFB4 BL 0x22DC630
	0x01CBDFB8 ADRP X8, 0x2291000
	0x01CBDFBC LDR X8, [X8 + 0x250]
	0x01CBDFC0 ADD X0, X31, 0x50
	0x01CBDFC4 MOV V0.16B, V11.16B
	0x01CBDFC8 MOV V1.16B, V12.16B
	0x01CBDFCC LDR X1, [X8]
	0x01CBDFD0 MOV V2.16B, V13.16B
	0x01CBDFD4 MOV V3.16B, V14.16B
	0x01CBDFD8 STP X31, X31, [X31 + 0x50]
	0x01CBDFDC STR W31, [X31 + 0x60]
	0x01CBDFE0 BL 0x22D82D0
	0x01CBDFE4 ADRP X8, 0x2292000
	0x01CBDFE8 LDR W1, [X31 + 0x88]
	0x01CBDFEC LDR X8, [X8 + 0x148]
	0x01CBDFF0 ADD X0, X31, 0x48
	0x01CBDFF4 STR X31, [X31 + 0x48]
	0x01CBDFF8 LDR X2, [X8]
	0x01CBDFFC BL 0x22D7A5C
	0x01CBE000 ADRP X8, 0x2290000
	0x01CBE004 LDR X8, [X8 + 0xB88]
	0x01CBE008 LDR X0, [X8]
	0x01CBE00C BL 0x1B6EA0C
	0x01CBE010 ADRP X8, 0x2291000
	0x01CBE014 LDR X8, [X8 + 0x1D0]
	0x01CBE018 MOV X1, X21
	0x01CBE01C MOV X3, X31
	0x01CBE020 MOV X24, X0
	0x01CBE024 LDR X2, [X8]
	0x01CBE028 BL 0x1DA90FC
	0x01CBE02C LDR V0, [X31 + 0x5]
	0x01CBE030 LDR W8, [X31 + 0x60]
	0x01CBE034 LDP X3, X4, [X31 + 0x68]
	0x01CBE038 LDR X6, [X31 + 0x48]
	0x01CBE03C STR V0, [X31 + 0x1]
	0x01CBE040 STR W8, [X31 + 0x20]
	0x01CBE044 STR X31, [X31 + 0x8]
	0x01CBE048 ADD X5, X31, 0x10
	0x01CBE04C MOV X0, X19
	0x01CBE050 MOV X1, X22
	0x01CBE054 MOV X2, X23
	0x01CBE058 MOV X7, X24
	0x01CBE05C STRH W31, [X31]
	0x01CBE060 BL 0x1D993A0
	0x01CBE064 LDR W1, [X31 + 0x88]
	0x01CBE068 MOV X22, X0
	0x01CBE06C MOV X0, X19
	0x01CBE070 MOV X2, X22
	0x01CBE074 MOV X3, X31
	0x01CBE078 BL 0x1D8A48C
	0x01CBE07C LDR X0, [X20 + 0x78]
	0x01CBE080 CBZ X0, 0x1CBE1B4
	0x01CBE084 ADRP X8, 0x2291000
	0x01CBE088 LDR W1, [X31 + 0x88]
	0x01CBE08C LDR X8, [X8 + 0x1A8]
	0x01CBE090 MOV X2, X22
	0x01CBE094 LDR X3, [X8]
	0x01CBE098 BL 0x2939044
	0x01CBE09C LDR X0, [X20 + 0x80]
	0x01CBE0A0 CBZ X0, 0x1CBE1B4
	0x01CBE0A4 ADRP X8, 0x2291000
	0x01CBE0A8 LDR W1, [X21 + 0x10]
	0x01CBE0AC LDR X8, [X8 + 0x108]
	0x01CBE0B0 MOV X2, X22
	0x01CBE0B4 LDR X3, [X8]
	0x01CBE0B8 BL 0x2868C68
	0x01CBE0BC LDR X0, [X20 + 0x38]
	0x01CBE0C0 CBZ X0, 0x1CBE1B4
	0x01CBE0C4 LDR W22, [X31 + 0x88]
	0x01CBE0C8 MOV X1, X31
	0x01CBE0CC BL 0x1D87528
	0x01CBE0D0 LDR X8, [X25]
	0x01CBE0D4 MOV X21, X0
	0x01CBE0D8 LDR W9, [X8 + 0xE0]
	0x01CBE0DC CBNZ W9, 0x1CBE0E8
	0x01CBE0E0 MOV X0, X8
	0x01CBE0E4 BL 0x1B6E8F8
	0x01CBE0E8 CMP W22, W21
	0x01CBE0EC B.NE 0x1CBE108
	0x01CBE0F0 LDR W8, [X31 + 0x88]
	0x01CBE0F4 LDR X0, [X20 + 0xA0]
	0x01CBE0F8 STR W8, [X20 + 0xBC]
	0x01CBE0FC CBZ X0, 0x1CBE1B4
	0x01CBE100 MOV X1, X31
	0x01CBE104 BL 0x33DAC80
	0x01CBE108 LDR W8, [X19 + 0x180]
	0x01CBE10C CMP W8, 0x2
	0x01CBE110 B.NE 0x1CBE15C
	0x01CBE114 LDR X0, [X25]
	0x01CBE118 LDR W8, [X0 + 0xE0]
	0x01CBE11C CBNZ W8, 0x1CBE124
	0x01CBE120 BL 0x1B6E8F8
	0x01CBE124 ADD X0, X31, 0x88
	0x01CBE128 MOV X1, X31
	0x01CBE12C BL 0x1D81200
	0x01CBE130 CMP W0, 0xC9
	0x01CBE134 B.LT 0x1CBE15C
	0x01CBE138 MOV X0, X19
	0x01CBE13C MOV X1, X31
	0x01CBE140 BL 0x1D8B250
	0x01CBE144 TBZ X0, 0x0, 0x1CBE15C
	0x01CBE148 LDR X0, [X19 + 0x188]
	0x01CBE14C CBZ X0, 0x1CBE1B4
	0x01CBE150 MOV W1, W31
	0x01CBE154 MOV X2, X31
	0x01CBE158 BL 0x1D604AC
	0x01CBE15C ADRP X8, 0x228F000
	0x01CBE160 LDR X8, [X8 + 0xF78]
	0x01CBE164 LDR X8, [X8]
	0x01CBE168 LDR X8, [X8 + 0xB8]
	0x01CBE16C LDR X8, [X8 + 0x28]
	0x01CBE170 CBZ X8, 0x1CBE188
	0x01CBE174 LDR W1, [X31 + 0x88]
	0x01CBE178 LDR X9, [X8 + 0x18]
	0x01CBE17C LDR X0, [X8 + 0x40]
	0x01CBE180 LDR X2, [X8 + 0x28]
	0x01CBE184 BLR X9
	0x01CBE188 LDP X20, X19, [X31 + 0x100]
	0x01CBE18C LDP X22, X21, [X31 + 0xF0]
	0x01CBE190 LDP X24, X23, [X31 + 0xE0]
	0x01CBE194 LDP X30, X25, [X31 + 0xD0]
	0x01CBE198 LDR X29, [X31 + 0xC8]
	0x01CBE19C LDP D9, D8, [X31 + 0xB8]
	0x01CBE1A0 LDP D11, D10, [X31 + 0xA8]
	0x01CBE1A4 LDP D13, D12, [X31 + 0x98]
	0x01CBE1A8 LDR V14, [X31 + 0x90]
	0x01CBE1AC ADD X31, X31, 0x110
	0x01CBE1B0 RET
	0x01CBE1B4 BL 0x1B6EA1C
	0x01CBE1B8 MOV X0, X23
	0x01CBE1BC BL 0x1B6EA14
	0x01CBE1C0 BL 0x1B6EA1C
	0x01CBE1C4 BL 0x1B6EA1C
	0x01CBE1C8 B 0x1CBE1D8
	0x01CBE1CC B 0x1CBE1D8
	0x01CBE1D0 B 0x1CBE1D8
	0x01CBE1D4 B 0x1CBE1D8
	0x01CBE1D8 MOV X24, X0
	0x01CBE1DC CMP W1, 0x1
	0x01CBE1E0 B.NE 0x1CBE1FC
	0x01CBE1E4 MOV X0, X24
	0x01CBE1E8 BL 0x3D19840
	0x01CBE1EC LDR X23, [X0]
	0x01CBE1F0 BL 0x3D19850
	0x01CBE1F4 MOV W24, W31
	0x01CBE1F8 B 0x1CBDF30
	0x01CBE1FC MOV X23, X31
	0x01CBE200 B 0x1CBE208
	0x01CBE204 MOV X24, X0
	0x01CBE208 LDRB W8, [X31 + 0x7C]
	0x01CBE20C CBZ W8, 0x1CBE21C
	0x01CBE210 MOV X0, X22
	0x01CBE214 MOV X1, X31
	0x01CBE218 BL 0x324AE50
	0x01CBE21C CBNZ X23, 0x1CBE228
	0x01CBE220 MOV X0, X24
	0x01CBE224 BL 0x1C8418C
	0x01CBE228 MOV X0, X23
	0x01CBE22C BL 0x1B6EA14
	0x01CBE230 BL 0x18F46A8
	0x01CBE234 MOV X1, X31
	0x01CBE238 B 0x32276F8
	0x01CBE23C SUB X31, X31, 0x40
	0x01CBE240 STP X30, X21, [X31 + 0x20]
	0x01CBE244 STP X20, X19, [X31 + 0x30]
	0x01CBE248 ADRP X21, 0x2565000
	0x01CBE24C LDRB W8, [X21 + 0x533]
	0x01CBE250 MOV X19, X2
	0x01CBE254 MOV X20, X1
	0x01CBE258 TBNZ X8, 0x0, 0x1CBE27C
	0x01CBE25C ADRP X0, 0x228F000
	0x01CBE260 LDR X0, [X0 + 0xF78]
	0x01CBE264 BL 0x1B6E7F0
	0x01CBE268 ADRP X0, 0x2290000
	0x01CBE26C LDR X0, [X0 + 0x4A8]
	0x01CBE270 BL 0x1B6E7F0
	0x01CBE274 MOVZ W8, 0x1
	0x01CBE278 STRB W8, [X21 + 0x533]
	0x01CBE27C CBZ X20, 0x1CBE31C
	0x01CBE280 ADRP X21, 0x2290000
	0x01CBE284 LDR X21, [X21 + 0x4A8]
	0x01CBE288 MOV X0, X20
	0x01CBE28C MOV X1, X31
	0x01CBE290 BL 0x1D87528
	0x01CBE294 LDR X8, [X21]
	0x01CBE298 MOV X21, X0
	0x01CBE29C LDR W9, [X8 + 0xE0]
	0x01CBE2A0 CBNZ W9, 0x1CBE2AC
	0x01CBE2A4 MOV X0, X8
	0x01CBE2A8 BL 0x1B6E8F8
	0x01CBE2AC CMP W21, W19
	0x01CBE2B0 B.NE 0x1CBE2CC
	0x01CBE2B4 ADRP X8, 0x228F000
	0x01CBE2B8 LDR X8, [X8 + 0xF78]
	0x01CBE2BC LDR X8, [X8]
	0x01CBE2C0 LDR X8, [X8 + 0xB8]
	0x01CBE2C4 LDR X1, [X8]
	0x01CBE2C8 B 0x1CBE2E4
	0x01CBE2CC AND X1, X19, 0x0
	0x01CBE2D0 MOV X0, X20
	0x01CBE2D4 MOV X2, X31
	0x01CBE2D8 BL 0x1D8A78C
	0x01CBE2DC CBZ X0, 0x1CBE30C
	0x01CBE2E0 MOV X1, X0
	0x01CBE2E4 ADD X0, X31, 0x0
	0x01CBE2E8 MOV X2, X31
	0x01CBE2EC STP X31, X31, [X31 + 0x10]
	0x01CBE2F0 STP X31, X31, [X31]
	0x01CBE2F4 BL 0x31DFECC
	0x01CBE2F8 LDR V0, [X31]
	0x01CBE2FC ADD X0, X31, 0x10
	0x01CBE300 MOV X1, X31
	0x01CBE304 STR V0, [X31 + 0x1]
	0x01CBE308 BL 0x31E1EE0
	0x01CBE30C LDP X20, X19, [X31 + 0x30]
	0x01CBE310 LDP X30, X21, [X31 + 0x20]
	0x01CBE314 ADD X31, X31, 0x40
	0x01CBE318 RET
	0x01CBE31C BL 0x1B6EA1C
	0x01CBE320 MOV X1, X31
	0x01CBE324 B 0x32276F8
	0x01CBE328 STR X30, [X31 - 0x30]!
	0x01CBE32C STP X22, X21, [X31 + 0x10]
	0x01CBE330 STP X20, X19, [X31 + 0x20]
	0x01CBE334 ADRP X22, 0x2565000
	0x01CBE338 LDRB W8, [X22 + 0x530]
	0x01CBE33C MOV X19, X2
	0x01CBE340 MOV X21, X1
	0x01CBE344 MOV X20, X0
	0x01CBE348 TBNZ X8, 0x0, 0x1CBE390
	0x01CBE34C ADRP X0, 0x2290000
	0x01CBE350 LDR X0, [X0 + 0x2B0]
	0x01CBE354 BL 0x1B6E7F0
	0x01CBE358 ADRP X0, 0x2291000
	0x01CBE35C LDR X0, [X0 + 0x1E0]
	0x01CBE360 BL 0x1B6E7F0
	0x01CBE364 ADRP X0, 0x2291000
	0x01CBE368 LDR X0, [X0 + 0x60]
	0x01CBE36C BL 0x1B6E7F0
	0x01CBE370 ADRP X0, 0x2291000
	0x01CBE374 LDR X0, [X0 + 0x1E8]
	0x01CBE378 BL 0x1B6E7F0
	0x01CBE37C ADRP X0, 0x228F000
	0x01CBE380 LDR X0, [X0 + 0xF78]
	0x01CBE384 BL 0x1B6E7F0
	0x01CBE388 MOVZ W8, 0x1
	0x01CBE38C STRB W8, [X22 + 0x530]
	0x01CBE390 STR X31, [X31 + 0x8]
	0x01CBE394 LDR X0, [X20 + 0x98]
	0x01CBE398 CBZ X0, 0x1CBE480
	0x01CBE39C MOV X1, X31
	0x01CBE3A0 BL 0x1D869B8
	0x01CBE3A4 TBZ X0, 0x0, 0x1CBE444
	0x01CBE3A8 LDR X0, [X20 + 0x78]
	0x01CBE3AC CBZ X0, 0x1CBE480
	0x01CBE3B0 ADRP X8, 0x2291000
	0x01CBE3B4 LDR X8, [X8 + 0x1E8]
	0x01CBE3B8 AND X1, X19, 0x0
	0x01CBE3BC ADD X2, X31, 0x8
	0x01CBE3C0 LDR X3, [X8]
	0x01CBE3C4 BL 0x293AB60
	0x01CBE3C8 TBZ X0, 0x0, 0x1CBE404
	0x01CBE3CC LDR X0, [X31 + 0x8]
	0x01CBE3D0 CBZ X0, 0x1CBE480
	0x01CBE3D4 ADRP X8, 0x2290000
	0x01CBE3D8 LDR X8, [X8 + 0x2B0]
	0x01CBE3DC LDR X1, [X8]
	0x01CBE3E0 BL 0x208FDE8
	0x01CBE3E4 CBZ X0, 0x1CBE480
	0x01CBE3E8 MOV X1, X31
	0x01CBE3EC BL 0x1CB5EF4
	0x01CBE3F0 LDR X2, [X31 + 0x8]
	0x01CBE3F4 MOV X1, X21
	0x01CBE3F8 MOV W22, W0
	0x01CBE3FC BL 0x1CBBD30
	0x01CBE400 B 0x1CBE408
	0x01CBE404 MOV W22, W31
	0x01CBE408 LDR X0, [X20 + 0x80]
	0x01CBE40C CBZ X0, 0x1CBE480
	0x01CBE410 ADRP X8, 0x2291000
	0x01CBE414 LDR X8, [X8 + 0x1E0]
	0x01CBE418 MOV W1, W22
	0x01CBE41C LDR X2, [X8]
	0x01CBE420 BL 0x2868E70
	0x01CBE424 TBZ X0, 0x0, 0x1CBE444
	0x01CBE428 LDR X0, [X20 + 0x80]
	0x01CBE42C CBZ X0, 0x1CBE480
	0x01CBE430 ADRP X8, 0x2291000
	0x01CBE434 LDR X8, [X8 + 0x60]
	0x01CBE438 MOV W1, W22
	0x01CBE43C LDR X2, [X8]
	0x01CBE440 BL 0x286A078
	0x01CBE444 ADRP X8, 0x228F000
	0x01CBE448 LDR X8, [X8 + 0xF78]
	0x01CBE44C LDR X8, [X8]
	0x01CBE450 LDR X8, [X8 + 0xB8]
	0x01CBE454 LDR X8, [X8 + 0x30]
	0x01CBE458 CBZ X8, 0x1CBE470
	0x01CBE45C LDR X9, [X8 + 0x18]
	0x01CBE460 LDR X0, [X8 + 0x40]
	0x01CBE464 LDR X2, [X8 + 0x28]
	0x01CBE468 AND X1, X19, 0x0
	0x01CBE46C BLR X9
	0x01CBE470 LDP X20, X19, [X31 + 0x20]
	0x01CBE474 LDP X22, X21, [X31 + 0x10]
	0x01CBE478 LDR X30, [X31], #0x30
	0x01CBE47C RET
	0x01CBE480 BL 0x1B6EA1C
	0x01CBE484 RET
	0x01CBE488 RET
	0x01CBE48C RET
	0x01CBE490 RET
	0x01CBE494 RET
	0x01CBE498 STP X30, X21, [X31 - 0x20]!
	0x01CBE49C STP X20, X19, [X31 + 0x10]
	0x01CBE4A0 ADRP X21, 0x2565000
	0x01CBE4A4 LDRB W8, [X21 + 0x531]
	0x01CBE4A8 MOV W19, W2
	0x01CBE4AC MOV X20, X0
	0x01CBE4B0 TBNZ X8, 0x0, 0x1CBE4C8
	0x01CBE4B4 ADRP X0, 0x2291000
	0x01CBE4B8 LDR X0, [X0 + 0x1F0]
	0x01CBE4BC BL 0x1B6E7F0
	0x01CBE4C0 MOVZ W8, 0x1
	0x01CBE4C4 STRB W8, [X21 + 0x531]
	0x01CBE4C8 CMP W19, 0xA
	0x01CBE4CC B.EQ 0x1CBE4D8
	0x01CBE4D0 CMP W19, 0x5
	0x01CBE4D4 B.NE 0x1CBE508
	0x01CBE4D8 ADRP X8, 0x2291000
	0x01CBE4DC LDR X8, [X8 + 0x1F0]
	0x01CBE4E0 LDR X21, [X20 + 0x50]
	0x01CBE4E4 LDR X0, [X8]
	0x01CBE4E8 LDR W8, [X0 + 0xE0]
	0x01CBE4EC CBNZ W8, 0x1CBE4F4
	0x01CBE4F0 BL 0x1B6E8F8
	0x01CBE4F4 MOV X0, X21
	0x01CBE4F8 MOV X1, X31
	0x01CBE4FC BL 0x3CD3E14
	0x01CBE500 TBNZ X0, 0x0, 0x1CBE508
	0x01CBE504 STR X31, [X20 + 0x50]
	0x01CBE508 CMP W19, 0x11
	0x01CBE50C MOV X0, X20
	0x01CBE510 LDP X20, X19, [X31 + 0x10]
	0x01CBE514 CSET W1, NE
	0x01CBE518 LDP X30, X21, [X31], #0x20
	0x01CBE51C B 0x1CBE520
	0x01CBE520 STR X30, [X31 - 0x30]!
	0x01CBE524 STP X22, X21, [X31 + 0x10]
	0x01CBE528 STP X20, X19, [X31 + 0x20]
	0x01CBE52C ADRP X22, 0x2565000
	0x01CBE530 ADRP X21, 0x228F000
	0x01CBE534 LDRB W8, [X22 + 0x532]
	0x01CBE538 LDR X21, [X21 + 0x478]
	0x01CBE53C MOV W20, W1
	0x01CBE540 MOV X19, X0
	0x01CBE544 TBNZ X8, 0x0, 0x1CBE580
	0x01CBE548 ADRP X0, 0x228F000
	0x01CBE54C LDR X0, [X0 + 0x800]
	0x01CBE550 BL 0x1B6E7F0
	0x01CBE554 ADRP X0, 0x2291000
	0x01CBE558 LDR X0, [X0 + 0x1F8]
	0x01CBE55C BL 0x1B6E7F0
	0x01CBE560 ADRP X0, 0x2291000
	0x01CBE564 LDR X0, [X0 + 0x200]
	0x01CBE568 BL 0x1B6E7F0
	0x01CBE56C ADRP X0, 0x228F000
	0x01CBE570 LDR X0, [X0 + 0x478]
	0x01CBE574 BL 0x1B6E7F0
	0x01CBE578 MOVZ W8, 0x1
	0x01CBE57C STRB W8, [X22 + 0x532]
	0x01CBE580 LDR X0, [X21]
	0x01CBE584 LDR X21, [X19 + 0xA0]
	0x01CBE588 LDR W8, [X0 + 0xE0]
	0x01CBE58C CBNZ W8, 0x1CBE594
	0x01CBE590 BL 0x1B6E8F8
	0x01CBE594 MOV X0, X21
	0x01CBE598 MOV X1, X31
	0x01CBE59C MOV X2, X31
	0x01CBE5A0 BL 0x3A9D6EC
	0x01CBE5A4 TBZ X0, 0x0, 0x1CBE5D4
	0x01CBE5A8 LDR X8, [X19 + 0xA0]
	0x01CBE5AC CBZ X8, 0x1CBE650
	0x01CBE5B0 LDR X0, [X8 + 0x48]
	0x01CBE5B4 CBZ X0, 0x1CBE650
	0x01CBE5B8 MOV X1, X31
	0x01CBE5BC BL 0x339EE3C
	0x01CBE5C0 TBZ X0, 0x0, 0x1CBE5D4
	0x01CBE5C4 LDR X0, [X19 + 0xA0]
	0x01CBE5C8 CBZ X0, 0x1CBE650
	0x01CBE5CC MOV X1, X31
	0x01CBE5D0 BL 0x33DAED0
	0x01CBE5D4 LDR X0, [X19 + 0x78]
	0x01CBE5D8 CBZ X0, 0x1CBE650
	0x01CBE5DC ADRP X8, 0x2291000
	0x01CBE5E0 LDR X8, [X8 + 0x1F8]
	0x01CBE5E4 LDR X1, [X8]
	0x01CBE5E8 BL 0x29391F4
	0x01CBE5EC LDR X0, [X19 + 0x80]
	0x01CBE5F0 CBZ X0, 0x1CBE650
	0x01CBE5F4 ADRP X8, 0x2291000
	0x01CBE5F8 LDR X8, [X8 + 0x200]
	0x01CBE5FC ADRP X21, 0x228F000
	0x01CBE600 LDR X1, [X8]
	0x01CBE604 LDR X21, [X21 + 0x800]
	0x01CBE608 BL 0x2868E04
	0x01CBE60C LDR X0, [X21]
	0x01CBE610 LDR W8, [X0 + 0xE0]
	0x01CBE614 CBNZ W8, 0x1CBE61C
	0x01CBE618 BL 0x1B6E8F8
	0x01CBE61C MOV X0, X31
	0x01CBE620 BL 0x3A6A5FC
	0x01CBE624 TBZ X0, 0x0, 0x1CBE640
	0x01CBE628 TBZ X20, 0x0, 0x1CBE640
	0x01CBE62C MOV X0, X19
	0x01CBE630 LDP X20, X19, [X31 + 0x20]
	0x01CBE634 LDP X22, X21, [X31 + 0x10]
	0x01CBE638 LDR X30, [X31], #0x30
	0x01CBE63C B 0x1CBB814
	0x01CBE640 LDP X20, X19, [X31 + 0x20]
	0x01CBE644 LDP X22, X21, [X31 + 0x10]
	0x01CBE648 LDR X30, [X31], #0x30
	0x01CBE64C RET
	0x01CBE650 BL 0x1B6EA1C
	0x01CBE654 RET
	0x01CBE658 SUB X31, X31, 0x30
	0x01CBE65C STP X31, X30, [X31 + 0x18]
	0x01CBE660 MOV X1, X0
	0x01CBE664 ADD X0, X31, 0x0
	0x01CBE668 MOV X2, X31
	0x01CBE66C STP X31, X31, [X31 + 0x8]
	0x01CBE670 STR X31, [X31]
	0x01CBE674 BL 0x31DFECC
	0x01CBE678 LDR V0, [X31]
	0x01CBE67C ADD X0, X31, 0x10
	0x01CBE680 MOV X1, X31
	0x01CBE684 STR V0, [X31 + 0x1]
	0x01CBE688 BL 0x31E1CA0
	0x01CBE68C LDR X30, [X31 + 0x20]
	0x01CBE690 ADD X31, X31, 0x30
	0x01CBE694 RET
	0x01CBE698 STP X30, X27, [X31 - 0x50]!
	0x01CBE69C STP X26, X25, [X31 + 0x10]
	0x01CBE6A0 STP X24, X23, [X31 + 0x20]
	0x01CBE6A4 STP X22, X21, [X31 + 0x30]
	0x01CBE6A8 STP X20, X19, [X31 + 0x40]
	0x01CBE6AC ADRP X26, 0x2565000
	0x01CBE6B0 ADRP X27, 0x2291000
	0x01CBE6B4 ADRP X20, 0x2291000
	0x01CBE6B8 ADRP X25, 0x2291000
	0x01CBE6BC ADRP X24, 0x2291000
	0x01CBE6C0 ADRP X23, 0x2291000
	0x01CBE6C4 ADRP X22, 0x2291000
	0x01CBE6C8 ADRP X21, 0x2291000
	0x01CBE6CC LDR X27, [X27 + 0x208]
	0x01CBE6D0 LDR X20, [X20 + 0x210]
	0x01CBE6D4 LDRB W8, [X26 + 0x534]
	0x01CBE6D8 LDR X25, [X25 + 0x218]
	0x01CBE6DC LDR X24, [X24 + 0x220]
	0x01CBE6E0 LDR X23, [X23 + 0x228]
	0x01CBE6E4 LDR X22, [X22 + 0x230]
	0x01CBE6E8 LDR X21, [X21 + 0x238]
	0x01CBE6EC MOV X19, X0
	0x01CBE6F0 TBNZ X8, 0x0, 0x1CBE750
	0x01CBE6F4 ADRP X0, 0x2291000
	0x01CBE6F8 LDR X0, [X0 + 0x220]
	0x01CBE6FC BL 0x1B6E7F0
	0x01CBE700 ADRP X0, 0x2291000
	0x01CBE704 LDR X0, [X0 + 0x210]
	0x01CBE708 BL 0x1B6E7F0
	0x01CBE70C ADRP X0, 0x2291000
	0x01CBE710 LDR X0, [X0 + 0x208]
	0x01CBE714 BL 0x1B6E7F0
	0x01CBE718 ADRP X0, 0x2291000
	0x01CBE71C LDR X0, [X0 + 0x218]
	0x01CBE720 BL 0x1B6E7F0
	0x01CBE724 ADRP X0, 0x2291000
	0x01CBE728 LDR X0, [X0 + 0x230]
	0x01CBE72C BL 0x1B6E7F0
	0x01CBE730 ADRP X0, 0x2291000
	0x01CBE734 LDR X0, [X0 + 0x228]
	0x01CBE738 BL 0x1B6E7F0
	0x01CBE73C ADRP X0, 0x2291000
	0x01CBE740 LDR X0, [X0 + 0x238]
	0x01CBE744 BL 0x1B6E7F0
	0x01CBE748 MOVZ W8, 0x1
	0x01CBE74C STRB W8, [X26 + 0x534]
	0x01CBE750 LDR X0, [X27]
	0x01CBE754 BL 0x1B6EA0C
	0x01CBE758 LDR X1, [X20]
	0x01CBE75C MOV X20, X0
	0x01CBE760 BL 0x29387A4
	0x01CBE764 STR X20, [X19 + 0x78]
	0x01CBE768 LDR X0, [X25]
	0x01CBE76C BL 0x1B6EA0C
	0x01CBE770 LDR X1, [X24]
	0x01CBE774 MOV X20, X0
	0x01CBE778 BL 0x28683C4
	0x01CBE77C STR X20, [X19 + 0x80]
	0x01CBE780 LDR X0, [X23]
	0x01CBE784 BL 0x1B6EA0C
	0x01CBE788 LDR X1, [X22]
	0x01CBE78C MOV X20, X0
	0x01CBE790 BL 0x2DDC760
	0x01CBE794 STR X20, [X19 + 0x88]
	0x01CBE798 LDR X0, [X21]
	0x01CBE79C BL 0x1B6EA0C
	0x01CBE7A0 MOV X1, X31
	0x01CBE7A4 MOV X20, X0
	0x01CBE7A8 BL 0x34B51D4
	0x01CBE7AC STR X20, [X19 + 0xA8]
	0x01CBE7B0 MOV X0, X19
	0x01CBE7B4 LDP X20, X19, [X31 + 0x40]
	0x01CBE7B8 LDP X22, X21, [X31 + 0x30]
	0x01CBE7BC LDP X24, X23, [X31 + 0x20]
	0x01CBE7C0 LDP X26, X25, [X31 + 0x10]
	0x01CBE7C4 MOV X1, X31
	0x01CBE7C8 LDP X30, X27, [X31], #0x50
	0x01CBE7CC B 0x1D6B70C
	0x01CBE7D0 STR X30, [X31 - 0x10]!
	0x01CBE7D4 CBZ X2, 0x1CBE7EC
	0x01CBE7D8 LDR X1, [X0 + 0x10]
	0x01CBE7DC MOV X0, X2
	0x01CBE7E0 MOV X2, X31
	0x01CBE7E4 LDR X30, [X31], #0x10
	0x01CBE7E8 B 0x1D9FC34

ISIL:
	001 Subtract X31, X31, 368
	002 Move [X31+240], D10
	003 Move [X31+256], D9
	004 Move [X31+264], D8
	005 Move [X31+272], X29
	006 Move [X31+280], X30
	007 Move [X31+288], X28
	008 Move [X31+296], X27
	009 Move [X31+304], X26
	010 Move [X31+312], X25
	011 Move [X31+320], X24
	012 Move [X31+328], X23
	013 Move [X31+336], X22
	014 Move [X31+344], X21
	015 Move [X31+352], X20
	016 Move [X31+360], X19
	017 Move [X31+48], X0
	018 NotImplemented "Instruction MRS not yet implemented."
	019 Move X8, [X23+40]
	020 Move X21, 0x2567000
	021 Move X20, 0x2293000
	022 Move X19, 0x2293000
	023 Move [X31+232], X8
	024 Move W8, [X21+1320]
	025 Move X20, [X20+208]
	026 Move X19, [X19+216]
	027 Move X24, X1
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {145}
	032 Move X0, 0x2292000
	033 Move X0, [X0+416]
	034 Call 0x1B6F7F0
	035 Move X0, 0x2293000
	036 Move X0, [X0+224]
	037 Call 0x1B6F7F0
	038 Move X0, 0x2293000
	039 Move X0, [X0+232]
	040 Call 0x1B6F7F0
	041 Move X0, 0x2293000
	042 Move X0, [X0+240]
	043 Call 0x1B6F7F0
	044 Move X0, 0x2292000
	045 Move X0, [X0+664]
	046 Call 0x1B6F7F0
	047 Move X0, 0x2291000
	048 Move X0, [X0+2232]
	049 Call 0x1B6F7F0
	050 Move X0, 0x2293000
	051 Move X0, [X0+248]
	052 Call 0x1B6F7F0
	053 Move X0, 0x2293000
	054 Move X0, [X0+256]
	055 Call 0x1B6F7F0
	056 Move X0, 0x2293000
	057 Move X0, [X0+104]
	058 Call 0x1B6F7F0
	059 Move X0, 0x2293000
	060 Move X0, [X0+216]
	061 Call 0x1B6F7F0
	062 Move X0, 0x2293000
	063 Move X0, [X0+264]
	064 Call 0x1B6F7F0
	065 Move X0, 0x2293000
	066 Move X0, [X0+208]
	067 Call 0x1B6F7F0
	068 Move X0, 0x2292000
	069 Move X0, [X0+1136]
	070 Call 0x1B6F7F0
	071 Move X0, 0x2293000
	072 Move X0, [X0+272]
	073 Call 0x1B6F7F0
	074 Move X0, 0x2293000
	075 Move X0, [X0+280]
	076 Call 0x1B6F7F0
	077 Move X0, 0x2293000
	078 Move X0, [X0+288]
	079 Call 0x1B6F7F0
	080 Move X0, 0x2293000
	081 Move X0, [X0+296]
	082 Call 0x1B6F7F0
	083 Move X0, 0x2292000
	084 Move X0, [X0+1144]
	085 Call 0x1B6F7F0
	086 Move X0, 0x2293000
	087 Move X0, [X0+304]
	088 Call 0x1B6F7F0
	089 Move X0, 0x2291000
	090 Move X0, [X0+1576]
	091 Call 0x1B6F7F0
	092 Move X0, 0x2293000
	093 Move X0, [X0+312]
	094 Call 0x1B6F7F0
	095 Move X0, 0x2293000
	096 Move X0, [X0+320]
	097 Call 0x1B6F7F0
	098 Move X0, 0x2292000
	099 Move X0, [X0+584]
	100 Call 0x1B6F7F0
	101 Move X0, 0x2293000
	102 Move X0, [X0+328]
	103 Call 0x1B6F7F0
	104 Move X0, 0x2292000
	105 Move X0, [X0+592]
	106 Call 0x1B6F7F0
	107 Move X0, 0x2291000
	108 Move X0, [X0+1144]
	109 Call 0x1B6F7F0
	110 Move X0, 0x2292000
	111 Move X0, [X0+2952]
	112 Call 0x1B6F7F0
	113 Move X0, 0x2292000
	114 Move X0, [X0+1192]
	115 Call 0x1B6F7F0
	116 Move X0, 0x2291000
	117 Move X0, [X0+3016]
	118 Call 0x1B6F7F0
	119 Move X0, 0x2293000
	120 Move X0, [X0+336]
	121 Call 0x1B6F7F0
	122 Move X0, 0x2293000
	123 Move X0, [X0+344]
	124 Call 0x1B6F7F0
	125 Move X0, 0x2293000
	126 Move X0, [X0+352]
	127 Call 0x1B6F7F0
	128 Move X0, 0x2293000
	129 Move X0, [X0+360]
	130 Call 0x1B6F7F0
	131 Move X0, 0x2293000
	132 Move X0, [X0+368]
	133 Call 0x1B6F7F0
	134 Move X0, 0x2293000
	135 Move X0, [X0+376]
	136 Call 0x1B6F7F0
	137 Move X0, 0x2293000
	138 Move X0, [X0+384]
	139 Call 0x1B6F7F0
	140 Move X0, 0x2293000
	141 Move X0, [X0+392]
	142 Call 0x1B6F7F0
	143 Move W8, 1
	144 Move [X21+1320], W8
	145 Move X0, [X20]
	146 Move [X31+160], X31
	147 Move [X31+168], X31
	148 Move [X31+152], W31
	149 Move [X31+136], X31
	150 Move [X31+144], X31
	151 Move [X31+120], X31
	152 Move [X31+128], X31
	153 Call 0x1B6FA0C
	154 Move X1, [X19]
	155 Move X20, X0
	156 Call Dictionary`2<NetworkId, Object>..ctor, X0
	157 Compare X24, 0
	158 JumpIfEqual {1258}
	159 Move X0, X24
	160 Move X1, X31
	161 Call NetworkRunner.GetResumeSnapshotNetworkObjects, X0
	162 Compare X0, 0
	163 JumpIfEqual {1258}
	164 Move X10, 0x2293000
	165 Move X8, [X0]
	166 Move X10, [X10+280]
	167 Move X22, X0
	168 Move [X31+24], X23
	169 Move [X31+32], X24
	170 NotImplemented "Instruction LDRH not yet implemented."
	171 Move X1, [X10]
	172 Compare X9, 0
	173 JumpIfEqual {180}
	174 Move X10, [X8+176]
	175 Add X10, X10, 8
	176 NotImplemented "Instruction LDUR not yet implemented."
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Subtract X9, X9, 1
	179 Add X10, X10, 16
	180 Move X0, X22
	181 Move W2, W31
	182 Call 0x1BB5284
	183 NotImplemented "Instruction LDRSW not yet implemented."
	184 Add X8, X8, X9
	185 Add X0, X8, 312
	186 Move X29, 0x2292000
	187 Move X23, 0x2293000
	188 Move X21, 0x2293000
	189 Move X19, 0x2293000
	190 Move X29, [X29+1144]
	191 Move X23, [X23+344]
	192 Move X21, [X21+288]
	193 Move X19, [X19+240]
	194 Move X8, [X0]
	195 Move X1, [X0+8]
	196 Move X0, X22
	197 NotImplemented "Instruction BLR not yet implemented."
	198 Move X22, X0
	199 Move X24, X31
	200 Move [X31+56], X20
	201 Move [X31+40], X24
	202 Compare X22, 0
	203 JumpIfEqual {1264}
	204 Move X8, [X22]
	205 Move X1, [X29]
	206 NotImplemented "Instruction LDRH not yet implemented."
	207 Compare X9, 0
	208 JumpIfEqual {215}
	209 Move X10, [X8+176]
	210 Add X10, X10, 8
	211 NotImplemented "Instruction LDUR not yet implemented."
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Subtract X9, X9, 1
	214 Add X10, X10, 16
	215 Move X0, X22
	216 Move W2, W31
	217 Call 0x1BB5284
	218 NotImplemented "Instruction LDRSW not yet implemented."
	219 Add X8, X8, X9
	220 Add X0, X8, 312
	221 Move X8, [X0]
	222 Move X1, [X0+8]
	223 Move X0, X22
	224 NotImplemented "Instruction BLR not yet implemented."
	225 Move TEMP, X0
	226 And TEMP, TEMP, 1
	227 Compare TEMP, 1
	228 JumpIfNotEqual {804}
	229 Move X0, [X23]
	230 Call 0x1B6FA0C
	231 Move X24, X0
	232 Move X1, X31
	233 Call Object..ctor, X0
	234 Move X8, [X22]
	235 Move X1, [X21]
	236 NotImplemented "Instruction LDRH not yet implemented."
	237 Compare X9, 0
	238 JumpIfEqual {245}
	239 Move X10, [X8+176]
	240 Add X10, X10, 8
	241 NotImplemented "Instruction LDUR not yet implemented."
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Subtract X9, X9, 1
	244 Add X10, X10, 16
	245 Move X0, X22
	246 Move W2, W31
	247 Call 0x1BB5284
	248 NotImplemented "Instruction LDRSW not yet implemented."
	249 Add X8, X8, X9
	250 Add X0, X8, 312
	251 Move X8, [X0]
	252 Move X1, [X0+8]
	253 Move X0, X22
	254 NotImplemented "Instruction BLR not yet implemented."
	255 Compare X24, 0
	256 JumpIfEqual {1229}
	257 Move X25, X0
	258 Move [X24+16], X0
	259 Compare X0, 0
	260 JumpIfEqual {1231}
	261 Move X26, [X19]
	262 Move X8, [X26+56]
	263 Compare X8, 0
	264 JumpIfNotEqual {267}
	265 Move X0, X26
	266 Call 0x1BB51DC
	267 Move X0, X25
	268 Move X1, X31
	269 Call Component.get_gameObject, X0
	270 Compare X0, 0
	271 JumpIfEqual {1230}
	272 Move X8, [X26+56]
	273 Move X2, [X8+8]
	274 Add X1, X31, 168
	275 Call 0x20D12D0, X0, X1
	276 Move TEMP, X0
	277 And TEMP, TEMP, 1
	278 Compare TEMP, 1
	279 JumpIfNotEqual {204}
	280 Move X26, [X24+16]
	281 Compare X26, 0
	282 JumpIfEqual {1267}
	283 Move X8, 0x2293000
	284 Move X8, [X8+224]
	285 Move X25, [X8]
	286 Move X8, [X25+56]
	287 Compare X8, 0
	288 JumpIfNotEqual {291}
	289 Move X0, X25
	290 Call 0x1BB51DC
	291 Move X0, X26
	292 Move X1, X31
	293 Call Component.get_gameObject, X0
	294 Compare X0, 0
	295 JumpIfEqual {1268}
	296 Move X8, [X25+56]
	297 Move X1, [X8]
	298 Call 0x20D0154, X0
	299 Move X8, 0x2291000
	300 Move X8, [X8+1144]
	301 Move X26, X0
	302 Move [X31+160], X31
	303 Move X0, [X8]
	304 Move W8, [X0+224]
	305 Compare W8, 0
	306 JumpIfNotEqual {308}
	307 Call 0x1B6F8F8
	308 Move X0, X26
	309 Move X1, X31
	310 Move X2, X31
	311 Call Object.op_Inequality, X0, X1
	312 Move TEMP, X0
	313 And TEMP, TEMP, 1
	314 Compare TEMP, 1
	315 JumpIfNotEqual {345}
	316 Compare X26, 0
	317 JumpIfEqual {1281}
	318 Move X8, [X31+48]
	319 Move X25, [X8+128]
	320 Move X0, X26
	321 Move X1, X31
	322 Call NetPlayer.get_Token, X0
	323 Move W1, W0
	324 Compare X25, 0
	325 JumpIfEqual {1286}
	326 Move X8, 0x2293000
	327 Move X8, [X8+104]
	328 Move X3, [X8]
	329 Add X2, X31, 160
	330 Move X0, X25
	331 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	332 Move X8, 0x2291000
	333 Move X8, [X8+1144]
	334 Move X25, [X31+160]
	335 Move X0, [X8]
	336 Move W8, [X0+224]
	337 Compare W8, 0
	338 JumpIfNotEqual {340}
	339 Call 0x1B6F8F8
	340 Move X0, X25
	341 Move X1, X31
	342 Move X2, X31
	343 Call Object.op_Inequality, X0, X1
	344 Move W25, W0
	345 Move W25, W31
	346 Move X8, 0x2291000
	347 Move X8, [X8+1144]
	348 Move X27, [X31+160]
	349 Move X0, [X8]
	350 Move W8, [X0+224]
	351 Compare W8, 0
	352 JumpIfNotEqual {354}
	353 Call 0x1B6F8F8
	354 Move X0, X27
	355 Move X1, X31
	356 Move X2, X31
	357 Call Object.op_Equality, X0, X1
	358 Move TEMP, X0
	359 And TEMP, TEMP, 1
	360 Compare TEMP, 1
	361 JumpIfNotEqual {417}
	362 Move X0, [X24+16]
	363 Compare X0, 0
	364 JumpIfEqual {1284}
	365 Move X1, X31
	366 Call NetworkObject.get_InputAuthority, X0
	367 Move X8, 0x2292000
	368 Move X8, [X8+1192]
	369 Move X26, X0
	370 Move X0, [X8]
	371 Move W8, [X0+224]
	372 Compare W8, 0
	373 JumpIfNotEqual {375}
	374 Call 0x1B6F8F8
	375 Move X0, X31
	376 Call PlayerRef.get_None
	377 NotImplemented "Instruction CMP not yet implemented."
	378 Move X8, 0x2292000
	379 Move X8, [X8+1192]
	380 Move X9, [X31+48]
	381 Move X0, [X8]
	382 Move W20, [X9+188]
	383 Move W8, [X0+224]
	384 Compare W8, 0
	385 JumpIfNotEqual {387}
	386 Call 0x1B6F8F8
	387 NotImplemented "Instruction CMP not yet implemented."
	388 Move X8, 0x2291000
	389 Move X8, [X8+3016]
	390 Move X0, [X8]
	391 Move W1, 6
	392 Call 0x1B6F868
	393 Move X26, X0
	394 Compare X0, 0
	395 JumpIfEqual {1296}
	396 Move W8, [X26+24]
	397 Compare W8, 0
	398 JumpIfEqual {1301}
	399 Move X9, 0x2293000
	400 Move X9, [X9+368]
	401 Move X0, [X31+40]
	402 Move X9, [X9]
	403 Move [X26+32], X9
	404 Move X9, [X24+16]
	405 NotImplemented "Instruction CMP not yet implemented."
	406 NotImplemented "Instruction CSEL not yet implemented."
	407 Move [X31+40], X0
	408 Compare X9, 0
	409 JumpIfEqual {457}
	410 Compare X0, 0
	411 JumpIfEqual {1303}
	412 Move X8, [X0]
	413 Move X9, [X8+360]
	414 Move X1, [X8+368]
	415 NotImplemented "Instruction BLR not yet implemented."
	416 Move W8, [X26+24]
	417 Move X0, [X31+160]
	418 Compare X0, 0
	419 JumpIfEqual {1291}
	420 Move X1, X31
	421 Call Component.get_transform, X0
	422 Move X27, X0
	423 Move X0, [X31+168]
	424 Compare X0, 0
	425 JumpIfEqual {1292}
	426 Add X8, X31, 176
	427 Move X1, X31
	428 Call NetworkTRSP.get_Data, X0
	429 Move X0, [X31+168]
	430 Compare X0, 0
	431 JumpIfEqual {1289}
	432 Move S8, [X31+184]
	433 Move S9, [X31+188]
	434 Move V10, [X31+192]
	435 Add X8, X31, 176
	436 Move X1, X31
	437 Call NetworkTRSP.get_Data, X0
	438 Compare X27, 0
	439 JumpIfEqual {1279}
	440 Move S3, [X31+196]
	441 Move S4, [X31+200]
	442 Move S5, [X31+204]
	443 Move S6, [X31+208]
	444 Move X0, X27
	445 Move V0, V8
	446 Move V1, V9
	447 Move V2, V10
	448 Move X1, X31
	449 Call Transform.SetPositionAndRotation, X0, X1, X2
	450 Move X0, [X31+160]
	451 Compare X0, 0
	452 JumpIfEqual {1280}
	453 Move X1, [X24+16]
	454 Move W19, W25
	455 Move X2, X31
	456 Call NetworkObject.CopyStateFrom, X0, X1
	457 Move X0, X31
	458 NotImplemented "Instruction CMP not yet implemented."
	459 NotImplemented "Instruction CMP not yet implemented."
	460 Move [X26+40], X0
	461 Move X8, 0x2293000
	462 Move X8, [X8+384]
	463 Move X9, 0x2292000
	464 Move X8, [X8]
	465 Move [X26+48], X8
	466 Move X8, [X31+48]
	467 Move W8, [X8+188]
	468 Move X9, [X9+1192]
	469 Move [X31+152], W8
	470 Move X0, [X9]
	471 Move W8, [X0+224]
	472 Compare W8, 0
	473 JumpIfNotEqual {475}
	474 Call 0x1B6F8F8
	475 Add X0, X31, 152
	476 Move X1, X31
	477 Call PlayerRef.ToString, X0
	478 Move W8, [X26+24]
	479 NotImplemented "Instruction CMP not yet implemented."
	480 NotImplemented "Instruction CMP not yet implemented."
	481 Move [X26+56], X0
	482 Move X8, 0x2293000
	483 Move X8, [X8+352]
	484 Move X8, [X8]
	485 Move [X26+64], X8
	486 Move X8, [X31+48]
	487 Move X0, [X8+56]
	488 Compare X0, 0
	489 JumpIfEqual {1300}
	490 Move X1, X31
	491 Call NetworkRunner.get_LocalPlayer, X0
	492 Move [X31+152], W0
	493 Add X0, X31, 152
	494 Move X1, X31
	495 Call PlayerRef.ToString, X0
	496 Move W8, [X26+24]
	497 NotImplemented "Instruction CMP not yet implemented."
	498 Move [X26+72], X0
	499 Move X0, X26
	500 Move X1, X31
	501 Call String.Concat, X0
	502 Move X8, 0x2291000
	503 Move X8, [X8+2232]
	504 Move X26, X0
	505 Move X0, [X8]
	506 Move W8, [X0+224]
	507 Compare W8, 0
	508 JumpIfNotEqual {510}
	509 Call 0x1B6F8F8
	510 Move X0, X26
	511 Move X1, X31
	512 Call Debug.LogWarning, X0
	513 Move X8, [X31+48]
	514 Move X0, [X8+56]
	515 Compare X0, 0
	516 JumpIfEqual {1295}
	517 Move X1, X31
	518 Call NetworkRunner.get_LocalPlayer, X0
	519 Move X0, [X31+168]
	520 Compare X0, 0
	521 JumpIfEqual {1288}
	522 Move X26, [X24+16]
	523 Add X8, X31, 176
	524 Move X1, X31
	525 Call NetworkTRSP.get_Data, X0
	526 Move X8, 0x2292000
	527 Move S0, [X31+184]
	528 Move S1, [X31+188]
	529 Move V2, [X31+192]
	530 Move X8, [X8+584]
	531 Move [X31+104], X31
	532 Move [X31+112], X31
	533 Move X1, [X8]
	534 Add X0, X31, 104
	535 Call Nullable`1<Vector3>..ctor, X0, X1
	536 Move X0, [X31+168]
	537 Compare X0, 0
	538 JumpIfEqual {1282}
	539 Add X8, X31, 176
	540 Move X1, X31
	541 Call NetworkTRSP.get_Data, X0
	542 Move X8, 0x2292000
	543 Move S0, [X31+196]
	544 Move S1, [X31+200]
	545 Move S2, [X31+204]
	546 Move S3, [X31+208]
	547 Move X8, [X8+592]
	548 Move [X31+176], X31
	549 Move [X31+184], X31
	550 Move [X31+192], W31
	551 Move X1, [X8]
	552 Add X0, X31, 176
	553 Call Nullable`1<Quaternion>..ctor, X0, X1
	554 Move X0, [X24+16]
	555 Compare X0, 0
	556 JumpIfEqual {1283}
	557 Move X1, X31
	558 Call NetworkObject.get_InputAuthority, X0
	559 Move X8, 0x2293000
	560 Move X8, [X8+328]
	561 And X1, X0, 0
	562 Move [X31+96], X31
	563 Move X2, [X8]
	564 Add X0, X31, 96
	565 Call Nullable`1<PlayerRef>..ctor, X0, X1
	566 Move X8, 0x2292000
	567 Move X8, [X8+2952]
	568 Move X0, [X8]
	569 Call 0x1B6FA0C
	570 Move X8, 0x2293000
	571 Move X8, [X8+336]
	572 Move X27, X0
	573 Move X2, [X8]
	574 Move X1, X24
	575 Move X3, X31
	576 Call OnBeforeSpawned..ctor, X0, X1, X2
	577 Move V0, [X31+11]
	578 Move W8, [X31+192]
	579 Move X2, [X31+104]
	580 Move X3, [X31+112]
	581 Move X5, [X31+96]
	582 Move [X31+4], V0
	583 Move [X31+80], W8
	584 Move X0, [X31+32]
	585 Add X4, X31, 64
	586 Move X1, X26
	587 Move X6, X27
	588 Move W7, W31
	589 Move [X31], X31
	590 Call NetworkRunner.Spawn, X0, X1, X2, X3, X4, X5, X6
	591 Move X27, X0
	592 Move [X31+160], X0
	593 Compare X0, 0
	594 JumpIfEqual {1287}
	595 Move X8, 0x2293000
	596 Move X8, [X8+224]
	597 Move X26, [X8]
	598 Move X8, [X26+56]
	599 Compare X8, 0
	600 JumpIfNotEqual {603}
	601 Move X0, X26
	602 Call 0x1BB51DC
	603 Move X0, X27
	604 Move X1, X31
	605 Call Component.get_gameObject, X0
	606 Compare X0, 0
	607 JumpIfEqual {1285}
	608 Move X8, [X26+56]
	609 Move X1, [X8]
	610 Call 0x20D0154, X0
	611 Move X26, X0
	612 Move W19, W25
	613 Move X8, [X31+160]
	614 Compare X8, 0
	615 JumpIfEqual {1232}
	616 Move W25, 4
	617 Move X8, [X8+120]
	618 Compare X8, 0
	619 JumpIfEqual {1233}
	620 NotImplemented "Instruction LDRSW not yet implemented."
	621 Subtract X20, X25, 4
	622 NotImplemented "Instruction CMP not yet implemented."
	623 Move X8, [X24+16]
	624 Compare X8, 0
	625 JumpIfEqual {1234}
	626 Move X8, [X8+120]
	627 Compare X8, 0
	628 JumpIfEqual {1236}
	629 Move W9, [X8+24]
	630 NotImplemented "Instruction CMP not yet implemented."
	631 Move X8, [X8]
	632 Compare X8, 0
	633 JumpIfEqual {641}
	634 Move X9, 0x2293000
	635 Move X10, [X8]
	636 Move X9, [X9+320]
	637 Move W12, [X10+304]
	638 Move X9, [X9]
	639 Move W11, [X9+304]
	640 NotImplemented "Instruction CMP not yet implemented."
	641 Move X27, X31
	642 Move X10, [X10+200]
	643 Add X10, X10, X11
	644 NotImplemented "Instruction LDUR not yet implemented."
	645 NotImplemented "Instruction CMP not yet implemented."
	646 NotImplemented "Instruction CSEL not yet implemented."
	647 Move X8, 0x2291000
	648 Move X8, [X8+1144]
	649 Move X0, [X8]
	650 Move W8, [X0+224]
	651 Compare W8, 0
	652 JumpIfNotEqual {654}
	653 Call 0x1B6F8F8
	654 Move X0, X27
	655 Move X1, X31
	656 Move X2, X31
	657 Call Object.op_Inequality, X0, X1
	658 Move TEMP, X0
	659 And TEMP, TEMP, 1
	660 Compare TEMP, 1
	661 JumpIfNotEqual {717}
	662 Move X8, [X31+160]
	663 Compare X8, 0
	664 JumpIfEqual {1244}
	665 Move X8, [X8+120]
	666 Compare X8, 0
	667 JumpIfEqual {1242}
	668 Move W9, [X8+24]
	669 NotImplemented "Instruction CMP not yet implemented."
	670 Move X0, [X8]
	671 Compare X0, 0
	672 JumpIfEqual {1243}
	673 Move X1, X31
	674 Call Component.get_transform, X0
	675 Compare X27, 0
	676 JumpIfEqual {1245}
	677 Move X28, X0
	678 Add X8, X31, 176
	679 Move X0, X27
	680 Move X1, X31
	681 Call NetworkTRSP.get_Data, X0
	682 Compare X28, 0
	683 JumpIfEqual {1248}
	684 Move S0, [X31+184]
	685 Move S1, [X31+188]
	686 Move V2, [X31+192]
	687 Move X0, X28
	688 Move X1, X31
	689 Call Transform.set_localPosition, X0, X1
	690 Move X8, [X31+160]
	691 Compare X8, 0
	692 JumpIfEqual {1241}
	693 Move X8, [X8+120]
	694 Compare X8, 0
	695 JumpIfEqual {1240}
	696 Move W9, [X8+24]
	697 NotImplemented "Instruction CMP not yet implemented."
	698 Move X0, [X8]
	699 Compare X0, 0
	700 JumpIfEqual {1246}
	701 Move X1, X31
	702 Call Component.get_transform, X0
	703 Move X28, X0
	704 Add X8, X31, 176
	705 Move X0, X27
	706 Move X1, X31
	707 Call NetworkTRSP.get_Data, X0
	708 Compare X28, 0
	709 JumpIfEqual {1247}
	710 Move S0, [X31+196]
	711 Move S1, [X31+200]
	712 Move S2, [X31+204]
	713 Move S3, [X31+208]
	714 Move X0, X28
	715 Move X1, X31
	716 Call Transform.set_localRotation, X0, X1
	717 Move X8, [X31+160]
	718 Add X25, X25, 1
	719 Compare X8, 0
	720 JumpIfNotEqual {617}
	721 Move X8, 0x2291000
	722 Move X8, [X8+1144]
	723 Move X0, [X8]
	724 Move W8, [X0+224]
	725 Compare W8, 0
	726 JumpIfNotEqual {728}
	727 Call 0x1B6F8F8
	728 Move X0, X26
	729 Move X1, X31
	730 Move X2, X31
	731 Call Object.op_Inequality, X0, X1
	732 NotImplemented "Instruction ORN not yet implemented."
	733 Move X19, 0x2293000
	734 Move X19, [X19+240]
	735 Move TEMP, X8
	736 And TEMP, TEMP, 1
	737 Compare TEMP, 1
	738 JumpIfEqual {784}
	739 Compare X26, 0
	740 JumpIfEqual {1290}
	741 Move X8, [X31+48]
	742 Move X25, [X8+128]
	743 Move X0, X26
	744 Move X1, X31
	745 Call NetPlayer.get_Token, X0
	746 Move W1, W0
	747 Compare X25, 0
	748 JumpIfEqual {1293}
	749 Move X8, 0x2293000
	750 Move X2, [X31+160]
	751 Move X8, [X8+264]
	752 Move X3, [X8]
	753 Move X0, X25
	754 Call Dictionary`2<Int32, Object>.set_Item, X0, X1, X2
	755 Move X8, [X31+48]
	756 Move X25, [X8+136]
	757 Move X0, X26
	758 Move X1, X31
	759 Call NetPlayer.get_Token, X0
	760 Move W1, W0
	761 Compare X25, 0
	762 JumpIfEqual {1278}
	763 Move X9, 0x2293000
	764 Move W10, [X25+28]
	765 Move X8, [X25+16]
	766 Move X9, [X9+304]
	767 Add W10, W10, 1
	768 Move X9, [X9]
	769 Move [X25+28], W10
	770 Compare X8, 0
	771 JumpIfEqual {1277}
	772 NotImplemented "Instruction LDRSW not yet implemented."
	773 Move W11, [X8+24]
	774 NotImplemented "Instruction CMP not yet implemented."
	775 Add W9, W10, 1
	776 Add X8, X8, X10
	777 Move [X25+24], W9
	778 Move [X8+32], W1
	779 Move X8, [X9+32]
	780 Move X8, [X8+192]
	781 Move X2, [X8+112]
	782 Move X0, X25
	783 Call List`1<Int32>.AddWithResize, X0, X1
	784 Move X8, [X24+16]
	785 Compare X8, 0
	786 JumpIfEqual {1269}
	787 Move X8, [X8+32]
	788 Move X20, [X31+56]
	789 Move X24, [X31+40]
	790 Compare X8, 0
	791 JumpIfEqual {795}
	792 Move W1, [X8]
	793 Compare X20, 0
	794 JumpIfNotEqual {798}
	795 Move X1, X31
	796 Compare X20, 0
	797 JumpIfEqual {1270}
	798 Move X8, 0x2293000
	799 Move X2, [X31+160]
	800 Move X8, [X8+248]
	801 Move X3, [X8]
	802 Move X0, X20
	803 Call Dictionary`2<NetworkId, Object>.Add, X0, X1, X2
	804 Move X24, X31
	805 Move W20, 14
	806 Compare X22, 0
	807 JumpIfEqual {831}
	808 Move X8, [X22]
	809 Move X10, 0x2292000
	810 NotImplemented "Instruction LDRH not yet implemented."
	811 Move X10, [X10+1136]
	812 Move X1, [X10]
	813 Compare X9, 0
	814 JumpIfEqual {821}
	815 Move X10, [X8+176]
	816 Add X10, X10, 8
	817 NotImplemented "Instruction LDUR not yet implemented."
	818 NotImplemented "Instruction CMP not yet implemented."
	819 Subtract X9, X9, 1
	820 Add X10, X10, 16
	821 Move X0, X22
	822 Move W2, W31
	823 Call 0x1BB5284
	824 NotImplemented "Instruction LDRSW not yet implemented."
	825 Add X8, X8, X9
	826 Add X0, X8, 312
	827 Move X8, [X0]
	828 Move X1, [X0+8]
	829 Move X0, X22
	830 NotImplemented "Instruction BLR not yet implemented."
	831 Compare X24, 0
	832 JumpIfNotEqual {1265}
	833 NotImplemented "Instruction CMP not yet implemented."
	834 Compare W20, 0
	835 JumpIfNotEqual {1208}
	836 Move X0, [X31+32]
	837 Move X1, X31
	838 Call NetworkRunner.GetResumeSnapshotNetworkSceneObjects, X0
	839 Compare X0, 0
	840 JumpIfEqual {1258}
	841 Move X8, [X0]
	842 Move X10, 0x2293000
	843 Move X21, X0
	844 NotImplemented "Instruction LDRH not yet implemented."
	845 Move X10, [X10+272]
	846 Move X1, [X10]
	847 Compare X9, 0
	848 JumpIfEqual {855}
	849 Move X10, [X8+176]
	850 Add X10, X10, 8
	851 NotImplemented "Instruction LDUR not yet implemented."
	852 NotImplemented "Instruction CMP not yet implemented."
	853 Subtract X9, X9, 1
	854 Add X10, X10, 16
	855 Move X0, X21
	856 Move W2, W31
	857 Call 0x1BB5284
	858 NotImplemented "Instruction LDRSW not yet implemented."
	859 Add X8, X8, X9
	860 Add X0, X8, 312
	861 Move X8, [X0]
	862 Move X1, [X0+8]
	863 Move X0, X21
	864 NotImplemented "Instruction BLR not yet implemented."
	865 Move X21, X0
	866 Compare X0, 0
	867 JumpIfEqual {1271}
	868 Move X20, 0x2293000
	869 Move X26, 0x2293000
	870 Move X25, 0x2293000
	871 Move X28, 0x2291000
	872 Move X27, 0x2293000
	873 Move X24, 0x2293000
	874 Move X20, [X20+296]
	875 Move X26, [X26+232]
	876 Move X25, [X25+360]
	877 Move X28, [X28+1576]
	878 Move X27, [X27+392]
	879 Move X24, [X24+376]
	880 Move X8, [X21]
	881 Move X1, [X29]
	882 NotImplemented "Instruction LDRH not yet implemented."
	883 Compare X9, 0
	884 JumpIfEqual {891}
	885 Move X10, [X8+176]
	886 Add X10, X10, 8
	887 NotImplemented "Instruction LDUR not yet implemented."
	888 NotImplemented "Instruction CMP not yet implemented."
	889 Subtract X9, X9, 1
	890 Add X10, X10, 16
	891 Move X0, X21
	892 Move W2, W31
	893 Call 0x1BB5284
	894 NotImplemented "Instruction LDRSW not yet implemented."
	895 Add X8, X8, X9
	896 Add X0, X8, 312
	897 Move X8, [X0]
	898 Move X1, [X0+8]
	899 Move X0, X21
	900 NotImplemented "Instruction BLR not yet implemented."
	901 Move TEMP, X0
	902 And TEMP, TEMP, 1
	903 Compare TEMP, 1
	904 JumpIfNotEqual {1170}
	905 Move X8, [X21]
	906 Move X1, [X20]
	907 NotImplemented "Instruction LDRH not yet implemented."
	908 Compare X9, 0
	909 JumpIfEqual {916}
	910 Move X10, [X8+176]
	911 Add X10, X10, 8
	912 NotImplemented "Instruction LDUR not yet implemented."
	913 NotImplemented "Instruction CMP not yet implemented."
	914 Subtract X9, X9, 1
	915 Add X10, X10, 16
	916 Move X0, X21
	917 Move W2, W31
	918 Call 0x1BB5284
	919 NotImplemented "Instruction LDRSW not yet implemented."
	920 Add X8, X8, X9
	921 Add X0, X8, 312
	922 Move X8, [X0]
	923 Move X1, [X0+8]
	924 Move X0, X21
	925 NotImplemented "Instruction BLR not yet implemented."
	926 Move X22, X0
	927 Compare X0, 0
	928 JumpIfEqual {1238}
	929 Move X0, X22
	930 Move X2, X31
	931 Call NetworkObject.CopyStateFrom, X0, X1
	932 Move X23, [X19]
	933 Move X8, [X23+56]
	934 Compare X8, 0
	935 JumpIfNotEqual {938}
	936 Move X0, X23
	937 Call 0x1BB51DC
	938 Move X0, X22
	939 Move X1, X31
	940 Call Component.get_gameObject, X0
	941 Compare X0, 0
	942 JumpIfEqual {1239}
	943 Move X8, [X23+56]
	944 Move X2, [X8+8]
	945 Add X1, X31, 144
	946 Call 0x20D12D0, X0, X1
	947 Move TEMP, X0
	948 And TEMP, TEMP, 1
	949 Compare TEMP, 1
	950 JumpIfNotEqual {1050}
	951 Move X0, X22
	952 Move X1, X31
	953 Call Component.get_transform, X0
	954 Move X23, X0
	955 Move X0, [X31+144]
	956 Compare X0, 0
	957 JumpIfEqual {1251}
	958 Add X8, X31, 176
	959 Move X1, X31
	960 Call NetworkTRSP.get_Data, X0
	961 Compare X23, 0
	962 JumpIfEqual {1253}
	963 Move S0, [X31+184]
	964 Move S1, [X31+188]
	965 Move V2, [X31+192]
	966 Move X0, X23
	967 Move X1, X31
	968 Call Transform.set_position, X0, X1
	969 Move X0, X22
	970 Move X1, X31
	971 Call Component.get_transform, X0
	972 Move X23, X0
	973 Move X0, [X31+144]
	974 Compare X0, 0
	975 JumpIfEqual {1255}
	976 Add X8, X31, 176
	977 Move X1, X31
	978 Call NetworkTRSP.get_Data, X0
	979 Compare X23, 0
	980 JumpIfEqual {1252}
	981 Move S0, [X31+196]
	982 Move S1, [X31+200]
	983 Move S2, [X31+204]
	984 Move S3, [X31+208]
	985 Move X0, X23
	986 Move X1, X31
	987 Call Transform.set_rotation, X0, X1
	988 Move X8, [X31+144]
	989 Compare X8, 0
	990 JumpIfEqual {1050}
	991 Move X9, [X8]
	992 Move X8, 0x2293000
	993 Move X8, [X8+312]
	994 Move W11, [X9+304]
	995 Move X8, [X8]
	996 Move W10, [X8+304]
	997 NotImplemented "Instruction CMP not yet implemented."
	998 Move X9, [X9+200]
	999 Add X9, X9, X10
	1000 NotImplemented "Instruction LDUR not yet implemented."
	1001 NotImplemented "Instruction CMP not yet implemented."
	1002 Move X8, 0x2291000
	1003 Move X8, [X8+664]
	1004 Move X1, [X8]
	1005 Move X0, X22
	1006 Call 0x2090DE8, X0
	1007 Move X8, 0x2290000
	1008 Move X8, [X8+1144]
	1009 Move X23, X0
	1010 Move X0, [X8]
	1011 Move W8, [X0+224]
	1012 Compare W8, 0
	1013 JumpIfNotEqual {1015}
	1014 Call 0x1B6F8F8
	1015 Move X0, X23
	1016 Move X1, X31
	1017 Move X2, X31
	1018 Call Object.op_Inequality, X0, X1
	1019 Move TEMP, X0
	1020 And TEMP, TEMP, 1
	1021 Compare TEMP, 1
	1022 JumpIfNotEqual {1050}
	1023 Move X0, [X31+144]
	1024 Compare X0, 0
	1025 JumpIfEqual {1275}
	1026 Add X8, X31, 176
	1027 Move X1, X31
	1028 Call NetworkTRSP.get_Data, X0
	1029 Compare X23, 0
	1030 JumpIfEqual {1276}
	1031 Move S0, [X31+184]
	1032 Move S1, [X31+188]
	1033 Move V2, [X31+192]
	1034 Move X0, X23
	1035 Move X1, X31
	1036 Call Rigidbody.set_position, X0, X1
	1037 Move X0, [X31+144]
	1038 Compare X0, 0
	1039 JumpIfEqual {1274}
	1040 Add X8, X31, 176
	1041 Move X1, X31
	1042 Call NetworkTRSP.get_Data, X0
	1043 Move S0, [X31+196]
	1044 Move S1, [X31+200]
	1045 Move S2, [X31+204]
	1046 Move S3, [X31+208]
	1047 Move X0, X23
	1048 Move X1, X31
	1049 Call Rigidbody.set_rotation, X0, X1
	1050 Move X23, [X26]
	1051 Move X8, [X23+56]
	1052 Compare X8, 0
	1053 JumpIfNotEqual {1056}
	1054 Move X0, X23
	1055 Call 0x1BB51DC
	1056 Move X0, X22
	1057 Move X1, X31
	1058 Call Component.get_gameObject, X0
	1059 Compare X0, 0
	1060 JumpIfEqual {1237}
	1061 Move X8, [X23+56]
	1062 Move X2, [X8+8]
	1063 Add X1, X31, 136
	1064 Call 0x20D12D0, X0, X1
	1065 Move TEMP, X0
	1066 And TEMP, TEMP, 1
	1067 Compare TEMP, 1
	1068 JumpIfNotEqual {1150}
	1069 Move X0, [X31+136]
	1070 Compare X0, 0
	1071 JumpIfEqual {1254}
	1072 Move X1, X31
	1073 Call GrabbableItem.get_attachedAnchorId, X0
	1074 Move [X31+128], X0
	1075 Add X0, X31, 128
	1076 Move X1, X31
	1077 Call NetworkBehaviourId.get_IsValid, X0
	1078 Move TEMP, X0
	1079 And TEMP, TEMP, 1
	1080 Compare TEMP, 1
	1081 JumpIfNotEqual {1150}
	1082 Move X0, [X31+56]
	1083 Compare X0, 0
	1084 JumpIfEqual {1257}
	1085 Move X8, 0x2292000
	1086 Move W1, [X31+128]
	1087 Move X8, [X8+256]
	1088 Move X3, [X8]
	1089 Add X2, X31, 120
	1090 Call Dictionary`2<NetworkId, Object>.TryGetValue, X0, X1, X2
	1091 Move TEMP, X0
	1092 And TEMP, TEMP, 1
	1093 Compare TEMP, 1
	1094 JumpIfNotEqual {1150}
	1095 Move X8, [X31+120]
	1096 Compare X8, 0
	1097 JumpIfEqual {1261}
	1098 Move X8, [X8+120]
	1099 Compare X8, 0
	1100 JumpIfEqual {1260}
	1101 NotImplemented "Instruction LDRSW not yet implemented."
	1102 Move W10, [X8+24]
	1103 NotImplemented "Instruction CMP not yet implemented."
	1104 Add X8, X8, X9
	1105 Move X23, [X8+32]
	1106 Compare X23, 0
	1107 JumpIfEqual {1256}
	1108 Move X8, 0x2291000
	1109 Move X9, [X23]
	1110 Move X8, [X8+416]
	1111 Move W11, [X9+304]
	1112 Move X8, [X8]
	1113 Move W10, [X8+304]
	1114 NotImplemented "Instruction CMP not yet implemented."
	1115 Move X9, [X9+200]
	1116 Add X9, X9, X10
	1117 NotImplemented "Instruction LDUR not yet implemented."
	1118 NotImplemented "Instruction CMP not yet implemented."
	1119 Move X8, [X23+64]
	1120 Compare X8, 0
	1121 JumpIfEqual {1126}
	1122 Move X8, [X8+32]
	1123 Compare X8, 0
	1124 JumpIfEqual {1126}
	1125 Move W1, [X8]
	1126 Move X1, X31
	1127 Move X0, [X31+136]
	1128 Compare X0, 0
	1129 JumpIfEqual {1263}
	1130 Move W8, [X23+104]
	1131 NotImplemented "Instruction BFM not yet implemented."
	1132 Move X2, X31
	1133 Call GrabbableItem.set_attachedAnchorId, X0, X1
	1134 Move X8, [X31+136]
	1135 Compare X8, 0
	1136 JumpIfEqual {1262}
	1137 Move X9, [X8+64]
	1138 Compare X9, 0
	1139 JumpIfEqual {1144}
	1140 Move X9, [X9+32]
	1141 Compare X9, 0
	1142 JumpIfEqual {1144}
	1143 Move W1, [X9]
	1144 Move X1, X31
	1145 Move W8, [X8+104]
	1146 NotImplemented "Instruction BFM not yet implemented."
	1147 Move X0, X23
	1148 Move X2, X31
	1149 Call AttachedItemAnchor.set_grabbedItem, X0, X1
	1150 Move X0, X22
	1151 Move X1, X31
	1152 Call Object.get_name, X0
	1153 Move X1, X0
	1154 Move X0, [X25]
	1155 Move X2, X31
	1156 Call String.Concat, X0, X1
	1157 Move X22, X0
	1158 Move X0, [X28]
	1159 Move W8, [X0+224]
	1160 Compare W8, 0
	1161 JumpIfNotEqual {1163}
	1162 Call 0x1B6F8F8
	1163 Move X2, [X27]
	1164 Move X3, [X24]
	1165 Move W4, 386
	1166 Move X0, X22
	1167 Move X1, X31
	1168 Move X5, X31
	1169 Call Log.Debug, X0, X1, X2, X3, X4
	1170 Move X20, X31
	1171 Move W19, 19
	1172 Compare X21, 0
	1173 JumpIfEqual {1197}
	1174 Move X8, [X21]
	1175 Move X10, 0x2291000
	1176 NotImplemented "Instruction LDRH not yet implemented."
	1177 Move X10, [X10+1136]
	1178 Move X1, [X10]
	1179 Compare X9, 0
	1180 JumpIfEqual {1187}
	1181 Move X10, [X8+176]
	1182 Add X10, X10, 8
	1183 NotImplemented "Instruction LDUR not yet implemented."
	1184 NotImplemented "Instruction CMP not yet implemented."
	1185 Subtract X9, X9, 1
	1186 Add X10, X10, 16
	1187 Move X0, X21
	1188 Move W2, W31
	1189 Call 0x1BB5284
	1190 NotImplemented "Instruction LDRSW not yet implemented."
	1191 Add X8, X8, X9
	1192 Add X0, X8, 312
	1193 Move X8, [X0]
	1194 Move X1, [X0+8]
	1195 Move X0, X21
	1196 NotImplemented "Instruction BLR not yet implemented."
	1197 Compare X20, 0
	1198 JumpIfNotEqual {1272}
	1199 NotImplemented "Instruction CMP not yet implemented."
	1200 Compare W19, 0
	1201 JumpIfNotEqual {1208}
	1202 Move X8, [X31+48]
	1203 Move X0, [X8+168]
	1204 Compare X0, 0
	1205 JumpIfEqual {1258}
	1206 Move X1, X31
	1207 Call Stopwatch.Restart, X0
	1208 Move X8, [X31+24]
	1209 Move X8, [X8+40]
	1210 Move X9, [X31+232]
	1211 NotImplemented "Instruction CMP not yet implemented."
	1212 Move X20, [X31+352]
	1213 Move X19, [X31+360]
	1214 Move X22, [X31+336]
	1215 Move X21, [X31+344]
	1216 Move X24, [X31+320]
	1217 Move X23, [X31+328]
	1218 Move X26, [X31+304]
	1219 Move X25, [X31+312]
	1220 Move X28, [X31+288]
	1221 Move X27, [X31+296]
	1222 Move X29, [X31+272]
	1223 Move X30, [X31+280]
	1224 Move D9, [X31+256]
	1225 Move D8, [X31+264]
	1226 Move V10, [X31+240]
	1227 Add X31, X31, 368
	1228 Return 
	1229 Call 0x1B6FA1C
	1230 Call 0x1B6FA1C
	1231 Call 0x1B6FA1C
	1232 Call 0x1B6FA1C
	1233 Call 0x1B6FA1C
	1234 Call 0x1B6FA1C
	1235 Call 0x1B6FA24
	1236 Call 0x1B6FA1C
	1237 Call 0x1B6FA1C
	1238 Call 0x1B6FA1C
	1239 Call 0x1B6FA1C
	1240 Call 0x1B6FA1C
	1241 Call 0x1B6FA1C
	1242 Call 0x1B6FA1C
	1243 Call 0x1B6FA1C
	1244 Call 0x1B6FA1C
	1245 Call 0x1B6FA1C
	1246 Call 0x1B6FA1C
	1247 Call 0x1B6FA1C
	1248 Call 0x1B6FA1C
	1249 Call 0x1B6FA24
	1250 Call 0x1B6FA24
	1251 Call 0x1B6FA1C
	1252 Call 0x1B6FA1C
	1253 Call 0x1B6FA1C
	1254 Call 0x1B6FA1C
	1255 Call 0x1B6FA1C
	1256 Call 0x1B6FA1C
	1257 Call 0x1B6FA1C
	1258 Call 0x1B6FA1C
	1259 Call 0x1B6FA24
	1260 Call 0x1B6FA1C
	1261 Call 0x1B6FA1C
	1262 Call 0x1B6FA1C
	1263 Call 0x1B6FA1C
	1264 Call 0x1B6FA1C
	1265 Move X0, X24
	1266 Call 0x1B6FA14
	1267 Call 0x1B6FA1C
	1268 Call 0x1B6FA1C
	1269 Call 0x1B6FA1C
	1270 Call 0x1B6FA1C
	1271 Call 0x1B6FA1C
	1272 Move X0, X20
	1273 Call 0x1B6FA14
	1274 Call 0x1B6FA1C
	1275 Call 0x1B6FA1C
	1276 Call 0x1B6FA1C
	1277 Call 0x1B6FA1C
	1278 Call 0x1B6FA1C
	1279 Call 0x1B6FA1C
	1280 Call 0x1B6FA1C
	1281 Call 0x1B6FA1C
	1282 Call 0x1B6FA1C
	1283 Call 0x1B6FA1C
	1284 Call 0x1B6FA1C
	1285 Call 0x1B6FA1C
	1286 Call 0x1B6FA1C
	1287 Call 0x1B6FA1C
	1288 Call 0x1B6FA1C
	1289 Call 0x1B6FA1C
	1290 Call 0x1B6FA1C
	1291 Call 0x1B6FA1C
	1292 Call 0x1B6FA1C
	1293 Call 0x1B6FA1C
	1294 Call 0x1B6FA24
	1295 Call 0x1B6FA1C
	1296 Call 0x1B6FA1C
	1297 Call 0x1B6FA24
	1298 Call 0x1B6FA24
	1299 Call 0x1B6FA24
	1300 Call 0x1B6FA1C
	1301 Call 0x1B6FA24
	1302 Call 0x1B6FA24
	1303 Call 0x1B6FA1C
	1304 Call 0x3D1A880
	1305 Move X19, 0x2292000
	1306 Move X19, [X19+240]
	1307 Move X23, X0
	1308 NotImplemented "Instruction CMP not yet implemented."
	1309 Move X0, X23
	1310 Call 0x3D1A840
	1311 Move X24, [X0]
	1312 Call 0x3D1A850
	1313 Move W20, W31
	1314 Compare X22, 0
	1315 JumpIfNotEqual {808}
	1316 Move X24, X31
	1317 Move X23, X0
	1318 Compare X22, 0
	1319 JumpIfEqual {1343}
	1320 Move X8, [X22]
	1321 Move X10, 0x2291000
	1322 NotImplemented "Instruction LDRH not yet implemented."
	1323 Move X10, [X10+1136]
	1324 Move X1, [X10]
	1325 Compare X9, 0
	1326 JumpIfEqual {1333}
	1327 Move X10, [X8+176]
	1328 Add X10, X10, 8
	1329 NotImplemented "Instruction LDUR not yet implemented."
	1330 NotImplemented "Instruction CMP not yet implemented."
	1331 Subtract X9, X9, 1
	1332 Add X10, X10, 16
	1333 Move X0, X22
	1334 Move W2, W31
	1335 Call 0x1BB5284
	1336 NotImplemented "Instruction LDRSW not yet implemented."
	1337 Add X8, X8, X9
	1338 Add X0, X8, 312
	1339 Move X8, [X0]
	1340 Move X1, [X0+8]
	1341 Move X0, X22
	1342 NotImplemented "Instruction BLR not yet implemented."
	1343 Compare X24, 0
	1344 JumpIfEqual {1385}
	1345 Move X0, X24
	1346 Call 0x1B6FA14
	1347 Move X23, X0
	1348 NotImplemented "Instruction CMP not yet implemented."
	1349 Move X0, X23
	1350 Call 0x3D1A840
	1351 Move X20, [X0]
	1352 Call 0x3D1A850
	1353 Move W19, W31
	1354 Compare X21, 0
	1355 JumpIfNotEqual {1174}
	1356 Move X20, X31
	1357 Move X23, X0
	1358 Compare X21, 0
	1359 JumpIfEqual {1383}
	1360 Move X8, [X21]
	1361 Move X10, 0x2291000
	1362 NotImplemented "Instruction LDRH not yet implemented."
	1363 Move X10, [X10+1136]
	1364 Move X1, [X10]
	1365 Compare X9, 0
	1366 JumpIfEqual {1373}
	1367 Move X10, [X8+176]
	1368 Add X10, X10, 8
	1369 NotImplemented "Instruction LDUR not yet implemented."
	1370 NotImplemented "Instruction CMP not yet implemented."
	1371 Subtract X9, X9, 1
	1372 Add X10, X10, 16
	1373 Move X0, X21
	1374 Move W2, W31
	1375 Call 0x1BB5284
	1376 NotImplemented "Instruction LDRSW not yet implemented."
	1377 Add X8, X8, X9
	1378 Add X0, X8, 312
	1379 Move X8, [X0]
	1380 Move X1, [X0+8]
	1381 Move X0, X21
	1382 NotImplemented "Instruction BLR not yet implemented."
	1383 Compare X20, 0
	1384 JumpIfNotEqual {1387}
	1385 Move X0, X23
	1386 Call 0x1C8518C
	1387 Move X0, X20
	1388 Call 0x1B6FA14
	1389 Call 0x18F56A8

Method: System.Void DespawnPlayerNetObject(Fusion.NetworkRunner runner, Fusion.NetworkObject playerNetObj)

Disassembly:
	0x01CBCD30 CBZ X20, 0x1CBD3D0
	0x01CBCD34 ADRP X8, 0x2293000
	0x01CBCD38 LDR X2, [X31 + 0xA0]
	0x01CBCD3C LDR X8, [X8 + 0xF8]
	0x01CBCD40 LDR X3, [X8]
	0x01CBCD44 MOV X0, X20
	0x01CBCD48 BL 0x28BCAF4
	0x01CBCD4C B 0x1CBC4F4
	0x01CBCD50 MOV X24, X31
	0x01CBCD54 MOVZ W20, 0xE
	0x01CBCD58 CBZ X22, 0x1CBCDBC
	0x01CBCD5C LDR X8, [X22]
	0x01CBCD60 ADRP X10, 0x2292000
	0x01CBCD64 LDRH W9, [X8 + 0x12E]
	0x01CBCD68 LDR X10, [X10 + 0x470]
	0x01CBCD6C LDR X1, [X10]
	0x01CBCD70 CBZ X9, 0x1CBCD94
	0x01CBCD74 LDR X10, [X8 + 0xB0]
	0x01CBCD78 ADD X10, X10, 0x8
	0x01CBCD7C LDUR X11, [X10 - 0x8]
	0x01CBCD80 CMP X11, X1
	0x01CBCD84 B.EQ 0x1CBCDA4
	0x01CBCD88 SUBS X9, X9, 0x1
	0x01CBCD8C ADD X10, X10, 0x10
	0x01CBCD90 B.NE 0x1CBCD7C
	0x01CBCD94 MOV X0, X22
	0x01CBCD98 MOV W2, W31
	0x01CBCD9C BL 0x1BB4284
	0x01CBCDA0 B 0x1CBCDB0
	0x01CBCDA4 LDRSW X9, [X10]
	0x01CBCDA8 ADD X8, X8, X9, 0x4, LSL
	0x01CBCDAC ADD X0, X8, 0x138
	0x01CBCDB0 LDP X8, X1, [X0]
	0x01CBCDB4 MOV X0, X22
	0x01CBCDB8 BLR X8
	0x01CBCDBC CBNZ X24, 0x1CBD3BC
	0x01CBCDC0 CMP W20, 0xE
	0x01CBCDC4 B.EQ 0x1CBCDCC
	0x01CBCDC8 CBNZ W20, 0x1CBD2F0
	0x01CBCDCC LDR X0, [X31 + 0x20]
	0x01CBCDD0 MOV X1, X31
	0x01CBCDD4 BL 0x1D85724
	0x01CBCDD8 CBZ X0, 0x1CBD3A0
	0x01CBCDDC LDR X8, [X0]
	0x01CBCDE0 ADRP X10, 0x2293000
	0x01CBCDE4 MOV X21, X0
	0x01CBCDE8 LDRH W9, [X8 + 0x12E]
	0x01CBCDEC LDR X10, [X10 + 0x110]
	0x01CBCDF0 LDR X1, [X10]
	0x01CBCDF4 CBZ X9, 0x1CBCE18
	0x01CBCDF8 LDR X10, [X8 + 0xB0]
	0x01CBCDFC ADD X10, X10, 0x8
	0x01CBCE00 LDUR X11, [X10 - 0x8]
	0x01CBCE04 CMP X11, X1
	0x01CBCE08 B.EQ 0x1CBCE28
	0x01CBCE0C SUBS X9, X9, 0x1
	0x01CBCE10 ADD X10, X10, 0x10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x2568000
	008 Move W8, [X21+1321]
	009 Move X19, X2
	010 Move X20, X1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2294000
	016 Move X0, [X0+152]
	017 Call 0x1B6F7F0
	018 Move W8, 1
	019 Move [X21+1321], W8
	020 Compare X19, 0
	021 JumpIfEqual {68}
	022 Move X8, 0x2294000
	023 Move X8, [X8+152]
	024 Move X0, X19
	025 Move X1, [X8]
	026 Call 0x2091A90, X0
	027 Compare X0, 0
	028 JumpIfEqual {68}
	029 Move W8, [X0+24]
	030 Move X21, X0
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W23, W31
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Add X8, X21, W23
	035 Move X22, [X8+32]
	036 Move X0, X31
	037 Call NetworkBehaviourId.get_None
	038 Compare X22, 0
	039 JumpIfEqual {68}
	040 Move X1, X0
	041 Move X0, X22
	042 Move X2, X31
	043 Call GrabbableItem.set_attachedAnchorId, X0, X1
	044 Move X0, X22
	045 Move X1, X31
	046 Call Component.get_transform, X0
	047 Compare X0, 0
	048 JumpIfEqual {68}
	049 Move X1, X31
	050 Move X2, X31
	051 Call Transform.set_parent, X0, X1
	052 Move W8, [X21+24]
	053 Add W23, W23, 1
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Compare X20, 0
	056 JumpIfEqual {68}
	057 Move X0, X20
	058 Move X1, X19
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X2, X31
	064 Move X30, [X31+48]
	065 Move X23, [X31+56]
	066 Call NetworkRunner.Despawn, X0, X1
	067 Return 
	068 Call 0x1B6FA1C
	069 Call 0x1B6FA24

Method: System.Void SetupRunner()

Disassembly:
	0x01CBCE14 B.NE 0x1CBCE00
	0x01CBCE18 MOV X0, X21
	0x01CBCE1C MOV W2, W31
	0x01CBCE20 BL 0x1BB4284
	0x01CBCE24 B 0x1CBCE34
	0x01CBCE28 LDRSW X9, [X10]
	0x01CBCE2C ADD X8, X8, X9, 0x4, LSL
	0x01CBCE30 ADD X0, X8, 0x138
	0x01CBCE34 LDP X8, X1, [X0]
	0x01CBCE38 MOV X0, X21
	0x01CBCE3C BLR X8
	0x01CBCE40 MOV X21, X0
	0x01CBCE44 CBZ X0, 0x1CBD3D4
	0x01CBCE48 ADRP X20, 0x2293000
	0x01CBCE4C ADRP X26, 0x2293000
	0x01CBCE50 ADRP X25, 0x2293000
	0x01CBCE54 ADRP X28, 0x2291000
	0x01CBCE58 ADRP X27, 0x2293000
	0x01CBCE5C ADRP X24, 0x2293000
	0x01CBCE60 LDR X20, [X20 + 0x128]
	0x01CBCE64 LDR X26, [X26 + 0xE8]
	0x01CBCE68 LDR X25, [X25 + 0x168]
	0x01CBCE6C LDR X28, [X28 + 0x628]
	0x01CBCE70 LDR X27, [X27 + 0x188]
	0x01CBCE74 LDR X24, [X24 + 0x178]
	0x01CBCE78 LDR X8, [X21]
	0x01CBCE7C LDR X1, [X29]
	0x01CBCE80 LDRH W9, [X8 + 0x12E]
	0x01CBCE84 CBZ X9, 0x1CBCEA8
	0x01CBCE88 LDR X10, [X8 + 0xB0]
	0x01CBCE8C ADD X10, X10, 0x8
	0x01CBCE90 LDUR X11, [X10 - 0x8]
	0x01CBCE94 CMP X11, X1
	0x01CBCE98 B.EQ 0x1CBCEB8
	0x01CBCE9C SUBS X9, X9, 0x1
	0x01CBCEA0 ADD X10, X10, 0x10
	0x01CBCEA4 B.NE 0x1CBCE90
	0x01CBCEA8 MOV X0, X21
	0x01CBCEAC MOV W2, W31
	0x01CBCEB0 BL 0x1BB4284
	0x01CBCEB4 B 0x1CBCEC4
	0x01CBCEB8 LDRSW X9, [X10]
	0x01CBCEBC ADD X8, X8, X9, 0x4, LSL
	0x01CBCEC0 ADD X0, X8, 0x138
	0x01CBCEC4 LDP X8, X1, [X0]
	0x01CBCEC8 MOV X0, X21
	0x01CBCECC BLR X8
	0x01CBCED0 TBZ X0, 0x0, 0x1CBD260
	0x01CBCED4 LDR X8, [X21]
	0x01CBCED8 LDR X1, [X20]
	0x01CBCEDC LDRH W9, [X8 + 0x12E]
	0x01CBCEE0 CBZ X9, 0x1CBCF04
	0x01CBCEE4 LDR X10, [X8 + 0xB0]
	0x01CBCEE8 ADD X10, X10, 0x8
	0x01CBCEEC LDUR X11, [X10 - 0x8]
	0x01CBCEF0 CMP X11, X1
	0x01CBCEF4 B.EQ 0x1CBCF14
	0x01CBCEF8 SUBS X9, X9, 0x1
	0x01CBCEFC ADD X10, X10, 0x10
	0x01CBCF00 B.NE 0x1CBCEEC
	0x01CBCF04 MOV X0, X21
	0x01CBCF08 MOV W2, W31
	0x01CBCF0C BL 0x1BB4284
	0x01CBCF10 B 0x1CBCF20
	0x01CBCF14 LDRSW X9, [X10]
	0x01CBCF18 ADD X8, X8, X9, 0x4, LSL
	0x01CBCF1C ADD X0, X8, 0x138
	0x01CBCF20 LDP X8, X1, [X0]
	0x01CBCF24 MOV X0, X21
	0x01CBCF28 BLR X8
	0x01CBCF2C MOV X22, X0
	0x01CBCF30 CBZ X0, 0x1CBD350
	0x01CBCF34 MOV X0, X22
	0x01CBCF38 MOV X2, X31
	0x01CBCF3C BL 0x1D9FE38
	0x01CBCF40 LDR X23, [X19]
	0x01CBCF44 LDR X8, [X23 + 0x38]
	0x01CBCF48 CBNZ X8, 0x1CBCF54
	0x01CBCF4C MOV X0, X23
	0x01CBCF50 BL 0x1BB41DC
	0x01CBCF54 MOV X0, X22
	0x01CBCF58 MOV X1, X31
	0x01CBCF5C BL 0x3A9B0C0
	0x01CBCF60 CBZ X0, 0x1CBD354
	0x01CBCF64 LDR X8, [X23 + 0x38]
	0x01CBCF68 LDR X2, [X8 + 0x8]
	0x01CBCF6C ADD X1, X31, 0x90
	0x01CBCF70 BL 0x20D02D0
	0x01CBCF74 TBZ X0, 0x0, 0x1CBD0C4
	0x01CBCF78 MOV X0, X22
	0x01CBCF7C MOV X1, X31
	0x01CBCF80 BL 0x3A9B084
	0x01CBCF84 MOV X23, X0
	0x01CBCF88 LDR X0, [X31 + 0x90]
	0x01CBCF8C CBZ X0, 0x1CBD384
	0x01CBCF90 ADD X8, X31, 0xB0
	0x01CBCF94 MOV X1, X31
	0x01CBCF98 BL 0x1D700DC
	0x01CBCF9C CBZ X23, 0x1CBD38C
	0x01CBCFA0 LDP S0, S1, [X31 + 0xB8]
	0x01CBCFA4 LDR V2, [X31 + 0xC0]
	0x01CBCFA8 MOV X0, X23
	0x01CBCFAC MOV X1, X31
	0x01CBCFB0 BL 0x3AA76F8
	0x01CBCFB4 MOV X0, X22
	0x01CBCFB8 MOV X1, X31
	0x01CBCFBC BL 0x3A9B084
	0x01CBCFC0 MOV X23, X0
	0x01CBCFC4 LDR X0, [X31 + 0x90]
	0x01CBCFC8 CBZ X0, 0x1CBD394
	0x01CBCFCC ADD X8, X31, 0xB0
	0x01CBCFD0 MOV X1, X31
	0x01CBCFD4 BL 0x1D700DC
	0x01CBCFD8 CBZ X23, 0x1CBD388
	0x01CBCFDC LDP S0, S1, [X31 + 0xC4]
	0x01CBCFE0 LDP S2, S3, [X31 + 0xCC]
	0x01CBCFE4 MOV X0, X23
	0x01CBCFE8 MOV X1, X31
	0x01CBCFEC BL 0x3AA7878
	0x01CBCFF0 LDR X8, [X31 + 0x90]
	0x01CBCFF4 CBZ X8, 0x1CBD0C4
	0x01CBCFF8 LDR X9, [X8]
	0x01CBCFFC ADRP X8, 0x2293000
	0x01CBD000 LDR X8, [X8 + 0x138]
	0x01CBD004 LDRB W11, [X9 + 0x130]
	0x01CBD008 LDR X8, [X8]
	0x01CBD00C LDRB W10, [X8 + 0x130]
	0x01CBD010 CMP W11, W10
	0x01CBD014 B.CC 0x1CBD0C4
	0x01CBD018 LDR X9, [X9 + 0xC8]
	0x01CBD01C ADD X9, X9, X10, 0x3, LSL
	0x01CBD020 LDUR X9, [X9 - 0x8]
	0x01CBD024 CMP X9, X8
	0x01CBD028 B.NE 0x1CBD0C4
	0x01CBD02C ADRP X8, 0x2291000
	0x01CBD030 LDR X8, [X8 + 0x298]
	0x01CBD034 LDR X1, [X8]
	0x01CBD038 MOV X0, X22
	0x01CBD03C BL 0x208FDE8
	0x01CBD040 ADRP X8, 0x2290000
	0x01CBD044 LDR X8, [X8 + 0x478]
	0x01CBD048 MOV X23, X0
	0x01CBD04C LDR X0, [X8]
	0x01CBD050 LDR W8, [X0 + 0xE0]
	0x01CBD054 CBNZ W8, 0x1CBD05C
	0x01CBD058 BL 0x1B6E8F8
	0x01CBD05C MOV X0, X23
	0x01CBD060 MOV X1, X31
	0x01CBD064 MOV X2, X31
	0x01CBD068 BL 0x3A9D6EC
	0x01CBD06C TBZ X0, 0x0, 0x1CBD0C4
	0x01CBD070 LDR X0, [X31 + 0x90]
	0x01CBD074 CBZ X0, 0x1CBD3E4
	0x01CBD078 ADD X8, X31, 0xB0
	0x01CBD07C MOV X1, X31
	0x01CBD080 BL 0x1D700DC
	0x01CBD084 CBZ X23, 0x1CBD3E8
	0x01CBD088 LDP S0, S1, [X31 + 0xB8]
	0x01CBD08C LDR V2, [X31 + 0xC0]
	0x01CBD090 MOV X0, X23
	0x01CBD094 MOV X1, X31
	0x01CBD098 BL 0x3AF6C18
	0x01CBD09C LDR X0, [X31 + 0x90]
	0x01CBD0A0 CBZ X0, 0x1CBD3E0
	0x01CBD0A4 ADD X8, X31, 0xB0
	0x01CBD0A8 MOV X1, X31
	0x01CBD0AC BL 0x1D700DC
	0x01CBD0B0 LDP S0, S1, [X31 + 0xC4]
	0x01CBD0B4 LDP S2, S3, [X31 + 0xCC]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2568000
	008 Move X22, 0x2292000
	009 Move W8, [X20+1322]
	010 Move X22, [X22+1144]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x2294000
	017 Move X0, [X0+160]
	018 Call 0x1B6F7F0
	019 Move X0, 0x2294000
	020 Move X0, [X0+168]
	021 Call 0x1B6F7F0
	022 Move X0, 0x2294000
	023 Move X0, [X0+176]
	024 Call 0x1B6F7F0
	025 Move X0, 0x2292000
	026 Move X0, [X0+3960]
	027 Call 0x1B6F7F0
	028 Move X0, 0x2294000
	029 Move X0, [X0+184]
	030 Call 0x1B6F7F0
	031 Move X0, 0x2292000
	032 Move X0, [X0+1144]
	033 Call 0x1B6F7F0
	034 Move W8, 1
	035 Move [X20+1322], W8
	036 Move X0, [X22]
	037 Move X20, [X19+152]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1B6F8F8
	042 Move X23, 0x2294000
	043 Move X23, [X23+176]
	044 Move X0, X20
	045 Move X1, X31
	046 Move X2, X31
	047 Call Object.op_Inequality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {99}
	052 Move X0, [X19+152]
	053 Compare X0, 0
	054 JumpIfEqual {210}
	055 Move X1, X31
	056 Call NetworkRunner.get_IsRunning, X0
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {90}
	061 Move X0, [X23]
	062 Move X20, [X19+152]
	063 Move W1, 1
	064 Call 0x1B6F868
	065 Compare X0, 0
	066 JumpIfEqual {210}
	067 Move X8, [X0]
	068 Move X21, X0
	069 Move X0, X19
	070 Move X1, [X8+64]
	071 Call 0x1B6F8FC
	072 Compare X0, 0
	073 JumpIfEqual {211}
	074 Move W8, [X21+24]
	075 Compare W8, 0
	076 JumpIfEqual {214}
	077 Move [X21+32], X19
	078 Compare X20, 0
	079 JumpIfEqual {210}
	080 Move X0, X20
	081 Move X1, X21
	082 Move X2, X31
	083 Call NetworkRunner.RemoveCallbacks, X0, X1
	084 Move X0, [X19+152]
	085 Compare X0, 0
	086 JumpIfEqual {210}
	087 Move X1, X19
	088 Move X2, X31
	089 Call NetworkRunner.RemoveGlobal, X0, X1
	090 Move X0, [X22]
	091 Move X20, [X19+144]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1B6F8F8
	096 Move X0, X20
	097 Move X1, X31
	098 Call Object.Destroy, X0
	099 Move X0, [X22]
	100 Move X20, [X19+160]
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {105}
	104 Call 0x1B6F8F8
	105 Move X0, X20
	106 Move X1, X31
	107 Move X2, X31
	108 Call Object.op_Inequality, X0, X1
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {130}
	113 Move X8, [X19+160]
	114 Compare X8, 0
	115 JumpIfEqual {210}
	116 Move X0, [X8+72]
	117 Compare X0, 0
	118 JumpIfEqual {210}
	119 Move X1, X31
	120 Call LoadBalancingClient.get_IsConnected, X0
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfNotEqual {130}
	125 Move X0, [X19+160]
	126 Compare X0, 0
	127 JumpIfEqual {210}
	128 Move X1, X31
	129 Call VoiceFollowClient.Disconnect, X0
	130 Move X0, [X22]
	131 Move X21, 0x2294000
	132 Move X20, [X19+104]
	133 Move W8, [X0+224]
	134 Move X21, [X21+184]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1B6F8F8
	138 Move X1, [X21]
	139 Move X0, X20
	140 Call 0x2115D24, X0
	141 Move [X19+144], X0
	142 Compare X0, 0
	143 JumpIfEqual {210}
	144 Move X8, 0x2294000
	145 Move X8, [X8+168]
	146 Move X1, [X8]
	147 Call 0x20CFEF0, X0
	148 Move [X19+152], X0
	149 Compare X0, 0
	150 JumpIfEqual {210}
	151 Move W1, 1
	152 Move X2, X31
	153 Call NetworkRunner.set_ProvideInput, X0, X1
	154 Move X0, [X23]
	155 Move X20, [X19+152]
	156 Move W1, 1
	157 Call 0x1B6F868
	158 Compare X0, 0
	159 JumpIfEqual {210}
	160 Move X8, [X0]
	161 Move X21, X0
	162 Move X0, X19
	163 Move X1, [X8+64]
	164 Call 0x1B6F8FC
	165 Compare X0, 0
	166 JumpIfEqual {211}
	167 Move W8, [X21+24]
	168 Compare W8, 0
	169 JumpIfEqual {214}
	170 Move [X21+32], X19
	171 Compare X20, 0
	172 JumpIfEqual {210}
	173 Move X0, X20
	174 Move X1, X21
	175 Move X2, X31
	176 Call NetworkRunner.AddCallbacks, X0, X1
	177 Move X0, [X19+144]
	178 Compare X0, 0
	179 JumpIfEqual {210}
	180 Move X8, 0x2293000
	181 Move X8, [X8+160]
	182 Move X20, 0x2291000
	183 Move X1, [X8]
	184 Move X20, [X20+3960]
	185 Call 0x20CFEF0, X0
	186 Move [X19+160], X0
	187 Move X8, [X20]
	188 Move X8, [X8+184]
	189 Move X8, [X8+24]
	190 Compare X8, 0
	191 JumpIfEqual {203}
	192 Move X1, [X19+152]
	193 Move X3, [X8+24]
	194 Move X0, [X8+64]
	195 Move X2, [X8+40]
	196 Move X20, [X31+32]
	197 Move X19, [X31+40]
	198 Move X22, [X31+16]
	199 Move X21, [X31+24]
	200 Move X30, [X31+48]
	201 Move X23, [X31+56]
	202 CallNoReturn X3
	203 Move X20, [X31+32]
	204 Move X19, [X31+40]
	205 Move X22, [X31+16]
	206 Move X21, [X31+24]
	207 Move X30, [X31+48]
	208 Move X23, [X31+56]
	209 Return 
	210 Call 0x1B6FA1C
	211 Call 0x1B6FA40
	212 Move X1, X31
	213 Call 0x1B6F8E8
	214 Call 0x1B6FA24

Method: System.String CreateNewSessionCode()

Disassembly:
	0x01CBE7F4 STP X20, X19, [X31 + 0x10]
	0x01CBE7F8 ADRP X21, 0x2565000
	0x01CBE7FC LDRB W8, [X21 + 0x535]
	0x01CBE800 MOV X20, X2
	0x01CBE804 MOV X19, X0
	0x01CBE808 TBNZ X8, 0x0, 0x1CBE820
	0x01CBE80C ADRP X0, 0x2291000
	0x01CBE810 LDR X0, [X0 + 0xE0]
	0x01CBE814 BL 0x1B6E7F0
	0x01CBE818 MOVZ W8, 0x1
	0x01CBE81C STRB W8, [X21 + 0x535]
	0x01CBE820 CBZ X20, 0x1CBE874
	0x01CBE824 ADRP X8, 0x2291000

ISIL:
	001 Move [X31-16], X30
	002 Move W0, 0x86A0
	003 Move W1, 0x4240
	004 NotImplemented "Instruction MOVK not yet implemented."
	005 NotImplemented "Instruction MOVK not yet implemented."
	006 Move X2, X31
	007 Call Random.Range, X0, X1
	008 Move [X31+12], W0
	009 Add X0, X31, 12
	010 Move X1, X31
	011 Call Int32.ToString, X0
	012 Move X30, [X31+16]
	013 Return X0

Method: System.Void OnConnectedToServer(Fusion.NetworkRunner runner)

Disassembly:
	0x01CBE828 LDR X8, [X8 + 0xE0]
	0x01CBE82C LDR X21, [X8]
	0x01CBE830 LDR X8, [X21 + 0x38]
	0x01CBE834 CBNZ X8, 0x1CBE840
	0x01CBE838 MOV X0, X21
	0x01CBE83C BL 0x1BB41DC
	0x01CBE840 MOV X0, X20
	0x01CBE844 MOV X1, X31
	0x01CBE848 BL 0x3A9B0C0
	0x01CBE84C CBZ X0, 0x1CBE874
	0x01CBE850 LDR X8, [X21 + 0x38]
	0x01CBE854 LDR X1, [X8]
	0x01CBE858 BL 0x20CF154
	0x01CBE85C CBZ X0, 0x1CBE874
	0x01CBE860 LDR W1, [X19 + 0x10]
	0x01CBE864 LDP X20, X19, [X31 + 0x10]
	0x01CBE868 MOV X2, X31
	0x01CBE86C LDP X30, X21, [X31], #0x20
	0x01CBE870 B 0x1CB5F54
	0x01CBE874 BL 0x1B6EA1C
	0x01CBE878 STP X30, X21, [X31 - 0x20]!
	0x01CBE87C STP X20, X19, [X31 + 0x10]
	0x01CBE880 ADRP X21, 0x2565000
	0x01CBE884 LDRB W8, [X21 + 0x536]
	0x01CBE888 MOV X20, X2
	0x01CBE88C MOV X19, X0
	0x01CBE890 TBNZ X8, 0x0, 0x1CBE8A8
	0x01CBE894 ADRP X0, 0x2291000
	0x01CBE898 LDR X0, [X0 + 0xE0]
	0x01CBE89C BL 0x1B6E7F0
	0x01CBE8A0 MOVZ W8, 0x1
	0x01CBE8A4 STRB W8, [X21 + 0x536]
	0x01CBE8A8 CBZ X20, 0x1CBE8FC
	0x01CBE8AC ADRP X8, 0x2291000
	0x01CBE8B0 LDR X8, [X8 + 0xE0]
	0x01CBE8B4 LDR X21, [X8]
	0x01CBE8B8 LDR X8, [X21 + 0x38]
	0x01CBE8BC CBNZ X8, 0x1CBE8C8
	0x01CBE8C0 MOV X0, X21
	0x01CBE8C4 BL 0x1BB41DC
	0x01CBE8C8 MOV X0, X20
	0x01CBE8CC MOV X1, X31
	0x01CBE8D0 BL 0x3A9B0C0
	0x01CBE8D4 CBZ X0, 0x1CBE8FC
	0x01CBE8D8 LDR X8, [X21 + 0x38]
	0x01CBE8DC LDR X1, [X8]
	0x01CBE8E0 BL 0x20CF154
	0x01CBE8E4 CBZ X0, 0x1CBE8FC
	0x01CBE8E8 LDR W1, [X19 + 0x10]
	0x01CBE8EC LDP X20, X19, [X31 + 0x10]
	0x01CBE8F0 MOV X2, X31
	0x01CBE8F4 LDP X30, X21, [X31], #0x20
	0x01CBE8F8 B 0x1CB5F54
	0x01CBE8FC BL 0x1B6EA1C
	0x01CBE900 RET
	0x01CBE904 STR D8, [X31 - 0x30]!
	0x01CBE908 STP X30, X21, [X31 + 0x10]
	0x01CBE90C STP X20, X19, [X31 + 0x20]
	0x01CBE910 ADRP X20, 0x2565000
	0x01CBE914 LDRB W8, [X20 + 0x537]
	0x01CBE918 MOV X19, X0
	0x01CBE91C TBNZ X8, 0x0, 0x1CBE97C
	0x01CBE920 ADRP X0, 0x228F000
	0x01CBE924 LDR X0, [X0 + 0x628]
	0x01CBE928 BL 0x1B6E7F0
	0x01CBE92C ADRP X0, 0x228F000
	0x01CBE930 LDR X0, [X0 + 0xAB0]
	0x01CBE934 BL 0x1B6E7F0
	0x01CBE938 ADRP X0, 0x228F000
	0x01CBE93C LDR X0, [X0 + 0x918]
	0x01CBE940 BL 0x1B6E7F0
	0x01CBE944 ADRP X0, 0x2290000
	0x01CBE948 LDR X0, [X0 + 0x2E8]
	0x01CBE94C BL 0x1B6E7F0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2566000
	006 Move X20, 0x2290000
	007 Move W8, [X21+1323]
	008 Move X20, [X20+3960]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x2290000
	015 Move X0, [X0+1256]
	016 Call 0x1B6F7F0
	017 Move X0, 0x2290000
	018 Move X0, [X0+2472]
	019 Call 0x1B6F7F0
	020 Move X0, 0x2292000
	021 Move X0, [X0+400]
	022 Call 0x1B6F7F0
	023 Move X0, 0x2290000
	024 Move X0, [X0+3960]
	025 Call 0x1B6F7F0
	026 Move W8, 1
	027 Move [X21+1323], W8
	028 Move X8, [X20]
	029 Move X20, 0x2290000
	030 Move X8, [X8+184]
	031 Move X8, [X8+16]
	032 Move X20, [X20+2472]
	033 Compare X8, 0
	034 JumpIfEqual {40}
	035 Move X9, [X8+24]
	036 Move X0, [X8+64]
	037 Move X2, [X8+40]
	038 Move X1, X19
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X0, [X20]
	041 Move W1, 1
	042 Call 0x1B6F868
	043 Compare X19, 0
	044 JumpIfEqual {85}
	045 Move X8, [X19+392]
	046 Compare X8, 0
	047 JumpIfEqual {85}
	048 Move X9, 0x2292000
	049 Move X9, [X9+400]
	050 Move X20, X0
	051 Move X21, [X8+16]
	052 Move X0, [X9]
	053 Call 0x1B6FA0C
	054 Move X1, X31
	055 Move X19, X0
	056 Call BaseAction..ctor, X0
	057 Move [X19+24], X21
	058 Compare X20, 0
	059 JumpIfEqual {85}
	060 Move X8, [X20]
	061 Move X0, X19
	062 Move X1, [X8+64]
	063 Call 0x1B6F8FC
	064 Compare X0, 0
	065 JumpIfEqual {86}
	066 Move W8, [X20+24]
	067 Compare W8, 0
	068 JumpIfEqual {89}
	069 Move X8, 0x2290000
	070 Move X8, [X8+1256]
	071 Move [X20+32], X19
	072 Move X0, [X8]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1B6F8F8
	077 Move X0, X20
	078 Move X20, [X31+16]
	079 Move X19, [X31+24]
	080 Move X1, X31
	081 Move X30, [X31+32]
	082 Move X21, [X31+40]
	083 Call App.ExecuteAction, X0
	084 Return 
	085 Call 0x1B6FA1C
	086 Call 0x1B6FA40
	087 Move X1, X31
	088 Call 0x1B6F8E8
	089 Call 0x1B6FA24

Method: System.Void OnConnectFailed(Fusion.NetworkRunner runner, Fusion.Sockets.NetAddress remoteAddress, Fusion.Sockets.NetConnectFailedReason reason)

Disassembly:
	0x01CBE950 ADRP X0, 0x2291000
	0x01CBE954 LDR X0, [X0 + 0x240]
	0x01CBE958 BL 0x1B6E7F0
	0x01CBE95C ADRP X0, 0x2291000
	0x01CBE960 LDR X0, [X0 + 0x188]
	0x01CBE964 BL 0x1B6E7F0
	0x01CBE968 ADRP X0, 0x2291000
	0x01CBE96C LDR X0, [X0 + 0x248]
	0x01CBE970 BL 0x1B6E7F0

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {10}
	003 Move X0, X1
	004 Move W1, 1
	005 Move W2, W31
	006 Move W3, W31
	007 Move X4, X31
	008 Call NetworkRunner.Shutdown, X0, X1, X2, X3
	009 Return 
	010 Move [X31-16], X30
	011 Call 0x1B6FA1C

Method: System.Void OnConnectRequest(Fusion.NetworkRunner runner, Fusion.NetworkRunnerCallbackArgs/ConnectRequest request, System.Byte[] token)

Disassembly:
	0x01CBE974 MOVZ W8, 0x1

ISIL:
	001 Return 

Method: System.Void OnCustomAuthenticationResponse(Fusion.NetworkRunner runner, System.Collections.Generic.Dictionary`2<System.String, System.Object> data)

Disassembly:
	0x01CBE978 STRB W8, [X20 + 0x537]

ISIL:
	001 Return 

Method: System.Void OnDisconnectedFromServer(Fusion.NetworkRunner runner, Fusion.Sockets.NetDisconnectReason reason)

Disassembly:
	0x01CBE97C STR W31, [X31 + 0x8]
	0x01CBE980 LDR W8, [X19 + 0x10]
	0x01CBE984 LDR X20, [X19 + 0x20]
	0x01CBE988 CMP W8, 0x2
	0x01CBE98C B.EQ 0x1CBEA70
	0x01CBE990 CMP W8, 0x1
	0x01CBE994 B.EQ 0x1CBEA88
	0x01CBE998 MOV W0, W31
	0x01CBE99C CBNZ W8, 0x1CBEB34
	0x01CBE9A0 MOVN W8, 0x0
	0x01CBE9A4 STR W8, [X19 + 0x10]
	0x01CBE9A8 CBZ X20, 0x1CBEB44
	0x01CBE9AC LDR V0, [X20 + 0xC0]
	0x01CBE9B0 FCMP S0, 0x0
	0x01CBE9B4 B.LE 0x1CBEA94
	0x01CBE9B8 ADRP X8, 0x228F000
	0x01CBE9BC LDR X8, [X8 + 0x918]
	0x01CBE9C0 ADD X1, X31, 0xC
	0x01CBE9C4 STR S0, [X31 + 0xC]
	0x01CBE9C8 LDR X0, [X8]
	0x01CBE9CC BL 0x1B6E900
	0x01CBE9D0 ADRP X8, 0x2291000
	0x01CBE9D4 LDR X8, [X8 + 0x240]
	0x01CBE9D8 MOV X1, X0
	0x01CBE9DC MOV X2, X31
	0x01CBE9E0 LDR X8, [X8]
	0x01CBE9E4 MOV X0, X8
	0x01CBE9E8 BL 0x3087E18
	0x01CBE9EC ADRP X8, 0x228F000
	0x01CBE9F0 LDR X8, [X8 + 0x628]
	0x01CBE9F4 MOV X21, X0
	0x01CBE9F8 LDR X8, [X8]
	0x01CBE9FC LDR W9, [X8 + 0xE0]
	0x01CBEA00 CBNZ W9, 0x1CBEA0C
	0x01CBEA04 MOV X0, X8
	0x01CBEA08 BL 0x1B6E8F8
	0x01CBEA0C ADRP X8, 0x2291000
	0x01CBEA10 ADRP X9, 0x2291000
	0x01CBEA14 LDR X8, [X8 + 0x188]
	0x01CBEA18 LDR X9, [X9 + 0x248]
	0x01CBEA1C MOVZ W0, 0x1000
	0x01CBEA20 MOVZ W5, 0xC8
	0x01CBEA24 LDR X3, [X8]
	0x01CBEA28 LDR X4, [X9]
	0x01CBEA2C MOV X1, X21
	0x01CBEA30 MOV X2, X31
	0x01CBEA34 MOV X6, X31
	0x01CBEA38 BL 0x342B224
	0x01CBEA3C ADRP X8, 0x2290000
	0x01CBEA40 LDR V8, [X20 + 0xC0]
	0x01CBEA44 LDR X8, [X8 + 0x2E8]
	0x01CBEA48 LDR X0, [X8]
	0x01CBEA4C BL 0x1B6EA0C
	0x01CBEA50 MOV V0.16B, V8.16B
	0x01CBEA54 MOV X1, X31
	0x01CBEA58 MOV X20, X0
	0x01CBEA5C BL 0x3AA273C
	0x01CBEA60 MOVZ W0, 0x1
	0x01CBEA64 STR X20, [X19 + 0x18]
	0x01CBEA68 STR W0, [X19 + 0x10]
	0x01CBEA6C B 0x1CBEB34
	0x01CBEA70 MOVN W8, 0x0
	0x01CBEA74 MOV X0, X31
	0x01CBEA78 STR W8, [X19 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2566000
	006 Move W8, [X20+1324]
	007 Move X19, X1
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x2290000
	013 Move X0, [X0+1256]
	014 Call 0x1B6F7F0
	015 Move X0, 0x2290000
	016 Move X0, [X0+2472]
	017 Call 0x1B6F7F0
	018 Move X0, 0x2292000
	019 Move X0, [X0+408]
	020 Call 0x1B6F7F0
	021 Move W8, 1
	022 Move [X20+1324], W8
	023 Compare X19, 0
	024 JumpIfEqual {74}
	025 Move X20, 0x2290000
	026 Move X21, 0x2292000
	027 Move X20, [X20+2472]
	028 Move X21, [X21+408]
	029 Move W1, 1
	030 Move X0, X19
	031 Move W2, W31
	032 Move W3, W31
	033 Move X4, X31
	034 Call NetworkRunner.Shutdown, X0, X1, X2, X3
	035 Move X0, [X20]
	036 Move W1, 1
	037 Call 0x1B6F868
	038 Move X8, [X21]
	039 Move X19, X0
	040 Move X0, X8
	041 Call 0x1B6FA0C
	042 Move X1, X31
	043 Move X20, X0
	044 Call BaseAction..ctor, X0
	045 Compare X19, 0
	046 JumpIfEqual {74}
	047 Compare X20, 0
	048 JumpIfEqual {55}
	049 Move X8, [X19]
	050 Move X0, X20
	051 Move X1, [X8+64]
	052 Call 0x1B6F8FC
	053 Compare X0, 0
	054 JumpIfEqual {76}
	055 Move W8, [X19+24]
	056 Compare W8, 0
	057 JumpIfEqual {75}
	058 Move X8, 0x2290000
	059 Move X8, [X8+1256]
	060 Move [X19+32], X20
	061 Move X0, [X8]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1B6F8F8
	066 Move X0, X19
	067 Move X20, [X31+16]
	068 Move X19, [X31+24]
	069 Move X1, X31
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Call App.ExecuteAction, X0
	073 Return 
	074 Call 0x1B6FA1C
	075 Call 0x1B6FA24
	076 Call 0x1B6FA40
	077 Move X1, X31
	078 Call 0x1B6F8E8

Method: System.Void OnHostMigration(Fusion.NetworkRunner runner, Fusion.HostMigrationToken hostMigrationToken)

Disassembly:
	0x01CBEA7C BL 0x1D837C0
	0x01CBEA80 CBNZ X20, 0x1CBEB18
	0x01CBEA84 B 0x1CBEB44
	0x01CBEA88 MOVN W8, 0x0
	0x01CBEA8C STR W8, [X19 + 0x10]
	0x01CBEA90 CBZ X20, 0x1CBEB44
	0x01CBEA94 ADD X0, X20, 0xB8
	0x01CBEA98 MOV X1, X31
	0x01CBEA9C BL 0x1D837C8
	0x01CBEAA0 TBZ X0, 0x0, 0x1CBEB1C
	0x01CBEAA4 ADRP X21, 0x228F000
	0x01CBEAA8 LDR X21, [X21 + 0xAB0]
	0x01CBEAAC LDR X0, [X21]
	0x01CBEAB0 LDR W8, [X0 + 0xE0]
	0x01CBEAB4 CBNZ W8, 0x1CBEABC
	0x01CBEAB8 BL 0x1B6E8F8
	0x01CBEABC MOVZ W0, 0x4
	0x01CBEAC0 MOV X1, X31
	0x01CBEAC4 BL 0x3AAF038
	0x01CBEAC8 STR W0, [X31 + 0x8]
	0x01CBEACC ADD X0, X31, 0x8
	0x01CBEAD0 MOV X1, X31
	0x01CBEAD4 BL 0x3AAE4A4
	0x01CBEAD8 TBZ X0, 0x0, 0x1CBEB10
	0x01CBEADC LDR X0, [X21]
	0x01CBEAE0 LDR W20, [X31 + 0x8]
	0x01CBEAE4 LDR W8, [X0 + 0xE0]
	0x01CBEAE8 CBNZ W8, 0x1CBEAF0
	0x01CBEAEC BL 0x1B6E8F8
	0x01CBEAF0 MOV X0, X20
	0x01CBEAF4 MOV X1, X31
	0x01CBEAF8 BL 0x3AAFD4C
	0x01CBEAFC MOVZ W8, 0x2
	0x01CBEB00 STR X0, [X19 + 0x18]
	0x01CBEB04 STR W8, [X19 + 0x10]
	0x01CBEB08 MOVZ W0, 0x1
	0x01CBEB0C B 0x1CBEB34
	0x01CBEB10 MOV X0, X31
	0x01CBEB14 BL 0x1D837C0
	0x01CBEB18 STR W0, [X20 + 0xB8]
	0x01CBEB1C LDR X2, [X19 + 0x30]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+112], X30
	003 Move [X31+120], X23
	004 Move [X31+128], X22
	005 Move [X31+136], X21
	006 Move [X31+144], X20
	007 Move [X31+152], X19
	008 Move X23, 0x2566000
	009 Move X22, 0x2292000
	010 Move W8, [X23+1325]
	011 Move X22, [X22+416]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x2292000
	020 Move X0, [X0+416]
	021 Call 0x1B6F7F0
	022 Move W8, 1
	023 Move [X23+1325], W8
	024 NotImplemented "Instruction MOVI not yet implemented."
	025 Add X8, X31, 0
	026 Move X0, X31
	027 Move [X31+96], X31
	028 Move [X31+64], V0
	029 Move [X31+72], V0
	030 Move [X31+32], V0
	031 Move [X31+40], V0
	032 Call AsyncVoidMethodBuilder.Create
	033 Move V0, [X31]
	034 Move V1, [X31+16]
	035 Move X2, [X22]
	036 Add X8, X31, 32
	037 Move TEMP, 0
	038 Not TEMP
	039 Move W9, TEMP
	040 Or X0, X8, 15
	041 Add X1, X31, 32
	042 Move [X31+72], X20
	043 Move [X31+80], X21
	044 Move [X31+88], X19
	045 Move [X31+40], V0
	046 Move [X31+56], V1
	047 Move [X31+32], W9
	048 Call AsyncVoidMethodBuilder.Start, X0, X1
	049 Move X20, [X31+144]
	050 Move X19, [X31+152]
	051 Move X22, [X31+128]
	052 Move X21, [X31+136]
	053 Move X30, [X31+112]
	054 Move X23, [X31+120]
	055 Add X31, X31, 160
	056 Return 

Method: System.Void OnInput(Fusion.NetworkRunner runner, Fusion.NetworkInput input)

Disassembly:
	0x01CBEB20 LDR W1, [X19 + 0x28]
	0x01CBEB24 MOV X0, X20
	0x01CBEB28 MOV X3, X31
	0x01CBEB2C BL 0x1CBC158
	0x01CBEB30 MOV W0, W31
	0x01CBEB34 LDP X20, X19, [X31 + 0x20]
	0x01CBEB38 LDP X30, X21, [X31 + 0x10]
	0x01CBEB3C LDR V8, [X31], #0x30
	0x01CBEB40 RET
	0x01CBEB44 BL 0x1B6EA1C
	0x01CBEB48 LDR X0, [X0 + 0x18]
	0x01CBEB4C RET
	0x01CBEB50 STP X30, X19, [X31 - 0x10]!
	0x01CBEB54 ADRP X0, 0x228F000
	0x01CBEB58 LDR X0, [X0 + 0x990]
	0x01CBEB5C BL 0x1B6E804
	0x01CBEB60 BL 0x1B6EA0C
	0x01CBEB64 MOV X1, X31
	0x01CBEB68 MOV X19, X0
	0x01CBEB6C BL 0x31E99B4
	0x01CBEB70 ADRP X0, 0x2291000
	0x01CBEB74 LDR X0, [X0 + 0x250]
	0x01CBEB78 BL 0x1B6E804
	0x01CBEB7C MOV X1, X0
	0x01CBEB80 MOV X0, X19
	0x01CBEB84 BL 0x1B6E8E8
	0x01CBEB88 LDR X0, [X0 + 0x18]
	0x01CBEB8C RET
	0x01CBEB90 STR X30, [X31 - 0x20]!
	0x01CBEB94 STP X20, X19, [X31 + 0x10]
	0x01CBEB98 ADRP X20, 0x2565000
	0x01CBEB9C LDRB W8, [X20 + 0x538]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2566000
	007 Move X22, 0x2290000
	008 Move W8, [X21+1326]
	009 Move X22, [X22+3960]
	010 Move X19, X3
	011 Move X20, X2
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2290000
	017 Move X0, [X0+3960]
	018 Call 0x1B6F7F0
	019 Move W8, 1
	020 Move [X21+1326], W8
	021 Move X8, [X22]
	022 Move X8, [X8+184]
	023 Move X8, [X8+32]
	024 Compare X8, 0
	025 JumpIfEqual {37}
	026 Move X4, [X8+24]
	027 Move X0, [X8+64]
	028 Move X3, [X8+40]
	029 Move X1, X20
	030 Move X2, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X30, [X31+48]
	036 CallNoReturn X4
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Return 

Method: System.Void OnInputMissing(Fusion.NetworkRunner runner, Fusion.PlayerRef player, Fusion.NetworkInput input)

Disassembly:
	0x01CBEBA0 MOV X19, X0

ISIL:
	001 Return 

Method: System.Void OnObjectEnterAOI(Fusion.NetworkRunner runner, Fusion.NetworkObject obj, Fusion.PlayerRef player)

Disassembly:
	0x01CBEBA4 TBNZ X8, 0x0, 0x1CBEBD4

ISIL:
	001 Return 

Method: System.Void OnObjectExitAOI(Fusion.NetworkRunner runner, Fusion.NetworkObject obj, Fusion.PlayerRef player)

Disassembly:
	0x01CBEBA8 ADRP X0, 0x2291000

ISIL:
	001 Return 

Method: System.Void OnPlayerJoined(Fusion.NetworkRunner runner, Fusion.PlayerRef player)

Disassembly:
	0x01CBEBAC LDR X0, [X0 + 0x258]
	0x01CBEBB0 BL 0x1B6E7F0
	0x01CBEBB4 ADRP X0, 0x228F000
	0x01CBEBB8 LDR X0, [X0 + 0x8B8]
	0x01CBEBBC BL 0x1B6E7F0
	0x01CBEBC0 ADRP X0, 0x2291000
	0x01CBEBC4 LDR X0, [X0 + 0x260]
	0x01CBEBC8 BL 0x1B6E7F0
	0x01CBEBCC MOVZ W8, 0x1
	0x01CBEBD0 STRB W8, [X20 + 0x538]
	0x01CBEBD4 STR X31, [X31 + 0x8]
	0x01CBEBD8 LDR W8, [X19]
	0x01CBEBDC LDR X20, [X19 + 0x30]
	0x01CBEBE0 CBZ W8, 0x1CBEC78
	0x01CBEBE4 ADRP X8, 0x228F000
	0x01CBEBE8 LDR X8, [X8 + 0x8B8]
	0x01CBEBEC LDR X0, [X8]
	0x01CBEBF0 LDR W8, [X0 + 0xE0]
	0x01CBEBF4 CBNZ W8, 0x1CBEBFC
	0x01CBEBF8 BL 0x1B6E8F8
	0x01CBEBFC ADRP X8, 0x2291000
	0x01CBEC00 LDR X8, [X8 + 0x260]
	0x01CBEC04 LDR X0, [X8]
	0x01CBEC08 MOV X1, X31
	0x01CBEC0C BL 0x3A6EC3C
	0x01CBEC10 LDR X0, [X19 + 0x28]
	0x01CBEC14 CBZ X0, 0x1CBECE8
	0x01CBEC18 MOVZ W1, 0x1
	0x01CBEC1C MOVZ W2, 0x11
	0x01CBEC20 MOV W3, W31
	0x01CBEC24 MOV X4, X31
	0x01CBEC28 BL 0x1D87A24
	0x01CBEC2C CBZ X0, 0x1CBECEC
	0x01CBEC30 MOV X1, X31
	0x01CBEC34 BL 0x3256D00
	0x01CBEC38 STR X0, [X31 + 0x8]
	0x01CBEC3C ADD X0, X31, 0x8
	0x01CBEC40 MOV X1, X31
	0x01CBEC44 BL 0x312C868
	0x01CBEC48 TBNZ X0, 0x0, 0x1CBEC8C
	0x01CBEC4C STR W31, [X19]
	0x01CBEC50 LDR X8, [X31 + 0x8]
	0x01CBEC54 ADD X0, X19, 0x8
	0x01CBEC58 STR X8, [X19 + 0x40]
	0x01CBEC5C ADRP X8, 0x2291000
	0x01CBEC60 LDR X8, [X8 + 0x258]
	0x01CBEC64 LDR X3, [X8]
	0x01CBEC68 ADD X1, X31, 0x8
	0x01CBEC6C MOV X2, X19
	0x01CBEC70 BL 0x2087D3C
	0x01CBEC74 B 0x1CBECD8
	0x01CBEC78 LDR X8, [X19 + 0x40]
	0x01CBEC7C MOVN W9, 0x0
	0x01CBEC80 STR X8, [X31 + 0x8]
	0x01CBEC84 STR X31, [X19 + 0x40]
	0x01CBEC88 STR W9, [X19]
	0x01CBEC8C ADD X0, X31, 0x8
	0x01CBEC90 MOV X1, X31
	0x01CBEC94 BL 0x312C934
	0x01CBEC98 CBZ X20, 0x1CBECE4
	0x01CBEC9C MOV X0, X20
	0x01CBECA0 BL 0x1CBBE14
	0x01CBECA4 LDR X2, [X19 + 0x38]
	0x01CBECA8 MOVZ W1, 0x6
	0x01CBECAC MOV X0, X20
	0x01CBECB0 BL 0x1CBC0B8
	0x01CBECB4 MOV X1, X0
	0x01CBECB8 MOV X0, X20
	0x01CBECBC MOV X2, X31
	0x01CBECC0 BL 0x3A9E9B0
	0x01CBECC4 MOVN W8, 0x1
	0x01CBECC8 STR W8, [X19], #0x8
	0x01CBECCC MOV X0, X19
	0x01CBECD0 MOV X1, X31
	0x01CBECD4 BL 0x312CFEC
	0x01CBECD8 LDP X20, X19, [X31 + 0x10]
	0x01CBECDC LDR X30, [X31], #0x20
	0x01CBECE0 RET
	0x01CBECE4 BL 0x1B6EA1C
	0x01CBECE8 BL 0x1B6EA1C
	0x01CBECEC BL 0x1B6EA1C
	0x01CBECF0 B 0x1CBED10
	0x01CBECF4 B 0x1CBED10
	0x01CBECF8 B 0x1CBED10
	0x01CBECFC B 0x1CBED10
	0x01CBED00 B 0x1CBED10
	0x01CBED04 B 0x1CBED10
	0x01CBED08 B 0x1CBED10
	0x01CBED0C B 0x1CBED10
	0x01CBED10 MOV X20, X0
	0x01CBED14 CMP W1, 0x1
	0x01CBED18 B.NE 0x1CBED90
	0x01CBED1C MOV X0, X20
	0x01CBED20 BL 0x3D19840
	0x01CBED24 MOV X20, X0
	0x01CBED28 ADRP X0, 0x228F000
	0x01CBED2C LDR X0, [X0 + 0x670]
	0x01CBED30 BL 0x1B6E804
	0x01CBED34 LDR X8, [X20]
	0x01CBED38 LDR X1, [X8]
	0x01CBED3C BL 0x1B6ED6C
	0x01CBED40 TBZ X0, 0x0, 0x1CBED68
	0x01CBED44 LDR X20, [X20]
	0x01CBED48 BL 0x3D19850
	0x01CBED4C MOVN W8, 0x1
	0x01CBED50 STR W8, [X19], #0x8
	0x01CBED54 MOV X0, X19
	0x01CBED58 MOV X1, X20
	0x01CBED5C MOV X2, X31
	0x01CBED60 BL 0x312D150
	0x01CBED64 B 0x1CBECD8
	0x01CBED68 MOVZ W0, 0x8
	0x01CBED6C BL 0x3D19860
	0x01CBED70 LDR X8, [X20]
	0x01CBED74 STR X8, [X0]
	0x01CBED78 ADRP X1, 0x205E000
	0x01CBED7C ADD X1, X1, 0xBD8
	0x01CBED80 MOV X2, X31
	0x01CBED84 BL 0x3D19870
	0x01CBED88 MOV X20, X0
	0x01CBED8C BL 0x3D19850
	0x01CBED90 MOV X0, X20
	0x01CBED94 BL 0x1C8418C
	0x01CBED98 BL 0x18F46A8
	0x01CBED9C ADD X0, X0, 0x8
	0x01CBEDA0 MOV X2, X31
	0x01CBEDA4 B 0x312CF28
	0x01CBEDA8 STP X29, X30, [X31 - 0x60]!
	0x01CBEDAC STP X28, X27, [X31 + 0x10]
	0x01CBEDB0 STP X26, X25, [X31 + 0x20]
	0x01CBEDB4 STP X24, X23, [X31 + 0x30]
	0x01CBEDB8 STP X22, X21, [X31 + 0x40]
	0x01CBEDBC STP X20, X19, [X31 + 0x50]
	0x01CBEDC0 SUB X31, X31, 0x400
	0x01CBEDC4 MRS X28, 0xC000
	0x01CBEDC8 LDR X8, [X28 + 0x28]
	0x01CBEDCC ADRP X20, 0x2565000
	0x01CBEDD0 MOV X19, X0
	0x01CBEDD4 STR X8, [X31 + 0x3F8]
	0x01CBEDD8 LDRB W8, [X20 + 0x539]
	0x01CBEDDC TBNZ X8, 0x0, 0x1CBEF08
	0x01CBEDE0 ADRP X0, 0x2290000
	0x01CBEDE4 LDR X0, [X0 + 0x168]
	0x01CBEDE8 BL 0x1B6E7F0
	0x01CBEDEC ADRP X0, 0x228F000
	0x01CBEDF0 LDR X0, [X0 + 0x4E8]
	0x01CBEDF4 BL 0x1B6E7F0
	0x01CBEDF8 ADRP X0, 0x228F000
	0x01CBEDFC LDR X0, [X0 + 0x800]
	0x01CBEE00 BL 0x1B6E7F0
	0x01CBEE04 ADRP X0, 0x2291000
	0x01CBEE08 LDR X0, [X0 + 0x268]
	0x01CBEE0C BL 0x1B6E7F0
	0x01CBEE10 ADRP X0, 0x2291000
	0x01CBEE14 LDR X0, [X0 + 0x270]
	0x01CBEE18 BL 0x1B6E7F0
	0x01CBEE1C ADRP X0, 0x2291000
	0x01CBEE20 LDR X0, [X0 + 0x278]
	0x01CBEE24 BL 0x1B6E7F0
	0x01CBEE28 ADRP X0, 0x228F000
	0x01CBEE2C LDR X0, [X0 + 0xF18]
	0x01CBEE30 BL 0x1B6E7F0
	0x01CBEE34 ADRP X0, 0x228F000
	0x01CBEE38 LDR X0, [X0 + 0x5F8]
	0x01CBEE3C BL 0x1B6E7F0
	0x01CBEE40 ADRP X0, 0x2291000
	0x01CBEE44 LDR X0, [X0 + 0x280]
	0x01CBEE48 BL 0x1B6E7F0
	0x01CBEE4C ADRP X0, 0x2291000
	0x01CBEE50 LDR X0, [X0 + 0x288]
	0x01CBEE54 BL 0x1B6E7F0
	0x01CBEE58 ADRP X0, 0x228F000
	0x01CBEE5C LDR X0, [X0 + 0xF78]
	0x01CBEE60 BL 0x1B6E7F0
	0x01CBEE64 ADRP X0, 0x228F000
	0x01CBEE68 LDR X0, [X0 + 0xDB0]
	0x01CBEE6C BL 0x1B6E7F0
	0x01CBEE70 ADRP X0, 0x2291000
	0x01CBEE74 LDR X0, [X0 + 0x290]
	0x01CBEE78 BL 0x1B6E7F0
	0x01CBEE7C ADRP X0, 0x2290000
	0x01CBEE80 LDR X0, [X0 + 0x520]
	0x01CBEE84 BL 0x1B6E7F0
	0x01CBEE88 ADRP X0, 0x2291000
	0x01CBEE8C LDR X0, [X0 + 0x298]
	0x01CBEE90 BL 0x1B6E7F0
	0x01CBEE94 ADRP X0, 0x228F000
	0x01CBEE98 LDR X0, [X0 + 0x478]
	0x01CBEE9C BL 0x1B6E7F0
	0x01CBEEA0 ADRP X0, 0x2291000
	0x01CBEEA4 LDR X0, [X0 + 0x2A0]
	0x01CBEEA8 BL 0x1B6E7F0
	0x01CBEEAC ADRP X0, 0x2291000
	0x01CBEEB0 LDR X0, [X0 + 0x2A8]
	0x01CBEEB4 BL 0x1B6E7F0
	0x01CBEEB8 ADRP X0, 0x2291000
	0x01CBEEBC LDR X0, [X0 + 0x2B0]
	0x01CBEEC0 BL 0x1B6E7F0
	0x01CBEEC4 ADRP X0, 0x228F000
	0x01CBEEC8 LDR X0, [X0 + 0xBD8]
	0x01CBEECC BL 0x1B6E7F0
	0x01CBEED0 ADRP X0, 0x2291000
	0x01CBEED4 LDR X0, [X0 + 0x2B8]
	0x01CBEED8 BL 0x1B6E7F0
	0x01CBEEDC ADRP X0, 0x228F000
	0x01CBEEE0 LDR X0, [X0 + 0xCE8]
	0x01CBEEE4 BL 0x1B6E7F0
	0x01CBEEE8 ADRP X0, 0x2291000
	0x01CBEEEC LDR X0, [X0 + 0x2C0]
	0x01CBEEF0 BL 0x1B6E7F0
	0x01CBEEF4 ADRP X0, 0x2291000
	0x01CBEEF8 LDR X0, [X0 + 0x2C8]
	0x01CBEEFC BL 0x1B6E7F0
	0x01CBEF00 MOVZ W8, 0x1
	0x01CBEF04 STRB W8, [X20 + 0x539]
	0x01CBEF08 MOVI V0.2D, 0x0
	0x01CBEF0C STR W31, [X31 + 0x3F0]
	0x01CBEF10 STP X31, X31, [X31 + 0xF8]
	0x01CBEF14 STR X31, [X31 + 0x3B0]
	0x01CBEF18 STP X31, X31, [X31 + 0xE8]
	0x01CBEF1C STR X31, [X31 + 0x360]
	0x01CBEF20 STP X31, X31, [X31 + 0xD8]
	0x01CBEF24 STP X31, X31, [X31 + 0xC8]
	0x01CBEF28 STRH W31, [X31 + 0x328]
	0x01CBEF2C STR X31, [X31 + 0x320]
	0x01CBEF30 STP X31, X31, [X31 + 0xB8]
	0x01CBEF34 STP V0, V0, [X31 + 0x3D0]
	0x01CBEF38 STR V0, [X31 + 0x3C]
	0x01CBEF3C STP V0, V0, [X31 + 0x370]
	0x01CBEF40 STP V0, V0, [X31 + 0x390]
	0x01CBEF44 STP V0, V0, [X31 + 0x330]
	0x01CBEF48 STR V0, [X31 + 0x35]
	0x01CBEF4C STR X31, [X31 + 0xB0]
	0x01CBEF50 LDR W8, [X19]
	0x01CBEF54 LDR X20, [X19 + 0x30]
	0x01CBEF58 CBZ W8, 0x1CBF070
	0x01CBEF5C MOVZ W0, 0x4
	0x01CBEF60 MOV X1, X31
	0x01CBEF64 STR X28, [X31 + 0x38]
	0x01CBEF68 BL 0x1D839A4
	0x01CBEF6C MOV X8, X19
	0x01CBEF70 MOVI V0.2D, 0x0
	0x01CBEF74 STR W0, [X8 + 0x48]!
	0x01CBEF78 STR W31, [X31 + 0x3F0]
	0x01CBEF7C STP V0, V0, [X31 + 0x3D0]
	0x01CBEF80 STR V0, [X31 + 0x3C]
	0x01CBEF84 MOV X0, X8
	0x01CBEF88 MOV X1, X31
	0x01CBEF8C BL 0x1D837C8
	0x01CBEF90 TBZ X0, 0x0, 0x1CBEFB0
	0x01CBEF94 LDR W1, [X19 + 0x48]
	0x01CBEF98 ADD X0, X31, 0x3C0
	0x01CBEF9C MOVZ W2, 0x1
	0x01CBEFA0 MOV W3, W31
	0x01CBEFA4 MOV W4, W31
	0x01CBEFA8 MOV X5, X31
	0x01CBEFAC BL 0x1DB4954
	0x01CBEFB0 LDR X8, [X19 + 0x28]
	0x01CBEFB4 CBNZ X8, 0x1CBEFD4
	0x01CBEFB8 CBZ X20, 0x1CBF5BC
	0x01CBEFBC LDR X0, [X20 + 0x50]
	0x01CBEFC0 MOV X1, X31
	0x01CBEFC4 BL 0x30905F0
	0x01CBEFC8 TBNZ X0, 0x0, 0x1CBEFD4
	0x01CBEFCC LDR X8, [X20 + 0x50]
	0x01CBEFD0 STR X8, [X19 + 0x28]
	0x01CBEFD4 ADRP X8, 0x228F000
	0x01CBEFD8 LDR X8, [X8 + 0x800]
	0x01CBEFDC LDR X0, [X8]
	0x01CBEFE0 ADRP X8, 0x2291000
	0x01CBEFE4 LDR X8, [X8 + 0x2B8]
	0x01CBEFE8 LDR W9, [X0 + 0xE0]
	0x01CBEFEC LDR X27, [X8]
	0x01CBEFF0 CBNZ W9, 0x1CBEFF8
	0x01CBEFF4 BL 0x1B6E8F8
	0x01CBEFF8 MOV X0, X31
	0x01CBEFFC BL 0x3A6BF90
	0x01CBF000 ADRP X29, 0x228E000
	0x01CBF004 LDR X29, [X29 + 0xF78]
	0x01CBF008 TBNZ X0, 0x0, 0x1CBF058
	0x01CBF00C ADRP X21, 0x2564000
	0x01CBF010 LDRB W8, [X21 + 0x5C0]
	0x01CBF014 CBNZ W8, 0x1CBF02C
	0x01CBF018 ADRP X0, 0x228E000
	0x01CBF01C LDR X0, [X0 + 0xF78]
	0x01CBF020 BL 0x1B6E7F0
	0x01CBF024 MOVZ W8, 0x1
	0x01CBF028 STRB W8, [X21 + 0x5C0]
	0x01CBF02C LDR X8, [X29]
	0x01CBF030 LDR X8, [X8 + 0xB8]
	0x01CBF034 LDRB W8, [X8 + 0x48]
	0x01CBF038 CBNZ W8, 0x1CBF058
	0x01CBF03C ADRP X8, 0x228E000
	0x01CBF040 LDR X8, [X8 + 0xBD8]
	0x01CBF044 LDR X0, [X8]
	0x01CBF048 MOV X1, X27
	0x01CBF04C MOV X2, X31
	0x01CBF050 BL 0x3084780
	0x01CBF054 MOV X27, X0
	0x01CBF058 LDR X0, [X19 + 0x28]
	0x01CBF05C MOV X1, X31
	0x01CBF060 BL 0x30905F0
	0x01CBF064 TBZ X0, 0x0, 0x1CBF088
	0x01CBF068 MOV X25, X31
	0x01CBF06C B 0x1CBF08C
	0x01CBF070 LDR X8, [X19 + 0x50]
	0x01CBF074 MOVN W9, 0x0
	0x01CBF078 STR X8, [X31 + 0x100]
	0x01CBF07C STR X31, [X19 + 0x50]
	0x01CBF080 STR W9, [X19]
	0x01CBF084 B 0x1CBF4AC
	0x01CBF088 LDR X25, [X19 + 0x28]
	0x01CBF08C CBZ X20, 0x1CBF5A0
	0x01CBF090 LDRB W8, [X20 + 0x49]
	0x01CBF094 CBZ W8, 0x1CBF0A0
	0x01CBF098 MOV W24, W31
	0x01CBF09C B 0x1CBF0B0
	0x01CBF0A0 LDR X0, [X19 + 0x28]
	0x01CBF0A4 MOV X1, X31
	0x01CBF0A8 BL 0x30905F0
	0x01CBF0AC AND W24, W0, 0x1
	0x01CBF0B0 ADRP X8, 0x2290000
	0x01CBF0B4 LDR X8, [X8 + 0x270]
	0x01CBF0B8 CMP W24, 0x0
	0x01CBF0BC MOVZ W9, 0xC
	0x01CBF0C0 LDR X0, [X8]
	0x01CBF0C4 MOVZ W8, 0x14
	0x01CBF0C8 CSEL W21, W9, W8, NE
	0x01CBF0CC BL 0x1B6EA0C
	0x01CBF0D0 MOV X22, X0
	0x01CBF0D4 MOV X1, X31
	0x01CBF0D8 BL 0x1D4790C
	0x01CBF0DC CBZ X22, 0x1CBF5A4
	0x01CBF0E0 MOV X0, X22
	0x01CBF0E4 MOV W1, W31
	0x01CBF0E8 MOV X2, X31
	0x01CBF0EC BL 0x1D478C4
	0x01CBF0F0 ADRP X8, 0x228E000
	0x01CBF0F4 LDR X8, [X8 + 0x4E8]
	0x01CBF0F8 LDR X0, [X8]
	0x01CBF0FC LDR W8, [X0 + 0xE0]
	0x01CBF100 CBNZ W8, 0x1CBF108
	0x01CBF104 BL 0x1B6E8F8
	0x01CBF108 MOV X0, X31
	0x01CBF10C BL 0x1C89768
	0x01CBF110 MOV X23, X0
	0x01CBF114 CBZ X0, 0x1CBF5A8
	0x01CBF118 ADRP X10, 0x228E000
	0x01CBF11C LDR X8, [X23]
	0x01CBF120 LDR X10, [X10 + 0xF18]
	0x01CBF124 LDRH W9, [X8 + 0x12E]
	0x01CBF128 LDR X1, [X10]
	0x01CBF12C CBZ X9, 0x1CBF150
	0x01CBF130 LDR X10, [X8 + 0xB0]
	0x01CBF134 ADD X10, X10, 0x8
	0x01CBF138 LDUR X11, [X10 - 0x8]
	0x01CBF13C CMP X11, X1
	0x01CBF140 B.EQ 0x1CBF160
	0x01CBF144 SUBS X9, X9, 0x1
	0x01CBF148 ADD X10, X10, 0x10
	0x01CBF14C B.NE 0x1CBF138
	0x01CBF150 MOV X0, X23
	0x01CBF154 MOV W2, W31
	0x01CBF158 BL 0x1BB4284
	0x01CBF15C B 0x1CBF16C
	0x01CBF160 LDRSW X9, [X10]
	0x01CBF164 ADD X8, X8, X9, 0x4, LSL
	0x01CBF168 ADD X0, X8, 0x138
	0x01CBF16C LDP X8, X1, [X0]
	0x01CBF170 MOV X0, X23
	0x01CBF174 BLR X8
	0x01CBF178 ADRP X9, 0x2290000
	0x01CBF17C LDR X8, [X22]
	0x01CBF180 LDR X9, [X9 + 0x2C0]
	0x01CBF184 MOV X2, X0
	0x01CBF188 LDR X1, [X9]
	0x01CBF18C LDP X9, X3, [X8 + 0x1A8]
	0x01CBF190 MOV X0, X22
	0x01CBF194 BLR X9
	0x01CBF198 MOVI V0.2D, 0x0
	0x01CBF19C LDR X23, [X20 + 0x98]
	0x01CBF1A0 STR X31, [X31 + 0x3B0]
	0x01CBF1A4 STP X31, X31, [X31 + 0xF0]
	0x01CBF1A8 STP X31, X31, [X31 + 0xE0]
	0x01CBF1AC STP X31, X31, [X31 + 0xD0]
	0x01CBF1B0 STR X31, [X31 + 0x320]
	0x01CBF1B4 STRH W31, [X31 + 0x328]
	0x01CBF1B8 STP X31, X31, [X31 + 0xC0]
	0x01CBF1BC STP X31, X31, [X31 + 0xB0]
	0x01CBF1C0 STP V0, V0, [X31 + 0x390]
	0x01CBF1C4 STP V0, V0, [X31 + 0x370]
	0x01CBF1C8 LDR W8, [X19 + 0x38]
	0x01CBF1CC STP V0, V0, [X31 + 0x2F0]
	0x01CBF1D0 STR V0, [X31 + 0x2E]
	0x01CBF1D4 LDP V1, V2, [X31 + 0x3C0]
	0x01CBF1D8 STR W8, [X31 + 0x34]
	0x01CBF1DC ADRP X8, 0x2290000
	0x01CBF1E0 LDR X8, [X8 + 0x298]
	0x01CBF1E4 LDR V0, [X31 + 0x3E]
	0x01CBF1E8 LDR W9, [X31 + 0x3F0]
	0x01CBF1EC STP V1, V2, [X31 + 0x290]
	0x01CBF1F0 LDR X2, [X8]
	0x01CBF1F4 STR X31, [X31 + 0x310]
	0x01CBF1F8 STR V0, [X31 + 0x2B]
	0x01CBF1FC STR W9, [X31 + 0x2C0]
	0x01CBF200 ADD X0, X31, 0x2E0
	0x01CBF204 ADD X1, X31, 0x290
	0x01CBF208 BL 0x22D74FC
	0x01CBF20C STR X25, [X31 + 0x28]
	0x01CBF210 ADRP X8, 0x228F000
	0x01CBF214 LDR X8, [X8 + 0x168]
	0x01CBF218 LDP V0, V1, [X31 + 0x2E0]
	0x01CBF21C LDR V2, [X31 + 0x30]
	0x01CBF220 LDR X9, [X31 + 0x310]
	0x01CBF224 LDR X0, [X8]
	0x01CBF228 STP V0, V1, [X31 + 0x330]
	0x01CBF22C STR V2, [X31 + 0x35]
	0x01CBF230 STR X9, [X31 + 0x360]

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+144], D14
	003 Move [X31+152], D13
	004 Move [X31+160], D12
	005 Move [X31+168], D11
	006 Move [X31+176], D10
	007 Move [X31+184], D9
	008 Move [X31+192], D8
	009 Move [X31+200], X29
	010 Move [X31+208], X30
	011 Move [X31+216], X25
	012 Move [X31+224], X24
	013 Move [X31+232], X23
	014 Move [X31+240], X22
	015 Move [X31+248], X21
	016 Move [X31+256], X20
	017 Move [X31+264], X19
	018 Move X21, 0x2566000
	019 Move W8, [X21+1327]
	020 Move X22, X2
	021 Move X19, X1
	022 Move X20, X0
	023 Move [X31+136], W22
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {75}
	028 Move X0, 0x2292000
	029 Move X0, [X0+104]
	030 Call 0x1B6F7F0
	031 Move X0, 0x2292000
	032 Move X0, [X0+264]
	033 Call 0x1B6F7F0
	034 Move X0, 0x2292000
	035 Move X0, [X0+424]
	036 Call 0x1B6F7F0
	037 Move X0, 0x2292000
	038 Move X0, [X0+432]
	039 Call 0x1B6F7F0
	040 Move X0, 0x2292000
	041 Move X0, [X0+440]
	042 Call 0x1B6F7F0
	043 Move X0, 0x2290000
	044 Move X0, [X0+3960]
	045 Call 0x1B6F7F0
	046 Move X0, 0x2291000
	047 Move X0, [X0+584]
	048 Call 0x1B6F7F0
	049 Move X0, 0x2292000
	050 Move X0, [X0+328]
	051 Call 0x1B6F7F0
	052 Move X0, 0x2291000
	053 Move X0, [X0+592]
	054 Call 0x1B6F7F0
	055 Move X0, 0x2291000
	056 Move X0, [X0+2952]
	057 Call 0x1B6F7F0
	058 Move X0, 0x2291000
	059 Move X0, [X0+1192]
	060 Call 0x1B6F7F0
	061 Move X0, 0x2292000
	062 Move X0, [X0+448]
	063 Call 0x1B6F7F0
	064 Move X0, 0x2292000
	065 Move X0, [X0+456]
	066 Call 0x1B6F7F0
	067 Move X0, 0x2292000
	068 Move X0, [X0+464]
	069 Call 0x1B6F7F0
	070 Move X0, 0x2292000
	071 Move X0, [X0+472]
	072 Call 0x1B6F7F0
	073 Move W8, 1
	074 Move [X21+1327], W8
	075 Move [X31+128], X31
	076 Move [X31+124], W31
	077 Compare X19, 0
	078 JumpIfEqual {442}
	079 Move W8, [X19+384]
	080 Move X25, 0x2291000
	081 Move X25, [X25+1192]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X0, [X20+56]
	084 Compare X0, 0
	085 JumpIfEqual {442}
	086 Move X1, X31
	087 Call NetworkRunner.get_LocalPlayer, X0
	088 Move X8, [X25]
	089 Move X21, X0
	090 Move W9, [X8+224]
	091 Compare W9, 0
	092 JumpIfNotEqual {95}
	093 Move X0, X8
	094 Call 0x1B6F8F8
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X8, 0x2292000
	097 Move X8, [X8+456]
	098 Move X0, [X8]
	099 Call 0x1B6FA0C
	100 Move X1, X31
	101 Move X21, X0
	102 Call Object..ctor, X0
	103 And X2, X22, 0
	104 Move X1, X19
	105 Call NetworkManager.GetPlayerToken, X0, X1, X2
	106 Compare X21, 0
	107 JumpIfEqual {442}
	108 Move [X21+16], W0
	109 Move X0, [X20+112]
	110 Compare X0, 0
	111 JumpIfEqual {442}
	112 Move X1, X31
	113 Call Transform.get_position, X0
	114 Move X0, [X20+112]
	115 Compare X0, 0
	116 JumpIfEqual {442}
	117 Move X1, X31
	118 Move V8, V0
	119 Move V9, V1
	120 Move V10, V2
	121 Call Transform.get_rotation, X0
	122 Move X8, 0x2291000
	123 Move X22, [X20+88]
	124 Move X23, [X20+96]
	125 Move X8, [X8+584]
	126 Move V11, V0
	127 Move V12, V1
	128 Move V13, V2
	129 Move X1, [X8]
	130 Add X0, X31, 104
	131 Move V0, V8
	132 Move V1, V9
	133 Move V2, V10
	134 Move V14, V3
	135 Move [X31+104], X31
	136 Move [X31+112], X31
	137 Call Nullable`1<Vector3>..ctor, X0, X1
	138 Move X8, 0x2291000
	139 Move X8, [X8+592]
	140 Add X0, X31, 80
	141 Move V0, V11
	142 Move V1, V12
	143 Move X1, [X8]
	144 Move V2, V13
	145 Move V3, V14
	146 Move [X31+80], X31
	147 Move [X31+88], X31
	148 Move [X31+96], W31
	149 Call Nullable`1<Quaternion>..ctor, X0, X1
	150 Move X8, 0x2292000
	151 Move W1, [X31+136]
	152 Move X8, [X8+328]
	153 Add X0, X31, 72
	154 Move [X31+72], X31
	155 Move X2, [X8]
	156 Call Nullable`1<PlayerRef>..ctor, X0, X1
	157 Move X8, 0x2291000
	158 Move X8, [X8+2952]
	159 Move X0, [X8]
	160 Call 0x1B6FA0C
	161 Move X8, 0x2292000
	162 Move X8, [X8+448]
	163 Move X1, X21
	164 Move X3, X31
	165 Move X24, X0
	166 Move X2, [X8]
	167 Call OnBeforeSpawned..ctor, X0, X1, X2
	168 Move X3, [X31+104]
	169 Move X4, [X31+112]
	170 Move V0, [X31+5]
	171 Move W8, [X31+96]
	172 Move X6, [X31+72]
	173 Add X5, X31, 48
	174 Move [X31+3], V0
	175 Move [X31+64], W8
	176 Move [X31+8], X31
	177 Move X0, X19
	178 Move X1, X31
	179 Call NetworkRunner.get_IsServer, X0
	180 Move TEMP, X0
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfNotEqual {367}
	184 Move X8, 0x2292000
	185 Move X8, [X8+472]
	186 Move X0, [X8]
	187 Call 0x1B6FA0C
	188 Move X1, X31
	189 Move X21, X0
	190 Call Object..ctor, X0
	191 And X2, X22, 0
	192 Move X1, X19
	193 Call NetworkManager.GetPlayerToken, X0, X1, X2
	194 Compare X21, 0
	195 JumpIfEqual {442}
	196 Move [X21+16], W0
	197 Move W1, W0
	198 Move X0, [X20+128]
	199 Compare X0, 0
	200 JumpIfEqual {442}
	201 Move X8, 0x2292000
	202 Move X8, [X8+104]
	203 Add X2, X31, 128
	204 Move X3, [X8]
	205 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	206 Move TEMP, X0
	207 And TEMP, TEMP, 1
	208 Compare TEMP, 1
	209 JumpIfNotEqual {269}
	210 Move X0, [X31+128]
	211 Compare X0, 0
	212 JumpIfEqual {442}
	213 Move W1, [X31+136]
	214 Move X2, X31
	215 Call NetworkObject.AssignInputAuthority, X0, X1
	216 Move W1, [X31+136]
	217 Move X2, [X31+128]
	218 Move X0, X19
	219 Move X3, X31
	220 Call NetworkRunner.SetPlayerObject, X0, X1, X2
	221 Move X0, [X20+120]
	222 Compare X0, 0
	223 JumpIfEqual {442}
	224 Move X8, 0x2292000
	225 Move X2, [X31+128]
	226 Move W1, [X31+136]
	227 Move X8, [X8+424]
	228 Move X3, [X8]
	229 Call Dictionary`2<PlayerRef, Object>.set_Item, X0, X1, X2
	230 Move X22, [X20+136]
	231 Move [X31+124], W31
	232 Add X1, X31, 124
	233 Move X0, X22
	234 Move X2, X31
	235 Call Monitor.Enter, X0, X1
	236 Move X0, [X20+136]
	237 Compare X0, 0
	238 JumpIfEqual {445}
	239 Move X8, 0x2292000
	240 Move W1, [X21+16]
	241 Move X8, [X8+432]
	242 Move X2, [X8]
	243 Call List`1<Int32>.Contains, X0, X1
	244 Move TEMP, X0
	245 And TEMP, TEMP, 1
	246 Compare TEMP, 1
	247 JumpIfNotEqual {256}
	248 Move X0, [X20+136]
	249 Compare X0, 0
	250 JumpIfEqual {446}
	251 Move X8, 0x2292000
	252 Move W1, [X21+16]
	253 Move X8, [X8+440]
	254 Move X2, [X8]
	255 Call List`1<Int32>.Remove, X0, X1
	256 Move X23, X31
	257 Move W24, 3
	258 Move W8, [X31+124]
	259 Compare W8, 0
	260 JumpIfEqual {264}
	261 Move X0, X22
	262 Move X1, X31
	263 Call Monitor.Exit, X0
	264 Compare X23, 0
	265 JumpIfNotEqual {443}
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Compare W24, 0
	268 JumpIfNotEqual {424}
	269 Move X0, [X20+112]
	270 Compare X0, 0
	271 JumpIfEqual {442}
	272 Move X1, X31
	273 Call Transform.get_position, X0
	274 Move X0, [X20+112]
	275 Compare X0, 0
	276 JumpIfEqual {442}
	277 Move X1, X31
	278 Move V8, V0
	279 Move V9, V1
	280 Move V10, V2
	281 Call Transform.get_rotation, X0
	282 Move X8, 0x2291000
	283 Move X22, [X20+88]
	284 Move X23, [X20+96]
	285 Move X8, [X8+584]
	286 Move V11, V0
	287 Move V12, V1
	288 Move V13, V2
	289 Move X1, [X8]
	290 Add X0, X31, 104
	291 Move V0, V8
	292 Move V1, V9
	293 Move V2, V10
	294 Move V14, V3
	295 Move [X31+104], X31
	296 Move [X31+112], X31
	297 Call Nullable`1<Vector3>..ctor, X0, X1
	298 Move X8, 0x2291000
	299 Move X8, [X8+592]
	300 Add X0, X31, 80
	301 Move V0, V11
	302 Move V1, V12
	303 Move X1, [X8]
	304 Move V2, V13
	305 Move V3, V14
	306 Move [X31+80], X31
	307 Move [X31+88], X31
	308 Move [X31+96], W31
	309 Call Nullable`1<Quaternion>..ctor, X0, X1
	310 Move X8, 0x2292000
	311 Move W1, [X31+136]
	312 Move X8, [X8+328]
	313 Add X0, X31, 72
	314 Move [X31+72], X31
	315 Move X2, [X8]
	316 Call Nullable`1<PlayerRef>..ctor, X0, X1
	317 Move X8, 0x2290000
	318 Move X8, [X8+2952]
	319 Move X0, [X8]
	320 Call 0x1B6FA0C
	321 Move X8, 0x2291000
	322 Move X8, [X8+464]
	323 Move X1, X21
	324 Move X3, X31
	325 Move X24, X0
	326 Move X2, [X8]
	327 Call OnBeforeSpawned..ctor, X0, X1, X2
	328 Move V0, [X31+5]
	329 Move W8, [X31+96]
	330 Move X3, [X31+104]
	331 Move X4, [X31+112]
	332 Move X6, [X31+72]
	333 Move [X31+1], V0
	334 Move [X31+32], W8
	335 Move [X31+8], X31
	336 Add X5, X31, 16
	337 Move X0, X19
	338 Move X1, X22
	339 Move X2, X23
	340 Move X7, X24
	341 NotImplemented "Instruction STRH not yet implemented."
	342 Call NetworkRunner.Spawn, X0, X1, X2, X3, X4, X5, X6
	343 Move W1, [X31+136]
	344 Move X22, X0
	345 Move X0, X19
	346 Move X2, X22
	347 Move X3, X31
	348 Call NetworkRunner.SetPlayerObject, X0, X1, X2
	349 Move X0, [X20+120]
	350 Compare X0, 0
	351 JumpIfEqual {442}
	352 Move X8, 0x2291000
	353 Move W1, [X31+136]
	354 Move X8, [X8+424]
	355 Move X2, X22
	356 Move X3, [X8]
	357 Call Dictionary`2<PlayerRef, Object>.set_Item, X0, X1, X2
	358 Move X0, [X20+128]
	359 Compare X0, 0
	360 JumpIfEqual {442}
	361 Move X8, 0x2291000
	362 Move W1, [X21+16]
	363 Move X8, [X8+264]
	364 Move X2, X22
	365 Move X3, [X8]
	366 Call Dictionary`2<Int32, Object>.set_Item, X0, X1, X2
	367 Move X0, [X20+56]
	368 Compare X0, 0
	369 JumpIfEqual {442}
	370 Move W22, [X31+136]
	371 Move X1, X31
	372 Call NetworkRunner.get_LocalPlayer, X0
	373 Move X8, [X25]
	374 Move X21, X0
	375 Move W9, [X8+224]
	376 Compare W9, 0
	377 JumpIfNotEqual {380}
	378 Move X0, X8
	379 Call 0x1B6F8F8
	380 NotImplemented "Instruction CMP not yet implemented."
	381 Move W8, [X31+136]
	382 Move X0, [X20+160]
	383 Move [X20+188], W8
	384 Compare X0, 0
	385 JumpIfEqual {442}
	386 Move X1, X31
	387 Call VoiceFollowClient.ConnectAndJoinRoom, X0
	388 Move W8, [X19+384]
	389 NotImplemented "Instruction CMP not yet implemented."
	390 Move X0, [X25]
	391 Move W8, [X0+224]
	392 Compare W8, 0
	393 JumpIfNotEqual {395}
	394 Call 0x1B6F8F8
	395 Add X0, X31, 136
	396 Move X1, X31
	397 Call PlayerRef.get_PlayerId, X0
	398 NotImplemented "Instruction CMP not yet implemented."
	399 Move X0, X19
	400 Move X1, X31
	401 Call NetworkRunner.get_IsSharedModeMasterClient, X0
	402 Move TEMP, X0
	403 And TEMP, TEMP, 1
	404 Compare TEMP, 1
	405 JumpIfNotEqual {412}
	406 Move X0, [X19+392]
	407 Compare X0, 0
	408 JumpIfEqual {442}
	409 Move W1, W31
	410 Move X2, X31
	411 Call SessionInfo.set_IsVisible, X0, X1
	412 Move X8, 0x228F000
	413 Move X8, [X8+3960]
	414 Move X8, [X8]
	415 Move X8, [X8+184]
	416 Move X8, [X8+40]
	417 Compare X8, 0
	418 JumpIfEqual {424}
	419 Move W1, [X31+136]
	420 Move X9, [X8+24]
	421 Move X0, [X8+64]
	422 Move X2, [X8+40]
	423 NotImplemented "Instruction BLR not yet implemented."
	424 Move X20, [X31+256]
	425 Move X19, [X31+264]
	426 Move X22, [X31+240]
	427 Move X21, [X31+248]
	428 Move X24, [X31+224]
	429 Move X23, [X31+232]
	430 Move X30, [X31+208]
	431 Move X25, [X31+216]
	432 Move X29, [X31+200]
	433 Move D9, [X31+184]
	434 Move D8, [X31+192]
	435 Move D11, [X31+168]
	436 Move D10, [X31+176]
	437 Move D13, [X31+152]
	438 Move D12, [X31+160]
	439 Move V14, [X31+144]
	440 Add X31, X31, 272
	441 Return 
	442 Call 0x1B6FA1C
	443 Move X0, X23
	444 Call 0x1B6FA14
	445 Call 0x1B6FA1C
	446 Call 0x1B6FA1C
	447 Move X24, X0
	448 NotImplemented "Instruction CMP not yet implemented."
	449 Move X0, X24
	450 Call 0x3D1A840
	451 Move X23, [X0]
	452 Call 0x3D1A850
	453 Move W24, W31
	454 Move X23, X31
	455 Move X24, X0
	456 Move W8, [X31+124]
	457 Compare W8, 0
	458 JumpIfEqual {462}
	459 Move X0, X22
	460 Move X1, X31
	461 Call Monitor.Exit, X0
	462 Compare X23, 0
	463 JumpIfNotEqual {466}
	464 Move X0, X24
	465 Call 0x1C8518C
	466 Move X0, X23
	467 Call 0x1B6FA14
	468 Call 0x18F56A8

Method: System.Void OnPlayerLeft(Fusion.NetworkRunner runner, Fusion.PlayerRef player)

Disassembly:
	0x01CBF328 MOV X25, X23
	0x01CBF32C STRH W31, [X31 + 0x9C]
	0x01CBF330 LDR X2, [X8]
	0x01CBF334 ADD X0, X31, 0x9C
	0x01CBF338 MOVZ W1, 0x1
	0x01CBF33C BL 0x22D07CC
	0x01CBF340 LDRH W28, [X31 + 0x9C]
	0x01CBF344 ADD X0, X31, 0x290
	0x01CBF348 ADD X1, X31, 0x370
	0x01CBF34C MOVZ W2, 0x48
	0x01CBF350 ADD X23, X31, 0xE8
	0x01CBF354 BL 0x3D198D0
	0x01CBF358 LDR V0, [X23]
	0x01CBF35C LDR V3, [X31 + 0x35]
	0x01CBF360 LDR X8, [X31 + 0xF8]
	0x01CBF364 LDR X9, [X31 + 0x360]
	0x01CBF368 STR V0, [X31 + 0x8]
	0x01CBF36C STR V3, [X31 + 0x27]
	0x01CBF370 LDR V3, [X31 + 0xD]
	0x01CBF374 LDR V0, [X31 + 0xC]
	0x01CBF378 LDP V1, V2, [X31 + 0x330]
	0x01CBF37C LDR X10, [X31 + 0xE0]
	0x01CBF380 STR X8, [X31 + 0x90]
	0x01CBF384 LDR X8, [X31 + 0x320]
	0x01CBF388 STR X9, [X31 + 0x280]
	0x01CBF38C LDRH W9, [X31 + 0x328]
	0x01CBF390 STP V0, V3, [X31 + 0x50]
	0x01CBF394 LDR V0, [X31 + 0xB]
	0x01CBF398 STP V1, V2, [X31 + 0x250]
	0x01CBF39C STR X10, [X31 + 0x70]
	0x01CBF3A0 STRH W9, [X31 + 0x248]
	0x01CBF3A4 STR X8, [X31 + 0x240]
	0x01CBF3A8 STR V0, [X31 + 0x4]
	0x01CBF3AC CBZ X25, 0x1CBF5AC
	0x01CBF3B0 LDR W8, [X31 + 0x34]
	0x01CBF3B4 ADD X1, X31, 0x290
	0x01CBF3B8 MOVZ W2, 0x48
	0x01CBF3BC STR W31, [X31 + 0x10C]
	0x01CBF3C0 STR W8, [X31 + 0x108]
	0x01CBF3C4 LDR X8, [X31 + 0x28]
	0x01CBF3C8 STP X8, X24, [X31 + 0x110]
	0x01CBF3CC ADD X24, X31, 0x108
	0x01CBF3D0 ADD X0, X24, 0x18
	0x01CBF3D4 BL 0x3D198D0
	0x01CBF3D8 LDR V0, [X31 + 0x8]
	0x01CBF3DC LDR X9, [X31 + 0x18]
	0x01CBF3E0 LDR X8, [X31 + 0x90]
	0x01CBF3E4 LDP V1, V2, [X31 + 0x250]
	0x01CBF3E8 LDR X12, [X31 + 0x70]
	0x01CBF3EC STR X9, [X31 + 0x168]
	0x01CBF3F0 STUR V0, [X23 + 0x88]
	0x01CBF3F4 LDR V0, [X31 + 0x27]
	0x01CBF3F8 LDR X9, [X31 + 0x280]
	0x01CBF3FC STP X8, X26, [X31 + 0x180]
	0x01CBF400 LDR X10, [X31 + 0x240]
	0x01CBF404 STUR V0, [X23 + 0xC8]
	0x01CBF408 LDR V0, [X31 + 0x6]
	0x01CBF40C STR X9, [X31 + 0x1C0]
	0x01CBF410 LDRH W9, [X31 + 0x248]
	0x01CBF414 LDR X8, [X31 + 0x20]
	0x01CBF418 STR V0, [X23 + 0xE]
	0x01CBF41C LDR V0, [X31 + 0x5]
	0x01CBF420 ADD X11, X24, 0x108
	0x01CBF424 STUR V1, [X23 + 0xA8]
	0x01CBF428 STUR V2, [X23 + 0xB8]
	0x01CBF42C STP X12, X8, [X31 + 0x1D8]
	0x01CBF430 STR X10, [X31 + 0x1E8]
	0x01CBF434 STRH W9, [X31 + 0x1F0]
	0x01CBF438 STRH W29, [X31 + 0x1F2]
	0x01CBF43C STRH W28, [X31 + 0x1F4]
	0x01CBF440 STRH W31, [X31 + 0x1F6]
	0x01CBF444 STP X21, X31, [X31 + 0x1F8]
	0x01CBF448 STR X22, [X31 + 0x208]
	0x01CBF44C STR V0, [X11]
	0x01CBF450 LDR V0, [X31 + 0x4]
	0x01CBF454 LDR X9, [X31 + 0x10]
	0x01CBF458 ADD X8, X24, 0x128
	0x01CBF45C STR X27, [X31 + 0x220]
	0x01CBF460 STR X9, [X31 + 0x228]
	0x01CBF464 STR V0, [X8]
	0x01CBF468 ADD X1, X31, 0x108
	0x01CBF46C MOV X0, X25
	0x01CBF470 MOV X2, X31
	0x01CBF474 BL 0x1D9B7C0
	0x01CBF478 LDR X28, [X31 + 0x38]
	0x01CBF47C CBZ X0, 0x1CBF5B0
	0x01CBF480 ADRP X8, 0x2290000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2565000
	007 Move W8, [X22+1328]
	008 Move X19, X2
	009 Move X21, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x2290000
	016 Move X0, [X0+688]
	017 Call 0x1B6F7F0
	018 Move X0, 0x2291000
	019 Move X0, [X0+480]
	020 Call 0x1B6F7F0
	021 Move X0, 0x2291000
	022 Move X0, [X0+96]
	023 Call 0x1B6F7F0
	024 Move X0, 0x2291000
	025 Move X0, [X0+488]
	026 Call 0x1B6F7F0
	027 Move X0, 0x228F000
	028 Move X0, [X0+3960]
	029 Call 0x1B6F7F0
	030 Move W8, 1
	031 Move [X22+1328], W8
	032 Move [X31+8], X31
	033 Move X0, [X20+152]
	034 Compare X0, 0
	035 JumpIfEqual {109}
	036 Move X1, X31
	037 Call NetworkRunner.get_IsServer, X0
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {91}
	042 Move X0, [X20+120]
	043 Compare X0, 0
	044 JumpIfEqual {109}
	045 Move X8, 0x2291000
	046 Move X8, [X8+488]
	047 And X1, X19, 0
	048 Add X2, X31, 8
	049 Move X3, [X8]
	050 Call Dictionary`2<PlayerRef, Object>.TryGetValue, X0, X1, X2
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {70}
	055 Move X0, [X31+8]
	056 Compare X0, 0
	057 JumpIfEqual {109}
	058 Move X8, 0x2290000
	059 Move X8, [X8+688]
	060 Move X1, [X8]
	061 Call 0x2090DE8, X0
	062 Compare X0, 0
	063 JumpIfEqual {109}
	064 Move X1, X31
	065 Call NetPlayer.get_Token, X0
	066 Move X2, [X31+8]
	067 Move X1, X21
	068 Move W22, W0
	069 Call NetworkManager.DespawnPlayerNetObject, X0, X1, X2
	070 Move W22, W31
	071 Move X0, [X20+128]
	072 Compare X0, 0
	073 JumpIfEqual {109}
	074 Move X8, 0x2291000
	075 Move X8, [X8+480]
	076 Move W1, W22
	077 Move X2, [X8]
	078 Call Dictionary`2<Int32, Object>.ContainsKey, X0, X1
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {91}
	083 Move X0, [X20+128]
	084 Compare X0, 0
	085 JumpIfEqual {109}
	086 Move X8, 0x2291000
	087 Move X8, [X8+96]
	088 Move W1, W22
	089 Move X2, [X8]
	090 Call Dictionary`2<Int32, Object>.Remove, X0, X1
	091 Move X8, 0x228F000
	092 Move X8, [X8+3960]
	093 Move X8, [X8]
	094 Move X8, [X8+184]
	095 Move X8, [X8+48]
	096 Compare X8, 0
	097 JumpIfEqual {103}
	098 Move X9, [X8+24]
	099 Move X0, [X8+64]
	100 Move X2, [X8+40]
	101 And X1, X19, 0
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move X20, [X31+32]
	104 Move X19, [X31+40]
	105 Move X22, [X31+16]
	106 Move X21, [X31+24]
	107 Move X30, [X31+48]
	108 Return 
	109 Call 0x1B6FA1C

Method: System.Void OnReliableDataProgress(Fusion.NetworkRunner runner, Fusion.PlayerRef player, Fusion.Sockets.ReliableKey key, System.Single progress)

Disassembly:
	0x01CBF484 LDR X8, [X8 + 0x2B0]

ISIL:
	001 Return 

Method: System.Void OnReliableDataReceived(Fusion.NetworkRunner runner, Fusion.PlayerRef player, Fusion.Sockets.ReliableKey key, System.ArraySegment`1<System.Byte> data)

Disassembly:
	0x01CBF488 LDR X1, [X8]

ISIL:
	001 Return 

Method: System.Void OnSceneLoadDone(Fusion.NetworkRunner runner)

Disassembly:
	0x01CBF48C BL 0x24F9364

ISIL:
	001 Return 

Method: System.Void OnSceneLoadStart(Fusion.NetworkRunner runner)

Disassembly:
	0x01CBF490 ADRP X8, 0x2290000

ISIL:
	001 Return 

Method: System.Void OnSessionListUpdated(Fusion.NetworkRunner runner, System.Collections.Generic.List`1<Fusion.SessionInfo> sessionList)

Disassembly:
	0x01CBF494 LDR X8, [X8 + 0x2A8]

ISIL:
	001 Return 

Method: System.Void OnShutdown(Fusion.NetworkRunner runner, Fusion.ShutdownReason shutdownReason)

Disassembly:
	0x01CBF498 STR X0, [X31 + 0x100]
	0x01CBF49C LDR X1, [X8]
	0x01CBF4A0 ADD X0, X31, 0x100
	0x01CBF4A4 BL 0x24D89E0
	0x01CBF4A8 TBZ X0, 0x0, 0x1CBF540
	0x01CBF4AC ADRP X8, 0x2290000
	0x01CBF4B0 LDR X8, [X8 + 0x2A0]
	0x01CBF4B4 ADD X0, X31, 0x100
	0x01CBF4B8 LDR X1, [X8]
	0x01CBF4BC BL 0x24D8A24
	0x01CBF4C0 CBZ X20, 0x1CBF598
	0x01CBF4C4 ADRP X8, 0x228E000
	0x01CBF4C8 LDR X8, [X8 + 0x478]
	0x01CBF4CC LDR X21, [X20 + 0x98]
	0x01CBF4D0 LDR X0, [X8]
	0x01CBF4D4 LDR W8, [X0 + 0xE0]
	0x01CBF4D8 CBNZ W8, 0x1CBF4E0
	0x01CBF4DC BL 0x1B6E8F8
	0x01CBF4E0 MOV X0, X21
	0x01CBF4E4 MOV X1, X31
	0x01CBF4E8 MOV X2, X31
	0x01CBF4EC BL 0x3A9D6EC
	0x01CBF4F0 TBZ X0, 0x0, 0x1CBF528
	0x01CBF4F4 LDR X0, [X20 + 0x98]
	0x01CBF4F8 CBZ X0, 0x1CBF5B4
	0x01CBF4FC MOV X1, X31
	0x01CBF500 BL 0x1D872D4
	0x01CBF504 TBZ X0, 0x0, 0x1CBF528
	0x01CBF508 LDR X0, [X20 + 0x98]
	0x01CBF50C STR W31, [X20 + 0xC0]
	0x01CBF510 CBZ X0, 0x1CBF5C0
	0x01CBF514 MOV X1, X20
	0x01CBF518 MOV X2, X31
	0x01CBF51C BL 0x1D8C934

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2565000
	006 Move W8, [X21+1329]
	007 Move W19, W2
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2291000
	014 Move X0, [X0+496]
	015 Call 0x1B6F7F0
	016 Move W8, 1
	017 Move [X21+1329], W8
	018 NotImplemented "Instruction CMP not yet implemented."
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, 0x2291000
	021 Move X8, [X8+496]
	022 Move X21, [X20+80]
	023 Move X0, [X8]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1B6F8F8
	028 Move X0, X21
	029 Move X1, X31
	030 Call Ext.IsNullOrEmpty, X0
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Move [X20+80], X31
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X0, X20
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 NotImplemented "Instruction CSET not yet implemented."
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]

Method: System.Void HandleShutdown(System.Boolean restart)

Disassembly:
	0x01CBF520 LDR W8, [X19 + 0x48]
	0x01CBF524 STR W8, [X20 + 0xB8]
	0x01CBF528 MOVN W8, 0x1
	0x01CBF52C STR W8, [X19], #0x8
	0x01CBF530 MOV X0, X19
	0x01CBF534 MOV X1, X31
	0x01CBF538 BL 0x312CFEC
	0x01CBF53C B 0x1CBF568
	0x01CBF540 STR W31, [X19]
	0x01CBF544 LDR X8, [X31 + 0x100]
	0x01CBF548 ADD X0, X19, 0x8
	0x01CBF54C STR X8, [X19 + 0x50]
	0x01CBF550 ADRP X8, 0x2290000
	0x01CBF554 LDR X8, [X8 + 0x268]
	0x01CBF558 LDR X3, [X8]
	0x01CBF55C ADD X1, X31, 0x100
	0x01CBF560 MOV X2, X19
	0x01CBF564 BL 0x20871D0
	0x01CBF568 LDR X8, [X28 + 0x28]
	0x01CBF56C LDR X9, [X31 + 0x3F8]
	0x01CBF570 CMP X8, X9
	0x01CBF574 B.NE 0x1CBF5C4
	0x01CBF578 ADD X31, X31, 0x400
	0x01CBF57C LDP X20, X19, [X31 + 0x50]
	0x01CBF580 LDP X22, X21, [X31 + 0x40]
	0x01CBF584 LDP X24, X23, [X31 + 0x30]
	0x01CBF588 LDP X26, X25, [X31 + 0x20]
	0x01CBF58C LDP X28, X27, [X31 + 0x10]
	0x01CBF590 LDP X29, X30, [X31], #0x60
	0x01CBF594 RET
	0x01CBF598 STR X28, [X31 + 0x38]
	0x01CBF59C BL 0x1B6EA1C
	0x01CBF5A0 BL 0x1B6EA1C
	0x01CBF5A4 BL 0x1B6EA1C
	0x01CBF5A8 BL 0x1B6EA1C
	0x01CBF5AC BL 0x1B6EA1C
	0x01CBF5B0 BL 0x1B6EA1C
	0x01CBF5B4 STR X28, [X31 + 0x38]
	0x01CBF5B8 BL 0x1B6EA1C
	0x01CBF5BC BL 0x1B6EA1C
	0x01CBF5C0 BL 0x1B6EA1C
	0x01CBF5C4 BL 0x3D19880
	0x01CBF5C8 B 0x1CBF65C
	0x01CBF5CC B 0x1CBF65C
	0x01CBF5D0 B 0x1CBF65C
	0x01CBF5D4 B 0x1CBF65C
	0x01CBF5D8 B 0x1CBF65C
	0x01CBF5DC B 0x1CBF65C
	0x01CBF5E0 B 0x1CBF65C
	0x01CBF5E4 B 0x1CBF63C
	0x01CBF5E8 B 0x1CBF65C
	0x01CBF5EC B 0x1CBF65C
	0x01CBF5F0 B 0x1CBF63C
	0x01CBF5F4 B 0x1CBF63C
	0x01CBF5F8 B 0x1CBF65C
	0x01CBF5FC B 0x1CBF65C
	0x01CBF600 B 0x1CBF65C
	0x01CBF604 B 0x1CBF65C
	0x01CBF608 B 0x1CBF65C
	0x01CBF60C B 0x1CBF65C
	0x01CBF610 B 0x1CBF65C
	0x01CBF614 B 0x1CBF65C
	0x01CBF618 B 0x1CBF65C
	0x01CBF61C B 0x1CBF65C
	0x01CBF620 B 0x1CBF65C
	0x01CBF624 B 0x1CBF65C
	0x01CBF628 B 0x1CBF65C
	0x01CBF62C B 0x1CBF65C
	0x01CBF630 B 0x1CBF65C
	0x01CBF634 B 0x1CBF63C
	0x01CBF638 B 0x1CBF65C
	0x01CBF63C STR X28, [X31 + 0x38]
	0x01CBF640 B 0x1CBF65C
	0x01CBF644 B 0x1CBF65C
	0x01CBF648 B 0x1CBF65C
	0x01CBF64C B 0x1CBF65C
	0x01CBF650 B 0x1CBF65C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2565000
	007 Move X21, 0x228F000
	008 Move W8, [X22+1330]
	009 Move X21, [X21+1144]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x228F000
	017 Move X0, [X0+2048]
	018 Call 0x1B6F7F0
	019 Move X0, 0x2291000
	020 Move X0, [X0+504]
	021 Call 0x1B6F7F0
	022 Move X0, 0x2291000
	023 Move X0, [X0+512]
	024 Call 0x1B6F7F0
	025 Move X0, 0x228F000
	026 Move X0, [X0+1144]
	027 Call 0x1B6F7F0
	028 Move W8, 1
	029 Move [X22+1330], W8
	030 Move X0, [X21]
	031 Move X21, [X19+160]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1B6F8F8
	036 Move X0, X21
	037 Move X1, X31
	038 Move X2, X31
	039 Call Object.op_Inequality, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {61}
	044 Move X8, [X19+160]
	045 Compare X8, 0
	046 JumpIfEqual {106}
	047 Move X0, [X8+72]
	048 Compare X0, 0
	049 JumpIfEqual {106}
	050 Move X1, X31
	051 Call LoadBalancingClient.get_IsConnected, X0
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {61}
	056 Move X0, [X19+160]
	057 Compare X0, 0
	058 JumpIfEqual {106}
	059 Move X1, X31
	060 Call VoiceFollowClient.Disconnect, X0
	061 Move X0, [X19+120]
	062 Compare X0, 0
	063 JumpIfEqual {106}
	064 Move X8, 0x2291000
	065 Move X8, [X8+504]
	066 Move X1, [X8]
	067 Call Dictionary`2<PlayerRef, Object>.Clear, X0
	068 Move X0, [X19+128]
	069 Compare X0, 0
	070 JumpIfEqual {106}
	071 Move X8, 0x2291000
	072 Move X8, [X8+512]
	073 Move X21, 0x228F000
	074 Move X1, [X8]
	075 Move X21, [X21+2048]
	076 Call Dictionary`2<Int32, Object>.Clear, X0
	077 Move X0, [X21]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1B6F8F8
	082 Move X0, X31
	083 Call Application.get_isPlaying
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {100}
	088 Move TEMP, X20
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {100}
	092 Move X0, X19
	093 Move X20, [X31+32]
	094 Move X19, [X31+40]
	095 Move X22, [X31+16]
	096 Move X21, [X31+24]
	097 Move X30, [X31+48]
	098 Call NetworkManager.AutoJoin, X0
	099 Return 
	100 Move X20, [X31+32]
	101 Move X19, [X31+40]
	102 Move X22, [X31+16]
	103 Move X21, [X31+24]
	104 Move X30, [X31+48]
	105 Return 
	106 Call 0x1B6FA1C

Method: System.Void OnUserSimulationMessage(Fusion.NetworkRunner runner, Fusion.SimulationMessagePtr message)

Disassembly:
	0x01CBF654 B 0x1CBF65C

ISIL:
	001 Return 

Method: System.Int32 GetPlayerToken(Fusion.NetworkRunner runner, Fusion.PlayerRef player)

Disassembly:
	0x01CBF23C LDR X8, [X8 + 0x288]
	0x01CBF240 MOV X25, X0
	0x01CBF244 LDR X2, [X8]
	0x01CBF248 MOV X1, X20
	0x01CBF24C MOV X3, X31
	0x01CBF250 BL 0x27EC49C
	0x01CBF254 LDR X8, [X29]
	0x01CBF258 STR X25, [X31 + 0x10]
	0x01CBF25C ADRP X9, 0x228E000
	0x01CBF260 LDR X8, [X8 + 0xB8]
	0x01CBF264 LDR X9, [X9 + 0xDB0]
	0x01CBF268 LDR X25, [X19 + 0x40]
	0x01CBF26C LDR X10, [X20 + 0xB0]
	0x01CBF270 LDR X8, [X8]
	0x01CBF274 LDR X2, [X9]
	0x01CBF278 STR X31, [X31 + 0xA8]
	0x01CBF27C STP X10, X8, [X31 + 0x18]
	0x01CBF280 ADD X0, X31, 0xA8
	0x01CBF284 MOV W1, W21
	0x01CBF288 BL 0x22D480C
	0x01CBF28C ADRP X8, 0x228F000
	0x01CBF290 LDR X8, [X8 + 0x520]
	0x01CBF294 LDR X26, [X31 + 0xA8]
	0x01CBF298 MOV X21, X27
	0x01CBF29C STRH W31, [X31 + 0xA4]
	0x01CBF2A0 LDR X2, [X8]
	0x01CBF2A4 ADD X0, X31, 0xA4
	0x01CBF2A8 MOV W1, W24
	0x01CBF2AC BL 0x22CFDA4
	0x01CBF2B0 ADRP X8, 0x2290000
	0x01CBF2B4 LDR X8, [X8 + 0x278]
	0x01CBF2B8 LDRH W29, [X31 + 0xA4]
	0x01CBF2BC LDR X0, [X8]
	0x01CBF2C0 BL 0x1B6EA0C
	0x01CBF2C4 ADRP X8, 0x2290000
	0x01CBF2C8 LDR X8, [X8 + 0x280]
	0x01CBF2CC MOV X24, X0
	0x01CBF2D0 LDR X2, [X8]
	0x01CBF2D4 MOV X1, X20
	0x01CBF2D8 MOV X3, X31
	0x01CBF2DC BL 0x2B72024
	0x01CBF2E0 ADRP X8, 0x228E000
	0x01CBF2E4 LDR X8, [X8 + 0x5F8]
	0x01CBF2E8 LDR X0, [X8]
	0x01CBF2EC MOVZ W8, 0x4
	0x01CBF2F0 STR W8, [X31 + 0xA0]
	0x01CBF2F4 ADD X1, X31, 0xA0
	0x01CBF2F8 BL 0x1B6E900
	0x01CBF2FC MOV X1, X0
	0x01CBF300 ADRP X8, 0x2290000
	0x01CBF304 LDR X8, [X8 + 0x2C8]
	0x01CBF308 MOV X27, X25
	0x01CBF30C LDR X0, [X8]
	0x01CBF310 MOV X2, X21
	0x01CBF314 MOV X3, X31
	0x01CBF318 BL 0x3090A1C
	0x01CBF31C ADRP X8, 0x2290000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x2565000
	007 Move W8, [X21+1331]
	008 Move X19, X2
	009 Move X20, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x228F000
	015 Move X0, [X0+3960]
	016 Call 0x1B6F7F0
	017 Move X0, 0x2290000
	018 Move X0, [X0+1192]
	019 Call 0x1B6F7F0
	020 Move W8, 1
	021 Move [X21+1331], W8
	022 Compare X20, 0
	023 JumpIfEqual {67}
	024 Move X21, 0x2290000
	025 Move X21, [X21+1192]
	026 Move X0, X20
	027 Move X1, X31
	028 Call NetworkRunner.get_LocalPlayer, X0
	029 Move X8, [X21]
	030 Move X21, X0
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {36}
	034 Move X0, X8
	035 Call 0x1B6F8F8
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X8, 0x228F000
	038 Move X8, [X8+3960]
	039 Move X8, [X8]
	040 Move X8, [X8+184]
	041 Move X1, [X8]
	042 And X1, X19, 0
	043 Move X0, X20
	044 Move X2, X31
	045 Call NetworkRunner.GetPlayerConnectionToken, X0, X1
	046 Compare X0, 0
	047 JumpIfEqual {61}
	048 Move X1, X0
	049 Add X0, X31, 0
	050 Move X2, X31
	051 Move [X31+16], X31
	052 Move [X31+24], X31
	053 Move [X31], X31
	054 Move [X31+8], X31
	055 Call Guid..ctor, X0, X1
	056 Move V0, [X31]
	057 Add X0, X31, 16
	058 Move X1, X31
	059 Move [X31+1], V0
	060 Call Guid.GetHashCode, X0
	061 Move X20, [X31+48]
	062 Move X19, [X31+56]
	063 Move X30, [X31+32]
	064 Move X21, [X31+40]
	065 Add X31, X31, 64
	066 Return X0
	067 Call 0x1B6FA1C

Method: System.Byte[] NewToken()

Disassembly:
	0x01CBC554 TBZ X0, 0x0, 0x1CBCD50
	0x01CBC558 LDR X0, [X23]
	0x01CBC55C BL 0x1B6EA0C
	0x01CBC560 MOV X24, X0
	0x01CBC564 MOV X1, X31
	0x01CBC568 BL 0x32276F8
	0x01CBC56C LDR X8, [X22]
	0x01CBC570 LDR X1, [X21]
	0x01CBC574 LDRH W9, [X8 + 0x12E]
	0x01CBC578 CBZ X9, 0x1CBC59C
	0x01CBC57C LDR X10, [X8 + 0xB0]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move X0, X31
	004 Call Guid.NewGuid
	005 Move [X31], X0
	006 Move [X31+8], X1
	007 Add X0, X31, 0
	008 Move X1, X31
	009 Call Guid.ToByteArray, X0
	010 Move X30, [X31+16]
	011 Add X31, X31, 32
	012 Return X0

Method: System.Int32 HashToken(System.Byte[] token)

Disassembly:
	0x01CBC580 ADD X10, X10, 0x8
	0x01CBC584 LDUR X11, [X10 - 0x8]
	0x01CBC588 CMP X11, X1
	0x01CBC58C B.EQ 0x1CBC5AC
	0x01CBC590 SUBS X9, X9, 0x1
	0x01CBC594 ADD X10, X10, 0x10
	0x01CBC598 B.NE 0x1CBC584
	0x01CBC59C MOV X0, X22
	0x01CBC5A0 MOV W2, W31
	0x01CBC5A4 BL 0x1BB4284
	0x01CBC5A8 B 0x1CBC5B8
	0x01CBC5AC LDRSW X9, [X10]
	0x01CBC5B0 ADD X8, X8, X9, 0x4, LSL
	0x01CBC5B4 ADD X0, X8, 0x138
	0x01CBC5B8 LDP X8, X1, [X0]
	0x01CBC5BC MOV X0, X22

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+24], X31
	003 Move [X31+32], X30
	004 Move X1, X0
	005 Add X0, X31, 0
	006 Move X2, X31
	007 Move [X31+8], X31
	008 Move [X31+16], X31
	009 Move [X31], X31
	010 Call Guid..ctor, X0, X1
	011 Move V0, [X31]
	012 Add X0, X31, 16
	013 Move X1, X31
	014 Move [X31+1], V0
	015 Call Guid.GetHashCode, X0
	016 Move X30, [X31+32]
	017 Add X31, X31, 48
	018 Return X0

Method: System.String TokenToString(System.Byte[] token)

Disassembly:
	0x01CBF658 B 0x1CBF65C
	0x01CBF65C MOV X20, X0
	0x01CBF660 CMP W1, 0x1
	0x01CBF664 B.NE 0x1CBF6E0
	0x01CBF668 MOV X0, X20
	0x01CBF66C BL 0x3D19840
	0x01CBF670 MOV X20, X0
	0x01CBF674 ADRP X0, 0x228E000
	0x01CBF678 LDR X0, [X0 + 0x670]
	0x01CBF67C BL 0x1B6E804
	0x01CBF680 LDR X8, [X20]
	0x01CBF684 LDR X1, [X8]
	0x01CBF688 BL 0x1B6ED6C
	0x01CBF68C TBZ X0, 0x0, 0x1CBF6B8
	0x01CBF690 LDR X20, [X20]
	0x01CBF694 BL 0x3D19850

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+24], X31
	003 Move [X31+32], X30
	004 Move X1, X0
	005 Add X0, X31, 0
	006 Move X2, X31
	007 Move [X31+8], X31
	008 Move [X31+16], X31
	009 Move [X31], X31
	010 Call Guid..ctor, X0, X1
	011 Move V0, [X31]
	012 Add X0, X31, 16
	013 Move X1, X31
	014 Move [X31+1], V0
	015 Call Guid.ToString, X0
	016 Move X30, [X31+32]
	017 Add X31, X31, 48
	018 Return X0

Method: System.Void .ctor()

Disassembly:
	0x01CBF698 MOVN W8, 0x1
	0x01CBF69C STR W8, [X19], #0x8
	0x01CBF6A0 MOV X0, X19
	0x01CBF6A4 MOV X1, X20
	0x01CBF6A8 MOV X2, X31
	0x01CBF6AC BL 0x312D150
	0x01CBF6B0 LDR X28, [X31 + 0x38]
	0x01CBF6B4 B 0x1CBF568
	0x01CBF6B8 MOVZ W0, 0x8
	0x01CBF6BC BL 0x3D19860
	0x01CBF6C0 LDR X8, [X20]
	0x01CBF6C4 STR X8, [X0]
	0x01CBF6C8 ADRP X1, 0x205D000
	0x01CBF6CC ADD X1, X1, 0xBD8
	0x01CBF6D0 MOV X2, X31
	0x01CBF6D4 BL 0x3D19870
	0x01CBF6D8 MOV X20, X0
	0x01CBF6DC BL 0x3D19850
	0x01CBF6E0 MOV X0, X20
	0x01CBF6E4 BL 0x1C8418C
	0x01CBF6E8 BL 0x18F46A8
	0x01CBF6EC ADD X0, X0, 0x8
	0x01CBF6F0 MOV X2, X31
	0x01CBF6F4 B 0x312CF28
	0x01CBF6F8 SUB X31, X31, 0x100
	0x01CBF6FC STR D14, [X31 + 0x80]
	0x01CBF700 STP D13, D12, [X31 + 0x90]
	0x01CBF704 STP D11, D10, [X31 + 0xA0]
	0x01CBF708 STP D9, D8, [X31 + 0xB0]
	0x01CBF70C STP X30, X25, [X31 + 0xC0]
	0x01CBF710 STP X24, X23, [X31 + 0xD0]
	0x01CBF714 STP X22, X21, [X31 + 0xE0]
	0x01CBF718 STP X20, X19, [X31 + 0xF0]
	0x01CBF71C MOVI V0.2D, 0x0
	0x01CBF720 STP V0, V0, [X31 + 0x60]
	0x01CBF724 STP V0, V0, [X31 + 0x40]
	0x01CBF728 MOV X19, X0
	0x01CBF72C LDR X0, [X0 + 0x30]
	0x01CBF730 CBZ X0, 0x1CBF864
	0x01CBF734 ADD X8, X31, 0x0
	0x01CBF738 MOV X1, X31
	0x01CBF73C BL 0x3A7BB60
	0x01CBF740 LDP V0, V1, [X31]
	0x01CBF744 LDP V2, V3, [X31 + 0x20]
	0x01CBF748 STP V0, V1, [X31 + 0x40]
	0x01CBF74C STP V2, V3, [X31 + 0x60]
	0x01CBF750 LDR X0, [X19 + 0x28]
	0x01CBF754 CBZ X0, 0x1CBF864
	0x01CBF758 MOV X1, X31
	0x01CBF75C BL 0x3AA7658
	0x01CBF760 ADD X0, X31, 0x40
	0x01CBF764 MOV X1, X31
	0x01CBF768 BL 0x3A90598
	0x01CBF76C LDR X0, [X19 + 0x30]
	0x01CBF770 CBZ X0, 0x1CBF864
	0x01CBF774 ADRP X20, 0x228E000
	0x01CBF778 LDR X20, [X20 + 0x488]
	0x01CBF77C MOVN W8, 0x80800000
	0x01CBF780 MOV V8.16B, V0.16B
	0x01CBF784 MOV V9.16B, V1.16B
	0x01CBF788 MOV V10.16B, V2.16B
	0x01CBF78C MOV X22, X31
	0x01CBF790 MOV X23, X31
	0x01CBF794 MOVN W21, 0x0
	0x01CBF798 ADRP X24, 0x2564000
	0x01CBF79C FMOV S11, W8
	0x01CBF7A0 MOVZ W25, 0x1
	0x01CBF7A4 MOV X1, X31
	0x01CBF7A8 BL 0x3A7F6EC
	0x01CBF7AC CBZ X0, 0x1CBF864
	0x01CBF7B0 MOV X1, X31
	0x01CBF7B4 BL 0x3A80750
	0x01CBF7B8 CBZ X0, 0x1CBF864
	0x01CBF7BC LDRSW X8, [X0 + 0x18]
	0x01CBF7C0 CMP X23, X8
	0x01CBF7C4 B.GE 0x1CBF868
	0x01CBF7C8 LDR X0, [X19 + 0x30]
	0x01CBF7CC CBZ X0, 0x1CBF864

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X26, 0x2565000
	012 Move X27, 0x2291000
	013 Move X20, 0x2291000
	014 Move X25, 0x2291000
	015 Move X24, 0x2291000
	016 Move X23, 0x2291000
	017 Move X22, 0x2291000
	018 Move X21, 0x2291000
	019 Move X27, [X27+520]
	020 Move X20, [X20+528]
	021 Move W8, [X26+1332]
	022 Move X25, [X25+536]
	023 Move X24, [X24+544]
	024 Move X23, [X23+552]
	025 Move X22, [X22+560]
	026 Move X21, [X21+568]
	027 Move X19, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {55}
	032 Move X0, 0x2291000
	033 Move X0, [X0+544]
	034 Call 0x1B6F7F0
	035 Move X0, 0x2291000
	036 Move X0, [X0+528]
	037 Call 0x1B6F7F0
	038 Move X0, 0x2291000
	039 Move X0, [X0+520]
	040 Call 0x1B6F7F0
	041 Move X0, 0x2291000
	042 Move X0, [X0+536]
	043 Call 0x1B6F7F0
	044 Move X0, 0x2291000
	045 Move X0, [X0+560]
	046 Call 0x1B6F7F0
	047 Move X0, 0x2291000
	048 Move X0, [X0+552]
	049 Call 0x1B6F7F0
	050 Move X0, 0x2291000
	051 Move X0, [X0+568]
	052 Call 0x1B6F7F0
	053 Move W8, 1
	054 Move [X26+1332], W8
	055 Move X0, [X27]
	056 Call 0x1B6FA0C
	057 Move X1, [X20]
	058 Move X20, X0
	059 Call Dictionary`2<PlayerRef, Object>..ctor, X0
	060 Move [X19+120], X20
	061 Move X0, [X25]
	062 Call 0x1B6FA0C
	063 Move X1, [X24]
	064 Move X20, X0
	065 Call Dictionary`2<Int32, Object>..ctor, X0
	066 Move [X19+128], X20
	067 Move X0, [X23]
	068 Call 0x1B6FA0C
	069 Move X1, [X22]
	070 Move X20, X0
	071 Call List`1<Int32>..ctor, X0
	072 Move [X19+136], X20
	073 Move X0, [X21]
	074 Call 0x1B6FA0C
	075 Move X1, X31
	076 Move X20, X0
	077 Call Stopwatch..ctor, X0
	078 Move [X19+168], X20
	079 Move X0, X19
	080 Move X20, [X31+64]
	081 Move X19, [X31+72]
	082 Move X22, [X31+48]
	083 Move X21, [X31+56]
	084 Move X24, [X31+32]
	085 Move X23, [X31+40]
	086 Move X26, [X31+16]
	087 Move X25, [X31+24]
	088 Move X1, X31
	089 Move X30, [X31+80]
	090 Move X27, [X31+88]
	091 Call SimulationBehaviour..ctor, X0
	092 Return 

