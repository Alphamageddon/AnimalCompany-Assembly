Type: AnimalCompany.JetpackHandy/<JetpackForceCoroutine>d__24

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01CACF34 STR X30, [X31 - 0x20]!
	0x01CACF38 STP X20, X19, [X31 + 0x10]
	0x01CACF3C MOV X19, X0
	0x01CACF40 MOV X0, X31
	0x01CACF44 BL 0x3AA47CC
	0x01CACF48 LDR V1, [X19 + 0x30]
	0x01CACF4C FSUB S0, S0, S1
	0x01CACF50 FMOV S1, 0.5
	0x01CACF54 FCMP S0, S1
	0x01CACF58 B.LE 0x1CACF94

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01CAD3FC AND W0, W22, 0x1

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01CAD400 LDP X20, X19, [X31 + 0x50]
	0x01CAD404 LDP X22, X21, [X31 + 0x40]
	0x01CAD408 LDP X24, X23, [X31 + 0x30]
	0x01CAD40C LDP X30, X25, [X31 + 0x20]
	0x01CAD410 LDP D9, D8, [X31 + 0x10]
	0x01CAD414 LDR V10, [X31], #0x60
	0x01CAD418 RET
	0x01CAD41C BL 0x1B6EA1C
	0x01CAD420 BL 0x1B6EA24
	0x01CAD424 B 0x1CAE2B0
	0x01CAD428 MOV X1, X31
	0x01CAD42C B 0x3A9EEE4
	0x01CAD430 STP D13, D12, [X31 - 0x60]!
	0x01CAD434 STP D11, D10, [X31 + 0x10]
	0x01CAD438 STP D9, D8, [X31 + 0x20]
	0x01CAD43C STR X30, [X31 + 0x30]
	0x01CAD440 STP X22, X21, [X31 + 0x40]
	0x01CAD444 STP X20, X19, [X31 + 0x50]
	0x01CAD448 CBZ X1, 0x1CAD5C0
	0x01CAD44C MOV X19, X0
	0x01CAD450 MOV X0, X1
	0x01CAD454 MOV X1, X31
	0x01CAD458 MOV X20, X2
	0x01CAD45C BL 0x3A9B084
	0x01CAD460 CBZ X0, 0x1CAD5C0
	0x01CAD464 MOV X1, X31
	0x01CAD468 BL 0x3AA7658
	0x01CAD46C MOV X0, X19
	0x01CAD470 MOV X1, X31
	0x01CAD474 MOV V8.16B, V0.16B
	0x01CAD478 MOV V9.16B, V1.16B
	0x01CAD47C MOV V10.16B, V2.16B
	0x01CAD480 BL 0x3A9B084
	0x01CAD484 CBZ X0, 0x1CAD5C0
	0x01CAD488 MOV X1, X31
	0x01CAD48C BL 0x3AA7658
	0x01CAD490 ADRP X21, 0x2576000
	0x01CAD494 LDRB W8, [X21 + 0x506]
	0x01CAD498 MOV V11.16B, V0.16B
	0x01CAD49C MOV V12.16B, V1.16B
	0x01CAD4A0 MOV V13.16B, V2.16B
	0x01CAD4A4 CBNZ W8, 0x1CAD4BC
	0x01CAD4A8 ADRP X0, 0x22A0000
	0x01CAD4AC LDR X0, [X0 + 0x488]
	0x01CAD4B0 BL 0x1B6E7F0
	0x01CAD4B4 MOVZ W8, 0x1
	0x01CAD4B8 STRB W8, [X21 + 0x506]
	0x01CAD4BC ADRP X22, 0x22A0000
	0x01CAD4C0 LDR X22, [X22 + 0x488]
	0x01CAD4C4 FSUB S11, S8, S11
	0x01CAD4C8 FSUB S9, S9, S12
	0x01CAD4CC FSUB S8, S10, S13
	0x01CAD4D0 LDR X0, [X22]
	0x01CAD4D4 LDR W8, [X0 + 0xE0]
	0x01CAD4D8 CBNZ W8, 0x1CAD4E0
	0x01CAD4DC BL 0x1B6E8F8
	0x01CAD4E0 FMUL S0, S11, S11
	0x01CAD4E4 FMUL S1, S9, S9
	0x01CAD4E8 FADD S0, S0, S1
	0x01CAD4EC FMUL S1, S8, S8
	0x01CAD4F0 FADD S0, S1, S0
	0x01CAD4F4 FSQRT S0, S0
	0x01CAD4F8 STR S0, [X31 + 0x3C]
	0x01CAD4FC CBZ X20, 0x1CAD5C0
	0x01CAD500 MOV X0, X20
	0x01CAD504 MOV X1, X31
	0x01CAD508 BL 0x3A9B084
	0x01CAD50C CBZ X0, 0x1CAD5C0
	0x01CAD510 MOV X1, X31
	0x01CAD514 BL 0x3AA7658
	0x01CAD518 MOV X0, X19
	0x01CAD51C MOV X1, X31
	0x01CAD520 MOV V8.16B, V0.16B
	0x01CAD524 MOV V9.16B, V1.16B
	0x01CAD528 MOV V10.16B, V2.16B
	0x01CAD52C BL 0x3A9B084
	0x01CAD530 CBZ X0, 0x1CAD5C0
	0x01CAD534 MOV X1, X31
	0x01CAD538 BL 0x3AA7658
	0x01CAD53C LDRB W8, [X21 + 0x506]
	0x01CAD540 MOV V11.16B, V0.16B
	0x01CAD544 MOV V12.16B, V1.16B
	0x01CAD548 MOV V13.16B, V2.16B
	0x01CAD54C CBNZ W8, 0x1CAD564
	0x01CAD550 ADRP X0, 0x22A0000
	0x01CAD554 LDR X0, [X0 + 0x488]
	0x01CAD558 BL 0x1B6E7F0
	0x01CAD55C MOVZ W8, 0x1
	0x01CAD560 STRB W8, [X21 + 0x506]
	0x01CAD564 LDR X0, [X22]
	0x01CAD568 FSUB S11, S8, S11
	0x01CAD56C FSUB S9, S9, S12
	0x01CAD570 FSUB S8, S10, S13
	0x01CAD574 LDR W8, [X0 + 0xE0]
	0x01CAD578 CBNZ W8, 0x1CAD580
	0x01CAD57C BL 0x1B6E8F8
	0x01CAD580 FMUL S0, S11, S11
	0x01CAD584 FMUL S1, S9, S9
	0x01CAD588 FADD S0, S0, S1
	0x01CAD58C FMUL S1, S8, S8
	0x01CAD590 FADD S0, S1, S0
	0x01CAD594 FSQRT S0, S0
	0x01CAD598 ADD X0, X31, 0x3C
	0x01CAD59C MOV X1, X31
	0x01CAD5A0 BL 0x31F935C
	0x01CAD5A4 LDP X20, X19, [X31 + 0x50]
	0x01CAD5A8 LDP X22, X21, [X31 + 0x40]
	0x01CAD5AC LDR X30, [X31 + 0x30]
	0x01CAD5B0 LDP D9, D8, [X31 + 0x20]
	0x01CAD5B4 LDP D11, D10, [X31 + 0x10]
	0x01CAD5B8 LDP D13, D12, [X31], #0x60
	0x01CAD5BC RET
	0x01CAD5C0 BL 0x1B6EA1C
	0x01CAD5C4 STP X30, X19, [X31 - 0x10]!
	0x01CAD5C8 LDR X8, [X0 + 0x50]
	0x01CAD5CC CBZ X8, 0x1CAD5DC
	0x01CAD5D0 LDR W0, [X8]
	0x01CAD5D4 LDP X30, X19, [X31], #0x10
	0x01CAD5D8 RET
	0x01CAD5DC ADRP X0, 0x22A0000
	0x01CAD5E0 LDR X0, [X0 + 0x490]
	0x01CAD5E4 BL 0x1B6E804
	0x01CAD5E8 BL 0x1B6EA0C
	0x01CAD5EC MOV X19, X0
	0x01CAD5F0 ADRP X0, 0x22A1000
	0x01CAD5F4 LDR X0, [X0 + 0x928]
	0x01CAD5F8 BL 0x1B6E804
	0x01CAD5FC MOV X1, X0
	0x01CAD600 MOV X0, X19
	0x01CAD604 MOV X2, X31
	0x01CAD608 BL 0x31E7550
	0x01CAD60C ADRP X0, 0x22A1000
	0x01CAD610 LDR X0, [X0 + 0x930]
	0x01CAD614 BL 0x1B6E804
	0x01CAD618 MOV X1, X0
	0x01CAD61C MOV X0, X19
	0x01CAD620 BL 0x1B6E8E8

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2577000
	007 Move W8, [X20+1173]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x22A2000
	014 Move X0, [X0+744]
	015 Call 0x1B6F7F0
	016 Move W8, 1
	017 Move [X20+1173], W8
	018 Move [X31+12], W31
	019 Move W8, [X19+16]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X21, [X19+32]
	022 Move X9, -18612224
	023 Add X9, X9, 2324
	024 NotImplemented "Instruction ADR not yet implemented."
	025 Move W11, [X9]
	026 Add X10, X10, X11
	027 CallNoReturn X10
	028 Move TEMP, 0
	029 Not TEMP
	030 Move W8, TEMP
	031 Move [X19+16], W8
	032 Compare X21, 0
	033 JumpIfEqual {164}
	034 Move X0, [X21+136]
	035 Compare X0, 0
	036 JumpIfEqual {164}
	037 Move X20, [X21+128]
	038 Move X1, X31
	039 Call Transform.get_forward, X0
	040 Compare X20, 0
	041 JumpIfEqual {164}
	042 Move S3, 7
	043 Multiply S2, S2, S3
	044 Multiply S1, S1, S3
	045 Multiply S0, S0, S3
	046 Move X0, X20
	047 Move X1, X31
	048 Call GrabbableItem.AddExternalForce, X0, X1
	049 Move W0, 1
	050 Move [X19+24], X31
	051 Move [X19+16], W0
	052 Move TEMP, 0
	053 Not TEMP
	054 Move W8, TEMP
	055 Move S8, W31
	056 Move [X19+40], W31
	057 Move [X19+16], W8
	058 Move V8, [X19+40]
	059 Move S0, 2
	060 Move TEMP, 0
	061 Not TEMP
	062 Move W8, TEMP
	063 Move [X19+16], W8
	064 NotImplemented "Instruction FCMP not yet implemented."
	065 Move X0, X31
	066 Call Time.get_deltaTime
	067 Add S0, S8, S0
	068 Move [X19+40], S0
	069 Compare X21, 0
	070 JumpIfEqual {164}
	071 Move X0, [X21+128]
	072 Compare X0, 0
	073 JumpIfEqual {164}
	074 Move X1, X31
	075 Call GrabbableItem.get_isAttached, X0
	076 Move X20, [X21+128]
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {125}
	081 Move X0, [X21+136]
	082 Compare X0, 0
	083 JumpIfEqual {164}
	084 Move X1, X31
	085 Call Transform.get_forward, X0
	086 Compare X20, 0
	087 JumpIfEqual {164}
	088 Move X8, -18886656
	089 Move V3, [X8+3560]
	090 Move X0, X20
	091 Move X1, X31
	092 Multiply S2, S2, S3
	093 Multiply S1, S1, S3
	094 Multiply S0, S0, S3
	095 Call GrabbableItem.AddExternalForce, X0, X1
	096 Move X0, [X21+128]
	097 Compare X0, 0
	098 JumpIfEqual {164}
	099 Add X1, X31, 12
	100 Move X2, X31
	101 Call GrabbableItem.TryGetHandSide, X0, X1
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {144}
	106 Move X8, -18886656
	107 Move X9, -18886656
	108 Move W0, [X31+12]
	109 Move V0, [X8+3616]
	110 Move V1, [X9+2736]
	111 Move X1, X31
	112 Call XRInputManager.SendHapticImpulse, X0, V0, V1
	113 Move TEMP, 0
	114 Not TEMP
	115 Move W8, TEMP
	116 Move [X19+16], W8
	117 Compare X21, 0
	118 JumpIfEqual {164}
	119 Move X0, [X21+128]
	120 Compare X0, 0
	121 JumpIfEqual {164}
	122 Move X1, X31
	123 Call GrabbableItem.Despawn, X0
	124 Move W0, W31
	125 Compare X20, 0
	126 JumpIfEqual {164}
	127 Move X0, [X21+136]
	128 Compare X0, 0
	129 JumpIfEqual {164}
	130 Move X20, [X20+304]
	131 Move X1, X31
	132 Call Transform.get_forward, X0
	133 Compare X20, 0
	134 JumpIfEqual {164}
	135 Move X8, -18886656
	136 Move V3, [X8+3560]
	137 Move W1, 2
	138 Move X0, X20
	139 Move X2, X31
	140 Multiply S2, S2, S3
	141 Multiply S1, S1, S3
	142 Multiply S0, S0, S3
	143 Call Rigidbody.AddForce, X0, X1, X2
	144 Move W8, 2
	145 Move [X19+24], X31
	146 Move X8, 0x22A2000
	147 Move X8, [X8+744]
	148 Move X0, [X8]
	149 Call 0x1B6FA0C
	150 Move S0, 4
	151 Move X1, X31
	152 Move X20, X0
	153 Call WaitForSeconds..ctor, X0, V0
	154 Move [X19+24], X20
	155 Move W8, 3
	156 Move [X19+16], W8
	157 Move W0, 1
	158 Move X20, [X31+32]
	159 Move X19, [X31+40]
	160 Move X30, [X31+16]
	161 Move X21, [X31+24]
	162 Move V8, [X31+48]
	163 Return X0
	164 Call 0x1B6FA1C

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x01CAD624 STP X30, X19, [X31 - 0x10]!
	0x01CAD628 LDR X8, [X0 + 0x50]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01CAD62C CBZ X8, 0x1CAD63C
	0x01CAD630 STR W1, [X8]
	0x01CAD634 LDP X30, X19, [X31], #0x10
	0x01CAD638 RET
	0x01CAD63C ADRP X0, 0x22A0000
	0x01CAD640 LDR X0, [X0 + 0x490]
	0x01CAD644 BL 0x1B6E804
	0x01CAD648 BL 0x1B6EA0C
	0x01CAD64C MOV X19, X0
	0x01CAD650 ADRP X0, 0x22A1000
	0x01CAD654 LDR X0, [X0 + 0x928]
	0x01CAD658 BL 0x1B6E804
	0x01CAD65C MOV X1, X0
	0x01CAD660 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x22A1000
	004 Move X0, [X0+2448]
	005 Call 0x1B6F804
	006 Call 0x1B6FA0C
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x22A2000
	011 Move X0, [X0+2232]
	012 Call 0x1B6F804
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1B6F8E8

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01CAD664 MOV X2, X31
	0x01CAD668 BL 0x31E7550

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

