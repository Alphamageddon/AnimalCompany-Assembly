Type: AnimalCompany.PlayerController/<SetDeathCoroutine>d__95

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01CC3398 CBZ X9, 0x1CC3524
	0x01CC339C LDR X21, [X9 + 0x20]
	0x01CC33A0 B 0x1CC33B4
	0x01CC33A4 MOV V9.16B, V10.16B
	0x01CC33A8 LDR V10, [X31 + 0xC]
	0x01CC33AC B 0x1CC34A8
	0x01CC33B0 CBZ X8, 0x1CC3524
	0x01CC33B4 LDR X9, [X8 + 0x20]
	0x01CC33B8 CBZ X9, 0x1CC3524
	0x01CC33BC LDR W22, [X9 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01CC5134 LDR X22, [X22 + 0x480]

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01CC5138 FADD S1, S2, S1
	0x01CC513C FSQRT S1, S1
	0x01CC5140 FCMP S1, S12
	0x01CC5144 B.LE 0x1CC520C
	0x01CC5148 FDIV S15, S8, S1
	0x01CC514C FDIV S14, S0, S1
	0x01CC5150 FDIV S8, S9, S1
	0x01CC5154 B 0x1CC523C
	0x01CC5158 CBZ X21, 0x1CC54D0
	0x01CC515C LDR X0, [X21 + 0x20]
	0x01CC5160 CBZ X0, 0x1CC54D0
	0x01CC5164 MOV W1, W31
	0x01CC5168 BL 0x1CC54D4
	0x01CC516C LDR X0, [X21 + 0x40]
	0x01CC5170 CBZ X0, 0x1CC54D0
	0x01CC5174 MOVZ W1, 0x1
	0x01CC5178 MOV X2, X31
	0x01CC517C BL 0x3A9A604
	0x01CC5180 LDR X0, [X21 + 0x48]
	0x01CC5184 CBZ X0, 0x1CC54D0
	0x01CC5188 MOV W1, W31
	0x01CC518C MOV X2, X31
	0x01CC5190 BL 0x3A9A604
	0x01CC5194 LDR X0, [X21 + 0x58]
	0x01CC5198 CBZ X0, 0x1CC54D0
	0x01CC519C LDRB W8, [X19 + 0x20]
	0x01CC51A0 MOV X2, X31
	0x01CC51A4 CMP W8, 0x0
	0x01CC51A8 CSET W1, EQ
	0x01CC51AC BL 0x3A9A604
	0x01CC51B0 LDR X0, [X21 + 0x60]
	0x01CC51B4 CBZ X0, 0x1CC54D0
	0x01CC51B8 LDRB W1, [X19 + 0x20]
	0x01CC51BC MOV X2, X31
	0x01CC51C0 BL 0x3A9A604
	0x01CC51C4 LDR X0, [X21 + 0x30]
	0x01CC51C8 CBZ X0, 0x1CC54D0
	0x01CC51CC LDRB W8, [X19 + 0x20]
	0x01CC51D0 MOV X2, X31
	0x01CC51D4 CMP W8, 0x0
	0x01CC51D8 CSET W1, EQ
	0x01CC51DC BL 0x3A9A604
	0x01CC51E0 LDR X0, [X21 + 0x38]
	0x01CC51E4 CBZ X0, 0x1CC54D0
	0x01CC51E8 LDRB W8, [X19 + 0x20]
	0x01CC51EC MOV X2, X31
	0x01CC51F0 CMP W8, 0x0
	0x01CC51F4 CSET W1, EQ
	0x01CC51F8 BL 0x3A9A604
	0x01CC51FC MOVZ W0, 0x1
	0x01CC5200 STR X31, [X19 + 0x18]
	0x01CC5204 STR W0, [X19 + 0x10]
	0x01CC5208 B 0x1CC54A8
	0x01CC520C ADRP X24, 0x255E000
	0x01CC5210 LDRB W8, [X24 + 0x43F]
	0x01CC5214 CBNZ W8, 0x1CC522C
	0x01CC5218 ADRP X0, 0x2288000
	0x01CC521C LDR X0, [X0 + 0x480]
	0x01CC5220 BL 0x1B6E7F0
	0x01CC5224 MOVZ W8, 0x1
	0x01CC5228 STRB W8, [X24 + 0x43F]
	0x01CC522C LDR X8, [X22]
	0x01CC5230 LDR X8, [X8 + 0xB8]
	0x01CC5234 LDP S15, S14, [X8]
	0x01CC5238 LDR V8, [X8 + 0x8]
	0x01CC523C LDR X0, [X21 + 0x48]
	0x01CC5240 CBZ X0, 0x1CC54D0
	0x01CC5244 MOV X1, X31
	0x01CC5248 BL 0x3A9B084
	0x01CC524C CBZ X0, 0x1CC54D0
	0x01CC5250 MOV X1, X31
	0x01CC5254 BL 0x3AA7AD0
	0x01CC5258 LDRB W8, [X20 + 0x441]
	0x01CC525C MOV V11.16B, V0.16B
	0x01CC5260 MOV V13.16B, V2.16B
	0x01CC5264 CBNZ W8, 0x1CC527C
	0x01CC5268 ADRP X0, 0x2288000
	0x01CC526C LDR X0, [X0 + 0x488]
	0x01CC5270 BL 0x1B6E7F0
	0x01CC5274 MOVZ W8, 0x1
	0x01CC5278 STRB W8, [X20 + 0x441]
	0x01CC527C LDR X0, [X23]
	0x01CC5280 LDR W8, [X0 + 0xE0]
	0x01CC5284 CBNZ W8, 0x1CC528C
	0x01CC5288 BL 0x1B6E8F8
	0x01CC528C FMUL S1, S11, S11
	0x01CC5290 FMOV S0, W31
	0x01CC5294 FADD S1, S1, S0
	0x01CC5298 FMUL S2, S13, S13
	0x01CC529C FADD S1, S2, S1
	0x01CC52A0 FSQRT S1, S1
	0x01CC52A4 FCMP S1, S12
	0x01CC52A8 B.LE 0x1CC52BC
	0x01CC52AC FDIV S11, S11, S1
	0x01CC52B0 FDIV S12, S0, S1
	0x01CC52B4 FDIV S13, S13, S1
	0x01CC52B8 B 0x1CC52EC
	0x01CC52BC ADRP X20, 0x255E000
	0x01CC52C0 LDRB W8, [X20 + 0x43F]
	0x01CC52C4 CBNZ W8, 0x1CC52DC
	0x01CC52C8 ADRP X0, 0x2288000
	0x01CC52CC LDR X0, [X0 + 0x480]
	0x01CC52D0 BL 0x1B6E7F0
	0x01CC52D4 MOVZ W8, 0x1
	0x01CC52D8 STRB W8, [X20 + 0x43F]
	0x01CC52DC LDR X8, [X22]
	0x01CC52E0 LDR X8, [X8 + 0xB8]
	0x01CC52E4 LDP S11, S12, [X8]
	0x01CC52E8 LDR V13, [X8 + 0x8]
	0x01CC52EC ADRP X23, 0x255E000
	0x01CC52F0 LDRB W8, [X23 + 0x442]
	0x01CC52F4 CBNZ W8, 0x1CC530C
	0x01CC52F8 ADRP X0, 0x2288000
	0x01CC52FC LDR X0, [X0 + 0x480]
	0x01CC5300 BL 0x1B6E7F0
	0x01CC5304 MOVZ W8, 0x1
	0x01CC5308 STRB W8, [X23 + 0x442]
	0x01CC530C LDR X8, [X22]
	0x01CC5310 MOV V1.16B, V12.16B
	0x01CC5314 MOV V2.16B, V13.16B
	0x01CC5318 MOV V3.16B, V15.16B
	0x01CC531C LDR X8, [X8 + 0xB8]
	0x01CC5320 MOV V4.16B, V14.16B
	0x01CC5324 MOV V5.16B, V8.16B
	0x01CC5328 MOV X0, X31
	0x01CC532C LDR V0, [X8 + 0x20]
	0x01CC5330 LDR X9, [X8 + 0x18]
	0x01CC5334 STR S0, [X31 + 0x8]
	0x01CC5338 MOV V0.16B, V11.16B
	0x01CC533C STR X9, [X31]
	0x01CC5340 BL 0x1CCF6E0
	0x01CC5344 LDRB W8, [X23 + 0x442]
	0x01CC5348 LDR X20, [X21 + 0x50]
	0x01CC534C MOV V11.16B, V0.16B
	0x01CC5350 CBNZ W8, 0x1CC5368
	0x01CC5354 ADRP X0, 0x2288000
	0x01CC5358 LDR X0, [X0 + 0x480]
	0x01CC535C BL 0x1B6E7F0
	0x01CC5360 MOVZ W8, 0x1
	0x01CC5364 STRB W8, [X23 + 0x442]
	0x01CC5368 CBZ X20, 0x1CC54D0
	0x01CC536C LDR X8, [X22]
	0x01CC5370 MOV X0, X20
	0x01CC5374 MOV V3.16B, V11.16B
	0x01CC5378 MOV X1, X31
	0x01CC537C LDR X8, [X8 + 0xB8]
	0x01CC5380 STR S8, [X31 + 0x6C]
	0x01CC5384 LDP S1, S2, [X8 + 0x1C]
	0x01CC5388 LDR V0, [X8 + 0x18]
	0x01CC538C BL 0x3AA8744
	0x01CC5390 LDR V0, [X19 + 0x3C]
	0x01CC5394 LDR V4, [X19 + 0x40]
	0x01CC5398 LDRB W8, [X23 + 0x442]
	0x01CC539C STR S0, [X31 + 0x68]
	0x01CC53A0 LDR V0, [X19 + 0x44]
	0x01CC53A4 STP S0, S4, [X31 + 0x18]
	0x01CC53A8 CBNZ W8, 0x1CC53C0
	0x01CC53AC ADRP X0, 0x2288000
	0x01CC53B0 LDR X0, [X0 + 0x480]
	0x01CC53B4 BL 0x1B6E7F0
	0x01CC53B8 MOVZ W8, 0x1
	0x01CC53BC STRB W8, [X23 + 0x442]
	0x01CC53C0 LDR X0, [X21 + 0x50]
	0x01CC53C4 CBZ X0, 0x1CC54D0
	0x01CC53C8 LDR X8, [X22]
	0x01CC53CC MOV V8.16B, V14.16B
	0x01CC53D0 MOV X1, X31
	0x01CC53D4 LDR X8, [X8 + 0xB8]
	0x01CC53D8 LDP S9, S10, [X8 + 0x18]
	0x01CC53DC LDR V14, [X8 + 0x20]
	0x01CC53E0 BL 0x3AA7658
	0x01CC53E4 LDR X0, [X21 + 0x48]
	0x01CC53E8 CBZ X0, 0x1CC54D0
	0x01CC53EC MOV X1, X31
	0x01CC53F0 MOV V11.16B, V0.16B
	0x01CC53F4 MOV V12.16B, V1.16B
	0x01CC53F8 MOV V13.16B, V2.16B
	0x01CC53FC BL 0x3A9B084
	0x01CC5400 CBZ X0, 0x1CC54D0
	0x01CC5404 MOV X1, X31
	0x01CC5408 BL 0x3AA7658
	0x01CC540C LDR X0, [X21 + 0x50]
	0x01CC5410 CBZ X0, 0x1CC54D0
	0x01CC5414 LDR V6, [X31 + 0x6C]
	0x01CC5418 FMOV S3, 3.5
	0x01CC541C FMUL S4, S15, S3
	0x01CC5420 FMUL S5, S8, S3
	0x01CC5424 FMUL S3, S6, S3
	0x01CC5428 LDR V6, [X31 + 0x68]
	0x01CC542C FSUB S2, S13, S2
	0x01CC5430 FSUB S1, S12, S1
	0x01CC5434 FSUB S0, S11, S0
	0x01CC5438 FSUB S4, S6, S4
	0x01CC543C LDR V6, [X31 + 0x1C]
	0x01CC5440 FADD S4, S4, S9
	0x01CC5444 FADD S0, S4, S0
	0x01CC5448 MOV X1, X31
	0x01CC544C FSUB S5, S6, S5
	0x01CC5450 LDR V6, [X31 + 0x18]
	0x01CC5454 FADD S5, S5, S10
	0x01CC5458 FADD S1, S5, S1
	0x01CC545C FSUB S3, S6, S3
	0x01CC5460 FADD S3, S3, S14
	0x01CC5464 FADD S2, S3, S2
	0x01CC5468 BL 0x3AA76F8
	0x01CC546C LDR X0, [X21 + 0x40]
	0x01CC5470 CBZ X0, 0x1CC54D0
	0x01CC5474 MOV W1, W31
	0x01CC5478 MOV X2, X31
	0x01CC547C BL 0x3A9A604
	0x01CC5480 LDR X0, [X21 + 0x48]
	0x01CC5484 CBZ X0, 0x1CC54D0
	0x01CC5488 MOVZ W1, 0x1
	0x01CC548C MOV X2, X31
	0x01CC5490 BL 0x3A9A604
	0x01CC5494 LDR X0, [X21 + 0x20]
	0x01CC5498 CBZ X0, 0x1CC54D0
	0x01CC549C MOVZ W1, 0x1
	0x01CC54A0 BL 0x1CC54D4
	0x01CC54A4 MOV W0, W31
	0x01CC54A8 LDP X20, X19, [X31 + 0x90]
	0x01CC54AC LDP X22, X21, [X31 + 0x80]
	0x01CC54B0 LDP X24, X23, [X31 + 0x70]
	0x01CC54B4 LDR X30, [X31 + 0x60]
	0x01CC54B8 LDP D9, D8, [X31 + 0x50]
	0x01CC54BC LDP D11, D10, [X31 + 0x40]
	0x01CC54C0 LDP D13, D12, [X31 + 0x30]
	0x01CC54C4 LDP D15, D14, [X31 + 0x20]
	0x01CC54C8 ADD X31, X31, 0xA0
	0x01CC54CC RET
	0x01CC54D0 BL 0x1B6EA1C
	0x01CC54D4 STR X30, [X31 - 0x30]!
	0x01CC54D8 STP X22, X21, [X31 + 0x10]
	0x01CC54DC STP X20, X19, [X31 + 0x20]
	0x01CC54E0 LDR X21, [X0 + 0x58]
	0x01CC54E4 CBZ X21, 0x1CC5594
	0x01CC54E8 LDR W8, [X21 + 0x18]
	0x01CC54EC MOV X20, X0
	0x01CC54F0 MOV W19, W1
	0x01CC54F4 CMP W8, 0x1
	0x01CC54F8 B.LT 0x1CC5534
	0x01CC54FC MOV W22, W31
	0x01CC5500 CMP W22, W8
	0x01CC5504 B.CS 0x1CC5590
	0x01CC5508 ADD X8, X21, W22, 0x3, SXTW
	0x01CC550C LDR X0, [X8 + 0x20]
	0x01CC5510 CBZ X0, 0x1CC5594
	0x01CC5514 CMP W19, 0x0
	0x01CC5518 CSET W1, EQ
	0x01CC551C MOV X2, X31
	0x01CC5520 BL 0x3A7B8E0
	0x01CC5524 LDR W8, [X21 + 0x18]
	0x01CC5528 ADD W22, W22, 0x1
	0x01CC552C CMP W22, W8
	0x01CC5530 B.LT 0x1CC5500
	0x01CC5534 LDR X20, [X20 + 0x60]
	0x01CC5538 CBZ X20, 0x1CC5594
	0x01CC553C LDR W8, [X20 + 0x18]
	0x01CC5540 CMP W8, 0x1
	0x01CC5544 B.LT 0x1CC5580
	0x01CC5548 MOV W21, W31
	0x01CC554C CMP W21, W8
	0x01CC5550 B.CS 0x1CC5590
	0x01CC5554 ADD X8, X20, W21, 0x3, SXTW
	0x01CC5558 LDR X0, [X8 + 0x20]
	0x01CC555C CBZ X0, 0x1CC5594
	0x01CC5560 CMP W19, 0x1
	0x01CC5564 CSET W1, EQ
	0x01CC5568 MOV X2, X31
	0x01CC556C BL 0x3A7B8E0
	0x01CC5570 LDR W8, [X20 + 0x18]
	0x01CC5574 ADD W21, W21, 0x1
	0x01CC5578 CMP W21, W8
	0x01CC557C B.LT 0x1CC554C
	0x01CC5580 LDP X20, X19, [X31 + 0x20]
	0x01CC5584 LDP X22, X21, [X31 + 0x10]
	0x01CC5588 LDR X30, [X31], #0x30
	0x01CC558C RET
	0x01CC5590 BL 0x1B6EA24
	0x01CC5594 BL 0x1B6EA1C
	0x01CC5598 LDR X0, [X0 + 0x18]
	0x01CC559C RET
	0x01CC55A0 STP X30, X19, [X31 - 0x10]!
	0x01CC55A4 ADRP X0, 0x2288000
	0x01CC55A8 LDR X0, [X0 + 0x990]
	0x01CC55AC BL 0x1B6E804
	0x01CC55B0 BL 0x1B6EA0C
	0x01CC55B4 MOV X1, X31
	0x01CC55B8 MOV X19, X0
	0x01CC55BC BL 0x31E99B4
	0x01CC55C0 ADRP X0, 0x228A000
	0x01CC55C4 LDR X0, [X0 + 0x440]
	0x01CC55C8 BL 0x1B6E804
	0x01CC55CC MOV X1, X0
	0x01CC55D0 MOV X0, X19
	0x01CC55D4 BL 0x1B6E8E8
	0x01CC55D8 LDR X0, [X0 + 0x18]
	0x01CC55DC RET
	0x01CC55E0 LDR W0, [X0 + 0x90]
	0x01CC55E4 RET
	0x01CC55E8 LDR X0, [X0 + 0x48]
	0x01CC55EC RET
	0x01CC55F0 STP X30, X21, [X31 - 0x20]!
	0x01CC55F4 STP X20, X19, [X31 + 0x10]
	0x01CC55F8 ADRP X20, 0x255E000
	0x01CC55FC ADRP X21, 0x228A000
	0x01CC5600 LDRB W8, [X20 + 0x558]
	0x01CC5604 LDR X21, [X21 + 0x448]
	0x01CC5608 MOV X19, X0
	0x01CC560C TBNZ X8, 0x0, 0x1CC5624
	0x01CC5610 ADRP X0, 0x228A000
	0x01CC5614 LDR X0, [X0 + 0x448]
	0x01CC5618 BL 0x1B6E7F0
	0x01CC561C MOVZ W8, 0x1
	0x01CC5620 STRB W8, [X20 + 0x558]
	0x01CC5624 LDR X0, [X21]
	0x01CC5628 BL 0x1B6EA0C
	0x01CC562C MOV X1, X31
	0x01CC5630 MOV X20, X0
	0x01CC5634 BL 0x32276F8
	0x01CC5638 STR W31, [X20 + 0x10]
	0x01CC563C STR X19, [X20 + 0x20]
	0x01CC5640 MOV X0, X20
	0x01CC5644 LDP X20, X19, [X31 + 0x10]
	0x01CC5648 LDP X30, X21, [X31], #0x20
	0x01CC564C RET
	0x01CC5650 STR X30, [X31 - 0x20]!
	0x01CC5654 STP X20, X19, [X31 + 0x10]
	0x01CC5658 MOV W19, W1
	0x01CC565C MOV X1, X31
	0x01CC5660 MOV X20, X0
	0x01CC5664 BL 0x32276F8
	0x01CC5668 STR W19, [X20 + 0x10]
	0x01CC566C LDP X20, X19, [X31 + 0x10]
	0x01CC5670 LDR X30, [X31], #0x20
	0x01CC5674 RET
	0x01CC5678 STR X30, [X31 - 0x20]!
	0x01CC567C STP X20, X19, [X31 + 0x10]
	0x01CC5680 MOV X19, X0
	0x01CC5684 LDR X0, [X0 + 0x128]
	0x01CC5688 CBZ X0, 0x1CC5760
	0x01CC568C MOV X1, X31
	0x01CC5690 BL 0x3AA7658
	0x01CC5694 LDR X0, [X19 + 0x130]
	0x01CC5698 STR S0, [X19 + 0x168]
	0x01CC569C STR S1, [X19 + 0x16C]
	0x01CC56A0 STR S2, [X19 + 0x170]
	0x01CC56A4 CBZ X0, 0x1CC5760
	0x01CC56A8 MOV X1, X31
	0x01CC56AC BL 0x3AA7658
	0x01CC56B0 LDR X0, [X19 + 0x128]
	0x01CC56B4 STR S0, [X19 + 0x174]
	0x01CC56B8 STR S1, [X19 + 0x178]
	0x01CC56BC STR S2, [X19 + 0x17C]
	0x01CC56C0 CBZ X0, 0x1CC5760
	0x01CC56C4 LDR X20, [X19 + 0x148]
	0x01CC56C8 MOV X1, X31
	0x01CC56CC BL 0x3AA7658
	0x01CC56D0 CBZ X20, 0x1CC5760
	0x01CC56D4 MOV X0, X20
	0x01CC56D8 MOV X1, X31
	0x01CC56DC BL 0x3AA8C24
	0x01CC56E0 LDR X0, [X19 + 0x130]
	0x01CC56E4 STR S0, [X19 + 0x150]
	0x01CC56E8 STR S1, [X19 + 0x154]
	0x01CC56EC STR S2, [X19 + 0x158]
	0x01CC56F0 CBZ X0, 0x1CC5760
	0x01CC56F4 LDR X20, [X19 + 0x148]
	0x01CC56F8 MOV X1, X31
	0x01CC56FC BL 0x3AA7658
	0x01CC5700 CBZ X20, 0x1CC5760
	0x01CC5704 MOV X0, X20
	0x01CC5708 MOV X1, X31
	0x01CC570C BL 0x3AA8C24
	0x01CC5710 LDR X0, [X19 + 0xF0]
	0x01CC5714 STR S0, [X19 + 0x15C]
	0x01CC5718 STR S1, [X19 + 0x160]
	0x01CC571C STR S2, [X19 + 0x164]
	0x01CC5720 CBZ X0, 0x1CC5760
	0x01CC5724 MOV X1, X31
	0x01CC5728 BL 0x3AA78CC
	0x01CC572C LDR X8, [X19 + 0x108]
	0x01CC5730 STR S0, [X19 + 0x118]
	0x01CC5734 CBZ X8, 0x1CC5760
	0x01CC5738 LDR W9, [X8 + 0x18]
	0x01CC573C CBZ W9, 0x1CC5764
	0x01CC5740 LDR X0, [X8 + 0x20]
	0x01CC5744 CBZ X0, 0x1CC5760
	0x01CC5748 MOV X1, X31
	0x01CC574C BL 0x3AA7C78
	0x01CC5750 STR S0, [X19 + 0x11C]
	0x01CC5754 LDP X20, X19, [X31 + 0x10]
	0x01CC5758 LDR X30, [X31], #0x20
	0x01CC575C RET
	0x01CC5760 BL 0x1B6EA1C
	0x01CC5764 BL 0x1B6EA24
	0x01CC5768 STP X30, X19, [X31 - 0x10]!
	0x01CC576C LDR W8, [X0 + 0x90]
	0x01CC5770 MOV X19, X0
	0x01CC5774 CBNZ W8, 0x1CC5788
	0x01CC5778 LDRB W8, [X19 + 0x199]
	0x01CC577C CBNZ W8, 0x1CC5788
	0x01CC5780 MOV X0, X19
	0x01CC5784 BL 0x1CC2684
	0x01CC5788 LDRB W8, [X19 + 0x198]
	0x01CC578C CBZ W8, 0x1CC579C
	0x01CC5790 LDR V0, [X19 + 0x19C]
	0x01CC5794 MOV X0, X19
	0x01CC5798 BL 0x1CBA280
	0x01CC579C MOV X0, X19
	0x01CC57A0 LDP X30, X19, [X31], #0x10
	0x01CC57A4 B 0x1CC57A8
	0x01CC57A8 SUB X31, X31, 0xA0
	0x01CC57AC STP D13, D12, [X31 + 0x40]
	0x01CC57B0 STP D11, D10, [X31 + 0x50]
	0x01CC57B4 STP D9, D8, [X31 + 0x60]
	0x01CC57B8 STR X30, [X31 + 0x70]
	0x01CC57BC STP X22, X21, [X31 + 0x80]
	0x01CC57C0 STP X20, X19, [X31 + 0x90]
	0x01CC57C4 ADRP X21, 0x255E000
	0x01CC57C8 LDR V8, [X0 + 0x180]
	0x01CC57CC LDRB W8, [X21 + 0x43F]
	0x01CC57D0 LDR V9, [X0 + 0x188]
	0x01CC57D4 MOV X19, X0
	0x01CC57D8 ADD X20, X0, 0x168
	0x01CC57DC CBNZ W8, 0x1CC57F4
	0x01CC57E0 ADRP X0, 0x2288000
	0x01CC57E4 LDR X0, [X0 + 0x480]
	0x01CC57E8 BL 0x1B6E7F0
	0x01CC57EC MOVZ W8, 0x1
	0x01CC57F0 STRB W8, [X21 + 0x43F]
	0x01CC57F4 ADRP X21, 0x2288000
	0x01CC57F8 LDR X21, [X21 + 0x480]
	0x01CC57FC LDR V0, [X19 + 0x124]
	0x01CC5800 FMOV S1, 1
	0x01CC5804 FMOV S3, W31
	0x01CC5808 LDR X8, [X21]
	0x01CC580C FMIN S1, S0, S1
	0x01CC5810 FCMP S0, 0x0
	0x01CC5814 FCSEL S1, S1, S3, PL
	0x01CC5818 LDR X9, [X8 + 0xB8]
	0x01CC581C LDR V3, [X19 + 0x194]
	0x01CC5820 LDR V0, [X9]
	0x01CC5824 LDR V2, [X9 + 0x8]
	0x01CC5828 FSUB V0.2S, V0.2S, V8.2S
	0x01CC582C FSUB S2, S2, S9
	0x00000000 INVALID
	0x01CC5834 FMUL S2, S2, S1
	0x01CC5838 FADD V0.2S, V8.2S, V0.2S
	0x01CC583C FADD S2, S9, S2
	0x01CC5840 STR D0, [X19 + 0x180]
	0x01CC5844 STR S2, [X19 + 0x188]
	0x01CC5848 LDR X8, [X8 + 0xB8]
	0x01CC584C LDUR V0, [X20 + 0x24]
	0x01CC5850 LDR V2, [X8]
	0x01CC5854 LDR V4, [X8 + 0x8]
	0x01CC5858 FSUB V2.2S, V2.2S, V0.2S
	0x00000000 INVALID
	0x01CC5860 FADD V0.2S, V0.2S, V2.2S
	0x01CC5864 STUR D0, [X20 + 0x24]
	0x01CC5868 LDR X0, [X19 + 0x148]
	0x01CC586C FSUB S0, S4, S3
	0x01CC5870 FMUL S0, S0, S1
	0x01CC5874 FADD S0, S3, S0
	0x01CC5878 STR S0, [X19 + 0x194]
	0x01CC587C CBZ X0, 0x1CC5A80
	0x01CC5880 LDR V2, [X19 + 0x158]
	0x01CC5884 LDR V1, [X19 + 0x154]
	0x01CC5888 LDR V0, [X19 + 0x150]
	0x01CC588C MOV X1, X31
	0x01CC5890 BL 0x3AA5F54
	0x01CC5894 LDR X0, [X19 + 0x148]
	0x01CC5898 STR D0, [X31 + 0x30]
	0x01CC589C STR D1, [X31 + 0x10]
	0x01CC58A0 STR D2, [X31 + 0x20]
	0x01CC58A4 CBZ X0, 0x1CC5A80
	0x01CC58A8 LDR V2, [X19 + 0x164]
	0x01CC58AC LDR V1, [X19 + 0x160]
	0x01CC58B0 LDR V0, [X19 + 0x15C]
	0x01CC58B4 MOV X1, X31
	0x01CC58B8 BL 0x3AA5F54
	0x01CC58BC LDR V7, [X31 + 0x3]
	0x01CC58C0 LDR V17, [X31 + 0x1]
	0x01CC58C4 LDR V16, [X20]
	0x01CC58C8 LDR V6, [X19 + 0x178]
	0x01CC58CC LDR V3, [X19 + 0x120]
	0x01CC58D0 MOV V7.S[1], V17.S[0]
	0x01CC58D4 LDR V17, [X31 + 0x2]
	0x01CC58D8 LDR V4, [X19 + 0x18]
	0x01CC58DC LDR V5, [X19 + 0x190]
	0x01CC58E0 MOV V1.S[1], V2.S[0]
	0x01CC58E4 MOV V7.S[2], V17.S[0]
	0x01CC58E8 MOV V7.S[3], V0.S[0]
	0x01CC58EC FSUB V0.4S, V7.4S, V16.4S
	0x01CC58F0 FSUB V1.2S, V1.2S, V6.2S
	0x00000000 INVALID
	0x00000000 INVALID
	0x01CC58FC FADD V2.4S, V4.4S, V0.4S
	0x01CC5900 FADD V0.2S, V5.2S, V1.2S
	0x01CC5904 MOV X0, X31
	0x01CC5908 STR V16, [X31]
	0x01CC590C STR V2, [X31 + 0x3]
	0x01CC5910 STR V2, [X19 + 0x18]
	0x01CC5914 STR D0, [X19 + 0x190]
	0x01CC5918 BL 0x3AA481C
	0x01CC591C LDR V2, [X31 + 0x3]
	0x01CC5920 LDR V3, [X31]
	0x01CC5924 LDR V8, [X19 + 0x17C]
	0x01CC5928 LDR V11, [X19 + 0x194]
	0x00000000 INVALID
	0x01CC5930 FMUL S0, S0, V2.S[2]
	0x01CC5934 MOV S2, V3.S[2]
	0x01CC5938 FADD V1.2S, V3.2S, V1.2S
	0x01CC593C FADD S0, S2, S0
	0x01CC5940 STR D1, [X19 + 0x168]
	0x01CC5944 STR S0, [X19 + 0x170]
	0x01CC5948 LDUR V9, [X20 + 0xC]
	0x01CC594C LDUR V10, [X20 + 0x24]
	0x01CC5950 MOV X0, X31
	0x01CC5954 BL 0x3AA481C
	0x00000000 INVALID
	0x01CC595C FADD V1.2S, V9.2S, V1.2S
	0x01CC5960 STUR D1, [X20 + 0xC]
	0x01CC5964 LDR X20, [X19 + 0x138]
	0x01CC5968 FMUL S0, S11, S0
	0x01CC596C FADD S0, S8, S0
	0x01CC5970 STR S0, [X19 + 0x17C]
	0x01CC5974 CBZ X20, 0x1CC5A80
	0x01CC5978 LDR V8, [X19 + 0x170]
	0x01CC597C LDR V9, [X19 + 0x16C]
	0x01CC5980 LDR V10, [X19 + 0x168]
	0x01CC5984 MOV X0, X20
	0x01CC5988 MOV X1, X31
	0x01CC598C BL 0x3AA7658
	0x01CC5990 ADRP X22, 0x255E000
	0x01CC5994 LDRB W8, [X22 + 0x442]
	0x01CC5998 FSUB S10, S10, S0
	0x01CC599C FSUB S9, S9, S1
	0x01CC59A0 FSUB S8, S8, S2
	0x01CC59A4 CBNZ W8, 0x1CC59BC
	0x01CC59A8 ADRP X0, 0x2288000
	0x01CC59AC LDR X0, [X0 + 0x480]
	0x01CC59B0 BL 0x1B6E7F0
	0x01CC59B4 MOVZ W8, 0x1
	0x01CC59B8 STRB W8, [X22 + 0x442]
	0x01CC59BC LDR X8, [X21]
	0x01CC59C0 MOV V0.16B, V10.16B
	0x01CC59C4 MOV V1.16B, V9.16B
	0x01CC59C8 MOV V2.16B, V8.16B
	0x01CC59CC LDR X8, [X8 + 0xB8]
	0x01CC59D0 MOV X0, X31
	0x01CC59D4 LDP S3, S4, [X8 + 0x18]
	0x01CC59D8 LDR V5, [X8 + 0x20]
	0x01CC59DC BL 0x3A92B78
	0x01CC59E0 MOV X0, X20
	0x01CC59E4 MOV X1, X31
	0x01CC59E8 BL 0x3AA7878
	0x01CC59EC LDR X20, [X19 + 0x140]
	0x01CC59F0 CBZ X20, 0x1CC5A80
	0x01CC59F4 LDR V11, [X19 + 0x17C]
	0x01CC59F8 LDR V12, [X19 + 0x178]
	0x01CC59FC LDR V13, [X19 + 0x174]
	0x01CC5A00 MOV X0, X20
	0x01CC5A04 MOV X1, X31
	0x01CC5A08 BL 0x3AA7658
	0x01CC5A0C LDRB W8, [X22 + 0x442]
	0x01CC5A10 MOV V8.16B, V0.16B
	0x01CC5A14 MOV V9.16B, V1.16B
	0x01CC5A18 MOV V10.16B, V2.16B
	0x01CC5A1C CBNZ W8, 0x1CC5A34
	0x01CC5A20 ADRP X0, 0x2288000
	0x01CC5A24 LDR X0, [X0 + 0x480]
	0x01CC5A28 BL 0x1B6E7F0
	0x01CC5A2C MOVZ W8, 0x1
	0x01CC5A30 STRB W8, [X22 + 0x442]
	0x01CC5A34 LDR X8, [X21]
	0x01CC5A38 FSUB S2, S11, S10
	0x01CC5A3C FSUB S1, S12, S9
	0x01CC5A40 FSUB S0, S13, S8
	0x01CC5A44 LDR X8, [X8 + 0xB8]
	0x01CC5A48 MOV X0, X31
	0x01CC5A4C LDP S3, S4, [X8 + 0x18]
	0x01CC5A50 LDR V5, [X8 + 0x20]
	0x01CC5A54 BL 0x3A92B78
	0x01CC5A58 MOV X0, X20
	0x01CC5A5C LDP X20, X19, [X31 + 0x90]
	0x01CC5A60 LDP X22, X21, [X31 + 0x80]
	0x01CC5A64 LDR X30, [X31 + 0x70]
	0x01CC5A68 LDP D9, D8, [X31 + 0x60]
	0x01CC5A6C LDP D11, D10, [X31 + 0x50]
	0x01CC5A70 LDP D13, D12, [X31 + 0x40]
	0x01CC5A74 MOV X1, X31
	0x01CC5A78 ADD X31, X31, 0xA0
	0x01CC5A7C B 0x3AA7878
	0x01CC5A80 BL 0x1B6EA1C
	0x01CC5A84 LDR W8, [X0 + 0x90]
	0x01CC5A88 CMP W8, 0x1
	0x01CC5A8C B.NE 0x1CC5A94
	0x01CC5A90 B 0x1CC5A98
	0x01CC5A94 RET
	0x01CC5A98 SUB X31, X31, 0xA0
	0x01CC5A9C STP D15, D14, [X31 + 0x20]
	0x01CC5AA0 STP D13, D12, [X31 + 0x30]
	0x01CC5AA4 STP D11, D10, [X31 + 0x40]
	0x01CC5AA8 STP D9, D8, [X31 + 0x50]
	0x01CC5AAC STP X30, X25, [X31 + 0x60]
	0x01CC5AB0 STP X24, X23, [X31 + 0x70]
	0x01CC5AB4 STP X22, X21, [X31 + 0x80]
	0x01CC5AB8 STP X20, X19, [X31 + 0x90]
	0x01CC5ABC ADRP X20, 0x255E000
	0x01CC5AC0 LDRB W8, [X20 + 0x55A]
	0x01CC5AC4 MOV X19, X0
	0x01CC5AC8 TBNZ X8, 0x0, 0x1CC5AE0
	0x01CC5ACC ADRP X0, 0x2288000
	0x01CC5AD0 LDR X0, [X0 + 0x4C0]
	0x01CC5AD4 BL 0x1B6E7F0
	0x01CC5AD8 MOVZ W8, 0x1
	0x01CC5ADC STRB W8, [X20 + 0x55A]
	0x01CC5AE0 ADRP X21, 0x255E000
	0x01CC5AE4 LDR V8, [X19 + 0xA8]
	0x01CC5AE8 LDRB W8, [X21 + 0x43F]
	0x01CC5AEC LDR V9, [X19 + 0xB0]
	0x01CC5AF0 CBNZ W8, 0x1CC5B08
	0x01CC5AF4 ADRP X0, 0x2288000
	0x01CC5AF8 LDR X0, [X0 + 0x480]
	0x01CC5AFC BL 0x1B6E7F0
	0x01CC5B00 MOVZ W8, 0x1
	0x01CC5B04 STRB W8, [X21 + 0x43F]
	0x01CC5B08 ADRP X22, 0x2288000
	0x01CC5B0C LDR X22, [X22 + 0x480]
	0x01CC5B10 MOVZ W10, 0xCCCD
	0x01CC5B14 MOVK W10, 0x3E4C0000
	0x01CC5B18 UNIMPLEMENTED
	0x01CC5B1C LDR X8, [X22]
	0x01CC5B20 LDR X9, [X8 + 0xB8]
	0x01CC5B24 LDR V1, [X9]
	0x01CC5B28 LDR V2, [X9 + 0x8]
	0x01CC5B2C ADRP X9, 0xFFFFFFFFFEDE4000
	0x01CC5B30 LDR V3, [X9 + 0xD30]
	0x01CC5B34 FSUB V1.2S, V1.2S, V8.2S
	0x01CC5B38 FSUB S2, S2, S9
	0x00000000 INVALID
	0x01CC5B40 FMUL S2, S2, S3
	0x01CC5B44 FADD V8.2S, V8.2S, V1.2S
	0x01CC5B48 FADD S9, S9, S2
	0x01CC5B4C STR D8, [X19 + 0xA8]
	0x01CC5B50 STR S9, [X19 + 0xB0]
	0x01CC5B54 LDR X8, [X8 + 0xB8]
	0x01CC5B58 LDUR V1, [X19 + 0xB4]
	0x01CC5B5C LDR V2, [X19 + 0xBC]
	0x01CC5B60 LDR V4, [X8]
	0x01CC5B64 LDR V5, [X8 + 0x8]
	0x01CC5B68 LDR X8, [X19 + 0xA0]
	0x01CC5B6C FSUB V4.2S, V4.2S, V1.2S

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], D10
	003 Move [X31+40], D9
	004 Move [X31+48], D8
	005 Move [X31+56], X30
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X20, 0x255F000
	011 Move W8, [X20+1365]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0x2289000
	018 Move X0, [X0+2464]
	019 Call 0x1B6F7F0
	020 Move X0, 0x2289000
	021 Move X0, [X0+1456]
	022 Call 0x1B6F7F0
	023 Move X0, 0x2289000
	024 Move X0, [X0+1464]
	025 Call 0x1B6F7F0
	026 Move X0, 0x2289000
	027 Move X0, [X0+1472]
	028 Call 0x1B6F7F0
	029 Move X0, 0x228A000
	030 Move X0, [X0+408]
	031 Call 0x1B6F7F0
	032 Move X0, 0x228B000
	033 Move X0, [X0+792]
	034 Call 0x1B6F7F0
	035 Move X0, 0x228B000
	036 Move X0, [X0+880]
	037 Call 0x1B6F7F0
	038 Move X0, 0x228B000
	039 Move X0, [X0+1032]
	040 Call 0x1B6F7F0
	041 Move X0, 0x228A000
	042 Move X0, [X0+2616]
	043 Call 0x1B6F7F0
	044 Move X0, 0x2289000
	045 Move X0, [X0+1152]
	046 Call 0x1B6F7F0
	047 Move X0, 0x228A000
	048 Move X0, [X0+744]
	049 Call 0x1B6F7F0
	050 Move X0, 0x228A000
	051 Move X0, [X0+2640]
	052 Call 0x1B6F7F0
	053 Move X0, 0x228B000
	054 Move X0, [X0+1040]
	055 Call 0x1B6F7F0
	056 Move X0, 0x228B000
	057 Move X0, [X0+1048]
	058 Call 0x1B6F7F0
	059 Move W8, 1
	060 Move [X20+1365], W8
	061 Move [X31+16], X31
	062 Move [X31+24], X31
	063 Move W8, [X19+16]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X20, [X19+32]
	066 Move X9, -18710528
	067 Add X9, X9, 2328
	068 NotImplemented "Instruction ADR not yet implemented."
	069 Move W11, [X9]
	070 Add X10, X10, X11
	071 CallNoReturn X10
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W8, TEMP
	075 Move [X19+16], W8
	076 Compare X20, 0
	077 JumpIfEqual {478}
	078 Move W21, 1
	079 Move [X20+132], W21
	080 Move [X19+24], X31
	081 Move [X19+16], W21
	082 Move TEMP, 0
	083 Not TEMP
	084 Move W8, TEMP
	085 Move [X19+16], W8
	086 Move TEMP, 0
	087 Not TEMP
	088 Move W8, TEMP
	089 Move [X19+16], W8
	090 Move X8, 0x228B000
	091 Move X8, [X8+1032]
	092 Move X0, [X8]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1B6F8F8
	097 Move W0, W31
	098 Move X1, X31
	099 Call SpectatorManager.SetSpectator, X0
	100 Compare X20, 0
	101 JumpIfEqual {476}
	102 Move W1, 100
	103 Move X0, X20
	104 Call PlayerController.SetCurrentHealth, X0, X1
	105 Move [X20+132], W31
	106 Move X19, 0x228A000
	107 Move X19, [X19+408]
	108 Move X0, [X19]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {114}
	112 Call 0x1B6F8F8
	113 Move X0, [X19]
	114 Move X8, [X0+184]
	115 Move X8, [X8+32]
	116 Compare X8, 0
	117 JumpIfEqual {123}
	118 Move X0, [X8+64]
	119 Move X9, [X8+24]
	120 Move X2, [X8+40]
	121 Move W1, W31
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Move X0, [X20+56]
	124 Compare X0, 0
	125 JumpIfEqual {477}
	126 Move S0, W31
	127 Move S1, W31
	128 Move S2, W31
	129 Move W1, W31
	130 Call PlayerView.SetRagdoll, X0, X1, X2
	131 Move X19, 0x228B000
	132 Move X19, [X19+792]
	133 Move X8, [X19]
	134 Move X8, [X8+184]
	135 Move W8, [X8]
	136 Compare W8, 0
	137 JumpIfEqual {340}
	138 Move X8, 0x228A000
	139 Move X8, [X8+2616]
	140 Move X0, [X8]
	141 Move W8, [X0+224]
	142 Compare W8, 0
	143 JumpIfNotEqual {145}
	144 Call 0x1B6F8F8
	145 Add X1, X31, 24
	146 Move W0, W31
	147 Move X2, X31
	148 Call TeleportTarget.TryGetTeleportTarget, X0, X1
	149 Move X8, [X19]
	150 Move X8, [X8+184]
	151 Move X19, [X8+8]
	152 Move TEMP, X0
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfNotEqual {372}
	156 Move X0, [X31+24]
	157 Compare X0, 0
	158 JumpIfEqual {485}
	159 Move X1, X31
	160 Call Transform.get_position, X0
	161 Move X0, [X31+24]
	162 Compare X0, 0
	163 JumpIfEqual {487}
	164 Move V8, V0
	165 Move V9, V1
	166 Move V10, V2
	167 Move X1, X31
	168 Call Transform.get_rotation, X0
	169 Compare X19, 0
	170 JumpIfEqual {488}
	171 Move V4, V0
	172 Move V5, V1
	173 Move V6, V2
	174 Move V7, V3
	175 Move X0, X19
	176 Move V0, V8
	177 Move V1, V9
	178 Move V2, V10
	179 Move V3, V4
	180 Move V4, V5
	181 Move V5, V6
	182 Move V6, V7
	183 Move X1, X31
	184 Call Transform.SetPositionAndRotation, X0, X1, X2
	185 Move TEMP, 0
	186 Not TEMP
	187 Move W8, TEMP
	188 Move [X19+16], W8
	189 Move X8, 0x228B000
	190 Move X8, [X8+1032]
	191 Move X0, [X8]
	192 Move W8, [X0+224]
	193 Compare W8, 0
	194 JumpIfNotEqual {196}
	195 Call 0x1B6F8F8
	196 Move W0, W31
	197 Move X1, X31
	198 Call SpectatorManager.SetSpectator, X0
	199 Move X8, 0x228B000
	200 Move X8, [X8+880]
	201 Move X0, [X8]
	202 Move W8, [X0+224]
	203 Compare W8, 0
	204 JumpIfNotEqual {206}
	205 Call 0x1B6F8F8
	206 Move S0, 1
	207 Move S1, 0.5
	208 Move S2, 1
	209 Move W3, 1
	210 Move X0, X31
	211 Move X1, X31
	212 Move X2, X31
	213 Move X4, X31
	214 Call ScreenEffectManager.FadeInOut, V0, V1, V2, X0, X1, X2, X3
	215 Move X8, 0x228A000
	216 Move X8, [X8+744]
	217 Move X0, [X8]
	218 Call 0x1B6FA0C
	219 Move X8, -18984960
	220 Move V0, [X8+2596]
	221 Move X1, X31
	222 Move X20, X0
	223 Call WaitForSeconds..ctor, X0, V0
	224 Move [X19+24], X20
	225 Move W8, 4
	226 Move TEMP, 0
	227 Not TEMP
	228 Move W8, TEMP
	229 Move [X19+16], W8
	230 Move X21, 0x228A000
	231 Move X21, [X21+408]
	232 Move X0, [X21]
	233 Move W8, [X0+224]
	234 Compare W8, 0
	235 JumpIfNotEqual {238}
	236 Call 0x1B6F8F8
	237 Move X0, [X21]
	238 Move X8, [X0+184]
	239 Move X8, [X8+32]
	240 Compare X8, 0
	241 JumpIfEqual {247}
	242 Move X0, [X8+64]
	243 Move X9, [X8+24]
	244 Move X2, [X8+40]
	245 Move W1, 1
	246 NotImplemented "Instruction BLR not yet implemented."
	247 Move X8, 0x2289000
	248 Move X8, [X8+1472]
	249 Move X0, [X8]
	250 Call 0x1B6FA0C
	251 Move X8, 0x2289000
	252 Move X8, [X8+1464]
	253 Move X21, X0
	254 Move X1, [X8]
	255 Call Dictionary`2<Object, Object>..ctor, X0
	256 Compare X20, 0
	257 JumpIfEqual {479}
	258 Move X0, X20
	259 Move X1, X31
	260 Call Component.get_transform, X0
	261 Compare X0, 0
	262 JumpIfEqual {480}
	263 Move X1, X31
	264 Call Transform.get_position, X0
	265 Move X8, 0x2289000
	266 Move X8, [X8+1152]
	267 Move [X31], S0
	268 Move [X31+8], S1
	269 Move [X31+8], S2
	270 Move X0, [X8]
	271 Add X1, X31, 0
	272 Call 0x1B6F900
	273 Compare X21, 0
	274 JumpIfEqual {481}
	275 Move X8, 0x228A000
	276 Move X8, [X8+2640]
	277 Move X22, 0x2289000
	278 Move X22, [X22+1456]
	279 Move X2, X0
	280 Move X1, [X8]
	281 Move X3, [X22]
	282 Move X0, X21
	283 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	284 Move X8, 0x228B000
	285 Move X2, [X19+40]
	286 Move X8, [X8+1040]
	287 Move X3, [X22]
	288 Move X1, [X8]
	289 Move X0, X21
	290 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	291 Move X8, 0x2289000
	292 Move X8, [X8+2464]
	293 Move X0, [X8]
	294 Move W8, [X0+224]
	295 Compare W8, 0
	296 JumpIfNotEqual {298}
	297 Call 0x1B6F8F8
	298 Move X8, 0x228B000
	299 Move X8, [X8+1048]
	300 Move X0, [X8]
	301 Move X1, X21
	302 Call Analytics.Track, X0, X1
	303 Move X0, [X20+56]
	304 Compare X0, 0
	305 JumpIfEqual {482}
	306 Move S1, [X19+52]
	307 Move S2, [X19+56]
	308 Move V0, [X19+48]
	309 Move W1, 1
	310 Call PlayerView.SetRagdoll, X0, X1, X2
	311 Move X8, 0x228B000
	312 Move X8, [X8+792]
	313 Move X8, [X8]
	314 Move X8, [X8+184]
	315 Move W8, [X8]
	316 Compare W8, 0
	317 JumpIfEqual {397}
	318 Move X8, 0x228B000
	319 Move X8, [X8+1032]
	320 Move X0, [X8]
	321 Move W8, [X0+224]
	322 Compare W8, 0
	323 JumpIfNotEqual {325}
	324 Call 0x1B6F8F8
	325 Move W0, 1
	326 Move X1, X31
	327 Move W21, 1
	328 Call SpectatorManager.SetSpectator, X0
	329 Move X8, 0x228A000
	330 Move X8, [X8+744]
	331 Move X0, [X8]
	332 Call 0x1B6FA0C
	333 Move S0, 4
	334 Move X1, X31
	335 Move X20, X0
	336 Call WaitForSeconds..ctor, X0, V0
	337 Move W8, 2
	338 Move [X19+24], X20
	339 Move [X19+16], W8
	340 Move X0, [X20+32]
	341 Compare X0, 0
	342 JumpIfEqual {483}
	343 Move W1, 1
	344 Move X2, X31
	345 Call Behaviour.set_enabled, X0, X1
	346 Move X0, [X20+48]
	347 Compare X0, 0
	348 JumpIfEqual {484}
	349 Move W1, 1
	350 Move X2, X31
	351 Call Rigidbody.set_useGravity, X0, X1
	352 Move X8, 0x228A000
	353 Move X8, [X8+2616]
	354 Move X0, [X8]
	355 Move W8, [X0+224]
	356 Compare W8, 0
	357 JumpIfNotEqual {359}
	358 Call 0x1B6F8F8
	359 Add X1, X31, 16
	360 Move W0, W31
	361 Move X2, X31
	362 Call TeleportTarget.TryGetTeleportTarget, X0, X1
	363 Move TEMP, X0
	364 And TEMP, TEMP, 1
	365 Compare TEMP, 1
	366 JumpIfNotEqual {455}
	367 Move X1, [X31+16]
	368 Move X0, X20
	369 Move W2, W31
	370 Call PlayerController.Respawn, X0, X1, X2
	371 Move W21, W31
	372 Move S8, [X20+236]
	373 Move S9, [X20+240]
	374 Move S10, [X20+244]
	375 Move S0, [X20+248]
	376 Move S1, [X20+252]
	377 Move S2, [X20+256]
	378 Move X0, X31
	379 Call Quaternion.LookRotation, X0
	380 Compare X19, 0
	381 JumpIfEqual {486}
	382 Move V4, V0
	383 Move V5, V1
	384 Move V6, V2
	385 Move V7, V3
	386 Move X0, X19
	387 Move V0, V8
	388 Move V1, V9
	389 Move V2, V10
	390 Move V3, V4
	391 Move V4, V5
	392 Move V5, V6
	393 Move V6, V7
	394 Move X1, X31
	395 Call Transform.SetPositionAndRotation, X0, X1, X2
	396 Move W21, W31
	397 Compare X20, 0
	398 JumpIfEqual {489}
	399 Move X0, [X20+32]
	400 Compare X0, 0
	401 JumpIfEqual {490}
	402 Move W1, W31
	403 Move X2, X31
	404 Call Behaviour.set_enabled, X0, X1
	405 Move X22, 0x255F000
	406 Move W8, [X22+1087]
	407 Move X21, [X20+48]
	408 Compare W8, 0
	409 JumpIfNotEqual {415}
	410 Move X0, 0x2289000
	411 Move X0, [X0+1152]
	412 Call 0x1B6F7F0
	413 Move W8, 1
	414 Move [X22+1087], W8
	415 Compare X21, 0
	416 JumpIfEqual {491}
	417 Move X8, 0x2289000
	418 Move X8, [X8+1152]
	419 Move X8, [X8]
	420 Move X8, [X8+184]
	421 Move S1, [X8+4]
	422 Move S2, [X8+8]
	423 Move V0, [X8]
	424 Move X0, X21
	425 Move X1, X31
	426 Call Rigidbody.set_velocity, X0, X1
	427 Move X0, [X20+48]
	428 Compare X0, 0
	429 JumpIfEqual {492}
	430 Move W1, W31
	431 Move X2, X31
	432 Call Rigidbody.set_useGravity, X0, X1
	433 Move X8, 0x228B000
	434 Move X8, [X8+1032]
	435 Move X0, [X8]
	436 Move W8, [X0+224]
	437 Compare W8, 0
	438 JumpIfNotEqual {440}
	439 Call 0x1B6F8F8
	440 Move W0, 1
	441 Move X1, X31
	442 Call SpectatorManager.SetSpectator, X0
	443 Move X8, 0x228A000
	444 Move X8, [X8+744]
	445 Move X0, [X8]
	446 Call 0x1B6FA0C
	447 Move S0, 8
	448 Move X1, X31
	449 Move X20, X0
	450 Call WaitForSeconds..ctor, X0, V0
	451 Move W8, 3
	452 Move [X19+24], X20
	453 Move [X19+16], W8
	454 Move W21, 1
	455 Move S0, [X20+236]
	456 Move S1, [X20+240]
	457 Move S2, [X20+244]
	458 Move S3, [X20+248]
	459 Move S4, [X20+252]
	460 Move S5, [X20+256]
	461 Move X0, X20
	462 Move W1, W31
	463 Call PlayerController.Respawn, X0, X1, X2, X3
	464 Move W21, W31
	465 Move W0, W21
	466 Move X20, [X31+80]
	467 Move X19, [X31+88]
	468 Move X22, [X31+64]
	469 Move X21, [X31+72]
	470 Move X30, [X31+56]
	471 Move D9, [X31+40]
	472 Move D8, [X31+48]
	473 Move V10, [X31+32]
	474 Add X31, X31, 96
	475 Return X0
	476 Call 0x1B6FA1C
	477 Call 0x1B6FA1C
	478 Call 0x1B6FA1C
	479 Call 0x1B6FA1C
	480 Call 0x1B6FA1C
	481 Call 0x1B6FA1C
	482 Call 0x1B6FA1C
	483 Call 0x1B6FA1C
	484 Call 0x1B6FA1C
	485 Call 0x1B6FA1C
	486 Call 0x1B6FA1C
	487 Call 0x1B6FA1C
	488 Call 0x1B6FA1C
	489 Call 0x1B6FA1C
	490 Call 0x1B6FA1C
	491 Call 0x1B6FA1C
	492 Call 0x1B6FA1C
	493 Move X21, X0
	494 NotImplemented "Instruction CMP not yet implemented."
	495 Move X0, X21
	496 Call 0x3D1A840
	497 Move X20, X0
	498 Move X0, 0x2289000
	499 Move X0, [X0+1648]
	500 Call 0x1B6F804
	501 Move X8, [X20]
	502 Move X1, [X8]
	503 Call 0x1B6FD6C
	504 Move TEMP, X0
	505 And TEMP, TEMP, 1
	506 Compare TEMP, 1
	507 JumpIfNotEqual {531}
	508 Move X20, [X20]
	509 Call 0x3D1A850
	510 Move X0, 0x2289000
	511 Move X0, [X0+1576]
	512 Call 0x1B6F804
	513 Move W8, [X0+224]
	514 Compare W8, 0
	515 JumpIfNotEqual {517}
	516 Call 0x1B6F8F8
	517 Move X0, 0x228B000
	518 Move X0, [X0+1056]
	519 Call 0x1B6F804
	520 Move X21, X0
	521 Move X0, 0x228B000
	522 Move X0, [X0+1064]
	523 Call 0x1B6F804
	524 Move X3, X0
	525 Move W4, 414
	526 Move X0, X20
	527 Move X1, X31
	528 Move X2, X21
	529 Move X5, X31
	530 Call Log.Error, X0, X1, X2, X3, X4
	531 Move W0, 8
	532 Call 0x3D1A860
	533 Move X8, [X20]
	534 Move [X0], X8
	535 Move X1, 0x2058000
	536 Add X1, X1, 3032
	537 Move X2, X31
	538 Call 0x3D1A870
	539 Move X21, X0
	540 Call 0x3D1A850
	541 NotImplemented "Instruction CMP not yet implemented."
	542 Move X21, X0
	543 Move X0, X21
	544 Call 0x3D1A840
	545 Move X20, X0
	546 Move X0, 0x2289000
	547 Move X0, [X0+1648]
	548 Call 0x1B6F804
	549 Move X8, [X20]
	550 Move X1, [X8]
	551 Call 0x1B6FD6C
	552 Move TEMP, X0
	553 And TEMP, TEMP, 1
	554 Compare TEMP, 1
	555 JumpIfNotEqual {579}
	556 Move X20, [X20]
	557 Call 0x3D1A850
	558 Move X0, 0x2289000
	559 Move X0, [X0+1576]
	560 Call 0x1B6F804
	561 Move W8, [X0+224]
	562 Compare W8, 0
	563 JumpIfNotEqual {565}
	564 Call 0x1B6F8F8
	565 Move X0, 0x228B000
	566 Move X0, [X0+1056]
	567 Call 0x1B6F804
	568 Move X21, X0
	569 Move X0, 0x228B000
	570 Move X0, [X0+1064]
	571 Call 0x1B6F804
	572 Move X3, X0
	573 Move W4, 425
	574 Move X0, X20
	575 Move X1, X31
	576 Move X2, X21
	577 Move X5, X31
	578 Call Log.Error, X0, X1, X2, X3, X4
	579 Move W0, 8
	580 Call 0x3D1A860
	581 Move X8, [X20]
	582 Move [X0], X8
	583 Move X1, 0x2058000
	584 Add X1, X1, 3032
	585 Move X2, X31
	586 Call 0x3D1A870
	587 Move X21, X0
	588 Call 0x3D1A850
	589 Move X21, X0
	590 NotImplemented "Instruction CMP not yet implemented."
	591 Move X0, X21
	592 Call 0x3D1A840
	593 Move X21, X0
	594 Move X0, 0x2289000
	595 Move X0, [X0+1648]
	596 Call 0x1B6F804
	597 Move X8, [X21]
	598 Move X1, [X8]
	599 Call 0x1B6FD6C
	600 Move TEMP, X0
	601 And TEMP, TEMP, 1
	602 Compare TEMP, 1
	603 JumpIfNotEqual {627}
	604 Move X21, [X21]
	605 Call 0x3D1A850
	606 Move X0, 0x2289000
	607 Move X0, [X0+1576]
	608 Call 0x1B6F804
	609 Move W8, [X0+224]
	610 Compare W8, 0
	611 JumpIfNotEqual {613}
	612 Call 0x1B6F8F8
	613 Move X0, 0x228B000
	614 Move X0, [X0+1056]
	615 Call 0x1B6F804
	616 Move X22, X0
	617 Move X0, 0x228B000
	618 Move X0, [X0+1064]
	619 Call 0x1B6F804
	620 Move X3, X0
	621 Move W4, 392
	622 Move X0, X21
	623 Move X1, X31
	624 Move X2, X22
	625 Move X5, X31
	626 Call Log.Error, X0, X1, X2, X3, X4
	627 Move W0, 8
	628 Call 0x3D1A860
	629 Move X8, [X21]
	630 Move [X0], X8
	631 Move X1, 0x2058000
	632 Add X1, X1, 3032
	633 Move X2, X31
	634 Call 0x3D1A870
	635 Move X21, X0
	636 Call 0x3D1A850
	637 Move X21, X0
	638 NotImplemented "Instruction CMP not yet implemented."
	639 Move X0, X21
	640 Call 0x3D1A840
	641 Move X19, X0
	642 Move X0, 0x2289000
	643 Move X0, [X0+1648]
	644 Call 0x1B6F804
	645 Move X8, [X19]
	646 Move X1, [X8]
	647 Call 0x1B6FD6C
	648 Move TEMP, X0
	649 And TEMP, TEMP, 1
	650 Compare TEMP, 1
	651 JumpIfNotEqual {675}
	652 Move X19, [X19]
	653 Call 0x3D1A850
	654 Move X0, 0x2289000
	655 Move X0, [X0+1576]
	656 Call 0x1B6F804
	657 Move W8, [X0+224]
	658 Compare W8, 0
	659 JumpIfNotEqual {661}
	660 Call 0x1B6F8F8
	661 Move X0, 0x228B000
	662 Move X0, [X0+1056]
	663 Call 0x1B6F804
	664 Move X20, X0
	665 Move X0, 0x228B000
	666 Move X0, [X0+1064]
	667 Call 0x1B6F804
	668 Move X3, X0
	669 Move W4, 468
	670 Move X0, X19
	671 Move X1, X31
	672 Move X2, X20
	673 Move X5, X31
	674 Call Log.Error, X0, X1, X2, X3, X4
	675 Move W0, 8
	676 Call 0x3D1A860
	677 Move X8, [X19]
	678 Move [X0], X8
	679 Move X1, 0x2058000
	680 Add X1, X1, 3032
	681 Move X2, X31
	682 Call 0x3D1A870
	683 Move X21, X0
	684 Call 0x3D1A850
	685 Move X0, X21
	686 Call 0x1C8518C
	687 Call 0x18F56A8

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x01CC5E70 MOV V10.16B, V2.16B
	0x01CC5E74 BL 0x3AA7658

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01CC5E78 LDR X0, [X19 + 0x68]
	0x01CC5E7C CBZ X0, 0x1CC638C
	0x01CC5E80 MOV X1, X31
	0x01CC5E84 MOV V11.16B, V0.16B
	0x01CC5E88 MOV V12.16B, V1.16B
	0x01CC5E8C MOV V13.16B, V2.16B
	0x01CC5E90 BL 0x3AA7658
	0x01CC5E94 ADRP X25, 0x255E000
	0x01CC5E98 LDRB W8, [X25 + 0x441]
	0x01CC5E9C MOV V14.16B, V0.16B
	0x01CC5EA0 MOV V15.16B, V1.16B
	0x01CC5EA4 MOV V8.16B, V2.16B
	0x01CC5EA8 CBNZ W8, 0x1CC5EC0
	0x01CC5EAC ADRP X0, 0x2288000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x2289000
	004 Move X0, [X0+2448]
	005 Call 0x1B6F804
	006 Call 0x1B6FA0C
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x228B000
	011 Move X0, [X0+1072]
	012 Call 0x1B6F804
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1B6F8E8

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01CC5EB0 LDR X0, [X0 + 0x488]
	0x01CC5EB4 BL 0x1B6E7F0

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

