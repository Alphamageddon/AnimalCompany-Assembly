Type: AnimalCompany.InitializeAppAction

Method: System.Void .ctor(AnimalCompany.AppPlatform platform, System.String clientVersion, System.String clientVersionSHA, System.String apiOrigin, System.String apiToken)

Disassembly:
	0x01D37B48 STR W31, [X20 + 0x10]
	0x01D37B4C STR X19, [X20 + 0x20]
	0x01D37B50 MOV X0, X20
	0x01D37B54 LDP X20, X19, [X31 + 0x10]
	0x01D37B58 LDP X30, X21, [X31], #0x20
	0x01D37B5C RET
	0x01D37B60 STR X30, [X31 - 0x20]!
	0x01D37B64 STP X20, X19, [X31 + 0x10]
	0x01D37B68 MOV W19, W1
	0x01D37B6C MOV X1, X31
	0x01D37B70 MOV X20, X0
	0x01D37B74 BL 0x33BDD8C
	0x01D37B78 STR W19, [X20 + 0x10]
	0x01D37B7C LDP X20, X19, [X31 + 0x10]
	0x01D37B80 LDR X30, [X31], #0x20
	0x01D37B84 RET
	0x01D37B88 STP X30, X21, [X31 - 0x20]!
	0x01D37B8C STP X20, X19, [X31 + 0x10]
	0x01D37B90 ADRP X20, 0x26A1000
	0x01D37B94 ADRP X21, 0x23BC000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move W23, W1
	009 Move X1, X31
	010 Move X19, X5
	011 Move X20, X4
	012 Move X21, X3
	013 Move X22, X2
	014 Move X24, X0
	015 Call Object..ctor, X0
	016 Move [X24+20], W23
	017 Move [X24+24], X22
	018 Move [X24+32], X21
	019 Move [X24+40], X20
	020 Move [X24+48], X19
	021 Move X20, [X31+48]
	022 Move X19, [X31+56]
	023 Move X22, [X31+32]
	024 Move X21, [X31+40]
	025 Move X24, [X31+16]
	026 Move X23, [X31+24]
	027 Move X30, [X31+64]
	028 Return 

Method: System.Void Execute(AnimalCompany.AppState state)

Disassembly:
	0x01D37BA0 MOV X19, X1
	0x01D37BA4 TBNZ X8, 0x0, 0x1D37BBC
	0x01D37BA8 ADRP X0, 0x23BC000
	0x01D37BAC LDR X0, [X0 + 0xA50]
	0x01D37BB0 BL 0x1C16CF4
	0x01D37BB4 MOVZ W8, 0x1
	0x01D37BB8 STRB W8, [X20 + 0x6F6]
	0x01D37BBC LDR X0, [X21]
	0x01D37BC0 BL 0x1C16F10
	0x01D37BC4 MOV X1, X31
	0x01D37BC8 MOV X20, X0
	0x01D37BCC BL 0x33BDD8C
	0x01D37BD0 STR W31, [X20 + 0x10]
	0x01D37BD4 STR X19, [X20 + 0x20]
	0x01D37BD8 MOV X0, X20
	0x01D37BDC LDP X20, X19, [X31 + 0x10]
	0x01D37BE0 LDP X30, X21, [X31], #0x20
	0x01D37BE4 RET
	0x01D37BE8 STR X30, [X31 - 0x20]!
	0x01D37BEC STP X20, X19, [X31 + 0x10]
	0x01D37BF0 MOV W19, W1
	0x01D37BF4 MOV X1, X31
	0x01D37BF8 MOV X20, X0
	0x01D37BFC BL 0x33BDD8C
	0x01D37C00 STR W19, [X20 + 0x10]
	0x01D37C04 LDP X20, X19, [X31 + 0x10]
	0x01D37C08 LDR X30, [X31], #0x20
	0x01D37C0C RET
	0x01D37C10 STR X30, [X31 - 0x30]!
	0x01D37C14 STP X22, X21, [X31 + 0x10]
	0x01D37C18 STP X20, X19, [X31 + 0x20]
	0x01D37C1C ADRP X20, 0x26A1000
	0x01D37C20 ADRP X22, 0x23BC000
	0x01D37C24 LDRB W8, [X20 + 0x6F7]
	0x01D37C28 LDR X22, [X22 + 0xA58]
	0x01D37C2C MOV X21, X1
	0x01D37C30 MOV X19, X0
	0x01D37C34 TBNZ X8, 0x0, 0x1D37C4C
	0x01D37C38 ADRP X0, 0x23BC000
	0x01D37C3C LDR X0, [X0 + 0xA58]
	0x01D37C40 BL 0x1C16CF4
	0x01D37C44 MOVZ W8, 0x1
	0x01D37C48 STRB W8, [X20 + 0x6F7]
	0x01D37C4C LDR X0, [X22]
	0x01D37C50 BL 0x1C16F10
	0x01D37C54 MOV X1, X21
	0x01D37C58 MOV X2, X31
	0x01D37C5C MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x26A2000
	006 Move W8, [X21+1767]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x23BD000
	014 Move X0, [X0+2296]
	015 Call 0x1C17CF4
	016 Move X0, 0x23BD000
	017 Move X0, [X0+2304]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1767], W8
	021 Compare X20, 0
	022 JumpIfEqual {62}
	023 Move X0, [X20+104]
	024 Compare X0, 0
	025 JumpIfEqual {62}
	026 Move X8, 0x23BD000
	027 Move X8, [X8+2296]
	028 Move W1, [X19+20]
	029 Move X2, [X8]
	030 Call StatePrimitive`1<Int32Enum>.set_value, X0, X1
	031 Move X0, [X20+112]
	032 Compare X0, 0
	033 JumpIfEqual {62}
	034 Move X21, 0x23BD000
	035 Move X21, [X21+2304]
	036 Move X1, [X19+24]
	037 Move X2, [X21]
	038 Call StatePrimitive`1<Object>.set_value, X0, X1
	039 Move X0, [X20+120]
	040 Compare X0, 0
	041 JumpIfEqual {62}
	042 Move X1, [X19+32]
	043 Move X2, [X21]
	044 Call StatePrimitive`1<Object>.set_value, X0, X1
	045 Move X0, [X20+136]
	046 Compare X0, 0
	047 JumpIfEqual {62}
	048 Move X1, [X19+40]
	049 Move X2, [X21]
	050 Call StatePrimitive`1<Object>.set_value, X0, X1
	051 Move X0, [X20+144]
	052 Compare X0, 0
	053 JumpIfEqual {62}
	054 Move X1, [X19+48]
	055 Move X2, [X21]
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 Call StatePrimitive`1<Object>.set_value, X0, X1
	061 Return 
	062 Call 0x1C17F20

