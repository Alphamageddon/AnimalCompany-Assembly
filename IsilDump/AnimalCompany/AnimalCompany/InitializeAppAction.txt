Type: AnimalCompany.InitializeAppAction

Method: System.Void .ctor(AnimalCompany.AppPlatform platform, System.String clientVersion, System.String clientVersionSHA, System.String apiOrigin, System.String apiToken)

Disassembly:
	0x01C8E734 STP X22, X21, [X31 + 0x10]
	0x01C8E738 STP X20, X19, [X31 + 0x20]
	0x01C8E73C ADRP X23, 0x2595000
	0x01C8E740 ADRP X22, 0x22BF000
	0x01C8E744 ADRP X21, 0x22BF000
	0x01C8E748 ADRP X20, 0x22BF000
	0x01C8E74C LDRB W8, [X23 + 0x3A6]
	0x01C8E750 LDR X22, [X22 + 0x808]
	0x01C8E754 LDR X21, [X21 + 0x810]
	0x01C8E758 LDR X20, [X20 + 0x738]
	0x01C8E75C MOV X19, X0
	0x01C8E760 TBNZ X8, 0x0, 0x1C8E790
	0x01C8E764 ADRP X0, 0x22BF000
	0x01C8E768 LDR X0, [X0 + 0x738]
	0x01C8E76C BL 0x1B6E7F0
	0x01C8E770 ADRP X0, 0x22BF000
	0x01C8E774 LDR X0, [X0 + 0x808]
	0x01C8E778 BL 0x1B6E7F0
	0x01C8E77C ADRP X0, 0x22BF000
	0x01C8E780 LDR X0, [X0 + 0x810]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move W23, W1
	009 Move X1, X31
	010 Move X19, X5
	011 Move X20, X4
	012 Move X21, X3
	013 Move X22, X2
	014 Move X24, X0
	015 Call Object..ctor, X0
	016 Move [X24+20], W23
	017 Move [X24+24], X22
	018 Move [X24+32], X21
	019 Move [X24+40], X20
	020 Move [X24+48], X19
	021 Move X20, [X31+48]
	022 Move X19, [X31+56]
	023 Move X22, [X31+32]
	024 Move X21, [X31+40]
	025 Move X24, [X31+16]
	026 Move X23, [X31+24]
	027 Move X30, [X31+64]
	028 Return 

Method: System.Void Execute(AnimalCompany.AppState state)

Disassembly:
	0x01C8E78C STRB W8, [X23 + 0x3A6]
	0x01C8E790 ADRP X8, 0xFFFFFFFFFEE1D000
	0x01C8E794 LDR V0, [X8 + 0x6A]
	0x01C8E798 STR V0, [X19 + 0x2]
	0x01C8E79C LDR X9, [X22]
	0x01C8E7A0 LDR X8, [X21]
	0x01C8E7A4 STP X9, X8, [X19 + 0x30]
	0x01C8E7A8 LDR X0, [X20]
	0x01C8E7AC LDR W8, [X0 + 0xE0]
	0x01C8E7B0 CBNZ W8, 0x1C8E7B8
	0x01C8E7B4 BL 0x1B6E8F8
	0x01C8E7B8 ADRP X21, 0x2595000
	0x01C8E7BC LDRB W8, [X21 + 0x447]
	0x01C8E7C0 CBNZ W8, 0x1C8E7D8
	0x01C8E7C4 ADRP X0, 0x22BF000
	0x01C8E7C8 LDR X0, [X0 + 0x738]
	0x01C8E7CC BL 0x1B6E7F0
	0x01C8E7D0 MOVZ W8, 0x1
	0x01C8E7D4 STRB W8, [X21 + 0x447]
	0x01C8E7D8 LDR X0, [X20]
	0x01C8E7DC LDR W8, [X0 + 0xE0]
	0x01C8E7E0 CBNZ W8, 0x1C8E7EC
	0x01C8E7E4 BL 0x1B6E8F8
	0x01C8E7E8 LDR X0, [X20]
	0x01C8E7EC LDR X8, [X0 + 0xB8]
	0x01C8E7F0 MOV X0, X19
	0x01C8E7F4 LDP X22, X21, [X31 + 0x10]
	0x01C8E7F8 MOV X1, X31
	0x01C8E7FC LDR X8, [X8]
	0x01C8E800 STR X8, [X19 + 0x40]
	0x01C8E804 LDP X20, X19, [X31 + 0x20]
	0x01C8E808 LDP X30, X23, [X31], #0x30
	0x01C8E80C B 0x3A9EEE4
	0x01C8E810 STR X30, [X31 - 0x20]!
	0x01C8E814 STP X20, X19, [X31 + 0x10]
	0x01C8E818 ADRP X19, 0x2595000
	0x01C8E81C ADRP X20, 0x22BF000
	0x01C8E820 LDRB W8, [X19 + 0x3A7]
	0x01C8E824 LDR X20, [X20 + 0x8E8]
	0x01C8E828 TBNZ X8, 0x0, 0x1C8E840
	0x01C8E82C ADRP X0, 0x22BF000
	0x01C8E830 LDR X0, [X0 + 0x8E8]
	0x01C8E834 BL 0x1B6E7F0
	0x01C8E838 MOVZ W8, 0x1
	0x01C8E83C STRB W8, [X19 + 0x3A7]
	0x01C8E840 LDR X0, [X20]
	0x01C8E844 BL 0x1B6EA0C
	0x01C8E848 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2596000
	006 Move W8, [X21+919]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x22C0000
	014 Move X0, [X0+1944]
	015 Call 0x1B6F7F0
	016 Move X0, 0x22C0000
	017 Move X0, [X0+1952]
	018 Call 0x1B6F7F0
	019 Move W8, 1
	020 Move [X21+919], W8
	021 Compare X20, 0
	022 JumpIfEqual {62}
	023 Move X0, [X20+104]
	024 Compare X0, 0
	025 JumpIfEqual {62}
	026 Move X8, 0x22C0000
	027 Move X8, [X8+1944]
	028 Move W1, [X19+20]
	029 Move X2, [X8]
	030 Call StatePrimitive`1<Int32Enum>.set_value, X0, X1
	031 Move X0, [X20+112]
	032 Compare X0, 0
	033 JumpIfEqual {62}
	034 Move X21, 0x22C0000
	035 Move X21, [X21+1952]
	036 Move X1, [X19+24]
	037 Move X2, [X21]
	038 Call StatePrimitive`1<Object>.set_value, X0, X1
	039 Move X0, [X20+120]
	040 Compare X0, 0
	041 JumpIfEqual {62}
	042 Move X1, [X19+32]
	043 Move X2, [X21]
	044 Call StatePrimitive`1<Object>.set_value, X0, X1
	045 Move X0, [X20+136]
	046 Compare X0, 0
	047 JumpIfEqual {62}
	048 Move X1, [X19+40]
	049 Move X2, [X21]
	050 Call StatePrimitive`1<Object>.set_value, X0, X1
	051 Move X0, [X20+144]
	052 Compare X0, 0
	053 JumpIfEqual {62}
	054 Move X1, [X19+48]
	055 Move X2, [X21]
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 Call StatePrimitive`1<Object>.set_value, X0, X1
	061 Return 
	062 Call 0x1B6FA1C

