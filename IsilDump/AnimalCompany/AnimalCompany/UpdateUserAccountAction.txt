Type: AnimalCompany.UpdateUserAccountAction

Method: System.Void .ctor(Nakama.IApiAccount account)

Disassembly:
	0x01D4CB50 ADRP X0, 0x23A8000
	0x01D4CB54 LDR X0, [X0 + 0x918]
	0x01D4CB58 BL 0x1C16D08
	0x01D4CB5C LDR X8, [X23]
	0x01D4CB60 MOV X1, X0
	0x01D4CB64 LDRH W9, [X8 + 0x12E]
	0x01D4CB68 CBZ X9, 0x1D4CB8C
	0x01D4CB6C LDR X10, [X8 + 0xB0]
	0x01D4CB70 ADD X10, X10, 0x8
	0x01D4CB74 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call BaseAction..ctor, X0
	008 Move [X20+24], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void Execute(AnimalCompany.AppState state)

Disassembly:
	0x01D4CE10 MOV X0, X21
	0x01D4CE14 BL 0x1D2C690
	0x01D4CE18 BL 0x1990590
	0x01D4CE1C STR X30, [X31 - 0x10]!
	0x01D4CE20 CBZ X1, 0x1D4CE44
	0x01D4CE24 LDR X8, [X1 + 0xB8]
	0x01D4CE28 CBZ X8, 0x1D4CE44
	0x01D4CE2C LDR X8, [X8 + 0x88]
	0x01D4CE30 CBZ X8, 0x1D4CE44
	0x01D4CE34 LDR X1, [X0 + 0x18]
	0x01D4CE38 MOV X0, X8
	0x01D4CE3C LDR X30, [X31], #0x10
	0x01D4CE40 B 0x1D4CE48
	0x01D4CE44 BL 0x1C16F20
	0x01D4CE48 STP X30, X21, [X31 - 0x20]!
	0x01D4CE4C STP X20, X19, [X31 + 0x10]
	0x01D4CE50 ADRP X21, 0x268C000
	0x01D4CE54 LDRB W8, [X21 + 0x7A0]
	0x01D4CE58 MOV X19, X1
	0x01D4CE5C MOV X20, X0
	0x01D4CE60 TBNZ X8, 0x0, 0x1D4CE78
	0x01D4CE64 ADRP X0, 0x23A7000
	0x01D4CE68 LDR X0, [X0 + 0xE28]
	0x01D4CE6C BL 0x1C16CF4
	0x01D4CE70 MOVZ W8, 0x1
	0x01D4CE74 STRB W8, [X21 + 0x7A0]
	0x01D4CE78 LDR X0, [X20 + 0x48]
	0x01D4CE7C CBZ X0, 0x1D4CE9C
	0x01D4CE80 ADRP X8, 0x23A7000
	0x01D4CE84 LDR X8, [X8 + 0xE28]
	0x01D4CE88 MOV X1, X19
	0x01D4CE8C LDP X20, X19, [X31 + 0x10]
	0x01D4CE90 LDR X2, [X8]
	0x01D4CE94 LDP X30, X21, [X31], #0x20
	0x01D4CE98 B 0x262D414
	0x01D4CE9C BL 0x1C16F20
	0x01D4CEA0 STR X30, [X31 - 0x20]!
	0x01D4CEA4 STP X20, X19, [X31 + 0x10]
	0x01D4CEA8 MOV W19, W1
	0x01D4CEAC MOV X1, X31
	0x01D4CEB0 MOV X20, X0
	0x01D4CEB4 BL 0x1D36B98
	0x01D4CEB8 STR W19, [X20 + 0x14]
	0x01D4CEBC LDP X20, X19, [X31 + 0x10]
	0x01D4CEC0 LDR X30, [X31], #0x20
	0x01D4CEC4 RET
	0x01D4CEC8 STP X30, X21, [X31 - 0x20]!
	0x01D4CECC STP X20, X19, [X31 + 0x10]
	0x01D4CED0 ADRP X21, 0x268C000
	0x01D4CED4 LDRB W8, [X21 + 0x796]
	0x01D4CED8 MOV X20, X1
	0x01D4CEDC MOV X19, X0
	0x01D4CEE0 TBNZ X8, 0x0, 0x1D4CEF8
	0x01D4CEE4 ADRP X0, 0x23A7000
	0x01D4CEE8 LDR X0, [X0 + 0xE40]
	0x01D4CEEC BL 0x1C16CF4
	0x01D4CEF0 MOVZ W8, 0x1
	0x01D4CEF4 STRB W8, [X21 + 0x796]
	0x01D4CEF8 CBZ X20, 0x1D4CF30
	0x01D4CEFC LDR X8, [X20 + 0xB8]
	0x01D4CF00 CBZ X8, 0x1D4CF30
	0x01D4CF04 LDR X8, [X8 + 0x80]
	0x01D4CF08 CBZ X8, 0x1D4CF30
	0x01D4CF0C LDR X0, [X8 + 0x48]
	0x01D4CF10 CBZ X0, 0x1D4CF30
	0x01D4CF14 ADRP X8, 0x23A7000
	0x01D4CF18 LDR X8, [X8 + 0xE40]
	0x01D4CF1C LDR W1, [X19 + 0x14]
	0x01D4CF20 LDP X20, X19, [X31 + 0x10]
	0x01D4CF24 LDR X2, [X8]
	0x01D4CF28 LDP X30, X21, [X31], #0x20
	0x01D4CF2C B 0x2658054
	0x01D4CF30 BL 0x1C16F20
	0x01D4CF34 STR X30, [X31 - 0x20]!
	0x01D4CF38 STP X20, X19, [X31 + 0x10]
	0x01D4CF3C MOV X19, X1
	0x01D4CF40 MOV X1, X31
	0x01D4CF44 MOV X20, X0
	0x01D4CF48 BL 0x1D36B98
	0x01D4CF4C ADD X0, X20, 0x18
	0x01D4CF50 MOVZ W2, 0x50
	0x01D4CF54 MOV X1, X19
	0x01D4CF58 BL 0x3EB1B30
	0x01D4CF5C LDP X20, X19, [X31 + 0x10]
	0x01D4CF60 LDR X30, [X31], #0x20
	0x01D4CF64 RET
	0x01D4CF68 SUB X31, X31, 0xD0
	0x01D4CF6C STR X30, [X31 + 0xA0]
	0x01D4CF70 STP X22, X21, [X31 + 0xB0]
	0x01D4CF74 STP X20, X19, [X31 + 0xC0]
	0x01D4CF78 ADRP X20, 0x268C000
	0x01D4CF7C LDRB W8, [X20 + 0x797]
	0x01D4CF80 MOV X19, X1
	0x01D4CF84 MOV X21, X0
	0x01D4CF88 TBNZ X8, 0x0, 0x1D4CFA0
	0x01D4CF8C ADRP X0, 0x23A7000
	0x01D4CF90 LDR X0, [X0 + 0xDC8]
	0x01D4CF94 BL 0x1C16CF4
	0x01D4CF98 MOVZ W8, 0x1
	0x01D4CF9C STRB W8, [X20 + 0x797]
	0x01D4CFA0 CBZ X19, 0x1D4D024
	0x01D4CFA4 LDR X22, [X19 + 0xB8]
	0x01D4CFA8 CBZ X22, 0x1D4D024
	0x01D4CFAC LDR X20, [X22 + 0x70]
	0x01D4CFB0 ADD X1, X21, 0x18
	0x01D4CFB4 ADD X0, X31, 0x50
	0x01D4CFB8 MOVZ W2, 0x50
	0x01D4CFBC BL 0x3EB1AC0
	0x01D4CFC0 LDR X8, [X22 + 0x50]
	0x01D4CFC4 CBZ X8, 0x1D4D024
	0x01D4CFC8 CBZ X20, 0x1D4D024
	0x01D4CFCC LDR X21, [X8 + 0x50]
	0x01D4CFD0 ADD X0, X31, 0x0
	0x01D4CFD4 ADD X1, X31, 0x50
	0x01D4CFD8 MOVZ W2, 0x50
	0x01D4CFDC BL 0x3EB1AC0
	0x01D4CFE0 ADD X1, X31, 0x0
	0x01D4CFE4 MOV X0, X20
	0x01D4CFE8 MOV X2, X21
	0x01D4CFEC BL 0x1D4BB78
	0x01D4CFF0 LDR X8, [X19 + 0xB8]
	0x01D4CFF4 CBZ X8, 0x1D4D024
	0x01D4CFF8 LDR X0, [X8 + 0x70]
	0x01D4CFFC CBZ X0, 0x1D4D024
	0x01D4D000 LDR X9, [X0]
	0x01D4D004 LDR X1, [X8 + 0x78]
	0x01D4D008 LDP X20, X19, [X31 + 0xC0]
	0x01D4D00C LDP X22, X21, [X31 + 0xB0]
	0x01D4D010 LDR X3, [X9 + 0x3F8]
	0x01D4D014 LDR X2, [X9 + 0x400]
	0x01D4D018 LDR X30, [X31 + 0xA0]
	0x01D4D01C ADD X31, X31, 0xD0
	0x01D4D020 BR X3
	0x01D4D024 BL 0x1C16F20
	0x01D4D028 STR X30, [X31 - 0x40]!
	0x01D4D02C STP X24, X23, [X31 + 0x10]
	0x01D4D030 STP X22, X21, [X31 + 0x20]
	0x01D4D034 STP X20, X19, [X31 + 0x30]
	0x01D4D038 ADRP X21, 0x268B000
	0x01D4D03C ADRP X23, 0x23A7000
	0x01D4D040 LDRB W8, [X21 + 0x798]
	0x01D4D044 LDR X23, [X23 + 0xA58]
	0x01D4D048 MOV W20, W1
	0x01D4D04C MOV X19, X0
	0x01D4D050 TBNZ X8, 0x0, 0x1D4D08C
	0x01D4D054 ADRP X0, 0x23A6000
	0x01D4D058 LDR X0, [X0 + 0x930]
	0x01D4D05C BL 0x1C16CF4
	0x01D4D060 ADRP X0, 0x23A6000
	0x01D4D064 LDR X0, [X0 + 0x938]
	0x01D4D068 BL 0x1C16CF4
	0x01D4D06C ADRP X0, 0x23A7000
	0x01D4D070 LDR X0, [X0 + 0xA60]
	0x01D4D074 BL 0x1C16CF4
	0x01D4D078 ADRP X0, 0x23A7000
	0x01D4D07C LDR X0, [X0 + 0xA58]
	0x01D4D080 BL 0x1C16CF4
	0x01D4D084 MOVZ W8, 0x1
	0x01D4D088 STRB W8, [X21 + 0x798]
	0x01D4D08C LDR X0, [X23]
	0x01D4D090 LDR W8, [X0 + 0xE0]
	0x01D4D094 CBNZ W8, 0x1D4D0A0
	0x01D4D098 BL 0x1C16DFC
	0x01D4D09C LDR X0, [X23]
	0x01D4D0A0 LDR X8, [X0 + 0xB8]
	0x01D4D0A4 ADRP X24, 0x23A6000
	0x01D4D0A8 LDR X21, [X8 + 0x8]
	0x01D4D0AC LDR X24, [X24 + 0x930]
	0x01D4D0B0 CBNZ X21, 0x1D4D104
	0x01D4D0B4 LDR W8, [X0 + 0xE0]
	0x01D4D0B8 CBNZ W8, 0x1D4D0C4
	0x01D4D0BC BL 0x1C16DFC
	0x01D4D0C0 LDR X0, [X23]
	0x01D4D0C4 ADRP X9, 0x23A6000
	0x01D4D0C8 LDR X8, [X0 + 0xB8]
	0x01D4D0CC LDR X9, [X9 + 0x938]
	0x01D4D0D0 LDR X22, [X8]
	0x01D4D0D4 LDR X0, [X9]
	0x01D4D0D8 BL 0x1C16F10
	0x01D4D0DC ADRP X8, 0x23A7000
	0x01D4D0E0 LDR X8, [X8 + 0xA60]
	0x01D4D0E4 MOV X1, X22
	0x01D4D0E8 MOV X3, X31
	0x01D4D0EC MOV X21, X0
	0x01D4D0F0 LDR X2, [X8]
	0x01D4D0F4 BL 0x2D30578
	0x01D4D0F8 LDR X8, [X23]
	0x01D4D0FC LDR X8, [X8 + 0xB8]
	0x01D4D100 STR X21, [X8 + 0x8]
	0x01D4D104 LDR X3, [X24]
	0x01D4D108 AND W2, W20, 0x1
	0x01D4D10C MOV X0, X19
	0x01D4D110 MOV X1, X21
	0x01D4D114 LDP X20, X19, [X31 + 0x30]
	0x01D4D118 LDP X22, X21, [X31 + 0x20]
	0x01D4D11C LDP X24, X23, [X31 + 0x10]
	0x01D4D120 LDR X30, [X31], #0x40
	0x01D4D124 B 0x28BB0B0
	0x01D4D128 STR X30, [X31 - 0x20]!
	0x01D4D12C STP X20, X19, [X31 + 0x10]
	0x01D4D130 ADRP X19, 0x268B000
	0x01D4D134 ADRP X20, 0x23A7000
	0x01D4D138 LDRB W8, [X19 + 0x799]
	0x01D4D13C LDR X20, [X20 + 0xA58]
	0x01D4D140 TBNZ X8, 0x0, 0x1D4D158
	0x01D4D144 ADRP X0, 0x23A7000
	0x01D4D148 LDR X0, [X0 + 0xA58]
	0x01D4D14C BL 0x1C16CF4
	0x01D4D150 MOVZ W8, 0x1
	0x01D4D154 STRB W8, [X19 + 0x799]
	0x01D4D158 LDR X0, [X20]
	0x01D4D15C BL 0x1C16F10
	0x01D4D160 MOV X1, X31
	0x01D4D164 MOV X19, X0
	0x01D4D168 BL 0x33BDD8C
	0x01D4D16C LDR X8, [X20]
	0x01D4D170 LDR X8, [X8 + 0xB8]
	0x01D4D174 STR X19, [X8]
	0x01D4D178 LDP X20, X19, [X31 + 0x10]
	0x01D4D17C LDR X30, [X31], #0x20
	0x01D4D180 RET
	0x01D4D184 MOV X1, X31
	0x01D4D188 B 0x33BDD8C
	0x01D4D18C STR X30, [X31 - 0x10]!
	0x01D4D190 CBZ X1, 0x1D4D1A8
	0x01D4D194 LDR X8, [X1 + 0xB8]
	0x01D4D198 CBZ X8, 0x1D4D1A8
	0x01D4D19C LDR X0, [X8 + 0x90]
	0x01D4D1A0 LDR X30, [X31], #0x10
	0x01D4D1A4 RET
	0x01D4D1A8 BL 0x1C16F20
	0x01D4D1AC STR X30, [X31 - 0x20]!
	0x01D4D1B0 STP X20, X19, [X31 + 0x10]
	0x01D4D1B4 MOV X19, X1
	0x01D4D1B8 MOV X1, X31
	0x01D4D1BC MOV X20, X0
	0x01D4D1C0 BL 0x1D36B98
	0x01D4D1C4 STR X19, [X20 + 0x18]
	0x01D4D1C8 LDP X20, X19, [X31 + 0x10]
	0x01D4D1CC LDR X30, [X31], #0x20
	0x01D4D1D0 RET
	0x01D4D1D4 STR X30, [X31 - 0x10]!
	0x01D4D1D8 CBZ X1, 0x1D4D1FC
	0x01D4D1DC LDR X8, [X1 + 0xB8]
	0x01D4D1E0 CBZ X8, 0x1D4D1FC
	0x01D4D1E4 LDR X8, [X8 + 0x78]
	0x01D4D1E8 LDR X2, [X0 + 0x18]
	0x01D4D1EC MOV X0, X1
	0x01D4D1F0 MOV X1, X8
	0x01D4D1F4 LDR X30, [X31], #0x10
	0x01D4D1F8 B 0x1D4D200
	0x01D4D1FC BL 0x1C16F20
	0x01D4D200 SUB X31, X31, 0xC0
	0x01D4D204 STP X29, X30, [X31 + 0x60]
	0x01D4D208 STP X28, X27, [X31 + 0x70]
	0x01D4D20C STP X26, X25, [X31 + 0x80]
	0x01D4D210 STP X24, X23, [X31 + 0x90]
	0x01D4D214 STP X22, X21, [X31 + 0xA0]
	0x01D4D218 STP X20, X19, [X31 + 0xB0]
	0x01D4D21C ADRP X21, 0x268B000
	0x01D4D220 LDRB W8, [X21 + 0x79C]
	0x01D4D224 MOV X20, X2
	0x01D4D228 MOV X19, X1
	0x01D4D22C MOV X23, X0
	0x01D4D230 TBNZ X8, 0x0, 0x1D4D368
	0x01D4D234 ADRP X0, 0x23A6000
	0x01D4D238 LDR X0, [X0 + 0x648]
	0x01D4D23C BL 0x1C16CF4
	0x01D4D240 ADRP X0, 0x23A7000
	0x01D4D244 LDR X0, [X0 + 0xA68]
	0x01D4D248 BL 0x1C16CF4
	0x01D4D24C ADRP X0, 0x23A7000
	0x01D4D250 LDR X0, [X0 + 0xA70]
	0x01D4D254 BL 0x1C16CF4
	0x01D4D258 ADRP X0, 0x23A7000
	0x01D4D25C LDR X0, [X0 + 0xA78]
	0x01D4D260 BL 0x1C16CF4
	0x01D4D264 ADRP X0, 0x23A7000
	0x01D4D268 LDR X0, [X0 + 0xA80]
	0x01D4D26C BL 0x1C16CF4
	0x01D4D270 ADRP X0, 0x23A7000
	0x01D4D274 LDR X0, [X0 + 0xA88]
	0x01D4D278 BL 0x1C16CF4
	0x01D4D27C ADRP X0, 0x23A7000
	0x01D4D280 LDR X0, [X0 + 0xA90]
	0x01D4D284 BL 0x1C16CF4
	0x01D4D288 ADRP X0, 0x23A7000
	0x01D4D28C LDR X0, [X0 + 0xA98]
	0x01D4D290 BL 0x1C16CF4
	0x01D4D294 ADRP X0, 0x23A7000
	0x01D4D298 LDR X0, [X0 + 0xAA0]
	0x01D4D29C BL 0x1C16CF4
	0x01D4D2A0 ADRP X0, 0x23A7000
	0x01D4D2A4 LDR X0, [X0 + 0xAA8]
	0x01D4D2A8 BL 0x1C16CF4
	0x01D4D2AC ADRP X0, 0x23A6000
	0x01D4D2B0 LDR X0, [X0 + 0xE00]
	0x01D4D2B4 BL 0x1C16CF4
	0x01D4D2B8 ADRP X0, 0x23A6000
	0x01D4D2BC LDR X0, [X0 + 0xF70]
	0x01D4D2C0 BL 0x1C16CF4
	0x01D4D2C4 ADRP X0, 0x23A7000
	0x01D4D2C8 LDR X0, [X0 + 0xAB0]
	0x01D4D2CC BL 0x1C16CF4
	0x01D4D2D0 ADRP X0, 0x23A6000
	0x01D4D2D4 LDR X0, [X0 + 0xF78]
	0x01D4D2D8 BL 0x1C16CF4
	0x01D4D2DC ADRP X0, 0x23A7000
	0x01D4D2E0 LDR X0, [X0 + 0xAB8]
	0x01D4D2E4 BL 0x1C16CF4
	0x01D4D2E8 ADRP X0, 0x23A6000
	0x01D4D2EC LDR X0, [X0 + 0xE18]
	0x01D4D2F0 BL 0x1C16CF4
	0x01D4D2F4 ADRP X0, 0x23A7000
	0x01D4D2F8 LDR X0, [X0 + 0xAC0]
	0x01D4D2FC BL 0x1C16CF4
	0x01D4D300 ADRP X0, 0x23A7000
	0x01D4D304 LDR X0, [X0 + 0xAC8]
	0x01D4D308 BL 0x1C16CF4
	0x01D4D30C ADRP X0, 0x23A7000
	0x01D4D310 LDR X0, [X0 + 0xAD0]
	0x01D4D314 BL 0x1C16CF4
	0x01D4D318 ADRP X0, 0x23A7000
	0x01D4D31C LDR X0, [X0 + 0xAD8]
	0x01D4D320 BL 0x1C16CF4
	0x01D4D324 ADRP X0, 0x23A6000
	0x01D4D328 LDR X0, [X0 + 0xDC8]
	0x01D4D32C BL 0x1C16CF4
	0x01D4D330 ADRP X0, 0x23A7000
	0x01D4D334 LDR X0, [X0 + 0x1F8]
	0x01D4D338 BL 0x1C16CF4
	0x01D4D33C ADRP X0, 0x23A6000
	0x01D4D340 LDR X0, [X0 + 0x900]
	0x01D4D344 BL 0x1C16CF4
	0x01D4D348 ADRP X0, 0x23A7000
	0x01D4D34C LDR X0, [X0 + 0xAE0]
	0x01D4D350 BL 0x1C16CF4
	0x01D4D354 ADRP X0, 0x23A7000
	0x01D4D358 LDR X0, [X0 + 0xAE8]
	0x01D4D35C BL 0x1C16CF4
	0x01D4D360 MOVZ W8, 0x1
	0x01D4D364 STRB W8, [X21 + 0x79C]
	0x01D4D368 STP X31, X31, [X31 + 0x50]
	0x01D4D36C STP X31, X31, [X31 + 0x30]
	0x01D4D370 STR X31, [X31 + 0x40]
	0x01D4D374 STR X31, [X31 + 0x28]
	0x01D4D378 CBZ X20, 0x1D4DFE8
	0x01D4D37C LDR X8, [X20 + 0x58]
	0x01D4D380 CBZ X8, 0x1D4DFE8
	0x01D4D384 LDR W0, [X8 + 0x4C]
	0x01D4D388 MOV X1, X31
	0x01D4D38C BL 0x1D75978
	0x01D4D390 TBZ X0, 0x0, 0x1D4D400
	0x01D4D394 LDR X8, [X20 + 0x58]
	0x01D4D398 CBZ X8, 0x1D4DFE8
	0x01D4D39C LDR W0, [X8 + 0x4C]
	0x01D4D3A0 CMP W0, 0x5
	0x01D4D3A4 B.NE 0x1D4D498
	0x01D4D3A8 CBZ X19, 0x1D4DFE8
	0x01D4D3AC ADRP X22, 0x23A7000
	0x01D4D3B0 LDR X21, [X19 + 0x60]
	0x01D4D3B4 LDR X0, [X20 + 0x48]
	0x01D4D3B8 LDR X22, [X22 + 0x1F8]
	0x01D4D3BC LDR X1, [X22]
	0x01D4D3C0 BL 0x265C594
	0x01D4D3C4 CBZ X21, 0x1D4DFE8
	0x01D4D3C8 ADRP X23, 0x23A6000
	0x01D4D3CC LDR X23, [X23 + 0x900]
	0x01D4D3D0 MOV X1, X0
	0x01D4D3D4 MOV X0, X21
	0x01D4D3D8 LDR X2, [X23]
	0x01D4D3DC BL 0x265C3F4
	0x01D4D3E0 LDR X0, [X20 + 0x48]
	0x01D4D3E4 LDR X1, [X22]
	0x01D4D3E8 LDR X19, [X19 + 0x68]
	0x01D4D3EC BL 0x265C594
	0x01D4D3F0 CBZ X19, 0x1D4DFE8
	0x01D4D3F4 LDR X2, [X23]
	0x01D4D3F8 MOV X1, X0
	0x01D4D3FC B 0x1D4DF50
	0x01D4D400 LDR X0, [X20 + 0x80]
	0x01D4D404 CBZ X0, 0x1D4DFE8
	0x01D4D408 ADRP X8, 0x23A7000
	0x01D4D40C LDR X8, [X8 + 0xAD0]
	0x01D4D410 LDR X1, [X8]
	0x01D4D414 BL 0x262CB54
	0x01D4D418 ADRP X8, 0x23A7000
	0x01D4D41C LDR X8, [X8 + 0xAA8]
	0x01D4D420 MOV W22, W0
	0x01D4D424 LDR X8, [X8]
	0x01D4D428 MOV X0, X8
	0x01D4D42C BL 0x1C16F10
	0x01D4D430 ADRP X8, 0x23A7000
	0x01D4D434 LDR X8, [X8 + 0xAA0]
	0x01D4D438 MOV W1, W22
	0x01D4D43C MOV X21, X0
	0x01D4D440 LDR X2, [X8]
	0x01D4D444 BL 0x2DBDEA0
	0x01D4D448 LDR X22, [X20 + 0x80]
	0x01D4D44C CBZ X22, 0x1D4DFE8
	0x01D4D450 ADRP X10, 0x23A6000
	0x01D4D454 LDR X8, [X22]
	0x01D4D458 LDR X10, [X10 + 0xF70]
	0x01D4D45C LDRH W9, [X8 + 0x12E]
	0x01D4D460 LDR X1, [X10]
	0x01D4D464 CBZ X9, 0x1D4D488
	0x01D4D468 LDR X10, [X8 + 0xB0]
	0x01D4D46C ADD X10, X10, 0x8
	0x01D4D470 LDUR X11, [X10 - 0x8]
	0x01D4D474 CMP X11, X1
	0x01D4D478 B.EQ 0x1D4D4F8
	0x01D4D47C SUBS X9, X9, 0x1
	0x01D4D480 ADD X10, X10, 0x10
	0x01D4D484 B.NE 0x1D4D470
	0x01D4D488 MOV X0, X22
	0x01D4D48C MOV W2, W31
	0x01D4D490 BL 0x1C5C788
	0x01D4D494 B 0x1D4D504
	0x01D4D498 MOV X1, X31
	0x01D4D49C BL 0x1D75984
	0x01D4D4A0 TBZ X0, 0x0, 0x1D4D6A0
	0x01D4D4A4 CBZ X19, 0x1D4DFE8
	0x01D4D4A8 LDR X21, [X19 + 0x98]
	0x01D4D4AC CBZ X21, 0x1D4DFE8
	0x01D4D4B0 ADRP X10, 0x23A7000
	0x01D4D4B4 LDR X8, [X21]
	0x01D4D4B8 LDR X10, [X10 + 0xAB0]
	0x01D4D4BC LDRH W9, [X8 + 0x12E]
	0x01D4D4C0 LDR X1, [X10]
	0x01D4D4C4 CBZ X9, 0x1D4D4E8
	0x01D4D4C8 LDR X10, [X8 + 0xB0]
	0x01D4D4CC ADD X10, X10, 0x8
	0x01D4D4D0 LDUR X11, [X10 - 0x8]
	0x01D4D4D4 CMP X11, X1
	0x01D4D4D8 B.EQ 0x1D4DCBC
	0x01D4D4DC SUBS X9, X9, 0x1
	0x01D4D4E0 ADD X10, X10, 0x10
	0x01D4D4E4 B.NE 0x1D4D4D0
	0x01D4D4E8 MOV X0, X21
	0x01D4D4EC MOV W2, W31
	0x01D4D4F0 BL 0x1C5C788
	0x01D4D4F4 B 0x1D4DCC8
	0x01D4D4F8 LDRSW X9, [X10]
	0x01D4D4FC ADD X8, X8, X9, 0x4, LSL
	0x01D4D500 ADD X0, X8, 0x138
	0x01D4D504 LDP X8, X1, [X0]
	0x01D4D508 MOV X0, X22
	0x01D4D50C BLR X8
	0x01D4D510 MOV X22, X0
	0x01D4D514 CBZ X0, 0x1D4E060
	0x01D4D518 ADRP X24, 0x23A6000
	0x01D4D51C ADRP X25, 0x23A6000
	0x01D4D520 ADRP X26, 0x23A7000
	0x01D4D524 ADRP X27, 0x23A7000
	0x01D4D528 LDR X24, [X24 + 0xE18]
	0x01D4D52C LDR X25, [X25 + 0xF78]
	0x01D4D530 LDR X26, [X26 + 0xAC0]
	0x01D4D534 LDR X27, [X27 + 0xA90]
	0x01D4D538 LDR X8, [X22]
	0x01D4D53C LDR X1, [X24]
	0x01D4D540 LDRH W9, [X8 + 0x12E]
	0x01D4D544 CBZ X9, 0x1D4D568
	0x01D4D548 LDR X10, [X8 + 0xB0]
	0x01D4D54C ADD X10, X10, 0x8
	0x01D4D550 LDUR X11, [X10 - 0x8]
	0x01D4D554 CMP X11, X1
	0x01D4D558 B.EQ 0x1D4D578
	0x01D4D55C SUBS X9, X9, 0x1
	0x01D4D560 ADD X10, X10, 0x10
	0x01D4D564 B.NE 0x1D4D550
	0x01D4D568 MOV X0, X22
	0x01D4D56C MOV W2, W31
	0x01D4D570 BL 0x1C5C788
	0x01D4D574 B 0x1D4D584
	0x01D4D578 LDRSW X9, [X10]
	0x01D4D57C ADD X8, X8, X9, 0x4, LSL
	0x01D4D580 ADD X0, X8, 0x138
	0x01D4D584 LDP X8, X1, [X0]
	0x01D4D588 MOV X0, X22
	0x01D4D58C BLR X8
	0x01D4D590 TBZ X0, 0x0, 0x1D4D64C
	0x01D4D594 LDR X8, [X22]
	0x01D4D598 LDR X1, [X25]
	0x01D4D59C LDRH W9, [X8 + 0x12E]
	0x01D4D5A0 CBZ X9, 0x1D4D5C4
	0x01D4D5A4 LDR X10, [X8 + 0xB0]
	0x01D4D5A8 ADD X10, X10, 0x8
	0x01D4D5AC LDUR X11, [X10 - 0x8]
	0x01D4D5B0 CMP X11, X1
	0x01D4D5B4 B.EQ 0x1D4D5D4
	0x01D4D5B8 SUBS X9, X9, 0x1
	0x01D4D5BC ADD X10, X10, 0x10
	0x01D4D5C0 B.NE 0x1D4D5AC
	0x01D4D5C4 MOV X0, X22
	0x01D4D5C8 MOV W2, W31
	0x01D4D5CC BL 0x1C5C788
	0x01D4D5D0 B 0x1D4D5E0
	0x01D4D5D4 LDRSW X9, [X10]
	0x01D4D5D8 ADD X8, X8, X9, 0x4, LSL
	0x01D4D5DC ADD X0, X8, 0x138
	0x01D4D5E0 LDP X8, X1, [X0]
	0x01D4D5E4 MOV X0, X22
	0x01D4D5E8 BLR X8
	0x01D4D5EC MOV X1, X0
	0x01D4D5F0 CBZ X23, 0x1D4DF7C
	0x01D4D5F4 LDR X8, [X23 + 0xC8]
	0x01D4D5F8 CBZ X8, 0x1D4DF80
	0x01D4D5FC LDR X0, [X8 + 0x50]
	0x01D4D600 CBZ X0, 0x1D4DF78
	0x01D4D604 LDR X3, [X26]
	0x01D4D608 ADD X2, X31, 0x50
	0x01D4D60C BL 0x2609E34
	0x01D4D610 TBZ X0, 0x0, 0x1D4D538
	0x01D4D614 LDR X8, [X31 + 0x50]
	0x01D4D618 CBZ X8, 0x1D4DFE4
	0x01D4D61C LDR X8, [X8 + 0x58]
	0x01D4D620 CBZ X8, 0x1D4DFE0
	0x01D4D624 LDR W0, [X8 + 0x4C]
	0x01D4D628 MOV X1, X31
	0x01D4D62C BL 0x1D75978
	0x01D4D630 TBZ X0, 0x0, 0x1D4D538
	0x01D4D634 CBZ X21, 0x1D4DFF0
	0x01D4D638 LDR X1, [X31 + 0x50]
	0x01D4D63C LDR X2, [X27]
	0x01D4D640 MOV X0, X21
	0x01D4D644 BL 0x2DBEF30
	0x01D4D648 B 0x1D4D538
	0x01D4D64C MOV X23, X31
	0x01D4D650 MOVZ W24, 0xB
	0x01D4D654 CBZ X22, 0x1D4D6F0
	0x01D4D658 ADRP X10, 0x23A6000
	0x01D4D65C LDR X8, [X22]
	0x01D4D660 LDR X10, [X10 + 0xE00]
	0x01D4D664 LDRH W9, [X8 + 0x12E]
	0x01D4D668 LDR X1, [X10]
	0x01D4D66C CBZ X9, 0x1D4D690
	0x01D4D670 LDR X10, [X8 + 0xB0]
	0x01D4D674 ADD X10, X10, 0x8
	0x01D4D678 LDUR X11, [X10 - 0x8]
	0x01D4D67C CMP X11, X1
	0x01D4D680 B.EQ 0x1D4D6D8
	0x01D4D684 SUBS X9, X9, 0x1
	0x01D4D688 ADD X10, X10, 0x10
	0x01D4D68C B.NE 0x1D4D678
	0x01D4D690 MOV X0, X22
	0x01D4D694 MOV W2, W31
	0x01D4D698 BL 0x1C5C788
	0x01D4D69C B 0x1D4D6E4
	0x01D4D6A0 LDR X8, [X20 + 0x58]
	0x01D4D6A4 CBZ X8, 0x1D4DFE8
	0x01D4D6A8 CBZ X19, 0x1D4DFE8
	0x01D4D6AC LDR W1, [X8 + 0x4C]
	0x01D4D6B0 MOV X0, X19
	0x01D4D6B4 BL 0x1D4E604
	0x01D4D6B8 CBZ X0, 0x1D4DF58
	0x01D4D6BC ADRP X8, 0x23A7000
	0x01D4D6C0 MOV X19, X0
	0x01D4D6C4 LDR X0, [X20 + 0x48]
	0x01D4D6C8 LDR X8, [X8 + 0x1F8]
	0x01D4D6CC LDR X1, [X8]
	0x01D4D6D0 BL 0x265C594
	0x01D4D6D4 B 0x1D4DF40
	0x01D4D6D8 LDRSW X9, [X10]
	0x01D4D6DC ADD X8, X8, X9, 0x4, LSL
	0x01D4D6E0 ADD X0, X8, 0x138
	0x01D4D6E4 LDP X8, X1, [X0]
	0x01D4D6E8 MOV X0, X22
	0x01D4D6EC BLR X8
	0x01D4D6F0 CBNZ X23, 0x1D4E064
	0x01D4D6F4 CMP W24, 0xB
	0x01D4D6F8 B.EQ 0x1D4D700
	0x01D4D6FC CBNZ W24, 0x1D4DF58
	0x01D4D700 LDR X8, [X20 + 0x58]
	0x01D4D704 CBZ X8, 0x1D4DFE8
	0x01D4D708 LDR W8, [X8 + 0x4C]
	0x01D4D70C SUB W8, W8, 0x1
	0x01D4D710 CMP W8, 0x2
	0x01D4D714 B.CS 0x1D4D7CC
	0x01D4D718 ADRP X23, 0x23A7000
	0x01D4D71C LDR X23, [X23 + 0xAE8]
	0x01D4D720 LDR X0, [X23]
	0x01D4D724 LDR W8, [X0 + 0xE0]
	0x01D4D728 CBNZ W8, 0x1D4D734
	0x01D4D72C BL 0x1C16DFC
	0x01D4D730 LDR X0, [X23]
	0x01D4D734 LDR X8, [X0 + 0xB8]
	0x01D4D738 LDR X20, [X8 + 0x8]
	0x01D4D73C CBNZ X20, 0x1D4D790
	0x01D4D740 LDR W8, [X0 + 0xE0]
	0x01D4D744 CBNZ W8, 0x1D4D750
	0x01D4D748 BL 0x1C16DFC
	0x01D4D74C LDR X0, [X23]
	0x01D4D750 ADRP X9, 0x23A7000
	0x01D4D754 LDR X8, [X0 + 0xB8]
	0x01D4D758 LDR X9, [X9 + 0xA88]
	0x01D4D75C LDR X22, [X8]
	0x01D4D760 LDR X0, [X9]
	0x01D4D764 BL 0x1C16F10
	0x01D4D768 ADRP X8, 0x23A7000
	0x01D4D76C LDR X8, [X8 + 0xAE0]
	0x01D4D770 MOV X1, X22
	0x01D4D774 MOV X3, X31
	0x01D4D778 MOV X20, X0
	0x01D4D77C LDR X2, [X8]
	0x01D4D780 BL 0x2D2F428
	0x01D4D784 LDR X8, [X23]
	0x01D4D788 LDR X8, [X8 + 0xB8]
	0x01D4D78C STR X20, [X8 + 0x8]
	0x01D4D790 ADRP X8, 0x23A7000
	0x01D4D794 LDR X8, [X8 + 0xA68]
	0x01D4D798 MOV X0, X21
	0x01D4D79C MOV X1, X20
	0x01D4D7A0 LDR X2, [X8]
	0x01D4D7A4 BL 0x21B36AC
	0x01D4D7A8 TBNZ X0, 0x0, 0x1D4D7CC
	0x01D4D7AC CBZ X19, 0x1D4DFE8
	0x01D4D7B0 LDR X0, [X19 + 0x90]
	0x01D4D7B4 CBZ X0, 0x1D4D7CC
	0x01D4D7B8 ADRP X8, 0x23A6000
	0x01D4D7BC LDR X8, [X8 + 0x900]
	0x01D4D7C0 MOV X1, X31
	0x01D4D7C4 LDR X2, [X8]
	0x01D4D7C8 BL 0x265C3F4
	0x01D4D7CC CBZ X21, 0x1D4DFE8
	0x01D4D7D0 ADRP X8, 0x23A7000
	0x01D4D7D4 LDR X8, [X8 + 0xA98]
	0x01D4D7D8 MOV X0, X21
	0x01D4D7DC LDR X1, [X8]
	0x01D4D7E0 ADD X8, X31, 0x10
	0x01D4D7E4 BL 0x2DBE924
	0x01D4D7E8 LDR V0, [X31 + 0x1]
	0x01D4D7EC LDR X8, [X31 + 0x20]
	0x01D4D7F0 ADRP X23, 0x23A7000
	0x01D4D7F4 ADRP X29, 0x23A6000
	0x01D4D7F8 ADRP X24, 0x23A7000
	0x01D4D7FC ADRP X20, 0x23A6000
	0x01D4D800 LDR X23, [X23 + 0xA78]
	0x01D4D804 LDR X29, [X29 + 0xE18]
	0x01D4D808 LDR X24, [X24 + 0xAB8]
	0x01D4D80C LDR X20, [X20 + 0x648]
	0x01D4D810 STR V0, [X31 + 0x3]
	0x01D4D814 STR X8, [X31 + 0x40]
	0x01D4D818 ADRP X27, 0x23A7000
	0x01D4D81C LDR X27, [X27 + 0xAC0]
	0x01D4D820 ADRP X28, 0x268B000
	0x01D4D824 LDR X1, [X23]
	0x01D4D828 ADD X0, X31, 0x30
	0x01D4D82C BL 0x2BC3C64
	0x01D4D830 TBZ X0, 0x0, 0x1D4DCA4
	0x01D4D834 LDR X26, [X31 + 0x40]
	0x01D4D838 CBZ X26, 0x1D4DF84
	0x01D4D83C LDR X8, [X26 + 0x58]
	0x01D4D840 CBZ X8, 0x1D4DF88
	0x01D4D844 LDR W0, [X8 + 0x4C]
	0x01D4D848 MOV X1, X31
	0x01D4D84C BL 0x1D75978
	0x01D4D850 TBZ X0, 0x0, 0x1D4D824
	0x01D4D854 LDR X8, [X26 + 0x58]
	0x01D4D858 CBZ X8, 0x1D4DFEC
	0x01D4D85C LDR W0, [X8 + 0x4C]
	0x01D4D860 CMP W0, 0x5
	0x01D4D864 B.NE 0x1D4D8D8
	0x01D4D868 CBZ X19, 0x1D4E00C
	0x01D4D86C ADRP X8, 0x23A7000
	0x01D4D870 LDR X21, [X19 + 0x60]
	0x01D4D874 LDR X0, [X26 + 0x48]
	0x01D4D878 LDR X8, [X8 + 0x1F8]
	0x01D4D87C LDR X1, [X8]
	0x01D4D880 BL 0x265C594
	0x01D4D884 MOV X1, X0
	0x01D4D888 CBZ X21, 0x1D4E004
	0x01D4D88C ADRP X8, 0x23A6000
	0x01D4D890 LDR X8, [X8 + 0x900]
	0x01D4D894 LDR X2, [X8]
	0x01D4D898 MOV X0, X21
	0x01D4D89C BL 0x265C3F4
	0x01D4D8A0 ADRP X8, 0x23A7000
	0x01D4D8A4 LDR X21, [X19 + 0x68]
	0x01D4D8A8 LDR X0, [X26 + 0x48]
	0x01D4D8AC LDR X8, [X8 + 0x1F8]
	0x01D4D8B0 LDR X1, [X8]
	0x01D4D8B4 BL 0x265C594
	0x01D4D8B8 MOV X1, X0
	0x01D4D8BC CBZ X21, 0x1D4E008
	0x01D4D8C0 ADRP X8, 0x23A6000
	0x01D4D8C4 LDR X8, [X8 + 0x900]
	0x01D4D8C8 LDR X2, [X8]
	0x01D4D8CC MOV X0, X21
	0x01D4D8D0 BL 0x265C3F4
	0x01D4D8D4 B 0x1D4D824
	0x01D4D8D8 MOV X1, X31
	0x01D4D8DC BL 0x1D75984
	0x01D4D8E0 TBZ X0, 0x0, 0x1D4D93C
	0x01D4D8E4 CBZ X19, 0x1D4E04C
	0x01D4D8E8 LDR X21, [X19 + 0x98]
	0x01D4D8EC MOVZ W23, 0x1
	0x01D4D8F0 CBZ X21, 0x1D4E048
	0x01D4D8F4 LDR X8, [X21]
	0x01D4D8F8 ADRP X10, 0x23A7000
	0x01D4D8FC LDRH W9, [X8 + 0x12E]
	0x01D4D900 LDR X10, [X10 + 0xAB0]
	0x01D4D904 LDR X1, [X10]
	0x01D4D908 CBZ X9, 0x1D4D92C
	0x01D4D90C LDR X10, [X8 + 0xB0]
	0x01D4D910 ADD X10, X10, 0x8
	0x01D4D914 LDUR X11, [X10 - 0x8]
	0x01D4D918 CMP X11, X1
	0x01D4D91C B.EQ 0x1D4D98C
	0x01D4D920 SUBS X9, X9, 0x1
	0x01D4D924 ADD X10, X10, 0x10
	0x01D4D928 B.NE 0x1D4D914
	0x01D4D92C MOV X0, X21
	0x01D4D930 MOV W2, W31
	0x01D4D934 BL 0x1C5C788
	0x01D4D938 B 0x1D4D998
	0x01D4D93C LDR X8, [X26 + 0x58]
	0x01D4D940 CBZ X8, 0x1D4E044
	0x01D4D944 CBZ X19, 0x1D4E040
	0x01D4D948 LDR W1, [X8 + 0x4C]
	0x01D4D94C MOV X0, X19
	0x01D4D950 BL 0x1D4E604
	0x01D4D954 CBZ X0, 0x1D4D824
	0x01D4D958 ADRP X8, 0x23A7000
	0x01D4D95C MOV X21, X0
	0x01D4D960 LDR X0, [X26 + 0x48]
	0x01D4D964 LDR X8, [X8 + 0x1F8]
	0x01D4D968 LDR X1, [X8]
	0x01D4D96C BL 0x265C594
	0x01D4D970 MOV X1, X0
	0x01D4D974 ADRP X8, 0x23A6000
	0x01D4D978 LDR X8, [X8 + 0x900]
	0x01D4D97C LDR X2, [X8]
	0x01D4D980 MOV X0, X21
	0x01D4D984 BL 0x265C3F4
	0x01D4D988 B 0x1D4D824
	0x01D4D98C LDRSW X9, [X10]
	0x01D4D990 ADD X8, X8, X9, 0x4, LSL
	0x01D4D994 ADD X0, X8, 0x138
	0x01D4D998 LDP X8, X1, [X0]
	0x01D4D99C MOV X0, X21
	0x01D4D9A0 BLR X8
	0x01D4D9A4 MOV X21, X0
	0x01D4D9A8 CBZ X0, 0x1D4DC44
	0x01D4D9AC LDR X8, [X21]
	0x01D4D9B0 LDR X1, [X29]
	0x01D4D9B4 LDRH W9, [X8 + 0x12E]
	0x01D4D9B8 CBZ X9, 0x1D4D9DC
	0x01D4D9BC LDR X10, [X8 + 0xB0]
	0x01D4D9C0 ADD X10, X10, 0x8
	0x01D4D9C4 LDUR X11, [X10 - 0x8]
	0x01D4D9C8 CMP X11, X1
	0x01D4D9CC B.EQ 0x1D4D9EC
	0x01D4D9D0 SUBS X9, X9, 0x1
	0x01D4D9D4 ADD X10, X10, 0x10
	0x01D4D9D8 B.NE 0x1D4D9C4
	0x01D4D9DC MOV X0, X21
	0x01D4D9E0 MOV W2, W31
	0x01D4D9E4 BL 0x1C5C788
	0x01D4D9E8 B 0x1D4D9F8
	0x01D4D9EC LDRSW X9, [X10]
	0x01D4D9F0 ADD X8, X8, X9, 0x4, LSL
	0x01D4D9F4 ADD X0, X8, 0x138
	0x01D4D9F8 LDP X8, X1, [X0]
	0x01D4D9FC MOV X0, X21
	0x01D4DA00 BLR X8
	0x01D4DA04 TBZ X0, 0x0, 0x1D4DB30
	0x01D4DA08 LDR X8, [X21]
	0x01D4DA0C LDR X1, [X24]
	0x01D4DA10 LDRH W9, [X8 + 0x12E]
	0x01D4DA14 CBZ X9, 0x1D4DA38
	0x01D4DA18 LDR X10, [X8 + 0xB0]
	0x01D4DA1C ADD X10, X10, 0x8
	0x01D4DA20 LDUR X11, [X10 - 0x8]
	0x01D4DA24 CMP X11, X1
	0x01D4DA28 B.EQ 0x1D4DA48
	0x01D4DA2C SUBS X9, X9, 0x1
	0x01D4DA30 ADD X10, X10, 0x10
	0x01D4DA34 B.NE 0x1D4DA20
	0x01D4DA38 MOV X0, X21
	0x01D4DA3C MOV W2, W31
	0x01D4DA40 BL 0x1C5C788
	0x01D4DA44 B 0x1D4DA54
	0x01D4DA48 LDRSW X9, [X10]
	0x01D4DA4C ADD X8, X8, X9, 0x4, LSL
	0x01D4DA50 ADD X0, X8, 0x138
	0x01D4DA54 LDP X8, X1, [X0]
	0x01D4DA58 MOV X0, X21
	0x01D4DA5C BLR X8
	0x01D4DA60 MOV X22, X0
	0x01D4DA64 LDR X0, [X20]
	0x01D4DA68 LDR W8, [X0 + 0xE0]
	0x01D4DA6C CBNZ W8, 0x1D4DA74
	0x01D4DA70 BL 0x1C16DFC
	0x01D4DA74 LDRB W8, [X28 + 0x787]
	0x01D4DA78 CBNZ W8, 0x1D4DA88
	0x01D4DA7C MOV X0, X20
	0x01D4DA80 BL 0x1C16CF4
	0x01D4DA84 STRB W23, [X28 + 0x787]
	0x01D4DA88 LDR X0, [X20]
	0x01D4DA8C LDR W8, [X0 + 0xE0]
	0x01D4DA90 CBNZ W8, 0x1D4DA9C
	0x01D4DA94 BL 0x1C16DFC
	0x01D4DA98 LDR X0, [X20]
	0x01D4DA9C LDR X8, [X0 + 0xB8]
	0x01D4DAA0 LDR X8, [X8]
	0x01D4DAA4 CBZ X8, 0x1D4DC1C
	0x01D4DAA8 LDR X8, [X8 + 0xC8]
	0x01D4DAAC CBZ X8, 0x1D4DC24
	0x01D4DAB0 CBZ X22, 0x1D4DC0C
	0x01D4DAB4 LDR X0, [X8 + 0x50]
	0x01D4DAB8 CBZ X0, 0x1D4DC14
	0x01D4DABC LDR X1, [X22 + 0x50]
	0x01D4DAC0 LDR X3, [X27]
	0x01D4DAC4 ADD X2, X31, 0x28
	0x01D4DAC8 BL 0x2609E34
	0x01D4DACC TBZ X0, 0x0, 0x1D4D9AC
	0x01D4DAD0 LDR X8, [X31 + 0x28]
	0x01D4DAD4 CBZ X8, 0x1D4DC3C
	0x01D4DAD8 LDR X8, [X8 + 0x58]
	0x01D4DADC CBZ X8, 0x1D4DC2C
	0x01D4DAE0 LDR X9, [X26 + 0x58]
	0x01D4DAE4 CBZ X9, 0x1D4DC34
	0x01D4DAE8 LDR W8, [X8 + 0x4C]
	0x01D4DAEC LDR W9, [X9 + 0x4C]
	0x01D4DAF0 CMP W8, W9
	0x01D4DAF4 B.NE 0x1D4D9AC
	0x01D4DAF8 ADRP X8, 0x23A7000
	0x01D4DAFC LDR X0, [X26 + 0x48]
	0x01D4DB00 LDR X8, [X8 + 0x1F8]
	0x01D4DB04 LDR X1, [X8]
	0x01D4DB08 BL 0x265C594
	0x01D4DB0C MOV X1, X0
	0x01D4DB10 ADRP X8, 0x23A6000
	0x01D4DB14 LDR X8, [X8 + 0x900]
	0x01D4DB18 LDR X2, [X8]
	0x01D4DB1C MOV X0, X22
	0x01D4DB20 BL 0x265C3F4
	0x01D4DB24 MOV X23, X31
	0x01D4DB28 MOVZ W22, 0x1
	0x01D4DB2C B 0x1D4DB38
	0x01D4DB30 MOV X23, X31
	0x01D4DB34 MOV W22, W31
	0x01D4DB38 MOVZ W25, 0x15
	0x01D4DB3C CBZ X21, 0x1D4DBA0
	0x01D4DB40 LDR X8, [X21]
	0x01D4DB44 ADRP X10, 0x23A6000
	0x01D4DB48 LDRH W9, [X8 + 0x12E]
	0x01D4DB4C LDR X10, [X10 + 0xE00]
	0x01D4DB50 LDR X1, [X10]
	0x01D4DB54 CBZ X9, 0x1D4DB78
	0x01D4DB58 LDR X10, [X8 + 0xB0]
	0x01D4DB5C ADD X10, X10, 0x8
	0x01D4DB60 LDUR X11, [X10 - 0x8]
	0x01D4DB64 CMP X11, X1
	0x01D4DB68 B.EQ 0x1D4DB88
	0x01D4DB6C SUBS X9, X9, 0x1
	0x01D4DB70 ADD X10, X10, 0x10
	0x01D4DB74 B.NE 0x1D4DB60
	0x01D4DB78 MOV X0, X21
	0x01D4DB7C MOV W2, W31
	0x01D4DB80 BL 0x1C5C788
	0x01D4DB84 B 0x1D4DB94
	0x01D4DB88 LDRSW X9, [X10]
	0x01D4DB8C ADD X8, X8, X9, 0x4, LSL
	0x01D4DB90 ADD X0, X8, 0x138
	0x01D4DB94 LDP X8, X1, [X0]
	0x01D4DB98 MOV X0, X21
	0x01D4DB9C BLR X8
	0x01D4DBA0 CBNZ X23, 0x1D4E050
	0x01D4DBA4 ADRP X23, 0x23A7000
	0x01D4DBA8 LDR X23, [X23 + 0xA78]
	0x01D4DBAC CMP W25, 0x15
	0x01D4DBB0 B.EQ 0x1D4DBB8
	0x01D4DBB4 CBNZ W25, 0x1D4DCA4
	0x01D4DBB8 TBNZ X22, 0x0, 0x1D4D824
	0x01D4DBBC LDR X0, [X19 + 0x98]
	0x01D4DBC0 CBZ X0, 0x1D4E05C
	0x01D4DBC4 ADRP X8, 0x23A7000
	0x01D4DBC8 LDR X8, [X8 + 0xAC8]
	0x01D4DBCC LDR X1, [X8]
	0x01D4DBD0 BL 0x2610078
	0x01D4DBD4 ADRP X8, 0x23A7000
	0x01D4DBD8 MOV X21, X0
	0x01D4DBDC LDR X0, [X26 + 0x48]
	0x01D4DBE0 LDR X8, [X8 + 0x1F8]
	0x01D4DBE4 LDR X1, [X8]
	0x01D4DBE8 BL 0x265C594
	0x01D4DBEC MOV X1, X0
	0x01D4DBF0 CBZ X21, 0x1D4E058
	0x01D4DBF4 ADRP X8, 0x23A6000
	0x01D4DBF8 LDR X8, [X8 + 0x900]
	0x01D4DBFC LDR X2, [X8]
	0x01D4DC00 MOV X0, X21
	0x01D4DC04 BL 0x265C3F4
	0x01D4DC08 B 0x1D4D824
	0x01D4DC0C BL 0x1C16F20
	0x01D4DC10 B 0x1D4E078
	0x01D4DC14 BL 0x1C16F20
	0x01D4DC18 B 0x1D4E078
	0x01D4DC1C BL 0x1C16F20
	0x01D4DC20 B 0x1D4E078
	0x01D4DC24 BL 0x1C16F20
	0x01D4DC28 B 0x1D4E078
	0x01D4DC2C BL 0x1C16F20
	0x01D4DC30 B 0x1D4E078
	0x01D4DC34 BL 0x1C16F20
	0x01D4DC38 B 0x1D4E078
	0x01D4DC3C BL 0x1C16F20
	0x01D4DC40 B 0x1D4E078
	0x01D4DC44 BL 0x1C16F20
	0x01D4DC48 B 0x1D4E078
	0x01D4DC4C B 0x1D4DC7C
	0x01D4DC50 B 0x1D4DC7C
	0x01D4DC54 B 0x1D4DC7C
	0x01D4DC58 B 0x1D4DC7C
	0x01D4DC5C B 0x1D4DC7C
	0x01D4DC60 B 0x1D4DC7C
	0x01D4DC64 B 0x1D4DC7C
	0x01D4DC68 B 0x1D4DC7C
	0x01D4DC6C B 0x1D4DC7C
	0x01D4DC70 B 0x1D4DC7C
	0x01D4DC74 B 0x1D4DC7C
	0x01D4DC78 B 0x1D4DC7C
	0x01D4DC7C MOV X22, X1
	0x01D4DC80 CMP W22, 0x1
	0x01D4DC84 B.NE 0x1D4DF8C
	0x01D4DC88 BL 0x3EB1AD0
	0x01D4DC8C LDR X23, [X0]
	0x01D4DC90 BL 0x3EB1AE0
	0x01D4DC94 MOV W25, W31
	0x01D4DC98 MOV W22, W31
	0x01D4DC9C CBNZ X21, 0x1D4DB40
	0x01D4DCA0 B 0x1D4DBA0
	0x01D4DCA4 ADRP X8, 0x23A7000
	0x01D4DCA8 LDR X8, [X8 + 0xA70]
	0x01D4DCAC ADD X0, X31, 0x30
	0x01D4DCB0 LDR X1, [X8]
	0x01D4DCB4 BL 0x2BC3C60
	0x01D4DCB8 B 0x1D4DF58
	0x01D4DCBC LDRSW X9, [X10]
	0x01D4DCC0 ADD X8, X8, X9, 0x4, LSL
	0x01D4DCC4 ADD X0, X8, 0x138
	0x01D4DCC8 LDP X8, X1, [X0]
	0x01D4DCCC MOV X0, X21
	0x01D4DCD0 BLR X8
	0x01D4DCD4 MOV X21, X0
	0x01D4DCD8 CBZ X0, 0x1D4E06C
	0x01D4DCDC ADRP X24, 0x23A6000
	0x01D4DCE0 ADRP X25, 0x23A7000
	0x01D4DCE4 ADRP X22, 0x23A6000
	0x01D4DCE8 ADRP X28, 0x23A7000
	0x01D4DCEC LDR X24, [X24 + 0xE18]
	0x01D4DCF0 LDR X25, [X25 + 0xAB8]
	0x01D4DCF4 LDR X22, [X22 + 0x648]
	0x01D4DCF8 LDR X28, [X28 + 0xAC0]
	0x01D4DCFC ADRP X26, 0x268B000
	0x01D4DD00 MOVZ W27, 0x1
	0x01D4DD04 LDR X8, [X21]
	0x01D4DD08 LDR X1, [X24]
	0x01D4DD0C LDRH W9, [X8 + 0x12E]
	0x01D4DD10 CBZ X9, 0x1D4DD34
	0x01D4DD14 LDR X10, [X8 + 0xB0]
	0x01D4DD18 ADD X10, X10, 0x8
	0x01D4DD1C LDUR X11, [X10 - 0x8]
	0x01D4DD20 CMP X11, X1
	0x01D4DD24 B.EQ 0x1D4DD44
	0x01D4DD28 SUBS X9, X9, 0x1
	0x01D4DD2C ADD X10, X10, 0x10
	0x01D4DD30 B.NE 0x1D4DD1C
	0x01D4DD34 MOV X0, X21
	0x01D4DD38 MOV W2, W31
	0x01D4DD3C BL 0x1C5C788
	0x01D4DD40 B 0x1D4DD50
	0x01D4DD44 LDRSW X9, [X10]
	0x01D4DD48 ADD X8, X8, X9, 0x4, LSL
	0x01D4DD4C ADD X0, X8, 0x138
	0x01D4DD50 LDP X8, X1, [X0]
	0x01D4DD54 MOV X0, X21
	0x01D4DD58 BLR X8
	0x01D4DD5C TBZ X0, 0x0, 0x1D4DE8C
	0x01D4DD60 LDR X8, [X21]
	0x01D4DD64 LDR X1, [X25]
	0x01D4DD68 LDRH W9, [X8 + 0x12E]
	0x01D4DD6C CBZ X9, 0x1D4DD90
	0x01D4DD70 LDR X10, [X8 + 0xB0]
	0x01D4DD74 ADD X10, X10, 0x8
	0x01D4DD78 LDUR X11, [X10 - 0x8]
	0x01D4DD7C CMP X11, X1
	0x01D4DD80 B.EQ 0x1D4DDA0
	0x01D4DD84 SUBS X9, X9, 0x1
	0x01D4DD88 ADD X10, X10, 0x10
	0x01D4DD8C B.NE 0x1D4DD78
	0x01D4DD90 MOV X0, X21
	0x01D4DD94 MOV W2, W31
	0x01D4DD98 BL 0x1C5C788
	0x01D4DD9C B 0x1D4DDAC
	0x01D4DDA0 LDRSW X9, [X10]
	0x01D4DDA4 ADD X8, X8, X9, 0x4, LSL
	0x01D4DDA8 ADD X0, X8, 0x138
	0x01D4DDAC LDP X8, X1, [X0]
	0x01D4DDB0 MOV X0, X21
	0x01D4DDB4 BLR X8
	0x01D4DDB8 MOV X23, X0
	0x01D4DDBC LDR X0, [X22]
	0x01D4DDC0 LDR W8, [X0 + 0xE0]
	0x01D4DDC4 CBNZ W8, 0x1D4DDCC
	0x01D4DDC8 BL 0x1C16DFC
	0x01D4DDCC LDRB W8, [X26 + 0x787]
	0x01D4DDD0 CBNZ W8, 0x1D4DDE0
	0x01D4DDD4 MOV X0, X22
	0x01D4DDD8 BL 0x1C16CF4
	0x01D4DDDC STRB W27, [X26 + 0x787]
	0x01D4DDE0 LDR X0, [X22]
	0x01D4DDE4 LDR W8, [X0 + 0xE0]
	0x01D4DDE8 CBNZ W8, 0x1D4DDF4
	0x01D4DDEC BL 0x1C16DFC
	0x01D4DDF0 LDR X0, [X22]
	0x01D4DDF4 LDR X8, [X0 + 0xB8]
	0x01D4DDF8 LDR X8, [X8]
	0x01D4DDFC CBZ X8, 0x1D4DFFC
	0x01D4DE00 LDR X8, [X8 + 0xC8]
	0x01D4DE04 CBZ X8, 0x1D4E000
	0x01D4DE08 CBZ X23, 0x1D4DFF4
	0x01D4DE0C LDR X0, [X8 + 0x50]
	0x01D4DE10 CBZ X0, 0x1D4DFF8
	0x01D4DE14 LDR X1, [X23 + 0x50]
	0x01D4DE18 LDR X3, [X28]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x268D000
	010 Move W8, [X21+1941]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {40}
	017 Move X0, 0x23A9000
	018 Move X0, [X0+2328]
	019 Call 0x1C17CF4
	020 Move X0, 0x23A8000
	021 Move X0, [X0+3880]
	022 Call 0x1C17CF4
	023 Move X0, 0x23A9000
	024 Move X0, [X0+2576]
	025 Call 0x1C17CF4
	026 Move X0, 0x23A9000
	027 Move X0, [X0+2584]
	028 Call 0x1C17CF4
	029 Move X0, 0x23A8000
	030 Move X0, [X0+3632]
	031 Call 0x1C17CF4
	032 Move X0, 0x23A8000
	033 Move X0, [X0+3648]
	034 Call 0x1C17CF4
	035 Move X0, 0x23A8000
	036 Move X0, [X0+2304]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X21+1941], W8
	040 Compare X20, 0
	041 JumpIfEqual {1005}
	042 Move X9, [X20+184]
	043 Compare X9, 0
	044 JumpIfEqual {1005}
	045 Move X22, [X19+24]
	046 Compare X22, 0
	047 JumpIfEqual {1005}
	048 Move X23, 0x23A9000
	049 Move X8, [X22]
	050 Move X23, [X23+2328]
	051 Move X21, [X9+72]
	052 NotImplemented "Instruction LDRH not yet implemented."
	053 Move X1, [X23]
	054 Compare X9, 0
	055 JumpIfEqual {62}
	056 Move X10, [X8+176]
	057 Add X10, X10, 8
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Subtract X9, X9, 1
	061 Add X10, X10, 16
	062 Move X0, X22
	063 Move W2, W31
	064 Call 0x1C5D788
	065 NotImplemented "Instruction LDRSW not yet implemented."
	066 Add X8, X8, X9
	067 Add X0, X8, 312
	068 Move X8, [X0]
	069 Move X1, [X0+8]
	070 Move X0, X22
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Compare X21, 0
	073 JumpIfEqual {1005}
	074 Move X25, 0x23A8000
	075 Move X25, [X25+2304]
	076 Move X1, X0
	077 Move X0, X21
	078 Move X2, [X25]
	079 Call StatePrimitive`1<Object>.set_value, X0, X1
	080 Move X9, [X20+184]
	081 Compare X9, 0
	082 JumpIfEqual {1005}
	083 Move X22, [X19+24]
	084 Compare X22, 0
	085 JumpIfEqual {1005}
	086 Move X8, [X22]
	087 Move X21, [X9+80]
	088 Move X1, [X23]
	089 NotImplemented "Instruction LDRH not yet implemented."
	090 Compare X9, 0
	091 JumpIfEqual {98}
	092 Move X10, [X8+176]
	093 Add X10, X10, 8
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Subtract X9, X9, 1
	097 Add X10, X10, 16
	098 Move W2, 4
	099 Move X0, X22
	100 Call 0x1C5D788
	101 Move W9, [X10]
	102 Add W9, W9, 4
	103 Add X8, X8, W9
	104 Add X0, X8, 312
	105 Move X8, [X0]
	106 Move X1, [X0+8]
	107 Move X0, X22
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Compare X0, 0
	110 JumpIfEqual {1005}
	111 Move X24, 0x23A8000
	112 Move X8, [X0]
	113 Move X24, [X24+3880]
	114 Move X22, X0
	115 NotImplemented "Instruction LDRH not yet implemented."
	116 Move X1, [X24]
	117 Compare X9, 0
	118 JumpIfEqual {125}
	119 Move X10, [X8+176]
	120 Add X10, X10, 8
	121 NotImplemented "Instruction LDUR not yet implemented."
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Subtract X9, X9, 1
	124 Add X10, X10, 16
	125 Move W2, 9
	126 Move X0, X22
	127 Call 0x1C5D788
	128 Move W9, [X10]
	129 Add W9, W9, 9
	130 Add X8, X8, W9
	131 Add X0, X8, 312
	132 Move X8, [X0]
	133 Move X1, [X0+8]
	134 Move X0, X22
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Compare X21, 0
	137 JumpIfEqual {1005}
	138 Move X2, [X25]
	139 Move X1, X0
	140 Move X0, X21
	141 Call StatePrimitive`1<Object>.set_value, X0, X1
	142 Move X9, [X20+184]
	143 Compare X9, 0
	144 JumpIfEqual {1005}
	145 Move X22, [X19+24]
	146 Compare X22, 0
	147 JumpIfEqual {1005}
	148 Move X8, [X22]
	149 Move X21, [X9+88]
	150 Move X1, [X23]
	151 NotImplemented "Instruction LDRH not yet implemented."
	152 Compare X9, 0
	153 JumpIfEqual {160}
	154 Move X10, [X8+176]
	155 Add X10, X10, 8
	156 NotImplemented "Instruction LDUR not yet implemented."
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Subtract X9, X9, 1
	159 Add X10, X10, 16
	160 Move W2, 4
	161 Move X0, X22
	162 Call 0x1C5D788
	163 Move W9, [X10]
	164 Add W9, W9, 4
	165 Add X8, X8, W9
	166 Add X0, X8, 312
	167 Move X8, [X0]
	168 Move X1, [X0+8]
	169 Move X0, X22
	170 NotImplemented "Instruction BLR not yet implemented."
	171 Compare X0, 0
	172 JumpIfEqual {1005}
	173 Move X8, [X0]
	174 Move X1, [X24]
	175 Move X22, X0
	176 NotImplemented "Instruction LDRH not yet implemented."
	177 Compare X9, 0
	178 JumpIfEqual {185}
	179 Move X10, [X8+176]
	180 Add X10, X10, 8
	181 NotImplemented "Instruction LDUR not yet implemented."
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Subtract X9, X9, 1
	184 Add X10, X10, 16
	185 Move W2, 17
	186 Move X0, X22
	187 Call 0x1C5D788
	188 Move W9, [X10]
	189 Add W9, W9, 17
	190 Add X8, X8, W9
	191 Add X0, X8, 312
	192 Move X8, [X0]
	193 Move X1, [X0+8]
	194 Move X0, X22
	195 NotImplemented "Instruction BLR not yet implemented."
	196 Compare X21, 0
	197 JumpIfEqual {1005}
	198 Move X2, [X25]
	199 Move X1, X0
	200 Move X0, X21
	201 Call StatePrimitive`1<Object>.set_value, X0, X1
	202 Move X9, [X20+184]
	203 Compare X9, 0
	204 JumpIfEqual {1005}
	205 Move X22, [X19+24]
	206 Compare X22, 0
	207 JumpIfEqual {1005}
	208 Move X8, [X22]
	209 Move X21, [X9+96]
	210 Move X1, [X23]
	211 NotImplemented "Instruction LDRH not yet implemented."
	212 Compare X9, 0
	213 JumpIfEqual {220}
	214 Move X10, [X8+176]
	215 Add X10, X10, 8
	216 NotImplemented "Instruction LDUR not yet implemented."
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Subtract X9, X9, 1
	219 Add X10, X10, 16
	220 Move W2, 4
	221 Move X0, X22
	222 Call 0x1C5D788
	223 Move W9, [X10]
	224 Add W9, W9, 4
	225 Add X8, X8, W9
	226 Add X0, X8, 312
	227 Move X8, [X0]
	228 Move X1, [X0+8]
	229 Move X0, X22
	230 NotImplemented "Instruction BLR not yet implemented."
	231 Compare X0, 0
	232 JumpIfEqual {1005}
	233 Move X8, [X0]
	234 Move X1, [X24]
	235 Move X22, X0
	236 NotImplemented "Instruction LDRH not yet implemented."
	237 Compare X9, 0
	238 JumpIfEqual {245}
	239 Move X10, [X8+176]
	240 Add X10, X10, 8
	241 NotImplemented "Instruction LDUR not yet implemented."
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Subtract X9, X9, 1
	244 Add X10, X10, 16
	245 Move W2, 3
	246 Move X0, X22
	247 Call 0x1C5D788
	248 Move W9, [X10]
	249 Add W9, W9, 3
	250 Add X8, X8, W9
	251 Add X0, X8, 312
	252 Move X8, [X0]
	253 Move X1, [X0+8]
	254 Move X0, X22
	255 NotImplemented "Instruction BLR not yet implemented."
	256 Compare X21, 0
	257 JumpIfEqual {1005}
	258 Move X2, [X25]
	259 Move X1, X0
	260 Move X0, X21
	261 Call StatePrimitive`1<Object>.set_value, X0, X1
	262 Move X21, [X19+24]
	263 Compare X21, 0
	264 JumpIfEqual {1005}
	265 Move X8, [X21]
	266 Move X1, [X23]
	267 NotImplemented "Instruction LDRH not yet implemented."
	268 Compare X9, 0
	269 JumpIfEqual {276}
	270 Move X10, [X8+176]
	271 Add X10, X10, 8
	272 NotImplemented "Instruction LDUR not yet implemented."
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Subtract X9, X9, 1
	275 Add X10, X10, 16
	276 Move W2, 4
	277 Move X0, X21
	278 Call 0x1C5D788
	279 Move W9, [X10]
	280 Add W9, W9, 4
	281 Add X8, X8, W9
	282 Add X0, X8, 312
	283 Move X8, [X0]
	284 Move X1, [X0+8]
	285 Move X0, X21
	286 NotImplemented "Instruction BLR not yet implemented."
	287 Compare X0, 0
	288 JumpIfEqual {1005}
	289 Move X8, [X0]
	290 Move X1, [X24]
	291 Move X21, X0
	292 NotImplemented "Instruction LDRH not yet implemented."
	293 Compare X9, 0
	294 JumpIfEqual {301}
	295 Move X10, [X8+176]
	296 Add X10, X10, 8
	297 NotImplemented "Instruction LDUR not yet implemented."
	298 NotImplemented "Instruction CMP not yet implemented."
	299 Subtract X9, X9, 1
	300 Add X10, X10, 16
	301 Move W2, 3
	302 Move X0, X21
	303 Call 0x1C5D788
	304 Move W9, [X10]
	305 Add W9, W9, 3
	306 Add X8, X8, W9
	307 Add X0, X8, 312
	308 Move X8, [X0]
	309 Move X1, [X0+8]
	310 Move X0, X21
	311 NotImplemented "Instruction BLR not yet implemented."
	312 Move X1, X31
	313 Call String.IsNullOrEmpty, X0
	314 Move TEMP, X0
	315 And TEMP, TEMP, 1
	316 Compare TEMP, 1
	317 JumpIfNotEqual {378}
	318 Move X9, [X20+184]
	319 Compare X9, 0
	320 JumpIfEqual {1005}
	321 Move X22, [X19+24]
	322 Compare X22, 0
	323 JumpIfEqual {1005}
	324 Move X8, [X22]
	325 Move X21, [X9+96]
	326 Move X1, [X23]
	327 NotImplemented "Instruction LDRH not yet implemented."
	328 Compare X9, 0
	329 JumpIfEqual {336}
	330 Move X10, [X8+176]
	331 Add X10, X10, 8
	332 NotImplemented "Instruction LDUR not yet implemented."
	333 NotImplemented "Instruction CMP not yet implemented."
	334 Subtract X9, X9, 1
	335 Add X10, X10, 16
	336 Move W2, 4
	337 Move X0, X22
	338 Call 0x1C5D788
	339 Move W9, [X10]
	340 Add W9, W9, 4
	341 Add X8, X8, W9
	342 Add X0, X8, 312
	343 Move X8, [X0]
	344 Move X1, [X0+8]
	345 Move X0, X22
	346 NotImplemented "Instruction BLR not yet implemented."
	347 Compare X0, 0
	348 JumpIfEqual {1005}
	349 Move X8, [X0]
	350 Move X1, [X24]
	351 Move X22, X0
	352 NotImplemented "Instruction LDRH not yet implemented."
	353 Compare X9, 0
	354 JumpIfEqual {361}
	355 Move X10, [X8+176]
	356 Add X10, X10, 8
	357 NotImplemented "Instruction LDUR not yet implemented."
	358 NotImplemented "Instruction CMP not yet implemented."
	359 Subtract X9, X9, 1
	360 Add X10, X10, 16
	361 Move W2, 17
	362 Move X0, X22
	363 Call 0x1C5D788
	364 Move W9, [X10]
	365 Add W9, W9, 17
	366 Add X8, X8, W9
	367 Add X0, X8, 312
	368 Move X8, [X0]
	369 Move X1, [X0+8]
	370 Move X0, X22
	371 NotImplemented "Instruction BLR not yet implemented."
	372 Compare X21, 0
	373 JumpIfEqual {1005}
	374 Move X2, [X25]
	375 Move X1, X0
	376 Move X0, X21
	377 Call StatePrimitive`1<Object>.set_value, X0, X1
	378 Move X9, [X20+184]
	379 Compare X9, 0
	380 JumpIfEqual {1005}
	381 Move X22, [X19+24]
	382 Compare X22, 0
	383 JumpIfEqual {1005}
	384 Move X8, [X22]
	385 Move X21, [X9+104]
	386 Move X1, [X23]
	387 NotImplemented "Instruction LDRH not yet implemented."
	388 Compare X9, 0
	389 JumpIfEqual {396}
	390 Move X10, [X8+176]
	391 Add X10, X10, 8
	392 NotImplemented "Instruction LDUR not yet implemented."
	393 NotImplemented "Instruction CMP not yet implemented."
	394 Subtract X9, X9, 1
	395 Add X10, X10, 16
	396 Move W2, 4
	397 Move X0, X22
	398 Call 0x1C5D788
	399 Move W9, [X10]
	400 Add W9, W9, 4
	401 Add X8, X8, W9
	402 Add X0, X8, 312
	403 Move X8, [X0]
	404 Move X1, [X0+8]
	405 Move X0, X22
	406 NotImplemented "Instruction BLR not yet implemented."
	407 Compare X0, 0
	408 JumpIfEqual {1005}
	409 Move X8, [X0]
	410 Move X1, [X24]
	411 Move X22, X0
	412 NotImplemented "Instruction LDRH not yet implemented."
	413 Compare X9, 0
	414 JumpIfEqual {421}
	415 Move X10, [X8+176]
	416 Add X10, X10, 8
	417 NotImplemented "Instruction LDUR not yet implemented."
	418 NotImplemented "Instruction CMP not yet implemented."
	419 Subtract X9, X9, 1
	420 Add X10, X10, 16
	421 Move W2, 1
	422 Move X0, X22
	423 Call 0x1C5D788
	424 Move W9, [X10]
	425 Add W9, W9, 1
	426 Add X8, X8, W9
	427 Add X0, X8, 312
	428 Move X8, [X0]
	429 Move X1, [X0+8]
	430 Move X0, X22
	431 NotImplemented "Instruction BLR not yet implemented."
	432 Compare X21, 0
	433 JumpIfEqual {1005}
	434 Move X2, [X25]
	435 Move X1, X0
	436 Move X0, X21
	437 Call StatePrimitive`1<Object>.set_value, X0, X1
	438 Move X21, [X19+24]
	439 Compare X21, 0
	440 JumpIfEqual {1005}
	441 Move X8, [X21]
	442 Move X1, [X23]
	443 NotImplemented "Instruction LDRH not yet implemented."
	444 Compare X9, 0
	445 JumpIfEqual {452}
	446 Move X10, [X8+176]
	447 Add X10, X10, 8
	448 NotImplemented "Instruction LDUR not yet implemented."
	449 NotImplemented "Instruction CMP not yet implemented."
	450 Subtract X9, X9, 1
	451 Add X10, X10, 16
	452 Move W2, 4
	453 Move X0, X21
	454 Call 0x1C5D788
	455 Move W9, [X10]
	456 Add W9, W9, 4
	457 Add X8, X8, W9
	458 Add X0, X8, 312
	459 Move X8, [X0]
	460 Move X1, [X0+8]
	461 Move X0, X21
	462 NotImplemented "Instruction BLR not yet implemented."
	463 Compare X0, 0
	464 JumpIfEqual {1005}
	465 Move X8, [X0]
	466 Move X1, [X24]
	467 Move X21, X0
	468 NotImplemented "Instruction LDRH not yet implemented."
	469 Compare X9, 0
	470 JumpIfEqual {477}
	471 Move X10, [X8+176]
	472 Add X10, X10, 8
	473 NotImplemented "Instruction LDUR not yet implemented."
	474 NotImplemented "Instruction CMP not yet implemented."
	475 Subtract X9, X9, 1
	476 Add X10, X10, 16
	477 Move W2, 12
	478 Move X0, X21
	479 Call 0x1C5D788
	480 Move W9, [X10]
	481 Add W9, W9, 12
	482 Add X8, X8, W9
	483 Add X0, X8, 312
	484 Move X8, [X0]
	485 Move X1, [X0+8]
	486 Move X0, X21
	487 NotImplemented "Instruction BLR not yet implemented."
	488 Move X1, X31
	489 Call String.IsNullOrEmpty, X0
	490 Move TEMP, X0
	491 And TEMP, TEMP, 1
	492 Compare TEMP, 1
	493 JumpIfEqual {560}
	494 Move X21, [X19+24]
	495 Compare X21, 0
	496 JumpIfEqual {658}
	497 Move X8, [X21]
	498 Move X1, [X23]
	499 NotImplemented "Instruction LDRH not yet implemented."
	500 Compare X9, 0
	501 JumpIfEqual {508}
	502 Move X10, [X8+176]
	503 Add X10, X10, 8
	504 NotImplemented "Instruction LDUR not yet implemented."
	505 NotImplemented "Instruction CMP not yet implemented."
	506 Subtract X9, X9, 1
	507 Add X10, X10, 16
	508 Move W2, 4
	509 Move X0, X21
	510 Call 0x1C5D788
	511 Move W9, [X10]
	512 Add W9, W9, 4
	513 Add X8, X8, W9
	514 Add X0, X8, 312
	515 Move X8, [X0]
	516 Move X1, [X0+8]
	517 Move X0, X21
	518 NotImplemented "Instruction BLR not yet implemented."
	519 Move X21, X0
	520 Compare X0, 0
	521 JumpIfEqual {661}
	522 Move X8, [X21]
	523 Move X1, [X24]
	524 NotImplemented "Instruction LDRH not yet implemented."
	525 Compare X9, 0
	526 JumpIfEqual {533}
	527 Move X10, [X8+176]
	528 Add X10, X10, 8
	529 NotImplemented "Instruction LDUR not yet implemented."
	530 NotImplemented "Instruction CMP not yet implemented."
	531 Subtract X9, X9, 1
	532 Add X10, X10, 16
	533 Move W2, 12
	534 Move X0, X21
	535 Call 0x1C5D788
	536 Move W9, [X10]
	537 Add W9, W9, 12
	538 Add X8, X8, W9
	539 Add X0, X8, 312
	540 Move X8, [X0]
	541 Move X1, [X0+8]
	542 Move X0, X21
	543 NotImplemented "Instruction BLR not yet implemented."
	544 Move X8, 0x23A8000
	545 Move X8, [X8+2576]
	546 Move X1, [X8]
	547 Call JsonUtility.FromJson, X0
	548 Move X8, [X20+184]
	549 Compare X8, 0
	550 JumpIfEqual {664}
	551 Move X8, [X8+152]
	552 Compare X8, 0
	553 JumpIfEqual {667}
	554 Move X9, 0x23A7000
	555 Move X9, [X9+3632]
	556 And W1, W0, 1
	557 Move X2, [X9]
	558 Move X0, X8
	559 Call 0x26528D0, X0, X1
	560 Move X21, [X19+24]
	561 Compare X21, 0
	562 JumpIfEqual {1005}
	563 Move X8, [X21]
	564 Move X1, [X23]
	565 NotImplemented "Instruction LDRH not yet implemented."
	566 Compare X9, 0
	567 JumpIfEqual {574}
	568 Move X10, [X8+176]
	569 Add X10, X10, 8
	570 NotImplemented "Instruction LDUR not yet implemented."
	571 NotImplemented "Instruction CMP not yet implemented."
	572 Subtract X9, X9, 1
	573 Add X10, X10, 16
	574 Move W2, 6
	575 Move X0, X21
	576 Call 0x1C5D788
	577 Move W9, [X10]
	578 Add W9, W9, 6
	579 Add X8, X8, W9
	580 Add X0, X8, 312
	581 Move X8, [X0]
	582 Move X1, [X0+8]
	583 Move X0, X21
	584 NotImplemented "Instruction BLR not yet implemented."
	585 Move X1, X31
	586 Call String.IsNullOrEmpty, X0
	587 Move TEMP, X0
	588 And TEMP, TEMP, 1
	589 Compare TEMP, 1
	590 JumpIfEqual {649}
	591 Move X21, [X19+24]
	592 Compare X21, 0
	593 JumpIfEqual {660}
	594 Move X8, [X21]
	595 Move X1, [X23]
	596 NotImplemented "Instruction LDRH not yet implemented."
	597 Compare X9, 0
	598 JumpIfEqual {605}
	599 Move X10, [X8+176]
	600 Add X10, X10, 8
	601 NotImplemented "Instruction LDUR not yet implemented."
	602 NotImplemented "Instruction CMP not yet implemented."
	603 Subtract X9, X9, 1
	604 Add X10, X10, 16
	605 Move W2, 6
	606 Move X0, X21
	607 Call 0x1C5D788
	608 Move W9, [X10]
	609 Add W9, W9, 6
	610 Add X8, X8, W9
	611 Add X0, X8, 312
	612 Move X8, [X0]
	613 Move X1, [X0+8]
	614 Move X0, X21
	615 NotImplemented "Instruction BLR not yet implemented."
	616 Move X8, 0x23A8000
	617 Move X8, [X8+2584]
	618 Move X1, [X8]
	619 Call JsonUtility.FromJson, X0
	620 Move X8, [X20+184]
	621 Compare X8, 0
	622 JumpIfEqual {662}
	623 Move X8, [X8+128]
	624 Compare X8, 0
	625 JumpIfEqual {663}
	626 Move X21, X0
	627 Move X0, [X8+72]
	628 Compare X0, 0
	629 JumpIfEqual {666}
	630 Move X22, 0x23A7000
	631 Move X22, [X22+3648]
	632 Move X2, [X22]
	633 Move W1, W21
	634 Call StatePrimitive`1<Int32>.set_value, X0, X1
	635 Move X8, [X20+184]
	636 Compare X8, 0
	637 JumpIfEqual {668}
	638 Move X8, [X8+128]
	639 Compare X8, 0
	640 JumpIfEqual {669}
	641 Move X0, [X8+80]
	642 Compare X0, 0
	643 JumpIfEqual {670}
	644 Move X2, [X22]
	645 Move X1, X21
	646 ShiftRight X1, 32
	647 And X1, X1, 0x7FFFFFFF
	648 Call StatePrimitive`1<Int32>.set_value, X0, X1
	649 Move X20, [X31+48]
	650 Move X19, [X31+56]
	651 Move X22, [X31+32]
	652 Move X21, [X31+40]
	653 Move X24, [X31+16]
	654 Move X23, [X31+24]
	655 Move X30, [X31+64]
	656 Move X25, [X31+72]
	657 Return 
	658 Move X25, X23
	659 Call 0x1C17F20
	660 Call 0x1C17F20
	661 Call 0x1C17F20
	662 Call 0x1C17F20
	663 Call 0x1C17F20
	664 Move X25, X23
	665 Call 0x1C17F20
	666 Call 0x1C17F20
	667 Call 0x1C17F20
	668 Call 0x1C17F20
	669 Call 0x1C17F20
	670 Call 0x1C17F20
	671 Move X21, X0
	672 NotImplemented "Instruction CMP not yet implemented."
	673 Move X0, X21
	674 Call 0x3EB2AD0
	675 Move X20, X0
	676 Move X0, 0x23A7000
	677 Move X0, [X0+2000]
	678 Call 0x1C17D08
	679 Move X8, [X20]
	680 Move X1, [X8]
	681 Call 0x1C18270
	682 Move TEMP, X0
	683 And TEMP, TEMP, 1
	684 Compare TEMP, 1
	685 JumpIfNotEqual {847}
	686 Move X20, [X20]
	687 Call 0x3EB2AE0
	688 Move X0, 0x23A7000
	689 Move X0, [X0+1824]
	690 Call 0x1C17D08
	691 Call 0x1C17F10
	692 Move X21, X0
	693 Move X0, 0x23A7000
	694 Move X0, [X0+1816]
	695 Call 0x1C17D08
	696 Move X1, X0
	697 Move X0, X21
	698 Call Dictionary`2<Object, Object>..ctor, X0
	699 Move X22, [X19+24]
	700 Compare X22, 0
	701 JumpIfEqual {1005}
	702 Move X0, 0x23A8000
	703 Move X0, [X0+2328]
	704 Call 0x1C17D08
	705 Move X8, [X22]
	706 Move X1, X0
	707 NotImplemented "Instruction LDRH not yet implemented."
	708 Compare X9, 0
	709 JumpIfEqual {716}
	710 Move X10, [X8+176]
	711 Add X10, X10, 8
	712 NotImplemented "Instruction LDUR not yet implemented."
	713 NotImplemented "Instruction CMP not yet implemented."
	714 Subtract X9, X9, 1
	715 Add X10, X10, 16
	716 Move W2, 4
	717 Move X0, X22
	718 Call 0x1C5D788
	719 Move W9, [X10]
	720 Add W9, W9, 4
	721 Add X8, X8, W9
	722 Add X0, X8, 312
	723 Move X8, [X0]
	724 Move X1, [X0+8]
	725 Move X0, X22
	726 NotImplemented "Instruction BLR not yet implemented."
	727 Compare X0, 0
	728 JumpIfEqual {1005}
	729 Move X22, X0
	730 Move X0, 0x23A7000
	731 Move X0, [X0+3880]
	732 Call 0x1C17D08
	733 Move X8, [X22]
	734 Move X1, X0
	735 NotImplemented "Instruction LDRH not yet implemented."
	736 Compare X9, 0
	737 JumpIfEqual {744}
	738 Move X10, [X8+176]
	739 Add X10, X10, 8
	740 NotImplemented "Instruction LDUR not yet implemented."
	741 NotImplemented "Instruction CMP not yet implemented."
	742 Subtract X9, X9, 1
	743 Add X10, X10, 16
	744 Move W2, 9
	745 Move X0, X22
	746 Call 0x1C5D788
	747 Move W9, [X10]
	748 Add W9, W9, 9
	749 Add X8, X8, W9
	750 Add X0, X8, 312
	751 Move X8, [X0]
	752 Move X1, [X0+8]
	753 Move X0, X22
	754 NotImplemented "Instruction BLR not yet implemented."
	755 Compare X21, 0
	756 JumpIfEqual {1005}
	757 Move X22, X0
	758 Move X0, 0x23A8000
	759 Move X0, [X0+2592]
	760 Call 0x1C17D08
	761 Move X23, X0
	762 Move X0, 0x23A7000
	763 Move X0, [X0+1808]
	764 Call 0x1C17D08
	765 Move X3, X0
	766 Move X0, X21
	767 Move X1, X23
	768 Move X2, X22
	769 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	770 Move X19, [X19+24]
	771 Compare X19, 0
	772 JumpIfEqual {1005}
	773 Move X0, 0x23A8000
	774 Move X0, [X0+2328]
	775 Call 0x1C17D08
	776 Move X8, [X19]
	777 Move X1, X0
	778 NotImplemented "Instruction LDRH not yet implemented."
	779 Compare X9, 0
	780 JumpIfEqual {787}
	781 Move X10, [X8+176]
	782 Add X10, X10, 8
	783 NotImplemented "Instruction LDUR not yet implemented."
	784 NotImplemented "Instruction CMP not yet implemented."
	785 Subtract X9, X9, 1
	786 Add X10, X10, 16
	787 Move W2, 6
	788 Move X0, X19
	789 Call 0x1C5D788
	790 Move W9, [X10]
	791 Add W9, W9, 6
	792 Add X8, X8, W9
	793 Add X0, X8, 312
	794 Move X8, [X0]
	795 Move X1, [X0+8]
	796 Move X0, X19
	797 NotImplemented "Instruction BLR not yet implemented."
	798 Move X19, X0
	799 Move X0, 0x23A8000
	800 Move X0, [X0+2600]
	801 Call 0x1C17D08
	802 Move X22, X0
	803 Move X0, 0x23A7000
	804 Move X0, [X0+1808]
	805 Call 0x1C17D08
	806 Move X3, X0
	807 Move X0, X21
	808 Move X1, X22
	809 Move X2, X19
	810 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	811 Move X0, 0x23A7000
	812 Move X0, [X0+1928]
	813 Call 0x1C17D08
	814 Move W8, [X0+224]
	815 Compare W8, 0
	816 JumpIfNotEqual {818}
	817 Call 0x1C17DFC
	818 Move X0, 0x23A8000
	819 Move X0, [X0+2608]
	820 Call 0x1C17D08
	821 Move X19, X0
	822 Move X0, 0x23A8000
	823 Move X0, [X0+2616]
	824 Call 0x1C17D08
	825 Move X22, X0
	826 Move X0, 0x23A8000
	827 Move X0, [X0+2624]
	828 Call 0x1C17D08
	829 Move X1, X19
	830 Move X2, X20
	831 Move X3, X21
	832 Move X4, X22
	833 Move X20, [X31+48]
	834 Move X19, [X31+56]
	835 Move X22, [X31+32]
	836 Move X21, [X31+40]
	837 Move X24, [X31+16]
	838 Move X23, [X31+24]
	839 Move X5, X0
	840 Move W0, 2048
	841 Move W6, 105
	842 Move X7, X31
	843 Move X30, [X31+64]
	844 Move X25, [X31+72]
	845 Call Log.Error, X0, X1, X2, X3, X4, X5, X6
	846 Return 
	847 Move W0, 8
	848 Call 0x3EB2AF0
	849 Move X8, [X20]
	850 Move [X0], X8
	851 Move X1, 0x2168000
	852 Add X1, X1, 3672
	853 Move X2, X31
	854 Call 0x3EB2B00
	855 Move X21, X0
	856 Call 0x3EB2AE0
	857 Move X25, X23
	858 Move X21, X0
	859 NotImplemented "Instruction CMP not yet implemented."
	860 Move X0, X21
	861 Call 0x3EB2AD0
	862 Move X21, X0
	863 Move X0, 0x23A7000
	864 Move X0, [X0+2000]
	865 Call 0x1C17D08
	866 Move X8, [X21]
	867 Move X1, [X8]
	868 Call 0x1C18270
	869 Move TEMP, X0
	870 And TEMP, TEMP, 1
	871 Compare TEMP, 1
	872 JumpIfNotEqual {1055}
	873 Move X21, [X21]
	874 Call 0x3EB2AE0
	875 Move X0, 0x23A7000
	876 Move X0, [X0+1824]
	877 Call 0x1C17D08
	878 Call 0x1C17F10
	879 Move X22, X0
	880 Move X0, 0x23A7000
	881 Move X0, [X0+1816]
	882 Call 0x1C17D08
	883 Move X1, X0
	884 Move X0, X22
	885 Call Dictionary`2<Object, Object>..ctor, X0
	886 Move X23, [X19+24]
	887 Compare X23, 0
	888 JumpIfEqual {1005}
	889 Move X0, 0x23A8000
	890 Move X0, [X0+2328]
	891 Call 0x1C17D08
	892 Move X8, [X23]
	893 Move X1, X0
	894 NotImplemented "Instruction LDRH not yet implemented."
	895 Compare X9, 0
	896 JumpIfEqual {903}
	897 Move X10, [X8+176]
	898 Add X10, X10, 8
	899 NotImplemented "Instruction LDUR not yet implemented."
	900 NotImplemented "Instruction CMP not yet implemented."
	901 Subtract X9, X9, 1
	902 Add X10, X10, 16
	903 Move W2, 4
	904 Move X0, X23
	905 Call 0x1C5D788
	906 Move W9, [X10]
	907 Add W9, W9, 4
	908 Add X8, X8, W9
	909 Add X0, X8, 312
	910 Move X8, [X0]
	911 Move X1, [X0+8]
	912 Move X0, X23
	913 NotImplemented "Instruction BLR not yet implemented."
	914 Compare X0, 0
	915 JumpIfEqual {1005}
	916 Move X23, X0
	917 Move X0, 0x23A7000
	918 Move X0, [X0+3880]
	919 Call 0x1C17D08
	920 Move X8, [X23]
	921 Move X1, X0
	922 NotImplemented "Instruction LDRH not yet implemented."
	923 Compare X9, 0
	924 JumpIfEqual {931}
	925 Move X10, [X8+176]
	926 Add X10, X10, 8
	927 NotImplemented "Instruction LDUR not yet implemented."
	928 NotImplemented "Instruction CMP not yet implemented."
	929 Subtract X9, X9, 1
	930 Add X10, X10, 16
	931 Move W2, 9
	932 Move X0, X23
	933 Call 0x1C5D788
	934 Move W9, [X10]
	935 Add W9, W9, 9
	936 Add X8, X8, W9
	937 Add X0, X8, 312
	938 Move X8, [X0]
	939 Move X1, [X0+8]
	940 Move X0, X23
	941 NotImplemented "Instruction BLR not yet implemented."
	942 Compare X22, 0
	943 JumpIfEqual {1005}
	944 Move X23, X0
	945 Move X0, 0x23A8000
	946 Move X0, [X0+2592]
	947 Call 0x1C17D08
	948 Move X24, X0
	949 Move X0, 0x23A7000
	950 Move X0, [X0+1808]
	951 Call 0x1C17D08
	952 Move X3, X0
	953 Move X0, X22
	954 Move X1, X24
	955 Move X2, X23
	956 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	957 Move X23, [X19+24]
	958 Compare X23, 0
	959 JumpIfEqual {1005}
	960 Move X0, 0x23A8000
	961 Move X0, [X0+2328]
	962 Call 0x1C17D08
	963 Move X8, [X23]
	964 Move X1, X0
	965 NotImplemented "Instruction LDRH not yet implemented."
	966 Compare X9, 0
	967 JumpIfEqual {974}
	968 Move X10, [X8+176]
	969 Add X10, X10, 8
	970 NotImplemented "Instruction LDUR not yet implemented."
	971 NotImplemented "Instruction CMP not yet implemented."
	972 Subtract X9, X9, 1
	973 Add X10, X10, 16
	974 Move W2, 4
	975 Move X0, X23
	976 Call 0x1C5D788
	977 Move W9, [X10]
	978 Add W9, W9, 4
	979 Add X8, X8, W9
	980 Add X0, X8, 312
	981 Move X8, [X0]
	982 Move X1, [X0+8]
	983 Move X0, X23
	984 NotImplemented "Instruction BLR not yet implemented."
	985 Compare X0, 0
	986 JumpIfEqual {1005}
	987 Move X23, X0
	988 Move X0, 0x23A7000
	989 Move X0, [X0+3880]
	990 Call 0x1C17D08
	991 Move X8, [X23]
	992 Move X1, X0
	993 NotImplemented "Instruction LDRH not yet implemented."
	994 Compare X9, 0
	995 JumpIfEqual {1002}
	996 Move X10, [X8+176]
	997 Add X10, X10, 8
	998 NotImplemented "Instruction LDUR not yet implemented."
	999 NotImplemented "Instruction CMP not yet implemented."
	1000 Subtract X9, X9, 1
	1001 Add X10, X10, 16
	1002 Move W2, 12
	1003 Move X0, X23
	1004 Call 0x1C5D788
	1005 Call 0x1C17F20
	1006 Move W9, [X10]
	1007 Add W9, W9, 12
	1008 Add X8, X8, W9
	1009 Add X0, X8, 312
	1010 Move X8, [X0]
	1011 Move X1, [X0+8]
	1012 Move X0, X23
	1013 NotImplemented "Instruction BLR not yet implemented."
	1014 Move X23, X0
	1015 Move X0, 0x23A8000
	1016 Move X0, [X0+2632]
	1017 Call 0x1C17D08
	1018 Move X24, X0
	1019 Move X0, 0x23A7000
	1020 Move X0, [X0+1808]
	1021 Call 0x1C17D08
	1022 Move X3, X0
	1023 Move X0, X22
	1024 Move X1, X24
	1025 Move X2, X23
	1026 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1027 Move X0, 0x23A7000
	1028 Move X0, [X0+1928]
	1029 Call 0x1C17D08
	1030 Move W8, [X0+224]
	1031 Compare W8, 0
	1032 JumpIfNotEqual {1034}
	1033 Call 0x1C17DFC
	1034 Move X0, 0x23A8000
	1035 Move X0, [X0+2640]
	1036 Call 0x1C17D08
	1037 Move X23, X0
	1038 Move X0, 0x23A8000
	1039 Move X0, [X0+2616]
	1040 Call 0x1C17D08
	1041 Move X24, X0
	1042 Move X0, 0x23A8000
	1043 Move X0, [X0+2624]
	1044 Call 0x1C17D08
	1045 Move X5, X0
	1046 Move W0, 2048
	1047 Move W6, 87
	1048 Move X1, X23
	1049 Move X2, X21
	1050 Move X3, X22
	1051 Move X4, X24
	1052 Move X7, X31
	1053 Call Log.Error, X0, X1, X2, X3, X4, X5, X6
	1054 Move X23, X25
	1055 Move W0, 8
	1056 Call 0x3EB2AF0
	1057 Move X8, [X21]
	1058 Move [X0], X8
	1059 Move X1, 0x2168000
	1060 Add X1, X1, 3672
	1061 Move X2, X31
	1062 Call 0x3EB2B00
	1063 Move X21, X0
	1064 Call 0x3EB2AE0
	1065 Move X0, X21
	1066 Call 0x1D2D690
	1067 Call 0x1991590

