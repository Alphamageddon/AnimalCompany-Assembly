Type: AnimalCompany.NetPlayer/<VoiceVolumeUpdater>d__131

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01DB6CBC LDR W8, [X0 + 0xE0]
	0x01DB6CC0 CBNZ W8, 0x1DB6CC8
	0x01DB6CC4 BL 0x1C16DFC
	0x01DB6CC8 ADRP X8, 0x2341000
	0x01DB6CCC LDR X8, [X8 + 0xC28]
	0x01DB6CD0 MOV W1, W25
	0x01DB6CD4 LDP X20, X19, [X31 + 0x80]
	0x01DB6CD8 LDP X22, X21, [X31 + 0x70]
	0x01DB6CDC LDR X0, [X8]
	0x01DB6CE0 LDP X24, X23, [X31 + 0x60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01DBA180 LDR X8, [X8 + 0xB8]

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01DBA184 STR X21, [X8 + 0x8]
	0x01DBA188 LDR X3, [X24]
	0x01DBA18C MOV X0, X20
	0x01DBA190 MOV X1, X21
	0x01DBA194 MOV W2, W19
	0x01DBA198 LDP X20, X19, [X31 + 0x30]
	0x01DBA19C LDP X22, X21, [X31 + 0x20]
	0x01DBA1A0 LDP X24, X23, [X31 + 0x10]
	0x01DBA1A4 LDR X30, [X31], #0x40
	0x01DBA1A8 B 0x28BB1D0
	0x01DBA1AC STR X30, [X31 - 0x20]!
	0x01DBA1B0 STP X20, X19, [X31 + 0x10]
	0x01DBA1B4 ADRP X19, 0x261E000
	0x01DBA1B8 ADRP X20, 0x233D000
	0x01DBA1BC LDRB W8, [X19 + 0xB32]
	0x01DBA1C0 LDR X20, [X20 + 0xD20]
	0x01DBA1C4 TBNZ X8, 0x0, 0x1DBA1DC
	0x01DBA1C8 ADRP X0, 0x233D000
	0x01DBA1CC LDR X0, [X0 + 0xD20]
	0x01DBA1D0 BL 0x1C16CF4
	0x01DBA1D4 MOVZ W8, 0x1
	0x01DBA1D8 STRB W8, [X19 + 0xB32]
	0x01DBA1DC LDR X0, [X20]
	0x01DBA1E0 BL 0x1C16F10
	0x01DBA1E4 MOV X1, X31
	0x01DBA1E8 MOV X19, X0
	0x01DBA1EC BL 0x33BDD8C
	0x01DBA1F0 LDR X8, [X20]
	0x01DBA1F4 LDR X8, [X8 + 0xB8]
	0x01DBA1F8 STR X19, [X8]
	0x01DBA1FC LDP X20, X19, [X31 + 0x10]
	0x01DBA200 LDR X30, [X31], #0x20
	0x01DBA204 RET
	0x01DBA208 MOV X1, X31
	0x01DBA20C B 0x33BDD8C
	0x01DBA210 STR X30, [X31 - 0x10]!
	0x01DBA214 CBZ X1, 0x1DBA22C
	0x01DBA218 LDR X8, [X1 + 0xE0]
	0x01DBA21C CBZ X8, 0x1DBA22C
	0x01DBA220 LDR X0, [X8 + 0x60]
	0x01DBA224 LDR X30, [X31], #0x10
	0x01DBA228 RET
	0x01DBA22C BL 0x1C16F20
	0x01DBA230 STP X30, X21, [X31 - 0x20]!
	0x01DBA234 STP X20, X19, [X31 + 0x10]
	0x01DBA238 ADRP X21, 0x261E000
	0x01DBA23C LDRB W8, [X21 + 0xB33]
	0x01DBA240 MOV X20, X1
	0x01DBA244 MOV X19, X0
	0x01DBA248 TBNZ X8, 0x0, 0x1DBA278
	0x01DBA24C ADRP X0, 0x233D000
	0x01DBA250 LDR X0, [X0 + 0xD40]
	0x01DBA254 BL 0x1C16CF4
	0x01DBA258 ADRP X0, 0x233D000
	0x01DBA25C LDR X0, [X0 + 0xD48]
	0x01DBA260 BL 0x1C16CF4
	0x01DBA264 ADRP X0, 0x2339000
	0x01DBA268 LDR X0, [X0 + 0x900]
	0x01DBA26C BL 0x1C16CF4
	0x01DBA270 MOVZ W8, 0x1
	0x01DBA274 STRB W8, [X21 + 0xB33]
	0x01DBA278 CBZ X20, 0x1DBA308
	0x01DBA27C LDR X8, [X20 + 0xE0]
	0x01DBA280 CBZ X8, 0x1DBA308
	0x01DBA284 LDR X0, [X8 + 0x80]
	0x01DBA288 CBZ X0, 0x1DBA308
	0x01DBA28C ADRP X8, 0x233D000
	0x01DBA290 LDR X8, [X8 + 0xD40]
	0x01DBA294 LDR W1, [X19 + 0x14]
	0x01DBA298 LDR X2, [X8]
	0x01DBA29C BL 0x2607350
	0x01DBA2A0 CBZ X0, 0x1DBA308
	0x01DBA2A4 LDR X0, [X0 + 0x50]
	0x01DBA2A8 CBZ X0, 0x1DBA308
	0x01DBA2AC ADRP X8, 0x2339000
	0x01DBA2B0 LDR X8, [X8 + 0x900]
	0x01DBA2B4 LDR X1, [X19 + 0x18]
	0x01DBA2B8 LDR X2, [X8]
	0x01DBA2BC BL 0x265C3F4
	0x01DBA2C0 LDR X0, [X19 + 0x18]
	0x01DBA2C4 MOV X1, X31
	0x01DBA2C8 BL 0x32277A8
	0x01DBA2CC TBZ X0, 0x0, 0x1DBA2DC
	0x01DBA2D0 LDP X20, X19, [X31 + 0x10]
	0x01DBA2D4 LDP X30, X21, [X31], #0x20
	0x01DBA2D8 RET
	0x01DBA2DC LDR X8, [X20 + 0xE0]
	0x01DBA2E0 CBZ X8, 0x1DBA308
	0x01DBA2E4 LDR X0, [X8 + 0x70]
	0x01DBA2E8 CBZ X0, 0x1DBA308
	0x01DBA2EC ADRP X8, 0x233D000
	0x01DBA2F0 LDR X1, [X19 + 0x18]
	0x01DBA2F4 LDR X8, [X8 + 0xD48]
	0x01DBA2F8 LDP X20, X19, [X31 + 0x10]
	0x01DBA2FC LDR X2, [X8]
	0x01DBA300 LDP X30, X21, [X31], #0x20
	0x01DBA304 B 0x262D298
	0x01DBA308 BL 0x1C16F20
	0x01DBA30C STR X30, [X31 - 0x20]!
	0x01DBA310 STP X20, X19, [X31 + 0x10]
	0x01DBA314 MOV W19, W1
	0x01DBA318 MOV X1, X31
	0x01DBA31C MOV X20, X0
	0x01DBA320 BL 0x1D36B98
	0x01DBA324 STR W19, [X20 + 0x14]
	0x01DBA328 LDP X20, X19, [X31 + 0x10]
	0x01DBA32C LDR X30, [X31], #0x20
	0x01DBA330 RET
	0x01DBA334 SUB X31, X31, 0x30
	0x01DBA338 STP X30, X21, [X31 + 0x10]
	0x01DBA33C STP X20, X19, [X31 + 0x20]
	0x01DBA340 ADRP X21, 0x261E000
	0x01DBA344 LDRB W8, [X21 + 0xB34]
	0x01DBA348 MOV X19, X1
	0x01DBA34C MOV X20, X0
	0x01DBA350 TBNZ X8, 0x0, 0x1DBA38C
	0x01DBA354 ADRP X0, 0x233D000
	0x01DBA358 LDR X0, [X0 + 0xD50]
	0x01DBA35C BL 0x1C16CF4
	0x01DBA360 ADRP X0, 0x233D000
	0x01DBA364 LDR X0, [X0 + 0xD58]
	0x01DBA368 BL 0x1C16CF4
	0x01DBA36C ADRP X0, 0x233D000
	0x01DBA370 LDR X0, [X0 + 0xD60]
	0x01DBA374 BL 0x1C16CF4
	0x01DBA378 ADRP X0, 0x2339000
	0x01DBA37C LDR X0, [X0 + 0xDC8]
	0x01DBA380 BL 0x1C16CF4
	0x01DBA384 MOVZ W8, 0x1
	0x01DBA388 STRB W8, [X21 + 0xB34]
	0x01DBA38C STR X31, [X31 + 0x8]
	0x01DBA390 CBZ X19, 0x1DBA428
	0x01DBA394 LDR X8, [X19 + 0xE0]
	0x01DBA398 CBZ X8, 0x1DBA428
	0x01DBA39C LDR X0, [X8 + 0x80]
	0x01DBA3A0 CBZ X0, 0x1DBA428
	0x01DBA3A4 ADRP X8, 0x233D000
	0x01DBA3A8 LDR X8, [X8 + 0xD58]
	0x01DBA3AC LDR W1, [X20 + 0x14]
	0x01DBA3B0 ADD X2, X31, 0x8
	0x01DBA3B4 LDR X3, [X8]
	0x01DBA3B8 BL 0x260732C
	0x01DBA3BC TBZ X0, 0x0, 0x1DBA418
	0x01DBA3C0 LDR X8, [X19 + 0xE0]
	0x01DBA3C4 CBZ X8, 0x1DBA428
	0x01DBA3C8 LDR X0, [X8 + 0x80]
	0x01DBA3CC CBZ X0, 0x1DBA428
	0x01DBA3D0 ADRP X8, 0x233D000
	0x01DBA3D4 LDR W1, [X20 + 0x14]
	0x01DBA3D8 LDR X8, [X8 + 0xD50]
	0x01DBA3DC LDR X2, [X8]
	0x01DBA3E0 BL 0x2606EA8
	0x01DBA3E4 LDR X8, [X19 + 0xE0]
	0x01DBA3E8 CBZ X8, 0x1DBA428
	0x01DBA3EC LDR X9, [X31 + 0x8]
	0x01DBA3F0 CBZ X9, 0x1DBA428
	0x01DBA3F4 LDR X9, [X9 + 0x50]
	0x01DBA3F8 CBZ X9, 0x1DBA428
	0x01DBA3FC LDR X0, [X8 + 0x70]
	0x01DBA400 CBZ X0, 0x1DBA428
	0x01DBA404 ADRP X8, 0x233D000
	0x01DBA408 LDR X1, [X9 + 0x50]
	0x01DBA40C LDR X8, [X8 + 0xD60]
	0x01DBA410 LDR X2, [X8]
	0x01DBA414 BL 0x262DC78
	0x01DBA418 LDP X20, X19, [X31 + 0x20]
	0x01DBA41C LDP X30, X21, [X31 + 0x10]
	0x01DBA420 ADD X31, X31, 0x30
	0x01DBA424 RET
	0x01DBA428 BL 0x1C16F20
	0x01DBA42C SUB X31, X31, 0x30
	0x01DBA430 STP X30, X21, [X31 + 0x10]
	0x01DBA434 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x261F000
	009 Move W8, [X20+2857]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {38}
	015 Move X0, 0x233A000
	016 Move X0, [X0+1608]
	017 Call 0x1C17CF4
	018 Move X0, 0x233A000
	019 Move X0, [X0+2736]
	020 Call 0x1C17CF4
	021 Move X0, 0x233E000
	022 Move X0, [X0+3200]
	023 Call 0x1C17CF4
	024 Move X0, 0x233D000
	025 Move X0, [X0+3832]
	026 Call 0x1C17CF4
	027 Move X0, 0x233D000
	028 Move X0, [X0+3840]
	029 Call 0x1C17CF4
	030 Move X0, 0x233E000
	031 Move X0, [X0+3184]
	032 Call 0x1C17CF4
	033 Move X0, 0x233D000
	034 Move X0, [X0+3120]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X20+2857], W8
	038 Move W23, [X19+16]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X22, [X19+32]
	041 Move TEMP, 0
	042 Not TEMP
	043 Move W8, TEMP
	044 Move [X19+16], W8
	045 Compare X22, 0
	046 JumpIfEqual {189}
	047 Move X0, [X22+208]
	048 Compare X0, 0
	049 JumpIfEqual {189}
	050 Move X1, X31
	051 Call Recorder.get_LevelMeter, X0
	052 Compare X0, 0
	053 JumpIfEqual {189}
	054 Move X21, 0x233E000
	055 Move X8, [X0]
	056 Move X21, [X21+3200]
	057 Move X20, X0
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Move X1, [X21]
	060 Compare X9, 0
	061 JumpIfEqual {68}
	062 Move X10, [X8+176]
	063 Add X10, X10, 8
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Subtract X9, X9, 1
	067 Add X10, X10, 16
	068 Move W2, 2
	069 Move X0, X20
	070 Call 0x1C5D788
	071 Move W9, [X10]
	072 Add W9, W9, 2
	073 Add X8, X8, W9
	074 Add X0, X8, 312
	075 Move X8, [X0]
	076 Move X1, [X0+8]
	077 Move X0, X20
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Move X0, [X22+208]
	080 Move [X22+372], S0
	081 Compare X0, 0
	082 JumpIfEqual {189}
	083 Move X1, X31
	084 Call Recorder.get_LevelMeter, X0
	085 Compare X0, 0
	086 JumpIfEqual {189}
	087 Move X8, [X0]
	088 Move X1, [X21]
	089 Move X20, X0
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Compare X9, 0
	092 JumpIfEqual {99}
	093 Move X10, [X8+176]
	094 Add X10, X10, 8
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Subtract X9, X9, 1
	098 Add X10, X10, 16
	099 Move W2, 3
	100 Move X0, X20
	101 Call 0x1C5D788
	102 Move W9, [X10]
	103 Add W9, W9, 3
	104 Add X8, X8, W9
	105 Add X0, X8, 312
	106 Move X8, [X0]
	107 Move X1, [X0+8]
	108 Move X0, X20
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move W8, [X22+400]
	111 Compare W8, 0
	112 JumpIfEqual {168}
	113 Move X8, 0x233A000
	114 Move X8, [X8+2736]
	115 Move W1, 1
	116 Add X21, X22, 400
	117 Move X0, [X8]
	118 Call 0x1C17D6C
	119 Move X8, 0x233D000
	120 Move X8, [X8+3840]
	121 Move X20, X0
	122 Move X0, X21
	123 Move X1, [X8]
	124 Call Nullable`1<Int32>.get_Value, X0
	125 Move X8, 0x233E000
	126 Move V8, [X22+372]
	127 Move X8, [X8+3184]
	128 Move W21, W0
	129 Move X8, [X8]
	130 Move X0, X8
	131 Call 0x1C17F10
	132 Move X1, X31
	133 Move X22, X0
	134 Call BaseAction..ctor, X0
	135 Move X8, [X22]
	136 Move [X22+20], W21
	137 Move [X22+24], S8
	138 Move W1, 1
	139 Move X9, [X8+408]
	140 Move X2, [X8+416]
	141 Move X0, X22
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Compare X20, 0
	144 JumpIfEqual {189}
	145 Move X21, X0
	146 Compare X0, 0
	147 JumpIfEqual {154}
	148 Move X8, [X20]
	149 Move X0, X21
	150 Move X1, [X8+64]
	151 Call 0x1C17E00
	152 Compare X0, 0
	153 JumpIfEqual {191}
	154 Move W8, [X20+24]
	155 Compare W8, 0
	156 JumpIfEqual {190}
	157 Move [X20+32], X21
	158 Move X8, 0x233A000
	159 Move X8, [X8+1608]
	160 Move X0, [X8]
	161 Move W8, [X0+224]
	162 Compare W8, 0
	163 JumpIfNotEqual {165}
	164 Call 0x1C17DFC
	165 Move X0, X20
	166 Move X1, X31
	167 Call App.ExecuteActionOrDelay, X0
	168 Move X8, 0x233D000
	169 Move X8, [X8+3120]
	170 Move X0, [X8]
	171 Call 0x1C17F10
	172 Move S0, 0.5
	173 Move X1, X31
	174 Move X20, X0
	175 Call WaitForSeconds..ctor, X0, V0
	176 Move W8, 1
	177 Move [X19+24], X20
	178 Move [X19+16], W8
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move X20, [X31+48]
	181 Move X19, [X31+56]
	182 Move X22, [X31+32]
	183 Move X21, [X31+40]
	184 Move X30, [X31+16]
	185 Move X23, [X31+24]
	186 NotImplemented "Instruction CSET not yet implemented."
	187 Move V8, [X31+64]
	188 Return X0
	189 Call 0x1C17F20
	190 Call 0x1C17F28
	191 Call 0x1C17F44
	192 Move X1, X31
	193 Call 0x1C17DEC

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x01DBA438 ADRP X21, 0x261E000
	0x01DBA43C LDRB W8, [X21 + 0xB35]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01DBA440 MOV X20, X1
	0x01DBA444 MOV X19, X0
	0x01DBA448 TBNZ X8, 0x0, 0x1DBA46C
	0x01DBA44C ADRP X0, 0x233D000
	0x01DBA450 LDR X0, [X0 + 0xD58]
	0x01DBA454 BL 0x1C16CF4
	0x01DBA458 ADRP X0, 0x233D000
	0x01DBA45C LDR X0, [X0 + 0xD68]
	0x01DBA460 BL 0x1C16CF4
	0x01DBA464 MOVZ W8, 0x1
	0x01DBA468 STRB W8, [X21 + 0xB35]
	0x01DBA46C STR X31, [X31 + 0x8]
	0x01DBA470 CBZ X20, 0x1DBA4D4
	0x01DBA474 LDR X8, [X20 + 0xE0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x233A000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x233E000
	011 Move X0, [X0+3208]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01DBA478 CBZ X8, 0x1DBA4D4
	0x01DBA47C LDR X0, [X8 + 0x80]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

