Type: AnimalCompany.UnexpectedStateException

Method: System.Void .ctor()

Disassembly:
	0x01D3CD18 MOV X0, X21
	0x01D3CD1C BL 0x1C16F18
	0x01D3CD20 BL 0x1C16F20
	0x01D3CD24 BL 0x1C16F20
	0x01D3CD28 BL 0x1C16F20
	0x01D3CD2C BL 0x1C16F20
	0x01D3CD30 B 0x1D3CD70
	0x01D3CD34 B 0x1D3CD70
	0x01D3CD38 B 0x1D3CD70
	0x01D3CD3C B 0x1D3CD70
	0x01D3CD40 B 0x1D3CD70
	0x01D3CD44 B 0x1D3CD70
	0x01D3CD48 B 0x1D3CD70
	0x01D3CD4C B 0x1D3CD70
	0x01D3CD50 B 0x1D3CD70
	0x01D3CD54 B 0x1D3CD70
	0x01D3CD58 B 0x1D3CD70
	0x01D3CD5C B 0x1D3CD70
	0x01D3CD60 B 0x1D3CD70
	0x01D3CD64 B 0x1D3CD70
	0x01D3CD68 B 0x1D3CD70
	0x01D3CD6C B 0x1D3CD70

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x269D000
	006 Move X21, 0x23B8000
	007 Move W8, [X20+1814]
	008 Move X21, [X21+2000]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x23B8000
	015 Move X0, [X0+2000]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1814], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call Exception..ctor, X0
	031 Return 

Method: System.Void .ctor(System.String message)

Disassembly:
	0x01D3CD70 MOV X20, X0
	0x01D3CD74 CMP W1, 0x1
	0x01D3CD78 B.NE 0x1D3CD90
	0x01D3CD7C MOV X0, X20
	0x01D3CD80 BL 0x3EB1AD0
	0x01D3CD84 LDR X21, [X0]
	0x01D3CD88 BL 0x3EB1AE0
	0x01D3CD8C B 0x1D3CC74
	0x01D3CD90 MOV X21, X31
	0x01D3CD94 B 0x1D3CD9C
	0x01D3CD98 MOV X20, X0
	0x01D3CD9C CBZ X19, 0x1D3CE00
	0x01D3CDA0 LDR X8, [X19]
	0x01D3CDA4 ADRP X10, 0x23B7000
	0x01D3CDA8 LDRH W9, [X8 + 0x12E]
	0x01D3CDAC LDR X10, [X10 + 0xE00]
	0x01D3CDB0 LDR X1, [X10]
	0x01D3CDB4 CBZ X9, 0x1D3CDD8
	0x01D3CDB8 LDR X10, [X8 + 0xB0]
	0x01D3CDBC ADD X10, X10, 0x8
	0x01D3CDC0 LDUR X11, [X10 - 0x8]
	0x01D3CDC4 CMP X11, X1
	0x01D3CDC8 B.EQ 0x1D3CDE8
	0x01D3CDCC SUBS X9, X9, 0x1
	0x01D3CDD0 ADD X10, X10, 0x10
	0x01D3CDD4 B.NE 0x1D3CDC0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x269D000
	007 Move X22, 0x23B8000
	008 Move W8, [X21+1815]
	009 Move X22, [X22+2000]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x23B8000
	017 Move X0, [X0+2000]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1815], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call Exception..ctor, X0, X1
	035 Return 

Method: System.Void .ctor(System.String message, System.Exception inner)

Disassembly:
	0x01D3CDD8 MOV X0, X19
	0x01D3CDDC MOV W2, W31
	0x01D3CDE0 BL 0x1C5C788
	0x01D3CDE4 B 0x1D3CDF4
	0x01D3CDE8 LDRSW X9, [X10]
	0x01D3CDEC ADD X8, X8, X9, 0x4, LSL
	0x01D3CDF0 ADD X0, X8, 0x138
	0x01D3CDF4 LDP X8, X1, [X0]
	0x01D3CDF8 MOV X0, X19
	0x01D3CDFC BLR X8
	0x01D3CE00 CBNZ X21, 0x1D3CE0C
	0x01D3CE04 MOV X0, X20
	0x01D3CE08 BL 0x1D2C690
	0x01D3CE0C MOV X0, X21
	0x01D3CE10 BL 0x1C16F18
	0x01D3CE14 BL 0x1990590
	0x01D3CE18 STP X30, X21, [X31 - 0x20]!
	0x01D3CE1C STP X20, X19, [X31 + 0x10]
	0x01D3CE20 MOV X20, X1
	0x01D3CE24 MOV X1, X31
	0x01D3CE28 MOV W19, W2
	0x01D3CE2C MOV X21, X0
	0x01D3CE30 BL 0x33BDD8C
	0x01D3CE34 STR X20, [X21 + 0x18]
	0x01D3CE38 STR W19, [X21 + 0x20]
	0x01D3CE3C LDP X20, X19, [X31 + 0x10]
	0x01D3CE40 LDP X30, X21, [X31], #0x20
	0x01D3CE44 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x269D000
	008 Move X23, 0x23B8000
	009 Move W8, [X22+1816]
	010 Move X23, [X23+2000]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x23B8000
	019 Move X0, [X0+2000]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1816], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X21
	029 Move X1, X20
	030 Move X2, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X3, X31
	036 Move X30, [X31+48]
	037 Move X23, [X31+56]
	038 Call Exception..ctor, X0, X1, X2
	039 Return 

