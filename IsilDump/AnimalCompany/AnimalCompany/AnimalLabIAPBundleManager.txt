Type: AnimalCompany.AnimalLabIAPBundleManager

Method: System.Void Start()

Disassembly:
	0x01D5E188 LDR X20, [X23]
	0x01D5E18C MOV X0, X19
	0x01D5E190 MOV X1, X20
	0x01D5E194 BL 0x1C16E00
	0x01D5E198 CBNZ X0, 0x1D5E1AC
	0x01D5E19C MOV X0, X19
	0x01D5E1A0 MOV X1, X20
	0x01D5E1A4 BL 0x1C171E0
	0x01D5E1A8 STR X31, [X22 + 0x20]
	0x01D5E1AC LDP X20, X19, [X31 + 0x20]
	0x01D5E1B0 LDP X22, X21, [X31 + 0x10]
	0x01D5E1B4 LDP X30, X23, [X31], #0x30
	0x01D5E1B8 RET
	0x01D5E1BC BL 0x1C16F20
	0x01D5E1C0 STR D8, [X31 - 0x30]!
	0x01D5E1C4 STP X30, X21, [X31 + 0x10]
	0x01D5E1C8 STP X20, X19, [X31 + 0x20]
	0x01D5E1CC MOV X1, X31
	0x01D5E1D0 MOV V8.16B, V0.16B
	0x01D5E1D4 MOV X19, X0
	0x01D5E1D8 BL 0x3C32E90
	0x01D5E1DC ADRP X21, 0x267A000
	0x01D5E1E0 LDRB W8, [X21 + 0x786]
	0x01D5E1E4 MOV X20, X0
	0x01D5E1E8 CBNZ W8, 0x1D5E200
	0x01D5E1EC ADRP X0, 0x2395000
	0x01D5E1F0 LDR X0, [X0 + 0x5A0]
	0x01D5E1F4 BL 0x1C16CF4
	0x01D5E1F8 MOVZ W8, 0x1
	0x01D5E1FC STRB W8, [X21 + 0x786]
	0x01D5E200 CBZ X20, 0x1D5E244
	0x01D5E204 ADRP X8, 0x2395000
	0x01D5E208 LDR X8, [X8 + 0x5A0]
	0x01D5E20C LDR V3, [X19 + 0x28]
	0x01D5E210 MOV X0, X20
	0x01D5E214 MOV X1, X31
	0x01D5E218 LDR X8, [X8]
	0x01D5E21C FMUL S3, S3, S8
	0x01D5E220 LDR X8, [X8 + 0xB8]
	0x01D5E224 LDP S1, S2, [X8 + 0x1C]
	0x01D5E228 LDR V0, [X8 + 0x18]
	0x01D5E22C BL 0x3C40678
	0x01D5E230 LDP X20, X19, [X31 + 0x20]
	0x01D5E234 LDP X30, X21, [X31 + 0x10]
	0x01D5E238 MOVZ W0, 0x1
	0x01D5E23C LDR V8, [X31], #0x30
	0x01D5E240 RET
	0x01D5E244 BL 0x1C16F20
	0x01D5E248 MOV X1, X31
	0x01D5E24C B 0x3C36C30
	0x01D5E250 STR X30, [X31 - 0x40]!
	0x01D5E254 STP X24, X23, [X31 + 0x10]
	0x01D5E258 STP X22, X21, [X31 + 0x20]
	0x01D5E25C STP X20, X19, [X31 + 0x30]
	0x01D5E260 ADRP X23, 0x267A000
	0x01D5E264 ADRP X24, 0x2395000
	0x01D5E268 ADRP X19, 0x2397000
	0x01D5E26C ADRP X22, 0x2395000
	0x01D5E270 ADRP X21, 0x2395000
	0x01D5E274 LDRB W8, [X23 + 0x825]
	0x01D5E278 LDR X24, [X24 + 0xDA0]
	0x01D5E27C LDR X19, [X19 + 0x5D0]
	0x01D5E280 LDR X22, [X22 + 0xDB0]
	0x01D5E284 LDR X21, [X21 + 0x648]
	0x01D5E288 MOV X20, X0
	0x01D5E28C TBNZ X8, 0x0, 0x1D5E2C8
	0x01D5E290 ADRP X0, 0x2395000
	0x01D5E294 LDR X0, [X0 + 0x648]
	0x01D5E298 BL 0x1C16CF4
	0x01D5E29C ADRP X0, 0x2397000
	0x01D5E2A0 LDR X0, [X0 + 0x5D0]
	0x01D5E2A4 BL 0x1C16CF4
	0x01D5E2A8 ADRP X0, 0x2395000
	0x01D5E2AC LDR X0, [X0 + 0xDB0]
	0x01D5E2B0 BL 0x1C16CF4
	0x01D5E2B4 ADRP X0, 0x2395000
	0x01D5E2B8 LDR X0, [X0 + 0xDA0]
	0x01D5E2BC BL 0x1C16CF4
	0x01D5E2C0 MOVZ W8, 0x1
	0x01D5E2C4 STRB W8, [X23 + 0x825]
	0x01D5E2C8 LDR X0, [X24]
	0x01D5E2CC BL 0x1C16F10
	0x01D5E2D0 LDR X2, [X19]
	0x01D5E2D4 MOV X1, X20
	0x01D5E2D8 MOV X3, X31
	0x01D5E2DC MOV X19, X0
	0x01D5E2E0 BL 0x35C52F0
	0x01D5E2E4 LDR X0, [X22]
	0x01D5E2E8 MOVZ W1, 0x1
	0x01D5E2EC BL 0x1C16D6C
	0x01D5E2F0 LDR X8, [X21]
	0x01D5E2F4 MOV X20, X0
	0x01D5E2F8 LDR W9, [X8 + 0xE0]
	0x01D5E2FC CBNZ W9, 0x1D5E308
	0x01D5E300 MOV X0, X8
	0x01D5E304 BL 0x1C16DFC
	0x01D5E308 ADRP X22, 0x267A000
	0x01D5E30C LDRB W8, [X22 + 0x787]
	0x01D5E310 CBNZ W8, 0x1D5E328
	0x01D5E314 ADRP X0, 0x2395000
	0x01D5E318 LDR X0, [X0 + 0x648]
	0x01D5E31C BL 0x1C16CF4
	0x01D5E320 MOVZ W8, 0x1
	0x01D5E324 STRB W8, [X22 + 0x787]
	0x01D5E328 LDR X0, [X21]
	0x01D5E32C LDR W8, [X0 + 0xE0]
	0x01D5E330 CBNZ W8, 0x1D5E33C
	0x01D5E334 BL 0x1C16DFC
	0x01D5E338 LDR X0, [X21]
	0x01D5E33C LDR X8, [X0 + 0xB8]
	0x01D5E340 LDR X8, [X8]
	0x01D5E344 CBZ X8, 0x1D5E39C
	0x01D5E348 LDR X8, [X8 + 0xC8]
	0x01D5E34C CBZ X8, 0x1D5E39C
	0x01D5E350 CBZ X20, 0x1D5E39C
	0x01D5E354 LDR X21, [X8 + 0x48]
	0x01D5E358 CBZ X21, 0x1D5E370
	0x01D5E35C LDR X8, [X20]
	0x01D5E360 MOV X0, X21
	0x01D5E364 LDR X1, [X8 + 0x40]
	0x01D5E368 BL 0x1C16E00
	0x01D5E36C CBZ X0, 0x1D5E3A4
	0x01D5E370 LDR W8, [X20 + 0x18]
	0x01D5E374 CBZ W8, 0x1D5E3A0
	0x01D5E378 STR X21, [X20 + 0x20]
	0x01D5E37C MOV X0, X19
	0x01D5E380 MOV X1, X20
	0x01D5E384 LDP X20, X19, [X31 + 0x30]
	0x01D5E388 LDP X22, X21, [X31 + 0x20]
	0x01D5E38C LDP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x267B000
	008 Move W8, [X20+2076]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0x2397000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move X0, 0x2398000
	018 Move X0, [X0+1328]
	019 Call 0x1C17CF4
	020 Move X0, 0x2398000
	021 Move X0, [X0+1336]
	022 Call 0x1C17CF4
	023 Move X0, 0x2396000
	024 Move X0, [X0+1608]
	025 Call 0x1C17CF4
	026 Move X0, 0x2396000
	027 Move X0, [X0+3504]
	028 Call 0x1C17CF4
	029 Move X0, 0x2396000
	030 Move X0, [X0+3488]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+2076], W8
	034 Move X22, [X19+48]
	035 Compare X22, 0
	036 JumpIfEqual {145}
	037 Move X23, 0x2397000
	038 Move X23, [X23+3696]
	039 Move X21, 0x2398000
	040 Move X20, [X22+32]
	041 Move X0, [X23]
	042 Move X21, [X21+1336]
	043 Call 0x1C17F10
	044 Move X2, [X21]
	045 Move X1, X19
	046 Move X3, X31
	047 Move X21, X0
	048 Call Action..ctor, X0, X1, X2
	049 Move X0, X20
	050 Move X1, X21
	051 Move X2, X31
	052 Call Delegate.Combine, X0, X1
	053 Compare X0, 0
	054 JumpIfEqual {62}
	055 Move X1, [X23]
	056 Move X8, [X0]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move [X22+32], X0
	059 Move X8, [X0]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Call 0x1C181E0
	062 Move [X22+32], X0
	063 Move X20, 0x2396000
	064 Move X21, 0x2398000
	065 Move X23, 0x2396000
	066 Move X22, 0x2396000
	067 Move X20, [X20+3488]
	068 Move X21, [X21+1328]
	069 Move X23, [X23+3504]
	070 Move X22, [X22+1608]
	071 Move X0, X19
	072 Move W1, W31
	073 Call AnimalLabIAPBundleManager.SetOwned, X0, X1
	074 Move X0, [X20]
	075 Call 0x1C17F10
	076 Move X2, [X21]
	077 Move X1, X19
	078 Move X3, X31
	079 Move X20, X0
	080 Call ObserverDelegate..ctor, X0, X1, X2
	081 Move X0, [X23]
	082 Move W1, 1
	083 Call 0x1C17D6C
	084 Move X8, [X22]
	085 Move X21, X0
	086 Move W9, [X8+224]
	087 Compare W9, 0
	088 JumpIfNotEqual {91}
	089 Move X0, X8
	090 Call 0x1C17DFC
	091 Move X23, 0x267B000
	092 Move W8, [X23+1927]
	093 Compare W8, 0
	094 JumpIfNotEqual {100}
	095 Move X0, 0x2396000
	096 Move X0, [X0+1608]
	097 Call 0x1C17CF4
	098 Move W8, 1
	099 Move [X23+1927], W8
	100 Move X0, [X22]
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {106}
	104 Call 0x1C17DFC
	105 Move X0, [X22]
	106 Move X8, [X0+184]
	107 Move X8, [X8]
	108 Compare X8, 0
	109 JumpIfEqual {145}
	110 Move X8, [X8+184]
	111 Compare X8, 0
	112 JumpIfEqual {145}
	113 Compare X21, 0
	114 JumpIfEqual {145}
	115 Move X22, [X8+136]
	116 Compare X22, 0
	117 JumpIfEqual {124}
	118 Move X8, [X21]
	119 Move X0, X22
	120 Move X1, [X8+64]
	121 Call 0x1C17E00
	122 Compare X0, 0
	123 JumpIfEqual {147}
	124 Move W8, [X21+24]
	125 Compare W8, 0
	126 JumpIfEqual {146}
	127 Move X0, X20
	128 Move X1, X21
	129 Move X2, X31
	130 Move [X21+32], X22
	131 Call App.RegisterObserver, X0, X1
	132 Move X0, X19
	133 Call AnimalLabIAPBundleManager.CountdownTimer, X0
	134 Move X1, X0
	135 Move X0, X19
	136 Move X20, [X31+32]
	137 Move X19, [X31+40]
	138 Move X22, [X31+16]
	139 Move X21, [X31+24]
	140 Move X2, X31
	141 Move X30, [X31+48]
	142 Move X23, [X31+56]
	143 Call MonoBehaviour.StartCoroutine, X0, X1
	144 Return 
	145 Call 0x1C17F20
	146 Call 0x1C17F28
	147 Call 0x1C17F44
	148 Move X1, X31
	149 Call 0x1C17DEC

Method: System.Void OnDestroy()

Disassembly:
	0x01D5E444 LDP X22, X21, [X31 + 0x10]
	0x01D5E448 MOV X1, X31
	0x01D5E44C LDP X30, X23, [X31], #0x30
	0x01D5E450 B 0x1D36978
	0x01D5E454 STP X30, X25, [X31 - 0x40]!
	0x01D5E458 STP X24, X23, [X31 + 0x10]
	0x01D5E45C STP X22, X21, [X31 + 0x20]
	0x01D5E460 STP X20, X19, [X31 + 0x30]
	0x01D5E464 ADRP X21, 0x267A000
	0x01D5E468 ADRP X20, 0x2395000
	0x01D5E46C LDRB W8, [X21 + 0x827]
	0x01D5E470 LDR X20, [X20 + 0x648]
	0x01D5E474 MOV X19, X0
	0x01D5E478 TBNZ X8, 0x0, 0x1D5E4E4
	0x01D5E47C ADRP X0, 0x2395000
	0x01D5E480 LDR X0, [X0 + 0x648]
	0x01D5E484 BL 0x1C16CF4
	0x01D5E488 ADRP X0, 0x2397000
	0x01D5E48C LDR X0, [X0 + 0x5D8]
	0x01D5E490 BL 0x1C16CF4
	0x01D5E494 ADRP X0, 0x2397000
	0x01D5E498 LDR X0, [X0 + 0x5E0]
	0x01D5E49C BL 0x1C16CF4
	0x01D5E4A0 ADRP X0, 0x2396000
	0x01D5E4A4 LDR X0, [X0 + 0xA88]
	0x01D5E4A8 BL 0x1C16CF4
	0x01D5E4AC ADRP X0, 0x2397000
	0x01D5E4B0 LDR X0, [X0 + 0x5E8]
	0x01D5E4B4 BL 0x1C16CF4
	0x01D5E4B8 ADRP X0, 0x2396000
	0x01D5E4BC LDR X0, [X0 + 0xEB8]
	0x01D5E4C0 BL 0x1C16CF4
	0x01D5E4C4 ADRP X0, 0x2397000
	0x01D5E4C8 LDR X0, [X0 + 0x5F0]
	0x01D5E4CC BL 0x1C16CF4
	0x01D5E4D0 ADRP X0, 0x2397000
	0x01D5E4D4 LDR X0, [X0 + 0x5F8]
	0x01D5E4D8 BL 0x1C16CF4
	0x01D5E4DC MOVZ W8, 0x1
	0x01D5E4E0 STRB W8, [X21 + 0x827]
	0x01D5E4E4 LDR X0, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x267B000
	008 Move X23, 0x2396000
	009 Move X20, 0x2398000
	010 Move X21, 0x2396000
	011 Move W8, [X22+2077]
	012 Move X23, [X23+3488]
	013 Move X20, [X20+1328]
	014 Move X21, [X21+1608]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x2398000
	021 Move X0, [X0+1328]
	022 Call 0x1C17CF4
	023 Move X0, 0x2396000
	024 Move X0, [X0+1608]
	025 Call 0x1C17CF4
	026 Move X0, 0x2396000
	027 Move X0, [X0+3488]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+2077], W8
	031 Move X0, [X23]
	032 Call 0x1C17F10
	033 Move X2, [X20]
	034 Move X1, X19
	035 Move X3, X31
	036 Move X20, X0
	037 Call ObserverDelegate..ctor, X0, X1, X2
	038 Move X0, [X21]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X20
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X1, X31
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Call App.DeregisterObserver, X0
	052 Return 

Method: System.Void HandleUserInventoryUpdated(SpatialSys.ObservableState.StateChangedEventArgs args)

Disassembly:
	0x01D5E4E8 LDR W8, [X0 + 0xE0]
	0x01D5E4EC CBNZ W8, 0x1D5E4F4
	0x01D5E4F0 BL 0x1C16DFC
	0x01D5E4F4 ADRP X21, 0x267A000
	0x01D5E4F8 LDRB W8, [X21 + 0x787]
	0x01D5E4FC CBNZ W8, 0x1D5E514
	0x01D5E500 ADRP X0, 0x2395000
	0x01D5E504 LDR X0, [X0 + 0x648]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+40]
	005 Call AvatarItemUtil.IsItemOwned, X0
	006 And W1, W0, 1
	007 Move X0, X19
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Call AnimalLabIAPBundleManager.SetOwned, X0, X1
	011 Return 

Method: System.Void SetOwned(System.Boolean owned)

Disassembly:
	0x01D5E390 MOV X2, X31
	0x01D5E394 LDR X30, [X31], #0x40
	0x01D5E398 B 0x1D363F0
	0x01D5E39C BL 0x1C16F20
	0x01D5E3A0 BL 0x1C16F28
	0x01D5E3A4 BL 0x1C16F44
	0x01D5E3A8 MOV X1, X31
	0x01D5E3AC BL 0x1C16DEC
	0x01D5E3B0 STP X30, X23, [X31 - 0x30]!
	0x01D5E3B4 STP X22, X21, [X31 + 0x10]
	0x01D5E3B8 STP X20, X19, [X31 + 0x20]
	0x01D5E3BC ADRP X22, 0x267A000
	0x01D5E3C0 ADRP X23, 0x2395000
	0x01D5E3C4 ADRP X20, 0x2397000
	0x01D5E3C8 ADRP X21, 0x2395000
	0x01D5E3CC LDRB W8, [X22 + 0x826]
	0x01D5E3D0 LDR X23, [X23 + 0xDA0]
	0x01D5E3D4 LDR X20, [X20 + 0x5D0]
	0x01D5E3D8 LDR X21, [X21 + 0x648]
	0x01D5E3DC MOV X19, X0
	0x01D5E3E0 TBNZ X8, 0x0, 0x1D5E410

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Move X0, [X0+56]
	006 Compare X0, 0
	007 JumpIfEqual {27}
	008 Move W19, W1
	009 And W1, W1, 1
	010 Move X2, X31
	011 Call GameObject.SetActive, X0, X1
	012 Move X0, [X20+48]
	013 Compare X0, 0
	014 JumpIfEqual {27}
	015 Move X1, X31
	016 Call Component.get_gameObject, X0
	017 Compare X0, 0
	018 JumpIfEqual {27}
	019 NotImplemented "Instruction ORN not yet implemented."
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 And W1, W8, 1
	023 Move X2, X31
	024 Move X30, [X31+32]
	025 Call GameObject.SetActive, X0, X1
	026 Return 
	027 Call 0x1C17F20

Method: System.Void TryPurchase()

Disassembly:
	0x01D5E660 LDR X8, [X19 + 0x20]
	0x01D5E664 CBZ X8, 0x1D5E698
	0x01D5E668 LDP X20, X19, [X31 + 0x30]
	0x01D5E66C LDP X22, X21, [X31 + 0x20]
	0x01D5E670 LDP X24, X23, [X31 + 0x10]
	0x01D5E674 MOV X1, X0
	0x01D5E678 MOV X0, X8
	0x01D5E67C LDP X30, X25, [X31], #0x40
	0x01D5E680 B 0x1D5E69C
	0x01D5E684 LDP X20, X19, [X31 + 0x30]
	0x01D5E688 LDP X22, X21, [X31 + 0x20]
	0x01D5E68C LDP X24, X23, [X31 + 0x10]
	0x01D5E690 LDP X30, X25, [X31], #0x40
	0x01D5E694 RET
	0x01D5E698 BL 0x1C16F20
	0x01D5E69C STP X30, X19, [X31 - 0x10]!
	0x01D5E6A0 MOV X19, X0
	0x01D5E6A4 STR X1, [X0 + 0x58]
	0x01D5E6A8 STR W31, [X0 + 0x60]
	0x01D5E6AC STR W31, [X0 + 0x68]
	0x01D5E6B0 CBZ X1, 0x1D5E6C0
	0x01D5E6B4 LDR W8, [X1 + 0x18]
	0x01D5E6B8 CMP W8, 0x0
	0x01D5E6BC CSET W1, NE
	0x01D5E6C0 MOV X0, X19
	0x01D5E6C4 MOV X2, X31
	0x01D5E6C8 BL 0x3C32410
	0x01D5E6CC LDR X8, [X19 + 0x58]
	0x01D5E6D0 CBZ X8, 0x1D5E6F4
	0x01D5E6D4 LDR X9, [X8 + 0x18]
	0x01D5E6D8 CBZ X9, 0x1D5E6F4
	0x01D5E6DC LDRSW X10, [X19 + 0x60]
	0x01D5E6E0 CMP W10, W9
	0x01D5E6E4 B.CS 0x1D5E704
	0x01D5E6E8 ADD X8, X8, X10, 0x3, LSL
	0x01D5E6EC LDR X1, [X8 + 0x20]
	0x01D5E6F0 B 0x1D5E6F8
	0x01D5E6F4 MOV X1, X31
	0x01D5E6F8 MOV X0, X19
	0x01D5E6FC LDP X30, X19, [X31], #0x10
	0x01D5E700 B 0x1D5EDF4
	0x01D5E704 BL 0x1C16F28
	0x01D5E708 MOV X1, X31
	0x01D5E70C B 0x3C36C30
	0x01D5E710 STR X30, [X31 - 0x20]!
	0x01D5E714 STP X20, X19, [X31 + 0x10]
	0x01D5E718 ADRP X19, 0x267A000
	0x01D5E71C ADRP X20, 0x2397000
	0x01D5E720 LDRB W8, [X19 + 0x828]
	0x01D5E724 LDR X20, [X20 + 0x5F8]
	0x01D5E728 TBNZ X8, 0x0, 0x1D5E740
	0x01D5E72C ADRP X0, 0x2397000
	0x01D5E730 LDR X0, [X0 + 0x5F8]
	0x01D5E734 BL 0x1C16CF4
	0x01D5E738 MOVZ W8, 0x1
	0x01D5E73C STRB W8, [X19 + 0x828]
	0x01D5E740 LDR X0, [X20]
	0x01D5E744 BL 0x1C16F10
	0x01D5E748 MOV X1, X31
	0x01D5E74C MOV X19, X0
	0x01D5E750 BL 0x33BDD8C
	0x01D5E754 LDR X8, [X20]
	0x01D5E758 LDR X8, [X8 + 0xB8]
	0x01D5E75C STR X19, [X8]
	0x01D5E760 LDP X20, X19, [X31 + 0x10]
	0x01D5E764 LDR X30, [X31], #0x20
	0x01D5E768 RET
	0x01D5E76C MOV X1, X31
	0x01D5E770 B 0x33BDD8C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x267B000
	005 Move W8, [X20+2078]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {28}
	011 Move X0, 0x2396000
	012 Move X0, [X0+1608]
	013 Call 0x1C17CF4
	014 Move X0, 0x2396000
	015 Move X0, [X0+1928]
	016 Call 0x1C17CF4
	017 Move X0, 0x2398000
	018 Move X0, [X0+1360]
	019 Call 0x1C17CF4
	020 Move X0, 0x2398000
	021 Move X0, [X0+1368]
	022 Call 0x1C17CF4
	023 Move X0, 0x2398000
	024 Move X0, [X0+1376]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+2078], W8
	028 Move X0, [X19+80]
	029 Compare X0, 0
	030 JumpIfEqual {82}
	031 Move X1, X31
	032 Call CommandHandle.get_hasFinalized, X0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {58}
	037 Move X0, [X19+32]
	038 Move X1, X31
	039 Call ProductCommands.PurchaseProduct, X0
	040 Move X8, 0x2396000
	041 Move X8, [X8+1608]
	042 Move X20, X0
	043 Move X8, [X8]
	044 Move W9, [X8+224]
	045 Compare W9, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 Move X0, X20
	050 Move W1, W31
	051 Move X2, X31
	052 Call App.ExecuteCommand, X0, X1
	053 Move [X19+80], X0
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 Return 
	058 Move X8, 0x2396000
	059 Move X8, [X8+1928]
	060 Move X0, [X8]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X8, 0x2398000
	066 Move X9, 0x2398000
	067 Move X10, 0x2398000
	068 Move X8, [X8+1360]
	069 Move X9, [X9+1376]
	070 Move X10, [X10+1368]
	071 Move X20, [X31+16]
	072 Move X19, [X31+24]
	073 Move X0, [X8]
	074 Move X2, [X9]
	075 Move X3, [X10]
	076 Move W4, 54
	077 Move X1, X31
	078 Move X5, X31
	079 Move X30, [X31+32]
	080 Call Log.Error, X0, X1, X2, X3, X4
	081 Return 
	082 Call 0x1C17F20

Method: System.Collections.IEnumerator CountdownTimer()

Disassembly:
	0x01D5E3E4 ADRP X0, 0x2395000
	0x01D5E3E8 LDR X0, [X0 + 0x648]
	0x01D5E3EC BL 0x1C16CF4
	0x01D5E3F0 ADRP X0, 0x2397000
	0x01D5E3F4 LDR X0, [X0 + 0x5D0]
	0x01D5E3F8 BL 0x1C16CF4
	0x01D5E3FC ADRP X0, 0x2395000
	0x01D5E400 LDR X0, [X0 + 0xDA0]
	0x01D5E404 BL 0x1C16CF4
	0x01D5E408 MOVZ W8, 0x1
	0x01D5E40C STRB W8, [X22 + 0x826]
	0x01D5E410 LDR X0, [X23]
	0x01D5E414 BL 0x1C16F10
	0x01D5E418 LDR X2, [X20]
	0x01D5E41C MOV X1, X19
	0x01D5E420 MOV X3, X31
	0x01D5E424 MOV X20, X0
	0x01D5E428 BL 0x35C52F0
	0x01D5E42C LDR X0, [X21]
	0x01D5E430 LDR W8, [X0 + 0xE0]
	0x01D5E434 CBNZ W8, 0x1D5E43C
	0x01D5E438 BL 0x1C16DFC
	0x01D5E43C MOV X0, X20
	0x01D5E440 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x267B000
	006 Move X21, 0x2398000
	007 Move W8, [X20+2079]
	008 Move X21, [X21+1344]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2398000
	015 Move X0, [X0+1344]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2079], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move [X20+16], W31
	025 Move [X20+32], X19
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Void .ctor()

Disassembly:
	0x01D5E79C STRB W8, [X20 + 0x829]
	0x01D5E7A0 CBZ X19, 0x1D5E7E0
	0x01D5E7A4 ADRP X20, 0x2396000
	0x01D5E7A8 LDR X20, [X20 + 0x178]
	0x01D5E7AC LDR X0, [X19 + 0x60]
	0x01D5E7B0 LDR X1, [X20]
	0x01D5E7B4 BL 0x2651A74
	0x01D5E7B8 TBZ X0, 0x0, 0x1D5E7D0
	0x01D5E7BC LDR X0, [X19 + 0x68]
	0x01D5E7C0 LDR X1, [X20]
	0x01D5E7C4 LDP X20, X19, [X31 + 0x10]
	0x01D5E7C8 LDR X30, [X31], #0x20
	0x01D5E7CC B 0x2651A74
	0x01D5E7D0 LDP X20, X19, [X31 + 0x10]
	0x01D5E7D4 MOV W0, W31
	0x01D5E7D8 LDR X30, [X31], #0x20
	0x01D5E7DC RET
	0x01D5E7E0 BL 0x1C16F20
	0x01D5E7E4 STR X30, [X31 - 0x30]!
	0x01D5E7E8 STP X22, X21, [X31 + 0x10]
	0x01D5E7EC STP X20, X19, [X31 + 0x20]
	0x01D5E7F0 ADRP X20, 0x267A000
	0x01D5E7F4 LDRB W8, [X20 + 0x82A]
	0x01D5E7F8 MOV X19, X0
	0x01D5E7FC TBNZ X8, 0x0, 0x1D5E874
	0x01D5E800 ADRP X0, 0x2395000
	0x01D5E804 LDR X0, [X0 + 0x900]
	0x01D5E808 BL 0x1C16CF4
	0x01D5E80C ADRP X0, 0x2397000
	0x01D5E810 LDR X0, [X0 + 0x2A0]
	0x01D5E814 BL 0x1C16CF4
	0x01D5E818 ADRP X0, 0x2397000
	0x01D5E81C LDR X0, [X0 + 0x600]
	0x01D5E820 BL 0x1C16CF4
	0x01D5E824 ADRP X0, 0x2397000
	0x01D5E828 LDR X0, [X0 + 0x608]
	0x01D5E82C BL 0x1C16CF4
	0x01D5E830 ADRP X0, 0x2397000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x267B000
	006 Move X20, 0x2396000
	007 Move W8, [X21+2080]
	008 Move X20, [X20+2200]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2396000
	015 Move X0, [X0+2200]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2080], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X21, 0x267B000
	025 Move W8, [X21+1931]
	026 Compare W8, 0
	027 JumpIfNotEqual {33}
	028 Move X0, 0x2396000
	029 Move X0, [X0+2200]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+1931], W8
	033 Move X0, [X20]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X20]
	039 Move X8, [X0+184]
	040 Move X0, X19
	041 Move X1, X31
	042 Move X8, [X8]
	043 Move [X19+80], X8
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Call MonoBehaviour..ctor, X0
	049 Return 

Method: System.Void .cctor()

Disassembly:
	0x01D5E834 LDR X0, [X0 + 0x610]
	0x01D5E838 BL 0x1C16CF4
	0x01D5E83C ADRP X0, 0x2397000
	0x01D5E840 LDR X0, [X0 + 0x618]
	0x01D5E844 BL 0x1C16CF4
	0x01D5E848 ADRP X0, 0x2397000
	0x01D5E84C LDR X0, [X0 + 0x620]
	0x01D5E850 BL 0x1C16CF4
	0x01D5E854 ADRP X0, 0x2397000
	0x01D5E858 LDR X0, [X0 + 0x628]
	0x01D5E85C BL 0x1C16CF4
	0x01D5E860 ADRP X0, 0x2397000
	0x01D5E864 LDR X0, [X0 + 0x630]
	0x01D5E868 BL 0x1C16CF4
	0x01D5E86C MOVZ W8, 0x1
	0x01D5E870 STRB W8, [X20 + 0x82A]
	0x01D5E874 MOV X0, X19
	0x01D5E878 MOV W1, W31
	0x01D5E87C MOV X2, X31
	0x01D5E880 BL 0x3C32410
	0x01D5E884 LDR X8, [X19 + 0x70]
	0x01D5E888 CBZ X8, 0x1D5E980
	0x01D5E88C LDR X20, [X8 + 0x60]
	0x01D5E890 CBZ X20, 0x1D5E980
	0x01D5E894 LDR X0, [X20 + 0x58]
	0x01D5E898 CBZ X0, 0x1D5E980
	0x01D5E89C ADRP X8, 0x2397000
	0x01D5E8A0 ADRP X21, 0x2395000
	0x01D5E8A4 LDR X8, [X8 + 0x620]
	0x01D5E8A8 LDR X21, [X21 + 0x900]
	0x01D5E8AC LDR X1, [X8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x267B000
	006 Move X19, 0x2398000
	007 Move W8, [X20+2081]
	008 Move X19, [X19+1384]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2398000
	014 Move X0, [X0+1384]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+2081], W8
	018 Add X0, X31, 24
	019 Move W1, 2024
	020 Move W2, 10
	021 Move W3, 7
	022 Move W4, 7
	023 Move W7, 1
	024 Move W5, W31
	025 Move W6, W31
	026 Move [X31+24], X31
	027 Move [X31], X31
	028 Call DateTime..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	029 Move X8, [X19]
	030 Move X30, [X31+16]
	031 Move X9, [X31+24]
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X8, [X8+184]
	035 Move [X8], X9
	036 Add X31, X31, 48
	037 Return 

