Type: AnimalCompany.SetPlayerBlockedLocalPlayerAction

Method: System.Void .ctor(System.Int32 playerID, System.Boolean blockedLocalPlayer)

Disassembly:
	0x01DB5B54 MOV X2, X31
	0x01DB5B58 LDR X0, [X8]
	0x01DB5B5C BL 0x1E77AF8
	0x01DB5B60 B 0x1DB5AA4
	0x01DB5B64 MOV X0, X31
	0x01DB5B68 LDR W1, [X19 + 0x68]
	0x01DB5B6C MOVZ W2, 0x2
	0x01DB5B70 MOV X3, X31
	0x01DB5B74 BL 0x1E9C23C
	0x01DB5B78 STUR X0, [X21 + 0x1C]
	0x01DB5B7C LDR X8, [X20 + 0x18]
	0x01DB5B80 ADD X0, X21, 0x28

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W19, W1
	006 Move X1, X31
	007 Move X20, X0
	008 And W21, W2, 1
	009 Call BaseAction..ctor, X0
	010 Move [X20+20], W19
	011 Move [X20+24], W21
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return 

Method: System.Void Execute(AnimalCompany.AppState state)

Disassembly:
	0x01DBB4D8 TBNZ X8, 0x0, 0x1DBB514
	0x01DBB4DC ADRP X0, 0x2338000
	0x01DBB4E0 LDR X0, [X0 + 0x648]
	0x01DBB4E4 BL 0x1C16CF4
	0x01DBB4E8 ADRP X0, 0x2338000
	0x01DBB4EC LDR X0, [X0 + 0xAB0]
	0x01DBB4F0 BL 0x1C16CF4
	0x01DBB4F4 ADRP X0, 0x233A000
	0x01DBB4F8 LDR X0, [X0 + 0x88]
	0x01DBB4FC BL 0x1C16CF4
	0x01DBB500 ADRP X0, 0x233A000
	0x01DBB504 LDR X0, [X0 + 0x98]
	0x01DBB508 BL 0x1C16CF4
	0x01DBB50C MOVZ W8, 0x1
	0x01DBB510 STRB W8, [X21 + 0xB44]
	0x01DBB514 ADRP X22, 0x2338000
	0x01DBB518 ADRP X21, 0x233A000
	0x01DBB51C LDR X22, [X22 + 0xAB0]
	0x01DBB520 LDR X21, [X21 + 0x98]
	0x01DBB524 CBNZ X20, 0x1DBB54C
	0x01DBB528 ADRP X8, 0x233A000
	0x01DBB52C LDR X8, [X8 + 0x88]
	0x01DBB530 LDR X0, [X8]
	0x01DBB534 BL 0x1C16F10
	0x01DBB538 MOVZ W8, 0x1
	0x01DBB53C MOV X1, X31
	0x01DBB540 MOV X20, X0
	0x01DBB544 STRB W8, [X0 + 0x10]
	0x01DBB548 BL 0x33BDD8C
	0x01DBB54C LDR X0, [X22]
	0x01DBB550 MOVZ W1, 0x1
	0x01DBB554 BL 0x1C16D6C
	0x01DBB558 LDR X8, [X21]
	0x01DBB55C MOV X21, X0
	0x01DBB560 MOV X0, X8
	0x01DBB564 BL 0x1C16F10
	0x01DBB568 MOV X1, X31
	0x01DBB56C MOV X22, X0
	0x01DBB570 BL 0x1D36B98
	0x01DBB574 STP X19, X20, [X22 + 0x18]
	0x01DBB578 CBZ X21, 0x1DBB5D4
	0x01DBB57C LDR X8, [X21]
	0x01DBB580 MOV X0, X22

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x261E000
	007 Move W8, [X21+2870]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x233D000
	015 Move X0, [X0+3416]
	016 Call 0x1C17CF4
	017 Move X0, 0x2339000
	018 Move X0, [X0+3632]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2870], W8
	022 Move [X31+8], X31
	023 Compare X20, 0
	024 JumpIfEqual {58}
	025 Move X8, [X20+224]
	026 Compare X8, 0
	027 JumpIfEqual {58}
	028 Move X0, [X8+128]
	029 Compare X0, 0
	030 JumpIfEqual {58}
	031 Move X8, 0x233D000
	032 Move X8, [X8+3416]
	033 Move W1, [X19+20]
	034 Add X2, X31, 8
	035 Move X3, [X8]
	036 Call 0x260832C, X0, X1, X2
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {52}
	041 Move X8, [X31+8]
	042 Compare X8, 0
	043 JumpIfEqual {58}
	044 Move X0, [X8+96]
	045 Compare X0, 0
	046 JumpIfEqual {58}
	047 Move X8, 0x2339000
	048 Move W1, [X19+24]
	049 Move X8, [X8+3632]
	050 Move X2, [X8]
	051 Call 0x26528D0, X0, X1
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X30, [X31+16]
	055 Move X21, [X31+24]
	056 Add X31, X31, 48
	057 Return 
	058 Call 0x1C17F20

