Type: AnimalCompany.StunTester

Method: AnimalCompany.GrabbableItem get_grabbable()

Disassembly:
	0x01DA6430 ADRP X0, 0x2351000
	0x01DA6434 LDR X0, [X0 + 0x470]

ISIL:
	001 Move X0, [X0+128]
	002 Return X0

Method: System.Void Awake()

Disassembly:
	0x01DA6438 BL 0x1C16CF4
	0x01DA643C ADRP X0, 0x2351000
	0x01DA6440 LDR X0, [X0 + 0x478]
	0x01DA6444 BL 0x1C16CF4
	0x01DA6448 ADRP X0, 0x2351000
	0x01DA644C LDR X0, [X0 + 0x480]
	0x01DA6450 BL 0x1C16CF4
	0x01DA6454 ADRP X0, 0x2351000
	0x01DA6458 LDR X0, [X0 + 0x488]
	0x01DA645C BL 0x1C16CF4
	0x01DA6460 ADRP X0, 0x2351000
	0x01DA6464 LDR X0, [X0 + 0x490]
	0x01DA6468 BL 0x1C16CF4
	0x01DA646C ADRP X0, 0x2351000
	0x01DA6470 LDR X0, [X0 + 0x498]
	0x01DA6474 BL 0x1C16CF4
	0x01DA6478 MOVZ W8, 0x1
	0x01DA647C STRB W8, [X20 + 0xA9C]
	0x01DA6480 STR X31, [X31 + 0x18]
	0x01DA6484 LDRB W8, [X19 + 0x58]
	0x01DA6488 CBZ W8, 0x1DA6804
	0x01DA648C STRB W31, [X19 + 0x58]
	0x01DA6490 LDR X0, [X19 + 0xB0]
	0x01DA6494 CBZ X0, 0x1DA6988
	0x01DA6498 LDR X20, [X19 + 0xA0]
	0x01DA649C MOV X1, X31
	0x01DA64A0 BL 0x3C3F58C
	0x01DA64A4 CBZ X20, 0x1DA6988
	0x01DA64A8 FMOV S3, 1
	0x01DA64AC MOV X0, X20
	0x01DA64B0 MOV W1, W31
	0x01DA64B4 MOV X2, X31
	0x01DA64B8 BL 0x1DD0FA8
	0x01DA64BC MOV X0, X31
	0x01DA64C0 BL 0x3C047F8
	0x01DA64C4 CBZ X0, 0x1DA6988
	0x01DA64C8 MOV X1, X31
	0x01DA64CC BL 0x3C32E90
	0x01DA64D0 CBZ X0, 0x1DA6988
	0x01DA64D4 ADRP X20, 0x234D000
	0x01DA64D8 ADRP X21, 0x234D000
	0x01DA64DC LDR X20, [X20 + 0x720]
	0x01DA64E0 LDR X21, [X21 + 0x718]
	0x01DA64E4 MOV X1, X31
	0x01DA64E8 BL 0x3C3F58C
	0x01DA64EC LDR X0, [X20]
	0x01DA64F0 MOV V8.16B, V0.16B
	0x01DA64F4 MOV V9.16B, V1.16B
	0x01DA64F8 MOV V10.16B, V2.16B
	0x01DA64FC BL 0x1C16F10
	0x01DA6500 LDR X1, [X21]
	0x01DA6504 MOV X20, X0
	0x01DA6508 BL 0x2AA4804
	0x01DA650C MOV X0, X19
	0x01DA6510 MOV X1, X31
	0x01DA6514 BL 0x3C32E90
	0x01DA6518 CBZ X0, 0x1DA6988
	0x01DA651C MOV X1, X31
	0x01DA6520 BL 0x3C3F58C
	0x01DA6524 ADRP X25, 0x2632000
	0x01DA6528 LDRB W8, [X25 + 0x85C]
	0x01DA652C MOV V11.16B, V0.16B
	0x01DA6530 MOV V12.16B, V1.16B
	0x01DA6534 MOV V13.16B, V2.16B
	0x01DA6538 CBNZ W8, 0x1DA6550
	0x01DA653C ADRP X0, 0x234D000
	0x01DA6540 LDR X0, [X0 + 0x5A8]
	0x01DA6544 BL 0x1C16CF4
	0x01DA6548 MOVZ W8, 0x1
	0x01DA654C STRB W8, [X25 + 0x85C]
	0x01DA6550 ADRP X26, 0x234D000
	0x01DA6554 LDR X26, [X26 + 0x5A8]
	0x01DA6558 ADRP X21, 0x234D000
	0x01DA655C FSUB S14, S8, S11
	0x01DA6560 FSUB S12, S9, S12
	0x01DA6564 LDR X0, [X26]
	0x01DA6568 FSUB S11, S10, S13
	0x01DA656C LDR W8, [X0 + 0xE0]
	0x01DA6570 LDR X21, [X21 + 0xA90]
	0x01DA6574 CBNZ W8, 0x1DA657C
	0x01DA6578 BL 0x1C16DFC
	0x01DA657C FMUL S0, S14, S14
	0x01DA6580 FMUL S1, S12, S12
	0x01DA6584 LDR X0, [X21]
	0x01DA6588 FMUL S2, S11, S11
	0x01DA658C FADD S0, S0, S1
	0x01DA6590 FADD S0, S2, S0
	0x01DA6594 FSQRT S0, S0
	0x01DA6598 ADD X1, X31, 0xC
	0x01DA659C STR S0, [X31 + 0xC]
	0x01DA65A0 BL 0x1C16E04
	0x01DA65A4 CBZ X20, 0x1DA6988
	0x01DA65A8 ADRP X8, 0x2351000
	0x01DA65AC ADRP X28, 0x234D000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2633000
	008 Move W8, [X20+2708]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0x2352000
	015 Move X0, [X0+984]
	016 Call 0x1C17CF4
	017 Move X0, 0x234F000
	018 Move X0, [X0+3696]
	019 Call 0x1C17CF4
	020 Move X0, 0x2352000
	021 Move X0, [X0+992]
	022 Call 0x1C17CF4
	023 Move X0, 0x2352000
	024 Move X0, [X0+1000]
	025 Call 0x1C17CF4
	026 Move X0, 0x2352000
	027 Move X0, [X0+1008]
	028 Call 0x1C17CF4
	029 Move X0, 0x2352000
	030 Move X0, [X0+1016]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+2708], W8
	034 Move X22, [X19+128]
	035 Compare X22, 0
	036 JumpIfEqual {105}
	037 Move X23, 0x234F000
	038 Move X23, [X23+3696]
	039 Move X21, 0x2352000
	040 Move X20, [X22+464]
	041 Move X0, [X23]
	042 Move X21, [X21+1000]
	043 Call 0x1C17F10
	044 Move X2, [X21]
	045 Move X1, X19
	046 Move X3, X31
	047 Move X21, X0
	048 Call Action..ctor, X0, X1, X2
	049 Move X0, X20
	050 Move X1, X21
	051 Move X2, X31
	052 Call Delegate.Combine, X0, X1
	053 Compare X0, 0
	054 JumpIfEqual {62}
	055 Move X1, [X23]
	056 Move X8, [X0]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move [X22+464], X0
	059 Move X8, [X0]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Call 0x1C181E0
	062 Move [X22+464], X0
	063 Move X8, 0x2352000
	064 Move X8, [X8+992]
	065 Move X20, 0x2352000
	066 Move X21, 0x2352000
	067 Move X22, 0x2352000
	068 Move X0, [X8]
	069 Move X20, [X20+1016]
	070 Move X21, [X21+984]
	071 Move X22, [X22+1008]
	072 Call 0x1C17F10
	073 Move X3, [X20]
	074 Move X1, X31
	075 Move W2, W31
	076 Move X4, X31
	077 Move X5, X31
	078 Move X6, X31
	079 Move X7, X31
	080 Move X20, X0
	081 Call InputAction..ctor, X0, X1, X2, X3, X4, X5, X6
	082 Move X0, [X21]
	083 Call 0x1C17F10
	084 Move X2, [X22]
	085 Move X1, X19
	086 Move X3, X31
	087 Move X21, X0
	088 Call Action`1<CallbackContext>..ctor, X0, X1, X2
	089 Compare X20, 0
	090 JumpIfEqual {105}
	091 Move X0, X20
	092 Move X1, X21
	093 Move X2, X31
	094 Call InputAction.add_performed, X0, X1
	095 Move X0, X20
	096 Move X20, [X31+32]
	097 Move X19, [X31+40]
	098 Move X22, [X31+16]
	099 Move X21, [X31+24]
	100 Move X1, X31
	101 Move X30, [X31+48]
	102 Move X23, [X31+56]
	103 Call InputAction.Enable, X0
	104 Return 
	105 Call 0x1C17F20

Method: System.Void OnDestroy()

Disassembly:
	0x01DA65B0 LDR X8, [X8 + 0x480]
	0x01DA65B4 LDR X28, [X28 + 0x710]
	0x01DA65B8 ADRP X24, 0x234D000
	0x01DA65BC ADRP X29, 0x2351000
	0x01DA65C0 ADRP X23, 0x234D000
	0x01DA65C4 LDR X24, [X24 + 0x5A0]
	0x01DA65C8 LDR X29, [X29 + 0x468]
	0x01DA65CC LDR X23, [X23 + 0x788]
	0x01DA65D0 LDR X1, [X8]
	0x01DA65D4 LDR X3, [X28]
	0x01DA65D8 ADRP X27, 0x2351000
	0x01DA65DC ADRP X22, 0x2351000
	0x01DA65E0 ADRP X21, 0x2351000
	0x01DA65E4 LDR X27, [X27 + 0x498]
	0x01DA65E8 LDR X22, [X22 + 0x478]
	0x01DA65EC LDR X21, [X21 + 0x490]
	0x01DA65F0 MOV X2, X0
	0x01DA65F4 MOV X0, X20
	0x01DA65F8 BL 0x2AA5098
	0x01DA65FC LDR X0, [X24]
	0x01DA6600 ADD X1, X31, 0x0
	0x01DA6604 STP S8, S9, [X31]
	0x01DA6608 STR S10, [X31 + 0x8]
	0x01DA660C BL 0x1C16E04
	0x01DA6610 LDR X1, [X29]
	0x01DA6614 LDR X3, [X28]
	0x01DA6618 MOV X2, X0
	0x01DA661C MOV X0, X20
	0x01DA6620 BL 0x2AA5098
	0x01DA6624 LDR X0, [X23]
	0x01DA6628 LDR W8, [X0 + 0xE0]
	0x01DA662C CBNZ W8, 0x1DA6634
	0x01DA6630 BL 0x1C16DFC
	0x01DA6634 LDR X1, [X27]
	0x01DA6638 LDR X3, [X22]
	0x01DA663C LDR X4, [X21]
	0x01DA6640 MOVZ W0, 0x20
	0x01DA6644 MOVZ W5, 0x98
	0x01DA6648 MOV X2, X20
	0x01DA664C MOV X6, X31
	0x01DA6650 BL 0x35C2014
	0x01DA6654 MOV X0, X19
	0x01DA6658 MOV X1, X31
	0x01DA665C BL 0x3C32E90
	0x01DA6660 CBZ X0, 0x1DA6988
	0x01DA6664 MOV X1, X31
	0x01DA6668 BL 0x3C3F58C
	0x01DA666C LDRB W8, [X25 + 0x85C]
	0x01DA6670 MOV V11.16B, V0.16B
	0x01DA6674 MOV V12.16B, V1.16B
	0x01DA6678 MOV V13.16B, V2.16B
	0x01DA667C CBNZ W8, 0x1DA6694
	0x01DA6680 ADRP X0, 0x234D000
	0x01DA6684 LDR X0, [X0 + 0x5A8]
	0x01DA6688 BL 0x1C16CF4
	0x01DA668C MOVZ W8, 0x1
	0x01DA6690 STRB W8, [X25 + 0x85C]
	0x01DA6694 LDR X0, [X26]
	0x01DA6698 FSUB S11, S8, S11
	0x01DA669C FSUB S9, S9, S12
	0x01DA66A0 FSUB S8, S10, S13
	0x01DA66A4 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2633000
	008 Move X21, 0x2351000
	009 Move W8, [X20+2709]
	010 Move X21, [X21+2680]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x234F000
	017 Move X0, [X0+3696]
	018 Call 0x1C17CF4
	019 Move X0, 0x2351000
	020 Move X0, [X0+2680]
	021 Call 0x1C17CF4
	022 Move X0, 0x2352000
	023 Move X0, [X0+1000]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+2709], W8
	027 Move X0, [X21]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Compare X19, 0
	033 JumpIfEqual {73}
	034 Move W8, [X19+48]
	035 Move X22, [X19+128]
	036 Or W8, W8, 8
	037 Move [X19+48], W8
	038 Compare X22, 0
	039 JumpIfEqual {73}
	040 Move X23, 0x234F000
	041 Move X23, [X23+3696]
	042 Move X21, 0x2352000
	043 Move X20, [X22+464]
	044 Move X0, [X23]
	045 Move X21, [X21+1000]
	046 Call 0x1C17F10
	047 Move X2, [X21]
	048 Move X1, X19
	049 Move X3, X31
	050 Move X21, X0
	051 Call Action..ctor, X0, X1, X2
	052 Move X0, X20
	053 Move X1, X21
	054 Move X2, X31
	055 Call Delegate.Remove, X0, X1
	056 Compare X0, 0
	057 JumpIfEqual {65}
	058 Move X1, [X23]
	059 Move X8, [X0]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move [X22+464], X0
	062 Move X8, [X0]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Call 0x1C181E0
	065 Move [X22+464], X0
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 Move X23, [X31+56]
	072 Return 
	073 Call 0x1C17F20

Method: System.Void Detonate()

Disassembly:
	0x01DA66A8 CBNZ W8, 0x1DA66B0
	0x01DA66AC BL 0x1C16DFC
	0x01DA66B0 FMUL S0, S11, S11
	0x01DA66B4 FMUL S1, S9, S9
	0x01DA66B8 LDR V2, [X19 + 0x80]
	0x01DA66BC FADD S0, S0, S1
	0x01DA66C0 FMUL S1, S8, S8
	0x01DA66C4 FADD S0, S1, S0
	0x01DA66C8 FSQRT S0, S0
	0x01DA66CC FCMP S0, S2
	0x01DA66D0 B.PL 0x1DA68C0
	0x01DA66D4 ADRP X8, 0x234F000
	0x01DA66D8 LDR X8, [X8 + 0x310]
	0x01DA66DC LDR X0, [X8]
	0x01DA66E0 LDR W8, [X0 + 0xE0]
	0x01DA66E4 CBNZ W8, 0x1DA66EC
	0x01DA66E8 BL 0x1C16DFC
	0x01DA66EC ADD X1, X31, 0x18
	0x01DA66F0 MOVZ W0, 0x1
	0x01DA66F4 BL 0x1DA6E5C
	0x01DA66F8 TBZ X0, 0x0, 0x1DA6888
	0x01DA66FC LDR X0, [X31 + 0x18]
	0x01DA6700 CBZ X0, 0x1DA6988
	0x01DA6704 MOV X1, X31
	0x01DA6708 BL 0x3C3F58C
	0x01DA670C LDR X0, [X24]
	0x01DA6710 ADD X1, X31, 0x0
	0x01DA6714 STP S0, S1, [X31]
	0x01DA6718 STR S2, [X31 + 0x8]
	0x01DA671C BL 0x1C16E04
	0x01DA6720 ADRP X8, 0x2351000
	0x01DA6724 LDR X8, [X8 + 0x470]
	0x01DA6728 MOV X1, X0
	0x01DA672C MOV X2, X31
	0x01DA6730 LDR X8, [X8]
	0x01DA6734 MOV X0, X8
	0x01DA6738 BL 0x321EFD0
	0x01DA673C LDR X8, [X23]
	0x01DA6740 MOV X20, X0
	0x01DA6744 LDR W9, [X8 + 0xE0]
	0x01DA6748 CBNZ W9, 0x1DA6754
	0x01DA674C MOV X0, X8
	0x01DA6750 BL 0x1C16DFC
	0x01DA6754 LDR X3, [X22]
	0x01DA6758 LDR X4, [X21]
	0x01DA675C MOVZ W0, 0x20
	0x01DA6760 MOVZ W5, 0xA1
	0x01DA6764 MOV X1, X20
	0x01DA6768 MOV X2, X31
	0x01DA676C MOV X6, X31
	0x01DA6770 BL 0x35C2014
	0x01DA6774 ADRP X20, 0x2632000
	0x01DA6778 LDRB W8, [X20 + 0x792]
	0x01DA677C CBNZ W8, 0x1DA6794
	0x01DA6780 ADRP X0, 0x234E000
	0x01DA6784 LDR X0, [X0 + 0x5A0]
	0x01DA6788 BL 0x1C16CF4
	0x01DA678C MOVZ W8, 0x1
	0x01DA6790 STRB W8, [X20 + 0x792]
	0x01DA6794 ADRP X8, 0x234E000
	0x01DA6798 LDR X8, [X8 + 0x5A0]
	0x01DA679C LDR X8, [X8]
	0x01DA67A0 LDR X8, [X8 + 0xB8]
	0x01DA67A4 LDR X8, [X8]
	0x01DA67A8 CBZ X8, 0x1DA6988
	0x01DA67AC LDR X0, [X31 + 0x18]
	0x01DA67B0 CBZ X0, 0x1DA6988
	0x01DA67B4 LDR X20, [X8 + 0x20]
	0x01DA67B8 MOV X1, X31
	0x01DA67BC BL 0x3C3F58C
	0x01DA67C0 CBZ X20, 0x1DA6988
	0x01DA67C4 MOV X0, X20
	0x01DA67C8 MOV W1, W31
	0x01DA67CC MOV X2, X31
	0x01DA67D0 BL 0x1DC26C0
	0x01DA67D4 LDR X0, [X31 + 0x18]
	0x01DA67D8 CBZ X0, 0x1DA6988
	0x01DA67DC LDR X19, [X19 + 0xA0]
	0x01DA67E0 MOV X1, X31
	0x01DA67E4 BL 0x3C3F58C
	0x01DA67E8 CBZ X19, 0x1DA6988
	0x01DA67EC FMOV S3, 1
	0x01DA67F0 MOV X0, X19
	0x01DA67F4 MOV W1, W31
	0x01DA67F8 MOV X2, X31
	0x01DA67FC BL 0x1DD0FA8
	0x01DA6800 B 0x1DA68C0
	0x01DA6804 ADRP X21, 0x2350000
	0x01DA6808 LDR X21, [X21 + 0xA78]
	0x01DA680C LDR X0, [X21]
	0x01DA6810 LDR W8, [X0 + 0xE0]
	0x01DA6814 CBNZ W8, 0x1DA681C
	0x01DA6818 BL 0x1C16DFC
	0x01DA681C MOV X0, X19
	0x01DA6820 MOV X1, X31
	0x01DA6824 BL 0x1E77B08
	0x01DA6828 LDR X0, [X19 + 0x38]
	0x01DA682C CBZ X0, 0x1DA6988
	0x01DA6830 MOV X1, X31
	0x01DA6834 BL 0x1E9E538
	0x01DA6838 CMP W0, 0x4
	0x01DA683C B.EQ 0x1DA68C0
	0x01DA6840 LDR X0, [X19 + 0x40]
	0x01DA6844 CBZ X0, 0x1DA6988
	0x01DA6848 MOV X1, X31
	0x01DA684C BL 0x1E94078
	0x01DA6850 TBNZ X0, 0x0, 0x1DA68F0
	0x01DA6854 LDR X0, [X21]
	0x01DA6858 LDR X19, [X19 + 0x40]
	0x01DA685C LDR W8, [X0 + 0xE0]
	0x01DA6860 CBNZ W8, 0x1DA6868
	0x01DA6864 BL 0x1C16DFC
	0x01DA6868 ADRP X8, 0x2351000
	0x01DA686C LDR X8, [X8 + 0x460]
	0x01DA6870 MOVZ W2, 0x1
	0x01DA6874 MOV X1, X19
	0x01DA6878 MOV X3, X31
	0x01DA687C LDR X0, [X8]
	0x01DA6880 BL 0x1E77B00
	0x01DA6884 B 0x1DA68C0
	0x01DA6888 LDR X0, [X23]
	0x01DA688C LDR W8, [X0 + 0xE0]
	0x01DA6890 CBNZ W8, 0x1DA6898
	0x01DA6894 BL 0x1C16DFC
	0x01DA6898 ADRP X8, 0x2351000
	0x01DA689C LDR X8, [X8 + 0x488]
	0x01DA68A0 LDR X3, [X22]
	0x01DA68A4 LDR X4, [X21]
	0x01DA68A8 MOVZ W0, 0x20
	0x01DA68AC LDR X1, [X8]
	0x01DA68B0 MOVZ W5, 0xA7
	0x01DA68B4 MOV X2, X31
	0x01DA68B8 MOV X6, X31
	0x01DA68BC BL 0x35C25CC
	0x01DA68C0 LDP X20, X19, [X31 + 0xA0]
	0x01DA68C4 LDP X22, X21, [X31 + 0x90]
	0x01DA68C8 LDP X24, X23, [X31 + 0x80]
	0x01DA68CC LDP X26, X25, [X31 + 0x70]
	0x01DA68D0 LDP X28, X27, [X31 + 0x60]
	0x01DA68D4 LDP X29, X30, [X31 + 0x50]
	0x01DA68D8 LDP D9, D8, [X31 + 0x40]
	0x01DA68DC LDP D11, D10, [X31 + 0x30]
	0x01DA68E0 LDP D13, D12, [X31 + 0x20]
	0x01DA68E4 LDR V14, [X31 + 0x10]
	0x01DA68E8 ADD X31, X31, 0xB0
	0x01DA68EC RET
	0x01DA68F0 LDR X8, [X19 + 0x38]
	0x01DA68F4 CBZ X8, 0x1DA6988
	0x01DA68F8 MOV W20, W0
	0x01DA68FC LDR X0, [X8 + 0x50]
	0x01DA6900 CBZ X0, 0x1DA6988
	0x01DA6904 MOV X1, X31
	0x01DA6908 BL 0x1EC4D00
	0x01DA690C TBZ X0, 0x0, 0x1DA697C
	0x01DA6910 LDR X8, [X19 + 0x38]
	0x01DA6914 CBZ X8, 0x1DA6988
	0x01DA6918 LDR X0, [X8 + 0x50]
	0x01DA691C MOVZ W1, 0x8
	0x01DA6920 MOV X2, X31
	0x01DA6924 BL 0x1ED9318
	0x01DA6928 LDR X8, [X19 + 0x40]
	0x01DA692C CBZ X8, 0x1DA6988
	0x01DA6930 LDR X8, [X8 + 0x20]
	0x01DA6934 MOV X21, X0
	0x01DA6938 CBZ X8, 0x1DA6944
	0x01DA693C LDR W0, [X8]
	0x01DA6940 B 0x1DA6948
	0x01DA6944 MOV X0, X31
	0x01DA6948 LDR W1, [X19 + 0x68]
	0x01DA694C MOVZ W2, 0x3
	0x01DA6950 MOV X3, X31
	0x01DA6954 BL 0x1E9C23C
	0x01DA6958 STUR X0, [X21 + 0x1C]
	0x01DA695C CBZ X21, 0x1DA6988
	0x01DA6960 MOVZ W8, 0x40
	0x01DA6964 STR W8, [X21 + 0xC]
	0x01DA6968 LDR X0, [X19 + 0x38]
	0x01DA696C CBZ X0, 0x1DA6988
	0x01DA6970 MOV X1, X21
	0x01DA6974 MOV X2, X31
	0x01DA6978 BL 0x1EA1E24
	0x01DA697C ANDS W31, W20, 0x7
	0x01DA6980 B.NE 0x1DA6490
	0x01DA6984 B 0x1DA68C0
	0x01DA6988 BL 0x1C16F20
	0x01DA698C STR X30, [X31 - 0x20]!
	0x01DA6990 STP X20, X19, [X31 + 0x10]
	0x01DA6994 ADRP X20, 0x2632000
	0x01DA6998 LDRB W8, [X20 + 0xA9D]
	0x01DA699C MOV X19, X0
	0x01DA69A0 TBNZ X8, 0x0, 0x1DA69C4
	0x01DA69A4 ADRP X0, 0x2350000
	0x01DA69A8 LDR X0, [X0 + 0xA78]
	0x01DA69AC BL 0x1C16CF4
	0x01DA69B0 ADRP X0, 0x2351000
	0x01DA69B4 LDR X0, [X0 + 0x4A0]
	0x01DA69B8 BL 0x1C16CF4
	0x01DA69BC MOVZ W8, 0x1
	0x01DA69C0 STRB W8, [X20 + 0xA9D]
	0x01DA69C4 LDRB W8, [X19 + 0x58]
	0x01DA69C8 CBZ W8, 0x1DA69D4
	0x01DA69CC STRB W31, [X19 + 0x58]
	0x01DA69D0 B 0x1DA6A10
	0x01DA69D4 ADRP X20, 0x2350000
	0x01DA69D8 LDR X20, [X20 + 0xA78]
	0x01DA69DC LDR X0, [X20]
	0x01DA69E0 LDR W8, [X0 + 0xE0]
	0x01DA69E4 CBNZ W8, 0x1DA69EC
	0x01DA69E8 BL 0x1C16DFC
	0x01DA69EC MOV X0, X19
	0x01DA69F0 MOV X1, X31
	0x01DA69F4 BL 0x1E77B08
	0x01DA69F8 LDR X0, [X19 + 0x38]
	0x01DA69FC CBZ X0, 0x1DA6AF8
	0x01DA6A00 MOV X1, X31
	0x01DA6A04 BL 0x1E9E538
	0x01DA6A08 CMP W0, 0x4
	0x01DA6A0C B.NE 0x1DA6A1C
	0x01DA6A10 LDP X20, X19, [X31 + 0x10]
	0x01DA6A14 LDR X30, [X31], #0x20
	0x01DA6A18 RET
	0x01DA6A1C LDR X0, [X19 + 0x40]
	0x01DA6A20 CBZ X0, 0x1DA6AF8
	0x01DA6A24 MOV X1, X31
	0x01DA6A28 BL 0x1E94078

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+16], D12
	003 Move [X31+24], D11
	004 Move [X31+32], D10
	005 Move [X31+40], D9
	006 Move [X31+48], D8
	007 Move [X31+56], X30
	008 Move [X31+64], X28
	009 Move [X31+72], X27
	010 Move [X31+80], X26
	011 Move [X31+88], X25
	012 Move [X31+96], X24
	013 Move [X31+104], X23
	014 Move [X31+112], X22
	015 Move [X31+120], X21
	016 Move [X31+128], X20
	017 Move [X31+136], X19
	018 Move X20, 0x2633000
	019 Move W8, [X20+2710]
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {51}
	025 Move X0, 0x234E000
	026 Move X0, [X0+2600]
	027 Call 0x1C17CF4
	028 Move X0, 0x234E000
	029 Move X0, [X0+1488]
	030 Call 0x1C17CF4
	031 Move X0, 0x234E000
	032 Move X0, [X0+1496]
	033 Call 0x1C17CF4
	034 Move X0, 0x234E000
	035 Move X0, [X0+1504]
	036 Call 0x1C17CF4
	037 Move X0, 0x234E000
	038 Move X0, [X0+1512]
	039 Call 0x1C17CF4
	040 Move X0, 0x234E000
	041 Move X0, [X0+1520]
	042 Call 0x1C17CF4
	043 Move X0, 0x234E000
	044 Move X0, [X0+1528]
	045 Call 0x1C17CF4
	046 Move X0, 0x2352000
	047 Move X0, [X0+1024]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X20+2710], W8
	051 Move [X31+8], X31
	052 Move X20, [X19+136]
	053 Move X0, X19
	054 Move X1, X31
	055 Call Component.get_transform, X0
	056 Compare X0, 0
	057 JumpIfEqual {256}
	058 Move X1, X31
	059 Call Transform.get_position, X0
	060 Move S3, 1
	061 Move X0, X20
	062 Move X1, X31
	063 Call SFXManager.PlaySFX, X0, X1, V0
	064 Move X0, X19
	065 Move X1, X31
	066 Call Component.get_transform, X0
	067 Compare X0, 0
	068 JumpIfEqual {256}
	069 Move X21, 0x234E000
	070 Move X20, 0x234E000
	071 Move X21, [X21+1496]
	072 Move X20, [X20+1528]
	073 Move X1, X31
	074 Call Transform.get_position, X0
	075 Move X0, [X21]
	076 Move V10, [X19+144]
	077 Move V8, V0
	078 Move V9, V1
	079 Move W8, [X0+224]
	080 Move V11, V2
	081 Compare W8, 0
	082 JumpIfNotEqual {85}
	083 Call 0x1C17DFC
	084 Move X0, [X21]
	085 Move X8, [X0+184]
	086 Move X1, X31
	087 Move W0, [X8+72]
	088 Call LayerMask.op_Implicit, X0
	089 Move X8, [X20]
	090 Move W20, W0
	091 Move W9, [X8+224]
	092 Compare W9, 0
	093 JumpIfNotEqual {96}
	094 Move X0, X8
	095 Call 0x1C17DFC
	096 Move V0, V8
	097 Move V1, V9
	098 Move V2, V11
	099 Move V3, V10
	100 Move W0, W20
	101 Move X1, X31
	102 Call Physics.OverlapSphere, X0, V0, X1
	103 Move X8, [X19+152]
	104 Compare X8, 0
	105 JumpIfEqual {256}
	106 Move W2, [X8+24]
	107 Move W9, [X8+28]
	108 Move X20, X0
	109 Add W9, W9, 1
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move [X8+24], W31
	112 Move [X8+28], W9
	113 Move X0, [X8+16]
	114 Move W1, W31
	115 Move X3, X31
	116 Call Array.Clear, X0, X1, X2
	117 Compare X20, 0
	118 JumpIfEqual {256}
	119 Move W8, [X20+24]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X24, 0x234E000
	122 Move X25, 0x234E000
	123 Move X26, 0x234E000
	124 Move X27, 0x234E000
	125 Move X28, 0x2352000
	126 Move X24, [X24+2600]
	127 Move X25, [X25+1520]
	128 Move X26, [X26+1504]
	129 Move X27, [X27+1488]
	130 Move X28, [X28+1024]
	131 Move W23, W31
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Add X8, X20, W23
	134 Move X21, [X8+32]
	135 Compare X21, 0
	136 JumpIfEqual {256}
	137 Move X0, X21
	138 Move X1, X31
	139 Call Object.get_name, X0
	140 Move X8, [X24]
	141 Move X22, X0
	142 Move W9, [X8+224]
	143 Compare W9, 0
	144 JumpIfNotEqual {147}
	145 Move X0, X8
	146 Call 0x1C17DFC
	147 Move X0, X22
	148 Move X1, X31
	149 Call Debug.LogError, X0
	150 Add X1, X31, 8
	151 Move X0, X21
	152 Move X2, X31
	153 Call TriggerUtilities.TryGetStunnableFromCollider, X0, X1
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfNotEqual {235}
	158 Move X0, [X19+152]
	159 Compare X0, 0
	160 JumpIfEqual {256}
	161 Move X1, [X31+8]
	162 Move X2, [X25]
	163 Call List`1<Object>.Contains, X0, X1
	164 Move TEMP, X0
	165 And TEMP, TEMP, 1
	166 Compare TEMP, 1
	167 JumpIfEqual {235}
	168 Move X0, [X19+152]
	169 Compare X0, 0
	170 JumpIfEqual {256}
	171 Move W10, [X0+28]
	172 Move X1, [X31+8]
	173 Move X8, [X0+16]
	174 Move X9, [X26]
	175 Add W10, W10, 1
	176 Move [X0+28], W10
	177 Compare X8, 0
	178 JumpIfEqual {256}
	179 NotImplemented "Instruction LDRSW not yet implemented."
	180 Move W11, [X8+24]
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Add W9, W10, 1
	183 Add X8, X8, X10
	184 Move [X0+24], W9
	185 Move [X8+32], X1
	186 Move X8, [X9+32]
	187 Move X8, [X8+192]
	188 Move X2, [X8+112]
	189 Call List`1<Object>.AddWithResize, X0, X1
	190 Move X21, [X31+8]
	191 Move X0, X19
	192 Move X1, X31
	193 Call Component.get_transform, X0
	194 Compare X0, 0
	195 JumpIfEqual {256}
	196 Move X1, X31
	197 Call Transform.get_position, X0
	198 Compare X21, 0
	199 JumpIfEqual {256}
	200 Move X8, [X21]
	201 Move S12, [X19+144]
	202 Move S11, [X19+148]
	203 Move X1, [X27]
	204 Move X22, [X28]
	205 NotImplemented "Instruction LDRH not yet implemented."
	206 Move V8, V0
	207 Move V9, V1
	208 Move V10, V2
	209 Compare X9, 0
	210 JumpIfEqual {217}
	211 Move X10, [X8+176]
	212 Add X10, X10, 8
	213 NotImplemented "Instruction LDUR not yet implemented."
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Subtract X9, X9, 1
	216 Add X10, X10, 16
	217 Move X0, X21
	218 Move W2, W31
	219 Call 0x1C5D788
	220 NotImplemented "Instruction LDRSW not yet implemented."
	221 Add X8, X8, X9
	222 Add X0, X8, 312
	223 Move X8, [X0]
	224 Move X4, [X0+8]
	225 Move X0, X21
	226 Move V0, V8
	227 Move V1, V9
	228 Move V2, V10
	229 Move V3, V12
	230 Move V4, V11
	231 Move X1, X22
	232 Move X2, X31
	233 Move W3, W31
	234 NotImplemented "Instruction BLR not yet implemented."
	235 Move W8, [X20+24]
	236 Add W23, W23, 1
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move X20, [X31+128]
	239 Move X19, [X31+136]
	240 Move X22, [X31+112]
	241 Move X21, [X31+120]
	242 Move X24, [X31+96]
	243 Move X23, [X31+104]
	244 Move X26, [X31+80]
	245 Move X25, [X31+88]
	246 Move X28, [X31+64]
	247 Move X27, [X31+72]
	248 Move X30, [X31+56]
	249 Move D9, [X31+40]
	250 Move D8, [X31+48]
	251 Move D11, [X31+24]
	252 Move D10, [X31+32]
	253 Move V12, [X31+16]
	254 Add X31, X31, 144
	255 Return 
	256 Call 0x1C17F20
	257 Call 0x1C17F28

Method: System.Void OnDrawGizmosSelected()

Disassembly:
	0x01DA6A2C TBNZ X0, 0x0, 0x1DA6A68
	0x01DA6A30 LDR X0, [X20]
	0x01DA6A34 LDR X19, [X19 + 0x40]
	0x01DA6A38 LDR W8, [X0 + 0xE0]
	0x01DA6A3C CBNZ W8, 0x1DA6A44
	0x01DA6A40 BL 0x1C16DFC
	0x01DA6A44 ADRP X8, 0x2351000
	0x01DA6A48 LDR X8, [X8 + 0x4A0]
	0x01DA6A4C MOV X1, X19
	0x01DA6A50 LDP X20, X19, [X31 + 0x10]
	0x01DA6A54 MOVZ W2, 0x1
	0x01DA6A58 LDR X0, [X8]
	0x01DA6A5C MOV X3, X31
	0x01DA6A60 LDR X30, [X31], #0x20
	0x01DA6A64 B 0x1E77B00
	0x01DA6A68 LDR X8, [X19 + 0x38]
	0x01DA6A6C CBZ X8, 0x1DA6AF8
	0x01DA6A70 LDR X0, [X8 + 0x50]
	0x01DA6A74 CBZ X0, 0x1DA6AF8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move S0, W31
	005 Move S1, W31
	006 Move S2, 1
	007 Move S3, 1
	008 Move X0, X31
	009 Call Gizmos.set_color, X0
	010 Move X0, X19
	011 Move X1, X31
	012 Call Component.get_transform, X0
	013 Compare X0, 0
	014 JumpIfEqual {23}
	015 Move X1, X31
	016 Call Transform.get_position, X0
	017 Move V3, [X19+144]
	018 Move X0, X31
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Call Gizmos.DrawWireSphere, X0, V0
	022 Return 
	023 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01DA6A78 MOV X1, X31
	0x01DA6A7C BL 0x1EC4D00
	0x01DA6A80 TBZ X0, 0x0, 0x1DA6A10
	0x01DA6A84 LDR X8, [X19 + 0x38]
	0x01DA6A88 CBZ X8, 0x1DA6AF8
	0x01DA6A8C LDR X0, [X8 + 0x50]
	0x01DA6A90 MOVZ W1, 0x8
	0x01DA6A94 MOV X2, X31
	0x01DA6A98 BL 0x1ED9318
	0x01DA6A9C LDR X8, [X19 + 0x40]
	0x01DA6AA0 CBZ X8, 0x1DA6AF8
	0x01DA6AA4 LDR X8, [X8 + 0x20]
	0x01DA6AA8 MOV X20, X0
	0x01DA6AAC CBZ X8, 0x1DA6AB8
	0x01DA6AB0 LDR W0, [X8]
	0x01DA6AB4 B 0x1DA6ABC
	0x01DA6AB8 MOV X0, X31
	0x01DA6ABC LDR W1, [X19 + 0x68]
	0x01DA6AC0 MOVZ W2, 0x4
	0x01DA6AC4 MOV X3, X31
	0x01DA6AC8 BL 0x1E9C23C
	0x01DA6ACC STUR X0, [X20 + 0x1C]
	0x01DA6AD0 CBZ X20, 0x1DA6AF8
	0x01DA6AD4 MOVZ W8, 0x40
	0x01DA6AD8 STR W8, [X20 + 0xC]
	0x01DA6ADC LDR X0, [X19 + 0x38]
	0x01DA6AE0 CBZ X0, 0x1DA6AF8
	0x01DA6AE4 MOV X1, X20
	0x01DA6AE8 LDP X20, X19, [X31 + 0x10]
	0x01DA6AEC MOV X2, X31
	0x01DA6AF0 LDR X30, [X31], #0x20
	0x01DA6AF4 B 0x1EA1E24
	0x01DA6AF8 BL 0x1C16F20
	0x01DA6AFC STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2633000
	007 Move X21, 0x234E000
	008 Move X20, 0x234E000
	009 Move W8, [X22+2711]
	010 Move X21, [X21+1544]
	011 Move X20, [X20+1552]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x234E000
	018 Move X0, [X0+1552]
	019 Call 0x1C17CF4
	020 Move X0, 0x234E000
	021 Move X0, [X0+1544]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2711], W8
	025 Move X8, -19628032
	026 Move V0, [X8+2528]
	027 Move [X19+144], D0
	028 Move X0, [X21]
	029 Call 0x1C17F10
	030 Move X1, [X20]
	031 Move X20, X0
	032 Call List`1<Object>..ctor, X0
	033 Move [X19+152], X20
	034 Move X0, X19
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X1, X31
	040 Move X30, [X31+48]
	041 Call NetworkBehaviour..ctor, X0
	042 Return 

Method: System.Void <Awake>b__7_0(UnityEngine.InputSystem.InputAction/CallbackContext ctx)

Disassembly:
	0x01DA6B00 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Call StunTester.Detonate, X0
	002 Return 

Method: System.Void CopyBackingFieldsToState(System.Boolean param_0)

Disassembly:
	0x01DA6B04 ADRP X20, 0x2632000

ISIL:
	001 Return 

Method: System.Void CopyStateToBackingFields()

Disassembly:
	0x01DA6B08 LDRB W8, [X20 + 0xA99]

ISIL:
	001 Return 

