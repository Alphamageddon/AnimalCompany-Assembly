Type: AnimalCompany.AvatarItemsManager

Method: System.Void Awake()

Disassembly:
	0x01D3BE18 LDR X0, [X23]
	0x01D3BE1C LDR W8, [X0 + 0xE0]
	0x01D3BE20 CBNZ W8, 0x1D3BE28
	0x01D3BE24 BL 0x1C16DFC
	0x01D3BE28 MOV X0, X21
	0x01D3BE2C MOV X1, X20
	0x01D3BE30 MOV X2, X19
	0x01D3BE34 LDP X20, X19, [X31 + 0x20]
	0x01D3BE38 LDP X22, X21, [X31 + 0x10]
	0x01D3BE3C MOV X3, X31
	0x01D3BE40 LDP X30, X23, [X31], #0x30
	0x01D3BE44 B 0x33B2CA0
	0x01D3BE48 STR X30, [X31 - 0x20]!
	0x01D3BE4C STP X20, X19, [X31 + 0x10]
	0x01D3BE50 ADRP X20, 0x269D000
	0x01D3BE54 LDRB W8, [X20 + 0x719]
	0x01D3BE58 MOV X19, X1
	0x01D3BE5C TBNZ X8, 0x0, 0x1D3BE74
	0x01D3BE60 ADRP X0, 0x23B8000
	0x01D3BE64 LDR X0, [X0 + 0xF18]
	0x01D3BE68 BL 0x1C16CF4
	0x01D3BE6C MOVZ W8, 0x1
	0x01D3BE70 STRB W8, [X20 + 0x719]
	0x01D3BE74 CBZ X19, 0x1D3BEA8
	0x01D3BE78 LDR X8, [X19 + 0xB8]
	0x01D3BE7C CBZ X8, 0x1D3BEA8
	0x01D3BE80 LDR X8, [X8 + 0xA0]
	0x01D3BE84 CBZ X8, 0x1D3BEA8
	0x01D3BE88 LDR X0, [X8 + 0x48]
	0x01D3BE8C CBZ X0, 0x1D3BEA8
	0x01D3BE90 ADRP X8, 0x23B8000
	0x01D3BE94 LDR X8, [X8 + 0xF18]
	0x01D3BE98 LDP X20, X19, [X31 + 0x10]
	0x01D3BE9C LDR X1, [X8]
	0x01D3BEA0 LDR X30, [X31], #0x20
	0x01D3BEA4 B 0x2609558
	0x01D3BEA8 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x269E000
	007 Move X22, 0x23B9000
	008 Move X21, 0x23B9000
	009 Move W8, [X20+1800]
	010 Move X22, [X22+3672]
	011 Move X21, [X21+1608]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x23B9000
	018 Move X0, [X0+1608]
	019 Call 0x1C17CF4
	020 Move X0, 0x23B9000
	021 Move X0, [X0+3672]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+1800], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X2, X31
	029 Move X20, X0
	030 Call CustomCoroutineCommand..ctor, X0, X1
	031 Move X0, [X21]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X20
	037 Move W1, W31
	038 Call App.ScheduleCommand, X0, X1
	039 Move [X19+32], X0
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Return 

Method: System.Void OnDestroy()

Disassembly:
	0x01D3BEB8 STP X20, X19, [X31 + 0x10]
	0x01D3BEBC MOV X19, X1
	0x01D3BEC0 MOV X1, X31
	0x01D3BEC4 MOV X20, X0
	0x01D3BEC8 BL 0x33BDD8C
	0x01D3BECC STR X19, [X20 + 0x18]
	0x01D3BED0 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call CommandHandle.Cancel, X0
	008 Return 
	009 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01D3BED4 LDR X30, [X31], #0x20
	0x01D3BED8 RET
	0x01D3BEDC STP X29, X30, [X31 - 0x60]!
	0x01D3BEE0 STP X28, X27, [X31 + 0x10]
	0x01D3BEE4 STP X26, X25, [X31 + 0x20]
	0x01D3BEE8 STP X24, X23, [X31 + 0x30]
	0x01D3BEEC STP X22, X21, [X31 + 0x40]
	0x01D3BEF0 STP X20, X19, [X31 + 0x50]
	0x01D3BEF4 ADRP X21, 0x269D000
	0x01D3BEF8 LDRB W8, [X21 + 0x71A]
	0x01D3BEFC MOV X20, X1
	0x01D3BF00 MOV X19, X0
	0x01D3BF04 TBNZ X8, 0x0, 0x1D3BF7C
	0x01D3BF08 ADRP X0, 0x23B8000
	0x01D3BF0C LDR X0, [X0 + 0xF20]
	0x01D3BF10 BL 0x1C16CF4
	0x01D3BF14 ADRP X0, 0x23B8000
	0x01D3BF18 LDR X0, [X0 + 0xF28]
	0x01D3BF1C BL 0x1C16CF4
	0x01D3BF20 ADRP X0, 0x23B8000
	0x01D3BF24 LDR X0, [X0 + 0xE00]
	0x01D3BF28 BL 0x1C16CF4
	0x01D3BF2C ADRP X0, 0x23B8000
	0x01D3BF30 LDR X0, [X0 + 0xF30]
	0x01D3BF34 BL 0x1C16CF4
	0x01D3BF38 ADRP X0, 0x23B8000
	0x01D3BF3C LDR X0, [X0 + 0xF38]
	0x01D3BF40 BL 0x1C16CF4
	0x01D3BF44 ADRP X0, 0x23B8000
	0x01D3BF48 LDR X0, [X0 + 0xE18]
	0x01D3BF4C BL 0x1C16CF4
	0x01D3BF50 ADRP X0, 0x23B8000
	0x01D3BF54 LDR X0, [X0 + 0xF40]
	0x01D3BF58 BL 0x1C16CF4
	0x01D3BF5C ADRP X0, 0x23B8000
	0x01D3BF60 LDR X0, [X0 + 0xF48]
	0x01D3BF64 BL 0x1C16CF4
	0x01D3BF68 ADRP X0, 0x23B8000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x269E000
	006 Move X20, 0x23B9000
	007 Move W8, [X21+1801]
	008 Move X20, [X20+2200]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x23B9000
	015 Move X0, [X0+2200]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1801], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X21, 0x269E000
	025 Move W8, [X21+1931]
	026 Compare W8, 0
	027 JumpIfNotEqual {33}
	028 Move X0, 0x23B9000
	029 Move X0, [X0+2200]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+1931], W8
	033 Move X0, [X20]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X20]
	039 Move X8, [X0+184]
	040 Move X0, X19
	041 Move X1, X31
	042 Move X8, [X8]
	043 Move [X19+32], X8
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Call MonoBehaviour..ctor, X0
	049 Return 

