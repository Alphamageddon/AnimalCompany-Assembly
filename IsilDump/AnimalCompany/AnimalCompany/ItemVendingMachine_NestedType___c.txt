Type: AnimalCompany.ItemVendingMachine/<>c

Method: System.Void .cctor()

Disassembly:
	0x01DA021C LDR W0, [X8]
	0x01DA0220 BL 0x3C35CB8
	0x01DA0224 LDR X8, [X20]
	0x01DA0228 MOV W19, W0
	0x01DA022C MOV X1, X31
	0x01DA0230 LDR X8, [X8 + 0xB8]
	0x01DA0234 LDR W8, [X8 + 0x4]
	0x01DA0238 MOV X0, X8
	0x01DA023C BL 0x3C35CB8
	0x01DA0240 LDR X8, [X20]
	0x01DA0244 MOV W20, W0
	0x01DA0248 MOV X1, X31
	0x01DA024C LDR X8, [X8 + 0xB8]
	0x01DA0250 LDR W8, [X8 + 0x28]
	0x01DA0254 MOV X0, X8
	0x01DA0258 BL 0x3C35CB8
	0x01DA025C ORR W8, W20, W19, 0x0
	0x01DA0260 ORR W0, W8, W0, 0x0
	0x01DA0264 MOV X1, X31
	0x01DA0268 BL 0x3C35CBC
	0x01DA026C LDP X20, X19, [X31 + 0x10]
	0x01DA0270 AND X0, X0, 0x0
	0x01DA0274 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x2639000
	005 Move X20, 0x2358000
	006 Move W8, [X19+2655]
	007 Move X20, [X20+344]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2358000
	013 Move X0, [X0+344]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2655], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x01DA0278 RET
	0x01DA027C SUB X31, X31, 0xB0

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <TryToBuy>b__28_0(Fusion.NetworkRunner runner, Fusion.NetworkObject obj)

Disassembly:
	0x01DA0280 STP X30, X23, [X31 + 0x80]
	0x01DA0284 STP X22, X21, [X31 + 0x90]
	0x01DA0288 STP X20, X19, [X31 + 0xA0]
	0x01DA028C ADRP X21, 0x2638000
	0x01DA0290 ADRP X22, 0x2356000
	0x01DA0294 ADRP X20, 0x2357000
	0x01DA0298 LDRB W8, [X21 + 0xA6E]
	0x01DA029C LDR X22, [X22 + 0xBB8]
	0x01DA02A0 LDR X20, [X20 + 0x250]
	0x01DA02A4 MOV X19, X0
	0x01DA02A8 TBNZ X8, 0x0, 0x1DA02FC
	0x01DA02AC ADRP X0, 0x2357000
	0x01DA02B0 LDR X0, [X0 + 0x258]
	0x01DA02B4 BL 0x1C16CF4
	0x01DA02B8 ADRP X0, 0x2354000
	0x01DA02BC LDR X0, [X0 + 0xE70]
	0x01DA02C0 BL 0x1C16CF4
	0x01DA02C4 ADRP X0, 0x2356000
	0x01DA02C8 LDR X0, [X0 + 0xBB8]
	0x01DA02CC BL 0x1C16CF4
	0x01DA02D0 ADRP X0, 0x2357000
	0x01DA02D4 LDR X0, [X0 + 0x250]
	0x01DA02D8 BL 0x1C16CF4
	0x01DA02DC ADRP X0, 0x2357000
	0x01DA02E0 LDR X0, [X0 + 0x260]
	0x01DA02E4 BL 0x1C16CF4
	0x01DA02E8 ADRP X0, 0x2357000
	0x01DA02EC LDR X0, [X0 + 0x268]
	0x01DA02F0 BL 0x1C16CF4
	0x01DA02F4 MOVZ W8, 0x1
	0x01DA02F8 STRB W8, [X21 + 0xA6E]
	0x01DA02FC LDR X1, [X22]
	0x01DA0300 MOV X0, X19
	0x01DA0304 BL 0x21A3894
	0x01DA0308 STR X0, [X19 + 0xB0]
	0x01DA030C LDR X1, [X20]
	0x01DA0310 MOV X0, X19
	0x01DA0314 BL 0x21A3894
	0x01DA0318 LDR X8, [X19 + 0x80]
	0x01DA031C STR X0, [X19 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2639000
	005 Move W8, [X20+2656]
	006 Move X19, X2
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x2357000
	012 Move X0, [X0+3000]
	013 Call 0x1C17CF4
	014 Move X0, 0x2354000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2656], W8
	019 Compare X19, 0
	020 JumpIfEqual {51}
	021 Move X8, 0x2357000
	022 Move X8, [X8+3000]
	023 Move X20, 0x2354000
	024 Move X0, X19
	025 Move X1, [X8]
	026 Move X20, [X20+1432]
	027 Call 0x21A4894, X0
	028 Move X8, [X20]
	029 Move X19, X0
	030 Move W9, [X8+224]
	031 Compare W9, 0
	032 JumpIfNotEqual {35}
	033 Move X0, X8
	034 Call 0x1C17DFC
	035 Move X0, X19
	036 Move X1, X31
	037 Move X2, X31
	038 Call Object.op_Inequality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {47}
	043 Compare X19, 0
	044 JumpIfEqual {51}
	045 Move W8, 1
	046 Move [X19+328], W8
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Return 
	051 Call 0x1C17F20

