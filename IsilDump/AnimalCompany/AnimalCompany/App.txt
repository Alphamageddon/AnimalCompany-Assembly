Type: AnimalCompany.App

Method: AnimalCompany.AppState get_state()

Disassembly:
	0x01D33998 ADD X0, X8, 0x138
	0x01D3399C LDP X8, X2, [X0]
	0x01D339A0 MOVZ W1, 0x1
	0x01D339A4 MOV X0, X23
	0x01D339A8 MOVZ W20, 0x1
	0x01D339AC BLR X8
	0x01D339B0 ADRP X8, 0x23C0000
	0x01D339B4 LDR X8, [X8 + 0x648]
	0x01D339B8 LDR X8, [X8]
	0x01D339BC LDR X8, [X8 + 0xB8]
	0x01D339C0 STRB W20, [X8 + 0x18]
	0x01D339C4 LDR X8, [X22]
	0x01D339C8 LDR X1, [X19]
	0x01D339CC LDR W20, [X31 + 0xC]
	0x01D339D0 LDRH W9, [X8 + 0x12E]
	0x01D339D4 CBZ X9, 0x1D339F8
	0x01D339D8 LDR X10, [X8 + 0xB0]
	0x01D339DC ADD X10, X10, 0x8
	0x01D339E0 LDUR X11, [X10 - 0x8]
	0x01D339E4 CMP X11, X1
	0x01D339E8 B.EQ 0x1D33A08
	0x01D339EC SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x26A6000
	005 Move X19, 0x23C1000
	006 Move W8, [X20+1734]
	007 Move X19, [X19+1608]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x23C1000
	013 Move X0, [X0+1608]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1734], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void set_state(AnimalCompany.AppState value)

Disassembly:
	0x01D339F0 ADD X10, X10, 0x10
	0x01D339F4 B.NE 0x1D339E0
	0x01D339F8 MOV X0, X22
	0x01D339FC MOV W2, W31
	0x01D33A00 BL 0x1C5C788
	0x01D33A04 B 0x1D33A14
	0x01D33A08 LDRSW X9, [X10]
	0x01D33A0C ADD X8, X8, X9, 0x4, LSL
	0x01D33A10 ADD X0, X8, 0x138
	0x01D33A14 LDP X8, X1, [X0]
	0x01D33A18 MOV X0, X22
	0x01D33A1C BLR X8
	0x01D33A20 MOV W23, W0
	0x01D33A24 CMP W0, 0x1
	0x01D33A28 STR W24, [X31 + 0x8]
	0x01D33A2C STR W21, [X31 + 0x10]
	0x01D33A30 B.LT 0x1D34364
	0x01D33A34 STR W31, [X31 + 0x14]
	0x01D33A38 ADRP X21, 0x23C0000
	0x01D33A3C LDR X21, [X21 + 0x748]
	0x01D33A40 MOV W24, W31
	0x01D33A44 MOVZ W19, 0x1
	0x01D33A48 LDR X8, [X22]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x26A6000
	006 Move X20, 0x23C1000
	007 Move W8, [X21+1735]
	008 Move X20, [X20+1608]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x23C1000
	015 Move X0, [X0+1608]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1735], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move [X8], X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

Method: AnimalCompany.AppPlatform get_platform()

Disassembly:
	0x01D33A4C LDR X1, [X21]
	0x01D33A50 LDRH W9, [X8 + 0x12E]
	0x01D33A54 CBZ X9, 0x1D33A78
	0x01D33A58 LDR X10, [X8 + 0xB0]
	0x01D33A5C ADD X10, X10, 0x8
	0x01D33A60 LDUR X11, [X10 - 0x8]
	0x01D33A64 CMP X11, X1
	0x01D33A68 B.EQ 0x1D33A88
	0x01D33A6C SUBS X9, X9, 0x1
	0x01D33A70 ADD X10, X10, 0x10
	0x01D33A74 B.NE 0x1D33A60
	0x01D33A78 MOV X0, X22
	0x01D33A7C MOV W2, W31
	0x01D33A80 BL 0x1C5C788
	0x01D33A84 B 0x1D33A94
	0x01D33A88 LDRSW X9, [X10]
	0x01D33A8C ADD X8, X8, X9, 0x4, LSL
	0x01D33A90 ADD X0, X8, 0x138
	0x01D33A94 LDP X8, X2, [X0]
	0x01D33A98 MOV X0, X22
	0x01D33A9C MOV W1, W24
	0x01D33AA0 BLR X8
	0x01D33AA4 MOV X28, X0
	0x01D33AA8 CBZ X0, 0x1D340F0
	0x01D33AAC LDR X8, [X28]
	0x01D33AB0 LDP X9, X1, [X8 + 0x178]
	0x01D33AB4 MOV X0, X28
	0x01D33AB8 BLR X9
	0x01D33ABC ADRP X9, 0x23C0000
	0x01D33AC0 LDR X9, [X9 + 0x648]
	0x01D33AC4 MOV W8, W0
	0x01D33AC8 AND W19, W19, W8, 0x0
	0x01D33ACC LDR X0, [X9]
	0x01D33AD0 LDR W9, [X0 + 0xE0]
	0x01D33AD4 CBNZ W9, 0x1D33ADC
	0x01D33AD8 BL 0x1C16DFC
	0x01D33ADC ADRP X8, 0x26A5000
	0x01D33AE0 LDRB W8, [X8 + 0x787]
	0x01D33AE4 CBNZ W8, 0x1D33B00
	0x01D33AE8 ADRP X0, 0x23C0000
	0x01D33AEC LDR X0, [X0 + 0x648]
	0x01D33AF0 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x26A6000
	005 Move X19, 0x23C1000
	006 Move W8, [X20+1736]
	007 Move X19, [X19+1608]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x23C1000
	013 Move X0, [X0+1608]
	014 Call 0x1C17CF4
	015 Move X0, 0x23C1000
	016 Move X0, [X0+1616]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1736], W8
	020 Move X0, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X20, 0x26A6000
	026 Move W8, [X20+1927]
	027 Compare W8, 0
	028 JumpIfNotEqual {34}
	029 Move X0, 0x23C1000
	030 Move X0, [X0+1608]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+1927], W8
	034 Move X0, [X19]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X19]
	040 Move X8, [X0+184]
	041 Move X8, [X8]
	042 Compare X8, 0
	043 JumpIfEqual {52}
	044 Move X8, [X8+104]
	045 Compare X8, 0
	046 JumpIfEqual {52}
	047 Move W0, [X8+76]
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Return X0
	052 Call 0x1C17F20

Method: AnimalCompany.API.AnimalCompanyAPI get_api()

Disassembly:
	0x01D33AF4 MOVZ W8, 0x1
	0x01D33AF8 ADRP X9, 0x26A5000
	0x01D33AFC STRB W8, [X9 + 0x787]
	0x01D33B00 ADRP X8, 0x23C0000
	0x01D33B04 LDR X8, [X8 + 0x648]
	0x01D33B08 LDR X0, [X8]
	0x01D33B0C LDR W8, [X0 + 0xE0]
	0x01D33B10 CBNZ W8, 0x1D33B24
	0x01D33B14 BL 0x1C16DFC
	0x01D33B18 ADRP X8, 0x23C0000
	0x01D33B1C LDR X8, [X8 + 0x648]
	0x01D33B20 LDR X0, [X8]
	0x01D33B24 LDR X8, [X0 + 0xB8]
	0x01D33B28 LDR X9, [X28]
	0x01D33B2C LDR X1, [X8]
	0x01D33B30 LDP X8, X2, [X9 + 0x1A8]
	0x01D33B34 MOV X0, X28
	0x01D33B38 BLR X8
	0x01D33B3C TBZ X26, 0x0, 0x1D33B48
	0x01D33B40 MOVZ W26, 0x1
	0x01D33B44 B 0x1D340F0
	0x01D33B48 LDR X8, [X28]
	0x01D33B4C LDP X9, X1, [X8 + 0x178]
	0x01D33B50 MOV X0, X28
	0x01D33B54 BLR X9
	0x01D33B58 TBNZ X0, 0x0, 0x1D340EC
	0x01D33B5C ADRP X8, 0x23C0000
	0x01D33B60 LDR X8, [X8 + 0x648]
	0x01D33B64 LDR X0, [X8]
	0x01D33B68 LDR W8, [X0 + 0xE0]
	0x01D33B6C CBNZ W8, 0x1D33B80
	0x01D33B70 BL 0x1C16DFC
	0x01D33B74 ADRP X8, 0x23C0000
	0x01D33B78 LDR X8, [X8 + 0x648]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x26A6000
	005 Move X19, 0x23C1000
	006 Move W8, [X20+1737]
	007 Move X19, [X19+1624]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x23C1000
	013 Move X0, [X0+1624]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1737], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, 0x26A6000
	023 Move W8, [X20+1928]
	024 Compare W8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, 0x23C1000
	027 Move X0, [X0+1624]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+1928], W8
	031 Move X0, [X19]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X19]
	037 Move X8, [X0+184]
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X0, [X8]
	041 Move X30, [X31+32]
	042 Return X0

Method: Nakama.ISession get_apiSession()

Disassembly:
	0x01D33B7C LDR X0, [X8]
	0x01D33B80 LDR X8, [X0 + 0xB8]
	0x01D33B84 LDR X0, [X8 + 0x70]
	0x01D33B88 CBZ X0, 0x1D34154
	0x01D33B8C MOV X1, X31
	0x01D33B90 BL 0x323260C
	0x01D33B94 MOVZ W8, 0x2327
	0x01D33B98 CMP W0, W8
	0x01D33B9C B.GT 0x1D340EC
	0x01D33BA0 ADRP X8, 0x23C0000
	0x01D33BA4 LDR X8, [X8 + 0x648]
	0x01D33BA8 LDR X0, [X8]
	0x01D33BAC LDR W8, [X0 + 0xE0]
	0x01D33BB0 CBNZ W8, 0x1D33BC4
	0x01D33BB4 BL 0x1C16DFC
	0x01D33BB8 ADRP X8, 0x23C0000
	0x01D33BBC LDR X8, [X8 + 0x648]
	0x01D33BC0 LDR X0, [X8]
	0x01D33BC4 LDR X9, [X0 + 0xB8]
	0x01D33BC8 LDR X29, [X9 + 0x10]
	0x01D33BCC CBZ X29, 0x1D34160
	0x01D33BD0 LDR X8, [X29]
	0x01D33BD4 ADRP X10, 0x23C0000
	0x01D33BD8 LDR X25, [X9 + 0x70]
	0x01D33BDC LDRH W9, [X8 + 0x12E]
	0x01D33BE0 LDR X10, [X10 + 0x6A8]
	0x01D33BE4 LDR X1, [X10]
	0x01D33BE8 CBZ X9, 0x1D33C0C
	0x01D33BEC LDR X10, [X8 + 0xB0]
	0x01D33BF0 ADD X10, X10, 0x8
	0x01D33BF4 LDUR X11, [X10 - 0x8]
	0x01D33BF8 CMP X11, X1
	0x01D33BFC B.EQ 0x1D33C1C
	0x01D33C00 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x26A6000
	005 Move X19, 0x23C1000
	006 Move W8, [X20+1738]
	007 Move X19, [X19+1624]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x23C1000
	013 Move X0, [X0+1624]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1738], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, 0x26A6000
	023 Move W8, [X20+1929]
	024 Compare W8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, 0x23C1000
	027 Move X0, [X0+1624]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+1929], W8
	031 Move X0, [X19]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X19]
	037 Move X8, [X0+184]
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X0, [X8+32]
	041 Move X30, [X31+32]
	042 Return X0

Method: System.Collections.Generic.IEnumerator`1<SpatialSys.CommandLib.Command> get_runningCommands()

Disassembly:
	0x01D33C04 ADD X10, X10, 0x10
	0x01D33C08 B.NE 0x1D33BF4
	0x01D33C0C MOVZ W2, 0x2
	0x01D33C10 MOV X0, X29
	0x01D33C14 BL 0x1C5C788
	0x01D33C18 B 0x1D33C2C
	0x01D33C1C LDR W9, [X10]
	0x01D33C20 ADD W9, W9, 0x2
	0x01D33C24 ADD X8, X8, W9, 0x4, SXTW
	0x01D33C28 ADD X0, X8, 0x138
	0x01D33C2C LDP X8, X1, [X0]
	0x01D33C30 MOV X0, X29
	0x01D33C34 BLR X8
	0x01D33C38 CBZ X0, 0x1D3416C
	0x01D33C3C ADRP X9, 0x23C0000
	0x01D33C40 LDR W8, [X0 + 0x18]
	0x01D33C44 LDR X9, [X9 + 0x758]
	0x01D33C48 LDR X0, [X9]
	0x01D33C4C LDR W9, [X31 + 0x14]
	0x01D33C50 SUB W8, W8, W9
	0x01D33C54 STR W8, [X31 + 0x18]
	0x01D33C58 ADD X1, X31, 0x18
	0x01D33C5C BL 0x1C16E04
	0x01D33C60 ADRP X8, 0x23C0000
	0x01D33C64 LDR X8, [X8 + 0x7A8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x26A6000
	005 Move X19, 0x23C1000
	006 Move W8, [X20+1739]
	007 Move X19, [X19+1608]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x23C1000
	013 Move X0, [X0+1608]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1739], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X0, [X8+80]
	025 Compare X0, 0
	026 JumpIfEqual {33}
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X1, X31
	030 Move X30, [X31+32]
	031 Call CommandScheduler.GetEnumerator, X0
	032 Return X0
	033 Call 0x1C17F20

Method: System.Boolean get_isCurrentlyNotifyingObservers()

Disassembly:
	0x01D33C68 MOV X2, X0
	0x01D33C6C LDR X0, [X8]
	0x01D33C70 MOV X1, X28
	0x01D33C74 MOV X3, X31
	0x01D33C78 BL 0x3227BD4
	0x01D33C7C MOV X1, X0
	0x01D33C80 CBZ X25, 0x1D34174
	0x01D33C84 MOV X0, X25
	0x01D33C88 MOV X2, X31
	0x01D33C8C BL 0x32333E0
	0x01D33C90 ADRP X8, 0x23C0000
	0x01D33C94 LDR X8, [X8 + 0x648]
	0x01D33C98 LDR X8, [X8]
	0x01D33C9C LDR X8, [X8 + 0xB8]
	0x01D33CA0 LDR X0, [X8 + 0x70]
	0x01D33CA4 CBZ X0, 0x1D3417C
	0x01D33CA8 MOV X1, X31
	0x01D33CAC BL 0x323260C
	0x01D33CB0 MOVZ W8, 0x2329
	0x01D33CB4 CMP W0, W8
	0x01D33CB8 B.LT 0x1D33D00
	0x01D33CBC ADRP X8, 0x23C0000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x26A6000
	005 Move X19, 0x23C1000
	006 Move W8, [X20+1740]
	007 Move X19, [X19+1608]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x23C1000
	013 Move X0, [X0+1608]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1740], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, [X8+26]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void Awake()

Disassembly:
	0x01D33CC0 LDR X8, [X8 + 0x648]
	0x01D33CC4 LDR X0, [X8]
	0x01D33CC8 LDR W8, [X0 + 0xE0]
	0x01D33CCC CBNZ W8, 0x1D33CE0
	0x01D33CD0 BL 0x1C16DFC
	0x01D33CD4 ADRP X8, 0x23C0000
	0x01D33CD8 LDR X8, [X8 + 0x648]
	0x01D33CDC LDR X0, [X8]
	0x01D33CE0 LDR X8, [X0 + 0xB8]
	0x01D33CE4 LDR X0, [X8 + 0x70]
	0x01D33CE8 CBZ X0, 0x1D341A8
	0x01D33CEC ADRP X8, 0x23C0000
	0x01D33CF0 LDR X8, [X8 + 0x7A0]
	0x01D33CF4 LDR X1, [X8]
	0x01D33CF8 MOV X2, X31
	0x01D33CFC BL 0x32333E0
	0x01D33D00 CBZ W20, 0x1D3404C
	0x01D33D04 ADRP X8, 0x23C0000
	0x01D33D08 LDR X8, [X8 + 0x648]
	0x01D33D0C LDR X0, [X8]
	0x01D33D10 LDR W8, [X0 + 0xE0]
	0x01D33D14 CBNZ W8, 0x1D33D28
	0x01D33D18 BL 0x1C16DFC
	0x01D33D1C ADRP X8, 0x23C0000
	0x01D33D20 LDR X8, [X8 + 0x648]
	0x01D33D24 LDR X0, [X8]
	0x01D33D28 LDR X8, [X0 + 0xB8]
	0x01D33D2C LDR X0, [X8 + 0x70]
	0x01D33D30 CBZ X0, 0x1D3419C
	0x01D33D34 MOV X1, X31
	0x01D33D38 BL 0x323260C
	0x01D33D3C LDR W29, [X31 + 0x14]
	0x01D33D40 MOVZ W8, 0x2327
	0x01D33D44 CMP W0, W8
	0x01D33D48 B.GT 0x1D3404C
	0x01D33D4C ADRP X8, 0x23C0000
	0x01D33D50 LDR X8, [X8 + 0x648]
	0x01D33D54 LDR X0, [X8]
	0x01D33D58 LDR W8, [X0 + 0xE0]
	0x01D33D5C CBNZ W8, 0x1D33D70
	0x01D33D60 BL 0x1C16DFC
	0x01D33D64 ADRP X8, 0x23C0000
	0x01D33D68 LDR X8, [X8 + 0x648]
	0x01D33D6C LDR X0, [X8]
	0x01D33D70 LDR X8, [X0 + 0xB8]
	0x01D33D74 LDR X25, [X8 + 0x10]
	0x01D33D78 CBZ X25, 0x1D34100
	0x01D33D7C LDR X8, [X25]
	0x01D33D80 ADRP X10, 0x23C0000
	0x01D33D84 LDRH W9, [X8 + 0x12E]
	0x01D33D88 LDR X10, [X10 + 0x6A8]
	0x01D33D8C LDR X1, [X10]
	0x01D33D90 CBZ X9, 0x1D33DB4
	0x01D33D94 LDR X10, [X8 + 0xB0]
	0x01D33D98 ADD X10, X10, 0x8
	0x01D33D9C LDUR X11, [X10 - 0x8]
	0x01D33DA0 CMP X11, X1
	0x01D33DA4 B.EQ 0x1D33DC4
	0x01D33DA8 SUBS X9, X9, 0x1
	0x01D33DAC ADD X10, X10, 0x10
	0x01D33DB0 B.NE 0x1D33D9C
	0x01D33DB4 MOVZ W2, 0x2
	0x01D33DB8 MOV X0, X25
	0x01D33DBC BL 0x1C5C788
	0x01D33DC0 B 0x1D33DD4
	0x01D33DC4 LDR W9, [X10]
	0x01D33DC8 ADD W9, W9, 0x2
	0x01D33DCC ADD X8, X8, W9, 0x4, SXTW
	0x01D33DD0 ADD X0, X8, 0x138
	0x01D33DD4 LDP X8, X1, [X0]
	0x01D33DD8 MOV X0, X25
	0x01D33DDC BLR X8
	0x01D33DE0 CBZ X0, 0x1D3410C
	0x01D33DE4 LDR W8, [X0 + 0x18]
	0x01D33DE8 CMP W29, W8
	0x01D33DEC B.GE 0x1D3404C
	0x01D33DF0 ADRP X8, 0x23C0000
	0x01D33DF4 LDR X8, [X8 + 0x648]
	0x01D33DF8 LDR X0, [X8]
	0x01D33DFC LDR W8, [X0 + 0xE0]
	0x01D33E00 CBNZ W8, 0x1D33E14
	0x01D33E04 BL 0x1C16DFC
	0x01D33E08 ADRP X8, 0x23C0000
	0x01D33E0C LDR X8, [X8 + 0x648]
	0x01D33E10 LDR X0, [X8]
	0x01D33E14 LDR X8, [X0 + 0xB8]
	0x01D33E18 LDR X25, [X8 + 0x10]
	0x01D33E1C CBZ X25, 0x1D34130
	0x01D33E20 LDR X8, [X25]
	0x01D33E24 ADRP X10, 0x23C0000
	0x01D33E28 LDRH W9, [X8 + 0x12E]
	0x01D33E2C LDR X10, [X10 + 0x6A8]
	0x01D33E30 LDR X1, [X10]
	0x01D33E34 CBZ X9, 0x1D33E58
	0x01D33E38 LDR X10, [X8 + 0xB0]
	0x01D33E3C ADD X10, X10, 0x8
	0x01D33E40 LDUR X11, [X10 - 0x8]
	0x01D33E44 CMP X11, X1
	0x01D33E48 B.EQ 0x1D33E68
	0x01D33E4C SUBS X9, X9, 0x1
	0x01D33E50 ADD X10, X10, 0x10
	0x01D33E54 B.NE 0x1D33E40
	0x01D33E58 MOVZ W2, 0x2
	0x01D33E5C MOV X0, X25
	0x01D33E60 BL 0x1C5C788
	0x01D33E64 B 0x1D33E78
	0x01D33E68 LDR W9, [X10]
	0x01D33E6C ADD W9, W9, 0x2
	0x01D33E70 ADD X8, X8, W9, 0x4, SXTW
	0x01D33E74 ADD X0, X8, 0x138
	0x01D33E78 LDP X8, X1, [X0]
	0x01D33E7C MOV X0, X25
	0x01D33E80 BLR X8
	0x01D33E84 CBZ X0, 0x1D34118
	0x01D33E88 ADRP X8, 0x23C0000
	0x01D33E8C LDR X8, [X8 + 0x780]
	0x01D33E90 LDR X2, [X8]
	0x01D33E94 MOV W1, W29
	0x01D33E98 BL 0x301BCCC
	0x01D33E9C MOV X25, X0
	0x01D33EA0 CBZ X0, 0x1D34124
	0x01D33EA4 LDR X8, [X25]
	0x01D33EA8 ADRP X10, 0x23C0000
	0x01D33EAC LDRH W9, [X8 + 0x12E]
	0x01D33EB0 LDR X10, [X10 + 0x750]
	0x01D33EB4 LDR X1, [X10]
	0x01D33EB8 CBZ X9, 0x1D33EDC
	0x01D33EBC LDR X10, [X8 + 0xB0]
	0x01D33EC0 ADD X10, X10, 0x8
	0x01D33EC4 LDUR X11, [X10 - 0x8]
	0x01D33EC8 CMP X11, X1
	0x01D33ECC B.EQ 0x1D33EEC
	0x01D33ED0 SUBS X9, X9, 0x1
	0x01D33ED4 ADD X10, X10, 0x10
	0x01D33ED8 B.NE 0x1D33EC4
	0x01D33EDC MOVZ W2, 0x2
	0x01D33EE0 MOV X0, X25
	0x01D33EE4 BL 0x1C5C788
	0x01D33EE8 B 0x1D33EFC
	0x01D33EEC LDR W9, [X10]
	0x01D33EF0 ADD W9, W9, 0x2
	0x01D33EF4 ADD X8, X8, W9, 0x4, SXTW
	0x01D33EF8 ADD X0, X8, 0x138
	0x01D33EFC LDP X8, X1, [X0]
	0x01D33F00 MOV X0, X25
	0x01D33F04 BLR X8
	0x01D33F08 AND W8, W0, 0xFF
	0x01D33F0C CMP W8, 0x6
	0x01D33F10 B.EQ 0x1D34000
	0x01D33F14 ADRP X8, 0x23C0000
	0x01D33F18 LDR X8, [X8 + 0x648]
	0x01D33F1C LDR X0, [X8]
	0x01D33F20 LDR W8, [X0 + 0xE0]
	0x01D33F24 CBNZ W8, 0x1D33F38
	0x01D33F28 BL 0x1C16DFC
	0x01D33F2C ADRP X8, 0x23C0000
	0x01D33F30 LDR X8, [X8 + 0x648]
	0x01D33F34 LDR X0, [X8]
	0x01D33F38 LDR X8, [X0 + 0xB8]
	0x01D33F3C LDR X0, [X8 + 0x70]
	0x01D33F40 CBZ X0, 0x1D3413C
	0x01D33F44 ADRP X8, 0x23C0000
	0x01D33F48 LDR X8, [X8 + 0x7B8]
	0x01D33F4C LDR X1, [X8]
	0x01D33F50 MOV X2, X31
	0x01D33F54 BL 0x32333E0
	0x01D33F58 ADRP X8, 0x23C0000
	0x01D33F5C LDR X8, [X8 + 0x648]
	0x01D33F60 LDR X9, [X8]
	0x01D33F64 LDR X8, [X25]
	0x01D33F68 LDR X10, [X9 + 0xB8]
	0x01D33F6C LDRH W9, [X8 + 0x12E]
	0x01D33F70 LDR X26, [X10 + 0x70]
	0x01D33F74 ADRP X10, 0x23C0000
	0x01D33F78 LDR X10, [X10 + 0x750]
	0x01D33F7C LDR X1, [X10]
	0x01D33F80 CBZ X9, 0x1D33FA4
	0x01D33F84 LDR X10, [X8 + 0xB0]
	0x01D33F88 ADD X10, X10, 0x8
	0x01D33F8C LDUR X11, [X10 - 0x8]
	0x01D33F90 CMP X11, X1
	0x01D33F94 B.EQ 0x1D33FB4
	0x01D33F98 SUBS X9, X9, 0x1
	0x01D33F9C ADD X10, X10, 0x10
	0x01D33FA0 B.NE 0x1D33F8C
	0x01D33FA4 MOVZ W2, 0x9
	0x01D33FA8 MOV X0, X25
	0x01D33FAC BL 0x1C5C788
	0x01D33FB0 B 0x1D33FC4
	0x01D33FB4 LDR W9, [X10]
	0x01D33FB8 ADD W9, W9, 0x9
	0x01D33FBC ADD X8, X8, W9, 0x4, SXTW
	0x01D33FC0 ADD X0, X8, 0x138
	0x01D33FC4 LDP X8, X2, [X0]
	0x01D33FC8 MOV X0, X25
	0x01D33FCC MOV X1, X26
	0x01D33FD0 BLR X8
	0x01D33FD4 ADRP X8, 0x23C0000
	0x01D33FD8 LDR X8, [X8 + 0x648]
	0x01D33FDC LDR X8, [X8]
	0x01D33FE0 LDR X8, [X8 + 0xB8]
	0x01D33FE4 LDR X0, [X8 + 0x70]
	0x01D33FE8 CBZ X0, 0x1D34148
	0x01D33FEC MOV X1, X31
	0x01D33FF0 BL 0x323260C
	0x01D33FF4 MOVZ W8, 0x2329
	0x01D33FF8 CMP W0, W8
	0x01D33FFC B.GE 0x1D34008
	0x01D34000 ADD W29, W29, 0x1
	0x01D34004 B 0x1D33D4C
	0x01D34008 ADRP X8, 0x23BF000
	0x01D3400C LDR X8, [X8 + 0x648]
	0x01D34010 LDR X0, [X8]
	0x01D34014 LDR W8, [X0 + 0xE0]
	0x01D34018 CBNZ W8, 0x1D3402C
	0x01D3401C BL 0x1C16DFC
	0x01D34020 ADRP X8, 0x23BF000
	0x01D34024 LDR X8, [X8 + 0x648]
	0x01D34028 LDR X0, [X8]
	0x01D3402C LDR X8, [X0 + 0xB8]
	0x01D34030 LDR X0, [X8 + 0x70]
	0x01D34034 CBZ X0, 0x1D341B4
	0x01D34038 ADRP X8, 0x23BF000
	0x01D3403C LDR X8, [X8 + 0x7A0]
	0x01D34040 LDR X1, [X8]
	0x01D34044 MOV X2, X31
	0x01D34048 BL 0x32333E0
	0x01D3404C ADRP X8, 0x23BF000
	0x01D34050 LDR X8, [X8 + 0x648]
	0x01D34054 LDR X0, [X8]
	0x01D34058 LDR W8, [X0 + 0xE0]
	0x01D3405C CBNZ W8, 0x1D34070
	0x01D34060 BL 0x1C16DFC
	0x01D34064 ADRP X8, 0x23BF000
	0x01D34068 LDR X8, [X8 + 0x648]
	0x01D3406C LDR X0, [X8]
	0x01D34070 LDR X8, [X0 + 0xB8]
	0x01D34074 LDR X25, [X8 + 0x10]
	0x01D34078 CBZ X25, 0x1D34188
	0x01D3407C LDR X8, [X25]
	0x01D34080 ADRP X10, 0x23BF000
	0x01D34084 LDRH W9, [X8 + 0x12E]
	0x01D34088 LDR X10, [X10 + 0x6A8]
	0x01D3408C LDR X1, [X10]
	0x01D34090 CBZ X9, 0x1D340B4
	0x01D34094 LDR X10, [X8 + 0xB0]
	0x01D34098 ADD X10, X10, 0x8
	0x01D3409C LDUR X11, [X10 - 0x8]
	0x01D340A0 CMP X11, X1
	0x01D340A4 B.EQ 0x1D340C4
	0x01D340A8 SUBS X9, X9, 0x1
	0x01D340AC ADD X10, X10, 0x10
	0x01D340B0 B.NE 0x1D3409C
	0x01D340B4 MOVZ W2, 0x2
	0x01D340B8 MOV X0, X25
	0x01D340BC BL 0x1C5C788
	0x01D340C0 B 0x1D340D4
	0x01D340C4 LDR W9, [X10]
	0x01D340C8 ADD W9, W9, 0x2
	0x01D340CC ADD X8, X8, W9, 0x4, SXTW
	0x01D340D0 ADD X0, X8, 0x138
	0x01D340D4 LDP X8, X1, [X0]
	0x01D340D8 MOV X0, X25
	0x01D340DC BLR X8
	0x01D340E0 CBZ X0, 0x1D34194
	0x01D340E4 LDR W8, [X0 + 0x18]
	0x01D340E8 STR W8, [X31 + 0x14]
	0x01D340EC MOV W26, W31
	0x01D340F0 ADD W24, W24, 0x1
	0x01D340F4 CMP W24, W23
	0x01D340F8 B.NE 0x1D33A48
	0x01D340FC B 0x1D34368
	0x01D34100 STR W27, [X31 + 0x4]
	0x01D34104 BL 0x1C16F20
	0x01D34108 B 0x1D34BF4
	0x01D3410C STR W27, [X31 + 0x4]
	0x01D34110 BL 0x1C16F20
	0x01D34114 B 0x1D34BF4
	0x01D34118 STR W27, [X31 + 0x4]
	0x01D3411C BL 0x1C16F20
	0x01D34120 B 0x1D34BF4
	0x01D34124 STR W27, [X31 + 0x4]
	0x01D34128 BL 0x1C16F20
	0x01D3412C B 0x1D34BF4
	0x01D34130 STR W27, [X31 + 0x4]
	0x01D34134 BL 0x1C16F20
	0x01D34138 B 0x1D34BF4
	0x01D3413C STR W27, [X31 + 0x4]
	0x01D34140 BL 0x1C16F20
	0x01D34144 B 0x1D34BF4
	0x01D34148 STR W27, [X31 + 0x4]
	0x01D3414C BL 0x1C16F20
	0x01D34150 B 0x1D34BF4
	0x01D34154 STR W27, [X31 + 0x4]
	0x01D34158 BL 0x1C16F20
	0x01D3415C B 0x1D34BF4
	0x01D34160 STR W27, [X31 + 0x4]
	0x01D34164 BL 0x1C16F20

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x26A6000
	012 Move X22, 0x23C1000
	013 Move W8, [X20+1741]
	014 Move X22, [X22+1608]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {67}
	020 Move X0, 0x23C1000
	021 Move X0, [X0+1632]
	022 Call 0x1C17CF4
	023 Move X0, 0x23C1000
	024 Move X0, [X0+1640]
	025 Call 0x1C17CF4
	026 Move X0, 0x23C1000
	027 Move X0, [X0+1648]
	028 Call 0x1C17CF4
	029 Move X0, 0x23C1000
	030 Move X0, [X0+1608]
	031 Call 0x1C17CF4
	032 Move X0, 0x23C1000
	033 Move X0, [X0+1656]
	034 Call 0x1C17CF4
	035 Move X0, 0x23C1000
	036 Move X0, [X0+1664]
	037 Call 0x1C17CF4
	038 Move X0, 0x23C1000
	039 Move X0, [X0+1672]
	040 Call 0x1C17CF4
	041 Move X0, 0x23C1000
	042 Move X0, [X0+1680]
	043 Call 0x1C17CF4
	044 Move X0, 0x23C1000
	045 Move X0, [X0+1688]
	046 Call 0x1C17CF4
	047 Move X0, 0x23C1000
	048 Move X0, [X0+1696]
	049 Call 0x1C17CF4
	050 Move X0, 0x23C1000
	051 Move X0, [X0+1704]
	052 Call 0x1C17CF4
	053 Move X0, 0x23C1000
	054 Move X0, [X0+1712]
	055 Call 0x1C17CF4
	056 Move X0, 0x23C1000
	057 Move X0, [X0+1720]
	058 Call 0x1C17CF4
	059 Move X0, 0x23C1000
	060 Move X0, [X0+1432]
	061 Call 0x1C17CF4
	062 Move X0, 0x23C1000
	063 Move X0, [X0+1728]
	064 Call 0x1C17CF4
	065 Move W8, 1
	066 Move [X20+1741], W8
	067 Move X0, [X22]
	068 Move X20, 0x23C1000
	069 Move W8, [X0+224]
	070 Move X20, [X20+1432]
	071 Compare W8, 0
	072 JumpIfNotEqual {75}
	073 Call 0x1C17DFC
	074 Move X0, [X22]
	075 Move X8, [X20]
	076 Move X9, [X0+184]
	077 Move W10, [X8+224]
	078 Move X20, [X9+8]
	079 Compare W10, 0
	080 JumpIfNotEqual {83}
	081 Move X0, X8
	082 Call 0x1C17DFC
	083 Move X0, X20
	084 Move X1, X31
	085 Move X2, X31
	086 Call Object.op_Inequality, X0, X1
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {296}
	091 Move X0, [X22]
	092 Move X20, 0x23C1000
	093 Move X21, 0x23C1000
	094 Move W8, [X0+224]
	095 Move X20, [X20+1640]
	096 Move X21, [X21+1728]
	097 Compare W8, 0
	098 JumpIfNotEqual {101}
	099 Call 0x1C17DFC
	100 Move X0, [X22]
	101 Move X8, [X0+184]
	102 Move [X8+8], X19
	103 Move X0, [X21]
	104 Move X19, [X20]
	105 Move X20, 0x23C1000
	106 Move X21, 0x23C1000
	107 Move W8, [X0+224]
	108 Move X20, [X20+1656]
	109 Move X21, [X21+1632]
	110 Compare W8, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 Move X0, X19
	114 Move X1, X31
	115 Call Type.GetTypeFromHandle, X0
	116 Move X8, [X20]
	117 Move X20, X0
	118 Move X0, X8
	119 Call 0x1C17F10
	120 Move X1, X20
	121 Move X2, X31
	122 Move X19, X0
	123 Call AutoRegisteredTypeIDManifest..ctor, X0, X1
	124 Move X0, [X21]
	125 Call 0x1C17F10
	126 Move X1, X19
	127 Move X20, X0
	128 Call AppStateObservationContext..ctor, X0, X1
	129 Move X8, [X22]
	130 Move X8, [X8+184]
	131 Move [X8+16], X20
	132 Compare X20, 0
	133 JumpIfEqual {295}
	134 Move X23, 0x23C1000
	135 Move X8, [X20]
	136 Move X23, [X23+1704]
	137 Move X24, 0x23C1000
	138 NotImplemented "Instruction LDRH not yet implemented."
	139 Move X1, [X23]
	140 Move X24, [X24+1648]
	141 Compare X9, 0
	142 JumpIfEqual {149}
	143 Move X10, [X8+176]
	144 Add X10, X10, 8
	145 NotImplemented "Instruction LDUR not yet implemented."
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Subtract X9, X9, 1
	148 Add X10, X10, 16
	149 Move W2, 1
	150 Move X0, X20
	151 Call 0x1C5D788
	152 Move W9, [X10]
	153 Add W9, W9, 1
	154 Add X8, X8, W9
	155 Add X0, X8, 312
	156 Move X8, [X0]
	157 Move X2, [X0+8]
	158 Move W1, 1
	159 Move X0, X20
	160 Move W25, 1
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Move X8, [X22]
	163 Move X0, [X24]
	164 Move X8, [X8+184]
	165 Move X21, [X8+16]
	166 Call 0x1C17F10
	167 Move X1, X21
	168 Move X2, X19
	169 Move X3, X31
	170 Move X4, X31
	171 Move X20, X0
	172 Call StateRoot..ctor, X0, X1, X2, X3
	173 Move X19, 0x26A6000
	174 Move W8, [X19+1930]
	175 Compare W8, 0
	176 JumpIfNotEqual {181}
	177 Move X0, 0x23C1000
	178 Move X0, [X0+1608]
	179 Call 0x1C17CF4
	180 Move [X19+1930], W25
	181 Move X0, [X22]
	182 Move W8, [X0+224]
	183 Compare W8, 0
	184 JumpIfNotEqual {187}
	185 Call 0x1C17DFC
	186 Move X0, [X22]
	187 Move X8, [X0+184]
	188 Move [X8], X20
	189 Move X8, [X22]
	190 Move X8, [X8+184]
	191 Move X19, [X8+16]
	192 Compare X19, 0
	193 JumpIfEqual {295}
	194 Move X27, 0x23C1000
	195 Move X27, [X27+1664]
	196 Move X8, [X19]
	197 Move X26, 0x23C1000
	198 Move X25, 0x23C1000
	199 Move X21, 0x23C1000
	200 Move X26, [X26+1696]
	201 Move X25, [X25+1672]
	202 Move X21, [X21+1720]
	203 Move X1, [X23]
	204 Move X20, 0x23C1000
	205 Move X24, 0x23C1000
	206 Move X23, 0x23C1000
	207 NotImplemented "Instruction LDRH not yet implemented."
	208 Move X20, [X20+1712]
	209 Move X24, [X24+1688]
	210 Move X23, [X23+1680]
	211 Compare X9, 0
	212 JumpIfEqual {219}
	213 Move X10, [X8+176]
	214 Add X10, X10, 8
	215 NotImplemented "Instruction LDUR not yet implemented."
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Subtract X9, X9, 1
	218 Add X10, X10, 16
	219 Move W2, 1
	220 Move X0, X19
	221 Call 0x1C5D788
	222 Move W9, [X10]
	223 Add W9, W9, 1
	224 Add X8, X8, W9
	225 Add X0, X8, 312
	226 Move X8, [X0]
	227 Move X2, [X0+8]
	228 Move X0, X19
	229 Move W1, W31
	230 NotImplemented "Instruction BLR not yet implemented."
	231 Move X0, [X27]
	232 Call 0x1C17F10
	233 Move X1, X31
	234 Move X19, X0
	235 Call CommandScheduler..ctor, X0
	236 Move X8, [X22]
	237 Move X8, [X8+184]
	238 Move [X8+80], X19
	239 Move X0, [X26]
	240 Call 0x1C17F10
	241 Move X1, [X25]
	242 Move X19, X0
	243 Call ConcurrentQueue`1<Object>..ctor, X0
	244 Move X8, [X22]
	245 Move X8, [X8+184]
	246 Move [X8+64], X19
	247 Move X0, [X21]
	248 Call 0x1C17F10
	249 Move X1, [X20]
	250 Move X19, X0
	251 Call List`1<Object>..ctor, X0
	252 Move X8, [X22]
	253 Move X8, [X8+184]
	254 Move [X8+72], X19
	255 Move X0, [X24]
	256 Call 0x1C17F10
	257 Move X1, [X23]
	258 Move X19, X0
	259 Call ConcurrentQueue`1<Object>..ctor, X0
	260 Move X8, [X22]
	261 Move X0, X31
	262 Move X8, [X8+184]
	263 Move [X8+88], X19
	264 Call Thread.get_CurrentThread
	265 Move X8, [X22]
	266 Move X8, [X8+184]
	267 Move [X8+96], X0
	268 Move X0, [X21]
	269 Call 0x1C17F10
	270 Move X1, [X20]
	271 Move X19, X0
	272 Call List`1<Object>..ctor, X0
	273 Move X8, [X22]
	274 Move X8, [X8+184]
	275 Move [X8+32], X19
	276 Move X0, [X21]
	277 Call 0x1C17F10
	278 Move X1, [X20]
	279 Move X19, X0
	280 Call List`1<Object>..ctor, X0
	281 Move X8, [X22]
	282 Move X22, [X31+48]
	283 Move X21, [X31+56]
	284 Move X24, [X31+32]
	285 Move X23, [X31+40]
	286 Move X26, [X31+16]
	287 Move X25, [X31+24]
	288 Move X8, [X8+184]
	289 Move [X8+40], X19
	290 Move X20, [X31+64]
	291 Move X19, [X31+72]
	292 Move X30, [X31+80]
	293 Move X27, [X31+88]
	294 Return 
	295 Call 0x1C17F20
	296 Move X0, 0x23C0000
	297 Move X0, [X0+1432]
	298 Call 0x1C17D08
	299 Call 0x19913D0
	300 Move X0, X19
	301 Move X1, X31
	302 Call Object.Destroy, X0
	303 Move X0, 0x23C0000
	304 Move X0, [X0+1456]
	305 Call 0x1C17D08
	306 Call 0x1C17F10
	307 Move X19, X0
	308 Move X0, 0x23C0000
	309 Move X0, [X0+1736]
	310 Call 0x1C17D08
	311 Move X1, X0
	312 Move X0, X19
	313 Move X2, X31
	314 Call InvalidOperationException..ctor, X0, X1
	315 Move X0, 0x23C0000
	316 Move X0, [X0+1744]
	317 Call 0x1C17D08
	318 Move X1, X0
	319 Move X0, X19
	320 Call 0x1C17DEC

Method: System.Void OnDestroy()

Disassembly:
	0x01D3420C B 0x1D34358
	0x01D34210 B 0x1D34250
	0x01D34214 B 0x1D3424C
	0x01D34218 B 0x1D34250
	0x01D3421C B 0x1D3424C
	0x01D34220 B 0x1D3424C
	0x01D34224 B 0x1D3424C
	0x01D34228 B 0x1D3424C
	0x01D3422C B 0x1D34250
	0x01D34230 B 0x1D34250
	0x01D34234 B 0x1D34250
	0x01D34238 B 0x1D3424C
	0x01D3423C B 0x1D34250
	0x01D34240 B 0x1D34250
	0x01D34244 B 0x1D3424C
	0x01D34248 B 0x1D3424C
	0x01D3424C STR W27, [X31 + 0x4]
	0x01D34250 MOV X29, X0
	0x01D34254 MOV W26, W31
	0x01D34258 CMP W1, 0x1
	0x01D3425C B.NE 0x1D34D50
	0x01D34260 MOV X0, X29

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x26A5000
	005 Move X19, 0x23C0000
	006 Move W8, [X20+1742]
	007 Move X19, [X19+1608]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x23C0000
	013 Move X0, [X0+1608]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1742], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move [X8+8], X31
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void Update()

Disassembly:
	0x01D34264 BL 0x3EB1AD0
	0x01D34268 MOV X25, X0
	0x01D3426C ADRP X0, 0x23BF000
	0x01D34270 LDR X0, [X0 + 0x7D0]
	0x01D34274 BL 0x1C16D08
	0x01D34278 LDR X8, [X25]
	0x01D3427C LDR X1, [X8]
	0x01D34280 BL 0x1C17270
	0x01D34284 TBZ X0, 0x0, 0x1D34BF4
	0x01D34288 LDR X20, [X25]
	0x01D3428C BL 0x3EB1AE0
	0x01D34290 ADRP X0, 0x23BF000
	0x01D34294 LDR X0, [X0 + 0x648]
	0x01D34298 BL 0x1C16D08
	0x01D3429C LDR W8, [X0 + 0xE0]
	0x01D342A0 CBNZ W8, 0x1D342A8
	0x01D342A4 BL 0x1C16DFC
	0x01D342A8 ADRP X0, 0x23BF000
	0x01D342AC LDR X0, [X0 + 0x648]
	0x01D342B0 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x26A5000
	005 Move X20, 0x23C0000
	006 Move W8, [X19+1743]
	007 Move X20, [X20+1608]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x23C0000
	013 Move X0, [X0+1608]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1743], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Call App.ExecuteScheduledActions
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Call App.ExecuteScheduledCommands
	027 Return 

Method: System.Void ExecuteScheduledActions()

Disassembly:
	0x01D342B4 LDR X8, [X0 + 0xB8]
	0x01D342B8 LDR X25, [X8 + 0x30]
	0x01D342BC ADRP X0, 0x23BF000
	0x01D342C0 LDR X0, [X0 + 0x7D8]
	0x01D342C4 BL 0x1C16D08
	0x01D342C8 BL 0x1C16F10
	0x01D342CC MOV X29, X0
	0x01D342D0 MOV X1, X31
	0x01D342D4 BL 0x33BDD8C
	0x01D342D8 CBZ X29, 0x1D34C18
	0x01D342DC STP X28, X20, [X29 + 0x10]
	0x01D342E0 CBZ X25, 0x1D34C1C
	0x01D342E4 ADRP X0, 0x23BF000
	0x01D342E8 LDR X0, [X0 + 0x7E0]
	0x01D342EC LDR W27, [X31 + 0x4]
	0x01D342F0 BL 0x1C16D08
	0x01D342F4 LDR W9, [X25 + 0x1C]
	0x01D342F8 LDR X8, [X25 + 0x10]
	0x01D342FC ADD W9, W9, 0x1
	0x01D34300 STR W9, [X25 + 0x1C]
	0x01D34304 CBZ X8, 0x1D34C20
	0x01D34308 LDRSW X9, [X25 + 0x18]
	0x01D3430C LDR W10, [X8 + 0x18]
	0x01D34310 CMP W9, W10
	0x01D34314 B.CS 0x1D34334
	0x01D34318 LDR W27, [X31 + 0x4]
	0x01D3431C LDR W20, [X31 + 0xC]
	0x01D34320 ADD W10, W9, 0x1
	0x01D34324 ADD X8, X8, X9, 0x3, LSL
	0x01D34328 STR W10, [X25 + 0x18]
	0x01D3432C STR X29, [X8 + 0x20]
	0x01D34330 B 0x1D340F0
	0x01D34334 LDR X8, [X0 + 0x20]
	0x01D34338 LDR X8, [X8 + 0xC0]
	0x01D3433C LDR X2, [X8 + 0x70]
	0x01D34340 LDR W27, [X31 + 0x4]
	0x01D34344 MOV X0, X25
	0x01D34348 MOV X1, X29
	0x01D3434C BL 0x301BF90
	0x01D34350 LDR W20, [X31 + 0xC]
	0x01D34354 B 0x1D340F0
	0x01D34358 STR W27, [X31 + 0x4]
	0x01D3435C MOV X29, X0
	0x01D34360 B 0x1D34258
	0x01D34364 MOVZ W19, 0x1
	0x01D34368 ADRP X8, 0x23BF000
	0x01D3436C LDR X8, [X8 + 0x648]
	0x01D34370 LDR X0, [X8]
	0x01D34374 LDR W8, [X0 + 0xE0]
	0x01D34378 CBZ W8, 0x1D34388
	0x01D3437C LDR W20, [X31 + 0x10]
	0x01D34380 LDR W21, [X31 + 0x8]
	0x01D34384 B 0x1D343A0
	0x01D34388 BL 0x1C16DFC
	0x01D3438C LDR W20, [X31 + 0x10]
	0x01D34390 LDR W21, [X31 + 0x8]
	0x01D34394 ADRP X8, 0x23BF000
	0x01D34398 LDR X8, [X8 + 0x648]
	0x01D3439C LDR X0, [X8]
	0x01D343A0 LDR X8, [X0 + 0xB8]
	0x01D343A4 LDR X23, [X8 + 0x10]
	0x01D343A8 STRB W31, [X8 + 0x18]
	0x01D343AC CBZ X23, 0x1D34BB8
	0x01D343B0 LDR X8, [X23]
	0x01D343B4 ADRP X10, 0x23BF000
	0x01D343B8 LDRH W9, [X8 + 0x12E]
	0x01D343BC LDR X10, [X10 + 0x6A8]
	0x01D343C0 LDR X1, [X10]
	0x01D343C4 CBZ X9, 0x1D343E8
	0x01D343C8 LDR X10, [X8 + 0xB0]
	0x01D343CC ADD X10, X10, 0x8
	0x01D343D0 LDUR X11, [X10 - 0x8]
	0x01D343D4 CMP X11, X1
	0x01D343D8 B.EQ 0x1D343F8
	0x01D343DC SUBS X9, X9, 0x1
	0x01D343E0 ADD X10, X10, 0x10
	0x01D343E4 B.NE 0x1D343D0
	0x01D343E8 MOVZ W2, 0x1
	0x01D343EC MOV X0, X23
	0x01D343F0 BL 0x1C5C788
	0x01D343F4 B 0x1D34408
	0x01D343F8 LDR W9, [X10]
	0x01D343FC ADD W9, W9, 0x1
	0x01D34400 ADD X8, X8, W9, 0x4, SXTW
	0x01D34404 ADD X0, X8, 0x138
	0x01D34408 LDP X8, X2, [X0]
	0x01D3440C MOV X0, X23
	0x01D34410 MOV W1, W31
	0x01D34414 BLR X8
	0x01D34418 EOR W24, W19, 0x1
	0x01D3441C ADRP X19, 0x23BF000
	0x01D34420 LDR X19, [X19 + 0x648]
	0x01D34424 CBZ W21, 0x1D3458C
	0x01D34428 TBZ X24, 0x0, 0x1D3458C
	0x01D3442C LDR X0, [X19]
	0x01D34430 LDR W8, [X0 + 0xE0]
	0x01D34434 CBNZ W8, 0x1D3443C
	0x01D34438 BL 0x1C16DFC
	0x01D3443C MOV X0, X22
	0x01D34440 BL 0x1D35310
	0x01D34444 LDR X8, [X19]
	0x01D34448 LDR X8, [X8 + 0xB8]
	0x01D3444C LDR X23, [X8 + 0x10]
	0x01D34450 CBZ X23, 0x1D34BCC
	0x01D34454 LDR X8, [X23]
	0x01D34458 ADRP X10, 0x23BF000
	0x01D3445C MOV X22, X0
	0x01D34460 LDRH W9, [X8 + 0x12E]
	0x01D34464 LDR X10, [X10 + 0x6A8]
	0x01D34468 LDR X1, [X10]
	0x01D3446C CBZ X9, 0x1D34490

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x26A5000
	007 Move X20, 0x23C0000
	008 Move W8, [X19+1744]
	009 Move X20, [X20+1608]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x23C0000
	015 Move X0, [X0+1608]
	016 Call 0x1C17CF4
	017 Move X0, 0x23C0000
	018 Move X0, [X0+1768]
	019 Call 0x1C17CF4
	020 Move X0, 0x23C0000
	021 Move X0, [X0+1776]
	022 Call 0x1C17CF4
	023 Move X0, 0x23C0000
	024 Move X0, [X0+1784]
	025 Call 0x1C17CF4
	026 Move X0, 0x23C0000
	027 Move X0, [X0+1792]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X19+1744], W8
	031 Move X0, [X20]
	032 Move [X31+8], X31
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X20]
	038 Move X8, [X0+184]
	039 Move X0, [X8+64]
	040 Compare X0, 0
	041 JumpIfEqual {127}
	042 Move X8, 0x23C0000
	043 Move X8, [X8+1776]
	044 Move X1, [X8]
	045 Call ConcurrentQueue`1<Object>.get_Count, X0
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X0, [X20]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {53}
	051 Call 0x1C17DFC
	052 Move X0, [X20]
	053 Move X8, [X0+184]
	054 Move X8, [X8+72]
	055 Compare X8, 0
	056 JumpIfEqual {127}
	057 Move W2, [X8+24]
	058 Move W9, [X8+28]
	059 Add W9, W9, 1
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move [X8+24], W31
	062 Move [X8+28], W9
	063 Move X0, [X8+16]
	064 Move W1, W31
	065 Move X3, X31
	066 Call Array.Clear, X0, X1, X2
	067 Move X21, 0x23C0000
	068 Move X22, 0x23C0000
	069 Move X21, [X21+1768]
	070 Move X22, [X22+1784]
	071 Move X0, [X20]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {77}
	075 Call 0x1C17DFC
	076 Move X0, [X20]
	077 Move X8, [X0+184]
	078 Move X0, [X8+64]
	079 Compare X0, 0
	080 JumpIfEqual {127}
	081 Move X2, [X21]
	082 Add X1, X31, 8
	083 Call ConcurrentQueue`1<Object>.TryDequeue, X0, X1
	084 Move X8, [X20]
	085 Move W19, W0
	086 Move W9, [X8+224]
	087 Compare W9, 0
	088 JumpIfNotEqual {92}
	089 Move X0, X8
	090 Call 0x1C17DFC
	091 Move X8, [X20]
	092 Move X8, [X8+184]
	093 Move TEMP, X19
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {119}
	097 Move X0, [X8+72]
	098 Compare X0, 0
	099 JumpIfEqual {127}
	100 Move W10, [X0+28]
	101 Move X1, [X31+8]
	102 Move X8, [X0+16]
	103 Move X9, [X22]
	104 Add W10, W10, 1
	105 Move [X0+28], W10
	106 Compare X8, 0
	107 JumpIfEqual {127}
	108 NotImplemented "Instruction LDRSW not yet implemented."
	109 Move W11, [X8+24]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Add W9, W10, 1
	112 Add X8, X8, X10
	113 Move [X0+24], W9
	114 Move [X8+32], X1
	115 Move X8, [X9+32]
	116 Move X8, [X8+192]
	117 Move X2, [X8+112]
	118 Call List`1<Object>.AddWithResize, X0, X1
	119 Move X0, [X8+72]
	120 Call App.ExecuteAction, X0
	121 Move X20, [X31+32]
	122 Move X19, [X31+40]
	123 Move X22, [X31+16]
	124 Move X21, [X31+24]
	125 Move X30, [X31+48]
	126 Return 
	127 Call 0x1C17F20

Method: System.Void ExecuteScheduledCommands()

Disassembly:
	0x01D34470 LDR X10, [X8 + 0xB0]
	0x01D34474 ADD X10, X10, 0x8
	0x01D34478 LDUR X11, [X10 - 0x8]
	0x01D3447C CMP X11, X1
	0x01D34480 B.EQ 0x1D344A0
	0x01D34484 SUBS X9, X9, 0x1
	0x01D34488 ADD X10, X10, 0x10
	0x01D3448C B.NE 0x1D34478
	0x01D34490 MOVZ W2, 0x2
	0x01D34494 MOV X0, X23
	0x01D34498 BL 0x1C5C788
	0x01D3449C B 0x1D344B0
	0x01D344A0 LDR W9, [X10]
	0x01D344A4 ADD W9, W9, 0x2
	0x01D344A8 ADD X8, X8, W9, 0x4, SXTW
	0x01D344AC ADD X0, X8, 0x138
	0x01D344B0 LDP X8, X1, [X0]
	0x01D344B4 MOV X0, X23
	0x01D344B8 BLR X8
	0x01D344BC CBZ X0, 0x1D34BD4
	0x01D344C0 ADRP X9, 0x23BF000
	0x01D344C4 LDR W8, [X0 + 0x18]
	0x01D344C8 LDR X9, [X9 + 0x758]
	0x01D344CC STR W8, [X31 + 0x18]
	0x01D344D0 LDR X0, [X9]
	0x01D344D4 ADD X1, X31, 0x18
	0x01D344D8 BL 0x1C16E04
	0x01D344DC ADRP X8, 0x23BF000
	0x01D344E0 LDR X8, [X8 + 0x7C0]
	0x01D344E4 MOV X2, X0
	0x01D344E8 LDR X0, [X8]
	0x01D344EC MOV X1, X22
	0x01D344F0 MOV X3, X31
	0x01D344F4 BL 0x3227BD4
	0x01D344F8 LDR X8, [X19]
	0x01D344FC MOV X22, X0
	0x01D34500 LDR X8, [X8 + 0xB8]
	0x01D34504 LDR X0, [X8 + 0x70]
	0x01D34508 CBZ X0, 0x1D34BD8
	0x01D3450C LDR X8, [X0]
	0x01D34510 LDP X9, X1, [X8 + 0x168]
	0x01D34514 BLR X9
	0x01D34518 MOV X1, X0
	0x01D3451C MOV X0, X22
	0x01D34520 MOV X2, X31
	0x01D34524 BL 0x321B938
	0x01D34528 ADRP X8, 0x23BF000
	0x01D3452C LDR X8, [X8 + 0x788]
	0x01D34530 MOV X22, X0
	0x01D34534 LDR X0, [X8]
	0x01D34538 LDR W8, [X0 + 0xE0]
	0x01D3453C CBNZ W8, 0x1D34544
	0x01D34540 BL 0x1C16DFC
	0x01D34544 ADRP X8, 0x23BF000
	0x01D34548 ADRP X9, 0x23BF000
	0x01D3454C LDR X8, [X8 + 0x790]
	0x01D34550 LDR X9, [X9 + 0x7B0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x26A5000
	007 Move W8, [X19+1745]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x23C0000
	013 Move X0, [X0+1608]
	014 Call 0x1C17CF4
	015 Move X0, 0x23C0000
	016 Move X0, [X0+1800]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+1745], W8
	020 Move X21, 0x23C0000
	021 Move X22, 0x23C0000
	022 Move X21, [X21+1608]
	023 Move X22, [X22+1800]
	024 Move [X31+8], X31
	025 Move X0, [X21]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X21]
	031 Move X8, [X0+184]
	032 Move X0, [X8+88]
	033 Compare X0, 0
	034 JumpIfEqual {71}
	035 Move X2, [X22]
	036 Add X1, X31, 8
	037 Call ConcurrentQueue`1<Object>.TryDequeue, X0, X1
	038 Move X8, [X21]
	039 Move W20, W0
	040 Move W9, [X8+224]
	041 Compare W9, 0
	042 JumpIfNotEqual {46}
	043 Move X0, X8
	044 Call 0x1C17DFC
	045 Move X8, [X21]
	046 Move X8, [X8+184]
	047 Move X19, [X8+80]
	048 Move TEMP, X20
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {58}
	052 Compare X19, 0
	053 JumpIfEqual {71}
	054 Move X1, [X31+8]
	055 Move X0, X19
	056 Move X2, X31
	057 Call CommandScheduler.Add, X0, X1
	058 Move X0, X31
	059 Call Time.get_deltaTime
	060 Compare X19, 0
	061 JumpIfEqual {71}
	062 Move X0, X19
	063 Move X1, X31
	064 Call CommandScheduler.Update, X0, V0
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X30, [X31+48]
	070 Return 
	071 Call 0x1C17F20

Method: System.Void ExecuteAction(AnimalCompany.BaseAction[] actions)

Disassembly:
	0x01D345B0 CBZ X8, 0x1D34BBC
	0x01D345B4 LDR W8, [X8 + 0x18]
	0x01D345B8 CMP W8, 0x1
	0x01D345BC B.LT 0x1D34774
	0x01D345C0 ADRP X8, 0x23BF000
	0x01D345C4 LDR X8, [X8 + 0x788]
	0x01D345C8 LDR X0, [X8]
	0x01D345CC LDR W8, [X0 + 0xE0]
	0x01D345D0 CBNZ W8, 0x1D345D8
	0x01D345D4 BL 0x1C16DFC
	0x01D345D8 MOVZ W0, 0x1
	0x01D345DC MOVZ W1, 0x100
	0x01D345E0 MOV X2, X31
	0x01D345E4 BL 0x35C1A74
	0x01D345E8 TBZ X0, 0x0, 0x1D34774
	0x01D345EC ADRP X8, 0x23BF000
	0x01D345F0 LDR X8, [X8 + 0x648]
	0x01D345F4 LDR X0, [X8]
	0x01D345F8 LDR W8, [X0 + 0xE0]
	0x01D345FC CBNZ W8, 0x1D34610
	0x01D34600 BL 0x1C16DFC
	0x01D34604 ADRP X8, 0x23BF000
	0x01D34608 LDR X8, [X8 + 0x648]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x26A5000
	006 Move X21, 0x23C0000
	007 Move W8, [X20+1746]
	008 Move X21, [X21+1608]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x23C0000
	015 Move X0, [X0+1608]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1746], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X1, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W0, 1
	028 Move W2, 1
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]

Method: System.Void ExecuteActionSilently(AnimalCompany.BaseAction[] actions)

Disassembly:
	0x01D35E70 ADRP X8, 0x23BE000
	0x01D35E74 LDR X8, [X8 + 0x788]
	0x01D35E78 LDR X0, [X8]
	0x01D35E7C LDR W8, [X0 + 0xE0]
	0x01D35E80 CBNZ W8, 0x1D35E88
	0x01D35E84 BL 0x1C16DFC
	0x01D35E88 MOVZ W0, 0x5
	0x01D35E8C MOVZ W1, 0x200
	0x01D35E90 MOV X2, X31
	0x01D35E94 BL 0x35C1A74
	0x01D35E98 TBZ X0, 0x0, 0x1D35F60
	0x01D35E9C MOV X0, X19
	0x01D35EA0 MOV X1, X31
	0x01D35EA4 BL 0x35BC7DC
	0x01D35EA8 ADRP X8, 0x23BE000
	0x01D35EAC LDR X8, [X8 + 0x8A0]
	0x01D35EB0 MOV X1, X0
	0x01D35EB4 MOV X2, X31
	0x01D35EB8 LDR X8, [X8]
	0x01D35EBC MOV X0, X8
	0x01D35EC0 BL 0x321B938
	0x01D35EC4 ADRP X8, 0x23BE000
	0x01D35EC8 LDR X8, [X8 + 0x720]
	0x01D35ECC MOV X20, X0
	0x01D35ED0 LDR X8, [X8]
	0x01D35ED4 MOV X0, X8
	0x01D35ED8 BL 0x1C16F10
	0x01D35EDC ADRP X8, 0x23BE000
	0x01D35EE0 LDR X8, [X8 + 0x718]
	0x01D35EE4 MOV X21, X0
	0x01D35EE8 LDR X1, [X8]
	0x01D35EEC BL 0x2AA4804
	0x01D35EF0 CBZ X21, 0x1D36108
	0x01D35EF4 ADRP X8, 0x23BE000
	0x01D35EF8 ADRP X9, 0x23BE000
	0x01D35EFC LDR X8, [X8 + 0x8B0]
	0x01D35F00 LDR X9, [X9 + 0x710]
	0x01D35F04 MOV X0, X21
	0x01D35F08 MOV X2, X19
	0x01D35F0C LDR X1, [X8]
	0x01D35F10 LDR X3, [X9]
	0x01D35F14 BL 0x2AA5098
	0x01D35F18 ADRP X8, 0x23BE000
	0x01D35F1C LDR X8, [X8 + 0x788]
	0x01D35F20 LDR X0, [X8]
	0x01D35F24 LDR W8, [X0 + 0xE0]
	0x01D35F28 CBNZ W8, 0x1D35F30
	0x01D35F2C BL 0x1C16DFC
	0x01D35F30 ADRP X8, 0x23BE000
	0x01D35F34 ADRP X9, 0x23BE000
	0x01D35F38 LDR X8, [X8 + 0x790]
	0x01D35F3C LDR X9, [X9 + 0x8A8]
	0x01D35F40 MOVZ W0, 0x200
	0x01D35F44 MOVZ W5, 0x1AA
	0x01D35F48 LDR X3, [X8]
	0x01D35F4C LDR X4, [X9]
	0x01D35F50 MOV X1, X20
	0x01D35F54 MOV X2, X21
	0x01D35F58 MOV X6, X31
	0x01D35F5C BL 0x35C2158
	0x01D35F60 FMOV S0, W31
	0x01D35F64 MOV X0, X19
	0x01D35F68 MOV X1, X31
	0x01D35F6C BL 0x35BA238
	0x01D35F70 TBZ X0, 0x0, 0x1D35FD8
	0x01D35F74 ADRP X19, 0x23BE000
	0x01D35F78 LDR X19, [X19 + 0x898]
	0x01D35F7C LDR X0, [X19]
	0x01D35F80 LDR W8, [X0 + 0xE0]
	0x01D35F84 CBNZ W8, 0x1D35F8C
	0x01D35F88 BL 0x1C16DFC
	0x01D35F8C ADRP X20, 0x26A3000
	0x01D35F90 LDRB W8, [X20 + 0x78B]
	0x01D35F94 CBNZ W8, 0x1D35FAC
	0x01D35F98 ADRP X0, 0x23BE000
	0x01D35F9C LDR X0, [X0 + 0x898]
	0x01D35FA0 BL 0x1C16CF4
	0x01D35FA4 MOVZ W8, 0x1
	0x01D35FA8 STRB W8, [X20 + 0x78B]
	0x01D35FAC LDR X0, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x26A4000
	006 Move X20, 0x23BF000
	007 Move W8, [X21+1747]
	008 Move X20, [X20+1608]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x23BF000
	015 Move X0, [X0+1608]
	016 Call 0x1C17CF4
	017 Move X0, 0x23BF000
	018 Move X0, [X0+2080]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1747], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X21, 0x26A4000
	028 Move W8, [X21+1927]
	029 Compare W8, 0
	030 JumpIfNotEqual {36}
	031 Move X0, 0x23BF000
	032 Move X0, [X0+1608]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+1927], W8
	036 Move X0, [X20]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X20]
	042 Move X8, [X0+184]
	043 Move X8, [X8]
	044 Compare X8, 0
	045 JumpIfEqual {99}
	046 Move X8, [X8+168]
	047 Compare X8, 0
	048 JumpIfEqual {99}
	049 Move X8, [X8+72]
	050 Compare X8, 0
	051 JumpIfEqual {99}
	052 Move W8, [X8+76]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move W20, 1
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move W8, [X21+1927]
	060 Compare W8, 0
	061 JumpIfNotEqual {67}
	062 Move X0, 0x23BF000
	063 Move X0, [X0+1608]
	064 Call 0x1C17CF4
	065 Move W8, 1
	066 Move [X21+1927], W8
	067 Move X0, [X20]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {73}
	071 Call 0x1C17DFC
	072 Move X0, [X20]
	073 Move X8, [X0+184]
	074 Move X8, [X8]
	075 Compare X8, 0
	076 JumpIfEqual {99}
	077 Move X8, [X8+168]
	078 Compare X8, 0
	079 JumpIfEqual {99}
	080 Move X8, [X8+88]
	081 Compare X8, 0
	082 JumpIfEqual {99}
	083 Move W8, [X8+76]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 NotImplemented "Instruction CSET not yet implemented."
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move W0, W20
	091 Move X1, X19
	092 Move X20, [X31+16]
	093 Move X19, [X31+24]
	094 Move W2, 1
	095 Move X30, [X31+32]
	096 Move X21, [X31+40]
	097 Call App.ExecuteAction, X0, X1, X2
	098 Return 
	099 Call 0x1C17F20

Method: System.Void ExecuteAction(System.Collections.Generic.IList`1<AnimalCompany.BaseAction> actions)

Disassembly:
	0x01D34554 LDR X3, [X8]
	0x01D34558 LDR X4, [X9]
	0x01D3455C MOVZ W0, 0x100
	0x01D34560 MOVZ W5, 0x11E
	0x01D34564 MOV X1, X22
	0x01D34568 MOV X2, X31
	0x01D3456C MOV X6, X31
	0x01D34570 BL 0x35C2158
	0x01D34574 LDR X8, [X19]
	0x01D34578 LDR X8, [X8 + 0xB8]
	0x01D3457C LDR X0, [X8 + 0x70]
	0x01D34580 CBZ X0, 0x1D34BE0
	0x01D34584 MOV X1, X31
	0x01D34588 BL 0x3232AC0
	0x01D3458C LDR X0, [X19]
	0x01D34590 LDR W8, [X0 + 0xE0]
	0x01D34594 CBNZ W8, 0x1D345A8
	0x01D34598 BL 0x1C16DFC
	0x01D3459C ADRP X8, 0x23BF000
	0x01D345A0 LDR X8, [X8 + 0x648]
	0x01D345A4 LDR X0, [X8]
	0x01D345A8 LDR X8, [X0 + 0xB8]
	0x01D345AC LDR X8, [X8 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x26A5000
	006 Move X21, 0x23C0000
	007 Move W8, [X20+1748]
	008 Move X21, [X21+1608]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x23C0000
	015 Move X0, [X0+1608]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1748], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X1, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W0, 1
	028 Move W2, 1
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call App.ExecuteAction, X0, X1, X2
	032 Return 

Method: System.Void ExecuteActionSilently(System.Collections.Generic.IList`1<AnimalCompany.BaseAction> actions)

Disassembly:
	0x01D35FB0 LDR W8, [X0 + 0xE0]
	0x01D35FB4 CBNZ W8, 0x1D35FC0
	0x01D35FB8 BL 0x1C16DFC
	0x01D35FBC LDR X0, [X19]
	0x01D35FC0 LDR X8, [X0 + 0xB8]
	0x01D35FC4 LDP X20, X19, [X31 + 0x20]
	0x01D35FC8 LDP X22, X21, [X31 + 0x10]
	0x01D35FCC LDR X0, [X8]
	0x01D35FD0 LDR X30, [X31], #0x30
	0x01D35FD4 RET
	0x01D35FD8 LDR X0, [X22]
	0x01D35FDC LDR W8, [X0 + 0xE0]
	0x01D35FE0 CBNZ W8, 0x1D35FEC
	0x01D35FE4 BL 0x1C16DFC
	0x01D35FE8 LDR X0, [X22]
	0x01D35FEC LDR X8, [X0 + 0xB8]
	0x01D35FF0 LDR X0, [X8 + 0x50]
	0x01D35FF4 CBZ X0, 0x1D36108
	0x01D35FF8 MOV X1, X19
	0x01D35FFC LDP X20, X19, [X31 + 0x20]
	0x01D36000 LDP X22, X21, [X31 + 0x10]
	0x01D36004 MOV X2, X31
	0x01D36008 LDR X30, [X31], #0x30
	0x01D3600C B 0x35C0908
	0x01D36010 ADRP X0, 0x23BD000
	0x01D36014 LDR X0, [X0 + 0x7D0]
	0x01D36018 BL 0x1C16D08
	0x01D3601C BL 0x1C16F10
	0x01D36020 MOV X20, X0
	0x01D36024 ADRP X0, 0x23BD000
	0x01D36028 LDR X0, [X0 + 0x8B8]
	0x01D3602C BL 0x1C16D08
	0x01D36030 MOV X1, X0
	0x01D36034 MOV X0, X20
	0x01D36038 MOV X2, X31
	0x01D3603C BL 0x33B2C70
	0x01D36040 ADRP X0, 0x23BD000
	0x01D36044 LDR X0, [X0 + 0x720]
	0x01D36048 BL 0x1C16D08
	0x01D3604C BL 0x1C16F10
	0x01D36050 MOV X21, X0
	0x01D36054 ADRP X0, 0x23BD000
	0x01D36058 LDR X0, [X0 + 0x718]
	0x01D3605C BL 0x1C16D08
	0x01D36060 MOV X1, X0
	0x01D36064 MOV X0, X21
	0x01D36068 BL 0x199050C
	0x01D3606C MOV X0, X21
	0x01D36070 BL 0x19903C0
	0x01D36074 ADRP X0, 0x23BD000
	0x01D36078 LDR X0, [X0 + 0x8B0]
	0x01D3607C BL 0x1C16D08
	0x01D36080 MOV X22, X0
	0x01D36084 ADRP X0, 0x23BD000
	0x01D36088 LDR X0, [X0 + 0x710]
	0x01D3608C BL 0x1C16D08
	0x01D36090 MOV X3, X0
	0x01D36094 MOV X0, X21
	0x01D36098 MOV X1, X22
	0x01D3609C MOV X2, X19
	0x01D360A0 BL 0x1990510
	0x01D360A4 ADRP X0, 0x23BD000
	0x01D360A8 LDR X0, [X0 + 0x788]
	0x01D360AC BL 0x1C16D08
	0x01D360B0 BL 0x19903D0
	0x01D360B4 ADRP X0, 0x23BD000
	0x01D360B8 LDR X0, [X0 + 0x790]
	0x01D360BC BL 0x1C16D08
	0x01D360C0 MOV X19, X0
	0x01D360C4 ADRP X0, 0x23BD000
	0x01D360C8 LDR X0, [X0 + 0x8A8]
	0x01D360CC BL 0x1C16D08
	0x01D360D0 MOV X4, X0
	0x01D360D4 MOVZ W0, 0x100
	0x01D360D8 MOVZ W5, 0x19E
	0x01D360DC MOV X1, X20
	0x01D360E0 MOV X2, X21
	0x01D360E4 MOV X3, X19
	0x01D360E8 MOV X6, X31
	0x01D360EC BL 0x35C2524

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x26A4000
	006 Move X20, 0x23BF000
	007 Move W8, [X21+1749]
	008 Move X20, [X20+1608]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x23BF000
	015 Move X0, [X0+1608]
	016 Call 0x1C17CF4
	017 Move X0, 0x23BF000
	018 Move X0, [X0+2080]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1749], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X21, 0x26A3000
	028 Move W8, [X21+1927]
	029 Compare W8, 0
	030 JumpIfNotEqual {36}
	031 Move X0, 0x23BE000
	032 Move X0, [X0+1608]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+1927], W8
	036 Move X0, [X20]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X20]
	042 Move X8, [X0+184]
	043 Move X8, [X8]
	044 Compare X8, 0
	045 JumpIfEqual {99}
	046 Move X8, [X8+168]
	047 Compare X8, 0
	048 JumpIfEqual {99}
	049 Move X8, [X8+72]
	050 Compare X8, 0
	051 JumpIfEqual {99}
	052 Move W8, [X8+76]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move W20, 1
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move W8, [X21+1927]
	060 Compare W8, 0
	061 JumpIfNotEqual {67}
	062 Move X0, 0x23BE000
	063 Move X0, [X0+1608]
	064 Call 0x1C17CF4
	065 Move W8, 1
	066 Move [X21+1927], W8
	067 Move X0, [X20]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {73}
	071 Call 0x1C17DFC
	072 Move X0, [X20]
	073 Move X8, [X0+184]
	074 Move X8, [X8]
	075 Compare X8, 0
	076 JumpIfEqual {99}
	077 Move X8, [X8+168]
	078 Compare X8, 0
	079 JumpIfEqual {99}
	080 Move X8, [X8+88]
	081 Compare X8, 0
	082 JumpIfEqual {99}
	083 Move W8, [X8+76]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 NotImplemented "Instruction CSET not yet implemented."
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move W0, W20
	091 Move X1, X19
	092 Move X20, [X31+16]
	093 Move X19, [X31+24]
	094 Move W2, 1
	095 Move X30, [X31+32]
	096 Move X21, [X31+40]
	097 Call App.ExecuteAction, X0, X1, X2
	098 Return 
	099 Call 0x1C17F20

Method: System.Void ExecuteActionOrDelay(System.Collections.Generic.IList`1<AnimalCompany.BaseAction> actions)

Disassembly:
	0x01D360F0 ADRP X0, 0x23BD000
	0x01D360F4 LDR X0, [X0 + 0x8C0]
	0x01D360F8 BL 0x1C16D08
	0x01D360FC MOV X1, X0
	0x01D36100 MOV X0, X20
	0x01D36104 BL 0x1C16DEC
	0x01D36108 BL 0x1C16F20
	0x01D3610C STR X30, [X31 - 0x30]!
	0x01D36110 STP X22, X21, [X31 + 0x10]
	0x01D36114 STP X20, X19, [X31 + 0x20]
	0x01D36118 ADRP X21, 0x26A2000
	0x01D3611C LDRB W8, [X21 + 0x6DD]
	0x01D36120 MOV W20, W1
	0x01D36124 MOV X19, X0
	0x01D36128 TBNZ X8, 0x0, 0x1D361B8
	0x01D3612C ADRP X0, 0x23BD000
	0x01D36130 LDR X0, [X0 + 0x648]
	0x01D36134 BL 0x1C16CF4
	0x01D36138 ADRP X0, 0x23BD000
	0x01D3613C LDR X0, [X0 + 0x898]
	0x01D36140 BL 0x1C16CF4
	0x01D36144 ADRP X0, 0x23BD000
	0x01D36148 LDR X0, [X0 + 0x8C8]
	0x01D3614C BL 0x1C16CF4
	0x01D36150 ADRP X0, 0x23BD000
	0x01D36154 LDR X0, [X0 + 0x710]
	0x01D36158 BL 0x1C16CF4
	0x01D3615C ADRP X0, 0x23BD000
	0x01D36160 LDR X0, [X0 + 0x718]
	0x01D36164 BL 0x1C16CF4
	0x01D36168 ADRP X0, 0x23BD000
	0x01D3616C LDR X0, [X0 + 0x720]
	0x01D36170 BL 0x1C16CF4
	0x01D36174 ADRP X0, 0x23BD000
	0x01D36178 LDR X0, [X0 + 0x788]
	0x01D3617C BL 0x1C16CF4
	0x01D36180 ADRP X0, 0x23BD000
	0x01D36184 LDR X0, [X0 + 0x790]
	0x01D36188 BL 0x1C16CF4
	0x01D3618C ADRP X0, 0x23BD000
	0x01D36190 LDR X0, [X0 + 0x8D0]
	0x01D36194 BL 0x1C16CF4
	0x01D36198 ADRP X0, 0x23BD000
	0x01D3619C LDR X0, [X0 + 0x8B0]
	0x01D361A0 BL 0x1C16CF4
	0x01D361A4 ADRP X0, 0x23BD000
	0x01D361A8 LDR X0, [X0 + 0x8D8]
	0x01D361AC BL 0x1C16CF4
	0x01D361B0 MOVZ W8, 0x1
	0x01D361B4 STRB W8, [X21 + 0x6DD]
	0x01D361B8 CBZ X19, 0x1D36368
	0x01D361BC TBZ X20, 0x0, 0x1D361D0
	0x01D361C0 MOVZ W1, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x26A3000
	006 Move X20, 0x23BE000
	007 Move W8, [X21+1750]
	008 Move X20, [X20+1608]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x23BE000
	015 Move X0, [X0+1608]
	016 Call 0x1C17CF4
	017 Move X0, 0x23BE000
	018 Move X0, [X0+2088]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1750], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move W9, [X8+26]
	030 Compare W9, 0
	031 JumpIfNotEqual {41}
	032 Move W9, [X0+224]
	033 Compare W9, 0
	034 JumpIfNotEqual {38}
	035 Call 0x1C17DFC
	036 Move X0, [X20]
	037 Move X8, [X0+184]
	038 Move W8, [X8+24]
	039 Compare W8, 0
	040 JumpIfEqual {60}
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X20]
	046 Move X8, [X0+184]
	047 Move X0, [X8+32]
	048 Compare X0, 0
	049 JumpIfEqual {71}
	050 Move X8, 0x23BE000
	051 Move X8, [X8+2088]
	052 Move X1, X19
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X2, [X8]
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Call List`1<Object>.AddRange, X0, X1
	059 Return 
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, X19
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X30, [X31+32]
	068 Move X21, [X31+40]
	069 Call App.ExecuteAction, X0
	070 Return 
	071 Call 0x1C17F20

Method: System.Void ExecuteActionOrDelay(AnimalCompany.BaseAction[] actions)

Disassembly:
	0x01D361C4 MOV X0, X19
	0x01D361C8 MOV X2, X31
	0x01D361CC BL 0x35BC494
	0x01D361D0 MOV X0, X19
	0x01D361D4 MOV X1, X31
	0x01D361D8 BL 0x35BC8C8
	0x01D361DC TBZ X0, 0x0, 0x1D3620C
	0x01D361E0 ADRP X8, 0x23BD000
	0x01D361E4 LDR X8, [X8 + 0x788]
	0x01D361E8 LDR X0, [X8]
	0x01D361EC LDR W8, [X0 + 0xE0]
	0x01D361F0 CBNZ W8, 0x1D361F8
	0x01D361F4 BL 0x1C16DFC
	0x01D361F8 MOVZ W0, 0x5
	0x01D361FC MOVZ W1, 0x200
	0x01D36200 MOV X2, X31
	0x01D36204 BL 0x35C1A74
	0x01D36208 TBZ X0, 0x0, 0x1D362D0
	0x01D3620C MOV X0, X19
	0x01D36210 MOV X1, X31
	0x01D36214 BL 0x35BC7DC
	0x01D36218 ADRP X8, 0x23BD000
	0x01D3621C LDR X8, [X8 + 0x8D0]
	0x01D36220 MOV X1, X0
	0x01D36224 MOV X2, X31
	0x01D36228 LDR X8, [X8]
	0x01D3622C MOV X0, X8
	0x01D36230 BL 0x321B938
	0x01D36234 ADRP X8, 0x23BD000
	0x01D36238 LDR X8, [X8 + 0x720]
	0x01D3623C MOV X20, X0
	0x01D36240 LDR X8, [X8]
	0x01D36244 MOV X0, X8
	0x01D36248 BL 0x1C16F10
	0x01D3624C ADRP X8, 0x23BD000
	0x01D36250 LDR X8, [X8 + 0x718]
	0x01D36254 MOV X21, X0
	0x01D36258 LDR X1, [X8]
	0x01D3625C BL 0x2AA4804
	0x01D36260 CBZ X21, 0x1D363EC
	0x01D36264 ADRP X8, 0x23BD000
	0x01D36268 ADRP X9, 0x23BD000
	0x01D3626C LDR X8, [X8 + 0x8B0]
	0x01D36270 LDR X9, [X9 + 0x710]
	0x01D36274 MOV X0, X21
	0x01D36278 MOV X2, X19
	0x01D3627C LDR X1, [X8]
	0x01D36280 LDR X3, [X9]
	0x01D36284 BL 0x2AA5098
	0x01D36288 ADRP X8, 0x23BD000
	0x01D3628C LDR X8, [X8 + 0x788]
	0x01D36290 LDR X0, [X8]
	0x01D36294 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x26A3000
	006 Move X20, 0x23BE000
	007 Move W8, [X21+1751]
	008 Move X20, [X20+1608]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x23BE000
	015 Move X0, [X0+1608]
	016 Call 0x1C17CF4
	017 Move X0, 0x23BE000
	018 Move X0, [X0+2088]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1751], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move W9, [X8+26]
	030 Compare W9, 0
	031 JumpIfNotEqual {41}
	032 Move W9, [X0+224]
	033 Compare W9, 0
	034 JumpIfNotEqual {38}
	035 Call 0x1C17DFC
	036 Move X0, [X20]
	037 Move X8, [X0+184]
	038 Move W8, [X8+24]
	039 Compare W8, 0
	040 JumpIfEqual {60}
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X20]
	046 Move X8, [X0+184]
	047 Move X0, [X8+32]
	048 Compare X0, 0
	049 JumpIfEqual {71}
	050 Move X8, 0x23BE000
	051 Move X8, [X8+2088]
	052 Move X1, X19
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X2, [X8]
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Call List`1<Object>.AddRange, X0, X1
	059 Return 
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, X19
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X30, [X31+32]
	068 Move X21, [X31+40]
	069 Call App.ExecuteAction, X0
	070 Return 
	071 Call 0x1C17F20

Method: System.Void ExecuteAction(System.Boolean shouldLog, System.Collections.Generic.IList`1<AnimalCompany.BaseAction> actions, System.Boolean executeDelayedActions = True)

Disassembly:
	0x01D3460C LDR X0, [X8]
	0x01D34610 LDR X8, [X0 + 0xB8]
	0x01D34614 STR W27, [X31 + 0x4]
	0x01D34618 LDR X0, [X8 + 0x30]
	0x01D3461C CBZ X0, 0x1D34BE8
	0x01D34620 STR W24, [X31 + 0x14]
	0x01D34624 ADRP X8, 0x23BF000
	0x01D34628 LDR X8, [X8 + 0x760]
	0x01D3462C LDR X1, [X8]
	0x01D34630 ADD X8, X31, 0x18
	0x01D34634 BL 0x301CB58
	0x01D34638 LDUR V0, [X31 + 0x18]
	0x01D3463C LDR X8, [X31 + 0x28]
	0x01D34640 ADRP X25, 0x23BF000
	0x01D34644 ADRP X28, 0x23BF000
	0x01D34648 ADRP X29, 0x23BF000
	0x01D3464C ADRP X19, 0x23BF000
	0x01D34650 ADRP X27, 0x23BF000
	0x01D34654 ADRP X20, 0x23BF000
	0x01D34658 LDR X25, [X25 + 0x730]
	0x01D3465C LDR X28, [X28 + 0x720]
	0x01D34660 LDR X29, [X29 + 0x718]
	0x01D34664 LDR X19, [X19 + 0x7C8]
	0x01D34668 LDR X27, [X27 + 0x710]
	0x01D3466C LDR X20, [X20 + 0x790]
	0x01D34670 STR V0, [X31 + 0x4]
	0x01D34674 STR X8, [X31 + 0x50]
	0x01D34678 ADRP X21, 0x23BF000
	0x01D3467C LDR X21, [X21 + 0x7B0]
	0x01D34680 LDR X1, [X25]
	0x01D34684 ADD X0, X31, 0x40
	0x01D34688 BL 0x2BC4350
	0x01D3468C TBZ X0, 0x0, 0x1D34740
	0x01D34690 LDR X26, [X31 + 0x50]
	0x01D34694 CBZ X26, 0x1D348AC
	0x01D34698 LDR X0, [X26 + 0x10]
	0x01D3469C CBZ X0, 0x1D348B0
	0x01D346A0 MOV X1, X31
	0x01D346A4 BL 0x33BE520
	0x01D346A8 CBZ X0, 0x1D348A4
	0x01D346AC LDR X8, [X0]
	0x01D346B0 LDP X9, X1, [X8 + 0x1A8]
	0x01D346B4 BLR X9
	0x01D346B8 ADRP X8, 0x23BF000
	0x01D346BC LDR X8, [X8 + 0x798]
	0x01D346C0 LDR X1, [X8]
	0x01D346C4 MOV X2, X31
	0x01D346C8 BL 0x321B938
	0x01D346CC MOV X22, X0
	0x01D346D0 LDR X23, [X26 + 0x18]
	0x01D346D4 LDR X0, [X28]
	0x01D346D8 BL 0x1C16F10
	0x01D346DC LDR X1, [X29]
	0x01D346E0 MOV X24, X0
	0x01D346E4 BL 0x2AA4804
	0x01D346E8 CBZ X24, 0x1D348A8
	0x01D346EC LDR X1, [X19]
	0x01D346F0 LDR X2, [X26 + 0x10]
	0x01D346F4 LDR X3, [X27]
	0x01D346F8 MOV X0, X24
	0x01D346FC BL 0x2AA5098
	0x01D34700 ADRP X8, 0x23BF000
	0x01D34704 LDR X8, [X8 + 0x788]
	0x01D34708 LDR X0, [X8]
	0x01D3470C LDR W8, [X0 + 0xE0]
	0x01D34710 CBNZ W8, 0x1D34718
	0x01D34714 BL 0x1C16DFC
	0x01D34718 LDR X4, [X20]
	0x01D3471C LDR X5, [X21]
	0x01D34720 MOVZ W0, 0x100
	0x01D34724 MOVZ W6, 0x129
	0x01D34728 MOV X1, X22
	0x01D3472C MOV X2, X23
	0x01D34730 MOV X3, X24
	0x01D34734 MOV X7, X31
	0x01D34738 BL 0x35C2674
	0x01D3473C B 0x1D34680
	0x01D34740 MOV X22, X31
	0x01D34744 MOVZ W19, 0x1E
	0x01D34748 ADRP X8, 0x23BF000
	0x01D3474C LDR X8, [X8 + 0x728]
	0x01D34750 LDR X1, [X8]
	0x01D34754 LDR W27, [X31 + 0x4]
	0x01D34758 ADD X0, X31, 0x40
	0x01D3475C BL 0x2BC434C
	0x01D34760 LDP W20, W24, [X31 + 0x10]
	0x01D34764 CBNZ X22, 0x1D34BEC
	0x01D34768 CMP W19, 0x1E
	0x01D3476C B.EQ 0x1D34774
	0x01D34770 CBNZ W19, 0x1D34898
	0x01D34774 ADRP X19, 0x23BF000
	0x01D34778 LDR X19, [X19 + 0x648]
	0x01D3477C LDR X0, [X19]
	0x01D34780 LDR W8, [X0 + 0xE0]
	0x01D34784 CBNZ W8, 0x1D34798
	0x01D34788 BL 0x1C16DFC
	0x01D3478C ADRP X19, 0x23BF000
	0x01D34790 LDR X19, [X19 + 0x648]
	0x01D34794 LDR X0, [X19]
	0x01D34798 LDR X8, [X0 + 0xB8]
	0x01D3479C MOVZ W9, 0x1
	0x01D347A0 LDR X22, [X8 + 0x10]
	0x01D347A4 STRB W9, [X8 + 0x1A]
	0x01D347A8 CBZ X22, 0x1D34BC8
	0x01D347AC LDR X8, [X22]
	0x01D347B0 ADRP X10, 0x23BF000
	0x01D347B4 LDRH W9, [X8 + 0x12E]
	0x01D347B8 LDR X10, [X10 + 0x6A8]
	0x01D347BC LDR X1, [X10]
	0x01D347C0 CBZ X9, 0x1D347E4
	0x01D347C4 LDR X10, [X8 + 0xB0]
	0x01D347C8 ADD X10, X10, 0x8
	0x01D347CC LDUR X11, [X10 - 0x8]
	0x01D347D0 CMP X11, X1
	0x01D347D4 B.EQ 0x1D347F4
	0x01D347D8 SUBS X9, X9, 0x1
	0x01D347DC ADD X10, X10, 0x10
	0x01D347E0 B.NE 0x1D347CC
	0x01D347E4 MOVZ W2, 0x14
	0x01D347E8 MOV X0, X22
	0x01D347EC BL 0x1C5C788
	0x01D347F0 B 0x1D34804
	0x01D347F4 LDR W9, [X10]
	0x01D347F8 ADD W9, W9, 0x14
	0x01D347FC ADD X8, X8, W9, 0x4, SXTW
	0x01D34800 ADD X0, X8, 0x138
	0x01D34804 LDP X8, X3, [X0]
	0x01D34808 AND W9, W24, W20, 0x0
	0x01D3480C AND W1, W9, 0x1
	0x01D34810 MOV X0, X22
	0x01D34814 MOV W2, W31
	0x01D34818 BLR X8
	0x01D3481C LDR X8, [X19]
	0x01D34820 LDR X8, [X8 + 0xB8]
	0x01D34824 STRB W31, [X8 + 0x1A]
	0x01D34828 ADD X0, X31, 0x30
	0x01D3482C BL 0x199059C
	0x01D34830 LDR X8, [X19]
	0x01D34834 LDR W9, [X8 + 0xE0]
	0x01D34838 CBNZ W9, 0x1D34848
	0x01D3483C MOV X0, X8
	0x01D34840 BL 0x1C16DFC
	0x01D34844 LDR X8, [X19]
	0x01D34848 LDR X9, [X8 + 0xB8]
	0x01D3484C LDR X9, [X9 + 0x20]
	0x01D34850 CBZ X9, 0x1D34BC4
	0x01D34854 LDR W9, [X9 + 0x18]
	0x01D34858 CMP W9, 0x1
	0x01D3485C B.LT 0x1D34878
	0x01D34860 TBZ X27, 0x0, 0x1D34878
	0x01D34864 LDR W9, [X8 + 0xE0]
	0x01D34868 CBNZ W9, 0x1D34874
	0x01D3486C MOV X0, X8
	0x01D34870 BL 0x1C16DFC
	0x01D34874 BL 0x1D357E4
	0x01D34878 LDP X20, X19, [X31 + 0xB0]
	0x01D3487C LDP X22, X21, [X31 + 0xA0]
	0x01D34880 LDP X24, X23, [X31 + 0x90]
	0x01D34884 LDP X26, X25, [X31 + 0x80]
	0x01D34888 LDP X28, X27, [X31 + 0x70]
	0x01D3488C LDP X29, X30, [X31 + 0x60]
	0x01D34890 ADD X31, X31, 0xC0
	0x01D34894 RET
	0x01D34898 ADD X0, X31, 0x30
	0x01D3489C BL 0x199059C
	0x01D348A0 B 0x1D34878
	0x01D348A4 BL 0x1C16F20
	0x01D348A8 BL 0x1C16F20
	0x01D348AC BL 0x1C16F20
	0x01D348B0 BL 0x1C16F20
	0x01D348B4 ADRP X19, 0x23BF000
	0x01D348B8 LDR X19, [X19 + 0x648]
	0x01D348BC MOV X0, X19
	0x01D348C0 BL 0x1C16D08
	0x01D348C4 BL 0x19903D0
	0x01D348C8 MOV X0, X19
	0x01D348CC BL 0x1C16D08
	0x01D348D0 LDR X8, [X0 + 0xB8]
	0x01D348D4 ADRP X0, 0x23BF000
	0x01D348D8 LDRB W20, [X8 + 0x19]
	0x01D348DC LDR X0, [X0 + 0x7E8]
	0x01D348E0 BL 0x1C16D08
	0x01D348E4 BL 0x1C16F10
	0x01D348E8 MOV X19, X0
	0x01D348EC ADRP X0, 0x23BF000
	0x01D348F0 LDR X0, [X0 + 0x7F0]
	0x01D348F4 BL 0x1C16D08
	0x01D348F8 MOV X1, X0
	0x01D348FC MOV X0, X19
	0x01D34900 MOV W2, W20
	0x01D34904 BL 0x1D35298
	0x01D34908 ADRP X0, 0x23BF000
	0x01D3490C LDR X0, [X0 + 0x720]
	0x01D34910 BL 0x1C16D08
	0x01D34914 BL 0x1C16F10
	0x01D34918 MOV X20, X0
	0x01D3491C ADRP X0, 0x23BF000
	0x01D34920 LDR X0, [X0 + 0x718]
	0x01D34924 BL 0x1C16D08
	0x01D34928 MOV X1, X0
	0x01D3492C MOV X0, X20
	0x01D34930 BL 0x199050C
	0x01D34934 MOV X0, X22
	0x01D34938 BL 0x1D35310
	0x01D3493C MOV X21, X0
	0x01D34940 MOV X0, X20
	0x01D34944 BL 0x19903C0
	0x01D34948 ADRP X0, 0x23BF000
	0x01D3494C LDR X0, [X0 + 0x7F8]
	0x01D34950 BL 0x1C16D08
	0x01D34954 MOV X22, X0
	0x01D34958 ADRP X0, 0x23BF000
	0x01D3495C LDR X0, [X0 + 0x710]
	0x01D34960 BL 0x1C16D08
	0x01D34964 MOV X3, X0
	0x01D34968 MOV X0, X20
	0x01D3496C MOV X1, X22
	0x01D34970 MOV X2, X21
	0x01D34974 BL 0x1990510
	0x01D34978 ADRP X0, 0x23BF000
	0x01D3497C LDR X0, [X0 + 0x788]
	0x01D34980 BL 0x1C16D08
	0x01D34984 BL 0x19903D0
	0x01D34988 ADRP X0, 0x23BF000
	0x01D3498C LDR X0, [X0 + 0x790]
	0x01D34990 BL 0x1C16D08
	0x01D34994 MOV X21, X0
	0x01D34998 ADRP X0, 0x23BF000
	0x01D3499C LDR X0, [X0 + 0x7B0]
	0x01D349A0 BL 0x1C16D08
	0x01D349A4 MOV X4, X0
	0x01D349A8 MOVZ W0, 0x100
	0x01D349AC MOVZ W5, 0xBE
	0x01D349B0 B 0x1D34AB0
	0x01D349B4 ADRP X19, 0x23BF000
	0x01D349B8 LDR X19, [X19 + 0x648]
	0x01D349BC MOV X0, X19
	0x01D349C0 BL 0x1C16D08
	0x01D349C4 BL 0x19903D0
	0x01D349C8 MOV X0, X19
	0x01D349CC BL 0x1C16D08
	0x01D349D0 LDR X8, [X0 + 0xB8]
	0x01D349D4 ADRP X0, 0x23BF000
	0x01D349D8 LDRB W20, [X8 + 0x19]
	0x01D349DC LDR X0, [X0 + 0x7E8]
	0x01D349E0 BL 0x1C16D08
	0x01D349E4 BL 0x1C16F10
	0x01D349E8 MOV X19, X0
	0x01D349EC ADRP X0, 0x23BF000
	0x01D349F0 LDR X0, [X0 + 0x800]
	0x01D349F4 BL 0x1C16D08
	0x01D349F8 MOV X1, X0
	0x01D349FC MOV X0, X19
	0x01D34A00 MOV W2, W20
	0x01D34A04 BL 0x1D35298
	0x01D34A08 ADRP X0, 0x23BF000
	0x01D34A0C LDR X0, [X0 + 0x720]
	0x01D34A10 BL 0x1C16D08
	0x01D34A14 BL 0x1C16F10
	0x01D34A18 MOV X20, X0
	0x01D34A1C ADRP X0, 0x23BF000
	0x01D34A20 LDR X0, [X0 + 0x718]
	0x01D34A24 BL 0x1C16D08
	0x01D34A28 MOV X1, X0
	0x01D34A2C MOV X0, X20
	0x01D34A30 BL 0x199050C
	0x01D34A34 MOV X0, X22
	0x01D34A38 BL 0x1D35310
	0x01D34A3C MOV X21, X0
	0x01D34A40 MOV X0, X20
	0x01D34A44 BL 0x19903C0
	0x01D34A48 ADRP X0, 0x23BF000
	0x01D34A4C LDR X0, [X0 + 0x7F8]
	0x01D34A50 BL 0x1C16D08
	0x01D34A54 MOV X22, X0
	0x01D34A58 ADRP X0, 0x23BF000
	0x01D34A5C LDR X0, [X0 + 0x710]
	0x01D34A60 BL 0x1C16D08
	0x01D34A64 MOV X3, X0
	0x01D34A68 MOV X0, X20
	0x01D34A6C MOV X1, X22
	0x01D34A70 MOV X2, X21
	0x01D34A74 BL 0x1990510
	0x01D34A78 ADRP X0, 0x23BF000
	0x01D34A7C LDR X0, [X0 + 0x788]
	0x01D34A80 BL 0x1C16D08
	0x01D34A84 BL 0x19903D0
	0x01D34A88 ADRP X0, 0x23BF000
	0x01D34A8C LDR X0, [X0 + 0x790]
	0x01D34A90 BL 0x1C16D08
	0x01D34A94 MOV X21, X0
	0x01D34A98 ADRP X0, 0x23BF000
	0x01D34A9C LDR X0, [X0 + 0x7B0]
	0x01D34AA0 BL 0x1C16D08
	0x01D34AA4 MOV X4, X0
	0x01D34AA8 MOVZ W0, 0x100
	0x01D34AAC MOVZ W5, 0xC5
	0x01D34AB0 MOV X1, X19
	0x01D34AB4 MOV X2, X20
	0x01D34AB8 MOV X3, X21
	0x01D34ABC MOV X6, X31
	0x01D34AC0 BL 0x35C2524
	0x01D34AC4 ADRP X0, 0x23BF000
	0x01D34AC8 LDR X0, [X0 + 0x808]
	0x01D34ACC BL 0x1C16D08
	0x01D34AD0 MOV X1, X0
	0x01D34AD4 MOV X0, X19
	0x01D34AD8 BL 0x1C16DEC
	0x01D34ADC ADRP X19, 0x23BF000
	0x01D34AE0 LDR X19, [X19 + 0x648]
	0x01D34AE4 MOV X0, X19
	0x01D34AE8 BL 0x1C16D08
	0x01D34AEC BL 0x19903D0
	0x01D34AF0 MOV X0, X19
	0x01D34AF4 BL 0x1C16D08
	0x01D34AF8 LDR X8, [X0 + 0xB8]
	0x01D34AFC ADRP X0, 0x23BF000
	0x01D34B00 LDRB W19, [X8 + 0x19]
	0x01D34B04 LDR X0, [X0 + 0x7E8]
	0x01D34B08 BL 0x1C16D08
	0x01D34B0C BL 0x1C16F10
	0x01D34B10 MOV X20, X0
	0x01D34B14 ADRP X0, 0x23BF000
	0x01D34B18 LDR X0, [X0 + 0x810]
	0x01D34B1C BL 0x1C16D08
	0x01D34B20 MOV X1, X0
	0x01D34B24 MOV X0, X20
	0x01D34B28 MOV W2, W19
	0x01D34B2C BL 0x1D35298
	0x01D34B30 MOV X0, X20
	0x01D34B34 BL 0x19903C0
	0x01D34B38 LDR X8, [X20]
	0x01D34B3C MOV X0, X20
	0x01D34B40 LDP X9, X1, [X8 + 0x198]
	0x01D34B44 BLR X9
	0x01D34B48 MOV X19, X0
	0x01D34B4C MOV X0, X22
	0x01D34B50 BL 0x1D35310
	0x01D34B54 MOV X21, X0
	0x01D34B58 MOV X0, X19
	0x01D34B5C BL 0x19903C0
	0x01D34B60 ADRP X0, 0x23BF000
	0x01D34B64 LDR X0, [X0 + 0x818]
	0x01D34B68 BL 0x1C16D08
	0x01D34B6C MOV X22, X0
	0x01D34B70 ADRP X0, 0x23BF000
	0x01D34B74 LDR X0, [X0 + 0x7F8]
	0x01D34B78 BL 0x1C16D08
	0x01D34B7C MOV X3, X0
	0x01D34B80 MOVZ W0, 0x1
	0x01D34B84 MOV X1, X22
	0x01D34B88 MOV X2, X19
	0x01D34B8C MOV X4, X21
	0x01D34B90 BL 0x1990514
	0x01D34B94 ADRP X0, 0x23BF000
	0x01D34B98 LDR X0, [X0 + 0x808]
	0x01D34B9C BL 0x1C16D08
	0x01D34BA0 MOV X1, X0
	0x01D34BA4 MOV X0, X20
	0x01D34BA8 BL 0x1C16DEC
	0x01D34BAC STR W27, [X31 + 0x4]
	0x01D34BB0 BL 0x1C16F20
	0x01D34BB4 BL 0x1C16F20
	0x01D34BB8 BL 0x1C16F20
	0x01D34BBC STR W27, [X31 + 0x4]
	0x01D34BC0 BL 0x1C16F20
	0x01D34BC4 BL 0x1C16F20
	0x01D34BC8 BL 0x1C16F20
	0x01D34BCC STR W27, [X31 + 0x4]
	0x01D34BD0 BL 0x1C16F20
	0x01D34BD4 BL 0x1C16F20
	0x01D34BD8 STR W27, [X31 + 0x4]
	0x01D34BDC BL 0x1C16F20
	0x01D34BE0 STR W27, [X31 + 0x4]
	0x01D34BE4 BL 0x1C16F20
	0x01D34BE8 BL 0x1C16F20
	0x01D34BEC MOV X0, X22
	0x01D34BF0 BL 0x1C16F18
	0x01D34BF4 MOVZ W0, 0x8
	0x01D34BF8 BL 0x3EB1AF0
	0x01D34BFC LDR X8, [X25]
	0x01D34C00 STR X8, [X0]
	0x01D34C04 ADRP X1, 0x2180000
	0x01D34C08 ADD X1, X1, 0xE58
	0x01D34C0C MOV X2, X31
	0x01D34C10 BL 0x3EB1B00
	0x01D34C14 B 0x1D34E38
	0x01D34C18 BL 0x1C16F20
	0x01D34C1C BL 0x1C16F20
	0x01D34C20 BL 0x1C16F20
	0x01D34C24 B 0x1D34D4C
	0x01D34C28 B 0x1D34C48
	0x01D34C2C B 0x1D34D48
	0x01D34C30 B 0x1D34D4C
	0x01D34C34 B 0x1D34D4C
	0x01D34C38 B 0x1D34D4C
	0x01D34C3C MOV X21, X1
	0x01D34C40 MOV X29, X0
	0x01D34C44 B 0x1D34C54
	0x01D34C48 MOV X21, X1
	0x01D34C4C MOV X29, X0
	0x01D34C50 BL 0x3EB1AE0
	0x01D34C54 B 0x1D34D54
	0x01D34C58 B 0x1D34D4C
	0x01D34C5C B 0x1D34D48
	0x01D34C60 B 0x1D34D4C
	0x01D34C64 B 0x1D34D4C
	0x01D34C68 B 0x1D34D48
	0x01D34C6C B 0x1D34D4C
	0x01D34C70 B 0x1D34D48
	0x01D34C74 B 0x1D34D4C
	0x01D34C78 B 0x1D34D48
	0x01D34C7C B 0x1D34D48
	0x01D34C80 B 0x1D34D4C
	0x01D34C84 B 0x1D34D48
	0x01D34C88 B 0x1D34D48
	0x01D34C8C B 0x1D34D48
	0x01D34C90 B 0x1D34D4C
	0x01D34C94 B 0x1D34D48
	0x01D34C98 B 0x1D34D4C
	0x01D34C9C B 0x1D34D48
	0x01D34CA0 B 0x1D34D4C
	0x01D34CA4 B 0x1D34D48
	0x01D34CA8 B 0x1D34D48
	0x01D34CAC B 0x1D34D48
	0x01D34CB0 STR W27, [X31 + 0x4]
	0x01D34CB4 MOV X21, X1
	0x01D34CB8 MOV X29, X0
	0x01D34CBC B 0x1D34D54
	0x01D34CC0 B 0x1D34D48
	0x01D34CC4 B 0x1D34D48
	0x01D34CC8 B 0x1D34D48
	0x01D34CCC B 0x1D34CF4
	0x01D34CD0 B 0x1D34CF4
	0x01D34CD4 B 0x1D34CF4
	0x01D34CD8 B 0x1D34CF4
	0x01D34CDC B 0x1D34CF4
	0x01D34CE0 B 0x1D34CF4
	0x01D34CE4 B 0x1D34CF4
	0x01D34CE8 B 0x1D34CF4
	0x01D34CEC B 0x1D34D48
	0x01D34CF0 B 0x1D34CF4
	0x01D34CF4 MOV X29, X0
	0x01D34CF8 CMP W1, 0x1
	0x01D34CFC B.NE 0x1D34D18
	0x01D34D00 MOV X0, X29
	0x01D34D04 BL 0x3EB1AD0
	0x01D34D08 LDR X22, [X0]
	0x01D34D0C BL 0x3EB1AE0
	0x01D34D10 MOV W19, W31
	0x01D34D14 B 0x1D34748
	0x01D34D18 MOV X22, X31
	0x01D34D1C ADRP X8, 0x23BF000
	0x01D34D20 LDR X8, [X8 + 0x728]
	0x01D34D24 MOV W21, W1
	0x01D34D28 LDR X1, [X8]
	0x01D34D2C ADD X0, X31, 0x40
	0x01D34D30 BL 0x2BC434C
	0x01D34D34 CBZ X22, 0x1D34D54
	0x01D34D38 MOV X0, X22
	0x01D34D3C BL 0x1C16F18
	0x01D34D40 MOV X29, X0
	0x01D34D44 B 0x1D34D1C
	0x01D34D48 STR W27, [X31 + 0x4]
	0x01D34D4C MOV X29, X0
	0x01D34D50 MOV W21, W1
	0x01D34D54 CMP W21, 0x1
	0x01D34D58 B.EQ 0x1D34D8C
	0x01D34D5C MOVZ W8, 0x1
	0x01D34D60 CMP W21, W8
	0x01D34D64 B.NE 0x1D34E5C
	0x01D34D68 MOV X0, X29
	0x01D34D6C BL 0x3EB1AD0
	0x01D34D70 LDR X8, [X0]
	0x01D34D74 STR X8, [X31 + 0x30]
	0x01D34D78 BL 0x3EB1AE0
	0x01D34D7C ADRP X19, 0x23BF000
	0x01D34D80 LDR W27, [X31 + 0x4]
	0x01D34D84 LDR X19, [X19 + 0x648]
	0x01D34D88 B 0x1D34828
	0x01D34D8C MOV X0, X29
	0x01D34D90 BL 0x3EB1AD0
	0x01D34D94 MOV X21, X0
	0x01D34D98 ADRP X0, 0x23BF000
	0x01D34D9C LDR X0, [X0 + 0x7D0]
	0x01D34DA0 BL 0x1C16D08
	0x01D34DA4 LDR X8, [X21]
	0x01D34DA8 LDR X1, [X8]
	0x01D34DAC BL 0x1C17270
	0x01D34DB0 TBZ X0, 0x0, 0x1D34E18
	0x01D34DB4 LDR X21, [X21]
	0x01D34DB8 BL 0x3EB1AE0
	0x01D34DBC ADRP X0, 0x23BF000
	0x01D34DC0 LDR X0, [X0 + 0x788]
	0x01D34DC4 BL 0x1C16D08
	0x01D34DC8 LDR W8, [X0 + 0xE0]
	0x01D34DCC CBNZ W8, 0x1D34DD4
	0x01D34DD0 BL 0x1C16DFC
	0x01D34DD4 ADRP X0, 0x23BF000
	0x01D34DD8 LDR X0, [X0 + 0x790]
	0x01D34DDC BL 0x1C16D08
	0x01D34DE0 MOV X22, X0
	0x01D34DE4 ADRP X0, 0x23BF000
	0x01D34DE8 LDR X0, [X0 + 0x7B0]
	0x01D34DEC BL 0x1C16D08
	0x01D34DF0 MOV X4, X0
	0x01D34DF4 MOVZ W0, 0x100
	0x01D34DF8 MOVZ W5, 0x136
	0x01D34DFC MOV X1, X21
	0x01D34E00 MOV X2, X31
	0x01D34E04 MOV X3, X22
	0x01D34E08 MOV X6, X31
	0x01D34E0C BL 0x35C2524
	0x01D34E10 MOV X0, X21
	0x01D34E14 BL 0x1C16F18
	0x01D34E18 MOVZ W0, 0x8
	0x01D34E1C BL 0x3EB1AF0
	0x01D34E20 LDR X8, [X21]
	0x01D34E24 STR X8, [X0]
	0x01D34E28 ADRP X1, 0x2180000
	0x01D34E2C ADD X1, X1, 0xE58
	0x01D34E30 MOV X2, X31
	0x01D34E34 BL 0x3EB1B00
	0x01D34E38 B 0x1D34E3C
	0x01D34E3C MOV X29, X0
	0x01D34E40 MOV W21, W1
	0x01D34E44 B 0x1D34D5C
	0x01D34E48 MOV X21, X1
	0x01D34E4C MOV X29, X0
	0x01D34E50 BL 0x3EB1AE0
	0x01D34E54 B 0x1D34D5C
	0x01D34E58 MOV X29, X0
	0x01D34E5C ADD X0, X31, 0x30
	0x01D34E60 BL 0x199059C
	0x01D34E64 MOV X0, X29
	0x01D34E68 BL 0x1D2C690
	0x01D34E6C BL 0x1990590
	0x01D34E70 STP X30, X21, [X31 - 0x20]!
	0x01D34E74 STP X20, X19, [X31 + 0x10]
	0x01D34E78 ADRP X21, 0x26A4000
	0x01D34E7C ADRP X20, 0x23BF000
	0x01D34E80 LDRB W8, [X21 + 0x6D3]
	0x01D34E84 LDR X20, [X20 + 0x648]
	0x01D34E88 MOV X19, X0
	0x01D34E8C TBNZ X8, 0x0, 0x1D34EB0
	0x01D34E90 ADRP X0, 0x23BF000
	0x01D34E94 LDR X0, [X0 + 0x648]
	0x01D34E98 BL 0x1C16CF4
	0x01D34E9C ADRP X0, 0x23BF000
	0x01D34EA0 LDR X0, [X0 + 0x820]
	0x01D34EA4 BL 0x1C16CF4
	0x01D34EA8 MOVZ W8, 0x1
	0x01D34EAC STRB W8, [X21 + 0x6D3]
	0x01D34EB0 LDR X0, [X20]
	0x01D34EB4 LDR W8, [X0 + 0xE0]
	0x01D34EB8 CBNZ W8, 0x1D34EC0
	0x01D34EBC BL 0x1C16DFC
	0x01D34EC0 ADRP X21, 0x26A4000
	0x01D34EC4 LDRB W8, [X21 + 0x787]
	0x01D34EC8 CBNZ W8, 0x1D34EE0
	0x01D34ECC ADRP X0, 0x23BF000
	0x01D34ED0 LDR X0, [X0 + 0x648]
	0x01D34ED4 BL 0x1C16CF4
	0x01D34ED8 MOVZ W8, 0x1
	0x01D34EDC STRB W8, [X21 + 0x787]
	0x01D34EE0 LDR X0, [X20]
	0x01D34EE4 LDR W8, [X0 + 0xE0]
	0x01D34EE8 CBNZ W8, 0x1D34EF4
	0x01D34EEC BL 0x1C16DFC
	0x01D34EF0 LDR X0, [X20]
	0x01D34EF4 LDR X8, [X0 + 0xB8]
	0x01D34EF8 LDR X8, [X8]
	0x01D34EFC CBZ X8, 0x1D34FAC
	0x01D34F00 LDR X8, [X8 + 0xA8]
	0x01D34F04 CBZ X8, 0x1D34FAC
	0x01D34F08 LDR X8, [X8 + 0x48]
	0x01D34F0C CBZ X8, 0x1D34FAC
	0x01D34F10 LDR W8, [X8 + 0x4C]
	0x01D34F14 CMP W8, 0x5
	0x01D34F18 B.NE 0x1D34F24
	0x01D34F1C MOVZ W20, 0x1
	0x01D34F20 B 0x1D34F88
	0x01D34F24 LDR W8, [X0 + 0xE0]
	0x01D34F28 CBNZ W8, 0x1D34F30
	0x01D34F2C BL 0x1C16DFC
	0x01D34F30 LDRB W8, [X21 + 0x787]
	0x01D34F34 CBNZ W8, 0x1D34F4C
	0x01D34F38 ADRP X0, 0x23BF000
	0x01D34F3C LDR X0, [X0 + 0x648]
	0x01D34F40 BL 0x1C16CF4
	0x01D34F44 MOVZ W8, 0x1
	0x01D34F48 STRB W8, [X21 + 0x787]
	0x01D34F4C LDR X0, [X20]
	0x01D34F50 LDR W8, [X0 + 0xE0]
	0x01D34F54 CBNZ W8, 0x1D34F60
	0x01D34F58 BL 0x1C16DFC
	0x01D34F5C LDR X0, [X20]
	0x01D34F60 LDR X8, [X0 + 0xB8]
	0x01D34F64 LDR X8, [X8]
	0x01D34F68 CBZ X8, 0x1D34FAC
	0x01D34F6C LDR X8, [X8 + 0xA8]
	0x01D34F70 CBZ X8, 0x1D34FAC
	0x01D34F74 LDR X8, [X8 + 0x58]
	0x01D34F78 CBZ X8, 0x1D34FAC
	0x01D34F7C LDR W8, [X8 + 0x4C]
	0x01D34F80 CMP W8, 0x5
	0x01D34F84 CSET W20, EQ
	0x01D34F88 LDR W8, [X0 + 0xE0]
	0x01D34F8C CBNZ W8, 0x1D34F94
	0x01D34F90 BL 0x1C16DFC
	0x01D34F94 MOV W0, W20
	0x01D34F98 MOV X1, X19
	0x01D34F9C LDP X20, X19, [X31 + 0x10]
	0x01D34FA0 MOVZ W2, 0x1
	0x01D34FA4 LDP X30, X21, [X31], #0x20
	0x01D34FA8 B 0x1D3360C
	0x01D34FAC BL 0x1C16F20
	0x01D34FB0 STP X30, X21, [X31 - 0x20]!
	0x01D34FB4 STP X20, X19, [X31 + 0x10]
	0x01D34FB8 ADRP X21, 0x26A4000
	0x01D34FBC ADRP X20, 0x23BF000
	0x01D34FC0 LDRB W8, [X21 + 0x6D5]
	0x01D34FC4 LDR X20, [X20 + 0x648]
	0x01D34FC8 MOV X19, X0
	0x01D34FCC TBNZ X8, 0x0, 0x1D34FF0
	0x01D34FD0 ADRP X0, 0x23BF000
	0x01D34FD4 LDR X0, [X0 + 0x648]
	0x01D34FD8 BL 0x1C16CF4
	0x01D34FDC ADRP X0, 0x23BF000
	0x01D34FE0 LDR X0, [X0 + 0x820]
	0x01D34FE4 BL 0x1C16CF4
	0x01D34FE8 MOVZ W8, 0x1
	0x01D34FEC STRB W8, [X21 + 0x6D5]
	0x01D34FF0 LDR X0, [X20]
	0x01D34FF4 LDR W8, [X0 + 0xE0]
	0x01D34FF8 CBNZ W8, 0x1D35000
	0x01D34FFC BL 0x1C16DFC
	0x01D35000 ADRP X21, 0x26A3000
	0x01D35004 LDRB W8, [X21 + 0x787]
	0x01D35008 CBNZ W8, 0x1D35020
	0x01D3500C ADRP X0, 0x23BE000
	0x01D35010 LDR X0, [X0 + 0x648]
	0x01D35014 BL 0x1C16CF4
	0x01D35018 MOVZ W8, 0x1
	0x01D3501C STRB W8, [X21 + 0x787]
	0x01D35020 LDR X0, [X20]
	0x01D35024 LDR W8, [X0 + 0xE0]
	0x01D35028 CBNZ W8, 0x1D35034
	0x01D3502C BL 0x1C16DFC
	0x01D35030 LDR X0, [X20]
	0x01D35034 LDR X8, [X0 + 0xB8]
	0x01D35038 LDR X8, [X8]
	0x01D3503C CBZ X8, 0x1D350EC
	0x01D35040 LDR X8, [X8 + 0xA8]
	0x01D35044 CBZ X8, 0x1D350EC
	0x01D35048 LDR X8, [X8 + 0x48]
	0x01D3504C CBZ X8, 0x1D350EC
	0x01D35050 LDR W8, [X8 + 0x4C]
	0x01D35054 CMP W8, 0x5
	0x01D35058 B.NE 0x1D35064
	0x01D3505C MOVZ W20, 0x1
	0x01D35060 B 0x1D350C8
	0x01D35064 LDR W8, [X0 + 0xE0]
	0x01D35068 CBNZ W8, 0x1D35070
	0x01D3506C BL 0x1C16DFC
	0x01D35070 LDRB W8, [X21 + 0x787]
	0x01D35074 CBNZ W8, 0x1D3508C
	0x01D35078 ADRP X0, 0x23BE000
	0x01D3507C LDR X0, [X0 + 0x648]
	0x01D35080 BL 0x1C16CF4
	0x01D35084 MOVZ W8, 0x1
	0x01D35088 STRB W8, [X21 + 0x787]
	0x01D3508C LDR X0, [X20]
	0x01D35090 LDR W8, [X0 + 0xE0]
	0x01D35094 CBNZ W8, 0x1D350A0
	0x01D35098 BL 0x1C16DFC
	0x01D3509C LDR X0, [X20]
	0x01D350A0 LDR X8, [X0 + 0xB8]
	0x01D350A4 LDR X8, [X8]
	0x01D350A8 CBZ X8, 0x1D350EC
	0x01D350AC LDR X8, [X8 + 0xA8]
	0x01D350B0 CBZ X8, 0x1D350EC
	0x01D350B4 LDR X8, [X8 + 0x58]
	0x01D350B8 CBZ X8, 0x1D350EC
	0x01D350BC LDR W8, [X8 + 0x4C]
	0x01D350C0 CMP W8, 0x5
	0x01D350C4 CSET W20, EQ
	0x01D350C8 LDR W8, [X0 + 0xE0]
	0x01D350CC CBNZ W8, 0x1D350D4
	0x01D350D0 BL 0x1C16DFC
	0x01D350D4 MOV W0, W20
	0x01D350D8 MOV X1, X19
	0x01D350DC LDP X20, X19, [X31 + 0x10]
	0x01D350E0 MOVZ W2, 0x1
	0x01D350E4 LDP X30, X21, [X31], #0x20
	0x01D350E8 B 0x1D3360C
	0x01D350EC BL 0x1C16F20
	0x01D350F0 STP X30, X21, [X31 - 0x20]!
	0x01D350F4 STP X20, X19, [X31 + 0x10]
	0x01D350F8 ADRP X21, 0x26A3000
	0x01D350FC ADRP X20, 0x23BE000
	0x01D35100 LDRB W8, [X21 + 0x6D6]
	0x01D35104 LDR X20, [X20 + 0x648]
	0x01D35108 MOV X19, X0
	0x01D3510C TBNZ X8, 0x0, 0x1D35130
	0x01D35110 ADRP X0, 0x23BE000
	0x01D35114 LDR X0, [X0 + 0x648]
	0x01D35118 BL 0x1C16CF4
	0x01D3511C ADRP X0, 0x23BE000
	0x01D35120 LDR X0, [X0 + 0x828]
	0x01D35124 BL 0x1C16CF4
	0x01D35128 MOVZ W8, 0x1
	0x01D3512C STRB W8, [X21 + 0x6D6]
	0x01D35130 LDR X0, [X20]
	0x01D35134 LDR W8, [X0 + 0xE0]
	0x01D35138 CBNZ W8, 0x1D35144
	0x01D3513C BL 0x1C16DFC
	0x01D35140 LDR X0, [X20]
	0x01D35144 LDR X8, [X0 + 0xB8]
	0x01D35148 LDRB W9, [X8 + 0x1A]
	0x01D3514C CBNZ W9, 0x1D3516C
	0x01D35150 LDR W9, [X0 + 0xE0]
	0x01D35154 CBNZ W9, 0x1D35164
	0x01D35158 BL 0x1C16DFC
	0x01D3515C LDR X0, [X20]
	0x01D35160 LDR X8, [X0 + 0xB8]
	0x01D35164 LDRB W8, [X8 + 0x18]
	0x01D35168 CBZ W8, 0x1D351A4
	0x01D3516C LDR W8, [X0 + 0xE0]
	0x01D35170 CBNZ W8, 0x1D3517C
	0x01D35174 BL 0x1C16DFC
	0x01D35178 LDR X0, [X20]
	0x01D3517C LDR X8, [X0 + 0xB8]
	0x01D35180 LDR X0, [X8 + 0x20]
	0x01D35184 CBZ X0, 0x1D351C0
	0x01D35188 ADRP X8, 0x23BE000
	0x01D3518C LDR X8, [X8 + 0x828]
	0x01D35190 MOV X1, X19
	0x01D35194 LDP X20, X19, [X31 + 0x10]
	0x01D35198 LDR X2, [X8]
	0x01D3519C LDP X30, X21, [X31], #0x20
	0x01D351A0 B 0x301C194
	0x01D351A4 LDR W8, [X0 + 0xE0]
	0x01D351A8 CBNZ W8, 0x1D351B0
	0x01D351AC BL 0x1C16DFC
	0x01D351B0 MOV X0, X19
	0x01D351B4 LDP X20, X19, [X31 + 0x10]
	0x01D351B8 LDP X30, X21, [X31], #0x20
	0x01D351BC B 0x1D33554
	0x01D351C0 BL 0x1C16F20
	0x01D351C4 STP X30, X21, [X31 - 0x20]!
	0x01D351C8 STP X20, X19, [X31 + 0x10]
	0x01D351CC ADRP X21, 0x26A3000
	0x01D351D0 ADRP X20, 0x23BE000
	0x01D351D4 LDRB W8, [X21 + 0x6D7]
	0x01D351D8 LDR X20, [X20 + 0x648]
	0x01D351DC MOV X19, X0
	0x01D351E0 TBNZ X8, 0x0, 0x1D35204
	0x01D351E4 ADRP X0, 0x23BE000
	0x01D351E8 LDR X0, [X0 + 0x648]
	0x01D351EC BL 0x1C16CF4
	0x01D351F0 ADRP X0, 0x23BE000
	0x01D351F4 LDR X0, [X0 + 0x828]
	0x01D351F8 BL 0x1C16CF4
	0x01D351FC MOVZ W8, 0x1
	0x01D35200 STRB W8, [X21 + 0x6D7]
	0x01D35204 LDR X0, [X20]
	0x01D35208 LDR W8, [X0 + 0xE0]
	0x01D3520C CBNZ W8, 0x1D35218
	0x01D35210 BL 0x1C16DFC
	0x01D35214 LDR X0, [X20]
	0x01D35218 LDR X8, [X0 + 0xB8]
	0x01D3521C LDRB W9, [X8 + 0x1A]
	0x01D35220 CBNZ W9, 0x1D35240
	0x01D35224 LDR W9, [X0 + 0xE0]
	0x01D35228 CBNZ W9, 0x1D35238
	0x01D3522C BL 0x1C16DFC
	0x01D35230 LDR X0, [X20]
	0x01D35234 LDR X8, [X0 + 0xB8]
	0x01D35238 LDRB W8, [X8 + 0x18]
	0x01D3523C CBZ W8, 0x1D35278
	0x01D35240 LDR W8, [X0 + 0xE0]
	0x01D35244 CBNZ W8, 0x1D35250
	0x01D35248 BL 0x1C16DFC
	0x01D3524C LDR X0, [X20]
	0x01D35250 LDR X8, [X0 + 0xB8]
	0x01D35254 LDR X0, [X8 + 0x20]
	0x01D35258 CBZ X0, 0x1D35294
	0x01D3525C ADRP X8, 0x23BE000
	0x01D35260 LDR X8, [X8 + 0x828]
	0x01D35264 MOV X1, X19
	0x01D35268 LDP X20, X19, [X31 + 0x10]
	0x01D3526C LDR X2, [X8]
	0x01D35270 LDP X30, X21, [X31], #0x20
	0x01D35274 B 0x301C194
	0x01D35278 LDR W8, [X0 + 0xE0]
	0x01D3527C CBNZ W8, 0x1D35284
	0x01D35280 BL 0x1C16DFC
	0x01D35284 MOV X0, X19
	0x01D35288 LDP X20, X19, [X31 + 0x10]
	0x01D3528C LDP X30, X21, [X31], #0x20
	0x01D35290 B 0x1D335B0
	0x01D35294 BL 0x1C16F20
	0x01D35298 STP X30, X23, [X31 - 0x30]!
	0x01D3529C STP X22, X21, [X31 + 0x10]
	0x01D352A0 STP X20, X19, [X31 + 0x20]
	0x01D352A4 ADRP X22, 0x26A3000
	0x01D352A8 ADRP X23, 0x23BE000
	0x01D352AC LDRB W8, [X22 + 0x6E6]
	0x01D352B0 LDR X23, [X23 + 0x7D0]
	0x01D352B4 MOV W19, W2
	0x01D352B8 MOV X21, X1
	0x01D352BC MOV X20, X0
	0x01D352C0 TBNZ X8, 0x0, 0x1D352D8
	0x01D352C4 ADRP X0, 0x23BE000
	0x01D352C8 LDR X0, [X0 + 0x7D0]
	0x01D352CC BL 0x1C16CF4
	0x01D352D0 MOVZ W8, 0x1
	0x01D352D4 STRB W8, [X22 + 0x6E6]
	0x01D352D8 LDR X0, [X23]
	0x01D352DC LDR W8, [X0 + 0xE0]
	0x01D352E0 CBNZ W8, 0x1D352E8
	0x01D352E4 BL 0x1C16DFC
	0x01D352E8 MOV X0, X20
	0x01D352EC MOV X1, X21
	0x01D352F0 MOV X2, X31
	0x01D352F4 BL 0x33B2C70
	0x01D352F8 AND W8, W19, 0x1
	0x01D352FC STRB W8, [X20 + 0x8C]
	0x01D35300 LDP X20, X19, [X31 + 0x20]
	0x01D35304 LDP X22, X21, [X31 + 0x10]
	0x01D35308 LDP X30, X23, [X31], #0x30
	0x01D3530C RET
	0x01D35310 STP X29, X30, [X31 - 0x60]!
	0x01D35314 STP X28, X27, [X31 + 0x10]
	0x01D35318 STP X26, X25, [X31 + 0x20]
	0x01D3531C STP X24, X23, [X31 + 0x30]
	0x01D35320 STP X22, X21, [X31 + 0x40]
	0x01D35324 STP X20, X19, [X31 + 0x50]
	0x01D35328 ADRP X20, 0x26A3000
	0x01D3532C LDRB W8, [X20 + 0x6DB]
	0x01D35330 MOV X19, X0
	0x01D35334 TBNZ X8, 0x0, 0x1D353AC
	0x01D35338 ADRP X0, 0x23BE000
	0x01D3533C LDR X0, [X0 + 0x648]
	0x01D35340 BL 0x1C16CF4
	0x01D35344 ADRP X0, 0x23BE000
	0x01D35348 LDR X0, [X0 + 0x740]
	0x01D3534C BL 0x1C16CF4
	0x01D35350 ADRP X0, 0x23BE000
	0x01D35354 LDR X0, [X0 + 0x748]
	0x01D35358 BL 0x1C16CF4
	0x01D3535C ADRP X0, 0x23BE000
	0x01D35360 LDR X0, [X0 + 0x5A8]
	0x01D35364 BL 0x1C16CF4
	0x01D35368 ADRP X0, 0x23BE000
	0x01D3536C LDR X0, [X0 + 0x830]
	0x01D35370 BL 0x1C16CF4
	0x01D35374 ADRP X0, 0x23BE000
	0x01D35378 LDR X0, [X0 + 0x838]
	0x01D3537C BL 0x1C16CF4
	0x01D35380 ADRP X0, 0x23BE000
	0x01D35384 LDR X0, [X0 + 0x840]
	0x01D35388 BL 0x1C16CF4
	0x01D3538C ADRP X0, 0x23BE000
	0x01D35390 LDR X0, [X0 + 0x848]
	0x01D35394 BL 0x1C16CF4
	0x01D35398 ADRP X0, 0x23BE000
	0x01D3539C LDR X0, [X0 + 0x850]
	0x01D353A0 BL 0x1C16CF4
	0x01D353A4 MOVZ W8, 0x1
	0x01D353A8 STRB W8, [X20 + 0x6DB]
	0x01D353AC CBZ X19, 0x1D357D8
	0x01D353B0 ADRP X24, 0x23BE000
	0x01D353B4 LDR X8, [X19]
	0x01D353B8 LDR X24, [X24 + 0x740]
	0x01D353BC LDRH W9, [X8 + 0x12E]
	0x01D353C0 LDR X1, [X24]
	0x01D353C4 CBZ X9, 0x1D353E8
	0x01D353C8 LDR X10, [X8 + 0xB0]
	0x01D353CC ADD X10, X10, 0x8
	0x01D353D0 LDUR X11, [X10 - 0x8]
	0x01D353D4 CMP X11, X1
	0x01D353D8 B.EQ 0x1D353F8
	0x01D353DC SUBS X9, X9, 0x1
	0x01D353E0 ADD X10, X10, 0x10
	0x01D353E4 B.NE 0x1D353D0
	0x01D353E8 MOV X0, X19
	0x01D353EC MOV W2, W31
	0x01D353F0 BL 0x1C5C788
	0x01D353F4 B 0x1D35404
	0x01D353F8 LDRSW X9, [X10]
	0x01D353FC ADD X8, X8, X9, 0x4, LSL
	0x01D35400 ADD X0, X8, 0x138
	0x01D35404 LDP X8, X1, [X0]
	0x01D35408 MOV X0, X19
	0x01D3540C BLR X8
	0x01D35410 CMP W0, 0x2
	0x01D35414 B.GE 0x1D35460
	0x01D35418 ADRP X10, 0x23BE000
	0x01D3541C LDR X8, [X19]
	0x01D35420 LDR X10, [X10 + 0x748]
	0x01D35424 LDRH W9, [X8 + 0x12E]
	0x01D35428 LDR X1, [X10]
	0x01D3542C CBZ X9, 0x1D35450
	0x01D35430 LDR X10, [X8 + 0xB0]
	0x01D35434 ADD X10, X10, 0x8
	0x01D35438 LDUR X11, [X10 - 0x8]
	0x01D3543C CMP X11, X1
	0x01D35440 B.EQ 0x1D354D0
	0x01D35444 SUBS X9, X9, 0x1
	0x01D35448 ADD X10, X10, 0x10
	0x01D3544C B.NE 0x1D35438
	0x01D35450 MOV X0, X19
	0x01D35454 MOV W2, W31
	0x01D35458 BL 0x1C5C788
	0x01D3545C B 0x1D354DC
	0x01D35460 ADRP X23, 0x23BE000
	0x01D35464 LDR X23, [X23 + 0x648]
	0x01D35468 LDR X0, [X23]
	0x01D3546C LDR W8, [X0 + 0xE0]
	0x01D35470 CBNZ W8, 0x1D3547C
	0x01D35474 BL 0x1C16DFC
	0x01D35478 LDR X0, [X23]
	0x01D3547C LDR X8, [X0 + 0xB8]
	0x01D35480 LDR X0, [X8 + 0x68]
	0x01D35484 CBZ X0, 0x1D357D8
	0x01D35488 MOV X1, X31
	0x01D3548C BL 0x3232AC0
	0x01D35490 LDR X8, [X19]
	0x01D35494 LDR X1, [X24]
	0x01D35498 LDRH W9, [X8 + 0x12E]
	0x01D3549C CBZ X9, 0x1D354C0
	0x01D354A0 LDR X10, [X8 + 0xB0]
	0x01D354A4 ADD X10, X10, 0x8
	0x01D354A8 LDUR X11, [X10 - 0x8]
	0x01D354AC CMP X11, X1
	0x01D354B0 B.EQ 0x1D35514
	0x01D354B4 SUBS X9, X9, 0x1
	0x01D354B8 ADD X10, X10, 0x10
	0x01D354BC B.NE 0x1D354A8
	0x01D354C0 MOV X0, X19
	0x01D354C4 MOV W2, W31
	0x01D354C8 BL 0x1C5C788
	0x01D354CC B 0x1D35520
	0x01D354D0 LDRSW X9, [X10]
	0x01D354D4 ADD X8, X8, X9, 0x4, LSL
	0x01D354D8 ADD X0, X8, 0x138
	0x01D354DC LDP X8, X2, [X0]
	0x01D354E0 MOV X0, X19
	0x01D354E4 MOV W1, W31
	0x01D354E8 BLR X8
	0x01D354EC CBZ X0, 0x1D357D8
	0x01D354F0 MOV X1, X31
	0x01D354F4 BL 0x33BE520
	0x01D354F8 LDP X20, X19, [X31 + 0x50]
	0x01D354FC LDP X22, X21, [X31 + 0x40]
	0x01D35500 LDP X24, X23, [X31 + 0x30]
	0x01D35504 LDP X26, X25, [X31 + 0x20]
	0x01D35508 LDP X28, X27, [X31 + 0x10]
	0x01D3550C LDP X29, X30, [X31], #0x60
	0x01D35510 B 0x1D35CD4
	0x01D35514 LDRSW X9, [X10]
	0x01D35518 ADD X8, X8, X9, 0x4, LSL
	0x01D3551C ADD X0, X8, 0x138
	0x01D35520 LDP X8, X1, [X0]
	0x01D35524 MOV X0, X19
	0x01D35528 BLR X8
	0x01D3552C ADRP X8, 0x23BE000
	0x01D35530 LDR X8, [X8 + 0x5A8]
	0x01D35534 MOV W20, W0
	0x01D35538 LDR X8, [X8]
	0x01D3553C LDR W9, [X8 + 0xE0]
	0x01D35540 CBNZ W9, 0x1D3554C
	0x01D35544 MOV X0, X8
	0x01D35548 BL 0x1C16DFC
	0x01D3554C MOVZ W0, 0x5
	0x01D35550 MOV W1, W20
	0x01D35554 MOV X2, X31
	0x01D35558 BL 0x337EE94
	0x01D3555C MOV W20, W0
	0x01D35560 SUBS W25, W0, 0x1
	0x01D35564 B.LT 0x1D356D8
	0x01D35568 ADRP X27, 0x23BE000
	0x01D3556C ADRP X28, 0x23BE000
	0x01D35570 ADRP X29, 0x23BE000
	0x01D35574 LDR X27, [X27 + 0x748]
	0x01D35578 LDR X28, [X28 + 0x830]
	0x01D3557C LDR X29, [X29 + 0x838]
	0x01D35580 MOV W21, W31
	0x01D35584 MOV X26, X31
	0x01D35588 LDR X0, [X23]
	0x01D3558C LDR W8, [X0 + 0xE0]
	0x01D35590 CBNZ W8, 0x1D3559C
	0x01D35594 BL 0x1C16DFC
	0x01D35598 LDR X0, [X23]
	0x01D3559C LDR X9, [X0 + 0xB8]
	0x01D355A0 LDR X8, [X19]
	0x01D355A4 LDR X1, [X27]
	0x01D355A8 LDR X22, [X9 + 0x68]
	0x01D355AC LDRH W9, [X8 + 0x12E]
	0x01D355B0 CBZ X9, 0x1D355D4
	0x01D355B4 LDR X10, [X8 + 0xB0]
	0x01D355B8 ADD X10, X10, 0x8
	0x01D355BC LDUR X11, [X10 - 0x8]
	0x01D355C0 CMP X11, X1
	0x01D355C4 B.EQ 0x1D355E4
	0x01D355C8 SUBS X9, X9, 0x1
	0x01D355CC ADD X10, X10, 0x10
	0x01D355D0 B.NE 0x1D355BC
	0x01D355D4 MOV X0, X19
	0x01D355D8 MOV W2, W31
	0x01D355DC BL 0x1C5C788
	0x01D355E0 B 0x1D355F0
	0x01D355E4 LDRSW X9, [X10]
	0x01D355E8 ADD X8, X8, X9, 0x4, LSL
	0x01D355EC ADD X0, X8, 0x138
	0x01D355F0 LDP X8, X2, [X0]
	0x01D355F4 MOV X0, X19
	0x01D355F8 MOV W1, W21
	0x01D355FC BLR X8
	0x01D35600 CMP X0, 0x0
	0x01D35604 CSEL X26, X26, X22, EQ
	0x01D35608 CBZ X0, 0x1D3564C
	0x01D3560C LDR X8, [X19]
	0x01D35610 LDR X1, [X27]
	0x01D35614 LDRH W9, [X8 + 0x12E]
	0x01D35618 CBZ X9, 0x1D3563C
	0x01D3561C LDR X10, [X8 + 0xB0]
	0x01D35620 ADD X10, X10, 0x8
	0x01D35624 LDUR X11, [X10 - 0x8]
	0x01D35628 CMP X11, X1
	0x01D3562C B.EQ 0x1D35654
	0x01D35630 SUBS X9, X9, 0x1
	0x01D35634 ADD X10, X10, 0x10
	0x01D35638 B.NE 0x1D35624
	0x01D3563C MOV X0, X19
	0x01D35640 MOV W2, W31
	0x01D35644 BL 0x1C5C788
	0x01D35648 B 0x1D35660
	0x01D3564C LDR X1, [X28]
	0x01D35650 B 0x1D35688
	0x01D35654 LDRSW X9, [X10]
	0x01D35658 ADD X8, X8, X9, 0x4, LSL
	0x01D3565C ADD X0, X8, 0x138
	0x01D35660 LDP X8, X2, [X0]
	0x01D35664 MOV X0, X19
	0x01D35668 MOV W1, W21
	0x01D3566C BLR X8
	0x01D35670 CBZ X0, 0x1D357D8
	0x01D35674 MOV X1, X31
	0x01D35678 BL 0x33BE520
	0x01D3567C BL 0x1D35CD4
	0x01D35680 MOV X1, X0
	0x01D35684 MOV X22, X26
	0x01D35688 CBZ X22, 0x1D357D8
	0x01D3568C MOV X0, X22
	0x01D35690 MOV X2, X31
	0x01D35694 BL 0x32333E0
	0x01D35698 CMP W21, W25
	0x01D3569C B.GE 0x1D356CC
	0x01D356A0 LDR X0, [X23]
	0x01D356A4 LDR W8, [X0 + 0xE0]
	0x01D356A8 CBNZ W8, 0x1D356B4
	0x01D356AC BL 0x1C16DFC
	0x01D356B0 LDR X0, [X23]
	0x01D356B4 LDR X8, [X0 + 0xB8]
	0x01D356B8 LDR X0, [X8 + 0x68]
	0x01D356BC CBZ X0, 0x1D357D8
	0x01D356C0 LDR X1, [X29]
	0x01D356C4 MOV X2, X31
	0x01D356C8 BL 0x32333E0
	0x01D356CC ADD W21, W21, 0x1
	0x01D356D0 CMP W21, W20
	0x01D356D4 B.NE 0x1D35588
	0x01D356D8 LDR X8, [X19]
	0x01D356DC LDR X1, [X24]
	0x01D356E0 LDRH W9, [X8 + 0x12E]
	0x01D356E4 CBZ X9, 0x1D35708
	0x01D356E8 LDR X10, [X8 + 0xB0]
	0x01D356EC ADD X10, X10, 0x8
	0x01D356F0 LDUR X11, [X10 - 0x8]
	0x01D356F4 CMP X11, X1
	0x01D356F8 B.EQ 0x1D35718
	0x01D356FC SUBS X9, X9, 0x1
	0x01D35700 ADD X10, X10, 0x10
	0x01D35704 B.NE 0x1D356F0
	0x01D35708 MOV X0, X19
	0x01D3570C MOV W2, W31
	0x01D35710 BL 0x1C5C788
	0x01D35714 B 0x1D35724
	0x01D35718 LDRSW X9, [X10]
	0x01D3571C ADD X8, X8, X9, 0x4, LSL
	0x01D35720 ADD X0, X8, 0x138
	0x01D35724 LDP X8, X1, [X0]
	0x01D35728 MOV X0, X19
	0x01D3572C BLR X8
	0x01D35730 CMP W20, W0
	0x01D35734 B.GE 0x1D3576C
	0x01D35738 LDR X0, [X23]
	0x01D3573C LDR W8, [X0 + 0xE0]
	0x01D35740 CBNZ W8, 0x1D3574C
	0x01D35744 BL 0x1C16DFC
	0x01D35748 LDR X0, [X23]
	0x01D3574C LDR X8, [X0 + 0xB8]
	0x01D35750 LDR X0, [X8 + 0x68]
	0x01D35754 CBZ X0, 0x1D357D8
	0x01D35758 ADRP X8, 0x23BE000
	0x01D3575C LDR X8, [X8 + 0x840]
	0x01D35760 MOV X2, X31
	0x01D35764 LDR X1, [X8]
	0x01D35768 BL 0x32333E0
	0x01D3576C LDR X0, [X23]
	0x01D35770 LDR W8, [X0 + 0xE0]
	0x01D35774 CBNZ W8, 0x1D35780
	0x01D35778 BL 0x1C16DFC
	0x01D3577C LDR X0, [X23]
	0x01D35780 LDR X8, [X0 + 0xB8]
	0x01D35784 LDR X0, [X8 + 0x68]
	0x01D35788 CBZ X0, 0x1D357D8
	0x01D3578C LDR X8, [X0]
	0x01D35790 LDP X9, X1, [X8 + 0x168]
	0x01D35794 BLR X9
	0x01D35798 ADRP X8, 0x23BE000
	0x01D3579C LDR X8, [X8 + 0x850]
	0x01D357A0 ADRP X9, 0x23BE000
	0x01D357A4 LDR X9, [X9 + 0x848]
	0x01D357A8 LDP X20, X19, [X31 + 0x50]
	0x01D357AC LDR X8, [X8]
	0x01D357B0 LDP X22, X21, [X31 + 0x40]
	0x01D357B4 LDR X2, [X9]
	0x01D357B8 LDP X24, X23, [X31 + 0x30]
	0x01D357BC LDP X26, X25, [X31 + 0x20]
	0x01D357C0 LDP X28, X27, [X31 + 0x10]
	0x01D357C4 MOV X1, X0
	0x01D357C8 MOV X0, X8
	0x01D357CC MOV X3, X31
	0x01D357D0 LDP X29, X30, [X31], #0x60
	0x01D357D4 B 0x32274B8
	0x01D357D8 BL 0x1C16F20
	0x01D357DC MOV X1, X31
	0x01D357E0 B 0x33BDD8C
	0x01D357E4 STR X30, [X31 - 0x30]!
	0x01D357E8 STP X22, X21, [X31 + 0x10]
	0x01D357EC STP X20, X19, [X31 + 0x20]
	0x01D357F0 ADRP X19, 0x26A3000
	0x01D357F4 ADRP X21, 0x23BE000
	0x01D357F8 LDRB W8, [X19 + 0x6D9]
	0x01D357FC LDR X21, [X21 + 0x648]
	0x01D35800 TBNZ X8, 0x0, 0x1D35848
	0x01D35804 ADRP X0, 0x23BE000
	0x01D35808 LDR X0, [X0 + 0x648]
	0x01D3580C BL 0x1C16CF4
	0x01D35810 ADRP X0, 0x23BE000
	0x01D35814 LDR X0, [X0 + 0x828]
	0x01D35818 BL 0x1C16CF4
	0x01D3581C ADRP X0, 0x23BE000
	0x01D35820 LDR X0, [X0 + 0x700]
	0x01D35824 BL 0x1C16CF4
	0x01D35828 ADRP X0, 0x23BE000
	0x01D3582C LDR X0, [X0 + 0x770]
	0x01D35830 BL 0x1C16CF4
	0x01D35834 ADRP X0, 0x23BE000
	0x01D35838 LDR X0, [X0 + 0x5A8]
	0x01D3583C BL 0x1C16CF4
	0x01D35840 MOVZ W8, 0x1
	0x01D35844 STRB W8, [X19 + 0x6D9]
	0x01D35848 LDR X0, [X21]
	0x01D3584C LDR W8, [X0 + 0xE0]
	0x01D35850 CBNZ W8, 0x1D3585C
	0x01D35854 BL 0x1C16DFC
	0x01D35858 LDR X0, [X21]
	0x01D3585C LDR X8, [X0 + 0xB8]
	0x01D35860 LDR X9, [X8 + 0x20]
	0x01D35864 CBZ X9, 0x1D359C0
	0x01D35868 LDR W9, [X9 + 0x18]
	0x01D3586C CMP W9, 0x1
	0x01D35870 B.LT 0x1D359B0
	0x01D35874 LDR W9, [X0 + 0xE0]
	0x01D35878 CBNZ W9, 0x1D35888
	0x01D3587C BL 0x1C16DFC
	0x01D35880 LDR X8, [X21]
	0x01D35884 LDR X8, [X8 + 0xB8]
	0x01D35888 LDR X0, [X8 + 0x28]
	0x01D3588C CBZ X0, 0x1D359C0
	0x01D35890 LDP W2, W9, [X0 + 0x18]
	0x01D35894 ADD W9, W9, 0x1
	0x01D35898 CMP W2, 0x1
	0x01D3589C STP W31, W9, [X0 + 0x18]
	0x01D358A0 B.LT 0x1D358C4
	0x01D358A4 LDR X0, [X0 + 0x10]
	0x01D358A8 MOV W1, W31
	0x01D358AC MOV X3, X31
	0x01D358B0 BL 0x339FA34
	0x01D358B4 LDR X8, [X21]
	0x01D358B8 LDR X8, [X8 + 0xB8]
	0x01D358BC LDR X0, [X8 + 0x28]
	0x01D358C0 CBZ X0, 0x1D359C0
	0x01D358C4 ADRP X9, 0x23BE000
	0x01D358C8 LDR X9, [X9 + 0x828]
	0x01D358CC LDR X1, [X8 + 0x20]
	0x01D358D0 LDR X2, [X9]
	0x01D358D4 BL 0x301C194
	0x01D358D8 LDR X0, [X21]
	0x01D358DC LDR X8, [X0 + 0xB8]
	0x01D358E0 LDR X9, [X8 + 0x20]
	0x01D358E4 CBZ X9, 0x1D359C0
	0x01D358E8 LDP W2, W10, [X9 + 0x18]
	0x01D358EC ADD W10, W10, 0x1
	0x01D358F0 CMP W2, 0x1
	0x01D358F4 STP W31, W10, [X9 + 0x18]
	0x01D358F8 B.LT 0x1D35914
	0x01D358FC LDR X0, [X9 + 0x10]
	0x01D35900 MOV W1, W31
	0x01D35904 MOV X3, X31
	0x01D35908 BL 0x339FA34
	0x01D3590C LDR X0, [X21]
	0x01D35910 LDR X8, [X0 + 0xB8]
	0x01D35914 LDR W9, [X8 + 0x38]
	0x01D35918 CMP W9, 0x5
	0x01D3591C B.GE 0x1D359C4
	0x01D35920 ADRP X22, 0x23BE000
	0x01D35924 LDR W10, [X0 + 0xE0]
	0x01D35928 LDR X22, [X22 + 0x5A8]
	0x01D3592C CBNZ W10, 0x1D35940
	0x01D35930 BL 0x1C16DFC
	0x01D35934 LDR X8, [X21]
	0x01D35938 LDR X8, [X8 + 0xB8]
	0x01D3593C LDR W9, [X8 + 0x38]
	0x01D35940 LDR X0, [X8 + 0x28]
	0x01D35944 MOVZ W10, 0x1
	0x01D35948 ADD W9, W9, 0x1
	0x01D3594C STRB W10, [X8 + 0x19]
	0x01D35950 STR W9, [X8 + 0x38]
	0x01D35954 BL 0x1D33554
	0x01D35958 MOV X19, X31
	0x01D3595C LDR X0, [X21]
	0x01D35960 LDR W8, [X0 + 0xE0]
	0x01D35964 CBNZ W8, 0x1D35970
	0x01D35968 BL 0x1C16DFC
	0x01D3596C LDR X0, [X21]
	0x01D35970 LDR X8, [X22]
	0x01D35974 LDR X9, [X0 + 0xB8]
	0x01D35978 LDR W10, [X8 + 0xE0]
	0x01D3597C LDR W20, [X9 + 0x38]
	0x01D35980 CBNZ W10, 0x1D3598C
	0x01D35984 MOV X0, X8
	0x01D35988 BL 0x1C16DFC
	0x01D3598C SUB W1, W20, 0x1
	0x01D35990 MOV W0, W31
	0x01D35994 MOV X2, X31
	0x01D35998 BL 0x337EDF0
	0x01D3599C LDR X8, [X21]
	0x01D359A0 LDR X8, [X8 + 0xB8]
	0x01D359A4 STR W0, [X8 + 0x38]
	0x01D359A8 STRB W31, [X8 + 0x19]
	0x01D359AC CBNZ X19, 0x1D35A7C
	0x01D359B0 LDP X20, X19, [X31 + 0x20]
	0x01D359B4 LDP X22, X21, [X31 + 0x10]
	0x01D359B8 LDR X30, [X31], #0x30
	0x01D359BC RET
	0x01D359C0 BL 0x1C16F20
	0x01D359C4 ADRP X19, 0x23BE000
	0x01D359C8 LDR X19, [X19 + 0x648]
	0x01D359CC MOV X0, X19
	0x01D359D0 BL 0x1C16D08
	0x01D359D4 BL 0x19903D0
	0x01D359D8 MOV X0, X19
	0x01D359DC BL 0x1C16D08
	0x01D359E0 LDR X8, [X0 + 0xB8]
	0x01D359E4 ADRP X0, 0x23BE000
	0x01D359E8 STR W31, [X8 + 0x38]
	0x01D359EC LDR X0, [X0 + 0x858]
	0x01D359F0 BL 0x1C16D08
	0x01D359F4 BL 0x1C16F10
	0x01D359F8 MOV X19, X0
	0x01D359FC ADRP X0, 0x23BE000
	0x01D35A00 LDR X0, [X0 + 0x860]
	0x01D35A04 BL 0x1C16D08
	0x01D35A08 MOV X1, X0
	0x01D35A0C MOV X0, X19
	0x01D35A10 MOV X2, X31
	0x01D35A14 BL 0x338CB50
	0x01D35A18 ADRP X0, 0x23BE000
	0x01D35A1C LDR X0, [X0 + 0x788]
	0x01D35A20 BL 0x1C16D08
	0x01D35A24 BL 0x19903D0
	0x01D35A28 ADRP X0, 0x23BE000
	0x01D35A2C LDR X0, [X0 + 0x790]
	0x01D35A30 BL 0x1C16D08
	0x01D35A34 MOV X20, X0
	0x01D35A38 ADRP X0, 0x23BE000
	0x01D35A3C LDR X0, [X0 + 0x868]
	0x01D35A40 BL 0x1C16D08
	0x01D35A44 MOV X4, X0
	0x01D35A48 MOVZ W0, 0x100
	0x01D35A4C MOVZ W5, 0x160
	0x01D35A50 MOV X1, X19
	0x01D35A54 MOV X2, X31
	0x01D35A58 MOV X3, X20
	0x01D35A5C MOV X6, X31
	0x01D35A60 BL 0x35C2524
	0x01D35A64 ADRP X0, 0x23BE000
	0x01D35A68 LDR X0, [X0 + 0x870]
	0x01D35A6C BL 0x1C16D08
	0x01D35A70 MOV X1, X0
	0x01D35A74 MOV X0, X19
	0x01D35A78 BL 0x1C16DEC
	0x01D35A7C MOV X0, X19
	0x01D35A80 BL 0x1C16F18
	0x01D35A84 B 0x1D35A88
	0x01D35A88 MOV X20, X0
	0x01D35A8C CMP W1, 0x1
	0x01D35A90 B.NE 0x1D35AA8
	0x01D35A94 MOV X0, X20
	0x01D35A98 BL 0x3EB1AD0
	0x01D35A9C LDR X19, [X0]
	0x01D35AA0 BL 0x3EB1AE0
	0x01D35AA4 B 0x1D3595C
	0x01D35AA8 MOV X19, X31
	0x01D35AAC B 0x1D35AB4
	0x01D35AB0 MOV X20, X0
	0x01D35AB4 LDR X0, [X21]
	0x01D35AB8 LDR W8, [X0 + 0xE0]
	0x01D35ABC CBNZ W8, 0x1D35AC8
	0x01D35AC0 BL 0x1C16DFC
	0x01D35AC4 LDR X0, [X21]
	0x01D35AC8 LDR X8, [X22]
	0x01D35ACC LDR X9, [X0 + 0xB8]
	0x01D35AD0 LDR W10, [X8 + 0xE0]
	0x01D35AD4 LDR W22, [X9 + 0x38]
	0x01D35AD8 CBNZ W10, 0x1D35AE4
	0x01D35ADC MOV X0, X8
	0x01D35AE0 BL 0x1C16DFC
	0x01D35AE4 SUB W1, W22, 0x1
	0x01D35AE8 MOV W0, W31
	0x01D35AEC MOV X2, X31
	0x01D35AF0 BL 0x337EDF0
	0x01D35AF4 LDR X8, [X21]
	0x01D35AF8 LDR X8, [X8 + 0xB8]
	0x01D35AFC STR W0, [X8 + 0x38]
	0x01D35B00 STRB W31, [X8 + 0x19]
	0x01D35B04 CBNZ X19, 0x1D35B10
	0x01D35B08 MOV X0, X20
	0x01D35B0C BL 0x1D2C690
	0x01D35B10 MOV X0, X19
	0x01D35B14 BL 0x1C16F18
	0x01D35B18 BL 0x1990590
	0x01D35B1C STR X30, [X31 - 0x40]!
	0x01D35B20 STP X24, X23, [X31 + 0x10]
	0x01D35B24 STP X22, X21, [X31 + 0x20]
	0x01D35B28 STP X20, X19, [X31 + 0x30]
	0x01D35B2C ADRP X20, 0x26A3000
	0x01D35B30 LDRB W8, [X20 + 0x6DA]
	0x01D35B34 MOV X19, X0
	0x01D35B38 TBNZ X8, 0x0, 0x1D35B8C
	0x01D35B3C ADRP X0, 0x23BE000
	0x01D35B40 LDR X0, [X0 + 0x648]
	0x01D35B44 BL 0x1C16CF4
	0x01D35B48 ADRP X0, 0x23BE000
	0x01D35B4C LDR X0, [X0 + 0x878]
	0x01D35B50 BL 0x1C16CF4
	0x01D35B54 ADRP X0, 0x23BE000
	0x01D35B58 LDR X0, [X0 + 0x788]
	0x01D35B5C BL 0x1C16CF4
	0x01D35B60 ADRP X0, 0x23BE000
	0x01D35B64 LDR X0, [X0 + 0x880]
	0x01D35B68 BL 0x1C16CF4
	0x01D35B6C ADRP X0, 0x23BE000
	0x01D35B70 LDR X0, [X0 + 0x790]
	0x01D35B74 BL 0x1C16CF4
	0x01D35B78 ADRP X0, 0x23BE000
	0x01D35B7C LDR X0, [X0 + 0x888]
	0x01D35B80 BL 0x1C16CF4
	0x01D35B84 MOVZ W8, 0x1
	0x01D35B88 STRB W8, [X20 + 0x6DA]
	0x01D35B8C CBZ X19, 0x1D35CB8
	0x01D35B90 LDR X8, [X19 + 0x18]
	0x01D35B94 CBZ X8, 0x1D35CB8
	0x01D35B98 ADRP X20, 0x23BE000
	0x01D35B9C LDR X20, [X20 + 0x788]
	0x01D35BA0 LDR X0, [X20]
	0x01D35BA4 LDR W8, [X0 + 0xE0]
	0x01D35BA8 CBNZ W8, 0x1D35BB0
	0x01D35BAC BL 0x1C16DFC
	0x01D35BB0 MOVZ W0, 0x3
	0x01D35BB4 MOVZ W1, 0x100
	0x01D35BB8 MOV X2, X31
	0x01D35BBC BL 0x35C1A74
	0x01D35BC0 TBZ X0, 0x0, 0x1D35C48
	0x01D35BC4 ADRP X8, 0x23BE000
	0x01D35BC8 LDR X8, [X8 + 0x648]
	0x01D35BCC LDR X0, [X8]
	0x01D35BD0 LDR W8, [X0 + 0xE0]
	0x01D35BD4 CBNZ W8, 0x1D35BDC
	0x01D35BD8 BL 0x1C16DFC
	0x01D35BDC MOV X0, X19
	0x01D35BE0 BL 0x1D35310
	0x01D35BE4 ADRP X8, 0x23BE000
	0x01D35BE8 LDR X8, [X8 + 0x888]
	0x01D35BEC MOV X1, X0
	0x01D35BF0 MOV X2, X31
	0x01D35BF4 LDR X8, [X8]
	0x01D35BF8 MOV X0, X8
	0x01D35BFC BL 0x321B938
	0x01D35C00 LDR X8, [X20]
	0x01D35C04 MOV X20, X0
	0x01D35C08 LDR W9, [X8 + 0xE0]
	0x01D35C0C CBNZ W9, 0x1D35C18
	0x01D35C10 MOV X0, X8
	0x01D35C14 BL 0x1C16DFC
	0x01D35C18 ADRP X8, 0x23BE000
	0x01D35C1C ADRP X9, 0x23BE000
	0x01D35C20 LDR X8, [X8 + 0x790]
	0x01D35C24 LDR X9, [X9 + 0x880]
	0x01D35C28 MOVZ W0, 0x100
	0x01D35C2C MOVZ W5, 0x17B
	0x01D35C30 LDR X3, [X8]
	0x01D35C34 LDR X4, [X9]
	0x01D35C38 MOV X1, X20
	0x01D35C3C MOV X2, X31
	0x01D35C40 MOV X6, X31
	0x01D35C44 BL 0x35C2158
	0x01D35C48 LDR X8, [X19 + 0x18]
	0x01D35C4C CMP W8, 0x1
	0x01D35C50 B.LT 0x1D35CB8
	0x01D35C54 ADRP X23, 0x23BE000
	0x01D35C58 ADRP X24, 0x23BE000
	0x01D35C5C LDR X23, [X23 + 0x648]
	0x01D35C60 LDR X24, [X24 + 0x878]
	0x01D35C64 MOV X21, X31
	0x01D35C68 AND X8, X8, 0x0
	0x01D35C6C ADD X22, X19, 0x20
	0x01D35C70 CMP X21, W8, UXTW
	0x01D35C74 B.CS 0x1D35CD0
	0x01D35C78 LDR X0, [X23]
	0x01D35C7C LDR X20, [X22, X21, LSL #3]
	0x01D35C80 LDR W8, [X0 + 0xE0]
	0x01D35C84 CBNZ W8, 0x1D35C90
	0x01D35C88 BL 0x1C16DFC
	0x01D35C8C LDR X0, [X23]
	0x01D35C90 LDR X8, [X0 + 0xB8]
	0x01D35C94 LDR X0, [X8 + 0x40]
	0x01D35C98 CBZ X0, 0x1D35CCC
	0x01D35C9C LDR X2, [X24]
	0x01D35CA0 MOV X1, X20
	0x01D35CA4 BL 0x2992C14
	0x01D35CA8 LDR W8, [X19 + 0x18]
	0x01D35CAC ADD X21, X21, 0x1
	0x01D35CB0 CMP X21, W8, SXTW
	0x01D35CB4 B.LT 0x1D35C70
	0x01D35CB8 LDP X20, X19, [X31 + 0x30]
	0x01D35CBC LDP X22, X21, [X31 + 0x20]
	0x01D35CC0 LDP X24, X23, [X31 + 0x10]
	0x01D35CC4 LDR X30, [X31], #0x40
	0x01D35CC8 RET
	0x01D35CCC BL 0x1C16F20
	0x01D35CD0 BL 0x1C16F28
	0x01D35CD4 STR X30, [X31 - 0x20]!
	0x01D35CD8 STP X20, X19, [X31 + 0x10]
	0x01D35CDC ADRP X20, 0x26A3000
	0x01D35CE0 LDRB W8, [X20 + 0x714]
	0x01D35CE4 MOV X19, X0
	0x01D35CE8 TBNZ X8, 0x0, 0x1D35D00
	0x01D35CEC ADRP X0, 0x23BE000
	0x01D35CF0 LDR X0, [X0 + 0x890]
	0x01D35CF4 BL 0x1C16CF4
	0x01D35CF8 MOVZ W8, 0x1
	0x01D35CFC STRB W8, [X20 + 0x714]
	0x01D35D00 CBZ X19, 0x1D35D68
	0x01D35D04 LDR X8, [X19]
	0x01D35D08 MOV X0, X19
	0x01D35D0C LDR X9, [X8 + 0x2E8]
	0x01D35D10 LDR X1, [X8 + 0x2F0]
	0x01D35D14 BLR X9
	0x01D35D18 CBZ X0, 0x1D35D68
	0x01D35D1C ADRP X20, 0x23BE000
	0x01D35D20 LDR X20, [X20 + 0x890]
	0x01D35D24 MOV X2, X31
	0x01D35D28 MOV X19, X0
	0x01D35D2C LDR X1, [X20]
	0x01D35D30 BL 0x3226F64
	0x01D35D34 TBZ X0, 0x0, 0x1D35D58
	0x01D35D38 LDR X8, [X20]
	0x01D35D3C CBZ X8, 0x1D35D68
	0x01D35D40 LDR W1, [X8 + 0x10]
	0x01D35D44 MOV X0, X19
	0x01D35D48 LDP X20, X19, [X31 + 0x10]
	0x01D35D4C MOV X2, X31
	0x01D35D50 LDR X30, [X31], #0x20
	0x01D35D54 B 0x322B484
	0x01D35D58 MOV X0, X19
	0x01D35D5C LDP X20, X19, [X31 + 0x10]
	0x01D35D60 LDR X30, [X31], #0x20
	0x01D35D64 RET
	0x01D35D68 BL 0x1C16F20
	0x01D35D6C STR X30, [X31 - 0x30]!
	0x01D35D70 STP X22, X21, [X31 + 0x10]
	0x01D35D74 STP X20, X19, [X31 + 0x20]
	0x01D35D78 ADRP X21, 0x26A3000
	0x01D35D7C ADRP X22, 0x23BE000
	0x01D35D80 LDRB W8, [X21 + 0x6DC]
	0x01D35D84 LDR X22, [X22 + 0x648]
	0x01D35D88 MOV W20, W1
	0x01D35D8C MOV X19, X0
	0x01D35D90 TBNZ X8, 0x0, 0x1D35E14
	0x01D35D94 ADRP X0, 0x23BE000
	0x01D35D98 LDR X0, [X0 + 0x648]
	0x01D35D9C BL 0x1C16CF4
	0x01D35DA0 ADRP X0, 0x23BE000
	0x01D35DA4 LDR X0, [X0 + 0x898]
	0x01D35DA8 BL 0x1C16CF4
	0x01D35DAC ADRP X0, 0x23BE000
	0x01D35DB0 LDR X0, [X0 + 0x710]
	0x01D35DB4 BL 0x1C16CF4
	0x01D35DB8 ADRP X0, 0x23BE000
	0x01D35DBC LDR X0, [X0 + 0x718]
	0x01D35DC0 BL 0x1C16CF4
	0x01D35DC4 ADRP X0, 0x23BE000
	0x01D35DC8 LDR X0, [X0 + 0x720]
	0x01D35DCC BL 0x1C16CF4
	0x01D35DD0 ADRP X0, 0x23BE000
	0x01D35DD4 LDR X0, [X0 + 0x788]
	0x01D35DD8 BL 0x1C16CF4
	0x01D35DDC ADRP X0, 0x23BE000
	0x01D35DE0 LDR X0, [X0 + 0x790]
	0x01D35DE4 BL 0x1C16CF4
	0x01D35DE8 ADRP X0, 0x23BE000
	0x01D35DEC LDR X0, [X0 + 0x8A0]
	0x01D35DF0 BL 0x1C16CF4
	0x01D35DF4 ADRP X0, 0x23BE000
	0x01D35DF8 LDR X0, [X0 + 0x8A8]
	0x01D35DFC BL 0x1C16CF4
	0x01D35E00 ADRP X0, 0x23BE000
	0x01D35E04 LDR X0, [X0 + 0x8B0]
	0x01D35E08 BL 0x1C16CF4
	0x01D35E0C MOVZ W8, 0x1
	0x01D35E10 STRB W8, [X21 + 0x6DC]
	0x01D35E14 MOV X0, X31
	0x01D35E18 BL 0x33E3C68
	0x01D35E1C LDR X8, [X22]
	0x01D35E20 MOV X21, X0
	0x01D35E24 LDR W9, [X8 + 0xE0]
	0x01D35E28 CBNZ W9, 0x1D35E38
	0x01D35E2C MOV X0, X8
	0x01D35E30 BL 0x1C16DFC
	0x01D35E34 LDR X8, [X22]
	0x01D35E38 LDR X8, [X8 + 0xB8]
	0x01D35E3C LDR X8, [X8 + 0x60]
	0x01D35E40 CMP X21, X8
	0x01D35E44 B.NE 0x1D36010
	0x01D35E48 CBZ X19, 0x1D35F74
	0x01D35E4C TBZ X20, 0x0, 0x1D35E60
	0x01D35E50 MOVZ W1, 0x1
	0x01D35E54 MOV X0, X19
	0x01D35E58 MOV X2, X31
	0x01D35E5C BL 0x35BC494
	0x01D35E60 MOV X0, X19
	0x01D35E64 MOV X1, X31
	0x01D35E68 BL 0x35BC8C8
	0x01D35E6C TBZ X0, 0x0, 0x1D35E9C

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X19, 0x26A5000
	015 Move W8, [X19+1752]
	016 Move W27, W2
	017 Move X22, X1
	018 Move W21, W0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {103}
	023 Move X0, 0x23C0000
	024 Move X0, [X0+1608]
	025 Call 0x1C17CF4
	026 Move X0, 0x23C0000
	027 Move X0, [X0+1808]
	028 Call 0x1C17CF4
	029 Move X0, 0x23C0000
	030 Move X0, [X0+1816]
	031 Call 0x1C17CF4
	032 Move X0, 0x23C0000
	033 Move X0, [X0+1824]
	034 Call 0x1C17CF4
	035 Move X0, 0x23C0000
	036 Move X0, [X0+1832]
	037 Call 0x1C17CF4
	038 Move X0, 0x23C0000
	039 Move X0, [X0+1840]
	040 Call 0x1C17CF4
	041 Move X0, 0x23C0000
	042 Move X0, [X0+1848]
	043 Call 0x1C17CF4
	044 Move X0, 0x23C0000
	045 Move X0, [X0+1856]
	046 Call 0x1C17CF4
	047 Move X0, 0x23C0000
	048 Move X0, [X0+1864]
	049 Call 0x1C17CF4
	050 Move X0, 0x23C0000
	051 Move X0, [X0+1704]
	052 Call 0x1C17CF4
	053 Move X0, 0x23C0000
	054 Move X0, [X0+1872]
	055 Call 0x1C17CF4
	056 Move X0, 0x23C0000
	057 Move X0, [X0+1880]
	058 Call 0x1C17CF4
	059 Move X0, 0x23C0000
	060 Move X0, [X0+1888]
	061 Call 0x1C17CF4
	062 Move X0, 0x23C0000
	063 Move X0, [X0+1896]
	064 Call 0x1C17CF4
	065 Move X0, 0x23C0000
	066 Move X0, [X0+1904]
	067 Call 0x1C17CF4
	068 Move X0, 0x23C0000
	069 Move X0, [X0+1912]
	070 Call 0x1C17CF4
	071 Move X0, 0x23C0000
	072 Move X0, [X0+1920]
	073 Call 0x1C17CF4
	074 Move X0, 0x23C0000
	075 Move X0, [X0+1928]
	076 Call 0x1C17CF4
	077 Move X0, 0x23C0000
	078 Move X0, [X0+1936]
	079 Call 0x1C17CF4
	080 Move X0, 0x23C0000
	081 Move X0, [X0+1944]
	082 Call 0x1C17CF4
	083 Move X0, 0x23C0000
	084 Move X0, [X0+1952]
	085 Call 0x1C17CF4
	086 Move X0, 0x23C0000
	087 Move X0, [X0+1960]
	088 Call 0x1C17CF4
	089 Move X0, 0x23C0000
	090 Move X0, [X0+1968]
	091 Call 0x1C17CF4
	092 Move X0, 0x23C0000
	093 Move X0, [X0+1976]
	094 Call 0x1C17CF4
	095 Move X0, 0x23C0000
	096 Move X0, [X0+1984]
	097 Call 0x1C17CF4
	098 Move X0, 0x23C0000
	099 Move X0, [X0+1992]
	100 Call 0x1C17CF4
	101 Move W8, 1
	102 Move [X19+1752], W8
	103 Move [X31+64], X31
	104 Move [X31+72], X31
	105 Move [X31+80], X31
	106 Compare X22, 0
	107 JumpIfEqual {1206}
	108 Move X19, 0x23C0000
	109 Move X8, [X22]
	110 Move X19, [X19+1856]
	111 NotImplemented "Instruction LDRH not yet implemented."
	112 Move X1, [X19]
	113 Compare X9, 0
	114 JumpIfEqual {121}
	115 Move X10, [X8+176]
	116 Add X10, X10, 8
	117 NotImplemented "Instruction LDUR not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Subtract X9, X9, 1
	120 Add X10, X10, 16
	121 Move X0, X22
	122 Move W2, W31
	123 Call 0x1C5D788
	124 NotImplemented "Instruction LDRSW not yet implemented."
	125 Add X8, X8, X9
	126 Add X0, X8, 312
	127 Move X8, [X0]
	128 Move X1, [X0+8]
	129 Move X0, X22
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Compare W0, 0
	132 JumpIfEqual {1206}
	133 Move X0, X31
	134 Call Thread.get_CurrentThread
	135 Move X20, 0x23C0000
	136 Move X20, [X20+1608]
	137 Move X23, X0
	138 Move X8, [X20]
	139 Move W9, [X8+224]
	140 Compare W9, 0
	141 JumpIfNotEqual {145}
	142 Move X0, X8
	143 Call 0x1C17DFC
	144 Move X8, [X20]
	145 Move X9, [X8+184]
	146 Move X10, [X9+96]
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move W10, [X8+224]
	149 Compare W10, 0
	150 JumpIfNotEqual {157}
	151 Move X0, X8
	152 Call 0x1C17DFC
	153 Move X8, 0x23C0000
	154 Move X8, [X8+1608]
	155 Move X8, [X8]
	156 Move X9, [X8+184]
	157 Move W10, [X9+24]
	158 Compare W10, 0
	159 JumpIfNotEqual {1289}
	160 Move W10, [X8+224]
	161 Compare W10, 0
	162 JumpIfNotEqual {169}
	163 Move X0, X8
	164 Call 0x1C17DFC
	165 Move X8, 0x23C0000
	166 Move X8, [X8+1608]
	167 Move X8, [X8]
	168 Move X9, [X8+184]
	169 Move W9, [X9+26]
	170 Compare W9, 0
	171 JumpIfNotEqual {1363}
	172 Move [X31+48], X31
	173 Move TEMP, X21
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 JumpIfNotEqual {204}
	177 Move X20, 0x23C0000
	178 Move X20, [X20+1928]
	179 Move X0, [X20]
	180 Move W8, [X0+224]
	181 Compare W8, 0
	182 JumpIfNotEqual {184}
	183 Call 0x1C17DFC
	184 Move W0, 3
	185 Move W1, 256
	186 Move X2, X31
	187 Call Log.IsEnabled, X0, X1
	188 Move W23, W0
	189 Move X0, [X20]
	190 Move W8, [X0+224]
	191 Compare W8, 0
	192 JumpIfNotEqual {194}
	193 Call 0x1C17DFC
	194 Move W0, 4
	195 Move W1, 256
	196 Move X2, X31
	197 Call Log.IsEnabled, X0, X1
	198 Move X8, 0x23C0000
	199 Move X8, [X8+1608]
	200 And W24, W23, 1
	201 Xor W26, W23, 1
	202 And W20, W0, 1
	203 Move X8, [X8]
	204 Move W24, W31
	205 Move W20, W31
	206 Move W26, 1
	207 Move W9, [X8+224]
	208 Compare W9, 0
	209 JumpIfNotEqual {215}
	210 Move X0, X8
	211 Call 0x1C17DFC
	212 Move X8, 0x23C0000
	213 Move X8, [X8+1608]
	214 Move X8, [X8]
	215 Move X8, [X8+184]
	216 Move X0, [X8+112]
	217 Compare X0, 0
	218 JumpIfEqual {1416}
	219 Move X1, X31
	220 Call StringBuilder.Clear, X0
	221 Move X8, 0x23C0000
	222 Move X8, [X8+1608]
	223 Move X8, [X8]
	224 Move X8, [X8+184]
	225 Move X23, [X8+16]
	226 Compare X23, 0
	227 JumpIfEqual {1418}
	228 Move X10, 0x23C0000
	229 Move X8, [X23]
	230 Move X10, [X10+1704]
	231 Move [X31+12], W20
	232 NotImplemented "Instruction LDRH not yet implemented."
	233 Move X1, [X10]
	234 Compare X9, 0
	235 JumpIfEqual {242}
	236 Move X10, [X8+176]
	237 Add X10, X10, 8
	238 NotImplemented "Instruction LDUR not yet implemented."
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Subtract X9, X9, 1
	241 Add X10, X10, 16
	242 Move W2, 1
	243 Move X0, X23
	244 Call 0x1C5D788
	245 Move W9, [X10]
	246 Add W9, W9, 1
	247 Add X8, X8, W9
	248 Add X0, X8, 312
	249 Move X8, [X0]
	250 Move X2, [X0+8]
	251 Move W1, 1
	252 Move X0, X23
	253 Move W20, 1
	254 NotImplemented "Instruction BLR not yet implemented."
	255 Move X8, 0x23C0000
	256 Move X8, [X8+1608]
	257 Move X8, [X8]
	258 Move X8, [X8+184]
	259 Move [X8+24], W20
	260 Move X8, [X22]
	261 Move X1, [X19]
	262 Move W20, [X31+12]
	263 NotImplemented "Instruction LDRH not yet implemented."
	264 Compare X9, 0
	265 JumpIfEqual {272}
	266 Move X10, [X8+176]
	267 Add X10, X10, 8
	268 NotImplemented "Instruction LDUR not yet implemented."
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Subtract X9, X9, 1
	271 Add X10, X10, 16
	272 Move X0, X22
	273 Move W2, W31
	274 Call 0x1C5D788
	275 NotImplemented "Instruction LDRSW not yet implemented."
	276 Add X8, X8, X9
	277 Add X0, X8, 312
	278 Move X8, [X0]
	279 Move X1, [X0+8]
	280 Move X0, X22
	281 NotImplemented "Instruction BLR not yet implemented."
	282 Move W23, W0
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Move [X31+8], W24
	285 Move [X31+16], W21
	286 Move [X31+20], W31
	287 Move X21, 0x23C0000
	288 Move X21, [X21+1864]
	289 Move W24, W31
	290 Move W19, 1
	291 Move X8, [X22]
	292 Move X1, [X21]
	293 NotImplemented "Instruction LDRH not yet implemented."
	294 Compare X9, 0
	295 JumpIfEqual {302}
	296 Move X10, [X8+176]
	297 Add X10, X10, 8
	298 NotImplemented "Instruction LDUR not yet implemented."
	299 NotImplemented "Instruction CMP not yet implemented."
	300 Subtract X9, X9, 1
	301 Add X10, X10, 16
	302 Move X0, X22
	303 Move W2, W31
	304 Call 0x1C5D788
	305 NotImplemented "Instruction LDRSW not yet implemented."
	306 Add X8, X8, X9
	307 Add X0, X8, 312
	308 Move X8, [X0]
	309 Move X2, [X0+8]
	310 Move X0, X22
	311 Move W1, W24
	312 NotImplemented "Instruction BLR not yet implemented."
	313 Move X28, X0
	314 Compare X0, 0
	315 JumpIfEqual {742}
	316 Move X8, [X28]
	317 Move X9, [X8+376]
	318 Move X1, [X8+384]
	319 Move X0, X28
	320 NotImplemented "Instruction BLR not yet implemented."
	321 Move X9, 0x23C0000
	322 Move X9, [X9+1608]
	323 Move W8, W0
	324 And W19, W19, W8
	325 Move X0, [X9]
	326 Move W9, [X0+224]
	327 Compare W9, 0
	328 JumpIfNotEqual {330}
	329 Call 0x1C17DFC
	330 Move X8, 0x26A5000
	331 Move W8, [X8+1927]
	332 Compare W8, 0
	333 JumpIfNotEqual {340}
	334 Move X0, 0x23C0000
	335 Move X0, [X0+1608]
	336 Call 0x1C17CF4
	337 Move W8, 1
	338 Move X9, 0x26A5000
	339 Move [X9+1927], W8
	340 Move X8, 0x23C0000
	341 Move X8, [X8+1608]
	342 Move X0, [X8]
	343 Move W8, [X0+224]
	344 Compare W8, 0
	345 JumpIfNotEqual {350}
	346 Call 0x1C17DFC
	347 Move X8, 0x23C0000
	348 Move X8, [X8+1608]
	349 Move X0, [X8]
	350 Move X8, [X0+184]
	351 Move X9, [X28]
	352 Move X1, [X8]
	353 Move X8, [X9+424]
	354 Move X2, [X9+432]
	355 Move X0, X28
	356 NotImplemented "Instruction BLR not yet implemented."
	357 Move TEMP, X26
	358 And TEMP, TEMP, 1
	359 Compare TEMP, 1
	360 JumpIfNotEqual {362}
	361 Move W26, 1
	362 Move X8, [X28]
	363 Move X9, [X8+376]
	364 Move X1, [X8+384]
	365 Move X0, X28
	366 NotImplemented "Instruction BLR not yet implemented."
	367 Move TEMP, X0
	368 And TEMP, TEMP, 1
	369 Compare TEMP, 1
	370 JumpIfEqual {741}
	371 Move X8, 0x23C0000
	372 Move X8, [X8+1608]
	373 Move X0, [X8]
	374 Move W8, [X0+224]
	375 Compare W8, 0
	376 JumpIfNotEqual {381}
	377 Call 0x1C17DFC
	378 Move X8, 0x23C0000
	379 Move X8, [X8+1608]
	380 Move X0, [X8]
	381 Move X8, [X0+184]
	382 Move X0, [X8+112]
	383 Compare X0, 0
	384 JumpIfEqual {758}
	385 Move X1, X31
	386 Call StringBuilder.get_Length, X0
	387 Move W8, 0x2327
	388 NotImplemented "Instruction CMP not yet implemented."
	389 Move X8, 0x23C0000
	390 Move X8, [X8+1608]
	391 Move X0, [X8]
	392 Move W8, [X0+224]
	393 Compare W8, 0
	394 JumpIfNotEqual {399}
	395 Call 0x1C17DFC
	396 Move X8, 0x23C0000
	397 Move X8, [X8+1608]
	398 Move X0, [X8]
	399 Move X9, [X0+184]
	400 Move X29, [X9+16]
	401 Compare X29, 0
	402 JumpIfEqual {760}
	403 Move X8, [X29]
	404 Move X10, 0x23C0000
	405 Move X25, [X9+112]
	406 NotImplemented "Instruction LDRH not yet implemented."
	407 Move X10, [X10+1704]
	408 Move X1, [X10]
	409 Compare X9, 0
	410 JumpIfEqual {417}
	411 Move X10, [X8+176]
	412 Add X10, X10, 8
	413 NotImplemented "Instruction LDUR not yet implemented."
	414 NotImplemented "Instruction CMP not yet implemented."
	415 Subtract X9, X9, 1
	416 Add X10, X10, 16
	417 Move W2, 2
	418 Move X0, X29
	419 Call 0x1C5D788
	420 Move W9, [X10]
	421 Add W9, W9, 2
	422 Add X8, X8, W9
	423 Add X0, X8, 312
	424 Move X8, [X0]
	425 Move X1, [X0+8]
	426 Move X0, X29
	427 NotImplemented "Instruction BLR not yet implemented."
	428 Compare X0, 0
	429 JumpIfEqual {762}
	430 Move X9, 0x23C0000
	431 Move W8, [X0+24]
	432 Move X9, [X9+1880]
	433 Move X0, [X9]
	434 Move W9, [X31+20]
	435 Subtract W8, W8, W9
	436 Move [X31+24], W8
	437 Add X1, X31, 24
	438 Call 0x1C17E04
	439 Move X8, 0x23C0000
	440 Move X8, [X8+1960]
	441 Move X2, X0
	442 Move X0, [X8]
	443 Move X1, X28
	444 Move X3, X31
	445 Call String.Format, X0, X1, X2
	446 Move X1, X0
	447 Compare X25, 0
	448 JumpIfEqual {763}
	449 Move X0, X25
	450 Move X2, X31
	451 Call StringBuilder.Append, X0, X1
	452 Move X8, 0x23C0000
	453 Move X8, [X8+1608]
	454 Move X8, [X8]
	455 Move X8, [X8+184]
	456 Move X0, [X8+112]
	457 Compare X0, 0
	458 JumpIfEqual {764}
	459 Move X1, X31
	460 Call StringBuilder.get_Length, X0
	461 Move W8, 0x2329
	462 NotImplemented "Instruction CMP not yet implemented."
	463 Move X8, 0x23C0000
	464 Move X8, [X8+1608]
	465 Move X0, [X8]
	466 Move W8, [X0+224]
	467 Compare W8, 0
	468 JumpIfNotEqual {473}
	469 Call 0x1C17DFC
	470 Move X8, 0x23C0000
	471 Move X8, [X8+1608]
	472 Move X0, [X8]
	473 Move X8, [X0+184]
	474 Move X0, [X8+112]
	475 Compare X0, 0
	476 JumpIfEqual {771}
	477 Move X8, 0x23C0000
	478 Move X8, [X8+1952]
	479 Move X1, [X8]
	480 Move X2, X31
	481 Call StringBuilder.Append, X0, X1
	482 Compare W20, 0
	483 JumpIfEqual {699}
	484 Move X8, 0x23C0000
	485 Move X8, [X8+1608]
	486 Move X0, [X8]
	487 Move W8, [X0+224]
	488 Compare W8, 0
	489 JumpIfNotEqual {494}
	490 Call 0x1C17DFC
	491 Move X8, 0x23C0000
	492 Move X8, [X8+1608]
	493 Move X0, [X8]
	494 Move X8, [X0+184]
	495 Move X0, [X8+112]
	496 Compare X0, 0
	497 JumpIfEqual {769}
	498 Move X1, X31
	499 Call StringBuilder.get_Length, X0
	500 Move W29, [X31+20]
	501 Move W8, 0x2327
	502 NotImplemented "Instruction CMP not yet implemented."
	503 Move X8, 0x23C0000
	504 Move X8, [X8+1608]
	505 Move X0, [X8]
	506 Move W8, [X0+224]
	507 Compare W8, 0
	508 JumpIfNotEqual {513}
	509 Call 0x1C17DFC
	510 Move X8, 0x23C0000
	511 Move X8, [X8+1608]
	512 Move X0, [X8]
	513 Move X8, [X0+184]
	514 Move X25, [X8+16]
	515 Compare X25, 0
	516 JumpIfEqual {744}
	517 Move X8, [X25]
	518 Move X10, 0x23C0000
	519 NotImplemented "Instruction LDRH not yet implemented."
	520 Move X10, [X10+1704]
	521 Move X1, [X10]
	522 Compare X9, 0
	523 JumpIfEqual {530}
	524 Move X10, [X8+176]
	525 Add X10, X10, 8
	526 NotImplemented "Instruction LDUR not yet implemented."
	527 NotImplemented "Instruction CMP not yet implemented."
	528 Subtract X9, X9, 1
	529 Add X10, X10, 16
	530 Move W2, 2
	531 Move X0, X25
	532 Call 0x1C5D788
	533 Move W9, [X10]
	534 Add W9, W9, 2
	535 Add X8, X8, W9
	536 Add X0, X8, 312
	537 Move X8, [X0]
	538 Move X1, [X0+8]
	539 Move X0, X25
	540 NotImplemented "Instruction BLR not yet implemented."
	541 Compare X0, 0
	542 JumpIfEqual {746}
	543 Move W8, [X0+24]
	544 NotImplemented "Instruction CMP not yet implemented."
	545 Move X8, 0x23C0000
	546 Move X8, [X8+1608]
	547 Move X0, [X8]
	548 Move W8, [X0+224]
	549 Compare W8, 0
	550 JumpIfNotEqual {555}
	551 Call 0x1C17DFC
	552 Move X8, 0x23C0000
	553 Move X8, [X8+1608]
	554 Move X0, [X8]
	555 Move X8, [X0+184]
	556 Move X25, [X8+16]
	557 Compare X25, 0
	558 JumpIfEqual {752}
	559 Move X8, [X25]
	560 Move X10, 0x23C0000
	561 NotImplemented "Instruction LDRH not yet implemented."
	562 Move X10, [X10+1704]
	563 Move X1, [X10]
	564 Compare X9, 0
	565 JumpIfEqual {572}
	566 Move X10, [X8+176]
	567 Add X10, X10, 8
	568 NotImplemented "Instruction LDUR not yet implemented."
	569 NotImplemented "Instruction CMP not yet implemented."
	570 Subtract X9, X9, 1
	571 Add X10, X10, 16
	572 Move W2, 2
	573 Move X0, X25
	574 Call 0x1C5D788
	575 Move W9, [X10]
	576 Add W9, W9, 2
	577 Add X8, X8, W9
	578 Add X0, X8, 312
	579 Move X8, [X0]
	580 Move X1, [X0+8]
	581 Move X0, X25
	582 NotImplemented "Instruction BLR not yet implemented."
	583 Compare X0, 0
	584 JumpIfEqual {748}
	585 Move X8, 0x23C0000
	586 Move X8, [X8+1920]
	587 Move X2, [X8]
	588 Move W1, W29
	589 Call List`1<Object>.get_Item, X0, X1
	590 Move X25, X0
	591 Compare X0, 0
	592 JumpIfEqual {750}
	593 Move X8, [X25]
	594 Move X10, 0x23C0000
	595 NotImplemented "Instruction LDRH not yet implemented."
	596 Move X10, [X10+1872]
	597 Move X1, [X10]
	598 Compare X9, 0
	599 JumpIfEqual {606}
	600 Move X10, [X8+176]
	601 Add X10, X10, 8
	602 NotImplemented "Instruction LDUR not yet implemented."
	603 NotImplemented "Instruction CMP not yet implemented."
	604 Subtract X9, X9, 1
	605 Add X10, X10, 16
	606 Move W2, 2
	607 Move X0, X25
	608 Call 0x1C5D788
	609 Move W9, [X10]
	610 Add W9, W9, 2
	611 Add X8, X8, W9
	612 Add X0, X8, 312
	613 Move X8, [X0]
	614 Move X1, [X0+8]
	615 Move X0, X25
	616 NotImplemented "Instruction BLR not yet implemented."
	617 And W8, W0, 255
	618 NotImplemented "Instruction CMP not yet implemented."
	619 Move X8, 0x23C0000
	620 Move X8, [X8+1608]
	621 Move X0, [X8]
	622 Move W8, [X0+224]
	623 Compare W8, 0
	624 JumpIfNotEqual {629}
	625 Call 0x1C17DFC
	626 Move X8, 0x23C0000
	627 Move X8, [X8+1608]
	628 Move X0, [X8]
	629 Move X8, [X0+184]
	630 Move X0, [X8+112]
	631 Compare X0, 0
	632 JumpIfEqual {754}
	633 Move X8, 0x23C0000
	634 Move X8, [X8+1976]
	635 Move X1, [X8]
	636 Move X2, X31
	637 Call StringBuilder.Append, X0, X1
	638 Move X8, 0x23C0000
	639 Move X8, [X8+1608]
	640 Move X9, [X8]
	641 Move X8, [X25]
	642 Move X10, [X9+184]
	643 NotImplemented "Instruction LDRH not yet implemented."
	644 Move X26, [X10+112]
	645 Move X10, 0x23C0000
	646 Move X10, [X10+1872]
	647 Move X1, [X10]
	648 Compare X9, 0
	649 JumpIfEqual {656}
	650 Move X10, [X8+176]
	651 Add X10, X10, 8
	652 NotImplemented "Instruction LDUR not yet implemented."
	653 NotImplemented "Instruction CMP not yet implemented."
	654 Subtract X9, X9, 1
	655 Add X10, X10, 16
	656 Move W2, 9
	657 Move X0, X25
	658 Call 0x1C5D788
	659 Move W9, [X10]
	660 Add W9, W9, 9
	661 Add X8, X8, W9
	662 Add X0, X8, 312
	663 Move X8, [X0]
	664 Move X2, [X0+8]
	665 Move X0, X25
	666 Move X1, X26
	667 NotImplemented "Instruction BLR not yet implemented."
	668 Move X8, 0x23C0000
	669 Move X8, [X8+1608]
	670 Move X8, [X8]
	671 Move X8, [X8+184]
	672 Move X0, [X8+112]
	673 Compare X0, 0
	674 JumpIfEqual {756}
	675 Move X1, X31
	676 Call StringBuilder.get_Length, X0
	677 Move W8, 0x2329
	678 NotImplemented "Instruction CMP not yet implemented."
	679 Add W29, W29, 1
	680 Move X8, 0x23BF000
	681 Move X8, [X8+1608]
	682 Move X0, [X8]
	683 Move W8, [X0+224]
	684 Compare W8, 0
	685 JumpIfNotEqual {690}
	686 Call 0x1C17DFC
	687 Move X8, 0x23BF000
	688 Move X8, [X8+1608]
	689 Move X0, [X8]
	690 Move X8, [X0+184]
	691 Move X0, [X8+112]
	692 Compare X0, 0
	693 JumpIfEqual {773}
	694 Move X8, 0x23BF000
	695 Move X8, [X8+1952]
	696 Move X1, [X8]
	697 Move X2, X31
	698 Call StringBuilder.Append, X0, X1
	699 Move X8, 0x23BF000
	700 Move X8, [X8+1608]
	701 Move X0, [X8]
	702 Move W8, [X0+224]
	703 Compare W8, 0
	704 JumpIfNotEqual {709}
	705 Call 0x1C17DFC
	706 Move X8, 0x23BF000
	707 Move X8, [X8+1608]
	708 Move X0, [X8]
	709 Move X8, [X0+184]
	710 Move X25, [X8+16]
	711 Compare X25, 0
	712 JumpIfEqual {766}
	713 Move X8, [X25]
	714 Move X10, 0x23BF000
	715 NotImplemented "Instruction LDRH not yet implemented."
	716 Move X10, [X10+1704]
	717 Move X1, [X10]
	718 Compare X9, 0
	719 JumpIfEqual {726}
	720 Move X10, [X8+176]
	721 Add X10, X10, 8
	722 NotImplemented "Instruction LDUR not yet implemented."
	723 NotImplemented "Instruction CMP not yet implemented."
	724 Subtract X9, X9, 1
	725 Add X10, X10, 16
	726 Move W2, 2
	727 Move X0, X25
	728 Call 0x1C5D788
	729 Move W9, [X10]
	730 Add W9, W9, 2
	731 Add X8, X8, W9
	732 Add X0, X8, 312
	733 Move X8, [X0]
	734 Move X1, [X0+8]
	735 Move X0, X25
	736 NotImplemented "Instruction BLR not yet implemented."
	737 Compare X0, 0
	738 JumpIfEqual {768}
	739 Move W8, [X0+24]
	740 Move [X31+20], W8
	741 Move W26, W31
	742 Add W24, W24, 1
	743 NotImplemented "Instruction CMP not yet implemented."
	744 Move [X31+4], W27
	745 Call 0x1C17F20
	746 Move [X31+4], W27
	747 Call 0x1C17F20
	748 Move [X31+4], W27
	749 Call 0x1C17F20
	750 Move [X31+4], W27
	751 Call 0x1C17F20
	752 Move [X31+4], W27
	753 Call 0x1C17F20
	754 Move [X31+4], W27
	755 Call 0x1C17F20
	756 Move [X31+4], W27
	757 Call 0x1C17F20
	758 Move [X31+4], W27
	759 Call 0x1C17F20
	760 Move [X31+4], W27
	761 Call 0x1C17F20
	762 Call 0x1C17F20
	763 Call 0x1C17F20
	764 Move [X31+4], W27
	765 Call 0x1C17F20
	766 Move [X31+4], W27
	767 Call 0x1C17F20
	768 Call 0x1C17F20
	769 Move [X31+4], W27
	770 Call 0x1C17F20
	771 Move [X31+4], W27
	772 Call 0x1C17F20
	773 Move [X31+4], W27
	774 Call 0x1C17F20
	775 Move [X31+4], W27
	776 Move X29, X0
	777 Move W26, W31
	778 NotImplemented "Instruction CMP not yet implemented."
	779 Move X0, X29
	780 Call 0x3EB2AD0
	781 Move X25, X0
	782 Move X0, 0x23BF000
	783 Move X0, [X0+2000]
	784 Call 0x1C17D08
	785 Move X8, [X25]
	786 Move X1, [X8]
	787 Call 0x1C18270
	788 Move TEMP, X0
	789 And TEMP, TEMP, 1
	790 Compare TEMP, 1
	791 JumpIfNotEqual {1434}
	792 Move X20, [X25]
	793 Call 0x3EB2AE0
	794 Move X0, 0x23BF000
	795 Move X0, [X0+1608]
	796 Call 0x1C17D08
	797 Move W8, [X0+224]
	798 Compare W8, 0
	799 JumpIfNotEqual {801}
	800 Call 0x1C17DFC
	801 Move X0, 0x23BF000
	802 Move X0, [X0+1608]
	803 Call 0x1C17D08
	804 Move X8, [X0+184]
	805 Move X25, [X8+48]
	806 Move X0, 0x23BF000
	807 Move X0, [X0+2008]
	808 Call 0x1C17D08
	809 Call 0x1C17F10
	810 Move X29, X0
	811 Move X1, X31
	812 Call Object..ctor, X0
	813 Compare X29, 0
	814 JumpIfEqual {1442}
	815 Move [X29+16], X28
	816 Move [X29+24], X20
	817 Compare X25, 0
	818 JumpIfEqual {1443}
	819 Move X0, 0x23BF000
	820 Move X0, [X0+2016]
	821 Move W27, [X31+4]
	822 Call 0x1C17D08
	823 Move W9, [X25+28]
	824 Move X8, [X25+16]
	825 Add W9, W9, 1
	826 Move [X25+28], W9
	827 Compare X8, 0
	828 JumpIfEqual {1444}
	829 NotImplemented "Instruction LDRSW not yet implemented."
	830 Move W10, [X8+24]
	831 NotImplemented "Instruction CMP not yet implemented."
	832 Move W27, [X31+4]
	833 Move W20, [X31+12]
	834 Add W10, W9, 1
	835 Add X8, X8, X9
	836 Move [X25+24], W10
	837 Move [X8+32], X29
	838 Move X8, [X0+32]
	839 Move X8, [X8+192]
	840 Move X2, [X8+112]
	841 Move W27, [X31+4]
	842 Move X0, X25
	843 Move X1, X29
	844 Call List`1<Object>.AddWithResize, X0, X1
	845 Move W20, [X31+12]
	846 Move [X31+4], W27
	847 Move X29, X0
	848 Move W19, 1
	849 Move X8, 0x23BF000
	850 Move X8, [X8+1608]
	851 Move X0, [X8]
	852 Move W8, [X0+224]
	853 Compare W8, 0
	854 JumpIfEqual {857}
	855 Move W20, [X31+16]
	856 Move W21, [X31+8]
	857 Call 0x1C17DFC
	858 Move W20, [X31+16]
	859 Move W21, [X31+8]
	860 Move X8, 0x23BF000
	861 Move X8, [X8+1608]
	862 Move X0, [X8]
	863 Move X8, [X0+184]
	864 Move X23, [X8+16]
	865 Move [X8+24], W31
	866 Compare X23, 0
	867 JumpIfEqual {1419}
	868 Move X8, [X23]
	869 Move X10, 0x23BF000
	870 NotImplemented "Instruction LDRH not yet implemented."
	871 Move X10, [X10+1704]
	872 Move X1, [X10]
	873 Compare X9, 0
	874 JumpIfEqual {881}
	875 Move X10, [X8+176]
	876 Add X10, X10, 8
	877 NotImplemented "Instruction LDUR not yet implemented."
	878 NotImplemented "Instruction CMP not yet implemented."
	879 Subtract X9, X9, 1
	880 Add X10, X10, 16
	881 Move W2, 1
	882 Move X0, X23
	883 Call 0x1C5D788
	884 Move W9, [X10]
	885 Add W9, W9, 1
	886 Add X8, X8, W9
	887 Add X0, X8, 312
	888 Move X8, [X0]
	889 Move X2, [X0+8]
	890 Move X0, X23
	891 Move W1, W31
	892 NotImplemented "Instruction BLR not yet implemented."
	893 Xor W24, W19, 1
	894 Move X19, 0x23BF000
	895 Move X19, [X19+1608]
	896 Compare W21, 0
	897 JumpIfEqual {996}
	898 Move TEMP, X24
	899 And TEMP, TEMP, 1
	900 Compare TEMP, 1
	901 JumpIfNotEqual {996}
	902 Move X0, [X19]
	903 Move W8, [X0+224]
	904 Compare W8, 0
	905 JumpIfNotEqual {907}
	906 Call 0x1C17DFC
	907 Move X0, X22
	908 Call App.GetActionsDebugStr, X0
	909 Move X8, [X19]
	910 Move X8, [X8+184]
	911 Move X23, [X8+16]
	912 Compare X23, 0
	913 JumpIfEqual {1424}
	914 Move X8, [X23]
	915 Move X10, 0x23BF000
	916 Move X22, X0
	917 NotImplemented "Instruction LDRH not yet implemented."
	918 Move X10, [X10+1704]
	919 Move X1, [X10]
	920 Compare X9, 0
	921 JumpIfEqual {928}
	922 Move X10, [X8+176]
	923 Add X10, X10, 8
	924 NotImplemented "Instruction LDUR not yet implemented."
	925 NotImplemented "Instruction CMP not yet implemented."
	926 Subtract X9, X9, 1
	927 Add X10, X10, 16
	928 Move W2, 2
	929 Move X0, X23
	930 Call 0x1C5D788
	931 Move W9, [X10]
	932 Add W9, W9, 2
	933 Add X8, X8, W9
	934 Add X0, X8, 312
	935 Move X8, [X0]
	936 Move X1, [X0+8]
	937 Move X0, X23
	938 NotImplemented "Instruction BLR not yet implemented."
	939 Compare X0, 0
	940 JumpIfEqual {1426}
	941 Move X9, 0x23BF000
	942 Move W8, [X0+24]
	943 Move X9, [X9+1880]
	944 Move [X31+24], W8
	945 Move X0, [X9]
	946 Add X1, X31, 24
	947 Call 0x1C17E04
	948 Move X8, 0x23BF000
	949 Move X8, [X8+1984]
	950 Move X2, X0
	951 Move X0, [X8]
	952 Move X1, X22
	953 Move X3, X31
	954 Call String.Format, X0, X1, X2
	955 Move X8, [X19]
	956 Move X22, X0
	957 Move X8, [X8+184]
	958 Move X0, [X8+112]
	959 Compare X0, 0
	960 JumpIfEqual {1427}
	961 Move X8, [X0]
	962 Move X9, [X8+360]
	963 Move X1, [X8+368]
	964 NotImplemented "Instruction BLR not yet implemented."
	965 Move X1, X0
	966 Move X0, X22
	967 Move X2, X31
	968 Call String.Concat, X0, X1
	969 Move X8, 0x23BF000
	970 Move X8, [X8+1928]
	971 Move X22, X0
	972 Move X0, [X8]
	973 Move W8, [X0+224]
	974 Compare W8, 0
	975 JumpIfNotEqual {977}
	976 Call 0x1C17DFC
	977 Move X8, 0x23BF000
	978 Move X9, 0x23BF000
	979 Move X8, [X8+1936]
	980 Move X9, [X9+1968]
	981 Move X3, [X8]
	982 Move X4, [X9]
	983 Move W0, 256
	984 Move W5, 286
	985 Move X1, X22
	986 Move X2, X31
	987 Move X6, X31
	988 Call Log.Info, X0, X1, X2, X3, X4, X5
	989 Move X8, [X19]
	990 Move X8, [X8+184]
	991 Move X0, [X8+112]
	992 Compare X0, 0
	993 JumpIfEqual {1429}
	994 Move X1, X31
	995 Call StringBuilder.Clear, X0
	996 Move X0, [X19]
	997 Move W8, [X0+224]
	998 Compare W8, 0
	999 JumpIfNotEqual {1004}
	1000 Call 0x1C17DFC
	1001 Move X8, 0x23BF000
	1002 Move X8, [X8+1608]
	1003 Move X0, [X8]
	1004 Move X8, [X0+184]
	1005 Move X8, [X8+48]
	1006 Compare X8, 0
	1007 JumpIfEqual {1420}
	1008 Move W8, [X8+24]
	1009 NotImplemented "Instruction CMP not yet implemented."
	1010 Move X8, 0x23BF000
	1011 Move X8, [X8+1928]
	1012 Move X0, [X8]
	1013 Move W8, [X0+224]
	1014 Compare W8, 0
	1015 JumpIfNotEqual {1017}
	1016 Call 0x1C17DFC
	1017 Move W0, 1
	1018 Move W1, 256
	1019 Move X2, X31
	1020 Call Log.IsEnabled, X0, X1
	1021 Move TEMP, X0
	1022 And TEMP, TEMP, 1
	1023 Compare TEMP, 1
	1024 JumpIfNotEqual {1135}
	1025 Move X8, 0x23BF000
	1026 Move X8, [X8+1608]
	1027 Move X0, [X8]
	1028 Move W8, [X0+224]
	1029 Compare W8, 0
	1030 JumpIfNotEqual {1035}
	1031 Call 0x1C17DFC
	1032 Move X8, 0x23BF000
	1033 Move X8, [X8+1608]
	1034 Move X0, [X8]
	1035 Move X8, [X0+184]
	1036 Move [X31+4], W27
	1037 Move X0, [X8+48]
	1038 Compare X0, 0
	1039 JumpIfEqual {1431}
	1040 Move [X31+20], W24
	1041 Move X8, 0x23BF000
	1042 Move X8, [X8+1888]
	1043 Move X1, [X8]
	1044 Add X8, X31, 24
	1045 Call List`1<Object>.GetEnumerator, X0
	1046 NotImplemented "Instruction LDUR not yet implemented."
	1047 Move X8, [X31+40]
	1048 Move X25, 0x23BF000
	1049 Move X28, 0x23BF000
	1050 Move X29, 0x23BF000
	1051 Move X19, 0x23BF000
	1052 Move X27, 0x23BF000
	1053 Move X20, 0x23BF000
	1054 Move X25, [X25+1840]
	1055 Move X28, [X28+1824]
	1056 Move X29, [X29+1816]
	1057 Move X19, [X19+1992]
	1058 Move X27, [X27+1808]
	1059 Move X20, [X20+1936]
	1060 Move [X31+4], V0
	1061 Move [X31+80], X8
	1062 Move X21, 0x23BF000
	1063 Move X21, [X21+1968]
	1064 Move X1, [X25]
	1065 Add X0, X31, 64
	1066 Call Enumerator<Object>.MoveNext, X0
	1067 Move TEMP, X0
	1068 And TEMP, TEMP, 1
	1069 Compare TEMP, 1
	1070 JumpIfNotEqual {1120}
	1071 Move X26, [X31+80]
	1072 Compare X26, 0
	1073 JumpIfEqual {1224}
	1074 Move X0, [X26+16]
	1075 Compare X0, 0
	1076 JumpIfEqual {1225}
	1077 Move X1, X31
	1078 Call "il2cpp_vm_object_is_inst", X0
	1079 Compare X0, 0
	1080 JumpIfEqual {1222}
	1081 Move X8, [X0]
	1082 Move X9, [X8+424]
	1083 Move X1, [X8+432]
	1084 NotImplemented "Instruction BLR not yet implemented."
	1085 Move X8, 0x23BF000
	1086 Move X8, [X8+1944]
	1087 Move X1, [X8]
	1088 Move X2, X31
	1089 Call String.Concat, X0, X1
	1090 Move X22, X0
	1091 Move X23, [X26+24]
	1092 Move X0, [X28]
	1093 Call 0x1C17F10
	1094 Move X1, [X29]
	1095 Move X24, X0
	1096 Call Dictionary`2<Object, Object>..ctor, X0
	1097 Compare X24, 0
	1098 JumpIfEqual {1223}
	1099 Move X1, [X19]
	1100 Move X2, [X26+16]
	1101 Move X3, [X27]
	1102 Move X0, X24
	1103 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1104 Move X8, 0x23BF000
	1105 Move X8, [X8+1928]
	1106 Move X0, [X8]
	1107 Move W8, [X0+224]
	1108 Compare W8, 0
	1109 JumpIfNotEqual {1111}
	1110 Call 0x1C17DFC
	1111 Move X4, [X20]
	1112 Move X5, [X21]
	1113 Move W0, 256
	1114 Move W6, 297
	1115 Move X1, X22
	1116 Move X2, X23
	1117 Move X3, X24
	1118 Move X7, X31
	1119 Call Log.Error, X0, X1, X2, X3, X4, X5, X6
	1120 Move X22, X31
	1121 Move W19, 30
	1122 Move X8, 0x23BF000
	1123 Move X8, [X8+1832]
	1124 Move X1, [X8]
	1125 Move W27, [X31+4]
	1126 Add X0, X31, 64
	1127 Call Enumerator<Object>.Dispose, X0
	1128 Move W20, [X31+16]
	1129 Move W24, [X31+20]
	1130 Compare X22, 0
	1131 JumpIfNotEqual {1432}
	1132 NotImplemented "Instruction CMP not yet implemented."
	1133 Compare W19, 0
	1134 JumpIfNotEqual {1220}
	1135 Move X19, 0x23BF000
	1136 Move X19, [X19+1608]
	1137 Move X0, [X19]
	1138 Move W8, [X0+224]
	1139 Compare W8, 0
	1140 JumpIfNotEqual {1145}
	1141 Call 0x1C17DFC
	1142 Move X19, 0x23BF000
	1143 Move X19, [X19+1608]
	1144 Move X0, [X19]
	1145 Move X8, [X0+184]
	1146 Move W9, 1
	1147 Move X22, [X8+16]
	1148 Move [X8+26], W9
	1149 Compare X22, 0
	1150 JumpIfEqual {1423}
	1151 Move X8, [X22]
	1152 Move X10, 0x23BF000
	1153 NotImplemented "Instruction LDRH not yet implemented."
	1154 Move X10, [X10+1704]
	1155 Move X1, [X10]
	1156 Compare X9, 0
	1157 JumpIfEqual {1164}
	1158 Move X10, [X8+176]
	1159 Add X10, X10, 8
	1160 NotImplemented "Instruction LDUR not yet implemented."
	1161 NotImplemented "Instruction CMP not yet implemented."
	1162 Subtract X9, X9, 1
	1163 Add X10, X10, 16
	1164 Move W2, 20
	1165 Move X0, X22
	1166 Call 0x1C5D788
	1167 Move W9, [X10]
	1168 Add W9, W9, 20
	1169 Add X8, X8, W9
	1170 Add X0, X8, 312
	1171 Move X8, [X0]
	1172 Move X3, [X0+8]
	1173 And W9, W24, W20
	1174 And W1, W9, 1
	1175 Move X0, X22
	1176 Move W2, W31
	1177 NotImplemented "Instruction BLR not yet implemented."
	1178 Move X8, [X19]
	1179 Move X8, [X8+184]
	1180 Move [X8+26], W31
	1181 Add X0, X31, 48
	1182 Call 0x199159C
	1183 Move X8, [X19]
	1184 Move W9, [X8+224]
	1185 Compare W9, 0
	1186 JumpIfNotEqual {1190}
	1187 Move X0, X8
	1188 Call 0x1C17DFC
	1189 Move X8, [X19]
	1190 Move X9, [X8+184]
	1191 Move X9, [X9+32]
	1192 Compare X9, 0
	1193 JumpIfEqual {1422}
	1194 Move W9, [X9+24]
	1195 NotImplemented "Instruction CMP not yet implemented."
	1196 Move TEMP, X27
	1197 And TEMP, TEMP, 1
	1198 Compare TEMP, 1
	1199 JumpIfNotEqual {1206}
	1200 Move W9, [X8+224]
	1201 Compare W9, 0
	1202 JumpIfNotEqual {1205}
	1203 Move X0, X8
	1204 Call 0x1C17DFC
	1205 Call App.ExecuteDelayedActionsIfNecessary
	1206 Move X20, [X31+176]
	1207 Move X19, [X31+184]
	1208 Move X22, [X31+160]
	1209 Move X21, [X31+168]
	1210 Move X24, [X31+144]
	1211 Move X23, [X31+152]
	1212 Move X26, [X31+128]
	1213 Move X25, [X31+136]
	1214 Move X28, [X31+112]
	1215 Move X27, [X31+120]
	1216 Move X29, [X31+96]
	1217 Move X30, [X31+104]
	1218 Add X31, X31, 192
	1219 Return 
	1220 Add X0, X31, 48
	1221 Call 0x199159C
	1222 Call 0x1C17F20
	1223 Call 0x1C17F20
	1224 Call 0x1C17F20
	1225 Call 0x1C17F20
	1226 Move X19, 0x23BF000
	1227 Move X19, [X19+1608]
	1228 Move X0, X19
	1229 Call 0x1C17D08
	1230 Call 0x19913D0
	1231 Move X0, X19
	1232 Call 0x1C17D08
	1233 Move X8, [X0+184]
	1234 Move X0, 0x23BF000
	1235 Move W20, [X8+25]
	1236 Move X0, [X0+2024]
	1237 Call 0x1C17D08
	1238 Call 0x1C17F10
	1239 Move X19, X0
	1240 Move X0, 0x23BF000
	1241 Move X0, [X0+2032]
	1242 Call 0x1C17D08
	1243 Move X1, X0
	1244 Move X0, X19
	1245 Move W2, W20
	1246 Call ActionExecutionException..ctor, X0, X1, X2
	1247 Move X0, 0x23BF000
	1248 Move X0, [X0+1824]
	1249 Call 0x1C17D08
	1250 Call 0x1C17F10
	1251 Move X20, X0
	1252 Move X0, 0x23BF000
	1253 Move X0, [X0+1816]
	1254 Call 0x1C17D08
	1255 Move X1, X0
	1256 Move X0, X20
	1257 Call 0x199150C
	1258 Move X0, X22
	1259 Call App.GetActionsDebugStr, X0
	1260 Move X21, X0
	1261 Move X0, X20
	1262 Call 0x19913C0
	1263 Move X0, 0x23BF000
	1264 Move X0, [X0+2040]
	1265 Call 0x1C17D08
	1266 Move X22, X0
	1267 Move X0, 0x23BF000
	1268 Move X0, [X0+1808]
	1269 Call 0x1C17D08
	1270 Move X3, X0
	1271 Move X0, X20
	1272 Move X1, X22
	1273 Move X2, X21
	1274 Call 0x1991510
	1275 Move X0, 0x23BF000
	1276 Move X0, [X0+1928]
	1277 Call 0x1C17D08
	1278 Call 0x19913D0
	1279 Move X0, 0x23BF000
	1280 Move X0, [X0+1936]
	1281 Call 0x1C17D08
	1282 Move X21, X0
	1283 Move X0, 0x23BF000
	1284 Move X0, [X0+1968]
	1285 Call 0x1C17D08
	1286 Move X4, X0
	1287 Move W0, 256
	1288 Move W5, 190
	1289 Move X19, 0x23BF000
	1290 Move X19, [X19+1608]
	1291 Move X0, X19
	1292 Call 0x1C17D08
	1293 Call 0x19913D0
	1294 Move X0, X19
	1295 Call 0x1C17D08
	1296 Move X8, [X0+184]
	1297 Move X0, 0x23BF000
	1298 Move W20, [X8+25]
	1299 Move X0, [X0+2024]
	1300 Call 0x1C17D08
	1301 Call 0x1C17F10
	1302 Move X19, X0
	1303 Move X0, 0x23BF000
	1304 Move X0, [X0+2048]
	1305 Call 0x1C17D08
	1306 Move X1, X0
	1307 Move X0, X19
	1308 Move W2, W20
	1309 Call ActionExecutionException..ctor, X0, X1, X2
	1310 Move X0, 0x23BF000
	1311 Move X0, [X0+1824]
	1312 Call 0x1C17D08
	1313 Call 0x1C17F10
	1314 Move X20, X0
	1315 Move X0, 0x23BF000
	1316 Move X0, [X0+1816]
	1317 Call 0x1C17D08
	1318 Move X1, X0
	1319 Move X0, X20
	1320 Call 0x199150C
	1321 Move X0, X22
	1322 Call App.GetActionsDebugStr, X0
	1323 Move X21, X0
	1324 Move X0, X20
	1325 Call 0x19913C0
	1326 Move X0, 0x23BF000
	1327 Move X0, [X0+2040]
	1328 Call 0x1C17D08
	1329 Move X22, X0
	1330 Move X0, 0x23BF000
	1331 Move X0, [X0+1808]
	1332 Call 0x1C17D08
	1333 Move X3, X0
	1334 Move X0, X20
	1335 Move X1, X22
	1336 Move X2, X21
	1337 Call 0x1991510
	1338 Move X0, 0x23BF000
	1339 Move X0, [X0+1928]
	1340 Call 0x1C17D08
	1341 Call 0x19913D0
	1342 Move X0, 0x23BF000
	1343 Move X0, [X0+1936]
	1344 Call 0x1C17D08
	1345 Move X21, X0
	1346 Move X0, 0x23BF000
	1347 Move X0, [X0+1968]
	1348 Call 0x1C17D08
	1349 Move X4, X0
	1350 Move W0, 256
	1351 Move W5, 197
	1352 Move X1, X19
	1353 Move X2, X20
	1354 Move X3, X21
	1355 Move X6, X31
	1356 Call Log.Error, X0, X1, X2, X3, X4, X5
	1357 Move X0, 0x23BF000
	1358 Move X0, [X0+2056]
	1359 Call 0x1C17D08
	1360 Move X1, X0
	1361 Move X0, X19
	1362 Call 0x1C17DEC
	1363 Move X19, 0x23BF000
	1364 Move X19, [X19+1608]
	1365 Move X0, X19
	1366 Call 0x1C17D08
	1367 Call 0x19913D0
	1368 Move X0, X19
	1369 Call 0x1C17D08
	1370 Move X8, [X0+184]
	1371 Move X0, 0x23BF000
	1372 Move W19, [X8+25]
	1373 Move X0, [X0+2024]
	1374 Call 0x1C17D08
	1375 Call 0x1C17F10
	1376 Move X20, X0
	1377 Move X0, 0x23BF000
	1378 Move X0, [X0+2064]
	1379 Call 0x1C17D08
	1380 Move X1, X0
	1381 Move X0, X20
	1382 Move W2, W19
	1383 Call ActionExecutionException..ctor, X0, X1, X2
	1384 Move X0, X20
	1385 Call 0x19913C0
	1386 Move X8, [X20]
	1387 Move X0, X20
	1388 Move X9, [X8+408]
	1389 Move X1, [X8+416]
	1390 NotImplemented "Instruction BLR not yet implemented."
	1391 Move X19, X0
	1392 Move X0, X22
	1393 Call App.GetActionsDebugStr, X0
	1394 Move X21, X0
	1395 Move X0, X19
	1396 Call 0x19913C0
	1397 Move X0, 0x23BF000
	1398 Move X0, [X0+2072]
	1399 Call 0x1C17D08
	1400 Move X22, X0
	1401 Move X0, 0x23BF000
	1402 Move X0, [X0+2040]
	1403 Call 0x1C17D08
	1404 Move X3, X0
	1405 Move W0, 1
	1406 Move X1, X22
	1407 Move X2, X19
	1408 Move X4, X21
	1409 Call 0x1991514
	1410 Move X0, 0x23BF000
	1411 Move X0, [X0+2056]
	1412 Call 0x1C17D08
	1413 Move X1, X0
	1414 Move X0, X20
	1415 Call 0x1C17DEC
	1416 Move [X31+4], W27
	1417 Call 0x1C17F20
	1418 Call 0x1C17F20
	1419 Call 0x1C17F20
	1420 Move [X31+4], W27
	1421 Call 0x1C17F20
	1422 Call 0x1C17F20
	1423 Call 0x1C17F20
	1424 Move [X31+4], W27
	1425 Call 0x1C17F20
	1426 Call 0x1C17F20
	1427 Move [X31+4], W27
	1428 Call 0x1C17F20
	1429 Move [X31+4], W27
	1430 Call 0x1C17F20
	1431 Call 0x1C17F20
	1432 Move X0, X22
	1433 Call 0x1C17F18
	1434 Move W0, 8
	1435 Call 0x3EB2AF0
	1436 Move X8, [X25]
	1437 Move [X0], X8
	1438 Move X1, 0x2180000
	1439 Add X1, X1, 3672
	1440 Move X2, X31
	1441 Call 0x3EB2B00
	1442 Call 0x1C17F20
	1443 Call 0x1C17F20
	1444 Call 0x1C17F20
	1445 Move X21, X1
	1446 Move X29, X0
	1447 Move X21, X1
	1448 Move X29, X0
	1449 Call 0x3EB2AE0
	1450 Move [X31+4], W27
	1451 Move X21, X1
	1452 Move X29, X0
	1453 Move X29, X0
	1454 NotImplemented "Instruction CMP not yet implemented."
	1455 Move X0, X29
	1456 Call 0x3EB2AD0
	1457 Move X22, [X0]
	1458 Call 0x3EB2AE0
	1459 Move W19, W31
	1460 Move X22, X31
	1461 Move X8, 0x23BF000
	1462 Move X8, [X8+1832]
	1463 Move W21, W1
	1464 Move X1, [X8]
	1465 Add X0, X31, 64
	1466 Call Enumerator<Object>.Dispose, X0
	1467 Compare X22, 0
	1468 JumpIfEqual {1475}
	1469 Move X0, X22
	1470 Call 0x1C17F18
	1471 Move X29, X0
	1472 Move [X31+4], W27
	1473 Move X29, X0
	1474 Move W21, W1
	1475 NotImplemented "Instruction CMP not yet implemented."
	1476 Move W8, 1
	1477 NotImplemented "Instruction CMP not yet implemented."
	1478 Move X0, X29
	1479 Call 0x3EB2AD0
	1480 Move X8, [X0]
	1481 Move [X31+48], X8
	1482 Call 0x3EB2AE0
	1483 Move X19, 0x23BF000
	1484 Move W27, [X31+4]
	1485 Move X19, [X19+1608]
	1486 Move X0, X29
	1487 Call 0x3EB2AD0
	1488 Move X21, X0
	1489 Move X0, 0x23BF000
	1490 Move X0, [X0+2000]
	1491 Call 0x1C17D08
	1492 Move X8, [X21]
	1493 Move X1, [X8]
	1494 Call 0x1C18270
	1495 Move TEMP, X0
	1496 And TEMP, TEMP, 1
	1497 Compare TEMP, 1
	1498 JumpIfNotEqual {1525}
	1499 Move X21, [X21]
	1500 Call 0x3EB2AE0
	1501 Move X0, 0x23BF000
	1502 Move X0, [X0+1928]
	1503 Call 0x1C17D08
	1504 Move W8, [X0+224]
	1505 Compare W8, 0
	1506 JumpIfNotEqual {1508}
	1507 Call 0x1C17DFC
	1508 Move X0, 0x23BF000
	1509 Move X0, [X0+1936]
	1510 Call 0x1C17D08
	1511 Move X22, X0
	1512 Move X0, 0x23BF000
	1513 Move X0, [X0+1968]
	1514 Call 0x1C17D08
	1515 Move X4, X0
	1516 Move W0, 256
	1517 Move W5, 310
	1518 Move X1, X21
	1519 Move X2, X31
	1520 Move X3, X22
	1521 Move X6, X31
	1522 Call Log.Error, X0, X1, X2, X3, X4, X5
	1523 Move X0, X21
	1524 Call 0x1C17F18
	1525 Move W0, 8
	1526 Call 0x3EB2AF0
	1527 Move X8, [X21]
	1528 Move [X0], X8
	1529 Move X1, 0x2180000
	1530 Add X1, X1, 3672
	1531 Move X2, X31
	1532 Call 0x3EB2B00
	1533 Move X29, X0
	1534 Move W21, W1
	1535 Move X21, X1
	1536 Move X29, X0
	1537 Call 0x3EB2AE0
	1538 Move X29, X0
	1539 Add X0, X31, 48
	1540 Call 0x199159C
	1541 Move X0, X29
	1542 Call 0x1D2D690
	1543 Call 0x1991590

Method: System.Void ExecuteDelayedActionsIfNecessary()

Disassembly:
	0x01D367E4 LDR X0, [X22]
	0x01D367E8 LDR W8, [X0 + 0xE0]
	0x01D367EC CBNZ W8, 0x1D367F8
	0x01D367F0 BL 0x1C16DFC
	0x01D367F4 LDR X0, [X22]
	0x01D367F8 LDR X8, [X0 + 0xB8]
	0x01D367FC LDR X22, [X8 + 0x10]
	0x01D36800 CBZ X22, 0x1D36884
	0x01D36804 ADRP X10, 0x23BD000
	0x01D36808 LDR X8, [X22]
	0x01D3680C LDR X10, [X10 + 0x6A8]
	0x01D36810 LDRH W9, [X8 + 0x12E]
	0x01D36814 LDR X1, [X10]
	0x01D36818 CBZ X9, 0x1D3683C
	0x01D3681C LDR X10, [X8 + 0xB0]
	0x01D36820 ADD X10, X10, 0x8
	0x01D36824 LDUR X11, [X10 - 0x8]
	0x01D36828 CMP X11, X1
	0x01D3682C B.EQ 0x1D3684C
	0x01D36830 SUBS X9, X9, 0x1
	0x01D36834 ADD X10, X10, 0x10
	0x01D36838 B.NE 0x1D36824
	0x01D3683C MOVZ W2, 0x4
	0x01D36840 MOV X0, X22
	0x01D36844 BL 0x1C5C788
	0x01D36848 B 0x1D3685C
	0x01D3684C LDR W9, [X10]
	0x01D36850 ADD W9, W9, 0x4
	0x01D36854 ADD X8, X8, W9, 0x4, SXTW
	0x01D36858 ADD X0, X8, 0x138
	0x01D3685C LDP X6, X5, [X0]
	0x01D36860 MOV X0, X22
	0x01D36864 MOV X1, X21
	0x01D36868 MOV X2, X20
	0x01D3686C MOV X4, X19
	0x01D36870 LDP X20, X19, [X31 + 0x20]
	0x01D36874 LDP X22, X21, [X31 + 0x10]
	0x01D36878 MOVZ W3, 0x1
	0x01D3687C LDP X30, X23, [X31], #0x30
	0x01D36880 BR X6
	0x01D36884 BL 0x1C16F20
	0x01D36888 STP X30, X23, [X31 - 0x30]!
	0x01D3688C STP X22, X21, [X31 + 0x10]
	0x01D36890 STP X20, X19, [X31 + 0x20]
	0x01D36894 ADRP X23, 0x26A2000
	0x01D36898 ADRP X22, 0x23BD000
	0x01D3689C LDRB W8, [X23 + 0x6E3]
	0x01D368A0 LDR X22, [X22 + 0x648]
	0x01D368A4 MOV X19, X2
	0x01D368A8 MOV X20, X1
	0x01D368AC MOV X21, X0
	0x01D368B0 TBNZ X8, 0x0, 0x1D368D4
	0x01D368B4 ADRP X0, 0x23BD000
	0x01D368B8 LDR X0, [X0 + 0x648]
	0x01D368BC BL 0x1C16CF4
	0x01D368C0 ADRP X0, 0x23BD000
	0x01D368C4 LDR X0, [X0 + 0x6A8]
	0x01D368C8 BL 0x1C16CF4
	0x01D368CC MOVZ W8, 0x1
	0x01D368D0 STRB W8, [X23 + 0x6E3]
	0x01D368D4 LDR X0, [X22]
	0x01D368D8 LDR W8, [X0 + 0xE0]
	0x01D368DC CBNZ W8, 0x1D368E8
	0x01D368E0 BL 0x1C16DFC
	0x01D368E4 LDR X0, [X22]
	0x01D368E8 LDR X8, [X0 + 0xB8]
	0x01D368EC LDR X22, [X8 + 0x10]
	0x01D368F0 CBZ X22, 0x1D36974
	0x01D368F4 ADRP X10, 0x23BD000
	0x01D368F8 LDR X8, [X22]
	0x01D368FC LDR X10, [X10 + 0x6A8]
	0x01D36900 LDRH W9, [X8 + 0x12E]
	0x01D36904 LDR X1, [X10]
	0x01D36908 CBZ X9, 0x1D3692C
	0x01D3690C LDR X10, [X8 + 0xB0]
	0x01D36910 ADD X10, X10, 0x8
	0x01D36914 LDUR X11, [X10 - 0x8]
	0x01D36918 CMP X11, X1
	0x01D3691C B.EQ 0x1D3693C
	0x01D36920 SUBS X9, X9, 0x1
	0x01D36924 ADD X10, X10, 0x10
	0x01D36928 B.NE 0x1D36914
	0x01D3692C MOVZ W2, 0x4
	0x01D36930 MOV X0, X22
	0x01D36934 BL 0x1C5C788
	0x01D36938 B 0x1D3694C
	0x01D3693C LDR W9, [X10]
	0x01D36940 ADD W9, W9, 0x4
	0x01D36944 ADD X8, X8, W9, 0x4, SXTW
	0x01D36948 ADD X0, X8, 0x138
	0x01D3694C LDP X6, X5, [X0]
	0x01D36950 MOV X0, X22
	0x01D36954 MOV X1, X21
	0x01D36958 MOV X2, X20
	0x01D3695C MOV X4, X19
	0x01D36960 LDP X20, X19, [X31 + 0x20]
	0x01D36964 LDP X22, X21, [X31 + 0x10]
	0x01D36968 MOV W3, W31
	0x01D3696C LDP X30, X23, [X31], #0x30
	0x01D36970 BR X6
	0x01D36974 BL 0x1C16F20
	0x01D36978 STP X30, X21, [X31 - 0x20]!
	0x01D3697C STP X20, X19, [X31 + 0x10]
	0x01D36980 ADRP X21, 0x26A2000
	0x01D36984 ADRP X20, 0x23BD000
	0x01D36988 LDRB W8, [X21 + 0x6E4]
	0x01D3698C LDR X20, [X20 + 0x648]
	0x01D36990 MOV X19, X0
	0x01D36994 TBNZ X8, 0x0, 0x1D369B8
	0x01D36998 ADRP X0, 0x23BD000
	0x01D3699C LDR X0, [X0 + 0x648]
	0x01D369A0 BL 0x1C16CF4
	0x01D369A4 ADRP X0, 0x23BD000
	0x01D369A8 LDR X0, [X0 + 0x6A8]
	0x01D369AC BL 0x1C16CF4
	0x01D369B0 MOVZ W8, 0x1
	0x01D369B4 STRB W8, [X21 + 0x6E4]
	0x01D369B8 LDR X0, [X20]
	0x01D369BC LDR W8, [X0 + 0xE0]
	0x01D369C0 CBNZ W8, 0x1D369CC
	0x01D369C4 BL 0x1C16DFC
	0x01D369C8 LDR X0, [X20]
	0x01D369CC LDR X8, [X0 + 0xB8]
	0x01D369D0 LDR X20, [X8 + 0x10]
	0x01D369D4 CBZ X20, 0x1D36A48
	0x01D369D8 ADRP X10, 0x23BD000
	0x01D369DC LDR X8, [X20]
	0x01D369E0 LDR X10, [X10 + 0x6A8]
	0x01D369E4 LDRH W9, [X8 + 0x12E]
	0x01D369E8 LDR X1, [X10]
	0x01D369EC CBZ X9, 0x1D36A10
	0x01D369F0 LDR X10, [X8 + 0xB0]
	0x01D369F4 ADD X10, X10, 0x8
	0x01D369F8 LDUR X11, [X10 - 0x8]
	0x01D369FC CMP X11, X1
	0x01D36A00 B.EQ 0x1D36A20
	0x01D36A04 SUBS X9, X9, 0x1
	0x01D36A08 ADD X10, X10, 0x10
	0x01D36A0C B.NE 0x1D369F8
	0x01D36A10 MOVZ W2, 0x7
	0x01D36A14 MOV X0, X20
	0x01D36A18 BL 0x1C5C788
	0x01D36A1C B 0x1D36A30
	0x01D36A20 LDR W9, [X10]
	0x01D36A24 ADD W9, W9, 0x7
	0x01D36A28 ADD X8, X8, W9, 0x4, SXTW
	0x01D36A2C ADD X0, X8, 0x138
	0x01D36A30 LDP X3, X2, [X0]
	0x01D36A34 MOV X0, X20
	0x01D36A38 MOV X1, X19
	0x01D36A3C LDP X20, X19, [X31 + 0x10]
	0x01D36A40 LDP X30, X21, [X31], #0x20
	0x01D36A44 BR X3
	0x01D36A48 BL 0x1C16F20
	0x01D36A4C MOV X1, X31
	0x01D36A50 B 0x3C36C30
	0x01D36A54 STP X30, X23, [X31 - 0x30]!
	0x01D36A58 STP X22, X21, [X31 + 0x10]
	0x01D36A5C STP X20, X19, [X31 + 0x20]
	0x01D36A60 ADRP X22, 0x26A2000
	0x01D36A64 ADRP X23, 0x23BD000
	0x01D36A68 ADRP X19, 0x23BD000
	0x01D36A6C ADRP X20, 0x23BD000
	0x01D36A70 ADRP X21, 0x23BD000
	0x01D36A74 LDRB W8, [X22 + 0x6E5]
	0x01D36A78 LDR X23, [X23 + 0x8E0]
	0x01D36A7C LDR X19, [X19 + 0x8E8]
	0x01D36A80 LDR X20, [X20 + 0x648]
	0x01D36A84 LDR X21, [X21 + 0x8F0]
	0x01D36A88 TBNZ X8, 0x0, 0x1D36AC4
	0x01D36A8C ADRP X0, 0x23BD000
	0x01D36A90 LDR X0, [X0 + 0x648]
	0x01D36A94 BL 0x1C16CF4
	0x01D36A98 ADRP X0, 0x23BD000
	0x01D36A9C LDR X0, [X0 + 0x8E8]
	0x01D36AA0 BL 0x1C16CF4
	0x01D36AA4 ADRP X0, 0x23BD000
	0x01D36AA8 LDR X0, [X0 + 0x8E0]
	0x01D36AAC BL 0x1C16CF4
	0x01D36AB0 ADRP X0, 0x23BD000
	0x01D36AB4 LDR X0, [X0 + 0x8F0]
	0x01D36AB8 BL 0x1C16CF4
	0x01D36ABC MOVZ W8, 0x1
	0x01D36AC0 STRB W8, [X22 + 0x6E5]
	0x01D36AC4 LDR X0, [X23]
	0x01D36AC8 BL 0x1C16F10
	0x01D36ACC LDR X1, [X19]
	0x01D36AD0 MOV X19, X0
	0x01D36AD4 BL 0x301B7C4
	0x01D36AD8 LDR X8, [X20]
	0x01D36ADC LDR X8, [X8 + 0xB8]
	0x01D36AE0 STR X19, [X8 + 0x30]
	0x01D36AE4 LDR X0, [X21]
	0x01D36AE8 BL 0x1C16F10
	0x01D36AEC MOV X1, X31
	0x01D36AF0 MOV X19, X0
	0x01D36AF4 BL 0x3231AC4
	0x01D36AF8 LDR X8, [X20]
	0x01D36AFC LDR X8, [X8 + 0xB8]
	0x01D36B00 STR X19, [X8 + 0x68]
	0x01D36B04 LDR X0, [X21]
	0x01D36B08 BL 0x1C16F10
	0x01D36B0C MOV X1, X31
	0x01D36B10 MOV X19, X0
	0x01D36B14 BL 0x3231AC4
	0x01D36B18 LDR X8, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x26A3000
	007 Move X21, 0x23BE000
	008 Move W8, [X19+1753]
	009 Move X21, [X21+1608]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x23BE000
	015 Move X0, [X0+1608]
	016 Call 0x1C17CF4
	017 Move X0, 0x23BE000
	018 Move X0, [X0+2088]
	019 Call 0x1C17CF4
	020 Move X0, 0x23BE000
	021 Move X0, [X0+1792]
	022 Call 0x1C17CF4
	023 Move X0, 0x23BE000
	024 Move X0, [X0+1904]
	025 Call 0x1C17CF4
	026 Move X0, 0x23BE000
	027 Move X0, [X0+1448]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X19+1753], W8
	031 Move X0, [X21]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X21]
	037 Move X8, [X0+184]
	038 Move X9, [X8+32]
	039 Compare X9, 0
	040 JumpIfEqual {137}
	041 Move W9, [X9+24]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move W9, [X0+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {49}
	046 Call 0x1C17DFC
	047 Move X8, [X21]
	048 Move X8, [X8+184]
	049 Move X0, [X8+40]
	050 Compare X0, 0
	051 JumpIfEqual {137}
	052 Move W2, [X0+24]
	053 Move W9, [X0+28]
	054 Add W9, W9, 1
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move [X0+24], W31
	057 Move [X0+28], W9
	058 Move X0, [X0+16]
	059 Move W1, W31
	060 Move X3, X31
	061 Call Array.Clear, X0, X1, X2
	062 Move X8, [X21]
	063 Move X8, [X8+184]
	064 Move X0, [X8+40]
	065 Compare X0, 0
	066 JumpIfEqual {137}
	067 Move X9, 0x23BE000
	068 Move X9, [X9+2088]
	069 Move X1, [X8+32]
	070 Move X2, [X9]
	071 Call List`1<Object>.AddRange, X0, X1
	072 Move X0, [X21]
	073 Move X8, [X0+184]
	074 Move X9, [X8+32]
	075 Compare X9, 0
	076 JumpIfEqual {137}
	077 Move W2, [X9+24]
	078 Move W10, [X9+28]
	079 Add W10, W10, 1
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move [X9+24], W31
	082 Move [X9+28], W10
	083 Move X0, [X9+16]
	084 Move W1, W31
	085 Move X3, X31
	086 Call Array.Clear, X0, X1, X2
	087 Move X0, [X21]
	088 Move X8, [X0+184]
	089 Move W9, [X8+56]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X22, 0x23BE000
	092 Move W10, [X0+224]
	093 Move X22, [X22+1448]
	094 Compare W10, 0
	095 JumpIfNotEqual {100}
	096 Call 0x1C17DFC
	097 Move X8, [X21]
	098 Move X8, [X8+184]
	099 Move W9, [X8+56]
	100 Move X0, [X8+40]
	101 Move W10, 1
	102 Add W9, W9, 1
	103 Move [X8+25], W10
	104 Move [X8+56], W9
	105 Call App.ExecuteAction, X0
	106 Move X19, X31
	107 Move X0, [X21]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {113}
	111 Call 0x1C17DFC
	112 Move X0, [X21]
	113 Move X8, [X22]
	114 Move X9, [X0+184]
	115 Move W10, [X8+224]
	116 Move W20, [X9+56]
	117 Compare W10, 0
	118 JumpIfNotEqual {121}
	119 Move X0, X8
	120 Call 0x1C17DFC
	121 Subtract W1, W20, 1
	122 Move W0, W31
	123 Move X2, X31
	124 Call Math.Max, X0, X1
	125 Move X8, [X21]
	126 Move X8, [X8+184]
	127 Move [X8+56], W0
	128 Move [X8+25], W31
	129 Compare X19, 0
	130 JumpIfNotEqual {184}
	131 Move X20, [X31+32]
	132 Move X19, [X31+40]
	133 Move X22, [X31+16]
	134 Move X21, [X31+24]
	135 Move X30, [X31+48]
	136 Return 
	137 Call 0x1C17F20
	138 Move X19, 0x23BE000
	139 Move X19, [X19+1608]
	140 Move X0, X19
	141 Call 0x1C17D08
	142 Call 0x19913D0
	143 Move X0, X19
	144 Call 0x1C17D08
	145 Move X8, [X0+184]
	146 Move X0, 0x23BE000
	147 Move [X8+56], W31
	148 Move X0, [X0+2136]
	149 Call 0x1C17D08
	150 Call 0x1C17F10
	151 Move X19, X0
	152 Move X0, 0x23BE000
	153 Move X0, [X0+2144]
	154 Call 0x1C17D08
	155 Move X1, X0
	156 Move X0, X19
	157 Move X2, X31
	158 Call OverflowException..ctor, X0, X1
	159 Move X0, 0x23BE000
	160 Move X0, [X0+1928]
	161 Call 0x1C17D08
	162 Call 0x19913D0
	163 Move X0, 0x23BE000
	164 Move X0, [X0+1936]
	165 Call 0x1C17D08
	166 Move X20, X0
	167 Move X0, 0x23BE000
	168 Move X0, [X0+2152]
	169 Call 0x1C17D08
	170 Move X4, X0
	171 Move W0, 256
	172 Move W5, 352
	173 Move X1, X19
	174 Move X2, X31
	175 Move X3, X20
	176 Move X6, X31
	177 Call Log.Error, X0, X1, X2, X3, X4, X5
	178 Move X0, 0x23BE000
	179 Move X0, [X0+2160]
	180 Call 0x1C17D08
	181 Move X1, X0
	182 Move X0, X19
	183 Call 0x1C17DEC
	184 Move X0, X19
	185 Call 0x1C17F18
	186 Move X20, X0
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move X0, X20
	189 Call 0x3EB2AD0
	190 Move X19, [X0]
	191 Call 0x3EB2AE0
	192 Move X19, X31
	193 Move X20, X0
	194 Move X0, [X21]
	195 Move W8, [X0+224]
	196 Compare W8, 0
	197 JumpIfNotEqual {200}
	198 Call 0x1C17DFC
	199 Move X0, [X21]
	200 Move X8, [X22]
	201 Move X9, [X0+184]
	202 Move W10, [X8+224]
	203 Move W22, [X9+56]
	204 Compare W10, 0
	205 JumpIfNotEqual {208}
	206 Move X0, X8
	207 Call 0x1C17DFC
	208 Subtract W1, W22, 1
	209 Move W0, W31
	210 Move X2, X31
	211 Call Math.Max, X0, X1
	212 Move X8, [X21]
	213 Move X8, [X8+184]
	214 Move [X8+56], W0
	215 Move [X8+25], W31
	216 Compare X19, 0
	217 JumpIfNotEqual {220}
	218 Move X0, X20
	219 Call 0x1D2D690
	220 Move X0, X19
	221 Call 0x1C17F18
	222 Call 0x1991590

Method: System.Void ScheduleAction(AnimalCompany.BaseAction[] actions)

Disassembly:
	0x01D36B1C LDP X22, X21, [X31 + 0x10]
	0x01D36B20 LDR X8, [X8 + 0xB8]
	0x01D36B24 STR X19, [X8 + 0x70]
	0x01D36B28 LDP X20, X19, [X31 + 0x20]
	0x01D36B2C LDP X30, X23, [X31], #0x30
	0x01D36B30 RET
	0x01D36B34 LDRB W0, [X0 + 0x8C]
	0x01D36B38 RET
	0x01D36B3C AND W8, W1, 0x1
	0x01D36B40 STRB W8, [X0 + 0x8C]
	0x01D36B44 RET
	0x01D36B48 STR X30, [X31 - 0x40]!
	0x01D36B4C STP X24, X23, [X31 + 0x10]
	0x01D36B50 STP X22, X21, [X31 + 0x20]
	0x01D36B54 STP X20, X19, [X31 + 0x30]
	0x01D36B58 MOV W23, W1
	0x01D36B5C MOV X1, X31
	0x01D36B60 MOV X19, X5
	0x01D36B64 MOV X20, X4
	0x01D36B68 MOV X21, X3
	0x01D36B6C MOV X22, X2
	0x01D36B70 MOV X24, X0
	0x01D36B74 BL 0x33BDD8C
	0x01D36B78 STR W23, [X24 + 0x14]
	0x01D36B7C STP X22, X21, [X24 + 0x18]
	0x01D36B80 STP X20, X19, [X24 + 0x28]
	0x01D36B84 LDP X20, X19, [X31 + 0x30]
	0x01D36B88 LDP X22, X21, [X31 + 0x20]
	0x01D36B8C LDP X24, X23, [X31 + 0x10]
	0x01D36B90 LDR X30, [X31], #0x40
	0x01D36B94 RET
	0x01D36B98 MOV X1, X31
	0x01D36B9C B 0x33BDD8C
	0x01D36BA0 STP X30, X21, [X31 - 0x20]!
	0x01D36BA4 STP X20, X19, [X31 + 0x10]
	0x01D36BA8 ADRP X21, 0x26A2000
	0x01D36BAC LDRB W8, [X21 + 0x6E7]
	0x01D36BB0 MOV X20, X1
	0x01D36BB4 MOV X19, X0
	0x01D36BB8 TBNZ X8, 0x0, 0x1D36BDC
	0x01D36BBC ADRP X0, 0x23BD000
	0x01D36BC0 LDR X0, [X0 + 0x8F8]
	0x01D36BC4 BL 0x1C16CF4
	0x01D36BC8 ADRP X0, 0x23BD000
	0x01D36BCC LDR X0, [X0 + 0x900]
	0x01D36BD0 BL 0x1C16CF4
	0x01D36BD4 MOVZ W8, 0x1
	0x01D36BD8 STRB W8, [X21 + 0x6E7]
	0x01D36BDC CBZ X20, 0x1D36C5C
	0x01D36BE0 LDR X0, [X20 + 0x68]
	0x01D36BE4 CBZ X0, 0x1D36C5C
	0x01D36BE8 ADRP X8, 0x23BD000
	0x01D36BEC LDR X8, [X8 + 0x8F8]
	0x01D36BF0 LDR W1, [X19 + 0x14]
	0x01D36BF4 LDR X2, [X8]
	0x01D36BF8 BL 0x265A224
	0x01D36BFC LDR X0, [X20 + 0x70]
	0x01D36C00 CBZ X0, 0x1D36C5C
	0x01D36C04 ADRP X21, 0x23BD000
	0x01D36C08 LDR X21, [X21 + 0x900]
	0x01D36C0C LDR X1, [X19 + 0x18]
	0x01D36C10 LDR X2, [X21]
	0x01D36C14 BL 0x265C3F4
	0x01D36C18 LDR X0, [X20 + 0x78]
	0x01D36C1C CBZ X0, 0x1D36C5C
	0x01D36C20 LDR X1, [X19 + 0x20]
	0x01D36C24 LDR X2, [X21]
	0x01D36C28 BL 0x265C3F4
	0x01D36C2C LDR X0, [X20 + 0x88]
	0x01D36C30 CBZ X0, 0x1D36C5C
	0x01D36C34 LDR X1, [X19 + 0x28]
	0x01D36C38 LDR X2, [X21]
	0x01D36C3C BL 0x265C3F4
	0x01D36C40 LDR X0, [X20 + 0x90]
	0x01D36C44 CBZ X0, 0x1D36C5C
	0x01D36C48 LDR X1, [X19 + 0x30]
	0x01D36C4C LDR X2, [X21]
	0x01D36C50 LDP X20, X19, [X31 + 0x10]
	0x01D36C54 LDP X30, X21, [X31], #0x20
	0x01D36C58 B 0x265C3F4
	0x01D36C5C BL 0x1C16F20
	0x01D36C60 STP X30, X23, [X31 - 0x30]!
	0x01D36C64 STP X22, X21, [X31 + 0x10]
	0x01D36C68 STP X20, X19, [X31 + 0x20]
	0x01D36C6C MOV W22, W1
	0x01D36C70 MOV X1, X31
	0x01D36C74 MOV W19, W4
	0x01D36C78 MOV W20, W3
	0x01D36C7C MOV W21, W2
	0x01D36C80 MOV X23, X0
	0x01D36C84 BL 0x33BDD8C
	0x01D36C88 STP W22, W21, [X23 + 0x14]
	0x01D36C8C STP W20, W19, [X23 + 0x1C]
	0x01D36C90 LDP X20, X19, [X31 + 0x20]
	0x01D36C94 LDP X22, X21, [X31 + 0x10]
	0x01D36C98 LDP X30, X23, [X31], #0x30
	0x01D36C9C RET
	0x01D36CA0 STR X30, [X31 - 0x30]!
	0x01D36CA4 STP X22, X21, [X31 + 0x10]
	0x01D36CA8 STP X20, X19, [X31 + 0x20]
	0x01D36CAC ADRP X21, 0x26A2000
	0x01D36CB0 LDRB W8, [X21 + 0x6E8]
	0x01D36CB4 MOV X20, X1
	0x01D36CB8 MOV X19, X0
	0x01D36CBC TBNZ X8, 0x0, 0x1D36CE0
	0x01D36CC0 ADRP X0, 0x23BD000
	0x01D36CC4 LDR X0, [X0 + 0x908]
	0x01D36CC8 BL 0x1C16CF4
	0x01D36CCC ADRP X0, 0x23BD000
	0x01D36CD0 LDR X0, [X0 + 0x910]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x26A3000
	009 Move W8, [X20+1754]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0x23BE000
	016 Move X0, [X0+1608]
	017 Call 0x1C17CF4
	018 Move X0, 0x23BE000
	019 Move X0, [X0+2168]
	020 Call 0x1C17CF4
	021 Move X0, 0x23BE000
	022 Move X0, [X0+1928]
	023 Call 0x1C17CF4
	024 Move X0, 0x23BE000
	025 Move X0, [X0+2176]
	026 Call 0x1C17CF4
	027 Move X0, 0x23BE000
	028 Move X0, [X0+1936]
	029 Call 0x1C17CF4
	030 Move X0, 0x23BE000
	031 Move X0, [X0+2184]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+1754], W8
	035 Compare X19, 0
	036 JumpIfEqual {117}
	037 Move X8, [X19+24]
	038 Compare X8, 0
	039 JumpIfEqual {117}
	040 Move X20, 0x23BE000
	041 Move X20, [X20+1928]
	042 Move X0, [X20]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move W0, 3
	048 Move W1, 256
	049 Move X2, X31
	050 Call Log.IsEnabled, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {90}
	055 Move X8, 0x23BE000
	056 Move X8, [X8+1608]
	057 Move X0, [X8]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X19
	063 Call App.GetActionsDebugStr, X0
	064 Move X8, 0x23BE000
	065 Move X8, [X8+2184]
	066 Move X1, X0
	067 Move X2, X31
	068 Move X8, [X8]
	069 Move X0, X8
	070 Call String.Concat, X0, X1
	071 Move X8, [X20]
	072 Move X20, X0
	073 Move W9, [X8+224]
	074 Compare W9, 0
	075 JumpIfNotEqual {78}
	076 Move X0, X8
	077 Call 0x1C17DFC
	078 Move X8, 0x23BE000
	079 Move X9, 0x23BE000
	080 Move X8, [X8+1936]
	081 Move X9, [X9+2176]
	082 Move W0, 256
	083 Move W5, 379
	084 Move X3, [X8]
	085 Move X4, [X9]
	086 Move X1, X20
	087 Move X2, X31
	088 Move X6, X31
	089 Call Log.Info, X0, X1, X2, X3, X4, X5
	090 Move X8, [X19+24]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X23, 0x23BE000
	093 Move X24, 0x23BE000
	094 Move X23, [X23+1608]
	095 Move X24, [X24+2168]
	096 Move X21, X31
	097 And X8, X8, 0
	098 Add X22, X19, 32
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X0, [X23]
	101 Move X20, [X22]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {107}
	105 Call 0x1C17DFC
	106 Move X0, [X23]
	107 Move X8, [X0+184]
	108 Move X0, [X8+64]
	109 Compare X0, 0
	110 JumpIfEqual {125}
	111 Move X2, [X24]
	112 Move X1, X20
	113 Call ConcurrentQueue`1<Object>.Enqueue, X0, X1
	114 Move W8, [X19+24]
	115 Add X21, X21, 1
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X20, [X31+48]
	118 Move X19, [X31+56]
	119 Move X22, [X31+32]
	120 Move X21, [X31+40]
	121 Move X24, [X31+16]
	122 Move X23, [X31+24]
	123 Move X30, [X31+64]
	124 Return 
	125 Call 0x1C17F20
	126 Call 0x1C17F28

Method: System.String GetActionsDebugStr(System.Collections.Generic.IList`1<AnimalCompany.BaseAction> actions)

Disassembly:
	0x01D36310 BL 0x1C16DFC
	0x01D36314 LDR X8, [X21]
	0x01D36318 LDR X10, [X8 + 0xB8]
	0x01D3631C CMP X20, X22
	0x01D36320 B.EQ 0x1D363CC
	0x01D36324 LDR X0, [X10 + 0x58]
	0x01D36328 CBZ X0, 0x1D363EC
	0x01D3632C ADRP X8, 0x23BD000
	0x01D36330 LDR X8, [X8 + 0x8C8]
	0x01D36334 MOV X1, X19
	0x01D36338 LDR X2, [X8]
	0x01D3633C BL 0x2992C14
	0x01D36340 ADRP X8, 0x23BD000
	0x01D36344 LDR X8, [X8 + 0x898]
	0x01D36348 LDR X0, [X8]
	0x01D3634C BL 0x1C16F10
	0x01D36350 MOV X1, X19
	0x01D36354 MOV X2, X31
	0x01D36358 MOV X20, X0
	0x01D3635C BL 0x35B9AFC
	0x01D36360 MOV X0, X20
	0x01D36364 B 0x1D363BC
	0x01D36368 ADRP X19, 0x23BD000
	0x01D3636C LDR X19, [X19 + 0x898]
	0x01D36370 LDR X0, [X19]
	0x01D36374 LDR W8, [X0 + 0xE0]
	0x01D36378 CBNZ W8, 0x1D36380
	0x01D3637C BL 0x1C16DFC
	0x01D36380 ADRP X20, 0x26A2000
	0x01D36384 LDRB W8, [X20 + 0x78B]
	0x01D36388 CBNZ W8, 0x1D363A0
	0x01D3638C ADRP X0, 0x23BD000
	0x01D36390 LDR X0, [X0 + 0x898]
	0x01D36394 BL 0x1C16CF4
	0x01D36398 MOVZ W8, 0x1
	0x01D3639C STRB W8, [X20 + 0x78B]
	0x01D363A0 LDR X0, [X19]
	0x01D363A4 LDR W8, [X0 + 0xE0]
	0x01D363A8 CBNZ W8, 0x1D363B4
	0x01D363AC BL 0x1C16DFC
	0x01D363B0 LDR X0, [X19]
	0x01D363B4 LDR X8, [X0 + 0xB8]
	0x01D363B8 LDR X0, [X8]
	0x01D363BC LDP X20, X19, [X31 + 0x20]
	0x01D363C0 LDP X22, X21, [X31 + 0x10]
	0x01D363C4 LDR X30, [X31], #0x30
	0x01D363C8 RET
	0x01D363CC LDR X0, [X10 + 0x50]
	0x01D363D0 CBZ X0, 0x1D363EC
	0x01D363D4 MOV X1, X19
	0x01D363D8 LDP X20, X19, [X31 + 0x20]
	0x01D363DC LDP X22, X21, [X31 + 0x10]
	0x01D363E0 MOV X2, X31
	0x01D363E4 LDR X30, [X31], #0x30
	0x01D363E8 B 0x35C0908
	0x01D363EC BL 0x1C16F20
	0x01D363F0 STR X30, [X31 - 0x30]!
	0x01D363F4 STP X22, X21, [X31 + 0x10]
	0x01D363F8 STP X20, X19, [X31 + 0x20]
	0x01D363FC ADRP X22, 0x26A2000
	0x01D36400 ADRP X21, 0x23BD000
	0x01D36404 LDRB W8, [X22 + 0x6DE]
	0x01D36408 LDR X21, [X21 + 0x648]
	0x01D3640C MOV X19, X1
	0x01D36410 MOV X20, X0
	0x01D36414 TBNZ X8, 0x0, 0x1D36438
	0x01D36418 ADRP X0, 0x23BD000
	0x01D3641C LDR X0, [X0 + 0x648]
	0x01D36420 BL 0x1C16CF4
	0x01D36424 ADRP X0, 0x23BD000
	0x01D36428 LDR X0, [X0 + 0x6A8]
	0x01D3642C BL 0x1C16CF4
	0x01D36430 MOVZ W8, 0x1
	0x01D36434 STRB W8, [X22 + 0x6DE]
	0x01D36438 LDR X0, [X21]
	0x01D3643C LDR W8, [X0 + 0xE0]
	0x01D36440 CBNZ W8, 0x1D3644C
	0x01D36444 BL 0x1C16DFC
	0x01D36448 LDR X0, [X21]
	0x01D3644C LDR X8, [X0 + 0xB8]
	0x01D36450 LDR X21, [X8 + 0x10]
	0x01D36454 CBZ X21, 0x1D364D4
	0x01D36458 ADRP X10, 0x23BD000
	0x01D3645C LDR X8, [X21]
	0x01D36460 LDR X10, [X10 + 0x6A8]
	0x01D36464 LDRH W9, [X8 + 0x12E]
	0x01D36468 LDR X1, [X10]
	0x01D3646C CBZ X9, 0x1D36490
	0x01D36470 LDR X10, [X8 + 0xB0]
	0x01D36474 ADD X10, X10, 0x8
	0x01D36478 LDUR X11, [X10 - 0x8]
	0x01D3647C CMP X11, X1
	0x01D36480 B.EQ 0x1D364A0
	0x01D36484 SUBS X9, X9, 0x1
	0x01D36488 ADD X10, X10, 0x10
	0x01D3648C B.NE 0x1D36478
	0x01D36490 MOVZ W2, 0x3
	0x01D36494 MOV X0, X21
	0x01D36498 BL 0x1C5C788
	0x01D3649C B 0x1D364B0
	0x01D364A0 LDR W9, [X10]
	0x01D364A4 ADD W9, W9, 0x3
	0x01D364A8 ADD X8, X8, W9, 0x4, SXTW
	0x01D364AC ADD X0, X8, 0x138
	0x01D364B0 LDP X5, X4, [X0]
	0x01D364B4 MOV X0, X21
	0x01D364B8 MOV X1, X20
	0x01D364BC MOV X3, X19
	0x01D364C0 LDP X20, X19, [X31 + 0x20]
	0x01D364C4 LDP X22, X21, [X31 + 0x10]
	0x01D364C8 MOVZ W2, 0x2
	0x01D364CC LDR X30, [X31], #0x30
	0x01D364D0 BR X5
	0x01D364D4 BL 0x1C16F20
	0x01D364D8 STR X30, [X31 - 0x30]!
	0x01D364DC STP X22, X21, [X31 + 0x10]
	0x01D364E0 STP X20, X19, [X31 + 0x20]
	0x01D364E4 ADRP X22, 0x26A2000
	0x01D364E8 ADRP X21, 0x23BD000
	0x01D364EC LDRB W8, [X22 + 0x6DF]
	0x01D364F0 LDR X21, [X21 + 0x648]
	0x01D364F4 MOV X19, X1
	0x01D364F8 MOV X20, X0
	0x01D364FC TBNZ X8, 0x0, 0x1D36520
	0x01D36500 ADRP X0, 0x23BD000
	0x01D36504 LDR X0, [X0 + 0x648]
	0x01D36508 BL 0x1C16CF4
	0x01D3650C ADRP X0, 0x23BD000
	0x01D36510 LDR X0, [X0 + 0x6A8]
	0x01D36514 BL 0x1C16CF4
	0x01D36518 MOVZ W8, 0x1
	0x01D3651C STRB W8, [X22 + 0x6DF]
	0x01D36520 LDR X0, [X21]
	0x01D36524 LDR W8, [X0 + 0xE0]
	0x01D36528 CBNZ W8, 0x1D36534
	0x01D3652C BL 0x1C16DFC
	0x01D36530 LDR X0, [X21]
	0x01D36534 LDR X8, [X0 + 0xB8]
	0x01D36538 LDR X21, [X8 + 0x10]
	0x01D3653C CBZ X21, 0x1D365BC
	0x01D36540 ADRP X10, 0x23BD000
	0x01D36544 LDR X8, [X21]
	0x01D36548 LDR X10, [X10 + 0x6A8]
	0x01D3654C LDRH W9, [X8 + 0x12E]
	0x01D36550 LDR X1, [X10]
	0x01D36554 CBZ X9, 0x1D36578
	0x01D36558 LDR X10, [X8 + 0xB0]
	0x01D3655C ADD X10, X10, 0x8
	0x01D36560 LDUR X11, [X10 - 0x8]
	0x01D36564 CMP X11, X1
	0x01D36568 B.EQ 0x1D36588
	0x01D3656C SUBS X9, X9, 0x1
	0x01D36570 ADD X10, X10, 0x10
	0x01D36574 B.NE 0x1D36560
	0x01D36578 MOVZ W2, 0x3
	0x01D3657C MOV X0, X21
	0x01D36580 BL 0x1C5C788
	0x01D36584 B 0x1D36598
	0x01D36588 LDR W9, [X10]
	0x01D3658C ADD W9, W9, 0x3
	0x01D36590 ADD X8, X8, W9, 0x4, SXTW
	0x01D36594 ADD X0, X8, 0x138
	0x01D36598 LDP X5, X4, [X0]
	0x01D3659C MOV X0, X21
	0x01D365A0 MOV X1, X20
	0x01D365A4 MOV X3, X19
	0x01D365A8 LDP X20, X19, [X31 + 0x20]
	0x01D365AC LDP X22, X21, [X31 + 0x10]
	0x01D365B0 MOVZ W2, 0x1
	0x01D365B4 LDR X30, [X31], #0x30
	0x01D365B8 BR X5
	0x01D365BC BL 0x1C16F20
	0x01D365C0 STR X30, [X31 - 0x30]!
	0x01D365C4 STP X22, X21, [X31 + 0x10]
	0x01D365C8 STP X20, X19, [X31 + 0x20]
	0x01D365CC ADRP X22, 0x26A2000
	0x01D365D0 ADRP X21, 0x23BD000
	0x01D365D4 LDRB W8, [X22 + 0x6E0]
	0x01D365D8 LDR X21, [X21 + 0x648]
	0x01D365DC MOV X19, X1
	0x01D365E0 MOV X20, X0
	0x01D365E4 TBNZ X8, 0x0, 0x1D36608
	0x01D365E8 ADRP X0, 0x23BD000
	0x01D365EC LDR X0, [X0 + 0x648]
	0x01D365F0 BL 0x1C16CF4
	0x01D365F4 ADRP X0, 0x23BD000
	0x01D365F8 LDR X0, [X0 + 0x6A8]
	0x01D365FC BL 0x1C16CF4
	0x01D36600 MOVZ W8, 0x1
	0x01D36604 STRB W8, [X22 + 0x6E0]
	0x01D36608 LDR X0, [X21]
	0x01D3660C LDR W8, [X0 + 0xE0]
	0x01D36610 CBNZ W8, 0x1D3661C
	0x01D36614 BL 0x1C16DFC
	0x01D36618 LDR X0, [X21]
	0x01D3661C LDR X8, [X0 + 0xB8]
	0x01D36620 LDR X21, [X8 + 0x10]
	0x01D36624 CBZ X21, 0x1D366A4
	0x01D36628 ADRP X10, 0x23BD000
	0x01D3662C LDR X8, [X21]
	0x01D36630 LDR X10, [X10 + 0x6A8]
	0x01D36634 LDRH W9, [X8 + 0x12E]
	0x01D36638 LDR X1, [X10]
	0x01D3663C CBZ X9, 0x1D36660
	0x01D36640 LDR X10, [X8 + 0xB0]
	0x01D36644 ADD X10, X10, 0x8
	0x01D36648 LDUR X11, [X10 - 0x8]
	0x01D3664C CMP X11, X1
	0x01D36650 B.EQ 0x1D36670
	0x01D36654 SUBS X9, X9, 0x1
	0x01D36658 ADD X10, X10, 0x10
	0x01D3665C B.NE 0x1D36648
	0x01D36660 MOVZ W2, 0x3
	0x01D36664 MOV X0, X21
	0x01D36668 BL 0x1C5C788
	0x01D3666C B 0x1D36680
	0x01D36670 LDR W9, [X10]
	0x01D36674 ADD W9, W9, 0x3
	0x01D36678 ADD X8, X8, W9, 0x4, SXTW
	0x01D3667C ADD X0, X8, 0x138
	0x01D36680 LDP X5, X4, [X0]
	0x01D36684 MOV X0, X21
	0x01D36688 MOV X1, X20
	0x01D3668C MOV X3, X19
	0x01D36690 LDP X20, X19, [X31 + 0x20]
	0x01D36694 LDP X22, X21, [X31 + 0x10]
	0x01D36698 MOV W2, W31
	0x01D3669C LDR X30, [X31], #0x30
	0x01D366A0 BR X5
	0x01D366A4 BL 0x1C16F20
	0x01D366A8 STP X30, X23, [X31 - 0x30]!
	0x01D366AC STP X22, X21, [X31 + 0x10]
	0x01D366B0 STP X20, X19, [X31 + 0x20]
	0x01D366B4 ADRP X23, 0x26A2000
	0x01D366B8 ADRP X22, 0x23BD000
	0x01D366BC LDRB W8, [X23 + 0x6E1]
	0x01D366C0 LDR X22, [X22 + 0x648]
	0x01D366C4 MOV X19, X2
	0x01D366C8 MOV X20, X1
	0x01D366CC MOV X21, X0
	0x01D366D0 TBNZ X8, 0x0, 0x1D366F4
	0x01D366D4 ADRP X0, 0x23BD000
	0x01D366D8 LDR X0, [X0 + 0x648]
	0x01D366DC BL 0x1C16CF4
	0x01D366E0 ADRP X0, 0x23BD000
	0x01D366E4 LDR X0, [X0 + 0x6A8]
	0x01D366E8 BL 0x1C16CF4
	0x01D366EC MOVZ W8, 0x1
	0x01D366F0 STRB W8, [X23 + 0x6E1]
	0x01D366F4 LDR X0, [X22]
	0x01D366F8 LDR W8, [X0 + 0xE0]
	0x01D366FC CBNZ W8, 0x1D36708
	0x01D36700 BL 0x1C16DFC
	0x01D36704 LDR X0, [X22]
	0x01D36708 LDR X8, [X0 + 0xB8]
	0x01D3670C LDR X22, [X8 + 0x10]
	0x01D36710 CBZ X22, 0x1D36794
	0x01D36714 ADRP X10, 0x23BD000
	0x01D36718 LDR X8, [X22]
	0x01D3671C LDR X10, [X10 + 0x6A8]
	0x01D36720 LDRH W9, [X8 + 0x12E]
	0x01D36724 LDR X1, [X10]
	0x01D36728 CBZ X9, 0x1D3674C
	0x01D3672C LDR X10, [X8 + 0xB0]
	0x01D36730 ADD X10, X10, 0x8
	0x01D36734 LDUR X11, [X10 - 0x8]
	0x01D36738 CMP X11, X1
	0x01D3673C B.EQ 0x1D3675C
	0x01D36740 SUBS X9, X9, 0x1
	0x01D36744 ADD X10, X10, 0x10
	0x01D36748 B.NE 0x1D36734
	0x01D3674C MOVZ W2, 0x4
	0x01D36750 MOV X0, X22
	0x01D36754 BL 0x1C5C788
	0x01D36758 B 0x1D3676C
	0x01D3675C LDR W9, [X10]
	0x01D36760 ADD W9, W9, 0x4
	0x01D36764 ADD X8, X8, W9, 0x4, SXTW
	0x01D36768 ADD X0, X8, 0x138
	0x01D3676C LDP X6, X5, [X0]
	0x01D36770 MOV X0, X22
	0x01D36774 MOV X1, X21
	0x01D36778 MOV X2, X20
	0x01D3677C MOV X4, X19
	0x01D36780 LDP X20, X19, [X31 + 0x20]
	0x01D36784 LDP X22, X21, [X31 + 0x10]
	0x01D36788 MOVZ W3, 0x2
	0x01D3678C LDP X30, X23, [X31], #0x30
	0x01D36790 BR X6
	0x01D36794 BL 0x1C16F20
	0x01D36798 STP X30, X23, [X31 - 0x30]!
	0x01D3679C STP X22, X21, [X31 + 0x10]
	0x01D367A0 STP X20, X19, [X31 + 0x20]
	0x01D367A4 ADRP X23, 0x26A2000
	0x01D367A8 ADRP X22, 0x23BD000
	0x01D367AC LDRB W8, [X23 + 0x6E2]
	0x01D367B0 LDR X22, [X22 + 0x648]
	0x01D367B4 MOV X19, X2
	0x01D367B8 MOV X20, X1
	0x01D367BC MOV X21, X0
	0x01D367C0 TBNZ X8, 0x0, 0x1D367E4
	0x01D367C4 ADRP X0, 0x23BD000
	0x01D367C8 LDR X0, [X0 + 0x648]
	0x01D367CC BL 0x1C16CF4
	0x01D367D0 ADRP X0, 0x23BD000
	0x01D367D4 LDR X0, [X0 + 0x6A8]
	0x01D367D8 BL 0x1C16CF4

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0x26A3000
	014 Move W8, [X20+1755]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {49}
	020 Move X0, 0x23BE000
	021 Move X0, [X0+1608]
	022 Call 0x1C17CF4
	023 Move X0, 0x23BE000
	024 Move X0, [X0+1856]
	025 Call 0x1C17CF4
	026 Move X0, 0x23BE000
	027 Move X0, [X0+1864]
	028 Call 0x1C17CF4
	029 Move X0, 0x23BE000
	030 Move X0, [X0+1448]
	031 Call 0x1C17CF4
	032 Move X0, 0x23BE000
	033 Move X0, [X0+2096]
	034 Call 0x1C17CF4
	035 Move X0, 0x23BE000
	036 Move X0, [X0+2104]
	037 Call 0x1C17CF4
	038 Move X0, 0x23BE000
	039 Move X0, [X0+2112]
	040 Call 0x1C17CF4
	041 Move X0, 0x23BE000
	042 Move X0, [X0+2120]
	043 Call 0x1C17CF4
	044 Move X0, 0x23BE000
	045 Move X0, [X0+2128]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X20+1755], W8
	049 Compare X19, 0
	050 JumpIfEqual {334}
	051 Move X24, 0x23BE000
	052 Move X8, [X19]
	053 Move X24, [X24+1856]
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Move X1, [X24]
	056 Compare X9, 0
	057 JumpIfEqual {64}
	058 Move X10, [X8+176]
	059 Add X10, X10, 8
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Subtract X9, X9, 1
	063 Add X10, X10, 16
	064 Move X0, X19
	065 Move W2, W31
	066 Call 0x1C5D788
	067 NotImplemented "Instruction LDRSW not yet implemented."
	068 Add X8, X8, X9
	069 Add X0, X8, 312
	070 Move X8, [X0]
	071 Move X1, [X0+8]
	072 Move X0, X19
	073 NotImplemented "Instruction BLR not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X10, 0x23BE000
	076 Move X8, [X19]
	077 Move X10, [X10+1864]
	078 NotImplemented "Instruction LDRH not yet implemented."
	079 Move X1, [X10]
	080 Compare X9, 0
	081 JumpIfEqual {88}
	082 Move X10, [X8+176]
	083 Add X10, X10, 8
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Subtract X9, X9, 1
	087 Add X10, X10, 16
	088 Move X0, X19
	089 Move W2, W31
	090 Call 0x1C5D788
	091 Move X23, 0x23BE000
	092 Move X23, [X23+1608]
	093 Move X0, [X23]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {99}
	097 Call 0x1C17DFC
	098 Move X0, [X23]
	099 Move X8, [X0+184]
	100 Move X0, [X8+104]
	101 Compare X0, 0
	102 JumpIfEqual {334}
	103 Move X1, X31
	104 Call StringBuilder.Clear, X0
	105 Move X8, [X19]
	106 Move X1, [X24]
	107 NotImplemented "Instruction LDRH not yet implemented."
	108 Compare X9, 0
	109 JumpIfEqual {116}
	110 Move X10, [X8+176]
	111 Add X10, X10, 8
	112 NotImplemented "Instruction LDUR not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Subtract X9, X9, 1
	115 Add X10, X10, 16
	116 Move X0, X19
	117 Move W2, W31
	118 Call 0x1C5D788
	119 NotImplemented "Instruction LDRSW not yet implemented."
	120 Add X8, X8, X9
	121 Add X0, X8, 312
	122 Move X8, [X0]
	123 Move X2, [X0+8]
	124 Move X0, X19
	125 Move W1, W31
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Compare X0, 0
	128 JumpIfEqual {334}
	129 Move X1, X31
	130 Call "il2cpp_vm_object_is_inst", X0
	131 Move X20, [X31+80]
	132 Move X19, [X31+88]
	133 Move X22, [X31+64]
	134 Move X21, [X31+72]
	135 Move X24, [X31+48]
	136 Move X23, [X31+56]
	137 Move X26, [X31+32]
	138 Move X25, [X31+40]
	139 Move X28, [X31+16]
	140 Move X27, [X31+24]
	141 Move X29, [X31+96]
	142 Move X30, [X31+104]
	143 Call BaseAction.GetTypeNameStripped, X0
	144 Return X0
	145 NotImplemented "Instruction LDRSW not yet implemented."
	146 Add X8, X8, X9
	147 Add X0, X8, 312
	148 Move X8, [X0]
	149 Move X1, [X0+8]
	150 Move X0, X19
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Move X8, 0x23BE000
	153 Move X8, [X8+1448]
	154 Move W20, W0
	155 Move X8, [X8]
	156 Move W9, [X8+224]
	157 Compare W9, 0
	158 JumpIfNotEqual {161}
	159 Move X0, X8
	160 Call 0x1C17DFC
	161 Move W0, 5
	162 Move W1, W20
	163 Move X2, X31
	164 Call Math.Min, X0, X1
	165 Move W20, W0
	166 Subtract W25, W0, 1
	167 Move X27, 0x23BE000
	168 Move X28, 0x23BE000
	169 Move X29, 0x23BE000
	170 Move X27, [X27+1864]
	171 Move X28, [X28+2096]
	172 Move X29, [X29+2104]
	173 Move W21, W31
	174 Move X26, X31
	175 Move X0, [X23]
	176 Move W8, [X0+224]
	177 Compare W8, 0
	178 JumpIfNotEqual {181}
	179 Call 0x1C17DFC
	180 Move X0, [X23]
	181 Move X9, [X0+184]
	182 Move X8, [X19]
	183 Move X1, [X27]
	184 Move X22, [X9+104]
	185 NotImplemented "Instruction LDRH not yet implemented."
	186 Compare X9, 0
	187 JumpIfEqual {194}
	188 Move X10, [X8+176]
	189 Add X10, X10, 8
	190 NotImplemented "Instruction LDUR not yet implemented."
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Subtract X9, X9, 1
	193 Add X10, X10, 16
	194 Move X0, X19
	195 Move W2, W31
	196 Call 0x1C5D788
	197 NotImplemented "Instruction LDRSW not yet implemented."
	198 Add X8, X8, X9
	199 Add X0, X8, 312
	200 Move X8, [X0]
	201 Move X2, [X0+8]
	202 Move X0, X19
	203 Move W1, W21
	204 NotImplemented "Instruction BLR not yet implemented."
	205 NotImplemented "Instruction CMP not yet implemented."
	206 NotImplemented "Instruction CSEL not yet implemented."
	207 Compare X0, 0
	208 JumpIfEqual {223}
	209 Move X8, [X19]
	210 Move X1, [X27]
	211 NotImplemented "Instruction LDRH not yet implemented."
	212 Compare X9, 0
	213 JumpIfEqual {220}
	214 Move X10, [X8+176]
	215 Add X10, X10, 8
	216 NotImplemented "Instruction LDUR not yet implemented."
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Subtract X9, X9, 1
	219 Add X10, X10, 16
	220 Move X0, X19
	221 Move W2, W31
	222 Call 0x1C5D788
	223 Move X1, [X28]
	224 NotImplemented "Instruction LDRSW not yet implemented."
	225 Add X8, X8, X9
	226 Add X0, X8, 312
	227 Move X8, [X0]
	228 Move X2, [X0+8]
	229 Move X0, X19
	230 Move W1, W21
	231 NotImplemented "Instruction BLR not yet implemented."
	232 Compare X0, 0
	233 JumpIfEqual {334}
	234 Move X1, X31
	235 Call "il2cpp_vm_object_is_inst", X0
	236 Call BaseAction.GetTypeNameStripped, X0
	237 Move X1, X0
	238 Move X22, X26
	239 Compare X22, 0
	240 JumpIfEqual {334}
	241 Move X0, X22
	242 Move X2, X31
	243 Call StringBuilder.Append, X0, X1
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Move X0, [X23]
	246 Move W8, [X0+224]
	247 Compare W8, 0
	248 JumpIfNotEqual {251}
	249 Call 0x1C17DFC
	250 Move X0, [X23]
	251 Move X8, [X0+184]
	252 Move X0, [X8+104]
	253 Compare X0, 0
	254 JumpIfEqual {334}
	255 Move X1, [X29]
	256 Move X2, X31
	257 Call StringBuilder.Append, X0, X1
	258 Add W21, W21, 1
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Move X8, [X19]
	261 Move X1, [X24]
	262 NotImplemented "Instruction LDRH not yet implemented."
	263 Compare X9, 0
	264 JumpIfEqual {271}
	265 Move X10, [X8+176]
	266 Add X10, X10, 8
	267 NotImplemented "Instruction LDUR not yet implemented."
	268 NotImplemented "Instruction CMP not yet implemented."
	269 Subtract X9, X9, 1
	270 Add X10, X10, 16
	271 Move X0, X19
	272 Move W2, W31
	273 Call 0x1C5D788
	274 NotImplemented "Instruction LDRSW not yet implemented."
	275 Add X8, X8, X9
	276 Add X0, X8, 312
	277 Move X8, [X0]
	278 Move X1, [X0+8]
	279 Move X0, X19
	280 NotImplemented "Instruction BLR not yet implemented."
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Move X0, [X23]
	283 Move W8, [X0+224]
	284 Compare W8, 0
	285 JumpIfNotEqual {288}
	286 Call 0x1C17DFC
	287 Move X0, [X23]
	288 Move X8, [X0+184]
	289 Move X0, [X8+104]
	290 Compare X0, 0
	291 JumpIfEqual {334}
	292 Move X8, 0x23BE000
	293 Move X8, [X8+2112]
	294 Move X2, X31
	295 Move X1, [X8]
	296 Call StringBuilder.Append, X0, X1
	297 Move X0, [X23]
	298 Move W8, [X0+224]
	299 Compare W8, 0
	300 JumpIfNotEqual {303}
	301 Call 0x1C17DFC
	302 Move X0, [X23]
	303 Move X8, [X0+184]
	304 Move X0, [X8+104]
	305 Compare X0, 0
	306 JumpIfEqual {334}
	307 Move X8, [X0]
	308 Move X9, [X8+360]
	309 Move X1, [X8+368]
	310 NotImplemented "Instruction BLR not yet implemented."
	311 Move X8, 0x23BE000
	312 Move X8, [X8+2128]
	313 Move X9, 0x23BE000
	314 Move X9, [X9+2120]
	315 Move X20, [X31+80]
	316 Move X19, [X31+88]
	317 Move X8, [X8]
	318 Move X22, [X31+64]
	319 Move X21, [X31+72]
	320 Move X2, [X9]
	321 Move X24, [X31+48]
	322 Move X23, [X31+56]
	323 Move X26, [X31+32]
	324 Move X25, [X31+40]
	325 Move X28, [X31+16]
	326 Move X27, [X31+24]
	327 Move X1, X0
	328 Move X0, X8
	329 Move X3, X31
	330 Move X29, [X31+96]
	331 Move X30, [X31+104]
	332 Call String.Concat, X0, X1, X2
	333 Return X0
	334 Call 0x1C17F20

Method: SpatialSys.CommandLib.CommandHandle ExecuteCommand(SpatialSys.CommandLib.Command command, System.Boolean silent = False)

Disassembly:
	0x01D36D6C B 0x265A224
	0x01D36D70 BL 0x1C16F20
	0x01D36D74 STR X30, [X31 - 0x20]!
	0x01D36D78 STP X20, X19, [X31 + 0x10]
	0x01D36D7C MOV X19, X1
	0x01D36D80 MOV X1, X31
	0x01D36D84 MOV X20, X0
	0x01D36D88 BL 0x33BDD8C
	0x01D36D8C LDP V1, V0, [X19 + 0x10]
	0x01D36D90 LDR V2, [X19]
	0x01D36D94 STUR V0, [X20 + 0x38]
	0x01D36D98 STUR V1, [X20 + 0x28]
	0x01D36D9C STUR V2, [X20 + 0x18]
	0x01D36DA0 LDP X20, X19, [X31 + 0x10]
	0x01D36DA4 LDR X30, [X31], #0x20
	0x01D36DA8 RET
	0x01D36DAC STR X30, [X31 - 0x30]!
	0x01D36DB0 STP X22, X21, [X31 + 0x10]
	0x01D36DB4 STP X20, X19, [X31 + 0x20]
	0x01D36DB8 ADRP X21, 0x26A2000
	0x01D36DBC LDRB W8, [X21 + 0x6E9]
	0x01D36DC0 MOV X19, X1
	0x01D36DC4 MOV X20, X0
	0x01D36DC8 TBNZ X8, 0x0, 0x1D36DEC
	0x01D36DCC ADRP X0, 0x23BD000
	0x01D36DD0 LDR X0, [X0 + 0x918]
	0x01D36DD4 BL 0x1C16CF4
	0x01D36DD8 ADRP X0, 0x23BD000
	0x01D36DDC LDR X0, [X0 + 0x920]
	0x01D36DE0 BL 0x1C16CF4
	0x01D36DE4 MOVZ W8, 0x1
	0x01D36DE8 STRB W8, [X21 + 0x6E9]
	0x01D36DEC CBZ X19, 0x1D36E54
	0x01D36DF0 LDR X0, [X19 + 0xA0]
	0x01D36DF4 CBZ X0, 0x1D36E54
	0x01D36DF8 ADRP X8, 0x23BD000
	0x01D36DFC LDR X8, [X8 + 0x920]
	0x01D36E00 LDR X1, [X20 + 0x30]
	0x01D36E04 ADRP X22, 0x23BD000
	0x01D36E08 LDR X2, [X8]
	0x01D36E0C LDR X22, [X22 + 0x918]
	0x01D36E10 BL 0x2655E78
	0x01D36E14 LDR X0, [X22]
	0x01D36E18 LDRB W21, [X20 + 0x40]
	0x01D36E1C BL 0x1C16F10
	0x01D36E20 MOV W1, W21
	0x01D36E24 MOV X2, X31
	0x01D36E28 MOV X20, X0
	0x01D36E2C BL 0x1D4D028
	0x01D36E30 CBZ X20, 0x1D36E54
	0x01D36E34 LDR X8, [X20]
	0x01D36E38 MOV X0, X20
	0x01D36E3C MOV X1, X19
	0x01D36E40 LDP X20, X19, [X31 + 0x20]
	0x01D36E44 LDP X3, X2, [X8 + 0x1A8]
	0x01D36E48 LDP X22, X21, [X31 + 0x10]
	0x01D36E4C LDR X30, [X31], #0x30
	0x01D36E50 BR X3
	0x01D36E54 BL 0x1C16F20
	0x01D36E58 STR X30, [X31 - 0x40]!
	0x01D36E5C STP X24, X23, [X31 + 0x10]
	0x01D36E60 STP X22, X21, [X31 + 0x20]
	0x01D36E64 STP X20, X19, [X31 + 0x30]
	0x01D36E68 ADRP X21, 0x26A2000
	0x01D36E6C ADRP X23, 0x23BD000
	0x01D36E70 LDRB W8, [X21 + 0x6EA]
	0x01D36E74 LDR X23, [X23 + 0x928]
	0x01D36E78 MOV W20, W1
	0x01D36E7C MOV X19, X0
	0x01D36E80 TBNZ X8, 0x0, 0x1D36EBC
	0x01D36E84 ADRP X0, 0x23BD000
	0x01D36E88 LDR X0, [X0 + 0x930]
	0x01D36E8C BL 0x1C16CF4
	0x01D36E90 ADRP X0, 0x23BD000
	0x01D36E94 LDR X0, [X0 + 0x938]
	0x01D36E98 BL 0x1C16CF4
	0x01D36E9C ADRP X0, 0x23BD000
	0x01D36EA0 LDR X0, [X0 + 0x940]
	0x01D36EA4 BL 0x1C16CF4
	0x01D36EA8 ADRP X0, 0x23BD000
	0x01D36EAC LDR X0, [X0 + 0x928]
	0x01D36EB0 BL 0x1C16CF4
	0x01D36EB4 MOVZ W8, 0x1
	0x01D36EB8 STRB W8, [X21 + 0x6EA]
	0x01D36EBC LDR X0, [X23]
	0x01D36EC0 LDR W8, [X0 + 0xE0]
	0x01D36EC4 CBNZ W8, 0x1D36ED0
	0x01D36EC8 BL 0x1C16DFC
	0x01D36ECC LDR X0, [X23]
	0x01D36ED0 LDR X8, [X0 + 0xB8]
	0x01D36ED4 ADRP X24, 0x23BD000
	0x01D36ED8 LDR X21, [X8 + 0x8]
	0x01D36EDC LDR X24, [X24 + 0x930]
	0x01D36EE0 CBNZ X21, 0x1D36F34
	0x01D36EE4 LDR W8, [X0 + 0xE0]
	0x01D36EE8 CBNZ W8, 0x1D36EF4
	0x01D36EEC BL 0x1C16DFC
	0x01D36EF0 LDR X0, [X23]
	0x01D36EF4 ADRP X9, 0x23BD000
	0x01D36EF8 LDR X8, [X0 + 0xB8]
	0x01D36EFC LDR X9, [X9 + 0x938]
	0x01D36F00 LDR X22, [X8]
	0x01D36F04 LDR X0, [X9]
	0x01D36F08 BL 0x1C16F10
	0x01D36F0C ADRP X8, 0x23BD000
	0x01D36F10 LDR X8, [X8 + 0x940]
	0x01D36F14 MOV X1, X22
	0x01D36F18 MOV X3, X31
	0x01D36F1C MOV X21, X0
	0x01D36F20 LDR X2, [X8]
	0x01D36F24 BL 0x2D30578
	0x01D36F28 LDR X8, [X23]
	0x01D36F2C LDR X8, [X8 + 0xB8]
	0x01D36F30 STR X21, [X8 + 0x8]
	0x01D36F34 LDR X3, [X24]
	0x01D36F38 AND W2, W20, 0x1
	0x01D36F3C MOV X0, X19
	0x01D36F40 MOV X1, X21
	0x01D36F44 LDP X20, X19, [X31 + 0x30]
	0x01D36F48 LDP X22, X21, [X31 + 0x20]
	0x01D36F4C LDP X24, X23, [X31 + 0x10]
	0x01D36F50 LDR X30, [X31], #0x40
	0x01D36F54 B 0x28BB0B0
	0x01D36F58 STR X30, [X31 - 0x20]!
	0x01D36F5C STP X20, X19, [X31 + 0x10]
	0x01D36F60 ADRP X19, 0x26A2000
	0x01D36F64 ADRP X20, 0x23BD000
	0x01D36F68 LDRB W8, [X19 + 0x6EB]
	0x01D36F6C LDR X20, [X20 + 0x928]
	0x01D36F70 TBNZ X8, 0x0, 0x1D36F88
	0x01D36F74 ADRP X0, 0x23BD000
	0x01D36F78 LDR X0, [X0 + 0x928]
	0x01D36F7C BL 0x1C16CF4
	0x01D36F80 MOVZ W8, 0x1
	0x01D36F84 STRB W8, [X19 + 0x6EB]
	0x01D36F88 LDR X0, [X20]
	0x01D36F8C BL 0x1C16F10
	0x01D36F90 MOV X1, X31
	0x01D36F94 MOV X19, X0
	0x01D36F98 BL 0x33BDD8C
	0x01D36F9C LDR X8, [X20]
	0x01D36FA0 LDR X8, [X8 + 0xB8]
	0x01D36FA4 STR X19, [X8]
	0x01D36FA8 LDP X20, X19, [X31 + 0x10]
	0x01D36FAC LDR X30, [X31], #0x20
	0x01D36FB0 RET
	0x01D36FB4 MOV X1, X31
	0x01D36FB8 B 0x33BDD8C
	0x01D36FBC STR X30, [X31 - 0x10]!
	0x01D36FC0 CBZ X1, 0x1D36FD0
	0x01D36FC4 LDR X0, [X1 + 0x60]
	0x01D36FC8 LDR X30, [X31], #0x10
	0x01D36FCC RET
	0x01D36FD0 BL 0x1C16F20
	0x01D36FD4 STR X30, [X31 - 0x40]!
	0x01D36FD8 STP X24, X23, [X31 + 0x10]
	0x01D36FDC STP X22, X21, [X31 + 0x20]
	0x01D36FE0 STP X20, X19, [X31 + 0x30]
	0x01D36FE4 ADRP X21, 0x26A2000
	0x01D36FE8 ADRP X23, 0x23BD000
	0x01D36FEC LDRB W8, [X21 + 0x6EC]
	0x01D36FF0 LDR X23, [X23 + 0x948]
	0x01D36FF4 MOV W20, W1
	0x01D36FF8 MOV X19, X0
	0x01D36FFC TBNZ X8, 0x0, 0x1D37038
	0x01D37000 ADRP X0, 0x23BC000
	0x01D37004 LDR X0, [X0 + 0x930]
	0x01D37008 BL 0x1C16CF4
	0x01D3700C ADRP X0, 0x23BC000
	0x01D37010 LDR X0, [X0 + 0x938]
	0x01D37014 BL 0x1C16CF4
	0x01D37018 ADRP X0, 0x23BC000
	0x01D3701C LDR X0, [X0 + 0x950]
	0x01D37020 BL 0x1C16CF4
	0x01D37024 ADRP X0, 0x23BC000
	0x01D37028 LDR X0, [X0 + 0x948]
	0x01D3702C BL 0x1C16CF4
	0x01D37030 MOVZ W8, 0x1
	0x01D37034 STRB W8, [X21 + 0x6EC]
	0x01D37038 LDR X0, [X23]
	0x01D3703C LDR W8, [X0 + 0xE0]
	0x01D37040 CBNZ W8, 0x1D3704C
	0x01D37044 BL 0x1C16DFC
	0x01D37048 LDR X0, [X23]
	0x01D3704C LDR X8, [X0 + 0xB8]
	0x01D37050 ADRP X24, 0x23BC000
	0x01D37054 LDR X21, [X8 + 0x8]
	0x01D37058 LDR X24, [X24 + 0x930]
	0x01D3705C CBNZ X21, 0x1D370B0
	0x01D37060 LDR W8, [X0 + 0xE0]
	0x01D37064 CBNZ W8, 0x1D37070
	0x01D37068 BL 0x1C16DFC
	0x01D3706C LDR X0, [X23]
	0x01D37070 ADRP X9, 0x23BC000
	0x01D37074 LDR X8, [X0 + 0xB8]
	0x01D37078 LDR X9, [X9 + 0x938]
	0x01D3707C LDR X22, [X8]
	0x01D37080 LDR X0, [X9]
	0x01D37084 BL 0x1C16F10
	0x01D37088 ADRP X8, 0x23BC000
	0x01D3708C LDR X8, [X8 + 0x950]
	0x01D37090 MOV X1, X22
	0x01D37094 MOV X3, X31
	0x01D37098 MOV X21, X0
	0x01D3709C LDR X2, [X8]
	0x01D370A0 BL 0x2D30578
	0x01D370A4 LDR X8, [X23]
	0x01D370A8 LDR X8, [X8 + 0xB8]
	0x01D370AC STR X21, [X8 + 0x8]
	0x01D370B0 LDR X3, [X24]
	0x01D370B4 AND W2, W20, 0x1
	0x01D370B8 MOV X0, X19
	0x01D370BC MOV X1, X21
	0x01D370C0 LDP X20, X19, [X31 + 0x30]
	0x01D370C4 LDP X22, X21, [X31 + 0x20]
	0x01D370C8 LDP X24, X23, [X31 + 0x10]
	0x01D370CC LDR X30, [X31], #0x40
	0x01D370D0 B 0x28BB0B0
	0x01D370D4 STR X30, [X31 - 0x20]!
	0x01D370D8 STP X20, X19, [X31 + 0x10]
	0x01D370DC ADRP X19, 0x26A1000
	0x01D370E0 ADRP X20, 0x23BC000
	0x01D370E4 LDRB W8, [X19 + 0x6ED]
	0x01D370E8 LDR X20, [X20 + 0x948]
	0x01D370EC TBNZ X8, 0x0, 0x1D37104
	0x01D370F0 ADRP X0, 0x23BC000
	0x01D370F4 LDR X0, [X0 + 0x948]
	0x01D370F8 BL 0x1C16CF4
	0x01D370FC MOVZ W8, 0x1
	0x01D37100 STRB W8, [X19 + 0x6ED]
	0x01D37104 LDR X0, [X20]
	0x01D37108 BL 0x1C16F10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x26A3000
	007 Move X22, 0x23BE000
	008 Move W8, [X21+1756]
	009 Move X22, [X22+1608]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {48}
	016 Move X0, 0x23BE000
	017 Move X0, [X0+1608]
	018 Call 0x1C17CF4
	019 Move X0, 0x23BE000
	020 Move X0, [X0+2200]
	021 Call 0x1C17CF4
	022 Move X0, 0x23BE000
	023 Move X0, [X0+1808]
	024 Call 0x1C17CF4
	025 Move X0, 0x23BE000
	026 Move X0, [X0+1816]
	027 Call 0x1C17CF4
	028 Move X0, 0x23BE000
	029 Move X0, [X0+1824]
	030 Call 0x1C17CF4
	031 Move X0, 0x23BE000
	032 Move X0, [X0+1928]
	033 Call 0x1C17CF4
	034 Move X0, 0x23BE000
	035 Move X0, [X0+1936]
	036 Call 0x1C17CF4
	037 Move X0, 0x23BE000
	038 Move X0, [X0+2208]
	039 Call 0x1C17CF4
	040 Move X0, 0x23BE000
	041 Move X0, [X0+2216]
	042 Call 0x1C17CF4
	043 Move X0, 0x23BE000
	044 Move X0, [X0+2224]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X21+1756], W8
	048 Move X0, X31
	049 Call Thread.get_CurrentThread
	050 Move X8, [X22]
	051 Move X21, X0
	052 Move W9, [X8+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {58}
	055 Move X0, X8
	056 Call 0x1C17DFC
	057 Move X8, [X22]
	058 Move X8, [X8+184]
	059 Move X8, [X8+96]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Compare X19, 0
	062 JumpIfEqual {152}
	063 Move TEMP, X20
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {71}
	067 Move W1, 1
	068 Move X0, X19
	069 Move X2, X31
	070 Call Command.set_silent, X0, X1
	071 Move X0, X19
	072 Move X1, X31
	073 Call Command.get_silent, X0
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {93}
	078 Move X8, 0x23BE000
	079 Move X8, [X8+1928]
	080 Move X0, [X8]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Move W0, 5
	086 Move W1, 512
	087 Move X2, X31
	088 Call Log.IsEnabled, X0, X1
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {144}
	093 Move X0, X19
	094 Move X1, X31
	095 Call Command.get_identifier, X0
	096 Move X8, 0x23BE000
	097 Move X8, [X8+2208]
	098 Move X1, X0
	099 Move X2, X31
	100 Move X8, [X8]
	101 Move X0, X8
	102 Call String.Concat, X0, X1
	103 Move X8, 0x23BE000
	104 Move X8, [X8+1824]
	105 Move X20, X0
	106 Move X8, [X8]
	107 Move X0, X8
	108 Call 0x1C17F10
	109 Move X8, 0x23BE000
	110 Move X8, [X8+1816]
	111 Move X21, X0
	112 Move X1, [X8]
	113 Call Dictionary`2<Object, Object>..ctor, X0
	114 Compare X21, 0
	115 JumpIfEqual {263}
	116 Move X8, 0x23BE000
	117 Move X9, 0x23BE000
	118 Move X8, [X8+2224]
	119 Move X9, [X9+1808]
	120 Move X0, X21
	121 Move X2, X19
	122 Move X1, [X8]
	123 Move X3, [X9]
	124 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	125 Move X8, 0x23BE000
	126 Move X8, [X8+1928]
	127 Move X0, [X8]
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {132}
	131 Call 0x1C17DFC
	132 Move X8, 0x23BE000
	133 Move X9, 0x23BE000
	134 Move X8, [X8+1936]
	135 Move X9, [X9+2216]
	136 Move W0, 512
	137 Move W5, 426
	138 Move X3, [X8]
	139 Move X4, [X9]
	140 Move X1, X20
	141 Move X2, X21
	142 Move X6, X31
	143 Call Log.Info, X0, X1, X2, X3, X4, X5
	144 Move S0, W31
	145 Move X0, X19
	146 Move X1, X31
	147 Call Command.Update, X0, V0
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {182}
	152 Move X19, 0x23BE000
	153 Move X19, [X19+2200]
	154 Move X0, [X19]
	155 Move W8, [X0+224]
	156 Compare W8, 0
	157 JumpIfNotEqual {159}
	158 Call 0x1C17DFC
	159 Move X20, 0x26A3000
	160 Move W8, [X20+1931]
	161 Compare W8, 0
	162 JumpIfNotEqual {168}
	163 Move X0, 0x23BE000
	164 Move X0, [X0+2200]
	165 Call 0x1C17CF4
	166 Move W8, 1
	167 Move [X20+1931], W8
	168 Move X0, [X19]
	169 Move W8, [X0+224]
	170 Compare W8, 0
	171 JumpIfNotEqual {174}
	172 Call 0x1C17DFC
	173 Move X0, [X19]
	174 Move X8, [X0+184]
	175 Move X20, [X31+32]
	176 Move X19, [X31+40]
	177 Move X22, [X31+16]
	178 Move X21, [X31+24]
	179 Move X0, [X8]
	180 Move X30, [X31+48]
	181 Return X0
	182 Move X0, [X22]
	183 Move W8, [X0+224]
	184 Compare W8, 0
	185 JumpIfNotEqual {188}
	186 Call 0x1C17DFC
	187 Move X0, [X22]
	188 Move X8, [X0+184]
	189 Move X0, [X8+80]
	190 Compare X0, 0
	191 JumpIfEqual {263}
	192 Move X1, X19
	193 Move X20, [X31+32]
	194 Move X19, [X31+40]
	195 Move X22, [X31+16]
	196 Move X21, [X31+24]
	197 Move X2, X31
	198 Move X30, [X31+48]
	199 Call CommandScheduler.Add, X0, X1
	200 Return X0
	201 Move X0, 0x23BD000
	202 Move X0, [X0+2000]
	203 Call 0x1C17D08
	204 Call 0x1C17F10
	205 Move X20, X0
	206 Move X0, 0x23BD000
	207 Move X0, [X0+2232]
	208 Call 0x1C17D08
	209 Move X1, X0
	210 Move X0, X20
	211 Move X2, X31
	212 Call Exception..ctor, X0, X1
	213 Move X0, 0x23BD000
	214 Move X0, [X0+1824]
	215 Call 0x1C17D08
	216 Call 0x1C17F10
	217 Move X21, X0
	218 Move X0, 0x23BD000
	219 Move X0, [X0+1816]
	220 Call 0x1C17D08
	221 Move X1, X0
	222 Move X0, X21
	223 Call 0x199150C
	224 Move X0, X21
	225 Call 0x19913C0
	226 Move X0, 0x23BD000
	227 Move X0, [X0+2224]
	228 Call 0x1C17D08
	229 Move X22, X0
	230 Move X0, 0x23BD000
	231 Move X0, [X0+1808]
	232 Call 0x1C17D08
	233 Move X3, X0
	234 Move X0, X21
	235 Move X1, X22
	236 Move X2, X19
	237 Call 0x1991510
	238 Move X0, 0x23BD000
	239 Move X0, [X0+1928]
	240 Call 0x1C17D08
	241 Call 0x19913D0
	242 Move X0, 0x23BD000
	243 Move X0, [X0+1936]
	244 Call 0x1C17D08
	245 Move X19, X0
	246 Move X0, 0x23BD000
	247 Move X0, [X0+2216]
	248 Call 0x1C17D08
	249 Move X4, X0
	250 Move W0, 256
	251 Move W5, 414
	252 Move X1, X20
	253 Move X2, X21
	254 Move X3, X19
	255 Move X6, X31
	256 Call Log.Error, X0, X1, X2, X3, X4, X5
	257 Move X0, 0x23BD000
	258 Move X0, [X0+2240]
	259 Call 0x1C17D08
	260 Move X1, X0
	261 Move X0, X20
	262 Call 0x1C17DEC
	263 Call 0x1C17F20

Method: SpatialSys.CommandLib.CommandHandle ScheduleCommand(SpatialSys.CommandLib.Command command, System.Boolean silent = False)

Disassembly:
	0x01D3710C MOV X1, X31
	0x01D37110 MOV X19, X0
	0x01D37114 BL 0x33BDD8C
	0x01D37118 LDR X8, [X20]
	0x01D3711C LDR X8, [X8 + 0xB8]
	0x01D37120 STR X19, [X8]
	0x01D37124 LDP X20, X19, [X31 + 0x10]
	0x01D37128 LDR X30, [X31], #0x20
	0x01D3712C RET
	0x01D37130 MOV X1, X31
	0x01D37134 B 0x33BDD8C
	0x01D37138 STR X30, [X31 - 0x10]!
	0x01D3713C CBZ X1, 0x1D3714C
	0x01D37140 LDR X0, [X1 + 0x98]
	0x01D37144 LDR X30, [X31], #0x10
	0x01D37148 RET
	0x01D3714C BL 0x1C16F20
	0x01D37150 STP X30, X23, [X31 - 0x30]!
	0x01D37154 STP X22, X21, [X31 + 0x10]
	0x01D37158 STP X20, X19, [X31 + 0x20]
	0x01D3715C ADRP X22, 0x26A1000
	0x01D37160 ADRP X23, 0x23BC000
	0x01D37164 ADRP X20, 0x23BC000
	0x01D37168 ADRP X21, 0x23BC000
	0x01D3716C LDRB W8, [X22 + 0x6EE]
	0x01D37170 LDR X23, [X23 + 0x958]
	0x01D37174 LDR X20, [X20 + 0x960]
	0x01D37178 LDR X21, [X21 + 0x648]
	0x01D3717C MOV X19, X0
	0x01D37180 TBNZ X8, 0x0, 0x1D371B0
	0x01D37184 ADRP X0, 0x23BC000
	0x01D37188 LDR X0, [X0 + 0x960]
	0x01D3718C BL 0x1C16CF4
	0x01D37190 ADRP X0, 0x23BC000
	0x01D37194 LDR X0, [X0 + 0x648]
	0x01D37198 BL 0x1C16CF4
	0x01D3719C ADRP X0, 0x23BC000
	0x01D371A0 LDR X0, [X0 + 0x958]
	0x01D371A4 BL 0x1C16CF4
	0x01D371A8 MOVZ W8, 0x1
	0x01D371AC STRB W8, [X22 + 0x6EE]
	0x01D371B0 LDR X0, [X23]
	0x01D371B4 BL 0x1C16F10
	0x01D371B8 LDR X2, [X20]
	0x01D371BC MOV X1, X19
	0x01D371C0 MOV X3, X31
	0x01D371C4 MOV X20, X0
	0x01D371C8 BL 0x35BC6F0
	0x01D371CC MOV X0, X20
	0x01D371D0 MOV W1, W31
	0x01D371D4 MOV X2, X31
	0x01D371D8 BL 0x35BBFC4
	0x01D371DC LDR X8, [X21]
	0x01D371E0 MOV X20, X0
	0x01D371E4 LDR W9, [X8 + 0xE0]
	0x01D371E8 CBNZ W9, 0x1D371F4
	0x01D371EC MOV X0, X8
	0x01D371F0 BL 0x1C16DFC
	0x01D371F4 MOV X0, X20
	0x01D371F8 MOV W1, W31
	0x01D371FC BL 0x1D35D6C
	0x01D37200 STR X0, [X19 + 0x40]
	0x01D37204 LDP X20, X19, [X31 + 0x20]
	0x01D37208 LDP X22, X21, [X31 + 0x10]
	0x01D3720C LDP X30, X23, [X31], #0x30
	0x01D37210 RET
	0x01D37214 STP X30, X21, [X31 - 0x20]!
	0x01D37218 STP X20, X19, [X31 + 0x10]
	0x01D3721C ADRP X20, 0x26A1000
	0x01D37220 ADRP X21, 0x23BC000
	0x01D37224 LDRB W8, [X20 + 0x6EF]
	0x01D37228 LDR X21, [X21 + 0x968]
	0x01D3722C MOV X19, X0
	0x01D37230 TBNZ X8, 0x0, 0x1D37248
	0x01D37234 ADRP X0, 0x23BC000
	0x01D37238 LDR X0, [X0 + 0x968]
	0x01D3723C BL 0x1C16CF4
	0x01D37240 MOVZ W8, 0x1
	0x01D37244 STRB W8, [X20 + 0x6EF]
	0x01D37248 LDR X0, [X21]
	0x01D3724C BL 0x1C16F10
	0x01D37250 MOV X1, X31
	0x01D37254 MOV X20, X0
	0x01D37258 BL 0x33BDD8C
	0x01D3725C STR W31, [X20 + 0x10]
	0x01D37260 STR X19, [X20 + 0x20]
	0x01D37264 MOV X0, X20
	0x01D37268 LDP X20, X19, [X31 + 0x10]
	0x01D3726C LDP X30, X21, [X31], #0x20
	0x01D37270 RET
	0x01D37274 STR X30, [X31 - 0x20]!
	0x01D37278 STP X20, X19, [X31 + 0x10]
	0x01D3727C MOV W19, W1
	0x01D37280 MOV X1, X31
	0x01D37284 MOV X20, X0
	0x01D37288 BL 0x33BDD8C
	0x01D3728C STR W19, [X20 + 0x10]
	0x01D37290 LDP X20, X19, [X31 + 0x10]
	0x01D37294 LDR X30, [X31], #0x20
	0x01D37298 RET
	0x01D3729C STP X30, X27, [X31 - 0x50]!
	0x01D372A0 STP X26, X25, [X31 + 0x10]
	0x01D372A4 STP X24, X23, [X31 + 0x20]
	0x01D372A8 STP X22, X21, [X31 + 0x30]
	0x01D372AC STP X20, X19, [X31 + 0x40]
	0x01D372B0 ADRP X27, 0x26A1000
	0x01D372B4 ADRP X26, 0x23BC000
	0x01D372B8 LDRB W8, [X27 + 0x6F0]
	0x01D372BC LDR X26, [X26 + 0x970]
	0x01D372C0 MOV X24, X6
	0x01D372C4 MOV X23, X5
	0x01D372C8 MOV X19, X4
	0x01D372CC MOV X20, X3
	0x01D372D0 MOV X21, X2
	0x01D372D4 MOV X22, X1
	0x01D372D8 MOV X25, X0
	0x01D372DC TBNZ X8, 0x0, 0x1D3730C
	0x01D372E0 ADRP X0, 0x23BC000
	0x01D372E4 LDR X0, [X0 + 0x970]
	0x01D372E8 BL 0x1C16CF4
	0x01D372EC ADRP X0, 0x23BC000
	0x01D372F0 LDR X0, [X0 + 0x978]
	0x01D372F4 BL 0x1C16CF4
	0x01D372F8 ADRP X0, 0x23BC000
	0x01D372FC LDR X0, [X0 + 0x980]
	0x01D37300 BL 0x1C16CF4
	0x01D37304 MOVZ W8, 0x1
	0x01D37308 STRB W8, [X27 + 0x6F0]
	0x01D3730C LDR W8, [X25 + 0x20]
	0x01D37310 STR W8, [X23]
	0x01D37314 LDR W8, [X25 + 0x28]
	0x01D37318 STR W8, [X24]
	0x01D3731C STR W31, [X23]
	0x01D37320 LDR X0, [X26]
	0x01D37324 LDR W8, [X0 + 0xE0]
	0x01D37328 CBNZ W8, 0x1D37330
	0x01D3732C BL 0x1C16DFC
	0x01D37330 MOV X0, X31
	0x01D37334 BL 0x3C01A10
	0x01D37338 CBZ X0, 0x1D373A8
	0x01D3733C MOVZ W1, 0x5F
	0x01D37340 MOV W2, W31
	0x01D37344 MOV X3, X31
	0x01D37348 BL 0x3229AE8
	0x01D3734C CBZ X0, 0x1D373A8
	0x01D37350 LDR W8, [X0 + 0x18]
	0x01D37354 CBZ W8, 0x1D373AC
	0x01D37358 LDR X9, [X0 + 0x20]
	0x01D3735C CMP W8, 0x1
	0x01D37360 STR X9, [X22]
	0x01D37364 B.EQ 0x1D373AC
	0x01D37368 LDR X8, [X0 + 0x28]
	0x01D3736C ADRP X9, 0x23BC000
	0x01D37370 LDR X9, [X9 + 0x978]
	0x01D37374 STR X8, [X21]
	0x01D37378 LDR X8, [X9]
	0x01D3737C ADRP X9, 0x23BC000
	0x01D37380 LDR X9, [X9 + 0x980]
	0x01D37384 LDP X22, X21, [X31 + 0x30]
	0x01D37388 STR X8, [X20]
	0x01D3738C LDP X24, X23, [X31 + 0x20]
	0x01D37390 LDR X8, [X9]
	0x01D37394 LDP X26, X25, [X31 + 0x10]
	0x01D37398 STR X8, [X19]
	0x01D3739C LDP X20, X19, [X31 + 0x40]
	0x01D373A0 LDP X30, X27, [X31], #0x50
	0x01D373A4 RET
	0x01D373A8 BL 0x1C16F20
	0x01D373AC BL 0x1C16F28
	0x01D373B0 STR X30, [X31 - 0x50]!
	0x01D373B4 STP X26, X25, [X31 + 0x10]
	0x01D373B8 STP X24, X23, [X31 + 0x20]
	0x01D373BC STP X22, X21, [X31 + 0x30]
	0x01D373C0 STP X20, X19, [X31 + 0x40]
	0x01D373C4 ADRP X20, 0x26A1000
	0x01D373C8 ADRP X21, 0x23BC000
	0x01D373CC ADRP X22, 0x23BC000
	0x01D373D0 LDRB W8, [X20 + 0x6F1]
	0x01D373D4 LDR X21, [X21 + 0x988]
	0x01D373D8 LDR X22, [X22 + 0x990]
	0x01D373DC MOV X19, X1
	0x01D373E0 TBNZ X8, 0x0, 0x1D374E8
	0x01D373E4 ADRP X0, 0x23BC000
	0x01D373E8 LDR X0, [X0 + 0x990]
	0x01D373EC BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x26A2000
	007 Move W8, [X21+1757]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {49}
	014 Move X0, 0x23BD000
	015 Move X0, [X0+1608]
	016 Call 0x1C17CF4
	017 Move X0, 0x23BD000
	018 Move X0, [X0+2200]
	019 Call 0x1C17CF4
	020 Move X0, 0x23BD000
	021 Move X0, [X0+2248]
	022 Call 0x1C17CF4
	023 Move X0, 0x23BD000
	024 Move X0, [X0+1808]
	025 Call 0x1C17CF4
	026 Move X0, 0x23BD000
	027 Move X0, [X0+1816]
	028 Call 0x1C17CF4
	029 Move X0, 0x23BD000
	030 Move X0, [X0+1824]
	031 Call 0x1C17CF4
	032 Move X0, 0x23BD000
	033 Move X0, [X0+1928]
	034 Call 0x1C17CF4
	035 Move X0, 0x23BD000
	036 Move X0, [X0+1936]
	037 Call 0x1C17CF4
	038 Move X0, 0x23BD000
	039 Move X0, [X0+2256]
	040 Call 0x1C17CF4
	041 Move X0, 0x23BD000
	042 Move X0, [X0+2224]
	043 Call 0x1C17CF4
	044 Move X0, 0x23BD000
	045 Move X0, [X0+2264]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X21+1757], W8
	049 Compare X19, 0
	050 JumpIfEqual {171}
	051 Move TEMP, X20
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {59}
	055 Move W1, 1
	056 Move X0, X19
	057 Move X2, X31
	058 Call Command.set_silent, X0, X1
	059 Move X0, X19
	060 Move X1, X31
	061 Call Command.get_silent, X0
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {81}
	066 Move X8, 0x23BD000
	067 Move X8, [X8+1928]
	068 Move X0, [X8]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move W0, 5
	074 Move W1, 512
	075 Move X2, X31
	076 Call Log.IsEnabled, X0, X1
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {132}
	081 Move X0, X19
	082 Move X1, X31
	083 Call Command.get_identifier, X0
	084 Move X8, 0x23BD000
	085 Move X8, [X8+2256]
	086 Move X1, X0
	087 Move X2, X31
	088 Move X8, [X8]
	089 Move X0, X8
	090 Call String.Concat, X0, X1
	091 Move X8, 0x23BD000
	092 Move X8, [X8+1824]
	093 Move X20, X0
	094 Move X8, [X8]
	095 Move X0, X8
	096 Call 0x1C17F10
	097 Move X8, 0x23BD000
	098 Move X8, [X8+1816]
	099 Move X21, X0
	100 Move X1, [X8]
	101 Call Dictionary`2<Object, Object>..ctor, X0
	102 Compare X21, 0
	103 JumpIfEqual {213}
	104 Move X8, 0x23BD000
	105 Move X9, 0x23BD000
	106 Move X8, [X8+2224]
	107 Move X9, [X9+1808]
	108 Move X0, X21
	109 Move X2, X19
	110 Move X1, [X8]
	111 Move X3, [X9]
	112 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	113 Move X8, 0x23BD000
	114 Move X8, [X8+1928]
	115 Move X0, [X8]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {120}
	119 Call 0x1C17DFC
	120 Move X8, 0x23BD000
	121 Move X9, 0x23BD000
	122 Move X8, [X8+1936]
	123 Move X9, [X9+2264]
	124 Move W0, 512
	125 Move W5, 458
	126 Move X3, [X8]
	127 Move X4, [X9]
	128 Move X1, X20
	129 Move X2, X21
	130 Move X6, X31
	131 Call Log.Info, X0, X1, X2, X3, X4, X5
	132 Move X21, 0x23BD000
	133 Move X21, [X21+1608]
	134 Move X0, X31
	135 Call Thread.get_CurrentThread
	136 Move X8, [X21]
	137 Move X20, X0
	138 Move W9, [X8+224]
	139 Compare W9, 0
	140 JumpIfNotEqual {145}
	141 Move X0, X8
	142 Call 0x1C17DFC
	143 Move X8, [X21]
	144 Move W9, [X8+224]
	145 Move X10, [X8+184]
	146 Move X22, [X10+96]
	147 Compare W9, 0
	148 JumpIfNotEqual {153}
	149 Move X0, X8
	150 Call 0x1C17DFC
	151 Move X8, [X21]
	152 Move X10, [X8+184]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move X0, [X10+88]
	155 Compare X0, 0
	156 JumpIfEqual {213}
	157 Move X8, 0x23BD000
	158 Move X8, [X8+2248]
	159 Move X1, X19
	160 Move X2, [X8]
	161 Call ConcurrentQueue`1<Object>.Enqueue, X0, X1
	162 Move X8, 0x23BD000
	163 Move X8, [X8+2200]
	164 Move X0, [X8]
	165 Call 0x1C17F10
	166 Move X1, X19
	167 Move X2, X31
	168 Move X20, X0
	169 Call CommandHandle..ctor, X0, X1
	170 Move X0, X20
	171 Move X19, 0x23BD000
	172 Move X19, [X19+2200]
	173 Move X0, [X19]
	174 Move W8, [X0+224]
	175 Compare W8, 0
	176 JumpIfNotEqual {178}
	177 Call 0x1C17DFC
	178 Move X20, 0x26A2000
	179 Move W8, [X20+1931]
	180 Compare W8, 0
	181 JumpIfNotEqual {187}
	182 Move X0, 0x23BD000
	183 Move X0, [X0+2200]
	184 Call 0x1C17CF4
	185 Move W8, 1
	186 Move [X20+1931], W8
	187 Move X0, [X19]
	188 Move W8, [X0+224]
	189 Compare W8, 0
	190 JumpIfNotEqual {193}
	191 Call 0x1C17DFC
	192 Move X0, [X19]
	193 Move X8, [X0+184]
	194 Move X0, [X8]
	195 Move X20, [X31+32]
	196 Move X19, [X31+40]
	197 Move X22, [X31+16]
	198 Move X21, [X31+24]
	199 Move X30, [X31+48]
	200 Return X0
	201 Move X0, [X10+80]
	202 Compare X0, 0
	203 JumpIfEqual {213}
	204 Move X1, X19
	205 Move X20, [X31+32]
	206 Move X19, [X31+40]
	207 Move X22, [X31+16]
	208 Move X21, [X31+24]
	209 Move X2, X31
	210 Move X30, [X31+48]
	211 Call CommandScheduler.Add, X0, X1
	212 Return X0
	213 Call 0x1C17F20

Method: System.Void RegisterObserver(SpatialSys.ObservableState.ObserverDelegate observer, SpatialSys.ObservableState.IStateObject[] state)

Disassembly:
	0x01D373F0 ADRP X0, 0x23BC000
	0x01D373F4 LDR X0, [X0 + 0x998]
	0x01D373F8 BL 0x1C16CF4
	0x01D373FC ADRP X0, 0x23BC000
	0x01D37400 LDR X0, [X0 + 0x9A0]
	0x01D37404 BL 0x1C16CF4
	0x01D37408 ADRP X0, 0x23BC000
	0x01D3740C LDR X0, [X0 + 0x9A8]
	0x01D37410 BL 0x1C16CF4
	0x01D37414 ADRP X0, 0x23BC000
	0x01D37418 LDR X0, [X0 + 0x9B0]
	0x01D3741C BL 0x1C16CF4
	0x01D37420 ADRP X0, 0x23BC000
	0x01D37424 LDR X0, [X0 + 0x9B8]
	0x01D37428 BL 0x1C16CF4
	0x01D3742C ADRP X0, 0x23BC000
	0x01D37430 LDR X0, [X0 + 0x9C0]
	0x01D37434 BL 0x1C16CF4
	0x01D37438 ADRP X0, 0x23BC000
	0x01D3743C LDR X0, [X0 + 0x9C8]
	0x01D37440 BL 0x1C16CF4
	0x01D37444 ADRP X0, 0x23BC000
	0x01D37448 LDR X0, [X0 + 0x758]
	0x01D3744C BL 0x1C16CF4
	0x01D37450 ADRP X0, 0x23BC000
	0x01D37454 LDR X0, [X0 + 0x9D0]
	0x01D37458 BL 0x1C16CF4
	0x01D3745C ADRP X0, 0x23BC000
	0x01D37460 LDR X0, [X0 + 0x9D8]
	0x01D37464 BL 0x1C16CF4
	0x01D37468 ADRP X0, 0x23BC000
	0x01D3746C LDR X0, [X0 + 0x9E0]
	0x01D37470 BL 0x1C16CF4
	0x01D37474 ADRP X0, 0x23BC000
	0x01D37478 LDR X0, [X0 + 0x9E8]
	0x01D3747C BL 0x1C16CF4
	0x01D37480 ADRP X0, 0x23BC000
	0x01D37484 LDR X0, [X0 + 0x9F0]
	0x01D37488 BL 0x1C16CF4
	0x01D3748C ADRP X0, 0x23BC000
	0x01D37490 LDR X0, [X0 + 0x9F8]
	0x01D37494 BL 0x1C16CF4
	0x01D37498 ADRP X0, 0x23BC000
	0x01D3749C LDR X0, [X0 + 0xA00]
	0x01D374A0 BL 0x1C16CF4
	0x01D374A4 ADRP X0, 0x23BC000
	0x01D374A8 LDR X0, [X0 + 0x988]
	0x01D374AC BL 0x1C16CF4
	0x01D374B0 ADRP X0, 0x23BC000
	0x01D374B4 LDR X0, [X0 + 0xA08]
	0x01D374B8 BL 0x1C16CF4
	0x01D374BC ADRP X0, 0x23BC000
	0x01D374C0 LDR X0, [X0 + 0xA10]
	0x01D374C4 BL 0x1C16CF4
	0x01D374C8 ADRP X0, 0x23BC000
	0x01D374CC LDR X0, [X0 + 0xA18]
	0x01D374D0 BL 0x1C16CF4
	0x01D374D4 ADRP X0, 0x23BC000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x26A2000
	007 Move X21, 0x23BD000
	008 Move W8, [X22+1758]
	009 Move X21, [X21+1608]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x23BD000
	017 Move X0, [X0+1608]
	018 Call 0x1C17CF4
	019 Move X0, 0x23BD000
	020 Move X0, [X0+1704]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1758], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Move X21, [X8+16]
	032 Compare X21, 0
	033 JumpIfEqual {66}
	034 Move X10, 0x23BD000
	035 Move X8, [X21]
	036 Move X10, [X10+1704]
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Move X1, [X10]
	039 Compare X9, 0
	040 JumpIfEqual {47}
	041 Move X10, [X8+176]
	042 Add X10, X10, 8
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Subtract X9, X9, 1
	046 Add X10, X10, 16
	047 Move W2, 3
	048 Move X0, X21
	049 Call 0x1C5D788
	050 Move W9, [X10]
	051 Add W9, W9, 3
	052 Add X8, X8, W9
	053 Add X0, X8, 312
	054 Move X5, [X0]
	055 Move X4, [X0+8]
	056 Move X0, X21
	057 Move X1, X20
	058 Move X3, X19
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move W2, 2
	064 Move X30, [X31+48]
	065 CallNoReturn X5
	066 Call 0x1C17F20

Method: System.Void RegisterObserverForChildren(SpatialSys.ObservableState.ObserverDelegate observer, SpatialSys.ObservableState.IStateObject[] state)

Disassembly:
	0x01D374D8 LDR X0, [X0 + 0xA20]
	0x01D374DC BL 0x1C16CF4
	0x01D374E0 MOVZ W8, 0x1
	0x01D374E4 STRB W8, [X20 + 0x6F1]
	0x01D374E8 LDR X20, [X21]
	0x01D374EC LDR X0, [X22]
	0x01D374F0 BL 0x1C16F10
	0x01D374F4 ADRP X8, 0x23BC000
	0x01D374F8 LDR X8, [X8 + 0x9E8]
	0x01D374FC MOV X21, X0
	0x01D37500 LDR X1, [X8]
	0x01D37504 MOV X2, X31
	0x01D37508 BL 0x3BEF5F8
	0x01D3750C CBZ X21, 0x1D37854
	0x01D37510 ADRP X8, 0x23BC000
	0x01D37514 LDR X8, [X8 + 0xA20]
	0x01D37518 ADRP X9, 0x23BC000
	0x01D3751C LDR X9, [X9 + 0x9B0]
	0x01D37520 LDR X1, [X8]
	0x01D37524 LDR X2, [X9]
	0x01D37528 MOV X0, X21
	0x01D3752C BL 0x227C7AC
	0x01D37530 ADRP X24, 0x23BC000
	0x01D37534 LDR X24, [X24 + 0x9C8]
	0x01D37538 MOV X21, X0
	0x01D3753C LDR X22, [X24]
	0x01D37540 LDR X8, [X22 + 0x38]
	0x01D37544 CBNZ X8, 0x1D37554
	0x01D37548 MOV X0, X22
	0x01D3754C BL 0x1C5C6E0
	0x01D37550 LDR X8, [X22 + 0x38]
	0x01D37554 LDR X0, [X8 + 0x10]
	0x01D37558 LDRB W8, [X0 + 0x135]
	0x01D3755C TBNZ X8, 0x0, 0x1D37564
	0x01D37560 BL 0x1C5C684
	0x01D37564 LDR W8, [X0 + 0xE0]
	0x01D37568 CBNZ W8, 0x1D37570
	0x01D3756C BL 0x1C16DFC
	0x01D37570 LDR X8, [X22 + 0x38]
	0x01D37574 LDR X0, [X8 + 0x10]
	0x01D37578 LDRB W8, [X0 + 0x135]
	0x01D3757C TBNZ X8, 0x0, 0x1D37584
	0x01D37580 BL 0x1C5C684
	0x01D37584 CBZ X21, 0x1D37858
	0x01D37588 ADRP X9, 0x23BC000
	0x01D3758C LDR X8, [X0 + 0xB8]
	0x01D37590 LDR X9, [X9 + 0x9D8]
	0x01D37594 ADRP X25, 0x23BC000
	0x01D37598 LDR X25, [X25 + 0x9A0]
	0x01D3759C LDR X2, [X8]
	0x01D375A0 LDR X1, [X9]
	0x01D375A4 LDR X3, [X25]
	0x01D375A8 MOV X0, X21
	0x01D375AC BL 0x227A8F4
	0x01D375B0 LDR X22, [X24]
	0x01D375B4 MOV X21, X0
	0x01D375B8 LDR X8, [X22 + 0x38]
	0x01D375BC CBNZ X8, 0x1D375CC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x26A2000
	007 Move X21, 0x23BD000
	008 Move W8, [X22+1759]
	009 Move X21, [X21+1608]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x23BD000
	017 Move X0, [X0+1608]
	018 Call 0x1C17CF4
	019 Move X0, 0x23BD000
	020 Move X0, [X0+1704]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1759], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Move X21, [X8+16]
	032 Compare X21, 0
	033 JumpIfEqual {66}
	034 Move X10, 0x23BD000
	035 Move X8, [X21]
	036 Move X10, [X10+1704]
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Move X1, [X10]
	039 Compare X9, 0
	040 JumpIfEqual {47}
	041 Move X10, [X8+176]
	042 Add X10, X10, 8
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Subtract X9, X9, 1
	046 Add X10, X10, 16
	047 Move W2, 3
	048 Move X0, X21
	049 Call 0x1C5D788
	050 Move W9, [X10]
	051 Add W9, W9, 3
	052 Add X8, X8, W9
	053 Add X0, X8, 312
	054 Move X5, [X0]
	055 Move X4, [X0+8]
	056 Move X0, X21
	057 Move X1, X20
	058 Move X3, X19
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move W2, 1
	064 Move X30, [X31+48]
	065 CallNoReturn X5
	066 Call 0x1C17F20

Method: System.Void RegisterObserverForSelf(SpatialSys.ObservableState.ObserverDelegate observer, SpatialSys.ObservableState.IStateObject[] state)

Disassembly:
	0x01D375C0 MOV X0, X22
	0x01D375C4 BL 0x1C5C6E0
	0x01D375C8 LDR X8, [X22 + 0x38]
	0x01D375CC LDR X0, [X8 + 0x10]
	0x01D375D0 LDRB W8, [X0 + 0x135]
	0x01D375D4 TBNZ X8, 0x0, 0x1D375DC
	0x01D375D8 BL 0x1C5C684
	0x01D375DC LDR W8, [X0 + 0xE0]
	0x01D375E0 CBNZ W8, 0x1D375E8
	0x01D375E4 BL 0x1C16DFC
	0x01D375E8 LDR X8, [X22 + 0x38]
	0x01D375EC LDR X0, [X8 + 0x10]
	0x01D375F0 LDRB W8, [X0 + 0x135]
	0x01D375F4 TBNZ X8, 0x0, 0x1D375FC
	0x01D375F8 BL 0x1C5C684
	0x01D375FC CBZ X21, 0x1D3785C
	0x01D37600 ADRP X9, 0x23BC000
	0x01D37604 LDR X8, [X0 + 0xB8]
	0x01D37608 LDR X9, [X9 + 0xA08]
	0x01D3760C LDR X3, [X25]
	0x01D37610 LDR X2, [X8]
	0x01D37614 LDR X1, [X9]
	0x01D37618 MOV X0, X21
	0x01D3761C BL 0x227A8F4
	0x01D37620 MOV X21, X0
	0x01D37624 CBZ X0, 0x1D37860
	0x01D37628 ADRP X8, 0x23BC000
	0x01D3762C LDR X8, [X8 + 0xA00]
	0x01D37630 ADRP X9, 0x23BC000
	0x01D37634 LDR X9, [X9 + 0x9B8]
	0x01D37638 LDR X1, [X8]
	0x01D3763C LDR X2, [X9]
	0x01D37640 MOV X0, X21
	0x01D37644 BL 0x227C76C
	0x01D37648 ADRP X8, 0x23BC000
	0x01D3764C LDR X8, [X8 + 0x9D0]
	0x01D37650 MOV W23, W0
	0x01D37654 LDR X0, [X8]
	0x01D37658 MOVZ W1, 0x2
	0x01D3765C BL 0x1C16D6C
	0x01D37660 MOV X22, X0
	0x01D37664 CBZ X0, 0x1D37864
	0x01D37668 ADRP X26, 0x23BC000
	0x01D3766C LDR X26, [X26 + 0x9F8]
	0x01D37670 LDR X0, [X26]
	0x01D37674 CBZ X0, 0x1D37688
	0x01D37678 LDR X8, [X22]
	0x01D3767C LDR X1, [X8 + 0x40]
	0x01D37680 BL 0x1C16E00
	0x01D37684 CBZ X0, 0x1D37884
	0x01D37688 LDR W8, [X22 + 0x18]
	0x01D3768C CBZ W8, 0x1D37868
	0x01D37690 LDR X8, [X26]
	0x01D37694 ADRP X9, 0x23BC000
	0x01D37698 LDR X9, [X9 + 0x758]
	0x01D3769C STR X8, [X22 + 0x20]
	0x01D376A0 STR W23, [X31 + 0xC]
	0x01D376A4 LDR X0, [X9]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x26A2000
	007 Move X21, 0x23BD000
	008 Move W8, [X22+1760]
	009 Move X21, [X21+1608]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x23BD000
	017 Move X0, [X0+1608]
	018 Call 0x1C17CF4
	019 Move X0, 0x23BD000
	020 Move X0, [X0+1704]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1760], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Move X21, [X8+16]
	032 Compare X21, 0
	033 JumpIfEqual {66}
	034 Move X10, 0x23BD000
	035 Move X8, [X21]
	036 Move X10, [X10+1704]
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Move X1, [X10]
	039 Compare X9, 0
	040 JumpIfEqual {47}
	041 Move X10, [X8+176]
	042 Add X10, X10, 8
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Subtract X9, X9, 1
	046 Add X10, X10, 16
	047 Move W2, 3
	048 Move X0, X21
	049 Call 0x1C5D788
	050 Move W9, [X10]
	051 Add W9, W9, 3
	052 Add X8, X8, W9
	053 Add X0, X8, 312
	054 Move X5, [X0]
	055 Move X4, [X0+8]
	056 Move X0, X21
	057 Move X1, X20
	058 Move X3, X19
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move W2, W31
	064 Move X30, [X31+48]
	065 CallNoReturn X5
	066 Call 0x1C17F20

Method: System.Void RegisterKeyObserver(SpatialSys.ObservableState.ObserverDelegate observer, System.Object key, SpatialSys.ObservableState.IStateDictionary[] dictionaries)

Disassembly:
	0x01D376A8 ADD X1, X31, 0xC
	0x01D376AC BL 0x1C16E04
	0x01D376B0 MOV X23, X0
	0x01D376B4 CBZ X0, 0x1D376CC
	0x01D376B8 LDR X8, [X22]
	0x01D376BC LDR X1, [X8 + 0x40]
	0x01D376C0 MOV X0, X23
	0x01D376C4 BL 0x1C16E00
	0x01D376C8 CBZ X0, 0x1D37890
	0x01D376CC LDR W8, [X22 + 0x18]
	0x01D376D0 CMP W8, 0x1
	0x01D376D4 B.LS 0x1D3786C
	0x01D376D8 ADRP X8, 0x23BC000
	0x01D376DC LDR X8, [X8 + 0xA18]
	0x01D376E0 STR X23, [X22 + 0x28]
	0x01D376E4 LDR X3, [X25]
	0x01D376E8 LDR X1, [X8]
	0x01D376EC MOV X0, X21
	0x01D376F0 MOV X2, X22
	0x01D376F4 BL 0x227A8F4
	0x01D376F8 CBZ X0, 0x1D37870
	0x01D376FC ADRP X8, 0x23BC000
	0x01D37700 LDR X8, [X8 + 0x9F0]
	0x01D37704 ADRP X9, 0x23BC000
	0x01D37708 LDR X9, [X9 + 0x9C0]
	0x01D3770C LDR X1, [X8]
	0x01D37710 LDR X2, [X9]
	0x01D37714 BL 0x227C51C
	0x01D37718 LDR X22, [X24]
	0x01D3771C MOV X21, X0
	0x01D37720 LDR X8, [X22 + 0x38]
	0x01D37724 CBNZ X8, 0x1D37734
	0x01D37728 MOV X0, X22
	0x01D3772C BL 0x1C5C6E0
	0x01D37730 LDR X8, [X22 + 0x38]
	0x01D37734 LDR X0, [X8 + 0x10]
	0x01D37738 LDRB W8, [X0 + 0x135]
	0x01D3773C TBNZ X8, 0x0, 0x1D37744
	0x01D37740 BL 0x1C5C684
	0x01D37744 LDR W8, [X0 + 0xE0]
	0x01D37748 CBNZ W8, 0x1D37750
	0x01D3774C BL 0x1C16DFC
	0x01D37750 LDR X8, [X22 + 0x38]
	0x01D37754 LDR X0, [X8 + 0x10]
	0x01D37758 LDRB W8, [X0 + 0x135]
	0x01D3775C TBNZ X8, 0x0, 0x1D37764
	0x01D37760 BL 0x1C5C684
	0x01D37764 CBZ X21, 0x1D37874
	0x01D37768 ADRP X9, 0x23BC000
	0x01D3776C LDR X8, [X0 + 0xB8]
	0x01D37770 LDR X9, [X9 + 0xA10]
	0x01D37774 ADRP X10, 0x23BC000
	0x01D37778 LDR X10, [X10 + 0x998]
	0x01D3777C LDR X2, [X8]
	0x01D37780 LDR X1, [X9]
	0x01D37784 LDR X3, [X10]
	0x01D37788 MOV X0, X21
	0x01D3778C BL 0x227A8F4
	0x01D37790 CBZ X0, 0x1D37878
	0x01D37794 LDR W8, [X0 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x26A2000
	008 Move X22, 0x23BD000
	009 Move W8, [X23+1761]
	010 Move X22, [X22+1608]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x23BD000
	019 Move X0, [X0+1608]
	020 Call 0x1C17CF4
	021 Move X0, 0x23BD000
	022 Move X0, [X0+1704]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+1761], W8
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X22]
	032 Move X8, [X0+184]
	033 Move X22, [X8+16]
	034 Compare X22, 0
	035 JumpIfEqual {70}
	036 Move X10, 0x23BD000
	037 Move X8, [X22]
	038 Move X10, [X10+1704]
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Move X1, [X10]
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move W2, 4
	050 Move X0, X22
	051 Call 0x1C5D788
	052 Move W9, [X10]
	053 Add W9, W9, 4
	054 Add X8, X8, W9
	055 Add X0, X8, 312
	056 Move X6, [X0]
	057 Move X5, [X0+8]
	058 Move X0, X22
	059 Move X1, X21
	060 Move X2, X20
	061 Move X4, X19
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move W3, 2
	067 Move X30, [X31+48]
	068 Move X23, [X31+56]
	069 CallNoReturn X6
	070 Call 0x1C17F20

Method: System.Void RegisterKeyObserverForChildren(SpatialSys.ObservableState.ObserverDelegate observer, System.Object key, SpatialSys.ObservableState.IStateDictionary[] dictionaries)

Disassembly:
	0x01D37798 CBZ W8, 0x1D3787C
	0x01D3779C LDR X22, [X24]
	0x01D377A0 LDR X21, [X0 + 0x20]
	0x01D377A4 LDR X8, [X22 + 0x38]
	0x01D377A8 CBNZ X8, 0x1D377B8
	0x01D377AC MOV X0, X22
	0x01D377B0 BL 0x1C5C6E0
	0x01D377B4 LDR X8, [X22 + 0x38]
	0x01D377B8 LDR X0, [X8 + 0x10]
	0x01D377BC LDRB W8, [X0 + 0x135]
	0x01D377C0 TBNZ X8, 0x0, 0x1D377C8
	0x01D377C4 BL 0x1C5C684
	0x01D377C8 LDR W8, [X0 + 0xE0]
	0x01D377CC CBNZ W8, 0x1D377D4
	0x01D377D0 BL 0x1C16DFC
	0x01D377D4 LDR X8, [X22 + 0x38]
	0x01D377D8 LDR X0, [X8 + 0x10]
	0x01D377DC LDRB W8, [X0 + 0x135]
	0x01D377E0 TBNZ X8, 0x0, 0x1D377E8
	0x01D377E4 BL 0x1C5C684
	0x01D377E8 CBZ X21, 0x1D37880
	0x01D377EC ADRP X9, 0x23BC000
	0x01D377F0 LDR X8, [X0 + 0xB8]
	0x01D377F4 LDR X9, [X9 + 0x9E0]
	0x01D377F8 ADRP X10, 0x23BC000
	0x01D377FC LDR X10, [X10 + 0x9A8]
	0x01D37800 LDR X2, [X8]
	0x01D37804 LDR X1, [X9]
	0x01D37808 LDR X3, [X10]
	0x01D3780C MOV X0, X21
	0x01D37810 BL 0x227A8F4
	0x01D37814 MOV X20, X0
	0x01D37818 MOV X0, X20
	0x01D3781C MOV X1, X19
	0x01D37820 MOV X2, X31
	0x01D37824 BL 0x321B938
	0x01D37828 CBZ X0, 0x1D37850
	0x01D3782C LDR X8, [X0]
	0x01D37830 LDP X9, X1, [X8 + 0x158]
	0x01D37834 BLR X9
	0x01D37838 LDP X20, X19, [X31 + 0x40]
	0x01D3783C LDP X22, X21, [X31 + 0x30]
	0x01D37840 LDP X24, X23, [X31 + 0x20]
	0x01D37844 LDP X26, X25, [X31 + 0x10]
	0x01D37848 LDR X30, [X31], #0x50
	0x01D3784C RET
	0x01D37850 BL 0x1C16F20
	0x01D37854 BL 0x1C16F20
	0x01D37858 BL 0x1C16F20
	0x01D3785C BL 0x1C16F20
	0x01D37860 BL 0x1C16F20
	0x01D37864 BL 0x1C16F20
	0x01D37868 BL 0x1C16F28
	0x01D3786C BL 0x1C16F28
	0x01D37870 BL 0x1C16F20
	0x01D37874 BL 0x1C16F20
	0x01D37878 BL 0x1C16F20
	0x01D3787C BL 0x1C16F28
	0x01D37880 BL 0x1C16F20
	0x01D37884 BL 0x1C16F44

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x26A2000
	008 Move X22, 0x23BD000
	009 Move W8, [X23+1762]
	010 Move X22, [X22+1608]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x23BD000
	019 Move X0, [X0+1608]
	020 Call 0x1C17CF4
	021 Move X0, 0x23BD000
	022 Move X0, [X0+1704]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+1762], W8
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X22]
	032 Move X8, [X0+184]
	033 Move X22, [X8+16]
	034 Compare X22, 0
	035 JumpIfEqual {70}
	036 Move X10, 0x23BD000
	037 Move X8, [X22]
	038 Move X10, [X10+1704]
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Move X1, [X10]
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move W2, 4
	050 Move X0, X22
	051 Call 0x1C5D788
	052 Move W9, [X10]
	053 Add W9, W9, 4
	054 Add X8, X8, W9
	055 Add X0, X8, 312
	056 Move X6, [X0]
	057 Move X5, [X0+8]
	058 Move X0, X22
	059 Move X1, X21
	060 Move X2, X20
	061 Move X4, X19
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move W3, 1
	067 Move X30, [X31+48]
	068 Move X23, [X31+56]
	069 CallNoReturn X6
	070 Call 0x1C17F20

Method: System.Void RegisterKeyObserverForSelf(SpatialSys.ObservableState.ObserverDelegate observer, System.Object key, SpatialSys.ObservableState.IStateDictionary[] dictionaries)

Disassembly:
	0x01D37888 MOV X1, X31
	0x01D3788C BL 0x1C16DEC
	0x01D37890 BL 0x1C16F44
	0x01D37894 MOV X1, X31
	0x01D37898 BL 0x1C16DEC
	0x01D3789C B 0x1D378E0
	0x01D378A0 B 0x1D378E0
	0x01D378A4 B 0x1D378E0
	0x01D378A8 B 0x1D378E0
	0x01D378AC B 0x1D378E0
	0x01D378B0 B 0x1D378E0
	0x01D378B4 B 0x1D378E0
	0x01D378B8 B 0x1D378E0
	0x01D378BC B 0x1D378E0
	0x01D378C0 B 0x1D378E0
	0x01D378C4 B 0x1D378E0
	0x01D378C8 B 0x1D378E0
	0x01D378CC B 0x1D378E0
	0x01D378D0 B 0x1D378E0
	0x01D378D4 B 0x1D378E0
	0x01D378D8 B 0x1D378E0
	0x01D378DC B 0x1D378E0
	0x01D378E0 MOV X21, X0
	0x01D378E4 CMP W1, 0x1
	0x01D378E8 B.NE 0x1D3796C
	0x01D378EC MOV X0, X21
	0x01D378F0 BL 0x3EB1AD0
	0x01D378F4 MOV X21, X0
	0x01D378F8 ADRP X0, 0x23BC000
	0x01D378FC LDR X0, [X0 + 0x7D0]
	0x01D37900 BL 0x1C16D08
	0x01D37904 LDR X8, [X21]
	0x01D37908 LDR X1, [X8]
	0x01D3790C BL 0x1C17270
	0x01D37910 TBZ X0, 0x0, 0x1D37944
	0x01D37914 LDR X21, [X21]
	0x01D37918 BL 0x3EB1AE0
	0x01D3791C ADRP X0, 0x23BC000
	0x01D37920 LDR X0, [X0 + 0xA28]
	0x01D37924 BL 0x1C16D08
	0x01D37928 LDR W8, [X0 + 0xE0]
	0x01D3792C CBNZ W8, 0x1D37934
	0x01D37930 BL 0x1C16DFC
	0x01D37934 MOV X0, X21
	0x01D37938 MOV X1, X31
	0x01D3793C BL 0x3C0649C
	0x01D37940 B 0x1D37818
	0x01D37944 MOVZ W0, 0x8
	0x01D37948 BL 0x3EB1AF0
	0x01D3794C LDR X8, [X21]
	0x01D37950 STR X8, [X0]
	0x01D37954 ADRP X1, 0x217D000
	0x01D37958 ADD X1, X1, 0xE58
	0x01D3795C MOV X2, X31
	0x01D37960 BL 0x3EB1B00
	0x01D37964 MOV X21, X0
	0x01D37968 BL 0x3EB1AE0
	0x01D3796C MOV X0, X21
	0x01D37970 BL 0x1D2C690
	0x01D37974 BL 0x1990590

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x26A2000
	008 Move X22, 0x23BD000
	009 Move W8, [X23+1763]
	010 Move X22, [X22+1608]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x23BD000
	019 Move X0, [X0+1608]
	020 Call 0x1C17CF4
	021 Move X0, 0x23BD000
	022 Move X0, [X0+1704]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+1763], W8
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X22]
	032 Move X8, [X0+184]
	033 Move X22, [X8+16]
	034 Compare X22, 0
	035 JumpIfEqual {70}
	036 Move X10, 0x23BD000
	037 Move X8, [X22]
	038 Move X10, [X10+1704]
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Move X1, [X10]
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move W2, 4
	050 Move X0, X22
	051 Call 0x1C5D788
	052 Move W9, [X10]
	053 Add W9, W9, 4
	054 Add X8, X8, W9
	055 Add X0, X8, 312
	056 Move X6, [X0]
	057 Move X5, [X0+8]
	058 Move X0, X22
	059 Move X1, X21
	060 Move X2, X20
	061 Move X4, X19
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move W3, W31
	067 Move X30, [X31+48]
	068 Move X23, [X31+56]
	069 CallNoReturn X6
	070 Call 0x1C17F20

Method: System.Void DeregisterObserver(SpatialSys.ObservableState.ObserverDelegate observer)

Disassembly:
	0x01D37978 STR X30, [X31 - 0x20]!
	0x01D3797C STP X20, X19, [X31 + 0x10]
	0x01D37980 ADRP X19, 0x26A1000
	0x01D37984 ADRP X20, 0x23BC000
	0x01D37988 LDRB W8, [X19 + 0x6F2]
	0x01D3798C LDR X20, [X20 + 0xA30]
	0x01D37990 TBNZ X8, 0x0, 0x1D379A8
	0x01D37994 ADRP X0, 0x23BC000
	0x01D37998 LDR X0, [X0 + 0xA30]
	0x01D3799C BL 0x1C16CF4
	0x01D379A0 MOVZ W8, 0x1
	0x01D379A4 STRB W8, [X19 + 0x6F2]
	0x01D379A8 LDR X0, [X20]
	0x01D379AC BL 0x1C16F10
	0x01D379B0 MOV X1, X31
	0x01D379B4 MOV X19, X0
	0x01D379B8 BL 0x33BDD8C
	0x01D379BC STR W31, [X19 + 0x10]
	0x01D379C0 MOV X0, X19
	0x01D379C4 LDP X20, X19, [X31 + 0x10]
	0x01D379C8 LDR X30, [X31], #0x20
	0x01D379CC RET
	0x01D379D0 STR X30, [X31 - 0x20]!
	0x01D379D4 STP X20, X19, [X31 + 0x10]
	0x01D379D8 MOV W19, W1
	0x01D379DC MOV X1, X31
	0x01D379E0 MOV X20, X0
	0x01D379E4 BL 0x33BDD8C
	0x01D379E8 STR W19, [X20 + 0x10]
	0x01D379EC LDP X20, X19, [X31 + 0x10]
	0x01D379F0 LDR X30, [X31], #0x20
	0x01D379F4 RET
	0x01D379F8 STR X30, [X31 - 0x20]!
	0x01D379FC STP X20, X19, [X31 + 0x10]
	0x01D37A00 ADRP X19, 0x26A1000
	0x01D37A04 ADRP X20, 0x23BC000
	0x01D37A08 LDRB W8, [X19 + 0x6F3]
	0x01D37A0C LDR X20, [X20 + 0xA38]
	0x01D37A10 TBNZ X8, 0x0, 0x1D37A28
	0x01D37A14 ADRP X0, 0x23BC000
	0x01D37A18 LDR X0, [X0 + 0xA38]
	0x01D37A1C BL 0x1C16CF4
	0x01D37A20 MOVZ W8, 0x1
	0x01D37A24 STRB W8, [X19 + 0x6F3]
	0x01D37A28 LDR X0, [X20]
	0x01D37A2C BL 0x1C16F10
	0x01D37A30 MOV X1, X31
	0x01D37A34 MOV X19, X0
	0x01D37A38 BL 0x33BDD8C
	0x01D37A3C STR W31, [X19 + 0x10]
	0x01D37A40 MOV X0, X19
	0x01D37A44 LDP X20, X19, [X31 + 0x10]
	0x01D37A48 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x26A2000
	006 Move X20, 0x23BD000
	007 Move W8, [X21+1764]
	008 Move X20, [X20+1608]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x23BD000
	015 Move X0, [X0+1608]
	016 Call 0x1C17CF4
	017 Move X0, 0x23BD000
	018 Move X0, [X0+1704]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1764], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X20, [X8+16]
	030 Compare X20, 0
	031 JumpIfEqual {61}
	032 Move X10, 0x23BD000
	033 Move X8, [X20]
	034 Move X10, [X10+1704]
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Move X1, [X10]
	037 Compare X9, 0
	038 JumpIfEqual {45}
	039 Move X10, [X8+176]
	040 Add X10, X10, 8
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Subtract X9, X9, 1
	044 Add X10, X10, 16
	045 Move W2, 7
	046 Move X0, X20
	047 Call 0x1C5D788
	048 Move W9, [X10]
	049 Add W9, W9, 7
	050 Add X8, X8, W9
	051 Add X0, X8, 312
	052 Move X3, [X0]
	053 Move X2, [X0+8]
	054 Move X0, X20
	055 Move X1, X19
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 CallNoReturn X3
	061 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01D37A4C RET
	0x01D37A50 STR X30, [X31 - 0x20]!

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x01D37A54 STP X20, X19, [X31 + 0x10]
	0x01D37A58 MOV W19, W1
	0x01D37A5C MOV X1, X31
	0x01D37A60 MOV X20, X0
	0x01D37A64 BL 0x33BDD8C
	0x01D37A68 STR W19, [X20 + 0x10]
	0x01D37A6C LDP X20, X19, [X31 + 0x10]
	0x01D37A70 LDR X30, [X31], #0x20
	0x01D37A74 RET
	0x01D37A78 STP X30, X21, [X31 - 0x20]!
	0x01D37A7C STP X20, X19, [X31 + 0x10]
	0x01D37A80 ADRP X20, 0x26A1000
	0x01D37A84 ADRP X21, 0x23BC000
	0x01D37A88 LDRB W8, [X20 + 0x6F4]
	0x01D37A8C LDR X21, [X21 + 0xA40]
	0x01D37A90 MOV X19, X0
	0x01D37A94 TBNZ X8, 0x0, 0x1D37AAC
	0x01D37A98 ADRP X0, 0x23BC000
	0x01D37A9C LDR X0, [X0 + 0xA40]
	0x01D37AA0 BL 0x1C16CF4
	0x01D37AA4 MOVZ W8, 0x1
	0x01D37AA8 STRB W8, [X20 + 0x6F4]
	0x01D37AAC LDR X0, [X21]
	0x01D37AB0 BL 0x1C16F10
	0x01D37AB4 MOV X1, X31
	0x01D37AB8 MOV X20, X0
	0x01D37ABC BL 0x33BDD8C
	0x01D37AC0 STR W31, [X20 + 0x10]
	0x01D37AC4 STR X19, [X20 + 0x28]
	0x01D37AC8 MOV X0, X20
	0x01D37ACC LDP X20, X19, [X31 + 0x10]
	0x01D37AD0 LDP X30, X21, [X31], #0x20
	0x01D37AD4 RET
	0x01D37AD8 STR X30, [X31 - 0x20]!
	0x01D37ADC STP X20, X19, [X31 + 0x10]
	0x01D37AE0 MOV W19, W1
	0x01D37AE4 MOV X1, X31
	0x01D37AE8 MOV X20, X0
	0x01D37AEC BL 0x33BDD8C
	0x01D37AF0 STR W19, [X20 + 0x10]
	0x01D37AF4 LDP X20, X19, [X31 + 0x10]
	0x01D37AF8 LDR X30, [X31], #0x20
	0x01D37AFC RET
	0x01D37B00 STP X30, X21, [X31 - 0x20]!
	0x01D37B04 STP X20, X19, [X31 + 0x10]
	0x01D37B08 ADRP X20, 0x26A1000
	0x01D37B0C ADRP X21, 0x23BC000
	0x01D37B10 LDRB W8, [X20 + 0x6F5]
	0x01D37B14 LDR X21, [X21 + 0xA48]
	0x01D37B18 MOV X19, X0
	0x01D37B1C TBNZ X8, 0x0, 0x1D37B34
	0x01D37B20 ADRP X0, 0x23BC000
	0x01D37B24 LDR X0, [X0 + 0xA48]
	0x01D37B28 BL 0x1C16CF4
	0x01D37B2C MOVZ W8, 0x1
	0x01D37B30 STRB W8, [X20 + 0x6F5]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x26A2000
	008 Move X23, 0x23BD000
	009 Move X19, 0x23BD000
	010 Move X20, 0x23BD000
	011 Move X21, 0x23BD000
	012 Move W8, [X22+1765]
	013 Move X23, [X23+2272]
	014 Move X19, [X19+2280]
	015 Move X20, [X20+1608]
	016 Move X21, [X21+2288]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0x23BD000
	022 Move X0, [X0+1608]
	023 Call 0x1C17CF4
	024 Move X0, 0x23BD000
	025 Move X0, [X0+2280]
	026 Call 0x1C17CF4
	027 Move X0, 0x23BD000
	028 Move X0, [X0+2272]
	029 Call 0x1C17CF4
	030 Move X0, 0x23BD000
	031 Move X0, [X0+2288]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+1765], W8
	035 Move X0, [X23]
	036 Call 0x1C17F10
	037 Move X1, [X19]
	038 Move X19, X0
	039 Call List`1<Object>..ctor, X0
	040 Move X8, [X20]
	041 Move X8, [X8+184]
	042 Move [X8+48], X19
	043 Move X0, [X21]
	044 Call 0x1C17F10
	045 Move X1, X31
	046 Move X19, X0
	047 Call StringBuilder..ctor, X0
	048 Move X8, [X20]
	049 Move X8, [X8+184]
	050 Move [X8+104], X19
	051 Move X0, [X21]
	052 Call 0x1C17F10
	053 Move X1, X31
	054 Move X19, X0
	055 Call StringBuilder..ctor, X0
	056 Move X8, [X20]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X8, [X8+184]
	060 Move [X8+112], X19
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X30, [X31+48]
	064 Move X23, [X31+56]
	065 Return 

