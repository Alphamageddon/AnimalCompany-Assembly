Type: AnimalCompany.App

Method: AnimalCompany.AppState get_state()

Disassembly:
	0x01C8A584 ADD X0, X8, 0x138
	0x01C8A588 LDP X8, X2, [X0]
	0x01C8A58C MOVZ W1, 0x1
	0x01C8A590 MOV X0, X23
	0x01C8A594 MOVZ W20, 0x1
	0x01C8A598 BLR X8
	0x01C8A59C ADRP X8, 0x22C3000
	0x01C8A5A0 LDR X8, [X8 + 0x4E8]
	0x01C8A5A4 LDR X8, [X8]
	0x01C8A5A8 LDR X8, [X8 + 0xB8]
	0x01C8A5AC STRB W20, [X8 + 0x18]
	0x01C8A5B0 LDR X8, [X22]
	0x01C8A5B4 LDR X1, [X19]
	0x01C8A5B8 LDR W20, [X31 + 0xC]
	0x01C8A5BC LDRH W9, [X8 + 0x12E]
	0x01C8A5C0 CBZ X9, 0x1C8A5E4
	0x01C8A5C4 LDR X10, [X8 + 0xB0]
	0x01C8A5C8 ADD X10, X10, 0x8
	0x01C8A5CC LDUR X11, [X10 - 0x8]
	0x01C8A5D0 CMP X11, X1
	0x01C8A5D4 B.EQ 0x1C8A5F4
	0x01C8A5D8 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x259A000
	005 Move X19, 0x22C4000
	006 Move W8, [X20+886]
	007 Move X19, [X19+1256]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22C4000
	013 Move X0, [X0+1256]
	014 Call 0x1B6F7F0
	015 Move W8, 1
	016 Move [X20+886], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1B6F8F8
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void set_state(AnimalCompany.AppState value)

Disassembly:
	0x01C8A5DC ADD X10, X10, 0x10
	0x01C8A5E0 B.NE 0x1C8A5CC
	0x01C8A5E4 MOV X0, X22
	0x01C8A5E8 MOV W2, W31
	0x01C8A5EC BL 0x1BB4284
	0x01C8A5F0 B 0x1C8A600
	0x01C8A5F4 LDRSW X9, [X10]
	0x01C8A5F8 ADD X8, X8, X9, 0x4, LSL
	0x01C8A5FC ADD X0, X8, 0x138
	0x01C8A600 LDP X8, X1, [X0]
	0x01C8A604 MOV X0, X22
	0x01C8A608 BLR X8
	0x01C8A60C MOV W23, W0
	0x01C8A610 CMP W0, 0x1
	0x01C8A614 STR W24, [X31 + 0x8]
	0x01C8A618 STR W21, [X31 + 0x10]
	0x01C8A61C B.LT 0x1C8AF50
	0x01C8A620 STR W31, [X31 + 0x14]
	0x01C8A624 ADRP X21, 0x22C3000
	0x01C8A628 LDR X21, [X21 + 0x5E8]
	0x01C8A62C MOV W24, W31
	0x01C8A630 MOVZ W19, 0x1
	0x01C8A634 LDR X8, [X22]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x259A000
	006 Move X20, 0x22C4000
	007 Move W8, [X21+887]
	008 Move X20, [X20+1256]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22C4000
	015 Move X0, [X0+1256]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X21+887], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1B6F8F8
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move [X8], X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

Method: AnimalCompany.AppPlatform get_platform()

Disassembly:
	0x01C8A638 LDR X1, [X21]
	0x01C8A63C LDRH W9, [X8 + 0x12E]
	0x01C8A640 CBZ X9, 0x1C8A664
	0x01C8A644 LDR X10, [X8 + 0xB0]
	0x01C8A648 ADD X10, X10, 0x8
	0x01C8A64C LDUR X11, [X10 - 0x8]
	0x01C8A650 CMP X11, X1
	0x01C8A654 B.EQ 0x1C8A674
	0x01C8A658 SUBS X9, X9, 0x1
	0x01C8A65C ADD X10, X10, 0x10
	0x01C8A660 B.NE 0x1C8A64C
	0x01C8A664 MOV X0, X22
	0x01C8A668 MOV W2, W31
	0x01C8A66C BL 0x1BB4284
	0x01C8A670 B 0x1C8A680
	0x01C8A674 LDRSW X9, [X10]
	0x01C8A678 ADD X8, X8, X9, 0x4, LSL
	0x01C8A67C ADD X0, X8, 0x138
	0x01C8A680 LDP X8, X2, [X0]
	0x01C8A684 MOV X0, X22
	0x01C8A688 MOV W1, W24
	0x01C8A68C BLR X8
	0x01C8A690 MOV X28, X0
	0x01C8A694 CBZ X0, 0x1C8ACDC
	0x01C8A698 LDR X8, [X28]
	0x01C8A69C LDP X9, X1, [X8 + 0x178]
	0x01C8A6A0 MOV X0, X28
	0x01C8A6A4 BLR X9
	0x01C8A6A8 ADRP X9, 0x22C3000
	0x01C8A6AC LDR X9, [X9 + 0x4E8]
	0x01C8A6B0 MOV W8, W0
	0x01C8A6B4 AND W19, W19, W8, 0x0
	0x01C8A6B8 LDR X0, [X9]
	0x01C8A6BC LDR W9, [X0 + 0xE0]
	0x01C8A6C0 CBNZ W9, 0x1C8A6C8
	0x01C8A6C4 BL 0x1B6E8F8
	0x01C8A6C8 ADRP X8, 0x2599000
	0x01C8A6CC LDRB W8, [X8 + 0x443]
	0x01C8A6D0 CBNZ W8, 0x1C8A6EC
	0x01C8A6D4 ADRP X0, 0x22C3000
	0x01C8A6D8 LDR X0, [X0 + 0x4E8]
	0x01C8A6DC BL 0x1B6E7F0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x259A000
	005 Move X19, 0x22C4000
	006 Move W8, [X20+888]
	007 Move X19, [X19+1256]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x22C4000
	013 Move X0, [X0+1256]
	014 Call 0x1B6F7F0
	015 Move X0, 0x22C4000
	016 Move X0, [X0+1264]
	017 Call 0x1B6F7F0
	018 Move W8, 1
	019 Move [X20+888], W8
	020 Move X0, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1B6F8F8
	025 Move X20, 0x259A000
	026 Move W8, [X20+1091]
	027 Compare W8, 0
	028 JumpIfNotEqual {34}
	029 Move X0, 0x22C4000
	030 Move X0, [X0+1256]
	031 Call 0x1B6F7F0
	032 Move W8, 1
	033 Move [X20+1091], W8
	034 Move X0, [X19]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1B6F8F8
	039 Move X0, [X19]
	040 Move X8, [X0+184]
	041 Move X8, [X8]
	042 Compare X8, 0
	043 JumpIfEqual {52}
	044 Move X8, [X8+104]
	045 Compare X8, 0
	046 JumpIfEqual {52}
	047 Move W0, [X8+76]
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Return X0
	052 Call 0x1B6FA1C

Method: AnimalCompany.API.AnimalCompanyAPI get_api()

Disassembly:
	0x01C8A6E0 MOVZ W8, 0x1
	0x01C8A6E4 ADRP X9, 0x2599000
	0x01C8A6E8 STRB W8, [X9 + 0x443]
	0x01C8A6EC ADRP X8, 0x22C3000
	0x01C8A6F0 LDR X8, [X8 + 0x4E8]
	0x01C8A6F4 LDR X0, [X8]
	0x01C8A6F8 LDR W8, [X0 + 0xE0]
	0x01C8A6FC CBNZ W8, 0x1C8A710
	0x01C8A700 BL 0x1B6E8F8
	0x01C8A704 ADRP X8, 0x22C3000
	0x01C8A708 LDR X8, [X8 + 0x4E8]
	0x01C8A70C LDR X0, [X8]
	0x01C8A710 LDR X8, [X0 + 0xB8]
	0x01C8A714 LDR X9, [X28]
	0x01C8A718 LDR X1, [X8]
	0x01C8A71C LDP X8, X2, [X9 + 0x1A8]
	0x01C8A720 MOV X0, X28
	0x01C8A724 BLR X8
	0x01C8A728 TBZ X26, 0x0, 0x1C8A734
	0x01C8A72C MOVZ W26, 0x1
	0x01C8A730 B 0x1C8ACDC
	0x01C8A734 LDR X8, [X28]
	0x01C8A738 LDP X9, X1, [X8 + 0x178]
	0x01C8A73C MOV X0, X28
	0x01C8A740 BLR X9
	0x01C8A744 TBNZ X0, 0x0, 0x1C8ACD8
	0x01C8A748 ADRP X8, 0x22C3000
	0x01C8A74C LDR X8, [X8 + 0x4E8]
	0x01C8A750 LDR X0, [X8]
	0x01C8A754 LDR W8, [X0 + 0xE0]
	0x01C8A758 CBNZ W8, 0x1C8A76C
	0x01C8A75C BL 0x1B6E8F8
	0x01C8A760 ADRP X8, 0x22C3000
	0x01C8A764 LDR X8, [X8 + 0x4E8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x259A000
	005 Move X19, 0x22C4000
	006 Move W8, [X20+889]
	007 Move X19, [X19+1272]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22C4000
	013 Move X0, [X0+1272]
	014 Call 0x1B6F7F0
	015 Move W8, 1
	016 Move [X20+889], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1B6F8F8
	022 Move X20, 0x259A000
	023 Move W8, [X20+1092]
	024 Compare W8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, 0x22C4000
	027 Move X0, [X0+1272]
	028 Call 0x1B6F7F0
	029 Move W8, 1
	030 Move [X20+1092], W8
	031 Move X0, [X19]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1B6F8F8
	036 Move X0, [X19]
	037 Move X8, [X0+184]
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X0, [X8]
	041 Move X30, [X31+32]
	042 Return X0

Method: Nakama.ISession get_apiSession()

Disassembly:
	0x01C8A768 LDR X0, [X8]
	0x01C8A76C LDR X8, [X0 + 0xB8]
	0x01C8A770 LDR X0, [X8 + 0x70]
	0x01C8A774 CBZ X0, 0x1C8AD40
	0x01C8A778 MOV X1, X31
	0x01C8A77C BL 0x309B3D0
	0x01C8A780 MOVZ W8, 0x2327
	0x01C8A784 CMP W0, W8
	0x01C8A788 B.GT 0x1C8ACD8
	0x01C8A78C ADRP X8, 0x22C3000
	0x01C8A790 LDR X8, [X8 + 0x4E8]
	0x01C8A794 LDR X0, [X8]
	0x01C8A798 LDR W8, [X0 + 0xE0]
	0x01C8A79C CBNZ W8, 0x1C8A7B0
	0x01C8A7A0 BL 0x1B6E8F8
	0x01C8A7A4 ADRP X8, 0x22C3000
	0x01C8A7A8 LDR X8, [X8 + 0x4E8]
	0x01C8A7AC LDR X0, [X8]
	0x01C8A7B0 LDR X9, [X0 + 0xB8]
	0x01C8A7B4 LDR X29, [X9 + 0x10]
	0x01C8A7B8 CBZ X29, 0x1C8AD4C
	0x01C8A7BC LDR X8, [X29]
	0x01C8A7C0 ADRP X10, 0x22C3000
	0x01C8A7C4 LDR X25, [X9 + 0x70]
	0x01C8A7C8 LDRH W9, [X8 + 0x12E]
	0x01C8A7CC LDR X10, [X10 + 0x548]
	0x01C8A7D0 LDR X1, [X10]
	0x01C8A7D4 CBZ X9, 0x1C8A7F8
	0x01C8A7D8 LDR X10, [X8 + 0xB0]
	0x01C8A7DC ADD X10, X10, 0x8
	0x01C8A7E0 LDUR X11, [X10 - 0x8]
	0x01C8A7E4 CMP X11, X1
	0x01C8A7E8 B.EQ 0x1C8A808
	0x01C8A7EC SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x259A000
	005 Move X19, 0x22C4000
	006 Move W8, [X20+890]
	007 Move X19, [X19+1272]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22C4000
	013 Move X0, [X0+1272]
	014 Call 0x1B6F7F0
	015 Move W8, 1
	016 Move [X20+890], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1B6F8F8
	022 Move X20, 0x259A000
	023 Move W8, [X20+1093]
	024 Compare W8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, 0x22C4000
	027 Move X0, [X0+1272]
	028 Call 0x1B6F7F0
	029 Move W8, 1
	030 Move [X20+1093], W8
	031 Move X0, [X19]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1B6F8F8
	036 Move X0, [X19]
	037 Move X8, [X0+184]
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X0, [X8+32]
	041 Move X30, [X31+32]
	042 Return X0

Method: System.Collections.Generic.IEnumerator`1<SpatialSys.CommandLib.Command> get_runningCommands()

Disassembly:
	0x01C8A7F0 ADD X10, X10, 0x10
	0x01C8A7F4 B.NE 0x1C8A7E0
	0x01C8A7F8 MOVZ W2, 0x2
	0x01C8A7FC MOV X0, X29
	0x01C8A800 BL 0x1BB4284
	0x01C8A804 B 0x1C8A818
	0x01C8A808 LDR W9, [X10]
	0x01C8A80C ADD W9, W9, 0x2
	0x01C8A810 ADD X8, X8, W9, 0x4, SXTW
	0x01C8A814 ADD X0, X8, 0x138
	0x01C8A818 LDP X8, X1, [X0]
	0x01C8A81C MOV X0, X29
	0x01C8A820 BLR X8
	0x01C8A824 CBZ X0, 0x1C8AD58
	0x01C8A828 ADRP X9, 0x22C3000
	0x01C8A82C LDR W8, [X0 + 0x18]
	0x01C8A830 LDR X9, [X9 + 0x5F8]
	0x01C8A834 LDR X0, [X9]
	0x01C8A838 LDR W9, [X31 + 0x14]
	0x01C8A83C SUB W8, W8, W9
	0x01C8A840 STR W8, [X31 + 0x18]
	0x01C8A844 ADD X1, X31, 0x18
	0x01C8A848 BL 0x1B6E900
	0x01C8A84C ADRP X8, 0x22C3000
	0x01C8A850 LDR X8, [X8 + 0x640]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x259A000
	005 Move X19, 0x22C4000
	006 Move W8, [X20+891]
	007 Move X19, [X19+1256]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22C4000
	013 Move X0, [X0+1256]
	014 Call 0x1B6F7F0
	015 Move W8, 1
	016 Move [X20+891], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1B6F8F8
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X0, [X8+80]
	025 Compare X0, 0
	026 JumpIfEqual {33}
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X1, X31
	030 Move X30, [X31+32]
	031 Call CommandScheduler.GetEnumerator, X0
	032 Return X0
	033 Call 0x1B6FA1C

Method: System.Boolean get_isCurrentlyNotifyingObservers()

Disassembly:
	0x01C8A854 MOV X2, X0
	0x01C8A858 LDR X0, [X8]
	0x01C8A85C MOV X1, X28
	0x01C8A860 MOV X3, X31
	0x01C8A864 BL 0x3090A1C
	0x01C8A868 MOV X1, X0
	0x01C8A86C CBZ X25, 0x1C8AD60
	0x01C8A870 MOV X0, X25
	0x01C8A874 MOV X2, X31
	0x01C8A878 BL 0x309C1A4
	0x01C8A87C ADRP X8, 0x22C3000
	0x01C8A880 LDR X8, [X8 + 0x4E8]
	0x01C8A884 LDR X8, [X8]
	0x01C8A888 LDR X8, [X8 + 0xB8]
	0x01C8A88C LDR X0, [X8 + 0x70]
	0x01C8A890 CBZ X0, 0x1C8AD68
	0x01C8A894 MOV X1, X31
	0x01C8A898 BL 0x309B3D0
	0x01C8A89C MOVZ W8, 0x2329
	0x01C8A8A0 CMP W0, W8
	0x01C8A8A4 B.LT 0x1C8A8EC
	0x01C8A8A8 ADRP X8, 0x22C3000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x259A000
	005 Move X19, 0x22C4000
	006 Move W8, [X20+892]
	007 Move X19, [X19+1256]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22C4000
	013 Move X0, [X0+1256]
	014 Call 0x1B6F7F0
	015 Move W8, 1
	016 Move [X20+892], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1B6F8F8
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, [X8+26]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void Awake()

Disassembly:
	0x01C8A8AC LDR X8, [X8 + 0x4E8]
	0x01C8A8B0 LDR X0, [X8]
	0x01C8A8B4 LDR W8, [X0 + 0xE0]
	0x01C8A8B8 CBNZ W8, 0x1C8A8CC
	0x01C8A8BC BL 0x1B6E8F8
	0x01C8A8C0 ADRP X8, 0x22C3000
	0x01C8A8C4 LDR X8, [X8 + 0x4E8]
	0x01C8A8C8 LDR X0, [X8]
	0x01C8A8CC LDR X8, [X0 + 0xB8]
	0x01C8A8D0 LDR X0, [X8 + 0x70]
	0x01C8A8D4 CBZ X0, 0x1C8AD94
	0x01C8A8D8 ADRP X8, 0x22C3000
	0x01C8A8DC LDR X8, [X8 + 0x638]
	0x01C8A8E0 LDR X1, [X8]
	0x01C8A8E4 MOV X2, X31
	0x01C8A8E8 BL 0x309C1A4
	0x01C8A8EC CBZ W20, 0x1C8AC38
	0x01C8A8F0 ADRP X8, 0x22C3000
	0x01C8A8F4 LDR X8, [X8 + 0x4E8]
	0x01C8A8F8 LDR X0, [X8]
	0x01C8A8FC LDR W8, [X0 + 0xE0]
	0x01C8A900 CBNZ W8, 0x1C8A914
	0x01C8A904 BL 0x1B6E8F8
	0x01C8A908 ADRP X8, 0x22C3000
	0x01C8A90C LDR X8, [X8 + 0x4E8]
	0x01C8A910 LDR X0, [X8]
	0x01C8A914 LDR X8, [X0 + 0xB8]
	0x01C8A918 LDR X0, [X8 + 0x70]
	0x01C8A91C CBZ X0, 0x1C8AD88
	0x01C8A920 MOV X1, X31
	0x01C8A924 BL 0x309B3D0
	0x01C8A928 LDR W29, [X31 + 0x14]
	0x01C8A92C MOVZ W8, 0x2327
	0x01C8A930 CMP W0, W8
	0x01C8A934 B.GT 0x1C8AC38
	0x01C8A938 ADRP X8, 0x22C3000
	0x01C8A93C LDR X8, [X8 + 0x4E8]
	0x01C8A940 LDR X0, [X8]
	0x01C8A944 LDR W8, [X0 + 0xE0]
	0x01C8A948 CBNZ W8, 0x1C8A95C
	0x01C8A94C BL 0x1B6E8F8
	0x01C8A950 ADRP X8, 0x22C3000
	0x01C8A954 LDR X8, [X8 + 0x4E8]
	0x01C8A958 LDR X0, [X8]
	0x01C8A95C LDR X8, [X0 + 0xB8]
	0x01C8A960 LDR X25, [X8 + 0x10]
	0x01C8A964 CBZ X25, 0x1C8ACEC
	0x01C8A968 LDR X8, [X25]
	0x01C8A96C ADRP X10, 0x22C3000
	0x01C8A970 LDRH W9, [X8 + 0x12E]
	0x01C8A974 LDR X10, [X10 + 0x548]
	0x01C8A978 LDR X1, [X10]
	0x01C8A97C CBZ X9, 0x1C8A9A0
	0x01C8A980 LDR X10, [X8 + 0xB0]
	0x01C8A984 ADD X10, X10, 0x8
	0x01C8A988 LDUR X11, [X10 - 0x8]
	0x01C8A98C CMP X11, X1
	0x01C8A990 B.EQ 0x1C8A9B0
	0x01C8A994 SUBS X9, X9, 0x1
	0x01C8A998 ADD X10, X10, 0x10
	0x01C8A99C B.NE 0x1C8A988
	0x01C8A9A0 MOVZ W2, 0x2
	0x01C8A9A4 MOV X0, X25
	0x01C8A9A8 BL 0x1BB4284
	0x01C8A9AC B 0x1C8A9C0
	0x01C8A9B0 LDR W9, [X10]
	0x01C8A9B4 ADD W9, W9, 0x2
	0x01C8A9B8 ADD X8, X8, W9, 0x4, SXTW
	0x01C8A9BC ADD X0, X8, 0x138
	0x01C8A9C0 LDP X8, X1, [X0]
	0x01C8A9C4 MOV X0, X25
	0x01C8A9C8 BLR X8
	0x01C8A9CC CBZ X0, 0x1C8ACF8
	0x01C8A9D0 LDR W8, [X0 + 0x18]
	0x01C8A9D4 CMP W29, W8
	0x01C8A9D8 B.GE 0x1C8AC38
	0x01C8A9DC ADRP X8, 0x22C3000
	0x01C8A9E0 LDR X8, [X8 + 0x4E8]
	0x01C8A9E4 LDR X0, [X8]
	0x01C8A9E8 LDR W8, [X0 + 0xE0]
	0x01C8A9EC CBNZ W8, 0x1C8AA00
	0x01C8A9F0 BL 0x1B6E8F8
	0x01C8A9F4 ADRP X8, 0x22C3000
	0x01C8A9F8 LDR X8, [X8 + 0x4E8]
	0x01C8A9FC LDR X0, [X8]
	0x01C8AA00 LDR X8, [X0 + 0xB8]
	0x01C8AA04 LDR X25, [X8 + 0x10]
	0x01C8AA08 CBZ X25, 0x1C8AD1C
	0x01C8AA0C LDR X8, [X25]
	0x01C8AA10 ADRP X10, 0x22C3000
	0x01C8AA14 LDRH W9, [X8 + 0x12E]
	0x01C8AA18 LDR X10, [X10 + 0x548]
	0x01C8AA1C LDR X1, [X10]
	0x01C8AA20 CBZ X9, 0x1C8AA44
	0x01C8AA24 LDR X10, [X8 + 0xB0]
	0x01C8AA28 ADD X10, X10, 0x8
	0x01C8AA2C LDUR X11, [X10 - 0x8]
	0x01C8AA30 CMP X11, X1
	0x01C8AA34 B.EQ 0x1C8AA54
	0x01C8AA38 SUBS X9, X9, 0x1
	0x01C8AA3C ADD X10, X10, 0x10
	0x01C8AA40 B.NE 0x1C8AA2C
	0x01C8AA44 MOVZ W2, 0x2
	0x01C8AA48 MOV X0, X25
	0x01C8AA4C BL 0x1BB4284
	0x01C8AA50 B 0x1C8AA64
	0x01C8AA54 LDR W9, [X10]
	0x01C8AA58 ADD W9, W9, 0x2
	0x01C8AA5C ADD X8, X8, W9, 0x4, SXTW
	0x01C8AA60 ADD X0, X8, 0x138
	0x01C8AA64 LDP X8, X1, [X0]
	0x01C8AA68 MOV X0, X25
	0x01C8AA6C BLR X8
	0x01C8AA70 CBZ X0, 0x1C8AD04
	0x01C8AA74 ADRP X8, 0x22C3000
	0x01C8AA78 LDR X8, [X8 + 0x620]
	0x01C8AA7C LDR X2, [X8]
	0x01C8AA80 MOV W1, W29
	0x01C8AA84 BL 0x2E46254
	0x01C8AA88 MOV X25, X0
	0x01C8AA8C CBZ X0, 0x1C8AD10
	0x01C8AA90 LDR X8, [X25]
	0x01C8AA94 ADRP X10, 0x22C3000
	0x01C8AA98 LDRH W9, [X8 + 0x12E]
	0x01C8AA9C LDR X10, [X10 + 0x5F0]
	0x01C8AAA0 LDR X1, [X10]
	0x01C8AAA4 CBZ X9, 0x1C8AAC8
	0x01C8AAA8 LDR X10, [X8 + 0xB0]
	0x01C8AAAC ADD X10, X10, 0x8
	0x01C8AAB0 LDUR X11, [X10 - 0x8]
	0x01C8AAB4 CMP X11, X1
	0x01C8AAB8 B.EQ 0x1C8AAD8
	0x01C8AABC SUBS X9, X9, 0x1
	0x01C8AAC0 ADD X10, X10, 0x10
	0x01C8AAC4 B.NE 0x1C8AAB0
	0x01C8AAC8 MOVZ W2, 0x2
	0x01C8AACC MOV X0, X25
	0x01C8AAD0 BL 0x1BB4284
	0x01C8AAD4 B 0x1C8AAE8
	0x01C8AAD8 LDR W9, [X10]
	0x01C8AADC ADD W9, W9, 0x2
	0x01C8AAE0 ADD X8, X8, W9, 0x4, SXTW
	0x01C8AAE4 ADD X0, X8, 0x138
	0x01C8AAE8 LDP X8, X1, [X0]
	0x01C8AAEC MOV X0, X25
	0x01C8AAF0 BLR X8
	0x01C8AAF4 AND W8, W0, 0xFF
	0x01C8AAF8 CMP W8, 0x6
	0x01C8AAFC B.EQ 0x1C8ABEC
	0x01C8AB00 ADRP X8, 0x22C3000
	0x01C8AB04 LDR X8, [X8 + 0x4E8]
	0x01C8AB08 LDR X0, [X8]
	0x01C8AB0C LDR W8, [X0 + 0xE0]
	0x01C8AB10 CBNZ W8, 0x1C8AB24
	0x01C8AB14 BL 0x1B6E8F8
	0x01C8AB18 ADRP X8, 0x22C3000
	0x01C8AB1C LDR X8, [X8 + 0x4E8]
	0x01C8AB20 LDR X0, [X8]
	0x01C8AB24 LDR X8, [X0 + 0xB8]
	0x01C8AB28 LDR X0, [X8 + 0x70]
	0x01C8AB2C CBZ X0, 0x1C8AD28
	0x01C8AB30 ADRP X8, 0x22C3000
	0x01C8AB34 LDR X8, [X8 + 0x650]
	0x01C8AB38 LDR X1, [X8]
	0x01C8AB3C MOV X2, X31
	0x01C8AB40 BL 0x309C1A4
	0x01C8AB44 ADRP X8, 0x22C3000
	0x01C8AB48 LDR X8, [X8 + 0x4E8]
	0x01C8AB4C LDR X9, [X8]
	0x01C8AB50 LDR X8, [X25]
	0x01C8AB54 LDR X10, [X9 + 0xB8]
	0x01C8AB58 LDRH W9, [X8 + 0x12E]
	0x01C8AB5C LDR X26, [X10 + 0x70]
	0x01C8AB60 ADRP X10, 0x22C3000
	0x01C8AB64 LDR X10, [X10 + 0x5F0]
	0x01C8AB68 LDR X1, [X10]
	0x01C8AB6C CBZ X9, 0x1C8AB90
	0x01C8AB70 LDR X10, [X8 + 0xB0]
	0x01C8AB74 ADD X10, X10, 0x8
	0x01C8AB78 LDUR X11, [X10 - 0x8]
	0x01C8AB7C CMP X11, X1
	0x01C8AB80 B.EQ 0x1C8ABA0
	0x01C8AB84 SUBS X9, X9, 0x1
	0x01C8AB88 ADD X10, X10, 0x10
	0x01C8AB8C B.NE 0x1C8AB78
	0x01C8AB90 MOVZ W2, 0x9
	0x01C8AB94 MOV X0, X25
	0x01C8AB98 BL 0x1BB4284
	0x01C8AB9C B 0x1C8ABB0
	0x01C8ABA0 LDR W9, [X10]
	0x01C8ABA4 ADD W9, W9, 0x9
	0x01C8ABA8 ADD X8, X8, W9, 0x4, SXTW
	0x01C8ABAC ADD X0, X8, 0x138
	0x01C8ABB0 LDP X8, X2, [X0]
	0x01C8ABB4 MOV X0, X25
	0x01C8ABB8 MOV X1, X26
	0x01C8ABBC BLR X8
	0x01C8ABC0 ADRP X8, 0x22C3000
	0x01C8ABC4 LDR X8, [X8 + 0x4E8]
	0x01C8ABC8 LDR X8, [X8]
	0x01C8ABCC LDR X8, [X8 + 0xB8]
	0x01C8ABD0 LDR X0, [X8 + 0x70]
	0x01C8ABD4 CBZ X0, 0x1C8AD34
	0x01C8ABD8 MOV X1, X31
	0x01C8ABDC BL 0x309B3D0
	0x01C8ABE0 MOVZ W8, 0x2329
	0x01C8ABE4 CMP W0, W8
	0x01C8ABE8 B.GE 0x1C8ABF4
	0x01C8ABEC ADD W29, W29, 0x1
	0x01C8ABF0 B 0x1C8A938
	0x01C8ABF4 ADRP X8, 0x22C3000
	0x01C8ABF8 LDR X8, [X8 + 0x4E8]
	0x01C8ABFC LDR X0, [X8]
	0x01C8AC00 LDR W8, [X0 + 0xE0]
	0x01C8AC04 CBNZ W8, 0x1C8AC18
	0x01C8AC08 BL 0x1B6E8F8
	0x01C8AC0C ADRP X8, 0x22C3000
	0x01C8AC10 LDR X8, [X8 + 0x4E8]
	0x01C8AC14 LDR X0, [X8]
	0x01C8AC18 LDR X8, [X0 + 0xB8]
	0x01C8AC1C LDR X0, [X8 + 0x70]
	0x01C8AC20 CBZ X0, 0x1C8ADA0
	0x01C8AC24 ADRP X8, 0x22C3000
	0x01C8AC28 LDR X8, [X8 + 0x638]
	0x01C8AC2C LDR X1, [X8]
	0x01C8AC30 MOV X2, X31
	0x01C8AC34 BL 0x309C1A4
	0x01C8AC38 ADRP X8, 0x22C3000
	0x01C8AC3C LDR X8, [X8 + 0x4E8]
	0x01C8AC40 LDR X0, [X8]
	0x01C8AC44 LDR W8, [X0 + 0xE0]
	0x01C8AC48 CBNZ W8, 0x1C8AC5C
	0x01C8AC4C BL 0x1B6E8F8
	0x01C8AC50 ADRP X8, 0x22C3000
	0x01C8AC54 LDR X8, [X8 + 0x4E8]
	0x01C8AC58 LDR X0, [X8]
	0x01C8AC5C LDR X8, [X0 + 0xB8]
	0x01C8AC60 LDR X25, [X8 + 0x10]
	0x01C8AC64 CBZ X25, 0x1C8AD74
	0x01C8AC68 LDR X8, [X25]
	0x01C8AC6C ADRP X10, 0x22C3000
	0x01C8AC70 LDRH W9, [X8 + 0x12E]
	0x01C8AC74 LDR X10, [X10 + 0x548]
	0x01C8AC78 LDR X1, [X10]
	0x01C8AC7C CBZ X9, 0x1C8ACA0
	0x01C8AC80 LDR X10, [X8 + 0xB0]
	0x01C8AC84 ADD X10, X10, 0x8
	0x01C8AC88 LDUR X11, [X10 - 0x8]
	0x01C8AC8C CMP X11, X1
	0x01C8AC90 B.EQ 0x1C8ACB0
	0x01C8AC94 SUBS X9, X9, 0x1
	0x01C8AC98 ADD X10, X10, 0x10
	0x01C8AC9C B.NE 0x1C8AC88
	0x01C8ACA0 MOVZ W2, 0x2
	0x01C8ACA4 MOV X0, X25
	0x01C8ACA8 BL 0x1BB4284
	0x01C8ACAC B 0x1C8ACC0
	0x01C8ACB0 LDR W9, [X10]
	0x01C8ACB4 ADD W9, W9, 0x2
	0x01C8ACB8 ADD X8, X8, W9, 0x4, SXTW
	0x01C8ACBC ADD X0, X8, 0x138
	0x01C8ACC0 LDP X8, X1, [X0]
	0x01C8ACC4 MOV X0, X25
	0x01C8ACC8 BLR X8
	0x01C8ACCC CBZ X0, 0x1C8AD80
	0x01C8ACD0 LDR W8, [X0 + 0x18]
	0x01C8ACD4 STR W8, [X31 + 0x14]
	0x01C8ACD8 MOV W26, W31
	0x01C8ACDC ADD W24, W24, 0x1
	0x01C8ACE0 CMP W24, W23
	0x01C8ACE4 B.NE 0x1C8A634
	0x01C8ACE8 B 0x1C8AF54
	0x01C8ACEC STR W27, [X31 + 0x4]
	0x01C8ACF0 BL 0x1B6EA1C
	0x01C8ACF4 B 0x1C8B7E0
	0x01C8ACF8 STR W27, [X31 + 0x4]
	0x01C8ACFC BL 0x1B6EA1C
	0x01C8AD00 B 0x1C8B7E0
	0x01C8AD04 STR W27, [X31 + 0x4]
	0x01C8AD08 BL 0x1B6EA1C
	0x01C8AD0C B 0x1C8B7E0
	0x01C8AD10 STR W27, [X31 + 0x4]
	0x01C8AD14 BL 0x1B6EA1C
	0x01C8AD18 B 0x1C8B7E0
	0x01C8AD1C STR W27, [X31 + 0x4]
	0x01C8AD20 BL 0x1B6EA1C
	0x01C8AD24 B 0x1C8B7E0
	0x01C8AD28 STR W27, [X31 + 0x4]
	0x01C8AD2C BL 0x1B6EA1C
	0x01C8AD30 B 0x1C8B7E0
	0x01C8AD34 STR W27, [X31 + 0x4]
	0x01C8AD38 BL 0x1B6EA1C
	0x01C8AD3C B 0x1C8B7E0
	0x01C8AD40 STR W27, [X31 + 0x4]
	0x01C8AD44 BL 0x1B6EA1C
	0x01C8AD48 B 0x1C8B7E0
	0x01C8AD4C STR W27, [X31 + 0x4]
	0x01C8AD50 BL 0x1B6EA1C

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x259A000
	012 Move X22, 0x22C4000
	013 Move W8, [X20+893]
	014 Move X22, [X22+1256]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {67}
	020 Move X0, 0x22C4000
	021 Move X0, [X0+1280]
	022 Call 0x1B6F7F0
	023 Move X0, 0x22C4000
	024 Move X0, [X0+1288]
	025 Call 0x1B6F7F0
	026 Move X0, 0x22C4000
	027 Move X0, [X0+1296]
	028 Call 0x1B6F7F0
	029 Move X0, 0x22C4000
	030 Move X0, [X0+1256]
	031 Call 0x1B6F7F0
	032 Move X0, 0x22C4000
	033 Move X0, [X0+1304]
	034 Call 0x1B6F7F0
	035 Move X0, 0x22C4000
	036 Move X0, [X0+1312]
	037 Call 0x1B6F7F0
	038 Move X0, 0x22C4000
	039 Move X0, [X0+1320]
	040 Call 0x1B6F7F0
	041 Move X0, 0x22C4000
	042 Move X0, [X0+1328]
	043 Call 0x1B6F7F0
	044 Move X0, 0x22C4000
	045 Move X0, [X0+1336]
	046 Call 0x1B6F7F0
	047 Move X0, 0x22C4000
	048 Move X0, [X0+1344]
	049 Call 0x1B6F7F0
	050 Move X0, 0x22C4000
	051 Move X0, [X0+1352]
	052 Call 0x1B6F7F0
	053 Move X0, 0x22C4000
	054 Move X0, [X0+1360]
	055 Call 0x1B6F7F0
	056 Move X0, 0x22C4000
	057 Move X0, [X0+1368]
	058 Call 0x1B6F7F0
	059 Move X0, 0x22C4000
	060 Move X0, [X0+1144]
	061 Call 0x1B6F7F0
	062 Move X0, 0x22C4000
	063 Move X0, [X0+1376]
	064 Call 0x1B6F7F0
	065 Move W8, 1
	066 Move [X20+893], W8
	067 Move X0, [X22]
	068 Move X20, 0x22C4000
	069 Move W8, [X0+224]
	070 Move X20, [X20+1144]
	071 Compare W8, 0
	072 JumpIfNotEqual {75}
	073 Call 0x1B6F8F8
	074 Move X0, [X22]
	075 Move X8, [X20]
	076 Move X9, [X0+184]
	077 Move W10, [X8+224]
	078 Move X20, [X9+8]
	079 Compare W10, 0
	080 JumpIfNotEqual {83}
	081 Move X0, X8
	082 Call 0x1B6F8F8
	083 Move X0, X20
	084 Move X1, X31
	085 Move X2, X31
	086 Call Object.op_Inequality, X0, X1
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {296}
	091 Move X0, [X22]
	092 Move X20, 0x22C4000
	093 Move X21, 0x22C4000
	094 Move W8, [X0+224]
	095 Move X20, [X20+1288]
	096 Move X21, [X21+1376]
	097 Compare W8, 0
	098 JumpIfNotEqual {101}
	099 Call 0x1B6F8F8
	100 Move X0, [X22]
	101 Move X8, [X0+184]
	102 Move [X8+8], X19
	103 Move X0, [X21]
	104 Move X19, [X20]
	105 Move X20, 0x22C4000
	106 Move X21, 0x22C4000
	107 Move W8, [X0+224]
	108 Move X20, [X20+1304]
	109 Move X21, [X21+1280]
	110 Compare W8, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1B6F8F8
	113 Move X0, X19
	114 Move X1, X31
	115 Call Type.GetTypeFromHandle, X0
	116 Move X8, [X20]
	117 Move X20, X0
	118 Move X0, X8
	119 Call 0x1B6FA0C
	120 Move X1, X20
	121 Move X2, X31
	122 Move X19, X0
	123 Call AutoRegisteredTypeIDManifest..ctor, X0, X1
	124 Move X0, [X21]
	125 Call 0x1B6FA0C
	126 Move X1, X19
	127 Move X20, X0
	128 Call AppStateObservationContext..ctor, X0, X1
	129 Move X8, [X22]
	130 Move X8, [X8+184]
	131 Move [X8+16], X20
	132 Compare X20, 0
	133 JumpIfEqual {295}
	134 Move X23, 0x22C4000
	135 Move X8, [X20]
	136 Move X23, [X23+1352]
	137 Move X24, 0x22C4000
	138 NotImplemented "Instruction LDRH not yet implemented."
	139 Move X1, [X23]
	140 Move X24, [X24+1296]
	141 Compare X9, 0
	142 JumpIfEqual {149}
	143 Move X10, [X8+176]
	144 Add X10, X10, 8
	145 NotImplemented "Instruction LDUR not yet implemented."
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Subtract X9, X9, 1
	148 Add X10, X10, 16
	149 Move W2, 1
	150 Move X0, X20
	151 Call 0x1BB5284
	152 Move W9, [X10]
	153 Add W9, W9, 1
	154 Add X8, X8, W9
	155 Add X0, X8, 312
	156 Move X8, [X0]
	157 Move X2, [X0+8]
	158 Move W1, 1
	159 Move X0, X20
	160 Move W25, 1
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Move X8, [X22]
	163 Move X0, [X24]
	164 Move X8, [X8+184]
	165 Move X21, [X8+16]
	166 Call 0x1B6FA0C
	167 Move X1, X21
	168 Move X2, X19
	169 Move X3, X31
	170 Move X4, X31
	171 Move X20, X0
	172 Call StateRoot..ctor, X0, X1, X2, X3
	173 Move X19, 0x259A000
	174 Move W8, [X19+1094]
	175 Compare W8, 0
	176 JumpIfNotEqual {181}
	177 Move X0, 0x22C4000
	178 Move X0, [X0+1256]
	179 Call 0x1B6F7F0
	180 Move [X19+1094], W25
	181 Move X0, [X22]
	182 Move W8, [X0+224]
	183 Compare W8, 0
	184 JumpIfNotEqual {187}
	185 Call 0x1B6F8F8
	186 Move X0, [X22]
	187 Move X8, [X0+184]
	188 Move [X8], X20
	189 Move X8, [X22]
	190 Move X8, [X8+184]
	191 Move X19, [X8+16]
	192 Compare X19, 0
	193 JumpIfEqual {295}
	194 Move X27, 0x22C4000
	195 Move X27, [X27+1312]
	196 Move X8, [X19]
	197 Move X26, 0x22C4000
	198 Move X25, 0x22C4000
	199 Move X21, 0x22C4000
	200 Move X26, [X26+1344]
	201 Move X25, [X25+1320]
	202 Move X21, [X21+1368]
	203 Move X1, [X23]
	204 Move X20, 0x22C4000
	205 Move X24, 0x22C4000
	206 Move X23, 0x22C4000
	207 NotImplemented "Instruction LDRH not yet implemented."
	208 Move X20, [X20+1360]
	209 Move X24, [X24+1336]
	210 Move X23, [X23+1328]
	211 Compare X9, 0
	212 JumpIfEqual {219}
	213 Move X10, [X8+176]
	214 Add X10, X10, 8
	215 NotImplemented "Instruction LDUR not yet implemented."
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Subtract X9, X9, 1
	218 Add X10, X10, 16
	219 Move W2, 1
	220 Move X0, X19
	221 Call 0x1BB5284
	222 Move W9, [X10]
	223 Add W9, W9, 1
	224 Add X8, X8, W9
	225 Add X0, X8, 312
	226 Move X8, [X0]
	227 Move X2, [X0+8]
	228 Move X0, X19
	229 Move W1, W31
	230 NotImplemented "Instruction BLR not yet implemented."
	231 Move X0, [X27]
	232 Call 0x1B6FA0C
	233 Move X1, X31
	234 Move X19, X0
	235 Call CommandScheduler..ctor, X0
	236 Move X8, [X22]
	237 Move X8, [X8+184]
	238 Move [X8+80], X19
	239 Move X0, [X26]
	240 Call 0x1B6FA0C
	241 Move X1, [X25]
	242 Move X19, X0
	243 Call ConcurrentQueue`1<Object>..ctor, X0
	244 Move X8, [X22]
	245 Move X8, [X8+184]
	246 Move [X8+64], X19
	247 Move X0, [X21]
	248 Call 0x1B6FA0C
	249 Move X1, [X20]
	250 Move X19, X0
	251 Call List`1<Object>..ctor, X0
	252 Move X8, [X22]
	253 Move X8, [X8+184]
	254 Move [X8+72], X19
	255 Move X0, [X24]
	256 Call 0x1B6FA0C
	257 Move X1, [X23]
	258 Move X19, X0
	259 Call ConcurrentQueue`1<Object>..ctor, X0
	260 Move X8, [X22]
	261 Move X0, X31
	262 Move X8, [X8+184]
	263 Move [X8+88], X19
	264 Call Thread.get_CurrentThread
	265 Move X8, [X22]
	266 Move X8, [X8+184]
	267 Move [X8+96], X0
	268 Move X0, [X21]
	269 Call 0x1B6FA0C
	270 Move X1, [X20]
	271 Move X19, X0
	272 Call List`1<Object>..ctor, X0
	273 Move X8, [X22]
	274 Move X8, [X8+184]
	275 Move [X8+32], X19
	276 Move X0, [X21]
	277 Call 0x1B6FA0C
	278 Move X1, [X20]
	279 Move X19, X0
	280 Call List`1<Object>..ctor, X0
	281 Move X8, [X22]
	282 Move X22, [X31+48]
	283 Move X21, [X31+56]
	284 Move X24, [X31+32]
	285 Move X23, [X31+40]
	286 Move X26, [X31+16]
	287 Move X25, [X31+24]
	288 Move X8, [X8+184]
	289 Move [X8+40], X19
	290 Move X20, [X31+64]
	291 Move X19, [X31+72]
	292 Move X30, [X31+80]
	293 Move X27, [X31+88]
	294 Return 
	295 Call 0x1B6FA1C
	296 Move X0, 0x22C4000
	297 Move X0, [X0+1144]
	298 Call 0x1B6F804
	299 Call 0x18F54F0
	300 Move X0, X19
	301 Move X1, X31
	302 Call Object.Destroy, X0
	303 Move X0, 0x22C4000
	304 Move X0, [X0+1168]
	305 Call 0x1B6F804
	306 Call 0x1B6FA0C
	307 Move X19, X0
	308 Move X0, 0x22C4000
	309 Move X0, [X0+1384]
	310 Call 0x1B6F804
	311 Move X1, X0
	312 Move X0, X19
	313 Move X2, X31
	314 Call InvalidOperationException..ctor, X0, X1
	315 Move X0, 0x22C4000
	316 Move X0, [X0+1392]
	317 Call 0x1B6F804
	318 Move X1, X0
	319 Move X0, X19
	320 Call 0x1B6F8E8

Method: System.Void OnDestroy()

Disassembly:
	0x01C8ADF8 B 0x1C8AF44
	0x01C8ADFC B 0x1C8AE3C
	0x01C8AE00 B 0x1C8AE38
	0x01C8AE04 B 0x1C8AE3C
	0x01C8AE08 B 0x1C8AE38
	0x01C8AE0C B 0x1C8AE38
	0x01C8AE10 B 0x1C8AE38
	0x01C8AE14 B 0x1C8AE38
	0x01C8AE18 B 0x1C8AE3C
	0x01C8AE1C B 0x1C8AE3C
	0x01C8AE20 B 0x1C8AE3C
	0x01C8AE24 B 0x1C8AE38
	0x01C8AE28 B 0x1C8AE3C
	0x01C8AE2C B 0x1C8AE3C
	0x01C8AE30 B 0x1C8AE38
	0x01C8AE34 B 0x1C8AE38
	0x01C8AE38 STR W27, [X31 + 0x4]
	0x01C8AE3C MOV X29, X0
	0x01C8AE40 MOV W26, W31
	0x01C8AE44 CMP W1, 0x1
	0x01C8AE48 B.NE 0x1C8B93C
	0x01C8AE4C MOV X0, X29

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x259A000
	005 Move X19, 0x22C4000
	006 Move W8, [X20+894]
	007 Move X19, [X19+1256]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22C4000
	013 Move X0, [X0+1256]
	014 Call 0x1B6F7F0
	015 Move W8, 1
	016 Move [X20+894], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1B6F8F8
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move [X8+8], X31
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void Update()

Disassembly:
	0x01C8AE50 BL 0x3D19840
	0x01C8AE54 MOV X25, X0
	0x01C8AE58 ADRP X0, 0x22C3000
	0x01C8AE5C LDR X0, [X0 + 0x670]
	0x01C8AE60 BL 0x1B6E804
	0x01C8AE64 LDR X8, [X25]
	0x01C8AE68 LDR X1, [X8]
	0x01C8AE6C BL 0x1B6ED6C
	0x01C8AE70 TBZ X0, 0x0, 0x1C8B7E0
	0x01C8AE74 LDR X20, [X25]
	0x01C8AE78 BL 0x3D19850
	0x01C8AE7C ADRP X0, 0x22C3000
	0x01C8AE80 LDR X0, [X0 + 0x4E8]
	0x01C8AE84 BL 0x1B6E804
	0x01C8AE88 LDR W8, [X0 + 0xE0]
	0x01C8AE8C CBNZ W8, 0x1C8AE94
	0x01C8AE90 BL 0x1B6E8F8
	0x01C8AE94 ADRP X0, 0x22C3000
	0x01C8AE98 LDR X0, [X0 + 0x4E8]
	0x01C8AE9C BL 0x1B6E804

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x259A000
	005 Move X20, 0x22C4000
	006 Move W8, [X19+895]
	007 Move X20, [X20+1256]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22C4000
	013 Move X0, [X0+1256]
	014 Call 0x1B6F7F0
	015 Move W8, 1
	016 Move [X19+895], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1B6F8F8
	022 Call App.ExecuteScheduledActions
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Call App.ExecuteScheduledCommands
	027 Return 

Method: System.Void ExecuteScheduledActions()

Disassembly:
	0x01C8AEA0 LDR X8, [X0 + 0xB8]
	0x01C8AEA4 LDR X25, [X8 + 0x30]
	0x01C8AEA8 ADRP X0, 0x22C3000
	0x01C8AEAC LDR X0, [X0 + 0x678]
	0x01C8AEB0 BL 0x1B6E804
	0x01C8AEB4 BL 0x1B6EA0C
	0x01C8AEB8 MOV X29, X0
	0x01C8AEBC MOV X1, X31
	0x01C8AEC0 BL 0x32276F8
	0x01C8AEC4 CBZ X29, 0x1C8B804
	0x01C8AEC8 STP X28, X20, [X29 + 0x10]
	0x01C8AECC CBZ X25, 0x1C8B808
	0x01C8AED0 ADRP X0, 0x22C3000
	0x01C8AED4 LDR X0, [X0 + 0x680]
	0x01C8AED8 LDR W27, [X31 + 0x4]
	0x01C8AEDC BL 0x1B6E804
	0x01C8AEE0 LDR W9, [X25 + 0x1C]
	0x01C8AEE4 LDR X8, [X25 + 0x10]
	0x01C8AEE8 ADD W9, W9, 0x1
	0x01C8AEEC STR W9, [X25 + 0x1C]
	0x01C8AEF0 CBZ X8, 0x1C8B80C
	0x01C8AEF4 LDRSW X9, [X25 + 0x18]
	0x01C8AEF8 LDR W10, [X8 + 0x18]
	0x01C8AEFC CMP W9, W10
	0x01C8AF00 B.CS 0x1C8AF20
	0x01C8AF04 LDR W27, [X31 + 0x4]
	0x01C8AF08 LDR W20, [X31 + 0xC]
	0x01C8AF0C ADD W10, W9, 0x1
	0x01C8AF10 ADD X8, X8, X9, 0x3, LSL
	0x01C8AF14 STR W10, [X25 + 0x18]
	0x01C8AF18 STR X29, [X8 + 0x20]
	0x01C8AF1C B 0x1C8ACDC
	0x01C8AF20 LDR X8, [X0 + 0x20]
	0x01C8AF24 LDR X8, [X8 + 0xC0]
	0x01C8AF28 LDR X2, [X8 + 0x70]
	0x01C8AF2C LDR W27, [X31 + 0x4]
	0x01C8AF30 MOV X0, X25
	0x01C8AF34 MOV X1, X29
	0x01C8AF38 BL 0x2E46518
	0x01C8AF3C LDR W20, [X31 + 0xC]
	0x01C8AF40 B 0x1C8ACDC
	0x01C8AF44 STR W27, [X31 + 0x4]
	0x01C8AF48 MOV X29, X0
	0x01C8AF4C B 0x1C8AE44
	0x01C8AF50 MOVZ W19, 0x1
	0x01C8AF54 ADRP X8, 0x22C3000
	0x01C8AF58 LDR X8, [X8 + 0x4E8]
	0x01C8AF5C LDR X0, [X8]
	0x01C8AF60 LDR W8, [X0 + 0xE0]
	0x01C8AF64 CBZ W8, 0x1C8AF74
	0x01C8AF68 LDR W20, [X31 + 0x10]
	0x01C8AF6C LDR W21, [X31 + 0x8]
	0x01C8AF70 B 0x1C8AF8C
	0x01C8AF74 BL 0x1B6E8F8
	0x01C8AF78 LDR W20, [X31 + 0x10]
	0x01C8AF7C LDR W21, [X31 + 0x8]
	0x01C8AF80 ADRP X8, 0x22C3000
	0x01C8AF84 LDR X8, [X8 + 0x4E8]
	0x01C8AF88 LDR X0, [X8]
	0x01C8AF8C LDR X8, [X0 + 0xB8]
	0x01C8AF90 LDR X23, [X8 + 0x10]
	0x01C8AF94 STRB W31, [X8 + 0x18]
	0x01C8AF98 CBZ X23, 0x1C8B7A4
	0x01C8AF9C LDR X8, [X23]
	0x01C8AFA0 ADRP X10, 0x22C3000
	0x01C8AFA4 LDRH W9, [X8 + 0x12E]
	0x01C8AFA8 LDR X10, [X10 + 0x548]
	0x01C8AFAC LDR X1, [X10]
	0x01C8AFB0 CBZ X9, 0x1C8AFD4
	0x01C8AFB4 LDR X10, [X8 + 0xB0]
	0x01C8AFB8 ADD X10, X10, 0x8
	0x01C8AFBC LDUR X11, [X10 - 0x8]
	0x01C8AFC0 CMP X11, X1
	0x01C8AFC4 B.EQ 0x1C8AFE4
	0x01C8AFC8 SUBS X9, X9, 0x1
	0x01C8AFCC ADD X10, X10, 0x10
	0x01C8AFD0 B.NE 0x1C8AFBC
	0x01C8AFD4 MOVZ W2, 0x1
	0x01C8AFD8 MOV X0, X23
	0x01C8AFDC BL 0x1BB4284
	0x01C8AFE0 B 0x1C8AFF4
	0x01C8AFE4 LDR W9, [X10]
	0x01C8AFE8 ADD W9, W9, 0x1
	0x01C8AFEC ADD X8, X8, W9, 0x4, SXTW
	0x01C8AFF0 ADD X0, X8, 0x138
	0x01C8AFF4 LDP X8, X2, [X0]
	0x01C8AFF8 MOV X0, X23
	0x01C8AFFC MOV W1, W31
	0x01C8B000 BLR X8
	0x01C8B004 EOR W24, W19, 0x1
	0x01C8B008 ADRP X19, 0x22C2000
	0x01C8B00C LDR X19, [X19 + 0x4E8]
	0x01C8B010 CBZ W21, 0x1C8B178
	0x01C8B014 TBZ X24, 0x0, 0x1C8B178
	0x01C8B018 LDR X0, [X19]
	0x01C8B01C LDR W8, [X0 + 0xE0]
	0x01C8B020 CBNZ W8, 0x1C8B028
	0x01C8B024 BL 0x1B6E8F8
	0x01C8B028 MOV X0, X22
	0x01C8B02C BL 0x1C8BEFC
	0x01C8B030 LDR X8, [X19]
	0x01C8B034 LDR X8, [X8 + 0xB8]
	0x01C8B038 LDR X23, [X8 + 0x10]
	0x01C8B03C CBZ X23, 0x1C8B7B8
	0x01C8B040 LDR X8, [X23]
	0x01C8B044 ADRP X10, 0x22C2000
	0x01C8B048 MOV X22, X0
	0x01C8B04C LDRH W9, [X8 + 0x12E]
	0x01C8B050 LDR X10, [X10 + 0x548]
	0x01C8B054 LDR X1, [X10]
	0x01C8B058 CBZ X9, 0x1C8B07C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x259A000
	007 Move X20, 0x22C4000
	008 Move W8, [X19+896]
	009 Move X20, [X20+1256]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x22C4000
	015 Move X0, [X0+1256]
	016 Call 0x1B6F7F0
	017 Move X0, 0x22C4000
	018 Move X0, [X0+1416]
	019 Call 0x1B6F7F0
	020 Move X0, 0x22C4000
	021 Move X0, [X0+1424]
	022 Call 0x1B6F7F0
	023 Move X0, 0x22C4000
	024 Move X0, [X0+1432]
	025 Call 0x1B6F7F0
	026 Move X0, 0x22C4000
	027 Move X0, [X0+1440]
	028 Call 0x1B6F7F0
	029 Move W8, 1
	030 Move [X19+896], W8
	031 Move X0, [X20]
	032 Move [X31+8], X31
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1B6F8F8
	037 Move X0, [X20]
	038 Move X8, [X0+184]
	039 Move X0, [X8+64]
	040 Compare X0, 0
	041 JumpIfEqual {127}
	042 Move X8, 0x22C4000
	043 Move X8, [X8+1424]
	044 Move X1, [X8]
	045 Call ConcurrentQueue`1<Object>.get_Count, X0
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X0, [X20]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {53}
	051 Call 0x1B6F8F8
	052 Move X0, [X20]
	053 Move X8, [X0+184]
	054 Move X8, [X8+72]
	055 Compare X8, 0
	056 JumpIfEqual {127}
	057 Move W2, [X8+24]
	058 Move W9, [X8+28]
	059 Add W9, W9, 1
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move [X8+24], W31
	062 Move [X8+28], W9
	063 Move X0, [X8+16]
	064 Move W1, W31
	065 Move X3, X31
	066 Call Array.Clear, X0, X1, X2
	067 Move X21, 0x22C4000
	068 Move X22, 0x22C4000
	069 Move X21, [X21+1416]
	070 Move X22, [X22+1432]
	071 Move X0, [X20]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {77}
	075 Call 0x1B6F8F8
	076 Move X0, [X20]
	077 Move X8, [X0+184]
	078 Move X0, [X8+64]
	079 Compare X0, 0
	080 JumpIfEqual {127}
	081 Move X2, [X21]
	082 Add X1, X31, 8
	083 Call ConcurrentQueue`1<Object>.TryDequeue, X0, X1
	084 Move X8, [X20]
	085 Move W19, W0
	086 Move W9, [X8+224]
	087 Compare W9, 0
	088 JumpIfNotEqual {92}
	089 Move X0, X8
	090 Call 0x1B6F8F8
	091 Move X8, [X20]
	092 Move X8, [X8+184]
	093 Move TEMP, X19
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {119}
	097 Move X0, [X8+72]
	098 Compare X0, 0
	099 JumpIfEqual {127}
	100 Move W10, [X0+28]
	101 Move X1, [X31+8]
	102 Move X8, [X0+16]
	103 Move X9, [X22]
	104 Add W10, W10, 1
	105 Move [X0+28], W10
	106 Compare X8, 0
	107 JumpIfEqual {127}
	108 NotImplemented "Instruction LDRSW not yet implemented."
	109 Move W11, [X8+24]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Add W9, W10, 1
	112 Add X8, X8, X10
	113 Move [X0+24], W9
	114 Move [X8+32], X1
	115 Move X8, [X9+32]
	116 Move X8, [X8+192]
	117 Move X2, [X8+112]
	118 Call List`1<Object>.AddWithResize, X0, X1
	119 Move X0, [X8+72]
	120 Call App.ExecuteAction, X0
	121 Move X20, [X31+32]
	122 Move X19, [X31+40]
	123 Move X22, [X31+16]
	124 Move X21, [X31+24]
	125 Move X30, [X31+48]
	126 Return 
	127 Call 0x1B6FA1C

Method: System.Void ExecuteScheduledCommands()

Disassembly:
	0x01C8B05C LDR X10, [X8 + 0xB0]
	0x01C8B060 ADD X10, X10, 0x8
	0x01C8B064 LDUR X11, [X10 - 0x8]
	0x01C8B068 CMP X11, X1
	0x01C8B06C B.EQ 0x1C8B08C
	0x01C8B070 SUBS X9, X9, 0x1
	0x01C8B074 ADD X10, X10, 0x10
	0x01C8B078 B.NE 0x1C8B064
	0x01C8B07C MOVZ W2, 0x2
	0x01C8B080 MOV X0, X23
	0x01C8B084 BL 0x1BB4284
	0x01C8B088 B 0x1C8B09C
	0x01C8B08C LDR W9, [X10]
	0x01C8B090 ADD W9, W9, 0x2
	0x01C8B094 ADD X8, X8, W9, 0x4, SXTW
	0x01C8B098 ADD X0, X8, 0x138
	0x01C8B09C LDP X8, X1, [X0]
	0x01C8B0A0 MOV X0, X23
	0x01C8B0A4 BLR X8
	0x01C8B0A8 CBZ X0, 0x1C8B7C0
	0x01C8B0AC ADRP X9, 0x22C2000
	0x01C8B0B0 LDR W8, [X0 + 0x18]
	0x01C8B0B4 LDR X9, [X9 + 0x5F8]
	0x01C8B0B8 STR W8, [X31 + 0x18]
	0x01C8B0BC LDR X0, [X9]
	0x01C8B0C0 ADD X1, X31, 0x18
	0x01C8B0C4 BL 0x1B6E900
	0x01C8B0C8 ADRP X8, 0x22C2000
	0x01C8B0CC LDR X8, [X8 + 0x660]
	0x01C8B0D0 MOV X2, X0
	0x01C8B0D4 LDR X0, [X8]
	0x01C8B0D8 MOV X1, X22
	0x01C8B0DC MOV X3, X31
	0x01C8B0E0 BL 0x3090A1C
	0x01C8B0E4 LDR X8, [X19]
	0x01C8B0E8 MOV X22, X0
	0x01C8B0EC LDR X8, [X8 + 0xB8]
	0x01C8B0F0 LDR X0, [X8 + 0x70]
	0x01C8B0F4 CBZ X0, 0x1C8B7C4
	0x01C8B0F8 LDR X8, [X0]
	0x01C8B0FC LDP X9, X1, [X8 + 0x168]
	0x01C8B100 BLR X9
	0x01C8B104 MOV X1, X0
	0x01C8B108 MOV X0, X22
	0x01C8B10C MOV X2, X31
	0x01C8B110 BL 0x3084780
	0x01C8B114 ADRP X8, 0x22C2000
	0x01C8B118 LDR X8, [X8 + 0x628]
	0x01C8B11C MOV X22, X0
	0x01C8B120 LDR X0, [X8]
	0x01C8B124 LDR W8, [X0 + 0xE0]
	0x01C8B128 CBNZ W8, 0x1C8B130
	0x01C8B12C BL 0x1B6E8F8
	0x01C8B130 ADRP X8, 0x22C2000
	0x01C8B134 ADRP X9, 0x22C2000
	0x01C8B138 LDR X8, [X8 + 0x658]
	0x01C8B13C LDR X9, [X9 + 0x648]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x2599000
	007 Move W8, [X19+897]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x22C3000
	013 Move X0, [X0+1256]
	014 Call 0x1B6F7F0
	015 Move X0, 0x22C3000
	016 Move X0, [X0+1448]
	017 Call 0x1B6F7F0
	018 Move W8, 1
	019 Move [X19+897], W8
	020 Move X21, 0x22C3000
	021 Move X22, 0x22C3000
	022 Move X21, [X21+1256]
	023 Move X22, [X22+1448]
	024 Move [X31+8], X31
	025 Move X0, [X21]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1B6F8F8
	030 Move X0, [X21]
	031 Move X8, [X0+184]
	032 Move X0, [X8+88]
	033 Compare X0, 0
	034 JumpIfEqual {71}
	035 Move X2, [X22]
	036 Add X1, X31, 8
	037 Call ConcurrentQueue`1<Object>.TryDequeue, X0, X1
	038 Move X8, [X21]
	039 Move W20, W0
	040 Move W9, [X8+224]
	041 Compare W9, 0
	042 JumpIfNotEqual {46}
	043 Move X0, X8
	044 Call 0x1B6F8F8
	045 Move X8, [X21]
	046 Move X8, [X8+184]
	047 Move X19, [X8+80]
	048 Move TEMP, X20
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {58}
	052 Compare X19, 0
	053 JumpIfEqual {71}
	054 Move X1, [X31+8]
	055 Move X0, X19
	056 Move X2, X31
	057 Call CommandScheduler.Add, X0, X1
	058 Move X0, X31
	059 Call Time.get_deltaTime
	060 Compare X19, 0
	061 JumpIfEqual {71}
	062 Move X0, X19
	063 Move X1, X31
	064 Call CommandScheduler.Update, X0, V0
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X30, [X31+48]
	070 Return 
	071 Call 0x1B6FA1C

Method: System.Void ExecuteAction(AnimalCompany.BaseAction[] actions)

Disassembly:
	0x01C8B19C CBZ X8, 0x1C8B7A8
	0x01C8B1A0 LDR W8, [X8 + 0x18]
	0x01C8B1A4 CMP W8, 0x1
	0x01C8B1A8 B.LT 0x1C8B360
	0x01C8B1AC ADRP X8, 0x22C2000
	0x01C8B1B0 LDR X8, [X8 + 0x628]
	0x01C8B1B4 LDR X0, [X8]
	0x01C8B1B8 LDR W8, [X0 + 0xE0]
	0x01C8B1BC CBNZ W8, 0x1C8B1C4
	0x01C8B1C0 BL 0x1B6E8F8
	0x01C8B1C4 MOVZ W0, 0x1
	0x01C8B1C8 MOVZ W1, 0x100
	0x01C8B1CC MOV X2, X31
	0x01C8B1D0 BL 0x342AC84
	0x01C8B1D4 TBZ X0, 0x0, 0x1C8B360
	0x01C8B1D8 ADRP X8, 0x22C2000
	0x01C8B1DC LDR X8, [X8 + 0x4E8]
	0x01C8B1E0 LDR X0, [X8]
	0x01C8B1E4 LDR W8, [X0 + 0xE0]
	0x01C8B1E8 CBNZ W8, 0x1C8B1FC
	0x01C8B1EC BL 0x1B6E8F8
	0x01C8B1F0 ADRP X8, 0x22C2000
	0x01C8B1F4 LDR X8, [X8 + 0x4E8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2599000
	006 Move X21, 0x22C3000
	007 Move W8, [X20+898]
	008 Move X21, [X21+1256]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22C3000
	015 Move X0, [X0+1256]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X20+898], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1B6F8F8
	024 Move X1, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W0, 1
	028 Move W2, 1
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]

Method: System.Void ExecuteActionSilently(AnimalCompany.BaseAction[] actions)

Disassembly:
	0x01C8CA5C ADRP X8, 0x22C1000
	0x01C8CA60 LDR X8, [X8 + 0x628]
	0x01C8CA64 LDR X0, [X8]
	0x01C8CA68 LDR W8, [X0 + 0xE0]
	0x01C8CA6C CBNZ W8, 0x1C8CA74
	0x01C8CA70 BL 0x1B6E8F8
	0x01C8CA74 MOVZ W0, 0x5
	0x01C8CA78 MOVZ W1, 0x200
	0x01C8CA7C MOV X2, X31
	0x01C8CA80 BL 0x342AC84
	0x01C8CA84 TBZ X0, 0x0, 0x1C8CB4C
	0x01C8CA88 MOV X0, X19
	0x01C8CA8C MOV X1, X31
	0x01C8CA90 BL 0x3426074
	0x01C8CA94 ADRP X8, 0x22C1000
	0x01C8CA98 LDR X8, [X8 + 0x740]
	0x01C8CA9C MOV X1, X0
	0x01C8CAA0 MOV X2, X31
	0x01C8CAA4 LDR X8, [X8]
	0x01C8CAA8 MOV X0, X8
	0x01C8CAAC BL 0x3084780
	0x01C8CAB0 ADRP X8, 0x22C1000
	0x01C8CAB4 LDR X8, [X8 + 0x5C0]
	0x01C8CAB8 MOV X20, X0
	0x01C8CABC LDR X8, [X8]
	0x01C8CAC0 MOV X0, X8
	0x01C8CAC4 BL 0x1B6EA0C
	0x01C8CAC8 ADRP X8, 0x22C1000
	0x01C8CACC LDR X8, [X8 + 0x5B8]
	0x01C8CAD0 MOV X21, X0
	0x01C8CAD4 LDR X1, [X8]
	0x01C8CAD8 BL 0x28F9A14
	0x01C8CADC CBZ X21, 0x1C8CCF4
	0x01C8CAE0 ADRP X8, 0x22C1000
	0x01C8CAE4 ADRP X9, 0x22C1000
	0x01C8CAE8 LDR X8, [X8 + 0x750]
	0x01C8CAEC LDR X9, [X9 + 0x5B0]
	0x01C8CAF0 MOV X0, X21
	0x01C8CAF4 MOV X2, X19
	0x01C8CAF8 LDR X1, [X8]
	0x01C8CAFC LDR X3, [X9]
	0x01C8CB00 BL 0x28FA2A8
	0x01C8CB04 ADRP X8, 0x22C1000
	0x01C8CB08 LDR X8, [X8 + 0x628]
	0x01C8CB0C LDR X0, [X8]
	0x01C8CB10 LDR W8, [X0 + 0xE0]
	0x01C8CB14 CBNZ W8, 0x1C8CB1C
	0x01C8CB18 BL 0x1B6E8F8
	0x01C8CB1C ADRP X8, 0x22C1000
	0x01C8CB20 ADRP X9, 0x22C1000
	0x01C8CB24 LDR X8, [X8 + 0x658]
	0x01C8CB28 LDR X9, [X9 + 0x748]
	0x01C8CB2C MOVZ W0, 0x200
	0x01C8CB30 MOVZ W5, 0x1AA
	0x01C8CB34 LDR X3, [X8]
	0x01C8CB38 LDR X4, [X9]
	0x01C8CB3C MOV X1, X20
	0x01C8CB40 MOV X2, X21
	0x01C8CB44 MOV X6, X31
	0x01C8CB48 BL 0x342B368
	0x01C8CB4C FMOV S0, W31
	0x01C8CB50 MOV X0, X19
	0x01C8CB54 MOV X1, X31
	0x01C8CB58 BL 0x3423D00
	0x01C8CB5C TBZ X0, 0x0, 0x1C8CBC4
	0x01C8CB60 ADRP X19, 0x22C1000
	0x01C8CB64 LDR X19, [X19 + 0x738]
	0x01C8CB68 LDR X0, [X19]
	0x01C8CB6C LDR W8, [X0 + 0xE0]
	0x01C8CB70 CBNZ W8, 0x1C8CB78
	0x01C8CB74 BL 0x1B6E8F8
	0x01C8CB78 ADRP X20, 0x2597000
	0x01C8CB7C LDRB W8, [X20 + 0x447]
	0x01C8CB80 CBNZ W8, 0x1C8CB98
	0x01C8CB84 ADRP X0, 0x22C1000
	0x01C8CB88 LDR X0, [X0 + 0x738]
	0x01C8CB8C BL 0x1B6E7F0
	0x01C8CB90 MOVZ W8, 0x1
	0x01C8CB94 STRB W8, [X20 + 0x447]
	0x01C8CB98 LDR X0, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2598000
	006 Move X20, 0x22C2000
	007 Move W8, [X21+899]
	008 Move X20, [X20+1256]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x22C2000
	015 Move X0, [X0+1256]
	016 Call 0x1B6F7F0
	017 Move X0, 0x22C2000
	018 Move X0, [X0+1728]
	019 Call 0x1B6F7F0
	020 Move W8, 1
	021 Move [X21+899], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1B6F8F8
	027 Move X21, 0x2598000
	028 Move W8, [X21+1091]
	029 Compare W8, 0
	030 JumpIfNotEqual {36}
	031 Move X0, 0x22C2000
	032 Move X0, [X0+1256]
	033 Call 0x1B6F7F0
	034 Move W8, 1
	035 Move [X21+1091], W8
	036 Move X0, [X20]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1B6F8F8
	041 Move X0, [X20]
	042 Move X8, [X0+184]
	043 Move X8, [X8]
	044 Compare X8, 0
	045 JumpIfEqual {99}
	046 Move X8, [X8+184]
	047 Compare X8, 0
	048 JumpIfEqual {99}
	049 Move X8, [X8+72]
	050 Compare X8, 0
	051 JumpIfEqual {99}
	052 Move W8, [X8+76]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move W20, 1
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1B6F8F8
	059 Move W8, [X21+1091]
	060 Compare W8, 0
	061 JumpIfNotEqual {67}
	062 Move X0, 0x22C2000
	063 Move X0, [X0+1256]
	064 Call 0x1B6F7F0
	065 Move W8, 1
	066 Move [X21+1091], W8
	067 Move X0, [X20]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {73}
	071 Call 0x1B6F8F8
	072 Move X0, [X20]
	073 Move X8, [X0+184]
	074 Move X8, [X8]
	075 Compare X8, 0
	076 JumpIfEqual {99}
	077 Move X8, [X8+184]
	078 Compare X8, 0
	079 JumpIfEqual {99}
	080 Move X8, [X8+88]
	081 Compare X8, 0
	082 JumpIfEqual {99}
	083 Move W8, [X8+76]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 NotImplemented "Instruction CSET not yet implemented."
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1B6F8F8
	090 Move W0, W20
	091 Move X1, X19
	092 Move X20, [X31+16]
	093 Move X19, [X31+24]
	094 Move W2, 1
	095 Move X30, [X31+32]
	096 Move X21, [X31+40]
	097 Call App.ExecuteAction, X0, X1, X2
	098 Return 
	099 Call 0x1B6FA1C

Method: System.Void ExecuteAction(System.Collections.Generic.IList`1<AnimalCompany.BaseAction> actions)

Disassembly:
	0x01C8B140 LDR X3, [X8]
	0x01C8B144 LDR X4, [X9]
	0x01C8B148 MOVZ W0, 0x100
	0x01C8B14C MOVZ W5, 0x11E
	0x01C8B150 MOV X1, X22
	0x01C8B154 MOV X2, X31
	0x01C8B158 MOV X6, X31
	0x01C8B15C BL 0x342B368
	0x01C8B160 LDR X8, [X19]
	0x01C8B164 LDR X8, [X8 + 0xB8]
	0x01C8B168 LDR X0, [X8 + 0x70]
	0x01C8B16C CBZ X0, 0x1C8B7CC
	0x01C8B170 MOV X1, X31
	0x01C8B174 BL 0x309B884
	0x01C8B178 LDR X0, [X19]
	0x01C8B17C LDR W8, [X0 + 0xE0]
	0x01C8B180 CBNZ W8, 0x1C8B194
	0x01C8B184 BL 0x1B6E8F8
	0x01C8B188 ADRP X8, 0x22C2000
	0x01C8B18C LDR X8, [X8 + 0x4E8]
	0x01C8B190 LDR X0, [X8]
	0x01C8B194 LDR X8, [X0 + 0xB8]
	0x01C8B198 LDR X8, [X8 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2599000
	006 Move X21, 0x22C3000
	007 Move W8, [X20+900]
	008 Move X21, [X21+1256]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22C3000
	015 Move X0, [X0+1256]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X20+900], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1B6F8F8
	024 Move X1, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W0, 1
	028 Move W2, 1
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call App.ExecuteAction, X0, X1, X2
	032 Return 

Method: System.Void ExecuteActionSilently(System.Collections.Generic.IList`1<AnimalCompany.BaseAction> actions)

Disassembly:
	0x01C8CB9C LDR W8, [X0 + 0xE0]
	0x01C8CBA0 CBNZ W8, 0x1C8CBAC
	0x01C8CBA4 BL 0x1B6E8F8
	0x01C8CBA8 LDR X0, [X19]
	0x01C8CBAC LDR X8, [X0 + 0xB8]
	0x01C8CBB0 LDP X20, X19, [X31 + 0x20]
	0x01C8CBB4 LDP X22, X21, [X31 + 0x10]
	0x01C8CBB8 LDR X0, [X8]
	0x01C8CBBC LDR X30, [X31], #0x30
	0x01C8CBC0 RET
	0x01C8CBC4 LDR X0, [X22]
	0x01C8CBC8 LDR W8, [X0 + 0xE0]
	0x01C8CBCC CBNZ W8, 0x1C8CBD8
	0x01C8CBD0 BL 0x1B6E8F8
	0x01C8CBD4 LDR X0, [X22]
	0x01C8CBD8 LDR X8, [X0 + 0xB8]
	0x01C8CBDC LDR X0, [X8 + 0x50]
	0x01C8CBE0 CBZ X0, 0x1C8CCF4
	0x01C8CBE4 MOV X1, X19
	0x01C8CBE8 LDP X20, X19, [X31 + 0x20]
	0x01C8CBEC LDP X22, X21, [X31 + 0x10]
	0x01C8CBF0 MOV X2, X31
	0x01C8CBF4 LDR X30, [X31], #0x30
	0x01C8CBF8 B 0x3429B18
	0x01C8CBFC ADRP X0, 0x22C1000
	0x01C8CC00 LDR X0, [X0 + 0x670]
	0x01C8CC04 BL 0x1B6E804
	0x01C8CC08 BL 0x1B6EA0C
	0x01C8CC0C MOV X20, X0
	0x01C8CC10 ADRP X0, 0x22C1000
	0x01C8CC14 LDR X0, [X0 + 0x758]
	0x01C8CC18 BL 0x1B6E804
	0x01C8CC1C MOV X1, X0
	0x01C8CC20 MOV X0, X20
	0x01C8CC24 MOV X2, X31
	0x01C8CC28 BL 0x321C5DC
	0x01C8CC2C ADRP X0, 0x22C1000
	0x01C8CC30 LDR X0, [X0 + 0x5C0]
	0x01C8CC34 BL 0x1B6E804
	0x01C8CC38 BL 0x1B6EA0C
	0x01C8CC3C MOV X21, X0
	0x01C8CC40 ADRP X0, 0x22C1000
	0x01C8CC44 LDR X0, [X0 + 0x5B8]
	0x01C8CC48 BL 0x1B6E804
	0x01C8CC4C MOV X1, X0
	0x01C8CC50 MOV X0, X21
	0x01C8CC54 BL 0x18F4624
	0x01C8CC58 MOV X0, X21
	0x01C8CC5C BL 0x18F44E0
	0x01C8CC60 ADRP X0, 0x22C1000
	0x01C8CC64 LDR X0, [X0 + 0x750]
	0x01C8CC68 BL 0x1B6E804
	0x01C8CC6C MOV X22, X0
	0x01C8CC70 ADRP X0, 0x22C1000
	0x01C8CC74 LDR X0, [X0 + 0x5B0]
	0x01C8CC78 BL 0x1B6E804
	0x01C8CC7C MOV X3, X0
	0x01C8CC80 MOV X0, X21
	0x01C8CC84 MOV X1, X22
	0x01C8CC88 MOV X2, X19
	0x01C8CC8C BL 0x18F4628
	0x01C8CC90 ADRP X0, 0x22C1000
	0x01C8CC94 LDR X0, [X0 + 0x628]
	0x01C8CC98 BL 0x1B6E804
	0x01C8CC9C BL 0x18F44F0
	0x01C8CCA0 ADRP X0, 0x22C1000
	0x01C8CCA4 LDR X0, [X0 + 0x658]
	0x01C8CCA8 BL 0x1B6E804
	0x01C8CCAC MOV X19, X0
	0x01C8CCB0 ADRP X0, 0x22C1000
	0x01C8CCB4 LDR X0, [X0 + 0x748]
	0x01C8CCB8 BL 0x1B6E804
	0x01C8CCBC MOV X4, X0
	0x01C8CCC0 MOVZ W0, 0x100
	0x01C8CCC4 MOVZ W5, 0x19E
	0x01C8CCC8 MOV X1, X20
	0x01C8CCCC MOV X2, X21
	0x01C8CCD0 MOV X3, X19
	0x01C8CCD4 MOV X6, X31
	0x01C8CCD8 BL 0x342B734

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2598000
	006 Move X20, 0x22C2000
	007 Move W8, [X21+901]
	008 Move X20, [X20+1256]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x22C2000
	015 Move X0, [X0+1256]
	016 Call 0x1B6F7F0
	017 Move X0, 0x22C2000
	018 Move X0, [X0+1728]
	019 Call 0x1B6F7F0
	020 Move W8, 1
	021 Move [X21+901], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1B6F8F8
	027 Move X21, 0x2598000
	028 Move W8, [X21+1091]
	029 Compare W8, 0
	030 JumpIfNotEqual {36}
	031 Move X0, 0x22C2000
	032 Move X0, [X0+1256]
	033 Call 0x1B6F7F0
	034 Move W8, 1
	035 Move [X21+1091], W8
	036 Move X0, [X20]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1B6F8F8
	041 Move X0, [X20]
	042 Move X8, [X0+184]
	043 Move X8, [X8]
	044 Compare X8, 0
	045 JumpIfEqual {99}
	046 Move X8, [X8+184]
	047 Compare X8, 0
	048 JumpIfEqual {99}
	049 Move X8, [X8+72]
	050 Compare X8, 0
	051 JumpIfEqual {99}
	052 Move W8, [X8+76]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move W20, 1
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1B6F8F8
	059 Move W8, [X21+1091]
	060 Compare W8, 0
	061 JumpIfNotEqual {67}
	062 Move X0, 0x22C2000
	063 Move X0, [X0+1256]
	064 Call 0x1B6F7F0
	065 Move W8, 1
	066 Move [X21+1091], W8
	067 Move X0, [X20]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {73}
	071 Call 0x1B6F8F8
	072 Move X0, [X20]
	073 Move X8, [X0+184]
	074 Move X8, [X8]
	075 Compare X8, 0
	076 JumpIfEqual {99}
	077 Move X8, [X8+184]
	078 Compare X8, 0
	079 JumpIfEqual {99}
	080 Move X8, [X8+88]
	081 Compare X8, 0
	082 JumpIfEqual {99}
	083 Move W8, [X8+76]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 NotImplemented "Instruction CSET not yet implemented."
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1B6F8F8
	090 Move W0, W20
	091 Move X1, X19
	092 Move X20, [X31+16]
	093 Move X19, [X31+24]
	094 Move W2, 1
	095 Move X30, [X31+32]
	096 Move X21, [X31+40]
	097 Call App.ExecuteAction, X0, X1, X2
	098 Return 
	099 Call 0x1B6FA1C

Method: System.Void ExecuteActionOrDelay(System.Collections.Generic.IList`1<AnimalCompany.BaseAction> actions)

Disassembly:
	0x01C8CCDC ADRP X0, 0x22C1000
	0x01C8CCE0 LDR X0, [X0 + 0x760]
	0x01C8CCE4 BL 0x1B6E804
	0x01C8CCE8 MOV X1, X0
	0x01C8CCEC MOV X0, X20
	0x01C8CCF0 BL 0x1B6E8E8
	0x01C8CCF4 BL 0x1B6EA1C
	0x01C8CCF8 STR X30, [X31 - 0x30]!
	0x01C8CCFC STP X22, X21, [X31 + 0x10]
	0x01C8CD00 STP X20, X19, [X31 + 0x20]
	0x01C8CD04 ADRP X21, 0x2597000
	0x01C8CD08 LDRB W8, [X21 + 0x38D]
	0x01C8CD0C MOV W20, W1
	0x01C8CD10 MOV X19, X0
	0x01C8CD14 TBNZ X8, 0x0, 0x1C8CDA4
	0x01C8CD18 ADRP X0, 0x22C1000
	0x01C8CD1C LDR X0, [X0 + 0x4E8]
	0x01C8CD20 BL 0x1B6E7F0
	0x01C8CD24 ADRP X0, 0x22C1000
	0x01C8CD28 LDR X0, [X0 + 0x738]
	0x01C8CD2C BL 0x1B6E7F0
	0x01C8CD30 ADRP X0, 0x22C1000
	0x01C8CD34 LDR X0, [X0 + 0x768]
	0x01C8CD38 BL 0x1B6E7F0
	0x01C8CD3C ADRP X0, 0x22C1000
	0x01C8CD40 LDR X0, [X0 + 0x5B0]
	0x01C8CD44 BL 0x1B6E7F0
	0x01C8CD48 ADRP X0, 0x22C1000
	0x01C8CD4C LDR X0, [X0 + 0x5B8]
	0x01C8CD50 BL 0x1B6E7F0
	0x01C8CD54 ADRP X0, 0x22C1000
	0x01C8CD58 LDR X0, [X0 + 0x5C0]
	0x01C8CD5C BL 0x1B6E7F0
	0x01C8CD60 ADRP X0, 0x22C1000
	0x01C8CD64 LDR X0, [X0 + 0x628]
	0x01C8CD68 BL 0x1B6E7F0
	0x01C8CD6C ADRP X0, 0x22C1000
	0x01C8CD70 LDR X0, [X0 + 0x770]
	0x01C8CD74 BL 0x1B6E7F0
	0x01C8CD78 ADRP X0, 0x22C1000
	0x01C8CD7C LDR X0, [X0 + 0x750]
	0x01C8CD80 BL 0x1B6E7F0
	0x01C8CD84 ADRP X0, 0x22C1000
	0x01C8CD88 LDR X0, [X0 + 0x658]
	0x01C8CD8C BL 0x1B6E7F0
	0x01C8CD90 ADRP X0, 0x22C1000
	0x01C8CD94 LDR X0, [X0 + 0x778]
	0x01C8CD98 BL 0x1B6E7F0
	0x01C8CD9C MOVZ W8, 0x1
	0x01C8CDA0 STRB W8, [X21 + 0x38D]
	0x01C8CDA4 CBZ X19, 0x1C8CF54
	0x01C8CDA8 TBZ X20, 0x0, 0x1C8CDBC
	0x01C8CDAC MOVZ W1, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2598000
	006 Move X20, 0x22C2000
	007 Move W8, [X21+902]
	008 Move X20, [X20+1256]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x22C2000
	015 Move X0, [X0+1256]
	016 Call 0x1B6F7F0
	017 Move X0, 0x22C2000
	018 Move X0, [X0+1736]
	019 Call 0x1B6F7F0
	020 Move W8, 1
	021 Move [X21+902], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1B6F8F8
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move W9, [X8+26]
	030 Compare W9, 0
	031 JumpIfNotEqual {41}
	032 Move W9, [X0+224]
	033 Compare W9, 0
	034 JumpIfNotEqual {38}
	035 Call 0x1B6F8F8
	036 Move X0, [X20]
	037 Move X8, [X0+184]
	038 Move W8, [X8+24]
	039 Compare W8, 0
	040 JumpIfEqual {60}
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1B6F8F8
	045 Move X0, [X20]
	046 Move X8, [X0+184]
	047 Move X0, [X8+32]
	048 Compare X0, 0
	049 JumpIfEqual {71}
	050 Move X8, 0x22C2000
	051 Move X8, [X8+1736]
	052 Move X1, X19
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X2, [X8]
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Call List`1<Object>.AddRange, X0, X1
	059 Return 
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1B6F8F8
	064 Move X0, X19
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X30, [X31+32]
	068 Move X21, [X31+40]
	069 Call App.ExecuteAction, X0
	070 Return 
	071 Call 0x1B6FA1C

Method: System.Void ExecuteActionOrDelay(AnimalCompany.BaseAction[] actions)

Disassembly:
	0x01C8CDB0 MOV X0, X19
	0x01C8CDB4 MOV X2, X31
	0x01C8CDB8 BL 0x3425D2C
	0x01C8CDBC MOV X0, X19
	0x01C8CDC0 MOV X1, X31
	0x01C8CDC4 BL 0x3426160
	0x01C8CDC8 TBZ X0, 0x0, 0x1C8CDF8
	0x01C8CDCC ADRP X8, 0x22C1000
	0x01C8CDD0 LDR X8, [X8 + 0x628]
	0x01C8CDD4 LDR X0, [X8]
	0x01C8CDD8 LDR W8, [X0 + 0xE0]
	0x01C8CDDC CBNZ W8, 0x1C8CDE4
	0x01C8CDE0 BL 0x1B6E8F8
	0x01C8CDE4 MOVZ W0, 0x5
	0x01C8CDE8 MOVZ W1, 0x200
	0x01C8CDEC MOV X2, X31
	0x01C8CDF0 BL 0x342AC84
	0x01C8CDF4 TBZ X0, 0x0, 0x1C8CEBC
	0x01C8CDF8 MOV X0, X19
	0x01C8CDFC MOV X1, X31
	0x01C8CE00 BL 0x3426074
	0x01C8CE04 ADRP X8, 0x22C1000
	0x01C8CE08 LDR X8, [X8 + 0x770]
	0x01C8CE0C MOV X1, X0
	0x01C8CE10 MOV X2, X31
	0x01C8CE14 LDR X8, [X8]
	0x01C8CE18 MOV X0, X8
	0x01C8CE1C BL 0x3084780
	0x01C8CE20 ADRP X8, 0x22C1000
	0x01C8CE24 LDR X8, [X8 + 0x5C0]
	0x01C8CE28 MOV X20, X0
	0x01C8CE2C LDR X8, [X8]
	0x01C8CE30 MOV X0, X8
	0x01C8CE34 BL 0x1B6EA0C
	0x01C8CE38 ADRP X8, 0x22C1000
	0x01C8CE3C LDR X8, [X8 + 0x5B8]
	0x01C8CE40 MOV X21, X0
	0x01C8CE44 LDR X1, [X8]
	0x01C8CE48 BL 0x28F9A14
	0x01C8CE4C CBZ X21, 0x1C8CFD8
	0x01C8CE50 ADRP X8, 0x22C1000
	0x01C8CE54 ADRP X9, 0x22C1000
	0x01C8CE58 LDR X8, [X8 + 0x750]
	0x01C8CE5C LDR X9, [X9 + 0x5B0]
	0x01C8CE60 MOV X0, X21
	0x01C8CE64 MOV X2, X19
	0x01C8CE68 LDR X1, [X8]
	0x01C8CE6C LDR X3, [X9]
	0x01C8CE70 BL 0x28FA2A8
	0x01C8CE74 ADRP X8, 0x22C1000
	0x01C8CE78 LDR X8, [X8 + 0x628]
	0x01C8CE7C LDR X0, [X8]
	0x01C8CE80 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2598000
	006 Move X20, 0x22C2000
	007 Move W8, [X21+903]
	008 Move X20, [X20+1256]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x22C2000
	015 Move X0, [X0+1256]
	016 Call 0x1B6F7F0
	017 Move X0, 0x22C2000
	018 Move X0, [X0+1736]
	019 Call 0x1B6F7F0
	020 Move W8, 1
	021 Move [X21+903], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1B6F8F8
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move W9, [X8+26]
	030 Compare W9, 0
	031 JumpIfNotEqual {41}
	032 Move W9, [X0+224]
	033 Compare W9, 0
	034 JumpIfNotEqual {38}
	035 Call 0x1B6F8F8
	036 Move X0, [X20]
	037 Move X8, [X0+184]
	038 Move W8, [X8+24]
	039 Compare W8, 0
	040 JumpIfEqual {60}
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1B6F8F8
	045 Move X0, [X20]
	046 Move X8, [X0+184]
	047 Move X0, [X8+32]
	048 Compare X0, 0
	049 JumpIfEqual {71}
	050 Move X8, 0x22C2000
	051 Move X8, [X8+1736]
	052 Move X1, X19
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X2, [X8]
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Call List`1<Object>.AddRange, X0, X1
	059 Return 
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1B6F8F8
	064 Move X0, X19
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X30, [X31+32]
	068 Move X21, [X31+40]
	069 Call App.ExecuteAction, X0
	070 Return 
	071 Call 0x1B6FA1C

Method: System.Void ExecuteAction(System.Boolean shouldLog, System.Collections.Generic.IList`1<AnimalCompany.BaseAction> actions, System.Boolean executeDelayedActions = True)

Disassembly:
	0x01C8B1F8 LDR X0, [X8]
	0x01C8B1FC LDR X8, [X0 + 0xB8]
	0x01C8B200 STR W27, [X31 + 0x4]
	0x01C8B204 LDR X0, [X8 + 0x30]
	0x01C8B208 CBZ X0, 0x1C8B7D4
	0x01C8B20C STR W24, [X31 + 0x14]
	0x01C8B210 ADRP X8, 0x22C2000
	0x01C8B214 LDR X8, [X8 + 0x600]
	0x01C8B218 LDR X1, [X8]
	0x01C8B21C ADD X8, X31, 0x18
	0x01C8B220 BL 0x2E470E0
	0x01C8B224 LDUR V0, [X31 + 0x18]
	0x01C8B228 LDR X8, [X31 + 0x28]
	0x01C8B22C ADRP X25, 0x22C2000
	0x01C8B230 ADRP X28, 0x22C2000
	0x01C8B234 ADRP X29, 0x22C2000
	0x01C8B238 ADRP X19, 0x22C2000
	0x01C8B23C ADRP X27, 0x22C2000
	0x01C8B240 ADRP X20, 0x22C2000
	0x01C8B244 LDR X25, [X25 + 0x5D0]
	0x01C8B248 LDR X28, [X28 + 0x5C0]
	0x01C8B24C LDR X29, [X29 + 0x5B8]
	0x01C8B250 LDR X19, [X19 + 0x668]
	0x01C8B254 LDR X27, [X27 + 0x5B0]
	0x01C8B258 LDR X20, [X20 + 0x658]
	0x01C8B25C STR V0, [X31 + 0x4]
	0x01C8B260 STR X8, [X31 + 0x50]
	0x01C8B264 ADRP X21, 0x22C2000
	0x01C8B268 LDR X21, [X21 + 0x648]
	0x01C8B26C LDR X1, [X25]
	0x01C8B270 ADD X0, X31, 0x40
	0x01C8B274 BL 0x2A14F30
	0x01C8B278 TBZ X0, 0x0, 0x1C8B32C
	0x01C8B27C LDR X26, [X31 + 0x50]
	0x01C8B280 CBZ X26, 0x1C8B498
	0x01C8B284 LDR X0, [X26 + 0x10]
	0x01C8B288 CBZ X0, 0x1C8B49C
	0x01C8B28C MOV X1, X31
	0x01C8B290 BL 0x3227E8C
	0x01C8B294 CBZ X0, 0x1C8B490
	0x01C8B298 LDR X8, [X0]
	0x01C8B29C LDP X9, X1, [X8 + 0x1A8]
	0x01C8B2A0 BLR X9
	0x01C8B2A4 ADRP X8, 0x22C2000
	0x01C8B2A8 LDR X8, [X8 + 0x630]
	0x01C8B2AC LDR X1, [X8]
	0x01C8B2B0 MOV X2, X31
	0x01C8B2B4 BL 0x3084780
	0x01C8B2B8 MOV X22, X0
	0x01C8B2BC LDR X23, [X26 + 0x18]
	0x01C8B2C0 LDR X0, [X28]
	0x01C8B2C4 BL 0x1B6EA0C
	0x01C8B2C8 LDR X1, [X29]
	0x01C8B2CC MOV X24, X0
	0x01C8B2D0 BL 0x28F9A14
	0x01C8B2D4 CBZ X24, 0x1C8B494
	0x01C8B2D8 LDR X1, [X19]
	0x01C8B2DC LDR X2, [X26 + 0x10]
	0x01C8B2E0 LDR X3, [X27]
	0x01C8B2E4 MOV X0, X24
	0x01C8B2E8 BL 0x28FA2A8
	0x01C8B2EC ADRP X8, 0x22C2000
	0x01C8B2F0 LDR X8, [X8 + 0x628]
	0x01C8B2F4 LDR X0, [X8]
	0x01C8B2F8 LDR W8, [X0 + 0xE0]
	0x01C8B2FC CBNZ W8, 0x1C8B304
	0x01C8B300 BL 0x1B6E8F8
	0x01C8B304 LDR X4, [X20]
	0x01C8B308 LDR X5, [X21]
	0x01C8B30C MOVZ W0, 0x100
	0x01C8B310 MOVZ W6, 0x129
	0x01C8B314 MOV X1, X22
	0x01C8B318 MOV X2, X23
	0x01C8B31C MOV X3, X24
	0x01C8B320 MOV X7, X31
	0x01C8B324 BL 0x342B884
	0x01C8B328 B 0x1C8B26C
	0x01C8B32C MOV X22, X31
	0x01C8B330 MOVZ W19, 0x1E
	0x01C8B334 ADRP X8, 0x22C2000
	0x01C8B338 LDR X8, [X8 + 0x5C8]
	0x01C8B33C LDR X1, [X8]
	0x01C8B340 LDR W27, [X31 + 0x4]
	0x01C8B344 ADD X0, X31, 0x40
	0x01C8B348 BL 0x2A14F2C
	0x01C8B34C LDP W20, W24, [X31 + 0x10]
	0x01C8B350 CBNZ X22, 0x1C8B7D8
	0x01C8B354 CMP W19, 0x1E
	0x01C8B358 B.EQ 0x1C8B360
	0x01C8B35C CBNZ W19, 0x1C8B484
	0x01C8B360 ADRP X19, 0x22C2000
	0x01C8B364 LDR X19, [X19 + 0x4E8]
	0x01C8B368 LDR X0, [X19]
	0x01C8B36C LDR W8, [X0 + 0xE0]
	0x01C8B370 CBNZ W8, 0x1C8B384
	0x01C8B374 BL 0x1B6E8F8
	0x01C8B378 ADRP X19, 0x22C2000
	0x01C8B37C LDR X19, [X19 + 0x4E8]
	0x01C8B380 LDR X0, [X19]
	0x01C8B384 LDR X8, [X0 + 0xB8]
	0x01C8B388 MOVZ W9, 0x1
	0x01C8B38C LDR X22, [X8 + 0x10]
	0x01C8B390 STRB W9, [X8 + 0x1A]
	0x01C8B394 CBZ X22, 0x1C8B7B4
	0x01C8B398 LDR X8, [X22]
	0x01C8B39C ADRP X10, 0x22C2000
	0x01C8B3A0 LDRH W9, [X8 + 0x12E]
	0x01C8B3A4 LDR X10, [X10 + 0x548]
	0x01C8B3A8 LDR X1, [X10]
	0x01C8B3AC CBZ X9, 0x1C8B3D0
	0x01C8B3B0 LDR X10, [X8 + 0xB0]
	0x01C8B3B4 ADD X10, X10, 0x8
	0x01C8B3B8 LDUR X11, [X10 - 0x8]
	0x01C8B3BC CMP X11, X1
	0x01C8B3C0 B.EQ 0x1C8B3E0
	0x01C8B3C4 SUBS X9, X9, 0x1
	0x01C8B3C8 ADD X10, X10, 0x10
	0x01C8B3CC B.NE 0x1C8B3B8
	0x01C8B3D0 MOVZ W2, 0x14
	0x01C8B3D4 MOV X0, X22
	0x01C8B3D8 BL 0x1BB4284
	0x01C8B3DC B 0x1C8B3F0
	0x01C8B3E0 LDR W9, [X10]
	0x01C8B3E4 ADD W9, W9, 0x14
	0x01C8B3E8 ADD X8, X8, W9, 0x4, SXTW
	0x01C8B3EC ADD X0, X8, 0x138
	0x01C8B3F0 LDP X8, X3, [X0]
	0x01C8B3F4 AND W9, W24, W20, 0x0
	0x01C8B3F8 AND W1, W9, 0x1
	0x01C8B3FC MOV X0, X22
	0x01C8B400 MOV W2, W31
	0x01C8B404 BLR X8
	0x01C8B408 LDR X8, [X19]
	0x01C8B40C LDR X8, [X8 + 0xB8]
	0x01C8B410 STRB W31, [X8 + 0x1A]
	0x01C8B414 ADD X0, X31, 0x30
	0x01C8B418 BL 0x18F46B4
	0x01C8B41C LDR X8, [X19]
	0x01C8B420 LDR W9, [X8 + 0xE0]
	0x01C8B424 CBNZ W9, 0x1C8B434
	0x01C8B428 MOV X0, X8
	0x01C8B42C BL 0x1B6E8F8
	0x01C8B430 LDR X8, [X19]
	0x01C8B434 LDR X9, [X8 + 0xB8]
	0x01C8B438 LDR X9, [X9 + 0x20]
	0x01C8B43C CBZ X9, 0x1C8B7B0
	0x01C8B440 LDR W9, [X9 + 0x18]
	0x01C8B444 CMP W9, 0x1
	0x01C8B448 B.LT 0x1C8B464
	0x01C8B44C TBZ X27, 0x0, 0x1C8B464
	0x01C8B450 LDR W9, [X8 + 0xE0]
	0x01C8B454 CBNZ W9, 0x1C8B460
	0x01C8B458 MOV X0, X8
	0x01C8B45C BL 0x1B6E8F8
	0x01C8B460 BL 0x1C8C3D0
	0x01C8B464 LDP X20, X19, [X31 + 0xB0]
	0x01C8B468 LDP X22, X21, [X31 + 0xA0]
	0x01C8B46C LDP X24, X23, [X31 + 0x90]
	0x01C8B470 LDP X26, X25, [X31 + 0x80]
	0x01C8B474 LDP X28, X27, [X31 + 0x70]
	0x01C8B478 LDP X29, X30, [X31 + 0x60]
	0x01C8B47C ADD X31, X31, 0xC0
	0x01C8B480 RET
	0x01C8B484 ADD X0, X31, 0x30
	0x01C8B488 BL 0x18F46B4
	0x01C8B48C B 0x1C8B464
	0x01C8B490 BL 0x1B6EA1C
	0x01C8B494 BL 0x1B6EA1C
	0x01C8B498 BL 0x1B6EA1C
	0x01C8B49C BL 0x1B6EA1C
	0x01C8B4A0 ADRP X19, 0x22C2000
	0x01C8B4A4 LDR X19, [X19 + 0x4E8]
	0x01C8B4A8 MOV X0, X19
	0x01C8B4AC BL 0x1B6E804
	0x01C8B4B0 BL 0x18F44F0
	0x01C8B4B4 MOV X0, X19
	0x01C8B4B8 BL 0x1B6E804
	0x01C8B4BC LDR X8, [X0 + 0xB8]
	0x01C8B4C0 ADRP X0, 0x22C2000
	0x01C8B4C4 LDRB W20, [X8 + 0x19]
	0x01C8B4C8 LDR X0, [X0 + 0x688]
	0x01C8B4CC BL 0x1B6E804
	0x01C8B4D0 BL 0x1B6EA0C
	0x01C8B4D4 MOV X19, X0
	0x01C8B4D8 ADRP X0, 0x22C2000
	0x01C8B4DC LDR X0, [X0 + 0x690]
	0x01C8B4E0 BL 0x1B6E804
	0x01C8B4E4 MOV X1, X0
	0x01C8B4E8 MOV X0, X19
	0x01C8B4EC MOV W2, W20
	0x01C8B4F0 BL 0x1C8BE84
	0x01C8B4F4 ADRP X0, 0x22C2000
	0x01C8B4F8 LDR X0, [X0 + 0x5C0]
	0x01C8B4FC BL 0x1B6E804
	0x01C8B500 BL 0x1B6EA0C
	0x01C8B504 MOV X20, X0
	0x01C8B508 ADRP X0, 0x22C2000
	0x01C8B50C LDR X0, [X0 + 0x5B8]
	0x01C8B510 BL 0x1B6E804
	0x01C8B514 MOV X1, X0
	0x01C8B518 MOV X0, X20
	0x01C8B51C BL 0x18F4624
	0x01C8B520 MOV X0, X22
	0x01C8B524 BL 0x1C8BEFC
	0x01C8B528 MOV X21, X0
	0x01C8B52C MOV X0, X20
	0x01C8B530 BL 0x18F44E0
	0x01C8B534 ADRP X0, 0x22C2000
	0x01C8B538 LDR X0, [X0 + 0x698]
	0x01C8B53C BL 0x1B6E804
	0x01C8B540 MOV X22, X0
	0x01C8B544 ADRP X0, 0x22C2000
	0x01C8B548 LDR X0, [X0 + 0x5B0]
	0x01C8B54C BL 0x1B6E804
	0x01C8B550 MOV X3, X0
	0x01C8B554 MOV X0, X20
	0x01C8B558 MOV X1, X22
	0x01C8B55C MOV X2, X21
	0x01C8B560 BL 0x18F4628
	0x01C8B564 ADRP X0, 0x22C2000
	0x01C8B568 LDR X0, [X0 + 0x628]
	0x01C8B56C BL 0x1B6E804
	0x01C8B570 BL 0x18F44F0
	0x01C8B574 ADRP X0, 0x22C2000
	0x01C8B578 LDR X0, [X0 + 0x658]
	0x01C8B57C BL 0x1B6E804
	0x01C8B580 MOV X21, X0
	0x01C8B584 ADRP X0, 0x22C2000
	0x01C8B588 LDR X0, [X0 + 0x648]
	0x01C8B58C BL 0x1B6E804
	0x01C8B590 MOV X4, X0
	0x01C8B594 MOVZ W0, 0x100
	0x01C8B598 MOVZ W5, 0xBE
	0x01C8B59C B 0x1C8B69C
	0x01C8B5A0 ADRP X19, 0x22C2000
	0x01C8B5A4 LDR X19, [X19 + 0x4E8]
	0x01C8B5A8 MOV X0, X19
	0x01C8B5AC BL 0x1B6E804
	0x01C8B5B0 BL 0x18F44F0
	0x01C8B5B4 MOV X0, X19
	0x01C8B5B8 BL 0x1B6E804
	0x01C8B5BC LDR X8, [X0 + 0xB8]
	0x01C8B5C0 ADRP X0, 0x22C2000
	0x01C8B5C4 LDRB W20, [X8 + 0x19]
	0x01C8B5C8 LDR X0, [X0 + 0x688]
	0x01C8B5CC BL 0x1B6E804
	0x01C8B5D0 BL 0x1B6EA0C
	0x01C8B5D4 MOV X19, X0
	0x01C8B5D8 ADRP X0, 0x22C2000
	0x01C8B5DC LDR X0, [X0 + 0x6A0]
	0x01C8B5E0 BL 0x1B6E804
	0x01C8B5E4 MOV X1, X0
	0x01C8B5E8 MOV X0, X19
	0x01C8B5EC MOV W2, W20
	0x01C8B5F0 BL 0x1C8BE84
	0x01C8B5F4 ADRP X0, 0x22C2000
	0x01C8B5F8 LDR X0, [X0 + 0x5C0]
	0x01C8B5FC BL 0x1B6E804
	0x01C8B600 BL 0x1B6EA0C
	0x01C8B604 MOV X20, X0
	0x01C8B608 ADRP X0, 0x22C2000
	0x01C8B60C LDR X0, [X0 + 0x5B8]
	0x01C8B610 BL 0x1B6E804
	0x01C8B614 MOV X1, X0
	0x01C8B618 MOV X0, X20
	0x01C8B61C BL 0x18F4624
	0x01C8B620 MOV X0, X22
	0x01C8B624 BL 0x1C8BEFC
	0x01C8B628 MOV X21, X0
	0x01C8B62C MOV X0, X20
	0x01C8B630 BL 0x18F44E0
	0x01C8B634 ADRP X0, 0x22C2000
	0x01C8B638 LDR X0, [X0 + 0x698]
	0x01C8B63C BL 0x1B6E804
	0x01C8B640 MOV X22, X0
	0x01C8B644 ADRP X0, 0x22C2000
	0x01C8B648 LDR X0, [X0 + 0x5B0]
	0x01C8B64C BL 0x1B6E804
	0x01C8B650 MOV X3, X0
	0x01C8B654 MOV X0, X20
	0x01C8B658 MOV X1, X22
	0x01C8B65C MOV X2, X21
	0x01C8B660 BL 0x18F4628
	0x01C8B664 ADRP X0, 0x22C2000
	0x01C8B668 LDR X0, [X0 + 0x628]
	0x01C8B66C BL 0x1B6E804
	0x01C8B670 BL 0x18F44F0
	0x01C8B674 ADRP X0, 0x22C2000
	0x01C8B678 LDR X0, [X0 + 0x658]
	0x01C8B67C BL 0x1B6E804
	0x01C8B680 MOV X21, X0
	0x01C8B684 ADRP X0, 0x22C2000
	0x01C8B688 LDR X0, [X0 + 0x648]
	0x01C8B68C BL 0x1B6E804
	0x01C8B690 MOV X4, X0
	0x01C8B694 MOVZ W0, 0x100
	0x01C8B698 MOVZ W5, 0xC5
	0x01C8B69C MOV X1, X19
	0x01C8B6A0 MOV X2, X20
	0x01C8B6A4 MOV X3, X21
	0x01C8B6A8 MOV X6, X31
	0x01C8B6AC BL 0x342B734
	0x01C8B6B0 ADRP X0, 0x22C2000
	0x01C8B6B4 LDR X0, [X0 + 0x6A8]
	0x01C8B6B8 BL 0x1B6E804
	0x01C8B6BC MOV X1, X0
	0x01C8B6C0 MOV X0, X19
	0x01C8B6C4 BL 0x1B6E8E8
	0x01C8B6C8 ADRP X19, 0x22C2000
	0x01C8B6CC LDR X19, [X19 + 0x4E8]
	0x01C8B6D0 MOV X0, X19
	0x01C8B6D4 BL 0x1B6E804
	0x01C8B6D8 BL 0x18F44F0
	0x01C8B6DC MOV X0, X19
	0x01C8B6E0 BL 0x1B6E804
	0x01C8B6E4 LDR X8, [X0 + 0xB8]
	0x01C8B6E8 ADRP X0, 0x22C2000
	0x01C8B6EC LDRB W19, [X8 + 0x19]
	0x01C8B6F0 LDR X0, [X0 + 0x688]
	0x01C8B6F4 BL 0x1B6E804
	0x01C8B6F8 BL 0x1B6EA0C
	0x01C8B6FC MOV X20, X0
	0x01C8B700 ADRP X0, 0x22C2000
	0x01C8B704 LDR X0, [X0 + 0x6B0]
	0x01C8B708 BL 0x1B6E804
	0x01C8B70C MOV X1, X0
	0x01C8B710 MOV X0, X20
	0x01C8B714 MOV W2, W19
	0x01C8B718 BL 0x1C8BE84
	0x01C8B71C MOV X0, X20
	0x01C8B720 BL 0x18F44E0
	0x01C8B724 LDR X8, [X20]
	0x01C8B728 MOV X0, X20
	0x01C8B72C LDP X9, X1, [X8 + 0x198]
	0x01C8B730 BLR X9
	0x01C8B734 MOV X19, X0
	0x01C8B738 MOV X0, X22
	0x01C8B73C BL 0x1C8BEFC
	0x01C8B740 MOV X21, X0
	0x01C8B744 MOV X0, X19
	0x01C8B748 BL 0x18F44E0
	0x01C8B74C ADRP X0, 0x22C2000
	0x01C8B750 LDR X0, [X0 + 0x6B8]
	0x01C8B754 BL 0x1B6E804
	0x01C8B758 MOV X22, X0
	0x01C8B75C ADRP X0, 0x22C2000
	0x01C8B760 LDR X0, [X0 + 0x698]
	0x01C8B764 BL 0x1B6E804
	0x01C8B768 MOV X3, X0
	0x01C8B76C MOVZ W0, 0x1
	0x01C8B770 MOV X1, X22
	0x01C8B774 MOV X2, X19
	0x01C8B778 MOV X4, X21
	0x01C8B77C BL 0x18F462C
	0x01C8B780 ADRP X0, 0x22C2000
	0x01C8B784 LDR X0, [X0 + 0x6A8]
	0x01C8B788 BL 0x1B6E804
	0x01C8B78C MOV X1, X0
	0x01C8B790 MOV X0, X20
	0x01C8B794 BL 0x1B6E8E8
	0x01C8B798 STR W27, [X31 + 0x4]
	0x01C8B79C BL 0x1B6EA1C
	0x01C8B7A0 BL 0x1B6EA1C
	0x01C8B7A4 BL 0x1B6EA1C
	0x01C8B7A8 STR W27, [X31 + 0x4]
	0x01C8B7AC BL 0x1B6EA1C
	0x01C8B7B0 BL 0x1B6EA1C
	0x01C8B7B4 BL 0x1B6EA1C
	0x01C8B7B8 STR W27, [X31 + 0x4]
	0x01C8B7BC BL 0x1B6EA1C
	0x01C8B7C0 BL 0x1B6EA1C
	0x01C8B7C4 STR W27, [X31 + 0x4]
	0x01C8B7C8 BL 0x1B6EA1C
	0x01C8B7CC STR W27, [X31 + 0x4]
	0x01C8B7D0 BL 0x1B6EA1C
	0x01C8B7D4 BL 0x1B6EA1C
	0x01C8B7D8 MOV X0, X22
	0x01C8B7DC BL 0x1B6EA14
	0x01C8B7E0 MOVZ W0, 0x8
	0x01C8B7E4 BL 0x3D19860
	0x01C8B7E8 LDR X8, [X25]
	0x01C8B7EC STR X8, [X0]
	0x01C8B7F0 ADRP X1, 0x2091000
	0x01C8B7F4 ADD X1, X1, 0xBD8
	0x01C8B7F8 MOV X2, X31
	0x01C8B7FC BL 0x3D19870
	0x01C8B800 B 0x1C8BA24
	0x01C8B804 BL 0x1B6EA1C
	0x01C8B808 BL 0x1B6EA1C
	0x01C8B80C BL 0x1B6EA1C
	0x01C8B810 B 0x1C8B938
	0x01C8B814 B 0x1C8B834
	0x01C8B818 B 0x1C8B934
	0x01C8B81C B 0x1C8B938
	0x01C8B820 B 0x1C8B938
	0x01C8B824 B 0x1C8B938
	0x01C8B828 MOV X21, X1
	0x01C8B82C MOV X29, X0
	0x01C8B830 B 0x1C8B840
	0x01C8B834 MOV X21, X1
	0x01C8B838 MOV X29, X0
	0x01C8B83C BL 0x3D19850
	0x01C8B840 B 0x1C8B940
	0x01C8B844 B 0x1C8B938
	0x01C8B848 B 0x1C8B934
	0x01C8B84C B 0x1C8B938
	0x01C8B850 B 0x1C8B938
	0x01C8B854 B 0x1C8B934
	0x01C8B858 B 0x1C8B938
	0x01C8B85C B 0x1C8B934
	0x01C8B860 B 0x1C8B938
	0x01C8B864 B 0x1C8B934
	0x01C8B868 B 0x1C8B934
	0x01C8B86C B 0x1C8B938
	0x01C8B870 B 0x1C8B934
	0x01C8B874 B 0x1C8B934
	0x01C8B878 B 0x1C8B934
	0x01C8B87C B 0x1C8B938
	0x01C8B880 B 0x1C8B934
	0x01C8B884 B 0x1C8B938
	0x01C8B888 B 0x1C8B934
	0x01C8B88C B 0x1C8B938
	0x01C8B890 B 0x1C8B934
	0x01C8B894 B 0x1C8B934
	0x01C8B898 B 0x1C8B934
	0x01C8B89C STR W27, [X31 + 0x4]
	0x01C8B8A0 MOV X21, X1
	0x01C8B8A4 MOV X29, X0
	0x01C8B8A8 B 0x1C8B940
	0x01C8B8AC B 0x1C8B934
	0x01C8B8B0 B 0x1C8B934
	0x01C8B8B4 B 0x1C8B934
	0x01C8B8B8 B 0x1C8B8E0
	0x01C8B8BC B 0x1C8B8E0
	0x01C8B8C0 B 0x1C8B8E0
	0x01C8B8C4 B 0x1C8B8E0
	0x01C8B8C8 B 0x1C8B8E0
	0x01C8B8CC B 0x1C8B8E0
	0x01C8B8D0 B 0x1C8B8E0
	0x01C8B8D4 B 0x1C8B8E0
	0x01C8B8D8 B 0x1C8B934
	0x01C8B8DC B 0x1C8B8E0
	0x01C8B8E0 MOV X29, X0
	0x01C8B8E4 CMP W1, 0x1
	0x01C8B8E8 B.NE 0x1C8B904
	0x01C8B8EC MOV X0, X29
	0x01C8B8F0 BL 0x3D19840
	0x01C8B8F4 LDR X22, [X0]
	0x01C8B8F8 BL 0x3D19850
	0x01C8B8FC MOV W19, W31
	0x01C8B900 B 0x1C8B334
	0x01C8B904 MOV X22, X31
	0x01C8B908 ADRP X8, 0x22C2000
	0x01C8B90C LDR X8, [X8 + 0x5C8]
	0x01C8B910 MOV W21, W1
	0x01C8B914 LDR X1, [X8]
	0x01C8B918 ADD X0, X31, 0x40
	0x01C8B91C BL 0x2A14F2C
	0x01C8B920 CBZ X22, 0x1C8B940
	0x01C8B924 MOV X0, X22
	0x01C8B928 BL 0x1B6EA14
	0x01C8B92C MOV X29, X0
	0x01C8B930 B 0x1C8B908
	0x01C8B934 STR W27, [X31 + 0x4]
	0x01C8B938 MOV X29, X0
	0x01C8B93C MOV W21, W1
	0x01C8B940 CMP W21, 0x1
	0x01C8B944 B.EQ 0x1C8B978
	0x01C8B948 MOVZ W8, 0x1
	0x01C8B94C CMP W21, W8
	0x01C8B950 B.NE 0x1C8BA48
	0x01C8B954 MOV X0, X29
	0x01C8B958 BL 0x3D19840
	0x01C8B95C LDR X8, [X0]
	0x01C8B960 STR X8, [X31 + 0x30]
	0x01C8B964 BL 0x3D19850
	0x01C8B968 ADRP X19, 0x22C2000
	0x01C8B96C LDR W27, [X31 + 0x4]
	0x01C8B970 LDR X19, [X19 + 0x4E8]
	0x01C8B974 B 0x1C8B414
	0x01C8B978 MOV X0, X29
	0x01C8B97C BL 0x3D19840
	0x01C8B980 MOV X21, X0
	0x01C8B984 ADRP X0, 0x22C2000
	0x01C8B988 LDR X0, [X0 + 0x670]
	0x01C8B98C BL 0x1B6E804
	0x01C8B990 LDR X8, [X21]
	0x01C8B994 LDR X1, [X8]
	0x01C8B998 BL 0x1B6ED6C
	0x01C8B99C TBZ X0, 0x0, 0x1C8BA04
	0x01C8B9A0 LDR X21, [X21]
	0x01C8B9A4 BL 0x3D19850
	0x01C8B9A8 ADRP X0, 0x22C2000
	0x01C8B9AC LDR X0, [X0 + 0x628]
	0x01C8B9B0 BL 0x1B6E804
	0x01C8B9B4 LDR W8, [X0 + 0xE0]
	0x01C8B9B8 CBNZ W8, 0x1C8B9C0
	0x01C8B9BC BL 0x1B6E8F8
	0x01C8B9C0 ADRP X0, 0x22C2000
	0x01C8B9C4 LDR X0, [X0 + 0x658]
	0x01C8B9C8 BL 0x1B6E804
	0x01C8B9CC MOV X22, X0
	0x01C8B9D0 ADRP X0, 0x22C2000
	0x01C8B9D4 LDR X0, [X0 + 0x648]
	0x01C8B9D8 BL 0x1B6E804
	0x01C8B9DC MOV X4, X0
	0x01C8B9E0 MOVZ W0, 0x100
	0x01C8B9E4 MOVZ W5, 0x136
	0x01C8B9E8 MOV X1, X21
	0x01C8B9EC MOV X2, X31
	0x01C8B9F0 MOV X3, X22
	0x01C8B9F4 MOV X6, X31
	0x01C8B9F8 BL 0x342B734
	0x01C8B9FC MOV X0, X21
	0x01C8BA00 BL 0x1B6EA14
	0x01C8BA04 MOVZ W0, 0x8
	0x01C8BA08 BL 0x3D19860
	0x01C8BA0C LDR X8, [X21]
	0x01C8BA10 STR X8, [X0]
	0x01C8BA14 ADRP X1, 0x2091000
	0x01C8BA18 ADD X1, X1, 0xBD8
	0x01C8BA1C MOV X2, X31
	0x01C8BA20 BL 0x3D19870
	0x01C8BA24 B 0x1C8BA28
	0x01C8BA28 MOV X29, X0
	0x01C8BA2C MOV W21, W1
	0x01C8BA30 B 0x1C8B948
	0x01C8BA34 MOV X21, X1
	0x01C8BA38 MOV X29, X0
	0x01C8BA3C BL 0x3D19850
	0x01C8BA40 B 0x1C8B948
	0x01C8BA44 MOV X29, X0
	0x01C8BA48 ADD X0, X31, 0x30
	0x01C8BA4C BL 0x18F46B4
	0x01C8BA50 MOV X0, X29
	0x01C8BA54 BL 0x1C8418C
	0x01C8BA58 BL 0x18F46A8
	0x01C8BA5C STP X30, X21, [X31 - 0x20]!
	0x01C8BA60 STP X20, X19, [X31 + 0x10]
	0x01C8BA64 ADRP X21, 0x2598000
	0x01C8BA68 ADRP X20, 0x22C2000
	0x01C8BA6C LDRB W8, [X21 + 0x383]
	0x01C8BA70 LDR X20, [X20 + 0x4E8]
	0x01C8BA74 MOV X19, X0
	0x01C8BA78 TBNZ X8, 0x0, 0x1C8BA9C
	0x01C8BA7C ADRP X0, 0x22C2000
	0x01C8BA80 LDR X0, [X0 + 0x4E8]
	0x01C8BA84 BL 0x1B6E7F0
	0x01C8BA88 ADRP X0, 0x22C2000
	0x01C8BA8C LDR X0, [X0 + 0x6C0]
	0x01C8BA90 BL 0x1B6E7F0
	0x01C8BA94 MOVZ W8, 0x1
	0x01C8BA98 STRB W8, [X21 + 0x383]
	0x01C8BA9C LDR X0, [X20]
	0x01C8BAA0 LDR W8, [X0 + 0xE0]
	0x01C8BAA4 CBNZ W8, 0x1C8BAAC
	0x01C8BAA8 BL 0x1B6E8F8
	0x01C8BAAC ADRP X21, 0x2598000
	0x01C8BAB0 LDRB W8, [X21 + 0x443]
	0x01C8BAB4 CBNZ W8, 0x1C8BACC
	0x01C8BAB8 ADRP X0, 0x22C2000
	0x01C8BABC LDR X0, [X0 + 0x4E8]
	0x01C8BAC0 BL 0x1B6E7F0
	0x01C8BAC4 MOVZ W8, 0x1
	0x01C8BAC8 STRB W8, [X21 + 0x443]
	0x01C8BACC LDR X0, [X20]
	0x01C8BAD0 LDR W8, [X0 + 0xE0]
	0x01C8BAD4 CBNZ W8, 0x1C8BAE0
	0x01C8BAD8 BL 0x1B6E8F8
	0x01C8BADC LDR X0, [X20]
	0x01C8BAE0 LDR X8, [X0 + 0xB8]
	0x01C8BAE4 LDR X8, [X8]
	0x01C8BAE8 CBZ X8, 0x1C8BB98
	0x01C8BAEC LDR X8, [X8 + 0xB8]
	0x01C8BAF0 CBZ X8, 0x1C8BB98
	0x01C8BAF4 LDR X8, [X8 + 0x48]
	0x01C8BAF8 CBZ X8, 0x1C8BB98
	0x01C8BAFC LDR W8, [X8 + 0x4C]
	0x01C8BB00 CMP W8, 0x5
	0x01C8BB04 B.NE 0x1C8BB10
	0x01C8BB08 MOVZ W20, 0x1
	0x01C8BB0C B 0x1C8BB74
	0x01C8BB10 LDR W8, [X0 + 0xE0]
	0x01C8BB14 CBNZ W8, 0x1C8BB1C
	0x01C8BB18 BL 0x1B6E8F8
	0x01C8BB1C LDRB W8, [X21 + 0x443]
	0x01C8BB20 CBNZ W8, 0x1C8BB38
	0x01C8BB24 ADRP X0, 0x22C2000
	0x01C8BB28 LDR X0, [X0 + 0x4E8]
	0x01C8BB2C BL 0x1B6E7F0
	0x01C8BB30 MOVZ W8, 0x1
	0x01C8BB34 STRB W8, [X21 + 0x443]
	0x01C8BB38 LDR X0, [X20]
	0x01C8BB3C LDR W8, [X0 + 0xE0]
	0x01C8BB40 CBNZ W8, 0x1C8BB4C
	0x01C8BB44 BL 0x1B6E8F8
	0x01C8BB48 LDR X0, [X20]
	0x01C8BB4C LDR X8, [X0 + 0xB8]
	0x01C8BB50 LDR X8, [X8]
	0x01C8BB54 CBZ X8, 0x1C8BB98
	0x01C8BB58 LDR X8, [X8 + 0xB8]
	0x01C8BB5C CBZ X8, 0x1C8BB98
	0x01C8BB60 LDR X8, [X8 + 0x58]
	0x01C8BB64 CBZ X8, 0x1C8BB98
	0x01C8BB68 LDR W8, [X8 + 0x4C]
	0x01C8BB6C CMP W8, 0x5
	0x01C8BB70 CSET W20, EQ
	0x01C8BB74 LDR W8, [X0 + 0xE0]
	0x01C8BB78 CBNZ W8, 0x1C8BB80
	0x01C8BB7C BL 0x1B6E8F8
	0x01C8BB80 MOV W0, W20
	0x01C8BB84 MOV X1, X19
	0x01C8BB88 LDP X20, X19, [X31 + 0x10]
	0x01C8BB8C MOVZ W2, 0x1
	0x01C8BB90 LDP X30, X21, [X31], #0x20
	0x01C8BB94 B 0x1C8A1F8
	0x01C8BB98 BL 0x1B6EA1C
	0x01C8BB9C STP X30, X21, [X31 - 0x20]!
	0x01C8BBA0 STP X20, X19, [X31 + 0x10]
	0x01C8BBA4 ADRP X21, 0x2598000
	0x01C8BBA8 ADRP X20, 0x22C2000
	0x01C8BBAC LDRB W8, [X21 + 0x385]
	0x01C8BBB0 LDR X20, [X20 + 0x4E8]
	0x01C8BBB4 MOV X19, X0
	0x01C8BBB8 TBNZ X8, 0x0, 0x1C8BBDC
	0x01C8BBBC ADRP X0, 0x22C2000
	0x01C8BBC0 LDR X0, [X0 + 0x4E8]
	0x01C8BBC4 BL 0x1B6E7F0
	0x01C8BBC8 ADRP X0, 0x22C2000
	0x01C8BBCC LDR X0, [X0 + 0x6C0]
	0x01C8BBD0 BL 0x1B6E7F0
	0x01C8BBD4 MOVZ W8, 0x1
	0x01C8BBD8 STRB W8, [X21 + 0x385]
	0x01C8BBDC LDR X0, [X20]
	0x01C8BBE0 LDR W8, [X0 + 0xE0]
	0x01C8BBE4 CBNZ W8, 0x1C8BBEC
	0x01C8BBE8 BL 0x1B6E8F8
	0x01C8BBEC ADRP X21, 0x2598000
	0x01C8BBF0 LDRB W8, [X21 + 0x443]
	0x01C8BBF4 CBNZ W8, 0x1C8BC0C
	0x01C8BBF8 ADRP X0, 0x22C2000
	0x01C8BBFC LDR X0, [X0 + 0x4E8]
	0x01C8BC00 BL 0x1B6E7F0
	0x01C8BC04 MOVZ W8, 0x1
	0x01C8BC08 STRB W8, [X21 + 0x443]
	0x01C8BC0C LDR X0, [X20]
	0x01C8BC10 LDR W8, [X0 + 0xE0]
	0x01C8BC14 CBNZ W8, 0x1C8BC20
	0x01C8BC18 BL 0x1B6E8F8
	0x01C8BC1C LDR X0, [X20]
	0x01C8BC20 LDR X8, [X0 + 0xB8]
	0x01C8BC24 LDR X8, [X8]
	0x01C8BC28 CBZ X8, 0x1C8BCD8
	0x01C8BC2C LDR X8, [X8 + 0xB8]
	0x01C8BC30 CBZ X8, 0x1C8BCD8
	0x01C8BC34 LDR X8, [X8 + 0x48]
	0x01C8BC38 CBZ X8, 0x1C8BCD8
	0x01C8BC3C LDR W8, [X8 + 0x4C]
	0x01C8BC40 CMP W8, 0x5
	0x01C8BC44 B.NE 0x1C8BC50
	0x01C8BC48 MOVZ W20, 0x1
	0x01C8BC4C B 0x1C8BCB4
	0x01C8BC50 LDR W8, [X0 + 0xE0]
	0x01C8BC54 CBNZ W8, 0x1C8BC5C
	0x01C8BC58 BL 0x1B6E8F8
	0x01C8BC5C LDRB W8, [X21 + 0x443]
	0x01C8BC60 CBNZ W8, 0x1C8BC78
	0x01C8BC64 ADRP X0, 0x22C2000
	0x01C8BC68 LDR X0, [X0 + 0x4E8]
	0x01C8BC6C BL 0x1B6E7F0
	0x01C8BC70 MOVZ W8, 0x1
	0x01C8BC74 STRB W8, [X21 + 0x443]
	0x01C8BC78 LDR X0, [X20]
	0x01C8BC7C LDR W8, [X0 + 0xE0]
	0x01C8BC80 CBNZ W8, 0x1C8BC8C
	0x01C8BC84 BL 0x1B6E8F8
	0x01C8BC88 LDR X0, [X20]
	0x01C8BC8C LDR X8, [X0 + 0xB8]
	0x01C8BC90 LDR X8, [X8]
	0x01C8BC94 CBZ X8, 0x1C8BCD8
	0x01C8BC98 LDR X8, [X8 + 0xB8]
	0x01C8BC9C CBZ X8, 0x1C8BCD8
	0x01C8BCA0 LDR X8, [X8 + 0x58]
	0x01C8BCA4 CBZ X8, 0x1C8BCD8
	0x01C8BCA8 LDR W8, [X8 + 0x4C]
	0x01C8BCAC CMP W8, 0x5
	0x01C8BCB0 CSET W20, EQ
	0x01C8BCB4 LDR W8, [X0 + 0xE0]
	0x01C8BCB8 CBNZ W8, 0x1C8BCC0
	0x01C8BCBC BL 0x1B6E8F8
	0x01C8BCC0 MOV W0, W20
	0x01C8BCC4 MOV X1, X19
	0x01C8BCC8 LDP X20, X19, [X31 + 0x10]
	0x01C8BCCC MOVZ W2, 0x1
	0x01C8BCD0 LDP X30, X21, [X31], #0x20
	0x01C8BCD4 B 0x1C8A1F8
	0x01C8BCD8 BL 0x1B6EA1C
	0x01C8BCDC STP X30, X21, [X31 - 0x20]!
	0x01C8BCE0 STP X20, X19, [X31 + 0x10]
	0x01C8BCE4 ADRP X21, 0x2598000
	0x01C8BCE8 ADRP X20, 0x22C2000
	0x01C8BCEC LDRB W8, [X21 + 0x386]
	0x01C8BCF0 LDR X20, [X20 + 0x4E8]
	0x01C8BCF4 MOV X19, X0
	0x01C8BCF8 TBNZ X8, 0x0, 0x1C8BD1C
	0x01C8BCFC ADRP X0, 0x22C2000
	0x01C8BD00 LDR X0, [X0 + 0x4E8]
	0x01C8BD04 BL 0x1B6E7F0
	0x01C8BD08 ADRP X0, 0x22C2000
	0x01C8BD0C LDR X0, [X0 + 0x6C8]
	0x01C8BD10 BL 0x1B6E7F0
	0x01C8BD14 MOVZ W8, 0x1
	0x01C8BD18 STRB W8, [X21 + 0x386]
	0x01C8BD1C LDR X0, [X20]
	0x01C8BD20 LDR W8, [X0 + 0xE0]
	0x01C8BD24 CBNZ W8, 0x1C8BD30
	0x01C8BD28 BL 0x1B6E8F8
	0x01C8BD2C LDR X0, [X20]
	0x01C8BD30 LDR X8, [X0 + 0xB8]
	0x01C8BD34 LDRB W9, [X8 + 0x1A]
	0x01C8BD38 CBNZ W9, 0x1C8BD58
	0x01C8BD3C LDR W9, [X0 + 0xE0]
	0x01C8BD40 CBNZ W9, 0x1C8BD50
	0x01C8BD44 BL 0x1B6E8F8
	0x01C8BD48 LDR X0, [X20]
	0x01C8BD4C LDR X8, [X0 + 0xB8]
	0x01C8BD50 LDRB W8, [X8 + 0x18]
	0x01C8BD54 CBZ W8, 0x1C8BD90
	0x01C8BD58 LDR W8, [X0 + 0xE0]
	0x01C8BD5C CBNZ W8, 0x1C8BD68
	0x01C8BD60 BL 0x1B6E8F8
	0x01C8BD64 LDR X0, [X20]
	0x01C8BD68 LDR X8, [X0 + 0xB8]
	0x01C8BD6C LDR X0, [X8 + 0x20]
	0x01C8BD70 CBZ X0, 0x1C8BDAC
	0x01C8BD74 ADRP X8, 0x22C2000
	0x01C8BD78 LDR X8, [X8 + 0x6C8]
	0x01C8BD7C MOV X1, X19
	0x01C8BD80 LDP X20, X19, [X31 + 0x10]
	0x01C8BD84 LDR X2, [X8]
	0x01C8BD88 LDP X30, X21, [X31], #0x20
	0x01C8BD8C B 0x2E4671C
	0x01C8BD90 LDR W8, [X0 + 0xE0]
	0x01C8BD94 CBNZ W8, 0x1C8BD9C
	0x01C8BD98 BL 0x1B6E8F8
	0x01C8BD9C MOV X0, X19
	0x01C8BDA0 LDP X20, X19, [X31 + 0x10]
	0x01C8BDA4 LDP X30, X21, [X31], #0x20
	0x01C8BDA8 B 0x1C8A140
	0x01C8BDAC BL 0x1B6EA1C
	0x01C8BDB0 STP X30, X21, [X31 - 0x20]!
	0x01C8BDB4 STP X20, X19, [X31 + 0x10]
	0x01C8BDB8 ADRP X21, 0x2598000
	0x01C8BDBC ADRP X20, 0x22C2000
	0x01C8BDC0 LDRB W8, [X21 + 0x387]
	0x01C8BDC4 LDR X20, [X20 + 0x4E8]
	0x01C8BDC8 MOV X19, X0
	0x01C8BDCC TBNZ X8, 0x0, 0x1C8BDF0
	0x01C8BDD0 ADRP X0, 0x22C2000
	0x01C8BDD4 LDR X0, [X0 + 0x4E8]
	0x01C8BDD8 BL 0x1B6E7F0
	0x01C8BDDC ADRP X0, 0x22C2000
	0x01C8BDE0 LDR X0, [X0 + 0x6C8]
	0x01C8BDE4 BL 0x1B6E7F0
	0x01C8BDE8 MOVZ W8, 0x1
	0x01C8BDEC STRB W8, [X21 + 0x387]
	0x01C8BDF0 LDR X0, [X20]
	0x01C8BDF4 LDR W8, [X0 + 0xE0]
	0x01C8BDF8 CBNZ W8, 0x1C8BE04
	0x01C8BDFC BL 0x1B6E8F8
	0x01C8BE00 LDR X0, [X20]
	0x01C8BE04 LDR X8, [X0 + 0xB8]
	0x01C8BE08 LDRB W9, [X8 + 0x1A]
	0x01C8BE0C CBNZ W9, 0x1C8BE2C
	0x01C8BE10 LDR W9, [X0 + 0xE0]
	0x01C8BE14 CBNZ W9, 0x1C8BE24
	0x01C8BE18 BL 0x1B6E8F8
	0x01C8BE1C LDR X0, [X20]
	0x01C8BE20 LDR X8, [X0 + 0xB8]
	0x01C8BE24 LDRB W8, [X8 + 0x18]
	0x01C8BE28 CBZ W8, 0x1C8BE64
	0x01C8BE2C LDR W8, [X0 + 0xE0]
	0x01C8BE30 CBNZ W8, 0x1C8BE3C
	0x01C8BE34 BL 0x1B6E8F8
	0x01C8BE38 LDR X0, [X20]
	0x01C8BE3C LDR X8, [X0 + 0xB8]
	0x01C8BE40 LDR X0, [X8 + 0x20]
	0x01C8BE44 CBZ X0, 0x1C8BE80
	0x01C8BE48 ADRP X8, 0x22C2000
	0x01C8BE4C LDR X8, [X8 + 0x6C8]
	0x01C8BE50 MOV X1, X19
	0x01C8BE54 LDP X20, X19, [X31 + 0x10]
	0x01C8BE58 LDR X2, [X8]
	0x01C8BE5C LDP X30, X21, [X31], #0x20
	0x01C8BE60 B 0x2E4671C
	0x01C8BE64 LDR W8, [X0 + 0xE0]
	0x01C8BE68 CBNZ W8, 0x1C8BE70
	0x01C8BE6C BL 0x1B6E8F8
	0x01C8BE70 MOV X0, X19
	0x01C8BE74 LDP X20, X19, [X31 + 0x10]
	0x01C8BE78 LDP X30, X21, [X31], #0x20
	0x01C8BE7C B 0x1C8A19C
	0x01C8BE80 BL 0x1B6EA1C
	0x01C8BE84 STP X30, X23, [X31 - 0x30]!
	0x01C8BE88 STP X22, X21, [X31 + 0x10]
	0x01C8BE8C STP X20, X19, [X31 + 0x20]
	0x01C8BE90 ADRP X22, 0x2598000
	0x01C8BE94 ADRP X23, 0x22C2000
	0x01C8BE98 LDRB W8, [X22 + 0x396]
	0x01C8BE9C LDR X23, [X23 + 0x670]
	0x01C8BEA0 MOV W19, W2
	0x01C8BEA4 MOV X21, X1
	0x01C8BEA8 MOV X20, X0
	0x01C8BEAC TBNZ X8, 0x0, 0x1C8BEC4
	0x01C8BEB0 ADRP X0, 0x22C2000
	0x01C8BEB4 LDR X0, [X0 + 0x670]
	0x01C8BEB8 BL 0x1B6E7F0
	0x01C8BEBC MOVZ W8, 0x1
	0x01C8BEC0 STRB W8, [X22 + 0x396]
	0x01C8BEC4 LDR X0, [X23]
	0x01C8BEC8 LDR W8, [X0 + 0xE0]
	0x01C8BECC CBNZ W8, 0x1C8BED4
	0x01C8BED0 BL 0x1B6E8F8
	0x01C8BED4 MOV X0, X20
	0x01C8BED8 MOV X1, X21
	0x01C8BEDC MOV X2, X31
	0x01C8BEE0 BL 0x321C5DC
	0x01C8BEE4 AND W8, W19, 0x1
	0x01C8BEE8 STRB W8, [X20 + 0x8C]
	0x01C8BEEC LDP X20, X19, [X31 + 0x20]
	0x01C8BEF0 LDP X22, X21, [X31 + 0x10]
	0x01C8BEF4 LDP X30, X23, [X31], #0x30
	0x01C8BEF8 RET
	0x01C8BEFC STP X29, X30, [X31 - 0x60]!
	0x01C8BF00 STP X28, X27, [X31 + 0x10]
	0x01C8BF04 STP X26, X25, [X31 + 0x20]
	0x01C8BF08 STP X24, X23, [X31 + 0x30]
	0x01C8BF0C STP X22, X21, [X31 + 0x40]
	0x01C8BF10 STP X20, X19, [X31 + 0x50]
	0x01C8BF14 ADRP X20, 0x2598000
	0x01C8BF18 LDRB W8, [X20 + 0x38B]
	0x01C8BF1C MOV X19, X0
	0x01C8BF20 TBNZ X8, 0x0, 0x1C8BF98
	0x01C8BF24 ADRP X0, 0x22C2000
	0x01C8BF28 LDR X0, [X0 + 0x4E8]
	0x01C8BF2C BL 0x1B6E7F0
	0x01C8BF30 ADRP X0, 0x22C2000
	0x01C8BF34 LDR X0, [X0 + 0x5E0]
	0x01C8BF38 BL 0x1B6E7F0
	0x01C8BF3C ADRP X0, 0x22C2000
	0x01C8BF40 LDR X0, [X0 + 0x5E8]
	0x01C8BF44 BL 0x1B6E7F0
	0x01C8BF48 ADRP X0, 0x22C2000
	0x01C8BF4C LDR X0, [X0 + 0x488]
	0x01C8BF50 BL 0x1B6E7F0
	0x01C8BF54 ADRP X0, 0x22C2000
	0x01C8BF58 LDR X0, [X0 + 0x6D0]
	0x01C8BF5C BL 0x1B6E7F0
	0x01C8BF60 ADRP X0, 0x22C2000
	0x01C8BF64 LDR X0, [X0 + 0x6D8]
	0x01C8BF68 BL 0x1B6E7F0
	0x01C8BF6C ADRP X0, 0x22C2000
	0x01C8BF70 LDR X0, [X0 + 0x6E0]
	0x01C8BF74 BL 0x1B6E7F0
	0x01C8BF78 ADRP X0, 0x22C2000
	0x01C8BF7C LDR X0, [X0 + 0x6E8]
	0x01C8BF80 BL 0x1B6E7F0
	0x01C8BF84 ADRP X0, 0x22C2000
	0x01C8BF88 LDR X0, [X0 + 0x6F0]
	0x01C8BF8C BL 0x1B6E7F0
	0x01C8BF90 MOVZ W8, 0x1
	0x01C8BF94 STRB W8, [X20 + 0x38B]
	0x01C8BF98 CBZ X19, 0x1C8C3C4
	0x01C8BF9C ADRP X24, 0x22C2000
	0x01C8BFA0 LDR X8, [X19]
	0x01C8BFA4 LDR X24, [X24 + 0x5E0]
	0x01C8BFA8 LDRH W9, [X8 + 0x12E]
	0x01C8BFAC LDR X1, [X24]
	0x01C8BFB0 CBZ X9, 0x1C8BFD4
	0x01C8BFB4 LDR X10, [X8 + 0xB0]
	0x01C8BFB8 ADD X10, X10, 0x8
	0x01C8BFBC LDUR X11, [X10 - 0x8]
	0x01C8BFC0 CMP X11, X1
	0x01C8BFC4 B.EQ 0x1C8BFE4
	0x01C8BFC8 SUBS X9, X9, 0x1
	0x01C8BFCC ADD X10, X10, 0x10
	0x01C8BFD0 B.NE 0x1C8BFBC
	0x01C8BFD4 MOV X0, X19
	0x01C8BFD8 MOV W2, W31
	0x01C8BFDC BL 0x1BB4284
	0x01C8BFE0 B 0x1C8BFF0
	0x01C8BFE4 LDRSW X9, [X10]
	0x01C8BFE8 ADD X8, X8, X9, 0x4, LSL
	0x01C8BFEC ADD X0, X8, 0x138
	0x01C8BFF0 LDP X8, X1, [X0]
	0x01C8BFF4 MOV X0, X19
	0x01C8BFF8 BLR X8
	0x01C8BFFC CMP W0, 0x2
	0x01C8C000 B.GE 0x1C8C04C
	0x01C8C004 ADRP X10, 0x22C1000
	0x01C8C008 LDR X8, [X19]
	0x01C8C00C B 0x3D19150
	0x01C8C010 LDRH W9, [X8 + 0x12E]
	0x01C8C014 LDR X1, [X10]
	0x01C8C018 CBZ X9, 0x1C8C03C
	0x01C8C01C LDR X10, [X8 + 0xB0]
	0x01C8C020 ADD X10, X10, 0x8
	0x01C8C024 LDUR X11, [X10 - 0x8]
	0x01C8C028 CMP X11, X1
	0x01C8C02C B.EQ 0x1C8C0BC
	0x01C8C030 SUBS X9, X9, 0x1
	0x01C8C034 ADD X10, X10, 0x10
	0x01C8C038 B.NE 0x1C8C024
	0x01C8C03C MOV X0, X19
	0x01C8C040 MOV W2, W31
	0x01C8C044 BL 0x1BB4284
	0x01C8C048 B 0x1C8C0C8
	0x01C8C04C ADRP X23, 0x22C1000
	0x01C8C050 LDR X23, [X23 + 0x4E8]
	0x01C8C054 LDR X0, [X23]
	0x01C8C058 LDR W8, [X0 + 0xE0]
	0x01C8C05C CBNZ W8, 0x1C8C068
	0x01C8C060 BL 0x1B6E8F8
	0x01C8C064 LDR X0, [X23]
	0x01C8C068 LDR X8, [X0 + 0xB8]
	0x01C8C06C LDR X0, [X8 + 0x68]
	0x01C8C070 CBZ X0, 0x1C8C3C4
	0x01C8C074 MOV X1, X31
	0x01C8C078 BL 0x309B884
	0x01C8C07C LDR X8, [X19]
	0x01C8C080 LDR X1, [X24]
	0x01C8C084 LDRH W9, [X8 + 0x12E]
	0x01C8C088 CBZ X9, 0x1C8C0AC
	0x01C8C08C LDR X10, [X8 + 0xB0]
	0x01C8C090 ADD X10, X10, 0x8
	0x01C8C094 LDUR X11, [X10 - 0x8]
	0x01C8C098 CMP X11, X1
	0x01C8C09C B.EQ 0x1C8C100
	0x01C8C0A0 SUBS X9, X9, 0x1
	0x01C8C0A4 ADD X10, X10, 0x10
	0x01C8C0A8 B.NE 0x1C8C094
	0x01C8C0AC MOV X0, X19
	0x01C8C0B0 MOV W2, W31
	0x01C8C0B4 BL 0x1BB4284
	0x01C8C0B8 B 0x1C8C10C
	0x01C8C0BC LDRSW X9, [X10]
	0x01C8C0C0 ADD X8, X8, X9, 0x4, LSL
	0x01C8C0C4 ADD X0, X8, 0x138
	0x01C8C0C8 LDP X8, X2, [X0]
	0x01C8C0CC MOV X0, X19
	0x01C8C0D0 MOV W1, W31
	0x01C8C0D4 BLR X8
	0x01C8C0D8 CBZ X0, 0x1C8C3C4
	0x01C8C0DC MOV X1, X31
	0x01C8C0E0 BL 0x3227E8C
	0x01C8C0E4 LDP X20, X19, [X31 + 0x50]
	0x01C8C0E8 LDP X22, X21, [X31 + 0x40]
	0x01C8C0EC LDP X24, X23, [X31 + 0x30]
	0x01C8C0F0 LDP X26, X25, [X31 + 0x20]
	0x01C8C0F4 LDP X28, X27, [X31 + 0x10]
	0x01C8C0F8 LDP X29, X30, [X31], #0x60
	0x01C8C0FC B 0x1C8C8C0
	0x01C8C100 LDRSW X9, [X10]
	0x01C8C104 ADD X8, X8, X9, 0x4, LSL
	0x01C8C108 ADD X0, X8, 0x138
	0x01C8C10C LDP X8, X1, [X0]
	0x01C8C110 MOV X0, X19
	0x01C8C114 BLR X8
	0x01C8C118 ADRP X8, 0x22C1000
	0x01C8C11C LDR X8, [X8 + 0x488]
	0x01C8C120 MOV W20, W0
	0x01C8C124 LDR X8, [X8]
	0x01C8C128 LDR W9, [X8 + 0xE0]
	0x01C8C12C CBNZ W9, 0x1C8C138
	0x01C8C130 MOV X0, X8
	0x01C8C134 BL 0x1B6E8F8
	0x01C8C138 MOVZ W0, 0x5
	0x01C8C13C MOV W1, W20
	0x01C8C140 MOV X2, X31
	0x01C8C144 BL 0x31E8538
	0x01C8C148 MOV W20, W0
	0x01C8C14C SUBS W25, W0, 0x1
	0x01C8C150 B.LT 0x1C8C2C4
	0x01C8C154 ADRP X27, 0x22C1000
	0x01C8C158 ADRP X28, 0x22C1000
	0x01C8C15C ADRP X29, 0x22C1000
	0x01C8C160 LDR X27, [X27 + 0x5E8]
	0x01C8C164 LDR X28, [X28 + 0x6D0]
	0x01C8C168 LDR X29, [X29 + 0x6D8]
	0x01C8C16C MOV W21, W31
	0x01C8C170 MOV X26, X31
	0x01C8C174 LDR X0, [X23]
	0x01C8C178 LDR W8, [X0 + 0xE0]
	0x01C8C17C CBNZ W8, 0x1C8C188
	0x01C8C180 BL 0x1B6E8F8
	0x01C8C184 LDR X0, [X23]
	0x01C8C188 LDR X9, [X0 + 0xB8]
	0x01C8C18C LDR X8, [X19]
	0x01C8C190 LDR X1, [X27]
	0x01C8C194 LDR X22, [X9 + 0x68]
	0x01C8C198 LDRH W9, [X8 + 0x12E]
	0x01C8C19C CBZ X9, 0x1C8C1C0
	0x01C8C1A0 LDR X10, [X8 + 0xB0]
	0x01C8C1A4 ADD X10, X10, 0x8
	0x01C8C1A8 LDUR X11, [X10 - 0x8]
	0x01C8C1AC CMP X11, X1
	0x01C8C1B0 B.EQ 0x1C8C1D0
	0x01C8C1B4 SUBS X9, X9, 0x1
	0x01C8C1B8 ADD X10, X10, 0x10
	0x01C8C1BC B.NE 0x1C8C1A8
	0x01C8C1C0 MOV X0, X19
	0x01C8C1C4 MOV W2, W31
	0x01C8C1C8 BL 0x1BB4284
	0x01C8C1CC B 0x1C8C1DC
	0x01C8C1D0 LDRSW X9, [X10]
	0x01C8C1D4 ADD X8, X8, X9, 0x4, LSL
	0x01C8C1D8 ADD X0, X8, 0x138
	0x01C8C1DC LDP X8, X2, [X0]
	0x01C8C1E0 MOV X0, X19
	0x01C8C1E4 MOV W1, W21
	0x01C8C1E8 BLR X8
	0x01C8C1EC CMP X0, 0x0
	0x01C8C1F0 CSEL X26, X26, X22, EQ
	0x01C8C1F4 CBZ X0, 0x1C8C238
	0x01C8C1F8 LDR X8, [X19]
	0x01C8C1FC LDR X1, [X27]
	0x01C8C200 LDRH W9, [X8 + 0x12E]
	0x01C8C204 CBZ X9, 0x1C8C228
	0x01C8C208 LDR X10, [X8 + 0xB0]
	0x01C8C20C ADD X10, X10, 0x8
	0x01C8C210 LDUR X11, [X10 - 0x8]
	0x01C8C214 CMP X11, X1
	0x01C8C218 B.EQ 0x1C8C240
	0x01C8C21C SUBS X9, X9, 0x1
	0x01C8C220 ADD X10, X10, 0x10
	0x01C8C224 B.NE 0x1C8C210
	0x01C8C228 MOV X0, X19
	0x01C8C22C MOV W2, W31
	0x01C8C230 BL 0x1BB4284
	0x01C8C234 B 0x1C8C24C
	0x01C8C238 LDR X1, [X28]
	0x01C8C23C B 0x1C8C274
	0x01C8C240 LDRSW X9, [X10]
	0x01C8C244 ADD X8, X8, X9, 0x4, LSL
	0x01C8C248 ADD X0, X8, 0x138
	0x01C8C24C LDP X8, X2, [X0]
	0x01C8C250 MOV X0, X19
	0x01C8C254 MOV W1, W21
	0x01C8C258 BLR X8
	0x01C8C25C CBZ X0, 0x1C8C3C4
	0x01C8C260 MOV X1, X31
	0x01C8C264 BL 0x3227E8C
	0x01C8C268 BL 0x1C8C8C0
	0x01C8C26C MOV X1, X0
	0x01C8C270 MOV X22, X26
	0x01C8C274 CBZ X22, 0x1C8C3C4
	0x01C8C278 MOV X0, X22
	0x01C8C27C MOV X2, X31
	0x01C8C280 BL 0x309C1A4
	0x01C8C284 CMP W21, W25
	0x01C8C288 B.GE 0x1C8C2B8
	0x01C8C28C LDR X0, [X23]
	0x01C8C290 LDR W8, [X0 + 0xE0]
	0x01C8C294 CBNZ W8, 0x1C8C2A0
	0x01C8C298 BL 0x1B6E8F8
	0x01C8C29C LDR X0, [X23]
	0x01C8C2A0 LDR X8, [X0 + 0xB8]
	0x01C8C2A4 LDR X0, [X8 + 0x68]
	0x01C8C2A8 CBZ X0, 0x1C8C3C4
	0x01C8C2AC LDR X1, [X29]
	0x01C8C2B0 MOV X2, X31
	0x01C8C2B4 BL 0x309C1A4
	0x01C8C2B8 ADD W21, W21, 0x1
	0x01C8C2BC CMP W21, W20
	0x01C8C2C0 B.NE 0x1C8C174
	0x01C8C2C4 LDR X8, [X19]
	0x01C8C2C8 LDR X1, [X24]
	0x01C8C2CC LDRH W9, [X8 + 0x12E]
	0x01C8C2D0 CBZ X9, 0x1C8C2F4
	0x01C8C2D4 LDR X10, [X8 + 0xB0]
	0x01C8C2D8 ADD X10, X10, 0x8
	0x01C8C2DC LDUR X11, [X10 - 0x8]
	0x01C8C2E0 CMP X11, X1
	0x01C8C2E4 B.EQ 0x1C8C304
	0x01C8C2E8 SUBS X9, X9, 0x1
	0x01C8C2EC ADD X10, X10, 0x10
	0x01C8C2F0 B.NE 0x1C8C2DC
	0x01C8C2F4 MOV X0, X19
	0x01C8C2F8 MOV W2, W31
	0x01C8C2FC BL 0x1BB4284
	0x01C8C300 B 0x1C8C310
	0x01C8C304 LDRSW X9, [X10]
	0x01C8C308 ADD X8, X8, X9, 0x4, LSL
	0x01C8C30C ADD X0, X8, 0x138
	0x01C8C310 LDP X8, X1, [X0]
	0x01C8C314 MOV X0, X19
	0x01C8C318 BLR X8
	0x01C8C31C CMP W20, W0
	0x01C8C320 B.GE 0x1C8C358
	0x01C8C324 LDR X0, [X23]
	0x01C8C328 LDR W8, [X0 + 0xE0]
	0x01C8C32C CBNZ W8, 0x1C8C338
	0x01C8C330 BL 0x1B6E8F8
	0x01C8C334 LDR X0, [X23]
	0x01C8C338 LDR X8, [X0 + 0xB8]
	0x01C8C33C LDR X0, [X8 + 0x68]
	0x01C8C340 CBZ X0, 0x1C8C3C4
	0x01C8C344 ADRP X8, 0x22C1000
	0x01C8C348 LDR X8, [X8 + 0x6E0]
	0x01C8C34C MOV X2, X31
	0x01C8C350 LDR X1, [X8]
	0x01C8C354 BL 0x309C1A4
	0x01C8C358 LDR X0, [X23]
	0x01C8C35C LDR W8, [X0 + 0xE0]
	0x01C8C360 CBNZ W8, 0x1C8C36C
	0x01C8C364 BL 0x1B6E8F8
	0x01C8C368 LDR X0, [X23]
	0x01C8C36C LDR X8, [X0 + 0xB8]
	0x01C8C370 LDR X0, [X8 + 0x68]
	0x01C8C374 CBZ X0, 0x1C8C3C4
	0x01C8C378 LDR X8, [X0]
	0x01C8C37C LDP X9, X1, [X8 + 0x168]
	0x01C8C380 BLR X9
	0x01C8C384 ADRP X8, 0x22C1000
	0x01C8C388 LDR X8, [X8 + 0x6F0]
	0x01C8C38C ADRP X9, 0x22C1000
	0x01C8C390 LDR X9, [X9 + 0x6E8]
	0x01C8C394 LDP X20, X19, [X31 + 0x50]
	0x01C8C398 LDR X8, [X8]
	0x01C8C39C LDP X22, X21, [X31 + 0x40]
	0x01C8C3A0 LDR X2, [X9]
	0x01C8C3A4 LDP X24, X23, [X31 + 0x30]
	0x01C8C3A8 LDP X26, X25, [X31 + 0x20]
	0x01C8C3AC LDP X28, X27, [X31 + 0x10]
	0x01C8C3B0 MOV X1, X0
	0x01C8C3B4 MOV X0, X8
	0x01C8C3B8 MOV X3, X31
	0x01C8C3BC LDP X29, X30, [X31], #0x60
	0x01C8C3C0 B 0x3090300
	0x01C8C3C4 BL 0x1B6EA1C
	0x01C8C3C8 MOV X1, X31
	0x01C8C3CC B 0x32276F8
	0x01C8C3D0 STR X30, [X31 - 0x30]!
	0x01C8C3D4 STP X22, X21, [X31 + 0x10]
	0x01C8C3D8 STP X20, X19, [X31 + 0x20]
	0x01C8C3DC ADRP X19, 0x2597000
	0x01C8C3E0 ADRP X21, 0x22C1000
	0x01C8C3E4 LDRB W8, [X19 + 0x389]
	0x01C8C3E8 LDR X21, [X21 + 0x4E8]
	0x01C8C3EC TBNZ X8, 0x0, 0x1C8C434
	0x01C8C3F0 ADRP X0, 0x22C1000
	0x01C8C3F4 LDR X0, [X0 + 0x4E8]
	0x01C8C3F8 BL 0x1B6E7F0
	0x01C8C3FC ADRP X0, 0x22C1000
	0x01C8C400 LDR X0, [X0 + 0x6C8]
	0x01C8C404 BL 0x1B6E7F0
	0x01C8C408 ADRP X0, 0x22C1000
	0x01C8C40C LDR X0, [X0 + 0x5A0]
	0x01C8C410 BL 0x1B6E7F0
	0x01C8C414 ADRP X0, 0x22C1000
	0x01C8C418 LDR X0, [X0 + 0x610]
	0x01C8C41C BL 0x1B6E7F0
	0x01C8C420 ADRP X0, 0x22C1000
	0x01C8C424 LDR X0, [X0 + 0x488]
	0x01C8C428 BL 0x1B6E7F0
	0x01C8C42C MOVZ W8, 0x1
	0x01C8C430 STRB W8, [X19 + 0x389]
	0x01C8C434 LDR X0, [X21]
	0x01C8C438 LDR W8, [X0 + 0xE0]
	0x01C8C43C CBNZ W8, 0x1C8C448
	0x01C8C440 BL 0x1B6E8F8
	0x01C8C444 LDR X0, [X21]
	0x01C8C448 LDR X8, [X0 + 0xB8]
	0x01C8C44C LDR X9, [X8 + 0x20]
	0x01C8C450 CBZ X9, 0x1C8C5AC
	0x01C8C454 LDR W9, [X9 + 0x18]
	0x01C8C458 CMP W9, 0x1
	0x01C8C45C B.LT 0x1C8C59C
	0x01C8C460 LDR W9, [X0 + 0xE0]
	0x01C8C464 CBNZ W9, 0x1C8C474
	0x01C8C468 BL 0x1B6E8F8
	0x01C8C46C LDR X8, [X21]
	0x01C8C470 LDR X8, [X8 + 0xB8]
	0x01C8C474 LDR X0, [X8 + 0x28]
	0x01C8C478 CBZ X0, 0x1C8C5AC
	0x01C8C47C LDP W2, W9, [X0 + 0x18]
	0x01C8C480 ADD W9, W9, 0x1
	0x01C8C484 CMP W2, 0x1
	0x01C8C488 STP W31, W9, [X0 + 0x18]
	0x01C8C48C B.LT 0x1C8C4B0
	0x01C8C490 LDR X0, [X0 + 0x10]
	0x01C8C494 MOV W1, W31
	0x01C8C498 MOV X3, X31
	0x01C8C49C BL 0x32093A0
	0x01C8C4A0 LDR X8, [X21]
	0x01C8C4A4 LDR X8, [X8 + 0xB8]
	0x01C8C4A8 LDR X0, [X8 + 0x28]
	0x01C8C4AC CBZ X0, 0x1C8C5AC
	0x01C8C4B0 ADRP X9, 0x22C1000
	0x01C8C4B4 LDR X9, [X9 + 0x6C8]
	0x01C8C4B8 LDR X1, [X8 + 0x20]
	0x01C8C4BC LDR X2, [X9]
	0x01C8C4C0 BL 0x2E4671C
	0x01C8C4C4 LDR X0, [X21]
	0x01C8C4C8 LDR X8, [X0 + 0xB8]
	0x01C8C4CC LDR X9, [X8 + 0x20]
	0x01C8C4D0 CBZ X9, 0x1C8C5AC
	0x01C8C4D4 LDP W2, W10, [X9 + 0x18]
	0x01C8C4D8 ADD W10, W10, 0x1
	0x01C8C4DC CMP W2, 0x1
	0x01C8C4E0 STP W31, W10, [X9 + 0x18]
	0x01C8C4E4 B.LT 0x1C8C500
	0x01C8C4E8 LDR X0, [X9 + 0x10]
	0x01C8C4EC MOV W1, W31
	0x01C8C4F0 MOV X3, X31
	0x01C8C4F4 BL 0x32093A0
	0x01C8C4F8 LDR X0, [X21]
	0x01C8C4FC LDR X8, [X0 + 0xB8]
	0x01C8C500 LDR W9, [X8 + 0x38]
	0x01C8C504 CMP W9, 0x5
	0x01C8C508 B.GE 0x1C8C5B0
	0x01C8C50C ADRP X22, 0x22C1000
	0x01C8C510 LDR W10, [X0 + 0xE0]
	0x01C8C514 LDR X22, [X22 + 0x488]
	0x01C8C518 CBNZ W10, 0x1C8C52C
	0x01C8C51C BL 0x1B6E8F8
	0x01C8C520 LDR X8, [X21]
	0x01C8C524 LDR X8, [X8 + 0xB8]
	0x01C8C528 LDR W9, [X8 + 0x38]
	0x01C8C52C LDR X0, [X8 + 0x28]
	0x01C8C530 MOVZ W10, 0x1
	0x01C8C534 ADD W9, W9, 0x1
	0x01C8C538 STRB W10, [X8 + 0x19]
	0x01C8C53C STR W9, [X8 + 0x38]
	0x01C8C540 BL 0x1C8A140
	0x01C8C544 MOV X19, X31
	0x01C8C548 LDR X0, [X21]
	0x01C8C54C LDR W8, [X0 + 0xE0]
	0x01C8C550 CBNZ W8, 0x1C8C55C
	0x01C8C554 BL 0x1B6E8F8
	0x01C8C558 LDR X0, [X21]
	0x01C8C55C LDR X8, [X22]
	0x01C8C560 LDR X9, [X0 + 0xB8]
	0x01C8C564 LDR W10, [X8 + 0xE0]
	0x01C8C568 LDR W20, [X9 + 0x38]
	0x01C8C56C CBNZ W10, 0x1C8C578
	0x01C8C570 MOV X0, X8
	0x01C8C574 BL 0x1B6E8F8
	0x01C8C578 SUB W1, W20, 0x1
	0x01C8C57C MOV W0, W31
	0x01C8C580 MOV X2, X31
	0x01C8C584 BL 0x31E8494
	0x01C8C588 LDR X8, [X21]
	0x01C8C58C LDR X8, [X8 + 0xB8]
	0x01C8C590 STR W0, [X8 + 0x38]
	0x01C8C594 STRB W31, [X8 + 0x19]
	0x01C8C598 CBNZ X19, 0x1C8C668
	0x01C8C59C LDP X20, X19, [X31 + 0x20]
	0x01C8C5A0 LDP X22, X21, [X31 + 0x10]
	0x01C8C5A4 LDR X30, [X31], #0x30
	0x01C8C5A8 RET
	0x01C8C5AC BL 0x1B6EA1C
	0x01C8C5B0 ADRP X19, 0x22C1000
	0x01C8C5B4 LDR X19, [X19 + 0x4E8]
	0x01C8C5B8 MOV X0, X19
	0x01C8C5BC BL 0x1B6E804
	0x01C8C5C0 BL 0x18F44F0
	0x01C8C5C4 MOV X0, X19
	0x01C8C5C8 BL 0x1B6E804
	0x01C8C5CC LDR X8, [X0 + 0xB8]
	0x01C8C5D0 ADRP X0, 0x22C1000
	0x01C8C5D4 STR W31, [X8 + 0x38]
	0x01C8C5D8 LDR X0, [X0 + 0x6F8]
	0x01C8C5DC BL 0x1B6E804
	0x01C8C5E0 BL 0x1B6EA0C
	0x01C8C5E4 MOV X19, X0
	0x01C8C5E8 ADRP X0, 0x22C1000
	0x01C8C5EC LDR X0, [X0 + 0x700]
	0x01C8C5F0 BL 0x1B6E804
	0x01C8C5F4 MOV X1, X0
	0x01C8C5F8 MOV X0, X19
	0x01C8C5FC MOV X2, X31
	0x01C8C600 BL 0x31F61F4
	0x01C8C604 ADRP X0, 0x22C1000
	0x01C8C608 LDR X0, [X0 + 0x628]
	0x01C8C60C BL 0x1B6E804
	0x01C8C610 BL 0x18F44F0
	0x01C8C614 ADRP X0, 0x22C1000
	0x01C8C618 LDR X0, [X0 + 0x658]
	0x01C8C61C BL 0x1B6E804
	0x01C8C620 MOV X20, X0
	0x01C8C624 ADRP X0, 0x22C1000
	0x01C8C628 LDR X0, [X0 + 0x708]
	0x01C8C62C BL 0x1B6E804
	0x01C8C630 MOV X4, X0
	0x01C8C634 MOVZ W0, 0x100
	0x01C8C638 MOVZ W5, 0x160
	0x01C8C63C MOV X1, X19
	0x01C8C640 MOV X2, X31
	0x01C8C644 MOV X3, X20
	0x01C8C648 MOV X6, X31
	0x01C8C64C BL 0x342B734
	0x01C8C650 ADRP X0, 0x22C1000
	0x01C8C654 LDR X0, [X0 + 0x710]
	0x01C8C658 BL 0x1B6E804
	0x01C8C65C MOV X1, X0
	0x01C8C660 MOV X0, X19
	0x01C8C664 BL 0x1B6E8E8
	0x01C8C668 MOV X0, X19
	0x01C8C66C BL 0x1B6EA14
	0x01C8C670 B 0x1C8C674
	0x01C8C674 MOV X20, X0
	0x01C8C678 CMP W1, 0x1
	0x01C8C67C B.NE 0x1C8C694
	0x01C8C680 MOV X0, X20
	0x01C8C684 BL 0x3D19840
	0x01C8C688 LDR X19, [X0]
	0x01C8C68C BL 0x3D19850
	0x01C8C690 B 0x1C8C548
	0x01C8C694 MOV X19, X31
	0x01C8C698 B 0x1C8C6A0
	0x01C8C69C MOV X20, X0
	0x01C8C6A0 LDR X0, [X21]
	0x01C8C6A4 LDR W8, [X0 + 0xE0]
	0x01C8C6A8 CBNZ W8, 0x1C8C6B4
	0x01C8C6AC BL 0x1B6E8F8
	0x01C8C6B0 LDR X0, [X21]
	0x01C8C6B4 LDR X8, [X22]
	0x01C8C6B8 LDR X9, [X0 + 0xB8]
	0x01C8C6BC LDR W10, [X8 + 0xE0]
	0x01C8C6C0 LDR W22, [X9 + 0x38]
	0x01C8C6C4 CBNZ W10, 0x1C8C6D0
	0x01C8C6C8 MOV X0, X8
	0x01C8C6CC BL 0x1B6E8F8
	0x01C8C6D0 SUB W1, W22, 0x1
	0x01C8C6D4 MOV W0, W31
	0x01C8C6D8 MOV X2, X31
	0x01C8C6DC BL 0x31E8494
	0x01C8C6E0 LDR X8, [X21]
	0x01C8C6E4 LDR X8, [X8 + 0xB8]
	0x01C8C6E8 STR W0, [X8 + 0x38]
	0x01C8C6EC STRB W31, [X8 + 0x19]
	0x01C8C6F0 CBNZ X19, 0x1C8C6FC
	0x01C8C6F4 MOV X0, X20
	0x01C8C6F8 BL 0x1C8418C
	0x01C8C6FC MOV X0, X19
	0x01C8C700 BL 0x1B6EA14
	0x01C8C704 BL 0x18F46A8
	0x01C8C708 STR X30, [X31 - 0x40]!
	0x01C8C70C STP X24, X23, [X31 + 0x10]
	0x01C8C710 STP X22, X21, [X31 + 0x20]
	0x01C8C714 STP X20, X19, [X31 + 0x30]
	0x01C8C718 ADRP X20, 0x2597000
	0x01C8C71C LDRB W8, [X20 + 0x38A]
	0x01C8C720 MOV X19, X0
	0x01C8C724 TBNZ X8, 0x0, 0x1C8C778
	0x01C8C728 ADRP X0, 0x22C1000
	0x01C8C72C LDR X0, [X0 + 0x4E8]
	0x01C8C730 BL 0x1B6E7F0
	0x01C8C734 ADRP X0, 0x22C1000
	0x01C8C738 LDR X0, [X0 + 0x718]
	0x01C8C73C BL 0x1B6E7F0
	0x01C8C740 ADRP X0, 0x22C1000
	0x01C8C744 LDR X0, [X0 + 0x628]
	0x01C8C748 BL 0x1B6E7F0
	0x01C8C74C ADRP X0, 0x22C1000
	0x01C8C750 LDR X0, [X0 + 0x720]
	0x01C8C754 BL 0x1B6E7F0
	0x01C8C758 ADRP X0, 0x22C1000
	0x01C8C75C LDR X0, [X0 + 0x728]
	0x01C8C760 BL 0x1B6E7F0
	0x01C8C764 ADRP X0, 0x22C1000
	0x01C8C768 LDR X0, [X0 + 0x658]
	0x01C8C76C BL 0x1B6E7F0
	0x01C8C770 MOVZ W8, 0x1
	0x01C8C774 STRB W8, [X20 + 0x38A]
	0x01C8C778 CBZ X19, 0x1C8C8A4
	0x01C8C77C LDR X8, [X19 + 0x18]
	0x01C8C780 CBZ X8, 0x1C8C8A4
	0x01C8C784 ADRP X20, 0x22C1000
	0x01C8C788 LDR X20, [X20 + 0x628]
	0x01C8C78C LDR X0, [X20]
	0x01C8C790 LDR W8, [X0 + 0xE0]
	0x01C8C794 CBNZ W8, 0x1C8C79C
	0x01C8C798 BL 0x1B6E8F8
	0x01C8C79C MOVZ W0, 0x3
	0x01C8C7A0 MOVZ W1, 0x100
	0x01C8C7A4 MOV X2, X31
	0x01C8C7A8 BL 0x342AC84
	0x01C8C7AC TBZ X0, 0x0, 0x1C8C834
	0x01C8C7B0 ADRP X8, 0x22C1000
	0x01C8C7B4 LDR X8, [X8 + 0x4E8]
	0x01C8C7B8 LDR X0, [X8]
	0x01C8C7BC LDR W8, [X0 + 0xE0]
	0x01C8C7C0 CBNZ W8, 0x1C8C7C8
	0x01C8C7C4 BL 0x1B6E8F8
	0x01C8C7C8 MOV X0, X19
	0x01C8C7CC BL 0x1C8BEFC
	0x01C8C7D0 ADRP X8, 0x22C1000
	0x01C8C7D4 LDR X8, [X8 + 0x728]
	0x01C8C7D8 MOV X1, X0
	0x01C8C7DC MOV X2, X31
	0x01C8C7E0 LDR X8, [X8]
	0x01C8C7E4 MOV X0, X8
	0x01C8C7E8 BL 0x3084780
	0x01C8C7EC LDR X8, [X20]
	0x01C8C7F0 MOV X20, X0
	0x01C8C7F4 LDR W9, [X8 + 0xE0]
	0x01C8C7F8 CBNZ W9, 0x1C8C804
	0x01C8C7FC MOV X0, X8
	0x01C8C800 BL 0x1B6E8F8
	0x01C8C804 ADRP X8, 0x22C1000
	0x01C8C808 ADRP X9, 0x22C1000
	0x01C8C80C LDR X8, [X8 + 0x658]
	0x01C8C810 LDR X9, [X9 + 0x720]
	0x01C8C814 MOVZ W0, 0x100
	0x01C8C818 MOVZ W5, 0x17B
	0x01C8C81C LDR X3, [X8]
	0x01C8C820 LDR X4, [X9]
	0x01C8C824 MOV X1, X20
	0x01C8C828 MOV X2, X31
	0x01C8C82C MOV X6, X31
	0x01C8C830 BL 0x342B368
	0x01C8C834 LDR X8, [X19 + 0x18]
	0x01C8C838 CMP W8, 0x1
	0x01C8C83C B.LT 0x1C8C8A4
	0x01C8C840 ADRP X23, 0x22C1000
	0x01C8C844 ADRP X24, 0x22C1000
	0x01C8C848 LDR X23, [X23 + 0x4E8]
	0x01C8C84C LDR X24, [X24 + 0x718]
	0x01C8C850 MOV X21, X31
	0x01C8C854 AND X8, X8, 0x0
	0x01C8C858 ADD X22, X19, 0x20
	0x01C8C85C CMP X21, W8, UXTW
	0x01C8C860 B.CS 0x1C8C8BC
	0x01C8C864 LDR X0, [X23]
	0x01C8C868 LDR X20, [X22, X21, LSL #3]
	0x01C8C86C LDR W8, [X0 + 0xE0]
	0x01C8C870 CBNZ W8, 0x1C8C87C
	0x01C8C874 BL 0x1B6E8F8
	0x01C8C878 LDR X0, [X23]
	0x01C8C87C LDR X8, [X0 + 0xB8]
	0x01C8C880 LDR X0, [X8 + 0x40]
	0x01C8C884 CBZ X0, 0x1C8C8B8
	0x01C8C888 LDR X2, [X24]
	0x01C8C88C MOV X1, X20
	0x01C8C890 BL 0x27D3ED8
	0x01C8C894 LDR W8, [X19 + 0x18]
	0x01C8C898 ADD X21, X21, 0x1
	0x01C8C89C CMP X21, W8, SXTW
	0x01C8C8A0 B.LT 0x1C8C85C
	0x01C8C8A4 LDP X20, X19, [X31 + 0x30]
	0x01C8C8A8 LDP X22, X21, [X31 + 0x20]
	0x01C8C8AC LDP X24, X23, [X31 + 0x10]
	0x01C8C8B0 LDR X30, [X31], #0x40
	0x01C8C8B4 RET
	0x01C8C8B8 BL 0x1B6EA1C
	0x01C8C8BC BL 0x1B6EA24
	0x01C8C8C0 STR X30, [X31 - 0x20]!
	0x01C8C8C4 STP X20, X19, [X31 + 0x10]
	0x01C8C8C8 ADRP X20, 0x2597000
	0x01C8C8CC LDRB W8, [X20 + 0x3B8]
	0x01C8C8D0 MOV X19, X0
	0x01C8C8D4 TBNZ X8, 0x0, 0x1C8C8EC
	0x01C8C8D8 ADRP X0, 0x22C1000
	0x01C8C8DC LDR X0, [X0 + 0x730]
	0x01C8C8E0 BL 0x1B6E7F0
	0x01C8C8E4 MOVZ W8, 0x1
	0x01C8C8E8 STRB W8, [X20 + 0x3B8]
	0x01C8C8EC CBZ X19, 0x1C8C954
	0x01C8C8F0 LDR X8, [X19]
	0x01C8C8F4 MOV X0, X19
	0x01C8C8F8 LDR X9, [X8 + 0x2E8]
	0x01C8C8FC LDR X1, [X8 + 0x2F0]
	0x01C8C900 BLR X9
	0x01C8C904 CBZ X0, 0x1C8C954
	0x01C8C908 ADRP X20, 0x22C1000
	0x01C8C90C LDR X20, [X20 + 0x730]
	0x01C8C910 MOV X2, X31
	0x01C8C914 MOV X19, X0
	0x01C8C918 LDR X1, [X20]
	0x01C8C91C BL 0x308FDAC
	0x01C8C920 TBZ X0, 0x0, 0x1C8C944
	0x01C8C924 LDR X8, [X20]
	0x01C8C928 CBZ X8, 0x1C8C954
	0x01C8C92C LDR W1, [X8 + 0x10]
	0x01C8C930 MOV X0, X19
	0x01C8C934 LDP X20, X19, [X31 + 0x10]
	0x01C8C938 MOV X2, X31
	0x01C8C93C LDR X30, [X31], #0x20
	0x01C8C940 B 0x3094248
	0x01C8C944 MOV X0, X19
	0x01C8C948 LDP X20, X19, [X31 + 0x10]
	0x01C8C94C LDR X30, [X31], #0x20
	0x01C8C950 RET
	0x01C8C954 BL 0x1B6EA1C
	0x01C8C958 STR X30, [X31 - 0x30]!
	0x01C8C95C STP X22, X21, [X31 + 0x10]
	0x01C8C960 STP X20, X19, [X31 + 0x20]
	0x01C8C964 ADRP X21, 0x2597000
	0x01C8C968 ADRP X22, 0x22C1000
	0x01C8C96C LDRB W8, [X21 + 0x38C]
	0x01C8C970 LDR X22, [X22 + 0x4E8]
	0x01C8C974 MOV W20, W1
	0x01C8C978 MOV X19, X0
	0x01C8C97C TBNZ X8, 0x0, 0x1C8CA00
	0x01C8C980 ADRP X0, 0x22C1000
	0x01C8C984 LDR X0, [X0 + 0x4E8]
	0x01C8C988 BL 0x1B6E7F0
	0x01C8C98C ADRP X0, 0x22C1000
	0x01C8C990 LDR X0, [X0 + 0x738]
	0x01C8C994 BL 0x1B6E7F0
	0x01C8C998 ADRP X0, 0x22C1000
	0x01C8C99C LDR X0, [X0 + 0x5B0]
	0x01C8C9A0 BL 0x1B6E7F0
	0x01C8C9A4 ADRP X0, 0x22C1000
	0x01C8C9A8 LDR X0, [X0 + 0x5B8]
	0x01C8C9AC BL 0x1B6E7F0
	0x01C8C9B0 ADRP X0, 0x22C1000
	0x01C8C9B4 LDR X0, [X0 + 0x5C0]
	0x01C8C9B8 BL 0x1B6E7F0
	0x01C8C9BC ADRP X0, 0x22C1000
	0x01C8C9C0 LDR X0, [X0 + 0x628]
	0x01C8C9C4 BL 0x1B6E7F0
	0x01C8C9C8 ADRP X0, 0x22C1000
	0x01C8C9CC LDR X0, [X0 + 0x740]
	0x01C8C9D0 BL 0x1B6E7F0
	0x01C8C9D4 ADRP X0, 0x22C1000
	0x01C8C9D8 LDR X0, [X0 + 0x748]
	0x01C8C9DC BL 0x1B6E7F0
	0x01C8C9E0 ADRP X0, 0x22C1000
	0x01C8C9E4 LDR X0, [X0 + 0x750]
	0x01C8C9E8 BL 0x1B6E7F0
	0x01C8C9EC ADRP X0, 0x22C1000
	0x01C8C9F0 LDR X0, [X0 + 0x658]
	0x01C8C9F4 BL 0x1B6E7F0
	0x01C8C9F8 MOVZ W8, 0x1
	0x01C8C9FC STRB W8, [X21 + 0x38C]
	0x01C8CA00 MOV X0, X31
	0x01C8CA04 BL 0x324D5D4
	0x01C8CA08 LDR X8, [X22]
	0x01C8CA0C MOV X21, X0
	0x01C8CA10 LDR W9, [X8 + 0xE0]
	0x01C8CA14 CBNZ W9, 0x1C8CA24
	0x01C8CA18 MOV X0, X8
	0x01C8CA1C BL 0x1B6E8F8
	0x01C8CA20 LDR X8, [X22]
	0x01C8CA24 LDR X8, [X8 + 0xB8]
	0x01C8CA28 LDR X8, [X8 + 0x60]
	0x01C8CA2C CMP X21, X8
	0x01C8CA30 B.NE 0x1C8CBFC
	0x01C8CA34 CBZ X19, 0x1C8CB60
	0x01C8CA38 TBZ X20, 0x0, 0x1C8CA4C
	0x01C8CA3C MOVZ W1, 0x1
	0x01C8CA40 MOV X0, X19
	0x01C8CA44 MOV X2, X31
	0x01C8CA48 BL 0x3425D2C
	0x01C8CA4C MOV X0, X19
	0x01C8CA50 MOV X1, X31
	0x01C8CA54 BL 0x3426160
	0x01C8CA58 TBZ X0, 0x0, 0x1C8CA88

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X19, 0x2599000
	015 Move W8, [X19+904]
	016 Move W27, W2
	017 Move X22, X1
	018 Move W21, W0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {103}
	023 Move X0, 0x22C3000
	024 Move X0, [X0+1256]
	025 Call 0x1B6F7F0
	026 Move X0, 0x22C3000
	027 Move X0, [X0+1456]
	028 Call 0x1B6F7F0
	029 Move X0, 0x22C3000
	030 Move X0, [X0+1464]
	031 Call 0x1B6F7F0
	032 Move X0, 0x22C3000
	033 Move X0, [X0+1472]
	034 Call 0x1B6F7F0
	035 Move X0, 0x22C3000
	036 Move X0, [X0+1480]
	037 Call 0x1B6F7F0
	038 Move X0, 0x22C3000
	039 Move X0, [X0+1488]
	040 Call 0x1B6F7F0
	041 Move X0, 0x22C3000
	042 Move X0, [X0+1496]
	043 Call 0x1B6F7F0
	044 Move X0, 0x22C3000
	045 Move X0, [X0+1504]
	046 Call 0x1B6F7F0
	047 Move X0, 0x22C3000
	048 Move X0, [X0+1512]
	049 Call 0x1B6F7F0
	050 Move X0, 0x22C3000
	051 Move X0, [X0+1352]
	052 Call 0x1B6F7F0
	053 Move X0, 0x22C3000
	054 Move X0, [X0+1520]
	055 Call 0x1B6F7F0
	056 Move X0, 0x22C3000
	057 Move X0, [X0+1528]
	058 Call 0x1B6F7F0
	059 Move X0, 0x22C3000
	060 Move X0, [X0+1536]
	061 Call 0x1B6F7F0
	062 Move X0, 0x22C3000
	063 Move X0, [X0+1544]
	064 Call 0x1B6F7F0
	065 Move X0, 0x22C3000
	066 Move X0, [X0+1552]
	067 Call 0x1B6F7F0
	068 Move X0, 0x22C3000
	069 Move X0, [X0+1560]
	070 Call 0x1B6F7F0
	071 Move X0, 0x22C3000
	072 Move X0, [X0+1568]
	073 Call 0x1B6F7F0
	074 Move X0, 0x22C3000
	075 Move X0, [X0+1576]
	076 Call 0x1B6F7F0
	077 Move X0, 0x22C3000
	078 Move X0, [X0+1584]
	079 Call 0x1B6F7F0
	080 Move X0, 0x22C3000
	081 Move X0, [X0+1592]
	082 Call 0x1B6F7F0
	083 Move X0, 0x22C3000
	084 Move X0, [X0+1600]
	085 Call 0x1B6F7F0
	086 Move X0, 0x22C3000
	087 Move X0, [X0+1608]
	088 Call 0x1B6F7F0
	089 Move X0, 0x22C3000
	090 Move X0, [X0+1616]
	091 Call 0x1B6F7F0
	092 Move X0, 0x22C3000
	093 Move X0, [X0+1624]
	094 Call 0x1B6F7F0
	095 Move X0, 0x22C3000
	096 Move X0, [X0+1632]
	097 Call 0x1B6F7F0
	098 Move X0, 0x22C3000
	099 Move X0, [X0+1640]
	100 Call 0x1B6F7F0
	101 Move W8, 1
	102 Move [X19+904], W8
	103 Move [X31+64], X31
	104 Move [X31+72], X31
	105 Move [X31+80], X31
	106 Compare X22, 0
	107 JumpIfEqual {1206}
	108 Move X19, 0x22C3000
	109 Move X8, [X22]
	110 Move X19, [X19+1504]
	111 NotImplemented "Instruction LDRH not yet implemented."
	112 Move X1, [X19]
	113 Compare X9, 0
	114 JumpIfEqual {121}
	115 Move X10, [X8+176]
	116 Add X10, X10, 8
	117 NotImplemented "Instruction LDUR not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Subtract X9, X9, 1
	120 Add X10, X10, 16
	121 Move X0, X22
	122 Move W2, W31
	123 Call 0x1BB5284
	124 NotImplemented "Instruction LDRSW not yet implemented."
	125 Add X8, X8, X9
	126 Add X0, X8, 312
	127 Move X8, [X0]
	128 Move X1, [X0+8]
	129 Move X0, X22
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Compare W0, 0
	132 JumpIfEqual {1206}
	133 Move X0, X31
	134 Call Thread.get_CurrentThread
	135 Move X20, 0x22C3000
	136 Move X20, [X20+1256]
	137 Move X23, X0
	138 Move X8, [X20]
	139 Move W9, [X8+224]
	140 Compare W9, 0
	141 JumpIfNotEqual {145}
	142 Move X0, X8
	143 Call 0x1B6F8F8
	144 Move X8, [X20]
	145 Move X9, [X8+184]
	146 Move X10, [X9+96]
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move W10, [X8+224]
	149 Compare W10, 0
	150 JumpIfNotEqual {157}
	151 Move X0, X8
	152 Call 0x1B6F8F8
	153 Move X8, 0x22C3000
	154 Move X8, [X8+1256]
	155 Move X8, [X8]
	156 Move X9, [X8+184]
	157 Move W10, [X9+24]
	158 Compare W10, 0
	159 JumpIfNotEqual {1289}
	160 Move W10, [X8+224]
	161 Compare W10, 0
	162 JumpIfNotEqual {169}
	163 Move X0, X8
	164 Call 0x1B6F8F8
	165 Move X8, 0x22C3000
	166 Move X8, [X8+1256]
	167 Move X8, [X8]
	168 Move X9, [X8+184]
	169 Move W9, [X9+26]
	170 Compare W9, 0
	171 JumpIfNotEqual {1363}
	172 Move [X31+48], X31
	173 Move TEMP, X21
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 JumpIfNotEqual {204}
	177 Move X20, 0x22C3000
	178 Move X20, [X20+1576]
	179 Move X0, [X20]
	180 Move W8, [X0+224]
	181 Compare W8, 0
	182 JumpIfNotEqual {184}
	183 Call 0x1B6F8F8
	184 Move W0, 3
	185 Move W1, 256
	186 Move X2, X31
	187 Call Log.IsEnabled, X0, X1
	188 Move W23, W0
	189 Move X0, [X20]
	190 Move W8, [X0+224]
	191 Compare W8, 0
	192 JumpIfNotEqual {194}
	193 Call 0x1B6F8F8
	194 Move W0, 4
	195 Move W1, 256
	196 Move X2, X31
	197 Call Log.IsEnabled, X0, X1
	198 Move X8, 0x22C3000
	199 Move X8, [X8+1256]
	200 And W24, W23, 1
	201 Xor W26, W23, 1
	202 And W20, W0, 1
	203 Move X8, [X8]
	204 Move W24, W31
	205 Move W20, W31
	206 Move W26, 1
	207 Move W9, [X8+224]
	208 Compare W9, 0
	209 JumpIfNotEqual {215}
	210 Move X0, X8
	211 Call 0x1B6F8F8
	212 Move X8, 0x22C3000
	213 Move X8, [X8+1256]
	214 Move X8, [X8]
	215 Move X8, [X8+184]
	216 Move X0, [X8+112]
	217 Compare X0, 0
	218 JumpIfEqual {1416}
	219 Move X1, X31
	220 Call StringBuilder.Clear, X0
	221 Move X8, 0x22C3000
	222 Move X8, [X8+1256]
	223 Move X8, [X8]
	224 Move X8, [X8+184]
	225 Move X23, [X8+16]
	226 Compare X23, 0
	227 JumpIfEqual {1418}
	228 Move X10, 0x22C3000
	229 Move X8, [X23]
	230 Move X10, [X10+1352]
	231 Move [X31+12], W20
	232 NotImplemented "Instruction LDRH not yet implemented."
	233 Move X1, [X10]
	234 Compare X9, 0
	235 JumpIfEqual {242}
	236 Move X10, [X8+176]
	237 Add X10, X10, 8
	238 NotImplemented "Instruction LDUR not yet implemented."
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Subtract X9, X9, 1
	241 Add X10, X10, 16
	242 Move W2, 1
	243 Move X0, X23
	244 Call 0x1BB5284
	245 Move W9, [X10]
	246 Add W9, W9, 1
	247 Add X8, X8, W9
	248 Add X0, X8, 312
	249 Move X8, [X0]
	250 Move X2, [X0+8]
	251 Move W1, 1
	252 Move X0, X23
	253 Move W20, 1
	254 NotImplemented "Instruction BLR not yet implemented."
	255 Move X8, 0x22C3000
	256 Move X8, [X8+1256]
	257 Move X8, [X8]
	258 Move X8, [X8+184]
	259 Move [X8+24], W20
	260 Move X8, [X22]
	261 Move X1, [X19]
	262 Move W20, [X31+12]
	263 NotImplemented "Instruction LDRH not yet implemented."
	264 Compare X9, 0
	265 JumpIfEqual {272}
	266 Move X10, [X8+176]
	267 Add X10, X10, 8
	268 NotImplemented "Instruction LDUR not yet implemented."
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Subtract X9, X9, 1
	271 Add X10, X10, 16
	272 Move X0, X22
	273 Move W2, W31
	274 Call 0x1BB5284
	275 NotImplemented "Instruction LDRSW not yet implemented."
	276 Add X8, X8, X9
	277 Add X0, X8, 312
	278 Move X8, [X0]
	279 Move X1, [X0+8]
	280 Move X0, X22
	281 NotImplemented "Instruction BLR not yet implemented."
	282 Move W23, W0
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Move [X31+8], W24
	285 Move [X31+16], W21
	286 Move [X31+20], W31
	287 Move X21, 0x22C3000
	288 Move X21, [X21+1512]
	289 Move W24, W31
	290 Move W19, 1
	291 Move X8, [X22]
	292 Move X1, [X21]
	293 NotImplemented "Instruction LDRH not yet implemented."
	294 Compare X9, 0
	295 JumpIfEqual {302}
	296 Move X10, [X8+176]
	297 Add X10, X10, 8
	298 NotImplemented "Instruction LDUR not yet implemented."
	299 NotImplemented "Instruction CMP not yet implemented."
	300 Subtract X9, X9, 1
	301 Add X10, X10, 16
	302 Move X0, X22
	303 Move W2, W31
	304 Call 0x1BB5284
	305 NotImplemented "Instruction LDRSW not yet implemented."
	306 Add X8, X8, X9
	307 Add X0, X8, 312
	308 Move X8, [X0]
	309 Move X2, [X0+8]
	310 Move X0, X22
	311 Move W1, W24
	312 NotImplemented "Instruction BLR not yet implemented."
	313 Move X28, X0
	314 Compare X0, 0
	315 JumpIfEqual {742}
	316 Move X8, [X28]
	317 Move X9, [X8+376]
	318 Move X1, [X8+384]
	319 Move X0, X28
	320 NotImplemented "Instruction BLR not yet implemented."
	321 Move X9, 0x22C3000
	322 Move X9, [X9+1256]
	323 Move W8, W0
	324 And W19, W19, W8
	325 Move X0, [X9]
	326 Move W9, [X0+224]
	327 Compare W9, 0
	328 JumpIfNotEqual {330}
	329 Call 0x1B6F8F8
	330 Move X8, 0x2599000
	331 Move W8, [X8+1091]
	332 Compare W8, 0
	333 JumpIfNotEqual {340}
	334 Move X0, 0x22C3000
	335 Move X0, [X0+1256]
	336 Call 0x1B6F7F0
	337 Move W8, 1
	338 Move X9, 0x2599000
	339 Move [X9+1091], W8
	340 Move X8, 0x22C3000
	341 Move X8, [X8+1256]
	342 Move X0, [X8]
	343 Move W8, [X0+224]
	344 Compare W8, 0
	345 JumpIfNotEqual {350}
	346 Call 0x1B6F8F8
	347 Move X8, 0x22C3000
	348 Move X8, [X8+1256]
	349 Move X0, [X8]
	350 Move X8, [X0+184]
	351 Move X9, [X28]
	352 Move X1, [X8]
	353 Move X8, [X9+424]
	354 Move X2, [X9+432]
	355 Move X0, X28
	356 NotImplemented "Instruction BLR not yet implemented."
	357 Move TEMP, X26
	358 And TEMP, TEMP, 1
	359 Compare TEMP, 1
	360 JumpIfNotEqual {362}
	361 Move W26, 1
	362 Move X8, [X28]
	363 Move X9, [X8+376]
	364 Move X1, [X8+384]
	365 Move X0, X28
	366 NotImplemented "Instruction BLR not yet implemented."
	367 Move TEMP, X0
	368 And TEMP, TEMP, 1
	369 Compare TEMP, 1
	370 JumpIfEqual {741}
	371 Move X8, 0x22C3000
	372 Move X8, [X8+1256]
	373 Move X0, [X8]
	374 Move W8, [X0+224]
	375 Compare W8, 0
	376 JumpIfNotEqual {381}
	377 Call 0x1B6F8F8
	378 Move X8, 0x22C3000
	379 Move X8, [X8+1256]
	380 Move X0, [X8]
	381 Move X8, [X0+184]
	382 Move X0, [X8+112]
	383 Compare X0, 0
	384 JumpIfEqual {758}
	385 Move X1, X31
	386 Call StringBuilder.get_Length, X0
	387 Move W8, 0x2327
	388 NotImplemented "Instruction CMP not yet implemented."
	389 Move X8, 0x22C3000
	390 Move X8, [X8+1256]
	391 Move X0, [X8]
	392 Move W8, [X0+224]
	393 Compare W8, 0
	394 JumpIfNotEqual {399}
	395 Call 0x1B6F8F8
	396 Move X8, 0x22C3000
	397 Move X8, [X8+1256]
	398 Move X0, [X8]
	399 Move X9, [X0+184]
	400 Move X29, [X9+16]
	401 Compare X29, 0
	402 JumpIfEqual {760}
	403 Move X8, [X29]
	404 Move X10, 0x22C3000
	405 Move X25, [X9+112]
	406 NotImplemented "Instruction LDRH not yet implemented."
	407 Move X10, [X10+1352]
	408 Move X1, [X10]
	409 Compare X9, 0
	410 JumpIfEqual {417}
	411 Move X10, [X8+176]
	412 Add X10, X10, 8
	413 NotImplemented "Instruction LDUR not yet implemented."
	414 NotImplemented "Instruction CMP not yet implemented."
	415 Subtract X9, X9, 1
	416 Add X10, X10, 16
	417 Move W2, 2
	418 Move X0, X29
	419 Call 0x1BB5284
	420 Move W9, [X10]
	421 Add W9, W9, 2
	422 Add X8, X8, W9
	423 Add X0, X8, 312
	424 Move X8, [X0]
	425 Move X1, [X0+8]
	426 Move X0, X29
	427 NotImplemented "Instruction BLR not yet implemented."
	428 Compare X0, 0
	429 JumpIfEqual {762}
	430 Move X9, 0x22C3000
	431 Move W8, [X0+24]
	432 Move X9, [X9+1528]
	433 Move X0, [X9]
	434 Move W9, [X31+20]
	435 Subtract W8, W8, W9
	436 Move [X31+24], W8
	437 Add X1, X31, 24
	438 Call 0x1B6F900
	439 Move X8, 0x22C3000
	440 Move X8, [X8+1600]
	441 Move X2, X0
	442 Move X0, [X8]
	443 Move X1, X28
	444 Move X3, X31
	445 Call String.Format, X0, X1, X2
	446 Move X1, X0
	447 Compare X25, 0
	448 JumpIfEqual {763}
	449 Move X0, X25
	450 Move X2, X31
	451 Call StringBuilder.Append, X0, X1
	452 Move X8, 0x22C3000
	453 Move X8, [X8+1256]
	454 Move X8, [X8]
	455 Move X8, [X8+184]
	456 Move X0, [X8+112]
	457 Compare X0, 0
	458 JumpIfEqual {764}
	459 Move X1, X31
	460 Call StringBuilder.get_Length, X0
	461 Move W8, 0x2329
	462 NotImplemented "Instruction CMP not yet implemented."
	463 Move X8, 0x22C3000
	464 Move X8, [X8+1256]
	465 Move X0, [X8]
	466 Move W8, [X0+224]
	467 Compare W8, 0
	468 JumpIfNotEqual {473}
	469 Call 0x1B6F8F8
	470 Move X8, 0x22C3000
	471 Move X8, [X8+1256]
	472 Move X0, [X8]
	473 Move X8, [X0+184]
	474 Move X0, [X8+112]
	475 Compare X0, 0
	476 JumpIfEqual {771}
	477 Move X8, 0x22C3000
	478 Move X8, [X8+1592]
	479 Move X1, [X8]
	480 Move X2, X31
	481 Call StringBuilder.Append, X0, X1
	482 Compare W20, 0
	483 JumpIfEqual {699}
	484 Move X8, 0x22C3000
	485 Move X8, [X8+1256]
	486 Move X0, [X8]
	487 Move W8, [X0+224]
	488 Compare W8, 0
	489 JumpIfNotEqual {494}
	490 Call 0x1B6F8F8
	491 Move X8, 0x22C3000
	492 Move X8, [X8+1256]
	493 Move X0, [X8]
	494 Move X8, [X0+184]
	495 Move X0, [X8+112]
	496 Compare X0, 0
	497 JumpIfEqual {769}
	498 Move X1, X31
	499 Call StringBuilder.get_Length, X0
	500 Move W29, [X31+20]
	501 Move W8, 0x2327
	502 NotImplemented "Instruction CMP not yet implemented."
	503 Move X8, 0x22C3000
	504 Move X8, [X8+1256]
	505 Move X0, [X8]
	506 Move W8, [X0+224]
	507 Compare W8, 0
	508 JumpIfNotEqual {513}
	509 Call 0x1B6F8F8
	510 Move X8, 0x22C3000
	511 Move X8, [X8+1256]
	512 Move X0, [X8]
	513 Move X8, [X0+184]
	514 Move X25, [X8+16]
	515 Compare X25, 0
	516 JumpIfEqual {744}
	517 Move X8, [X25]
	518 Move X10, 0x22C3000
	519 NotImplemented "Instruction LDRH not yet implemented."
	520 Move X10, [X10+1352]
	521 Move X1, [X10]
	522 Compare X9, 0
	523 JumpIfEqual {530}
	524 Move X10, [X8+176]
	525 Add X10, X10, 8
	526 NotImplemented "Instruction LDUR not yet implemented."
	527 NotImplemented "Instruction CMP not yet implemented."
	528 Subtract X9, X9, 1
	529 Add X10, X10, 16
	530 Move W2, 2
	531 Move X0, X25
	532 Call 0x1BB5284
	533 Move W9, [X10]
	534 Add W9, W9, 2
	535 Add X8, X8, W9
	536 Add X0, X8, 312
	537 Move X8, [X0]
	538 Move X1, [X0+8]
	539 Move X0, X25
	540 NotImplemented "Instruction BLR not yet implemented."
	541 Compare X0, 0
	542 JumpIfEqual {746}
	543 Move W8, [X0+24]
	544 NotImplemented "Instruction CMP not yet implemented."
	545 Move X8, 0x22C3000
	546 Move X8, [X8+1256]
	547 Move X0, [X8]
	548 Move W8, [X0+224]
	549 Compare W8, 0
	550 JumpIfNotEqual {555}
	551 Call 0x1B6F8F8
	552 Move X8, 0x22C3000
	553 Move X8, [X8+1256]
	554 Move X0, [X8]
	555 Move X8, [X0+184]
	556 Move X25, [X8+16]
	557 Compare X25, 0
	558 JumpIfEqual {752}
	559 Move X8, [X25]
	560 Move X10, 0x22C3000
	561 NotImplemented "Instruction LDRH not yet implemented."
	562 Move X10, [X10+1352]
	563 Move X1, [X10]
	564 Compare X9, 0
	565 JumpIfEqual {572}
	566 Move X10, [X8+176]
	567 Add X10, X10, 8
	568 NotImplemented "Instruction LDUR not yet implemented."
	569 NotImplemented "Instruction CMP not yet implemented."
	570 Subtract X9, X9, 1
	571 Add X10, X10, 16
	572 Move W2, 2
	573 Move X0, X25
	574 Call 0x1BB5284
	575 Move W9, [X10]
	576 Add W9, W9, 2
	577 Add X8, X8, W9
	578 Add X0, X8, 312
	579 Move X8, [X0]
	580 Move X1, [X0+8]
	581 Move X0, X25
	582 NotImplemented "Instruction BLR not yet implemented."
	583 Compare X0, 0
	584 JumpIfEqual {748}
	585 Move X8, 0x22C3000
	586 Move X8, [X8+1568]
	587 Move X2, [X8]
	588 Move W1, W29
	589 Call List`1<Object>.get_Item, X0, X1
	590 Move X25, X0
	591 Compare X0, 0
	592 JumpIfEqual {750}
	593 Move X8, [X25]
	594 Move X10, 0x22C3000
	595 NotImplemented "Instruction LDRH not yet implemented."
	596 Move X10, [X10+1520]
	597 Move X1, [X10]
	598 Compare X9, 0
	599 JumpIfEqual {606}
	600 Move X10, [X8+176]
	601 Add X10, X10, 8
	602 NotImplemented "Instruction LDUR not yet implemented."
	603 NotImplemented "Instruction CMP not yet implemented."
	604 Subtract X9, X9, 1
	605 Add X10, X10, 16
	606 Move W2, 2
	607 Move X0, X25
	608 Call 0x1BB5284
	609 Move W9, [X10]
	610 Add W9, W9, 2
	611 Add X8, X8, W9
	612 Add X0, X8, 312
	613 Move X8, [X0]
	614 Move X1, [X0+8]
	615 Move X0, X25
	616 NotImplemented "Instruction BLR not yet implemented."
	617 And W8, W0, 255
	618 NotImplemented "Instruction CMP not yet implemented."
	619 Move X8, 0x22C3000
	620 Move X8, [X8+1256]
	621 Move X0, [X8]
	622 Move W8, [X0+224]
	623 Compare W8, 0
	624 JumpIfNotEqual {629}
	625 Call 0x1B6F8F8
	626 Move X8, 0x22C3000
	627 Move X8, [X8+1256]
	628 Move X0, [X8]
	629 Move X8, [X0+184]
	630 Move X0, [X8+112]
	631 Compare X0, 0
	632 JumpIfEqual {754}
	633 Move X8, 0x22C3000
	634 Move X8, [X8+1616]
	635 Move X1, [X8]
	636 Move X2, X31
	637 Call StringBuilder.Append, X0, X1
	638 Move X8, 0x22C3000
	639 Move X8, [X8+1256]
	640 Move X9, [X8]
	641 Move X8, [X25]
	642 Move X10, [X9+184]
	643 NotImplemented "Instruction LDRH not yet implemented."
	644 Move X26, [X10+112]
	645 Move X10, 0x22C3000
	646 Move X10, [X10+1520]
	647 Move X1, [X10]
	648 Compare X9, 0
	649 JumpIfEqual {656}
	650 Move X10, [X8+176]
	651 Add X10, X10, 8
	652 NotImplemented "Instruction LDUR not yet implemented."
	653 NotImplemented "Instruction CMP not yet implemented."
	654 Subtract X9, X9, 1
	655 Add X10, X10, 16
	656 Move W2, 9
	657 Move X0, X25
	658 Call 0x1BB5284
	659 Move W9, [X10]
	660 Add W9, W9, 9
	661 Add X8, X8, W9
	662 Add X0, X8, 312
	663 Move X8, [X0]
	664 Move X2, [X0+8]
	665 Move X0, X25
	666 Move X1, X26
	667 NotImplemented "Instruction BLR not yet implemented."
	668 Move X8, 0x22C3000
	669 Move X8, [X8+1256]
	670 Move X8, [X8]
	671 Move X8, [X8+184]
	672 Move X0, [X8+112]
	673 Compare X0, 0
	674 JumpIfEqual {756}
	675 Move X1, X31
	676 Call StringBuilder.get_Length, X0
	677 Move W8, 0x2329
	678 NotImplemented "Instruction CMP not yet implemented."
	679 Add W29, W29, 1
	680 Move X8, 0x22C3000
	681 Move X8, [X8+1256]
	682 Move X0, [X8]
	683 Move W8, [X0+224]
	684 Compare W8, 0
	685 JumpIfNotEqual {690}
	686 Call 0x1B6F8F8
	687 Move X8, 0x22C3000
	688 Move X8, [X8+1256]
	689 Move X0, [X8]
	690 Move X8, [X0+184]
	691 Move X0, [X8+112]
	692 Compare X0, 0
	693 JumpIfEqual {773}
	694 Move X8, 0x22C3000
	695 Move X8, [X8+1592]
	696 Move X1, [X8]
	697 Move X2, X31
	698 Call StringBuilder.Append, X0, X1
	699 Move X8, 0x22C3000
	700 Move X8, [X8+1256]
	701 Move X0, [X8]
	702 Move W8, [X0+224]
	703 Compare W8, 0
	704 JumpIfNotEqual {709}
	705 Call 0x1B6F8F8
	706 Move X8, 0x22C3000
	707 Move X8, [X8+1256]
	708 Move X0, [X8]
	709 Move X8, [X0+184]
	710 Move X25, [X8+16]
	711 Compare X25, 0
	712 JumpIfEqual {766}
	713 Move X8, [X25]
	714 Move X10, 0x22C3000
	715 NotImplemented "Instruction LDRH not yet implemented."
	716 Move X10, [X10+1352]
	717 Move X1, [X10]
	718 Compare X9, 0
	719 JumpIfEqual {726}
	720 Move X10, [X8+176]
	721 Add X10, X10, 8
	722 NotImplemented "Instruction LDUR not yet implemented."
	723 NotImplemented "Instruction CMP not yet implemented."
	724 Subtract X9, X9, 1
	725 Add X10, X10, 16
	726 Move W2, 2
	727 Move X0, X25
	728 Call 0x1BB5284
	729 Move W9, [X10]
	730 Add W9, W9, 2
	731 Add X8, X8, W9
	732 Add X0, X8, 312
	733 Move X8, [X0]
	734 Move X1, [X0+8]
	735 Move X0, X25
	736 NotImplemented "Instruction BLR not yet implemented."
	737 Compare X0, 0
	738 JumpIfEqual {768}
	739 Move W8, [X0+24]
	740 Move [X31+20], W8
	741 Move W26, W31
	742 Add W24, W24, 1
	743 NotImplemented "Instruction CMP not yet implemented."
	744 Move [X31+4], W27
	745 Call 0x1B6FA1C
	746 Move [X31+4], W27
	747 Call 0x1B6FA1C
	748 Move [X31+4], W27
	749 Call 0x1B6FA1C
	750 Move [X31+4], W27
	751 Call 0x1B6FA1C
	752 Move [X31+4], W27
	753 Call 0x1B6FA1C
	754 Move [X31+4], W27
	755 Call 0x1B6FA1C
	756 Move [X31+4], W27
	757 Call 0x1B6FA1C
	758 Move [X31+4], W27
	759 Call 0x1B6FA1C
	760 Move [X31+4], W27
	761 Call 0x1B6FA1C
	762 Call 0x1B6FA1C
	763 Call 0x1B6FA1C
	764 Move [X31+4], W27
	765 Call 0x1B6FA1C
	766 Move [X31+4], W27
	767 Call 0x1B6FA1C
	768 Call 0x1B6FA1C
	769 Move [X31+4], W27
	770 Call 0x1B6FA1C
	771 Move [X31+4], W27
	772 Call 0x1B6FA1C
	773 Move [X31+4], W27
	774 Call 0x1B6FA1C
	775 Move [X31+4], W27
	776 Move X29, X0
	777 Move W26, W31
	778 NotImplemented "Instruction CMP not yet implemented."
	779 Move X0, X29
	780 Call 0x3D1A840
	781 Move X25, X0
	782 Move X0, 0x22C3000
	783 Move X0, [X0+1648]
	784 Call 0x1B6F804
	785 Move X8, [X25]
	786 Move X1, [X8]
	787 Call 0x1B6FD6C
	788 Move TEMP, X0
	789 And TEMP, TEMP, 1
	790 Compare TEMP, 1
	791 JumpIfNotEqual {1434}
	792 Move X20, [X25]
	793 Call 0x3D1A850
	794 Move X0, 0x22C3000
	795 Move X0, [X0+1256]
	796 Call 0x1B6F804
	797 Move W8, [X0+224]
	798 Compare W8, 0
	799 JumpIfNotEqual {801}
	800 Call 0x1B6F8F8
	801 Move X0, 0x22C3000
	802 Move X0, [X0+1256]
	803 Call 0x1B6F804
	804 Move X8, [X0+184]
	805 Move X25, [X8+48]
	806 Move X0, 0x22C3000
	807 Move X0, [X0+1656]
	808 Call 0x1B6F804
	809 Call 0x1B6FA0C
	810 Move X29, X0
	811 Move X1, X31
	812 Call Object..ctor, X0
	813 Compare X29, 0
	814 JumpIfEqual {1442}
	815 Move [X29+16], X28
	816 Move [X29+24], X20
	817 Compare X25, 0
	818 JumpIfEqual {1443}
	819 Move X0, 0x22C3000
	820 Move X0, [X0+1664]
	821 Move W27, [X31+4]
	822 Call 0x1B6F804
	823 Move W9, [X25+28]
	824 Move X8, [X25+16]
	825 Add W9, W9, 1
	826 Move [X25+28], W9
	827 Compare X8, 0
	828 JumpIfEqual {1444}
	829 NotImplemented "Instruction LDRSW not yet implemented."
	830 Move W10, [X8+24]
	831 NotImplemented "Instruction CMP not yet implemented."
	832 Move W27, [X31+4]
	833 Move W20, [X31+12]
	834 Add W10, W9, 1
	835 Add X8, X8, X9
	836 Move [X25+24], W10
	837 Move [X8+32], X29
	838 Move X8, [X0+32]
	839 Move X8, [X8+192]
	840 Move X2, [X8+112]
	841 Move W27, [X31+4]
	842 Move X0, X25
	843 Move X1, X29
	844 Call List`1<Object>.AddWithResize, X0, X1
	845 Move W20, [X31+12]
	846 Move [X31+4], W27
	847 Move X29, X0
	848 Move W19, 1
	849 Move X8, 0x22C3000
	850 Move X8, [X8+1256]
	851 Move X0, [X8]
	852 Move W8, [X0+224]
	853 Compare W8, 0
	854 JumpIfEqual {857}
	855 Move W20, [X31+16]
	856 Move W21, [X31+8]
	857 Call 0x1B6F8F8
	858 Move W20, [X31+16]
	859 Move W21, [X31+8]
	860 Move X8, 0x22C3000
	861 Move X8, [X8+1256]
	862 Move X0, [X8]
	863 Move X8, [X0+184]
	864 Move X23, [X8+16]
	865 Move [X8+24], W31
	866 Compare X23, 0
	867 JumpIfEqual {1419}
	868 Move X8, [X23]
	869 Move X10, 0x22C3000
	870 NotImplemented "Instruction LDRH not yet implemented."
	871 Move X10, [X10+1352]
	872 Move X1, [X10]
	873 Compare X9, 0
	874 JumpIfEqual {881}
	875 Move X10, [X8+176]
	876 Add X10, X10, 8
	877 NotImplemented "Instruction LDUR not yet implemented."
	878 NotImplemented "Instruction CMP not yet implemented."
	879 Subtract X9, X9, 1
	880 Add X10, X10, 16
	881 Move W2, 1
	882 Move X0, X23
	883 Call 0x1BB5284
	884 Move W9, [X10]
	885 Add W9, W9, 1
	886 Add X8, X8, W9
	887 Add X0, X8, 312
	888 Move X8, [X0]
	889 Move X2, [X0+8]
	890 Move X0, X23
	891 Move W1, W31
	892 NotImplemented "Instruction BLR not yet implemented."
	893 Xor W24, W19, 1
	894 Move X19, 0x22C2000
	895 Move X19, [X19+1256]
	896 Compare W21, 0
	897 JumpIfEqual {996}
	898 Move TEMP, X24
	899 And TEMP, TEMP, 1
	900 Compare TEMP, 1
	901 JumpIfNotEqual {996}
	902 Move X0, [X19]
	903 Move W8, [X0+224]
	904 Compare W8, 0
	905 JumpIfNotEqual {907}
	906 Call 0x1B6F8F8
	907 Move X0, X22
	908 Call App.GetActionsDebugStr, X0
	909 Move X8, [X19]
	910 Move X8, [X8+184]
	911 Move X23, [X8+16]
	912 Compare X23, 0
	913 JumpIfEqual {1424}
	914 Move X8, [X23]
	915 Move X10, 0x22C2000
	916 Move X22, X0
	917 NotImplemented "Instruction LDRH not yet implemented."
	918 Move X10, [X10+1352]
	919 Move X1, [X10]
	920 Compare X9, 0
	921 JumpIfEqual {928}
	922 Move X10, [X8+176]
	923 Add X10, X10, 8
	924 NotImplemented "Instruction LDUR not yet implemented."
	925 NotImplemented "Instruction CMP not yet implemented."
	926 Subtract X9, X9, 1
	927 Add X10, X10, 16
	928 Move W2, 2
	929 Move X0, X23
	930 Call 0x1BB5284
	931 Move W9, [X10]
	932 Add W9, W9, 2
	933 Add X8, X8, W9
	934 Add X0, X8, 312
	935 Move X8, [X0]
	936 Move X1, [X0+8]
	937 Move X0, X23
	938 NotImplemented "Instruction BLR not yet implemented."
	939 Compare X0, 0
	940 JumpIfEqual {1426}
	941 Move X9, 0x22C2000
	942 Move W8, [X0+24]
	943 Move X9, [X9+1528]
	944 Move [X31+24], W8
	945 Move X0, [X9]
	946 Add X1, X31, 24
	947 Call 0x1B6F900
	948 Move X8, 0x22C2000
	949 Move X8, [X8+1632]
	950 Move X2, X0
	951 Move X0, [X8]
	952 Move X1, X22
	953 Move X3, X31
	954 Call String.Format, X0, X1, X2
	955 Move X8, [X19]
	956 Move X22, X0
	957 Move X8, [X8+184]
	958 Move X0, [X8+112]
	959 Compare X0, 0
	960 JumpIfEqual {1427}
	961 Move X8, [X0]
	962 Move X9, [X8+360]
	963 Move X1, [X8+368]
	964 NotImplemented "Instruction BLR not yet implemented."
	965 Move X1, X0
	966 Move X0, X22
	967 Move X2, X31
	968 Call String.Concat, X0, X1
	969 Move X8, 0x22C2000
	970 Move X8, [X8+1576]
	971 Move X22, X0
	972 Move X0, [X8]
	973 Move W8, [X0+224]
	974 Compare W8, 0
	975 JumpIfNotEqual {977}
	976 Call 0x1B6F8F8
	977 Move X8, 0x22C2000
	978 Move X9, 0x22C2000
	979 Move X8, [X8+1624]
	980 Move X9, [X9+1608]
	981 Move X3, [X8]
	982 Move X4, [X9]
	983 Move W0, 256
	984 Move W5, 286
	985 Move X1, X22
	986 Move X2, X31
	987 Move X6, X31
	988 Call Log.Info, X0, X1, X2, X3, X4, X5
	989 Move X8, [X19]
	990 Move X8, [X8+184]
	991 Move X0, [X8+112]
	992 Compare X0, 0
	993 JumpIfEqual {1429}
	994 Move X1, X31
	995 Call StringBuilder.Clear, X0
	996 Move X0, [X19]
	997 Move W8, [X0+224]
	998 Compare W8, 0
	999 JumpIfNotEqual {1004}
	1000 Call 0x1B6F8F8
	1001 Move X8, 0x22C2000
	1002 Move X8, [X8+1256]
	1003 Move X0, [X8]
	1004 Move X8, [X0+184]
	1005 Move X8, [X8+48]
	1006 Compare X8, 0
	1007 JumpIfEqual {1420}
	1008 Move W8, [X8+24]
	1009 NotImplemented "Instruction CMP not yet implemented."
	1010 Move X8, 0x22C2000
	1011 Move X8, [X8+1576]
	1012 Move X0, [X8]
	1013 Move W8, [X0+224]
	1014 Compare W8, 0
	1015 JumpIfNotEqual {1017}
	1016 Call 0x1B6F8F8
	1017 Move W0, 1
	1018 Move W1, 256
	1019 Move X2, X31
	1020 Call Log.IsEnabled, X0, X1
	1021 Move TEMP, X0
	1022 And TEMP, TEMP, 1
	1023 Compare TEMP, 1
	1024 JumpIfNotEqual {1135}
	1025 Move X8, 0x22C2000
	1026 Move X8, [X8+1256]
	1027 Move X0, [X8]
	1028 Move W8, [X0+224]
	1029 Compare W8, 0
	1030 JumpIfNotEqual {1035}
	1031 Call 0x1B6F8F8
	1032 Move X8, 0x22C2000
	1033 Move X8, [X8+1256]
	1034 Move X0, [X8]
	1035 Move X8, [X0+184]
	1036 Move [X31+4], W27
	1037 Move X0, [X8+48]
	1038 Compare X0, 0
	1039 JumpIfEqual {1431}
	1040 Move [X31+20], W24
	1041 Move X8, 0x22C2000
	1042 Move X8, [X8+1536]
	1043 Move X1, [X8]
	1044 Add X8, X31, 24
	1045 Call List`1<Object>.GetEnumerator, X0
	1046 NotImplemented "Instruction LDUR not yet implemented."
	1047 Move X8, [X31+40]
	1048 Move X25, 0x22C2000
	1049 Move X28, 0x22C2000
	1050 Move X29, 0x22C2000
	1051 Move X19, 0x22C2000
	1052 Move X27, 0x22C2000
	1053 Move X20, 0x22C2000
	1054 Move X25, [X25+1488]
	1055 Move X28, [X28+1472]
	1056 Move X29, [X29+1464]
	1057 Move X19, [X19+1640]
	1058 Move X27, [X27+1456]
	1059 Move X20, [X20+1624]
	1060 Move [X31+4], V0
	1061 Move [X31+80], X8
	1062 Move X21, 0x22C2000
	1063 Move X21, [X21+1608]
	1064 Move X1, [X25]
	1065 Add X0, X31, 64
	1066 Call Enumerator<Object>.MoveNext, X0
	1067 Move TEMP, X0
	1068 And TEMP, TEMP, 1
	1069 Compare TEMP, 1
	1070 JumpIfNotEqual {1120}
	1071 Move X26, [X31+80]
	1072 Compare X26, 0
	1073 JumpIfEqual {1224}
	1074 Move X0, [X26+16]
	1075 Compare X0, 0
	1076 JumpIfEqual {1225}
	1077 Move X1, X31
	1078 Call "il2cpp_vm_object_is_inst", X0
	1079 Compare X0, 0
	1080 JumpIfEqual {1222}
	1081 Move X8, [X0]
	1082 Move X9, [X8+424]
	1083 Move X1, [X8+432]
	1084 NotImplemented "Instruction BLR not yet implemented."
	1085 Move X8, 0x22C2000
	1086 Move X8, [X8+1584]
	1087 Move X1, [X8]
	1088 Move X2, X31
	1089 Call String.Concat, X0, X1
	1090 Move X22, X0
	1091 Move X23, [X26+24]
	1092 Move X0, [X28]
	1093 Call 0x1B6FA0C
	1094 Move X1, [X29]
	1095 Move X24, X0
	1096 Call Dictionary`2<Object, Object>..ctor, X0
	1097 Compare X24, 0
	1098 JumpIfEqual {1223}
	1099 Move X1, [X19]
	1100 Move X2, [X26+16]
	1101 Move X3, [X27]
	1102 Move X0, X24
	1103 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1104 Move X8, 0x22C2000
	1105 Move X8, [X8+1576]
	1106 Move X0, [X8]
	1107 Move W8, [X0+224]
	1108 Compare W8, 0
	1109 JumpIfNotEqual {1111}
	1110 Call 0x1B6F8F8
	1111 Move X4, [X20]
	1112 Move X5, [X21]
	1113 Move W0, 256
	1114 Move W6, 297
	1115 Move X1, X22
	1116 Move X2, X23
	1117 Move X3, X24
	1118 Move X7, X31
	1119 Call Log.Error, X0, X1, X2, X3, X4, X5, X6
	1120 Move X22, X31
	1121 Move W19, 30
	1122 Move X8, 0x22C2000
	1123 Move X8, [X8+1480]
	1124 Move X1, [X8]
	1125 Move W27, [X31+4]
	1126 Add X0, X31, 64
	1127 Call Enumerator<Object>.Dispose, X0
	1128 Move W20, [X31+16]
	1129 Move W24, [X31+20]
	1130 Compare X22, 0
	1131 JumpIfNotEqual {1432}
	1132 NotImplemented "Instruction CMP not yet implemented."
	1133 Compare W19, 0
	1134 JumpIfNotEqual {1220}
	1135 Move X19, 0x22C2000
	1136 Move X19, [X19+1256]
	1137 Move X0, [X19]
	1138 Move W8, [X0+224]
	1139 Compare W8, 0
	1140 JumpIfNotEqual {1145}
	1141 Call 0x1B6F8F8
	1142 Move X19, 0x22C2000
	1143 Move X19, [X19+1256]
	1144 Move X0, [X19]
	1145 Move X8, [X0+184]
	1146 Move W9, 1
	1147 Move X22, [X8+16]
	1148 Move [X8+26], W9
	1149 Compare X22, 0
	1150 JumpIfEqual {1423}
	1151 Move X8, [X22]
	1152 Move X10, 0x22C2000
	1153 NotImplemented "Instruction LDRH not yet implemented."
	1154 Move X10, [X10+1352]
	1155 Move X1, [X10]
	1156 Compare X9, 0
	1157 JumpIfEqual {1164}
	1158 Move X10, [X8+176]
	1159 Add X10, X10, 8
	1160 NotImplemented "Instruction LDUR not yet implemented."
	1161 NotImplemented "Instruction CMP not yet implemented."
	1162 Subtract X9, X9, 1
	1163 Add X10, X10, 16
	1164 Move W2, 20
	1165 Move X0, X22
	1166 Call 0x1BB5284
	1167 Move W9, [X10]
	1168 Add W9, W9, 20
	1169 Add X8, X8, W9
	1170 Add X0, X8, 312
	1171 Move X8, [X0]
	1172 Move X3, [X0+8]
	1173 And W9, W24, W20
	1174 And W1, W9, 1
	1175 Move X0, X22
	1176 Move W2, W31
	1177 NotImplemented "Instruction BLR not yet implemented."
	1178 Move X8, [X19]
	1179 Move X8, [X8+184]
	1180 Move [X8+26], W31
	1181 Add X0, X31, 48
	1182 Call 0x18F56B4
	1183 Move X8, [X19]
	1184 Move W9, [X8+224]
	1185 Compare W9, 0
	1186 JumpIfNotEqual {1190}
	1187 Move X0, X8
	1188 Call 0x1B6F8F8
	1189 Move X8, [X19]
	1190 Move X9, [X8+184]
	1191 Move X9, [X9+32]
	1192 Compare X9, 0
	1193 JumpIfEqual {1422}
	1194 Move W9, [X9+24]
	1195 NotImplemented "Instruction CMP not yet implemented."
	1196 Move TEMP, X27
	1197 And TEMP, TEMP, 1
	1198 Compare TEMP, 1
	1199 JumpIfNotEqual {1206}
	1200 Move W9, [X8+224]
	1201 Compare W9, 0
	1202 JumpIfNotEqual {1205}
	1203 Move X0, X8
	1204 Call 0x1B6F8F8
	1205 Call App.ExecuteDelayedActionsIfNecessary
	1206 Move X20, [X31+176]
	1207 Move X19, [X31+184]
	1208 Move X22, [X31+160]
	1209 Move X21, [X31+168]
	1210 Move X24, [X31+144]
	1211 Move X23, [X31+152]
	1212 Move X26, [X31+128]
	1213 Move X25, [X31+136]
	1214 Move X28, [X31+112]
	1215 Move X27, [X31+120]
	1216 Move X29, [X31+96]
	1217 Move X30, [X31+104]
	1218 Add X31, X31, 192
	1219 Return 
	1220 Add X0, X31, 48
	1221 Call 0x18F56B4
	1222 Call 0x1B6FA1C
	1223 Call 0x1B6FA1C
	1224 Call 0x1B6FA1C
	1225 Call 0x1B6FA1C
	1226 Move X19, 0x22C2000
	1227 Move X19, [X19+1256]
	1228 Move X0, X19
	1229 Call 0x1B6F804
	1230 Call 0x18F54F0
	1231 Move X0, X19
	1232 Call 0x1B6F804
	1233 Move X8, [X0+184]
	1234 Move X0, 0x22C2000
	1235 Move W20, [X8+25]
	1236 Move X0, [X0+1672]
	1237 Call 0x1B6F804
	1238 Call 0x1B6FA0C
	1239 Move X19, X0
	1240 Move X0, 0x22C2000
	1241 Move X0, [X0+1680]
	1242 Call 0x1B6F804
	1243 Move X1, X0
	1244 Move X0, X19
	1245 Move W2, W20
	1246 Call ActionExecutionException..ctor, X0, X1, X2
	1247 Move X0, 0x22C2000
	1248 Move X0, [X0+1472]
	1249 Call 0x1B6F804
	1250 Call 0x1B6FA0C
	1251 Move X20, X0
	1252 Move X0, 0x22C2000
	1253 Move X0, [X0+1464]
	1254 Call 0x1B6F804
	1255 Move X1, X0
	1256 Move X0, X20
	1257 Call 0x18F5624
	1258 Move X0, X22
	1259 Call App.GetActionsDebugStr, X0
	1260 Move X21, X0
	1261 Move X0, X20
	1262 Call 0x18F54E0
	1263 Move X0, 0x22C2000
	1264 Move X0, [X0+1688]
	1265 Call 0x1B6F804
	1266 Move X22, X0
	1267 Move X0, 0x22C2000
	1268 Move X0, [X0+1456]
	1269 Call 0x1B6F804
	1270 Move X3, X0
	1271 Move X0, X20
	1272 Move X1, X22
	1273 Move X2, X21
	1274 Call 0x18F5628
	1275 Move X0, 0x22C2000
	1276 Move X0, [X0+1576]
	1277 Call 0x1B6F804
	1278 Call 0x18F54F0
	1279 Move X0, 0x22C2000
	1280 Move X0, [X0+1624]
	1281 Call 0x1B6F804
	1282 Move X21, X0
	1283 Move X0, 0x22C2000
	1284 Move X0, [X0+1608]
	1285 Call 0x1B6F804
	1286 Move X4, X0
	1287 Move W0, 256
	1288 Move W5, 190
	1289 Move X19, 0x22C2000
	1290 Move X19, [X19+1256]
	1291 Move X0, X19
	1292 Call 0x1B6F804
	1293 Call 0x18F54F0
	1294 Move X0, X19
	1295 Call 0x1B6F804
	1296 Move X8, [X0+184]
	1297 Move X0, 0x22C2000
	1298 Move W20, [X8+25]
	1299 Move X0, [X0+1672]
	1300 Call 0x1B6F804
	1301 Call 0x1B6FA0C
	1302 Move X19, X0
	1303 Move X0, 0x22C2000
	1304 Move X0, [X0+1696]
	1305 Call 0x1B6F804
	1306 Move X1, X0
	1307 Move X0, X19
	1308 Move W2, W20
	1309 Call ActionExecutionException..ctor, X0, X1, X2
	1310 Move X0, 0x22C2000
	1311 Move X0, [X0+1472]
	1312 Call 0x1B6F804
	1313 Call 0x1B6FA0C
	1314 Move X20, X0
	1315 Move X0, 0x22C2000
	1316 Move X0, [X0+1464]
	1317 Call 0x1B6F804
	1318 Move X1, X0
	1319 Move X0, X20
	1320 Call 0x18F5624
	1321 Move X0, X22
	1322 Call App.GetActionsDebugStr, X0
	1323 Move X21, X0
	1324 Move X0, X20
	1325 Call 0x18F54E0
	1326 Move X0, 0x22C2000
	1327 Move X0, [X0+1688]
	1328 Call 0x1B6F804
	1329 Move X22, X0
	1330 Move X0, 0x22C2000
	1331 Move X0, [X0+1456]
	1332 Call 0x1B6F804
	1333 Move X3, X0
	1334 Move X0, X20
	1335 Move X1, X22
	1336 Move X2, X21
	1337 Call 0x18F5628
	1338 Move X0, 0x22C2000
	1339 Move X0, [X0+1576]
	1340 Call 0x1B6F804
	1341 Call 0x18F54F0
	1342 Move X0, 0x22C2000
	1343 Move X0, [X0+1624]
	1344 Call 0x1B6F804
	1345 Move X21, X0
	1346 Move X0, 0x22C2000
	1347 Move X0, [X0+1608]
	1348 Call 0x1B6F804
	1349 Move X4, X0
	1350 Move W0, 256
	1351 Move W5, 197
	1352 Move X1, X19
	1353 Move X2, X20
	1354 Move X3, X21
	1355 Move X6, X31
	1356 Call Log.Error, X0, X1, X2, X3, X4, X5
	1357 Move X0, 0x22C2000
	1358 Move X0, [X0+1704]
	1359 Call 0x1B6F804
	1360 Move X1, X0
	1361 Move X0, X19
	1362 Call 0x1B6F8E8
	1363 Move X19, 0x22C2000
	1364 Move X19, [X19+1256]
	1365 Move X0, X19
	1366 Call 0x1B6F804
	1367 Call 0x18F54F0
	1368 Move X0, X19
	1369 Call 0x1B6F804
	1370 Move X8, [X0+184]
	1371 Move X0, 0x22C2000
	1372 Move W19, [X8+25]
	1373 Move X0, [X0+1672]
	1374 Call 0x1B6F804
	1375 Call 0x1B6FA0C
	1376 Move X20, X0
	1377 Move X0, 0x22C2000
	1378 Move X0, [X0+1712]
	1379 Call 0x1B6F804
	1380 Move X1, X0
	1381 Move X0, X20
	1382 Move W2, W19
	1383 Call ActionExecutionException..ctor, X0, X1, X2
	1384 Move X0, X20
	1385 Call 0x18F54E0
	1386 Move X8, [X20]
	1387 Move X0, X20
	1388 Move X9, [X8+408]
	1389 Move X1, [X8+416]
	1390 NotImplemented "Instruction BLR not yet implemented."
	1391 Move X19, X0
	1392 Move X0, X22
	1393 Call App.GetActionsDebugStr, X0
	1394 Move X21, X0
	1395 Move X0, X19
	1396 Call 0x18F54E0
	1397 Move X0, 0x22C2000
	1398 Move X0, [X0+1720]
	1399 Call 0x1B6F804
	1400 Move X22, X0
	1401 Move X0, 0x22C2000
	1402 Move X0, [X0+1688]
	1403 Call 0x1B6F804
	1404 Move X3, X0
	1405 Move W0, 1
	1406 Move X1, X22
	1407 Move X2, X19
	1408 Move X4, X21
	1409 Call 0x18F562C
	1410 Move X0, 0x22C2000
	1411 Move X0, [X0+1704]
	1412 Call 0x1B6F804
	1413 Move X1, X0
	1414 Move X0, X20
	1415 Call 0x1B6F8E8
	1416 Move [X31+4], W27
	1417 Call 0x1B6FA1C
	1418 Call 0x1B6FA1C
	1419 Call 0x1B6FA1C
	1420 Move [X31+4], W27
	1421 Call 0x1B6FA1C
	1422 Call 0x1B6FA1C
	1423 Call 0x1B6FA1C
	1424 Move [X31+4], W27
	1425 Call 0x1B6FA1C
	1426 Call 0x1B6FA1C
	1427 Move [X31+4], W27
	1428 Call 0x1B6FA1C
	1429 Move [X31+4], W27
	1430 Call 0x1B6FA1C
	1431 Call 0x1B6FA1C
	1432 Move X0, X22
	1433 Call 0x1B6FA14
	1434 Move W0, 8
	1435 Call 0x3D1A860
	1436 Move X8, [X25]
	1437 Move [X0], X8
	1438 Move X1, 0x2091000
	1439 Add X1, X1, 3032
	1440 Move X2, X31
	1441 Call 0x3D1A870
	1442 Call 0x1B6FA1C
	1443 Call 0x1B6FA1C
	1444 Call 0x1B6FA1C
	1445 Move X21, X1
	1446 Move X29, X0
	1447 Move X21, X1
	1448 Move X29, X0
	1449 Call 0x3D1A850
	1450 Move [X31+4], W27
	1451 Move X21, X1
	1452 Move X29, X0
	1453 Move X29, X0
	1454 NotImplemented "Instruction CMP not yet implemented."
	1455 Move X0, X29
	1456 Call 0x3D1A840
	1457 Move X22, [X0]
	1458 Call 0x3D1A850
	1459 Move W19, W31
	1460 Move X22, X31
	1461 Move X8, 0x22C2000
	1462 Move X8, [X8+1480]
	1463 Move W21, W1
	1464 Move X1, [X8]
	1465 Add X0, X31, 64
	1466 Call Enumerator<Object>.Dispose, X0
	1467 Compare X22, 0
	1468 JumpIfEqual {1475}
	1469 Move X0, X22
	1470 Call 0x1B6FA14
	1471 Move X29, X0
	1472 Move [X31+4], W27
	1473 Move X29, X0
	1474 Move W21, W1
	1475 NotImplemented "Instruction CMP not yet implemented."
	1476 Move W8, 1
	1477 NotImplemented "Instruction CMP not yet implemented."
	1478 Move X0, X29
	1479 Call 0x3D1A840
	1480 Move X8, [X0]
	1481 Move [X31+48], X8
	1482 Call 0x3D1A850
	1483 Move X19, 0x22C2000
	1484 Move W27, [X31+4]
	1485 Move X19, [X19+1256]
	1486 Move X0, X29
	1487 Call 0x3D1A840
	1488 Move X21, X0
	1489 Move X0, 0x22C2000
	1490 Move X0, [X0+1648]
	1491 Call 0x1B6F804
	1492 Move X8, [X21]
	1493 Move X1, [X8]
	1494 Call 0x1B6FD6C
	1495 Move TEMP, X0
	1496 And TEMP, TEMP, 1
	1497 Compare TEMP, 1
	1498 JumpIfNotEqual {1525}
	1499 Move X21, [X21]
	1500 Call 0x3D1A850
	1501 Move X0, 0x22C2000
	1502 Move X0, [X0+1576]
	1503 Call 0x1B6F804
	1504 Move W8, [X0+224]
	1505 Compare W8, 0
	1506 JumpIfNotEqual {1508}
	1507 Call 0x1B6F8F8
	1508 Move X0, 0x22C2000
	1509 Move X0, [X0+1624]
	1510 Call 0x1B6F804
	1511 Move X22, X0
	1512 Move X0, 0x22C2000
	1513 Move X0, [X0+1608]
	1514 Call 0x1B6F804
	1515 Move X4, X0
	1516 Move W0, 256
	1517 Move W5, 310
	1518 Move X1, X21
	1519 Move X2, X31
	1520 Move X3, X22
	1521 Move X6, X31
	1522 Call Log.Error, X0, X1, X2, X3, X4, X5
	1523 Move X0, X21
	1524 Call 0x1B6FA14
	1525 Move W0, 8
	1526 Call 0x3D1A860
	1527 Move X8, [X21]
	1528 Move [X0], X8
	1529 Move X1, 0x2091000
	1530 Add X1, X1, 3032
	1531 Move X2, X31
	1532 Call 0x3D1A870
	1533 Move X29, X0
	1534 Move W21, W1
	1535 Move X21, X1
	1536 Move X29, X0
	1537 Call 0x3D1A850
	1538 Move X29, X0
	1539 Add X0, X31, 48
	1540 Call 0x18F56B4
	1541 Move X0, X29
	1542 Call 0x1C8518C
	1543 Call 0x18F56A8

Method: System.Void ExecuteDelayedActionsIfNecessary()

Disassembly:
	0x01C8D3D0 LDR X0, [X22]
	0x01C8D3D4 LDR W8, [X0 + 0xE0]
	0x01C8D3D8 CBNZ W8, 0x1C8D3E4
	0x01C8D3DC BL 0x1B6E8F8
	0x01C8D3E0 LDR X0, [X22]
	0x01C8D3E4 LDR X8, [X0 + 0xB8]
	0x01C8D3E8 LDR X22, [X8 + 0x10]
	0x01C8D3EC CBZ X22, 0x1C8D470
	0x01C8D3F0 ADRP X10, 0x22C0000
	0x01C8D3F4 LDR X8, [X22]
	0x01C8D3F8 LDR X10, [X10 + 0x548]
	0x01C8D3FC LDRH W9, [X8 + 0x12E]
	0x01C8D400 LDR X1, [X10]
	0x01C8D404 CBZ X9, 0x1C8D428
	0x01C8D408 LDR X10, [X8 + 0xB0]
	0x01C8D40C ADD X10, X10, 0x8
	0x01C8D410 LDUR X11, [X10 - 0x8]
	0x01C8D414 CMP X11, X1
	0x01C8D418 B.EQ 0x1C8D438
	0x01C8D41C SUBS X9, X9, 0x1
	0x01C8D420 ADD X10, X10, 0x10
	0x01C8D424 B.NE 0x1C8D410
	0x01C8D428 MOVZ W2, 0x4
	0x01C8D42C MOV X0, X22
	0x01C8D430 BL 0x1BB4284
	0x01C8D434 B 0x1C8D448
	0x01C8D438 LDR W9, [X10]
	0x01C8D43C ADD W9, W9, 0x4
	0x01C8D440 ADD X8, X8, W9, 0x4, SXTW
	0x01C8D444 ADD X0, X8, 0x138
	0x01C8D448 LDP X6, X5, [X0]
	0x01C8D44C MOV X0, X22
	0x01C8D450 MOV X1, X21
	0x01C8D454 MOV X2, X20
	0x01C8D458 MOV X4, X19
	0x01C8D45C LDP X20, X19, [X31 + 0x20]
	0x01C8D460 LDP X22, X21, [X31 + 0x10]
	0x01C8D464 MOVZ W3, 0x1
	0x01C8D468 LDP X30, X23, [X31], #0x30
	0x01C8D46C BR X6
	0x01C8D470 BL 0x1B6EA1C
	0x01C8D474 STP X30, X23, [X31 - 0x30]!
	0x01C8D478 STP X22, X21, [X31 + 0x10]
	0x01C8D47C STP X20, X19, [X31 + 0x20]
	0x01C8D480 ADRP X23, 0x2596000
	0x01C8D484 ADRP X22, 0x22C0000
	0x01C8D488 LDRB W8, [X23 + 0x393]
	0x01C8D48C LDR X22, [X22 + 0x4E8]
	0x01C8D490 MOV X19, X2
	0x01C8D494 MOV X20, X1
	0x01C8D498 MOV X21, X0
	0x01C8D49C TBNZ X8, 0x0, 0x1C8D4C0
	0x01C8D4A0 ADRP X0, 0x22C0000
	0x01C8D4A4 LDR X0, [X0 + 0x4E8]
	0x01C8D4A8 BL 0x1B6E7F0
	0x01C8D4AC ADRP X0, 0x22C0000
	0x01C8D4B0 LDR X0, [X0 + 0x548]
	0x01C8D4B4 BL 0x1B6E7F0
	0x01C8D4B8 MOVZ W8, 0x1
	0x01C8D4BC STRB W8, [X23 + 0x393]
	0x01C8D4C0 LDR X0, [X22]
	0x01C8D4C4 LDR W8, [X0 + 0xE0]
	0x01C8D4C8 CBNZ W8, 0x1C8D4D4
	0x01C8D4CC BL 0x1B6E8F8
	0x01C8D4D0 LDR X0, [X22]
	0x01C8D4D4 LDR X8, [X0 + 0xB8]
	0x01C8D4D8 LDR X22, [X8 + 0x10]
	0x01C8D4DC CBZ X22, 0x1C8D560
	0x01C8D4E0 ADRP X10, 0x22C0000
	0x01C8D4E4 LDR X8, [X22]
	0x01C8D4E8 LDR X10, [X10 + 0x548]
	0x01C8D4EC LDRH W9, [X8 + 0x12E]
	0x01C8D4F0 LDR X1, [X10]
	0x01C8D4F4 CBZ X9, 0x1C8D518
	0x01C8D4F8 LDR X10, [X8 + 0xB0]
	0x01C8D4FC ADD X10, X10, 0x8
	0x01C8D500 LDUR X11, [X10 - 0x8]
	0x01C8D504 CMP X11, X1
	0x01C8D508 B.EQ 0x1C8D528
	0x01C8D50C SUBS X9, X9, 0x1
	0x01C8D510 ADD X10, X10, 0x10
	0x01C8D514 B.NE 0x1C8D500
	0x01C8D518 MOVZ W2, 0x4
	0x01C8D51C MOV X0, X22
	0x01C8D520 BL 0x1BB4284
	0x01C8D524 B 0x1C8D538
	0x01C8D528 LDR W9, [X10]
	0x01C8D52C ADD W9, W9, 0x4
	0x01C8D530 ADD X8, X8, W9, 0x4, SXTW
	0x01C8D534 ADD X0, X8, 0x138
	0x01C8D538 LDP X6, X5, [X0]
	0x01C8D53C MOV X0, X22
	0x01C8D540 MOV X1, X21
	0x01C8D544 MOV X2, X20
	0x01C8D548 MOV X4, X19
	0x01C8D54C LDP X20, X19, [X31 + 0x20]
	0x01C8D550 LDP X22, X21, [X31 + 0x10]
	0x01C8D554 MOV W3, W31
	0x01C8D558 LDP X30, X23, [X31], #0x30
	0x01C8D55C BR X6
	0x01C8D560 BL 0x1B6EA1C
	0x01C8D564 STP X30, X21, [X31 - 0x20]!
	0x01C8D568 STP X20, X19, [X31 + 0x10]
	0x01C8D56C ADRP X21, 0x2596000
	0x01C8D570 ADRP X20, 0x22C0000
	0x01C8D574 LDRB W8, [X21 + 0x394]
	0x01C8D578 LDR X20, [X20 + 0x4E8]
	0x01C8D57C MOV X19, X0
	0x01C8D580 TBNZ X8, 0x0, 0x1C8D5A4
	0x01C8D584 ADRP X0, 0x22C0000
	0x01C8D588 LDR X0, [X0 + 0x4E8]
	0x01C8D58C BL 0x1B6E7F0
	0x01C8D590 ADRP X0, 0x22C0000
	0x01C8D594 LDR X0, [X0 + 0x548]
	0x01C8D598 BL 0x1B6E7F0
	0x01C8D59C MOVZ W8, 0x1
	0x01C8D5A0 STRB W8, [X21 + 0x394]
	0x01C8D5A4 LDR X0, [X20]
	0x01C8D5A8 LDR W8, [X0 + 0xE0]
	0x01C8D5AC CBNZ W8, 0x1C8D5B8
	0x01C8D5B0 BL 0x1B6E8F8
	0x01C8D5B4 LDR X0, [X20]
	0x01C8D5B8 LDR X8, [X0 + 0xB8]
	0x01C8D5BC LDR X20, [X8 + 0x10]
	0x01C8D5C0 CBZ X20, 0x1C8D634
	0x01C8D5C4 ADRP X10, 0x22C0000
	0x01C8D5C8 LDR X8, [X20]
	0x01C8D5CC LDR X10, [X10 + 0x548]
	0x01C8D5D0 LDRH W9, [X8 + 0x12E]
	0x01C8D5D4 LDR X1, [X10]
	0x01C8D5D8 CBZ X9, 0x1C8D5FC
	0x01C8D5DC LDR X10, [X8 + 0xB0]
	0x01C8D5E0 ADD X10, X10, 0x8
	0x01C8D5E4 LDUR X11, [X10 - 0x8]
	0x01C8D5E8 CMP X11, X1
	0x01C8D5EC B.EQ 0x1C8D60C
	0x01C8D5F0 SUBS X9, X9, 0x1
	0x01C8D5F4 ADD X10, X10, 0x10
	0x01C8D5F8 B.NE 0x1C8D5E4
	0x01C8D5FC MOVZ W2, 0x7
	0x01C8D600 MOV X0, X20
	0x01C8D604 BL 0x1BB4284
	0x01C8D608 B 0x1C8D61C
	0x01C8D60C LDR W9, [X10]
	0x01C8D610 ADD W9, W9, 0x7
	0x01C8D614 ADD X8, X8, W9, 0x4, SXTW
	0x01C8D618 ADD X0, X8, 0x138
	0x01C8D61C LDP X3, X2, [X0]
	0x01C8D620 MOV X0, X20
	0x01C8D624 MOV X1, X19
	0x01C8D628 LDP X20, X19, [X31 + 0x10]
	0x01C8D62C LDP X30, X21, [X31], #0x20
	0x01C8D630 BR X3
	0x01C8D634 BL 0x1B6EA1C
	0x01C8D638 MOV X1, X31
	0x01C8D63C B 0x3A9EEE4
	0x01C8D640 STP X30, X23, [X31 - 0x30]!
	0x01C8D644 STP X22, X21, [X31 + 0x10]
	0x01C8D648 STP X20, X19, [X31 + 0x20]
	0x01C8D64C ADRP X22, 0x2596000
	0x01C8D650 ADRP X23, 0x22C0000
	0x01C8D654 ADRP X19, 0x22C0000
	0x01C8D658 ADRP X20, 0x22C0000
	0x01C8D65C ADRP X21, 0x22C0000
	0x01C8D660 LDRB W8, [X22 + 0x395]
	0x01C8D664 LDR X23, [X23 + 0x780]
	0x01C8D668 LDR X19, [X19 + 0x788]
	0x01C8D66C LDR X20, [X20 + 0x4E8]
	0x01C8D670 LDR X21, [X21 + 0x790]
	0x01C8D674 TBNZ X8, 0x0, 0x1C8D6B0
	0x01C8D678 ADRP X0, 0x22C0000
	0x01C8D67C LDR X0, [X0 + 0x4E8]
	0x01C8D680 BL 0x1B6E7F0
	0x01C8D684 ADRP X0, 0x22C0000
	0x01C8D688 LDR X0, [X0 + 0x788]
	0x01C8D68C BL 0x1B6E7F0
	0x01C8D690 ADRP X0, 0x22C0000
	0x01C8D694 LDR X0, [X0 + 0x780]
	0x01C8D698 BL 0x1B6E7F0
	0x01C8D69C ADRP X0, 0x22C0000
	0x01C8D6A0 LDR X0, [X0 + 0x790]
	0x01C8D6A4 BL 0x1B6E7F0
	0x01C8D6A8 MOVZ W8, 0x1
	0x01C8D6AC STRB W8, [X22 + 0x395]
	0x01C8D6B0 LDR X0, [X23]
	0x01C8D6B4 BL 0x1B6EA0C
	0x01C8D6B8 LDR X1, [X19]
	0x01C8D6BC MOV X19, X0
	0x01C8D6C0 BL 0x2E45D4C
	0x01C8D6C4 LDR X8, [X20]
	0x01C8D6C8 LDR X8, [X8 + 0xB8]
	0x01C8D6CC STR X19, [X8 + 0x30]
	0x01C8D6D0 LDR X0, [X21]
	0x01C8D6D4 BL 0x1B6EA0C
	0x01C8D6D8 MOV X1, X31
	0x01C8D6DC MOV X19, X0
	0x01C8D6E0 BL 0x309A888
	0x01C8D6E4 LDR X8, [X20]
	0x01C8D6E8 LDR X8, [X8 + 0xB8]
	0x01C8D6EC STR X19, [X8 + 0x68]
	0x01C8D6F0 LDR X0, [X21]
	0x01C8D6F4 BL 0x1B6EA0C
	0x01C8D6F8 MOV X1, X31
	0x01C8D6FC MOV X19, X0
	0x01C8D700 BL 0x309A888
	0x01C8D704 LDR X8, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x2597000
	007 Move X21, 0x22C1000
	008 Move W8, [X19+905]
	009 Move X21, [X21+1256]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x22C1000
	015 Move X0, [X0+1256]
	016 Call 0x1B6F7F0
	017 Move X0, 0x22C1000
	018 Move X0, [X0+1736]
	019 Call 0x1B6F7F0
	020 Move X0, 0x22C1000
	021 Move X0, [X0+1440]
	022 Call 0x1B6F7F0
	023 Move X0, 0x22C1000
	024 Move X0, [X0+1552]
	025 Call 0x1B6F7F0
	026 Move X0, 0x22C1000
	027 Move X0, [X0+1160]
	028 Call 0x1B6F7F0
	029 Move W8, 1
	030 Move [X19+905], W8
	031 Move X0, [X21]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1B6F8F8
	036 Move X0, [X21]
	037 Move X8, [X0+184]
	038 Move X9, [X8+32]
	039 Compare X9, 0
	040 JumpIfEqual {137}
	041 Move W9, [X9+24]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move W9, [X0+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {49}
	046 Call 0x1B6F8F8
	047 Move X8, [X21]
	048 Move X8, [X8+184]
	049 Move X0, [X8+40]
	050 Compare X0, 0
	051 JumpIfEqual {137}
	052 Move W2, [X0+24]
	053 Move W9, [X0+28]
	054 Add W9, W9, 1
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move [X0+24], W31
	057 Move [X0+28], W9
	058 Move X0, [X0+16]
	059 Move W1, W31
	060 Move X3, X31
	061 Call Array.Clear, X0, X1, X2
	062 Move X8, [X21]
	063 Move X8, [X8+184]
	064 Move X0, [X8+40]
	065 Compare X0, 0
	066 JumpIfEqual {137}
	067 Move X9, 0x22C1000
	068 Move X9, [X9+1736]
	069 Move X1, [X8+32]
	070 Move X2, [X9]
	071 Call List`1<Object>.AddRange, X0, X1
	072 Move X0, [X21]
	073 Move X8, [X0+184]
	074 Move X9, [X8+32]
	075 Compare X9, 0
	076 JumpIfEqual {137}
	077 Move W2, [X9+24]
	078 Move W10, [X9+28]
	079 Add W10, W10, 1
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move [X9+24], W31
	082 Move [X9+28], W10
	083 Move X0, [X9+16]
	084 Move W1, W31
	085 Move X3, X31
	086 Call Array.Clear, X0, X1, X2
	087 Move X0, [X21]
	088 Move X8, [X0+184]
	089 Move W9, [X8+56]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X22, 0x22C1000
	092 Move W10, [X0+224]
	093 Move X22, [X22+1160]
	094 Compare W10, 0
	095 JumpIfNotEqual {100}
	096 Call 0x1B6F8F8
	097 Move X8, [X21]
	098 Move X8, [X8+184]
	099 Move W9, [X8+56]
	100 Move X0, [X8+40]
	101 Move W10, 1
	102 Add W9, W9, 1
	103 Move [X8+25], W10
	104 Move [X8+56], W9
	105 Call App.ExecuteAction, X0
	106 Move X19, X31
	107 Move X0, [X21]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {113}
	111 Call 0x1B6F8F8
	112 Move X0, [X21]
	113 Move X8, [X22]
	114 Move X9, [X0+184]
	115 Move W10, [X8+224]
	116 Move W20, [X9+56]
	117 Compare W10, 0
	118 JumpIfNotEqual {121}
	119 Move X0, X8
	120 Call 0x1B6F8F8
	121 Subtract W1, W20, 1
	122 Move W0, W31
	123 Move X2, X31
	124 Call Math.Max, X0, X1
	125 Move X8, [X21]
	126 Move X8, [X8+184]
	127 Move [X8+56], W0
	128 Move [X8+25], W31
	129 Compare X19, 0
	130 JumpIfNotEqual {184}
	131 Move X20, [X31+32]
	132 Move X19, [X31+40]
	133 Move X22, [X31+16]
	134 Move X21, [X31+24]
	135 Move X30, [X31+48]
	136 Return 
	137 Call 0x1B6FA1C
	138 Move X19, 0x22C1000
	139 Move X19, [X19+1256]
	140 Move X0, X19
	141 Call 0x1B6F804
	142 Call 0x18F54F0
	143 Move X0, X19
	144 Call 0x1B6F804
	145 Move X8, [X0+184]
	146 Move X0, 0x22C1000
	147 Move [X8+56], W31
	148 Move X0, [X0+1784]
	149 Call 0x1B6F804
	150 Call 0x1B6FA0C
	151 Move X19, X0
	152 Move X0, 0x22C1000
	153 Move X0, [X0+1792]
	154 Call 0x1B6F804
	155 Move X1, X0
	156 Move X0, X19
	157 Move X2, X31
	158 Call OverflowException..ctor, X0, X1
	159 Move X0, 0x22C1000
	160 Move X0, [X0+1576]
	161 Call 0x1B6F804
	162 Call 0x18F54F0
	163 Move X0, 0x22C1000
	164 Move X0, [X0+1624]
	165 Call 0x1B6F804
	166 Move X20, X0
	167 Move X0, 0x22C1000
	168 Move X0, [X0+1800]
	169 Call 0x1B6F804
	170 Move X4, X0
	171 Move W0, 256
	172 Move W5, 352
	173 Move X1, X19
	174 Move X2, X31
	175 Move X3, X20
	176 Move X6, X31
	177 Call Log.Error, X0, X1, X2, X3, X4, X5
	178 Move X0, 0x22C1000
	179 Move X0, [X0+1808]
	180 Call 0x1B6F804
	181 Move X1, X0
	182 Move X0, X19
	183 Call 0x1B6F8E8
	184 Move X0, X19
	185 Call 0x1B6FA14
	186 Move X20, X0
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move X0, X20
	189 Call 0x3D1A840
	190 Move X19, [X0]
	191 Call 0x3D1A850
	192 Move X19, X31
	193 Move X20, X0
	194 Move X0, [X21]
	195 Move W8, [X0+224]
	196 Compare W8, 0
	197 JumpIfNotEqual {200}
	198 Call 0x1B6F8F8
	199 Move X0, [X21]
	200 Move X8, [X22]
	201 Move X9, [X0+184]
	202 Move W10, [X8+224]
	203 Move W22, [X9+56]
	204 Compare W10, 0
	205 JumpIfNotEqual {208}
	206 Move X0, X8
	207 Call 0x1B6F8F8
	208 Subtract W1, W22, 1
	209 Move W0, W31
	210 Move X2, X31
	211 Call Math.Max, X0, X1
	212 Move X8, [X21]
	213 Move X8, [X8+184]
	214 Move [X8+56], W0
	215 Move [X8+25], W31
	216 Compare X19, 0
	217 JumpIfNotEqual {220}
	218 Move X0, X20
	219 Call 0x1C8518C
	220 Move X0, X19
	221 Call 0x1B6FA14
	222 Call 0x18F56A8

Method: System.Void ScheduleAction(AnimalCompany.BaseAction[] actions)

Disassembly:
	0x01C8D708 LDP X22, X21, [X31 + 0x10]
	0x01C8D70C LDR X8, [X8 + 0xB8]
	0x01C8D710 STR X19, [X8 + 0x70]
	0x01C8D714 LDP X20, X19, [X31 + 0x20]
	0x01C8D718 LDP X30, X23, [X31], #0x30
	0x01C8D71C RET
	0x01C8D720 LDRB W0, [X0 + 0x8C]
	0x01C8D724 RET
	0x01C8D728 AND W8, W1, 0x1
	0x01C8D72C STRB W8, [X0 + 0x8C]
	0x01C8D730 RET
	0x01C8D734 STR X30, [X31 - 0x40]!
	0x01C8D738 STP X24, X23, [X31 + 0x10]
	0x01C8D73C STP X22, X21, [X31 + 0x20]
	0x01C8D740 STP X20, X19, [X31 + 0x30]
	0x01C8D744 MOV W23, W1
	0x01C8D748 MOV X1, X31
	0x01C8D74C MOV X19, X5
	0x01C8D750 MOV X20, X4
	0x01C8D754 MOV X21, X3
	0x01C8D758 MOV X22, X2
	0x01C8D75C MOV X24, X0
	0x01C8D760 BL 0x32276F8
	0x01C8D764 STR W23, [X24 + 0x14]
	0x01C8D768 STP X22, X21, [X24 + 0x18]
	0x01C8D76C STP X20, X19, [X24 + 0x28]
	0x01C8D770 LDP X20, X19, [X31 + 0x30]
	0x01C8D774 LDP X22, X21, [X31 + 0x20]
	0x01C8D778 LDP X24, X23, [X31 + 0x10]
	0x01C8D77C LDR X30, [X31], #0x40
	0x01C8D780 RET
	0x01C8D784 MOV X1, X31
	0x01C8D788 B 0x32276F8
	0x01C8D78C STP X30, X21, [X31 - 0x20]!
	0x01C8D790 STP X20, X19, [X31 + 0x10]
	0x01C8D794 ADRP X21, 0x2596000
	0x01C8D798 LDRB W8, [X21 + 0x397]
	0x01C8D79C MOV X20, X1
	0x01C8D7A0 MOV X19, X0
	0x01C8D7A4 TBNZ X8, 0x0, 0x1C8D7C8
	0x01C8D7A8 ADRP X0, 0x22C0000
	0x01C8D7AC LDR X0, [X0 + 0x798]
	0x01C8D7B0 BL 0x1B6E7F0
	0x01C8D7B4 ADRP X0, 0x22C0000
	0x01C8D7B8 LDR X0, [X0 + 0x7A0]
	0x01C8D7BC BL 0x1B6E7F0
	0x01C8D7C0 MOVZ W8, 0x1
	0x01C8D7C4 STRB W8, [X21 + 0x397]
	0x01C8D7C8 CBZ X20, 0x1C8D848
	0x01C8D7CC LDR X0, [X20 + 0x68]
	0x01C8D7D0 CBZ X0, 0x1C8D848
	0x01C8D7D4 ADRP X8, 0x22C0000
	0x01C8D7D8 LDR X8, [X8 + 0x798]
	0x01C8D7DC LDR W1, [X19 + 0x14]
	0x01C8D7E0 LDR X2, [X8]
	0x01C8D7E4 BL 0x24BDA64
	0x01C8D7E8 LDR X0, [X20 + 0x70]
	0x01C8D7EC CBZ X0, 0x1C8D848
	0x01C8D7F0 ADRP X21, 0x22C0000
	0x01C8D7F4 LDR X21, [X21 + 0x7A0]
	0x01C8D7F8 LDR X1, [X19 + 0x18]
	0x01C8D7FC LDR X2, [X21]
	0x01C8D800 BL 0x24BFC34
	0x01C8D804 LDR X0, [X20 + 0x78]
	0x01C8D808 CBZ X0, 0x1C8D848
	0x01C8D80C LDR X1, [X19 + 0x20]
	0x01C8D810 LDR X2, [X21]
	0x01C8D814 BL 0x24BFC34
	0x01C8D818 LDR X0, [X20 + 0x88]
	0x01C8D81C CBZ X0, 0x1C8D848
	0x01C8D820 LDR X1, [X19 + 0x28]
	0x01C8D824 LDR X2, [X21]
	0x01C8D828 BL 0x24BFC34
	0x01C8D82C LDR X0, [X20 + 0x90]
	0x01C8D830 CBZ X0, 0x1C8D848
	0x01C8D834 LDR X1, [X19 + 0x30]
	0x01C8D838 LDR X2, [X21]
	0x01C8D83C LDP X20, X19, [X31 + 0x10]
	0x01C8D840 LDP X30, X21, [X31], #0x20
	0x01C8D844 B 0x24BFC34
	0x01C8D848 BL 0x1B6EA1C
	0x01C8D84C STP X30, X23, [X31 - 0x30]!
	0x01C8D850 STP X22, X21, [X31 + 0x10]
	0x01C8D854 STP X20, X19, [X31 + 0x20]
	0x01C8D858 MOV W22, W1
	0x01C8D85C MOV X1, X31
	0x01C8D860 MOV W19, W4
	0x01C8D864 MOV W20, W3
	0x01C8D868 MOV W21, W2
	0x01C8D86C MOV X23, X0
	0x01C8D870 BL 0x32276F8
	0x01C8D874 STP W22, W21, [X23 + 0x14]
	0x01C8D878 STP W20, W19, [X23 + 0x1C]
	0x01C8D87C LDP X20, X19, [X31 + 0x20]
	0x01C8D880 LDP X22, X21, [X31 + 0x10]
	0x01C8D884 LDP X30, X23, [X31], #0x30
	0x01C8D888 RET
	0x01C8D88C STR X30, [X31 - 0x30]!
	0x01C8D890 STP X22, X21, [X31 + 0x10]
	0x01C8D894 STP X20, X19, [X31 + 0x20]
	0x01C8D898 ADRP X21, 0x2596000
	0x01C8D89C LDRB W8, [X21 + 0x398]
	0x01C8D8A0 MOV X20, X1
	0x01C8D8A4 MOV X19, X0
	0x01C8D8A8 TBNZ X8, 0x0, 0x1C8D8CC
	0x01C8D8AC ADRP X0, 0x22C0000
	0x01C8D8B0 LDR X0, [X0 + 0x7A8]
	0x01C8D8B4 BL 0x1B6E7F0
	0x01C8D8B8 ADRP X0, 0x22C0000
	0x01C8D8BC LDR X0, [X0 + 0x7B0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x2597000
	009 Move W8, [X20+906]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0x22C1000
	016 Move X0, [X0+1256]
	017 Call 0x1B6F7F0
	018 Move X0, 0x22C1000
	019 Move X0, [X0+1816]
	020 Call 0x1B6F7F0
	021 Move X0, 0x22C1000
	022 Move X0, [X0+1576]
	023 Call 0x1B6F7F0
	024 Move X0, 0x22C1000
	025 Move X0, [X0+1824]
	026 Call 0x1B6F7F0
	027 Move X0, 0x22C1000
	028 Move X0, [X0+1832]
	029 Call 0x1B6F7F0
	030 Move X0, 0x22C1000
	031 Move X0, [X0+1624]
	032 Call 0x1B6F7F0
	033 Move W8, 1
	034 Move [X20+906], W8
	035 Compare X19, 0
	036 JumpIfEqual {117}
	037 Move X8, [X19+24]
	038 Compare X8, 0
	039 JumpIfEqual {117}
	040 Move X20, 0x22C1000
	041 Move X20, [X20+1576]
	042 Move X0, [X20]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1B6F8F8
	047 Move W0, 3
	048 Move W1, 256
	049 Move X2, X31
	050 Call Log.IsEnabled, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {90}
	055 Move X8, 0x22C1000
	056 Move X8, [X8+1256]
	057 Move X0, [X8]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1B6F8F8
	062 Move X0, X19
	063 Call App.GetActionsDebugStr, X0
	064 Move X8, 0x22C1000
	065 Move X8, [X8+1832]
	066 Move X1, X0
	067 Move X2, X31
	068 Move X8, [X8]
	069 Move X0, X8
	070 Call String.Concat, X0, X1
	071 Move X8, [X20]
	072 Move X20, X0
	073 Move W9, [X8+224]
	074 Compare W9, 0
	075 JumpIfNotEqual {78}
	076 Move X0, X8
	077 Call 0x1B6F8F8
	078 Move X8, 0x22C1000
	079 Move X9, 0x22C1000
	080 Move X8, [X8+1624]
	081 Move X9, [X9+1824]
	082 Move W0, 256
	083 Move W5, 379
	084 Move X3, [X8]
	085 Move X4, [X9]
	086 Move X1, X20
	087 Move X2, X31
	088 Move X6, X31
	089 Call Log.Info, X0, X1, X2, X3, X4, X5
	090 Move X8, [X19+24]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X23, 0x22C1000
	093 Move X24, 0x22C1000
	094 Move X23, [X23+1256]
	095 Move X24, [X24+1816]
	096 Move X21, X31
	097 And X8, X8, 0
	098 Add X22, X19, 32
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X0, [X23]
	101 Move X20, [X22]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {107}
	105 Call 0x1B6F8F8
	106 Move X0, [X23]
	107 Move X8, [X0+184]
	108 Move X0, [X8+64]
	109 Compare X0, 0
	110 JumpIfEqual {125}
	111 Move X2, [X24]
	112 Move X1, X20
	113 Call ConcurrentQueue`1<Object>.Enqueue, X0, X1
	114 Move W8, [X19+24]
	115 Add X21, X21, 1
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X20, [X31+48]
	118 Move X19, [X31+56]
	119 Move X22, [X31+32]
	120 Move X21, [X31+40]
	121 Move X24, [X31+16]
	122 Move X23, [X31+24]
	123 Move X30, [X31+64]
	124 Return 
	125 Call 0x1B6FA1C
	126 Call 0x1B6FA24

Method: System.String GetActionsDebugStr(System.Collections.Generic.IList`1<AnimalCompany.BaseAction> actions)

Disassembly:
	0x01C8CEFC BL 0x1B6E8F8
	0x01C8CF00 LDR X8, [X21]
	0x01C8CF04 LDR X10, [X8 + 0xB8]
	0x01C8CF08 CMP X20, X22
	0x01C8CF0C B.EQ 0x1C8CFB8
	0x01C8CF10 LDR X0, [X10 + 0x58]
	0x01C8CF14 CBZ X0, 0x1C8CFD8
	0x01C8CF18 ADRP X8, 0x22C1000
	0x01C8CF1C LDR X8, [X8 + 0x768]
	0x01C8CF20 MOV X1, X19
	0x01C8CF24 LDR X2, [X8]
	0x01C8CF28 BL 0x27D3ED8
	0x01C8CF2C ADRP X8, 0x22C1000
	0x01C8CF30 LDR X8, [X8 + 0x738]
	0x01C8CF34 LDR X0, [X8]
	0x01C8CF38 BL 0x1B6EA0C
	0x01C8CF3C MOV X1, X19
	0x01C8CF40 MOV X2, X31
	0x01C8CF44 MOV X20, X0
	0x01C8CF48 BL 0x34235C4
	0x01C8CF4C MOV X0, X20
	0x01C8CF50 B 0x1C8CFA8
	0x01C8CF54 ADRP X19, 0x22C1000
	0x01C8CF58 LDR X19, [X19 + 0x738]
	0x01C8CF5C LDR X0, [X19]
	0x01C8CF60 LDR W8, [X0 + 0xE0]
	0x01C8CF64 CBNZ W8, 0x1C8CF6C
	0x01C8CF68 BL 0x1B6E8F8
	0x01C8CF6C ADRP X20, 0x2597000
	0x01C8CF70 LDRB W8, [X20 + 0x447]
	0x01C8CF74 CBNZ W8, 0x1C8CF8C
	0x01C8CF78 ADRP X0, 0x22C1000
	0x01C8CF7C LDR X0, [X0 + 0x738]
	0x01C8CF80 BL 0x1B6E7F0
	0x01C8CF84 MOVZ W8, 0x1
	0x01C8CF88 STRB W8, [X20 + 0x447]
	0x01C8CF8C LDR X0, [X19]
	0x01C8CF90 LDR W8, [X0 + 0xE0]
	0x01C8CF94 CBNZ W8, 0x1C8CFA0
	0x01C8CF98 BL 0x1B6E8F8
	0x01C8CF9C LDR X0, [X19]
	0x01C8CFA0 LDR X8, [X0 + 0xB8]
	0x01C8CFA4 LDR X0, [X8]
	0x01C8CFA8 LDP X20, X19, [X31 + 0x20]
	0x01C8CFAC LDP X22, X21, [X31 + 0x10]
	0x01C8CFB0 LDR X30, [X31], #0x30
	0x01C8CFB4 RET
	0x01C8CFB8 LDR X0, [X10 + 0x50]
	0x01C8CFBC CBZ X0, 0x1C8CFD8
	0x01C8CFC0 MOV X1, X19
	0x01C8CFC4 LDP X20, X19, [X31 + 0x20]
	0x01C8CFC8 LDP X22, X21, [X31 + 0x10]
	0x01C8CFCC MOV X2, X31
	0x01C8CFD0 LDR X30, [X31], #0x30
	0x01C8CFD4 B 0x3429B18
	0x01C8CFD8 BL 0x1B6EA1C
	0x01C8CFDC STR X30, [X31 - 0x30]!
	0x01C8CFE0 STP X22, X21, [X31 + 0x10]
	0x01C8CFE4 STP X20, X19, [X31 + 0x20]
	0x01C8CFE8 ADRP X22, 0x2597000
	0x01C8CFEC ADRP X21, 0x22C1000
	0x01C8CFF0 LDRB W8, [X22 + 0x38E]
	0x01C8CFF4 LDR X21, [X21 + 0x4E8]
	0x01C8CFF8 MOV X19, X1
	0x01C8CFFC MOV X20, X0
	0x01C8D000 TBNZ X8, 0x0, 0x1C8D024
	0x01C8D004 ADRP X0, 0x22C0000
	0x01C8D008 LDR X0, [X0 + 0x4E8]
	0x01C8D00C BL 0x1B6E7F0
	0x01C8D010 ADRP X0, 0x22C0000
	0x01C8D014 LDR X0, [X0 + 0x548]
	0x01C8D018 BL 0x1B6E7F0
	0x01C8D01C MOVZ W8, 0x1
	0x01C8D020 STRB W8, [X22 + 0x38E]
	0x01C8D024 LDR X0, [X21]
	0x01C8D028 LDR W8, [X0 + 0xE0]
	0x01C8D02C CBNZ W8, 0x1C8D038
	0x01C8D030 BL 0x1B6E8F8
	0x01C8D034 LDR X0, [X21]
	0x01C8D038 LDR X8, [X0 + 0xB8]
	0x01C8D03C LDR X21, [X8 + 0x10]
	0x01C8D040 CBZ X21, 0x1C8D0C0
	0x01C8D044 ADRP X10, 0x22C0000
	0x01C8D048 LDR X8, [X21]
	0x01C8D04C LDR X10, [X10 + 0x548]
	0x01C8D050 LDRH W9, [X8 + 0x12E]
	0x01C8D054 LDR X1, [X10]
	0x01C8D058 CBZ X9, 0x1C8D07C
	0x01C8D05C LDR X10, [X8 + 0xB0]
	0x01C8D060 ADD X10, X10, 0x8
	0x01C8D064 LDUR X11, [X10 - 0x8]
	0x01C8D068 CMP X11, X1
	0x01C8D06C B.EQ 0x1C8D08C
	0x01C8D070 SUBS X9, X9, 0x1
	0x01C8D074 ADD X10, X10, 0x10
	0x01C8D078 B.NE 0x1C8D064
	0x01C8D07C MOVZ W2, 0x3
	0x01C8D080 MOV X0, X21
	0x01C8D084 BL 0x1BB4284
	0x01C8D088 B 0x1C8D09C
	0x01C8D08C LDR W9, [X10]
	0x01C8D090 ADD W9, W9, 0x3
	0x01C8D094 ADD X8, X8, W9, 0x4, SXTW
	0x01C8D098 ADD X0, X8, 0x138
	0x01C8D09C LDP X5, X4, [X0]
	0x01C8D0A0 MOV X0, X21
	0x01C8D0A4 MOV X1, X20
	0x01C8D0A8 MOV X3, X19
	0x01C8D0AC LDP X20, X19, [X31 + 0x20]
	0x01C8D0B0 LDP X22, X21, [X31 + 0x10]
	0x01C8D0B4 MOVZ W2, 0x2
	0x01C8D0B8 LDR X30, [X31], #0x30
	0x01C8D0BC BR X5
	0x01C8D0C0 BL 0x1B6EA1C
	0x01C8D0C4 STR X30, [X31 - 0x30]!
	0x01C8D0C8 STP X22, X21, [X31 + 0x10]
	0x01C8D0CC STP X20, X19, [X31 + 0x20]
	0x01C8D0D0 ADRP X22, 0x2596000
	0x01C8D0D4 ADRP X21, 0x22C0000
	0x01C8D0D8 LDRB W8, [X22 + 0x38F]
	0x01C8D0DC LDR X21, [X21 + 0x4E8]
	0x01C8D0E0 MOV X19, X1
	0x01C8D0E4 MOV X20, X0
	0x01C8D0E8 TBNZ X8, 0x0, 0x1C8D10C
	0x01C8D0EC ADRP X0, 0x22C0000
	0x01C8D0F0 LDR X0, [X0 + 0x4E8]
	0x01C8D0F4 BL 0x1B6E7F0
	0x01C8D0F8 ADRP X0, 0x22C0000
	0x01C8D0FC LDR X0, [X0 + 0x548]
	0x01C8D100 BL 0x1B6E7F0
	0x01C8D104 MOVZ W8, 0x1
	0x01C8D108 STRB W8, [X22 + 0x38F]
	0x01C8D10C LDR X0, [X21]
	0x01C8D110 LDR W8, [X0 + 0xE0]
	0x01C8D114 CBNZ W8, 0x1C8D120
	0x01C8D118 BL 0x1B6E8F8
	0x01C8D11C LDR X0, [X21]
	0x01C8D120 LDR X8, [X0 + 0xB8]
	0x01C8D124 LDR X21, [X8 + 0x10]
	0x01C8D128 CBZ X21, 0x1C8D1A8
	0x01C8D12C ADRP X10, 0x22C0000
	0x01C8D130 LDR X8, [X21]
	0x01C8D134 LDR X10, [X10 + 0x548]
	0x01C8D138 LDRH W9, [X8 + 0x12E]
	0x01C8D13C LDR X1, [X10]
	0x01C8D140 CBZ X9, 0x1C8D164
	0x01C8D144 LDR X10, [X8 + 0xB0]
	0x01C8D148 ADD X10, X10, 0x8
	0x01C8D14C LDUR X11, [X10 - 0x8]
	0x01C8D150 CMP X11, X1
	0x01C8D154 B.EQ 0x1C8D174
	0x01C8D158 SUBS X9, X9, 0x1
	0x01C8D15C ADD X10, X10, 0x10
	0x01C8D160 B.NE 0x1C8D14C
	0x01C8D164 MOVZ W2, 0x3
	0x01C8D168 MOV X0, X21
	0x01C8D16C BL 0x1BB4284
	0x01C8D170 B 0x1C8D184
	0x01C8D174 LDR W9, [X10]
	0x01C8D178 ADD W9, W9, 0x3
	0x01C8D17C ADD X8, X8, W9, 0x4, SXTW
	0x01C8D180 ADD X0, X8, 0x138
	0x01C8D184 LDP X5, X4, [X0]
	0x01C8D188 MOV X0, X21
	0x01C8D18C MOV X1, X20
	0x01C8D190 MOV X3, X19
	0x01C8D194 LDP X20, X19, [X31 + 0x20]
	0x01C8D198 LDP X22, X21, [X31 + 0x10]
	0x01C8D19C MOVZ W2, 0x1
	0x01C8D1A0 LDR X30, [X31], #0x30
	0x01C8D1A4 BR X5
	0x01C8D1A8 BL 0x1B6EA1C
	0x01C8D1AC STR X30, [X31 - 0x30]!
	0x01C8D1B0 STP X22, X21, [X31 + 0x10]
	0x01C8D1B4 STP X20, X19, [X31 + 0x20]
	0x01C8D1B8 ADRP X22, 0x2596000
	0x01C8D1BC ADRP X21, 0x22C0000
	0x01C8D1C0 LDRB W8, [X22 + 0x390]
	0x01C8D1C4 LDR X21, [X21 + 0x4E8]
	0x01C8D1C8 MOV X19, X1
	0x01C8D1CC MOV X20, X0
	0x01C8D1D0 TBNZ X8, 0x0, 0x1C8D1F4
	0x01C8D1D4 ADRP X0, 0x22C0000
	0x01C8D1D8 LDR X0, [X0 + 0x4E8]
	0x01C8D1DC BL 0x1B6E7F0
	0x01C8D1E0 ADRP X0, 0x22C0000
	0x01C8D1E4 LDR X0, [X0 + 0x548]
	0x01C8D1E8 BL 0x1B6E7F0
	0x01C8D1EC MOVZ W8, 0x1
	0x01C8D1F0 STRB W8, [X22 + 0x390]
	0x01C8D1F4 LDR X0, [X21]
	0x01C8D1F8 LDR W8, [X0 + 0xE0]
	0x01C8D1FC CBNZ W8, 0x1C8D208
	0x01C8D200 BL 0x1B6E8F8
	0x01C8D204 LDR X0, [X21]
	0x01C8D208 LDR X8, [X0 + 0xB8]
	0x01C8D20C LDR X21, [X8 + 0x10]
	0x01C8D210 CBZ X21, 0x1C8D290
	0x01C8D214 ADRP X10, 0x22C0000
	0x01C8D218 LDR X8, [X21]
	0x01C8D21C LDR X10, [X10 + 0x548]
	0x01C8D220 LDRH W9, [X8 + 0x12E]
	0x01C8D224 LDR X1, [X10]
	0x01C8D228 CBZ X9, 0x1C8D24C
	0x01C8D22C LDR X10, [X8 + 0xB0]
	0x01C8D230 ADD X10, X10, 0x8
	0x01C8D234 LDUR X11, [X10 - 0x8]
	0x01C8D238 CMP X11, X1
	0x01C8D23C B.EQ 0x1C8D25C
	0x01C8D240 SUBS X9, X9, 0x1
	0x01C8D244 ADD X10, X10, 0x10
	0x01C8D248 B.NE 0x1C8D234
	0x01C8D24C MOVZ W2, 0x3
	0x01C8D250 MOV X0, X21
	0x01C8D254 BL 0x1BB4284
	0x01C8D258 B 0x1C8D26C
	0x01C8D25C LDR W9, [X10]
	0x01C8D260 ADD W9, W9, 0x3
	0x01C8D264 ADD X8, X8, W9, 0x4, SXTW
	0x01C8D268 ADD X0, X8, 0x138
	0x01C8D26C LDP X5, X4, [X0]
	0x01C8D270 MOV X0, X21
	0x01C8D274 MOV X1, X20
	0x01C8D278 MOV X3, X19
	0x01C8D27C LDP X20, X19, [X31 + 0x20]
	0x01C8D280 LDP X22, X21, [X31 + 0x10]
	0x01C8D284 MOV W2, W31
	0x01C8D288 LDR X30, [X31], #0x30
	0x01C8D28C BR X5
	0x01C8D290 BL 0x1B6EA1C
	0x01C8D294 STP X30, X23, [X31 - 0x30]!
	0x01C8D298 STP X22, X21, [X31 + 0x10]
	0x01C8D29C STP X20, X19, [X31 + 0x20]
	0x01C8D2A0 ADRP X23, 0x2596000
	0x01C8D2A4 ADRP X22, 0x22C0000
	0x01C8D2A8 LDRB W8, [X23 + 0x391]
	0x01C8D2AC LDR X22, [X22 + 0x4E8]
	0x01C8D2B0 MOV X19, X2
	0x01C8D2B4 MOV X20, X1
	0x01C8D2B8 MOV X21, X0
	0x01C8D2BC TBNZ X8, 0x0, 0x1C8D2E0
	0x01C8D2C0 ADRP X0, 0x22C0000
	0x01C8D2C4 LDR X0, [X0 + 0x4E8]
	0x01C8D2C8 BL 0x1B6E7F0
	0x01C8D2CC ADRP X0, 0x22C0000
	0x01C8D2D0 LDR X0, [X0 + 0x548]
	0x01C8D2D4 BL 0x1B6E7F0
	0x01C8D2D8 MOVZ W8, 0x1
	0x01C8D2DC STRB W8, [X23 + 0x391]
	0x01C8D2E0 LDR X0, [X22]
	0x01C8D2E4 LDR W8, [X0 + 0xE0]
	0x01C8D2E8 CBNZ W8, 0x1C8D2F4
	0x01C8D2EC BL 0x1B6E8F8
	0x01C8D2F0 LDR X0, [X22]
	0x01C8D2F4 LDR X8, [X0 + 0xB8]
	0x01C8D2F8 LDR X22, [X8 + 0x10]
	0x01C8D2FC CBZ X22, 0x1C8D380
	0x01C8D300 ADRP X10, 0x22C0000
	0x01C8D304 LDR X8, [X22]
	0x01C8D308 LDR X10, [X10 + 0x548]
	0x01C8D30C LDRH W9, [X8 + 0x12E]
	0x01C8D310 LDR X1, [X10]
	0x01C8D314 CBZ X9, 0x1C8D338
	0x01C8D318 LDR X10, [X8 + 0xB0]
	0x01C8D31C ADD X10, X10, 0x8
	0x01C8D320 LDUR X11, [X10 - 0x8]
	0x01C8D324 CMP X11, X1
	0x01C8D328 B.EQ 0x1C8D348
	0x01C8D32C SUBS X9, X9, 0x1
	0x01C8D330 ADD X10, X10, 0x10
	0x01C8D334 B.NE 0x1C8D320
	0x01C8D338 MOVZ W2, 0x4
	0x01C8D33C MOV X0, X22
	0x01C8D340 BL 0x1BB4284
	0x01C8D344 B 0x1C8D358
	0x01C8D348 LDR W9, [X10]
	0x01C8D34C ADD W9, W9, 0x4
	0x01C8D350 ADD X8, X8, W9, 0x4, SXTW
	0x01C8D354 ADD X0, X8, 0x138
	0x01C8D358 LDP X6, X5, [X0]
	0x01C8D35C MOV X0, X22
	0x01C8D360 MOV X1, X21
	0x01C8D364 MOV X2, X20
	0x01C8D368 MOV X4, X19
	0x01C8D36C LDP X20, X19, [X31 + 0x20]
	0x01C8D370 LDP X22, X21, [X31 + 0x10]
	0x01C8D374 MOVZ W3, 0x2
	0x01C8D378 LDP X30, X23, [X31], #0x30
	0x01C8D37C BR X6
	0x01C8D380 BL 0x1B6EA1C
	0x01C8D384 STP X30, X23, [X31 - 0x30]!
	0x01C8D388 STP X22, X21, [X31 + 0x10]
	0x01C8D38C STP X20, X19, [X31 + 0x20]
	0x01C8D390 ADRP X23, 0x2596000
	0x01C8D394 ADRP X22, 0x22C0000
	0x01C8D398 LDRB W8, [X23 + 0x392]
	0x01C8D39C LDR X22, [X22 + 0x4E8]
	0x01C8D3A0 MOV X19, X2
	0x01C8D3A4 MOV X20, X1
	0x01C8D3A8 MOV X21, X0
	0x01C8D3AC TBNZ X8, 0x0, 0x1C8D3D0
	0x01C8D3B0 ADRP X0, 0x22C0000
	0x01C8D3B4 LDR X0, [X0 + 0x4E8]
	0x01C8D3B8 BL 0x1B6E7F0
	0x01C8D3BC ADRP X0, 0x22C0000
	0x01C8D3C0 LDR X0, [X0 + 0x548]
	0x01C8D3C4 BL 0x1B6E7F0

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0x2598000
	014 Move W8, [X20+907]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {49}
	020 Move X0, 0x22C2000
	021 Move X0, [X0+1256]
	022 Call 0x1B6F7F0
	023 Move X0, 0x22C2000
	024 Move X0, [X0+1504]
	025 Call 0x1B6F7F0
	026 Move X0, 0x22C2000
	027 Move X0, [X0+1512]
	028 Call 0x1B6F7F0
	029 Move X0, 0x22C2000
	030 Move X0, [X0+1160]
	031 Call 0x1B6F7F0
	032 Move X0, 0x22C2000
	033 Move X0, [X0+1744]
	034 Call 0x1B6F7F0
	035 Move X0, 0x22C2000
	036 Move X0, [X0+1752]
	037 Call 0x1B6F7F0
	038 Move X0, 0x22C2000
	039 Move X0, [X0+1760]
	040 Call 0x1B6F7F0
	041 Move X0, 0x22C2000
	042 Move X0, [X0+1768]
	043 Call 0x1B6F7F0
	044 Move X0, 0x22C2000
	045 Move X0, [X0+1776]
	046 Call 0x1B6F7F0
	047 Move W8, 1
	048 Move [X20+907], W8
	049 Compare X19, 0
	050 JumpIfEqual {335}
	051 Move X24, 0x22C2000
	052 Move X8, [X19]
	053 Move X24, [X24+1504]
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Move X1, [X24]
	056 Compare X9, 0
	057 JumpIfEqual {64}
	058 Move X10, [X8+176]
	059 Add X10, X10, 8
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Subtract X9, X9, 1
	063 Add X10, X10, 16
	064 Move X0, X19
	065 Move W2, W31
	066 Call 0x1BB5284
	067 NotImplemented "Instruction LDRSW not yet implemented."
	068 Add X8, X8, X9
	069 Add X0, X8, 312
	070 Move X8, [X0]
	071 Move X1, [X0+8]
	072 Move X0, X19
	073 NotImplemented "Instruction BLR not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X10, 0x22C1000
	076 Move X8, [X19]
	077 Call 0x3D1A150
	078 Return X0
	079 NotImplemented "Instruction LDRH not yet implemented."
	080 Move X1, [X10]
	081 Compare X9, 0
	082 JumpIfEqual {89}
	083 Move X10, [X8+176]
	084 Add X10, X10, 8
	085 NotImplemented "Instruction LDUR not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Subtract X9, X9, 1
	088 Add X10, X10, 16
	089 Move X0, X19
	090 Move W2, W31
	091 Call 0x1BB5284
	092 Move X23, 0x22C1000
	093 Move X23, [X23+1256]
	094 Move X0, [X23]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {100}
	098 Call 0x1B6F8F8
	099 Move X0, [X23]
	100 Move X8, [X0+184]
	101 Move X0, [X8+104]
	102 Compare X0, 0
	103 JumpIfEqual {335}
	104 Move X1, X31
	105 Call StringBuilder.Clear, X0
	106 Move X8, [X19]
	107 Move X1, [X24]
	108 NotImplemented "Instruction LDRH not yet implemented."
	109 Compare X9, 0
	110 JumpIfEqual {117}
	111 Move X10, [X8+176]
	112 Add X10, X10, 8
	113 NotImplemented "Instruction LDUR not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Subtract X9, X9, 1
	116 Add X10, X10, 16
	117 Move X0, X19
	118 Move W2, W31
	119 Call 0x1BB5284
	120 NotImplemented "Instruction LDRSW not yet implemented."
	121 Add X8, X8, X9
	122 Add X0, X8, 312
	123 Move X8, [X0]
	124 Move X2, [X0+8]
	125 Move X0, X19
	126 Move W1, W31
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Compare X0, 0
	129 JumpIfEqual {335}
	130 Move X1, X31
	131 Call "il2cpp_vm_object_is_inst", X0
	132 Move X20, [X31+80]
	133 Move X19, [X31+88]
	134 Move X22, [X31+64]
	135 Move X21, [X31+72]
	136 Move X24, [X31+48]
	137 Move X23, [X31+56]
	138 Move X26, [X31+32]
	139 Move X25, [X31+40]
	140 Move X28, [X31+16]
	141 Move X27, [X31+24]
	142 Move X29, [X31+96]
	143 Move X30, [X31+104]
	144 Call BaseAction.GetTypeNameStripped, X0
	145 Return X0
	146 NotImplemented "Instruction LDRSW not yet implemented."
	147 Add X8, X8, X9
	148 Add X0, X8, 312
	149 Move X8, [X0]
	150 Move X1, [X0+8]
	151 Move X0, X19
	152 NotImplemented "Instruction BLR not yet implemented."
	153 Move X8, 0x22C1000
	154 Move X8, [X8+1160]
	155 Move W20, W0
	156 Move X8, [X8]
	157 Move W9, [X8+224]
	158 Compare W9, 0
	159 JumpIfNotEqual {162}
	160 Move X0, X8
	161 Call 0x1B6F8F8
	162 Move W0, 5
	163 Move W1, W20
	164 Move X2, X31
	165 Call Math.Min, X0, X1
	166 Move W20, W0
	167 Subtract W25, W0, 1
	168 Move X27, 0x22C1000
	169 Move X28, 0x22C1000
	170 Move X29, 0x22C1000
	171 Move X27, [X27+1512]
	172 Move X28, [X28+1744]
	173 Move X29, [X29+1752]
	174 Move W21, W31
	175 Move X26, X31
	176 Move X0, [X23]
	177 Move W8, [X0+224]
	178 Compare W8, 0
	179 JumpIfNotEqual {182}
	180 Call 0x1B6F8F8
	181 Move X0, [X23]
	182 Move X9, [X0+184]
	183 Move X8, [X19]
	184 Move X1, [X27]
	185 Move X22, [X9+104]
	186 NotImplemented "Instruction LDRH not yet implemented."
	187 Compare X9, 0
	188 JumpIfEqual {195}
	189 Move X10, [X8+176]
	190 Add X10, X10, 8
	191 NotImplemented "Instruction LDUR not yet implemented."
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Subtract X9, X9, 1
	194 Add X10, X10, 16
	195 Move X0, X19
	196 Move W2, W31
	197 Call 0x1BB5284
	198 NotImplemented "Instruction LDRSW not yet implemented."
	199 Add X8, X8, X9
	200 Add X0, X8, 312
	201 Move X8, [X0]
	202 Move X2, [X0+8]
	203 Move X0, X19
	204 Move W1, W21
	205 NotImplemented "Instruction BLR not yet implemented."
	206 NotImplemented "Instruction CMP not yet implemented."
	207 NotImplemented "Instruction CSEL not yet implemented."
	208 Compare X0, 0
	209 JumpIfEqual {224}
	210 Move X8, [X19]
	211 Move X1, [X27]
	212 NotImplemented "Instruction LDRH not yet implemented."
	213 Compare X9, 0
	214 JumpIfEqual {221}
	215 Move X10, [X8+176]
	216 Add X10, X10, 8
	217 NotImplemented "Instruction LDUR not yet implemented."
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Subtract X9, X9, 1
	220 Add X10, X10, 16
	221 Move X0, X19
	222 Move W2, W31
	223 Call 0x1BB5284
	224 Move X1, [X28]
	225 NotImplemented "Instruction LDRSW not yet implemented."
	226 Add X8, X8, X9
	227 Add X0, X8, 312
	228 Move X8, [X0]
	229 Move X2, [X0+8]
	230 Move X0, X19
	231 Move W1, W21
	232 NotImplemented "Instruction BLR not yet implemented."
	233 Compare X0, 0
	234 JumpIfEqual {335}
	235 Move X1, X31
	236 Call "il2cpp_vm_object_is_inst", X0
	237 Call BaseAction.GetTypeNameStripped, X0
	238 Move X1, X0
	239 Move X22, X26
	240 Compare X22, 0
	241 JumpIfEqual {335}
	242 Move X0, X22
	243 Move X2, X31
	244 Call StringBuilder.Append, X0, X1
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Move X0, [X23]
	247 Move W8, [X0+224]
	248 Compare W8, 0
	249 JumpIfNotEqual {252}
	250 Call 0x1B6F8F8
	251 Move X0, [X23]
	252 Move X8, [X0+184]
	253 Move X0, [X8+104]
	254 Compare X0, 0
	255 JumpIfEqual {335}
	256 Move X1, [X29]
	257 Move X2, X31
	258 Call StringBuilder.Append, X0, X1
	259 Add W21, W21, 1
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Move X8, [X19]
	262 Move X1, [X24]
	263 NotImplemented "Instruction LDRH not yet implemented."
	264 Compare X9, 0
	265 JumpIfEqual {272}
	266 Move X10, [X8+176]
	267 Add X10, X10, 8
	268 NotImplemented "Instruction LDUR not yet implemented."
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Subtract X9, X9, 1
	271 Add X10, X10, 16
	272 Move X0, X19
	273 Move W2, W31
	274 Call 0x1BB5284
	275 NotImplemented "Instruction LDRSW not yet implemented."
	276 Add X8, X8, X9
	277 Add X0, X8, 312
	278 Move X8, [X0]
	279 Move X1, [X0+8]
	280 Move X0, X19
	281 NotImplemented "Instruction BLR not yet implemented."
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Move X0, [X23]
	284 Move W8, [X0+224]
	285 Compare W8, 0
	286 JumpIfNotEqual {289}
	287 Call 0x1B6F8F8
	288 Move X0, [X23]
	289 Move X8, [X0+184]
	290 Move X0, [X8+104]
	291 Compare X0, 0
	292 JumpIfEqual {335}
	293 Move X8, 0x22C1000
	294 Move X8, [X8+1760]
	295 Move X2, X31
	296 Move X1, [X8]
	297 Call StringBuilder.Append, X0, X1
	298 Move X0, [X23]
	299 Move W8, [X0+224]
	300 Compare W8, 0
	301 JumpIfNotEqual {304}
	302 Call 0x1B6F8F8
	303 Move X0, [X23]
	304 Move X8, [X0+184]
	305 Move X0, [X8+104]
	306 Compare X0, 0
	307 JumpIfEqual {335}
	308 Move X8, [X0]
	309 Move X9, [X8+360]
	310 Move X1, [X8+368]
	311 NotImplemented "Instruction BLR not yet implemented."
	312 Move X8, 0x22C1000
	313 Move X8, [X8+1776]
	314 Move X9, 0x22C1000
	315 Move X9, [X9+1768]
	316 Move X20, [X31+80]
	317 Move X19, [X31+88]
	318 Move X8, [X8]
	319 Move X22, [X31+64]
	320 Move X21, [X31+72]
	321 Move X2, [X9]
	322 Move X24, [X31+48]
	323 Move X23, [X31+56]
	324 Move X26, [X31+32]
	325 Move X25, [X31+40]
	326 Move X28, [X31+16]
	327 Move X27, [X31+24]
	328 Move X1, X0
	329 Move X0, X8
	330 Move X3, X31
	331 Move X29, [X31+96]
	332 Move X30, [X31+104]
	333 Call String.Concat, X0, X1, X2
	334 Return X0
	335 Call 0x1B6FA1C

Method: SpatialSys.CommandLib.CommandHandle ExecuteCommand(SpatialSys.CommandLib.Command command, System.Boolean silent = False)

Disassembly:
	0x01C8D958 B 0x24BDA64
	0x01C8D95C BL 0x1B6EA1C
	0x01C8D960 STR X30, [X31 - 0x40]!
	0x01C8D964 STP X24, X23, [X31 + 0x10]
	0x01C8D968 STP X22, X21, [X31 + 0x20]
	0x01C8D96C STP X20, X19, [X31 + 0x30]
	0x01C8D970 ADRP X21, 0x2596000
	0x01C8D974 ADRP X23, 0x22C0000
	0x01C8D978 LDRB W8, [X21 + 0x399]
	0x01C8D97C LDR X23, [X23 + 0x7B8]
	0x01C8D980 MOV W20, W1
	0x01C8D984 MOV X19, X0
	0x01C8D988 TBNZ X8, 0x0, 0x1C8D9C4
	0x01C8D98C ADRP X0, 0x22C0000
	0x01C8D990 LDR X0, [X0 + 0x7C0]
	0x01C8D994 BL 0x1B6E7F0
	0x01C8D998 ADRP X0, 0x22C0000
	0x01C8D99C LDR X0, [X0 + 0x7C8]
	0x01C8D9A0 BL 0x1B6E7F0
	0x01C8D9A4 ADRP X0, 0x22C0000
	0x01C8D9A8 LDR X0, [X0 + 0x7D0]
	0x01C8D9AC BL 0x1B6E7F0
	0x01C8D9B0 ADRP X0, 0x22C0000
	0x01C8D9B4 LDR X0, [X0 + 0x7B8]
	0x01C8D9B8 BL 0x1B6E7F0
	0x01C8D9BC MOVZ W8, 0x1
	0x01C8D9C0 STRB W8, [X21 + 0x399]
	0x01C8D9C4 LDR X0, [X23]
	0x01C8D9C8 LDR W8, [X0 + 0xE0]
	0x01C8D9CC CBNZ W8, 0x1C8D9D8
	0x01C8D9D0 BL 0x1B6E8F8
	0x01C8D9D4 LDR X0, [X23]
	0x01C8D9D8 LDR X8, [X0 + 0xB8]
	0x01C8D9DC ADRP X24, 0x22C0000
	0x01C8D9E0 LDR X21, [X8 + 0x8]
	0x01C8D9E4 LDR X24, [X24 + 0x7C0]
	0x01C8D9E8 CBNZ X21, 0x1C8DA3C
	0x01C8D9EC LDR W8, [X0 + 0xE0]
	0x01C8D9F0 CBNZ W8, 0x1C8D9FC
	0x01C8D9F4 BL 0x1B6E8F8
	0x01C8D9F8 LDR X0, [X23]
	0x01C8D9FC ADRP X9, 0x22C0000
	0x01C8DA00 LDR X8, [X0 + 0xB8]
	0x01C8DA04 LDR X9, [X9 + 0x7C8]
	0x01C8DA08 LDR X22, [X8]
	0x01C8DA0C LDR X0, [X9]
	0x01C8DA10 BL 0x1B6EA0C
	0x01C8DA14 ADRP X8, 0x22C0000
	0x01C8DA18 LDR X8, [X8 + 0x7D0]
	0x01C8DA1C MOV X1, X22
	0x01C8DA20 MOV X3, X31
	0x01C8DA24 MOV X21, X0
	0x01C8DA28 LDR X2, [X8]
	0x01C8DA2C BL 0x2B7A834
	0x01C8DA30 LDR X8, [X23]
	0x01C8DA34 LDR X8, [X8 + 0xB8]
	0x01C8DA38 STR X21, [X8 + 0x8]
	0x01C8DA3C LDR X3, [X24]
	0x01C8DA40 AND W2, W20, 0x1
	0x01C8DA44 MOV X0, X19
	0x01C8DA48 MOV X1, X21
	0x01C8DA4C LDP X20, X19, [X31 + 0x30]
	0x01C8DA50 LDP X22, X21, [X31 + 0x20]
	0x01C8DA54 LDP X24, X23, [X31 + 0x10]
	0x01C8DA58 LDR X30, [X31], #0x40
	0x01C8DA5C B 0x271B0D4
	0x01C8DA60 STR X30, [X31 - 0x20]!
	0x01C8DA64 STP X20, X19, [X31 + 0x10]
	0x01C8DA68 ADRP X19, 0x2596000
	0x01C8DA6C ADRP X20, 0x22C0000
	0x01C8DA70 LDRB W8, [X19 + 0x39A]
	0x01C8DA74 LDR X20, [X20 + 0x7B8]
	0x01C8DA78 TBNZ X8, 0x0, 0x1C8DA90
	0x01C8DA7C ADRP X0, 0x22C0000
	0x01C8DA80 LDR X0, [X0 + 0x7B8]
	0x01C8DA84 BL 0x1B6E7F0
	0x01C8DA88 MOVZ W8, 0x1
	0x01C8DA8C STRB W8, [X19 + 0x39A]
	0x01C8DA90 LDR X0, [X20]
	0x01C8DA94 BL 0x1B6EA0C
	0x01C8DA98 MOV X1, X31
	0x01C8DA9C MOV X19, X0
	0x01C8DAA0 BL 0x32276F8
	0x01C8DAA4 LDR X8, [X20]
	0x01C8DAA8 LDR X8, [X8 + 0xB8]
	0x01C8DAAC STR X19, [X8]
	0x01C8DAB0 LDP X20, X19, [X31 + 0x10]
	0x01C8DAB4 LDR X30, [X31], #0x20
	0x01C8DAB8 RET
	0x01C8DABC MOV X1, X31
	0x01C8DAC0 B 0x32276F8
	0x01C8DAC4 STR X30, [X31 - 0x10]!
	0x01C8DAC8 CBZ X1, 0x1C8DAD8
	0x01C8DACC LDR X0, [X1 + 0x60]
	0x01C8DAD0 LDR X30, [X31], #0x10
	0x01C8DAD4 RET
	0x01C8DAD8 BL 0x1B6EA1C
	0x01C8DADC STR X30, [X31 - 0x40]!
	0x01C8DAE0 STP X24, X23, [X31 + 0x10]
	0x01C8DAE4 STP X22, X21, [X31 + 0x20]
	0x01C8DAE8 STP X20, X19, [X31 + 0x30]
	0x01C8DAEC ADRP X21, 0x2596000
	0x01C8DAF0 ADRP X23, 0x22C0000
	0x01C8DAF4 LDRB W8, [X21 + 0x39B]
	0x01C8DAF8 LDR X23, [X23 + 0x7D8]
	0x01C8DAFC MOV W20, W1
	0x01C8DB00 MOV X19, X0
	0x01C8DB04 TBNZ X8, 0x0, 0x1C8DB40
	0x01C8DB08 ADRP X0, 0x22C0000
	0x01C8DB0C LDR X0, [X0 + 0x7C0]
	0x01C8DB10 BL 0x1B6E7F0
	0x01C8DB14 ADRP X0, 0x22C0000
	0x01C8DB18 LDR X0, [X0 + 0x7C8]
	0x01C8DB1C BL 0x1B6E7F0
	0x01C8DB20 ADRP X0, 0x22C0000
	0x01C8DB24 LDR X0, [X0 + 0x7E0]
	0x01C8DB28 BL 0x1B6E7F0
	0x01C8DB2C ADRP X0, 0x22C0000
	0x01C8DB30 LDR X0, [X0 + 0x7D8]
	0x01C8DB34 BL 0x1B6E7F0
	0x01C8DB38 MOVZ W8, 0x1
	0x01C8DB3C STRB W8, [X21 + 0x39B]
	0x01C8DB40 LDR X0, [X23]
	0x01C8DB44 LDR W8, [X0 + 0xE0]
	0x01C8DB48 CBNZ W8, 0x1C8DB54
	0x01C8DB4C BL 0x1B6E8F8
	0x01C8DB50 LDR X0, [X23]
	0x01C8DB54 LDR X8, [X0 + 0xB8]
	0x01C8DB58 ADRP X24, 0x22C0000
	0x01C8DB5C LDR X21, [X8 + 0x8]
	0x01C8DB60 LDR X24, [X24 + 0x7C0]
	0x01C8DB64 CBNZ X21, 0x1C8DBB8
	0x01C8DB68 LDR W8, [X0 + 0xE0]
	0x01C8DB6C CBNZ W8, 0x1C8DB78
	0x01C8DB70 BL 0x1B6E8F8
	0x01C8DB74 LDR X0, [X23]
	0x01C8DB78 ADRP X9, 0x22C0000
	0x01C8DB7C LDR X8, [X0 + 0xB8]
	0x01C8DB80 LDR X9, [X9 + 0x7C8]
	0x01C8DB84 LDR X22, [X8]
	0x01C8DB88 LDR X0, [X9]
	0x01C8DB8C BL 0x1B6EA0C
	0x01C8DB90 ADRP X8, 0x22C0000
	0x01C8DB94 LDR X8, [X8 + 0x7E0]
	0x01C8DB98 MOV X1, X22
	0x01C8DB9C MOV X3, X31
	0x01C8DBA0 MOV X21, X0
	0x01C8DBA4 LDR X2, [X8]
	0x01C8DBA8 BL 0x2B7A834
	0x01C8DBAC LDR X8, [X23]
	0x01C8DBB0 LDR X8, [X8 + 0xB8]
	0x01C8DBB4 STR X21, [X8 + 0x8]
	0x01C8DBB8 LDR X3, [X24]
	0x01C8DBBC AND W2, W20, 0x1
	0x01C8DBC0 MOV X0, X19
	0x01C8DBC4 MOV X1, X21
	0x01C8DBC8 LDP X20, X19, [X31 + 0x30]
	0x01C8DBCC LDP X22, X21, [X31 + 0x20]
	0x01C8DBD0 LDP X24, X23, [X31 + 0x10]
	0x01C8DBD4 LDR X30, [X31], #0x40
	0x01C8DBD8 B 0x271B0D4
	0x01C8DBDC STR X30, [X31 - 0x20]!
	0x01C8DBE0 STP X20, X19, [X31 + 0x10]
	0x01C8DBE4 ADRP X19, 0x2596000
	0x01C8DBE8 ADRP X20, 0x22C0000
	0x01C8DBEC LDRB W8, [X19 + 0x39C]
	0x01C8DBF0 LDR X20, [X20 + 0x7D8]
	0x01C8DBF4 TBNZ X8, 0x0, 0x1C8DC0C
	0x01C8DBF8 ADRP X0, 0x22C0000
	0x01C8DBFC LDR X0, [X0 + 0x7D8]
	0x01C8DC00 BL 0x1B6E7F0
	0x01C8DC04 MOVZ W8, 0x1
	0x01C8DC08 STRB W8, [X19 + 0x39C]
	0x01C8DC0C LDR X0, [X20]
	0x01C8DC10 BL 0x1B6EA0C
	0x01C8DC14 MOV X1, X31
	0x01C8DC18 MOV X19, X0
	0x01C8DC1C BL 0x32276F8
	0x01C8DC20 LDR X8, [X20]
	0x01C8DC24 LDR X8, [X8 + 0xB8]
	0x01C8DC28 STR X19, [X8]
	0x01C8DC2C LDP X20, X19, [X31 + 0x10]
	0x01C8DC30 LDR X30, [X31], #0x20
	0x01C8DC34 RET
	0x01C8DC38 MOV X1, X31
	0x01C8DC3C B 0x32276F8
	0x01C8DC40 STR X30, [X31 - 0x10]!
	0x01C8DC44 CBZ X1, 0x1C8DC54
	0x01C8DC48 LDR X0, [X1 + 0xA0]
	0x01C8DC4C LDR X30, [X31], #0x10
	0x01C8DC50 RET
	0x01C8DC54 BL 0x1B6EA1C
	0x01C8DC58 STP X30, X23, [X31 - 0x30]!
	0x01C8DC5C STP X22, X21, [X31 + 0x10]
	0x01C8DC60 STP X20, X19, [X31 + 0x20]
	0x01C8DC64 ADRP X22, 0x2596000
	0x01C8DC68 ADRP X23, 0x22C0000
	0x01C8DC6C ADRP X20, 0x22C0000
	0x01C8DC70 ADRP X21, 0x22C0000
	0x01C8DC74 LDRB W8, [X22 + 0x39D]
	0x01C8DC78 LDR X23, [X23 + 0x7E8]
	0x01C8DC7C LDR X20, [X20 + 0x7F0]
	0x01C8DC80 LDR X21, [X21 + 0x4E8]
	0x01C8DC84 MOV X19, X0
	0x01C8DC88 TBNZ X8, 0x0, 0x1C8DCB8
	0x01C8DC8C ADRP X0, 0x22C0000
	0x01C8DC90 LDR X0, [X0 + 0x7F0]
	0x01C8DC94 BL 0x1B6E7F0
	0x01C8DC98 ADRP X0, 0x22C0000
	0x01C8DC9C LDR X0, [X0 + 0x4E8]
	0x01C8DCA0 BL 0x1B6E7F0
	0x01C8DCA4 ADRP X0, 0x22C0000
	0x01C8DCA8 LDR X0, [X0 + 0x7E8]
	0x01C8DCAC BL 0x1B6E7F0
	0x01C8DCB0 MOVZ W8, 0x1
	0x01C8DCB4 STRB W8, [X22 + 0x39D]
	0x01C8DCB8 LDR X0, [X23]
	0x01C8DCBC BL 0x1B6EA0C
	0x01C8DCC0 LDR X2, [X20]
	0x01C8DCC4 MOV X1, X19
	0x01C8DCC8 MOV X3, X31
	0x01C8DCCC MOV X20, X0
	0x01C8DCD0 BL 0x3425F88
	0x01C8DCD4 MOV X0, X20
	0x01C8DCD8 MOV W1, W31
	0x01C8DCDC MOV X2, X31
	0x01C8DCE0 BL 0x3425A8C
	0x01C8DCE4 LDR X8, [X21]
	0x01C8DCE8 MOV X20, X0
	0x01C8DCEC LDR W9, [X8 + 0xE0]
	0x01C8DCF0 CBNZ W9, 0x1C8DCFC
	0x01C8DCF4 MOV X0, X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2597000
	007 Move X22, 0x22C1000
	008 Move W8, [X21+908]
	009 Move X22, [X22+1256]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {48}
	016 Move X0, 0x22C1000
	017 Move X0, [X0+1256]
	018 Call 0x1B6F7F0
	019 Move X0, 0x22C1000
	020 Move X0, [X0+1848]
	021 Call 0x1B6F7F0
	022 Move X0, 0x22C1000
	023 Move X0, [X0+1456]
	024 Call 0x1B6F7F0
	025 Move X0, 0x22C1000
	026 Move X0, [X0+1464]
	027 Call 0x1B6F7F0
	028 Move X0, 0x22C1000
	029 Move X0, [X0+1472]
	030 Call 0x1B6F7F0
	031 Move X0, 0x22C1000
	032 Move X0, [X0+1576]
	033 Call 0x1B6F7F0
	034 Move X0, 0x22C1000
	035 Move X0, [X0+1856]
	036 Call 0x1B6F7F0
	037 Move X0, 0x22C1000
	038 Move X0, [X0+1864]
	039 Call 0x1B6F7F0
	040 Move X0, 0x22C1000
	041 Move X0, [X0+1872]
	042 Call 0x1B6F7F0
	043 Move X0, 0x22C1000
	044 Move X0, [X0+1624]
	045 Call 0x1B6F7F0
	046 Move W8, 1
	047 Move [X21+908], W8
	048 Move X0, X31
	049 Call Thread.get_CurrentThread
	050 Move X8, [X22]
	051 Move X21, X0
	052 Move W9, [X8+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {58}
	055 Move X0, X8
	056 Call 0x1B6F8F8
	057 Move X8, [X22]
	058 Move X8, [X8+184]
	059 Move X8, [X8+96]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Compare X19, 0
	062 JumpIfEqual {152}
	063 Move TEMP, X20
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {71}
	067 Move W1, 1
	068 Move X0, X19
	069 Move X2, X31
	070 Call Command.set_silent, X0, X1
	071 Move X0, X19
	072 Move X1, X31
	073 Call Command.get_silent, X0
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {93}
	078 Move X8, 0x22C1000
	079 Move X8, [X8+1576]
	080 Move X0, [X8]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1B6F8F8
	085 Move W0, 5
	086 Move W1, 512
	087 Move X2, X31
	088 Call Log.IsEnabled, X0, X1
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {144}
	093 Move X0, X19
	094 Move X1, X31
	095 Call Command.get_identifier, X0
	096 Move X8, 0x22C1000
	097 Move X8, [X8+1856]
	098 Move X1, X0
	099 Move X2, X31
	100 Move X8, [X8]
	101 Move X0, X8
	102 Call String.Concat, X0, X1
	103 Move X8, 0x22C1000
	104 Move X8, [X8+1472]
	105 Move X20, X0
	106 Move X8, [X8]
	107 Move X0, X8
	108 Call 0x1B6FA0C
	109 Move X8, 0x22C1000
	110 Move X8, [X8+1464]
	111 Move X21, X0
	112 Move X1, [X8]
	113 Call Dictionary`2<Object, Object>..ctor, X0
	114 Compare X21, 0
	115 JumpIfEqual {263}
	116 Move X8, 0x22C1000
	117 Move X9, 0x22C1000
	118 Move X8, [X8+1872]
	119 Move X9, [X9+1456]
	120 Move X0, X21
	121 Move X2, X19
	122 Move X1, [X8]
	123 Move X3, [X9]
	124 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	125 Move X8, 0x22C1000
	126 Move X8, [X8+1576]
	127 Move X0, [X8]
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {132}
	131 Call 0x1B6F8F8
	132 Move X8, 0x22C1000
	133 Move X9, 0x22C1000
	134 Move X8, [X8+1624]
	135 Move X9, [X9+1864]
	136 Move W0, 512
	137 Move W5, 426
	138 Move X3, [X8]
	139 Move X4, [X9]
	140 Move X1, X20
	141 Move X2, X21
	142 Move X6, X31
	143 Call Log.Info, X0, X1, X2, X3, X4, X5
	144 Move S0, W31
	145 Move X0, X19
	146 Move X1, X31
	147 Call Command.Update, X0, V0
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {182}
	152 Move X19, 0x22C1000
	153 Move X19, [X19+1848]
	154 Move X0, [X19]
	155 Move W8, [X0+224]
	156 Compare W8, 0
	157 JumpIfNotEqual {159}
	158 Call 0x1B6F8F8
	159 Move X20, 0x2597000
	160 Move W8, [X20+1095]
	161 Compare W8, 0
	162 JumpIfNotEqual {168}
	163 Move X0, 0x22C1000
	164 Move X0, [X0+1848]
	165 Call 0x1B6F7F0
	166 Move W8, 1
	167 Move [X20+1095], W8
	168 Move X0, [X19]
	169 Move W8, [X0+224]
	170 Compare W8, 0
	171 JumpIfNotEqual {174}
	172 Call 0x1B6F8F8
	173 Move X0, [X19]
	174 Move X8, [X0+184]
	175 Move X20, [X31+32]
	176 Move X19, [X31+40]
	177 Move X22, [X31+16]
	178 Move X21, [X31+24]
	179 Move X0, [X8]
	180 Move X30, [X31+48]
	181 Return X0
	182 Move X0, [X22]
	183 Move W8, [X0+224]
	184 Compare W8, 0
	185 JumpIfNotEqual {188}
	186 Call 0x1B6F8F8
	187 Move X0, [X22]
	188 Move X8, [X0+184]
	189 Move X0, [X8+80]
	190 Compare X0, 0
	191 JumpIfEqual {263}
	192 Move X1, X19
	193 Move X20, [X31+32]
	194 Move X19, [X31+40]
	195 Move X22, [X31+16]
	196 Move X21, [X31+24]
	197 Move X2, X31
	198 Move X30, [X31+48]
	199 Call CommandScheduler.Add, X0, X1
	200 Return X0
	201 Move X0, 0x22C1000
	202 Move X0, [X0+1648]
	203 Call 0x1B6F804
	204 Call 0x1B6FA0C
	205 Move X20, X0
	206 Move X0, 0x22C1000
	207 Move X0, [X0+1880]
	208 Call 0x1B6F804
	209 Move X1, X0
	210 Move X0, X20
	211 Move X2, X31
	212 Call Exception..ctor, X0, X1
	213 Move X0, 0x22C1000
	214 Move X0, [X0+1472]
	215 Call 0x1B6F804
	216 Call 0x1B6FA0C
	217 Move X21, X0
	218 Move X0, 0x22C1000
	219 Move X0, [X0+1464]
	220 Call 0x1B6F804
	221 Move X1, X0
	222 Move X0, X21
	223 Call 0x18F5624
	224 Move X0, X21
	225 Call 0x18F54E0
	226 Move X0, 0x22C1000
	227 Move X0, [X0+1872]
	228 Call 0x1B6F804
	229 Move X22, X0
	230 Move X0, 0x22C1000
	231 Move X0, [X0+1456]
	232 Call 0x1B6F804
	233 Move X3, X0
	234 Move X0, X21
	235 Move X1, X22
	236 Move X2, X19
	237 Call 0x18F5628
	238 Move X0, 0x22C1000
	239 Move X0, [X0+1576]
	240 Call 0x1B6F804
	241 Call 0x18F54F0
	242 Move X0, 0x22C1000
	243 Move X0, [X0+1624]
	244 Call 0x1B6F804
	245 Move X19, X0
	246 Move X0, 0x22C1000
	247 Move X0, [X0+1864]
	248 Call 0x1B6F804
	249 Move X4, X0
	250 Move W0, 256
	251 Move W5, 414
	252 Move X1, X20
	253 Move X2, X21
	254 Move X3, X19
	255 Move X6, X31
	256 Call Log.Error, X0, X1, X2, X3, X4, X5
	257 Move X0, 0x22C1000
	258 Move X0, [X0+1888]
	259 Call 0x1B6F804
	260 Move X1, X0
	261 Move X0, X20
	262 Call 0x1B6F8E8
	263 Call 0x1B6FA1C

Method: SpatialSys.CommandLib.CommandHandle ScheduleCommand(SpatialSys.CommandLib.Command command, System.Boolean silent = False)

Disassembly:
	0x01C8DCF8 BL 0x1B6E8F8
	0x01C8DCFC MOV X0, X20
	0x01C8DD00 MOV W1, W31
	0x01C8DD04 BL 0x1C8C958
	0x01C8DD08 STR X0, [X19 + 0x40]
	0x01C8DD0C LDP X20, X19, [X31 + 0x20]
	0x01C8DD10 LDP X22, X21, [X31 + 0x10]
	0x01C8DD14 LDP X30, X23, [X31], #0x30
	0x01C8DD18 RET
	0x01C8DD1C STP X30, X21, [X31 - 0x20]!
	0x01C8DD20 STP X20, X19, [X31 + 0x10]
	0x01C8DD24 ADRP X20, 0x2596000
	0x01C8DD28 ADRP X21, 0x22C0000
	0x01C8DD2C LDRB W8, [X20 + 0x39E]
	0x01C8DD30 LDR X21, [X21 + 0x7F8]
	0x01C8DD34 MOV X19, X0
	0x01C8DD38 TBNZ X8, 0x0, 0x1C8DD50
	0x01C8DD3C ADRP X0, 0x22C0000
	0x01C8DD40 LDR X0, [X0 + 0x7F8]
	0x01C8DD44 BL 0x1B6E7F0
	0x01C8DD48 MOVZ W8, 0x1
	0x01C8DD4C STRB W8, [X20 + 0x39E]
	0x01C8DD50 LDR X0, [X21]
	0x01C8DD54 BL 0x1B6EA0C
	0x01C8DD58 MOV X1, X31
	0x01C8DD5C MOV X20, X0
	0x01C8DD60 BL 0x32276F8
	0x01C8DD64 STR W31, [X20 + 0x10]
	0x01C8DD68 STR X19, [X20 + 0x20]
	0x01C8DD6C MOV X0, X20
	0x01C8DD70 LDP X20, X19, [X31 + 0x10]
	0x01C8DD74 LDP X30, X21, [X31], #0x20
	0x01C8DD78 RET
	0x01C8DD7C STR X30, [X31 - 0x20]!
	0x01C8DD80 STP X20, X19, [X31 + 0x10]
	0x01C8DD84 MOV W19, W1
	0x01C8DD88 MOV X1, X31
	0x01C8DD8C MOV X20, X0
	0x01C8DD90 BL 0x32276F8
	0x01C8DD94 STR W19, [X20 + 0x10]
	0x01C8DD98 LDP X20, X19, [X31 + 0x10]
	0x01C8DD9C LDR X30, [X31], #0x20
	0x01C8DDA0 RET
	0x01C8DDA4 STP X30, X27, [X31 - 0x50]!
	0x01C8DDA8 STP X26, X25, [X31 + 0x10]
	0x01C8DDAC STP X24, X23, [X31 + 0x20]
	0x01C8DDB0 STP X22, X21, [X31 + 0x30]
	0x01C8DDB4 STP X20, X19, [X31 + 0x40]
	0x01C8DDB8 ADRP X27, 0x2596000
	0x01C8DDBC ADRP X26, 0x22C0000
	0x01C8DDC0 LDRB W8, [X27 + 0x39F]
	0x01C8DDC4 LDR X26, [X26 + 0x800]
	0x01C8DDC8 MOV X24, X6
	0x01C8DDCC MOV X23, X5
	0x01C8DDD0 MOV X19, X4
	0x01C8DDD4 MOV X20, X3
	0x01C8DDD8 MOV X21, X2
	0x01C8DDDC MOV X22, X1
	0x01C8DDE0 MOV X25, X0
	0x01C8DDE4 TBNZ X8, 0x0, 0x1C8DE14
	0x01C8DDE8 ADRP X0, 0x22C0000
	0x01C8DDEC LDR X0, [X0 + 0x800]
	0x01C8DDF0 BL 0x1B6E7F0
	0x01C8DDF4 ADRP X0, 0x22C0000
	0x01C8DDF8 LDR X0, [X0 + 0x808]
	0x01C8DDFC BL 0x1B6E7F0
	0x01C8DE00 ADRP X0, 0x22C0000
	0x01C8DE04 LDR X0, [X0 + 0x810]
	0x01C8DE08 BL 0x1B6E7F0
	0x01C8DE0C MOVZ W8, 0x1
	0x01C8DE10 STRB W8, [X27 + 0x39F]
	0x01C8DE14 LDR W8, [X25 + 0x20]
	0x01C8DE18 STR W8, [X23]
	0x01C8DE1C LDR W8, [X25 + 0x28]
	0x01C8DE20 STR W8, [X24]
	0x01C8DE24 STR W31, [X23]
	0x01C8DE28 LDR X0, [X26]
	0x01C8DE2C LDR W8, [X0 + 0xE0]
	0x01C8DE30 CBNZ W8, 0x1C8DE38
	0x01C8DE34 BL 0x1B6E8F8
	0x01C8DE38 MOV X0, X31
	0x01C8DE3C BL 0x3A6A728
	0x01C8DE40 CBZ X0, 0x1C8DEB0
	0x01C8DE44 MOVZ W1, 0x5F
	0x01C8DE48 MOV W2, W31
	0x01C8DE4C MOV X3, X31
	0x01C8DE50 BL 0x3092930
	0x01C8DE54 CBZ X0, 0x1C8DEB0
	0x01C8DE58 LDR W8, [X0 + 0x18]
	0x01C8DE5C CBZ W8, 0x1C8DEB4
	0x01C8DE60 LDR X9, [X0 + 0x20]
	0x01C8DE64 CMP W8, 0x1
	0x01C8DE68 STR X9, [X22]
	0x01C8DE6C B.EQ 0x1C8DEB4
	0x01C8DE70 LDR X8, [X0 + 0x28]
	0x01C8DE74 ADRP X9, 0x22C0000
	0x01C8DE78 LDR X9, [X9 + 0x808]
	0x01C8DE7C STR X8, [X21]
	0x01C8DE80 LDR X8, [X9]
	0x01C8DE84 ADRP X9, 0x22C0000
	0x01C8DE88 LDR X9, [X9 + 0x810]
	0x01C8DE8C LDP X22, X21, [X31 + 0x30]
	0x01C8DE90 STR X8, [X20]
	0x01C8DE94 LDP X24, X23, [X31 + 0x20]
	0x01C8DE98 LDR X8, [X9]
	0x01C8DE9C LDP X26, X25, [X31 + 0x10]
	0x01C8DEA0 STR X8, [X19]
	0x01C8DEA4 LDP X20, X19, [X31 + 0x40]
	0x01C8DEA8 LDP X30, X27, [X31], #0x50
	0x01C8DEAC RET
	0x01C8DEB0 BL 0x1B6EA1C
	0x01C8DEB4 BL 0x1B6EA24
	0x01C8DEB8 STR X30, [X31 - 0x50]!
	0x01C8DEBC STP X26, X25, [X31 + 0x10]
	0x01C8DEC0 STP X24, X23, [X31 + 0x20]
	0x01C8DEC4 STP X22, X21, [X31 + 0x30]
	0x01C8DEC8 STP X20, X19, [X31 + 0x40]
	0x01C8DECC ADRP X20, 0x2596000
	0x01C8DED0 ADRP X21, 0x22C0000
	0x01C8DED4 ADRP X22, 0x22C0000
	0x01C8DED8 LDRB W8, [X20 + 0x3A0]
	0x01C8DEDC LDR X21, [X21 + 0x818]
	0x01C8DEE0 LDR X22, [X22 + 0x820]
	0x01C8DEE4 MOV X19, X1
	0x01C8DEE8 TBNZ X8, 0x0, 0x1C8DFF0
	0x01C8DEEC ADRP X0, 0x22C0000
	0x01C8DEF0 LDR X0, [X0 + 0x820]
	0x01C8DEF4 BL 0x1B6E7F0
	0x01C8DEF8 ADRP X0, 0x22C0000
	0x01C8DEFC LDR X0, [X0 + 0x828]
	0x01C8DF00 BL 0x1B6E7F0
	0x01C8DF04 ADRP X0, 0x22C0000
	0x01C8DF08 LDR X0, [X0 + 0x830]
	0x01C8DF0C BL 0x1B6E7F0
	0x01C8DF10 ADRP X0, 0x22C0000
	0x01C8DF14 LDR X0, [X0 + 0x838]
	0x01C8DF18 BL 0x1B6E7F0
	0x01C8DF1C ADRP X0, 0x22C0000
	0x01C8DF20 LDR X0, [X0 + 0x840]
	0x01C8DF24 BL 0x1B6E7F0
	0x01C8DF28 ADRP X0, 0x22C0000
	0x01C8DF2C LDR X0, [X0 + 0x848]
	0x01C8DF30 BL 0x1B6E7F0
	0x01C8DF34 ADRP X0, 0x22C0000
	0x01C8DF38 LDR X0, [X0 + 0x850]
	0x01C8DF3C BL 0x1B6E7F0
	0x01C8DF40 ADRP X0, 0x22C0000
	0x01C8DF44 LDR X0, [X0 + 0x858]
	0x01C8DF48 BL 0x1B6E7F0
	0x01C8DF4C ADRP X0, 0x22C0000
	0x01C8DF50 LDR X0, [X0 + 0x5F8]
	0x01C8DF54 BL 0x1B6E7F0
	0x01C8DF58 ADRP X0, 0x22C0000
	0x01C8DF5C LDR X0, [X0 + 0x860]
	0x01C8DF60 BL 0x1B6E7F0
	0x01C8DF64 ADRP X0, 0x22C0000
	0x01C8DF68 LDR X0, [X0 + 0x868]
	0x01C8DF6C BL 0x1B6E7F0
	0x01C8DF70 ADRP X0, 0x22C0000
	0x01C8DF74 LDR X0, [X0 + 0x870]
	0x01C8DF78 BL 0x1B6E7F0
	0x01C8DF7C ADRP X0, 0x22C0000
	0x01C8DF80 LDR X0, [X0 + 0x878]
	0x01C8DF84 BL 0x1B6E7F0
	0x01C8DF88 ADRP X0, 0x22C0000
	0x01C8DF8C LDR X0, [X0 + 0x880]
	0x01C8DF90 BL 0x1B6E7F0
	0x01C8DF94 ADRP X0, 0x22C0000
	0x01C8DF98 LDR X0, [X0 + 0x888]
	0x01C8DF9C BL 0x1B6E7F0
	0x01C8DFA0 ADRP X0, 0x22C0000
	0x01C8DFA4 LDR X0, [X0 + 0x890]
	0x01C8DFA8 BL 0x1B6E7F0
	0x01C8DFAC ADRP X0, 0x22C0000
	0x01C8DFB0 LDR X0, [X0 + 0x818]
	0x01C8DFB4 BL 0x1B6E7F0
	0x01C8DFB8 ADRP X0, 0x22C0000
	0x01C8DFBC LDR X0, [X0 + 0x898]
	0x01C8DFC0 BL 0x1B6E7F0
	0x01C8DFC4 ADRP X0, 0x22C0000
	0x01C8DFC8 LDR X0, [X0 + 0x8A0]
	0x01C8DFCC BL 0x1B6E7F0
	0x01C8DFD0 ADRP X0, 0x22C0000
	0x01C8DFD4 LDR X0, [X0 + 0x8A8]
	0x01C8DFD8 BL 0x1B6E7F0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2597000
	007 Move W8, [X21+909]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {49}
	014 Move X0, 0x22C1000
	015 Move X0, [X0+1256]
	016 Call 0x1B6F7F0
	017 Move X0, 0x22C1000
	018 Move X0, [X0+1848]
	019 Call 0x1B6F7F0
	020 Move X0, 0x22C1000
	021 Move X0, [X0+1896]
	022 Call 0x1B6F7F0
	023 Move X0, 0x22C1000
	024 Move X0, [X0+1456]
	025 Call 0x1B6F7F0
	026 Move X0, 0x22C1000
	027 Move X0, [X0+1464]
	028 Call 0x1B6F7F0
	029 Move X0, 0x22C1000
	030 Move X0, [X0+1472]
	031 Call 0x1B6F7F0
	032 Move X0, 0x22C1000
	033 Move X0, [X0+1576]
	034 Call 0x1B6F7F0
	035 Move X0, 0x22C1000
	036 Move X0, [X0+1904]
	037 Call 0x1B6F7F0
	038 Move X0, 0x22C1000
	039 Move X0, [X0+1872]
	040 Call 0x1B6F7F0
	041 Move X0, 0x22C1000
	042 Move X0, [X0+1624]
	043 Call 0x1B6F7F0
	044 Move X0, 0x22C1000
	045 Move X0, [X0+1912]
	046 Call 0x1B6F7F0
	047 Move W8, 1
	048 Move [X21+909], W8
	049 Compare X19, 0
	050 JumpIfEqual {171}
	051 Move TEMP, X20
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {59}
	055 Move W1, 1
	056 Move X0, X19
	057 Move X2, X31
	058 Call Command.set_silent, X0, X1
	059 Move X0, X19
	060 Move X1, X31
	061 Call Command.get_silent, X0
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {81}
	066 Move X8, 0x22C1000
	067 Move X8, [X8+1576]
	068 Move X0, [X8]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1B6F8F8
	073 Move W0, 5
	074 Move W1, 512
	075 Move X2, X31
	076 Call Log.IsEnabled, X0, X1
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {132}
	081 Move X0, X19
	082 Move X1, X31
	083 Call Command.get_identifier, X0
	084 Move X8, 0x22C1000
	085 Move X8, [X8+1904]
	086 Move X1, X0
	087 Move X2, X31
	088 Move X8, [X8]
	089 Move X0, X8
	090 Call String.Concat, X0, X1
	091 Move X8, 0x22C1000
	092 Move X8, [X8+1472]
	093 Move X20, X0
	094 Move X8, [X8]
	095 Move X0, X8
	096 Call 0x1B6FA0C
	097 Move X8, 0x22C1000
	098 Move X8, [X8+1464]
	099 Move X21, X0
	100 Move X1, [X8]
	101 Call Dictionary`2<Object, Object>..ctor, X0
	102 Compare X21, 0
	103 JumpIfEqual {213}
	104 Move X8, 0x22C1000
	105 Move X9, 0x22C1000
	106 Move X8, [X8+1872]
	107 Move X9, [X9+1456]
	108 Move X0, X21
	109 Move X2, X19
	110 Move X1, [X8]
	111 Move X3, [X9]
	112 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	113 Move X8, 0x22C1000
	114 Move X8, [X8+1576]
	115 Move X0, [X8]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {120}
	119 Call 0x1B6F8F8
	120 Move X8, 0x22C1000
	121 Move X9, 0x22C1000
	122 Move X8, [X8+1624]
	123 Move X9, [X9+1912]
	124 Move W0, 512
	125 Move W5, 458
	126 Move X3, [X8]
	127 Move X4, [X9]
	128 Move X1, X20
	129 Move X2, X21
	130 Move X6, X31
	131 Call Log.Info, X0, X1, X2, X3, X4, X5
	132 Move X21, 0x22C1000
	133 Move X21, [X21+1256]
	134 Move X0, X31
	135 Call Thread.get_CurrentThread
	136 Move X8, [X21]
	137 Move X20, X0
	138 Move W9, [X8+224]
	139 Compare W9, 0
	140 JumpIfNotEqual {145}
	141 Move X0, X8
	142 Call 0x1B6F8F8
	143 Move X8, [X21]
	144 Move W9, [X8+224]
	145 Move X10, [X8+184]
	146 Move X22, [X10+96]
	147 Compare W9, 0
	148 JumpIfNotEqual {153}
	149 Move X0, X8
	150 Call 0x1B6F8F8
	151 Move X8, [X21]
	152 Move X10, [X8+184]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move X0, [X10+88]
	155 Compare X0, 0
	156 JumpIfEqual {213}
	157 Move X8, 0x22C1000
	158 Move X8, [X8+1896]
	159 Move X1, X19
	160 Move X2, [X8]
	161 Call ConcurrentQueue`1<Object>.Enqueue, X0, X1
	162 Move X8, 0x22C1000
	163 Move X8, [X8+1848]
	164 Move X0, [X8]
	165 Call 0x1B6FA0C
	166 Move X1, X19
	167 Move X2, X31
	168 Move X20, X0
	169 Call CommandHandle..ctor, X0, X1
	170 Move X0, X20
	171 Move X19, 0x22C1000
	172 Move X19, [X19+1848]
	173 Move X0, [X19]
	174 Move W8, [X0+224]
	175 Compare W8, 0
	176 JumpIfNotEqual {178}
	177 Call 0x1B6F8F8
	178 Move X20, 0x2597000
	179 Move W8, [X20+1095]
	180 Compare W8, 0
	181 JumpIfNotEqual {187}
	182 Move X0, 0x22C1000
	183 Move X0, [X0+1848]
	184 Call 0x1B6F7F0
	185 Move W8, 1
	186 Move [X20+1095], W8
	187 Move X0, [X19]
	188 Move W8, [X0+224]
	189 Compare W8, 0
	190 JumpIfNotEqual {193}
	191 Call 0x1B6F8F8
	192 Move X0, [X19]
	193 Move X8, [X0+184]
	194 Move X0, [X8]
	195 Move X20, [X31+32]
	196 Move X19, [X31+40]
	197 Move X22, [X31+16]
	198 Move X21, [X31+24]
	199 Move X30, [X31+48]
	200 Return X0
	201 Move X0, [X10+80]
	202 Compare X0, 0
	203 JumpIfEqual {213}
	204 Move X1, X19
	205 Move X20, [X31+32]
	206 Move X19, [X31+40]
	207 Move X22, [X31+16]
	208 Move X21, [X31+24]
	209 Move X2, X31
	210 Move X30, [X31+48]
	211 Call CommandScheduler.Add, X0, X1
	212 Return X0
	213 Call 0x1B6FA1C

Method: System.Void RegisterObserver(SpatialSys.ObservableState.ObserverDelegate observer, SpatialSys.ObservableState.IStateObject[] state)

Disassembly:
	0x01C8DFDC ADRP X0, 0x22C0000
	0x01C8DFE0 LDR X0, [X0 + 0x8B0]
	0x01C8DFE4 BL 0x1B6E7F0
	0x01C8DFE8 MOVZ W8, 0x1
	0x01C8DFEC STRB W8, [X20 + 0x3A0]
	0x01C8DFF0 LDR X20, [X21]
	0x01C8DFF4 LDR X0, [X22]
	0x01C8DFF8 BL 0x1B6EA0C
	0x01C8DFFC ADRP X8, 0x22C0000
	0x01C8E000 LDR X8, [X8 + 0x878]
	0x01C8E004 MOV X21, X0
	0x01C8E008 LDR X1, [X8]
	0x01C8E00C MOV X2, X31
	0x01C8E010 BL 0x3A584D0
	0x01C8E014 CBZ X21, 0x1C8E35C
	0x01C8E018 ADRP X8, 0x22BF000
	0x01C8E01C LDR X8, [X8 + 0x8B0]
	0x01C8E020 ADRP X9, 0x22BF000
	0x01C8E024 LDR X9, [X9 + 0x840]
	0x01C8E028 LDR X1, [X8]
	0x01C8E02C LDR X2, [X9]
	0x01C8E030 MOV X0, X21
	0x01C8E034 BL 0x2170ECC
	0x01C8E038 ADRP X24, 0x22BF000
	0x01C8E03C LDR X24, [X24 + 0x858]
	0x01C8E040 MOV X21, X0
	0x01C8E044 LDR X22, [X24]
	0x01C8E048 LDR X8, [X22 + 0x38]
	0x01C8E04C CBNZ X8, 0x1C8E05C
	0x01C8E050 MOV X0, X22
	0x01C8E054 BL 0x1BB41DC
	0x01C8E058 LDR X8, [X22 + 0x38]
	0x01C8E05C LDR X0, [X8 + 0x10]
	0x01C8E060 LDRB W8, [X0 + 0x135]
	0x01C8E064 TBNZ X8, 0x0, 0x1C8E06C
	0x01C8E068 BL 0x1BB4180
	0x01C8E06C LDR W8, [X0 + 0xE0]
	0x01C8E070 CBNZ W8, 0x1C8E078
	0x01C8E074 BL 0x1B6E8F8
	0x01C8E078 LDR X8, [X22 + 0x38]
	0x01C8E07C LDR X0, [X8 + 0x10]
	0x01C8E080 LDRB W8, [X0 + 0x135]
	0x01C8E084 TBNZ X8, 0x0, 0x1C8E08C
	0x01C8E088 BL 0x1BB4180
	0x01C8E08C CBZ X21, 0x1C8E360
	0x01C8E090 ADRP X9, 0x22BF000
	0x01C8E094 LDR X8, [X0 + 0xB8]
	0x01C8E098 LDR X9, [X9 + 0x868]
	0x01C8E09C ADRP X25, 0x22BF000
	0x01C8E0A0 LDR X25, [X25 + 0x830]
	0x01C8E0A4 LDR X2, [X8]
	0x01C8E0A8 LDR X1, [X9]
	0x01C8E0AC LDR X3, [X25]
	0x01C8E0B0 MOV X0, X21
	0x01C8E0B4 BL 0x216F014
	0x01C8E0B8 LDR X22, [X24]
	0x01C8E0BC MOV X21, X0
	0x01C8E0C0 LDR X8, [X22 + 0x38]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2597000
	007 Move X21, 0x22C1000
	008 Move W8, [X22+910]
	009 Move X21, [X21+1256]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x22C0000
	017 Move X0, [X0+1256]
	018 Call 0x1B6F7F0
	019 Move X0, 0x22C0000
	020 Move X0, [X0+1352]
	021 Call 0x1B6F7F0
	022 Move W8, 1
	023 Move [X22+910], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1B6F8F8
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Move X21, [X8+16]
	032 Compare X21, 0
	033 JumpIfEqual {66}
	034 Move X10, 0x22C0000
	035 Move X8, [X21]
	036 Move X10, [X10+1352]
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Move X1, [X10]
	039 Compare X9, 0
	040 JumpIfEqual {47}
	041 Move X10, [X8+176]
	042 Add X10, X10, 8
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Subtract X9, X9, 1
	046 Add X10, X10, 16
	047 Move W2, 3
	048 Move X0, X21
	049 Call 0x1BB5284
	050 Move W9, [X10]
	051 Add W9, W9, 3
	052 Add X8, X8, W9
	053 Add X0, X8, 312
	054 Move X5, [X0]
	055 Move X4, [X0+8]
	056 Move X0, X21
	057 Move X1, X20
	058 Move X3, X19
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move W2, 2
	064 Move X30, [X31+48]
	065 CallNoReturn X5
	066 Call 0x1B6FA1C

Method: System.Void RegisterObserverForChildren(SpatialSys.ObservableState.ObserverDelegate observer, SpatialSys.ObservableState.IStateObject[] state)

Disassembly:
	0x01C8E0C4 CBNZ X8, 0x1C8E0D4
	0x01C8E0C8 MOV X0, X22
	0x01C8E0CC BL 0x1BB41DC
	0x01C8E0D0 LDR X8, [X22 + 0x38]
	0x01C8E0D4 LDR X0, [X8 + 0x10]
	0x01C8E0D8 LDRB W8, [X0 + 0x135]
	0x01C8E0DC TBNZ X8, 0x0, 0x1C8E0E4
	0x01C8E0E0 BL 0x1BB4180
	0x01C8E0E4 LDR W8, [X0 + 0xE0]
	0x01C8E0E8 CBNZ W8, 0x1C8E0F0
	0x01C8E0EC BL 0x1B6E8F8
	0x01C8E0F0 LDR X8, [X22 + 0x38]
	0x01C8E0F4 LDR X0, [X8 + 0x10]
	0x01C8E0F8 LDRB W8, [X0 + 0x135]
	0x01C8E0FC TBNZ X8, 0x0, 0x1C8E104
	0x01C8E100 BL 0x1BB4180
	0x01C8E104 CBZ X21, 0x1C8E364
	0x01C8E108 ADRP X9, 0x22BF000
	0x01C8E10C LDR X8, [X0 + 0xB8]
	0x01C8E110 LDR X9, [X9 + 0x898]
	0x01C8E114 LDR X3, [X25]
	0x01C8E118 LDR X2, [X8]
	0x01C8E11C LDR X1, [X9]
	0x01C8E120 MOV X0, X21
	0x01C8E124 BL 0x216F014
	0x01C8E128 MOV X21, X0
	0x01C8E12C CBZ X0, 0x1C8E368
	0x01C8E130 ADRP X8, 0x22BF000
	0x01C8E134 LDR X8, [X8 + 0x890]
	0x01C8E138 ADRP X9, 0x22BF000
	0x01C8E13C LDR X9, [X9 + 0x848]
	0x01C8E140 LDR X1, [X8]
	0x01C8E144 LDR X2, [X9]
	0x01C8E148 MOV X0, X21
	0x01C8E14C BL 0x2170E8C
	0x01C8E150 ADRP X8, 0x22BF000
	0x01C8E154 LDR X8, [X8 + 0x860]
	0x01C8E158 MOV W23, W0
	0x01C8E15C LDR X0, [X8]
	0x01C8E160 MOVZ W1, 0x2
	0x01C8E164 BL 0x1B6E868
	0x01C8E168 MOV X22, X0
	0x01C8E16C CBZ X0, 0x1C8E36C
	0x01C8E170 ADRP X26, 0x22BF000
	0x01C8E174 LDR X26, [X26 + 0x888]
	0x01C8E178 LDR X0, [X26]
	0x01C8E17C CBZ X0, 0x1C8E190
	0x01C8E180 LDR X8, [X22]
	0x01C8E184 LDR X1, [X8 + 0x40]
	0x01C8E188 BL 0x1B6E8FC
	0x01C8E18C CBZ X0, 0x1C8E38C
	0x01C8E190 LDR W8, [X22 + 0x18]
	0x01C8E194 CBZ W8, 0x1C8E370
	0x01C8E198 LDR X8, [X26]
	0x01C8E19C ADRP X9, 0x22BF000
	0x01C8E1A0 LDR X9, [X9 + 0x5F8]
	0x01C8E1A4 STR X8, [X22 + 0x20]
	0x01C8E1A8 STR W23, [X31 + 0xC]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2596000
	007 Move X21, 0x22C0000
	008 Move W8, [X22+911]
	009 Move X21, [X21+1256]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x22C0000
	017 Move X0, [X0+1256]
	018 Call 0x1B6F7F0
	019 Move X0, 0x22C0000
	020 Move X0, [X0+1352]
	021 Call 0x1B6F7F0
	022 Move W8, 1
	023 Move [X22+911], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1B6F8F8
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Move X21, [X8+16]
	032 Compare X21, 0
	033 JumpIfEqual {66}
	034 Move X10, 0x22C0000
	035 Move X8, [X21]
	036 Move X10, [X10+1352]
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Move X1, [X10]
	039 Compare X9, 0
	040 JumpIfEqual {47}
	041 Move X10, [X8+176]
	042 Add X10, X10, 8
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Subtract X9, X9, 1
	046 Add X10, X10, 16
	047 Move W2, 3
	048 Move X0, X21
	049 Call 0x1BB5284
	050 Move W9, [X10]
	051 Add W9, W9, 3
	052 Add X8, X8, W9
	053 Add X0, X8, 312
	054 Move X5, [X0]
	055 Move X4, [X0+8]
	056 Move X0, X21
	057 Move X1, X20
	058 Move X3, X19
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move W2, 1
	064 Move X30, [X31+48]
	065 CallNoReturn X5
	066 Call 0x1B6FA1C

Method: System.Void RegisterObserverForSelf(SpatialSys.ObservableState.ObserverDelegate observer, SpatialSys.ObservableState.IStateObject[] state)

Disassembly:
	0x01C8E1AC LDR X0, [X9]
	0x01C8E1B0 ADD X1, X31, 0xC
	0x01C8E1B4 BL 0x1B6E900
	0x01C8E1B8 MOV X23, X0
	0x01C8E1BC CBZ X0, 0x1C8E1D4
	0x01C8E1C0 LDR X8, [X22]
	0x01C8E1C4 LDR X1, [X8 + 0x40]
	0x01C8E1C8 MOV X0, X23
	0x01C8E1CC BL 0x1B6E8FC
	0x01C8E1D0 CBZ X0, 0x1C8E398
	0x01C8E1D4 LDR W8, [X22 + 0x18]
	0x01C8E1D8 CMP W8, 0x1
	0x01C8E1DC B.LS 0x1C8E374
	0x01C8E1E0 ADRP X8, 0x22BF000
	0x01C8E1E4 LDR X8, [X8 + 0x8A8]
	0x01C8E1E8 STR X23, [X22 + 0x28]
	0x01C8E1EC LDR X3, [X25]
	0x01C8E1F0 LDR X1, [X8]
	0x01C8E1F4 MOV X0, X21
	0x01C8E1F8 MOV X2, X22
	0x01C8E1FC BL 0x216F014
	0x01C8E200 CBZ X0, 0x1C8E378
	0x01C8E204 ADRP X8, 0x22BF000
	0x01C8E208 LDR X8, [X8 + 0x880]
	0x01C8E20C ADRP X9, 0x22BF000
	0x01C8E210 LDR X9, [X9 + 0x850]
	0x01C8E214 LDR X1, [X8]
	0x01C8E218 LDR X2, [X9]
	0x01C8E21C BL 0x2170C3C
	0x01C8E220 LDR X22, [X24]
	0x01C8E224 MOV X21, X0
	0x01C8E228 LDR X8, [X22 + 0x38]
	0x01C8E22C CBNZ X8, 0x1C8E23C
	0x01C8E230 MOV X0, X22
	0x01C8E234 BL 0x1BB41DC
	0x01C8E238 LDR X8, [X22 + 0x38]
	0x01C8E23C LDR X0, [X8 + 0x10]
	0x01C8E240 LDRB W8, [X0 + 0x135]
	0x01C8E244 TBNZ X8, 0x0, 0x1C8E24C
	0x01C8E248 BL 0x1BB4180
	0x01C8E24C LDR W8, [X0 + 0xE0]
	0x01C8E250 CBNZ W8, 0x1C8E258
	0x01C8E254 BL 0x1B6E8F8
	0x01C8E258 LDR X8, [X22 + 0x38]
	0x01C8E25C LDR X0, [X8 + 0x10]
	0x01C8E260 LDRB W8, [X0 + 0x135]
	0x01C8E264 TBNZ X8, 0x0, 0x1C8E26C
	0x01C8E268 BL 0x1BB4180
	0x01C8E26C CBZ X21, 0x1C8E37C
	0x01C8E270 ADRP X9, 0x22BF000
	0x01C8E274 LDR X8, [X0 + 0xB8]
	0x01C8E278 LDR X9, [X9 + 0x8A0]
	0x01C8E27C ADRP X10, 0x22BF000
	0x01C8E280 LDR X10, [X10 + 0x828]
	0x01C8E284 LDR X2, [X8]
	0x01C8E288 LDR X1, [X9]
	0x01C8E28C LDR X3, [X10]
	0x01C8E290 MOV X0, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2596000
	007 Move X21, 0x22C0000
	008 Move W8, [X22+912]
	009 Move X21, [X21+1256]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x22C0000
	017 Move X0, [X0+1256]
	018 Call 0x1B6F7F0
	019 Move X0, 0x22C0000
	020 Move X0, [X0+1352]
	021 Call 0x1B6F7F0
	022 Move W8, 1
	023 Move [X22+912], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1B6F8F8
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Move X21, [X8+16]
	032 Compare X21, 0
	033 JumpIfEqual {66}
	034 Move X10, 0x22C0000
	035 Move X8, [X21]
	036 Move X10, [X10+1352]
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Move X1, [X10]
	039 Compare X9, 0
	040 JumpIfEqual {47}
	041 Move X10, [X8+176]
	042 Add X10, X10, 8
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Subtract X9, X9, 1
	046 Add X10, X10, 16
	047 Move W2, 3
	048 Move X0, X21
	049 Call 0x1BB5284
	050 Move W9, [X10]
	051 Add W9, W9, 3
	052 Add X8, X8, W9
	053 Add X0, X8, 312
	054 Move X5, [X0]
	055 Move X4, [X0+8]
	056 Move X0, X21
	057 Move X1, X20
	058 Move X3, X19
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move W2, W31
	064 Move X30, [X31+48]
	065 CallNoReturn X5
	066 Call 0x1B6FA1C

Method: System.Void RegisterKeyObserver(SpatialSys.ObservableState.ObserverDelegate observer, System.Object key, SpatialSys.ObservableState.IStateDictionary[] dictionaries)

Disassembly:
	0x01C8E294 BL 0x216F014
	0x01C8E298 CBZ X0, 0x1C8E380
	0x01C8E29C LDR W8, [X0 + 0x18]
	0x01C8E2A0 CBZ W8, 0x1C8E384
	0x01C8E2A4 LDR X22, [X24]
	0x01C8E2A8 LDR X21, [X0 + 0x20]
	0x01C8E2AC LDR X8, [X22 + 0x38]
	0x01C8E2B0 CBNZ X8, 0x1C8E2C0
	0x01C8E2B4 MOV X0, X22
	0x01C8E2B8 BL 0x1BB41DC
	0x01C8E2BC LDR X8, [X22 + 0x38]
	0x01C8E2C0 LDR X0, [X8 + 0x10]
	0x01C8E2C4 LDRB W8, [X0 + 0x135]
	0x01C8E2C8 TBNZ X8, 0x0, 0x1C8E2D0
	0x01C8E2CC BL 0x1BB4180
	0x01C8E2D0 LDR W8, [X0 + 0xE0]
	0x01C8E2D4 CBNZ W8, 0x1C8E2DC
	0x01C8E2D8 BL 0x1B6E8F8
	0x01C8E2DC LDR X8, [X22 + 0x38]
	0x01C8E2E0 LDR X0, [X8 + 0x10]
	0x01C8E2E4 LDRB W8, [X0 + 0x135]
	0x01C8E2E8 TBNZ X8, 0x0, 0x1C8E2F0
	0x01C8E2EC BL 0x1BB4180
	0x01C8E2F0 CBZ X21, 0x1C8E388
	0x01C8E2F4 ADRP X9, 0x22BF000
	0x01C8E2F8 LDR X8, [X0 + 0xB8]
	0x01C8E2FC LDR X9, [X9 + 0x870]
	0x01C8E300 ADRP X10, 0x22BF000
	0x01C8E304 LDR X10, [X10 + 0x838]
	0x01C8E308 LDR X2, [X8]
	0x01C8E30C LDR X1, [X9]
	0x01C8E310 LDR X3, [X10]
	0x01C8E314 MOV X0, X21
	0x01C8E318 BL 0x216F014
	0x01C8E31C MOV X20, X0
	0x01C8E320 MOV X0, X20
	0x01C8E324 MOV X1, X19
	0x01C8E328 MOV X2, X31
	0x01C8E32C BL 0x3084780
	0x01C8E330 CBZ X0, 0x1C8E358
	0x01C8E334 LDR X8, [X0]
	0x01C8E338 LDP X9, X1, [X8 + 0x158]
	0x01C8E33C BLR X9
	0x01C8E340 LDP X20, X19, [X31 + 0x40]
	0x01C8E344 LDP X22, X21, [X31 + 0x30]
	0x01C8E348 LDP X24, X23, [X31 + 0x20]
	0x01C8E34C LDP X26, X25, [X31 + 0x10]
	0x01C8E350 LDR X30, [X31], #0x50
	0x01C8E354 RET
	0x01C8E358 BL 0x1B6EA1C
	0x01C8E35C BL 0x1B6EA1C
	0x01C8E360 BL 0x1B6EA1C
	0x01C8E364 BL 0x1B6EA1C
	0x01C8E368 BL 0x1B6EA1C
	0x01C8E36C BL 0x1B6EA1C
	0x01C8E370 BL 0x1B6EA24
	0x01C8E374 BL 0x1B6EA24
	0x01C8E378 BL 0x1B6EA1C
	0x01C8E37C BL 0x1B6EA1C
	0x01C8E380 BL 0x1B6EA1C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x2596000
	008 Move X22, 0x22C0000
	009 Move W8, [X23+913]
	010 Move X22, [X22+1256]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x22C0000
	019 Move X0, [X0+1256]
	020 Call 0x1B6F7F0
	021 Move X0, 0x22C0000
	022 Move X0, [X0+1352]
	023 Call 0x1B6F7F0
	024 Move W8, 1
	025 Move [X23+913], W8
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1B6F8F8
	031 Move X0, [X22]
	032 Move X8, [X0+184]
	033 Move X22, [X8+16]
	034 Compare X22, 0
	035 JumpIfEqual {70}
	036 Move X10, 0x22C0000
	037 Move X8, [X22]
	038 Move X10, [X10+1352]
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Move X1, [X10]
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move W2, 4
	050 Move X0, X22
	051 Call 0x1BB5284
	052 Move W9, [X10]
	053 Add W9, W9, 4
	054 Add X8, X8, W9
	055 Add X0, X8, 312
	056 Move X6, [X0]
	057 Move X5, [X0+8]
	058 Move X0, X22
	059 Move X1, X21
	060 Move X2, X20
	061 Move X4, X19
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move W3, 2
	067 Move X30, [X31+48]
	068 Move X23, [X31+56]
	069 CallNoReturn X6
	070 Call 0x1B6FA1C

Method: System.Void RegisterKeyObserverForChildren(SpatialSys.ObservableState.ObserverDelegate observer, System.Object key, SpatialSys.ObservableState.IStateDictionary[] dictionaries)

Disassembly:
	0x01C8E384 BL 0x1B6EA24
	0x01C8E388 BL 0x1B6EA1C
	0x01C8E38C BL 0x1B6EA40
	0x01C8E390 MOV X1, X31
	0x01C8E394 BL 0x1B6E8E8
	0x01C8E398 BL 0x1B6EA40
	0x01C8E39C MOV X1, X31
	0x01C8E3A0 BL 0x1B6E8E8
	0x01C8E3A4 B 0x1C8E3E8
	0x01C8E3A8 B 0x1C8E3E8
	0x01C8E3AC B 0x1C8E3E8
	0x01C8E3B0 B 0x1C8E3E8
	0x01C8E3B4 B 0x1C8E3E8
	0x01C8E3B8 B 0x1C8E3E8
	0x01C8E3BC B 0x1C8E3E8
	0x01C8E3C0 B 0x1C8E3E8
	0x01C8E3C4 B 0x1C8E3E8
	0x01C8E3C8 B 0x1C8E3E8
	0x01C8E3CC B 0x1C8E3E8
	0x01C8E3D0 B 0x1C8E3E8
	0x01C8E3D4 B 0x1C8E3E8
	0x01C8E3D8 B 0x1C8E3E8
	0x01C8E3DC B 0x1C8E3E8
	0x01C8E3E0 B 0x1C8E3E8
	0x01C8E3E4 B 0x1C8E3E8
	0x01C8E3E8 MOV X21, X0
	0x01C8E3EC CMP W1, 0x1
	0x01C8E3F0 B.NE 0x1C8E474
	0x01C8E3F4 MOV X0, X21
	0x01C8E3F8 BL 0x3D19840
	0x01C8E3FC MOV X21, X0
	0x01C8E400 ADRP X0, 0x22BF000
	0x01C8E404 LDR X0, [X0 + 0x670]
	0x01C8E408 BL 0x1B6E804
	0x01C8E40C LDR X8, [X21]
	0x01C8E410 LDR X1, [X8]
	0x01C8E414 BL 0x1B6ED6C
	0x01C8E418 TBZ X0, 0x0, 0x1C8E44C
	0x01C8E41C LDR X21, [X21]
	0x01C8E420 BL 0x3D19850
	0x01C8E424 ADRP X0, 0x22BF000
	0x01C8E428 LDR X0, [X0 + 0x8B8]
	0x01C8E42C BL 0x1B6E804
	0x01C8E430 LDR W8, [X0 + 0xE0]
	0x01C8E434 CBNZ W8, 0x1C8E43C
	0x01C8E438 BL 0x1B6E8F8
	0x01C8E43C MOV X0, X21
	0x01C8E440 MOV X1, X31
	0x01C8E444 BL 0x3A6F090
	0x01C8E448 B 0x1C8E320
	0x01C8E44C MOVZ W0, 0x8
	0x01C8E450 BL 0x3D19860
	0x01C8E454 LDR X8, [X21]
	0x01C8E458 STR X8, [X0]
	0x01C8E45C ADRP X1, 0x208E000
	0x01C8E460 ADD X1, X1, 0xBD8
	0x01C8E464 MOV X2, X31
	0x01C8E468 BL 0x3D19870
	0x01C8E46C MOV X21, X0
	0x01C8E470 BL 0x3D19850

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x2596000
	008 Move X22, 0x22C0000
	009 Move W8, [X23+914]
	010 Move X22, [X22+1256]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x22C0000
	019 Move X0, [X0+1256]
	020 Call 0x1B6F7F0
	021 Move X0, 0x22C0000
	022 Move X0, [X0+1352]
	023 Call 0x1B6F7F0
	024 Move W8, 1
	025 Move [X23+914], W8
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1B6F8F8
	031 Move X0, [X22]
	032 Move X8, [X0+184]
	033 Move X22, [X8+16]
	034 Compare X22, 0
	035 JumpIfEqual {70}
	036 Move X10, 0x22C0000
	037 Move X8, [X22]
	038 Move X10, [X10+1352]
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Move X1, [X10]
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move W2, 4
	050 Move X0, X22
	051 Call 0x1BB5284
	052 Move W9, [X10]
	053 Add W9, W9, 4
	054 Add X8, X8, W9
	055 Add X0, X8, 312
	056 Move X6, [X0]
	057 Move X5, [X0+8]
	058 Move X0, X22
	059 Move X1, X21
	060 Move X2, X20
	061 Move X4, X19
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move W3, 1
	067 Move X30, [X31+48]
	068 Move X23, [X31+56]
	069 CallNoReturn X6
	070 Call 0x1B6FA1C

Method: System.Void RegisterKeyObserverForSelf(SpatialSys.ObservableState.ObserverDelegate observer, System.Object key, SpatialSys.ObservableState.IStateDictionary[] dictionaries)

Disassembly:
	0x01C8E474 MOV X0, X21
	0x01C8E478 BL 0x1C8418C
	0x01C8E47C BL 0x18F46A8
	0x01C8E480 STR X30, [X31 - 0x20]!
	0x01C8E484 STP X20, X19, [X31 + 0x10]
	0x01C8E488 ADRP X19, 0x2595000
	0x01C8E48C ADRP X20, 0x22BF000
	0x01C8E490 LDRB W8, [X19 + 0x3A1]
	0x01C8E494 LDR X20, [X20 + 0x8C0]
	0x01C8E498 TBNZ X8, 0x0, 0x1C8E4B0
	0x01C8E49C ADRP X0, 0x22BF000
	0x01C8E4A0 LDR X0, [X0 + 0x8C0]
	0x01C8E4A4 BL 0x1B6E7F0
	0x01C8E4A8 MOVZ W8, 0x1
	0x01C8E4AC STRB W8, [X19 + 0x3A1]
	0x01C8E4B0 LDR X0, [X20]
	0x01C8E4B4 BL 0x1B6EA0C
	0x01C8E4B8 MOV X1, X31
	0x01C8E4BC MOV X19, X0
	0x01C8E4C0 BL 0x32276F8
	0x01C8E4C4 STR W31, [X19 + 0x10]
	0x01C8E4C8 MOV X0, X19
	0x01C8E4CC LDP X20, X19, [X31 + 0x10]
	0x01C8E4D0 LDR X30, [X31], #0x20
	0x01C8E4D4 RET
	0x01C8E4D8 STR X30, [X31 - 0x20]!
	0x01C8E4DC STP X20, X19, [X31 + 0x10]
	0x01C8E4E0 MOV W19, W1
	0x01C8E4E4 MOV X1, X31
	0x01C8E4E8 MOV X20, X0
	0x01C8E4EC BL 0x32276F8
	0x01C8E4F0 STR W19, [X20 + 0x10]
	0x01C8E4F4 LDP X20, X19, [X31 + 0x10]
	0x01C8E4F8 LDR X30, [X31], #0x20
	0x01C8E4FC RET
	0x01C8E500 STR X30, [X31 - 0x20]!
	0x01C8E504 STP X20, X19, [X31 + 0x10]
	0x01C8E508 ADRP X19, 0x2595000
	0x01C8E50C ADRP X20, 0x22BF000
	0x01C8E510 LDRB W8, [X19 + 0x3A2]
	0x01C8E514 LDR X20, [X20 + 0x8C8]
	0x01C8E518 TBNZ X8, 0x0, 0x1C8E530
	0x01C8E51C ADRP X0, 0x22BF000
	0x01C8E520 LDR X0, [X0 + 0x8C8]
	0x01C8E524 BL 0x1B6E7F0
	0x01C8E528 MOVZ W8, 0x1
	0x01C8E52C STRB W8, [X19 + 0x3A2]
	0x01C8E530 LDR X0, [X20]
	0x01C8E534 BL 0x1B6EA0C
	0x01C8E538 MOV X1, X31
	0x01C8E53C MOV X19, X0
	0x01C8E540 BL 0x32276F8
	0x01C8E544 STR W31, [X19 + 0x10]
	0x01C8E548 MOV X0, X19
	0x01C8E54C LDP X20, X19, [X31 + 0x10]
	0x01C8E550 LDR X30, [X31], #0x20
	0x01C8E554 RET
	0x01C8E558 STR X30, [X31 - 0x20]!
	0x01C8E55C STP X20, X19, [X31 + 0x10]
	0x01C8E560 MOV W19, W1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x2596000
	008 Move X22, 0x22C0000
	009 Move W8, [X23+915]
	010 Move X22, [X22+1256]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x22C0000
	019 Move X0, [X0+1256]
	020 Call 0x1B6F7F0
	021 Move X0, 0x22C0000
	022 Move X0, [X0+1352]
	023 Call 0x1B6F7F0
	024 Move W8, 1
	025 Move [X23+915], W8
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1B6F8F8
	031 Move X0, [X22]
	032 Move X8, [X0+184]
	033 Move X22, [X8+16]
	034 Compare X22, 0
	035 JumpIfEqual {70}
	036 Move X10, 0x22C0000
	037 Move X8, [X22]
	038 Move X10, [X10+1352]
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Move X1, [X10]
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move W2, 4
	050 Move X0, X22
	051 Call 0x1BB5284
	052 Move W9, [X10]
	053 Add W9, W9, 4
	054 Add X8, X8, W9
	055 Add X0, X8, 312
	056 Move X6, [X0]
	057 Move X5, [X0+8]
	058 Move X0, X22
	059 Move X1, X21
	060 Move X2, X20
	061 Move X4, X19
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move W3, W31
	067 Move X30, [X31+48]
	068 Move X23, [X31+56]
	069 CallNoReturn X6
	070 Call 0x1B6FA1C

Method: System.Void DeregisterObserver(SpatialSys.ObservableState.ObserverDelegate observer)

Disassembly:
	0x01C8E564 MOV X1, X31
	0x01C8E568 MOV X20, X0
	0x01C8E56C BL 0x32276F8
	0x01C8E570 STR W19, [X20 + 0x10]
	0x01C8E574 LDP X20, X19, [X31 + 0x10]
	0x01C8E578 LDR X30, [X31], #0x20
	0x01C8E57C RET
	0x01C8E580 STP X30, X21, [X31 - 0x20]!
	0x01C8E584 STP X20, X19, [X31 + 0x10]
	0x01C8E588 ADRP X20, 0x2595000
	0x01C8E58C ADRP X21, 0x22BF000
	0x01C8E590 LDRB W8, [X20 + 0x3A3]
	0x01C8E594 LDR X21, [X21 + 0x8D0]
	0x01C8E598 MOV X19, X0
	0x01C8E59C TBNZ X8, 0x0, 0x1C8E5B4
	0x01C8E5A0 ADRP X0, 0x22BF000
	0x01C8E5A4 LDR X0, [X0 + 0x8D0]
	0x01C8E5A8 BL 0x1B6E7F0
	0x01C8E5AC MOVZ W8, 0x1
	0x01C8E5B0 STRB W8, [X20 + 0x3A3]
	0x01C8E5B4 LDR X0, [X21]
	0x01C8E5B8 BL 0x1B6EA0C
	0x01C8E5BC MOV X1, X31
	0x01C8E5C0 MOV X20, X0
	0x01C8E5C4 BL 0x32276F8
	0x01C8E5C8 STR W31, [X20 + 0x10]
	0x01C8E5CC STR X19, [X20 + 0x28]
	0x01C8E5D0 MOV X0, X20
	0x01C8E5D4 LDP X20, X19, [X31 + 0x10]
	0x01C8E5D8 LDP X30, X21, [X31], #0x20
	0x01C8E5DC RET
	0x01C8E5E0 STR X30, [X31 - 0x20]!
	0x01C8E5E4 STP X20, X19, [X31 + 0x10]
	0x01C8E5E8 MOV W19, W1
	0x01C8E5EC MOV X1, X31
	0x01C8E5F0 MOV X20, X0
	0x01C8E5F4 BL 0x32276F8
	0x01C8E5F8 STR W19, [X20 + 0x10]
	0x01C8E5FC LDP X20, X19, [X31 + 0x10]
	0x01C8E600 LDR X30, [X31], #0x20
	0x01C8E604 RET
	0x01C8E608 STP X30, X21, [X31 - 0x20]!
	0x01C8E60C STP X20, X19, [X31 + 0x10]
	0x01C8E610 ADRP X20, 0x2595000
	0x01C8E614 ADRP X21, 0x22BF000
	0x01C8E618 LDRB W8, [X20 + 0x3A4]
	0x01C8E61C LDR X21, [X21 + 0x8D8]
	0x01C8E620 MOV X19, X0
	0x01C8E624 TBNZ X8, 0x0, 0x1C8E63C
	0x01C8E628 ADRP X0, 0x22BF000
	0x01C8E62C LDR X0, [X0 + 0x8D8]
	0x01C8E630 BL 0x1B6E7F0
	0x01C8E634 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2596000
	006 Move X20, 0x22C0000
	007 Move W8, [X21+916]
	008 Move X20, [X20+1256]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x22C0000
	015 Move X0, [X0+1256]
	016 Call 0x1B6F7F0
	017 Move X0, 0x22C0000
	018 Move X0, [X0+1352]
	019 Call 0x1B6F7F0
	020 Move W8, 1
	021 Move [X21+916], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1B6F8F8
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X20, [X8+16]
	030 Compare X20, 0
	031 JumpIfEqual {61}
	032 Move X10, 0x22C0000
	033 Move X8, [X20]
	034 Move X10, [X10+1352]
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Move X1, [X10]
	037 Compare X9, 0
	038 JumpIfEqual {45}
	039 Move X10, [X8+176]
	040 Add X10, X10, 8
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Subtract X9, X9, 1
	044 Add X10, X10, 16
	045 Move W2, 7
	046 Move X0, X20
	047 Call 0x1BB5284
	048 Move W9, [X10]
	049 Add W9, W9, 7
	050 Add X8, X8, W9
	051 Add X0, X8, 312
	052 Move X3, [X0]
	053 Move X2, [X0+8]
	054 Move X0, X20
	055 Move X1, X19
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 CallNoReturn X3
	061 Call 0x1B6FA1C

Method: System.Void .ctor()

Disassembly:
	0x01C8E638 STRB W8, [X20 + 0x3A4]
	0x01C8E63C LDR X0, [X21]

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x01C8E640 BL 0x1B6EA0C
	0x01C8E644 MOV X1, X31
	0x01C8E648 MOV X20, X0
	0x01C8E64C BL 0x32276F8
	0x01C8E650 STR W31, [X20 + 0x10]
	0x01C8E654 STR X19, [X20 + 0x20]
	0x01C8E658 MOV X0, X20
	0x01C8E65C LDP X20, X19, [X31 + 0x10]
	0x01C8E660 LDP X30, X21, [X31], #0x20
	0x01C8E664 RET
	0x01C8E668 STR X30, [X31 - 0x20]!
	0x01C8E66C STP X20, X19, [X31 + 0x10]
	0x01C8E670 MOV W19, W1
	0x01C8E674 MOV X1, X31
	0x01C8E678 MOV X20, X0
	0x01C8E67C BL 0x32276F8
	0x01C8E680 STR W19, [X20 + 0x10]
	0x01C8E684 LDP X20, X19, [X31 + 0x10]
	0x01C8E688 LDR X30, [X31], #0x20
	0x01C8E68C RET
	0x01C8E690 STR X30, [X31 - 0x30]!
	0x01C8E694 STP X22, X21, [X31 + 0x10]
	0x01C8E698 STP X20, X19, [X31 + 0x20]
	0x01C8E69C ADRP X20, 0x2595000
	0x01C8E6A0 ADRP X22, 0x22BF000
	0x01C8E6A4 LDRB W8, [X20 + 0x3A5]
	0x01C8E6A8 LDR X22, [X22 + 0x8E0]
	0x01C8E6AC MOV X21, X1
	0x01C8E6B0 MOV X19, X0
	0x01C8E6B4 TBNZ X8, 0x0, 0x1C8E6CC
	0x01C8E6B8 ADRP X0, 0x22BF000
	0x01C8E6BC LDR X0, [X0 + 0x8E0]
	0x01C8E6C0 BL 0x1B6E7F0
	0x01C8E6C4 MOVZ W8, 0x1
	0x01C8E6C8 STRB W8, [X20 + 0x3A5]
	0x01C8E6CC LDR X0, [X22]
	0x01C8E6D0 BL 0x1B6EA0C
	0x01C8E6D4 MOV X1, X21
	0x01C8E6D8 MOV X2, X31
	0x01C8E6DC MOV X20, X0
	0x01C8E6E0 BL 0x3A9DAE4
	0x01C8E6E4 CBZ X20, 0x1C8E72C
	0x01C8E6E8 MOV X0, X20
	0x01C8E6EC MOV X1, X31
	0x01C8E6F0 BL 0x3A9D8EC
	0x01C8E6F4 MOV X21, X0
	0x01C8E6F8 MOV X0, X19
	0x01C8E6FC MOV X1, X31
	0x01C8E700 BL 0x3A9B084
	0x01C8E704 CBZ X21, 0x1C8E72C
	0x01C8E708 MOV X1, X0
	0x01C8E70C MOV X0, X21
	0x01C8E710 MOV X2, X31
	0x01C8E714 BL 0x3AA7DEC
	0x01C8E718 MOV X0, X20
	0x01C8E71C LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x2596000
	008 Move X23, 0x22C0000
	009 Move X19, 0x22C0000
	010 Move X20, 0x22C0000
	011 Move X21, 0x22C0000
	012 Move W8, [X22+917]
	013 Move X23, [X23+1920]
	014 Move X19, [X19+1928]
	015 Move X20, [X20+1256]
	016 Move X21, [X21+1936]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0x22C0000
	022 Move X0, [X0+1256]
	023 Call 0x1B6F7F0
	024 Move X0, 0x22C0000
	025 Move X0, [X0+1928]
	026 Call 0x1B6F7F0
	027 Move X0, 0x22C0000
	028 Move X0, [X0+1920]
	029 Call 0x1B6F7F0
	030 Move X0, 0x22C0000
	031 Move X0, [X0+1936]
	032 Call 0x1B6F7F0
	033 Move W8, 1
	034 Move [X22+917], W8
	035 Move X0, [X23]
	036 Call 0x1B6FA0C
	037 Move X1, [X19]
	038 Move X19, X0
	039 Call List`1<Object>..ctor, X0
	040 Move X8, [X20]
	041 Move X8, [X8+184]
	042 Move [X8+48], X19
	043 Move X0, [X21]
	044 Call 0x1B6FA0C
	045 Move X1, X31
	046 Move X19, X0
	047 Call StringBuilder..ctor, X0
	048 Move X8, [X20]
	049 Move X8, [X8+184]
	050 Move [X8+104], X19
	051 Move X0, [X21]
	052 Call 0x1B6FA0C
	053 Move X1, X31
	054 Move X19, X0
	055 Call StringBuilder..ctor, X0
	056 Move X8, [X20]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X8, [X8+184]
	060 Move [X8+112], X19
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X30, [X31+48]
	064 Move X23, [X31+56]
	065 Return 

