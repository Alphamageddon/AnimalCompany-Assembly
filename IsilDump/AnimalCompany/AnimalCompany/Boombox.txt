Type: AnimalCompany.Boombox

Method: System.Boolean get_isOn()

Disassembly:
	0x01C9C2F0 ADRP X0, 0x22B2000
	0x01C9C2F4 LDR X0, [X0 + 0x170]
	0x01C9C2F8 BL 0x1B6E7F0
	0x01C9C2FC ADRP X0, 0x22B2000
	0x01C9C300 LDR X0, [X0 + 0x278]
	0x01C9C304 BL 0x1B6E7F0
	0x01C9C308 ADRP X0, 0x22B2000
	0x01C9C30C LDR X0, [X0 + 0x280]
	0x01C9C310 BL 0x1B6E7F0
	0x01C9C314 ADRP X0, 0x22B2000
	0x01C9C318 LDR X0, [X0 + 0x288]
	0x01C9C31C BL 0x1B6E7F0
	0x01C9C320 ADRP X0, 0x22B2000
	0x01C9C324 LDR X0, [X0 + 0x1C0]
	0x01C9C328 BL 0x1B6E7F0
	0x01C9C32C MOVZ W8, 0x1
	0x01C9C330 STRB W8, [X20 + 0x3FC]
	0x01C9C334 LDR X0, [X21]
	0x01C9C338 LDR W8, [X0 + 0xE0]
	0x01C9C33C CBNZ W8, 0x1C9C344
	0x01C9C340 BL 0x1B6E8F8
	0x01C9C344 CBZ X19, 0x1C9C4CC
	0x01C9C348 LDR W8, [X19 + 0x30]
	0x01C9C34C LDR X23, [X19 + 0xA0]
	0x01C9C350 ORR W8, W8, 0x8
	0x01C9C354 STR W8, [X19 + 0x30]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {12}
	006 Move W8, [X8]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return X0
	012 Move X0, 0x22B2000
	013 Move X0, [X0+1168]
	014 Call 0x1B6F804
	015 Call 0x1B6FA0C
	016 Move X19, X0
	017 Move X0, 0x22B3000
	018 Move X0, [X0+512]
	019 Call 0x1B6F804
	020 Move X1, X0
	021 Move X0, X19
	022 Move X2, X31
	023 Call InvalidOperationException..ctor, X0, X1
	024 Move X0, 0x22B3000
	025 Move X0, [X0+520]
	026 Call 0x1B6F804
	027 Move X1, X0
	028 Move X0, X19
	029 Call 0x1B6F8E8

Method: System.Void set_isOn(System.Boolean value)

Disassembly:
	0x01C9C358 CBZ X23, 0x1C9C4CC
	0x01C9C35C ADRP X22, 0x22B2000
	0x01C9C360 LDR X22, [X22 + 0x170]
	0x01C9C364 ADRP X21, 0x22B2000
	0x01C9C368 LDR X20, [X23 + 0x198]
	0x01C9C36C LDR X0, [X22]
	0x01C9C370 LDR X21, [X21 + 0x280]
	0x01C9C374 BL 0x1B6EA0C
	0x01C9C378 LDR X2, [X21]
	0x01C9C37C MOV X1, X19
	0x01C9C380 MOV X3, X31
	0x01C9C384 MOV X21, X0
	0x01C9C388 BL 0x317DB24
	0x01C9C38C MOV X0, X20
	0x01C9C390 MOV X1, X21
	0x01C9C394 MOV X2, X31
	0x01C9C398 BL 0x322A948
	0x01C9C39C LDR X1, [X22]
	0x01C9C3A0 CBZ X0, 0x1C9C3C4
	0x01C9C3A4 LDR X8, [X0]
	0x01C9C3A8 CMP X8, X1
	0x01C9C3AC B.NE 0x1C9C42C
	0x01C9C3B0 STR X0, [X23 + 0x198]
	0x01C9C3B4 LDR X8, [X0]
	0x01C9C3B8 CMP X8, X1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {11}
	006 And W9, W1, 1
	007 Move [X8], W9
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return 
	011 Move X0, 0x22B2000
	012 Move X0, [X0+1168]
	013 Call 0x1B6F804
	014 Call 0x1B6FA0C
	015 Move X19, X0
	016 Move X0, 0x22B3000
	017 Move X0, [X0+512]
	018 Call 0x1B6F804
	019 Move X1, X0
	020 Move X0, X19
	021 Move X2, X31
	022 Call InvalidOperationException..ctor, X0, X1
	023 Move X0, 0x22B3000
	024 Move X0, [X0+528]
	025 Call 0x1B6F804
	026 Move X1, X0
	027 Move X0, X19
	028 Call 0x1B6F8E8

Method: System.Void Awake()

Disassembly:
	0x01C9C3BC B.EQ 0x1C9C3C8
	0x01C9C3C0 B 0x1C9C42C
	0x01C9C3C4 STR X0, [X23 + 0x198]
	0x01C9C3C8 LDR X23, [X19 + 0xA0]
	0x01C9C3CC CBZ X23, 0x1C9C4CC
	0x01C9C3D0 ADRP X21, 0x22B2000
	0x01C9C3D4 LDR X20, [X23 + 0x190]
	0x01C9C3D8 LDR X21, [X21 + 0x288]
	0x01C9C3DC MOV X0, X1
	0x01C9C3E0 BL 0x1B6EA0C
	0x01C9C3E4 LDR X2, [X21]
	0x01C9C3E8 MOV X1, X19
	0x01C9C3EC MOV X3, X31
	0x01C9C3F0 MOV X21, X0
	0x01C9C3F4 BL 0x317DB24
	0x01C9C3F8 MOV X0, X20
	0x01C9C3FC MOV X1, X21
	0x01C9C400 MOV X2, X31
	0x01C9C404 BL 0x322A948
	0x01C9C408 CBZ X0, 0x1C9C430
	0x01C9C40C LDR X1, [X22]
	0x01C9C410 LDR X8, [X0]
	0x01C9C414 CMP X8, X1
	0x01C9C418 B.NE 0x1C9C42C
	0x01C9C41C STR X0, [X23 + 0x190]
	0x01C9C420 LDR X8, [X0]
	0x01C9C424 CMP X8, X1
	0x01C9C428 B.EQ 0x1C9C434
	0x01C9C42C BL 0x1B6ECDC
	0x01C9C430 STR X0, [X23 + 0x190]
	0x01C9C434 LDR X22, [X19 + 0x80]
	0x01C9C438 CBZ X22, 0x1C9C4CC
	0x01C9C43C ADRP X23, 0x22B2000
	0x01C9C440 LDR X23, [X23 + 0x270]
	0x01C9C444 ADRP X21, 0x22B2000
	0x01C9C448 LDR X20, [X22 + 0x90]
	0x01C9C44C LDR X0, [X23]
	0x01C9C450 LDR X21, [X21 + 0x278]
	0x01C9C454 BL 0x1B6EA0C
	0x01C9C458 LDR X2, [X21]
	0x01C9C45C MOV X1, X19
	0x01C9C460 MOV X3, X31
	0x01C9C464 MOV X21, X0
	0x01C9C468 BL 0x28D5998
	0x01C9C46C MOV X0, X20
	0x01C9C470 MOV X1, X21
	0x01C9C474 MOV X2, X31
	0x01C9C478 BL 0x322A948
	0x01C9C47C CBZ X0, 0x1C9C4B8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2588000
	008 Move W8, [X20+1012]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x22B3000
	015 Move X0, [X0+368]
	016 Call 0x1B6F7F0
	017 Move X0, 0x22B3000
	018 Move X0, [X0+536]
	019 Call 0x1B6F7F0
	020 Move W8, 1
	021 Move [X20+1012], W8
	022 Move X22, [X19+128]
	023 Compare X22, 0
	024 JumpIfEqual {58}
	025 Move X23, 0x22B3000
	026 Move X23, [X23+368]
	027 Move X21, 0x22B3000
	028 Move X20, [X22+400]
	029 Move X0, [X23]
	030 Move X21, [X21+536]
	031 Call 0x1B6FA0C
	032 Move X2, [X21]
	033 Move X1, X19
	034 Move X3, X31
	035 Move X21, X0
	036 Call Action..ctor, X0, X1, X2
	037 Move X0, X20
	038 Move X1, X21
	039 Move X2, X31
	040 Call Delegate.Combine, X0, X1
	041 Compare X0, 0
	042 JumpIfEqual {50}
	043 Move X1, [X23]
	044 Move X8, [X0]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move [X22+400], X0
	047 Move X8, [X0]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Call 0x1B6FCDC
	050 Move [X22+400], X0
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Move X23, [X31+56]
	057 Return 
	058 Call 0x1B6FA1C

Method: System.Void OnDestroy()

Disassembly:
	0x01C9C480 LDR X20, [X23]
	0x01C9C484 MOV X19, X0
	0x01C9C488 MOV X1, X20
	0x01C9C48C BL 0x1B6E8FC
	0x01C9C490 CBZ X0, 0x1C9C4AC
	0x01C9C494 STR X0, [X22 + 0x90]
	0x01C9C498 LDR X20, [X23]
	0x01C9C49C MOV X0, X19
	0x01C9C4A0 MOV X1, X20
	0x01C9C4A4 BL 0x1B6E8FC
	0x01C9C4A8 CBNZ X0, 0x1C9C4BC
	0x01C9C4AC MOV X0, X19
	0x01C9C4B0 MOV X1, X20
	0x01C9C4B4 BL 0x1B6ECDC
	0x01C9C4B8 STR X31, [X22 + 0x90]
	0x01C9C4BC LDP X20, X19, [X31 + 0x20]
	0x01C9C4C0 LDP X22, X21, [X31 + 0x10]
	0x01C9C4C4 LDP X30, X23, [X31], #0x30
	0x01C9C4C8 RET
	0x01C9C4CC BL 0x1B6EA1C
	0x01C9C4D0 SUB X31, X31, 0x40
	0x01C9C4D4 STR D10, [X31 + 0x10]
	0x01C9C4D8 STP D9, D8, [X31 + 0x18]
	0x01C9C4DC STR X30, [X31 + 0x28]
	0x01C9C4E0 STP X20, X19, [X31 + 0x30]
	0x01C9C4E4 ADRP X20, 0x2587000
	0x01C9C4E8 LDRB W8, [X20 + 0x3FD]
	0x01C9C4EC MOV X19, X0
	0x01C9C4F0 TBNZ X8, 0x0, 0x1C9C508
	0x01C9C4F4 ADRP X0, 0x22B1000
	0x01C9C4F8 LDR X0, [X0 + 0x478]
	0x01C9C4FC BL 0x1B6E7F0
	0x01C9C500 MOVZ W8, 0x1
	0x01C9C504 STRB W8, [X20 + 0x3FD]
	0x01C9C508 MOV X0, X19
	0x01C9C50C MOV X1, X31
	0x01C9C510 BL 0x3A9B084
	0x01C9C514 CBZ X0, 0x1C9C614
	0x01C9C518 MOV X1, X31
	0x01C9C51C BL 0x3AA7AD0
	0x01C9C520 MOVZ W8, 0x420C0000
	0x01C9C524 FMOV S3, W8
	0x01C9C528 FMUL S8, S0, S3
	0x01C9C52C FMUL S9, S1, S3
	0x01C9C530 FMUL S10, S2, S3
	0x01C9C534 STP S8, S9, [X31]
	0x01C9C538 STR S10, [X31 + 0x8]
	0x01C9C53C LDR X8, [X19 + 0x80]
	0x01C9C540 CBZ X8, 0x1C9C614
	0x01C9C544 ADRP X9, 0x22B1000
	0x01C9C548 LDR X9, [X9 + 0x478]
	0x01C9C54C LDR X20, [X8 + 0xC0]
	0x01C9C550 LDR X0, [X9]
	0x01C9C554 LDR W9, [X0 + 0xE0]
	0x01C9C558 CBNZ W9, 0x1C9C560
	0x01C9C55C BL 0x1B6E8F8
	0x01C9C560 MOV X0, X20
	0x01C9C564 MOV X1, X31
	0x01C9C568 MOV X2, X31
	0x01C9C56C BL 0x3A9D6EC
	0x01C9C570 TBZ X0, 0x0, 0x1C9C5B8
	0x01C9C574 LDR X8, [X19 + 0x80]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2588000
	008 Move X21, 0x22B3000
	009 Move W8, [X20+1013]
	010 Move X21, [X21+448]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x22B3000
	017 Move X0, [X0+368]
	018 Call 0x1B6F7F0
	019 Move X0, 0x22B3000
	020 Move X0, [X0+536]
	021 Call 0x1B6F7F0
	022 Move X0, 0x22B3000
	023 Move X0, [X0+448]
	024 Call 0x1B6F7F0
	025 Move W8, 1
	026 Move [X20+1013], W8
	027 Move X0, [X21]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1B6F8F8
	032 Compare X19, 0
	033 JumpIfEqual {73}
	034 Move W8, [X19+48]
	035 Move X22, [X19+128]
	036 Or W8, W8, 8
	037 Move [X19+48], W8
	038 Compare X22, 0
	039 JumpIfEqual {73}
	040 Move X23, 0x22B3000
	041 Move X23, [X23+368]
	042 Move X21, 0x22B3000
	043 Move X20, [X22+400]
	044 Move X0, [X23]
	045 Move X21, [X21+536]
	046 Call 0x1B6FA0C
	047 Move X2, [X21]
	048 Move X1, X19
	049 Move X3, X31
	050 Move X21, X0
	051 Call Action..ctor, X0, X1, X2
	052 Move X0, X20
	053 Move X1, X21
	054 Move X2, X31
	055 Call Delegate.Remove, X0, X1
	056 Compare X0, 0
	057 JumpIfEqual {65}
	058 Move X1, [X23]
	059 Move X8, [X0]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move [X22+400], X0
	062 Move X8, [X0]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Call 0x1B6FCDC
	065 Move [X22+400], X0
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 Move X23, [X31+56]
	072 Return 
	073 Call 0x1B6FA1C

Method: System.Void Spawned()

Disassembly:
	0x01C9C578 CBZ X8, 0x1C9C614
	0x01C9C57C LDR X8, [X8 + 0xC0]
	0x01C9C580 CBZ X8, 0x1C9C614
	0x01C9C584 LDR X0, [X8 + 0x130]
	0x01C9C588 CBZ X0, 0x1C9C614
	0x01C9C58C MOV X1, X31
	0x01C9C590 BL 0x3AF67EC

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call NetworkBehaviour.Spawned, X0
	006 Move X0, X19
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]

Method: System.Void RPC_ToggleOnOff()

Disassembly:
	0x01C9C640 CBZ X0, 0x1C9C77C
	0x01C9C644 MOV V11.16B, V2.16B
	0x01C9C648 MOV V8.16B, V1.16B
	0x01C9C64C MOV V12.16B, V0.16B
	0x01C9C650 BL 0x1C98D1C
	0x01C9C654 STR X0, [X31 + 0x28]
	0x01C9C658 ADD X0, X31, 0x28
	0x01C9C65C MOV X1, X31
	0x01C9C660 BL 0x1D680F0
	0x01C9C664 MOV W20, W0
	0x01C9C668 TBZ X0, 0x0, 0x1C9C754
	0x01C9C66C LDR X21, [X19 + 0x80]
	0x01C9C670 CBZ X21, 0x1C9C77C
	0x01C9C674 MOV X0, X21
	0x01C9C678 BL 0x1C98D1C
	0x01C9C67C LDR X8, [X19 + 0x80]
	0x01C9C680 CBZ X8, 0x1C9C77C
	0x01C9C684 MOV X22, X0
	0x01C9C688 MOV X0, X8
	0x01C9C68C MOV X1, X31
	0x01C9C690 BL 0x3A9B084
	0x01C9C694 CBZ X0, 0x1C9C77C
	0x01C9C698 MOV X1, X31
	0x01C9C69C BL 0x3AA7658
	0x01C9C6A0 LDR X0, [X19 + 0x80]
	0x01C9C6A4 CBZ X0, 0x1C9C77C
	0x01C9C6A8 MOV X1, X31
	0x01C9C6AC STP S2, S1, [X31 + 0x20]
	0x01C9C6B0 MOV V13.16B, V0.16B
	0x01C9C6B4 MOV V10.16B, V8.16B
	0x01C9C6B8 BL 0x3A9B084
	0x01C9C6BC CBZ X0, 0x1C9C77C
	0x01C9C6C0 MOV X1, X31
	0x01C9C6C4 BL 0x3AA5FBC
	0x01C9C6C8 ADRP X23, 0x2587000
	0x01C9C6CC LDRB W8, [X23 + 0x43F]
	0x01C9C6D0 MOV V14.16B, V0.16B
	0x01C9C6D4 MOV V15.16B, V1.16B
	0x01C9C6D8 MOV V8.16B, V2.16B
	0x01C9C6DC MOV V9.16B, V3.16B
	0x01C9C6E0 CBNZ W8, 0x1C9C6F8
	0x01C9C6E4 ADRP X0, 0x22B1000
	0x01C9C6E8 LDR X0, [X0 + 0x480]
	0x01C9C6EC BL 0x1B6E7F0
	0x01C9C6F0 MOVZ W8, 0x1
	0x01C9C6F4 STRB W8, [X23 + 0x43F]
	0x01C9C6F8 ADRP X8, 0x22B1000
	0x01C9C6FC LDR X8, [X8 + 0x480]
	0x01C9C700 LDP S2, S1, [X31 + 0x20]
	0x01C9C704 MOV X0, X21
	0x01C9C708 MOV X1, X22
	0x01C9C70C LDR X8, [X8]
	0x01C9C710 MOV V3.16B, V14.16B
	0x01C9C714 MOV V4.16B, V15.16B
	0x01C9C718 MOV V5.16B, V8.16B
	0x01C9C71C LDR X8, [X8 + 0xB8]
	0x01C9C720 MOV V6.16B, V9.16B
	0x01C9C724 MOV W2, W31
	0x01C9C728 LDR V0, [X8 + 0x8]
	0x01C9C72C LDR X9, [X8]
	0x01C9C730 STP S10, S11, [X31 + 0x4]
	0x01C9C734 STR S12, [X31]
	0x01C9C738 STR S0, [X31 + 0x18]
	0x01C9C73C MOV V0.16B, V13.16B
	0x01C9C740 STR X9, [X31 + 0x10]
	0x01C9C744 BL 0x1C99BA4
	0x01C9C748 LDR X0, [X19 + 0x80]
	0x01C9C74C CBZ X0, 0x1C9C77C
	0x01C9C750 BL 0x1C9A0FC
	0x01C9C754 AND W0, W20, 0x1
	0x01C9C758 LDP X20, X19, [X31 + 0x90]
	0x01C9C75C LDP X22, X21, [X31 + 0x80]
	0x01C9C760 LDP X30, X23, [X31 + 0x70]
	0x01C9C764 LDP D9, D8, [X31 + 0x60]
	0x01C9C768 LDP D11, D10, [X31 + 0x50]
	0x01C9C76C LDP D13, D12, [X31 + 0x40]
	0x01C9C770 LDP D15, D14, [X31 + 0x30]
	0x01C9C774 ADD X31, X31, 0xA0
	0x01C9C778 RET
	0x01C9C77C BL 0x1B6EA1C
	0x01C9C780 STR X30, [X31 - 0x20]!
	0x01C9C784 STP X20, X19, [X31 + 0x10]
	0x01C9C788 ADRP X20, 0x2587000
	0x01C9C78C LDRB W8, [X20 + 0x43F]
	0x01C9C790 MOV X19, X0
	0x01C9C794 CBNZ W8, 0x1C9C7AC
	0x01C9C798 ADRP X0, 0x22B1000
	0x01C9C79C LDR X0, [X0 + 0x480]
	0x01C9C7A0 BL 0x1B6E7F0
	0x01C9C7A4 MOVZ W8, 0x1
	0x01C9C7A8 STRB W8, [X20 + 0x43F]
	0x01C9C7AC ADRP X8, 0x22B1000
	0x01C9C7B0 LDR X8, [X8 + 0x480]
	0x01C9C7B4 MOV X0, X19
	0x01C9C7B8 LDP X20, X19, [X31 + 0x10]
	0x01C9C7BC LDR X8, [X8]
	0x01C9C7C0 LDR X8, [X8 + 0xB8]
	0x01C9C7C4 LDP S0, S1, [X8]
	0x01C9C7C8 LDR V2, [X8 + 0x8]
	0x01C9C7CC LDR X30, [X31], #0x20
	0x01C9C7D0 B 0x1C9C618
	0x01C9C7D4 STP X30, X21, [X31 - 0x20]!
	0x01C9C7D8 STP X20, X19, [X31 + 0x10]
	0x01C9C7DC ADRP X21, 0x2587000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2588000
	005 Move W8, [X20+1014]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x22B3000
	012 Move X0, [X0+448]
	013 Call 0x1B6F7F0
	014 Move X0, 0x22B3000
	015 Move X0, [X0+544]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X20+1014], W8
	019 Move W8, [X19+88]
	020 Compare W8, 0
	021 JumpIfEqual {33}
	022 Move [X19+88], W31
	023 Move X0, X19
	024 Call Boombox.get_isOn, X0
	025 NotImplemented "Instruction ORN not yet implemented."
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 And W1, W8, 1
	030 Move X30, [X31+32]
	031 Call Boombox.set_isOn, X0, X1
	032 Return 
	033 Move X20, 0x22B3000
	034 Move X20, [X20+448]
	035 Move X0, [X20]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1B6F8F8
	040 Move X0, X19
	041 Move X1, X31
	042 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	043 Move X0, [X19+56]
	044 Compare X0, 0
	045 JumpIfEqual {130}
	046 Move X1, X31
	047 Call NetworkRunner.get_Stage, X0
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Return 
	053 Move X0, [X19+64]
	054 Compare X0, 0
	055 JumpIfEqual {130}
	056 Move X1, X31
	057 Call NetworkObject.GetLocalAuthorityMask, X0
	058 And W31, W0, 7
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {23}
	063 Move X8, [X19+56]
	064 Compare X8, 0
	065 JumpIfEqual {130}
	066 Move X0, [X8+80]
	067 Compare X0, 0
	068 JumpIfEqual {130}
	069 Move X1, X31
	070 Call Simulation.HasAnyActiveConnections, X0
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {49}
	075 Move X8, [X19+56]
	076 Compare X8, 0
	077 JumpIfEqual {130}
	078 Move X0, [X8+80]
	079 Move W1, 8
	080 Move X2, X31
	081 Call SimulationMessage.Allocate, X0, X1
	082 Move X20, X0
	083 Move W0, 1
	084 Move X1, X31
	085 Call Assert.Check, X0
	086 Move X8, [X19+64]
	087 Compare X8, 0
	088 JumpIfEqual {130}
	089 Move X8, [X8+32]
	090 Compare X8, 0
	091 JumpIfEqual {110}
	092 Move W0, [X8]
	093 Move X0, [X20]
	094 Move X19, [X19+64]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1B6F8F8
	099 Move X8, 0x22B3000
	100 Move X8, [X8+544]
	101 Move X1, X19
	102 Move X20, [X31+16]
	103 Move X19, [X31+24]
	104 Move W2, 7
	105 Move X0, [X8]
	106 Move X3, X31
	107 Move X30, [X31+32]
	108 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	109 Return 
	110 Move X0, X31
	111 Move W1, [X19+104]
	112 Move W2, 1
	113 Move X3, X31
	114 Call RpcHeader.Create, X0, X1, X2
	115 Move [X20+28], X0
	116 Compare X20, 0
	117 JumpIfEqual {130}
	118 Move W8, 64
	119 Move [X20+12], W8
	120 Move X0, [X19+56]
	121 Compare X0, 0
	122 JumpIfEqual {130}
	123 Move X1, X20
	124 Move X20, [X31+16]
	125 Move X19, [X31+24]
	126 Move X2, X31
	127 Move X30, [X31+32]
	128 Call NetworkRunner.SendRpc, X0, X1
	129 Return 
	130 Call 0x1B6FA1C

Method: System.Void HandleToggleUse()

Disassembly:
	0x01C9C7E0 LDRB W8, [X21 + 0x3FE]

ISIL:
	001 Call Boombox.RPC_ToggleOnOff, X0
	002 Return 

Method: System.Void HandleIsOnChanged()

Disassembly:
	0x01C9C594 MOVZ W8, 0x420C0000
	0x01C9C598 ADD X0, X31, 0x0
	0x01C9C59C FMOV S2, 8
	0x01C9C5A0 FMOV S3, 5
	0x01C9C5A4 FMOV S1, W8
	0x01C9C5A8 MOV X1, X31
	0x01C9C5AC BL 0x1D088CC
	0x01C9C5B0 LDP S8, S9, [X31]
	0x01C9C5B4 LDR V10, [X31 + 0x8]
	0x01C9C5B8 MOV X0, X19
	0x01C9C5BC MOV V0.16B, V8.16B
	0x01C9C5C0 MOV V1.16B, V9.16B
	0x01C9C5C4 MOV V2.16B, V10.16B
	0x01C9C5C8 BL 0x1C9C618
	0x01C9C5CC TBZ X0, 0x0, 0x1C9C5FC
	0x01C9C5D0 LDR X20, [X19 + 0x98]
	0x01C9C5D4 MOV X0, X19
	0x01C9C5D8 MOV X1, X31
	0x01C9C5DC BL 0x3A9B084
	0x01C9C5E0 CBZ X0, 0x1C9C614
	0x01C9C5E4 MOV X1, X31
	0x01C9C5E8 BL 0x3AA7658
	0x01C9C5EC FMOV S3, 1
	0x01C9C5F0 MOV X0, X20
	0x01C9C5F4 MOV X1, X31
	0x01C9C5F8 BL 0x1CC181C
	0x01C9C5FC LDP X20, X19, [X31 + 0x30]
	0x01C9C600 LDR X30, [X31 + 0x28]
	0x01C9C604 LDP D9, D8, [X31 + 0x18]
	0x01C9C608 LDR V10, [X31 + 0x10]
	0x01C9C60C ADD X31, X31, 0x40
	0x01C9C610 RET
	0x01C9C614 BL 0x1B6EA1C
	0x01C9C618 SUB X31, X31, 0xA0
	0x01C9C61C STP D15, D14, [X31 + 0x30]
	0x01C9C620 STP D13, D12, [X31 + 0x40]
	0x01C9C624 STP D11, D10, [X31 + 0x50]
	0x01C9C628 STP D9, D8, [X31 + 0x60]
	0x01C9C62C STP X30, X23, [X31 + 0x70]
	0x01C9C630 STP X22, X21, [X31 + 0x80]
	0x01C9C634 STP X20, X19, [X31 + 0x90]
	0x01C9C638 MOV X19, X0
	0x01C9C63C LDR X0, [X0 + 0x80]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+144]
	006 Compare X0, 0
	007 JumpIfEqual {54}
	008 Move X1, X31
	009 Call AudioSource.get_isPlaying, X0
	010 And W20, W0, 1
	011 Move X0, X19
	012 Call Boombox.get_isOn, X0
	013 And W8, W0, 1
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X20, [X19+136]
	016 Move X0, X19
	017 Move X1, X31
	018 Call Component.get_transform, X0
	019 Compare X0, 0
	020 JumpIfEqual {54}
	021 Move X1, X31
	022 Call Transform.get_position, X0
	023 Move S3, 1
	024 Move X0, X20
	025 Move X1, X31
	026 Call SFXManager.PlaySFX, X0, X1, V0
	027 Move X0, X19
	028 Call Boombox.get_isOn, X0
	029 Move X8, [X19+144]
	030 Compare X8, 0
	031 JumpIfEqual {54}
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {47}
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X0, X8
	039 Move X1, X31
	040 Move X30, [X31+32]
	041 Call AudioSource.Play, X0
	042 Return 
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Return 
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X0, X8
	050 Move X1, X31
	051 Move X30, [X31+32]
	052 Call AudioSource.Pause, X0
	053 Return 
	054 Call 0x1B6FA1C

Method: System.Void .ctor()

Disassembly:
	0x01C9C7E4 MOV X20, X2
	0x01C9C7E8 MOV X19, X0

ISIL:
	001 Move X1, X31
	002 Call NetworkBehaviour..ctor, X0
	003 Return 

Method: System.Void CopyBackingFieldsToState(System.Boolean param_0)

Disassembly:
	0x01C9C7EC TBNZ X8, 0x0, 0x1C9C804
	0x01C9C7F0 ADRP X0, 0x22B1000

ISIL:
	001 Move W1, [X0+152]
	002 Call Boombox.set_isOn, X0, X1
	003 Return 

Method: System.Void CopyStateToBackingFields()

Disassembly:
	0x01C9C7F4 LDR X0, [X0 + 0x478]
	0x01C9C7F8 BL 0x1B6E7F0
	0x01C9C7FC MOVZ W8, 0x1
	0x01C9C800 STRB W8, [X21 + 0x3FE]
	0x01C9C804 LDR X0, [X19 + 0x40]
	0x01C9C808 CBZ X0, 0x1C9C880
	0x01C9C80C LDRB W8, [X0 + 0x60]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call Boombox.get_isOn, X0
	005 And W8, W0, 1
	006 Move [X19+152], W8
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 

Method: System.Void RPC_ToggleOnOff@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01C9C810 TBNZ X8, 0x1, 0x1C9C880
	0x01C9C814 MOV X1, X31
	0x01C9C818 BL 0x1D9E780
	0x01C9C81C TBZ X0, 0x0, 0x1C9C880
	0x01C9C820 ADRP X8, 0x22B1000
	0x01C9C824 LDR X8, [X8 + 0x478]
	0x01C9C828 LDR X0, [X8]
	0x01C9C82C LDR W8, [X0 + 0xE0]
	0x01C9C830 CBNZ W8, 0x1C9C838
	0x01C9C834 BL 0x1B6E8F8
	0x01C9C838 MOV X0, X20
	0x01C9C83C MOV X1, X31
	0x01C9C840 MOV X2, X31
	0x01C9C844 BL 0x3A9D6EC
	0x01C9C848 TBZ X0, 0x0, 0x1C9C880
	0x01C9C84C LDR X20, [X19 + 0x90]
	0x01C9C850 MOV X0, X19
	0x01C9C854 MOV X1, X31
	0x01C9C858 BL 0x3A9B084
	0x01C9C85C CBZ X0, 0x1C9C88C
	0x01C9C860 MOV X1, X31
	0x01C9C864 BL 0x3AA7658
	0x01C9C868 MOV X0, X20
	0x01C9C86C LDP X20, X19, [X31 + 0x10]
	0x01C9C870 FMOV S3, 1
	0x01C9C874 MOV X1, X31
	0x01C9C878 LDP X30, X21, [X31], #0x20
	0x01C9C87C B 0x1CC181C
	0x01C9C880 LDP X20, X19, [X31 + 0x10]
	0x01C9C884 LDP X30, X21, [X31], #0x20
	0x01C9C888 RET
	0x01C9C88C BL 0x1B6EA1C
	0x01C9C890 B 0x1C9C894
	0x01C9C894 SUB X31, X31, 0x50
	0x01C9C898 STP D11, D10, [X31 + 0x10]
	0x01C9C89C STP D9, D8, [X31 + 0x20]
	0x01C9C8A0 STP X30, X21, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2588000
	005 Move W8, [X20+1015]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x22B3000
	012 Move X0, [X0+552]
	013 Call 0x1B6F7F0
	014 Move W8, 1
	015 Move [X20+1015], W8
	016 Move W0, 1
	017 Move X1, X31
	018 Move W20, 1
	019 Call Assert.Check, X0
	020 Compare X19, 0
	021 JumpIfEqual {42}
	022 Move X9, 0x22B3000
	023 Move X9, [X9+552]
	024 Move [X19+88], W20
	025 Move X8, [X19]
	026 Move X1, [X9]
	027 Move W10, [X8+304]
	028 Move W9, [X1+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, [X8+200]
	031 Add X8, X8, X9
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Call Boombox.RPC_ToggleOnOff, X0
	039 Return 
	040 Move X0, X19
	041 Call 0x1B6FCDC
	042 Call 0x1B6FA1C

