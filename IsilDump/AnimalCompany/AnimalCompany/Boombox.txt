Type: AnimalCompany.Boombox

Method: System.Boolean get_isOn()

Disassembly:
	0x01D8B770 LDR V0, [X8 + 0x44C]
	0x01D8B774 ADRP X27, 0x236B000
	0x01D8B778 ADRP X28, 0x236B000
	0x01D8B77C ADRP X29, 0x236B000
	0x01D8B780 LDR X27, [X27 + 0xB60]
	0x01D8B784 LDR X28, [X28 + 0xB50]
	0x01D8B788 LDR X29, [X29 + 0xB78]
	0x01D8B78C STR S0, [X31 + 0x20]
	0x01D8B790 ADRP X20, 0x2368000
	0x01D8B794 LDR V13, [X19 + 0xA0]
	0x01D8B798 LDR X20, [X20 + 0x5A0]
	0x01D8B79C MOV W25, W31
	0x01D8B7A0 ADRP X26, 0x264D000
	0x01D8B7A4 FCMP S13, 0x0
	0x01D8B7A8 B.LE 0x1D8B960
	0x01D8B7AC LDR X8, [X19 + 0x90]
	0x01D8B7B0 CBZ X8, 0x1D8B990
	0x01D8B7B4 LDR X0, [X8 + 0x18]
	0x01D8B7B8 LDR V0, [X19 + 0xA8]
	0x01D8B7BC MOV X1, X31
	0x01D8B7C0 BL 0x1DAAE2C
	0x01D8B7C4 MOV X21, X0
	0x01D8B7C8 MOV X0, X19
	0x01D8B7CC MOV X1, X31
	0x01D8B7D0 BL 0x3C32E90
	0x01D8B7D4 CBZ X0, 0x1D8B990

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {12}
	006 Move W8, [X8]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return X0
	012 Move X0, 0x2369000
	013 Move X0, [X0+1456]
	014 Call 0x1C17D08
	015 Call 0x1C17F10
	016 Move X19, X0
	017 Move X0, 0x236C000
	018 Move X0, [X0+2728]
	019 Call 0x1C17D08
	020 Move X1, X0
	021 Move X0, X19
	022 Move X2, X31
	023 Call InvalidOperationException..ctor, X0, X1
	024 Move X0, 0x236C000
	025 Move X0, [X0+2736]
	026 Call 0x1C17D08
	027 Move X1, X0
	028 Move X0, X19
	029 Call 0x1C17DEC

Method: System.Void set_isOn(System.Boolean value)

Disassembly:
	0x01D8B7D8 MOV X1, X31
	0x01D8B7DC BL 0x3C3F58C
	0x01D8B7E0 MOV X0, X31
	0x01D8B7E4 STP S1, S0, [X31 + 0x28]
	0x01D8B7E8 STR S2, [X31 + 0x24]
	0x01D8B7EC BL 0x3C30AE0
	0x01D8B7F0 MOV X0, X31
	0x01D8B7F4 MOV V11.16B, V0.16B
	0x01D8B7F8 MOV V12.16B, V1.16B
	0x01D8B7FC MOV V10.16B, V2.16B
	0x01D8B800 BL 0x3C30AE0
	0x01D8B804 LDRB W8, [X26 + 0x786]
	0x01D8B808 MOV V8.16B, V0.16B
	0x01D8B80C MOV V9.16B, V1.16B
	0x01D8B810 MOV V14.16B, V2.16B
	0x01D8B814 CBNZ W8, 0x1D8B828
	0x01D8B818 MOV X0, X20
	0x01D8B81C BL 0x1C16CF4
	0x01D8B820 MOVZ W8, 0x1
	0x01D8B824 STRB W8, [X26 + 0x786]
	0x01D8B828 LDR X8, [X20]
	0x01D8B82C MOV V0.16B, V8.16B
	0x01D8B830 MOV V1.16B, V9.16B
	0x01D8B834 MOV V2.16B, V14.16B
	0x01D8B838 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {11}
	006 And W9, W1, 1
	007 Move [X8], W9
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return 
	011 Move X0, 0x2369000
	012 Move X0, [X0+1456]
	013 Call 0x1C17D08
	014 Call 0x1C17F10
	015 Move X19, X0
	016 Move X0, 0x236C000
	017 Move X0, [X0+2728]
	018 Call 0x1C17D08
	019 Move X1, X0
	020 Move X0, X19
	021 Move X2, X31
	022 Call InvalidOperationException..ctor, X0, X1
	023 Move X0, 0x236C000
	024 Move X0, [X0+2744]
	025 Call 0x1C17D08
	026 Move X1, X0
	027 Move X0, X19
	028 Call 0x1C17DEC

Method: System.Void Awake()

Disassembly:
	0x01D8B83C MOV X0, X31
	0x01D8B840 LDP S3, S4, [X8 + 0x18]
	0x01D8B844 LDR V5, [X8 + 0x20]
	0x01D8B848 BL 0x3C2A810
	0x01D8B84C CBZ X21, 0x1D8B990
	0x01D8B850 MOV V8.16B, V2.16B
	0x01D8B854 LDR V2, [X31 + 0x20]
	0x01D8B858 MOV V9.16B, V3.16B
	0x01D8B85C LDR V3, [X31 + 0x2C]
	0x01D8B860 MOV V14.16B, V0.16B
	0x01D8B864 FMUL S0, S11, S2
	0x01D8B868 MOV V15.16B, V1.16B
	0x01D8B86C FADD S11, S3, S0
	0x01D8B870 LDR V0, [X31 + 0x28]
	0x01D8B874 FMUL S1, S12, S2
	0x01D8B878 LDR X22, [X19 + 0x38]
	0x01D8B87C FMUL S2, S10, S2
	0x01D8B880 FADD S12, S0, S1
	0x01D8B884 LDR V0, [X31 + 0x24]
	0x01D8B888 MOV X0, X21
	0x01D8B88C MOV X1, X31
	0x01D8B890 FADD S10, S0, S2
	0x01D8B894 BL 0x3C32ECC
	0x01D8B898 ADRP X8, 0x236B000
	0x01D8B89C LDR X8, [X8 + 0xB58]
	0x01D8B8A0 MOV X23, X0
	0x01D8B8A4 ADD X0, X31, 0x80
	0x01D8B8A8 MOV V0.16B, V11.16B
	0x01D8B8AC LDR X1, [X8]
	0x01D8B8B0 MOV V1.16B, V12.16B
	0x01D8B8B4 MOV V2.16B, V10.16B
	0x01D8B8B8 STP X31, X31, [X31 + 0x80]
	0x01D8B8BC BL 0x243BFEC
	0x01D8B8C0 LDR X1, [X27]
	0x01D8B8C4 ADD X0, X31, 0x68
	0x01D8B8C8 MOV V0.16B, V14.16B
	0x01D8B8CC MOV V1.16B, V15.16B
	0x01D8B8D0 MOV V2.16B, V8.16B
	0x01D8B8D4 MOV V3.16B, V9.16B
	0x01D8B8D8 STP X31, X31, [X31 + 0x68]
	0x01D8B8DC STR W31, [X31 + 0x78]
	0x01D8B8E0 BL 0x2437C9C
	0x01D8B8E4 LDR X0, [X28]
	0x01D8B8E8 BL 0x1C16F10
	0x01D8B8EC LDR X2, [X29]
	0x01D8B8F0 MOV X1, X19
	0x01D8B8F4 MOV X3, X31
	0x01D8B8F8 MOV X24, X0
	0x01D8B8FC BL 0x1EB8ECC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x264E000
	008 Move W8, [X20+2499]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x236A000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move X0, 0x236C000
	018 Move X0, [X0+2752]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2499], W8
	022 Move X22, [X19+128]
	023 Compare X22, 0
	024 JumpIfEqual {58}
	025 Move X23, 0x236A000
	026 Move X23, [X23+3696]
	027 Move X21, 0x236C000
	028 Move X20, [X22+464]
	029 Move X0, [X23]
	030 Move X21, [X21+2752]
	031 Call 0x1C17F10
	032 Move X2, [X21]
	033 Move X1, X19
	034 Move X3, X31
	035 Move X21, X0
	036 Call Action..ctor, X0, X1, X2
	037 Move X0, X20
	038 Move X1, X21
	039 Move X2, X31
	040 Call Delegate.Combine, X0, X1
	041 Compare X0, 0
	042 JumpIfEqual {50}
	043 Move X1, [X23]
	044 Move X8, [X0]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move [X22+464], X0
	047 Move X8, [X0]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Call 0x1C181E0
	050 Move [X22+464], X0
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Move X23, [X31+56]
	057 Return 
	058 Call 0x1C17F20

Method: System.Void OnDestroy()

Disassembly:
	0x01D8B900 CBZ X22, 0x1D8B990
	0x01D8B904 LDR W8, [X31 + 0x78]
	0x01D8B908 LDUR V0, [X31 + 0x68]
	0x01D8B90C LDP X2, X3, [X31 + 0x80]
	0x01D8B910 ADD X4, X31, 0x30
	0x01D8B914 STR W8, [X31 + 0x40]
	0x01D8B918 ADD X8, X31, 0x50
	0x01D8B91C MOV X0, X22
	0x01D8B920 MOV X1, X23
	0x01D8B924 MOV X5, X31
	0x01D8B928 MOV X6, X31
	0x01D8B92C MOV W7, W31
	0x01D8B930 STR V0, [X31 + 0x3]
	0x01D8B934 STP X24, X31, [X31]
	0x01D8B938 BL 0x1EAFF0C
	0x01D8B93C MOV X0, X21
	0x01D8B940 MOV X1, X31
	0x01D8B944 BL 0x1E0D16C
	0x01D8B948 LDR W8, [X19 + 0xA4]
	0x01D8B94C SCVTF S0, W0
	0x01D8B950 ADD W25, W25, 0x1
	0x01D8B954 FSUB S13, S13, S0
	0x01D8B958 CMP W25, W8
	0x01D8B95C B.LE 0x1D8B7A4
	0x01D8B960 LDP X20, X19, [X31 + 0x120]
	0x01D8B964 LDP X22, X21, [X31 + 0x110]
	0x01D8B968 LDP X24, X23, [X31 + 0x100]
	0x01D8B96C LDP X26, X25, [X31 + 0xF0]
	0x01D8B970 LDP X28, X27, [X31 + 0xE0]
	0x01D8B974 LDP X29, X30, [X31 + 0xD0]
	0x01D8B978 LDP D9, D8, [X31 + 0xC0]
	0x01D8B97C LDP D11, D10, [X31 + 0xB0]
	0x01D8B980 LDP D13, D12, [X31 + 0xA0]
	0x01D8B984 LDP D15, D14, [X31 + 0x90]
	0x01D8B988 ADD X31, X31, 0x130
	0x01D8B98C RET
	0x01D8B990 BL 0x1C16F20
	0x01D8B994 STP D13, D12, [X31 - 0x80]!
	0x01D8B998 STP D11, D10, [X31 + 0x10]
	0x01D8B99C STP D9, D8, [X31 + 0x20]
	0x01D8B9A0 STR X30, [X31 + 0x30]
	0x01D8B9A4 STP X26, X25, [X31 + 0x40]
	0x01D8B9A8 STP X24, X23, [X31 + 0x50]
	0x01D8B9AC STP X22, X21, [X31 + 0x60]
	0x01D8B9B0 STP X20, X19, [X31 + 0x70]
	0x01D8B9B4 ADRP X24, 0x264D000
	0x01D8B9B8 LDRB W8, [X24 + 0x9CF]
	0x01D8B9BC MOV X20, X4
	0x01D8B9C0 MOV V8.16B, V5.16B
	0x01D8B9C4 MOV V9.16B, V4.16B
	0x01D8B9C8 MOV V10.16B, V3.16B
	0x01D8B9CC MOV X22, X3
	0x01D8B9D0 MOV X23, X2
	0x01D8B9D4 MOV V11.16B, V2.16B
	0x01D8B9D8 MOV V12.16B, V1.16B
	0x01D8B9DC MOV V13.16B, V0.16B
	0x01D8B9E0 MOV W21, W1
	0x01D8B9E4 MOV X19, X0
	0x01D8B9E8 TBNZ X8, 0x0, 0x1D8BA0C
	0x01D8B9EC ADRP X0, 0x236B000
	0x01D8B9F0 LDR X0, [X0 + 0xA78]
	0x01D8B9F4 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x264E000
	008 Move X21, 0x236C000
	009 Move W8, [X20+2500]
	010 Move X21, [X21+2680]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x236A000
	017 Move X0, [X0+3696]
	018 Call 0x1C17CF4
	019 Move X0, 0x236C000
	020 Move X0, [X0+2752]
	021 Call 0x1C17CF4
	022 Move X0, 0x236C000
	023 Move X0, [X0+2680]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+2500], W8
	027 Move X0, [X21]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Compare X19, 0
	033 JumpIfEqual {73}
	034 Move W8, [X19+48]
	035 Move X22, [X19+128]
	036 Or W8, W8, 8
	037 Move [X19+48], W8
	038 Compare X22, 0
	039 JumpIfEqual {73}
	040 Move X23, 0x236A000
	041 Move X23, [X23+3696]
	042 Move X21, 0x236C000
	043 Move X20, [X22+464]
	044 Move X0, [X23]
	045 Move X21, [X21+2752]
	046 Call 0x1C17F10
	047 Move X2, [X21]
	048 Move X1, X19
	049 Move X3, X31
	050 Move X21, X0
	051 Call Action..ctor, X0, X1, X2
	052 Move X0, X20
	053 Move X1, X21
	054 Move X2, X31
	055 Call Delegate.Remove, X0, X1
	056 Compare X0, 0
	057 JumpIfEqual {65}
	058 Move X1, [X23]
	059 Move X8, [X0]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move [X22+464], X0
	062 Move X8, [X0]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Call 0x1C181E0
	065 Move [X22+464], X0
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 Move X23, [X31+56]
	072 Return 
	073 Call 0x1C17F20

Method: System.Void Spawned()

Disassembly:
	0x01D8B9F8 ADRP X0, 0x236B000
	0x01D8B9FC LDR X0, [X0 + 0xB80]
	0x01D8BA00 BL 0x1C16CF4
	0x01D8BA04 MOVZ W8, 0x1
	0x01D8BA08 STRB W8, [X24 + 0x9CF]
	0x01D8BA0C LDRB W8, [X19 + 0x58]
	0x01D8BA10 CBZ W8, 0x1D8BA74

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call NetworkBehaviour.Spawned, X0
	006 Move X0, X19
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]

Method: System.Void RPC_ToggleOnOff()

Disassembly:
	0x01D8BAC0 LDR X30, [X31 + 0x30]
	0x01D8BAC4 LDP D9, D8, [X31 + 0x20]
	0x01D8BAC8 LDP D11, D10, [X31 + 0x10]
	0x01D8BACC LDP D13, D12, [X31], #0x80
	0x01D8BAD0 RET
	0x01D8BAD4 LDR X0, [X19 + 0x40]
	0x01D8BAD8 CBZ X0, 0x1D8BCF0
	0x01D8BADC MOV X1, X31
	0x01D8BAE0 BL 0x1E94078
	0x01D8BAE4 ANDS W31, W0, 0x7
	0x01D8BAE8 B.EQ 0x1D8BB94
	0x01D8BAEC TBNZ X0, 0x0, 0x1D8BA18
	0x01D8BAF0 MOV X0, X23
	0x01D8BAF4 MOV X1, X31
	0x01D8BAF8 BL 0x1E8DD08
	0x01D8BAFC MOV W24, W0
	0x01D8BB00 MOV X0, X22
	0x01D8BB04 MOV X1, X31
	0x01D8BB08 BL 0x1E8DD08
	0x01D8BB0C ADD W8, W0, 0x3
	0x01D8BB10 MOV X0, X20
	0x01D8BB14 MOV X1, X31
	0x01D8BB18 AND W26, W8, 0xFFFFFFFC
	0x01D8BB1C BL 0x1E8DD08
	0x01D8BB20 ADD W9, W24, 0x27
	0x01D8BB24 ADD W8, W0, 0x3
	0x01D8BB28 AND W9, W9, 0xFFFFFFFC
	0x01D8BB2C AND W8, W8, 0xFFFFFFFC
	0x01D8BB30 ADD W9, W9, W26
	0x01D8BB34 ADD W24, W9, W8
	0x01D8BB38 CMP W24, 0x201
	0x01D8BB3C B.GE 0x1D8BBE4
	0x01D8BB40 LDR X8, [X19 + 0x38]
	0x01D8BB44 CBZ X8, 0x1D8BCF0
	0x01D8BB48 LDR X0, [X8 + 0x50]
	0x01D8BB4C CBZ X0, 0x1D8BCF0
	0x01D8BB50 MOV X1, X31
	0x01D8BB54 BL 0x1EC4D00
	0x01D8BB58 TBZ X0, 0x0, 0x1D8BAB0
	0x01D8BB5C LDR X8, [X19 + 0x38]
	0x01D8BB60 CBZ X8, 0x1D8BCF0
	0x01D8BB64 LDR X0, [X8 + 0x50]
	0x01D8BB68 MOV W1, W24
	0x01D8BB6C MOV X2, X31
	0x01D8BB70 BL 0x1ED9318
	0x01D8BB74 LDR X8, [X19 + 0x40]
	0x01D8BB78 CBZ X8, 0x1D8BCF0
	0x01D8BB7C LDR X8, [X8 + 0x20]
	0x01D8BB80 MOV X24, X0
	0x01D8BB84 ADD X25, X0, 0x1C
	0x01D8BB88 CBZ X8, 0x1D8BC2C
	0x01D8BB8C LDR W0, [X8]
	0x01D8BB90 B 0x1D8BC30
	0x01D8BB94 LDR X0, [X25]
	0x01D8BB98 LDR X19, [X19 + 0x40]
	0x01D8BB9C LDR W8, [X0 + 0xE0]
	0x01D8BBA0 CBNZ W8, 0x1D8BBA8
	0x01D8BBA4 BL 0x1C16DFC
	0x01D8BBA8 ADRP X8, 0x236B000
	0x01D8BBAC LDR X8, [X8 + 0xB80]
	0x01D8BBB0 MOV X1, X19
	0x01D8BBB4 LDP X20, X19, [X31 + 0x70]
	0x01D8BBB8 LDP X22, X21, [X31 + 0x60]
	0x01D8BBBC LDR X0, [X8]
	0x01D8BBC0 LDP X24, X23, [X31 + 0x50]
	0x01D8BBC4 LDP X26, X25, [X31 + 0x40]
	0x01D8BBC8 LDR X30, [X31 + 0x30]
	0x01D8BBCC LDP D9, D8, [X31 + 0x20]
	0x01D8BBD0 LDP D11, D10, [X31 + 0x10]
	0x01D8BBD4 MOVZ W2, 0x7
	0x01D8BBD8 MOV X3, X31
	0x01D8BBDC LDP D13, D12, [X31], #0x80
	0x01D8BBE0 B 0x1E77B00
	0x01D8BBE4 LDR X0, [X25]
	0x01D8BBE8 LDR W8, [X0 + 0xE0]
	0x01D8BBEC CBNZ W8, 0x1D8BBF4
	0x01D8BBF0 BL 0x1C16DFC
	0x01D8BBF4 ADRP X8, 0x236B000
	0x01D8BBF8 LDR X8, [X8 + 0xB80]
	0x01D8BBFC MOV W1, W24
	0x01D8BC00 LDP X20, X19, [X31 + 0x70]
	0x01D8BC04 LDP X22, X21, [X31 + 0x60]
	0x01D8BC08 LDR X0, [X8]
	0x01D8BC0C LDP X24, X23, [X31 + 0x50]
	0x01D8BC10 LDP X26, X25, [X31 + 0x40]
	0x01D8BC14 LDR X30, [X31 + 0x30]
	0x01D8BC18 LDP D9, D8, [X31 + 0x20]
	0x01D8BC1C LDP D11, D10, [X31 + 0x10]
	0x01D8BC20 MOV X2, X31
	0x01D8BC24 LDP D13, D12, [X31], #0x80
	0x01D8BC28 B 0x1E77AF8
	0x01D8BC2C MOV X0, X31
	0x01D8BC30 LDR W1, [X19 + 0x68]
	0x01D8BC34 MOVZ W2, 0x1
	0x01D8BC38 MOV X3, X31
	0x01D8BC3C BL 0x1E9C23C
	0x01D8BC40 STUR X0, [X24 + 0x1C]
	0x01D8BC44 ADD X0, X24, 0x34
	0x01D8BC48 MOV X1, X23
	0x01D8BC4C MOV X2, X31
	0x01D8BC50 STR W21, [X24 + 0x24]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x264E000
	005 Move W8, [X20+2501]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x236C000
	012 Move X0, [X0+2680]
	013 Call 0x1C17CF4
	014 Move X0, 0x236C000
	015 Move X0, [X0+2760]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2501], W8
	019 Move W8, [X19+88]
	020 Compare W8, 0
	021 JumpIfEqual {33}
	022 Move [X19+88], W31
	023 Move X0, X19
	024 Call Boombox.get_isOn, X0
	025 NotImplemented "Instruction ORN not yet implemented."
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 And W1, W8, 1
	030 Move X30, [X31+32]
	031 Call Boombox.set_isOn, X0, X1
	032 Return 
	033 Move X20, 0x236C000
	034 Move X20, [X20+2680]
	035 Move X0, [X20]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	043 Move X0, [X19+56]
	044 Compare X0, 0
	045 JumpIfEqual {127}
	046 Move X1, X31
	047 Call NetworkRunner.get_Stage, X0
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Return 
	053 Move X0, [X19+64]
	054 Compare X0, 0
	055 JumpIfEqual {127}
	056 Move X1, X31
	057 Call NetworkObject.GetLocalAuthorityMask, X0
	058 And W31, W0, 7
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {23}
	063 Move X8, [X19+56]
	064 Compare X8, 0
	065 JumpIfEqual {127}
	066 Move X0, [X8+80]
	067 Compare X0, 0
	068 JumpIfEqual {127}
	069 Move X1, X31
	070 Call Simulation.HasAnyActiveConnections, X0
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {49}
	075 Move X8, [X19+56]
	076 Compare X8, 0
	077 JumpIfEqual {127}
	078 Move X0, [X8+80]
	079 Move W1, 8
	080 Move X2, X31
	081 Call SimulationMessage.Allocate, X0, X1
	082 Move X8, [X19+64]
	083 Compare X8, 0
	084 JumpIfEqual {127}
	085 Move X8, [X8+32]
	086 Move X20, X0
	087 Compare X8, 0
	088 JumpIfEqual {107}
	089 Move W0, [X8]
	090 Move X0, [X20]
	091 Move X19, [X19+64]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move X8, 0x236C000
	097 Move X8, [X8+2760]
	098 Move X1, X19
	099 Move X20, [X31+16]
	100 Move X19, [X31+24]
	101 Move W2, 7
	102 Move X0, [X8]
	103 Move X3, X31
	104 Move X30, [X31+32]
	105 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	106 Return 
	107 Move X0, X31
	108 Move W1, [X19+104]
	109 Move W2, 1
	110 Move X3, X31
	111 Call RpcHeader.Create, X0, X1, X2
	112 Move [X20+28], X0
	113 Compare X20, 0
	114 JumpIfEqual {127}
	115 Move W8, 64
	116 Move [X20+12], W8
	117 Move X0, [X19+56]
	118 Compare X0, 0
	119 JumpIfEqual {127}
	120 Move X1, X20
	121 Move X20, [X31+16]
	122 Move X19, [X31+24]
	123 Move X2, X31
	124 Move X30, [X31+32]
	125 Call NetworkRunner.SendRpc, X0, X1
	126 Return 
	127 Call 0x1C17F20

Method: System.Void HandleToggleUse()

Disassembly:
	0x01D8BC54 STP S13, S12, [X24 + 0x28]

ISIL:
	001 Call Boombox.RPC_ToggleOnOff, X0
	002 Return 

Method: System.Void HandleIsOnChanged()

Disassembly:
	0x01D8BA14 STRB W31, [X19 + 0x58]
	0x01D8BA18 LDR X0, [X19 + 0x40]
	0x01D8BA1C CBZ X0, 0x1D8BAB0
	0x01D8BA20 LDRB W8, [X0 + 0x60]
	0x01D8BA24 TBNZ X8, 0x1, 0x1D8BAB0
	0x01D8BA28 MOV X1, X31
	0x01D8BA2C BL 0x1E93668
	0x01D8BA30 TBZ X0, 0x0, 0x1D8BAB0
	0x01D8BA34 MOV X0, X19
	0x01D8BA38 BL 0x1D8AD0C
	0x01D8BA3C SUB W8, W0, W21
	0x01D8BA40 BIC W1, W8, W8, 0x1F
	0x01D8BA44 MOV X0, X19
	0x01D8BA48 BL 0x1D8AD6C
	0x01D8BA4C MOV X0, X19
	0x01D8BA50 LDP X20, X19, [X31 + 0x70]
	0x01D8BA54 LDP X22, X21, [X31 + 0x60]
	0x01D8BA58 LDP X24, X23, [X31 + 0x50]
	0x01D8BA5C LDP X26, X25, [X31 + 0x40]
	0x01D8BA60 LDR X30, [X31 + 0x30]
	0x01D8BA64 LDP D9, D8, [X31 + 0x20]
	0x01D8BA68 LDP D11, D10, [X31 + 0x10]
	0x01D8BA6C LDP D13, D12, [X31], #0x80
	0x01D8BA70 B 0x1D8B170
	0x01D8BA74 ADRP X25, 0x236B000
	0x01D8BA78 LDR X25, [X25 + 0xA78]
	0x01D8BA7C LDR X0, [X25]
	0x01D8BA80 LDR W8, [X0 + 0xE0]
	0x01D8BA84 CBNZ W8, 0x1D8BA8C
	0x01D8BA88 BL 0x1C16DFC
	0x01D8BA8C MOV X0, X19
	0x01D8BA90 MOV X1, X31
	0x01D8BA94 BL 0x1E77B08
	0x01D8BA98 LDR X0, [X19 + 0x38]
	0x01D8BA9C CBZ X0, 0x1D8BCF0
	0x01D8BAA0 MOV X1, X31
	0x01D8BAA4 BL 0x1E9E538
	0x01D8BAA8 CMP W0, 0x4
	0x01D8BAAC B.NE 0x1D8BAD4
	0x01D8BAB0 LDP X20, X19, [X31 + 0x70]
	0x01D8BAB4 LDP X22, X21, [X31 + 0x60]
	0x01D8BAB8 LDP X24, X23, [X31 + 0x50]
	0x01D8BABC LDP X26, X25, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+144]
	006 Compare X0, 0
	007 JumpIfEqual {54}
	008 Move X1, X31
	009 Call AudioSource.get_isPlaying, X0
	010 And W20, W0, 1
	011 Move X0, X19
	012 Call Boombox.get_isOn, X0
	013 And W8, W0, 1
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X20, [X19+136]
	016 Move X0, X19
	017 Move X1, X31
	018 Call Component.get_transform, X0
	019 Compare X0, 0
	020 JumpIfEqual {54}
	021 Move X1, X31
	022 Call Transform.get_position, X0
	023 Move S3, 1
	024 Move X0, X20
	025 Move X1, X31
	026 Call SFXManager.PlaySFX, X0, X1, V0
	027 Move X0, X19
	028 Call Boombox.get_isOn, X0
	029 Move X8, [X19+144]
	030 Compare X8, 0
	031 JumpIfEqual {54}
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {47}
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X0, X8
	039 Move X1, X31
	040 Move X30, [X31+32]
	041 Call AudioSource.Play, X0
	042 Return 
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Return 
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X0, X8
	050 Move X1, X31
	051 Move X30, [X31+32]
	052 Call AudioSource.Pause, X0
	053 Return 
	054 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01D8BC58 STR S11, [X24 + 0x30]
	0x01D8BC5C BL 0x1E8DCF8

ISIL:
	001 Move X1, X31
	002 Call NetworkBehaviour..ctor, X0
	003 Return 

Method: System.Void CopyBackingFieldsToState(System.Boolean param_0)

Disassembly:
	0x01D8BC60 ADD W8, W0, 0x1B
	0x01D8BC64 AND W21, W8, 0xFFFFFFFC

ISIL:
	001 Move W1, [X0+152]
	002 Call Boombox.set_isOn, X0, X1
	003 Return 

Method: System.Void CopyStateToBackingFields()

Disassembly:
	0x01D8BC68 ADD X0, X25, W21, SXTW
	0x01D8BC6C MOV X1, X22
	0x01D8BC70 MOV X2, X31
	0x01D8BC74 BL 0x1E8DCF8
	0x01D8BC78 ADD W8, W0, 0x3
	0x01D8BC7C AND W8, W8, 0xFFFFFFFC
	0x01D8BC80 ADD W8, W8, W21

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call Boombox.get_isOn, X0
	005 And W8, W0, 1
	006 Move [X19+152], W8
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 

Method: System.Void RPC_ToggleOnOff@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01D8BC84 ADD W21, W8, 0xC
	0x01D8BC88 ADD X9, X25, W8, SXTW
	0x01D8BC8C ADD X0, X25, W21, SXTW
	0x01D8BC90 MOV X1, X20
	0x01D8BC94 MOV X2, X31
	0x01D8BC98 STP S10, S9, [X9]
	0x01D8BC9C STR S8, [X9 + 0x8]
	0x01D8BCA0 BL 0x1E8DCF8
	0x01D8BCA4 CBZ X24, 0x1D8BCF0
	0x01D8BCA8 ADD W8, W0, 0x3
	0x01D8BCAC AND W8, W8, 0x1FFFFFFC
	0x01D8BCB0 ADD W8, W8, W21
	0x01D8BCB4 UBFM W8, W8, 0x1D, 0x1C
	0x01D8BCB8 STR W8, [X24 + 0xC]
	0x01D8BCBC LDR X0, [X19 + 0x38]
	0x01D8BCC0 CBZ X0, 0x1D8BCF0
	0x01D8BCC4 MOV X1, X24
	0x01D8BCC8 LDP X20, X19, [X31 + 0x70]
	0x01D8BCCC LDP X22, X21, [X31 + 0x60]
	0x01D8BCD0 LDP X24, X23, [X31 + 0x50]
	0x01D8BCD4 LDP X26, X25, [X31 + 0x40]
	0x01D8BCD8 LDR X30, [X31 + 0x30]
	0x01D8BCDC LDP D9, D8, [X31 + 0x20]
	0x01D8BCE0 LDP D11, D10, [X31 + 0x10]
	0x01D8BCE4 MOV X2, X31
	0x01D8BCE8 LDP D13, D12, [X31], #0x80
	0x01D8BCEC B 0x1EA1E24
	0x01D8BCF0 BL 0x1C16F20
	0x01D8BCF4 STP D13, D12, [X31 - 0x70]!
	0x01D8BCF8 STP D11, D10, [X31 + 0x10]
	0x01D8BCFC STP D9, D8, [X31 + 0x20]
	0x01D8BD00 STP X30, X25, [X31 + 0x30]
	0x01D8BD04 STP X24, X23, [X31 + 0x40]
	0x01D8BD08 STP X22, X21, [X31 + 0x50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x264E000
	005 Move W8, [X20+2502]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x236C000
	012 Move X0, [X0+2768]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2502], W8
	016 Compare X19, 0
	017 JumpIfEqual {39}
	018 Move X9, 0x236C000
	019 Move X9, [X9+2768]
	020 Move W8, 1
	021 Move [X19+88], W8
	022 Move X8, [X19]
	023 Move X1, [X9]
	024 Move W10, [X8+304]
	025 Move W9, [X1+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, [X8+200]
	028 Add X8, X8, X9
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Call Boombox.RPC_ToggleOnOff, X0
	036 Return 
	037 Move X0, X19
	038 Call 0x1C181E0
	039 Call 0x1C17F20

