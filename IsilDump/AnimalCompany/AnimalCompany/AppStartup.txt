Type: AnimalCompany.AppStartup

Method: System.Void Awake()

Disassembly:
	0x01C8EC58 MOV X2, X31
	0x01C8EC5C LDR X8, [X8]
	0x01C8EC60 MOV X0, X8
	0x01C8EC64 BL 0x3087E18
	0x01C8EC68 B 0x1C8EC78
	0x01C8EC6C ADRP X8, 0x22BF000
	0x01C8EC70 LDR X8, [X8 + 0x960]
	0x01C8EC74 LDR X0, [X8]
	0x01C8EC78 MOVZ W1, 0x1
	0x01C8EC7C MOV X2, X31
	0x01C8EC80 BL 0x1CB083C
	0x01C8EC84 ADRP X23, 0x22BF000
	0x01C8EC88 LDR X23, [X23 + 0x8E8]
	0x01C8EC8C LDR X0, [X23]
	0x01C8EC90 LDR W8, [X0 + 0xE0]
	0x01C8EC94 CBNZ W8, 0x1C8ECA0
	0x01C8EC98 BL 0x1B6E8F8
	0x01C8EC9C LDR X0, [X23]
	0x01C8ECA0 LDR X8, [X0 + 0xB8]
	0x01C8ECA4 LDR X21, [X8 + 0x10]
	0x01C8ECA8 ADRP X8, 0x22BF000
	0x01C8ECAC LDR X8, [X8 + 0x988]
	0x01C8ECB0 LDR X20, [X8]
	0x01C8ECB4 CBNZ X21, 0x1C8ED08
	0x01C8ECB8 LDR W8, [X0 + 0xE0]
	0x01C8ECBC CBNZ W8, 0x1C8ECC8
	0x01C8ECC0 BL 0x1B6E8F8
	0x01C8ECC4 LDR X0, [X23]
	0x01C8ECC8 ADRP X9, 0x22BF000
	0x01C8ECCC LDR X8, [X0 + 0xB8]
	0x01C8ECD0 LDR X9, [X9 + 0x940]
	0x01C8ECD4 LDR X22, [X8]
	0x01C8ECD8 LDR X0, [X9]
	0x01C8ECDC BL 0x1B6EA0C
	0x01C8ECE0 ADRP X8, 0x22BF000
	0x01C8ECE4 LDR X8, [X8 + 0x948]
	0x01C8ECE8 MOV X1, X22
	0x01C8ECEC MOV X3, X31
	0x01C8ECF0 MOV X21, X0
	0x01C8ECF4 LDR X2, [X8]
	0x01C8ECF8 BL 0x24F04B8
	0x01C8ECFC LDR X8, [X23]
	0x01C8ED00 LDR X8, [X8 + 0xB8]
	0x01C8ED04 STR X21, [X8 + 0x10]
	0x01C8ED08 ADRP X8, 0x22BF000
	0x01C8ED0C LDR X8, [X8 + 0x928]
	0x01C8ED10 MOV X0, X20
	0x01C8ED14 MOV X1, X21
	0x01C8ED18 MOV W2, W31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x2596000
	008 Move X23, 0x22C0000
	009 Move X20, 0x22C0000
	010 Move X21, 0x22C0000
	011 Move W8, [X22+925]
	012 Move X23, [X23+2024]
	013 Move X20, [X20+2032]
	014 Move X21, [X21+1256]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x22C0000
	021 Move X0, [X0+2032]
	022 Call 0x1B6F7F0
	023 Move X0, 0x22C0000
	024 Move X0, [X0+1256]
	025 Call 0x1B6F7F0
	026 Move X0, 0x22C0000
	027 Move X0, [X0+2024]
	028 Call 0x1B6F7F0
	029 Move W8, 1
	030 Move [X22+925], W8
	031 Move X0, [X23]
	032 Call 0x1B6FA0C
	033 Move X2, [X20]
	034 Move X1, X19
	035 Move X3, X31
	036 Move X20, X0
	037 Call CoroutineGenerator..ctor, X0, X1, X2
	038 Move X0, X20
	039 Move W1, W31
	040 Move X2, X31
	041 Call Commands.Coroutine, X0, X1
	042 Move X8, [X21]
	043 Move X20, X0
	044 Move W9, [X8+224]
	045 Compare W9, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X8
	048 Call 0x1B6F8F8
	049 Move X0, X20
	050 Move W1, W31
	051 Call App.ExecuteCommand, X0, X1
	052 Move [X19+64], X0
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X30, [X31+48]
	058 Move X23, [X31+56]
	059 Return 

Method: System.Collections.Generic.IEnumerator`1<SpatialSys.CommandLib.Command> InitializeAppCommand()

Disassembly:
	0x01C8ED1C LDR X4, [X8]
	0x01C8ED20 MOV X3, X31
	0x01C8ED24 BL 0x208FAE4
	0x01C8ED28 STR X0, [X19 + 0x30]
	0x01C8ED2C CBZ X0, 0x1C8EEA4
	0x01C8ED30 STRB W31, [X0 + 0x14]
	0x01C8ED34 STR X0, [X19 + 0x18]
	0x01C8ED38 MOVZ W0, 0x1
	0x01C8ED3C STR W0, [X19 + 0x10]
	0x01C8ED40 B 0x1C8EE90
	0x01C8ED44 LDR X0, [X19 + 0x30]
	0x01C8ED48 LDR X21, [X19 + 0x20]
	0x01C8ED4C MOVN W8, 0x0
	0x01C8ED50 STR W8, [X19 + 0x10]
	0x01C8ED54 CBZ X0, 0x1C8EEA4
	0x01C8ED58 MOV X1, X31
	0x01C8ED5C BL 0x3423F28
	0x01C8ED60 LDR X8, [X19 + 0x30]
	0x01C8ED64 CBZ X8, 0x1C8EEA4
	0x01C8ED68 TBZ X0, 0x0, 0x1C8EE20
	0x01C8ED6C LDR X8, [X8 + 0x18]
	0x01C8ED70 CBZ X8, 0x1C8EEA4
	0x01C8ED74 ADRP X9, 0x22BF000
	0x01C8ED78 LDR X9, [X9 + 0x628]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2596000
	006 Move X21, 0x22C0000
	007 Move W8, [X20+926]
	008 Move X21, [X21+2040]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22C0000
	015 Move X0, [X0+2040]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X20+926], W8
	019 Move X0, [X21]
	020 Call 0x1B6FA0C
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move [X20+16], W31
	025 Move [X20+32], X19
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Void GetAppStartupConfig(out System.String clientVersion, out System.String commitSHA, out System.String apiOrigin, out System.String apiToken, out AnimalCompany.LogLevel logLevel, out AnimalCompany.LogLevel remoteLogLevel)

Disassembly:
	0x01C8EDA4 LDR X10, [X10 + 0x950]
	0x01C8EDA8 MOVZ W0, 0x1000
	0x01C8EDAC LDR X1, [X8]
	0x01C8EDB0 LDR X4, [X9]
	0x01C8EDB4 LDR X5, [X10]
	0x01C8EDB8 MOVZ W6, 0x148
	0x01C8EDBC MOV X2, X20
	0x01C8EDC0 MOV X3, X31
	0x01C8EDC4 MOV X7, X31
	0x01C8EDC8 BL 0x342B884
	0x01C8EDCC LDR V0, [X19 + 0x2C]
	0x01C8EDD0 LDR W8, [X19 + 0x28]
	0x01C8EDD4 FMOV S1, 20
	0x01C8EDD8 FMOV S2, 4
	0x01C8EDDC FADD S0, S0, S0
	0x01C8EDE0 FMIN S1, S0, S1
	0x01C8EDE4 FCMP S0, S2
	0x01C8EDE8 ADD W8, W8, 0x1
	0x01C8EDEC FCSEL S0, S1, S2, PL
	0x01C8EDF0 MOV W0, W31
	0x01C8EDF4 MOV X1, X31
	0x01C8EDF8 STR S0, [X19 + 0x2C]
	0x01C8EDFC STR W8, [X19 + 0x28]
	0x01C8EE00 BL 0x3424CAC
	0x01C8EE04 MOVZ W8, 0x2
	0x01C8EE08 STR X0, [X19 + 0x18]
	0x01C8EE0C STR W8, [X19 + 0x10]
	0x01C8EE10 MOVZ W0, 0x1
	0x01C8EE14 B 0x1C8EE90
	0x01C8EE18 MOV W0, W31
	0x01C8EE1C B 0x1C8EE90
	0x01C8EE20 LDR W9, [X8 + 0x58]
	0x01C8EE24 LDP X19, X20, [X8 + 0x60]
	0x01C8EE28 CMP W9, 0x1
	0x01C8EE2C B.NE 0x1C8EE5C
	0x01C8EE30 ADRP X8, 0x22BF000
	0x01C8EE34 LDR X8, [X8 + 0x958]
	0x01C8EE38 MOV W1, W31
	0x01C8EE3C MOV X2, X31
	0x01C8EE40 LDR X0, [X8]
	0x01C8EE44 BL 0x1CB083C
	0x01C8EE48 CBZ X21, 0x1C8EEA4
	0x01C8EE4C LDR X0, [X21 + 0x40]
	0x01C8EE50 CBZ X0, 0x1C8EEA4
	0x01C8EE54 MOV X1, X31
	0x01C8EE58 BL 0x342364C
	0x01C8EE5C ADRP X8, 0x22BF000
	0x01C8EE60 ADRP X9, 0x22BF000
	0x01C8EE64 LDR X8, [X8 + 0x968]
	0x01C8EE68 LDR X9, [X9 + 0x930]
	0x01C8EE6C LDR X0, [X8]
	0x01C8EE70 LDR X1, [X9]
	0x01C8EE74 BL 0x21293B0
	0x01C8EE78 CBZ X0, 0x1C8EEA4
	0x01C8EE7C LDR X8, [X0 + 0x20]
	0x01C8EE80 CBZ X8, 0x1C8EEA4
	0x01C8EE84 MOV W0, W31
	0x01C8EE88 STR X19, [X8 + 0x18]
	0x01C8EE8C STR X20, [X8 + 0x28]
	0x01C8EE90 LDP X20, X19, [X31 + 0x30]
	0x01C8EE94 LDP X22, X21, [X31 + 0x20]
	0x01C8EE98 LDP X30, X23, [X31 + 0x10]
	0x01C8EE9C ADD X31, X31, 0x40
	0x01C8EEA0 RET
	0x01C8EEA4 BL 0x1B6EA1C
	0x01C8EEA8 LDR X0, [X0 + 0x18]
	0x01C8EEAC RET
	0x01C8EEB0 STP X30, X19, [X31 - 0x10]!
	0x01C8EEB4 ADRP X0, 0x22BF000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x2596000
	012 Move X26, 0x22C0000
	013 Move W8, [X27+927]
	014 Move X26, [X26+2048]
	015 Move X24, X6
	016 Move X23, X5
	017 Move X19, X4
	018 Move X20, X3
	019 Move X21, X2
	020 Move X22, X1
	021 Move X25, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {37}
	026 Move X0, 0x22C0000
	027 Move X0, [X0+2048]
	028 Call 0x1B6F7F0
	029 Move X0, 0x22C0000
	030 Move X0, [X0+2056]
	031 Call 0x1B6F7F0
	032 Move X0, 0x22C0000
	033 Move X0, [X0+2064]
	034 Call 0x1B6F7F0
	035 Move W8, 1
	036 Move [X27+927], W8
	037 Move W8, [X25+32]
	038 Move [X23], W8
	039 Move W8, [X25+40]
	040 Move [X24], W8
	041 Move [X23], W31
	042 Move X0, [X26]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1B6F8F8
	047 Move X0, X31
	048 Call Application.get_version
	049 Compare X0, 0
	050 JumpIfEqual {84}
	051 Move W1, 95
	052 Move W2, W31
	053 Move X3, X31
	054 Call String.Split, X0, X1, X2
	055 Compare X0, 0
	056 JumpIfEqual {84}
	057 Move W8, [X0+24]
	058 Compare W8, 0
	059 JumpIfEqual {85}
	060 Move X9, [X0+32]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move [X22], X9
	063 Move X8, [X0+40]
	064 Move X9, 0x22C0000
	065 Move X9, [X9+2056]
	066 Move [X21], X8
	067 Move X8, [X9]
	068 Move X9, 0x22C0000
	069 Move X9, [X9+2064]
	070 Move X22, [X31+48]
	071 Move X21, [X31+56]
	072 Move [X20], X8
	073 Move X24, [X31+32]
	074 Move X23, [X31+40]
	075 Move X8, [X9]
	076 Move X26, [X31+16]
	077 Move X25, [X31+24]
	078 Move [X19], X8
	079 Move X20, [X31+64]
	080 Move X19, [X31+72]
	081 Move X30, [X31+80]
	082 Move X27, [X31+88]
	083 Return 
	084 Call 0x1B6FA1C
	085 Call 0x1B6FA24

Method: System.Int32 GetAppSignatureHash(System.String commitSHA)

Disassembly:
	0x01C8EEB8 LDR X0, [X0 + 0x990]
	0x01C8EEBC BL 0x1B6E804
	0x01C8EEC0 BL 0x1B6EA0C
	0x01C8EEC4 MOV X1, X31
	0x01C8EEC8 MOV X19, X0
	0x01C8EECC BL 0x31E99B4
	0x01C8EED0 ADRP X0, 0x22BF000
	0x01C8EED4 LDR X0, [X0 + 0x998]
	0x01C8EED8 BL 0x1B6E804
	0x01C8EEDC MOV X1, X0
	0x01C8EEE0 MOV X0, X19
	0x01C8EEE4 BL 0x1B6E8E8
	0x01C8EEE8 LDR X0, [X0 + 0x18]
	0x01C8EEEC RET
	0x01C8EEF0 RET
	0x01C8EEF4 SUB X31, X31, 0x60
	0x01C8EEF8 STR X30, [X31 + 0x30]
	0x01C8EEFC STP X22, X21, [X31 + 0x40]
	0x01C8EF00 STP X20, X19, [X31 + 0x50]
	0x01C8EF04 ADRP X20, 0x2595000
	0x01C8EF08 LDRB W8, [X20 + 0x3AB]
	0x01C8EF0C MOV X19, X0
	0x01C8EF10 TBNZ X8, 0x0, 0x1C8F03C
	0x01C8EF14 ADRP X0, 0x22BF000
	0x01C8EF18 LDR X0, [X0 + 0x9A0]
	0x01C8EF1C BL 0x1B6E7F0
	0x01C8EF20 ADRP X0, 0x22BF000
	0x01C8EF24 LDR X0, [X0 + 0x4F8]
	0x01C8EF28 BL 0x1B6E7F0
	0x01C8EF2C ADRP X0, 0x22BF000
	0x01C8EF30 LDR X0, [X0 + 0x4E8]
	0x01C8EF34 BL 0x1B6E7F0
	0x01C8EF38 ADRP X0, 0x22BF000
	0x01C8EF3C LDR X0, [X0 + 0x9A8]
	0x01C8EF40 BL 0x1B6E7F0
	0x01C8EF44 ADRP X0, 0x22BF000
	0x01C8EF48 LDR X0, [X0 + 0x9B0]
	0x01C8EF4C BL 0x1B6E7F0
	0x01C8EF50 ADRP X0, 0x22BF000
	0x01C8EF54 LDR X0, [X0 + 0x9B8]
	0x01C8EF58 BL 0x1B6E7F0
	0x01C8EF5C ADRP X0, 0x22BF000
	0x01C8EF60 LDR X0, [X0 + 0x9C0]
	0x01C8EF64 BL 0x1B6E7F0
	0x01C8EF68 ADRP X0, 0x22BF000
	0x01C8EF6C LDR X0, [X0 + 0x5B0]
	0x01C8EF70 BL 0x1B6E7F0
	0x01C8EF74 ADRP X0, 0x22BF000
	0x01C8EF78 LDR X0, [X0 + 0x5B8]
	0x01C8EF7C BL 0x1B6E7F0
	0x01C8EF80 ADRP X0, 0x22BF000
	0x01C8EF84 LDR X0, [X0 + 0x5C0]
	0x01C8EF88 BL 0x1B6E7F0
	0x01C8EF8C ADRP X0, 0x22BF000
	0x01C8EF90 LDR X0, [X0 + 0x9C8]
	0x01C8EF94 BL 0x1B6E7F0
	0x01C8EF98 ADRP X0, 0x22BF000
	0x01C8EF9C LDR X0, [X0 + 0x910]
	0x01C8EFA0 BL 0x1B6E7F0
	0x01C8EFA4 ADRP X0, 0x22BF000
	0x01C8EFA8 LDR X0, [X0 + 0x9D0]
	0x01C8EFAC BL 0x1B6E7F0
	0x01C8EFB0 ADRP X0, 0x22BF000
	0x01C8EFB4 LDR X0, [X0 + 0x9D8]
	0x01C8EFB8 BL 0x1B6E7F0
	0x01C8EFBC ADRP X0, 0x22BF000
	0x01C8EFC0 LDR X0, [X0 + 0x9E0]
	0x01C8EFC4 BL 0x1B6E7F0
	0x01C8EFC8 ADRP X0, 0x22BF000
	0x01C8EFCC LDR X0, [X0 + 0x9E8]
	0x01C8EFD0 BL 0x1B6E7F0
	0x01C8EFD4 ADRP X0, 0x22BF000
	0x01C8EFD8 LDR X0, [X0 + 0x9F0]
	0x01C8EFDC BL 0x1B6E7F0
	0x01C8EFE0 ADRP X0, 0x22BF000
	0x01C8EFE4 LDR X0, [X0 + 0x8E8]
	0x01C8EFE8 BL 0x1B6E7F0
	0x01C8EFEC ADRP X0, 0x22BF000
	0x01C8EFF0 LDR X0, [X0 + 0x9F8]
	0x01C8EFF4 BL 0x1B6E7F0
	0x01C8EFF8 ADRP X0, 0x22BF000
	0x01C8EFFC LDR X0, [X0 + 0xA00]
	0x01C8F000 BL 0x1B6E7F0
	0x01C8F004 ADRP X0, 0x22BE000
	0x01C8F008 LDR X0, [X0 + 0xA08]
	0x01C8F00C BL 0x1B6E7F0
	0x01C8F010 ADRP X0, 0x22BE000
	0x01C8F014 LDR X0, [X0 + 0xA10]
	0x01C8F018 BL 0x1B6E7F0
	0x01C8F01C ADRP X0, 0x22BE000
	0x01C8F020 LDR X0, [X0 + 0xA18]
	0x01C8F024 BL 0x1B6E7F0
	0x01C8F028 ADRP X0, 0x22BE000
	0x01C8F02C LDR X0, [X0 + 0xA20]
	0x01C8F030 BL 0x1B6E7F0
	0x01C8F034 MOVZ W8, 0x1
	0x01C8F038 STRB W8, [X20 + 0x3AB]
	0x01C8F03C LDR W8, [X19 + 0x10]
	0x01C8F040 CMP W8, 0x2
	0x01C8F044 B.EQ 0x1C8F294
	0x01C8F048 CMP W8, 0x1
	0x01C8F04C B.EQ 0x1C8F08C
	0x01C8F050 CBNZ W8, 0x1C8F2B0
	0x01C8F054 MOVN W8, 0x0
	0x01C8F058 STR W8, [X19 + 0x10]
	0x01C8F05C ADRP X8, 0x22BE000
	0x01C8F060 LDR X8, [X8 + 0x9F0]
	0x01C8F064 LDR X0, [X8]
	0x01C8F068 BL 0x1B6EA0C
	0x01C8F06C MOV X1, X31
	0x01C8F070 MOV X20, X0
	0x01C8F074 BL 0x32276F8
	0x01C8F078 STR X20, [X19 + 0x20]
	0x01C8F07C CBZ X20, 0x1C8F420
	0x01C8F080 STP X31, X31, [X20 + 0x10]
	0x01C8F084 STR X31, [X20 + 0x20]
	0x01C8F088 B 0x1C8F2A0
	0x01C8F08C LDP X22, X9, [X19 + 0x28]
	0x01C8F090 MOVN W8, 0x0
	0x01C8F094 STR W8, [X19 + 0x10]
	0x01C8F098 CBZ X9, 0x1C8F420
	0x01C8F09C LDR X8, [X19 + 0x20]
	0x01C8F0A0 LDR X10, [X9 + 0x68]
	0x01C8F0A4 LDUR V0, [X9 + 0x58]
	0x01C8F0A8 STR X10, [X31 + 0x20]
	0x01C8F0AC STR V0, [X31 + 0x1]
	0x01C8F0B0 CBZ X8, 0x1C8F420
	0x01C8F0B4 LDR X9, [X31 + 0x20]
	0x01C8F0B8 LDR V0, [X31 + 0x1]
	0x01C8F0BC STR X9, [X8 + 0x20]
	0x01C8F0C0 STR V0, [X8 + 0x1]
	0x01C8F0C4 ADRP X8, 0x22BE000
	0x01C8F0C8 LDR X8, [X8 + 0x5C0]
	0x01C8F0CC LDR X0, [X8]
	0x01C8F0D0 BL 0x1B6EA0C
	0x01C8F0D4 ADRP X8, 0x22BE000
	0x01C8F0D8 LDR X8, [X8 + 0x5B8]
	0x01C8F0DC MOV X20, X0
	0x01C8F0E0 LDR X1, [X8]
	0x01C8F0E4 BL 0x28F9A14
	0x01C8F0E8 LDR X8, [X19 + 0x20]
	0x01C8F0EC CBZ X8, 0x1C8F420
	0x01C8F0F0 ADRP X9, 0x22BE000
	0x01C8F0F4 LDR X8, [X8 + 0x10]
	0x01C8F0F8 LDR X9, [X9 + 0x9B0]
	0x01C8F0FC ADD X1, X31, 0x3C
	0x01C8F100 CMP X8, 0x0
	0x01C8F104 LDR X0, [X9]
	0x01C8F108 CSET W8, NE
	0x01C8F10C STRB W8, [X31 + 0x3C]
	0x01C8F110 BL 0x1B6E900
	0x01C8F114 CBZ X20, 0x1C8F420
	0x01C8F118 ADRP X8, 0x22BE000
	0x01C8F11C ADRP X21, 0x22BE000
	0x01C8F120 LDR X8, [X8 + 0xA08]
	0x01C8F124 LDR X21, [X21 + 0x5B0]
	0x01C8F128 MOV X2, X0
	0x01C8F12C MOV X0, X20
	0x01C8F130 LDR X1, [X8]
	0x01C8F134 LDR X3, [X21]
	0x01C8F138 BL 0x28FA2A8
	0x01C8F13C BL 0x1C8F444
	0x01C8F140 ADRP X8, 0x22BE000
	0x01C8F144 LDR X8, [X8 + 0xA20]
	0x01C8F148 LDR X3, [X21]
	0x01C8F14C MOV X2, X0
	0x01C8F150 MOV X0, X20
	0x01C8F154 LDR X1, [X8]
	0x01C8F158 BL 0x28FA2A8
	0x01C8F15C LDR X8, [X19 + 0x20]
	0x01C8F160 CBZ X8, 0x1C8F420
	0x01C8F164 ADRP X9, 0x22BE000
	0x01C8F168 LDR W8, [X8 + 0x20]
	0x01C8F16C LDR X9, [X9 + 0x910]
	0x01C8F170 ADD X1, X31, 0x38
	0x01C8F174 STR W8, [X31 + 0x38]
	0x01C8F178 LDR X0, [X9]
	0x01C8F17C BL 0x1B6E900
	0x01C8F180 ADRP X8, 0x22BE000
	0x01C8F184 LDR X8, [X8 + 0xA00]
	0x01C8F188 LDR X3, [X21]
	0x01C8F18C MOV X2, X0
	0x01C8F190 MOV X0, X20
	0x01C8F194 LDR X1, [X8]
	0x01C8F198 BL 0x28FA2A8
	0x01C8F19C ADRP X8, 0x22BE000
	0x01C8F1A0 LDR X8, [X8 + 0x9A0]
	0x01C8F1A4 LDR X0, [X8]
	0x01C8F1A8 LDR W8, [X0 + 0xE0]
	0x01C8F1AC CBNZ W8, 0x1C8F1B4
	0x01C8F1B0 BL 0x1B6E8F8
	0x01C8F1B4 ADRP X8, 0x22BE000
	0x01C8F1B8 LDR X8, [X8 + 0x9F8]
	0x01C8F1BC MOV X1, X20
	0x01C8F1C0 MOV X2, X31
	0x01C8F1C4 LDR X0, [X8]
	0x01C8F1C8 BL 0x1CC4B70
	0x01C8F1CC LDR X20, [X19 + 0x20]
	0x01C8F1D0 CBZ X20, 0x1C8F420
	0x01C8F1D4 LDR X21, [X20 + 0x10]
	0x01C8F1D8 CBZ X21, 0x1C8F388
	0x01C8F1DC ADRP X8, 0x22BE000
	0x01C8F1E0 LDR X8, [X8 + 0x4F8]
	0x01C8F1E4 LDR X0, [X8]
	0x01C8F1E8 LDR W8, [X0 + 0xE0]
	0x01C8F1EC CBNZ W8, 0x1C8F1F4
	0x01C8F1F0 BL 0x1B6E8F8
	0x01C8F1F4 MOV X0, X21
	0x01C8F1F8 MOV X1, X31
	0x01C8F1FC BL 0x1D0AF74
	0x01C8F200 ADRP X8, 0x22BE000
	0x01C8F204 LDR X8, [X8 + 0x9A8]
	0x01C8F208 MOVZ W1, 0x1
	0x01C8F20C LDR X0, [X8]
	0x01C8F210 BL 0x1B6E868
	0x01C8F214 LDR X8, [X19 + 0x20]
	0x01C8F218 CBZ X8, 0x1C8F420
	0x01C8F21C LDR V0, [X8 + 0x1]
	0x01C8F220 ADRP X8, 0x22BE000
	0x01C8F224 MOV X19, X0
	0x01C8F228 STR V0, [X31]
	0x01C8F22C LDR X8, [X8 + 0x9C8]
	0x01C8F230 LDR X0, [X8]
	0x01C8F234 BL 0x1B6EA0C
	0x01C8F238 MOV X1, X31
	0x01C8F23C MOV X20, X0
	0x01C8F240 BL 0x32276F8
	0x01C8F244 LDR V0, [X31]
	0x01C8F248 STUR V0, [X20 + 0x18]
	0x01C8F24C CBZ X19, 0x1C8F420
	0x01C8F250 LDR X8, [X19]
	0x01C8F254 MOV X0, X20
	0x01C8F258 LDR X1, [X8 + 0x40]
	0x01C8F25C BL 0x1B6E8FC
	0x01C8F260 CBZ X0, 0x1C8F424
	0x01C8F264 LDR W8, [X19 + 0x18]
	0x01C8F268 CBZ W8, 0x1C8F430
	0x01C8F26C STR X20, [X19 + 0x20]
	0x01C8F270 ADRP X8, 0x22BE000
	0x01C8F274 LDR X8, [X8 + 0x4E8]
	0x01C8F278 LDR X0, [X8]
	0x01C8F27C LDR W8, [X0 + 0xE0]
	0x01C8F280 CBNZ W8, 0x1C8F288
	0x01C8F284 BL 0x1B6E8F8
	0x01C8F288 MOV X0, X19
	0x01C8F28C BL 0x1C8A19C
	0x01C8F290 B 0x1C8F2B0
	0x01C8F294 MOVN W8, 0x0
	0x01C8F298 STR W8, [X19 + 0x10]
	0x01C8F29C STR X31, [X19 + 0x30]
	0x01C8F2A0 LDR X8, [X19 + 0x20]
	0x01C8F2A4 CBZ X8, 0x1C8F420
	0x01C8F2A8 LDR X8, [X8 + 0x10]
	0x01C8F2AC CBZ X8, 0x1C8F2C8
	0x01C8F2B0 MOV W0, W31
	0x01C8F2B4 LDP X20, X19, [X31 + 0x50]
	0x01C8F2B8 LDP X22, X21, [X31 + 0x40]
	0x01C8F2BC LDR X30, [X31 + 0x30]
	0x01C8F2C0 ADD X31, X31, 0x60
	0x01C8F2C4 RET
	0x01C8F2C8 ADRP X8, 0x22BE000
	0x01C8F2CC LDR X8, [X8 + 0xA18]
	0x01C8F2D0 MOVZ W1, 0x1
	0x01C8F2D4 MOV X2, X31
	0x01C8F2D8 LDR X0, [X8]
	0x01C8F2DC BL 0x1CB083C
	0x01C8F2E0 ADRP X22, 0x22BE000
	0x01C8F2E4 LDR X22, [X22 + 0x8E8]
	0x01C8F2E8 LDR X0, [X22]
	0x01C8F2EC LDR W8, [X0 + 0xE0]
	0x01C8F2F0 CBNZ W8, 0x1C8F2FC
	0x01C8F2F4 BL 0x1B6E8F8
	0x01C8F2F8 LDR X0, [X22]
	0x01C8F2FC LDR X8, [X0 + 0xB8]
	0x01C8F300 LDR X20, [X8 + 0x8]
	0x01C8F304 CBNZ X20, 0x1C8F358
	0x01C8F308 LDR W8, [X0 + 0xE0]
	0x01C8F30C CBNZ W8, 0x1C8F318
	0x01C8F310 BL 0x1B6E8F8
	0x01C8F314 LDR X0, [X22]
	0x01C8F318 ADRP X9, 0x22BE000
	0x01C8F31C LDR X8, [X0 + 0xB8]
	0x01C8F320 LDR X9, [X9 + 0x9D8]
	0x01C8F324 LDR X21, [X8]
	0x01C8F328 LDR X0, [X9]
	0x01C8F32C BL 0x1B6EA0C
	0x01C8F330 ADRP X8, 0x22BE000
	0x01C8F334 LDR X8, [X8 + 0x9E0]
	0x01C8F338 MOV X1, X21
	0x01C8F33C MOV X3, X31
	0x01C8F340 MOV X20, X0
	0x01C8F344 LDR X2, [X8]
	0x01C8F348 BL 0x24F05E8
	0x01C8F34C LDR X8, [X22]
	0x01C8F350 LDR X8, [X8 + 0xB8]
	0x01C8F354 STR X20, [X8 + 0x8]
	0x01C8F358 ADRP X8, 0x22BE000
	0x01C8F35C LDR X8, [X8 + 0x9C0]
	0x01C8F360 MOV X0, X20
	0x01C8F364 MOV W1, W31
	0x01C8F368 MOV X2, X31
	0x01C8F36C LDR X3, [X8]
	0x01C8F370 BL 0x208F868
	0x01C8F374 STR X0, [X19 + 0x30]
	0x01C8F378 STR X0, [X19 + 0x18]
	0x01C8F37C MOVZ W0, 0x1
	0x01C8F380 STR W0, [X19 + 0x10]
	0x01C8F384 B 0x1C8F2B4
	0x01C8F388 LDR W8, [X20 + 0x20]
	0x01C8F38C CMP W8, 0xC
	0x01C8F390 B.NE 0x1C8F3C4
	0x01C8F394 ADRP X8, 0x22BE000
	0x01C8F398 LDR X8, [X8 + 0xA10]
	0x01C8F39C MOV W1, W31
	0x01C8F3A0 MOV X2, X31
	0x01C8F3A4 LDR X0, [X8]
	0x01C8F3A8 BL 0x1CB083C
	0x01C8F3AC CBZ X22, 0x1C8F420
	0x01C8F3B0 LDR X0, [X22 + 0x40]
	0x01C8F3B4 CBZ X0, 0x1C8F420
	0x01C8F3B8 MOV X1, X31
	0x01C8F3BC BL 0x342364C
	0x01C8F3C0 B 0x1C8F2B0
	0x01C8F3C4 LDR X21, [X20 + 0x28]
	0x01C8F3C8 CBNZ X21, 0x1C8F3FC
	0x01C8F3CC ADRP X8, 0x22BE000
	0x01C8F3D0 LDR X8, [X8 + 0x9B8]
	0x01C8F3D4 LDR X0, [X8]
	0x01C8F3D8 BL 0x1B6EA0C
	0x01C8F3DC ADRP X8, 0x22BE000
	0x01C8F3E0 LDR X8, [X8 + 0x9E8]
	0x01C8F3E4 MOV X1, X20
	0x01C8F3E8 MOV X3, X31
	0x01C8F3EC MOV X21, X0
	0x01C8F3F0 LDR X2, [X8]
	0x01C8F3F4 BL 0x3425E3C
	0x01C8F3F8 STR X21, [X20 + 0x28]
	0x01C8F3FC MOV X0, X21
	0x01C8F400 MOV W1, W31
	0x01C8F404 MOV X2, X31
	0x01C8F408 BL 0x34248B0
	0x01C8F40C MOVZ W8, 0x2
	0x01C8F410 STR X0, [X19 + 0x18]
	0x01C8F414 STR W8, [X19 + 0x10]
	0x01C8F418 MOVZ W0, 0x1
	0x01C8F41C B 0x1C8F2B4
	0x01C8F420 BL 0x1B6EA1C
	0x01C8F424 BL 0x1B6EA40
	0x01C8F428 MOV X1, X31
	0x01C8F42C BL 0x1B6E8E8
	0x01C8F430 BL 0x1B6EA24
	0x01C8F434 LDR X8, [X0]
	0x01C8F438 CMP X8, 0x0
	0x01C8F43C CSET W0, NE
	0x01C8F440 RET
	0x01C8F444 SUB X31, X31, 0x30
	0x01C8F448 STP X30, X21, [X31 + 0x10]
	0x01C8F44C STP X20, X19, [X31 + 0x20]
	0x01C8F450 ADRP X20, 0x2594000
	0x01C8F454 ADRP X21, 0x22BE000
	0x01C8F458 ADRP X19, 0x22BE000
	0x01C8F45C LDRB W8, [X20 + 0x3C8]
	0x01C8F460 LDR X21, [X21 + 0xA28]
	0x01C8F464 LDR X19, [X19 + 0xA30]
	0x01C8F468 TBNZ X8, 0x0, 0x1C8F48C
	0x01C8F46C ADRP X0, 0x22BE000
	0x01C8F470 LDR X0, [X0 + 0xA30]
	0x01C8F474 BL 0x1B6E7F0
	0x01C8F478 ADRP X0, 0x22BE000
	0x01C8F47C LDR X0, [X0 + 0xA28]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x2596000
	011 Move X21, 0x22C0000
	012 Move X22, 0x22C0000
	013 Move W8, [X20+928]
	014 Move X21, [X21+2072]
	015 Move X22, [X22+2080]
	016 Move X19, X1
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {86}
	021 Move X0, 0x22C0000
	022 Move X0, [X0+2080]
	023 Call 0x1B6F7F0
	024 Move X0, 0x22C0000
	025 Move X0, [X0+2088]
	026 Call 0x1B6F7F0
	027 Move X0, 0x22C0000
	028 Move X0, [X0+2096]
	029 Call 0x1B6F7F0
	030 Move X0, 0x22C0000
	031 Move X0, [X0+2104]
	032 Call 0x1B6F7F0
	033 Move X0, 0x22C0000
	034 Move X0, [X0+2112]
	035 Call 0x1B6F7F0
	036 Move X0, 0x22C0000
	037 Move X0, [X0+2120]
	038 Call 0x1B6F7F0
	039 Move X0, 0x22C0000
	040 Move X0, [X0+2128]
	041 Call 0x1B6F7F0
	042 Move X0, 0x22C0000
	043 Move X0, [X0+2136]
	044 Call 0x1B6F7F0
	045 Move X0, 0x22C0000
	046 Move X0, [X0+1528]
	047 Call 0x1B6F7F0
	048 Move X0, 0x22C0000
	049 Move X0, [X0+2144]
	050 Call 0x1B6F7F0
	051 Move X0, 0x22C0000
	052 Move X0, [X0+2152]
	053 Call 0x1B6F7F0
	054 Move X0, 0x22C0000
	055 Move X0, [X0+2160]
	056 Call 0x1B6F7F0
	057 Move X0, 0x22C0000
	058 Move X0, [X0+2168]
	059 Call 0x1B6F7F0
	060 Move X0, 0x22C0000
	061 Move X0, [X0+2176]
	062 Call 0x1B6F7F0
	063 Move X0, 0x22C0000
	064 Move X0, [X0+2184]
	065 Call 0x1B6F7F0
	066 Move X0, 0x22C0000
	067 Move X0, [X0+2192]
	068 Call 0x1B6F7F0
	069 Move X0, 0x22C0000
	070 Move X0, [X0+2072]
	071 Call 0x1B6F7F0
	072 Move X0, 0x22C0000
	073 Move X0, [X0+2200]
	074 Call 0x1B6F7F0
	075 Move X0, 0x22C0000
	076 Move X0, [X0+2208]
	077 Call 0x1B6F7F0
	078 Move X0, 0x22C0000
	079 Move X0, [X0+2216]
	080 Call 0x1B6F7F0
	081 Move X0, 0x22C0000
	082 Move X0, [X0+2224]
	083 Call 0x1B6F7F0
	084 Move W8, 1
	085 Move [X20+928], W8
	086 Move X20, [X21]
	087 Move X0, [X22]
	088 Call 0x1B6FA0C
	089 Move X8, 0x22C0000
	090 Move X8, [X8+2168]
	091 Move X21, X0
	092 Move X1, [X8]
	093 Move X2, X31
	094 Call AndroidJavaClass..ctor, X0, X1
	095 Compare X21, 0
	096 JumpIfEqual {357}
	097 Move X8, 0x22BF000
	098 Move X8, [X8+2224]
	099 Move X9, 0x22BF000
	100 Move X9, [X9+2112]
	101 Move X1, [X8]
	102 Move X2, [X9]
	103 Move X0, X21
	104 Call AndroidJavaObject.GetStatic, X0, X1
	105 Move X24, 0x22BF000
	106 Move X24, [X24+2136]
	107 Move X21, X0
	108 Move X22, [X24]
	109 Move X8, [X22+56]
	110 Compare X8, 0
	111 JumpIfNotEqual {115}
	112 Move X0, X22
	113 Call 0x1BB51DC
	114 Move X8, [X22+56]
	115 Move X0, [X8+16]
	116 Move W8, [X0+309]
	117 Move TEMP, X8
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfEqual {122}
	121 Call 0x1BB5180
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfNotEqual {126}
	125 Call 0x1B6F8F8
	126 Move X8, [X22+56]
	127 Move X0, [X8+16]
	128 Move W8, [X0+309]
	129 Move TEMP, X8
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfEqual {134}
	133 Call 0x1BB5180
	134 Compare X21, 0
	135 JumpIfEqual {358}
	136 Move X9, 0x22BF000
	137 Move X8, [X0+184]
	138 Move X9, [X9+2152]
	139 Move X25, 0x22BF000
	140 Move X25, [X25+2096]
	141 Move X2, [X8]
	142 Move X1, [X9]
	143 Move X3, [X25]
	144 Move X0, X21
	145 Call AndroidJavaObject.Call, X0, X1, X2
	146 Move X22, [X24]
	147 Move X21, X0
	148 Move X8, [X22+56]
	149 Compare X8, 0
	150 JumpIfNotEqual {154}
	151 Move X0, X22
	152 Call 0x1BB51DC
	153 Move X8, [X22+56]
	154 Move X0, [X8+16]
	155 Move W8, [X0+309]
	156 Move TEMP, X8
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfEqual {161}
	160 Call 0x1BB5180
	161 Move W8, [X0+224]
	162 Compare W8, 0
	163 JumpIfNotEqual {165}
	164 Call 0x1B6F8F8
	165 Move X8, [X22+56]
	166 Move X0, [X8+16]
	167 Move W8, [X0+309]
	168 Move TEMP, X8
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfEqual {173}
	172 Call 0x1BB5180
	173 Compare X21, 0
	174 JumpIfEqual {359}
	175 Move X9, 0x22BF000
	176 Move X8, [X0+184]
	177 Move X9, [X9+2200]
	178 Move X3, [X25]
	179 Move X2, [X8]
	180 Move X1, [X9]
	181 Move X0, X21
	182 Call AndroidJavaObject.Call, X0, X1, X2
	183 Move X21, X0
	184 Compare X0, 0
	185 JumpIfEqual {360}
	186 Move X8, 0x22BF000
	187 Move X8, [X8+2192]
	188 Move X9, 0x22BF000
	189 Move X9, [X9+2120]
	190 Move X1, [X8]
	191 Move X2, [X9]
	192 Move X0, X21
	193 Call 0x2171E8C, X0, X1
	194 Move X8, 0x22BF000
	195 Move X8, [X8+2144]
	196 Move W23, W0
	197 Move X0, [X8]
	198 Move W1, 2
	199 Call 0x1B6F868
	200 Move X22, X0
	201 Compare X0, 0
	202 JumpIfEqual {361}
	203 Move X26, 0x22BF000
	204 Move X26, [X26+2184]
	205 Move X0, [X26]
	206 Compare X0, 0
	207 JumpIfEqual {213}
	208 Move X8, [X22]
	209 Move X1, [X8+64]
	210 Call 0x1B6F8FC
	211 Compare X0, 0
	212 JumpIfEqual {369}
	213 Move W8, [X22+24]
	214 Compare W8, 0
	215 JumpIfEqual {362}
	216 Move X8, [X26]
	217 Move X9, 0x22BF000
	218 Move X9, [X9+1528]
	219 Move [X22+32], X8
	220 Move [X31+12], W23
	221 Move X0, [X9]
	222 Add X1, X31, 12
	223 Call 0x1B6F900
	224 Move X23, X0
	225 Compare X0, 0
	226 JumpIfEqual {233}
	227 Move X8, [X22]
	228 Move X1, [X8+64]
	229 Move X0, X23
	230 Call 0x1B6F8FC
	231 Compare X0, 0
	232 JumpIfEqual {372}
	233 Move W8, [X22+24]
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Move X8, 0x22BF000
	236 Move X8, [X8+2216]
	237 Move [X22+40], X23
	238 Move X3, [X25]
	239 Move X1, [X8]
	240 Move X0, X21
	241 Move X2, X22
	242 Call AndroidJavaObject.Call, X0, X1, X2
	243 Compare X0, 0
	244 JumpIfEqual {364}
	245 Move X8, 0x22BF000
	246 Move X8, [X8+2176]
	247 Move X9, 0x22BF000
	248 Move X9, [X9+2128]
	249 Move X1, [X8]
	250 Move X2, [X9]
	251 Call 0x2171C3C, X0, X1
	252 Move X22, [X24]
	253 Move X21, X0
	254 Move X8, [X22+56]
	255 Compare X8, 0
	256 JumpIfNotEqual {260}
	257 Move X0, X22
	258 Call 0x1BB51DC
	259 Move X8, [X22+56]
	260 Move X0, [X8+16]
	261 Move W8, [X0+309]
	262 Move TEMP, X8
	263 And TEMP, TEMP, 1
	264 Compare TEMP, 1
	265 JumpIfEqual {267}
	266 Call 0x1BB5180
	267 Move W8, [X0+224]
	268 Compare W8, 0
	269 JumpIfNotEqual {271}
	270 Call 0x1B6F8F8
	271 Move X8, [X22+56]
	272 Move X0, [X8+16]
	273 Move W8, [X0+309]
	274 Move TEMP, X8
	275 And TEMP, TEMP, 1
	276 Compare TEMP, 1
	277 JumpIfEqual {279}
	278 Call 0x1BB5180
	279 Compare X21, 0
	280 JumpIfEqual {365}
	281 Move X9, 0x22BF000
	282 Move X8, [X0+184]
	283 Move X9, [X9+2208]
	284 Move X10, 0x22BF000
	285 Move X10, [X10+2088]
	286 Move X2, [X8]
	287 Move X1, [X9]
	288 Move X3, [X10]
	289 Move X0, X21
	290 Call AndroidJavaObject.Call, X0, X1, X2
	291 Compare X0, 0
	292 JumpIfEqual {366}
	293 Move W8, [X0+24]
	294 Compare W8, 0
	295 JumpIfEqual {367}
	296 Move X22, [X24]
	297 Move X21, [X0+32]
	298 Move X8, [X22+56]
	299 Compare X8, 0
	300 JumpIfNotEqual {304}
	301 Move X0, X22
	302 Call 0x1BB51DC
	303 Move X8, [X22+56]
	304 Move X0, [X8+16]
	305 Move W8, [X0+309]
	306 Move TEMP, X8
	307 And TEMP, TEMP, 1
	308 Compare TEMP, 1
	309 JumpIfEqual {311}
	310 Call 0x1BB5180
	311 Move W8, [X0+224]
	312 Compare W8, 0
	313 JumpIfNotEqual {315}
	314 Call 0x1B6F8F8
	315 Move X8, [X22+56]
	316 Move X0, [X8+16]
	317 Move W8, [X0+309]
	318 Move TEMP, X8
	319 And TEMP, TEMP, 1
	320 Compare TEMP, 1
	321 JumpIfEqual {323}
	322 Call 0x1BB5180
	323 Compare X21, 0
	324 JumpIfEqual {368}
	325 Move X9, 0x22BF000
	326 Move X8, [X0+184]
	327 Move X9, [X9+2160]
	328 Move X10, 0x22BF000
	329 Move X10, [X10+2104]
	330 Move X2, [X8]
	331 Move X1, [X9]
	332 Move X3, [X10]
	333 Move X0, X21
	334 Call AndroidJavaObject.Call, X0, X1, X2
	335 Move X20, X0
	336 Move X0, X20
	337 Move X1, X19
	338 Move X2, X31
	339 Call String.Concat, X0, X1
	340 Compare X0, 0
	341 JumpIfEqual {356}
	342 Move X8, [X0]
	343 Move X9, [X8+344]
	344 Move X1, [X8+352]
	345 NotImplemented "Instruction BLR not yet implemented."
	346 Move X20, [X31+64]
	347 Move X19, [X31+72]
	348 Move X22, [X31+48]
	349 Move X21, [X31+56]
	350 Move X24, [X31+32]
	351 Move X23, [X31+40]
	352 Move X26, [X31+16]
	353 Move X25, [X31+24]
	354 Move X30, [X31+80]
	355 Return X0
	356 Call 0x1B6FA1C
	357 Call 0x1B6FA1C
	358 Call 0x1B6FA1C
	359 Call 0x1B6FA1C
	360 Call 0x1B6FA1C
	361 Call 0x1B6FA1C
	362 Call 0x1B6FA24
	363 Call 0x1B6FA24
	364 Call 0x1B6FA1C
	365 Call 0x1B6FA1C
	366 Call 0x1B6FA1C
	367 Call 0x1B6FA24
	368 Call 0x1B6FA1C
	369 Call 0x1B6FA40
	370 Move X1, X31
	371 Call 0x1B6F8E8
	372 Call 0x1B6FA40
	373 Move X1, X31
	374 Call 0x1B6F8E8
	375 Move X21, X0
	376 NotImplemented "Instruction CMP not yet implemented."
	377 Move X0, X21
	378 Call 0x3D1A840
	379 Move X21, X0
	380 Move X0, 0x22BF000
	381 Move X0, [X0+1648]
	382 Call 0x1B6F804
	383 Move X8, [X21]
	384 Move X1, [X8]
	385 Call 0x1B6FD6C
	386 Move TEMP, X0
	387 And TEMP, TEMP, 1
	388 Compare TEMP, 1
	389 JumpIfNotEqual {402}
	390 Move X21, [X21]
	391 Call 0x3D1A850
	392 Move X0, 0x22BF000
	393 Move X0, [X0+2232]
	394 Call 0x1B6F804
	395 Move W8, [X0+224]
	396 Compare W8, 0
	397 JumpIfNotEqual {399}
	398 Call 0x1B6F8F8
	399 Move X0, X21
	400 Move X1, X31
	401 Call Debug.LogError, X0
	402 Move W0, 8
	403 Call 0x3D1A860
	404 Move X8, [X21]
	405 Move [X0], X8
	406 Move X1, 0x208E000
	407 Add X1, X1, 3032
	408 Move X2, X31
	409 Call 0x3D1A870
	410 Move X21, X0
	411 Call 0x3D1A850
	412 Move X0, X21
	413 Call 0x1C8518C
	414 Call 0x18F56A8

Method: System.Collections.Generic.IEnumerator`1<SpatialSys.CommandLib.Command> RequestMicrophonePermissionCommand()

Disassembly:
	0x01C8F480 BL 0x1B6E7F0
	0x01C8F484 MOVZ W8, 0x1
	0x01C8F488 STRB W8, [X20 + 0x3C8]
	0x01C8F48C MOV X0, X31
	0x01C8F490 STP X31, X31, [X31]
	0x01C8F494 BL 0x3AA3A44
	0x01C8F498 LDR X8, [X21]
	0x01C8F49C MOV X1, X0
	0x01C8F4A0 MOV X2, X31
	0x01C8F4A4 MOV X0, X8
	0x01C8F4A8 BL 0x3A985E4
	0x01C8F4AC LDR X1, [X19]
	0x01C8F4B0 MOV X2, X31
	0x01C8F4B4 MOV X19, X0
	0x01C8F4B8 BL 0x3084850
	0x01C8F4BC MOV X20, X19
	0x01C8F4C0 TBZ X0, 0x0, 0x1C8F4E0
	0x01C8F4C4 MOV X0, X31
	0x01C8F4C8 BL 0x31DFE80
	0x01C8F4CC STP X0, X1, [X31]
	0x01C8F4D0 ADD X0, X31, 0x0
	0x01C8F4D4 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x2595000
	005 Move X20, 0x22BF000
	006 Move W8, [X19+929]
	007 Move X20, [X20+2240]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22BF000
	013 Move X0, [X0+2240]
	014 Call 0x1B6F7F0
	015 Move W8, 1
	016 Move [X19+929], W8
	017 Move X0, [X20]
	018 Call 0x1B6FA0C
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move [X19+16], W31
	023 Move X0, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return X0

Method: System.Collections.Generic.IEnumerator`1<SpatialSys.CommandLib.Command> InternetConnectivityCheckCommand()

Disassembly:
	0x01C8F500 BL 0x3A98554
	0x01C8F504 MOV X0, X31
	0x01C8F508 BL 0x3A9870C
	0x01C8F50C MOV X0, X20
	0x01C8F510 LDP X20, X19, [X31 + 0x20]
	0x01C8F514 LDP X30, X21, [X31 + 0x10]
	0x01C8F518 ADD X31, X31, 0x30
	0x01C8F51C RET
	0x01C8F520 STP X30, X21, [X31 - 0x20]!
	0x01C8F524 STP X20, X19, [X31 + 0x10]
	0x01C8F528 MOV X20, X1
	0x01C8F52C MOV X1, X31
	0x01C8F530 MOV X19, X2
	0x01C8F534 MOV X21, X0
	0x01C8F538 BL 0x32276F8
	0x01C8F53C STP X20, X19, [X21 + 0x18]
	0x01C8F540 LDP X20, X19, [X31 + 0x10]
	0x01C8F544 LDP X30, X21, [X31], #0x20
	0x01C8F548 RET
	0x01C8F54C LDR X0, [X0 + 0x18]
	0x01C8F550 RET
	0x01C8F554 STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x2595000
	005 Move X20, 0x22BF000
	006 Move W8, [X19+930]
	007 Move X20, [X20+2248]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22BF000
	013 Move X0, [X0+2248]
	014 Call 0x1B6F7F0
	015 Move W8, 1
	016 Move [X19+930], W8
	017 Move X0, [X20]
	018 Call 0x1B6FA0C
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move [X19+16], W31
	023 Move X0, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return X0

Method: System.Collections.Generic.IEnumerator`1<SpatialSys.CommandLib.Command> InitialLogInCommand()

Disassembly:
	0x01C8F580 MOV X1, X0
	0x01C8F584 MOV X0, X19
	0x01C8F588 BL 0x1B6E8E8
	0x01C8F58C LDR X0, [X0 + 0x18]
	0x01C8F590 RET
	0x01C8F594 RET
	0x01C8F598 SUB X31, X31, 0x90
	0x01C8F59C STP X29, X30, [X31 + 0x30]
	0x01C8F5A0 STP X28, X27, [X31 + 0x40]
	0x01C8F5A4 STP X26, X25, [X31 + 0x50]
	0x01C8F5A8 STP X24, X23, [X31 + 0x60]
	0x01C8F5AC STP X22, X21, [X31 + 0x70]
	0x01C8F5B0 STP X20, X19, [X31 + 0x80]
	0x01C8F5B4 ADRP X20, 0x2594000
	0x01C8F5B8 LDRB W8, [X20 + 0x3AC]
	0x01C8F5BC MOV X19, X0
	0x01C8F5C0 TBNZ X8, 0x0, 0x1C8F764
	0x01C8F5C4 ADRP X0, 0x22BE000
	0x01C8F5C8 LDR X0, [X0 + 0x9A0]
	0x01C8F5CC BL 0x1B6E7F0
	0x01C8F5D0 ADRP X0, 0x22BE000
	0x01C8F5D4 LDR X0, [X0 + 0xA40]
	0x01C8F5D8 BL 0x1B6E7F0
	0x01C8F5DC ADRP X0, 0x22BE000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2595000
	006 Move X21, 0x22BF000
	007 Move W8, [X20+931]
	008 Move X21, [X21+2256]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22BF000
	015 Move X0, [X0+2256]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X20+931], W8
	019 Move X0, [X21]
	020 Call 0x1B6FA0C
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move [X20+16], W31
	025 Move [X20+40], X19
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Collections.Generic.IEnumerator`1<SpatialSys.CommandLib.Command> BootstrapCommand()

Disassembly:
	0x01C8F608 BL 0x1B6E7F0
	0x01C8F60C ADRP X0, 0x22BE000
	0x01C8F610 LDR X0, [X0 + 0xA68]
	0x01C8F614 BL 0x1B6E7F0
	0x01C8F618 ADRP X0, 0x22BE000
	0x01C8F61C LDR X0, [X0 + 0x4E8]
	0x01C8F620 BL 0x1B6E7F0
	0x01C8F624 ADRP X0, 0x22BE000
	0x01C8F628 LDR X0, [X0 + 0x800]
	0x01C8F62C BL 0x1B6E7F0
	0x01C8F630 ADRP X0, 0x22BE000
	0x01C8F634 LDR X0, [X0 + 0xA70]
	0x01C8F638 BL 0x1B6E7F0
	0x01C8F63C ADRP X0, 0x22BE000
	0x01C8F640 LDR X0, [X0 + 0x9A8]
	0x01C8F644 BL 0x1B6E7F0
	0x01C8F648 ADRP X0, 0x22BE000
	0x01C8F64C LDR X0, [X0 + 0x9B8]
	0x01C8F650 BL 0x1B6E7F0
	0x01C8F654 ADRP X0, 0x22BE000
	0x01C8F658 LDR X0, [X0 + 0xA78]
	0x01C8F65C BL 0x1B6E7F0
	0x01C8F660 ADRP X0, 0x22BE000
	0x01C8F664 LDR X0, [X0 + 0x7E8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2595000
	006 Move X21, 0x22BF000
	007 Move W8, [X20+932]
	008 Move X21, [X21+2264]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22BF000
	015 Move X0, [X0+2264]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X20+932], W8
	019 Move X0, [X21]
	020 Call 0x1B6FA0C
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move [X20+16], W31
	025 Move [X20+32], X19
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: UnityEngine.GameObject CreateSystemGameObject(System.String name)

Disassembly:
	0x01C8F690 ADRP X0, 0x22BE000
	0x01C8F694 LDR X0, [X0 + 0xA98]
	0x01C8F698 BL 0x1B6E7F0
	0x01C8F69C ADRP X0, 0x22BE000
	0x01C8F6A0 LDR X0, [X0 + 0xAA0]
	0x01C8F6A4 BL 0x1B6E7F0
	0x01C8F6A8 ADRP X0, 0x22BE000
	0x01C8F6AC LDR X0, [X0 + 0xAA8]
	0x01C8F6B0 BL 0x1B6E7F0
	0x01C8F6B4 ADRP X0, 0x22BE000
	0x01C8F6B8 LDR X0, [X0 + 0x5F8]
	0x01C8F6BC BL 0x1B6E7F0
	0x01C8F6C0 ADRP X0, 0x22BE000
	0x01C8F6C4 LDR X0, [X0 + 0x628]
	0x01C8F6C8 BL 0x1B6E7F0
	0x01C8F6CC ADRP X0, 0x22BE000
	0x01C8F6D0 LDR X0, [X0 + 0x930]
	0x01C8F6D4 BL 0x1B6E7F0
	0x01C8F6D8 ADRP X0, 0x22BE000
	0x01C8F6DC LDR X0, [X0 + 0xAB0]
	0x01C8F6E0 BL 0x1B6E7F0
	0x01C8F6E4 ADRP X0, 0x22BE000
	0x01C8F6E8 LDR X0, [X0 + 0xAB8]
	0x01C8F6EC BL 0x1B6E7F0
	0x01C8F6F0 ADRP X0, 0x22BE000
	0x01C8F6F4 LDR X0, [X0 + 0xAC0]
	0x01C8F6F8 BL 0x1B6E7F0
	0x01C8F6FC ADRP X0, 0x22BE000
	0x01C8F700 LDR X0, [X0 + 0xAC8]
	0x01C8F704 BL 0x1B6E7F0
	0x01C8F708 ADRP X0, 0x22BE000
	0x01C8F70C LDR X0, [X0 + 0xAD0]
	0x01C8F710 BL 0x1B6E7F0
	0x01C8F714 ADRP X0, 0x22BE000
	0x01C8F718 LDR X0, [X0 + 0x968]
	0x01C8F71C BL 0x1B6E7F0
	0x01C8F720 ADRP X0, 0x22BE000
	0x01C8F724 LDR X0, [X0 + 0xAD8]
	0x01C8F728 BL 0x1B6E7F0
	0x01C8F72C ADRP X0, 0x22BE000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2595000
	007 Move X22, 0x22BF000
	008 Move W8, [X20+933]
	009 Move X22, [X22+2272]
	010 Move X21, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x22BF000
	017 Move X0, [X0+2272]
	018 Call 0x1B6F7F0
	019 Move W8, 1
	020 Move [X20+933], W8
	021 Move X0, [X22]
	022 Call 0x1B6FA0C
	023 Move X1, X21
	024 Move X2, X31
	025 Move X20, X0
	026 Call GameObject..ctor, X0, X1
	027 Compare X20, 0
	028 JumpIfEqual {49}
	029 Move X0, X20
	030 Move X1, X31
	031 Call GameObject.get_transform, X0
	032 Move X21, X0
	033 Move X0, X19
	034 Move X1, X31
	035 Call Component.get_transform, X0
	036 Compare X21, 0
	037 JumpIfEqual {49}
	038 Move X1, X0
	039 Move X0, X21
	040 Move X2, X31
	041 Call Transform.set_parent, X0, X1
	042 Move X0, X20
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Return X0
	049 Call 0x1B6FA1C

Method: UnityEngine.GameObject CreateSystemGameObject()

Disassembly:
	0x021A6688 LDP X22, X21, [X31 + 0x20]
	0x021A668C LDP X24, X23, [X31 + 0x10]
	0x021A6690 LDP X30, X25, [X31], #0x40
	0x021A6694 B 0x29F799C
	0x021A6698 ADRP X0, 0x1DA9000
	0x021A669C LDR X0, [X0 + 0x718]
	0x021A66A0 BL 0x1B6E804
	0x021A66A4 BL 0x1B6EA0C
	0x021A66A8 MOV X20, X0
	0x021A66AC ADRP X0, 0x1DCD000
	0x021A66B0 LDR X0, [X0 + 0x48]
	0x021A66B4 BL 0x1B6E804
	0x021A66B8 MOV X1, X0
	0x021A66BC MOV X0, X20
	0x021A66C0 MOV X2, X31
	0x021A66C4 BL 0x3173C38
	0x021A66C8 B 0x21A6758
	0x021A66CC ADRP X8, 0x1DAC000
	0x021A66D0 ADRP X9, 0x1DAF000
	0x021A66D4 LDR X8, [X8 + 0x3D8]
	0x021A66D8 LDR X9, [X9 + 0x1B0]
	0x021A66DC CMP W22, 0x0
	0x021A66E0 CSEL X0, X9, X8, LT
	0x021A66E4 BL 0x1B6E804
	0x021A66E8 MOV X20, X0
	0x021A66EC ADRP X0, 0x1DAC000
	0x021A66F0 LDR X0, [X0 + 0x3D0]
	0x021A66F4 BL 0x1B6E804
	0x021A66F8 BL 0x1B6EA0C
	0x021A66FC MOV X21, X0
	0x021A6700 ADRP X0, 0x1DCD000
	0x021A6704 LDR X0, [X0 + 0x78]
	0x021A6708 BL 0x1B6E804
	0x021A670C MOV X2, X0
	0x021A6710 MOV X0, X21
	0x021A6714 MOV X1, X20
	0x021A6718 MOV X3, X31
	0x021A671C BL 0x317B044
	0x021A6720 MOV X0, X21
	0x021A6724 B 0x21A675C
	0x021A6728 ADRP X0, 0x1DAC000
	0x021A672C LDR X0, [X0 + 0x208]
	0x021A6730 BL 0x1B6E804
	0x021A6734 BL 0x1B6EA0C
	0x021A6738 MOV X20, X0
	0x021A673C ADRP X0, 0x1DCD000
	0x021A6740 LDR X0, [X0 + 0x80]
	0x021A6744 BL 0x1B6E804
	0x021A6748 MOV X1, X0
	0x021A674C MOV X0, X20
	0x021A6750 MOV X2, X31
	0x021A6754 BL 0x317E224
	0x021A6758 MOV X0, X20
	0x021A675C MOV X1, X19
	0x021A6760 BL 0x1B6E8E8
	0x021A6764 BL 0x1B6EA1C
	0x021A6768 STR X30, [X31 - 0x50]!
	0x021A676C STP X26, X25, [X31 + 0x10]
	0x021A6770 STP X24, X23, [X31 + 0x20]
	0x021A6774 STP X22, X21, [X31 + 0x30]
	0x021A6778 STP X20, X19, [X31 + 0x40]
	0x021A677C LDR X8, [X6 + 0x38]
	0x021A6780 MOV X19, X6
	0x021A6784 MOV X20, X5
	0x021A6788 MOV X21, X4
	0x021A678C MOV X22, X3

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X1+56]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {23}
	011 Move X0, 0x1DA8000
	012 Move X0, [X0+2272]
	013 Call 0x1B6F7F0
	014 Move X0, 0x1DA8000
	015 Move X0, [X0+1376]
	016 Call 0x1B6F7F0
	017 Move X8, [X19+56]
	018 Compare X8, 0
	019 JumpIfNotEqual {23}
	020 Move X0, X19
	021 Call 0x1BB51DC
	022 Move X8, [X19+56]
	023 Move X9, 0x1DA8000
	024 Move X9, [X9+1376]
	025 Move X21, [X8]
	026 Move X0, [X9]
	027 Move W9, [X0+224]
	028 Compare W9, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1B6F8F8
	031 Move X0, X21
	032 Move X1, X31
	033 Call Type.GetTypeFromHandle, X0
	034 Compare X0, 0
	035 JumpIfEqual {78}
	036 Move X8, [X0]
	037 Move X9, [X8+424]
	038 Move X1, [X8+432]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X8, 0x1DA8000
	041 Move X8, [X8+2272]
	042 Move X22, X0
	043 Move X8, [X8]
	044 Move X0, X8
	045 Call 0x1B6FA0C
	046 Move X1, X22
	047 Move X2, X31
	048 Move X21, X0
	049 Call GameObject..ctor, X0, X1
	050 Compare X21, 0
	051 JumpIfEqual {78}
	052 Move X0, X21
	053 Move X1, X31
	054 Call GameObject.get_transform, X0
	055 Compare X20, 0
	056 JumpIfEqual {78}
	057 Move X22, X0
	058 Move X0, X20
	059 Move X1, X31
	060 Call Component.get_transform, X0
	061 Compare X22, 0
	062 JumpIfEqual {78}
	063 Move X1, X0
	064 Move X0, X22
	065 Move X2, X31
	066 Call Transform.set_parent, X0, X1
	067 Move X8, [X19+56]
	068 Move X0, X21
	069 Move X1, [X8+8]
	070 Call 0x20CFE08, X0
	071 Move X0, X21
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 Return X0
	078 Call 0x1B6FA1C

Method: System.Void .ctor()

Disassembly:
	0x01C8F730 LDR X0, [X0 + 0xAE0]
	0x01C8F734 BL 0x1B6E7F0
	0x01C8F738 ADRP X0, 0x22BE000
	0x01C8F73C LDR X0, [X0 + 0xAE8]
	0x01C8F740 BL 0x1B6E7F0
	0x01C8F744 ADRP X0, 0x22BE000
	0x01C8F748 LDR X0, [X0 + 0xAF0]
	0x01C8F74C BL 0x1B6E7F0
	0x01C8F750 ADRP X0, 0x22BE000
	0x01C8F754 LDR X0, [X0 + 0xAF8]
	0x01C8F758 BL 0x1B6E7F0
	0x01C8F75C MOVZ W8, 0x1
	0x01C8F760 STRB W8, [X20 + 0x3AC]
	0x01C8F764 STP X31, X31, [X31 + 0x20]
	0x01C8F768 STR X31, [X31 + 0x18]
	0x01C8F76C LDR W8, [X19 + 0x10]
	0x01C8F770 CMP W8, 0x6
	0x01C8F774 B.HI 0x1C8FF3C
	0x01C8F778 LDR X20, [X19 + 0x20]
	0x01C8F77C ADRP X9, 0xFFFFFFFFFEE1E000
	0x01C8F780 ADD X9, X9, 0xE20
	0x01C8F784 ADR X10, 0x10
	0x01C8F788 LDRH W11, [X9, X8, LSL #1]
	0x01C8F78C ADD X10, X10, X11, 0x2, LSL
	0x01C8F790 BR X10
	0x01C8F794 MOVN W8, 0x0
	0x01C8F798 STR W8, [X19 + 0x10]
	0x01C8F79C ADRP X8, 0x22BE000
	0x01C8F7A0 LDR X8, [X8 + 0xAC0]
	0x01C8F7A4 LDR X0, [X8]
	0x01C8F7A8 BL 0x1B6EA0C
	0x01C8F7AC MOV X1, X31
	0x01C8F7B0 MOV X21, X0
	0x01C8F7B4 BL 0x32276F8
	0x01C8F7B8 ADRP X22, 0x22BE000
	0x01C8F7BC LDR X22, [X22 + 0x628]
	0x01C8F7C0 LDR X0, [X22]
	0x01C8F7C4 LDR W8, [X0 + 0xE0]
	0x01C8F7C8 CBNZ W8, 0x1C8F7D0
	0x01C8F7CC BL 0x1B6E8F8
	0x01C8F7D0 ADRP X23, 0x2594000
	0x01C8F7D4 LDRB W8, [X23 + 0x448]
	0x01C8F7D8 CBNZ W8, 0x1C8F7F0
	0x01C8F7DC ADRP X0, 0x22BE000
	0x01C8F7E0 LDR X0, [X0 + 0x628]
	0x01C8F7E4 BL 0x1B6E7F0
	0x01C8F7E8 MOVZ W8, 0x1
	0x01C8F7EC STRB W8, [X23 + 0x448]
	0x01C8F7F0 LDR X0, [X22]
	0x01C8F7F4 LDR W8, [X0 + 0xE0]
	0x01C8F7F8 CBNZ W8, 0x1C8F804
	0x01C8F7FC BL 0x1B6E8F8
	0x01C8F800 LDR X0, [X22]
	0x01C8F804 LDR X8, [X0 + 0xB8]
	0x01C8F808 MOVZ W9, 0x3
	0x01C8F80C STR W9, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x2595000
	008 Move X22, 0x22BF000
	009 Move X21, 0x22BF000
	010 Move X20, 0x22BF000
	011 Move W8, [X23+934]
	012 Move X22, [X22+2056]
	013 Move X21, [X21+2064]
	014 Move X20, [X20+1848]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x22BF000
	021 Move X0, [X0+1848]
	022 Call 0x1B6F7F0
	023 Move X0, 0x22BF000
	024 Move X0, [X0+2056]
	025 Call 0x1B6F7F0
	026 Move X0, 0x22BF000
	027 Move X0, [X0+2064]
	028 Call 0x1B6F7F0
	029 Move W8, 1
	030 Move [X23+934], W8
	031 Move X8, -18755584
	032 Move V0, [X8+106]
	033 Move [X19+2], V0
	034 Move X9, [X22]
	035 Move X8, [X21]
	036 Move [X19+48], X9
	037 Move [X19+56], X8
	038 Move X0, [X20]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1B6F8F8
	043 Move X21, 0x2595000
	044 Move W8, [X21+1095]
	045 Compare W8, 0
	046 JumpIfNotEqual {52}
	047 Move X0, 0x22BF000
	048 Move X0, [X0+1848]
	049 Call 0x1B6F7F0
	050 Move W8, 1
	051 Move [X21+1095], W8
	052 Move X0, [X20]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {58}
	056 Call 0x1B6F8F8
	057 Move X0, [X20]
	058 Move X8, [X0+184]
	059 Move X0, X19
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X1, X31
	063 Move X8, [X8]
	064 Move [X19+64], X8
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X30, [X31+48]
	068 Move X23, [X31+56]
	069 Call MonoBehaviour..ctor, X0
	070 Return 

