Type: AnimalCompany.BaseAction

Method: System.Boolean get_silent()

Disassembly:
	0x01D3C738 LDRSW X9, [X10]
	0x01D3C73C ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_silent(System.Boolean value)

Disassembly:
	0x01D3C740 ADD X0, X8, 0x138
	0x01D3C744 LDP X8, X1, [X0]
	0x01D3C748 MOV X0, X19

ISIL:
	001 And W8, W1, 1
	002 Move [X0+16], W8
	003 Return 

Method: AnimalCompany.BaseAction SetSilent(System.Boolean silent = True)

Disassembly:
	0x01D3C74C BLR X8
	0x01D3C750 CBNZ X21, 0x1D3C7C0
	0x01D3C754 LDP X20, X19, [X31 + 0x50]
	0x01D3C758 LDP X22, X21, [X31 + 0x40]
	0x01D3C75C LDP X24, X23, [X31 + 0x30]
	0x01D3C760 LDP X26, X25, [X31 + 0x20]
	0x01D3C764 LDP X28, X27, [X31 + 0x10]
	0x01D3C768 LDP X29, X30, [X31], #0x60
	0x01D3C76C RET

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 And W1, W1, 1
	005 Move X19, X0
	006 Move X9, [X8+392]
	007 Move X2, [X8+400]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move X0, X19
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return X0

Method: System.Void Execute(AnimalCompany.AppState state)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.String ToString()

Disassembly:
	0x01D3C770 BL 0x1C16F20
	0x01D3C774 BL 0x1C16F20
	0x01D3C778 BL 0x1C16F20
	0x01D3C77C BL 0x1C16F20
	0x01D3C780 BL 0x1C16F20
	0x01D3C784 BL 0x1C16F20
	0x01D3C788 BL 0x1C16F20
	0x01D3C78C BL 0x1C16F20
	0x01D3C790 BL 0x1C16F20
	0x01D3C794 BL 0x1C16F20
	0x01D3C798 BL 0x1C16F20
	0x01D3C79C BL 0x1C16F20
	0x01D3C7A0 BL 0x1C16F20
	0x01D3C7A4 BL 0x1C16F20
	0x01D3C7A8 BL 0x1C16F20
	0x01D3C7AC BL 0x1C16F20
	0x01D3C7B0 BL 0x1C16F20
	0x01D3C7B4 BL 0x1C16F20
	0x01D3C7B8 BL 0x1C16F20
	0x01D3C7BC BL 0x1C16F20
	0x01D3C7C0 MOV X0, X21
	0x01D3C7C4 BL 0x1C16F18
	0x01D3C7C8 B 0x1D3C858
	0x01D3C7CC B 0x1D3C858
	0x01D3C7D0 B 0x1D3C858
	0x01D3C7D4 B 0x1D3C858
	0x01D3C7D8 B 0x1D3C858
	0x01D3C7DC B 0x1D3C858
	0x01D3C7E0 B 0x1D3C858
	0x01D3C7E4 B 0x1D3C858
	0x01D3C7E8 B 0x1D3C858
	0x01D3C7EC B 0x1D3C858
	0x01D3C7F0 B 0x1D3C858
	0x01D3C7F4 B 0x1D3C858
	0x01D3C7F8 B 0x1D3C858
	0x01D3C7FC B 0x1D3C858
	0x01D3C800 B 0x1D3C858
	0x01D3C804 B 0x1D3C858
	0x01D3C808 B 0x1D3C858
	0x01D3C80C B 0x1D3C858
	0x01D3C810 B 0x1D3C858
	0x01D3C814 B 0x1D3C858
	0x01D3C818 B 0x1D3C858
	0x01D3C81C B 0x1D3C858
	0x01D3C820 B 0x1D3C858
	0x01D3C824 B 0x1D3C858
	0x01D3C828 B 0x1D3C858
	0x01D3C82C B 0x1D3C858
	0x01D3C830 B 0x1D3C858
	0x01D3C834 B 0x1D3C858
	0x01D3C838 B 0x1D3C858
	0x01D3C83C B 0x1D3C858
	0x01D3C840 B 0x1D3C858
	0x01D3C844 B 0x1D3C858
	0x01D3C848 B 0x1D3C858
	0x01D3C84C B 0x1D3C858
	0x01D3C850 B 0x1D3C858
	0x01D3C854 B 0x1D3C858
	0x01D3C858 MOV X20, X0
	0x01D3C85C CMP W1, 0x1
	0x01D3C860 B.NE 0x1D3C878
	0x01D3C864 MOV X0, X20
	0x01D3C868 BL 0x3EB1AD0
	0x01D3C86C LDR X21, [X0]
	0x01D3C870 BL 0x3EB1AE0
	0x01D3C874 B 0x1D3C6EC
	0x01D3C878 MOV X21, X31
	0x01D3C87C B 0x1D3C884
	0x01D3C880 MOV X20, X0
	0x01D3C884 CBZ X19, 0x1D3C8E8
	0x01D3C888 LDR X8, [X19]
	0x01D3C88C ADRP X10, 0x23B7000
	0x01D3C890 LDRH W9, [X8 + 0x12E]
	0x01D3C894 LDR X10, [X10 + 0xE00]
	0x01D3C898 LDR X1, [X10]
	0x01D3C89C CBZ X9, 0x1D3C8C0
	0x01D3C8A0 LDR X10, [X8 + 0xB0]
	0x01D3C8A4 ADD X10, X10, 0x8
	0x01D3C8A8 LDUR X11, [X10 - 0x8]
	0x01D3C8AC CMP X11, X1
	0x01D3C8B0 B.EQ 0x1D3C8D0
	0x01D3C8B4 SUBS X9, X9, 0x1
	0x01D3C8B8 ADD X10, X10, 0x10
	0x01D3C8BC B.NE 0x1D3C8A8
	0x01D3C8C0 MOV X0, X19
	0x01D3C8C4 MOV W2, W31
	0x01D3C8C8 BL 0x1C5C788
	0x01D3C8CC B 0x1D3C8DC
	0x01D3C8D0 LDRSW X9, [X10]
	0x01D3C8D4 ADD X8, X8, X9, 0x4, LSL
	0x01D3C8D8 ADD X0, X8, 0x138
	0x01D3C8DC LDP X8, X1, [X0]
	0x01D3C8E0 MOV X0, X19
	0x01D3C8E4 BLR X8
	0x01D3C8E8 CBNZ X21, 0x1D3C8F4
	0x01D3C8EC MOV X0, X20
	0x01D3C8F0 BL 0x1D2C690
	0x01D3C8F4 MOV X0, X21

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x269D000
	009 Move W8, [X20+1810]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {38}
	015 Move X0, 0x23B8000
	016 Move X0, [X0+3752]
	017 Call 0x1C17CF4
	018 Move X0, 0x23B8000
	019 Move X0, [X0+3760]
	020 Call 0x1C17CF4
	021 Move X0, 0x23B8000
	022 Move X0, [X0+3768]
	023 Call 0x1C17CF4
	024 Move X0, 0x23B8000
	025 Move X0, [X0+3776]
	026 Call 0x1C17CF4
	027 Move X0, 0x23B8000
	028 Move X0, [X0+2104]
	029 Call 0x1C17CF4
	030 Move X0, 0x23B8000
	031 Move X0, [X0+3784]
	032 Call 0x1C17CF4
	033 Move X0, 0x23B8000
	034 Move X0, [X0+2120]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X20+1810], W8
	038 Move X0, X19
	039 Move X1, X31
	040 Call "il2cpp_vm_object_is_inst", X0
	041 Compare X0, 0
	042 JumpIfEqual {114}
	043 Move X8, [X0]
	044 Move X21, 0x23B8000
	045 Move X21, [X21+3776]
	046 Move X22, 0x23B8000
	047 Move X9, [X8+1672]
	048 Move X2, [X8+1680]
	049 Move X23, 0x23B8000
	050 Move X24, 0x23B8000
	051 Move X22, [X22+3752]
	052 Move X23, [X23+3760]
	053 Move X24, [X24+3768]
	054 Move W1, 36
	055 Move X20, X0
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X8, [X21]
	058 Move X21, X0
	059 Move X0, X8
	060 Call 0x1C17F10
	061 Move X2, [X22]
	062 Move X1, X19
	063 Move X3, X31
	064 Move X22, X0
	065 Call Func`2<Object, Object>..ctor, X0, X1, X2
	066 Move X2, [X23]
	067 Move X0, X21
	068 Move X1, X22
	069 Call Enumerable.Select, X0, X1
	070 Move X1, [X24]
	071 Call Enumerable.ToArray, X0
	072 Compare X0, 0
	073 JumpIfEqual {114}
	074 Move X21, [X0+24]
	075 Move X19, X0
	076 Move X0, X20
	077 Call BaseAction.GetTypeNameStripped, X0
	078 Move X20, X0
	079 Compare X21, 0
	080 JumpIfEqual {105}
	081 Move X8, 0x23B8000
	082 Move X8, [X8+2104]
	083 Move X21, 0x23B8000
	084 Move X22, 0x23B8000
	085 Move X1, X19
	086 Move X0, [X8]
	087 Move X21, [X21+3784]
	088 Move X22, [X22+2120]
	089 Move X2, X31
	090 Call String.Join, X0, X1
	091 Move X1, [X21]
	092 Move X3, [X22]
	093 Move X2, X0
	094 Move X0, X20
	095 Move X20, [X31+48]
	096 Move X19, [X31+56]
	097 Move X22, [X31+32]
	098 Move X21, [X31+40]
	099 Move X24, [X31+16]
	100 Move X23, [X31+24]
	101 Move X4, X31
	102 Move X30, [X31+64]
	103 Call String.Concat, X0, X1, X2, X3
	104 Return X0
	105 Move X0, X20
	106 Move X20, [X31+48]
	107 Move X19, [X31+56]
	108 Move X22, [X31+32]
	109 Move X21, [X31+40]
	110 Move X24, [X31+16]
	111 Move X23, [X31+24]
	112 Move X30, [X31+64]
	113 Return X0
	114 Call 0x1C17F20

Method: System.Boolean IsSecuritySensitiveField(System.Reflection.MemberInfo member)

Disassembly:
	0x01D3C8F8 BL 0x1C16F18
	0x01D3C8FC BL 0x1990590
	0x01D3C900 STP X30, X21, [X31 - 0x20]!
	0x01D3C904 STP X20, X19, [X31 + 0x10]
	0x01D3C908 MOV X19, X1
	0x01D3C90C MOV X1, X31
	0x01D3C910 MOV X20, X0
	0x01D3C914 AND W21, W2, 0x1
	0x01D3C918 BL 0x33BDD8C
	0x01D3C91C STR X19, [X20 + 0x18]
	0x01D3C920 STRB W21, [X20 + 0x20]
	0x01D3C924 LDP X20, X19, [X31 + 0x10]
	0x01D3C928 LDP X30, X21, [X31], #0x20
	0x01D3C92C RET
	0x01D3C930 SUB X31, X31, 0x70
	0x01D3C934 STP X29, X30, [X31 + 0x10]
	0x01D3C938 STP X28, X27, [X31 + 0x20]
	0x01D3C93C STP X26, X25, [X31 + 0x30]
	0x01D3C940 STP X24, X23, [X31 + 0x40]
	0x01D3C944 STP X22, X21, [X31 + 0x50]
	0x01D3C948 STP X20, X19, [X31 + 0x60]
	0x01D3C94C ADRP X19, 0x269C000
	0x01D3C950 LDRB W8, [X19 + 0x71B]
	0x01D3C954 MOV X20, X1
	0x01D3C958 MOV X21, X0
	0x01D3C95C TBNZ X8, 0x0, 0x1D3C9C8
	0x01D3C960 ADRP X0, 0x23B7000
	0x01D3C964 LDR X0, [X0 + 0xE00]
	0x01D3C968 BL 0x1C16CF4
	0x01D3C96C ADRP X0, 0x23B7000
	0x01D3C970 LDR X0, [X0 + 0xF50]
	0x01D3C974 BL 0x1C16CF4
	0x01D3C978 ADRP X0, 0x23B7000
	0x01D3C97C LDR X0, [X0 + 0xF58]
	0x01D3C980 BL 0x1C16CF4
	0x01D3C984 ADRP X0, 0x23B7000
	0x01D3C988 LDR X0, [X0 + 0xE18]
	0x01D3C98C BL 0x1C16CF4
	0x01D3C990 ADRP X0, 0x23B7000
	0x01D3C994 LDR X0, [X0 + 0xF60]
	0x01D3C998 BL 0x1C16CF4
	0x01D3C99C ADRP X0, 0x23B7000
	0x01D3C9A0 LDR X0, [X0 + 0xF68]
	0x01D3C9A4 BL 0x1C16CF4
	0x01D3C9A8 ADRP X0, 0x23B7000
	0x01D3C9AC LDR X0, [X0 + 0xE30]
	0x01D3C9B0 BL 0x1C16CF4
	0x01D3C9B4 ADRP X0, 0x23B7000
	0x01D3C9B8 LDR X0, [X0 + 0x900]
	0x01D3C9BC BL 0x1C16CF4
	0x01D3C9C0 MOVZ W8, 0x1
	0x01D3C9C4 STRB W8, [X19 + 0x71B]
	0x01D3C9C8 STR X31, [X31 + 0x8]
	0x01D3C9CC LDR X19, [X21 + 0x18]
	0x01D3C9D0 CBZ X19, 0x1D3CD10
	0x01D3C9D4 ADRP X10, 0x23B7000
	0x01D3C9D8 LDR X8, [X19]
	0x01D3C9DC LDR X10, [X10 + 0xF50]
	0x01D3C9E0 LDRH W9, [X8 + 0x12E]
	0x01D3C9E4 LDR X1, [X10]
	0x01D3C9E8 CBZ X9, 0x1D3CA0C
	0x01D3C9EC LDR X10, [X8 + 0xB0]
	0x01D3C9F0 ADD X10, X10, 0x8
	0x01D3C9F4 LDUR X11, [X10 - 0x8]
	0x01D3C9F8 CMP X11, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x269D000
	005 Move W8, [X20+1811]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {25}
	011 Move X0, 0x23B8000
	012 Move X0, [X0+3792]
	013 Call 0x1C17CF4
	014 Move X0, 0x23B8000
	015 Move X0, [X0+3800]
	016 Call 0x1C17CF4
	017 Move X0, 0x23B8000
	018 Move X0, [X0+3808]
	019 Call 0x1C17CF4
	020 Move X0, 0x23B8000
	021 Move X0, [X0+3816]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+1811], W8
	025 Compare X19, 0
	026 JumpIfEqual {83}
	027 Move X8, [X19]
	028 Move X0, X19
	029 Move X9, [X8+424]
	030 Move X1, [X8+432]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Compare X0, 0
	033 JumpIfEqual {83}
	034 Move X8, 0x23B8000
	035 Move X8, [X8+3792]
	036 Move W2, 5
	037 Move X3, X31
	038 Move X19, X0
	039 Move X1, [X8]
	040 Call String.IndexOf, X0, X1, X2
	041 Move TEMP, X0
	042 And TEMP, TEMP, -2147483648
	043 Compare TEMP, -2147483648
	044 JumpIfNotEqual {67}
	045 Move X8, 0x23B8000
	046 Move X8, [X8+3808]
	047 Move W2, 5
	048 Move X0, X19
	049 Move X3, X31
	050 Move X1, [X8]
	051 Call String.IndexOf, X0, X1, X2
	052 Move TEMP, X0
	053 And TEMP, TEMP, -2147483648
	054 Compare TEMP, -2147483648
	055 JumpIfNotEqual {67}
	056 Move X8, 0x23B8000
	057 Move X8, [X8+3816]
	058 Move W2, 5
	059 Move X0, X19
	060 Move X3, X31
	061 Move X1, [X8]
	062 Call String.IndexOf, X0, X1, X2
	063 Move TEMP, X0
	064 And TEMP, TEMP, -2147483648
	065 Compare TEMP, -2147483648
	066 JumpIfEqual {72}
	067 Move W0, 1
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X30, [X31+32]
	071 Return X0
	072 Move X8, 0x23B8000
	073 Move X8, [X8+3800]
	074 Move W2, 5
	075 Move X0, X19
	076 Move X3, X31
	077 Move X1, [X8]
	078 Call String.IndexOf, X0, X1, X2
	079 NotImplemented "Instruction ORN not yet implemented."
	080 Move W0, W8
	081 ShiftRight W0, 31
	082 And W0, W0, 0x7FFFFFFF
	083 Call 0x1C17F20

Method: System.String GetTypeNameStripped(System.Type type)

Disassembly:
	0x01D36CD4 BL 0x1C16CF4
	0x01D36CD8 MOVZ W8, 0x1
	0x01D36CDC STRB W8, [X21 + 0x6E8]
	0x01D36CE0 CBZ X20, 0x1D36D70
	0x01D36CE4 LDR X8, [X20 + 0xA8]
	0x01D36CE8 CBZ X8, 0x1D36D70
	0x01D36CEC LDR X0, [X8 + 0x48]
	0x01D36CF0 CBZ X0, 0x1D36D70
	0x01D36CF4 ADRP X21, 0x23BD000
	0x01D36CF8 LDR X21, [X21 + 0x910]
	0x01D36CFC LDR W1, [X19 + 0x14]
	0x01D36D00 LDR X2, [X21]
	0x01D36D04 BL 0x265A224
	0x01D36D08 LDR X8, [X20 + 0xA8]
	0x01D36D0C CBZ X8, 0x1D36D70
	0x01D36D10 LDR X0, [X8 + 0x50]
	0x01D36D14 CBZ X0, 0x1D36D70
	0x01D36D18 ADRP X22, 0x23BD000
	0x01D36D1C LDR X22, [X22 + 0x908]
	0x01D36D20 LDR W1, [X19 + 0x18]
	0x01D36D24 LDR X2, [X22]
	0x01D36D28 BL 0x265A224
	0x01D36D2C LDR X8, [X20 + 0xA8]
	0x01D36D30 CBZ X8, 0x1D36D70
	0x01D36D34 LDR X0, [X8 + 0x58]
	0x01D36D38 CBZ X0, 0x1D36D70
	0x01D36D3C LDR W1, [X19 + 0x1C]
	0x01D36D40 LDR X2, [X21]
	0x01D36D44 BL 0x265A224
	0x01D36D48 LDR X8, [X20 + 0xA8]
	0x01D36D4C CBZ X8, 0x1D36D70
	0x01D36D50 LDR X0, [X8 + 0x60]
	0x01D36D54 CBZ X0, 0x1D36D70
	0x01D36D58 LDR W1, [X19 + 0x20]
	0x01D36D5C LDR X2, [X22]
	0x01D36D60 LDP X20, X19, [X31 + 0x20]
	0x01D36D64 LDP X22, X21, [X31 + 0x10]
	0x01D36D68 LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x26A3000
	005 Move W8, [X20+1812]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x23BE000
	012 Move X0, [X0+2192]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1812], W8
	016 Compare X19, 0
	017 JumpIfEqual {51}
	018 Move X8, [X19]
	019 Move X0, X19
	020 Move X9, [X8+744]
	021 Move X1, [X8+752]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Compare X0, 0
	024 JumpIfEqual {51}
	025 Move X20, 0x23BE000
	026 Move X20, [X20+2192]
	027 Move X2, X31
	028 Move X19, X0
	029 Move X1, [X20]
	030 Call String.StartsWith, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {46}
	035 Move X8, [X20]
	036 Compare X8, 0
	037 JumpIfEqual {51}
	038 Move W1, [X8+16]
	039 Move X0, X19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X2, X31
	043 Move X30, [X31+32]
	044 Call String.Substring, X0, X1
	045 Return X0
	046 Move X0, X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Return X0
	051 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01D37B98 LDRB W8, [X20 + 0x6F6]
	0x01D37B9C LDR X21, [X21 + 0xA50]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.String <ToString>b__6_0(System.Reflection.FieldInfo p)

Disassembly:
	0x01D3C9FC B.EQ 0x1D3CA1C
	0x01D3CA00 SUBS X9, X9, 0x1
	0x01D3CA04 ADD X10, X10, 0x10
	0x01D3CA08 B.NE 0x1D3C9F4
	0x01D3CA0C MOV X0, X19
	0x01D3CA10 MOV W2, W31
	0x01D3CA14 BL 0x1C5C788
	0x01D3CA18 B 0x1D3CA28
	0x01D3CA1C LDRSW X9, [X10]
	0x01D3CA20 ADD X8, X8, X9, 0x4, LSL
	0x01D3CA24 ADD X0, X8, 0x138
	0x01D3CA28 LDP X8, X1, [X0]
	0x01D3CA2C MOV X0, X19
	0x01D3CA30 BLR X8
	0x01D3CA34 MOV X19, X0
	0x01D3CA38 CBZ X0, 0x1D3CD14
	0x01D3CA3C ADRP X26, 0x23B7000
	0x01D3CA40 ADRP X27, 0x23B7000
	0x01D3CA44 ADRP X28, 0x23B7000
	0x01D3CA48 ADRP X29, 0x23B7000
	0x01D3CA4C ADRP X24, 0x23B7000
	0x01D3CA50 LDR X26, [X26 + 0xE18]
	0x01D3CA54 LDR X27, [X27 + 0xF58]
	0x01D3CA58 LDR X28, [X28 + 0xF60]
	0x01D3CA5C LDR X29, [X29 + 0xF68]
	0x01D3CA60 LDR X24, [X24 + 0x900]
	0x01D3CA64 MOV X25, X31
	0x01D3CA68 LDR X8, [X19]
	0x01D3CA6C LDR X1, [X26]
	0x01D3CA70 LDRH W9, [X8 + 0x12E]
	0x01D3CA74 CBZ X9, 0x1D3CA98
	0x01D3CA78 LDR X10, [X8 + 0xB0]
	0x01D3CA7C ADD X10, X10, 0x8
	0x01D3CA80 LDUR X11, [X10 - 0x8]
	0x01D3CA84 CMP X11, X1
	0x01D3CA88 B.EQ 0x1D3CAA8
	0x01D3CA8C SUBS X9, X9, 0x1
	0x01D3CA90 ADD X10, X10, 0x10
	0x01D3CA94 B.NE 0x1D3CA80
	0x01D3CA98 MOV X0, X19
	0x01D3CA9C MOV W2, W31
	0x01D3CAA0 BL 0x1C5C788
	0x01D3CAA4 B 0x1D3CAB4
	0x01D3CAA8 LDRSW X9, [X10]
	0x01D3CAAC ADD X8, X8, X9, 0x4, LSL
	0x01D3CAB0 ADD X0, X8, 0x138
	0x01D3CAB4 LDP X8, X1, [X0]
	0x01D3CAB8 MOV X0, X19
	0x01D3CABC BLR X8
	0x01D3CAC0 TBZ X0, 0x0, 0x1D3CC70
	0x01D3CAC4 LDR X8, [X19]
	0x01D3CAC8 LDR X1, [X27]
	0x01D3CACC LDRH W9, [X8 + 0x12E]
	0x01D3CAD0 CBZ X9, 0x1D3CAF4
	0x01D3CAD4 LDR X10, [X8 + 0xB0]
	0x01D3CAD8 ADD X10, X10, 0x8
	0x01D3CADC LDUR X11, [X10 - 0x8]
	0x01D3CAE0 CMP X11, X1
	0x01D3CAE4 B.EQ 0x1D3CB04
	0x01D3CAE8 SUBS X9, X9, 0x1
	0x01D3CAEC ADD X10, X10, 0x10
	0x01D3CAF0 B.NE 0x1D3CADC
	0x01D3CAF4 MOV X0, X19
	0x01D3CAF8 MOV W2, W31
	0x01D3CAFC BL 0x1C5C788
	0x01D3CB00 B 0x1D3CB10
	0x01D3CB04 LDRSW X9, [X10]
	0x01D3CB08 ADD X8, X8, X9, 0x4, LSL
	0x01D3CB0C ADD X0, X8, 0x138
	0x01D3CB10 LDP X8, X1, [X0]
	0x01D3CB14 MOV X0, X19
	0x01D3CB18 BLR X8
	0x01D3CB1C CBZ X20, 0x1D3CD08
	0x01D3CB20 LDR X8, [X20 + 0xB8]
	0x01D3CB24 CBZ X8, 0x1D3CD0C
	0x01D3CB28 LDR X9, [X8 + 0xA0]
	0x01D3CB2C CBZ X9, 0x1D3CD00
	0x01D3CB30 MOV X22, X0
	0x01D3CB34 CBZ X0, 0x1D3CD04
	0x01D3CB38 LDR X8, [X22]
	0x01D3CB3C LDR X23, [X9 + 0x48]
	0x01D3CB40 LDR X1, [X28]
	0x01D3CB44 LDRH W9, [X8 + 0x12E]
	0x01D3CB48 CBZ X9, 0x1D3CB6C
	0x01D3CB4C LDR X10, [X8 + 0xB0]
	0x01D3CB50 ADD X10, X10, 0x8
	0x01D3CB54 LDUR X11, [X10 - 0x8]
	0x01D3CB58 CMP X11, X1
	0x01D3CB5C B.EQ 0x1D3CB7C
	0x01D3CB60 SUBS X9, X9, 0x1
	0x01D3CB64 ADD X10, X10, 0x10
	0x01D3CB68 B.NE 0x1D3CB54
	0x01D3CB6C MOVZ W2, 0x4
	0x01D3CB70 MOV X0, X22
	0x01D3CB74 BL 0x1C5C788
	0x01D3CB78 B 0x1D3CB8C
	0x01D3CB7C LDR W9, [X10]
	0x01D3CB80 ADD W9, W9, 0x4
	0x01D3CB84 ADD X8, X8, W9, 0x4, SXTW
	0x01D3CB88 ADD X0, X8, 0x138
	0x01D3CB8C LDP X8, X1, [X0]
	0x01D3CB90 MOV X0, X22
	0x01D3CB94 BLR X8
	0x01D3CB98 MOV X1, X0
	0x01D3CB9C CBZ X23, 0x1D3CCFC
	0x01D3CBA0 LDR X3, [X29]
	0x01D3CBA4 ADD X2, X31, 0x8
	0x01D3CBA8 MOV X0, X23
	0x01D3CBAC BL 0x2609E34
	0x01D3CBB0 TBZ X0, 0x0, 0x1D3CA68
	0x01D3CBB4 LDR X8, [X31 + 0x8]
	0x01D3CBB8 CBZ X8, 0x1D3CD20
	0x01D3CBBC LDR X0, [X8 + 0x70]
	0x01D3CBC0 CBZ X0, 0x1D3CD24
	0x01D3CBC4 ADRP X8, 0x23B7000
	0x01D3CBC8 LDRB W1, [X21 + 0x20]
	0x01D3CBCC LDR X8, [X8 + 0xE30]
	0x01D3CBD0 LDR X2, [X8]
	0x01D3CBD4 BL 0x26518D0
	0x01D3CBD8 LDR X8, [X31 + 0x8]
	0x01D3CBDC CBZ X8, 0x1D3CD28
	0x01D3CBE0 LDRB W9, [X21 + 0x20]
	0x01D3CBE4 LDR X0, [X8 + 0x78]
	0x01D3CBE8 CMP W9, 0x0
	0x01D3CBEC CSEL X25, X25, X0, EQ
	0x01D3CBF0 CBZ W9, 0x1D3CC34
	0x01D3CBF4 LDR X8, [X22]
	0x01D3CBF8 LDR X1, [X28]
	0x01D3CBFC LDRH W9, [X8 + 0x12E]
	0x01D3CC00 CBZ X9, 0x1D3CC24
	0x01D3CC04 LDR X10, [X8 + 0xB0]
	0x01D3CC08 ADD X10, X10, 0x8
	0x01D3CC0C LDUR X11, [X10 - 0x8]
	0x01D3CC10 CMP X11, X1
	0x01D3CC14 B.EQ 0x1D3CC3C
	0x01D3CC18 SUBS X9, X9, 0x1
	0x01D3CC1C ADD X10, X10, 0x10
	0x01D3CC20 B.NE 0x1D3CC0C
	0x01D3CC24 MOVZ W2, 0x2
	0x01D3CC28 MOV X0, X22
	0x01D3CC2C BL 0x1C5C788
	0x01D3CC30 B 0x1D3CC4C
	0x01D3CC34 MOV X1, X31
	0x01D3CC38 B 0x1D3CC60
	0x01D3CC3C LDR W9, [X10]
	0x01D3CC40 ADD W9, W9, 0x2
	0x01D3CC44 ADD X8, X8, W9, 0x4, SXTW
	0x01D3CC48 ADD X0, X8, 0x138
	0x01D3CC4C LDP X8, X1, [X0]
	0x01D3CC50 MOV X0, X22
	0x01D3CC54 BLR X8
	0x01D3CC58 MOV X1, X0
	0x01D3CC5C MOV X0, X25
	0x01D3CC60 CBZ X0, 0x1D3CD2C
	0x01D3CC64 LDR X2, [X24]
	0x01D3CC68 BL 0x265C3F4
	0x01D3CC6C B 0x1D3CA68
	0x01D3CC70 MOV X21, X31
	0x01D3CC74 CBZ X19, 0x1D3CCD8
	0x01D3CC78 LDR X8, [X19]
	0x01D3CC7C ADRP X10, 0x23B7000
	0x01D3CC80 LDRH W9, [X8 + 0x12E]
	0x01D3CC84 LDR X10, [X10 + 0xE00]
	0x01D3CC88 LDR X1, [X10]
	0x01D3CC8C CBZ X9, 0x1D3CCB0
	0x01D3CC90 LDR X10, [X8 + 0xB0]
	0x01D3CC94 ADD X10, X10, 0x8
	0x01D3CC98 LDUR X11, [X10 - 0x8]
	0x01D3CC9C CMP X11, X1
	0x01D3CCA0 B.EQ 0x1D3CCC0
	0x01D3CCA4 SUBS X9, X9, 0x1
	0x01D3CCA8 ADD X10, X10, 0x10
	0x01D3CCAC B.NE 0x1D3CC98
	0x01D3CCB0 MOV X0, X19
	0x01D3CCB4 MOV W2, W31
	0x01D3CCB8 BL 0x1C5C788
	0x01D3CCBC B 0x1D3CCCC
	0x01D3CCC0 LDRSW X9, [X10]
	0x01D3CCC4 ADD X8, X8, X9, 0x4, LSL
	0x01D3CCC8 ADD X0, X8, 0x138
	0x01D3CCCC LDP X8, X1, [X0]
	0x01D3CCD0 MOV X0, X19
	0x01D3CCD4 BLR X8
	0x01D3CCD8 CBNZ X21, 0x1D3CD18
	0x01D3CCDC LDP X20, X19, [X31 + 0x60]
	0x01D3CCE0 LDP X22, X21, [X31 + 0x50]
	0x01D3CCE4 LDP X24, X23, [X31 + 0x40]
	0x01D3CCE8 LDP X26, X25, [X31 + 0x30]
	0x01D3CCEC LDP X28, X27, [X31 + 0x20]
	0x01D3CCF0 LDP X29, X30, [X31 + 0x10]
	0x01D3CCF4 ADD X31, X31, 0x70
	0x01D3CCF8 RET
	0x01D3CCFC BL 0x1C16F20
	0x01D3CD00 BL 0x1C16F20
	0x01D3CD04 BL 0x1C16F20
	0x01D3CD08 BL 0x1C16F20
	0x01D3CD0C BL 0x1C16F20
	0x01D3CD10 BL 0x1C16F20
	0x01D3CD14 BL 0x1C16F20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x269D000
	009 Move W8, [X21+1813]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {42}
	016 Move X0, 0x23B8000
	017 Move X0, [X0+3824]
	018 Call 0x1C17CF4
	019 Move X0, 0x23B8000
	020 Move X0, [X0+2760]
	021 Call 0x1C17CF4
	022 Move X0, 0x23B8000
	023 Move X0, [X0+3832]
	024 Call 0x1C17CF4
	025 Move X0, 0x23B8000
	026 Move X0, [X0+3840]
	027 Call 0x1C17CF4
	028 Move X0, 0x23B8000
	029 Move X0, [X0+2104]
	030 Call 0x1C17CF4
	031 Move X0, 0x23B8000
	032 Move X0, [X0+3848]
	033 Call 0x1C17CF4
	034 Move X0, 0x23B8000
	035 Move X0, [X0+3856]
	036 Call 0x1C17CF4
	037 Move X0, 0x23B8000
	038 Move X0, [X0+2120]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X21+1813], W8
	042 Compare X19, 0
	043 JumpIfEqual {231}
	044 Move X8, [X19]
	045 Move X0, X19
	046 Move X9, [X8+600]
	047 Move X1, [X8+608]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move X21, X0
	050 Move X0, X19
	051 Call BaseAction.IsSecuritySensitiveField, X0
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {68}
	056 Move X8, [X19]
	057 Move X0, X19
	058 Move X9, [X8+424]
	059 Move X1, [X8+432]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Compare X0, 0
	062 JumpIfEqual {231}
	063 Move W1, 95
	064 Move X2, X31
	065 Call String.TrimStart, X0, X1
	066 Move X8, 0x23B8000
	067 Move X8, [X8+3848]
	068 Compare X21, 0
	069 JumpIfEqual {231}
	070 Move X0, X21
	071 Move X1, X31
	072 Call Type.get_IsArray, X0
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {120}
	077 Move X8, [X19]
	078 Move X0, X19
	079 Move X1, X20
	080 Move X9, [X8+712]
	081 Move X2, [X8+720]
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Compare X0, 0
	084 JumpIfEqual {97}
	085 Move X8, 0x23B8000
	086 Move X8, [X8+3824]
	087 Move X9, [X0]
	088 Move X20, X0
	089 Move X8, [X8]
	090 Move W11, [X9+304]
	091 Move W10, [X8+304]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X9, [X9+200]
	094 Add X9, X9, X10
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X8, [X19]
	098 Move X0, X19
	099 Move X9, [X8+424]
	100 Move X1, [X8+432]
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Compare X0, 0
	103 JumpIfEqual {231}
	104 Move W1, 95
	105 Move X2, X31
	106 Call String.TrimStart, X0, X1
	107 Move X8, 0x23B8000
	108 Move X8, [X8+3840]
	109 Move X1, [X8]
	110 Move X20, [X31+48]
	111 Move X19, [X31+56]
	112 Move X22, [X31+32]
	113 Move X21, [X31+40]
	114 Move X24, [X31+16]
	115 Move X23, [X31+24]
	116 Move X2, X31
	117 Move X30, [X31+64]
	118 Call String.Concat, X0, X1
	119 Return X0
	120 Move X8, [X19]
	121 Move X0, X19
	122 Move X9, [X8+424]
	123 Move X1, [X8+432]
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Compare X0, 0
	126 JumpIfEqual {231}
	127 Move W1, 95
	128 Move X2, X31
	129 Call String.TrimStart, X0, X1
	130 Move X8, [X19]
	131 Move X21, X0
	132 Move X0, X19
	133 Move X1, X20
	134 Move X9, [X8+712]
	135 Move X2, [X8+720]
	136 NotImplemented "Instruction BLR not yet implemented."
	137 Move X8, 0x23B8000
	138 Move X8, [X8+3832]
	139 Move X1, X21
	140 Move X20, [X31+48]
	141 Move X19, [X31+56]
	142 Move X22, [X31+32]
	143 Move X21, [X31+40]
	144 Move X8, [X8]
	145 Move X24, [X31+16]
	146 Move X23, [X31+24]
	147 Move X2, X0
	148 Move X3, X31
	149 Move X0, X8
	150 Move X30, [X31+64]
	151 Call String.Format, X0, X1, X2
	152 Return X0
	153 Move X0, X20
	154 Move X1, X31
	155 Call Array.get_Length, X0
	156 Move X8, 0x23B8000
	157 Move X8, [X8+2760]
	158 Move W1, W0
	159 Move X8, [X8]
	160 Move X0, X8
	161 Call 0x1C17D6C
	162 Move X21, X0
	163 Move X0, X20
	164 Move X1, X31
	165 Call Array.get_Length, X0
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X22, X31
	168 Move X23, X31
	169 Add X24, X21, 32
	170 Move X0, X20
	171 Move W1, W22
	172 Move X2, X31
	173 Call Array.GetValue, X0, X1
	174 NotImplemented "Instruction CMP not yet implemented."
	175 NotImplemented "Instruction CSEL not yet implemented."
	176 Compare X0, 0
	177 JumpIfEqual {185}
	178 Compare X23, 0
	179 JumpIfEqual {231}
	180 Move X8, [X23]
	181 Move X0, X23
	182 Move X9, [X8+360]
	183 Move X1, [X8+368]
	184 NotImplemented "Instruction BLR not yet implemented."
	185 Compare X21, 0
	186 JumpIfEqual {231}
	187 Move W8, [X21+24]
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move [X24], X0
	190 Move X0, X20
	191 Move X1, X31
	192 Add X22, X22, 1
	193 Call Array.get_Length, X0
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move X8, [X19]
	196 Move X0, X19
	197 Move X9, [X8+424]
	198 Move X1, [X8+432]
	199 NotImplemented "Instruction BLR not yet implemented."
	200 Compare X0, 0
	201 JumpIfEqual {231}
	202 Move W1, 95
	203 Move X2, X31
	204 Call String.TrimStart, X0, X1
	205 Move X8, 0x23B8000
	206 Move X8, [X8+2104]
	207 Move X19, X0
	208 Move X1, X21
	209 Move X2, X31
	210 Move X8, [X8]
	211 Move X0, X8
	212 Call String.Join, X0, X1
	213 Move X8, 0x23B8000
	214 Move X9, 0x23B8000
	215 Move X8, [X8+3856]
	216 Move X9, [X9+2120]
	217 Move X2, X0
	218 Move X0, X19
	219 Move X1, [X8]
	220 Move X3, [X9]
	221 Move X20, [X31+48]
	222 Move X19, [X31+56]
	223 Move X22, [X31+32]
	224 Move X21, [X31+40]
	225 Move X24, [X31+16]
	226 Move X23, [X31+24]
	227 Move X4, X31
	228 Move X30, [X31+64]
	229 Call String.Concat, X0, X1, X2, X3
	230 Return X0
	231 Call 0x1C17F20
	232 Call 0x1C17F28

