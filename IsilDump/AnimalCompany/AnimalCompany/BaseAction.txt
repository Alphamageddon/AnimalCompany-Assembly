Type: AnimalCompany.BaseAction

Method: System.Boolean get_silent()

Disassembly:
	0x01C91DE4 STRB W8, [X24 + 0x448]
	0x01C91DE8 LDR X0, [X21]

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_silent(System.Boolean value)

Disassembly:
	0x01C91DEC LDR W8, [X0 + 0xE0]
	0x01C91DF0 CBNZ W8, 0x1C91DFC
	0x01C91DF4 BL 0x1B6E8F8

ISIL:
	001 And W8, W1, 1
	002 Move [X0+16], W8
	003 Return 

Method: AnimalCompany.BaseAction SetSilent(System.Boolean silent = True)

Disassembly:
	0x01C91DF8 LDR X0, [X21]
	0x01C91DFC LDR X8, [X0 + 0xB8]
	0x01C91E00 STR W19, [X8]
	0x01C91E04 LDRB W8, [X22 + 0x443]
	0x01C91E08 CBNZ W8, 0x1C91E20
	0x01C91E0C ADRP X0, 0x22BC000
	0x01C91E10 LDR X0, [X0 + 0x4E8]
	0x01C91E14 BL 0x1B6E7F0
	0x01C91E18 MOVZ W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 And W1, W1, 1
	005 Move X19, X0
	006 Move X9, [X8+392]
	007 Move X2, [X8+400]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move X0, X19
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return X0

Method: System.Void Execute(AnimalCompany.AppState state)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.String ToString()

Disassembly:
	0x01C91E1C STRB W8, [X22 + 0x443]
	0x01C91E20 LDR X0, [X20]
	0x01C91E24 LDR W8, [X0 + 0xE0]
	0x01C91E28 CBNZ W8, 0x1C91E34
	0x01C91E2C BL 0x1B6E8F8
	0x01C91E30 LDR X0, [X20]
	0x01C91E34 LDR X8, [X0 + 0xB8]
	0x01C91E38 LDR X8, [X8]
	0x01C91E3C CBZ X8, 0x1C91FD0
	0x01C91E40 LDR X8, [X8 + 0xB8]
	0x01C91E44 CBZ X8, 0x1C91FD0
	0x01C91E48 ADRP X24, 0x22BC000
	0x01C91E4C LDR X24, [X24 + 0xCC0]
	0x01C91E50 LDR X0, [X8 + 0x50]
	0x01C91E54 LDR X1, [X24]
	0x01C91E58 BL 0x24BDC04
	0x01C91E5C ADRP X25, 0x2592000
	0x01C91E60 LDRB W8, [X25 + 0x44A]
	0x01C91E64 MOV W19, W0
	0x01C91E68 CBNZ W8, 0x1C91E80
	0x01C91E6C ADRP X0, 0x22BC000
	0x01C91E70 LDR X0, [X0 + 0x628]
	0x01C91E74 BL 0x1B6E7F0
	0x01C91E78 MOVZ W8, 0x1
	0x01C91E7C STRB W8, [X25 + 0x44A]
	0x01C91E80 LDR X0, [X21]
	0x01C91E84 LDR W8, [X0 + 0xE0]
	0x01C91E88 CBNZ W8, 0x1C91E94
	0x01C91E8C BL 0x1B6E8F8
	0x01C91E90 LDR X0, [X21]
	0x01C91E94 LDR X8, [X0 + 0xB8]
	0x01C91E98 STR W19, [X8 + 0x4]
	0x01C91E9C LDRB W8, [X22 + 0x443]
	0x01C91EA0 CBNZ W8, 0x1C91EB8
	0x01C91EA4 ADRP X0, 0x22BC000
	0x01C91EA8 LDR X0, [X0 + 0x4E8]
	0x01C91EAC BL 0x1B6E7F0
	0x01C91EB0 MOVZ W8, 0x1
	0x01C91EB4 STRB W8, [X22 + 0x443]
	0x01C91EB8 LDR X0, [X20]
	0x01C91EBC LDR W8, [X0 + 0xE0]
	0x01C91EC0 CBNZ W8, 0x1C91ECC
	0x01C91EC4 BL 0x1B6E8F8
	0x01C91EC8 LDR X0, [X20]
	0x01C91ECC LDR X8, [X0 + 0xB8]
	0x01C91ED0 LDR X8, [X8]
	0x01C91ED4 CBZ X8, 0x1C91FD0
	0x01C91ED8 LDR X8, [X8 + 0xB8]
	0x01C91EDC CBZ X8, 0x1C91FD0
	0x01C91EE0 LDR X0, [X8 + 0x58]
	0x01C91EE4 LDR X1, [X23]
	0x01C91EE8 BL 0x24BDC04
	0x01C91EEC ADRP X23, 0x2592000
	0x01C91EF0 LDRB W8, [X23 + 0x44B]
	0x01C91EF4 MOV W19, W0
	0x01C91EF8 CBNZ W8, 0x1C91F10
	0x01C91EFC ADRP X0, 0x22BC000
	0x01C91F00 LDR X0, [X0 + 0x628]
	0x01C91F04 BL 0x1B6E7F0
	0x01C91F08 MOVZ W8, 0x1
	0x01C91F0C STRB W8, [X23 + 0x44B]
	0x01C91F10 LDR X0, [X21]
	0x01C91F14 LDR W8, [X0 + 0xE0]
	0x01C91F18 CBNZ W8, 0x1C91F24
	0x01C91F1C BL 0x1B6E8F8
	0x01C91F20 LDR X0, [X21]
	0x01C91F24 LDR X8, [X0 + 0xB8]
	0x01C91F28 STR W19, [X8 + 0x8]
	0x01C91F2C LDRB W8, [X22 + 0x443]
	0x01C91F30 CBNZ W8, 0x1C91F48
	0x01C91F34 ADRP X0, 0x22BC000
	0x01C91F38 LDR X0, [X0 + 0x4E8]
	0x01C91F3C BL 0x1B6E7F0
	0x01C91F40 MOVZ W8, 0x1
	0x01C91F44 STRB W8, [X22 + 0x443]
	0x01C91F48 LDR X0, [X20]
	0x01C91F4C LDR W8, [X0 + 0xE0]
	0x01C91F50 CBNZ W8, 0x1C91F5C
	0x01C91F54 BL 0x1B6E8F8
	0x01C91F58 LDR X0, [X20]
	0x01C91F5C LDR X8, [X0 + 0xB8]
	0x01C91F60 LDR X8, [X8]
	0x01C91F64 CBZ X8, 0x1C91FD0
	0x01C91F68 LDR X8, [X8 + 0xB8]
	0x01C91F6C CBZ X8, 0x1C91FD0
	0x01C91F70 LDR X0, [X8 + 0x60]
	0x01C91F74 LDR X1, [X24]
	0x01C91F78 BL 0x24BDC04
	0x01C91F7C ADRP X20, 0x2592000
	0x01C91F80 LDRB W8, [X20 + 0x44C]
	0x01C91F84 MOV W19, W0
	0x01C91F88 CBNZ W8, 0x1C91FA0
	0x01C91F8C ADRP X0, 0x22BC000
	0x01C91F90 LDR X0, [X0 + 0x628]
	0x01C91F94 BL 0x1B6E7F0
	0x01C91F98 MOVZ W8, 0x1
	0x01C91F9C STRB W8, [X20 + 0x44C]
	0x01C91FA0 LDR X0, [X21]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x2593000
	009 Move W8, [X20+950]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {38}
	015 Move X0, 0x22BD000
	016 Move X0, [X0+3048]
	017 Call 0x1B6F7F0
	018 Move X0, 0x22BD000
	019 Move X0, [X0+3056]
	020 Call 0x1B6F7F0
	021 Move X0, 0x22BD000
	022 Move X0, [X0+3064]
	023 Call 0x1B6F7F0
	024 Move X0, 0x22BD000
	025 Move X0, [X0+3072]
	026 Call 0x1B6F7F0
	027 Move X0, 0x22BD000
	028 Move X0, [X0+1752]
	029 Call 0x1B6F7F0
	030 Move X0, 0x22BD000
	031 Move X0, [X0+3080]
	032 Call 0x1B6F7F0
	033 Move X0, 0x22BD000
	034 Move X0, [X0+1768]
	035 Call 0x1B6F7F0
	036 Move W8, 1
	037 Move [X20+950], W8
	038 Move X0, X19
	039 Move X1, X31
	040 Call "il2cpp_vm_object_is_inst", X0
	041 Compare X0, 0
	042 JumpIfEqual {114}
	043 Move X8, [X0]
	044 Move X21, 0x22BD000
	045 Move X21, [X21+3072]
	046 Move X22, 0x22BD000
	047 Move X9, [X8+1672]
	048 Move X2, [X8+1680]
	049 Move X23, 0x22BD000
	050 Move X24, 0x22BD000
	051 Move X22, [X22+3048]
	052 Move X23, [X23+3056]
	053 Move X24, [X24+3064]
	054 Move W1, 36
	055 Move X20, X0
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X8, [X21]
	058 Move X21, X0
	059 Move X0, X8
	060 Call 0x1B6FA0C
	061 Move X2, [X22]
	062 Move X1, X19
	063 Move X3, X31
	064 Move X22, X0
	065 Call Func`2<Object, Object>..ctor, X0, X1, X2
	066 Move X2, [X23]
	067 Move X0, X21
	068 Move X1, X22
	069 Call Enumerable.Select, X0, X1
	070 Move X1, [X24]
	071 Call Enumerable.ToArray, X0
	072 Compare X0, 0
	073 JumpIfEqual {114}
	074 Move X21, [X0+24]
	075 Move X19, X0
	076 Move X0, X20
	077 Call BaseAction.GetTypeNameStripped, X0
	078 Move X20, X0
	079 Compare X21, 0
	080 JumpIfEqual {105}
	081 Move X8, 0x22BD000
	082 Move X8, [X8+1752]
	083 Move X21, 0x22BD000
	084 Move X22, 0x22BD000
	085 Move X1, X19
	086 Move X0, [X8]
	087 Move X21, [X21+3080]
	088 Move X22, [X22+1768]
	089 Move X2, X31
	090 Call String.Join, X0, X1
	091 Move X1, [X21]
	092 Move X3, [X22]
	093 Move X2, X0
	094 Move X0, X20
	095 Move X20, [X31+48]
	096 Move X19, [X31+56]
	097 Move X22, [X31+32]
	098 Move X21, [X31+40]
	099 Move X24, [X31+16]
	100 Move X23, [X31+24]
	101 Move X4, X31
	102 Move X30, [X31+64]
	103 Call String.Concat, X0, X1, X2, X3
	104 Return X0
	105 Move X0, X20
	106 Move X20, [X31+48]
	107 Move X19, [X31+56]
	108 Move X22, [X31+32]
	109 Move X21, [X31+40]
	110 Move X24, [X31+16]
	111 Move X23, [X31+24]
	112 Move X30, [X31+64]
	113 Return X0
	114 Call 0x1B6FA1C

Method: System.Boolean IsSecuritySensitiveField(System.Reflection.MemberInfo member)

Disassembly:
	0x01C91FA4 LDR W8, [X0 + 0xE0]
	0x01C91FA8 CBNZ W8, 0x1C91FB4
	0x01C91FAC BL 0x1B6E8F8
	0x01C91FB0 LDR X0, [X21]
	0x01C91FB4 LDR X8, [X0 + 0xB8]
	0x01C91FB8 LDP X22, X21, [X31 + 0x20]
	0x01C91FBC LDP X24, X23, [X31 + 0x10]
	0x01C91FC0 STR W19, [X8 + 0xC]
	0x01C91FC4 LDP X20, X19, [X31 + 0x30]
	0x01C91FC8 LDP X30, X25, [X31], #0x40
	0x01C91FCC RET
	0x01C91FD0 BL 0x1B6EA1C
	0x01C91FD4 STR X30, [X31 - 0x20]!
	0x01C91FD8 STP X20, X19, [X31 + 0x10]
	0x01C91FDC ADRP X20, 0x2592000
	0x01C91FE0 ADRP X19, 0x22BC000
	0x01C91FE4 LDRB W8, [X20 + 0x3C0]
	0x01C91FE8 LDR X19, [X19 + 0x4E8]
	0x01C91FEC TBNZ X8, 0x0, 0x1C92058
	0x01C91FF0 ADRP X0, 0x22BC000
	0x01C91FF4 LDR X0, [X0 + 0x4E8]
	0x01C91FF8 BL 0x1B6E7F0
	0x01C91FFC ADRP X0, 0x22BC000
	0x01C92000 LDR X0, [X0 + 0xCD0]
	0x01C92004 BL 0x1B6E7F0
	0x01C92008 ADRP X0, 0x22BB000
	0x01C9200C LDR X0, [X0 + 0xBB8]
	0x01C92010 BL 0x1B6E7F0
	0x01C92014 ADRP X0, 0x22BB000
	0x01C92018 LDR X0, [X0 + 0xCD8]
	0x01C9201C BL 0x1B6E7F0
	0x01C92020 ADRP X0, 0x22BB000
	0x01C92024 LDR X0, [X0 + 0x808]
	0x01C92028 BL 0x1B6E7F0
	0x01C9202C ADRP X0, 0x22BB000
	0x01C92030 LDR X0, [X0 + 0xCE0]
	0x01C92034 BL 0x1B6E7F0
	0x01C92038 ADRP X0, 0x22BB000
	0x01C9203C LDR X0, [X0 + 0xCE8]
	0x01C92040 BL 0x1B6E7F0
	0x01C92044 ADRP X0, 0x22BB000
	0x01C92048 LDR X0, [X0 + 0xCF0]
	0x01C9204C BL 0x1B6E7F0
	0x01C92050 MOVZ W8, 0x1
	0x01C92054 STRB W8, [X20 + 0x3C0]
	0x01C92058 LDR X0, [X19]
	0x01C9205C LDR W8, [X0 + 0xE0]
	0x01C92060 CBNZ W8, 0x1C92068
	0x01C92064 BL 0x1B6E8F8
	0x01C92068 ADRP X20, 0x2591000
	0x01C9206C LDRB W8, [X20 + 0x443]
	0x01C92070 CBNZ W8, 0x1C92088
	0x01C92074 ADRP X0, 0x22BB000
	0x01C92078 LDR X0, [X0 + 0x4E8]
	0x01C9207C BL 0x1B6E7F0
	0x01C92080 MOVZ W8, 0x1
	0x01C92084 STRB W8, [X20 + 0x443]
	0x01C92088 LDR X0, [X19]
	0x01C9208C LDR W8, [X0 + 0xE0]
	0x01C92090 CBNZ W8, 0x1C9209C
	0x01C92094 BL 0x1B6E8F8
	0x01C92098 LDR X0, [X19]
	0x01C9209C LDR X8, [X0 + 0xB8]
	0x01C920A0 LDR X8, [X8]
	0x01C920A4 CBZ X8, 0x1C921A8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2593000
	005 Move W8, [X20+951]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {25}
	011 Move X0, 0x22BD000
	012 Move X0, [X0+3088]
	013 Call 0x1B6F7F0
	014 Move X0, 0x22BD000
	015 Move X0, [X0+3096]
	016 Call 0x1B6F7F0
	017 Move X0, 0x22BD000
	018 Move X0, [X0+3104]
	019 Call 0x1B6F7F0
	020 Move X0, 0x22BD000
	021 Move X0, [X0+3112]
	022 Call 0x1B6F7F0
	023 Move W8, 1
	024 Move [X20+951], W8
	025 Compare X19, 0
	026 JumpIfEqual {83}
	027 Move X8, [X19]
	028 Move X0, X19
	029 Move X9, [X8+424]
	030 Move X1, [X8+432]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Compare X0, 0
	033 JumpIfEqual {83}
	034 Move X8, 0x22BC000
	035 Move X8, [X8+3088]
	036 Move W2, 5
	037 Move X3, X31
	038 Move X19, X0
	039 Move X1, [X8]
	040 Call String.IndexOf, X0, X1, X2
	041 Move TEMP, X0
	042 And TEMP, TEMP, -2147483648
	043 Compare TEMP, -2147483648
	044 JumpIfNotEqual {67}
	045 Move X8, 0x22BC000
	046 Move X8, [X8+3104]
	047 Move W2, 5
	048 Move X0, X19
	049 Move X3, X31
	050 Move X1, [X8]
	051 Call String.IndexOf, X0, X1, X2
	052 Move TEMP, X0
	053 And TEMP, TEMP, -2147483648
	054 Compare TEMP, -2147483648
	055 JumpIfNotEqual {67}
	056 Move X8, 0x22BC000
	057 Move X8, [X8+3112]
	058 Move W2, 5
	059 Move X0, X19
	060 Move X3, X31
	061 Move X1, [X8]
	062 Call String.IndexOf, X0, X1, X2
	063 Move TEMP, X0
	064 And TEMP, TEMP, -2147483648
	065 Compare TEMP, -2147483648
	066 JumpIfEqual {72}
	067 Move W0, 1
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X30, [X31+32]
	071 Return X0
	072 Move X8, 0x22BC000
	073 Move X8, [X8+3096]
	074 Move W2, 5
	075 Move X0, X19
	076 Move X3, X31
	077 Move X1, [X8]
	078 Call String.IndexOf, X0, X1, X2
	079 NotImplemented "Instruction ORN not yet implemented."
	080 Move W0, W8
	081 ShiftRight W0, 31
	082 And W0, W0, 0x7FFFFFFF
	083 Call 0x1B6FA1C

Method: System.String GetTypeNameStripped(System.Type type)

Disassembly:
	0x01C8D8C0 BL 0x1B6E7F0
	0x01C8D8C4 MOVZ W8, 0x1
	0x01C8D8C8 STRB W8, [X21 + 0x398]
	0x01C8D8CC CBZ X20, 0x1C8D95C
	0x01C8D8D0 LDR X8, [X20 + 0xB8]
	0x01C8D8D4 CBZ X8, 0x1C8D95C
	0x01C8D8D8 LDR X0, [X8 + 0x48]
	0x01C8D8DC CBZ X0, 0x1C8D95C
	0x01C8D8E0 ADRP X21, 0x22C0000
	0x01C8D8E4 LDR X21, [X21 + 0x7B0]
	0x01C8D8E8 LDR W1, [X19 + 0x14]
	0x01C8D8EC LDR X2, [X21]
	0x01C8D8F0 BL 0x24BDA64
	0x01C8D8F4 LDR X8, [X20 + 0xB8]
	0x01C8D8F8 CBZ X8, 0x1C8D95C
	0x01C8D8FC LDR X0, [X8 + 0x50]
	0x01C8D900 CBZ X0, 0x1C8D95C
	0x01C8D904 ADRP X22, 0x22C0000
	0x01C8D908 LDR X22, [X22 + 0x7A8]
	0x01C8D90C LDR W1, [X19 + 0x18]
	0x01C8D910 LDR X2, [X22]
	0x01C8D914 BL 0x24BDA64
	0x01C8D918 LDR X8, [X20 + 0xB8]
	0x01C8D91C CBZ X8, 0x1C8D95C
	0x01C8D920 LDR X0, [X8 + 0x58]
	0x01C8D924 CBZ X0, 0x1C8D95C
	0x01C8D928 LDR W1, [X19 + 0x1C]
	0x01C8D92C LDR X2, [X21]
	0x01C8D930 BL 0x24BDA64
	0x01C8D934 LDR X8, [X20 + 0xB8]
	0x01C8D938 CBZ X8, 0x1C8D95C
	0x01C8D93C LDR X0, [X8 + 0x60]
	0x01C8D940 CBZ X0, 0x1C8D95C
	0x01C8D944 LDR W1, [X19 + 0x20]
	0x01C8D948 LDR X2, [X22]
	0x01C8D94C LDP X20, X19, [X31 + 0x20]
	0x01C8D950 LDP X22, X21, [X31 + 0x10]
	0x01C8D954 LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2597000
	005 Move W8, [X20+952]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x22C1000
	012 Move X0, [X0+1840]
	013 Call 0x1B6F7F0
	014 Move W8, 1
	015 Move [X20+952], W8
	016 Compare X19, 0
	017 JumpIfEqual {51}
	018 Move X8, [X19]
	019 Move X0, X19
	020 Move X9, [X8+744]
	021 Move X1, [X8+752]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Compare X0, 0
	024 JumpIfEqual {51}
	025 Move X20, 0x22C1000
	026 Move X20, [X20+1840]
	027 Move X2, X31
	028 Move X19, X0
	029 Move X1, [X20]
	030 Call String.StartsWith, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {46}
	035 Move X8, [X20]
	036 Compare X8, 0
	037 JumpIfEqual {51}
	038 Move W1, [X8+16]
	039 Move X0, X19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X2, X31
	043 Move X30, [X31+32]
	044 Call String.Substring, X0, X1
	045 Return X0
	046 Move X0, X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Return X0
	051 Call 0x1B6FA1C

Method: System.Void .ctor()

Disassembly:
	0x01C8E784 BL 0x1B6E7F0
	0x01C8E788 MOVZ W8, 0x1

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.String <ToString>b__6_0(System.Reflection.FieldInfo p)

Disassembly:
	0x01C920A8 LDR X8, [X8 + 0x88]
	0x01C920AC CBZ X8, 0x1C921A8
	0x01C920B0 ADRP X9, 0x22BB000
	0x01C920B4 LDR X9, [X9 + 0xCD8]
	0x01C920B8 LDR X0, [X8 + 0x50]
	0x01C920BC MOV X2, X31
	0x01C920C0 LDR X1, [X9]
	0x01C920C4 BL 0x3084850
	0x01C920C8 TBZ X0, 0x0, 0x1C920F0
	0x01C920CC ADRP X8, 0x22BB000
	0x01C920D0 LDR X8, [X8 + 0xCD0]
	0x01C920D4 LDR X0, [X8]
	0x01C920D8 LDR W8, [X0 + 0xE0]
	0x01C920DC CBNZ W8, 0x1C920E4
	0x01C920E0 BL 0x1B6E8F8
	0x01C920E4 ADRP X8, 0x22BB000
	0x01C920E8 LDR X8, [X8 + 0xCE8]
	0x01C920EC B 0x1C92194
	0x01C920F0 LDR X0, [X19]
	0x01C920F4 LDR W8, [X0 + 0xE0]
	0x01C920F8 CBNZ W8, 0x1C92100
	0x01C920FC BL 0x1B6E8F8
	0x01C92100 LDRB W8, [X20 + 0x443]
	0x01C92104 CBNZ W8, 0x1C9211C
	0x01C92108 ADRP X0, 0x22BB000
	0x01C9210C LDR X0, [X0 + 0x4E8]
	0x01C92110 BL 0x1B6E7F0
	0x01C92114 MOVZ W8, 0x1
	0x01C92118 STRB W8, [X20 + 0x443]
	0x01C9211C LDR X0, [X19]
	0x01C92120 LDR W8, [X0 + 0xE0]
	0x01C92124 CBNZ W8, 0x1C92130
	0x01C92128 BL 0x1B6E8F8
	0x01C9212C LDR X0, [X19]
	0x01C92130 LDR X8, [X0 + 0xB8]
	0x01C92134 LDR X8, [X8]
	0x01C92138 CBZ X8, 0x1C921A8
	0x01C9213C LDR X8, [X8 + 0x88]
	0x01C92140 CBZ X8, 0x1C921A8
	0x01C92144 LDR X0, [X8 + 0x50]
	0x01C92148 ADRP X8, 0x22BB000
	0x01C9214C LDR X8, [X8 + 0x808]
	0x01C92150 MOV X2, X31
	0x01C92154 LDR X1, [X8]
	0x01C92158 BL 0x3084850
	0x01C9215C ADRP X8, 0x22BB000
	0x01C92160 LDR X8, [X8 + 0xCD0]
	0x01C92164 MOV W19, W0
	0x01C92168 LDR X8, [X8]
	0x01C9216C LDR W9, [X8 + 0xE0]
	0x01C92170 CBNZ W9, 0x1C9217C
	0x01C92174 MOV X0, X8
	0x01C92178 BL 0x1B6E8F8
	0x01C9217C ADRP X8, 0x22BB000
	0x01C92180 ADRP X9, 0x22BB000
	0x01C92184 LDR X8, [X8 + 0xCF0]
	0x01C92188 LDR X9, [X9 + 0xCE0]
	0x01C9218C ANDS W31, W19, 0x1
	0x01C92190 CSEL X8, X9, X8, NE
	0x01C92194 LDR X0, [X8]
	0x01C92198 LDP X20, X19, [X31 + 0x10]
	0x01C9219C MOV X1, X31
	0x01C921A0 LDR X30, [X31], #0x20
	0x01C921A4 B 0x342E064
	0x01C921A8 BL 0x1B6EA1C
	0x01C921AC STR X30, [X31 - 0x40]!
	0x01C921B0 STP X24, X23, [X31 + 0x10]
	0x01C921B4 STP X22, X21, [X31 + 0x20]
	0x01C921B8 STP X20, X19, [X31 + 0x30]
	0x01C921BC ADRP X19, 0x2591000
	0x01C921C0 ADRP X21, 0x22BB000
	0x01C921C4 LDRB W8, [X19 + 0x3C1]
	0x01C921C8 LDR X21, [X21 + 0x4E8]
	0x01C921CC TBNZ X8, 0x0, 0x1C92244
	0x01C921D0 ADRP X0, 0x22BB000
	0x01C921D4 LDR X0, [X0 + 0x4E8]
	0x01C921D8 BL 0x1B6E7F0
	0x01C921DC ADRP X0, 0x22BB000
	0x01C921E0 LDR X0, [X0 + 0xCF8]
	0x01C921E4 BL 0x1B6E7F0
	0x01C921E8 ADRP X0, 0x22BB000
	0x01C921EC LDR X0, [X0 + 0xC58]
	0x01C921F0 BL 0x1B6E7F0
	0x01C921F4 ADRP X0, 0x22BB000
	0x01C921F8 LDR X0, [X0 + 0x628]
	0x01C921FC BL 0x1B6E7F0
	0x01C92200 ADRP X0, 0x22BB000
	0x01C92204 LDR X0, [X0 + 0xBB8]
	0x01C92208 BL 0x1B6E7F0
	0x01C9220C ADRP X0, 0x22BB000
	0x01C92210 LDR X0, [X0 + 0xD00]
	0x01C92214 BL 0x1B6E7F0
	0x01C92218 ADRP X0, 0x22BB000
	0x01C9221C LDR X0, [X0 + 0xD08]
	0x01C92220 BL 0x1B6E7F0
	0x01C92224 ADRP X0, 0x22BB000
	0x01C92228 LDR X0, [X0 + 0xD10]
	0x01C9222C BL 0x1B6E7F0
	0x01C92230 ADRP X0, 0x22BB000
	0x01C92234 LDR X0, [X0 + 0xD18]
	0x01C92238 BL 0x1B6E7F0
	0x01C9223C MOVZ W8, 0x1
	0x01C92240 STRB W8, [X19 + 0x3C1]
	0x01C92244 LDR X0, [X21]
	0x01C92248 LDR W8, [X0 + 0xE0]
	0x01C9224C CBNZ W8, 0x1C92254
	0x01C92250 BL 0x1B6E8F8
	0x01C92254 ADRP X22, 0x2591000
	0x01C92258 LDRB W8, [X22 + 0x443]
	0x01C9225C CBNZ W8, 0x1C92274
	0x01C92260 ADRP X0, 0x22BB000
	0x01C92264 LDR X0, [X0 + 0x4E8]
	0x01C92268 BL 0x1B6E7F0
	0x01C9226C MOVZ W8, 0x1
	0x01C92270 STRB W8, [X22 + 0x443]
	0x01C92274 LDR X0, [X21]
	0x01C92278 LDR W8, [X0 + 0xE0]
	0x01C9227C CBNZ W8, 0x1C92288
	0x01C92280 BL 0x1B6E8F8
	0x01C92284 LDR X0, [X21]
	0x01C92288 LDR X8, [X0 + 0xB8]
	0x01C9228C LDR X8, [X8]
	0x01C92290 CBZ X8, 0x1C92570
	0x01C92294 ADRP X24, 0x22BB000
	0x01C92298 LDR X24, [X24 + 0xD00]
	0x01C9229C LDR X0, [X8 + 0x98]
	0x01C922A0 ADRP X23, 0x22BB000
	0x01C922A4 LDR X1, [X24]
	0x01C922A8 LDR X23, [X23 + 0x628]
	0x01C922AC BL 0x24B9848
	0x01C922B0 LDR X8, [X23]
	0x01C922B4 MOV W20, W0
	0x01C922B8 LDR W9, [X8 + 0xE0]
	0x01C922BC CBNZ W9, 0x1C922CC
	0x01C922C0 MOV X0, X8
	0x01C922C4 BL 0x1B6E8F8
	0x01C922C8 LDR X8, [X23]
	0x01C922CC LDR X8, [X8 + 0xB8]
	0x01C922D0 LDR X19, [X8 + 0x18]
	0x01C922D4 TBZ X20, 0x0, 0x1C923D8
	0x01C922D8 LDR X0, [X21]
	0x01C922DC LDR W8, [X0 + 0xE0]
	0x01C922E0 CBNZ W8, 0x1C922E8
	0x01C922E4 BL 0x1B6E8F8
	0x01C922E8 LDRB W8, [X22 + 0x443]
	0x01C922EC CBNZ W8, 0x1C92304
	0x01C922F0 ADRP X0, 0x22BB000
	0x01C922F4 LDR X0, [X0 + 0x4E8]
	0x01C922F8 BL 0x1B6E7F0
	0x01C922FC MOVZ W8, 0x1
	0x01C92300 STRB W8, [X22 + 0x443]
	0x01C92304 LDR X0, [X21]
	0x01C92308 LDR W8, [X0 + 0xE0]
	0x01C9230C CBNZ W8, 0x1C92318
	0x01C92310 BL 0x1B6E8F8
	0x01C92314 LDR X0, [X21]
	0x01C92318 LDR X8, [X0 + 0xB8]
	0x01C9231C LDR X8, [X8]
	0x01C92320 CBZ X8, 0x1C92570
	0x01C92324 LDR X8, [X8 + 0xA8]
	0x01C92328 CBZ X8, 0x1C92570
	0x01C9232C LDR X8, [X8 + 0x48]
	0x01C92330 CBZ X8, 0x1C92570
	0x01C92334 CBZ X19, 0x1C92570
	0x01C92338 LDR X2, [X8 + 0x50]
	0x01C9233C ADRP X8, 0x22BB000
	0x01C92340 ADRP X20, 0x22BB000
	0x01C92344 LDR X8, [X8 + 0xD10]
	0x01C92348 LDR X20, [X20 + 0xC58]
	0x01C9234C MOV X0, X19
	0x01C92350 LDR X1, [X8]
	0x01C92354 LDR X3, [X20]
	0x01C92358 BL 0x28FA294
	0x01C9235C LDR X8, [X23]
	0x01C92360 LDRB W9, [X22 + 0x443]
	0x01C92364 LDR X8, [X8 + 0xB8]
	0x01C92368 LDR X19, [X8 + 0x18]
	0x01C9236C CBNZ W9, 0x1C92384
	0x01C92370 ADRP X0, 0x22BB000
	0x01C92374 LDR X0, [X0 + 0x4E8]
	0x01C92378 BL 0x1B6E7F0
	0x01C9237C MOVZ W8, 0x1
	0x01C92380 STRB W8, [X22 + 0x443]
	0x01C92384 LDR X0, [X21]
	0x01C92388 LDR W8, [X0 + 0xE0]
	0x01C9238C CBNZ W8, 0x1C92398
	0x01C92390 BL 0x1B6E8F8
	0x01C92394 LDR X0, [X21]
	0x01C92398 LDR X8, [X0 + 0xB8]
	0x01C9239C LDR X8, [X8]
	0x01C923A0 CBZ X8, 0x1C92570
	0x01C923A4 LDR X8, [X8 + 0xA8]
	0x01C923A8 CBZ X8, 0x1C92570
	0x01C923AC LDR X8, [X8 + 0x50]
	0x01C923B0 CBZ X8, 0x1C92570
	0x01C923B4 CBZ X19, 0x1C92570
	0x01C923B8 LDR X2, [X8 + 0x50]
	0x01C923BC ADRP X8, 0x22BB000
	0x01C923C0 LDR X8, [X8 + 0xD08]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2592000
	009 Move W8, [X21+953]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {42}
	016 Move X0, 0x22BC000
	017 Move X0, [X0+3120]
	018 Call 0x1B6F7F0
	019 Move X0, 0x22BC000
	020 Move X0, [X0+3016]
	021 Call 0x1B6F7F0
	022 Move X0, 0x22BC000
	023 Move X0, [X0+3128]
	024 Call 0x1B6F7F0
	025 Move X0, 0x22BC000
	026 Move X0, [X0+3136]
	027 Call 0x1B6F7F0
	028 Move X0, 0x22BC000
	029 Move X0, [X0+1752]
	030 Call 0x1B6F7F0
	031 Move X0, 0x22BC000
	032 Move X0, [X0+3144]
	033 Call 0x1B6F7F0
	034 Move X0, 0x22BC000
	035 Move X0, [X0+3152]
	036 Call 0x1B6F7F0
	037 Move X0, 0x22BC000
	038 Move X0, [X0+1768]
	039 Call 0x1B6F7F0
	040 Move W8, 1
	041 Move [X21+953], W8
	042 Compare X19, 0
	043 JumpIfEqual {231}
	044 Move X8, [X19]
	045 Move X0, X19
	046 Move X9, [X8+600]
	047 Move X1, [X8+608]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move X21, X0
	050 Move X0, X19
	051 Call BaseAction.IsSecuritySensitiveField, X0
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {68}
	056 Move X8, [X19]
	057 Move X0, X19
	058 Move X9, [X8+424]
	059 Move X1, [X8+432]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Compare X0, 0
	062 JumpIfEqual {231}
	063 Move W1, 95
	064 Move X2, X31
	065 Call String.TrimStart, X0, X1
	066 Move X8, 0x22BC000
	067 Move X8, [X8+3144]
	068 Compare X21, 0
	069 JumpIfEqual {231}
	070 Move X0, X21
	071 Move X1, X31
	072 Call Type.get_IsArray, X0
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {120}
	077 Move X8, [X19]
	078 Move X0, X19
	079 Move X1, X20
	080 Move X9, [X8+712]
	081 Move X2, [X8+720]
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Compare X0, 0
	084 JumpIfEqual {97}
	085 Move X8, 0x22BC000
	086 Move X8, [X8+3120]
	087 Move X9, [X0]
	088 Move X20, X0
	089 Move X8, [X8]
	090 Move W11, [X9+304]
	091 Move W10, [X8+304]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X9, [X9+200]
	094 Add X9, X9, X10
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X8, [X19]
	098 Move X0, X19
	099 Move X9, [X8+424]
	100 Move X1, [X8+432]
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Compare X0, 0
	103 JumpIfEqual {231}
	104 Move W1, 95
	105 Move X2, X31
	106 Call String.TrimStart, X0, X1
	107 Move X8, 0x22BC000
	108 Move X8, [X8+3136]
	109 Move X1, [X8]
	110 Move X20, [X31+48]
	111 Move X19, [X31+56]
	112 Move X22, [X31+32]
	113 Move X21, [X31+40]
	114 Move X24, [X31+16]
	115 Move X23, [X31+24]
	116 Move X2, X31
	117 Move X30, [X31+64]
	118 Call String.Concat, X0, X1
	119 Return X0
	120 Move X8, [X19]
	121 Move X0, X19
	122 Move X9, [X8+424]
	123 Move X1, [X8+432]
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Compare X0, 0
	126 JumpIfEqual {231}
	127 Move W1, 95
	128 Move X2, X31
	129 Call String.TrimStart, X0, X1
	130 Move X8, [X19]
	131 Move X21, X0
	132 Move X0, X19
	133 Move X1, X20
	134 Move X9, [X8+712]
	135 Move X2, [X8+720]
	136 NotImplemented "Instruction BLR not yet implemented."
	137 Move X8, 0x22BC000
	138 Move X8, [X8+3128]
	139 Move X1, X21
	140 Move X20, [X31+48]
	141 Move X19, [X31+56]
	142 Move X22, [X31+32]
	143 Move X21, [X31+40]
	144 Move X8, [X8]
	145 Move X24, [X31+16]
	146 Move X23, [X31+24]
	147 Move X2, X0
	148 Move X3, X31
	149 Move X0, X8
	150 Move X30, [X31+64]
	151 Call String.Format, X0, X1, X2
	152 Return X0
	153 Move X0, X20
	154 Move X1, X31
	155 Call Array.get_Length, X0
	156 Move X8, 0x22BC000
	157 Move X8, [X8+3016]
	158 Move W1, W0
	159 Move X8, [X8]
	160 Move X0, X8
	161 Call 0x1B6F868
	162 Move X21, X0
	163 Move X0, X20
	164 Move X1, X31
	165 Call Array.get_Length, X0
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X22, X31
	168 Move X23, X31
	169 Add X24, X21, 32
	170 Move X0, X20
	171 Move W1, W22
	172 Move X2, X31
	173 Call Array.GetValue, X0, X1
	174 NotImplemented "Instruction CMP not yet implemented."
	175 NotImplemented "Instruction CSEL not yet implemented."
	176 Compare X0, 0
	177 JumpIfEqual {185}
	178 Compare X23, 0
	179 JumpIfEqual {231}
	180 Move X8, [X23]
	181 Move X0, X23
	182 Move X9, [X8+360]
	183 Move X1, [X8+368]
	184 NotImplemented "Instruction BLR not yet implemented."
	185 Compare X21, 0
	186 JumpIfEqual {231}
	187 Move W8, [X21+24]
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move [X24], X0
	190 Move X0, X20
	191 Move X1, X31
	192 Add X22, X22, 1
	193 Call Array.get_Length, X0
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move X8, [X19]
	196 Move X0, X19
	197 Move X9, [X8+424]
	198 Move X1, [X8+432]
	199 NotImplemented "Instruction BLR not yet implemented."
	200 Compare X0, 0
	201 JumpIfEqual {231}
	202 Move W1, 95
	203 Move X2, X31
	204 Call String.TrimStart, X0, X1
	205 Move X8, 0x22BC000
	206 Move X8, [X8+1752]
	207 Move X19, X0
	208 Move X1, X21
	209 Move X2, X31
	210 Move X8, [X8]
	211 Move X0, X8
	212 Call String.Join, X0, X1
	213 Move X8, 0x22BC000
	214 Move X9, 0x22BC000
	215 Move X8, [X8+3152]
	216 Move X9, [X9+1768]
	217 Move X2, X0
	218 Move X0, X19
	219 Move X1, [X8]
	220 Move X3, [X9]
	221 Move X20, [X31+48]
	222 Move X19, [X31+56]
	223 Move X22, [X31+32]
	224 Move X21, [X31+40]
	225 Move X24, [X31+16]
	226 Move X23, [X31+24]
	227 Move X4, X31
	228 Move X30, [X31+64]
	229 Call String.Concat, X0, X1, X2, X3
	230 Return X0
	231 Call 0x1B6FA1C
	232 Call 0x1B6FA24

