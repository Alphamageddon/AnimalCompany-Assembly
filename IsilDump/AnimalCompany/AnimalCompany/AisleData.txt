Type: AnimalCompany.AisleData

Method: System.Void .ctor(UnityEngine.Vector3 center, UnityEngine.Vector3 direction, UnityEngine.Vector3[] endPoints, System.Single stayOffset)

Disassembly:
	0x01DD60BC STRB W8, [X20 + 0x85B]
	0x01DD60C0 CBZ X21, 0x1DD685C
	0x01DD60C4 ADRP X20, 0x231D000
	0x01DD60C8 LDR X20, [X20 + 0x5A0]
	0x01DD60CC LDR V0, [X19 + 0x90]
	0x01DD60D0 MOV X0, X21
	0x01DD60D4 MOV X1, X31
	0x01DD60D8 LDR X8, [X20]
	0x01DD60DC LDR X8, [X8 + 0xB8]
	0x01DD60E0 LDP S3, S1, [X8 + 0x10]
	0x01DD60E4 LDR V4, [X8 + 0xC]
	0x01DD60E8 FMUL S2, S0, S1
	0x01DD60EC FMUL S1, S0, S3
	0x01DD60F0 FMUL S0, S0, S4
	0x01DD60F4 BL 0x3C3FC4C
	0x01DD60F8 LDR X0, [X19 + 0xC0]
	0x01DD60FC CBZ X0, 0x1DD685C
	0x01DD6100 MOV X1, X31
	0x01DD6104 BL 0x3C873AC
	0x01DD6108 LDR X0, [X19 + 0x40]
	0x01DD610C CBZ X0, 0x1DD6800
	0x01DD6110 LDRB W8, [X0 + 0x60]
	0x01DD6114 TBNZ X8, 0x1, 0x1DD6800
	0x01DD6118 MOV X1, X31
	0x01DD611C BL 0x1E93668
	0x01DD6120 TBZ X0, 0x0, 0x1DD6800
	0x01DD6124 LDR W8, [X19 + 0x88]
	0x01DD6128 CBZ W8, 0x1DD61B0
	0x01DD612C MOV X0, X19
	0x01DD6130 BL 0x1DD5D78
	0x01DD6134 MOV X0, X19
	0x01DD6138 MOV V8.16B, V0.16B
	0x01DD613C MOV V9.16B, V1.16B
	0x01DD6140 MOV V10.16B, V2.16B
	0x01DD6144 BL 0x1DD5E40
	0x01DD6148 LDR W0, [X19 + 0xA4]
	0x01DD614C LDR V13, [X19 + 0x90]
	0x01DD6150 MOV X1, X31
	0x01DD6154 MOV V11.16B, V0.16B
	0x01DD6158 MOV V12.16B, V1.16B
	0x01DD615C MOV V14.16B, V2.16B
	0x01DD6160 BL 0x3C35CB8
	0x01DD6164 ADRP X8, 0x231D000
	0x01DD6168 LDR X8, [X8 + 0x5F8]
	0x01DD616C MOV W21, W0
	0x01DD6170 LDR X8, [X8]
	0x01DD6174 LDR W9, [X8 + 0xE0]
	0x01DD6178 CBNZ W9, 0x1DD6184
	0x01DD617C MOV X0, X8
	0x01DD6180 BL 0x1C16DFC
	0x01DD6184 MOV V0.16B, V8.16B
	0x01DD6188 MOV V1.16B, V9.16B
	0x01DD618C MOV V2.16B, V10.16B
	0x01DD6190 MOV V3.16B, V11.16B
	0x01DD6194 MOV V4.16B, V12.16B
	0x01DD6198 MOV V5.16B, V14.16B
	0x01DD619C MOV V6.16B, V13.16B
	0x01DD61A0 MOV W0, W21
	0x01DD61A4 MOV X1, X31
	0x01DD61A8 BL 0x3C8CE24
	0x01DD61AC B 0x1DD6228
	0x01DD61B0 MOV X0, X19
	0x01DD61B4 MOV X1, X31
	0x01DD61B8 BL 0x3C32E90
	0x01DD61BC CBZ X0, 0x1DD685C
	0x01DD61C0 MOV X1, X31
	0x01DD61C4 BL 0x3C3F58C
	0x01DD61C8 LDP S3, S4, [X19 + 0x98]
	0x01DD61CC LDR V5, [X19 + 0xA0]
	0x01DD61D0 LDR W0, [X19 + 0xA4]
	0x01DD61D4 LDR V8, [X19 + 0x90]
	0x01DD61D8 MOV X1, X31
	0x01DD61DC FADD S11, S0, S3
	0x01DD61E0 FADD S10, S1, S4
	0x01DD61E4 FADD S9, S2, S5
	0x01DD61E8 BL 0x3C35CB8
	0x01DD61EC ADRP X8, 0x231D000
	0x01DD61F0 LDR X8, [X8 + 0x5F8]
	0x01DD61F4 MOV W21, W0
	0x01DD61F8 LDR X8, [X8]
	0x01DD61FC LDR W9, [X8 + 0xE0]
	0x01DD6200 CBNZ W9, 0x1DD620C
	0x01DD6204 MOV X0, X8
	0x01DD6208 BL 0x1C16DFC
	0x01DD620C MOV V0.16B, V11.16B
	0x01DD6210 MOV V1.16B, V10.16B
	0x01DD6214 MOV V2.16B, V9.16B
	0x01DD6218 MOV V3.16B, V8.16B
	0x01DD621C MOV W0, W21
	0x01DD6220 MOV X1, X31
	0x01DD6224 BL 0x3C8D090
	0x01DD6228 MOV X21, X0
	0x01DD622C CBZ X0, 0x1DD685C
	0x01DD6230 LDR X8, [X21 + 0x18]
	0x01DD6234 CMP W8, 0x1
	0x01DD6238 B.LT 0x1DD67E4
	0x01DD623C ADRP X9, 0xFFFFFFFFFED14000
	0x01DD6240 LDR V0, [X9 + 0x17C]
	0x01DD6244 ADRP X27, 0x231D000
	0x01DD6248 ADRP X28, 0x2322000
	0x01DD624C ADRP X10, 0xFFFFFFFFFED14000
	0x01DD6250 LDR X27, [X27 + 0x5F0]
	0x01DD6254 LDR X28, [X28 + 0x848]
	0x01DD6258 STR S0, [X31 + 0x8]
	0x01DD625C LDR V0, [X10 + 0x2B0]
	0x01DD6260 MOV X29, X31
	0x01DD6264 AND X8, X8, 0x0
	0x01DD6268 STR S0, [X31 + 0xC]
	0x01DD626C CMP X29, W8, UXTW
	0x01DD6270 B.CS 0x1DD6860
	0x01DD6274 ADD X8, X21, X29, 0x3, LSL
	0x01DD6278 LDRB W9, [X19 + 0x8C]
	0x01DD627C LDR X23, [X8 + 0x20]
	0x01DD6280 TBNZ X9, 0x0, 0x1DD6334
	0x01DD6284 LDRB W8, [X19 + 0x8C]
	0x01DD6288 TBZ X8, 0x1, 0x1DD6778
	0x01DD628C LDR X8, [X19 + 0xE0]
	0x01DD6290 CBZ X8, 0x1DD685C
	0x01DD6294 LDP W2, W9, [X8 + 0x18]
	0x01DD6298 ADD W9, W9, 0x1
	0x01DD629C CMP W2, 0x1
	0x01DD62A0 STP W31, W9, [X8 + 0x18]
	0x01DD62A4 B.LT 0x1DD62B8
	0x01DD62A8 LDR X0, [X8 + 0x10]
	0x01DD62AC MOV W1, W31
	0x01DD62B0 MOV X3, X31
	0x01DD62B4 BL 0x339FA34
	0x01DD62B8 ADD X1, X31, 0x20
	0x01DD62BC MOV X0, X23
	0x01DD62C0 MOV X2, X31
	0x01DD62C4 BL 0x1E02E94
	0x01DD62C8 TBZ X0, 0x0, 0x1DD6778
	0x01DD62CC LDR X0, [X19 + 0xE0]
	0x01DD62D0 CBZ X0, 0x1DD685C
	0x01DD62D4 LDR X1, [X31 + 0x20]
	0x01DD62D8 LDR X2, [X27]
	0x01DD62DC BL 0x301C318
	0x01DD62E0 TBNZ X0, 0x0, 0x1DD6778
	0x01DD62E4 LDR X0, [X19 + 0xE0]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], D11
	003 Move [X31+56], D10
	004 Move [X31+64], D9
	005 Move [X31+72], D8
	006 Move [X31+80], X30
	007 Move [X31+96], X22
	008 Move [X31+104], X21
	009 Move [X31+112], X20
	010 Move [X31+120], X19
	011 Move [X31], D6
	012 Move [X31+16], D1
	013 Move X22, 0x2603000
	014 Move X21, 0x2320000
	015 Move W8, [X22+3120]
	016 Move X21, [X21+2480]
	017 Move X19, X1
	018 Move V9, V5
	019 Move V10, V4
	020 Move V11, V3
	021 Move V8, V2
	022 Move X20, X0
	023 Move [X31+2], V0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {34}
	028 Move X0, 0x2320000
	029 Move X0, [X0+2480]
	030 Call 0x1C17CF4
	031 Move V0, [X31+2]
	032 Move W8, 1
	033 Move [X22+3120], W8
	034 Move [X20], S0
	035 Move V0, [X31+1]
	036 Move [X20+12], S11
	037 Move [X20+20], S10
	038 Move [X20+20], S9
	039 Move W1, 2
	040 Move [X20+4], S0
	041 Move [X20+12], S8
	042 Move X0, [X21]
	043 Call 0x1C17D6C
	044 Move [X20+24], X0
	045 Move X0, [X21]
	046 Move W1, 2
	047 Call 0x1C17D6C
	048 Move [X20+32], X0
	049 Compare X19, 0
	050 JumpIfEqual {160}
	051 Move W8, [X19+24]
	052 Compare W8, 0
	053 JumpIfEqual {159}
	054 Move X8, [X20+24]
	055 Compare X8, 0
	056 JumpIfEqual {160}
	057 Move W9, [X8+24]
	058 Compare W9, 0
	059 JumpIfEqual {159}
	060 Move V0, [X19+32]
	061 Move V1, [X19+40]
	062 Move [X8+32], D0
	063 Move [X8+40], S1
	064 Move W8, [X19+24]
	065 Compare W8, 0
	066 JumpIfEqual {159}
	067 Move X22, 0x2603000
	068 Move V1, [X31+16]
	069 Move V0, [X31+32]
	070 Move V9, [X19+32]
	071 Move W8, [X22+1925]
	072 Move V11, [X19+40]
	073 Move V0.S[1], V1.S[0]
	074 Compare W8, 0
	075 JumpIfNotEqual {83}
	076 Move X0, 0x231E000
	077 Move X0, [X0+1448]
	078 Move [X31+2], V0
	079 Call 0x1C17CF4
	080 Move V0, [X31+2]
	081 Move W8, 1
	082 Move [X22+1925], W8
	083 Move X8, 0x231E000
	084 Move X8, [X8+1448]
	085 Subtract V10, V0, V9
	086 Subtract S9, S8, S11
	087 Move X0, [X8]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Move X8, -19836928
	093 NotImplemented "Instruction INVALID not yet implemented."
	094 Move V1, [X8+380]
	095 NotImplemented "Instruction FADDP not yet implemented."
	096 Multiply S2, S9, S9
	097 Add S0, S2, S0
	098 NotImplemented "Instruction FSQRT not yet implemented."
	099 NotImplemented "Instruction FCMP not yet implemented."
	100 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	101 NotImplemented "Instruction INVALID not yet implemented."
	102 NotImplemented "Instruction FDIV not yet implemented."
	103 Move X22, 0x2603000
	104 Move W8, [X22+1923]
	105 Compare W8, 0
	106 JumpIfNotEqual {112}
	107 Move X0, 0x231E000
	108 Move X0, [X0+1440]
	109 Call 0x1C17CF4
	110 Move W8, 1
	111 Move [X22+1923], W8
	112 Move X8, 0x231E000
	113 Move X8, [X8+1440]
	114 Move X8, [X8]
	115 Move X8, [X8+184]
	116 Move V8, [X8]
	117 Move V9, [X8+8]
	118 Move X0, [X21]
	119 Move W1, 2
	120 Call 0x1C17D6C
	121 Move W8, [X19+24]
	122 Compare W8, 0
	123 JumpIfEqual {159}
	124 Compare X0, 0
	125 JumpIfEqual {160}
	126 Move W8, [X0+24]
	127 Compare W8, 0
	128 JumpIfEqual {159}
	129 Move V1, [X31]
	130 Move V2, [X19+32]
	131 Move V3, [X19+40]
	132 NotImplemented "Instruction INVALID not yet implemented."
	133 Multiply S1, S9, S1
	134 Add V2, V0, V2
	135 Add S3, S1, S3
	136 Move [X0+32], D2
	137 Move [X0+40], S3
	138 Move W9, [X19+24]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move V2, [X19+52]
	142 NotImplemented "Instruction LDUR not yet implemented."
	143 Move X22, [X31+96]
	144 Move X21, [X31+104]
	145 Move X30, [X31+80]
	146 Subtract S1, S2, S1
	147 Subtract V0, V3, V0
	148 Move [X0+44], D0
	149 Move [X0+52], S1
	150 Move [X20+32], X0
	151 Move X20, [X31+112]
	152 Move X19, [X31+120]
	153 Move D9, [X31+64]
	154 Move D8, [X31+72]
	155 Move D11, [X31+48]
	156 Move D10, [X31+56]
	157 Add X31, X31, 128
	158 Return 
	159 Call 0x1C17F28
	160 Call 0x1C17F20

