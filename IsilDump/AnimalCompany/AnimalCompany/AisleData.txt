Type: AnimalCompany.AisleData

Method: System.Void .ctor(UnityEngine.Vector3 center, UnityEngine.Vector3 direction, UnityEngine.Vector3[] endPoints, System.Single stayOffset)

Disassembly:
	0x01CD1D1C LDRB W8, [X0 + 0x60]
	0x01CD1D20 TBNZ X8, 0x1, 0x1CD21D0
	0x01CD1D24 MOV X1, X31
	0x01CD1D28 BL 0x1D9E780
	0x01CD1D2C TBZ X0, 0x0, 0x1CD21D0
	0x01CD1D30 LDR W8, [X19 + 0x80]
	0x01CD1D34 CBZ W8, 0x1CD1DBC
	0x01CD1D38 MOV X0, X19
	0x01CD1D3C BL 0x1CD19D8
	0x01CD1D40 MOV X0, X19
	0x01CD1D44 MOV V8.16B, V0.16B
	0x01CD1D48 MOV V9.16B, V1.16B
	0x01CD1D4C MOV V10.16B, V2.16B
	0x01CD1D50 BL 0x1CD1AA0
	0x01CD1D54 LDR W0, [X19 + 0xB8]
	0x01CD1D58 LDR V13, [X19 + 0x90]
	0x01CD1D5C MOV X1, X31
	0x01CD1D60 MOV V11.16B, V0.16B
	0x01CD1D64 MOV V12.16B, V1.16B
	0x01CD1D68 MOV V14.16B, V2.16B
	0x01CD1D6C BL 0x3A9DE68
	0x01CD1D70 ADRP X8, 0x227C000
	0x01CD1D74 LDR X8, [X8 + 0x4C0]
	0x01CD1D78 MOV W21, W0
	0x01CD1D7C LDR X8, [X8]
	0x01CD1D80 LDR W9, [X8 + 0xE0]
	0x01CD1D84 CBNZ W9, 0x1CD1D90
	0x01CD1D88 MOV X0, X8
	0x01CD1D8C BL 0x1B6E8F8
	0x01CD1D90 MOV V0.16B, V8.16B
	0x01CD1D94 MOV V1.16B, V9.16B
	0x01CD1D98 MOV V2.16B, V10.16B
	0x01CD1D9C MOV V3.16B, V11.16B
	0x01CD1DA0 MOV V4.16B, V12.16B
	0x01CD1DA4 MOV V5.16B, V14.16B
	0x01CD1DA8 MOV V6.16B, V13.16B
	0x01CD1DAC MOV W0, W21
	0x01CD1DB0 MOV X1, X31
	0x01CD1DB4 BL 0x3AF5080
	0x01CD1DB8 B 0x1CD1E34
	0x01CD1DBC MOV X0, X19
	0x01CD1DC0 MOV X1, X31
	0x01CD1DC4 BL 0x3A9B084
	0x01CD1DC8 CBZ X0, 0x1CD2228
	0x01CD1DCC MOV X1, X31
	0x01CD1DD0 BL 0x3AA7658
	0x01CD1DD4 LDP S3, S4, [X19 + 0x98]
	0x01CD1DD8 LDR V5, [X19 + 0xA0]
	0x01CD1DDC LDR W0, [X19 + 0xB8]
	0x01CD1DE0 LDR V8, [X19 + 0x90]
	0x01CD1DE4 MOV X1, X31
	0x01CD1DE8 FADD S11, S0, S3
	0x01CD1DEC FADD S10, S1, S4
	0x01CD1DF0 FADD S9, S2, S5
	0x01CD1DF4 BL 0x3A9DE68
	0x01CD1DF8 ADRP X8, 0x227C000
	0x01CD1DFC LDR X8, [X8 + 0x4C0]
	0x01CD1E00 MOV W21, W0
	0x01CD1E04 LDR X8, [X8]
	0x01CD1E08 LDR W9, [X8 + 0xE0]
	0x01CD1E0C CBNZ W9, 0x1CD1E18
	0x01CD1E10 MOV X0, X8
	0x01CD1E14 BL 0x1B6E8F8
	0x01CD1E18 MOV V0.16B, V11.16B
	0x01CD1E1C MOV V1.16B, V10.16B
	0x01CD1E20 MOV V2.16B, V9.16B
	0x01CD1E24 MOV V3.16B, V8.16B
	0x01CD1E28 MOV W0, W21
	0x01CD1E2C MOV X1, X31
	0x01CD1E30 BL 0x3AF52EC
	0x01CD1E34 MOV X21, X0
	0x01CD1E38 CBZ X0, 0x1CD2228
	0x01CD1E3C LDR W8, [X21 + 0x18]
	0x01CD1E40 CMP W8, 0x1
	0x01CD1E44 B.LT 0x1CD21B4
	0x01CD1E48 ADRP X9, 0xFFFFFFFFFEDD8000
	0x01CD1E4C LDR V0, [X9 + 0xB64]
	0x01CD1E50 ADRP X28, 0x227C000
	0x01CD1E54 ADRP X29, 0x227D000
	0x01CD1E58 LDR X28, [X28 + 0x478]
	0x01CD1E5C LDR X29, [X29 + 0x2A0]
	0x01CD1E60 STR S0, [X31 + 0xC]
	0x01CD1E64 ADRP X22, 0x227C000
	0x01CD1E68 LDR X22, [X22 + 0x488]
	0x01CD1E6C MOV W27, W31
	0x01CD1E70 CMP W27, W8
	0x01CD1E74 B.CS 0x1CD222C
	0x01CD1E78 ADD X8, X21, W27, 0x3, SXTW
	0x01CD1E7C LDR X26, [X8 + 0x20]
	0x01CD1E80 CBZ X26, 0x1CD2228
	0x01CD1E84 MOV X0, X26
	0x01CD1E88 MOV X1, X31
	0x01CD1E8C BL 0x3A9B0C0
	0x01CD1E90 MOV X23, X0
	0x01CD1E94 MOV X0, X26
	0x01CD1E98 MOV X1, X31
	0x01CD1E9C BL 0x3AF6430
	0x01CD1EA0 LDR X8, [X28]
	0x01CD1EA4 MOV X24, X0
	0x01CD1EA8 LDR W9, [X8 + 0xE0]
	0x01CD1EAC CBNZ W9, 0x1CD1EB8
	0x01CD1EB0 MOV X0, X8
	0x01CD1EB4 BL 0x1B6E8F8
	0x01CD1EB8 MOV X0, X24
	0x01CD1EBC MOV X1, X31
	0x01CD1EC0 MOV X2, X31
	0x01CD1EC4 BL 0x3A9D6EC
	0x01CD1EC8 TBZ X0, 0x0, 0x1CD1EE8
	0x01CD1ECC MOV X0, X26
	0x01CD1ED0 MOV X1, X31
	0x01CD1ED4 BL 0x3AF6430
	0x01CD1ED8 CBZ X0, 0x1CD2228
	0x01CD1EDC MOV X1, X31
	0x01CD1EE0 BL 0x3A9B0C0
	0x01CD1EE4 MOV X23, X0
	0x01CD1EE8 CBZ X23, 0x1CD2228
	0x01CD1EEC LDR X1, [X29]
	0x01CD1EF0 MOV X0, X23
	0x01CD1EF4 BL 0x20CF4D0
	0x01CD1EF8 CBZ X0, 0x1CD2040
	0x01CD1EFC LDR W24, [X19 + 0xA4]
	0x01CD1F00 MOV X23, X0
	0x01CD1F04 MOV X0, X19
	0x01CD1F08 MOV X1, X31
	0x01CD1F0C BL 0x3A9B084
	0x01CD1F10 CBZ X0, 0x1CD2228
	0x01CD1F14 MOV X1, X31
	0x01CD1F18 BL 0x3AA7658
	0x01CD1F1C LDR X25, [X19 + 0xB0]
	0x01CD1F20 MOV X0, X26
	0x01CD1F24 MOV X1, X31
	0x01CD1F28 MOV V8.16B, V0.16B
	0x01CD1F2C MOV V9.16B, V1.16B
	0x01CD1F30 MOV V10.16B, V2.16B
	0x01CD1F34 BL 0x3A9B0C0
	0x01CD1F38 CBZ X0, 0x1CD2228
	0x01CD1F3C MOV X1, X31
	0x01CD1F40 BL 0x3A9D8EC
	0x01CD1F44 CBZ X0, 0x1CD2228

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], D11
	003 Move [X31+56], D10
	004 Move [X31+64], D9
	005 Move [X31+72], D8
	006 Move [X31+80], X30
	007 Move [X31+96], X22
	008 Move [X31+104], X21
	009 Move [X31+112], X20
	010 Move [X31+120], X19
	011 Move [X31], D6
	012 Move [X31+16], D1
	013 Move X22, 0x2553000
	014 Move X21, 0x227F000
	015 Move W8, [X22+1486]
	016 Move X21, [X21+720]
	017 Move X19, X1
	018 Move V9, V5
	019 Move V10, V4
	020 Move V11, V3
	021 Move V8, V2
	022 Move X20, X0
	023 Move [X31+2], V0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {34}
	028 Move X0, 0x227F000
	029 Move X0, [X0+720]
	030 Call 0x1B6F7F0
	031 Move V0, [X31+2]
	032 Move W8, 1
	033 Move [X22+1486], W8
	034 Move [X20], S0
	035 Move V0, [X31+1]
	036 Move [X20+12], S11
	037 Move [X20+20], S10
	038 Move [X20+20], S9
	039 Move W1, 2
	040 Move [X20+4], S0
	041 Move [X20+12], S8
	042 Move X0, [X21]
	043 Call 0x1B6F868
	044 Move [X20+24], X0
	045 Move X0, [X21]
	046 Move W1, 2
	047 Call 0x1B6F868
	048 Move [X20+32], X0
	049 Compare X19, 0
	050 JumpIfEqual {160}
	051 Move W8, [X19+24]
	052 Compare W8, 0
	053 JumpIfEqual {159}
	054 Move X8, [X20+24]
	055 Compare X8, 0
	056 JumpIfEqual {160}
	057 Move W9, [X8+24]
	058 Compare W9, 0
	059 JumpIfEqual {159}
	060 Move V0, [X19+32]
	061 Move V1, [X19+40]
	062 Move [X8+32], D0
	063 Move [X8+40], S1
	064 Move W8, [X19+24]
	065 Compare W8, 0
	066 JumpIfEqual {159}
	067 Move X22, 0x2553000
	068 Move V1, [X31+16]
	069 Move V0, [X31+32]
	070 Move V9, [X19+32]
	071 Move W8, [X22+1089]
	072 Move V11, [X19+40]
	073 Move V0.S[1], V1.S[0]
	074 Compare W8, 0
	075 JumpIfNotEqual {83}
	076 Move X0, 0x227D000
	077 Move X0, [X0+1160]
	078 Move [X31+2], V0
	079 Call 0x1B6F7F0
	080 Move V0, [X31+2]
	081 Move W8, 1
	082 Move [X22+1089], W8
	083 Move X8, 0x227D000
	084 Move X8, [X8+1160]
	085 Subtract V10, V0, V9
	086 Subtract S9, S8, S11
	087 Move X0, [X8]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1B6F8F8
	092 Move X8, -19034112
	093 NotImplemented "Instruction INVALID not yet implemented."
	094 Move V1, [X8+2916]
	095 NotImplemented "Instruction FADDP not yet implemented."
	096 Multiply S2, S9, S9
	097 Add S0, S2, S0
	098 NotImplemented "Instruction FSQRT not yet implemented."
	099 NotImplemented "Instruction FCMP not yet implemented."
	100 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	101 NotImplemented "Instruction INVALID not yet implemented."
	102 NotImplemented "Instruction FDIV not yet implemented."
	103 Move X22, 0x2553000
	104 Move W8, [X22+1087]
	105 Compare W8, 0
	106 JumpIfNotEqual {112}
	107 Move X0, 0x227D000
	108 Move X0, [X0+1152]
	109 Call 0x1B6F7F0
	110 Move W8, 1
	111 Move [X22+1087], W8
	112 Move X8, 0x227D000
	113 Move X8, [X8+1152]
	114 Move X8, [X8]
	115 Move X8, [X8+184]
	116 Move V8, [X8]
	117 Move V9, [X8+8]
	118 Move X0, [X21]
	119 Move W1, 2
	120 Call 0x1B6F868
	121 Move W8, [X19+24]
	122 Compare W8, 0
	123 JumpIfEqual {159}
	124 Compare X0, 0
	125 JumpIfEqual {160}
	126 Move W8, [X0+24]
	127 Compare W8, 0
	128 JumpIfEqual {159}
	129 Move V1, [X31]
	130 Move V2, [X19+32]
	131 Move V3, [X19+40]
	132 NotImplemented "Instruction INVALID not yet implemented."
	133 Multiply S1, S9, S1
	134 Add V2, V0, V2
	135 Add S3, S1, S3
	136 Move [X0+32], D2
	137 Move [X0+40], S3
	138 Move W9, [X19+24]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move V2, [X19+52]
	142 NotImplemented "Instruction LDUR not yet implemented."
	143 Move X22, [X31+96]
	144 Move X21, [X31+104]
	145 Move X30, [X31+80]
	146 Subtract S1, S2, S1
	147 Subtract V0, V3, V0
	148 Move [X0+44], D0
	149 Move [X0+52], S1
	150 Move [X20+32], X0
	151 Move X20, [X31+112]
	152 Move X19, [X31+120]
	153 Move D9, [X31+64]
	154 Move D8, [X31+72]
	155 Move D11, [X31+48]
	156 Move D10, [X31+56]
	157 Add X31, X31, 128
	158 Return 
	159 Call 0x1B6FA24
	160 Call 0x1B6FA1C

