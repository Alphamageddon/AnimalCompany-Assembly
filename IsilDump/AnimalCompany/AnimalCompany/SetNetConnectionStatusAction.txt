Type: AnimalCompany.SetNetConnectionStatusAction

Method: System.Void .ctor(Fusion.NetworkRunner/States state, System.String message)

Disassembly:
	0x01DBAFE8 MOV X21, X0
	0x01DBAFEC CBNZ W8, 0x1DBB000
	0x01DBAFF0 ADRP X0, 0x2339000
	0x01DBAFF4 LDR X0, [X0 + 0x648]
	0x01DBAFF8 BL 0x1C16CF4
	0x01DBAFFC STRB W22, [X26 + 0x787]
	0x01DBB000 LDR X0, [X23]
	0x01DBB004 LDR W8, [X0 + 0xE0]
	0x01DBB008 CBNZ W8, 0x1DBB014
	0x01DBB00C BL 0x1C16DFC
	0x01DBB010 LDR X0, [X23]
	0x01DBB014 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W20, W1
	006 Move X1, X31
	007 Move X19, X2
	008 Move X21, X0
	009 Call BaseAction..ctor, X0
	010 Move [X21+20], W20
	011 Move [X21+24], X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return 

Method: System.Void Execute(AnimalCompany.AppState state)

Disassembly:
	0x01DBB018 LDR X8, [X8]
	0x01DBB01C CBZ X8, 0x1DBB124
	0x01DBB020 CBZ X21, 0x1DBB124
	0x01DBB024 LDR X22, [X8 + 0x60]
	0x01DBB028 CBZ X22, 0x1DBB040
	0x01DBB02C LDR X8, [X21]
	0x01DBB030 MOV X0, X22
	0x01DBB034 LDR X1, [X8 + 0x40]
	0x01DBB038 BL 0x1C16E00
	0x01DBB03C CBZ X0, 0x1DBB12C
	0x01DBB040 LDR W8, [X21 + 0x18]
	0x01DBB044 CBZ W8, 0x1DBB128
	0x01DBB048 ADRP X27, 0x233C000
	0x01DBB04C LDR X27, [X27 + 0xDA0]
	0x01DBB050 MOV X0, X20
	0x01DBB054 MOV X1, X21
	0x01DBB058 MOV X2, X31
	0x01DBB05C STR X22, [X21 + 0x20]
	0x01DBB060 BL 0x1D363F0
	0x01DBB064 LDR X0, [X25]
	0x01DBB068 BL 0x1C16F10
	0x01DBB06C LDR X2, [X27]
	0x01DBB070 MOV X1, X19
	0x01DBB074 MOV X3, X31
	0x01DBB078 MOV X20, X0
	0x01DBB07C BL 0x35C52F0
	0x01DBB080 LDR X0, [X24]
	0x01DBB084 MOVZ W1, 0x1
	0x01DBB088 MOVZ W21, 0x1
	0x01DBB08C BL 0x1C16D6C
	0x01DBB090 LDRB W8, [X26 + 0x787]
	0x01DBB094 MOV X19, X0
	0x01DBB098 CBNZ W8, 0x1DBB0AC
	0x01DBB09C ADRP X0, 0x2338000
	0x01DBB0A0 LDR X0, [X0 + 0x648]
	0x01DBB0A4 BL 0x1C16CF4
	0x01DBB0A8 STRB W21, [X26 + 0x787]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x261E000
	006 Move W8, [X21+2864]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x233D000
	014 Move X0, [X0+3352]
	015 Call 0x1C17CF4
	016 Move X0, 0x2339000
	017 Move X0, [X0+2304]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2864], W8
	021 Compare X20, 0
	022 JumpIfEqual {50}
	023 Move X8, [X20+232]
	024 Compare X8, 0
	025 JumpIfEqual {50}
	026 Move X0, [X8+72]
	027 Compare X0, 0
	028 JumpIfEqual {50}
	029 Move X8, 0x233D000
	030 Move X8, [X8+3352]
	031 Move W1, [X19+20]
	032 Move X2, [X8]
	033 Call StatePrimitive`1<Int32Enum>.set_value, X0, X1
	034 Move X8, [X20+232]
	035 Compare X8, 0
	036 JumpIfEqual {50}
	037 Move X0, [X8+80]
	038 Compare X0, 0
	039 JumpIfEqual {50}
	040 Move X8, 0x2339000
	041 Move X8, [X8+2304]
	042 Move X1, [X19+24]
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X2, [X8]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Call StatePrimitive`1<Object>.set_value, X0, X1
	049 Return 
	050 Call 0x1C17F20

