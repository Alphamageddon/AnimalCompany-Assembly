Type: AnimalCompany.AuthCommands/<AuthenticateWithDevice>d__8

Method: System.Void MoveNext()

Disassembly:
	0x01C94D60 B.NE 0x1C94D4C
	0x01C94D64 MOVZ W2, 0x1
	0x01C94D68 MOV X0, X20
	0x01C94D6C BL 0x1BB4284
	0x01C94D70 B 0x1C94EF0
	0x01C94D74 ADRP X8, 0x22B9000
	0x01C94D78 LDR X8, [X8 + 0x4E8]
	0x01C94D7C LDR X0, [X8]
	0x01C94D80 LDR W8, [X0 + 0xE0]
	0x01C94D84 CBNZ W8, 0x1C94D8C
	0x01C94D88 BL 0x1B6E8F8
	0x01C94D8C BL 0x1C896E0
	0x01C94D90 LDR X8, [X19 + 0x20]
	0x01C94D94 CBZ X8, 0x1C94FC0
	0x01C94D98 LDR X8, [X8 + 0x30]
	0x01C94D9C CBZ X8, 0x1C94FC4
	0x01C94DA0 MOV X20, X0
	0x01C94DA4 ADD X0, X8, 0x18
	0x01C94DA8 MOV X1, X31
	0x01C94DAC BL 0x3204270
	0x01C94DB0 LDR X8, [X19 + 0x20]
	0x01C94DB4 CBZ X8, 0x1C94FC8
	0x01C94DB8 LDR X8, [X8 + 0x30]
	0x01C94DBC CBZ X8, 0x1C94FCC
	0x01C94DC0 LDR X22, [X8 + 0x28]
	0x01C94DC4 ADRP X8, 0x22B9000
	0x01C94DC8 LDR X8, [X8 + 0xD60]
	0x01C94DCC MOV X21, X0
	0x01C94DD0 LDR X0, [X8]
	0x01C94DD4 BL 0x1B6EA0C
	0x01C94DD8 ADRP X8, 0x22B9000
	0x01C94DDC LDR X8, [X8 + 0xD50]
	0x01C94DE0 MOV X23, X0
	0x01C94DE4 LDR X1, [X8]
	0x01C94DE8 BL 0x28F9A14
	0x01C94DEC CBZ X23, 0x1C94FD0
	0x01C94DF0 ADRP X8, 0x22B9000
	0x01C94DF4 LDR X8, [X8 + 0xF60]
	0x01C94DF8 ADRP X9, 0x22B9000
	0x01C94DFC ADRP X27, 0x22B9000
	0x01C94E00 LDR X9, [X9 + 0xF68]
	0x01C94E04 LDR X27, [X27 + 0xF10]
	0x01C94E08 LDR X1, [X8]
	0x01C94E0C LDR X2, [X9]
	0x01C94E10 LDR X3, [X27]
	0x01C94E14 MOV X0, X23
	0x01C94E18 BL 0x28FA2A8
	0x01C94E1C LDR X8, [X19 + 0x20]
	0x01C94E20 CBZ X8, 0x1C94FD4
	0x01C94E24 LDR X2, [X8 + 0x40]
	0x01C94E28 ADRP X8, 0x22B9000
	0x01C94E2C LDR X8, [X8 + 0xF58]
	0x01C94E30 LDR X3, [X27]
	0x01C94E34 LDR X1, [X8]
	0x01C94E38 MOV X0, X23
	0x01C94E3C BL 0x28FA2A8
	0x01C94E40 MOV X0, X23
	0x01C94E44 BL 0x1C9283C
	0x01C94E48 CBZ X20, 0x1C94FD8
	0x01C94E4C MOV X4, X0
	0x01C94E50 MOVZ W3, 0x1
	0x01C94E54 MOV X0, X20
	0x01C94E58 MOV X1, X21
	0x01C94E5C MOV X2, X22
	0x01C94E60 MOV X5, X31
	0x01C94E64 MOV X6, X31
	0x01C94E68 MOV X7, X31
	0x01C94E6C BL 0x1D0C528
	0x01C94E70 CBZ X0, 0x1C94FDC
	0x01C94E74 ADRP X8, 0x22B9000
	0x01C94E78 LDR X8, [X8 + 0xEA0]
	0x01C94E7C LDR X1, [X8]
	0x01C94E80 BL 0x24F9364
	0x01C94E84 ADRP X8, 0x22B9000
	0x01C94E88 LDR X8, [X8 + 0xE98]
	0x01C94E8C STR X0, [X31 + 0x28]
	0x01C94E90 LDR X1, [X8]
	0x01C94E94 ADD X0, X31, 0x28
	0x01C94E98 BL 0x24D89E0
	0x01C94E9C TBNZ X0, 0x0, 0x1C94C88
	0x01C94EA0 MOVZ W8, 0x3
	0x01C94EA4 STR W8, [X19]
	0x01C94EA8 LDR X8, [X31 + 0x28]
	0x01C94EAC STR X8, [X19 + 0x30]
	0x01C94EB0 LDR X0, [X25]
	0x01C94EB4 LDR W8, [X0 + 0xE0]
	0x01C94EB8 CBNZ W8, 0x1C94EC0
	0x01C94EBC BL 0x1B6E8F8
	0x01C94EC0 ADRP X8, 0x22B9000
	0x01C94EC4 LDR X8, [X8 + 0xEE0]
	0x01C94EC8 ADD X0, X19, 0x8
	0x01C94ECC LDR X3, [X8]
	0x01C94ED0 ADD X1, X31, 0x28
	0x01C94ED4 MOV X2, X19
	0x01C94ED8 BL 0x201F538
	0x01C94EDC B 0x1C94BB8
	0x01C94EE0 LDR W9, [X10]
	0x01C94EE4 ADD W9, W9, 0x1
	0x01C94EE8 ADD X8, X8, W9, 0x4, SXTW
	0x01C94EEC ADD X0, X8, 0x138
	0x01C94EF0 LDP X8, X1, [X0]
	0x01C94EF4 MOV X0, X20
	0x01C94EF8 BLR X8
	0x01C94EFC TBZ X0, 0x0, 0x1C94CD8
	0x01C94F00 ADRP X8, 0x22B9000
	0x01C94F04 LDR X8, [X8 + 0x4E8]
	0x01C94F08 LDR X0, [X8]
	0x01C94F0C LDR W8, [X0 + 0xE0]
	0x01C94F10 CBNZ W8, 0x1C94F18
	0x01C94F14 BL 0x1B6E8F8
	0x01C94F18 BL 0x1C896E0
	0x01C94F1C LDR X8, [X19 + 0x20]
	0x01C94F20 CBZ X8, 0x1C94FE0
	0x01C94F24 LDR X9, [X8 + 0x30]
	0x01C94F28 CBZ X9, 0x1C94FE4
	0x01C94F2C CBZ X0, 0x1C94FE8
	0x01C94F30 LDR X1, [X8 + 0x10]
	0x01C94F34 LDR X3, [X9 + 0x10]
	0x01C94F38 LDP X4, X2, [X9 + 0x20]
	0x01C94F3C MOV X5, X31
	0x01C94F40 MOV X6, X31
	0x01C94F44 MOV X7, X31
	0x01C94F48 STP X31, X31, [X31]
	0x01C94F4C STR X31, [X31 + 0x10]
	0x01C94F50 BL 0x1D10F90
	0x01C94F54 CBZ X0, 0x1C94FEC
	0x01C94F58 MOV X1, X31
	0x01C94F5C BL 0x3256D00
	0x01C94F60 STR X0, [X31 + 0x20]
	0x01C94F64 ADD X0, X31, 0x20
	0x01C94F68 MOV X1, X31
	0x01C94F6C BL 0x312C868
	0x01C94F70 TBNZ X0, 0x0, 0x1C94CCC
	0x01C94F74 MOVZ W8, 0x4
	0x01C94F78 STR W8, [X19]
	0x01C94F7C LDR X8, [X31 + 0x20]
	0x01C94F80 STR X8, [X19 + 0x38]
	0x01C94F84 LDR X0, [X25]
	0x01C94F88 LDR W8, [X0 + 0xE0]
	0x01C94F8C CBNZ W8, 0x1C94F94
	0x01C94F90 BL 0x1B6E8F8
	0x01C94F94 ADRP X8, 0x22B9000
	0x01C94F98 LDR X8, [X8 + 0xEE8]
	0x01C94F9C ADD X0, X19, 0x8
	0x01C94FA0 LDR X3, [X8]
	0x01C94FA4 ADD X1, X31, 0x20
	0x01C94FA8 MOV X2, X19
	0x01C94FAC BL 0x201FB74
	0x01C94FB0 B 0x1C94BB8
	0x01C94FB4 BL 0x1B6EA1C
	0x01C94FB8 BL 0x1B6EA1C
	0x01C94FBC BL 0x1B6EA1C
	0x01C94FC0 BL 0x1B6EA1C
	0x01C94FC4 BL 0x1B6EA1C
	0x01C94FC8 BL 0x1B6EA1C
	0x01C94FCC BL 0x1B6EA1C
	0x01C94FD0 BL 0x1B6EA1C
	0x01C94FD4 BL 0x1B6EA1C
	0x01C94FD8 BL 0x1B6EA1C
	0x01C94FDC BL 0x1B6EA1C
	0x01C94FE0 BL 0x1B6EA1C
	0x01C94FE4 BL 0x1B6EA1C
	0x01C94FE8 BL 0x1B6EA1C
	0x01C94FEC BL 0x1B6EA1C
	0x01C94FF0 B 0x1C95070
	0x01C94FF4 B 0x1C952A8
	0x01C94FF8 MOV X20, X1
	0x01C94FFC MOV X21, X0
	0x01C95000 MOVZ W26, 0x3
	0x01C95004 B 0x1C95078
	0x01C95008 B 0x1C952A8
	0x01C9500C B 0x1C952A8
	0x01C95010 B 0x1C952A8
	0x01C95014 B 0x1C952A8
	0x01C95018 B 0x1C952A8
	0x01C9501C B 0x1C952A8
	0x01C95020 B 0x1C95070
	0x01C95024 B 0x1C95070
	0x01C95028 B 0x1C95070
	0x01C9502C B 0x1C95070
	0x01C95030 B 0x1C95070
	0x01C95034 B 0x1C95070
	0x01C95038 B 0x1C95070
	0x01C9503C B 0x1C95070
	0x01C95040 B 0x1C95070
	0x01C95044 B 0x1C95070
	0x01C95048 B 0x1C95070
	0x01C9504C B 0x1C95070
	0x01C95050 B 0x1C952A8
	0x01C95054 B 0x1C952A8
	0x01C95058 B 0x1C95070
	0x01C9505C B 0x1C95070
	0x01C95060 B 0x1C95070
	0x01C95064 B 0x1C952A8
	0x01C95068 B 0x1C94928
	0x01C9506C B 0x1C95070
	0x01C95070 MOV X20, X1
	0x01C95074 MOV X21, X0
	0x01C95078 CMP W20, 0x1
	0x01C9507C B.NE 0x1C94930
	0x01C95080 MOV X0, X21
	0x01C95084 BL 0x3D19840
	0x01C95088 MOV X20, X0
	0x01C9508C ADRP X0, 0x22B8000
	0x01C95090 LDR X0, [X0 + 0x670]
	0x01C95094 BL 0x1B6E804
	0x01C95098 LDR X8, [X20]
	0x01C9509C LDR X1, [X8]
	0x01C950A0 BL 0x1B6ED6C
	0x01C950A4 TBZ X0, 0x0, 0x1C95238
	0x01C950A8 LDR X20, [X20]
	0x01C950AC BL 0x3D19850
	0x01C950B0 ADRP X0, 0x22B8000
	0x01C950B4 LDR X0, [X0 + 0xEC8]
	0x01C950B8 BL 0x1B6E804
	0x01C950BC CBZ X20, 0x1C950E8
	0x01C950C0 LDR X8, [X20]
	0x01C950C4 LDRB W9, [X0 + 0x130]
	0x01C950C8 LDRB W10, [X8 + 0x130]
	0x01C950CC CMP W10, W9
	0x01C950D0 B.CC 0x1C950E8
	0x01C950D4 LDR X8, [X8 + 0xC8]
	0x01C950D8 ADD X8, X8, X9, 0x3, LSL
	0x01C950DC LDUR X8, [X8 - 0x8]
	0x01C950E0 CMP X8, X0
	0x01C950E4 B.EQ 0x1C951D0
	0x01C950E8 LDR X8, [X19 + 0x20]
	0x01C950EC CBZ X8, 0x1C9525C
	0x01C950F0 ADD X1, X8, 0x10
	0x01C950F4 MOV X0, X20
	0x01C950F8 BL 0x1C92B84
	0x01C950FC TBNZ X0, 0x0, 0x1C95144
	0x01C95100 LDR X22, [X19 + 0x20]
	0x01C95104 CBZ X22, 0x1C95264
	0x01C95108 MOVZ W8, 0x7
	0x01C9510C STR W8, [X22 + 0x18]
	0x01C95110 CBZ X20, 0x1C95268
	0x01C95114 LDR X8, [X20]
	0x01C95118 LDP X9, X1, [X8 + 0x188]
	0x01C9511C MOV X0, X20
	0x01C95120 BLR X9
	0x01C95124 MOV X21, X0
	0x01C95128 ADRP X0, 0x22B8000
	0x01C9512C LDR X0, [X0 + 0xF80]
	0x01C95130 BL 0x1B6E804
	0x01C95134 MOV X1, X21
	0x01C95138 MOV X2, X31
	0x01C9513C BL 0x3084780
	0x01C95140 STR X0, [X22 + 0x20]
	0x01C95144 LDR X8, [X19 + 0x20]
	0x01C95148 CBZ X8, 0x1C95260
	0x01C9514C LDR W9, [X8 + 0x18]
	0x01C95150 CBZ W9, 0x1C94CA8
	0x01C95154 CMP W9, 0xC
	0x01C95158 B.EQ 0x1C94CA8
	0x01C9515C ADRP X0, 0x22B8000
	0x01C95160 LDR X0, [X0 + 0x628]
	0x01C95164 BL 0x1B6E804
	0x01C95168 LDR W8, [X0 + 0xE0]
	0x01C9516C CBNZ W8, 0x1C95174
	0x01C95170 BL 0x1B6E8F8
	0x01C95174 ADRP X0, 0x22B8000
	0x01C95178 LDR X0, [X0 + 0xF88]
	0x01C9517C BL 0x1B6E804
	0x01C95180 MOV X21, X0
	0x01C95184 ADRP X0, 0x22B8000
	0x01C95188 LDR X0, [X0 + 0xDE8]
	0x01C9518C BL 0x1B6E804
	0x01C95190 MOV X22, X0
	0x01C95194 ADRP X0, 0x22B8000
	0x01C95198 LDR X0, [X0 + 0xDE0]
	0x01C9519C BL 0x1B6E804
	0x01C951A0 MOV X5, X0
	0x01C951A4 MOVZ W0, 0x800
	0x01C951A8 MOVZ W6, 0x127
	0x01C951AC MOV X1, X21
	0x01C951B0 MOV X2, X20
	0x01C951B4 MOV X3, X31
	0x01C951B8 MOV X4, X22
	0x01C951BC MOV X7, X31
	0x01C951C0 BL 0x342B884
	0x01C951C4 LDR X8, [X19 + 0x20]
	0x01C951C8 CBNZ X8, 0x1C94CA8
	0x01C951CC BL 0x1B6EA1C
	0x01C951D0 ADRP X0, 0x22B8000
	0x01C951D4 LDR X0, [X0 + 0x628]
	0x01C951D8 BL 0x1B6E804
	0x01C951DC LDR W8, [X0 + 0xE0]
	0x01C951E0 CBNZ W8, 0x1C951E8
	0x01C951E4 BL 0x1B6E8F8
	0x01C951E8 ADRP X0, 0x22B8000
	0x01C951EC LDR X0, [X0 + 0xF90]
	0x01C951F0 BL 0x1B6E804
	0x01C951F4 MOV X20, X0
	0x01C951F8 ADRP X0, 0x22B8000
	0x01C951FC LDR X0, [X0 + 0xDE8]
	0x01C95200 BL 0x1B6E804
	0x01C95204 MOV X21, X0
	0x01C95208 ADRP X0, 0x22B8000
	0x01C9520C LDR X0, [X0 + 0xDE0]
	0x01C95210 BL 0x1B6E804
	0x01C95214 MOV X4, X0
	0x01C95218 MOVZ W0, 0x800
	0x01C9521C MOVZ W5, 0x11D
	0x01C95220 MOV X1, X20
	0x01C95224 MOV X2, X31
	0x01C95228 MOV X3, X21
	0x01C9522C MOV X6, X31
	0x01C95230 BL 0x342B224
	0x01C95234 B 0x1C953F0
	0x01C95238 MOVZ W0, 0x8
	0x01C9523C BL 0x3D19860
	0x01C95240 LDR X8, [X20]
	0x01C95244 STR X8, [X0]
	0x01C95248 ADRP X1, 0x2087000
	0x01C9524C ADD X1, X1, 0xBD8
	0x01C95250 MOV X2, X31
	0x01C95254 BL 0x3D19870
	0x01C95258 B 0x1C95424
	0x01C9525C BL 0x1B6EA1C
	0x01C95260 BL 0x1B6EA1C
	0x01C95264 BL 0x1B6EA1C
	0x01C95268 BL 0x1B6EA1C
	0x01C9526C B 0x1C94928
	0x01C95270 B 0x1C94928
	0x01C95274 B 0x1C94928
	0x01C95278 B 0x1C94928
	0x01C9527C B 0x1C94928
	0x01C95280 B 0x1C94928
	0x01C95284 B 0x1C94928
	0x01C95288 B 0x1C94928
	0x01C9528C B 0x1C94928
	0x01C95290 B 0x1C94928
	0x01C95294 B 0x1C94928
	0x01C95298 MOV X20, X1
	0x01C9529C MOV X21, X0
	0x01C952A0 BL 0x3D19850
	0x01C952A4 B 0x1C94930
	0x01C952A8 MOV X20, X1
	0x01C952AC MOV X21, X0
	0x01C952B0 CMP W20, 0x1
	0x01C952B4 B.NE 0x1C94930
	0x01C952B8 MOV X0, X21
	0x01C952BC BL 0x3D19840
	0x01C952C0 MOV X20, X0
	0x01C952C4 ADRP X0, 0x22B8000
	0x01C952C8 LDR X0, [X0 + 0x670]
	0x01C952CC BL 0x1B6E804
	0x01C952D0 LDR X8, [X20]
	0x01C952D4 LDR X1, [X8]
	0x01C952D8 BL 0x1B6ED6C
	0x01C952DC TBZ X0, 0x0, 0x1C95404
	0x01C952E0 LDR X20, [X20]
	0x01C952E4 BL 0x3D19850
	0x01C952E8 ADRP X0, 0x22B8000
	0x01C952EC LDR X0, [X0 + 0xEC8]
	0x01C952F0 BL 0x1B6E804
	0x01C952F4 CBZ X20, 0x1C95320
	0x01C952F8 LDR X8, [X20]
	0x01C952FC LDRB W9, [X0 + 0x130]
	0x01C95300 LDRB W10, [X8 + 0x130]
	0x01C95304 CMP W10, W9
	0x01C95308 B.CC 0x1C95320
	0x01C9530C LDR X8, [X8 + 0xC8]
	0x01C95310 ADD X8, X8, X9, 0x3, LSL
	0x01C95314 LDUR X8, [X8 - 0x8]
	0x01C95318 CMP X8, X0
	0x01C9531C B.EQ 0x1C9538C
	0x01C95320 ADRP X0, 0x22B8000
	0x01C95324 LDR X0, [X0 + 0x628]
	0x01C95328 BL 0x1B6E804
	0x01C9532C LDR W8, [X0 + 0xE0]
	0x01C95330 CBNZ W8, 0x1C95338
	0x01C95334 BL 0x1B6E8F8
	0x01C95338 ADRP X0, 0x22B8000
	0x01C9533C LDR X0, [X0 + 0xF98]
	0x01C95340 BL 0x1B6E804
	0x01C95344 MOV X21, X0
	0x01C95348 ADRP X0, 0x22B8000
	0x01C9534C LDR X0, [X0 + 0xDE8]
	0x01C95350 BL 0x1B6E804
	0x01C95354 MOV X22, X0
	0x01C95358 ADRP X0, 0x22B8000
	0x01C9535C LDR X0, [X0 + 0xDE0]
	0x01C95360 BL 0x1B6E804

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+96], X26
	004 Move [X31+104], X25
	005 Move [X31+112], X24
	006 Move [X31+120], X23
	007 Move [X31+128], X22
	008 Move [X31+136], X21
	009 Move [X31+144], X20
	010 Move [X31+152], X19
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X23+40]
	013 Move X20, 0x2590000
	014 Move X19, X0
	015 Move [X31+72], X8
	016 Move W8, [X20+977]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {62}
	021 Move X0, 0x22BA000
	022 Move X0, [X0+1256]
	023 Call 0x1B6F7F0
	024 Move X0, 0x22BA000
	025 Move X0, [X0+3720]
	026 Call 0x1B6F7F0
	027 Move X0, 0x22BA000
	028 Move X0, [X0+3648]
	029 Call 0x1B6F7F0
	030 Move X0, 0x22BA000
	031 Move X0, [X0+3360]
	032 Call 0x1B6F7F0
	033 Move X0, 0x22BA000
	034 Move X0, [X0+1576]
	035 Call 0x1B6F7F0
	036 Move X0, 0x22BA000
	037 Move X0, [X0+3728]
	038 Call 0x1B6F7F0
	039 Move X0, 0x22BA000
	040 Move X0, [X0+3736]
	041 Call 0x1B6F7F0
	042 Move X0, 0x22BA000
	043 Move X0, [X0+3744]
	044 Call 0x1B6F7F0
	045 Move X0, 0x22BA000
	046 Move X0, [X0+3752]
	047 Call 0x1B6F7F0
	048 Move X0, 0x22BA000
	049 Move X0, [X0+3760]
	050 Call 0x1B6F7F0
	051 Move X0, 0x22BA000
	052 Move X0, [X0+3560]
	053 Call 0x1B6F7F0
	054 Move X0, 0x22BA000
	055 Move X0, [X0+3768]
	056 Call 0x1B6F7F0
	057 Move X0, 0x22BA000
	058 Move X0, [X0+3776]
	059 Call 0x1B6F7F0
	060 Move W8, 1
	061 Move [X20+977], W8
	062 Move [X31+64], W31
	063 Move [X31+56], X31
	064 Move [X31+8], X31
	065 Move X26, 0x22BA000
	066 Move X25, 0x22BA000
	067 Move X22, 0x22BA000
	068 Move X24, 0x22BA000
	069 Move W8, [X19]
	070 Move X26, [X26+1576]
	071 Move X25, [X25+3560]
	072 Move X22, [X22+3752]
	073 Move X24, [X24+3360]
	074 Compare W8, 0
	075 JumpIfEqual {158}
	076 Move [X19+32], X31
	077 Move [X19+40], X31
	078 Move [X19+48], X31
	079 Call AuthCommands.GetAuthDeviceID
	080 Move X1, X0
	081 Move X8, 0x22BA000
	082 Move X8, [X8+3760]
	083 Move X9, 0x22BA000
	084 Move X9, [X9+3776]
	085 Move [X19+56], X1
	086 Move X0, [X8]
	087 Move X2, [X9]
	088 Move X3, X31
	089 Call String.Concat, X0, X1, X2
	090 Move X20, X0
	091 Move X0, [X26]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1B6F8F8
	096 Move X3, [X25]
	097 Move X4, [X22]
	098 Move W0, 2048
	099 Move W5, 336
	100 Move X1, X20
	101 Move X2, X31
	102 Move X6, X31
	103 Call Log.Debug, X0, X1, X2, X3, X4, X5
	104 Move X8, 0x22BA000
	105 Move X8, [X8+1256]
	106 Move X0, [X8]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1B6F8F8
	111 Call App.get_api
	112 Move X21, [X19+56]
	113 Move X20, X0
	114 Move X0, X31
	115 Call AuthCommands.GetAuthVars, X0
	116 Compare X20, 0
	117 JumpIfEqual {240}
	118 Move X4, X0
	119 Move W3, 1
	120 Move X0, X20
	121 Move X1, X21
	122 Move X2, X31
	123 Move X5, X31
	124 Move X6, X31
	125 Move X7, X31
	126 Call AnimalCompanyAPI.AuthenticateDeviceAsync, X0, X1, X2, X3, X4, X5, X6
	127 Compare X0, 0
	128 JumpIfEqual {241}
	129 Move X8, 0x22BA000
	130 Move X8, [X8+3744]
	131 Move X1, [X8]
	132 Call Task`1<Object>.GetAwaiter, X0
	133 Move X8, 0x22BA000
	134 Move X8, [X8+3736]
	135 Move [X31+8], X0
	136 Move X1, [X8]
	137 Add X0, X31, 8
	138 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfEqual {165}
	143 Move [X19], W31
	144 Move X8, [X31+8]
	145 Move [X19+64], X8
	146 Move X0, [X24]
	147 Move W8, [X0+224]
	148 Compare W8, 0
	149 JumpIfNotEqual {151}
	150 Call 0x1B6F8F8
	151 Move X8, 0x22BA000
	152 Move X8, [X8+3720]
	153 Add X0, X19, 8
	154 Move X3, [X8]
	155 Add X1, X31, 8
	156 Move X2, X19
	157 Call AsyncTaskMethodBuilder`1<AuthResult>.AwaitUnsafeOnCompleted, X0, X1, X2
	158 Move X8, [X19+64]
	159 Move TEMP, 0
	160 Not TEMP
	161 Move W9, TEMP
	162 Move [X31+8], X8
	163 Move [X19+64], X31
	164 Move [X19], W9
	165 Move X8, 0x22BA000
	166 Move X8, [X8+3728]
	167 Add X0, X31, 8
	168 Move X1, [X8]
	169 Call TaskAwaiter`1<Object>.GetResult, X0
	170 Move X8, 0x22BA000
	171 Move X8, [X8+3768]
	172 Move [X19+32], X0
	173 Move X1, [X19+56]
	174 Move X0, [X8]
	175 Move X2, X31
	176 Call String.Concat, X0, X1
	177 Move X20, X0
	178 Move X0, [X26]
	179 Move W8, [X0+224]
	180 Compare W8, 0
	181 JumpIfNotEqual {183}
	182 Call 0x1B6F8F8
	183 Move X3, [X25]
	184 Move X4, [X22]
	185 Move W0, 2048
	186 Move W5, 338
	187 Move X1, X20
	188 Move X2, X31
	189 Move X6, X31
	190 Call Log.Info, X0, X1, X2, X3, X4, X5
	191 Move [X19+56], X31
	192 Move W8, [X19+52]
	193 NotImplemented "Instruction LDUR not yet implemented."
	194 Move X20, [X19+32]
	195 Move W21, [X19+40]
	196 Move [X31+64], W8
	197 Move [X31+56], X9
	198 Move TEMP, 1
	199 Not TEMP
	200 Move W8, TEMP
	201 Move [X19+40], X31
	202 Move [X19+48], X31
	203 Move [X19+32], X31
	204 Move [X19+8], W8
	205 Move X8, [X31+56]
	206 Move W9, [X31+64]
	207 Move X0, [X24]
	208 Move X22, 0x22B9000
	209 Move [X31+40], X8
	210 Move [X31+48], W9
	211 Move W8, [X0+224]
	212 Move X22, [X22+3648]
	213 Compare W8, 0
	214 JumpIfNotEqual {216}
	215 Call 0x1B6F8F8
	216 Move X2, [X22]
	217 Move X8, [X31+40]
	218 Move W9, [X31+48]
	219 Add X1, X31, 16
	220 Move X0, X19
	221 Move [X31+16], X20
	222 Move [X31+24], W21
	223 Move [X31+28], X8
	224 Move [X31+36], W9
	225 Call AsyncTaskMethodBuilder`1<AuthResult>.SetResult, X0, X1
	226 Move X8, [X23+40]
	227 Move X9, [X31+72]
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Move X20, [X31+144]
	230 Move X19, [X31+152]
	231 Move X22, [X31+128]
	232 Move X21, [X31+136]
	233 Move X24, [X31+112]
	234 Move X23, [X31+120]
	235 Move X26, [X31+96]
	236 Move X25, [X31+104]
	237 Move X30, [X31+80]
	238 Add X31, X31, 160
	239 Return 
	240 Call 0x1B6FA1C
	241 Call 0x1B6FA1C
	242 Call 0x3D1A880
	243 Move X20, X0
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Move X0, X20
	246 Call 0x3D1A840
	247 Move X20, X0
	248 Move X0, 0x22B9000
	249 Move X0, [X0+1648]
	250 Call 0x1B6F804
	251 Move X8, [X20]
	252 Move X1, [X8]
	253 Call 0x1B6FD6C
	254 Move TEMP, X0
	255 And TEMP, TEMP, 1
	256 Compare TEMP, 1
	257 JumpIfNotEqual {337}
	258 Move X20, [X20]
	259 Call 0x3D1A850
	260 Move X0, 0x22B9000
	261 Move X0, [X0+3784]
	262 Call 0x1B6F804
	263 Compare X20, 0
	264 JumpIfEqual {273}
	265 Move X8, [X20]
	266 Move W9, [X0+304]
	267 Move W10, [X8+304]
	268 NotImplemented "Instruction CMP not yet implemented."
	269 Move X8, [X8+200]
	270 Add X8, X8, X9
	271 NotImplemented "Instruction LDUR not yet implemented."
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Add X1, X19, 32
	274 Move X0, X20
	275 Call AuthCommands.TryParseAuthError, X0, X1
	276 Move W8, [X19+40]
	277 Compare W8, 0
	278 JumpIfEqual {192}
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Move X0, 0x22B9000
	281 Move X0, [X0+1576]
	282 Call 0x1B6F804
	283 Move W8, [X0+224]
	284 Compare W8, 0
	285 JumpIfNotEqual {287}
	286 Call 0x1B6F8F8
	287 Move X0, 0x22B9000
	288 Move X0, [X0+3792]
	289 Call 0x1B6F804
	290 Move X21, X0
	291 Move X0, 0x22B9000
	292 Move X0, [X0+3560]
	293 Call 0x1B6F804
	294 Move X22, X0
	295 Move X0, 0x22B9000
	296 Move X0, [X0+3752]
	297 Call 0x1B6F804
	298 Move X5, X0
	299 Move W0, 2048
	300 Move W6, 350
	301 Move X1, X21
	302 Move X2, X20
	303 Move X3, X31
	304 Move X4, X22
	305 Move X7, X31
	306 Call Log.Error, X0, X1, X2, X3, X4, X5, X6
	307 Move X0, 0x22B9000
	308 Move X0, [X0+1576]
	309 Call 0x1B6F804
	310 Move W8, [X0+224]
	311 Compare W8, 0
	312 JumpIfNotEqual {314}
	313 Call 0x1B6F8F8
	314 Move X0, 0x22B9000
	315 Move X0, [X0+3800]
	316 Call 0x1B6F804
	317 Move X20, X0
	318 Move X0, 0x22B9000
	319 Move X0, [X0+3560]
	320 Call 0x1B6F804
	321 Move X21, X0
	322 Move X0, 0x22B9000
	323 Move X0, [X0+3752]
	324 Call 0x1B6F804
	325 Move X4, X0
	326 Move W0, 2048
	327 Move W5, 344
	328 Move X1, X20
	329 Move X2, X31
	330 Move X3, X21
	331 Move X6, X31
	332 Call Log.Debug, X0, X1, X2, X3, X4, X5
	333 Move X20, X31
	334 Move W21, 3
	335 Move [X31+64], W31
	336 Move [X31+56], X31
	337 Move W0, 8
	338 Call 0x3D1A860
	339 Move X8, [X20]
	340 Move [X0], X8
	341 Move X1, 0x2088000
	342 Add X1, X1, 3032
	343 Move X2, X31
	344 Call 0x3D1A870
	345 Move X20, X0
	346 Move X20, X0
	347 Move X21, X1
	348 Move X20, X0
	349 Call 0x3D1A850
	350 Move W1, W21
	351 Move W8, 1
	352 NotImplemented "Instruction CMP not yet implemented."
	353 Move X0, X20
	354 Call 0x3D1A840
	355 Move X20, X0
	356 Move X0, 0x22B9000
	357 Move X0, [X0+1648]
	358 Call 0x1B6F804
	359 Move X8, [X20]
	360 Move X1, [X8]
	361 Call 0x1B6FD6C
	362 Move TEMP, X0
	363 And TEMP, TEMP, 1
	364 Compare TEMP, 1
	365 JumpIfNotEqual {389}
	366 Move X20, [X20]
	367 Call 0x3D1A850
	368 Move TEMP, 1
	369 Not TEMP
	370 Move W8, TEMP
	371 Move [X19+40], X31
	372 Move [X19+48], X31
	373 Move [X19+32], X31
	374 Move [X19+8], W8
	375 Move X0, 0x22B9000
	376 Move X0, [X0+3360]
	377 Call 0x1B6F804
	378 Move W8, [X0+224]
	379 Compare W8, 0
	380 JumpIfNotEqual {382}
	381 Call 0x1B6F8F8
	382 Move X0, 0x22B9000
	383 Move X0, [X0+3704]
	384 Call 0x1B6F804
	385 Move X2, X0
	386 Move X0, X19
	387 Move X1, X20
	388 Call AsyncTaskMethodBuilder`1<AuthResult>.SetException, X0, X1
	389 Move W0, 8
	390 Call 0x3D1A860
	391 Move X8, [X20]
	392 Move [X0], X8
	393 Move X1, 0x2088000
	394 Add X1, X1, 3032
	395 Move X2, X31
	396 Call 0x3D1A870
	397 Move X20, X0
	398 Call 0x3D1A850
	399 Move X0, X20
	400 Call 0x1C8518C
	401 Call 0x18F56A8

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x01C95364 MOV X5, X0
	0x01C95368 MOVZ W0, 0x800
	0x01C9536C MOVZ W6, 0x142
	0x01C95370 MOV X1, X21
	0x01C95374 MOV X2, X20
	0x01C95378 MOV X3, X31
	0x01C9537C MOV X4, X22
	0x01C95380 MOV X7, X31
	0x01C95384 BL 0x342B884
	0x01C95388 B 0x1C94CD8
	0x01C9538C ADRP X0, 0x22B8000
	0x01C95390 LDR X0, [X0 + 0x628]
	0x01C95394 BL 0x1B6E804
	0x01C95398 LDR W8, [X0 + 0xE0]
	0x01C9539C CBNZ W8, 0x1C953A4
	0x01C953A0 BL 0x1B6E8F8
	0x01C953A4 ADRP X0, 0x22B8000
	0x01C953A8 LDR X0, [X0 + 0xF90]
	0x01C953AC BL 0x1B6E804
	0x01C953B0 MOV X20, X0
	0x01C953B4 ADRP X0, 0x22B8000
	0x01C953B8 LDR X0, [X0 + 0xDE8]
	0x01C953BC BL 0x1B6E804
	0x01C953C0 MOV X21, X0
	0x01C953C4 ADRP X0, 0x22B8000
	0x01C953C8 LDR X0, [X0 + 0xDE0]
	0x01C953CC BL 0x1B6E804
	0x01C953D0 MOV X4, X0
	0x01C953D4 MOVZ W0, 0x800
	0x01C953D8 MOVZ W5, 0x13E
	0x01C953DC MOV X1, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x258F000
	007 Move X21, 0x22B9000
	008 Move W8, [X22+978]
	009 Move X21, [X21+3360]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x22B9000
	017 Move X0, [X0+3712]
	018 Call 0x1B6F7F0
	019 Move X0, 0x22B9000
	020 Move X0, [X0+3360]
	021 Call 0x1B6F7F0
	022 Move W8, 1
	023 Move [X22+978], W8
	024 Move X0, [X21]
	025 Move X21, 0x22B9000
	026 Move W8, [X0+224]
	027 Move X21, [X21+3712]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1B6F8F8
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<AuthResult>.SetStateMachine, X0, X1
	040 Return 

