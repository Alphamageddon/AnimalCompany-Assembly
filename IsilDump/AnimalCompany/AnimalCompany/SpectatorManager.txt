Type: AnimalCompany.SpectatorManager

Method: System.Collections.Generic.Dictionary`2<System.UInt32, AnimalCompany.NetPlayer> get__spawnedPlayers()

Disassembly:
	0x01E01E34 LDP X22, X21, [X31 + 0x40]
	0x01E01E38 LDP X24, X23, [X31 + 0x30]
	0x01E01E3C LDR X30, [X31 + 0x20]
	0x01E01E40 ADD X31, X31, 0x60
	0x01E01E44 RET
	0x01E01E48 BL 0x1C16F20
	0x01E01E4C B 0x1E01E54
	0x01E01E50 B 0x1E01E54
	0x01E01E54 MOV X19, X0
	0x01E01E58 CMP W1, 0x1
	0x01E01E5C B.NE 0x1E01E88
	0x01E01E60 MOV X0, X19
	0x01E01E64 BL 0x3EB1AD0
	0x01E01E68 LDR X20, [X0]
	0x01E01E6C BL 0x3EB1AE0
	0x01E01E70 LDR X1, [X22]
	0x01E01E74 ADD X0, X31, 0x8
	0x01E01E78 BL 0x2C1C374
	0x01E01E7C CBZ X20, 0x1E01E2C
	0x01E01E80 MOV X0, X20
	0x01E01E84 BL 0x1C16F18
	0x01E01E88 MOV X20, X31
	0x01E01E8C B 0x1E01E94
	0x01E01E90 MOV X19, X0
	0x01E01E94 LDR X1, [X22]
	0x01E01E98 ADD X0, X31, 0x8
	0x01E01E9C BL 0x2C1C374
	0x01E01EA0 CBNZ X20, 0x1E01EAC
	0x01E01EA4 MOV X0, X19
	0x01E01EA8 BL 0x1D2C690
	0x01E01EAC MOV X0, X20
	0x01E01EB0 BL 0x1C16F18
	0x01E01EB4 BL 0x1990590
	0x01E01EB8 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x25D8000
	005 Move X19, 0x22F5000
	006 Move W8, [X20+3428]
	007 Move X19, [X19+2464]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22F5000
	013 Move X0, [X0+2464]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3428], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, 0x25D8000
	023 Move W8, [X20+2922]
	024 Compare W8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, 0x22F5000
	027 Move X0, [X0+2464]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+2922], W8
	031 Move X0, [X19]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X19]
	037 Move X8, [X0+184]
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X0, [X8]
	041 Move X30, [X31+32]
	042 Return X0

Method: System.Void Awake()

Disassembly:
	0x01E01EBC STP X20, X19, [X31 + 0x10]
	0x01E01EC0 MOV W19, W1
	0x01E01EC4 MOV X1, X31
	0x01E01EC8 MOV X20, X0
	0x01E01ECC BL 0x33BDD8C
	0x01E01ED0 STR W19, [X20 + 0x10]
	0x01E01ED4 LDP X20, X19, [X31 + 0x10]
	0x01E01ED8 LDR X30, [X31], #0x20
	0x01E01EDC RET
	0x01E01EE0 STR X30, [X31 - 0x20]!
	0x01E01EE4 STP X20, X19, [X31 + 0x10]
	0x01E01EE8 ADRP X20, 0x25D7000
	0x01E01EEC ADRP X19, 0x22F7000
	0x01E01EF0 LDRB W8, [X20 + 0xD6C]
	0x01E01EF4 LDR X19, [X19 + 0x168]
	0x01E01EF8 TBNZ X8, 0x0, 0x1E01F10
	0x01E01EFC ADRP X0, 0x22F7000
	0x01E01F00 LDR X0, [X0 + 0x168]
	0x01E01F04 BL 0x1C16CF4
	0x01E01F08 MOVZ W8, 0x1
	0x01E01F0C STRB W8, [X20 + 0xD6C]
	0x01E01F10 LDR X0, [X19]
	0x01E01F14 LDR W8, [X0 + 0xE0]
	0x01E01F18 CBNZ W8, 0x1E01F24
	0x01E01F1C BL 0x1C16DFC
	0x01E01F20 LDR X0, [X19]
	0x01E01F24 LDR X8, [X0 + 0xB8]
	0x01E01F28 LDR X0, [X8]
	0x01E01F2C CBZ X0, 0x1E01F3C
	0x01E01F30 LDP X20, X19, [X31 + 0x10]
	0x01E01F34 LDR X30, [X31], #0x20
	0x01E01F38 B 0x1E01400
	0x01E01F3C BL 0x1C16F20
	0x01E01F40 MOVZ W8, 0x1
	0x01E01F44 MOV X1, X31
	0x01E01F48 STR W8, [X0 + 0x20]
	0x01E01F4C B 0x3C36C30
	0x01E01F50 STR X30, [X31 - 0x30]!
	0x01E01F54 STP X22, X21, [X31 + 0x10]
	0x01E01F58 STP X20, X19, [X31 + 0x20]
	0x01E01F5C ADRP X21, 0x25D7000
	0x01E01F60 ADRP X22, 0x22F2000
	0x01E01F64 ADRP X19, 0x22F8000
	0x01E01F68 ADRP X20, 0x22F7000
	0x01E01F6C LDRB W8, [X21 + 0xD6F]
	0x01E01F70 LDR X22, [X22 + 0x638]
	0x01E01F74 LDR X19, [X19 + 0x760]
	0x01E01F78 LDR X20, [X20 + 0x168]
	0x01E01F7C TBNZ X8, 0x0, 0x1E01FAC
	0x01E01F80 ADRP X0, 0x22F2000
	0x01E01F84 LDR X0, [X0 + 0x638]
	0x01E01F88 BL 0x1C16CF4
	0x01E01F8C ADRP X0, 0x22F7000
	0x01E01F90 LDR X0, [X0 + 0x168]
	0x01E01F94 BL 0x1C16CF4
	0x01E01F98 ADRP X0, 0x22F8000
	0x01E01F9C LDR X0, [X0 + 0x760]
	0x01E01FA0 BL 0x1C16CF4
	0x01E01FA4 MOVZ W8, 0x1
	0x01E01FA8 STRB W8, [X21 + 0xD6F]
	0x01E01FAC LDR X0, [X22]
	0x01E01FB0 MOVZ W1, 0x3

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x25D8000
	007 Move X21, 0x22F8000
	008 Move W8, [X20+3429]
	009 Move X21, [X21+360]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x22F3000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move X0, 0x22F8000
	019 Move X0, [X0+360]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3429], W8
	023 Move X0, [X21]
	024 Move X22, 0x22F3000
	025 Move W8, [X0+224]
	026 Move X22, [X22+1432]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X21]
	031 Move X8, [X22]
	032 Move X9, [X0+184]
	033 Move W10, [X8+224]
	034 Move X20, [X9]
	035 Compare W10, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X8
	038 Call 0x1C17DFC
	039 Move X0, X20
	040 Move X1, X31
	041 Move X2, X31
	042 Call Object.op_Inequality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {66}
	047 Move X0, X19
	048 Move X1, X31
	049 Call Component.get_gameObject, X0
	050 Move X8, [X22]
	051 Move X19, X0
	052 Move W9, [X8+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {57}
	055 Move X0, X8
	056 Call 0x1C17DFC
	057 Move X0, X19
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X1, X31
	063 Move X30, [X31+48]
	064 Call Object.Destroy, X0
	065 Return 
	066 Move X0, [X21]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {72}
	070 Call 0x1C17DFC
	071 Move X0, [X21]
	072 Move X8, [X0+184]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move [X8], X19
	076 Move X20, [X31+32]
	077 Move X19, [X31+40]
	078 Move X30, [X31+48]
	079 Return 

Method: System.Void OnDestroy()

Disassembly:
	0x01E01FB4 BL 0x1C16D6C
	0x01E01FB8 LDR X1, [X19]
	0x01E01FBC MOV X2, X31
	0x01E01FC0 MOV X19, X0
	0x01E01FC4 BL 0x32C5BD8
	0x01E01FC8 LDR X8, [X20]
	0x01E01FCC ADRP X9, 0xFFFFFFFFFECED000
	0x01E01FD0 LDR V0, [X9]
	0x01E01FD4 LDP X22, X21, [X31 + 0x10]
	0x01E01FD8 LDR X8, [X8 + 0xB8]
	0x01E01FDC MOVZ W9, 0xC0600000
	0x01E01FE0 STR X19, [X8 + 0x8]
	0x01E01FE4 LDP X20, X19, [X31 + 0x20]
	0x01E01FE8 STR D0, [X8 + 0x10]
	0x01E01FEC STR W9, [X8 + 0x18]
	0x01E01FF0 LDR X30, [X31], #0x30
	0x01E01FF4 RET
	0x01E01FF8 RET
	0x01E01FFC STR X30, [X31 - 0x20]!
	0x01E02000 STP X20, X19, [X31 + 0x10]
	0x01E02004 ADRP X19, 0x25D6000
	0x01E02008 LDRB W8, [X19 + 0xD70]
	0x01E0200C MOV X20, X0
	0x01E02010 TBNZ X8, 0x0, 0x1E02028
	0x01E02014 ADRP X0, 0x22F6000
	0x01E02018 LDR X0, [X0 + 0x88]
	0x01E0201C BL 0x1C16CF4
	0x01E02020 MOVZ W8, 0x1
	0x01E02024 STRB W8, [X19 + 0xD70]
	0x01E02028 LDR W8, [X20 + 0x10]
	0x01E0202C LDR X19, [X20 + 0x28]
	0x01E02030 CMP W8, 0x1
	0x01E02034 B.EQ 0x1E02054
	0x01E02038 CBNZ W8, 0x1E021B0
	0x01E0203C LDRB W8, [X20 + 0x20]
	0x01E02040 MOVN W9, 0x0
	0x01E02044 STR W9, [X20 + 0x10]
	0x01E02048 CBZ W8, 0x1E02084
	0x01E0204C CBNZ X19, 0x1E020C4
	0x01E02050 B 0x1E021C0
	0x01E02054 LDRB W8, [X20 + 0x20]
	0x01E02058 MOVN W9, 0x0
	0x01E0205C STR W9, [X20 + 0x10]
	0x01E02060 CBZ W8, 0x1E021B0
	0x01E02064 ADRP X8, 0x22F6000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x25D8000
	006 Move X21, 0x22F8000
	007 Move W8, [X20+3430]
	008 Move X21, [X21+360]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x22F3000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x22F8000
	018 Move X0, [X0+360]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3430], W8
	022 Move X0, [X21]
	023 Move X20, 0x22F3000
	024 Move W8, [X0+224]
	025 Call 0x3EB27C4
	026 Return 
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X21]
	031 Move X8, [X20]
	032 Move X9, [X0+184]
	033 Move W10, [X8+224]
	034 Move X20, [X9]
	035 Compare W10, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X8
	038 Call 0x1C17DFC
	039 Move X0, X20
	040 Move X1, X19
	041 Move X2, X31
	042 Call Object.op_Equality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {55}
	047 Move X0, [X21]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {53}
	051 Call 0x1C17DFC
	052 Move X0, [X21]
	053 Move X8, [X0+184]
	054 Move [X8], X31
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Return 

Method: System.Void Update()

Disassembly:
	0x01E02068 LDR X8, [X8 + 0x88]
	0x01E0206C LDR X8, [X8]
	0x01E02070 LDR X8, [X8 + 0xB8]
	0x01E02074 LDRB W8, [X8]
	0x01E02078 CBZ W8, 0x1E0213C
	0x01E0207C CBNZ X19, 0x1E0216C
	0x01E02080 B 0x1E021C0
	0x01E02084 CBZ X19, 0x1E021C0
	0x01E02088 LDR X0, [X19 + 0x60]
	0x01E0208C CBZ X0, 0x1E021C0
	0x01E02090 MOVZ W1, 0x1
	0x01E02094 MOV X2, X31
	0x01E02098 BL 0x1DC8340
	0x01E0209C LDR X0, [X19 + 0x38]
	0x01E020A0 CBZ X0, 0x1E021C0
	0x01E020A4 MOVZ W1, 0x1
	0x01E020A8 MOV X2, X31
	0x01E020AC BL 0x3C32410
	0x01E020B0 LDR X0, [X19 + 0x40]
	0x01E020B4 CBZ X0, 0x1E021C0
	0x01E020B8 MOV W1, W31
	0x01E020BC MOV X2, X31
	0x01E020C0 BL 0x3C32410
	0x01E020C4 LDR X0, [X19 + 0x50]
	0x01E020C8 CBZ X0, 0x1E021C0
	0x01E020CC LDRB W8, [X20 + 0x20]
	0x01E020D0 MOV X2, X31
	0x01E020D4 CMP W8, 0x0
	0x01E020D8 CSET W1, EQ
	0x01E020DC BL 0x3C32410
	0x01E020E0 LDR X0, [X19 + 0x58]
	0x01E020E4 CBZ X0, 0x1E021C0
	0x01E020E8 LDRB W1, [X20 + 0x20]
	0x01E020EC MOV X2, X31
	0x01E020F0 BL 0x3C32410
	0x01E020F4 LDR X0, [X19 + 0x70]
	0x01E020F8 CBZ X0, 0x1E021C0
	0x01E020FC LDRB W8, [X20 + 0x20]
	0x01E02100 MOV X2, X31
	0x01E02104 CMP W8, 0x0
	0x01E02108 CSET W1, EQ
	0x01E0210C BL 0x3C32410
	0x01E02110 LDR X0, [X19 + 0x78]
	0x01E02114 CBZ X0, 0x1E021C0
	0x01E02118 LDRB W8, [X20 + 0x20]
	0x01E0211C MOV X2, X31
	0x01E02120 CMP W8, 0x0
	0x01E02124 CSET W1, EQ
	0x01E02128 BL 0x3C32410
	0x01E0212C MOVZ W0, 0x1
	0x01E02130 STR X31, [X20 + 0x18]
	0x01E02134 STR W0, [X20 + 0x10]
	0x01E02138 B 0x1E021B4
	0x01E0213C CBZ X19, 0x1E021C0
	0x01E02140 LDR X8, [X19 + 0x28]
	0x01E02144 CBZ X8, 0x1E021C0
	0x01E02148 LDR X0, [X8 + 0x90]
	0x01E0214C CBZ X0, 0x1E021C0
	0x01E02150 LDR X20, [X19 + 0x68]
	0x01E02154 MOV X1, X31
	0x01E02158 BL 0x3C3FA04
	0x01E0215C CBZ X20, 0x1E021C0
	0x01E02160 MOV X0, X20
	0x01E02164 MOV X1, X31
	0x01E02168 BL 0x1E1D760
	0x01E0216C MOV X0, X19
	0x01E02170 BL 0x1E01400
	0x01E02174 LDR X0, [X19 + 0x38]
	0x01E02178 CBZ X0, 0x1E021C0
	0x01E0217C MOV W1, W31
	0x01E02180 MOV X2, X31
	0x01E02184 BL 0x3C32410
	0x01E02188 LDR X0, [X19 + 0x40]
	0x01E0218C CBZ X0, 0x1E021C0
	0x01E02190 MOVZ W1, 0x1
	0x01E02194 MOV X2, X31
	0x01E02198 BL 0x3C32410
	0x01E0219C LDR X0, [X19 + 0x60]
	0x01E021A0 CBZ X0, 0x1E021C0
	0x01E021A4 MOV W1, W31
	0x01E021A8 MOV X2, X31
	0x01E021AC BL 0x1DC8340
	0x01E021B0 MOV W0, W31
	0x01E021B4 LDP X20, X19, [X31 + 0x10]
	0x01E021B8 LDR X30, [X31], #0x20
	0x01E021BC RET
	0x01E021C0 BL 0x1C16F20
	0x01E021C4 LDR X0, [X0 + 0x18]
	0x01E021C8 RET
	0x01E021CC STP X30, X19, [X31 - 0x10]!
	0x01E021D0 ADRP X0, 0x22F1000
	0x01E021D4 LDR X0, [X0 + 0xB40]
	0x01E021D8 BL 0x1C16D08
	0x01E021DC BL 0x1C16F10
	0x01E021E0 MOV X1, X31
	0x01E021E4 MOV X19, X0
	0x01E021E8 BL 0x3380310
	0x01E021EC ADRP X0, 0x22F7000
	0x01E021F0 LDR X0, [X0 + 0x768]
	0x01E021F4 BL 0x1C16D08
	0x01E021F8 MOV X1, X0
	0x01E021FC MOV X0, X19
	0x01E02200 BL 0x1C16DEC
	0x01E02204 LDR X0, [X0 + 0x18]
	0x01E02208 RET
	0x01E0220C STR X30, [X31 - 0x40]!
	0x01E02210 STP X24, X23, [X31 + 0x10]
	0x01E02214 STP X22, X21, [X31 + 0x20]
	0x01E02218 STP X20, X19, [X31 + 0x30]
	0x01E0221C ADRP X23, 0x25D6000
	0x01E02220 ADRP X24, 0x22F5000
	0x01E02224 ADRP X20, 0x22F7000
	0x01E02228 ADRP X22, 0x22F5000
	0x01E0222C ADRP X21, 0x22F7000
	0x01E02230 LDRB W8, [X23 + 0xD71]
	0x01E02234 LDR X24, [X24 + 0x3E0]
	0x01E02238 LDR X20, [X20 + 0x770]
	0x01E0223C LDR X22, [X22 + 0x3D8]
	0x01E02240 LDR X21, [X21 + 0x778]
	0x01E02244 MOV X19, X0
	0x01E02248 TBNZ X8, 0x0, 0x1E02284
	0x01E0224C ADRP X0, 0x22F5000
	0x01E02250 LDR X0, [X0 + 0x3D8]
	0x01E02254 BL 0x1C16CF4
	0x01E02258 ADRP X0, 0x22F5000
	0x01E0225C LDR X0, [X0 + 0x3E0]
	0x01E02260 BL 0x1C16CF4
	0x01E02264 ADRP X0, 0x22F7000
	0x01E02268 LDR X0, [X0 + 0x778]
	0x01E0226C BL 0x1C16CF4
	0x01E02270 ADRP X0, 0x22F7000
	0x01E02274 LDR X0, [X0 + 0x770]
	0x01E02278 BL 0x1C16CF4
	0x01E0227C MOVZ W8, 0x1
	0x01E02280 STRB W8, [X23 + 0xD71]
	0x01E02284 LDR X0, [X24]
	0x01E02288 BL 0x1C16F10
	0x01E0228C LDR X3, [X20]
	0x01E02290 MOV X1, X31
	0x01E02294 MOV W2, W31
	0x01E02298 MOV X4, X31
	0x01E0229C MOV X5, X31
	0x01E022A0 MOV X6, X31
	0x01E022A4 MOV X7, X31
	0x01E022A8 MOV X20, X0
	0x01E022AC BL 0x3734C54
	0x01E022B0 LDR X0, [X22]
	0x01E022B4 BL 0x1C16F10
	0x01E022B8 LDR X2, [X21]
	0x01E022BC MOV X1, X19
	0x01E022C0 MOV X3, X31
	0x01E022C4 MOV X21, X0
	0x01E022C8 BL 0x2A719B8
	0x01E022CC CBZ X20, 0x1E022FC
	0x01E022D0 MOV X0, X20
	0x01E022D4 MOV X1, X21
	0x01E022D8 MOV X2, X31
	0x01E022DC BL 0x3734A04
	0x01E022E0 MOV X0, X20
	0x01E022E4 LDP X20, X19, [X31 + 0x30]
	0x01E022E8 LDP X22, X21, [X31 + 0x20]
	0x01E022EC LDP X24, X23, [X31 + 0x10]
	0x01E022F0 MOV X1, X31
	0x01E022F4 LDR X30, [X31], #0x40
	0x01E022F8 B 0x37350C8
	0x01E022FC BL 0x1C16F20
	0x01E02300 MOV X1, X31
	0x01E02304 B 0x3C36C30
	0x01E02308 STP X30, X19, [X31 - 0x10]!
	0x01E0230C LDR X19, [X0 + 0x20]
	0x01E02310 MOV X1, X31
	0x01E02314 BL 0x3C32E90
	0x01E02318 CBZ X0, 0x1E02338
	0x01E0231C MOV X1, X31
	0x01E02320 BL 0x3C3F58C
	0x01E02324 FMOV S3, 1
	0x01E02328 MOV X0, X19
	0x01E0232C MOV X1, X31
	0x01E02330 LDP X30, X19, [X31], #0x10
	0x01E02334 B 0x1DD1B94
	0x01E02338 BL 0x1C16F20
	0x01E0233C LDR X8, [X0 + 0x20]
	0x01E02340 CBZ X8, 0x1E02354
	0x01E02344 LDR X3, [X8 + 0x18]
	0x01E02348 LDR X0, [X8 + 0x40]
	0x01E0234C LDR X2, [X8 + 0x28]
	0x01E02350 BR X3
	0x01E02354 RET
	0x01E02358 LDR X8, [X0 + 0x28]
	0x01E0235C CBZ X8, 0x1E02370
	0x01E02360 LDR X3, [X8 + 0x18]
	0x01E02364 LDR X0, [X8 + 0x40]
	0x01E02368 LDR X2, [X8 + 0x28]
	0x01E0236C BR X3
	0x01E02370 RET
	0x01E02374 STR X30, [X31 - 0x20]!
	0x01E02378 STP X20, X19, [X31 + 0x10]
	0x01E0237C ADRP X20, 0x25D6000
	0x01E02380 LDRB W8, [X20 + 0xD72]
	0x01E02384 MOV X19, X0
	0x01E02388 TBNZ X8, 0x0, 0x1E023A0
	0x01E0238C ADRP X0, 0x22F4000
	0x01E02390 LDR X0, [X0 + 0x418]
	0x01E02394 BL 0x1C16CF4
	0x01E02398 MOVZ W8, 0x1
	0x01E0239C STRB W8, [X20 + 0xD72]
	0x01E023A0 LDR W8, [X19 + 0x30]
	0x01E023A4 CMP W8, 0x1
	0x01E023A8 B.EQ 0x1E023C8
	0x01E023AC CBNZ W8, 0x1E023E4
	0x01E023B0 MOV X0, X19
	0x01E023B4 MOV X1, X31
	0x01E023B8 BL 0x3C32ECC
	0x01E023BC CBZ X0, 0x1E0244C
	0x01E023C0 MOVZ W1, 0x7
	0x01E023C4 B 0x1E023DC
	0x01E023C8 MOV X0, X19
	0x01E023CC MOV X1, X31
	0x01E023D0 BL 0x3C32ECC
	0x01E023D4 CBZ X0, 0x1E0244C
	0x01E023D8 MOVZ W1, 0x9
	0x01E023DC MOV X2, X31
	0x01E023E0 BL 0x3C35770
	0x01E023E4 ADRP X8, 0x22F4000
	0x01E023E8 LDR X8, [X8 + 0x418]
	0x01E023EC MOV X0, X19
	0x01E023F0 LDR X1, [X8]
	0x01E023F4 BL 0x21A453C
	0x01E023F8 CBZ X0, 0x1E0244C
	0x01E023FC LDR W8, [X0 + 0x18]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x25D7000
	007 Move W8, [X20+3431]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {33}
	013 Move X0, 0x22F6000
	014 Move X0, [X0+2120]
	015 Call 0x1C17CF4
	016 Move X0, 0x22F6000
	017 Move X0, [X0+2128]
	018 Call 0x1C17CF4
	019 Move X0, 0x22F8000
	020 Move X0, [X0+1864]
	021 Call 0x1C17CF4
	022 Move X0, 0x22F7000
	023 Move X0, [X0+3184]
	024 Call 0x1C17CF4
	025 Move X0, 0x22F7000
	026 Move X0, [X0+3816]
	027 Call 0x1C17CF4
	028 Move X0, 0x22F7000
	029 Move X0, [X0+360]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+3431], W8
	033 Move [X31], X31
	034 Move [X31+8], X31
	035 Move X0, [X19+64]
	036 Compare X0, 0
	037 JumpIfEqual {243}
	038 Move X1, X31
	039 Call Behaviour.get_enabled, X0
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {236}
	044 Call SpectatorManager.get__spawnedPlayers, X0
	045 Compare X0, 0
	046 JumpIfEqual {243}
	047 Move X20, 0x22F6000
	048 Move X20, [X20+2120]
	049 Move X1, [X20]
	050 Call Dictionary`2<UInt32, Object>.get_Count, X0
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Add X1, X31, 8
	053 Move W0, W31
	054 Move X2, X31
	055 Call XRInputManager.GetJoystickValue, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {86}
	060 Move S0, [X31+8]
	061 Move S1, [X31+12]
	062 Move S2, 0.5
	063 Move W9, [X19+128]
	064 NotImplemented "Instruction FABS not yet implemented."
	065 NotImplemented "Instruction FABS not yet implemented."
	066 NotImplemented "Instruction FCMP not yet implemented."
	067 NotImplemented "Instruction CSET not yet implemented."
	068 NotImplemented "Instruction FCMP not yet implemented."
	069 NotImplemented "Instruction CSET not yet implemented."
	070 Or W8, W8, W10
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move [X19+128], W8
	073 Compare W8, 0
	074 JumpIfEqual {164}
	075 Move W21, [X19+48]
	076 NotImplemented "Instruction FCMP not yet implemented."
	077 Call SpectatorManager.get__spawnedPlayers, X0
	078 Compare X0, 0
	079 JumpIfEqual {243}
	080 Move X1, [X20]
	081 Call Dictionary`2<UInt32, Object>.get_Count, X0
	082 Subtract W8, W0, 1
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move W8, [X19+48]
	085 Add W8, W8, 1
	086 Move [X19+128], W31
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Subtract W8, W21, 1
	089 Move W8, W31
	090 Call SpectatorManager.get__spawnedPlayers, X0
	091 Compare X0, 0
	092 JumpIfEqual {243}
	093 Move X1, [X20]
	094 Call Dictionary`2<UInt32, Object>.get_Count, X0
	095 Subtract W8, W0, 1
	096 Move [X19+48], W8
	097 Move V0, [X31+12]
	098 NotImplemented "Instruction FCMP not yet implemented."
	099 Move W8, [X19+32]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X20, 0x22F7000
	102 Move X20, [X20+360]
	103 Move X0, [X20]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {109}
	107 Call 0x1C17DFC
	108 Move X0, [X20]
	109 Move X8, [X0+184]
	110 Move X8, [X8+8]
	111 Compare X8, 0
	112 JumpIfEqual {243}
	113 Move W8, [X8+24]
	114 Subtract W8, W8, 1
	115 Move X21, 0x22F7000
	116 Move X21, [X21+360]
	117 Move W20, [X19+32]
	118 Move X0, [X21]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {124}
	122 Call 0x1C17DFC
	123 Move X0, [X21]
	124 Move X8, [X0+184]
	125 Move X8, [X8+8]
	126 Compare X8, 0
	127 JumpIfEqual {243}
	128 Move W8, [X8+24]
	129 Subtract W8, W8, 1
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move W8, [X19+32]
	132 Add W8, W8, 1
	133 Move [X19+32], W8
	134 Call SpectatorManager.get__spawnedPlayers, X0
	135 Compare X0, 0
	136 JumpIfEqual {243}
	137 Move X8, 0x22F6000
	138 Move X8, [X8+2128]
	139 Move X1, [X8]
	140 Call Dictionary`2<UInt32, Object>.get_Values, X0
	141 Move X8, 0x22F7000
	142 Move X8, [X8+3816]
	143 Move X21, X0
	144 Move X8, [X8]
	145 Move X0, X8
	146 Call 0x1C17F10
	147 Move X8, 0x22F8000
	148 Move X8, [X8+1864]
	149 Move X1, X21
	150 Move X20, X0
	151 Move X2, [X8]
	152 Call List`1<Object>..ctor, X0, X1
	153 Compare X20, 0
	154 JumpIfEqual {243}
	155 Move X8, 0x22F7000
	156 Move W1, [X19+48]
	157 Move X8, [X8+3184]
	158 Move X0, X20
	159 Move X2, [X8]
	160 Call List`1<Object>.get_Item, X0, X1
	161 Move [X19+40], X0
	162 Move X0, X19
	163 Call SpectatorManager.SetSpectatorCameraToTarget, X0
	164 Add X1, X31, 0
	165 Move W0, 1
	166 Move X2, X31
	167 Call XRInputManager.GetJoystickValue, X0, X1
	168 Move TEMP, X0
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfNotEqual {222}
	172 Move S1, [X31]
	173 Move S0, [X31+4]
	174 Move S3, 0.5
	175 Move W9, [X19+129]
	176 NotImplemented "Instruction FABS not yet implemented."
	177 NotImplemented "Instruction FABS not yet implemented."
	178 NotImplemented "Instruction FCMP not yet implemented."
	179 NotImplemented "Instruction CSET not yet implemented."
	180 NotImplemented "Instruction FCMP not yet implemented."
	181 NotImplemented "Instruction CSET not yet implemented."
	182 Or W8, W8, W10
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move [X19+129], W8
	185 Compare W8, 0
	186 JumpIfEqual {236}
	187 Move S3, 0.5
	188 NotImplemented "Instruction FCMP not yet implemented."
	189 Move V4, [X19+36]
	190 Move W8, 0xC2340000
	191 Move W9, 0x42340000
	192 NotImplemented "Instruction FCMP not yet implemented."
	193 Move S1, W8
	194 Move S5, W9
	195 NotImplemented "Instruction FCSEL not yet implemented."
	196 Subtract S1, S4, S1
	197 Move [X19+36], S1
	198 NotImplemented "Instruction FCMP not yet implemented."
	199 Move W8, [X19+32]
	200 NotImplemented "Instruction FCMP not yet implemented."
	201 Move S0, -1
	202 Move S1, 1
	203 NotImplemented "Instruction FCSEL not yet implemented."
	204 NotImplemented "Instruction FCVTZS not yet implemented."
	205 Subtract W20, W8, W9
	206 Move [X19+32], W20
	207 Move X21, 0x22F7000
	208 Move X21, [X21+360]
	209 Move X0, [X21]
	210 Move W8, [X0+224]
	211 Compare W8, 0
	212 JumpIfNotEqual {215}
	213 Call 0x1C17DFC
	214 Move X0, [X21]
	215 Move X8, [X0+184]
	216 Move X8, [X8+8]
	217 Compare X8, 0
	218 JumpIfEqual {243}
	219 Move W8, [X8+24]
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Move [X19+32], W31
	222 Move [X19+129], W31
	223 Compare W8, 0
	224 JumpIfNotEqual {227}
	225 Call 0x1C17DFC
	226 Move X0, [X21]
	227 Move X8, [X0+184]
	228 Move X8, [X8+8]
	229 Compare X8, 0
	230 JumpIfEqual {243}
	231 Move W8, [X8+24]
	232 Subtract W8, W8, 1
	233 Move [X19+32], W8
	234 Move X0, X19
	235 Call SpectatorManager.SetSpectatorCameraToTarget, X0
	236 Move X20, [X31+32]
	237 Move X19, [X31+40]
	238 Move X30, [X31+16]
	239 Move X21, [X31+24]
	240 Add X31, X31, 48
	241 Return 
	242 Move [X19+32], W31
	243 Call 0x1C17F20

Method: System.Void SetSpectator(System.Boolean active)

Disassembly:
	0x01E02A6C B 0x1E02A90
	0x01E02A70 ADRP X8, 0x22F5000
	0x01E02A74 LDR X8, [X8 + 0x440]
	0x01E02A78 ADD X0, X31, 0x8
	0x01E02A7C LDR X1, [X8]
	0x01E02A80 BL 0x2BC434C
	0x01E02A84 MOV X0, X19
	0x01E02A88 MOV X1, X31
	0x01E02A8C BL 0x1D947A0
	0x01E02A90 LDP X20, X19, [X31 + 0x70]
	0x01E02A94 LDP X30, X21, [X31 + 0x60]
	0x01E02A98 LDP D9, D8, [X31 + 0x50]
	0x01E02A9C LDP D11, D10, [X31 + 0x40]
	0x01E02AA0 LDP D13, D12, [X31 + 0x30]
	0x01E02AA4 ADD X31, X31, 0x80
	0x01E02AA8 RET
	0x01E02AAC BL 0x1C16F20
	0x01E02AB0 BL 0x1C16F20
	0x01E02AB4 B 0x1E02ABC
	0x01E02AB8 B 0x1E02ABC
	0x01E02ABC MOV X20, X0
	0x01E02AC0 CMP W1, 0x1
	0x01E02AC4 B.NE 0x1E02AF8
	0x01E02AC8 MOV X0, X20
	0x01E02ACC BL 0x3EB1AD0
	0x01E02AD0 LDR X21, [X0]
	0x01E02AD4 BL 0x3EB1AE0
	0x01E02AD8 ADRP X8, 0x22F5000
	0x01E02ADC LDR X8, [X8 + 0x440]
	0x01E02AE0 ADD X0, X31, 0x8
	0x01E02AE4 LDR X1, [X8]
	0x01E02AE8 BL 0x2BC434C
	0x01E02AEC CBZ X21, 0x1E02A84
	0x01E02AF0 MOV X0, X21
	0x01E02AF4 BL 0x1C16F18
	0x01E02AF8 MOV X21, X31
	0x01E02AFC B 0x1E02B04
	0x01E02B00 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x25D7000
	006 Move X21, 0x22F4000
	007 Move W8, [X20+3432]
	008 Move X21, [X21+2464]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x22F4000
	015 Move X0, [X0+2464]
	016 Call 0x1C17CF4
	017 Move X0, 0x22F7000
	018 Move X0, [X0+360]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3432], W8
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X31
	028 Call NetPlayer.get_localObjectID
	029 Compare W0, 0
	030 JumpIfEqual {45}
	031 Move X8, 0x22F7000
	032 Move X8, [X8+360]
	033 Move W20, W0
	034 Move X0, [X8]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 And W0, W19, 1
	040 Move W1, W20
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Return 

Method: System.Void SetSpectator(System.Boolean active, System.UInt32 id)

Disassembly:
	0x01E02B04 ADRP X8, 0x22F5000
	0x01E02B08 LDR X8, [X8 + 0x440]
	0x01E02B0C LDR X1, [X8]
	0x01E02B10 ADD X0, X31, 0x8
	0x01E02B14 BL 0x2BC434C
	0x01E02B18 CBNZ X21, 0x1E02B24
	0x01E02B1C MOV X0, X20
	0x01E02B20 BL 0x1D2C690
	0x01E02B24 MOV X0, X21
	0x01E02B28 BL 0x1C16F18
	0x01E02B2C BL 0x1990590
	0x01E02B30 STR X30, [X31 - 0x30]!
	0x01E02B34 STP X22, X21, [X31 + 0x10]
	0x01E02B38 STP X20, X19, [X31 + 0x20]
	0x01E02B3C ADRP X21, 0x25D6000
	0x01E02B40 LDRB W8, [X21 + 0xD7A]
	0x01E02B44 MOV X19, X1
	0x01E02B48 MOV X20, X0
	0x01E02B4C TBNZ X8, 0x0, 0x1E02B70
	0x01E02B50 ADRP X0, 0x22F4000
	0x01E02B54 LDR X0, [X0 + 0xBB8]
	0x01E02B58 BL 0x1C16CF4
	0x01E02B5C ADRP X0, 0x22F1000
	0x01E02B60 LDR X0, [X0 + 0x598]
	0x01E02B64 BL 0x1C16CF4
	0x01E02B68 MOVZ W8, 0x1
	0x01E02B6C STRB W8, [X21 + 0xD7A]
	0x01E02B70 STR X31, [X19]
	0x01E02B74 CBZ X20, 0x1E02C14
	0x01E02B78 ADRP X22, 0x22F1000
	0x01E02B7C LDR X22, [X22 + 0x598]
	0x01E02B80 MOV X0, X20
	0x01E02B84 MOV X1, X31
	0x01E02B88 BL 0x3C8E82C
	0x01E02B8C LDR X8, [X22]
	0x01E02B90 MOV X21, X0
	0x01E02B94 LDR W9, [X8 + 0xE0]
	0x01E02B98 CBNZ W9, 0x1E02BA4
	0x01E02B9C MOV X0, X8
	0x01E02BA0 BL 0x1C16DFC
	0x01E02BA4 MOV X0, X21
	0x01E02BA8 MOV X1, X31
	0x01E02BAC MOV X2, X31
	0x01E02BB0 BL 0x3C354F8
	0x01E02BB4 TBZ X0, 0x0, 0x1E02BCC
	0x01E02BB8 MOV X0, X20
	0x01E02BBC MOV X1, X31
	0x01E02BC0 BL 0x3C8E82C
	0x01E02BC4 CBZ X0, 0x1E02C14
	0x01E02BC8 MOV X20, X0
	0x01E02BCC ADRP X8, 0x22F4000
	0x01E02BD0 LDR X8, [X8 + 0xBB8]
	0x01E02BD4 MOV X0, X20
	0x01E02BD8 LDR X1, [X8]
	0x01E02BDC BL 0x21A3894
	0x01E02BE0 STR X0, [X19]
	0x01E02BE4 MOV X20, X0
	0x01E02BE8 LDR X0, [X22]
	0x01E02BEC LDR W8, [X0 + 0xE0]
	0x01E02BF0 CBNZ W8, 0x1E02BF8
	0x01E02BF4 BL 0x1C16DFC
	0x01E02BF8 MOV X0, X20
	0x01E02BFC LDP X20, X19, [X31 + 0x20]
	0x01E02C00 LDP X22, X21, [X31 + 0x10]
	0x01E02C04 MOV X1, X31
	0x01E02C08 MOV X2, X31
	0x01E02C0C LDR X30, [X31], #0x30
	0x01E02C10 B 0x3C354F8
	0x01E02C14 BL 0x1C16F20
	0x01E02C18 STP X30, X21, [X31 - 0x20]!
	0x01E02C1C STP X20, X19, [X31 + 0x10]
	0x01E02C20 ADRP X21, 0x25D6000
	0x01E02C24 LDRB W8, [X21 + 0xD77]
	0x01E02C28 MOV X20, X1
	0x01E02C2C MOV X19, X0
	0x01E02C30 TBNZ X8, 0x0, 0x1E02C48
	0x01E02C34 ADRP X0, 0x22F3000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x25D7000
	007 Move X21, 0x22F7000
	008 Move W8, [X22+3433]
	009 Move X21, [X21+360]
	010 Move W20, W1
	011 Move W19, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x22F2000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move X0, 0x22F7000
	020 Move X0, [X0+360]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3433], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Move X22, [X8]
	032 Compare X22, 0
	033 JumpIfEqual {97}
	034 Move W1, W20
	035 Call SpectatorManager.GetPlayerByID, X0, X1
	036 Move [X22+40], X0
	037 Move X8, [X21]
	038 Move X8, [X8+184]
	039 Move X22, [X8]
	040 Compare X22, 0
	041 JumpIfEqual {97}
	042 Move W1, W20
	043 Call SpectatorManager.GetPlayerByID, X0, X1
	044 Move X1, X0
	045 Call SpectatorManager.GetNetPlayerIndex, X0, X1
	046 Move [X22+48], W0
	047 Move X8, [X21]
	048 Move X8, [X8+184]
	049 Move X8, [X8]
	050 Compare X8, 0
	051 JumpIfEqual {97}
	052 Move X9, 0x22F2000
	053 Move X9, [X9+1432]
	054 Move X20, [X8+40]
	055 Move X0, [X9]
	056 Move W9, [X0+224]
	057 Compare W9, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X20
	061 Move X1, X31
	062 Move X2, X31
	063 Call Object.op_Inequality, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {91}
	068 Move X0, [X21]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {74}
	072 Call 0x1C17DFC
	073 Move X0, [X21]
	074 Move X8, [X0+184]
	075 Move X20, [X8]
	076 Compare X20, 0
	077 JumpIfEqual {97}
	078 And W1, W19, 1
	079 Move X0, X20
	080 Call SpectatorManager.SetSpectatorCoroutine, X0, X1
	081 Move X1, X0
	082 Move X0, X20
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X2, X31
	088 Move X30, [X31+48]
	089 Call MonoBehaviour.StartCoroutine, X0, X1
	090 Return 
	091 Move X20, [X31+32]
	092 Move X19, [X31+40]
	093 Move X22, [X31+16]
	094 Move X21, [X31+24]
	095 Move X30, [X31+48]
	096 Return 
	097 Call 0x1C17F20

Method: System.UInt32 GetNetPlayerIndex(System.UInt32 id)

Disassembly:
	0x01E02C8C B 0x3C36C30
	0x01E02C90 STP X30, X21, [X31 - 0x20]!
	0x01E02C94 STP X20, X19, [X31 + 0x10]
	0x01E02C98 ADRP X21, 0x25D6000
	0x01E02C9C LDRB W8, [X21 + 0xD78]

ISIL:
	001 Move [X31-16], X30
	002 Call SpectatorManager.GetPlayerByID, X0, X1
	003 Move X1, X0
	004 Move X30, [X31+16]
	005 Call SpectatorManager.GetNetPlayerIndex, X0, X1
	006 Return X0

Method: System.UInt32 GetNetPlayerIndex(AnimalCompany.NetPlayer player)

Disassembly:
	0x01E02D14 CBZ X8, 0x1E02D44
	0x01E02D18 LDR X0, [X8 + 0x20]
	0x01E02D1C CBZ X0, 0x1E02D44
	0x01E02D20 LDR X1, [X19 + 0x20]
	0x01E02D24 LDP X20, X19, [X31 + 0x10]
	0x01E02D28 MOV W2, W31
	0x01E02D2C MOV X3, X31
	0x01E02D30 LDP X30, X21, [X31], #0x20
	0x01E02D34 B 0x1DC24D8
	0x01E02D38 LDP X20, X19, [X31 + 0x10]
	0x01E02D3C LDP X30, X21, [X31], #0x20
	0x01E02D40 RET
	0x01E02D44 BL 0x1C16F20
	0x01E02D48 MOV X1, X31
	0x01E02D4C B 0x3C36C30
	0x01E02D50 STP X30, X21, [X31 - 0x20]!
	0x01E02D54 STP X20, X19, [X31 + 0x10]
	0x01E02D58 ADRP X21, 0x25D6000
	0x01E02D5C LDRB W8, [X21 + 0xD79]
	0x01E02D60 MOV X19, X1
	0x01E02D64 MOV X20, X0
	0x01E02D68 TBNZ X8, 0x0, 0x1E02D80
	0x01E02D6C ADRP X0, 0x22F7000
	0x01E02D70 LDR X0, [X0 + 0x148]
	0x01E02D74 BL 0x1C16CF4
	0x01E02D78 MOVZ W8, 0x1
	0x01E02D7C STRB W8, [X21 + 0xD79]
	0x01E02D80 CBZ X20, 0x1E02DA4
	0x01E02D84 ADRP X8, 0x22F7000
	0x01E02D88 LDR X8, [X8 + 0x148]
	0x01E02D8C MOV X0, X20
	0x01E02D90 MOV X1, X19
	0x01E02D94 LDP X20, X19, [X31 + 0x10]
	0x01E02D98 LDR X2, [X8]
	0x01E02D9C LDP X30, X21, [X31], #0x20
	0x01E02DA0 B 0x21A4990
	0x01E02DA4 BL 0x1C16F20
	0x01E02DA8 STR X30, [X31 - 0x30]!
	0x01E02DAC STP X22, X21, [X31 + 0x10]
	0x01E02DB0 STP X20, X19, [X31 + 0x20]
	0x01E02DB4 ADRP X21, 0x25D6000
	0x01E02DB8 LDRB W8, [X21 + 0xD7B]
	0x01E02DBC MOV X19, X1
	0x01E02DC0 MOV X20, X0
	0x01E02DC4 TBNZ X8, 0x0, 0x1E02DE8
	0x01E02DC8 ADRP X0, 0x22F4000
	0x01E02DCC LDR X0, [X0 + 0xBE8]
	0x01E02DD0 BL 0x1C16CF4
	0x01E02DD4 ADRP X0, 0x22F1000
	0x01E02DD8 LDR X0, [X0 + 0x598]
	0x01E02DDC BL 0x1C16CF4
	0x01E02DE0 MOVZ W8, 0x1
	0x01E02DE4 STRB W8, [X21 + 0xD7B]
	0x01E02DE8 CBZ X20, 0x1E02E90
	0x01E02DEC ADRP X22, 0x22F1000
	0x01E02DF0 LDR X22, [X22 + 0x598]
	0x01E02DF4 MOV X0, X20
	0x01E02DF8 MOV X1, X31
	0x01E02DFC BL 0x3C32ECC
	0x01E02E00 MOV X21, X0
	0x01E02E04 MOV X0, X20
	0x01E02E08 MOV X1, X31
	0x01E02E0C BL 0x3C8E82C
	0x01E02E10 LDR X8, [X22]
	0x01E02E14 MOV X22, X0
	0x01E02E18 LDR W9, [X8 + 0xE0]
	0x01E02E1C CBNZ W9, 0x1E02E28
	0x01E02E20 MOV X0, X8
	0x01E02E24 BL 0x1C16DFC
	0x01E02E28 MOV X0, X22
	0x01E02E2C MOV X1, X31
	0x01E02E30 MOV X2, X31
	0x01E02E34 BL 0x3C354F8
	0x01E02E38 TBZ X0, 0x0, 0x1E02E58
	0x01E02E3C MOV X0, X20
	0x01E02E40 MOV X1, X31
	0x01E02E44 BL 0x3C8E82C
	0x01E02E48 CBZ X0, 0x1E02E90
	0x01E02E4C MOV X1, X31
	0x01E02E50 BL 0x3C32ECC
	0x01E02E54 MOV X21, X0
	0x01E02E58 CBZ X21, 0x1E02E90
	0x01E02E5C ADRP X8, 0x22F4000
	0x01E02E60 LDR X8, [X8 + 0xBE8]
	0x01E02E64 MOV X0, X21
	0x01E02E68 LDR X1, [X8]
	0x01E02E6C BL 0x21E58C4
	0x01E02E70 STR X0, [X19]
	0x01E02E74 LDP X20, X19, [X31 + 0x20]
	0x01E02E78 LDP X22, X21, [X31 + 0x10]
	0x01E02E7C CMP X0, 0x0
	0x01E02E80 CSET W8, NE
	0x01E02E84 MOV W0, W8
	0x01E02E88 LDR X30, [X31], #0x30
	0x01E02E8C RET
	0x01E02E90 BL 0x1C16F20
	0x01E02E94 STR X30, [X31 - 0x30]!
	0x01E02E98 STP X22, X21, [X31 + 0x10]
	0x01E02E9C STP X20, X19, [X31 + 0x20]
	0x01E02EA0 ADRP X21, 0x25D6000
	0x01E02EA4 LDRB W8, [X21 + 0xD7C]
	0x01E02EA8 MOV X19, X1
	0x01E02EAC MOV X20, X0
	0x01E02EB0 TBNZ X8, 0x0, 0x1E02ED4
	0x01E02EB4 ADRP X0, 0x22F7000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X20, 0x25D7000
	010 Move W8, [X20+3434]
	011 Move X19, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x22F6000
	017 Move X0, [X0+2128]
	018 Call 0x1C17CF4
	019 Move X0, 0x22F8000
	020 Move X0, [X0+1048]
	021 Call 0x1C17CF4
	022 Move X0, 0x22F8000
	023 Move X0, [X0+1056]
	024 Call 0x1C17CF4
	025 Move X0, 0x22F8000
	026 Move X0, [X0+1064]
	027 Call 0x1C17CF4
	028 Move X0, 0x22F2000
	029 Move X0, [X0+1432]
	030 Call 0x1C17CF4
	031 Move X0, 0x22F8000
	032 Move X0, [X0+1072]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X20+3434], W8
	036 Move [X31+8], X31
	037 Move [X31+16], X31
	038 Move [X31+24], X31
	039 Call SpectatorManager.get__spawnedPlayers, X0
	040 Compare X0, 0
	041 JumpIfEqual {96}
	042 Move X8, 0x22F6000
	043 Move X8, [X8+2128]
	044 Move X1, [X8]
	045 Call Dictionary`2<UInt32, Object>.get_Values, X0
	046 Compare X0, 0
	047 JumpIfEqual {96}
	048 Move X8, 0x22F8000
	049 Move X8, [X8+1072]
	050 Move X23, 0x22F8000
	051 Move X24, 0x22F2000
	052 Move X22, 0x22F8000
	053 Move X1, [X8]
	054 Move X23, [X23+1056]
	055 Move X24, [X24+1432]
	056 Move X22, [X22+1048]
	057 Add X8, X31, 8
	058 Call ValueCollection<UInt32, Object>.GetEnumerator, X0
	059 Move W20, W31
	060 Move X1, [X23]
	061 Add X0, X31, 8
	062 Call Enumerator<UInt32, Object>.MoveNext, X0
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {82}
	067 Move X0, [X24]
	068 Move X21, [X31+24]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X0, X21
	074 Move X1, X19
	075 Move X2, X31
	076 Call Object.op_Equality, X0, X1
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {83}
	081 Add W20, W20, 1
	082 Move W20, W31
	083 Move X1, [X22]
	084 Add X0, X31, 8
	085 Call Enumerator<UInt32, Object>.Dispose, X0
	086 Move W0, W20
	087 Move X20, [X31+80]
	088 Move X19, [X31+88]
	089 Move X22, [X31+64]
	090 Move X21, [X31+72]
	091 Move X24, [X31+48]
	092 Move X23, [X31+56]
	093 Move X30, [X31+32]
	094 Add X31, X31, 96
	095 Return X0
	096 Call 0x1C17F20
	097 Move X19, X0
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X0, X19
	100 Call 0x3EB2AD0
	101 Move X20, [X0]
	102 Call 0x3EB2AE0
	103 Move X1, [X22]
	104 Add X0, X31, 8
	105 Call Enumerator<UInt32, Object>.Dispose, X0
	106 Compare X20, 0
	107 JumpIfEqual {86}
	108 Move X0, X20
	109 Call 0x1C17F18
	110 Move X20, X31
	111 Move X19, X0
	112 Move X1, [X22]
	113 Add X0, X31, 8
	114 Call Enumerator<UInt32, Object>.Dispose, X0
	115 Compare X20, 0
	116 JumpIfNotEqual {119}
	117 Move X0, X19
	118 Call 0x1D2D690
	119 Move X0, X20
	120 Call 0x1C17F18
	121 Call 0x1991590

Method: System.Collections.IEnumerator SetSpectatorCoroutine(System.Boolean isSpectator)

Disassembly:
	0x01E02CA0 MOV X20, X1
	0x01E02CA4 MOV X19, X0
	0x01E02CA8 TBNZ X8, 0x0, 0x1E02CC0
	0x01E02CAC ADRP X0, 0x22F3000
	0x01E02CB0 LDR X0, [X0 + 0x768]
	0x01E02CB4 BL 0x1C16CF4
	0x01E02CB8 MOVZ W8, 0x1
	0x01E02CBC STRB W8, [X21 + 0xD78]
	0x01E02CC0 CBZ X20, 0x1E02D44
	0x01E02CC4 ADRP X8, 0x22F3000
	0x01E02CC8 LDR X8, [X8 + 0x768]
	0x01E02CCC MOV X0, X20
	0x01E02CD0 MOV X2, X31
	0x01E02CD4 LDR X1, [X8]
	0x01E02CD8 BL 0x3C33420
	0x01E02CDC TBZ X0, 0x0, 0x1E02D38
	0x01E02CE0 ADRP X20, 0x25D6000
	0x01E02CE4 LDRB W8, [X20 + 0x792]
	0x01E02CE8 CBNZ W8, 0x1E02D00
	0x01E02CEC ADRP X0, 0x22F2000
	0x01E02CF0 LDR X0, [X0 + 0x5A0]
	0x01E02CF4 BL 0x1C16CF4
	0x01E02CF8 MOVZ W8, 0x1
	0x01E02CFC STRB W8, [X20 + 0x792]
	0x01E02D00 ADRP X8, 0x22F2000
	0x01E02D04 LDR X8, [X8 + 0x5A0]
	0x01E02D08 LDR X8, [X8]
	0x01E02D0C LDR X8, [X8 + 0xB8]
	0x01E02D10 LDR X8, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x25D7000
	007 Move X21, 0x22F8000
	008 Move W8, [X22+3435]
	009 Move X21, [X21+1880]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x22F8000
	017 Move X0, [X0+1880]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3435], W8
	021 Move X0, [X21]
	022 And W21, W20, 1
	023 Call 0x1C17F10
	024 Move X1, X31
	025 Move X20, X0
	026 Call Object..ctor, X0
	027 Move [X20+16], W31
	028 Move [X20+40], X19
	029 Move [X20+32], W21
	030 Move X0, X20
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X30, [X31+48]
	036 Return X0

Method: System.Void SetSpectatorCameraToTargetExternal()

Disassembly:
	0x01E02EE0 MOV X0, X20
	0x01E02EE4 MOV X1, X31
	0x01E02EE8 BL 0x3C32ECC
	0x01E02EEC MOV X21, X0
	0x01E02EF0 MOV X0, X20
	0x01E02EF4 MOV X1, X31
	0x01E02EF8 BL 0x3C8E82C
	0x01E02EFC LDR X8, [X22]
	0x01E02F00 MOV X22, X0
	0x01E02F04 LDR W9, [X8 + 0xE0]
	0x01E02F08 CBNZ W9, 0x1E02F14
	0x01E02F0C MOV X0, X8
	0x01E02F10 BL 0x1C16DFC
	0x01E02F14 MOV X0, X22
	0x01E02F18 MOV X1, X31
	0x01E02F1C MOV X2, X31
	0x01E02F20 BL 0x3C354F8
	0x01E02F24 TBZ X0, 0x0, 0x1E02F44
	0x01E02F28 MOV X0, X20
	0x01E02F2C MOV X1, X31
	0x01E02F30 BL 0x3C8E82C
	0x01E02F34 CBZ X0, 0x1E02F7C
	0x01E02F38 MOV X1, X31
	0x01E02F3C BL 0x3C32ECC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x25D7000
	005 Move X19, 0x22F7000
	006 Move W8, [X20+3436]
	007 Move X19, [X19+360]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22F7000
	013 Move X0, [X0+360]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3436], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X0, [X8]
	025 Compare X0, 0
	026 JumpIfEqual {32}
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Call SpectatorManager.SetSpectatorCameraToTarget, X0
	031 Return 
	032 Call 0x1C17F20

Method: System.Void SetSpectatorCameraToTarget()

Disassembly:
	0x01E02400 MOV X19, X0
	0x01E02404 CMP W8, 0x1
	0x01E02408 B.LT 0x1E02440
	0x01E0240C MOV W20, W31
	0x01E02410 CMP W20, W8
	0x01E02414 B.CS 0x1E02450
	0x01E02418 ADD X8, X19, W20, 0x3, SXTW
	0x01E0241C LDR X0, [X8 + 0x20]
	0x01E02420 CBZ X0, 0x1E0244C
	0x01E02424 MOVZ W1, 0x1
	0x01E02428 MOV X2, X31
	0x01E0242C BL 0x3C8F7C8
	0x01E02430 LDR W8, [X19 + 0x18]
	0x01E02434 ADD W20, W20, 0x1
	0x01E02438 CMP W20, W8
	0x01E0243C B.LT 0x1E02410
	0x01E02440 LDP X20, X19, [X31 + 0x10]
	0x01E02444 LDR X30, [X31], #0x20
	0x01E02448 RET
	0x01E0244C BL 0x1C16F20
	0x01E02450 BL 0x1C16F28
	0x01E02454 MOV X1, X31
	0x01E02458 B 0x3C36C30
	0x01E0245C LDR V0, [X0 + 0x30]
	0x01E02460 FNEG S0, S0
	0x01E02464 STR S0, [X0 + 0x34]
	0x01E02468 RET
	0x01E0246C STP X30, X23, [X31 - 0x30]!
	0x01E02470 STP X22, X21, [X31 + 0x10]
	0x01E02474 STP X20, X19, [X31 + 0x20]
	0x01E02478 ADRP X21, 0x25D6000
	0x01E0247C ADRP X20, 0x22F1000
	0x01E02480 LDRB W8, [X21 + 0xD73]
	0x01E02484 LDR X20, [X20 + 0x598]
	0x01E02488 MOV X19, X0
	0x01E0248C TBNZ X8, 0x0, 0x1E024BC
	0x01E02490 ADRP X0, 0x22F3000
	0x01E02494 LDR X0, [X0 + 0x6D0]
	0x01E02498 BL 0x1C16CF4
	0x01E0249C ADRP X0, 0x22F7000
	0x01E024A0 LDR X0, [X0 + 0x780]
	0x01E024A4 BL 0x1C16CF4
	0x01E024A8 ADRP X0, 0x22F1000
	0x01E024AC LDR X0, [X0 + 0x598]
	0x01E024B0 BL 0x1C16CF4
	0x01E024B4 MOVZ W8, 0x1
	0x01E024B8 STRB W8, [X21 + 0xD73]
	0x01E024BC LDR X0, [X20]
	0x01E024C0 LDR X20, [X19 + 0x20]
	0x01E024C4 LDR W8, [X0 + 0xE0]
	0x01E024C8 CBNZ W8, 0x1E024D0
	0x01E024CC BL 0x1C16DFC
	0x01E024D0 MOV X0, X20
	0x01E024D4 MOV X1, X31
	0x01E024D8 MOV X2, X31
	0x01E024DC BL 0x3C3883C
	0x01E024E0 TBNZ X0, 0x0, 0x1E0256C
	0x01E024E4 LDR X22, [X19 + 0x20]
	0x01E024E8 CBZ X22, 0x1E0257C
	0x01E024EC ADRP X23, 0x22F3000
	0x01E024F0 LDR X20, [X22 + 0x20]
	0x01E024F4 LDR X23, [X23 + 0x6D0]
	0x01E024F8 LDR X0, [X23]
	0x01E024FC BL 0x1C16F10
	0x01E02500 ADRP X8, 0x22F7000
	0x01E02504 LDR X8, [X8 + 0x780]
	0x01E02508 MOV X1, X19
	0x01E0250C MOV X3, X31
	0x01E02510 MOV X21, X0
	0x01E02514 LDR X2, [X8]
	0x01E02518 BL 0x2A6B948
	0x01E0251C MOV X0, X20
	0x01E02520 MOV X1, X21
	0x01E02524 MOV X2, X31
	0x01E02528 BL 0x33C0DE4
	0x01E0252C CBZ X0, 0x1E02568
	0x01E02530 LDR X20, [X23]
	0x01E02534 MOV X19, X0
	0x01E02538 MOV X1, X20
	0x01E0253C BL 0x1C16E00
	0x01E02540 CBZ X0, 0x1E0255C
	0x01E02544 STR X0, [X22 + 0x20]
	0x01E02548 LDR X20, [X23]
	0x01E0254C MOV X0, X19
	0x01E02550 MOV X1, X20
	0x01E02554 BL 0x1C16E00
	0x01E02558 CBNZ X0, 0x1E0256C
	0x01E0255C MOV X0, X19
	0x01E02560 MOV X1, X20
	0x01E02564 BL 0x1C171E0
	0x01E02568 STR X31, [X22 + 0x20]
	0x01E0256C LDP X20, X19, [X31 + 0x20]
	0x01E02570 LDP X22, X21, [X31 + 0x10]
	0x01E02574 LDP X30, X23, [X31], #0x30
	0x01E02578 RET
	0x01E0257C BL 0x1C16F20
	0x01E02580 STP X30, X23, [X31 - 0x30]!
	0x01E02584 STP X22, X21, [X31 + 0x10]
	0x01E02588 STP X20, X19, [X31 + 0x20]
	0x01E0258C ADRP X21, 0x25D6000
	0x01E02590 ADRP X20, 0x22F1000
	0x01E02594 LDRB W8, [X21 + 0xD74]
	0x01E02598 LDR X20, [X20 + 0x598]
	0x01E0259C MOV X19, X0
	0x01E025A0 TBNZ X8, 0x0, 0x1E025D0
	0x01E025A4 ADRP X0, 0x22F3000
	0x01E025A8 LDR X0, [X0 + 0x6D0]
	0x01E025AC BL 0x1C16CF4
	0x01E025B0 ADRP X0, 0x22F7000
	0x01E025B4 LDR X0, [X0 + 0x780]
	0x01E025B8 BL 0x1C16CF4
	0x01E025BC ADRP X0, 0x22F1000
	0x01E025C0 LDR X0, [X0 + 0x598]
	0x01E025C4 BL 0x1C16CF4
	0x01E025C8 MOVZ W8, 0x1
	0x01E025CC STRB W8, [X21 + 0xD74]
	0x01E025D0 LDR X0, [X20]
	0x01E025D4 LDR X20, [X19 + 0x20]
	0x01E025D8 LDR W8, [X0 + 0xE0]
	0x01E025DC CBNZ W8, 0x1E025E4
	0x01E025E0 BL 0x1C16DFC
	0x01E025E4 MOV X0, X20
	0x01E025E8 MOV X1, X31
	0x01E025EC MOV X2, X31
	0x01E025F0 BL 0x3C3883C
	0x01E025F4 TBNZ X0, 0x0, 0x1E02680
	0x01E025F8 LDR X22, [X19 + 0x20]
	0x01E025FC CBZ X22, 0x1E02690
	0x01E02600 ADRP X23, 0x22F3000
	0x01E02604 LDR X20, [X22 + 0x20]
	0x01E02608 LDR X23, [X23 + 0x6D0]
	0x01E0260C LDR X0, [X23]
	0x01E02610 BL 0x1C16F10
	0x01E02614 ADRP X8, 0x22F7000
	0x01E02618 LDR X8, [X8 + 0x780]
	0x01E0261C MOV X1, X19
	0x01E02620 MOV X3, X31
	0x01E02624 MOV X21, X0
	0x01E02628 LDR X2, [X8]
	0x01E0262C BL 0x2A6B948
	0x01E02630 MOV X0, X20
	0x01E02634 MOV X1, X21
	0x01E02638 MOV X2, X31
	0x01E0263C BL 0x33C0FDC
	0x01E02640 CBZ X0, 0x1E0267C
	0x01E02644 LDR X20, [X23]
	0x01E02648 MOV X19, X0
	0x01E0264C MOV X1, X20
	0x01E02650 BL 0x1C16E00
	0x01E02654 CBZ X0, 0x1E02670
	0x01E02658 STR X0, [X22 + 0x20]
	0x01E0265C LDR X20, [X23]
	0x01E02660 MOV X0, X19
	0x01E02664 MOV X1, X20
	0x01E02668 BL 0x1C16E00
	0x01E0266C CBNZ X0, 0x1E02680
	0x01E02670 MOV X0, X19
	0x01E02674 MOV X1, X20
	0x01E02678 BL 0x1C171E0
	0x01E0267C STR X31, [X22 + 0x20]
	0x01E02680 LDP X20, X19, [X31 + 0x20]
	0x01E02684 LDP X22, X21, [X31 + 0x10]
	0x01E02688 LDP X30, X23, [X31], #0x30
	0x01E0268C RET
	0x01E02690 BL 0x1C16F20
	0x01E02694 STP D9, D8, [X31 - 0x20]!
	0x01E02698 STP X30, X19, [X31 + 0x10]
	0x01E0269C CBZ X1, 0x1E02704
	0x01E026A0 MOV X19, X0
	0x01E026A4 MOV X0, X1
	0x01E026A8 MOV X1, X31
	0x01E026AC BL 0x3C32ECC
	0x01E026B0 CBZ X0, 0x1E02704
	0x01E026B4 MOV X1, X31
	0x01E026B8 BL 0x3C35734
	0x01E026BC CMP W0, 0x6
	0x01E026C0 B.NE 0x1E026F8
	0x01E026C4 LDP S9, S8, [X19 + 0x30]
	0x01E026C8 MOV X0, X31
	0x01E026CC BL 0x3C3C6C4
	0x01E026D0 FADD S1, S8, S9
	0x01E026D4 FCMP S1, S0
	0x01E026D8 B.GT 0x1E026F8
	0x01E026DC LDR X0, [X19 + 0x28]
	0x01E026E0 CBZ X0, 0x1E02704
	0x01E026E4 MOV X1, X31
	0x01E026E8 BL 0x3BFCAC0
	0x01E026EC MOV X0, X31
	0x01E026F0 BL 0x3C3C6C4
	0x01E026F4 STR S0, [X19 + 0x34]
	0x01E026F8 LDP X30, X19, [X31 + 0x10]
	0x01E026FC LDP D9, D8, [X31], #0x20
	0x01E02700 RET
	0x01E02704 BL 0x1C16F20
	0x01E02708 MOVZ W8, 0x42700000
	0x01E0270C MOV X1, X31
	0x01E02710 STR W8, [X0 + 0x30]
	0x01E02714 B 0x3C36C30
	0x01E02718 STR D8, [X31 - 0x20]!
	0x01E0271C STR X30, [X31 + 0x8]
	0x01E02720 STP X20, X19, [X31 + 0x10]
	0x01E02724 ADRP X20, 0x25D6000
	0x01E02728 LDRB W8, [X20 + 0xD75]
	0x01E0272C MOV X19, X0
	0x01E02730 TBNZ X8, 0x0, 0x1E02748
	0x01E02734 ADRP X0, 0x22F7000
	0x01E02738 LDR X0, [X0 + 0x788]
	0x01E0273C BL 0x1C16CF4
	0x01E02740 MOVZ W8, 0x1
	0x01E02744 STRB W8, [X20 + 0xD75]
	0x01E02748 LDRB W8, [X19 + 0x28]
	0x01E0274C CBZ W8, 0x1E02770
	0x01E02750 LDR V8, [X19 + 0x30]
	0x01E02754 MOV X0, X31
	0x01E02758 BL 0x3C3C714
	0x01E0275C LDR V1, [X19 + 0x2C]
	0x01E02760 FADD S0, S8, S0
	0x01E02764 STR S0, [X19 + 0x30]
	0x01E02768 FCMP S0, S1
	0x01E0276C B.GE 0x1E02780
	0x01E02770 LDP X20, X19, [X31 + 0x10]
	0x01E02774 LDR X30, [X31 + 0x8]
	0x01E02778 LDR V8, [X31], #0x20
	0x01E0277C RET
	0x01E02780 STR W31, [X19 + 0x30]
	0x01E02784 STRB W31, [X19 + 0x28]
	0x01E02788 ADRP X20, 0x25D6000
	0x01E0278C LDRB W8, [X20 + 0x792]
	0x01E02790 CBNZ W8, 0x1E027A8
	0x01E02794 ADRP X0, 0x22F2000
	0x01E02798 LDR X0, [X0 + 0x5A0]
	0x01E0279C BL 0x1C16CF4
	0x01E027A0 MOVZ W8, 0x1
	0x01E027A4 STRB W8, [X20 + 0x792]
	0x01E027A8 ADRP X8, 0x22F2000
	0x01E027AC LDR X8, [X8 + 0x5A0]
	0x01E027B0 LDR X8, [X8]
	0x01E027B4 LDR X8, [X8 + 0xB8]
	0x01E027B8 LDR X8, [X8]
	0x01E027BC CBZ X8, 0x1E027EC
	0x01E027C0 LDR X0, [X8 + 0x20]
	0x01E027C4 CBZ X0, 0x1E027EC
	0x01E027C8 ADRP X8, 0x22F7000
	0x01E027CC LDR X1, [X19 + 0x20]
	0x01E027D0 LDR X8, [X8 + 0x788]
	0x01E027D4 LDP X20, X19, [X31 + 0x10]
	0x01E027D8 LDR X30, [X31 + 0x8]
	0x01E027DC MOV X3, X31
	0x01E027E0 LDR X2, [X8]
	0x01E027E4 LDR V8, [X31], #0x20
	0x01E027E8 B 0x1DC1528
	0x01E027EC BL 0x1C16F20
	0x01E027F0 SUB X31, X31, 0x80
	0x01E027F4 STP D13, D12, [X31 + 0x30]
	0x01E027F8 STP D11, D10, [X31 + 0x40]
	0x01E027FC STP D9, D8, [X31 + 0x50]
	0x01E02800 STP X30, X21, [X31 + 0x60]
	0x01E02804 STP X20, X19, [X31 + 0x70]
	0x01E02808 ADRP X21, 0x25D6000
	0x01E0280C LDRB W8, [X21 + 0xD76]
	0x01E02810 MOV X20, X1
	0x01E02814 MOV X19, X0
	0x01E02818 TBNZ X8, 0x0, 0x1E02890
	0x01E0281C ADRP X0, 0x22F6000
	0x01E02820 LDR X0, [X0 + 0xA78]
	0x01E02824 BL 0x1C16CF4
	0x01E02828 ADRP X0, 0x22F7000
	0x01E0282C LDR X0, [X0 + 0x790]
	0x01E02830 BL 0x1C16CF4
	0x01E02834 ADRP X0, 0x22F5000
	0x01E02838 LDR X0, [X0 + 0x440]
	0x01E0283C BL 0x1C16CF4
	0x01E02840 ADRP X0, 0x22F5000
	0x01E02844 LDR X0, [X0 + 0x448]
	0x01E02848 BL 0x1C16CF4
	0x01E0284C ADRP X0, 0x22F5000
	0x01E02850 LDR X0, [X0 + 0x450]
	0x01E02854 BL 0x1C16CF4
	0x01E02858 ADRP X0, 0x22F5000
	0x01E0285C LDR X0, [X0 + 0x458]
	0x01E02860 BL 0x1C16CF4
	0x01E02864 ADRP X0, 0x22F7000
	0x01E02868 LDR X0, [X0 + 0x788]
	0x01E0286C BL 0x1C16CF4
	0x01E02870 ADRP X0, 0x22F4000
	0x01E02874 LDR X0, [X0 + 0xD70]
	0x01E02878 BL 0x1C16CF4
	0x01E0287C ADRP X0, 0x22F3000
	0x01E02880 LDR X0, [X0 + 0x768]
	0x01E02884 BL 0x1C16CF4
	0x01E02888 MOVZ W8, 0x1
	0x01E0288C STRB W8, [X21 + 0xD76]
	0x01E02890 STP X31, X31, [X31 + 0x20]
	0x01E02894 STP X31, X31, [X31 + 0x8]
	0x01E02898 STR X31, [X31 + 0x18]
	0x01E0289C STR X31, [X31]
	0x01E028A0 CBZ X20, 0x1E02AB0
	0x01E028A4 ADRP X8, 0x22F3000
	0x01E028A8 LDR X8, [X8 + 0x768]
	0x01E028AC MOV X0, X20
	0x01E028B0 MOV X2, X31
	0x01E028B4 LDR X1, [X8]
	0x01E028B8 BL 0x3C33420
	0x01E028BC TBZ X0, 0x0, 0x1E028D0
	0x01E028C0 MOVZ W8, 0x1
	0x01E028C4 STRB W8, [X19 + 0x28]
	0x01E028C8 STR W31, [X19 + 0x30]
	0x01E028CC B 0x1E02A90
	0x01E028D0 ADD X1, X31, 0x28
	0x01E028D4 MOV X0, X20
	0x01E028D8 BL 0x1E02B30
	0x01E028DC TBZ X0, 0x0, 0x1E02990
	0x01E028E0 LDR X19, [X31 + 0x28]
	0x01E028E4 CBZ X19, 0x1E02AB0
	0x01E028E8 ADRP X8, 0x22F4000
	0x01E028EC LDR X8, [X8 + 0xD70]
	0x01E028F0 MOV X0, X19
	0x01E028F4 MOV X2, X31
	0x01E028F8 LDR X1, [X8]
	0x01E028FC BL 0x3C33420
	0x01E02900 TBZ X0, 0x0, 0x1E02A84
	0x01E02904 ADRP X8, 0x22F6000
	0x01E02908 LDR X8, [X8 + 0xA78]
	0x01E0290C ADD X1, X31, 0x20
	0x01E02910 MOV X0, X19
	0x01E02914 LDR X2, [X8]
	0x01E02918 BL 0x21A4990
	0x01E0291C TBZ X0, 0x0, 0x1E02A84
	0x01E02920 LDR X0, [X31 + 0x20]
	0x01E02924 CBZ X0, 0x1E02AB0
	0x01E02928 MOV X1, X31
	0x01E0292C BL 0x1D9D050
	0x01E02930 LDR X8, [X31 + 0x20]
	0x01E02934 CBZ X8, 0x1E02AB0
	0x01E02938 MOV X20, X0
	0x01E0293C MOV X0, X8
	0x01E02940 MOV X1, X31
	0x01E02944 BL 0x1D9CFD0
	0x01E02948 CBZ X20, 0x1E02AB0
	0x01E0294C ADRP X8, 0x22F5000
	0x01E02950 LDR X8, [X8 + 0x458]
	0x01E02954 MOV X0, X20
	0x01E02958 LDR X1, [X8]
	0x01E0295C ADD X8, X31, 0x8
	0x01E02960 BL 0x301CB58
	0x01E02964 ADRP X20, 0x22F5000
	0x01E02968 LDR X20, [X20 + 0x448]
	0x01E0296C LDR X1, [X20]
	0x01E02970 ADD X0, X31, 0x8
	0x01E02974 BL 0x2BC4350
	0x01E02978 TBZ X0, 0x0, 0x1E02A70
	0x01E0297C LDR X0, [X31 + 0x18]
	0x01E02980 CBZ X0, 0x1E02AAC
	0x01E02984 MOV X1, X31
	0x01E02988 BL 0x1D947A0
	0x01E0298C B 0x1E0296C
	0x01E02990 MOV X0, X20
	0x01E02994 MOV X1, X31
	0x01E02998 BL 0x3C8E82C
	0x01E0299C CBZ X0, 0x1E02A90
	0x01E029A0 ADRP X8, 0x22F7000
	0x01E029A4 LDR X8, [X8 + 0x790]
	0x01E029A8 ADD X1, X31, 0x0
	0x01E029AC LDR X2, [X8]
	0x01E029B0 BL 0x21A4990
	0x01E029B4 TBZ X0, 0x0, 0x1E02A90
	0x01E029B8 LDR X20, [X31]
	0x01E029BC MOV X0, X19
	0x01E029C0 MOV X1, X31
	0x01E029C4 BL 0x3C32E90
	0x01E029C8 CBZ X0, 0x1E02AB0
	0x01E029CC MOV X1, X31
	0x01E029D0 BL 0x3C3F58C
	0x01E029D4 ADRP X19, 0x25D6000
	0x01E029D8 LDRB W8, [X19 + 0x783]
	0x01E029DC MOV V8.16B, V0.16B
	0x01E029E0 MOV V9.16B, V1.16B
	0x01E029E4 MOV V10.16B, V2.16B
	0x01E029E8 CBNZ W8, 0x1E02A00
	0x01E029EC ADRP X0, 0x22F1000
	0x01E029F0 LDR X0, [X0 + 0x5A0]
	0x01E029F4 BL 0x1C16CF4
	0x01E029F8 MOVZ W8, 0x1
	0x01E029FC STRB W8, [X19 + 0x783]
	0x01E02A00 ADRP X8, 0x22F1000
	0x01E02A04 LDR X8, [X8 + 0x5A0]
	0x01E02A08 MOV X0, X31
	0x01E02A0C LDR X8, [X8]
	0x01E02A10 LDR X8, [X8 + 0xB8]
	0x01E02A14 LDP S11, S12, [X8]
	0x01E02A18 LDR V13, [X8 + 0x8]
	0x01E02A1C BL 0x1E769D8
	0x01E02A20 CBZ X20, 0x1E02AB0
	0x01E02A24 ADRP X9, 0x22F7000
	0x01E02A28 LDR X8, [X20]
	0x01E02A2C LDR X9, [X9 + 0x788]
	0x01E02A30 MOV X5, X0
	0x01E02A34 MOVN W1, 0x80000000
	0x01E02A38 LDR X6, [X8 + 0x3F0]
	0x01E02A3C LDR X4, [X9]
	0x01E02A40 LDR X9, [X8 + 0x3E8]
	0x01E02A44 MOV X0, X20
	0x01E02A48 MOV V0.16B, V8.16B
	0x01E02A4C MOV V1.16B, V9.16B
	0x01E02A50 MOV V2.16B, V10.16B
	0x01E02A54 MOV X2, X31
	0x01E02A58 MOV X3, X31
	0x01E02A5C MOV V3.16B, V11.16B
	0x01E02A60 MOV V4.16B, V12.16B
	0x01E02A64 MOV V5.16B, V13.16B
	0x01E02A68 BLR X9

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+80], D15
	003 Move [X31+88], D14
	004 Move [X31+96], D13
	005 Move [X31+104], D12
	006 Move [X31+112], D11
	007 Move [X31+120], D10
	008 Move [X31+128], D9
	009 Move [X31+136], D8
	010 Move [X31+144], X30
	011 Move [X31+152], X25
	012 Move [X31+160], X24
	013 Move [X31+168], X23
	014 Move [X31+176], X22
	015 Move [X31+184], X21
	016 Move [X31+192], X20
	017 Move [X31+200], X19
	018 Move X20, 0x25D7000
	019 Move W8, [X20+3437]
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x22F7000
	026 Move X0, [X0+360]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+3437], W8
	030 Move X8, [X19+40]
	031 Compare X8, 0
	032 JumpIfEqual {461}
	033 Move X0, [X8+144]
	034 Compare X0, 0
	035 JumpIfEqual {461}
	036 Move X1, X31
	037 Call Transform.get_position, X0
	038 Move X8, [X19+40]
	039 Move [X31+64], D0
	040 Move [X31+48], D1
	041 Compare X8, 0
	042 JumpIfEqual {461}
	043 Move X0, [X8+144]
	044 Compare X0, 0
	045 JumpIfEqual {461}
	046 Move X1, X31
	047 Move V8, V2
	048 Call Transform.get_forward, X0
	049 Move X0, X31
	050 Call Extensions.Flatten, X0
	051 Move X23, 0x25D7000
	052 Move W8, [X23+1925]
	053 Move V9, V2
	054 Compare W8, 0
	055 JumpIfNotEqual {65}
	056 Move X0, 0x22F2000
	057 Move X0, [X0+1448]
	058 Move [X31+16], V1
	059 Move [X31+24], V0
	060 Call 0x1C17CF4
	061 Move V1, [X31+16]
	062 Move V0, [X31+32]
	063 Move W8, 1
	064 Move [X23+1925], W8
	065 Move X24, 0x22F2000
	066 Move X24, [X24+1448]
	067 Move X0, [X24]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {76}
	071 Move [X31+16], V1
	072 Move [X31+24], V0
	073 Call 0x1C17DFC
	074 Move V1, [X31+16]
	075 Move V0, [X31+32]
	076 Move X8, -20017152
	077 Move X21, 0x22F7000
	078 Multiply S2, S0, S0
	079 Multiply S3, S1, S1
	080 Move V15, [X8+380]
	081 Move X22, 0x22F2000
	082 Move X21, [X21+360]
	083 Add S2, S2, S3
	084 Multiply S3, S9, S9
	085 Move X22, [X22+1440]
	086 Add S2, S3, S2
	087 NotImplemented "Instruction FSQRT not yet implemented."
	088 NotImplemented "Instruction FCMP not yet implemented."
	089 Move V0.S[1], V1.S[0]
	090 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	091 NotImplemented "Instruction INVALID not yet implemented."
	092 NotImplemented "Instruction FDIV not yet implemented."
	093 Move X20, 0x25D7000
	094 Move W8, [X20+1923]
	095 Compare W8, 0
	096 JumpIfNotEqual {102}
	097 Move X0, 0x22F2000
	098 Move X0, [X0+1440]
	099 Call 0x1C17CF4
	100 Move W8, 1
	101 Move [X20+1923], W8
	102 Move X8, [X22]
	103 Move X8, [X8+184]
	104 Move V10, [X8]
	105 Move V9, [X8+8]
	106 Move X0, [X21]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {112}
	110 Call 0x1C17DFC
	111 Move X0, [X21]
	112 Move X8, [X0+184]
	113 Move V1, [X31+48]
	114 Move V2, [X31+64]
	115 Move X25, 0x25D7000
	116 Move W9, [X25+1926]
	117 Move V0, [X8+24]
	118 Move V2.S[1], V1.S[0]
	119 Move [X31+2], V2
	120 NotImplemented "Instruction INVALID not yet implemented."
	121 Multiply S0, S9, S0
	122 Add V9, V2, V1
	123 Add S10, S8, S0
	124 Compare W9, 0
	125 JumpIfNotEqual {133}
	126 Move X0, 0x22F2000
	127 Move X0, [X0+1440]
	128 Call 0x1C17CF4
	129 Move X8, [X21]
	130 Move W9, 1
	131 Move [X25+1926], W9
	132 Move X8, [X8+184]
	133 Move X9, [X22]
	134 Move V0, [X8+20]
	135 Move X8, -20017152
	136 Move V1, [X19+36]
	137 Move X9, [X9+184]
	138 Move V4, [X8+260]
	139 Move X0, X31
	140 Move V2, [X9+24]
	141 Move V3, [X9+32]
	142 Multiply S1, S1, S4
	143 NotImplemented "Instruction INVALID not yet implemented."
	144 Multiply S0, S3, S0
	145 Add V9, V9, V2
	146 Add S10, S10, S0
	147 Move S0, W31
	148 Move S2, W31
	149 Call Quaternion.Internal_FromEulerRad, X0
	150 Move V4, [X31+2]
	151 Subtract S6, S10, S8
	152 Move X0, X31
	153 Subtract V4, V9, V4
	154 Move S5, V4.S[1]
	155 Call Quaternion.op_Multiply, X0, X1
	156 Move X0, [X19+64]
	157 Compare X0, 0
	158 JumpIfEqual {461}
	159 Move X1, X31
	160 Move V10, V0
	161 Move V11, V1
	162 Move V9, V2
	163 Call Component.get_transform, X0
	164 Compare X0, 0
	165 JumpIfEqual {461}
	166 Move X1, X31
	167 Call Transform.get_forward, X0
	168 Move X0, X31
	169 Call Extensions.Flatten, X0
	170 Move W8, [X23+1925]
	171 Move V12, V0
	172 Move V13, V1
	173 Move V14, V2
	174 Compare W8, 0
	175 JumpIfNotEqual {181}
	176 Move X0, 0x22F2000
	177 Move X0, [X0+1448]
	178 Call 0x1C17CF4
	179 Move W8, 1
	180 Move [X23+1925], W8
	181 Move X0, [X24]
	182 Move W8, [X0+224]
	183 Compare W8, 0
	184 JumpIfNotEqual {186}
	185 Call 0x1C17DFC
	186 Move V0, [X31+4]
	187 Multiply S1, S13, S13
	188 Add S2, S0, S10
	189 Move V0, [X31+3]
	190 Add S10, S8, S9
	191 Add S11, S0, S11
	192 Multiply S0, S12, S12
	193 Add S0, S0, S1
	194 Multiply S1, S14, S14
	195 Add S0, S1, S0
	196 NotImplemented "Instruction FSQRT not yet implemented."
	197 NotImplemented "Instruction FCMP not yet implemented."
	198 NotImplemented "Instruction FDIV not yet implemented."
	199 Move [X31+32], S1
	200 NotImplemented "Instruction FDIV not yet implemented."
	201 Move [X31+16], S1
	202 NotImplemented "Instruction FDIV not yet implemented."
	203 Move X20, 0x25D7000
	204 Move W8, [X20+1923]
	205 Compare W8, 0
	206 JumpIfNotEqual {214}
	207 Move X0, 0x22F2000
	208 Move X0, [X0+1440]
	209 Move V9, V2
	210 Call 0x1C17CF4
	211 Move V2, V9
	212 Move W8, 1
	213 Move [X20+1923], W8
	214 Move X8, [X22]
	215 Move X8, [X8+184]
	216 Move V0, [X8]
	217 Move [X31+32], S0
	218 Move S0, [X8+4]
	219 Move S9, [X8+8]
	220 Move [X31+16], S0
	221 Move V1, [X31+48]
	222 Move V0, [X31+64]
	223 Move [X31+12], S2
	224 Move X0, X31
	225 Subtract S0, S0, S2
	226 Subtract S1, S1, S11
	227 Subtract S2, S8, S10
	228 Call Extensions.Flatten, X0
	229 Move W8, [X23+1925]
	230 Move V12, V0
	231 Move V13, V1
	232 Move V14, V2
	233 Compare W8, 0
	234 JumpIfNotEqual {240}
	235 Move X0, 0x22F2000
	236 Move X0, [X0+1448]
	237 Call 0x1C17CF4
	238 Move W8, 1
	239 Move [X23+1925], W8
	240 Move X0, [X24]
	241 Move W8, [X0+224]
	242 Compare W8, 0
	243 JumpIfNotEqual {245}
	244 Call 0x1C17DFC
	245 Multiply S0, S12, S12
	246 Multiply S1, S13, S13
	247 Add S0, S0, S1
	248 Multiply S1, S14, S14
	249 Add S0, S1, S0
	250 NotImplemented "Instruction FSQRT not yet implemented."
	251 NotImplemented "Instruction FCMP not yet implemented."
	252 NotImplemented "Instruction FDIV not yet implemented."
	253 NotImplemented "Instruction FDIV not yet implemented."
	254 NotImplemented "Instruction FDIV not yet implemented."
	255 Move X20, 0x25D7000
	256 Move W8, [X20+1923]
	257 Compare W8, 0
	258 JumpIfNotEqual {264}
	259 Move X0, 0x22F2000
	260 Move X0, [X0+1440]
	261 Call 0x1C17CF4
	262 Move W8, 1
	263 Move [X20+1923], W8
	264 Move X8, [X22]
	265 Move X8, [X8+184]
	266 Move S0, [X8]
	267 Move S1, [X8+4]
	268 Move V2, [X8+8]
	269 Move X0, X31
	270 Call Extensions.Flatten, X0
	271 Move W8, [X23+1925]
	272 Move V12, V0
	273 Move V13, V1
	274 Move V14, V2
	275 Compare W8, 0
	276 JumpIfNotEqual {282}
	277 Move X0, 0x22F2000
	278 Move X0, [X0+1448]
	279 Call 0x1C17CF4
	280 Move W8, 1
	281 Move [X23+1925], W8
	282 Move X0, [X24]
	283 Move W8, [X0+224]
	284 Compare W8, 0
	285 JumpIfNotEqual {287}
	286 Call 0x1C17DFC
	287 Multiply S0, S12, S12
	288 Multiply S1, S13, S13
	289 Add S0, S0, S1
	290 Multiply S1, S14, S14
	291 Add S0, S1, S0
	292 NotImplemented "Instruction FSQRT not yet implemented."
	293 NotImplemented "Instruction FCMP not yet implemented."
	294 NotImplemented "Instruction FDIV not yet implemented."
	295 NotImplemented "Instruction FDIV not yet implemented."
	296 NotImplemented "Instruction FDIV not yet implemented."
	297 Move X20, 0x25D7000
	298 Move W8, [X20+1923]
	299 Compare W8, 0
	300 JumpIfNotEqual {306}
	301 Move X0, 0x22F2000
	302 Move X0, [X0+1440]
	303 Call 0x1C17CF4
	304 Move W8, 1
	305 Move [X20+1923], W8
	306 Move X8, [X22]
	307 Move X8, [X8+184]
	308 Move S12, [X8]
	309 Move S13, [X8+4]
	310 Move V14, [X8+8]
	311 Move W8, [X25+1926]
	312 Compare W8, 0
	313 JumpIfNotEqual {319}
	314 Move X0, 0x22F2000
	315 Move X0, [X0+1440]
	316 Call 0x1C17CF4
	317 Move W8, 1
	318 Move [X25+1926], W8
	319 Move X8, [X22]
	320 Move V1, [X31+16]
	321 Move V2, V9
	322 Move V3, V12
	323 Move X8, [X8+184]
	324 Move V4, V13
	325 Move V5, V14
	326 Move X0, X31
	327 Move V0, [X8+32]
	328 Move X9, [X8+24]
	329 Move [X31+8], S0
	330 Move V0, [X31+32]
	331 Move [X31], X9
	332 Call 0x1DD5D78
	333 Move W8, [X25+1926]
	334 Move X20, [X19+72]
	335 Move V9, V0
	336 Compare W8, 0
	337 JumpIfNotEqual {343}
	338 Move X0, 0x22F2000
	339 Move X0, [X0+1440]
	340 Call 0x1C17CF4
	341 Move W8, 1
	342 Move [X25+1926], W8
	343 Compare X20, 0
	344 JumpIfEqual {461}
	345 Move X8, [X22]
	346 Move X0, X20
	347 Move V3, V9
	348 Move X1, X31
	349 Move X8, [X8+184]
	350 Move S1, [X8+28]
	351 Move S2, [X8+32]
	352 Move V0, [X8+24]
	353 Call Transform.Rotate, X0, X1, V0
	354 Move W8, [X23+1925]
	355 Compare W8, 0
	356 JumpIfNotEqual {362}
	357 Move X0, 0x22F2000
	358 Move X0, [X0+1448]
	359 Call 0x1C17CF4
	360 Move W8, 1
	361 Move [X23+1925], W8
	362 Move V0, [X31+4]
	363 Move V1, [X31+12]
	364 Move X0, [X24]
	365 Subtract S9, S10, S8
	366 Subtract S12, S1, S0
	367 Move V0, [X31+3]
	368 Move W8, [X0+224]
	369 Subtract S11, S11, S0
	370 Compare W8, 0
	371 JumpIfNotEqual {373}
	372 Call 0x1C17DFC
	373 Multiply S0, S12, S12
	374 Multiply S1, S11, S11
	375 Add S0, S0, S1
	376 Multiply S1, S9, S9
	377 Add S0, S1, S0
	378 NotImplemented "Instruction FSQRT not yet implemented."
	379 NotImplemented "Instruction FCMP not yet implemented."
	380 NotImplemented "Instruction FDIV not yet implemented."
	381 NotImplemented "Instruction FDIV not yet implemented."
	382 NotImplemented "Instruction FDIV not yet implemented."
	383 Move X20, 0x25D7000
	384 Move W8, [X20+1923]
	385 Compare W8, 0
	386 JumpIfNotEqual {392}
	387 Move X0, 0x22F2000
	388 Move X0, [X0+1440]
	389 Call 0x1C17CF4
	390 Move W8, 1
	391 Move [X20+1923], W8
	392 Move X8, [X22]
	393 Move X8, [X8+184]
	394 Move S12, [X8]
	395 Move S13, [X8+4]
	396 Move V14, [X8+8]
	397 Move X8, [X21]
	398 Move X8, [X8+184]
	399 Move X8, [X8+8]
	400 Compare X8, 0
	401 JumpIfEqual {461}
	402 NotImplemented "Instruction LDRSW not yet implemented."
	403 Move W10, [X8+24]
	404 NotImplemented "Instruction CMP not yet implemented."
	405 Move X0, [X19+72]
	406 Compare X0, 0
	407 JumpIfEqual {461}
	408 Add X8, X8, X9
	409 Move V15, [X8+32]
	410 Move X1, X31
	411 Call Transform.get_position, X0
	412 Move X0, [X19+64]
	413 Compare X0, 0
	414 JumpIfEqual {461}
	415 Move X1, X31
	416 Move V9, V0
	417 Move V10, V1
	418 Move V11, V2
	419 Call Component.get_transform, X0
	420 Compare X0, 0
	421 JumpIfEqual {461}
	422 Move X1, X31
	423 Call Transform.get_position, X0
	424 Move X0, [X19+72]
	425 Compare X0, 0
	426 JumpIfEqual {461}
	427 Move V6, [X31+3]
	428 Multiply S4, S13, S15
	429 Multiply S3, S14, S15
	430 Subtract S2, S11, S2
	431 Add S4, S6, S4
	432 Move V6, [X31+4]
	433 Subtract S1, S10, S1
	434 Multiply S5, S12, S15
	435 Subtract S0, S9, S0
	436 Add S3, S8, S3
	437 Move X20, [X31+192]
	438 Move X19, [X31+200]
	439 Move X22, [X31+176]
	440 Move X21, [X31+184]
	441 Move X24, [X31+160]
	442 Move X23, [X31+168]
	443 Move X30, [X31+144]
	444 Move X25, [X31+152]
	445 Move D9, [X31+128]
	446 Move D8, [X31+136]
	447 Move D11, [X31+112]
	448 Move D10, [X31+120]
	449 Move D13, [X31+96]
	450 Move D12, [X31+104]
	451 Move D15, [X31+80]
	452 Move D14, [X31+88]
	453 Add S5, S6, S5
	454 Add S2, S3, S2
	455 Add S1, S4, S1
	456 Add S0, S5, S0
	457 Move X1, X31
	458 Add X31, X31, 208
	459 Call Transform.set_position, X0, X1
	460 Return 
	461 Call 0x1C17F20
	462 Call 0x1C17F28

Method: AnimalCompany.NetPlayer GetPlayerByID(System.UInt32 id)

Disassembly:
	0x01E02C38 LDR X0, [X0 + 0x768]
	0x01E02C3C BL 0x1C16CF4
	0x01E02C40 MOVZ W8, 0x1
	0x01E02C44 STRB W8, [X21 + 0xD77]
	0x01E02C48 CBZ X20, 0x1E02C78
	0x01E02C4C ADRP X8, 0x22F3000
	0x01E02C50 LDR X8, [X8 + 0x768]
	0x01E02C54 MOV X0, X20
	0x01E02C58 MOV X2, X31
	0x01E02C5C LDR X1, [X8]
	0x01E02C60 BL 0x3C33420
	0x01E02C64 TBZ X0, 0x0, 0x1E02C6C
	0x01E02C68 STRB W31, [X19 + 0x28]
	0x01E02C6C LDP X20, X19, [X31 + 0x10]
	0x01E02C70 LDP X30, X21, [X31], #0x20
	0x01E02C74 RET
	0x01E02C78 BL 0x1C16F20
	0x01E02C7C MOVZ W8, 0xD70A
	0x01E02C80 MOVK W8, 0x3C230000
	0x01E02C84 MOV X1, X31
	0x01E02C88 STR W8, [X0 + 0x2C]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x25D7000
	005 Move W8, [X20+3438]
	006 Move W19, W1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x22F8000
	012 Move X0, [X0+1872]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3438], W8
	016 Call SpectatorManager.get__spawnedPlayers, X0
	017 Compare X0, 0
	018 JumpIfEqual {28}
	019 Move X8, 0x22F8000
	020 Move X8, [X8+1872]
	021 Move W1, W19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X2, [X8]
	025 Move X30, [X31+32]
	026 Call Dictionary`2<UInt32, Object>.get_Item, X0, X1
	027 Return X0
	028 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01E02F40 MOV X21, X0
	0x01E02F44 CBZ X21, 0x1E02F7C
	0x01E02F48 ADRP X8, 0x22F7000
	0x01E02F4C LDR X8, [X8 + 0x798]

ISIL:
	001 Move W8, 1
	002 Move X1, X31
	003 Move [X0+32], W8
	004 Call MonoBehaviour..ctor, X0
	005 Return 

Method: System.Void .cctor()

Disassembly:
	0x01E02F50 MOV X0, X21
	0x01E02F54 LDR X1, [X8]
	0x01E02F58 BL 0x21E58C4
	0x01E02F5C STR X0, [X19]
	0x01E02F60 LDP X20, X19, [X31 + 0x20]
	0x01E02F64 LDP X22, X21, [X31 + 0x10]
	0x01E02F68 CMP X0, 0x0
	0x01E02F6C CSET W8, NE
	0x01E02F70 MOV W0, W8
	0x01E02F74 LDR X30, [X31], #0x30
	0x01E02F78 RET
	0x01E02F7C BL 0x1C16F20
	0x01E02F80 MOV X1, X31
	0x01E02F84 B 0x33BDD8C
	0x01E02F88 RET
	0x01E02F8C B 0x1E02F90
	0x01E02F90 STR X30, [X31 - 0x30]!
	0x01E02F94 STP X22, X21, [X31 + 0x10]
	0x01E02F98 STP X20, X19, [X31 + 0x20]
	0x01E02F9C ADRP X20, 0x25D6000
	0x01E02FA0 ADRP X21, 0x22F1000
	0x01E02FA4 LDRB W8, [X20 + 0xD7D]
	0x01E02FA8 LDR X21, [X21 + 0x598]
	0x01E02FAC MOV X19, X0
	0x01E02FB0 TBNZ X8, 0x0, 0x1E02FE0
	0x01E02FB4 ADRP X0, 0x22F7000
	0x01E02FB8 LDR X0, [X0 + 0x7A0]
	0x01E02FBC BL 0x1C16CF4
	0x01E02FC0 ADRP X0, 0x22F1000
	0x01E02FC4 LDR X0, [X0 + 0x598]
	0x01E02FC8 BL 0x1C16CF4
	0x01E02FCC ADRP X0, 0x22F7000
	0x01E02FD0 LDR X0, [X0 + 0x7A8]
	0x01E02FD4 BL 0x1C16CF4
	0x01E02FD8 MOVZ W8, 0x1
	0x01E02FDC STRB W8, [X20 + 0xD7D]
	0x01E02FE0 LDR X0, [X21]
	0x01E02FE4 STR X31, [X31 + 0x8]
	0x01E02FE8 LDR X20, [X19 + 0x20]
	0x01E02FEC LDR W8, [X0 + 0xE0]
	0x01E02FF0 CBNZ W8, 0x1E02FF8
	0x01E02FF4 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x25D7000
	007 Move X22, 0x22F2000
	008 Move X19, 0x22F8000
	009 Move X20, 0x22F7000
	010 Move W8, [X21+3439]
	011 Move X22, [X22+1592]
	012 Move X19, [X19+1888]
	013 Move X20, [X20+360]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x22F2000
	019 Move X0, [X0+1592]
	020 Call 0x1C17CF4
	021 Move X0, 0x22F7000
	022 Move X0, [X0+360]
	023 Call 0x1C17CF4
	024 Move X0, 0x22F8000
	025 Move X0, [X0+1888]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+3439], W8
	029 Move X0, [X22]
	030 Move W1, 3
	031 Call 0x1C17D6C
	032 Move X1, [X19]
	033 Move X2, X31
	034 Move X19, X0
	035 Call RuntimeHelpers.InitializeArray, X0, X1
	036 Move X8, [X20]
	037 Move X9, -20000768
	038 Move V0, [X9]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X8, [X8+184]
	042 Move W9, 0xC0600000
	043 Move [X8+8], X19
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move [X8+16], D0
	047 Move [X8+24], W9
	048 Move X30, [X31+48]
	049 Return 

