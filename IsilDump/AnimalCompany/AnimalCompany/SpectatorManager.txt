Type: AnimalCompany.SpectatorManager

Method: System.Collections.Generic.Dictionary`2<System.UInt32, AnimalCompany.NetPlayer> get__spawnedPlayers()

Disassembly:
	0x01CF19F4 LDP X22, X21, [X31 + 0x40]
	0x01CF19F8 LDP X24, X23, [X31 + 0x30]
	0x01CF19FC LDR X30, [X31 + 0x20]
	0x01CF1A00 ADD X31, X31, 0x60
	0x01CF1A04 RET
	0x01CF1A08 BL 0x1B6EA1C
	0x01CF1A0C B 0x1CF1A14
	0x01CF1A10 B 0x1CF1A14
	0x01CF1A14 MOV X19, X0
	0x01CF1A18 CMP W1, 0x1
	0x01CF1A1C B.NE 0x1CF1A48
	0x01CF1A20 MOV X0, X19
	0x01CF1A24 BL 0x3D19840
	0x01CF1A28 LDR X20, [X0]
	0x01CF1A2C BL 0x3D19850
	0x01CF1A30 LDR X1, [X22]
	0x01CF1A34 ADD X0, X31, 0x8
	0x01CF1A38 BL 0x2A6B898
	0x01CF1A3C CBZ X20, 0x1CF19EC
	0x01CF1A40 MOV X0, X20
	0x01CF1A44 BL 0x1B6EA14
	0x01CF1A48 MOV X20, X31
	0x01CF1A4C B 0x1CF1A54
	0x01CF1A50 MOV X19, X0
	0x01CF1A54 LDR X1, [X22]
	0x01CF1A58 ADD X0, X31, 0x8
	0x01CF1A5C BL 0x2A6B898
	0x01CF1A60 CBNZ X20, 0x1CF1A6C
	0x01CF1A64 MOV X0, X19
	0x01CF1A68 BL 0x1C8418C
	0x01CF1A6C MOV X0, X20
	0x01CF1A70 BL 0x1B6EA14
	0x01CF1A74 BL 0x18F46A8
	0x01CF1A78 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2533000
	005 Move X19, 0x225E000
	006 Move W8, [X20+1717]
	007 Move X19, [X19+680]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x225E000
	013 Move X0, [X0+680]
	014 Call 0x1B6F7F0
	015 Move W8, 1
	016 Move [X20+1717], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1B6F8F8
	022 Move X20, 0x2533000
	023 Move W8, [X20+1290]
	024 Compare W8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, 0x225E000
	027 Move X0, [X0+680]
	028 Call 0x1B6F7F0
	029 Move W8, 1
	030 Move [X20+1290], W8
	031 Move X0, [X19]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1B6F8F8
	036 Move X0, [X19]
	037 Move X8, [X0+184]
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X0, [X8]
	041 Move X30, [X31+32]
	042 Return X0

Method: System.Void Awake()

Disassembly:
	0x01CF1A7C STP X20, X19, [X31 + 0x10]
	0x01CF1A80 MOV W19, W1
	0x01CF1A84 MOV X1, X31
	0x01CF1A88 MOV X20, X0
	0x01CF1A8C BL 0x32276F8
	0x01CF1A90 STR W19, [X20 + 0x10]
	0x01CF1A94 LDP X20, X19, [X31 + 0x10]
	0x01CF1A98 LDR X30, [X31], #0x20
	0x01CF1A9C RET
	0x01CF1AA0 STR X30, [X31 - 0x20]!
	0x01CF1AA4 STP X20, X19, [X31 + 0x10]
	0x01CF1AA8 ADRP X20, 0x2532000
	0x01CF1AAC ADRP X19, 0x225E000
	0x01CF1AB0 LDRB W8, [X20 + 0x6BD]
	0x01CF1AB4 LDR X19, [X19 + 0x408]
	0x01CF1AB8 TBNZ X8, 0x0, 0x1CF1AD0
	0x01CF1ABC ADRP X0, 0x225E000
	0x01CF1AC0 LDR X0, [X0 + 0x408]
	0x01CF1AC4 BL 0x1B6E7F0
	0x01CF1AC8 MOVZ W8, 0x1
	0x01CF1ACC STRB W8, [X20 + 0x6BD]
	0x01CF1AD0 LDR X0, [X19]
	0x01CF1AD4 LDR W8, [X0 + 0xE0]
	0x01CF1AD8 CBNZ W8, 0x1CF1AE4
	0x01CF1ADC BL 0x1B6E8F8
	0x01CF1AE0 LDR X0, [X19]
	0x01CF1AE4 LDR X8, [X0 + 0xB8]
	0x01CF1AE8 LDR X0, [X8]
	0x01CF1AEC CBZ X0, 0x1CF1AFC
	0x01CF1AF0 LDP X20, X19, [X31 + 0x10]
	0x01CF1AF4 LDR X30, [X31], #0x20
	0x01CF1AF8 B 0x1CF0FC0
	0x01CF1AFC BL 0x1B6EA1C
	0x01CF1B00 MOVZ W8, 0x1
	0x01CF1B04 MOV X1, X31
	0x01CF1B08 STR W8, [X0 + 0x20]
	0x01CF1B0C B 0x3A9EEE4
	0x01CF1B10 STR X30, [X31 - 0x30]!
	0x01CF1B14 STP X22, X21, [X31 + 0x10]
	0x01CF1B18 STP X20, X19, [X31 + 0x20]
	0x01CF1B1C ADRP X21, 0x2532000
	0x01CF1B20 ADRP X22, 0x225D000
	0x01CF1B24 ADRP X19, 0x225F000
	0x01CF1B28 ADRP X20, 0x225E000
	0x01CF1B2C LDRB W8, [X21 + 0x6C0]
	0x01CF1B30 LDR X22, [X22 + 0xFC0]
	0x01CF1B34 LDR X19, [X19 + 0x5D8]
	0x01CF1B38 LDR X20, [X20 + 0x408]
	0x01CF1B3C TBNZ X8, 0x0, 0x1CF1B6C
	0x01CF1B40 ADRP X0, 0x225D000
	0x01CF1B44 LDR X0, [X0 + 0xFC0]
	0x01CF1B48 BL 0x1B6E7F0
	0x01CF1B4C ADRP X0, 0x225E000
	0x01CF1B50 LDR X0, [X0 + 0x408]
	0x01CF1B54 BL 0x1B6E7F0
	0x01CF1B58 ADRP X0, 0x225F000
	0x01CF1B5C LDR X0, [X0 + 0x5D8]
	0x01CF1B60 BL 0x1B6E7F0
	0x01CF1B64 MOVZ W8, 0x1
	0x01CF1B68 STRB W8, [X21 + 0x6C0]
	0x01CF1B6C LDR X0, [X22]
	0x01CF1B70 MOVZ W1, 0x3

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2533000
	007 Move X21, 0x225F000
	008 Move W8, [X20+1718]
	009 Move X21, [X21+1032]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x225D000
	016 Move X0, [X0+1144]
	017 Call 0x1B6F7F0
	018 Move X0, 0x225F000
	019 Move X0, [X0+1032]
	020 Call 0x1B6F7F0
	021 Move W8, 1
	022 Move [X20+1718], W8
	023 Move X0, [X21]
	024 Move X22, 0x225D000
	025 Move W8, [X0+224]
	026 Move X22, [X22+1144]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1B6F8F8
	030 Move X0, [X21]
	031 Move X8, [X22]
	032 Move X9, [X0+184]
	033 Move W10, [X8+224]
	034 Move X20, [X9]
	035 Compare W10, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X8
	038 Call 0x1B6F8F8
	039 Move X0, X20
	040 Move X1, X31
	041 Move X2, X31
	042 Call Object.op_Inequality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {66}
	047 Move X0, X19
	048 Move X1, X31
	049 Call Component.get_gameObject, X0
	050 Move X8, [X22]
	051 Move X19, X0
	052 Move W9, [X8+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {57}
	055 Move X0, X8
	056 Call 0x1B6F8F8
	057 Move X0, X19
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X1, X31
	063 Move X30, [X31+48]
	064 Call Object.Destroy, X0
	065 Return 
	066 Move X0, [X21]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {72}
	070 Call 0x1B6F8F8
	071 Move X0, [X21]
	072 Move X8, [X0+184]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move [X8], X19
	076 Move X20, [X31+32]
	077 Move X19, [X31+40]
	078 Move X30, [X31+48]
	079 Return 

Method: System.Void OnDestroy()

Disassembly:
	0x01CF1B74 BL 0x1B6E868
	0x01CF1B78 LDR X1, [X19]
	0x01CF1B7C MOV X2, X31
	0x01CF1B80 MOV X19, X0
	0x01CF1B84 BL 0x312E9C0
	0x01CF1B88 LDR X8, [X20]
	0x01CF1B8C ADRP X9, 0xFFFFFFFFFEDBC000
	0x01CF1B90 LDR V0, [X9 + 0x8A0]
	0x01CF1B94 LDP X22, X21, [X31 + 0x10]
	0x01CF1B98 LDR X8, [X8 + 0xB8]
	0x01CF1B9C MOVZ W9, 0xC0600000
	0x01CF1BA0 STR X19, [X8 + 0x8]
	0x01CF1BA4 LDP X20, X19, [X31 + 0x20]
	0x01CF1BA8 STR D0, [X8 + 0x10]
	0x01CF1BAC STR W9, [X8 + 0x18]
	0x01CF1BB0 LDR X30, [X31], #0x30
	0x01CF1BB4 RET
	0x01CF1BB8 RET
	0x01CF1BBC STR X30, [X31 - 0x20]!
	0x01CF1BC0 STP X20, X19, [X31 + 0x10]
	0x01CF1BC4 ADRP X19, 0x2532000
	0x01CF1BC8 LDRB W8, [X19 + 0x6C1]
	0x01CF1BCC MOV X20, X0
	0x01CF1BD0 TBNZ X8, 0x0, 0x1CF1BE8
	0x01CF1BD4 ADRP X0, 0x225E000
	0x01CF1BD8 LDR X0, [X0 + 0x318]
	0x01CF1BDC BL 0x1B6E7F0
	0x01CF1BE0 MOVZ W8, 0x1
	0x01CF1BE4 STRB W8, [X19 + 0x6C1]
	0x01CF1BE8 LDR W8, [X20 + 0x10]
	0x01CF1BEC LDR X19, [X20 + 0x28]
	0x01CF1BF0 CMP W8, 0x1
	0x01CF1BF4 B.EQ 0x1CF1C14
	0x01CF1BF8 CBNZ W8, 0x1CF1D70
	0x01CF1BFC LDRB W8, [X20 + 0x20]
	0x01CF1C00 MOVN W9, 0x0
	0x01CF1C04 STR W9, [X20 + 0x10]
	0x01CF1C08 CBZ W8, 0x1CF1C44
	0x01CF1C0C CBNZ X19, 0x1CF1C84
	0x01CF1C10 B 0x1CF1D80
	0x01CF1C14 LDRB W8, [X20 + 0x20]
	0x01CF1C18 MOVN W9, 0x0
	0x01CF1C1C STR W9, [X20 + 0x10]
	0x01CF1C20 CBZ W8, 0x1CF1D70
	0x01CF1C24 ADRP X8, 0x225E000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2533000
	006 Move X21, 0x225F000
	007 Move W8, [X20+1719]
	008 Move X21, [X21+1032]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x225D000
	015 Move X0, [X0+1144]
	016 Call 0x1B6F7F0
	017 Move X0, 0x225F000
	018 Move X0, [X0+1032]
	019 Call 0x1B6F7F0
	020 Move W8, 1
	021 Move [X20+1719], W8
	022 Move X0, [X21]
	023 Move X20, 0x225D000
	024 Move W8, [X0+224]
	025 Move X20, [X20+1144]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1B6F8F8
	029 Move X0, [X21]
	030 Move X8, [X20]
	031 Move X9, [X0+184]
	032 Move W10, [X8+224]
	033 Move X20, [X9]
	034 Compare W10, 0
	035 JumpIfNotEqual {38}
	036 Move X0, X8
	037 Call 0x1B6F8F8
	038 Move X0, X20
	039 Move X1, X19
	040 Move X2, X31
	041 Call Object.op_Equality, X0, X1
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {54}
	046 Move X0, [X21]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1B6F8F8
	051 Move X0, [X21]
	052 Move X8, [X0+184]
	053 Move [X8], X31
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Return 

Method: System.Void Update()

Disassembly:
	0x01CF1C28 LDR X8, [X8 + 0x318]
	0x01CF1C2C LDR X8, [X8]
	0x01CF1C30 LDR X8, [X8 + 0xB8]
	0x01CF1C34 LDRB W8, [X8]
	0x01CF1C38 CBZ W8, 0x1CF1CFC
	0x01CF1C3C CBNZ X19, 0x1CF1D2C
	0x01CF1C40 B 0x1CF1D80
	0x01CF1C44 CBZ X19, 0x1CF1D80
	0x01CF1C48 LDR X0, [X19 + 0x60]
	0x01CF1C4C CBZ X0, 0x1CF1D80
	0x01CF1C50 MOV W1, W31
	0x01CF1C54 MOV X2, X31
	0x01CF1C58 BL 0x1CC54D4
	0x01CF1C5C LDR X0, [X19 + 0x38]
	0x01CF1C60 CBZ X0, 0x1CF1D80
	0x01CF1C64 MOVZ W1, 0x1
	0x01CF1C68 MOV X2, X31
	0x01CF1C6C BL 0x3A9A604
	0x01CF1C70 LDR X0, [X19 + 0x40]
	0x01CF1C74 CBZ X0, 0x1CF1D80
	0x01CF1C78 MOV W1, W31
	0x01CF1C7C MOV X2, X31
	0x01CF1C80 BL 0x3A9A604
	0x01CF1C84 LDR X0, [X19 + 0x50]
	0x01CF1C88 CBZ X0, 0x1CF1D80
	0x01CF1C8C LDRB W8, [X20 + 0x20]
	0x01CF1C90 MOV X2, X31
	0x01CF1C94 CMP W8, 0x0
	0x01CF1C98 CSET W1, EQ
	0x01CF1C9C BL 0x3A9A604
	0x01CF1CA0 LDR X0, [X19 + 0x58]
	0x01CF1CA4 CBZ X0, 0x1CF1D80
	0x01CF1CA8 LDRB W1, [X20 + 0x20]
	0x01CF1CAC MOV X2, X31
	0x01CF1CB0 BL 0x3A9A604
	0x01CF1CB4 LDR X0, [X19 + 0x70]
	0x01CF1CB8 CBZ X0, 0x1CF1D80
	0x01CF1CBC LDRB W8, [X20 + 0x20]
	0x01CF1CC0 MOV X2, X31
	0x01CF1CC4 CMP W8, 0x0
	0x01CF1CC8 CSET W1, EQ
	0x01CF1CCC BL 0x3A9A604
	0x01CF1CD0 LDR X0, [X19 + 0x78]
	0x01CF1CD4 CBZ X0, 0x1CF1D80
	0x01CF1CD8 LDRB W8, [X20 + 0x20]
	0x01CF1CDC MOV X2, X31
	0x01CF1CE0 CMP W8, 0x0
	0x01CF1CE4 CSET W1, EQ
	0x01CF1CE8 BL 0x3A9A604
	0x01CF1CEC MOVZ W0, 0x1
	0x01CF1CF0 STR X31, [X20 + 0x18]
	0x01CF1CF4 STR W0, [X20 + 0x10]
	0x01CF1CF8 B 0x1CF1D74
	0x01CF1CFC CBZ X19, 0x1CF1D80
	0x01CF1D00 LDR X8, [X19 + 0x28]
	0x01CF1D04 CBZ X8, 0x1CF1D80
	0x01CF1D08 LDR X0, [X8 + 0x88]
	0x01CF1D0C CBZ X0, 0x1CF1D80
	0x01CF1D10 LDR X20, [X19 + 0x68]
	0x01CF1D14 MOV X1, X31
	0x01CF1D18 BL 0x3AA7AD0
	0x01CF1D1C CBZ X20, 0x1CF1D80
	0x01CF1D20 MOV X0, X20
	0x01CF1D24 MOV X1, X31
	0x01CF1D28 BL 0x1D099E0
	0x01CF1D2C MOV X0, X19
	0x01CF1D30 BL 0x1CF0FC0
	0x01CF1D34 LDR X0, [X19 + 0x38]
	0x01CF1D38 CBZ X0, 0x1CF1D80
	0x01CF1D3C MOV W1, W31
	0x01CF1D40 MOV X2, X31
	0x01CF1D44 BL 0x3A9A604
	0x01CF1D48 LDR X0, [X19 + 0x40]
	0x01CF1D4C CBZ X0, 0x1CF1D80
	0x01CF1D50 MOVZ W1, 0x1
	0x01CF1D54 MOV X2, X31
	0x01CF1D58 BL 0x3A9A604
	0x01CF1D5C LDR X0, [X19 + 0x60]
	0x01CF1D60 CBZ X0, 0x1CF1D80
	0x01CF1D64 MOVZ W1, 0x1
	0x01CF1D68 MOV X2, X31
	0x01CF1D6C BL 0x1CC54D4
	0x01CF1D70 MOV W0, W31
	0x01CF1D74 LDP X20, X19, [X31 + 0x10]
	0x01CF1D78 LDR X30, [X31], #0x20
	0x01CF1D7C RET
	0x01CF1D80 BL 0x1B6EA1C
	0x01CF1D84 LDR X0, [X0 + 0x18]
	0x01CF1D88 RET
	0x01CF1D8C STP X30, X19, [X31 - 0x10]!
	0x01CF1D90 ADRP X0, 0x225C000
	0x01CF1D94 LDR X0, [X0 + 0x990]
	0x01CF1D98 BL 0x1B6E804
	0x01CF1D9C BL 0x1B6EA0C
	0x01CF1DA0 MOV X1, X31
	0x01CF1DA4 MOV X19, X0
	0x01CF1DA8 BL 0x31E99B4
	0x01CF1DAC ADRP X0, 0x225F000
	0x01CF1DB0 LDR X0, [X0 + 0x5E0]
	0x01CF1DB4 BL 0x1B6E804
	0x01CF1DB8 MOV X1, X0
	0x01CF1DBC MOV X0, X19
	0x01CF1DC0 BL 0x1B6E8E8
	0x01CF1DC4 LDR X0, [X0 + 0x18]
	0x01CF1DC8 RET
	0x01CF1DCC STR X30, [X31 - 0x40]!
	0x01CF1DD0 STP X24, X23, [X31 + 0x10]
	0x01CF1DD4 STP X22, X21, [X31 + 0x20]
	0x01CF1DD8 STP X20, X19, [X31 + 0x30]
	0x01CF1DDC ADRP X23, 0x2532000
	0x01CF1DE0 ADRP X24, 0x225F000
	0x01CF1DE4 ADRP X20, 0x225F000
	0x01CF1DE8 ADRP X22, 0x225F000
	0x01CF1DEC ADRP X21, 0x225F000
	0x01CF1DF0 LDRB W8, [X23 + 0x6C2]
	0x01CF1DF4 LDR X24, [X24 + 0x5E8]
	0x01CF1DF8 LDR X20, [X20 + 0x5F0]
	0x01CF1DFC LDR X22, [X22 + 0x5F8]
	0x01CF1E00 LDR X21, [X21 + 0x600]
	0x01CF1E04 MOV X19, X0
	0x01CF1E08 TBNZ X8, 0x0, 0x1CF1E44
	0x01CF1E0C ADRP X0, 0x225F000
	0x01CF1E10 LDR X0, [X0 + 0x5F8]
	0x01CF1E14 BL 0x1B6E7F0
	0x01CF1E18 ADRP X0, 0x225F000
	0x01CF1E1C LDR X0, [X0 + 0x5E8]
	0x01CF1E20 BL 0x1B6E7F0
	0x01CF1E24 ADRP X0, 0x225F000
	0x01CF1E28 LDR X0, [X0 + 0x600]
	0x01CF1E2C BL 0x1B6E7F0
	0x01CF1E30 ADRP X0, 0x225F000
	0x01CF1E34 LDR X0, [X0 + 0x5F0]
	0x01CF1E38 BL 0x1B6E7F0
	0x01CF1E3C MOVZ W8, 0x1
	0x01CF1E40 STRB W8, [X23 + 0x6C2]
	0x01CF1E44 LDR X0, [X24]
	0x01CF1E48 BL 0x1B6EA0C
	0x01CF1E4C LDR X3, [X20]
	0x01CF1E50 MOV X1, X31
	0x01CF1E54 MOV W2, W31
	0x01CF1E58 MOV X4, X31
	0x01CF1E5C MOV X5, X31
	0x01CF1E60 MOV X6, X31
	0x01CF1E64 MOV X7, X31
	0x01CF1E68 MOV X20, X0
	0x01CF1E6C BL 0x359DE64
	0x01CF1E70 LDR X0, [X22]
	0x01CF1E74 BL 0x1B6EA0C
	0x01CF1E78 LDR X2, [X21]
	0x01CF1E7C MOV X1, X19
	0x01CF1E80 MOV X3, X31
	0x01CF1E84 MOV X21, X0
	0x01CF1E88 BL 0x27F23DC
	0x01CF1E8C CBZ X20, 0x1CF1EBC
	0x01CF1E90 MOV X0, X20
	0x01CF1E94 MOV X1, X21
	0x01CF1E98 MOV X2, X31
	0x01CF1E9C BL 0x359DC14
	0x01CF1EA0 MOV X0, X20
	0x01CF1EA4 LDP X20, X19, [X31 + 0x30]
	0x01CF1EA8 LDP X22, X21, [X31 + 0x20]
	0x01CF1EAC LDP X24, X23, [X31 + 0x10]
	0x01CF1EB0 MOV X1, X31
	0x01CF1EB4 LDR X30, [X31], #0x40
	0x01CF1EB8 B 0x359E2D8
	0x01CF1EBC BL 0x1B6EA1C
	0x01CF1EC0 MOV X1, X31
	0x01CF1EC4 B 0x3A9EEE4
	0x01CF1EC8 STP X30, X19, [X31 - 0x10]!
	0x01CF1ECC LDR X19, [X0 + 0x20]
	0x01CF1ED0 MOV X1, X31
	0x01CF1ED4 BL 0x3A9B084
	0x01CF1ED8 CBZ X0, 0x1CF1EF8
	0x01CF1EDC MOV X1, X31
	0x01CF1EE0 BL 0x3AA7658
	0x01CF1EE4 FMOV S3, 1
	0x01CF1EE8 MOV X0, X19
	0x01CF1EEC MOV X1, X31
	0x01CF1EF0 LDP X30, X19, [X31], #0x10
	0x01CF1EF4 B 0x1CCD9CC
	0x01CF1EF8 BL 0x1B6EA1C
	0x01CF1EFC LDR X8, [X0 + 0x20]
	0x01CF1F00 CBZ X8, 0x1CF1F14
	0x01CF1F04 LDR X3, [X8 + 0x18]
	0x01CF1F08 LDR X0, [X8 + 0x40]
	0x01CF1F0C LDR X2, [X8 + 0x28]
	0x01CF1F10 BR X3
	0x01CF1F14 RET
	0x01CF1F18 LDR X8, [X0 + 0x28]
	0x01CF1F1C CBZ X8, 0x1CF1F30
	0x01CF1F20 LDR X3, [X8 + 0x18]
	0x01CF1F24 LDR X0, [X8 + 0x40]
	0x01CF1F28 LDR X2, [X8 + 0x28]
	0x01CF1F2C BR X3
	0x01CF1F30 RET
	0x01CF1F34 STR X30, [X31 - 0x20]!
	0x01CF1F38 STP X20, X19, [X31 + 0x10]
	0x01CF1F3C ADRP X20, 0x2532000
	0x01CF1F40 LDRB W8, [X20 + 0x6C3]
	0x01CF1F44 MOV X19, X0
	0x01CF1F48 TBNZ X8, 0x0, 0x1CF1F60
	0x01CF1F4C ADRP X0, 0x225D000
	0x01CF1F50 LDR X0, [X0 + 0x430]
	0x01CF1F54 BL 0x1B6E7F0
	0x01CF1F58 MOVZ W8, 0x1
	0x01CF1F5C STRB W8, [X20 + 0x6C3]
	0x01CF1F60 LDR W8, [X19 + 0x30]
	0x01CF1F64 CMP W8, 0x1
	0x01CF1F68 B.EQ 0x1CF1F88
	0x01CF1F6C CBNZ W8, 0x1CF1FA4
	0x01CF1F70 MOV X0, X19
	0x01CF1F74 MOV X1, X31
	0x01CF1F78 BL 0x3A9B0C0
	0x01CF1F7C CBZ X0, 0x1CF200C
	0x01CF1F80 MOVZ W1, 0x7
	0x01CF1F84 B 0x1CF1F9C
	0x01CF1F88 MOV X0, X19
	0x01CF1F8C MOV X1, X31
	0x01CF1F90 BL 0x3A9B0C0
	0x01CF1F94 CBZ X0, 0x1CF200C
	0x01CF1F98 MOVZ W1, 0x9
	0x01CF1F9C MOV X2, X31
	0x01CF1FA0 BL 0x3A9D964
	0x01CF1FA4 ADRP X8, 0x225D000
	0x01CF1FA8 LDR X8, [X8 + 0x430]
	0x01CF1FAC MOV X0, X19
	0x01CF1FB0 LDR X1, [X8]
	0x01CF1FB4 BL 0x2090A90
	0x01CF1FB8 CBZ X0, 0x1CF200C
	0x01CF1FBC LDR W8, [X0 + 0x18]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2533000
	007 Move W8, [X20+1720]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {33}
	013 Move X0, 0x225E000
	014 Move X0, [X0+3432]
	015 Call 0x1B6F7F0
	016 Move X0, 0x225E000
	017 Move X0, [X0+2056]
	018 Call 0x1B6F7F0
	019 Move X0, 0x2260000
	020 Move X0, [X0+1472]
	021 Call 0x1B6F7F0
	022 Move X0, 0x225F000
	023 Move X0, [X0+3568]
	024 Call 0x1B6F7F0
	025 Move X0, 0x2260000
	026 Move X0, [X0+688]
	027 Call 0x1B6F7F0
	028 Move X0, 0x225F000
	029 Move X0, [X0+1032]
	030 Call 0x1B6F7F0
	031 Move W8, 1
	032 Move [X20+1720], W8
	033 Move [X31], X31
	034 Move [X31+8], X31
	035 Move X0, [X19+64]
	036 Compare X0, 0
	037 JumpIfEqual {243}
	038 Move X1, X31
	039 Call Behaviour.get_enabled, X0
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {236}
	044 Call SpectatorManager.get__spawnedPlayers, X0
	045 Compare X0, 0
	046 JumpIfEqual {243}
	047 Move X20, 0x225E000
	048 Move X20, [X20+3432]
	049 Move X1, [X20]
	050 Call Dictionary`2<UInt32, Object>.get_Count, X0
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Add X1, X31, 8
	053 Move W0, W31
	054 Move X2, X31
	055 Call XRInputManager.GetJoystickValue, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {86}
	060 Move S0, [X31+8]
	061 Move S1, [X31+12]
	062 Move S2, 0.5
	063 Move W9, [X19+128]
	064 NotImplemented "Instruction FABS not yet implemented."
	065 NotImplemented "Instruction FABS not yet implemented."
	066 NotImplemented "Instruction FCMP not yet implemented."
	067 NotImplemented "Instruction CSET not yet implemented."
	068 NotImplemented "Instruction FCMP not yet implemented."
	069 NotImplemented "Instruction CSET not yet implemented."
	070 Or W8, W8, W10
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move [X19+128], W8
	073 Compare W8, 0
	074 JumpIfEqual {164}
	075 Move W21, [X19+48]
	076 NotImplemented "Instruction FCMP not yet implemented."
	077 Call SpectatorManager.get__spawnedPlayers, X0
	078 Compare X0, 0
	079 JumpIfEqual {243}
	080 Move X1, [X20]
	081 Call Dictionary`2<UInt32, Object>.get_Count, X0
	082 Subtract W8, W0, 1
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move W8, [X19+48]
	085 Add W8, W8, 1
	086 Move [X19+128], W31
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Subtract W8, W21, 1
	089 Move W8, W31
	090 Call SpectatorManager.get__spawnedPlayers, X0
	091 Compare X0, 0
	092 JumpIfEqual {243}
	093 Move X1, [X20]
	094 Call Dictionary`2<UInt32, Object>.get_Count, X0
	095 Subtract W8, W0, 1
	096 Move [X19+48], W8
	097 Move V0, [X31+12]
	098 NotImplemented "Instruction FCMP not yet implemented."
	099 Move W8, [X19+32]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X20, 0x225F000
	102 Move X20, [X20+1032]
	103 Move X0, [X20]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {109}
	107 Call 0x1B6F8F8
	108 Move X0, [X20]
	109 Move X8, [X0+184]
	110 Move X8, [X8+8]
	111 Compare X8, 0
	112 JumpIfEqual {243}
	113 Move W8, [X8+24]
	114 Subtract W8, W8, 1
	115 Move X21, 0x225F000
	116 Move X21, [X21+1032]
	117 Move W20, [X19+32]
	118 Move X0, [X21]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {124}
	122 Call 0x1B6F8F8
	123 Move X0, [X21]
	124 Move X8, [X0+184]
	125 Move X8, [X8+8]
	126 Compare X8, 0
	127 JumpIfEqual {243}
	128 Move W8, [X8+24]
	129 Subtract W8, W8, 1
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move W8, [X19+32]
	132 Add W8, W8, 1
	133 Move [X19+32], W8
	134 Call SpectatorManager.get__spawnedPlayers, X0
	135 Compare X0, 0
	136 JumpIfEqual {243}
	137 Move X8, 0x225E000
	138 Move X8, [X8+2056]
	139 Move X1, [X8]
	140 Call Dictionary`2<UInt32, Object>.get_Values, X0
	141 Move X8, 0x2260000
	142 Move X8, [X8+688]
	143 Move X21, X0
	144 Move X8, [X8]
	145 Move X0, X8
	146 Call 0x1B6FA0C
	147 Move X8, 0x2260000
	148 Move X8, [X8+1472]
	149 Move X1, X21
	150 Move X20, X0
	151 Move X2, [X8]
	152 Call List`1<Object>..ctor, X0, X1
	153 Compare X20, 0
	154 JumpIfEqual {243}
	155 Move X8, 0x225F000
	156 Move W1, [X19+48]
	157 Move X8, [X8+3568]
	158 Move X0, X20
	159 Move X2, [X8]
	160 Call List`1<Object>.get_Item, X0, X1
	161 Move [X19+40], X0
	162 Move X0, X19
	163 Call SpectatorManager.SetSpectatorCameraToTarget, X0
	164 Add X1, X31, 0
	165 Move W0, 1
	166 Move X2, X31
	167 Call XRInputManager.GetJoystickValue, X0, X1
	168 Move TEMP, X0
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfNotEqual {222}
	172 Move S1, [X31]
	173 Move S0, [X31+4]
	174 Move S3, 0.5
	175 Move W9, [X19+129]
	176 NotImplemented "Instruction FABS not yet implemented."
	177 NotImplemented "Instruction FABS not yet implemented."
	178 NotImplemented "Instruction FCMP not yet implemented."
	179 NotImplemented "Instruction CSET not yet implemented."
	180 NotImplemented "Instruction FCMP not yet implemented."
	181 NotImplemented "Instruction CSET not yet implemented."
	182 Or W8, W8, W10
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move [X19+129], W8
	185 Compare W8, 0
	186 JumpIfEqual {236}
	187 Move S3, 0.5
	188 NotImplemented "Instruction FCMP not yet implemented."
	189 Move V4, [X19+36]
	190 Move W8, 0xC2340000
	191 Move W9, 0x42340000
	192 NotImplemented "Instruction FCMP not yet implemented."
	193 Move S1, W8
	194 Move S5, W9
	195 NotImplemented "Instruction FCSEL not yet implemented."
	196 Subtract S1, S4, S1
	197 Move [X19+36], S1
	198 NotImplemented "Instruction FCMP not yet implemented."
	199 Move W8, [X19+32]
	200 NotImplemented "Instruction FCMP not yet implemented."
	201 Move S0, -1
	202 Move S1, 1
	203 NotImplemented "Instruction FCSEL not yet implemented."
	204 NotImplemented "Instruction FCVTZS not yet implemented."
	205 Subtract W20, W8, W9
	206 Move [X19+32], W20
	207 Move X21, 0x225F000
	208 Move X21, [X21+1032]
	209 Move X0, [X21]
	210 Move W8, [X0+224]
	211 Compare W8, 0
	212 JumpIfNotEqual {215}
	213 Call 0x1B6F8F8
	214 Move X0, [X21]
	215 Move X8, [X0+184]
	216 Move X8, [X8+8]
	217 Compare X8, 0
	218 JumpIfEqual {243}
	219 Move W8, [X8+24]
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Move [X19+32], W31
	222 Move [X19+129], W31
	223 Compare W8, 0
	224 JumpIfNotEqual {227}
	225 Call 0x1B6F8F8
	226 Move X0, [X21]
	227 Move X8, [X0+184]
	228 Move X8, [X8+8]
	229 Compare X8, 0
	230 JumpIfEqual {243}
	231 Move W8, [X8+24]
	232 Subtract W8, W8, 1
	233 Move [X19+32], W8
	234 Move X0, X19
	235 Call SpectatorManager.SetSpectatorCameraToTarget, X0
	236 Move X20, [X31+32]
	237 Move X19, [X31+40]
	238 Move X30, [X31+16]
	239 Move X21, [X31+24]
	240 Add X31, X31, 48
	241 Return 
	242 Move [X19+32], W31
	243 Call 0x1B6FA1C

Method: System.Void SetSpectator(System.Boolean active)

Disassembly:
	0x01CF262C MOV X0, X20
	0x01CF2630 MOV X1, X31
	0x01CF2634 BL 0x3AF6430
	0x01CF2638 LDR X8, [X22]
	0x01CF263C MOV X21, X0
	0x01CF2640 LDR W9, [X8 + 0xE0]
	0x01CF2644 CBNZ W9, 0x1CF2650
	0x01CF2648 MOV X0, X8
	0x01CF264C BL 0x1B6E8F8
	0x01CF2650 MOV X0, X21
	0x01CF2654 MOV X1, X31
	0x01CF2658 MOV X2, X31
	0x01CF265C BL 0x3A9D6EC
	0x01CF2660 TBZ X0, 0x0, 0x1CF2678
	0x01CF2664 MOV X0, X20
	0x01CF2668 MOV X1, X31
	0x01CF266C BL 0x3AF6430
	0x01CF2670 CBZ X0, 0x1CF26C0
	0x01CF2674 MOV X20, X0
	0x01CF2678 ADRP X8, 0x225C000
	0x01CF267C LDR X8, [X8 + 0x268]
	0x01CF2680 MOV X0, X20
	0x01CF2684 LDR X1, [X8]
	0x01CF2688 BL 0x208FDE8
	0x01CF268C STR X0, [X19]
	0x01CF2690 MOV X20, X0
	0x01CF2694 LDR X0, [X22]
	0x01CF2698 LDR W8, [X0 + 0xE0]
	0x01CF269C CBNZ W8, 0x1CF26A4
	0x01CF26A0 BL 0x1B6E8F8
	0x01CF26A4 MOV X0, X20
	0x01CF26A8 LDP X20, X19, [X31 + 0x20]
	0x01CF26AC LDP X22, X21, [X31 + 0x10]
	0x01CF26B0 MOV X1, X31
	0x01CF26B4 MOV X2, X31
	0x01CF26B8 LDR X30, [X31], #0x30
	0x01CF26BC B 0x3A9D6EC
	0x01CF26C0 BL 0x1B6EA1C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2532000
	006 Move X21, 0x225D000
	007 Move W8, [X20+1721]
	008 Move X21, [X21+680]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x225D000
	015 Move X0, [X0+680]
	016 Call 0x1B6F7F0
	017 Move X0, 0x225E000
	018 Move X0, [X0+1032]
	019 Call 0x1B6F7F0
	020 Move W8, 1
	021 Move [X20+1721], W8
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1B6F8F8
	027 Move X0, X31
	028 Call NetPlayer.get_localPlayerID
	029 Compare W0, 0
	030 JumpIfEqual {45}
	031 Move X8, 0x225E000
	032 Move X8, [X8+1032]
	033 Move W20, W0
	034 Move X0, [X8]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1B6F8F8
	039 And W0, W19, 1
	040 Move W1, W20
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Return 

Method: System.Void SetSpectator(System.Boolean active, System.UInt32 id)

Disassembly:
	0x01CF26C4 STP X30, X21, [X31 - 0x20]!
	0x01CF26C8 STP X20, X19, [X31 + 0x10]
	0x01CF26CC ADRP X21, 0x2531000
	0x01CF26D0 LDRB W8, [X21 + 0x6C8]
	0x01CF26D4 MOV X20, X1
	0x01CF26D8 MOV X19, X0
	0x01CF26DC TBNZ X8, 0x0, 0x1CF26F4
	0x01CF26E0 ADRP X0, 0x225D000
	0x01CF26E4 LDR X0, [X0 + 0x980]
	0x01CF26E8 BL 0x1B6E7F0
	0x01CF26EC MOVZ W8, 0x1
	0x01CF26F0 STRB W8, [X21 + 0x6C8]
	0x01CF26F4 CBZ X20, 0x1CF2724
	0x01CF26F8 ADRP X8, 0x225D000
	0x01CF26FC LDR X8, [X8 + 0x980]
	0x01CF2700 MOV X0, X20
	0x01CF2704 MOV X2, X31
	0x01CF2708 LDR X1, [X8]
	0x01CF270C BL 0x3A9B614
	0x01CF2710 TBZ X0, 0x0, 0x1CF2718
	0x01CF2714 STRB W31, [X19 + 0x28]
	0x01CF2718 LDP X20, X19, [X31 + 0x10]
	0x01CF271C LDP X30, X21, [X31], #0x20
	0x01CF2720 RET
	0x01CF2724 BL 0x1B6EA1C
	0x01CF2728 MOVZ W8, 0xD70A
	0x01CF272C MOVK W8, 0x3C230000
	0x01CF2730 MOV X1, X31
	0x01CF2734 STR W8, [X0 + 0x2C]
	0x01CF2738 B 0x3A9EEE4
	0x01CF273C STP X30, X21, [X31 - 0x20]!
	0x01CF2740 STP X20, X19, [X31 + 0x10]
	0x01CF2744 ADRP X21, 0x2531000
	0x01CF2748 LDRB W8, [X21 + 0x6C9]
	0x01CF274C MOV X20, X1
	0x01CF2750 MOV X19, X0
	0x01CF2754 TBNZ X8, 0x0, 0x1CF276C
	0x01CF2758 ADRP X0, 0x225D000
	0x01CF275C LDR X0, [X0 + 0x980]
	0x01CF2760 BL 0x1B6E7F0
	0x01CF2764 MOVZ W8, 0x1
	0x01CF2768 STRB W8, [X21 + 0x6C9]
	0x01CF276C CBZ X20, 0x1CF27F0
	0x01CF2770 ADRP X8, 0x225D000
	0x01CF2774 LDR X8, [X8 + 0x980]
	0x01CF2778 MOV X0, X20
	0x01CF277C MOV X2, X31
	0x01CF2780 LDR X1, [X8]
	0x01CF2784 BL 0x3A9B614
	0x01CF2788 TBZ X0, 0x0, 0x1CF27E4
	0x01CF278C ADRP X20, 0x2531000
	0x01CF2790 LDRB W8, [X20 + 0x509]
	0x01CF2794 CBNZ W8, 0x1CF27AC
	0x01CF2798 ADRP X0, 0x225C000
	0x01CF279C LDR X0, [X0 + 0xA80]
	0x01CF27A0 BL 0x1B6E7F0
	0x01CF27A4 MOVZ W8, 0x1
	0x01CF27A8 STRB W8, [X20 + 0x509]
	0x01CF27AC ADRP X8, 0x225C000
	0x01CF27B0 LDR X8, [X8 + 0xA80]
	0x01CF27B4 LDR X8, [X8]
	0x01CF27B8 LDR X8, [X8 + 0xB8]
	0x01CF27BC LDR X8, [X8]
	0x01CF27C0 CBZ X8, 0x1CF27F0
	0x01CF27C4 LDR X0, [X8 + 0x20]
	0x01CF27C8 CBZ X0, 0x1CF27F0
	0x01CF27CC LDR X1, [X19 + 0x20]
	0x01CF27D0 LDP X20, X19, [X31 + 0x10]
	0x01CF27D4 MOV W2, W31
	0x01CF27D8 MOV X3, X31
	0x01CF27DC LDP X30, X21, [X31], #0x20
	0x01CF27E0 B 0x1CC23C0
	0x01CF27E4 LDP X20, X19, [X31 + 0x10]
	0x01CF27E8 LDP X30, X21, [X31], #0x20
	0x01CF27EC RET
	0x01CF27F0 BL 0x1B6EA1C
	0x01CF27F4 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2532000
	007 Move X21, 0x225E000
	008 Move W8, [X22+1722]
	009 Move X21, [X21+1032]
	010 Move W20, W1
	011 Move W19, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x225C000
	017 Move X0, [X0+1144]
	018 Call 0x1B6F7F0
	019 Move X0, 0x225E000
	020 Move X0, [X0+1032]
	021 Call 0x1B6F7F0
	022 Move W8, 1
	023 Move [X22+1722], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1B6F8F8
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Move X22, [X8]
	032 Compare X22, 0
	033 JumpIfEqual {97}
	034 Move W1, W20
	035 Call SpectatorManager.GetPlayerByID, X0, X1
	036 Move [X22+40], X0
	037 Move X8, [X21]
	038 Move X8, [X8+184]
	039 Move X22, [X8]
	040 Compare X22, 0
	041 JumpIfEqual {97}
	042 Move W1, W20
	043 Call SpectatorManager.GetPlayerByID, X0, X1
	044 Move X1, X0
	045 Call SpectatorManager.GetNetPlayerIndex, X0, X1
	046 Move [X22+48], W0
	047 Move X8, [X21]
	048 Move X8, [X8+184]
	049 Move X8, [X8]
	050 Compare X8, 0
	051 JumpIfEqual {97}
	052 Move X9, 0x225C000
	053 Move X9, [X9+1144]
	054 Move X20, [X8+40]
	055 Move X0, [X9]
	056 Move W9, [X0+224]
	057 Compare W9, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1B6F8F8
	060 Move X0, X20
	061 Move X1, X31
	062 Move X2, X31
	063 Call Object.op_Inequality, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {91}
	068 Move X0, [X21]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {74}
	072 Call 0x1B6F8F8
	073 Move X0, [X21]
	074 Move X8, [X0+184]
	075 Move X20, [X8]
	076 Compare X20, 0
	077 JumpIfEqual {97}
	078 And W1, W19, 1
	079 Move X0, X20
	080 Call SpectatorManager.SetSpectatorCoroutine, X0, X1
	081 Move X1, X0
	082 Move X0, X20
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X2, X31
	088 Move X30, [X31+48]
	089 Call MonoBehaviour.StartCoroutine, X0, X1
	090 Return 
	091 Move X20, [X31+32]
	092 Move X19, [X31+40]
	093 Move X22, [X31+16]
	094 Move X21, [X31+24]
	095 Move X30, [X31+48]
	096 Return 
	097 Call 0x1B6FA1C

Method: System.UInt32 GetNetPlayerIndex(System.UInt32 id)

Disassembly:
	0x01CF284C B 0x2090EE4
	0x01CF2850 BL 0x1B6EA1C
	0x01CF2854 MOV X1, X31
	0x01CF2858 B 0x32276F8
	0x01CF285C RET

ISIL:
	001 Move [X31-16], X30
	002 Call SpectatorManager.GetPlayerByID, X0, X1
	003 Move X1, X0
	004 Move X30, [X31+16]
	005 Call SpectatorManager.GetNetPlayerIndex, X0, X1
	006 Return X0

Method: System.UInt32 GetNetPlayerIndex(AnimalCompany.NetPlayer player)

Disassembly:
	0x01CF28D4 MOV X2, X31
	0x01CF28D8 BL 0x3AA0AF0
	0x01CF28DC TBNZ X0, 0x0, 0x1CF2954
	0x01CF28E0 LDR X8, [X19 + 0x20]
	0x01CF28E4 CBZ X8, 0x1CF2954
	0x01CF28E8 ADRP X9, 0x225E000
	0x01CF28EC LDR X9, [X9 + 0x620]
	0x01CF28F0 LDR X10, [X8]
	0x01CF28F4 LDR X9, [X9]
	0x01CF28F8 LDRB W12, [X10 + 0x130]
	0x01CF28FC LDRB W11, [X9 + 0x130]
	0x01CF2900 CMP W12, W11
	0x01CF2904 B.CC 0x1CF2954
	0x01CF2908 LDR X10, [X10 + 0xC8]
	0x01CF290C ADD X10, X10, X11, 0x3, LSL
	0x01CF2910 LDUR X10, [X10 - 0x8]
	0x01CF2914 CMP X10, X9
	0x01CF2918 CSEL X20, X8, X31, EQ
	0x01CF291C B.NE 0x1CF2954
	0x01CF2920 ADRP X8, 0x225E000
	0x01CF2924 LDR X8, [X8 + 0x618]
	0x01CF2928 ADD X1, X31, 0x8
	0x01CF292C MOV X0, X19
	0x01CF2930 LDR X2, [X8]
	0x01CF2934 BL 0x2090EE4
	0x01CF2938 TBZ X0, 0x0, 0x1CF2954
	0x01CF293C CBZ X20, 0x1CF2964
	0x01CF2940 LDR X0, [X31 + 0x8]
	0x01CF2944 CBZ X0, 0x1CF2964
	0x01CF2948 LDR X1, [X20 + 0x40]
	0x01CF294C MOV X2, X31
	0x01CF2950 BL 0x3A7BD84
	0x01CF2954 LDP X20, X19, [X31 + 0x20]
	0x01CF2958 LDP X30, X21, [X31 + 0x10]
	0x01CF295C ADD X31, X31, 0x30
	0x01CF2960 RET
	0x01CF2964 BL 0x1B6EA1C
	0x01CF2968 RET
	0x01CF296C SUB X31, X31, 0xC0
	0x01CF2970 STR D10, [X31 + 0x80]
	0x01CF2974 STP D9, D8, [X31 + 0x90]
	0x01CF2978 STP X30, X21, [X31 + 0xA0]
	0x01CF297C STP X20, X19, [X31 + 0xB0]
	0x01CF2980 ADRP X21, 0x2531000
	0x01CF2984 ADRP X20, 0x225E000
	0x01CF2988 LDRB W8, [X21 + 0x6CD]
	0x01CF298C LDR X20, [X20 + 0x628]
	0x01CF2990 MOV X19, X0
	0x01CF2994 TBNZ X8, 0x0, 0x1CF29C4
	0x01CF2998 ADRP X0, 0x225E000
	0x01CF299C LDR X0, [X0 + 0x628]
	0x01CF29A0 BL 0x1B6E7F0
	0x01CF29A4 ADRP X0, 0x225B000
	0x01CF29A8 LDR X0, [X0 + 0x478]
	0x01CF29AC BL 0x1B6E7F0
	0x01CF29B0 ADRP X0, 0x225E000
	0x01CF29B4 LDR X0, [X0 + 0x630]
	0x01CF29B8 BL 0x1B6E7F0
	0x01CF29BC MOVZ W8, 0x1
	0x01CF29C0 STRB W8, [X21 + 0x6CD]
	0x01CF29C4 LDR X2, [X20]
	0x01CF29C8 ADD X1, X31, 0x88
	0x01CF29CC MOV X0, X19
	0x01CF29D0 STR X31, [X31 + 0x88]
	0x01CF29D4 BL 0x2090EE4
	0x01CF29D8 TBZ X0, 0x0, 0x1CF2B18
	0x01CF29DC ADRP X8, 0x225B000
	0x01CF29E0 LDR X8, [X8 + 0x478]
	0x01CF29E4 LDR X20, [X19 + 0x20]
	0x01CF29E8 LDR X0, [X8]
	0x01CF29EC LDR W8, [X0 + 0xE0]
	0x01CF29F0 CBNZ W8, 0x1CF29F8
	0x01CF29F4 BL 0x1B6E8F8
	0x01CF29F8 MOV X0, X20
	0x01CF29FC MOV X1, X31
	0x01CF2A00 MOV X2, X31
	0x01CF2A04 BL 0x3AA0AF0
	0x01CF2A08 TBZ X0, 0x0, 0x1CF2A24
	0x01CF2A0C ADRP X8, 0xFFFFFFFFFEDB7000
	0x01CF2A10 LDR V3, [X8 + 0xAAC]
	0x01CF2A14 FMOV S0, 1
	0x01CF2A18 FMOV S1, W31
	0x01CF2A1C FMOV S2, 1
	0x01CF2A20 B 0x1CF2A34
	0x01CF2A24 LDR X8, [X19 + 0x20]
	0x01CF2A28 CBZ X8, 0x1CF2B30
	0x01CF2A2C LDP S0, S1, [X8 + 0x30]
	0x01CF2A30 LDP S2, S3, [X8 + 0x38]
	0x01CF2A34 MOV X0, X31
	0x01CF2A38 BL 0x3A75B14
	0x01CF2A3C MOV X0, X19
	0x01CF2A40 MOV X1, X31
	0x01CF2A44 BL 0x3A9B084
	0x01CF2A48 CBZ X0, 0x1CF2B30
	0x01CF2A4C ADD X8, X31, 0x40
	0x01CF2A50 MOV X1, X31
	0x01CF2A54 BL 0x3AA7294
	0x01CF2A58 LDP V0, V1, [X31 + 0x40]
	0x01CF2A5C LDP V2, V3, [X31 + 0x60]
	0x01CF2A60 ADD X0, X31, 0x0
	0x01CF2A64 MOV X1, X31
	0x01CF2A68 STP V0, V1, [X31]
	0x01CF2A6C STP V2, V3, [X31 + 0x20]
	0x01CF2A70 BL 0x3A75C34
	0x01CF2A74 LDR X0, [X31 + 0x88]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X20, 0x2532000
	010 Move W8, [X20+1723]
	011 Move X19, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x225D000
	017 Move X0, [X0+2056]
	018 Call 0x1B6F7F0
	019 Move X0, 0x225F000
	020 Move X0, [X0+648]
	021 Call 0x1B6F7F0
	022 Move X0, 0x225F000
	023 Move X0, [X0+656]
	024 Call 0x1B6F7F0
	025 Move X0, 0x225F000
	026 Move X0, [X0+664]
	027 Call 0x1B6F7F0
	028 Move X0, 0x225C000
	029 Move X0, [X0+1144]
	030 Call 0x1B6F7F0
	031 Move X0, 0x225F000
	032 Move X0, [X0+696]
	033 Call 0x1B6F7F0
	034 Move W8, 1
	035 Move [X20+1723], W8
	036 Move [X31+8], X31
	037 Move [X31+16], X31
	038 Move [X31+24], X31
	039 Call SpectatorManager.get__spawnedPlayers, X0
	040 Compare X0, 0
	041 JumpIfEqual {96}
	042 Move X8, 0x225D000
	043 Move X8, [X8+2056]
	044 Move X1, [X8]
	045 Call Dictionary`2<UInt32, Object>.get_Values, X0
	046 Compare X0, 0
	047 JumpIfEqual {96}
	048 Move X8, 0x225F000
	049 Move X8, [X8+696]
	050 Move X23, 0x225F000
	051 Move X24, 0x225C000
	052 Move X22, 0x225F000
	053 Move X1, [X8]
	054 Move X23, [X23+656]
	055 Move X24, [X24+1144]
	056 Move X22, [X22+648]
	057 Add X8, X31, 8
	058 Call ValueCollection<UInt32, Object>.GetEnumerator, X0
	059 Move W20, W31
	060 Move X1, [X23]
	061 Add X0, X31, 8
	062 Call Enumerator<UInt32, Object>.MoveNext, X0
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {82}
	067 Move X0, [X24]
	068 Move X21, [X31+24]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1B6F8F8
	073 Move X0, X21
	074 Move X1, X19
	075 Move X2, X31
	076 Call Object.op_Equality, X0, X1
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {83}
	081 Add W20, W20, 1
	082 Move W20, W31
	083 Move X1, [X22]
	084 Add X0, X31, 8
	085 Call Enumerator<UInt32, Object>.Dispose, X0
	086 Move W0, W20
	087 Move X20, [X31+80]
	088 Move X19, [X31+88]
	089 Move X22, [X31+64]
	090 Move X21, [X31+72]
	091 Move X24, [X31+48]
	092 Move X23, [X31+56]
	093 Move X30, [X31+32]
	094 Add X31, X31, 96
	095 Return X0
	096 Call 0x1B6FA1C
	097 Move X19, X0
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X0, X19
	100 Call 0x3D1A840
	101 Move X20, [X0]
	102 Call 0x3D1A850
	103 Move X1, [X22]
	104 Add X0, X31, 8
	105 Call Enumerator<UInt32, Object>.Dispose, X0
	106 Compare X20, 0
	107 JumpIfEqual {86}
	108 Move X0, X20
	109 Call 0x1B6FA14
	110 Move X20, X31
	111 Move X19, X0
	112 Move X1, [X22]
	113 Add X0, X31, 8
	114 Call Enumerator<UInt32, Object>.Dispose, X0
	115 Compare X20, 0
	116 JumpIfNotEqual {119}
	117 Move X0, X19
	118 Call 0x1C8518C
	119 Move X0, X20
	120 Call 0x1B6FA14
	121 Call 0x18F56A8

Method: System.Collections.IEnumerator SetSpectatorCoroutine(System.Boolean isSpectator)

Disassembly:
	0x01CF2860 B 0x1CF2864
	0x01CF2864 SUB X31, X31, 0x30
	0x01CF2868 STP X30, X21, [X31 + 0x10]
	0x01CF286C STP X20, X19, [X31 + 0x20]
	0x01CF2870 ADRP X21, 0x2531000
	0x01CF2874 ADRP X20, 0x225B000
	0x01CF2878 LDRB W8, [X21 + 0x6CC]
	0x01CF287C LDR X20, [X20 + 0x478]
	0x01CF2880 MOV X19, X0
	0x01CF2884 TBNZ X8, 0x0, 0x1CF28B4
	0x01CF2888 ADRP X0, 0x225E000
	0x01CF288C LDR X0, [X0 + 0x618]
	0x01CF2890 BL 0x1B6E7F0
	0x01CF2894 ADRP X0, 0x225B000
	0x01CF2898 LDR X0, [X0 + 0x478]
	0x01CF289C BL 0x1B6E7F0
	0x01CF28A0 ADRP X0, 0x225E000
	0x01CF28A4 LDR X0, [X0 + 0x620]
	0x01CF28A8 BL 0x1B6E7F0
	0x01CF28AC MOVZ W8, 0x1
	0x01CF28B0 STRB W8, [X21 + 0x6CC]
	0x01CF28B4 LDR X0, [X20]
	0x01CF28B8 STR X31, [X31 + 0x8]
	0x01CF28BC LDR X20, [X19 + 0x20]
	0x01CF28C0 LDR W8, [X0 + 0xE0]
	0x01CF28C4 CBNZ W8, 0x1CF28CC
	0x01CF28C8 BL 0x1B6E8F8
	0x01CF28CC MOV X0, X20
	0x01CF28D0 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2532000
	007 Move X21, 0x225F000
	008 Move W8, [X22+1724]
	009 Move X21, [X21+1488]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x225F000
	017 Move X0, [X0+1488]
	018 Call 0x1B6F7F0
	019 Move W8, 1
	020 Move [X22+1724], W8
	021 Move X0, [X21]
	022 And W21, W20, 1
	023 Call 0x1B6FA0C
	024 Move X1, X31
	025 Move X20, X0
	026 Call Object..ctor, X0
	027 Move [X20+16], W31
	028 Move [X20+40], X19
	029 Move [X20+32], W21
	030 Move X0, X20
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X30, [X31+48]
	036 Return X0

Method: System.Void SetSpectatorCameraToTargetExternal()

Disassembly:
	0x01CF2AA0 MOVZ W8, 0x1
	0x01CF2AA4 STRB W8, [X20 + 0x43F]
	0x01CF2AA8 ADRP X8, 0x225B000
	0x01CF2AAC LDR X8, [X8 + 0x480]
	0x01CF2AB0 ADRP X9, 0x225E000
	0x01CF2AB4 MOV X0, X31
	0x01CF2AB8 LDR X8, [X8]
	0x01CF2ABC LDR X9, [X9 + 0x630]
	0x01CF2AC0 LDR X8, [X8 + 0xB8]
	0x01CF2AC4 LDR X9, [X9]
	0x01CF2AC8 LDP S8, S9, [X8]
	0x01CF2ACC LDR X9, [X9 + 0xB8]
	0x01CF2AD0 LDR V10, [X8 + 0x8]
	0x01CF2AD4 LDP S0, S1, [X9]
	0x01CF2AD8 LDP S2, S3, [X9 + 0x8]
	0x01CF2ADC BL 0x3726424
	0x01CF2AE0 MOV V4.16B, V0.16B
	0x01CF2AE4 MOV V5.16B, V1.16B
	0x01CF2AE8 MOV V6.16B, V2.16B
	0x01CF2AEC MOV V7.16B, V3.16B
	0x01CF2AF0 MOV X0, X19
	0x01CF2AF4 MOV V0.16B, V8.16B
	0x01CF2AF8 MOV V1.16B, V9.16B
	0x01CF2AFC MOV V2.16B, V10.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2532000
	005 Move X19, 0x225E000
	006 Move W8, [X20+1725]
	007 Move X19, [X19+1032]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x225E000
	013 Move X0, [X0+1032]
	014 Call 0x1B6F7F0
	015 Move W8, 1
	016 Move [X20+1725], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1B6F8F8
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X0, [X8]
	025 Compare X0, 0
	026 JumpIfEqual {32}
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Call SpectatorManager.SetSpectatorCameraToTarget, X0
	031 Return 
	032 Call 0x1B6FA1C

Method: System.Void SetSpectatorCameraToTarget()

Disassembly:
	0x01CF1FC0 MOV X19, X0
	0x01CF1FC4 CMP W8, 0x1
	0x01CF1FC8 B.LT 0x1CF2000
	0x01CF1FCC MOV W20, W31
	0x01CF1FD0 CMP W20, W8
	0x01CF1FD4 B.CS 0x1CF2010
	0x01CF1FD8 ADD X8, X19, W20, 0x3, SXTW
	0x01CF1FDC LDR X0, [X8 + 0x20]
	0x01CF1FE0 CBZ X0, 0x1CF200C
	0x01CF1FE4 MOVZ W1, 0x1
	0x01CF1FE8 MOV X2, X31
	0x01CF1FEC BL 0x3AF73C0
	0x01CF1FF0 LDR W8, [X19 + 0x18]
	0x01CF1FF4 ADD W20, W20, 0x1
	0x01CF1FF8 CMP W20, W8
	0x01CF1FFC B.LT 0x1CF1FD0
	0x01CF2000 LDP X20, X19, [X31 + 0x10]
	0x01CF2004 LDR X30, [X31], #0x20
	0x01CF2008 RET
	0x01CF200C BL 0x1B6EA1C
	0x01CF2010 BL 0x1B6EA24
	0x01CF2014 MOV X1, X31
	0x01CF2018 B 0x3A9EEE4
	0x01CF201C LDR V0, [X0 + 0x30]
	0x01CF2020 FNEG S0, S0
	0x01CF2024 STR S0, [X0 + 0x34]
	0x01CF2028 RET
	0x01CF202C STP X30, X23, [X31 - 0x30]!
	0x01CF2030 STP X22, X21, [X31 + 0x10]
	0x01CF2034 STP X20, X19, [X31 + 0x20]
	0x01CF2038 ADRP X21, 0x2531000
	0x01CF203C ADRP X20, 0x225B000
	0x01CF2040 LDRB W8, [X21 + 0x6C4]
	0x01CF2044 LDR X20, [X20 + 0x478]
	0x01CF2048 MOV X19, X0
	0x01CF204C TBNZ X8, 0x0, 0x1CF207C
	0x01CF2050 ADRP X0, 0x225D000
	0x01CF2054 LDR X0, [X0 + 0xCC0]
	0x01CF2058 BL 0x1B6E7F0
	0x01CF205C ADRP X0, 0x225E000
	0x01CF2060 LDR X0, [X0 + 0x608]
	0x01CF2064 BL 0x1B6E7F0
	0x01CF2068 ADRP X0, 0x225B000
	0x01CF206C LDR X0, [X0 + 0x478]
	0x01CF2070 BL 0x1B6E7F0
	0x01CF2074 MOVZ W8, 0x1
	0x01CF2078 STRB W8, [X21 + 0x6C4]
	0x01CF207C LDR X0, [X20]
	0x01CF2080 LDR X20, [X19 + 0x20]
	0x01CF2084 LDR W8, [X0 + 0xE0]
	0x01CF2088 CBNZ W8, 0x1CF2090
	0x01CF208C BL 0x1B6E8F8
	0x01CF2090 MOV X0, X20
	0x01CF2094 MOV X1, X31
	0x01CF2098 MOV X2, X31
	0x01CF209C BL 0x3AA0AF0
	0x01CF20A0 TBNZ X0, 0x0, 0x1CF212C
	0x01CF20A4 LDR X22, [X19 + 0x20]
	0x01CF20A8 CBZ X22, 0x1CF213C
	0x01CF20AC ADRP X23, 0x225D000
	0x01CF20B0 LDR X20, [X22 + 0x20]
	0x01CF20B4 LDR X23, [X23 + 0xCC0]
	0x01CF20B8 LDR X0, [X23]
	0x01CF20BC BL 0x1B6EA0C
	0x01CF20C0 ADRP X8, 0x225E000
	0x01CF20C4 LDR X8, [X8 + 0x608]
	0x01CF20C8 MOV X1, X19
	0x01CF20CC MOV X3, X31
	0x01CF20D0 MOV X21, X0
	0x01CF20D4 LDR X2, [X8]
	0x01CF20D8 BL 0x27EC49C
	0x01CF20DC MOV X0, X20
	0x01CF20E0 MOV X1, X21
	0x01CF20E4 MOV X2, X31
	0x01CF20E8 BL 0x322A750
	0x01CF20EC CBZ X0, 0x1CF2128
	0x01CF20F0 LDR X20, [X23]
	0x01CF20F4 MOV X19, X0
	0x01CF20F8 MOV X1, X20
	0x01CF20FC BL 0x1B6E8FC
	0x01CF2100 CBZ X0, 0x1CF211C
	0x01CF2104 STR X0, [X22 + 0x20]
	0x01CF2108 LDR X20, [X23]
	0x01CF210C MOV X0, X19
	0x01CF2110 MOV X1, X20
	0x01CF2114 BL 0x1B6E8FC
	0x01CF2118 CBNZ X0, 0x1CF212C
	0x01CF211C MOV X0, X19
	0x01CF2120 MOV X1, X20
	0x01CF2124 BL 0x1B6ECDC
	0x01CF2128 STR X31, [X22 + 0x20]
	0x01CF212C LDP X20, X19, [X31 + 0x20]
	0x01CF2130 LDP X22, X21, [X31 + 0x10]
	0x01CF2134 LDP X30, X23, [X31], #0x30
	0x01CF2138 RET
	0x01CF213C BL 0x1B6EA1C
	0x01CF2140 STP X30, X23, [X31 - 0x30]!
	0x01CF2144 STP X22, X21, [X31 + 0x10]
	0x01CF2148 STP X20, X19, [X31 + 0x20]
	0x01CF214C ADRP X21, 0x2531000
	0x01CF2150 ADRP X20, 0x225B000
	0x01CF2154 LDRB W8, [X21 + 0x6C5]
	0x01CF2158 LDR X20, [X20 + 0x478]
	0x01CF215C MOV X19, X0
	0x01CF2160 TBNZ X8, 0x0, 0x1CF2190
	0x01CF2164 ADRP X0, 0x225D000
	0x01CF2168 LDR X0, [X0 + 0xCC0]
	0x01CF216C BL 0x1B6E7F0
	0x01CF2170 ADRP X0, 0x225E000
	0x01CF2174 LDR X0, [X0 + 0x608]
	0x01CF2178 BL 0x1B6E7F0
	0x01CF217C ADRP X0, 0x225B000
	0x01CF2180 LDR X0, [X0 + 0x478]
	0x01CF2184 BL 0x1B6E7F0
	0x01CF2188 MOVZ W8, 0x1
	0x01CF218C STRB W8, [X21 + 0x6C5]
	0x01CF2190 LDR X0, [X20]
	0x01CF2194 LDR X20, [X19 + 0x20]
	0x01CF2198 LDR W8, [X0 + 0xE0]
	0x01CF219C CBNZ W8, 0x1CF21A4
	0x01CF21A0 BL 0x1B6E8F8
	0x01CF21A4 MOV X0, X20
	0x01CF21A8 MOV X1, X31
	0x01CF21AC MOV X2, X31
	0x01CF21B0 BL 0x3AA0AF0
	0x01CF21B4 TBNZ X0, 0x0, 0x1CF2240
	0x01CF21B8 LDR X22, [X19 + 0x20]
	0x01CF21BC CBZ X22, 0x1CF2250
	0x01CF21C0 ADRP X23, 0x225D000
	0x01CF21C4 LDR X20, [X22 + 0x20]
	0x01CF21C8 LDR X23, [X23 + 0xCC0]
	0x01CF21CC LDR X0, [X23]
	0x01CF21D0 BL 0x1B6EA0C
	0x01CF21D4 ADRP X8, 0x225E000
	0x01CF21D8 LDR X8, [X8 + 0x608]
	0x01CF21DC MOV X1, X19
	0x01CF21E0 MOV X3, X31
	0x01CF21E4 MOV X21, X0
	0x01CF21E8 LDR X2, [X8]
	0x01CF21EC BL 0x27EC49C
	0x01CF21F0 MOV X0, X20
	0x01CF21F4 MOV X1, X21
	0x01CF21F8 MOV X2, X31
	0x01CF21FC BL 0x322A948
	0x01CF2200 CBZ X0, 0x1CF223C
	0x01CF2204 LDR X20, [X23]
	0x01CF2208 MOV X19, X0
	0x01CF220C MOV X1, X20
	0x01CF2210 BL 0x1B6E8FC
	0x01CF2214 CBZ X0, 0x1CF2230
	0x01CF2218 STR X0, [X22 + 0x20]
	0x01CF221C LDR X20, [X23]
	0x01CF2220 MOV X0, X19
	0x01CF2224 MOV X1, X20
	0x01CF2228 BL 0x1B6E8FC
	0x01CF222C CBNZ X0, 0x1CF2240
	0x01CF2230 MOV X0, X19
	0x01CF2234 MOV X1, X20
	0x01CF2238 BL 0x1B6ECDC
	0x01CF223C STR X31, [X22 + 0x20]
	0x01CF2240 LDP X20, X19, [X31 + 0x20]
	0x01CF2244 LDP X22, X21, [X31 + 0x10]
	0x01CF2248 LDP X30, X23, [X31], #0x30
	0x01CF224C RET
	0x01CF2250 BL 0x1B6EA1C
	0x01CF2254 STP D9, D8, [X31 - 0x20]!
	0x01CF2258 STP X30, X19, [X31 + 0x10]
	0x01CF225C CBZ X1, 0x1CF22C4
	0x01CF2260 MOV X19, X0
	0x01CF2264 MOV X0, X1
	0x01CF2268 MOV X1, X31
	0x01CF226C BL 0x3A9B0C0
	0x01CF2270 CBZ X0, 0x1CF22C4
	0x01CF2274 MOV X1, X31
	0x01CF2278 BL 0x3A9D928
	0x01CF227C CMP W0, 0x6
	0x01CF2280 B.NE 0x1CF22B8
	0x01CF2284 LDP S9, S8, [X19 + 0x30]
	0x01CF2288 MOV X0, X31
	0x01CF228C BL 0x3AA47CC
	0x01CF2290 FADD S1, S8, S9
	0x01CF2294 FCMP S1, S0
	0x01CF2298 B.GT 0x1CF22B8
	0x01CF229C LDR X0, [X19 + 0x28]
	0x01CF22A0 CBZ X0, 0x1CF22C4
	0x01CF22A4 MOV X1, X31
	0x01CF22A8 BL 0x3A65954
	0x01CF22AC MOV X0, X31
	0x01CF22B0 BL 0x3AA47CC
	0x01CF22B4 STR S0, [X19 + 0x34]
	0x01CF22B8 LDP X30, X19, [X31 + 0x10]
	0x01CF22BC LDP D9, D8, [X31], #0x20
	0x01CF22C0 RET
	0x01CF22C4 BL 0x1B6EA1C
	0x01CF22C8 MOVZ W8, 0x42700000
	0x01CF22CC MOV X1, X31
	0x01CF22D0 STR W8, [X0 + 0x30]
	0x01CF22D4 B 0x3A9EEE4
	0x01CF22D8 STR D8, [X31 - 0x20]!
	0x01CF22DC STR X30, [X31 + 0x8]
	0x01CF22E0 STP X20, X19, [X31 + 0x10]
	0x01CF22E4 ADRP X20, 0x2531000
	0x01CF22E8 LDRB W8, [X20 + 0x6C6]
	0x01CF22EC MOV X19, X0
	0x01CF22F0 TBNZ X8, 0x0, 0x1CF2308
	0x01CF22F4 ADRP X0, 0x225E000
	0x01CF22F8 LDR X0, [X0 + 0x610]
	0x01CF22FC BL 0x1B6E7F0
	0x01CF2300 MOVZ W8, 0x1
	0x01CF2304 STRB W8, [X20 + 0x6C6]
	0x01CF2308 LDRB W8, [X19 + 0x28]
	0x01CF230C CBZ W8, 0x1CF2330
	0x01CF2310 LDR V8, [X19 + 0x30]
	0x01CF2314 MOV X0, X31
	0x01CF2318 BL 0x3AA481C
	0x01CF231C LDR V1, [X19 + 0x2C]
	0x01CF2320 FADD S0, S8, S0
	0x01CF2324 STR S0, [X19 + 0x30]
	0x01CF2328 FCMP S0, S1
	0x01CF232C B.GE 0x1CF2340
	0x01CF2330 LDP X20, X19, [X31 + 0x10]
	0x01CF2334 LDR X30, [X31 + 0x8]
	0x01CF2338 LDR V8, [X31], #0x20
	0x01CF233C RET
	0x01CF2340 STR W31, [X19 + 0x30]
	0x01CF2344 STRB W31, [X19 + 0x28]
	0x01CF2348 ADRP X20, 0x2531000
	0x01CF234C LDRB W8, [X20 + 0x509]
	0x01CF2350 CBNZ W8, 0x1CF2368
	0x01CF2354 ADRP X0, 0x225C000
	0x01CF2358 LDR X0, [X0 + 0xA80]
	0x01CF235C BL 0x1B6E7F0
	0x01CF2360 MOVZ W8, 0x1
	0x01CF2364 STRB W8, [X20 + 0x509]
	0x01CF2368 ADRP X8, 0x225C000
	0x01CF236C LDR X8, [X8 + 0xA80]
	0x01CF2370 LDR X8, [X8]
	0x01CF2374 LDR X8, [X8 + 0xB8]
	0x01CF2378 LDR X8, [X8]
	0x01CF237C CBZ X8, 0x1CF23AC
	0x01CF2380 LDR X0, [X8 + 0x20]
	0x01CF2384 CBZ X0, 0x1CF23AC
	0x01CF2388 ADRP X8, 0x225E000
	0x01CF238C LDR X1, [X19 + 0x20]
	0x01CF2390 LDR X8, [X8 + 0x610]
	0x01CF2394 LDP X20, X19, [X31 + 0x10]
	0x01CF2398 LDR X30, [X31 + 0x8]
	0x01CF239C MOV X3, X31
	0x01CF23A0 LDR X2, [X8]
	0x01CF23A4 LDR V8, [X31], #0x20
	0x01CF23A8 B 0x1CC1780
	0x01CF23AC BL 0x1B6EA1C
	0x01CF23B0 SUB X31, X31, 0x50
	0x01CF23B4 STP X30, X21, [X31 + 0x30]
	0x01CF23B8 STP X20, X19, [X31 + 0x40]
	0x01CF23BC ADRP X21, 0x2531000
	0x01CF23C0 LDRB W8, [X21 + 0x6C7]
	0x01CF23C4 MOV X19, X1
	0x01CF23C8 MOV X20, X0
	0x01CF23CC TBNZ X8, 0x0, 0x1CF242C
	0x01CF23D0 ADRP X0, 0x225D000
	0x01CF23D4 LDR X0, [X0 + 0xC58]
	0x01CF23D8 BL 0x1B6E7F0
	0x01CF23DC ADRP X0, 0x225C000
	0x01CF23E0 LDR X0, [X0 + 0xA18]
	0x01CF23E4 BL 0x1B6E7F0
	0x01CF23E8 ADRP X0, 0x225C000
	0x01CF23EC LDR X0, [X0 + 0xA20]
	0x01CF23F0 BL 0x1B6E7F0
	0x01CF23F4 ADRP X0, 0x225C000
	0x01CF23F8 LDR X0, [X0 + 0xA28]
	0x01CF23FC BL 0x1B6E7F0
	0x01CF2400 ADRP X0, 0x225C000
	0x01CF2404 LDR X0, [X0 + 0xA30]
	0x01CF2408 BL 0x1B6E7F0
	0x01CF240C ADRP X0, 0x225C000
	0x01CF2410 LDR X0, [X0 + 0x420]
	0x01CF2414 BL 0x1B6E7F0
	0x01CF2418 ADRP X0, 0x225D000
	0x01CF241C LDR X0, [X0 + 0x980]
	0x01CF2420 BL 0x1B6E7F0
	0x01CF2424 MOVZ W8, 0x1
	0x01CF2428 STRB W8, [X21 + 0x6C7]
	0x01CF242C STP X31, X31, [X31 + 0x20]
	0x01CF2430 STP X31, X31, [X31 + 0x8]
	0x01CF2434 STR X31, [X31 + 0x18]
	0x01CF2438 CBZ X19, 0x1CF255C
	0x01CF243C ADRP X8, 0x225D000
	0x01CF2440 LDR X8, [X8 + 0x980]
	0x01CF2444 MOV X0, X19
	0x01CF2448 MOV X2, X31
	0x01CF244C LDR X1, [X8]
	0x01CF2450 BL 0x3A9B614
	0x01CF2454 TBZ X0, 0x0, 0x1CF2468
	0x01CF2458 MOVZ W8, 0x1
	0x01CF245C STRB W8, [X20 + 0x28]
	0x01CF2460 STR W31, [X20 + 0x30]
	0x01CF2464 B 0x1CF2548
	0x01CF2468 ADD X1, X31, 0x28
	0x01CF246C MOV X0, X19
	0x01CF2470 BL 0x1CF25DC
	0x01CF2474 TBZ X0, 0x0, 0x1CF2548
	0x01CF2478 LDR X19, [X31 + 0x28]
	0x01CF247C CBZ X19, 0x1CF255C
	0x01CF2480 ADRP X8, 0x225C000
	0x01CF2484 LDR X8, [X8 + 0x420]
	0x01CF2488 MOV X0, X19
	0x01CF248C MOV X2, X31
	0x01CF2490 LDR X1, [X8]
	0x01CF2494 BL 0x3A9B614
	0x01CF2498 TBZ X0, 0x0, 0x1CF253C
	0x01CF249C ADRP X8, 0x225D000
	0x01CF24A0 LDR X8, [X8 + 0xC58]
	0x01CF24A4 ADD X1, X31, 0x20
	0x01CF24A8 MOV X0, X19
	0x01CF24AC LDR X2, [X8]
	0x01CF24B0 BL 0x2090EE4
	0x01CF24B4 TBZ X0, 0x0, 0x1CF253C
	0x01CF24B8 LDR X0, [X31 + 0x20]
	0x01CF24BC CBZ X0, 0x1CF255C
	0x01CF24C0 MOV X1, X31
	0x01CF24C4 BL 0x1CA9898
	0x01CF24C8 LDR X8, [X31 + 0x20]
	0x01CF24CC CBZ X8, 0x1CF255C
	0x01CF24D0 MOV X20, X0
	0x01CF24D4 MOV X0, X8
	0x01CF24D8 MOV X1, X31
	0x01CF24DC BL 0x1CA9818
	0x01CF24E0 CBZ X20, 0x1CF255C
	0x01CF24E4 ADRP X8, 0x225C000
	0x01CF24E8 LDR X8, [X8 + 0xA30]
	0x01CF24EC MOV X0, X20
	0x01CF24F0 LDR X1, [X8]
	0x01CF24F4 ADD X8, X31, 0x8
	0x01CF24F8 BL 0x2E470E0
	0x01CF24FC ADRP X20, 0x225C000
	0x01CF2500 LDR X20, [X20 + 0xA20]
	0x01CF2504 LDR X1, [X20]
	0x01CF2508 ADD X0, X31, 0x8
	0x01CF250C BL 0x2A14F30
	0x01CF2510 TBZ X0, 0x0, 0x1CF2528
	0x01CF2514 LDR X0, [X31 + 0x18]
	0x01CF2518 CBZ X0, 0x1CF2558
	0x01CF251C MOV X1, X31
	0x01CF2520 BL 0x1CA32A4
	0x01CF2524 B 0x1CF2504
	0x01CF2528 ADRP X8, 0x225C000
	0x01CF252C LDR X8, [X8 + 0xA18]
	0x01CF2530 ADD X0, X31, 0x8
	0x01CF2534 LDR X1, [X8]
	0x01CF2538 BL 0x2A14F2C
	0x01CF253C MOV X0, X19
	0x01CF2540 MOV X1, X31
	0x01CF2544 BL 0x1CA32A4
	0x01CF2548 LDP X20, X19, [X31 + 0x40]
	0x01CF254C LDP X30, X21, [X31 + 0x30]
	0x01CF2550 ADD X31, X31, 0x50
	0x01CF2554 RET
	0x01CF2558 BL 0x1B6EA1C
	0x01CF255C BL 0x1B6EA1C
	0x01CF2560 B 0x1CF2568
	0x01CF2564 B 0x1CF2568
	0x01CF2568 MOV X20, X0
	0x01CF256C CMP W1, 0x1
	0x01CF2570 B.NE 0x1CF25A4
	0x01CF2574 MOV X0, X20
	0x01CF2578 BL 0x3D19840
	0x01CF257C LDR X21, [X0]
	0x01CF2580 BL 0x3D19850
	0x01CF2584 ADRP X8, 0x225C000
	0x01CF2588 LDR X8, [X8 + 0xA18]
	0x01CF258C ADD X0, X31, 0x8
	0x01CF2590 LDR X1, [X8]
	0x01CF2594 BL 0x2A14F2C
	0x01CF2598 CBZ X21, 0x1CF253C
	0x01CF259C MOV X0, X21
	0x01CF25A0 BL 0x1B6EA14
	0x01CF25A4 MOV X21, X31
	0x01CF25A8 B 0x1CF25B0
	0x01CF25AC MOV X20, X0
	0x01CF25B0 ADRP X8, 0x225C000
	0x01CF25B4 LDR X8, [X8 + 0xA18]
	0x01CF25B8 LDR X1, [X8]
	0x01CF25BC ADD X0, X31, 0x8
	0x01CF25C0 BL 0x2A14F2C
	0x01CF25C4 CBNZ X21, 0x1CF25D0
	0x01CF25C8 MOV X0, X20
	0x01CF25CC BL 0x1C8418C
	0x01CF25D0 MOV X0, X21
	0x01CF25D4 BL 0x1B6EA14
	0x01CF25D8 BL 0x18F46A8
	0x01CF25DC STR X30, [X31 - 0x30]!
	0x01CF25E0 STP X22, X21, [X31 + 0x10]
	0x01CF25E4 STP X20, X19, [X31 + 0x20]
	0x01CF25E8 ADRP X21, 0x2531000
	0x01CF25EC LDRB W8, [X21 + 0x6CB]
	0x01CF25F0 MOV X19, X1
	0x01CF25F4 MOV X20, X0
	0x01CF25F8 TBNZ X8, 0x0, 0x1CF261C
	0x01CF25FC ADRP X0, 0x225C000
	0x01CF2600 LDR X0, [X0 + 0x268]
	0x01CF2604 BL 0x1B6E7F0
	0x01CF2608 ADRP X0, 0x225B000
	0x01CF260C LDR X0, [X0 + 0x478]
	0x01CF2610 BL 0x1B6E7F0
	0x01CF2614 MOVZ W8, 0x1
	0x01CF2618 STRB W8, [X21 + 0x6CB]
	0x01CF261C STR X31, [X19]
	0x01CF2620 CBZ X20, 0x1CF26C0
	0x01CF2624 ADRP X22, 0x225B000
	0x01CF2628 LDR X22, [X22 + 0x478]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+80], D15
	003 Move [X31+88], D14
	004 Move [X31+96], D13
	005 Move [X31+104], D12
	006 Move [X31+112], D11
	007 Move [X31+120], D10
	008 Move [X31+128], D9
	009 Move [X31+136], D8
	010 Move [X31+144], X30
	011 Move [X31+152], X25
	012 Move [X31+160], X24
	013 Move [X31+168], X23
	014 Move [X31+176], X22
	015 Move [X31+184], X21
	016 Move [X31+192], X20
	017 Move [X31+200], X19
	018 Move X20, 0x2533000
	019 Move W8, [X20+1726]
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x225F000
	026 Move X0, [X0+1032]
	027 Call 0x1B6F7F0
	028 Move W8, 1
	029 Move [X20+1726], W8
	030 Move X8, [X19+40]
	031 Compare X8, 0
	032 JumpIfEqual {461}
	033 Move X0, [X8+136]
	034 Compare X0, 0
	035 JumpIfEqual {461}
	036 Move X1, X31
	037 Call Transform.get_position, X0
	038 Move X8, [X19+40]
	039 Move [X31+64], D0
	040 Move [X31+48], D1
	041 Compare X8, 0
	042 JumpIfEqual {461}
	043 Move X0, [X8+136]
	044 Compare X0, 0
	045 JumpIfEqual {461}
	046 Move X1, X31
	047 Move V8, V2
	048 Call Transform.get_forward, X0
	049 Move X0, X31
	050 Call Extensions.Flatten, X0
	051 Move X23, 0x2532000
	052 Move W8, [X23+1089]
	053 Move V9, V2
	054 Compare W8, 0
	055 JumpIfNotEqual {65}
	056 Move X0, 0x225C000
	057 Move X0, [X0+1160]
	058 Move [X31+16], V1
	059 Move [X31+24], V0
	060 Call 0x1B6F7F0
	061 Move V1, [X31+16]
	062 Move V0, [X31+32]
	063 Move W8, 1
	064 Move [X23+1089], W8
	065 Move X24, 0x225C000
	066 Move X24, [X24+1160]
	067 Move X0, [X24]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {76}
	071 Move [X31+16], V1
	072 Move [X31+24], V0
	073 Call 0x1B6F8F8
	074 Move V1, [X31+16]
	075 Move V0, [X31+32]
	076 Move X8, -19169280
	077 Move X21, 0x225E000
	078 Multiply S2, S0, S0
	079 Multiply S3, S1, S1
	080 Move V15, [X8+2916]
	081 Move X22, 0x225C000
	082 Move X21, [X21+1032]
	083 Add S2, S2, S3
	084 Multiply S3, S9, S9
	085 Move X22, [X22+1152]
	086 Add S2, S3, S2
	087 NotImplemented "Instruction FSQRT not yet implemented."
	088 NotImplemented "Instruction FCMP not yet implemented."
	089 Move V0.S[1], V1.S[0]
	090 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	091 NotImplemented "Instruction INVALID not yet implemented."
	092 NotImplemented "Instruction FDIV not yet implemented."
	093 Move X20, 0x2532000
	094 Move W8, [X20+1087]
	095 Compare W8, 0
	096 JumpIfNotEqual {102}
	097 Move X0, 0x225C000
	098 Move X0, [X0+1152]
	099 Call 0x1B6F7F0
	100 Move W8, 1
	101 Move [X20+1087], W8
	102 Move X8, [X22]
	103 Move X8, [X8+184]
	104 Move V10, [X8]
	105 Move V9, [X8+8]
	106 Move X0, [X21]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {112}
	110 Call 0x1B6F8F8
	111 Move X0, [X21]
	112 Move X8, [X0+184]
	113 Move V1, [X31+48]
	114 Move V2, [X31+64]
	115 Move X25, 0x2532000
	116 Move W9, [X25+1090]
	117 Move V0, [X8+24]
	118 Move V2.S[1], V1.S[0]
	119 Move [X31+2], V2
	120 NotImplemented "Instruction INVALID not yet implemented."
	121 Multiply S0, S9, S0
	122 Add V9, V2, V1
	123 Add S10, S8, S0
	124 Compare W9, 0
	125 JumpIfNotEqual {133}
	126 Move X0, 0x225C000
	127 Move X0, [X0+1152]
	128 Call 0x1B6F7F0
	129 Move X8, [X21]
	130 Move W9, 1
	131 Move [X25+1090], W9
	132 Move X8, [X8+184]
	133 Move X9, [X22]
	134 Move V0, [X8+20]
	135 Move X8, -19169280
	136 Move V1, [X19+36]
	137 Move X9, [X9+184]
	138 Move V4, [X8+2804]
	139 Move X0, X31
	140 Move V2, [X9+24]
	141 Move V3, [X9+32]
	142 Multiply S1, S1, S4
	143 NotImplemented "Instruction INVALID not yet implemented."
	144 Multiply S0, S3, S0
	145 Add V9, V9, V2
	146 Add S10, S10, S0
	147 Move S0, W31
	148 Move S2, W31
	149 Call Quaternion.Internal_FromEulerRad, X0
	150 Move V4, [X31+2]
	151 Subtract S6, S10, S8
	152 Move X0, X31
	153 Subtract V4, V9, V4
	154 Move S5, V4.S[1]
	155 Call Quaternion.op_Multiply, X0, X1
	156 Move X0, [X19+64]
	157 Compare X0, 0
	158 JumpIfEqual {461}
	159 Move X1, X31
	160 Move V10, V0
	161 Move V11, V1
	162 Move V9, V2
	163 Call Component.get_transform, X0
	164 Compare X0, 0
	165 JumpIfEqual {461}
	166 Move X1, X31
	167 Call Transform.get_forward, X0
	168 Move X0, X31
	169 Call Extensions.Flatten, X0
	170 Move W8, [X23+1089]
	171 Move V12, V0
	172 Move V13, V1
	173 Move V14, V2
	174 Compare W8, 0
	175 JumpIfNotEqual {181}
	176 Move X0, 0x225C000
	177 Move X0, [X0+1160]
	178 Call 0x1B6F7F0
	179 Move W8, 1
	180 Move [X23+1089], W8
	181 Move X0, [X24]
	182 Move W8, [X0+224]
	183 Compare W8, 0
	184 JumpIfNotEqual {186}
	185 Call 0x1B6F8F8
	186 Move V0, [X31+4]
	187 Multiply S1, S13, S13
	188 Add S2, S0, S10
	189 Move V0, [X31+3]
	190 Add S10, S8, S9
	191 Add S11, S0, S11
	192 Multiply S0, S12, S12
	193 Add S0, S0, S1
	194 Multiply S1, S14, S14
	195 Add S0, S1, S0
	196 NotImplemented "Instruction FSQRT not yet implemented."
	197 NotImplemented "Instruction FCMP not yet implemented."
	198 NotImplemented "Instruction FDIV not yet implemented."
	199 Move [X31+32], S1
	200 NotImplemented "Instruction FDIV not yet implemented."
	201 Move [X31+16], S1
	202 NotImplemented "Instruction FDIV not yet implemented."
	203 Move X20, 0x2532000
	204 Move W8, [X20+1087]
	205 Compare W8, 0
	206 JumpIfNotEqual {214}
	207 Move X0, 0x225C000
	208 Move X0, [X0+1152]
	209 Move V9, V2
	210 Call 0x1B6F7F0
	211 Move V2, V9
	212 Move W8, 1
	213 Move [X20+1087], W8
	214 Move X8, [X22]
	215 Move X8, [X8+184]
	216 Move V0, [X8]
	217 Move [X31+32], S0
	218 Move S0, [X8+4]
	219 Move S9, [X8+8]
	220 Move [X31+16], S0
	221 Move V1, [X31+48]
	222 Move V0, [X31+64]
	223 Move [X31+12], S2
	224 Move X0, X31
	225 Subtract S0, S0, S2
	226 Subtract S1, S1, S11
	227 Subtract S2, S8, S10
	228 Call Extensions.Flatten, X0
	229 Move W8, [X23+1089]
	230 Move V12, V0
	231 Move V13, V1
	232 Move V14, V2
	233 Compare W8, 0
	234 JumpIfNotEqual {240}
	235 Move X0, 0x225C000
	236 Move X0, [X0+1160]
	237 Call 0x1B6F7F0
	238 Move W8, 1
	239 Move [X23+1089], W8
	240 Move X0, [X24]
	241 Move W8, [X0+224]
	242 Compare W8, 0
	243 JumpIfNotEqual {245}
	244 Call 0x1B6F8F8
	245 Multiply S0, S12, S12
	246 Multiply S1, S13, S13
	247 Add S0, S0, S1
	248 Multiply S1, S14, S14
	249 Add S0, S1, S0
	250 NotImplemented "Instruction FSQRT not yet implemented."
	251 NotImplemented "Instruction FCMP not yet implemented."
	252 NotImplemented "Instruction FDIV not yet implemented."
	253 NotImplemented "Instruction FDIV not yet implemented."
	254 NotImplemented "Instruction FDIV not yet implemented."
	255 Move X20, 0x2532000
	256 Move W8, [X20+1087]
	257 Compare W8, 0
	258 JumpIfNotEqual {264}
	259 Move X0, 0x225C000
	260 Move X0, [X0+1152]
	261 Call 0x1B6F7F0
	262 Move W8, 1
	263 Move [X20+1087], W8
	264 Move X8, [X22]
	265 Move X8, [X8+184]
	266 Move S0, [X8]
	267 Move S1, [X8+4]
	268 Move V2, [X8+8]
	269 Move X0, X31
	270 Call Extensions.Flatten, X0
	271 Move W8, [X23+1089]
	272 Move V12, V0
	273 Move V13, V1
	274 Move V14, V2
	275 Compare W8, 0
	276 JumpIfNotEqual {282}
	277 Move X0, 0x225C000
	278 Move X0, [X0+1160]
	279 Call 0x1B6F7F0
	280 Move W8, 1
	281 Move [X23+1089], W8
	282 Move X0, [X24]
	283 Move W8, [X0+224]
	284 Compare W8, 0
	285 JumpIfNotEqual {287}
	286 Call 0x1B6F8F8
	287 Multiply S0, S12, S12
	288 Multiply S1, S13, S13
	289 Add S0, S0, S1
	290 Multiply S1, S14, S14
	291 Add S0, S1, S0
	292 NotImplemented "Instruction FSQRT not yet implemented."
	293 NotImplemented "Instruction FCMP not yet implemented."
	294 NotImplemented "Instruction FDIV not yet implemented."
	295 NotImplemented "Instruction FDIV not yet implemented."
	296 NotImplemented "Instruction FDIV not yet implemented."
	297 Move X20, 0x2532000
	298 Move W8, [X20+1087]
	299 Compare W8, 0
	300 JumpIfNotEqual {306}
	301 Move X0, 0x225C000
	302 Move X0, [X0+1152]
	303 Call 0x1B6F7F0
	304 Move W8, 1
	305 Move [X20+1087], W8
	306 Move X8, [X22]
	307 Move X8, [X8+184]
	308 Move S12, [X8]
	309 Move S13, [X8+4]
	310 Move V14, [X8+8]
	311 Move W8, [X25+1090]
	312 Compare W8, 0
	313 JumpIfNotEqual {319}
	314 Move X0, 0x225C000
	315 Move X0, [X0+1152]
	316 Call 0x1B6F7F0
	317 Move W8, 1
	318 Move [X25+1090], W8
	319 Move X8, [X22]
	320 Move V1, [X31+16]
	321 Move V2, V9
	322 Move V3, V12
	323 Move X8, [X8+184]
	324 Move V4, V13
	325 Move V5, V14
	326 Move X0, X31
	327 Move V0, [X8+32]
	328 Move X9, [X8+24]
	329 Move [X31+8], S0
	330 Move V0, [X31+32]
	331 Move [X31], X9
	332 Call 0x1CD06E0
	333 Move W8, [X25+1090]
	334 Move X20, [X19+72]
	335 Move V9, V0
	336 Compare W8, 0
	337 JumpIfNotEqual {343}
	338 Move X0, 0x225C000
	339 Move X0, [X0+1152]
	340 Call 0x1B6F7F0
	341 Move W8, 1
	342 Move [X25+1090], W8
	343 Compare X20, 0
	344 JumpIfEqual {461}
	345 Move X8, [X22]
	346 Move X0, X20
	347 Move V3, V9
	348 Move X1, X31
	349 Move X8, [X8+184]
	350 Move S1, [X8+28]
	351 Move S2, [X8+32]
	352 Move V0, [X8+24]
	353 Call Transform.Rotate, X0, X1, V0
	354 Move W8, [X23+1089]
	355 Compare W8, 0
	356 JumpIfNotEqual {362}
	357 Move X0, 0x225C000
	358 Move X0, [X0+1160]
	359 Call 0x1B6F7F0
	360 Move W8, 1
	361 Move [X23+1089], W8
	362 Move V0, [X31+4]
	363 Move V1, [X31+12]
	364 Move X0, [X24]
	365 Subtract S9, S10, S8
	366 Subtract S12, S1, S0
	367 Move V0, [X31+3]
	368 Move W8, [X0+224]
	369 Subtract S11, S11, S0
	370 Compare W8, 0
	371 JumpIfNotEqual {373}
	372 Call 0x1B6F8F8
	373 Multiply S0, S12, S12
	374 Multiply S1, S11, S11
	375 Add S0, S0, S1
	376 Multiply S1, S9, S9
	377 Add S0, S1, S0
	378 NotImplemented "Instruction FSQRT not yet implemented."
	379 NotImplemented "Instruction FCMP not yet implemented."
	380 NotImplemented "Instruction FDIV not yet implemented."
	381 NotImplemented "Instruction FDIV not yet implemented."
	382 NotImplemented "Instruction FDIV not yet implemented."
	383 Move X20, 0x2532000
	384 Move W8, [X20+1087]
	385 Compare W8, 0
	386 JumpIfNotEqual {392}
	387 Move X0, 0x225C000
	388 Move X0, [X0+1152]
	389 Call 0x1B6F7F0
	390 Move W8, 1
	391 Move [X20+1087], W8
	392 Move X8, [X22]
	393 Move X8, [X8+184]
	394 Move S12, [X8]
	395 Move S13, [X8+4]
	396 Move V14, [X8+8]
	397 Move X8, [X21]
	398 Move X8, [X8+184]
	399 Move X8, [X8+8]
	400 Compare X8, 0
	401 JumpIfEqual {461}
	402 NotImplemented "Instruction LDRSW not yet implemented."
	403 Move W10, [X8+24]
	404 NotImplemented "Instruction CMP not yet implemented."
	405 Move X0, [X19+72]
	406 Compare X0, 0
	407 JumpIfEqual {461}
	408 Add X8, X8, X9
	409 Move V15, [X8+32]
	410 Move X1, X31
	411 Call Transform.get_position, X0
	412 Move X0, [X19+64]
	413 Compare X0, 0
	414 JumpIfEqual {461}
	415 Move X1, X31
	416 Move V9, V0
	417 Move V10, V1
	418 Move V11, V2
	419 Call Component.get_transform, X0
	420 Compare X0, 0
	421 JumpIfEqual {461}
	422 Move X1, X31
	423 Call Transform.get_position, X0
	424 Move X0, [X19+72]
	425 Compare X0, 0
	426 JumpIfEqual {461}
	427 Move V6, [X31+3]
	428 Multiply S4, S13, S15
	429 Multiply S3, S14, S15
	430 Subtract S2, S11, S2
	431 Add S4, S6, S4
	432 Move V6, [X31+4]
	433 Subtract S1, S10, S1
	434 Multiply S5, S12, S15
	435 Subtract S0, S9, S0
	436 Add S3, S8, S3
	437 Move X20, [X31+192]
	438 Move X19, [X31+200]
	439 Move X22, [X31+176]
	440 Move X21, [X31+184]
	441 Move X24, [X31+160]
	442 Move X23, [X31+168]
	443 Move X30, [X31+144]
	444 Move X25, [X31+152]
	445 Move D9, [X31+128]
	446 Move D8, [X31+136]
	447 Move D11, [X31+112]
	448 Move D10, [X31+120]
	449 Move D13, [X31+96]
	450 Move D12, [X31+104]
	451 Move D15, [X31+80]
	452 Move D14, [X31+88]
	453 Add S5, S6, S5
	454 Add S2, S3, S2
	455 Add S1, S4, S1
	456 Add S0, S5, S0
	457 Move X1, X31
	458 Add X31, X31, 208
	459 Call Transform.set_position, X0, X1
	460 Return 
	461 Call 0x1B6FA1C
	462 Call 0x1B6FA24

Method: AnimalCompany.NetPlayer GetPlayerByID(System.UInt32 id)

Disassembly:
	0x01CF27F8 B 0x3A9EEE4
	0x01CF27FC STP X30, X21, [X31 - 0x20]!
	0x01CF2800 STP X20, X19, [X31 + 0x10]
	0x01CF2804 ADRP X21, 0x2531000
	0x01CF2808 LDRB W8, [X21 + 0x6CA]
	0x01CF280C MOV X19, X1
	0x01CF2810 MOV X20, X0
	0x01CF2814 TBNZ X8, 0x0, 0x1CF282C
	0x01CF2818 ADRP X0, 0x225E000
	0x01CF281C LDR X0, [X0 + 0x2F8]
	0x01CF2820 BL 0x1B6E7F0
	0x01CF2824 MOVZ W8, 0x1
	0x01CF2828 STRB W8, [X21 + 0x6CA]
	0x01CF282C CBZ X20, 0x1CF2850
	0x01CF2830 ADRP X8, 0x225E000
	0x01CF2834 LDR X8, [X8 + 0x2F8]
	0x01CF2838 MOV X0, X20
	0x01CF283C MOV X1, X19
	0x01CF2840 LDP X20, X19, [X31 + 0x10]
	0x01CF2844 LDR X2, [X8]
	0x01CF2848 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2532000
	005 Move W8, [X20+1727]
	006 Move W19, W1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x225F000
	012 Move X0, [X0+1480]
	013 Call 0x1B6F7F0
	014 Move W8, 1
	015 Move [X20+1727], W8
	016 Call SpectatorManager.get__spawnedPlayers, X0
	017 Compare X0, 0
	018 JumpIfEqual {28}
	019 Move X8, 0x225F000
	020 Move X8, [X8+1480]
	021 Move W1, W19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X2, [X8]
	025 Move X30, [X31+32]
	026 Call Dictionary`2<UInt32, Object>.get_Item, X0, X1
	027 Return X0
	028 Call 0x1B6FA1C

Method: System.Void .ctor()

Disassembly:
	0x01CF2B00 MOV V3.16B, V4.16B
	0x01CF2B04 MOV V4.16B, V5.16B
	0x01CF2B08 MOV V5.16B, V6.16B
	0x01CF2B0C MOV V6.16B, V7.16B

ISIL:
	001 Move W8, 1
	002 Move X1, X31
	003 Move [X0+32], W8
	004 Call MonoBehaviour..ctor, X0
	005 Return 

Method: System.Void .cctor()

Disassembly:
	0x01CF2B10 MOV X1, X31
	0x01CF2B14 BL 0x3A75CBC
	0x01CF2B18 LDP X20, X19, [X31 + 0xB0]
	0x01CF2B1C LDP X30, X21, [X31 + 0xA0]
	0x01CF2B20 LDP D9, D8, [X31 + 0x90]
	0x01CF2B24 LDR V10, [X31 + 0x80]
	0x01CF2B28 ADD X31, X31, 0xC0
	0x01CF2B2C RET
	0x01CF2B30 BL 0x1B6EA1C
	0x01CF2B34 MOV X1, X31
	0x01CF2B38 B 0x3A9EEE4
	0x01CF2B3C STR X30, [X31 - 0x20]!
	0x01CF2B40 STP X20, X19, [X31 + 0x10]
	0x01CF2B44 ADRP X19, 0x2531000
	0x01CF2B48 ADRP X20, 0x225E000
	0x01CF2B4C LDRB W8, [X19 + 0x6CE]
	0x01CF2B50 LDR X20, [X20 + 0x638]
	0x01CF2B54 TBNZ X8, 0x0, 0x1CF2B6C
	0x01CF2B58 ADRP X0, 0x225E000
	0x01CF2B5C LDR X0, [X0 + 0x638]
	0x01CF2B60 BL 0x1B6E7F0
	0x01CF2B64 MOVZ W8, 0x1
	0x01CF2B68 STRB W8, [X19 + 0x6CE]
	0x01CF2B6C LDR X0, [X20]
	0x01CF2B70 LDR W8, [X0 + 0xE0]
	0x01CF2B74 CBNZ W8, 0x1CF2B7C
	0x01CF2B78 BL 0x1B6E8F8
	0x01CF2B7C LDP X20, X19, [X31 + 0x10]
	0x01CF2B80 LDR X30, [X31], #0x20
	0x01CF2B84 B 0x1CF2B88
	0x01CF2B88 SUB X31, X31, 0x50
	0x01CF2B8C STR X30, [X31 + 0x20]
	0x01CF2B90 STP X22, X21, [X31 + 0x30]
	0x01CF2B94 STP X20, X19, [X31 + 0x40]
	0x01CF2B98 ADRP X20, 0x2531000
	0x01CF2B9C ADRP X19, 0x225E000
	0x01CF2BA0 LDRB W8, [X20 + 0x6D4]
	0x01CF2BA4 LDR X19, [X19 + 0x638]
	0x01CF2BA8 TBNZ X8, 0x0, 0x1CF2BFC
	0x01CF2BAC ADRP X0, 0x225E000
	0x01CF2BB0 LDR X0, [X0 + 0x640]
	0x01CF2BB4 BL 0x1B6E7F0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2532000
	007 Move X22, 0x225D000
	008 Move X19, 0x225F000
	009 Move X20, 0x225E000
	010 Move W8, [X21+1728]
	011 Move X22, [X22+4032]
	012 Move X19, [X19+1496]
	013 Move X20, [X20+1032]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x225D000
	019 Move X0, [X0+4032]
	020 Call 0x1B6F7F0
	021 Move X0, 0x225E000
	022 Move X0, [X0+1032]
	023 Call 0x1B6F7F0
	024 Move X0, 0x225F000
	025 Move X0, [X0+1496]
	026 Call 0x1B6F7F0
	027 Move W8, 1
	028 Move [X21+1728], W8
	029 Move X0, [X22]
	030 Move W1, 3
	031 Call 0x1B6F868
	032 Move X1, [X19]
	033 Move X2, X31
	034 Move X19, X0
	035 Call RuntimeHelpers.InitializeArray, X0, X1
	036 Move X8, [X20]
	037 Move X9, -19152896
	038 Move V0, [X9+2208]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X8, [X8+184]
	042 Move W9, 0xC0600000
	043 Move [X8+8], X19
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move [X8+16], D0
	047 Move [X8+24], W9
	048 Move X30, [X31+48]
	049 Return 

