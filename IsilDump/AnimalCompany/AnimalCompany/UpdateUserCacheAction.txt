Type: AnimalCompany.UpdateUserCacheAction

Method: System.Void .ctor(Nakama.IApiUsers users)

Disassembly:
	0x01D5298C LDR X0, [X0 + 0xD58]
	0x01D52990 BL 0x1C16CF4
	0x01D52994 MOVZ W8, 0x1
	0x01D52998 STRB W8, [X19 + 0x7C9]
	0x01D5299C LDR X0, [X20]
	0x01D529A0 BL 0x1C16F10
	0x01D529A4 MOV X1, X31
	0x01D529A8 MOV X19, X0
	0x01D529AC BL 0x33BDD8C
	0x01D529B0 LDR X8, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call BaseAction..ctor, X0
	008 Move [X20+24], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void Execute(AnimalCompany.AppState state)

Disassembly:
	0x01D529B4 LDR X8, [X8 + 0xB8]
	0x01D529B8 STR X19, [X8]
	0x01D529BC LDP X20, X19, [X31 + 0x10]
	0x01D529C0 LDR X30, [X31], #0x20
	0x01D529C4 RET
	0x01D529C8 MOV X1, X31
	0x01D529CC B 0x33BDD8C
	0x01D529D0 SUB X31, X31, 0x30
	0x01D529D4 STP X30, X21, [X31 + 0x10]
	0x01D529D8 STP X20, X19, [X31 + 0x20]
	0x01D529DC ADRP X21, 0x2686000
	0x01D529E0 ADRP X20, 0x23A1000
	0x01D529E4 LDRB W8, [X21 + 0x7CA]
	0x01D529E8 LDR X20, [X20 + 0x648]
	0x01D529EC MOV X19, X1
	0x01D529F0 TBNZ X8, 0x0, 0x1D52A20
	0x01D529F4 ADRP X0, 0x23A1000
	0x01D529F8 LDR X0, [X0 + 0x648]
	0x01D529FC BL 0x1C16CF4
	0x01D52A00 ADRP X0, 0x23A2000
	0x01D52A04 LDR X0, [X0 + 0x108]
	0x01D52A08 BL 0x1C16CF4
	0x01D52A0C ADRP X0, 0x23A1000
	0x01D52A10 LDR X0, [X0 + 0xDC8]
	0x01D52A14 BL 0x1C16CF4
	0x01D52A18 MOVZ W8, 0x1
	0x01D52A1C STRB W8, [X21 + 0x7CA]
	0x01D52A20 LDR X0, [X20]
	0x01D52A24 STR X31, [X31 + 0x8]
	0x01D52A28 LDR W8, [X0 + 0xE0]
	0x01D52A2C CBNZ W8, 0x1D52A34
	0x01D52A30 BL 0x1C16DFC
	0x01D52A34 ADRP X21, 0x2686000
	0x01D52A38 LDRB W8, [X21 + 0x787]
	0x01D52A3C CBNZ W8, 0x1D52A54
	0x01D52A40 ADRP X0, 0x23A1000
	0x01D52A44 LDR X0, [X0 + 0x648]
	0x01D52A48 BL 0x1C16CF4
	0x01D52A4C MOVZ W8, 0x1
	0x01D52A50 STRB W8, [X21 + 0x787]
	0x01D52A54 LDR X0, [X20]
	0x01D52A58 LDR W8, [X0 + 0xE0]
	0x01D52A5C CBNZ W8, 0x1D52A68
	0x01D52A60 BL 0x1C16DFC
	0x01D52A64 LDR X0, [X20]
	0x01D52A68 LDR X8, [X0 + 0xB8]
	0x01D52A6C LDR X8, [X8]
	0x01D52A70 CBZ X8, 0x1D52B24
	0x01D52A74 LDR X8, [X8 + 0xB8]
	0x01D52A78 CBZ X8, 0x1D52B24
	0x01D52A7C LDR X8, [X8 + 0x50]
	0x01D52A80 CBZ X8, 0x1D52B24
	0x01D52A84 LDR X1, [X8 + 0x50]
	0x01D52A88 MOV X0, X19
	0x01D52A8C MOV X2, X31
	0x01D52A90 BL 0x3226EF8
	0x01D52A94 TBZ X0, 0x0, 0x1D52B0C
	0x01D52A98 LDR X0, [X20]
	0x01D52A9C LDR W8, [X0 + 0xE0]
	0x01D52AA0 CBNZ W8, 0x1D52AA8
	0x01D52AA4 BL 0x1C16DFC
	0x01D52AA8 LDRB W8, [X21 + 0x787]
	0x01D52AAC CBNZ W8, 0x1D52AC4
	0x01D52AB0 ADRP X0, 0x23A1000
	0x01D52AB4 LDR X0, [X0 + 0x648]
	0x01D52AB8 BL 0x1C16CF4
	0x01D52ABC MOVZ W8, 0x1
	0x01D52AC0 STRB W8, [X21 + 0x787]
	0x01D52AC4 LDR X0, [X20]
	0x01D52AC8 LDR W8, [X0 + 0xE0]
	0x01D52ACC CBNZ W8, 0x1D52AD8
	0x01D52AD0 BL 0x1C16DFC
	0x01D52AD4 LDR X0, [X20]
	0x01D52AD8 LDR X8, [X0 + 0xB8]
	0x01D52ADC LDR X8, [X8]
	0x01D52AE0 CBZ X8, 0x1D52B24
	0x01D52AE4 LDR X0, [X8 + 0xD8]
	0x01D52AE8 CBZ X0, 0x1D52B24
	0x01D52AEC ADRP X8, 0x23A2000
	0x01D52AF0 LDR X8, [X8 + 0x108]
	0x01D52AF4 ADD X2, X31, 0x8
	0x01D52AF8 MOV X1, X19
	0x01D52AFC LDR X3, [X8]
	0x01D52B00 BL 0x2609E34
	0x01D52B04 EOR W8, W0, 0x1
	0x01D52B08 B 0x1D52B10
	0x01D52B0C MOV W8, W31
	0x01D52B10 LDP X20, X19, [X31 + 0x20]
	0x01D52B14 LDP X30, X21, [X31 + 0x10]
	0x01D52B18 AND W0, W8, 0x1
	0x01D52B1C ADD X31, X31, 0x30
	0x01D52B20 RET
	0x01D52B24 BL 0x1C16F20
	0x01D52B28 STR X30, [X31 - 0x20]!
	0x01D52B2C STP X20, X19, [X31 + 0x10]
	0x01D52B30 ADRP X20, 0x2686000
	0x01D52B34 LDRB W8, [X20 + 0x7CB]
	0x01D52B38 MOV X19, X1
	0x01D52B3C TBNZ X8, 0x0, 0x1D52B54
	0x01D52B40 ADRP X0, 0x23A1000
	0x01D52B44 LDR X0, [X0 + 0xF28]
	0x01D52B48 BL 0x1C16CF4
	0x01D52B4C MOVZ W8, 0x1
	0x01D52B50 STRB W8, [X20 + 0x7CB]
	0x01D52B54 CBZ X19, 0x1D52BC4
	0x01D52B58 ADRP X10, 0x23A1000
	0x01D52B5C LDR X8, [X19]
	0x01D52B60 LDR X10, [X10 + 0xF28]
	0x01D52B64 LDRH W9, [X8 + 0x12E]
	0x01D52B68 LDR X1, [X10]
	0x01D52B6C CBZ X9, 0x1D52B90
	0x01D52B70 LDR X10, [X8 + 0xB0]
	0x01D52B74 ADD X10, X10, 0x8
	0x01D52B78 LDUR X11, [X10 - 0x8]
	0x01D52B7C CMP X11, X1
	0x01D52B80 B.EQ 0x1D52BA0
	0x01D52B84 SUBS X9, X9, 0x1
	0x01D52B88 ADD X10, X10, 0x10
	0x01D52B8C B.NE 0x1D52B78
	0x01D52B90 MOVZ W2, 0x9
	0x01D52B94 MOV X0, X19
	0x01D52B98 BL 0x1C5C788
	0x01D52B9C B 0x1D52BB0
	0x01D52BA0 LDR W9, [X10]
	0x01D52BA4 ADD W9, W9, 0x9
	0x01D52BA8 ADD X8, X8, W9, 0x4, SXTW
	0x01D52BAC ADD X0, X8, 0x138
	0x01D52BB0 LDP X2, X1, [X0]
	0x01D52BB4 MOV X0, X19
	0x01D52BB8 LDP X20, X19, [X31 + 0x10]
	0x01D52BBC LDR X30, [X31], #0x20
	0x01D52BC0 BR X2
	0x01D52BC4 BL 0x1C16F20
	0x01D52BC8 STR X30, [X31 - 0x30]!
	0x01D52BCC STP X22, X21, [X31 + 0x10]
	0x01D52BD0 STP X20, X19, [X31 + 0x20]
	0x01D52BD4 ADRP X22, 0x2686000
	0x01D52BD8 ADRP X21, 0x23A1000
	0x01D52BDC LDRB W8, [X22 + 0x7CC]
	0x01D52BE0 LDR X21, [X21 + 0x648]
	0x01D52BE4 MOV X19, X2
	0x01D52BE8 MOV X20, X1
	0x01D52BEC TBNZ X8, 0x0, 0x1D52C40
	0x01D52BF0 ADRP X0, 0x23A1000
	0x01D52BF4 LDR X0, [X0 + 0x648]
	0x01D52BF8 BL 0x1C16CF4
	0x01D52BFC ADRP X0, 0x23A2000
	0x01D52C00 LDR X0, [X0 + 0x9F0]
	0x01D52C04 BL 0x1C16CF4
	0x01D52C08 ADRP X0, 0x23A2000
	0x01D52C0C LDR X0, [X0 + 0xD60]
	0x01D52C10 BL 0x1C16CF4
	0x01D52C14 ADRP X0, 0x23A2000
	0x01D52C18 LDR X0, [X0 + 0xD68]
	0x01D52C1C BL 0x1C16CF4
	0x01D52C20 ADRP X0, 0x23A2000
	0x01D52C24 LDR X0, [X0 + 0xD70]
	0x01D52C28 BL 0x1C16CF4
	0x01D52C2C ADRP X0, 0x23A2000
	0x01D52C30 LDR X0, [X0 + 0xC60]
	0x01D52C34 BL 0x1C16CF4
	0x01D52C38 MOVZ W8, 0x1
	0x01D52C3C STRB W8, [X22 + 0x7CC]
	0x01D52C40 LDR X0, [X21]
	0x01D52C44 STR X31, [X31 + 0x8]
	0x01D52C48 LDR W8, [X0 + 0xE0]
	0x01D52C4C CBNZ W8, 0x1D52C54
	0x01D52C50 BL 0x1C16DFC
	0x01D52C54 ADRP X22, 0x2686000
	0x01D52C58 LDRB W8, [X22 + 0x787]
	0x01D52C5C CBNZ W8, 0x1D52C74
	0x01D52C60 ADRP X0, 0x23A1000
	0x01D52C64 LDR X0, [X0 + 0x648]
	0x01D52C68 BL 0x1C16CF4
	0x01D52C6C MOVZ W8, 0x1
	0x01D52C70 STRB W8, [X22 + 0x787]
	0x01D52C74 LDR X0, [X21]
	0x01D52C78 LDR W8, [X0 + 0xE0]
	0x01D52C7C CBNZ W8, 0x1D52C88
	0x01D52C80 BL 0x1C16DFC
	0x01D52C84 LDR X0, [X21]
	0x01D52C88 LDR X8, [X0 + 0xB8]
	0x01D52C8C LDR X8, [X8]
	0x01D52C90 CBZ X8, 0x1D52D2C
	0x01D52C94 LDR X8, [X8 + 0xE0]
	0x01D52C98 CBZ X8, 0x1D52D2C
	0x01D52C9C LDR X0, [X8 + 0x70]
	0x01D52CA0 CBZ X0, 0x1D52D2C
	0x01D52CA4 ADRP X8, 0x23A2000
	0x01D52CA8 LDR X8, [X8 + 0xD70]
	0x01D52CAC MOV X1, X20
	0x01D52CB0 LDR X2, [X8]
	0x01D52CB4 BL 0x262DAD8
	0x01D52CB8 TBZ X0, 0x0, 0x1D52CC4
	0x01D52CBC MOV W0, W31
	0x01D52CC0 B 0x1D52D18
	0x01D52CC4 CBZ X19, 0x1D52D2C
	0x01D52CC8 LDR X8, [X19 + 0x48]
	0x01D52CCC CBZ X8, 0x1D52D2C
	0x01D52CD0 ADRP X9, 0x23A2000
	0x01D52CD4 LDR X9, [X9 + 0x9F0]
	0x01D52CD8 LDR X19, [X8 + 0x50]
	0x01D52CDC LDR X0, [X9]
	0x01D52CE0 LDR W9, [X0 + 0xE0]
	0x01D52CE4 CBNZ W9, 0x1D52CEC
	0x01D52CE8 BL 0x1C16DFC
	0x01D52CEC MOV X0, X31
	0x01D52CF0 BL 0x3361584
	0x01D52CF4 STR X0, [X31 + 0x8]
	0x01D52CF8 ADD X0, X31, 0x8
	0x01D52CFC FMOV D0, -8.000000001629815
	0x01D52D00 MOV X1, X31
	0x01D52D04 BL 0x335FFD0
	0x01D52D08 MOV X1, X0
	0x01D52D0C MOV X0, X19
	0x01D52D10 MOV X2, X31
	0x01D52D14 BL 0x3363148
	0x01D52D18 LDP X20, X19, [X31 + 0x20]
	0x01D52D1C LDP X22, X21, [X31 + 0x10]
	0x01D52D20 AND W0, W0, 0x1
	0x01D52D24 LDR X30, [X31], #0x30
	0x01D52D28 RET
	0x01D52D2C BL 0x1C16F20
	0x01D52D30 STR X30, [X31 - 0x20]!
	0x01D52D34 STP X20, X19, [X31 + 0x10]
	0x01D52D38 ADRP X20, 0x2686000
	0x01D52D3C LDRB W8, [X20 + 0x7CD]
	0x01D52D40 MOV X19, X1
	0x01D52D44 TBNZ X8, 0x0, 0x1D52D5C
	0x01D52D48 ADRP X0, 0x23A2000
	0x01D52D4C LDR X0, [X0 + 0xD60]
	0x01D52D50 BL 0x1C16CF4
	0x01D52D54 MOVZ W8, 0x1
	0x01D52D58 STRB W8, [X20 + 0x7CD]
	0x01D52D5C MOV X0, X19
	0x01D52D60 LDP X20, X19, [X31 + 0x10]
	0x01D52D64 LDR X30, [X31], #0x20
	0x01D52D68 RET
	0x01D52D6C STP X30, X21, [X31 - 0x20]!
	0x01D52D70 STP X20, X19, [X31 + 0x10]
	0x01D52D74 ADRP X21, 0x2686000
	0x01D52D78 ADRP X20, 0x23A1000
	0x01D52D7C LDRB W8, [X21 + 0x7CE]
	0x01D52D80 LDR X20, [X20 + 0x648]
	0x01D52D84 MOV X19, X1
	0x01D52D88 TBNZ X8, 0x0, 0x1D52DB8
	0x01D52D8C ADRP X0, 0x23A1000
	0x01D52D90 LDR X0, [X0 + 0x648]
	0x01D52D94 BL 0x1C16CF4
	0x01D52D98 ADRP X0, 0x23A2000
	0x01D52D9C LDR X0, [X0 + 0xD78]
	0x01D52DA0 BL 0x1C16CF4
	0x01D52DA4 ADRP X0, 0x23A2000
	0x01D52DA8 LDR X0, [X0 + 0x1F8]
	0x01D52DAC BL 0x1C16CF4
	0x01D52DB0 MOVZ W8, 0x1
	0x01D52DB4 STRB W8, [X21 + 0x7CE]
	0x01D52DB8 LDR X0, [X20]
	0x01D52DBC LDR W8, [X0 + 0xE0]
	0x01D52DC0 CBNZ W8, 0x1D52DC8
	0x01D52DC4 BL 0x1C16DFC
	0x01D52DC8 ADRP X21, 0x2686000
	0x01D52DCC LDRB W8, [X21 + 0x787]
	0x01D52DD0 CBNZ W8, 0x1D52DE8
	0x01D52DD4 ADRP X0, 0x23A1000
	0x01D52DD8 LDR X0, [X0 + 0x648]
	0x01D52DDC BL 0x1C16CF4
	0x01D52DE0 MOVZ W8, 0x1
	0x01D52DE4 STRB W8, [X21 + 0x787]
	0x01D52DE8 LDR X0, [X20]
	0x01D52DEC LDR W8, [X0 + 0xE0]
	0x01D52DF0 CBNZ W8, 0x1D52DFC
	0x01D52DF4 BL 0x1C16DFC
	0x01D52DF8 LDR X0, [X20]
	0x01D52DFC LDR X8, [X0 + 0xB8]
	0x01D52E00 LDR X8, [X8]
	0x01D52E04 CBZ X8, 0x1D52EB8
	0x01D52E08 LDR X0, [X8 + 0xD8]
	0x01D52E0C CBZ X0, 0x1D52EB8
	0x01D52E10 ADRP X8, 0x23A2000
	0x01D52E14 LDR X8, [X8 + 0xD78]
	0x01D52E18 MOV X1, X19
	0x01D52E1C LDR X2, [X8]
	0x01D52E20 BL 0x26098A0
	0x01D52E24 TBZ X0, 0x0, 0x1D52E38
	0x01D52E28 LDP X20, X19, [X31 + 0x10]
	0x01D52E2C MOV W0, W31
	0x01D52E30 LDP X30, X21, [X31], #0x20
	0x01D52E34 RET
	0x01D52E38 LDR X0, [X20]
	0x01D52E3C LDR W8, [X0 + 0xE0]
	0x01D52E40 CBNZ W8, 0x1D52E48
	0x01D52E44 BL 0x1C16DFC
	0x01D52E48 LDRB W8, [X21 + 0x787]
	0x01D52E4C CBNZ W8, 0x1D52E64
	0x01D52E50 ADRP X0, 0x23A1000
	0x01D52E54 LDR X0, [X0 + 0x648]
	0x01D52E58 BL 0x1C16CF4
	0x01D52E5C MOVZ W8, 0x1
	0x01D52E60 STRB W8, [X21 + 0x787]
	0x01D52E64 LDR X0, [X20]
	0x01D52E68 LDR W8, [X0 + 0xE0]
	0x01D52E6C CBNZ W8, 0x1D52E78
	0x01D52E70 BL 0x1C16DFC
	0x01D52E74 LDR X0, [X20]
	0x01D52E78 LDR X8, [X0 + 0xB8]
	0x01D52E7C LDR X8, [X8]
	0x01D52E80 CBZ X8, 0x1D52EB8
	0x01D52E84 LDR X8, [X8 + 0xB8]
	0x01D52E88 CBZ X8, 0x1D52EB8
	0x01D52E8C LDR X0, [X8 + 0x50]
	0x01D52E90 ADRP X8, 0x23A2000
	0x01D52E94 LDR X8, [X8 + 0x1F8]
	0x01D52E98 LDR X1, [X8]
	0x01D52E9C BL 0x265C594
	0x01D52EA0 MOV X1, X0
	0x01D52EA4 MOV X0, X19
	0x01D52EA8 LDP X20, X19, [X31 + 0x10]
	0x01D52EAC MOV X2, X31
	0x01D52EB0 LDP X30, X21, [X31], #0x20
	0x01D52EB4 B 0x3226EF8
	0x01D52EB8 BL 0x1C16F20
	0x01D52EBC MOV X1, X31
	0x01D52EC0 B 0x33BDD8C
	0x01D52EC4 STR X30, [X31 - 0x30]!
	0x01D52EC8 STP X22, X21, [X31 + 0x10]
	0x01D52ECC STP X20, X19, [X31 + 0x20]
	0x01D52ED0 ADRP X21, 0x2686000
	0x01D52ED4 ADRP X22, 0x23A1000
	0x01D52ED8 LDRB W8, [X21 + 0x7CF]
	0x01D52EDC LDR X22, [X22 + 0x648]
	0x01D52EE0 MOV X19, X1
	0x01D52EE4 MOV X20, X0
	0x01D52EE8 TBNZ X8, 0x0, 0x1D52F00
	0x01D52EEC ADRP X0, 0x23A1000
	0x01D52EF0 LDR X0, [X0 + 0x648]
	0x01D52EF4 BL 0x1C16CF4
	0x01D52EF8 MOVZ W8, 0x1
	0x01D52EFC STRB W8, [X21 + 0x7CF]
	0x01D52F00 LDR X0, [X22]
	0x01D52F04 LDR W8, [X0 + 0xE0]
	0x01D52F08 CBNZ W8, 0x1D52F10
	0x01D52F0C BL 0x1C16DFC
	0x01D52F10 MOV X0, X31
	0x01D52F14 BL 0x1D32AF4
	0x01D52F18 MOV X21, X0
	0x01D52F1C MOV X0, X31
	0x01D52F20 BL 0x1D32B7C
	0x01D52F24 CBZ X21, 0x1D52F58
	0x01D52F28 MOV X1, X0
	0x01D52F2C LDR X2, [X20 + 0x10]
	0x01D52F30 MOV X0, X21
	0x01D52F34 MOV X6, X19
	0x01D52F38 LDP X20, X19, [X31 + 0x20]
	0x01D52F3C LDP X22, X21, [X31 + 0x10]
	0x01D52F40 MOV X3, X31
	0x01D52F44 MOV X4, X31
	0x01D52F48 MOV X5, X31
	0x01D52F4C MOV X7, X31
	0x01D52F50 LDR X30, [X31], #0x30
	0x01D52F54 B 0x1D6BECC
	0x01D52F58 BL 0x1C16F20
	0x01D52F5C RET
	0x01D52F60 STR X30, [X31 - 0x50]!
	0x01D52F64 STP X26, X25, [X31 + 0x10]
	0x01D52F68 STP X24, X23, [X31 + 0x20]
	0x01D52F6C STP X22, X21, [X31 + 0x30]
	0x01D52F70 STP X20, X19, [X31 + 0x40]
	0x01D52F74 ADRP X20, 0x2686000
	0x01D52F78 LDRB W8, [X20 + 0x7D0]
	0x01D52F7C MOV X19, X0
	0x01D52F80 TBNZ X8, 0x0, 0x1D530E8
	0x01D52F84 ADRP X0, 0x23A1000
	0x01D52F88 LDR X0, [X0 + 0x648]
	0x01D52F8C BL 0x1C16CF4
	0x01D52F90 ADRP X0, 0x23A1000
	0x01D52F94 LDR X0, [X0 + 0xAB0]
	0x01D52F98 BL 0x1C16CF4
	0x01D52F9C ADRP X0, 0x23A2000
	0x01D52FA0 LDR X0, [X0 + 0xF0]
	0x01D52FA4 BL 0x1C16CF4
	0x01D52FA8 ADRP X0, 0x23A1000
	0x01D52FAC LDR X0, [X0 + 0x958]
	0x01D52FB0 BL 0x1C16CF4
	0x01D52FB4 ADRP X0, 0x23A2000
	0x01D52FB8 LDR X0, [X0 + 0xBE8]
	0x01D52FBC BL 0x1C16CF4
	0x01D52FC0 ADRP X0, 0x23A2000
	0x01D52FC4 LDR X0, [X0 + 0xD80]
	0x01D52FC8 BL 0x1C16CF4
	0x01D52FCC ADRP X0, 0x23A2000
	0x01D52FD0 LDR X0, [X0 + 0xD88]
	0x01D52FD4 BL 0x1C16CF4
	0x01D52FD8 ADRP X0, 0x23A2000
	0x01D52FDC LDR X0, [X0 + 0xC88]
	0x01D52FE0 BL 0x1C16CF4
	0x01D52FE4 ADRP X0, 0x23A1000
	0x01D52FE8 LDR X0, [X0 + 0xEB8]
	0x01D52FEC BL 0x1C16CF4
	0x01D52FF0 ADRP X0, 0x23A2000
	0x01D52FF4 LDR X0, [X0 + 0xD90]
	0x01D52FF8 BL 0x1C16CF4
	0x01D52FFC ADRP X0, 0x23A2000
	0x01D53000 LDR X0, [X0 + 0xCA0]
	0x01D53004 BL 0x1C16CF4
	0x01D53008 ADRP X0, 0x23A1000
	0x01D5300C LDR X0, [X0 + 0xD98]
	0x01D53010 BL 0x1C16CF4
	0x01D53014 ADRP X0, 0x23A1000
	0x01D53018 LDR X0, [X0 + 0xDA0]
	0x01D5301C BL 0x1C16CF4
	0x01D53020 ADRP X0, 0x23A1000
	0x01D53024 LDR X0, [X0 + 0xBF8]
	0x01D53028 BL 0x1C16CF4
	0x01D5302C ADRP X0, 0x23A1000
	0x01D53030 LDR X0, [X0 + 0xDA8]
	0x01D53034 BL 0x1C16CF4
	0x01D53038 ADRP X0, 0x23A1000
	0x01D5303C LDR X0, [X0 + 0xCB8]
	0x01D53040 BL 0x1C16CF4
	0x01D53044 ADRP X0, 0x23A1000
	0x01D53048 LDR X0, [X0 + 0x100]
	0x01D5304C BL 0x1C16CF4
	0x01D53050 ADRP X0, 0x23A1000
	0x01D53054 LDR X0, [X0 + 0xDB0]
	0x01D53058 BL 0x1C16CF4
	0x01D5305C ADRP X0, 0x23A1000
	0x01D53060 LDR X0, [X0 + 0x110]
	0x01D53064 BL 0x1C16CF4
	0x01D53068 ADRP X0, 0x23A1000
	0x01D5306C LDR X0, [X0 + 0x118]
	0x01D53070 BL 0x1C16CF4
	0x01D53074 ADRP X0, 0x23A1000
	0x01D53078 LDR X0, [X0 + 0xDB8]
	0x01D5307C BL 0x1C16CF4
	0x01D53080 ADRP X0, 0x23A1000
	0x01D53084 LDR X0, [X0 + 0xDC0]
	0x01D53088 BL 0x1C16CF4
	0x01D5308C ADRP X0, 0x23A1000
	0x01D53090 LDR X0, [X0 + 0xDC8]
	0x01D53094 BL 0x1C16CF4
	0x01D53098 ADRP X0, 0x23A1000
	0x01D5309C LDR X0, [X0 + 0xDD0]
	0x01D530A0 BL 0x1C16CF4
	0x01D530A4 ADRP X0, 0x23A1000
	0x01D530A8 LDR X0, [X0 + 0xDD8]
	0x01D530AC BL 0x1C16CF4
	0x01D530B0 ADRP X0, 0x23A1000
	0x01D530B4 LDR X0, [X0 + 0xDE0]
	0x01D530B8 BL 0x1C16CF4
	0x01D530BC ADRP X0, 0x23A1000
	0x01D530C0 LDR X0, [X0 + 0xD58]
	0x01D530C4 BL 0x1C16CF4
	0x01D530C8 ADRP X0, 0x23A1000
	0x01D530CC LDR X0, [X0 + 0xDE8]
	0x01D530D0 BL 0x1C16CF4
	0x01D530D4 ADRP X0, 0x23A1000
	0x01D530D8 LDR X0, [X0 + 0xD40]
	0x01D530DC BL 0x1C16CF4
	0x01D530E0 MOVZ W8, 0x1
	0x01D530E4 STRB W8, [X20 + 0x7D0]
	0x01D530E8 LDR W8, [X19 + 0x10]
	0x01D530EC LDR X20, [X19 + 0x20]
	0x01D530F0 CMP W8, 0x2
	0x01D530F4 B.EQ 0x1D532DC
	0x01D530F8 CMP W8, 0x1
	0x01D530FC B.EQ 0x1D53378
	0x01D53100 CBNZ W8, 0x1D53370
	0x01D53104 MOVN W8, 0x0
	0x01D53108 STR W8, [X19 + 0x10]
	0x01D5310C ADRP X8, 0x23A1000
	0x01D53110 LDR X8, [X8 + 0xDE0]
	0x01D53114 LDR X0, [X8]
	0x01D53118 BL 0x1C16F10
	0x01D5311C MOV X1, X31
	0x01D53120 MOV X21, X0
	0x01D53124 BL 0x33BDD8C
	0x01D53128 ADRP X22, 0x23A0000
	0x01D5312C LDR X22, [X22 + 0x648]
	0x01D53130 LDR X0, [X22]
	0x01D53134 LDR W8, [X0 + 0xE0]
	0x01D53138 CBNZ W8, 0x1D53140
	0x01D5313C BL 0x1C16DFC
	0x01D53140 ADRP X23, 0x2685000
	0x01D53144 LDRB W8, [X23 + 0x787]
	0x01D53148 CBNZ W8, 0x1D53160
	0x01D5314C ADRP X0, 0x23A0000
	0x01D53150 LDR X0, [X0 + 0x648]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0x2687000
	014 Move W8, [X21+1985]
	015 Move X20, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {53}
	021 Move X0, 0x23A3000
	022 Move X0, [X0+2544]
	023 Call 0x1C17CF4
	024 Move X0, 0x23A2000
	025 Move X0, [X0+3880]
	026 Call 0x1C17CF4
	027 Move X0, 0x23A3000
	028 Move X0, [X0+256]
	029 Call 0x1C17CF4
	030 Move X0, 0x23A2000
	031 Move X0, [X0+3584]
	032 Call 0x1C17CF4
	033 Move X0, 0x23A3000
	034 Move X0, [X0+3344]
	035 Call 0x1C17CF4
	036 Move X0, 0x23A3000
	037 Move X0, [X0+3352]
	038 Call 0x1C17CF4
	039 Move X0, 0x23A2000
	040 Move X0, [X0+3608]
	041 Call 0x1C17CF4
	042 Move X0, 0x23A3000
	043 Move X0, [X0+3360]
	044 Call 0x1C17CF4
	045 Move X0, 0x23A2000
	046 Move X0, [X0+2336]
	047 Call 0x1C17CF4
	048 Move X0, 0x23A2000
	049 Move X0, [X0+2304]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X21+1985], W8
	053 Move X19, [X19+24]
	054 Compare X19, 0
	055 JumpIfEqual {443}
	056 Move X10, 0x23A3000
	057 Move X8, [X19]
	058 Move X10, [X10+256]
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 Move X1, [X10]
	061 Compare X9, 0
	062 JumpIfEqual {69}
	063 Move X10, [X8+176]
	064 Add X10, X10, 8
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Subtract X9, X9, 1
	068 Add X10, X10, 16
	069 Move X0, X19
	070 Move W2, W31
	071 Call 0x1C5D788
	072 NotImplemented "Instruction LDRSW not yet implemented."
	073 Add X8, X8, X9
	074 Add X0, X8, 312
	075 Move X8, [X0]
	076 Move X1, [X0+8]
	077 Move X0, X19
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Compare X0, 0
	080 JumpIfEqual {443}
	081 Move X10, 0x23A3000
	082 Move X8, [X0]
	083 Move X10, [X10+3344]
	084 Move X19, X0
	085 NotImplemented "Instruction LDRH not yet implemented."
	086 Move X1, [X10]
	087 Compare X9, 0
	088 JumpIfEqual {95}
	089 Move X10, [X8+176]
	090 Add X10, X10, 8
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Subtract X9, X9, 1
	094 Add X10, X10, 16
	095 Move X0, X19
	096 Move W2, W31
	097 Call 0x1C5D788
	098 NotImplemented "Instruction LDRSW not yet implemented."
	099 Add X8, X8, X9
	100 Add X0, X8, 312
	101 Move X8, [X0]
	102 Move X1, [X0+8]
	103 Move X0, X19
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Move X19, X0
	106 Compare X0, 0
	107 JumpIfEqual {444}
	108 Move X25, 0x23A2000
	109 Move X27, 0x23A2000
	110 Move X28, 0x23A3000
	111 Move X29, 0x23A2000
	112 Move X24, 0x23A3000
	113 Move X26, 0x23A2000
	114 Move X25, [X25+3608]
	115 Move X27, [X27+3880]
	116 Move X28, [X28+3360]
	117 Move X29, [X29+2304]
	118 Move X24, [X24+2544]
	119 Move X26, [X26+2336]
	120 Move X8, [X19]
	121 Move X1, [X25]
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Compare X9, 0
	124 JumpIfEqual {131}
	125 Move X10, [X8+176]
	126 Add X10, X10, 8
	127 NotImplemented "Instruction LDUR not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Subtract X9, X9, 1
	130 Add X10, X10, 16
	131 Move X0, X19
	132 Move W2, W31
	133 Call 0x1C5D788
	134 NotImplemented "Instruction LDRSW not yet implemented."
	135 Add X8, X8, X9
	136 Add X0, X8, 312
	137 Move X8, [X0]
	138 Move X1, [X0+8]
	139 Move X0, X19
	140 NotImplemented "Instruction BLR not yet implemented."
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {392}
	145 Move X8, [X19]
	146 Move X10, 0x23A3000
	147 NotImplemented "Instruction LDRH not yet implemented."
	148 Move X10, [X10+3352]
	149 Move X1, [X10]
	150 Compare X9, 0
	151 JumpIfEqual {158}
	152 Move X10, [X8+176]
	153 Add X10, X10, 8
	154 NotImplemented "Instruction LDUR not yet implemented."
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Subtract X9, X9, 1
	157 Add X10, X10, 16
	158 Move X0, X19
	159 Move W2, W31
	160 Call 0x1C5D788
	161 NotImplemented "Instruction LDRSW not yet implemented."
	162 Add X8, X8, X9
	163 Add X0, X8, 312
	164 Move X8, [X0]
	165 Move X1, [X0+8]
	166 Move X0, X19
	167 NotImplemented "Instruction BLR not yet implemented."
	168 Compare X20, 0
	169 JumpIfEqual {436}
	170 Move X21, X0
	171 Compare X0, 0
	172 JumpIfEqual {437}
	173 Move X8, [X21]
	174 Move X22, [X20+216]
	175 Move X1, [X27]
	176 NotImplemented "Instruction LDRH not yet implemented."
	177 Compare X9, 0
	178 JumpIfEqual {185}
	179 Move X10, [X8+176]
	180 Add X10, X10, 8
	181 NotImplemented "Instruction LDUR not yet implemented."
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Subtract X9, X9, 1
	184 Add X10, X10, 16
	185 Move W2, 9
	186 Move X0, X21
	187 Call 0x1C5D788
	188 Move W9, [X10]
	189 Add W9, W9, 9
	190 Add X8, X8, W9
	191 Add X0, X8, 312
	192 Move X8, [X0]
	193 Move X1, [X0+8]
	194 Move X0, X21
	195 NotImplemented "Instruction BLR not yet implemented."
	196 Move X1, X0
	197 Compare X22, 0
	198 JumpIfEqual {434}
	199 Move X2, [X28]
	200 Move X0, X22
	201 Call StateDictionary`2<Object, Object>.GetOrAddValue, X0, X1
	202 Move X22, X0
	203 Compare X0, 0
	204 JumpIfEqual {435}
	205 Move X8, [X21]
	206 Move X23, [X22+80]
	207 Move X1, [X27]
	208 NotImplemented "Instruction LDRH not yet implemented."
	209 Compare X9, 0
	210 JumpIfEqual {217}
	211 Move X10, [X8+176]
	212 Add X10, X10, 8
	213 NotImplemented "Instruction LDUR not yet implemented."
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Subtract X9, X9, 1
	216 Add X10, X10, 16
	217 Move W2, 9
	218 Move X0, X21
	219 Call 0x1C5D788
	220 Move W9, [X10]
	221 Add W9, W9, 9
	222 Add X8, X8, W9
	223 Add X0, X8, 312
	224 Move X8, [X0]
	225 Move X1, [X0+8]
	226 Move X0, X21
	227 NotImplemented "Instruction BLR not yet implemented."
	228 Move X1, X0
	229 Compare X23, 0
	230 JumpIfEqual {433}
	231 Move X2, [X29]
	232 Move X0, X23
	233 Call StatePrimitive`1<Object>.set_value, X0, X1
	234 Move X8, [X21]
	235 Move X23, [X22+88]
	236 Move X1, [X27]
	237 NotImplemented "Instruction LDRH not yet implemented."
	238 Compare X9, 0
	239 JumpIfEqual {246}
	240 Move X10, [X8+176]
	241 Add X10, X10, 8
	242 NotImplemented "Instruction LDUR not yet implemented."
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Subtract X9, X9, 1
	245 Add X10, X10, 16
	246 Move W2, 17
	247 Move X0, X21
	248 Call 0x1C5D788
	249 Move W9, [X10]
	250 Add W9, W9, 17
	251 Add X8, X8, W9
	252 Add X0, X8, 312
	253 Move X8, [X0]
	254 Move X1, [X0+8]
	255 Move X0, X21
	256 NotImplemented "Instruction BLR not yet implemented."
	257 Move X1, X0
	258 Compare X23, 0
	259 JumpIfEqual {438}
	260 Move X2, [X29]
	261 Move X0, X23
	262 Call StatePrimitive`1<Object>.set_value, X0, X1
	263 Move X8, [X21]
	264 Move X23, [X22+96]
	265 Move X1, [X27]
	266 NotImplemented "Instruction LDRH not yet implemented."
	267 Compare X9, 0
	268 JumpIfEqual {275}
	269 Move X10, [X8+176]
	270 Add X10, X10, 8
	271 NotImplemented "Instruction LDUR not yet implemented."
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Subtract X9, X9, 1
	274 Add X10, X10, 16
	275 Move W2, 3
	276 Move X0, X21
	277 Call 0x1C5D788
	278 Move W9, [X10]
	279 Add W9, W9, 3
	280 Add X8, X8, W9
	281 Add X0, X8, 312
	282 Move X8, [X0]
	283 Move X1, [X0+8]
	284 Move X0, X21
	285 NotImplemented "Instruction BLR not yet implemented."
	286 Move X1, X0
	287 Compare X23, 0
	288 JumpIfEqual {439}
	289 Move X2, [X29]
	290 Move X0, X23
	291 Call StatePrimitive`1<Object>.set_value, X0, X1
	292 Move X8, [X21]
	293 Move X1, [X27]
	294 NotImplemented "Instruction LDRH not yet implemented."
	295 Compare X9, 0
	296 JumpIfEqual {303}
	297 Move X10, [X8+176]
	298 Add X10, X10, 8
	299 NotImplemented "Instruction LDUR not yet implemented."
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Subtract X9, X9, 1
	302 Add X10, X10, 16
	303 Move W2, 3
	304 Move X0, X21
	305 Call 0x1C5D788
	306 Move W9, [X10]
	307 Add W9, W9, 3
	308 Add X8, X8, W9
	309 Add X0, X8, 312
	310 Move X8, [X0]
	311 Move X1, [X0+8]
	312 Move X0, X21
	313 NotImplemented "Instruction BLR not yet implemented."
	314 Move X1, X31
	315 Call String.IsNullOrEmpty, X0
	316 Move TEMP, X0
	317 And TEMP, TEMP, 1
	318 Compare TEMP, 1
	319 JumpIfNotEqual {349}
	320 Move X8, [X21]
	321 Move X23, [X22+96]
	322 Move X1, [X27]
	323 NotImplemented "Instruction LDRH not yet implemented."
	324 Compare X9, 0
	325 JumpIfEqual {332}
	326 Move X10, [X8+176]
	327 Add X10, X10, 8
	328 NotImplemented "Instruction LDUR not yet implemented."
	329 NotImplemented "Instruction CMP not yet implemented."
	330 Subtract X9, X9, 1
	331 Add X10, X10, 16
	332 Move W2, 17
	333 Move X0, X21
	334 Call 0x1C5D788
	335 Move W9, [X10]
	336 Add W9, W9, 17
	337 Add X8, X8, W9
	338 Add X0, X8, 312
	339 Move X8, [X0]
	340 Move X1, [X0+8]
	341 Move X0, X21
	342 NotImplemented "Instruction BLR not yet implemented."
	343 Move X1, X0
	344 Compare X23, 0
	345 JumpIfEqual {442}
	346 Move X2, [X29]
	347 Move X0, X23
	348 Call StatePrimitive`1<Object>.set_value, X0, X1
	349 Move X8, [X21]
	350 Move X23, [X22+104]
	351 Move X1, [X27]
	352 NotImplemented "Instruction LDRH not yet implemented."
	353 Compare X9, 0
	354 JumpIfEqual {361}
	355 Move X10, [X8+176]
	356 Add X10, X10, 8
	357 NotImplemented "Instruction LDUR not yet implemented."
	358 NotImplemented "Instruction CMP not yet implemented."
	359 Subtract X9, X9, 1
	360 Add X10, X10, 16
	361 Move W2, 1
	362 Move X0, X21
	363 Call 0x1C5D788
	364 Move W9, [X10]
	365 Add W9, W9, 1
	366 Add X8, X8, W9
	367 Add X0, X8, 312
	368 Move X8, [X0]
	369 Move X1, [X0+8]
	370 Move X0, X21
	371 NotImplemented "Instruction BLR not yet implemented."
	372 Move X1, X0
	373 Compare X23, 0
	374 JumpIfEqual {440}
	375 Move X2, [X29]
	376 Move X0, X23
	377 Call StatePrimitive`1<Object>.set_value, X0, X1
	378 Move X0, [X24]
	379 Move X21, [X22+72]
	380 Move W8, [X0+224]
	381 Compare W8, 0
	382 JumpIfNotEqual {384}
	383 Call 0x1C17DFC
	384 Move X0, X31
	385 Call DateTime.get_Now
	386 Move X1, X0
	387 Compare X21, 0
	388 JumpIfEqual {441}
	389 Move X2, [X26]
	390 Move X0, X21
	391 Call StatePrimitive`1<DateTime>.set_value, X0, X1
	392 Move X21, X31
	393 Compare X19, 0
	394 JumpIfEqual {418}
	395 Move X8, [X19]
	396 Move X10, 0x23A2000
	397 NotImplemented "Instruction LDRH not yet implemented."
	398 Move X10, [X10+3584]
	399 Move X1, [X10]
	400 Compare X9, 0
	401 JumpIfEqual {408}
	402 Move X10, [X8+176]
	403 Add X10, X10, 8
	404 NotImplemented "Instruction LDUR not yet implemented."
	405 NotImplemented "Instruction CMP not yet implemented."
	406 Subtract X9, X9, 1
	407 Add X10, X10, 16
	408 Move X0, X19
	409 Move W2, W31
	410 Call 0x1C5D788
	411 NotImplemented "Instruction LDRSW not yet implemented."
	412 Add X8, X8, X9
	413 Add X0, X8, 312
	414 Move X8, [X0]
	415 Move X1, [X0+8]
	416 Move X0, X19
	417 NotImplemented "Instruction BLR not yet implemented."
	418 Compare X21, 0
	419 JumpIfNotEqual {445}
	420 Move X20, [X31+80]
	421 Move X19, [X31+88]
	422 Move X22, [X31+64]
	423 Move X21, [X31+72]
	424 Move X24, [X31+48]
	425 Move X23, [X31+56]
	426 Move X26, [X31+32]
	427 Move X25, [X31+40]
	428 Move X28, [X31+16]
	429 Move X27, [X31+24]
	430 Move X29, [X31+96]
	431 Move X30, [X31+104]
	432 Return 
	433 Call 0x1C17F20
	434 Call 0x1C17F20
	435 Call 0x1C17F20
	436 Call 0x1C17F20
	437 Call 0x1C17F20
	438 Call 0x1C17F20
	439 Call 0x1C17F20
	440 Call 0x1C17F20
	441 Call 0x1C17F20
	442 Call 0x1C17F20
	443 Call 0x1C17F20
	444 Call 0x1C17F20
	445 Move X0, X21
	446 Call 0x1C17F18
	447 Move X20, X0
	448 NotImplemented "Instruction CMP not yet implemented."
	449 Move X0, X20
	450 Call 0x3EB2AD0
	451 Move X21, [X0]
	452 Call 0x3EB2AE0
	453 Move X21, X31
	454 Move X20, X0
	455 Compare X19, 0
	456 JumpIfEqual {480}
	457 Move X8, [X19]
	458 Move X10, 0x23A1000
	459 NotImplemented "Instruction LDRH not yet implemented."
	460 Move X10, [X10+3584]
	461 Move X1, [X10]
	462 Compare X9, 0
	463 JumpIfEqual {470}
	464 Move X10, [X8+176]
	465 Add X10, X10, 8
	466 NotImplemented "Instruction LDUR not yet implemented."
	467 NotImplemented "Instruction CMP not yet implemented."
	468 Subtract X9, X9, 1
	469 Add X10, X10, 16
	470 Move X0, X19
	471 Move W2, W31
	472 Call 0x1C5D788
	473 NotImplemented "Instruction LDRSW not yet implemented."
	474 Add X8, X8, X9
	475 Add X0, X8, 312
	476 Move X8, [X0]
	477 Move X1, [X0+8]
	478 Move X0, X19
	479 NotImplemented "Instruction BLR not yet implemented."
	480 Compare X21, 0
	481 JumpIfNotEqual {484}
	482 Move X0, X20
	483 Call 0x1D2D690
	484 Move X0, X21
	485 Call 0x1C17F18
	486 Call 0x1991590

