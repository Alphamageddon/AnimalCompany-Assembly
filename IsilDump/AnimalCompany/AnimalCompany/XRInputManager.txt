Type: AnimalCompany.XRInputManager

Method: UnityEngine.XR.Interaction.Toolkit.XRController GetXRController(AnimalCompany.HandSide side)

Disassembly:
	0x01DD0310 MOV V14.16B, V0.16B
	0x01DD0314 MOV W19, W1
	0x01DD0318 MOV X20, X0
	0x01DD031C TBNZ X8, 0x0, 0x1DD0358
	0x01DD0320 ADRP X0, 0x2326000
	0x01DD0324 LDR X0, [X0 + 0xA78]
	0x01DD0328 BL 0x1C16CF4
	0x01DD032C ADRP X0, 0x2323000
	0x01DD0330 LDR X0, [X0 + 0x598]
	0x01DD0334 BL 0x1C16CF4
	0x01DD0338 ADRP X0, 0x2328000
	0x01DD033C LDR X0, [X0 + 0xD0]
	0x01DD0340 BL 0x1C16CF4
	0x01DD0344 ADRP X0, 0x2328000
	0x01DD0348 LDR X0, [X0 + 0x520]
	0x01DD034C BL 0x1C16CF4
	0x01DD0350 MOVZ W8, 0x1
	0x01DD0354 STRB W8, [X22 + 0xBEF]
	0x01DD0358 LDR X0, [X21]
	0x01DD035C LDR W8, [X0 + 0xE0]
	0x01DD0360 CBNZ W8, 0x1DD036C
	0x01DD0364 BL 0x1C16DFC
	0x01DD0368 LDR X0, [X21]
	0x01DD036C LDR X8, [X0 + 0xB8]
	0x01DD0370 LDRB W9, [X8 + 0x20]
	0x01DD0374 CBZ W9, 0x1DD0470

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2609000
	006 Move X21, 0x2327000
	007 Move W8, [X20+3039]
	008 Move X21, [X21+3480]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2327000
	015 Move X0, [X0+3480]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3039], W8
	019 Move X8, [X21]
	020 Move X8, [X8+184]
	021 Move X8, [X8]
	022 Compare X8, 0
	023 JumpIfEqual {34}
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W9, 40
	026 Move W10, 32
	027 NotImplemented "Instruction CSEL not yet implemented."
	028 Move X0, [X8]
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return X0
	034 Call 0x1C17F20

Method: System.Void Awake()

Disassembly:
	0x01DD0378 LDR W9, [X0 + 0xE0]
	0x01DD037C CBNZ W9, 0x1DD038C
	0x01DD0380 BL 0x1C16DFC
	0x01DD0384 LDR X8, [X21]
	0x01DD0388 LDR X8, [X8 + 0xB8]
	0x01DD038C STRB W31, [X8 + 0x20]
	0x01DD0390 ADRP X21, 0x2323000
	0x01DD0394 LDR X21, [X21 + 0x598]
	0x01DD0398 LDR X0, [X21]
	0x01DD039C LDR W8, [X0 + 0xE0]
	0x01DD03A0 CBNZ W8, 0x1DD03A8
	0x01DD03A4 BL 0x1C16DFC
	0x01DD03A8 MOV X0, X20
	0x01DD03AC MOV X1, X31
	0x01DD03B0 MOV X2, X31
	0x01DD03B4 BL 0x3C3883C
	0x01DD03B8 TBNZ X0, 0x0, 0x1DD0540
	0x01DD03BC ADRP X22, 0x2328000
	0x01DD03C0 LDR X22, [X22 + 0xD0]
	0x01DD03C4 LDR X0, [X22]
	0x01DD03C8 LDR W8, [X0 + 0xE0]
	0x01DD03CC CBNZ W8, 0x1DD03D8
	0x01DD03D0 BL 0x1C16DFC
	0x01DD03D4 LDR X0, [X22]
	0x01DD03D8 LDR X8, [X21]
	0x01DD03DC LDR X9, [X0 + 0xB8]
	0x01DD03E0 LDR W10, [X8 + 0xE0]
	0x01DD03E4 LDR X21, [X9 + 0x8]
	0x01DD03E8 CBNZ W10, 0x1DD03F4
	0x01DD03EC MOV X0, X8
	0x01DD03F0 BL 0x1C16DFC
	0x01DD03F4 MOV X0, X21
	0x01DD03F8 MOV X1, X31
	0x01DD03FC MOV X2, X31
	0x01DD0400 BL 0x3C3883C
	0x01DD0404 TBNZ X0, 0x0, 0x1DD0540
	0x01DD0408 CBZ X20, 0x1DD0560
	0x01DD040C MOV X0, X20
	0x01DD0410 MOV X1, X31
	0x01DD0414 BL 0x1E9DEF4
	0x01DD0418 TBZ X0, 0x0, 0x1DD0524
	0x01DD041C LDR X0, [X22]
	0x01DD0420 LDR W8, [X0 + 0xE0]
	0x01DD0424 CBNZ W8, 0x1DD042C
	0x01DD0428 BL 0x1C16DFC
	0x01DD042C MOV X0, X20
	0x01DD0430 MOV W1, W19
	0x01DD0434 MOV V1.16B, V13.16B

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2609000
	007 Move X21, 0x2327000
	008 Move X22, 0x2324000
	009 Move W8, [X20+3040]
	010 Move X21, [X21+3480]
	011 Move X22, [X22+1432]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2324000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move X0, 0x2327000
	021 Move X0, [X0+3480]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+3040], W8
	025 Move X8, [X21]
	026 Move X0, [X22]
	027 Move X8, [X8+184]
	028 Move W9, [X0+224]
	029 Move X20, [X8]
	030 Compare W9, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X20
	034 Move X1, X31
	035 Move X2, X31
	036 Call Object.op_Equality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {50}
	041 Move X8, [X21]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X8, [X8+184]
	045 Move [X8], X19
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X30, [X31+48]
	049 Return 
	050 Move X0, [X22]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X19
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X1, X31
	061 Move X30, [X31+48]
	062 Call Object.Destroy, X0
	063 Return 

Method: System.Void OnDestroy()

Disassembly:
	0x01DD0438 MOV V2.16B, V12.16B
	0x01DD043C MOV V3.16B, V11.16B
	0x01DD0440 MOV V4.16B, V10.16B
	0x01DD0444 MOV V5.16B, V9.16B
	0x01DD0448 MOV V6.16B, V8.16B
	0x01DD044C LDP X20, X19, [X31 + 0x50]
	0x01DD0450 LDP X22, X21, [X31 + 0x40]
	0x01DD0454 LDR X30, [X31 + 0x38]
	0x01DD0458 LDP D9, D8, [X31 + 0x28]
	0x01DD045C LDP D11, D10, [X31 + 0x18]
	0x01DD0460 LDP D13, D12, [X31 + 0x8]
	0x01DD0464 MOV V0.16B, V14.16B
	0x01DD0468 LDR V14, [X31], #0x60
	0x01DD046C B 0x1DD05AC
	0x01DD0470 CBZ X20, 0x1DD0564
	0x01DD0474 MOV X0, X20
	0x01DD0478 MOV X1, X31
	0x01DD047C BL 0x1E9E538

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x2609000
	005 Move X20, 0x2327000
	006 Move W8, [X19+3041]
	007 Move X20, [X20+3480]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2327000
	013 Move X0, [X0+3480]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3041], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move [X8], X31
	022 Move X30, [X31+32]
	023 Return 

Method: System.Void SendHapticImpulse(AnimalCompany.HandSide side, System.Single amplitude, System.Single duration)

Disassembly:
	0x01DC3324 BL 0x1C16DFC
	0x01DC3328 MOV X0, X22
	0x01DC332C MOV X1, X31
	0x01DC3330 MOV X2, X31
	0x01DC3334 BL 0x3C3883C
	0x01DC3338 TBNZ X0, 0x0, 0x1DC35E8
	0x01DC333C ADRP X23, 0x2332000
	0x01DC3340 LDR X23, [X23 + 0x7C8]
	0x01DC3344 LDR X0, [X23]
	0x01DC3348 LDR W8, [X0 + 0xE0]
	0x01DC334C CBNZ W8, 0x1DC3358
	0x01DC3350 BL 0x1C16DFC
	0x01DC3354 LDR X0, [X23]
	0x01DC3358 LDR X8, [X0 + 0xB8]
	0x01DC335C ADRP X21, 0x2615000

ISIL:
	001 Move [X31-32], D9
	002 Move [X31-24], D8
	003 Move [X31+16], X30
	004 Move V8, V1
	005 Move V9, V0
	006 Call XRInputManager.GetXRController, X0
	007 Compare X0, 0
	008 JumpIfEqual {18}
	009 Move X8, [X0]
	010 Move X30, [X31+16]
	011 Move V0, V9
	012 Move V1, V8
	013 Move X2, [X8+552]
	014 Move X1, [X8+560]
	015 Move D9, [X31+32]
	016 Move D8, [X31+40]
	017 CallNoReturn X2
	018 Call 0x1C17F20

Method: System.Void SendHapticImpulse(AnimalCompany.AttachedLocation location, System.Single amplitude, System.Single duration)

Disassembly:
	0x01DD0480 CMP W0, 0x4
	0x01DD0484 B.EQ 0x1DD0540
	0x01DD0488 LDR X0, [X20 + 0x50]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Call XRInputManager.SendHapticImpulse, X0, V0, V1
	004 Return 

Method: System.Void Update()

Disassembly:
	0x01DD048C CBZ X0, 0x1DD0560
	0x01DD0490 MOV X1, X31
	0x01DD0494 BL 0x1EC4D00
	0x01DD0498 TBZ X0, 0x0, 0x1DD0390
	0x01DD049C LDR X0, [X20 + 0x50]
	0x01DD04A0 MOVZ W1, 0x28
	0x01DD04A4 MOV X2, X31
	0x01DD04A8 BL 0x1ED9318
	0x01DD04AC LDR X8, [X21]
	0x01DD04B0 MOV X21, X0
	0x01DD04B4 LDR W9, [X8 + 0xE0]
	0x01DD04B8 CBNZ W9, 0x1DD04C4
	0x01DD04BC MOV X0, X8
	0x01DD04C0 BL 0x1C16DFC
	0x01DD04C4 ADRP X8, 0x2328000
	0x01DD04C8 LDR X8, [X8 + 0x520]
	0x01DD04CC MOV X1, X31
	0x01DD04D0 LDR X0, [X8]
	0x01DD04D4 BL 0x1E778CC
	0x01DD04D8 MOV X1, X31
	0x01DD04DC BL 0x1E9C24C
	0x01DD04E0 STUR X0, [X21 + 0x1C]
	0x01DD04E4 STR W19, [X21 + 0x24]
	0x01DD04E8 STP S14, S13, [X21 + 0x28]
	0x01DD04EC STP S12, S11, [X21 + 0x30]
	0x01DD04F0 STP S10, S9, [X21 + 0x38]
	0x01DD04F4 STR S8, [X21 + 0x40]
	0x01DD04F8 CBZ X21, 0x1DD0560
	0x01DD04FC LDR W8, [X21 + 0x14]
	0x01DD0500 MOVZ W9, 0x140
	0x01DD0504 MOV X0, X20
	0x01DD0508 MOV X1, X21
	0x01DD050C ORR W8, W8, 0x4
	0x01DD0510 MOV X2, X31
	0x01DD0514 STR W9, [X21 + 0xC]
	0x01DD0518 STR W8, [X21 + 0x14]
	0x01DD051C BL 0x1EA1E24
	0x01DD0520 B 0x1DD0390
	0x01DD0524 LDR W8, [X20 + 0x188]
	0x01DD0528 CMP W8, 0x2
	0x01DD052C B.NE 0x1DD0540
	0x01DD0530 MOV X0, X20
	0x01DD0534 MOV X1, X31
	0x01DD0538 BL 0x1EA27F0
	0x01DD053C TBNZ X0, 0x0, 0x1DD041C
	0x01DD0540 LDP X20, X19, [X31 + 0x50]
	0x01DD0544 LDP X22, X21, [X31 + 0x40]
	0x01DD0548 LDR X30, [X31 + 0x38]
	0x01DD054C LDP D9, D8, [X31 + 0x28]
	0x01DD0550 LDP D11, D10, [X31 + 0x18]
	0x01DD0554 LDP D13, D12, [X31 + 0x8]
	0x01DD0558 LDR V14, [X31], #0x60
	0x01DD055C RET
	0x01DD0560 BL 0x1C16F20
	0x01DD0564 ADRP X0, 0x2328000
	0x01DD0568 LDR X0, [X0 + 0x528]
	0x01DD056C BL 0x1C16D08
	0x01DD0570 BL 0x1C16F10
	0x01DD0574 MOV X19, X0
	0x01DD0578 ADRP X0, 0x2328000
	0x01DD057C LDR X0, [X0 + 0x530]
	0x01DD0580 BL 0x1C16D08
	0x01DD0584 MOV X1, X0
	0x01DD0588 MOV X0, X19
	0x01DD058C MOV X2, X31
	0x01DD0590 BL 0x330E100
	0x01DD0594 ADRP X0, 0x2328000
	0x01DD0598 LDR X0, [X0 + 0x538]
	0x01DD059C BL 0x1C16D08
	0x01DD05A0 MOV X1, X0
	0x01DD05A4 MOV X0, X19
	0x01DD05A8 BL 0x1C16DEC
	0x01DD05AC SUB X31, X31, 0x110
	0x01DD05B0 STR D14, [X31 + 0x90]
	0x01DD05B4 STP D13, D12, [X31 + 0x98]
	0x01DD05B8 STP D11, D10, [X31 + 0xA8]
	0x01DD05BC STP D9, D8, [X31 + 0xB8]
	0x01DD05C0 STR X29, [X31 + 0xC8]
	0x01DD05C4 STP X30, X25, [X31 + 0xD0]
	0x01DD05C8 STP X24, X23, [X31 + 0xE0]
	0x01DD05CC STP X22, X21, [X31 + 0xF0]
	0x01DD05D0 STP X20, X19, [X31 + 0x100]
	0x01DD05D4 ADRP X22, 0x2608000
	0x01DD05D8 ADRP X21, 0x2328000
	0x01DD05DC LDRB W8, [X22 + 0xBF0]
	0x01DD05E0 LDR X21, [X21 + 0xD0]
	0x01DD05E4 MOV V8.16B, V6.16B
	0x01DD05E8 MOV V9.16B, V5.16B
	0x01DD05EC MOV V10.16B, V4.16B
	0x01DD05F0 MOV V11.16B, V3.16B
	0x01DD05F4 MOV V12.16B, V2.16B
	0x01DD05F8 MOV V13.16B, V1.16B
	0x01DD05FC MOV V14.16B, V0.16B
	0x01DD0600 MOV W20, W1
	0x01DD0604 MOV X19, X0
	0x01DD0608 TBNZ X8, 0x0, 0x1DD065C
	0x01DD060C ADRP X0, 0x2326000
	0x01DD0610 LDR X0, [X0 + 0xB58]
	0x01DD0614 BL 0x1C16CF4
	0x01DD0618 ADRP X0, 0x2326000
	0x01DD061C LDR X0, [X0 + 0xB60]
	0x01DD0620 BL 0x1C16CF4
	0x01DD0624 ADRP X0, 0x2327000
	0x01DD0628 LDR X0, [X0 + 0x140]
	0x01DD062C BL 0x1C16CF4
	0x01DD0630 ADRP X0, 0x2328000
	0x01DD0634 LDR X0, [X0 + 0xD0]
	0x01DD0638 BL 0x1C16CF4
	0x01DD063C ADRP X0, 0x2328000
	0x01DD0640 LDR X0, [X0 + 0x540]
	0x01DD0644 BL 0x1C16CF4
	0x01DD0648 ADRP X0, 0x2328000
	0x01DD064C LDR X0, [X0 + 0x548]
	0x01DD0650 BL 0x1C16CF4
	0x01DD0654 MOVZ W8, 0x1
	0x01DD0658 STRB W8, [X22 + 0xBF0]
	0x01DD065C LDR X0, [X21]
	0x01DD0660 STP X31, X31, [X31 + 0x70]
	0x01DD0664 STR W31, [X31 + 0x80]
	0x01DD0668 STP X31, X31, [X31 + 0x50]
	0x01DD066C STR W31, [X31 + 0x60]
	0x01DD0670 ADRP X22, 0x2326000
	0x01DD0674 ADRP X21, 0x2326000
	0x01DD0678 ADRP X25, 0x2328000
	0x01DD067C LDR W8, [X0 + 0xE0]
	0x01DD0680 LDR X22, [X22 + 0xB58]
	0x01DD0684 LDR X21, [X21 + 0xB60]
	0x01DD0688 LDR X25, [X25 + 0x548]
	0x01DD068C CBNZ W8, 0x1DD0694
	0x01DD0690 BL 0x1C16DFC
	0x01DD0694 MOV W0, W20
	0x01DD0698 BL 0x1DD07F0
	0x01DD069C LDR X1, [X22]
	0x01DD06A0 MOV X20, X0
	0x01DD06A4 ADD X0, X31, 0x40
	0x01DD06A8 MOV V0.16B, V14.16B
	0x01DD06AC MOV V1.16B, V13.16B
	0x01DD06B0 MOV V2.16B, V12.16B
	0x01DD06B4 STP X31, X31, [X31 + 0x40]
	0x01DD06B8 BL 0x243BFEC
	0x01DD06BC LDR X1, [X21]
	0x01DD06C0 ADD X0, X31, 0x28
	0x01DD06C4 MOV V0.16B, V11.16B
	0x01DD06C8 MOV V1.16B, V10.16B
	0x01DD06CC MOV V2.16B, V9.16B
	0x01DD06D0 MOV V3.16B, V8.16B
	0x01DD06D4 STP X31, X31, [X31 + 0x28]
	0x01DD06D8 STR W31, [X31 + 0x38]
	0x01DD06DC BL 0x2437C9C
	0x01DD06E0 LDR X0, [X25]
	0x01DD06E4 LDR W8, [X0 + 0xE0]
	0x01DD06E8 CBNZ W8, 0x1DD06F4
	0x01DD06EC BL 0x1C16DFC
	0x01DD06F0 LDR X0, [X25]
	0x01DD06F4 LDR X8, [X0 + 0xB8]
	0x01DD06F8 LDR X23, [X8 + 0x8]
	0x01DD06FC CBZ X23, 0x1DD0710
	0x01DD0700 LDUR V0, [X31 + 0x28]
	0x01DD0704 LDR W8, [X31 + 0x38]
	0x01DD0708 LDP X21, X22, [X31 + 0x40]
	0x01DD070C B 0x1DD077C
	0x01DD0710 LDUR V0, [X31 + 0x28]
	0x01DD0714 LDR W8, [X31 + 0x38]
	0x01DD0718 LDP X21, X22, [X31 + 0x40]
	0x01DD071C STR V0, [X31 + 0x5]
	0x01DD0720 STR W8, [X31 + 0x60]
	0x01DD0724 LDR W8, [X0 + 0xE0]
	0x01DD0728 CBNZ W8, 0x1DD0734
	0x01DD072C BL 0x1C16DFC
	0x01DD0730 LDR X0, [X25]
	0x01DD0734 ADRP X9, 0x2327000
	0x01DD0738 LDR X8, [X0 + 0xB8]
	0x01DD073C LDR X9, [X9 + 0x140]
	0x01DD0740 LDR X24, [X8]
	0x01DD0744 LDR X0, [X9]
	0x01DD0748 BL 0x1C16F10
	0x01DD074C ADRP X8, 0x2328000
	0x01DD0750 LDR X8, [X8 + 0x540]
	0x01DD0754 MOV X1, X24
	0x01DD0758 MOV X3, X31
	0x01DD075C MOV X23, X0
	0x01DD0760 LDR X2, [X8]
	0x01DD0764 BL 0x1EB1E84
	0x01DD0768 LDR X8, [X25]
	0x01DD076C LDR X8, [X8 + 0xB8]
	0x01DD0770 STR X23, [X8 + 0x8]
	0x01DD0774 LDR V0, [X31 + 0x5]
	0x01DD0778 LDR W8, [X31 + 0x60]
	0x01DD077C STR V0, [X31 + 0x7]
	0x01DD0780 STR W8, [X31 + 0x80]
	0x01DD0784 CBZ X19, 0x1DD07EC
	0x01DD0788 LDR V0, [X31 + 0x7]
	0x01DD078C LDR W8, [X31 + 0x80]
	0x01DD0790 ADD X4, X31, 0x10
	0x01DD0794 MOV X0, X19
	0x01DD0798 MOV X1, X20
	0x01DD079C MOV X2, X21
	0x01DD07A0 MOV X3, X22
	0x01DD07A4 MOV X5, X31
	0x01DD07A8 MOV X6, X23
	0x01DD07AC MOV W7, W31
	0x01DD07B0 STR V0, [X31 + 0x1]
	0x01DD07B4 STR W8, [X31 + 0x20]
	0x01DD07B8 STR X31, [X31]
	0x01DD07BC BL 0x1EAE6A8
	0x01DD07C0 LDP X20, X19, [X31 + 0x100]
	0x01DD07C4 LDP X22, X21, [X31 + 0xF0]
	0x01DD07C8 LDP X24, X23, [X31 + 0xE0]
	0x01DD07CC LDP X30, X25, [X31 + 0xD0]
	0x01DD07D0 LDR X29, [X31 + 0xC8]
	0x01DD07D4 LDP D9, D8, [X31 + 0xB8]
	0x01DD07D8 LDP D11, D10, [X31 + 0xA8]
	0x01DD07DC LDP D13, D12, [X31 + 0x98]
	0x01DD07E0 LDR V14, [X31 + 0x90]
	0x01DD07E4 ADD X31, X31, 0x110
	0x01DD07E8 RET
	0x01DD07EC BL 0x1C16F20
	0x01DD07F0 SUB X31, X31, 0x40
	0x01DD07F4 STP X30, X21, [X31 + 0x20]
	0x01DD07F8 STP X20, X19, [X31 + 0x30]
	0x01DD07FC ADRP X20, 0x2608000
	0x01DD0800 ADRP X21, 0x2328000
	0x01DD0804 LDRB W8, [X20 + 0xBF1]
	0x01DD0808 LDR X21, [X21 + 0xD0]
	0x01DD080C MOV W19, W0
	0x01DD0810 TBNZ X8, 0x0, 0x1DD0870
	0x01DD0814 ADRP X0, 0x2328000
	0x01DD0818 LDR X0, [X0 + 0x550]
	0x01DD081C BL 0x1C16CF4
	0x01DD0820 ADRP X0, 0x2328000
	0x01DD0824 LDR X0, [X0 + 0x558]
	0x01DD0828 BL 0x1C16CF4
	0x01DD082C ADRP X0, 0x2328000
	0x01DD0830 LDR X0, [X0 + 0x560]
	0x01DD0834 BL 0x1C16CF4
	0x01DD0838 ADRP X0, 0x2328000
	0x01DD083C LDR X0, [X0 + 0xD0]
	0x01DD0840 BL 0x1C16CF4
	0x01DD0844 ADRP X0, 0x2328000
	0x01DD0848 LDR X0, [X0 + 0x568]
	0x01DD084C BL 0x1C16CF4
	0x01DD0850 ADRP X0, 0x2328000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2609000
	007 Move X20, 0x2329000
	008 Move W8, [X21+3042]
	009 Move X20, [X20+344]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x2329000
	016 Move X0, [X0+344]
	017 Call 0x1C17CF4
	018 Move X0, 0x2329000
	019 Move X0, [X0+1144]
	020 Call 0x1C17CF4
	021 Move X0, 0x2327000
	022 Move X0, [X0+3480]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3042], W8
	026 Move X0, [X20]
	027 Move X21, 0x2327000
	028 Move X22, 0x2329000
	029 Move W8, [X0+224]
	030 Move X21, [X21+3480]
	031 Move X22, [X22+1144]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X20]
	036 Move X8, [X21]
	037 Move X9, [X0+184]
	038 Move X0, X19
	039 Move W1, W31
	040 Move X8, [X8+184]
	041 Move X2, [X9+120]
	042 Move X3, [X8+8]
	043 Call XRInputManager.GetButtonValue, X0, X1, X2, X3
	044 Move X8, [X20]
	045 Move X9, [X21]
	046 Move W1, 1
	047 Move X0, X19
	048 Move X8, [X8+184]
	049 Move X9, [X9+184]
	050 Move X2, [X8+120]
	051 Move X3, [X9+16]
	052 Call XRInputManager.GetButtonValue, X0, X1, X2, X3
	053 Move X8, [X20]
	054 Move X9, [X21]
	055 Move X0, X19
	056 Move W1, W31
	057 Move X8, [X8+184]
	058 Move X9, [X9+184]
	059 Move X2, [X8+128]
	060 Move X3, [X9+24]
	061 Call XRInputManager.GetButtonValue, X0, X1, X2, X3
	062 Move X8, [X20]
	063 Move X9, [X21]
	064 Move W1, 1
	065 Move X0, X19
	066 Move X8, [X8+184]
	067 Move X9, [X9+184]
	068 Move X2, [X8+128]
	069 Move X3, [X9+32]
	070 Call XRInputManager.GetButtonValue, X0, X1, X2, X3
	071 Move X0, [X22]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {77}
	075 Call 0x1C17DFC
	076 Move X0, [X22]
	077 Move X8, [X21]
	078 Move X9, [X0+184]
	079 Move X0, X19
	080 Move W1, W31
	081 Move X8, [X8+184]
	082 Move X2, [X9+8]
	083 Move X3, [X8+40]
	084 Move X4, [X8+48]
	085 Call XRInputManager.GetButtonEvent, X0, X1, X2, X3, X4
	086 Move X8, [X22]
	087 Move X9, [X21]
	088 Move W1, 1
	089 Move X0, X19
	090 Move X8, [X8+184]
	091 Move X9, [X9+184]
	092 Move X2, [X8+8]
	093 Move X3, [X9+56]
	094 Move X4, [X9+64]
	095 Call XRInputManager.GetButtonEvent, X0, X1, X2, X3, X4
	096 Move X8, [X20]
	097 Move X9, [X21]
	098 Move X0, X19
	099 Move W1, W31
	100 Move X8, [X8+184]
	101 Move X9, [X9+184]
	102 Move X2, [X8+8]
	103 Move X3, [X9+136]
	104 Move X4, [X9+144]
	105 Call XRInputManager.GetButtonEvent, X0, X1, X2, X3, X4
	106 Move X8, [X20]
	107 Move X9, [X21]
	108 Move W1, 1
	109 Move X0, X19
	110 Move X8, [X8+184]
	111 Move X9, [X9+184]
	112 Move X2, [X8+8]
	113 Move X3, [X9+152]
	114 Move X4, [X9+160]
	115 Call XRInputManager.GetButtonEvent, X0, X1, X2, X3, X4
	116 Move X8, [X20]
	117 Move X9, [X21]
	118 Move X0, X19
	119 Move W1, W31
	120 Move X8, [X8+184]
	121 Move X9, [X9+184]
	122 Move X2, [X8+16]
	123 Move X3, [X9+168]
	124 Move X4, [X9+176]
	125 Call XRInputManager.GetButtonEvent, X0, X1, X2, X3, X4
	126 Move X8, [X20]
	127 Move X9, [X21]
	128 Move W1, 1
	129 Move X0, X19
	130 Move X8, [X8+184]
	131 Move X9, [X9+184]
	132 Move X2, [X8+16]
	133 Move X3, [X9+184]
	134 Move X4, [X9+192]
	135 Call XRInputManager.GetButtonEvent, X0, X1, X2, X3, X4
	136 Move X8, [X20]
	137 Move X9, [X21]
	138 Move X0, X19
	139 Move W1, W31
	140 Move X8, [X8+184]
	141 Move X9, [X9+184]
	142 Move X2, [X8+40]
	143 Move X3, [X9+104]
	144 Move X4, [X9+112]
	145 Call XRInputManager.GetButtonEvent, X0, X1, X2, X3, X4
	146 Move X8, [X20]
	147 Move X9, [X21]
	148 Move W1, 1
	149 Move X0, X19
	150 Move X8, [X8+184]
	151 Move X9, [X9+184]
	152 Move X2, [X8+40]
	153 Move X3, [X9+120]
	154 Move X4, [X9+128]
	155 Call XRInputManager.GetButtonEvent, X0, X1, X2, X3, X4
	156 Move X8, [X20]
	157 Move X9, [X21]
	158 Move X0, X19
	159 Move W1, W31
	160 Move X8, [X8+184]
	161 Move X9, [X9+184]
	162 Move X2, [X8+48]
	163 Move X3, [X9+72]
	164 Move X4, [X9+80]
	165 Call XRInputManager.GetButtonEvent, X0, X1, X2, X3, X4
	166 Move X8, [X20]
	167 Move X9, [X21]
	168 Move W1, 1
	169 Move X0, X19
	170 Move X8, [X8+184]
	171 Move X9, [X9+184]
	172 Move X2, [X8+48]
	173 Move X3, [X9+88]
	174 Move X4, [X9+96]
	175 Call XRInputManager.GetButtonEvent, X0, X1, X2, X3, X4
	176 Move X8, [X20]
	177 Move X9, [X21]
	178 Move X0, X19
	179 Move W1, W31
	180 Move X8, [X8+184]
	181 Move X9, [X9+184]
	182 Move X2, [X8+24]
	183 Move X3, [X9+200]
	184 Move X4, [X9+208]
	185 Call XRInputManager.GetButtonEvent, X0, X1, X2, X3, X4
	186 Move X8, [X20]
	187 Move X9, [X21]
	188 Move W1, 1
	189 Move X0, X19
	190 Move X8, [X8+184]
	191 Move X9, [X9+184]
	192 Move X2, [X8+24]
	193 Move X3, [X9+216]
	194 Move X4, [X9+224]
	195 Call XRInputManager.GetButtonEvent, X0, X1, X2, X3, X4
	196 Move X8, [X20]
	197 Move X9, [X21]
	198 Move X0, X19
	199 Move W1, W31
	200 Move X8, [X8+184]
	201 Move X9, [X9+184]
	202 Move X2, [X8+32]
	203 Move X3, [X9+232]
	204 Move X4, [X9+240]
	205 Call XRInputManager.GetButtonEvent, X0, X1, X2, X3, X4
	206 Move X8, [X20]
	207 Move X9, [X21]
	208 Move W1, 1
	209 Move X0, X19
	210 Move X8, [X8+184]
	211 Move X9, [X9+184]
	212 Move X2, [X8+32]
	213 Move X3, [X9+248]
	214 Move X4, [X9+256]
	215 Call XRInputManager.GetButtonEvent, X0, X1, X2, X3, X4
	216 Move X8, [X20]
	217 Move X9, [X21]
	218 Move X0, X19
	219 Move W1, W31
	220 Move X8, [X8+184]
	221 Move X9, [X9+184]
	222 Move X2, [X8+64]
	223 Move X3, [X9+264]
	224 Move X4, [X9+272]
	225 Call XRInputManager.GetButtonEvent, X0, X1, X2, X3, X4
	226 Move X8, [X20]
	227 Move X9, [X21]
	228 Move W1, 1
	229 Move X0, X19
	230 Move X8, [X8+184]
	231 Move X9, [X9+184]
	232 Move X2, [X8+64]
	233 Move X3, [X9+280]
	234 Move X4, [X9+288]
	235 Call XRInputManager.GetButtonEvent, X0, X1, X2, X3, X4
	236 Move X8, [X20]
	237 Move X9, [X21]
	238 Move X0, X19
	239 Move W1, W31
	240 Move X8, [X8+184]
	241 Move X9, [X9+184]
	242 Move X2, [X8+72]
	243 Move X3, [X9+296]
	244 Move X4, [X9+304]
	245 Call XRInputManager.GetButtonEvent, X0, X1, X2, X3, X4
	246 Move X8, [X20]
	247 Move X9, [X21]
	248 Move W1, 1
	249 Move X0, X19
	250 Move X8, [X8+184]
	251 Move X9, [X9+184]
	252 Move X2, [X8+72]
	253 Move X3, [X9+312]
	254 Move X4, [X9+320]
	255 Call XRInputManager.GetButtonEvent, X0, X1, X2, X3, X4
	256 Move X8, [X20]
	257 Move X9, [X21]
	258 Move X0, X19
	259 Move X20, [X31+32]
	260 Move X19, [X31+40]
	261 Move X8, [X8+184]
	262 Move X9, [X9+184]
	263 Move X22, [X31+16]
	264 Move X21, [X31+24]
	265 Move W1, W31
	266 Move X2, [X8+56]
	267 Move X3, [X9+328]
	268 Move X4, [X9+336]
	269 Move X30, [X31+48]
	270 Call XRInputManager.GetButtonEvent, X0, X1, X2, X3, X4
	271 Return 

Method: System.Void GetButtonEvent(AnimalCompany.HandSide side, UnityEngine.XR.InputFeatureUsage`1<System.Boolean> inputFeatureUsage, System.Action onPressed, System.Action onReleased)

Disassembly:
	0x01DD09B4 LDR W8, [X19 + 0x18]
	0x01DD09B8 CMP W0, W8
	0x01DD09BC B.CS 0x1DD09E0
	0x01DD09C0 SXTW X8, W0
	0x01DD09C4 ADD X8, X19, X8, 0x3, LSL
	0x01DD09C8 LDR X0, [X8 + 0x20]
	0x01DD09CC B 0x1DD09D4
	0x01DD09D0 MOV X0, X31
	0x01DD09D4 LDP X30, X19, [X31], #0x10
	0x01DD09D8 RET
	0x01DD09DC BL 0x1C16F20
	0x01DD09E0 BL 0x1C16F28
	0x01DD09E4 STR X30, [X31 - 0x30]!
	0x01DD09E8 STP X22, X21, [X31 + 0x10]
	0x01DD09EC STP X20, X19, [X31 + 0x20]
	0x01DD09F0 ADRP X21, 0x2608000
	0x01DD09F4 ADRP X22, 0x2328000
	0x01DD09F8 ADRP X20, 0x2328000
	0x01DD09FC LDRB W8, [X21 + 0xBF2]
	0x01DD0A00 LDR X22, [X22 + 0x580]
	0x01DD0A04 LDR X20, [X20 + 0x588]
	0x01DD0A08 MOV X19, X0
	0x01DD0A0C TBNZ X8, 0x0, 0x1DD0A30
	0x01DD0A10 ADRP X0, 0x2328000
	0x01DD0A14 LDR X0, [X0 + 0x588]
	0x01DD0A18 BL 0x1C16CF4
	0x01DD0A1C ADRP X0, 0x2328000
	0x01DD0A20 LDR X0, [X0 + 0x580]
	0x01DD0A24 BL 0x1C16CF4
	0x01DD0A28 MOVZ W8, 0x1
	0x01DD0A2C STRB W8, [X21 + 0xBF2]
	0x01DD0A30 LDR X0, [X22]
	0x01DD0A34 BL 0x1C16F10
	0x01DD0A38 LDR X1, [X20]
	0x01DD0A3C MOV X20, X0
	0x01DD0A40 BL 0x301B7C4
	0x01DD0A44 STR X20, [X19 + 0x48]
	0x01DD0A48 MOV X0, X19
	0x01DD0A4C LDP X20, X19, [X31 + 0x20]
	0x01DD0A50 LDP X22, X21, [X31 + 0x10]
	0x01DD0A54 MOV X1, X31
	0x01DD0A58 LDR X30, [X31], #0x30
	0x01DD0A5C B 0x1E74F1C
	0x01DD0A60 STR X30, [X31 - 0x30]!
	0x01DD0A64 STP X22, X21, [X31 + 0x10]
	0x01DD0A68 STP X20, X19, [X31 + 0x20]
	0x01DD0A6C ADRP X21, 0x2608000
	0x01DD0A70 ADRP X22, 0x2328000
	0x01DD0A74 ADRP X19, 0x2328000
	0x01DD0A78 ADRP X20, 0x2328000
	0x01DD0A7C LDRB W8, [X21 + 0xBF3]
	0x01DD0A80 LDR X22, [X22 + 0x590]
	0x01DD0A84 LDR X19, [X19 + 0x598]
	0x01DD0A88 LDR X20, [X20 + 0xD0]
	0x01DD0A8C TBNZ X8, 0x0, 0x1DD0ABC
	0x01DD0A90 ADRP X0, 0x2328000
	0x01DD0A94 LDR X0, [X0 + 0x598]
	0x01DD0A98 BL 0x1C16CF4
	0x01DD0A9C ADRP X0, 0x2328000
	0x01DD0AA0 LDR X0, [X0 + 0x590]
	0x01DD0AA4 BL 0x1C16CF4
	0x01DD0AA8 ADRP X0, 0x2328000
	0x01DD0AAC LDR X0, [X0 + 0xD0]
	0x01DD0AB0 BL 0x1C16CF4
	0x01DD0AB4 MOVZ W8, 0x1
	0x01DD0AB8 STRB W8, [X21 + 0xBF3]
	0x01DD0ABC LDR X0, [X22]
	0x01DD0AC0 BL 0x1C16F10
	0x01DD0AC4 LDR X1, [X19]
	0x01DD0AC8 MOV X19, X0
	0x01DD0ACC BL 0x2A44560
	0x01DD0AD0 LDR X8, [X20]
	0x01DD0AD4 LDP X22, X21, [X31 + 0x10]
	0x01DD0AD8 LDR X8, [X8 + 0xB8]
	0x01DD0ADC STR X19, [X8]
	0x01DD0AE0 LDP X20, X19, [X31 + 0x20]
	0x01DD0AE4 LDR X30, [X31], #0x30
	0x01DD0AE8 RET
	0x01DD0AEC STR D14, [X31 - 0x60]!
	0x01DD0AF0 STP D13, D12, [X31 + 0x8]
	0x01DD0AF4 STP D11, D10, [X31 + 0x18]
	0x01DD0AF8 STP D9, D8, [X31 + 0x28]
	0x01DD0AFC STR X30, [X31 + 0x38]
	0x01DD0B00 STP X22, X21, [X31 + 0x40]
	0x01DD0B04 STP X20, X19, [X31 + 0x50]
	0x01DD0B08 ADRP X20, 0x2608000
	0x01DD0B0C ADRP X22, 0x2326000
	0x01DD0B10 LDRB W8, [X20 + 0xBF4]
	0x01DD0B14 LDR X22, [X22 + 0xA78]
	0x01DD0B18 MOV X21, X1
	0x01DD0B1C MOV X19, X0
	0x01DD0B20 TBNZ X8, 0x0, 0x1DD0B44
	0x01DD0B24 ADRP X0, 0x2326000
	0x01DD0B28 LDR X0, [X0 + 0xA78]
	0x01DD0B2C BL 0x1C16CF4
	0x01DD0B30 ADRP X0, 0x2328000
	0x01DD0B34 LDR X0, [X0 + 0xD0]
	0x01DD0B38 BL 0x1C16CF4
	0x01DD0B3C MOVZ W8, 0x1
	0x01DD0B40 STRB W8, [X20 + 0xBF4]
	0x01DD0B44 LDR X0, [X22]
	0x01DD0B48 LDR W20, [X21 + 0x24]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X24, 0x2609000
	010 Move W8, [X24+3043]
	011 Move X19, X4
	012 Move X20, X3
	013 Move X21, X2
	014 Move W22, W1
	015 Move X23, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x2329000
	021 Move X0, [X0+1184]
	022 Call 0x1C17CF4
	023 Move X0, 0x2329000
	024 Move X0, [X0+1192]
	025 Call 0x1C17CF4
	026 Move X0, 0x2329000
	027 Move X0, [X0+1200]
	028 Call 0x1C17CF4
	029 Move X0, 0x2329000
	030 Move X0, [X0+1208]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X24+3043], W8
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W8, 56
	036 Move W9, 48
	037 Move [X31+28], W31
	038 NotImplemented "Instruction CSEL not yet implemented."
	039 Move X22, [X23]
	040 Move W8, 40
	041 Move W9, 32
	042 NotImplemented "Instruction CSEL not yet implemented."
	043 Compare X22, 0
	044 JumpIfEqual {120}
	045 Move X9, 0x2329000
	046 Move X9, [X9+1192]
	047 Move X23, [X23]
	048 Move X0, X22
	049 Move X1, X21
	050 Move X2, [X9]
	051 Call 0x29BB514, X0, X1
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {63}
	056 Move X8, 0x2329000
	057 Move X8, [X8+1184]
	058 Move X0, X22
	059 Move X1, X21
	060 Move W2, W31
	061 Move X3, [X8]
	062 Call 0x29BB30C, X0, X1, X2
	063 Compare X23, 0
	064 JumpIfEqual {120}
	065 Move X24, 0x2329000
	066 Move X24, [X24+1200]
	067 Move X0, X23
	068 Move X1, X31
	069 Call XRController.get_inputDevice, X0
	070 Move [X31], X0
	071 Move [X31+8], X1
	072 Add X0, X31, 0
	073 Add X2, X31, 28
	074 Move X1, X21
	075 Move X3, X31
	076 Call InputDevice.TryGetFeatureValue, X0, X1, X2
	077 Move X2, [X24]
	078 Move X0, X22
	079 Move X1, X21
	080 Call 0x29BB260, X0, X1
	081 Move W8, [X31+28]
	082 And W9, W0, 1
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X9, 0x2329000
	085 Move X9, [X9+1208]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 NotImplemented "Instruction CSET not yet implemented."
	088 Move X0, X22
	089 Move X3, [X9]
	090 Move X1, X21
	091 Call 0x29BB2F4, X0, X1, X2
	092 Move X2, [X24]
	093 Move X0, X22
	094 Move X1, X21
	095 Call 0x29BB260, X0, X1
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {105}
	100 Compare X20, 0
	101 JumpIfEqual {111}
	102 Move X8, [X20+24]
	103 Move X0, [X20+64]
	104 Move X1, [X20+40]
	105 Compare X19, 0
	106 JumpIfEqual {111}
	107 Move X8, [X19+24]
	108 Move X0, [X19+64]
	109 Move X1, [X19+40]
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Move X20, [X31+64]
	112 Move X19, [X31+72]
	113 Move X22, [X31+48]
	114 Move X21, [X31+56]
	115 Move X24, [X31+32]
	116 Move X23, [X31+40]
	117 Move X30, [X31+16]
	118 Add X31, X31, 80
	119 Return 
	120 Call 0x1C17F20

Method: System.Void GetButtonValue(AnimalCompany.HandSide side, UnityEngine.XR.InputFeatureUsage`1<System.Single> inputFeatureUsage, System.Action`1<System.Single> onValueChanged)

Disassembly:
	0x01DD0854 LDR X0, [X0 + 0x570]
	0x01DD0858 BL 0x1C16CF4
	0x01DD085C ADRP X0, 0x2328000
	0x01DD0860 LDR X0, [X0 + 0x578]
	0x01DD0864 BL 0x1C16CF4
	0x01DD0868 MOVZ W8, 0x1
	0x01DD086C STRB W8, [X20 + 0xBF1]
	0x01DD0870 LDR X0, [X21]
	0x01DD0874 LDR W8, [X0 + 0xE0]
	0x01DD0878 CBNZ W8, 0x1DD0884
	0x01DD087C BL 0x1C16DFC
	0x01DD0880 LDR X0, [X21]
	0x01DD0884 LDR X8, [X0 + 0xB8]
	0x01DD0888 LDR X0, [X8]
	0x01DD088C CBZ X0, 0x1DD0984
	0x01DD0890 ADRP X8, 0x2328000
	0x01DD0894 LDR X8, [X8 + 0x558]
	0x01DD0898 MOV W1, W19
	0x01DD089C LDR X2, [X8]
	0x01DD08A0 BL 0x2A4500C
	0x01DD08A4 TBNZ X0, 0x0, 0x1DD0938
	0x01DD08A8 ADRP X8, 0x2328000
	0x01DD08AC LDR X8, [X8 + 0x568]
	0x01DD08B0 MOVN X9, 0x0
	0x01DD08B4 ADD X0, X31, 0x8
	0x01DD08B8 MOV X1, X31
	0x01DD08BC LDR X8, [X8]
	0x01DD08C0 STR W19, [X31 + 0x18]
	0x01DD08C4 STP X8, X9, [X31 + 0x8]
	0x01DD08C8 BL 0x33B162C
	0x01DD08CC ADRP X8, 0x2328000
	0x01DD08D0 LDR X8, [X8 + 0x578]
	0x01DD08D4 MOV X1, X0
	0x01DD08D8 MOV X2, X31
	0x01DD08DC LDR X8, [X8]
	0x01DD08E0 MOV X0, X8
	0x01DD08E4 BL 0x321B938
	0x01DD08E8 ADRP X8, 0x2328000
	0x01DD08EC LDR X8, [X8 + 0x570]
	0x01DD08F0 LDR X1, [X8]
	0x01DD08F4 BL 0x2241FB8
	0x01DD08F8 LDR X8, [X21]
	0x01DD08FC MOV X20, X0
	0x01DD0900 LDR W9, [X8 + 0xE0]
	0x01DD0904 CBNZ W9, 0x1DD0914
	0x01DD0908 MOV X0, X8
	0x01DD090C BL 0x1C16DFC
	0x01DD0910 LDR X8, [X21]
	0x01DD0914 LDR X8, [X8 + 0xB8]
	0x01DD0918 LDR X0, [X8]
	0x01DD091C CBZ X0, 0x1DD0984
	0x01DD0920 ADRP X8, 0x2328000
	0x01DD0924 LDR X8, [X8 + 0x550]
	0x01DD0928 MOV W1, W19
	0x01DD092C MOV X2, X20
	0x01DD0930 LDR X3, [X8]
	0x01DD0934 BL 0x2A44E18
	0x01DD0938 LDR X0, [X21]
	0x01DD093C LDR W8, [X0 + 0xE0]
	0x01DD0940 CBNZ W8, 0x1DD094C
	0x01DD0944 BL 0x1C16DFC
	0x01DD0948 LDR X0, [X21]
	0x01DD094C LDR X8, [X0 + 0xB8]
	0x01DD0950 LDR X0, [X8]
	0x01DD0954 CBZ X0, 0x1DD0984
	0x01DD0958 ADRP X8, 0x2328000
	0x01DD095C LDR X8, [X8 + 0x560]
	0x01DD0960 MOV W1, W19
	0x01DD0964 LDR X2, [X8]
	0x01DD0968 BL 0x2A44D78
	0x01DD096C CBZ X0, 0x1DD0984
	0x01DD0970 BL 0x1DD0988
	0x01DD0974 LDP X20, X19, [X31 + 0x30]
	0x01DD0978 LDP X30, X21, [X31 + 0x20]
	0x01DD097C ADD X31, X31, 0x40
	0x01DD0980 RET
	0x01DD0984 BL 0x1C16F20
	0x01DD0988 STP X30, X19, [X31 - 0x10]!
	0x01DD098C LDR X19, [X0 + 0x18]
	0x01DD0990 CBZ X19, 0x1DD09DC
	0x01DD0994 LDR W1, [X19 + 0x18]
	0x01DD0998 CBZ W1, 0x1DD09D0
	0x01DD099C CMP W1, 0x1
	0x01DD09A0 MOV X8, X31
	0x01DD09A4 B.EQ 0x1DD09C4
	0x01DD09A8 MOV W0, W31
	0x01DD09AC MOV X2, X31
	0x01DD09B0 BL 0x3C309A8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X23, 0x2609000
	009 Move W8, [X23+3044]
	010 Move X19, X3
	011 Move X20, X2
	012 Move W21, W1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x2329000
	019 Move X0, [X0+1152]
	020 Call 0x1C17CF4
	021 Move X0, 0x2329000
	022 Move X0, [X0+1160]
	023 Call 0x1C17CF4
	024 Move X0, 0x2329000
	025 Move X0, [X0+1168]
	026 Call 0x1C17CF4
	027 Move X0, 0x2329000
	028 Move X0, [X0+1176]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X23+3044], W8
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W8, 72
	034 Move W9, 64
	035 Move [X31+28], W31
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Move X21, [X22]
	038 Move W8, 40
	039 Move W9, 32
	040 NotImplemented "Instruction CSEL not yet implemented."
	041 Compare X21, 0
	042 JumpIfEqual {103}
	043 Move X9, 0x2329000
	044 Move X9, [X9+1160]
	045 Move X22, [X22]
	046 Move X0, X21
	047 Move X1, X20
	048 Move X2, [X9]
	049 Call Dictionary`2<InputFeatureUsage`1<Single>, Single>.ContainsKey, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {61}
	054 Move X8, 0x2329000
	055 Move X8, [X8+1152]
	056 Move S0, W31
	057 Move X0, X21
	058 Move X1, X20
	059 Move X2, [X8]
	060 Call Dictionary`2<InputFeatureUsage`1<Single>, Single>.Add, X0, X1, V0
	061 Compare X22, 0
	062 JumpIfEqual {103}
	063 Move X23, 0x2329000
	064 Move X23, [X23+1168]
	065 Move X0, X22
	066 Move X1, X31
	067 Call XRController.get_inputDevice, X0
	068 Move [X31+8], X0
	069 Move [X31+16], X1
	070 Add X0, X31, 8
	071 Add X2, X31, 28
	072 Move X1, X20
	073 Move X3, X31
	074 Call InputDevice.TryGetFeatureValue, X0, X1, X2
	075 Move X2, [X23]
	076 Move X0, X21
	077 Move X1, X20
	078 Call Dictionary`2<InputFeatureUsage`1<Single>, Single>.get_Item, X0, X1
	079 Move V1, [X31+28]
	080 NotImplemented "Instruction FCMP not yet implemented."
	081 Move X8, 0x2329000
	082 Move X8, [X8+1176]
	083 Move X0, X21
	084 Move X1, X20
	085 Move V0, V1
	086 Move X2, [X8]
	087 Call Dictionary`2<InputFeatureUsage`1<Single>, Single>.set_Item, X0, X1, V0
	088 Compare X19, 0
	089 JumpIfEqual {95}
	090 Move V0, [X31+28]
	091 Move X8, [X19+24]
	092 Move X0, [X19+64]
	093 Move X1, [X19+40]
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Move X20, [X31+64]
	096 Move X19, [X31+72]
	097 Move X22, [X31+48]
	098 Move X21, [X31+56]
	099 Move X30, [X31+32]
	100 Move X23, [X31+40]
	101 Add X31, X31, 80
	102 Return 
	103 Call 0x1C17F20

Method: System.Boolean GetJoystickValue(AnimalCompany.HandSide side, out UnityEngine.Vector2 value)

Disassembly:
	0x01DC5224 ADRP X0, 0x2333000
	0x01DC5228 LDR X0, [X0 + 0x1C0]
	0x01DC522C BL 0x1C16CF4
	0x01DC5230 ADRP X0, 0x2333000
	0x01DC5234 LDR X0, [X0 + 0x1C8]
	0x01DC5238 BL 0x1C16CF4
	0x01DC523C ADRP X0, 0x2333000
	0x01DC5240 LDR X0, [X0 + 0x1D0]
	0x01DC5244 BL 0x1C16CF4
	0x01DC5248 ADRP X0, 0x2333000
	0x01DC524C LDR X0, [X0 + 0x1D8]
	0x01DC5250 BL 0x1C16CF4
	0x01DC5254 ADRP X0, 0x2333000
	0x01DC5258 LDR X0, [X0 + 0x1E0]
	0x01DC525C BL 0x1C16CF4
	0x01DC5260 ADRP X0, 0x2333000
	0x01DC5264 LDR X0, [X0 + 0x1E8]
	0x01DC5268 BL 0x1C16CF4
	0x01DC526C ADRP X0, 0x2333000
	0x01DC5270 LDR X0, [X0 + 0x1F0]
	0x01DC5274 BL 0x1C16CF4
	0x01DC5278 ADRP X0, 0x2333000
	0x01DC527C LDR X0, [X0 + 0x1F8]
	0x01DC5280 BL 0x1C16CF4
	0x01DC5284 ADRP X0, 0x2333000
	0x01DC5288 LDR X0, [X0 + 0x200]
	0x01DC528C BL 0x1C16CF4
	0x01DC5290 ADRP X0, 0x2331000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2614000
	007 Move X21, 0x2334000
	008 Move W8, [X22+3045]
	009 Move X21, [X21+344]
	010 Move X19, X1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2334000
	017 Move X0, [X0+344]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3045], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X21]
	027 Move X8, [X0+184]
	028 Move W0, W20
	029 Move X2, X19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X1, [X8+136]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X30, [X31+48]
	036 Call XRInputManager.TryGetFeatureValue, X0, X1, X2
	037 Return X0

Method: System.Boolean TryGetFeatureValue(AnimalCompany.HandSide side, UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector2> inputFeatureUsage, out UnityEngine.Vector2 value)

Disassembly:
	0x01DD0B4C LDP S8, S9, [X21 + 0x28]
	0x01DD0B50 LDP S14, S13, [X21 + 0x30]
	0x01DD0B54 LDP S11, S10, [X21 + 0x38]
	0x01DD0B58 LDR V12, [X21 + 0x40]
	0x01DD0B5C ADRP X21, 0x2328000
	0x01DD0B60 LDR W8, [X0 + 0xE0]
	0x01DD0B64 LDR X21, [X21 + 0xD0]
	0x01DD0B68 CBNZ W8, 0x1DD0B74
	0x01DD0B6C BL 0x1C16DFC
	0x01DD0B70 LDR X0, [X22]
	0x01DD0B74 LDR X8, [X0 + 0xB8]
	0x01DD0B78 MOVZ W9, 0x1
	0x01DD0B7C STRB W9, [X8 + 0x20]
	0x01DD0B80 LDR X0, [X21]
	0x01DD0B84 LDR W8, [X0 + 0xE0]
	0x01DD0B88 CBNZ W8, 0x1DD0B90
	0x01DD0B8C BL 0x1C16DFC
	0x01DD0B90 MOV X0, X19
	0x01DD0B94 MOV W1, W20
	0x01DD0B98 MOV V0.16B, V8.16B
	0x01DD0B9C MOV V1.16B, V9.16B

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X19, X2
	006 Move X20, X1
	007 Call XRInputManager.GetXRController, X0
	008 Compare X0, 0
	009 JumpIfEqual {25}
	010 Move X1, X31
	011 Call XRController.get_inputDevice, X0
	012 Move [X31], X0
	013 Move [X31+8], X1
	014 Add X0, X31, 0
	015 Move X1, X20
	016 Move X2, X19
	017 Move X3, X31
	018 Call InputDevice.TryGetFeatureValue, X0, X1, X2
	019 Move X20, [X31+32]
	020 Move X19, [X31+40]
	021 Move X30, [X31+16]
	022 And W0, W0, 1
	023 Add X31, X31, 48
	024 Return X0
	025 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01DD0BA0 MOV V3.16B, V13.16B
	0x01DD0BA4 MOV V4.16B, V11.16B
	0x01DD0BA8 MOV V5.16B, V10.16B
	0x01DD0BAC MOV V6.16B, V12.16B
	0x01DD0BB0 LDP X20, X19, [X31 + 0x50]
	0x01DD0BB4 LDP X22, X21, [X31 + 0x40]
	0x01DD0BB8 LDR X30, [X31 + 0x38]
	0x01DD0BBC LDP D9, D8, [X31 + 0x28]
	0x01DD0BC0 LDP D11, D10, [X31 + 0x18]
	0x01DD0BC4 LDP D13, D12, [X31 + 0x8]
	0x01DD0BC8 MOV V2.16B, V14.16B
	0x01DD0BCC LDR V14, [X31], #0x60
	0x01DD0BD0 B 0x1DD02CC
	0x01DD0BD4 STR X30, [X31 - 0x20]!
	0x01DD0BD8 STP X20, X19, [X31 + 0x10]
	0x01DD0BDC ADRP X19, 0x2608000
	0x01DD0BE0 ADRP X20, 0x2328000
	0x01DD0BE4 LDRB W8, [X19 + 0xBF5]
	0x01DD0BE8 LDR X20, [X20 + 0x548]
	0x01DD0BEC TBNZ X8, 0x0, 0x1DD0C04
	0x01DD0BF0 ADRP X0, 0x2328000
	0x01DD0BF4 LDR X0, [X0 + 0x548]
	0x01DD0BF8 BL 0x1C16CF4
	0x01DD0BFC MOVZ W8, 0x1
	0x01DD0C00 STRB W8, [X19 + 0xBF5]
	0x01DD0C04 LDR X0, [X20]
	0x01DD0C08 BL 0x1C16F10
	0x01DD0C0C MOV X1, X31
	0x01DD0C10 MOV X19, X0
	0x01DD0C14 BL 0x33BDD8C
	0x01DD0C18 LDR X8, [X20]
	0x01DD0C1C LDR X8, [X8 + 0xB8]
	0x01DD0C20 STR X19, [X8]
	0x01DD0C24 LDP X20, X19, [X31 + 0x10]
	0x01DD0C28 LDR X30, [X31], #0x20
	0x01DD0C2C RET
	0x01DD0C30 MOV X1, X31
	0x01DD0C34 B 0x33BDD8C
	0x01DD0C38 STP X30, X21, [X31 - 0x20]!
	0x01DD0C3C STP X20, X19, [X31 + 0x10]
	0x01DD0C40 ADRP X20, 0x2608000
	0x01DD0C44 ADRP X21, 0x2328000
	0x01DD0C48 LDRB W8, [X20 + 0xBF6]
	0x01DD0C4C LDR X21, [X21 + 0xD0]
	0x01DD0C50 MOV X19, X2
	0x01DD0C54 TBNZ X8, 0x0, 0x1DD0C84
	0x01DD0C58 ADRP X0, 0x2328000
	0x01DD0C5C LDR X0, [X0 + 0x5A0]
	0x01DD0C60 BL 0x1C16CF4
	0x01DD0C64 ADRP X0, 0x2323000
	0x01DD0C68 LDR X0, [X0 + 0x598]
	0x01DD0C6C BL 0x1C16CF4
	0x01DD0C70 ADRP X0, 0x2328000
	0x01DD0C74 LDR X0, [X0 + 0xD0]
	0x01DD0C78 BL 0x1C16CF4
	0x01DD0C7C MOVZ W8, 0x1
	0x01DD0C80 STRB W8, [X20 + 0xBF6]
	0x01DD0C84 LDR X0, [X21]
	0x01DD0C88 ADRP X20, 0x2323000
	0x01DD0C8C LDR W8, [X0 + 0xE0]
	0x01DD0C90 LDR X20, [X20 + 0x598]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x2609000
	009 Move X24, 0x2329000
	010 Move X23, 0x2329000
	011 Move X22, 0x2329000
	012 Move X21, 0x2329000
	013 Move W8, [X20+3046]
	014 Move X24, [X24+1216]
	015 Move X23, [X23+1224]
	016 Move X22, [X22+1232]
	017 Move X21, [X21+1240]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x2329000
	024 Move X0, [X0+1240]
	025 Call 0x1C17CF4
	026 Move X0, 0x2329000
	027 Move X0, [X0+1224]
	028 Call 0x1C17CF4
	029 Move X0, 0x2329000
	030 Move X0, [X0+1232]
	031 Call 0x1C17CF4
	032 Move X0, 0x2329000
	033 Move X0, [X0+1216]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+3046], W8
	037 Move X0, [X24]
	038 Call 0x1C17F10
	039 Move X1, [X23]
	040 Move X20, X0
	041 Call 0x29BAA48, X0
	042 Move [X19+48], X20
	043 Move X0, [X24]
	044 Call 0x1C17F10
	045 Move X1, [X23]
	046 Move X20, X0
	047 Call 0x29BAA48, X0
	048 Move [X19+56], X20
	049 Move X0, [X22]
	050 Call 0x1C17F10
	051 Move X1, [X21]
	052 Move X20, X0
	053 Call Dictionary`2<InputFeatureUsage`1<Single>, Single>..ctor, X0
	054 Move [X19+64], X20
	055 Move X0, [X22]
	056 Call 0x1C17F10
	057 Move X1, [X21]
	058 Move X20, X0
	059 Call Dictionary`2<InputFeatureUsage`1<Single>, Single>..ctor, X0
	060 Move [X19+72], X20
	061 Move X0, X19
	062 Move X20, [X31+48]
	063 Move X19, [X31+56]
	064 Move X22, [X31+32]
	065 Move X21, [X31+40]
	066 Move X24, [X31+16]
	067 Move X23, [X31+24]
	068 Move X1, X31
	069 Move X30, [X31+64]
	070 Call MonoBehaviour..ctor, X0
	071 Return 

