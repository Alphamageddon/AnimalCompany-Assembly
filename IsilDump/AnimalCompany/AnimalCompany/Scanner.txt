Type: AnimalCompany.Scanner

Method: System.Boolean get_isOn()

Disassembly:
	0x01DA3CAC STP X30, X19, [X31 - 0x10]!
	0x01DA3CB0 LDR X8, [X0 + 0x50]
	0x01DA3CB4 CBZ X8, 0x1DA3CC4
	0x01DA3CB8 LDR W0, [X8 + 0x4]
	0x01DA3CBC LDP X30, X19, [X31], #0x10
	0x01DA3CC0 RET
	0x01DA3CC4 ADRP X0, 0x2350000
	0x01DA3CC8 LDR X0, [X0 + 0x5B0]
	0x01DA3CCC BL 0x1C16D08
	0x01DA3CD0 BL 0x1C16F10
	0x01DA3CD4 MOV X19, X0
	0x01DA3CD8 ADRP X0, 0x2354000
	0x01DA3CDC LDR X0, [X0 + 0x310]
	0x01DA3CE0 BL 0x1C16D08
	0x01DA3CE4 MOV X1, X0
	0x01DA3CE8 MOV X0, X19
	0x01DA3CEC MOV X2, X31
	0x01DA3CF0 BL 0x337DF1C
	0x01DA3CF4 ADRP X0, 0x2354000
	0x01DA3CF8 LDR X0, [X0 + 0x318]
	0x01DA3CFC BL 0x1C16D08
	0x01DA3D00 MOV X1, X0
	0x01DA3D04 MOV X0, X19
	0x01DA3D08 BL 0x1C16DEC
	0x01DA3D0C STP X30, X19, [X31 - 0x10]!
	0x01DA3D10 LDR X8, [X0 + 0x50]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {12}
	006 Move W8, [X8]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return X0
	012 Move X0, 0x2351000
	013 Move X0, [X0+1456]
	014 Call 0x1C17D08
	015 Call 0x1C17F10
	016 Move X19, X0
	017 Move X0, 0x2355000
	018 Move X0, [X0+664]
	019 Call 0x1C17D08
	020 Move X1, X0
	021 Move X0, X19
	022 Move X2, X31
	023 Call InvalidOperationException..ctor, X0, X1
	024 Move X0, 0x2355000
	025 Move X0, [X0+672]
	026 Call 0x1C17D08
	027 Move X1, X0
	028 Move X0, X19
	029 Call 0x1C17DEC

Method: System.Void set_isOn(System.Boolean value)

Disassembly:
	0x01DA3D14 CBZ X8, 0x1DA3D24
	0x01DA3D18 STR W1, [X8 + 0x4]
	0x01DA3D1C LDP X30, X19, [X31], #0x10
	0x01DA3D20 RET
	0x01DA3D24 ADRP X0, 0x2350000
	0x01DA3D28 LDR X0, [X0 + 0x5B0]
	0x01DA3D2C BL 0x1C16D08
	0x01DA3D30 BL 0x1C16F10
	0x01DA3D34 MOV X19, X0
	0x01DA3D38 ADRP X0, 0x2354000
	0x01DA3D3C LDR X0, [X0 + 0x310]
	0x01DA3D40 BL 0x1C16D08
	0x01DA3D44 MOV X1, X0
	0x01DA3D48 MOV X0, X19
	0x01DA3D4C MOV X2, X31
	0x01DA3D50 BL 0x337DF1C
	0x01DA3D54 ADRP X0, 0x2354000
	0x01DA3D58 LDR X0, [X0 + 0x320]
	0x01DA3D5C BL 0x1C16D08
	0x01DA3D60 MOV X1, X0
	0x01DA3D64 MOV X0, X19
	0x01DA3D68 BL 0x1C16DEC
	0x01DA3D6C STP X30, X23, [X31 - 0x30]!
	0x01DA3D70 STP X22, X21, [X31 + 0x10]
	0x01DA3D74 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {11}
	006 And W9, W1, 1
	007 Move [X8], W9
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return 
	011 Move X0, 0x2351000
	012 Move X0, [X0+1456]
	013 Call 0x1C17D08
	014 Call 0x1C17F10
	015 Move X19, X0
	016 Move X0, 0x2355000
	017 Move X0, [X0+664]
	018 Call 0x1C17D08
	019 Move X1, X0
	020 Move X0, X19
	021 Move X2, X31
	022 Call InvalidOperationException..ctor, X0, X1
	023 Move X0, 0x2355000
	024 Move X0, [X0+680]
	025 Call 0x1C17D08
	026 Move X1, X0
	027 Move X0, X19
	028 Call 0x1C17DEC

Method: System.Void Awake()

Disassembly:
	0x01DA3D78 ADRP X20, 0x2635000
	0x01DA3D7C ADRP X21, 0x2353000
	0x01DA3D80 LDRB W8, [X20 + 0xA85]
	0x01DA3D84 LDR X21, [X21 + 0xB98]
	0x01DA3D88 MOV X19, X0
	0x01DA3D8C TBNZ X8, 0x0, 0x1DA3DC8
	0x01DA3D90 ADRP X0, 0x2351000
	0x01DA3D94 LDR X0, [X0 + 0xE70]
	0x01DA3D98 BL 0x1C16CF4
	0x01DA3D9C ADRP X0, 0x2353000
	0x01DA3DA0 LDR X0, [X0 + 0xB98]
	0x01DA3DA4 BL 0x1C16CF4
	0x01DA3DA8 ADRP X0, 0x2354000
	0x01DA3DAC LDR X0, [X0 + 0x328]
	0x01DA3DB0 BL 0x1C16CF4
	0x01DA3DB4 ADRP X0, 0x2354000
	0x01DA3DB8 LDR X0, [X0 + 0x330]
	0x01DA3DBC BL 0x1C16CF4
	0x01DA3DC0 MOVZ W8, 0x1
	0x01DA3DC4 STRB W8, [X20 + 0xA85]
	0x01DA3DC8 LDR X1, [X21]
	0x01DA3DCC MOV X0, X19
	0x01DA3DD0 BL 0x21A3894
	0x01DA3DD4 LDR X23, [X19 + 0x80]
	0x01DA3DD8 STR X0, [X19 + 0xD0]
	0x01DA3DDC CBZ X23, 0x1DA3EC8
	0x01DA3DE0 ADRP X22, 0x2351000
	0x01DA3DE4 LDR X22, [X22 + 0xE70]
	0x01DA3DE8 ADRP X21, 0x2354000
	0x01DA3DEC LDR X20, [X23 + 0x1D8]
	0x01DA3DF0 LDR X0, [X22]
	0x01DA3DF4 LDR X21, [X21 + 0x330]
	0x01DA3DF8 BL 0x1C16F10
	0x01DA3DFC LDR X2, [X21]
	0x01DA3E00 MOV X1, X19
	0x01DA3E04 MOV X3, X31
	0x01DA3E08 MOV X21, X0
	0x01DA3E0C BL 0x3314368
	0x01DA3E10 MOV X0, X20
	0x01DA3E14 MOV X1, X21
	0x01DA3E18 MOV X2, X31
	0x01DA3E1C BL 0x33C0DE4
	0x01DA3E20 LDR X1, [X22]
	0x01DA3E24 CBZ X0, 0x1DA3E48
	0x01DA3E28 LDR X8, [X0]
	0x01DA3E2C CMP X8, X1
	0x01DA3E30 B.NE 0x1DA3EB0
	0x01DA3E34 STR X0, [X23 + 0x1D8]
	0x01DA3E38 LDR X8, [X0]
	0x01DA3E3C CMP X8, X1
	0x01DA3E40 B.EQ 0x1DA3E4C
	0x01DA3E44 B 0x1DA3EB0
	0x01DA3E48 STR X0, [X23 + 0x1D8]
	0x01DA3E4C LDR X23, [X19 + 0x80]
	0x01DA3E50 CBZ X23, 0x1DA3EC8
	0x01DA3E54 ADRP X21, 0x2354000
	0x01DA3E58 LDR X20, [X23 + 0x1E0]
	0x01DA3E5C LDR X21, [X21 + 0x328]
	0x01DA3E60 MOV X0, X1
	0x01DA3E64 BL 0x1C16F10
	0x01DA3E68 LDR X2, [X21]
	0x01DA3E6C MOV X1, X19
	0x01DA3E70 MOV X3, X31
	0x01DA3E74 MOV X21, X0
	0x01DA3E78 BL 0x3314368
	0x01DA3E7C MOV X0, X20
	0x01DA3E80 MOV X1, X21
	0x01DA3E84 MOV X2, X31
	0x01DA3E88 BL 0x33C0DE4
	0x01DA3E8C CBZ X0, 0x1DA3EB4
	0x01DA3E90 LDR X1, [X22]
	0x01DA3E94 LDR X8, [X0]
	0x01DA3E98 CMP X8, X1
	0x01DA3E9C B.NE 0x1DA3EB0
	0x01DA3EA0 STR X0, [X23 + 0x1E0]
	0x01DA3EA4 LDR X8, [X0]
	0x01DA3EA8 CMP X8, X1
	0x01DA3EAC B.EQ 0x1DA3EB8
	0x01DA3EB0 BL 0x1C171E0
	0x01DA3EB4 STR X0, [X23 + 0x1E0]
	0x01DA3EB8 LDP X20, X19, [X31 + 0x20]
	0x01DA3EBC LDP X22, X21, [X31 + 0x10]
	0x01DA3EC0 LDP X30, X23, [X31], #0x30
	0x01DA3EC4 RET
	0x01DA3EC8 BL 0x1C16F20
	0x01DA3ECC STP X30, X23, [X31 - 0x30]!
	0x01DA3ED0 STP X22, X21, [X31 + 0x10]
	0x01DA3ED4 STP X20, X19, [X31 + 0x20]
	0x01DA3ED8 ADRP X20, 0x2635000
	0x01DA3EDC ADRP X21, 0x2353000
	0x01DA3EE0 LDRB W8, [X20 + 0xA86]
	0x01DA3EE4 LDR X21, [X21 + 0xA78]
	0x01DA3EE8 MOV X19, X0
	0x01DA3EEC TBNZ X8, 0x0, 0x1DA3F28
	0x01DA3EF0 ADRP X0, 0x2351000
	0x01DA3EF4 LDR X0, [X0 + 0xE70]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2636000
	008 Move X21, 0x2353000
	009 Move W8, [X20+2683]
	010 Move X21, [X21+304]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x2352000
	017 Move X0, [X0+3696]
	018 Call 0x1C17CF4
	019 Move X0, 0x2353000
	020 Move X0, [X0+304]
	021 Call 0x1C17CF4
	022 Move X0, 0x2355000
	023 Move X0, [X0+688]
	024 Call 0x1C17CF4
	025 Move X0, 0x2355000
	026 Move X0, [X0+696]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+2683], W8
	030 Move X0, [X21]
	031 Call 0x1C17F10
	032 Move W1, 240
	033 Move W2, 320
	034 Move W3, 16
	035 Move X4, X31
	036 Move X20, X0
	037 Call RenderTexture..ctor, X0, X1, X2, X3
	038 Move [X19+176], X20
	039 Move X0, [X21]
	040 Call 0x1C17F10
	041 Move W1, 240
	042 Move W2, 320
	043 Move W3, W31
	044 Move X4, X31
	045 Move X20, X0
	046 Call RenderTexture..ctor, X0, X1, X2, X3
	047 Move X0, [X19+136]
	048 Move [X19+184], X20
	049 Compare X0, 0
	050 JumpIfEqual {109}
	051 Move X1, [X19+176]
	052 Move X2, X31
	053 Call Camera.set_targetTexture, X0, X1
	054 Move X0, [X19+136]
	055 Compare X0, 0
	056 JumpIfEqual {109}
	057 Move X8, 0x2355000
	058 Move X8, [X8+696]
	059 Move X1, [X19+152]
	060 Move X3, X31
	061 Move X2, [X8]
	062 Call Camera.SetReplacementShader, X0, X1, X2
	063 Move X0, [X19+144]
	064 Compare X0, 0
	065 JumpIfEqual {109}
	066 Move X1, X31
	067 Call Renderer.get_material, X0
	068 Compare X0, 0
	069 JumpIfEqual {109}
	070 Move X1, [X19+184]
	071 Move X2, X31
	072 Call Material.set_mainTexture, X0, X1
	073 Move X22, [X19+128]
	074 Compare X22, 0
	075 JumpIfEqual {109}
	076 Move X23, 0x2352000
	077 Move X23, [X23+3696]
	078 Move X21, 0x2355000
	079 Move X20, [X22+464]
	080 Move X0, [X23]
	081 Move X21, [X21+688]
	082 Call 0x1C17F10
	083 Move X2, [X21]
	084 Move X1, X19
	085 Move X3, X31
	086 Move X21, X0
	087 Call Action..ctor, X0, X1, X2
	088 Move X0, X20
	089 Move X1, X21
	090 Move X2, X31
	091 Call Delegate.Combine, X0, X1
	092 Compare X0, 0
	093 JumpIfEqual {101}
	094 Move X1, [X23]
	095 Move X8, [X0]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move [X22+464], X0
	098 Move X8, [X0]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Call 0x1C181E0
	101 Move [X22+464], X0
	102 Move X20, [X31+32]
	103 Move X19, [X31+40]
	104 Move X22, [X31+16]
	105 Move X21, [X31+24]
	106 Move X30, [X31+48]
	107 Move X23, [X31+56]
	108 Return 
	109 Call 0x1C17F20

Method: System.Void OnDestroy()

Disassembly:
	0x01DA3EF8 BL 0x1C16CF4
	0x01DA3EFC ADRP X0, 0x2353000
	0x01DA3F00 LDR X0, [X0 + 0xA78]
	0x01DA3F04 BL 0x1C16CF4
	0x01DA3F08 ADRP X0, 0x2354000
	0x01DA3F0C LDR X0, [X0 + 0x328]
	0x01DA3F10 BL 0x1C16CF4
	0x01DA3F14 ADRP X0, 0x2354000
	0x01DA3F18 LDR X0, [X0 + 0x330]
	0x01DA3F1C BL 0x1C16CF4
	0x01DA3F20 MOVZ W8, 0x1
	0x01DA3F24 STRB W8, [X20 + 0xA86]
	0x01DA3F28 LDR X0, [X21]
	0x01DA3F2C LDR W8, [X0 + 0xE0]
	0x01DA3F30 CBNZ W8, 0x1DA3F38
	0x01DA3F34 BL 0x1C16DFC
	0x01DA3F38 CBZ X19, 0x1DA4038
	0x01DA3F3C LDR W8, [X19 + 0x30]
	0x01DA3F40 LDR X23, [X19 + 0x80]
	0x01DA3F44 ORR W8, W8, 0x8
	0x01DA3F48 STR W8, [X19 + 0x30]
	0x01DA3F4C CBZ X23, 0x1DA4038
	0x01DA3F50 ADRP X22, 0x2351000
	0x01DA3F54 LDR X22, [X22 + 0xE70]
	0x01DA3F58 ADRP X21, 0x2354000
	0x01DA3F5C LDR X20, [X23 + 0x1D8]
	0x01DA3F60 LDR X0, [X22]
	0x01DA3F64 LDR X21, [X21 + 0x330]
	0x01DA3F68 BL 0x1C16F10
	0x01DA3F6C LDR X2, [X21]
	0x01DA3F70 MOV X1, X19
	0x01DA3F74 MOV X3, X31
	0x01DA3F78 MOV X21, X0
	0x01DA3F7C BL 0x3314368
	0x01DA3F80 MOV X0, X20
	0x01DA3F84 MOV X1, X21
	0x01DA3F88 MOV X2, X31
	0x01DA3F8C BL 0x33C0FDC
	0x01DA3F90 LDR X1, [X22]
	0x01DA3F94 CBZ X0, 0x1DA3FB8
	0x01DA3F98 LDR X8, [X0]
	0x01DA3F9C CMP X8, X1
	0x01DA3FA0 B.NE 0x1DA4020
	0x01DA3FA4 STR X0, [X23 + 0x1D8]
	0x01DA3FA8 LDR X8, [X0]
	0x01DA3FAC CMP X8, X1
	0x01DA3FB0 B.EQ 0x1DA3FBC
	0x01DA3FB4 B 0x1DA4020
	0x01DA3FB8 STR X0, [X23 + 0x1D8]
	0x01DA3FBC LDR X23, [X19 + 0x80]
	0x01DA3FC0 CBZ X23, 0x1DA4038
	0x01DA3FC4 ADRP X21, 0x2354000
	0x01DA3FC8 LDR X20, [X23 + 0x1E0]
	0x01DA3FCC LDR X21, [X21 + 0x328]
	0x01DA3FD0 MOV X0, X1
	0x01DA3FD4 BL 0x1C16F10
	0x01DA3FD8 LDR X2, [X21]
	0x01DA3FDC MOV X1, X19
	0x01DA3FE0 MOV X3, X31
	0x01DA3FE4 MOV X21, X0
	0x01DA3FE8 BL 0x3314368
	0x01DA3FEC MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2636000
	008 Move X21, 0x2354000
	009 Move W8, [X20+2684]
	010 Move X21, [X21+2680]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x2352000
	017 Move X0, [X0+3696]
	018 Call 0x1C17CF4
	019 Move X0, 0x2354000
	020 Move X0, [X0+2680]
	021 Call 0x1C17CF4
	022 Move X0, 0x2355000
	023 Move X0, [X0+688]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+2684], W8
	027 Move X0, [X21]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Compare X19, 0
	033 JumpIfEqual {73}
	034 Move W8, [X19+48]
	035 Move X22, [X19+128]
	036 Or W8, W8, 8
	037 Move [X19+48], W8
	038 Compare X22, 0
	039 JumpIfEqual {73}
	040 Move X23, 0x2352000
	041 Move X23, [X23+3696]
	042 Move X21, 0x2355000
	043 Move X20, [X22+464]
	044 Move X0, [X23]
	045 Move X21, [X21+688]
	046 Call 0x1C17F10
	047 Move X2, [X21]
	048 Move X1, X19
	049 Move X3, X31
	050 Move X21, X0
	051 Call Action..ctor, X0, X1, X2
	052 Move X0, X20
	053 Move X1, X21
	054 Move X2, X31
	055 Call Delegate.Remove, X0, X1
	056 Compare X0, 0
	057 JumpIfEqual {65}
	058 Move X1, [X23]
	059 Move X8, [X0]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move [X22+464], X0
	062 Move X8, [X0]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Call 0x1C181E0
	065 Move [X22+464], X0
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 Move X23, [X31+56]
	072 Return 
	073 Call 0x1C17F20

Method: System.Void Spawned()

Disassembly:
	0x01DA3FF0 MOV X1, X21
	0x01DA3FF4 MOV X2, X31
	0x01DA3FF8 BL 0x33C0FDC
	0x01DA3FFC CBZ X0, 0x1DA4024
	0x01DA4000 LDR X1, [X22]
	0x01DA4004 LDR X8, [X0]
	0x01DA4008 CMP X8, X1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call NetworkBehaviour.Spawned, X0
	006 Move X0, X19
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]

Method: System.Void RPC_ToggleOnOff()

Disassembly:
	0x01DA4090 MOV X19, X0
	0x01DA4094 TBNZ X8, 0x0, 0x1DA40B8
	0x01DA4098 ADRP X0, 0x2352000
	0x01DA409C LDR X0, [X0 + 0xA78]
	0x01DA40A0 BL 0x1C16CF4
	0x01DA40A4 ADRP X0, 0x2353000
	0x01DA40A8 LDR X0, [X0 + 0x338]
	0x01DA40AC BL 0x1C16CF4
	0x01DA40B0 MOVZ W8, 0x1
	0x01DA40B4 STRB W8, [X20 + 0xA87]
	0x01DA40B8 LDRB W8, [X19 + 0x58]
	0x01DA40BC CBZ W8, 0x1DA40D4
	0x01DA40C0 STRB W31, [X19 + 0x58]
	0x01DA40C4 MOV X0, X19
	0x01DA40C8 LDP X20, X19, [X31 + 0x10]
	0x01DA40CC LDR X30, [X31], #0x20
	0x01DA40D0 B 0x1DA4204
	0x01DA40D4 ADRP X20, 0x2352000
	0x01DA40D8 LDR X20, [X20 + 0xA78]
	0x01DA40DC LDR X0, [X20]
	0x01DA40E0 LDR W8, [X0 + 0xE0]
	0x01DA40E4 CBNZ W8, 0x1DA40EC
	0x01DA40E8 BL 0x1C16DFC
	0x01DA40EC MOV X0, X19
	0x01DA40F0 MOV X1, X31
	0x01DA40F4 BL 0x1E77B08
	0x01DA40F8 LDR X0, [X19 + 0x38]
	0x01DA40FC CBZ X0, 0x1DA4200
	0x01DA4100 MOV X1, X31
	0x01DA4104 BL 0x1E9E538
	0x01DA4108 CMP W0, 0x4
	0x01DA410C B.NE 0x1DA411C
	0x01DA4110 LDP X20, X19, [X31 + 0x10]
	0x01DA4114 LDR X30, [X31], #0x20
	0x01DA4118 RET
	0x01DA411C LDR X0, [X19 + 0x40]
	0x01DA4120 CBZ X0, 0x1DA4200
	0x01DA4124 MOV X1, X31
	0x01DA4128 BL 0x1E94078
	0x01DA412C ANDS W31, W0, 0x7
	0x01DA4130 B.EQ 0x1DA4188
	0x01DA4134 TBNZ X0, 0x0, 0x1DA40C4
	0x01DA4138 LDR X8, [X19 + 0x38]
	0x01DA413C CBZ X8, 0x1DA4200
	0x01DA4140 LDR X0, [X8 + 0x50]
	0x01DA4144 CBZ X0, 0x1DA4200
	0x01DA4148 MOV X1, X31
	0x01DA414C BL 0x1EC4D00
	0x01DA4150 TBZ X0, 0x0, 0x1DA4110
	0x01DA4154 LDR X8, [X19 + 0x38]
	0x01DA4158 CBZ X8, 0x1DA4200
	0x01DA415C LDR X0, [X8 + 0x50]
	0x01DA4160 MOVZ W1, 0x8
	0x01DA4164 MOV X2, X31
	0x01DA4168 BL 0x1ED9318
	0x01DA416C LDR X8, [X19 + 0x40]
	0x01DA4170 CBZ X8, 0x1DA4200
	0x01DA4174 LDR X8, [X8 + 0x20]
	0x01DA4178 MOV X20, X0
	0x01DA417C CBZ X8, 0x1DA41C0
	0x01DA4180 LDR W0, [X8]
	0x01DA4184 B 0x1DA41C4
	0x01DA4188 LDR X0, [X20]
	0x01DA418C LDR X19, [X19 + 0x40]
	0x01DA4190 LDR W8, [X0 + 0xE0]
	0x01DA4194 CBNZ W8, 0x1DA419C
	0x01DA4198 BL 0x1C16DFC
	0x01DA419C ADRP X8, 0x2353000
	0x01DA41A0 LDR X8, [X8 + 0x338]
	0x01DA41A4 MOV X1, X19
	0x01DA41A8 LDP X20, X19, [X31 + 0x10]
	0x01DA41AC MOVZ W2, 0x7
	0x01DA41B0 LDR X0, [X8]
	0x01DA41B4 MOV X3, X31
	0x01DA41B8 LDR X30, [X31], #0x20
	0x01DA41BC B 0x1E77B00
	0x01DA41C0 MOV X0, X31
	0x01DA41C4 LDR W1, [X19 + 0x68]
	0x01DA41C8 MOVZ W2, 0x1
	0x01DA41CC MOV X3, X31
	0x01DA41D0 BL 0x1E9C23C
	0x01DA41D4 STUR X0, [X20 + 0x1C]
	0x01DA41D8 CBZ X20, 0x1DA4200
	0x01DA41DC MOVZ W8, 0x40
	0x01DA41E0 STR W8, [X20 + 0xC]
	0x01DA41E4 LDR X0, [X19 + 0x38]
	0x01DA41E8 CBZ X0, 0x1DA4200
	0x01DA41EC MOV X1, X20
	0x01DA41F0 LDP X20, X19, [X31 + 0x10]
	0x01DA41F4 MOV X2, X31
	0x01DA41F8 LDR X30, [X31], #0x20
	0x01DA41FC B 0x1EA1E24
	0x01DA4200 BL 0x1C16F20
	0x01DA4204 SUB X31, X31, 0xE0
	0x01DA4208 STP D13, D12, [X31 + 0x60]
	0x01DA420C STP D11, D10, [X31 + 0x70]
	0x01DA4210 STP D9, D8, [X31 + 0x80]
	0x01DA4214 STR X30, [X31 + 0x90]
	0x01DA4218 STP X26, X25, [X31 + 0xA0]
	0x01DA421C STP X24, X23, [X31 + 0xB0]
	0x01DA4220 STP X22, X21, [X31 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2635000
	005 Move W8, [X20+2685]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x2353000
	012 Move X0, [X0+2680]
	013 Call 0x1C17CF4
	014 Move X0, 0x2354000
	015 Move X0, [X0+704]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2685], W8
	019 Move W8, [X19+88]
	020 Compare W8, 0
	021 JumpIfEqual {33}
	022 Move [X19+88], W31
	023 Move X0, X19
	024 Call Scanner.get_isOn, X0
	025 NotImplemented "Instruction ORN not yet implemented."
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 And W1, W8, 1
	030 Move X30, [X31+32]
	031 Call Scanner.set_isOn, X0, X1
	032 Return 
	033 Move X20, 0x2353000
	034 Move X20, [X20+2680]
	035 Move X0, [X20]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	043 Move X0, [X19+56]
	044 Compare X0, 0
	045 JumpIfEqual {127}
	046 Move X1, X31
	047 Call NetworkRunner.get_Stage, X0
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Return 
	053 Move X0, [X19+64]
	054 Compare X0, 0
	055 JumpIfEqual {127}
	056 Move X1, X31
	057 Call NetworkObject.GetLocalAuthorityMask, X0
	058 And W31, W0, 7
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {23}
	063 Move X8, [X19+56]
	064 Compare X8, 0
	065 JumpIfEqual {127}
	066 Move X0, [X8+80]
	067 Compare X0, 0
	068 JumpIfEqual {127}
	069 Move X1, X31
	070 Call Simulation.HasAnyActiveConnections, X0
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {49}
	075 Move X8, [X19+56]
	076 Compare X8, 0
	077 JumpIfEqual {127}
	078 Move X0, [X8+80]
	079 Move W1, 8
	080 Move X2, X31
	081 Call SimulationMessage.Allocate, X0, X1
	082 Move X8, [X19+64]
	083 Compare X8, 0
	084 JumpIfEqual {127}
	085 Move X8, [X8+32]
	086 Move X20, X0
	087 Compare X8, 0
	088 JumpIfEqual {107}
	089 Move W0, [X8]
	090 Move X0, [X20]
	091 Move X19, [X19+64]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move X8, 0x2354000
	097 Move X8, [X8+704]
	098 Move X1, X19
	099 Move X20, [X31+16]
	100 Move X19, [X31+24]
	101 Move W2, 7
	102 Move X0, [X8]
	103 Move X3, X31
	104 Move X30, [X31+32]
	105 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	106 Return 
	107 Move X0, X31
	108 Move W1, [X19+104]
	109 Move W2, 1
	110 Move X3, X31
	111 Call RpcHeader.Create, X0, X1, X2
	112 Move [X20+28], X0
	113 Compare X20, 0
	114 JumpIfEqual {127}
	115 Move W8, 64
	116 Move [X20+12], W8
	117 Move X0, [X19+56]
	118 Compare X0, 0
	119 JumpIfEqual {127}
	120 Move X1, X20
	121 Move X20, [X31+16]
	122 Move X19, [X31+24]
	123 Move X2, X31
	124 Move X30, [X31+32]
	125 Call NetworkRunner.SendRpc, X0, X1
	126 Return 
	127 Call 0x1C17F20

Method: System.Void HandleToggleUse()

Disassembly:
	0x01DA4224 STP X20, X19, [X31 + 0xD0]

ISIL:
	001 Call Scanner.RPC_ToggleOnOff, X0
	002 Return 

Method: System.Void Update()

Disassembly:
	0x01DA4228 ADRP X20, 0x2634000
	0x01DA422C LDRB W8, [X20 + 0xA8A]
	0x01DA4230 MOV X19, X0
	0x01DA4234 TBNZ X8, 0x0, 0x1DA42C4
	0x01DA4238 ADRP X0, 0x2353000
	0x01DA423C LDR X0, [X0 + 0x340]
	0x01DA4240 BL 0x1C16CF4
	0x01DA4244 ADRP X0, 0x2353000
	0x01DA4248 LDR X0, [X0 + 0x348]
	0x01DA424C BL 0x1C16CF4
	0x01DA4250 ADRP X0, 0x2353000
	0x01DA4254 LDR X0, [X0 + 0x350]
	0x01DA4258 BL 0x1C16CF4
	0x01DA425C ADRP X0, 0x2353000
	0x01DA4260 LDR X0, [X0 + 0x358]
	0x01DA4264 BL 0x1C16CF4
	0x01DA4268 ADRP X0, 0x2353000
	0x01DA426C LDR X0, [X0 + 0x360]
	0x01DA4270 BL 0x1C16CF4
	0x01DA4274 ADRP X0, 0x2353000
	0x01DA4278 LDR X0, [X0 + 0x368]
	0x01DA427C BL 0x1C16CF4
	0x01DA4280 ADRP X0, 0x2352000
	0x01DA4284 LDR X0, [X0 + 0xBF0]
	0x01DA4288 BL 0x1C16CF4
	0x01DA428C ADRP X0, 0x2353000
	0x01DA4290 LDR X0, [X0 + 0x370]
	0x01DA4294 BL 0x1C16CF4
	0x01DA4298 ADRP X0, 0x2353000
	0x01DA429C LDR X0, [X0 + 0x378]
	0x01DA42A0 BL 0x1C16CF4
	0x01DA42A4 ADRP X0, 0x2353000
	0x01DA42A8 LDR X0, [X0 + 0x380]
	0x01DA42AC BL 0x1C16CF4
	0x01DA42B0 ADRP X0, 0x234F000
	0x01DA42B4 LDR X0, [X0 + 0x598]
	0x01DA42B8 BL 0x1C16CF4
	0x01DA42BC MOVZ W8, 0x1
	0x01DA42C0 STRB W8, [X20 + 0xA8A]
	0x01DA42C4 MOVI V0.2D, 0x0
	0x01DA42C8 MOV X0, X19
	0x01DA42CC STR X31, [X31 + 0x50]
	0x01DA42D0 STP V0, V0, [X31 + 0x30]
	0x01DA42D4 BL 0x1DA3CAC
	0x01DA42D8 STR W0, [X31 + 0x98]
	0x01DA42DC LDR X1, [X19 + 0x38]
	0x01DA42E0 ADD X0, X31, 0x98
	0x01DA42E4 MOV X2, X31
	0x01DA42E8 BL 0x1E91C28
	0x01DA42EC TBZ X0, 0x0, 0x1DA46C8
	0x01DA42F0 ADRP X8, 0x2353000
	0x01DA42F4 LDR X8, [X8 + 0x350]
	0x01DA42F8 LDR X0, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2635000
	006 Move X20, 0x2350000
	007 Move W8, [X21+2686]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2354000
	015 Move X0, [X0+712]
	016 Call 0x1C17CF4
	017 Move X0, 0x2350000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2686], W8
	022 Move X0, [X20]
	023 Move X20, [X19+64]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Inequality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {71}
	036 Move X0, [X19+64]
	037 Compare X0, 0
	038 JumpIfEqual {76}
	039 Move X1, X31
	040 Call NetworkObject.get_IsValid, X0
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {71}
	045 Move X0, X19
	046 Call Scanner.get_isOn, X0
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {71}
	051 Move X8, 0x2354000
	052 Move X8, [X8+712]
	053 Move X21, [X19+176]
	054 Move X20, [X19+184]
	055 Move X19, [X19+160]
	056 Move X0, [X8]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X1, X20
	062 Move X2, X19
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X0, X21
	066 Move X3, X31
	067 Move X30, [X31+32]
	068 Move X21, [X31+40]
	069 Call Graphics.Blit, X0, X1, X2
	070 Return 
	071 Move X20, [X31+16]
	072 Move X19, [X31+24]
	073 Move X30, [X31+32]
	074 Move X21, [X31+40]
	075 Return 
	076 Call 0x1C17F20

Method: System.Void HandleIsOnChanged()

Disassembly:
	0x01DA400C B.NE 0x1DA4020
	0x01DA4010 STR X0, [X23 + 0x1E0]
	0x01DA4014 LDR X8, [X0]
	0x01DA4018 CMP X8, X1
	0x01DA401C B.EQ 0x1DA4028
	0x01DA4020 BL 0x1C171E0
	0x01DA4024 STR X0, [X23 + 0x1E0]
	0x01DA4028 LDP X20, X19, [X31 + 0x20]
	0x01DA402C LDP X22, X21, [X31 + 0x10]
	0x01DA4030 LDP X30, X23, [X31], #0x30
	0x01DA4034 RET
	0x01DA4038 BL 0x1C16F20
	0x01DA403C STP X30, X19, [X31 - 0x10]!
	0x01DA4040 MOV X1, X31
	0x01DA4044 MOV X19, X0
	0x01DA4048 BL 0x1E73F88
	0x01DA404C LDR X0, [X19 + 0x40]
	0x01DA4050 CBZ X0, 0x1DA4078
	0x01DA4054 LDRB W8, [X0 + 0x60]
	0x01DA4058 TBNZ X8, 0x1, 0x1DA4078
	0x01DA405C MOV X1, X31
	0x01DA4060 BL 0x1E93668
	0x01DA4064 TBZ X0, 0x0, 0x1DA4078
	0x01DA4068 MOVZ W1, 0x2
	0x01DA406C MOV X0, X19
	0x01DA4070 LDP X30, X19, [X31], #0x10
	0x01DA4074 B 0x1DA3C4C
	0x01DA4078 LDP X30, X19, [X31], #0x10
	0x01DA407C RET
	0x01DA4080 STR X30, [X31 - 0x20]!
	0x01DA4084 STP X20, X19, [X31 + 0x10]
	0x01DA4088 ADRP X20, 0x2634000
	0x01DA408C LDRB W8, [X20 + 0xA87]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, [X0+136]
	005 Move X19, X0
	006 Call Scanner.get_isOn, X0
	007 Compare X20, 0
	008 JumpIfEqual {41}
	009 And W1, W0, 1
	010 Move X0, X20
	011 Move X2, X31
	012 Call Behaviour.set_enabled, X0, X1
	013 Move X0, X19
	014 Call Scanner.get_isOn, X0
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {23}
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Return 
	023 Move X0, [X19+184]
	024 Move X1, X31
	025 Call RenderTexture.set_active, X0
	026 Move S0, W31
	027 Move S1, W31
	028 Move S2, W31
	029 Move S3, 1
	030 Move W0, 1
	031 Move W1, 1
	032 Move X2, X31
	033 Call GL.Clear, X0, X1, X2
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X0, X31
	037 Move X1, X31
	038 Move X30, [X31+32]
	039 Call RenderTexture.set_active, X0
	040 Return 
	041 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01DA42FC BL 0x1C16F10
	0x01DA4300 ADRP X8, 0x2353000

ISIL:
	001 Move X1, X31
	002 Call NetworkBehaviour..ctor, X0
	003 Return 

Method: System.Void CopyBackingFieldsToState(System.Boolean param_0)

Disassembly:
	0x01DA4304 LDR X8, [X8 + 0x348]
	0x01DA4308 MOV X20, X0

ISIL:
	001 Move W1, [X0+168]
	002 Call Scanner.set_isOn, X0, X1
	003 Return 

Method: System.Void CopyStateToBackingFields()

Disassembly:
	0x01DA430C LDR X1, [X8]
	0x01DA4310 BL 0x2AA4804
	0x01DA4314 LDR X2, [X19 + 0xC0]
	0x01DA4318 CBZ X2, 0x1DA4700
	0x01DA431C LDR W8, [X2 + 0x1C]
	0x01DA4320 MOV X0, X19
	0x01DA4324 MOV X1, X20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call Scanner.get_isOn, X0
	005 And W8, W0, 1
	006 Move [X19+168], W8
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 

Method: System.Void RPC_ToggleOnOff@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01DA4328 ADD W8, W8, 0x1
	0x01DA432C STP W31, W8, [X2 + 0x18]
	0x01DA4330 BL 0x1DA4B74
	0x01DA4334 MOVZ W21, 0x12
	0x01DA4338 LDR X2, [X19 + 0xC0]
	0x01DA433C MOV X0, X19
	0x01DA4340 MOV X1, X20
	0x01DA4344 BL 0x1DA4B74
	0x01DA4348 SUBS W21, W21, 0x1
	0x01DA434C B.NE 0x1DA4338
	0x01DA4350 CBZ X20, 0x1DA4700
	0x01DA4354 ADRP X8, 0x2353000
	0x01DA4358 LDR X8, [X8 + 0x340]
	0x01DA435C MOV X0, X20
	0x01DA4360 LDR X1, [X8]
	0x01DA4364 ADD X8, X31, 0x8
	0x01DA4368 BL 0x2AA54BC
	0x01DA436C LDUR V0, [X31 + 0x8]
	0x01DA4370 LDUR V1, [X31 + 0x18]
	0x01DA4374 LDR X8, [X31 + 0x28]
	0x01DA4378 ADRP X24, 0x2353000
	0x01DA437C LDR X24, [X24 + 0x360]
	0x01DA4380 STP V0, V1, [X31 + 0x30]
	0x01DA4384 STR X8, [X31 + 0x50]
	0x01DA4388 ADRP X25, 0x2352000
	0x01DA438C LDR X25, [X25 + 0xBF0]
	0x01DA4390 LDR X1, [X24]
	0x01DA4394 ADD X0, X31, 0x30
	0x01DA4398 BL 0x2C0A728
	0x01DA439C TBZ X0, 0x0, 0x1DA4480
	0x01DA43A0 LDR X8, [X31 + 0x48]
	0x01DA43A4 CBZ X8, 0x1DA46F8
	0x01DA43A8 LDR X9, [X19 + 0x80]
	0x01DA43AC CBZ X9, 0x1DA46FC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2635000
	005 Move W8, [X20+2687]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2354000
	012 Move X0, [X0+720]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2687], W8
	016 Compare X19, 0
	017 JumpIfEqual {39}
	018 Move X9, 0x2354000
	019 Move X9, [X9+720]
	020 Move W8, 1
	021 Move [X19+88], W8
	022 Move X8, [X19]
	023 Move X1, [X9]
	024 Move W10, [X8+304]
	025 Move W9, [X1+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, [X8+200]
	028 Add X8, X8, X9
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Call Scanner.RPC_ToggleOnOff, X0
	036 Return 
	037 Move X0, X19
	038 Call 0x1C181E0
	039 Call 0x1C17F20

