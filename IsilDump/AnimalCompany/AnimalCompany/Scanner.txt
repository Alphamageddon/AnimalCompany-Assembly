Type: AnimalCompany.Scanner

Method: System.Boolean get_isOn()

Disassembly:
	0x01CAD66C ADRP X0, 0x22A1000
	0x01CAD670 LDR X0, [X0 + 0x938]
	0x01CAD674 BL 0x1B6E804
	0x01CAD678 MOV X1, X0
	0x01CAD67C MOV X0, X19
	0x01CAD680 BL 0x1B6E8E8
	0x01CAD684 STP X30, X19, [X31 - 0x10]!
	0x01CAD688 LDR X8, [X0 + 0x50]
	0x01CAD68C CBZ X8, 0x1CAD69C
	0x01CAD690 LDR W0, [X8 + 0x4]
	0x01CAD694 LDP X30, X19, [X31], #0x10
	0x01CAD698 RET
	0x01CAD69C ADRP X0, 0x22A0000
	0x01CAD6A0 LDR X0, [X0 + 0x490]
	0x01CAD6A4 BL 0x1B6E804
	0x01CAD6A8 BL 0x1B6EA0C
	0x01CAD6AC MOV X19, X0
	0x01CAD6B0 ADRP X0, 0x22A1000
	0x01CAD6B4 LDR X0, [X0 + 0x940]
	0x01CAD6B8 BL 0x1B6E804
	0x01CAD6BC MOV X1, X0
	0x01CAD6C0 MOV X0, X19
	0x01CAD6C4 MOV X2, X31
	0x01CAD6C8 BL 0x31E7550
	0x01CAD6CC ADRP X0, 0x22A1000
	0x01CAD6D0 LDR X0, [X0 + 0x948]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {12}
	006 Move W8, [X8]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return X0
	012 Move X0, 0x22A1000
	013 Move X0, [X0+1168]
	014 Call 0x1B6F804
	015 Call 0x1B6FA0C
	016 Move X19, X0
	017 Move X0, 0x22A2000
	018 Move X0, [X0+2240]
	019 Call 0x1B6F804
	020 Move X1, X0
	021 Move X0, X19
	022 Move X2, X31
	023 Call InvalidOperationException..ctor, X0, X1
	024 Move X0, 0x22A2000
	025 Move X0, [X0+2248]
	026 Call 0x1B6F804
	027 Move X1, X0
	028 Move X0, X19
	029 Call 0x1B6F8E8

Method: System.Void set_isOn(System.Boolean value)

Disassembly:
	0x01CAD6D4 BL 0x1B6E804
	0x01CAD6D8 MOV X1, X0
	0x01CAD6DC MOV X0, X19
	0x01CAD6E0 BL 0x1B6E8E8
	0x01CAD6E4 STP X30, X19, [X31 - 0x10]!
	0x01CAD6E8 LDR X8, [X0 + 0x50]
	0x01CAD6EC CBZ X8, 0x1CAD6FC
	0x01CAD6F0 STR W1, [X8 + 0x4]
	0x01CAD6F4 LDP X30, X19, [X31], #0x10
	0x01CAD6F8 RET
	0x01CAD6FC ADRP X0, 0x22A0000
	0x01CAD700 LDR X0, [X0 + 0x490]
	0x01CAD704 BL 0x1B6E804
	0x01CAD708 BL 0x1B6EA0C
	0x01CAD70C MOV X19, X0
	0x01CAD710 ADRP X0, 0x22A1000
	0x01CAD714 LDR X0, [X0 + 0x940]
	0x01CAD718 BL 0x1B6E804
	0x01CAD71C MOV X1, X0
	0x01CAD720 MOV X0, X19
	0x01CAD724 MOV X2, X31
	0x01CAD728 BL 0x31E7550
	0x01CAD72C ADRP X0, 0x22A1000
	0x01CAD730 LDR X0, [X0 + 0x950]
	0x01CAD734 BL 0x1B6E804

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {11}
	006 And W9, W1, 1
	007 Move [X8], W9
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return 
	011 Move X0, 0x22A1000
	012 Move X0, [X0+1168]
	013 Call 0x1B6F804
	014 Call 0x1B6FA0C
	015 Move X19, X0
	016 Move X0, 0x22A2000
	017 Move X0, [X0+2240]
	018 Call 0x1B6F804
	019 Move X1, X0
	020 Move X0, X19
	021 Move X2, X31
	022 Call InvalidOperationException..ctor, X0, X1
	023 Move X0, 0x22A2000
	024 Move X0, [X0+2256]
	025 Call 0x1B6F804
	026 Move X1, X0
	027 Move X0, X19
	028 Call 0x1B6F8E8

Method: System.Void Awake()

Disassembly:
	0x01CAD738 MOV X1, X0
	0x01CAD73C MOV X0, X19
	0x01CAD740 BL 0x1B6E8E8
	0x01CAD744 STP X30, X23, [X31 - 0x30]!
	0x01CAD748 STP X22, X21, [X31 + 0x10]
	0x01CAD74C STP X20, X19, [X31 + 0x20]
	0x01CAD750 ADRP X20, 0x2576000
	0x01CAD754 ADRP X21, 0x22A1000
	0x01CAD758 LDRB W8, [X20 + 0x4A0]
	0x01CAD75C LDR X21, [X21 + 0x298]
	0x01CAD760 MOV X19, X0
	0x01CAD764 TBNZ X8, 0x0, 0x1CAD7A0
	0x01CAD768 ADRP X0, 0x22A1000
	0x01CAD76C LDR X0, [X0 + 0x170]
	0x01CAD770 BL 0x1B6E7F0
	0x01CAD774 ADRP X0, 0x22A1000
	0x01CAD778 LDR X0, [X0 + 0x298]
	0x01CAD77C BL 0x1B6E7F0
	0x01CAD780 ADRP X0, 0x22A1000
	0x01CAD784 LDR X0, [X0 + 0x958]
	0x01CAD788 BL 0x1B6E7F0
	0x01CAD78C ADRP X0, 0x22A1000
	0x01CAD790 LDR X0, [X0 + 0x960]
	0x01CAD794 BL 0x1B6E7F0
	0x01CAD798 MOVZ W8, 0x1
	0x01CAD79C STRB W8, [X20 + 0x4A0]
	0x01CAD7A0 LDR X1, [X21]
	0x01CAD7A4 MOV X0, X19
	0x01CAD7A8 BL 0x208FDE8
	0x01CAD7AC LDR X23, [X19 + 0x80]
	0x01CAD7B0 STR X0, [X19 + 0xC0]
	0x01CAD7B4 CBZ X23, 0x1CAD8A0
	0x01CAD7B8 ADRP X22, 0x22A1000
	0x01CAD7BC LDR X22, [X22 + 0x170]
	0x01CAD7C0 ADRP X21, 0x22A1000
	0x01CAD7C4 LDR X20, [X23 + 0x198]
	0x01CAD7C8 LDR X0, [X22]
	0x01CAD7CC LDR X21, [X21 + 0x960]
	0x01CAD7D0 BL 0x1B6EA0C
	0x01CAD7D4 LDR X2, [X21]
	0x01CAD7D8 MOV X1, X19
	0x01CAD7DC MOV X3, X31
	0x01CAD7E0 MOV X21, X0
	0x01CAD7E4 BL 0x317DB24
	0x01CAD7E8 MOV X0, X20
	0x01CAD7EC MOV X1, X21
	0x01CAD7F0 MOV X2, X31
	0x01CAD7F4 BL 0x322A750
	0x01CAD7F8 LDR X1, [X22]
	0x01CAD7FC CBZ X0, 0x1CAD820
	0x01CAD800 LDR X8, [X0]
	0x01CAD804 CMP X8, X1
	0x01CAD808 B.NE 0x1CAD888
	0x01CAD80C STR X0, [X23 + 0x198]
	0x01CAD810 LDR X8, [X0]
	0x01CAD814 CMP X8, X1
	0x01CAD818 B.EQ 0x1CAD824
	0x01CAD81C B 0x1CAD888
	0x01CAD820 STR X0, [X23 + 0x198]
	0x01CAD824 LDR X23, [X19 + 0x80]
	0x01CAD828 CBZ X23, 0x1CAD8A0
	0x01CAD82C ADRP X21, 0x22A1000
	0x01CAD830 LDR X20, [X23 + 0x1A0]
	0x01CAD834 LDR X21, [X21 + 0x958]
	0x01CAD838 MOV X0, X1
	0x01CAD83C BL 0x1B6EA0C
	0x01CAD840 LDR X2, [X21]
	0x01CAD844 MOV X1, X19
	0x01CAD848 MOV X3, X31
	0x01CAD84C MOV X21, X0
	0x01CAD850 BL 0x317DB24
	0x01CAD854 MOV X0, X20
	0x01CAD858 MOV X1, X21
	0x01CAD85C MOV X2, X31
	0x01CAD860 BL 0x322A750
	0x01CAD864 CBZ X0, 0x1CAD88C
	0x01CAD868 LDR X1, [X22]
	0x01CAD86C LDR X8, [X0]
	0x01CAD870 CMP X8, X1
	0x01CAD874 B.NE 0x1CAD888
	0x01CAD878 STR X0, [X23 + 0x1A0]
	0x01CAD87C LDR X8, [X0]
	0x01CAD880 CMP X8, X1
	0x01CAD884 B.EQ 0x1CAD890
	0x01CAD888 BL 0x1B6ECDC
	0x01CAD88C STR X0, [X23 + 0x1A0]
	0x01CAD890 LDP X20, X19, [X31 + 0x20]
	0x01CAD894 LDP X22, X21, [X31 + 0x10]
	0x01CAD898 LDP X30, X23, [X31], #0x30
	0x01CAD89C RET
	0x01CAD8A0 BL 0x1B6EA1C
	0x01CAD8A4 STP X30, X23, [X31 - 0x30]!
	0x01CAD8A8 STP X22, X21, [X31 + 0x10]
	0x01CAD8AC STP X20, X19, [X31 + 0x20]
	0x01CAD8B0 ADRP X20, 0x2576000
	0x01CAD8B4 ADRP X21, 0x22A1000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2577000
	008 Move X21, 0x22A2000
	009 Move W8, [X20+1174]
	010 Move X21, [X21+2264]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x22A2000
	017 Move X0, [X0+368]
	018 Call 0x1B6F7F0
	019 Move X0, 0x22A2000
	020 Move X0, [X0+2264]
	021 Call 0x1B6F7F0
	022 Move X0, 0x22A2000
	023 Move X0, [X0+2272]
	024 Call 0x1B6F7F0
	025 Move X0, 0x22A2000
	026 Move X0, [X0+2280]
	027 Call 0x1B6F7F0
	028 Move W8, 1
	029 Move [X20+1174], W8
	030 Move X0, [X21]
	031 Call 0x1B6FA0C
	032 Move W1, 240
	033 Move W2, 320
	034 Move W3, 16
	035 Move X4, X31
	036 Move X20, X0
	037 Call RenderTexture..ctor, X0, X1, X2, X3
	038 Move [X19+176], X20
	039 Move X0, [X21]
	040 Call 0x1B6FA0C
	041 Move W1, 240
	042 Move W2, 320
	043 Move W3, W31
	044 Move X4, X31
	045 Move X20, X0
	046 Call RenderTexture..ctor, X0, X1, X2, X3
	047 Move X0, [X19+136]
	048 Move [X19+184], X20
	049 Compare X0, 0
	050 JumpIfEqual {109}
	051 Move X1, [X19+176]
	052 Move X2, X31
	053 Call Camera.set_targetTexture, X0, X1
	054 Move X0, [X19+136]
	055 Compare X0, 0
	056 JumpIfEqual {109}
	057 Move X8, 0x22A2000
	058 Move X8, [X8+2280]
	059 Move X1, [X19+152]
	060 Move X3, X31
	061 Move X2, [X8]
	062 Call Camera.SetReplacementShader, X0, X1, X2
	063 Move X0, [X19+144]
	064 Compare X0, 0
	065 JumpIfEqual {109}
	066 Move X1, X31
	067 Call Renderer.get_material, X0
	068 Compare X0, 0
	069 JumpIfEqual {109}
	070 Move X1, [X19+184]
	071 Move X2, X31
	072 Call Material.set_mainTexture, X0, X1
	073 Move X22, [X19+128]
	074 Compare X22, 0
	075 JumpIfEqual {109}
	076 Move X23, 0x22A2000
	077 Move X23, [X23+368]
	078 Move X21, 0x22A2000
	079 Move X20, [X22+400]
	080 Move X0, [X23]
	081 Move X21, [X21+2272]
	082 Call 0x1B6FA0C
	083 Move X2, [X21]
	084 Move X1, X19
	085 Move X3, X31
	086 Move X21, X0
	087 Call Action..ctor, X0, X1, X2
	088 Move X0, X20
	089 Move X1, X21
	090 Move X2, X31
	091 Call Delegate.Combine, X0, X1
	092 Compare X0, 0
	093 JumpIfEqual {101}
	094 Move X1, [X23]
	095 Move X8, [X0]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move [X22+400], X0
	098 Move X8, [X0]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Call 0x1B6FCDC
	101 Move [X22+400], X0
	102 Move X20, [X31+32]
	103 Move X19, [X31+40]
	104 Move X22, [X31+16]
	105 Move X21, [X31+24]
	106 Move X30, [X31+48]
	107 Move X23, [X31+56]
	108 Return 
	109 Call 0x1B6FA1C

Method: System.Void OnDestroy()

Disassembly:
	0x01CAD8B8 LDRB W8, [X20 + 0x4A1]
	0x01CAD8BC LDR X21, [X21 + 0x1C0]
	0x01CAD8C0 MOV X19, X0
	0x01CAD8C4 TBNZ X8, 0x0, 0x1CAD900
	0x01CAD8C8 ADRP X0, 0x22A1000
	0x01CAD8CC LDR X0, [X0 + 0x170]
	0x01CAD8D0 BL 0x1B6E7F0
	0x01CAD8D4 ADRP X0, 0x22A1000
	0x01CAD8D8 LDR X0, [X0 + 0x1C0]
	0x01CAD8DC BL 0x1B6E7F0
	0x01CAD8E0 ADRP X0, 0x22A1000
	0x01CAD8E4 LDR X0, [X0 + 0x958]
	0x01CAD8E8 BL 0x1B6E7F0
	0x01CAD8EC ADRP X0, 0x22A1000
	0x01CAD8F0 LDR X0, [X0 + 0x960]
	0x01CAD8F4 BL 0x1B6E7F0
	0x01CAD8F8 MOVZ W8, 0x1
	0x01CAD8FC STRB W8, [X20 + 0x4A1]
	0x01CAD900 LDR X0, [X21]
	0x01CAD904 LDR W8, [X0 + 0xE0]
	0x01CAD908 CBNZ W8, 0x1CAD910
	0x01CAD90C BL 0x1B6E8F8
	0x01CAD910 CBZ X19, 0x1CADA10
	0x01CAD914 LDR W8, [X19 + 0x30]
	0x01CAD918 LDR X23, [X19 + 0x80]
	0x01CAD91C ORR W8, W8, 0x8
	0x01CAD920 STR W8, [X19 + 0x30]
	0x01CAD924 CBZ X23, 0x1CADA10
	0x01CAD928 ADRP X22, 0x22A1000
	0x01CAD92C LDR X22, [X22 + 0x170]
	0x01CAD930 ADRP X21, 0x22A1000
	0x01CAD934 LDR X20, [X23 + 0x198]
	0x01CAD938 LDR X0, [X22]
	0x01CAD93C LDR X21, [X21 + 0x960]
	0x01CAD940 BL 0x1B6EA0C
	0x01CAD944 LDR X2, [X21]
	0x01CAD948 MOV X1, X19
	0x01CAD94C MOV X3, X31
	0x01CAD950 MOV X21, X0
	0x01CAD954 BL 0x317DB24
	0x01CAD958 MOV X0, X20
	0x01CAD95C MOV X1, X21
	0x01CAD960 MOV X2, X31
	0x01CAD964 BL 0x322A948
	0x01CAD968 LDR X1, [X22]
	0x01CAD96C CBZ X0, 0x1CAD990
	0x01CAD970 LDR X8, [X0]
	0x01CAD974 CMP X8, X1
	0x01CAD978 B.NE 0x1CAD9F8
	0x01CAD97C STR X0, [X23 + 0x198]
	0x01CAD980 LDR X8, [X0]
	0x01CAD984 CMP X8, X1
	0x01CAD988 B.EQ 0x1CAD994
	0x01CAD98C B 0x1CAD9F8
	0x01CAD990 STR X0, [X23 + 0x198]
	0x01CAD994 LDR X23, [X19 + 0x80]
	0x01CAD998 CBZ X23, 0x1CADA10
	0x01CAD99C ADRP X21, 0x22A1000
	0x01CAD9A0 LDR X20, [X23 + 0x1A0]
	0x01CAD9A4 LDR X21, [X21 + 0x958]
	0x01CAD9A8 MOV X0, X1
	0x01CAD9AC BL 0x1B6EA0C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2577000
	008 Move X21, 0x22A2000
	009 Move W8, [X20+1175]
	010 Move X21, [X21+448]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x22A2000
	017 Move X0, [X0+368]
	018 Call 0x1B6F7F0
	019 Move X0, 0x22A2000
	020 Move X0, [X0+448]
	021 Call 0x1B6F7F0
	022 Move X0, 0x22A2000
	023 Move X0, [X0+2272]
	024 Call 0x1B6F7F0
	025 Move W8, 1
	026 Move [X20+1175], W8
	027 Move X0, [X21]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1B6F8F8
	032 Compare X19, 0
	033 JumpIfEqual {73}
	034 Move W8, [X19+48]
	035 Move X22, [X19+128]
	036 Or W8, W8, 8
	037 Move [X19+48], W8
	038 Compare X22, 0
	039 JumpIfEqual {73}
	040 Move X23, 0x22A2000
	041 Move X23, [X23+368]
	042 Move X21, 0x22A2000
	043 Move X20, [X22+400]
	044 Move X0, [X23]
	045 Move X21, [X21+2272]
	046 Call 0x1B6FA0C
	047 Move X2, [X21]
	048 Move X1, X19
	049 Move X3, X31
	050 Move X21, X0
	051 Call Action..ctor, X0, X1, X2
	052 Move X0, X20
	053 Move X1, X21
	054 Move X2, X31
	055 Call Delegate.Remove, X0, X1
	056 Compare X0, 0
	057 JumpIfEqual {65}
	058 Move X1, [X23]
	059 Move X8, [X0]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move [X22+400], X0
	062 Move X8, [X0]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Call 0x1B6FCDC
	065 Move [X22+400], X0
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 Move X23, [X31+56]
	072 Return 
	073 Call 0x1B6FA1C

Method: System.Void Spawned()

Disassembly:
	0x01CAD9B0 LDR X2, [X21]
	0x01CAD9B4 MOV X1, X19
	0x01CAD9B8 MOV X3, X31
	0x01CAD9BC MOV X21, X0
	0x01CAD9C0 BL 0x317DB24
	0x01CAD9C4 MOV X0, X20
	0x01CAD9C8 MOV X1, X21

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call NetworkBehaviour.Spawned, X0
	006 Move X0, X19
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]

Method: System.Void RPC_ToggleOnOff()

Disassembly:
	0x01CADA50 LDP X30, X19, [X31], #0x10
	0x01CADA54 RET
	0x01CADA58 STR X30, [X31 - 0x20]!
	0x01CADA5C STP X20, X19, [X31 + 0x10]
	0x01CADA60 ADRP X20, 0x2576000
	0x01CADA64 LDRB W8, [X20 + 0x4A2]
	0x01CADA68 MOV X19, X0
	0x01CADA6C TBNZ X8, 0x0, 0x1CADA90
	0x01CADA70 ADRP X0, 0x22A1000
	0x01CADA74 LDR X0, [X0 + 0x1C0]
	0x01CADA78 BL 0x1B6E7F0
	0x01CADA7C ADRP X0, 0x22A1000
	0x01CADA80 LDR X0, [X0 + 0x968]
	0x01CADA84 BL 0x1B6E7F0
	0x01CADA88 MOVZ W8, 0x1
	0x01CADA8C STRB W8, [X20 + 0x4A2]
	0x01CADA90 LDRB W8, [X19 + 0x58]
	0x01CADA94 CBZ W8, 0x1CADAAC
	0x01CADA98 STRB W31, [X19 + 0x58]
	0x01CADA9C MOV X0, X19
	0x01CADAA0 LDP X20, X19, [X31 + 0x10]
	0x01CADAA4 LDR X30, [X31], #0x20
	0x01CADAA8 B 0x1CADBE8
	0x01CADAAC ADRP X20, 0x22A1000
	0x01CADAB0 LDR X20, [X20 + 0x1C0]
	0x01CADAB4 LDR X0, [X20]
	0x01CADAB8 LDR W8, [X0 + 0xE0]
	0x01CADABC CBNZ W8, 0x1CADAC4
	0x01CADAC0 BL 0x1B6E8F8
	0x01CADAC4 MOV X0, X19
	0x01CADAC8 MOV X1, X31
	0x01CADACC BL 0x1D697C8
	0x01CADAD0 LDR X0, [X19 + 0x38]
	0x01CADAD4 CBZ X0, 0x1CADBE4
	0x01CADAD8 MOV X1, X31
	0x01CADADC BL 0x1D87040
	0x01CADAE0 CMP W0, 0x4
	0x01CADAE4 B.NE 0x1CADAF4
	0x01CADAE8 LDP X20, X19, [X31 + 0x10]
	0x01CADAEC LDR X30, [X31], #0x20
	0x01CADAF0 RET
	0x01CADAF4 LDR X0, [X19 + 0x40]
	0x01CADAF8 CBZ X0, 0x1CADBE4
	0x01CADAFC MOV X1, X31
	0x01CADB00 BL 0x1D9F538
	0x01CADB04 ANDS W31, W0, 0x7
	0x01CADB08 B.EQ 0x1CADB6C
	0x01CADB0C TBNZ X0, 0x0, 0x1CADA9C
	0x01CADB10 LDR X8, [X19 + 0x38]
	0x01CADB14 CBZ X8, 0x1CADBE4
	0x01CADB18 LDR X0, [X8 + 0x50]
	0x01CADB1C CBZ X0, 0x1CADBE4
	0x01CADB20 MOV X1, X31
	0x01CADB24 BL 0x1DBEFE4
	0x01CADB28 TBZ X0, 0x0, 0x1CADAE8
	0x01CADB2C LDR X8, [X19 + 0x38]
	0x01CADB30 CBZ X8, 0x1CADBE4
	0x01CADB34 LDR X0, [X8 + 0x50]
	0x01CADB38 MOVZ W1, 0x8
	0x01CADB3C MOV X2, X31
	0x01CADB40 BL 0x1DD601C
	0x01CADB44 MOV X20, X0
	0x01CADB48 MOVZ W0, 0x1
	0x01CADB4C MOV X1, X31
	0x01CADB50 BL 0x1D29EBC
	0x01CADB54 LDR X8, [X19 + 0x40]
	0x01CADB58 CBZ X8, 0x1CADBE4
	0x01CADB5C LDR X8, [X8 + 0x20]
	0x01CADB60 CBZ X8, 0x1CADBA4
	0x01CADB64 LDR W0, [X8]
	0x01CADB68 B 0x1CADBA8
	0x01CADB6C LDR X0, [X20]
	0x01CADB70 LDR X19, [X19 + 0x40]
	0x01CADB74 LDR W8, [X0 + 0xE0]
	0x01CADB78 CBNZ W8, 0x1CADB80
	0x01CADB7C BL 0x1B6E8F8
	0x01CADB80 ADRP X8, 0x22A1000
	0x01CADB84 LDR X8, [X8 + 0x968]
	0x01CADB88 MOV X1, X19
	0x01CADB8C LDP X20, X19, [X31 + 0x10]
	0x01CADB90 MOVZ W2, 0x7
	0x01CADB94 LDR X0, [X8]
	0x01CADB98 MOV X3, X31
	0x01CADB9C LDR X30, [X31], #0x20
	0x01CADBA0 B 0x1D69640
	0x01CADBA4 MOV X0, X31
	0x01CADBA8 LDR W1, [X19 + 0x68]
	0x01CADBAC MOVZ W2, 0x1
	0x01CADBB0 MOV X3, X31
	0x01CADBB4 BL 0x1DA8258
	0x01CADBB8 STUR X0, [X20 + 0x1C]
	0x01CADBBC CBZ X20, 0x1CADBE4
	0x01CADBC0 MOVZ W8, 0x40
	0x01CADBC4 STR W8, [X20 + 0xC]
	0x01CADBC8 LDR X0, [X19 + 0x38]
	0x01CADBCC CBZ X0, 0x1CADBE4
	0x01CADBD0 MOV X1, X20
	0x01CADBD4 LDP X20, X19, [X31 + 0x10]
	0x01CADBD8 MOV X2, X31
	0x01CADBDC LDR X30, [X31], #0x20
	0x01CADBE0 B 0x1D8A710
	0x01CADBE4 BL 0x1B6EA1C
	0x01CADBE8 SUB X31, X31, 0xD0
	0x01CADBEC STP D13, D12, [X31 + 0x60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2577000
	005 Move W8, [X20+1176]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x22A2000
	012 Move X0, [X0+448]
	013 Call 0x1B6F7F0
	014 Move X0, 0x22A2000
	015 Move X0, [X0+2288]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X20+1176], W8
	019 Move W8, [X19+88]
	020 Compare W8, 0
	021 JumpIfEqual {33}
	022 Move [X19+88], W31
	023 Move X0, X19
	024 Call Scanner.get_isOn, X0
	025 NotImplemented "Instruction ORN not yet implemented."
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 And W1, W8, 1
	030 Move X30, [X31+32]
	031 Call Scanner.set_isOn, X0, X1
	032 Return 
	033 Move X20, 0x22A2000
	034 Move X20, [X20+448]
	035 Move X0, [X20]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1B6F8F8
	040 Move X0, X19
	041 Move X1, X31
	042 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	043 Move X0, [X19+56]
	044 Compare X0, 0
	045 JumpIfEqual {130}
	046 Move X1, X31
	047 Call NetworkRunner.get_Stage, X0
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Return 
	053 Move X0, [X19+64]
	054 Compare X0, 0
	055 JumpIfEqual {130}
	056 Move X1, X31
	057 Call NetworkObject.GetLocalAuthorityMask, X0
	058 And W31, W0, 7
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {23}
	063 Move X8, [X19+56]
	064 Compare X8, 0
	065 JumpIfEqual {130}
	066 Move X0, [X8+80]
	067 Compare X0, 0
	068 JumpIfEqual {130}
	069 Move X1, X31
	070 Call Simulation.HasAnyActiveConnections, X0
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {49}
	075 Move X8, [X19+56]
	076 Compare X8, 0
	077 JumpIfEqual {130}
	078 Move X0, [X8+80]
	079 Move W1, 8
	080 Move X2, X31
	081 Call SimulationMessage.Allocate, X0, X1
	082 Move X20, X0
	083 Move W0, 1
	084 Move X1, X31
	085 Call Assert.Check, X0
	086 Move X8, [X19+64]
	087 Compare X8, 0
	088 JumpIfEqual {130}
	089 Move X8, [X8+32]
	090 Compare X8, 0
	091 JumpIfEqual {110}
	092 Move W0, [X8]
	093 Move X0, [X20]
	094 Move X19, [X19+64]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1B6F8F8
	099 Move X8, 0x22A2000
	100 Move X8, [X8+2288]
	101 Move X1, X19
	102 Move X20, [X31+16]
	103 Move X19, [X31+24]
	104 Move W2, 7
	105 Move X0, [X8]
	106 Move X3, X31
	107 Move X30, [X31+32]
	108 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	109 Return 
	110 Move X0, X31
	111 Move W1, [X19+104]
	112 Move W2, 1
	113 Move X3, X31
	114 Call RpcHeader.Create, X0, X1, X2
	115 Move [X20+28], X0
	116 Compare X20, 0
	117 JumpIfEqual {130}
	118 Move W8, 64
	119 Move [X20+12], W8
	120 Move X0, [X19+56]
	121 Compare X0, 0
	122 JumpIfEqual {130}
	123 Move X1, X20
	124 Move X20, [X31+16]
	125 Move X19, [X31+24]
	126 Move X2, X31
	127 Move X30, [X31+32]
	128 Call NetworkRunner.SendRpc, X0, X1
	129 Return 
	130 Call 0x1B6FA1C

Method: System.Void HandleToggleUse()

Disassembly:
	0x01CADBF0 STP D11, D10, [X31 + 0x70]

ISIL:
	001 Call Scanner.RPC_ToggleOnOff, X0
	002 Return 

Method: System.Void Update()

Disassembly:
	0x01CADBF4 STP D9, D8, [X31 + 0x80]
	0x01CADBF8 STR X30, [X31 + 0x90]
	0x01CADBFC STP X24, X23, [X31 + 0xA0]
	0x01CADC00 STP X22, X21, [X31 + 0xB0]
	0x01CADC04 STP X20, X19, [X31 + 0xC0]
	0x01CADC08 ADRP X20, 0x2576000
	0x01CADC0C LDRB W8, [X20 + 0x4A5]
	0x01CADC10 MOV X19, X0
	0x01CADC14 TBNZ X8, 0x0, 0x1CADC98
	0x01CADC18 ADRP X0, 0x22A1000
	0x01CADC1C LDR X0, [X0 + 0x970]
	0x01CADC20 BL 0x1B6E7F0
	0x01CADC24 ADRP X0, 0x22A1000
	0x01CADC28 LDR X0, [X0 + 0x978]
	0x01CADC2C BL 0x1B6E7F0
	0x01CADC30 ADRP X0, 0x22A1000
	0x01CADC34 LDR X0, [X0 + 0x980]
	0x01CADC38 BL 0x1B6E7F0
	0x01CADC3C ADRP X0, 0x22A1000
	0x01CADC40 LDR X0, [X0 + 0x988]
	0x01CADC44 BL 0x1B6E7F0
	0x01CADC48 ADRP X0, 0x22A1000
	0x01CADC4C LDR X0, [X0 + 0x990]
	0x01CADC50 BL 0x1B6E7F0
	0x01CADC54 ADRP X0, 0x22A1000
	0x01CADC58 LDR X0, [X0 + 0x998]
	0x01CADC5C BL 0x1B6E7F0
	0x01CADC60 ADRP X0, 0x22A0000
	0x01CADC64 LDR X0, [X0 + 0x4B8]
	0x01CADC68 BL 0x1B6E7F0
	0x01CADC6C ADRP X0, 0x22A1000
	0x01CADC70 LDR X0, [X0 + 0x9A0]
	0x01CADC74 BL 0x1B6E7F0
	0x01CADC78 ADRP X0, 0x22A1000
	0x01CADC7C LDR X0, [X0 + 0x9A8]
	0x01CADC80 BL 0x1B6E7F0
	0x01CADC84 ADRP X0, 0x22A0000
	0x01CADC88 LDR X0, [X0 + 0x478]
	0x01CADC8C BL 0x1B6E7F0
	0x01CADC90 MOVZ W8, 0x1
	0x01CADC94 STRB W8, [X20 + 0x4A5]
	0x01CADC98 MOVI V0.2D, 0x0
	0x01CADC9C MOV X0, X19
	0x01CADCA0 STR X31, [X31 + 0x50]
	0x01CADCA4 STP V0, V0, [X31 + 0x30]
	0x01CADCA8 BL 0x1CAD684
	0x01CADCAC STR W0, [X31 + 0x98]
	0x01CADCB0 LDR X1, [X19 + 0x38]
	0x01CADCB4 ADD X0, X31, 0x98
	0x01CADCB8 MOV X2, X31
	0x01CADCBC BL 0x1D9CC70
	0x01CADCC0 TBZ X0, 0x0, 0x1CAE050
	0x01CADCC4 ADRP X8, 0x22A1000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2577000
	006 Move X20, 0x22A1000
	007 Move W8, [X21+1177]
	008 Move X20, [X20+1144]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x22A2000
	015 Move X0, [X0+2296]
	016 Call 0x1B6F7F0
	017 Move X0, 0x22A1000
	018 Move X0, [X0+1144]
	019 Call 0x1B6F7F0
	020 Move W8, 1
	021 Move [X21+1177], W8
	022 Move X0, [X20]
	023 Move X20, [X19+64]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1B6F8F8
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Inequality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {71}
	036 Move X0, [X19+64]
	037 Compare X0, 0
	038 JumpIfEqual {76}
	039 Move X1, X31
	040 Call NetworkObject.get_IsValid, X0
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {71}
	045 Move X0, X19
	046 Call Scanner.get_isOn, X0
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {71}
	051 Move X8, 0x22A2000
	052 Move X8, [X8+2296]
	053 Move X21, [X19+176]
	054 Move X20, [X19+184]
	055 Move X19, [X19+160]
	056 Move X0, [X8]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1B6F8F8
	061 Move X1, X20
	062 Move X2, X19
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X0, X21
	066 Move X3, X31
	067 Move X30, [X31+32]
	068 Move X21, [X31+40]
	069 Call Graphics.Blit, X0, X1, X2
	070 Return 
	071 Move X20, [X31+16]
	072 Move X19, [X31+24]
	073 Move X30, [X31+32]
	074 Move X21, [X31+40]
	075 Return 
	076 Call 0x1B6FA1C

Method: System.Void HandleIsOnChanged()

Disassembly:
	0x01CAD9CC MOV X2, X31
	0x01CAD9D0 BL 0x322A948
	0x01CAD9D4 CBZ X0, 0x1CAD9FC
	0x01CAD9D8 LDR X1, [X22]
	0x01CAD9DC LDR X8, [X0]
	0x01CAD9E0 CMP X8, X1
	0x01CAD9E4 B.NE 0x1CAD9F8
	0x01CAD9E8 STR X0, [X23 + 0x1A0]
	0x01CAD9EC LDR X8, [X0]
	0x01CAD9F0 CMP X8, X1
	0x01CAD9F4 B.EQ 0x1CADA00
	0x01CAD9F8 BL 0x1B6ECDC
	0x01CAD9FC STR X0, [X23 + 0x1A0]
	0x01CADA00 LDP X20, X19, [X31 + 0x20]
	0x01CADA04 LDP X22, X21, [X31 + 0x10]
	0x01CADA08 LDP X30, X23, [X31], #0x30
	0x01CADA0C RET
	0x01CADA10 BL 0x1B6EA1C
	0x01CADA14 STP X30, X19, [X31 - 0x10]!
	0x01CADA18 MOV X1, X31
	0x01CADA1C MOV X19, X0
	0x01CADA20 BL 0x1D65284
	0x01CADA24 LDR X0, [X19 + 0x40]
	0x01CADA28 CBZ X0, 0x1CADA50
	0x01CADA2C LDRB W8, [X0 + 0x60]
	0x01CADA30 TBNZ X8, 0x1, 0x1CADA50
	0x01CADA34 MOV X1, X31
	0x01CADA38 BL 0x1D9E780
	0x01CADA3C TBZ X0, 0x0, 0x1CADA50
	0x01CADA40 MOVZ W1, 0x2
	0x01CADA44 MOV X0, X19
	0x01CADA48 LDP X30, X19, [X31], #0x10
	0x01CADA4C B 0x1CAD624

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, [X0+136]
	005 Move X19, X0
	006 Call Scanner.get_isOn, X0
	007 Compare X20, 0
	008 JumpIfEqual {41}
	009 And W1, W0, 1
	010 Move X0, X20
	011 Move X2, X31
	012 Call Behaviour.set_enabled, X0, X1
	013 Move X0, X19
	014 Call Scanner.get_isOn, X0
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {23}
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Return 
	023 Move X0, [X19+184]
	024 Move X1, X31
	025 Call RenderTexture.set_active, X0
	026 Move S0, W31
	027 Move S1, W31
	028 Move S2, W31
	029 Move S3, 1
	030 Move W0, 1
	031 Move W1, 1
	032 Move X2, X31
	033 Call GL.Clear, X0, X1, X2
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X0, X31
	037 Move X1, X31
	038 Move X30, [X31+32]
	039 Call RenderTexture.set_active, X0
	040 Return 
	041 Call 0x1B6FA1C

Method: System.Void .ctor()

Disassembly:
	0x01CADCC8 LDR X8, [X8 + 0x980]
	0x01CADCCC LDR X0, [X8]

ISIL:
	001 Move X1, X31
	002 Call NetworkBehaviour..ctor, X0
	003 Return 

Method: System.Void CopyBackingFieldsToState(System.Boolean param_0)

Disassembly:
	0x01CADCD0 BL 0x1B6EA0C
	0x01CADCD4 ADRP X8, 0x22A1000

ISIL:
	001 Move W1, [X0+168]
	002 Call Scanner.set_isOn, X0, X1
	003 Return 

Method: System.Void CopyStateToBackingFields()

Disassembly:
	0x01CADCD8 LDR X8, [X8 + 0x978]
	0x01CADCDC MOV X20, X0
	0x01CADCE0 LDR X1, [X8]
	0x01CADCE4 BL 0x28F9A14
	0x01CADCE8 MOVZ W21, 0x13
	0x01CADCEC MOV X0, X19
	0x01CADCF0 MOV X1, X20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call Scanner.get_isOn, X0
	005 And W8, W0, 1
	006 Move [X19+168], W8
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 

Method: System.Void RPC_ToggleOnOff@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01CADCF4 BL 0x1CAE4E8
	0x01CADCF8 SUBS W21, W21, 0x1
	0x01CADCFC B.NE 0x1CADCEC
	0x01CADD00 CBZ X20, 0x1CAE084
	0x01CADD04 ADRP X8, 0x22A1000
	0x01CADD08 LDR X8, [X8 + 0x970]
	0x01CADD0C MOV X0, X20
	0x01CADD10 LDR X1, [X8]
	0x01CADD14 ADD X8, X31, 0x8
	0x01CADD18 BL 0x28FA6CC
	0x01CADD1C LDUR V0, [X31 + 0x8]
	0x01CADD20 LDUR V1, [X31 + 0x18]
	0x01CADD24 LDR X8, [X31 + 0x28]
	0x01CADD28 ADRP X23, 0x22A1000
	0x01CADD2C LDR X23, [X23 + 0x990]
	0x01CADD30 STP V0, V1, [X31 + 0x30]
	0x01CADD34 STR X8, [X31 + 0x50]
	0x01CADD38 ADRP X24, 0x22A0000
	0x01CADD3C LDR X24, [X24 + 0x4B8]
	0x01CADD40 LDR X1, [X23]
	0x01CADD44 ADD X0, X31, 0x30
	0x01CADD48 BL 0x2A5A3C4
	0x01CADD4C TBZ X0, 0x0, 0x1CADE08
	0x01CADD50 LDR X9, [X31 + 0x48]
	0x01CADD54 CBZ X9, 0x1CAE07C
	0x01CADD58 LDR X8, [X19 + 0x80]
	0x01CADD5C CBZ X8, 0x1CAE080
	0x01CADD60 LDR X10, [X8 + 0x80]
	0x01CADD64 CBZ X10, 0x1CAE074
	0x01CADD68 LDR X20, [X31 + 0x40]
	0x01CADD6C CBZ X20, 0x1CAE078
	0x01CADD70 LDR X8, [X20]
	0x01CADD74 LDR W21, [X9 + 0x10]
	0x01CADD78 LDP S9, S10, [X9 + 0x14]
	0x01CADD7C LDP S11, S8, [X9 + 0x1C]
	0x01CADD80 LDP S13, S12, [X9 + 0x24]
	0x01CADD84 LDR X22, [X10 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2577000
	005 Move W8, [X20+1178]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x22A2000
	012 Move X0, [X0+2304]
	013 Call 0x1B6F7F0
	014 Move W8, 1
	015 Move [X20+1178], W8
	016 Move W0, 1
	017 Move X1, X31
	018 Move W20, 1
	019 Call Assert.Check, X0
	020 Compare X19, 0
	021 JumpIfEqual {42}
	022 Move X9, 0x22A2000
	023 Move X9, [X9+2304]
	024 Move [X19+88], W20
	025 Move X8, [X19]
	026 Move X1, [X9]
	027 Move W10, [X8+304]
	028 Move W9, [X1+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, [X8+200]
	031 Add X8, X8, X9
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Call Scanner.RPC_ToggleOnOff, X0
	039 Return 
	040 Move X0, X19
	041 Call 0x1B6FCDC
	042 Call 0x1B6FA1C

