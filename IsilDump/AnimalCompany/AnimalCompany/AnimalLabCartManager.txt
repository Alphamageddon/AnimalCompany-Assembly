Type: AnimalCompany.AnimalLabCartManager

Method: System.Void Awake()

Disassembly:
	0x01D5B768 BL 0x1D59FC0
	0x01D5B76C STR X0, [X19 + 0x80]
	0x01D5B770 MOV X0, X19
	0x01D5B774 LDP X30, X19, [X31], #0x10
	0x01D5B778 B 0x1D5AB18
	0x01D5B77C BL 0x1C16F20
	0x01D5B780 STR X30, [X31 - 0x40]!
	0x01D5B784 STP X24, X23, [X31 + 0x10]
	0x01D5B788 STP X22, X21, [X31 + 0x20]
	0x01D5B78C STP X20, X19, [X31 + 0x30]
	0x01D5B790 ADRP X23, 0x267D000
	0x01D5B794 ADRP X24, 0x2399000
	0x01D5B798 ADRP X20, 0x239A000
	0x01D5B79C ADRP X22, 0x239A000
	0x01D5B7A0 ADRP X21, 0x239A000
	0x01D5B7A4 LDRB W8, [X23 + 0x80A]
	0x01D5B7A8 LDR X24, [X24 + 0xAA8]
	0x01D5B7AC LDR X20, [X20 + 0x3B0]
	0x01D5B7B0 LDR X22, [X22 + 0x478]
	0x01D5B7B4 LDR X21, [X21 + 0x480]
	0x01D5B7B8 MOV X19, X0
	0x01D5B7BC TBNZ X8, 0x0, 0x1D5B7F8
	0x01D5B7C0 ADRP X0, 0x239A000
	0x01D5B7C4 LDR X0, [X0 + 0x3B0]
	0x01D5B7C8 BL 0x1C16CF4
	0x01D5B7CC ADRP X0, 0x2399000
	0x01D5B7D0 LDR X0, [X0 + 0xAA8]
	0x01D5B7D4 BL 0x1C16CF4
	0x01D5B7D8 ADRP X0, 0x239A000
	0x01D5B7DC LDR X0, [X0 + 0x480]
	0x01D5B7E0 BL 0x1C16CF4
	0x01D5B7E4 ADRP X0, 0x239A000
	0x01D5B7E8 LDR X0, [X0 + 0x478]
	0x01D5B7EC BL 0x1C16CF4
	0x01D5B7F0 MOVZ W8, 0x1
	0x01D5B7F4 STRB W8, [X23 + 0x80A]
	0x01D5B7F8 LDR X0, [X24]
	0x01D5B7FC BL 0x1C16F10
	0x01D5B800 LDR X1, [X20]
	0x01D5B804 MOV X20, X0
	0x01D5B808 BL 0x2DBDE08
	0x01D5B80C STR X20, [X19 + 0x80]
	0x01D5B810 LDR X0, [X22]
	0x01D5B814 BL 0x1C16F10
	0x01D5B818 LDR X1, [X21]
	0x01D5B81C MOV X20, X0
	0x01D5B820 BL 0x301B7C4
	0x01D5B824 STR X20, [X19 + 0x88]
	0x01D5B828 MOV X0, X19
	0x01D5B82C LDP X20, X19, [X31 + 0x30]
	0x01D5B830 LDP X22, X21, [X31 + 0x20]
	0x01D5B834 LDP X24, X23, [X31 + 0x10]
	0x01D5B838 MOV X1, X31
	0x01D5B83C LDR X30, [X31], #0x40
	0x01D5B840 B 0x3C36C30
	0x01D5B844 B 0x1D5B748
	0x01D5B848 STP X30, X23, [X31 - 0x30]!
	0x01D5B84C STP X22, X21, [X31 + 0x10]
	0x01D5B850 STP X20, X19, [X31 + 0x20]
	0x01D5B854 ADRP X20, 0x267D000
	0x01D5B858 LDRB W8, [X20 + 0x80B]
	0x01D5B85C MOV X19, X0
	0x01D5B860 TBNZ X8, 0x0, 0x1D5B89C
	0x01D5B864 ADRP X0, 0x239A000
	0x01D5B868 LDR X0, [X0 + 0x488]
	0x01D5B86C BL 0x1C16CF4
	0x01D5B870 ADRP X0, 0x239A000
	0x01D5B874 LDR X0, [X0 + 0x490]
	0x01D5B878 BL 0x1C16CF4
	0x01D5B87C ADRP X0, 0x239A000
	0x01D5B880 LDR X0, [X0 + 0x498]
	0x01D5B884 BL 0x1C16CF4
	0x01D5B888 ADRP X0, 0x239A000
	0x01D5B88C LDR X0, [X0 + 0x4A0]
	0x01D5B890 BL 0x1C16CF4
	0x01D5B894 MOVZ W8, 0x1
	0x01D5B898 STRB W8, [X20 + 0x80B]
	0x01D5B89C LDR X23, [X19 + 0x28]
	0x01D5B8A0 CBZ X23, 0x1D5BA2C
	0x01D5B8A4 ADRP X22, 0x239A000
	0x01D5B8A8 LDR X22, [X22 + 0x4A0]
	0x01D5B8AC ADRP X21, 0x239A000
	0x01D5B8B0 LDR X20, [X23 + 0x20]
	0x01D5B8B4 LDR X0, [X22]
	0x01D5B8B8 LDR X21, [X21 + 0x498]
	0x01D5B8BC BL 0x1C16F10
	0x01D5B8C0 LDR X2, [X21]
	0x01D5B8C4 MOV X1, X19
	0x01D5B8C8 MOV X3, X31
	0x01D5B8CC MOV X21, X0
	0x01D5B8D0 BL 0x2D32B84
	0x01D5B8D4 MOV X0, X20
	0x01D5B8D8 MOV X1, X21
	0x01D5B8DC MOV X2, X31
	0x01D5B8E0 BL 0x33C0DE4
	0x01D5B8E4 CBZ X0, 0x1D5B918
	0x01D5B8E8 LDR X21, [X22]
	0x01D5B8EC MOV X20, X0
	0x01D5B8F0 MOV X1, X21
	0x01D5B8F4 BL 0x1C16E00
	0x01D5B8F8 CBZ X0, 0x1D5B98C
	0x01D5B8FC STR X0, [X23 + 0x20]
	0x01D5B900 LDR X21, [X22]
	0x01D5B904 MOV X0, X20
	0x01D5B908 MOV X1, X21
	0x01D5B90C BL 0x1C16E00

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x267E000
	009 Move W8, [X20+2052]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x239A000
	016 Move X0, [X0+3696]
	017 Call 0x1C17CF4
	018 Move X0, 0x239B000
	019 Move X0, [X0+976]
	020 Call 0x1C17CF4
	021 Move X0, 0x239B000
	022 Move X0, [X0+984]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+2052], W8
	026 Move X24, [X19+72]
	027 Compare X24, 0
	028 JumpIfEqual {113}
	029 Move X22, 0x239A000
	030 Move X22, [X22+3696]
	031 Move X23, 0x239B000
	032 Move X20, [X24+32]
	033 Move X0, [X22]
	034 Move X23, [X23+976]
	035 Call 0x1C17F10
	036 Move X2, [X23]
	037 Move X1, X19
	038 Move X3, X31
	039 Move X21, X0
	040 Call Action..ctor, X0, X1, X2
	041 Move X0, X20
	042 Move X1, X21
	043 Move X2, X31
	044 Call Delegate.Combine, X0, X1
	045 Move X1, [X22]
	046 Compare X0, 0
	047 JumpIfEqual {53}
	048 Move X8, [X0]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move [X24+32], X0
	051 Move X8, [X0]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move [X24+32], X0
	054 Move X24, [X19+80]
	055 Compare X24, 0
	056 JumpIfEqual {113}
	057 Move X20, [X24+32]
	058 Move X0, X1
	059 Call 0x1C17F10
	060 Move X2, [X23]
	061 Move X1, X19
	062 Move X3, X31
	063 Move X21, X0
	064 Call Action..ctor, X0, X1, X2
	065 Move X0, X20
	066 Move X1, X21
	067 Move X2, X31
	068 Call Delegate.Combine, X0, X1
	069 Move X1, [X22]
	070 Compare X0, 0
	071 JumpIfEqual {77}
	072 Move X8, [X0]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move [X24+32], X0
	075 Move X8, [X0]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move [X24+32], X0
	078 Move X23, [X19+88]
	079 Compare X23, 0
	080 JumpIfEqual {113}
	081 Move X21, 0x239B000
	082 Move X20, [X23+32]
	083 Move X21, [X21+984]
	084 Move X0, X1
	085 Call 0x1C17F10
	086 Move X2, [X21]
	087 Move X1, X19
	088 Move X3, X31
	089 Move X21, X0
	090 Call Action..ctor, X0, X1, X2
	091 Move X0, X20
	092 Move X1, X21
	093 Move X2, X31
	094 Call Delegate.Combine, X0, X1
	095 Compare X0, 0
	096 JumpIfEqual {104}
	097 Move X1, [X22]
	098 Move X8, [X0]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move [X23+32], X0
	101 Move X8, [X0]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Call 0x1C181E0
	104 Move [X23+32], X0
	105 Move X20, [X31+48]
	106 Move X19, [X31+56]
	107 Move X22, [X31+32]
	108 Move X21, [X31+40]
	109 Move X24, [X31+16]
	110 Move X23, [X31+24]
	111 Move X30, [X31+64]
	112 Return 
	113 Call 0x1C17F20

Method: System.Void OnEnable()

Disassembly:
	0x01D5B910 CBNZ X0, 0x1D5B91C
	0x01D5B914 B 0x1D5B98C
	0x01D5B918 STR X31, [X23 + 0x20]
	0x01D5B91C LDR X23, [X19 + 0x30]
	0x01D5B920 CBZ X23, 0x1D5BA2C
	0x01D5B924 LDR X0, [X22]
	0x01D5B928 ADRP X21, 0x239A000
	0x01D5B92C LDR X20, [X23 + 0x20]
	0x01D5B930 LDR X21, [X21 + 0x490]
	0x01D5B934 BL 0x1C16F10
	0x01D5B938 LDR X2, [X21]
	0x01D5B93C MOV X1, X19
	0x01D5B940 MOV X3, X31
	0x01D5B944 MOV X21, X0
	0x01D5B948 BL 0x2D32B84
	0x01D5B94C MOV X0, X20
	0x01D5B950 MOV X1, X21
	0x01D5B954 MOV X2, X31
	0x01D5B958 BL 0x33C0DE4
	0x01D5B95C CBZ X0, 0x1D5B998
	0x01D5B960 LDR X21, [X22]
	0x01D5B964 MOV X20, X0
	0x01D5B968 MOV X1, X21
	0x01D5B96C BL 0x1C16E00
	0x01D5B970 CBZ X0, 0x1D5B98C
	0x01D5B974 STR X0, [X23 + 0x20]
	0x01D5B978 LDR X21, [X22]
	0x01D5B97C MOV X0, X20
	0x01D5B980 MOV X1, X21
	0x01D5B984 BL 0x1C16E00
	0x01D5B988 CBNZ X0, 0x1D5B99C
	0x01D5B98C MOV X0, X20
	0x01D5B990 MOV X1, X21
	0x01D5B994 BL 0x1C171E0
	0x01D5B998 STR X31, [X23 + 0x20]
	0x01D5B99C LDR X23, [X19 + 0x38]
	0x01D5B9A0 CBZ X23, 0x1D5BA2C
	0x01D5B9A4 LDR X0, [X22]
	0x01D5B9A8 ADRP X21, 0x239A000
	0x01D5B9AC LDR X20, [X23 + 0x20]
	0x01D5B9B0 LDR X21, [X21 + 0x488]
	0x01D5B9B4 BL 0x1C16F10
	0x01D5B9B8 LDR X2, [X21]
	0x01D5B9BC MOV X1, X19
	0x01D5B9C0 MOV X3, X31
	0x01D5B9C4 MOV X21, X0
	0x01D5B9C8 BL 0x2D32B84
	0x01D5B9CC MOV X0, X20
	0x01D5B9D0 MOV X1, X21
	0x01D5B9D4 MOV X2, X31
	0x01D5B9D8 BL 0x33C0DE4
	0x01D5B9DC CBZ X0, 0x1D5BA18
	0x01D5B9E0 LDR X20, [X22]
	0x01D5B9E4 MOV X19, X0
	0x01D5B9E8 MOV X1, X20
	0x01D5B9EC BL 0x1C16E00
	0x01D5B9F0 CBZ X0, 0x1D5BA0C
	0x01D5B9F4 STR X0, [X23 + 0x20]
	0x01D5B9F8 LDR X20, [X22]
	0x01D5B9FC MOV X0, X19
	0x01D5BA00 MOV X1, X20
	0x01D5BA04 BL 0x1C16E00
	0x01D5BA08 CBNZ X0, 0x1D5BA1C
	0x01D5BA0C MOV X0, X19
	0x01D5BA10 MOV X1, X20
	0x01D5BA14 BL 0x1C171E0
	0x01D5BA18 STR X31, [X23 + 0x20]
	0x01D5BA1C LDP X20, X19, [X31 + 0x20]
	0x01D5BA20 LDP X22, X21, [X31 + 0x10]
	0x01D5BA24 LDP X30, X23, [X31], #0x30
	0x01D5BA28 RET
	0x01D5BA2C BL 0x1C16F20
	0x01D5BA30 STR X30, [X31 - 0x40]!
	0x01D5BA34 STP X24, X23, [X31 + 0x10]
	0x01D5BA38 STP X22, X21, [X31 + 0x20]
	0x01D5BA3C STP X20, X19, [X31 + 0x30]
	0x01D5BA40 ADRP X23, 0x267D000
	0x01D5BA44 ADRP X24, 0x2398000
	0x01D5BA48 ADRP X19, 0x239A000
	0x01D5BA4C ADRP X22, 0x2398000
	0x01D5BA50 ADRP X21, 0x2398000
	0x01D5BA54 LDRB W8, [X23 + 0x80C]
	0x01D5BA58 LDR X24, [X24 + 0xDA0]
	0x01D5BA5C LDR X19, [X19 + 0x4A8]
	0x01D5BA60 LDR X22, [X22 + 0xDB0]
	0x01D5BA64 LDR X21, [X21 + 0x648]
	0x01D5BA68 MOV X20, X0
	0x01D5BA6C TBNZ X8, 0x0, 0x1D5BAA8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x267E000
	009 Move X24, 0x2399000
	010 Move X19, 0x239B000
	011 Move X22, 0x2399000
	012 Move X21, 0x2399000
	013 Move W8, [X23+2053]
	014 Move X24, [X24+3488]
	015 Move X19, [X19+992]
	016 Move X22, [X22+3504]
	017 Move X21, [X21+1608]
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x239B000
	024 Move X0, [X0+992]
	025 Call 0x1C17CF4
	026 Move X0, 0x2399000
	027 Move X0, [X0+1608]
	028 Call 0x1C17CF4
	029 Move X0, 0x2399000
	030 Move X0, [X0+3504]
	031 Call 0x1C17CF4
	032 Move X0, 0x2399000
	033 Move X0, [X0+3488]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+2053], W8
	037 Move X0, [X24]
	038 Call 0x1C17F10
	039 Move X2, [X19]
	040 Move X1, X20
	041 Move X3, X31
	042 Move X19, X0
	043 Call ObserverDelegate..ctor, X0, X1, X2
	044 Move X0, [X22]
	045 Move W1, 1
	046 Call 0x1C17D6C
	047 Move X8, [X21]
	048 Move X20, X0
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Move X22, 0x267E000
	055 Move W8, [X22+1927]
	056 Compare W8, 0
	057 JumpIfNotEqual {63}
	058 Move X0, 0x2399000
	059 Move X0, [X0+1608]
	060 Call 0x1C17CF4
	061 Move W8, 1
	062 Move [X22+1927], W8
	063 Move X0, [X21]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {69}
	067 Call 0x1C17DFC
	068 Move X0, [X21]
	069 Move X8, [X0+184]
	070 Move X8, [X8]
	071 Compare X8, 0
	072 JumpIfEqual {103}
	073 Move X8, [X8+184]
	074 Compare X8, 0
	075 JumpIfEqual {103}
	076 Compare X20, 0
	077 JumpIfEqual {103}
	078 Move X21, [X8+128]
	079 Compare X21, 0
	080 JumpIfEqual {87}
	081 Move X8, [X20]
	082 Move X0, X21
	083 Move X1, [X8+64]
	084 Call 0x1C17E00
	085 Compare X0, 0
	086 JumpIfEqual {105}
	087 Move W8, [X20+24]
	088 Compare W8, 0
	089 JumpIfEqual {104}
	090 Move [X20+32], X21
	091 Move X0, X19
	092 Move X1, X20
	093 Move X20, [X31+48]
	094 Move X19, [X31+56]
	095 Move X22, [X31+32]
	096 Move X21, [X31+40]
	097 Move X24, [X31+16]
	098 Move X23, [X31+24]
	099 Move X2, X31
	100 Move X30, [X31+64]
	101 Call App.RegisterObserver, X0, X1
	102 Return 
	103 Call 0x1C17F20
	104 Call 0x1C17F28
	105 Call 0x1C17F44
	106 Move X1, X31
	107 Call 0x1C17DEC

Method: System.Void OnDisable()

Disassembly:
	0x01D5BA70 ADRP X0, 0x239A000
	0x01D5BA74 LDR X0, [X0 + 0x4A8]
	0x01D5BA78 BL 0x1C16CF4
	0x01D5BA7C ADRP X0, 0x2398000
	0x01D5BA80 LDR X0, [X0 + 0x648]
	0x01D5BA84 BL 0x1C16CF4
	0x01D5BA88 ADRP X0, 0x2398000
	0x01D5BA8C LDR X0, [X0 + 0xDB0]
	0x01D5BA90 BL 0x1C16CF4
	0x01D5BA94 ADRP X0, 0x2398000
	0x01D5BA98 LDR X0, [X0 + 0xDA0]
	0x01D5BA9C BL 0x1C16CF4
	0x01D5BAA0 MOVZ W8, 0x1
	0x01D5BAA4 STRB W8, [X23 + 0x80C]
	0x01D5BAA8 LDR X0, [X24]
	0x01D5BAAC BL 0x1C16F10
	0x01D5BAB0 LDR X2, [X19]
	0x01D5BAB4 MOV X1, X20
	0x01D5BAB8 MOV X3, X31
	0x01D5BABC MOV X19, X0
	0x01D5BAC0 BL 0x35C52F0
	0x01D5BAC4 LDR X0, [X22]
	0x01D5BAC8 MOVZ W1, 0x1
	0x01D5BACC BL 0x1C16D6C
	0x01D5BAD0 LDR X8, [X21]
	0x01D5BAD4 MOV X20, X0
	0x01D5BAD8 LDR W9, [X8 + 0xE0]
	0x01D5BADC CBNZ W9, 0x1D5BAE8
	0x01D5BAE0 MOV X0, X8
	0x01D5BAE4 BL 0x1C16DFC
	0x01D5BAE8 ADRP X22, 0x267D000
	0x01D5BAEC LDRB W8, [X22 + 0x787]
	0x01D5BAF0 CBNZ W8, 0x1D5BB08
	0x01D5BAF4 ADRP X0, 0x2398000
	0x01D5BAF8 LDR X0, [X0 + 0x648]
	0x01D5BAFC BL 0x1C16CF4
	0x01D5BB00 MOVZ W8, 0x1
	0x01D5BB04 STRB W8, [X22 + 0x787]
	0x01D5BB08 LDR X0, [X21]
	0x01D5BB0C LDR W8, [X0 + 0xE0]
	0x01D5BB10 CBNZ W8, 0x1D5BB1C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x267E000
	008 Move X23, 0x2399000
	009 Move X20, 0x239B000
	010 Move X21, 0x2399000
	011 Move W8, [X22+2054]
	012 Move X23, [X23+3488]
	013 Move X20, [X20+992]
	014 Move X21, [X21+1608]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x239B000
	021 Move X0, [X0+992]
	022 Call 0x1C17CF4
	023 Move X0, 0x2399000
	024 Move X0, [X0+1608]
	025 Call 0x1C17CF4
	026 Move X0, 0x2399000
	027 Move X0, [X0+3488]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+2054], W8
	031 Move X0, [X23]
	032 Call 0x1C17F10
	033 Move X2, [X20]
	034 Move X1, X19
	035 Move X3, X31
	036 Move X20, X0
	037 Call ObserverDelegate..ctor, X0, X1, X2
	038 Move X0, [X21]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X20
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X1, X31
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Call App.DeregisterObserver, X0
	052 Return 

Method: System.Void OnWalletValueChanged(SpatialSys.ObservableState.StateChangedEventArgs args)

Disassembly:
	0x01D5BB14 BL 0x1C16DFC

ISIL:
No ISIL was generated
Method: System.Void RecalculateCart()

Disassembly:
	0x01D5C074 CBZ X8, 0x1D5C15C
	0x01D5C078 ADRP X9, 0x2397000
	0x01D5C07C LDR X9, [X9 + 0xAB0]
	0x01D5C080 ADRP X20, 0x2399000
	0x01D5C084 LDR X20, [X20 + 0x4B8]
	0x01D5C088 LDR V1, [X19 + 0x20]
	0x01D5C08C LDP S9, S0, [X8 + 0x4C]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call AvatarItemUtil.GetItemsToPurchaseForDraftAvatar
	005 Move [X19+128], X0
	006 Move X0, X19
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Call AnimalLabCartManager.UpdateCartUI, X0
	010 Return 

Method: System.Void UpdateCartUI()

Disassembly:
	0x01D5BB18 LDR X0, [X21]
	0x01D5BB1C LDR X8, [X0 + 0xB8]
	0x01D5BB20 LDR X8, [X8]
	0x01D5BB24 CBZ X8, 0x1D5BB84
	0x01D5BB28 LDR X8, [X8 + 0xB8]
	0x01D5BB2C CBZ X8, 0x1D5BB84
	0x01D5BB30 LDR X8, [X8 + 0x78]
	0x01D5BB34 CBZ X8, 0x1D5BB84
	0x01D5BB38 CBZ X20, 0x1D5BB84
	0x01D5BB3C LDR X21, [X8 + 0x50]
	0x01D5BB40 CBZ X21, 0x1D5BB58
	0x01D5BB44 LDR X8, [X20]
	0x01D5BB48 MOV X0, X21
	0x01D5BB4C LDR X1, [X8 + 0x40]
	0x01D5BB50 BL 0x1C16E00
	0x01D5BB54 CBZ X0, 0x1D5BB8C
	0x01D5BB58 LDR W8, [X20 + 0x18]
	0x01D5BB5C CBZ W8, 0x1D5BB88
	0x01D5BB60 STR X21, [X20 + 0x20]
	0x01D5BB64 MOV X0, X19
	0x01D5BB68 MOV X1, X20
	0x01D5BB6C LDP X20, X19, [X31 + 0x30]
	0x01D5BB70 LDP X22, X21, [X31 + 0x20]
	0x01D5BB74 LDP X24, X23, [X31 + 0x10]
	0x01D5BB78 MOV X2, X31
	0x01D5BB7C LDR X30, [X31], #0x40
	0x01D5BB80 B 0x1D363F0
	0x01D5BB84 BL 0x1C16F20
	0x01D5BB88 BL 0x1C16F28
	0x01D5BB8C BL 0x1C16F44
	0x01D5BB90 MOV X1, X31
	0x01D5BB94 BL 0x1C16DEC
	0x01D5BB98 STP X30, X23, [X31 - 0x30]!
	0x01D5BB9C STP X22, X21, [X31 + 0x10]
	0x01D5BBA0 STP X20, X19, [X31 + 0x20]
	0x01D5BBA4 ADRP X22, 0x267D000
	0x01D5BBA8 ADRP X23, 0x2398000
	0x01D5BBAC ADRP X20, 0x239A000
	0x01D5BBB0 ADRP X21, 0x2398000
	0x01D5BBB4 LDRB W8, [X22 + 0x80D]
	0x01D5BBB8 LDR X23, [X23 + 0xDA0]
	0x01D5BBBC LDR X20, [X20 + 0x4A8]
	0x01D5BBC0 LDR X21, [X21 + 0x648]
	0x01D5BBC4 MOV X19, X0
	0x01D5BBC8 TBNZ X8, 0x0, 0x1D5BBF8
	0x01D5BBCC ADRP X0, 0x239A000
	0x01D5BBD0 LDR X0, [X0 + 0x4A8]
	0x01D5BBD4 BL 0x1C16CF4
	0x01D5BBD8 ADRP X0, 0x2398000
	0x01D5BBDC LDR X0, [X0 + 0x648]
	0x01D5BBE0 BL 0x1C16CF4
	0x01D5BBE4 ADRP X0, 0x2398000
	0x01D5BBE8 LDR X0, [X0 + 0xDA0]
	0x01D5BBEC BL 0x1C16CF4
	0x01D5BBF0 MOVZ W8, 0x1
	0x01D5BBF4 STRB W8, [X22 + 0x80D]
	0x01D5BBF8 LDR X0, [X23]
	0x01D5BBFC BL 0x1C16F10
	0x01D5BC00 LDR X2, [X20]
	0x01D5BC04 MOV X1, X19
	0x01D5BC08 MOV X3, X31
	0x01D5BC0C MOV X20, X0
	0x01D5BC10 BL 0x35C52F0
	0x01D5BC14 LDR X0, [X21]
	0x01D5BC18 LDR W8, [X0 + 0xE0]
	0x01D5BC1C CBNZ W8, 0x1D5BC24
	0x01D5BC20 BL 0x1C16DFC
	0x01D5BC24 MOV X0, X20
	0x01D5BC28 LDP X20, X19, [X31 + 0x20]
	0x01D5BC2C LDP X22, X21, [X31 + 0x10]
	0x01D5BC30 MOV X1, X31
	0x01D5BC34 LDP X30, X23, [X31], #0x30
	0x01D5BC38 B 0x1D36978
	0x01D5BC3C SUB X31, X31, 0x40
	0x01D5BC40 STP D9, D8, [X31 + 0x10]
	0x01D5BC44 STP X30, X21, [X31 + 0x20]
	0x01D5BC48 STP X20, X19, [X31 + 0x30]
	0x01D5BC4C ADRP X21, 0x267D000
	0x01D5BC50 ADRP X20, 0x2398000
	0x01D5BC54 LDRB W8, [X21 + 0x80E]
	0x01D5BC58 LDR X20, [X20 + 0x648]
	0x01D5BC5C MOV X19, X0
	0x01D5BC60 TBNZ X8, 0x0, 0x1D5BC90
	0x01D5BC64 ADRP X0, 0x2398000
	0x01D5BC68 LDR X0, [X0 + 0x648]
	0x01D5BC6C BL 0x1C16CF4
	0x01D5BC70 ADRP X0, 0x2399000
	0x01D5BC74 LDR X0, [X0 + 0xB18]
	0x01D5BC78 BL 0x1C16CF4
	0x01D5BC7C ADRP X0, 0x239A000
	0x01D5BC80 LDR X0, [X0 + 0x4B0]
	0x01D5BC84 BL 0x1C16CF4
	0x01D5BC88 MOVZ W8, 0x1
	0x01D5BC8C STRB W8, [X21 + 0x80E]
	0x01D5BC90 LDR X0, [X20]
	0x01D5BC94 LDR W8, [X0 + 0xE0]
	0x01D5BC98 CBNZ W8, 0x1D5BCA0
	0x01D5BC9C BL 0x1C16DFC
	0x01D5BCA0 ADRP X21, 0x267D000
	0x01D5BCA4 LDRB W8, [X21 + 0x787]
	0x01D5BCA8 CBNZ W8, 0x1D5BCC0
	0x01D5BCAC ADRP X0, 0x2398000
	0x01D5BCB0 LDR X0, [X0 + 0x648]
	0x01D5BCB4 BL 0x1C16CF4
	0x01D5BCB8 MOVZ W8, 0x1
	0x01D5BCBC STRB W8, [X21 + 0x787]
	0x01D5BCC0 LDR X0, [X20]
	0x01D5BCC4 LDR W8, [X0 + 0xE0]
	0x01D5BCC8 CBNZ W8, 0x1D5BCD4
	0x01D5BCCC BL 0x1C16DFC
	0x01D5BCD0 LDR X0, [X20]
	0x01D5BCD4 LDR X8, [X0 + 0xB8]
	0x01D5BCD8 LDR X8, [X8]
	0x01D5BCDC CBZ X8, 0x1D5BDDC
	0x01D5BCE0 LDR X8, [X8 + 0xB8]
	0x01D5BCE4 CBZ X8, 0x1D5BDDC
	0x01D5BCE8 LDR X8, [X8 + 0x78]
	0x01D5BCEC CBZ X8, 0x1D5BDDC
	0x01D5BCF0 LDR X8, [X8 + 0x50]
	0x01D5BCF4 CBZ X8, 0x1D5BDDC
	0x01D5BCF8 ADRP X21, 0x239A000
	0x01D5BCFC LDR X21, [X21 + 0x4B0]
	0x01D5BD00 LDP S0, S9, [X8 + 0x4C]
	0x01D5BD04 LDR V8, [X8 + 0x54]
	0x01D5BD08 LDR X20, [X19 + 0x40]
	0x01D5BD0C LDR X1, [X21]
	0x01D5BD10 MOVZ W8, 0x437F0000
	0x01D5BD14 FMOV S1, W8
	0x01D5BD18 FMUL S0, S0, S1
	0x01D5BD1C ADD X0, X31, 0xC
	0x01D5BD20 MOV X2, X31
	0x01D5BD24 STR S0, [X31 + 0xC]
	0x01D5BD28 BL 0x338FF2C
	0x01D5BD2C CBZ X20, 0x1D5BDDC
	0x01D5BD30 LDR X8, [X20]
	0x01D5BD34 MOV X1, X0
	0x01D5BD38 MOV X0, X20
	0x01D5BD3C LDR X9, [X8 + 0x558]
	0x01D5BD40 LDR X2, [X8 + 0x560]
	0x01D5BD44 BLR X9
	0x01D5BD48 LDR X1, [X21]
	0x01D5BD4C LDR X20, [X19 + 0x48]
	0x01D5BD50 MOVZ W8, 0x437F0000
	0x01D5BD54 FMOV S0, W8
	0x01D5BD58 FMUL S0, S9, S0
	0x01D5BD5C ADD X0, X31, 0xC
	0x01D5BD60 MOV X2, X31
	0x01D5BD64 STR S0, [X31 + 0xC]
	0x01D5BD68 BL 0x338FF2C
	0x01D5BD6C CBZ X20, 0x1D5BDDC
	0x01D5BD70 LDR X8, [X20]
	0x01D5BD74 MOV X1, X0
	0x01D5BD78 MOV X0, X20
	0x01D5BD7C LDR X9, [X8 + 0x558]
	0x01D5BD80 LDR X2, [X8 + 0x560]
	0x01D5BD84 BLR X9
	0x01D5BD88 LDR X1, [X21]
	0x01D5BD8C LDR X19, [X19 + 0x50]
	0x01D5BD90 MOVZ W8, 0x437F0000
	0x01D5BD94 FMOV S0, W8
	0x01D5BD98 FMUL S0, S8, S0
	0x01D5BD9C ADD X0, X31, 0xC
	0x01D5BDA0 MOV X2, X31
	0x01D5BDA4 STR S0, [X31 + 0xC]
	0x01D5BDA8 BL 0x338FF2C
	0x01D5BDAC CBZ X19, 0x1D5BDDC
	0x01D5BDB0 LDR X8, [X19]
	0x01D5BDB4 MOV X1, X0
	0x01D5BDB8 MOV X0, X19
	0x01D5BDBC LDR X9, [X8 + 0x558]
	0x01D5BDC0 LDR X2, [X8 + 0x560]
	0x01D5BDC4 BLR X9
	0x01D5BDC8 LDP X20, X19, [X31 + 0x30]
	0x01D5BDCC LDP X30, X21, [X31 + 0x20]
	0x01D5BDD0 LDP D9, D8, [X31 + 0x10]
	0x01D5BDD4 ADD X31, X31, 0x40
	0x01D5BDD8 RET
	0x01D5BDDC BL 0x1C16F20
	0x01D5BDE0 STR D10, [X31 - 0x40]!
	0x01D5BDE4 STP D9, D8, [X31 + 0x10]
	0x01D5BDE8 STP X30, X21, [X31 + 0x20]
	0x01D5BDEC STP X20, X19, [X31 + 0x30]
	0x01D5BDF0 ADRP X21, 0x267D000
	0x01D5BDF4 ADRP X20, 0x2398000
	0x01D5BDF8 LDRB W8, [X21 + 0x80F]
	0x01D5BDFC LDR X20, [X20 + 0x648]
	0x01D5BE00 MOV V8.16B, V0.16B
	0x01D5BE04 MOV X19, X0
	0x01D5BE08 TBNZ X8, 0x0, 0x1D5BE44
	0x01D5BE0C ADRP X0, 0x2398000
	0x01D5BE10 LDR X0, [X0 + 0x648]
	0x01D5BE14 BL 0x1C16CF4
	0x01D5BE18 ADRP X0, 0x2398000
	0x01D5BE1C LDR X0, [X0 + 0xAB0]
	0x01D5BE20 BL 0x1C16CF4
	0x01D5BE24 ADRP X0, 0x239A000
	0x01D5BE28 LDR X0, [X0 + 0x4B8]
	0x01D5BE2C BL 0x1C16CF4
	0x01D5BE30 ADRP X0, 0x2399000
	0x01D5BE34 LDR X0, [X0 + 0xB18]
	0x01D5BE38 BL 0x1C16CF4
	0x01D5BE3C MOVZ W8, 0x1
	0x01D5BE40 STRB W8, [X21 + 0x80F]
	0x01D5BE44 LDR X0, [X20]
	0x01D5BE48 LDR W8, [X0 + 0xE0]
	0x01D5BE4C CBNZ W8, 0x1D5BE54
	0x01D5BE50 BL 0x1C16DFC
	0x01D5BE54 ADRP X21, 0x267D000
	0x01D5BE58 LDRB W8, [X21 + 0x787]
	0x01D5BE5C CBNZ W8, 0x1D5BE74
	0x01D5BE60 ADRP X0, 0x2398000
	0x01D5BE64 LDR X0, [X0 + 0x648]
	0x01D5BE68 BL 0x1C16CF4
	0x01D5BE6C MOVZ W8, 0x1
	0x01D5BE70 STRB W8, [X21 + 0x787]
	0x01D5BE74 LDR X0, [X20]
	0x01D5BE78 LDR W8, [X0 + 0xE0]
	0x01D5BE7C CBNZ W8, 0x1D5BE88
	0x01D5BE80 BL 0x1C16DFC
	0x01D5BE84 LDR X0, [X20]
	0x01D5BE88 LDR X8, [X0 + 0xB8]
	0x01D5BE8C LDR X8, [X8]
	0x01D5BE90 CBZ X8, 0x1D5BF98
	0x01D5BE94 LDR X8, [X8 + 0xB8]
	0x01D5BE98 CBZ X8, 0x1D5BF98
	0x01D5BE9C LDR X8, [X8 + 0x78]
	0x01D5BEA0 CBZ X8, 0x1D5BF98
	0x01D5BEA4 LDR X8, [X8 + 0x50]
	0x01D5BEA8 CBZ X8, 0x1D5BF98
	0x01D5BEAC ADRP X9, 0x2398000
	0x01D5BEB0 LDR X9, [X9 + 0xAB0]
	0x01D5BEB4 ADRP X20, 0x239A000
	0x01D5BEB8 LDR X20, [X20 + 0x4B8]
	0x01D5BEBC LDR V1, [X19 + 0x20]
	0x01D5BEC0 LDR V0, [X8 + 0x4C]
	0x01D5BEC4 LDR X0, [X9]
	0x01D5BEC8 LDR V9, [X8 + 0x50]
	0x01D5BECC LDR V10, [X8 + 0x58]
	0x01D5BED0 FMUL S1, S1, S8
	0x01D5BED4 FMOV S2, 1
	0x01D5BED8 FADD S0, S0, S1
	0x01D5BEDC FMIN S1, S0, S2
	0x01D5BEE0 FCMP S0, 0x0
	0x01D5BEE4 FMOV S0, W31
	0x01D5BEE8 MOVZ W1, 0x1
	0x01D5BEEC FCSEL S8, S1, S0, PL
	0x01D5BEF0 BL 0x1C16D6C
	0x01D5BEF4 LDR X8, [X20]
	0x01D5BEF8 MOV X19, X0
	0x01D5BEFC MOV X0, X8
	0x01D5BF00 BL 0x1C16F10
	0x01D5BF04 MOV X1, X31
	0x01D5BF08 MOV X20, X0
	0x01D5BF0C BL 0x1D36B98
	0x01D5BF10 LDR X8, [X20]
	0x01D5BF14 STR S8, [X20 + 0x14]
	0x01D5BF18 STR D9, [X20 + 0x18]
	0x01D5BF1C STR S10, [X20 + 0x20]
	0x01D5BF20 LDP X9, X2, [X8 + 0x198]
	0x01D5BF24 MOVZ W1, 0x1
	0x01D5BF28 MOV X0, X20
	0x01D5BF2C BLR X9
	0x01D5BF30 CBZ X19, 0x1D5BF98
	0x01D5BF34 MOV X20, X0
	0x01D5BF38 CBZ X0, 0x1D5BF50
	0x01D5BF3C LDR X8, [X19]
	0x01D5BF40 MOV X0, X20
	0x01D5BF44 LDR X1, [X8 + 0x40]
	0x01D5BF48 BL 0x1C16E00
	0x01D5BF4C CBZ X0, 0x1D5BFA0
	0x01D5BF50 LDR W8, [X19 + 0x18]
	0x01D5BF54 CBZ W8, 0x1D5BF9C
	0x01D5BF58 MOV X0, X19
	0x01D5BF5C MOV X1, X31
	0x01D5BF60 STR X20, [X19 + 0x20]
	0x01D5BF64 BL 0x1D351C4
	0x01D5BF68 FCMP S8, 0x0
	0x01D5BF6C B.EQ 0x1D5BF80
	0x01D5BF70 FMOV S0, 1
	0x01D5BF74 FCMP S8, S0
	0x01D5BF78 CSET W0, NE
	0x01D5BF7C B 0x1D5BF84
	0x01D5BF80 MOV W0, W31
	0x01D5BF84 LDP X20, X19, [X31 + 0x30]
	0x01D5BF88 LDP X30, X21, [X31 + 0x20]
	0x01D5BF8C LDP D9, D8, [X31 + 0x10]
	0x01D5BF90 LDR V10, [X31], #0x40
	0x01D5BF94 RET
	0x01D5BF98 BL 0x1C16F20
	0x01D5BF9C BL 0x1C16F28
	0x01D5BFA0 BL 0x1C16F44
	0x01D5BFA4 MOV X1, X31
	0x01D5BFA8 BL 0x1C16DEC
	0x01D5BFAC STR D10, [X31 - 0x40]!
	0x01D5BFB0 STP D9, D8, [X31 + 0x10]
	0x01D5BFB4 STP X30, X21, [X31 + 0x20]
	0x01D5BFB8 STP X20, X19, [X31 + 0x30]
	0x01D5BFBC ADRP X21, 0x267D000
	0x01D5BFC0 ADRP X20, 0x2398000
	0x01D5BFC4 LDRB W8, [X21 + 0x810]
	0x01D5BFC8 LDR X20, [X20 + 0x648]
	0x01D5BFCC MOV V8.16B, V0.16B
	0x01D5BFD0 MOV X19, X0
	0x01D5BFD4 TBNZ X8, 0x0, 0x1D5C010
	0x01D5BFD8 ADRP X0, 0x2398000
	0x01D5BFDC LDR X0, [X0 + 0x648]
	0x01D5BFE0 BL 0x1C16CF4
	0x01D5BFE4 ADRP X0, 0x2398000
	0x01D5BFE8 LDR X0, [X0 + 0xAB0]
	0x01D5BFEC BL 0x1C16CF4
	0x01D5BFF0 ADRP X0, 0x239A000
	0x01D5BFF4 LDR X0, [X0 + 0x4B8]
	0x01D5BFF8 BL 0x1C16CF4
	0x01D5BFFC ADRP X0, 0x2399000
	0x01D5C000 LDR X0, [X0 + 0xB18]
	0x01D5C004 BL 0x1C16CF4
	0x01D5C008 MOVZ W8, 0x1
	0x01D5C00C STRB W8, [X21 + 0x810]
	0x01D5C010 LDR X0, [X20]
	0x01D5C014 LDR W8, [X0 + 0xE0]
	0x01D5C018 CBNZ W8, 0x1D5C020
	0x01D5C01C BL 0x1C16DFC
	0x01D5C020 ADRP X21, 0x267C000
	0x01D5C024 LDRB W8, [X21 + 0x787]
	0x01D5C028 CBNZ W8, 0x1D5C040
	0x01D5C02C ADRP X0, 0x2397000
	0x01D5C030 LDR X0, [X0 + 0x648]
	0x01D5C034 BL 0x1C16CF4
	0x01D5C038 MOVZ W8, 0x1
	0x01D5C03C STRB W8, [X21 + 0x787]
	0x01D5C040 LDR X0, [X20]
	0x01D5C044 LDR W8, [X0 + 0xE0]
	0x01D5C048 CBNZ W8, 0x1D5C054
	0x01D5C04C BL 0x1C16DFC
	0x01D5C050 LDR X0, [X20]
	0x01D5C054 LDR X8, [X0 + 0xB8]
	0x01D5C058 LDR X8, [X8]
	0x01D5C05C CBZ X8, 0x1D5C15C
	0x01D5C060 LDR X8, [X8 + 0xB8]
	0x01D5C064 CBZ X8, 0x1D5C15C
	0x01D5C068 LDR X8, [X8 + 0x78]
	0x01D5C06C CBZ X8, 0x1D5C15C
	0x01D5C070 LDR X8, [X8 + 0x50]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0x267E000
	015 Move W8, [X20+2055]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {62}
	021 Move X0, 0x2399000
	022 Move X0, [X0+1608]
	023 Call 0x1C17CF4
	024 Move X0, 0x239B000
	025 Move X0, [X0+1000]
	026 Call 0x1C17CF4
	027 Move X0, 0x239B000
	028 Move X0, [X0+744]
	029 Call 0x1C17CF4
	030 Move X0, 0x239B000
	031 Move X0, [X0+1008]
	032 Call 0x1C17CF4
	033 Move X0, 0x239B000
	034 Move X0, [X0+1016]
	035 Call 0x1C17CF4
	036 Move X0, 0x239B000
	037 Move X0, [X0+1024]
	038 Call 0x1C17CF4
	039 Move X0, 0x239B000
	040 Move X0, [X0+1032]
	041 Call 0x1C17CF4
	042 Move X0, 0x2399000
	043 Move X0, [X0+1432]
	044 Call 0x1C17CF4
	045 Move X0, 0x2399000
	046 Move X0, [X0+3528]
	047 Call 0x1C17CF4
	048 Move X0, 0x239A000
	049 Move X0, [X0+2896]
	050 Call 0x1C17CF4
	051 Move X0, 0x239B000
	052 Move X0, [X0+1040]
	053 Call 0x1C17CF4
	054 Move X0, 0x239B000
	055 Move X0, [X0+1048]
	056 Call 0x1C17CF4
	057 Move X0, 0x239B000
	058 Move X0, [X0+1056]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X20+2055], W8
	062 Move [X31+12], W31
	063 Move X9, [X19+136]
	064 Compare X9, 0
	065 JumpIfEqual {402}
	066 Move X8, [X19+128]
	067 Compare X8, 0
	068 JumpIfEqual {402}
	069 Move X22, 0x2399000
	070 Move X23, 0x239B000
	071 Move X26, 0x239B000
	072 Move X27, 0x239B000
	073 Move X28, 0x239B000
	074 Move X24, 0x239B000
	075 Move X22, [X22+1432]
	076 Move X23, [X23+1032]
	077 Move X26, [X26+1008]
	078 Move X27, [X27+1024]
	079 Move X28, [X28+1000]
	080 Move X24, [X24+1040]
	081 Move W9, [X9+24]
	082 Move X25, 0x239B000
	083 Move X25, [X25+1048]
	084 Subtract W29, W9, 1
	085 Move W8, [X8+32]
	086 Add W29, W29, 1
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X0, [X22]
	089 Move X21, [X19+56]
	090 Move X20, [X19+64]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X2, [X23]
	096 Move X0, X21
	097 Move X1, X20
	098 Call 0x222E488, X0, X1
	099 Move X8, [X19+136]
	100 Compare X8, 0
	101 JumpIfEqual {402}
	102 Move W11, [X8+28]
	103 Move X9, [X8+16]
	104 Move X10, [X26]
	105 Add W11, W11, 1
	106 Move [X8+28], W11
	107 Compare X9, 0
	108 JumpIfEqual {402}
	109 NotImplemented "Instruction LDRSW not yet implemented."
	110 Move W12, [X9+24]
	111 Move X1, X0
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Add W10, W11, 1
	114 Add X9, X9, X11
	115 Move [X8+24], W10
	116 Move [X9+32], X1
	117 Move X9, [X10+32]
	118 Move X0, X8
	119 Move X9, [X9+192]
	120 Move X2, [X9+112]
	121 Call List`1<Object>.AddWithResize, X0, X1
	122 Move X8, [X19+128]
	123 Compare X8, 0
	124 JumpIfNotEqual {85}
	125 Move X20, X19
	126 Move [X20+120], W31
	127 Move X29, 0x239B000
	128 Move X0, [X20+16]
	129 Move X29, [X29+1056]
	130 Compare X0, 0
	131 JumpIfEqual {402}
	132 Move W26, W31
	133 Move W21, W31
	134 Move W8, [X0+24]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X8, [X19+128]
	137 Compare X8, 0
	138 JumpIfEqual {402}
	139 Move X2, [X27]
	140 Move W22, [X8+32]
	141 Move W1, W21
	142 Call List`1<Object>.get_Item, X0, X1
	143 Compare X0, 0
	144 JumpIfEqual {402}
	145 Move X1, X31
	146 Call Component.get_gameObject, X0
	147 Compare X0, 0
	148 JumpIfEqual {402}
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move W1, 1
	151 Move X2, X31
	152 Call GameObject.SetActive, X0, X1
	153 Move X0, [X19+128]
	154 Move X2, [X28]
	155 Move W1, W21
	156 Call Enumerable.ElementAt, X0, X1
	157 Compare X0, 0
	158 JumpIfEqual {402}
	159 Move X22, X0
	160 Move X0, [X0+112]
	161 Move X1, [X24]
	162 Move W23, [X19+120]
	163 Call StatePrimitive`1<Int32>.op_Implicit, X0
	164 Move X8, [X19+136]
	165 Add W9, W0, W23
	166 Move [X19+120], W9
	167 Compare X8, 0
	168 JumpIfEqual {402}
	169 Move X2, [X27]
	170 Move X0, X8
	171 Move W1, W21
	172 Call List`1<Object>.get_Item, X0, X1
	173 Compare X0, 0
	174 JumpIfEqual {402}
	175 Move X8, [X22+80]
	176 Compare X8, 0
	177 JumpIfEqual {402}
	178 Move X0, [X0+32]
	179 Compare X0, 0
	180 JumpIfEqual {402}
	181 Move X9, [X0]
	182 Move X1, [X8+80]
	183 Move X8, [X9+1368]
	184 Move X2, [X9+1376]
	185 NotImplemented "Instruction BLR not yet implemented."
	186 Move X0, [X19+136]
	187 Compare X0, 0
	188 JumpIfEqual {402}
	189 Move X2, [X27]
	190 Move W1, W21
	191 Call List`1<Object>.get_Item, X0, X1
	192 Compare X0, 0
	193 JumpIfEqual {402}
	194 Move X8, [X22+112]
	195 Compare X8, 0
	196 JumpIfEqual {402}
	197 Move W8, [X8+76]
	198 Move X23, [X0+40]
	199 Compare W8, 0
	200 JumpIfEqual {211}
	201 Add X0, X31, 12
	202 Move X1, X31
	203 Move [X31+12], W8
	204 Call Int32.ToString, X0
	205 Move X1, X0
	206 Compare X23, 0
	207 JumpIfNotEqual {214}
	208 Move W1, W31
	209 Move X2, X31
	210 Call GameObject.SetActive, X0, X1
	211 Move X1, [X29]
	212 Compare X23, 0
	213 JumpIfEqual {402}
	214 Move X8, [X23]
	215 Move X0, X23
	216 Move X9, [X8+1368]
	217 Move X2, [X8+1376]
	218 NotImplemented "Instruction BLR not yet implemented."
	219 Move X8, [X22+72]
	220 Compare X8, 0
	221 JumpIfEqual {402}
	222 Move X0, [X8+80]
	223 Call AvatarItemUtil.IsItemUnownedProduct, X0
	224 Move X8, [X19+136]
	225 Compare X8, 0
	226 JumpIfEqual {402}
	227 Move X2, [X27]
	228 Move W22, W0
	229 Move X0, X8
	230 Move W1, W21
	231 Call List`1<Object>.get_Item, X0, X1
	232 Compare X0, 0
	233 JumpIfEqual {402}
	234 Move TEMP, X22
	235 And TEMP, TEMP, 1
	236 Compare TEMP, 1
	237 JumpIfNotEqual {256}
	238 Move X0, [X0+40]
	239 Compare X0, 0
	240 JumpIfEqual {402}
	241 Move X8, [X0]
	242 Move X1, [X25]
	243 Move X9, [X8+1368]
	244 Move X2, [X8+1376]
	245 NotImplemented "Instruction BLR not yet implemented."
	246 Move X0, [X19+136]
	247 Compare X0, 0
	248 JumpIfEqual {402}
	249 Move X2, [X27]
	250 Move W1, W21
	251 Call List`1<Object>.get_Item, X0, X1
	252 Compare X0, 0
	253 JumpIfEqual {402}
	254 Move W1, 1
	255 Move W26, 1
	256 Move W1, W31
	257 Call AnimalLabCartEntry.SetColor, X0, X1
	258 Move X0, [X19+136]
	259 Add W21, W21, 1
	260 Compare X0, 0
	261 JumpIfNotEqual {134}
	262 Move X21, [X19+96]
	263 Move X0, X20
	264 Move X1, X31
	265 Call Int32.ToString, X0
	266 Compare X21, 0
	267 JumpIfEqual {402}
	268 Move X8, [X21]
	269 Move X1, X0
	270 Move X0, X21
	271 Move X9, [X8+1368]
	272 Move X2, [X8+1376]
	273 NotImplemented "Instruction BLR not yet implemented."
	274 Move X22, 0x2399000
	275 Move X8, [X19+128]
	276 Move X22, [X22+1608]
	277 Compare X8, 0
	278 JumpIfEqual {402}
	279 Move X0, [X22]
	280 Move W21, [X8+32]
	281 Move W9, [X0+224]
	282 Compare W9, 0
	283 JumpIfNotEqual {285}
	284 Call 0x1C17DFC
	285 Move X20, 0x267E000
	286 Move W8, [X20+1927]
	287 Compare W8, 0
	288 JumpIfNotEqual {294}
	289 Move X0, 0x2399000
	290 Move X0, [X0+1608]
	291 Call 0x1C17CF4
	292 Move W8, 1
	293 Move [X20+1927], W8
	294 Move X0, [X22]
	295 Move W8, [X0+224]
	296 Compare W8, 0
	297 JumpIfNotEqual {300}
	298 Call 0x1C17DFC
	299 Move X0, [X22]
	300 Move X8, [X0+184]
	301 Move X8, [X8]
	302 Compare X8, 0
	303 JumpIfEqual {402}
	304 Move X8, [X8+184]
	305 Compare X8, 0
	306 JumpIfEqual {402}
	307 Move X8, [X8+128]
	308 Compare X8, 0
	309 JumpIfEqual {402}
	310 Move X0, [X8+80]
	311 Move X1, [X24]
	312 Call StatePrimitive`1<Int32>.op_Implicit, X0
	313 Move X8, [X19+72]
	314 Compare X8, 0
	315 JumpIfEqual {402}
	316 Move W22, [X19+120]
	317 Move W20, W0
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Move X0, X8
	320 Move X1, X31
	321 NotImplemented "Instruction CSET not yet implemented."
	322 Call Component.get_gameObject, X0
	323 Or W8, W26, W23
	324 Move TEMP, X8
	325 And TEMP, TEMP, 1
	326 Compare TEMP, 1
	327 JumpIfNotEqual {329}
	328 Move W1, W31
	329 Move W8, [X19+48]
	330 NotImplemented "Instruction CMP not yet implemented."
	331 NotImplemented "Instruction CSET not yet implemented."
	332 Compare X0, 0
	333 JumpIfEqual {402}
	334 Move X2, X31
	335 Call GameObject.SetActive, X0, X1
	336 Move X0, [X19+80]
	337 Compare X0, 0
	338 JumpIfEqual {402}
	339 NotImplemented "Instruction CMP not yet implemented."
	340 NotImplemented "Instruction CSET not yet implemented."
	341 NotImplemented "Instruction CMP not yet implemented."
	342 Move X1, X31
	343 NotImplemented "Instruction CSET not yet implemented."
	344 Call Component.get_gameObject, X0
	345 And W8, W24, W23
	346 NotImplemented "Instruction ORN not yet implemented."
	347 Move TEMP, X9
	348 And TEMP, TEMP, 1
	349 Compare TEMP, 1
	350 JumpIfNotEqual {352}
	351 Move W1, W31
	352 Move W9, [X19+48]
	353 NotImplemented "Instruction CMP not yet implemented."
	354 NotImplemented "Instruction CSET not yet implemented."
	355 Compare W8, 0
	356 JumpIfEqual {402}
	357 Compare X0, 0
	358 JumpIfEqual {402}
	359 Move X2, X31
	360 Call GameObject.SetActive, X0, X1
	361 Move X0, [X19+88]
	362 Compare X0, 0
	363 JumpIfEqual {402}
	364 NotImplemented "Instruction CMP not yet implemented."
	365 Move X1, X31
	366 NotImplemented "Instruction CSET not yet implemented."
	367 Call Component.get_gameObject, X0
	368 Or W8, W26, W20
	369 Move W1, W31
	370 Move TEMP, X8
	371 And TEMP, TEMP, 1
	372 Compare TEMP, 1
	373 JumpIfEqual {378}
	374 NotImplemented "Instruction CMP not yet implemented."
	375 Move W8, [X19+48]
	376 NotImplemented "Instruction CMP not yet implemented."
	377 NotImplemented "Instruction CSET not yet implemented."
	378 Compare X0, 0
	379 JumpIfEqual {402}
	380 Move X2, X31
	381 Call GameObject.SetActive, X0, X1
	382 Move X0, [X19+104]
	383 Compare X0, 0
	384 JumpIfEqual {402}
	385 Move W1, [X19+48]
	386 Move X2, X31
	387 Call GameObject.SetActive, X0, X1
	388 Move X20, [X31+96]
	389 Move X19, [X31+104]
	390 Move X22, [X31+80]
	391 Move X21, [X31+88]
	392 Move X24, [X31+64]
	393 Move X23, [X31+72]
	394 Move X26, [X31+48]
	395 Move X25, [X31+56]
	396 Move X28, [X31+32]
	397 Move X27, [X31+40]
	398 Move X29, [X31+16]
	399 Move X30, [X31+24]
	400 Add X31, X31, 112
	401 Return 
	402 Call 0x1C17F20

Method: System.Void AttemptPurchaseMoreCurrency()

Disassembly:
	0x01D5C36C BL 0x1C16CF4
	0x01D5C370 ADRP X0, 0x2399000
	0x01D5C374 LDR X0, [X0 + 0x4C0]
	0x01D5C378 BL 0x1C16CF4
	0x01D5C37C ADRP X0, 0x2399000
	0x01D5C380 LDR X0, [X0 + 0x4C8]
	0x01D5C384 BL 0x1C16CF4
	0x01D5C388 ADRP X0, 0x2397000
	0x01D5C38C LDR X0, [X0 + 0x648]
	0x01D5C390 BL 0x1C16CF4
	0x01D5C394 ADRP X0, 0x2397000
	0x01D5C398 LDR X0, [X0 + 0xDB0]
	0x01D5C39C BL 0x1C16CF4
	0x01D5C3A0 ADRP X0, 0x2397000
	0x01D5C3A4 LDR X0, [X0 + 0xDA0]
	0x01D5C3A8 BL 0x1C16CF4
	0x01D5C3AC MOVZ W8, 0x1
	0x01D5C3B0 STRB W8, [X20 + 0x812]
	0x01D5C3B4 LDR X22, [X19 + 0x20]
	0x01D5C3B8 CBZ X22, 0x1D5C518
	0x01D5C3BC ADRP X23, 0x2398000
	0x01D5C3C0 LDR X23, [X23 + 0xE70]
	0x01D5C3C4 ADRP X21, 0x2399000
	0x01D5C3C8 LDR X20, [X22 + 0x20]
	0x01D5C3CC LDR X0, [X23]
	0x01D5C3D0 LDR X21, [X21 + 0x4C0]
	0x01D5C3D4 BL 0x1C16F10
	0x01D5C3D8 LDR X2, [X21]
	0x01D5C3DC MOV X1, X19
	0x01D5C3E0 MOV X3, X31
	0x01D5C3E4 MOV X21, X0
	0x01D5C3E8 BL 0x3314368
	0x01D5C3EC MOV X0, X20
	0x01D5C3F0 MOV X1, X21
	0x01D5C3F4 MOV X2, X31
	0x01D5C3F8 BL 0x33C0DE4
	0x01D5C3FC CBZ X0, 0x1D5C424
	0x01D5C400 LDR X1, [X23]
	0x01D5C404 LDR X8, [X0]
	0x01D5C408 CMP X8, X1
	0x01D5C40C B.NE 0x1D5C420
	0x01D5C410 STR X0, [X22 + 0x20]
	0x01D5C414 LDR X8, [X0]
	0x01D5C418 CMP X8, X1
	0x01D5C41C B.EQ 0x1D5C428
	0x01D5C420 BL 0x1C171E0
	0x01D5C424 STR X0, [X22 + 0x20]
	0x01D5C428 ADRP X8, 0x2397000
	0x01D5C42C LDR X8, [X8 + 0xDA0]
	0x01D5C430 ADRP X20, 0x2399000
	0x01D5C434 ADRP X22, 0x2397000
	0x01D5C438 ADRP X21, 0x2397000
	0x01D5C43C LDR X0, [X8]
	0x01D5C440 LDR X20, [X20 + 0x4C8]
	0x01D5C444 LDR X22, [X22 + 0xDB0]
	0x01D5C448 LDR X21, [X21 + 0x648]
	0x01D5C44C BL 0x1C16F10
	0x01D5C450 LDR X2, [X20]
	0x01D5C454 MOV X1, X19
	0x01D5C458 MOV X3, X31
	0x01D5C45C MOV X20, X0
	0x01D5C460 BL 0x35C52F0
	0x01D5C464 LDR X0, [X22]
	0x01D5C468 MOVZ W1, 0x1
	0x01D5C46C BL 0x1C16D6C
	0x01D5C470 LDR X8, [X21]
	0x01D5C474 MOV X19, X0
	0x01D5C478 LDR W9, [X8 + 0xE0]
	0x01D5C47C CBNZ W9, 0x1D5C488
	0x01D5C480 MOV X0, X8
	0x01D5C484 BL 0x1C16DFC
	0x01D5C488 ADRP X22, 0x267C000
	0x01D5C48C LDRB W8, [X22 + 0x787]
	0x01D5C490 CBNZ W8, 0x1D5C4A8
	0x01D5C494 ADRP X0, 0x2397000
	0x01D5C498 LDR X0, [X0 + 0x648]
	0x01D5C49C BL 0x1C16CF4
	0x01D5C4A0 MOVZ W8, 0x1
	0x01D5C4A4 STRB W8, [X22 + 0x787]
	0x01D5C4A8 LDR X0, [X21]
	0x01D5C4AC LDR W8, [X0 + 0xE0]
	0x01D5C4B0 CBNZ W8, 0x1D5C4BC
	0x01D5C4B4 BL 0x1C16DFC
	0x01D5C4B8 LDR X0, [X21]
	0x01D5C4BC LDR X8, [X0 + 0xB8]
	0x01D5C4C0 LDR X8, [X8]
	0x01D5C4C4 CBZ X8, 0x1D5C518
	0x01D5C4C8 LDR X8, [X8 + 0xB8]
	0x01D5C4CC CBZ X8, 0x1D5C518
	0x01D5C4D0 CBZ X19, 0x1D5C518
	0x01D5C4D4 LDR X21, [X8 + 0x90]
	0x01D5C4D8 CBZ X21, 0x1D5C4F0
	0x01D5C4DC LDR X8, [X19]
	0x01D5C4E0 MOV X0, X21
	0x01D5C4E4 LDR X1, [X8 + 0x40]
	0x01D5C4E8 BL 0x1C16E00

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x267D000
	007 Move W8, [X20+2056]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0x2398000
	014 Move X0, [X0+1608]
	015 Call 0x1C17CF4
	016 Move X0, 0x239A000
	017 Move X0, [X0+1040]
	018 Call 0x1C17CF4
	019 Move X0, 0x239A000
	020 Move X0, [X0+1096]
	021 Call 0x1C17CF4
	022 Move X0, 0x239A000
	023 Move X0, [X0+1104]
	024 Call 0x1C17CF4
	025 Move X0, 0x239A000
	026 Move X0, [X0+1112]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+2056], W8
	030 Move X0, [X19+40]
	031 Compare X0, 0
	032 JumpIfEqual {39}
	033 Move X1, X31
	034 Call CommandHandle.get_hasFinalized, X0
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {112}
	039 Move X0, [X19+32]
	040 Compare X0, 0
	041 JumpIfEqual {48}
	042 Move X1, X31
	043 Call CommandHandle.get_hasFinalized, X0
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {112}
	048 Move X20, 0x2398000
	049 Move X20, [X20+1608]
	050 Move W21, [X19+120]
	051 Move X0, [X20]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X22, 0x267D000
	057 Move W8, [X22+1927]
	058 Compare W8, 0
	059 JumpIfNotEqual {65}
	060 Move X0, 0x2398000
	061 Move X0, [X0+1608]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X22+1927], W8
	065 Move X0, [X20]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {71}
	069 Call 0x1C17DFC
	070 Move X0, [X20]
	071 Move X8, [X0+184]
	072 Move X8, [X8]
	073 Compare X8, 0
	074 JumpIfEqual {118}
	075 Move X8, [X8+184]
	076 Compare X8, 0
	077 JumpIfEqual {118}
	078 Move X8, [X8+128]
	079 Compare X8, 0
	080 JumpIfEqual {118}
	081 Move X0, [X8+80]
	082 Move X8, 0x239A000
	083 Move X8, [X8+1040]
	084 Move X1, [X8]
	085 Call StatePrimitive`1<Int32>.op_Implicit, X0
	086 Move X9, 0x239A000
	087 Move X10, 0x239A000
	088 Move X9, [X9+1112]
	089 Move X10, [X10+1096]
	090 Move X11, 0x239A000
	091 Move X11, [X11+1104]
	092 Subtract W8, W21, W0
	093 NotImplemented "Instruction CMP not yet implemented."
	094 NotImplemented "Instruction CSEL not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 NotImplemented "Instruction CSEL not yet implemented."
	097 Move X0, [X8]
	098 Move X1, X31
	099 Call ProductCommands.PurchaseProduct, X0
	100 Move X8, [X20]
	101 Move X20, X0
	102 Move W9, [X8+224]
	103 Compare W9, 0
	104 JumpIfNotEqual {107}
	105 Move X0, X8
	106 Call 0x1C17DFC
	107 Move X0, X20
	108 Move W1, W31
	109 Move X2, X31
	110 Call App.ExecuteCommand, X0, X1
	111 Move [X19+32], X0
	112 Move X20, [X31+32]
	113 Move X19, [X31+40]
	114 Move X22, [X31+16]
	115 Move X21, [X31+24]
	116 Move X30, [X31+48]
	117 Return 
	118 Call 0x1C17F20

Method: System.Void AttemptCheckout()

Disassembly:
	0x01D5C4EC CBZ X0, 0x1D5C520
	0x01D5C4F0 LDR W8, [X19 + 0x18]
	0x01D5C4F4 CBZ W8, 0x1D5C51C
	0x01D5C4F8 STR X21, [X19 + 0x20]
	0x01D5C4FC MOV X0, X20
	0x01D5C500 MOV X1, X19
	0x01D5C504 LDP X20, X19, [X31 + 0x20]
	0x01D5C508 LDP X22, X21, [X31 + 0x10]
	0x01D5C50C MOV X2, X31
	0x01D5C510 LDP X30, X23, [X31], #0x30
	0x01D5C514 B 0x1D363F0
	0x01D5C518 BL 0x1C16F20
	0x01D5C51C BL 0x1C16F28
	0x01D5C520 BL 0x1C16F44
	0x01D5C524 MOV X1, X31
	0x01D5C528 BL 0x1C16DEC
	0x01D5C52C STP X30, X23, [X31 - 0x30]!
	0x01D5C530 STP X22, X21, [X31 + 0x10]
	0x01D5C534 STP X20, X19, [X31 + 0x20]
	0x01D5C538 ADRP X22, 0x267C000
	0x01D5C53C ADRP X23, 0x2397000
	0x01D5C540 ADRP X20, 0x2399000
	0x01D5C544 ADRP X21, 0x2397000
	0x01D5C548 LDRB W8, [X22 + 0x813]
	0x01D5C54C LDR X23, [X23 + 0xDA0]
	0x01D5C550 LDR X20, [X20 + 0x4C8]
	0x01D5C554 LDR X21, [X21 + 0x648]
	0x01D5C558 MOV X19, X0
	0x01D5C55C TBNZ X8, 0x0, 0x1D5C58C
	0x01D5C560 ADRP X0, 0x2399000
	0x01D5C564 LDR X0, [X0 + 0x4C8]
	0x01D5C568 BL 0x1C16CF4
	0x01D5C56C ADRP X0, 0x2397000
	0x01D5C570 LDR X0, [X0 + 0x648]
	0x01D5C574 BL 0x1C16CF4
	0x01D5C578 ADRP X0, 0x2397000
	0x01D5C57C LDR X0, [X0 + 0xDA0]
	0x01D5C580 BL 0x1C16CF4
	0x01D5C584 MOVZ W8, 0x1
	0x01D5C588 STRB W8, [X22 + 0x813]
	0x01D5C58C LDR X0, [X23]
	0x01D5C590 BL 0x1C16F10
	0x01D5C594 LDR X2, [X20]
	0x01D5C598 MOV X1, X19
	0x01D5C59C MOV X3, X31
	0x01D5C5A0 MOV X20, X0
	0x01D5C5A4 BL 0x35C52F0
	0x01D5C5A8 LDR X0, [X21]
	0x01D5C5AC LDR W8, [X0 + 0xE0]
	0x01D5C5B0 CBNZ W8, 0x1D5C5B8
	0x01D5C5B4 BL 0x1C16DFC
	0x01D5C5B8 MOV X0, X20
	0x01D5C5BC LDP X20, X19, [X31 + 0x20]
	0x01D5C5C0 LDP X22, X21, [X31 + 0x10]
	0x01D5C5C4 MOV X1, X31
	0x01D5C5C8 LDP X30, X23, [X31], #0x30
	0x01D5C5CC B 0x1D36978
	0x01D5C5D0 STP X30, X21, [X31 - 0x20]!
	0x01D5C5D4 STP X20, X19, [X31 + 0x10]
	0x01D5C5D8 ADRP X21, 0x267C000
	0x01D5C5DC ADRP X20, 0x2397000
	0x01D5C5E0 LDRB W8, [X21 + 0x814]
	0x01D5C5E4 LDR X20, [X20 + 0x648]
	0x01D5C5E8 MOV X19, X0
	0x01D5C5EC TBNZ X8, 0x0, 0x1D5C610
	0x01D5C5F0 ADRP X0, 0x2397000
	0x01D5C5F4 LDR X0, [X0 + 0x648]
	0x01D5C5F8 BL 0x1C16CF4
	0x01D5C5FC ADRP X0, 0x2398000
	0x01D5C600 LDR X0, [X0 + 0x178]
	0x01D5C604 BL 0x1C16CF4
	0x01D5C608 MOVZ W8, 0x1
	0x01D5C60C STRB W8, [X21 + 0x814]
	0x01D5C610 LDR X0, [X20]
	0x01D5C614 LDR W8, [X0 + 0xE0]
	0x01D5C618 CBNZ W8, 0x1D5C620
	0x01D5C61C BL 0x1C16DFC
	0x01D5C620 ADRP X21, 0x267C000
	0x01D5C624 LDRB W8, [X21 + 0x787]
	0x01D5C628 CBNZ W8, 0x1D5C640
	0x01D5C62C ADRP X0, 0x2397000
	0x01D5C630 LDR X0, [X0 + 0x648]
	0x01D5C634 BL 0x1C16CF4
	0x01D5C638 MOVZ W8, 0x1
	0x01D5C63C STRB W8, [X21 + 0x787]
	0x01D5C640 LDR X0, [X20]
	0x01D5C644 LDR W8, [X0 + 0xE0]
	0x01D5C648 CBNZ W8, 0x1D5C654
	0x01D5C64C BL 0x1C16DFC
	0x01D5C650 LDR X0, [X20]
	0x01D5C654 LDR X8, [X0 + 0xB8]
	0x01D5C658 LDR X8, [X8]
	0x01D5C65C CBZ X8, 0x1D5C694
	0x01D5C660 LDR X8, [X8 + 0xB8]
	0x01D5C664 CBZ X8, 0x1D5C694
	0x01D5C668 ADRP X9, 0x2398000
	0x01D5C66C LDR X9, [X9 + 0x178]
	0x01D5C670 LDR X0, [X8 + 0x90]
	0x01D5C674 LDR X1, [X9]
	0x01D5C678 BL 0x2651A74
	0x01D5C67C ORN W8, W31, W0, 0x0
	0x01D5C680 MOV X0, X19
	0x01D5C684 LDP X20, X19, [X31 + 0x10]
	0x01D5C688 AND W1, W8, 0x1
	0x01D5C68C LDP X30, X21, [X31], #0x20
	0x01D5C690 B 0x1D5C698
	0x01D5C694 BL 0x1C16F20
	0x01D5C698 STR X30, [X31 - 0x20]!
	0x01D5C69C STP X20, X19, [X31 + 0x10]
	0x01D5C6A0 MOV X20, X0
	0x01D5C6A4 LDR X0, [X0 + 0x28]
	0x01D5C6A8 CBZ X0, 0x1D5C6E8
	0x01D5C6AC MOV W19, W1
	0x01D5C6B0 AND W1, W1, 0x1
	0x01D5C6B4 MOV X2, X31
	0x01D5C6B8 BL 0x3C357B4
	0x01D5C6BC LDR X0, [X20 + 0x20]
	0x01D5C6C0 CBZ X0, 0x1D5C6E8
	0x01D5C6C4 MOV X1, X31
	0x01D5C6C8 BL 0x3C32ECC
	0x01D5C6CC CBZ X0, 0x1D5C6E8
	0x01D5C6D0 ORN W8, W31, W19, 0x0
	0x01D5C6D4 LDP X20, X19, [X31 + 0x10]
	0x01D5C6D8 AND W1, W8, 0x1
	0x01D5C6DC MOV X2, X31
	0x01D5C6E0 LDR X30, [X31], #0x20
	0x01D5C6E4 B 0x3C357B4
	0x01D5C6E8 BL 0x1C16F20
	0x01D5C6EC STP X30, X21, [X31 - 0x20]!
	0x01D5C6F0 STP X20, X19, [X31 + 0x10]
	0x01D5C6F4 ADRP X20, 0x267C000
	0x01D5C6F8 LDRB W8, [X20 + 0x815]
	0x01D5C6FC MOV X19, X0
	0x01D5C700 TBNZ X8, 0x0, 0x1D5C730
	0x01D5C704 ADRP X0, 0x2399000
	0x01D5C708 LDR X0, [X0 + 0x4D0]
	0x01D5C70C BL 0x1C16CF4
	0x01D5C710 ADRP X0, 0x2397000
	0x01D5C714 LDR X0, [X0 + 0x648]
	0x01D5C718 BL 0x1C16CF4
	0x01D5C71C ADRP X0, 0x2397000
	0x01D5C720 LDR X0, [X0 + 0x958]
	0x01D5C724 BL 0x1C16CF4
	0x01D5C728 MOVZ W8, 0x1
	0x01D5C72C STRB W8, [X20 + 0x815]
	0x01D5C730 LDR X0, [X19 + 0x30]
	0x01D5C734 CBZ X0, 0x1D5C7D0
	0x01D5C738 MOV X1, X31
	0x01D5C73C BL 0x35B9A1C
	0x01D5C740 TBNZ X0, 0x0, 0x1D5C754
	0x01D5C744 LDR X0, [X19 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x267D000
	006 Move W8, [X20+2057]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {32}
	012 Move X0, 0x2399000
	013 Move X0, [X0+3696]
	014 Call 0x1C17CF4
	015 Move X0, 0x239A000
	016 Move X0, [X0+1120]
	017 Call 0x1C17CF4
	018 Move X0, 0x2398000
	019 Move X0, [X0+1608]
	020 Call 0x1C17CF4
	021 Move X0, 0x2399000
	022 Move X0, [X0+4008]
	023 Call 0x1C17CF4
	024 Move X0, 0x239A000
	025 Move X0, [X0+1128]
	026 Call 0x1C17CF4
	027 Move X0, 0x239A000
	028 Move X0, [X0+1136]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+2057], W8
	032 Move X0, [X19+40]
	033 Compare X0, 0
	034 JumpIfEqual {41}
	035 Move X1, X31
	036 Call CommandHandle.get_hasFinalized, X0
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {169}
	041 Move X0, [X19+32]
	042 Compare X0, 0
	043 JumpIfEqual {50}
	044 Move X1, X31
	045 Call CommandHandle.get_hasFinalized, X0
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {169}
	050 Move X0, [X19+104]
	051 Move W8, 1
	052 Move [X19+48], W8
	053 Compare X0, 0
	054 JumpIfEqual {174}
	055 Move W1, 1
	056 Move X2, X31
	057 Call GameObject.SetActive, X0, X1
	058 Move X0, [X19+112]
	059 Compare X0, 0
	060 JumpIfEqual {174}
	061 Move W8, [X19+120]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X9, 0x239A000
	064 Move X8, [X0]
	065 Move X9, [X9+1128]
	066 Move X9, 0x239A000
	067 Move X8, [X0]
	068 Move X9, [X9+1136]
	069 Move X1, [X9]
	070 Move X9, [X8+1368]
	071 Move X2, [X8+1376]
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move X0, [X19+72]
	074 Compare X0, 0
	075 JumpIfEqual {174}
	076 Move X1, X31
	077 Call Component.get_gameObject, X0
	078 Compare X0, 0
	079 JumpIfEqual {174}
	080 Move W1, W31
	081 Move X2, X31
	082 Call GameObject.SetActive, X0, X1
	083 Move X0, [X19+80]
	084 Compare X0, 0
	085 JumpIfEqual {174}
	086 Move X1, X31
	087 Call Component.get_gameObject, X0
	088 Compare X0, 0
	089 JumpIfEqual {174}
	090 Move W1, W31
	091 Move X2, X31
	092 Call GameObject.SetActive, X0, X1
	093 Move X0, [X19+88]
	094 Compare X0, 0
	095 JumpIfEqual {174}
	096 Move X1, X31
	097 Call Component.get_gameObject, X0
	098 Compare X0, 0
	099 JumpIfEqual {174}
	100 Move W1, W31
	101 Move X2, X31
	102 Call GameObject.SetActive, X0, X1
	103 Move X8, 0x2399000
	104 Move X8, [X8+4008]
	105 Move W1, 2
	106 Move X0, [X8]
	107 Call 0x1C17D6C
	108 Move X20, X0
	109 Call AnimalLabCartCommands.PurchaseAndSpawnDraftAvatar
	110 Compare X20, 0
	111 JumpIfEqual {174}
	112 Move X21, X0
	113 Compare X0, 0
	114 JumpIfEqual {121}
	115 Move X8, [X20]
	116 Move X0, X21
	117 Move X1, [X8+64]
	118 Call 0x1C17E00
	119 Compare X0, 0
	120 JumpIfEqual {176}
	121 Move W8, [X20+24]
	122 Compare W8, 0
	123 JumpIfEqual {175}
	124 Move [X20+32], X21
	125 Move X8, 0x2399000
	126 Move X8, [X8+3696]
	127 Move X0, [X8]
	128 Call 0x1C17F10
	129 Move X8, 0x239A000
	130 Move X8, [X8+1120]
	131 Move X1, X19
	132 Move X3, X31
	133 Move X21, X0
	134 Move X2, [X8]
	135 Call Action..ctor, X0, X1, X2
	136 Move X0, X21
	137 Move W1, W31
	138 Move X2, X31
	139 Call Commands.Do, X0, X1
	140 Move X21, X0
	141 Compare X0, 0
	142 JumpIfEqual {149}
	143 Move X8, [X20]
	144 Move X0, X21
	145 Move X1, [X8+64]
	146 Call 0x1C17E00
	147 Compare X0, 0
	148 JumpIfEqual {176}
	149 Move W8, [X20+24]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X0, X20
	152 Move X1, X31
	153 Move [X20+40], X21
	154 Call Commands.Sequence, X0
	155 Move X8, 0x2398000
	156 Move X8, [X8+1608]
	157 Move X20, X0
	158 Move X8, [X8]
	159 Move W9, [X8+224]
	160 Compare W9, 0
	161 JumpIfNotEqual {164}
	162 Move X0, X8
	163 Call 0x1C17DFC
	164 Move X0, X20
	165 Move W1, W31
	166 Move X2, X31
	167 Call App.ExecuteCommand, X0, X1
	168 Move [X19+32], X0
	169 Move X20, [X31+16]
	170 Move X19, [X31+24]
	171 Move X30, [X31+32]
	172 Move X21, [X31+40]
	173 Return 
	174 Call 0x1C17F20
	175 Call 0x1C17F28
	176 Call 0x1C17F44
	177 Move X1, X31
	178 Call 0x1C17DEC

Method: System.Void OnPurchaseComplete()

Disassembly:
	0x01D5C748 CBZ X0, 0x1D5C7D0
	0x01D5C74C MOV X1, X31
	0x01D5C750 BL 0x35B9B84
	0x01D5C754 ADRP X8, 0x2397000
	0x01D5C758 LDR X8, [X8 + 0x958]
	0x01D5C75C ADRP X20, 0x2399000
	0x01D5C760 ADRP X21, 0x2397000
	0x01D5C764 LDR X0, [X8]
	0x01D5C768 LDR X20, [X20 + 0x4D0]
	0x01D5C76C LDR X21, [X21 + 0x648]
	0x01D5C770 BL 0x1C16F10
	0x01D5C774 LDR X2, [X20]
	0x01D5C778 MOV X1, X19
	0x01D5C77C MOV X3, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+104]
	005 Move [X19+48], W31
	006 Compare X0, 0
	007 JumpIfEqual {18}
	008 Move W1, W31
	009 Move X2, X31
	010 Call GameObject.SetActive, X0, X1
	011 Call AvatarItemUtil.GetItemsToPurchaseForDraftAvatar
	012 Move [X19+128], X0
	013 Move X0, X19
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Call AnimalLabCartManager.UpdateCartUI, X0
	017 Return 
	018 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01D5C780 MOV X20, X0
	0x01D5C784 BL 0x35BC6F0
	0x01D5C788 MOV X0, X20
	0x01D5C78C MOV W1, W31
	0x01D5C790 MOV X2, X31
	0x01D5C794 BL 0x35BBFC4
	0x01D5C798 LDR X8, [X21]
	0x01D5C79C MOV X20, X0
	0x01D5C7A0 LDR W9, [X8 + 0xE0]
	0x01D5C7A4 CBNZ W9, 0x1D5C7B0
	0x01D5C7A8 MOV X0, X8
	0x01D5C7AC BL 0x1C16DFC
	0x01D5C7B0 MOV X0, X20
	0x01D5C7B4 MOV W1, W31
	0x01D5C7B8 MOV X2, X31
	0x01D5C7BC BL 0x1D35D6C
	0x01D5C7C0 STR X0, [X19 + 0x30]
	0x01D5C7C4 LDP X20, X19, [X31 + 0x10]
	0x01D5C7C8 LDP X30, X21, [X31], #0x20
	0x01D5C7CC RET
	0x01D5C7D0 BL 0x1C16F20
	0x01D5C7D4 STR X30, [X31 - 0x20]!
	0x01D5C7D8 STP X20, X19, [X31 + 0x10]
	0x01D5C7DC ADRP X19, 0x267C000
	0x01D5C7E0 ADRP X20, 0x2399000
	0x01D5C7E4 LDRB W8, [X19 + 0x816]
	0x01D5C7E8 LDR X20, [X20 + 0x4D8]
	0x01D5C7EC TBNZ X8, 0x0, 0x1D5C804
	0x01D5C7F0 ADRP X0, 0x2399000
	0x01D5C7F4 LDR X0, [X0 + 0x4D8]
	0x01D5C7F8 BL 0x1C16CF4
	0x01D5C7FC MOVZ W8, 0x1
	0x01D5C800 STRB W8, [X19 + 0x816]
	0x01D5C804 LDR X0, [X20]
	0x01D5C808 BL 0x1C16F10
	0x01D5C80C MOV X1, X31
	0x01D5C810 MOV X19, X0
	0x01D5C814 BL 0x33BDD8C
	0x01D5C818 STR W31, [X19 + 0x10]
	0x01D5C81C MOV X0, X19
	0x01D5C820 LDP X20, X19, [X31 + 0x10]
	0x01D5C824 LDR X30, [X31], #0x20
	0x01D5C828 RET
	0x01D5C82C STR X30, [X31 - 0x20]!
	0x01D5C830 STP X20, X19, [X31 + 0x10]
	0x01D5C834 MOV W19, W1
	0x01D5C838 MOV X1, X31
	0x01D5C83C MOV X20, X0
	0x01D5C840 BL 0x33BDD8C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x267D000
	009 Move X24, 0x2399000
	010 Move X20, 0x239A000
	011 Move X22, 0x239A000
	012 Move X21, 0x239A000
	013 Move W8, [X23+2058]
	014 Move X24, [X24+2728]
	015 Move X20, [X20+944]
	016 Move X22, [X22+1144]
	017 Move X21, [X21+1152]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x239A000
	024 Move X0, [X0+944]
	025 Call 0x1C17CF4
	026 Move X0, 0x2399000
	027 Move X0, [X0+2728]
	028 Call 0x1C17CF4
	029 Move X0, 0x239A000
	030 Move X0, [X0+1152]
	031 Call 0x1C17CF4
	032 Move X0, 0x239A000
	033 Move X0, [X0+1144]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+2058], W8
	037 Move X0, [X24]
	038 Call 0x1C17F10
	039 Move X1, [X20]
	040 Move X20, X0
	041 Call HashSet`1<Object>..ctor, X0
	042 Move [X19+128], X20
	043 Move X0, [X22]
	044 Call 0x1C17F10
	045 Move X1, [X21]
	046 Move X20, X0
	047 Call List`1<Object>..ctor, X0
	048 Move [X19+136], X20
	049 Move X0, X19
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move X1, X31
	057 Move X30, [X31+64]
	058 Call MonoBehaviour..ctor, X0
	059 Return 

Method: System.Void <AttemptCheckout>b__24_0()

Disassembly:
	0x01D5C844 STR W19, [X20 + 0x10]

ISIL:
	001 Call AnimalLabCartManager.OnPurchaseComplete, X0
	002 Return 

