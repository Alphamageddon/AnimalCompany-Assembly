Type: AnimalCompany.PlanarDistanceCull

Method: System.Void OnEnable()

Disassembly:
	0x01C99164 LDP X22, X21, [X31 + 0x30]
	0x01C99168 LDP X24, X23, [X31 + 0x20]
	0x01C9916C LDR X30, [X31 + 0x18]
	0x01C99170 LDR V8, [X31 + 0x10]
	0x01C99174 ADD X31, X31, 0x50
	0x01C99178 RET
	0x01C9917C BL 0x1B6EA1C
	0x01C99180 STP X30, X23, [X31 - 0x30]!
	0x01C99184 STP X22, X21, [X31 + 0x10]
	0x01C99188 STP X20, X19, [X31 + 0x20]
	0x01C9918C ADRP X23, 0x258A000
	0x01C99190 ADRP X22, 0x22B5000
	0x01C99194 LDRB W8, [X23 + 0x3E2]
	0x01C99198 LDR X22, [X22 + 0x1A0]
	0x01C9919C MOV W21, W2
	0x01C991A0 MOV X20, X1
	0x01C991A4 MOV X19, X0
	0x01C991A8 TBNZ X8, 0x0, 0x1C991C0
	0x01C991AC ADRP X0, 0x22B5000
	0x01C991B0 LDR X0, [X0 + 0x1A0]
	0x01C991B4 BL 0x1B6E7F0
	0x01C991B8 MOVZ W8, 0x1
	0x01C991BC STRB W8, [X23 + 0x3E2]
	0x01C991C0 AND W2, W21, 0x1
	0x01C991C4 MOV X0, X19
	0x01C991C8 MOV X1, X20
	0x01C991CC MOV X3, X31
	0x01C991D0 BL 0x1D65288
	0x01C991D4 MOV X0, X19
	0x01C991D8 BL 0x1C9923C
	0x01C991DC LDR X8, [X22]
	0x01C991E0 LDR X8, [X8 + 0xB8]
	0x01C991E4 LDR X8, [X8]
	0x01C991E8 CBZ X8, 0x1C99204
	0x01C991EC LDR X9, [X19 + 0x40]
	0x01C991F0 CBZ X9, 0x1C99214
	0x01C991F4 LDR X9, [X9 + 0x20]
	0x01C991F8 CBZ X9, 0x1C99214
	0x01C991FC LDR W1, [X9]
	0x01C99200 B 0x1C99218
	0x01C99204 LDP X20, X19, [X31 + 0x20]
	0x01C99208 LDP X22, X21, [X31 + 0x10]
	0x01C9920C LDP X30, X23, [X31], #0x30
	0x01C99210 RET
	0x01C99214 MOV X1, X31
	0x01C99218 LDR W9, [X19 + 0x68]
	0x01C9921C LDR X3, [X8 + 0x18]
	0x01C99220 LDR X0, [X8 + 0x40]
	0x01C99224 LDR X2, [X8 + 0x28]
	0x01C99228 LDP X20, X19, [X31 + 0x20]
	0x01C9922C LDP X22, X21, [X31 + 0x10]
	0x01C99230 BFM X1, X9, 0x20, 0x1F
	0x01C99234 LDP X30, X23, [X31], #0x30
	0x01C99238 BR X3
	0x01C9923C STP X30, X23, [X31 - 0x30]!
	0x01C99240 STP X22, X21, [X31 + 0x10]
	0x01C99244 STP X20, X19, [X31 + 0x20]
	0x01C99248 ADRP X21, 0x258A000
	0x01C9924C ADRP X20, 0x22B4000
	0x01C99250 LDRB W8, [X21 + 0x3EB]
	0x01C99254 LDR X20, [X20 + 0x478]
	0x01C99258 MOV X19, X0
	0x01C9925C TBNZ X8, 0x0, 0x1C992A4
	0x01C99260 ADRP X0, 0x22B5000
	0x01C99264 LDR X0, [X0 + 0x168]
	0x01C99268 BL 0x1B6E7F0
	0x01C9926C ADRP X0, 0x22B5000
	0x01C99270 LDR X0, [X0 + 0x170]
	0x01C99274 BL 0x1B6E7F0
	0x01C99278 ADRP X0, 0x22B5000
	0x01C9927C LDR X0, [X0 + 0x178]
	0x01C99280 BL 0x1B6E7F0
	0x01C99284 ADRP X0, 0x22B5000
	0x01C99288 LDR X0, [X0 + 0x180]
	0x01C9928C BL 0x1B6E7F0
	0x01C99290 ADRP X0, 0x22B4000
	0x01C99294 LDR X0, [X0 + 0x478]
	0x01C99298 BL 0x1B6E7F0
	0x01C9929C MOVZ W8, 0x1
	0x01C992A0 STRB W8, [X21 + 0x3EB]

ISIL:
	001 Move [X31-80], D13
	002 Move [X31-72], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X1, X31
	011 Move X19, X0
	012 Call Component.get_transform, X0
	013 Compare X0, 0
	014 JumpIfEqual {94}
	015 Move X1, X31
	016 Call Transform.get_forward, X0
	017 Move X0, X19
	018 Move X1, X31
	019 Move V11, V0
	020 Move V12, V1
	021 Move V13, V2
	022 Call Component.get_transform, X0
	023 Compare X0, 0
	024 JumpIfEqual {94}
	025 Move X1, X31
	026 Call Transform.get_position, X0
	027 Move X20, 0x258B000
	028 Move W8, [X20+1089]
	029 Move V8, V0
	030 Move V9, V1
	031 Move V10, V2
	032 Compare W8, 0
	033 JumpIfNotEqual {39}
	034 Move X0, 0x22B5000
	035 Move X0, [X0+1160]
	036 Call 0x1B6F7F0
	037 Move W8, 1
	038 Move [X20+1089], W8
	039 Move X8, 0x22B5000
	040 Move X8, [X8+1160]
	041 Move X0, [X8]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1B6F8F8
	046 Multiply S0, S11, S11
	047 Multiply S1, S12, S12
	048 Move X8, -18804736
	049 Add S0, S0, S1
	050 Move V1, [X8+2916]
	051 Multiply S2, S13, S13
	052 Add S0, S2, S0
	053 NotImplemented "Instruction FSQRT not yet implemented."
	054 NotImplemented "Instruction FCMP not yet implemented."
	055 NotImplemented "Instruction FDIV not yet implemented."
	056 NotImplemented "Instruction FDIV not yet implemented."
	057 NotImplemented "Instruction FDIV not yet implemented."
	058 Move X20, 0x258B000
	059 Move W8, [X20+1087]
	060 Compare W8, 0
	061 JumpIfNotEqual {67}
	062 Move X0, 0x22B5000
	063 Move X0, [X0+1152]
	064 Call 0x1B6F7F0
	065 Move W8, 1
	066 Move [X20+1087], W8
	067 Move X8, 0x22B5000
	068 Move X8, [X8+1152]
	069 Move X8, [X8]
	070 Move X8, [X8+184]
	071 Move S0, [X8]
	072 Move S1, [X8+4]
	073 Move V2, [X8+8]
	074 Multiply S3, S8, S0
	075 Multiply S4, S9, S1
	076 Multiply S5, S10, S2
	077 Move [X19+44], S0
	078 Move [X19+52], S1
	079 Add S0, S3, S4
	080 Add S0, S5, S0
	081 NotImplemented "Instruction FNEG not yet implemented."
	082 Move [X19+52], S2
	083 Move [X19+60], S0
	084 Move X20, [X31+64]
	085 Move X19, [X31+72]
	086 Move X30, [X31+48]
	087 Move D9, [X31+32]
	088 Move D8, [X31+40]
	089 Move D11, [X31+16]
	090 Move D10, [X31+24]
	091 Move D13, [X31+80]
	092 Move D12, [X31+88]
	093 Return 
	094 Call 0x1B6FA1C

Method: System.Void Update()

Disassembly:
	0x01C992A4 LDR X0, [X20]
	0x01C992A8 LDR X20, [X19 + 0xC0]
	0x01C992AC LDR W8, [X0 + 0xE0]
	0x01C992B0 CBNZ W8, 0x1C992B8
	0x01C992B4 BL 0x1B6E8F8
	0x01C992B8 MOV X0, X20
	0x01C992BC MOV X1, X31
	0x01C992C0 MOV X2, X31
	0x01C992C4 BL 0x3A9D6EC
	0x01C992C8 TBZ X0, 0x0, 0x1C993C8
	0x01C992CC LDR X22, [X19 + 0xC0]
	0x01C992D0 CBZ X22, 0x1C993DC
	0x01C992D4 ADRP X23, 0x22B5000
	0x01C992D8 LDR X20, [X22 + 0x188]
	0x01C992DC LDR X23, [X23 + 0x170]
	0x01C992E0 LDR X0, [X23]
	0x01C992E4 BL 0x1B6EA0C
	0x01C992E8 ADRP X8, 0x22B5000
	0x01C992EC LDR X8, [X8 + 0x180]
	0x01C992F0 MOV X1, X19
	0x01C992F4 MOV X3, X31
	0x01C992F8 MOV X21, X0
	0x01C992FC LDR X2, [X8]
	0x01C99300 BL 0x317DB24
	0x01C99304 MOV X0, X20
	0x01C99308 MOV X1, X21
	0x01C9930C MOV X2, X31
	0x01C99310 BL 0x322A948
	0x01C99314 CBZ X0, 0x1C9933C
	0x01C99318 LDR X1, [X23]
	0x01C9931C LDR X8, [X0]
	0x01C99320 CMP X8, X1
	0x01C99324 B.NE 0x1C99338
	0x01C99328 STR X0, [X22 + 0x188]
	0x01C9932C LDR X8, [X0]
	0x01C99330 CMP X8, X1
	0x01C99334 B.EQ 0x1C99340
	0x01C99338 BL 0x1B6ECDC
	0x01C9933C STR X0, [X22 + 0x188]
	0x01C99340 LDR X22, [X19 + 0xC0]
	0x01C99344 CBZ X22, 0x1C993DC
	0x01C99348 ADRP X23, 0x22B5000
	0x01C9934C LDR X20, [X22 + 0x1B0]
	0x01C99350 LDR X23, [X23 + 0x168]
	0x01C99354 LDR X0, [X23]
	0x01C99358 BL 0x1B6EA0C
	0x01C9935C ADRP X8, 0x22B5000
	0x01C99360 LDR X8, [X8 + 0x178]
	0x01C99364 MOV X1, X19
	0x01C99368 MOV X3, X31
	0x01C9936C MOV X21, X0
	0x01C99370 LDR X2, [X8]
	0x01C99374 BL 0x27EC49C
	0x01C99378 MOV X0, X20
	0x01C9937C MOV X1, X21
	0x01C99380 MOV X2, X31
	0x01C99384 BL 0x322A948
	0x01C99388 CBZ X0, 0x1C993C4
	0x01C9938C LDR X21, [X23]
	0x01C99390 MOV X20, X0

ISIL:
	001 Move [X31-80], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X30
	009 Move [X31+72], X19
	010 Move X19, X0
	011 Move X0, X31
	012 Call Camera.get_main
	013 Compare X0, 0
	014 JumpIfEqual {76}
	015 Move X1, X31
	016 Call Component.get_transform, X0
	017 Compare X0, 0
	018 JumpIfEqual {76}
	019 Move X1, X31
	020 Call Transform.get_position, X0
	021 Move S11, [X19+44]
	022 Move S12, [X19+48]
	023 Move S13, [X19+52]
	024 Move S14, [X19+56]
	025 Move X0, X31
	026 Move V8, V0
	027 Move V9, V1
	028 Move V10, V2
	029 Call Camera.get_main
	030 Compare X0, 0
	031 JumpIfEqual {76}
	032 Move X1, X31
	033 Call Component.get_transform, X0
	034 Compare X0, 0
	035 JumpIfEqual {76}
	036 Move X1, X31
	037 Call Transform.get_position, X0
	038 Move X0, [X19+32]
	039 Compare X0, 0
	040 JumpIfEqual {76}
	041 Multiply S3, S8, S11
	042 Multiply S4, S9, S12
	043 Add S3, S3, S4
	044 Multiply S4, S10, S13
	045 Add S3, S4, S3
	046 Add S3, S14, S3
	047 Multiply S5, S11, S3
	048 Multiply S6, S12, S3
	049 Multiply S3, S13, S3
	050 Subtract S5, S8, S5
	051 Subtract S6, S9, S6
	052 Move V4, [X19+40]
	053 Subtract S3, S10, S3
	054 Subtract S0, S5, S0
	055 Subtract S1, S6, S1
	056 Subtract S2, S3, S2
	057 Multiply S0, S0, S0
	058 Multiply S1, S1, S1
	059 Add S0, S0, S1
	060 Multiply S1, S2, S2
	061 Move X30, [X31+64]
	062 Move X19, [X31+72]
	063 Move D9, [X31+48]
	064 Move D8, [X31+56]
	065 Move D11, [X31+32]
	066 Move D10, [X31+40]
	067 Move D13, [X31+16]
	068 Move D12, [X31+24]
	069 Add S0, S1, S0
	070 NotImplemented "Instruction FCMP not yet implemented."
	071 NotImplemented "Instruction CSET not yet implemented."
	072 Move X2, X31
	073 Move V14, [X31+80]
	074 Call Renderer.set_enabled, X0, X1
	075 Return 
	076 Call 0x1B6FA1C

Method: System.Void .ctor()

Disassembly:
	0x01C99394 MOV X1, X21
	0x01C99398 BL 0x1B6E8FC
	0x01C9939C CBZ X0, 0x1C993B8
	0x01C993A0 STR X0, [X22 + 0x1B0]

ISIL:
	001 Move W8, 0x42C80000
	002 Move X1, X31
	003 Move [X0+40], W8
	004 Call MonoBehaviour..ctor, X0
	005 Return 

