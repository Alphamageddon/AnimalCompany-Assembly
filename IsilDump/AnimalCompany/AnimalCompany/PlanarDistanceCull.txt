Type: AnimalCompany.PlanarDistanceCull

Method: System.Void OnEnable()

Disassembly:
	0x01D7D020 ADRP X20, 0x265B000
	0x01D7D024 LDRB W8, [X20 + 0x950]
	0x01D7D028 MOV X19, X0
	0x01D7D02C TBNZ X8, 0x0, 0x1D7D0E0
	0x01D7D030 ADRP X0, 0x2379000
	0x01D7D034 LDR X0, [X0 + 0x478]
	0x01D7D038 BL 0x1C16CF4
	0x01D7D03C ADRP X0, 0x2377000
	0x01D7D040 LDR X0, [X0 + 0xE70]
	0x01D7D044 BL 0x1C16CF4
	0x01D7D048 ADRP X0, 0x2376000
	0x01D7D04C LDR X0, [X0 + 0x648]
	0x01D7D050 BL 0x1C16CF4
	0x01D7D054 ADRP X0, 0x2379000
	0x01D7D058 LDR X0, [X0 + 0x480]
	0x01D7D05C BL 0x1C16CF4
	0x01D7D060 ADRP X0, 0x2379000
	0x01D7D064 LDR X0, [X0 + 0x488]
	0x01D7D068 BL 0x1C16CF4
	0x01D7D06C ADRP X0, 0x2379000
	0x01D7D070 LDR X0, [X0 + 0x490]
	0x01D7D074 BL 0x1C16CF4
	0x01D7D078 ADRP X0, 0x2379000
	0x01D7D07C LDR X0, [X0 + 0x498]
	0x01D7D080 BL 0x1C16CF4
	0x01D7D084 ADRP X0, 0x2379000
	0x01D7D088 LDR X0, [X0 + 0x4A0]
	0x01D7D08C BL 0x1C16CF4
	0x01D7D090 ADRP X0, 0x2379000
	0x01D7D094 LDR X0, [X0 + 0x4A8]
	0x01D7D098 BL 0x1C16CF4
	0x01D7D09C ADRP X0, 0x2379000
	0x01D7D0A0 LDR X0, [X0 + 0x4B0]
	0x01D7D0A4 BL 0x1C16CF4
	0x01D7D0A8 ADRP X0, 0x2379000
	0x01D7D0AC LDR X0, [X0 + 0x4B8]
	0x01D7D0B0 BL 0x1C16CF4
	0x01D7D0B4 ADRP X0, 0x2379000
	0x01D7D0B8 LDR X0, [X0 + 0x4C0]
	0x01D7D0BC BL 0x1C16CF4
	0x01D7D0C0 ADRP X0, 0x2376000
	0x01D7D0C4 LDR X0, [X0 + 0xDB0]
	0x01D7D0C8 BL 0x1C16CF4
	0x01D7D0CC ADRP X0, 0x2376000
	0x01D7D0D0 LDR X0, [X0 + 0xDA0]
	0x01D7D0D4 BL 0x1C16CF4
	0x01D7D0D8 MOVZ W8, 0x1
	0x01D7D0DC STRB W8, [X20 + 0x950]
	0x01D7D0E0 LDR X8, [X19 + 0x28]
	0x01D7D0E4 CBZ X8, 0x1D7D9C4
	0x01D7D0E8 LDR X22, [X8 + 0xB0]
	0x01D7D0EC CBZ X22, 0x1D7D9C4
	0x01D7D0F0 ADRP X23, 0x2377000
	0x01D7D0F4 LDR X23, [X23 + 0xE70]
	0x01D7D0F8 ADRP X21, 0x2379000
	0x01D7D0FC LDR X20, [X22 + 0x20]
	0x01D7D100 LDR X0, [X23]
	0x01D7D104 LDR X21, [X21 + 0x480]
	0x01D7D108 BL 0x1C16F10
	0x01D7D10C LDR X2, [X21]
	0x01D7D110 MOV X1, X19
	0x01D7D114 MOV X3, X31
	0x01D7D118 MOV X21, X0
	0x01D7D11C BL 0x3314368
	0x01D7D120 MOV X0, X20
	0x01D7D124 MOV X1, X21
	0x01D7D128 MOV X2, X31
	0x01D7D12C BL 0x33C0DE4
	0x01D7D130 CBZ X0, 0x1D7D158
	0x01D7D134 LDR X1, [X23]
	0x01D7D138 LDR X8, [X0]
	0x01D7D13C CMP X8, X1
	0x01D7D140 B.NE 0x1D7D154
	0x01D7D144 STR X0, [X22 + 0x20]
	0x01D7D148 LDR X8, [X0]
	0x01D7D14C CMP X8, X1
	0x01D7D150 B.EQ 0x1D7D15C
	0x01D7D154 BL 0x1C171E0
	0x01D7D158 STR X0, [X22 + 0x20]
	0x01D7D15C LDR X22, [X19 + 0x20]

ISIL:
	001 Move [X31-80], D13
	002 Move [X31-72], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X1, X31
	011 Move X19, X0
	012 Call Component.get_transform, X0
	013 Compare X0, 0
	014 JumpIfEqual {94}
	015 Move X1, X31
	016 Call Transform.get_forward, X0
	017 Move X0, X19
	018 Move X1, X31
	019 Move V11, V0
	020 Move V12, V1
	021 Move V13, V2
	022 Call Component.get_transform, X0
	023 Compare X0, 0
	024 JumpIfEqual {94}
	025 Move X1, X31
	026 Call Transform.get_position, X0
	027 Move X20, 0x265C000
	028 Move W8, [X20+1925]
	029 Move V8, V0
	030 Move V9, V1
	031 Move V10, V2
	032 Compare W8, 0
	033 JumpIfNotEqual {39}
	034 Move X0, 0x2377000
	035 Move X0, [X0+1448]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+1925], W8
	039 Move X8, 0x2377000
	040 Move X8, [X8+1448]
	041 Move X0, [X8]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Multiply S0, S11, S11
	047 Multiply S1, S12, S12
	048 Move X8, -19472384
	049 Add S0, S0, S1
	050 Move V1, [X8+380]
	051 Multiply S2, S13, S13
	052 Add S0, S2, S0
	053 NotImplemented "Instruction FSQRT not yet implemented."
	054 NotImplemented "Instruction FCMP not yet implemented."
	055 NotImplemented "Instruction FDIV not yet implemented."
	056 NotImplemented "Instruction FDIV not yet implemented."
	057 NotImplemented "Instruction FDIV not yet implemented."
	058 Move X20, 0x265C000
	059 Move W8, [X20+1923]
	060 Compare W8, 0
	061 JumpIfNotEqual {67}
	062 Move X0, 0x2377000
	063 Move X0, [X0+1440]
	064 Call 0x1C17CF4
	065 Move W8, 1
	066 Move [X20+1923], W8
	067 Move X8, 0x2377000
	068 Move X8, [X8+1440]
	069 Move X8, [X8]
	070 Move X8, [X8+184]
	071 Move S0, [X8]
	072 Move S1, [X8+4]
	073 Move V2, [X8+8]
	074 Multiply S3, S8, S0
	075 Multiply S4, S9, S1
	076 Multiply S5, S10, S2
	077 Move [X19+44], S0
	078 Move [X19+52], S1
	079 Add S0, S3, S4
	080 Add S0, S5, S0
	081 NotImplemented "Instruction FNEG not yet implemented."
	082 Move [X19+52], S2
	083 Move [X19+60], S0
	084 Move X20, [X31+64]
	085 Move X19, [X31+72]
	086 Move X30, [X31+48]
	087 Move D9, [X31+32]
	088 Move D8, [X31+40]
	089 Move D11, [X31+16]
	090 Move D10, [X31+24]
	091 Move D13, [X31+80]
	092 Move D12, [X31+88]
	093 Return 
	094 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x01D7D160 CBZ X22, 0x1D7D9C4
	0x01D7D164 ADRP X23, 0x2379000
	0x01D7D168 LDR X23, [X23 + 0x478]
	0x01D7D16C ADRP X21, 0x2379000
	0x01D7D170 LDR X20, [X22 + 0x20]
	0x01D7D174 LDR X0, [X23]
	0x01D7D178 LDR X21, [X21 + 0x498]
	0x01D7D17C BL 0x1C16F10
	0x01D7D180 LDR X2, [X21]
	0x01D7D184 MOV X1, X19
	0x01D7D188 MOV X3, X31
	0x01D7D18C MOV X21, X0
	0x01D7D190 BL 0x2A76254
	0x01D7D194 MOV X0, X20
	0x01D7D198 MOV X1, X21
	0x01D7D19C MOV X2, X31
	0x01D7D1A0 BL 0x33C0DE4
	0x01D7D1A4 CBZ X0, 0x1D7D1E0
	0x01D7D1A8 LDR X21, [X23]
	0x01D7D1AC MOV X20, X0
	0x01D7D1B0 MOV X1, X21
	0x01D7D1B4 BL 0x1C16E00
	0x01D7D1B8 CBZ X0, 0x1D7D1D4
	0x01D7D1BC STR X0, [X22 + 0x20]
	0x01D7D1C0 LDR X21, [X23]
	0x01D7D1C4 MOV X0, X20
	0x01D7D1C8 MOV X1, X21
	0x01D7D1CC BL 0x1C16E00
	0x01D7D1D0 CBNZ X0, 0x1D7D1E4
	0x01D7D1D4 MOV X0, X20
	0x01D7D1D8 MOV X1, X21
	0x01D7D1DC BL 0x1C171E0
	0x01D7D1E0 STR X31, [X22 + 0x20]
	0x01D7D1E4 ADRP X25, 0x2376000
	0x01D7D1E8 LDR X25, [X25 + 0xDA0]
	0x01D7D1EC ADRP X20, 0x2379000
	0x01D7D1F0 ADRP X24, 0x2376000
	0x01D7D1F4 ADRP X23, 0x2376000
	0x01D7D1F8 LDR X0, [X25]
	0x01D7D1FC LDR X20, [X20 + 0x4C0]
	0x01D7D200 LDR X24, [X24 + 0xDB0]
	0x01D7D204 LDR X23, [X23 + 0x648]
	0x01D7D208 BL 0x1C16F10
	0x01D7D20C LDR X2, [X20]
	0x01D7D210 MOV X1, X19
	0x01D7D214 MOV X3, X31
	0x01D7D218 MOV X20, X0
	0x01D7D21C BL 0x35C52F0
	0x01D7D220 LDR X0, [X24]
	0x01D7D224 MOVZ W1, 0x4
	0x01D7D228 BL 0x1C16D6C
	0x01D7D22C LDR X8, [X23]
	0x01D7D230 MOV X21, X0
	0x01D7D234 LDR W9, [X8 + 0xE0]
	0x01D7D238 CBNZ W9, 0x1D7D244
	0x01D7D23C MOV X0, X8
	0x01D7D240 BL 0x1C16DFC
	0x01D7D244 ADRP X26, 0x265B000
	0x01D7D248 LDRB W8, [X26 + 0x787]
	0x01D7D24C CBNZ W8, 0x1D7D264

ISIL:
	001 Move [X31-80], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X30
	009 Move [X31+72], X19
	010 Move X19, X0
	011 Move X0, X31
	012 Call Camera.get_main
	013 Compare X0, 0
	014 JumpIfEqual {76}
	015 Move X1, X31
	016 Call Component.get_transform, X0
	017 Compare X0, 0
	018 JumpIfEqual {76}
	019 Move X1, X31
	020 Call Transform.get_position, X0
	021 Move S11, [X19+44]
	022 Move S12, [X19+48]
	023 Move S13, [X19+52]
	024 Move S14, [X19+56]
	025 Move X0, X31
	026 Move V8, V0
	027 Move V9, V1
	028 Move V10, V2
	029 Call Camera.get_main
	030 Compare X0, 0
	031 JumpIfEqual {76}
	032 Move X1, X31
	033 Call Component.get_transform, X0
	034 Compare X0, 0
	035 JumpIfEqual {76}
	036 Move X1, X31
	037 Call Transform.get_position, X0
	038 Move X0, [X19+32]
	039 Compare X0, 0
	040 JumpIfEqual {76}
	041 Multiply S3, S8, S11
	042 Multiply S4, S9, S12
	043 Add S3, S3, S4
	044 Multiply S4, S10, S13
	045 Add S3, S4, S3
	046 Add S3, S14, S3
	047 Multiply S5, S11, S3
	048 Multiply S6, S12, S3
	049 Multiply S3, S13, S3
	050 Subtract S5, S8, S5
	051 Subtract S6, S9, S6
	052 Move V4, [X19+40]
	053 Subtract S3, S10, S3
	054 Subtract S0, S5, S0
	055 Subtract S1, S6, S1
	056 Subtract S2, S3, S2
	057 Multiply S0, S0, S0
	058 Multiply S1, S1, S1
	059 Add S0, S0, S1
	060 Multiply S1, S2, S2
	061 Move X30, [X31+64]
	062 Move X19, [X31+72]
	063 Move D9, [X31+48]
	064 Move D8, [X31+56]
	065 Move D11, [X31+32]
	066 Move D10, [X31+40]
	067 Move D13, [X31+16]
	068 Move D12, [X31+24]
	069 Add S0, S1, S0
	070 NotImplemented "Instruction FCMP not yet implemented."
	071 NotImplemented "Instruction CSET not yet implemented."
	072 Move X2, X31
	073 Move V14, [X31+80]
	074 Call Renderer.set_enabled, X0, X1
	075 Return 
	076 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01D7D250 ADRP X0, 0x2376000
	0x01D7D254 LDR X0, [X0 + 0x648]
	0x01D7D258 BL 0x1C16CF4
	0x01D7D25C MOVZ W8, 0x1

ISIL:
	001 Move W8, 0x42C80000
	002 Move X1, X31
	003 Move [X0+40], W8
	004 Call MonoBehaviour..ctor, X0
	005 Return 

