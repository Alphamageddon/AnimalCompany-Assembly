Type: AnimalCompany.DraftAvatarView

Method: AnimalCompany.AvatarSystem.AvatarArmature get__localArmature()

Disassembly:
	0x01D63F8C LDR X10, [X10 + 0x558]
	0x01D63F90 LDP X20, X19, [X31 + 0x10]
	0x01D63F94 LDR X0, [X8]
	0x01D63F98 LDR X2, [X9]
	0x01D63F9C LDR X3, [X10]
	0x01D63FA0 MOVZ W4, 0x31
	0x01D63FA4 MOV X1, X31
	0x01D63FA8 MOV X5, X31
	0x01D63FAC LDP X30, X21, [X31], #0x20
	0x01D63FB0 B 0x35C2344
	0x01D63FB4 BL 0x1C16F20
	0x01D63FB8 STP X30, X21, [X31 - 0x20]!
	0x01D63FBC STP X20, X19, [X31 + 0x10]
	0x01D63FC0 ADRP X21, 0x2675000
	0x01D63FC4 ADRP X20, 0x2390000
	0x01D63FC8 LDRB W8, [X21 + 0x853]
	0x01D63FCC LDR X20, [X20 + 0x898]
	0x01D63FD0 MOV X19, X0
	0x01D63FD4 TBNZ X8, 0x0, 0x1D63FEC
	0x01D63FD8 ADRP X0, 0x2390000
	0x01D63FDC LDR X0, [X0 + 0x898]
	0x01D63FE0 BL 0x1C16CF4
	0x01D63FE4 MOVZ W8, 0x1
	0x01D63FE8 STRB W8, [X21 + 0x853]
	0x01D63FEC LDR X0, [X20]
	0x01D63FF0 LDR W8, [X0 + 0xE0]
	0x01D63FF4 CBNZ W8, 0x1D63FFC
	0x01D63FF8 BL 0x1C16DFC
	0x01D63FFC ADRP X21, 0x2675000
	0x01D64000 LDRB W8, [X21 + 0x78B]
	0x01D64004 CBNZ W8, 0x1D6401C
	0x01D64008 ADRP X0, 0x238F000
	0x01D6400C LDR X0, [X0 + 0x898]
	0x01D64010 BL 0x1C16CF4
	0x01D64014 MOVZ W8, 0x1
	0x01D64018 STRB W8, [X21 + 0x78B]
	0x01D6401C LDR X0, [X20]
	0x01D64020 LDR W8, [X0 + 0xE0]
	0x01D64024 CBNZ W8, 0x1D64030
	0x01D64028 BL 0x1C16DFC
	0x01D6402C LDR X0, [X20]
	0x01D64030 LDR X8, [X0 + 0xB8]
	0x01D64034 MOV X0, X19
	0x01D64038 MOV X1, X31
	0x01D6403C LDR X8, [X8]
	0x01D64040 STR X8, [X19 + 0x28]
	0x01D64044 LDP X20, X19, [X31 + 0x10]
	0x01D64048 LDP X30, X21, [X31], #0x20
	0x01D6404C B 0x3C36C30
	0x01D64050 STP X30, X23, [X31 - 0x30]!
	0x01D64054 STP X22, X21, [X31 + 0x10]
	0x01D64058 STP X20, X19, [X31 + 0x20]
	0x01D6405C ADRP X20, 0x2674000
	0x01D64060 LDRB W8, [X20 + 0x854]
	0x01D64064 MOV X19, X0
	0x01D64068 TBNZ X8, 0x0, 0x1D6408C
	0x01D6406C ADRP X0, 0x2391000
	0x01D64070 LDR X0, [X0 + 0x6D0]
	0x01D64074 BL 0x1C16CF4
	0x01D64078 ADRP X0, 0x2391000
	0x01D6407C LDR X0, [X0 + 0x838]
	0x01D64080 BL 0x1C16CF4
	0x01D64084 MOVZ W8, 0x1
	0x01D64088 STRB W8, [X20 + 0x854]
	0x01D6408C LDR X22, [X19 + 0x28]
	0x01D64090 CBZ X22, 0x1D64124

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2676000
	006 Move X20, 0x2391000
	007 Move W8, [X21+2119]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2391000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x2393000
	018 Move X0, [X0+1992]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2119], W8
	022 Move X0, [X20]
	023 Move X20, [X19+48]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {76}
	036 Move X20, 0x2393000
	037 Move X20, [X20+1992]
	038 Move X0, [X20]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X21, 0x2675000
	044 Move W8, [X21+2141]
	045 Compare W8, 0
	046 JumpIfNotEqual {52}
	047 Move X0, 0x2392000
	048 Move X0, [X0+1992]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X21+2141], W8
	052 Move X0, [X20]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {58}
	056 Call 0x1C17DFC
	057 Move X0, [X20]
	058 Move X8, [X0+184]
	059 Move X9, [X8]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction CSEL not yet implemented."
	062 Compare X9, 0
	063 JumpIfEqual {71}
	064 Move X9, [X9+56]
	065 Compare X9, 0
	066 JumpIfEqual {72}
	067 Move X9, [X9+168]
	068 Compare X9, 0
	069 JumpIfEqual {73}
	070 Move X9, [X9+40]
	071 Move X8, X19
	072 Move X8, X19
	073 Compare X8, 0
	074 JumpIfEqual {82}
	075 Move [X8+48], X9
	076 Move X0, [X19+48]
	077 Move X20, [X31+16]
	078 Move X19, [X31+24]
	079 Move X30, [X31+32]
	080 Move X21, [X31+40]
	081 Return X0
	082 Call 0x1C17F20

Method: System.Void OnEnable()

Disassembly:
	0x01D64094 ADRP X23, 0x2391000
	0x01D64098 LDR X23, [X23 + 0x6D0]
	0x01D6409C ADRP X21, 0x2391000
	0x01D640A0 LDR X20, [X22 + 0x20]
	0x01D640A4 LDR X0, [X23]
	0x01D640A8 LDR X21, [X21 + 0x838]
	0x01D640AC BL 0x1C16F10
	0x01D640B0 LDR X2, [X21]
	0x01D640B4 MOV X1, X19
	0x01D640B8 MOV X3, X31
	0x01D640BC MOV X21, X0
	0x01D640C0 BL 0x2A6B948
	0x01D640C4 MOV X0, X20
	0x01D640C8 MOV X1, X21
	0x01D640CC MOV X2, X31
	0x01D640D0 BL 0x33C0DE4
	0x01D640D4 CBZ X0, 0x1D64110
	0x01D640D8 LDR X20, [X23]
	0x01D640DC MOV X19, X0
	0x01D640E0 MOV X1, X20
	0x01D640E4 BL 0x1C16E00
	0x01D640E8 CBZ X0, 0x1D64104
	0x01D640EC STR X0, [X22 + 0x20]
	0x01D640F0 LDR X20, [X23]
	0x01D640F4 MOV X0, X19
	0x01D640F8 MOV X1, X20
	0x01D640FC BL 0x1C16E00
	0x01D64100 CBNZ X0, 0x1D64114
	0x01D64104 MOV X0, X19
	0x01D64108 MOV X1, X20
	0x01D6410C BL 0x1C171E0
	0x01D64110 STR X31, [X22 + 0x20]
	0x01D64114 LDP X20, X19, [X31 + 0x20]
	0x01D64118 LDP X22, X21, [X31 + 0x10]
	0x01D6411C LDP X30, X23, [X31], #0x30
	0x01D64120 RET
	0x01D64124 BL 0x1C16F20
	0x01D64128 STR X30, [X31 - 0x30]!
	0x01D6412C STP X22, X21, [X31 + 0x10]
	0x01D64130 STP X20, X19, [X31 + 0x20]
	0x01D64134 ADRP X20, 0x2674000
	0x01D64138 LDRB W8, [X20 + 0x858]
	0x01D6413C MOV X19, X0
	0x01D64140 TBNZ X8, 0x0, 0x1D64158
	0x01D64144 ADRP X0, 0x238F000
	0x01D64148 LDR X0, [X0 + 0x598]
	0x01D6414C BL 0x1C16CF4
	0x01D64150 MOVZ W8, 0x1
	0x01D64154 STRB W8, [X20 + 0x858]
	0x01D64158 LDR X0, [X19 + 0x50]
	0x01D6415C CBZ X0, 0x1D641D4
	0x01D64160 MOV X1, X31
	0x01D64164 BL 0x3C40C8C
	0x01D64168 SUBS W20, W0, 0x1
	0x01D6416C B.MI 0x1D641C4
	0x01D64170 ADRP X22, 0x238F000
	0x01D64174 LDR X22, [X22 + 0x598]
	0x01D64178 LDR X0, [X19 + 0x50]
	0x01D6417C CBZ X0, 0x1D641D4
	0x01D64180 MOV W1, W20
	0x01D64184 MOV X2, X31
	0x01D64188 BL 0x3C410A0
	0x01D6418C CBZ X0, 0x1D641D4
	0x01D64190 MOV X1, X31
	0x01D64194 BL 0x3C32ECC
	0x01D64198 LDR X8, [X22]
	0x01D6419C MOV X21, X0
	0x01D641A0 LDR W9, [X8 + 0xE0]
	0x01D641A4 CBNZ W9, 0x1D641B0
	0x01D641A8 MOV X0, X8
	0x01D641AC BL 0x1C16DFC
	0x01D641B0 MOV X0, X21
	0x01D641B4 MOV X1, X31
	0x01D641B8 BL 0x3C394A8
	0x01D641BC SUBS W20, W20, 0x1
	0x01D641C0 B.PL 0x1D64178
	0x01D641C4 LDP X20, X19, [X31 + 0x20]
	0x01D641C8 LDP X22, X21, [X31 + 0x10]
	0x01D641CC LDR X30, [X31], #0x30
	0x01D641D0 RET
	0x01D641D4 BL 0x1C16F20
	0x01D641D8 SUB X31, X31, 0x30
	0x01D641DC STP X30, X21, [X31 + 0x10]
	0x01D641E0 STP X20, X19, [X31 + 0x20]
	0x01D641E4 ADRP X21, 0x2674000
	0x01D641E8 LDRB W8, [X21 + 0x857]
	0x01D641EC MOV X19, X1
	0x01D641F0 MOV X20, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x2675000
	009 Move X24, 0x2390000
	010 Move X19, 0x2392000
	011 Move X22, 0x2390000
	012 Move X21, 0x2390000
	013 Move W8, [X23+2120]
	014 Move X24, [X24+3488]
	015 Move X19, [X19+2000]
	016 Move X22, [X22+3504]
	017 Move X21, [X21+1608]
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x2390000
	024 Move X0, [X0+1608]
	025 Call 0x1C17CF4
	026 Move X0, 0x2392000
	027 Move X0, [X0+2000]
	028 Call 0x1C17CF4
	029 Move X0, 0x2390000
	030 Move X0, [X0+3504]
	031 Call 0x1C17CF4
	032 Move X0, 0x2390000
	033 Move X0, [X0+3488]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+2120], W8
	037 Move X0, [X24]
	038 Call 0x1C17F10
	039 Move X2, [X19]
	040 Move X1, X20
	041 Move X3, X31
	042 Move X19, X0
	043 Call ObserverDelegate..ctor, X0, X1, X2
	044 Move X0, [X22]
	045 Move W1, 1
	046 Call 0x1C17D6C
	047 Move X8, [X21]
	048 Move X20, X0
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Move X22, 0x2675000
	055 Move W8, [X22+1927]
	056 Compare W8, 0
	057 JumpIfNotEqual {63}
	058 Move X0, 0x2390000
	059 Move X0, [X0+1608]
	060 Call 0x1C17CF4
	061 Move W8, 1
	062 Move [X22+1927], W8
	063 Move X0, [X21]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {69}
	067 Call 0x1C17DFC
	068 Move X0, [X21]
	069 Move X8, [X0+184]
	070 Move X8, [X8]
	071 Compare X8, 0
	072 JumpIfEqual {103}
	073 Move X8, [X8+184]
	074 Compare X8, 0
	075 JumpIfEqual {103}
	076 Compare X20, 0
	077 JumpIfEqual {103}
	078 Move X21, [X8+120]
	079 Compare X21, 0
	080 JumpIfEqual {87}
	081 Move X8, [X20]
	082 Move X0, X21
	083 Move X1, [X8+64]
	084 Call 0x1C17E00
	085 Compare X0, 0
	086 JumpIfEqual {105}
	087 Move W8, [X20+24]
	088 Compare W8, 0
	089 JumpIfEqual {104}
	090 Move [X20+32], X21
	091 Move X0, X19
	092 Move X1, X20
	093 Move X20, [X31+48]
	094 Move X19, [X31+56]
	095 Move X22, [X31+32]
	096 Move X21, [X31+40]
	097 Move X24, [X31+16]
	098 Move X23, [X31+24]
	099 Move X2, X31
	100 Move X30, [X31+64]
	101 Call App.RegisterObserver, X0, X1
	102 Return 
	103 Call 0x1C17F20
	104 Call 0x1C17F28
	105 Call 0x1C17F44
	106 Move X1, X31
	107 Call 0x1C17DEC

Method: System.Void OnDisable()

Disassembly:
	0x01D641F4 TBNZ X8, 0x0, 0x1D64230
	0x01D641F8 ADRP X0, 0x238F000
	0x01D641FC LDR X0, [X0 + 0x648]
	0x01D64200 BL 0x1C16CF4
	0x01D64204 ADRP X0, 0x238F000
	0x01D64208 LDR X0, [X0 + 0xAB0]
	0x01D6420C BL 0x1C16CF4
	0x01D64210 ADRP X0, 0x2391000
	0x01D64214 LDR X0, [X0 + 0x840]
	0x01D64218 BL 0x1C16CF4
	0x01D6421C ADRP X0, 0x2391000
	0x01D64220 LDR X0, [X0 + 0x848]
	0x01D64224 BL 0x1C16CF4
	0x01D64228 MOVZ W8, 0x1
	0x01D6422C STRB W8, [X21 + 0x857]
	0x01D64230 ADD X1, X31, 0xC
	0x01D64234 MOV X0, X19
	0x01D64238 MOV X2, X31
	0x01D6423C STR W31, [X31 + 0xC]
	0x01D64240 BL 0x1D7B2BC
	0x01D64244 TBZ X0, 0x0, 0x1D64308
	0x01D64248 LDR X19, [X20 + 0x78]
	0x01D6424C MOV X0, X20
	0x01D64250 MOV X1, X31
	0x01D64254 BL 0x3C32E90
	0x01D64258 CBZ X0, 0x1D64340
	0x01D6425C MOV X1, X31
	0x01D64260 BL 0x3C3F58C
	0x01D64264 CBZ X19, 0x1D64340
	0x01D64268 FMOV S3, 1
	0x01D6426C MOV X0, X19
	0x01D64270 MOV W1, W31
	0x01D64274 MOV X2, X31
	0x01D64278 BL 0x1DD0FA8
	0x01D6427C ADRP X8, 0x238F000
	0x01D64280 LDRB W21, [X20 + 0x88]
	0x01D64284 LDR X8, [X8 + 0xAB0]
	0x01D64288 MOVZ W1, 0x1
	0x01D6428C LDR X0, [X8]
	0x01D64290 BL 0x1C16D6C
	0x01D64294 MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x2675000
	008 Move X23, 0x2390000
	009 Move X20, 0x2392000
	010 Move X21, 0x2390000
	011 Move W8, [X22+2121]
	012 Move X23, [X23+3488]
	013 Move X20, [X20+2000]
	014 Move X21, [X21+1608]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x2390000
	021 Move X0, [X0+1608]
	022 Call 0x1C17CF4
	023 Move X0, 0x2392000
	024 Move X0, [X0+2000]
	025 Call 0x1C17CF4
	026 Move X0, 0x2390000
	027 Move X0, [X0+3488]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+2121], W8
	031 Move X0, [X23]
	032 Call 0x1C17F10
	033 Move X2, [X20]
	034 Move X1, X19
	035 Move X3, X31
	036 Move X20, X0
	037 Call ObserverDelegate..ctor, X0, X1, X2
	038 Move X0, [X21]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X20
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X1, X31
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Call App.DeregisterObserver, X0
	052 Return 

Method: System.Void OnDraftAvatarChanged(SpatialSys.ObservableState.StateChangedEventArgs args)

Disassembly:
	0x01D64298 CBZ W21, 0x1D64318
	0x01D6429C ADRP X8, 0x2391000
	0x01D642A0 LDR W21, [X20 + 0x8C]
	0x01D642A4 LDR X8, [X8 + 0x840]
	0x01D642A8 LDR X0, [X8]
	0x01D642AC BL 0x1C16F10
	0x01D642B0 MOV X1, X31
	0x01D642B4 MOV X20, X0
	0x01D642B8 BL 0x1D36B98
	0x01D642BC STR W21, [X20 + 0x14]
	0x01D642C0 CBZ X19, 0x1D64340
	0x01D642C4 LDR X8, [X19]
	0x01D642C8 MOV X0, X20
	0x01D642CC LDR X1, [X8 + 0x40]
	0x01D642D0 BL 0x1C16E00
	0x01D642D4 CBZ X0, 0x1D64344
	0x01D642D8 LDR W8, [X19 + 0x18]
	0x01D642DC CBZ W8, 0x1D64350
	0x01D642E0 STR X20, [X19 + 0x20]
	0x01D642E4 ADRP X8, 0x238F000
	0x01D642E8 LDR X8, [X8 + 0x648]
	0x01D642EC LDR X0, [X8]
	0x01D642F0 LDR W8, [X0 + 0xE0]
	0x01D642F4 CBNZ W8, 0x1D642FC
	0x01D642F8 BL 0x1C16DFC
	0x01D642FC MOV X0, X19
	0x01D64300 MOV X1, X31
	0x01D64304 BL 0x1D351C4
	0x01D64308 LDP X20, X19, [X31 + 0x20]
	0x01D6430C LDP X30, X21, [X31 + 0x10]
	0x01D64310 ADD X31, X31, 0x30
	0x01D64314 RET
	0x01D64318 ADRP X8, 0x2391000
	0x01D6431C LDR X21, [X20 + 0x80]
	0x01D64320 LDR X8, [X8 + 0x848]
	0x01D64324 LDR X0, [X8]
	0x01D64328 BL 0x1C16F10
	0x01D6432C MOV X1, X31
	0x01D64330 MOV X20, X0
	0x01D64334 BL 0x1D36B98
	0x01D64338 STR X21, [X20 + 0x18]
	0x01D6433C CBNZ X19, 0x1D642C4
	0x01D64340 BL 0x1C16F20
	0x01D64344 BL 0x1C16F44
	0x01D64348 MOV X1, X31
	0x01D6434C BL 0x1C16DEC
	0x01D64350 BL 0x1C16F28
	0x01D64354 STR X30, [X31 - 0x30]!
	0x01D64358 STP X22, X21, [X31 + 0x10]
	0x01D6435C STP X20, X19, [X31 + 0x20]
	0x01D64360 ADRP X20, 0x2674000
	0x01D64364 LDRB W8, [X20 + 0x859]
	0x01D64368 MOV X19, X0
	0x01D6436C TBNZ X8, 0x0, 0x1D643A8
	0x01D64370 ADRP X0, 0x238F000
	0x01D64374 LDR X0, [X0 + 0x648]
	0x01D64378 BL 0x1C16CF4
	0x01D6437C ADRP X0, 0x238F000
	0x01D64380 LDR X0, [X0 + 0xAB0]
	0x01D64384 BL 0x1C16CF4
	0x01D64388 ADRP X0, 0x2391000
	0x01D6438C LDR X0, [X0 + 0x840]
	0x01D64390 BL 0x1C16CF4
	0x01D64394 ADRP X0, 0x2391000
	0x01D64398 LDR X0, [X0 + 0x848]
	0x01D6439C BL 0x1C16CF4
	0x01D643A0 MOVZ W8, 0x1
	0x01D643A4 STRB W8, [X20 + 0x859]
	0x01D643A8 ADRP X8, 0x238F000
	0x01D643AC ADRP X21, 0x238F000
	0x01D643B0 LDRB W9, [X19 + 0x88]
	0x01D643B4 LDR X8, [X8 + 0xAB0]
	0x01D643B8 LDR X21, [X21 + 0x648]
	0x01D643BC CBZ W9, 0x1D64444
	0x01D643C0 LDR X0, [X8]
	0x01D643C4 ADRP X20, 0x2391000
	0x01D643C8 LDR X20, [X20 + 0x840]
	0x01D643CC MOVZ W1, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2675000
	007 Move X21, 0x2390000
	008 Move W8, [X20+2122]
	009 Move X21, [X21+1608]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x2390000
	016 Move X0, [X0+1608]
	017 Call 0x1C17CF4
	018 Move X0, 0x2392000
	019 Move X0, [X0+2008]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+2122], W8
	023 Move X0, [X21]
	024 Move X20, [X19+32]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X22, 0x2675000
	030 Move W8, [X22+1927]
	031 Compare W8, 0
	032 JumpIfNotEqual {38}
	033 Move X0, 0x2390000
	034 Move X0, [X0+1608]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X22+1927], W8
	038 Move X0, [X21]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X21]
	044 Move X8, [X0+184]
	045 Move X8, [X8]
	046 Compare X8, 0
	047 JumpIfEqual {98}
	048 Move X8, [X8+184]
	049 Compare X8, 0
	050 JumpIfEqual {98}
	051 Compare X20, 0
	052 JumpIfEqual {98}
	053 Move X1, [X8+120]
	054 Move X0, X20
	055 Move X2, X31
	056 Call AvatarView.UpdateAvatar, X0, X1
	057 Move W8, [X22+1927]
	058 Move X19, [X19+32]
	059 Compare W8, 0
	060 JumpIfNotEqual {66}
	061 Move X0, 0x2390000
	062 Move X0, [X0+1608]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X22+1927], W8
	066 Move X0, [X21]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {72}
	070 Call 0x1C17DFC
	071 Move X0, [X21]
	072 Move X8, [X0+184]
	073 Move X8, [X8]
	074 Compare X8, 0
	075 JumpIfEqual {98}
	076 Move X8, [X8+184]
	077 Compare X8, 0
	078 JumpIfEqual {98}
	079 Move X8, [X8+120]
	080 Compare X8, 0
	081 JumpIfEqual {98}
	082 Move X9, 0x2392000
	083 Move X9, [X9+2008]
	084 Move X0, [X8+80]
	085 Move X1, [X9]
	086 Call StatePrimitive`1<Color>.op_Implicit, X0
	087 Compare X19, 0
	088 JumpIfEqual {98}
	089 Move X0, X19
	090 Move X20, [X31+32]
	091 Move X19, [X31+40]
	092 Move X22, [X31+16]
	093 Move X21, [X31+24]
	094 Move X1, X31
	095 Move X30, [X31+48]
	096 Call AvatarView.SetColor, X0, X1
	097 Return 
	098 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x01D643D0 BL 0x1C16D6C
	0x01D643D4 LDR X8, [X20]
	0x01D643D8 LDR W22, [X19 + 0x8C]
	0x01D643DC MOV X19, X0
	0x01D643E0 MOV X0, X8
	0x01D643E4 BL 0x1C16F10
	0x01D643E8 MOV X1, X31
	0x01D643EC MOV X20, X0
	0x01D643F0 BL 0x1D36B98
	0x01D643F4 STR W22, [X20 + 0x14]
	0x01D643F8 CBZ X19, 0x1D64488
	0x01D643FC LDR X8, [X19]
	0x01D64400 MOV X0, X20
	0x01D64404 LDR X1, [X8 + 0x40]
	0x01D64408 BL 0x1C16E00
	0x01D6440C CBZ X0, 0x1D6449C
	0x01D64410 LDR W8, [X19 + 0x18]
	0x01D64414 CBZ W8, 0x1D644A8
	0x01D64418 STR X20, [X19 + 0x20]
	0x01D6441C LDR X0, [X21]
	0x01D64420 LDR W8, [X0 + 0xE0]
	0x01D64424 CBNZ W8, 0x1D6442C
	0x01D64428 BL 0x1C16DFC
	0x01D6442C MOV X0, X19
	0x01D64430 LDP X20, X19, [X31 + 0x20]
	0x01D64434 LDP X22, X21, [X31 + 0x10]
	0x01D64438 MOV X1, X31
	0x01D6443C LDR X30, [X31], #0x30
	0x01D64440 B 0x1D351C4
	0x01D64444 LDR X9, [X19 + 0x80]
	0x01D64448 CBZ X9, 0x1D6448C
	0x01D6444C LDR X0, [X8]
	0x01D64450 MOVZ W1, 0x1
	0x01D64454 BL 0x1C16D6C
	0x01D64458 ADRP X8, 0x2391000
	0x01D6445C LDR X22, [X19 + 0x80]
	0x01D64460 LDR X8, [X8 + 0x848]
	0x01D64464 MOV X19, X0
	0x01D64468 LDR X8, [X8]
	0x01D6446C MOV X0, X8
	0x01D64470 BL 0x1C16F10
	0x01D64474 MOV X1, X31
	0x01D64478 MOV X20, X0
	0x01D6447C BL 0x1D36B98
	0x01D64480 STR X22, [X20 + 0x18]
	0x01D64484 CBNZ X19, 0x1D643FC
	0x01D64488 BL 0x1C16F20
	0x01D6448C LDP X20, X19, [X31 + 0x20]
	0x01D64490 LDP X22, X21, [X31 + 0x10]
	0x01D64494 LDR X30, [X31], #0x30
	0x01D64498 RET
	0x01D6449C BL 0x1C16F44
	0x01D644A0 MOV X1, X31
	0x01D644A4 BL 0x1C16DEC
	0x01D644A8 BL 0x1C16F28
	0x01D644AC SUB X31, X31, 0xC0
	0x01D644B0 STR D10, [X31 + 0x80]
	0x01D644B4 STP D9, D8, [X31 + 0x90]
	0x01D644B8 STP X30, X21, [X31 + 0xA0]
	0x01D644BC STP X20, X19, [X31 + 0xB0]
	0x01D644C0 ADRP X21, 0x2674000
	0x01D644C4 ADRP X20, 0x238F000
	0x01D644C8 LDRB W8, [X21 + 0x85A]
	0x01D644CC LDR X20, [X20 + 0x598]
	0x01D644D0 MOV X19, X0
	0x01D644D4 TBNZ X8, 0x0, 0x1D644EC
	0x01D644D8 ADRP X0, 0x238F000
	0x01D644DC LDR X0, [X0 + 0x598]
	0x01D644E0 BL 0x1C16CF4
	0x01D644E4 MOVZ W8, 0x1
	0x01D644E8 STRB W8, [X21 + 0x85A]
	0x01D644EC FMOV S0, W31
	0x01D644F0 FMOV S1, 1
	0x01D644F4 FMOV S2, W31
	0x01D644F8 FMOV S3, 1
	0x01D644FC MOV X0, X31
	0x01D64500 BL 0x3C0D030
	0x01D64504 LDR X0, [X20]
	0x01D64508 LDR X20, [X19 + 0x50]
	0x01D6450C LDR W8, [X0 + 0xE0]
	0x01D64510 CBNZ W8, 0x1D64518
	0x01D64514 BL 0x1C16DFC
	0x01D64518 MOV X0, X20
	0x01D6451C MOV X1, X31
	0x01D64520 MOV X2, X31
	0x01D64524 BL 0x3C354F8
	0x01D64528 TBZ X0, 0x0, 0x1D645E4
	0x01D6452C LDR X0, [X19 + 0x50]
	0x01D64530 CBZ X0, 0x1D645FC
	0x01D64534 ADD X8, X31, 0x40
	0x01D64538 MOV X1, X31
	0x01D6453C BL 0x3C3F1C8
	0x01D64540 LDP V0, V1, [X31 + 0x40]
	0x01D64544 LDP V2, V3, [X31 + 0x60]
	0x01D64548 ADD X0, X31, 0x0
	0x01D6454C MOV X1, X31
	0x01D64550 STP V0, V1, [X31]
	0x01D64554 STP V2, V3, [X31 + 0x20]
	0x01D64558 BL 0x3C0D150
	0x01D6455C ADRP X20, 0x2674000
	0x01D64560 LDRB W8, [X20 + 0x783]
	0x01D64564 CBNZ W8, 0x1D6457C
	0x01D64568 ADRP X0, 0x238F000
	0x01D6456C LDR X0, [X0 + 0x5A0]
	0x01D64570 BL 0x1C16CF4
	0x01D64574 MOVZ W8, 0x1
	0x01D64578 STRB W8, [X20 + 0x783]
	0x01D6457C ADRP X20, 0x238F000
	0x01D64580 LDR X20, [X20 + 0x5A0]
	0x01D64584 ADRP X21, 0x2674000
	0x01D64588 LDRB W9, [X21 + 0x85B]
	0x01D6458C LDR X8, [X20]
	0x01D64590 LDR X8, [X8 + 0xB8]
	0x01D64594 LDP S10, S9, [X8]
	0x01D64598 LDR V8, [X8 + 0x8]
	0x01D6459C CBNZ W9, 0x1D645B8
	0x01D645A0 MOV X0, X20
	0x01D645A4 BL 0x1C16CF4
	0x01D645A8 LDR X8, [X20]
	0x01D645AC MOVZ W9, 0x1
	0x01D645B0 STRB W9, [X21 + 0x85B]
	0x01D645B4 LDR X8, [X8 + 0xB8]
	0x01D645B8 LDR V0, [X19 + 0x70]
	0x01D645BC LDP S1, S2, [X8 + 0xC]
	0x01D645C0 LDR V5, [X8 + 0x14]
	0x01D645C4 MOV X0, X31
	0x01D645C8 FMUL S3, S1, S0
	0x01D645CC FMUL S4, S2, S0
	0x01D645D0 FMUL S5, S5, S0
	0x01D645D4 MOV V0.16B, V10.16B
	0x01D645D8 MOV V1.16B, V9.16B
	0x01D645DC MOV V2.16B, V8.16B
	0x01D645E0 BL 0x3C0CCD8
	0x01D645E4 LDP X20, X19, [X31 + 0xB0]
	0x01D645E8 LDP X30, X21, [X31 + 0xA0]
	0x01D645EC LDP D9, D8, [X31 + 0x90]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2675000
	007 Move X20, 0x2390000
	008 Move W8, [X21+2123]
	009 Move X20, [X20+1432]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x2390000
	016 Move X0, [X0+1928]
	017 Call 0x1C17CF4
	018 Move X0, 0x2390000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move X0, 0x2392000
	022 Move X0, [X0+2016]
	023 Call 0x1C17CF4
	024 Move X0, 0x2392000
	025 Move X0, [X0+2024]
	026 Call 0x1C17CF4
	027 Move X0, 0x2392000
	028 Move X0, [X0+2032]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+2123], W8
	032 Move X0, X19
	033 Call DraftAvatarView.get__localArmature, X0
	034 Move X8, [X20]
	035 Move X20, X0
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move X0, X20
	042 Move X1, X31
	043 Move X2, X31
	044 Call Object.op_Equality, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {76}
	049 Move X8, 0x2390000
	050 Move X8, [X8+1928]
	051 Move X0, [X8]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X8, 0x2392000
	057 Move X9, 0x2392000
	058 Move X10, 0x2392000
	059 Move X8, [X8+2032]
	060 Move X9, [X9+2024]
	061 Move X10, [X10+2016]
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X1, [X8]
	065 Move X3, [X9]
	066 Move X4, [X10]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move W0, 32
	070 Move W5, 50
	071 Move X2, X31
	072 Move X6, X31
	073 Move X30, [X31+48]
	074 Call Log.Warning, X0, X1, X2, X3, X4, X5
	075 Return 
	076 Move X0, X19
	077 Call DraftAvatarView.get__localArmature, X0
	078 Compare X0, 0
	079 JumpIfEqual {154}
	080 Move W21, 4
	081 Move X8, [X0+32]
	082 Compare X8, 0
	083 JumpIfEqual {154}
	084 Move W8, [X8+24]
	085 Subtract X22, X21, 4
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X8, [X19+40]
	088 Compare X8, 0
	089 JumpIfEqual {154}
	090 Move X8, [X8+32]
	091 Compare X8, 0
	092 JumpIfEqual {154}
	093 Move W9, [X8+24]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X20, [X8]
	096 Move X0, X19
	097 Call DraftAvatarView.get__localArmature, X0
	098 Compare X0, 0
	099 JumpIfEqual {154}
	100 Move X8, [X0+32]
	101 Compare X8, 0
	102 JumpIfEqual {154}
	103 Move W9, [X8+24]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X0, [X8]
	106 Compare X0, 0
	107 JumpIfEqual {154}
	108 Move X1, X31
	109 Call Transform.get_localPosition, X0
	110 Compare X20, 0
	111 JumpIfEqual {154}
	112 Move X0, X20
	113 Move X1, X31
	114 Call Transform.set_localPosition, X0, X1
	115 Move X0, X19
	116 Call DraftAvatarView.get__localArmature, X0
	117 Compare X0, 0
	118 JumpIfEqual {154}
	119 Move X8, [X0+32]
	120 Compare X8, 0
	121 JumpIfEqual {154}
	122 Move W9, [X8+24]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X0, [X8]
	125 Compare X0, 0
	126 JumpIfEqual {154}
	127 Move X1, X31
	128 Call Transform.get_localRotation, X0
	129 Move X0, X20
	130 Move X1, X31
	131 Call Transform.set_localRotation, X0, X1
	132 Move X0, X19
	133 Call DraftAvatarView.get__localArmature, X0
	134 Compare X0, 0
	135 JumpIfEqual {154}
	136 Move X8, [X0+32]
	137 Compare X8, 0
	138 JumpIfEqual {154}
	139 Move W9, [X8+24]
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move X0, [X8]
	142 Compare X0, 0
	143 JumpIfEqual {154}
	144 Move X1, X31
	145 Call Transform.get_localScale, X0
	146 Move X0, X20
	147 Move X1, X31
	148 Call Transform.set_localScale, X0, X1
	149 Move X0, X19
	150 Call DraftAvatarView.get__localArmature, X0
	151 Add X21, X21, 1
	152 Compare X0, 0
	153 JumpIfNotEqual {81}
	154 Call 0x1C17F20
	155 Move X20, [X31+32]
	156 Move X19, [X31+40]
	157 Move X22, [X31+16]
	158 Move X21, [X31+24]
	159 Move X30, [X31+48]
	160 Return 
	161 Call 0x1C17F28

Method: System.Void .ctor()

Disassembly:
	0x01D645F0 LDR V10, [X31 + 0x80]
	0x01D645F4 ADD X31, X31, 0xC0

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

