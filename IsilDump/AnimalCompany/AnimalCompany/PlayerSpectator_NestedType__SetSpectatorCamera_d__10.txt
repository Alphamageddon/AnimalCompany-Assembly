Type: AnimalCompany.PlayerSpectator/<SetSpectatorCamera>d__10

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01DC8E90 MOVK W8, 0x3E990000
	0x01DC8E94 MOV V0.S[1], V1.S[0]
	0x01DC8E98 UNIMPLEMENTED
	0x01DC8E9C FSUB V0.2S, V0.2S, V3.2S
	0x01DC8EA0 FSUB S2, S2, S4
	0x00000000 INVALID
	0x01DC8EA8 FMUL S1, S2, S10
	0x01DC8EAC FADD V0.2S, V8.2S, V0.2S
	0x01DC8EB0 FADD S1, S9, S1
	0x01DC8EB4 STR D0, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01DC8EC0 LDR V10, [X19 + 0xF8]

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01DC8EC4 LDR V9, [X19 + 0x100]
	0x01DC8EC8 LDR W8, [X0 + 0xE0]
	0x01DC8ECC CBNZ W8, 0x1DC8ED4
	0x01DC8ED0 BL 0x1C16DFC
	0x01DC8ED4 MOV X0, X31
	0x01DC8ED8 BL 0x3C8A660
	0x01DC8EDC MOV X0, X31
	0x01DC8EE0 STR D0, [X31 + 0x10]
	0x01DC8EE4 STR D1, [X31]
	0x01DC8EE8 MOV V8.16B, V2.16B
	0x01DC8EEC BL 0x3C3C7DC
	0x01DC8EF0 LDP V1, V2, [X31]
	0x01DC8EF4 MOVZ W8, 0xD70A
	0x01DC8EF8 MOVK W8, 0x3BA30000
	0x01DC8EFC UNIMPLEMENTED
	0x01DC8F00 ADRP X8, 0xFFFFFFFFFED22000
	0x01DC8F04 MOV V2.S[1], V1.S[0]
	0x01DC8F08 LDR V12, [X8 + 0x40C]
	0x01DC8F0C FMUL S1, S8, S0
	0x00000000 INVALID
	0x00000000 INVALID
	0x01DC8F18 FADD V0.2S, V10.2S, V0.2S
	0x01DC8F1C STR D0, [X19 + 0xF8]
	0x01DC8F20 FMUL S0, S1, S12
	0x01DC8F24 FADD S0, S9, S0
	0x01DC8F28 STR S0, [X19 + 0x100]
	0x01DC8F2C LDR V9, [X20]
	0x01DC8F30 LDR V10, [X19 + 0x10C]
	0x01DC8F34 MOV X0, X31
	0x01DC8F38 BL 0x3C8A660
	0x01DC8F3C MOV X0, X31
	0x01DC8F40 STR D0, [X31 + 0x10]
	0x01DC8F44 STR D1, [X31]
	0x01DC8F48 MOV V8.16B, V2.16B
	0x01DC8F4C BL 0x3C3C7DC
	0x01DC8F50 LDP V2, V1, [X31]
	0x01DC8F54 MOV V1.S[1], V2.S[0]
	0x00000000 INVALID
	0x00000000 INVALID
	0x01DC8F60 FADD V1.2S, V9.2S, V1.2S
	0x01DC8F64 STR D1, [X20]
	0x01DC8F68 LDR X8, [X19 + 0xF0]
	0x01DC8F6C FMUL S0, S8, S0
	0x01DC8F70 FMUL S0, S0, S12
	0x01DC8F74 FADD S0, S10, S0
	0x01DC8F78 STR S0, [X19 + 0x10C]
	0x01DC8F7C CBZ X8, 0x1DC95F8
	0x01DC8F80 LDR W9, [X8 + 0x18]
	0x01DC8F84 CMP W9, 0x1
	0x01DC8F88 B.LS 0x1DC95FC
	0x01DC8F8C LDR X0, [X8 + 0x28]
	0x01DC8F90 CBZ X0, 0x1DC95F8
	0x01DC8F94 LDR V0, [X19 + 0x118]
	0x01DC8F98 LDR V1, [X19 + 0x100]
	0x01DC8F9C LDR V3, [X19 + 0x110]
	0x01DC8FA0 LDR V4, [X19 + 0xF8]
	0x01DC8FA4 MOV X1, X31
	0x01DC8FA8 FADD S2, S0, S1
	0x01DC8FAC FADD V0.2S, V3.2S, V4.2S
	0x01DC8FB0 MOV S1, V0.S[1]
	0x01DC8FB4 BL 0x3C8F014
	0x01DC8FB8 LDR X8, [X19 + 0xF0]
	0x01DC8FBC CBZ X8, 0x1DC95F8
	0x01DC8FC0 LDR W9, [X8 + 0x18]
	0x01DC8FC4 CMP W9, 0x2
	0x01DC8FC8 B.LS 0x1DC95FC
	0x01DC8FCC LDR X0, [X8 + 0x30]
	0x01DC8FD0 CBZ X0, 0x1DC95F8
	0x01DC8FD4 LDR V0, [X19 + 0x124]
	0x01DC8FD8 LDR V1, [X19 + 0x10C]
	0x01DC8FDC LDR V3, [X20 + 0x18]
	0x01DC8FE0 LDR V4, [X20]
	0x01DC8FE4 MOV X1, X31
	0x01DC8FE8 FADD S2, S0, S1
	0x01DC8FEC FADD V0.2S, V3.2S, V4.2S
	0x01DC8FF0 MOV S1, V0.S[1]
	0x01DC8FF4 BL 0x3C8F014
	0x01DC8FF8 LDR X0, [X19 + 0xB8]
	0x01DC8FFC CBZ X0, 0x1DC95F8
	0x01DC9000 MOV X1, X31
	0x01DC9004 BL 0x3C3F58C
	0x01DC9008 LDR X0, [X19 + 0xB0]
	0x01DC900C CBZ X0, 0x1DC95F8
	0x01DC9010 MOV X1, X31
	0x01DC9014 MOV V8.16B, V0.16B
	0x01DC9018 MOV V9.16B, V1.16B
	0x01DC901C MOV V10.16B, V2.16B
	0x01DC9020 BL 0x3C3F58C
	0x01DC9024 ADRP X24, 0x260F000
	0x01DC9028 LDRB W8, [X24 + 0x85C]
	0x01DC902C MOV V11.16B, V0.16B
	0x01DC9030 MOV V12.16B, V1.16B
	0x01DC9034 MOV V13.16B, V2.16B
	0x01DC9038 CBNZ W8, 0x1DC9050
	0x01DC903C ADRP X0, 0x232A000
	0x01DC9040 LDR X0, [X0 + 0x5A8]
	0x01DC9044 BL 0x1C16CF4
	0x01DC9048 MOVZ W8, 0x1
	0x01DC904C STRB W8, [X24 + 0x85C]
	0x01DC9050 ADRP X23, 0x232A000
	0x01DC9054 LDR X23, [X23 + 0x5A8]
	0x01DC9058 FSUB S11, S8, S11
	0x01DC905C FSUB S9, S9, S12
	0x01DC9060 FSUB S8, S10, S13
	0x01DC9064 LDR X0, [X23]
	0x01DC9068 LDR W8, [X0 + 0xE0]
	0x01DC906C CBNZ W8, 0x1DC9074
	0x01DC9070 BL 0x1C16DFC
	0x01DC9074 FMUL S0, S11, S11
	0x01DC9078 FMUL S1, S9, S9
	0x01DC907C FMUL S2, S8, S8
	0x01DC9080 FADD S0, S0, S1
	0x01DC9084 FADD S0, S2, S0
	0x01DC9088 FSQRT S0, S0
	0x01DC908C FMOV S1, 0.75
	0x01DC9090 FCMP S0, S1
	0x01DC9094 B.LE 0x1DC9228
	0x01DC9098 LDR X8, [X19 + 0xF0]
	0x01DC909C CBZ X8, 0x1DC95F8
	0x01DC90A0 LDR W9, [X8 + 0x18]
	0x01DC90A4 CMP W9, 0x1
	0x01DC90A8 B.LS 0x1DC95FC
	0x01DC90AC LDR X0, [X19 + 0xB0]
	0x01DC90B0 CBZ X0, 0x1DC95F8
	0x01DC90B4 LDR X20, [X8 + 0x28]
	0x01DC90B8 MOV X1, X31
	0x01DC90BC BL 0x3C3F58C
	0x01DC90C0 LDR X0, [X19 + 0xB8]
	0x01DC90C4 STR S0, [X31 + 0x10]
	0x01DC90C8 CBZ X0, 0x1DC95F8
	0x01DC90CC MOV X1, X31
	0x01DC90D0 MOV V9.16B, V1.16B
	0x01DC90D4 MOV V10.16B, V2.16B
	0x01DC90D8 BL 0x3C3F58C
	0x01DC90DC LDR X0, [X19 + 0xB0]
	0x01DC90E0 CBZ X0, 0x1DC95F8
	0x01DC90E4 MOV X1, X31
	0x01DC90E8 MOV V11.16B, V0.16B
	0x01DC90EC MOV V12.16B, V1.16B
	0x01DC90F0 MOV V13.16B, V2.16B
	0x01DC90F4 BL 0x3C3F58C
	0x01DC90F8 ADRP X25, 0x260F000
	0x01DC90FC LDRB W8, [X25 + 0x785]
	0x01DC9100 MOV V14.16B, V0.16B
	0x01DC9104 MOV V15.16B, V1.16B
	0x01DC9108 MOV V8.16B, V2.16B
	0x01DC910C CBNZ W8, 0x1DC9124
	0x01DC9110 ADRP X0, 0x232A000
	0x01DC9114 LDR X0, [X0 + 0x5A8]
	0x01DC9118 BL 0x1C16CF4
	0x01DC911C MOVZ W8, 0x1
	0x01DC9120 STRB W8, [X25 + 0x785]
	0x01DC9124 LDR X0, [X23]
	0x01DC9128 FSUB S14, S11, S14
	0x01DC912C FSUB S11, S12, S15
	0x01DC9130 FSUB S8, S13, S8
	0x01DC9134 LDR W8, [X0 + 0xE0]
	0x01DC9138 CBNZ W8, 0x1DC9140
	0x01DC913C BL 0x1C16DFC
	0x01DC9140 FMUL S0, S14, S14
	0x01DC9144 FMUL S1, S11, S11
	0x01DC9148 ADRP X8, 0xFFFFFFFFFED21000
	0x01DC914C FADD S0, S0, S1
	0x01DC9150 LDR V1, [X8 + 0x17C]
	0x01DC9154 FMUL S2, S8, S8
	0x01DC9158 FADD S0, S2, S0
	0x01DC915C FSQRT S2, S0
	0x01DC9160 FCMP S2, S1
	0x01DC9164 B.LE 0x1DC9178
	0x01DC9168 FDIV S0, S14, S2
	0x01DC916C FDIV S1, S11, S2
	0x01DC9170 FDIV S2, S8, S2
	0x01DC9174 B 0x1DC91A4
	0x01DC9178 LDRB W8, [X21 + 0x783]
	0x01DC917C CBNZ W8, 0x1DC9194
	0x01DC9180 ADRP X0, 0x232A000
	0x01DC9184 LDR X0, [X0 + 0x5A0]
	0x01DC9188 BL 0x1C16CF4
	0x01DC918C MOVZ W8, 0x1
	0x01DC9190 STRB W8, [X21 + 0x783]
	0x01DC9194 LDR X8, [X22]
	0x01DC9198 LDR X8, [X8 + 0xB8]
	0x01DC919C LDP S0, S1, [X8]
	0x01DC91A0 LDR V2, [X8 + 0x8]
	0x01DC91A4 CBZ X20, 0x1DC95F8
	0x01DC91A8 FMOV S3, 0.75
	0x01DC91AC FMUL S2, S2, S3
	0x01DC91B0 FMUL S1, S1, S3
	0x01DC91B4 FMUL S0, S0, S3
	0x01DC91B8 LDR V3, [X31 + 0x10]
	0x01DC91BC FADD S2, S10, S2
	0x01DC91C0 FADD S1, S9, S1
	0x01DC91C4 MOV X0, X20
	0x01DC91C8 FADD S0, S3, S0
	0x01DC91CC MOV X1, X31
	0x01DC91D0 BL 0x3C8F014
	0x01DC91D4 LDR X8, [X19 + 0xF0]
	0x01DC91D8 CBZ X8, 0x1DC95F8
	0x01DC91DC LDR W9, [X8 + 0x18]
	0x01DC91E0 CMP W9, 0x1
	0x01DC91E4 B.LS 0x1DC95FC
	0x01DC91E8 LDRB W9, [X21 + 0x783]
	0x01DC91EC LDR X20, [X8 + 0x28]
	0x01DC91F0 CBNZ W9, 0x1DC9208
	0x01DC91F4 ADRP X0, 0x232A000
	0x01DC91F8 LDR X0, [X0 + 0x5A0]
	0x01DC91FC BL 0x1C16CF4
	0x01DC9200 MOVZ W8, 0x1
	0x01DC9204 STRB W8, [X21 + 0x783]
	0x01DC9208 CBZ X20, 0x1DC95F8
	0x01DC920C LDR X8, [X22]
	0x01DC9210 MOV X0, X20
	0x01DC9214 MOV X1, X31
	0x01DC9218 LDR X8, [X8 + 0xB8]
	0x01DC921C LDP S1, S2, [X8 + 0x4]
	0x01DC9220 LDR V0, [X8]
	0x01DC9224 BL 0x3C8E908
	0x01DC9228 LDR X0, [X19 + 0xC0]
	0x01DC922C CBZ X0, 0x1DC95F8
	0x01DC9230 MOV X1, X31
	0x01DC9234 BL 0x3C3F58C
	0x01DC9238 LDR X0, [X19 + 0xB0]
	0x01DC923C CBZ X0, 0x1DC95F8
	0x01DC9240 MOV X1, X31
	0x01DC9244 MOV V8.16B, V0.16B
	0x01DC9248 MOV V9.16B, V1.16B
	0x01DC924C MOV V10.16B, V2.16B
	0x01DC9250 BL 0x3C3F58C
	0x01DC9254 LDRB W8, [X24 + 0x85C]
	0x01DC9258 MOV V11.16B, V0.16B
	0x01DC925C MOV V12.16B, V1.16B
	0x01DC9260 MOV V13.16B, V2.16B
	0x01DC9264 CBNZ W8, 0x1DC927C
	0x01DC9268 ADRP X0, 0x232A000
	0x01DC926C LDR X0, [X0 + 0x5A8]
	0x01DC9270 BL 0x1C16CF4
	0x01DC9274 MOVZ W8, 0x1
	0x01DC9278 STRB W8, [X24 + 0x85C]
	0x01DC927C LDR X0, [X23]
	0x01DC9280 FSUB S11, S8, S11
	0x01DC9284 FSUB S9, S9, S12
	0x01DC9288 FSUB S8, S10, S13
	0x01DC928C LDR W8, [X0 + 0xE0]
	0x01DC9290 CBNZ W8, 0x1DC9298
	0x01DC9294 BL 0x1C16DFC
	0x01DC9298 FMUL S0, S11, S11
	0x01DC929C FMUL S1, S9, S9
	0x01DC92A0 FMUL S2, S8, S8
	0x01DC92A4 FADD S0, S0, S1
	0x01DC92A8 FADD S0, S2, S0
	0x01DC92AC FSQRT S0, S0
	0x01DC92B0 FMOV S1, 0.75
	0x01DC92B4 FCMP S0, S1
	0x01DC92B8 B.LE 0x1DC944C
	0x01DC92BC LDR X8, [X19 + 0xF0]
	0x01DC92C0 CBZ X8, 0x1DC95F8
	0x01DC92C4 LDR W9, [X8 + 0x18]
	0x01DC92C8 CMP W9, 0x2
	0x01DC92CC B.LS 0x1DC95FC
	0x01DC92D0 LDR X0, [X19 + 0xB0]
	0x01DC92D4 CBZ X0, 0x1DC95F8
	0x01DC92D8 LDR X20, [X8 + 0x30]
	0x01DC92DC MOV X1, X31
	0x01DC92E0 BL 0x3C3F58C
	0x01DC92E4 LDR X0, [X19 + 0xC0]
	0x01DC92E8 STR S0, [X31 + 0x10]
	0x01DC92EC CBZ X0, 0x1DC95F8
	0x01DC92F0 MOV X1, X31
	0x01DC92F4 MOV V9.16B, V1.16B
	0x01DC92F8 MOV V10.16B, V2.16B
	0x01DC92FC BL 0x3C3F58C
	0x01DC9300 LDR X0, [X19 + 0xB0]
	0x01DC9304 CBZ X0, 0x1DC95F8
	0x01DC9308 MOV X1, X31
	0x01DC930C MOV V11.16B, V0.16B
	0x01DC9310 MOV V12.16B, V1.16B
	0x01DC9314 MOV V13.16B, V2.16B
	0x01DC9318 BL 0x3C3F58C
	0x01DC931C ADRP X24, 0x260F000
	0x01DC9320 LDRB W8, [X24 + 0x785]
	0x01DC9324 MOV V14.16B, V0.16B
	0x01DC9328 MOV V15.16B, V1.16B
	0x01DC932C MOV V8.16B, V2.16B
	0x01DC9330 CBNZ W8, 0x1DC9348
	0x01DC9334 ADRP X0, 0x232A000
	0x01DC9338 LDR X0, [X0 + 0x5A8]
	0x01DC933C BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+32], D15
	003 Move [X31+40], D14
	004 Move [X31+48], D13
	005 Move [X31+56], D12
	006 Move [X31+64], D11
	007 Move [X31+72], D10
	008 Move [X31+80], D9
	009 Move [X31+88], D8
	010 Move [X31+96], X30
	011 Move [X31+112], X24
	012 Move [X31+120], X23
	013 Move [X31+128], X22
	014 Move [X31+136], X21
	015 Move [X31+144], X20
	016 Move [X31+152], X19
	017 Move W8, [X0+16]
	018 Move X21, [X0+40]
	019 Move X19, X0
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Compare W8, 0
	022 JumpIfNotEqual {319}
	023 Move W8, [X19+32]
	024 Move TEMP, 0
	025 Not TEMP
	026 Move W9, TEMP
	027 Move [X19+16], W9
	028 Compare W8, 0
	029 JumpIfEqual {81}
	030 Compare X21, 0
	031 JumpIfNotEqual {100}
	032 Move W8, [X19+32]
	033 Move TEMP, 0
	034 Not TEMP
	035 Move W9, TEMP
	036 Move [X19+16], W9
	037 Compare W8, 0
	038 JumpIfEqual {319}
	039 Compare X21, 0
	040 JumpIfEqual {337}
	041 Move X0, [X21+40]
	042 Compare X0, 0
	043 JumpIfEqual {337}
	044 Move S1, [X19+52]
	045 Move S2, [X19+56]
	046 Move V0, [X19+48]
	047 Move X1, X31
	048 Call Player.Rotate, X0, X1
	049 Move X20, 0x2611000
	050 Move V8, [X19+48]
	051 Move W8, [X20+1925]
	052 Move V9, [X19+56]
	053 Compare W8, 0
	054 JumpIfNotEqual {60}
	055 Move X0, 0x232C000
	056 Move X0, [X0+1448]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X20+1925], W8
	060 Move X23, 0x232C000
	061 Move X23, [X23+1448]
	062 Move X0, [X23]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X8, -19779584
	068 Multiply S1, S8, S8
	069 Move S0, W31
	070 Move V12, [X8+380]
	071 Move X22, 0x232C000
	072 Add S1, S1, S0
	073 Multiply S2, S9, S9
	074 Move X22, [X22+1440]
	075 Add S1, S2, S1
	076 NotImplemented "Instruction FSQRT not yet implemented."
	077 NotImplemented "Instruction FCMP not yet implemented."
	078 NotImplemented "Instruction FDIV not yet implemented."
	079 NotImplemented "Instruction FDIV not yet implemented."
	080 NotImplemented "Instruction FDIV not yet implemented."
	081 Compare X21, 0
	082 JumpIfEqual {337}
	083 Move X0, [X21+32]
	084 Compare X0, 0
	085 JumpIfEqual {337}
	086 Move W1, 1
	087 Call PlayerView.SetIsLocalPlayer, X0, X1
	088 Move X0, [X21+64]
	089 Compare X0, 0
	090 JumpIfEqual {337}
	091 Move W1, 1
	092 Move X2, X31
	093 Call Behaviour.set_enabled, X0, X1
	094 Move X0, [X21+72]
	095 Compare X0, 0
	096 JumpIfEqual {337}
	097 Move W1, W31
	098 Move X2, X31
	099 Call Behaviour.set_enabled, X0, X1
	100 Move X0, [X21+88]
	101 Compare X0, 0
	102 JumpIfEqual {337}
	103 Move W8, [X19+32]
	104 Move X2, X31
	105 NotImplemented "Instruction CMP not yet implemented."
	106 NotImplemented "Instruction CSET not yet implemented."
	107 Call Behaviour.set_enabled, X0, X1
	108 Move X0, [X21+96]
	109 Compare X0, 0
	110 JumpIfEqual {337}
	111 Move W1, [X19+32]
	112 Move X2, X31
	113 Call Behaviour.set_enabled, X0, X1
	114 Move X0, [X21+48]
	115 Compare X0, 0
	116 JumpIfEqual {337}
	117 Move W8, [X19+32]
	118 Move X2, X31
	119 NotImplemented "Instruction CMP not yet implemented."
	120 NotImplemented "Instruction CSET not yet implemented."
	121 Call Behaviour.set_enabled, X0, X1
	122 Move X0, [X21+56]
	123 Compare X0, 0
	124 JumpIfEqual {337}
	125 Move W8, [X19+32]
	126 Move X2, X31
	127 NotImplemented "Instruction CMP not yet implemented."
	128 NotImplemented "Instruction CSET not yet implemented."
	129 Call Behaviour.set_enabled, X0, X1
	130 Move W0, 1
	131 Move [X19+24], X31
	132 Move [X19+16], W0
	133 Move X24, 0x2610000
	134 Move W8, [X24+1923]
	135 Compare W8, 0
	136 JumpIfNotEqual {142}
	137 Move X0, 0x232B000
	138 Move X0, [X0+1440]
	139 Call 0x1C17CF4
	140 Move W8, 1
	141 Move [X24+1923], W8
	142 Move X8, [X22]
	143 Move X8, [X8+184]
	144 Move S15, [X8]
	145 Move S14, [X8+4]
	146 Move V8, [X8+8]
	147 Move X0, [X21+72]
	148 Compare X0, 0
	149 JumpIfEqual {337}
	150 Move X1, X31
	151 Call Component.get_transform, X0
	152 Compare X0, 0
	153 JumpIfEqual {337}
	154 Move X1, X31
	155 Call Transform.get_forward, X0
	156 Move W8, [X20+1925]
	157 Move V11, V0
	158 Move V13, V2
	159 Compare W8, 0
	160 JumpIfNotEqual {166}
	161 Move X0, 0x232B000
	162 Move X0, [X0+1448]
	163 Call 0x1C17CF4
	164 Move W8, 1
	165 Move [X20+1925], W8
	166 Move X0, [X23]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {171}
	170 Call 0x1C17DFC
	171 Multiply S1, S11, S11
	172 Move S0, W31
	173 Add S1, S1, S0
	174 Multiply S2, S13, S13
	175 Add S1, S2, S1
	176 NotImplemented "Instruction FSQRT not yet implemented."
	177 NotImplemented "Instruction FCMP not yet implemented."
	178 NotImplemented "Instruction FDIV not yet implemented."
	179 NotImplemented "Instruction FDIV not yet implemented."
	180 NotImplemented "Instruction FDIV not yet implemented."
	181 Move X20, 0x2610000
	182 Move W8, [X20+1923]
	183 Compare W8, 0
	184 JumpIfNotEqual {190}
	185 Move X0, 0x232B000
	186 Move X0, [X0+1440]
	187 Call 0x1C17CF4
	188 Move W8, 1
	189 Move [X20+1923], W8
	190 Move X8, [X22]
	191 Move X8, [X8+184]
	192 Move S11, [X8]
	193 Move S12, [X8+4]
	194 Move V13, [X8+8]
	195 Move X23, 0x2610000
	196 Move W8, [X23+1926]
	197 Compare W8, 0
	198 JumpIfNotEqual {204}
	199 Move X0, 0x232B000
	200 Move X0, [X0+1440]
	201 Call 0x1C17CF4
	202 Move W8, 1
	203 Move [X23+1926], W8
	204 Move X8, [X22]
	205 Move V1, V12
	206 Move V2, V13
	207 Move V3, V15
	208 Move X8, [X8+184]
	209 Move V4, V14
	210 Move V5, V8
	211 Move X0, X31
	212 Move V0, [X8+32]
	213 Move X9, [X8+24]
	214 Move [X31+8], S0
	215 Move V0, V11
	216 Move [X31], X9
	217 Call 0x1DD5D78
	218 Move W8, [X23+1926]
	219 Move X20, [X21+80]
	220 Move V11, V0
	221 Compare W8, 0
	222 JumpIfNotEqual {228}
	223 Move X0, 0x232B000
	224 Move X0, [X0+1440]
	225 Call 0x1C17CF4
	226 Move W8, 1
	227 Move [X23+1926], W8
	228 Compare X20, 0
	229 JumpIfEqual {337}
	230 Move X8, [X22]
	231 Move X0, X20
	232 Move V3, V11
	233 Move X1, X31
	234 Move X8, [X8+184]
	235 Move [X31+108], S8
	236 Move S1, [X8+28]
	237 Move S2, [X8+32]
	238 Move V0, [X8+24]
	239 Call Transform.Rotate, X0, X1, V0
	240 Move V0, [X19+60]
	241 Move V4, [X19+64]
	242 Move W8, [X23+1926]
	243 Move [X31+104], S0
	244 Move V0, [X19+68]
	245 Move [X31+24], S0
	246 Move [X31+32], S4
	247 Compare W8, 0
	248 JumpIfNotEqual {254}
	249 Move X0, 0x232B000
	250 Move X0, [X0+1440]
	251 Call 0x1C17CF4
	252 Move W8, 1
	253 Move [X23+1926], W8
	254 Move X0, [X21+80]
	255 Compare X0, 0
	256 JumpIfEqual {337}
	257 Move X8, [X22]
	258 Move V8, V14
	259 Move X1, X31
	260 Move X8, [X8+184]
	261 Move S9, [X8+24]
	262 Move S10, [X8+28]
	263 Move V14, [X8+32]
	264 Call Transform.get_position, X0
	265 Move X0, [X21+72]
	266 Compare X0, 0
	267 JumpIfEqual {337}
	268 Move X1, X31
	269 Move V11, V0
	270 Move V12, V1
	271 Move V13, V2
	272 Call Component.get_transform, X0
	273 Compare X0, 0
	274 JumpIfEqual {337}
	275 Move X1, X31
	276 Call Transform.get_position, X0
	277 Move X0, [X21+80]
	278 Compare X0, 0
	279 JumpIfEqual {337}
	280 Move V6, [X31+108]
	281 Move S3, 3.5
	282 Multiply S4, S15, S3
	283 Multiply S5, S8, S3
	284 Multiply S3, S6, S3
	285 Move V6, [X31+104]
	286 Subtract S2, S13, S2
	287 Subtract S1, S12, S1
	288 Subtract S0, S11, S0
	289 Subtract S4, S6, S4
	290 Move V6, [X31+28]
	291 Add S4, S4, S9
	292 Add S0, S4, S0
	293 Move X1, X31
	294 Subtract S5, S6, S5
	295 Move V6, [X31+24]
	296 Add S5, S5, S10
	297 Add S1, S5, S1
	298 Subtract S3, S6, S3
	299 Add S3, S3, S14
	300 Add S2, S3, S2
	301 Call Transform.set_position, X0, X1
	302 Move X0, [X21+64]
	303 Compare X0, 0
	304 JumpIfEqual {337}
	305 Move W1, W31
	306 Move X2, X31
	307 Call Behaviour.set_enabled, X0, X1
	308 Move X0, [X21+72]
	309 Compare X0, 0
	310 JumpIfEqual {337}
	311 Move W1, 1
	312 Move X2, X31
	313 Call Behaviour.set_enabled, X0, X1
	314 Move X0, [X21+32]
	315 Compare X0, 0
	316 JumpIfEqual {337}
	317 Move W1, W31
	318 Call PlayerView.SetIsLocalPlayer, X0, X1
	319 Move W0, W31
	320 Move X20, [X31+144]
	321 Move X19, [X31+152]
	322 Move X22, [X31+128]
	323 Move X21, [X31+136]
	324 Move X24, [X31+112]
	325 Move X23, [X31+120]
	326 Move X30, [X31+96]
	327 Move D9, [X31+80]
	328 Move D8, [X31+88]
	329 Move D11, [X31+64]
	330 Move D10, [X31+72]
	331 Move D13, [X31+48]
	332 Move D12, [X31+56]
	333 Move D15, [X31+32]
	334 Move D14, [X31+40]
	335 Add X31, X31, 160
	336 Return X0
	337 Call 0x1C17F20

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x01DC9368 FMUL S1, S11, S11
	0x01DC936C ADRP X8, 0xFFFFFFFFFED21000

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01DC9370 FADD S0, S0, S1
	0x01DC9374 LDR V1, [X8 + 0x17C]
	0x01DC9378 FMUL S2, S8, S8
	0x01DC937C FADD S0, S2, S0
	0x01DC9380 FSQRT S2, S0
	0x01DC9384 FCMP S2, S1
	0x01DC9388 B.LE 0x1DC939C
	0x01DC938C FDIV S0, S14, S2
	0x01DC9390 FDIV S1, S11, S2
	0x01DC9394 FDIV S2, S8, S2
	0x01DC9398 B 0x1DC93C8
	0x01DC939C LDRB W8, [X21 + 0x783]
	0x01DC93A0 CBNZ W8, 0x1DC93B8
	0x01DC93A4 ADRP X0, 0x232A000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x232B000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2330000
	011 Move X0, [X0+552]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01DC93A8 LDR X0, [X0 + 0x5A0]
	0x01DC93AC BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

