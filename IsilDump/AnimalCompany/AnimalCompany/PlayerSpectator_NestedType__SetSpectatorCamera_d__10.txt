Type: AnimalCompany.PlayerSpectator/<SetSpectatorCamera>d__10

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01CC6024 FSUB S8, S10, S13
	0x01CC6028 LDR W8, [X0 + 0xE0]
	0x01CC602C CBNZ W8, 0x1CC6034
	0x01CC6030 BL 0x1B6E8F8
	0x01CC6034 FMUL S0, S11, S11
	0x01CC6038 FMUL S1, S9, S9
	0x01CC603C FMUL S2, S8, S8
	0x01CC6040 FADD S0, S0, S1
	0x01CC6044 FADD S0, S2, S0
	0x01CC6048 FSQRT S0, S0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01CC6054 B.LE 0x1CC61E8

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01CC6058 LDR X8, [X19 + 0xA0]
	0x01CC605C CBZ X8, 0x1CC638C
	0x01CC6060 LDR W9, [X8 + 0x18]
	0x01CC6064 CMP W9, 0x2
	0x01CC6068 B.LS 0x1CC6390
	0x01CC606C LDR X0, [X19 + 0x68]
	0x01CC6070 CBZ X0, 0x1CC638C
	0x01CC6074 LDR X20, [X8 + 0x30]
	0x01CC6078 MOV X1, X31
	0x01CC607C BL 0x3AA7658
	0x01CC6080 LDR X0, [X19 + 0x78]
	0x01CC6084 STR S0, [X31 + 0x10]
	0x01CC6088 CBZ X0, 0x1CC638C
	0x01CC608C MOV X1, X31
	0x01CC6090 MOV V9.16B, V1.16B
	0x01CC6094 MOV V10.16B, V2.16B
	0x01CC6098 BL 0x3AA7658
	0x01CC609C LDR X0, [X19 + 0x68]
	0x01CC60A0 CBZ X0, 0x1CC638C
	0x01CC60A4 MOV X1, X31
	0x01CC60A8 MOV V11.16B, V0.16B
	0x01CC60AC MOV V12.16B, V1.16B
	0x01CC60B0 MOV V13.16B, V2.16B
	0x01CC60B4 BL 0x3AA7658
	0x01CC60B8 ADRP X24, 0x255D000
	0x01CC60BC LDRB W8, [X24 + 0x441]
	0x01CC60C0 MOV V14.16B, V0.16B
	0x01CC60C4 MOV V15.16B, V1.16B
	0x01CC60C8 MOV V8.16B, V2.16B
	0x01CC60CC CBNZ W8, 0x1CC60E4
	0x01CC60D0 ADRP X0, 0x2287000
	0x01CC60D4 LDR X0, [X0 + 0x488]
	0x01CC60D8 BL 0x1B6E7F0
	0x01CC60DC MOVZ W8, 0x1
	0x01CC60E0 STRB W8, [X24 + 0x441]
	0x01CC60E4 LDR X0, [X23]
	0x01CC60E8 FSUB S14, S11, S14
	0x01CC60EC FSUB S11, S12, S15
	0x01CC60F0 FSUB S8, S13, S8
	0x01CC60F4 LDR W8, [X0 + 0xE0]
	0x01CC60F8 CBNZ W8, 0x1CC6100
	0x01CC60FC BL 0x1B6E8F8
	0x01CC6100 FMUL S0, S14, S14
	0x01CC6104 FMUL S1, S11, S11
	0x01CC6108 ADRP X8, 0xFFFFFFFFFEDE3000
	0x01CC610C FADD S0, S0, S1
	0x01CC6110 LDR V1, [X8 + 0xB64]
	0x01CC6114 FMUL S2, S8, S8
	0x01CC6118 FADD S0, S2, S0
	0x01CC611C FSQRT S2, S0
	0x01CC6120 FCMP S2, S1
	0x01CC6124 B.LE 0x1CC6138
	0x01CC6128 FDIV S0, S14, S2
	0x01CC612C FDIV S1, S11, S2
	0x01CC6130 FDIV S2, S8, S2
	0x01CC6134 B 0x1CC6164
	0x01CC6138 LDRB W8, [X21 + 0x43F]
	0x01CC613C CBNZ W8, 0x1CC6154
	0x01CC6140 ADRP X0, 0x2287000
	0x01CC6144 LDR X0, [X0 + 0x480]
	0x01CC6148 BL 0x1B6E7F0
	0x01CC614C MOVZ W8, 0x1
	0x01CC6150 STRB W8, [X21 + 0x43F]
	0x01CC6154 LDR X8, [X22]
	0x01CC6158 LDR X8, [X8 + 0xB8]
	0x01CC615C LDP S0, S1, [X8]
	0x01CC6160 LDR V2, [X8 + 0x8]
	0x01CC6164 CBZ X20, 0x1CC638C
	0x01CC6168 FMOV S3, 0.75
	0x01CC616C FMUL S2, S2, S3
	0x01CC6170 FMUL S1, S1, S3
	0x01CC6174 FMUL S0, S0, S3
	0x01CC6178 LDR V3, [X31 + 0x10]
	0x01CC617C FADD S2, S10, S2
	0x01CC6180 FADD S1, S9, S1
	0x01CC6184 MOV X0, X20
	0x01CC6188 FADD S0, S3, S0
	0x01CC618C MOV X1, X31
	0x01CC6190 BL 0x3AF6C18
	0x01CC6194 LDR X8, [X19 + 0xA0]
	0x01CC6198 CBZ X8, 0x1CC638C
	0x01CC619C LDR W9, [X8 + 0x18]
	0x01CC61A0 CMP W9, 0x2
	0x01CC61A4 B.LS 0x1CC6390
	0x01CC61A8 LDRB W9, [X21 + 0x43F]
	0x01CC61AC LDR X20, [X8 + 0x30]
	0x01CC61B0 CBNZ W9, 0x1CC61C8
	0x01CC61B4 ADRP X0, 0x2287000
	0x01CC61B8 LDR X0, [X0 + 0x480]
	0x01CC61BC BL 0x1B6E7F0
	0x01CC61C0 MOVZ W8, 0x1
	0x01CC61C4 STRB W8, [X21 + 0x43F]
	0x01CC61C8 CBZ X20, 0x1CC638C
	0x01CC61CC LDR X8, [X22]
	0x01CC61D0 MOV X0, X20
	0x01CC61D4 MOV X1, X31
	0x01CC61D8 LDR X8, [X8 + 0xB8]
	0x01CC61DC LDP S1, S2, [X8 + 0x4]
	0x01CC61E0 LDR V0, [X8]
	0x01CC61E4 BL 0x3AF650C
	0x01CC61E8 LDR X8, [X19 + 0xA0]
	0x01CC61EC CBZ X8, 0x1CC638C
	0x01CC61F0 LDR W9, [X8 + 0x18]
	0x01CC61F4 CMP W9, 0x1
	0x01CC61F8 B.LS 0x1CC6390
	0x01CC61FC LDR X0, [X8 + 0x28]
	0x01CC6200 CBZ X0, 0x1CC638C
	0x01CC6204 MOV X1, X31
	0x01CC6208 BL 0x3AF6B78
	0x01CC620C LDR X8, [X19 + 0xA0]
	0x01CC6210 STP S0, S1, [X19 + 0xC0]
	0x01CC6214 STR S2, [X19 + 0xC8]
	0x01CC6218 CBZ X8, 0x1CC638C
	0x01CC621C LDR W9, [X8 + 0x18]
	0x01CC6220 CMP W9, 0x2
	0x01CC6224 B.LS 0x1CC6390
	0x01CC6228 LDR X0, [X8 + 0x30]
	0x01CC622C CBZ X0, 0x1CC638C
	0x01CC6230 MOV X1, X31
	0x01CC6234 BL 0x3AF6B78
	0x01CC6238 LDR X8, [X19 + 0xA0]
	0x01CC623C STP S0, S1, [X19 + 0xCC]
	0x01CC6240 STR S2, [X19 + 0xD4]
	0x01CC6244 CBZ X8, 0x1CC638C
	0x01CC6248 LDR W9, [X8 + 0x18]
	0x01CC624C CMP W9, 0x1
	0x01CC6250 B.LS 0x1CC6390
	0x01CC6254 LDR X0, [X8 + 0x28]
	0x01CC6258 CBZ X0, 0x1CC638C
	0x01CC625C LDR X20, [X19 + 0x70]
	0x01CC6260 MOV X1, X31
	0x01CC6264 BL 0x3AF6B78
	0x01CC6268 LDR X8, [X19 + 0xA0]
	0x01CC626C CBZ X8, 0x1CC638C
	0x01CC6270 LDR W9, [X8 + 0x18]
	0x01CC6274 CMP W9, 0x1
	0x01CC6278 B.LS 0x1CC6390
	0x01CC627C LDR X0, [X8 + 0x28]
	0x01CC6280 CBZ X0, 0x1CC638C
	0x01CC6284 MOV X1, X31
	0x01CC6288 MOV V8.16B, V0.16B
	0x01CC628C MOV V9.16B, V1.16B
	0x01CC6290 MOV V10.16B, V2.16B
	0x01CC6294 BL 0x3AF6CB0
	0x01CC6298 CBZ X20, 0x1CC638C
	0x01CC629C MOV V4.16B, V0.16B
	0x01CC62A0 MOV V5.16B, V1.16B
	0x01CC62A4 MOV V6.16B, V2.16B
	0x01CC62A8 MOV V7.16B, V3.16B
	0x01CC62AC MOV X0, X20
	0x01CC62B0 MOV V0.16B, V8.16B
	0x01CC62B4 MOV V1.16B, V9.16B
	0x01CC62B8 MOV V2.16B, V10.16B
	0x01CC62BC MOV V3.16B, V4.16B
	0x01CC62C0 MOV V4.16B, V5.16B
	0x01CC62C4 MOV V5.16B, V6.16B
	0x01CC62C8 MOV V6.16B, V7.16B
	0x01CC62CC MOV X1, X31
	0x01CC62D0 BL 0x3AA80CC
	0x01CC62D4 LDR X8, [X19 + 0xA0]
	0x01CC62D8 CBZ X8, 0x1CC638C
	0x01CC62DC LDR W9, [X8 + 0x18]
	0x01CC62E0 CMP W9, 0x2
	0x01CC62E4 B.LS 0x1CC6390
	0x01CC62E8 LDR X0, [X8 + 0x30]
	0x01CC62EC CBZ X0, 0x1CC638C
	0x01CC62F0 LDR X20, [X19 + 0x78]
	0x01CC62F4 MOV X1, X31
	0x01CC62F8 BL 0x3AF6B78
	0x01CC62FC LDR X8, [X19 + 0xA0]
	0x01CC6300 CBZ X8, 0x1CC638C
	0x01CC6304 LDR W9, [X8 + 0x18]
	0x01CC6308 CMP W9, 0x2
	0x01CC630C B.LS 0x1CC6390
	0x01CC6310 LDR X0, [X8 + 0x30]
	0x01CC6314 CBZ X0, 0x1CC638C
	0x01CC6318 MOV X1, X31
	0x01CC631C MOV V8.16B, V0.16B
	0x01CC6320 MOV V9.16B, V1.16B
	0x01CC6324 MOV V10.16B, V2.16B
	0x01CC6328 BL 0x3AF6CB0
	0x01CC632C CBZ X20, 0x1CC638C
	0x01CC6330 MOV V4.16B, V0.16B
	0x01CC6334 MOV V5.16B, V1.16B
	0x01CC6338 MOV V6.16B, V2.16B
	0x01CC633C MOV X0, X20
	0x01CC6340 MOV V0.16B, V8.16B
	0x01CC6344 MOV V1.16B, V9.16B
	0x01CC6348 MOV V2.16B, V10.16B
	0x01CC634C LDP X20, X19, [X31 + 0x90]
	0x01CC6350 LDP X22, X21, [X31 + 0x80]
	0x01CC6354 LDP X24, X23, [X31 + 0x70]
	0x01CC6358 LDP X30, X25, [X31 + 0x60]
	0x01CC635C LDP D9, D8, [X31 + 0x50]
	0x01CC6360 LDP D11, D10, [X31 + 0x40]
	0x01CC6364 LDP D13, D12, [X31 + 0x30]
	0x01CC6368 LDP D15, D14, [X31 + 0x20]
	0x01CC636C MOV V7.16B, V3.16B
	0x01CC6370 MOV V3.16B, V4.16B
	0x01CC6374 MOV V4.16B, V5.16B
	0x01CC6378 MOV V5.16B, V6.16B
	0x01CC637C MOV V6.16B, V7.16B
	0x01CC6380 MOV X1, X31
	0x01CC6384 ADD X31, X31, 0xA0
	0x01CC6388 B 0x3AA80CC
	0x01CC638C BL 0x1B6EA1C
	0x01CC6390 BL 0x1B6EA24
	0x01CC6394 STR D8, [X31 - 0x20]!
	0x01CC6398 STP X30, X19, [X31 + 0x10]
	0x01CC639C MOV X19, X0
	0x01CC63A0 FMOV S0, 1
	0x01CC63A4 FMOV S1, W31
	0x01CC63A8 FMOV S2, W31
	0x01CC63AC FMOV S3, 1
	0x01CC63B0 MOV X0, X31
	0x01CC63B4 BL 0x3A75B14
	0x01CC63B8 ADRP X8, 0xFFFFFFFFFEDE3000
	0x01CC63BC LDR V8, [X8 + 0xBE4]
	0x01CC63C0 LDR V0, [X19 + 0x168]
	0x01CC63C4 LDR V1, [X19 + 0x16C]
	0x01CC63C8 LDR V2, [X19 + 0x170]
	0x01CC63CC MOV V3.16B, V8.16B
	0x01CC63D0 MOV X0, X31
	0x01CC63D4 BL 0x3A7567C
	0x01CC63D8 LDR V0, [X19 + 0x174]
	0x01CC63DC LDR V1, [X19 + 0x178]
	0x01CC63E0 LDR V2, [X19 + 0x17C]
	0x01CC63E4 LDP X30, X19, [X31 + 0x10]
	0x01CC63E8 MOV V3.16B, V8.16B
	0x01CC63EC MOV X0, X31
	0x01CC63F0 LDR V8, [X31], #0x20
	0x01CC63F4 B 0x3A7567C
	0x01CC63F8 LDR W8, [X0 + 0x50]
	0x01CC63FC CMP W8, 0x0
	0x01CC6400 CSET W0, EQ
	0x01CC6404 RET
	0x01CC6408 STP X30, X21, [X31 - 0x20]!
	0x01CC640C STP X20, X19, [X31 + 0x10]
	0x01CC6410 ADRP X21, 0x255D000
	0x01CC6414 LDRB W8, [X21 + 0x43F]
	0x01CC6418 MOV X19, X0
	0x01CC641C ADD X20, X0, 0x118
	0x01CC6420 CBNZ W8, 0x1CC6438
	0x01CC6424 ADRP X0, 0x2287000
	0x01CC6428 LDR X0, [X0 + 0x480]
	0x01CC642C BL 0x1B6E7F0
	0x01CC6430 MOVZ W8, 0x1
	0x01CC6434 STRB W8, [X21 + 0x43F]
	0x01CC6438 ADRP X8, 0x2287000
	0x01CC643C LDR X8, [X8 + 0x480]
	0x01CC6440 MOV X0, X19
	0x01CC6444 MOV X1, X31
	0x01CC6448 LDR X8, [X8]
	0x01CC644C LDR X9, [X8 + 0xB8]
	0x01CC6450 LDR V0, [X9]
	0x01CC6454 LDR V1, [X9 + 0x8]
	0x01CC6458 ADRP X9, 0xFFFFFFFFFEDE4000
	0x01CC645C STR D0, [X19 + 0xA8]
	0x01CC6460 STR S1, [X19 + 0xB0]
	0x01CC6464 LDR X10, [X8 + 0xB8]
	0x01CC6468 LDR V0, [X9 + 0x85]
	0x01CC646C ADRP X9, 0xFFFFFFFFFEDE7000
	0x01CC6470 LDR V1, [X9 + 0x2A0]
	0x01CC6474 ADRP X9, 0xFFFFFFFFFEDE6000
	0x01CC6478 LDR V2, [X10]
	0x01CC647C LDR V3, [X10 + 0x8]
	0x01CC6480 STUR V0, [X19 + 0xD8]
	0x01CC6484 LDR V0, [X9 + 0x26]
	0x01CC6488 MOVZ W9, 0x3FC00000
	0x01CC648C STR D1, [X19 + 0xE8]
	0x01CC6490 STUR D2, [X19 + 0xB4]
	0x01CC6494 STR W9, [X19 + 0x100]
	0x01CC6498 STR S3, [X19 + 0xBC]
	0x01CC649C STR V0, [X20]
	0x01CC64A0 LDR X9, [X8 + 0xB8]
	0x01CC64A4 LDR V0, [X9]
	0x01CC64A8 LDR V1, [X9 + 0x8]
	0x01CC64AC STR D0, [X19 + 0x180]
	0x01CC64B0 STR S1, [X19 + 0x188]
	0x01CC64B4 LDR X8, [X8 + 0xB8]
	0x01CC64B8 LDR V0, [X8]
	0x01CC64BC LDR V1, [X8 + 0x8]
	0x01CC64C0 STUR D0, [X20 + 0x74]
	0x01CC64C4 STR S1, [X19 + 0x194]
	0x01CC64C8 LDP X20, X19, [X31 + 0x10]
	0x01CC64CC LDP X30, X21, [X31], #0x20
	0x01CC64D0 B 0x3A9EEE4

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+32], D15
	003 Move [X31+40], D14
	004 Move [X31+48], D13
	005 Move [X31+56], D12
	006 Move [X31+64], D11
	007 Move [X31+72], D10
	008 Move [X31+80], D9
	009 Move [X31+88], D8
	010 Move [X31+96], X30
	011 Move [X31+112], X24
	012 Move [X31+120], X23
	013 Move [X31+128], X22
	014 Move [X31+136], X21
	015 Move [X31+144], X20
	016 Move [X31+152], X19
	017 Move W8, [X0+16]
	018 Move X21, [X0+40]
	019 Move X19, X0
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Compare W8, 0
	022 JumpIfNotEqual {319}
	023 Move W8, [X19+32]
	024 Move TEMP, 0
	025 Not TEMP
	026 Move W9, TEMP
	027 Move [X19+16], W9
	028 Compare W8, 0
	029 JumpIfEqual {81}
	030 Compare X21, 0
	031 JumpIfNotEqual {100}
	032 Move W8, [X19+32]
	033 Move TEMP, 0
	034 Not TEMP
	035 Move W9, TEMP
	036 Move [X19+16], W9
	037 Compare W8, 0
	038 JumpIfEqual {319}
	039 Compare X21, 0
	040 JumpIfEqual {337}
	041 Move X0, [X21+40]
	042 Compare X0, 0
	043 JumpIfEqual {337}
	044 Move S1, [X19+52]
	045 Move S2, [X19+56]
	046 Move V0, [X19+48]
	047 Move X1, X31
	048 Call Player.Rotate, X0, X1
	049 Move X20, 0x255E000
	050 Move V8, [X19+48]
	051 Move W8, [X20+1089]
	052 Move V9, [X19+56]
	053 Compare W8, 0
	054 JumpIfNotEqual {60}
	055 Move X0, 0x2288000
	056 Move X0, [X0+1160]
	057 Call 0x1B6F7F0
	058 Move W8, 1
	059 Move [X20+1089], W8
	060 Move X23, 0x2288000
	061 Move X23, [X23+1160]
	062 Move X0, [X23]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1B6F8F8
	067 Move X8, -18989056
	068 Multiply S1, S8, S8
	069 Move S0, W31
	070 Move V12, [X8+2916]
	071 Move X22, 0x2288000
	072 Add S1, S1, S0
	073 Multiply S2, S9, S9
	074 Move X22, [X22+1152]
	075 Add S1, S2, S1
	076 NotImplemented "Instruction FSQRT not yet implemented."
	077 NotImplemented "Instruction FCMP not yet implemented."
	078 NotImplemented "Instruction FDIV not yet implemented."
	079 NotImplemented "Instruction FDIV not yet implemented."
	080 NotImplemented "Instruction FDIV not yet implemented."
	081 Compare X21, 0
	082 JumpIfEqual {337}
	083 Move X0, [X21+32]
	084 Compare X0, 0
	085 JumpIfEqual {337}
	086 Move W1, W31
	087 Call PlayerView.SetRenderType, X0, X1
	088 Move X0, [X21+64]
	089 Compare X0, 0
	090 JumpIfEqual {337}
	091 Move W1, 1
	092 Move X2, X31
	093 Call Behaviour.set_enabled, X0, X1
	094 Move X0, [X21+72]
	095 Compare X0, 0
	096 JumpIfEqual {337}
	097 Move W1, W31
	098 Move X2, X31
	099 Call Behaviour.set_enabled, X0, X1
	100 Move X0, [X21+88]
	101 Compare X0, 0
	102 JumpIfEqual {337}
	103 Move W8, [X19+32]
	104 Move X2, X31
	105 NotImplemented "Instruction CMP not yet implemented."
	106 NotImplemented "Instruction CSET not yet implemented."
	107 Call Behaviour.set_enabled, X0, X1
	108 Move X0, [X21+96]
	109 Compare X0, 0
	110 JumpIfEqual {337}
	111 Move W1, [X19+32]
	112 Move X2, X31
	113 Call Behaviour.set_enabled, X0, X1
	114 Move X0, [X21+48]
	115 Compare X0, 0
	116 JumpIfEqual {337}
	117 Move W8, [X19+32]
	118 Move X2, X31
	119 NotImplemented "Instruction CMP not yet implemented."
	120 NotImplemented "Instruction CSET not yet implemented."
	121 Call Behaviour.set_enabled, X0, X1
	122 Move X0, [X21+56]
	123 Compare X0, 0
	124 JumpIfEqual {337}
	125 Move W8, [X19+32]
	126 Move X2, X31
	127 NotImplemented "Instruction CMP not yet implemented."
	128 NotImplemented "Instruction CSET not yet implemented."
	129 Call Behaviour.set_enabled, X0, X1
	130 Move W0, 1
	131 Move [X19+24], X31
	132 Move [X19+16], W0
	133 Move X24, 0x255E000
	134 Move W8, [X24+1087]
	135 Compare W8, 0
	136 JumpIfNotEqual {142}
	137 Move X0, 0x2288000
	138 Move X0, [X0+1152]
	139 Call 0x1B6F7F0
	140 Move W8, 1
	141 Move [X24+1087], W8
	142 Move X8, [X22]
	143 Move X8, [X8+184]
	144 Move S15, [X8]
	145 Move S14, [X8+4]
	146 Move V8, [X8+8]
	147 Move X0, [X21+72]
	148 Compare X0, 0
	149 JumpIfEqual {337}
	150 Move X1, X31
	151 Call Component.get_transform, X0
	152 Compare X0, 0
	153 JumpIfEqual {337}
	154 Move X1, X31
	155 Call Transform.get_forward, X0
	156 Move W8, [X20+1089]
	157 Move V11, V0
	158 Move V13, V2
	159 Compare W8, 0
	160 JumpIfNotEqual {166}
	161 Move X0, 0x2288000
	162 Move X0, [X0+1160]
	163 Call 0x1B6F7F0
	164 Move W8, 1
	165 Move [X20+1089], W8
	166 Move X0, [X23]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {171}
	170 Call 0x1B6F8F8
	171 Multiply S1, S11, S11
	172 Move S0, W31
	173 Add S1, S1, S0
	174 Multiply S2, S13, S13
	175 Add S1, S2, S1
	176 NotImplemented "Instruction FSQRT not yet implemented."
	177 NotImplemented "Instruction FCMP not yet implemented."
	178 NotImplemented "Instruction FDIV not yet implemented."
	179 NotImplemented "Instruction FDIV not yet implemented."
	180 NotImplemented "Instruction FDIV not yet implemented."
	181 Move X20, 0x255E000
	182 Move W8, [X20+1087]
	183 Compare W8, 0
	184 JumpIfNotEqual {190}
	185 Move X0, 0x2288000
	186 Move X0, [X0+1152]
	187 Call 0x1B6F7F0
	188 Move W8, 1
	189 Move [X20+1087], W8
	190 Move X8, [X22]
	191 Move X8, [X8+184]
	192 Move S11, [X8]
	193 Move S12, [X8+4]
	194 Move V13, [X8+8]
	195 Move X23, 0x255E000
	196 Move W8, [X23+1090]
	197 Compare W8, 0
	198 JumpIfNotEqual {204}
	199 Move X0, 0x2288000
	200 Move X0, [X0+1152]
	201 Call 0x1B6F7F0
	202 Move W8, 1
	203 Move [X23+1090], W8
	204 Move X8, [X22]
	205 Move V1, V12
	206 Move V2, V13
	207 Move V3, V15
	208 Move X8, [X8+184]
	209 Move V4, V14
	210 Move V5, V8
	211 Move X0, X31
	212 Move V0, [X8+32]
	213 Move X9, [X8+24]
	214 Move [X31+8], S0
	215 Move V0, V11
	216 Move [X31], X9
	217 Call 0x1CD06E0
	218 Move W8, [X23+1090]
	219 Move X20, [X21+80]
	220 Move V11, V0
	221 Compare W8, 0
	222 JumpIfNotEqual {228}
	223 Move X0, 0x2288000
	224 Move X0, [X0+1152]
	225 Call 0x1B6F7F0
	226 Move W8, 1
	227 Move [X23+1090], W8
	228 Compare X20, 0
	229 JumpIfEqual {337}
	230 Move X8, [X22]
	231 Move X0, X20
	232 Move V3, V11
	233 Move X1, X31
	234 Move X8, [X8+184]
	235 Move [X31+108], S8
	236 Move S1, [X8+28]
	237 Move S2, [X8+32]
	238 Move V0, [X8+24]
	239 Call Transform.Rotate, X0, X1, V0
	240 Move V0, [X19+60]
	241 Move V4, [X19+64]
	242 Move W8, [X23+1090]
	243 Move [X31+104], S0
	244 Move V0, [X19+68]
	245 Move [X31+24], S0
	246 Move [X31+32], S4
	247 Compare W8, 0
	248 JumpIfNotEqual {254}
	249 Move X0, 0x2288000
	250 Move X0, [X0+1152]
	251 Call 0x1B6F7F0
	252 Move W8, 1
	253 Move [X23+1090], W8
	254 Move X0, [X21+80]
	255 Compare X0, 0
	256 JumpIfEqual {337}
	257 Move X8, [X22]
	258 Move V8, V14
	259 Move X1, X31
	260 Move X8, [X8+184]
	261 Move S9, [X8+24]
	262 Move S10, [X8+28]
	263 Move V14, [X8+32]
	264 Call Transform.get_position, X0
	265 Move X0, [X21+72]
	266 Compare X0, 0
	267 JumpIfEqual {337}
	268 Move X1, X31
	269 Move V11, V0
	270 Move V12, V1
	271 Move V13, V2
	272 Call Component.get_transform, X0
	273 Compare X0, 0
	274 JumpIfEqual {337}
	275 Move X1, X31
	276 Call Transform.get_position, X0
	277 Move X0, [X21+80]
	278 Compare X0, 0
	279 JumpIfEqual {337}
	280 Move V6, [X31+108]
	281 Move S3, 3.5
	282 Multiply S4, S15, S3
	283 Multiply S5, S8, S3
	284 Multiply S3, S6, S3
	285 Move V6, [X31+104]
	286 Subtract S2, S13, S2
	287 Subtract S1, S12, S1
	288 Subtract S0, S11, S0
	289 Subtract S4, S6, S4
	290 Move V6, [X31+28]
	291 Add S4, S4, S9
	292 Add S0, S4, S0
	293 Move X1, X31
	294 Subtract S5, S6, S5
	295 Move V6, [X31+24]
	296 Add S5, S5, S10
	297 Add S1, S5, S1
	298 Subtract S3, S6, S3
	299 Add S3, S3, S14
	300 Add S2, S3, S2
	301 Call Transform.set_position, X0, X1
	302 Move X0, [X21+64]
	303 Compare X0, 0
	304 JumpIfEqual {337}
	305 Move W1, W31
	306 Move X2, X31
	307 Call Behaviour.set_enabled, X0, X1
	308 Move X0, [X21+72]
	309 Compare X0, 0
	310 JumpIfEqual {337}
	311 Move W1, 1
	312 Move X2, X31
	313 Call Behaviour.set_enabled, X0, X1
	314 Move X0, [X21+32]
	315 Compare X0, 0
	316 JumpIfEqual {337}
	317 Move W1, 1
	318 Call PlayerView.SetRenderType, X0, X1
	319 Move W0, W31
	320 Move X20, [X31+144]
	321 Move X19, [X31+152]
	322 Move X22, [X31+128]
	323 Move X21, [X31+136]
	324 Move X24, [X31+112]
	325 Move X23, [X31+120]
	326 Move X30, [X31+96]
	327 Move D9, [X31+80]
	328 Move D8, [X31+88]
	329 Move D11, [X31+64]
	330 Move D10, [X31+72]
	331 Move D13, [X31+48]
	332 Move D12, [X31+56]
	333 Move D15, [X31+32]
	334 Move D14, [X31+40]
	335 Add X31, X31, 160
	336 Return X0
	337 Call 0x1B6FA1C

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x01CC6598 RET
	0x01CC659C STR X30, [X31 - 0x40]!

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01CC65A0 STP X24, X23, [X31 + 0x10]
	0x01CC65A4 STP X22, X21, [X31 + 0x20]
	0x01CC65A8 STP X20, X19, [X31 + 0x30]
	0x01CC65AC ADRP X20, 0x255D000
	0x01CC65B0 LDRB W8, [X20 + 0x55D]
	0x01CC65B4 MOV X19, X0
	0x01CC65B8 TBNZ X8, 0x0, 0x1CC65E8
	0x01CC65BC ADRP X0, 0x2289000
	0x01CC65C0 LDR X0, [X0 + 0x388]
	0x01CC65C4 BL 0x1B6E7F0
	0x01CC65C8 ADRP X0, 0x2288000
	0x01CC65CC LDR X0, [X0 + 0x2E8]
	0x01CC65D0 BL 0x1B6E7F0
	0x01CC65D4 ADRP X0, 0x2289000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x2288000
	004 Move X0, [X0+2448]
	005 Call 0x1B6F804
	006 Call 0x1B6FA0C
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x228A000
	011 Move X0, [X0+1088]
	012 Call 0x1B6F804
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1B6F8E8

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01CC65D8 LDR X0, [X0 + 0x450]
	0x01CC65DC BL 0x1B6E7F0

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

