Type: AnimalCompany.AuthCommands/<>c__DisplayClass7_0

Method: System.Void .ctor()

Disassembly:
	0x01D49188 ADRP X0, 0x23AB000
	0x01D4918C LDR X0, [X0 + 0x7F0]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <AuthenticateWithMetaQuestAccount>b__0(Oculus.Platform.Message msg)

Disassembly:
	0x01D49190 BL 0x1C16CF4
	0x01D49194 ADRP X0, 0x23AB000
	0x01D49198 LDR X0, [X0 + 0x798]
	0x01D4919C BL 0x1C16CF4
	0x01D491A0 ADRP X0, 0x23AB000
	0x01D491A4 LDR X0, [X0 + 0x698]
	0x01D491A8 BL 0x1C16CF4
	0x01D491AC ADRP X0, 0x23AB000
	0x01D491B0 LDR X0, [X0 + 0x7F8]
	0x01D491B4 BL 0x1C16CF4
	0x01D491B8 ADRP X0, 0x23AB000
	0x01D491BC LDR X0, [X0 + 0x800]
	0x01D491C0 BL 0x1C16CF4
	0x01D491C4 ADRP X0, 0x23AB000
	0x01D491C8 LDR X0, [X0 + 0x808]
	0x01D491CC BL 0x1C16CF4
	0x01D491D0 ADRP X0, 0x23AA000
	0x01D491D4 LDR X0, [X0 + 0x710]
	0x01D491D8 BL 0x1C16CF4
	0x01D491DC ADRP X0, 0x23AB000
	0x01D491E0 LDR X0, [X0 + 0x810]
	0x01D491E4 BL 0x1C16CF4
	0x01D491E8 ADRP X0, 0x23AB000
	0x01D491EC LDR X0, [X0 + 0x6C0]
	0x01D491F0 BL 0x1C16CF4
	0x01D491F4 ADRP X0, 0x23AA000
	0x01D491F8 LDR X0, [X0 + 0x718]
	0x01D491FC BL 0x1C16CF4
	0x01D49200 ADRP X0, 0x23AB000
	0x01D49204 LDR X0, [X0 + 0x6D0]
	0x01D49208 BL 0x1C16CF4
	0x01D4920C ADRP X0, 0x23AA000
	0x01D49210 LDR X0, [X0 + 0x720]
	0x01D49214 BL 0x1C16CF4
	0x01D49218 ADRP X0, 0x23AB000
	0x01D4921C LDR X0, [X0 + 0x818]
	0x01D49220 BL 0x1C16CF4
	0x01D49224 ADRP X0, 0x23AA000
	0x01D49228 LDR X0, [X0 + 0x788]
	0x01D4922C BL 0x1C16CF4
	0x01D49230 ADRP X0, 0x23AB000
	0x01D49234 LDR X0, [X0 + 0x820]
	0x01D49238 BL 0x1C16CF4
	0x01D4923C ADRP X0, 0x23AB000
	0x01D49240 LDR X0, [X0 + 0x828]
	0x01D49244 BL 0x1C16CF4
	0x01D49248 ADRP X0, 0x23AB000
	0x01D4924C LDR X0, [X0 + 0x830]
	0x01D49250 BL 0x1C16CF4
	0x01D49254 ADRP X0, 0x23AB000
	0x01D49258 LDR X0, [X0 + 0x838]
	0x01D4925C BL 0x1C16CF4
	0x01D49260 ADRP X0, 0x23AB000
	0x01D49264 LDR X0, [X0 + 0x840]
	0x01D49268 BL 0x1C16CF4
	0x01D4926C ADRP X0, 0x23AB000
	0x01D49270 LDR X0, [X0 + 0x7B8]
	0x01D49274 BL 0x1C16CF4
	0x01D49278 ADRP X0, 0x23AB000
	0x01D4927C LDR X0, [X0 + 0x848]
	0x01D49280 BL 0x1C16CF4
	0x01D49284 ADRP X0, 0x23AB000
	0x01D49288 LDR X0, [X0 + 0x850]
	0x01D4928C BL 0x1C16CF4
	0x01D49290 ADRP X0, 0x23AB000
	0x01D49294 LDR X0, [X0 + 0x858]
	0x01D49298 BL 0x1C16CF4
	0x01D4929C ADRP X0, 0x23AB000
	0x01D492A0 LDR X0, [X0 + 0x860]
	0x01D492A4 BL 0x1C16CF4
	0x01D492A8 ADRP X0, 0x23AB000
	0x01D492AC LDR X0, [X0 + 0x868]
	0x01D492B0 BL 0x1C16CF4
	0x01D492B4 ADRP X0, 0x23AB000
	0x01D492B8 LDR X0, [X0 + 0x718]
	0x01D492BC BL 0x1C16CF4
	0x01D492C0 ADRP X0, 0x23AB000
	0x01D492C4 LDR X0, [X0 + 0x870]
	0x01D492C8 BL 0x1C16CF4
	0x01D492CC ADRP X0, 0x23AB000
	0x01D492D0 LDR X0, [X0 + 0x878]
	0x01D492D4 BL 0x1C16CF4
	0x01D492D8 ADRP X0, 0x23AB000
	0x01D492DC LDR X0, [X0 + 0x740]
	0x01D492E0 BL 0x1C16CF4
	0x01D492E4 ADRP X0, 0x23AB000
	0x01D492E8 LDR X0, [X0 + 0x880]
	0x01D492EC BL 0x1C16CF4
	0x01D492F0 ADRP X0, 0x23AB000
	0x01D492F4 LDR X0, [X0 + 0x888]
	0x01D492F8 BL 0x1C16CF4
	0x01D492FC ADRP X0, 0x23AB000
	0x01D49300 LDR X0, [X0 + 0x890]
	0x01D49304 BL 0x1C16CF4
	0x01D49308 ADRP X0, 0x23AB000
	0x01D4930C LDR X0, [X0 + 0x898]
	0x01D49310 BL 0x1C16CF4
	0x01D49314 MOVZ W8, 0x1
	0x01D49318 STRB W8, [X20 + 0x77F]
	0x01D4931C STR W31, [X31 + 0x70]
	0x01D49320 STR X31, [X31 + 0x68]
	0x01D49324 STRB W31, [X31 + 0x38]
	0x01D49328 STRB W31, [X31 + 0x30]
	0x01D4932C STP X31, X31, [X31 + 0x20]
	0x01D49330 LDR W26, [X19]
	0x01D49334 ADRP X25, 0x23AB000
	0x01D49338 ADRP X23, 0x23AB000
	0x01D4933C ADRP X27, 0x23AB000
	0x01D49340 LDR X25, [X25 + 0x698]
	0x01D49344 LDR X23, [X23 + 0x868]
	0x01D49348 LDR X27, [X27 + 0x7B8]
	0x01D4934C CMP W26, 0x4
	0x01D49350 B.HI 0x1D493B4
	0x01D49354 ADRP X8, 0xFFFFFFFFFEDA5000
	0x01D49358 ADD X8, X8, 0x5DA
	0x01D4935C ADR X9, 0x10
	0x01D49360 LDRH W10, [X8, X26, LSL #1]
	0x01D49364 ADD X9, X9, X10, 0x2, LSL
	0x01D49368 BR X9
	0x01D4936C LDRB W8, [X19 + 0x28]
	0x01D49370 MOVN W26, 0x0
	0x01D49374 STRB W8, [X31 + 0x38]
	0x01D49378 STRB W31, [X19 + 0x28]
	0x01D4937C STR W26, [X19]
	0x01D49380 B 0x1D49508
	0x01D49384 LDRB W8, [X19 + 0x28]
	0x01D49388 MOVN W26, 0x0
	0x01D4938C STRB W8, [X31 + 0x38]
	0x01D49390 STRB W31, [X19 + 0x28]
	0x01D49394 STR W26, [X19]
	0x01D49398 B 0x1D49A00
	0x01D4939C LDRB W8, [X19 + 0x28]
	0x01D493A0 MOVN W26, 0x0
	0x01D493A4 STRB W8, [X31 + 0x38]
	0x01D493A8 STRB W31, [X19 + 0x28]
	0x01D493AC STR W26, [X19]
	0x01D493B0 B 0x1D497B0
	0x01D493B4 ADRP X8, 0x23AB000
	0x01D493B8 LDR X8, [X8 + 0x860]
	0x01D493BC LDR X0, [X8]
	0x01D493C0 BL 0x1C16F10
	0x01D493C4 MOV X20, X0
	0x01D493C8 MOV X1, X31
	0x01D493CC BL 0x33BDD8C
	0x01D493D0 STR X20, [X19 + 0x20]
	0x01D493D4 ADRP X8, 0x23AA000
	0x01D493D8 LDR X8, [X8 + 0x788]
	0x01D493DC LDR X0, [X8]
	0x01D493E0 LDR W8, [X0 + 0xE0]
	0x01D493E4 CBNZ W8, 0x1D493EC
	0x01D493E8 BL 0x1C16DFC
	0x01D493EC ADRP X8, 0x23AB000
	0x01D493F0 LDR X8, [X8 + 0x890]
	0x01D493F4 ADRP X9, 0x23AB000
	0x01D493F8 ADRP X10, 0x23AB000
	0x01D493FC LDR X9, [X9 + 0x718]
	0x01D49400 LDR X10, [X10 + 0x740]
	0x01D49404 LDR X1, [X8]
	0x01D49408 LDR X3, [X9]
	0x01D4940C LDR X4, [X10]
	0x01D49410 MOVZ W0, 0x800
	0x01D49414 MOVZ W5, 0xC5
	0x01D49418 MOV X2, X31
	0x01D4941C MOV X6, X31
	0x01D49420 BL 0x35C2014
	0x01D49424 LDR X8, [X19 + 0x20]
	0x01D49428 CBZ X8, 0x1D49494
	0x01D4942C STP X31, X31, [X8 + 0x10]
	0x01D49430 STR X31, [X8 + 0x20]
	0x01D49434 LDR X8, [X19 + 0x20]
	0x01D49438 CBZ X8, 0x1D49498
	0x01D4943C STRB W31, [X8 + 0x28]
	0x01D49440 MOV X0, X31
	0x01D49444 BL 0x34E2E60
	0x01D49448 ADRP X8, 0x23AB000
	0x01D4944C LDR X22, [X19 + 0x20]
	0x01D49450 LDR X8, [X8 + 0x808]
	0x01D49454 MOV X20, X0
	0x01D49458 LDR X0, [X8]
	0x01D4945C BL 0x1C16F10
	0x01D49460 ADRP X8, 0x23AB000
	0x01D49464 LDR X8, [X8 + 0x848]
	0x01D49468 MOV X21, X0
	0x01D4946C LDR X2, [X8]
	0x01D49470 MOV X1, X22
	0x01D49474 MOV X3, X31
	0x01D49478 BL 0x34D3E44
	0x01D4947C CBZ X20, 0x1D4949C
	0x01D49480 MOV X0, X20
	0x01D49484 MOV X1, X21
	0x01D49488 MOV X2, X31
	0x01D4948C BL 0x34E6950
	0x01D49490 B 0x1D49524
	0x01D49494 BL 0x1C16F20
	0x01D49498 BL 0x1C16F20
	0x01D4949C BL 0x1C16F20
	0x01D494A0 B 0x1D49608
	0x01D494A4 B 0x1D49608
	0x01D494A8 B 0x1D49608
	0x01D494AC B 0x1D49608
	0x01D494B0 B 0x1D49608
	0x01D494B4 B 0x1D49608
	0x01D494B8 LDR X0, [X27]
	0x01D494BC LDR W8, [X0 + 0xE0]
	0x01D494C0 CBNZ W8, 0x1D494C8
	0x01D494C4 BL 0x1C16DFC
	0x01D494C8 MOV X0, X31
	0x01D494CC BL 0x33F2EBC
	0x01D494D0 STRB W0, [X31 + 0x30]
	0x01D494D4 ADD X0, X31, 0x30
	0x01D494D8 MOV X1, X31
	0x01D494DC BL 0x32C55DC
	0x01D494E0 MOV X8, X0
	0x01D494E4 LDR X0, [X23]
	0x01D494E8 STRB W8, [X31 + 0x38]
	0x01D494EC LDR W8, [X0 + 0xE0]
	0x01D494F0 CBNZ W8, 0x1D494F8
	0x01D494F4 BL 0x1C16DFC
	0x01D494F8 ADD X0, X31, 0x38
	0x01D494FC MOV X1, X31
	0x01D49500 BL 0x32C55E4
	0x01D49504 TBZ X0, 0x0, 0x1D495A0
	0x01D49508 LDR X0, [X23]
	0x01D4950C LDR W8, [X0 + 0xE0]
	0x01D49510 CBNZ W8, 0x1D49518
	0x01D49514 BL 0x1C16DFC
	0x01D49518 ADD X0, X31, 0x38
	0x01D4951C MOV X1, X31
	0x01D49520 BL 0x32C5998
	0x01D49524 LDR X8, [X19 + 0x20]
	0x01D49528 CBZ X8, 0x1D495DC
	0x01D4952C LDRB W9, [X8 + 0x28]
	0x01D49530 CBZ W9, 0x1D494B8
	0x01D49534 LDR W20, [X8 + 0x18]
	0x01D49538 CBNZ W20, 0x1D496C0
	0x01D4953C STRB W31, [X8 + 0x38]
	0x01D49540 STR X31, [X8 + 0x30]
	0x01D49544 MOV X0, X31
	0x01D49548 BL 0x34DE048
	0x01D4954C ADRP X8, 0x23AB000
	0x01D49550 LDR X22, [X19 + 0x20]
	0x01D49554 LDR X8, [X8 + 0x800]
	0x01D49558 MOV X20, X0
	0x01D4955C LDR X0, [X8]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X21, 0x2690000
	014 Move W8, [X21+1914]
	015 Move X20, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {68}
	021 Move X0, 0x23AB000
	022 Move X0, [X0+2904]
	023 Call 0x1C17CF4
	024 Move X0, 0x23AB000
	025 Move X0, [X0+1808]
	026 Call 0x1C17CF4
	027 Move X0, 0x23AB000
	028 Move X0, [X0+1816]
	029 Call 0x1C17CF4
	030 Move X0, 0x23AB000
	031 Move X0, [X0+1824]
	032 Call 0x1C17CF4
	033 Move X0, 0x23AB000
	034 Move X0, [X0+1928]
	035 Call 0x1C17CF4
	036 Move X0, 0x23AC000
	037 Move X0, [X0+1128]
	038 Call 0x1C17CF4
	039 Move X0, 0x23AC000
	040 Move X0, [X0+1136]
	041 Call 0x1C17CF4
	042 Move X0, 0x23AC000
	043 Move X0, [X0+1144]
	044 Call 0x1C17CF4
	045 Move X0, 0x23AC000
	046 Move X0, [X0+1816]
	047 Call 0x1C17CF4
	048 Move X0, 0x23AC000
	049 Move X0, [X0+1824]
	050 Call 0x1C17CF4
	051 Move X0, 0x23AC000
	052 Move X0, [X0+1832]
	053 Call 0x1C17CF4
	054 Move X0, 0x23AC000
	055 Move X0, [X0+1840]
	056 Call 0x1C17CF4
	057 Move X0, 0x23AC000
	058 Move X0, [X0+1848]
	059 Call 0x1C17CF4
	060 Move X0, 0x23AC000
	061 Move X0, [X0+1856]
	062 Call 0x1C17CF4
	063 Move X0, 0x23AC000
	064 Move X0, [X0+1864]
	065 Call 0x1C17CF4
	066 Move W8, 1
	067 Move [X21+1914], W8
	068 Compare X20, 0
	069 JumpIfEqual {268}
	070 Move X21, 0x23AB000
	071 Move X22, 0x23AC000
	072 Move X23, 0x23AC000
	073 Move X26, 0x23AB000
	074 Move X25, 0x23AC000
	075 Move X24, 0x23AC000
	076 Move X21, [X21+2904]
	077 Move X22, [X22+1128]
	078 Move X23, [X23+1864]
	079 Move X26, [X26+1928]
	080 Move X25, [X25+1816]
	081 Move X24, [X24+1856]
	082 Move X0, X20
	083 Move X1, X31
	084 Call Message.get_IsError, X0
	085 Move X8, [X21]
	086 And W9, W0, 1
	087 Add X1, X31, 28
	088 Move [X31+28], W9
	089 Move X0, X8
	090 Call 0x1C17E04
	091 Move X21, X0
	092 Move W8, [X20+16]
	093 Move X0, [X22]
	094 Add X1, X31, 8
	095 Move [X31+8], W8
	096 Call 0x1C17E04
	097 Move X8, [X23]
	098 Move X2, X0
	099 Move X1, X21
	100 Move X3, X31
	101 Move X0, X8
	102 Call String.Format, X0, X1, X2
	103 Move X8, [X26]
	104 Move X21, X0
	105 Move W9, [X8+224]
	106 Compare W9, 0
	107 JumpIfNotEqual {110}
	108 Move X0, X8
	109 Call 0x1C17DFC
	110 Move X3, [X25]
	111 Move X4, [X24]
	112 Move W0, 2048
	113 Move W5, 203
	114 Move X1, X21
	115 Move X2, X31
	116 Move X6, X31
	117 Call Log.Info, X0, X1, X2, X3, X4, X5
	118 Move X0, X20
	119 Move X1, X31
	120 Call Message.get_IsError, X0
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfNotEqual {136}
	125 Move X8, [X20]
	126 Move X0, X20
	127 Move X9, [X8+376]
	128 Move X1, [X8+384]
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move X8, 0x23AC000
	131 Move X8, [X8+1824]
	132 Move X8, [X8]
	133 Compare X0, 0
	134 JumpIfEqual {151}
	135 Move X1, [X0+24]
	136 Move X0, [X26]
	137 Move W8, [X0+224]
	138 Compare W8, 0
	139 JumpIfNotEqual {141}
	140 Call 0x1C17DFC
	141 Move X8, 0x23AC000
	142 Move X8, [X8+1832]
	143 Move X3, [X25]
	144 Move X4, [X24]
	145 Move W0, 2048
	146 Move X1, [X8]
	147 Move W5, 215
	148 Move X2, X31
	149 Move X6, X31
	150 Call Log.Info, X0, X1, X2, X3, X4, X5
	151 Move X1, X31
	152 Move X0, X8
	153 Move X2, X31
	154 Call String.Concat, X0, X1
	155 Move X8, 0x23AB000
	156 Move X8, [X8+1824]
	157 Move X21, X0
	158 Move X8, [X8]
	159 Move X0, X8
	160 Call 0x1C17F10
	161 Move X8, 0x23AB000
	162 Move X8, [X8+1816]
	163 Move X22, X0
	164 Move X1, [X8]
	165 Call Dictionary`2<Object, Object>..ctor, X0
	166 Move X8, [X20]
	167 Move X0, X20
	168 Move X9, [X8+376]
	169 Move X1, [X8+384]
	170 NotImplemented "Instruction BLR not yet implemented."
	171 Move X8, 0x23AC000
	172 Move X8, [X8+1848]
	173 Move X23, [X8]
	174 Compare X0, 0
	175 JumpIfEqual {184}
	176 Move X8, 0x23AC000
	177 Move W1, [X0+16]
	178 Move X8, [X8+1136]
	179 Add X0, X31, 8
	180 Move [X31+8], X31
	181 Move X2, [X8]
	182 Call Nullable`1<Int32>..ctor, X0, X1
	183 Move X8, [X31+8]
	184 Move X8, X31
	185 Move X27, 0x23AC000
	186 Move X27, [X27+1144]
	187 Add X1, X31, 8
	188 Move [X31+8], X8
	189 Move X0, [X27]
	190 Call 0x1C17E04
	191 Compare X22, 0
	192 JumpIfEqual {268}
	193 Move X28, 0x23AB000
	194 Move X28, [X28+1808]
	195 Move X2, X0
	196 Move X0, X22
	197 Move X1, X23
	198 Move X3, [X28]
	199 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	200 Move X8, [X20]
	201 Move X0, X20
	202 Move X9, [X8+376]
	203 Move X1, [X8+384]
	204 NotImplemented "Instruction BLR not yet implemented."
	205 Move X8, 0x23AC000
	206 Move X8, [X8+1840]
	207 Move X23, [X8]
	208 Compare X0, 0
	209 JumpIfEqual {218}
	210 Move X8, 0x23AC000
	211 Move W1, [X0+20]
	212 Move X8, [X8+1136]
	213 Add X0, X31, 8
	214 Move [X31+8], X31
	215 Move X2, [X8]
	216 Call Nullable`1<Int32>..ctor, X0, X1
	217 Move X8, [X31+8]
	218 Move X8, X31
	219 Move X0, [X27]
	220 Add X1, X31, 8
	221 Move [X31+8], X8
	222 Call 0x1C17E04
	223 Move X3, [X28]
	224 Move X2, X0
	225 Move X0, X22
	226 Move X1, X23
	227 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	228 Move X0, [X26]
	229 Move W8, [X0+224]
	230 Compare W8, 0
	231 JumpIfNotEqual {233}
	232 Call 0x1C17DFC
	233 Move X3, [X25]
	234 Move X4, [X24]
	235 Move W0, 2048
	236 Move W5, 206
	237 Move X1, X21
	238 Move X2, X22
	239 Move X6, X31
	240 Call Log.Error, X0, X1, X2, X3, X4, X5
	241 Move W8, 4
	242 Move [X19+24], W8
	243 Move X8, [X20]
	244 Move X0, X20
	245 Move X9, [X8+376]
	246 Move X1, [X8+384]
	247 NotImplemented "Instruction BLR not yet implemented."
	248 Compare X0, 0
	249 JumpIfEqual {251}
	250 Move X8, [X0+24]
	251 Move X8, X31
	252 Move [X19+32], X8
	253 Move W8, 1
	254 Move [X19+40], W8
	255 Move X20, [X31+96]
	256 Move X19, [X31+104]
	257 Move X22, [X31+80]
	258 Move X21, [X31+88]
	259 Move X24, [X31+64]
	260 Move X23, [X31+72]
	261 Move X26, [X31+48]
	262 Move X25, [X31+56]
	263 Move X28, [X31+32]
	264 Move X27, [X31+40]
	265 Move X30, [X31+16]
	266 Add X31, X31, 112
	267 Return 
	268 Call 0x1C17F20

Method: System.Void <AuthenticateWithMetaQuestAccount>b__1(Oculus.Platform.Message`1<Oculus.Platform.Models.User> msg)

Disassembly:
	0x01D49560 BL 0x1C16F10
	0x01D49564 ADRP X8, 0x23AB000
	0x01D49568 LDR X8, [X8 + 0x850]
	0x01D4956C MOV X21, X0
	0x01D49570 LDR X2, [X8]
	0x01D49574 MOV X1, X22
	0x01D49578 MOV X3, X31
	0x01D4957C BL 0x28F118C
	0x01D49580 CBZ X20, 0x1D495E0
	0x01D49584 ADRP X8, 0x23AB000
	0x01D49588 LDR X8, [X8 + 0x828]
	0x01D4958C LDR X2, [X8]
	0x01D49590 MOV X0, X20
	0x01D49594 MOV X1, X21
	0x01D49598 BL 0x25C95D0
	0x01D4959C B 0x1D497CC
	0x01D495A0 STR W31, [X19]
	0x01D495A4 LDRB W8, [X31 + 0x38]
	0x01D495A8 STRB W8, [X19 + 0x28]
	0x01D495AC LDR X0, [X25]
	0x01D495B0 LDR W8, [X0 + 0xE0]
	0x01D495B4 CBNZ W8, 0x1D495BC
	0x01D495B8 BL 0x1C16DFC
	0x01D495BC ADRP X8, 0x23AB000
	0x01D495C0 LDR X8, [X8 + 0x7F0]
	0x01D495C4 ADD X0, X19, 0x8
	0x01D495C8 LDR X3, [X8]
	0x01D495CC ADD X1, X31, 0x38
	0x01D495D0 MOV X2, X19
	0x01D495D4 BL 0x212C9F0
	0x01D495D8 B 0x1D49730
	0x01D495DC BL 0x1C16F20
	0x01D495E0 BL 0x1C16F20
	0x01D495E4 B 0x1D49608
	0x01D495E8 B 0x1D49608
	0x01D495EC B 0x1D49608
	0x01D495F0 B 0x1D49608
	0x01D495F4 B 0x1D49608
	0x01D495F8 B 0x1D49608
	0x01D495FC B 0x1D49608
	0x01D49600 B 0x1D49608
	0x01D49604 B 0x1D49608
	0x01D49608 MOV X20, X1
	0x01D4960C MOV X21, X0
	0x01D49610 CMP W20, 0x1
	0x01D49614 B.NE 0x1D496B8
	0x01D49618 MOV X0, X21
	0x01D4961C BL 0x3EB1AD0
	0x01D49620 MOV X20, X0
	0x01D49624 ADRP X0, 0x23AA000
	0x01D49628 LDR X0, [X0 + 0x7D0]
	0x01D4962C BL 0x1C16D08
	0x01D49630 LDR X8, [X20]
	0x01D49634 LDR X1, [X8]
	0x01D49638 BL 0x1C17270
	0x01D4963C TBZ X0, 0x0, 0x1D4968C
	0x01D49640 LDR X20, [X20]
	0x01D49644 BL 0x3EB1AE0
	0x01D49648 MOVN W8, 0x1
	0x01D4964C STR X31, [X19 + 0x20]
	0x01D49650 STR W8, [X19], #0x8
	0x01D49654 ADRP X0, 0x23AB000
	0x01D49658 LDR X0, [X0 + 0x698]
	0x01D4965C BL 0x1C16D08
	0x01D49660 LDR W8, [X0 + 0xE0]
	0x01D49664 CBNZ W8, 0x1D4966C
	0x01D49668 BL 0x1C16DFC
	0x01D4966C ADRP X0, 0x23AB000
	0x01D49670 LDR X0, [X0 + 0x7D0]
	0x01D49674 BL 0x1C16D08
	0x01D49678 MOV X2, X0
	0x01D4967C MOV X0, X19
	0x01D49680 MOV X1, X20
	0x01D49684 BL 0x263AE28
	0x01D49688 B 0x1D49730
	0x01D4968C MOVZ W0, 0x8
	0x01D49690 BL 0x3EB1AF0
	0x01D49694 LDR X8, [X20]
	0x01D49698 STR X8, [X0]
	0x01D4969C ADRP X1, 0x216B000
	0x01D496A0 ADD X1, X1, 0xE58
	0x01D496A4 MOV X2, X31
	0x01D496A8 BL 0x3EB1B00
	0x01D496AC B 0x1D4A200
	0x01D496B0 MOV X21, X0
	0x01D496B4 BL 0x3EB1AE0
	0x01D496B8 MOV X0, X21
	0x01D496BC BL 0x1D2C690
	0x01D496C0 LDR W9, [X8 + 0x24]
	0x01D496C4 LDUR X10, [X8 + 0x1C]
	0x01D496C8 LDR X21, [X8 + 0x10]
	0x01D496CC STR W9, [X31 + 0x70]
	0x01D496D0 STR X10, [X31 + 0x68]
	0x01D496D4 MOVN W8, 0x1
	0x01D496D8 STR X31, [X19 + 0x20]
	0x01D496DC STR W8, [X19], #0x8
	0x01D496E0 LDR X8, [X31 + 0x68]
	0x01D496E4 LDR W9, [X31 + 0x70]
	0x01D496E8 LDR X0, [X25]
	0x01D496EC ADRP X22, 0x23AB000
	0x01D496F0 STR X8, [X31 + 0x58]
	0x01D496F4 STR W9, [X31 + 0x60]
	0x01D496F8 LDR W8, [X0 + 0xE0]
	0x01D496FC LDR X22, [X22 + 0x798]
	0x01D49700 CBNZ W8, 0x1D49708
	0x01D49704 BL 0x1C16DFC
	0x01D49708 LDR X2, [X22]
	0x01D4970C LDR X8, [X31 + 0x58]
	0x01D49710 LDR W9, [X31 + 0x60]
	0x01D49714 ADD X1, X31, 0x40
	0x01D49718 MOV X0, X19
	0x01D4971C STR X21, [X31 + 0x40]
	0x01D49720 STR W20, [X31 + 0x48]
	0x01D49724 STUR X8, [X31 + 0x4C]
	0x01D49728 STR W9, [X31 + 0x54]
	0x01D4972C BL 0x263AB8C
	0x01D49730 LDR X8, [X24 + 0x28]
	0x01D49734 LDR X9, [X31 + 0x78]
	0x01D49738 CMP X8, X9
	0x01D4973C B.NE 0x1D4975C
	0x01D49740 LDP X20, X19, [X31 + 0xC0]
	0x01D49744 LDP X22, X21, [X31 + 0xB0]
	0x01D49748 LDP X24, X23, [X31 + 0xA0]
	0x01D4974C LDP X26, X25, [X31 + 0x90]
	0x01D49750 LDP X30, X27, [X31 + 0x80]
	0x01D49754 ADD X31, X31, 0xD0
	0x01D49758 RET
	0x01D4975C BL 0x3EB1B20
	0x01D49760 LDR X0, [X27]
	0x01D49764 LDR W8, [X0 + 0xE0]
	0x01D49768 CBNZ W8, 0x1D49770
	0x01D4976C BL 0x1C16DFC
	0x01D49770 MOV X0, X31
	0x01D49774 BL 0x33F2EBC
	0x01D49778 STRB W0, [X31 + 0x30]
	0x01D4977C ADD X0, X31, 0x30
	0x01D49780 MOV X1, X31
	0x01D49784 BL 0x32C55DC
	0x01D49788 MOV X8, X0
	0x01D4978C LDR X0, [X23]
	0x01D49790 STRB W8, [X31 + 0x38]
	0x01D49794 LDR W8, [X0 + 0xE0]
	0x01D49798 CBNZ W8, 0x1D497A0
	0x01D4979C BL 0x1C16DFC
	0x01D497A0 ADD X0, X31, 0x38
	0x01D497A4 MOV X1, X31
	0x01D497A8 BL 0x32C55E4
	0x01D497AC TBZ X0, 0x0, 0x1D49858
	0x01D497B0 LDR X0, [X23]
	0x01D497B4 LDR W8, [X0 + 0xE0]
	0x01D497B8 CBNZ W8, 0x1D497C0
	0x01D497BC BL 0x1C16DFC
	0x01D497C0 ADD X0, X31, 0x38
	0x01D497C4 MOV X1, X31
	0x01D497C8 BL 0x32C5998
	0x01D497CC LDR X8, [X19 + 0x20]
	0x01D497D0 CBZ X8, 0x1D4996C
	0x01D497D4 LDRB W9, [X8 + 0x38]
	0x01D497D8 CBZ W9, 0x1D49760
	0x01D497DC LDR W20, [X8 + 0x18]
	0x01D497E0 CBNZ W20, 0x1D496C0
	0x01D497E4 LDR X9, [X8 + 0x30]
	0x01D497E8 CBZ X9, 0x1D497F4
	0x01D497EC LDR X9, [X9 + 0x18]
	0x01D497F0 CBZ X9, 0x1D49898
	0x01D497F4 STRB W31, [X8 + 0x48]
	0x01D497F8 STR X31, [X8 + 0x40]
	0x01D497FC MOV X0, X31
	0x01D49800 BL 0x34DE590
	0x01D49804 ADRP X8, 0x23AB000
	0x01D49808 LDR X22, [X19 + 0x20]
	0x01D4980C LDR X8, [X8 + 0x7F8]
	0x01D49810 MOV X20, X0
	0x01D49814 LDR X0, [X8]
	0x01D49818 BL 0x1C16F10
	0x01D4981C ADRP X8, 0x23AB000
	0x01D49820 LDR X8, [X8 + 0x858]
	0x01D49824 MOV X21, X0
	0x01D49828 LDR X2, [X8]
	0x01D4982C MOV X1, X22
	0x01D49830 MOV X3, X31
	0x01D49834 BL 0x28F118C
	0x01D49838 CBZ X20, 0x1D49970
	0x01D4983C ADRP X8, 0x23AB000
	0x01D49840 LDR X8, [X8 + 0x820]
	0x01D49844 LDR X2, [X8]
	0x01D49848 MOV X0, X20
	0x01D4984C MOV X1, X21
	0x01D49850 BL 0x25C95D0
	0x01D49854 B 0x1D49A1C
	0x01D49858 MOVZ W8, 0x1
	0x01D4985C STR W8, [X19]
	0x01D49860 LDRB W8, [X31 + 0x38]
	0x01D49864 STRB W8, [X19 + 0x28]
	0x01D49868 LDR X0, [X25]
	0x01D4986C LDR W8, [X0 + 0xE0]
	0x01D49870 CBNZ W8, 0x1D49878
	0x01D49874 BL 0x1C16DFC
	0x01D49878 ADRP X8, 0x23AB000
	0x01D4987C LDR X8, [X8 + 0x7F0]
	0x01D49880 ADD X0, X19, 0x8
	0x01D49884 LDR X3, [X8]
	0x01D49888 ADD X1, X31, 0x38
	0x01D4988C MOV X2, X19
	0x01D49890 BL 0x212C9F0
	0x01D49894 B 0x1D49730
	0x01D49898 ADRP X8, 0x23AA000
	0x01D4989C LDR X8, [X8 + 0x720]
	0x01D498A0 LDR X0, [X8]
	0x01D498A4 BL 0x1C16F10
	0x01D498A8 ADRP X8, 0x23AA000
	0x01D498AC LDR X8, [X8 + 0x718]
	0x01D498B0 MOV X20, X0
	0x01D498B4 LDR X1, [X8]
	0x01D498B8 BL 0x2AA4804
	0x01D498BC LDR X8, [X19 + 0x20]
	0x01D498C0 CBZ X8, 0x1D49974
	0x01D498C4 LDR X8, [X8 + 0x30]
	0x01D498C8 CBZ X8, 0x1D498D4
	0x01D498CC LDR X2, [X8 + 0x28]
	0x01D498D0 B 0x1D498D8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x2690000
	011 Move W8, [X21+1915]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {62}
	018 Move X0, 0x23AB000
	019 Move X0, [X0+1808]
	020 Call 0x1C17CF4
	021 Move X0, 0x23AB000
	022 Move X0, [X0+1816]
	023 Call 0x1C17CF4
	024 Move X0, 0x23AB000
	025 Move X0, [X0+1824]
	026 Call 0x1C17CF4
	027 Move X0, 0x23AB000
	028 Move X0, [X0+1928]
	029 Call 0x1C17CF4
	030 Move X0, 0x23AC000
	031 Move X0, [X0+1872]
	032 Call 0x1C17CF4
	033 Move X0, 0x23AC000
	034 Move X0, [X0+1136]
	035 Call 0x1C17CF4
	036 Move X0, 0x23AC000
	037 Move X0, [X0+1144]
	038 Call 0x1C17CF4
	039 Move X0, 0x23AC000
	040 Move X0, [X0+1880]
	041 Call 0x1C17CF4
	042 Move X0, 0x23AC000
	043 Move X0, [X0+1816]
	044 Call 0x1C17CF4
	045 Move X0, 0x23AC000
	046 Move X0, [X0+1840]
	047 Call 0x1C17CF4
	048 Move X0, 0x23AC000
	049 Move X0, [X0+1888]
	050 Call 0x1C17CF4
	051 Move X0, 0x23AC000
	052 Move X0, [X0+1848]
	053 Call 0x1C17CF4
	054 Move X0, 0x23AC000
	055 Move X0, [X0+1856]
	056 Call 0x1C17CF4
	057 Move X0, 0x23AC000
	058 Move X0, [X0+1896]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X21+1915], W8
	062 Compare X20, 0
	063 JumpIfEqual {244}
	064 Move X0, X20
	065 Move X1, X31
	066 Call Message.get_IsError, X0
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {82}
	071 Move X8, [X20]
	072 Move X0, X20
	073 Move X9, [X8+376]
	074 Move X1, [X8+384]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move X8, 0x23AC000
	077 Move X8, [X8+1896]
	078 Move X8, [X8]
	079 Compare X0, 0
	080 JumpIfEqual {124}
	081 Move X1, [X0+24]
	082 Move X8, [X20+40]
	083 Move [X19+48], X8
	084 Compare X8, 0
	085 JumpIfEqual {244}
	086 Move X9, 0x23AC000
	087 Move X8, [X8+24]
	088 Move X9, [X9+1880]
	089 Add X1, X31, 8
	090 Move [X31+8], X8
	091 Move X0, [X9]
	092 Call 0x1C17E04
	093 Move X8, [X19+48]
	094 Compare X8, 0
	095 JumpIfEqual {244}
	096 Move X2, [X8+40]
	097 Move X8, 0x23AC000
	098 Move X8, [X8+1888]
	099 Move X1, X0
	100 Move X3, X31
	101 Move X0, [X8]
	102 Call String.Format, X0, X1, X2
	103 Move X8, 0x23AB000
	104 Move X8, [X8+1928]
	105 Move X20, X0
	106 Move X8, [X8]
	107 Move W9, [X8+224]
	108 Compare W9, 0
	109 JumpIfNotEqual {112}
	110 Move X0, X8
	111 Call 0x1C17DFC
	112 Move X8, 0x23AC000
	113 Move X9, 0x23AC000
	114 Move X8, [X8+1816]
	115 Move X9, [X9+1856]
	116 Move W0, 2048
	117 Move W5, 247
	118 Move X3, [X8]
	119 Move X4, [X9]
	120 Move X1, X20
	121 Move X2, X31
	122 Move X6, X31
	123 Call Log.Debug, X0, X1, X2, X3, X4, X5
	124 Move X1, X31
	125 Move X0, X8
	126 Move X2, X31
	127 Call String.Concat, X0, X1
	128 Move X8, 0x23AB000
	129 Move X8, [X8+1824]
	130 Move X21, X0
	131 Move X8, [X8]
	132 Move X0, X8
	133 Call 0x1C17F10
	134 Move X8, 0x23AB000
	135 Move X8, [X8+1816]
	136 Move X22, X0
	137 Move X1, [X8]
	138 Call Dictionary`2<Object, Object>..ctor, X0
	139 Move X8, [X20]
	140 Move X0, X20
	141 Move X9, [X8+376]
	142 Move X1, [X8+384]
	143 NotImplemented "Instruction BLR not yet implemented."
	144 Move X8, 0x23AC000
	145 Move X8, [X8+1848]
	146 Move X23, [X8]
	147 Compare X0, 0
	148 JumpIfEqual {157}
	149 Move X8, 0x23AC000
	150 Move W1, [X0+16]
	151 Move X8, [X8+1136]
	152 Add X0, X31, 8
	153 Move [X31+8], X31
	154 Move X2, [X8]
	155 Call Nullable`1<Int32>..ctor, X0, X1
	156 Move X8, [X31+8]
	157 Move X8, X31
	158 Move X24, 0x23AC000
	159 Move X24, [X24+1144]
	160 Add X1, X31, 8
	161 Move [X31+8], X8
	162 Move X0, [X24]
	163 Call 0x1C17E04
	164 Compare X22, 0
	165 JumpIfEqual {244}
	166 Move X25, 0x23AB000
	167 Move X25, [X25+1808]
	168 Move X2, X0
	169 Move X0, X22
	170 Move X1, X23
	171 Move X3, [X25]
	172 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	173 Move X8, [X20]
	174 Move X0, X20
	175 Move X9, [X8+376]
	176 Move X1, [X8+384]
	177 NotImplemented "Instruction BLR not yet implemented."
	178 Move X8, 0x23AC000
	179 Move X8, [X8+1840]
	180 Move X23, [X8]
	181 Compare X0, 0
	182 JumpIfEqual {191}
	183 Move X8, 0x23AC000
	184 Move W1, [X0+20]
	185 Move X8, [X8+1136]
	186 Add X0, X31, 8
	187 Move [X31+8], X31
	188 Move X2, [X8]
	189 Call Nullable`1<Int32>..ctor, X0, X1
	190 Move X8, [X31+8]
	191 Move X8, X31
	192 Move X0, [X24]
	193 Add X1, X31, 8
	194 Move [X31+8], X8
	195 Call 0x1C17E04
	196 Move X3, [X25]
	197 Move X2, X0
	198 Move X0, X22
	199 Move X1, X23
	200 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	201 Move X8, 0x23AB000
	202 Move X8, [X8+1928]
	203 Move X0, [X8]
	204 Move W8, [X0+224]
	205 Compare W8, 0
	206 JumpIfNotEqual {208}
	207 Call 0x1C17DFC
	208 Move X8, 0x23AC000
	209 Move X9, 0x23AC000
	210 Move X8, [X8+1816]
	211 Move X9, [X9+1856]
	212 Move W0, 2048
	213 Move W5, 237
	214 Move X3, [X8]
	215 Move X4, [X9]
	216 Move X1, X21
	217 Move X2, X22
	218 Move X6, X31
	219 Call Log.Error, X0, X1, X2, X3, X4, X5
	220 Move W8, 5
	221 Move [X19+24], W8
	222 Move X8, [X20]
	223 Move X0, X20
	224 Move X9, [X8+376]
	225 Move X1, [X8+384]
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Compare X0, 0
	228 JumpIfEqual {230}
	229 Move X8, [X0+24]
	230 Move X8, X31
	231 Move [X19+32], X8
	232 Move W8, 1
	233 Move [X19+56], W8
	234 Move X20, [X31+64]
	235 Move X19, [X31+72]
	236 Move X22, [X31+48]
	237 Move X21, [X31+56]
	238 Move X24, [X31+32]
	239 Move X23, [X31+40]
	240 Move X30, [X31+16]
	241 Move X25, [X31+24]
	242 Add X31, X31, 80
	243 Return 
	244 Call 0x1C17F20

Method: System.Void <AuthenticateWithMetaQuestAccount>b__2(Oculus.Platform.Message`1<Oculus.Platform.Models.UserProof> msg)

Disassembly:
	0x01D498D4 MOV X2, X31
	0x01D498D8 CBZ X20, 0x1D49978
	0x01D498DC ADRP X8, 0x23AB000
	0x01D498E0 ADRP X22, 0x23AB000
	0x01D498E4 LDR X8, [X8 + 0x898]
	0x01D498E8 LDR X22, [X22 + 0x888]
	0x01D498EC ADRP X9, 0x23AA000
	0x01D498F0 LDR X9, [X9 + 0x710]
	0x01D498F4 LDR X1, [X8]
	0x01D498F8 LDR X21, [X22]
	0x01D498FC LDR X3, [X9]
	0x01D49900 MOV X0, X20
	0x01D49904 BL 0x2AA5098
	0x01D49908 ADRP X8, 0x23AA000
	0x01D4990C LDR X8, [X8 + 0x788]
	0x01D49910 LDR X0, [X8]
	0x01D49914 LDR W8, [X0 + 0xE0]
	0x01D49918 CBNZ W8, 0x1D49920
	0x01D4991C BL 0x1C16DFC
	0x01D49920 ADRP X8, 0x23AB000
	0x01D49924 ADRP X9, 0x23AB000
	0x01D49928 LDR X8, [X8 + 0x718]
	0x01D4992C LDR X9, [X9 + 0x740]
	0x01D49930 LDR X3, [X8]
	0x01D49934 LDR X4, [X9]
	0x01D49938 MOVZ W0, 0x800
	0x01D4993C MOVZ W5, 0x107
	0x01D49940 MOV X1, X21
	0x01D49944 MOV X2, X20
	0x01D49948 MOV X6, X31
	0x01D4994C BL 0x35C25CC
	0x01D49950 LDR X8, [X19 + 0x20]
	0x01D49954 CBZ X8, 0x1D4997C
	0x01D49958 MOVZ W20, 0x5
	0x01D4995C STR W20, [X8 + 0x18]
	0x01D49960 LDR X9, [X22]
	0x01D49964 STR X9, [X8 + 0x20]
	0x01D49968 B 0x1D496C0
	0x01D4996C BL 0x1C16F20
	0x01D49970 BL 0x1C16F20
	0x01D49974 BL 0x1C16F20
	0x01D49978 BL 0x1C16F20
	0x01D4997C BL 0x1C16F20
	0x01D49980 B 0x1D49608
	0x01D49984 B 0x1D49608
	0x01D49988 B 0x1D49608
	0x01D4998C B 0x1D49608
	0x01D49990 B 0x1D49608
	0x01D49994 B 0x1D49608
	0x01D49998 B 0x1D49608
	0x01D4999C B 0x1D49608
	0x01D499A0 B 0x1D49608
	0x01D499A4 B 0x1D49608
	0x01D499A8 B 0x1D49608
	0x01D499AC B 0x1D49608
	0x01D499B0 LDR X0, [X27]
	0x01D499B4 LDR W8, [X0 + 0xE0]
	0x01D499B8 CBNZ W8, 0x1D499C0
	0x01D499BC BL 0x1C16DFC
	0x01D499C0 MOV X0, X31
	0x01D499C4 BL 0x33F2EBC
	0x01D499C8 STRB W0, [X31 + 0x30]
	0x01D499CC ADD X0, X31, 0x30
	0x01D499D0 MOV X1, X31
	0x01D499D4 BL 0x32C55DC
	0x01D499D8 MOV X8, X0
	0x01D499DC LDR X0, [X23]
	0x01D499E0 STRB W8, [X31 + 0x38]
	0x01D499E4 LDR W8, [X0 + 0xE0]
	0x01D499E8 CBNZ W8, 0x1D499F0
	0x01D499EC BL 0x1C16DFC
	0x01D499F0 ADD X0, X31, 0x38
	0x01D499F4 MOV X1, X31
	0x01D499F8 BL 0x32C55E4
	0x01D499FC TBZ X0, 0x0, 0x1D49ABC
	0x01D49A00 LDR X0, [X23]
	0x01D49A04 LDR W8, [X0 + 0xE0]
	0x01D49A08 CBNZ W8, 0x1D49A10
	0x01D49A0C BL 0x1C16DFC
	0x01D49A10 ADD X0, X31, 0x38
	0x01D49A14 MOV X1, X31
	0x01D49A18 BL 0x32C5998
	0x01D49A1C LDR X8, [X19 + 0x20]
	0x01D49A20 CBZ X8, 0x1D49D8C
	0x01D49A24 LDRB W9, [X8 + 0x48]
	0x01D49A28 CBZ W9, 0x1D499B0
	0x01D49A2C LDR W20, [X8 + 0x18]
	0x01D49A30 CBNZ W20, 0x1D496C0
	0x01D49A34 CMP W26, 0x3
	0x01D49A38 B.NE 0x1D49B4C
	0x01D49A3C LDR X8, [X19 + 0x30]
	0x01D49A40 MOVN W26, 0x0
	0x01D49A44 STR X8, [X31 + 0x28]
	0x01D49A48 STR X31, [X19 + 0x30]
	0x01D49A4C STR W26, [X19]
	0x01D49A50 ADRP X8, 0x23AB000
	0x01D49A54 LDR X8, [X8 + 0x830]
	0x01D49A58 ADD X0, X31, 0x28
	0x01D49A5C LDR X1, [X8]
	0x01D49A60 BL 0x2677474
	0x01D49A64 LDR X8, [X19 + 0x20]
	0x01D49A68 CBZ X8, 0x1D49D94
	0x01D49A6C STR X0, [X8 + 0x10]
	0x01D49A70 LDR W20, [X8 + 0x18]
	0x01D49A74 CBNZ W20, 0x1D496C0
	0x01D49A78 CMP W26, 0x4
	0x01D49A7C B.NE 0x1D49AFC
	0x01D49A80 LDR X8, [X19 + 0x38]
	0x01D49A84 MOVN W9, 0x0
	0x01D49A88 STR X8, [X31 + 0x20]
	0x01D49A8C STR X31, [X19 + 0x38]
	0x01D49A90 STR W9, [X19]
	0x01D49A94 ADD X0, X31, 0x20
	0x01D49A98 MOV X1, X31
	0x01D49A9C BL 0x32C3B4C
	0x01D49AA0 LDR X8, [X19 + 0x20]
	0x01D49AA4 CBZ X8, 0x1D49D90
	0x01D49AA8 LDR X21, [X8 + 0x10]
	0x01D49AAC LDR W9, [X8 + 0x24]
	0x01D49AB0 LDUR X10, [X8 + 0x1C]
	0x01D49AB4 LDR W20, [X8 + 0x18]
	0x01D49AB8 B 0x1D496CC
	0x01D49ABC MOVZ W8, 0x2
	0x01D49AC0 STR W8, [X19]
	0x01D49AC4 LDRB W8, [X31 + 0x38]
	0x01D49AC8 STRB W8, [X19 + 0x28]
	0x01D49ACC LDR X0, [X25]
	0x01D49AD0 LDR W8, [X0 + 0xE0]
	0x01D49AD4 CBNZ W8, 0x1D49ADC
	0x01D49AD8 BL 0x1C16DFC
	0x01D49ADC ADRP X8, 0x23AB000
	0x01D49AE0 LDR X8, [X8 + 0x7F0]
	0x01D49AE4 ADD X0, X19, 0x8
	0x01D49AE8 LDR X3, [X8]
	0x01D49AEC ADD X1, X31, 0x38
	0x01D49AF0 MOV X2, X19
	0x01D49AF4 BL 0x212C9F0
	0x01D49AF8 B 0x1D49730
	0x01D49AFC LDR X20, [X8 + 0x10]
	0x01D49B00 CBZ X20, 0x1D49D98
	0x01D49B04 ADRP X10, 0x23AB000
	0x01D49B08 LDR X8, [X20]
	0x01D49B0C LDR X10, [X10 + 0x818]
	0x01D49B10 LDRH W9, [X8 + 0x12E]
	0x01D49B14 LDR X1, [X10]
	0x01D49B18 CBZ X9, 0x1D49B3C
	0x01D49B1C LDR X10, [X8 + 0xB0]
	0x01D49B20 ADD X10, X10, 0x8
	0x01D49B24 LDUR X11, [X10 - 0x8]
	0x01D49B28 CMP X11, X1
	0x01D49B2C B.EQ 0x1D49CB8
	0x01D49B30 SUBS X9, X9, 0x1
	0x01D49B34 ADD X10, X10, 0x10
	0x01D49B38 B.NE 0x1D49B24
	0x01D49B3C MOVZ W2, 0x1
	0x01D49B40 MOV X0, X20
	0x01D49B44 BL 0x1C5C788
	0x01D49B48 B 0x1D49CC8
	0x01D49B4C ADRP X8, 0x23AA000
	0x01D49B50 LDR X8, [X8 + 0x648]
	0x01D49B54 LDR X0, [X8]
	0x01D49B58 LDR W8, [X0 + 0xE0]
	0x01D49B5C CBNZ W8, 0x1D49B64
	0x01D49B60 BL 0x1C16DFC
	0x01D49B64 BL 0x1D32AF4
	0x01D49B68 LDR X8, [X19 + 0x20]
	0x01D49B6C CBZ X8, 0x1D49D9C
	0x01D49B70 LDR X8, [X8 + 0x30]
	0x01D49B74 CBZ X8, 0x1D49DA0
	0x01D49B78 MOV X20, X0
	0x01D49B7C ADD X0, X8, 0x18
	0x01D49B80 MOV X1, X31
	0x01D49B84 BL 0x339A968
	0x01D49B88 LDR X8, [X19 + 0x20]
	0x01D49B8C CBZ X8, 0x1D49DA4
	0x01D49B90 LDR X8, [X8 + 0x30]
	0x01D49B94 CBZ X8, 0x1D49DA8
	0x01D49B98 LDR X22, [X8 + 0x28]
	0x01D49B9C ADRP X8, 0x23AB000
	0x01D49BA0 LDR X8, [X8 + 0x6D0]
	0x01D49BA4 MOV X21, X0
	0x01D49BA8 LDR X0, [X8]
	0x01D49BAC BL 0x1C16F10
	0x01D49BB0 ADRP X8, 0x23AB000
	0x01D49BB4 LDR X8, [X8 + 0x6C0]
	0x01D49BB8 MOV X23, X0
	0x01D49BBC LDR X1, [X8]
	0x01D49BC0 BL 0x2AA4804
	0x01D49BC4 CBZ X23, 0x1D49DAC
	0x01D49BC8 ADRP X8, 0x23AB000
	0x01D49BCC LDR X8, [X8 + 0x878]
	0x01D49BD0 ADRP X9, 0x23AB000
	0x01D49BD4 ADRP X27, 0x23AB000
	0x01D49BD8 LDR X9, [X9 + 0x880]
	0x01D49BDC LDR X27, [X27 + 0x810]
	0x01D49BE0 LDR X1, [X8]
	0x01D49BE4 LDR X2, [X9]
	0x01D49BE8 LDR X3, [X27]
	0x01D49BEC MOV X0, X23
	0x01D49BF0 BL 0x2AA5098
	0x01D49BF4 LDR X8, [X19 + 0x20]
	0x01D49BF8 CBZ X8, 0x1D49DB0
	0x01D49BFC LDR X2, [X8 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x2690000
	011 Move W8, [X21+1916]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {59}
	018 Move X0, 0x23AB000
	019 Move X0, [X0+1808]
	020 Call 0x1C17CF4
	021 Move X0, 0x23AB000
	022 Move X0, [X0+1816]
	023 Call 0x1C17CF4
	024 Move X0, 0x23AB000
	025 Move X0, [X0+1824]
	026 Call 0x1C17CF4
	027 Move X0, 0x23AB000
	028 Move X0, [X0+1928]
	029 Call 0x1C17CF4
	030 Move X0, 0x23AC000
	031 Move X0, [X0+1904]
	032 Call 0x1C17CF4
	033 Move X0, 0x23AC000
	034 Move X0, [X0+1136]
	035 Call 0x1C17CF4
	036 Move X0, 0x23AC000
	037 Move X0, [X0+1144]
	038 Call 0x1C17CF4
	039 Move X0, 0x23AC000
	040 Move X0, [X0+1816]
	041 Call 0x1C17CF4
	042 Move X0, 0x23AC000
	043 Move X0, [X0+1840]
	044 Call 0x1C17CF4
	045 Move X0, 0x23AC000
	046 Move X0, [X0+1848]
	047 Call 0x1C17CF4
	048 Move X0, 0x23AC000
	049 Move X0, [X0+1856]
	050 Call 0x1C17CF4
	051 Move X0, 0x23AC000
	052 Move X0, [X0+1912]
	053 Call 0x1C17CF4
	054 Move X0, 0x23AC000
	055 Move X0, [X0+1920]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X21+1916], W8
	059 Compare X20, 0
	060 JumpIfEqual {225}
	061 Move X0, X20
	062 Move X1, X31
	063 Call Message.get_IsError, X0
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {79}
	068 Move X8, [X20]
	069 Move X0, X20
	070 Move X9, [X8+376]
	071 Move X1, [X8+384]
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move X8, 0x23AC000
	074 Move X8, [X8+1920]
	075 Move X8, [X8]
	076 Compare X0, 0
	077 JumpIfEqual {105}
	078 Move X1, [X0+24]
	079 Move X8, 0x23AB000
	080 Move X8, [X8+1928]
	081 Move X0, [X8]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Move X8, 0x23AC000
	087 Move X9, 0x23AC000
	088 Move X10, 0x23AC000
	089 Move X8, [X8+1912]
	090 Move X9, [X9+1816]
	091 Move X10, [X10+1856]
	092 Move W0, 2048
	093 Move X1, [X8]
	094 Move X3, [X9]
	095 Move X4, [X10]
	096 Move W5, 287
	097 Move X2, X31
	098 Move X6, X31
	099 Call Log.Debug, X0, X1, X2, X3, X4, X5
	100 Move X8, [X20+40]
	101 Compare X8, 0
	102 JumpIfEqual {225}
	103 Move X8, [X8+16]
	104 Move [X19+64], X8
	105 Move X1, X31
	106 Move X0, X8
	107 Move X2, X31
	108 Call String.Concat, X0, X1
	109 Move X8, 0x23AB000
	110 Move X8, [X8+1824]
	111 Move X21, X0
	112 Move X8, [X8]
	113 Move X0, X8
	114 Call 0x1C17F10
	115 Move X8, 0x23AB000
	116 Move X8, [X8+1816]
	117 Move X22, X0
	118 Move X1, [X8]
	119 Call Dictionary`2<Object, Object>..ctor, X0
	120 Move X8, [X20]
	121 Move X0, X20
	122 Move X9, [X8+376]
	123 Move X1, [X8+384]
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Move X8, 0x23AC000
	126 Move X8, [X8+1848]
	127 Move X23, [X8]
	128 Compare X0, 0
	129 JumpIfEqual {138}
	130 Move X8, 0x23AC000
	131 Move W1, [X0+16]
	132 Move X8, [X8+1136]
	133 Add X0, X31, 8
	134 Move [X31+8], X31
	135 Move X2, [X8]
	136 Call Nullable`1<Int32>..ctor, X0, X1
	137 Move X8, [X31+8]
	138 Move X8, X31
	139 Move X24, 0x23AC000
	140 Move X24, [X24+1144]
	141 Add X1, X31, 8
	142 Move [X31+8], X8
	143 Move X0, [X24]
	144 Call 0x1C17E04
	145 Compare X22, 0
	146 JumpIfEqual {225}
	147 Move X25, 0x23AB000
	148 Move X25, [X25+1808]
	149 Move X2, X0
	150 Move X0, X22
	151 Move X1, X23
	152 Move X3, [X25]
	153 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	154 Move X8, [X20]
	155 Move X0, X20
	156 Move X9, [X8+376]
	157 Move X1, [X8+384]
	158 NotImplemented "Instruction BLR not yet implemented."
	159 Move X8, 0x23AC000
	160 Move X8, [X8+1840]
	161 Move X23, [X8]
	162 Compare X0, 0
	163 JumpIfEqual {172}
	164 Move X8, 0x23AC000
	165 Move W1, [X0+20]
	166 Move X8, [X8+1136]
	167 Add X0, X31, 8
	168 Move [X31+8], X31
	169 Move X2, [X8]
	170 Call Nullable`1<Int32>..ctor, X0, X1
	171 Move X8, [X31+8]
	172 Move X8, X31
	173 Move X0, [X24]
	174 Add X1, X31, 8
	175 Move [X31+8], X8
	176 Call 0x1C17E04
	177 Move X3, [X25]
	178 Move X2, X0
	179 Move X0, X22
	180 Move X1, X23
	181 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	182 Move X8, 0x23AB000
	183 Move X8, [X8+1928]
	184 Move X0, [X8]
	185 Move W8, [X0+224]
	186 Compare W8, 0
	187 JumpIfNotEqual {189}
	188 Call 0x1C17DFC
	189 Move X8, 0x23AC000
	190 Move X9, 0x23AC000
	191 Move X8, [X8+1816]
	192 Move X9, [X9+1856]
	193 Move W0, 2048
	194 Move W5, 278
	195 Move X3, [X8]
	196 Move X4, [X9]
	197 Move X1, X21
	198 Move X2, X22
	199 Move X6, X31
	200 Call Log.Error, X0, X1, X2, X3, X4, X5
	201 Move W8, 6
	202 Move [X19+24], W8
	203 Move X8, [X20]
	204 Move X0, X20
	205 Move X9, [X8+376]
	206 Move X1, [X8+384]
	207 NotImplemented "Instruction BLR not yet implemented."
	208 Compare X0, 0
	209 JumpIfEqual {211}
	210 Move X8, [X0+24]
	211 Move X8, X31
	212 Move [X19+32], X8
	213 Move W8, 1
	214 Move [X19+72], W8
	215 Move X20, [X31+64]
	216 Move X19, [X31+72]
	217 Move X22, [X31+48]
	218 Move X21, [X31+56]
	219 Move X24, [X31+32]
	220 Move X23, [X31+40]
	221 Move X30, [X31+16]
	222 Move X25, [X31+24]
	223 Add X31, X31, 80
	224 Return 
	225 Call 0x1C17F20

