Type: AnimalCompany.Pogostick

Method: System.Void Awake()

Disassembly:
	0x01DA2B64 CBNZ W9, 0x1DA2B6C
	0x01DA2B68 BL 0x1C16DFC
	0x01DA2B6C MOV X0, X21
	0x01DA2B70 MOV X1, X31
	0x01DA2B74 MOV X2, X31
	0x01DA2B78 BL 0x3C354F8
	0x01DA2B7C TBZ X0, 0x0, 0x1DA2BE0
	0x01DA2B80 LDR X8, [X20 + 0xB8]
	0x01DA2B84 CBZ X8, 0x1DA2BFC
	0x01DA2B88 LDR X8, [X8 + 0x150]
	0x01DA2B8C CBZ X8, 0x1DA2BFC
	0x01DA2B90 LDR X8, [X8 + 0xC8]
	0x01DA2B94 CBZ X8, 0x1DA2BFC
	0x01DA2B98 LDR X0, [X22]
	0x01DA2B9C LDR X21, [X8 + 0x150]
	0x01DA2BA0 LDR W9, [X0 + 0xE0]
	0x01DA2BA4 CBNZ W9, 0x1DA2BAC
	0x01DA2BA8 BL 0x1C16DFC
	0x01DA2BAC MOV X0, X21
	0x01DA2BB0 MOV X1, X31
	0x01DA2BB4 MOV X2, X31
	0x01DA2BB8 BL 0x3C354F8
	0x01DA2BBC TBZ X0, 0x0, 0x1DA2BE0
	0x01DA2BC0 LDR X8, [X20 + 0xB8]
	0x01DA2BC4 CBZ X8, 0x1DA2BFC
	0x01DA2BC8 LDR X8, [X8 + 0x150]
	0x01DA2BCC CBZ X8, 0x1DA2BFC
	0x01DA2BD0 LDR X8, [X8 + 0xC8]
	0x01DA2BD4 MOV W0, W31
	0x01DA2BD8 STR X8, [X19]
	0x01DA2BDC B 0x1DA2BEC
	0x01DA2BE0 MOVZ W0, 0x1
	0x01DA2BE4 B 0x1DA2BEC
	0x01DA2BE8 MOV W0, W31
	0x01DA2BEC LDP X20, X19, [X31 + 0x20]
	0x01DA2BF0 LDP X22, X21, [X31 + 0x10]
	0x01DA2BF4 LDR X30, [X31], #0x30
	0x01DA2BF8 RET
	0x01DA2BFC BL 0x1C16F20
	0x01DA2C00 STP X30, X21, [X31 - 0x20]!
	0x01DA2C04 STP X20, X19, [X31 + 0x10]
	0x01DA2C08 ADRP X20, 0x2636000
	0x01DA2C0C LDRB W8, [X20 + 0xA7A]
	0x01DA2C10 MOV X19, X0
	0x01DA2C14 TBNZ X8, 0x0, 0x1DA2C2C
	0x01DA2C18 ADRP X0, 0x2354000
	0x01DA2C1C LDR X0, [X0 + 0xBE0]
	0x01DA2C20 BL 0x1C16CF4
	0x01DA2C24 MOVZ W8, 0x1
	0x01DA2C28 STRB W8, [X20 + 0xA7A]
	0x01DA2C2C MOVZ W8, 0x999A
	0x01DA2C30 MOVK W8, 0x3E990000
	0x01DA2C34 STR W8, [X19 + 0xC0]
	0x01DA2C38 ADRP X21, 0x2636000
	0x01DA2C3C ADRP X20, 0x2354000
	0x01DA2C40 LDRB W8, [X21 + 0x783]
	0x01DA2C44 LDR X20, [X20 + 0xBE0]
	0x01DA2C48 CBNZ W8, 0x1DA2C60
	0x01DA2C4C ADRP X0, 0x2351000
	0x01DA2C50 LDR X0, [X0 + 0x5A0]
	0x01DA2C54 BL 0x1C16CF4
	0x01DA2C58 MOVZ W8, 0x1
	0x01DA2C5C STRB W8, [X21 + 0x783]
	0x01DA2C60 ADRP X8, 0x2351000
	0x01DA2C64 LDR X8, [X8 + 0x5A0]
	0x01DA2C68 MOV X1, X31
	0x01DA2C6C LDR X8, [X8]
	0x01DA2C70 LDR X8, [X8 + 0xB8]
	0x01DA2C74 LDR V0, [X8]
	0x01DA2C78 LDR V1, [X8 + 0x8]
	0x01DA2C7C STR D0, [X19 + 0xD8]
	0x01DA2C80 STR S1, [X19 + 0xE0]
	0x01DA2C84 LDR X0, [X20]
	0x01DA2C88 BL 0x3C124EC
	0x01DA2C8C STR W0, [X19 + 0xE4]
	0x01DA2C90 MOV X0, X19
	0x01DA2C94 LDP X20, X19, [X31 + 0x10]
	0x01DA2C98 MOV X1, X31
	0x01DA2C9C LDP X30, X21, [X31], #0x20
	0x01DA2CA0 B 0x1E74F04
	0x01DA2CA4 RET
	0x01DA2CA8 RET
	0x01DA2CAC STP X30, X19, [X31 - 0x10]!
	0x01DA2CB0 LDR X8, [X0 + 0x50]
	0x01DA2CB4 CBZ X8, 0x1DA2CCC
	0x01DA2CB8 LDR W8, [X8]
	0x01DA2CBC CMP W8, 0x0
	0x01DA2CC0 CSET W0, NE
	0x01DA2CC4 LDP X30, X19, [X31], #0x10
	0x01DA2CC8 RET
	0x01DA2CCC ADRP X0, 0x2351000
	0x01DA2CD0 LDR X0, [X0 + 0x5B0]
	0x01DA2CD4 BL 0x1C16D08
	0x01DA2CD8 BL 0x1C16F10
	0x01DA2CDC MOV X19, X0
	0x01DA2CE0 ADRP X0, 0x2355000
	0x01DA2CE4 LDR X0, [X0 + 0x298]
	0x01DA2CE8 BL 0x1C16D08
	0x01DA2CEC MOV X1, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2637000
	008 Move X21, 0x2355000
	009 Move W8, [X20+2677]
	010 Move X21, [X21+3000]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x2354000
	017 Move X0, [X0+1744]
	018 Call 0x1C17CF4
	019 Move X0, 0x2353000
	020 Move X0, [X0+3696]
	021 Call 0x1C17CF4
	022 Move X0, 0x2355000
	023 Move X0, [X0+3000]
	024 Call 0x1C17CF4
	025 Move X0, 0x2356000
	026 Move X0, [X0+648]
	027 Call 0x1C17CF4
	028 Move X0, 0x2356000
	029 Move X0, [X0+656]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+2677], W8
	033 Move X1, [X21]
	034 Move X0, X19
	035 Call 0x21A4894, X0
	036 Move X22, [X19+128]
	037 Move [X19+184], X0
	038 Compare X22, 0
	039 JumpIfEqual {110}
	040 Move X23, 0x2354000
	041 Move X23, [X23+1744]
	042 Move X21, 0x2356000
	043 Move X20, [X22+40]
	044 Move X0, [X23]
	045 Move X21, [X21+656]
	046 Call 0x1C17F10
	047 Move X2, [X21]
	048 Move X1, X19
	049 Move X3, X31
	050 Move X21, X0
	051 Call Action`1<Object>..ctor, X0, X1, X2
	052 Move X0, X20
	053 Move X1, X21
	054 Move X2, X31
	055 Call Delegate.Combine, X0, X1
	056 Compare X0, 0
	057 JumpIfEqual {73}
	058 Move X21, [X23]
	059 Move X20, X0
	060 Move X1, X21
	061 Call 0x1C17E00
	062 Compare X0, 0
	063 JumpIfEqual {71}
	064 Move [X22+40], X0
	065 Move X21, [X23]
	066 Move X0, X20
	067 Move X1, X21
	068 Call 0x1C17E00
	069 Compare X0, 0
	070 JumpIfNotEqual {74}
	071 Move X0, X20
	072 Move X1, X21
	073 Move [X22+40], X31
	074 Move X22, [X19+184]
	075 Compare X22, 0
	076 JumpIfEqual {110}
	077 Move X23, 0x2353000
	078 Move X23, [X23+3696]
	079 Move X21, 0x2356000
	080 Move X20, [X22+544]
	081 Move X0, [X23]
	082 Move X21, [X21+648]
	083 Call 0x1C17F10
	084 Move X2, [X21]
	085 Move X1, X19
	086 Move X3, X31
	087 Move X21, X0
	088 Call Action..ctor, X0, X1, X2
	089 Move X0, X20
	090 Move X1, X21
	091 Move X2, X31
	092 Call Delegate.Combine, X0, X1
	093 Compare X0, 0
	094 JumpIfEqual {102}
	095 Move X1, [X23]
	096 Move X8, [X0]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move [X22+544], X0
	099 Move X8, [X0]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Call 0x1C181E0
	102 Move [X22+544], X0
	103 Move X0, X19
	104 Move X20, [X31+32]
	105 Move X19, [X31+40]
	106 Move X22, [X31+16]
	107 Move X21, [X31+24]
	108 Move X30, [X31+48]
	109 Move X23, [X31+56]
	110 Call 0x1C17F20

Method: System.Void OnDestroy()

Disassembly:
	0x01DA2E08 MOV W3, W31
	0x01DA2E0C MOV X4, X31
	0x01DA2E10 MOV X20, X0
	0x01DA2E14 BL 0x3C21E6C
	0x01DA2E18 LDR X0, [X19 + 0x88]
	0x01DA2E1C STR X20, [X19 + 0xB8]
	0x01DA2E20 CBZ X0, 0x1DA2EF4
	0x01DA2E24 LDR X1, [X19 + 0xB0]
	0x01DA2E28 MOV X2, X31
	0x01DA2E2C BL 0x3C040F0
	0x01DA2E30 LDR X0, [X19 + 0x88]
	0x01DA2E34 CBZ X0, 0x1DA2EF4
	0x01DA2E38 ADRP X8, 0x2355000
	0x01DA2E3C LDR X8, [X8 + 0x2B8]
	0x01DA2E40 LDR X1, [X19 + 0x98]
	0x01DA2E44 MOV X3, X31
	0x01DA2E48 LDR X2, [X8]
	0x01DA2E4C BL 0x3C03D44
	0x01DA2E50 LDR X0, [X19 + 0x90]
	0x01DA2E54 CBZ X0, 0x1DA2EF4
	0x01DA2E58 MOV X1, X31
	0x01DA2E5C BL 0x3C1341C
	0x01DA2E60 CBZ X0, 0x1DA2EF4
	0x01DA2E64 LDR X1, [X19 + 0xB8]
	0x01DA2E68 MOV X2, X31
	0x01DA2E6C BL 0x3C14B6C
	0x01DA2E70 LDR X22, [X19 + 0x80]
	0x01DA2E74 CBZ X22, 0x1DA2EF4
	0x01DA2E78 ADRP X23, 0x2352000
	0x01DA2E7C LDR X23, [X23 + 0xE70]
	0x01DA2E80 ADRP X21, 0x2355000
	0x01DA2E84 LDR X20, [X22 + 0x1D0]
	0x01DA2E88 LDR X0, [X23]
	0x01DA2E8C LDR X21, [X21 + 0x2B0]
	0x01DA2E90 BL 0x1C16F10
	0x01DA2E94 LDR X2, [X21]
	0x01DA2E98 MOV X1, X19
	0x01DA2E9C MOV X3, X31
	0x01DA2EA0 MOV X21, X0
	0x01DA2EA4 BL 0x3314368
	0x01DA2EA8 MOV X0, X20
	0x01DA2EAC MOV X1, X21
	0x01DA2EB0 MOV X2, X31
	0x01DA2EB4 BL 0x33C0DE4
	0x01DA2EB8 CBZ X0, 0x1DA2EE0
	0x01DA2EBC LDR X1, [X23]
	0x01DA2EC0 LDR X8, [X0]
	0x01DA2EC4 CMP X8, X1
	0x01DA2EC8 B.NE 0x1DA2EDC
	0x01DA2ECC STR X0, [X22 + 0x1D0]
	0x01DA2ED0 LDR X8, [X0]
	0x01DA2ED4 CMP X8, X1
	0x01DA2ED8 B.EQ 0x1DA2EE4
	0x01DA2EDC BL 0x1C171E0
	0x01DA2EE0 STR X0, [X22 + 0x1D0]
	0x01DA2EE4 LDP X20, X19, [X31 + 0x20]
	0x01DA2EE8 LDP X22, X21, [X31 + 0x10]
	0x01DA2EEC LDP X30, X23, [X31], #0x30
	0x01DA2EF0 RET
	0x01DA2EF4 BL 0x1C16F20
	0x01DA2EF8 STP X30, X23, [X31 - 0x30]!
	0x01DA2EFC STP X22, X21, [X31 + 0x10]
	0x01DA2F00 STP X20, X19, [X31 + 0x20]
	0x01DA2F04 ADRP X20, 0x2636000
	0x01DA2F08 ADRP X21, 0x2354000
	0x01DA2F0C LDRB W8, [X20 + 0xA7C]
	0x01DA2F10 LDR X21, [X21 + 0xA78]
	0x01DA2F14 MOV X19, X0
	0x01DA2F18 TBNZ X8, 0x0, 0x1DA2F48
	0x01DA2F1C ADRP X0, 0x2352000
	0x01DA2F20 LDR X0, [X0 + 0xE70]
	0x01DA2F24 BL 0x1C16CF4
	0x01DA2F28 ADRP X0, 0x2354000
	0x01DA2F2C LDR X0, [X0 + 0xA78]
	0x01DA2F30 BL 0x1C16CF4
	0x01DA2F34 ADRP X0, 0x2355000
	0x01DA2F38 LDR X0, [X0 + 0x2B0]
	0x01DA2F3C BL 0x1C16CF4
	0x01DA2F40 MOVZ W8, 0x1
	0x01DA2F44 STRB W8, [X20 + 0xA7C]
	0x01DA2F48 LDR X0, [X21]
	0x01DA2F4C LDR W8, [X0 + 0xE0]
	0x01DA2F50 CBNZ W8, 0x1DA2F58
	0x01DA2F54 BL 0x1C16DFC
	0x01DA2F58 CBZ X19, 0x1DA2FEC
	0x01DA2F5C LDR W8, [X19 + 0x30]
	0x01DA2F60 LDR X22, [X19 + 0x80]
	0x01DA2F64 ORR W8, W8, 0x8
	0x01DA2F68 STR W8, [X19 + 0x30]
	0x01DA2F6C CBZ X22, 0x1DA2FEC
	0x01DA2F70 ADRP X23, 0x2352000
	0x01DA2F74 LDR X23, [X23 + 0xE70]
	0x01DA2F78 ADRP X21, 0x2355000
	0x01DA2F7C LDR X20, [X22 + 0x1D0]
	0x01DA2F80 LDR X0, [X23]
	0x01DA2F84 LDR X21, [X21 + 0x2B0]
	0x01DA2F88 BL 0x1C16F10
	0x01DA2F8C LDR X2, [X21]
	0x01DA2F90 MOV X1, X19
	0x01DA2F94 MOV X3, X31
	0x01DA2F98 MOV X21, X0
	0x01DA2F9C BL 0x3314368

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2637000
	008 Move X21, 0x2355000
	009 Move W8, [X20+2678]
	010 Move X21, [X21+2680]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x2354000
	017 Move X0, [X0+1744]
	018 Call 0x1C17CF4
	019 Move X0, 0x2353000
	020 Move X0, [X0+3696]
	021 Call 0x1C17CF4
	022 Move X0, 0x2355000
	023 Move X0, [X0+2680]
	024 Call 0x1C17CF4
	025 Move X0, 0x2356000
	026 Move X0, [X0+648]
	027 Call 0x1C17CF4
	028 Move X0, 0x2356000
	029 Move X0, [X0+656]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+2678], W8
	033 Move X0, [X21]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Compare X19, 0
	039 JumpIfEqual {116}
	040 Move W8, [X19+48]
	041 Move X22, [X19+128]
	042 Or W8, W8, 8
	043 Move [X19+48], W8
	044 Compare X22, 0
	045 JumpIfEqual {116}
	046 Move X23, 0x2354000
	047 Move X23, [X23+1744]
	048 Move X21, 0x2356000
	049 Move X20, [X22+40]
	050 Move X0, [X23]
	051 Move X21, [X21+656]
	052 Call 0x1C17F10
	053 Move X2, [X21]
	054 Move X1, X19
	055 Move X3, X31
	056 Move X21, X0
	057 Call Action`1<Object>..ctor, X0, X1, X2
	058 Move X0, X20
	059 Move X1, X21
	060 Move X2, X31
	061 Call Delegate.Remove, X0, X1
	062 Compare X0, 0
	063 JumpIfEqual {79}
	064 Move X21, [X23]
	065 Move X20, X0
	066 Move X1, X21
	067 Call 0x1C17E00
	068 Compare X0, 0
	069 JumpIfEqual {77}
	070 Move [X22+40], X0
	071 Move X21, [X23]
	072 Move X0, X20
	073 Move X1, X21
	074 Call 0x1C17E00
	075 Compare X0, 0
	076 JumpIfNotEqual {80}
	077 Move X0, X20
	078 Move X1, X21
	079 Move [X22+40], X31
	080 Move X22, [X19+184]
	081 Compare X22, 0
	082 JumpIfEqual {116}
	083 Move X23, 0x2353000
	084 Move X23, [X23+3696]
	085 Move X21, 0x2356000
	086 Move X20, [X22+544]
	087 Move X0, [X23]
	088 Move X21, [X21+648]
	089 Call 0x1C17F10
	090 Move X2, [X21]
	091 Move X1, X19
	092 Move X3, X31
	093 Move X21, X0
	094 Call Action..ctor, X0, X1, X2
	095 Move X0, X20
	096 Move X1, X21
	097 Move X2, X31
	098 Call Delegate.Remove, X0, X1
	099 Compare X0, 0
	100 JumpIfEqual {108}
	101 Move X1, [X23]
	102 Move X8, [X0]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move [X22+544], X0
	105 Move X8, [X0]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Call 0x1C181E0
	108 Move [X22+544], X0
	109 Move X20, [X31+32]
	110 Move X19, [X31+40]
	111 Move X22, [X31+16]
	112 Move X21, [X31+24]
	113 Move X30, [X31+48]
	114 Move X23, [X31+56]
	115 Return 
	116 Call 0x1C17F20

Method: System.Void HandleTriggerStay(UnityEngine.Collider collider)

Disassembly:
	0x01DA2FA0 MOV X0, X20
	0x01DA2FA4 MOV X1, X21
	0x01DA2FA8 MOV X2, X31
	0x01DA2FAC BL 0x33C0FDC
	0x01DA2FB0 CBZ X0, 0x1DA2FD8
	0x01DA2FB4 LDR X1, [X23]
	0x01DA2FB8 LDR X8, [X0]
	0x01DA2FBC CMP X8, X1
	0x01DA2FC0 B.NE 0x1DA2FD4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, X31
	005 Call Time.get_frameCount
	006 Move W8, 1
	007 Move [X19+204], W0
	008 Move [X19+212], W8
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return 

Method: System.Void OnCollisionEnter(UnityEngine.Collision collision)

Disassembly:
	0x01DA2FC4 STR X0, [X22 + 0x1D0]
	0x01DA2FC8 LDR X8, [X0]
	0x01DA2FCC CMP X8, X1
	0x01DA2FD0 B.EQ 0x1DA2FDC
	0x01DA2FD4 BL 0x1C171E0
	0x01DA2FD8 STR X0, [X22 + 0x1D0]
	0x01DA2FDC LDP X20, X19, [X31 + 0x20]
	0x01DA2FE0 LDP X22, X21, [X31 + 0x10]
	0x01DA2FE4 LDP X30, X23, [X31], #0x30
	0x01DA2FE8 RET
	0x01DA2FEC BL 0x1C16F20
	0x01DA2FF0 STP X30, X19, [X31 - 0x10]!
	0x01DA2FF4 MOV X1, X31
	0x01DA2FF8 MOV X19, X0
	0x01DA2FFC BL 0x1E73F88
	0x01DA3000 MOV X0, X19
	0x01DA3004 LDP X30, X19, [X31], #0x10
	0x01DA3008 B 0x1DA300C
	0x01DA300C STR X30, [X31 - 0x20]!
	0x01DA3010 STP X20, X19, [X31 + 0x10]
	0x01DA3014 LDR X20, [X0 + 0x88]
	0x01DA3018 MOV X19, X0
	0x01DA301C BL 0x1DA2CAC
	0x01DA3020 CBZ X20, 0x1DA308C
	0x01DA3024 AND W1, W0, 0x1
	0x01DA3028 MOV X0, X20
	0x01DA302C MOV X2, X31
	0x01DA3030 BL 0x3C32410
	0x01DA3034 MOV X0, X19
	0x01DA3038 BL 0x1DA2CAC
	0x01DA303C TBZ X0, 0x0, 0x1DA304C
	0x01DA3040 LDP X20, X19, [X31 + 0x10]
	0x01DA3044 LDR X30, [X31], #0x20
	0x01DA3048 RET
	0x01DA304C LDR X0, [X19 + 0xB8]
	0x01DA3050 MOV X1, X31
	0x01DA3054 BL 0x3C2085C
	0x01DA3058 FMOV S0, W31
	0x01DA305C FMOV S1, W31
	0x01DA3060 FMOV S2, W31
	0x01DA3064 FMOV S3, 1
	0x01DA3068 MOVZ W0, 0x1
	0x01DA306C MOVZ W1, 0x1
	0x01DA3070 MOV X2, X31
	0x01DA3074 BL 0x3C1041C
	0x01DA3078 LDP X20, X19, [X31 + 0x10]
	0x01DA307C MOV X0, X31
	0x01DA3080 MOV X1, X31
	0x01DA3084 LDR X30, [X31], #0x20
	0x01DA3088 B 0x3C2085C
	0x01DA308C BL 0x1C16F20
	0x01DA3090 STR X30, [X31 - 0x20]!
	0x01DA3094 STP X20, X19, [X31 + 0x10]
	0x01DA3098 ADRP X20, 0x2635000
	0x01DA309C LDRB W8, [X20 + 0xA7D]
	0x01DA30A0 MOV X19, X0
	0x01DA30A4 TBNZ X8, 0x0, 0x1DA30C8
	0x01DA30A8 ADRP X0, 0x2353000
	0x01DA30AC LDR X0, [X0 + 0xA78]
	0x01DA30B0 BL 0x1C16CF4
	0x01DA30B4 ADRP X0, 0x2354000
	0x01DA30B8 LDR X0, [X0 + 0x2C0]
	0x01DA30BC BL 0x1C16CF4
	0x01DA30C0 MOVZ W8, 0x1
	0x01DA30C4 STRB W8, [X20 + 0xA7D]
	0x01DA30C8 LDRB W8, [X19 + 0x58]
	0x01DA30CC CBZ W8, 0x1DA30F4
	0x01DA30D0 STRB W31, [X19 + 0x58]
	0x01DA30D4 MOV X0, X19
	0x01DA30D8 BL 0x1DA2CAC
	0x01DA30DC ORN W8, W31, W0, 0x0
	0x01DA30E0 MOV X0, X19
	0x01DA30E4 LDP X20, X19, [X31 + 0x10]
	0x01DA30E8 AND W1, W8, 0x1
	0x01DA30EC LDR X30, [X31], #0x20
	0x01DA30F0 B 0x1DA2D14
	0x01DA30F4 ADRP X20, 0x2353000
	0x01DA30F8 LDR X20, [X20 + 0xA78]
	0x01DA30FC LDR X0, [X20]
	0x01DA3100 LDR W8, [X0 + 0xE0]
	0x01DA3104 CBNZ W8, 0x1DA310C
	0x01DA3108 BL 0x1C16DFC
	0x01DA310C MOV X0, X19
	0x01DA3110 MOV X1, X31
	0x01DA3114 BL 0x1E77B08
	0x01DA3118 LDR X0, [X19 + 0x38]
	0x01DA311C CBZ X0, 0x1DA3220
	0x01DA3120 MOV X1, X31

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, X1
	010 Move X19, X0
	011 Call Pogostick.UpdateSpringDistance, X0
	012 Compare X20, 0
	013 JumpIfEqual {104}
	014 Move X0, X20
	015 Move X1, X31
	016 Call Collision.get_relativeVelocity, X0
	017 Move X21, 0x2637000
	018 Move W8, [X21+1925]
	019 Move V8, V0
	020 Move V9, V1
	021 Move V10, V2
	022 Compare W8, 0
	023 JumpIfNotEqual {29}
	024 Move X0, 0x2351000
	025 Move X0, [X0+1448]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+1925], W8
	029 Move X8, 0x2351000
	030 Move X8, [X8+1448]
	031 Move X0, [X8]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X8, -19628032
	037 Multiply S0, S8, S8
	038 Multiply S1, S9, S9
	039 Move V2, [X8+380]
	040 Add S0, S0, S1
	041 Multiply S1, S10, S10
	042 Add S0, S1, S0
	043 NotImplemented "Instruction FSQRT not yet implemented."
	044 NotImplemented "Instruction FCMP not yet implemented."
	045 NotImplemented "Instruction FDIV not yet implemented."
	046 NotImplemented "Instruction FDIV not yet implemented."
	047 NotImplemented "Instruction FDIV not yet implemented."
	048 Move X21, 0x2636000
	049 Move W8, [X21+1923]
	050 Compare W8, 0
	051 JumpIfNotEqual {57}
	052 Move X0, 0x2351000
	053 Move X0, [X0+1440]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X21+1923], W8
	057 Move X8, 0x2351000
	058 Move X8, [X8+1440]
	059 Move X8, [X8]
	060 Move X8, [X8+184]
	061 Move S11, [X8]
	062 Move S0, [X8+4]
	063 Move V8, [X8+8]
	064 Move X0, [X19+136]
	065 Compare X0, 0
	066 JumpIfEqual {104}
	067 Move X1, X31
	068 NotImplemented "Instruction FNEG not yet implemented."
	069 Call Transform.get_forward, X0
	070 Move X8, -19628032
	071 Move V3, [X8+188]
	072 Multiply S1, S1, S9
	073 Multiply S0, S11, S0
	074 Subtract S0, S1, S0
	075 Multiply S1, S8, S2
	076 Subtract S0, S0, S1
	077 NotImplemented "Instruction FCMP not yet implemented."
	078 Move X0, X20
	079 Move X1, X31
	080 Call Collision.get_relativeVelocity, X0
	081 Move X0, X19
	082 Move X20, [X31+48]
	083 Move X19, [X31+56]
	084 Move X30, [X31+32]
	085 Move X21, [X31+40]
	086 Move D9, [X31+16]
	087 Move D8, [X31+24]
	088 NotImplemented "Instruction FNEG not yet implemented."
	089 NotImplemented "Instruction FNEG not yet implemented."
	090 NotImplemented "Instruction FNEG not yet implemented."
	091 Move D11, [X31+64]
	092 Move D10, [X31+72]
	093 Call Pogostick.CalcCollisionBounce, X0, X1
	094 Return 
	095 Move X20, [X31+48]
	096 Move X19, [X31+56]
	097 Move X30, [X31+32]
	098 Move X21, [X31+40]
	099 Move D9, [X31+16]
	100 Move D8, [X31+24]
	101 Move D11, [X31+64]
	102 Move D10, [X31+72]
	103 Return 
	104 Call 0x1C17F20

Method: System.Void FixedUpdate()

Disassembly:
	0x01DA3334 LDRB W8, [X20 + 0xA7F]
	0x01DA3338 MOV X19, X0
	0x01DA333C TBNZ X8, 0x0, 0x1DA3354
	0x01DA3340 ADRP X0, 0x2354000
	0x01DA3344 LDR X0, [X0 + 0x2D0]
	0x01DA3348 BL 0x1C16CF4
	0x01DA334C MOVZ W8, 0x1
	0x01DA3350 STRB W8, [X20 + 0xA7F]
	0x01DA3354 CBZ X19, 0x1DA33AC
	0x01DA3358 ADRP X9, 0x2354000
	0x01DA335C LDR X9, [X9 + 0x2D0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, X31
	005 Call Time.get_frameCount
	006 Move W8, [X19+204]
	007 Subtract W8, W0, W8
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CSET not yet implemented."
	010 Move [X19+212], W8
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Return 

Method: System.Void Update()

Disassembly:
	0x01DA3360 MOVZ W8, 0x1
	0x01DA3364 STRB W8, [X19 + 0x58]
	0x01DA3368 LDR X8, [X19]
	0x01DA336C LDR X1, [X9]
	0x01DA3370 LDRB W10, [X8 + 0x130]
	0x01DA3374 LDRB W9, [X1 + 0x130]
	0x01DA3378 CMP W10, W9
	0x01DA337C B.CC 0x1DA33A4
	0x01DA3380 LDR X8, [X8 + 0xC8]
	0x01DA3384 ADD X8, X8, X9, 0x3, LSL
	0x01DA3388 LDUR X8, [X8 - 0x8]
	0x01DA338C CMP X8, X1
	0x01DA3390 B.NE 0x1DA33A4
	0x01DA3394 MOV X0, X19
	0x01DA3398 LDP X20, X19, [X31 + 0x10]
	0x01DA339C LDR X30, [X31], #0x20
	0x01DA33A0 B 0x1DA3090
	0x01DA33A4 MOV X0, X19
	0x01DA33A8 BL 0x1C171E0
	0x01DA33AC BL 0x1C16F20
	0x01DA33B0 STP X30, X23, [X31 - 0x30]!
	0x01DA33B4 STP X22, X21, [X31 + 0x10]
	0x01DA33B8 STP X20, X19, [X31 + 0x20]
	0x01DA33BC ADRP X20, 0x2635000
	0x01DA33C0 ADRP X21, 0x2353000
	0x01DA33C4 LDRB W8, [X20 + 0xA80]
	0x01DA33C8 LDR X21, [X21 + 0xBB8]
	0x01DA33CC MOV X19, X0
	0x01DA33D0 TBNZ X8, 0x0, 0x1DA3400
	0x01DA33D4 ADRP X0, 0x2351000
	0x01DA33D8 LDR X0, [X0 + 0xE70]
	0x01DA33DC BL 0x1C16CF4
	0x01DA33E0 ADRP X0, 0x2353000
	0x01DA33E4 LDR X0, [X0 + 0xBB8]
	0x01DA33E8 BL 0x1C16CF4
	0x01DA33EC ADRP X0, 0x2354000
	0x01DA33F0 LDR X0, [X0 + 0x2D8]
	0x01DA33F4 BL 0x1C16CF4
	0x01DA33F8 MOVZ W8, 0x1
	0x01DA33FC STRB W8, [X20 + 0xA80]
	0x01DA3400 LDR X1, [X21]
	0x01DA3404 MOV X0, X19
	0x01DA3408 BL 0x21A3894
	0x01DA340C STR X0, [X19 + 0x28]
	0x01DA3410 CBZ X0, 0x1DA3494
	0x01DA3414 ADRP X23, 0x2351000
	0x01DA3418 LDR X23, [X23 + 0xE70]
	0x01DA341C MOV X20, X0
	0x01DA3420 LDR X21, [X0 + 0x1D0]
	0x01DA3424 ADRP X22, 0x2354000
	0x01DA3428 LDR X0, [X23]
	0x01DA342C LDR X22, [X22 + 0x2D8]
	0x01DA3430 BL 0x1C16F10
	0x01DA3434 LDR X2, [X22]
	0x01DA3438 MOV X1, X19
	0x01DA343C MOV X3, X31
	0x01DA3440 MOV X22, X0
	0x01DA3444 BL 0x3314368
	0x01DA3448 MOV X0, X21
	0x01DA344C MOV X1, X22
	0x01DA3450 MOV X2, X31
	0x01DA3454 BL 0x33C0DE4
	0x01DA3458 CBZ X0, 0x1DA3480
	0x01DA345C LDR X1, [X23]
	0x01DA3460 LDR X8, [X0]
	0x01DA3464 CMP X8, X1
	0x01DA3468 B.NE 0x1DA347C
	0x01DA346C STR X0, [X20 + 0x1D0]
	0x01DA3470 LDR X8, [X0]
	0x01DA3474 CMP X8, X1
	0x01DA3478 B.EQ 0x1DA3484
	0x01DA347C BL 0x1C171E0
	0x01DA3480 STR X0, [X20 + 0x1D0]
	0x01DA3484 LDP X20, X19, [X31 + 0x20]
	0x01DA3488 LDP X22, X21, [X31 + 0x10]
	0x01DA348C LDP X30, X23, [X31], #0x30
	0x01DA3490 RET
	0x01DA3494 BL 0x1C16F20
	0x01DA3498 STP X30, X23, [X31 - 0x30]!
	0x01DA349C STP X22, X21, [X31 + 0x10]
	0x01DA34A0 STP X20, X19, [X31 + 0x20]
	0x01DA34A4 ADRP X20, 0x2635000
	0x01DA34A8 LDRB W8, [X20 + 0xA81]
	0x01DA34AC MOV X19, X0
	0x01DA34B0 TBNZ X8, 0x0, 0x1DA34D4
	0x01DA34B4 ADRP X0, 0x2351000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+213]
	006 Move X19, X0
	007 Compare W8, 0
	008 JumpIfEqual {14}
	009 Move W8, [X19+212]
	010 Compare W8, 0
	011 JumpIfEqual {13}
	012 Move W8, 1
	013 Move [X19+213], W31
	014 Move W9, [X19+214]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X0, [X19+64]
	017 Compare X0, 0
	018 JumpIfEqual {95}
	019 Move W8, [X0+96]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 2
	022 Compare TEMP, 2
	023 JumpIfEqual {95}
	024 Move X1, X31
	025 Call NetworkObject.get_HasStateAuthority, X0
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {95}
	030 Move X21, 0x2636000
	031 Move W8, [X21+1924]
	032 Move W20, [X19+213]
	033 Compare W8, 0
	034 JumpIfNotEqual {40}
	035 Move X0, 0x2351000
	036 Move X0, [X0+1448]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X21+1924], W8
	040 Move X8, 0x2351000
	041 Move X8, [X8+1448]
	042 Move X0, [X8]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Compare W20, 0
	048 JumpIfEqual {61}
	049 Move X20, [X19+152]
	050 Move X0, X19
	051 Move X1, X31
	052 Call Component.get_transform, X0
	053 Compare X0, 0
	054 JumpIfEqual {102}
	055 Move X1, X31
	056 Call Transform.get_position, X0
	057 Move S3, 1
	058 Move X0, X20
	059 Move X1, X31
	060 Call SFXManager.PlaySFXAsRPC, X0, X1, V0
	061 Move X20, [X19+160]
	062 Move X0, X19
	063 Move X1, X31
	064 Call Component.get_transform, X0
	065 Compare X0, 0
	066 JumpIfEqual {102}
	067 Move X1, X31
	068 Call Transform.get_position, X0
	069 Move S3, 1
	070 Move X0, X20
	071 Move X1, X31
	072 Call SFXManager.PlaySFXAsRPC, X0, X1, V0
	073 Move X20, 0x2636000
	074 Move W8, [X20+1923]
	075 Compare W8, 0
	076 JumpIfNotEqual {82}
	077 Move X0, 0x2351000
	078 Move X0, [X0+1440]
	079 Call 0x1C17CF4
	080 Move W8, 1
	081 Move [X20+1923], W8
	082 Move X8, 0x2351000
	083 Move X8, [X8+1440]
	084 Move X0, X19
	085 Move X8, [X8]
	086 Move X8, [X8+184]
	087 Move V0, [X8]
	088 Move V1, [X8+8]
	089 Move W8, 0x999A
	090 NotImplemented "Instruction MOVK not yet implemented."
	091 Move [X19+216], D0
	092 Move [X19+224], S1
	093 Move [X19+192], W8
	094 Call Pogostick.UpdateSpringVisual, X0
	095 Move W8, [X19+213]
	096 Move [X19+214], W8
	097 Move X20, [X31+16]
	098 Move X19, [X31+24]
	099 Move X30, [X31+32]
	100 Move X21, [X31+40]
	101 Return 
	102 Call 0x1C17F20

Method: System.Void HandleMovementUpdate()

Disassembly:
	0x01DA34B8 LDR X0, [X0 + 0xE70]

ISIL:
No ISIL was generated
Method: System.Void DoMoveUpdate()

Disassembly:
	0x01DA34BC BL 0x1C16CF4
	0x01DA34C0 ADRP X0, 0x2354000
	0x01DA34C4 LDR X0, [X0 + 0x2D8]
	0x01DA34C8 BL 0x1C16CF4
	0x01DA34CC MOVZ W8, 0x1
	0x01DA34D0 STRB W8, [X20 + 0xA81]
	0x01DA34D4 LDR X22, [X19 + 0x28]
	0x01DA34D8 CBZ X22, 0x1DA3558
	0x01DA34DC ADRP X23, 0x2351000
	0x01DA34E0 LDR X23, [X23 + 0xE70]
	0x01DA34E4 ADRP X21, 0x2354000
	0x01DA34E8 LDR X20, [X22 + 0x1D0]
	0x01DA34EC LDR X0, [X23]
	0x01DA34F0 LDR X21, [X21 + 0x2D8]
	0x01DA34F4 BL 0x1C16F10

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call Pogostick.UpdateSpringDistance, X0
	005 Move X0, X19
	006 Call Pogostick.UpdateSpringVisual, X0
	007 Move X8, -19628032
	008 Move V0, [X19+192]
	009 Move V1, [X8+1100]
	010 NotImplemented "Instruction FCMP not yet implemented."
	011 Move X0, X19
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Return 

Method: System.Void UpdateSpringVisual()

Disassembly:
	0x01DA2CF0 MOV X0, X19
	0x01DA2CF4 MOV X2, X31
	0x01DA2CF8 BL 0x337DF1C
	0x01DA2CFC ADRP X0, 0x2355000
	0x01DA2D00 LDR X0, [X0 + 0x2A0]
	0x01DA2D04 BL 0x1C16D08
	0x01DA2D08 MOV X1, X0
	0x01DA2D0C MOV X0, X19
	0x01DA2D10 BL 0x1C16DEC
	0x01DA2D14 STP X30, X19, [X31 - 0x10]!
	0x01DA2D18 LDR X8, [X0 + 0x50]
	0x01DA2D1C CBZ X8, 0x1DA2D30
	0x01DA2D20 AND W9, W1, 0x1
	0x01DA2D24 STR W9, [X8]
	0x01DA2D28 LDP X30, X19, [X31], #0x10
	0x01DA2D2C RET
	0x01DA2D30 ADRP X0, 0x2351000
	0x01DA2D34 LDR X0, [X0 + 0x5B0]
	0x01DA2D38 BL 0x1C16D08
	0x01DA2D3C BL 0x1C16F10
	0x01DA2D40 MOV X19, X0
	0x01DA2D44 ADRP X0, 0x2355000
	0x01DA2D48 LDR X0, [X0 + 0x298]
	0x01DA2D4C BL 0x1C16D08
	0x01DA2D50 MOV X1, X0
	0x01DA2D54 MOV X0, X19
	0x01DA2D58 MOV X2, X31
	0x01DA2D5C BL 0x337DF1C
	0x01DA2D60 ADRP X0, 0x2355000
	0x01DA2D64 LDR X0, [X0 + 0x2A8]
	0x01DA2D68 BL 0x1C16D08
	0x01DA2D6C MOV X1, X0
	0x01DA2D70 MOV X0, X19
	0x01DA2D74 BL 0x1C16DEC
	0x01DA2D78 STP X30, X23, [X31 - 0x30]!
	0x01DA2D7C STP X22, X21, [X31 + 0x10]
	0x01DA2D80 STP X20, X19, [X31 + 0x20]
	0x01DA2D84 ADRP X20, 0x2636000
	0x01DA2D88 ADRP X21, 0x2353000
	0x01DA2D8C LDRB W8, [X20 + 0xA7B]
	0x01DA2D90 LDR X21, [X21 + 0x130]
	0x01DA2D94 MOV X19, X0
	0x01DA2D98 TBNZ X8, 0x0, 0x1DA2DD4
	0x01DA2D9C ADRP X0, 0x2352000
	0x01DA2DA0 LDR X0, [X0 + 0xE70]
	0x01DA2DA4 BL 0x1C16CF4
	0x01DA2DA8 ADRP X0, 0x2353000
	0x01DA2DAC LDR X0, [X0 + 0x130]
	0x01DA2DB0 BL 0x1C16CF4
	0x01DA2DB4 ADRP X0, 0x2355000
	0x01DA2DB8 LDR X0, [X0 + 0x2B0]
	0x01DA2DBC BL 0x1C16CF4
	0x01DA2DC0 ADRP X0, 0x2355000
	0x01DA2DC4 LDR X0, [X0 + 0x2B8]
	0x01DA2DC8 BL 0x1C16CF4
	0x01DA2DCC MOVZ W8, 0x1
	0x01DA2DD0 STRB W8, [X20 + 0xA7B]
	0x01DA2DD4 LDR X0, [X21]
	0x01DA2DD8 BL 0x1C16F10
	0x01DA2DDC MOVZ W1, 0xF0
	0x01DA2DE0 MOVZ W2, 0x140
	0x01DA2DE4 MOVZ W3, 0x10
	0x01DA2DE8 MOV X4, X31
	0x01DA2DEC MOV X20, X0
	0x01DA2DF0 BL 0x3C21E6C
	0x01DA2DF4 STR X20, [X19 + 0xB0]
	0x01DA2DF8 LDR X0, [X21]
	0x01DA2DFC BL 0x1C16F10
	0x01DA2E00 MOVZ W1, 0xF0
	0x01DA2E04 MOVZ W2, 0x140

ISIL:
	001 Subtract X31, X31, 416
	002 Move [X31+384], X29
	003 Move [X31+400], X30
	004 Move [X31+408], X19
	005 Move X19, X0
	006 Move X0, [X0+144]
	007 Compare X0, 0
	008 JumpIfEqual {102}
	009 Move X8, -19623936
	010 Move V0, [X19+192]
	011 Move V1, [X8+860]
	012 Move X1, X31
	013 NotImplemented "Instruction FDIV not yet implemented."
	014 Move S0, 1
	015 Move S1, 1
	016 Call Transform.set_localScale, X0, X1
	017 Move X0, [X19+176]
	018 Compare X0, 0
	019 JumpIfEqual {102}
	020 Move X1, X31
	021 Call Component.get_transform, X0
	022 Compare X0, 0
	023 JumpIfEqual {102}
	024 Add X8, X31, 320
	025 Move X1, X31
	026 Call Transform.get_worldToLocalMatrix, X0
	027 Move V0, [X31+320]
	028 Move V1, [X31+336]
	029 Move V2, [X31+352]
	030 Move V3, [X31+368]
	031 Move [X31+256], V0
	032 Move [X31+264], V1
	033 Move [X31+288], V2
	034 Move [X31+296], V3
	035 Move X0, [X19+168]
	036 Compare X0, 0
	037 JumpIfEqual {102}
	038 Add X8, X31, 320
	039 Move X1, X31
	040 Call Transform.get_localToWorldMatrix, X0
	041 Move V0, [X31+320]
	042 Move V1, [X31+336]
	043 Move V2, [X31+352]
	044 Move V3, [X31+368]
	045 Add X8, X31, 192
	046 Add X0, X31, 128
	047 Move [X31+64], V0
	048 Move [X31+72], V1
	049 Move V0, [X31+256]
	050 Move V1, [X31+272]
	051 Move [X31+96], V2
	052 Move [X31+104], V3
	053 Move V2, [X31+288]
	054 Move V3, [X31+304]
	055 Add X1, X31, 64
	056 Move X2, X31
	057 Move [X31+128], V0
	058 Move [X31+136], V1
	059 Move [X31+160], V2
	060 Move [X31+168], V3
	061 Call Matrix4x4.op_Multiply, X0, X1
	062 Move V0, [X31+192]
	063 Move V1, [X31+208]
	064 Move V2, [X31+224]
	065 Move V3, [X31+240]
	066 Move [X31+320], V0
	067 Move [X31+328], V1
	068 Move [X31+352], V2
	069 Move [X31+360], V3
	070 Move X0, [X19+176]
	071 Compare X0, 0
	072 JumpIfEqual {102}
	073 Move X1, X31
	074 Call Renderer.get_material, X0
	075 Move W1, [X19+228]
	076 Move V0, [X31+320]
	077 Move V1, [X31+336]
	078 Move V2, [X31+352]
	079 Move V3, [X31+368]
	080 Move [X31+192], V0
	081 Move [X31+200], V1
	082 Move [X31+224], V2
	083 Move [X31+232], V3
	084 Compare X0, 0
	085 JumpIfEqual {102}
	086 Move V0, [X31+192]
	087 Move V1, [X31+208]
	088 Move V2, [X31+224]
	089 Move V3, [X31+240]
	090 Add X2, X31, 0
	091 Move X3, X31
	092 Move [X31], V0
	093 Move [X31+8], V1
	094 Move [X31+32], V2
	095 Move [X31+40], V3
	096 Call Material.SetMatrix, X0, X1, X2
	097 Move X30, [X31+400]
	098 Move X19, [X31+408]
	099 Move X29, [X31+384]
	100 Add X31, X31, 416
	101 Return 
	102 Call 0x1C17F20

Method: System.Void UpdateSpringDistance()

Disassembly:
	0x01DA3124 BL 0x1E9E538
	0x01DA3128 CMP W0, 0x4
	0x01DA312C B.NE 0x1DA313C
	0x01DA3130 LDP X20, X19, [X31 + 0x10]
	0x01DA3134 LDR X30, [X31], #0x20
	0x01DA3138 RET
	0x01DA313C LDR X0, [X19 + 0x40]
	0x01DA3140 CBZ X0, 0x1DA3220
	0x01DA3144 MOV X1, X31
	0x01DA3148 BL 0x1E94078
	0x01DA314C ANDS W31, W0, 0x7
	0x01DA3150 B.EQ 0x1DA31A8
	0x01DA3154 TBNZ X0, 0x0, 0x1DA30D4
	0x01DA3158 LDR X8, [X19 + 0x38]
	0x01DA315C CBZ X8, 0x1DA3220
	0x01DA3160 LDR X0, [X8 + 0x50]
	0x01DA3164 CBZ X0, 0x1DA3220
	0x01DA3168 MOV X1, X31
	0x01DA316C BL 0x1EC4D00
	0x01DA3170 TBZ X0, 0x0, 0x1DA3130
	0x01DA3174 LDR X8, [X19 + 0x38]
	0x01DA3178 CBZ X8, 0x1DA3220
	0x01DA317C LDR X0, [X8 + 0x50]
	0x01DA3180 MOVZ W1, 0x8
	0x01DA3184 MOV X2, X31
	0x01DA3188 BL 0x1ED9318
	0x01DA318C LDR X8, [X19 + 0x40]
	0x01DA3190 CBZ X8, 0x1DA3220
	0x01DA3194 LDR X8, [X8 + 0x20]
	0x01DA3198 MOV X20, X0
	0x01DA319C CBZ X8, 0x1DA31E0
	0x01DA31A0 LDR W0, [X8]
	0x01DA31A4 B 0x1DA31E4
	0x01DA31A8 LDR X0, [X20]
	0x01DA31AC LDR X19, [X19 + 0x40]
	0x01DA31B0 LDR W8, [X0 + 0xE0]
	0x01DA31B4 CBNZ W8, 0x1DA31BC
	0x01DA31B8 BL 0x1C16DFC
	0x01DA31BC ADRP X8, 0x2354000
	0x01DA31C0 LDR X8, [X8 + 0x2C0]
	0x01DA31C4 MOV X1, X19
	0x01DA31C8 LDP X20, X19, [X31 + 0x10]
	0x01DA31CC MOVZ W2, 0x7
	0x01DA31D0 LDR X0, [X8]
	0x01DA31D4 MOV X3, X31
	0x01DA31D8 LDR X30, [X31], #0x20
	0x01DA31DC B 0x1E77B00
	0x01DA31E0 MOV X0, X31
	0x01DA31E4 LDR W1, [X19 + 0x68]
	0x01DA31E8 MOVZ W2, 0x1
	0x01DA31EC MOV X3, X31
	0x01DA31F0 BL 0x1E9C23C
	0x01DA31F4 STUR X0, [X20 + 0x1C]
	0x01DA31F8 CBZ X20, 0x1DA3220
	0x01DA31FC MOVZ W8, 0x40
	0x01DA3200 STR W8, [X20 + 0xC]
	0x01DA3204 LDR X0, [X19 + 0x38]
	0x01DA3208 CBZ X0, 0x1DA3220
	0x01DA320C MOV X1, X20
	0x01DA3210 LDP X20, X19, [X31 + 0x10]
	0x01DA3214 MOV X2, X31
	0x01DA3218 LDR X30, [X31], #0x20
	0x01DA321C B 0x1EA1E24
	0x01DA3220 BL 0x1C16F20
	0x01DA3224 B 0x1DA3090
	0x01DA3228 STP X30, X21, [X31 - 0x20]!
	0x01DA322C STP X20, X19, [X31 + 0x10]
	0x01DA3230 ADRP X21, 0x2635000
	0x01DA3234 ADRP X20, 0x2350000
	0x01DA3238 LDRB W8, [X21 + 0xA7E]
	0x01DA323C LDR X20, [X20 + 0x598]
	0x01DA3240 MOV X19, X0
	0x01DA3244 TBNZ X8, 0x0, 0x1DA3268
	0x01DA3248 ADRP X0, 0x2354000
	0x01DA324C LDR X0, [X0 + 0x2C8]
	0x01DA3250 BL 0x1C16CF4
	0x01DA3254 ADRP X0, 0x2350000
	0x01DA3258 LDR X0, [X0 + 0x598]
	0x01DA325C BL 0x1C16CF4
	0x01DA3260 MOVZ W8, 0x1
	0x01DA3264 STRB W8, [X21 + 0xA7E]
	0x01DA3268 LDR X0, [X20]
	0x01DA326C LDR X20, [X19 + 0x40]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], D14
	003 Move [X31+64], D13
	004 Move [X31+72], D12
	005 Move [X31+80], D11
	006 Move [X31+88], D10
	007 Move [X31+96], D9
	008 Move [X31+104], D8
	009 Move [X31+112], X30
	010 Move [X31+120], X21
	011 Move [X31+128], X20
	012 Move [X31+136], X19
	013 Move X20, 0x2636000
	014 Move W8, [X20+2679]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x2351000
	021 Move X0, [X0+1496]
	022 Call 0x1C17CF4
	023 Move X0, 0x2351000
	024 Move X0, [X0+1528]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+2679], W8
	028 NotImplemented "Instruction MOVI not yet implemented."
	029 Move [X31+28], V0
	030 Move [X31], V0
	031 Move [X31+8], V0
	032 Move X0, [X19+136]
	033 Compare X0, 0
	034 JumpIfEqual {104}
	035 Move X1, X31
	036 Call Transform.get_position, X0
	037 Move X0, [X19+136]
	038 Compare X0, 0
	039 JumpIfEqual {104}
	040 Move X21, 0x2351000
	041 Move X20, 0x2351000
	042 Move X21, [X21+1496]
	043 Move X20, [X20+1528]
	044 Move X1, X31
	045 Move V8, V0
	046 Move V9, V1
	047 Move V10, V2
	048 Call Transform.get_forward, X0
	049 Move X0, [X21]
	050 Move V11, V0
	051 Move V12, V1
	052 Move V13, V2
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {58}
	056 Call 0x1C17DFC
	057 Move X0, [X21]
	058 Move X8, [X0+184]
	059 Move X1, X31
	060 Move W0, [X8+64]
	061 Call LayerMask.op_Implicit, X0
	062 Move X8, [X20]
	063 Move W20, W0
	064 Move W9, [X8+224]
	065 Compare W9, 0
	066 JumpIfNotEqual {69}
	067 Move X0, X8
	068 Call 0x1C17DFC
	069 Move X8, -19628032
	070 Move V14, [X8+1100]
	071 Add X0, X31, 0
	072 Move V0, V8
	073 Move V1, V9
	074 Move V2, V10
	075 Move V3, V11
	076 Move V4, V12
	077 Move V5, V13
	078 Move V6, V14
	079 Move W1, W20
	080 Move X2, X31
	081 Call Physics.Raycast, X0, X1, X2, V0, X3
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {90}
	086 Add X0, X31, 0
	087 Move X1, X31
	088 Call RaycastHit.get_distance, X0
	089 Move V14, V0
	090 Move [X19+192], S14
	091 Move X20, [X31+128]
	092 Move X19, [X31+136]
	093 Move X30, [X31+112]
	094 Move X21, [X31+120]
	095 Move D9, [X31+96]
	096 Move D8, [X31+104]
	097 Move D11, [X31+80]
	098 Move D10, [X31+88]
	099 Move D13, [X31+64]
	100 Move D12, [X31+72]
	101 Move V14, [X31+48]
	102 Add X31, X31, 144
	103 Return 
	104 Call 0x1C17F20

Method: System.Boolean TryCalculateApplyVelocity(UnityEngine.Vector3 inputVelocity, out UnityEngine.Vector3 counterVelocity)

Disassembly:
	0x01DA38AC LDR X19, [X19 + 0x5F8]
	0x01DA38B0 LDR X23, [X23 + 0xF70]
	0x01DA38B4 LDR X21, [X21 + 0x2E8]
	0x01DA38B8 LDR X22, [X22 + 0xF68]
	0x01DA38BC MOV X1, X31
	0x01DA38C0 BL 0x3C3F58C
	0x01DA38C4 LDR W0, [X20 + 0x28]
	0x01DA38C8 MOV X1, X31
	0x01DA38CC MOV V8.16B, V0.16B
	0x01DA38D0 MOV V9.16B, V1.16B
	0x01DA38D4 MOV V10.16B, V2.16B
	0x01DA38D8 BL 0x3C35CB8
	0x01DA38DC LDR X8, [X19]
	0x01DA38E0 MOV W19, W0
	0x01DA38E4 LDR W9, [X8 + 0xE0]
	0x01DA38E8 CBNZ W9, 0x1DA38F4
	0x01DA38EC MOV X0, X8
	0x01DA38F0 BL 0x1C16DFC
	0x01DA38F4 FMOV S3, 0.25
	0x01DA38F8 MOV V0.16B, V8.16B
	0x01DA38FC MOV V1.16B, V9.16B
	0x01DA3900 MOV V2.16B, V10.16B
	0x01DA3904 MOV W0, W19
	0x01DA3908 MOV X1, X31
	0x01DA390C BL 0x3C8D090
	0x01DA3910 LDR X8, [X23]
	0x01DA3914 MOV X19, X0
	0x01DA3918 MOV X0, X8
	0x01DA391C BL 0x1C16F10
	0x01DA3920 LDR X2, [X21]
	0x01DA3924 MOV X1, X20
	0x01DA3928 MOV X3, X31
	0x01DA392C MOV X21, X0
	0x01DA3930 BL 0x295A080
	0x01DA3934 LDR X2, [X22]
	0x01DA3938 MOV X0, X19
	0x01DA393C MOV X1, X21
	0x01DA3940 BL 0x2157D70
	0x01DA3944 CBZ X19, 0x1DA3A44
	0x01DA3948 LDR W8, [X19 + 0x18]
	0x01DA394C CMP W8, 0x0
	0x01DA3950 CSET W22, GT
	0x01DA3954 CMP W8, 0x1
	0x01DA3958 B.LT 0x1DA3A24
	0x01DA395C ADRP X24, 0x2350000
	0x01DA3960 ADRP X25, 0x2354000
	0x01DA3964 LDR X24, [X24 + 0x598]
	0x01DA3968 LDR X25, [X25 + 0x2F0]
	0x01DA396C MOV W23, W31
	0x01DA3970 CMP W23, W8
	0x01DA3974 B.CS 0x1DA3A48
	0x01DA3978 ADD X8, X19, W23, 0x3, SXTW
	0x01DA397C LDR X20, [X8 + 0x20]
	0x01DA3980 CBZ X20, 0x1DA3A44
	0x01DA3984 MOV X0, X20
	0x01DA3988 MOV X1, X31
	0x01DA398C BL 0x3C8E82C
	0x01DA3990 LDR X8, [X24]
	0x01DA3994 MOV X21, X0
	0x01DA3998 LDR W9, [X8 + 0xE0]
	0x01DA399C CBNZ W9, 0x1DA39A8
	0x01DA39A0 MOV X0, X8
	0x01DA39A4 BL 0x1C16DFC
	0x01DA39A8 MOV X0, X21
	0x01DA39AC MOV X1, X31
	0x01DA39B0 MOV X2, X31
	0x01DA39B4 BL 0x3C354F8
	0x01DA39B8 MOV X21, X31
	0x01DA39BC TBZ X0, 0x0, 0x1DA39DC
	0x01DA39C0 MOV X0, X20
	0x01DA39C4 MOV X1, X31
	0x01DA39C8 BL 0x3C8E82C
	0x01DA39CC CBZ X0, 0x1DA3A44
	0x01DA39D0 LDR X1, [X25]
	0x01DA39D4 BL 0x21A3894
	0x01DA39D8 MOV X21, X0
	0x01DA39DC LDR X0, [X24]
	0x01DA39E0 LDR W8, [X0 + 0xE0]
	0x01DA39E4 CBNZ W8, 0x1DA39EC
	0x01DA39E8 BL 0x1C16DFC
	0x01DA39EC MOV X0, X21
	0x01DA39F0 MOV X1, X31
	0x01DA39F4 MOV X2, X31
	0x01DA39F8 BL 0x3C354F8
	0x01DA39FC TBNZ X0, 0x0, 0x1DA3A18
	0x01DA3A00 LDR W8, [X19 + 0x18]
	0x01DA3A04 ADD W23, W23, 0x1
	0x01DA3A08 CMP W23, W8
	0x01DA3A0C CSET W22, LT
	0x01DA3A10 B.LT 0x1DA3970
	0x01DA3A14 B 0x1DA3A24
	0x01DA3A18 CBZ X21, 0x1DA3A44
	0x01DA3A1C MOV X0, X21
	0x01DA3A20 BL 0x1DA4948
	0x01DA3A24 AND W0, W22, 0x1
	0x01DA3A28 LDP X20, X19, [X31 + 0x50]
	0x01DA3A2C LDP X22, X21, [X31 + 0x40]
	0x01DA3A30 LDP X24, X23, [X31 + 0x30]
	0x01DA3A34 LDP X30, X25, [X31 + 0x20]
	0x01DA3A38 LDP D9, D8, [X31 + 0x10]
	0x01DA3A3C LDR V10, [X31], #0x60
	0x01DA3A40 RET
	0x01DA3A44 BL 0x1C16F20
	0x01DA3A48 BL 0x1C16F28
	0x01DA3A4C B 0x1DA4948
	0x01DA3A50 MOV X1, X31
	0x01DA3A54 B 0x3C36C30
	0x01DA3A58 STP D13, D12, [X31 - 0x60]!
	0x01DA3A5C STP D11, D10, [X31 + 0x10]
	0x01DA3A60 STP D9, D8, [X31 + 0x20]
	0x01DA3A64 STR X30, [X31 + 0x30]
	0x01DA3A68 STP X22, X21, [X31 + 0x40]
	0x01DA3A6C STP X20, X19, [X31 + 0x50]
	0x01DA3A70 CBZ X1, 0x1DA3BE8
	0x01DA3A74 MOV X19, X0
	0x01DA3A78 MOV X0, X1
	0x01DA3A7C MOV X1, X31
	0x01DA3A80 MOV X20, X2
	0x01DA3A84 BL 0x3C32E90
	0x01DA3A88 CBZ X0, 0x1DA3BE8
	0x01DA3A8C MOV X1, X31
	0x01DA3A90 BL 0x3C3F58C
	0x01DA3A94 MOV X0, X19
	0x01DA3A98 MOV X1, X31
	0x01DA3A9C MOV V8.16B, V0.16B
	0x01DA3AA0 MOV V9.16B, V1.16B
	0x01DA3AA4 MOV V10.16B, V2.16B
	0x01DA3AA8 BL 0x3C32E90
	0x01DA3AAC CBZ X0, 0x1DA3BE8
	0x01DA3AB0 MOV X1, X31
	0x01DA3AB4 BL 0x3C3F58C
	0x01DA3AB8 ADRP X21, 0x2635000
	0x01DA3ABC LDRB W8, [X21 + 0x85C]
	0x01DA3AC0 MOV V11.16B, V0.16B
	0x01DA3AC4 MOV V12.16B, V1.16B

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], D14
	003 Move [X31+24], D13
	004 Move [X31+32], D12
	005 Move [X31+40], D11
	006 Move [X31+48], D10
	007 Move [X31+56], D9
	008 Move [X31+64], D8
	009 Move [X31+72], X30
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X8, -19628032
	015 Move V11, [X0+192]
	016 Move V12, [X8+1100]
	017 Move X19, X1
	018 NotImplemented "Instruction FCMP not yet implemented."
	019 Move X21, 0x2636000
	020 Move W8, [X21+1925]
	021 Move V8, V2
	022 Move V9, V1
	023 Move X20, X0
	024 Move V10, V0
	025 Compare W8, 0
	026 JumpIfNotEqual {32}
	027 Move X0, 0x2351000
	028 Move X0, [X0+1448]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+1925], W8
	032 Move X21, 0x2351000
	033 Move X21, [X21+1448]
	034 Move X0, [X21]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Multiply S0, S10, S10
	040 Multiply S1, S9, S9
	041 Move X8, -19628032
	042 Add S0, S0, S1
	043 Move V1, [X8+380]
	044 Multiply S2, S8, S8
	045 Add S0, S2, S0
	046 NotImplemented "Instruction FSQRT not yet implemented."
	047 NotImplemented "Instruction FCMP not yet implemented."
	048 NotImplemented "Instruction FDIV not yet implemented."
	049 NotImplemented "Instruction FDIV not yet implemented."
	050 NotImplemented "Instruction FDIV not yet implemented."
	051 Move X20, 0x2636000
	052 Move W8, [X20+1923]
	053 Compare W8, 0
	054 JumpIfNotEqual {60}
	055 Move X0, 0x2351000
	056 Move X0, [X0+1440]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X20+1923], W8
	060 Move X8, 0x2351000
	061 Move X8, [X8+1440]
	062 Move X8, [X8]
	063 Move X8, [X8+184]
	064 Move V0, [X8]
	065 Move V1, [X8+8]
	066 Move X22, 0x2636000
	067 Move W8, [X22+1923]
	068 Compare W8, 0
	069 JumpIfNotEqual {75}
	070 Move X0, 0x2351000
	071 Move X0, [X0+1440]
	072 Call 0x1C17CF4
	073 Move W8, 1
	074 Move [X22+1923], W8
	075 Move X8, 0x2351000
	076 Move X8, [X8+1440]
	077 Move X8, [X8]
	078 Move X8, [X8+184]
	079 Move S10, [X8]
	080 Move S9, [X8+4]
	081 Move V8, [X8+8]
	082 Move X0, [X20+136]
	083 Compare X0, 0
	084 JumpIfEqual {150}
	085 Move X1, X31
	086 Call Transform.get_forward, X0
	087 Move V3, [X20+192]
	088 Move X22, 0x2636000
	089 Multiply S0, S10, S0
	090 Multiply S1, S9, S1
	091 Move W8, [X22+1924]
	092 Multiply S2, S8, S2
	093 Add S0, S0, S1
	094 Add S9, S2, S0
	095 Subtract S0, S12, S3
	096 Move S8, W31
	097 NotImplemented "Instruction FDIV not yet implemented."
	098 Move S14, 3
	099 Compare W8, 0
	100 JumpIfNotEqual {106}
	101 Move X0, 0x2351000
	102 Move X0, [X0+1448]
	103 Call 0x1C17CF4
	104 Move W8, 1
	105 Move [X22+1924], W8
	106 Move X0, [X21]
	107 NotImplemented "Instruction FMAX not yet implemented."
	108 Multiply S8, S10, S14
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 Multiply S0, S13, S9
	114 Move S1, 0.25
	115 Move X0, [X20+136]
	116 Multiply S0, S0, S1
	117 Move S1, 10
	118 NotImplemented "Instruction FMINNM not yet implemented."
	119 NotImplemented "Instruction FCMP not yet implemented."
	120 NotImplemented "Instruction FCSEL not yet implemented."
	121 Move [X31], V0
	122 Compare X0, 0
	123 JumpIfEqual {150}
	124 Move X1, X31
	125 Call Transform.get_forward, X0
	126 NotImplemented "Instruction FNEG not yet implemented."
	127 Move V0.S[1], V1.S[0]
	128 Move V1, [X31]
	129 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	130 NotImplemented "Instruction INVALID not yet implemented."
	131 Multiply S1, S1, S2
	132 NotImplemented "Instruction FCMP not yet implemented."
	133 Move [X19], D0
	134 Move [X19+8], S1
	135 Move X20, [X31+96]
	136 Move X19, [X31+104]
	137 Move X22, [X31+80]
	138 Move X21, [X31+88]
	139 Move X30, [X31+72]
	140 Move D9, [X31+56]
	141 Move D8, [X31+64]
	142 Move D11, [X31+40]
	143 Move D10, [X31+48]
	144 Move D13, [X31+24]
	145 Move D12, [X31+32]
	146 Move V14, [X31+16]
	147 NotImplemented "Instruction CSET not yet implemented."
	148 Add X31, X31, 112
	149 Return X0
	150 Call 0x1C17F20

Method: System.Boolean TryGetItemToApplyTo(out AnimalCompany.GrabbableItem itemToApplyTo)

Disassembly:
	0x01DA3AC8 MOV V13.16B, V2.16B
	0x01DA3ACC CBNZ W8, 0x1DA3AE4
	0x01DA3AD0 ADRP X0, 0x2350000
	0x01DA3AD4 LDR X0, [X0 + 0x5A8]
	0x01DA3AD8 BL 0x1C16CF4
	0x01DA3ADC MOVZ W8, 0x1
	0x01DA3AE0 STRB W8, [X21 + 0x85C]
	0x01DA3AE4 ADRP X22, 0x2350000
	0x01DA3AE8 LDR X22, [X22 + 0x5A8]
	0x01DA3AEC FSUB S11, S8, S11
	0x01DA3AF0 FSUB S9, S9, S12
	0x01DA3AF4 FSUB S8, S10, S13
	0x01DA3AF8 LDR X0, [X22]
	0x01DA3AFC LDR W8, [X0 + 0xE0]
	0x01DA3B00 CBNZ W8, 0x1DA3B08
	0x01DA3B04 BL 0x1C16DFC
	0x01DA3B08 FMUL S0, S11, S11
	0x01DA3B0C FMUL S1, S9, S9
	0x01DA3B10 FADD S0, S0, S1
	0x01DA3B14 FMUL S1, S8, S8
	0x01DA3B18 FADD S0, S1, S0
	0x01DA3B1C FSQRT S0, S0
	0x01DA3B20 STR S0, [X31 + 0x3C]
	0x01DA3B24 CBZ X20, 0x1DA3BE8
	0x01DA3B28 MOV X0, X20
	0x01DA3B2C MOV X1, X31
	0x01DA3B30 BL 0x3C32E90
	0x01DA3B34 CBZ X0, 0x1DA3BE8
	0x01DA3B38 MOV X1, X31
	0x01DA3B3C BL 0x3C3F58C
	0x01DA3B40 MOV X0, X19
	0x01DA3B44 MOV X1, X31
	0x01DA3B48 MOV V8.16B, V0.16B
	0x01DA3B4C MOV V9.16B, V1.16B
	0x01DA3B50 MOV V10.16B, V2.16B
	0x01DA3B54 BL 0x3C32E90
	0x01DA3B58 CBZ X0, 0x1DA3BE8
	0x01DA3B5C MOV X1, X31
	0x01DA3B60 BL 0x3C3F58C
	0x01DA3B64 LDRB W8, [X21 + 0x85C]
	0x01DA3B68 MOV V11.16B, V0.16B
	0x01DA3B6C MOV V12.16B, V1.16B
	0x01DA3B70 MOV V13.16B, V2.16B
	0x01DA3B74 CBNZ W8, 0x1DA3B8C
	0x01DA3B78 ADRP X0, 0x2350000
	0x01DA3B7C LDR X0, [X0 + 0x5A8]
	0x01DA3B80 BL 0x1C16CF4
	0x01DA3B84 MOVZ W8, 0x1
	0x01DA3B88 STRB W8, [X21 + 0x85C]
	0x01DA3B8C LDR X0, [X22]
	0x01DA3B90 FSUB S11, S8, S11
	0x01DA3B94 FSUB S9, S9, S12
	0x01DA3B98 FSUB S8, S10, S13
	0x01DA3B9C LDR W8, [X0 + 0xE0]
	0x01DA3BA0 CBNZ W8, 0x1DA3BA8
	0x01DA3BA4 BL 0x1C16DFC
	0x01DA3BA8 FMUL S0, S11, S11
	0x01DA3BAC FMUL S1, S9, S9
	0x01DA3BB0 FADD S0, S0, S1
	0x01DA3BB4 FMUL S1, S8, S8
	0x01DA3BB8 FADD S0, S1, S0
	0x01DA3BBC FSQRT S0, S0
	0x01DA3BC0 ADD X0, X31, 0x3C
	0x01DA3BC4 MOV X1, X31
	0x01DA3BC8 BL 0x338FCB8
	0x01DA3BCC LDP X20, X19, [X31 + 0x50]
	0x01DA3BD0 LDP X22, X21, [X31 + 0x40]
	0x01DA3BD4 LDR X30, [X31 + 0x30]
	0x01DA3BD8 LDP D9, D8, [X31 + 0x20]
	0x01DA3BDC LDP D11, D10, [X31 + 0x10]
	0x01DA3BE0 LDP D13, D12, [X31], #0x60
	0x01DA3BE4 RET
	0x01DA3BE8 BL 0x1C16F20
	0x01DA3BEC STP X30, X19, [X31 - 0x10]!
	0x01DA3BF0 LDR X8, [X0 + 0x50]
	0x01DA3BF4 CBZ X8, 0x1DA3C04
	0x01DA3BF8 LDR W0, [X8]
	0x01DA3BFC LDP X30, X19, [X31], #0x10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2636000
	007 Move W8, [X21+2680]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2351000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2680], W8
	019 Move X8, [X20+184]
	020 Move [X19], X8
	021 Move X8, [X20+184]
	022 Compare X8, 0
	023 JumpIfEqual {102}
	024 Move X22, 0x2351000
	025 Move X22, [X22+1432]
	026 Move X21, [X8+336]
	027 Move X0, [X22]
	028 Move W9, [X0+224]
	029 Compare W9, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X21
	033 Move X1, X31
	034 Move X2, X31
	035 Call Object.op_Inequality, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {94}
	040 Move X8, [X20+184]
	041 Compare X8, 0
	042 JumpIfEqual {102}
	043 Move X8, [X8+336]
	044 Compare X8, 0
	045 JumpIfEqual {102}
	046 Move W9, [X8+128]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X0, [X22]
	049 Move X21, [X8+200]
	050 Move W9, [X0+224]
	051 Compare W9, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, X21
	055 Move X1, X31
	056 Move X2, X31
	057 Call Object.op_Inequality, X0, X1
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {94}
	062 Move X8, [X20+184]
	063 Compare X8, 0
	064 JumpIfEqual {102}
	065 Move X8, [X8+336]
	066 Compare X8, 0
	067 JumpIfEqual {102}
	068 Move X8, [X8+200]
	069 Compare X8, 0
	070 JumpIfEqual {102}
	071 Move X0, [X22]
	072 Move X21, [X8+336]
	073 Move W9, [X0+224]
	074 Compare W9, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X0, X21
	078 Move X1, X31
	079 Move X2, X31
	080 Call Object.op_Inequality, X0, X1
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {94}
	085 Move X8, [X20+184]
	086 Compare X8, 0
	087 JumpIfEqual {102}
	088 Move X8, [X8+336]
	089 Compare X8, 0
	090 JumpIfEqual {102}
	091 Move X8, [X8+200]
	092 Move W0, W31
	093 Move [X19], X8
	094 Move W0, 1
	095 Move W0, W31
	096 Move X20, [X31+32]
	097 Move X19, [X31+40]
	098 Move X22, [X31+16]
	099 Move X21, [X31+24]
	100 Move X30, [X31+48]
	101 Return X0
	102 Call 0x1C17F20

Method: System.Void CalcCollisionBounce(UnityEngine.Vector3 relativeVelocity)

Disassembly:
	0x01DA3270 LDR W8, [X0 + 0xE0]
	0x01DA3274 CBNZ W8, 0x1DA327C
	0x01DA3278 BL 0x1C16DFC
	0x01DA327C MOV X0, X20
	0x01DA3280 MOV X1, X31
	0x01DA3284 MOV X2, X31
	0x01DA3288 BL 0x3C354F8
	0x01DA328C TBZ X0, 0x0, 0x1DA32EC
	0x01DA3290 LDR X0, [X19 + 0x40]
	0x01DA3294 CBZ X0, 0x1DA32F8
	0x01DA3298 MOV X1, X31
	0x01DA329C BL 0x1E934B8
	0x01DA32A0 TBZ X0, 0x0, 0x1DA32EC
	0x01DA32A4 MOV X0, X19
	0x01DA32A8 BL 0x1DA2CAC
	0x01DA32AC TBZ X0, 0x0, 0x1DA32EC
	0x01DA32B0 ADRP X8, 0x2354000
	0x01DA32B4 LDR X8, [X8 + 0x2C8]
	0x01DA32B8 LDP X21, X20, [X19 + 0xB0]
	0x01DA32BC LDR X19, [X19 + 0xA0]
	0x01DA32C0 LDR X0, [X8]
	0x01DA32C4 LDR W8, [X0 + 0xE0]
	0x01DA32C8 CBNZ W8, 0x1DA32D0
	0x01DA32CC BL 0x1C16DFC
	0x01DA32D0 MOV X1, X20
	0x01DA32D4 MOV X2, X19
	0x01DA32D8 LDP X20, X19, [X31 + 0x10]
	0x01DA32DC MOV X0, X21
	0x01DA32E0 MOV X3, X31
	0x01DA32E4 LDP X30, X21, [X31], #0x20
	0x01DA32E8 B 0x3C0F7FC
	0x01DA32EC LDP X20, X19, [X31 + 0x10]
	0x01DA32F0 LDP X30, X21, [X31], #0x20
	0x01DA32F4 RET
	0x01DA32F8 BL 0x1C16F20
	0x01DA32FC MOV X1, X31
	0x01DA3300 B 0x1E74F04
	0x01DA3304 LDRB W1, [X0 + 0xA8]
	0x01DA3308 B 0x1DA2D14
	0x01DA330C STP X30, X19, [X31 - 0x10]!
	0x01DA3310 MOV X19, X0
	0x01DA3314 BL 0x1DA2CAC
	0x01DA3318 AND W8, W0, 0x1
	0x01DA331C STRB W8, [X19 + 0xA8]
	0x01DA3320 LDP X30, X19, [X31], #0x10
	0x01DA3324 RET
	0x01DA3328 STR X30, [X31 - 0x20]!
	0x01DA332C STP X20, X19, [X31 + 0x10]
	0x01DA3330 ADRP X20, 0x2635000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], D10
	003 Move [X31+40], D9
	004 Move [X31+48], D8
	005 Move [X31+56], X30
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Add X1, X31, 24
	009 Move V8, V2
	010 Move V9, V1
	011 Move V10, V0
	012 Move X19, X0
	013 Move [X31+24], X31
	014 Move [X31+16], W31
	015 Move [X31+8], X31
	016 Call Pogostick.TryGetItemToApplyTo, X0, X1
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {60}
	021 Move X20, [X31+24]
	022 Compare X20, 0
	023 JumpIfEqual {68}
	024 Move X0, [X20+64]
	025 Compare X0, 0
	026 JumpIfEqual {60}
	027 Move W8, [X0+96]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 2
	030 Compare TEMP, 2
	031 JumpIfEqual {60}
	032 Move X1, X31
	033 Call NetworkObject.get_HasStateAuthority, X0
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {60}
	038 Add X1, X31, 8
	039 Move X0, X19
	040 Move V0, V10
	041 Move V1, V9
	042 Move V2, V8
	043 Call Pogostick.TryCalculateApplyVelocity, X0, X1, X2
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {60}
	048 Move S0, [X31+8]
	049 Move S1, [X31+12]
	050 Move V2, [X31+16]
	051 Move X0, X20
	052 Move X1, X31
	053 Call GrabbableItem.AddExternalForce, X0, X1
	054 Move W8, [X31+16]
	055 Move X9, [X31+8]
	056 Move W10, 1
	057 Move [X19+213], W10
	058 Move [X19+224], W8
	059 Move [X19+216], X9
	060 Move X20, [X31+64]
	061 Move X19, [X31+72]
	062 Move X30, [X31+56]
	063 Move D9, [X31+40]
	064 Move D8, [X31+48]
	065 Move V10, [X31+32]
	066 Add X31, X31, 80
	067 Return 
	068 Call 0x1C17F20

Method: System.Void CalcHeldBounce()

Disassembly:
	0x01DA34F8 LDR X2, [X21]
	0x01DA34FC MOV X1, X19
	0x01DA3500 MOV X3, X31
	0x01DA3504 MOV X21, X0
	0x01DA3508 BL 0x3314368
	0x01DA350C MOV X0, X20
	0x01DA3510 MOV X1, X21
	0x01DA3514 MOV X2, X31
	0x01DA3518 BL 0x33C0FDC
	0x01DA351C CBZ X0, 0x1DA3544
	0x01DA3520 LDR X1, [X23]
	0x01DA3524 LDR X8, [X0]
	0x01DA3528 CMP X8, X1
	0x01DA352C B.NE 0x1DA3540
	0x01DA3530 STR X0, [X22 + 0x1D0]
	0x01DA3534 LDR X8, [X0]
	0x01DA3538 CMP X8, X1
	0x01DA353C B.EQ 0x1DA3548
	0x01DA3540 BL 0x1C171E0
	0x01DA3544 STR X0, [X22 + 0x1D0]
	0x01DA3548 LDP X20, X19, [X31 + 0x20]
	0x01DA354C LDP X22, X21, [X31 + 0x10]
	0x01DA3550 LDP X30, X23, [X31], #0x30
	0x01DA3554 RET
	0x01DA3558 BL 0x1C16F20
	0x01DA355C STR X30, [X31 - 0x20]!
	0x01DA3560 STP X20, X19, [X31 + 0x10]
	0x01DA3564 MOV X19, X0
	0x01DA3568 MOV X0, X31
	0x01DA356C BL 0x3C3C6C4
	0x01DA3570 LDR V1, [X19 + 0x30]
	0x01DA3574 FSUB S0, S0, S1
	0x01DA3578 FMOV S1, 0.5
	0x01DA357C FCMP S0, S1
	0x01DA3580 B.LE 0x1DA35BC
	0x01DA3584 LDR X20, [X19 + 0x20]
	0x01DA3588 MOV X0, X19
	0x01DA358C MOV X1, X31
	0x01DA3590 BL 0x3C32E90
	0x01DA3594 CBZ X0, 0x1DA35C8
	0x01DA3598 MOV X1, X31
	0x01DA359C BL 0x3C3F58C
	0x01DA35A0 FMOV S3, 1
	0x01DA35A4 MOV X0, X20
	0x01DA35A8 MOV X1, X31
	0x01DA35AC BL 0x1DC15C4
	0x01DA35B0 MOV X0, X31
	0x01DA35B4 BL 0x3C3C6C4
	0x01DA35B8 STR S0, [X19 + 0x30]
	0x01DA35BC LDP X20, X19, [X31 + 0x10]
	0x01DA35C0 LDR X30, [X31], #0x20
	0x01DA35C4 RET
	0x01DA35C8 BL 0x1C16F20
	0x01DA35CC MOV X1, X31
	0x01DA35D0 B 0x3C36C30
	0x01DA35D4 STP X30, X23, [X31 - 0x30]!
	0x01DA35D8 STP X22, X21, [X31 + 0x10]
	0x01DA35DC STP X20, X19, [X31 + 0x20]
	0x01DA35E0 ADRP X21, 0x2635000
	0x01DA35E4 ADRP X20, 0x2350000
	0x01DA35E8 LDRB W8, [X21 + 0xA82]
	0x01DA35EC LDR X20, [X20 + 0x5D8]
	0x01DA35F0 MOV X19, X0
	0x01DA35F4 TBNZ X8, 0x0, 0x1DA3630
	0x01DA35F8 ADRP X0, 0x2351000
	0x01DA35FC LDR X0, [X0 + 0xE70]
	0x01DA3600 BL 0x1C16CF4
	0x01DA3604 ADRP X0, 0x2354000
	0x01DA3608 LDR X0, [X0 + 0x2E0]
	0x01DA360C BL 0x1C16CF4
	0x01DA3610 ADRP X0, 0x2353000
	0x01DA3614 LDR X0, [X0 + 0xBB8]
	0x01DA3618 BL 0x1C16CF4
	0x01DA361C ADRP X0, 0x2350000
	0x01DA3620 LDR X0, [X0 + 0x5D8]
	0x01DA3624 BL 0x1C16CF4
	0x01DA3628 MOVZ W8, 0x1
	0x01DA362C STRB W8, [X21 + 0xA82]
	0x01DA3630 LDR X0, [X20]
	0x01DA3634 ADRP X21, 0x2353000
	0x01DA3638 LDR W8, [X0 + 0xE0]
	0x01DA363C LDR X21, [X21 + 0xBB8]
	0x01DA3640 CBNZ W8, 0x1DA364C
	0x01DA3644 BL 0x1C16DFC
	0x01DA3648 LDR X0, [X20]
	0x01DA364C LDR X8, [X0 + 0xB8]
	0x01DA3650 MOV X1, X31
	0x01DA3654 LDR W0, [X8 + 0x10]
	0x01DA3658 BL 0x3C35CB8
	0x01DA365C LDR X8, [X20]
	0x01DA3660 MOV W20, W0
	0x01DA3664 MOV X1, X31
	0x01DA3668 LDR X8, [X8 + 0xB8]
	0x01DA366C LDR W8, [X8 + 0x14]
	0x01DA3670 MOV X0, X8
	0x01DA3674 BL 0x3C35CB8
	0x01DA3678 ORR W0, W0, W20, 0x0
	0x01DA367C MOV X1, X31
	0x01DA3680 BL 0x3C35CBC
	0x01DA3684 STR W0, [X19 + 0x28]
	0x01DA3688 LDR X1, [X21]
	0x01DA368C MOV X0, X19
	0x01DA3690 BL 0x21A3894
	0x01DA3694 STR X0, [X19 + 0x20]
	0x01DA3698 CBZ X0, 0x1DA371C
	0x01DA369C ADRP X23, 0x2351000
	0x01DA36A0 LDR X23, [X23 + 0xE70]
	0x01DA36A4 MOV X20, X0
	0x01DA36A8 LDR X21, [X0 + 0x1D0]
	0x01DA36AC ADRP X22, 0x2354000
	0x01DA36B0 LDR X0, [X23]
	0x01DA36B4 LDR X22, [X22 + 0x2E0]
	0x01DA36B8 BL 0x1C16F10
	0x01DA36BC LDR X2, [X22]
	0x01DA36C0 MOV X1, X19
	0x01DA36C4 MOV X3, X31
	0x01DA36C8 MOV X22, X0
	0x01DA36CC BL 0x3314368
	0x01DA36D0 MOV X0, X21
	0x01DA36D4 MOV X1, X22
	0x01DA36D8 MOV X2, X31
	0x01DA36DC BL 0x33C0DE4
	0x01DA36E0 CBZ X0, 0x1DA3708
	0x01DA36E4 LDR X1, [X23]
	0x01DA36E8 LDR X8, [X0]
	0x01DA36EC CMP X8, X1
	0x01DA36F0 B.NE 0x1DA3704
	0x01DA36F4 STR X0, [X20 + 0x1D0]
	0x01DA36F8 LDR X8, [X0]
	0x01DA36FC CMP X8, X1
	0x01DA3700 B.EQ 0x1DA370C
	0x01DA3704 BL 0x1C171E0
	0x01DA3708 STR X0, [X20 + 0x1D0]
	0x01DA370C LDP X20, X19, [X31 + 0x20]
	0x01DA3710 LDP X22, X21, [X31 + 0x10]
	0x01DA3714 LDP X30, X23, [X31], #0x30
	0x01DA3718 RET
	0x01DA371C BL 0x1C16F20
	0x01DA3720 STP X30, X23, [X31 - 0x30]!
	0x01DA3724 STP X22, X21, [X31 + 0x10]
	0x01DA3728 STP X20, X19, [X31 + 0x20]
	0x01DA372C ADRP X20, 0x2635000
	0x01DA3730 LDRB W8, [X20 + 0xA83]
	0x01DA3734 MOV X19, X0
	0x01DA3738 TBNZ X8, 0x0, 0x1DA375C
	0x01DA373C ADRP X0, 0x2351000
	0x01DA3740 LDR X0, [X0 + 0xE70]
	0x01DA3744 BL 0x1C16CF4
	0x01DA3748 ADRP X0, 0x2354000
	0x01DA374C LDR X0, [X0 + 0x2E0]
	0x01DA3750 BL 0x1C16CF4
	0x01DA3754 MOVZ W8, 0x1
	0x01DA3758 STRB W8, [X20 + 0xA83]
	0x01DA375C LDR X22, [X19 + 0x20]
	0x01DA3760 CBZ X22, 0x1DA37E0
	0x01DA3764 ADRP X23, 0x2351000
	0x01DA3768 LDR X23, [X23 + 0xE70]
	0x01DA376C ADRP X21, 0x2354000
	0x01DA3770 LDR X20, [X22 + 0x1D0]
	0x01DA3774 LDR X0, [X23]
	0x01DA3778 LDR X21, [X21 + 0x2E0]
	0x01DA377C BL 0x1C16F10
	0x01DA3780 LDR X2, [X21]
	0x01DA3784 MOV X1, X19
	0x01DA3788 MOV X3, X31
	0x01DA378C MOV X21, X0
	0x01DA3790 BL 0x3314368
	0x01DA3794 MOV X0, X20
	0x01DA3798 MOV X1, X21
	0x01DA379C MOV X2, X31
	0x01DA37A0 BL 0x33C0FDC
	0x01DA37A4 CBZ X0, 0x1DA37CC
	0x01DA37A8 LDR X1, [X23]
	0x01DA37AC LDR X8, [X0]
	0x01DA37B0 CMP X8, X1
	0x01DA37B4 B.NE 0x1DA37C8
	0x01DA37B8 STR X0, [X22 + 0x1D0]
	0x01DA37BC LDR X8, [X0]
	0x01DA37C0 CMP X8, X1
	0x01DA37C4 B.EQ 0x1DA37D0
	0x01DA37C8 BL 0x1C171E0
	0x01DA37CC STR X0, [X22 + 0x1D0]
	0x01DA37D0 LDP X20, X19, [X31 + 0x20]
	0x01DA37D4 LDP X22, X21, [X31 + 0x10]
	0x01DA37D8 LDP X30, X23, [X31], #0x30
	0x01DA37DC RET
	0x01DA37E0 BL 0x1C16F20
	0x01DA37E4 STP X30, X19, [X31 - 0x10]!
	0x01DA37E8 MOV X19, X0
	0x01DA37EC BL 0x1DA3814
	0x01DA37F0 TBZ X0, 0x0, 0x1DA3808
	0x01DA37F4 LDR X0, [X19 + 0x20]
	0x01DA37F8 CBZ X0, 0x1DA3810
	0x01DA37FC MOV X1, X31
	0x01DA3800 LDP X30, X19, [X31], #0x10
	0x01DA3804 B 0x1D947A0
	0x01DA3808 LDP X30, X19, [X31], #0x10
	0x01DA380C RET
	0x01DA3810 BL 0x1C16F20
	0x01DA3814 STR D10, [X31 - 0x60]!
	0x01DA3818 STP D9, D8, [X31 + 0x10]
	0x01DA381C STP X30, X25, [X31 + 0x20]
	0x01DA3820 STP X24, X23, [X31 + 0x30]
	0x01DA3824 STP X22, X21, [X31 + 0x40]
	0x01DA3828 STP X20, X19, [X31 + 0x50]
	0x01DA382C ADRP X19, 0x2635000
	0x01DA3830 LDRB W8, [X19 + 0xA84]
	0x01DA3834 MOV X20, X0
	0x01DA3838 TBNZ X8, 0x0, 0x1DA388C
	0x01DA383C ADRP X0, 0x2354000
	0x01DA3840 LDR X0, [X0 + 0x2E8]
	0x01DA3844 BL 0x1C16CF4
	0x01DA3848 ADRP X0, 0x2353000
	0x01DA384C LDR X0, [X0 + 0xF68]
	0x01DA3850 BL 0x1C16CF4
	0x01DA3854 ADRP X0, 0x2353000
	0x01DA3858 LDR X0, [X0 + 0xF70]
	0x01DA385C BL 0x1C16CF4
	0x01DA3860 ADRP X0, 0x2354000
	0x01DA3864 LDR X0, [X0 + 0x2F0]
	0x01DA3868 BL 0x1C16CF4
	0x01DA386C ADRP X0, 0x2350000
	0x01DA3870 LDR X0, [X0 + 0x598]
	0x01DA3874 BL 0x1C16CF4
	0x01DA3878 ADRP X0, 0x2350000
	0x01DA387C LDR X0, [X0 + 0x5F8]
	0x01DA3880 BL 0x1C16CF4
	0x01DA3884 MOVZ W8, 0x1
	0x01DA3888 STRB W8, [X19 + 0xA84]
	0x01DA388C MOV X0, X20
	0x01DA3890 MOV X1, X31
	0x01DA3894 BL 0x3C32E90
	0x01DA3898 CBZ X0, 0x1DA3A44
	0x01DA389C ADRP X19, 0x2350000
	0x01DA38A0 ADRP X23, 0x2353000
	0x01DA38A4 ADRP X21, 0x2354000
	0x01DA38A8 ADRP X22, 0x2353000

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], D10
	003 Move [X31+56], D9
	004 Move [X31+64], D8
	005 Move [X31+72], X30
	006 Move [X31+80], X24
	007 Move [X31+88], X23
	008 Move [X31+96], X22
	009 Move [X31+104], X21
	010 Move [X31+112], X20
	011 Move [X31+120], X19
	012 Move X20, 0x2636000
	013 Move W8, [X20+2681]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x2351000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move X0, 0x2353000
	023 Move X0, [X0+1992]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+2681], W8
	027 Move [X31+40], X31
	028 Move [X31+32], W31
	029 Move [X31+24], X31
	030 Move X0, [X19+184]
	031 Compare X0, 0
	032 JumpIfEqual {302}
	033 Move X1, X31
	034 Call GrabbableItem.get_netObjectExists, X0
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {290}
	039 Move V0, [X19+192]
	040 NotImplemented "Instruction FCMP not yet implemented."
	041 Move X0, [X19+184]
	042 Compare X0, 0
	043 JumpIfEqual {302}
	044 Move X1, X31
	045 Call GrabbableItem.get_isVisible, X0
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {290}
	050 Add X1, X31, 40
	051 Move X0, X19
	052 Call Pogostick.TryGetItemToApplyTo, X0, X1
	053 Move X20, [X31+40]
	054 Compare X20, 0
	055 JumpIfEqual {302}
	056 Move X8, [X20+336]
	057 Compare X8, 0
	058 JumpIfEqual {302}
	059 Move S8, [X8+168]
	060 Move S9, [X8+172]
	061 Move V10, [X8+176]
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {213}
	066 Move X22, 0x2353000
	067 Move X22, [X22+1992]
	068 Move X0, [X22]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X23, 0x2636000
	074 Move W8, [X23+2141]
	075 Compare W8, 0
	076 JumpIfNotEqual {82}
	077 Move X0, 0x2353000
	078 Move X0, [X0+1992]
	079 Call 0x1C17CF4
	080 Move W8, 1
	081 Move [X23+2141], W8
	082 Move X0, [X22]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {88}
	086 Call 0x1C17DFC
	087 Move X0, [X22]
	088 Move X24, 0x2351000
	089 Move X24, [X24+1432]
	090 Move X9, [X0+184]
	091 Move X8, [X24]
	092 Move X21, [X9]
	093 Move W10, [X8+224]
	094 Compare W10, 0
	095 JumpIfNotEqual {98}
	096 Move X0, X8
	097 Call 0x1C17DFC
	098 Move X0, X21
	099 Move X1, X31
	100 Move X2, X31
	101 Call Object.op_Inequality, X0, X1
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {213}
	106 Move X0, [X22]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 Move W8, [X23+2141]
	112 Compare W8, 0
	113 JumpIfNotEqual {119}
	114 Move X0, 0x2353000
	115 Move X0, [X0+1992]
	116 Call 0x1C17CF4
	117 Move W8, 1
	118 Move [X23+2141], W8
	119 Move X0, [X22]
	120 Move W8, [X0+224]
	121 Compare W8, 0
	122 JumpIfNotEqual {125}
	123 Call 0x1C17DFC
	124 Move X0, [X22]
	125 Move X8, [X0+184]
	126 Move X8, [X8]
	127 Compare X8, 0
	128 JumpIfEqual {302}
	129 Move X0, [X24]
	130 Move X21, [X8+48]
	131 Move W9, [X0+224]
	132 Compare W9, 0
	133 JumpIfNotEqual {135}
	134 Call 0x1C17DFC
	135 Move X0, X21
	136 Move X1, X31
	137 Move X2, X31
	138 Call Object.op_Inequality, X0, X1
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfNotEqual {213}
	143 Move X0, [X22]
	144 Move W8, [X0+224]
	145 Compare W8, 0
	146 JumpIfNotEqual {148}
	147 Call 0x1C17DFC
	148 Move W8, [X23+2141]
	149 Compare W8, 0
	150 JumpIfNotEqual {156}
	151 Move X0, 0x2353000
	152 Move X0, [X0+1992]
	153 Call 0x1C17CF4
	154 Move W8, 1
	155 Move [X23+2141], W8
	156 Move X0, [X22]
	157 Move W8, [X0+224]
	158 Compare W8, 0
	159 JumpIfNotEqual {162}
	160 Call 0x1C17DFC
	161 Move X0, [X22]
	162 Move X8, [X0+184]
	163 Move X8, [X8]
	164 Compare X8, 0
	165 JumpIfEqual {302}
	166 Move X0, [X8+48]
	167 Compare X0, 0
	168 JumpIfEqual {302}
	169 Move X1, X31
	170 Call Rigidbody.get_velocity, X0
	171 Multiply S0, S0, S0
	172 Multiply S1, S1, S1
	173 Multiply S3, S8, S8
	174 Multiply S4, S9, S9
	175 Multiply S2, S2, S2
	176 Multiply S5, S10, S10
	177 Add S0, S0, S1
	178 Add S1, S3, S4
	179 Add S0, S2, S0
	180 Add S1, S1, S5
	181 NotImplemented "Instruction FCMP not yet implemented."
	182 Move X0, [X22]
	183 Move W8, [X0+224]
	184 Compare W8, 0
	185 JumpIfNotEqual {187}
	186 Call 0x1C17DFC
	187 Move W8, [X23+2141]
	188 Compare W8, 0
	189 JumpIfNotEqual {195}
	190 Move X0, 0x2353000
	191 Move X0, [X0+1992]
	192 Call 0x1C17CF4
	193 Move W8, 1
	194 Move [X23+2141], W8
	195 Move X0, [X22]
	196 Move W8, [X0+224]
	197 Compare W8, 0
	198 JumpIfNotEqual {201}
	199 Call 0x1C17DFC
	200 Move X0, [X22]
	201 Move X8, [X0+184]
	202 Move X8, [X8]
	203 Compare X8, 0
	204 JumpIfEqual {302}
	205 Move X0, [X8+48]
	206 Compare X0, 0
	207 JumpIfEqual {302}
	208 Move X1, X31
	209 Call Rigidbody.get_velocity, X0
	210 Move V8, V0
	211 Move V9, V1
	212 Move V10, V2
	213 Move X8, [X20+336]
	214 Compare X8, 0
	215 JumpIfEqual {302}
	216 Move X0, [X8+64]
	217 Compare X0, 0
	218 JumpIfEqual {290}
	219 Move W8, [X0+96]
	220 Move TEMP, X8
	221 And TEMP, TEMP, 2
	222 Compare TEMP, 2
	223 JumpIfEqual {290}
	224 Move X1, X31
	225 Call NetworkObject.get_HasStateAuthority, X0
	226 Move TEMP, X0
	227 And TEMP, TEMP, 1
	228 Compare TEMP, 1
	229 JumpIfNotEqual {290}
	230 Add X1, X31, 24
	231 Move X0, X19
	232 Move V0, V8
	233 Move V1, V9
	234 Move V2, V10
	235 Call Pogostick.TryCalculateApplyVelocity, X0, X1, X2
	236 Move TEMP, X0
	237 And TEMP, TEMP, 1
	238 Compare TEMP, 1
	239 JumpIfNotEqual {290}
	240 Move V8, [X31+24]
	241 Move V9, [X31+32]
	242 Move X0, X31
	243 Call Time.get_deltaTime
	244 Move S1, 30
	245 Multiply S1, S0, S1
	246 NotImplemented "Instruction INVALID not yet implemented."
	247 Multiply S8, S9, S1
	248 Move S1, V0.S[1]
	249 Move X0, X20
	250 Move V2, V8
	251 Move X1, X31
	252 Move [X31], V0
	253 Move [X31+24], D0
	254 Move [X31+32], S8
	255 Call GrabbableItem.AddExternalForce, X0, X1
	256 Move V0, [X19+216]
	257 Move V1, [X19+224]
	258 Move V2, [X31]
	259 Move W8, 1
	260 Move [X19+213], W8
	261 Add S1, S8, S1
	262 Add V0, V2, V0
	263 Move [X19+216], D0
	264 Move [X19+224], S1
	265 Move X0, [X20+336]
	266 Compare X0, 0
	267 JumpIfEqual {302}
	268 Move X1, X31
	269 Call AttachedItemAnchor.get_isHand, X0
	270 Move TEMP, X0
	271 And TEMP, TEMP, 1
	272 Compare TEMP, 1
	273 JumpIfNotEqual {290}
	274 Move X8, [X19+184]
	275 Compare X8, 0
	276 JumpIfEqual {302}
	277 Move X8, [X8+336]
	278 Compare X8, 0
	279 JumpIfEqual {302}
	280 Move W8, [X8+128]
	281 Move X0, X31
	282 NotImplemented "Instruction CMP not yet implemented."
	283 NotImplemented "Instruction CSET not yet implemented."
	284 Call Time.get_deltaTime
	285 Add S1, S0, S0
	286 Move S0, 0.25
	287 Move W0, W19
	288 Move X1, X31
	289 Call XRInputManager.SendHapticImpulse, X0, V0, V1
	290 Move X20, [X31+112]
	291 Move X19, [X31+120]
	292 Move X22, [X31+96]
	293 Move X21, [X31+104]
	294 Move X24, [X31+80]
	295 Move X23, [X31+88]
	296 Move X30, [X31+72]
	297 Move D9, [X31+56]
	298 Move D8, [X31+64]
	299 Move V10, [X31+48]
	300 Add X31, X31, 128
	301 Return 
	302 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01DA3C00 RET
	0x01DA3C04 ADRP X0, 0x2350000
	0x01DA3C08 LDR X0, [X0 + 0x5B0]
	0x01DA3C0C BL 0x1C16D08
	0x01DA3C10 BL 0x1C16F10
	0x01DA3C14 MOV X19, X0
	0x01DA3C18 ADRP X0, 0x2354000
	0x01DA3C1C LDR X0, [X0 + 0x2F8]
	0x01DA3C20 BL 0x1C16D08
	0x01DA3C24 MOV X1, X0
	0x01DA3C28 MOV X0, X19
	0x01DA3C2C MOV X2, X31
	0x01DA3C30 BL 0x337DF1C
	0x01DA3C34 ADRP X0, 0x2354000
	0x01DA3C38 LDR X0, [X0 + 0x300]
	0x01DA3C3C BL 0x1C16D08
	0x01DA3C40 MOV X1, X0
	0x01DA3C44 MOV X0, X19
	0x01DA3C48 BL 0x1C16DEC
	0x01DA3C4C STP X30, X19, [X31 - 0x10]!
	0x01DA3C50 LDR X8, [X0 + 0x50]
	0x01DA3C54 CBZ X8, 0x1DA3C64
	0x01DA3C58 STR W1, [X8]
	0x01DA3C5C LDP X30, X19, [X31], #0x10
	0x01DA3C60 RET
	0x01DA3C64 ADRP X0, 0x2350000
	0x01DA3C68 LDR X0, [X0 + 0x5B0]
	0x01DA3C6C BL 0x1C16D08
	0x01DA3C70 BL 0x1C16F10
	0x01DA3C74 MOV X19, X0
	0x01DA3C78 ADRP X0, 0x2354000
	0x01DA3C7C LDR X0, [X0 + 0x2F8]
	0x01DA3C80 BL 0x1C16D08
	0x01DA3C84 MOV X1, X0
	0x01DA3C88 MOV X0, X19
	0x01DA3C8C MOV X2, X31
	0x01DA3C90 BL 0x337DF1C
	0x01DA3C94 ADRP X0, 0x2354000
	0x01DA3C98 LDR X0, [X0 + 0x308]
	0x01DA3C9C BL 0x1C16D08
	0x01DA3CA0 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2636000
	006 Move W8, [X20+2682]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2354000
	013 Move X0, [X0+3040]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2682], W8
	017 Move W8, 0x999A
	018 NotImplemented "Instruction MOVK not yet implemented."
	019 Move [X19+192], W8
	020 Move X21, 0x2636000
	021 Move X20, 0x2354000
	022 Move W8, [X21+1923]
	023 Move X20, [X20+3040]
	024 Compare W8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, 0x2351000
	027 Move X0, [X0+1440]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+1923], W8
	031 Move X8, 0x2351000
	032 Move X8, [X8+1440]
	033 Move X1, X31
	034 Move X8, [X8]
	035 Move X8, [X8+184]
	036 Move V0, [X8]
	037 Move V1, [X8+8]
	038 Move [X19+216], D0
	039 Move [X19+224], S1
	040 Move X0, [X20]
	041 Call Shader.PropertyToID, X0
	042 Move [X19+228], W0
	043 Move X0, X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X1, X31
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Call NetworkBehaviour..ctor, X0
	050 Return 

Method: System.Void CopyBackingFieldsToState(System.Boolean param_0)

Disassembly:
	0x01DA3CA4 MOV X0, X19

ISIL:
	001 Return 

Method: System.Void CopyStateToBackingFields()

Disassembly:
	0x01DA3CA8 BL 0x1C16DEC

ISIL:
	001 Return 

