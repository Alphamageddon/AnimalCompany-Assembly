Type: AnimalCompany.TestStretchyItem

Method: System.Void Update()

Disassembly:
	0x01DA84AC ADRP X21, 0x234D000
	0x01DA84B0 LDR X21, [X21 + 0x5A8]
	0x01DA84B4 MOV X1, X31
	0x01DA84B8 BL 0x3C3F58C
	0x01DA84BC FMOV S3, 0.5
	0x01DA84C0 MOV X0, X20
	0x01DA84C4 MOV X1, X31
	0x01DA84C8 BL 0x1DD1B94
	0x01DA84CC LDR X0, [X21]
	0x01DA84D0 LDR W20, [X19 + 0xD8]
	0x01DA84D4 LDR W8, [X0 + 0xE0]
	0x01DA84D8 CBNZ W8, 0x1DA84E0
	0x01DA84DC BL 0x1C16DFC
	0x01DA84E0 MOV W0, W20
	0x01DA84E4 MOV X1, X31
	0x01DA84E8 BL 0x31AD670
	0x01DA84EC LDR X0, [X19 + 0x98]
	0x01DA84F0 CBZ X0, 0x1DA85E4
	0x01DA84F4 MOV X1, X31
	0x01DA84F8 BL 0x3C32E90
	0x01DA84FC CBZ X0, 0x1DA85E4
	0x01DA8500 MOV X1, X31
	0x01DA8504 BL 0x3C3EB78
	0x01DA8508 ADRP X8, 0xFFFFFFFFFED42000
	0x01DA850C ADRP X9, 0xFFFFFFFFFED42000
	0x01DA8510 MOV V0.16B, V2.16B
	0x01DA8514 LDR V1, [X8 + 0x130]
	0x01DA8518 LDR V2, [X9 + 0xBC]
	0x01DA851C MOV X0, X31
	0x01DA8520 BL 0x31B22EC
	0x01DA8524 CBZ X0, 0x1DA85E4
	0x01DA8528 ADRP X20, 0x234D000
	0x01DA852C ADRP X21, 0x234F000
	0x01DA8530 LDR X20, [X20 + 0x5B0]
	0x01DA8534 LDR X21, [X21 + 0x580]
	0x01DA8538 MOVZ W1, 0x1
	0x01DA853C MOV X2, X31
	0x01DA8540 BL 0x31C7FBC
	0x01DA8544 LDR X8, [X20]
	0x01DA8548 MOV X20, X0
	0x01DA854C MOV X0, X8
	0x01DA8550 BL 0x1C16F10
	0x01DA8554 LDR X2, [X21]
	0x01DA8558 MOV X1, X19
	0x01DA855C MOV X3, X31
	0x01DA8560 MOV X21, X0
	0x01DA8564 BL 0x2A6DA40
	0x01DA8568 CBZ X20, 0x1DA85E4
	0x01DA856C ADRP X22, 0x234C000
	0x01DA8570 ADRP X23, 0x234F000
	0x01DA8574 LDR X22, [X22 + 0xE70]
	0x01DA8578 LDR X23, [X23 + 0x588]
	0x01DA857C MOV X0, X20
	0x01DA8580 MOV X1, X21
	0x01DA8584 MOV X2, X31
	0x01DA8588 BL 0x31C8070
	0x01DA858C LDR X8, [X22]
	0x01DA8590 MOV X20, X0
	0x01DA8594 MOV X0, X8
	0x01DA8598 BL 0x1C16F10
	0x01DA859C LDR X2, [X23]
	0x01DA85A0 MOV X1, X19
	0x01DA85A4 MOV X3, X31
	0x01DA85A8 MOV X21, X0
	0x01DA85AC BL 0x3314368
	0x01DA85B0 CBZ X20, 0x1DA85E4
	0x01DA85B4 MOV X0, X20
	0x01DA85B8 MOV X1, X21
	0x01DA85BC MOV X2, X31
	0x01DA85C0 BL 0x31C7FD8
	0x01DA85C4 CBZ X0, 0x1DA85E4
	0x01DA85C8 MOV X1, X31
	0x01DA85CC BL 0x31BFBD4
	0x01DA85D0 STR W0, [X19 + 0xD8]
	0x01DA85D4 LDP X20, X19, [X31 + 0x20]
	0x01DA85D8 LDP X22, X21, [X31 + 0x10]
	0x01DA85DC LDP X30, X23, [X31], #0x30
	0x01DA85E0 RET
	0x01DA85E4 BL 0x1C16F20
	0x01DA85E8 STR X30, [X31 - 0x30]!
	0x01DA85EC STP X22, X21, [X31 + 0x10]
	0x01DA85F0 STP X20, X19, [X31 + 0x20]
	0x01DA85F4 ADRP X21, 0x2630000
	0x01DA85F8 ADRP X22, 0x234B000
	0x01DA85FC LDRB W8, [X21 + 0xAAB]
	0x01DA8600 LDR X22, [X22 + 0x598]
	0x01DA8604 MOV X20, X1
	0x01DA8608 MOV X19, X0
	0x01DA860C TBNZ X8, 0x0, 0x1DA8624
	0x01DA8610 ADRP X0, 0x234B000
	0x01DA8614 LDR X0, [X0 + 0x598]
	0x01DA8618 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 432
	002 Move [X31+384], X29
	003 Move [X31+400], X30
	004 Move [X31+408], X21
	005 Move [X31+416], X20
	006 Move [X31+424], X19
	007 Move X20, 0x2631000
	008 Move X21, 0x234C000
	009 Move W8, [X20+2726]
	010 Move X21, [X21+1432]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x234C000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+2726], W8
	021 Move X0, [X21]
	022 Move X20, [X19+32]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move X1, X31
	029 Move X2, X31
	030 Call Object.op_Equality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {129}
	035 Move X0, [X21]
	036 Move X20, [X19+48]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X20
	042 Move X1, X31
	043 Move X2, X31
	044 Call Object.op_Equality, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {129}
	049 Move X0, [X19+48]
	050 Compare X0, 0
	051 JumpIfEqual {136}
	052 Move X1, X31
	053 Call Component.get_transform, X0
	054 Compare X0, 0
	055 JumpIfEqual {136}
	056 Add X8, X31, 320
	057 Move X1, X31
	058 Call Transform.get_worldToLocalMatrix, X0
	059 Move V0, [X31+320]
	060 Move V1, [X31+336]
	061 Move V2, [X31+352]
	062 Move V3, [X31+368]
	063 Move [X31+256], V0
	064 Move [X31+264], V1
	065 Move [X31+288], V2
	066 Move [X31+296], V3
	067 Move X0, [X19+32]
	068 Compare X0, 0
	069 JumpIfEqual {136}
	070 Add X8, X31, 320
	071 Move X1, X31
	072 Call Transform.get_localToWorldMatrix, X0
	073 Move V0, [X31+320]
	074 Move V1, [X31+336]
	075 Move V2, [X31+352]
	076 Move V3, [X31+368]
	077 Add X8, X31, 192
	078 Add X0, X31, 128
	079 Move [X31+64], V0
	080 Move [X31+72], V1
	081 Move V0, [X31+256]
	082 Move V1, [X31+272]
	083 Move [X31+96], V2
	084 Move [X31+104], V3
	085 Move V2, [X31+288]
	086 Move V3, [X31+304]
	087 Add X1, X31, 64
	088 Move X2, X31
	089 Move [X31+128], V0
	090 Move [X31+136], V1
	091 Move [X31+160], V2
	092 Move [X31+168], V3
	093 Call Matrix4x4.op_Multiply, X0, X1
	094 Move V0, [X31+192]
	095 Move V1, [X31+208]
	096 Move V2, [X31+224]
	097 Move V3, [X31+240]
	098 Move [X31+320], V0
	099 Move [X31+328], V1
	100 Move [X31+352], V2
	101 Move [X31+360], V3
	102 Move X0, [X19+48]
	103 Compare X0, 0
	104 JumpIfEqual {136}
	105 Move X1, X31
	106 Call Renderer.get_material, X0
	107 Move W1, [X19+40]
	108 Move V0, [X31+320]
	109 Move V1, [X31+336]
	110 Move V2, [X31+352]
	111 Move V3, [X31+368]
	112 Move [X31+192], V0
	113 Move [X31+200], V1
	114 Move [X31+224], V2
	115 Move [X31+232], V3
	116 Compare X0, 0
	117 JumpIfEqual {136}
	118 Move V0, [X31+192]
	119 Move V1, [X31+208]
	120 Move V2, [X31+224]
	121 Move V3, [X31+240]
	122 Add X2, X31, 0
	123 Move X3, X31
	124 Move [X31], V0
	125 Move [X31+8], V1
	126 Move [X31+32], V2
	127 Move [X31+40], V3
	128 Call Material.SetMatrix, X0, X1, X2
	129 Move X20, [X31+416]
	130 Move X19, [X31+424]
	131 Move X30, [X31+400]
	132 Move X21, [X31+408]
	133 Move X29, [X31+384]
	134 Add X31, X31, 432
	135 Return 
	136 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01DA861C MOVZ W8, 0x1
	0x01DA8620 STRB W8, [X21 + 0xAAB]
	0x01DA8624 LDR X0, [X22]
	0x01DA8628 LDR W8, [X0 + 0xE0]
	0x01DA862C CBNZ W8, 0x1DA8634
	0x01DA8630 BL 0x1C16DFC
	0x01DA8634 MOV X0, X20
	0x01DA8638 MOV X1, X31
	0x01DA863C MOV X2, X31
	0x01DA8640 BL 0x3C354F8
	0x01DA8644 TBZ X0, 0x0, 0x1DA8670
	0x01DA8648 LDR X0, [X19 + 0x40]
	0x01DA864C CBZ X0, 0x1DA8670
	0x01DA8650 LDRB W8, [X0 + 0x60]
	0x01DA8654 TBNZ X8, 0x1, 0x1DA8670
	0x01DA8658 MOV X1, X31
	0x01DA865C BL 0x1E93668
	0x01DA8660 TBZ X0, 0x0, 0x1DA8670
	0x01DA8664 MOV X0, X19
	0x01DA8668 BL 0x1DA7780
	0x01DA866C CBZ W0, 0x1DA8680
	0x01DA8670 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2631000
	006 Move X21, 0x234F000
	007 Move W8, [X20+2727]
	008 Move X21, [X21+3040]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x234F000
	015 Move X0, [X0+3040]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2727], W8
	019 Move X0, [X21]
	020 Move X1, X31
	021 Call Shader.PropertyToID, X0
	022 Move [X19+40], W0
	023 Move X0, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X1, X31
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call MonoBehaviour..ctor, X0
	030 Return 

