Type: AnimalCompany.LightByDistance

Method: System.Void Update()

Disassembly:
	0x01DD1D90 LDR X8, [X21]
	0x01DD1D94 LDR X0, [X20]
	0x01DD1D98 LDR X8, [X8 + 0xB8]
	0x01DD1D9C LDR W9, [X0 + 0xE0]
	0x01DD1DA0 LDR X20, [X8]
	0x01DD1DA4 CBNZ W9, 0x1DD1DAC
	0x01DD1DA8 BL 0x1C16DFC
	0x01DD1DAC MOV X0, X20
	0x01DD1DB0 MOV X1, X31
	0x01DD1DB4 MOV X2, X31
	0x01DD1DB8 BL 0x3C354F8
	0x01DD1DBC TBNZ X0, 0x0, 0x1DD1F48
	0x01DD1DC0 LDR X8, [X21]
	0x01DD1DC4 ADRP X25, 0x2327000
	0x01DD1DC8 ADRP X24, 0x2325000
	0x01DD1DCC ADRP X23, 0x2325000
	0x01DD1DD0 ADRP X21, 0x2327000
	0x01DD1DD4 ADRP X22, 0x2327000
	0x01DD1DD8 LDR X25, [X25 + 0x620]
	0x01DD1DDC LDR X24, [X24 + 0xD28]
	0x01DD1DE0 LDR X8, [X8 + 0xB8]
	0x01DD1DE4 LDR X23, [X23 + 0xA30]
	0x01DD1DE8 LDR X21, [X21 + 0x628]
	0x01DD1DEC LDR X22, [X22 + 0x618]
	0x01DD1DF0 MOVZ W26, 0x14
	0x01DD1DF4 STR X19, [X8]
	0x01DD1DF8 LDR X20, [X19 + 0x58]
	0x01DD1DFC BL 0x1DD1FAC
	0x01DD1E00 CBZ X20, 0x1DD1F28
	0x01DD1E04 LDR X2, [X25]
	0x01DD1E08 MOV X1, X0
	0x01DD1E0C MOV X0, X20
	0x01DD1E10 BL 0x24F1750
	0x01DD1E14 SUBS W26, W26, 0x1
	0x01DD1E18 B.NE 0x1DD1DF8
	0x01DD1E1C ADRP X20, 0x2607000
	0x01DD1E20 LDRB W8, [X20 + 0xABF]
	0x01DD1E24 CBNZ W8, 0x1DD1E3C
	0x01DD1E28 ADRP X0, 0x2325000
	0x01DD1E2C LDR X0, [X0 + 0xD28]
	0x01DD1E30 BL 0x1C16CF4
	0x01DD1E34 MOVZ W8, 0x1
	0x01DD1E38 STRB W8, [X20 + 0xABF]
	0x01DD1E3C LDR X8, [X24]
	0x01DD1E40 LDR X8, [X8 + 0xB8]
	0x01DD1E44 LDR X0, [X8 + 0x38]
	0x01DD1E48 CBZ X0, 0x1DD1E54
	0x01DD1E4C MOV X1, X31
	0x01DD1E50 BL 0x1DBAC58
	0x01DD1E54 STR X0, [X19 + 0x50]
	0x01DD1E58 LDR X8, [X24]
	0x01DD1E5C LDR X0, [X23]
	0x01DD1E60 LDR X8, [X8 + 0xB8]
	0x01DD1E64 LDR X20, [X8 + 0x10]
	0x01DD1E68 BL 0x1C16F10
	0x01DD1E6C LDR X2, [X21]
	0x01DD1E70 MOV X1, X19
	0x01DD1E74 MOV X3, X31
	0x01DD1E78 MOV X21, X0
	0x01DD1E7C BL 0x2A6B948
	0x01DD1E80 MOV X0, X20
	0x01DD1E84 MOV X1, X21
	0x01DD1E88 MOV X2, X31
	0x01DD1E8C BL 0x33C0DE4
	0x01DD1E90 CBZ X0, 0x1DD1ED4
	0x01DD1E94 LDR X21, [X23]
	0x01DD1E98 MOV X20, X0
	0x01DD1E9C MOV X1, X21
	0x01DD1EA0 BL 0x1C16E00
	0x01DD1EA4 CBZ X0, 0x1DD1EC8
	0x01DD1EA8 LDR X8, [X24]
	0x01DD1EAC LDR X8, [X8 + 0xB8]
	0x01DD1EB0 STR X0, [X8 + 0x10]
	0x01DD1EB4 LDR X21, [X23]
	0x01DD1EB8 MOV X0, X20
	0x01DD1EBC MOV X1, X21
	0x01DD1EC0 BL 0x1C16E00
	0x01DD1EC4 CBNZ X0, 0x1DD1EE0
	0x01DD1EC8 MOV X0, X20
	0x01DD1ECC MOV X1, X21
	0x01DD1ED0 BL 0x1C171E0
	0x01DD1ED4 LDR X8, [X24]
	0x01DD1ED8 LDR X8, [X8 + 0xB8]
	0x01DD1EDC STR X31, [X8 + 0x10]
	0x01DD1EE0 LDR X8, [X19 + 0x48]
	0x01DD1EE4 CBZ X8, 0x1DD1F28
	0x01DD1EE8 MOV X20, X31
	0x01DD1EEC LDR W9, [X8 + 0x18]
	0x01DD1EF0 CMP X20, W9, SXTW
	0x01DD1EF4 B.GE 0x1DD1F2C
	0x01DD1EF8 CMP X20, X9
	0x01DD1EFC B.CS 0x1DD1F44
	0x01DD1F00 LDR X0, [X19 + 0x60]
	0x01DD1F04 CBZ X0, 0x1DD1F28
	0x01DD1F08 ADD X8, X8, X20, 0x3, LSL
	0x01DD1F0C LDR X1, [X8 + 0x20]
	0x01DD1F10 LDR X3, [X22]
	0x01DD1F14 MOV W2, W20
	0x01DD1F18 BL 0x2ABDBE8
	0x01DD1F1C LDR X8, [X19 + 0x48]
	0x01DD1F20 ADD X20, X20, 0x1
	0x01DD1F24 CBNZ X8, 0x1DD1EEC
	0x01DD1F28 BL 0x1C16F20
	0x01DD1F2C LDP X20, X19, [X31 + 0x40]
	0x01DD1F30 LDP X22, X21, [X31 + 0x30]
	0x01DD1F34 LDP X24, X23, [X31 + 0x20]
	0x01DD1F38 LDP X26, X25, [X31 + 0x10]
	0x01DD1F3C LDR X30, [X31], #0x50
	0x01DD1F40 RET
	0x01DD1F44 BL 0x1C16F28
	0x01DD1F48 ADRP X0, 0x2322000
	0x01DD1F4C LDR X0, [X0 + 0x598]
	0x01DD1F50 BL 0x1C16D08
	0x01DD1F54 BL 0x19903D0

ISIL:
	001 Move [X31-80], D13
	002 Move [X31-72], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0x2608000
	012 Move X20, 0x2323000
	013 Move W8, [X21+3063]
	014 Move X20, [X20+1432]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x2323000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3063], W8
	025 Move X0, X31
	026 Call Camera.get_main
	027 Move X8, [X20]
	028 Move X20, X0
	029 Move W9, [X8+224]
	030 Compare W9, 0
	031 JumpIfNotEqual {34}
	032 Move X0, X8
	033 Call 0x1C17DFC
	034 Move X0, X20
	035 Move X1, X31
	036 Move X2, X31
	037 Call Object.op_Equality, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {53}
	042 Move X20, [X31+64]
	043 Move X19, [X31+72]
	044 Move X30, [X31+48]
	045 Move X21, [X31+56]
	046 Move D9, [X31+32]
	047 Move D8, [X31+40]
	048 Move D11, [X31+16]
	049 Move D10, [X31+24]
	050 Move D13, [X31+80]
	051 Move D12, [X31+88]
	052 Return 
	053 Move X0, X19
	054 Move X1, X31
	055 Call Component.get_transform, X0
	056 Compare X0, 0
	057 JumpIfEqual {144}
	058 Move X1, X31
	059 Call Transform.get_position, X0
	060 Move X0, X31
	061 Move V8, V0
	062 Move V9, V1
	063 Move V10, V2
	064 Call Camera.get_main
	065 Compare X0, 0
	066 JumpIfEqual {144}
	067 Move X1, X31
	068 Call Component.get_transform, X0
	069 Compare X0, 0
	070 JumpIfEqual {144}
	071 Move X1, X31
	072 Call Transform.get_position, X0
	073 Move X20, 0x2608000
	074 Move W8, [X20+2140]
	075 Move V11, V0
	076 Move V12, V1
	077 Move V13, V2
	078 Compare W8, 0
	079 JumpIfNotEqual {85}
	080 Move X0, 0x2323000
	081 Move X0, [X0+1448]
	082 Call 0x1C17CF4
	083 Move W8, 1
	084 Move [X20+2140], W8
	085 Move X8, 0x2323000
	086 Move X8, [X8+1448]
	087 Move X0, [X8]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Move S2, [X19+32]
	093 Move S1, [X19+36]
	094 Move S0, W31
	095 NotImplemented "Instruction FCMP not yet implemented."
	096 Subtract S3, S8, S11
	097 Subtract S4, S9, S12
	098 Subtract S5, S10, S13
	099 Multiply S3, S3, S3
	100 Multiply S4, S4, S4
	101 Multiply S5, S5, S5
	102 Add S3, S3, S4
	103 Add S3, S5, S3
	104 NotImplemented "Instruction FSQRT not yet implemented."
	105 Subtract S3, S3, S1
	106 Subtract S1, S2, S1
	107 NotImplemented "Instruction FDIV not yet implemented."
	108 NotImplemented "Instruction FCMP not yet implemented."
	109 Move S0, 1
	110 NotImplemented "Instruction FMIN not yet implemented."
	111 Move X0, [X19+48]
	112 Compare X0, 0
	113 JumpIfEqual {144}
	114 Move V1, [X19+40]
	115 Move S2, W31
	116 NotImplemented "Instruction FMAX not yet implemented."
	117 Move X1, X31
	118 Multiply S0, S0, S1
	119 Add S0, S0, S2
	120 Call Light.set_intensity, X0, V0
	121 Move X0, [X19+48]
	122 Compare X0, 0
	123 JumpIfEqual {144}
	124 Move X1, X31
	125 Call Light.get_intensity, X0
	126 Move X0, [X19+48]
	127 Compare X0, 0
	128 JumpIfEqual {144}
	129 Move X20, [X31+64]
	130 Move X19, [X31+72]
	131 Move X30, [X31+48]
	132 Move X21, [X31+56]
	133 Move D9, [X31+32]
	134 Move D8, [X31+40]
	135 Move D11, [X31+16]
	136 Move D10, [X31+24]
	137 NotImplemented "Instruction FCMP not yet implemented."
	138 NotImplemented "Instruction CSET not yet implemented."
	139 Move X2, X31
	140 Move D13, [X31+80]
	141 Move D12, [X31+88]
	142 Call Behaviour.set_enabled, X0, X1
	143 Return 
	144 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01DD1F58 MOV X0, X19
	0x01DD1F5C MOV X1, X31
	0x01DD1F60 BL 0x3C394A8
	0x01DD1F64 ADRP X0, 0x2322000
	0x01DD1F68 LDR X0, [X0 + 0x7D0]
	0x01DD1F6C BL 0x1C16D08
	0x01DD1F70 BL 0x1C16F10

ISIL:
	001 Move X8, -19800064
	002 Move V0, [X8+1096]
	003 Move W8, 0x40A00000
	004 Move X1, X31
	005 Move [X0+40], W8
	006 Move [X0+32], D0
	007 Call MonoBehaviour..ctor, X0
	008 Return 

