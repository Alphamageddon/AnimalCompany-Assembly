Type: AnimalCompany.ProductsManager/FetchProductsCommand/<>c

Method: System.Void .cctor()

Disassembly:
	0x01D47A7C BL 0x1C16CF4
	0x01D47A80 ADRP X0, 0x23AD000
	0x01D47A84 LDR X0, [X0 + 0x698]
	0x01D47A88 BL 0x1C16CF4
	0x01D47A8C MOVZ W8, 0x1
	0x01D47A90 STRB W8, [X21 + 0x773]
	0x01D47A94 LDR X0, [X20]
	0x01D47A98 MOVI V0.2D, 0x0
	0x01D47A9C STP V0, V0, [X31 + 0x60]
	0x01D47AA0 STP V0, V0, [X31 + 0x40]
	0x01D47AA4 STP V0, V0, [X31 + 0x20]
	0x01D47AA8 ADRP X22, 0x23AD000
	0x01D47AAC ADRP X20, 0x23AD000
	0x01D47AB0 ADRP X21, 0x23AD000
	0x01D47AB4 LDR W8, [X0 + 0xE0]
	0x01D47AB8 LDR X22, [X22 + 0x6A0]
	0x01D47ABC LDR X20, [X20 + 0x6A8]
	0x01D47AC0 LDR X21, [X21 + 0x6B0]
	0x01D47AC4 CBNZ W8, 0x1D47ACC
	0x01D47AC8 BL 0x1C16DFC
	0x01D47ACC LDR X0, [X22]
	0x01D47AD0 ADD X8, X31, 0x8
	0x01D47AD4 BL 0x263AAF8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x2692000
	005 Move X20, 0x23AE000
	006 Move W8, [X19+1901]
	007 Move X20, [X20+1480]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x23AE000
	013 Move X0, [X0+1480]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1901], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x01D47AD8 LDUR V0, [X31 + 0x8]
	0x01D47ADC LDR X9, [X31 + 0x18]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Threading.Tasks.Task`1<AnimalCompany.API.ApiProduct[]> <ExecuteAsync>b__0_2(System.Threading.CancellationToken token)

Disassembly:
	0x01D47AE0 LDR X2, [X20]
	0x01D47AE4 ADD X8, X31, 0x20
	0x01D47AE8 ORR X20, X8, 0xF
	0x01D47AEC MOVN W10, 0x0
	0x01D47AF0 ADD X1, X31, 0x20
	0x01D47AF4 MOV X0, X20
	0x01D47AF8 STUR V0, [X31 + 0x28]
	0x01D47AFC STP X9, X19, [X31 + 0x38]
	0x01D47B00 STR W10, [X31 + 0x20]
	0x01D47B04 BL 0x212CC30
	0x01D47B08 LDR X1, [X21]
	0x01D47B0C MOV X0, X20
	0x01D47B10 BL 0x263AB0C
	0x01D47B14 LDP X20, X19, [X31 + 0xA0]
	0x01D47B18 LDP X22, X21, [X31 + 0x90]
	0x01D47B1C LDR X30, [X31 + 0x80]
	0x01D47B20 ADD X31, X31, 0xB0
	0x01D47B24 RET
	0x01D47B28 SUB X31, X31, 0x80
	0x01D47B2C STP X30, X21, [X31 + 0x60]
	0x01D47B30 STP X20, X19, [X31 + 0x70]
	0x01D47B34 ADRP X20, 0x2691000
	0x01D47B38 ADRP X19, 0x23AD000
	0x01D47B3C LDRB W8, [X20 + 0x774]
	0x01D47B40 LDR X19, [X19 + 0x698]
	0x01D47B44 TBNZ X8, 0x0, 0x1D47B80
	0x01D47B48 ADRP X0, 0x23AD000
	0x01D47B4C LDR X0, [X0 + 0x6A0]
	0x01D47B50 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2692000
	006 Move X21, 0x23AD000
	007 Move W8, [X20+1902]
	008 Move X21, [X21+1608]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x23AD000
	015 Move X0, [X0+1608]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1902], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Call App.get_api
	025 Move X20, X0
	026 Call App.get_apiSession
	027 Compare X20, 0
	028 JumpIfEqual {39}
	029 Move X1, X0
	030 Move X0, X20
	031 Move X2, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X3, X31
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Call AnimalCompanyAPI.GetProductsAsync, X0, X1, X2
	038 Return X0
	039 Call 0x1C17F20

Method: System.String <ExecuteAsync>b__0_0(AnimalCompany.ProductState p)

Disassembly:
	0x01D47B54 ADRP X0, 0x23AD000
	0x01D47B58 LDR X0, [X0 + 0x6B8]
	0x01D47B5C BL 0x1C16CF4
	0x01D47B60 ADRP X0, 0x23AD000
	0x01D47B64 LDR X0, [X0 + 0x6B0]
	0x01D47B68 BL 0x1C16CF4
	0x01D47B6C ADRP X0, 0x23AD000
	0x01D47B70 LDR X0, [X0 + 0x698]
	0x01D47B74 BL 0x1C16CF4
	0x01D47B78 MOVZ W8, 0x1
	0x01D47B7C STRB W8, [X20 + 0x774]
	0x01D47B80 LDR X0, [X19]
	0x01D47B84 MOVI V0.2D, 0x0
	0x01D47B88 STP V0, V0, [X31 + 0x40]
	0x01D47B8C STP V0, V0, [X31 + 0x20]
	0x01D47B90 ADRP X21, 0x23AD000
	0x01D47B94 ADRP X19, 0x23AD000
	0x01D47B98 ADRP X20, 0x23AD000
	0x01D47B9C LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2692000
	005 Move W8, [X20+1903]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x23AD000
	012 Move X0, [X0+3528]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1903], W8
	016 Compare X19, 0
	017 JumpIfEqual {26}
	018 Move X8, [X19+72]
	019 Compare X8, 0
	020 JumpIfEqual {26}
	021 Move X0, [X8+80]
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return X0
	026 Call 0x1C17F20

