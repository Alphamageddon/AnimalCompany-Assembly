Type: AnimalCompany.JoinedRoomAction

Method: System.Void .ctor(System.String roomCode, System.Collections.Generic.Dictionary`2<System.Int32, System.String> players)

Disassembly:
	0x01DBAD80 ADRP X0, 0x233D000
	0x01DBAD84 LDR X0, [X0 + 0xD98]
	0x01DBAD88 BL 0x1C16CF4
	0x01DBAD8C ADRP X0, 0x233D000
	0x01DBAD90 LDR X0, [X0 + 0xDA0]
	0x01DBAD94 BL 0x1C16CF4
	0x01DBAD98 ADRP X0, 0x233C000
	0x01DBAD9C LDR X0, [X0 + 0xD28]
	0x01DBADA0 BL 0x1C16CF4
	0x01DBADA4 ADRP X0, 0x2339000
	0x01DBADA8 LDR X0, [X0 + 0xDA0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move X19, X2
	008 Move X21, X0
	009 Call BaseAction..ctor, X0
	010 Move [X21+24], X20
	011 Move [X21+32], X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return 

Method: System.Void Execute(AnimalCompany.AppState state)

Disassembly:
	0x01DBADAC BL 0x1C16CF4
	0x01DBADB0 ADRP X0, 0x233D000
	0x01DBADB4 LDR X0, [X0 + 0xDA8]
	0x01DBADB8 BL 0x1C16CF4
	0x01DBADBC ADRP X0, 0x233B000
	0x01DBADC0 LDR X0, [X0 + 0x88]
	0x01DBADC4 BL 0x1C16CF4
	0x01DBADC8 ADRP X0, 0x233B000
	0x01DBADCC LDR X0, [X0 + 0x98]
	0x01DBADD0 BL 0x1C16CF4
	0x01DBADD4 ADRP X0, 0x233D000
	0x01DBADD8 LDR X0, [X0 + 0x8F0]
	0x01DBADDC BL 0x1C16CF4
	0x01DBADE0 MOVZ W8, 0x1
	0x01DBADE4 STRB W8, [X21 + 0xB41]
	0x01DBADE8 LDR X8, [X20]
	0x01DBADEC ADRP X22, 0x233D000
	0x01DBADF0 ADRP X23, 0x233D000
	0x01DBADF4 ADRP X21, 0x233D000
	0x01DBADF8 LDR X8, [X8 + 0xB8]
	0x01DBADFC LDR X9, [X8]
	0x01DBAE00 LDR X22, [X22 + 0x8F0]
	0x01DBAE04 LDR X23, [X23 + 0xDA8]
	0x01DBAE08 LDR X21, [X21 + 0xD90]
	0x01DBAE0C STR X19, [X8 + 0x38]
	0x01DBAE10 CBNZ X9, 0x1DBAE78
	0x01DBAE14 MOV X0, X31
	0x01DBAE18 BL 0x337684C
	0x01DBAE1C STP X0, X1, [X31 + 0x10]
	0x01DBAE20 ADD X0, X31, 0x10
	0x01DBAE24 MOV X1, X31
	0x01DBAE28 BL 0x33785D8
	0x01DBAE2C LDR X8, [X20]
	0x01DBAE30 MOV X2, X31
	0x01DBAE34 LDR X8, [X8 + 0xB8]
	0x01DBAE38 STR X0, [X8]
	0x01DBAE3C LDR X8, [X20]
	0x01DBAE40 ADD X0, X31, 0x0
	0x01DBAE44 LDR X8, [X8 + 0xB8]
	0x01DBAE48 LDR X1, [X8]
	0x01DBAE4C STP X31, X31, [X31 + 0x10]
	0x01DBAE50 STP X31, X31, [X31]
	0x01DBAE54 BL 0x3376898
	0x01DBAE58 LDR V0, [X31]
	0x01DBAE5C ADD X0, X31, 0x10
	0x01DBAE60 MOV X1, X31
	0x01DBAE64 STR V0, [X31 + 0x1]
	0x01DBAE68 BL 0x33788AC
	0x01DBAE6C LDR X8, [X20]
	0x01DBAE70 LDR X8, [X8 + 0xB8]
	0x01DBAE74 STR W0, [X8 + 0x8]
	0x01DBAE78 LDR X8, [X22]
	0x01DBAE7C LDR X0, [X23]
	0x01DBAE80 LDR X8, [X8 + 0xB8]
	0x01DBAE84 LDR X20, [X8 + 0x8]
	0x01DBAE88 BL 0x1C16F10
	0x01DBAE8C LDR X2, [X21]
	0x01DBAE90 MOV X1, X19
	0x01DBAE94 MOV X21, X0
	0x01DBAE98 BL 0x1DAFED4
	0x01DBAE9C MOV X0, X20
	0x01DBAEA0 MOV X1, X21
	0x01DBAEA4 MOV X2, X31
	0x01DBAEA8 BL 0x33C0DE4
	0x01DBAEAC CBZ X0, 0x1DBAEDC
	0x01DBAEB0 LDR X1, [X23]
	0x01DBAEB4 LDR X8, [X0]
	0x01DBAEB8 CMP X8, X1
	0x01DBAEBC B.NE 0x1DBAED8
	0x01DBAEC0 LDR X8, [X22]
	0x01DBAEC4 LDR X8, [X8 + 0xB8]
	0x01DBAEC8 STR X0, [X8 + 0x8]
	0x01DBAECC LDR X8, [X0]
	0x01DBAED0 CMP X8, X1
	0x01DBAED4 B.EQ 0x1DBAEE8
	0x01DBAED8 BL 0x1C171E0
	0x01DBAEDC LDR X8, [X22]
	0x01DBAEE0 LDR X8, [X8 + 0xB8]
	0x01DBAEE4 STR X0, [X8 + 0x8]
	0x01DBAEE8 ADRP X8, 0x233B000
	0x01DBAEEC LDR X8, [X8 + 0x88]
	0x01DBAEF0 ADRP X20, 0x2339000
	0x01DBAEF4 ADRP X21, 0x233B000
	0x01DBAEF8 LDR X0, [X8]
	0x01DBAEFC LDR X20, [X20 + 0xAB0]
	0x01DBAF00 LDR X21, [X21 + 0x98]
	0x01DBAF04 BL 0x1C16F10
	0x01DBAF08 MOVZ W8, 0x1
	0x01DBAF0C MOV X1, X31
	0x01DBAF10 MOV X22, X0
	0x01DBAF14 STRB W8, [X0 + 0x10]
	0x01DBAF18 BL 0x33BDD8C
	0x01DBAF1C LDRB W8, [X19 + 0x30]
	0x01DBAF20 MOVZ W1, 0x1
	0x01DBAF24 STRB W8, [X22 + 0x10]
	0x01DBAF28 LDR X0, [X20]
	0x01DBAF2C BL 0x1C16D6C
	0x01DBAF30 LDR X8, [X21]
	0x01DBAF34 LDR X23, [X19 + 0x28]
	0x01DBAF38 MOV X20, X0
	0x01DBAF3C MOV X0, X8
	0x01DBAF40 BL 0x1C16F10
	0x01DBAF44 MOV X1, X31
	0x01DBAF48 MOV X21, X0
	0x01DBAF4C BL 0x1D36B98
	0x01DBAF50 STP X23, X22, [X21 + 0x18]
	0x01DBAF54 CBZ X20, 0x1DBB124
	0x01DBAF58 LDR X8, [X20]
	0x01DBAF5C MOV X0, X21
	0x01DBAF60 LDR X1, [X8 + 0x40]
	0x01DBAF64 BL 0x1C16E00
	0x01DBAF68 CBZ X0, 0x1DBB12C
	0x01DBAF6C LDR W8, [X20 + 0x18]
	0x01DBAF70 CBZ W8, 0x1DBB128
	0x01DBAF74 ADRP X23, 0x2339000
	0x01DBAF78 LDR X23, [X23 + 0x648]
	0x01DBAF7C STR X21, [X20 + 0x20]
	0x01DBAF80 ADRP X25, 0x2339000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X21, 0x261F000
	011 Move W8, [X21+2863]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {44}
	018 Move X0, 0x233E000
	019 Move X0, [X0+3296]
	020 Call 0x1C17CF4
	021 Move X0, 0x233E000
	022 Move X0, [X0+3304]
	023 Call 0x1C17CF4
	024 Move X0, 0x233E000
	025 Move X0, [X0+3312]
	026 Call 0x1C17CF4
	027 Move X0, 0x233E000
	028 Move X0, [X0+3320]
	029 Call 0x1C17CF4
	030 Move X0, 0x233E000
	031 Move X0, [X0+3328]
	032 Call 0x1C17CF4
	033 Move X0, 0x233E000
	034 Move X0, [X0+3336]
	035 Call 0x1C17CF4
	036 Move X0, 0x233E000
	037 Move X0, [X0+3344]
	038 Call 0x1C17CF4
	039 Move X0, 0x233A000
	040 Move X0, [X0+2304]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X21+2863], W8
	044 NotImplemented "Instruction MOVI not yet implemented."
	045 Move [X31+32], X31
	046 Move [X31], V0
	047 Move [X31+8], V0
	048 Compare X19, 0
	049 JumpIfEqual {110}
	050 Move X8, [X19+224]
	051 Compare X8, 0
	052 JumpIfEqual {110}
	053 Move X0, [X8+80]
	054 Compare X0, 0
	055 JumpIfEqual {110}
	056 Move X8, 0x233A000
	057 Move X8, [X8+2304]
	058 Move X1, [X20+24]
	059 Move X2, [X8]
	060 Call StatePrimitive`1<Object>.set_value, X0, X1
	061 Move X0, [X20+32]
	062 Compare X0, 0
	063 JumpIfEqual {110}
	064 Move X8, 0x233E000
	065 Move X8, [X8+3296]
	066 Move X22, 0x233E000
	067 Move X23, 0x233E000
	068 Move X21, 0x233E000
	069 Move X1, [X8]
	070 Move X22, [X22+3312]
	071 Move X23, [X23+3344]
	072 Move X21, [X21+3304]
	073 Add X8, X31, 0
	074 Call Dictionary`2<Int32, Object>.GetEnumerator, X0
	075 Move X1, [X22]
	076 Add X0, X31, 0
	077 Call Enumerator<Int32, Object>.MoveNext, X0
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {97}
	082 Move W24, [X31+16]
	083 Move X25, [X31+24]
	084 Move X0, [X23]
	085 Call 0x1C17F10
	086 Move X20, X0
	087 Move X1, X31
	088 Call BaseAction..ctor, X0
	089 Move X8, [X20]
	090 Move [X20+20], W24
	091 Move [X20+24], X25
	092 Move X9, [X8+424]
	093 Move X2, [X8+432]
	094 Move X0, X20
	095 Move X1, X19
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move X1, [X21]
	098 Add X0, X31, 0
	099 Call Enumerator<Int32, Object>.Dispose, X0
	100 Move X20, [X31+96]
	101 Move X19, [X31+104]
	102 Move X22, [X31+80]
	103 Move X21, [X31+88]
	104 Move X24, [X31+64]
	105 Move X23, [X31+72]
	106 Move X30, [X31+48]
	107 Move X25, [X31+56]
	108 Add X31, X31, 112
	109 Return 
	110 Call 0x1C17F20
	111 Move X19, X0
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X0, X19
	114 Call 0x3EB2AD0
	115 Move X20, [X0]
	116 Call 0x3EB2AE0
	117 Move X1, [X21]
	118 Add X0, X31, 0
	119 Call Enumerator<Int32, Object>.Dispose, X0
	120 Compare X20, 0
	121 JumpIfEqual {100}
	122 Move X0, X20
	123 Call 0x1C17F18
	124 Move X20, X31
	125 Move X19, X0
	126 Move X1, [X21]
	127 Add X0, X31, 0
	128 Call Enumerator<Int32, Object>.Dispose, X0
	129 Compare X20, 0
	130 JumpIfNotEqual {133}
	131 Move X0, X19
	132 Call 0x1D2D690
	133 Move X0, X20
	134 Call 0x1C17F18
	135 Call 0x1991590

