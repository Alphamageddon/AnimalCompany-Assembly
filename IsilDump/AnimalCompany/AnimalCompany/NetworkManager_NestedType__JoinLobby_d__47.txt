Type: AnimalCompany.NetworkManager/<JoinLobby>d__47

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01CBD130 LDR X8, [X8 + 0x100]
	0x01CBD134 LDR X3, [X8]
	0x01CBD138 ADD X2, X31, 0x78
	0x01CBD13C BL 0x28BE628
	0x01CBD140 TBZ X0, 0x0, 0x1CBD210
	0x01CBD144 LDR X8, [X31 + 0x78]
	0x01CBD148 CBZ X8, 0x1CBD3AC
	0x01CBD14C LDR X8, [X8 + 0x78]
	0x01CBD150 CBZ X8, 0x1CBD3A8
	0x01CBD154 LDRSW X9, [X31 + 0x84]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01CBF900 LDP X22, X21, [X31 + 0xE0]

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01CBF904 LDP X24, X23, [X31 + 0xD0]
	0x01CBF908 LDP X30, X25, [X31 + 0xC0]
	0x01CBF90C LDP D9, D8, [X31 + 0xB0]
	0x01CBF910 LDP D11, D10, [X31 + 0xA0]
	0x01CBF914 LDP D13, D12, [X31 + 0x90]
	0x01CBF918 LDR V14, [X31 + 0x80]
	0x01CBF91C ADD X31, X31, 0x100
	0x01CBF920 RET
	0x01CBF924 BL 0x1B6EA24
	0x01CBF928 STR X30, [X31 - 0x10]!
	0x01CBF92C LDR X0, [X0 + 0x20]
	0x01CBF930 CBZ X0, 0x1CBF944
	0x01CBF934 MOVZ W2, 0x1
	0x01CBF938 MOV X3, X31
	0x01CBF93C LDR X30, [X31], #0x10
	0x01CBF940 B 0x39656D0
	0x01CBF944 BL 0x1B6EA1C
	0x01CBF948 SUB X31, X31, 0x1B0
	0x01CBF94C STP X29, X30, [X31 + 0x180]
	0x01CBF950 STP X22, X21, [X31 + 0x190]
	0x01CBF954 STP X20, X19, [X31 + 0x1A0]
	0x01CBF958 MOVI V0.2D, 0x0
	0x01CBF95C STP V0, V0, [X31 + 0x160]
	0x01CBF960 STP V0, V0, [X31 + 0x140]
	0x01CBF964 MOV X20, X0
	0x01CBF968 LDR X0, [X0 + 0x30]
	0x01CBF96C CBZ X0, 0x1CBFA70
	0x01CBF970 MOV W21, W1
	0x01CBF974 MOV X1, X31
	0x01CBF978 MOV X19, X2
	0x01CBF97C BL 0x3A7F6B0
	0x01CBF980 CBZ X0, 0x1CBFA70
	0x01CBF984 LDR W8, [X0 + 0x18]
	0x01CBF988 CMP W8, W21
	0x01CBF98C B.LS 0x1CBFA74
	0x01CBF990 SXTW X22, W21
	0x01CBF994 ADD X8, X0, X22, 0x3, LSL
	0x01CBF998 LDR X0, [X8 + 0x20]
	0x01CBF99C CBZ X0, 0x1CBFA70
	0x01CBF9A0 ADD X8, X31, 0xC0
	0x01CBF9A4 MOV X1, X31
	0x01CBF9A8 BL 0x3AA7294
	0x01CBF9AC LDP V0, V1, [X31 + 0xC0]
	0x01CBF9B0 LDP V2, V3, [X31 + 0xE0]
	0x01CBF9B4 STP V0, V1, [X31 + 0x100]
	0x01CBF9B8 STP V2, V3, [X31 + 0x120]
	0x01CBF9BC LDR X0, [X20 + 0x30]
	0x01CBF9C0 CBZ X0, 0x1CBFA70
	0x01CBF9C4 MOV X1, X31
	0x01CBF9C8 BL 0x3A7F6EC
	0x01CBF9CC CBZ X0, 0x1CBFA70
	0x01CBF9D0 MOV X1, X31
	0x01CBF9D4 BL 0x3A7FE34
	0x01CBF9D8 CBZ X0, 0x1CBFA70
	0x01CBF9DC LDR W8, [X0 + 0x18]
	0x01CBF9E0 CMP W8, W21
	0x01CBF9E4 B.LS 0x1CBFA74
	0x01CBF9E8 ADD X8, X0, X22, 0x6, LSL
	0x01CBF9EC LDP V2, V3, [X8 + 0x20]
	0x01CBF9F0 LDP V4, V5, [X8 + 0x40]
	0x01CBF9F4 LDP V0, V1, [X31 + 0x100]
	0x01CBF9F8 ADD X8, X31, 0x80
	0x01CBF9FC STP V2, V3, [X31 + 0xC0]
	0x01CBFA00 STP V4, V5, [X31 + 0xE0]
	0x01CBFA04 STP V0, V1, [X31 + 0x40]
	0x01CBFA08 LDP V0, V1, [X31 + 0x120]
	0x01CBFA0C LDP V2, V3, [X31 + 0xE0]
	0x01CBFA10 LDP V4, V5, [X31 + 0xC0]
	0x01CBFA14 ADD X0, X31, 0x40
	0x01CBFA18 ADD X1, X31, 0x0
	0x01CBFA1C MOV X2, X31
	0x01CBFA20 STP V0, V1, [X31 + 0x60]
	0x01CBFA24 STP V2, V3, [X31 + 0x20]
	0x01CBFA28 STP V4, V5, [X31]
	0x01CBFA2C BL 0x3A90320
	0x01CBFA30 LDP V0, V1, [X31 + 0x80]
	0x01CBFA34 LDP V2, V3, [X31 + 0xA0]
	0x01CBFA38 ADD X0, X31, 0x140
	0x01CBFA3C MOV X1, X31
	0x01CBFA40 STP V0, V1, [X31 + 0x140]
	0x01CBFA44 STP V2, V3, [X31 + 0x160]
	0x01CBFA48 LDP S0, S1, [X20 + 0x5C]
	0x01CBFA4C LDR V2, [X20 + 0x64]
	0x01CBFA50 BL 0x3A90598
	0x01CBFA54 STP S0, S1, [X19]
	0x01CBFA58 STR S2, [X19 + 0x8]
	0x01CBFA5C LDP X20, X19, [X31 + 0x1A0]
	0x01CBFA60 LDP X22, X21, [X31 + 0x190]
	0x01CBFA64 LDP X29, X30, [X31 + 0x180]
	0x01CBFA68 ADD X31, X31, 0x1B0
	0x01CBFA6C RET
	0x01CBFA70 BL 0x1B6EA1C
	0x01CBFA74 BL 0x1B6EA24
	0x01CBFA78 SUB X31, X31, 0x90
	0x01CBFA7C STP D15, D14, [X31 + 0x30]
	0x01CBFA80 STP D13, D12, [X31 + 0x40]
	0x01CBFA84 STP D11, D10, [X31 + 0x50]
	0x01CBFA88 STP D9, D8, [X31 + 0x60]
	0x01CBFA8C STP X30, X21, [X31 + 0x70]
	0x01CBFA90 STP X20, X19, [X31 + 0x80]
	0x01CBFA94 ADD X19, X0, 0x38
	0x01CBFA98 MOV X20, X0
	0x01CBFA9C MOV X0, X19
	0x01CBFAA0 MOV X1, X31
	0x01CBFAA4 BL 0x3A82AF4
	0x01CBFAA8 LDR X8, [X20 + 0x68]
	0x01CBFAAC CBZ X8, 0x1CBFC74
	0x01CBFAB0 LDR W9, [X8 + 0x18]
	0x01CBFAB4 CBZ W9, 0x1CBFC78
	0x01CBFAB8 MOV W1, W0
	0x01CBFABC ADD X2, X8, 0x20
	0x01CBFAC0 MOV X0, X20
	0x01CBFAC4 BL 0x1CBF948
	0x01CBFAC8 MOV X0, X19
	0x01CBFACC MOV X1, X31
	0x01CBFAD0 BL 0x3A82AFC
	0x01CBFAD4 LDR X8, [X20 + 0x68]
	0x01CBFAD8 CBZ X8, 0x1CBFC74
	0x01CBFADC LDR W9, [X8 + 0x18]
	0x01CBFAE0 CMP W9, 0x1
	0x01CBFAE4 B.LS 0x1CBFC78
	0x01CBFAE8 MOV W1, W0
	0x01CBFAEC ADD X2, X8, 0x2C
	0x01CBFAF0 MOV X0, X20
	0x01CBFAF4 BL 0x1CBF948
	0x01CBFAF8 MOV X0, X19
	0x01CBFAFC MOV X1, X31
	0x01CBFB00 BL 0x3A82B04
	0x01CBFB04 LDR X8, [X20 + 0x68]
	0x01CBFB08 CBZ X8, 0x1CBFC74
	0x01CBFB0C LDR W9, [X8 + 0x18]
	0x01CBFB10 CMP W9, 0x2
	0x01CBFB14 B.LS 0x1CBFC78
	0x01CBFB18 MOV W1, W0
	0x01CBFB1C ADD X2, X8, 0x38
	0x01CBFB20 MOV X0, X20
	0x01CBFB24 BL 0x1CBF948
	0x01CBFB28 MOV X0, X19
	0x01CBFB2C MOV X1, X31
	0x01CBFB30 BL 0x3A82B0C
	0x01CBFB34 LDR X8, [X20 + 0x68]
	0x01CBFB38 CBZ X8, 0x1CBFC74
	0x01CBFB3C LDR W9, [X8 + 0x18]
	0x01CBFB40 CMP W9, 0x3
	0x01CBFB44 B.LS 0x1CBFC78

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2565000
	007 Move W8, [X20+1335]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {36}
	013 Move X0, 0x228F000
	014 Move X0, [X0+1576]
	015 Call 0x1B6F7F0
	016 Move X0, 0x228F000
	017 Move X0, [X0+2736]
	018 Call 0x1B6F7F0
	019 Move X0, 0x228F000
	020 Move X0, [X0+2328]
	021 Call 0x1B6F7F0
	022 Move X0, 0x2290000
	023 Move X0, [X0+744]
	024 Call 0x1B6F7F0
	025 Move X0, 0x2291000
	026 Move X0, [X0+576]
	027 Call 0x1B6F7F0
	028 Move X0, 0x2291000
	029 Move X0, [X0+392]
	030 Call 0x1B6F7F0
	031 Move X0, 0x2291000
	032 Move X0, [X0+584]
	033 Call 0x1B6F7F0
	034 Move W8, 1
	035 Move [X20+1335], W8
	036 Move [X31+8], W31
	037 Move W8, [X19+16]
	038 Move X20, [X19+32]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W0, W31
	042 Compare W8, 0
	043 JumpIfNotEqual {159}
	044 Move TEMP, 0
	045 Not TEMP
	046 Move W8, TEMP
	047 Move [X19+16], W8
	048 Compare X20, 0
	049 JumpIfEqual {165}
	050 Move V0, [X20+192]
	051 NotImplemented "Instruction FCMP not yet implemented."
	052 Move X8, 0x228F000
	053 Move X8, [X8+2328]
	054 Add X1, X31, 12
	055 Move [X31+12], S0
	056 Move X0, [X8]
	057 Call 0x1B6F900
	058 Move X8, 0x2291000
	059 Move X8, [X8+576]
	060 Move X1, X0
	061 Move X2, X31
	062 Move X8, [X8]
	063 Move X0, X8
	064 Call String.Format, X0, X1
	065 Move X8, 0x228F000
	066 Move X8, [X8+1576]
	067 Move X21, X0
	068 Move X8, [X8]
	069 Move W9, [X8+224]
	070 Compare W9, 0
	071 JumpIfNotEqual {74}
	072 Move X0, X8
	073 Call 0x1B6F8F8
	074 Move X8, 0x2291000
	075 Move X9, 0x2291000
	076 Move X8, [X8+392]
	077 Move X9, [X9+584]
	078 Move W0, 4096
	079 Move W5, 200
	080 Move X3, [X8]
	081 Move X4, [X9]
	082 Move X1, X21
	083 Move X2, X31
	084 Move X6, X31
	085 Call Log.Debug, X0, X1, X2, X3, X4, X5
	086 Move X8, 0x2290000
	087 Move V8, [X20+192]
	088 Move X8, [X8+744]
	089 Move X0, [X8]
	090 Call 0x1B6FA0C
	091 Move V0, V8
	092 Move X1, X31
	093 Move X20, X0
	094 Call WaitForSeconds..ctor, X0, V0
	095 Move W0, 1
	096 Move [X19+24], X20
	097 Move [X19+16], W0
	098 Move TEMP, 0
	099 Not TEMP
	100 Move W8, TEMP
	101 Move X0, X31
	102 Move [X19+16], W8
	103 Call SceneRef.get_None
	104 Compare X20, 0
	105 JumpIfNotEqual {152}
	106 Move TEMP, 0
	107 Not TEMP
	108 Move W8, TEMP
	109 Move [X19+16], W8
	110 Compare X20, 0
	111 JumpIfEqual {165}
	112 Add X0, X20, 184
	113 Move X1, X31
	114 Call SceneRef.get_IsValid, X0
	115 Move TEMP, X0
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfNotEqual {153}
	119 Move X21, 0x228F000
	120 Move X21, [X21+2736]
	121 Move X0, [X21]
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfNotEqual {126}
	125 Call 0x1B6F8F8
	126 Move W0, 4
	127 Move X1, X31
	128 Call SceneManager.GetSceneByBuildIndex, X0
	129 Move [X31+8], W0
	130 Add X0, X31, 8
	131 Move X1, X31
	132 Call Scene.get_isLoaded, X0
	133 Move TEMP, X0
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfNotEqual {150}
	137 Move X0, [X21]
	138 Move W20, [X31+8]
	139 Move W8, [X0+224]
	140 Compare W8, 0
	141 JumpIfNotEqual {143}
	142 Call 0x1B6F8F8
	143 Move X0, X20
	144 Move X1, X31
	145 Call SceneManager.UnloadSceneAsync, X0
	146 Move W8, 2
	147 Move [X19+24], X0
	148 Move [X19+16], W8
	149 Move W0, 1
	150 Move X0, X31
	151 Call SceneRef.get_None
	152 Move [X20+184], W0
	153 Move X2, [X19+48]
	154 Move W1, [X19+40]
	155 Move X0, X20
	156 Move X3, X31
	157 Call NetworkManager.StartGame, X0, X1, X2, X3
	158 Move W0, W31
	159 Move X20, [X31+32]
	160 Move X19, [X31+40]
	161 Move X30, [X31+16]
	162 Move X21, [X31+24]
	163 Move V8, [X31+48]
	164 Return X0
	165 Call 0x1B6FA1C

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x01CBFB48 MOV W1, W0
	0x01CBFB4C ADD X2, X8, 0x44

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01CBFB50 MOV X0, X20
	0x01CBFB54 BL 0x1CBF948
	0x01CBFB58 LDR X8, [X20 + 0x68]
	0x01CBFB5C CBZ X8, 0x1CBFC74
	0x01CBFB60 LDR W9, [X8 + 0x18]
	0x01CBFB64 CBZ W9, 0x1CBFC78
	0x01CBFB68 LDR X21, [X20 + 0x28]
	0x01CBFB6C LDR V8, [X8 + 0x20]
	0x01CBFB70 LDR V9, [X8 + 0x28]
	0x01CBFB74 MOV X0, X19
	0x01CBFB78 MOV X1, X31
	0x01CBFB7C BL 0x3A82AD4
	0x01CBFB80 LDR X8, [X20 + 0x68]
	0x01CBFB84 CBZ X8, 0x1CBFC74

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x228F000
	004 Move X0, [X0+2448]
	005 Call 0x1B6F804
	006 Call 0x1B6FA0C
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2291000
	011 Move X0, [X0+592]
	012 Call 0x1B6F804
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1B6F8E8

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01CBFB88 LDR W9, [X8 + 0x18]
	0x01CBFB8C STR V0, [X31 + 0x2]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

