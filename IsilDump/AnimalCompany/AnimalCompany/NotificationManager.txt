Type: AnimalCompany.NotificationManager

Method: Nakama.ISocket get_socket()

Disassembly:
	0x01D44B94 MOV X19, X0
	0x01D44B98 TBNZ X8, 0x0, 0x1D44C10
	0x01D44B9C ADRP X0, 0x23AF000
	0x01D44BA0 LDR X0, [X0 + 0xE00]
	0x01D44BA4 BL 0x1C16CF4
	0x01D44BA8 ADRP X0, 0x23B0000
	0x01D44BAC LDR X0, [X0 + 0x3F8]
	0x01D44BB0 BL 0x1C16CF4
	0x01D44BB4 ADRP X0, 0x23B0000
	0x01D44BB8 LDR X0, [X0 + 0x400]
	0x01D44BBC BL 0x1C16CF4
	0x01D44BC0 ADRP X0, 0x23AF000
	0x01D44BC4 LDR X0, [X0 + 0xE18]
	0x01D44BC8 BL 0x1C16CF4
	0x01D44BCC ADRP X0, 0x23B0000
	0x01D44BD0 LDR X0, [X0 + 0x408]
	0x01D44BD4 BL 0x1C16CF4
	0x01D44BD8 ADRP X0, 0x23AF000
	0x01D44BDC LDR X0, [X0 + 0xE28]
	0x01D44BE0 BL 0x1C16CF4
	0x01D44BE4 ADRP X0, 0x23AF000
	0x01D44BE8 LDR X0, [X0 + 0xE30]
	0x01D44BEC BL 0x1C16CF4
	0x01D44BF0 ADRP X0, 0x23AF000
	0x01D44BF4 LDR X0, [X0 + 0xE40]
	0x01D44BF8 BL 0x1C16CF4
	0x01D44BFC ADRP X0, 0x23AF000
	0x01D44C00 LDR X0, [X0 + 0x900]
	0x01D44C04 BL 0x1C16CF4
	0x01D44C08 MOVZ W8, 0x1
	0x01D44C0C STRB W8, [X21 + 0x75F]
	0x01D44C10 LDR X19, [X19 + 0x18]
	0x01D44C14 CBZ X19, 0x1D44F10
	0x01D44C18 ADRP X10, 0x23B0000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2695000
	005 Move X19, 0x23B0000
	006 Move W8, [X20+1875]
	007 Move X19, [X19+1624]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x23B0000
	013 Move X0, [X0+1624]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1875], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, 0x2695000
	023 Move W8, [X20+1934]
	024 Compare W8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, 0x23B0000
	027 Move X0, [X0+1624]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+1934], W8
	031 Move X0, [X19]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X19]
	037 Move X8, [X0+184]
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X0, [X8+40]
	041 Move X30, [X31+32]
	042 Return X0

Method: System.Void Awake()

Disassembly:
	0x01D44C1C LDR X8, [X19]
	0x01D44C20 LDR X10, [X10 + 0x3F8]
	0x01D44C24 LDRH W9, [X8 + 0x12E]
	0x01D44C28 LDR X1, [X10]
	0x01D44C2C CBZ X9, 0x1D44C50
	0x01D44C30 LDR X10, [X8 + 0xB0]
	0x01D44C34 ADD X10, X10, 0x8
	0x01D44C38 LDUR X11, [X10 - 0x8]
	0x01D44C3C CMP X11, X1
	0x01D44C40 B.EQ 0x1D44C60
	0x01D44C44 SUBS X9, X9, 0x1
	0x01D44C48 ADD X10, X10, 0x10
	0x01D44C4C B.NE 0x1D44C38
	0x01D44C50 MOV X0, X19
	0x01D44C54 MOV W2, W31
	0x01D44C58 BL 0x1C5C788
	0x01D44C5C B 0x1D44C6C
	0x01D44C60 LDRSW X9, [X10]
	0x01D44C64 ADD X8, X8, X9, 0x4, LSL
	0x01D44C68 ADD X0, X8, 0x138
	0x01D44C6C LDP X8, X1, [X0]
	0x01D44C70 MOV X0, X19
	0x01D44C74 BLR X8
	0x01D44C78 STR X0, [X31]
	0x01D44C7C CBZ X0, 0x1D44F14
	0x01D44C80 ADRP X28, 0x23AF000
	0x01D44C84 ADRP X24, 0x23AF000
	0x01D44C88 LDR X28, [X28 + 0xE40]
	0x01D44C8C LDR X24, [X24 + 0xE28]
	0x01D44C90 MOV X22, X0
	0x01D44C94 LDR X8, [X22]
	0x01D44C98 ADRP X10, 0x23AF000
	0x01D44C9C LDRH W9, [X8 + 0x12E]
	0x01D44CA0 LDR X10, [X10 + 0xE18]
	0x01D44CA4 LDR X1, [X10]
	0x01D44CA8 CBZ X9, 0x1D44CCC
	0x01D44CAC LDR X10, [X8 + 0xB0]
	0x01D44CB0 ADD X10, X10, 0x8
	0x01D44CB4 LDUR X11, [X10 - 0x8]
	0x01D44CB8 CMP X11, X1
	0x01D44CBC B.EQ 0x1D44CDC
	0x01D44CC0 SUBS X9, X9, 0x1
	0x01D44CC4 ADD X10, X10, 0x10
	0x01D44CC8 B.NE 0x1D44CB4
	0x01D44CCC MOV X0, X22
	0x01D44CD0 MOV W2, W31
	0x01D44CD4 BL 0x1C5C788
	0x01D44CD8 B 0x1D44CE8
	0x01D44CDC LDRSW X9, [X10]
	0x01D44CE0 ADD X8, X8, X9, 0x4, LSL
	0x01D44CE4 ADD X0, X8, 0x138
	0x01D44CE8 LDP X8, X1, [X0]
	0x01D44CEC MOV X0, X22
	0x01D44CF0 BLR X8
	0x01D44CF4 TBZ X0, 0x0, 0x1D44E58
	0x01D44CF8 LDR X8, [X22]
	0x01D44CFC ADRP X10, 0x23B0000
	0x01D44D00 LDRH W9, [X8 + 0x12E]
	0x01D44D04 LDR X10, [X10 + 0x400]
	0x01D44D08 LDR X1, [X10]
	0x01D44D0C CBZ X9, 0x1D44D30
	0x01D44D10 LDR X10, [X8 + 0xB0]
	0x01D44D14 ADD X10, X10, 0x8
	0x01D44D18 LDUR X11, [X10 - 0x8]
	0x01D44D1C CMP X11, X1
	0x01D44D20 B.EQ 0x1D44D40
	0x01D44D24 SUBS X9, X9, 0x1
	0x01D44D28 ADD X10, X10, 0x10
	0x01D44D2C B.NE 0x1D44D18
	0x01D44D30 MOV X0, X22
	0x01D44D34 MOV W2, W31
	0x01D44D38 BL 0x1C5C788
	0x01D44D3C B 0x1D44D4C
	0x01D44D40 LDRSW X9, [X10]
	0x01D44D44 ADD X8, X8, X9, 0x4, LSL
	0x01D44D48 ADD X0, X8, 0x138
	0x01D44D4C LDP X9, X1, [X0]
	0x01D44D50 ADD X8, X31, 0x8
	0x01D44D54 MOV X0, X22
	0x01D44D58 BLR X9
	0x01D44D5C CBZ X20, 0x1D44EF4
	0x01D44D60 LDR X8, [X20 + 0xC0]
	0x01D44D64 CBZ X8, 0x1D44EF8
	0x01D44D68 LDR X0, [X8 + 0x48]
	0x01D44D6C CBZ X0, 0x1D44EE8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x2695000
	009 Move X24, 0x23B0000
	010 Move X19, 0x23B1000
	011 Move X22, 0x23B0000
	012 Move X21, 0x23B0000
	013 Move W8, [X23+1876]
	014 Move X24, [X24+3488]
	015 Move X19, [X19+872]
	016 Move X22, [X22+3504]
	017 Move X21, [X21+1608]
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x23B0000
	024 Move X0, [X0+1608]
	025 Call 0x1C17CF4
	026 Move X0, 0x23B0000
	027 Move X0, [X0+3504]
	028 Call 0x1C17CF4
	029 Move X0, 0x23B1000
	030 Move X0, [X0+872]
	031 Call 0x1C17CF4
	032 Move X0, 0x23B0000
	033 Move X0, [X0+3488]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+1876], W8
	037 Move X0, [X24]
	038 Call 0x1C17F10
	039 Move X2, [X19]
	040 Move X1, X20
	041 Move X3, X31
	042 Move X19, X0
	043 Call ObserverDelegate..ctor, X0, X1, X2
	044 Move X0, [X22]
	045 Move W1, 1
	046 Call 0x1C17D6C
	047 Move X8, [X21]
	048 Move X20, X0
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Move X22, 0x2695000
	055 Move W8, [X22+1927]
	056 Compare W8, 0
	057 JumpIfNotEqual {63}
	058 Move X0, 0x23B0000
	059 Move X0, [X0+1608]
	060 Call 0x1C17CF4
	061 Move W8, 1
	062 Move [X22+1927], W8
	063 Move X0, [X21]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {69}
	067 Call 0x1C17DFC
	068 Move X0, [X21]
	069 Move X8, [X0+184]
	070 Move X8, [X8]
	071 Compare X8, 0
	072 JumpIfEqual {99}
	073 Compare X20, 0
	074 JumpIfEqual {99}
	075 Move X21, [X8+152]
	076 Compare X21, 0
	077 JumpIfEqual {84}
	078 Move X8, [X20]
	079 Move X0, X21
	080 Move X1, [X8+64]
	081 Call 0x1C17E00
	082 Compare X0, 0
	083 JumpIfEqual {101}
	084 Move W8, [X20+24]
	085 Compare W8, 0
	086 JumpIfEqual {100}
	087 Move [X20+32], X21
	088 Move X0, X19
	089 Move X1, X20
	090 Move X20, [X31+48]
	091 Move X19, [X31+56]
	092 Move X22, [X31+32]
	093 Move X21, [X31+40]
	094 Move X24, [X31+16]
	095 Move X23, [X31+24]
	096 Move X30, [X31+64]
	097 Call App.RegisterObserver, X0, X1
	098 Return 
	099 Call 0x1C17F20
	100 Call 0x1C17F28
	101 Call 0x1C17F44
	102 Move X1, X31
	103 Call 0x1C17DEC

Method: System.Void OnDestroy()

Disassembly:
	0x01D44D70 ADRP X8, 0x23B0000
	0x01D44D74 MOV X19, X20
	0x01D44D78 MOV X20, X24
	0x01D44D7C LDP X27, X26, [X31 + 0x8]
	0x01D44D80 LDRB W29, [X31 + 0x21]
	0x01D44D84 LDP W25, W24, [X31 + 0x24]
	0x01D44D88 LDP X22, X21, [X31 + 0x30]
	0x01D44D8C LDR X8, [X8 + 0x408]
	0x01D44D90 LDR X2, [X8]
	0x01D44D94 MOV X1, X27
	0x01D44D98 BL 0x2609E58
	0x01D44D9C MOV X23, X0
	0x01D44DA0 CBZ X0, 0x1D44EEC
	0x01D44DA4 LDR X0, [X23 + 0x48]
	0x01D44DA8 CBZ X0, 0x1D44EE4
	0x01D44DAC ADRP X8, 0x23AF000
	0x01D44DB0 LDR X8, [X8 + 0x900]
	0x01D44DB4 LDR X2, [X8]
	0x01D44DB8 MOV X1, X27
	0x01D44DBC BL 0x265C3F4
	0x01D44DC0 LDR X0, [X23 + 0x50]
	0x01D44DC4 CBZ X0, 0x1D44EFC
	0x01D44DC8 ADRP X8, 0x23AF000
	0x01D44DCC LDR X8, [X8 + 0x900]
	0x01D44DD0 LDR X2, [X8]
	0x01D44DD4 MOV X1, X26
	0x01D44DD8 BL 0x265C3F4
	0x01D44DDC LDR X0, [X23 + 0x58]
	0x01D44DE0 CBZ X0, 0x1D44F00
	0x01D44DE4 ADRP X8, 0x23AF000
	0x01D44DE8 LDR X8, [X8 + 0xE30]
	0x01D44DEC LDR X2, [X8]
	0x01D44DF0 AND W1, W29, 0x1
	0x01D44DF4 BL 0x26518D0
	0x01D44DF8 LDR X0, [X23 + 0x68]
	0x01D44DFC CBZ X0, 0x1D44EF0
	0x01D44E00 LDR X2, [X28]
	0x01D44E04 MOV W1, W25
	0x01D44E08 BL 0x2658054
	0x01D44E0C LDR X0, [X23 + 0x70]
	0x01D44E10 CBZ X0, 0x1D44F04
	0x01D44E14 LDR X2, [X28]
	0x01D44E18 MOV W1, W24
	0x01D44E1C BL 0x2658054
	0x01D44E20 LDR X0, [X23 + 0x78]
	0x01D44E24 CBZ X0, 0x1D44F08
	0x01D44E28 LDR X2, [X20]
	0x01D44E2C MOV X24, X20
	0x01D44E30 MOV X1, X22
	0x01D44E34 BL 0x262D414
	0x01D44E38 LDR X0, [X23 + 0x80]
	0x01D44E3C CBZ X0, 0x1D44F0C
	0x01D44E40 LDR X2, [X24]
	0x01D44E44 LDR X22, [X31]
	0x01D44E48 MOV X1, X21
	0x01D44E4C BL 0x262D414
	0x01D44E50 MOV X20, X19
	0x01D44E54 B 0x1D44C94
	0x01D44E58 MOV X21, X31
	0x01D44E5C CBZ X22, 0x1D44EC0
	0x01D44E60 LDR X8, [X22]
	0x01D44E64 ADRP X10, 0x23AF000
	0x01D44E68 LDRH W9, [X8 + 0x12E]
	0x01D44E6C LDR X10, [X10 + 0xE00]
	0x01D44E70 LDR X1, [X10]
	0x01D44E74 CBZ X9, 0x1D44E98
	0x01D44E78 LDR X10, [X8 + 0xB0]
	0x01D44E7C ADD X10, X10, 0x8
	0x01D44E80 LDUR X11, [X10 - 0x8]
	0x01D44E84 CMP X11, X1
	0x01D44E88 B.EQ 0x1D44EA8
	0x01D44E8C SUBS X9, X9, 0x1
	0x01D44E90 ADD X10, X10, 0x10
	0x01D44E94 B.NE 0x1D44E80
	0x01D44E98 MOV X0, X22
	0x01D44E9C MOV W2, W31
	0x01D44EA0 BL 0x1C5C788
	0x01D44EA4 B 0x1D44EB4
	0x01D44EA8 LDRSW X9, [X10]
	0x01D44EAC ADD X8, X8, X9, 0x4, LSL
	0x01D44EB0 ADD X0, X8, 0x138
	0x01D44EB4 LDP X8, X1, [X0]
	0x01D44EB8 MOV X0, X22
	0x01D44EBC BLR X8
	0x01D44EC0 CBNZ X21, 0x1D44F18
	0x01D44EC4 LDP X20, X19, [X31 + 0x90]
	0x01D44EC8 LDP X22, X21, [X31 + 0x80]
	0x01D44ECC LDP X24, X23, [X31 + 0x70]
	0x01D44ED0 LDP X26, X25, [X31 + 0x60]
	0x01D44ED4 LDP X28, X27, [X31 + 0x50]
	0x01D44ED8 LDP X29, X30, [X31 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x2695000
	008 Move X22, 0x23B0000
	009 Move X20, 0x23B1000
	010 Move X21, 0x23B0000
	011 Move W8, [X23+1877]
	012 Move X22, [X22+3488]
	013 Move X20, [X20+872]
	014 Move X21, [X21+1608]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {40}
	020 Move X0, 0x23B1000
	021 Move X0, [X0+880]
	022 Call 0x1C17CF4
	023 Move X0, 0x23B0000
	024 Move X0, [X0+1608]
	025 Call 0x1C17CF4
	026 Move X0, 0x23B1000
	027 Move X0, [X0+64]
	028 Call 0x1C17CF4
	029 Move X0, 0x23B1000
	030 Move X0, [X0+888]
	031 Call 0x1C17CF4
	032 Move X0, 0x23B1000
	033 Move X0, [X0+872]
	034 Call 0x1C17CF4
	035 Move X0, 0x23B0000
	036 Move X0, [X0+3488]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X23+1877], W8
	040 Move X0, [X22]
	041 Move X23, 0x23B1000
	042 Move X22, 0x23B1000
	043 Move X23, [X23+880]
	044 Move X22, [X22+888]
	045 Call 0x1C17F10
	046 Move X2, [X20]
	047 Move X1, X19
	048 Move X3, X31
	049 Move X20, X0
	050 Call ObserverDelegate..ctor, X0, X1, X2
	051 Move X0, [X21]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X20
	057 Call App.DeregisterObserver, X0
	058 Call NotificationManager.get_socket, X0
	059 Move X8, [X23]
	060 Move X20, X0
	061 Move X0, X8
	062 Call 0x1C17F10
	063 Move X2, [X22]
	064 Move X1, X19
	065 Move X3, X31
	066 Move X21, X0
	067 Call Action`1<Object>..ctor, X0, X1, X2
	068 Compare X20, 0
	069 JumpIfEqual {101}
	070 Move X10, 0x23B1000
	071 Move X8, [X20]
	072 Move X10, [X10+64]
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 Move X1, [X10]
	075 Compare X9, 0
	076 JumpIfEqual {83}
	077 Move X10, [X8+176]
	078 Add X10, X10, 8
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Subtract X9, X9, 1
	082 Add X10, X10, 16
	083 Move W2, 17
	084 Move X0, X20
	085 Call 0x1C5D788
	086 Move W9, [X10]
	087 Add W9, W9, 17
	088 Add X8, X8, W9
	089 Add X0, X8, 312
	090 Move X3, [X0]
	091 Move X2, [X0+8]
	092 Move X0, X20
	093 Move X1, X21
	094 Move X20, [X31+32]
	095 Move X19, [X31+40]
	096 Move X22, [X31+16]
	097 Move X21, [X31+24]
	098 Move X30, [X31+48]
	099 Move X23, [X31+56]
	100 CallNoReturn X3
	101 Call 0x1C17F20

Method: System.Void HandleSocketConnected(SpatialSys.ObservableState.StateChangedEventArgs args)

Disassembly:
	0x01D44EDC ADD X31, X31, 0xA0
	0x01D44EE0 RET
	0x01D44EE4 BL 0x1C16F20
	0x01D44EE8 BL 0x1C16F20
	0x01D44EEC BL 0x1C16F20
	0x01D44EF0 BL 0x1C16F20
	0x01D44EF4 BL 0x1C16F20
	0x01D44EF8 BL 0x1C16F20
	0x01D44EFC BL 0x1C16F20
	0x01D44F00 BL 0x1C16F20
	0x01D44F04 BL 0x1C16F20
	0x01D44F08 BL 0x1C16F20
	0x01D44F0C BL 0x1C16F20
	0x01D44F10 BL 0x1C16F20
	0x01D44F14 BL 0x1C16F20
	0x01D44F18 MOV X0, X21
	0x01D44F1C BL 0x1C16F18
	0x01D44F20 B 0x1D44F6C
	0x01D44F24 B 0x1D44F6C
	0x01D44F28 B 0x1D44F6C
	0x01D44F2C B 0x1D44F6C
	0x01D44F30 B 0x1D44F6C
	0x01D44F34 B 0x1D44F70
	0x01D44F38 B 0x1D44F6C
	0x01D44F3C B 0x1D44F6C
	0x01D44F40 B 0x1D44F6C
	0x01D44F44 B 0x1D44F6C
	0x01D44F48 B 0x1D44F6C
	0x01D44F4C B 0x1D44F6C
	0x01D44F50 B 0x1D44F6C
	0x01D44F54 B 0x1D44F6C
	0x01D44F58 B 0x1D44F6C
	0x01D44F5C B 0x1D44F6C
	0x01D44F60 B 0x1D44F6C
	0x01D44F64 B 0x1D44F6C
	0x01D44F68 B 0x1D44F6C
	0x01D44F6C LDR X22, [X31]
	0x01D44F70 MOV X20, X0
	0x01D44F74 CMP W1, 0x1
	0x01D44F78 B.NE 0x1D44F90
	0x01D44F7C MOV X0, X20
	0x01D44F80 BL 0x3EB1AD0
	0x01D44F84 LDR X21, [X0]
	0x01D44F88 BL 0x3EB1AE0
	0x01D44F8C B 0x1D44E5C
	0x01D44F90 MOV X21, X31
	0x01D44F94 B 0x1D44F9C
	0x01D44F98 MOV X20, X0
	0x01D44F9C LDR X8, [X31]
	0x01D44FA0 CBZ X8, 0x1D45008
	0x01D44FA4 LDR X8, [X31]
	0x01D44FA8 ADRP X10, 0x23AF000
	0x01D44FAC LDR X8, [X8]
	0x01D44FB0 LDRH W9, [X8 + 0x12E]
	0x01D44FB4 LDR X10, [X10 + 0xE00]
	0x01D44FB8 LDR X1, [X10]
	0x01D44FBC CBZ X9, 0x1D44FE0
	0x01D44FC0 LDR X10, [X8 + 0xB0]
	0x01D44FC4 ADD X10, X10, 0x8
	0x01D44FC8 LDUR X11, [X10 - 0x8]
	0x01D44FCC CMP X11, X1
	0x01D44FD0 B.EQ 0x1D44FF0
	0x01D44FD4 SUBS X9, X9, 0x1
	0x01D44FD8 ADD X10, X10, 0x10
	0x01D44FDC B.NE 0x1D44FC8
	0x01D44FE0 LDR X0, [X31]
	0x01D44FE4 MOV W2, W31
	0x01D44FE8 BL 0x1C5C788
	0x01D44FEC B 0x1D44FFC
	0x01D44FF0 LDRSW X9, [X10]
	0x01D44FF4 ADD X8, X8, X9, 0x4, LSL
	0x01D44FF8 ADD X0, X8, 0x138
	0x01D44FFC LDP X8, X1, [X0]
	0x01D45000 LDR X0, [X31]
	0x01D45004 BLR X8
	0x01D45008 CBNZ X21, 0x1D45014
	0x01D4500C MOV X0, X20
	0x01D45010 BL 0x1D2C690
	0x01D45014 MOV X0, X21
	0x01D45018 BL 0x1C16F18
	0x01D4501C BL 0x1990590
	0x01D45020 B 0x1D44F70
	0x01D45024 B 0x1D44F70
	0x01D45028 STR X30, [X31 - 0x20]!
	0x01D4502C STP X20, X19, [X31 + 0x10]
	0x01D45030 MOV X19, X1
	0x01D45034 MOV X1, X31
	0x01D45038 MOV X20, X0
	0x01D4503C BL 0x33BDD8C
	0x01D45040 STR X19, [X20 + 0x18]
	0x01D45044 LDP X20, X19, [X31 + 0x10]
	0x01D45048 LDR X30, [X31], #0x20
	0x01D4504C RET
	0x01D45050 SUB X31, X31, 0x60
	0x01D45054 STR X30, [X31 + 0x10]
	0x01D45058 STP X26, X25, [X31 + 0x20]
	0x01D4505C STP X24, X23, [X31 + 0x30]
	0x01D45060 STP X22, X21, [X31 + 0x40]
	0x01D45064 STP X20, X19, [X31 + 0x50]
	0x01D45068 ADRP X21, 0x2693000
	0x01D4506C LDRB W8, [X21 + 0x760]
	0x01D45070 MOV X20, X1
	0x01D45074 MOV X19, X0
	0x01D45078 TBNZ X8, 0x0, 0x1D450CC
	0x01D4507C ADRP X0, 0x23AF000
	0x01D45080 LDR X0, [X0 + 0x410]
	0x01D45084 BL 0x1C16CF4
	0x01D45088 ADRP X0, 0x23AE000
	0x01D4508C LDR X0, [X0 + 0xE00]
	0x01D45090 BL 0x1C16CF4
	0x01D45094 ADRP X0, 0x23AF000
	0x01D45098 LDR X0, [X0 + 0x418]
	0x01D4509C BL 0x1C16CF4
	0x01D450A0 ADRP X0, 0x23AE000
	0x01D450A4 LDR X0, [X0 + 0xE18]
	0x01D450A8 BL 0x1C16CF4
	0x01D450AC ADRP X0, 0x23AF000
	0x01D450B0 LDR X0, [X0 + 0x420]
	0x01D450B4 BL 0x1C16CF4
	0x01D450B8 ADRP X0, 0x23AE000
	0x01D450BC LDR X0, [X0 + 0x900]
	0x01D450C0 BL 0x1C16CF4
	0x01D450C4 MOVZ W8, 0x1
	0x01D450C8 STRB W8, [X21 + 0x760]
	0x01D450CC STR X31, [X31 + 0x18]
	0x01D450D0 LDR X0, [X19 + 0x18]
	0x01D450D4 CBZ X0, 0x1D452B4
	0x01D450D8 ADRP X8, 0x23AF000
	0x01D450DC LDR X8, [X8 + 0x410]
	0x01D450E0 ADRP X22, 0x23AE000
	0x01D450E4 LDR X1, [X8]
	0x01D450E8 LDR X22, [X22 + 0xE00]
	0x01D450EC BL 0x29B47A4
	0x01D450F0 MOV X19, X0
	0x01D450F4 CBZ X0, 0x1D452B8
	0x01D450F8 ADRP X23, 0x23AE000
	0x01D450FC ADRP X24, 0x23AF000
	0x01D45100 ADRP X25, 0x23AF000
	0x01D45104 ADRP X26, 0x23AE000
	0x01D45108 LDR X23, [X23 + 0xE18]
	0x01D4510C LDR X24, [X24 + 0x418]
	0x01D45110 LDR X25, [X25 + 0x420]
	0x01D45114 LDR X26, [X26 + 0x900]
	0x01D45118 LDR X8, [X19]
	0x01D4511C LDR X1, [X23]
	0x01D45120 LDRH W9, [X8 + 0x12E]
	0x01D45124 CBZ X9, 0x1D45148
	0x01D45128 LDR X10, [X8 + 0xB0]
	0x01D4512C ADD X10, X10, 0x8
	0x01D45130 LDUR X11, [X10 - 0x8]
	0x01D45134 CMP X11, X1
	0x01D45138 B.EQ 0x1D45158
	0x01D4513C SUBS X9, X9, 0x1
	0x01D45140 ADD X10, X10, 0x10
	0x01D45144 B.NE 0x1D45130
	0x01D45148 MOV X0, X19
	0x01D4514C MOV W2, W31
	0x01D45150 BL 0x1C5C788
	0x01D45154 B 0x1D45164
	0x01D45158 LDRSW X9, [X10]
	0x01D4515C ADD X8, X8, X9, 0x4, LSL
	0x01D45160 ADD X0, X8, 0x138
	0x01D45164 LDP X8, X1, [X0]
	0x01D45168 MOV X0, X19
	0x01D4516C BLR X8
	0x01D45170 TBZ X0, 0x0, 0x1D4521C
	0x01D45174 LDR X8, [X19]
	0x01D45178 LDR X1, [X24]
	0x01D4517C LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x2695000
	010 Move X24, 0x23B1000
	011 Move X23, 0x23B1000
	012 Move W8, [X20+1878]
	013 Move X24, [X24+880]
	014 Move X23, [X23+888]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {43}
	020 Move X0, 0x23B1000
	021 Move X0, [X0+880]
	022 Call 0x1C17CF4
	023 Move X0, 0x23B0000
	024 Move X0, [X0+1608]
	025 Call 0x1C17CF4
	026 Move X0, 0x23B0000
	027 Move X0, [X0+2392]
	028 Call 0x1C17CF4
	029 Move X0, 0x23B1000
	030 Move X0, [X0+64]
	031 Call 0x1C17CF4
	032 Move X0, 0x23B1000
	033 Move X0, [X0+896]
	034 Call 0x1C17CF4
	035 Move X0, 0x23B1000
	036 Move X0, [X0+888]
	037 Call 0x1C17CF4
	038 Move X0, 0x23B1000
	039 Move X0, [X0+376]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X20+1878], W8
	043 Call NotificationManager.get_socket, X0
	044 Move X8, [X24]
	045 Move X20, X0
	046 Move X0, X8
	047 Call 0x1C17F10
	048 Move X2, [X23]
	049 Move X1, X19
	050 Move X3, X31
	051 Move X21, X0
	052 Call Action`1<Object>..ctor, X0, X1, X2
	053 Compare X20, 0
	054 JumpIfEqual {193}
	055 Move X25, 0x23B1000
	056 Move X8, [X20]
	057 Move X25, [X25+64]
	058 Move X22, 0x23B0000
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 Move X1, [X25]
	061 Move X22, [X22+1608]
	062 Compare X9, 0
	063 JumpIfEqual {70}
	064 Move X10, [X8+176]
	065 Add X10, X10, 8
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Subtract X9, X9, 1
	069 Add X10, X10, 16
	070 Move W2, 17
	071 Move X0, X20
	072 Call 0x1C5D788
	073 Move W9, [X10]
	074 Add W9, W9, 17
	075 Add X8, X8, W9
	076 Add X0, X8, 312
	077 Move X8, [X0]
	078 Move X2, [X0+8]
	079 Move X0, X20
	080 Move X1, X21
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move X0, [X22]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move X20, 0x2694000
	088 Move W8, [X20+1927]
	089 Compare W8, 0
	090 JumpIfNotEqual {96}
	091 Move X0, 0x23AF000
	092 Move X0, [X0+1608]
	093 Call 0x1C17CF4
	094 Move W8, 1
	095 Move [X20+1927], W8
	096 Move X0, [X22]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {102}
	100 Call 0x1C17DFC
	101 Move X0, [X22]
	102 Move X8, [X0+184]
	103 Move X8, [X8]
	104 Compare X8, 0
	105 JumpIfEqual {193}
	106 Move X9, 0x23B0000
	107 Move X9, [X9+376]
	108 Move X0, [X8+152]
	109 Move X1, [X9]
	110 Call 0x2652A74, X0
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {141}
	115 Call NotificationManager.get_socket, X0
	116 Move X8, [X24]
	117 Move X20, X0
	118 Move X0, X8
	119 Call 0x1C17F10
	120 Move X2, [X23]
	121 Move X1, X19
	122 Move X3, X31
	123 Move X21, X0
	124 Call Action`1<Object>..ctor, X0, X1, X2
	125 Compare X20, 0
	126 JumpIfEqual {193}
	127 Move X8, [X20]
	128 Move X1, [X25]
	129 NotImplemented "Instruction LDRH not yet implemented."
	130 Compare X9, 0
	131 JumpIfEqual {138}
	132 Move X10, [X8+176]
	133 Add X10, X10, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X9, X9, 1
	137 Add X10, X10, 16
	138 Move W2, 16
	139 Move X0, X20
	140 Call 0x1C5D788
	141 Move X20, [X31+48]
	142 Move X19, [X31+56]
	143 Move X22, [X31+32]
	144 Move X21, [X31+40]
	145 Move X24, [X31+16]
	146 Move X23, [X31+24]
	147 Move X30, [X31+64]
	148 Move X25, [X31+72]
	149 Return 
	150 Move W9, [X10]
	151 Add W9, W9, 16
	152 Add X8, X8, W9
	153 Add X0, X8, 312
	154 Move X8, [X0]
	155 Move X2, [X0+8]
	156 Move X0, X20
	157 Move X1, X21
	158 NotImplemented "Instruction BLR not yet implemented."
	159 Move X8, 0x23AF000
	160 Move X8, [X8+2392]
	161 Move X0, [X8]
	162 Call 0x1C17F10
	163 Move X8, 0x23B0000
	164 Move X8, [X8+896]
	165 Move X1, X19
	166 Move X3, X31
	167 Move X20, X0
	168 Move X2, [X8]
	169 Call CoroutineGenerator..ctor, X0, X1, X2
	170 Move X0, X20
	171 Move W1, W31
	172 Move X2, X31
	173 Call Commands.Coroutine, X0, X1
	174 Move X8, [X22]
	175 Move X19, X0
	176 Move W9, [X8+224]
	177 Compare W9, 0
	178 JumpIfNotEqual {181}
	179 Move X0, X8
	180 Call 0x1C17DFC
	181 Move X0, X19
	182 Move X20, [X31+48]
	183 Move X19, [X31+56]
	184 Move X22, [X31+32]
	185 Move X21, [X31+40]
	186 Move X24, [X31+16]
	187 Move X23, [X31+24]
	188 Move W1, W31
	189 Move X30, [X31+64]
	190 Move X25, [X31+72]
	191 Call App.ExecuteCommand, X0, X1
	192 Return 
	193 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerator`1<SpatialSys.CommandLib.Command> FetchNotifications()

Disassembly:
	0x01D45180 CBZ X9, 0x1D451A4
	0x01D45184 LDR X10, [X8 + 0xB0]
	0x01D45188 ADD X10, X10, 0x8
	0x01D4518C LDUR X11, [X10 - 0x8]
	0x01D45190 CMP X11, X1
	0x01D45194 B.EQ 0x1D451B4
	0x01D45198 SUBS X9, X9, 0x1
	0x01D4519C ADD X10, X10, 0x10
	0x01D451A0 B.NE 0x1D4518C
	0x01D451A4 MOV X0, X19
	0x01D451A8 MOV W2, W31
	0x01D451AC BL 0x1C5C788
	0x01D451B0 B 0x1D451C0
	0x01D451B4 LDRSW X9, [X10]
	0x01D451B8 ADD X8, X8, X9, 0x4, LSL
	0x01D451BC ADD X0, X8, 0x138
	0x01D451C0 LDP X8, X1, [X0]
	0x01D451C4 MOV X0, X19
	0x01D451C8 BLR X8
	0x01D451CC CBZ X20, 0x1D452A4
	0x01D451D0 LDR X8, [X20 + 0xC0]
	0x01D451D4 CBZ X8, 0x1D452A8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x2694000
	005 Move X20, 0x23B0000
	006 Move W8, [X19+1879]
	007 Move X20, [X20+904]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x23B0000
	013 Move X0, [X0+904]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1879], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move [X19+16], W31
	023 Move X0, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return X0

Method: System.Void HandleReceivedNotification(Nakama.IApiNotification notification)

Disassembly:
	0x01D45200 CBZ X8, 0x1D452B0
	0x01D45204 LDR X0, [X8 + 0x60]
	0x01D45208 CBZ X0, 0x1D452AC
	0x01D4520C LDR X1, [X21 + 0x18]
	0x01D45210 LDR X2, [X26]
	0x01D45214 BL 0x265C3F4
	0x01D45218 B 0x1D45118
	0x01D4521C MOV X20, X31
	0x01D45220 CBZ X19, 0x1D4527C
	0x01D45224 LDR X8, [X19]
	0x01D45228 LDR X1, [X22]
	0x01D4522C LDRH W9, [X8 + 0x12E]
	0x01D45230 CBZ X9, 0x1D45254
	0x01D45234 LDR X10, [X8 + 0xB0]
	0x01D45238 ADD X10, X10, 0x8
	0x01D4523C LDUR X11, [X10 - 0x8]
	0x01D45240 CMP X11, X1
	0x01D45244 B.EQ 0x1D45264
	0x01D45248 SUBS X9, X9, 0x1
	0x01D4524C ADD X10, X10, 0x10
	0x01D45250 B.NE 0x1D4523C
	0x01D45254 MOV X0, X19
	0x01D45258 MOV W2, W31
	0x01D4525C BL 0x1C5C788
	0x01D45260 B 0x1D45270
	0x01D45264 LDRSW X9, [X10]
	0x01D45268 ADD X8, X8, X9, 0x4, LSL
	0x01D4526C ADD X0, X8, 0x138
	0x01D45270 LDP X8, X1, [X0]
	0x01D45274 MOV X0, X19
	0x01D45278 BLR X8
	0x01D4527C CBNZ X20, 0x1D452BC
	0x01D45280 LDP X20, X19, [X31 + 0x50]
	0x01D45284 LDP X22, X21, [X31 + 0x40]
	0x01D45288 LDP X24, X23, [X31 + 0x30]
	0x01D4528C LDP X26, X25, [X31 + 0x20]
	0x01D45290 LDR X30, [X31 + 0x10]
	0x01D45294 ADD X31, X31, 0x60
	0x01D45298 RET
	0x01D4529C BL 0x1C16F20
	0x01D452A0 BL 0x1C16F20
	0x01D452A4 BL 0x1C16F20
	0x01D452A8 BL 0x1C16F20
	0x01D452AC BL 0x1C16F20
	0x01D452B0 BL 0x1C16F20
	0x01D452B4 BL 0x1C16F20
	0x01D452B8 BL 0x1C16F20
	0x01D452BC MOV X0, X20
	0x01D452C0 BL 0x1C16F18
	0x01D452C4 B 0x1D452EC
	0x01D452C8 B 0x1D452EC
	0x01D452CC B 0x1D452EC
	0x01D452D0 B 0x1D452EC
	0x01D452D4 B 0x1D452EC
	0x01D452D8 B 0x1D452EC
	0x01D452DC B 0x1D452EC
	0x01D452E0 B 0x1D452EC
	0x01D452E4 B 0x1D452EC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2694000
	007 Move X22, 0x23AF000
	008 Move X20, 0x23B0000
	009 Move W8, [X21+1880]
	010 Move X22, [X22+2736]
	011 Move X20, [X20+912]
	012 Move X19, X1
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x23B0000
	018 Move X0, [X0+912]
	019 Call 0x1C17CF4
	020 Move X0, 0x23AF000
	021 Move X0, [X0+1608]
	022 Call 0x1C17CF4
	023 Move X0, 0x23AF000
	024 Move X0, [X0+2736]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+1880], W8
	028 Move X0, [X22]
	029 Move W1, 1
	030 Call 0x1C17D6C
	031 Move X8, [X20]
	032 Move X20, X0
	033 Move X0, X8
	034 Call 0x1C17F10
	035 Move X1, X31
	036 Move X21, X0
	037 Call Object..ctor, X0
	038 Move [X21+24], X19
	039 Compare X20, 0
	040 JumpIfEqual {66}
	041 Move X8, [X20]
	042 Move X0, X21
	043 Move X1, [X8+64]
	044 Call 0x1C17E00
	045 Compare X0, 0
	046 JumpIfEqual {67}
	047 Move W8, [X20+24]
	048 Compare W8, 0
	049 JumpIfEqual {70}
	050 Move X8, 0x23AF000
	051 Move X8, [X8+1608]
	052 Move [X20+32], X21
	053 Move X0, [X8]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, X20
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X30, [X31+48]
	064 Call App.ScheduleAction, X0
	065 Return 
	066 Call 0x1C17F20
	067 Call 0x1C17F44
	068 Move X1, X31
	069 Call 0x1C17DEC
	070 Call 0x1C17F28

Method: System.Void .ctor()

Disassembly:
	0x01D452E8 B 0x1D452EC
	0x01D452EC CMP W1, 0x1

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

