Type: AnimalCompany.AvatarItemsManager/FetchItemsCommand/<ExecuteAsync>d__0

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01D3BFCC LDRSW X9, [X10]
	0x01D3BFD0 ADD X8, X8, X9, 0x4, LSL
	0x01D3BFD4 ADD X0, X8, 0x138
	0x01D3BFD8 LDP X8, X1, [X0]
	0x01D3BFDC MOV X0, X19
	0x01D3BFE0 BLR X8
	0x01D3BFE4 MOV X19, X0
	0x01D3BFE8 CBZ X0, 0x1D3C7BC
	0x01D3BFEC ADRP X26, 0x23B8000
	0x01D3BFF0 ADRP X28, 0x23B8000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01D3C0CC BLR X8

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01D3C0D0 CBZ X20, 0x1D3C780
	0x01D3C0D4 LDR X8, [X20 + 0xB8]
	0x01D3C0D8 CBZ X8, 0x1D3C784
	0x01D3C0DC LDR X9, [X8 + 0xA0]
	0x01D3C0E0 CBZ X9, 0x1D3C774
	0x01D3C0E4 MOV X21, X0
	0x01D3C0E8 CBZ X0, 0x1D3C778
	0x01D3C0EC LDR X8, [X21]
	0x01D3C0F0 LDR X22, [X9 + 0x48]
	0x01D3C0F4 LDR X1, [X28]
	0x01D3C0F8 LDRH W9, [X8 + 0x12E]
	0x01D3C0FC CBZ X9, 0x1D3C120
	0x01D3C100 LDR X10, [X8 + 0xB0]
	0x01D3C104 ADD X10, X10, 0x8
	0x01D3C108 LDUR X11, [X10 - 0x8]
	0x01D3C10C CMP X11, X1
	0x01D3C110 B.EQ 0x1D3C130
	0x01D3C114 SUBS X9, X9, 0x1
	0x01D3C118 ADD X10, X10, 0x10
	0x01D3C11C B.NE 0x1D3C108
	0x01D3C120 MOVZ W2, 0x2
	0x01D3C124 MOV X0, X21
	0x01D3C128 BL 0x1C5C788
	0x01D3C12C B 0x1D3C140
	0x01D3C130 LDR W9, [X10]
	0x01D3C134 ADD W9, W9, 0x2
	0x01D3C138 ADD X8, X8, W9, 0x4, SXTW
	0x01D3C13C ADD X0, X8, 0x138
	0x01D3C140 LDP X8, X1, [X0]
	0x01D3C144 MOV X0, X21
	0x01D3C148 BLR X8
	0x01D3C14C MOV X23, X0
	0x01D3C150 CBZ X0, 0x1D3C770
	0x01D3C154 LDR X8, [X23]
	0x01D3C158 LDR X1, [X29]
	0x01D3C15C LDRH W9, [X8 + 0x12E]
	0x01D3C160 CBZ X9, 0x1D3C184
	0x01D3C164 LDR X10, [X8 + 0xB0]
	0x01D3C168 ADD X10, X10, 0x8
	0x01D3C16C LDUR X11, [X10 - 0x8]
	0x01D3C170 CMP X11, X1
	0x01D3C174 B.EQ 0x1D3C194
	0x01D3C178 SUBS X9, X9, 0x1
	0x01D3C17C ADD X10, X10, 0x10
	0x01D3C180 B.NE 0x1D3C16C
	0x01D3C184 MOVZ W2, 0x9
	0x01D3C188 MOV X0, X23
	0x01D3C18C BL 0x1C5C788
	0x01D3C190 B 0x1D3C1A4
	0x01D3C194 LDR W9, [X10]
	0x01D3C198 ADD W9, W9, 0x9
	0x01D3C19C ADD X8, X8, W9, 0x4, SXTW
	0x01D3C1A0 ADD X0, X8, 0x138
	0x01D3C1A4 LDP X8, X1, [X0]
	0x01D3C1A8 MOV X0, X23
	0x01D3C1AC BLR X8
	0x01D3C1B0 MOV X1, X0
	0x01D3C1B4 CBZ X22, 0x1D3C788
	0x01D3C1B8 ADRP X8, 0x23B7000
	0x01D3C1BC LDR X8, [X8 + 0xF40]
	0x01D3C1C0 LDR X2, [X8]
	0x01D3C1C4 MOV X0, X22
	0x01D3C1C8 BL 0x2609E58
	0x01D3C1CC MOV X22, X0
	0x01D3C1D0 CBZ X0, 0x1D3C78C
	0x01D3C1D4 LDR X8, [X21]
	0x01D3C1D8 LDR X23, [X22 + 0x48]
	0x01D3C1DC LDR X1, [X28]
	0x01D3C1E0 LDRH W9, [X8 + 0x12E]
	0x01D3C1E4 CBZ X9, 0x1D3C208
	0x01D3C1E8 LDR X10, [X8 + 0xB0]
	0x01D3C1EC ADD X10, X10, 0x8
	0x01D3C1F0 LDUR X11, [X10 - 0x8]
	0x01D3C1F4 CMP X11, X1
	0x01D3C1F8 B.EQ 0x1D3C218
	0x01D3C1FC SUBS X9, X9, 0x1
	0x01D3C200 ADD X10, X10, 0x10
	0x01D3C204 B.NE 0x1D3C1F0
	0x01D3C208 MOVZ W2, 0x2
	0x01D3C20C MOV X0, X21
	0x01D3C210 BL 0x1C5C788
	0x01D3C214 B 0x1D3C228
	0x01D3C218 LDR W9, [X10]
	0x01D3C21C ADD W9, W9, 0x2
	0x01D3C220 ADD X8, X8, W9, 0x4, SXTW
	0x01D3C224 ADD X0, X8, 0x138
	0x01D3C228 LDP X8, X1, [X0]
	0x01D3C22C MOV X0, X21
	0x01D3C230 BLR X8
	0x01D3C234 MOV X24, X0
	0x01D3C238 CBZ X0, 0x1D3C77C
	0x01D3C23C LDR X8, [X24]
	0x01D3C240 LDR X1, [X29]
	0x01D3C244 LDRH W9, [X8 + 0x12E]
	0x01D3C248 CBZ X9, 0x1D3C26C
	0x01D3C24C LDR X10, [X8 + 0xB0]
	0x01D3C250 ADD X10, X10, 0x8
	0x01D3C254 LDUR X11, [X10 - 0x8]
	0x01D3C258 CMP X11, X1
	0x01D3C25C B.EQ 0x1D3C27C
	0x01D3C260 SUBS X9, X9, 0x1
	0x01D3C264 ADD X10, X10, 0x10
	0x01D3C268 B.NE 0x1D3C254
	0x01D3C26C MOVZ W2, 0x9
	0x01D3C270 MOV X0, X24
	0x01D3C274 BL 0x1C5C788
	0x01D3C278 B 0x1D3C28C
	0x01D3C27C LDR W9, [X10]
	0x01D3C280 ADD W9, W9, 0x9
	0x01D3C284 ADD X8, X8, W9, 0x4, SXTW
	0x01D3C288 ADD X0, X8, 0x138
	0x01D3C28C LDP X8, X1, [X0]
	0x01D3C290 MOV X0, X24
	0x01D3C294 BLR X8
	0x01D3C298 MOV X1, X0
	0x01D3C29C CBZ X23, 0x1D3C794
	0x01D3C2A0 LDR X2, [X27]
	0x01D3C2A4 MOV X0, X23
	0x01D3C2A8 BL 0x265C3F4
	0x01D3C2AC LDR X8, [X21]
	0x01D3C2B0 LDR X23, [X22 + 0x50]
	0x01D3C2B4 LDR X1, [X28]
	0x01D3C2B8 LDRH W9, [X8 + 0x12E]
	0x01D3C2BC CBZ X9, 0x1D3C2E0
	0x01D3C2C0 LDR X10, [X8 + 0xB0]
	0x01D3C2C4 ADD X10, X10, 0x8
	0x01D3C2C8 LDUR X11, [X10 - 0x8]
	0x01D3C2CC CMP X11, X1
	0x01D3C2D0 B.EQ 0x1D3C2F0
	0x01D3C2D4 SUBS X9, X9, 0x1
	0x01D3C2D8 ADD X10, X10, 0x10
	0x01D3C2DC B.NE 0x1D3C2C8
	0x01D3C2E0 MOVZ W2, 0x2
	0x01D3C2E4 MOV X0, X21
	0x01D3C2E8 BL 0x1C5C788
	0x01D3C2EC B 0x1D3C300
	0x01D3C2F0 LDR W9, [X10]
	0x01D3C2F4 ADD W9, W9, 0x2
	0x01D3C2F8 ADD X8, X8, W9, 0x4, SXTW
	0x01D3C2FC ADD X0, X8, 0x138
	0x01D3C300 LDP X8, X1, [X0]
	0x01D3C304 MOV X0, X21
	0x01D3C308 BLR X8
	0x01D3C30C MOV X24, X0
	0x01D3C310 CBZ X0, 0x1D3C790
	0x01D3C314 LDR X8, [X24]
	0x01D3C318 LDR X1, [X29]
	0x01D3C31C LDRH W9, [X8 + 0x12E]
	0x01D3C320 CBZ X9, 0x1D3C344
	0x01D3C324 LDR X10, [X8 + 0xB0]
	0x01D3C328 ADD X10, X10, 0x8
	0x01D3C32C LDUR X11, [X10 - 0x8]
	0x01D3C330 CMP X11, X1
	0x01D3C334 B.EQ 0x1D3C354
	0x01D3C338 SUBS X9, X9, 0x1
	0x01D3C33C ADD X10, X10, 0x10
	0x01D3C340 B.NE 0x1D3C32C
	0x01D3C344 MOVZ W2, 0x11
	0x01D3C348 MOV X0, X24
	0x01D3C34C BL 0x1C5C788
	0x01D3C350 B 0x1D3C364
	0x01D3C354 LDR W9, [X10]
	0x01D3C358 ADD W9, W9, 0x11
	0x01D3C35C ADD X8, X8, W9, 0x4, SXTW
	0x01D3C360 ADD X0, X8, 0x138
	0x01D3C364 LDP X8, X1, [X0]
	0x01D3C368 MOV X0, X24
	0x01D3C36C BLR X8
	0x01D3C370 MOV X1, X0
	0x01D3C374 CBZ X23, 0x1D3C7A8
	0x01D3C378 LDR X2, [X27]
	0x01D3C37C MOV X0, X23
	0x01D3C380 BL 0x265C3F4
	0x01D3C384 LDR X8, [X21]
	0x01D3C388 LDR X23, [X22 + 0x58]
	0x01D3C38C LDR X1, [X28]
	0x01D3C390 LDRH W9, [X8 + 0x12E]
	0x01D3C394 CBZ X9, 0x1D3C3B8
	0x01D3C398 LDR X10, [X8 + 0xB0]
	0x01D3C39C ADD X10, X10, 0x8
	0x01D3C3A0 LDUR X11, [X10 - 0x8]
	0x01D3C3A4 CMP X11, X1
	0x01D3C3A8 B.EQ 0x1D3C3C8
	0x01D3C3AC SUBS X9, X9, 0x1
	0x01D3C3B0 ADD X10, X10, 0x10
	0x01D3C3B4 B.NE 0x1D3C3A0
	0x01D3C3B8 MOVZ W2, 0x2
	0x01D3C3BC MOV X0, X21
	0x01D3C3C0 BL 0x1C5C788
	0x01D3C3C4 B 0x1D3C3D8
	0x01D3C3C8 LDR W9, [X10]
	0x01D3C3CC ADD W9, W9, 0x2
	0x01D3C3D0 ADD X8, X8, W9, 0x4, SXTW
	0x01D3C3D4 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x269D000
	007 Move W8, [X20+1805]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {42}
	013 Move X0, 0x23B8000
	014 Move X0, [X0+1608]
	015 Call 0x1C17CF4
	016 Move X0, 0x23B8000
	017 Move X0, [X0+2736]
	018 Call 0x1C17CF4
	019 Move X0, 0x23B8000
	020 Move X0, [X0+3696]
	021 Call 0x1C17CF4
	022 Move X0, 0x23B8000
	023 Move X0, [X0+3704]
	024 Call 0x1C17CF4
	025 Move X0, 0x23B8000
	026 Move X0, [X0+3712]
	027 Call 0x1C17CF4
	028 Move X0, 0x23B8000
	029 Move X0, [X0+3720]
	030 Call 0x1C17CF4
	031 Move X0, 0x23B8000
	032 Move X0, [X0+3728]
	033 Call 0x1C17CF4
	034 Move X0, 0x23B8000
	035 Move X0, [X0+3688]
	036 Call 0x1C17CF4
	037 Move X0, 0x23B8000
	038 Move X0, [X0+3736]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X20+1805], W8
	042 Move W8, [X19+16]
	043 Move X0, [X19+32]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Compare W8, 0
	047 JumpIfNotEqual {203}
	048 Move TEMP, 0
	049 Not TEMP
	050 Move W8, TEMP
	051 Move W9, 50
	052 Move [X19+16], W8
	053 Move [X19+40], W9
	054 Move W8, [X19+40]
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W9, TEMP
	058 Move [X19+16], W9
	059 Move [X19+48], X31
	060 Add W8, W8, 10
	061 Move [X19+40], W8
	062 Compare X0, 0
	063 JumpIfEqual {219}
	064 Move X1, X31
	065 Call Command.get_hasFinalized, X0
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {166}
	070 Move X22, 0x23B8000
	071 Move X22, [X22+3688]
	072 Move X0, [X22]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {78}
	076 Call 0x1C17DFC
	077 Move X0, [X22]
	078 Move X8, [X0+184]
	079 Move X20, [X8+8]
	080 Compare X20, 0
	081 JumpIfNotEqual {103}
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {87}
	085 Call 0x1C17DFC
	086 Move X0, [X22]
	087 Move X9, 0x23B8000
	088 Move X8, [X0+184]
	089 Move X9, [X9+3720]
	090 Move X21, [X8]
	091 Move X0, [X9]
	092 Call 0x1C17F10
	093 Move X8, 0x23B8000
	094 Move X8, [X8+3728]
	095 Move X1, X21
	096 Move X3, X31
	097 Move X20, X0
	098 Move X2, [X8]
	099 Call TaskGenerator`1<Object>..ctor, X0, X1, X2
	100 Move X8, [X22]
	101 Move X8, [X8+184]
	102 Move [X8+8], X20
	103 Move X8, 0x23B8000
	104 Move X8, [X8+3696]
	105 Move X0, X20
	106 Move W1, W31
	107 Move X2, X31
	108 Move X3, [X8]
	109 Call 0x21A3BE8, X0, X1, X2
	110 Move [X19+48], X0
	111 Move [X19+24], X0
	112 Move W0, 1
	113 Move [X19+16], W0
	114 Move X8, [X19+48]
	115 Move TEMP, 0
	116 Not TEMP
	117 Move W9, TEMP
	118 Move [X19+16], W9
	119 Compare X8, 0
	120 JumpIfEqual {219}
	121 Move X8, [X8+88]
	122 Compare X8, 0
	123 JumpIfEqual {204}
	124 Move X8, [X8+24]
	125 Compare X8, 0
	126 JumpIfEqual {204}
	127 Move X8, 0x23B8000
	128 Move X8, [X8+2736]
	129 Move W1, 1
	130 Move X0, [X8]
	131 Call 0x1C17D6C
	132 Move X8, [X19+48]
	133 Compare X8, 0
	134 JumpIfEqual {219}
	135 Move X21, [X8+88]
	136 Move X8, 0x23B8000
	137 Move X8, [X8+3736]
	138 Move X19, X0
	139 Move X0, [X8]
	140 Call 0x1C17F10
	141 Move X1, X31
	142 Move X20, X0
	143 Call Object..ctor, X0
	144 Move [X20+24], X21
	145 Compare X19, 0
	146 JumpIfEqual {219}
	147 Move X8, [X19]
	148 Move X0, X20
	149 Move X1, [X8+64]
	150 Call 0x1C17E00
	151 Compare X0, 0
	152 JumpIfEqual {221}
	153 Move W8, [X19+24]
	154 Compare W8, 0
	155 JumpIfEqual {220}
	156 Move [X19+32], X20
	157 Move X8, 0x23B8000
	158 Move X8, [X8+1608]
	159 Move X0, [X8]
	160 Move W8, [X0+224]
	161 Compare W8, 0
	162 JumpIfNotEqual {164}
	163 Call 0x1C17DFC
	164 Move X0, X19
	165 Call App.ExecuteAction, X0
	166 Move X8, 0x23B8000
	167 Move X8, [X8+2736]
	168 Move W1, 1
	169 Move X0, [X8]
	170 Call 0x1C17D6C
	171 Move X8, 0x23B8000
	172 Move X8, [X8+3704]
	173 Move X19, X0
	174 Move X8, [X8]
	175 Move X0, X8
	176 Call 0x1C17F10
	177 Move W1, 1
	178 Move X20, X0
	179 Call SetAvatarItemsCacheInitializedAction..ctor, X0, X1
	180 Compare X19, 0
	181 JumpIfEqual {219}
	182 Compare X20, 0
	183 JumpIfEqual {190}
	184 Move X8, [X19]
	185 Move X0, X20
	186 Move X1, [X8+64]
	187 Call 0x1C17E00
	188 Compare X0, 0
	189 JumpIfEqual {221}
	190 Move W8, [X19+24]
	191 Compare W8, 0
	192 JumpIfEqual {220}
	193 Move [X19+32], X20
	194 Move X8, 0x23B8000
	195 Move X8, [X8+1608]
	196 Move X0, [X8]
	197 Move W8, [X0+224]
	198 Compare W8, 0
	199 JumpIfNotEqual {201}
	200 Call 0x1C17DFC
	201 Move X0, X19
	202 Call App.ExecuteAction, X0
	203 Move W0, W31
	204 Move V0, [X19+40]
	205 Move W0, W31
	206 Move X1, X31
	207 NotImplemented "Instruction SCVTF not yet implemented."
	208 Call Commands.WaitForSeconds, V0, X0
	209 Move W8, 2
	210 Move [X19+24], X0
	211 Move [X19+16], W8
	212 Move W0, 1
	213 Move X20, [X31+32]
	214 Move X19, [X31+40]
	215 Move X22, [X31+16]
	216 Move X21, [X31+24]
	217 Move X30, [X31+48]
	218 Return X0
	219 Call 0x1C17F20
	220 Call 0x1C17F28
	221 Call 0x1C17F44
	222 Move X1, X31
	223 Call 0x1C17DEC

Method: SpatialSys.CommandLib.Command System.Collections.Generic.IEnumerator<SpatialSys.CommandLib.Command>.get_Current()

Disassembly:
	0x01D3C3D8 LDP X8, X1, [X0]
	0x01D3C3DC MOV X0, X21

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01D3C3E0 BLR X8
	0x01D3C3E4 MOV X24, X0
	0x01D3C3E8 CBZ X0, 0x1D3C7A4
	0x01D3C3EC LDR X8, [X24]
	0x01D3C3F0 LDR X1, [X29]
	0x01D3C3F4 LDRH W9, [X8 + 0x12E]
	0x01D3C3F8 CBZ X9, 0x1D3C41C
	0x01D3C3FC LDR X10, [X8 + 0xB0]
	0x01D3C400 ADD X10, X10, 0x8
	0x01D3C404 LDUR X11, [X10 - 0x8]
	0x01D3C408 CMP X11, X1
	0x01D3C40C B.EQ 0x1D3C42C
	0x01D3C410 SUBS X9, X9, 0x1
	0x01D3C414 ADD X10, X10, 0x10

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x23B8000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x23B8000
	011 Move X0, [X0+3744]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01D3C418 B.NE 0x1D3C404
	0x01D3C41C MOVZ W2, 0x3

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

