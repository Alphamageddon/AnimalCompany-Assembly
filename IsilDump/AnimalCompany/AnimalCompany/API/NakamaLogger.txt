Type: AnimalCompany.API.NakamaLogger

Method: System.Void .ctor(AnimalCompany.LogChannel channel)

Disassembly:
	0x01D68F08 LDRB W8, [X23 + 0x88A]
	0x01D68F0C LDR X24, [X24 + 0x6D0]
	0x01D68F10 LDR X22, [X22 + 0x6C0]
	0x01D68F14 MOV X19, X3
	0x01D68F18 MOV X21, X2
	0x01D68F1C MOV X20, X1
	0x01D68F20 TBNZ X8, 0x0, 0x1D68FB0
	0x01D68F24 ADRP X0, 0x238B000
	0x01D68F28 LDR X0, [X0 + 0x658]
	0x01D68F2C BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void DebugFormat(System.String format, System.Object[] args)

Disassembly:
	0x01D79F3C LDP X30, X19, [X31], #0x10
	0x01D79F40 B 0x1D7A1BC
	0x01D79F44 SUB X31, X31, 0xA0
	0x01D79F48 STP D9, D8, [X31 + 0x40]
	0x01D79F4C STR X30, [X31 + 0x50]
	0x01D79F50 STP X26, X25, [X31 + 0x60]
	0x01D79F54 STP X24, X23, [X31 + 0x70]
	0x01D79F58 STP X22, X21, [X31 + 0x80]
	0x01D79F5C STP X20, X19, [X31 + 0x90]
	0x01D79F60 ADRP X20, 0x265F000
	0x01D79F64 LDRB W8, [X20 + 0x93C]
	0x01D79F68 MOV X19, X0
	0x01D79F6C TBNZ X8, 0x0, 0x1D79FA8
	0x01D79F70 ADRP X0, 0x237C000
	0x01D79F74 LDR X0, [X0 + 0x6F0]
	0x01D79F78 BL 0x1C16CF4
	0x01D79F7C ADRP X0, 0x237C000
	0x01D79F80 LDR X0, [X0 + 0x6F8]
	0x01D79F84 BL 0x1C16CF4
	0x01D79F88 ADRP X0, 0x237C000
	0x01D79F8C LDR X0, [X0 + 0x700]
	0x01D79F90 BL 0x1C16CF4
	0x01D79F94 ADRP X0, 0x237C000
	0x01D79F98 LDR X0, [X0 + 0x708]
	0x01D79F9C BL 0x1C16CF4
	0x01D79FA0 MOVZ W8, 0x1
	0x01D79FA4 STRB W8, [X20 + 0x93C]
	0x01D79FA8 STP X31, X31, [X31 + 0x20]
	0x01D79FAC STR X31, [X31 + 0x30]
	0x01D79FB0 LDR X0, [X19 + 0x50]
	0x01D79FB4 CBZ X0, 0x1D7A128
	0x01D79FB8 ADRP X8, 0x237C000
	0x01D79FBC LDR X8, [X8 + 0x708]
	0x01D79FC0 ADRP X24, 0x237C000
	0x01D79FC4 ADRP X23, 0x237C000
	0x01D79FC8 LDR X1, [X8]
	0x01D79FCC LDR X24, [X24 + 0x6F8]
	0x01D79FD0 LDR X23, [X23 + 0x6F0]
	0x01D79FD4 ADD X8, X31, 0x8
	0x01D79FD8 BL 0x301CB58
	0x01D79FDC LDUR V0, [X31 + 0x8]
	0x01D79FE0 LDR X8, [X31 + 0x18]
	0x01D79FE4 ADRP X20, 0x237A000
	0x01D79FE8 LDR X20, [X20 + 0x5A0]
	0x01D79FEC FMOV S9, 1
	0x01D79FF0 ADRP X25, 0x265F000
	0x01D79FF4 STR V0, [X31 + 0x2]
	0x01D79FF8 STR X8, [X31 + 0x30]
	0x01D79FFC MOVZ W26, 0x1
	0x01D7A000 LDR X1, [X24]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x2660000
	009 Move X22, 0x237B000
	010 Move W8, [X23+2344]
	011 Move X22, [X22+1928]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x237B000
	020 Move X0, [X0+1928]
	021 Call 0x1C17CF4
	022 Move X0, 0x237E000
	023 Move X0, [X0+880]
	024 Call 0x1C17CF4
	025 Move X0, 0x237E000
	026 Move X0, [X0+888]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X23+2344], W8
	030 Move X24, 0x237E000
	031 Move X23, 0x237E000
	032 Move W21, [X21+16]
	033 Move X24, [X24+888]
	034 Move X23, [X23+880]
	035 Move X0, X20
	036 Move X1, X19
	037 Move X2, X31
	038 Call String.Format, X0, X1
	039 Move X8, [X22]
	040 Move X19, X0
	041 Move W9, [X8+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X3, [X24]
	047 Move X4, [X23]
	048 Move W0, W21
	049 Move X1, X19
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move W5, 15
	057 Move X2, X31
	058 Move X6, X31
	059 Move X30, [X31+64]
	060 Call Log.Debug, X0, X1, X2, X3, X4, X5
	061 Return 

Method: System.Void ErrorFormat(System.String format, System.Object[] args)

Disassembly:
	0x01D7A004 ADD X0, X31, 0x20
	0x01D7A008 BL 0x2BC4350
	0x01D7A00C TBZ X0, 0x0, 0x1D7A0EC
	0x01D7A010 LDR X21, [X31 + 0x30]
	0x01D7A014 MOV X0, X19
	0x01D7A018 MOV X1, X31
	0x01D7A01C BL 0x3C32E90
	0x01D7A020 CBZ X21, 0x1D7A120
	0x01D7A024 MOV X22, X0
	0x01D7A028 MOV X0, X21
	0x01D7A02C MOV X1, X31
	0x01D7A030 BL 0x3C32E90
	0x01D7A034 CBZ X0, 0x1D7A124
	0x01D7A038 MOV X1, X31
	0x01D7A03C BL 0x3C3F58C
	0x01D7A040 CBZ X22, 0x1D7A118
	0x01D7A044 MOV X0, X22
	0x01D7A048 MOV X1, X31
	0x01D7A04C BL 0x3C40B58
	0x01D7A050 LDP S2, S1, [X19 + 0x20]
	0x01D7A054 FMOV S8, W31
	0x01D7A058 FCMP S1, S2
	0x01D7A05C B.EQ 0x1D7A07C
	0x01D7A060 FABS S0, S0
	0x01D7A064 FSUB S0, S0, S1
	0x01D7A068 FSUB S1, S2, S1
	0x01D7A06C FDIV S0, S0, S1
	0x01D7A070 FCMP S0, 0x0
	0x01D7A074 B.MI 0x1D7A07C
	0x01D7A078 FMIN S8, S0, S9
	0x01D7A07C MOV X0, X21
	0x01D7A080 MOV X1, X31
	0x01D7A084 BL 0x3C32E90
	0x01D7A088 LDRB W8, [X25 + 0x85B]
	0x01D7A08C MOV X21, X0
	0x01D7A090 CBNZ W8, 0x1D7A0A0
	0x01D7A094 MOV X0, X20
	0x01D7A098 BL 0x1C16CF4
	0x01D7A09C STRB W26, [X25 + 0x85B]
	0x01D7A0A0 LDR X8, [X20]
	0x01D7A0A4 FMOV S1, 3
	0x01D7A0A8 MOV V0.16B, V8.16B
	0x01D7A0AC LDR X22, [X8 + 0xB8]
	0x01D7A0B0 BL 0x3EB1B50
	0x01D7A0B4 FMIN S1, S0, S9
	0x01D7A0B8 FSUB S1, S9, S1
	0x01D7A0BC FCMP S0, 0x0
	0x01D7A0C0 FCSEL S0, S1, S9, PL
	0x01D7A0C4 CBZ X21, 0x1D7A11C
	0x01D7A0C8 LDP S3, S1, [X22 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x265F000
	009 Move X22, 0x237A000
	010 Move W8, [X23+2345]
	011 Move X22, [X22+1928]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x237A000
	020 Move X0, [X0+1928]
	021 Call 0x1C17CF4
	022 Move X0, 0x237D000
	023 Move X0, [X0+896]
	024 Call 0x1C17CF4
	025 Move X0, 0x237D000
	026 Move X0, [X0+888]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X23+2345], W8
	030 Move X24, 0x237D000
	031 Move X23, 0x237D000
	032 Move W21, [X21+16]
	033 Move X24, [X24+888]
	034 Move X23, [X23+896]
	035 Move X0, X20
	036 Move X1, X19
	037 Move X2, X31
	038 Call String.Format, X0, X1
	039 Move X8, [X22]
	040 Move X19, X0
	041 Move W9, [X8+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X3, [X24]
	047 Move X4, [X23]
	048 Move W0, W21
	049 Move X1, X19
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move W5, 20
	057 Move X2, X31
	058 Move X6, X31
	059 Move X30, [X31+64]
	060 Call Log.Error, X0, X1, X2, X3, X4, X5
	061 Return 

Method: System.Void InfoFormat(System.String format, System.Object[] args)

Disassembly:
	0x01D7A0CC LDR V4, [X22 + 0xC]
	0x01D7A0D0 FMUL S2, S0, S1
	0x01D7A0D4 FMUL S1, S0, S3
	0x01D7A0D8 FMUL S0, S0, S4
	0x01D7A0DC MOV X0, X21
	0x01D7A0E0 MOV X1, X31
	0x01D7A0E4 BL 0x3C3FC4C
	0x01D7A0E8 B 0x1D7A000
	0x01D7A0EC LDR X1, [X23]
	0x01D7A0F0 ADD X0, X31, 0x20
	0x01D7A0F4 BL 0x2BC434C
	0x01D7A0F8 LDP X20, X19, [X31 + 0x90]
	0x01D7A0FC LDP X22, X21, [X31 + 0x80]
	0x01D7A100 LDP X24, X23, [X31 + 0x70]
	0x01D7A104 LDP X26, X25, [X31 + 0x60]
	0x01D7A108 LDR X30, [X31 + 0x50]
	0x01D7A10C LDP D9, D8, [X31 + 0x40]
	0x01D7A110 ADD X31, X31, 0xA0
	0x01D7A114 RET
	0x01D7A118 BL 0x1C16F20
	0x01D7A11C BL 0x1C16F20
	0x01D7A120 BL 0x1C16F20
	0x01D7A124 BL 0x1C16F20
	0x01D7A128 BL 0x1C16F20
	0x01D7A12C B 0x1D7A158
	0x01D7A130 B 0x1D7A158
	0x01D7A134 B 0x1D7A158
	0x01D7A138 B 0x1D7A158
	0x01D7A13C B 0x1D7A158
	0x01D7A140 B 0x1D7A158
	0x01D7A144 B 0x1D7A158
	0x01D7A148 B 0x1D7A158
	0x01D7A14C B 0x1D7A158
	0x01D7A150 B 0x1D7A158
	0x01D7A154 B 0x1D7A158
	0x01D7A158 MOV X19, X0
	0x01D7A15C CMP W1, 0x1
	0x01D7A160 B.NE 0x1D7A18C
	0x01D7A164 MOV X0, X19
	0x01D7A168 BL 0x3EB1AD0
	0x01D7A16C LDR X20, [X0]
	0x01D7A170 BL 0x3EB1AE0
	0x01D7A174 LDR X1, [X23]
	0x01D7A178 ADD X0, X31, 0x20
	0x01D7A17C BL 0x2BC434C
	0x01D7A180 CBZ X20, 0x1D7A0F8
	0x01D7A184 MOV X0, X20
	0x01D7A188 BL 0x1C16F18
	0x01D7A18C MOV X20, X31
	0x01D7A190 B 0x1D7A198

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x265F000
	009 Move X22, 0x237A000
	010 Move W8, [X23+2346]
	011 Move X22, [X22+1928]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x237A000
	020 Move X0, [X0+1928]
	021 Call 0x1C17CF4
	022 Move X0, 0x237D000
	023 Move X0, [X0+888]
	024 Call 0x1C17CF4
	025 Move X0, 0x237D000
	026 Move X0, [X0+904]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X23+2346], W8
	030 Move X24, 0x237D000
	031 Move X23, 0x237D000
	032 Move W21, [X21+16]
	033 Move X24, [X24+888]
	034 Move X23, [X23+904]
	035 Move X0, X20
	036 Move X1, X19
	037 Move X2, X31
	038 Call String.Format, X0, X1
	039 Move X8, [X22]
	040 Move X19, X0
	041 Move W9, [X8+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X3, [X24]
	047 Move X4, [X23]
	048 Move W0, W21
	049 Move X1, X19
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move W5, 25
	057 Move X2, X31
	058 Move X6, X31
	059 Move X30, [X31+64]
	060 Call Log.Info, X0, X1, X2, X3, X4, X5
	061 Return 

Method: System.Void WarnFormat(System.String format, System.Object[] args)

Disassembly:
	0x01D7A194 MOV X19, X0
	0x01D7A198 LDR X1, [X23]
	0x01D7A19C ADD X0, X31, 0x20
	0x01D7A1A0 BL 0x2BC434C
	0x01D7A1A4 CBNZ X20, 0x1D7A1B0
	0x01D7A1A8 MOV X0, X19
	0x01D7A1AC BL 0x1D2C690
	0x01D7A1B0 MOV X0, X20
	0x01D7A1B4 BL 0x1C16F18
	0x01D7A1B8 BL 0x1990590
	0x01D7A1BC SUB X31, X31, 0xB0
	0x01D7A1C0 STP D15, D14, [X31 + 0x40]
	0x01D7A1C4 STP D13, D12, [X31 + 0x50]
	0x01D7A1C8 STP D11, D10, [X31 + 0x60]
	0x01D7A1CC STP D9, D8, [X31 + 0x70]
	0x01D7A1D0 STP X30, X23, [X31 + 0x80]
	0x01D7A1D4 STP X22, X21, [X31 + 0x90]
	0x01D7A1D8 STP X20, X19, [X31 + 0xA0]
	0x01D7A1DC ADRP X20, 0x265E000
	0x01D7A1E0 LDRB W8, [X20 + 0x93D]
	0x01D7A1E4 MOV X19, X0
	0x01D7A1E8 TBNZ X8, 0x0, 0x1D7A224
	0x01D7A1EC ADRP X0, 0x237B000
	0x01D7A1F0 LDR X0, [X0 + 0x6F0]
	0x01D7A1F4 BL 0x1C16CF4
	0x01D7A1F8 ADRP X0, 0x237B000
	0x01D7A1FC LDR X0, [X0 + 0x6F8]
	0x01D7A200 BL 0x1C16CF4
	0x01D7A204 ADRP X0, 0x237B000
	0x01D7A208 LDR X0, [X0 + 0x700]
	0x01D7A20C BL 0x1C16CF4
	0x01D7A210 ADRP X0, 0x237B000
	0x01D7A214 LDR X0, [X0 + 0x708]
	0x01D7A218 BL 0x1C16CF4
	0x01D7A21C MOVZ W8, 0x1
	0x01D7A220 STRB W8, [X20 + 0x93D]
	0x01D7A224 STP X31, X31, [X31 + 0x20]
	0x01D7A228 STR X31, [X31 + 0x30]
	0x01D7A22C LDR X0, [X19 + 0x50]
	0x01D7A230 CBZ X0, 0x1D7A43C
	0x01D7A234 ADRP X8, 0x237B000
	0x01D7A238 LDR X8, [X8 + 0x708]
	0x01D7A23C ADRP X23, 0x237B000
	0x01D7A240 ADRP X22, 0x237B000
	0x01D7A244 LDR X1, [X8]
	0x01D7A248 LDR X23, [X23 + 0x6F8]
	0x01D7A24C LDR X22, [X22 + 0x6F0]
	0x01D7A250 ADD X8, X31, 0x8
	0x01D7A254 BL 0x301CB58
	0x01D7A258 LDUR V0, [X31 + 0x8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x265F000
	009 Move X22, 0x237A000
	010 Move W8, [X23+2347]
	011 Move X22, [X22+1928]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x237A000
	020 Move X0, [X0+1928]
	021 Call 0x1C17CF4
	022 Move X0, 0x237D000
	023 Move X0, [X0+912]
	024 Call 0x1C17CF4
	025 Move X0, 0x237D000
	026 Move X0, [X0+888]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X23+2347], W8
	030 Move X24, 0x237D000
	031 Move X23, 0x237D000
	032 Move W21, [X21+16]
	033 Move X24, [X24+888]
	034 Move X23, [X23+912]
	035 Move X0, X20
	036 Move X1, X19
	037 Move X2, X31
	038 Call String.Format, X0, X1
	039 Move X8, [X22]
	040 Move X19, X0
	041 Move W9, [X8+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X3, [X24]
	047 Move X4, [X23]
	048 Move W0, W21
	049 Move X1, X19
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move W5, 30
	057 Move X2, X31
	058 Move X6, X31
	059 Move X30, [X31+64]
	060 Call Log.Warning, X0, X1, X2, X3, X4, X5
	061 Return 

