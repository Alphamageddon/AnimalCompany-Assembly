Type: AnimalCompany.API.AnimalCompanyAPI

Method: AnimalCompany.API.AnimalCompanyAPI get_instance()

Disassembly:
	0x01D6864C ADRP X8, 0xFFFFFFFFFED82000
	0x01D68650 LDR V0, [X8 + 0x130]
	0x01D68654 MOVZ W8, 0x7F800000
	0x01D68658 SCVTF S1, X22
	0x01D6865C FMOV S2, W8
	0x01D68660 FMUL S0, S1, S0
	0x01D68664 FCVTZS W8, S0
	0x01D68668 FCMP S0, S2
	0x01D6866C MOVZ W9, 0x80000000
	0x01D68670 MOV X1, X0
	0x01D68674 CSEL W0, W9, W8, EQ
	0x01D68678 BL 0x1D68698
	0x01D6867C LDP X20, X19, [X31 + 0x50]
	0x01D68680 LDP X22, X21, [X31 + 0x40]
	0x01D68684 LDP X24, X23, [X31 + 0x30]
	0x01D68688 LDP X30, X25, [X31 + 0x20]
	0x01D6868C ADD X31, X31, 0x60
	0x01D68690 RET
	0x01D68694 BL 0x1C16F20
	0x01D68698 SUB X31, X31, 0xA0
	0x01D6869C STR X30, [X31 + 0x70]
	0x01D686A0 STP X22, X21, [X31 + 0x80]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2671000
	005 Move X19, 0x238C000
	006 Move W8, [X20+2170]
	007 Move X19, [X19+1624]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x238C000
	013 Move X0, [X0+1624]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2170], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: Nakama.ISession get_session()

Disassembly:
	0x01D686A4 STP X20, X19, [X31 + 0x90]
	0x01D686A8 ADRP X22, 0x2670000
	0x01D686AC ADRP X21, 0x238D000
	0x01D686B0 LDRB W8, [X22 + 0x884]
	0x01D686B4 LDR X21, [X21 + 0xA80]
	0x01D686B8 MOV X19, X1
	0x01D686BC MOV W20, W0
	0x01D686C0 TBNZ X8, 0x0, 0x1D686D8
	0x01D686C4 ADRP X0, 0x238D000
	0x01D686C8 LDR X0, [X0 + 0xA80]
	0x01D686CC BL 0x1C16CF4
	0x01D686D0 MOVZ W8, 0x1
	0x01D686D4 STRB W8, [X22 + 0x884]
	0x01D686D8 MOVI V0.2D, 0x0
	0x01D686DC ADD X8, X31, 0x0
	0x01D686E0 MOV X0, X31
	0x01D686E4 STR X31, [X31 + 0x60]
	0x01D686E8 STP V0, V0, [X31 + 0x40]
	0x01D686EC STP V0, V0, [X31 + 0x20]
	0x01D686F0 BL 0x32C4100
	0x01D686F4 LDP V0, V1, [X31]
	0x01D686F8 LDR X2, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2671000
	005 Move X19, 0x238C000
	006 Move W8, [X20+2171]
	007 Move X19, [X19+1624]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x238C000
	013 Move X0, [X0+1624]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2171], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+32]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void set_session(Nakama.ISession value)

Disassembly:
	0x01D686FC ADD X8, X31, 0x20
	0x01D68700 MOVN W9, 0x0
	0x01D68704 ORR X0, X8, 0xF
	0x01D68708 ADD X1, X31, 0x20
	0x01D6870C STR W20, [X31 + 0x48]
	0x01D68710 STR X19, [X31 + 0x50]
	0x01D68714 STUR V0, [X31 + 0x28]
	0x01D68718 STUR V1, [X31 + 0x38]
	0x01D6871C STR W9, [X31 + 0x20]
	0x01D68720 BL 0x219C060
	0x01D68724 LDP X20, X19, [X31 + 0x90]
	0x01D68728 LDP X22, X21, [X31 + 0x80]
	0x01D6872C LDR X30, [X31 + 0x70]
	0x01D68730 ADD X31, X31, 0xA0
	0x01D68734 RET
	0x01D68738 STR X30, [X31 - 0x40]!
	0x01D6873C STP X24, X23, [X31 + 0x10]
	0x01D68740 STP X22, X21, [X31 + 0x20]
	0x01D68744 STP X20, X19, [X31 + 0x30]
	0x01D68748 ADRP X23, 0x2670000
	0x01D6874C ADRP X22, 0x238B000
	0x01D68750 LDRB W8, [X23 + 0x885]
	0x01D68754 LDR X22, [X22 + 0x658]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2671000
	006 Move X20, 0x238C000
	007 Move W8, [X21+2172]
	008 Move X20, [X20+1624]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x238C000
	015 Move X0, [X0+1624]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2172], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move [X8+32], X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

Method: Nakama.ISocket get_socket()

Disassembly:
	0x01D68758 MOV X19, X3
	0x01D6875C MOV X21, X2
	0x01D68760 MOV X20, X1
	0x01D68764 TBNZ X8, 0x0, 0x1D687C4
	0x01D68768 ADRP X0, 0x238B000
	0x01D6876C LDR X0, [X0 + 0x658]
	0x01D68770 BL 0x1C16CF4
	0x01D68774 ADRP X0, 0x238D000
	0x01D68778 LDR X0, [X0 + 0xA88]
	0x01D6877C BL 0x1C16CF4
	0x01D68780 ADRP X0, 0x238D000
	0x01D68784 LDR X0, [X0 + 0xA18]
	0x01D68788 BL 0x1C16CF4
	0x01D6878C ADRP X0, 0x238D000
	0x01D68790 LDR X0, [X0 + 0xA90]
	0x01D68794 BL 0x1C16CF4
	0x01D68798 ADRP X0, 0x238D000
	0x01D6879C LDR X0, [X0 + 0xA98]
	0x01D687A0 BL 0x1C16CF4
	0x01D687A4 ADRP X0, 0x238D000
	0x01D687A8 LDR X0, [X0 + 0xAA0]
	0x01D687AC BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2671000
	005 Move X19, 0x238C000
	006 Move W8, [X20+2173]
	007 Move X19, [X19+1624]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x238C000
	013 Move X0, [X0+1624]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2173], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+40]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void set_socket(Nakama.ISocket value)

Disassembly:
	0x01D687B0 ADRP X0, 0x238D000
	0x01D687B4 LDR X0, [X0 + 0xAA8]
	0x01D687B8 BL 0x1C16CF4
	0x01D687BC MOVZ W8, 0x1
	0x01D687C0 STRB W8, [X23 + 0x885]
	0x01D687C4 MOV X0, X21
	0x01D687C8 MOV X1, X31
	0x01D687CC BL 0x3483BE4
	0x01D687D0 LDR X8, [X22]
	0x01D687D4 MOV X21, X0
	0x01D687D8 LDR W9, [X8 + 0xE0]
	0x01D687DC CBNZ W9, 0x1D687EC
	0x01D687E0 MOV X0, X8
	0x01D687E4 BL 0x1C16DFC
	0x01D687E8 LDR X8, [X22]
	0x01D687EC LDR X8, [X8 + 0xB8]
	0x01D687F0 LDR X22, [X8 + 0x10]
	0x01D687F4 CBZ X22, 0x1D6892C
	0x01D687F8 ADRP X9, 0x238D000
	0x01D687FC ADRP X10, 0x238D000
	0x01D68800 LDR X8, [X22]
	0x01D68804 LDR X9, [X9 + 0xA18]
	0x01D68808 LDR X10, [X10 + 0xAA8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2671000
	006 Move X20, 0x238C000
	007 Move W8, [X21+2174]
	008 Move X20, [X20+1624]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x238C000
	015 Move X0, [X0+1624]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2174], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move [X8+40], X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

Method: System.Void Awake()

Disassembly:
	0x01D6880C ADRP X24, 0x238D000
	0x01D68810 LDR X1, [X9]
	0x01D68814 LDRH W9, [X8 + 0x12E]
	0x01D68818 LDR X23, [X10]
	0x01D6881C LDR X24, [X24 + 0xAA0]
	0x01D68820 CBZ X9, 0x1D68844
	0x01D68824 LDR X10, [X8 + 0xB0]
	0x01D68828 ADD X10, X10, 0x8
	0x01D6882C LDUR X11, [X10 - 0x8]
	0x01D68830 CMP X11, X1
	0x01D68834 B.EQ 0x1D68854
	0x01D68838 SUBS X9, X9, 0x1
	0x01D6883C ADD X10, X10, 0x10
	0x01D68840 B.NE 0x1D6882C
	0x01D68844 MOVZ W2, 0x48
	0x01D68848 MOV X0, X22
	0x01D6884C BL 0x1C5C788
	0x01D68850 B 0x1D68864
	0x01D68854 LDR W9, [X10]
	0x01D68858 ADD W9, W9, 0x48
	0x01D6885C ADD X8, X8, W9, 0x4, SXTW
	0x01D68860 ADD X0, X8, 0x138
	0x01D68864 LDP X8, X6, [X0]
	0x01D68868 MOV X0, X22
	0x01D6886C MOV X1, X20
	0x01D68870 MOV X2, X23
	0x01D68874 MOV X3, X21
	0x01D68878 MOV X4, X31
	0x01D6887C MOV X5, X19
	0x01D68880 BLR X8
	0x01D68884 LDR X8, [X24]
	0x01D68888 MOV X19, X0
	0x01D6888C LDR W9, [X8 + 0xE0]
	0x01D68890 CBNZ W9, 0x1D688A0
	0x01D68894 MOV X0, X8
	0x01D68898 BL 0x1C16DFC
	0x01D6889C LDR X8, [X24]
	0x01D688A0 LDR X9, [X8 + 0xB8]
	0x01D688A4 LDR X20, [X9 + 0x8]
	0x01D688A8 CBNZ X20, 0x1D68900
	0x01D688AC LDR W9, [X8 + 0xE0]
	0x01D688B0 CBNZ W9, 0x1D688C0
	0x01D688B4 MOV X0, X8
	0x01D688B8 BL 0x1C16DFC
	0x01D688BC LDR X8, [X24]
	0x01D688C0 ADRP X9, 0x238D000
	0x01D688C4 LDR X8, [X8 + 0xB8]
	0x01D688C8 LDR X9, [X9 + 0xA88]
	0x01D688CC LDR X21, [X8]
	0x01D688D0 LDR X0, [X9]
	0x01D688D4 BL 0x1C16F10
	0x01D688D8 ADRP X8, 0x238D000
	0x01D688DC LDR X8, [X8 + 0xA98]
	0x01D688E0 MOV X1, X21
	0x01D688E4 MOV X3, X31
	0x01D688E8 MOV X20, X0
	0x01D688EC LDR X2, [X8]
	0x01D688F0 BL 0x2D318F0
	0x01D688F4 LDR X8, [X24]
	0x01D688F8 LDR X8, [X8 + 0xB8]
	0x01D688FC STR X20, [X8 + 0x8]
	0x01D68900 CBZ X19, 0x1D6892C
	0x01D68904 ADRP X8, 0x238D000
	0x01D68908 LDR X8, [X8 + 0xA90]
	0x01D6890C MOV X0, X19
	0x01D68910 MOV X1, X20
	0x01D68914 LDP X20, X19, [X31 + 0x30]
	0x01D68918 LDR X2, [X8]
	0x01D6891C LDP X22, X21, [X31 + 0x20]
	0x01D68920 LDP X24, X23, [X31 + 0x10]
	0x01D68924 LDR X30, [X31], #0x40
	0x01D68928 B 0x2138918
	0x01D6892C BL 0x1C16F20
	0x01D68930 SUB X31, X31, 0x80
	0x01D68934 STR X30, [X31 + 0x50]
	0x01D68938 STP X22, X21, [X31 + 0x60]
	0x01D6893C STP X20, X19, [X31 + 0x70]
	0x01D68940 ADRP X21, 0x2670000
	0x01D68944 ADRP X20, 0x238D000
	0x01D68948 LDRB W8, [X21 + 0x886]
	0x01D6894C LDR X20, [X20 + 0xAB0]
	0x01D68950 MOV X19, X1
	0x01D68954 TBNZ X8, 0x0, 0x1D68990
	0x01D68958 ADRP X0, 0x238D000
	0x01D6895C LDR X0, [X0 + 0xAB8]
	0x01D68960 BL 0x1C16CF4
	0x01D68964 ADRP X0, 0x238D000
	0x01D68968 LDR X0, [X0 + 0xAC0]
	0x01D6896C BL 0x1C16CF4
	0x01D68970 ADRP X0, 0x238D000
	0x01D68974 LDR X0, [X0 + 0xAC8]
	0x01D68978 BL 0x1C16CF4
	0x01D6897C ADRP X0, 0x238D000
	0x01D68980 LDR X0, [X0 + 0xAB0]
	0x01D68984 BL 0x1C16CF4
	0x01D68988 MOVZ W8, 0x1
	0x01D6898C STRB W8, [X21 + 0x886]
	0x01D68990 LDR X0, [X20]
	0x01D68994 MOVI V0.2D, 0x0
	0x01D68998 STP V0, V0, [X31 + 0x30]
	0x01D6899C STR V0, [X31 + 0x2]
	0x01D689A0 ADRP X22, 0x238D000
	0x01D689A4 ADRP X20, 0x238D000
	0x01D689A8 ADRP X21, 0x238D000
	0x01D689AC LDR W8, [X0 + 0xE0]
	0x01D689B0 LDR X22, [X22 + 0xAB8]
	0x01D689B4 LDR X20, [X20 + 0xAC0]
	0x01D689B8 LDR X21, [X21 + 0xAC8]
	0x01D689BC CBNZ W8, 0x1D689C4
	0x01D689C0 BL 0x1C16DFC
	0x01D689C4 LDR X0, [X22]
	0x01D689C8 ADD X8, X31, 0x8
	0x01D689CC BL 0x24DE568
	0x01D689D0 LDUR V0, [X31 + 0x8]
	0x01D689D4 LDR X9, [X31 + 0x18]
	0x01D689D8 LDR X2, [X20]
	0x01D689DC ADD X8, X31, 0x20
	0x01D689E0 ORR X20, X8, 0xF
	0x01D689E4 MOVN W10, 0x0
	0x01D689E8 ADD X1, X31, 0x20
	0x01D689EC MOV X0, X20
	0x01D689F0 STUR V0, [X31 + 0x28]
	0x01D689F4 STP X9, X19, [X31 + 0x38]
	0x01D689F8 STR W10, [X31 + 0x20]
	0x01D689FC BL 0x1FAA314
	0x01D68A00 LDR X1, [X21]
	0x01D68A04 MOV X0, X20
	0x01D68A08 BL 0x24DE57C
	0x01D68A0C LDP X20, X19, [X31 + 0x70]
	0x01D68A10 LDP X22, X21, [X31 + 0x60]
	0x01D68A14 LDR X30, [X31 + 0x50]
	0x01D68A18 ADD X31, X31, 0x80
	0x01D68A1C RET
	0x01D68A20 SUB X31, X31, 0x90
	0x01D68A24 STP X30, X23, [X31 + 0x60]
	0x01D68A28 STP X22, X21, [X31 + 0x70]
	0x01D68A2C STP X20, X19, [X31 + 0x80]
	0x01D68A30 ADRP X22, 0x2670000
	0x01D68A34 ADRP X21, 0x238D000
	0x01D68A38 LDRB W8, [X22 + 0x887]
	0x01D68A3C LDR X21, [X21 + 0xAD0]
	0x01D68A40 MOV X19, X2
	0x01D68A44 MOV X20, X1
	0x01D68A48 TBNZ X8, 0x0, 0x1D68A84
	0x01D68A4C ADRP X0, 0x238D000
	0x01D68A50 LDR X0, [X0 + 0xAD8]
	0x01D68A54 BL 0x1C16CF4
	0x01D68A58 ADRP X0, 0x238D000
	0x01D68A5C LDR X0, [X0 + 0xAE0]
	0x01D68A60 BL 0x1C16CF4
	0x01D68A64 ADRP X0, 0x238D000
	0x01D68A68 LDR X0, [X0 + 0xAE8]
	0x01D68A6C BL 0x1C16CF4
	0x01D68A70 ADRP X0, 0x238D000
	0x01D68A74 LDR X0, [X0 + 0xAD0]
	0x01D68A78 BL 0x1C16CF4
	0x01D68A7C MOVZ W8, 0x1
	0x01D68A80 STRB W8, [X22 + 0x887]
	0x01D68A84 LDR X0, [X21]
	0x01D68A88 MOVI V0.2D, 0x0
	0x01D68A8C STR X31, [X31 + 0x50]
	0x01D68A90 STP V0, V0, [X31 + 0x30]
	0x01D68A94 STR V0, [X31 + 0x2]
	0x01D68A98 ADRP X23, 0x238D000
	0x01D68A9C ADRP X22, 0x238D000
	0x01D68AA0 ADRP X21, 0x238D000
	0x01D68AA4 LDR W8, [X0 + 0xE0]
	0x01D68AA8 LDR X23, [X23 + 0xAD8]
	0x01D68AAC LDR X22, [X22 + 0xAE0]
	0x01D68AB0 LDR X21, [X21 + 0xAE8]
	0x01D68AB4 CBNZ W8, 0x1D68ABC
	0x01D68AB8 BL 0x1C16DFC
	0x01D68ABC LDR X0, [X23]
	0x01D68AC0 ADD X8, X31, 0x8
	0x01D68AC4 BL 0x26387A8
	0x01D68AC8 LDUR V0, [X31 + 0x8]
	0x01D68ACC LDR X9, [X31 + 0x18]
	0x01D68AD0 LDR X2, [X22]
	0x01D68AD4 ADD X8, X31, 0x20
	0x01D68AD8 STP X19, X20, [X31 + 0x40]
	0x01D68ADC ORR X20, X8, 0xF
	0x01D68AE0 MOVN W10, 0x0
	0x01D68AE4 ADD X1, X31, 0x20
	0x01D68AE8 MOV X0, X20
	0x01D68AEC STUR V0, [X31 + 0x28]
	0x01D68AF0 STR X9, [X31 + 0x38]
	0x01D68AF4 STR W10, [X31 + 0x20]
	0x01D68AF8 BL 0x212BD8C
	0x01D68AFC LDR X1, [X21]
	0x01D68B00 MOV X0, X20
	0x01D68B04 BL 0x26387BC
	0x01D68B08 LDP X20, X19, [X31 + 0x80]
	0x01D68B0C LDP X22, X21, [X31 + 0x70]
	0x01D68B10 LDP X30, X23, [X31 + 0x60]
	0x01D68B14 ADD X31, X31, 0x90
	0x01D68B18 RET
	0x01D68B1C SUB X31, X31, 0x90
	0x01D68B20 STR X30, [X31 + 0x50]
	0x01D68B24 STP X24, X23, [X31 + 0x60]
	0x01D68B28 STP X22, X21, [X31 + 0x70]
	0x01D68B2C STP X20, X19, [X31 + 0x80]
	0x01D68B30 ADRP X24, 0x2670000
	0x01D68B34 ADRP X23, 0x238D000
	0x01D68B38 ADRP X22, 0x238B000
	0x01D68B3C LDRB W8, [X24 + 0x888]
	0x01D68B40 LDR X23, [X23 + 0xAF0]
	0x01D68B44 LDR X22, [X22 + 0x658]
	0x01D68B48 MOV X19, X3
	0x01D68B4C MOV X21, X2
	0x01D68B50 MOV X20, X1
	0x01D68B54 TBNZ X8, 0x0, 0x1D68BC0
	0x01D68B58 ADRP X0, 0x238B000
	0x01D68B5C LDR X0, [X0 + 0x658]
	0x01D68B60 BL 0x1C16CF4
	0x01D68B64 ADRP X0, 0x238D000
	0x01D68B68 LDR X0, [X0 + 0xAF0]
	0x01D68B6C BL 0x1C16CF4
	0x01D68B70 ADRP X0, 0x238D000
	0x01D68B74 LDR X0, [X0 + 0xAF8]
	0x01D68B78 BL 0x1C16CF4
	0x01D68B7C ADRP X0, 0x238D000
	0x01D68B80 LDR X0, [X0 + 0xA18]
	0x01D68B84 BL 0x1C16CF4
	0x01D68B88 ADRP X0, 0x238D000
	0x01D68B8C LDR X0, [X0 + 0xB00]
	0x01D68B90 BL 0x1C16CF4
	0x01D68B94 ADRP X0, 0x238D000
	0x01D68B98 LDR X0, [X0 + 0xB08]
	0x01D68B9C BL 0x1C16CF4
	0x01D68BA0 ADRP X0, 0x238D000
	0x01D68BA4 LDR X0, [X0 + 0xAA0]
	0x01D68BA8 BL 0x1C16CF4
	0x01D68BAC ADRP X0, 0x238D000
	0x01D68BB0 LDR X0, [X0 + 0xB10]
	0x01D68BB4 BL 0x1C16CF4
	0x01D68BB8 MOVZ W8, 0x1
	0x01D68BBC STRB W8, [X24 + 0x888]
	0x01D68BC0 ADD X0, X31, 0x0
	0x01D68BC4 MOVZ W2, 0x50
	0x01D68BC8 MOV X1, X21
	0x01D68BCC BL 0x3EB1AC0
	0x01D68BD0 LDR X0, [X23]
	0x01D68BD4 ADD X1, X31, 0x0
	0x01D68BD8 BL 0x1C16E04
	0x01D68BDC MOV X1, X31
	0x01D68BE0 BL 0x3483BE4
	0x01D68BE4 LDR X8, [X22]
	0x01D68BE8 MOV X21, X0
	0x01D68BEC LDR W9, [X8 + 0xE0]
	0x01D68BF0 CBNZ W9, 0x1D68C00
	0x01D68BF4 MOV X0, X8
	0x01D68BF8 BL 0x1C16DFC
	0x01D68BFC LDR X8, [X22]
	0x01D68C00 LDR X8, [X8 + 0xB8]
	0x01D68C04 LDR X22, [X8 + 0x10]
	0x01D68C08 CBZ X22, 0x1D68D48
	0x01D68C0C ADRP X9, 0x238D000
	0x01D68C10 ADRP X10, 0x238D000
	0x01D68C14 LDR X8, [X22]
	0x01D68C18 LDR X9, [X9 + 0xA18]
	0x01D68C1C LDR X10, [X10 + 0xB10]
	0x01D68C20 ADRP X24, 0x238D000
	0x01D68C24 LDR X1, [X9]
	0x01D68C28 LDRH W9, [X8 + 0x12E]
	0x01D68C2C LDR X23, [X10]
	0x01D68C30 LDR X24, [X24 + 0xAA0]
	0x01D68C34 CBZ X9, 0x1D68C58
	0x01D68C38 LDR X10, [X8 + 0xB0]
	0x01D68C3C ADD X10, X10, 0x8
	0x01D68C40 LDUR X11, [X10 - 0x8]
	0x01D68C44 CMP X11, X1
	0x01D68C48 B.EQ 0x1D68C68
	0x01D68C4C SUBS X9, X9, 0x1
	0x01D68C50 ADD X10, X10, 0x10
	0x01D68C54 B.NE 0x1D68C40
	0x01D68C58 MOVZ W2, 0x48
	0x01D68C5C MOV X0, X22
	0x01D68C60 BL 0x1C5C788
	0x01D68C64 B 0x1D68C78
	0x01D68C68 LDR W9, [X10]
	0x01D68C6C ADD W9, W9, 0x48
	0x01D68C70 ADD X8, X8, W9, 0x4, SXTW
	0x01D68C74 ADD X0, X8, 0x138
	0x01D68C78 LDP X8, X6, [X0]
	0x01D68C7C MOV X0, X22
	0x01D68C80 MOV X1, X20
	0x01D68C84 MOV X2, X23
	0x01D68C88 MOV X3, X21
	0x01D68C8C MOV X4, X31
	0x01D68C90 MOV X5, X19
	0x01D68C94 BLR X8
	0x01D68C98 LDR X8, [X24]
	0x01D68C9C MOV X19, X0
	0x01D68CA0 LDR W9, [X8 + 0xE0]
	0x01D68CA4 CBNZ W9, 0x1D68CB4
	0x01D68CA8 MOV X0, X8
	0x01D68CAC BL 0x1C16DFC
	0x01D68CB0 LDR X8, [X24]
	0x01D68CB4 LDR X9, [X8 + 0xB8]
	0x01D68CB8 LDR X20, [X9 + 0x10]
	0x01D68CBC CBNZ X20, 0x1D68D14
	0x01D68CC0 LDR W9, [X8 + 0xE0]
	0x01D68CC4 CBNZ W9, 0x1D68CD4
	0x01D68CC8 MOV X0, X8
	0x01D68CCC BL 0x1C16DFC
	0x01D68CD0 LDR X8, [X24]
	0x01D68CD4 ADRP X9, 0x238D000
	0x01D68CD8 LDR X8, [X8 + 0xB8]
	0x01D68CDC LDR X9, [X9 + 0xAF8]
	0x01D68CE0 LDR X21, [X8]
	0x01D68CE4 LDR X0, [X9]
	0x01D68CE8 BL 0x1C16F10
	0x01D68CEC ADRP X8, 0x238D000
	0x01D68CF0 LDR X8, [X8 + 0xB08]
	0x01D68CF4 MOV X1, X21
	0x01D68CF8 MOV X3, X31
	0x01D68CFC MOV X20, X0
	0x01D68D00 LDR X2, [X8]
	0x01D68D04 BL 0x2D31D40
	0x01D68D08 LDR X8, [X24]
	0x01D68D0C LDR X8, [X8 + 0xB8]
	0x01D68D10 STR X20, [X8 + 0x10]
	0x01D68D14 CBZ X19, 0x1D68D48
	0x01D68D18 ADRP X8, 0x238D000
	0x01D68D1C LDR X8, [X8 + 0xB00]
	0x01D68D20 MOV X0, X19
	0x01D68D24 MOV X1, X20
	0x01D68D28 LDR X2, [X8]
	0x01D68D2C BL 0x2138A98
	0x01D68D30 LDP X20, X19, [X31 + 0x80]
	0x01D68D34 LDP X22, X21, [X31 + 0x70]
	0x01D68D38 LDP X24, X23, [X31 + 0x60]
	0x01D68D3C LDR X30, [X31 + 0x50]
	0x01D68D40 ADD X31, X31, 0x90
	0x01D68D44 RET
	0x01D68D48 BL 0x1C16F20
	0x01D68D4C STR X30, [X31 - 0x40]!
	0x01D68D50 STP X24, X23, [X31 + 0x10]
	0x01D68D54 STP X22, X21, [X31 + 0x20]
	0x01D68D58 STP X20, X19, [X31 + 0x30]
	0x01D68D5C ADRP X23, 0x2670000
	0x01D68D60 ADRP X24, 0x238D000
	0x01D68D64 ADRP X22, 0x238D000
	0x01D68D68 LDRB W8, [X23 + 0x889]
	0x01D68D6C LDR X24, [X24 + 0xB18]
	0x01D68D70 LDR X22, [X22 + 0xB20]
	0x01D68D74 MOV X19, X3
	0x01D68D78 MOV W21, W2
	0x01D68D7C MOV X20, X1
	0x01D68D80 TBNZ X8, 0x0, 0x1D68DE0
	0x01D68D84 ADRP X0, 0x238B000
	0x01D68D88 LDR X0, [X0 + 0x658]
	0x01D68D8C BL 0x1C16CF4
	0x01D68D90 ADRP X0, 0x238D000
	0x01D68D94 LDR X0, [X0 + 0xB28]
	0x01D68D98 BL 0x1C16CF4
	0x01D68D9C ADRP X0, 0x238D000
	0x01D68DA0 LDR X0, [X0 + 0xB20]
	0x01D68DA4 BL 0x1C16CF4
	0x01D68DA8 ADRP X0, 0x238D000
	0x01D68DAC LDR X0, [X0 + 0xB18]
	0x01D68DB0 BL 0x1C16CF4
	0x01D68DB4 ADRP X0, 0x238D000
	0x01D68DB8 LDR X0, [X0 + 0xA18]
	0x01D68DBC BL 0x1C16CF4
	0x01D68DC0 ADRP X0, 0x238D000
	0x01D68DC4 LDR X0, [X0 + 0xB30]
	0x01D68DC8 BL 0x1C16CF4
	0x01D68DCC ADRP X0, 0x238D000
	0x01D68DD0 LDR X0, [X0 + 0xB38]
	0x01D68DD4 BL 0x1C16CF4
	0x01D68DD8 MOVZ W8, 0x1
	0x01D68DDC STRB W8, [X23 + 0x889]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x2671000
	012 Move X24, 0x238C000
	013 Move W8, [X20+2175]
	014 Move X24, [X24+1624]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {64}
	020 Move X0, 0x238E000
	021 Move X0, [X0+2552]
	022 Call 0x1C17CF4
	023 Move X0, 0x238E000
	024 Move X0, [X0+2560]
	025 Call 0x1C17CF4
	026 Move X0, 0x238E000
	027 Move X0, [X0+2568]
	028 Call 0x1C17CF4
	029 Move X0, 0x238C000
	030 Move X0, [X0+1624]
	031 Call 0x1C17CF4
	032 Move X0, 0x238C000
	033 Move X0, [X0+1608]
	034 Call 0x1C17CF4
	035 Move X0, 0x238E000
	036 Move X0, [X0+2576]
	037 Call 0x1C17CF4
	038 Move X0, 0x238E000
	039 Move X0, [X0+2584]
	040 Call 0x1C17CF4
	041 Move X0, 0x238C000
	042 Move X0, [X0+3504]
	043 Call 0x1C17CF4
	044 Move X0, 0x238E000
	045 Move X0, [X0+2592]
	046 Call 0x1C17CF4
	047 Move X0, 0x238C000
	048 Move X0, [X0+1432]
	049 Call 0x1C17CF4
	050 Move X0, 0x238C000
	051 Move X0, [X0+3488]
	052 Call 0x1C17CF4
	053 Move X0, 0x238C000
	054 Move X0, [X0+3528]
	055 Call 0x1C17CF4
	056 Move X0, 0x238E000
	057 Move X0, [X0+1392]
	058 Call 0x1C17CF4
	059 Move X0, 0x238E000
	060 Move X0, [X0+2600]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X20+2175], W8
	064 Move X0, [X24]
	065 Move X21, 0x238C000
	066 Move W8, [X0+224]
	067 Move X21, [X21+1432]
	068 Compare W8, 0
	069 JumpIfNotEqual {72}
	070 Call 0x1C17DFC
	071 Move X0, [X24]
	072 Move X8, [X21]
	073 Move X9, [X0+184]
	074 Move W10, [X8+224]
	075 Move X20, [X9]
	076 Compare W10, 0
	077 JumpIfNotEqual {80}
	078 Move X0, X8
	079 Call 0x1C17DFC
	080 Move X0, X20
	081 Move X1, X31
	082 Move X2, X31
	083 Call Object.op_Inequality, X0, X1
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {112}
	088 Move X0, X19
	089 Move X1, X31
	090 Call Component.get_gameObject, X0
	091 Move X8, [X21]
	092 Move X19, X0
	093 Move W9, [X8+224]
	094 Compare W9, 0
	095 JumpIfNotEqual {98}
	096 Move X0, X8
	097 Call 0x1C17DFC
	098 Move X0, X19
	099 Move X20, [X31+64]
	100 Move X19, [X31+72]
	101 Move X22, [X31+48]
	102 Move X21, [X31+56]
	103 Move X24, [X31+32]
	104 Move X23, [X31+40]
	105 Move X26, [X31+16]
	106 Move X25, [X31+24]
	107 Move X1, X31
	108 Move X30, [X31+80]
	109 Move X27, [X31+88]
	110 Call Object.Destroy, X0
	111 Return 
	112 Move X0, [X24]
	113 Move X25, 0x238C000
	114 Move W8, [X0+224]
	115 Move X25, [X25+1608]
	116 Compare W8, 0
	117 JumpIfNotEqual {120}
	118 Call 0x1C17DFC
	119 Move X0, [X24]
	120 Move X8, [X0+184]
	121 Move W0, W31
	122 Move W1, W31
	123 Move [X8], X19
	124 Call HttpRequestAdapter.WithGzip, X0, X1
	125 Move X8, [X24]
	126 Move X8, [X8+184]
	127 Move [X8+8], X0
	128 Move X0, [X25]
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Move X26, 0x2671000
	134 Move W8, [X26+1927]
	135 Compare W8, 0
	136 JumpIfNotEqual {142}
	137 Move X0, 0x238C000
	138 Move X0, [X0+1608]
	139 Call 0x1C17CF4
	140 Move W8, 1
	141 Move [X26+1927], W8
	142 Move X0, [X25]
	143 Move W8, [X0+224]
	144 Compare W8, 0
	145 JumpIfNotEqual {148}
	146 Call 0x1C17DFC
	147 Move X0, [X25]
	148 Move X8, [X0+184]
	149 Move X8, [X8]
	150 Compare X8, 0
	151 JumpIfEqual {416}
	152 Move X8, [X8+136]
	153 Compare X8, 0
	154 JumpIfEqual {416}
	155 Move X20, [X8+80]
	156 Move X8, 0x238E000
	157 Move X8, [X8+2600]
	158 Move X0, [X8]
	159 Call 0x1C17F10
	160 Move X1, X20
	161 Move X2, X31
	162 Move X21, X0
	163 Call Uri..ctor, X0, X1
	164 Move W8, [X26+1927]
	165 Compare W8, 0
	166 JumpIfNotEqual {172}
	167 Move X0, 0x238C000
	168 Move X0, [X0+1608]
	169 Call 0x1C17CF4
	170 Move W8, 1
	171 Move [X26+1927], W8
	172 Move X0, [X25]
	173 Move W8, [X0+224]
	174 Compare W8, 0
	175 JumpIfNotEqual {178}
	176 Call 0x1C17DFC
	177 Move X0, [X25]
	178 Move X8, [X0+184]
	179 Move X8, [X8]
	180 Compare X8, 0
	181 JumpIfEqual {416}
	182 Move X8, [X8+144]
	183 Compare X8, 0
	184 JumpIfEqual {416}
	185 Move X9, [X24]
	186 Move X27, 0x238E000
	187 Move X22, [X8+80]
	188 Move X9, [X9+184]
	189 Move X27, [X27+2576]
	190 Move X23, [X9+8]
	191 Move X0, [X27]
	192 Call 0x1C17F10
	193 Move W4, 1
	194 Move X1, X21
	195 Move X2, X22
	196 Move X3, X23
	197 Move X5, X31
	198 Move X20, X0
	199 Call Client..ctor, X0, X1, X2, X3, X4
	200 Move X8, [X24]
	201 Move X8, [X8+184]
	202 Move [X8+16], X20
	203 Compare X20, 0
	204 JumpIfEqual {416}
	205 Move X22, 0x238E000
	206 Move X8, [X20]
	207 Move X22, [X22+2584]
	208 NotImplemented "Instruction LDRH not yet implemented."
	209 Move X1, [X22]
	210 Compare X9, 0
	211 JumpIfEqual {218}
	212 Move X10, [X8+176]
	213 Add X10, X10, 8
	214 NotImplemented "Instruction LDUR not yet implemented."
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Subtract X9, X9, 1
	217 Add X10, X10, 16
	218 Move W2, 10
	219 Move X0, X20
	220 Call 0x1C5D788
	221 Move W9, [X10]
	222 Add W9, W9, 10
	223 Add X8, X8, W9
	224 Add X0, X8, 312
	225 Move X8, [X0]
	226 Move X2, [X0+8]
	227 Move W1, 30
	228 Move X0, X20
	229 NotImplemented "Instruction BLR not yet implemented."
	230 Move X8, [X24]
	231 Move X9, 0x238E000
	232 Move X8, [X8+184]
	233 Move X9, [X9+2592]
	234 Move X20, [X8+16]
	235 Move X0, [X9]
	236 Call 0x1C17F10
	237 Move X1, X31
	238 Move X21, X0
	239 Call Object..ctor, X0
	240 Move W8, 64
	241 Move [X21+16], W8
	242 Compare X20, 0
	243 JumpIfEqual {416}
	244 Move X8, [X20]
	245 Move X1, [X22]
	246 NotImplemented "Instruction LDRH not yet implemented."
	247 Compare X9, 0
	248 JumpIfEqual {255}
	249 Move X10, [X8+176]
	250 Add X10, X10, 8
	251 NotImplemented "Instruction LDUR not yet implemented."
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Subtract X9, X9, 1
	254 Add X10, X10, 16
	255 Move W2, 12
	256 Move X0, X20
	257 Call 0x1C5D788
	258 Move W9, [X10]
	259 Add W9, W9, 12
	260 Add X8, X8, W9
	261 Add X0, X8, 312
	262 Move X8, [X0]
	263 Move X2, [X0+8]
	264 Move X0, X20
	265 Move X1, X21
	266 NotImplemented "Instruction BLR not yet implemented."
	267 Move X8, 0x238E000
	268 Move X8, [X8+1392]
	269 Move X0, [X8]
	270 Move W8, [X0+224]
	271 Compare W8, 0
	272 JumpIfNotEqual {274}
	273 Call 0x1C17DFC
	274 Move D0, 1
	275 Move X0, X31
	276 Call TimeSpan.FromMinutes, V0
	277 Move X8, [X27]
	278 Move X20, X0
	279 Move W9, [X8+224]
	280 Compare W9, 0
	281 JumpIfNotEqual {285}
	282 Move X0, X8
	283 Call 0x1C17DFC
	284 Move X8, [X27]
	285 Move X8, [X8+184]
	286 Move X9, 0x238E000
	287 Move [X8], X20
	288 Move X8, [X24]
	289 Move X8, [X8+184]
	290 Move X9, [X9+2552]
	291 Move X20, [X8+16]
	292 Move X0, [X9]
	293 Call 0x1C17F10
	294 Move X8, 0x238E000
	295 Move X8, [X8+2568]
	296 Move X1, X19
	297 Move X3, X31
	298 Move X21, X0
	299 Move X2, [X8]
	300 Call Action`1<Object>..ctor, X0, X1, X2
	301 Compare X20, 0
	302 JumpIfEqual {416}
	303 Move X8, [X20]
	304 Move X1, [X22]
	305 NotImplemented "Instruction LDRH not yet implemented."
	306 Compare X9, 0
	307 JumpIfEqual {314}
	308 Move X10, [X8+176]
	309 Add X10, X10, 8
	310 NotImplemented "Instruction LDUR not yet implemented."
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Subtract X9, X9, 1
	313 Add X10, X10, 16
	314 Move W2, 7
	315 Move X0, X20
	316 Call 0x1C5D788
	317 Move W9, [X10]
	318 Add W9, W9, 7
	319 Add X8, X8, W9
	320 Add X0, X8, 312
	321 Move X8, [X0]
	322 Move X2, [X0+8]
	323 Move X0, X20
	324 Move X1, X21
	325 NotImplemented "Instruction BLR not yet implemented."
	326 Move X8, [X24]
	327 Move W1, W31
	328 Move X2, X31
	329 Move X3, X31
	330 Move X8, [X8+184]
	331 Move X0, [X8+16]
	332 Call ClientExtensions.NewSocket, X0, X1, X2
	333 Move X21, 0x2671000
	334 Move W8, [X21+2359]
	335 Move X20, X0
	336 Compare W8, 0
	337 JumpIfNotEqual {343}
	338 Move X0, 0x238C000
	339 Move X0, [X0+1624]
	340 Call 0x1C17CF4
	341 Move W8, 1
	342 Move [X21+2359], W8
	343 Move X0, [X24]
	344 Move W8, [X0+224]
	345 Compare W8, 0
	346 JumpIfNotEqual {349}
	347 Call 0x1C17DFC
	348 Move X0, [X24]
	349 Move X8, [X0+184]
	350 Move [X8+40], X20
	351 Move X8, 0x238C000
	352 Move X8, [X8+3488]
	353 Move X0, [X8]
	354 Call 0x1C17F10
	355 Move X8, 0x238E000
	356 Move X8, [X8+2560]
	357 Move X1, X19
	358 Move X3, X31
	359 Move X20, X0
	360 Move X2, [X8]
	361 Call ObserverDelegate..ctor, X0, X1, X2
	362 Move X8, 0x238C000
	363 Move X8, [X8+3504]
	364 Move W1, 1
	365 Move W21, 1
	366 Move X0, [X8]
	367 Call 0x1C17D6C
	368 Move W8, [X26+1927]
	369 Move X19, X0
	370 Compare W8, 0
	371 JumpIfNotEqual {376}
	372 Move X0, 0x238C000
	373 Move X0, [X0+1608]
	374 Call 0x1C17CF4
	375 Move [X26+1927], W21
	376 Move X0, [X25]
	377 Move W8, [X0+224]
	378 Compare W8, 0
	379 JumpIfNotEqual {382}
	380 Call 0x1C17DFC
	381 Move X0, [X25]
	382 Move X8, [X0+184]
	383 Move X8, [X8]
	384 Compare X8, 0
	385 JumpIfEqual {416}
	386 Compare X19, 0
	387 JumpIfEqual {416}
	388 Move X21, [X8+128]
	389 Compare X21, 0
	390 JumpIfEqual {397}
	391 Move X8, [X19]
	392 Move X0, X21
	393 Move X1, [X8+64]
	394 Call 0x1C17E00
	395 Compare X0, 0
	396 JumpIfEqual {418}
	397 Move W8, [X19+24]
	398 Compare W8, 0
	399 JumpIfEqual {417}
	400 Move [X19+32], X21
	401 Move X0, X20
	402 Move X1, X19
	403 Move X20, [X31+64]
	404 Move X19, [X31+72]
	405 Move X22, [X31+48]
	406 Move X21, [X31+56]
	407 Move X24, [X31+32]
	408 Move X23, [X31+40]
	409 Move X26, [X31+16]
	410 Move X25, [X31+24]
	411 Move X2, X31
	412 Move X30, [X31+80]
	413 Move X27, [X31+88]
	414 Call App.RegisterObserver, X0, X1
	415 Return 
	416 Call 0x1C17F20
	417 Call 0x1C17F28
	418 Call 0x1C17F44
	419 Move X1, X31
	420 Call 0x1C17DEC

Method: System.Void OnDestroy()

Disassembly:
	0x01D68F30 ADRP X0, 0x238C000
	0x01D68F34 LDR X0, [X0 + 0x810]
	0x01D68F38 BL 0x1C16CF4
	0x01D68F3C ADRP X0, 0x238C000
	0x01D68F40 LDR X0, [X0 + 0x6C0]
	0x01D68F44 BL 0x1C16CF4
	0x01D68F48 ADRP X0, 0x238C000
	0x01D68F4C LDR X0, [X0 + 0x6D0]
	0x01D68F50 BL 0x1C16CF4
	0x01D68F54 ADRP X0, 0x238D000
	0x01D68F58 LDR X0, [X0 + 0xB40]
	0x01D68F5C BL 0x1C16CF4
	0x01D68F60 ADRP X0, 0x238D000
	0x01D68F64 LDR X0, [X0 + 0xA18]
	0x01D68F68 BL 0x1C16CF4
	0x01D68F6C ADRP X0, 0x238D000
	0x01D68F70 LDR X0, [X0 + 0xB48]
	0x01D68F74 BL 0x1C16CF4
	0x01D68F78 ADRP X0, 0x238D000
	0x01D68F7C LDR X0, [X0 + 0xB50]
	0x01D68F80 BL 0x1C16CF4
	0x01D68F84 ADRP X0, 0x238D000
	0x01D68F88 LDR X0, [X0 + 0xAA0]
	0x01D68F8C BL 0x1C16CF4
	0x01D68F90 ADRP X0, 0x238D000
	0x01D68F94 LDR X0, [X0 + 0x518]
	0x01D68F98 BL 0x1C16CF4
	0x01D68F9C ADRP X0, 0x238D000
	0x01D68FA0 LDR X0, [X0 + 0xB58]
	0x01D68FA4 BL 0x1C16CF4
	0x01D68FA8 MOVZ W8, 0x1
	0x01D68FAC STRB W8, [X23 + 0x88A]
	0x01D68FB0 LDR X0, [X24]
	0x01D68FB4 BL 0x1C16F10
	0x01D68FB8 LDR X1, [X22]
	0x01D68FBC MOV X22, X0
	0x01D68FC0 BL 0x2AA4804
	0x01D68FC4 CBZ X22, 0x1D69158
	0x01D68FC8 ADRP X8, 0x238D000
	0x01D68FCC ADRP X9, 0x238C000
	0x01D68FD0 LDR X8, [X8 + 0x518]
	0x01D68FD4 LDR X9, [X9 + 0x810]
	0x01D68FD8 ADRP X23, 0x238B000
	0x01D68FDC MOV X0, X22
	0x01D68FE0 LDR X1, [X8]
	0x01D68FE4 LDR X3, [X9]
	0x01D68FE8 LDR X23, [X23 + 0x658]
	0x01D68FEC MOV X2, X21
	0x01D68FF0 BL 0x2AA5098
	0x01D68FF4 LDR X0, [X23]
	0x01D68FF8 LDR W8, [X0 + 0xE0]
	0x01D68FFC CBNZ W8, 0x1D69008
	0x01D69000 BL 0x1C16DFC
	0x01D69004 LDR X0, [X23]
	0x01D69008 LDR X8, [X0 + 0xB8]
	0x01D6900C MOV X0, X22
	0x01D69010 MOV X1, X31
	0x01D69014 LDR X21, [X8 + 0x10]
	0x01D69018 BL 0x3483BE4
	0x01D6901C CBZ X21, 0x1D69158
	0x01D69020 ADRP X9, 0x238C000
	0x01D69024 ADRP X10, 0x238C000
	0x01D69028 LDR X8, [X21]
	0x01D6902C LDR X9, [X9 + 0xA18]
	0x01D69030 LDR X10, [X10 + 0xB58]
	0x01D69034 ADRP X24, 0x238C000
	0x01D69038 MOV X22, X0
	0x01D6903C LDR X1, [X9]
	0x01D69040 LDRH W9, [X8 + 0x12E]
	0x01D69044 LDR X23, [X10]
	0x01D69048 LDR X24, [X24 + 0xAA0]
	0x01D6904C CBZ X9, 0x1D69070
	0x01D69050 LDR X10, [X8 + 0xB0]
	0x01D69054 ADD X10, X10, 0x8
	0x01D69058 LDUR X11, [X10 - 0x8]
	0x01D6905C CMP X11, X1
	0x01D69060 B.EQ 0x1D69080
	0x01D69064 SUBS X9, X9, 0x1
	0x01D69068 ADD X10, X10, 0x10
	0x01D6906C B.NE 0x1D69058
	0x01D69070 MOVZ W2, 0x48
	0x01D69074 MOV X0, X21
	0x01D69078 BL 0x1C5C788
	0x01D6907C B 0x1D69090
	0x01D69080 LDR W9, [X10]
	0x01D69084 ADD W9, W9, 0x48
	0x01D69088 ADD X8, X8, W9, 0x4, SXTW
	0x01D6908C ADD X0, X8, 0x138
	0x01D69090 LDP X8, X6, [X0]
	0x01D69094 MOV X0, X21
	0x01D69098 MOV X1, X20
	0x01D6909C MOV X2, X23
	0x01D690A0 MOV X3, X22
	0x01D690A4 MOV X4, X31
	0x01D690A8 MOV X5, X19
	0x01D690AC BLR X8
	0x01D690B0 LDR X8, [X24]
	0x01D690B4 MOV X19, X0
	0x01D690B8 LDR W9, [X8 + 0xE0]
	0x01D690BC CBNZ W9, 0x1D690CC
	0x01D690C0 MOV X0, X8
	0x01D690C4 BL 0x1C16DFC
	0x01D690C8 LDR X8, [X24]
	0x01D690CC LDR X9, [X8 + 0xB8]
	0x01D690D0 LDR X20, [X9 + 0x18]
	0x01D690D4 CBNZ X20, 0x1D6912C
	0x01D690D8 LDR W9, [X8 + 0xE0]
	0x01D690DC CBNZ W9, 0x1D690EC
	0x01D690E0 MOV X0, X8
	0x01D690E4 BL 0x1C16DFC
	0x01D690E8 LDR X8, [X24]
	0x01D690EC ADRP X9, 0x238C000
	0x01D690F0 LDR X8, [X8 + 0xB8]
	0x01D690F4 LDR X9, [X9 + 0xB40]
	0x01D690F8 LDR X21, [X8]
	0x01D690FC LDR X0, [X9]
	0x01D69100 BL 0x1C16F10
	0x01D69104 ADRP X8, 0x238C000
	0x01D69108 LDR X8, [X8 + 0xB50]
	0x01D6910C MOV X1, X21
	0x01D69110 MOV X3, X31
	0x01D69114 MOV X20, X0
	0x01D69118 LDR X2, [X8]
	0x01D6911C BL 0x2D317DC
	0x01D69120 LDR X8, [X24]
	0x01D69124 LDR X8, [X8 + 0xB8]
	0x01D69128 STR X20, [X8 + 0x18]
	0x01D6912C CBZ X19, 0x1D69158
	0x01D69130 ADRP X8, 0x238C000
	0x01D69134 LDR X8, [X8 + 0xB48]
	0x01D69138 MOV X0, X19
	0x01D6913C MOV X1, X20
	0x01D69140 LDP X20, X19, [X31 + 0x30]
	0x01D69144 LDR X2, [X8]
	0x01D69148 LDP X22, X21, [X31 + 0x20]
	0x01D6914C LDP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2671000
	007 Move X22, 0x238C000
	008 Move W8, [X20+2176]
	009 Move X22, [X22+1624]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {41}
	015 Move X0, 0x238E000
	016 Move X0, [X0+2552]
	017 Call 0x1C17CF4
	018 Move X0, 0x238E000
	019 Move X0, [X0+2560]
	020 Call 0x1C17CF4
	021 Move X0, 0x238E000
	022 Move X0, [X0+2568]
	023 Call 0x1C17CF4
	024 Move X0, 0x238C000
	025 Move X0, [X0+1624]
	026 Call 0x1C17CF4
	027 Move X0, 0x238C000
	028 Move X0, [X0+1608]
	029 Call 0x1C17CF4
	030 Move X0, 0x238E000
	031 Move X0, [X0+2584]
	032 Call 0x1C17CF4
	033 Move X0, 0x238C000
	034 Move X0, [X0+1432]
	035 Call 0x1C17CF4
	036 Move X0, 0x238C000
	037 Move X0, [X0+3488]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X20+2176], W8
	041 Move X0, [X22]
	042 Move X20, 0x238C000
	043 Move W8, [X0+224]
	044 Move X20, [X20+1432]
	045 Compare W8, 0
	046 JumpIfNotEqual {49}
	047 Call 0x1C17DFC
	048 Move X0, [X22]
	049 Move X8, [X20]
	050 Move X9, [X0+184]
	051 Move W10, [X8+224]
	052 Move X20, [X9]
	053 Compare W10, 0
	054 JumpIfNotEqual {57}
	055 Move X0, X8
	056 Call 0x1C17DFC
	057 Move X0, X20
	058 Move X1, X19
	059 Move X2, X31
	060 Call Object.op_Equality, X0, X1
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {105}
	065 Move X0, [X22]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {71}
	069 Call 0x1C17DFC
	070 Move X0, [X22]
	071 Move X8, [X0+184]
	072 Move X9, 0x238D000
	073 Move [X8], X31
	074 Move X8, [X22]
	075 Move X8, [X8+184]
	076 Move X9, [X9+2552]
	077 Move X20, [X8+16]
	078 Move X0, [X9]
	079 Call 0x1C17F10
	080 Move X8, 0x238D000
	081 Move X8, [X8+2568]
	082 Move X1, X19
	083 Move X3, X31
	084 Move X21, X0
	085 Move X2, [X8]
	086 Call Action`1<Object>..ctor, X0, X1, X2
	087 Compare X20, 0
	088 JumpIfEqual {154}
	089 Move X10, 0x238D000
	090 Move X8, [X20]
	091 Move X10, [X10+2584]
	092 NotImplemented "Instruction LDRH not yet implemented."
	093 Move X1, [X10]
	094 Compare X9, 0
	095 JumpIfEqual {102}
	096 Move X10, [X8+176]
	097 Add X10, X10, 8
	098 NotImplemented "Instruction LDUR not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Subtract X9, X9, 1
	101 Add X10, X10, 16
	102 Move W2, 8
	103 Move X0, X20
	104 Call 0x1C5D788
	105 Move X20, [X31+32]
	106 Move X19, [X31+40]
	107 Move X22, [X31+16]
	108 Move X21, [X31+24]
	109 Move X30, [X31+48]
	110 Return 
	111 Move W9, [X10]
	112 Add W9, W9, 8
	113 Add X8, X8, W9
	114 Add X0, X8, 312
	115 Move X8, [X0]
	116 Move X2, [X0+8]
	117 Move X0, X20
	118 Move X1, X21
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move X8, [X22]
	121 Move X8, [X8+184]
	122 Move X0, [X8+24]
	123 Compare X0, 0
	124 JumpIfEqual {127}
	125 Move X1, X31
	126 Call CancellationTokenSource.Cancel, X0
	127 Move X8, 0x238B000
	128 Move X8, [X8+3488]
	129 Move X0, [X8]
	130 Call 0x1C17F10
	131 Move X8, 0x238D000
	132 Move X8, [X8+2560]
	133 Move X1, X19
	134 Move X3, X31
	135 Move X20, X0
	136 Move X2, [X8]
	137 Call ObserverDelegate..ctor, X0, X1, X2
	138 Move X8, 0x238B000
	139 Move X8, [X8+1608]
	140 Move X0, [X8]
	141 Move W8, [X0+224]
	142 Compare W8, 0
	143 JumpIfNotEqual {145}
	144 Call 0x1C17DFC
	145 Move X0, X20
	146 Move X20, [X31+32]
	147 Move X19, [X31+40]
	148 Move X22, [X31+16]
	149 Move X21, [X31+24]
	150 Move X1, X31
	151 Move X30, [X31+48]
	152 Call App.DeregisterObserver, X0
	153 Return 
	154 Call 0x1C17F20

Method: System.Void HandleClientAgentHeaderChanged(SpatialSys.ObservableState.StateChangedEventArgs args)

Disassembly:
	0x01D69150 LDR X30, [X31], #0x40
	0x01D69154 B 0x2138898
	0x01D69158 BL 0x1C16F20
	0x01D6915C SUB X31, X31, 0x60
	0x01D69160 STR X30, [X31 + 0x30]
	0x01D69164 STP X22, X21, [X31 + 0x40]
	0x01D69168 STP X20, X19, [X31 + 0x50]
	0x01D6916C ADRP X21, 0x266F000
	0x01D69170 ADRP X20, 0x238C000
	0x01D69174 LDRB W8, [X21 + 0x88B]
	0x01D69178 LDR X20, [X20 + 0xB60]
	0x01D6917C MOV X19, X1
	0x01D69180 TBNZ X8, 0x0, 0x1D691BC
	0x01D69184 ADRP X0, 0x238C000
	0x01D69188 LDR X0, [X0 + 0xB68]
	0x01D6918C BL 0x1C16CF4
	0x01D69190 ADRP X0, 0x238C000
	0x01D69194 LDR X0, [X0 + 0xB70]
	0x01D69198 BL 0x1C16CF4
	0x01D6919C ADRP X0, 0x238C000
	0x01D691A0 LDR X0, [X0 + 0xB78]
	0x01D691A4 BL 0x1C16CF4
	0x01D691A8 ADRP X0, 0x238C000
	0x01D691AC LDR X0, [X0 + 0xB60]
	0x01D691B0 BL 0x1C16CF4
	0x01D691B4 MOVZ W8, 0x1
	0x01D691B8 STRB W8, [X21 + 0x88B]
	0x01D691BC LDR X0, [X20]
	0x01D691C0 MOVI V0.2D, 0x0
	0x01D691C4 STP V0, V0, [X31 + 0x10]
	0x01D691C8 STR V0, [X31]
	0x01D691CC ADRP X20, 0x238C000
	0x01D691D0 ADRP X22, 0x238C000
	0x01D691D4 ADRP X21, 0x238C000
	0x01D691D8 LDR W8, [X0 + 0xE0]
	0x01D691DC LDR X20, [X20 + 0xB68]
	0x01D691E0 LDR X22, [X22 + 0xB70]
	0x01D691E4 LDR X21, [X21 + 0xB78]
	0x01D691E8 CBNZ W8, 0x1D691F0
	0x01D691EC BL 0x1C16DFC
	0x01D691F0 LDR X0, [X20]
	0x01D691F4 ADD X8, X31, 0x0
	0x01D691F8 ORR X20, X8, 0xF
	0x01D691FC MOV X8, X20
	0x01D69200 BL 0x263221C
	0x01D69204 LDR X2, [X22]
	0x01D69208 MOVN W8, 0x0
	0x01D6920C ADD X1, X31, 0x0
	0x01D69210 MOV X0, X20
	0x01D69214 STR X19, [X31 + 0x20]
	0x01D69218 STR W8, [X31]
	0x01D6921C BL 0x1FC8414
	0x01D69220 LDR X1, [X21]
	0x01D69224 MOV X0, X20
	0x01D69228 BL 0x2632230
	0x01D6922C LDP X20, X19, [X31 + 0x50]
	0x01D69230 LDP X22, X21, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2670000
	006 Move X19, 0x238B000
	007 Move W8, [X20+2177]
	008 Move X19, [X19+1624]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x238B000
	014 Move X0, [X0+1624]
	015 Call 0x1C17CF4
	016 Move X0, 0x238B000
	017 Move X0, [X0+1608]
	018 Call 0x1C17CF4
	019 Move X0, 0x238B000
	020 Move X0, [X0+3528]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2177], W8
	024 Move X0, [X19]
	025 Move X20, 0x238B000
	026 Move W8, [X0+224]
	027 Move X20, [X20+1608]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X19]
	032 Move X8, [X20]
	033 Move X9, [X0+184]
	034 Move W10, [X8+224]
	035 Move X19, [X9+8]
	036 Compare W10, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X21, 0x2670000
	041 Move W8, [X21+1927]
	042 Compare W8, 0
	043 JumpIfNotEqual {49}
	044 Move X0, 0x238B000
	045 Move X0, [X0+1608]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X21+1927], W8
	049 Move X0, [X20]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {55}
	053 Call 0x1C17DFC
	054 Move X0, [X20]
	055 Move X8, [X0+184]
	056 Move X8, [X8]
	057 Compare X8, 0
	058 JumpIfEqual {71}
	059 Move X8, [X8+128]
	060 Compare X8, 0
	061 JumpIfEqual {71}
	062 Compare X19, 0
	063 JumpIfEqual {71}
	064 Move X8, [X8+80]
	065 Move [X19+32], X8
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 Move X21, [X31+40]
	070 Return 
	071 Call 0x1C17F20

Method: System.Void HandleSessionUpdated(Nakama.ISession session)

Disassembly:
	0x01D69234 LDR X30, [X31 + 0x30]
	0x01D69238 ADD X31, X31, 0x60
	0x01D6923C RET
	0x01D69240 SUB X31, X31, 0x70
	0x01D69244 STR X30, [X31 + 0x40]
	0x01D69248 STP X22, X21, [X31 + 0x50]
	0x01D6924C STP X20, X19, [X31 + 0x60]
	0x01D69250 ADRP X21, 0x266F000
	0x01D69254 ADRP X20, 0x238C000
	0x01D69258 LDRB W8, [X21 + 0x88C]
	0x01D6925C LDR X20, [X20 + 0xB80]
	0x01D69260 MOV X19, X1
	0x01D69264 TBNZ X8, 0x0, 0x1D692A0
	0x01D69268 ADRP X0, 0x238C000
	0x01D6926C LDR X0, [X0 + 0xB88]
	0x01D69270 BL 0x1C16CF4
	0x01D69274 ADRP X0, 0x238C000
	0x01D69278 LDR X0, [X0 + 0xB90]
	0x01D6927C BL 0x1C16CF4
	0x01D69280 ADRP X0, 0x238C000
	0x01D69284 LDR X0, [X0 + 0xB98]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2670000
	006 Move X21, 0x238B000
	007 Move W8, [X20+2178]
	008 Move X21, [X21+1624]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x238B000
	015 Move X0, [X0+1624]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2178], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]

Method: System.Void SetSession(Nakama.ISession session)

Disassembly:
	0x01D69288 BL 0x1C16CF4
	0x01D6928C ADRP X0, 0x238C000
	0x01D69290 LDR X0, [X0 + 0xB80]
	0x01D69294 BL 0x1C16CF4
	0x01D69298 MOVZ W8, 0x1
	0x01D6929C STRB W8, [X21 + 0x88C]
	0x01D692A0 LDR X0, [X20]
	0x01D692A4 MOVI V0.2D, 0x0
	0x01D692A8 STR X31, [X31 + 0x30]
	0x01D692AC STP V0, V0, [X31 + 0x10]
	0x01D692B0 STR V0, [X31]
	0x01D692B4 ADRP X20, 0x238C000
	0x01D692B8 ADRP X22, 0x238C000
	0x01D692BC ADRP X21, 0x238C000
	0x01D692C0 LDR W8, [X0 + 0xE0]
	0x01D692C4 LDR X20, [X20 + 0xB88]
	0x01D692C8 LDR X22, [X22 + 0xB90]
	0x01D692CC LDR X21, [X21 + 0xB98]
	0x01D692D0 CBNZ W8, 0x1D692D8
	0x01D692D4 BL 0x1C16DFC
	0x01D692D8 LDR X0, [X20]
	0x01D692DC ADD X8, X31, 0x0
	0x01D692E0 ORR X20, X8, 0xF
	0x01D692E4 MOV X8, X20
	0x01D692E8 BL 0x263221C
	0x01D692EC LDR X2, [X22]
	0x01D692F0 MOVN W8, 0x0
	0x01D692F4 ADD X1, X31, 0x0
	0x01D692F8 MOV X0, X20
	0x01D692FC STR X19, [X31 + 0x20]
	0x01D69300 STR W8, [X31]
	0x01D69304 BL 0x1FC8214
	0x01D69308 LDR X1, [X21]
	0x01D6930C MOV X0, X20
	0x01D69310 BL 0x2632230
	0x01D69314 LDP X20, X19, [X31 + 0x60]
	0x01D69318 LDP X22, X21, [X31 + 0x50]
	0x01D6931C LDR X30, [X31 + 0x40]
	0x01D69320 ADD X31, X31, 0x70
	0x01D69324 RET
	0x01D69328 SUB X31, X31, 0x70
	0x01D6932C STP X30, X23, [X31 + 0x40]
	0x01D69330 STP X22, X21, [X31 + 0x50]
	0x01D69334 STP X20, X19, [X31 + 0x60]
	0x01D69338 ADRP X22, 0x266F000
	0x01D6933C ADRP X21, 0x238C000
	0x01D69340 LDRB W8, [X22 + 0x88D]
	0x01D69344 LDR X21, [X21 + 0xBA0]
	0x01D69348 MOV X19, X2
	0x01D6934C MOV X20, X1
	0x01D69350 TBNZ X8, 0x0, 0x1D6938C
	0x01D69354 ADRP X0, 0x238C000
	0x01D69358 LDR X0, [X0 + 0xBA8]
	0x01D6935C BL 0x1C16CF4
	0x01D69360 ADRP X0, 0x238C000
	0x01D69364 LDR X0, [X0 + 0xBB0]
	0x01D69368 BL 0x1C16CF4
	0x01D6936C ADRP X0, 0x238C000
	0x01D69370 LDR X0, [X0 + 0xBB8]
	0x01D69374 BL 0x1C16CF4
	0x01D69378 ADRP X0, 0x238C000
	0x01D6937C LDR X0, [X0 + 0xBA0]
	0x01D69380 BL 0x1C16CF4
	0x01D69384 MOVZ W8, 0x1
	0x01D69388 STRB W8, [X22 + 0x88D]
	0x01D6938C LDR X0, [X21]
	0x01D69390 MOVI V0.2D, 0x0
	0x01D69394 STR X31, [X31 + 0x30]
	0x01D69398 STP V0, V0, [X31 + 0x10]
	0x01D6939C STR V0, [X31]
	0x01D693A0 ADRP X21, 0x238C000
	0x01D693A4 ADRP X23, 0x238C000
	0x01D693A8 ADRP X22, 0x238C000
	0x01D693AC LDR W8, [X0 + 0xE0]
	0x01D693B0 LDR X21, [X21 + 0xBA8]
	0x01D693B4 LDR X23, [X23 + 0xBB0]
	0x01D693B8 LDR X22, [X22 + 0xBB8]
	0x01D693BC CBNZ W8, 0x1D693C4
	0x01D693C0 BL 0x1C16DFC
	0x01D693C4 LDR X0, [X21]
	0x01D693C8 ADD X8, X31, 0x0
	0x01D693CC ORR X21, X8, 0xF
	0x01D693D0 MOV X8, X21
	0x01D693D4 BL 0x263221C
	0x01D693D8 LDR X2, [X23]
	0x01D693DC MOVN W8, 0x0
	0x01D693E0 ADD X1, X31, 0x0
	0x01D693E4 MOV X0, X21
	0x01D693E8 STP X19, X20, [X31 + 0x20]
	0x01D693EC STR W8, [X31]
	0x01D693F0 BL 0x1FC8314
	0x01D693F4 LDR X1, [X22]
	0x01D693F8 MOV X0, X21
	0x01D693FC BL 0x2632230
	0x01D69400 LDP X20, X19, [X31 + 0x60]
	0x01D69404 LDP X22, X21, [X31 + 0x50]
	0x01D69408 LDP X30, X23, [X31 + 0x40]
	0x01D6940C ADD X31, X31, 0x70
	0x01D69410 RET
	0x01D69414 SUB X31, X31, 0xA0
	0x01D69418 STR X30, [X31 + 0x60]
	0x01D6941C STP X24, X23, [X31 + 0x70]
	0x01D69420 STP X22, X21, [X31 + 0x80]
	0x01D69424 STP X20, X19, [X31 + 0x90]
	0x01D69428 ADRP X23, 0x266F000
	0x01D6942C ADRP X22, 0x238C000
	0x01D69430 LDRB W8, [X23 + 0x88E]
	0x01D69434 LDR X22, [X22 + 0xBC0]
	0x01D69438 MOV X20, X3
	0x01D6943C MOV X19, X2
	0x01D69440 MOV X21, X1
	0x01D69444 TBNZ X8, 0x0, 0x1D69480
	0x01D69448 ADRP X0, 0x238C000
	0x01D6944C LDR X0, [X0 + 0xBC8]
	0x01D69450 BL 0x1C16CF4
	0x01D69454 ADRP X0, 0x238C000
	0x01D69458 LDR X0, [X0 + 0xBD0]
	0x01D6945C BL 0x1C16CF4
	0x01D69460 ADRP X0, 0x238C000
	0x01D69464 LDR X0, [X0 + 0xBD8]
	0x01D69468 BL 0x1C16CF4
	0x01D6946C ADRP X0, 0x238C000
	0x01D69470 LDR X0, [X0 + 0xBC0]
	0x01D69474 BL 0x1C16CF4
	0x01D69478 MOVZ W8, 0x1
	0x01D6947C STRB W8, [X23 + 0x88E]
	0x01D69480 LDR X0, [X22]
	0x01D69484 MOVI V0.2D, 0x0
	0x01D69488 STP V0, V0, [X31 + 0x40]
	0x01D6948C STP V0, V0, [X31 + 0x20]
	0x01D69490 ADRP X24, 0x238C000
	0x01D69494 ADRP X23, 0x238C000
	0x01D69498 ADRP X22, 0x238C000
	0x01D6949C LDR W8, [X0 + 0xE0]
	0x01D694A0 LDR X24, [X24 + 0xBC8]
	0x01D694A4 LDR X23, [X23 + 0xBD0]
	0x01D694A8 LDR X22, [X22 + 0xBD8]
	0x01D694AC CBNZ W8, 0x1D694B4
	0x01D694B0 BL 0x1C16DFC
	0x01D694B4 LDR X0, [X24]
	0x01D694B8 ADD X8, X31, 0x8
	0x01D694BC BL 0x26398AC
	0x01D694C0 LDUR V0, [X31 + 0x8]
	0x01D694C4 LDR X9, [X31 + 0x18]
	0x01D694C8 LDR X2, [X23]
	0x01D694CC ADD X8, X31, 0x20
	0x01D694D0 STP X21, X20, [X31 + 0x48]
	0x01D694D4 ORR X20, X8, 0xF
	0x01D694D8 MOVN W10, 0x0
	0x01D694DC ADD X1, X31, 0x20
	0x01D694E0 MOV X0, X20
	0x01D694E4 STUR V0, [X31 + 0x28]
	0x01D694E8 STP X9, X19, [X31 + 0x38]
	0x01D694EC STR W10, [X31 + 0x20]
	0x01D694F0 BL 0x212C0A0
	0x01D694F4 LDR X1, [X22]
	0x01D694F8 MOV X0, X20
	0x01D694FC BL 0x26398C0
	0x01D69500 LDP X20, X19, [X31 + 0x90]
	0x01D69504 LDP X22, X21, [X31 + 0x80]
	0x01D69508 LDP X24, X23, [X31 + 0x70]
	0x01D6950C LDR X30, [X31 + 0x60]
	0x01D69510 ADD X31, X31, 0xA0
	0x01D69514 RET
	0x01D69518 SUB X31, X31, 0x90
	0x01D6951C STP X29, X30, [X31 + 0x30]
	0x01D69520 STP X28, X27, [X31 + 0x40]
	0x01D69524 STP X26, X25, [X31 + 0x50]
	0x01D69528 STP X24, X23, [X31 + 0x60]
	0x01D6952C STP X22, X21, [X31 + 0x70]
	0x01D69530 STP X20, X19, [X31 + 0x80]
	0x01D69534 STP X1, X5, [X31]
	0x01D69538 ADRP X24, 0x266F000
	0x01D6953C ADRP X25, 0x238A000
	0x01D69540 ADRP X22, 0x238A000
	0x01D69544 LDRB W8, [X24 + 0x88F]
	0x01D69548 LDR X25, [X25 + 0x720]
	0x01D6954C LDR X22, [X22 + 0x718]
	0x01D69550 MOV X21, X3
	0x01D69554 MOV X23, X2
	0x01D69558 TBNZ X8, 0x0, 0x1D69630
	0x01D6955C ADRP X0, 0x238A000
	0x01D69560 LDR X0, [X0 + 0x658]
	0x01D69564 BL 0x1C16CF4
	0x01D69568 ADRP X0, 0x238C000
	0x01D6956C LDR X0, [X0 + 0xA58]
	0x01D69570 BL 0x1C16CF4
	0x01D69574 ADRP X0, 0x238A000
	0x01D69578 LDR X0, [X0 + 0x710]
	0x01D6957C BL 0x1C16CF4
	0x01D69580 ADRP X0, 0x238A000
	0x01D69584 LDR X0, [X0 + 0x718]
	0x01D69588 BL 0x1C16CF4
	0x01D6958C ADRP X0, 0x238A000
	0x01D69590 LDR X0, [X0 + 0x720]
	0x01D69594 BL 0x1C16CF4
	0x01D69598 ADRP X0, 0x238C000
	0x01D6959C LDR X0, [X0 + 0xBE0]
	0x01D695A0 BL 0x1C16CF4
	0x01D695A4 ADRP X0, 0x238C000
	0x01D695A8 LDR X0, [X0 + 0xA18]
	0x01D695AC BL 0x1C16CF4
	0x01D695B0 ADRP X0, 0x238C000
	0x01D695B4 LDR X0, [X0 + 0xA60]
	0x01D695B8 BL 0x1C16CF4
	0x01D695BC ADRP X0, 0x238C000
	0x01D695C0 LDR X0, [X0 + 0xBE8]
	0x01D695C4 BL 0x1C16CF4
	0x01D695C8 ADRP X0, 0x238C000
	0x01D695CC LDR X0, [X0 + 0xBF0]
	0x01D695D0 BL 0x1C16CF4
	0x01D695D4 ADRP X0, 0x238C000
	0x01D695D8 LDR X0, [X0 + 0xAA0]
	0x01D695DC BL 0x1C16CF4
	0x01D695E0 ADRP X0, 0x238C000
	0x01D695E4 LDR X0, [X0 + 0xBF8]
	0x01D695E8 BL 0x1C16CF4
	0x01D695EC ADRP X0, 0x238C000
	0x01D695F0 LDR X0, [X0 + 0xC00]
	0x01D695F4 BL 0x1C16CF4
	0x01D695F8 ADRP X0, 0x238C000
	0x01D695FC LDR X0, [X0 + 0xC08]
	0x01D69600 BL 0x1C16CF4
	0x01D69604 ADRP X0, 0x238C000
	0x01D69608 LDR X0, [X0 + 0xC10]
	0x01D6960C BL 0x1C16CF4
	0x01D69610 ADRP X0, 0x238C000
	0x01D69614 LDR X0, [X0 + 0xC18]
	0x01D69618 BL 0x1C16CF4
	0x01D6961C ADRP X0, 0x238C000
	0x01D69620 LDR X0, [X0 + 0xC20]
	0x01D69624 BL 0x1C16CF4
	0x01D69628 MOVZ W8, 0x1
	0x01D6962C STRB W8, [X24 + 0x88F]
	0x01D69630 LDR X0, [X25]
	0x01D69634 BL 0x1C16F10
	0x01D69638 LDR X1, [X22]
	0x01D6963C MOV X22, X0
	0x01D69640 BL 0x2AA4804
	0x01D69644 CBZ X21, 0x1D698DC
	0x01D69648 CBZ X22, 0x1D698DC
	0x01D6964C ADRP X8, 0x238C000
	0x01D69650 ADRP X25, 0x238A000
	0x01D69654 LDR X8, [X8 + 0xC10]
	0x01D69658 LDR X25, [X25 + 0x710]
	0x01D6965C ADRP X29, 0x238C000
	0x01D69660 ADRP X19, 0x238C000
	0x01D69664 ADRP X20, 0x238C000
	0x01D69668 ADRP X27, 0x238C000
	0x01D6966C LDR X29, [X29 + 0xBF8]
	0x01D69670 LDR X19, [X19 + 0xC00]
	0x01D69674 LDR X20, [X20 + 0xA58]
	0x01D69678 LDR X27, [X27 + 0xA60]
	0x01D6967C LDR X2, [X21 + 0x28]
	0x01D69680 LDR X1, [X8]
	0x01D69684 LDR X3, [X25]
	0x01D69688 ADRP X28, 0x238C000
	0x01D6968C ADRP X26, 0x238C000
	0x01D69690 ADRP X24, 0x238A000
	0x01D69694 LDR X28, [X28 + 0xC18]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X20, 0x2670000
	011 Move X21, 0x238B000
	012 Move W8, [X20+2179]
	013 Move X21, [X21+1624]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {48}
	019 Move X0, 0x238B000
	020 Move X0, [X0+1624]
	021 Call 0x1C17CF4
	022 Move X0, 0x238D000
	023 Move X0, [X0+2640]
	024 Call 0x1C17CF4
	025 Move X0, 0x238D000
	026 Move X0, [X0+2648]
	027 Call 0x1C17CF4
	028 Move X0, 0x238C000
	029 Move X0, [X0+2072]
	030 Call 0x1C17CF4
	031 Move X0, 0x238D000
	032 Move X0, [X0+2656]
	033 Call 0x1C17CF4
	034 Move X0, 0x238B000
	035 Move X0, [X0+1928]
	036 Call 0x1C17CF4
	037 Move X0, 0x238D000
	038 Move X0, [X0+2664]
	039 Call 0x1C17CF4
	040 Move X0, 0x238D000
	041 Move X0, [X0+2672]
	042 Call 0x1C17CF4
	043 Move X0, 0x238D000
	044 Move X0, [X0+2680]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X20+2179], W8
	048 Move X0, [X21]
	049 Move [X31+16], X31
	050 Move [X31+24], X31
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X20, 0x2670000
	056 Move W8, [X20+2360]
	057 Compare W8, 0
	058 JumpIfNotEqual {64}
	059 Move X0, 0x238B000
	060 Move X0, [X0+1624]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X20+2360], W8
	064 Move X0, [X21]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {70}
	068 Call 0x1C17DFC
	069 Move X0, [X21]
	070 Move X8, [X0+184]
	071 Move [X8+32], X19
	072 Compare X19, 0
	073 JumpIfEqual {285}
	074 Move X24, 0x238C000
	075 Move X8, [X19]
	076 Move X24, [X24+2072]
	077 Move X20, 0x238D000
	078 NotImplemented "Instruction LDRH not yet implemented."
	079 Move X1, [X24]
	080 Move X20, [X20+2648]
	081 Compare X9, 0
	082 JumpIfEqual {89}
	083 Move X10, [X8+176]
	084 Add X10, X10, 8
	085 NotImplemented "Instruction LDUR not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Subtract X9, X9, 1
	088 Add X10, X10, 16
	089 Move W2, 3
	090 Move X0, X19
	091 Call 0x1C5D788
	092 Move W9, [X10]
	093 Add W9, W9, 3
	094 Add X8, X8, W9
	095 Add X0, X8, 312
	096 Move X8, [X0]
	097 Move X1, [X0+8]
	098 Move X0, X19
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move X8, [X20]
	101 Move X20, X0
	102 Move W9, [X8+224]
	103 Compare W9, 0
	104 JumpIfNotEqual {107}
	105 Move X0, X8
	106 Call 0x1C17DFC
	107 Move X23, 0x238B000
	108 Move X23, [X23+1928]
	109 Move X0, X31
	110 Call DateTimeOffset.get_UtcNow
	111 Move [X31+16], X0
	112 Move [X31+24], X1
	113 Add X0, X31, 16
	114 Move X1, X31
	115 Call DateTimeOffset.ToUnixTimeSeconds, X0
	116 Move X8, [X19]
	117 Move X1, [X24]
	118 Subtract X22, X20, X0
	119 NotImplemented "Instruction LDRH not yet implemented."
	120 Compare X9, 0
	121 JumpIfEqual {128}
	122 Move X10, [X8+176]
	123 Add X10, X10, 8
	124 NotImplemented "Instruction LDUR not yet implemented."
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Subtract X9, X9, 1
	127 Add X10, X10, 16
	128 Move W2, 6
	129 Move X0, X19
	130 Call 0x1C5D788
	131 Move W9, [X10]
	132 Add W9, W9, 6
	133 Add X8, X8, W9
	134 Add X0, X8, 312
	135 Move X8, [X0]
	136 Move X1, [X0+8]
	137 Move X0, X19
	138 NotImplemented "Instruction BLR not yet implemented."
	139 Move X20, X0
	140 Move X0, X31
	141 Call DateTimeOffset.get_UtcNow
	142 Move [X31+16], X0
	143 Move [X31+24], X1
	144 Add X0, X31, 16
	145 Move X1, X31
	146 Call DateTimeOffset.ToUnixTimeSeconds, X0
	147 Move X8, X0
	148 Move X0, [X23]
	149 Subtract X8, X20, X8
	150 Or X9, X8, X22
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move W9, [X0+224]
	153 Move W10, 0x5180
	154 NotImplemented "Instruction MOVK not yet implemented."
	155 NotImplemented "Instruction CSEL not yet implemented."
	156 Move W8, 3600
	157 NotImplemented "Instruction CSEL not yet implemented."
	158 Compare W9, 0
	159 JumpIfNotEqual {161}
	160 Call 0x1C17DFC
	161 Move W0, 4
	162 Move W1, 64
	163 Move X2, X31
	164 Call Log.IsEnabled, X0, X1
	165 Move TEMP, X0
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfNotEqual {231}
	169 Move X8, [X19]
	170 Move X1, [X24]
	171 NotImplemented "Instruction LDRH not yet implemented."
	172 Compare X9, 0
	173 JumpIfEqual {180}
	174 Move X10, [X8+176]
	175 Add X10, X10, 8
	176 NotImplemented "Instruction LDUR not yet implemented."
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Subtract X9, X9, 1
	179 Add X10, X10, 16
	180 Move W2, 10
	181 Move X0, X19
	182 Call 0x1C5D788
	183 Move W9, [X10]
	184 Add W9, W9, 10
	185 Add X8, X8, W9
	186 Add X0, X8, 312
	187 Move X8, [X0]
	188 Move X1, [X0+8]
	189 Move X0, X19
	190 NotImplemented "Instruction BLR not yet implemented."
	191 Move X24, 0x238D000
	192 Move X24, [X24+2656]
	193 Move X19, X0
	194 Add X1, X31, 8
	195 Move [X31+8], X22
	196 Move X0, [X24]
	197 Call 0x1C17E04
	198 Move X20, X0
	199 Move X0, [X24]
	200 Add X1, X31, 0
	201 Move [X31], X25
	202 Call 0x1C17E04
	203 Move X8, 0x238D000
	204 Move X8, [X8+2664]
	205 Move X3, X0
	206 Move X1, X19
	207 Move X2, X20
	208 Move X8, [X8]
	209 Move X4, X31
	210 Move X0, X8
	211 Call String.Format, X0, X1, X2, X3
	212 Move X8, [X23]
	213 Move X19, X0
	214 Move W9, [X8+224]
	215 Compare W9, 0
	216 JumpIfNotEqual {219}
	217 Move X0, X8
	218 Call 0x1C17DFC
	219 Move X8, 0x238D000
	220 Move X9, 0x238D000
	221 Move X8, [X8+2680]
	222 Move X9, [X9+2672]
	223 Move W0, 64
	224 Move W5, 100
	225 Move X3, [X8]
	226 Move X4, [X9]
	227 Move X1, X19
	228 Move X2, X31
	229 Move X6, X31
	230 Call Log.Debug, X0, X1, X2, X3, X4, X5
	231 Move X0, [X21]
	232 Move W8, [X0+224]
	233 Compare W8, 0
	234 JumpIfNotEqual {237}
	235 Call 0x1C17DFC
	236 Move X0, [X21]
	237 Move X8, [X0+184]
	238 Move X19, 0x238D000
	239 Move X0, [X8+24]
	240 Move X19, [X19+2640]
	241 Compare X0, 0
	242 JumpIfEqual {245}
	243 Move X1, X31
	244 Call CancellationTokenSource.Cancel, X0
	245 Move X0, [X19]
	246 Call 0x1C17F10
	247 Move X1, X31
	248 Move X19, X0
	249 Call CancellationTokenSource..ctor, X0
	250 Move X0, [X21]
	251 Move W8, [X0+224]
	252 Compare W8, 0
	253 JumpIfNotEqual {256}
	254 Call 0x1C17DFC
	255 Move X0, [X21]
	256 Move X8, [X0+184]
	257 Move [X8+24], X19
	258 Compare X19, 0
	259 JumpIfEqual {285}
	260 Move X0, X19
	261 Move X1, X31
	262 Call CancellationTokenSource.get_Token, X0
	263 Move X8, -19390464
	264 Move V0, [X8+304]
	265 Move W8, 0x7F800000
	266 NotImplemented "Instruction SCVTF not yet implemented."
	267 Move S2, W8
	268 Multiply S0, S1, S0
	269 NotImplemented "Instruction FCVTZS not yet implemented."
	270 NotImplemented "Instruction FCMP not yet implemented."
	271 Move W9, 0x80000000
	272 Move X1, X0
	273 NotImplemented "Instruction CSEL not yet implemented."
	274 Call AnimalCompanyAPI.RefreshAPISession, X0, X1
	275 Move X20, [X31+80]
	276 Move X19, [X31+88]
	277 Move X22, [X31+64]
	278 Move X21, [X31+72]
	279 Move X24, [X31+48]
	280 Move X23, [X31+56]
	281 Move X30, [X31+32]
	282 Move X25, [X31+40]
	283 Add X31, X31, 96
	284 Return 
	285 Call 0x1C17F20

Method: System.Void RefreshAPISession(System.Int32 delay, System.Threading.CancellationToken token)

Disassembly:
	0x01D69698 LDR X26, [X26 + 0xC20]
	0x01D6969C LDR X24, [X24 + 0x658]
	0x01D696A0 MOV X0, X22
	0x01D696A4 BL 0x2AA5098
	0x01D696A8 LDR X1, [X29]
	0x01D696AC LDR X3, [X25]
	0x01D696B0 MOV X0, X22
	0x01D696B4 MOV X2, X23
	0x01D696B8 BL 0x2AA5098
	0x01D696BC LDR X2, [X21 + 0x38]
	0x01D696C0 LDR X1, [X19]
	0x01D696C4 LDR X3, [X25]
	0x01D696C8 MOV X0, X22
	0x01D696CC BL 0x2AA5098
	0x01D696D0 LDR X0, [X20]
	0x01D696D4 LDR X23, [X21 + 0x20]
	0x01D696D8 LDR W8, [X0 + 0xE0]
	0x01D696DC CBNZ W8, 0x1D696E4
	0x01D696E0 BL 0x1C16DFC
	0x01D696E4 MOV X0, X23
	0x01D696E8 MOV X1, X31
	0x01D696EC BL 0x3365C30
	0x01D696F0 STP X0, X1, [X31 + 0x20]
	0x01D696F4 ADD X0, X31, 0x20
	0x01D696F8 MOV X1, X31
	0x01D696FC BL 0x3364F6C
	0x01D69700 LDR X8, [X27]
	0x01D69704 STR X0, [X31 + 0x18]
	0x01D69708 ADD X1, X31, 0x18
	0x01D6970C MOV X0, X8
	0x01D69710 BL 0x1C16E04
	0x01D69714 LDR X1, [X28]
	0x01D69718 LDR X3, [X25]
	0x01D6971C MOV X2, X0
	0x01D69720 MOV X0, X22
	0x01D69724 BL 0x2AA5098
	0x01D69728 LDR X0, [X21 + 0x18]
	0x01D6972C MOV X1, X31
	0x01D69730 BL 0x3365C30
	0x01D69734 STP X0, X1, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+112], X30
	003 Move [X31+128], X22
	004 Move [X31+136], X21
	005 Move [X31+144], X20
	006 Move [X31+152], X19
	007 Move X22, 0x2670000
	008 Move X21, 0x238D000
	009 Move W8, [X22+2180]
	010 Move X21, [X21+2688]
	011 Move X19, X1
	012 Move W20, W0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x238D000
	018 Move X0, [X0+2688]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+2180], W8
	022 NotImplemented "Instruction MOVI not yet implemented."
	023 Add X8, X31, 0
	024 Move X0, X31
	025 Move [X31+96], X31
	026 Move [X31+64], V0
	027 Move [X31+72], V0
	028 Move [X31+32], V0
	029 Move [X31+40], V0
	030 Call AsyncVoidMethodBuilder.Create
	031 Move V0, [X31]
	032 Move V1, [X31+16]
	033 Move X2, [X21]
	034 Add X8, X31, 32
	035 Move TEMP, 0
	036 Not TEMP
	037 Move W9, TEMP
	038 Or X0, X8, 15
	039 Add X1, X31, 32
	040 Move [X31+72], W20
	041 Move [X31+80], X19
	042 Move [X31+40], V0
	043 Move [X31+56], V1
	044 Move [X31+32], W9
	045 Call AsyncVoidMethodBuilder.Start, X0, X1
	046 Move X20, [X31+144]
	047 Move X19, [X31+152]
	048 Move X22, [X31+128]
	049 Move X21, [X31+136]
	050 Move X30, [X31+112]
	051 Add X31, X31, 160
	052 Return 

Method: System.Threading.Tasks.Task`1<AnimalCompany.API.AnimalCompanyAPI/ClientBootstrapResponse> BootstrapAsync(Nakama.ISession session, AnimalCompany.API.ApiBootstrapRequest bootstrapRequest, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D69738 ADD X0, X31, 0x20
	0x01D6973C MOV X1, X31
	0x01D69740 BL 0x3364F6C
	0x01D69744 LDR X8, [X27]
	0x01D69748 STR X0, [X31 + 0x10]
	0x01D6974C ADD X1, X31, 0x10
	0x01D69750 MOV X0, X8
	0x01D69754 BL 0x1C16E04
	0x01D69758 LDR X1, [X26]
	0x01D6975C LDR X3, [X25]
	0x01D69760 MOV X2, X0
	0x01D69764 MOV X0, X22
	0x01D69768 BL 0x2AA5098
	0x01D6976C LDR X0, [X24]
	0x01D69770 LDR W8, [X0 + 0xE0]
	0x01D69774 CBNZ W8, 0x1D69780
	0x01D69778 BL 0x1C16DFC
	0x01D6977C LDR X0, [X24]
	0x01D69780 LDR X8, [X0 + 0xB8]
	0x01D69784 MOV X0, X22
	0x01D69788 MOV X1, X31
	0x01D6978C LDR X21, [X8 + 0x10]
	0x01D69790 BL 0x3483BE4
	0x01D69794 CBZ X21, 0x1D698DC
	0x01D69798 ADRP X9, 0x238C000
	0x01D6979C ADRP X10, 0x238C000
	0x01D697A0 LDR X8, [X21]
	0x01D697A4 LDR X9, [X9 + 0xA18]
	0x01D697A8 LDR X10, [X10 + 0xC08]
	0x01D697AC ADRP X24, 0x238C000
	0x01D697B0 MOV X22, X0
	0x01D697B4 LDR X1, [X9]
	0x01D697B8 LDRH W9, [X8 + 0x12E]
	0x01D697BC LDR X23, [X10]
	0x01D697C0 LDR X24, [X24 + 0xAA0]
	0x01D697C4 CBZ X9, 0x1D697E8
	0x01D697C8 LDR X10, [X8 + 0xB0]
	0x01D697CC ADD X10, X10, 0x8
	0x01D697D0 LDUR X11, [X10 - 0x8]
	0x01D697D4 CMP X11, X1
	0x01D697D8 B.EQ 0x1D697F8
	0x01D697DC SUBS X9, X9, 0x1
	0x01D697E0 ADD X10, X10, 0x10
	0x01D697E4 B.NE 0x1D697D0
	0x01D697E8 MOVZ W2, 0x48
	0x01D697EC MOV X0, X21
	0x01D697F0 BL 0x1C5C788
	0x01D697F4 B 0x1D69808
	0x01D697F8 LDR W9, [X10]
	0x01D697FC ADD W9, W9, 0x48
	0x01D69800 ADD X8, X8, W9, 0x4, SXTW
	0x01D69804 ADD X0, X8, 0x138
	0x01D69808 LDP X8, X6, [X0]
	0x01D6980C LDP X1, X5, [X31]
	0x01D69810 MOV X0, X21
	0x01D69814 MOV X2, X23
	0x01D69818 MOV X3, X22
	0x01D6981C MOV X4, X31
	0x01D69820 BLR X8
	0x01D69824 LDR X8, [X24]
	0x01D69828 MOV X19, X0
	0x01D6982C LDR W9, [X8 + 0xE0]
	0x01D69830 CBNZ W9, 0x1D69840
	0x01D69834 MOV X0, X8
	0x01D69838 BL 0x1C16DFC
	0x01D6983C LDR X8, [X24]
	0x01D69840 LDR X9, [X8 + 0xB8]
	0x01D69844 LDR X20, [X9 + 0x28]
	0x01D69848 CBNZ X20, 0x1D698A0
	0x01D6984C LDR W9, [X8 + 0xE0]
	0x01D69850 CBNZ W9, 0x1D69860
	0x01D69854 MOV X0, X8
	0x01D69858 BL 0x1C16DFC
	0x01D6985C LDR X8, [X24]
	0x01D69860 ADRP X9, 0x238C000
	0x01D69864 LDR X8, [X8 + 0xB8]
	0x01D69868 LDR X9, [X9 + 0xBE0]
	0x01D6986C LDR X21, [X8]
	0x01D69870 LDR X0, [X9]
	0x01D69874 BL 0x1C16F10
	0x01D69878 ADRP X8, 0x238C000
	0x01D6987C LDR X8, [X8 + 0xBF0]
	0x01D69880 MOV X1, X21
	0x01D69884 MOV X3, X31
	0x01D69888 MOV X20, X0
	0x01D6988C LDR X2, [X8]
	0x01D69890 BL 0x2D31E54
	0x01D69894 LDR X8, [X24]
	0x01D69898 LDR X8, [X8 + 0xB8]
	0x01D6989C STR X20, [X8 + 0x28]
	0x01D698A0 CBZ X19, 0x1D698DC
	0x01D698A4 ADRP X8, 0x238C000
	0x01D698A8 LDR X8, [X8 + 0xBE8]
	0x01D698AC MOV X0, X19
	0x01D698B0 MOV X1, X20
	0x01D698B4 LDR X2, [X8]
	0x01D698B8 BL 0x2138B18
	0x01D698BC LDP X20, X19, [X31 + 0x80]
	0x01D698C0 LDP X22, X21, [X31 + 0x70]
	0x01D698C4 LDP X24, X23, [X31 + 0x60]
	0x01D698C8 LDP X26, X25, [X31 + 0x50]
	0x01D698CC LDP X28, X27, [X31 + 0x40]
	0x01D698D0 LDP X29, X30, [X31 + 0x30]
	0x01D698D4 ADD X31, X31, 0x90
	0x01D698D8 RET
	0x01D698DC BL 0x1C16F20
	0x01D698E0 STR X30, [X31 - 0x40]!
	0x01D698E4 STP X24, X23, [X31 + 0x10]
	0x01D698E8 STP X22, X21, [X31 + 0x20]
	0x01D698EC STP X20, X19, [X31 + 0x30]
	0x01D698F0 ADRP X23, 0x266F000
	0x01D698F4 ADRP X24, 0x238B000
	0x01D698F8 ADRP X22, 0x238B000
	0x01D698FC LDRB W8, [X23 + 0x890]
	0x01D69900 LDR X24, [X24 + 0x6D0]
	0x01D69904 LDR X22, [X22 + 0x6C0]
	0x01D69908 MOV X19, X3
	0x01D6990C MOV X21, X2
	0x01D69910 MOV X20, X1
	0x01D69914 TBNZ X8, 0x0, 0x1D699A4
	0x01D69918 ADRP X0, 0x238A000
	0x01D6991C LDR X0, [X0 + 0x658]
	0x01D69920 BL 0x1C16CF4
	0x01D69924 ADRP X0, 0x238B000
	0x01D69928 LDR X0, [X0 + 0x810]
	0x01D6992C BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x2670000
	009 Move X22, 0x238B000
	010 Move W8, [X23+2181]
	011 Move X22, [X22+1624]
	012 Move X19, X3
	013 Move X21, X2
	014 Move X20, X1
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {42}
	019 Move X0, 0x238B000
	020 Move X0, [X0+1624]
	021 Call 0x1C17CF4
	022 Move X0, 0x238D000
	023 Move X0, [X0+2696]
	024 Call 0x1C17CF4
	025 Move X0, 0x238D000
	026 Move X0, [X0+2584]
	027 Call 0x1C17CF4
	028 Move X0, 0x238D000
	029 Move X0, [X0+2704]
	030 Call 0x1C17CF4
	031 Move X0, 0x238D000
	032 Move X0, [X0+2712]
	033 Call 0x1C17CF4
	034 Move X0, 0x238D000
	035 Move X0, [X0+2720]
	036 Call 0x1C17CF4
	037 Move X0, 0x238D000
	038 Move X0, [X0+2728]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X23+2181], W8
	042 Move X0, X21
	043 Move X1, X31
	044 Call JsonWriter.ToJson, X0
	045 Move X8, [X22]
	046 Move X21, X0
	047 Move W9, [X8+224]
	048 Compare W9, 0
	049 JumpIfNotEqual {53}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Move X8, [X22]
	053 Move X8, [X8+184]
	054 Move X22, [X8+16]
	055 Compare X22, 0
	056 JumpIfEqual {141}
	057 Move X9, 0x238D000
	058 Move X10, 0x238D000
	059 Move X8, [X22]
	060 Move X9, [X9+2584]
	061 Move X10, [X10+2728]
	062 Move X24, 0x238D000
	063 Move X1, [X9]
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 Move X23, [X10]
	066 Move X24, [X24+2720]
	067 Compare X9, 0
	068 JumpIfEqual {75}
	069 Move X10, [X8+176]
	070 Add X10, X10, 8
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Subtract X9, X9, 1
	074 Add X10, X10, 16
	075 Move W2, 72
	076 Move X0, X22
	077 Call 0x1C5D788
	078 Move W9, [X10]
	079 Add W9, W9, 72
	080 Add X8, X8, W9
	081 Add X0, X8, 312
	082 Move X8, [X0]
	083 Move X6, [X0+8]
	084 Move X0, X22
	085 Move X1, X20
	086 Move X2, X23
	087 Move X3, X21
	088 Move X4, X31
	089 Move X5, X19
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move X8, [X24]
	092 Move X19, X0
	093 Move W9, [X8+224]
	094 Compare W9, 0
	095 JumpIfNotEqual {99}
	096 Move X0, X8
	097 Call 0x1C17DFC
	098 Move X8, [X24]
	099 Move X9, [X8+184]
	100 Move X20, [X9+8]
	101 Compare X20, 0
	102 JumpIfNotEqual {125}
	103 Move W9, [X8+224]
	104 Compare W9, 0
	105 JumpIfNotEqual {109}
	106 Move X0, X8
	107 Call 0x1C17DFC
	108 Move X8, [X24]
	109 Move X9, 0x238D000
	110 Move X8, [X8+184]
	111 Move X9, [X9+2696]
	112 Move X21, [X8]
	113 Move X0, [X9]
	114 Call 0x1C17F10
	115 Move X8, 0x238D000
	116 Move X8, [X8+2712]
	117 Move X1, X21
	118 Move X3, X31
	119 Move X20, X0
	120 Move X2, [X8]
	121 Call Func`2<Object, ClientBootstrapResponse>..ctor, X0, X1, X2
	122 Move X8, [X24]
	123 Move X8, [X8+184]
	124 Move [X8+8], X20
	125 Compare X19, 0
	126 JumpIfEqual {141}
	127 Move X8, 0x238D000
	128 Move X8, [X8+2704]
	129 Move X0, X19
	130 Move X1, X20
	131 Move X20, [X31+48]
	132 Move X19, [X31+56]
	133 Move X2, [X8]
	134 Move X22, [X31+32]
	135 Move X21, [X31+40]
	136 Move X24, [X31+16]
	137 Move X23, [X31+24]
	138 Move X30, [X31+64]
	139 Call Task`1<Object>.ContinueWith, X0, X1
	140 Return X0
	141 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<AnimalCompany.API.ApiUserInventory> GetInventoryAsync(Nakama.ISession session, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D69930 ADRP X0, 0x238B000
	0x01D69934 LDR X0, [X0 + 0x6C0]
	0x01D69938 BL 0x1C16CF4
	0x01D6993C ADRP X0, 0x238B000
	0x01D69940 LDR X0, [X0 + 0x6D0]
	0x01D69944 BL 0x1C16CF4
	0x01D69948 ADRP X0, 0x238C000
	0x01D6994C LDR X0, [X0 + 0xC28]
	0x01D69950 BL 0x1C16CF4
	0x01D69954 ADRP X0, 0x238C000
	0x01D69958 LDR X0, [X0 + 0xA18]
	0x01D6995C BL 0x1C16CF4
	0x01D69960 ADRP X0, 0x238C000
	0x01D69964 LDR X0, [X0 + 0xC30]
	0x01D69968 BL 0x1C16CF4
	0x01D6996C ADRP X0, 0x238C000
	0x01D69970 LDR X0, [X0 + 0xC38]
	0x01D69974 BL 0x1C16CF4
	0x01D69978 ADRP X0, 0x238C000
	0x01D6997C LDR X0, [X0 + 0xAA0]
	0x01D69980 BL 0x1C16CF4
	0x01D69984 ADRP X0, 0x238C000
	0x01D69988 LDR X0, [X0 + 0xC40]
	0x01D6998C BL 0x1C16CF4
	0x01D69990 ADRP X0, 0x238B000
	0x01D69994 LDR X0, [X0 + 0x738]
	0x01D69998 BL 0x1C16CF4
	0x01D6999C MOVZ W8, 0x1
	0x01D699A0 STRB W8, [X23 + 0x890]
	0x01D699A4 LDR X0, [X24]
	0x01D699A8 BL 0x1C16F10
	0x01D699AC LDR X1, [X22]
	0x01D699B0 MOV X22, X0
	0x01D699B4 BL 0x2AA4804
	0x01D699B8 CBZ X22, 0x1D69B4C
	0x01D699BC ADRP X8, 0x238B000
	0x01D699C0 ADRP X9, 0x238B000
	0x01D699C4 LDR X8, [X8 + 0x738]
	0x01D699C8 LDR X9, [X9 + 0x810]
	0x01D699CC ADRP X23, 0x238A000
	0x01D699D0 MOV X0, X22
	0x01D699D4 LDR X1, [X8]
	0x01D699D8 LDR X3, [X9]
	0x01D699DC LDR X23, [X23 + 0x658]
	0x01D699E0 MOV X2, X21
	0x01D699E4 BL 0x2AA5098
	0x01D699E8 LDR X0, [X23]
	0x01D699EC LDR W8, [X0 + 0xE0]
	0x01D699F0 CBNZ W8, 0x1D699FC
	0x01D699F4 BL 0x1C16DFC
	0x01D699F8 LDR X0, [X23]
	0x01D699FC LDR X8, [X0 + 0xB8]
	0x01D69A00 MOV X0, X22
	0x01D69A04 MOV X1, X31
	0x01D69A08 LDR X21, [X8 + 0x10]
	0x01D69A0C BL 0x3483BE4
	0x01D69A10 CBZ X21, 0x1D69B4C
	0x01D69A14 ADRP X9, 0x238C000
	0x01D69A18 ADRP X10, 0x238C000
	0x01D69A1C LDR X8, [X21]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+80], X30
	003 Move [X31+96], X22
	004 Move [X31+104], X21
	005 Move [X31+112], X20
	006 Move [X31+120], X19
	007 Move X21, 0x2670000
	008 Move X20, 0x238D000
	009 Move W8, [X21+2182]
	010 Move X20, [X20+2736]
	011 Move X19, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x238D000
	017 Move X0, [X0+2744]
	018 Call 0x1C17CF4
	019 Move X0, 0x238D000
	020 Move X0, [X0+2752]
	021 Call 0x1C17CF4
	022 Move X0, 0x238D000
	023 Move X0, [X0+2760]
	024 Call 0x1C17CF4
	025 Move X0, 0x238D000
	026 Move X0, [X0+2736]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+2182], W8
	030 Move X0, [X20]
	031 NotImplemented "Instruction MOVI not yet implemented."
	032 Move [X31+48], V0
	033 Move [X31+56], V0
	034 Move [X31+2], V0
	035 Move X22, 0x238D000
	036 Move X20, 0x238D000
	037 Move X21, 0x238D000
	038 Move W8, [X0+224]
	039 Move X22, [X22+2744]
	040 Move X20, [X20+2752]
	041 Move X21, [X21+2760]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, [X22]
	046 Add X8, X31, 8
	047 Call AsyncTaskMethodBuilder`1<ApiUserInventory>.Create
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X9, [X31+24]
	050 Move X2, [X20]
	051 Add X8, X31, 32
	052 Or X20, X8, 15
	053 Move TEMP, 0
	054 Not TEMP
	055 Move W10, TEMP
	056 Add X1, X31, 32
	057 Move X0, X20
	058 Move [X31+40], V0
	059 Move [X31+56], X9
	060 Move [X31+64], X19
	061 Move [X31+32], W10
	062 Call AsyncTaskMethodBuilder`1<ApiUserInventory>.Start, X0, X1
	063 Move X1, [X21]
	064 Move X0, X20
	065 Call AsyncTaskMethodBuilder`1<ApiUserInventory>.get_Task, X0
	066 Move X20, [X31+112]
	067 Move X19, [X31+120]
	068 Move X22, [X31+96]
	069 Move X21, [X31+104]
	070 Move X30, [X31+80]
	071 Add X31, X31, 128
	072 Return X0

Method: System.Threading.Tasks.Task`1<AnimalCompany.API.AnimalCompanyAPI/GetAvatarsResponse> GetAvatarsAsync(Nakama.ISession session, System.String[] userIDs, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D69A20 LDR X9, [X9 + 0xA18]
	0x01D69A24 LDR X10, [X10 + 0xC40]
	0x01D69A28 ADRP X24, 0x238C000
	0x01D69A2C MOV X22, X0
	0x01D69A30 LDR X1, [X9]
	0x01D69A34 LDRH W9, [X8 + 0x12E]
	0x01D69A38 LDR X23, [X10]
	0x01D69A3C LDR X24, [X24 + 0xAA0]
	0x01D69A40 CBZ X9, 0x1D69A64
	0x01D69A44 LDR X10, [X8 + 0xB0]
	0x01D69A48 ADD X10, X10, 0x8
	0x01D69A4C LDUR X11, [X10 - 0x8]
	0x01D69A50 CMP X11, X1
	0x01D69A54 B.EQ 0x1D69A74
	0x01D69A58 SUBS X9, X9, 0x1
	0x01D69A5C ADD X10, X10, 0x10
	0x01D69A60 B.NE 0x1D69A4C
	0x01D69A64 MOVZ W2, 0x48
	0x01D69A68 MOV X0, X21
	0x01D69A6C BL 0x1C5C788
	0x01D69A70 B 0x1D69A84
	0x01D69A74 LDR W9, [X10]
	0x01D69A78 ADD W9, W9, 0x48
	0x01D69A7C ADD X8, X8, W9, 0x4, SXTW
	0x01D69A80 ADD X0, X8, 0x138
	0x01D69A84 LDP X8, X6, [X0]
	0x01D69A88 MOV X0, X21
	0x01D69A8C MOV X1, X20
	0x01D69A90 MOV X2, X23
	0x01D69A94 MOV X3, X22
	0x01D69A98 MOV X4, X31
	0x01D69A9C MOV X5, X19
	0x01D69AA0 BLR X8
	0x01D69AA4 LDR X8, [X24]
	0x01D69AA8 MOV X19, X0
	0x01D69AAC LDR W9, [X8 + 0xE0]
	0x01D69AB0 CBNZ W9, 0x1D69AC0
	0x01D69AB4 MOV X0, X8
	0x01D69AB8 BL 0x1C16DFC
	0x01D69ABC LDR X8, [X24]
	0x01D69AC0 LDR X9, [X8 + 0xB8]
	0x01D69AC4 LDR X20, [X9 + 0x30]
	0x01D69AC8 CBNZ X20, 0x1D69B20
	0x01D69ACC LDR W9, [X8 + 0xE0]
	0x01D69AD0 CBNZ W9, 0x1D69AE0
	0x01D69AD4 MOV X0, X8
	0x01D69AD8 BL 0x1C16DFC
	0x01D69ADC LDR X8, [X24]
	0x01D69AE0 ADRP X9, 0x238C000
	0x01D69AE4 LDR X8, [X8 + 0xB8]
	0x01D69AE8 LDR X9, [X9 + 0xC28]
	0x01D69AEC LDR X21, [X8]
	0x01D69AF0 LDR X0, [X9]
	0x01D69AF4 BL 0x1C16F10
	0x01D69AF8 ADRP X8, 0x238C000
	0x01D69AFC LDR X8, [X8 + 0xC38]
	0x01D69B00 MOV X1, X21
	0x01D69B04 MOV X3, X31
	0x01D69B08 MOV X20, X0
	0x01D69B0C LDR X2, [X8]
	0x01D69B10 BL 0x2D31C2C
	0x01D69B14 LDR X8, [X24]
	0x01D69B18 LDR X8, [X8 + 0xB8]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+104], X23
	004 Move [X31+112], X22
	005 Move [X31+120], X21
	006 Move [X31+128], X20
	007 Move [X31+136], X19
	008 Move X22, 0x2670000
	009 Move X21, 0x238D000
	010 Move W8, [X22+2183]
	011 Move X21, [X21+2768]
	012 Move X19, X2
	013 Move X20, X1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x238D000
	019 Move X0, [X0+2776]
	020 Call 0x1C17CF4
	021 Move X0, 0x238D000
	022 Move X0, [X0+2784]
	023 Call 0x1C17CF4
	024 Move X0, 0x238D000
	025 Move X0, [X0+2792]
	026 Call 0x1C17CF4
	027 Move X0, 0x238D000
	028 Move X0, [X0+2768]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+2183], W8
	032 Move X0, [X21]
	033 NotImplemented "Instruction MOVI not yet implemented."
	034 Move [X31+80], X31
	035 Move [X31+48], V0
	036 Move [X31+56], V0
	037 Move [X31+2], V0
	038 Move X23, 0x238D000
	039 Move X22, 0x238D000
	040 Move X21, 0x238D000
	041 Move W8, [X0+224]
	042 Move X23, [X23+2776]
	043 Move X22, [X22+2784]
	044 Move X21, [X21+2792]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, [X23]
	049 Add X8, X31, 8
	050 Call AsyncTaskMethodBuilder`1<GetAvatarsResponse>.Create
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 Move X9, [X31+24]
	053 Move X2, [X22]
	054 Add X8, X31, 32
	055 Move [X31+64], X19
	056 Move [X31+72], X20
	057 Or X20, X8, 15
	058 Move TEMP, 0
	059 Not TEMP
	060 Move W10, TEMP
	061 Add X1, X31, 32
	062 Move X0, X20
	063 Move [X31+40], V0
	064 Move [X31+56], X9
	065 Move [X31+32], W10
	066 Call AsyncTaskMethodBuilder`1<GetAvatarsResponse>.Start, X0, X1
	067 Move X1, [X21]
	068 Move X0, X20
	069 Call AsyncTaskMethodBuilder`1<GetAvatarsResponse>.get_Task, X0
	070 Move X20, [X31+128]
	071 Move X19, [X31+136]
	072 Move X22, [X31+112]
	073 Move X21, [X31+120]
	074 Move X30, [X31+96]
	075 Move X23, [X31+104]
	076 Add X31, X31, 144
	077 Return X0

Method: System.Threading.Tasks.Task`1<AnimalCompany.API.AnimalCompanyAPI/UpdateAvatarResponse> UpdateAvatarAsync(Nakama.ISession session, AnimalCompany.API.ApiUserAvatar avatar, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D69B1C STR X20, [X8 + 0x30]
	0x01D69B20 CBZ X19, 0x1D69B4C
	0x01D69B24 ADRP X8, 0x238C000
	0x01D69B28 LDR X8, [X8 + 0xC30]
	0x01D69B2C MOV X0, X19
	0x01D69B30 MOV X1, X20
	0x01D69B34 LDP X20, X19, [X31 + 0x30]
	0x01D69B38 LDR X2, [X8]
	0x01D69B3C LDP X22, X21, [X31 + 0x20]
	0x01D69B40 LDP X24, X23, [X31 + 0x10]
	0x01D69B44 LDR X30, [X31], #0x40
	0x01D69B48 B 0x2138A18
	0x01D69B4C BL 0x1C16F20
	0x01D69B50 STR X30, [X31 - 0x20]!
	0x01D69B54 STP X20, X19, [X31 + 0x10]
	0x01D69B58 ADRP X20, 0x266F000
	0x01D69B5C ADRP X19, 0x238A000
	0x01D69B60 LDRB W8, [X20 + 0x891]
	0x01D69B64 LDR X19, [X19 + 0x658]
	0x01D69B68 TBNZ X8, 0x0, 0x1D69B8C
	0x01D69B6C ADRP X0, 0x238A000
	0x01D69B70 LDR X0, [X0 + 0x658]
	0x01D69B74 BL 0x1C16CF4
	0x01D69B78 ADRP X0, 0x238C000
	0x01D69B7C LDR X0, [X0 + 0xA18]
	0x01D69B80 BL 0x1C16CF4
	0x01D69B84 MOVZ W8, 0x1
	0x01D69B88 STRB W8, [X20 + 0x891]
	0x01D69B8C LDR X0, [X19]
	0x01D69B90 LDR W8, [X0 + 0xE0]
	0x01D69B94 CBNZ W8, 0x1D69BA0
	0x01D69B98 BL 0x1C16DFC
	0x01D69B9C LDR X0, [X19]
	0x01D69BA0 LDR X8, [X0 + 0xB8]
	0x01D69BA4 LDR X19, [X8 + 0x10]
	0x01D69BA8 CBZ X19, 0x1D69C14
	0x01D69BAC ADRP X10, 0x238C000
	0x01D69BB0 LDR X8, [X19]
	0x01D69BB4 LDR X10, [X10 + 0xA18]
	0x01D69BB8 LDRH W9, [X8 + 0x12E]
	0x01D69BBC LDR X1, [X10]
	0x01D69BC0 CBZ X9, 0x1D69BE4
	0x01D69BC4 LDR X10, [X8 + 0xB0]
	0x01D69BC8 ADD X10, X10, 0x8
	0x01D69BCC LDUR X11, [X10 - 0x8]
	0x01D69BD0 CMP X11, X1
	0x01D69BD4 B.EQ 0x1D69BF4
	0x01D69BD8 SUBS X9, X9, 0x1
	0x01D69BDC ADD X10, X10, 0x10
	0x01D69BE0 B.NE 0x1D69BCC
	0x01D69BE4 MOV X0, X19
	0x01D69BE8 MOV W2, W31
	0x01D69BEC BL 0x1C5C788
	0x01D69BF0 B 0x1D69C00
	0x01D69BF4 LDRSW X9, [X10]
	0x01D69BF8 ADD X8, X8, X9, 0x4, LSL
	0x01D69BFC ADD X0, X8, 0x138
	0x01D69C00 LDP X2, X1, [X0]
	0x01D69C04 MOV X0, X19
	0x01D69C08 LDP X20, X19, [X31 + 0x10]
	0x01D69C0C LDR X30, [X31], #0x20
	0x01D69C10 BR X2
	0x01D69C14 BL 0x1C16F20
	0x01D69C18 STR X30, [X31 - 0x20]!
	0x01D69C1C STP X20, X19, [X31 + 0x10]
	0x01D69C20 ADRP X20, 0x266F000
	0x01D69C24 ADRP X19, 0x238A000
	0x01D69C28 LDRB W8, [X20 + 0x892]
	0x01D69C2C LDR X19, [X19 + 0x658]
	0x01D69C30 TBNZ X8, 0x0, 0x1D69C54
	0x01D69C34 ADRP X0, 0x238A000
	0x01D69C38 LDR X0, [X0 + 0x658]
	0x01D69C3C BL 0x1C16CF4
	0x01D69C40 ADRP X0, 0x238C000
	0x01D69C44 LDR X0, [X0 + 0xA18]
	0x01D69C48 BL 0x1C16CF4
	0x01D69C4C MOVZ W8, 0x1
	0x01D69C50 STRB W8, [X20 + 0x892]
	0x01D69C54 LDR X0, [X19]
	0x01D69C58 LDR W8, [X0 + 0xE0]
	0x01D69C5C CBNZ W8, 0x1D69C68
	0x01D69C60 BL 0x1C16DFC
	0x01D69C64 LDR X0, [X19]
	0x01D69C68 LDR X8, [X0 + 0xB8]
	0x01D69C6C LDR X19, [X8 + 0x10]
	0x01D69C70 CBZ X19, 0x1D69CE0
	0x01D69C74 ADRP X10, 0x238C000
	0x01D69C78 LDR X8, [X19]
	0x01D69C7C LDR X10, [X10 + 0xA18]
	0x01D69C80 LDRH W9, [X8 + 0x12E]
	0x01D69C84 LDR X1, [X10]
	0x01D69C88 CBZ X9, 0x1D69CAC
	0x01D69C8C LDR X10, [X8 + 0xB0]
	0x01D69C90 ADD X10, X10, 0x8
	0x01D69C94 LDUR X11, [X10 - 0x8]
	0x01D69C98 CMP X11, X1
	0x01D69C9C B.EQ 0x1D69CBC
	0x01D69CA0 SUBS X9, X9, 0x1
	0x01D69CA4 ADD X10, X10, 0x10
	0x01D69CA8 B.NE 0x1D69C94
	0x01D69CAC MOVZ W2, 0x1
	0x01D69CB0 MOV X0, X19
	0x01D69CB4 BL 0x1C5C788
	0x01D69CB8 B 0x1D69CCC
	0x01D69CBC LDR W9, [X10]
	0x01D69CC0 ADD W9, W9, 0x1
	0x01D69CC4 ADD X8, X8, W9, 0x4, SXTW
	0x01D69CC8 ADD X0, X8, 0x138
	0x01D69CCC LDP X2, X1, [X0]
	0x01D69CD0 MOV X0, X19
	0x01D69CD4 LDP X20, X19, [X31 + 0x10]
	0x01D69CD8 LDR X30, [X31], #0x20
	0x01D69CDC BR X2
	0x01D69CE0 BL 0x1C16F20
	0x01D69CE4 STP X30, X21, [X31 - 0x20]!
	0x01D69CE8 STP X20, X19, [X31 + 0x10]
	0x01D69CEC ADRP X21, 0x266F000
	0x01D69CF0 ADRP X20, 0x238A000
	0x01D69CF4 LDRB W8, [X21 + 0x893]
	0x01D69CF8 LDR X20, [X20 + 0x658]
	0x01D69CFC MOV X19, X1
	0x01D69D00 TBNZ X8, 0x0, 0x1D69D24
	0x01D69D04 ADRP X0, 0x238A000
	0x01D69D08 LDR X0, [X0 + 0x658]
	0x01D69D0C BL 0x1C16CF4
	0x01D69D10 ADRP X0, 0x238C000
	0x01D69D14 LDR X0, [X0 + 0xA18]
	0x01D69D18 BL 0x1C16CF4
	0x01D69D1C MOVZ W8, 0x1
	0x01D69D20 STRB W8, [X21 + 0x893]
	0x01D69D24 LDR X0, [X20]
	0x01D69D28 LDR W8, [X0 + 0xE0]
	0x01D69D2C CBNZ W8, 0x1D69D38
	0x01D69D30 BL 0x1C16DFC
	0x01D69D34 LDR X0, [X20]
	0x01D69D38 LDR X8, [X0 + 0xB8]
	0x01D69D3C LDR X20, [X8 + 0x10]
	0x01D69D40 CBZ X20, 0x1D69DB4
	0x01D69D44 ADRP X10, 0x238C000
	0x01D69D48 LDR X8, [X20]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], X30
	003 Move [X31+96], X24
	004 Move [X31+104], X23
	005 Move [X31+112], X22
	006 Move [X31+120], X21
	007 Move [X31+128], X20
	008 Move [X31+136], X19
	009 Move X24, 0x2670000
	010 Move X23, 0x238D000
	011 Move X22, 0x238B000
	012 Move W8, [X24+2184]
	013 Move X23, [X23+2800]
	014 Move X22, [X22+1624]
	015 Move X19, X3
	016 Move X21, X2
	017 Move X20, X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {48}
	022 Move X0, 0x238B000
	023 Move X0, [X0+1624]
	024 Call 0x1C17CF4
	025 Move X0, 0x238D000
	026 Move X0, [X0+2800]
	027 Call 0x1C17CF4
	028 Move X0, 0x238D000
	029 Move X0, [X0+2808]
	030 Call 0x1C17CF4
	031 Move X0, 0x238D000
	032 Move X0, [X0+2584]
	033 Call 0x1C17CF4
	034 Move X0, 0x238D000
	035 Move X0, [X0+2816]
	036 Call 0x1C17CF4
	037 Move X0, 0x238D000
	038 Move X0, [X0+2824]
	039 Call 0x1C17CF4
	040 Move X0, 0x238D000
	041 Move X0, [X0+2720]
	042 Call 0x1C17CF4
	043 Move X0, 0x238D000
	044 Move X0, [X0+2832]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X24+2184], W8
	048 Add X0, X31, 0
	049 Move W2, 80
	050 Move X1, X21
	051 Call 0x3EB2AC0
	052 Move X0, [X23]
	053 Add X1, X31, 0
	054 Call 0x1C17E04
	055 Move X1, X31
	056 Call JsonWriter.ToJson, X0
	057 Move X8, [X22]
	058 Move X21, X0
	059 Move W9, [X8+224]
	060 Compare W9, 0
	061 JumpIfNotEqual {65}
	062 Move X0, X8
	063 Call 0x1C17DFC
	064 Move X8, [X22]
	065 Move X8, [X8+184]
	066 Move X22, [X8+16]
	067 Compare X22, 0
	068 JumpIfEqual {154}
	069 Move X9, 0x238D000
	070 Move X10, 0x238D000
	071 Move X8, [X22]
	072 Move X9, [X9+2584]
	073 Move X10, [X10+2832]
	074 Move X24, 0x238D000
	075 Move X1, [X9]
	076 NotImplemented "Instruction LDRH not yet implemented."
	077 Move X23, [X10]
	078 Move X24, [X24+2720]
	079 Compare X9, 0
	080 JumpIfEqual {87}
	081 Move X10, [X8+176]
	082 Add X10, X10, 8
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Subtract X9, X9, 1
	086 Add X10, X10, 16
	087 Move W2, 72
	088 Move X0, X22
	089 Call 0x1C5D788
	090 Move W9, [X10]
	091 Add W9, W9, 72
	092 Add X8, X8, W9
	093 Add X0, X8, 312
	094 Move X8, [X0]
	095 Move X6, [X0+8]
	096 Move X0, X22
	097 Move X1, X20
	098 Move X2, X23
	099 Move X3, X21
	100 Move X4, X31
	101 Move X5, X19
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move X8, [X24]
	104 Move X19, X0
	105 Move W9, [X8+224]
	106 Compare W9, 0
	107 JumpIfNotEqual {111}
	108 Move X0, X8
	109 Call 0x1C17DFC
	110 Move X8, [X24]
	111 Move X9, [X8+184]
	112 Move X20, [X9+16]
	113 Compare X20, 0
	114 JumpIfNotEqual {137}
	115 Move W9, [X8+224]
	116 Compare W9, 0
	117 JumpIfNotEqual {121}
	118 Move X0, X8
	119 Call 0x1C17DFC
	120 Move X8, [X24]
	121 Move X9, 0x238D000
	122 Move X8, [X8+184]
	123 Move X9, [X9+2808]
	124 Move X21, [X8]
	125 Move X0, [X9]
	126 Call 0x1C17F10
	127 Move X8, 0x238D000
	128 Move X8, [X8+2824]
	129 Move X1, X21
	130 Move X3, X31
	131 Move X20, X0
	132 Move X2, [X8]
	133 Call Func`2<Object, UpdateAvatarResponse>..ctor, X0, X1, X2
	134 Move X8, [X24]
	135 Move X8, [X8+184]
	136 Move [X8+16], X20
	137 Compare X19, 0
	138 JumpIfEqual {154}
	139 Move X8, 0x238D000
	140 Move X8, [X8+2816]
	141 Move X0, X19
	142 Move X1, X20
	143 Move X2, [X8]
	144 Call Task`1<Object>.ContinueWith, X0, X1
	145 Move X20, [X31+128]
	146 Move X19, [X31+136]
	147 Move X22, [X31+112]
	148 Move X21, [X31+120]
	149 Move X24, [X31+96]
	150 Move X23, [X31+104]
	151 Move X30, [X31+80]
	152 Add X31, X31, 144
	153 Return X0
	154 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiRpc> UpdateWalletSoftCurrencyAsync(Nakama.ISession session, System.Int32 amount, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D69D4C LDR X10, [X10 + 0xA18]
	0x01D69D50 LDRH W9, [X8 + 0x12E]
	0x01D69D54 LDR X1, [X10]
	0x01D69D58 CBZ X9, 0x1D69D7C
	0x01D69D5C LDR X10, [X8 + 0xB0]
	0x01D69D60 ADD X10, X10, 0x8
	0x01D69D64 LDUR X11, [X10 - 0x8]
	0x01D69D68 CMP X11, X1
	0x01D69D6C B.EQ 0x1D69D8C
	0x01D69D70 SUBS X9, X9, 0x1
	0x01D69D74 ADD X10, X10, 0x10
	0x01D69D78 B.NE 0x1D69D64
	0x01D69D7C MOVZ W2, 0x2
	0x01D69D80 MOV X0, X20
	0x01D69D84 BL 0x1C5C788
	0x01D69D88 B 0x1D69D9C
	0x01D69D8C LDR W9, [X10]
	0x01D69D90 ADD W9, W9, 0x2
	0x01D69D94 ADD X8, X8, W9, 0x4, SXTW
	0x01D69D98 ADD X0, X8, 0x138
	0x01D69D9C LDP X3, X2, [X0]
	0x01D69DA0 MOV X0, X20
	0x01D69DA4 MOV X1, X19
	0x01D69DA8 LDP X20, X19, [X31 + 0x10]
	0x01D69DAC LDP X30, X21, [X31], #0x20
	0x01D69DB0 BR X3
	0x01D69DB4 BL 0x1C16F20
	0x01D69DB8 STR X30, [X31 - 0x20]!
	0x01D69DBC STP X20, X19, [X31 + 0x10]
	0x01D69DC0 ADRP X20, 0x266F000
	0x01D69DC4 ADRP X19, 0x238A000
	0x01D69DC8 LDRB W8, [X20 + 0x894]
	0x01D69DCC LDR X19, [X19 + 0x658]
	0x01D69DD0 TBNZ X8, 0x0, 0x1D69DF4
	0x01D69DD4 ADRP X0, 0x238A000
	0x01D69DD8 LDR X0, [X0 + 0x658]
	0x01D69DDC BL 0x1C16CF4
	0x01D69DE0 ADRP X0, 0x238C000
	0x01D69DE4 LDR X0, [X0 + 0xA18]
	0x01D69DE8 BL 0x1C16CF4
	0x01D69DEC MOVZ W8, 0x1
	0x01D69DF0 STRB W8, [X20 + 0x894]
	0x01D69DF4 LDR X0, [X19]
	0x01D69DF8 LDR W8, [X0 + 0xE0]
	0x01D69DFC CBNZ W8, 0x1D69E08
	0x01D69E00 BL 0x1C16DFC
	0x01D69E04 LDR X0, [X19]
	0x01D69E08 LDR X8, [X0 + 0xB8]
	0x01D69E0C LDR X19, [X8 + 0x10]
	0x01D69E10 CBZ X19, 0x1D69E80
	0x01D69E14 ADRP X10, 0x238C000
	0x01D69E18 LDR X8, [X19]
	0x01D69E1C LDR X10, [X10 + 0xA18]
	0x01D69E20 LDRH W9, [X8 + 0x12E]
	0x01D69E24 LDR X1, [X10]
	0x01D69E28 CBZ X9, 0x1D69E4C
	0x01D69E2C LDR X10, [X8 + 0xB0]
	0x01D69E30 ADD X10, X10, 0x8
	0x01D69E34 LDUR X11, [X10 - 0x8]
	0x01D69E38 CMP X11, X1
	0x01D69E3C B.EQ 0x1D69E5C
	0x01D69E40 SUBS X9, X9, 0x1
	0x01D69E44 ADD X10, X10, 0x10
	0x01D69E48 B.NE 0x1D69E34
	0x01D69E4C MOVZ W2, 0x3
	0x01D69E50 MOV X0, X19
	0x01D69E54 BL 0x1C5C788
	0x01D69E58 B 0x1D69E6C
	0x01D69E5C LDR W9, [X10]
	0x01D69E60 ADD W9, W9, 0x3
	0x01D69E64 ADD X8, X8, W9, 0x4, SXTW
	0x01D69E68 ADD X0, X8, 0x138
	0x01D69E6C LDP X2, X1, [X0]
	0x01D69E70 MOV X0, X19
	0x01D69E74 LDP X20, X19, [X31 + 0x10]
	0x01D69E78 LDR X30, [X31], #0x20
	0x01D69E7C BR X2
	0x01D69E80 BL 0x1C16F20
	0x01D69E84 STR X30, [X31 - 0x20]!
	0x01D69E88 STP X20, X19, [X31 + 0x10]
	0x01D69E8C ADRP X20, 0x266F000
	0x01D69E90 ADRP X19, 0x238A000
	0x01D69E94 LDRB W8, [X20 + 0x895]
	0x01D69E98 LDR X19, [X19 + 0x658]
	0x01D69E9C TBNZ X8, 0x0, 0x1D69EC0
	0x01D69EA0 ADRP X0, 0x238A000
	0x01D69EA4 LDR X0, [X0 + 0x658]
	0x01D69EA8 BL 0x1C16CF4
	0x01D69EAC ADRP X0, 0x238C000
	0x01D69EB0 LDR X0, [X0 + 0xA18]
	0x01D69EB4 BL 0x1C16CF4
	0x01D69EB8 MOVZ W8, 0x1
	0x01D69EBC STRB W8, [X20 + 0x895]
	0x01D69EC0 LDR X0, [X19]
	0x01D69EC4 LDR W8, [X0 + 0xE0]
	0x01D69EC8 CBNZ W8, 0x1D69ED4
	0x01D69ECC BL 0x1C16DFC
	0x01D69ED0 LDR X0, [X19]
	0x01D69ED4 LDR X8, [X0 + 0xB8]
	0x01D69ED8 LDR X19, [X8 + 0x10]
	0x01D69EDC CBZ X19, 0x1D69F4C
	0x01D69EE0 ADRP X10, 0x238C000
	0x01D69EE4 LDR X8, [X19]
	0x01D69EE8 LDR X10, [X10 + 0xA18]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x2670000
	009 Move X24, 0x238D000
	010 Move X22, 0x238D000
	011 Move W8, [X23+2185]
	012 Move X24, [X24+2840]
	013 Move X22, [X22+2848]
	014 Move X19, X3
	015 Move W21, W2
	016 Move X20, X1
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {44}
	021 Move X0, 0x238B000
	022 Move X0, [X0+1624]
	023 Call 0x1C17CF4
	024 Move X0, 0x238D000
	025 Move X0, [X0+2856]
	026 Call 0x1C17CF4
	027 Move X0, 0x238D000
	028 Move X0, [X0+2848]
	029 Call 0x1C17CF4
	030 Move X0, 0x238D000
	031 Move X0, [X0+2840]
	032 Call 0x1C17CF4
	033 Move X0, 0x238D000
	034 Move X0, [X0+2584]
	035 Call 0x1C17CF4
	036 Move X0, 0x238D000
	037 Move X0, [X0+2864]
	038 Call 0x1C17CF4
	039 Move X0, 0x238D000
	040 Move X0, [X0+2872]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X23+2185], W8
	044 Move X0, [X24]
	045 Call 0x1C17F10
	046 Move X1, [X22]
	047 Move X22, X0
	048 Call Dictionary`2<Object, Int32>..ctor, X0
	049 Compare X22, 0
	050 JumpIfEqual {115}
	051 Move X8, 0x238D000
	052 Move X9, 0x238D000
	053 Move X8, [X8+2864]
	054 Move X9, [X9+2856]
	055 Move X23, 0x238B000
	056 Move X0, X22
	057 Move X1, [X8]
	058 Move X3, [X9]
	059 Move X23, [X23+1624]
	060 Move W2, W21
	061 Call Dictionary`2<Object, Int32>.Add, X0, X1, X2
	062 Move X0, [X23]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {68}
	066 Call 0x1C17DFC
	067 Move X0, [X23]
	068 Move X8, [X0+184]
	069 Move X0, X22
	070 Move X1, X31
	071 Move X21, [X8+16]
	072 Call JsonWriter.ToJson, X0
	073 Compare X21, 0
	074 JumpIfEqual {115}
	075 Move X9, 0x238D000
	076 Move X10, 0x238D000
	077 Move X8, [X21]
	078 Move X9, [X9+2584]
	079 Move X10, [X10+2872]
	080 Move X22, X0
	081 Move X1, [X9]
	082 NotImplemented "Instruction LDRH not yet implemented."
	083 Move X23, [X10]
	084 Compare X9, 0
	085 JumpIfEqual {92}
	086 Move X10, [X8+176]
	087 Add X10, X10, 8
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Subtract X9, X9, 1
	091 Add X10, X10, 16
	092 Move W2, 72
	093 Move X0, X21
	094 Call 0x1C5D788
	095 Move W9, [X10]
	096 Add W9, W9, 72
	097 Add X8, X8, W9
	098 Add X0, X8, 312
	099 Move X7, [X0]
	100 Move X6, [X0+8]
	101 Move X0, X21
	102 Move X1, X20
	103 Move X2, X23
	104 Move X3, X22
	105 Move X5, X19
	106 Move X20, [X31+48]
	107 Move X19, [X31+56]
	108 Move X22, [X31+32]
	109 Move X21, [X31+40]
	110 Move X24, [X31+16]
	111 Move X23, [X31+24]
	112 Move X4, X31
	113 Move X30, [X31+64]
	114 CallNoReturn X7
	115 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<AnimalCompany.API.AnimalCompanyAPI/ClaimRewardResponse> ClaimRewardAsync(Nakama.ISession session, System.String rewardID, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D69EEC LDRH W9, [X8 + 0x12E]
	0x01D69EF0 LDR X1, [X10]
	0x01D69EF4 CBZ X9, 0x1D69F18
	0x01D69EF8 LDR X10, [X8 + 0xB0]
	0x01D69EFC ADD X10, X10, 0x8
	0x01D69F00 LDUR X11, [X10 - 0x8]
	0x01D69F04 CMP X11, X1
	0x01D69F08 B.EQ 0x1D69F28
	0x01D69F0C SUBS X9, X9, 0x1
	0x01D69F10 ADD X10, X10, 0x10
	0x01D69F14 B.NE 0x1D69F00
	0x01D69F18 MOVZ W2, 0x4
	0x01D69F1C MOV X0, X19
	0x01D69F20 BL 0x1C5C788
	0x01D69F24 B 0x1D69F38
	0x01D69F28 LDR W9, [X10]
	0x01D69F2C ADD W9, W9, 0x4
	0x01D69F30 ADD X8, X8, W9, 0x4, SXTW
	0x01D69F34 ADD X0, X8, 0x138
	0x01D69F38 LDP X2, X1, [X0]
	0x01D69F3C MOV X0, X19
	0x01D69F40 LDP X20, X19, [X31 + 0x10]
	0x01D69F44 LDR X30, [X31], #0x20
	0x01D69F48 BR X2
	0x01D69F4C BL 0x1C16F20
	0x01D69F50 STR X30, [X31 - 0x20]!
	0x01D69F54 STP X20, X19, [X31 + 0x10]
	0x01D69F58 ADRP X20, 0x266F000
	0x01D69F5C ADRP X19, 0x238A000
	0x01D69F60 LDRB W8, [X20 + 0x896]
	0x01D69F64 LDR X19, [X19 + 0x658]
	0x01D69F68 TBNZ X8, 0x0, 0x1D69F8C
	0x01D69F6C ADRP X0, 0x238A000
	0x01D69F70 LDR X0, [X0 + 0x658]
	0x01D69F74 BL 0x1C16CF4
	0x01D69F78 ADRP X0, 0x238C000
	0x01D69F7C LDR X0, [X0 + 0xA18]
	0x01D69F80 BL 0x1C16CF4
	0x01D69F84 MOVZ W8, 0x1
	0x01D69F88 STRB W8, [X20 + 0x896]
	0x01D69F8C LDR X0, [X19]
	0x01D69F90 LDR W8, [X0 + 0xE0]
	0x01D69F94 CBNZ W8, 0x1D69FA0
	0x01D69F98 BL 0x1C16DFC
	0x01D69F9C LDR X0, [X19]
	0x01D69FA0 LDR X8, [X0 + 0xB8]
	0x01D69FA4 LDR X19, [X8 + 0x10]
	0x01D69FA8 CBZ X19, 0x1D6A018
	0x01D69FAC ADRP X10, 0x238C000
	0x01D69FB0 LDR X8, [X19]
	0x01D69FB4 LDR X10, [X10 + 0xA18]
	0x01D69FB8 LDRH W9, [X8 + 0x12E]
	0x01D69FBC LDR X1, [X10]
	0x01D69FC0 CBZ X9, 0x1D69FE4
	0x01D69FC4 LDR X10, [X8 + 0xB0]
	0x01D69FC8 ADD X10, X10, 0x8
	0x01D69FCC LDUR X11, [X10 - 0x8]
	0x01D69FD0 CMP X11, X1
	0x01D69FD4 B.EQ 0x1D69FF4
	0x01D69FD8 SUBS X9, X9, 0x1
	0x01D69FDC ADD X10, X10, 0x10
	0x01D69FE0 B.NE 0x1D69FCC
	0x01D69FE4 MOVZ W2, 0x5
	0x01D69FE8 MOV X0, X19
	0x01D69FEC BL 0x1C5C788
	0x01D69FF0 B 0x1D6A004
	0x01D69FF4 LDR W9, [X10]
	0x01D69FF8 ADD W9, W9, 0x5
	0x01D69FFC ADD X8, X8, W9, 0x4, SXTW
	0x01D6A000 ADD X0, X8, 0x138
	0x01D6A004 LDP X2, X1, [X0]
	0x01D6A008 MOV X0, X19
	0x01D6A00C LDP X20, X19, [X31 + 0x10]
	0x01D6A010 LDR X30, [X31], #0x20
	0x01D6A014 BR X2
	0x01D6A018 BL 0x1C16F20
	0x01D6A01C STR X30, [X31 - 0x20]!
	0x01D6A020 STP X20, X19, [X31 + 0x10]
	0x01D6A024 ADRP X20, 0x266E000
	0x01D6A028 ADRP X19, 0x2389000
	0x01D6A02C LDRB W8, [X20 + 0x897]
	0x01D6A030 LDR X19, [X19 + 0x658]
	0x01D6A034 TBNZ X8, 0x0, 0x1D6A058
	0x01D6A038 ADRP X0, 0x2389000
	0x01D6A03C LDR X0, [X0 + 0x658]
	0x01D6A040 BL 0x1C16CF4
	0x01D6A044 ADRP X0, 0x238B000
	0x01D6A048 LDR X0, [X0 + 0xA18]
	0x01D6A04C BL 0x1C16CF4
	0x01D6A050 MOVZ W8, 0x1
	0x01D6A054 STRB W8, [X20 + 0x897]
	0x01D6A058 LDR X0, [X19]
	0x01D6A05C LDR W8, [X0 + 0xE0]
	0x01D6A060 CBNZ W8, 0x1D6A06C
	0x01D6A064 BL 0x1C16DFC
	0x01D6A068 LDR X0, [X19]
	0x01D6A06C LDR X8, [X0 + 0xB8]
	0x01D6A070 LDR X19, [X8 + 0x10]
	0x01D6A074 CBZ X19, 0x1D6A0E4
	0x01D6A078 ADRP X10, 0x238B000
	0x01D6A07C LDR X8, [X19]
	0x01D6A080 LDR X10, [X10 + 0xA18]
	0x01D6A084 LDRH W9, [X8 + 0x12E]
	0x01D6A088 LDR X1, [X10]
	0x01D6A08C CBZ X9, 0x1D6A0B0
	0x01D6A090 LDR X10, [X8 + 0xB0]
	0x01D6A094 ADD X10, X10, 0x8
	0x01D6A098 LDUR X11, [X10 - 0x8]
	0x01D6A09C CMP X11, X1
	0x01D6A0A0 B.EQ 0x1D6A0C0
	0x01D6A0A4 SUBS X9, X9, 0x1
	0x01D6A0A8 ADD X10, X10, 0x10
	0x01D6A0AC B.NE 0x1D6A098
	0x01D6A0B0 MOVZ W2, 0x6
	0x01D6A0B4 MOV X0, X19
	0x01D6A0B8 BL 0x1C5C788
	0x01D6A0BC B 0x1D6A0D0
	0x01D6A0C0 LDR W9, [X10]
	0x01D6A0C4 ADD W9, W9, 0x6
	0x01D6A0C8 ADD X8, X8, W9, 0x4, SXTW
	0x01D6A0CC ADD X0, X8, 0x138
	0x01D6A0D0 LDP X2, X1, [X0]
	0x01D6A0D4 MOV X0, X19
	0x01D6A0D8 LDP X20, X19, [X31 + 0x10]
	0x01D6A0DC LDR X30, [X31], #0x20
	0x01D6A0E0 BR X2
	0x01D6A0E4 BL 0x1C16F20
	0x01D6A0E8 STR X30, [X31 - 0x20]!
	0x01D6A0EC STP X20, X19, [X31 + 0x10]
	0x01D6A0F0 ADRP X20, 0x266E000
	0x01D6A0F4 ADRP X19, 0x2389000
	0x01D6A0F8 LDRB W8, [X20 + 0x898]
	0x01D6A0FC LDR X19, [X19 + 0x658]
	0x01D6A100 TBNZ X8, 0x0, 0x1D6A124
	0x01D6A104 ADRP X0, 0x2389000
	0x01D6A108 LDR X0, [X0 + 0x658]
	0x01D6A10C BL 0x1C16CF4
	0x01D6A110 ADRP X0, 0x238B000
	0x01D6A114 LDR X0, [X0 + 0xA18]
	0x01D6A118 BL 0x1C16CF4
	0x01D6A11C MOVZ W8, 0x1
	0x01D6A120 STRB W8, [X20 + 0x898]
	0x01D6A124 LDR X0, [X19]
	0x01D6A128 LDR W8, [X0 + 0xE0]
	0x01D6A12C CBNZ W8, 0x1D6A138
	0x01D6A130 BL 0x1C16DFC
	0x01D6A134 LDR X0, [X19]
	0x01D6A138 LDR X8, [X0 + 0xB8]
	0x01D6A13C LDR X19, [X8 + 0x10]
	0x01D6A140 CBZ X19, 0x1D6A1B0
	0x01D6A144 ADRP X10, 0x238B000
	0x01D6A148 LDR X8, [X19]
	0x01D6A14C LDR X10, [X10 + 0xA18]
	0x01D6A150 LDRH W9, [X8 + 0x12E]
	0x01D6A154 LDR X1, [X10]
	0x01D6A158 CBZ X9, 0x1D6A17C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x2670000
	009 Move X24, 0x238C000
	010 Move X22, 0x238C000
	011 Move W8, [X23+2186]
	012 Move X24, [X24+1744]
	013 Move X22, [X22+1728]
	014 Move X19, X3
	015 Move X21, X2
	016 Move X20, X1
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {56}
	021 Move X0, 0x238B000
	022 Move X0, [X0+1624]
	023 Call 0x1C17CF4
	024 Move X0, 0x238C000
	025 Move X0, [X0+2064]
	026 Call 0x1C17CF4
	027 Move X0, 0x238C000
	028 Move X0, [X0+1728]
	029 Call 0x1C17CF4
	030 Move X0, 0x238C000
	031 Move X0, [X0+1744]
	032 Call 0x1C17CF4
	033 Move X0, 0x238D000
	034 Move X0, [X0+2880]
	035 Call 0x1C17CF4
	036 Move X0, 0x238D000
	037 Move X0, [X0+2584]
	038 Call 0x1C17CF4
	039 Move X0, 0x238D000
	040 Move X0, [X0+2888]
	041 Call 0x1C17CF4
	042 Move X0, 0x238D000
	043 Move X0, [X0+2896]
	044 Call 0x1C17CF4
	045 Move X0, 0x238D000
	046 Move X0, [X0+2720]
	047 Call 0x1C17CF4
	048 Move X0, 0x238D000
	049 Move X0, [X0+1304]
	050 Call 0x1C17CF4
	051 Move X0, 0x238D000
	052 Move X0, [X0+2904]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X23+2186], W8
	056 Move X0, [X24]
	057 Call 0x1C17F10
	058 Move X1, [X22]
	059 Move X22, X0
	060 Call Dictionary`2<Object, Object>..ctor, X0
	061 Compare X22, 0
	062 JumpIfEqual {172}
	063 Move X8, 0x238D000
	064 Move X9, 0x238C000
	065 Move X8, [X8+1304]
	066 Move X9, [X9+2064]
	067 Move X23, 0x238B000
	068 Move X0, X22
	069 Move X1, [X8]
	070 Move X3, [X9]
	071 Move X23, [X23+1624]
	072 Move X2, X21
	073 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	074 Move X0, [X23]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {80}
	078 Call 0x1C17DFC
	079 Move X0, [X23]
	080 Move X8, [X0+184]
	081 Move X0, X22
	082 Move X1, X31
	083 Move X21, [X8+16]
	084 Call JsonWriter.ToJson, X0
	085 Compare X21, 0
	086 JumpIfEqual {172}
	087 Move X9, 0x238C000
	088 Move X10, 0x238C000
	089 Move X8, [X21]
	090 Move X9, [X9+2584]
	091 Move X10, [X10+2904]
	092 Move X24, 0x238C000
	093 Move X22, X0
	094 Move X1, [X9]
	095 NotImplemented "Instruction LDRH not yet implemented."
	096 Move X23, [X10]
	097 Move X24, [X24+2720]
	098 Compare X9, 0
	099 JumpIfEqual {106}
	100 Move X10, [X8+176]
	101 Add X10, X10, 8
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Subtract X9, X9, 1
	105 Add X10, X10, 16
	106 Move W2, 72
	107 Move X0, X21
	108 Call 0x1C5D788
	109 Move W9, [X10]
	110 Add W9, W9, 72
	111 Add X8, X8, W9
	112 Add X0, X8, 312
	113 Move X8, [X0]
	114 Move X6, [X0+8]
	115 Move X0, X21
	116 Move X1, X20
	117 Move X2, X23
	118 Move X3, X22
	119 Move X4, X31
	120 Move X5, X19
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move X8, [X24]
	123 Move X19, X0
	124 Move W9, [X8+224]
	125 Compare W9, 0
	126 JumpIfNotEqual {130}
	127 Move X0, X8
	128 Call 0x1C17DFC
	129 Move X8, [X24]
	130 Move X9, [X8+184]
	131 Move X20, [X9+24]
	132 Compare X20, 0
	133 JumpIfNotEqual {156}
	134 Move W9, [X8+224]
	135 Compare W9, 0
	136 JumpIfNotEqual {140}
	137 Move X0, X8
	138 Call 0x1C17DFC
	139 Move X8, [X24]
	140 Move X9, 0x238C000
	141 Move X8, [X8+184]
	142 Move X9, [X9+2880]
	143 Move X21, [X8]
	144 Move X0, [X9]
	145 Call 0x1C17F10
	146 Move X8, 0x238C000
	147 Move X8, [X8+2896]
	148 Move X1, X21
	149 Move X3, X31
	150 Move X20, X0
	151 Move X2, [X8]
	152 Call Func`2<Object, ClaimRewardResponse>..ctor, X0, X1, X2
	153 Move X8, [X24]
	154 Move X8, [X8+184]
	155 Move [X8+24], X20
	156 Compare X19, 0
	157 JumpIfEqual {172}
	158 Move X8, 0x238C000
	159 Move X8, [X8+2888]
	160 Move X0, X19
	161 Move X1, X20
	162 Move X20, [X31+48]
	163 Move X19, [X31+56]
	164 Move X2, [X8]
	165 Move X22, [X31+32]
	166 Move X21, [X31+40]
	167 Move X24, [X31+16]
	168 Move X23, [X31+24]
	169 Move X30, [X31+64]
	170 Call 0x2139898, X0, X1
	171 Return X0
	172 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<AnimalCompany.API.ApiProduct[]> GetProductsAsync(Nakama.ISession session, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6A15C LDR X10, [X8 + 0xB0]
	0x01D6A160 ADD X10, X10, 0x8
	0x01D6A164 LDUR X11, [X10 - 0x8]
	0x01D6A168 CMP X11, X1
	0x01D6A16C B.EQ 0x1D6A18C
	0x01D6A170 SUBS X9, X9, 0x1
	0x01D6A174 ADD X10, X10, 0x10
	0x01D6A178 B.NE 0x1D6A164
	0x01D6A17C MOVZ W2, 0x9
	0x01D6A180 MOV X0, X19
	0x01D6A184 BL 0x1C5C788
	0x01D6A188 B 0x1D6A19C
	0x01D6A18C LDR W9, [X10]
	0x01D6A190 ADD W9, W9, 0x9
	0x01D6A194 ADD X8, X8, W9, 0x4, SXTW
	0x01D6A198 ADD X0, X8, 0x138
	0x01D6A19C LDP X2, X1, [X0]
	0x01D6A1A0 MOV X0, X19
	0x01D6A1A4 LDP X20, X19, [X31 + 0x10]
	0x01D6A1A8 LDR X30, [X31], #0x20
	0x01D6A1AC BR X2
	0x01D6A1B0 BL 0x1C16F20
	0x01D6A1B4 STP X30, X21, [X31 - 0x20]!
	0x01D6A1B8 STP X20, X19, [X31 + 0x10]
	0x01D6A1BC ADRP X21, 0x266E000
	0x01D6A1C0 ADRP X20, 0x2389000
	0x01D6A1C4 LDRB W8, [X21 + 0x899]
	0x01D6A1C8 LDR X20, [X20 + 0x658]
	0x01D6A1CC MOV W19, W1
	0x01D6A1D0 TBNZ X8, 0x0, 0x1D6A1F4
	0x01D6A1D4 ADRP X0, 0x2389000
	0x01D6A1D8 LDR X0, [X0 + 0x658]
	0x01D6A1DC BL 0x1C16CF4
	0x01D6A1E0 ADRP X0, 0x238B000
	0x01D6A1E4 LDR X0, [X0 + 0xA18]
	0x01D6A1E8 BL 0x1C16CF4
	0x01D6A1EC MOVZ W8, 0x1
	0x01D6A1F0 STRB W8, [X21 + 0x899]
	0x01D6A1F4 LDR X0, [X20]
	0x01D6A1F8 LDR W8, [X0 + 0xE0]
	0x01D6A1FC CBNZ W8, 0x1D6A208
	0x01D6A200 BL 0x1C16DFC
	0x01D6A204 LDR X0, [X20]
	0x01D6A208 LDR X8, [X0 + 0xB8]
	0x01D6A20C LDR X20, [X8 + 0x10]
	0x01D6A210 CBZ X20, 0x1D6A284
	0x01D6A214 ADRP X10, 0x238B000
	0x01D6A218 LDR X8, [X20]
	0x01D6A21C LDR X10, [X10 + 0xA18]
	0x01D6A220 LDRH W9, [X8 + 0x12E]
	0x01D6A224 LDR X1, [X10]
	0x01D6A228 CBZ X9, 0x1D6A24C
	0x01D6A22C LDR X10, [X8 + 0xB0]
	0x01D6A230 ADD X10, X10, 0x8
	0x01D6A234 LDUR X11, [X10 - 0x8]
	0x01D6A238 CMP X11, X1
	0x01D6A23C B.EQ 0x1D6A25C

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X21, 0x266F000
	008 Move X20, 0x238C000
	009 Move W8, [X21+2187]
	010 Move X20, [X20+2912]
	011 Move X19, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x238C000
	017 Move X0, [X0+2920]
	018 Call 0x1C17CF4
	019 Move X0, 0x238C000
	020 Move X0, [X0+2928]
	021 Call 0x1C17CF4
	022 Move X0, 0x238C000
	023 Move X0, [X0+2936]
	024 Call 0x1C17CF4
	025 Move X0, 0x238C000
	026 Move X0, [X0+2912]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+2187], W8
	030 Move X0, [X20]
	031 NotImplemented "Instruction MOVI not yet implemented."
	032 Move [X31+16], V0
	033 Move [X31+24], V0
	034 Move [X31], V0
	035 Move X20, 0x238C000
	036 Move X22, 0x238C000
	037 Move X21, 0x238C000
	038 Move W8, [X0+224]
	039 Move X20, [X20+2920]
	040 Move X22, [X22+2928]
	041 Move X21, [X21+2936]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, [X20]
	046 Add X8, X31, 0
	047 Or X20, X8, 15
	048 Move X8, X20
	049 Call AsyncTaskMethodBuilder`1<Object>.Create
	050 Move X2, [X22]
	051 Move TEMP, 0
	052 Not TEMP
	053 Move W8, TEMP
	054 Add X1, X31, 0
	055 Move X0, X20
	056 Move [X31+32], X19
	057 Move [X31], W8
	058 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	059 Move X1, [X21]
	060 Move X0, X20
	061 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	062 Move X20, [X31+80]
	063 Move X19, [X31+88]
	064 Move X22, [X31+64]
	065 Move X21, [X31+72]
	066 Move X30, [X31+48]
	067 Add X31, X31, 96
	068 Return X0

Method: System.Threading.Tasks.Task`1<AnimalCompany.API.ApiAvatarItem[]> GetAvatarItemsAsync(Nakama.ISession session, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6A240 SUBS X9, X9, 0x1
	0x01D6A244 ADD X10, X10, 0x10
	0x01D6A248 B.NE 0x1D6A234
	0x01D6A24C MOVZ W2, 0xA
	0x01D6A250 MOV X0, X20
	0x01D6A254 BL 0x1C5C788
	0x01D6A258 B 0x1D6A26C
	0x01D6A25C LDR W9, [X10]
	0x01D6A260 ADD W9, W9, 0xA
	0x01D6A264 ADD X8, X8, W9, 0x4, SXTW
	0x01D6A268 ADD X0, X8, 0x138
	0x01D6A26C LDP X3, X2, [X0]
	0x01D6A270 MOV X0, X20
	0x01D6A274 MOV W1, W19
	0x01D6A278 LDP X20, X19, [X31 + 0x10]
	0x01D6A27C LDP X30, X21, [X31], #0x20
	0x01D6A280 BR X3
	0x01D6A284 BL 0x1C16F20
	0x01D6A288 STR X30, [X31 - 0x20]!
	0x01D6A28C STP X20, X19, [X31 + 0x10]
	0x01D6A290 ADRP X20, 0x266E000
	0x01D6A294 ADRP X19, 0x2389000
	0x01D6A298 LDRB W8, [X20 + 0x89A]
	0x01D6A29C LDR X19, [X19 + 0x658]
	0x01D6A2A0 TBNZ X8, 0x0, 0x1D6A2C4
	0x01D6A2A4 ADRP X0, 0x2389000
	0x01D6A2A8 LDR X0, [X0 + 0x658]
	0x01D6A2AC BL 0x1C16CF4
	0x01D6A2B0 ADRP X0, 0x238B000
	0x01D6A2B4 LDR X0, [X0 + 0xA18]
	0x01D6A2B8 BL 0x1C16CF4
	0x01D6A2BC MOVZ W8, 0x1
	0x01D6A2C0 STRB W8, [X20 + 0x89A]
	0x01D6A2C4 LDR X0, [X19]
	0x01D6A2C8 LDR W8, [X0 + 0xE0]
	0x01D6A2CC CBNZ W8, 0x1D6A2D8
	0x01D6A2D0 BL 0x1C16DFC
	0x01D6A2D4 LDR X0, [X19]
	0x01D6A2D8 LDR X8, [X0 + 0xB8]
	0x01D6A2DC LDR X19, [X8 + 0x10]
	0x01D6A2E0 CBZ X19, 0x1D6A350
	0x01D6A2E4 ADRP X10, 0x238B000
	0x01D6A2E8 LDR X8, [X19]
	0x01D6A2EC LDR X10, [X10 + 0xA18]
	0x01D6A2F0 LDRH W9, [X8 + 0x12E]
	0x01D6A2F4 LDR X1, [X10]
	0x01D6A2F8 CBZ X9, 0x1D6A31C
	0x01D6A2FC LDR X10, [X8 + 0xB0]
	0x01D6A300 ADD X10, X10, 0x8
	0x01D6A304 LDUR X11, [X10 - 0x8]
	0x01D6A308 CMP X11, X1
	0x01D6A30C B.EQ 0x1D6A32C
	0x01D6A310 SUBS X9, X9, 0x1
	0x01D6A314 ADD X10, X10, 0x10
	0x01D6A318 B.NE 0x1D6A304
	0x01D6A31C MOVZ W2, 0xB
	0x01D6A320 MOV X0, X19
	0x01D6A324 BL 0x1C5C788

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X21, 0x266F000
	008 Move X20, 0x238C000
	009 Move W8, [X21+2188]
	010 Move X20, [X20+2944]
	011 Move X19, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x238C000
	017 Move X0, [X0+2952]
	018 Call 0x1C17CF4
	019 Move X0, 0x238C000
	020 Move X0, [X0+2960]
	021 Call 0x1C17CF4
	022 Move X0, 0x238C000
	023 Move X0, [X0+2968]
	024 Call 0x1C17CF4
	025 Move X0, 0x238C000
	026 Move X0, [X0+2944]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+2188], W8
	030 Move X0, [X20]
	031 NotImplemented "Instruction MOVI not yet implemented."
	032 Move [X31+48], X31
	033 Move [X31+16], V0
	034 Move [X31+24], V0
	035 Move [X31], V0
	036 Move X20, 0x238C000
	037 Move X22, 0x238C000
	038 Move X21, 0x238C000
	039 Move W8, [X0+224]
	040 Move X20, [X20+2952]
	041 Move X22, [X22+2960]
	042 Move X21, [X21+2968]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, [X20]
	047 Add X8, X31, 0
	048 Or X20, X8, 15
	049 Move X8, X20
	050 Call AsyncTaskMethodBuilder`1<Object>.Create
	051 Move X2, [X22]
	052 Move TEMP, 0
	053 Not TEMP
	054 Move W8, TEMP
	055 Add X1, X31, 0
	056 Move X0, X20
	057 Move [X31+32], X19
	058 Move [X31], W8
	059 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	060 Move X1, [X21]
	061 Move X0, X20
	062 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	063 Move X20, [X31+96]
	064 Move X19, [X31+104]
	065 Move X22, [X31+80]
	066 Move X21, [X31+88]
	067 Move X30, [X31+64]
	068 Add X31, X31, 112
	069 Return X0

Method: System.Threading.Tasks.Task`1<System.Collections.Generic.IEnumerable`1<AnimalCompany.API.ApiAvatarItem>> GetAvatarItemsAsync(Nakama.ISession session, System.String[] itemIDs, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6A328 B 0x1D6A33C
	0x01D6A32C LDR W9, [X10]
	0x01D6A330 ADD W9, W9, 0xB
	0x01D6A334 ADD X8, X8, W9, 0x4, SXTW
	0x01D6A338 ADD X0, X8, 0x138
	0x01D6A33C LDP X2, X1, [X0]
	0x01D6A340 MOV X0, X19
	0x01D6A344 LDP X20, X19, [X31 + 0x10]
	0x01D6A348 LDR X30, [X31], #0x20
	0x01D6A34C BR X2
	0x01D6A350 BL 0x1C16F20
	0x01D6A354 STP X30, X21, [X31 - 0x20]!
	0x01D6A358 STP X20, X19, [X31 + 0x10]
	0x01D6A35C ADRP X21, 0x266E000
	0x01D6A360 ADRP X20, 0x2389000
	0x01D6A364 LDRB W8, [X21 + 0x89B]
	0x01D6A368 LDR X20, [X20 + 0x658]
	0x01D6A36C MOV X19, X1
	0x01D6A370 TBNZ X8, 0x0, 0x1D6A394
	0x01D6A374 ADRP X0, 0x2389000
	0x01D6A378 LDR X0, [X0 + 0x658]
	0x01D6A37C BL 0x1C16CF4
	0x01D6A380 ADRP X0, 0x238B000
	0x01D6A384 LDR X0, [X0 + 0xA18]
	0x01D6A388 BL 0x1C16CF4
	0x01D6A38C MOVZ W8, 0x1
	0x01D6A390 STRB W8, [X21 + 0x89B]
	0x01D6A394 LDR X0, [X20]
	0x01D6A398 LDR W8, [X0 + 0xE0]
	0x01D6A39C CBNZ W8, 0x1D6A3A8
	0x01D6A3A0 BL 0x1C16DFC
	0x01D6A3A4 LDR X0, [X20]
	0x01D6A3A8 LDR X8, [X0 + 0xB8]
	0x01D6A3AC LDR X20, [X8 + 0x10]
	0x01D6A3B0 CBZ X20, 0x1D6A424
	0x01D6A3B4 ADRP X10, 0x238B000
	0x01D6A3B8 LDR X8, [X20]
	0x01D6A3BC LDR X10, [X10 + 0xA18]
	0x01D6A3C0 LDRH W9, [X8 + 0x12E]
	0x01D6A3C4 LDR X1, [X10]
	0x01D6A3C8 CBZ X9, 0x1D6A3EC
	0x01D6A3CC LDR X10, [X8 + 0xB0]
	0x01D6A3D0 ADD X10, X10, 0x8
	0x01D6A3D4 LDUR X11, [X10 - 0x8]
	0x01D6A3D8 CMP X11, X1
	0x01D6A3DC B.EQ 0x1D6A3FC
	0x01D6A3E0 SUBS X9, X9, 0x1
	0x01D6A3E4 ADD X10, X10, 0x10
	0x01D6A3E8 B.NE 0x1D6A3D4
	0x01D6A3EC MOVZ W2, 0xC
	0x01D6A3F0 MOV X0, X20
	0x01D6A3F4 BL 0x1C5C788
	0x01D6A3F8 B 0x1D6A40C
	0x01D6A3FC LDR W9, [X10]
	0x01D6A400 ADD W9, W9, 0xC
	0x01D6A404 ADD X8, X8, W9, 0x4, SXTW
	0x01D6A408 ADD X0, X8, 0x138
	0x01D6A40C LDP X3, X2, [X0]
	0x01D6A410 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X22, 0x266F000
	009 Move X21, 0x238C000
	010 Move W8, [X22+2189]
	011 Move X21, [X21+2976]
	012 Move X19, X2
	013 Move X20, X1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x238C000
	019 Move X0, [X0+2984]
	020 Call 0x1C17CF4
	021 Move X0, 0x238C000
	022 Move X0, [X0+2992]
	023 Call 0x1C17CF4
	024 Move X0, 0x238C000
	025 Move X0, [X0+3000]
	026 Call 0x1C17CF4
	027 Move X0, 0x238C000
	028 Move X0, [X0+2976]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+2189], W8
	032 Move X0, [X21]
	033 NotImplemented "Instruction MOVI not yet implemented."
	034 Move [X31+48], X31
	035 Move [X31+16], V0
	036 Move [X31+24], V0
	037 Move [X31], V0
	038 Move X21, 0x238C000
	039 Move X23, 0x238C000
	040 Move X22, 0x238C000
	041 Move W8, [X0+224]
	042 Move X21, [X21+2984]
	043 Move X23, [X23+2992]
	044 Move X22, [X22+3000]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, [X21]
	049 Add X8, X31, 0
	050 Or X21, X8, 15
	051 Move X8, X21
	052 Call AsyncTaskMethodBuilder`1<Object>.Create
	053 Move X2, [X23]
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W8, TEMP
	057 Add X1, X31, 0
	058 Move X0, X21
	059 Move [X31+32], X19
	060 Move [X31+40], X20
	061 Move [X31], W8
	062 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	063 Move X1, [X22]
	064 Move X0, X21
	065 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	066 Move X20, [X31+96]
	067 Move X19, [X31+104]
	068 Move X22, [X31+80]
	069 Move X21, [X31+88]
	070 Move X30, [X31+64]
	071 Move X23, [X31+72]
	072 Add X31, X31, 112
	073 Return X0

Method: System.Threading.Tasks.Task`1<AnimalCompany.API.AnimalCompanyAPI/PurchaseAvatarItemsResponse> PurchaseAvatarItemsAsync(Nakama.ISession session, System.String[] itemIDs, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6A414 MOV X1, X19
	0x01D6A418 LDP X20, X19, [X31 + 0x10]
	0x01D6A41C LDP X30, X21, [X31], #0x20
	0x01D6A420 BR X3
	0x01D6A424 BL 0x1C16F20
	0x01D6A428 STP X30, X21, [X31 - 0x20]!
	0x01D6A42C STP X20, X19, [X31 + 0x10]
	0x01D6A430 ADRP X21, 0x266E000
	0x01D6A434 ADRP X20, 0x2389000
	0x01D6A438 LDRB W8, [X21 + 0x89C]
	0x01D6A43C LDR X20, [X20 + 0x658]
	0x01D6A440 MOV X19, X1
	0x01D6A444 TBNZ X8, 0x0, 0x1D6A468
	0x01D6A448 ADRP X0, 0x2389000
	0x01D6A44C LDR X0, [X0 + 0x658]
	0x01D6A450 BL 0x1C16CF4
	0x01D6A454 ADRP X0, 0x238B000
	0x01D6A458 LDR X0, [X0 + 0xA18]
	0x01D6A45C BL 0x1C16CF4
	0x01D6A460 MOVZ W8, 0x1
	0x01D6A464 STRB W8, [X21 + 0x89C]
	0x01D6A468 LDR X0, [X20]
	0x01D6A46C LDR W8, [X0 + 0xE0]
	0x01D6A470 CBNZ W8, 0x1D6A47C
	0x01D6A474 BL 0x1C16DFC
	0x01D6A478 LDR X0, [X20]
	0x01D6A47C LDR X8, [X0 + 0xB8]
	0x01D6A480 LDR X20, [X8 + 0x10]
	0x01D6A484 CBZ X20, 0x1D6A4F8
	0x01D6A488 ADRP X10, 0x238B000
	0x01D6A48C LDR X8, [X20]
	0x01D6A490 LDR X10, [X10 + 0xA18]
	0x01D6A494 LDRH W9, [X8 + 0x12E]
	0x01D6A498 LDR X1, [X10]
	0x01D6A49C CBZ X9, 0x1D6A4C0
	0x01D6A4A0 LDR X10, [X8 + 0xB0]
	0x01D6A4A4 ADD X10, X10, 0x8
	0x01D6A4A8 LDUR X11, [X10 - 0x8]
	0x01D6A4AC CMP X11, X1
	0x01D6A4B0 B.EQ 0x1D6A4D0
	0x01D6A4B4 SUBS X9, X9, 0x1
	0x01D6A4B8 ADD X10, X10, 0x10
	0x01D6A4BC B.NE 0x1D6A4A8
	0x01D6A4C0 MOVZ W2, 0x7
	0x01D6A4C4 MOV X0, X20
	0x01D6A4C8 BL 0x1C5C788
	0x01D6A4CC B 0x1D6A4E0
	0x01D6A4D0 LDR W9, [X10]
	0x01D6A4D4 ADD W9, W9, 0x7
	0x01D6A4D8 ADD X8, X8, W9, 0x4, SXTW
	0x01D6A4DC ADD X0, X8, 0x138
	0x01D6A4E0 LDP X3, X2, [X0]
	0x01D6A4E4 MOV X0, X20
	0x01D6A4E8 MOV X1, X19
	0x01D6A4EC LDP X20, X19, [X31 + 0x10]
	0x01D6A4F0 LDP X30, X21, [X31], #0x20
	0x01D6A4F4 BR X3
	0x01D6A4F8 BL 0x1C16F20
	0x01D6A4FC STP X30, X21, [X31 - 0x20]!
	0x01D6A500 STP X20, X19, [X31 + 0x10]
	0x01D6A504 ADRP X21, 0x266E000
	0x01D6A508 ADRP X20, 0x2389000
	0x01D6A50C LDRB W8, [X21 + 0x89D]
	0x01D6A510 LDR X20, [X20 + 0x658]
	0x01D6A514 MOV X19, X1

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+112], X24
	004 Move [X31+120], X23
	005 Move [X31+128], X22
	006 Move [X31+136], X21
	007 Move [X31+144], X20
	008 Move [X31+152], X19
	009 Move X23, 0x266F000
	010 Move X22, 0x238C000
	011 Move W8, [X23+2190]
	012 Move X22, [X22+3008]
	013 Move X20, X3
	014 Move X19, X2
	015 Move X21, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x238C000
	021 Move X0, [X0+3016]
	022 Call 0x1C17CF4
	023 Move X0, 0x238C000
	024 Move X0, [X0+3024]
	025 Call 0x1C17CF4
	026 Move X0, 0x238C000
	027 Move X0, [X0+3032]
	028 Call 0x1C17CF4
	029 Move X0, 0x238C000
	030 Move X0, [X0+3008]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+2190], W8
	034 Move X0, [X22]
	035 NotImplemented "Instruction MOVI not yet implemented."
	036 Move [X31+64], V0
	037 Move [X31+72], V0
	038 Move [X31+32], V0
	039 Move [X31+40], V0
	040 Move X24, 0x238C000
	041 Move X23, 0x238C000
	042 Move X22, 0x238C000
	043 Move W8, [X0+224]
	044 Move X24, [X24+3016]
	045 Move X23, [X23+3024]
	046 Move X22, [X22+3032]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, [X24]
	051 Add X8, X31, 8
	052 Call AsyncTaskMethodBuilder`1<PurchaseAvatarItemsResponse>.Create
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 Move X9, [X31+24]
	055 Move X2, [X23]
	056 Add X8, X31, 32
	057 Move [X31+72], X21
	058 Move [X31+80], X20
	059 Or X20, X8, 15
	060 Move TEMP, 0
	061 Not TEMP
	062 Move W10, TEMP
	063 Add X1, X31, 32
	064 Move X0, X20
	065 Move [X31+40], V0
	066 Move [X31+56], X9
	067 Move [X31+64], X19
	068 Move [X31+32], W10
	069 Call AsyncTaskMethodBuilder`1<PurchaseAvatarItemsResponse>.Start, X0, X1
	070 Move X1, [X22]
	071 Move X0, X20
	072 Call AsyncTaskMethodBuilder`1<PurchaseAvatarItemsResponse>.get_Task, X0
	073 Move X20, [X31+144]
	074 Move X19, [X31+152]
	075 Move X22, [X31+128]
	076 Move X21, [X31+136]
	077 Move X24, [X31+112]
	078 Move X23, [X31+120]
	079 Move X30, [X31+96]
	080 Add X31, X31, 160
	081 Return X0

Method: System.Threading.Tasks.Task`1<AnimalCompany.API.AnimalCompanyAPI/ValidatePurchaseMetaQuestResponse> ValidatePurchaseMetaQuestAsync(Nakama.ISession session, System.String metaQuestUserID, Oculus.Platform.Models.Purchase purchase, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6A518 TBNZ X8, 0x0, 0x1D6A53C
	0x01D6A51C ADRP X0, 0x2389000
	0x01D6A520 LDR X0, [X0 + 0x658]
	0x01D6A524 BL 0x1C16CF4
	0x01D6A528 ADRP X0, 0x238B000
	0x01D6A52C LDR X0, [X0 + 0xA18]
	0x01D6A530 BL 0x1C16CF4
	0x01D6A534 MOVZ W8, 0x1
	0x01D6A538 STRB W8, [X21 + 0x89D]
	0x01D6A53C LDR X0, [X20]
	0x01D6A540 LDR W8, [X0 + 0xE0]
	0x01D6A544 CBNZ W8, 0x1D6A550
	0x01D6A548 BL 0x1C16DFC
	0x01D6A54C LDR X0, [X20]
	0x01D6A550 LDR X8, [X0 + 0xB8]
	0x01D6A554 LDR X20, [X8 + 0x10]
	0x01D6A558 CBZ X20, 0x1D6A5CC
	0x01D6A55C ADRP X10, 0x238B000
	0x01D6A560 LDR X8, [X20]
	0x01D6A564 LDR X10, [X10 + 0xA18]
	0x01D6A568 LDRH W9, [X8 + 0x12E]
	0x01D6A56C LDR X1, [X10]
	0x01D6A570 CBZ X9, 0x1D6A594
	0x01D6A574 LDR X10, [X8 + 0xB0]
	0x01D6A578 ADD X10, X10, 0x8
	0x01D6A57C LDUR X11, [X10 - 0x8]
	0x01D6A580 CMP X11, X1
	0x01D6A584 B.EQ 0x1D6A5A4
	0x01D6A588 SUBS X9, X9, 0x1
	0x01D6A58C ADD X10, X10, 0x10
	0x01D6A590 B.NE 0x1D6A57C
	0x01D6A594 MOVZ W2, 0x8
	0x01D6A598 MOV X0, X20
	0x01D6A59C BL 0x1C5C788
	0x01D6A5A0 B 0x1D6A5B4
	0x01D6A5A4 LDR W9, [X10]
	0x01D6A5A8 ADD W9, W9, 0x8
	0x01D6A5AC ADD X8, X8, W9, 0x4, SXTW
	0x01D6A5B0 ADD X0, X8, 0x138
	0x01D6A5B4 LDP X3, X2, [X0]
	0x01D6A5B8 MOV X0, X20
	0x01D6A5BC MOV X1, X19
	0x01D6A5C0 LDP X20, X19, [X31 + 0x10]
	0x01D6A5C4 LDP X30, X21, [X31], #0x20
	0x01D6A5C8 BR X3
	0x01D6A5CC BL 0x1C16F20
	0x01D6A5D0 STP X30, X25, [X31 - 0x40]!
	0x01D6A5D4 STP X24, X23, [X31 + 0x10]
	0x01D6A5D8 STP X22, X21, [X31 + 0x20]
	0x01D6A5DC STP X20, X19, [X31 + 0x30]
	0x01D6A5E0 ADRP X25, 0x266E000
	0x01D6A5E4 ADRP X24, 0x2389000
	0x01D6A5E8 LDRB W8, [X25 + 0x89E]
	0x01D6A5EC LDR X24, [X24 + 0x658]
	0x01D6A5F0 MOV X19, X5
	0x01D6A5F4 MOV X20, X4
	0x01D6A5F8 MOV X21, X3
	0x01D6A5FC MOV X22, X2
	0x01D6A600 MOV X23, X1
	0x01D6A604 TBNZ X8, 0x0, 0x1D6A628
	0x01D6A608 ADRP X0, 0x2389000
	0x01D6A60C LDR X0, [X0 + 0x658]
	0x01D6A610 BL 0x1C16CF4
	0x01D6A614 ADRP X0, 0x238B000
	0x01D6A618 LDR X0, [X0 + 0xA18]
	0x01D6A61C BL 0x1C16CF4
	0x01D6A620 MOVZ W8, 0x1
	0x01D6A624 STRB W8, [X25 + 0x89E]
	0x01D6A628 LDR X0, [X24]
	0x01D6A62C LDR W8, [X0 + 0xE0]
	0x01D6A630 CBNZ W8, 0x1D6A63C
	0x01D6A634 BL 0x1C16DFC
	0x01D6A638 LDR X0, [X24]
	0x01D6A63C LDR X8, [X0 + 0xB8]
	0x01D6A640 LDR X24, [X8 + 0x10]
	0x01D6A644 CBZ X24, 0x1D6A6D0
	0x01D6A648 ADRP X10, 0x238B000
	0x01D6A64C LDR X8, [X24]
	0x01D6A650 LDR X10, [X10 + 0xA18]
	0x01D6A654 LDRH W9, [X8 + 0x12E]
	0x01D6A658 LDR X1, [X10]
	0x01D6A65C CBZ X9, 0x1D6A680
	0x01D6A660 LDR X10, [X8 + 0xB0]
	0x01D6A664 ADD X10, X10, 0x8
	0x01D6A668 LDUR X11, [X10 - 0x8]
	0x01D6A66C CMP X11, X1
	0x01D6A670 B.EQ 0x1D6A690
	0x01D6A674 SUBS X9, X9, 0x1
	0x01D6A678 ADD X10, X10, 0x10
	0x01D6A67C B.NE 0x1D6A668
	0x01D6A680 MOVZ W2, 0xD
	0x01D6A684 MOV X0, X24
	0x01D6A688 BL 0x1C5C788
	0x01D6A68C B 0x1D6A6A0
	0x01D6A690 LDR W9, [X10]
	0x01D6A694 ADD W9, W9, 0xD
	0x01D6A698 ADD X8, X8, W9, 0x4, SXTW
	0x01D6A69C ADD X0, X8, 0x138
	0x01D6A6A0 LDP X7, X6, [X0]
	0x01D6A6A4 MOV X0, X24
	0x01D6A6A8 MOV X1, X23
	0x01D6A6AC MOV X2, X22
	0x01D6A6B0 MOV X3, X21
	0x01D6A6B4 MOV X4, X20
	0x01D6A6B8 MOV X5, X19
	0x01D6A6BC LDP X20, X19, [X31 + 0x30]
	0x01D6A6C0 LDP X22, X21, [X31 + 0x20]
	0x01D6A6C4 LDP X24, X23, [X31 + 0x10]
	0x01D6A6C8 LDP X30, X25, [X31], #0x40
	0x01D6A6CC BR X7
	0x01D6A6D0 BL 0x1C16F20
	0x01D6A6D4 STP X30, X25, [X31 - 0x40]!
	0x01D6A6D8 STP X24, X23, [X31 + 0x10]
	0x01D6A6DC STP X22, X21, [X31 + 0x20]
	0x01D6A6E0 STP X20, X19, [X31 + 0x30]
	0x01D6A6E4 ADRP X25, 0x266E000
	0x01D6A6E8 ADRP X24, 0x2389000
	0x01D6A6EC LDRB W8, [X25 + 0x89F]
	0x01D6A6F0 LDR X24, [X24 + 0x658]
	0x01D6A6F4 MOV X19, X5
	0x01D6A6F8 MOV X20, X4
	0x01D6A6FC MOV X21, X3
	0x01D6A700 MOV X22, X2
	0x01D6A704 MOV X23, X1
	0x01D6A708 TBNZ X8, 0x0, 0x1D6A72C
	0x01D6A70C ADRP X0, 0x2389000
	0x01D6A710 LDR X0, [X0 + 0x658]
	0x01D6A714 BL 0x1C16CF4
	0x01D6A718 ADRP X0, 0x238B000
	0x01D6A71C LDR X0, [X0 + 0xA18]
	0x01D6A720 BL 0x1C16CF4
	0x01D6A724 MOVZ W8, 0x1
	0x01D6A728 STRB W8, [X25 + 0x89F]
	0x01D6A72C LDR X0, [X24]
	0x01D6A730 LDR W8, [X0 + 0xE0]
	0x01D6A734 CBNZ W8, 0x1D6A740
	0x01D6A738 BL 0x1C16DFC
	0x01D6A73C LDR X0, [X24]
	0x01D6A740 LDR X8, [X0 + 0xB8]
	0x01D6A744 LDR X24, [X8 + 0x10]
	0x01D6A748 CBZ X24, 0x1D6A7D4
	0x01D6A74C ADRP X10, 0x238B000
	0x01D6A750 LDR X8, [X24]
	0x01D6A754 LDR X10, [X10 + 0xA18]
	0x01D6A758 LDRH W9, [X8 + 0x12E]
	0x01D6A75C LDR X1, [X10]
	0x01D6A760 CBZ X9, 0x1D6A784
	0x01D6A764 LDR X10, [X8 + 0xB0]
	0x01D6A768 ADD X10, X10, 0x8
	0x01D6A76C LDUR X11, [X10 - 0x8]
	0x01D6A770 CMP X11, X1
	0x01D6A774 B.EQ 0x1D6A794
	0x01D6A778 SUBS X9, X9, 0x1
	0x01D6A77C ADD X10, X10, 0x10
	0x01D6A780 B.NE 0x1D6A76C
	0x01D6A784 MOVZ W2, 0xE
	0x01D6A788 MOV X0, X24
	0x01D6A78C BL 0x1C5C788
	0x01D6A790 B 0x1D6A7A4
	0x01D6A794 LDR W9, [X10]
	0x01D6A798 ADD W9, W9, 0xE
	0x01D6A79C ADD X8, X8, W9, 0x4, SXTW
	0x01D6A7A0 ADD X0, X8, 0x138
	0x01D6A7A4 LDP X7, X6, [X0]
	0x01D6A7A8 MOV X0, X24
	0x01D6A7AC MOV X1, X23
	0x01D6A7B0 MOV X2, X22
	0x01D6A7B4 MOV X3, X21
	0x01D6A7B8 MOV X4, X20
	0x01D6A7BC MOV X5, X19
	0x01D6A7C0 LDP X20, X19, [X31 + 0x30]
	0x01D6A7C4 LDP X22, X21, [X31 + 0x20]
	0x01D6A7C8 LDP X24, X23, [X31 + 0x10]
	0x01D6A7CC LDP X30, X25, [X31], #0x40
	0x01D6A7D0 BR X7
	0x01D6A7D4 BL 0x1C16F20
	0x01D6A7D8 STR X30, [X31 - 0x50]!
	0x01D6A7DC STP X26, X25, [X31 + 0x10]
	0x01D6A7E0 STP X24, X23, [X31 + 0x20]
	0x01D6A7E4 STP X22, X21, [X31 + 0x30]
	0x01D6A7E8 STP X20, X19, [X31 + 0x40]
	0x01D6A7EC ADRP X26, 0x266E000
	0x01D6A7F0 ADRP X25, 0x2389000
	0x01D6A7F4 LDRB W8, [X26 + 0x8A0]
	0x01D6A7F8 LDR X25, [X25 + 0x658]
	0x01D6A7FC MOV X19, X6
	0x01D6A800 MOV X20, X5
	0x01D6A804 MOV X21, X4
	0x01D6A808 MOV W24, W3
	0x01D6A80C MOV X22, X2
	0x01D6A810 MOV X23, X1
	0x01D6A814 TBNZ X8, 0x0, 0x1D6A838
	0x01D6A818 ADRP X0, 0x2389000
	0x01D6A81C LDR X0, [X0 + 0x658]
	0x01D6A820 BL 0x1C16CF4
	0x01D6A824 ADRP X0, 0x238B000
	0x01D6A828 LDR X0, [X0 + 0xA18]
	0x01D6A82C BL 0x1C16CF4
	0x01D6A830 MOVZ W8, 0x1
	0x01D6A834 STRB W8, [X26 + 0x8A0]
	0x01D6A838 LDR X0, [X25]
	0x01D6A83C LDR W8, [X0 + 0xE0]
	0x01D6A840 CBNZ W8, 0x1D6A84C
	0x01D6A844 BL 0x1C16DFC
	0x01D6A848 LDR X0, [X25]
	0x01D6A84C LDR X8, [X0 + 0xB8]
	0x01D6A850 LDR X25, [X8 + 0x10]
	0x01D6A854 CBZ X25, 0x1D6A8E8
	0x01D6A858 ADRP X10, 0x238B000
	0x01D6A85C LDR X8, [X25]
	0x01D6A860 LDR X10, [X10 + 0xA18]
	0x01D6A864 LDRH W9, [X8 + 0x12E]
	0x01D6A868 LDR X1, [X10]
	0x01D6A86C CBZ X9, 0x1D6A890
	0x01D6A870 LDR X10, [X8 + 0xB0]
	0x01D6A874 ADD X10, X10, 0x8
	0x01D6A878 LDUR X11, [X10 - 0x8]
	0x01D6A87C CMP X11, X1
	0x01D6A880 B.EQ 0x1D6A8A0
	0x01D6A884 SUBS X9, X9, 0x1
	0x01D6A888 ADD X10, X10, 0x10
	0x01D6A88C B.NE 0x1D6A878
	0x01D6A890 MOVZ W2, 0xF
	0x01D6A894 MOV X0, X25
	0x01D6A898 BL 0x1C5C788
	0x01D6A89C B 0x1D6A8B0
	0x01D6A8A0 LDR W9, [X10]
	0x01D6A8A4 ADD W9, W9, 0xF
	0x01D6A8A8 ADD X8, X8, W9, 0x4, SXTW
	0x01D6A8AC ADD X0, X8, 0x138
	0x01D6A8B0 LDP X8, X7, [X0]
	0x01D6A8B4 AND W3, W24, 0x1
	0x01D6A8B8 MOV X0, X25
	0x01D6A8BC MOV X1, X23
	0x01D6A8C0 MOV X2, X22
	0x01D6A8C4 MOV X4, X21
	0x01D6A8C8 MOV X5, X20
	0x01D6A8CC MOV X6, X19
	0x01D6A8D0 LDP X20, X19, [X31 + 0x40]
	0x01D6A8D4 LDP X22, X21, [X31 + 0x30]
	0x01D6A8D8 LDP X24, X23, [X31 + 0x20]
	0x01D6A8DC LDP X26, X25, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move [X31], X1
	015 Move [X31+8], X5
	016 Move X24, 0x266F000
	017 Move X25, 0x238A000
	018 Move X22, 0x238A000
	019 Move W8, [X24+2191]
	020 Move X25, [X25+1824]
	021 Move X22, [X22+1816]
	022 Move X21, X3
	023 Move X23, X2
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {81}
	028 Move X0, 0x238A000
	029 Move X0, [X0+1624]
	030 Call 0x1C17CF4
	031 Move X0, 0x238C000
	032 Move X0, [X0+2648]
	033 Call 0x1C17CF4
	034 Move X0, 0x238A000
	035 Move X0, [X0+1808]
	036 Call 0x1C17CF4
	037 Move X0, 0x238A000
	038 Move X0, [X0+1816]
	039 Call 0x1C17CF4
	040 Move X0, 0x238A000
	041 Move X0, [X0+1824]
	042 Call 0x1C17CF4
	043 Move X0, 0x238C000
	044 Move X0, [X0+3040]
	045 Call 0x1C17CF4
	046 Move X0, 0x238C000
	047 Move X0, [X0+2584]
	048 Call 0x1C17CF4
	049 Move X0, 0x238C000
	050 Move X0, [X0+2656]
	051 Call 0x1C17CF4
	052 Move X0, 0x238C000
	053 Move X0, [X0+3048]
	054 Call 0x1C17CF4
	055 Move X0, 0x238C000
	056 Move X0, [X0+3056]
	057 Call 0x1C17CF4
	058 Move X0, 0x238C000
	059 Move X0, [X0+2720]
	060 Call 0x1C17CF4
	061 Move X0, 0x238C000
	062 Move X0, [X0+3064]
	063 Call 0x1C17CF4
	064 Move X0, 0x238C000
	065 Move X0, [X0+3072]
	066 Call 0x1C17CF4
	067 Move X0, 0x238C000
	068 Move X0, [X0+3080]
	069 Call 0x1C17CF4
	070 Move X0, 0x238C000
	071 Move X0, [X0+3088]
	072 Call 0x1C17CF4
	073 Move X0, 0x238C000
	074 Move X0, [X0+3096]
	075 Call 0x1C17CF4
	076 Move X0, 0x238C000
	077 Move X0, [X0+3104]
	078 Call 0x1C17CF4
	079 Move W8, 1
	080 Move [X24+2191], W8
	081 Move X0, [X25]
	082 Call 0x1C17F10
	083 Move X1, [X22]
	084 Move X22, X0
	085 Call Dictionary`2<Object, Object>..ctor, X0
	086 Compare X21, 0
	087 JumpIfEqual {269}
	088 Compare X22, 0
	089 JumpIfEqual {269}
	090 Move X8, 0x238C000
	091 Move X25, 0x238A000
	092 Move X8, [X8+3088]
	093 Move X25, [X25+1808]
	094 Move X29, 0x238C000
	095 Move X19, 0x238C000
	096 Move X20, 0x238C000
	097 Move X27, 0x238C000
	098 Move X29, [X29+3064]
	099 Move X19, [X19+3072]
	100 Move X20, [X20+2648]
	101 Move X27, [X27+2656]
	102 Move X2, [X21+40]
	103 Move X1, [X8]
	104 Move X3, [X25]
	105 Move X28, 0x238C000
	106 Move X26, 0x238C000
	107 Move X24, 0x238A000
	108 Move X28, [X28+3096]
	109 Move X26, [X26+3104]
	110 Move X24, [X24+1624]
	111 Move X0, X22
	112 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	113 Move X1, [X29]
	114 Move X3, [X25]
	115 Move X0, X22
	116 Move X2, X23
	117 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	118 Move X2, [X21+56]
	119 Move X1, [X19]
	120 Move X3, [X25]
	121 Move X0, X22
	122 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	123 Move X0, [X20]
	124 Move X23, [X21+32]
	125 Move W8, [X0+224]
	126 Compare W8, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 Move X0, X23
	130 Move X1, X31
	131 Call DateTimeOffset.op_Implicit, X0
	132 Move [X31+32], X0
	133 Move [X31+40], X1
	134 Add X0, X31, 32
	135 Move X1, X31
	136 Call DateTimeOffset.ToUnixTimeSeconds, X0
	137 Move X8, [X27]
	138 Move [X31+24], X0
	139 Add X1, X31, 24
	140 Move X0, X8
	141 Call 0x1C17E04
	142 Move X1, [X28]
	143 Move X3, [X25]
	144 Move X2, X0
	145 Move X0, X22
	146 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	147 Move X0, [X21+24]
	148 Move X1, X31
	149 Call DateTimeOffset.op_Implicit, X0
	150 Move [X31+32], X0
	151 Move [X31+40], X1
	152 Add X0, X31, 32
	153 Move X1, X31
	154 Call DateTimeOffset.ToUnixTimeSeconds, X0
	155 Move X8, [X27]
	156 Move [X31+16], X0
	157 Add X1, X31, 16
	158 Move X0, X8
	159 Call 0x1C17E04
	160 Move X1, [X26]
	161 Move X3, [X25]
	162 Move X2, X0
	163 Move X0, X22
	164 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	165 Move X0, [X24]
	166 Move W8, [X0+224]
	167 Compare W8, 0
	168 JumpIfNotEqual {171}
	169 Call 0x1C17DFC
	170 Move X0, [X24]
	171 Move X8, [X0+184]
	172 Move X0, X22
	173 Move X1, X31
	174 Move X21, [X8+16]
	175 Call JsonWriter.ToJson, X0
	176 Compare X21, 0
	177 JumpIfEqual {269}
	178 Move X9, 0x238C000
	179 Move X10, 0x238C000
	180 Move X8, [X21]
	181 Move X9, [X9+2584]
	182 Move X10, [X10+3080]
	183 Move X24, 0x238C000
	184 Move X22, X0
	185 Move X1, [X9]
	186 NotImplemented "Instruction LDRH not yet implemented."
	187 Move X23, [X10]
	188 Move X24, [X24+2720]
	189 Compare X9, 0
	190 JumpIfEqual {197}
	191 Move X10, [X8+176]
	192 Add X10, X10, 8
	193 NotImplemented "Instruction LDUR not yet implemented."
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Subtract X9, X9, 1
	196 Add X10, X10, 16
	197 Move W2, 72
	198 Move X0, X21
	199 Call 0x1C5D788
	200 Move W9, [X10]
	201 Add W9, W9, 72
	202 Add X8, X8, W9
	203 Add X0, X8, 312
	204 Move X8, [X0]
	205 Move X6, [X0+8]
	206 Move X1, [X31]
	207 Move X5, [X31+8]
	208 Move X0, X21
	209 Move X2, X23
	210 Move X3, X22
	211 Move X4, X31
	212 NotImplemented "Instruction BLR not yet implemented."
	213 Move X8, [X24]
	214 Move X19, X0
	215 Move W9, [X8+224]
	216 Compare W9, 0
	217 JumpIfNotEqual {221}
	218 Move X0, X8
	219 Call 0x1C17DFC
	220 Move X8, [X24]
	221 Move X9, [X8+184]
	222 Move X20, [X9+40]
	223 Compare X20, 0
	224 JumpIfNotEqual {247}
	225 Move W9, [X8+224]
	226 Compare W9, 0
	227 JumpIfNotEqual {231}
	228 Move X0, X8
	229 Call 0x1C17DFC
	230 Move X8, [X24]
	231 Move X9, 0x238C000
	232 Move X8, [X8+184]
	233 Move X9, [X9+3040]
	234 Move X21, [X8]
	235 Move X0, [X9]
	236 Call 0x1C17F10
	237 Move X8, 0x238C000
	238 Move X8, [X8+3056]
	239 Move X1, X21
	240 Move X3, X31
	241 Move X20, X0
	242 Move X2, [X8]
	243 Call Func`2<Object, ValidatePurchaseMetaQuestResponse>..ctor, X0, X1, X2
	244 Move X8, [X24]
	245 Move X8, [X8+184]
	246 Move [X8+40], X20
	247 Compare X19, 0
	248 JumpIfEqual {269}
	249 Move X8, 0x238C000
	250 Move X8, [X8+3048]
	251 Move X0, X19
	252 Move X1, X20
	253 Move X2, [X8]
	254 Call Task`1<Object>.ContinueWith, X0, X1
	255 Move X20, [X31+128]
	256 Move X19, [X31+136]
	257 Move X22, [X31+112]
	258 Move X21, [X31+120]
	259 Move X24, [X31+96]
	260 Move X23, [X31+104]
	261 Move X26, [X31+80]
	262 Move X25, [X31+88]
	263 Move X28, [X31+64]
	264 Move X27, [X31+72]
	265 Move X29, [X31+48]
	266 Move X30, [X31+56]
	267 Add X31, X31, 144
	268 Return X0
	269 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<AnimalCompany.API.AnimalCompanyAPI/RedeemPromoCodeResponse> RedeemPromoCodeAsync(Nakama.ISession session, System.String code, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6A8E0 LDR X30, [X31], #0x50
	0x01D6A8E4 BR X8
	0x01D6A8E8 BL 0x1C16F20
	0x01D6A8EC STR X30, [X31 - 0x50]!
	0x01D6A8F0 STP X26, X25, [X31 + 0x10]
	0x01D6A8F4 STP X24, X23, [X31 + 0x20]
	0x01D6A8F8 STP X22, X21, [X31 + 0x30]
	0x01D6A8FC STP X20, X19, [X31 + 0x40]
	0x01D6A900 ADRP X26, 0x266E000
	0x01D6A904 ADRP X25, 0x2389000
	0x01D6A908 LDRB W8, [X26 + 0x8A1]
	0x01D6A90C LDR X25, [X25 + 0x658]
	0x01D6A910 MOV X19, X6
	0x01D6A914 MOV X20, X5
	0x01D6A918 MOV X21, X4
	0x01D6A91C MOV W24, W3
	0x01D6A920 MOV X22, X2
	0x01D6A924 MOV X23, X1
	0x01D6A928 TBNZ X8, 0x0, 0x1D6A94C
	0x01D6A92C ADRP X0, 0x2389000
	0x01D6A930 LDR X0, [X0 + 0x658]
	0x01D6A934 BL 0x1C16CF4
	0x01D6A938 ADRP X0, 0x238B000
	0x01D6A93C LDR X0, [X0 + 0xA18]
	0x01D6A940 BL 0x1C16CF4
	0x01D6A944 MOVZ W8, 0x1
	0x01D6A948 STRB W8, [X26 + 0x8A1]
	0x01D6A94C LDR X0, [X25]
	0x01D6A950 LDR W8, [X0 + 0xE0]
	0x01D6A954 CBNZ W8, 0x1D6A960
	0x01D6A958 BL 0x1C16DFC
	0x01D6A95C LDR X0, [X25]
	0x01D6A960 LDR X8, [X0 + 0xB8]
	0x01D6A964 LDR X25, [X8 + 0x10]
	0x01D6A968 CBZ X25, 0x1D6A9FC
	0x01D6A96C ADRP X10, 0x238B000
	0x01D6A970 LDR X8, [X25]
	0x01D6A974 LDR X10, [X10 + 0xA18]
	0x01D6A978 LDRH W9, [X8 + 0x12E]
	0x01D6A97C LDR X1, [X10]
	0x01D6A980 CBZ X9, 0x1D6A9A4
	0x01D6A984 LDR X10, [X8 + 0xB0]
	0x01D6A988 ADD X10, X10, 0x8
	0x01D6A98C LDUR X11, [X10 - 0x8]
	0x01D6A990 CMP X11, X1
	0x01D6A994 B.EQ 0x1D6A9B4
	0x01D6A998 SUBS X9, X9, 0x1
	0x01D6A99C ADD X10, X10, 0x10
	0x01D6A9A0 B.NE 0x1D6A98C
	0x01D6A9A4 MOVZ W2, 0x10
	0x01D6A9A8 MOV X0, X25
	0x01D6A9AC BL 0x1C5C788
	0x01D6A9B0 B 0x1D6A9C4
	0x01D6A9B4 LDR W9, [X10]
	0x01D6A9B8 ADD W9, W9, 0x10
	0x01D6A9BC ADD X8, X8, W9, 0x4, SXTW
	0x01D6A9C0 ADD X0, X8, 0x138
	0x01D6A9C4 LDP X8, X7, [X0]
	0x01D6A9C8 AND W3, W24, 0x1
	0x01D6A9CC MOV X0, X25
	0x01D6A9D0 MOV X1, X23
	0x01D6A9D4 MOV X2, X22
	0x01D6A9D8 MOV X4, X21
	0x01D6A9DC MOV X5, X20
	0x01D6A9E0 MOV X6, X19
	0x01D6A9E4 LDP X20, X19, [X31 + 0x40]
	0x01D6A9E8 LDP X22, X21, [X31 + 0x30]
	0x01D6A9EC LDP X24, X23, [X31 + 0x20]
	0x01D6A9F0 LDP X26, X25, [X31 + 0x10]
	0x01D6A9F4 LDR X30, [X31], #0x50
	0x01D6A9F8 BR X8
	0x01D6A9FC BL 0x1C16F20
	0x01D6AA00 STR X30, [X31 - 0x50]!
	0x01D6AA04 STP X26, X25, [X31 + 0x10]
	0x01D6AA08 STP X24, X23, [X31 + 0x20]
	0x01D6AA0C STP X22, X21, [X31 + 0x30]
	0x01D6AA10 STP X20, X19, [X31 + 0x40]
	0x01D6AA14 ADRP X26, 0x266E000
	0x01D6AA18 ADRP X25, 0x2389000
	0x01D6AA1C LDRB W8, [X26 + 0x8A2]
	0x01D6AA20 LDR X25, [X25 + 0x658]
	0x01D6AA24 MOV X19, X6
	0x01D6AA28 MOV X20, X5
	0x01D6AA2C MOV X21, X4
	0x01D6AA30 MOV W24, W3
	0x01D6AA34 MOV X22, X2
	0x01D6AA38 MOV X23, X1
	0x01D6AA3C TBNZ X8, 0x0, 0x1D6AA60
	0x01D6AA40 ADRP X0, 0x2389000
	0x01D6AA44 LDR X0, [X0 + 0x658]
	0x01D6AA48 BL 0x1C16CF4
	0x01D6AA4C ADRP X0, 0x238B000
	0x01D6AA50 LDR X0, [X0 + 0xA18]
	0x01D6AA54 BL 0x1C16CF4
	0x01D6AA58 MOVZ W8, 0x1
	0x01D6AA5C STRB W8, [X26 + 0x8A2]
	0x01D6AA60 LDR X0, [X25]
	0x01D6AA64 LDR W8, [X0 + 0xE0]
	0x01D6AA68 CBNZ W8, 0x1D6AA74
	0x01D6AA6C BL 0x1C16DFC
	0x01D6AA70 LDR X0, [X25]
	0x01D6AA74 LDR X8, [X0 + 0xB8]
	0x01D6AA78 LDR X25, [X8 + 0x10]
	0x01D6AA7C CBZ X25, 0x1D6AB10
	0x01D6AA80 ADRP X10, 0x238B000
	0x01D6AA84 LDR X8, [X25]
	0x01D6AA88 LDR X10, [X10 + 0xA18]
	0x01D6AA8C LDRH W9, [X8 + 0x12E]
	0x01D6AA90 LDR X1, [X10]
	0x01D6AA94 CBZ X9, 0x1D6AAB8
	0x01D6AA98 LDR X10, [X8 + 0xB0]
	0x01D6AA9C ADD X10, X10, 0x8
	0x01D6AAA0 LDUR X11, [X10 - 0x8]
	0x01D6AAA4 CMP X11, X1
	0x01D6AAA8 B.EQ 0x1D6AAC8
	0x01D6AAAC SUBS X9, X9, 0x1
	0x01D6AAB0 ADD X10, X10, 0x10
	0x01D6AAB4 B.NE 0x1D6AAA0
	0x01D6AAB8 MOVZ W2, 0x11
	0x01D6AABC MOV X0, X25
	0x01D6AAC0 BL 0x1C5C788
	0x01D6AAC4 B 0x1D6AAD8
	0x01D6AAC8 LDR W9, [X10]
	0x01D6AACC ADD W9, W9, 0x11
	0x01D6AAD0 ADD X8, X8, W9, 0x4, SXTW
	0x01D6AAD4 ADD X0, X8, 0x138
	0x01D6AAD8 LDP X8, X7, [X0]
	0x01D6AADC AND W3, W24, 0x1
	0x01D6AAE0 MOV X0, X25
	0x01D6AAE4 MOV X1, X23
	0x01D6AAE8 MOV X2, X22
	0x01D6AAEC MOV X4, X21
	0x01D6AAF0 MOV X5, X20
	0x01D6AAF4 MOV X6, X19
	0x01D6AAF8 LDP X20, X19, [X31 + 0x40]
	0x01D6AAFC LDP X22, X21, [X31 + 0x30]
	0x01D6AB00 LDP X24, X23, [X31 + 0x20]
	0x01D6AB04 LDP X26, X25, [X31 + 0x10]
	0x01D6AB08 LDR X30, [X31], #0x50
	0x01D6AB0C BR X8
	0x01D6AB10 BL 0x1C16F20
	0x01D6AB14 STP X30, X27, [X31 - 0x50]!
	0x01D6AB18 STP X26, X25, [X31 + 0x10]
	0x01D6AB1C STP X24, X23, [X31 + 0x20]
	0x01D6AB20 STP X22, X21, [X31 + 0x30]
	0x01D6AB24 STP X20, X19, [X31 + 0x40]
	0x01D6AB28 ADRP X27, 0x266E000
	0x01D6AB2C ADRP X26, 0x2389000
	0x01D6AB30 LDRB W8, [X27 + 0x8A3]
	0x01D6AB34 LDR X26, [X26 + 0x658]
	0x01D6AB38 MOV X19, X7
	0x01D6AB3C MOV X20, X6
	0x01D6AB40 MOV X21, X5
	0x01D6AB44 MOV W24, W4
	0x01D6AB48 MOV X22, X3
	0x01D6AB4C MOV X23, X2

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x266F000
	009 Move X24, 0x238B000
	010 Move X22, 0x238B000
	011 Move W8, [X23+2192]
	012 Move X24, [X24+1744]
	013 Move X22, [X22+1728]
	014 Move X19, X3
	015 Move X21, X2
	016 Move X20, X1
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {56}
	021 Move X0, 0x238A000
	022 Move X0, [X0+1624]
	023 Call 0x1C17CF4
	024 Move X0, 0x238B000
	025 Move X0, [X0+2064]
	026 Call 0x1C17CF4
	027 Move X0, 0x238B000
	028 Move X0, [X0+1728]
	029 Call 0x1C17CF4
	030 Move X0, 0x238B000
	031 Move X0, [X0+1744]
	032 Call 0x1C17CF4
	033 Move X0, 0x238C000
	034 Move X0, [X0+3112]
	035 Call 0x1C17CF4
	036 Move X0, 0x238C000
	037 Move X0, [X0+2584]
	038 Call 0x1C17CF4
	039 Move X0, 0x238C000
	040 Move X0, [X0+3120]
	041 Call 0x1C17CF4
	042 Move X0, 0x238C000
	043 Move X0, [X0+3128]
	044 Call 0x1C17CF4
	045 Move X0, 0x238C000
	046 Move X0, [X0+2720]
	047 Call 0x1C17CF4
	048 Move X0, 0x238C000
	049 Move X0, [X0+3136]
	050 Call 0x1C17CF4
	051 Move X0, 0x238B000
	052 Move X0, [X0+1848]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X23+2192], W8
	056 Move X0, [X24]
	057 Call 0x1C17F10
	058 Move X1, [X22]
	059 Move X22, X0
	060 Call Dictionary`2<Object, Object>..ctor, X0
	061 Compare X22, 0
	062 JumpIfEqual {172}
	063 Move X8, 0x238B000
	064 Move X9, 0x238B000
	065 Move X8, [X8+1848]
	066 Move X9, [X9+2064]
	067 Move X23, 0x238A000
	068 Move X0, X22
	069 Move X1, [X8]
	070 Move X3, [X9]
	071 Move X23, [X23+1624]
	072 Move X2, X21
	073 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	074 Move X0, [X23]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {80}
	078 Call 0x1C17DFC
	079 Move X0, [X23]
	080 Move X8, [X0+184]
	081 Move X0, X22
	082 Move X1, X31
	083 Move X21, [X8+16]
	084 Call JsonWriter.ToJson, X0
	085 Compare X21, 0
	086 JumpIfEqual {172}
	087 Move X9, 0x238C000
	088 Move X10, 0x238C000
	089 Move X8, [X21]
	090 Move X9, [X9+2584]
	091 Move X10, [X10+3136]
	092 Move X24, 0x238C000
	093 Move X22, X0
	094 Move X1, [X9]
	095 NotImplemented "Instruction LDRH not yet implemented."
	096 Move X23, [X10]
	097 Move X24, [X24+2720]
	098 Compare X9, 0
	099 JumpIfEqual {106}
	100 Move X10, [X8+176]
	101 Add X10, X10, 8
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Subtract X9, X9, 1
	105 Add X10, X10, 16
	106 Move W2, 72
	107 Move X0, X21
	108 Call 0x1C5D788
	109 Move W9, [X10]
	110 Add W9, W9, 72
	111 Add X8, X8, W9
	112 Add X0, X8, 312
	113 Move X8, [X0]
	114 Move X6, [X0+8]
	115 Move X0, X21
	116 Move X1, X20
	117 Move X2, X23
	118 Move X3, X22
	119 Move X4, X31
	120 Move X5, X19
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move X8, [X24]
	123 Move X19, X0
	124 Move W9, [X8+224]
	125 Compare W9, 0
	126 JumpIfNotEqual {130}
	127 Move X0, X8
	128 Call 0x1C17DFC
	129 Move X8, [X24]
	130 Move X9, [X8+184]
	131 Move X20, [X9+48]
	132 Compare X20, 0
	133 JumpIfNotEqual {156}
	134 Move W9, [X8+224]
	135 Compare W9, 0
	136 JumpIfNotEqual {140}
	137 Move X0, X8
	138 Call 0x1C17DFC
	139 Move X8, [X24]
	140 Move X9, 0x238C000
	141 Move X8, [X8+184]
	142 Move X9, [X9+3112]
	143 Move X21, [X8]
	144 Move X0, [X9]
	145 Call 0x1C17F10
	146 Move X8, 0x238C000
	147 Move X8, [X8+3128]
	148 Move X1, X21
	149 Move X3, X31
	150 Move X20, X0
	151 Move X2, [X8]
	152 Call Func`2<Object, RedeemPromoCodeResponse>..ctor, X0, X1, X2
	153 Move X8, [X24]
	154 Move X8, [X8+184]
	155 Move [X8+48], X20
	156 Compare X19, 0
	157 JumpIfEqual {172}
	158 Move X8, 0x238C000
	159 Move X8, [X8+3120]
	160 Move X0, X19
	161 Move X1, X20
	162 Move X20, [X31+48]
	163 Move X19, [X31+56]
	164 Move X2, [X8]
	165 Move X22, [X31+32]
	166 Move X21, [X31+40]
	167 Move X24, [X31+16]
	168 Move X23, [X31+24]
	169 Move X30, [X31+64]
	170 Call Task`1<Object>.ContinueWith, X0, X1
	171 Return X0
	172 Call 0x1C17F20

Method: System.Boolean get_AutoRefreshSession()

Disassembly:
	0x01D6AB50 MOV X25, X1
	0x01D6AB54 TBNZ X8, 0x0, 0x1D6AB78
	0x01D6AB58 ADRP X0, 0x2389000
	0x01D6AB5C LDR X0, [X0 + 0x658]
	0x01D6AB60 BL 0x1C16CF4
	0x01D6AB64 ADRP X0, 0x238B000
	0x01D6AB68 LDR X0, [X0 + 0xA18]
	0x01D6AB6C BL 0x1C16CF4
	0x01D6AB70 MOVZ W8, 0x1
	0x01D6AB74 STRB W8, [X27 + 0x8A3]
	0x01D6AB78 LDR X0, [X26]
	0x01D6AB7C LDR W8, [X0 + 0xE0]
	0x01D6AB80 CBNZ W8, 0x1D6AB8C
	0x01D6AB84 BL 0x1C16DFC
	0x01D6AB88 LDR X0, [X26]
	0x01D6AB8C LDR X8, [X0 + 0xB8]
	0x01D6AB90 LDR X26, [X8 + 0x10]
	0x01D6AB94 CBZ X26, 0x1D6AC30
	0x01D6AB98 ADRP X10, 0x238B000
	0x01D6AB9C LDR X8, [X26]
	0x01D6ABA0 LDR X10, [X10 + 0xA18]
	0x01D6ABA4 LDRH W9, [X8 + 0x12E]
	0x01D6ABA8 LDR X1, [X10]
	0x01D6ABAC CBZ X9, 0x1D6ABD0
	0x01D6ABB0 LDR X10, [X8 + 0xB0]
	0x01D6ABB4 ADD X10, X10, 0x8
	0x01D6ABB8 LDUR X11, [X10 - 0x8]
	0x01D6ABBC CMP X11, X1
	0x01D6ABC0 B.EQ 0x1D6ABE0
	0x01D6ABC4 SUBS X9, X9, 0x1
	0x01D6ABC8 ADD X10, X10, 0x10
	0x01D6ABCC B.NE 0x1D6ABB8
	0x01D6ABD0 MOVZ W2, 0x12
	0x01D6ABD4 MOV X0, X26
	0x01D6ABD8 BL 0x1C5C788
	0x01D6ABDC B 0x1D6ABF0
	0x01D6ABE0 LDR W9, [X10]
	0x01D6ABE4 ADD W9, W9, 0x12
	0x01D6ABE8 ADD X8, X8, W9, 0x4, SXTW
	0x01D6ABEC ADD X0, X8, 0x138
	0x01D6ABF0 LDP X8, X9, [X0]
	0x01D6ABF4 AND W4, W24, 0x1
	0x01D6ABF8 MOV X0, X26
	0x01D6ABFC MOV X1, X25
	0x01D6AC00 MOV X2, X23
	0x01D6AC04 MOV X3, X22
	0x01D6AC08 MOV X5, X21
	0x01D6AC0C MOV X6, X20
	0x01D6AC10 MOV X7, X19
	0x01D6AC14 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x266F000
	005 Move X19, 0x238A000
	006 Move W8, [X20+2193]
	007 Move X19, [X19+1624]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x238A000
	013 Move X0, [X0+1624]
	014 Call 0x1C17CF4
	015 Move X0, 0x238C000
	016 Move X0, [X0+2584]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2193], W8
	020 Move X0, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X19]
	026 Move X8, [X0+184]
	027 Move X19, [X8+16]
	028 Compare X19, 0
	029 JumpIfEqual {56}
	030 Move X10, 0x238C000
	031 Move X8, [X19]
	032 Move X10, [X10+2584]
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move X1, [X10]
	035 Compare X9, 0
	036 JumpIfEqual {43}
	037 Move X10, [X8+176]
	038 Add X10, X10, 8
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Subtract X9, X9, 1
	042 Add X10, X10, 16
	043 Move X0, X19
	044 Move W2, W31
	045 Call 0x1C5D788
	046 NotImplemented "Instruction LDRSW not yet implemented."
	047 Add X8, X8, X9
	048 Add X0, X8, 312
	049 Move X2, [X0]
	050 Move X1, [X0+8]
	051 Move X0, X19
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 CallNoReturn X2
	056 Call 0x1C17F20

Method: Nakama.RetryConfiguration get_GlobalRetryConfiguration()

Disassembly:
	0x01D6AC18 LDP X22, X21, [X31 + 0x30]
	0x01D6AC1C LDP X24, X23, [X31 + 0x20]
	0x01D6AC20 LDP X26, X25, [X31 + 0x10]
	0x01D6AC24 STR X9, [X31 + 0x50]
	0x01D6AC28 LDP X30, X27, [X31], #0x50
	0x01D6AC2C BR X8
	0x01D6AC30 BL 0x1C16F20
	0x01D6AC34 STP X30, X27, [X31 - 0x50]!
	0x01D6AC38 STP X26, X25, [X31 + 0x10]
	0x01D6AC3C STP X24, X23, [X31 + 0x20]
	0x01D6AC40 STP X22, X21, [X31 + 0x30]
	0x01D6AC44 STP X20, X19, [X31 + 0x40]
	0x01D6AC48 ADRP X27, 0x266E000
	0x01D6AC4C ADRP X26, 0x2389000
	0x01D6AC50 LDRB W8, [X27 + 0x8A4]
	0x01D6AC54 LDR X26, [X26 + 0x658]
	0x01D6AC58 MOV X19, X7
	0x01D6AC5C MOV X20, X6
	0x01D6AC60 MOV X21, X5
	0x01D6AC64 MOV W23, W4
	0x01D6AC68 MOV W25, W3
	0x01D6AC6C MOV X22, X2
	0x01D6AC70 MOV X24, X1
	0x01D6AC74 TBNZ X8, 0x0, 0x1D6AC98
	0x01D6AC78 ADRP X0, 0x2389000
	0x01D6AC7C LDR X0, [X0 + 0x658]
	0x01D6AC80 BL 0x1C16CF4
	0x01D6AC84 ADRP X0, 0x238B000
	0x01D6AC88 LDR X0, [X0 + 0xA18]
	0x01D6AC8C BL 0x1C16CF4
	0x01D6AC90 MOVZ W8, 0x1
	0x01D6AC94 STRB W8, [X27 + 0x8A4]
	0x01D6AC98 LDR X0, [X26]
	0x01D6AC9C LDR W8, [X0 + 0xE0]
	0x01D6ACA0 CBNZ W8, 0x1D6ACAC
	0x01D6ACA4 BL 0x1C16DFC
	0x01D6ACA8 LDR X0, [X26]
	0x01D6ACAC LDR X8, [X0 + 0xB8]
	0x01D6ACB0 LDR X26, [X8 + 0x10]
	0x01D6ACB4 CBZ X26, 0x1D6AD50
	0x01D6ACB8 ADRP X10, 0x238B000
	0x01D6ACBC LDR X8, [X26]
	0x01D6ACC0 LDR X10, [X10 + 0xA18]
	0x01D6ACC4 LDRH W9, [X8 + 0x12E]
	0x01D6ACC8 LDR X1, [X10]
	0x01D6ACCC CBZ X9, 0x1D6ACF0
	0x01D6ACD0 LDR X10, [X8 + 0xB0]
	0x01D6ACD4 ADD X10, X10, 0x8
	0x01D6ACD8 LDUR X11, [X10 - 0x8]
	0x01D6ACDC CMP X11, X1
	0x01D6ACE0 B.EQ 0x1D6AD00

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x266F000
	005 Move X19, 0x238A000
	006 Move W8, [X20+2194]
	007 Move X19, [X19+1624]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x238A000
	013 Move X0, [X0+1624]
	014 Call 0x1C17CF4
	015 Move X0, 0x238C000
	016 Move X0, [X0+2584]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2194], W8
	020 Move X0, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X19]
	026 Move X8, [X0+184]
	027 Move X19, [X8+16]
	028 Compare X19, 0
	029 JumpIfEqual {57}
	030 Move X10, 0x238C000
	031 Move X8, [X19]
	032 Move X10, [X10+2584]
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move X1, [X10]
	035 Compare X9, 0
	036 JumpIfEqual {43}
	037 Move X10, [X8+176]
	038 Add X10, X10, 8
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Subtract X9, X9, 1
	042 Add X10, X10, 16
	043 Move W2, 1
	044 Move X0, X19
	045 Call 0x1C5D788
	046 Move W9, [X10]
	047 Add W9, W9, 1
	048 Add X8, X8, W9
	049 Add X0, X8, 312
	050 Move X2, [X0]
	051 Move X1, [X0+8]
	052 Move X0, X19
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 CallNoReturn X2
	057 Call 0x1C17F20

Method: System.Void set_GlobalRetryConfiguration(Nakama.RetryConfiguration value)

Disassembly:
	0x01D6ACE4 SUBS X9, X9, 0x1
	0x01D6ACE8 ADD X10, X10, 0x10
	0x01D6ACEC B.NE 0x1D6ACD8
	0x01D6ACF0 MOVZ W2, 0x13
	0x01D6ACF4 MOV X0, X26
	0x01D6ACF8 BL 0x1C5C788
	0x01D6ACFC B 0x1D6AD10
	0x01D6AD00 LDR W9, [X10]
	0x01D6AD04 ADD W9, W9, 0x13
	0x01D6AD08 ADD X8, X8, W9, 0x4, SXTW
	0x01D6AD0C ADD X0, X8, 0x138
	0x01D6AD10 LDP X8, X9, [X0]
	0x01D6AD14 AND W3, W25, 0x1
	0x01D6AD18 AND W4, W23, 0x1
	0x01D6AD1C MOV X0, X26
	0x01D6AD20 MOV X1, X24
	0x01D6AD24 MOV X2, X22
	0x01D6AD28 MOV X5, X21
	0x01D6AD2C MOV X6, X20
	0x01D6AD30 MOV X7, X19
	0x01D6AD34 LDP X20, X19, [X31 + 0x40]
	0x01D6AD38 LDP X22, X21, [X31 + 0x30]
	0x01D6AD3C LDP X24, X23, [X31 + 0x20]
	0x01D6AD40 LDP X26, X25, [X31 + 0x10]
	0x01D6AD44 STR X9, [X31 + 0x50]
	0x01D6AD48 LDP X30, X27, [X31], #0x50
	0x01D6AD4C BR X8
	0x01D6AD50 BL 0x1C16F20
	0x01D6AD54 SUB X31, X31, 0x70
	0x01D6AD58 STP X29, X30, [X31 + 0x10]
	0x01D6AD5C STP X28, X27, [X31 + 0x20]
	0x01D6AD60 STP X26, X25, [X31 + 0x30]
	0x01D6AD64 STP X24, X23, [X31 + 0x40]
	0x01D6AD68 STP X22, X21, [X31 + 0x50]
	0x01D6AD6C STP X20, X19, [X31 + 0x60]
	0x01D6AD70 STP X6, X7, [X31]
	0x01D6AD74 ADRP X20, 0x266E000
	0x01D6AD78 ADRP X26, 0x2389000
	0x01D6AD7C LDP X28, X27, [X31 + 0x80]
	0x01D6AD80 LDR X29, [X31 + 0x78]
	0x01D6AD84 LDRB W8, [X20 + 0x8A5]
	0x01D6AD88 LDRB W19, [X31 + 0x70]
	0x01D6AD8C LDR X26, [X26 + 0x658]
	0x01D6AD90 MOV X21, X5
	0x01D6AD94 MOV X22, X4
	0x01D6AD98 MOV X23, X3
	0x01D6AD9C MOV X24, X2
	0x01D6ADA0 MOV X25, X1
	0x01D6ADA4 TBNZ X8, 0x0, 0x1D6ADC8
	0x01D6ADA8 ADRP X0, 0x2389000
	0x01D6ADAC LDR X0, [X0 + 0x658]
	0x01D6ADB0 BL 0x1C16CF4
	0x01D6ADB4 ADRP X0, 0x238B000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x266F000
	006 Move X20, 0x238A000
	007 Move W8, [X21+2195]
	008 Move X20, [X20+1624]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x238A000
	015 Move X0, [X0+1624]
	016 Call 0x1C17CF4
	017 Move X0, 0x238C000
	018 Move X0, [X0+2584]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2195], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X20, [X8+16]
	030 Compare X20, 0
	031 JumpIfEqual {61}
	032 Move X10, 0x238C000
	033 Move X8, [X20]
	034 Move X10, [X10+2584]
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Move X1, [X10]
	037 Compare X9, 0
	038 JumpIfEqual {45}
	039 Move X10, [X8+176]
	040 Add X10, X10, 8
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Subtract X9, X9, 1
	044 Add X10, X10, 16
	045 Move W2, 2
	046 Move X0, X20
	047 Call 0x1C5D788
	048 Move W9, [X10]
	049 Add W9, W9, 2
	050 Add X8, X8, W9
	051 Add X0, X8, 312
	052 Move X3, [X0]
	053 Move X2, [X0+8]
	054 Move X0, X20
	055 Move X1, X19
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 CallNoReturn X3
	061 Call 0x1C17F20

Method: System.String get_Host()

Disassembly:
	0x01D6ADB8 LDR X0, [X0 + 0xA18]
	0x01D6ADBC BL 0x1C16CF4
	0x01D6ADC0 MOVZ W8, 0x1
	0x01D6ADC4 STRB W8, [X20 + 0x8A5]
	0x01D6ADC8 LDR X0, [X26]
	0x01D6ADCC LDR W8, [X0 + 0xE0]
	0x01D6ADD0 CBNZ W8, 0x1D6ADDC
	0x01D6ADD4 BL 0x1C16DFC
	0x01D6ADD8 LDR X0, [X26]
	0x01D6ADDC LDR X8, [X0 + 0xB8]
	0x01D6ADE0 LDR X26, [X8 + 0x10]
	0x01D6ADE4 CBZ X26, 0x1D6AE90
	0x01D6ADE8 ADRP X10, 0x238B000
	0x01D6ADEC LDR X8, [X26]
	0x01D6ADF0 LDR X10, [X10 + 0xA18]
	0x01D6ADF4 LDRH W9, [X8 + 0x12E]
	0x01D6ADF8 LDR X1, [X10]
	0x01D6ADFC CBZ X9, 0x1D6AE20
	0x01D6AE00 LDR X10, [X8 + 0xB0]
	0x01D6AE04 ADD X10, X10, 0x8
	0x01D6AE08 LDUR X11, [X10 - 0x8]
	0x01D6AE0C CMP X11, X1
	0x01D6AE10 B.EQ 0x1D6AE30
	0x01D6AE14 SUBS X9, X9, 0x1
	0x01D6AE18 ADD X10, X10, 0x10
	0x01D6AE1C B.NE 0x1D6AE08
	0x01D6AE20 MOVZ W2, 0x14
	0x01D6AE24 MOV X0, X26
	0x01D6AE28 BL 0x1C5C788
	0x01D6AE2C B 0x1D6AE40
	0x01D6AE30 LDR W9, [X10]
	0x01D6AE34 ADD W9, W9, 0x14
	0x01D6AE38 ADD X8, X8, W9, 0x4, SXTW
	0x01D6AE3C ADD X0, X8, 0x138
	0x01D6AE40 LDP X9, X8, [X0]
	0x01D6AE44 AND W10, W19, 0x1
	0x01D6AE48 STP X29, X28, [X31 + 0x78]
	0x01D6AE4C MOV X0, X26
	0x01D6AE50 STP X27, X8, [X31 + 0x88]
	0x01D6AE54 MOV X1, X25
	0x01D6AE58 MOV X2, X24
	0x01D6AE5C MOV X3, X23
	0x01D6AE60 MOV X4, X22
	0x01D6AE64 MOV X5, X21
	0x01D6AE68 LDP X6, X7, [X31]
	0x01D6AE6C LDP X20, X19, [X31 + 0x60]
	0x01D6AE70 LDP X22, X21, [X31 + 0x50]
	0x01D6AE74 LDP X24, X23, [X31 + 0x40]
	0x01D6AE78 LDP X26, X25, [X31 + 0x30]
	0x01D6AE7C LDP X28, X27, [X31 + 0x20]
	0x01D6AE80 LDP X29, X30, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x266F000
	005 Move X19, 0x238A000
	006 Move W8, [X20+2196]
	007 Move X19, [X19+1624]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x238A000
	013 Move X0, [X0+1624]
	014 Call 0x1C17CF4
	015 Move X0, 0x238C000
	016 Move X0, [X0+2584]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2196], W8
	020 Move X0, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X19]
	026 Move X8, [X0+184]
	027 Move X19, [X8+16]
	028 Compare X19, 0
	029 JumpIfEqual {57}
	030 Move X10, 0x238C000
	031 Move X8, [X19]
	032 Move X10, [X10+2584]
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move X1, [X10]
	035 Compare X9, 0
	036 JumpIfEqual {43}
	037 Move X10, [X8+176]
	038 Add X10, X10, 8
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Subtract X9, X9, 1
	042 Add X10, X10, 16
	043 Move W2, 3
	044 Move X0, X19
	045 Call 0x1C5D788
	046 Move W9, [X10]
	047 Add W9, W9, 3
	048 Add X8, X8, W9
	049 Add X0, X8, 312
	050 Move X2, [X0]
	051 Move X1, [X0+8]
	052 Move X0, X19
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 CallNoReturn X2
	057 Call 0x1C17F20

Method: System.Int32 get_Port()

Disassembly:
	0x01D6AE84 STRB W10, [X31 + 0x70]
	0x01D6AE88 ADD X31, X31, 0x70
	0x01D6AE8C BR X9
	0x01D6AE90 BL 0x1C16F20
	0x01D6AE94 STR X30, [X31 - 0x50]!
	0x01D6AE98 STP X26, X25, [X31 + 0x10]
	0x01D6AE9C STP X24, X23, [X31 + 0x20]
	0x01D6AEA0 STP X22, X21, [X31 + 0x30]
	0x01D6AEA4 STP X20, X19, [X31 + 0x40]
	0x01D6AEA8 ADRP X26, 0x266E000
	0x01D6AEAC ADRP X25, 0x2389000
	0x01D6AEB0 LDRB W8, [X26 + 0x8A6]
	0x01D6AEB4 LDR X25, [X25 + 0x658]
	0x01D6AEB8 MOV X19, X6
	0x01D6AEBC MOV X20, X5
	0x01D6AEC0 MOV X21, X4
	0x01D6AEC4 MOV W24, W3
	0x01D6AEC8 MOV X22, X2
	0x01D6AECC MOV X23, X1
	0x01D6AED0 TBNZ X8, 0x0, 0x1D6AEF4
	0x01D6AED4 ADRP X0, 0x2389000
	0x01D6AED8 LDR X0, [X0 + 0x658]
	0x01D6AEDC BL 0x1C16CF4
	0x01D6AEE0 ADRP X0, 0x238B000
	0x01D6AEE4 LDR X0, [X0 + 0xA18]
	0x01D6AEE8 BL 0x1C16CF4
	0x01D6AEEC MOVZ W8, 0x1
	0x01D6AEF0 STRB W8, [X26 + 0x8A6]
	0x01D6AEF4 LDR X0, [X25]
	0x01D6AEF8 LDR W8, [X0 + 0xE0]
	0x01D6AEFC CBNZ W8, 0x1D6AF08
	0x01D6AF00 BL 0x1C16DFC
	0x01D6AF04 LDR X0, [X25]
	0x01D6AF08 LDR X8, [X0 + 0xB8]
	0x01D6AF0C LDR X25, [X8 + 0x10]
	0x01D6AF10 CBZ X25, 0x1D6AFA4
	0x01D6AF14 ADRP X10, 0x238B000
	0x01D6AF18 LDR X8, [X25]
	0x01D6AF1C LDR X10, [X10 + 0xA18]
	0x01D6AF20 LDRH W9, [X8 + 0x12E]
	0x01D6AF24 LDR X1, [X10]
	0x01D6AF28 CBZ X9, 0x1D6AF4C
	0x01D6AF2C LDR X10, [X8 + 0xB0]
	0x01D6AF30 ADD X10, X10, 0x8
	0x01D6AF34 LDUR X11, [X10 - 0x8]
	0x01D6AF38 CMP X11, X1
	0x01D6AF3C B.EQ 0x1D6AF5C
	0x01D6AF40 SUBS X9, X9, 0x1
	0x01D6AF44 ADD X10, X10, 0x10
	0x01D6AF48 B.NE 0x1D6AF34
	0x01D6AF4C MOVZ W2, 0x15

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x266F000
	005 Move X19, 0x238A000
	006 Move W8, [X20+2197]
	007 Move X19, [X19+1624]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x238A000
	013 Move X0, [X0+1624]
	014 Call 0x1C17CF4
	015 Move X0, 0x238C000
	016 Move X0, [X0+2584]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2197], W8
	020 Move X0, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X19]
	026 Move X8, [X0+184]
	027 Move X19, [X8+16]
	028 Compare X19, 0
	029 JumpIfEqual {57}
	030 Move X10, 0x238C000
	031 Move X8, [X19]
	032 Move X10, [X10+2584]
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move X1, [X10]
	035 Compare X9, 0
	036 JumpIfEqual {43}
	037 Move X10, [X8+176]
	038 Add X10, X10, 8
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Subtract X9, X9, 1
	042 Add X10, X10, 16
	043 Move W2, 4
	044 Move X0, X19
	045 Call 0x1C5D788
	046 Move W9, [X10]
	047 Add W9, W9, 4
	048 Add X8, X8, W9
	049 Add X0, X8, 312
	050 Move X2, [X0]
	051 Move X1, [X0+8]
	052 Move X0, X19
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 CallNoReturn X2
	057 Call 0x1C17F20

Method: System.String get_Scheme()

Disassembly:
	0x01D6AF50 MOV X0, X25
	0x01D6AF54 BL 0x1C5C788
	0x01D6AF58 B 0x1D6AF6C
	0x01D6AF5C LDR W9, [X10]
	0x01D6AF60 ADD W9, W9, 0x15
	0x01D6AF64 ADD X8, X8, W9, 0x4, SXTW
	0x01D6AF68 ADD X0, X8, 0x138
	0x01D6AF6C LDP X8, X7, [X0]
	0x01D6AF70 AND W3, W24, 0x1
	0x01D6AF74 MOV X0, X25
	0x01D6AF78 MOV X1, X23
	0x01D6AF7C MOV X2, X22
	0x01D6AF80 MOV X4, X21
	0x01D6AF84 MOV X5, X20
	0x01D6AF88 MOV X6, X19
	0x01D6AF8C LDP X20, X19, [X31 + 0x40]
	0x01D6AF90 LDP X22, X21, [X31 + 0x30]
	0x01D6AF94 LDP X24, X23, [X31 + 0x20]
	0x01D6AF98 LDP X26, X25, [X31 + 0x10]
	0x01D6AF9C LDR X30, [X31], #0x50
	0x01D6AFA0 BR X8
	0x01D6AFA4 BL 0x1C16F20
	0x01D6AFA8 STP X30, X27, [X31 - 0x50]!
	0x01D6AFAC STP X26, X25, [X31 + 0x10]
	0x01D6AFB0 STP X24, X23, [X31 + 0x20]
	0x01D6AFB4 STP X22, X21, [X31 + 0x30]
	0x01D6AFB8 STP X20, X19, [X31 + 0x40]
	0x01D6AFBC ADRP X27, 0x266E000
	0x01D6AFC0 ADRP X26, 0x2389000
	0x01D6AFC4 LDRB W8, [X27 + 0x8A7]
	0x01D6AFC8 LDR X26, [X26 + 0x658]
	0x01D6AFCC MOV X19, X7
	0x01D6AFD0 MOV X20, X6
	0x01D6AFD4 MOV X21, X5
	0x01D6AFD8 MOV W23, W4
	0x01D6AFDC MOV W25, W3
	0x01D6AFE0 MOV X22, X2
	0x01D6AFE4 MOV X24, X1
	0x01D6AFE8 TBNZ X8, 0x0, 0x1D6B00C
	0x01D6AFEC ADRP X0, 0x2389000
	0x01D6AFF0 LDR X0, [X0 + 0x658]
	0x01D6AFF4 BL 0x1C16CF4
	0x01D6AFF8 ADRP X0, 0x238B000
	0x01D6AFFC LDR X0, [X0 + 0xA18]
	0x01D6B000 BL 0x1C16CF4
	0x01D6B004 MOVZ W8, 0x1
	0x01D6B008 STRB W8, [X27 + 0x8A7]
	0x01D6B00C LDR X0, [X26]
	0x01D6B010 LDR W8, [X0 + 0xE0]
	0x01D6B014 CBNZ W8, 0x1D6B020
	0x01D6B018 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x266F000
	005 Move X19, 0x238A000
	006 Move W8, [X20+2198]
	007 Move X19, [X19+1624]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x238A000
	013 Move X0, [X0+1624]
	014 Call 0x1C17CF4
	015 Move X0, 0x238C000
	016 Move X0, [X0+2584]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2198], W8
	020 Move X0, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X19]
	026 Move X8, [X0+184]
	027 Move X19, [X8+16]
	028 Compare X19, 0
	029 JumpIfEqual {57}
	030 Move X10, 0x238C000
	031 Move X8, [X19]
	032 Move X10, [X10+2584]
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move X1, [X10]
	035 Compare X9, 0
	036 JumpIfEqual {43}
	037 Move X10, [X8+176]
	038 Add X10, X10, 8
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Subtract X9, X9, 1
	042 Add X10, X10, 16
	043 Move W2, 5
	044 Move X0, X19
	045 Call 0x1C5D788
	046 Move W9, [X10]
	047 Add W9, W9, 5
	048 Add X8, X8, W9
	049 Add X0, X8, 312
	050 Move X2, [X0]
	051 Move X1, [X0+8]
	052 Move X0, X19
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 CallNoReturn X2
	057 Call 0x1C17F20

Method: System.String get_ServerKey()

Disassembly:
	0x01D6B01C LDR X0, [X26]
	0x01D6B020 LDR X8, [X0 + 0xB8]
	0x01D6B024 LDR X26, [X8 + 0x10]
	0x01D6B028 CBZ X26, 0x1D6B0C4
	0x01D6B02C ADRP X10, 0x238A000
	0x01D6B030 LDR X8, [X26]
	0x01D6B034 LDR X10, [X10 + 0xA18]
	0x01D6B038 LDRH W9, [X8 + 0x12E]
	0x01D6B03C LDR X1, [X10]
	0x01D6B040 CBZ X9, 0x1D6B064
	0x01D6B044 LDR X10, [X8 + 0xB0]
	0x01D6B048 ADD X10, X10, 0x8
	0x01D6B04C LDUR X11, [X10 - 0x8]
	0x01D6B050 CMP X11, X1
	0x01D6B054 B.EQ 0x1D6B074
	0x01D6B058 SUBS X9, X9, 0x1
	0x01D6B05C ADD X10, X10, 0x10
	0x01D6B060 B.NE 0x1D6B04C
	0x01D6B064 MOVZ W2, 0x16
	0x01D6B068 MOV X0, X26
	0x01D6B06C BL 0x1C5C788
	0x01D6B070 B 0x1D6B084
	0x01D6B074 LDR W9, [X10]
	0x01D6B078 ADD W9, W9, 0x16
	0x01D6B07C ADD X8, X8, W9, 0x4, SXTW
	0x01D6B080 ADD X0, X8, 0x138
	0x01D6B084 LDP X8, X9, [X0]
	0x01D6B088 AND W3, W25, 0x1
	0x01D6B08C AND W4, W23, 0x1
	0x01D6B090 MOV X0, X26
	0x01D6B094 MOV X1, X24
	0x01D6B098 MOV X2, X22
	0x01D6B09C MOV X5, X21
	0x01D6B0A0 MOV X6, X20
	0x01D6B0A4 MOV X7, X19
	0x01D6B0A8 LDP X20, X19, [X31 + 0x40]
	0x01D6B0AC LDP X22, X21, [X31 + 0x30]
	0x01D6B0B0 LDP X24, X23, [X31 + 0x20]
	0x01D6B0B4 LDP X26, X25, [X31 + 0x10]
	0x01D6B0B8 STR X9, [X31 + 0x50]
	0x01D6B0BC LDP X30, X27, [X31], #0x50
	0x01D6B0C0 BR X8
	0x01D6B0C4 BL 0x1C16F20
	0x01D6B0C8 STP X30, X25, [X31 - 0x40]!
	0x01D6B0CC STP X24, X23, [X31 + 0x10]
	0x01D6B0D0 STP X22, X21, [X31 + 0x20]
	0x01D6B0D4 STP X20, X19, [X31 + 0x30]
	0x01D6B0D8 ADRP X25, 0x266D000
	0x01D6B0DC ADRP X24, 0x2388000
	0x01D6B0E0 LDRB W8, [X25 + 0x8A8]
	0x01D6B0E4 LDR X24, [X24 + 0x658]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x266E000
	005 Move X19, 0x2389000
	006 Move W8, [X20+2199]
	007 Move X19, [X19+1624]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x2389000
	013 Move X0, [X0+1624]
	014 Call 0x1C17CF4
	015 Move X0, 0x238B000
	016 Move X0, [X0+2584]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2199], W8
	020 Move X0, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X19]
	026 Move X8, [X0+184]
	027 Move X19, [X8+16]
	028 Compare X19, 0
	029 JumpIfEqual {57}
	030 Move X10, 0x238B000
	031 Move X8, [X19]
	032 Move X10, [X10+2584]
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move X1, [X10]
	035 Compare X9, 0
	036 JumpIfEqual {43}
	037 Move X10, [X8+176]
	038 Add X10, X10, 8
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Subtract X9, X9, 1
	042 Add X10, X10, 16
	043 Move W2, 6
	044 Move X0, X19
	045 Call 0x1C5D788
	046 Move W9, [X10]
	047 Add W9, W9, 6
	048 Add X8, X8, W9
	049 Add X0, X8, 312
	050 Move X2, [X0]
	051 Move X1, [X0+8]
	052 Move X0, X19
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 CallNoReturn X2
	057 Call 0x1C17F20

Method: System.Int32 get_Timeout()

Disassembly:
	0x01D6B0E8 MOV X19, X5
	0x01D6B0EC MOV X20, X4
	0x01D6B0F0 MOV X21, X3
	0x01D6B0F4 MOV X22, X2
	0x01D6B0F8 MOV X23, X1
	0x01D6B0FC TBNZ X8, 0x0, 0x1D6B120
	0x01D6B100 ADRP X0, 0x2388000
	0x01D6B104 LDR X0, [X0 + 0x658]
	0x01D6B108 BL 0x1C16CF4
	0x01D6B10C ADRP X0, 0x238A000
	0x01D6B110 LDR X0, [X0 + 0xA18]
	0x01D6B114 BL 0x1C16CF4
	0x01D6B118 MOVZ W8, 0x1
	0x01D6B11C STRB W8, [X25 + 0x8A8]
	0x01D6B120 LDR X0, [X24]
	0x01D6B124 LDR W8, [X0 + 0xE0]
	0x01D6B128 CBNZ W8, 0x1D6B134
	0x01D6B12C BL 0x1C16DFC
	0x01D6B130 LDR X0, [X24]
	0x01D6B134 LDR X8, [X0 + 0xB8]
	0x01D6B138 LDR X24, [X8 + 0x10]
	0x01D6B13C CBZ X24, 0x1D6B1C8
	0x01D6B140 ADRP X10, 0x238A000
	0x01D6B144 LDR X8, [X24]
	0x01D6B148 LDR X10, [X10 + 0xA18]
	0x01D6B14C LDRH W9, [X8 + 0x12E]
	0x01D6B150 LDR X1, [X10]
	0x01D6B154 CBZ X9, 0x1D6B178
	0x01D6B158 LDR X10, [X8 + 0xB0]
	0x01D6B15C ADD X10, X10, 0x8
	0x01D6B160 LDUR X11, [X10 - 0x8]
	0x01D6B164 CMP X11, X1
	0x01D6B168 B.EQ 0x1D6B188
	0x01D6B16C SUBS X9, X9, 0x1
	0x01D6B170 ADD X10, X10, 0x10
	0x01D6B174 B.NE 0x1D6B160
	0x01D6B178 MOVZ W2, 0x17
	0x01D6B17C MOV X0, X24
	0x01D6B180 BL 0x1C5C788
	0x01D6B184 B 0x1D6B198
	0x01D6B188 LDR W9, [X10]
	0x01D6B18C ADD W9, W9, 0x17
	0x01D6B190 ADD X8, X8, W9, 0x4, SXTW
	0x01D6B194 ADD X0, X8, 0x138
	0x01D6B198 LDP X7, X6, [X0]
	0x01D6B19C MOV X0, X24
	0x01D6B1A0 MOV X1, X23
	0x01D6B1A4 MOV X2, X22
	0x01D6B1A8 MOV X3, X21
	0x01D6B1AC MOV X4, X20
	0x01D6B1B0 MOV X5, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x266E000
	005 Move X19, 0x2389000
	006 Move W8, [X20+2200]
	007 Move X19, [X19+1624]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x2389000
	013 Move X0, [X0+1624]
	014 Call 0x1C17CF4
	015 Move X0, 0x238B000
	016 Move X0, [X0+2584]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2200], W8
	020 Move X0, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X19]
	026 Move X8, [X0+184]
	027 Move X19, [X8+16]
	028 Compare X19, 0
	029 JumpIfEqual {57}
	030 Move X10, 0x238B000
	031 Move X8, [X19]
	032 Move X10, [X10+2584]
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move X1, [X10]
	035 Compare X9, 0
	036 JumpIfEqual {43}
	037 Move X10, [X8+176]
	038 Add X10, X10, 8
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Subtract X9, X9, 1
	042 Add X10, X10, 16
	043 Move W2, 9
	044 Move X0, X19
	045 Call 0x1C5D788
	046 Move W9, [X10]
	047 Add W9, W9, 9
	048 Add X8, X8, W9
	049 Add X0, X8, 312
	050 Move X2, [X0]
	051 Move X1, [X0+8]
	052 Move X0, X19
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 CallNoReturn X2
	057 Call 0x1C17F20

Method: System.Void set_Timeout(System.Int32 value)

Disassembly:
	0x01D6B1B4 LDP X20, X19, [X31 + 0x30]
	0x01D6B1B8 LDP X22, X21, [X31 + 0x20]
	0x01D6B1BC LDP X24, X23, [X31 + 0x10]
	0x01D6B1C0 LDP X30, X25, [X31], #0x40
	0x01D6B1C4 BR X7
	0x01D6B1C8 BL 0x1C16F20
	0x01D6B1CC STP X30, X25, [X31 - 0x40]!
	0x01D6B1D0 STP X24, X23, [X31 + 0x10]
	0x01D6B1D4 STP X22, X21, [X31 + 0x20]
	0x01D6B1D8 STP X20, X19, [X31 + 0x30]
	0x01D6B1DC ADRP X25, 0x266D000
	0x01D6B1E0 ADRP X24, 0x2388000
	0x01D6B1E4 LDRB W8, [X25 + 0x8A9]
	0x01D6B1E8 LDR X24, [X24 + 0x658]
	0x01D6B1EC MOV X19, X5
	0x01D6B1F0 MOV X20, X4
	0x01D6B1F4 MOV X21, X3
	0x01D6B1F8 MOV X22, X2
	0x01D6B1FC MOV X23, X1
	0x01D6B200 TBNZ X8, 0x0, 0x1D6B224
	0x01D6B204 ADRP X0, 0x2388000
	0x01D6B208 LDR X0, [X0 + 0x658]
	0x01D6B20C BL 0x1C16CF4
	0x01D6B210 ADRP X0, 0x238A000
	0x01D6B214 LDR X0, [X0 + 0xA18]
	0x01D6B218 BL 0x1C16CF4
	0x01D6B21C MOVZ W8, 0x1
	0x01D6B220 STRB W8, [X25 + 0x8A9]
	0x01D6B224 LDR X0, [X24]
	0x01D6B228 LDR W8, [X0 + 0xE0]
	0x01D6B22C CBNZ W8, 0x1D6B238
	0x01D6B230 BL 0x1C16DFC
	0x01D6B234 LDR X0, [X24]
	0x01D6B238 LDR X8, [X0 + 0xB8]
	0x01D6B23C LDR X24, [X8 + 0x10]
	0x01D6B240 CBZ X24, 0x1D6B2CC
	0x01D6B244 ADRP X10, 0x238A000
	0x01D6B248 LDR X8, [X24]
	0x01D6B24C LDR X10, [X10 + 0xA18]
	0x01D6B250 LDRH W9, [X8 + 0x12E]
	0x01D6B254 LDR X1, [X10]
	0x01D6B258 CBZ X9, 0x1D6B27C
	0x01D6B25C LDR X10, [X8 + 0xB0]
	0x01D6B260 ADD X10, X10, 0x8
	0x01D6B264 LDUR X11, [X10 - 0x8]
	0x01D6B268 CMP X11, X1
	0x01D6B26C B.EQ 0x1D6B28C
	0x01D6B270 SUBS X9, X9, 0x1
	0x01D6B274 ADD X10, X10, 0x10
	0x01D6B278 B.NE 0x1D6B264
	0x01D6B27C MOVZ W2, 0x18
	0x01D6B280 MOV X0, X24
	0x01D6B284 BL 0x1C5C788

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x266E000
	006 Move X20, 0x2389000
	007 Move W8, [X21+2201]
	008 Move X20, [X20+1624]
	009 Move W19, W1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2389000
	015 Move X0, [X0+1624]
	016 Call 0x1C17CF4
	017 Move X0, 0x238B000
	018 Move X0, [X0+2584]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2201], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X20, [X8+16]
	030 Compare X20, 0
	031 JumpIfEqual {61}
	032 Move X10, 0x238B000
	033 Move X8, [X20]
	034 Move X10, [X10+2584]
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Move X1, [X10]
	037 Compare X9, 0
	038 JumpIfEqual {45}
	039 Move X10, [X8+176]
	040 Add X10, X10, 8
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Subtract X9, X9, 1
	044 Add X10, X10, 16
	045 Move W2, 10
	046 Move X0, X20
	047 Call 0x1C5D788
	048 Move W9, [X10]
	049 Add W9, W9, 10
	050 Add X8, X8, W9
	051 Add X0, X8, 312
	052 Move X3, [X0]
	053 Move X2, [X0+8]
	054 Move X0, X20
	055 Move W1, W19
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 CallNoReturn X3
	061 Call 0x1C17F20

Method: Nakama.ILogger get_Logger()

Disassembly:
	0x01D6B288 B 0x1D6B29C
	0x01D6B28C LDR W9, [X10]
	0x01D6B290 ADD W9, W9, 0x18
	0x01D6B294 ADD X8, X8, W9, 0x4, SXTW
	0x01D6B298 ADD X0, X8, 0x138
	0x01D6B29C LDP X7, X6, [X0]
	0x01D6B2A0 MOV X0, X24
	0x01D6B2A4 MOV X1, X23
	0x01D6B2A8 MOV X2, X22
	0x01D6B2AC MOV X3, X21
	0x01D6B2B0 MOV X4, X20
	0x01D6B2B4 MOV X5, X19
	0x01D6B2B8 LDP X20, X19, [X31 + 0x30]
	0x01D6B2BC LDP X22, X21, [X31 + 0x20]
	0x01D6B2C0 LDP X24, X23, [X31 + 0x10]
	0x01D6B2C4 LDP X30, X25, [X31], #0x40
	0x01D6B2C8 BR X7
	0x01D6B2CC BL 0x1C16F20
	0x01D6B2D0 STP X29, X30, [X31 - 0x60]!
	0x01D6B2D4 STP X28, X27, [X31 + 0x10]
	0x01D6B2D8 STP X26, X25, [X31 + 0x20]
	0x01D6B2DC STP X24, X23, [X31 + 0x30]
	0x01D6B2E0 STP X22, X21, [X31 + 0x40]
	0x01D6B2E4 STP X20, X19, [X31 + 0x50]
	0x01D6B2E8 ADRP X29, 0x266D000
	0x01D6B2EC ADRP X26, 0x2388000
	0x01D6B2F0 LDRB W8, [X29 + 0x8AA]
	0x01D6B2F4 LDP X27, X28, [X31 + 0x60]
	0x01D6B2F8 LDR X26, [X26 + 0x658]
	0x01D6B2FC MOV W19, W7
	0x01D6B300 MOV W23, W6
	0x01D6B304 MOV X20, X5
	0x01D6B308 MOV X21, X4
	0x01D6B30C MOV X22, X3
	0x01D6B310 MOV X24, X2
	0x01D6B314 MOV X25, X1
	0x01D6B318 TBNZ X8, 0x0, 0x1D6B33C
	0x01D6B31C ADRP X0, 0x2388000
	0x01D6B320 LDR X0, [X0 + 0x658]
	0x01D6B324 BL 0x1C16CF4
	0x01D6B328 ADRP X0, 0x238A000
	0x01D6B32C LDR X0, [X0 + 0xA18]
	0x01D6B330 BL 0x1C16CF4
	0x01D6B334 MOVZ W8, 0x1
	0x01D6B338 STRB W8, [X29 + 0x8AA]
	0x01D6B33C LDR X0, [X26]
	0x01D6B340 LDR W8, [X0 + 0xE0]
	0x01D6B344 CBNZ W8, 0x1D6B350
	0x01D6B348 BL 0x1C16DFC
	0x01D6B34C LDR X0, [X26]
	0x01D6B350 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x266E000
	005 Move X19, 0x2389000
	006 Move W8, [X20+2202]
	007 Move X19, [X19+1624]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x2389000
	013 Move X0, [X0+1624]
	014 Call 0x1C17CF4
	015 Move X0, 0x238B000
	016 Move X0, [X0+2584]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2202], W8
	020 Move X0, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X19]
	026 Move X8, [X0+184]
	027 Move X19, [X8+16]
	028 Compare X19, 0
	029 JumpIfEqual {57}
	030 Move X10, 0x238B000
	031 Move X8, [X19]
	032 Move X10, [X10+2584]
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move X1, [X10]
	035 Compare X9, 0
	036 JumpIfEqual {43}
	037 Move X10, [X8+176]
	038 Add X10, X10, 8
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Subtract X9, X9, 1
	042 Add X10, X10, 16
	043 Move W2, 11
	044 Move X0, X19
	045 Call 0x1C5D788
	046 Move W9, [X10]
	047 Add W9, W9, 11
	048 Add X8, X8, W9
	049 Add X0, X8, 312
	050 Move X2, [X0]
	051 Move X1, [X0+8]
	052 Move X0, X19
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 CallNoReturn X2
	057 Call 0x1C17F20

Method: System.Void set_Logger(Nakama.ILogger value)

Disassembly:
	0x01D6B354 LDR X26, [X8 + 0x10]
	0x01D6B358 CBZ X26, 0x1D6B3FC
	0x01D6B35C ADRP X10, 0x238A000
	0x01D6B360 LDR X8, [X26]
	0x01D6B364 LDR X10, [X10 + 0xA18]
	0x01D6B368 LDRH W9, [X8 + 0x12E]
	0x01D6B36C LDR X1, [X10]
	0x01D6B370 CBZ X9, 0x1D6B394
	0x01D6B374 LDR X10, [X8 + 0xB0]
	0x01D6B378 ADD X10, X10, 0x8
	0x01D6B37C LDUR X11, [X10 - 0x8]
	0x01D6B380 CMP X11, X1
	0x01D6B384 B.EQ 0x1D6B3A4
	0x01D6B388 SUBS X9, X9, 0x1
	0x01D6B38C ADD X10, X10, 0x10
	0x01D6B390 B.NE 0x1D6B37C
	0x01D6B394 MOVZ W2, 0x19
	0x01D6B398 MOV X0, X26
	0x01D6B39C BL 0x1C5C788
	0x01D6B3A0 B 0x1D6B3B4
	0x01D6B3A4 LDR W9, [X10]
	0x01D6B3A8 ADD W9, W9, 0x19
	0x01D6B3AC ADD X8, X8, W9, 0x4, SXTW
	0x01D6B3B0 ADD X0, X8, 0x138
	0x01D6B3B4 LDP X9, X8, [X0]
	0x01D6B3B8 AND W6, W23, 0x1
	0x01D6B3BC STR X27, [X31 + 0x60]
	0x01D6B3C0 MOV X0, X26
	0x01D6B3C4 STP X28, X8, [X31 + 0x68]
	0x01D6B3C8 MOV X1, X25
	0x01D6B3CC MOV X2, X24
	0x01D6B3D0 MOV X3, X22
	0x01D6B3D4 MOV X4, X21
	0x01D6B3D8 MOV X5, X20
	0x01D6B3DC MOV W7, W19
	0x01D6B3E0 LDP X20, X19, [X31 + 0x50]
	0x01D6B3E4 LDP X22, X21, [X31 + 0x40]
	0x01D6B3E8 LDP X24, X23, [X31 + 0x30]
	0x01D6B3EC LDP X26, X25, [X31 + 0x20]
	0x01D6B3F0 LDP X28, X27, [X31 + 0x10]
	0x01D6B3F4 LDP X29, X30, [X31], #0x60
	0x01D6B3F8 BR X9
	0x01D6B3FC BL 0x1C16F20
	0x01D6B400 STP X30, X23, [X31 - 0x30]!
	0x01D6B404 STP X22, X21, [X31 + 0x10]
	0x01D6B408 STP X20, X19, [X31 + 0x20]
	0x01D6B40C ADRP X23, 0x266D000
	0x01D6B410 ADRP X22, 0x2388000
	0x01D6B414 LDRB W8, [X23 + 0x8AB]
	0x01D6B418 LDR X22, [X22 + 0x658]
	0x01D6B41C MOV X19, X3
	0x01D6B420 MOV X20, X2
	0x01D6B424 MOV X21, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x266E000
	006 Move X20, 0x2389000
	007 Move W8, [X21+2203]
	008 Move X20, [X20+1624]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2389000
	015 Move X0, [X0+1624]
	016 Call 0x1C17CF4
	017 Move X0, 0x238B000
	018 Move X0, [X0+2584]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2203], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X20, [X8+16]
	030 Compare X20, 0
	031 JumpIfEqual {61}
	032 Move X10, 0x238B000
	033 Move X8, [X20]
	034 Move X10, [X10+2584]
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Move X1, [X10]
	037 Compare X9, 0
	038 JumpIfEqual {45}
	039 Move X10, [X8+176]
	040 Add X10, X10, 8
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Subtract X9, X9, 1
	044 Add X10, X10, 16
	045 Move W2, 12
	046 Move X0, X20
	047 Call 0x1C5D788
	048 Move W9, [X10]
	049 Add W9, W9, 12
	050 Add X8, X8, W9
	051 Add X0, X8, 312
	052 Move X3, [X0]
	053 Move X2, [X0+8]
	054 Move X0, X20
	055 Move X1, X19
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 CallNoReturn X3
	061 Call 0x1C17F20

Method: System.Void add_ReceivedSessionUpdated(System.Action`1<Nakama.ISession> value)

Disassembly:
	0x01D6B428 TBNZ X8, 0x0, 0x1D6B44C
	0x01D6B42C ADRP X0, 0x2388000
	0x01D6B430 LDR X0, [X0 + 0x658]
	0x01D6B434 BL 0x1C16CF4
	0x01D6B438 ADRP X0, 0x238A000
	0x01D6B43C LDR X0, [X0 + 0xA18]
	0x01D6B440 BL 0x1C16CF4
	0x01D6B444 MOVZ W8, 0x1
	0x01D6B448 STRB W8, [X23 + 0x8AB]
	0x01D6B44C LDR X0, [X22]
	0x01D6B450 LDR W8, [X0 + 0xE0]
	0x01D6B454 CBNZ W8, 0x1D6B460
	0x01D6B458 BL 0x1C16DFC
	0x01D6B45C LDR X0, [X22]
	0x01D6B460 LDR X8, [X0 + 0xB8]
	0x01D6B464 LDR X22, [X8 + 0x10]
	0x01D6B468 CBZ X22, 0x1D6B4E8
	0x01D6B46C ADRP X10, 0x238A000
	0x01D6B470 LDR X8, [X22]
	0x01D6B474 LDR X10, [X10 + 0xA18]
	0x01D6B478 LDRH W9, [X8 + 0x12E]
	0x01D6B47C LDR X1, [X10]
	0x01D6B480 CBZ X9, 0x1D6B4A4
	0x01D6B484 LDR X10, [X8 + 0xB0]
	0x01D6B488 ADD X10, X10, 0x8
	0x01D6B48C LDUR X11, [X10 - 0x8]
	0x01D6B490 CMP X11, X1
	0x01D6B494 B.EQ 0x1D6B4B4
	0x01D6B498 SUBS X9, X9, 0x1
	0x01D6B49C ADD X10, X10, 0x10
	0x01D6B4A0 B.NE 0x1D6B48C
	0x01D6B4A4 MOVZ W2, 0x1A
	0x01D6B4A8 MOV X0, X22
	0x01D6B4AC BL 0x1C5C788
	0x01D6B4B0 B 0x1D6B4C4
	0x01D6B4B4 LDR W9, [X10]
	0x01D6B4B8 ADD W9, W9, 0x1A
	0x01D6B4BC ADD X8, X8, W9, 0x4, SXTW
	0x01D6B4C0 ADD X0, X8, 0x138
	0x01D6B4C4 LDP X5, X4, [X0]
	0x01D6B4C8 MOV X0, X22
	0x01D6B4CC MOV X1, X21
	0x01D6B4D0 MOV X2, X20
	0x01D6B4D4 MOV X3, X19
	0x01D6B4D8 LDP X20, X19, [X31 + 0x20]
	0x01D6B4DC LDP X22, X21, [X31 + 0x10]
	0x01D6B4E0 LDP X30, X23, [X31], #0x30
	0x01D6B4E4 BR X5
	0x01D6B4E8 BL 0x1C16F20
	0x01D6B4EC STP X30, X25, [X31 - 0x40]!
	0x01D6B4F0 STP X24, X23, [X31 + 0x10]
	0x01D6B4F4 STP X22, X21, [X31 + 0x20]
	0x01D6B4F8 STP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x266E000
	006 Move X20, 0x2389000
	007 Move W8, [X21+2204]
	008 Move X20, [X20+1624]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2389000
	015 Move X0, [X0+1624]
	016 Call 0x1C17CF4
	017 Move X0, 0x238B000
	018 Move X0, [X0+2584]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2204], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X20, [X8+16]
	030 Compare X20, 0
	031 JumpIfEqual {61}
	032 Move X10, 0x238B000
	033 Move X8, [X20]
	034 Move X10, [X10+2584]
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Move X1, [X10]
	037 Compare X9, 0
	038 JumpIfEqual {45}
	039 Move X10, [X8+176]
	040 Add X10, X10, 8
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Subtract X9, X9, 1
	044 Add X10, X10, 16
	045 Move W2, 7
	046 Move X0, X20
	047 Call 0x1C5D788
	048 Move W9, [X10]
	049 Add W9, W9, 7
	050 Add X8, X8, W9
	051 Add X0, X8, 312
	052 Move X3, [X0]
	053 Move X2, [X0+8]
	054 Move X0, X20
	055 Move X1, X19
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 CallNoReturn X3
	061 Call 0x1C17F20

Method: System.Void remove_ReceivedSessionUpdated(System.Action`1<Nakama.ISession> value)

Disassembly:
	0x01D6B4FC ADRP X25, 0x266D000
	0x01D6B500 ADRP X24, 0x2388000
	0x01D6B504 LDRB W8, [X25 + 0x8AC]
	0x01D6B508 LDR X24, [X24 + 0x658]
	0x01D6B50C MOV X19, X5
	0x01D6B510 MOV X20, X4
	0x01D6B514 MOV X21, X3
	0x01D6B518 MOV X22, X2
	0x01D6B51C MOV X23, X1
	0x01D6B520 TBNZ X8, 0x0, 0x1D6B544
	0x01D6B524 ADRP X0, 0x2388000
	0x01D6B528 LDR X0, [X0 + 0x658]
	0x01D6B52C BL 0x1C16CF4
	0x01D6B530 ADRP X0, 0x238A000
	0x01D6B534 LDR X0, [X0 + 0xA18]
	0x01D6B538 BL 0x1C16CF4
	0x01D6B53C MOVZ W8, 0x1
	0x01D6B540 STRB W8, [X25 + 0x8AC]
	0x01D6B544 LDR X0, [X24]
	0x01D6B548 LDR W8, [X0 + 0xE0]
	0x01D6B54C CBNZ W8, 0x1D6B558
	0x01D6B550 BL 0x1C16DFC
	0x01D6B554 LDR X0, [X24]
	0x01D6B558 LDR X8, [X0 + 0xB8]
	0x01D6B55C LDR X24, [X8 + 0x10]
	0x01D6B560 CBZ X24, 0x1D6B5EC
	0x01D6B564 ADRP X10, 0x238A000
	0x01D6B568 LDR X8, [X24]
	0x01D6B56C LDR X10, [X10 + 0xA18]
	0x01D6B570 LDRH W9, [X8 + 0x12E]
	0x01D6B574 LDR X1, [X10]
	0x01D6B578 CBZ X9, 0x1D6B59C
	0x01D6B57C LDR X10, [X8 + 0xB0]
	0x01D6B580 ADD X10, X10, 0x8
	0x01D6B584 LDUR X11, [X10 - 0x8]
	0x01D6B588 CMP X11, X1
	0x01D6B58C B.EQ 0x1D6B5AC
	0x01D6B590 SUBS X9, X9, 0x1
	0x01D6B594 ADD X10, X10, 0x10
	0x01D6B598 B.NE 0x1D6B584
	0x01D6B59C MOVZ W2, 0x1B
	0x01D6B5A0 MOV X0, X24
	0x01D6B5A4 BL 0x1C5C788
	0x01D6B5A8 B 0x1D6B5BC
	0x01D6B5AC LDR W9, [X10]
	0x01D6B5B0 ADD W9, W9, 0x1B
	0x01D6B5B4 ADD X8, X8, W9, 0x4, SXTW
	0x01D6B5B8 ADD X0, X8, 0x138
	0x01D6B5BC LDP X7, X6, [X0]
	0x01D6B5C0 MOV X0, X24
	0x01D6B5C4 MOV X1, X23
	0x01D6B5C8 MOV X2, X22
	0x01D6B5CC MOV X3, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x266E000
	006 Move X20, 0x2389000
	007 Move W8, [X21+2205]
	008 Move X20, [X20+1624]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2389000
	015 Move X0, [X0+1624]
	016 Call 0x1C17CF4
	017 Move X0, 0x238B000
	018 Move X0, [X0+2584]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2205], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X20, [X8+16]
	030 Compare X20, 0
	031 JumpIfEqual {61}
	032 Move X10, 0x238B000
	033 Move X8, [X20]
	034 Move X10, [X10+2584]
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Move X1, [X10]
	037 Compare X9, 0
	038 JumpIfEqual {45}
	039 Move X10, [X8+176]
	040 Add X10, X10, 8
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Subtract X9, X9, 1
	044 Add X10, X10, 16
	045 Move W2, 8
	046 Move X0, X20
	047 Call 0x1C5D788
	048 Move W9, [X10]
	049 Add W9, W9, 8
	050 Add X8, X8, W9
	051 Add X0, X8, 312
	052 Move X3, [X0]
	053 Move X2, [X0+8]
	054 Move X0, X20
	055 Move X1, X19
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 CallNoReturn X3
	061 Call 0x1C17F20

Method: System.Threading.Tasks.Task AddFriendsAsync(Nakama.ISession session, System.Collections.Generic.IEnumerable`1<System.String> ids, System.Collections.Generic.IEnumerable`1<System.String> usernames = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6B5D0 MOV X4, X20
	0x01D6B5D4 MOV X5, X19
	0x01D6B5D8 LDP X20, X19, [X31 + 0x30]
	0x01D6B5DC LDP X22, X21, [X31 + 0x20]
	0x01D6B5E0 LDP X24, X23, [X31 + 0x10]
	0x01D6B5E4 LDP X30, X25, [X31], #0x40
	0x01D6B5E8 BR X7
	0x01D6B5EC BL 0x1C16F20
	0x01D6B5F0 STR X30, [X31 - 0x40]!
	0x01D6B5F4 STP X24, X23, [X31 + 0x10]
	0x01D6B5F8 STP X22, X21, [X31 + 0x20]
	0x01D6B5FC STP X20, X19, [X31 + 0x30]
	0x01D6B600 ADRP X24, 0x266D000
	0x01D6B604 ADRP X23, 0x2388000
	0x01D6B608 LDRB W8, [X24 + 0x8AD]
	0x01D6B60C LDR X23, [X23 + 0x658]
	0x01D6B610 MOV X19, X4
	0x01D6B614 MOV X20, X3
	0x01D6B618 MOV X21, X2
	0x01D6B61C MOV X22, X1
	0x01D6B620 TBNZ X8, 0x0, 0x1D6B644
	0x01D6B624 ADRP X0, 0x2388000
	0x01D6B628 LDR X0, [X0 + 0x658]
	0x01D6B62C BL 0x1C16CF4
	0x01D6B630 ADRP X0, 0x238A000
	0x01D6B634 LDR X0, [X0 + 0xA18]
	0x01D6B638 BL 0x1C16CF4
	0x01D6B63C MOVZ W8, 0x1
	0x01D6B640 STRB W8, [X24 + 0x8AD]
	0x01D6B644 LDR X0, [X23]
	0x01D6B648 LDR W8, [X0 + 0xE0]
	0x01D6B64C CBNZ W8, 0x1D6B658
	0x01D6B650 BL 0x1C16DFC
	0x01D6B654 LDR X0, [X23]
	0x01D6B658 LDR X8, [X0 + 0xB8]
	0x01D6B65C LDR X23, [X8 + 0x10]
	0x01D6B660 CBZ X23, 0x1D6B6E8
	0x01D6B664 ADRP X10, 0x238A000
	0x01D6B668 LDR X8, [X23]
	0x01D6B66C LDR X10, [X10 + 0xA18]
	0x01D6B670 LDRH W9, [X8 + 0x12E]
	0x01D6B674 LDR X1, [X10]
	0x01D6B678 CBZ X9, 0x1D6B69C
	0x01D6B67C LDR X10, [X8 + 0xB0]
	0x01D6B680 ADD X10, X10, 0x8
	0x01D6B684 LDUR X11, [X10 - 0x8]
	0x01D6B688 CMP X11, X1
	0x01D6B68C B.EQ 0x1D6B6AC
	0x01D6B690 SUBS X9, X9, 0x1
	0x01D6B694 ADD X10, X10, 0x10
	0x01D6B698 B.NE 0x1D6B684
	0x01D6B69C MOVZ W2, 0x1C
	0x01D6B6A0 MOV X0, X23
	0x01D6B6A4 BL 0x1C5C788
	0x01D6B6A8 B 0x1D6B6BC
	0x01D6B6AC LDR W9, [X10]
	0x01D6B6B0 ADD W9, W9, 0x1C
	0x01D6B6B4 ADD X8, X8, W9, 0x4, SXTW
	0x01D6B6B8 ADD X0, X8, 0x138
	0x01D6B6BC LDP X6, X5, [X0]
	0x01D6B6C0 MOV X0, X23
	0x01D6B6C4 MOV X1, X22
	0x01D6B6C8 MOV X2, X21
	0x01D6B6CC MOV X3, X20
	0x01D6B6D0 MOV X4, X19

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x266E000
	010 Move X24, 0x2389000
	011 Move W8, [X25+2206]
	012 Move X24, [X24+1624]
	013 Move X19, X5
	014 Move X20, X4
	015 Move X21, X3
	016 Move X22, X2
	017 Move X23, X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x2389000
	023 Move X0, [X0+1624]
	024 Call 0x1C17CF4
	025 Move X0, 0x238B000
	026 Move X0, [X0+2584]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+2206], W8
	030 Move X0, [X24]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X24]
	036 Move X8, [X0+184]
	037 Move X24, [X8+16]
	038 Compare X24, 0
	039 JumpIfEqual {77}
	040 Move X10, 0x238B000
	041 Move X8, [X24]
	042 Move X10, [X10+2584]
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move X1, [X10]
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move W2, 13
	054 Move X0, X24
	055 Call 0x1C5D788
	056 Move W9, [X10]
	057 Add W9, W9, 13
	058 Add X8, X8, W9
	059 Add X0, X8, 312
	060 Move X7, [X0]
	061 Move X6, [X0+8]
	062 Move X0, X24
	063 Move X1, X23
	064 Move X2, X22
	065 Move X3, X21
	066 Move X4, X20
	067 Move X5, X19
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X30, [X31+64]
	075 Move X25, [X31+72]
	076 CallNoReturn X7
	077 Call 0x1C17F20

Method: System.Threading.Tasks.Task AddGroupUsersAsync(Nakama.ISession session, System.String groupId, System.Collections.Generic.IEnumerable`1<System.String> ids, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6B6D4 LDP X20, X19, [X31 + 0x30]
	0x01D6B6D8 LDP X22, X21, [X31 + 0x20]
	0x01D6B6DC LDP X24, X23, [X31 + 0x10]
	0x01D6B6E0 LDR X30, [X31], #0x40
	0x01D6B6E4 BR X6
	0x01D6B6E8 BL 0x1C16F20
	0x01D6B6EC STR X30, [X31 - 0x40]!
	0x01D6B6F0 STP X24, X23, [X31 + 0x10]
	0x01D6B6F4 STP X22, X21, [X31 + 0x20]
	0x01D6B6F8 STP X20, X19, [X31 + 0x30]
	0x01D6B6FC ADRP X24, 0x266D000
	0x01D6B700 ADRP X23, 0x2388000
	0x01D6B704 LDRB W8, [X24 + 0x8AE]
	0x01D6B708 LDR X23, [X23 + 0x658]
	0x01D6B70C MOV X19, X4
	0x01D6B710 MOV X20, X3
	0x01D6B714 MOV X21, X2
	0x01D6B718 MOV X22, X1
	0x01D6B71C TBNZ X8, 0x0, 0x1D6B740
	0x01D6B720 ADRP X0, 0x2388000
	0x01D6B724 LDR X0, [X0 + 0x658]
	0x01D6B728 BL 0x1C16CF4
	0x01D6B72C ADRP X0, 0x238A000
	0x01D6B730 LDR X0, [X0 + 0xA18]
	0x01D6B734 BL 0x1C16CF4
	0x01D6B738 MOVZ W8, 0x1
	0x01D6B73C STRB W8, [X24 + 0x8AE]
	0x01D6B740 LDR X0, [X23]
	0x01D6B744 LDR W8, [X0 + 0xE0]
	0x01D6B748 CBNZ W8, 0x1D6B754
	0x01D6B74C BL 0x1C16DFC
	0x01D6B750 LDR X0, [X23]
	0x01D6B754 LDR X8, [X0 + 0xB8]
	0x01D6B758 LDR X23, [X8 + 0x10]
	0x01D6B75C CBZ X23, 0x1D6B7E4
	0x01D6B760 ADRP X10, 0x238A000
	0x01D6B764 LDR X8, [X23]
	0x01D6B768 LDR X10, [X10 + 0xA18]
	0x01D6B76C LDRH W9, [X8 + 0x12E]
	0x01D6B770 LDR X1, [X10]
	0x01D6B774 CBZ X9, 0x1D6B798
	0x01D6B778 LDR X10, [X8 + 0xB0]
	0x01D6B77C ADD X10, X10, 0x8
	0x01D6B780 LDUR X11, [X10 - 0x8]
	0x01D6B784 CMP X11, X1
	0x01D6B788 B.EQ 0x1D6B7A8
	0x01D6B78C SUBS X9, X9, 0x1
	0x01D6B790 ADD X10, X10, 0x10
	0x01D6B794 B.NE 0x1D6B780
	0x01D6B798 MOVZ W2, 0x1D
	0x01D6B79C MOV X0, X23
	0x01D6B7A0 BL 0x1C5C788
	0x01D6B7A4 B 0x1D6B7B8
	0x01D6B7A8 LDR W9, [X10]
	0x01D6B7AC ADD W9, W9, 0x1D
	0x01D6B7B0 ADD X8, X8, W9, 0x4, SXTW
	0x01D6B7B4 ADD X0, X8, 0x138
	0x01D6B7B8 LDP X6, X5, [X0]
	0x01D6B7BC MOV X0, X23
	0x01D6B7C0 MOV X1, X22
	0x01D6B7C4 MOV X2, X21
	0x01D6B7C8 MOV X3, X20
	0x01D6B7CC MOV X4, X19
	0x01D6B7D0 LDP X20, X19, [X31 + 0x30]
	0x01D6B7D4 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x266E000
	010 Move X24, 0x2389000
	011 Move W8, [X25+2207]
	012 Move X24, [X24+1624]
	013 Move X19, X5
	014 Move X20, X4
	015 Move X21, X3
	016 Move X22, X2
	017 Move X23, X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x2389000
	023 Move X0, [X0+1624]
	024 Call 0x1C17CF4
	025 Move X0, 0x238B000
	026 Move X0, [X0+2584]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+2207], W8
	030 Move X0, [X24]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X24]
	036 Move X8, [X0+184]
	037 Move X24, [X8+16]
	038 Compare X24, 0
	039 JumpIfEqual {77}
	040 Move X10, 0x238B000
	041 Move X8, [X24]
	042 Move X10, [X10+2584]
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move X1, [X10]
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move W2, 14
	054 Move X0, X24
	055 Call 0x1C5D788
	056 Move W9, [X10]
	057 Add W9, W9, 14
	058 Add X8, X8, W9
	059 Add X0, X8, 312
	060 Move X7, [X0]
	061 Move X6, [X0+8]
	062 Move X0, X24
	063 Move X1, X23
	064 Move X2, X22
	065 Move X3, X21
	066 Move X4, X20
	067 Move X5, X19
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X30, [X31+64]
	075 Move X25, [X31+72]
	076 CallNoReturn X7
	077 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.ISession> AuthenticateAppleAsync(System.String token, System.String username = null, System.Boolean create = True, System.Collections.Generic.Dictionary`2<System.String, System.String> vars = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6B7D8 LDP X24, X23, [X31 + 0x10]
	0x01D6B7DC LDR X30, [X31], #0x40
	0x01D6B7E0 BR X6
	0x01D6B7E4 BL 0x1C16F20
	0x01D6B7E8 STR X30, [X31 - 0x40]!
	0x01D6B7EC STP X24, X23, [X31 + 0x10]
	0x01D6B7F0 STP X22, X21, [X31 + 0x20]
	0x01D6B7F4 STP X20, X19, [X31 + 0x30]
	0x01D6B7F8 ADRP X24, 0x266D000
	0x01D6B7FC ADRP X23, 0x2388000
	0x01D6B800 LDRB W8, [X24 + 0x8AF]
	0x01D6B804 LDR X23, [X23 + 0x658]
	0x01D6B808 MOV X19, X4
	0x01D6B80C MOV X20, X3
	0x01D6B810 MOV X21, X2
	0x01D6B814 MOV X22, X1
	0x01D6B818 TBNZ X8, 0x0, 0x1D6B83C
	0x01D6B81C ADRP X0, 0x2388000
	0x01D6B820 LDR X0, [X0 + 0x658]
	0x01D6B824 BL 0x1C16CF4
	0x01D6B828 ADRP X0, 0x238A000
	0x01D6B82C LDR X0, [X0 + 0xA18]
	0x01D6B830 BL 0x1C16CF4
	0x01D6B834 MOVZ W8, 0x1
	0x01D6B838 STRB W8, [X24 + 0x8AF]
	0x01D6B83C LDR X0, [X23]
	0x01D6B840 LDR W8, [X0 + 0xE0]
	0x01D6B844 CBNZ W8, 0x1D6B850
	0x01D6B848 BL 0x1C16DFC
	0x01D6B84C LDR X0, [X23]
	0x01D6B850 LDR X8, [X0 + 0xB8]
	0x01D6B854 LDR X23, [X8 + 0x10]
	0x01D6B858 CBZ X23, 0x1D6B8E0
	0x01D6B85C ADRP X10, 0x238A000
	0x01D6B860 LDR X8, [X23]
	0x01D6B864 LDR X10, [X10 + 0xA18]
	0x01D6B868 LDRH W9, [X8 + 0x12E]
	0x01D6B86C LDR X1, [X10]
	0x01D6B870 CBZ X9, 0x1D6B894
	0x01D6B874 LDR X10, [X8 + 0xB0]
	0x01D6B878 ADD X10, X10, 0x8
	0x01D6B87C LDUR X11, [X10 - 0x8]
	0x01D6B880 CMP X11, X1
	0x01D6B884 B.EQ 0x1D6B8A4
	0x01D6B888 SUBS X9, X9, 0x1
	0x01D6B88C ADD X10, X10, 0x10
	0x01D6B890 B.NE 0x1D6B87C
	0x01D6B894 MOVZ W2, 0x1E
	0x01D6B898 MOV X0, X23
	0x01D6B89C BL 0x1C5C788
	0x01D6B8A0 B 0x1D6B8B4
	0x01D6B8A4 LDR W9, [X10]
	0x01D6B8A8 ADD W9, W9, 0x1E
	0x01D6B8AC ADD X8, X8, W9, 0x4, SXTW
	0x01D6B8B0 ADD X0, X8, 0x138
	0x01D6B8B4 LDP X6, X5, [X0]
	0x01D6B8B8 MOV X0, X23
	0x01D6B8BC MOV X1, X22
	0x01D6B8C0 MOV X2, X21
	0x01D6B8C4 MOV X3, X20
	0x01D6B8C8 MOV X4, X19
	0x01D6B8CC LDP X20, X19, [X31 + 0x30]
	0x01D6B8D0 LDP X22, X21, [X31 + 0x20]
	0x01D6B8D4 LDP X24, X23, [X31 + 0x10]
	0x01D6B8D8 LDR X30, [X31], #0x40
	0x01D6B8DC BR X6
	0x01D6B8E0 BL 0x1C16F20
	0x01D6B8E4 STR X30, [X31 - 0x40]!
	0x01D6B8E8 STP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x266E000
	011 Move X25, 0x2389000
	012 Move W8, [X26+2208]
	013 Move X25, [X25+1624]
	014 Move X19, X6
	015 Move X20, X5
	016 Move X21, X4
	017 Move W24, W3
	018 Move X22, X2
	019 Move X23, X1
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x2389000
	025 Move X0, [X0+1624]
	026 Call 0x1C17CF4
	027 Move X0, 0x238B000
	028 Move X0, [X0+2584]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X26+2208], W8
	032 Move X0, [X25]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X25]
	038 Move X8, [X0+184]
	039 Move X25, [X8+16]
	040 Compare X25, 0
	041 JumpIfEqual {81}
	042 Move X10, 0x238B000
	043 Move X8, [X25]
	044 Move X10, [X10+2584]
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Move X1, [X10]
	047 Compare X9, 0
	048 JumpIfEqual {55}
	049 Move X10, [X8+176]
	050 Add X10, X10, 8
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Subtract X9, X9, 1
	054 Add X10, X10, 16
	055 Move W2, 15
	056 Move X0, X25
	057 Call 0x1C5D788
	058 Move W9, [X10]
	059 Add W9, W9, 15
	060 Add X8, X8, W9
	061 Add X0, X8, 312
	062 Move X8, [X0]
	063 Move X7, [X0+8]
	064 And W3, W24, 1
	065 Move X0, X25
	066 Move X1, X23
	067 Move X2, X22
	068 Move X4, X21
	069 Move X5, X20
	070 Move X6, X19
	071 Move X20, [X31+64]
	072 Move X19, [X31+72]
	073 Move X22, [X31+48]
	074 Move X21, [X31+56]
	075 Move X24, [X31+32]
	076 Move X23, [X31+40]
	077 Move X26, [X31+16]
	078 Move X25, [X31+24]
	079 Move X30, [X31+80]
	080 CallNoReturn X8
	081 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.ISession> AuthenticateCustomAsync(System.String id, System.String username = null, System.Boolean create = True, System.Collections.Generic.Dictionary`2<System.String, System.String> vars = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6B8EC STP X22, X21, [X31 + 0x20]
	0x01D6B8F0 STP X20, X19, [X31 + 0x30]
	0x01D6B8F4 ADRP X24, 0x266D000
	0x01D6B8F8 ADRP X23, 0x2388000
	0x01D6B8FC LDRB W8, [X24 + 0x8B0]
	0x01D6B900 LDR X23, [X23 + 0x658]
	0x01D6B904 MOV X19, X4
	0x01D6B908 MOV X20, X3
	0x01D6B90C MOV X21, X2
	0x01D6B910 MOV X22, X1
	0x01D6B914 TBNZ X8, 0x0, 0x1D6B938
	0x01D6B918 ADRP X0, 0x2388000
	0x01D6B91C LDR X0, [X0 + 0x658]
	0x01D6B920 BL 0x1C16CF4
	0x01D6B924 ADRP X0, 0x238A000
	0x01D6B928 LDR X0, [X0 + 0xA18]
	0x01D6B92C BL 0x1C16CF4
	0x01D6B930 MOVZ W8, 0x1
	0x01D6B934 STRB W8, [X24 + 0x8B0]
	0x01D6B938 LDR X0, [X23]
	0x01D6B93C LDR W8, [X0 + 0xE0]
	0x01D6B940 CBNZ W8, 0x1D6B94C
	0x01D6B944 BL 0x1C16DFC
	0x01D6B948 LDR X0, [X23]
	0x01D6B94C LDR X8, [X0 + 0xB8]
	0x01D6B950 LDR X23, [X8 + 0x10]
	0x01D6B954 CBZ X23, 0x1D6B9DC
	0x01D6B958 ADRP X10, 0x238A000
	0x01D6B95C LDR X8, [X23]
	0x01D6B960 LDR X10, [X10 + 0xA18]
	0x01D6B964 LDRH W9, [X8 + 0x12E]
	0x01D6B968 LDR X1, [X10]
	0x01D6B96C CBZ X9, 0x1D6B990
	0x01D6B970 LDR X10, [X8 + 0xB0]
	0x01D6B974 ADD X10, X10, 0x8
	0x01D6B978 LDUR X11, [X10 - 0x8]
	0x01D6B97C CMP X11, X1
	0x01D6B980 B.EQ 0x1D6B9A0
	0x01D6B984 SUBS X9, X9, 0x1
	0x01D6B988 ADD X10, X10, 0x10
	0x01D6B98C B.NE 0x1D6B978
	0x01D6B990 MOVZ W2, 0x1F
	0x01D6B994 MOV X0, X23
	0x01D6B998 BL 0x1C5C788
	0x01D6B99C B 0x1D6B9B0
	0x01D6B9A0 LDR W9, [X10]
	0x01D6B9A4 ADD W9, W9, 0x1F
	0x01D6B9A8 ADD X8, X8, W9, 0x4, SXTW
	0x01D6B9AC ADD X0, X8, 0x138
	0x01D6B9B0 LDP X6, X5, [X0]
	0x01D6B9B4 MOV X0, X23
	0x01D6B9B8 MOV X1, X22
	0x01D6B9BC MOV X2, X21
	0x01D6B9C0 MOV X3, X20
	0x01D6B9C4 MOV X4, X19
	0x01D6B9C8 LDP X20, X19, [X31 + 0x30]
	0x01D6B9CC LDP X22, X21, [X31 + 0x20]
	0x01D6B9D0 LDP X24, X23, [X31 + 0x10]
	0x01D6B9D4 LDR X30, [X31], #0x40
	0x01D6B9D8 BR X6
	0x01D6B9DC BL 0x1C16F20
	0x01D6B9E0 STR X30, [X31 - 0x40]!
	0x01D6B9E4 STP X24, X23, [X31 + 0x10]
	0x01D6B9E8 STP X22, X21, [X31 + 0x20]
	0x01D6B9EC STP X20, X19, [X31 + 0x30]
	0x01D6B9F0 ADRP X24, 0x266D000
	0x01D6B9F4 ADRP X23, 0x2388000
	0x01D6B9F8 LDRB W8, [X24 + 0x8B1]
	0x01D6B9FC LDR X23, [X23 + 0x658]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x266E000
	011 Move X25, 0x2389000
	012 Move W8, [X26+2209]
	013 Move X25, [X25+1624]
	014 Move X19, X6
	015 Move X20, X5
	016 Move X21, X4
	017 Move W24, W3
	018 Move X22, X2
	019 Move X23, X1
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x2389000
	025 Move X0, [X0+1624]
	026 Call 0x1C17CF4
	027 Move X0, 0x238B000
	028 Move X0, [X0+2584]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X26+2209], W8
	032 Move X0, [X25]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X25]
	038 Move X8, [X0+184]
	039 Move X25, [X8+16]
	040 Compare X25, 0
	041 JumpIfEqual {81}
	042 Move X10, 0x238B000
	043 Move X8, [X25]
	044 Move X10, [X10+2584]
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Move X1, [X10]
	047 Compare X9, 0
	048 JumpIfEqual {55}
	049 Move X10, [X8+176]
	050 Add X10, X10, 8
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Subtract X9, X9, 1
	054 Add X10, X10, 16
	055 Move W2, 16
	056 Move X0, X25
	057 Call 0x1C5D788
	058 Move W9, [X10]
	059 Add W9, W9, 16
	060 Add X8, X8, W9
	061 Add X0, X8, 312
	062 Move X8, [X0]
	063 Move X7, [X0+8]
	064 And W3, W24, 1
	065 Move X0, X25
	066 Move X1, X23
	067 Move X2, X22
	068 Move X4, X21
	069 Move X5, X20
	070 Move X6, X19
	071 Move X20, [X31+64]
	072 Move X19, [X31+72]
	073 Move X22, [X31+48]
	074 Move X21, [X31+56]
	075 Move X24, [X31+32]
	076 Move X23, [X31+40]
	077 Move X26, [X31+16]
	078 Move X25, [X31+24]
	079 Move X30, [X31+80]
	080 CallNoReturn X8
	081 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.ISession> AuthenticateDeviceAsync(System.String id, System.String username = null, System.Boolean create = True, System.Collections.Generic.Dictionary`2<System.String, System.String> vars = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6BA00 MOV X19, X4
	0x01D6BA04 MOV X20, X3
	0x01D6BA08 MOV X21, X2
	0x01D6BA0C MOV X22, X1
	0x01D6BA10 TBNZ X8, 0x0, 0x1D6BA34
	0x01D6BA14 ADRP X0, 0x2388000
	0x01D6BA18 LDR X0, [X0 + 0x658]
	0x01D6BA1C BL 0x1C16CF4
	0x01D6BA20 ADRP X0, 0x238A000
	0x01D6BA24 LDR X0, [X0 + 0xA18]
	0x01D6BA28 BL 0x1C16CF4
	0x01D6BA2C MOVZ W8, 0x1
	0x01D6BA30 STRB W8, [X24 + 0x8B1]
	0x01D6BA34 LDR X0, [X23]
	0x01D6BA38 LDR W8, [X0 + 0xE0]
	0x01D6BA3C CBNZ W8, 0x1D6BA48
	0x01D6BA40 BL 0x1C16DFC
	0x01D6BA44 LDR X0, [X23]
	0x01D6BA48 LDR X8, [X0 + 0xB8]
	0x01D6BA4C LDR X23, [X8 + 0x10]
	0x01D6BA50 CBZ X23, 0x1D6BAD8
	0x01D6BA54 ADRP X10, 0x238A000
	0x01D6BA58 LDR X8, [X23]
	0x01D6BA5C LDR X10, [X10 + 0xA18]
	0x01D6BA60 LDRH W9, [X8 + 0x12E]
	0x01D6BA64 LDR X1, [X10]
	0x01D6BA68 CBZ X9, 0x1D6BA8C
	0x01D6BA6C LDR X10, [X8 + 0xB0]
	0x01D6BA70 ADD X10, X10, 0x8
	0x01D6BA74 LDUR X11, [X10 - 0x8]
	0x01D6BA78 CMP X11, X1
	0x01D6BA7C B.EQ 0x1D6BA9C
	0x01D6BA80 SUBS X9, X9, 0x1
	0x01D6BA84 ADD X10, X10, 0x10
	0x01D6BA88 B.NE 0x1D6BA74
	0x01D6BA8C MOVZ W2, 0x20
	0x01D6BA90 MOV X0, X23
	0x01D6BA94 BL 0x1C5C788
	0x01D6BA98 B 0x1D6BAAC
	0x01D6BA9C LDR W9, [X10]
	0x01D6BAA0 ADD W9, W9, 0x20
	0x01D6BAA4 ADD X8, X8, W9, 0x4, SXTW
	0x01D6BAA8 ADD X0, X8, 0x138
	0x01D6BAAC LDP X6, X5, [X0]
	0x01D6BAB0 MOV X0, X23
	0x01D6BAB4 MOV X1, X22
	0x01D6BAB8 MOV X2, X21
	0x01D6BABC MOV X3, X20
	0x01D6BAC0 MOV X4, X19
	0x01D6BAC4 LDP X20, X19, [X31 + 0x30]
	0x01D6BAC8 LDP X22, X21, [X31 + 0x20]
	0x01D6BACC LDP X24, X23, [X31 + 0x10]
	0x01D6BAD0 LDR X30, [X31], #0x40
	0x01D6BAD4 BR X6
	0x01D6BAD8 BL 0x1C16F20
	0x01D6BADC STP X30, X25, [X31 - 0x40]!
	0x01D6BAE0 STP X24, X23, [X31 + 0x10]
	0x01D6BAE4 STP X22, X21, [X31 + 0x20]
	0x01D6BAE8 STP X20, X19, [X31 + 0x30]
	0x01D6BAEC ADRP X25, 0x266D000
	0x01D6BAF0 ADRP X24, 0x2388000
	0x01D6BAF4 LDRB W8, [X25 + 0x8B2]
	0x01D6BAF8 LDR X24, [X24 + 0x658]
	0x01D6BAFC MOV X19, X5
	0x01D6BB00 MOV X20, X4
	0x01D6BB04 MOV X21, X3
	0x01D6BB08 MOV X22, X2
	0x01D6BB0C MOV X23, X1
	0x01D6BB10 TBNZ X8, 0x0, 0x1D6BB34

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x266E000
	011 Move X25, 0x2389000
	012 Move W8, [X26+2210]
	013 Move X25, [X25+1624]
	014 Move X19, X6
	015 Move X20, X5
	016 Move X21, X4
	017 Move W24, W3
	018 Move X22, X2
	019 Move X23, X1
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x2389000
	025 Move X0, [X0+1624]
	026 Call 0x1C17CF4
	027 Move X0, 0x238B000
	028 Move X0, [X0+2584]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X26+2210], W8
	032 Move X0, [X25]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X25]
	038 Move X8, [X0+184]
	039 Move X25, [X8+16]
	040 Compare X25, 0
	041 JumpIfEqual {81}
	042 Move X10, 0x238B000
	043 Move X8, [X25]
	044 Move X10, [X10+2584]
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Move X1, [X10]
	047 Compare X9, 0
	048 JumpIfEqual {55}
	049 Move X10, [X8+176]
	050 Add X10, X10, 8
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Subtract X9, X9, 1
	054 Add X10, X10, 16
	055 Move W2, 17
	056 Move X0, X25
	057 Call 0x1C5D788
	058 Move W9, [X10]
	059 Add W9, W9, 17
	060 Add X8, X8, W9
	061 Add X0, X8, 312
	062 Move X8, [X0]
	063 Move X7, [X0+8]
	064 And W3, W24, 1
	065 Move X0, X25
	066 Move X1, X23
	067 Move X2, X22
	068 Move X4, X21
	069 Move X5, X20
	070 Move X6, X19
	071 Move X20, [X31+64]
	072 Move X19, [X31+72]
	073 Move X22, [X31+48]
	074 Move X21, [X31+56]
	075 Move X24, [X31+32]
	076 Move X23, [X31+40]
	077 Move X26, [X31+16]
	078 Move X25, [X31+24]
	079 Move X30, [X31+80]
	080 CallNoReturn X8
	081 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.ISession> AuthenticateEmailAsync(System.String email, System.String password, System.String username = null, System.Boolean create = True, System.Collections.Generic.Dictionary`2<System.String, System.String> vars = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6BB14 ADRP X0, 0x2388000
	0x01D6BB18 LDR X0, [X0 + 0x658]
	0x01D6BB1C BL 0x1C16CF4
	0x01D6BB20 ADRP X0, 0x238A000
	0x01D6BB24 LDR X0, [X0 + 0xA18]
	0x01D6BB28 BL 0x1C16CF4
	0x01D6BB2C MOVZ W8, 0x1
	0x01D6BB30 STRB W8, [X25 + 0x8B2]
	0x01D6BB34 LDR X0, [X24]
	0x01D6BB38 LDR W8, [X0 + 0xE0]
	0x01D6BB3C CBNZ W8, 0x1D6BB48
	0x01D6BB40 BL 0x1C16DFC
	0x01D6BB44 LDR X0, [X24]
	0x01D6BB48 LDR X8, [X0 + 0xB8]
	0x01D6BB4C LDR X24, [X8 + 0x10]
	0x01D6BB50 CBZ X24, 0x1D6BBDC
	0x01D6BB54 ADRP X10, 0x238A000
	0x01D6BB58 LDR X8, [X24]
	0x01D6BB5C LDR X10, [X10 + 0xA18]
	0x01D6BB60 LDRH W9, [X8 + 0x12E]
	0x01D6BB64 LDR X1, [X10]
	0x01D6BB68 CBZ X9, 0x1D6BB8C
	0x01D6BB6C LDR X10, [X8 + 0xB0]
	0x01D6BB70 ADD X10, X10, 0x8
	0x01D6BB74 LDUR X11, [X10 - 0x8]
	0x01D6BB78 CMP X11, X1
	0x01D6BB7C B.EQ 0x1D6BB9C
	0x01D6BB80 SUBS X9, X9, 0x1
	0x01D6BB84 ADD X10, X10, 0x10
	0x01D6BB88 B.NE 0x1D6BB74
	0x01D6BB8C MOVZ W2, 0x21
	0x01D6BB90 MOV X0, X24
	0x01D6BB94 BL 0x1C5C788
	0x01D6BB98 B 0x1D6BBAC
	0x01D6BB9C LDR W9, [X10]
	0x01D6BBA0 ADD W9, W9, 0x21
	0x01D6BBA4 ADD X8, X8, W9, 0x4, SXTW
	0x01D6BBA8 ADD X0, X8, 0x138
	0x01D6BBAC LDP X7, X6, [X0]
	0x01D6BBB0 MOV X0, X24
	0x01D6BBB4 MOV X1, X23
	0x01D6BBB8 MOV X2, X22
	0x01D6BBBC MOV X3, X21
	0x01D6BBC0 MOV X4, X20
	0x01D6BBC4 MOV X5, X19
	0x01D6BBC8 LDP X20, X19, [X31 + 0x30]
	0x01D6BBCC LDP X22, X21, [X31 + 0x20]
	0x01D6BBD0 LDP X24, X23, [X31 + 0x10]
	0x01D6BBD4 LDP X30, X25, [X31], #0x40
	0x01D6BBD8 BR X7
	0x01D6BBDC BL 0x1C16F20
	0x01D6BBE0 STP X30, X25, [X31 - 0x40]!
	0x01D6BBE4 STP X24, X23, [X31 + 0x10]
	0x01D6BBE8 STP X22, X21, [X31 + 0x20]
	0x01D6BBEC STP X20, X19, [X31 + 0x30]
	0x01D6BBF0 ADRP X25, 0x266D000
	0x01D6BBF4 ADRP X24, 0x2388000
	0x01D6BBF8 LDRB W8, [X25 + 0x8B3]
	0x01D6BBFC LDR X24, [X24 + 0x658]
	0x01D6BC00 MOV X19, X5
	0x01D6BC04 MOV X20, X4
	0x01D6BC08 MOV X21, X3
	0x01D6BC0C MOV X22, X2
	0x01D6BC10 MOV X23, X1
	0x01D6BC14 TBNZ X8, 0x0, 0x1D6BC38
	0x01D6BC18 ADRP X0, 0x2388000
	0x01D6BC1C LDR X0, [X0 + 0x658]
	0x01D6BC20 BL 0x1C16CF4
	0x01D6BC24 ADRP X0, 0x238A000
	0x01D6BC28 LDR X0, [X0 + 0xA18]
	0x01D6BC2C BL 0x1C16CF4
	0x01D6BC30 MOVZ W8, 0x1

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x266E000
	012 Move X26, 0x2389000
	013 Move W8, [X27+2211]
	014 Move X26, [X26+1624]
	015 Move X19, X7
	016 Move X20, X6
	017 Move X21, X5
	018 Move W24, W4
	019 Move X22, X3
	020 Move X23, X2
	021 Move X25, X1
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {34}
	026 Move X0, 0x2389000
	027 Move X0, [X0+1624]
	028 Call 0x1C17CF4
	029 Move X0, 0x238B000
	030 Move X0, [X0+2584]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X27+2211], W8
	034 Move X0, [X26]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X26]
	040 Move X8, [X0+184]
	041 Move X26, [X8+16]
	042 Compare X26, 0
	043 JumpIfEqual {86}
	044 Move X10, 0x238B000
	045 Move X8, [X26]
	046 Move X10, [X10+2584]
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Move X1, [X10]
	049 Compare X9, 0
	050 JumpIfEqual {57}
	051 Move X10, [X8+176]
	052 Add X10, X10, 8
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract X9, X9, 1
	056 Add X10, X10, 16
	057 Move W2, 18
	058 Move X0, X26
	059 Call 0x1C5D788
	060 Move W9, [X10]
	061 Add W9, W9, 18
	062 Add X8, X8, W9
	063 Add X0, X8, 312
	064 Move X8, [X0]
	065 Move X9, [X0+8]
	066 And W4, W24, 1
	067 Move X0, X26
	068 Move X1, X25
	069 Move X2, X23
	070 Move X3, X22
	071 Move X5, X21
	072 Move X6, X20
	073 Move X7, X19
	074 Move X20, [X31+64]
	075 Move X19, [X31+72]
	076 Move X22, [X31+48]
	077 Move X21, [X31+56]
	078 Move X24, [X31+32]
	079 Move X23, [X31+40]
	080 Move X26, [X31+16]
	081 Move X25, [X31+24]
	082 Move [X31+80], X9
	083 Move X30, [X31+80]
	084 Move X27, [X31+88]
	085 CallNoReturn X8
	086 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.ISession> AuthenticateFacebookAsync(System.String token, System.String username = null, System.Boolean create = True, System.Boolean import = True, System.Collections.Generic.Dictionary`2<System.String, System.String> vars = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6BC34 STRB W8, [X25 + 0x8B3]
	0x01D6BC38 LDR X0, [X24]
	0x01D6BC3C LDR W8, [X0 + 0xE0]
	0x01D6BC40 CBNZ W8, 0x1D6BC4C
	0x01D6BC44 BL 0x1C16DFC
	0x01D6BC48 LDR X0, [X24]
	0x01D6BC4C LDR X8, [X0 + 0xB8]
	0x01D6BC50 LDR X24, [X8 + 0x10]
	0x01D6BC54 CBZ X24, 0x1D6BCE0
	0x01D6BC58 ADRP X10, 0x238A000
	0x01D6BC5C LDR X8, [X24]
	0x01D6BC60 LDR X10, [X10 + 0xA18]
	0x01D6BC64 LDRH W9, [X8 + 0x12E]
	0x01D6BC68 LDR X1, [X10]
	0x01D6BC6C CBZ X9, 0x1D6BC90
	0x01D6BC70 LDR X10, [X8 + 0xB0]
	0x01D6BC74 ADD X10, X10, 0x8
	0x01D6BC78 LDUR X11, [X10 - 0x8]
	0x01D6BC7C CMP X11, X1
	0x01D6BC80 B.EQ 0x1D6BCA0
	0x01D6BC84 SUBS X9, X9, 0x1
	0x01D6BC88 ADD X10, X10, 0x10
	0x01D6BC8C B.NE 0x1D6BC78
	0x01D6BC90 MOVZ W2, 0x22
	0x01D6BC94 MOV X0, X24
	0x01D6BC98 BL 0x1C5C788
	0x01D6BC9C B 0x1D6BCB0
	0x01D6BCA0 LDR W9, [X10]
	0x01D6BCA4 ADD W9, W9, 0x22
	0x01D6BCA8 ADD X8, X8, W9, 0x4, SXTW
	0x01D6BCAC ADD X0, X8, 0x138
	0x01D6BCB0 LDP X7, X6, [X0]
	0x01D6BCB4 MOV X0, X24
	0x01D6BCB8 MOV X1, X23
	0x01D6BCBC MOV X2, X22
	0x01D6BCC0 MOV X3, X21
	0x01D6BCC4 MOV X4, X20
	0x01D6BCC8 MOV X5, X19
	0x01D6BCCC LDP X20, X19, [X31 + 0x30]
	0x01D6BCD0 LDP X22, X21, [X31 + 0x20]
	0x01D6BCD4 LDP X24, X23, [X31 + 0x10]
	0x01D6BCD8 LDP X30, X25, [X31], #0x40
	0x01D6BCDC BR X7
	0x01D6BCE0 BL 0x1C16F20
	0x01D6BCE4 STP X30, X23, [X31 - 0x30]!
	0x01D6BCE8 STP X22, X21, [X31 + 0x10]
	0x01D6BCEC STP X20, X19, [X31 + 0x20]
	0x01D6BCF0 ADRP X23, 0x266D000
	0x01D6BCF4 ADRP X22, 0x2388000
	0x01D6BCF8 LDRB W8, [X23 + 0x8B4]
	0x01D6BCFC LDR X22, [X22 + 0x658]
	0x01D6BD00 MOV X19, X3
	0x01D6BD04 MOV X20, X2
	0x01D6BD08 MOV X21, X1
	0x01D6BD0C TBNZ X8, 0x0, 0x1D6BD30
	0x01D6BD10 ADRP X0, 0x2388000
	0x01D6BD14 LDR X0, [X0 + 0x658]
	0x01D6BD18 BL 0x1C16CF4
	0x01D6BD1C ADRP X0, 0x238A000
	0x01D6BD20 LDR X0, [X0 + 0xA18]
	0x01D6BD24 BL 0x1C16CF4
	0x01D6BD28 MOVZ W8, 0x1
	0x01D6BD2C STRB W8, [X23 + 0x8B4]
	0x01D6BD30 LDR X0, [X22]
	0x01D6BD34 LDR W8, [X0 + 0xE0]
	0x01D6BD38 CBNZ W8, 0x1D6BD44
	0x01D6BD3C BL 0x1C16DFC
	0x01D6BD40 LDR X0, [X22]
	0x01D6BD44 LDR X8, [X0 + 0xB8]
	0x01D6BD48 LDR X22, [X8 + 0x10]
	0x01D6BD4C CBZ X22, 0x1D6BDCC
	0x01D6BD50 ADRP X10, 0x238A000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x266E000
	012 Move X26, 0x2389000
	013 Move W8, [X27+2212]
	014 Move X26, [X26+1624]
	015 Move X19, X7
	016 Move X20, X6
	017 Move X21, X5
	018 Move W23, W4
	019 Move W25, W3
	020 Move X22, X2
	021 Move X24, X1
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {34}
	026 Move X0, 0x2389000
	027 Move X0, [X0+1624]
	028 Call 0x1C17CF4
	029 Move X0, 0x238B000
	030 Move X0, [X0+2584]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X27+2212], W8
	034 Move X0, [X26]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X26]
	040 Move X8, [X0+184]
	041 Move X26, [X8+16]
	042 Compare X26, 0
	043 JumpIfEqual {86}
	044 Move X10, 0x238B000
	045 Move X8, [X26]
	046 Move X10, [X10+2584]
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Move X1, [X10]
	049 Compare X9, 0
	050 JumpIfEqual {57}
	051 Move X10, [X8+176]
	052 Add X10, X10, 8
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract X9, X9, 1
	056 Add X10, X10, 16
	057 Move W2, 19
	058 Move X0, X26
	059 Call 0x1C5D788
	060 Move W9, [X10]
	061 Add W9, W9, 19
	062 Add X8, X8, W9
	063 Add X0, X8, 312
	064 Move X8, [X0]
	065 Move X9, [X0+8]
	066 And W3, W25, 1
	067 And W4, W23, 1
	068 Move X0, X26
	069 Move X1, X24
	070 Move X2, X22
	071 Move X5, X21
	072 Move X6, X20
	073 Move X7, X19
	074 Move X20, [X31+64]
	075 Move X19, [X31+72]
	076 Move X22, [X31+48]
	077 Move X21, [X31+56]
	078 Move X24, [X31+32]
	079 Move X23, [X31+40]
	080 Move X26, [X31+16]
	081 Move X25, [X31+24]
	082 Move [X31+80], X9
	083 Move X30, [X31+80]
	084 Move X27, [X31+88]
	085 CallNoReturn X8
	086 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.ISession> AuthenticateGameCenterAsync(System.String bundleId, System.String playerId, System.String publicKeyUrl, System.String salt, System.String signature, System.String timestamp, System.String username = null, System.Boolean create = True, System.Collections.Generic.Dictionary`2<System.String, System.String> vars = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6BD54 LDR X8, [X22]
	0x01D6BD58 LDR X10, [X10 + 0xA18]
	0x01D6BD5C LDRH W9, [X8 + 0x12E]
	0x01D6BD60 LDR X1, [X10]
	0x01D6BD64 CBZ X9, 0x1D6BD88
	0x01D6BD68 LDR X10, [X8 + 0xB0]
	0x01D6BD6C ADD X10, X10, 0x8
	0x01D6BD70 LDUR X11, [X10 - 0x8]
	0x01D6BD74 CMP X11, X1
	0x01D6BD78 B.EQ 0x1D6BD98
	0x01D6BD7C SUBS X9, X9, 0x1
	0x01D6BD80 ADD X10, X10, 0x10
	0x01D6BD84 B.NE 0x1D6BD70
	0x01D6BD88 MOVZ W2, 0x23
	0x01D6BD8C MOV X0, X22
	0x01D6BD90 BL 0x1C5C788
	0x01D6BD94 B 0x1D6BDA8
	0x01D6BD98 LDR W9, [X10]
	0x01D6BD9C ADD W9, W9, 0x23
	0x01D6BDA0 ADD X8, X8, W9, 0x4, SXTW
	0x01D6BDA4 ADD X0, X8, 0x138
	0x01D6BDA8 LDP X5, X4, [X0]
	0x01D6BDAC MOV X0, X22
	0x01D6BDB0 MOV X1, X21
	0x01D6BDB4 MOV X2, X20
	0x01D6BDB8 MOV X3, X19
	0x01D6BDBC LDP X20, X19, [X31 + 0x20]
	0x01D6BDC0 LDP X22, X21, [X31 + 0x10]
	0x01D6BDC4 LDP X30, X23, [X31], #0x30
	0x01D6BDC8 BR X5
	0x01D6BDCC BL 0x1C16F20
	0x01D6BDD0 STR X30, [X31 - 0x40]!
	0x01D6BDD4 STP X24, X23, [X31 + 0x10]
	0x01D6BDD8 STP X22, X21, [X31 + 0x20]
	0x01D6BDDC STP X20, X19, [X31 + 0x30]
	0x01D6BDE0 ADRP X24, 0x266D000
	0x01D6BDE4 ADRP X23, 0x2388000
	0x01D6BDE8 LDRB W8, [X24 + 0x8B5]
	0x01D6BDEC LDR X23, [X23 + 0x658]
	0x01D6BDF0 MOV X19, X4
	0x01D6BDF4 MOV X20, X3
	0x01D6BDF8 MOV X21, X2
	0x01D6BDFC MOV X22, X1
	0x01D6BE00 TBNZ X8, 0x0, 0x1D6BE24
	0x01D6BE04 ADRP X0, 0x2388000
	0x01D6BE08 LDR X0, [X0 + 0x658]
	0x01D6BE0C BL 0x1C16CF4
	0x01D6BE10 ADRP X0, 0x238A000
	0x01D6BE14 LDR X0, [X0 + 0xA18]
	0x01D6BE18 BL 0x1C16CF4
	0x01D6BE1C MOVZ W8, 0x1
	0x01D6BE20 STRB W8, [X24 + 0x8B5]
	0x01D6BE24 LDR X0, [X23]
	0x01D6BE28 LDR W8, [X0 + 0xE0]
	0x01D6BE2C CBNZ W8, 0x1D6BE38
	0x01D6BE30 BL 0x1C16DFC
	0x01D6BE34 LDR X0, [X23]
	0x01D6BE38 LDR X8, [X0 + 0xB8]
	0x01D6BE3C LDR X23, [X8 + 0x10]
	0x01D6BE40 CBZ X23, 0x1D6BEC8
	0x01D6BE44 ADRP X10, 0x238A000
	0x01D6BE48 LDR X8, [X23]
	0x01D6BE4C LDR X10, [X10 + 0xA18]
	0x01D6BE50 LDRH W9, [X8 + 0x12E]
	0x01D6BE54 LDR X1, [X10]
	0x01D6BE58 CBZ X9, 0x1D6BE7C
	0x01D6BE5C LDR X10, [X8 + 0xB0]
	0x01D6BE60 ADD X10, X10, 0x8
	0x01D6BE64 LDUR X11, [X10 - 0x8]
	0x01D6BE68 CMP X11, X1
	0x01D6BE6C B.EQ 0x1D6BE8C
	0x01D6BE70 SUBS X9, X9, 0x1
	0x01D6BE74 ADD X10, X10, 0x10
	0x01D6BE78 B.NE 0x1D6BE64
	0x01D6BE7C MOVZ W2, 0x24
	0x01D6BE80 MOV X0, X23
	0x01D6BE84 BL 0x1C5C788
	0x01D6BE88 B 0x1D6BE9C
	0x01D6BE8C LDR W9, [X10]
	0x01D6BE90 ADD W9, W9, 0x24

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move [X31], X6
	015 Move [X31+8], X7
	016 Move X20, 0x266E000
	017 Move X26, 0x2389000
	018 Move X28, [X31+128]
	019 Move X27, [X31+136]
	020 Move X29, [X31+120]
	021 Move W8, [X20+2213]
	022 Move W19, [X31+112]
	023 Move X26, [X26+1624]
	024 Move X21, X5
	025 Move X22, X4
	026 Move X23, X3
	027 Move X24, X2
	028 Move X25, X1
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {41}
	033 Move X0, 0x2389000
	034 Move X0, [X0+1624]
	035 Call 0x1C17CF4
	036 Move X0, 0x238B000
	037 Move X0, [X0+2584]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X20+2213], W8
	041 Move X0, [X26]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X26]
	047 Move X8, [X0+184]
	048 Move X26, [X8+16]
	049 Compare X26, 0
	050 JumpIfEqual {101}
	051 Move X10, 0x238B000
	052 Move X8, [X26]
	053 Move X10, [X10+2584]
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Move X1, [X10]
	056 Compare X9, 0
	057 JumpIfEqual {64}
	058 Move X10, [X8+176]
	059 Add X10, X10, 8
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Subtract X9, X9, 1
	063 Add X10, X10, 16
	064 Move W2, 20
	065 Move X0, X26
	066 Call 0x1C5D788
	067 Move W9, [X10]
	068 Add W9, W9, 20
	069 Add X8, X8, W9
	070 Add X0, X8, 312
	071 Move X9, [X0]
	072 Move X8, [X0+8]
	073 And W10, W19, 1
	074 Move [X31+120], X29
	075 Move [X31+128], X28
	076 Move X0, X26
	077 Move [X31+136], X27
	078 Move [X31+144], X8
	079 Move X1, X25
	080 Move X2, X24
	081 Move X3, X23
	082 Move X4, X22
	083 Move X5, X21
	084 Move X6, [X31]
	085 Move X7, [X31+8]
	086 Move X20, [X31+96]
	087 Move X19, [X31+104]
	088 Move X22, [X31+80]
	089 Move X21, [X31+88]
	090 Move X24, [X31+64]
	091 Move X23, [X31+72]
	092 Move X26, [X31+48]
	093 Move X25, [X31+56]
	094 Move X28, [X31+32]
	095 Move X27, [X31+40]
	096 Move X29, [X31+16]
	097 Move X30, [X31+24]
	098 Move [X31+112], W10
	099 Add X31, X31, 112
	100 CallNoReturn X9
	101 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.ISession> AuthenticateGoogleAsync(System.String token, System.String username = null, System.Boolean create = True, System.Collections.Generic.Dictionary`2<System.String, System.String> vars = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6BE94 ADD X8, X8, W9, 0x4, SXTW
	0x01D6BE98 ADD X0, X8, 0x138
	0x01D6BE9C LDP X6, X5, [X0]
	0x01D6BEA0 MOV X0, X23
	0x01D6BEA4 MOV X1, X22
	0x01D6BEA8 MOV X2, X21
	0x01D6BEAC MOV X3, X20
	0x01D6BEB0 MOV X4, X19
	0x01D6BEB4 LDP X20, X19, [X31 + 0x30]
	0x01D6BEB8 LDP X22, X21, [X31 + 0x20]
	0x01D6BEBC LDP X24, X23, [X31 + 0x10]
	0x01D6BEC0 LDR X30, [X31], #0x40
	0x01D6BEC4 BR X6
	0x01D6BEC8 BL 0x1C16F20
	0x01D6BECC STR X30, [X31 - 0x50]!
	0x01D6BED0 STP X26, X25, [X31 + 0x10]
	0x01D6BED4 STP X24, X23, [X31 + 0x20]
	0x01D6BED8 STP X22, X21, [X31 + 0x30]
	0x01D6BEDC STP X20, X19, [X31 + 0x40]
	0x01D6BEE0 ADRP X26, 0x266D000
	0x01D6BEE4 ADRP X25, 0x2388000
	0x01D6BEE8 LDRB W8, [X26 + 0x8B6]
	0x01D6BEEC LDR X25, [X25 + 0x658]
	0x01D6BEF0 MOV X19, X6
	0x01D6BEF4 MOV X20, X5
	0x01D6BEF8 MOV X21, X4
	0x01D6BEFC MOV X22, X3
	0x01D6BF00 MOV X23, X2
	0x01D6BF04 MOV X24, X1
	0x01D6BF08 TBNZ X8, 0x0, 0x1D6BF2C
	0x01D6BF0C ADRP X0, 0x2388000
	0x01D6BF10 LDR X0, [X0 + 0x658]
	0x01D6BF14 BL 0x1C16CF4
	0x01D6BF18 ADRP X0, 0x238A000
	0x01D6BF1C LDR X0, [X0 + 0xA18]
	0x01D6BF20 BL 0x1C16CF4
	0x01D6BF24 MOVZ W8, 0x1
	0x01D6BF28 STRB W8, [X26 + 0x8B6]
	0x01D6BF2C LDR X0, [X25]
	0x01D6BF30 LDR W8, [X0 + 0xE0]
	0x01D6BF34 CBNZ W8, 0x1D6BF40
	0x01D6BF38 BL 0x1C16DFC
	0x01D6BF3C LDR X0, [X25]
	0x01D6BF40 LDR X8, [X0 + 0xB8]
	0x01D6BF44 LDR X25, [X8 + 0x10]
	0x01D6BF48 CBZ X25, 0x1D6BFDC
	0x01D6BF4C ADRP X10, 0x238A000
	0x01D6BF50 LDR X8, [X25]
	0x01D6BF54 LDR X10, [X10 + 0xA18]
	0x01D6BF58 LDRH W9, [X8 + 0x12E]
	0x01D6BF5C LDR X1, [X10]
	0x01D6BF60 CBZ X9, 0x1D6BF84
	0x01D6BF64 LDR X10, [X8 + 0xB0]
	0x01D6BF68 ADD X10, X10, 0x8
	0x01D6BF6C LDUR X11, [X10 - 0x8]
	0x01D6BF70 CMP X11, X1
	0x01D6BF74 B.EQ 0x1D6BF94
	0x01D6BF78 SUBS X9, X9, 0x1
	0x01D6BF7C ADD X10, X10, 0x10
	0x01D6BF80 B.NE 0x1D6BF6C
	0x01D6BF84 MOVZ W2, 0x25
	0x01D6BF88 MOV X0, X25
	0x01D6BF8C BL 0x1C5C788
	0x01D6BF90 B 0x1D6BFA4
	0x01D6BF94 LDR W9, [X10]
	0x01D6BF98 ADD W9, W9, 0x25
	0x01D6BF9C ADD X8, X8, W9, 0x4, SXTW
	0x01D6BFA0 ADD X0, X8, 0x138
	0x01D6BFA4 LDP X8, X7, [X0]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x266E000
	011 Move X25, 0x2389000
	012 Move W8, [X26+2214]
	013 Move X25, [X25+1624]
	014 Move X19, X6
	015 Move X20, X5
	016 Move X21, X4
	017 Move W24, W3
	018 Move X22, X2
	019 Move X23, X1
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x2389000
	025 Move X0, [X0+1624]
	026 Call 0x1C17CF4
	027 Move X0, 0x238B000
	028 Move X0, [X0+2584]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X26+2214], W8
	032 Move X0, [X25]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X25]
	038 Move X8, [X0+184]
	039 Move X25, [X8+16]
	040 Compare X25, 0
	041 JumpIfEqual {81}
	042 Move X10, 0x238B000
	043 Move X8, [X25]
	044 Move X10, [X10+2584]
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Move X1, [X10]
	047 Compare X9, 0
	048 JumpIfEqual {55}
	049 Move X10, [X8+176]
	050 Add X10, X10, 8
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Subtract X9, X9, 1
	054 Add X10, X10, 16
	055 Move W2, 21
	056 Move X0, X25
	057 Call 0x1C5D788
	058 Move W9, [X10]
	059 Add W9, W9, 21
	060 Add X8, X8, W9
	061 Add X0, X8, 312
	062 Move X8, [X0]
	063 Move X7, [X0+8]
	064 And W3, W24, 1
	065 Move X0, X25
	066 Move X1, X23
	067 Move X2, X22
	068 Move X4, X21
	069 Move X5, X20
	070 Move X6, X19
	071 Move X20, [X31+64]
	072 Move X19, [X31+72]
	073 Move X22, [X31+48]
	074 Move X21, [X31+56]
	075 Move X24, [X31+32]
	076 Move X23, [X31+40]
	077 Move X26, [X31+16]
	078 Move X25, [X31+24]
	079 Move X30, [X31+80]
	080 CallNoReturn X8
	081 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.ISession> AuthenticateSteamAsync(System.String token, System.String username = null, System.Boolean create = True, System.Boolean import = True, System.Collections.Generic.Dictionary`2<System.String, System.String> vars = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6BFA8 MOV X0, X25
	0x01D6BFAC MOV X1, X24
	0x01D6BFB0 MOV X2, X23
	0x01D6BFB4 MOV X3, X22
	0x01D6BFB8 MOV X4, X21
	0x01D6BFBC MOV X5, X20
	0x01D6BFC0 MOV X6, X19
	0x01D6BFC4 LDP X20, X19, [X31 + 0x40]
	0x01D6BFC8 LDP X22, X21, [X31 + 0x30]
	0x01D6BFCC LDP X24, X23, [X31 + 0x20]
	0x01D6BFD0 LDP X26, X25, [X31 + 0x10]
	0x01D6BFD4 LDR X30, [X31], #0x50
	0x01D6BFD8 BR X8
	0x01D6BFDC BL 0x1C16F20
	0x01D6BFE0 STP X30, X25, [X31 - 0x40]!
	0x01D6BFE4 STP X24, X23, [X31 + 0x10]
	0x01D6BFE8 STP X22, X21, [X31 + 0x20]
	0x01D6BFEC STP X20, X19, [X31 + 0x30]
	0x01D6BFF0 ADRP X25, 0x266D000
	0x01D6BFF4 ADRP X24, 0x2388000
	0x01D6BFF8 LDRB W8, [X25 + 0x8B7]
	0x01D6BFFC LDR X24, [X24 + 0x658]
	0x01D6C000 MOV X19, X5
	0x01D6C004 MOV X20, X4
	0x01D6C008 MOV X22, X3
	0x01D6C00C MOV X21, X2
	0x01D6C010 MOV X23, X1
	0x01D6C014 TBNZ X8, 0x0, 0x1D6C038
	0x01D6C018 ADRP X0, 0x2387000
	0x01D6C01C LDR X0, [X0 + 0x658]
	0x01D6C020 BL 0x1C16CF4
	0x01D6C024 ADRP X0, 0x2389000
	0x01D6C028 LDR X0, [X0 + 0xA18]
	0x01D6C02C BL 0x1C16CF4
	0x01D6C030 MOVZ W8, 0x1
	0x01D6C034 STRB W8, [X25 + 0x8B7]
	0x01D6C038 LDR X0, [X24]
	0x01D6C03C LDR W8, [X0 + 0xE0]
	0x01D6C040 CBNZ W8, 0x1D6C04C
	0x01D6C044 BL 0x1C16DFC
	0x01D6C048 LDR X0, [X24]
	0x01D6C04C LDR X8, [X0 + 0xB8]
	0x01D6C050 LDR X24, [X8 + 0x10]
	0x01D6C054 CBZ X24, 0x1D6C0E0
	0x01D6C058 ADRP X10, 0x2389000
	0x01D6C05C LDR X8, [X24]
	0x01D6C060 LDR X10, [X10 + 0xA18]
	0x01D6C064 LDRH W9, [X8 + 0x12E]
	0x01D6C068 LDR X1, [X10]
	0x01D6C06C CBZ X9, 0x1D6C090
	0x01D6C070 LDR X10, [X8 + 0xB0]
	0x01D6C074 ADD X10, X10, 0x8
	0x01D6C078 LDUR X11, [X10 - 0x8]
	0x01D6C07C CMP X11, X1
	0x01D6C080 B.EQ 0x1D6C0A0
	0x01D6C084 SUBS X9, X9, 0x1
	0x01D6C088 ADD X10, X10, 0x10
	0x01D6C08C B.NE 0x1D6C078
	0x01D6C090 MOVZ W2, 0x26
	0x01D6C094 MOV X0, X24
	0x01D6C098 BL 0x1C5C788
	0x01D6C09C B 0x1D6C0B0
	0x01D6C0A0 LDR W9, [X10]
	0x01D6C0A4 ADD W9, W9, 0x26
	0x01D6C0A8 ADD X8, X8, W9, 0x4, SXTW
	0x01D6C0AC ADD X0, X8, 0x138
	0x01D6C0B0 LDP X7, X6, [X0]
	0x01D6C0B4 AND X3, X22, 0xFFFF
	0x01D6C0B8 MOV X0, X24
	0x01D6C0BC MOV X1, X23
	0x01D6C0C0 MOV X2, X21
	0x01D6C0C4 MOV X4, X20

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x266E000
	012 Move X26, 0x2389000
	013 Move W8, [X27+2215]
	014 Move X26, [X26+1624]
	015 Move X19, X7
	016 Move X20, X6
	017 Move X21, X5
	018 Move W23, W4
	019 Move W25, W3
	020 Move X22, X2
	021 Move X24, X1
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {34}
	026 Move X0, 0x2389000
	027 Move X0, [X0+1624]
	028 Call 0x1C17CF4
	029 Move X0, 0x238B000
	030 Move X0, [X0+2584]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X27+2215], W8
	034 Move X0, [X26]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X26]
	040 Move X8, [X0+184]
	041 Move X26, [X8+16]
	042 Compare X26, 0
	043 JumpIfEqual {86}
	044 Move X10, 0x238A000
	045 Move X8, [X26]
	046 Move X10, [X10+2584]
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Move X1, [X10]
	049 Compare X9, 0
	050 JumpIfEqual {57}
	051 Move X10, [X8+176]
	052 Add X10, X10, 8
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract X9, X9, 1
	056 Add X10, X10, 16
	057 Move W2, 22
	058 Move X0, X26
	059 Call 0x1C5D788
	060 Move W9, [X10]
	061 Add W9, W9, 22
	062 Add X8, X8, W9
	063 Add X0, X8, 312
	064 Move X8, [X0]
	065 Move X9, [X0+8]
	066 And W3, W25, 1
	067 And W4, W23, 1
	068 Move X0, X26
	069 Move X1, X24
	070 Move X2, X22
	071 Move X5, X21
	072 Move X6, X20
	073 Move X7, X19
	074 Move X20, [X31+64]
	075 Move X19, [X31+72]
	076 Move X22, [X31+48]
	077 Move X21, [X31+56]
	078 Move X24, [X31+32]
	079 Move X23, [X31+40]
	080 Move X26, [X31+16]
	081 Move X25, [X31+24]
	082 Move [X31+80], X9
	083 Move X30, [X31+80]
	084 Move X27, [X31+88]
	085 CallNoReturn X8
	086 Call 0x1C17F20

Method: System.Threading.Tasks.Task BanGroupUsersAsync(Nakama.ISession session, System.String groupId, System.Collections.Generic.IEnumerable`1<System.String> ids, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6C0C8 MOV X5, X19
	0x01D6C0CC LDP X20, X19, [X31 + 0x30]
	0x01D6C0D0 LDP X22, X21, [X31 + 0x20]
	0x01D6C0D4 LDP X24, X23, [X31 + 0x10]
	0x01D6C0D8 LDP X30, X25, [X31], #0x40
	0x01D6C0DC BR X7
	0x01D6C0E0 BL 0x1C16F20
	0x01D6C0E4 STP X30, X25, [X31 - 0x40]!
	0x01D6C0E8 STP X24, X23, [X31 + 0x10]
	0x01D6C0EC STP X22, X21, [X31 + 0x20]
	0x01D6C0F0 STP X20, X19, [X31 + 0x30]
	0x01D6C0F4 ADRP X25, 0x266C000
	0x01D6C0F8 ADRP X24, 0x2387000
	0x01D6C0FC LDRB W8, [X25 + 0x8B8]
	0x01D6C100 LDR X24, [X24 + 0x658]
	0x01D6C104 MOV X19, X5
	0x01D6C108 MOV X20, X4
	0x01D6C10C MOV X22, X3
	0x01D6C110 MOV X21, X2
	0x01D6C114 MOV X23, X1
	0x01D6C118 TBNZ X8, 0x0, 0x1D6C13C
	0x01D6C11C ADRP X0, 0x2387000
	0x01D6C120 LDR X0, [X0 + 0x658]
	0x01D6C124 BL 0x1C16CF4
	0x01D6C128 ADRP X0, 0x2389000
	0x01D6C12C LDR X0, [X0 + 0xA18]
	0x01D6C130 BL 0x1C16CF4
	0x01D6C134 MOVZ W8, 0x1
	0x01D6C138 STRB W8, [X25 + 0x8B8]
	0x01D6C13C LDR X0, [X24]
	0x01D6C140 LDR W8, [X0 + 0xE0]
	0x01D6C144 CBNZ W8, 0x1D6C150
	0x01D6C148 BL 0x1C16DFC
	0x01D6C14C LDR X0, [X24]
	0x01D6C150 LDR X8, [X0 + 0xB8]
	0x01D6C154 LDR X24, [X8 + 0x10]
	0x01D6C158 CBZ X24, 0x1D6C1E4
	0x01D6C15C ADRP X10, 0x2389000
	0x01D6C160 LDR X8, [X24]
	0x01D6C164 LDR X10, [X10 + 0xA18]
	0x01D6C168 LDRH W9, [X8 + 0x12E]
	0x01D6C16C LDR X1, [X10]
	0x01D6C170 CBZ X9, 0x1D6C194
	0x01D6C174 LDR X10, [X8 + 0xB0]
	0x01D6C178 ADD X10, X10, 0x8
	0x01D6C17C LDUR X11, [X10 - 0x8]
	0x01D6C180 CMP X11, X1
	0x01D6C184 B.EQ 0x1D6C1A4
	0x01D6C188 SUBS X9, X9, 0x1
	0x01D6C18C ADD X10, X10, 0x10
	0x01D6C190 B.NE 0x1D6C17C
	0x01D6C194 MOVZ W2, 0x27
	0x01D6C198 MOV X0, X24
	0x01D6C19C BL 0x1C5C788
	0x01D6C1A0 B 0x1D6C1B4
	0x01D6C1A4 LDR W9, [X10]
	0x01D6C1A8 ADD W9, W9, 0x27
	0x01D6C1AC ADD X8, X8, W9, 0x4, SXTW
	0x01D6C1B0 ADD X0, X8, 0x138
	0x01D6C1B4 LDP X7, X6, [X0]
	0x01D6C1B8 AND X3, X22, 0xFFFF
	0x01D6C1BC MOV X0, X24
	0x01D6C1C0 MOV X1, X23
	0x01D6C1C4 MOV X2, X21
	0x01D6C1C8 MOV X4, X20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x266D000
	010 Move X24, 0x2388000
	011 Move W8, [X25+2216]
	012 Move X24, [X24+1624]
	013 Move X19, X5
	014 Move X20, X4
	015 Move X21, X3
	016 Move X22, X2
	017 Move X23, X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x2388000
	023 Move X0, [X0+1624]
	024 Call 0x1C17CF4
	025 Move X0, 0x238A000
	026 Move X0, [X0+2584]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+2216], W8
	030 Move X0, [X24]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X24]
	036 Move X8, [X0+184]
	037 Move X24, [X8+16]
	038 Compare X24, 0
	039 JumpIfEqual {77}
	040 Move X10, 0x238A000
	041 Move X8, [X24]
	042 Move X10, [X10+2584]
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move X1, [X10]
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move W2, 23
	054 Move X0, X24
	055 Call 0x1C5D788
	056 Move W9, [X10]
	057 Add W9, W9, 23
	058 Add X8, X8, W9
	059 Add X0, X8, 312
	060 Move X7, [X0]
	061 Move X6, [X0+8]
	062 Move X0, X24
	063 Move X1, X23
	064 Move X2, X22
	065 Move X3, X21
	066 Move X4, X20
	067 Move X5, X19
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X30, [X31+64]
	075 Move X25, [X31+72]
	076 CallNoReturn X7
	077 Call 0x1C17F20

Method: System.Threading.Tasks.Task BlockFriendsAsync(Nakama.ISession session, System.Collections.Generic.IEnumerable`1<System.String> ids, System.Collections.Generic.IEnumerable`1<System.String> usernames = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6C1CC MOV X5, X19
	0x01D6C1D0 LDP X20, X19, [X31 + 0x30]
	0x01D6C1D4 LDP X22, X21, [X31 + 0x20]
	0x01D6C1D8 LDP X24, X23, [X31 + 0x10]
	0x01D6C1DC LDP X30, X25, [X31], #0x40
	0x01D6C1E0 BR X7
	0x01D6C1E4 BL 0x1C16F20
	0x01D6C1E8 STR X30, [X31 - 0x40]!
	0x01D6C1EC STP X24, X23, [X31 + 0x10]
	0x01D6C1F0 STP X22, X21, [X31 + 0x20]
	0x01D6C1F4 STP X20, X19, [X31 + 0x30]
	0x01D6C1F8 ADRP X24, 0x266C000
	0x01D6C1FC ADRP X23, 0x2387000
	0x01D6C200 LDRB W8, [X24 + 0x8B9]
	0x01D6C204 LDR X23, [X23 + 0x658]
	0x01D6C208 MOV X19, X4
	0x01D6C20C MOV X20, X3
	0x01D6C210 MOV X21, X2
	0x01D6C214 MOV X22, X1
	0x01D6C218 TBNZ X8, 0x0, 0x1D6C23C
	0x01D6C21C ADRP X0, 0x2387000
	0x01D6C220 LDR X0, [X0 + 0x658]
	0x01D6C224 BL 0x1C16CF4
	0x01D6C228 ADRP X0, 0x2389000
	0x01D6C22C LDR X0, [X0 + 0xA18]
	0x01D6C230 BL 0x1C16CF4
	0x01D6C234 MOVZ W8, 0x1
	0x01D6C238 STRB W8, [X24 + 0x8B9]
	0x01D6C23C LDR X0, [X23]
	0x01D6C240 LDR W8, [X0 + 0xE0]
	0x01D6C244 CBNZ W8, 0x1D6C250
	0x01D6C248 BL 0x1C16DFC
	0x01D6C24C LDR X0, [X23]
	0x01D6C250 LDR X8, [X0 + 0xB8]
	0x01D6C254 LDR X23, [X8 + 0x10]
	0x01D6C258 CBZ X23, 0x1D6C2E0
	0x01D6C25C ADRP X10, 0x2389000
	0x01D6C260 LDR X8, [X23]
	0x01D6C264 LDR X10, [X10 + 0xA18]
	0x01D6C268 LDRH W9, [X8 + 0x12E]
	0x01D6C26C LDR X1, [X10]
	0x01D6C270 CBZ X9, 0x1D6C294
	0x01D6C274 LDR X10, [X8 + 0xB0]
	0x01D6C278 ADD X10, X10, 0x8
	0x01D6C27C LDUR X11, [X10 - 0x8]
	0x01D6C280 CMP X11, X1
	0x01D6C284 B.EQ 0x1D6C2A4
	0x01D6C288 SUBS X9, X9, 0x1
	0x01D6C28C ADD X10, X10, 0x10
	0x01D6C290 B.NE 0x1D6C27C
	0x01D6C294 MOVZ W2, 0x28
	0x01D6C298 MOV X0, X23
	0x01D6C29C BL 0x1C5C788
	0x01D6C2A0 B 0x1D6C2B4
	0x01D6C2A4 LDR W9, [X10]
	0x01D6C2A8 ADD W9, W9, 0x28
	0x01D6C2AC ADD X8, X8, W9, 0x4, SXTW
	0x01D6C2B0 ADD X0, X8, 0x138
	0x01D6C2B4 LDP X6, X5, [X0]
	0x01D6C2B8 MOV X0, X23
	0x01D6C2BC MOV X1, X22
	0x01D6C2C0 MOV X2, X21
	0x01D6C2C4 MOV X3, X20
	0x01D6C2C8 MOV X4, X19
	0x01D6C2CC LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x266D000
	010 Move X24, 0x2388000
	011 Move W8, [X25+2217]
	012 Move X24, [X24+1624]
	013 Move X19, X5
	014 Move X20, X4
	015 Move X21, X3
	016 Move X22, X2
	017 Move X23, X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x2388000
	023 Move X0, [X0+1624]
	024 Call 0x1C17CF4
	025 Move X0, 0x238A000
	026 Move X0, [X0+2584]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+2217], W8
	030 Move X0, [X24]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X24]
	036 Move X8, [X0+184]
	037 Move X24, [X8+16]
	038 Compare X24, 0
	039 JumpIfEqual {77}
	040 Move X10, 0x238A000
	041 Move X8, [X24]
	042 Move X10, [X10+2584]
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move X1, [X10]
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move W2, 24
	054 Move X0, X24
	055 Call 0x1C5D788
	056 Move W9, [X10]
	057 Add W9, W9, 24
	058 Add X8, X8, W9
	059 Add X0, X8, 312
	060 Move X7, [X0]
	061 Move X6, [X0+8]
	062 Move X0, X24
	063 Move X1, X23
	064 Move X2, X22
	065 Move X3, X21
	066 Move X4, X20
	067 Move X5, X19
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X30, [X31+64]
	075 Move X25, [X31+72]
	076 CallNoReturn X7
	077 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiGroup> CreateGroupAsync(Nakama.ISession session, System.String name, System.String description = , System.String avatarUrl = null, System.String langTag = null, System.Boolean open = True, System.Int32 maxCount = 100, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6C2D0 LDP X22, X21, [X31 + 0x20]
	0x01D6C2D4 LDP X24, X23, [X31 + 0x10]
	0x01D6C2D8 LDR X30, [X31], #0x40
	0x01D6C2DC BR X6
	0x01D6C2E0 BL 0x1C16F20
	0x01D6C2E4 STR X30, [X31 - 0x40]!
	0x01D6C2E8 STP X24, X23, [X31 + 0x10]
	0x01D6C2EC STP X22, X21, [X31 + 0x20]
	0x01D6C2F0 STP X20, X19, [X31 + 0x30]
	0x01D6C2F4 ADRP X24, 0x266C000
	0x01D6C2F8 ADRP X23, 0x2387000
	0x01D6C2FC LDRB W8, [X24 + 0x8BA]
	0x01D6C300 LDR X23, [X23 + 0x658]
	0x01D6C304 MOV X19, X4
	0x01D6C308 MOV X20, X3
	0x01D6C30C MOV X21, X2
	0x01D6C310 MOV X22, X1
	0x01D6C314 TBNZ X8, 0x0, 0x1D6C338
	0x01D6C318 ADRP X0, 0x2387000
	0x01D6C31C LDR X0, [X0 + 0x658]
	0x01D6C320 BL 0x1C16CF4
	0x01D6C324 ADRP X0, 0x2389000
	0x01D6C328 LDR X0, [X0 + 0xA18]
	0x01D6C32C BL 0x1C16CF4
	0x01D6C330 MOVZ W8, 0x1
	0x01D6C334 STRB W8, [X24 + 0x8BA]
	0x01D6C338 LDR X0, [X23]
	0x01D6C33C LDR W8, [X0 + 0xE0]
	0x01D6C340 CBNZ W8, 0x1D6C34C
	0x01D6C344 BL 0x1C16DFC
	0x01D6C348 LDR X0, [X23]
	0x01D6C34C LDR X8, [X0 + 0xB8]
	0x01D6C350 LDR X23, [X8 + 0x10]
	0x01D6C354 CBZ X23, 0x1D6C3DC
	0x01D6C358 ADRP X10, 0x2389000
	0x01D6C35C LDR X8, [X23]
	0x01D6C360 LDR X10, [X10 + 0xA18]
	0x01D6C364 LDRH W9, [X8 + 0x12E]
	0x01D6C368 LDR X1, [X10]
	0x01D6C36C CBZ X9, 0x1D6C390
	0x01D6C370 LDR X10, [X8 + 0xB0]
	0x01D6C374 ADD X10, X10, 0x8
	0x01D6C378 LDUR X11, [X10 - 0x8]
	0x01D6C37C CMP X11, X1
	0x01D6C380 B.EQ 0x1D6C3A0
	0x01D6C384 SUBS X9, X9, 0x1
	0x01D6C388 ADD X10, X10, 0x10
	0x01D6C38C B.NE 0x1D6C378
	0x01D6C390 MOVZ W2, 0x29
	0x01D6C394 MOV X0, X23
	0x01D6C398 BL 0x1C5C788
	0x01D6C39C B 0x1D6C3B0
	0x01D6C3A0 LDR W9, [X10]
	0x01D6C3A4 ADD W9, W9, 0x29
	0x01D6C3A8 ADD X8, X8, W9, 0x4, SXTW
	0x01D6C3AC ADD X0, X8, 0x138
	0x01D6C3B0 LDP X6, X5, [X0]
	0x01D6C3B4 MOV X0, X23
	0x01D6C3B8 MOV X1, X22
	0x01D6C3BC MOV X2, X21
	0x01D6C3C0 MOV X3, X20
	0x01D6C3C4 MOV X4, X19
	0x01D6C3C8 LDP X20, X19, [X31 + 0x30]
	0x01D6C3CC LDP X22, X21, [X31 + 0x20]
	0x01D6C3D0 LDP X24, X23, [X31 + 0x10]
	0x01D6C3D4 LDR X30, [X31], #0x40
	0x01D6C3D8 BR X6
	0x01D6C3DC BL 0x1C16F20
	0x01D6C3E0 STP X30, X25, [X31 - 0x40]!
	0x01D6C3E4 STP X24, X23, [X31 + 0x10]
	0x01D6C3E8 STP X22, X21, [X31 + 0x20]
	0x01D6C3EC STP X20, X19, [X31 + 0x30]
	0x01D6C3F0 ADRP X25, 0x266C000
	0x01D6C3F4 ADRP X24, 0x2387000
	0x01D6C3F8 LDRB W8, [X25 + 0x8BB]
	0x01D6C3FC LDR X24, [X24 + 0x658]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X29, 0x266D000
	014 Move X26, 0x2388000
	015 Move W8, [X29+2218]
	016 Move X27, [X31+96]
	017 Move X28, [X31+104]
	018 Move X26, [X26+1624]
	019 Move W19, W7
	020 Move W23, W6
	021 Move X20, X5
	022 Move X21, X4
	023 Move X22, X3
	024 Move X24, X2
	025 Move X25, X1
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {38}
	030 Move X0, 0x2388000
	031 Move X0, [X0+1624]
	032 Call 0x1C17CF4
	033 Move X0, 0x238A000
	034 Move X0, [X0+2584]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X29+2218], W8
	038 Move X0, [X26]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X26]
	044 Move X8, [X0+184]
	045 Move X26, [X8+16]
	046 Compare X26, 0
	047 JumpIfEqual {94}
	048 Move X10, 0x238A000
	049 Move X8, [X26]
	050 Move X10, [X10+2584]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X1, [X10]
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move W2, 25
	062 Move X0, X26
	063 Call 0x1C5D788
	064 Move W9, [X10]
	065 Add W9, W9, 25
	066 Add X8, X8, W9
	067 Add X0, X8, 312
	068 Move X9, [X0]
	069 Move X8, [X0+8]
	070 And W6, W23, 1
	071 Move [X31+96], X27
	072 Move X0, X26
	073 Move [X31+104], X28
	074 Move [X31+112], X8
	075 Move X1, X25
	076 Move X2, X24
	077 Move X3, X22
	078 Move X4, X21
	079 Move X5, X20
	080 Move W7, W19
	081 Move X20, [X31+80]
	082 Move X19, [X31+88]
	083 Move X22, [X31+64]
	084 Move X21, [X31+72]
	085 Move X24, [X31+48]
	086 Move X23, [X31+56]
	087 Move X26, [X31+32]
	088 Move X25, [X31+40]
	089 Move X28, [X31+16]
	090 Move X27, [X31+24]
	091 Move X29, [X31+96]
	092 Move X30, [X31+104]
	093 CallNoReturn X9
	094 Call 0x1C17F20

Method: System.Threading.Tasks.Task DeleteAccountAsync(Nakama.ISession session, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6C400 MOV X19, X5
	0x01D6C404 MOV X20, X4
	0x01D6C408 MOV X21, X3
	0x01D6C40C MOV X22, X2
	0x01D6C410 MOV X23, X1
	0x01D6C414 TBNZ X8, 0x0, 0x1D6C438
	0x01D6C418 ADRP X0, 0x2387000
	0x01D6C41C LDR X0, [X0 + 0x658]
	0x01D6C420 BL 0x1C16CF4
	0x01D6C424 ADRP X0, 0x2389000
	0x01D6C428 LDR X0, [X0 + 0xA18]
	0x01D6C42C BL 0x1C16CF4
	0x01D6C430 MOVZ W8, 0x1
	0x01D6C434 STRB W8, [X25 + 0x8BB]
	0x01D6C438 LDR X0, [X24]
	0x01D6C43C LDR W8, [X0 + 0xE0]
	0x01D6C440 CBNZ W8, 0x1D6C44C
	0x01D6C444 BL 0x1C16DFC
	0x01D6C448 LDR X0, [X24]
	0x01D6C44C LDR X8, [X0 + 0xB8]
	0x01D6C450 LDR X24, [X8 + 0x10]
	0x01D6C454 CBZ X24, 0x1D6C4E0
	0x01D6C458 ADRP X10, 0x2389000
	0x01D6C45C LDR X8, [X24]
	0x01D6C460 LDR X10, [X10 + 0xA18]
	0x01D6C464 LDRH W9, [X8 + 0x12E]
	0x01D6C468 LDR X1, [X10]
	0x01D6C46C CBZ X9, 0x1D6C490
	0x01D6C470 LDR X10, [X8 + 0xB0]
	0x01D6C474 ADD X10, X10, 0x8
	0x01D6C478 LDUR X11, [X10 - 0x8]
	0x01D6C47C CMP X11, X1
	0x01D6C480 B.EQ 0x1D6C4A0
	0x01D6C484 SUBS X9, X9, 0x1
	0x01D6C488 ADD X10, X10, 0x10
	0x01D6C48C B.NE 0x1D6C478
	0x01D6C490 MOVZ W2, 0x2A
	0x01D6C494 MOV X0, X24
	0x01D6C498 BL 0x1C5C788
	0x01D6C49C B 0x1D6C4B0
	0x01D6C4A0 LDR W9, [X10]
	0x01D6C4A4 ADD W9, W9, 0x2A
	0x01D6C4A8 ADD X8, X8, W9, 0x4, SXTW
	0x01D6C4AC ADD X0, X8, 0x138
	0x01D6C4B0 LDP X7, X6, [X0]
	0x01D6C4B4 MOV X0, X24
	0x01D6C4B8 MOV X1, X23
	0x01D6C4BC MOV X2, X22
	0x01D6C4C0 MOV X3, X21
	0x01D6C4C4 MOV X4, X20
	0x01D6C4C8 MOV X5, X19
	0x01D6C4CC LDP X20, X19, [X31 + 0x30]
	0x01D6C4D0 LDP X22, X21, [X31 + 0x20]
	0x01D6C4D4 LDP X24, X23, [X31 + 0x10]
	0x01D6C4D8 LDP X30, X25, [X31], #0x40
	0x01D6C4DC BR X7
	0x01D6C4E0 BL 0x1C16F20
	0x01D6C4E4 STR X30, [X31 - 0x40]!
	0x01D6C4E8 STP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x266D000
	008 Move X22, 0x2388000
	009 Move W8, [X23+2219]
	010 Move X22, [X22+1624]
	011 Move X19, X3
	012 Move X20, X2
	013 Move X21, X1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x2388000
	019 Move X0, [X0+1624]
	020 Call 0x1C17CF4
	021 Move X0, 0x238A000
	022 Move X0, [X0+2584]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+2219], W8
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X22]
	032 Move X8, [X0+184]
	033 Move X22, [X8+16]
	034 Compare X22, 0
	035 JumpIfEqual {69}
	036 Move X10, 0x238A000
	037 Move X8, [X22]
	038 Move X10, [X10+2584]
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Move X1, [X10]
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move W2, 26
	050 Move X0, X22
	051 Call 0x1C5D788
	052 Move W9, [X10]
	053 Add W9, W9, 26
	054 Add X8, X8, W9
	055 Add X0, X8, 312
	056 Move X5, [X0]
	057 Move X4, [X0+8]
	058 Move X0, X22
	059 Move X1, X21
	060 Move X2, X20
	061 Move X3, X19
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Move X23, [X31+56]
	068 CallNoReturn X5
	069 Call 0x1C17F20

Method: System.Threading.Tasks.Task DeleteFriendsAsync(Nakama.ISession session, System.Collections.Generic.IEnumerable`1<System.String> ids, System.Collections.Generic.IEnumerable`1<System.String> usernames = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6C4EC STP X22, X21, [X31 + 0x20]
	0x01D6C4F0 STP X20, X19, [X31 + 0x30]
	0x01D6C4F4 ADRP X24, 0x266C000
	0x01D6C4F8 ADRP X23, 0x2387000
	0x01D6C4FC LDRB W8, [X24 + 0x8BC]
	0x01D6C500 LDR X23, [X23 + 0x658]
	0x01D6C504 MOV X19, X4
	0x01D6C508 MOV X20, X3
	0x01D6C50C MOV X21, X2
	0x01D6C510 MOV X22, X1
	0x01D6C514 TBNZ X8, 0x0, 0x1D6C538
	0x01D6C518 ADRP X0, 0x2387000
	0x01D6C51C LDR X0, [X0 + 0x658]
	0x01D6C520 BL 0x1C16CF4
	0x01D6C524 ADRP X0, 0x2389000
	0x01D6C528 LDR X0, [X0 + 0xA18]
	0x01D6C52C BL 0x1C16CF4
	0x01D6C530 MOVZ W8, 0x1
	0x01D6C534 STRB W8, [X24 + 0x8BC]
	0x01D6C538 LDR X0, [X23]
	0x01D6C53C LDR W8, [X0 + 0xE0]
	0x01D6C540 CBNZ W8, 0x1D6C54C
	0x01D6C544 BL 0x1C16DFC
	0x01D6C548 LDR X0, [X23]
	0x01D6C54C LDR X8, [X0 + 0xB8]
	0x01D6C550 LDR X23, [X8 + 0x10]
	0x01D6C554 CBZ X23, 0x1D6C5DC
	0x01D6C558 ADRP X10, 0x2389000
	0x01D6C55C LDR X8, [X23]
	0x01D6C560 LDR X10, [X10 + 0xA18]
	0x01D6C564 LDRH W9, [X8 + 0x12E]
	0x01D6C568 LDR X1, [X10]
	0x01D6C56C CBZ X9, 0x1D6C590
	0x01D6C570 LDR X10, [X8 + 0xB0]
	0x01D6C574 ADD X10, X10, 0x8
	0x01D6C578 LDUR X11, [X10 - 0x8]
	0x01D6C57C CMP X11, X1
	0x01D6C580 B.EQ 0x1D6C5A0
	0x01D6C584 SUBS X9, X9, 0x1
	0x01D6C588 ADD X10, X10, 0x10
	0x01D6C58C B.NE 0x1D6C578
	0x01D6C590 MOVZ W2, 0x2B
	0x01D6C594 MOV X0, X23
	0x01D6C598 BL 0x1C5C788
	0x01D6C59C B 0x1D6C5B0
	0x01D6C5A0 LDR W9, [X10]
	0x01D6C5A4 ADD W9, W9, 0x2B
	0x01D6C5A8 ADD X8, X8, W9, 0x4, SXTW
	0x01D6C5AC ADD X0, X8, 0x138
	0x01D6C5B0 LDP X6, X5, [X0]
	0x01D6C5B4 MOV X0, X23
	0x01D6C5B8 MOV X1, X22
	0x01D6C5BC MOV X2, X21
	0x01D6C5C0 MOV X3, X20
	0x01D6C5C4 MOV X4, X19
	0x01D6C5C8 LDP X20, X19, [X31 + 0x30]
	0x01D6C5CC LDP X22, X21, [X31 + 0x20]
	0x01D6C5D0 LDP X24, X23, [X31 + 0x10]
	0x01D6C5D4 LDR X30, [X31], #0x40
	0x01D6C5D8 BR X6
	0x01D6C5DC BL 0x1C16F20
	0x01D6C5E0 STR X30, [X31 - 0x40]!
	0x01D6C5E4 STP X24, X23, [X31 + 0x10]
	0x01D6C5E8 STP X22, X21, [X31 + 0x20]
	0x01D6C5EC STP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x266D000
	010 Move X24, 0x2388000
	011 Move W8, [X25+2220]
	012 Move X24, [X24+1624]
	013 Move X19, X5
	014 Move X20, X4
	015 Move X21, X3
	016 Move X22, X2
	017 Move X23, X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x2388000
	023 Move X0, [X0+1624]
	024 Call 0x1C17CF4
	025 Move X0, 0x238A000
	026 Move X0, [X0+2584]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+2220], W8
	030 Move X0, [X24]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X24]
	036 Move X8, [X0+184]
	037 Move X24, [X8+16]
	038 Compare X24, 0
	039 JumpIfEqual {77}
	040 Move X10, 0x238A000
	041 Move X8, [X24]
	042 Move X10, [X10+2584]
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move X1, [X10]
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move W2, 27
	054 Move X0, X24
	055 Call 0x1C5D788
	056 Move W9, [X10]
	057 Add W9, W9, 27
	058 Add X8, X8, W9
	059 Add X0, X8, 312
	060 Move X7, [X0]
	061 Move X6, [X0+8]
	062 Move X0, X24
	063 Move X1, X23
	064 Move X2, X22
	065 Move X3, X21
	066 Move X4, X20
	067 Move X5, X19
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X30, [X31+64]
	075 Move X25, [X31+72]
	076 CallNoReturn X7
	077 Call 0x1C17F20

Method: System.Threading.Tasks.Task DeleteGroupAsync(Nakama.ISession session, System.String groupId, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6C5F0 ADRP X24, 0x266C000
	0x01D6C5F4 ADRP X23, 0x2387000
	0x01D6C5F8 LDRB W8, [X24 + 0x8BD]
	0x01D6C5FC LDR X23, [X23 + 0x658]
	0x01D6C600 MOV X19, X4
	0x01D6C604 MOV X20, X3
	0x01D6C608 MOV X21, X2
	0x01D6C60C MOV X22, X1
	0x01D6C610 TBNZ X8, 0x0, 0x1D6C634
	0x01D6C614 ADRP X0, 0x2387000
	0x01D6C618 LDR X0, [X0 + 0x658]
	0x01D6C61C BL 0x1C16CF4
	0x01D6C620 ADRP X0, 0x2389000
	0x01D6C624 LDR X0, [X0 + 0xA18]
	0x01D6C628 BL 0x1C16CF4
	0x01D6C62C MOVZ W8, 0x1
	0x01D6C630 STRB W8, [X24 + 0x8BD]
	0x01D6C634 LDR X0, [X23]
	0x01D6C638 LDR W8, [X0 + 0xE0]
	0x01D6C63C CBNZ W8, 0x1D6C648
	0x01D6C640 BL 0x1C16DFC
	0x01D6C644 LDR X0, [X23]
	0x01D6C648 LDR X8, [X0 + 0xB8]
	0x01D6C64C LDR X23, [X8 + 0x10]
	0x01D6C650 CBZ X23, 0x1D6C6D8
	0x01D6C654 ADRP X10, 0x2389000
	0x01D6C658 LDR X8, [X23]
	0x01D6C65C LDR X10, [X10 + 0xA18]
	0x01D6C660 LDRH W9, [X8 + 0x12E]
	0x01D6C664 LDR X1, [X10]
	0x01D6C668 CBZ X9, 0x1D6C68C
	0x01D6C66C LDR X10, [X8 + 0xB0]
	0x01D6C670 ADD X10, X10, 0x8
	0x01D6C674 LDUR X11, [X10 - 0x8]
	0x01D6C678 CMP X11, X1
	0x01D6C67C B.EQ 0x1D6C69C
	0x01D6C680 SUBS X9, X9, 0x1
	0x01D6C684 ADD X10, X10, 0x10
	0x01D6C688 B.NE 0x1D6C674
	0x01D6C68C MOVZ W2, 0x2C
	0x01D6C690 MOV X0, X23
	0x01D6C694 BL 0x1C5C788
	0x01D6C698 B 0x1D6C6AC
	0x01D6C69C LDR W9, [X10]
	0x01D6C6A0 ADD W9, W9, 0x2C
	0x01D6C6A4 ADD X8, X8, W9, 0x4, SXTW
	0x01D6C6A8 ADD X0, X8, 0x138
	0x01D6C6AC LDP X6, X5, [X0]
	0x01D6C6B0 MOV X0, X23
	0x01D6C6B4 MOV X1, X22
	0x01D6C6B8 MOV X2, X21
	0x01D6C6BC MOV X3, X20
	0x01D6C6C0 MOV X4, X19
	0x01D6C6C4 LDP X20, X19, [X31 + 0x30]
	0x01D6C6C8 LDP X22, X21, [X31 + 0x20]
	0x01D6C6CC LDP X24, X23, [X31 + 0x10]
	0x01D6C6D0 LDR X30, [X31], #0x40
	0x01D6C6D4 BR X6
	0x01D6C6D8 BL 0x1C16F20
	0x01D6C6DC STR X30, [X31 - 0x40]!
	0x01D6C6E0 STP X24, X23, [X31 + 0x10]
	0x01D6C6E4 STP X22, X21, [X31 + 0x20]
	0x01D6C6E8 STP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x266D000
	009 Move X23, 0x2388000
	010 Move W8, [X24+2221]
	011 Move X23, [X23+1624]
	012 Move X19, X4
	013 Move X20, X3
	014 Move X21, X2
	015 Move X22, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x2388000
	021 Move X0, [X0+1624]
	022 Call 0x1C17CF4
	023 Move X0, 0x238A000
	024 Move X0, [X0+2584]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+2221], W8
	028 Move X0, [X23]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X23]
	034 Move X8, [X0+184]
	035 Move X23, [X8+16]
	036 Compare X23, 0
	037 JumpIfEqual {73}
	038 Move X10, 0x238A000
	039 Move X8, [X23]
	040 Move X10, [X10+2584]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X10]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move W2, 28
	052 Move X0, X23
	053 Call 0x1C5D788
	054 Move W9, [X10]
	055 Add W9, W9, 28
	056 Add X8, X8, W9
	057 Add X0, X8, 312
	058 Move X6, [X0]
	059 Move X5, [X0+8]
	060 Move X0, X23
	061 Move X1, X22
	062 Move X2, X21
	063 Move X3, X20
	064 Move X4, X19
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X24, [X31+16]
	070 Move X23, [X31+24]
	071 Move X30, [X31+64]
	072 CallNoReturn X6
	073 Call 0x1C17F20

Method: System.Threading.Tasks.Task DeleteLeaderboardRecordAsync(Nakama.ISession session, System.String leaderboardId, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6C6EC ADRP X24, 0x266C000
	0x01D6C6F0 ADRP X23, 0x2387000
	0x01D6C6F4 LDRB W8, [X24 + 0x8BE]
	0x01D6C6F8 LDR X23, [X23 + 0x658]
	0x01D6C6FC MOV X19, X4
	0x01D6C700 MOV X20, X3
	0x01D6C704 MOV X21, X2
	0x01D6C708 MOV X22, X1
	0x01D6C70C TBNZ X8, 0x0, 0x1D6C730
	0x01D6C710 ADRP X0, 0x2387000
	0x01D6C714 LDR X0, [X0 + 0x658]
	0x01D6C718 BL 0x1C16CF4
	0x01D6C71C ADRP X0, 0x2389000
	0x01D6C720 LDR X0, [X0 + 0xA18]
	0x01D6C724 BL 0x1C16CF4
	0x01D6C728 MOVZ W8, 0x1
	0x01D6C72C STRB W8, [X24 + 0x8BE]
	0x01D6C730 LDR X0, [X23]
	0x01D6C734 LDR W8, [X0 + 0xE0]
	0x01D6C738 CBNZ W8, 0x1D6C744
	0x01D6C73C BL 0x1C16DFC
	0x01D6C740 LDR X0, [X23]
	0x01D6C744 LDR X8, [X0 + 0xB8]
	0x01D6C748 LDR X23, [X8 + 0x10]
	0x01D6C74C CBZ X23, 0x1D6C7D4
	0x01D6C750 ADRP X10, 0x2389000
	0x01D6C754 LDR X8, [X23]
	0x01D6C758 LDR X10, [X10 + 0xA18]
	0x01D6C75C LDRH W9, [X8 + 0x12E]
	0x01D6C760 LDR X1, [X10]
	0x01D6C764 CBZ X9, 0x1D6C788
	0x01D6C768 LDR X10, [X8 + 0xB0]
	0x01D6C76C ADD X10, X10, 0x8
	0x01D6C770 LDUR X11, [X10 - 0x8]
	0x01D6C774 CMP X11, X1
	0x01D6C778 B.EQ 0x1D6C798
	0x01D6C77C SUBS X9, X9, 0x1
	0x01D6C780 ADD X10, X10, 0x10
	0x01D6C784 B.NE 0x1D6C770
	0x01D6C788 MOVZ W2, 0x2D
	0x01D6C78C MOV X0, X23
	0x01D6C790 BL 0x1C5C788
	0x01D6C794 B 0x1D6C7A8
	0x01D6C798 LDR W9, [X10]
	0x01D6C79C ADD W9, W9, 0x2D
	0x01D6C7A0 ADD X8, X8, W9, 0x4, SXTW
	0x01D6C7A4 ADD X0, X8, 0x138
	0x01D6C7A8 LDP X6, X5, [X0]
	0x01D6C7AC MOV X0, X23
	0x01D6C7B0 MOV X1, X22
	0x01D6C7B4 MOV X2, X21
	0x01D6C7B8 MOV X3, X20
	0x01D6C7BC MOV X4, X19
	0x01D6C7C0 LDP X20, X19, [X31 + 0x30]
	0x01D6C7C4 LDP X22, X21, [X31 + 0x20]
	0x01D6C7C8 LDP X24, X23, [X31 + 0x10]
	0x01D6C7CC LDR X30, [X31], #0x40
	0x01D6C7D0 BR X6
	0x01D6C7D4 BL 0x1C16F20
	0x01D6C7D8 STR X30, [X31 - 0x40]!
	0x01D6C7DC STP X24, X23, [X31 + 0x10]
	0x01D6C7E0 STP X22, X21, [X31 + 0x20]
	0x01D6C7E4 STP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x266D000
	009 Move X23, 0x2388000
	010 Move W8, [X24+2222]
	011 Move X23, [X23+1624]
	012 Move X19, X4
	013 Move X20, X3
	014 Move X21, X2
	015 Move X22, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x2388000
	021 Move X0, [X0+1624]
	022 Call 0x1C17CF4
	023 Move X0, 0x238A000
	024 Move X0, [X0+2584]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+2222], W8
	028 Move X0, [X23]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X23]
	034 Move X8, [X0+184]
	035 Move X23, [X8+16]
	036 Compare X23, 0
	037 JumpIfEqual {73}
	038 Move X10, 0x238A000
	039 Move X8, [X23]
	040 Move X10, [X10+2584]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X10]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move W2, 29
	052 Move X0, X23
	053 Call 0x1C5D788
	054 Move W9, [X10]
	055 Add W9, W9, 29
	056 Add X8, X8, W9
	057 Add X0, X8, 312
	058 Move X6, [X0]
	059 Move X5, [X0+8]
	060 Move X0, X23
	061 Move X1, X22
	062 Move X2, X21
	063 Move X3, X20
	064 Move X4, X19
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X24, [X31+16]
	070 Move X23, [X31+24]
	071 Move X30, [X31+64]
	072 CallNoReturn X6
	073 Call 0x1C17F20

Method: System.Threading.Tasks.Task DeleteNotificationsAsync(Nakama.ISession session, System.Collections.Generic.IEnumerable`1<System.String> ids, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6C7E8 ADRP X24, 0x266C000
	0x01D6C7EC ADRP X23, 0x2387000
	0x01D6C7F0 LDRB W8, [X24 + 0x8BF]
	0x01D6C7F4 LDR X23, [X23 + 0x658]
	0x01D6C7F8 MOV X19, X4
	0x01D6C7FC MOV X20, X3
	0x01D6C800 MOV X21, X2
	0x01D6C804 MOV X22, X1
	0x01D6C808 TBNZ X8, 0x0, 0x1D6C82C
	0x01D6C80C ADRP X0, 0x2387000
	0x01D6C810 LDR X0, [X0 + 0x658]
	0x01D6C814 BL 0x1C16CF4
	0x01D6C818 ADRP X0, 0x2389000
	0x01D6C81C LDR X0, [X0 + 0xA18]
	0x01D6C820 BL 0x1C16CF4
	0x01D6C824 MOVZ W8, 0x1
	0x01D6C828 STRB W8, [X24 + 0x8BF]
	0x01D6C82C LDR X0, [X23]
	0x01D6C830 LDR W8, [X0 + 0xE0]
	0x01D6C834 CBNZ W8, 0x1D6C840
	0x01D6C838 BL 0x1C16DFC
	0x01D6C83C LDR X0, [X23]
	0x01D6C840 LDR X8, [X0 + 0xB8]
	0x01D6C844 LDR X23, [X8 + 0x10]
	0x01D6C848 CBZ X23, 0x1D6C8D0
	0x01D6C84C ADRP X10, 0x2389000
	0x01D6C850 LDR X8, [X23]
	0x01D6C854 LDR X10, [X10 + 0xA18]
	0x01D6C858 LDRH W9, [X8 + 0x12E]
	0x01D6C85C LDR X1, [X10]
	0x01D6C860 CBZ X9, 0x1D6C884
	0x01D6C864 LDR X10, [X8 + 0xB0]
	0x01D6C868 ADD X10, X10, 0x8
	0x01D6C86C LDUR X11, [X10 - 0x8]
	0x01D6C870 CMP X11, X1
	0x01D6C874 B.EQ 0x1D6C894
	0x01D6C878 SUBS X9, X9, 0x1
	0x01D6C87C ADD X10, X10, 0x10
	0x01D6C880 B.NE 0x1D6C86C
	0x01D6C884 MOVZ W2, 0x2E
	0x01D6C888 MOV X0, X23
	0x01D6C88C BL 0x1C5C788
	0x01D6C890 B 0x1D6C8A4
	0x01D6C894 LDR W9, [X10]
	0x01D6C898 ADD W9, W9, 0x2E
	0x01D6C89C ADD X8, X8, W9, 0x4, SXTW
	0x01D6C8A0 ADD X0, X8, 0x138
	0x01D6C8A4 LDP X6, X5, [X0]
	0x01D6C8A8 MOV X0, X23
	0x01D6C8AC MOV X1, X22
	0x01D6C8B0 MOV X2, X21
	0x01D6C8B4 MOV X3, X20
	0x01D6C8B8 MOV X4, X19
	0x01D6C8BC LDP X20, X19, [X31 + 0x30]
	0x01D6C8C0 LDP X22, X21, [X31 + 0x20]
	0x01D6C8C4 LDP X24, X23, [X31 + 0x10]
	0x01D6C8C8 LDR X30, [X31], #0x40
	0x01D6C8CC BR X6
	0x01D6C8D0 BL 0x1C16F20
	0x01D6C8D4 STP X30, X25, [X31 - 0x40]!
	0x01D6C8D8 STP X24, X23, [X31 + 0x10]
	0x01D6C8DC STP X22, X21, [X31 + 0x20]
	0x01D6C8E0 STP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x266D000
	009 Move X23, 0x2388000
	010 Move W8, [X24+2223]
	011 Move X23, [X23+1624]
	012 Move X19, X4
	013 Move X20, X3
	014 Move X21, X2
	015 Move X22, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x2388000
	021 Move X0, [X0+1624]
	022 Call 0x1C17CF4
	023 Move X0, 0x238A000
	024 Move X0, [X0+2584]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+2223], W8
	028 Move X0, [X23]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X23]
	034 Move X8, [X0+184]
	035 Move X23, [X8+16]
	036 Compare X23, 0
	037 JumpIfEqual {73}
	038 Move X10, 0x238A000
	039 Move X8, [X23]
	040 Move X10, [X10+2584]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X10]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move W2, 30
	052 Move X0, X23
	053 Call 0x1C5D788
	054 Move W9, [X10]
	055 Add W9, W9, 30
	056 Add X8, X8, W9
	057 Add X0, X8, 312
	058 Move X6, [X0]
	059 Move X5, [X0+8]
	060 Move X0, X23
	061 Move X1, X22
	062 Move X2, X21
	063 Move X3, X20
	064 Move X4, X19
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X24, [X31+16]
	070 Move X23, [X31+24]
	071 Move X30, [X31+64]
	072 CallNoReturn X6
	073 Call 0x1C17F20

Method: System.Threading.Tasks.Task DeleteStorageObjectsAsync(Nakama.ISession session, Nakama.StorageObjectId[] ids, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6C8E4 ADRP X25, 0x266C000
	0x01D6C8E8 ADRP X24, 0x2387000
	0x01D6C8EC LDRB W8, [X25 + 0x8C0]
	0x01D6C8F0 LDR X24, [X24 + 0x658]
	0x01D6C8F4 MOV X19, X5
	0x01D6C8F8 MOV X20, X4
	0x01D6C8FC MOV X21, X3
	0x01D6C900 MOV X22, X2
	0x01D6C904 MOV X23, X1
	0x01D6C908 TBNZ X8, 0x0, 0x1D6C92C
	0x01D6C90C ADRP X0, 0x2387000
	0x01D6C910 LDR X0, [X0 + 0x658]
	0x01D6C914 BL 0x1C16CF4
	0x01D6C918 ADRP X0, 0x2389000
	0x01D6C91C LDR X0, [X0 + 0xA18]
	0x01D6C920 BL 0x1C16CF4
	0x01D6C924 MOVZ W8, 0x1
	0x01D6C928 STRB W8, [X25 + 0x8C0]
	0x01D6C92C LDR X0, [X24]
	0x01D6C930 LDR W8, [X0 + 0xE0]
	0x01D6C934 CBNZ W8, 0x1D6C940
	0x01D6C938 BL 0x1C16DFC
	0x01D6C93C LDR X0, [X24]
	0x01D6C940 LDR X8, [X0 + 0xB8]
	0x01D6C944 LDR X24, [X8 + 0x10]
	0x01D6C948 CBZ X24, 0x1D6C9D4
	0x01D6C94C ADRP X10, 0x2389000
	0x01D6C950 LDR X8, [X24]
	0x01D6C954 LDR X10, [X10 + 0xA18]
	0x01D6C958 LDRH W9, [X8 + 0x12E]
	0x01D6C95C LDR X1, [X10]
	0x01D6C960 CBZ X9, 0x1D6C984
	0x01D6C964 LDR X10, [X8 + 0xB0]
	0x01D6C968 ADD X10, X10, 0x8
	0x01D6C96C LDUR X11, [X10 - 0x8]
	0x01D6C970 CMP X11, X1
	0x01D6C974 B.EQ 0x1D6C994
	0x01D6C978 SUBS X9, X9, 0x1
	0x01D6C97C ADD X10, X10, 0x10
	0x01D6C980 B.NE 0x1D6C96C
	0x01D6C984 MOVZ W2, 0x2F
	0x01D6C988 MOV X0, X24
	0x01D6C98C BL 0x1C5C788
	0x01D6C990 B 0x1D6C9A4
	0x01D6C994 LDR W9, [X10]
	0x01D6C998 ADD W9, W9, 0x2F
	0x01D6C99C ADD X8, X8, W9, 0x4, SXTW
	0x01D6C9A0 ADD X0, X8, 0x138
	0x01D6C9A4 LDP X7, X6, [X0]
	0x01D6C9A8 MOV X0, X24
	0x01D6C9AC MOV X1, X23
	0x01D6C9B0 MOV X2, X22
	0x01D6C9B4 MOV X3, X21
	0x01D6C9B8 MOV X4, X20
	0x01D6C9BC MOV X5, X19
	0x01D6C9C0 LDP X20, X19, [X31 + 0x30]
	0x01D6C9C4 LDP X22, X21, [X31 + 0x20]
	0x01D6C9C8 LDP X24, X23, [X31 + 0x10]
	0x01D6C9CC LDP X30, X25, [X31], #0x40
	0x01D6C9D0 BR X7
	0x01D6C9D4 BL 0x1C16F20
	0x01D6C9D8 STP X30, X25, [X31 - 0x40]!
	0x01D6C9DC STP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x266D000
	009 Move X23, 0x2388000
	010 Move W8, [X24+2224]
	011 Move X23, [X23+1624]
	012 Move X19, X4
	013 Move X20, X3
	014 Move X21, X2
	015 Move X22, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x2388000
	021 Move X0, [X0+1624]
	022 Call 0x1C17CF4
	023 Move X0, 0x238A000
	024 Move X0, [X0+2584]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+2224], W8
	028 Move X0, [X23]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X23]
	034 Move X8, [X0+184]
	035 Move X23, [X8+16]
	036 Compare X23, 0
	037 JumpIfEqual {73}
	038 Move X10, 0x238A000
	039 Move X8, [X23]
	040 Move X10, [X10+2584]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X10]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move W2, 31
	052 Move X0, X23
	053 Call 0x1C5D788
	054 Move W9, [X10]
	055 Add W9, W9, 31
	056 Add X8, X8, W9
	057 Add X0, X8, 312
	058 Move X6, [X0]
	059 Move X5, [X0+8]
	060 Move X0, X23
	061 Move X1, X22
	062 Move X2, X21
	063 Move X3, X20
	064 Move X4, X19
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X24, [X31+16]
	070 Move X23, [X31+24]
	071 Move X30, [X31+64]
	072 CallNoReturn X6
	073 Call 0x1C17F20

Method: System.Threading.Tasks.Task DeleteTournamentRecordAsync(Nakama.ISession session, System.String tournamentId, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6C9E0 STP X22, X21, [X31 + 0x20]
	0x01D6C9E4 STP X20, X19, [X31 + 0x30]
	0x01D6C9E8 ADRP X25, 0x266C000
	0x01D6C9EC ADRP X24, 0x2387000
	0x01D6C9F0 LDRB W8, [X25 + 0x8C1]
	0x01D6C9F4 LDR X24, [X24 + 0x658]
	0x01D6C9F8 MOV X19, X5
	0x01D6C9FC MOV X20, X4
	0x01D6CA00 MOV X22, X3
	0x01D6CA04 MOV X21, X2
	0x01D6CA08 MOV X23, X1
	0x01D6CA0C TBNZ X8, 0x0, 0x1D6CA30
	0x01D6CA10 ADRP X0, 0x2387000
	0x01D6CA14 LDR X0, [X0 + 0x658]
	0x01D6CA18 BL 0x1C16CF4
	0x01D6CA1C ADRP X0, 0x2389000
	0x01D6CA20 LDR X0, [X0 + 0xA18]
	0x01D6CA24 BL 0x1C16CF4
	0x01D6CA28 MOVZ W8, 0x1
	0x01D6CA2C STRB W8, [X25 + 0x8C1]
	0x01D6CA30 LDR X0, [X24]
	0x01D6CA34 LDR W8, [X0 + 0xE0]
	0x01D6CA38 CBNZ W8, 0x1D6CA44
	0x01D6CA3C BL 0x1C16DFC
	0x01D6CA40 LDR X0, [X24]
	0x01D6CA44 LDR X8, [X0 + 0xB8]
	0x01D6CA48 LDR X24, [X8 + 0x10]
	0x01D6CA4C CBZ X24, 0x1D6CAD8
	0x01D6CA50 ADRP X10, 0x2389000
	0x01D6CA54 LDR X8, [X24]
	0x01D6CA58 LDR X10, [X10 + 0xA18]
	0x01D6CA5C LDRH W9, [X8 + 0x12E]
	0x01D6CA60 LDR X1, [X10]
	0x01D6CA64 CBZ X9, 0x1D6CA88
	0x01D6CA68 LDR X10, [X8 + 0xB0]
	0x01D6CA6C ADD X10, X10, 0x8
	0x01D6CA70 LDUR X11, [X10 - 0x8]
	0x01D6CA74 CMP X11, X1
	0x01D6CA78 B.EQ 0x1D6CA98
	0x01D6CA7C SUBS X9, X9, 0x1
	0x01D6CA80 ADD X10, X10, 0x10
	0x01D6CA84 B.NE 0x1D6CA70
	0x01D6CA88 MOVZ W2, 0x30
	0x01D6CA8C MOV X0, X24
	0x01D6CA90 BL 0x1C5C788
	0x01D6CA94 B 0x1D6CAA8
	0x01D6CA98 LDR W9, [X10]
	0x01D6CA9C ADD W9, W9, 0x30
	0x01D6CAA0 ADD X8, X8, W9, 0x4, SXTW
	0x01D6CAA4 ADD X0, X8, 0x138
	0x01D6CAA8 LDP X7, X6, [X0]
	0x01D6CAAC AND X3, X22, 0xFFFF
	0x01D6CAB0 MOV X0, X24
	0x01D6CAB4 MOV X1, X23
	0x01D6CAB8 MOV X2, X21
	0x01D6CABC MOV X4, X20
	0x01D6CAC0 MOV X5, X19
	0x01D6CAC4 LDP X20, X19, [X31 + 0x30]
	0x01D6CAC8 LDP X22, X21, [X31 + 0x20]
	0x01D6CACC LDP X24, X23, [X31 + 0x10]
	0x01D6CAD0 LDP X30, X25, [X31], #0x40
	0x01D6CAD4 BR X7
	0x01D6CAD8 BL 0x1C16F20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x266D000
	009 Move X23, 0x2388000
	010 Move W8, [X24+2225]
	011 Move X23, [X23+1624]
	012 Move X19, X4
	013 Move X20, X3
	014 Move X21, X2
	015 Move X22, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x2388000
	021 Move X0, [X0+1624]
	022 Call 0x1C17CF4
	023 Move X0, 0x238A000
	024 Move X0, [X0+2584]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+2225], W8
	028 Move X0, [X23]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X23]
	034 Move X8, [X0+184]
	035 Move X23, [X8+16]
	036 Compare X23, 0
	037 JumpIfEqual {73}
	038 Move X10, 0x238A000
	039 Move X8, [X23]
	040 Move X10, [X10+2584]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X10]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move W2, 32
	052 Move X0, X23
	053 Call 0x1C5D788
	054 Move W9, [X10]
	055 Add W9, W9, 32
	056 Add X8, X8, W9
	057 Add X0, X8, 312
	058 Move X6, [X0]
	059 Move X5, [X0+8]
	060 Move X0, X23
	061 Move X1, X22
	062 Move X2, X21
	063 Move X3, X20
	064 Move X4, X19
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X24, [X31+16]
	070 Move X23, [X31+24]
	071 Move X30, [X31+64]
	072 CallNoReturn X6
	073 Call 0x1C17F20

Method: System.Threading.Tasks.Task DemoteGroupUsersAsync(Nakama.ISession session, System.String groupId, System.Collections.Generic.IEnumerable`1<System.String> userIds, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6CADC STP X29, X30, [X31 - 0x60]!
	0x01D6CAE0 STP X28, X27, [X31 + 0x10]
	0x01D6CAE4 STP X26, X25, [X31 + 0x20]
	0x01D6CAE8 STP X24, X23, [X31 + 0x30]
	0x01D6CAEC STP X22, X21, [X31 + 0x40]
	0x01D6CAF0 STP X20, X19, [X31 + 0x50]
	0x01D6CAF4 ADRP X29, 0x266C000
	0x01D6CAF8 ADRP X26, 0x2387000
	0x01D6CAFC LDRB W8, [X29 + 0x8C2]
	0x01D6CB00 LDP X27, X28, [X31 + 0x60]
	0x01D6CB04 LDR X26, [X26 + 0x658]
	0x01D6CB08 MOV X19, X7
	0x01D6CB0C MOV X20, X6
	0x01D6CB10 MOV X21, X5
	0x01D6CB14 MOV X22, X4
	0x01D6CB18 MOV X23, X3
	0x01D6CB1C MOV X24, X2
	0x01D6CB20 MOV X25, X1
	0x01D6CB24 TBNZ X8, 0x0, 0x1D6CB48
	0x01D6CB28 ADRP X0, 0x2387000
	0x01D6CB2C LDR X0, [X0 + 0x658]
	0x01D6CB30 BL 0x1C16CF4
	0x01D6CB34 ADRP X0, 0x2389000
	0x01D6CB38 LDR X0, [X0 + 0xA18]
	0x01D6CB3C BL 0x1C16CF4
	0x01D6CB40 MOVZ W8, 0x1
	0x01D6CB44 STRB W8, [X29 + 0x8C2]
	0x01D6CB48 LDR X0, [X26]
	0x01D6CB4C LDR W8, [X0 + 0xE0]
	0x01D6CB50 CBNZ W8, 0x1D6CB5C
	0x01D6CB54 BL 0x1C16DFC
	0x01D6CB58 LDR X0, [X26]
	0x01D6CB5C LDR X8, [X0 + 0xB8]
	0x01D6CB60 LDR X26, [X8 + 0x10]
	0x01D6CB64 CBZ X26, 0x1D6CC08
	0x01D6CB68 ADRP X10, 0x2389000
	0x01D6CB6C LDR X8, [X26]
	0x01D6CB70 LDR X10, [X10 + 0xA18]
	0x01D6CB74 LDRH W9, [X8 + 0x12E]
	0x01D6CB78 LDR X1, [X10]
	0x01D6CB7C CBZ X9, 0x1D6CBA0
	0x01D6CB80 LDR X10, [X8 + 0xB0]
	0x01D6CB84 ADD X10, X10, 0x8
	0x01D6CB88 LDUR X11, [X10 - 0x8]
	0x01D6CB8C CMP X11, X1
	0x01D6CB90 B.EQ 0x1D6CBB0
	0x01D6CB94 SUBS X9, X9, 0x1
	0x01D6CB98 ADD X10, X10, 0x10
	0x01D6CB9C B.NE 0x1D6CB88
	0x01D6CBA0 MOVZ W2, 0x31
	0x01D6CBA4 MOV X0, X26
	0x01D6CBA8 BL 0x1C5C788
	0x01D6CBAC B 0x1D6CBC0
	0x01D6CBB0 LDR W9, [X10]
	0x01D6CBB4 ADD W9, W9, 0x31
	0x01D6CBB8 ADD X8, X8, W9, 0x4, SXTW
	0x01D6CBBC ADD X0, X8, 0x138
	0x01D6CBC0 LDP X9, X8, [X0]
	0x01D6CBC4 STR X27, [X31 + 0x60]
	0x01D6CBC8 MOV X0, X26
	0x01D6CBCC MOV X1, X25
	0x01D6CBD0 STP X28, X8, [X31 + 0x68]
	0x01D6CBD4 MOV X2, X24
	0x01D6CBD8 MOV X3, X23
	0x01D6CBDC MOV X4, X22

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x266D000
	010 Move X24, 0x2388000
	011 Move W8, [X25+2226]
	012 Move X24, [X24+1624]
	013 Move X19, X5
	014 Move X20, X4
	015 Move X21, X3
	016 Move X22, X2
	017 Move X23, X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x2388000
	023 Move X0, [X0+1624]
	024 Call 0x1C17CF4
	025 Move X0, 0x238A000
	026 Move X0, [X0+2584]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+2226], W8
	030 Move X0, [X24]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X24]
	036 Move X8, [X0+184]
	037 Move X24, [X8+16]
	038 Compare X24, 0
	039 JumpIfEqual {77}
	040 Move X10, 0x238A000
	041 Move X8, [X24]
	042 Move X10, [X10+2584]
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move X1, [X10]
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move W2, 33
	054 Move X0, X24
	055 Call 0x1C5D788
	056 Move W9, [X10]
	057 Add W9, W9, 33
	058 Add X8, X8, W9
	059 Add X0, X8, 312
	060 Move X7, [X0]
	061 Move X6, [X0+8]
	062 Move X0, X24
	063 Move X1, X23
	064 Move X2, X22
	065 Move X3, X21
	066 Move X4, X20
	067 Move X5, X19
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X30, [X31+64]
	075 Move X25, [X31+72]
	076 CallNoReturn X7
	077 Call 0x1C17F20

Method: System.Threading.Tasks.Task EventAsync(Nakama.ISession session, System.String name, System.Collections.Generic.Dictionary`2<System.String, System.String> properties, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6CBE0 MOV X5, X21
	0x01D6CBE4 MOV X6, X20
	0x01D6CBE8 MOV X7, X19
	0x01D6CBEC LDP X20, X19, [X31 + 0x50]
	0x01D6CBF0 LDP X22, X21, [X31 + 0x40]
	0x01D6CBF4 LDP X24, X23, [X31 + 0x30]
	0x01D6CBF8 LDP X26, X25, [X31 + 0x20]
	0x01D6CBFC LDP X28, X27, [X31 + 0x10]
	0x01D6CC00 LDP X29, X30, [X31], #0x60
	0x01D6CC04 BR X9
	0x01D6CC08 BL 0x1C16F20
	0x01D6CC0C STR X30, [X31 - 0x40]!
	0x01D6CC10 STP X24, X23, [X31 + 0x10]
	0x01D6CC14 STP X22, X21, [X31 + 0x20]
	0x01D6CC18 STP X20, X19, [X31 + 0x30]
	0x01D6CC1C ADRP X24, 0x266C000
	0x01D6CC20 ADRP X23, 0x2387000
	0x01D6CC24 LDRB W8, [X24 + 0x8C3]
	0x01D6CC28 LDR X23, [X23 + 0x658]
	0x01D6CC2C MOV X19, X4
	0x01D6CC30 MOV X20, X3
	0x01D6CC34 MOV X21, X2
	0x01D6CC38 MOV X22, X1
	0x01D6CC3C TBNZ X8, 0x0, 0x1D6CC60
	0x01D6CC40 ADRP X0, 0x2387000
	0x01D6CC44 LDR X0, [X0 + 0x658]
	0x01D6CC48 BL 0x1C16CF4
	0x01D6CC4C ADRP X0, 0x2389000
	0x01D6CC50 LDR X0, [X0 + 0xA18]
	0x01D6CC54 BL 0x1C16CF4
	0x01D6CC58 MOVZ W8, 0x1
	0x01D6CC5C STRB W8, [X24 + 0x8C3]
	0x01D6CC60 LDR X0, [X23]
	0x01D6CC64 LDR W8, [X0 + 0xE0]
	0x01D6CC68 CBNZ W8, 0x1D6CC74
	0x01D6CC6C BL 0x1C16DFC
	0x01D6CC70 LDR X0, [X23]
	0x01D6CC74 LDR X8, [X0 + 0xB8]
	0x01D6CC78 LDR X23, [X8 + 0x10]
	0x01D6CC7C CBZ X23, 0x1D6CD04
	0x01D6CC80 ADRP X10, 0x2389000
	0x01D6CC84 LDR X8, [X23]
	0x01D6CC88 LDR X10, [X10 + 0xA18]
	0x01D6CC8C LDRH W9, [X8 + 0x12E]
	0x01D6CC90 LDR X1, [X10]
	0x01D6CC94 CBZ X9, 0x1D6CCB8
	0x01D6CC98 LDR X10, [X8 + 0xB0]
	0x01D6CC9C ADD X10, X10, 0x8
	0x01D6CCA0 LDUR X11, [X10 - 0x8]
	0x01D6CCA4 CMP X11, X1
	0x01D6CCA8 B.EQ 0x1D6CCC8
	0x01D6CCAC SUBS X9, X9, 0x1
	0x01D6CCB0 ADD X10, X10, 0x10
	0x01D6CCB4 B.NE 0x1D6CCA0
	0x01D6CCB8 MOVZ W2, 0x32
	0x01D6CCBC MOV X0, X23
	0x01D6CCC0 BL 0x1C5C788
	0x01D6CCC4 B 0x1D6CCD8
	0x01D6CCC8 LDR W9, [X10]
	0x01D6CCCC ADD W9, W9, 0x32
	0x01D6CCD0 ADD X8, X8, W9, 0x4, SXTW
	0x01D6CCD4 ADD X0, X8, 0x138
	0x01D6CCD8 LDP X6, X5, [X0]
	0x01D6CCDC MOV X0, X23
	0x01D6CCE0 MOV X1, X22

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x266D000
	010 Move X24, 0x2388000
	011 Move W8, [X25+2227]
	012 Move X24, [X24+1624]
	013 Move X19, X5
	014 Move X20, X4
	015 Move X21, X3
	016 Move X22, X2
	017 Move X23, X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x2388000
	023 Move X0, [X0+1624]
	024 Call 0x1C17CF4
	025 Move X0, 0x238A000
	026 Move X0, [X0+2584]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+2227], W8
	030 Move X0, [X24]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X24]
	036 Move X8, [X0+184]
	037 Move X24, [X8+16]
	038 Compare X24, 0
	039 JumpIfEqual {77}
	040 Move X10, 0x238A000
	041 Move X8, [X24]
	042 Move X10, [X10+2584]
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move X1, [X10]
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move W2, 34
	054 Move X0, X24
	055 Call 0x1C5D788
	056 Move W9, [X10]
	057 Add W9, W9, 34
	058 Add X8, X8, W9
	059 Add X0, X8, 312
	060 Move X7, [X0]
	061 Move X6, [X0+8]
	062 Move X0, X24
	063 Move X1, X23
	064 Move X2, X22
	065 Move X3, X21
	066 Move X4, X20
	067 Move X5, X19
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X30, [X31+64]
	075 Move X25, [X31+72]
	076 CallNoReturn X7
	077 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiAccount> GetAccountAsync(Nakama.ISession session, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6CCE4 MOV X2, X21
	0x01D6CCE8 MOV X3, X20
	0x01D6CCEC MOV X4, X19
	0x01D6CCF0 LDP X20, X19, [X31 + 0x30]
	0x01D6CCF4 LDP X22, X21, [X31 + 0x20]
	0x01D6CCF8 LDP X24, X23, [X31 + 0x10]
	0x01D6CCFC LDR X30, [X31], #0x40
	0x01D6CD00 BR X6
	0x01D6CD04 BL 0x1C16F20
	0x01D6CD08 STP X30, X25, [X31 - 0x40]!
	0x01D6CD0C STP X24, X23, [X31 + 0x10]
	0x01D6CD10 STP X22, X21, [X31 + 0x20]
	0x01D6CD14 STP X20, X19, [X31 + 0x30]
	0x01D6CD18 ADRP X25, 0x266C000
	0x01D6CD1C ADRP X24, 0x2387000
	0x01D6CD20 LDRB W8, [X25 + 0x8C4]
	0x01D6CD24 LDR X24, [X24 + 0x658]
	0x01D6CD28 MOV X19, X5
	0x01D6CD2C MOV X20, X4
	0x01D6CD30 MOV W23, W3
	0x01D6CD34 MOV X21, X2
	0x01D6CD38 MOV X22, X1
	0x01D6CD3C TBNZ X8, 0x0, 0x1D6CD60
	0x01D6CD40 ADRP X0, 0x2387000
	0x01D6CD44 LDR X0, [X0 + 0x658]
	0x01D6CD48 BL 0x1C16CF4
	0x01D6CD4C ADRP X0, 0x2389000
	0x01D6CD50 LDR X0, [X0 + 0xA18]
	0x01D6CD54 BL 0x1C16CF4
	0x01D6CD58 MOVZ W8, 0x1
	0x01D6CD5C STRB W8, [X25 + 0x8C4]
	0x01D6CD60 LDR X0, [X24]
	0x01D6CD64 LDR W8, [X0 + 0xE0]
	0x01D6CD68 CBNZ W8, 0x1D6CD74
	0x01D6CD6C BL 0x1C16DFC
	0x01D6CD70 LDR X0, [X24]
	0x01D6CD74 LDR X8, [X0 + 0xB8]
	0x01D6CD78 LDR X24, [X8 + 0x10]
	0x01D6CD7C CBZ X24, 0x1D6CE08
	0x01D6CD80 ADRP X10, 0x2389000
	0x01D6CD84 LDR X8, [X24]
	0x01D6CD88 LDR X10, [X10 + 0xA18]
	0x01D6CD8C LDRH W9, [X8 + 0x12E]
	0x01D6CD90 LDR X1, [X10]
	0x01D6CD94 CBZ X9, 0x1D6CDB8
	0x01D6CD98 LDR X10, [X8 + 0xB0]
	0x01D6CD9C ADD X10, X10, 0x8
	0x01D6CDA0 LDUR X11, [X10 - 0x8]
	0x01D6CDA4 CMP X11, X1
	0x01D6CDA8 B.EQ 0x1D6CDC8
	0x01D6CDAC SUBS X9, X9, 0x1
	0x01D6CDB0 ADD X10, X10, 0x10
	0x01D6CDB4 B.NE 0x1D6CDA0
	0x01D6CDB8 MOVZ W2, 0x33
	0x01D6CDBC MOV X0, X24
	0x01D6CDC0 BL 0x1C5C788
	0x01D6CDC4 B 0x1D6CDD8
	0x01D6CDC8 LDR W9, [X10]
	0x01D6CDCC ADD W9, W9, 0x33

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x266D000
	008 Move X22, 0x2388000
	009 Move W8, [X23+2228]
	010 Move X22, [X22+1624]
	011 Move X19, X3
	012 Move X20, X2
	013 Move X21, X1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x2388000
	019 Move X0, [X0+1624]
	020 Call 0x1C17CF4
	021 Move X0, 0x238A000
	022 Move X0, [X0+2584]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+2228], W8
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X22]
	032 Move X8, [X0+184]
	033 Move X22, [X8+16]
	034 Compare X22, 0
	035 JumpIfEqual {69}
	036 Move X10, 0x238A000
	037 Move X8, [X22]
	038 Move X10, [X10+2584]
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Move X1, [X10]
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move W2, 35
	050 Move X0, X22
	051 Call 0x1C5D788
	052 Move W9, [X10]
	053 Add W9, W9, 35
	054 Add X8, X8, W9
	055 Add X0, X8, 312
	056 Move X5, [X0]
	057 Move X4, [X0+8]
	058 Move X0, X22
	059 Move X1, X21
	060 Move X2, X20
	061 Move X3, X19
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Move X23, [X31+56]
	068 CallNoReturn X5
	069 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiValidatedSubscription> GetSubscriptionAsync(Nakama.ISession session, System.String productId, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6CDD0 ADD X8, X8, W9, 0x4, SXTW
	0x01D6CDD4 ADD X0, X8, 0x138
	0x01D6CDD8 LDP X7, X6, [X0]
	0x01D6CDDC AND W3, W23, 0x1
	0x01D6CDE0 MOV X0, X24
	0x01D6CDE4 MOV X1, X22
	0x01D6CDE8 MOV X2, X21
	0x01D6CDEC MOV X4, X20
	0x01D6CDF0 MOV X5, X19
	0x01D6CDF4 LDP X20, X19, [X31 + 0x30]
	0x01D6CDF8 LDP X22, X21, [X31 + 0x20]
	0x01D6CDFC LDP X24, X23, [X31 + 0x10]
	0x01D6CE00 LDP X30, X25, [X31], #0x40
	0x01D6CE04 BR X7
	0x01D6CE08 BL 0x1C16F20
	0x01D6CE0C STP X30, X27, [X31 - 0x50]!
	0x01D6CE10 STP X26, X25, [X31 + 0x10]
	0x01D6CE14 STP X24, X23, [X31 + 0x20]
	0x01D6CE18 STP X22, X21, [X31 + 0x30]
	0x01D6CE1C STP X20, X19, [X31 + 0x40]
	0x01D6CE20 ADRP X27, 0x266C000
	0x01D6CE24 ADRP X26, 0x2387000
	0x01D6CE28 LDRB W8, [X27 + 0x8C5]
	0x01D6CE2C LDR X26, [X26 + 0x658]
	0x01D6CE30 MOV X19, X7
	0x01D6CE34 MOV X20, X6
	0x01D6CE38 MOV X21, X5
	0x01D6CE3C MOV W24, W4
	0x01D6CE40 MOV W22, W3
	0x01D6CE44 MOV X23, X2
	0x01D6CE48 MOV X25, X1
	0x01D6CE4C TBNZ X8, 0x0, 0x1D6CE70
	0x01D6CE50 ADRP X0, 0x2387000
	0x01D6CE54 LDR X0, [X0 + 0x658]
	0x01D6CE58 BL 0x1C16CF4
	0x01D6CE5C ADRP X0, 0x2389000
	0x01D6CE60 LDR X0, [X0 + 0xA18]
	0x01D6CE64 BL 0x1C16CF4
	0x01D6CE68 MOVZ W8, 0x1
	0x01D6CE6C STRB W8, [X27 + 0x8C5]
	0x01D6CE70 LDR X0, [X26]
	0x01D6CE74 LDR W8, [X0 + 0xE0]
	0x01D6CE78 CBNZ W8, 0x1D6CE84
	0x01D6CE7C BL 0x1C16DFC
	0x01D6CE80 LDR X0, [X26]
	0x01D6CE84 LDR X8, [X0 + 0xB8]
	0x01D6CE88 LDR X26, [X8 + 0x10]
	0x01D6CE8C CBZ X26, 0x1D6CF28
	0x01D6CE90 ADRP X10, 0x2389000
	0x01D6CE94 LDR X8, [X26]
	0x01D6CE98 LDR X10, [X10 + 0xA18]
	0x01D6CE9C LDRH W9, [X8 + 0x12E]
	0x01D6CEA0 LDR X1, [X10]
	0x01D6CEA4 CBZ X9, 0x1D6CEC8
	0x01D6CEA8 LDR X10, [X8 + 0xB0]
	0x01D6CEAC ADD X10, X10, 0x8
	0x01D6CEB0 LDUR X11, [X10 - 0x8]
	0x01D6CEB4 CMP X11, X1
	0x01D6CEB8 B.EQ 0x1D6CED8
	0x01D6CEBC SUBS X9, X9, 0x1
	0x01D6CEC0 ADD X10, X10, 0x10
	0x01D6CEC4 B.NE 0x1D6CEB0
	0x01D6CEC8 MOVZ W2, 0x34

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x266D000
	009 Move X23, 0x2388000
	010 Move W8, [X24+2229]
	011 Move X23, [X23+1624]
	012 Move X19, X4
	013 Move X20, X3
	014 Move X21, X2
	015 Move X22, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x2388000
	021 Move X0, [X0+1624]
	022 Call 0x1C17CF4
	023 Move X0, 0x238A000
	024 Move X0, [X0+2584]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+2229], W8
	028 Move X0, [X23]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X23]
	034 Move X8, [X0+184]
	035 Move X23, [X8+16]
	036 Compare X23, 0
	037 JumpIfEqual {73}
	038 Move X10, 0x238A000
	039 Move X8, [X23]
	040 Move X10, [X10+2584]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X10]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move W2, 36
	052 Move X0, X23
	053 Call 0x1C5D788
	054 Move W9, [X10]
	055 Add W9, W9, 36
	056 Add X8, X8, W9
	057 Add X0, X8, 312
	058 Move X6, [X0]
	059 Move X5, [X0+8]
	060 Move X0, X23
	061 Move X1, X22
	062 Move X2, X21
	063 Move X3, X20
	064 Move X4, X19
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X24, [X31+16]
	070 Move X23, [X31+24]
	071 Move X30, [X31+64]
	072 CallNoReturn X6
	073 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiUsers> GetUsersAsync(Nakama.ISession session, System.Collections.Generic.IEnumerable`1<System.String> ids, System.Collections.Generic.IEnumerable`1<System.String> usernames = null, System.Collections.Generic.IEnumerable`1<System.String> facebookIds = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6CECC MOV X0, X26
	0x01D6CED0 BL 0x1C5C788
	0x01D6CED4 B 0x1D6CEE8
	0x01D6CED8 LDR W9, [X10]
	0x01D6CEDC ADD W9, W9, 0x34
	0x01D6CEE0 ADD X8, X8, W9, 0x4, SXTW
	0x01D6CEE4 ADD X0, X8, 0x138
	0x01D6CEE8 LDP X8, X9, [X0]
	0x01D6CEEC AND W4, W24, 0x1
	0x01D6CEF0 MOV X0, X26
	0x01D6CEF4 MOV X1, X25
	0x01D6CEF8 MOV X2, X23
	0x01D6CEFC MOV W3, W22
	0x01D6CF00 MOV X5, X21
	0x01D6CF04 MOV X6, X20
	0x01D6CF08 MOV X7, X19
	0x01D6CF0C LDP X20, X19, [X31 + 0x40]
	0x01D6CF10 LDP X22, X21, [X31 + 0x30]
	0x01D6CF14 LDP X24, X23, [X31 + 0x20]
	0x01D6CF18 LDP X26, X25, [X31 + 0x10]
	0x01D6CF1C STR X9, [X31 + 0x50]
	0x01D6CF20 LDP X30, X27, [X31], #0x50
	0x01D6CF24 BR X8
	0x01D6CF28 BL 0x1C16F20
	0x01D6CF2C STP X30, X27, [X31 - 0x50]!
	0x01D6CF30 STP X26, X25, [X31 + 0x10]
	0x01D6CF34 STP X24, X23, [X31 + 0x20]
	0x01D6CF38 STP X22, X21, [X31 + 0x30]
	0x01D6CF3C STP X20, X19, [X31 + 0x40]
	0x01D6CF40 ADRP X27, 0x266C000
	0x01D6CF44 ADRP X26, 0x2387000
	0x01D6CF48 LDRB W8, [X27 + 0x8C6]
	0x01D6CF4C LDR X26, [X26 + 0x658]
	0x01D6CF50 MOV X19, X7
	0x01D6CF54 MOV X20, X6
	0x01D6CF58 MOV X21, X5
	0x01D6CF5C MOV W24, W4
	0x01D6CF60 MOV W22, W3
	0x01D6CF64 MOV X23, X2
	0x01D6CF68 MOV X25, X1
	0x01D6CF6C TBNZ X8, 0x0, 0x1D6CF90
	0x01D6CF70 ADRP X0, 0x2387000
	0x01D6CF74 LDR X0, [X0 + 0x658]
	0x01D6CF78 BL 0x1C16CF4
	0x01D6CF7C ADRP X0, 0x2389000
	0x01D6CF80 LDR X0, [X0 + 0xA18]
	0x01D6CF84 BL 0x1C16CF4
	0x01D6CF88 MOVZ W8, 0x1
	0x01D6CF8C STRB W8, [X27 + 0x8C6]
	0x01D6CF90 LDR X0, [X26]
	0x01D6CF94 LDR W8, [X0 + 0xE0]
	0x01D6CF98 CBNZ W8, 0x1D6CFA4
	0x01D6CF9C BL 0x1C16DFC
	0x01D6CFA0 LDR X0, [X26]
	0x01D6CFA4 LDR X8, [X0 + 0xB8]
	0x01D6CFA8 LDR X26, [X8 + 0x10]
	0x01D6CFAC CBZ X26, 0x1D6D048
	0x01D6CFB0 ADRP X10, 0x2389000
	0x01D6CFB4 LDR X8, [X26]
	0x01D6CFB8 LDR X10, [X10 + 0xA18]
	0x01D6CFBC LDRH W9, [X8 + 0x12E]
	0x01D6CFC0 LDR X1, [X10]
	0x01D6CFC4 CBZ X9, 0x1D6CFE8
	0x01D6CFC8 LDR X10, [X8 + 0xB0]
	0x01D6CFCC ADD X10, X10, 0x8
	0x01D6CFD0 LDUR X11, [X10 - 0x8]
	0x01D6CFD4 CMP X11, X1
	0x01D6CFD8 B.EQ 0x1D6CFF8
	0x01D6CFDC SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x266D000
	011 Move X25, 0x2388000
	012 Move W8, [X26+2230]
	013 Move X25, [X25+1624]
	014 Move X19, X6
	015 Move X20, X5
	016 Move X21, X4
	017 Move X22, X3
	018 Move X23, X2
	019 Move X24, X1
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x2388000
	025 Move X0, [X0+1624]
	026 Call 0x1C17CF4
	027 Move X0, 0x238A000
	028 Move X0, [X0+2584]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X26+2230], W8
	032 Move X0, [X25]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X25]
	038 Move X8, [X0+184]
	039 Move X25, [X8+16]
	040 Compare X25, 0
	041 JumpIfEqual {81}
	042 Move X10, 0x238A000
	043 Move X8, [X25]
	044 Move X10, [X10+2584]
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Move X1, [X10]
	047 Compare X9, 0
	048 JumpIfEqual {55}
	049 Move X10, [X8+176]
	050 Add X10, X10, 8
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Subtract X9, X9, 1
	054 Add X10, X10, 16
	055 Move W2, 37
	056 Move X0, X25
	057 Call 0x1C5D788
	058 Move W9, [X10]
	059 Add W9, W9, 37
	060 Add X8, X8, W9
	061 Add X0, X8, 312
	062 Move X8, [X0]
	063 Move X7, [X0+8]
	064 Move X0, X25
	065 Move X1, X24
	066 Move X2, X23
	067 Move X3, X22
	068 Move X4, X21
	069 Move X5, X20
	070 Move X6, X19
	071 Move X20, [X31+64]
	072 Move X19, [X31+72]
	073 Move X22, [X31+48]
	074 Move X21, [X31+56]
	075 Move X24, [X31+32]
	076 Move X23, [X31+40]
	077 Move X26, [X31+16]
	078 Move X25, [X31+24]
	079 Move X30, [X31+80]
	080 CallNoReturn X8
	081 Call 0x1C17F20

Method: System.Threading.Tasks.Task ImportFacebookFriendsAsync(Nakama.ISession session, System.String token, System.Nullable`1<System.Boolean> reset = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6CFE0 ADD X10, X10, 0x10
	0x01D6CFE4 B.NE 0x1D6CFD0
	0x01D6CFE8 MOVZ W2, 0x35
	0x01D6CFEC MOV X0, X26
	0x01D6CFF0 BL 0x1C5C788
	0x01D6CFF4 B 0x1D6D008
	0x01D6CFF8 LDR W9, [X10]
	0x01D6CFFC ADD W9, W9, 0x35
	0x01D6D000 ADD X8, X8, W9, 0x4, SXTW
	0x01D6D004 ADD X0, X8, 0x138
	0x01D6D008 LDP X8, X9, [X0]
	0x01D6D00C AND W4, W24, 0x1
	0x01D6D010 MOV X0, X26
	0x01D6D014 MOV X1, X25
	0x01D6D018 MOV X2, X23
	0x01D6D01C MOV W3, W22
	0x01D6D020 MOV X5, X21
	0x01D6D024 MOV X6, X20
	0x01D6D028 MOV X7, X19
	0x01D6D02C LDP X20, X19, [X31 + 0x40]
	0x01D6D030 LDP X22, X21, [X31 + 0x30]
	0x01D6D034 LDP X24, X23, [X31 + 0x20]
	0x01D6D038 LDP X26, X25, [X31 + 0x10]
	0x01D6D03C STR X9, [X31 + 0x50]
	0x01D6D040 LDP X30, X27, [X31], #0x50
	0x01D6D044 BR X8
	0x01D6D048 BL 0x1C16F20
	0x01D6D04C STR X30, [X31 - 0x50]!
	0x01D6D050 STP X26, X25, [X31 + 0x10]
	0x01D6D054 STP X24, X23, [X31 + 0x20]
	0x01D6D058 STP X22, X21, [X31 + 0x30]
	0x01D6D05C STP X20, X19, [X31 + 0x40]
	0x01D6D060 ADRP X26, 0x266B000
	0x01D6D064 ADRP X25, 0x2386000
	0x01D6D068 LDRB W8, [X26 + 0x8C7]
	0x01D6D06C LDR X25, [X25 + 0x658]
	0x01D6D070 MOV X19, X6
	0x01D6D074 MOV X20, X5
	0x01D6D078 MOV X21, X4
	0x01D6D07C MOV W22, W3
	0x01D6D080 MOV X23, X2
	0x01D6D084 MOV X24, X1
	0x01D6D088 TBNZ X8, 0x0, 0x1D6D0AC
	0x01D6D08C ADRP X0, 0x2386000
	0x01D6D090 LDR X0, [X0 + 0x658]
	0x01D6D094 BL 0x1C16CF4
	0x01D6D098 ADRP X0, 0x2388000
	0x01D6D09C LDR X0, [X0 + 0xA18]
	0x01D6D0A0 BL 0x1C16CF4
	0x01D6D0A4 MOVZ W8, 0x1
	0x01D6D0A8 STRB W8, [X26 + 0x8C7]
	0x01D6D0AC LDR X0, [X25]
	0x01D6D0B0 LDR W8, [X0 + 0xE0]
	0x01D6D0B4 CBNZ W8, 0x1D6D0C0
	0x01D6D0B8 BL 0x1C16DFC
	0x01D6D0BC LDR X0, [X25]
	0x01D6D0C0 LDR X8, [X0 + 0xB8]
	0x01D6D0C4 LDR X25, [X8 + 0x10]
	0x01D6D0C8 CBZ X25, 0x1D6D15C
	0x01D6D0CC ADRP X10, 0x2388000
	0x01D6D0D0 LDR X8, [X25]
	0x01D6D0D4 LDR X10, [X10 + 0xA18]
	0x01D6D0D8 LDRH W9, [X8 + 0x12E]
	0x01D6D0DC LDR X1, [X10]
	0x01D6D0E0 CBZ X9, 0x1D6D104

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x266D000
	010 Move X24, 0x2388000
	011 Move W8, [X25+2231]
	012 Move X24, [X24+1624]
	013 Move X19, X5
	014 Move X20, X4
	015 Move X22, X3
	016 Move X21, X2
	017 Move X23, X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x2387000
	023 Move X0, [X0+1624]
	024 Call 0x1C17CF4
	025 Move X0, 0x2389000
	026 Move X0, [X0+2584]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+2231], W8
	030 Move X0, [X24]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X24]
	036 Move X8, [X0+184]
	037 Move X24, [X8+16]
	038 Compare X24, 0
	039 JumpIfEqual {77}
	040 Move X10, 0x2389000
	041 Move X8, [X24]
	042 Move X10, [X10+2584]
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move X1, [X10]
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move W2, 38
	054 Move X0, X24
	055 Call 0x1C5D788
	056 Move W9, [X10]
	057 Add W9, W9, 38
	058 Add X8, X8, W9
	059 Add X0, X8, 312
	060 Move X7, [X0]
	061 Move X6, [X0+8]
	062 And X3, X22, 0xFFFF
	063 Move X0, X24
	064 Move X1, X23
	065 Move X2, X21
	066 Move X4, X20
	067 Move X5, X19
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X30, [X31+64]
	075 Move X25, [X31+72]
	076 CallNoReturn X7
	077 Call 0x1C17F20

Method: System.Threading.Tasks.Task ImportSteamFriendsAsync(Nakama.ISession session, System.String token, System.Nullable`1<System.Boolean> reset = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6D0E4 LDR X10, [X8 + 0xB0]
	0x01D6D0E8 ADD X10, X10, 0x8
	0x01D6D0EC LDUR X11, [X10 - 0x8]
	0x01D6D0F0 CMP X11, X1
	0x01D6D0F4 B.EQ 0x1D6D114
	0x01D6D0F8 SUBS X9, X9, 0x1
	0x01D6D0FC ADD X10, X10, 0x10
	0x01D6D100 B.NE 0x1D6D0EC
	0x01D6D104 MOVZ W2, 0x36
	0x01D6D108 MOV X0, X25
	0x01D6D10C BL 0x1C5C788
	0x01D6D110 B 0x1D6D124
	0x01D6D114 LDR W9, [X10]
	0x01D6D118 ADD W9, W9, 0x36
	0x01D6D11C ADD X8, X8, W9, 0x4, SXTW
	0x01D6D120 ADD X0, X8, 0x138
	0x01D6D124 LDP X8, X7, [X0]
	0x01D6D128 MOV X0, X25
	0x01D6D12C MOV X1, X24
	0x01D6D130 MOV X2, X23
	0x01D6D134 MOV W3, W22
	0x01D6D138 MOV X4, X21
	0x01D6D13C MOV X5, X20
	0x01D6D140 MOV X6, X19
	0x01D6D144 LDP X20, X19, [X31 + 0x40]
	0x01D6D148 LDP X22, X21, [X31 + 0x30]
	0x01D6D14C LDP X24, X23, [X31 + 0x20]
	0x01D6D150 LDP X26, X25, [X31 + 0x10]
	0x01D6D154 LDR X30, [X31], #0x50
	0x01D6D158 BR X8
	0x01D6D15C BL 0x1C16F20
	0x01D6D160 STP X30, X27, [X31 - 0x50]!
	0x01D6D164 STP X26, X25, [X31 + 0x10]
	0x01D6D168 STP X24, X23, [X31 + 0x20]
	0x01D6D16C STP X22, X21, [X31 + 0x30]
	0x01D6D170 STP X20, X19, [X31 + 0x40]
	0x01D6D174 ADRP X27, 0x266B000
	0x01D6D178 ADRP X26, 0x2386000
	0x01D6D17C LDRB W8, [X27 + 0x8C8]
	0x01D6D180 LDR X26, [X26 + 0x658]
	0x01D6D184 MOV X19, X7
	0x01D6D188 MOV X20, X6
	0x01D6D18C MOV X21, X5
	0x01D6D190 MOV W22, W4
	0x01D6D194 MOV X23, X3
	0x01D6D198 MOV X24, X2
	0x01D6D19C MOV X25, X1
	0x01D6D1A0 TBNZ X8, 0x0, 0x1D6D1C4
	0x01D6D1A4 ADRP X0, 0x2386000
	0x01D6D1A8 LDR X0, [X0 + 0x658]
	0x01D6D1AC BL 0x1C16CF4
	0x01D6D1B0 ADRP X0, 0x2388000
	0x01D6D1B4 LDR X0, [X0 + 0xA18]
	0x01D6D1B8 BL 0x1C16CF4
	0x01D6D1BC MOVZ W8, 0x1
	0x01D6D1C0 STRB W8, [X27 + 0x8C8]
	0x01D6D1C4 LDR X0, [X26]
	0x01D6D1C8 LDR W8, [X0 + 0xE0]
	0x01D6D1CC CBNZ W8, 0x1D6D1D8
	0x01D6D1D0 BL 0x1C16DFC
	0x01D6D1D4 LDR X0, [X26]
	0x01D6D1D8 LDR X8, [X0 + 0xB8]
	0x01D6D1DC LDR X26, [X8 + 0x10]
	0x01D6D1E0 CBZ X26, 0x1D6D27C
	0x01D6D1E4 ADRP X10, 0x2388000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x266C000
	010 Move X24, 0x2387000
	011 Move W8, [X25+2232]
	012 Move X24, [X24+1624]
	013 Move X19, X5
	014 Move X20, X4
	015 Move X22, X3
	016 Move X21, X2
	017 Move X23, X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x2387000
	023 Move X0, [X0+1624]
	024 Call 0x1C17CF4
	025 Move X0, 0x2389000
	026 Move X0, [X0+2584]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+2232], W8
	030 Move X0, [X24]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X24]
	036 Move X8, [X0+184]
	037 Move X24, [X8+16]
	038 Compare X24, 0
	039 JumpIfEqual {77}
	040 Move X10, 0x2389000
	041 Move X8, [X24]
	042 Move X10, [X10+2584]
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move X1, [X10]
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move W2, 39
	054 Move X0, X24
	055 Call 0x1C5D788
	056 Move W9, [X10]
	057 Add W9, W9, 39
	058 Add X8, X8, W9
	059 Add X0, X8, 312
	060 Move X7, [X0]
	061 Move X6, [X0+8]
	062 And X3, X22, 0xFFFF
	063 Move X0, X24
	064 Move X1, X23
	065 Move X2, X21
	066 Move X4, X20
	067 Move X5, X19
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X30, [X31+64]
	075 Move X25, [X31+72]
	076 CallNoReturn X7
	077 Call 0x1C17F20

Method: System.Threading.Tasks.Task JoinGroupAsync(Nakama.ISession session, System.String groupId, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6D1E8 LDR X8, [X26]
	0x01D6D1EC LDR X10, [X10 + 0xA18]
	0x01D6D1F0 LDRH W9, [X8 + 0x12E]
	0x01D6D1F4 LDR X1, [X10]
	0x01D6D1F8 CBZ X9, 0x1D6D21C
	0x01D6D1FC LDR X10, [X8 + 0xB0]
	0x01D6D200 ADD X10, X10, 0x8
	0x01D6D204 LDUR X11, [X10 - 0x8]
	0x01D6D208 CMP X11, X1
	0x01D6D20C B.EQ 0x1D6D22C
	0x01D6D210 SUBS X9, X9, 0x1
	0x01D6D214 ADD X10, X10, 0x10
	0x01D6D218 B.NE 0x1D6D204
	0x01D6D21C MOVZ W2, 0x37
	0x01D6D220 MOV X0, X26
	0x01D6D224 BL 0x1C5C788
	0x01D6D228 B 0x1D6D23C
	0x01D6D22C LDR W9, [X10]
	0x01D6D230 ADD W9, W9, 0x37
	0x01D6D234 ADD X8, X8, W9, 0x4, SXTW
	0x01D6D238 ADD X0, X8, 0x138
	0x01D6D23C LDP X8, X9, [X0]
	0x01D6D240 MOV X0, X26
	0x01D6D244 MOV X1, X25
	0x01D6D248 MOV X2, X24
	0x01D6D24C MOV X3, X23
	0x01D6D250 MOV W4, W22
	0x01D6D254 MOV X5, X21
	0x01D6D258 MOV X6, X20
	0x01D6D25C MOV X7, X19
	0x01D6D260 LDP X20, X19, [X31 + 0x40]
	0x01D6D264 LDP X22, X21, [X31 + 0x30]
	0x01D6D268 LDP X24, X23, [X31 + 0x20]
	0x01D6D26C LDP X26, X25, [X31 + 0x10]
	0x01D6D270 STR X9, [X31 + 0x50]
	0x01D6D274 LDP X30, X27, [X31], #0x50
	0x01D6D278 BR X8
	0x01D6D27C BL 0x1C16F20
	0x01D6D280 STP X29, X30, [X31 - 0x60]!
	0x01D6D284 STP X28, X27, [X31 + 0x10]
	0x01D6D288 STP X26, X25, [X31 + 0x20]
	0x01D6D28C STP X24, X23, [X31 + 0x30]
	0x01D6D290 STP X22, X21, [X31 + 0x40]
	0x01D6D294 STP X20, X19, [X31 + 0x50]
	0x01D6D298 ADRP X29, 0x266B000
	0x01D6D29C ADRP X26, 0x2386000
	0x01D6D2A0 LDRB W8, [X29 + 0x8C9]
	0x01D6D2A4 LDP X27, X28, [X31 + 0x60]
	0x01D6D2A8 LDR X26, [X26 + 0x658]
	0x01D6D2AC MOV X24, X7
	0x01D6D2B0 MOV X19, X6
	0x01D6D2B4 MOV X20, X5
	0x01D6D2B8 MOV X21, X4
	0x01D6D2BC MOV W22, W3
	0x01D6D2C0 MOV X23, X2
	0x01D6D2C4 MOV X25, X1
	0x01D6D2C8 TBNZ X8, 0x0, 0x1D6D2EC
	0x01D6D2CC ADRP X0, 0x2386000
	0x01D6D2D0 LDR X0, [X0 + 0x658]
	0x01D6D2D4 BL 0x1C16CF4
	0x01D6D2D8 ADRP X0, 0x2388000
	0x01D6D2DC LDR X0, [X0 + 0xA18]
	0x01D6D2E0 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x266C000
	009 Move X23, 0x2387000
	010 Move W8, [X24+2233]
	011 Move X23, [X23+1624]
	012 Move X19, X4
	013 Move X20, X3
	014 Move X21, X2
	015 Move X22, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x2387000
	021 Move X0, [X0+1624]
	022 Call 0x1C17CF4
	023 Move X0, 0x2389000
	024 Move X0, [X0+2584]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+2233], W8
	028 Move X0, [X23]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X23]
	034 Move X8, [X0+184]
	035 Move X23, [X8+16]
	036 Compare X23, 0
	037 JumpIfEqual {73}
	038 Move X10, 0x2389000
	039 Move X8, [X23]
	040 Move X10, [X10+2584]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X10]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move W2, 40
	052 Move X0, X23
	053 Call 0x1C5D788
	054 Move W9, [X10]
	055 Add W9, W9, 40
	056 Add X8, X8, W9
	057 Add X0, X8, 312
	058 Move X6, [X0]
	059 Move X5, [X0+8]
	060 Move X0, X23
	061 Move X1, X22
	062 Move X2, X21
	063 Move X3, X20
	064 Move X4, X19
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X24, [X31+16]
	070 Move X23, [X31+24]
	071 Move X30, [X31+64]
	072 CallNoReturn X6
	073 Call 0x1C17F20

Method: System.Threading.Tasks.Task JoinTournamentAsync(Nakama.ISession session, System.String tournamentId, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6D2E4 MOVZ W8, 0x1
	0x01D6D2E8 STRB W8, [X29 + 0x8C9]
	0x01D6D2EC LDR X0, [X26]
	0x01D6D2F0 LDR W8, [X0 + 0xE0]
	0x01D6D2F4 CBNZ W8, 0x1D6D300
	0x01D6D2F8 BL 0x1C16DFC
	0x01D6D2FC LDR X0, [X26]
	0x01D6D300 LDR X8, [X0 + 0xB8]
	0x01D6D304 LDR X26, [X8 + 0x10]
	0x01D6D308 CBZ X26, 0x1D6D3AC
	0x01D6D30C ADRP X10, 0x2388000
	0x01D6D310 LDR X8, [X26]
	0x01D6D314 LDR X10, [X10 + 0xA18]
	0x01D6D318 LDRH W9, [X8 + 0x12E]
	0x01D6D31C LDR X1, [X10]
	0x01D6D320 CBZ X9, 0x1D6D344
	0x01D6D324 LDR X10, [X8 + 0xB0]
	0x01D6D328 ADD X10, X10, 0x8
	0x01D6D32C LDUR X11, [X10 - 0x8]
	0x01D6D330 CMP X11, X1
	0x01D6D334 B.EQ 0x1D6D354
	0x01D6D338 SUBS X9, X9, 0x1
	0x01D6D33C ADD X10, X10, 0x10
	0x01D6D340 B.NE 0x1D6D32C
	0x01D6D344 MOVZ W2, 0x38
	0x01D6D348 MOV X0, X26
	0x01D6D34C BL 0x1C5C788
	0x01D6D350 B 0x1D6D364
	0x01D6D354 LDR W9, [X10]
	0x01D6D358 ADD W9, W9, 0x38
	0x01D6D35C ADD X8, X8, W9, 0x4, SXTW
	0x01D6D360 ADD X0, X8, 0x138
	0x01D6D364 LDP X9, X8, [X0]
	0x01D6D368 AND X7, X24, 0xFFFF
	0x01D6D36C STR X27, [X31 + 0x60]
	0x01D6D370 MOV X0, X26
	0x01D6D374 STP X28, X8, [X31 + 0x68]
	0x01D6D378 MOV X1, X25
	0x01D6D37C MOV X2, X23
	0x01D6D380 MOV W3, W22
	0x01D6D384 MOV X4, X21
	0x01D6D388 MOV X5, X20
	0x01D6D38C MOV X6, X19
	0x01D6D390 LDP X20, X19, [X31 + 0x50]
	0x01D6D394 LDP X22, X21, [X31 + 0x40]
	0x01D6D398 LDP X24, X23, [X31 + 0x30]
	0x01D6D39C LDP X26, X25, [X31 + 0x20]
	0x01D6D3A0 LDP X28, X27, [X31 + 0x10]
	0x01D6D3A4 LDP X29, X30, [X31], #0x60
	0x01D6D3A8 BR X9
	0x01D6D3AC BL 0x1C16F20
	0x01D6D3B0 STP X29, X30, [X31 - 0x60]!
	0x01D6D3B4 STP X28, X27, [X31 + 0x10]
	0x01D6D3B8 STP X26, X25, [X31 + 0x20]
	0x01D6D3BC STP X24, X23, [X31 + 0x30]
	0x01D6D3C0 STP X22, X21, [X31 + 0x40]
	0x01D6D3C4 STP X20, X19, [X31 + 0x50]
	0x01D6D3C8 ADRP X29, 0x266B000
	0x01D6D3CC ADRP X26, 0x2386000
	0x01D6D3D0 LDRB W8, [X29 + 0x8CA]
	0x01D6D3D4 LDP X27, X28, [X31 + 0x60]
	0x01D6D3D8 LDR X26, [X26 + 0x658]
	0x01D6D3DC MOV X19, X7

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x266C000
	009 Move X23, 0x2387000
	010 Move W8, [X24+2234]
	011 Move X23, [X23+1624]
	012 Move X19, X4
	013 Move X20, X3
	014 Move X21, X2
	015 Move X22, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x2387000
	021 Move X0, [X0+1624]
	022 Call 0x1C17CF4
	023 Move X0, 0x2389000
	024 Move X0, [X0+2584]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+2234], W8
	028 Move X0, [X23]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X23]
	034 Move X8, [X0+184]
	035 Move X23, [X8+16]
	036 Compare X23, 0
	037 JumpIfEqual {73}
	038 Move X10, 0x2389000
	039 Move X8, [X23]
	040 Move X10, [X10+2584]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X10]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move W2, 41
	052 Move X0, X23
	053 Call 0x1C5D788
	054 Move W9, [X10]
	055 Add W9, W9, 41
	056 Add X8, X8, W9
	057 Add X0, X8, 312
	058 Move X6, [X0]
	059 Move X5, [X0+8]
	060 Move X0, X23
	061 Move X1, X22
	062 Move X2, X21
	063 Move X3, X20
	064 Move X4, X19
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X24, [X31+16]
	070 Move X23, [X31+24]
	071 Move X30, [X31+64]
	072 CallNoReturn X6
	073 Call 0x1C17F20

Method: System.Threading.Tasks.Task KickGroupUsersAsync(Nakama.ISession session, System.String groupId, System.Collections.Generic.IEnumerable`1<System.String> ids, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6D3E0 MOV W20, W6
	0x01D6D3E4 MOV X21, X5
	0x01D6D3E8 MOV X22, X4
	0x01D6D3EC MOV X23, X3
	0x01D6D3F0 MOV X24, X2
	0x01D6D3F4 MOV X25, X1
	0x01D6D3F8 TBNZ X8, 0x0, 0x1D6D41C
	0x01D6D3FC ADRP X0, 0x2386000
	0x01D6D400 LDR X0, [X0 + 0x658]
	0x01D6D404 BL 0x1C16CF4
	0x01D6D408 ADRP X0, 0x2388000
	0x01D6D40C LDR X0, [X0 + 0xA18]
	0x01D6D410 BL 0x1C16CF4
	0x01D6D414 MOVZ W8, 0x1
	0x01D6D418 STRB W8, [X29 + 0x8CA]
	0x01D6D41C LDR X0, [X26]
	0x01D6D420 LDR W8, [X0 + 0xE0]
	0x01D6D424 CBNZ W8, 0x1D6D430
	0x01D6D428 BL 0x1C16DFC
	0x01D6D42C LDR X0, [X26]
	0x01D6D430 LDR X8, [X0 + 0xB8]
	0x01D6D434 LDR X26, [X8 + 0x10]
	0x01D6D438 CBZ X26, 0x1D6D4DC
	0x01D6D43C ADRP X10, 0x2388000
	0x01D6D440 LDR X8, [X26]
	0x01D6D444 LDR X10, [X10 + 0xA18]
	0x01D6D448 LDRH W9, [X8 + 0x12E]
	0x01D6D44C LDR X1, [X10]
	0x01D6D450 CBZ X9, 0x1D6D474
	0x01D6D454 LDR X10, [X8 + 0xB0]
	0x01D6D458 ADD X10, X10, 0x8
	0x01D6D45C LDUR X11, [X10 - 0x8]
	0x01D6D460 CMP X11, X1
	0x01D6D464 B.EQ 0x1D6D484
	0x01D6D468 SUBS X9, X9, 0x1
	0x01D6D46C ADD X10, X10, 0x10
	0x01D6D470 B.NE 0x1D6D45C
	0x01D6D474 MOVZ W2, 0x39
	0x01D6D478 MOV X0, X26
	0x01D6D47C BL 0x1C5C788
	0x01D6D480 B 0x1D6D494
	0x01D6D484 LDR W9, [X10]
	0x01D6D488 ADD W9, W9, 0x39
	0x01D6D48C ADD X8, X8, W9, 0x4, SXTW
	0x01D6D490 ADD X0, X8, 0x138
	0x01D6D494 LDP X9, X8, [X0]
	0x01D6D498 STR X27, [X31 + 0x60]
	0x01D6D49C MOV X0, X26
	0x01D6D4A0 MOV X1, X25
	0x01D6D4A4 STP X28, X8, [X31 + 0x68]
	0x01D6D4A8 MOV X2, X24
	0x01D6D4AC MOV X3, X23
	0x01D6D4B0 MOV X4, X22
	0x01D6D4B4 MOV X5, X21
	0x01D6D4B8 MOV W6, W20
	0x01D6D4BC MOV X7, X19
	0x01D6D4C0 LDP X20, X19, [X31 + 0x50]
	0x01D6D4C4 LDP X22, X21, [X31 + 0x40]
	0x01D6D4C8 LDP X24, X23, [X31 + 0x30]
	0x01D6D4CC LDP X26, X25, [X31 + 0x20]
	0x01D6D4D0 LDP X28, X27, [X31 + 0x10]
	0x01D6D4D4 LDP X29, X30, [X31], #0x60
	0x01D6D4D8 BR X9
	0x01D6D4DC BL 0x1C16F20
	0x01D6D4E0 STP X29, X30, [X31 - 0x60]!

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x266C000
	010 Move X24, 0x2387000
	011 Move W8, [X25+2235]
	012 Move X24, [X24+1624]
	013 Move X19, X5
	014 Move X20, X4
	015 Move X21, X3
	016 Move X22, X2
	017 Move X23, X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x2387000
	023 Move X0, [X0+1624]
	024 Call 0x1C17CF4
	025 Move X0, 0x2389000
	026 Move X0, [X0+2584]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+2235], W8
	030 Move X0, [X24]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X24]
	036 Move X8, [X0+184]
	037 Move X24, [X8+16]
	038 Compare X24, 0
	039 JumpIfEqual {77}
	040 Move X10, 0x2389000
	041 Move X8, [X24]
	042 Move X10, [X10+2584]
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move X1, [X10]
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move W2, 42
	054 Move X0, X24
	055 Call 0x1C5D788
	056 Move W9, [X10]
	057 Add W9, W9, 42
	058 Add X8, X8, W9
	059 Add X0, X8, 312
	060 Move X7, [X0]
	061 Move X6, [X0+8]
	062 Move X0, X24
	063 Move X1, X23
	064 Move X2, X22
	065 Move X3, X21
	066 Move X4, X20
	067 Move X5, X19
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X30, [X31+64]
	075 Move X25, [X31+72]
	076 CallNoReturn X7
	077 Call 0x1C17F20

Method: System.Threading.Tasks.Task LeaveGroupAsync(Nakama.ISession session, System.String groupId, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6D4E4 STP X28, X27, [X31 + 0x10]
	0x01D6D4E8 STP X26, X25, [X31 + 0x20]
	0x01D6D4EC STP X24, X23, [X31 + 0x30]
	0x01D6D4F0 STP X22, X21, [X31 + 0x40]
	0x01D6D4F4 STP X20, X19, [X31 + 0x50]
	0x01D6D4F8 ADRP X29, 0x266B000
	0x01D6D4FC ADRP X26, 0x2386000
	0x01D6D500 LDRB W8, [X29 + 0x8CB]
	0x01D6D504 LDP X27, X28, [X31 + 0x60]
	0x01D6D508 LDR X26, [X26 + 0x658]
	0x01D6D50C MOV X19, X7
	0x01D6D510 MOV W20, W6
	0x01D6D514 MOV X21, X5
	0x01D6D518 MOV X22, X4
	0x01D6D51C MOV X23, X3
	0x01D6D520 MOV X24, X2
	0x01D6D524 MOV X25, X1
	0x01D6D528 TBNZ X8, 0x0, 0x1D6D54C
	0x01D6D52C ADRP X0, 0x2386000
	0x01D6D530 LDR X0, [X0 + 0x658]
	0x01D6D534 BL 0x1C16CF4
	0x01D6D538 ADRP X0, 0x2388000
	0x01D6D53C LDR X0, [X0 + 0xA18]
	0x01D6D540 BL 0x1C16CF4
	0x01D6D544 MOVZ W8, 0x1
	0x01D6D548 STRB W8, [X29 + 0x8CB]
	0x01D6D54C LDR X0, [X26]
	0x01D6D550 LDR W8, [X0 + 0xE0]
	0x01D6D554 CBNZ W8, 0x1D6D560
	0x01D6D558 BL 0x1C16DFC
	0x01D6D55C LDR X0, [X26]
	0x01D6D560 LDR X8, [X0 + 0xB8]
	0x01D6D564 LDR X26, [X8 + 0x10]
	0x01D6D568 CBZ X26, 0x1D6D60C
	0x01D6D56C ADRP X10, 0x2388000
	0x01D6D570 LDR X8, [X26]
	0x01D6D574 LDR X10, [X10 + 0xA18]
	0x01D6D578 LDRH W9, [X8 + 0x12E]
	0x01D6D57C LDR X1, [X10]
	0x01D6D580 CBZ X9, 0x1D6D5A4
	0x01D6D584 LDR X10, [X8 + 0xB0]
	0x01D6D588 ADD X10, X10, 0x8
	0x01D6D58C LDUR X11, [X10 - 0x8]
	0x01D6D590 CMP X11, X1
	0x01D6D594 B.EQ 0x1D6D5B4
	0x01D6D598 SUBS X9, X9, 0x1
	0x01D6D59C ADD X10, X10, 0x10
	0x01D6D5A0 B.NE 0x1D6D58C
	0x01D6D5A4 MOVZ W2, 0x3A
	0x01D6D5A8 MOV X0, X26
	0x01D6D5AC BL 0x1C5C788
	0x01D6D5B0 B 0x1D6D5C4
	0x01D6D5B4 LDR W9, [X10]
	0x01D6D5B8 ADD W9, W9, 0x3A
	0x01D6D5BC ADD X8, X8, W9, 0x4, SXTW
	0x01D6D5C0 ADD X0, X8, 0x138
	0x01D6D5C4 LDP X9, X8, [X0]
	0x01D6D5C8 STR X27, [X31 + 0x60]
	0x01D6D5CC MOV X0, X26
	0x01D6D5D0 MOV X1, X25
	0x01D6D5D4 STP X28, X8, [X31 + 0x68]
	0x01D6D5D8 MOV X2, X24
	0x01D6D5DC MOV X3, X23

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x266C000
	009 Move X23, 0x2387000
	010 Move W8, [X24+2236]
	011 Move X23, [X23+1624]
	012 Move X19, X4
	013 Move X20, X3
	014 Move X21, X2
	015 Move X22, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x2387000
	021 Move X0, [X0+1624]
	022 Call 0x1C17CF4
	023 Move X0, 0x2389000
	024 Move X0, [X0+2584]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+2236], W8
	028 Move X0, [X23]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X23]
	034 Move X8, [X0+184]
	035 Move X23, [X8+16]
	036 Compare X23, 0
	037 JumpIfEqual {73}
	038 Move X10, 0x2389000
	039 Move X8, [X23]
	040 Move X10, [X10+2584]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X10]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move W2, 43
	052 Move X0, X23
	053 Call 0x1C5D788
	054 Move W9, [X10]
	055 Add W9, W9, 43
	056 Add X8, X8, W9
	057 Add X0, X8, 312
	058 Move X6, [X0]
	059 Move X5, [X0+8]
	060 Move X0, X23
	061 Move X1, X22
	062 Move X2, X21
	063 Move X3, X20
	064 Move X4, X19
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X24, [X31+16]
	070 Move X23, [X31+24]
	071 Move X30, [X31+64]
	072 CallNoReturn X6
	073 Call 0x1C17F20

Method: System.Threading.Tasks.Task LinkAppleAsync(Nakama.ISession session, System.String token, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6D5E0 MOV X4, X22
	0x01D6D5E4 MOV X5, X21
	0x01D6D5E8 MOV W6, W20
	0x01D6D5EC MOV X7, X19
	0x01D6D5F0 LDP X20, X19, [X31 + 0x50]
	0x01D6D5F4 LDP X22, X21, [X31 + 0x40]
	0x01D6D5F8 LDP X24, X23, [X31 + 0x30]
	0x01D6D5FC LDP X26, X25, [X31 + 0x20]
	0x01D6D600 LDP X28, X27, [X31 + 0x10]
	0x01D6D604 LDP X29, X30, [X31], #0x60
	0x01D6D608 BR X9
	0x01D6D60C BL 0x1C16F20
	0x01D6D610 STP X29, X30, [X31 - 0x60]!
	0x01D6D614 STP X28, X27, [X31 + 0x10]
	0x01D6D618 STP X26, X25, [X31 + 0x20]
	0x01D6D61C STP X24, X23, [X31 + 0x30]
	0x01D6D620 STP X22, X21, [X31 + 0x40]
	0x01D6D624 STP X20, X19, [X31 + 0x50]
	0x01D6D628 ADRP X29, 0x266B000
	0x01D6D62C ADRP X26, 0x2386000
	0x01D6D630 LDRB W8, [X29 + 0x8CC]
	0x01D6D634 LDP X27, X28, [X31 + 0x60]
	0x01D6D638 LDR X26, [X26 + 0x658]
	0x01D6D63C MOV X19, X7
	0x01D6D640 MOV X20, X6
	0x01D6D644 MOV W24, W5
	0x01D6D648 MOV W21, W4
	0x01D6D64C MOV W22, W3
	0x01D6D650 MOV W23, W2
	0x01D6D654 MOV X25, X1
	0x01D6D658 TBNZ X8, 0x0, 0x1D6D67C
	0x01D6D65C ADRP X0, 0x2386000
	0x01D6D660 LDR X0, [X0 + 0x658]
	0x01D6D664 BL 0x1C16CF4
	0x01D6D668 ADRP X0, 0x2388000
	0x01D6D66C LDR X0, [X0 + 0xA18]
	0x01D6D670 BL 0x1C16CF4
	0x01D6D674 MOVZ W8, 0x1
	0x01D6D678 STRB W8, [X29 + 0x8CC]
	0x01D6D67C LDR X0, [X26]
	0x01D6D680 LDR W8, [X0 + 0xE0]
	0x01D6D684 CBNZ W8, 0x1D6D690
	0x01D6D688 BL 0x1C16DFC
	0x01D6D68C LDR X0, [X26]
	0x01D6D690 LDR X8, [X0 + 0xB8]
	0x01D6D694 LDR X26, [X8 + 0x10]
	0x01D6D698 CBZ X26, 0x1D6D73C
	0x01D6D69C ADRP X10, 0x2388000
	0x01D6D6A0 LDR X8, [X26]
	0x01D6D6A4 LDR X10, [X10 + 0xA18]
	0x01D6D6A8 LDRH W9, [X8 + 0x12E]
	0x01D6D6AC LDR X1, [X10]
	0x01D6D6B0 CBZ X9, 0x1D6D6D4
	0x01D6D6B4 LDR X10, [X8 + 0xB0]
	0x01D6D6B8 ADD X10, X10, 0x8
	0x01D6D6BC LDUR X11, [X10 - 0x8]
	0x01D6D6C0 CMP X11, X1
	0x01D6D6C4 B.EQ 0x1D6D6E4
	0x01D6D6C8 SUBS X9, X9, 0x1
	0x01D6D6CC ADD X10, X10, 0x10
	0x01D6D6D0 B.NE 0x1D6D6BC
	0x01D6D6D4 MOVZ W2, 0x3B
	0x01D6D6D8 MOV X0, X26

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x266C000
	009 Move X23, 0x2387000
	010 Move W8, [X24+2237]
	011 Move X23, [X23+1624]
	012 Move X19, X4
	013 Move X20, X3
	014 Move X21, X2
	015 Move X22, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x2387000
	021 Move X0, [X0+1624]
	022 Call 0x1C17CF4
	023 Move X0, 0x2389000
	024 Move X0, [X0+2584]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+2237], W8
	028 Move X0, [X23]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X23]
	034 Move X8, [X0+184]
	035 Move X23, [X8+16]
	036 Compare X23, 0
	037 JumpIfEqual {73}
	038 Move X10, 0x2389000
	039 Move X8, [X23]
	040 Move X10, [X10+2584]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X10]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move W2, 44
	052 Move X0, X23
	053 Call 0x1C5D788
	054 Move W9, [X10]
	055 Add W9, W9, 44
	056 Add X8, X8, W9
	057 Add X0, X8, 312
	058 Move X6, [X0]
	059 Move X5, [X0+8]
	060 Move X0, X23
	061 Move X1, X22
	062 Move X2, X21
	063 Move X3, X20
	064 Move X4, X19
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X24, [X31+16]
	070 Move X23, [X31+24]
	071 Move X30, [X31+64]
	072 CallNoReturn X6
	073 Call 0x1C17F20

Method: System.Threading.Tasks.Task LinkCustomAsync(Nakama.ISession session, System.String id, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6D6DC BL 0x1C5C788
	0x01D6D6E0 B 0x1D6D6F4
	0x01D6D6E4 LDR W9, [X10]
	0x01D6D6E8 ADD W9, W9, 0x3B
	0x01D6D6EC ADD X8, X8, W9, 0x4, SXTW
	0x01D6D6F0 ADD X0, X8, 0x138
	0x01D6D6F4 LDP X9, X8, [X0]
	0x01D6D6F8 AND W5, W24, 0x1
	0x01D6D6FC STR X27, [X31 + 0x60]
	0x01D6D700 MOV X0, X26
	0x01D6D704 STP X28, X8, [X31 + 0x68]
	0x01D6D708 MOV X1, X25
	0x01D6D70C MOV W2, W23
	0x01D6D710 MOV W3, W22
	0x01D6D714 MOV W4, W21
	0x01D6D718 MOV X6, X20
	0x01D6D71C MOV X7, X19
	0x01D6D720 LDP X20, X19, [X31 + 0x50]
	0x01D6D724 LDP X22, X21, [X31 + 0x40]
	0x01D6D728 LDP X24, X23, [X31 + 0x30]
	0x01D6D72C LDP X26, X25, [X31 + 0x20]
	0x01D6D730 LDP X28, X27, [X31 + 0x10]
	0x01D6D734 LDP X29, X30, [X31], #0x60
	0x01D6D738 BR X9
	0x01D6D73C BL 0x1C16F20
	0x01D6D740 STP X30, X25, [X31 - 0x40]!
	0x01D6D744 STP X24, X23, [X31 + 0x10]
	0x01D6D748 STP X22, X21, [X31 + 0x20]
	0x01D6D74C STP X20, X19, [X31 + 0x30]
	0x01D6D750 ADRP X25, 0x266B000
	0x01D6D754 ADRP X24, 0x2386000
	0x01D6D758 LDRB W8, [X25 + 0x8CD]
	0x01D6D75C LDR X24, [X24 + 0x658]
	0x01D6D760 MOV X19, X5
	0x01D6D764 MOV X20, X4
	0x01D6D768 MOV X21, X3
	0x01D6D76C MOV W22, W2
	0x01D6D770 MOV X23, X1
	0x01D6D774 TBNZ X8, 0x0, 0x1D6D798
	0x01D6D778 ADRP X0, 0x2386000
	0x01D6D77C LDR X0, [X0 + 0x658]
	0x01D6D780 BL 0x1C16CF4
	0x01D6D784 ADRP X0, 0x2388000
	0x01D6D788 LDR X0, [X0 + 0xA18]
	0x01D6D78C BL 0x1C16CF4
	0x01D6D790 MOVZ W8, 0x1
	0x01D6D794 STRB W8, [X25 + 0x8CD]
	0x01D6D798 LDR X0, [X24]
	0x01D6D79C LDR W8, [X0 + 0xE0]
	0x01D6D7A0 CBNZ W8, 0x1D6D7AC
	0x01D6D7A4 BL 0x1C16DFC
	0x01D6D7A8 LDR X0, [X24]
	0x01D6D7AC LDR X8, [X0 + 0xB8]
	0x01D6D7B0 LDR X24, [X8 + 0x10]
	0x01D6D7B4 CBZ X24, 0x1D6D840
	0x01D6D7B8 ADRP X10, 0x2388000
	0x01D6D7BC LDR X8, [X24]
	0x01D6D7C0 LDR X10, [X10 + 0xA18]
	0x01D6D7C4 LDRH W9, [X8 + 0x12E]
	0x01D6D7C8 LDR X1, [X10]
	0x01D6D7CC CBZ X9, 0x1D6D7F0
	0x01D6D7D0 LDR X10, [X8 + 0xB0]
	0x01D6D7D4 ADD X10, X10, 0x8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x266C000
	009 Move X23, 0x2387000
	010 Move W8, [X24+2238]
	011 Move X23, [X23+1624]
	012 Move X19, X4
	013 Move X20, X3
	014 Move X21, X2
	015 Move X22, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x2387000
	021 Move X0, [X0+1624]
	022 Call 0x1C17CF4
	023 Move X0, 0x2389000
	024 Move X0, [X0+2584]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+2238], W8
	028 Move X0, [X23]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X23]
	034 Move X8, [X0+184]
	035 Move X23, [X8+16]
	036 Compare X23, 0
	037 JumpIfEqual {73}
	038 Move X10, 0x2389000
	039 Move X8, [X23]
	040 Move X10, [X10+2584]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X10]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move W2, 45
	052 Move X0, X23
	053 Call 0x1C5D788
	054 Move W9, [X10]
	055 Add W9, W9, 45
	056 Add X8, X8, W9
	057 Add X0, X8, 312
	058 Move X6, [X0]
	059 Move X5, [X0+8]
	060 Move X0, X23
	061 Move X1, X22
	062 Move X2, X21
	063 Move X3, X20
	064 Move X4, X19
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X24, [X31+16]
	070 Move X23, [X31+24]
	071 Move X30, [X31+64]
	072 CallNoReturn X6
	073 Call 0x1C17F20

Method: System.Threading.Tasks.Task LinkDeviceAsync(Nakama.ISession session, System.String id, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6D7D8 LDUR X11, [X10 - 0x8]
	0x01D6D7DC CMP X11, X1
	0x01D6D7E0 B.EQ 0x1D6D800
	0x01D6D7E4 SUBS X9, X9, 0x1
	0x01D6D7E8 ADD X10, X10, 0x10
	0x01D6D7EC B.NE 0x1D6D7D8
	0x01D6D7F0 MOVZ W2, 0x3C
	0x01D6D7F4 MOV X0, X24
	0x01D6D7F8 BL 0x1C5C788
	0x01D6D7FC B 0x1D6D810
	0x01D6D800 LDR W9, [X10]
	0x01D6D804 ADD W9, W9, 0x3C
	0x01D6D808 ADD X8, X8, W9, 0x4, SXTW
	0x01D6D80C ADD X0, X8, 0x138
	0x01D6D810 LDP X7, X6, [X0]
	0x01D6D814 MOV X0, X24
	0x01D6D818 MOV X1, X23
	0x01D6D81C MOV W2, W22
	0x01D6D820 MOV X3, X21
	0x01D6D824 MOV X4, X20
	0x01D6D828 MOV X5, X19
	0x01D6D82C LDP X20, X19, [X31 + 0x30]
	0x01D6D830 LDP X22, X21, [X31 + 0x20]
	0x01D6D834 LDP X24, X23, [X31 + 0x10]
	0x01D6D838 LDP X30, X25, [X31], #0x40
	0x01D6D83C BR X7
	0x01D6D840 BL 0x1C16F20
	0x01D6D844 STR X30, [X31 - 0x50]!
	0x01D6D848 STP X26, X25, [X31 + 0x10]
	0x01D6D84C STP X24, X23, [X31 + 0x20]
	0x01D6D850 STP X22, X21, [X31 + 0x30]
	0x01D6D854 STP X20, X19, [X31 + 0x40]
	0x01D6D858 ADRP X26, 0x266B000
	0x01D6D85C ADRP X25, 0x2386000
	0x01D6D860 LDRB W8, [X26 + 0x8CE]
	0x01D6D864 LDR X25, [X25 + 0x658]
	0x01D6D868 MOV X19, X6
	0x01D6D86C MOV X20, X5
	0x01D6D870 MOV X21, X4
	0x01D6D874 MOV W22, W3
	0x01D6D878 MOV X23, X2
	0x01D6D87C MOV X24, X1
	0x01D6D880 TBNZ X8, 0x0, 0x1D6D8A4
	0x01D6D884 ADRP X0, 0x2386000
	0x01D6D888 LDR X0, [X0 + 0x658]
	0x01D6D88C BL 0x1C16CF4
	0x01D6D890 ADRP X0, 0x2388000
	0x01D6D894 LDR X0, [X0 + 0xA18]
	0x01D6D898 BL 0x1C16CF4
	0x01D6D89C MOVZ W8, 0x1
	0x01D6D8A0 STRB W8, [X26 + 0x8CE]
	0x01D6D8A4 LDR X0, [X25]
	0x01D6D8A8 LDR W8, [X0 + 0xE0]
	0x01D6D8AC CBNZ W8, 0x1D6D8B8
	0x01D6D8B0 BL 0x1C16DFC
	0x01D6D8B4 LDR X0, [X25]
	0x01D6D8B8 LDR X8, [X0 + 0xB8]
	0x01D6D8BC LDR X25, [X8 + 0x10]
	0x01D6D8C0 CBZ X25, 0x1D6D954
	0x01D6D8C4 ADRP X10, 0x2388000
	0x01D6D8C8 LDR X8, [X25]
	0x01D6D8CC LDR X10, [X10 + 0xA18]
	0x01D6D8D0 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x266C000
	009 Move X23, 0x2387000
	010 Move W8, [X24+2239]
	011 Move X23, [X23+1624]
	012 Move X19, X4
	013 Move X20, X3
	014 Move X21, X2
	015 Move X22, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x2387000
	021 Move X0, [X0+1624]
	022 Call 0x1C17CF4
	023 Move X0, 0x2389000
	024 Move X0, [X0+2584]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+2239], W8
	028 Move X0, [X23]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X23]
	034 Move X8, [X0+184]
	035 Move X23, [X8+16]
	036 Compare X23, 0
	037 JumpIfEqual {73}
	038 Move X10, 0x2389000
	039 Move X8, [X23]
	040 Move X10, [X10+2584]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X10]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move W2, 46
	052 Move X0, X23
	053 Call 0x1C5D788
	054 Move W9, [X10]
	055 Add W9, W9, 46
	056 Add X8, X8, W9
	057 Add X0, X8, 312
	058 Move X6, [X0]
	059 Move X5, [X0+8]
	060 Move X0, X23
	061 Move X1, X22
	062 Move X2, X21
	063 Move X3, X20
	064 Move X4, X19
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X24, [X31+16]
	070 Move X23, [X31+24]
	071 Move X30, [X31+64]
	072 CallNoReturn X6
	073 Call 0x1C17F20

Method: System.Threading.Tasks.Task LinkEmailAsync(Nakama.ISession session, System.String email, System.String password, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6D8D4 LDR X1, [X10]
	0x01D6D8D8 CBZ X9, 0x1D6D8FC
	0x01D6D8DC LDR X10, [X8 + 0xB0]
	0x01D6D8E0 ADD X10, X10, 0x8
	0x01D6D8E4 LDUR X11, [X10 - 0x8]
	0x01D6D8E8 CMP X11, X1
	0x01D6D8EC B.EQ 0x1D6D90C
	0x01D6D8F0 SUBS X9, X9, 0x1
	0x01D6D8F4 ADD X10, X10, 0x10
	0x01D6D8F8 B.NE 0x1D6D8E4
	0x01D6D8FC MOVZ W2, 0x3D
	0x01D6D900 MOV X0, X25
	0x01D6D904 BL 0x1C5C788
	0x01D6D908 B 0x1D6D91C
	0x01D6D90C LDR W9, [X10]
	0x01D6D910 ADD W9, W9, 0x3D
	0x01D6D914 ADD X8, X8, W9, 0x4, SXTW
	0x01D6D918 ADD X0, X8, 0x138
	0x01D6D91C LDP X8, X7, [X0]
	0x01D6D920 MOV X0, X25
	0x01D6D924 MOV X1, X24
	0x01D6D928 MOV X2, X23
	0x01D6D92C MOV W3, W22
	0x01D6D930 MOV X4, X21
	0x01D6D934 MOV X5, X20
	0x01D6D938 MOV X6, X19
	0x01D6D93C LDP X20, X19, [X31 + 0x40]
	0x01D6D940 LDP X22, X21, [X31 + 0x30]
	0x01D6D944 LDP X24, X23, [X31 + 0x20]
	0x01D6D948 LDP X26, X25, [X31 + 0x10]
	0x01D6D94C LDR X30, [X31], #0x50
	0x01D6D950 BR X8
	0x01D6D954 BL 0x1C16F20
	0x01D6D958 STR X30, [X31 - 0x50]!
	0x01D6D95C STP X26, X25, [X31 + 0x10]
	0x01D6D960 STP X24, X23, [X31 + 0x20]
	0x01D6D964 STP X22, X21, [X31 + 0x30]
	0x01D6D968 STP X20, X19, [X31 + 0x40]
	0x01D6D96C ADRP X26, 0x266B000
	0x01D6D970 ADRP X25, 0x2386000
	0x01D6D974 LDRB W8, [X26 + 0x8CF]
	0x01D6D978 LDR X25, [X25 + 0x658]
	0x01D6D97C MOV X19, X6
	0x01D6D980 MOV X20, X5
	0x01D6D984 MOV X21, X4
	0x01D6D988 MOV W22, W3
	0x01D6D98C MOV X23, X2
	0x01D6D990 MOV X24, X1
	0x01D6D994 TBNZ X8, 0x0, 0x1D6D9B8
	0x01D6D998 ADRP X0, 0x2386000
	0x01D6D99C LDR X0, [X0 + 0x658]
	0x01D6D9A0 BL 0x1C16CF4
	0x01D6D9A4 ADRP X0, 0x2388000
	0x01D6D9A8 LDR X0, [X0 + 0xA18]
	0x01D6D9AC BL 0x1C16CF4
	0x01D6D9B0 MOVZ W8, 0x1
	0x01D6D9B4 STRB W8, [X26 + 0x8CF]
	0x01D6D9B8 LDR X0, [X25]
	0x01D6D9BC LDR W8, [X0 + 0xE0]
	0x01D6D9C0 CBNZ W8, 0x1D6D9CC
	0x01D6D9C4 BL 0x1C16DFC
	0x01D6D9C8 LDR X0, [X25]
	0x01D6D9CC LDR X8, [X0 + 0xB8]
	0x01D6D9D0 LDR X25, [X8 + 0x10]
	0x01D6D9D4 CBZ X25, 0x1D6DA68

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x266C000
	010 Move X24, 0x2387000
	011 Move W8, [X25+2240]
	012 Move X24, [X24+1624]
	013 Move X19, X5
	014 Move X20, X4
	015 Move X21, X3
	016 Move X22, X2
	017 Move X23, X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x2387000
	023 Move X0, [X0+1624]
	024 Call 0x1C17CF4
	025 Move X0, 0x2389000
	026 Move X0, [X0+2584]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+2240], W8
	030 Move X0, [X24]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X24]
	036 Move X8, [X0+184]
	037 Move X24, [X8+16]
	038 Compare X24, 0
	039 JumpIfEqual {77}
	040 Move X10, 0x2389000
	041 Move X8, [X24]
	042 Move X10, [X10+2584]
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move X1, [X10]
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move W2, 47
	054 Move X0, X24
	055 Call 0x1C5D788
	056 Move W9, [X10]
	057 Add W9, W9, 47
	058 Add X8, X8, W9
	059 Add X0, X8, 312
	060 Move X7, [X0]
	061 Move X6, [X0+8]
	062 Move X0, X24
	063 Move X1, X23
	064 Move X2, X22
	065 Move X3, X21
	066 Move X4, X20
	067 Move X5, X19
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X30, [X31+64]
	075 Move X25, [X31+72]
	076 CallNoReturn X7
	077 Call 0x1C17F20

Method: System.Threading.Tasks.Task LinkFacebookAsync(Nakama.ISession session, System.String token, System.Nullable`1<System.Boolean> import = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6D9D8 ADRP X10, 0x2388000
	0x01D6D9DC LDR X8, [X25]
	0x01D6D9E0 LDR X10, [X10 + 0xA18]
	0x01D6D9E4 LDRH W9, [X8 + 0x12E]
	0x01D6D9E8 LDR X1, [X10]
	0x01D6D9EC CBZ X9, 0x1D6DA10
	0x01D6D9F0 LDR X10, [X8 + 0xB0]
	0x01D6D9F4 ADD X10, X10, 0x8
	0x01D6D9F8 LDUR X11, [X10 - 0x8]
	0x01D6D9FC CMP X11, X1
	0x01D6DA00 B.EQ 0x1D6DA20
	0x01D6DA04 SUBS X9, X9, 0x1
	0x01D6DA08 ADD X10, X10, 0x10
	0x01D6DA0C B.NE 0x1D6D9F8
	0x01D6DA10 MOVZ W2, 0x3E
	0x01D6DA14 MOV X0, X25
	0x01D6DA18 BL 0x1C5C788
	0x01D6DA1C B 0x1D6DA30
	0x01D6DA20 LDR W9, [X10]
	0x01D6DA24 ADD W9, W9, 0x3E
	0x01D6DA28 ADD X8, X8, W9, 0x4, SXTW
	0x01D6DA2C ADD X0, X8, 0x138
	0x01D6DA30 LDP X8, X7, [X0]
	0x01D6DA34 MOV X0, X25
	0x01D6DA38 MOV X1, X24
	0x01D6DA3C MOV X2, X23
	0x01D6DA40 MOV W3, W22
	0x01D6DA44 MOV X4, X21
	0x01D6DA48 MOV X5, X20
	0x01D6DA4C MOV X6, X19
	0x01D6DA50 LDP X20, X19, [X31 + 0x40]
	0x01D6DA54 LDP X22, X21, [X31 + 0x30]
	0x01D6DA58 LDP X24, X23, [X31 + 0x20]
	0x01D6DA5C LDP X26, X25, [X31 + 0x10]
	0x01D6DA60 LDR X30, [X31], #0x50
	0x01D6DA64 BR X8
	0x01D6DA68 BL 0x1C16F20
	0x01D6DA6C STP X30, X25, [X31 - 0x40]!
	0x01D6DA70 STP X24, X23, [X31 + 0x10]
	0x01D6DA74 STP X22, X21, [X31 + 0x20]
	0x01D6DA78 STP X20, X19, [X31 + 0x30]
	0x01D6DA7C ADRP X25, 0x266B000
	0x01D6DA80 ADRP X24, 0x2386000
	0x01D6DA84 LDRB W8, [X25 + 0x8D0]
	0x01D6DA88 LDR X24, [X24 + 0x658]
	0x01D6DA8C MOV X19, X5
	0x01D6DA90 MOV X20, X4
	0x01D6DA94 MOV X21, X3
	0x01D6DA98 MOV W22, W2
	0x01D6DA9C MOV X23, X1
	0x01D6DAA0 TBNZ X8, 0x0, 0x1D6DAC4
	0x01D6DAA4 ADRP X0, 0x2386000
	0x01D6DAA8 LDR X0, [X0 + 0x658]
	0x01D6DAAC BL 0x1C16CF4
	0x01D6DAB0 ADRP X0, 0x2388000
	0x01D6DAB4 LDR X0, [X0 + 0xA18]
	0x01D6DAB8 BL 0x1C16CF4
	0x01D6DABC MOVZ W8, 0x1
	0x01D6DAC0 STRB W8, [X25 + 0x8D0]
	0x01D6DAC4 LDR X0, [X24]
	0x01D6DAC8 LDR W8, [X0 + 0xE0]
	0x01D6DACC CBNZ W8, 0x1D6DAD8
	0x01D6DAD0 BL 0x1C16DFC
	0x01D6DAD4 LDR X0, [X24]
	0x01D6DAD8 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x266C000
	010 Move X24, 0x2387000
	011 Move W8, [X25+2241]
	012 Move X24, [X24+1624]
	013 Move X19, X5
	014 Move X20, X4
	015 Move X22, X3
	016 Move X21, X2
	017 Move X23, X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x2387000
	023 Move X0, [X0+1624]
	024 Call 0x1C17CF4
	025 Move X0, 0x2389000
	026 Move X0, [X0+2584]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+2241], W8
	030 Move X0, [X24]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X24]
	036 Move X8, [X0+184]
	037 Move X24, [X8+16]
	038 Compare X24, 0
	039 JumpIfEqual {77}
	040 Move X10, 0x2389000
	041 Move X8, [X24]
	042 Move X10, [X10+2584]
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move X1, [X10]
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move W2, 48
	054 Move X0, X24
	055 Call 0x1C5D788
	056 Move W9, [X10]
	057 Add W9, W9, 48
	058 Add X8, X8, W9
	059 Add X0, X8, 312
	060 Move X7, [X0]
	061 Move X6, [X0+8]
	062 And X3, X22, 0xFFFF
	063 Move X0, X24
	064 Move X1, X23
	065 Move X2, X21
	066 Move X4, X20
	067 Move X5, X19
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X30, [X31+64]
	075 Move X25, [X31+72]
	076 CallNoReturn X7
	077 Call 0x1C17F20

Method: System.Threading.Tasks.Task LinkGameCenterAsync(Nakama.ISession session, System.String bundleId, System.String playerId, System.String publicKeyUrl, System.String salt, System.String signature, System.String timestamp, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6DADC LDR X24, [X8 + 0x10]
	0x01D6DAE0 CBZ X24, 0x1D6DB6C
	0x01D6DAE4 ADRP X10, 0x2388000
	0x01D6DAE8 LDR X8, [X24]
	0x01D6DAEC LDR X10, [X10 + 0xA18]
	0x01D6DAF0 LDRH W9, [X8 + 0x12E]
	0x01D6DAF4 LDR X1, [X10]
	0x01D6DAF8 CBZ X9, 0x1D6DB1C
	0x01D6DAFC LDR X10, [X8 + 0xB0]
	0x01D6DB00 ADD X10, X10, 0x8
	0x01D6DB04 LDUR X11, [X10 - 0x8]
	0x01D6DB08 CMP X11, X1
	0x01D6DB0C B.EQ 0x1D6DB2C
	0x01D6DB10 SUBS X9, X9, 0x1
	0x01D6DB14 ADD X10, X10, 0x10
	0x01D6DB18 B.NE 0x1D6DB04
	0x01D6DB1C MOVZ W2, 0x3F
	0x01D6DB20 MOV X0, X24
	0x01D6DB24 BL 0x1C5C788
	0x01D6DB28 B 0x1D6DB3C
	0x01D6DB2C LDR W9, [X10]
	0x01D6DB30 ADD W9, W9, 0x3F
	0x01D6DB34 ADD X8, X8, W9, 0x4, SXTW
	0x01D6DB38 ADD X0, X8, 0x138
	0x01D6DB3C LDP X7, X6, [X0]
	0x01D6DB40 MOV X0, X24
	0x01D6DB44 MOV X1, X23
	0x01D6DB48 MOV W2, W22
	0x01D6DB4C MOV X3, X21
	0x01D6DB50 MOV X4, X20
	0x01D6DB54 MOV X5, X19
	0x01D6DB58 LDP X20, X19, [X31 + 0x30]
	0x01D6DB5C LDP X22, X21, [X31 + 0x20]
	0x01D6DB60 LDP X24, X23, [X31 + 0x10]
	0x01D6DB64 LDP X30, X25, [X31], #0x40
	0x01D6DB68 BR X7
	0x01D6DB6C BL 0x1C16F20
	0x01D6DB70 STP X29, X30, [X31 - 0x60]!
	0x01D6DB74 STP X28, X27, [X31 + 0x10]
	0x01D6DB78 STP X26, X25, [X31 + 0x20]
	0x01D6DB7C STP X24, X23, [X31 + 0x30]
	0x01D6DB80 STP X22, X21, [X31 + 0x40]
	0x01D6DB84 STP X20, X19, [X31 + 0x50]
	0x01D6DB88 ADRP X29, 0x266B000
	0x01D6DB8C ADRP X26, 0x2386000
	0x01D6DB90 LDRB W8, [X29 + 0x8D1]
	0x01D6DB94 LDP X27, X28, [X31 + 0x60]
	0x01D6DB98 LDR X26, [X26 + 0x658]
	0x01D6DB9C MOV X19, X7
	0x01D6DBA0 MOV W20, W6
	0x01D6DBA4 MOV X21, X5
	0x01D6DBA8 MOV X22, X4
	0x01D6DBAC MOV X23, X3
	0x01D6DBB0 MOV X24, X2
	0x01D6DBB4 MOV X25, X1
	0x01D6DBB8 TBNZ X8, 0x0, 0x1D6DBDC
	0x01D6DBBC ADRP X0, 0x2386000
	0x01D6DBC0 LDR X0, [X0 + 0x658]
	0x01D6DBC4 BL 0x1C16CF4
	0x01D6DBC8 ADRP X0, 0x2388000
	0x01D6DBCC LDR X0, [X0 + 0xA18]
	0x01D6DBD0 BL 0x1C16CF4
	0x01D6DBD4 MOVZ W8, 0x1
	0x01D6DBD8 STRB W8, [X29 + 0x8D1]
	0x01D6DBDC LDR X0, [X26]
	0x01D6DBE0 LDR W8, [X0 + 0xE0]
	0x01D6DBE4 CBNZ W8, 0x1D6DBF0
	0x01D6DBE8 BL 0x1C16DFC
	0x01D6DBEC LDR X0, [X26]
	0x01D6DBF0 LDR X8, [X0 + 0xB8]
	0x01D6DBF4 LDR X26, [X8 + 0x10]
	0x01D6DBF8 CBZ X26, 0x1D6DC9C
	0x01D6DBFC ADRP X10, 0x2388000
	0x01D6DC00 LDR X8, [X26]
	0x01D6DC04 LDR X10, [X10 + 0xA18]
	0x01D6DC08 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X29, 0x266C000
	014 Move X26, 0x2387000
	015 Move W8, [X29+2242]
	016 Move X27, [X31+96]
	017 Move X28, [X31+104]
	018 Move X26, [X26+1624]
	019 Move X19, X7
	020 Move X20, X6
	021 Move X21, X5
	022 Move X22, X4
	023 Move X23, X3
	024 Move X24, X2
	025 Move X25, X1
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {38}
	030 Move X0, 0x2387000
	031 Move X0, [X0+1624]
	032 Call 0x1C17CF4
	033 Move X0, 0x2389000
	034 Move X0, [X0+2584]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X29+2242], W8
	038 Move X0, [X26]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X26]
	044 Move X8, [X0+184]
	045 Move X26, [X8+16]
	046 Compare X26, 0
	047 JumpIfEqual {94}
	048 Move X10, 0x2389000
	049 Move X8, [X26]
	050 Move X10, [X10+2584]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X1, [X10]
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move W2, 49
	062 Move X0, X26
	063 Call 0x1C5D788
	064 Move W9, [X10]
	065 Add W9, W9, 49
	066 Add X8, X8, W9
	067 Add X0, X8, 312
	068 Move X9, [X0]
	069 Move X8, [X0+8]
	070 Move [X31+96], X27
	071 Move X0, X26
	072 Move X1, X25
	073 Move [X31+104], X28
	074 Move [X31+112], X8
	075 Move X2, X24
	076 Move X3, X23
	077 Move X4, X22
	078 Move X5, X21
	079 Move X6, X20
	080 Move X7, X19
	081 Move X20, [X31+80]
	082 Move X19, [X31+88]
	083 Move X22, [X31+64]
	084 Move X21, [X31+72]
	085 Move X24, [X31+48]
	086 Move X23, [X31+56]
	087 Move X26, [X31+32]
	088 Move X25, [X31+40]
	089 Move X28, [X31+16]
	090 Move X27, [X31+24]
	091 Move X29, [X31+96]
	092 Move X30, [X31+104]
	093 CallNoReturn X9
	094 Call 0x1C17F20

Method: System.Threading.Tasks.Task LinkGoogleAsync(Nakama.ISession session, System.String token, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6DC0C LDR X1, [X10]
	0x01D6DC10 CBZ X9, 0x1D6DC34
	0x01D6DC14 LDR X10, [X8 + 0xB0]
	0x01D6DC18 ADD X10, X10, 0x8
	0x01D6DC1C LDUR X11, [X10 - 0x8]
	0x01D6DC20 CMP X11, X1
	0x01D6DC24 B.EQ 0x1D6DC44
	0x01D6DC28 SUBS X9, X9, 0x1
	0x01D6DC2C ADD X10, X10, 0x10
	0x01D6DC30 B.NE 0x1D6DC1C
	0x01D6DC34 MOVZ W2, 0x40
	0x01D6DC38 MOV X0, X26
	0x01D6DC3C BL 0x1C5C788
	0x01D6DC40 B 0x1D6DC54
	0x01D6DC44 LDR W9, [X10]
	0x01D6DC48 ADD W9, W9, 0x40
	0x01D6DC4C ADD X8, X8, W9, 0x4, SXTW
	0x01D6DC50 ADD X0, X8, 0x138
	0x01D6DC54 LDP X9, X8, [X0]
	0x01D6DC58 STR X27, [X31 + 0x60]
	0x01D6DC5C MOV X0, X26
	0x01D6DC60 MOV X1, X25
	0x01D6DC64 STP X28, X8, [X31 + 0x68]
	0x01D6DC68 MOV X2, X24
	0x01D6DC6C MOV X3, X23
	0x01D6DC70 MOV X4, X22
	0x01D6DC74 MOV X5, X21
	0x01D6DC78 MOV W6, W20
	0x01D6DC7C MOV X7, X19
	0x01D6DC80 LDP X20, X19, [X31 + 0x50]
	0x01D6DC84 LDP X22, X21, [X31 + 0x40]
	0x01D6DC88 LDP X24, X23, [X31 + 0x30]
	0x01D6DC8C LDP X26, X25, [X31 + 0x20]
	0x01D6DC90 LDP X28, X27, [X31 + 0x10]
	0x01D6DC94 LDP X29, X30, [X31], #0x60
	0x01D6DC98 BR X9
	0x01D6DC9C BL 0x1C16F20
	0x01D6DCA0 STP X29, X30, [X31 - 0x60]!
	0x01D6DCA4 STP X28, X27, [X31 + 0x10]
	0x01D6DCA8 STP X26, X25, [X31 + 0x20]
	0x01D6DCAC STP X24, X23, [X31 + 0x30]
	0x01D6DCB0 STP X22, X21, [X31 + 0x40]
	0x01D6DCB4 STP X20, X19, [X31 + 0x50]
	0x01D6DCB8 ADRP X29, 0x266B000
	0x01D6DCBC ADRP X26, 0x2386000
	0x01D6DCC0 LDRB W8, [X29 + 0x8D2]
	0x01D6DCC4 LDP X27, X28, [X31 + 0x60]
	0x01D6DCC8 LDR X26, [X26 + 0x658]
	0x01D6DCCC MOV X19, X7
	0x01D6DCD0 MOV W20, W6
	0x01D6DCD4 MOV X21, X5
	0x01D6DCD8 MOV X22, X4
	0x01D6DCDC MOV X23, X3
	0x01D6DCE0 MOV X24, X2
	0x01D6DCE4 MOV X25, X1
	0x01D6DCE8 TBNZ X8, 0x0, 0x1D6DD0C
	0x01D6DCEC ADRP X0, 0x2386000
	0x01D6DCF0 LDR X0, [X0 + 0x658]
	0x01D6DCF4 BL 0x1C16CF4
	0x01D6DCF8 ADRP X0, 0x2388000
	0x01D6DCFC LDR X0, [X0 + 0xA18]
	0x01D6DD00 BL 0x1C16CF4
	0x01D6DD04 MOVZ W8, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x266C000
	009 Move X23, 0x2387000
	010 Move W8, [X24+2243]
	011 Move X23, [X23+1624]
	012 Move X19, X4
	013 Move X20, X3
	014 Move X21, X2
	015 Move X22, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x2387000
	021 Move X0, [X0+1624]
	022 Call 0x1C17CF4
	023 Move X0, 0x2389000
	024 Move X0, [X0+2584]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+2243], W8
	028 Move X0, [X23]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X23]
	034 Move X8, [X0+184]
	035 Move X23, [X8+16]
	036 Compare X23, 0
	037 JumpIfEqual {73}
	038 Move X10, 0x2389000
	039 Move X8, [X23]
	040 Move X10, [X10+2584]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X10]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move W2, 50
	052 Move X0, X23
	053 Call 0x1C5D788
	054 Move W9, [X10]
	055 Add W9, W9, 50
	056 Add X8, X8, W9
	057 Add X0, X8, 312
	058 Move X6, [X0]
	059 Move X5, [X0+8]
	060 Move X0, X23
	061 Move X1, X22
	062 Move X2, X21
	063 Move X3, X20
	064 Move X4, X19
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X24, [X31+16]
	070 Move X23, [X31+24]
	071 Move X30, [X31+64]
	072 CallNoReturn X6
	073 Call 0x1C17F20

Method: System.Threading.Tasks.Task LinkSteamAsync(Nakama.ISession session, System.String token, System.Boolean import, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6DD08 STRB W8, [X29 + 0x8D2]
	0x01D6DD0C LDR X0, [X26]
	0x01D6DD10 LDR W8, [X0 + 0xE0]
	0x01D6DD14 CBNZ W8, 0x1D6DD20
	0x01D6DD18 BL 0x1C16DFC
	0x01D6DD1C LDR X0, [X26]
	0x01D6DD20 LDR X8, [X0 + 0xB8]
	0x01D6DD24 LDR X26, [X8 + 0x10]
	0x01D6DD28 CBZ X26, 0x1D6DDCC
	0x01D6DD2C ADRP X10, 0x2388000
	0x01D6DD30 LDR X8, [X26]
	0x01D6DD34 LDR X10, [X10 + 0xA18]
	0x01D6DD38 LDRH W9, [X8 + 0x12E]
	0x01D6DD3C LDR X1, [X10]
	0x01D6DD40 CBZ X9, 0x1D6DD64
	0x01D6DD44 LDR X10, [X8 + 0xB0]
	0x01D6DD48 ADD X10, X10, 0x8
	0x01D6DD4C LDUR X11, [X10 - 0x8]
	0x01D6DD50 CMP X11, X1
	0x01D6DD54 B.EQ 0x1D6DD74
	0x01D6DD58 SUBS X9, X9, 0x1
	0x01D6DD5C ADD X10, X10, 0x10
	0x01D6DD60 B.NE 0x1D6DD4C
	0x01D6DD64 MOVZ W2, 0x41
	0x01D6DD68 MOV X0, X26
	0x01D6DD6C BL 0x1C5C788
	0x01D6DD70 B 0x1D6DD84
	0x01D6DD74 LDR W9, [X10]
	0x01D6DD78 ADD W9, W9, 0x41
	0x01D6DD7C ADD X8, X8, W9, 0x4, SXTW
	0x01D6DD80 ADD X0, X8, 0x138
	0x01D6DD84 LDP X9, X8, [X0]
	0x01D6DD88 STR X27, [X31 + 0x60]
	0x01D6DD8C MOV X0, X26
	0x01D6DD90 MOV X1, X25
	0x01D6DD94 STP X28, X8, [X31 + 0x68]
	0x01D6DD98 MOV X2, X24
	0x01D6DD9C MOV X3, X23
	0x01D6DDA0 MOV X4, X22
	0x01D6DDA4 MOV X5, X21
	0x01D6DDA8 MOV W6, W20
	0x01D6DDAC MOV X7, X19
	0x01D6DDB0 LDP X20, X19, [X31 + 0x50]
	0x01D6DDB4 LDP X22, X21, [X31 + 0x40]
	0x01D6DDB8 LDP X24, X23, [X31 + 0x30]
	0x01D6DDBC LDP X26, X25, [X31 + 0x20]
	0x01D6DDC0 LDP X28, X27, [X31 + 0x10]
	0x01D6DDC4 LDP X29, X30, [X31], #0x60
	0x01D6DDC8 BR X9
	0x01D6DDCC BL 0x1C16F20
	0x01D6DDD0 STP X29, X30, [X31 - 0x60]!
	0x01D6DDD4 STP X28, X27, [X31 + 0x10]
	0x01D6DDD8 STP X26, X25, [X31 + 0x20]
	0x01D6DDDC STP X24, X23, [X31 + 0x30]
	0x01D6DDE0 STP X22, X21, [X31 + 0x40]
	0x01D6DDE4 STP X20, X19, [X31 + 0x50]
	0x01D6DDE8 ADRP X29, 0x266B000
	0x01D6DDEC ADRP X26, 0x2386000
	0x01D6DDF0 LDRB W8, [X29 + 0x8D3]
	0x01D6DDF4 LDP X27, X28, [X31 + 0x60]
	0x01D6DDF8 LDR X26, [X26 + 0x658]
	0x01D6DDFC MOV X19, X7
	0x01D6DE00 MOV W20, W6
	0x01D6DE04 MOV X21, X5
	0x01D6DE08 MOV X22, X4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x266C000
	010 Move X24, 0x2387000
	011 Move W8, [X25+2244]
	012 Move X24, [X24+1624]
	013 Move X19, X5
	014 Move X20, X4
	015 Move W23, W3
	016 Move X21, X2
	017 Move X22, X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x2387000
	023 Move X0, [X0+1624]
	024 Call 0x1C17CF4
	025 Move X0, 0x2389000
	026 Move X0, [X0+2584]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+2244], W8
	030 Move X0, [X24]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X24]
	036 Move X8, [X0+184]
	037 Move X24, [X8+16]
	038 Compare X24, 0
	039 JumpIfEqual {77}
	040 Move X10, 0x2389000
	041 Move X8, [X24]
	042 Move X10, [X10+2584]
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move X1, [X10]
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move W2, 51
	054 Move X0, X24
	055 Call 0x1C5D788
	056 Move W9, [X10]
	057 Add W9, W9, 51
	058 Add X8, X8, W9
	059 Add X0, X8, 312
	060 Move X7, [X0]
	061 Move X6, [X0+8]
	062 And W3, W23, 1
	063 Move X0, X24
	064 Move X1, X22
	065 Move X2, X21
	066 Move X4, X20
	067 Move X5, X19
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X30, [X31+64]
	075 Move X25, [X31+72]
	076 CallNoReturn X7
	077 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiChannelMessageList> ListChannelMessagesAsync(Nakama.ISession session, Nakama.IChannel channel, System.Int32 limit = 1, System.Boolean forward = True, System.String cursor = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6DE0C MOV W23, W3
	0x01D6DE10 MOV W24, W2
	0x01D6DE14 MOV X25, X1
	0x01D6DE18 TBNZ X8, 0x0, 0x1D6DE3C
	0x01D6DE1C ADRP X0, 0x2386000
	0x01D6DE20 LDR X0, [X0 + 0x658]
	0x01D6DE24 BL 0x1C16CF4
	0x01D6DE28 ADRP X0, 0x2388000
	0x01D6DE2C LDR X0, [X0 + 0xA18]
	0x01D6DE30 BL 0x1C16CF4
	0x01D6DE34 MOVZ W8, 0x1
	0x01D6DE38 STRB W8, [X29 + 0x8D3]
	0x01D6DE3C LDR X0, [X26]
	0x01D6DE40 LDR W8, [X0 + 0xE0]
	0x01D6DE44 CBNZ W8, 0x1D6DE50
	0x01D6DE48 BL 0x1C16DFC
	0x01D6DE4C LDR X0, [X26]
	0x01D6DE50 LDR X8, [X0 + 0xB8]
	0x01D6DE54 LDR X26, [X8 + 0x10]
	0x01D6DE58 CBZ X26, 0x1D6DEFC
	0x01D6DE5C ADRP X10, 0x2388000
	0x01D6DE60 LDR X8, [X26]
	0x01D6DE64 LDR X10, [X10 + 0xA18]
	0x01D6DE68 LDRH W9, [X8 + 0x12E]
	0x01D6DE6C LDR X1, [X10]
	0x01D6DE70 CBZ X9, 0x1D6DE94
	0x01D6DE74 LDR X10, [X8 + 0xB0]
	0x01D6DE78 ADD X10, X10, 0x8
	0x01D6DE7C LDUR X11, [X10 - 0x8]
	0x01D6DE80 CMP X11, X1
	0x01D6DE84 B.EQ 0x1D6DEA4
	0x01D6DE88 SUBS X9, X9, 0x1
	0x01D6DE8C ADD X10, X10, 0x10
	0x01D6DE90 B.NE 0x1D6DE7C
	0x01D6DE94 MOVZ W2, 0x42
	0x01D6DE98 MOV X0, X26
	0x01D6DE9C BL 0x1C5C788
	0x01D6DEA0 B 0x1D6DEB4
	0x01D6DEA4 LDR W9, [X10]
	0x01D6DEA8 ADD W9, W9, 0x42
	0x01D6DEAC ADD X8, X8, W9, 0x4, SXTW
	0x01D6DEB0 ADD X0, X8, 0x138
	0x01D6DEB4 LDP X9, X8, [X0]
	0x01D6DEB8 STR X27, [X31 + 0x60]
	0x01D6DEBC MOV X0, X26
	0x01D6DEC0 MOV X1, X25
	0x01D6DEC4 STP X28, X8, [X31 + 0x68]
	0x01D6DEC8 MOV W2, W24
	0x01D6DECC MOV W3, W23
	0x01D6DED0 MOV X4, X22
	0x01D6DED4 MOV X5, X21
	0x01D6DED8 MOV W6, W20
	0x01D6DEDC MOV X7, X19
	0x01D6DEE0 LDP X20, X19, [X31 + 0x50]
	0x01D6DEE4 LDP X22, X21, [X31 + 0x40]
	0x01D6DEE8 LDP X24, X23, [X31 + 0x30]
	0x01D6DEEC LDP X26, X25, [X31 + 0x20]
	0x01D6DEF0 LDP X28, X27, [X31 + 0x10]
	0x01D6DEF4 LDP X29, X30, [X31], #0x60
	0x01D6DEF8 BR X9
	0x01D6DEFC BL 0x1C16F20
	0x01D6DF00 STR X30, [X31 - 0x50]!
	0x01D6DF04 STP X26, X25, [X31 + 0x10]
	0x01D6DF08 STP X24, X23, [X31 + 0x20]
	0x01D6DF0C STP X22, X21, [X31 + 0x30]
	0x01D6DF10 STP X20, X19, [X31 + 0x40]
	0x01D6DF14 ADRP X26, 0x266B000
	0x01D6DF18 ADRP X25, 0x2386000
	0x01D6DF1C LDRB W8, [X26 + 0x8D4]
	0x01D6DF20 LDR X25, [X25 + 0x658]
	0x01D6DF24 MOV X19, X6
	0x01D6DF28 MOV X20, X5

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x266C000
	012 Move X26, 0x2387000
	013 Move W8, [X27+2245]
	014 Move X26, [X26+1624]
	015 Move X19, X7
	016 Move X20, X6
	017 Move X21, X5
	018 Move W24, W4
	019 Move W22, W3
	020 Move X23, X2
	021 Move X25, X1
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {34}
	026 Move X0, 0x2387000
	027 Move X0, [X0+1624]
	028 Call 0x1C17CF4
	029 Move X0, 0x2389000
	030 Move X0, [X0+2584]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X27+2245], W8
	034 Move X0, [X26]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X26]
	040 Move X8, [X0+184]
	041 Move X26, [X8+16]
	042 Compare X26, 0
	043 JumpIfEqual {86}
	044 Move X10, 0x2389000
	045 Move X8, [X26]
	046 Move X10, [X10+2584]
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Move X1, [X10]
	049 Compare X9, 0
	050 JumpIfEqual {57}
	051 Move X10, [X8+176]
	052 Add X10, X10, 8
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract X9, X9, 1
	056 Add X10, X10, 16
	057 Move W2, 52
	058 Move X0, X26
	059 Call 0x1C5D788
	060 Move W9, [X10]
	061 Add W9, W9, 52
	062 Add X8, X8, W9
	063 Add X0, X8, 312
	064 Move X8, [X0]
	065 Move X9, [X0+8]
	066 And W4, W24, 1
	067 Move X0, X26
	068 Move X1, X25
	069 Move X2, X23
	070 Move W3, W22
	071 Move X5, X21
	072 Move X6, X20
	073 Move X7, X19
	074 Move X20, [X31+64]
	075 Move X19, [X31+72]
	076 Move X22, [X31+48]
	077 Move X21, [X31+56]
	078 Move X24, [X31+32]
	079 Move X23, [X31+40]
	080 Move X26, [X31+16]
	081 Move X25, [X31+24]
	082 Move [X31+80], X9
	083 Move X30, [X31+80]
	084 Move X27, [X31+88]
	085 CallNoReturn X8
	086 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiChannelMessageList> ListChannelMessagesAsync(Nakama.ISession session, System.String channelId, System.Int32 limit = 1, System.Boolean forward = True, System.String cursor = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6DF2C MOV X21, X4
	0x01D6DF30 MOV W22, W3
	0x01D6DF34 MOV X23, X2
	0x01D6DF38 MOV X24, X1
	0x01D6DF3C TBNZ X8, 0x0, 0x1D6DF60
	0x01D6DF40 ADRP X0, 0x2386000
	0x01D6DF44 LDR X0, [X0 + 0x658]
	0x01D6DF48 BL 0x1C16CF4
	0x01D6DF4C ADRP X0, 0x2388000
	0x01D6DF50 LDR X0, [X0 + 0xA18]
	0x01D6DF54 BL 0x1C16CF4
	0x01D6DF58 MOVZ W8, 0x1
	0x01D6DF5C STRB W8, [X26 + 0x8D4]
	0x01D6DF60 LDR X0, [X25]
	0x01D6DF64 LDR W8, [X0 + 0xE0]
	0x01D6DF68 CBNZ W8, 0x1D6DF74
	0x01D6DF6C BL 0x1C16DFC
	0x01D6DF70 LDR X0, [X25]
	0x01D6DF74 LDR X8, [X0 + 0xB8]
	0x01D6DF78 LDR X25, [X8 + 0x10]
	0x01D6DF7C CBZ X25, 0x1D6E010
	0x01D6DF80 ADRP X10, 0x2388000
	0x01D6DF84 LDR X8, [X25]
	0x01D6DF88 LDR X10, [X10 + 0xA18]
	0x01D6DF8C LDRH W9, [X8 + 0x12E]
	0x01D6DF90 LDR X1, [X10]
	0x01D6DF94 CBZ X9, 0x1D6DFB8
	0x01D6DF98 LDR X10, [X8 + 0xB0]
	0x01D6DF9C ADD X10, X10, 0x8
	0x01D6DFA0 LDUR X11, [X10 - 0x8]
	0x01D6DFA4 CMP X11, X1
	0x01D6DFA8 B.EQ 0x1D6DFC8
	0x01D6DFAC SUBS X9, X9, 0x1
	0x01D6DFB0 ADD X10, X10, 0x10
	0x01D6DFB4 B.NE 0x1D6DFA0
	0x01D6DFB8 MOVZ W2, 0x43
	0x01D6DFBC MOV X0, X25
	0x01D6DFC0 BL 0x1C5C788
	0x01D6DFC4 B 0x1D6DFD8
	0x01D6DFC8 LDR W9, [X10]
	0x01D6DFCC ADD W9, W9, 0x43
	0x01D6DFD0 ADD X8, X8, W9, 0x4, SXTW
	0x01D6DFD4 ADD X0, X8, 0x138
	0x01D6DFD8 LDP X8, X7, [X0]
	0x01D6DFDC MOV X0, X25
	0x01D6DFE0 MOV X1, X24
	0x01D6DFE4 MOV X2, X23
	0x01D6DFE8 MOV W3, W22
	0x01D6DFEC MOV X4, X21
	0x01D6DFF0 MOV X5, X20
	0x01D6DFF4 MOV X6, X19
	0x01D6DFF8 LDP X20, X19, [X31 + 0x40]
	0x01D6DFFC LDP X22, X21, [X31 + 0x30]
	0x01D6E000 LDP X24, X23, [X31 + 0x20]
	0x01D6E004 LDP X26, X25, [X31 + 0x10]
	0x01D6E008 LDR X30, [X31], #0x50
	0x01D6E00C BR X8
	0x01D6E010 BL 0x1C16F20
	0x01D6E014 STP X30, X27, [X31 - 0x50]!
	0x01D6E018 STP X26, X25, [X31 + 0x10]
	0x01D6E01C STP X24, X23, [X31 + 0x20]
	0x01D6E020 STP X22, X21, [X31 + 0x30]
	0x01D6E024 STP X20, X19, [X31 + 0x40]
	0x01D6E028 ADRP X27, 0x266A000
	0x01D6E02C ADRP X26, 0x2385000
	0x01D6E030 LDRB W8, [X27 + 0x8D5]
	0x01D6E034 LDR X26, [X26 + 0x658]
	0x01D6E038 MOV X19, X7
	0x01D6E03C MOV X20, X6
	0x01D6E040 MOV X21, X5
	0x01D6E044 MOV W22, W4
	0x01D6E048 MOV X23, X3

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x266C000
	012 Move X26, 0x2387000
	013 Move W8, [X27+2246]
	014 Move X26, [X26+1624]
	015 Move X19, X7
	016 Move X20, X6
	017 Move X21, X5
	018 Move W24, W4
	019 Move W22, W3
	020 Move X23, X2
	021 Move X25, X1
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {34}
	026 Move X0, 0x2387000
	027 Move X0, [X0+1624]
	028 Call 0x1C17CF4
	029 Move X0, 0x2389000
	030 Move X0, [X0+2584]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X27+2246], W8
	034 Move X0, [X26]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X26]
	040 Move X8, [X0+184]
	041 Move X26, [X8+16]
	042 Compare X26, 0
	043 JumpIfEqual {86}
	044 Move X10, 0x2389000
	045 Move X8, [X26]
	046 Move X10, [X10+2584]
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Move X1, [X10]
	049 Compare X9, 0
	050 JumpIfEqual {57}
	051 Move X10, [X8+176]
	052 Add X10, X10, 8
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract X9, X9, 1
	056 Add X10, X10, 16
	057 Move W2, 53
	058 Move X0, X26
	059 Call 0x1C5D788
	060 Move W9, [X10]
	061 Add W9, W9, 53
	062 Add X8, X8, W9
	063 Add X0, X8, 312
	064 Move X8, [X0]
	065 Move X9, [X0+8]
	066 And W4, W24, 1
	067 Move X0, X26
	068 Move X1, X25
	069 Move X2, X23
	070 Move W3, W22
	071 Move X5, X21
	072 Move X6, X20
	073 Move X7, X19
	074 Move X20, [X31+64]
	075 Move X19, [X31+72]
	076 Move X22, [X31+48]
	077 Move X21, [X31+56]
	078 Move X24, [X31+32]
	079 Move X23, [X31+40]
	080 Move X26, [X31+16]
	081 Move X25, [X31+24]
	082 Move [X31+80], X9
	083 Move X30, [X31+80]
	084 Move X27, [X31+88]
	085 CallNoReturn X8
	086 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiFriendList> ListFriendsAsync(Nakama.ISession session, System.Nullable`1<System.Int32> state = null, System.Int32 limit = 1, System.String cursor = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6E04C MOV X24, X2
	0x01D6E050 MOV X25, X1
	0x01D6E054 TBNZ X8, 0x0, 0x1D6E078
	0x01D6E058 ADRP X0, 0x2385000
	0x01D6E05C LDR X0, [X0 + 0x658]
	0x01D6E060 BL 0x1C16CF4
	0x01D6E064 ADRP X0, 0x2387000
	0x01D6E068 LDR X0, [X0 + 0xA18]
	0x01D6E06C BL 0x1C16CF4
	0x01D6E070 MOVZ W8, 0x1
	0x01D6E074 STRB W8, [X27 + 0x8D5]
	0x01D6E078 LDR X0, [X26]
	0x01D6E07C LDR W8, [X0 + 0xE0]
	0x01D6E080 CBNZ W8, 0x1D6E08C
	0x01D6E084 BL 0x1C16DFC
	0x01D6E088 LDR X0, [X26]
	0x01D6E08C LDR X8, [X0 + 0xB8]
	0x01D6E090 LDR X26, [X8 + 0x10]
	0x01D6E094 CBZ X26, 0x1D6E130
	0x01D6E098 ADRP X10, 0x2387000
	0x01D6E09C LDR X8, [X26]
	0x01D6E0A0 LDR X10, [X10 + 0xA18]
	0x01D6E0A4 LDRH W9, [X8 + 0x12E]
	0x01D6E0A8 LDR X1, [X10]
	0x01D6E0AC CBZ X9, 0x1D6E0D0
	0x01D6E0B0 LDR X10, [X8 + 0xB0]
	0x01D6E0B4 ADD X10, X10, 0x8
	0x01D6E0B8 LDUR X11, [X10 - 0x8]
	0x01D6E0BC CMP X11, X1
	0x01D6E0C0 B.EQ 0x1D6E0E0
	0x01D6E0C4 SUBS X9, X9, 0x1
	0x01D6E0C8 ADD X10, X10, 0x10
	0x01D6E0CC B.NE 0x1D6E0B8
	0x01D6E0D0 MOVZ W2, 0x44
	0x01D6E0D4 MOV X0, X26
	0x01D6E0D8 BL 0x1C5C788
	0x01D6E0DC B 0x1D6E0F0
	0x01D6E0E0 LDR W9, [X10]
	0x01D6E0E4 ADD W9, W9, 0x44
	0x01D6E0E8 ADD X8, X8, W9, 0x4, SXTW
	0x01D6E0EC ADD X0, X8, 0x138
	0x01D6E0F0 LDP X8, X9, [X0]
	0x01D6E0F4 MOV X0, X26
	0x01D6E0F8 MOV X1, X25
	0x01D6E0FC MOV X2, X24
	0x01D6E100 MOV X3, X23
	0x01D6E104 MOV W4, W22
	0x01D6E108 MOV X5, X21
	0x01D6E10C MOV X6, X20
	0x01D6E110 MOV X7, X19
	0x01D6E114 LDP X20, X19, [X31 + 0x40]
	0x01D6E118 LDP X22, X21, [X31 + 0x30]
	0x01D6E11C LDP X24, X23, [X31 + 0x20]
	0x01D6E120 LDP X26, X25, [X31 + 0x10]
	0x01D6E124 STR X9, [X31 + 0x50]
	0x01D6E128 LDP X30, X27, [X31], #0x50
	0x01D6E12C BR X8
	0x01D6E130 BL 0x1C16F20
	0x01D6E134 STP X30, X27, [X31 - 0x50]!
	0x01D6E138 STP X26, X25, [X31 + 0x10]
	0x01D6E13C STP X24, X23, [X31 + 0x20]
	0x01D6E140 STP X22, X21, [X31 + 0x30]
	0x01D6E144 STP X20, X19, [X31 + 0x40]
	0x01D6E148 ADRP X27, 0x266A000
	0x01D6E14C ADRP X26, 0x2385000
	0x01D6E150 LDRB W8, [X27 + 0x8D6]
	0x01D6E154 LDR X26, [X26 + 0x658]
	0x01D6E158 MOV X19, X7
	0x01D6E15C MOV X20, X6

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x266B000
	011 Move X25, 0x2386000
	012 Move W8, [X26+2247]
	013 Move X25, [X25+1624]
	014 Move X19, X6
	015 Move X20, X5
	016 Move X21, X4
	017 Move W22, W3
	018 Move X23, X2
	019 Move X24, X1
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x2386000
	025 Move X0, [X0+1624]
	026 Call 0x1C17CF4
	027 Move X0, 0x2388000
	028 Move X0, [X0+2584]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X26+2247], W8
	032 Move X0, [X25]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X25]
	038 Move X8, [X0+184]
	039 Move X25, [X8+16]
	040 Compare X25, 0
	041 JumpIfEqual {81}
	042 Move X10, 0x2388000
	043 Move X8, [X25]
	044 Move X10, [X10+2584]
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Move X1, [X10]
	047 Compare X9, 0
	048 JumpIfEqual {55}
	049 Move X10, [X8+176]
	050 Add X10, X10, 8
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Subtract X9, X9, 1
	054 Add X10, X10, 16
	055 Move W2, 54
	056 Move X0, X25
	057 Call 0x1C5D788
	058 Move W9, [X10]
	059 Add W9, W9, 54
	060 Add X8, X8, W9
	061 Add X0, X8, 312
	062 Move X8, [X0]
	063 Move X7, [X0+8]
	064 Move X0, X25
	065 Move X1, X24
	066 Move X2, X23
	067 Move W3, W22
	068 Move X4, X21
	069 Move X5, X20
	070 Move X6, X19
	071 Move X20, [X31+64]
	072 Move X19, [X31+72]
	073 Move X22, [X31+48]
	074 Move X21, [X31+56]
	075 Move X24, [X31+32]
	076 Move X23, [X31+40]
	077 Move X26, [X31+16]
	078 Move X25, [X31+24]
	079 Move X30, [X31+80]
	080 CallNoReturn X8
	081 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiGroupUserList> ListGroupUsersAsync(Nakama.ISession session, System.String groupId, System.Nullable`1<System.Int32> state = null, System.Int32 limit = 1, System.String cursor = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6E160 MOV X21, X5
	0x01D6E164 MOV W22, W4
	0x01D6E168 MOV X23, X3
	0x01D6E16C MOV X24, X2
	0x01D6E170 MOV X25, X1
	0x01D6E174 TBNZ X8, 0x0, 0x1D6E198
	0x01D6E178 ADRP X0, 0x2385000
	0x01D6E17C LDR X0, [X0 + 0x658]
	0x01D6E180 BL 0x1C16CF4
	0x01D6E184 ADRP X0, 0x2387000
	0x01D6E188 LDR X0, [X0 + 0xA18]
	0x01D6E18C BL 0x1C16CF4
	0x01D6E190 MOVZ W8, 0x1
	0x01D6E194 STRB W8, [X27 + 0x8D6]
	0x01D6E198 LDR X0, [X26]
	0x01D6E19C LDR W8, [X0 + 0xE0]
	0x01D6E1A0 CBNZ W8, 0x1D6E1AC
	0x01D6E1A4 BL 0x1C16DFC
	0x01D6E1A8 LDR X0, [X26]
	0x01D6E1AC LDR X8, [X0 + 0xB8]
	0x01D6E1B0 LDR X26, [X8 + 0x10]
	0x01D6E1B4 CBZ X26, 0x1D6E250
	0x01D6E1B8 ADRP X10, 0x2387000
	0x01D6E1BC LDR X8, [X26]
	0x01D6E1C0 LDR X10, [X10 + 0xA18]
	0x01D6E1C4 LDRH W9, [X8 + 0x12E]
	0x01D6E1C8 LDR X1, [X10]
	0x01D6E1CC CBZ X9, 0x1D6E1F0
	0x01D6E1D0 LDR X10, [X8 + 0xB0]
	0x01D6E1D4 ADD X10, X10, 0x8
	0x01D6E1D8 LDUR X11, [X10 - 0x8]
	0x01D6E1DC CMP X11, X1
	0x01D6E1E0 B.EQ 0x1D6E200
	0x01D6E1E4 SUBS X9, X9, 0x1
	0x01D6E1E8 ADD X10, X10, 0x10
	0x01D6E1EC B.NE 0x1D6E1D8
	0x01D6E1F0 MOVZ W2, 0x45
	0x01D6E1F4 MOV X0, X26
	0x01D6E1F8 BL 0x1C5C788
	0x01D6E1FC B 0x1D6E210
	0x01D6E200 LDR W9, [X10]
	0x01D6E204 ADD W9, W9, 0x45
	0x01D6E208 ADD X8, X8, W9, 0x4, SXTW
	0x01D6E20C ADD X0, X8, 0x138
	0x01D6E210 LDP X8, X9, [X0]
	0x01D6E214 MOV X0, X26
	0x01D6E218 MOV X1, X25
	0x01D6E21C MOV X2, X24
	0x01D6E220 MOV X3, X23
	0x01D6E224 MOV W4, W22
	0x01D6E228 MOV X5, X21
	0x01D6E22C MOV X6, X20
	0x01D6E230 MOV X7, X19
	0x01D6E234 LDP X20, X19, [X31 + 0x40]
	0x01D6E238 LDP X22, X21, [X31 + 0x30]
	0x01D6E23C LDP X24, X23, [X31 + 0x20]
	0x01D6E240 LDP X26, X25, [X31 + 0x10]
	0x01D6E244 STR X9, [X31 + 0x50]
	0x01D6E248 LDP X30, X27, [X31], #0x50
	0x01D6E24C BR X8
	0x01D6E250 BL 0x1C16F20
	0x01D6E254 STP X30, X25, [X31 - 0x40]!
	0x01D6E258 STP X24, X23, [X31 + 0x10]
	0x01D6E25C STP X22, X21, [X31 + 0x20]
	0x01D6E260 STP X20, X19, [X31 + 0x30]
	0x01D6E264 ADRP X25, 0x266A000
	0x01D6E268 ADRP X24, 0x2385000
	0x01D6E26C LDRB W8, [X25 + 0x8D7]
	0x01D6E270 LDR X24, [X24 + 0x658]
	0x01D6E274 MOV X19, X5
	0x01D6E278 MOV X20, X4
	0x01D6E27C MOV X21, X3

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x266B000
	012 Move X26, 0x2386000
	013 Move W8, [X27+2248]
	014 Move X26, [X26+1624]
	015 Move X19, X7
	016 Move X20, X6
	017 Move X21, X5
	018 Move W22, W4
	019 Move X23, X3
	020 Move X24, X2
	021 Move X25, X1
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {34}
	026 Move X0, 0x2386000
	027 Move X0, [X0+1624]
	028 Call 0x1C17CF4
	029 Move X0, 0x2388000
	030 Move X0, [X0+2584]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X27+2248], W8
	034 Move X0, [X26]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X26]
	040 Move X8, [X0+184]
	041 Move X26, [X8+16]
	042 Compare X26, 0
	043 JumpIfEqual {86}
	044 Move X10, 0x2388000
	045 Move X8, [X26]
	046 Move X10, [X10+2584]
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Move X1, [X10]
	049 Compare X9, 0
	050 JumpIfEqual {57}
	051 Move X10, [X8+176]
	052 Add X10, X10, 8
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract X9, X9, 1
	056 Add X10, X10, 16
	057 Move W2, 55
	058 Move X0, X26
	059 Call 0x1C5D788
	060 Move W9, [X10]
	061 Add W9, W9, 55
	062 Add X8, X8, W9
	063 Add X0, X8, 312
	064 Move X8, [X0]
	065 Move X9, [X0+8]
	066 Move X0, X26
	067 Move X1, X25
	068 Move X2, X24
	069 Move X3, X23
	070 Move W4, W22
	071 Move X5, X21
	072 Move X6, X20
	073 Move X7, X19
	074 Move X20, [X31+64]
	075 Move X19, [X31+72]
	076 Move X22, [X31+48]
	077 Move X21, [X31+56]
	078 Move X24, [X31+32]
	079 Move X23, [X31+40]
	080 Move X26, [X31+16]
	081 Move X25, [X31+24]
	082 Move [X31+80], X9
	083 Move X30, [X31+80]
	084 Move X27, [X31+88]
	085 CallNoReturn X8
	086 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiGroupList> ListGroupsAsync(Nakama.ISession session, System.String name = null, System.Int32 limit = 1, System.String cursor = null, System.String langTag = null, System.Nullable`1<System.Int32> members = null, System.Nullable`1<System.Boolean> open = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6E280 MOV X22, X2
	0x01D6E284 MOV X23, X1
	0x01D6E288 TBNZ X8, 0x0, 0x1D6E2AC
	0x01D6E28C ADRP X0, 0x2385000
	0x01D6E290 LDR X0, [X0 + 0x658]
	0x01D6E294 BL 0x1C16CF4
	0x01D6E298 ADRP X0, 0x2387000
	0x01D6E29C LDR X0, [X0 + 0xA18]
	0x01D6E2A0 BL 0x1C16CF4
	0x01D6E2A4 MOVZ W8, 0x1
	0x01D6E2A8 STRB W8, [X25 + 0x8D7]
	0x01D6E2AC LDR X0, [X24]
	0x01D6E2B0 LDR W8, [X0 + 0xE0]
	0x01D6E2B4 CBNZ W8, 0x1D6E2C0
	0x01D6E2B8 BL 0x1C16DFC
	0x01D6E2BC LDR X0, [X24]
	0x01D6E2C0 LDR X8, [X0 + 0xB8]
	0x01D6E2C4 LDR X24, [X8 + 0x10]
	0x01D6E2C8 CBZ X24, 0x1D6E354
	0x01D6E2CC ADRP X10, 0x2387000
	0x01D6E2D0 LDR X8, [X24]
	0x01D6E2D4 LDR X10, [X10 + 0xA18]
	0x01D6E2D8 LDRH W9, [X8 + 0x12E]
	0x01D6E2DC LDR X1, [X10]
	0x01D6E2E0 CBZ X9, 0x1D6E304
	0x01D6E2E4 LDR X10, [X8 + 0xB0]
	0x01D6E2E8 ADD X10, X10, 0x8
	0x01D6E2EC LDUR X11, [X10 - 0x8]
	0x01D6E2F0 CMP X11, X1
	0x01D6E2F4 B.EQ 0x1D6E314
	0x01D6E2F8 SUBS X9, X9, 0x1
	0x01D6E2FC ADD X10, X10, 0x10
	0x01D6E300 B.NE 0x1D6E2EC
	0x01D6E304 MOVZ W2, 0x46
	0x01D6E308 MOV X0, X24
	0x01D6E30C BL 0x1C5C788
	0x01D6E310 B 0x1D6E324
	0x01D6E314 LDR W9, [X10]
	0x01D6E318 ADD W9, W9, 0x46
	0x01D6E31C ADD X8, X8, W9, 0x4, SXTW
	0x01D6E320 ADD X0, X8, 0x138
	0x01D6E324 LDP X7, X6, [X0]
	0x01D6E328 MOV X0, X24
	0x01D6E32C MOV X1, X23
	0x01D6E330 MOV X2, X22
	0x01D6E334 MOV X3, X21
	0x01D6E338 MOV X4, X20
	0x01D6E33C MOV X5, X19
	0x01D6E340 LDP X20, X19, [X31 + 0x30]
	0x01D6E344 LDP X22, X21, [X31 + 0x20]
	0x01D6E348 LDP X24, X23, [X31 + 0x10]
	0x01D6E34C LDP X30, X25, [X31], #0x40
	0x01D6E350 BR X7
	0x01D6E354 BL 0x1C16F20
	0x01D6E358 STR X30, [X31 - 0x40]!
	0x01D6E35C STP X24, X23, [X31 + 0x10]
	0x01D6E360 STP X22, X21, [X31 + 0x20]
	0x01D6E364 STP X20, X19, [X31 + 0x30]
	0x01D6E368 ADRP X24, 0x266A000
	0x01D6E36C ADRP X23, 0x2385000
	0x01D6E370 LDRB W8, [X24 + 0x8D8]
	0x01D6E374 LDR X23, [X23 + 0x658]
	0x01D6E378 MOV X19, X4
	0x01D6E37C MOV X20, X3
	0x01D6E380 MOV X21, X2
	0x01D6E384 MOV X22, X1
	0x01D6E388 TBNZ X8, 0x0, 0x1D6E3AC
	0x01D6E38C ADRP X0, 0x2385000
	0x01D6E390 LDR X0, [X0 + 0x658]
	0x01D6E394 BL 0x1C16CF4
	0x01D6E398 ADRP X0, 0x2387000
	0x01D6E39C LDR X0, [X0 + 0xA18]
	0x01D6E3A0 BL 0x1C16CF4
	0x01D6E3A4 MOVZ W8, 0x1
	0x01D6E3A8 STRB W8, [X24 + 0x8D8]
	0x01D6E3AC LDR X0, [X23]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X29, 0x266B000
	014 Move X26, 0x2386000
	015 Move W8, [X29+2249]
	016 Move X27, [X31+96]
	017 Move X28, [X31+104]
	018 Move X26, [X26+1624]
	019 Move X24, X7
	020 Move X19, X6
	021 Move X20, X5
	022 Move X21, X4
	023 Move W22, W3
	024 Move X23, X2
	025 Move X25, X1
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {38}
	030 Move X0, 0x2386000
	031 Move X0, [X0+1624]
	032 Call 0x1C17CF4
	033 Move X0, 0x2388000
	034 Move X0, [X0+2584]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X29+2249], W8
	038 Move X0, [X26]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X26]
	044 Move X8, [X0+184]
	045 Move X26, [X8+16]
	046 Compare X26, 0
	047 JumpIfEqual {94}
	048 Move X10, 0x2388000
	049 Move X8, [X26]
	050 Move X10, [X10+2584]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X1, [X10]
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move W2, 56
	062 Move X0, X26
	063 Call 0x1C5D788
	064 Move W9, [X10]
	065 Add W9, W9, 56
	066 Add X8, X8, W9
	067 Add X0, X8, 312
	068 Move X9, [X0]
	069 Move X8, [X0+8]
	070 And X7, X24, 0xFFFF
	071 Move [X31+96], X27
	072 Move X0, X26
	073 Move [X31+104], X28
	074 Move [X31+112], X8
	075 Move X1, X25
	076 Move X2, X23
	077 Move W3, W22
	078 Move X4, X21
	079 Move X5, X20
	080 Move X6, X19
	081 Move X20, [X31+80]
	082 Move X19, [X31+88]
	083 Move X22, [X31+64]
	084 Move X21, [X31+72]
	085 Move X24, [X31+48]
	086 Move X23, [X31+56]
	087 Move X26, [X31+32]
	088 Move X25, [X31+40]
	089 Move X28, [X31+16]
	090 Move X27, [X31+24]
	091 Move X29, [X31+96]
	092 Move X30, [X31+104]
	093 CallNoReturn X9
	094 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiLeaderboardRecordList> ListLeaderboardRecordsAsync(Nakama.ISession session, System.String leaderboardId, System.Collections.Generic.IEnumerable`1<System.String> ownerIds = null, System.Nullable`1<System.Int64> expiry = null, System.Int32 limit = 1, System.String cursor = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6E3B0 LDR W8, [X0 + 0xE0]
	0x01D6E3B4 CBNZ W8, 0x1D6E3C0
	0x01D6E3B8 BL 0x1C16DFC
	0x01D6E3BC LDR X0, [X23]
	0x01D6E3C0 LDR X8, [X0 + 0xB8]
	0x01D6E3C4 LDR X23, [X8 + 0x10]
	0x01D6E3C8 CBZ X23, 0x1D6E450
	0x01D6E3CC ADRP X10, 0x2387000
	0x01D6E3D0 LDR X8, [X23]
	0x01D6E3D4 LDR X10, [X10 + 0xA18]
	0x01D6E3D8 LDRH W9, [X8 + 0x12E]
	0x01D6E3DC LDR X1, [X10]
	0x01D6E3E0 CBZ X9, 0x1D6E404
	0x01D6E3E4 LDR X10, [X8 + 0xB0]
	0x01D6E3E8 ADD X10, X10, 0x8
	0x01D6E3EC LDUR X11, [X10 - 0x8]
	0x01D6E3F0 CMP X11, X1
	0x01D6E3F4 B.EQ 0x1D6E414
	0x01D6E3F8 SUBS X9, X9, 0x1
	0x01D6E3FC ADD X10, X10, 0x10
	0x01D6E400 B.NE 0x1D6E3EC
	0x01D6E404 MOVZ W2, 0x47
	0x01D6E408 MOV X0, X23
	0x01D6E40C BL 0x1C5C788
	0x01D6E410 B 0x1D6E424
	0x01D6E414 LDR W9, [X10]
	0x01D6E418 ADD W9, W9, 0x47
	0x01D6E41C ADD X8, X8, W9, 0x4, SXTW
	0x01D6E420 ADD X0, X8, 0x138
	0x01D6E424 LDP X6, X5, [X0]
	0x01D6E428 MOV X0, X23
	0x01D6E42C MOV X1, X22
	0x01D6E430 MOV X2, X21
	0x01D6E434 MOV X3, X20
	0x01D6E438 MOV X4, X19
	0x01D6E43C LDP X20, X19, [X31 + 0x30]
	0x01D6E440 LDP X22, X21, [X31 + 0x20]
	0x01D6E444 LDP X24, X23, [X31 + 0x10]
	0x01D6E448 LDR X30, [X31], #0x40
	0x01D6E44C BR X6
	0x01D6E450 BL 0x1C16F20
	0x01D6E454 STP X30, X25, [X31 - 0x40]!
	0x01D6E458 STP X24, X23, [X31 + 0x10]
	0x01D6E45C STP X22, X21, [X31 + 0x20]
	0x01D6E460 STP X20, X19, [X31 + 0x30]
	0x01D6E464 ADRP X25, 0x266A000
	0x01D6E468 ADRP X24, 0x2385000
	0x01D6E46C LDRB W8, [X25 + 0x8D9]
	0x01D6E470 LDR X24, [X24 + 0x658]
	0x01D6E474 MOV X19, X5
	0x01D6E478 MOV X20, X4
	0x01D6E47C MOV X21, X3
	0x01D6E480 MOV X22, X2
	0x01D6E484 MOV X23, X1
	0x01D6E488 TBNZ X8, 0x0, 0x1D6E4AC
	0x01D6E48C ADRP X0, 0x2385000
	0x01D6E490 LDR X0, [X0 + 0x658]
	0x01D6E494 BL 0x1C16CF4
	0x01D6E498 ADRP X0, 0x2387000
	0x01D6E49C LDR X0, [X0 + 0xA18]
	0x01D6E4A0 BL 0x1C16CF4
	0x01D6E4A4 MOVZ W8, 0x1
	0x01D6E4A8 STRB W8, [X25 + 0x8D9]
	0x01D6E4AC LDR X0, [X24]
	0x01D6E4B0 LDR W8, [X0 + 0xE0]
	0x01D6E4B4 CBNZ W8, 0x1D6E4C0
	0x01D6E4B8 BL 0x1C16DFC
	0x01D6E4BC LDR X0, [X24]
	0x01D6E4C0 LDR X8, [X0 + 0xB8]
	0x01D6E4C4 LDR X24, [X8 + 0x10]
	0x01D6E4C8 CBZ X24, 0x1D6E554
	0x01D6E4CC ADRP X10, 0x2387000
	0x01D6E4D0 LDR X8, [X24]
	0x01D6E4D4 LDR X10, [X10 + 0xA18]
	0x01D6E4D8 LDRH W9, [X8 + 0x12E]
	0x01D6E4DC LDR X1, [X10]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X29, 0x266B000
	014 Move X26, 0x2386000
	015 Move W8, [X29+2250]
	016 Move X27, [X31+96]
	017 Move X28, [X31+104]
	018 Move X26, [X26+1624]
	019 Move X19, X7
	020 Move W20, W6
	021 Move X21, X5
	022 Move X22, X4
	023 Move X23, X3
	024 Move X24, X2
	025 Move X25, X1
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {38}
	030 Move X0, 0x2386000
	031 Move X0, [X0+1624]
	032 Call 0x1C17CF4
	033 Move X0, 0x2388000
	034 Move X0, [X0+2584]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X29+2250], W8
	038 Move X0, [X26]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X26]
	044 Move X8, [X0+184]
	045 Move X26, [X8+16]
	046 Compare X26, 0
	047 JumpIfEqual {94}
	048 Move X10, 0x2388000
	049 Move X8, [X26]
	050 Move X10, [X10+2584]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X1, [X10]
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move W2, 57
	062 Move X0, X26
	063 Call 0x1C5D788
	064 Move W9, [X10]
	065 Add W9, W9, 57
	066 Add X8, X8, W9
	067 Add X0, X8, 312
	068 Move X9, [X0]
	069 Move X8, [X0+8]
	070 Move [X31+96], X27
	071 Move X0, X26
	072 Move X1, X25
	073 Move [X31+104], X28
	074 Move [X31+112], X8
	075 Move X2, X24
	076 Move X3, X23
	077 Move X4, X22
	078 Move X5, X21
	079 Move W6, W20
	080 Move X7, X19
	081 Move X20, [X31+80]
	082 Move X19, [X31+88]
	083 Move X22, [X31+64]
	084 Move X21, [X31+72]
	085 Move X24, [X31+48]
	086 Move X23, [X31+56]
	087 Move X26, [X31+32]
	088 Move X25, [X31+40]
	089 Move X28, [X31+16]
	090 Move X27, [X31+24]
	091 Move X29, [X31+96]
	092 Move X30, [X31+104]
	093 CallNoReturn X9
	094 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiLeaderboardRecordList> ListLeaderboardRecordsAroundOwnerAsync(Nakama.ISession session, System.String leaderboardId, System.String ownerId, System.Nullable`1<System.Int64> expiry = null, System.Int32 limit = 1, System.String cursor = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6E4E0 CBZ X9, 0x1D6E504
	0x01D6E4E4 LDR X10, [X8 + 0xB0]
	0x01D6E4E8 ADD X10, X10, 0x8
	0x01D6E4EC LDUR X11, [X10 - 0x8]
	0x01D6E4F0 CMP X11, X1
	0x01D6E4F4 B.EQ 0x1D6E514
	0x01D6E4F8 SUBS X9, X9, 0x1
	0x01D6E4FC ADD X10, X10, 0x10
	0x01D6E500 B.NE 0x1D6E4EC
	0x01D6E504 MOVZ W2, 0x48
	0x01D6E508 MOV X0, X24
	0x01D6E50C BL 0x1C5C788
	0x01D6E510 B 0x1D6E524
	0x01D6E514 LDR W9, [X10]
	0x01D6E518 ADD W9, W9, 0x48
	0x01D6E51C ADD X8, X8, W9, 0x4, SXTW
	0x01D6E520 ADD X0, X8, 0x138
	0x01D6E524 LDP X7, X6, [X0]
	0x01D6E528 MOV X0, X24
	0x01D6E52C MOV X1, X23
	0x01D6E530 MOV X2, X22
	0x01D6E534 MOV X3, X21
	0x01D6E538 MOV X4, X20
	0x01D6E53C MOV X5, X19
	0x01D6E540 LDP X20, X19, [X31 + 0x30]
	0x01D6E544 LDP X22, X21, [X31 + 0x20]
	0x01D6E548 LDP X24, X23, [X31 + 0x10]
	0x01D6E54C LDP X30, X25, [X31], #0x40
	0x01D6E550 BR X7
	0x01D6E554 BL 0x1C16F20
	0x01D6E558 STR X30, [X31 - 0x40]!
	0x01D6E55C STP X24, X23, [X31 + 0x10]
	0x01D6E560 STP X22, X21, [X31 + 0x20]
	0x01D6E564 STP X20, X19, [X31 + 0x30]
	0x01D6E568 ADRP X24, 0x266A000
	0x01D6E56C ADRP X23, 0x2385000
	0x01D6E570 LDRB W8, [X24 + 0x8DA]
	0x01D6E574 LDR X23, [X23 + 0x658]
	0x01D6E578 MOV X19, X4
	0x01D6E57C MOV X20, X3
	0x01D6E580 MOV X21, X2
	0x01D6E584 MOV X22, X1
	0x01D6E588 TBNZ X8, 0x0, 0x1D6E5AC
	0x01D6E58C ADRP X0, 0x2385000
	0x01D6E590 LDR X0, [X0 + 0x658]
	0x01D6E594 BL 0x1C16CF4
	0x01D6E598 ADRP X0, 0x2387000
	0x01D6E59C LDR X0, [X0 + 0xA18]
	0x01D6E5A0 BL 0x1C16CF4
	0x01D6E5A4 MOVZ W8, 0x1
	0x01D6E5A8 STRB W8, [X24 + 0x8DA]
	0x01D6E5AC LDR X0, [X23]
	0x01D6E5B0 LDR W8, [X0 + 0xE0]
	0x01D6E5B4 CBNZ W8, 0x1D6E5C0
	0x01D6E5B8 BL 0x1C16DFC
	0x01D6E5BC LDR X0, [X23]
	0x01D6E5C0 LDR X8, [X0 + 0xB8]
	0x01D6E5C4 LDR X23, [X8 + 0x10]
	0x01D6E5C8 CBZ X23, 0x1D6E650
	0x01D6E5CC ADRP X10, 0x2387000
	0x01D6E5D0 LDR X8, [X23]
	0x01D6E5D4 LDR X10, [X10 + 0xA18]
	0x01D6E5D8 LDRH W9, [X8 + 0x12E]
	0x01D6E5DC LDR X1, [X10]
	0x01D6E5E0 CBZ X9, 0x1D6E604
	0x01D6E5E4 LDR X10, [X8 + 0xB0]
	0x01D6E5E8 ADD X10, X10, 0x8
	0x01D6E5EC LDUR X11, [X10 - 0x8]
	0x01D6E5F0 CMP X11, X1
	0x01D6E5F4 B.EQ 0x1D6E614
	0x01D6E5F8 SUBS X9, X9, 0x1
	0x01D6E5FC ADD X10, X10, 0x10
	0x01D6E600 B.NE 0x1D6E5EC
	0x01D6E604 MOVZ W2, 0x49
	0x01D6E608 MOV X0, X23
	0x01D6E60C BL 0x1C5C788

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X29, 0x266B000
	014 Move X26, 0x2386000
	015 Move W8, [X29+2251]
	016 Move X27, [X31+96]
	017 Move X28, [X31+104]
	018 Move X26, [X26+1624]
	019 Move X19, X7
	020 Move W20, W6
	021 Move X21, X5
	022 Move X22, X4
	023 Move X23, X3
	024 Move X24, X2
	025 Move X25, X1
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {38}
	030 Move X0, 0x2386000
	031 Move X0, [X0+1624]
	032 Call 0x1C17CF4
	033 Move X0, 0x2388000
	034 Move X0, [X0+2584]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X29+2251], W8
	038 Move X0, [X26]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X26]
	044 Move X8, [X0+184]
	045 Move X26, [X8+16]
	046 Compare X26, 0
	047 JumpIfEqual {94}
	048 Move X10, 0x2388000
	049 Move X8, [X26]
	050 Move X10, [X10+2584]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X1, [X10]
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move W2, 58
	062 Move X0, X26
	063 Call 0x1C5D788
	064 Move W9, [X10]
	065 Add W9, W9, 58
	066 Add X8, X8, W9
	067 Add X0, X8, 312
	068 Move X9, [X0]
	069 Move X8, [X0+8]
	070 Move [X31+96], X27
	071 Move X0, X26
	072 Move X1, X25
	073 Move [X31+104], X28
	074 Move [X31+112], X8
	075 Move X2, X24
	076 Move X3, X23
	077 Move X4, X22
	078 Move X5, X21
	079 Move W6, W20
	080 Move X7, X19
	081 Move X20, [X31+80]
	082 Move X19, [X31+88]
	083 Move X22, [X31+64]
	084 Move X21, [X31+72]
	085 Move X24, [X31+48]
	086 Move X23, [X31+56]
	087 Move X26, [X31+32]
	088 Move X25, [X31+40]
	089 Move X28, [X31+16]
	090 Move X27, [X31+24]
	091 Move X29, [X31+96]
	092 Move X30, [X31+104]
	093 CallNoReturn X9
	094 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiMatchList> ListMatchesAsync(Nakama.ISession session, System.Int32 min, System.Int32 max, System.Int32 limit, System.Boolean authoritative, System.String label, System.String query, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6E610 B 0x1D6E624
	0x01D6E614 LDR W9, [X10]
	0x01D6E618 ADD W9, W9, 0x49
	0x01D6E61C ADD X8, X8, W9, 0x4, SXTW
	0x01D6E620 ADD X0, X8, 0x138
	0x01D6E624 LDP X6, X5, [X0]
	0x01D6E628 MOV X0, X23
	0x01D6E62C MOV X1, X22
	0x01D6E630 MOV X2, X21
	0x01D6E634 MOV X3, X20
	0x01D6E638 MOV X4, X19
	0x01D6E63C LDP X20, X19, [X31 + 0x30]
	0x01D6E640 LDP X22, X21, [X31 + 0x20]
	0x01D6E644 LDP X24, X23, [X31 + 0x10]
	0x01D6E648 LDR X30, [X31], #0x40
	0x01D6E64C BR X6
	0x01D6E650 BL 0x1C16F20
	0x01D6E654 STP X30, X25, [X31 - 0x40]!
	0x01D6E658 STP X24, X23, [X31 + 0x10]
	0x01D6E65C STP X22, X21, [X31 + 0x20]
	0x01D6E660 STP X20, X19, [X31 + 0x30]
	0x01D6E664 ADRP X25, 0x266A000
	0x01D6E668 ADRP X24, 0x2385000
	0x01D6E66C LDRB W8, [X25 + 0x8DB]
	0x01D6E670 LDR X24, [X24 + 0x658]
	0x01D6E674 MOV X19, X5
	0x01D6E678 MOV X20, X4
	0x01D6E67C MOV X21, X3
	0x01D6E680 MOV X22, X2
	0x01D6E684 MOV X23, X1
	0x01D6E688 TBNZ X8, 0x0, 0x1D6E6AC
	0x01D6E68C ADRP X0, 0x2385000
	0x01D6E690 LDR X0, [X0 + 0x658]
	0x01D6E694 BL 0x1C16CF4
	0x01D6E698 ADRP X0, 0x2387000
	0x01D6E69C LDR X0, [X0 + 0xA18]
	0x01D6E6A0 BL 0x1C16CF4
	0x01D6E6A4 MOVZ W8, 0x1
	0x01D6E6A8 STRB W8, [X25 + 0x8DB]
	0x01D6E6AC LDR X0, [X24]
	0x01D6E6B0 LDR W8, [X0 + 0xE0]
	0x01D6E6B4 CBNZ W8, 0x1D6E6C0
	0x01D6E6B8 BL 0x1C16DFC
	0x01D6E6BC LDR X0, [X24]
	0x01D6E6C0 LDR X8, [X0 + 0xB8]
	0x01D6E6C4 LDR X24, [X8 + 0x10]
	0x01D6E6C8 CBZ X24, 0x1D6E754
	0x01D6E6CC ADRP X10, 0x2387000
	0x01D6E6D0 LDR X8, [X24]
	0x01D6E6D4 LDR X10, [X10 + 0xA18]
	0x01D6E6D8 LDRH W9, [X8 + 0x12E]
	0x01D6E6DC LDR X1, [X10]
	0x01D6E6E0 CBZ X9, 0x1D6E704
	0x01D6E6E4 LDR X10, [X8 + 0xB0]
	0x01D6E6E8 ADD X10, X10, 0x8
	0x01D6E6EC LDUR X11, [X10 - 0x8]
	0x01D6E6F0 CMP X11, X1
	0x01D6E6F4 B.EQ 0x1D6E714
	0x01D6E6F8 SUBS X9, X9, 0x1
	0x01D6E6FC ADD X10, X10, 0x10
	0x01D6E700 B.NE 0x1D6E6EC
	0x01D6E704 MOVZ W2, 0x4A
	0x01D6E708 MOV X0, X24
	0x01D6E70C BL 0x1C5C788
	0x01D6E710 B 0x1D6E724
	0x01D6E714 LDR W9, [X10]
	0x01D6E718 ADD W9, W9, 0x4A
	0x01D6E71C ADD X8, X8, W9, 0x4, SXTW
	0x01D6E720 ADD X0, X8, 0x138
	0x01D6E724 LDP X7, X6, [X0]
	0x01D6E728 MOV X0, X24
	0x01D6E72C MOV X1, X23
	0x01D6E730 MOV X2, X22
	0x01D6E734 MOV X3, X21
	0x01D6E738 MOV X4, X20
	0x01D6E73C MOV X5, X19

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X29, 0x266B000
	014 Move X26, 0x2386000
	015 Move W8, [X29+2252]
	016 Move X27, [X31+96]
	017 Move X28, [X31+104]
	018 Move X26, [X26+1624]
	019 Move X19, X7
	020 Move X20, X6
	021 Move W24, W5
	022 Move W21, W4
	023 Move W22, W3
	024 Move W23, W2
	025 Move X25, X1
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {38}
	030 Move X0, 0x2386000
	031 Move X0, [X0+1624]
	032 Call 0x1C17CF4
	033 Move X0, 0x2388000
	034 Move X0, [X0+2584]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X29+2252], W8
	038 Move X0, [X26]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X26]
	044 Move X8, [X0+184]
	045 Move X26, [X8+16]
	046 Compare X26, 0
	047 JumpIfEqual {94}
	048 Move X10, 0x2388000
	049 Move X8, [X26]
	050 Move X10, [X10+2584]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X1, [X10]
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move W2, 59
	062 Move X0, X26
	063 Call 0x1C5D788
	064 Move W9, [X10]
	065 Add W9, W9, 59
	066 Add X8, X8, W9
	067 Add X0, X8, 312
	068 Move X9, [X0]
	069 Move X8, [X0+8]
	070 And W5, W24, 1
	071 Move [X31+96], X27
	072 Move X0, X26
	073 Move [X31+104], X28
	074 Move [X31+112], X8
	075 Move X1, X25
	076 Move W2, W23
	077 Move W3, W22
	078 Move W4, W21
	079 Move X6, X20
	080 Move X7, X19
	081 Move X20, [X31+80]
	082 Move X19, [X31+88]
	083 Move X22, [X31+64]
	084 Move X21, [X31+72]
	085 Move X24, [X31+48]
	086 Move X23, [X31+56]
	087 Move X26, [X31+32]
	088 Move X25, [X31+40]
	089 Move X28, [X31+16]
	090 Move X27, [X31+24]
	091 Move X29, [X31+96]
	092 Move X30, [X31+104]
	093 CallNoReturn X9
	094 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiNotificationList> ListNotificationsAsync(Nakama.ISession session, System.Int32 limit = 1, System.String cacheableCursor = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6E740 LDP X20, X19, [X31 + 0x30]
	0x01D6E744 LDP X22, X21, [X31 + 0x20]
	0x01D6E748 LDP X24, X23, [X31 + 0x10]
	0x01D6E74C LDP X30, X25, [X31], #0x40
	0x01D6E750 BR X7
	0x01D6E754 BL 0x1C16F20
	0x01D6E758 STR X30, [X31 - 0x40]!
	0x01D6E75C STP X24, X23, [X31 + 0x10]
	0x01D6E760 STP X22, X21, [X31 + 0x20]
	0x01D6E764 STP X20, X19, [X31 + 0x30]
	0x01D6E768 ADRP X24, 0x266A000
	0x01D6E76C ADRP X23, 0x2385000
	0x01D6E770 LDRB W8, [X24 + 0x8DC]
	0x01D6E774 LDR X23, [X23 + 0x658]
	0x01D6E778 MOV X19, X4
	0x01D6E77C MOV X20, X3
	0x01D6E780 MOV X21, X2
	0x01D6E784 MOV X22, X1
	0x01D6E788 TBNZ X8, 0x0, 0x1D6E7AC
	0x01D6E78C ADRP X0, 0x2385000
	0x01D6E790 LDR X0, [X0 + 0x658]
	0x01D6E794 BL 0x1C16CF4
	0x01D6E798 ADRP X0, 0x2387000
	0x01D6E79C LDR X0, [X0 + 0xA18]
	0x01D6E7A0 BL 0x1C16CF4
	0x01D6E7A4 MOVZ W8, 0x1
	0x01D6E7A8 STRB W8, [X24 + 0x8DC]
	0x01D6E7AC LDR X0, [X23]
	0x01D6E7B0 LDR W8, [X0 + 0xE0]
	0x01D6E7B4 CBNZ W8, 0x1D6E7C0
	0x01D6E7B8 BL 0x1C16DFC
	0x01D6E7BC LDR X0, [X23]
	0x01D6E7C0 LDR X8, [X0 + 0xB8]
	0x01D6E7C4 LDR X23, [X8 + 0x10]
	0x01D6E7C8 CBZ X23, 0x1D6E850
	0x01D6E7CC ADRP X10, 0x2387000
	0x01D6E7D0 LDR X8, [X23]
	0x01D6E7D4 LDR X10, [X10 + 0xA18]
	0x01D6E7D8 LDRH W9, [X8 + 0x12E]
	0x01D6E7DC LDR X1, [X10]
	0x01D6E7E0 CBZ X9, 0x1D6E804
	0x01D6E7E4 LDR X10, [X8 + 0xB0]
	0x01D6E7E8 ADD X10, X10, 0x8
	0x01D6E7EC LDUR X11, [X10 - 0x8]
	0x01D6E7F0 CMP X11, X1
	0x01D6E7F4 B.EQ 0x1D6E814
	0x01D6E7F8 SUBS X9, X9, 0x1
	0x01D6E7FC ADD X10, X10, 0x10
	0x01D6E800 B.NE 0x1D6E7EC
	0x01D6E804 MOVZ W2, 0x4B
	0x01D6E808 MOV X0, X23
	0x01D6E80C BL 0x1C5C788
	0x01D6E810 B 0x1D6E824
	0x01D6E814 LDR W9, [X10]
	0x01D6E818 ADD W9, W9, 0x4B
	0x01D6E81C ADD X8, X8, W9, 0x4, SXTW
	0x01D6E820 ADD X0, X8, 0x138
	0x01D6E824 LDP X6, X5, [X0]
	0x01D6E828 MOV X0, X23
	0x01D6E82C MOV X1, X22
	0x01D6E830 MOV X2, X21
	0x01D6E834 MOV X3, X20
	0x01D6E838 MOV X4, X19
	0x01D6E83C LDP X20, X19, [X31 + 0x30]
	0x01D6E840 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x266B000
	010 Move X24, 0x2386000
	011 Move W8, [X25+2253]
	012 Move X24, [X24+1624]
	013 Move X19, X5
	014 Move X20, X4
	015 Move X21, X3
	016 Move W22, W2
	017 Move X23, X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x2386000
	023 Move X0, [X0+1624]
	024 Call 0x1C17CF4
	025 Move X0, 0x2388000
	026 Move X0, [X0+2584]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+2253], W8
	030 Move X0, [X24]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X24]
	036 Move X8, [X0+184]
	037 Move X24, [X8+16]
	038 Compare X24, 0
	039 JumpIfEqual {77}
	040 Move X10, 0x2388000
	041 Move X8, [X24]
	042 Move X10, [X10+2584]
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move X1, [X10]
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move W2, 60
	054 Move X0, X24
	055 Call 0x1C5D788
	056 Move W9, [X10]
	057 Add W9, W9, 60
	058 Add X8, X8, W9
	059 Add X0, X8, 312
	060 Move X7, [X0]
	061 Move X6, [X0+8]
	062 Move X0, X24
	063 Move X1, X23
	064 Move W2, W22
	065 Move X3, X21
	066 Move X4, X20
	067 Move X5, X19
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X30, [X31+64]
	075 Move X25, [X31+72]
	076 CallNoReturn X7
	077 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiStorageObjectList> ListStorageObjects(Nakama.ISession session, System.String collection, System.Int32 limit = 1, System.String cursor = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6E844 LDP X24, X23, [X31 + 0x10]
	0x01D6E848 LDR X30, [X31], #0x40
	0x01D6E84C BR X6
	0x01D6E850 BL 0x1C16F20
	0x01D6E854 STP X30, X23, [X31 - 0x30]!
	0x01D6E858 STP X22, X21, [X31 + 0x10]
	0x01D6E85C STP X20, X19, [X31 + 0x20]
	0x01D6E860 ADRP X23, 0x266A000
	0x01D6E864 ADRP X22, 0x2385000
	0x01D6E868 LDRB W8, [X23 + 0x8DD]
	0x01D6E86C LDR X22, [X22 + 0x658]
	0x01D6E870 MOV X19, X3
	0x01D6E874 MOV X20, X2
	0x01D6E878 MOV X21, X1
	0x01D6E87C TBNZ X8, 0x0, 0x1D6E8A0
	0x01D6E880 ADRP X0, 0x2385000
	0x01D6E884 LDR X0, [X0 + 0x658]
	0x01D6E888 BL 0x1C16CF4
	0x01D6E88C ADRP X0, 0x2387000
	0x01D6E890 LDR X0, [X0 + 0xA18]
	0x01D6E894 BL 0x1C16CF4
	0x01D6E898 MOVZ W8, 0x1
	0x01D6E89C STRB W8, [X23 + 0x8DD]
	0x01D6E8A0 LDR X0, [X22]
	0x01D6E8A4 LDR W8, [X0 + 0xE0]
	0x01D6E8A8 CBNZ W8, 0x1D6E8B4
	0x01D6E8AC BL 0x1C16DFC
	0x01D6E8B0 LDR X0, [X22]
	0x01D6E8B4 LDR X8, [X0 + 0xB8]
	0x01D6E8B8 LDR X22, [X8 + 0x10]
	0x01D6E8BC CBZ X22, 0x1D6E93C
	0x01D6E8C0 ADRP X10, 0x2387000
	0x01D6E8C4 LDR X8, [X22]
	0x01D6E8C8 LDR X10, [X10 + 0xA18]
	0x01D6E8CC LDRH W9, [X8 + 0x12E]
	0x01D6E8D0 LDR X1, [X10]
	0x01D6E8D4 CBZ X9, 0x1D6E8F8
	0x01D6E8D8 LDR X10, [X8 + 0xB0]
	0x01D6E8DC ADD X10, X10, 0x8
	0x01D6E8E0 LDUR X11, [X10 - 0x8]
	0x01D6E8E4 CMP X11, X1
	0x01D6E8E8 B.EQ 0x1D6E908
	0x01D6E8EC SUBS X9, X9, 0x1
	0x01D6E8F0 ADD X10, X10, 0x10
	0x01D6E8F4 B.NE 0x1D6E8E0
	0x01D6E8F8 MOVZ W2, 0x4C
	0x01D6E8FC MOV X0, X22
	0x01D6E900 BL 0x1C5C788
	0x01D6E904 B 0x1D6E918
	0x01D6E908 LDR W9, [X10]
	0x01D6E90C ADD W9, W9, 0x4C
	0x01D6E910 ADD X8, X8, W9, 0x4, SXTW
	0x01D6E914 ADD X0, X8, 0x138
	0x01D6E918 LDP X5, X4, [X0]
	0x01D6E91C MOV X0, X22
	0x01D6E920 MOV X1, X21
	0x01D6E924 MOV X2, X20
	0x01D6E928 MOV X3, X19
	0x01D6E92C LDP X20, X19, [X31 + 0x20]
	0x01D6E930 LDP X22, X21, [X31 + 0x10]
	0x01D6E934 LDP X30, X23, [X31], #0x30
	0x01D6E938 BR X5
	0x01D6E93C BL 0x1C16F20
	0x01D6E940 STR X30, [X31 - 0x40]!
	0x01D6E944 STP X24, X23, [X31 + 0x10]
	0x01D6E948 STP X22, X21, [X31 + 0x20]
	0x01D6E94C STP X20, X19, [X31 + 0x30]
	0x01D6E950 ADRP X24, 0x266A000
	0x01D6E954 ADRP X23, 0x2385000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x266B000
	011 Move X25, 0x2386000
	012 Move W8, [X26+2254]
	013 Move X25, [X25+1624]
	014 Move X19, X6
	015 Move X20, X5
	016 Move X21, X4
	017 Move W22, W3
	018 Move X23, X2
	019 Move X24, X1
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x2386000
	025 Move X0, [X0+1624]
	026 Call 0x1C17CF4
	027 Move X0, 0x2388000
	028 Move X0, [X0+2584]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X26+2254], W8
	032 Move X0, [X25]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X25]
	038 Move X8, [X0+184]
	039 Move X25, [X8+16]
	040 Compare X25, 0
	041 JumpIfEqual {81}
	042 Move X10, 0x2388000
	043 Move X8, [X25]
	044 Move X10, [X10+2584]
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Move X1, [X10]
	047 Compare X9, 0
	048 JumpIfEqual {55}
	049 Move X10, [X8+176]
	050 Add X10, X10, 8
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Subtract X9, X9, 1
	054 Add X10, X10, 16
	055 Move W2, 61
	056 Move X0, X25
	057 Call 0x1C5D788
	058 Move W9, [X10]
	059 Add W9, W9, 61
	060 Add X8, X8, W9
	061 Add X0, X8, 312
	062 Move X8, [X0]
	063 Move X7, [X0+8]
	064 Move X0, X25
	065 Move X1, X24
	066 Move X2, X23
	067 Move W3, W22
	068 Move X4, X21
	069 Move X5, X20
	070 Move X6, X19
	071 Move X20, [X31+64]
	072 Move X19, [X31+72]
	073 Move X22, [X31+48]
	074 Move X21, [X31+56]
	075 Move X24, [X31+32]
	076 Move X23, [X31+40]
	077 Move X26, [X31+16]
	078 Move X25, [X31+24]
	079 Move X30, [X31+80]
	080 CallNoReturn X8
	081 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiStorageObjectList> ListStorageObjectsAsync(Nakama.ISession session, System.String collection, System.Int32 limit = 1, System.String cursor = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6E958 LDRB W8, [X24 + 0x8DE]
	0x01D6E95C LDR X23, [X23 + 0x658]
	0x01D6E960 MOV X19, X4
	0x01D6E964 MOV X20, X3
	0x01D6E968 MOV X21, X2
	0x01D6E96C MOV X22, X1
	0x01D6E970 TBNZ X8, 0x0, 0x1D6E994
	0x01D6E974 ADRP X0, 0x2385000
	0x01D6E978 LDR X0, [X0 + 0x658]
	0x01D6E97C BL 0x1C16CF4
	0x01D6E980 ADRP X0, 0x2387000
	0x01D6E984 LDR X0, [X0 + 0xA18]
	0x01D6E988 BL 0x1C16CF4
	0x01D6E98C MOVZ W8, 0x1
	0x01D6E990 STRB W8, [X24 + 0x8DE]
	0x01D6E994 LDR X0, [X23]
	0x01D6E998 LDR W8, [X0 + 0xE0]
	0x01D6E99C CBNZ W8, 0x1D6E9A8
	0x01D6E9A0 BL 0x1C16DFC
	0x01D6E9A4 LDR X0, [X23]
	0x01D6E9A8 LDR X8, [X0 + 0xB8]
	0x01D6E9AC LDR X23, [X8 + 0x10]
	0x01D6E9B0 CBZ X23, 0x1D6EA38
	0x01D6E9B4 ADRP X10, 0x2387000
	0x01D6E9B8 LDR X8, [X23]
	0x01D6E9BC LDR X10, [X10 + 0xA18]
	0x01D6E9C0 LDRH W9, [X8 + 0x12E]
	0x01D6E9C4 LDR X1, [X10]
	0x01D6E9C8 CBZ X9, 0x1D6E9EC
	0x01D6E9CC LDR X10, [X8 + 0xB0]
	0x01D6E9D0 ADD X10, X10, 0x8
	0x01D6E9D4 LDUR X11, [X10 - 0x8]
	0x01D6E9D8 CMP X11, X1
	0x01D6E9DC B.EQ 0x1D6E9FC
	0x01D6E9E0 SUBS X9, X9, 0x1
	0x01D6E9E4 ADD X10, X10, 0x10
	0x01D6E9E8 B.NE 0x1D6E9D4
	0x01D6E9EC MOVZ W2, 0x4D
	0x01D6E9F0 MOV X0, X23
	0x01D6E9F4 BL 0x1C5C788
	0x01D6E9F8 B 0x1D6EA0C
	0x01D6E9FC LDR W9, [X10]
	0x01D6EA00 ADD W9, W9, 0x4D
	0x01D6EA04 ADD X8, X8, W9, 0x4, SXTW
	0x01D6EA08 ADD X0, X8, 0x138
	0x01D6EA0C LDP X6, X5, [X0]
	0x01D6EA10 MOV X0, X23
	0x01D6EA14 MOV X1, X22
	0x01D6EA18 MOV X2, X21
	0x01D6EA1C MOV X3, X20
	0x01D6EA20 MOV X4, X19
	0x01D6EA24 LDP X20, X19, [X31 + 0x30]
	0x01D6EA28 LDP X22, X21, [X31 + 0x20]
	0x01D6EA2C LDP X24, X23, [X31 + 0x10]
	0x01D6EA30 LDR X30, [X31], #0x40
	0x01D6EA34 BR X6
	0x01D6EA38 BL 0x1C16F20
	0x01D6EA3C STR X30, [X31 - 0x40]!
	0x01D6EA40 STP X24, X23, [X31 + 0x10]
	0x01D6EA44 STP X22, X21, [X31 + 0x20]
	0x01D6EA48 STP X20, X19, [X31 + 0x30]
	0x01D6EA4C ADRP X24, 0x266A000
	0x01D6EA50 ADRP X23, 0x2385000
	0x01D6EA54 LDRB W8, [X24 + 0x8DF]
	0x01D6EA58 LDR X23, [X23 + 0x658]
	0x01D6EA5C MOV X19, X4
	0x01D6EA60 MOV X20, X3
	0x01D6EA64 MOV X21, X2
	0x01D6EA68 MOV X22, X1

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x266B000
	011 Move X25, 0x2386000
	012 Move W8, [X26+2255]
	013 Move X25, [X25+1624]
	014 Move X19, X6
	015 Move X20, X5
	016 Move X21, X4
	017 Move W22, W3
	018 Move X23, X2
	019 Move X24, X1
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x2386000
	025 Move X0, [X0+1624]
	026 Call 0x1C17CF4
	027 Move X0, 0x2388000
	028 Move X0, [X0+2584]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X26+2255], W8
	032 Move X0, [X25]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X25]
	038 Move X8, [X0+184]
	039 Move X25, [X8+16]
	040 Compare X25, 0
	041 JumpIfEqual {81}
	042 Move X10, 0x2388000
	043 Move X8, [X25]
	044 Move X10, [X10+2584]
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Move X1, [X10]
	047 Compare X9, 0
	048 JumpIfEqual {55}
	049 Move X10, [X8+176]
	050 Add X10, X10, 8
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Subtract X9, X9, 1
	054 Add X10, X10, 16
	055 Move W2, 62
	056 Move X0, X25
	057 Call 0x1C5D788
	058 Move W9, [X10]
	059 Add W9, W9, 62
	060 Add X8, X8, W9
	061 Add X0, X8, 312
	062 Move X8, [X0]
	063 Move X7, [X0+8]
	064 Move X0, X25
	065 Move X1, X24
	066 Move X2, X23
	067 Move W3, W22
	068 Move X4, X21
	069 Move X5, X20
	070 Move X6, X19
	071 Move X20, [X31+64]
	072 Move X19, [X31+72]
	073 Move X22, [X31+48]
	074 Move X21, [X31+56]
	075 Move X24, [X31+32]
	076 Move X23, [X31+40]
	077 Move X26, [X31+16]
	078 Move X25, [X31+24]
	079 Move X30, [X31+80]
	080 CallNoReturn X8
	081 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiSubscriptionList> ListSubscriptionsAsync(Nakama.ISession session, System.Int32 limit, System.String cursor = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6EA6C TBNZ X8, 0x0, 0x1D6EA90
	0x01D6EA70 ADRP X0, 0x2385000
	0x01D6EA74 LDR X0, [X0 + 0x658]
	0x01D6EA78 BL 0x1C16CF4
	0x01D6EA7C ADRP X0, 0x2387000
	0x01D6EA80 LDR X0, [X0 + 0xA18]
	0x01D6EA84 BL 0x1C16CF4
	0x01D6EA88 MOVZ W8, 0x1
	0x01D6EA8C STRB W8, [X24 + 0x8DF]
	0x01D6EA90 LDR X0, [X23]
	0x01D6EA94 LDR W8, [X0 + 0xE0]
	0x01D6EA98 CBNZ W8, 0x1D6EAA4
	0x01D6EA9C BL 0x1C16DFC
	0x01D6EAA0 LDR X0, [X23]
	0x01D6EAA4 LDR X8, [X0 + 0xB8]
	0x01D6EAA8 LDR X23, [X8 + 0x10]
	0x01D6EAAC CBZ X23, 0x1D6EB34
	0x01D6EAB0 ADRP X10, 0x2387000
	0x01D6EAB4 LDR X8, [X23]
	0x01D6EAB8 LDR X10, [X10 + 0xA18]
	0x01D6EABC LDRH W9, [X8 + 0x12E]
	0x01D6EAC0 LDR X1, [X10]
	0x01D6EAC4 CBZ X9, 0x1D6EAE8
	0x01D6EAC8 LDR X10, [X8 + 0xB0]
	0x01D6EACC ADD X10, X10, 0x8
	0x01D6EAD0 LDUR X11, [X10 - 0x8]
	0x01D6EAD4 CMP X11, X1
	0x01D6EAD8 B.EQ 0x1D6EAF8
	0x01D6EADC SUBS X9, X9, 0x1
	0x01D6EAE0 ADD X10, X10, 0x10
	0x01D6EAE4 B.NE 0x1D6EAD0
	0x01D6EAE8 MOVZ W2, 0x4E
	0x01D6EAEC MOV X0, X23
	0x01D6EAF0 BL 0x1C5C788
	0x01D6EAF4 B 0x1D6EB08
	0x01D6EAF8 LDR W9, [X10]
	0x01D6EAFC ADD W9, W9, 0x4E
	0x01D6EB00 ADD X8, X8, W9, 0x4, SXTW
	0x01D6EB04 ADD X0, X8, 0x138
	0x01D6EB08 LDP X6, X5, [X0]
	0x01D6EB0C MOV X0, X23
	0x01D6EB10 MOV X1, X22
	0x01D6EB14 MOV X2, X21
	0x01D6EB18 MOV X3, X20
	0x01D6EB1C MOV X4, X19
	0x01D6EB20 LDP X20, X19, [X31 + 0x30]
	0x01D6EB24 LDP X22, X21, [X31 + 0x20]
	0x01D6EB28 LDP X24, X23, [X31 + 0x10]
	0x01D6EB2C LDR X30, [X31], #0x40
	0x01D6EB30 BR X6
	0x01D6EB34 BL 0x1C16F20
	0x01D6EB38 STR X30, [X31 - 0x40]!
	0x01D6EB3C STP X24, X23, [X31 + 0x10]
	0x01D6EB40 STP X22, X21, [X31 + 0x20]
	0x01D6EB44 STP X20, X19, [X31 + 0x30]
	0x01D6EB48 ADRP X24, 0x266A000
	0x01D6EB4C ADRP X23, 0x2385000
	0x01D6EB50 LDRB W8, [X24 + 0x8E0]
	0x01D6EB54 LDR X23, [X23 + 0x658]
	0x01D6EB58 MOV X19, X4
	0x01D6EB5C MOV X20, X3
	0x01D6EB60 MOV X21, X2
	0x01D6EB64 MOV X22, X1
	0x01D6EB68 TBNZ X8, 0x0, 0x1D6EB8C
	0x01D6EB6C ADRP X0, 0x2385000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x266B000
	010 Move X24, 0x2386000
	011 Move W8, [X25+2256]
	012 Move X24, [X24+1624]
	013 Move X19, X5
	014 Move X20, X4
	015 Move X21, X3
	016 Move W22, W2
	017 Move X23, X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x2386000
	023 Move X0, [X0+1624]
	024 Call 0x1C17CF4
	025 Move X0, 0x2388000
	026 Move X0, [X0+2584]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+2256], W8
	030 Move X0, [X24]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X24]
	036 Move X8, [X0+184]
	037 Move X24, [X8+16]
	038 Compare X24, 0
	039 JumpIfEqual {77}
	040 Move X10, 0x2388000
	041 Move X8, [X24]
	042 Move X10, [X10+2584]
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move X1, [X10]
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move W2, 63
	054 Move X0, X24
	055 Call 0x1C5D788
	056 Move W9, [X10]
	057 Add W9, W9, 63
	058 Add X8, X8, W9
	059 Add X0, X8, 312
	060 Move X7, [X0]
	061 Move X6, [X0+8]
	062 Move X0, X24
	063 Move X1, X23
	064 Move W2, W22
	065 Move X3, X21
	066 Move X4, X20
	067 Move X5, X19
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X30, [X31+64]
	075 Move X25, [X31+72]
	076 CallNoReturn X7
	077 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiTournamentRecordList> ListTournamentRecordsAroundOwnerAsync(Nakama.ISession session, System.String tournamentId, System.String ownerId, System.Nullable`1<System.Int64> expiry = null, System.Int32 limit = 1, System.String cursor = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6EB70 LDR X0, [X0 + 0x658]
	0x01D6EB74 BL 0x1C16CF4
	0x01D6EB78 ADRP X0, 0x2387000
	0x01D6EB7C LDR X0, [X0 + 0xA18]
	0x01D6EB80 BL 0x1C16CF4
	0x01D6EB84 MOVZ W8, 0x1
	0x01D6EB88 STRB W8, [X24 + 0x8E0]
	0x01D6EB8C LDR X0, [X23]
	0x01D6EB90 LDR W8, [X0 + 0xE0]
	0x01D6EB94 CBNZ W8, 0x1D6EBA0
	0x01D6EB98 BL 0x1C16DFC
	0x01D6EB9C LDR X0, [X23]
	0x01D6EBA0 LDR X8, [X0 + 0xB8]
	0x01D6EBA4 LDR X23, [X8 + 0x10]
	0x01D6EBA8 CBZ X23, 0x1D6EC30
	0x01D6EBAC ADRP X10, 0x2387000
	0x01D6EBB0 LDR X8, [X23]
	0x01D6EBB4 LDR X10, [X10 + 0xA18]
	0x01D6EBB8 LDRH W9, [X8 + 0x12E]
	0x01D6EBBC LDR X1, [X10]
	0x01D6EBC0 CBZ X9, 0x1D6EBE4
	0x01D6EBC4 LDR X10, [X8 + 0xB0]
	0x01D6EBC8 ADD X10, X10, 0x8
	0x01D6EBCC LDUR X11, [X10 - 0x8]
	0x01D6EBD0 CMP X11, X1
	0x01D6EBD4 B.EQ 0x1D6EBF4
	0x01D6EBD8 SUBS X9, X9, 0x1
	0x01D6EBDC ADD X10, X10, 0x10
	0x01D6EBE0 B.NE 0x1D6EBCC
	0x01D6EBE4 MOVZ W2, 0x4F
	0x01D6EBE8 MOV X0, X23
	0x01D6EBEC BL 0x1C5C788
	0x01D6EBF0 B 0x1D6EC04
	0x01D6EBF4 LDR W9, [X10]
	0x01D6EBF8 ADD W9, W9, 0x4F
	0x01D6EBFC ADD X8, X8, W9, 0x4, SXTW
	0x01D6EC00 ADD X0, X8, 0x138
	0x01D6EC04 LDP X6, X5, [X0]
	0x01D6EC08 MOV X0, X23
	0x01D6EC0C MOV X1, X22
	0x01D6EC10 MOV X2, X21
	0x01D6EC14 MOV X3, X20
	0x01D6EC18 MOV X4, X19
	0x01D6EC1C LDP X20, X19, [X31 + 0x30]
	0x01D6EC20 LDP X22, X21, [X31 + 0x20]
	0x01D6EC24 LDP X24, X23, [X31 + 0x10]
	0x01D6EC28 LDR X30, [X31], #0x40
	0x01D6EC2C BR X6
	0x01D6EC30 BL 0x1C16F20
	0x01D6EC34 STR X30, [X31 - 0x40]!
	0x01D6EC38 STP X24, X23, [X31 + 0x10]
	0x01D6EC3C STP X22, X21, [X31 + 0x20]
	0x01D6EC40 STP X20, X19, [X31 + 0x30]
	0x01D6EC44 ADRP X24, 0x266A000
	0x01D6EC48 ADRP X23, 0x2385000
	0x01D6EC4C LDRB W8, [X24 + 0x8E1]
	0x01D6EC50 LDR X23, [X23 + 0x658]
	0x01D6EC54 MOV X19, X4
	0x01D6EC58 MOV X20, X3
	0x01D6EC5C MOV X21, X2
	0x01D6EC60 MOV X22, X1
	0x01D6EC64 TBNZ X8, 0x0, 0x1D6EC88
	0x01D6EC68 ADRP X0, 0x2385000
	0x01D6EC6C LDR X0, [X0 + 0x658]
	0x01D6EC70 BL 0x1C16CF4
	0x01D6EC74 ADRP X0, 0x2387000
	0x01D6EC78 LDR X0, [X0 + 0xA18]
	0x01D6EC7C BL 0x1C16CF4
	0x01D6EC80 MOVZ W8, 0x1
	0x01D6EC84 STRB W8, [X24 + 0x8E1]
	0x01D6EC88 LDR X0, [X23]
	0x01D6EC8C LDR W8, [X0 + 0xE0]
	0x01D6EC90 CBNZ W8, 0x1D6EC9C
	0x01D6EC94 BL 0x1C16DFC
	0x01D6EC98 LDR X0, [X23]
	0x01D6EC9C LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X29, 0x266B000
	014 Move X26, 0x2386000
	015 Move W8, [X29+2257]
	016 Move X27, [X31+96]
	017 Move X28, [X31+104]
	018 Move X26, [X26+1624]
	019 Move X19, X7
	020 Move W20, W6
	021 Move X21, X5
	022 Move X22, X4
	023 Move X23, X3
	024 Move X24, X2
	025 Move X25, X1
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {38}
	030 Move X0, 0x2386000
	031 Move X0, [X0+1624]
	032 Call 0x1C17CF4
	033 Move X0, 0x2388000
	034 Move X0, [X0+2584]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X29+2257], W8
	038 Move X0, [X26]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X26]
	044 Move X8, [X0+184]
	045 Move X26, [X8+16]
	046 Compare X26, 0
	047 JumpIfEqual {94}
	048 Move X10, 0x2388000
	049 Move X8, [X26]
	050 Move X10, [X10+2584]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X1, [X10]
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move W2, 64
	062 Move X0, X26
	063 Call 0x1C5D788
	064 Move W9, [X10]
	065 Add W9, W9, 64
	066 Add X8, X8, W9
	067 Add X0, X8, 312
	068 Move X9, [X0]
	069 Move X8, [X0+8]
	070 Move [X31+96], X27
	071 Move X0, X26
	072 Move X1, X25
	073 Move [X31+104], X28
	074 Move [X31+112], X8
	075 Move X2, X24
	076 Move X3, X23
	077 Move X4, X22
	078 Move X5, X21
	079 Move W6, W20
	080 Move X7, X19
	081 Move X20, [X31+80]
	082 Move X19, [X31+88]
	083 Move X22, [X31+64]
	084 Move X21, [X31+72]
	085 Move X24, [X31+48]
	086 Move X23, [X31+56]
	087 Move X26, [X31+32]
	088 Move X25, [X31+40]
	089 Move X28, [X31+16]
	090 Move X27, [X31+24]
	091 Move X29, [X31+96]
	092 Move X30, [X31+104]
	093 CallNoReturn X9
	094 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiTournamentRecordList> ListTournamentRecordsAsync(Nakama.ISession session, System.String tournamentId, System.Collections.Generic.IEnumerable`1<System.String> ownerIds = null, System.Nullable`1<System.Int64> expiry = null, System.Int32 limit = 1, System.String cursor = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6ECA0 LDR X23, [X8 + 0x10]
	0x01D6ECA4 CBZ X23, 0x1D6ED2C
	0x01D6ECA8 ADRP X10, 0x2387000
	0x01D6ECAC LDR X8, [X23]
	0x01D6ECB0 LDR X10, [X10 + 0xA18]
	0x01D6ECB4 LDRH W9, [X8 + 0x12E]
	0x01D6ECB8 LDR X1, [X10]
	0x01D6ECBC CBZ X9, 0x1D6ECE0
	0x01D6ECC0 LDR X10, [X8 + 0xB0]
	0x01D6ECC4 ADD X10, X10, 0x8
	0x01D6ECC8 LDUR X11, [X10 - 0x8]
	0x01D6ECCC CMP X11, X1
	0x01D6ECD0 B.EQ 0x1D6ECF0
	0x01D6ECD4 SUBS X9, X9, 0x1
	0x01D6ECD8 ADD X10, X10, 0x10
	0x01D6ECDC B.NE 0x1D6ECC8
	0x01D6ECE0 MOVZ W2, 0x50
	0x01D6ECE4 MOV X0, X23
	0x01D6ECE8 BL 0x1C5C788
	0x01D6ECEC B 0x1D6ED00
	0x01D6ECF0 LDR W9, [X10]
	0x01D6ECF4 ADD W9, W9, 0x50
	0x01D6ECF8 ADD X8, X8, W9, 0x4, SXTW
	0x01D6ECFC ADD X0, X8, 0x138
	0x01D6ED00 LDP X6, X5, [X0]
	0x01D6ED04 MOV X0, X23
	0x01D6ED08 MOV X1, X22
	0x01D6ED0C MOV X2, X21
	0x01D6ED10 MOV X3, X20
	0x01D6ED14 MOV X4, X19
	0x01D6ED18 LDP X20, X19, [X31 + 0x30]
	0x01D6ED1C LDP X22, X21, [X31 + 0x20]
	0x01D6ED20 LDP X24, X23, [X31 + 0x10]
	0x01D6ED24 LDR X30, [X31], #0x40
	0x01D6ED28 BR X6
	0x01D6ED2C BL 0x1C16F20
	0x01D6ED30 STR X30, [X31 - 0x40]!
	0x01D6ED34 STP X24, X23, [X31 + 0x10]
	0x01D6ED38 STP X22, X21, [X31 + 0x20]
	0x01D6ED3C STP X20, X19, [X31 + 0x30]
	0x01D6ED40 ADRP X24, 0x266A000
	0x01D6ED44 ADRP X23, 0x2385000
	0x01D6ED48 LDRB W8, [X24 + 0x8E2]
	0x01D6ED4C LDR X23, [X23 + 0x658]
	0x01D6ED50 MOV X19, X4
	0x01D6ED54 MOV X20, X3
	0x01D6ED58 MOV X21, X2
	0x01D6ED5C MOV X22, X1
	0x01D6ED60 TBNZ X8, 0x0, 0x1D6ED84
	0x01D6ED64 ADRP X0, 0x2385000
	0x01D6ED68 LDR X0, [X0 + 0x658]
	0x01D6ED6C BL 0x1C16CF4
	0x01D6ED70 ADRP X0, 0x2387000
	0x01D6ED74 LDR X0, [X0 + 0xA18]
	0x01D6ED78 BL 0x1C16CF4
	0x01D6ED7C MOVZ W8, 0x1
	0x01D6ED80 STRB W8, [X24 + 0x8E2]
	0x01D6ED84 LDR X0, [X23]
	0x01D6ED88 LDR W8, [X0 + 0xE0]
	0x01D6ED8C CBNZ W8, 0x1D6ED98
	0x01D6ED90 BL 0x1C16DFC
	0x01D6ED94 LDR X0, [X23]
	0x01D6ED98 LDR X8, [X0 + 0xB8]
	0x01D6ED9C LDR X23, [X8 + 0x10]
	0x01D6EDA0 CBZ X23, 0x1D6EE28
	0x01D6EDA4 ADRP X10, 0x2387000
	0x01D6EDA8 LDR X8, [X23]
	0x01D6EDAC LDR X10, [X10 + 0xA18]
	0x01D6EDB0 LDRH W9, [X8 + 0x12E]
	0x01D6EDB4 LDR X1, [X10]
	0x01D6EDB8 CBZ X9, 0x1D6EDDC
	0x01D6EDBC LDR X10, [X8 + 0xB0]
	0x01D6EDC0 ADD X10, X10, 0x8
	0x01D6EDC4 LDUR X11, [X10 - 0x8]
	0x01D6EDC8 CMP X11, X1
	0x01D6EDCC B.EQ 0x1D6EDEC

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X29, 0x266B000
	014 Move X26, 0x2386000
	015 Move W8, [X29+2258]
	016 Move X27, [X31+96]
	017 Move X28, [X31+104]
	018 Move X26, [X26+1624]
	019 Move X19, X7
	020 Move W20, W6
	021 Move X21, X5
	022 Move X22, X4
	023 Move X23, X3
	024 Move X24, X2
	025 Move X25, X1
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {38}
	030 Move X0, 0x2386000
	031 Move X0, [X0+1624]
	032 Call 0x1C17CF4
	033 Move X0, 0x2388000
	034 Move X0, [X0+2584]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X29+2258], W8
	038 Move X0, [X26]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X26]
	044 Move X8, [X0+184]
	045 Move X26, [X8+16]
	046 Compare X26, 0
	047 JumpIfEqual {94}
	048 Move X10, 0x2388000
	049 Move X8, [X26]
	050 Move X10, [X10+2584]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X1, [X10]
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move W2, 65
	062 Move X0, X26
	063 Call 0x1C5D788
	064 Move W9, [X10]
	065 Add W9, W9, 65
	066 Add X8, X8, W9
	067 Add X0, X8, 312
	068 Move X9, [X0]
	069 Move X8, [X0+8]
	070 Move [X31+96], X27
	071 Move X0, X26
	072 Move X1, X25
	073 Move [X31+104], X28
	074 Move [X31+112], X8
	075 Move X2, X24
	076 Move X3, X23
	077 Move X4, X22
	078 Move X5, X21
	079 Move W6, W20
	080 Move X7, X19
	081 Move X20, [X31+80]
	082 Move X19, [X31+88]
	083 Move X22, [X31+64]
	084 Move X21, [X31+72]
	085 Move X24, [X31+48]
	086 Move X23, [X31+56]
	087 Move X26, [X31+32]
	088 Move X25, [X31+40]
	089 Move X28, [X31+16]
	090 Move X27, [X31+24]
	091 Move X29, [X31+96]
	092 Move X30, [X31+104]
	093 CallNoReturn X9
	094 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiTournamentList> ListTournamentsAsync(Nakama.ISession session, System.Int32 categoryStart, System.Int32 categoryEnd, System.Nullable`1<System.Int32> startTime = null, System.Nullable`1<System.Int32> endTime = null, System.Int32 limit = 1, System.String cursor = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6EDD0 SUBS X9, X9, 0x1
	0x01D6EDD4 ADD X10, X10, 0x10
	0x01D6EDD8 B.NE 0x1D6EDC4
	0x01D6EDDC MOVZ W2, 0x51
	0x01D6EDE0 MOV X0, X23
	0x01D6EDE4 BL 0x1C5C788
	0x01D6EDE8 B 0x1D6EDFC
	0x01D6EDEC LDR W9, [X10]
	0x01D6EDF0 ADD W9, W9, 0x51
	0x01D6EDF4 ADD X8, X8, W9, 0x4, SXTW
	0x01D6EDF8 ADD X0, X8, 0x138
	0x01D6EDFC LDP X6, X5, [X0]
	0x01D6EE00 MOV X0, X23
	0x01D6EE04 MOV X1, X22
	0x01D6EE08 MOV X2, X21
	0x01D6EE0C MOV X3, X20
	0x01D6EE10 MOV X4, X19
	0x01D6EE14 LDP X20, X19, [X31 + 0x30]
	0x01D6EE18 LDP X22, X21, [X31 + 0x20]
	0x01D6EE1C LDP X24, X23, [X31 + 0x10]
	0x01D6EE20 LDR X30, [X31], #0x40
	0x01D6EE24 BR X6
	0x01D6EE28 BL 0x1C16F20
	0x01D6EE2C STP X30, X25, [X31 - 0x40]!
	0x01D6EE30 STP X24, X23, [X31 + 0x10]
	0x01D6EE34 STP X22, X21, [X31 + 0x20]
	0x01D6EE38 STP X20, X19, [X31 + 0x30]
	0x01D6EE3C ADRP X25, 0x266A000
	0x01D6EE40 ADRP X24, 0x2385000
	0x01D6EE44 LDRB W8, [X25 + 0x8E3]
	0x01D6EE48 LDR X24, [X24 + 0x658]
	0x01D6EE4C MOV X19, X5
	0x01D6EE50 MOV X20, X4
	0x01D6EE54 MOV X21, X3
	0x01D6EE58 MOV X22, X2
	0x01D6EE5C MOV X23, X1
	0x01D6EE60 TBNZ X8, 0x0, 0x1D6EE84
	0x01D6EE64 ADRP X0, 0x2385000
	0x01D6EE68 LDR X0, [X0 + 0x658]
	0x01D6EE6C BL 0x1C16CF4
	0x01D6EE70 ADRP X0, 0x2387000
	0x01D6EE74 LDR X0, [X0 + 0xA18]
	0x01D6EE78 BL 0x1C16CF4
	0x01D6EE7C MOVZ W8, 0x1
	0x01D6EE80 STRB W8, [X25 + 0x8E3]
	0x01D6EE84 LDR X0, [X24]
	0x01D6EE88 LDR W8, [X0 + 0xE0]
	0x01D6EE8C CBNZ W8, 0x1D6EE98
	0x01D6EE90 BL 0x1C16DFC
	0x01D6EE94 LDR X0, [X24]
	0x01D6EE98 LDR X8, [X0 + 0xB8]
	0x01D6EE9C LDR X24, [X8 + 0x10]
	0x01D6EEA0 CBZ X24, 0x1D6EF2C
	0x01D6EEA4 ADRP X10, 0x2387000
	0x01D6EEA8 LDR X8, [X24]
	0x01D6EEAC LDR X10, [X10 + 0xA18]
	0x01D6EEB0 LDRH W9, [X8 + 0x12E]
	0x01D6EEB4 LDR X1, [X10]
	0x01D6EEB8 CBZ X9, 0x1D6EEDC
	0x01D6EEBC LDR X10, [X8 + 0xB0]
	0x01D6EEC0 ADD X10, X10, 0x8
	0x01D6EEC4 LDUR X11, [X10 - 0x8]
	0x01D6EEC8 CMP X11, X1
	0x01D6EECC B.EQ 0x1D6EEEC
	0x01D6EED0 SUBS X9, X9, 0x1
	0x01D6EED4 ADD X10, X10, 0x10
	0x01D6EED8 B.NE 0x1D6EEC4
	0x01D6EEDC MOVZ W2, 0x52
	0x01D6EEE0 MOV X0, X24
	0x01D6EEE4 BL 0x1C5C788
	0x01D6EEE8 B 0x1D6EEFC
	0x01D6EEEC LDR W9, [X10]
	0x01D6EEF0 ADD W9, W9, 0x52
	0x01D6EEF4 ADD X8, X8, W9, 0x4, SXTW
	0x01D6EEF8 ADD X0, X8, 0x138
	0x01D6EEFC LDP X7, X6, [X0]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X29, 0x266B000
	014 Move X26, 0x2386000
	015 Move W8, [X29+2259]
	016 Move X27, [X31+96]
	017 Move X28, [X31+104]
	018 Move X26, [X26+1624]
	019 Move X19, X7
	020 Move W20, W6
	021 Move X21, X5
	022 Move X22, X4
	023 Move W23, W3
	024 Move W24, W2
	025 Move X25, X1
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {38}
	030 Move X0, 0x2386000
	031 Move X0, [X0+1624]
	032 Call 0x1C17CF4
	033 Move X0, 0x2388000
	034 Move X0, [X0+2584]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X29+2259], W8
	038 Move X0, [X26]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X26]
	044 Move X8, [X0+184]
	045 Move X26, [X8+16]
	046 Compare X26, 0
	047 JumpIfEqual {94}
	048 Move X10, 0x2388000
	049 Move X8, [X26]
	050 Move X10, [X10+2584]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X1, [X10]
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move W2, 66
	062 Move X0, X26
	063 Call 0x1C5D788
	064 Move W9, [X10]
	065 Add W9, W9, 66
	066 Add X8, X8, W9
	067 Add X0, X8, 312
	068 Move X9, [X0]
	069 Move X8, [X0+8]
	070 Move [X31+96], X27
	071 Move X0, X26
	072 Move X1, X25
	073 Move [X31+104], X28
	074 Move [X31+112], X8
	075 Move W2, W24
	076 Move W3, W23
	077 Move X4, X22
	078 Move X5, X21
	079 Move W6, W20
	080 Move X7, X19
	081 Move X20, [X31+80]
	082 Move X19, [X31+88]
	083 Move X22, [X31+64]
	084 Move X21, [X31+72]
	085 Move X24, [X31+48]
	086 Move X23, [X31+56]
	087 Move X26, [X31+32]
	088 Move X25, [X31+40]
	089 Move X28, [X31+16]
	090 Move X27, [X31+24]
	091 Move X29, [X31+96]
	092 Move X30, [X31+104]
	093 CallNoReturn X9
	094 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiUserGroupList> ListUserGroupsAsync(Nakama.ISession session, System.Nullable`1<System.Int32> state = null, System.Int32 limit = 1, System.String cursor = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6EF00 MOV X0, X24
	0x01D6EF04 MOV X1, X23
	0x01D6EF08 MOV X2, X22
	0x01D6EF0C MOV X3, X21
	0x01D6EF10 MOV X4, X20
	0x01D6EF14 MOV X5, X19
	0x01D6EF18 LDP X20, X19, [X31 + 0x30]
	0x01D6EF1C LDP X22, X21, [X31 + 0x20]
	0x01D6EF20 LDP X24, X23, [X31 + 0x10]
	0x01D6EF24 LDP X30, X25, [X31], #0x40
	0x01D6EF28 BR X7
	0x01D6EF2C BL 0x1C16F20
	0x01D6EF30 STR X30, [X31 - 0x40]!
	0x01D6EF34 STP X24, X23, [X31 + 0x10]
	0x01D6EF38 STP X22, X21, [X31 + 0x20]
	0x01D6EF3C STP X20, X19, [X31 + 0x30]
	0x01D6EF40 ADRP X24, 0x266A000
	0x01D6EF44 ADRP X23, 0x2385000
	0x01D6EF48 LDRB W8, [X24 + 0x8E4]
	0x01D6EF4C LDR X23, [X23 + 0x658]
	0x01D6EF50 MOV X19, X4
	0x01D6EF54 MOV X20, X3
	0x01D6EF58 MOV X21, X2
	0x01D6EF5C MOV X22, X1
	0x01D6EF60 TBNZ X8, 0x0, 0x1D6EF84
	0x01D6EF64 ADRP X0, 0x2385000
	0x01D6EF68 LDR X0, [X0 + 0x658]
	0x01D6EF6C BL 0x1C16CF4
	0x01D6EF70 ADRP X0, 0x2387000
	0x01D6EF74 LDR X0, [X0 + 0xA18]
	0x01D6EF78 BL 0x1C16CF4
	0x01D6EF7C MOVZ W8, 0x1
	0x01D6EF80 STRB W8, [X24 + 0x8E4]
	0x01D6EF84 LDR X0, [X23]
	0x01D6EF88 LDR W8, [X0 + 0xE0]
	0x01D6EF8C CBNZ W8, 0x1D6EF98
	0x01D6EF90 BL 0x1C16DFC
	0x01D6EF94 LDR X0, [X23]
	0x01D6EF98 LDR X8, [X0 + 0xB8]
	0x01D6EF9C LDR X23, [X8 + 0x10]
	0x01D6EFA0 CBZ X23, 0x1D6F028
	0x01D6EFA4 ADRP X10, 0x2387000
	0x01D6EFA8 LDR X8, [X23]
	0x01D6EFAC LDR X10, [X10 + 0xA18]
	0x01D6EFB0 LDRH W9, [X8 + 0x12E]
	0x01D6EFB4 LDR X1, [X10]
	0x01D6EFB8 CBZ X9, 0x1D6EFDC
	0x01D6EFBC LDR X10, [X8 + 0xB0]
	0x01D6EFC0 ADD X10, X10, 0x8
	0x01D6EFC4 LDUR X11, [X10 - 0x8]
	0x01D6EFC8 CMP X11, X1
	0x01D6EFCC B.EQ 0x1D6EFEC
	0x01D6EFD0 SUBS X9, X9, 0x1
	0x01D6EFD4 ADD X10, X10, 0x10
	0x01D6EFD8 B.NE 0x1D6EFC4
	0x01D6EFDC MOVZ W2, 0x53
	0x01D6EFE0 MOV X0, X23
	0x01D6EFE4 BL 0x1C5C788
	0x01D6EFE8 B 0x1D6EFFC
	0x01D6EFEC LDR W9, [X10]
	0x01D6EFF0 ADD W9, W9, 0x53
	0x01D6EFF4 ADD X8, X8, W9, 0x4, SXTW
	0x01D6EFF8 ADD X0, X8, 0x138
	0x01D6EFFC LDP X6, X5, [X0]
	0x01D6F000 MOV X0, X23
	0x01D6F004 MOV X1, X22
	0x01D6F008 MOV X2, X21
	0x01D6F00C MOV X3, X20
	0x01D6F010 MOV X4, X19

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x266B000
	011 Move X25, 0x2386000
	012 Move W8, [X26+2260]
	013 Move X25, [X25+1624]
	014 Move X19, X6
	015 Move X20, X5
	016 Move X21, X4
	017 Move W22, W3
	018 Move X23, X2
	019 Move X24, X1
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x2386000
	025 Move X0, [X0+1624]
	026 Call 0x1C17CF4
	027 Move X0, 0x2388000
	028 Move X0, [X0+2584]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X26+2260], W8
	032 Move X0, [X25]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X25]
	038 Move X8, [X0+184]
	039 Move X25, [X8+16]
	040 Compare X25, 0
	041 JumpIfEqual {81}
	042 Move X10, 0x2388000
	043 Move X8, [X25]
	044 Move X10, [X10+2584]
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Move X1, [X10]
	047 Compare X9, 0
	048 JumpIfEqual {55}
	049 Move X10, [X8+176]
	050 Add X10, X10, 8
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Subtract X9, X9, 1
	054 Add X10, X10, 16
	055 Move W2, 67
	056 Move X0, X25
	057 Call 0x1C5D788
	058 Move W9, [X10]
	059 Add W9, W9, 67
	060 Add X8, X8, W9
	061 Add X0, X8, 312
	062 Move X8, [X0]
	063 Move X7, [X0+8]
	064 Move X0, X25
	065 Move X1, X24
	066 Move X2, X23
	067 Move W3, W22
	068 Move X4, X21
	069 Move X5, X20
	070 Move X6, X19
	071 Move X20, [X31+64]
	072 Move X19, [X31+72]
	073 Move X22, [X31+48]
	074 Move X21, [X31+56]
	075 Move X24, [X31+32]
	076 Move X23, [X31+40]
	077 Move X26, [X31+16]
	078 Move X25, [X31+24]
	079 Move X30, [X31+80]
	080 CallNoReturn X8
	081 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiUserGroupList> ListUserGroupsAsync(Nakama.ISession session, System.String userId, System.Nullable`1<System.Int32> state = null, System.Int32 limit = 1, System.String cursor = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6F014 LDP X20, X19, [X31 + 0x30]
	0x01D6F018 LDP X22, X21, [X31 + 0x20]
	0x01D6F01C LDP X24, X23, [X31 + 0x10]
	0x01D6F020 LDR X30, [X31], #0x40
	0x01D6F024 BR X6
	0x01D6F028 BL 0x1C16F20
	0x01D6F02C STP X29, X30, [X31 - 0x60]!
	0x01D6F030 STP X28, X27, [X31 + 0x10]
	0x01D6F034 STP X26, X25, [X31 + 0x20]
	0x01D6F038 STP X24, X23, [X31 + 0x30]
	0x01D6F03C STP X22, X21, [X31 + 0x40]
	0x01D6F040 STP X20, X19, [X31 + 0x50]
	0x01D6F044 ADRP X29, 0x2669000
	0x01D6F048 ADRP X26, 0x2384000
	0x01D6F04C LDRB W8, [X29 + 0x8E5]
	0x01D6F050 LDP X27, X28, [X31 + 0x60]
	0x01D6F054 LDR X26, [X26 + 0x658]
	0x01D6F058 MOV X19, X7
	0x01D6F05C MOV X20, X6
	0x01D6F060 MOV X21, X5
	0x01D6F064 MOV X22, X4
	0x01D6F068 MOV X23, X3
	0x01D6F06C MOV X24, X2
	0x01D6F070 MOV X25, X1
	0x01D6F074 TBNZ X8, 0x0, 0x1D6F098
	0x01D6F078 ADRP X0, 0x2384000
	0x01D6F07C LDR X0, [X0 + 0x658]
	0x01D6F080 BL 0x1C16CF4
	0x01D6F084 ADRP X0, 0x2386000
	0x01D6F088 LDR X0, [X0 + 0xA18]
	0x01D6F08C BL 0x1C16CF4
	0x01D6F090 MOVZ W8, 0x1
	0x01D6F094 STRB W8, [X29 + 0x8E5]
	0x01D6F098 LDR X0, [X26]
	0x01D6F09C LDR W8, [X0 + 0xE0]
	0x01D6F0A0 CBNZ W8, 0x1D6F0AC
	0x01D6F0A4 BL 0x1C16DFC
	0x01D6F0A8 LDR X0, [X26]
	0x01D6F0AC LDR X8, [X0 + 0xB8]
	0x01D6F0B0 LDR X26, [X8 + 0x10]
	0x01D6F0B4 CBZ X26, 0x1D6F158
	0x01D6F0B8 ADRP X10, 0x2386000
	0x01D6F0BC LDR X8, [X26]
	0x01D6F0C0 LDR X10, [X10 + 0xA18]
	0x01D6F0C4 LDRH W9, [X8 + 0x12E]
	0x01D6F0C8 LDR X1, [X10]
	0x01D6F0CC CBZ X9, 0x1D6F0F0
	0x01D6F0D0 LDR X10, [X8 + 0xB0]
	0x01D6F0D4 ADD X10, X10, 0x8
	0x01D6F0D8 LDUR X11, [X10 - 0x8]
	0x01D6F0DC CMP X11, X1
	0x01D6F0E0 B.EQ 0x1D6F100
	0x01D6F0E4 SUBS X9, X9, 0x1
	0x01D6F0E8 ADD X10, X10, 0x10
	0x01D6F0EC B.NE 0x1D6F0D8
	0x01D6F0F0 MOVZ W2, 0x54
	0x01D6F0F4 MOV X0, X26
	0x01D6F0F8 BL 0x1C5C788
	0x01D6F0FC B 0x1D6F110
	0x01D6F100 LDR W9, [X10]
	0x01D6F104 ADD W9, W9, 0x54
	0x01D6F108 ADD X8, X8, W9, 0x4, SXTW
	0x01D6F10C ADD X0, X8, 0x138
	0x01D6F110 LDP X9, X8, [X0]
	0x01D6F114 STR X27, [X31 + 0x60]
	0x01D6F118 MOV X0, X26
	0x01D6F11C MOV X1, X25
	0x01D6F120 STP X28, X8, [X31 + 0x68]
	0x01D6F124 MOV X2, X24
	0x01D6F128 MOV X3, X23
	0x01D6F12C MOV X4, X22
	0x01D6F130 MOV X5, X21

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x266A000
	012 Move X26, 0x2385000
	013 Move W8, [X27+2261]
	014 Move X26, [X26+1624]
	015 Move X19, X7
	016 Move X20, X6
	017 Move X21, X5
	018 Move W22, W4
	019 Move X23, X3
	020 Move X24, X2
	021 Move X25, X1
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {34}
	026 Move X0, 0x2385000
	027 Move X0, [X0+1624]
	028 Call 0x1C17CF4
	029 Move X0, 0x2387000
	030 Move X0, [X0+2584]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X27+2261], W8
	034 Move X0, [X26]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X26]
	040 Move X8, [X0+184]
	041 Move X26, [X8+16]
	042 Compare X26, 0
	043 JumpIfEqual {86}
	044 Move X10, 0x2387000
	045 Move X8, [X26]
	046 Move X10, [X10+2584]
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Move X1, [X10]
	049 Compare X9, 0
	050 JumpIfEqual {57}
	051 Move X10, [X8+176]
	052 Add X10, X10, 8
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract X9, X9, 1
	056 Add X10, X10, 16
	057 Move W2, 68
	058 Move X0, X26
	059 Call 0x1C5D788
	060 Move W9, [X10]
	061 Add W9, W9, 68
	062 Add X8, X8, W9
	063 Add X0, X8, 312
	064 Move X8, [X0]
	065 Move X9, [X0+8]
	066 Move X0, X26
	067 Move X1, X25
	068 Move X2, X24
	069 Move X3, X23
	070 Move W4, W22
	071 Move X5, X21
	072 Move X6, X20
	073 Move X7, X19
	074 Move X20, [X31+64]
	075 Move X19, [X31+72]
	076 Move X22, [X31+48]
	077 Move X21, [X31+56]
	078 Move X24, [X31+32]
	079 Move X23, [X31+40]
	080 Move X26, [X31+16]
	081 Move X25, [X31+24]
	082 Move [X31+80], X9
	083 Move X30, [X31+80]
	084 Move X27, [X31+88]
	085 CallNoReturn X8
	086 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiStorageObjectList> ListUsersStorageObjectsAsync(Nakama.ISession session, System.String collection, System.String userId, System.Int32 limit = 1, System.String cursor = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6F134 MOV X6, X20
	0x01D6F138 MOV X7, X19
	0x01D6F13C LDP X20, X19, [X31 + 0x50]
	0x01D6F140 LDP X22, X21, [X31 + 0x40]
	0x01D6F144 LDP X24, X23, [X31 + 0x30]
	0x01D6F148 LDP X26, X25, [X31 + 0x20]
	0x01D6F14C LDP X28, X27, [X31 + 0x10]
	0x01D6F150 LDP X29, X30, [X31], #0x60
	0x01D6F154 BR X9
	0x01D6F158 BL 0x1C16F20
	0x01D6F15C STR X30, [X31 - 0x40]!
	0x01D6F160 STP X24, X23, [X31 + 0x10]
	0x01D6F164 STP X22, X21, [X31 + 0x20]
	0x01D6F168 STP X20, X19, [X31 + 0x30]
	0x01D6F16C ADRP X24, 0x2669000
	0x01D6F170 ADRP X23, 0x2384000
	0x01D6F174 LDRB W8, [X24 + 0x8E6]
	0x01D6F178 LDR X23, [X23 + 0x658]
	0x01D6F17C MOV X19, X4
	0x01D6F180 MOV X20, X3
	0x01D6F184 MOV X21, X2
	0x01D6F188 MOV X22, X1
	0x01D6F18C TBNZ X8, 0x0, 0x1D6F1B0
	0x01D6F190 ADRP X0, 0x2384000
	0x01D6F194 LDR X0, [X0 + 0x658]
	0x01D6F198 BL 0x1C16CF4
	0x01D6F19C ADRP X0, 0x2386000
	0x01D6F1A0 LDR X0, [X0 + 0xA18]
	0x01D6F1A4 BL 0x1C16CF4
	0x01D6F1A8 MOVZ W8, 0x1
	0x01D6F1AC STRB W8, [X24 + 0x8E6]
	0x01D6F1B0 LDR X0, [X23]
	0x01D6F1B4 LDR W8, [X0 + 0xE0]
	0x01D6F1B8 CBNZ W8, 0x1D6F1C4
	0x01D6F1BC BL 0x1C16DFC
	0x01D6F1C0 LDR X0, [X23]
	0x01D6F1C4 LDR X8, [X0 + 0xB8]
	0x01D6F1C8 LDR X23, [X8 + 0x10]
	0x01D6F1CC CBZ X23, 0x1D6F254
	0x01D6F1D0 ADRP X10, 0x2386000
	0x01D6F1D4 LDR X8, [X23]
	0x01D6F1D8 LDR X10, [X10 + 0xA18]
	0x01D6F1DC LDRH W9, [X8 + 0x12E]
	0x01D6F1E0 LDR X1, [X10]
	0x01D6F1E4 CBZ X9, 0x1D6F208
	0x01D6F1E8 LDR X10, [X8 + 0xB0]
	0x01D6F1EC ADD X10, X10, 0x8
	0x01D6F1F0 LDUR X11, [X10 - 0x8]
	0x01D6F1F4 CMP X11, X1
	0x01D6F1F8 B.EQ 0x1D6F218
	0x01D6F1FC SUBS X9, X9, 0x1
	0x01D6F200 ADD X10, X10, 0x10
	0x01D6F204 B.NE 0x1D6F1F0
	0x01D6F208 MOVZ W2, 0x55
	0x01D6F20C MOV X0, X23
	0x01D6F210 BL 0x1C5C788
	0x01D6F214 B 0x1D6F228
	0x01D6F218 LDR W9, [X10]
	0x01D6F21C ADD W9, W9, 0x55
	0x01D6F220 ADD X8, X8, W9, 0x4, SXTW
	0x01D6F224 ADD X0, X8, 0x138
	0x01D6F228 LDP X6, X5, [X0]
	0x01D6F22C MOV X0, X23
	0x01D6F230 MOV X1, X22
	0x01D6F234 MOV X2, X21
	0x01D6F238 MOV X3, X20
	0x01D6F23C MOV X4, X19
	0x01D6F240 LDP X20, X19, [X31 + 0x30]
	0x01D6F244 LDP X22, X21, [X31 + 0x20]
	0x01D6F248 LDP X24, X23, [X31 + 0x10]
	0x01D6F24C LDR X30, [X31], #0x40
	0x01D6F250 BR X6

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x266A000
	012 Move X26, 0x2385000
	013 Move W8, [X27+2262]
	014 Move X26, [X26+1624]
	015 Move X19, X7
	016 Move X20, X6
	017 Move X21, X5
	018 Move W22, W4
	019 Move X23, X3
	020 Move X24, X2
	021 Move X25, X1
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {34}
	026 Move X0, 0x2385000
	027 Move X0, [X0+1624]
	028 Call 0x1C17CF4
	029 Move X0, 0x2387000
	030 Move X0, [X0+2584]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X27+2262], W8
	034 Move X0, [X26]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X26]
	040 Move X8, [X0+184]
	041 Move X26, [X8+16]
	042 Compare X26, 0
	043 JumpIfEqual {86}
	044 Move X10, 0x2387000
	045 Move X8, [X26]
	046 Move X10, [X10+2584]
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Move X1, [X10]
	049 Compare X9, 0
	050 JumpIfEqual {57}
	051 Move X10, [X8+176]
	052 Add X10, X10, 8
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract X9, X9, 1
	056 Add X10, X10, 16
	057 Move W2, 69
	058 Move X0, X26
	059 Call 0x1C5D788
	060 Move W9, [X10]
	061 Add W9, W9, 69
	062 Add X8, X8, W9
	063 Add X0, X8, 312
	064 Move X8, [X0]
	065 Move X9, [X0+8]
	066 Move X0, X26
	067 Move X1, X25
	068 Move X2, X24
	069 Move X3, X23
	070 Move W4, W22
	071 Move X5, X21
	072 Move X6, X20
	073 Move X7, X19
	074 Move X20, [X31+64]
	075 Move X19, [X31+72]
	076 Move X22, [X31+48]
	077 Move X21, [X31+56]
	078 Move X24, [X31+32]
	079 Move X23, [X31+40]
	080 Move X26, [X31+16]
	081 Move X25, [X31+24]
	082 Move [X31+80], X9
	083 Move X30, [X31+80]
	084 Move X27, [X31+88]
	085 CallNoReturn X8
	086 Call 0x1C17F20

Method: System.Threading.Tasks.Task PromoteGroupUsersAsync(Nakama.ISession session, System.String groupId, System.Collections.Generic.IEnumerable`1<System.String> ids, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6F254 BL 0x1C16F20
	0x01D6F258 STR X30, [X31 - 0x40]!
	0x01D6F25C STP X24, X23, [X31 + 0x10]
	0x01D6F260 STP X22, X21, [X31 + 0x20]
	0x01D6F264 STP X20, X19, [X31 + 0x30]
	0x01D6F268 ADRP X24, 0x2669000
	0x01D6F26C ADRP X23, 0x2384000
	0x01D6F270 LDRB W8, [X24 + 0x8E7]
	0x01D6F274 LDR X23, [X23 + 0x658]
	0x01D6F278 MOV X19, X4
	0x01D6F27C MOV X20, X3
	0x01D6F280 MOV X21, X2
	0x01D6F284 MOV X22, X1
	0x01D6F288 TBNZ X8, 0x0, 0x1D6F2AC
	0x01D6F28C ADRP X0, 0x2384000
	0x01D6F290 LDR X0, [X0 + 0x658]
	0x01D6F294 BL 0x1C16CF4
	0x01D6F298 ADRP X0, 0x2386000
	0x01D6F29C LDR X0, [X0 + 0xA18]
	0x01D6F2A0 BL 0x1C16CF4
	0x01D6F2A4 MOVZ W8, 0x1
	0x01D6F2A8 STRB W8, [X24 + 0x8E7]
	0x01D6F2AC LDR X0, [X23]
	0x01D6F2B0 LDR W8, [X0 + 0xE0]
	0x01D6F2B4 CBNZ W8, 0x1D6F2C0
	0x01D6F2B8 BL 0x1C16DFC
	0x01D6F2BC LDR X0, [X23]
	0x01D6F2C0 LDR X8, [X0 + 0xB8]
	0x01D6F2C4 LDR X23, [X8 + 0x10]
	0x01D6F2C8 CBZ X23, 0x1D6F350
	0x01D6F2CC ADRP X10, 0x2386000
	0x01D6F2D0 LDR X8, [X23]
	0x01D6F2D4 LDR X10, [X10 + 0xA18]
	0x01D6F2D8 LDRH W9, [X8 + 0x12E]
	0x01D6F2DC LDR X1, [X10]
	0x01D6F2E0 CBZ X9, 0x1D6F304
	0x01D6F2E4 LDR X10, [X8 + 0xB0]
	0x01D6F2E8 ADD X10, X10, 0x8
	0x01D6F2EC LDUR X11, [X10 - 0x8]
	0x01D6F2F0 CMP X11, X1
	0x01D6F2F4 B.EQ 0x1D6F314
	0x01D6F2F8 SUBS X9, X9, 0x1
	0x01D6F2FC ADD X10, X10, 0x10
	0x01D6F300 B.NE 0x1D6F2EC
	0x01D6F304 MOVZ W2, 0x56
	0x01D6F308 MOV X0, X23
	0x01D6F30C BL 0x1C5C788
	0x01D6F310 B 0x1D6F324
	0x01D6F314 LDR W9, [X10]
	0x01D6F318 ADD W9, W9, 0x56
	0x01D6F31C ADD X8, X8, W9, 0x4, SXTW
	0x01D6F320 ADD X0, X8, 0x138
	0x01D6F324 LDP X6, X5, [X0]
	0x01D6F328 MOV X0, X23
	0x01D6F32C MOV X1, X22
	0x01D6F330 MOV X2, X21
	0x01D6F334 MOV X3, X20
	0x01D6F338 MOV X4, X19
	0x01D6F33C LDP X20, X19, [X31 + 0x30]
	0x01D6F340 LDP X22, X21, [X31 + 0x20]
	0x01D6F344 LDP X24, X23, [X31 + 0x10]
	0x01D6F348 LDR X30, [X31], #0x40
	0x01D6F34C BR X6
	0x01D6F350 BL 0x1C16F20
	0x01D6F354 STP X29, X30, [X31 - 0x60]!

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x266A000
	010 Move X24, 0x2385000
	011 Move W8, [X25+2263]
	012 Move X24, [X24+1624]
	013 Move X19, X5
	014 Move X20, X4
	015 Move X21, X3
	016 Move X22, X2
	017 Move X23, X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x2385000
	023 Move X0, [X0+1624]
	024 Call 0x1C17CF4
	025 Move X0, 0x2387000
	026 Move X0, [X0+2584]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+2263], W8
	030 Move X0, [X24]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X24]
	036 Move X8, [X0+184]
	037 Move X24, [X8+16]
	038 Compare X24, 0
	039 JumpIfEqual {77}
	040 Move X10, 0x2387000
	041 Move X8, [X24]
	042 Move X10, [X10+2584]
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move X1, [X10]
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move W2, 70
	054 Move X0, X24
	055 Call 0x1C5D788
	056 Move W9, [X10]
	057 Add W9, W9, 70
	058 Add X8, X8, W9
	059 Add X0, X8, 312
	060 Move X7, [X0]
	061 Move X6, [X0+8]
	062 Move X0, X24
	063 Move X1, X23
	064 Move X2, X22
	065 Move X3, X21
	066 Move X4, X20
	067 Move X5, X19
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X30, [X31+64]
	075 Move X25, [X31+72]
	076 CallNoReturn X7
	077 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiStorageObjects> ReadStorageObjectsAsync(Nakama.ISession session, Nakama.IApiReadStorageObjectId[] ids, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6F358 STP X28, X27, [X31 + 0x10]
	0x01D6F35C STP X26, X25, [X31 + 0x20]
	0x01D6F360 STP X24, X23, [X31 + 0x30]
	0x01D6F364 STP X22, X21, [X31 + 0x40]
	0x01D6F368 STP X20, X19, [X31 + 0x50]
	0x01D6F36C ADRP X29, 0x2669000
	0x01D6F370 ADRP X26, 0x2384000
	0x01D6F374 LDRB W8, [X29 + 0x8E8]
	0x01D6F378 LDP X27, X28, [X31 + 0x60]
	0x01D6F37C LDR X26, [X26 + 0x658]
	0x01D6F380 MOV X19, X7
	0x01D6F384 MOV X20, X6
	0x01D6F388 MOV X21, X5
	0x01D6F38C MOV X22, X4
	0x01D6F390 MOV X23, X3
	0x01D6F394 MOV X24, X2
	0x01D6F398 MOV X25, X1
	0x01D6F39C TBNZ X8, 0x0, 0x1D6F3C0
	0x01D6F3A0 ADRP X0, 0x2384000
	0x01D6F3A4 LDR X0, [X0 + 0x658]
	0x01D6F3A8 BL 0x1C16CF4
	0x01D6F3AC ADRP X0, 0x2386000
	0x01D6F3B0 LDR X0, [X0 + 0xA18]
	0x01D6F3B4 BL 0x1C16CF4
	0x01D6F3B8 MOVZ W8, 0x1
	0x01D6F3BC STRB W8, [X29 + 0x8E8]
	0x01D6F3C0 LDR X0, [X26]
	0x01D6F3C4 LDR W8, [X0 + 0xE0]
	0x01D6F3C8 CBNZ W8, 0x1D6F3D4
	0x01D6F3CC BL 0x1C16DFC
	0x01D6F3D0 LDR X0, [X26]
	0x01D6F3D4 LDR X8, [X0 + 0xB8]
	0x01D6F3D8 LDR X26, [X8 + 0x10]
	0x01D6F3DC CBZ X26, 0x1D6F480
	0x01D6F3E0 ADRP X10, 0x2386000
	0x01D6F3E4 LDR X8, [X26]
	0x01D6F3E8 LDR X10, [X10 + 0xA18]
	0x01D6F3EC LDRH W9, [X8 + 0x12E]
	0x01D6F3F0 LDR X1, [X10]
	0x01D6F3F4 CBZ X9, 0x1D6F418
	0x01D6F3F8 LDR X10, [X8 + 0xB0]
	0x01D6F3FC ADD X10, X10, 0x8
	0x01D6F400 LDUR X11, [X10 - 0x8]
	0x01D6F404 CMP X11, X1
	0x01D6F408 B.EQ 0x1D6F428
	0x01D6F40C SUBS X9, X9, 0x1
	0x01D6F410 ADD X10, X10, 0x10
	0x01D6F414 B.NE 0x1D6F400
	0x01D6F418 MOVZ W2, 0x57
	0x01D6F41C MOV X0, X26
	0x01D6F420 BL 0x1C5C788
	0x01D6F424 B 0x1D6F438
	0x01D6F428 LDR W9, [X10]
	0x01D6F42C ADD W9, W9, 0x57
	0x01D6F430 ADD X8, X8, W9, 0x4, SXTW
	0x01D6F434 ADD X0, X8, 0x138
	0x01D6F438 LDP X9, X8, [X0]
	0x01D6F43C STR X27, [X31 + 0x60]
	0x01D6F440 MOV X0, X26
	0x01D6F444 MOV X1, X25
	0x01D6F448 STP X28, X8, [X31 + 0x68]
	0x01D6F44C MOV X2, X24
	0x01D6F450 MOV X3, X23

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x266A000
	009 Move X23, 0x2385000
	010 Move W8, [X24+2264]
	011 Move X23, [X23+1624]
	012 Move X19, X4
	013 Move X20, X3
	014 Move X21, X2
	015 Move X22, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x2385000
	021 Move X0, [X0+1624]
	022 Call 0x1C17CF4
	023 Move X0, 0x2387000
	024 Move X0, [X0+2584]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+2264], W8
	028 Move X0, [X23]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X23]
	034 Move X8, [X0+184]
	035 Move X23, [X8+16]
	036 Compare X23, 0
	037 JumpIfEqual {73}
	038 Move X10, 0x2387000
	039 Move X8, [X23]
	040 Move X10, [X10+2584]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X10]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move W2, 71
	052 Move X0, X23
	053 Call 0x1C5D788
	054 Move W9, [X10]
	055 Add W9, W9, 71
	056 Add X8, X8, W9
	057 Add X0, X8, 312
	058 Move X6, [X0]
	059 Move X5, [X0+8]
	060 Move X0, X23
	061 Move X1, X22
	062 Move X2, X21
	063 Move X3, X20
	064 Move X4, X19
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X24, [X31+16]
	070 Move X23, [X31+24]
	071 Move X30, [X31+64]
	072 CallNoReturn X6
	073 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiRpc> RpcAsync(Nakama.ISession session, System.String id, System.String payload, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6F454 MOV X4, X22
	0x01D6F458 MOV X5, X21
	0x01D6F45C MOV X6, X20
	0x01D6F460 MOV X7, X19
	0x01D6F464 LDP X20, X19, [X31 + 0x50]
	0x01D6F468 LDP X22, X21, [X31 + 0x40]
	0x01D6F46C LDP X24, X23, [X31 + 0x30]
	0x01D6F470 LDP X26, X25, [X31 + 0x20]
	0x01D6F474 LDP X28, X27, [X31 + 0x10]
	0x01D6F478 LDP X29, X30, [X31], #0x60
	0x01D6F47C BR X9
	0x01D6F480 BL 0x1C16F20
	0x01D6F484 STP X29, X30, [X31 - 0x60]!
	0x01D6F488 STP X28, X27, [X31 + 0x10]
	0x01D6F48C STP X26, X25, [X31 + 0x20]
	0x01D6F490 STP X24, X23, [X31 + 0x30]
	0x01D6F494 STP X22, X21, [X31 + 0x40]
	0x01D6F498 STP X20, X19, [X31 + 0x50]
	0x01D6F49C ADRP X29, 0x2669000
	0x01D6F4A0 ADRP X26, 0x2384000
	0x01D6F4A4 LDRB W8, [X29 + 0x8E9]
	0x01D6F4A8 LDP X27, X28, [X31 + 0x60]
	0x01D6F4AC LDR X26, [X26 + 0x658]
	0x01D6F4B0 MOV X19, X7
	0x01D6F4B4 MOV X20, X6
	0x01D6F4B8 MOV X21, X5
	0x01D6F4BC MOV W24, W4
	0x01D6F4C0 MOV X22, X3
	0x01D6F4C4 MOV X23, X2
	0x01D6F4C8 MOV X25, X1
	0x01D6F4CC TBNZ X8, 0x0, 0x1D6F4F0
	0x01D6F4D0 ADRP X0, 0x2384000
	0x01D6F4D4 LDR X0, [X0 + 0x658]
	0x01D6F4D8 BL 0x1C16CF4
	0x01D6F4DC ADRP X0, 0x2386000
	0x01D6F4E0 LDR X0, [X0 + 0xA18]
	0x01D6F4E4 BL 0x1C16CF4
	0x01D6F4E8 MOVZ W8, 0x1
	0x01D6F4EC STRB W8, [X29 + 0x8E9]
	0x01D6F4F0 LDR X0, [X26]
	0x01D6F4F4 LDR W8, [X0 + 0xE0]
	0x01D6F4F8 CBNZ W8, 0x1D6F504
	0x01D6F4FC BL 0x1C16DFC
	0x01D6F500 LDR X0, [X26]
	0x01D6F504 LDR X8, [X0 + 0xB8]
	0x01D6F508 LDR X26, [X8 + 0x10]
	0x01D6F50C CBZ X26, 0x1D6F5B0
	0x01D6F510 ADRP X10, 0x2386000
	0x01D6F514 LDR X8, [X26]
	0x01D6F518 LDR X10, [X10 + 0xA18]
	0x01D6F51C LDRH W9, [X8 + 0x12E]
	0x01D6F520 LDR X1, [X10]
	0x01D6F524 CBZ X9, 0x1D6F548
	0x01D6F528 LDR X10, [X8 + 0xB0]
	0x01D6F52C ADD X10, X10, 0x8
	0x01D6F530 LDUR X11, [X10 - 0x8]
	0x01D6F534 CMP X11, X1
	0x01D6F538 B.EQ 0x1D6F558
	0x01D6F53C SUBS X9, X9, 0x1
	0x01D6F540 ADD X10, X10, 0x10
	0x01D6F544 B.NE 0x1D6F530
	0x01D6F548 MOVZ W2, 0x58
	0x01D6F54C MOV X0, X26
	0x01D6F550 BL 0x1C5C788
	0x01D6F554 B 0x1D6F568

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x266A000
	010 Move X24, 0x2385000
	011 Move W8, [X25+2265]
	012 Move X24, [X24+1624]
	013 Move X19, X5
	014 Move X20, X4
	015 Move X21, X3
	016 Move X22, X2
	017 Move X23, X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x2385000
	023 Move X0, [X0+1624]
	024 Call 0x1C17CF4
	025 Move X0, 0x2387000
	026 Move X0, [X0+2584]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+2265], W8
	030 Move X0, [X24]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X24]
	036 Move X8, [X0+184]
	037 Move X24, [X8+16]
	038 Compare X24, 0
	039 JumpIfEqual {77}
	040 Move X10, 0x2387000
	041 Move X8, [X24]
	042 Move X10, [X10+2584]
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move X1, [X10]
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move W2, 72
	054 Move X0, X24
	055 Call 0x1C5D788
	056 Move W9, [X10]
	057 Add W9, W9, 72
	058 Add X8, X8, W9
	059 Add X0, X8, 312
	060 Move X7, [X0]
	061 Move X6, [X0+8]
	062 Move X0, X24
	063 Move X1, X23
	064 Move X2, X22
	065 Move X3, X21
	066 Move X4, X20
	067 Move X5, X19
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X30, [X31+64]
	075 Move X25, [X31+72]
	076 CallNoReturn X7
	077 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiRpc> RpcAsync(Nakama.ISession session, System.String id, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6F558 LDR W9, [X10]
	0x01D6F55C ADD W9, W9, 0x58
	0x01D6F560 ADD X8, X8, W9, 0x4, SXTW
	0x01D6F564 ADD X0, X8, 0x138
	0x01D6F568 LDP X9, X8, [X0]
	0x01D6F56C AND W4, W24, 0x1
	0x01D6F570 STR X27, [X31 + 0x60]
	0x01D6F574 MOV X0, X26
	0x01D6F578 STP X28, X8, [X31 + 0x68]
	0x01D6F57C MOV X1, X25
	0x01D6F580 MOV X2, X23
	0x01D6F584 MOV X3, X22
	0x01D6F588 MOV X5, X21
	0x01D6F58C MOV X6, X20
	0x01D6F590 MOV X7, X19
	0x01D6F594 LDP X20, X19, [X31 + 0x50]
	0x01D6F598 LDP X22, X21, [X31 + 0x40]
	0x01D6F59C LDP X24, X23, [X31 + 0x30]
	0x01D6F5A0 LDP X26, X25, [X31 + 0x20]
	0x01D6F5A4 LDP X28, X27, [X31 + 0x10]
	0x01D6F5A8 LDP X29, X30, [X31], #0x60
	0x01D6F5AC BR X9
	0x01D6F5B0 BL 0x1C16F20
	0x01D6F5B4 STP X30, X25, [X31 - 0x40]!
	0x01D6F5B8 STP X24, X23, [X31 + 0x10]
	0x01D6F5BC STP X22, X21, [X31 + 0x20]
	0x01D6F5C0 STP X20, X19, [X31 + 0x30]
	0x01D6F5C4 ADRP X25, 0x2669000
	0x01D6F5C8 ADRP X24, 0x2384000
	0x01D6F5CC LDRB W8, [X25 + 0x8EA]
	0x01D6F5D0 LDR X24, [X24 + 0x658]
	0x01D6F5D4 MOV X19, X5
	0x01D6F5D8 MOV X20, X4
	0x01D6F5DC MOV W23, W3
	0x01D6F5E0 MOV X21, X2
	0x01D6F5E4 MOV X22, X1
	0x01D6F5E8 TBNZ X8, 0x0, 0x1D6F60C
	0x01D6F5EC ADRP X0, 0x2384000
	0x01D6F5F0 LDR X0, [X0 + 0x658]
	0x01D6F5F4 BL 0x1C16CF4
	0x01D6F5F8 ADRP X0, 0x2386000
	0x01D6F5FC LDR X0, [X0 + 0xA18]
	0x01D6F600 BL 0x1C16CF4
	0x01D6F604 MOVZ W8, 0x1
	0x01D6F608 STRB W8, [X25 + 0x8EA]
	0x01D6F60C LDR X0, [X24]
	0x01D6F610 LDR W8, [X0 + 0xE0]
	0x01D6F614 CBNZ W8, 0x1D6F620
	0x01D6F618 BL 0x1C16DFC
	0x01D6F61C LDR X0, [X24]
	0x01D6F620 LDR X8, [X0 + 0xB8]
	0x01D6F624 LDR X24, [X8 + 0x10]
	0x01D6F628 CBZ X24, 0x1D6F6B4
	0x01D6F62C ADRP X10, 0x2386000
	0x01D6F630 LDR X8, [X24]
	0x01D6F634 LDR X10, [X10 + 0xA18]
	0x01D6F638 LDRH W9, [X8 + 0x12E]
	0x01D6F63C LDR X1, [X10]
	0x01D6F640 CBZ X9, 0x1D6F664
	0x01D6F644 LDR X10, [X8 + 0xB0]
	0x01D6F648 ADD X10, X10, 0x8
	0x01D6F64C LDUR X11, [X10 - 0x8]
	0x01D6F650 CMP X11, X1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x266A000
	009 Move X23, 0x2385000
	010 Move W8, [X24+2266]
	011 Move X23, [X23+1624]
	012 Move X19, X4
	013 Move X20, X3
	014 Move X21, X2
	015 Move X22, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x2385000
	021 Move X0, [X0+1624]
	022 Call 0x1C17CF4
	023 Move X0, 0x2387000
	024 Move X0, [X0+2584]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+2266], W8
	028 Move X0, [X23]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X23]
	034 Move X8, [X0+184]
	035 Move X23, [X8+16]
	036 Compare X23, 0
	037 JumpIfEqual {73}
	038 Move X10, 0x2387000
	039 Move X8, [X23]
	040 Move X10, [X10+2584]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X10]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move W2, 73
	052 Move X0, X23
	053 Call 0x1C5D788
	054 Move W9, [X10]
	055 Add W9, W9, 73
	056 Add X8, X8, W9
	057 Add X0, X8, 312
	058 Move X6, [X0]
	059 Move X5, [X0+8]
	060 Move X0, X23
	061 Move X1, X22
	062 Move X2, X21
	063 Move X3, X20
	064 Move X4, X19
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X24, [X31+16]
	070 Move X23, [X31+24]
	071 Move X30, [X31+64]
	072 CallNoReturn X6
	073 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiRpc> RpcAsync(System.String httpKey, System.String id, System.String payload, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6F654 B.EQ 0x1D6F674
	0x01D6F658 SUBS X9, X9, 0x1
	0x01D6F65C ADD X10, X10, 0x10
	0x01D6F660 B.NE 0x1D6F64C
	0x01D6F664 MOVZ W2, 0x59
	0x01D6F668 MOV X0, X24
	0x01D6F66C BL 0x1C5C788
	0x01D6F670 B 0x1D6F684
	0x01D6F674 LDR W9, [X10]
	0x01D6F678 ADD W9, W9, 0x59
	0x01D6F67C ADD X8, X8, W9, 0x4, SXTW
	0x01D6F680 ADD X0, X8, 0x138
	0x01D6F684 LDP X7, X6, [X0]
	0x01D6F688 AND W3, W23, 0x1
	0x01D6F68C MOV X0, X24
	0x01D6F690 MOV X1, X22
	0x01D6F694 MOV X2, X21
	0x01D6F698 MOV X4, X20
	0x01D6F69C MOV X5, X19
	0x01D6F6A0 LDP X20, X19, [X31 + 0x30]
	0x01D6F6A4 LDP X22, X21, [X31 + 0x20]
	0x01D6F6A8 LDP X24, X23, [X31 + 0x10]
	0x01D6F6AC LDP X30, X25, [X31], #0x40
	0x01D6F6B0 BR X7
	0x01D6F6B4 BL 0x1C16F20
	0x01D6F6B8 STP X30, X25, [X31 - 0x40]!
	0x01D6F6BC STP X24, X23, [X31 + 0x10]
	0x01D6F6C0 STP X22, X21, [X31 + 0x20]
	0x01D6F6C4 STP X20, X19, [X31 + 0x30]
	0x01D6F6C8 ADRP X25, 0x2669000
	0x01D6F6CC ADRP X24, 0x2384000
	0x01D6F6D0 LDRB W8, [X25 + 0x8EB]
	0x01D6F6D4 LDR X24, [X24 + 0x658]
	0x01D6F6D8 MOV X19, X5
	0x01D6F6DC MOV X20, X4
	0x01D6F6E0 MOV W23, W3
	0x01D6F6E4 MOV X21, X2
	0x01D6F6E8 MOV X22, X1
	0x01D6F6EC TBNZ X8, 0x0, 0x1D6F710
	0x01D6F6F0 ADRP X0, 0x2384000
	0x01D6F6F4 LDR X0, [X0 + 0x658]
	0x01D6F6F8 BL 0x1C16CF4
	0x01D6F6FC ADRP X0, 0x2386000
	0x01D6F700 LDR X0, [X0 + 0xA18]
	0x01D6F704 BL 0x1C16CF4
	0x01D6F708 MOVZ W8, 0x1
	0x01D6F70C STRB W8, [X25 + 0x8EB]
	0x01D6F710 LDR X0, [X24]
	0x01D6F714 LDR W8, [X0 + 0xE0]
	0x01D6F718 CBNZ W8, 0x1D6F724
	0x01D6F71C BL 0x1C16DFC
	0x01D6F720 LDR X0, [X24]
	0x01D6F724 LDR X8, [X0 + 0xB8]
	0x01D6F728 LDR X24, [X8 + 0x10]
	0x01D6F72C CBZ X24, 0x1D6F7B8
	0x01D6F730 ADRP X10, 0x2386000
	0x01D6F734 LDR X8, [X24]
	0x01D6F738 LDR X10, [X10 + 0xA18]
	0x01D6F73C LDRH W9, [X8 + 0x12E]
	0x01D6F740 LDR X1, [X10]
	0x01D6F744 CBZ X9, 0x1D6F768
	0x01D6F748 LDR X10, [X8 + 0xB0]
	0x01D6F74C ADD X10, X10, 0x8
	0x01D6F750 LDUR X11, [X10 - 0x8]
	0x01D6F754 CMP X11, X1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x266A000
	010 Move X24, 0x2385000
	011 Move W8, [X25+2267]
	012 Move X24, [X24+1624]
	013 Move X19, X5
	014 Move X20, X4
	015 Move X21, X3
	016 Move X22, X2
	017 Move X23, X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x2385000
	023 Move X0, [X0+1624]
	024 Call 0x1C17CF4
	025 Move X0, 0x2387000
	026 Move X0, [X0+2584]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+2267], W8
	030 Move X0, [X24]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X24]
	036 Move X8, [X0+184]
	037 Move X24, [X8+16]
	038 Compare X24, 0
	039 JumpIfEqual {77}
	040 Move X10, 0x2387000
	041 Move X8, [X24]
	042 Move X10, [X10+2584]
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move X1, [X10]
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move W2, 74
	054 Move X0, X24
	055 Call 0x1C5D788
	056 Move W9, [X10]
	057 Add W9, W9, 74
	058 Add X8, X8, W9
	059 Add X0, X8, 312
	060 Move X7, [X0]
	061 Move X6, [X0+8]
	062 Move X0, X24
	063 Move X1, X23
	064 Move X2, X22
	065 Move X3, X21
	066 Move X4, X20
	067 Move X5, X19
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X30, [X31+64]
	075 Move X25, [X31+72]
	076 CallNoReturn X7
	077 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiRpc> RpcAsync(System.String httpKey, System.String id, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6F758 B.EQ 0x1D6F778
	0x01D6F75C SUBS X9, X9, 0x1
	0x01D6F760 ADD X10, X10, 0x10
	0x01D6F764 B.NE 0x1D6F750
	0x01D6F768 MOVZ W2, 0x5A
	0x01D6F76C MOV X0, X24
	0x01D6F770 BL 0x1C5C788
	0x01D6F774 B 0x1D6F788
	0x01D6F778 LDR W9, [X10]
	0x01D6F77C ADD W9, W9, 0x5A
	0x01D6F780 ADD X8, X8, W9, 0x4, SXTW
	0x01D6F784 ADD X0, X8, 0x138
	0x01D6F788 LDP X7, X6, [X0]
	0x01D6F78C AND W3, W23, 0x1
	0x01D6F790 MOV X0, X24
	0x01D6F794 MOV X1, X22
	0x01D6F798 MOV X2, X21
	0x01D6F79C MOV X4, X20
	0x01D6F7A0 MOV X5, X19
	0x01D6F7A4 LDP X20, X19, [X31 + 0x30]
	0x01D6F7A8 LDP X22, X21, [X31 + 0x20]
	0x01D6F7AC LDP X24, X23, [X31 + 0x10]
	0x01D6F7B0 LDP X30, X25, [X31], #0x40
	0x01D6F7B4 BR X7
	0x01D6F7B8 BL 0x1C16F20
	0x01D6F7BC STP X30, X25, [X31 - 0x40]!
	0x01D6F7C0 STP X24, X23, [X31 + 0x10]
	0x01D6F7C4 STP X22, X21, [X31 + 0x20]
	0x01D6F7C8 STP X20, X19, [X31 + 0x30]
	0x01D6F7CC ADRP X25, 0x2669000
	0x01D6F7D0 ADRP X24, 0x2384000
	0x01D6F7D4 LDRB W8, [X25 + 0x8EC]
	0x01D6F7D8 LDR X24, [X24 + 0x658]
	0x01D6F7DC MOV X19, X5
	0x01D6F7E0 MOV X20, X4
	0x01D6F7E4 MOV W23, W3
	0x01D6F7E8 MOV X21, X2
	0x01D6F7EC MOV X22, X1
	0x01D6F7F0 TBNZ X8, 0x0, 0x1D6F814
	0x01D6F7F4 ADRP X0, 0x2384000
	0x01D6F7F8 LDR X0, [X0 + 0x658]
	0x01D6F7FC BL 0x1C16CF4
	0x01D6F800 ADRP X0, 0x2386000
	0x01D6F804 LDR X0, [X0 + 0xA18]
	0x01D6F808 BL 0x1C16CF4
	0x01D6F80C MOVZ W8, 0x1
	0x01D6F810 STRB W8, [X25 + 0x8EC]
	0x01D6F814 LDR X0, [X24]
	0x01D6F818 LDR W8, [X0 + 0xE0]
	0x01D6F81C CBNZ W8, 0x1D6F828
	0x01D6F820 BL 0x1C16DFC
	0x01D6F824 LDR X0, [X24]
	0x01D6F828 LDR X8, [X0 + 0xB8]
	0x01D6F82C LDR X24, [X8 + 0x10]
	0x01D6F830 CBZ X24, 0x1D6F8BC
	0x01D6F834 ADRP X10, 0x2386000
	0x01D6F838 LDR X8, [X24]
	0x01D6F83C LDR X10, [X10 + 0xA18]
	0x01D6F840 LDRH W9, [X8 + 0x12E]
	0x01D6F844 LDR X1, [X10]
	0x01D6F848 CBZ X9, 0x1D6F86C
	0x01D6F84C LDR X10, [X8 + 0xB0]
	0x01D6F850 ADD X10, X10, 0x8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x266A000
	009 Move X23, 0x2385000
	010 Move W8, [X24+2268]
	011 Move X23, [X23+1624]
	012 Move X19, X4
	013 Move X20, X3
	014 Move X21, X2
	015 Move X22, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x2385000
	021 Move X0, [X0+1624]
	022 Call 0x1C17CF4
	023 Move X0, 0x2387000
	024 Move X0, [X0+2584]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+2268], W8
	028 Move X0, [X23]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X23]
	034 Move X8, [X0+184]
	035 Move X23, [X8+16]
	036 Compare X23, 0
	037 JumpIfEqual {73}
	038 Move X10, 0x2387000
	039 Move X8, [X23]
	040 Move X10, [X10+2584]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X10]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move W2, 75
	052 Move X0, X23
	053 Call 0x1C5D788
	054 Move W9, [X10]
	055 Add W9, W9, 75
	056 Add X8, X8, W9
	057 Add X0, X8, 312
	058 Move X6, [X0]
	059 Move X5, [X0+8]
	060 Move X0, X23
	061 Move X1, X22
	062 Move X2, X21
	063 Move X3, X20
	064 Move X4, X19
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X24, [X31+16]
	070 Move X23, [X31+24]
	071 Move X30, [X31+64]
	072 CallNoReturn X6
	073 Call 0x1C17F20

Method: System.Threading.Tasks.Task SessionLogoutAsync(Nakama.ISession session, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6F854 LDUR X11, [X10 - 0x8]
	0x01D6F858 CMP X11, X1
	0x01D6F85C B.EQ 0x1D6F87C
	0x01D6F860 SUBS X9, X9, 0x1
	0x01D6F864 ADD X10, X10, 0x10
	0x01D6F868 B.NE 0x1D6F854
	0x01D6F86C MOVZ W2, 0x5B
	0x01D6F870 MOV X0, X24
	0x01D6F874 BL 0x1C5C788
	0x01D6F878 B 0x1D6F88C
	0x01D6F87C LDR W9, [X10]
	0x01D6F880 ADD W9, W9, 0x5B
	0x01D6F884 ADD X8, X8, W9, 0x4, SXTW
	0x01D6F888 ADD X0, X8, 0x138
	0x01D6F88C LDP X7, X6, [X0]
	0x01D6F890 AND W3, W23, 0x1
	0x01D6F894 MOV X0, X24
	0x01D6F898 MOV X1, X22
	0x01D6F89C MOV X2, X21
	0x01D6F8A0 MOV X4, X20
	0x01D6F8A4 MOV X5, X19
	0x01D6F8A8 LDP X20, X19, [X31 + 0x30]
	0x01D6F8AC LDP X22, X21, [X31 + 0x20]
	0x01D6F8B0 LDP X24, X23, [X31 + 0x10]
	0x01D6F8B4 LDP X30, X25, [X31], #0x40
	0x01D6F8B8 BR X7
	0x01D6F8BC BL 0x1C16F20
	0x01D6F8C0 STR X30, [X31 - 0x50]!
	0x01D6F8C4 STP X26, X25, [X31 + 0x10]
	0x01D6F8C8 STP X24, X23, [X31 + 0x20]
	0x01D6F8CC STP X22, X21, [X31 + 0x30]
	0x01D6F8D0 STP X20, X19, [X31 + 0x40]
	0x01D6F8D4 ADRP X26, 0x2669000
	0x01D6F8D8 ADRP X25, 0x2384000
	0x01D6F8DC LDRB W8, [X26 + 0x8ED]
	0x01D6F8E0 LDR X25, [X25 + 0x658]
	0x01D6F8E4 MOV X19, X6
	0x01D6F8E8 MOV X20, X5
	0x01D6F8EC MOV W23, W4
	0x01D6F8F0 MOV X21, X3
	0x01D6F8F4 MOV X22, X2
	0x01D6F8F8 MOV X24, X1
	0x01D6F8FC TBNZ X8, 0x0, 0x1D6F920
	0x01D6F900 ADRP X0, 0x2384000
	0x01D6F904 LDR X0, [X0 + 0x658]
	0x01D6F908 BL 0x1C16CF4
	0x01D6F90C ADRP X0, 0x2386000
	0x01D6F910 LDR X0, [X0 + 0xA18]
	0x01D6F914 BL 0x1C16CF4
	0x01D6F918 MOVZ W8, 0x1
	0x01D6F91C STRB W8, [X26 + 0x8ED]
	0x01D6F920 LDR X0, [X25]
	0x01D6F924 LDR W8, [X0 + 0xE0]
	0x01D6F928 CBNZ W8, 0x1D6F934
	0x01D6F92C BL 0x1C16DFC
	0x01D6F930 LDR X0, [X25]
	0x01D6F934 LDR X8, [X0 + 0xB8]
	0x01D6F938 LDR X25, [X8 + 0x10]
	0x01D6F93C CBZ X25, 0x1D6F9D0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x266A000
	008 Move X22, 0x2385000
	009 Move W8, [X23+2269]
	010 Move X22, [X22+1624]
	011 Move X19, X3
	012 Move X20, X2
	013 Move X21, X1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x2385000
	019 Move X0, [X0+1624]
	020 Call 0x1C17CF4
	021 Move X0, 0x2387000
	022 Move X0, [X0+2584]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+2269], W8
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X22]
	032 Move X8, [X0+184]
	033 Move X22, [X8+16]
	034 Compare X22, 0
	035 JumpIfEqual {69}
	036 Move X10, 0x2387000
	037 Move X8, [X22]
	038 Move X10, [X10+2584]
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Move X1, [X10]
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move W2, 76
	050 Move X0, X22
	051 Call 0x1C5D788
	052 Move W9, [X10]
	053 Add W9, W9, 76
	054 Add X8, X8, W9
	055 Add X0, X8, 312
	056 Move X5, [X0]
	057 Move X4, [X0+8]
	058 Move X0, X22
	059 Move X1, X21
	060 Move X2, X20
	061 Move X3, X19
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Move X23, [X31+56]
	068 CallNoReturn X5
	069 Call 0x1C17F20

Method: System.Threading.Tasks.Task SessionLogoutAsync(System.String authToken, System.String refreshToken, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6F940 ADRP X10, 0x2386000
	0x01D6F944 LDR X8, [X25]
	0x01D6F948 LDR X10, [X10 + 0xA18]
	0x01D6F94C LDRH W9, [X8 + 0x12E]
	0x01D6F950 LDR X1, [X10]
	0x01D6F954 CBZ X9, 0x1D6F978
	0x01D6F958 LDR X10, [X8 + 0xB0]
	0x01D6F95C ADD X10, X10, 0x8
	0x01D6F960 LDUR X11, [X10 - 0x8]
	0x01D6F964 CMP X11, X1
	0x01D6F968 B.EQ 0x1D6F988
	0x01D6F96C SUBS X9, X9, 0x1
	0x01D6F970 ADD X10, X10, 0x10
	0x01D6F974 B.NE 0x1D6F960
	0x01D6F978 MOVZ W2, 0x5C
	0x01D6F97C MOV X0, X25
	0x01D6F980 BL 0x1C5C788
	0x01D6F984 B 0x1D6F998
	0x01D6F988 LDR W9, [X10]
	0x01D6F98C ADD W9, W9, 0x5C
	0x01D6F990 ADD X8, X8, W9, 0x4, SXTW
	0x01D6F994 ADD X0, X8, 0x138
	0x01D6F998 LDP X8, X7, [X0]
	0x01D6F99C AND W4, W23, 0x1
	0x01D6F9A0 MOV X0, X25
	0x01D6F9A4 MOV X1, X24
	0x01D6F9A8 MOV X2, X22
	0x01D6F9AC MOV X3, X21
	0x01D6F9B0 MOV X5, X20
	0x01D6F9B4 MOV X6, X19
	0x01D6F9B8 LDP X20, X19, [X31 + 0x40]
	0x01D6F9BC LDP X22, X21, [X31 + 0x30]
	0x01D6F9C0 LDP X24, X23, [X31 + 0x20]
	0x01D6F9C4 LDP X26, X25, [X31 + 0x10]
	0x01D6F9C8 LDR X30, [X31], #0x50
	0x01D6F9CC BR X8
	0x01D6F9D0 BL 0x1C16F20
	0x01D6F9D4 STP X30, X25, [X31 - 0x40]!
	0x01D6F9D8 STP X24, X23, [X31 + 0x10]
	0x01D6F9DC STP X22, X21, [X31 + 0x20]
	0x01D6F9E0 STP X20, X19, [X31 + 0x30]
	0x01D6F9E4 ADRP X25, 0x2669000
	0x01D6F9E8 ADRP X24, 0x2384000
	0x01D6F9EC LDRB W8, [X25 + 0x8EE]
	0x01D6F9F0 LDR X24, [X24 + 0x658]
	0x01D6F9F4 MOV X19, X5
	0x01D6F9F8 MOV X20, X4
	0x01D6F9FC MOV W23, W3
	0x01D6FA00 MOV X21, X2
	0x01D6FA04 MOV X22, X1
	0x01D6FA08 TBNZ X8, 0x0, 0x1D6FA2C
	0x01D6FA0C ADRP X0, 0x2384000
	0x01D6FA10 LDR X0, [X0 + 0x658]
	0x01D6FA14 BL 0x1C16CF4
	0x01D6FA18 ADRP X0, 0x2386000
	0x01D6FA1C LDR X0, [X0 + 0xA18]
	0x01D6FA20 BL 0x1C16CF4
	0x01D6FA24 MOVZ W8, 0x1
	0x01D6FA28 STRB W8, [X25 + 0x8EE]
	0x01D6FA2C LDR X0, [X24]
	0x01D6FA30 LDR W8, [X0 + 0xE0]
	0x01D6FA34 CBNZ W8, 0x1D6FA40
	0x01D6FA38 BL 0x1C16DFC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x266A000
	009 Move X23, 0x2385000
	010 Move W8, [X24+2270]
	011 Move X23, [X23+1624]
	012 Move X19, X4
	013 Move X20, X3
	014 Move X21, X2
	015 Move X22, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x2385000
	021 Move X0, [X0+1624]
	022 Call 0x1C17CF4
	023 Move X0, 0x2387000
	024 Move X0, [X0+2584]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+2270], W8
	028 Move X0, [X23]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X23]
	034 Move X8, [X0+184]
	035 Move X23, [X8+16]
	036 Compare X23, 0
	037 JumpIfEqual {73}
	038 Move X10, 0x2387000
	039 Move X8, [X23]
	040 Move X10, [X10+2584]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X10]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move W2, 77
	052 Move X0, X23
	053 Call 0x1C5D788
	054 Move W9, [X10]
	055 Add W9, W9, 77
	056 Add X8, X8, W9
	057 Add X0, X8, 312
	058 Move X6, [X0]
	059 Move X5, [X0+8]
	060 Move X0, X23
	061 Move X1, X22
	062 Move X2, X21
	063 Move X3, X20
	064 Move X4, X19
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X24, [X31+16]
	070 Move X23, [X31+24]
	071 Move X30, [X31+64]
	072 CallNoReturn X6
	073 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.ISession> SessionRefreshAsync(Nakama.ISession session, System.Collections.Generic.Dictionary`2<System.String, System.String> vars = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6FA3C LDR X0, [X24]
	0x01D6FA40 LDR X8, [X0 + 0xB8]
	0x01D6FA44 LDR X24, [X8 + 0x10]
	0x01D6FA48 CBZ X24, 0x1D6FAD4
	0x01D6FA4C ADRP X10, 0x2386000
	0x01D6FA50 LDR X8, [X24]
	0x01D6FA54 LDR X10, [X10 + 0xA18]
	0x01D6FA58 LDRH W9, [X8 + 0x12E]
	0x01D6FA5C LDR X1, [X10]
	0x01D6FA60 CBZ X9, 0x1D6FA84
	0x01D6FA64 LDR X10, [X8 + 0xB0]
	0x01D6FA68 ADD X10, X10, 0x8
	0x01D6FA6C LDUR X11, [X10 - 0x8]
	0x01D6FA70 CMP X11, X1
	0x01D6FA74 B.EQ 0x1D6FA94
	0x01D6FA78 SUBS X9, X9, 0x1
	0x01D6FA7C ADD X10, X10, 0x10
	0x01D6FA80 B.NE 0x1D6FA6C
	0x01D6FA84 MOVZ W2, 0x5D
	0x01D6FA88 MOV X0, X24
	0x01D6FA8C BL 0x1C5C788
	0x01D6FA90 B 0x1D6FAA4
	0x01D6FA94 LDR W9, [X10]
	0x01D6FA98 ADD W9, W9, 0x5D
	0x01D6FA9C ADD X8, X8, W9, 0x4, SXTW
	0x01D6FAA0 ADD X0, X8, 0x138
	0x01D6FAA4 LDP X7, X6, [X0]
	0x01D6FAA8 AND W3, W23, 0x1
	0x01D6FAAC MOV X0, X24
	0x01D6FAB0 MOV X1, X22
	0x01D6FAB4 MOV X2, X21
	0x01D6FAB8 MOV X4, X20
	0x01D6FABC MOV X5, X19
	0x01D6FAC0 LDP X20, X19, [X31 + 0x30]
	0x01D6FAC4 LDP X22, X21, [X31 + 0x20]
	0x01D6FAC8 LDP X24, X23, [X31 + 0x10]
	0x01D6FACC LDP X30, X25, [X31], #0x40
	0x01D6FAD0 BR X7
	0x01D6FAD4 BL 0x1C16F20
	0x01D6FAD8 STP X30, X25, [X31 - 0x40]!
	0x01D6FADC STP X24, X23, [X31 + 0x10]
	0x01D6FAE0 STP X22, X21, [X31 + 0x20]
	0x01D6FAE4 STP X20, X19, [X31 + 0x30]
	0x01D6FAE8 ADRP X25, 0x2669000
	0x01D6FAEC ADRP X24, 0x2384000
	0x01D6FAF0 LDRB W8, [X25 + 0x8EF]
	0x01D6FAF4 LDR X24, [X24 + 0x658]
	0x01D6FAF8 MOV X19, X5
	0x01D6FAFC MOV X20, X4
	0x01D6FB00 MOV W23, W3
	0x01D6FB04 MOV X21, X2
	0x01D6FB08 MOV X22, X1
	0x01D6FB0C TBNZ X8, 0x0, 0x1D6FB30
	0x01D6FB10 ADRP X0, 0x2384000
	0x01D6FB14 LDR X0, [X0 + 0x658]
	0x01D6FB18 BL 0x1C16CF4
	0x01D6FB1C ADRP X0, 0x2386000
	0x01D6FB20 LDR X0, [X0 + 0xA18]
	0x01D6FB24 BL 0x1C16CF4
	0x01D6FB28 MOVZ W8, 0x1
	0x01D6FB2C STRB W8, [X25 + 0x8EF]
	0x01D6FB30 LDR X0, [X24]
	0x01D6FB34 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x266A000
	009 Move X23, 0x2385000
	010 Move W8, [X24+2271]
	011 Move X23, [X23+1624]
	012 Move X19, X4
	013 Move X20, X3
	014 Move X21, X2
	015 Move X22, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x2385000
	021 Move X0, [X0+1624]
	022 Call 0x1C17CF4
	023 Move X0, 0x2387000
	024 Move X0, [X0+2584]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+2271], W8
	028 Move X0, [X23]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X23]
	034 Move X8, [X0+184]
	035 Move X23, [X8+16]
	036 Compare X23, 0
	037 JumpIfEqual {73}
	038 Move X10, 0x2387000
	039 Move X8, [X23]
	040 Move X10, [X10+2584]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X10]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move W2, 78
	052 Move X0, X23
	053 Call 0x1C5D788
	054 Move W9, [X10]
	055 Add W9, W9, 78
	056 Add X8, X8, W9
	057 Add X0, X8, 312
	058 Move X6, [X0]
	059 Move X5, [X0+8]
	060 Move X0, X23
	061 Move X1, X22
	062 Move X2, X21
	063 Move X3, X20
	064 Move X4, X19
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X24, [X31+16]
	070 Move X23, [X31+24]
	071 Move X30, [X31+64]
	072 CallNoReturn X6
	073 Call 0x1C17F20

Method: System.Threading.Tasks.Task UnlinkAppleAsync(Nakama.ISession session, System.String token, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6FB38 CBNZ W8, 0x1D6FB44
	0x01D6FB3C BL 0x1C16DFC
	0x01D6FB40 LDR X0, [X24]
	0x01D6FB44 LDR X8, [X0 + 0xB8]
	0x01D6FB48 LDR X24, [X8 + 0x10]
	0x01D6FB4C CBZ X24, 0x1D6FBD8
	0x01D6FB50 ADRP X10, 0x2386000
	0x01D6FB54 LDR X8, [X24]
	0x01D6FB58 LDR X10, [X10 + 0xA18]
	0x01D6FB5C LDRH W9, [X8 + 0x12E]
	0x01D6FB60 LDR X1, [X10]
	0x01D6FB64 CBZ X9, 0x1D6FB88
	0x01D6FB68 LDR X10, [X8 + 0xB0]
	0x01D6FB6C ADD X10, X10, 0x8
	0x01D6FB70 LDUR X11, [X10 - 0x8]
	0x01D6FB74 CMP X11, X1
	0x01D6FB78 B.EQ 0x1D6FB98
	0x01D6FB7C SUBS X9, X9, 0x1
	0x01D6FB80 ADD X10, X10, 0x10
	0x01D6FB84 B.NE 0x1D6FB70
	0x01D6FB88 MOVZ W2, 0x5E
	0x01D6FB8C MOV X0, X24
	0x01D6FB90 BL 0x1C5C788
	0x01D6FB94 B 0x1D6FBA8
	0x01D6FB98 LDR W9, [X10]
	0x01D6FB9C ADD W9, W9, 0x5E
	0x01D6FBA0 ADD X8, X8, W9, 0x4, SXTW
	0x01D6FBA4 ADD X0, X8, 0x138
	0x01D6FBA8 LDP X7, X6, [X0]
	0x01D6FBAC AND W3, W23, 0x1
	0x01D6FBB0 MOV X0, X24
	0x01D6FBB4 MOV X1, X22
	0x01D6FBB8 MOV X2, X21
	0x01D6FBBC MOV X4, X20
	0x01D6FBC0 MOV X5, X19
	0x01D6FBC4 LDP X20, X19, [X31 + 0x30]
	0x01D6FBC8 LDP X22, X21, [X31 + 0x20]
	0x01D6FBCC LDP X24, X23, [X31 + 0x10]
	0x01D6FBD0 LDP X30, X25, [X31], #0x40
	0x01D6FBD4 BR X7
	0x01D6FBD8 BL 0x1C16F20
	0x01D6FBDC STR X30, [X31 - 0x60]!
	0x01D6FBE0 STP X28, X27, [X31 + 0x10]
	0x01D6FBE4 STP X26, X25, [X31 + 0x20]
	0x01D6FBE8 STP X24, X23, [X31 + 0x30]
	0x01D6FBEC STP X22, X21, [X31 + 0x40]
	0x01D6FBF0 STP X20, X19, [X31 + 0x50]
	0x01D6FBF4 ADRP X28, 0x2669000
	0x01D6FBF8 ADRP X26, 0x2384000
	0x01D6FBFC LDRB W8, [X28 + 0x8F0]
	0x01D6FC00 LDR X27, [X31 + 0x60]
	0x01D6FC04 LDR X26, [X26 + 0x658]
	0x01D6FC08 MOV X19, X7
	0x01D6FC0C MOV W20, W6
	0x01D6FC10 MOV X21, X5
	0x01D6FC14 MOV X22, X4
	0x01D6FC18 MOV X23, X3
	0x01D6FC1C MOV X24, X2
	0x01D6FC20 MOV X25, X1
	0x01D6FC24 TBNZ X8, 0x0, 0x1D6FC48
	0x01D6FC28 ADRP X0, 0x2384000
	0x01D6FC2C LDR X0, [X0 + 0x658]
	0x01D6FC30 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x266A000
	009 Move X23, 0x2385000
	010 Move W8, [X24+2272]
	011 Move X23, [X23+1624]
	012 Move X19, X4
	013 Move X20, X3
	014 Move X21, X2
	015 Move X22, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x2385000
	021 Move X0, [X0+1624]
	022 Call 0x1C17CF4
	023 Move X0, 0x2387000
	024 Move X0, [X0+2584]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+2272], W8
	028 Move X0, [X23]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X23]
	034 Move X8, [X0+184]
	035 Move X23, [X8+16]
	036 Compare X23, 0
	037 JumpIfEqual {73}
	038 Move X10, 0x2387000
	039 Move X8, [X23]
	040 Move X10, [X10+2584]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X10]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move W2, 79
	052 Move X0, X23
	053 Call 0x1C5D788
	054 Move W9, [X10]
	055 Add W9, W9, 79
	056 Add X8, X8, W9
	057 Add X0, X8, 312
	058 Move X6, [X0]
	059 Move X5, [X0+8]
	060 Move X0, X23
	061 Move X1, X22
	062 Move X2, X21
	063 Move X3, X20
	064 Move X4, X19
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X24, [X31+16]
	070 Move X23, [X31+24]
	071 Move X30, [X31+64]
	072 CallNoReturn X6
	073 Call 0x1C17F20

Method: System.Threading.Tasks.Task UnlinkCustomAsync(Nakama.ISession session, System.String id, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6FC34 ADRP X0, 0x2386000
	0x01D6FC38 LDR X0, [X0 + 0xA18]
	0x01D6FC3C BL 0x1C16CF4
	0x01D6FC40 MOVZ W8, 0x1
	0x01D6FC44 STRB W8, [X28 + 0x8F0]
	0x01D6FC48 LDR X0, [X26]
	0x01D6FC4C LDR W8, [X0 + 0xE0]
	0x01D6FC50 CBNZ W8, 0x1D6FC5C
	0x01D6FC54 BL 0x1C16DFC
	0x01D6FC58 LDR X0, [X26]
	0x01D6FC5C LDR X8, [X0 + 0xB8]
	0x01D6FC60 LDR X26, [X8 + 0x10]
	0x01D6FC64 CBZ X26, 0x1D6FD04
	0x01D6FC68 ADRP X10, 0x2386000
	0x01D6FC6C LDR X8, [X26]
	0x01D6FC70 LDR X10, [X10 + 0xA18]
	0x01D6FC74 LDRH W9, [X8 + 0x12E]
	0x01D6FC78 LDR X1, [X10]
	0x01D6FC7C CBZ X9, 0x1D6FCA0
	0x01D6FC80 LDR X10, [X8 + 0xB0]
	0x01D6FC84 ADD X10, X10, 0x8
	0x01D6FC88 LDUR X11, [X10 - 0x8]
	0x01D6FC8C CMP X11, X1
	0x01D6FC90 B.EQ 0x1D6FCB0
	0x01D6FC94 SUBS X9, X9, 0x1
	0x01D6FC98 ADD X10, X10, 0x10
	0x01D6FC9C B.NE 0x1D6FC88
	0x01D6FCA0 MOVZ W2, 0x5F
	0x01D6FCA4 MOV X0, X26
	0x01D6FCA8 BL 0x1C5C788
	0x01D6FCAC B 0x1D6FCC0
	0x01D6FCB0 LDR W9, [X10]
	0x01D6FCB4 ADD W9, W9, 0x5F
	0x01D6FCB8 ADD X8, X8, W9, 0x4, SXTW
	0x01D6FCBC ADD X0, X8, 0x138
	0x01D6FCC0 LDP X9, X8, [X0]
	0x01D6FCC4 MOV X0, X26
	0x01D6FCC8 MOV X1, X25
	0x01D6FCCC MOV X2, X24
	0x01D6FCD0 STP X27, X8, [X31 + 0x60]
	0x01D6FCD4 MOV X3, X23
	0x01D6FCD8 MOV X4, X22
	0x01D6FCDC MOV X5, X21
	0x01D6FCE0 MOV W6, W20
	0x01D6FCE4 MOV X7, X19
	0x01D6FCE8 LDP X20, X19, [X31 + 0x50]
	0x01D6FCEC LDP X22, X21, [X31 + 0x40]
	0x01D6FCF0 LDP X24, X23, [X31 + 0x30]
	0x01D6FCF4 LDP X26, X25, [X31 + 0x20]
	0x01D6FCF8 LDP X28, X27, [X31 + 0x10]
	0x01D6FCFC LDR X30, [X31], #0x60
	0x01D6FD00 BR X9
	0x01D6FD04 BL 0x1C16F20
	0x01D6FD08 STR X30, [X31 - 0x40]!
	0x01D6FD0C STP X24, X23, [X31 + 0x10]
	0x01D6FD10 STP X22, X21, [X31 + 0x20]
	0x01D6FD14 STP X20, X19, [X31 + 0x30]
	0x01D6FD18 ADRP X24, 0x2669000
	0x01D6FD1C ADRP X23, 0x2384000
	0x01D6FD20 LDRB W8, [X24 + 0x8F1]
	0x01D6FD24 LDR X23, [X23 + 0x658]
	0x01D6FD28 MOV X19, X4
	0x01D6FD2C MOV X20, X3

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x266A000
	009 Move X23, 0x2385000
	010 Move W8, [X24+2273]
	011 Move X23, [X23+1624]
	012 Move X19, X4
	013 Move X20, X3
	014 Move X21, X2
	015 Move X22, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x2385000
	021 Move X0, [X0+1624]
	022 Call 0x1C17CF4
	023 Move X0, 0x2387000
	024 Move X0, [X0+2584]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+2273], W8
	028 Move X0, [X23]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X23]
	034 Move X8, [X0+184]
	035 Move X23, [X8+16]
	036 Compare X23, 0
	037 JumpIfEqual {73}
	038 Move X10, 0x2387000
	039 Move X8, [X23]
	040 Move X10, [X10+2584]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X10]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move W2, 80
	052 Move X0, X23
	053 Call 0x1C5D788
	054 Move W9, [X10]
	055 Add W9, W9, 80
	056 Add X8, X8, W9
	057 Add X0, X8, 312
	058 Move X6, [X0]
	059 Move X5, [X0+8]
	060 Move X0, X23
	061 Move X1, X22
	062 Move X2, X21
	063 Move X3, X20
	064 Move X4, X19
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X24, [X31+16]
	070 Move X23, [X31+24]
	071 Move X30, [X31+64]
	072 CallNoReturn X6
	073 Call 0x1C17F20

Method: System.Threading.Tasks.Task UnlinkDeviceAsync(Nakama.ISession session, System.String id, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6FD30 MOV X21, X2
	0x01D6FD34 MOV X22, X1
	0x01D6FD38 TBNZ X8, 0x0, 0x1D6FD5C
	0x01D6FD3C ADRP X0, 0x2384000
	0x01D6FD40 LDR X0, [X0 + 0x658]
	0x01D6FD44 BL 0x1C16CF4
	0x01D6FD48 ADRP X0, 0x2386000
	0x01D6FD4C LDR X0, [X0 + 0xA18]
	0x01D6FD50 BL 0x1C16CF4
	0x01D6FD54 MOVZ W8, 0x1
	0x01D6FD58 STRB W8, [X24 + 0x8F1]
	0x01D6FD5C LDR X0, [X23]
	0x01D6FD60 LDR W8, [X0 + 0xE0]
	0x01D6FD64 CBNZ W8, 0x1D6FD70
	0x01D6FD68 BL 0x1C16DFC
	0x01D6FD6C LDR X0, [X23]
	0x01D6FD70 LDR X8, [X0 + 0xB8]
	0x01D6FD74 LDR X23, [X8 + 0x10]
	0x01D6FD78 CBZ X23, 0x1D6FE00
	0x01D6FD7C ADRP X10, 0x2386000
	0x01D6FD80 LDR X8, [X23]
	0x01D6FD84 LDR X10, [X10 + 0xA18]
	0x01D6FD88 LDRH W9, [X8 + 0x12E]
	0x01D6FD8C LDR X1, [X10]
	0x01D6FD90 CBZ X9, 0x1D6FDB4
	0x01D6FD94 LDR X10, [X8 + 0xB0]
	0x01D6FD98 ADD X10, X10, 0x8
	0x01D6FD9C LDUR X11, [X10 - 0x8]
	0x01D6FDA0 CMP X11, X1
	0x01D6FDA4 B.EQ 0x1D6FDC4
	0x01D6FDA8 SUBS X9, X9, 0x1
	0x01D6FDAC ADD X10, X10, 0x10
	0x01D6FDB0 B.NE 0x1D6FD9C
	0x01D6FDB4 MOVZ W2, 0x60
	0x01D6FDB8 MOV X0, X23
	0x01D6FDBC BL 0x1C5C788
	0x01D6FDC0 B 0x1D6FDD4
	0x01D6FDC4 LDR W9, [X10]
	0x01D6FDC8 ADD W9, W9, 0x60
	0x01D6FDCC ADD X8, X8, W9, 0x4, SXTW
	0x01D6FDD0 ADD X0, X8, 0x138
	0x01D6FDD4 LDP X6, X5, [X0]
	0x01D6FDD8 MOV X0, X23
	0x01D6FDDC MOV X1, X22
	0x01D6FDE0 MOV X2, X21
	0x01D6FDE4 MOV X3, X20
	0x01D6FDE8 MOV X4, X19
	0x01D6FDEC LDP X20, X19, [X31 + 0x30]
	0x01D6FDF0 LDP X22, X21, [X31 + 0x20]
	0x01D6FDF4 LDP X24, X23, [X31 + 0x10]
	0x01D6FDF8 LDR X30, [X31], #0x40
	0x01D6FDFC BR X6
	0x01D6FE00 BL 0x1C16F20
	0x01D6FE04 STR X30, [X31 - 0x60]!
	0x01D6FE08 STP X28, X27, [X31 + 0x10]
	0x01D6FE0C STP X26, X25, [X31 + 0x20]
	0x01D6FE10 STP X24, X23, [X31 + 0x30]
	0x01D6FE14 STP X22, X21, [X31 + 0x40]
	0x01D6FE18 STP X20, X19, [X31 + 0x50]
	0x01D6FE1C ADRP X28, 0x2669000
	0x01D6FE20 ADRP X26, 0x2384000
	0x01D6FE24 LDRB W8, [X28 + 0x8F2]
	0x01D6FE28 LDR X27, [X31 + 0x60]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x266A000
	009 Move X23, 0x2385000
	010 Move W8, [X24+2274]
	011 Move X23, [X23+1624]
	012 Move X19, X4
	013 Move X20, X3
	014 Move X21, X2
	015 Move X22, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x2385000
	021 Move X0, [X0+1624]
	022 Call 0x1C17CF4
	023 Move X0, 0x2387000
	024 Move X0, [X0+2584]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+2274], W8
	028 Move X0, [X23]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X23]
	034 Move X8, [X0+184]
	035 Move X23, [X8+16]
	036 Compare X23, 0
	037 JumpIfEqual {73}
	038 Move X10, 0x2387000
	039 Move X8, [X23]
	040 Move X10, [X10+2584]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X10]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move W2, 81
	052 Move X0, X23
	053 Call 0x1C5D788
	054 Move W9, [X10]
	055 Add W9, W9, 81
	056 Add X8, X8, W9
	057 Add X0, X8, 312
	058 Move X6, [X0]
	059 Move X5, [X0+8]
	060 Move X0, X23
	061 Move X1, X22
	062 Move X2, X21
	063 Move X3, X20
	064 Move X4, X19
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X24, [X31+16]
	070 Move X23, [X31+24]
	071 Move X30, [X31+64]
	072 CallNoReturn X6
	073 Call 0x1C17F20

Method: System.Threading.Tasks.Task UnlinkEmailAsync(Nakama.ISession session, System.String email, System.String password, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6FE2C LDR X26, [X26 + 0x658]
	0x01D6FE30 MOV X19, X7
	0x01D6FE34 MOV W20, W6
	0x01D6FE38 MOV X21, X5
	0x01D6FE3C MOV X22, X4
	0x01D6FE40 MOV X23, X3
	0x01D6FE44 MOV X24, X2
	0x01D6FE48 MOV X25, X1
	0x01D6FE4C TBNZ X8, 0x0, 0x1D6FE70
	0x01D6FE50 ADRP X0, 0x2384000
	0x01D6FE54 LDR X0, [X0 + 0x658]
	0x01D6FE58 BL 0x1C16CF4
	0x01D6FE5C ADRP X0, 0x2386000
	0x01D6FE60 LDR X0, [X0 + 0xA18]
	0x01D6FE64 BL 0x1C16CF4
	0x01D6FE68 MOVZ W8, 0x1
	0x01D6FE6C STRB W8, [X28 + 0x8F2]
	0x01D6FE70 LDR X0, [X26]
	0x01D6FE74 LDR W8, [X0 + 0xE0]
	0x01D6FE78 CBNZ W8, 0x1D6FE84
	0x01D6FE7C BL 0x1C16DFC
	0x01D6FE80 LDR X0, [X26]
	0x01D6FE84 LDR X8, [X0 + 0xB8]
	0x01D6FE88 LDR X26, [X8 + 0x10]
	0x01D6FE8C CBZ X26, 0x1D6FF2C
	0x01D6FE90 ADRP X10, 0x2386000
	0x01D6FE94 LDR X8, [X26]
	0x01D6FE98 LDR X10, [X10 + 0xA18]
	0x01D6FE9C LDRH W9, [X8 + 0x12E]
	0x01D6FEA0 LDR X1, [X10]
	0x01D6FEA4 CBZ X9, 0x1D6FEC8
	0x01D6FEA8 LDR X10, [X8 + 0xB0]
	0x01D6FEAC ADD X10, X10, 0x8
	0x01D6FEB0 LDUR X11, [X10 - 0x8]
	0x01D6FEB4 CMP X11, X1
	0x01D6FEB8 B.EQ 0x1D6FED8
	0x01D6FEBC SUBS X9, X9, 0x1
	0x01D6FEC0 ADD X10, X10, 0x10
	0x01D6FEC4 B.NE 0x1D6FEB0
	0x01D6FEC8 MOVZ W2, 0x61
	0x01D6FECC MOV X0, X26
	0x01D6FED0 BL 0x1C5C788
	0x01D6FED4 B 0x1D6FEE8
	0x01D6FED8 LDR W9, [X10]
	0x01D6FEDC ADD W9, W9, 0x61
	0x01D6FEE0 ADD X8, X8, W9, 0x4, SXTW
	0x01D6FEE4 ADD X0, X8, 0x138
	0x01D6FEE8 LDP X9, X8, [X0]
	0x01D6FEEC MOV X0, X26
	0x01D6FEF0 MOV X1, X25
	0x01D6FEF4 MOV X2, X24
	0x01D6FEF8 STP X27, X8, [X31 + 0x60]
	0x01D6FEFC MOV X3, X23
	0x01D6FF00 MOV X4, X22
	0x01D6FF04 MOV X5, X21
	0x01D6FF08 MOV W6, W20
	0x01D6FF0C MOV X7, X19
	0x01D6FF10 LDP X20, X19, [X31 + 0x50]
	0x01D6FF14 LDP X22, X21, [X31 + 0x40]
	0x01D6FF18 LDP X24, X23, [X31 + 0x30]
	0x01D6FF1C LDP X26, X25, [X31 + 0x20]
	0x01D6FF20 LDP X28, X27, [X31 + 0x10]
	0x01D6FF24 LDR X30, [X31], #0x60
	0x01D6FF28 BR X9
	0x01D6FF2C BL 0x1C16F20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x266A000
	010 Move X24, 0x2385000
	011 Move W8, [X25+2275]
	012 Move X24, [X24+1624]
	013 Move X19, X5
	014 Move X20, X4
	015 Move X21, X3
	016 Move X22, X2
	017 Move X23, X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x2385000
	023 Move X0, [X0+1624]
	024 Call 0x1C17CF4
	025 Move X0, 0x2387000
	026 Move X0, [X0+2584]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+2275], W8
	030 Move X0, [X24]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X24]
	036 Move X8, [X0+184]
	037 Move X24, [X8+16]
	038 Compare X24, 0
	039 JumpIfEqual {77}
	040 Move X10, 0x2387000
	041 Move X8, [X24]
	042 Move X10, [X10+2584]
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move X1, [X10]
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move W2, 82
	054 Move X0, X24
	055 Call 0x1C5D788
	056 Move W9, [X10]
	057 Add W9, W9, 82
	058 Add X8, X8, W9
	059 Add X0, X8, 312
	060 Move X7, [X0]
	061 Move X6, [X0+8]
	062 Move X0, X24
	063 Move X1, X23
	064 Move X2, X22
	065 Move X3, X21
	066 Move X4, X20
	067 Move X5, X19
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X30, [X31+64]
	075 Move X25, [X31+72]
	076 CallNoReturn X7
	077 Call 0x1C17F20

Method: System.Threading.Tasks.Task UnlinkFacebookAsync(Nakama.ISession session, System.String token, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D6FF30 MOV X1, X31
	0x01D6FF34 B 0x3C36C30
	0x01D6FF38 STP X30, X21, [X31 - 0x20]!
	0x01D6FF3C STP X20, X19, [X31 + 0x10]
	0x01D6FF40 ADRP X19, 0x2669000
	0x01D6FF44 ADRP X21, 0x2386000
	0x01D6FF48 ADRP X20, 0x2384000
	0x01D6FF4C LDRB W8, [X19 + 0x8F3]
	0x01D6FF50 LDR X21, [X21 + 0xA50]
	0x01D6FF54 LDR X20, [X20 + 0x658]
	0x01D6FF58 TBNZ X8, 0x0, 0x1D6FF7C
	0x01D6FF5C ADRP X0, 0x2384000
	0x01D6FF60 LDR X0, [X0 + 0x658]
	0x01D6FF64 BL 0x1C16CF4
	0x01D6FF68 ADRP X0, 0x2386000
	0x01D6FF6C LDR X0, [X0 + 0xA50]
	0x01D6FF70 BL 0x1C16CF4
	0x01D6FF74 MOVZ W8, 0x1
	0x01D6FF78 STRB W8, [X19 + 0x8F3]
	0x01D6FF7C LDR X0, [X21]
	0x01D6FF80 BL 0x1C16F10
	0x01D6FF84 MOV X1, X31
	0x01D6FF88 MOV X19, X0
	0x01D6FF8C BL 0x33DFA8C
	0x01D6FF90 LDR X8, [X20]
	0x01D6FF94 LDR X8, [X8 + 0xB8]
	0x01D6FF98 STR X19, [X8 + 0x18]
	0x01D6FF9C LDP X20, X19, [X31 + 0x10]
	0x01D6FFA0 LDP X30, X21, [X31], #0x20
	0x01D6FFA4 RET
	0x01D6FFA8 STR X30, [X31 - 0x20]!
	0x01D6FFAC STP X20, X19, [X31 + 0x10]
	0x01D6FFB0 ADRP X19, 0x2669000
	0x01D6FFB4 ADRP X20, 0x2386000
	0x01D6FFB8 LDRB W8, [X19 + 0x8F4]
	0x01D6FFBC LDR X20, [X20 + 0xAA0]
	0x01D6FFC0 TBNZ X8, 0x0, 0x1D6FFD8
	0x01D6FFC4 ADRP X0, 0x2386000
	0x01D6FFC8 LDR X0, [X0 + 0xAA0]
	0x01D6FFCC BL 0x1C16CF4
	0x01D6FFD0 MOVZ W8, 0x1
	0x01D6FFD4 STRB W8, [X19 + 0x8F4]
	0x01D6FFD8 LDR X0, [X20]
	0x01D6FFDC BL 0x1C16F10
	0x01D6FFE0 MOV X1, X31
	0x01D6FFE4 MOV X19, X0
	0x01D6FFE8 BL 0x33BDD8C
	0x01D6FFEC LDR X8, [X20]
	0x01D6FFF0 LDR X8, [X8 + 0xB8]
	0x01D6FFF4 STR X19, [X8]
	0x01D6FFF8 LDP X20, X19, [X31 + 0x10]
	0x01D6FFFC LDR X30, [X31], #0x20
	0x01D70000 RET
	0x01D70004 MOV X1, X31
	0x01D70008 B 0x33BDD8C
	0x01D7000C SUB X31, X31, 0xA0
	0x01D70010 STR X30, [X31 + 0x60]
	0x01D70014 STP X24, X23, [X31 + 0x70]
	0x01D70018 STP X22, X21, [X31 + 0x80]
	0x01D7001C STP X20, X19, [X31 + 0x90]
	0x01D70020 ADRP X21, 0x2668000
	0x01D70024 LDRB W9, [X21 + 0x8F5]
	0x01D70028 MOV X20, X1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x266A000
	009 Move X23, 0x2385000
	010 Move W8, [X24+2276]
	011 Move X23, [X23+1624]
	012 Move X19, X4
	013 Move X20, X3
	014 Move X21, X2
	015 Move X22, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x2385000
	021 Move X0, [X0+1624]
	022 Call 0x1C17CF4
	023 Move X0, 0x2387000
	024 Move X0, [X0+2584]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+2276], W8
	028 Move X0, [X23]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X23]
	034 Move X8, [X0+184]
	035 Move X23, [X8+16]
	036 Compare X23, 0
	037 JumpIfEqual {73}
	038 Move X10, 0x2387000
	039 Move X8, [X23]
	040 Move X10, [X10+2584]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X10]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move W2, 83
	052 Move X0, X23
	053 Call 0x1C5D788
	054 Move W9, [X10]
	055 Add W9, W9, 83
	056 Add X8, X8, W9
	057 Add X0, X8, 312
	058 Move X6, [X0]
	059 Move X5, [X0+8]
	060 Move X0, X23
	061 Move X1, X22
	062 Move X2, X21
	063 Move X3, X20
	064 Move X4, X19
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X24, [X31+16]
	070 Move X23, [X31+24]
	071 Move X30, [X31+64]
	072 CallNoReturn X6
	073 Call 0x1C17F20

Method: System.Threading.Tasks.Task UnlinkGameCenterAsync(Nakama.ISession session, System.String bundleId, System.String playerId, System.String publicKeyUrl, System.String salt, System.String signature, System.String timestamp, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D7002C MOV X19, X8
	0x01D70030 TBNZ X9, 0x0, 0x1D700FC
	0x01D70034 ADRP X0, 0x2385000
	0x01D70038 LDR X0, [X0 + 0xC48]
	0x01D7003C BL 0x1C16CF4
	0x01D70040 ADRP X0, 0x2384000
	0x01D70044 LDR X0, [X0 + 0x9F0]
	0x01D70048 BL 0x1C16CF4
	0x01D7004C ADRP X0, 0x2383000
	0x01D70050 LDR X0, [X0 + 0x710]
	0x01D70054 BL 0x1C16CF4
	0x01D70058 ADRP X0, 0x2383000
	0x01D7005C LDR X0, [X0 + 0x718]
	0x01D70060 BL 0x1C16CF4
	0x01D70064 ADRP X0, 0x2383000
	0x01D70068 LDR X0, [X0 + 0x720]
	0x01D7006C BL 0x1C16CF4
	0x01D70070 ADRP X0, 0x2385000
	0x01D70074 LDR X0, [X0 + 0xC50]
	0x01D70078 BL 0x1C16CF4
	0x01D7007C ADRP X0, 0x2383000
	0x01D70080 LDR X0, [X0 + 0xDF8]
	0x01D70084 BL 0x1C16CF4
	0x01D70088 ADRP X0, 0x2385000
	0x01D7008C LDR X0, [X0 + 0xC58]
	0x01D70090 BL 0x1C16CF4
	0x01D70094 ADRP X0, 0x2385000
	0x01D70098 LDR X0, [X0 + 0xC60]
	0x01D7009C BL 0x1C16CF4
	0x01D700A0 ADRP X0, 0x2383000
	0x01D700A4 LDR X0, [X0 + 0x788]
	0x01D700A8 BL 0x1C16CF4
	0x01D700AC ADRP X0, 0x2385000
	0x01D700B0 LDR X0, [X0 + 0xC68]
	0x01D700B4 BL 0x1C16CF4
	0x01D700B8 ADRP X0, 0x2385000
	0x01D700BC LDR X0, [X0 + 0xC70]
	0x01D700C0 BL 0x1C16CF4
	0x01D700C4 ADRP X0, 0x2385000
	0x01D700C8 LDR X0, [X0 + 0xC78]
	0x01D700CC BL 0x1C16CF4
	0x01D700D0 ADRP X0, 0x2385000
	0x01D700D4 LDR X0, [X0 + 0xC80]
	0x01D700D8 BL 0x1C16CF4
	0x01D700DC ADRP X0, 0x2385000
	0x01D700E0 LDR X0, [X0 + 0xC88]
	0x01D700E4 BL 0x1C16CF4
	0x01D700E8 ADRP X0, 0x2385000
	0x01D700EC LDR X0, [X0 + 0xA78]
	0x01D700F0 BL 0x1C16CF4
	0x01D700F4 MOVZ W8, 0x1
	0x01D700F8 STRB W8, [X21 + 0x8F5]
	0x01D700FC STR X31, [X31 + 0x68]
	0x01D70100 STUR W31, [X31 + 0x5B]
	0x01D70104 STR W31, [X31 + 0x58]
	0x01D70108 CBZ X20, 0x1D7035C
	0x01D7010C MOV X0, X20
	0x01D70110 MOV X1, X31
	0x01D70114 BL 0x33F0514
	0x01D70118 TBNZ X0, 0x0, 0x1D70360
	0x01D7011C ADRP X8, 0x2385000
	0x01D70120 LDR X8, [X8 + 0xC68]
	0x01D70124 LDR X1, [X8]
	0x01D70128 MOV X0, X20
	0x01D7012C BL 0x269F34C
	0x01D70130 MOV X20, X0
	0x01D70134 CBZ X0, 0x1D70390
	0x01D70138 ADRP X10, 0x2385000
	0x01D7013C LDR X8, [X20]
	0x01D70140 LDR X10, [X10 + 0xC58]
	0x01D70144 LDRH W9, [X8 + 0x12E]
	0x01D70148 LDR X1, [X10]
	0x01D7014C CBZ X9, 0x1D70170
	0x01D70150 LDR X10, [X8 + 0xB0]
	0x01D70154 ADD X10, X10, 0x8
	0x01D70158 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X29, 0x2669000
	014 Move X26, 0x2384000
	015 Move W8, [X29+2277]
	016 Move X27, [X31+96]
	017 Move X28, [X31+104]
	018 Move X26, [X26+1624]
	019 Move X19, X7
	020 Move X20, X6
	021 Move X21, X5
	022 Move X22, X4
	023 Move X23, X3
	024 Move X24, X2
	025 Move X25, X1
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {38}
	030 Move X0, 0x2384000
	031 Move X0, [X0+1624]
	032 Call 0x1C17CF4
	033 Move X0, 0x2386000
	034 Move X0, [X0+2584]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X29+2277], W8
	038 Move X0, [X26]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X26]
	044 Move X8, [X0+184]
	045 Move X26, [X8+16]
	046 Compare X26, 0
	047 JumpIfEqual {94}
	048 Move X10, 0x2386000
	049 Move X8, [X26]
	050 Move X10, [X10+2584]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X1, [X10]
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move W2, 84
	062 Move X0, X26
	063 Call 0x1C5D788
	064 Move W9, [X10]
	065 Add W9, W9, 84
	066 Add X8, X8, W9
	067 Add X0, X8, 312
	068 Move X9, [X0]
	069 Move X8, [X0+8]
	070 Move [X31+96], X27
	071 Move X0, X26
	072 Move X1, X25
	073 Move [X31+104], X28
	074 Move [X31+112], X8
	075 Move X2, X24
	076 Move X3, X23
	077 Move X4, X22
	078 Move X5, X21
	079 Move X6, X20
	080 Move X7, X19
	081 Move X20, [X31+80]
	082 Move X19, [X31+88]
	083 Move X22, [X31+64]
	084 Move X21, [X31+72]
	085 Move X24, [X31+48]
	086 Move X23, [X31+56]
	087 Move X26, [X31+32]
	088 Move X25, [X31+40]
	089 Move X28, [X31+16]
	090 Move X27, [X31+24]
	091 Move X29, [X31+96]
	092 Move X30, [X31+104]
	093 CallNoReturn X9
	094 Call 0x1C17F20

Method: System.Threading.Tasks.Task UnlinkGoogleAsync(Nakama.ISession session, System.String token, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D7015C CMP X11, X1
	0x01D70160 B.EQ 0x1D70180
	0x01D70164 SUBS X9, X9, 0x1
	0x01D70168 ADD X10, X10, 0x10
	0x01D7016C B.NE 0x1D70158
	0x01D70170 MOVZ W2, 0x2
	0x01D70174 MOV X0, X20
	0x01D70178 BL 0x1C5C788
	0x01D7017C B 0x1D70190
	0x01D70180 LDR W9, [X10]
	0x01D70184 ADD W9, W9, 0x2
	0x01D70188 ADD X8, X8, W9, 0x4, SXTW
	0x01D7018C ADD X0, X8, 0x138
	0x01D70190 LDP X8, X1, [X0]
	0x01D70194 MOV X0, X20
	0x01D70198 BLR X8
	0x01D7019C ADRP X8, 0x2385000
	0x01D701A0 LDR X8, [X8 + 0xC60]
	0x01D701A4 LDR X1, [X8]
	0x01D701A8 ADD X8, X31, 0x28
	0x01D701AC BL 0x220F450
	0x01D701B0 ADRP X8, 0x2384000
	0x01D701B4 LDR X8, [X8 + 0x9F0]
	0x01D701B8 LDR X20, [X31 + 0x28]
	0x01D701BC LDUR V0, [X31 + 0x30]
	0x01D701C0 LDP X21, X23, [X31 + 0x40]
	0x01D701C4 LDR X0, [X8]
	0x01D701C8 LDR X24, [X31 + 0x50]
	0x01D701CC STR V0, [X31 + 0x1]
	0x01D701D0 LDR W8, [X0 + 0xE0]
	0x01D701D4 CBNZ W8, 0x1D701DC
	0x01D701D8 BL 0x1C16DFC
	0x01D701DC ADD X0, X31, 0x68
	0x01D701E0 MOVZ W1, 0x7E8
	0x01D701E4 MOVZ W2, 0xA
	0x01D701E8 MOVZ W3, 0x3
	0x01D701EC MOVZ W4, 0xF
	0x01D701F0 MOVZ W7, 0x1
	0x01D701F4 MOV W5, W31
	0x01D701F8 MOV W6, W31
	0x01D701FC STR X31, [X31]
	0x01D70200 BL 0x335F47C
	0x01D70204 ADRP X8, 0x2385000
	0x01D70208 LDR X8, [X8 + 0xC48]
	0x01D7020C LDR X0, [X8]
	0x01D70210 LDR W8, [X0 + 0xE0]
	0x01D70214 CBNZ W8, 0x1D7021C
	0x01D70218 BL 0x1C16DFC
	0x01D7021C MOV X0, X31
	0x01D70220 BL 0x3338524
	0x01D70224 ADRP X8, 0x2385000
	0x01D70228 LDR X8, [X8 + 0xC88]
	0x01D7022C MOV X2, X0
	0x01D70230 LDR X1, [X8]
	0x01D70234 ADD X4, X31, 0x68
	0x01D70238 MOVZ W3, 0x10
	0x01D7023C MOV X0, X21
	0x01D70240 MOV X5, X31
	0x01D70244 BL 0x33628F4
	0x01D70248 TBNZ X0, 0x0, 0x1D702E8
	0x01D7024C ADRP X8, 0x2383000
	0x01D70250 LDR X8, [X8 + 0x720]
	0x01D70254 LDR X0, [X8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x2669000
	009 Move X23, 0x2384000
	010 Move W8, [X24+2278]
	011 Move X23, [X23+1624]
	012 Move X19, X4
	013 Move X20, X3
	014 Move X21, X2
	015 Move X22, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x2384000
	021 Move X0, [X0+1624]
	022 Call 0x1C17CF4
	023 Move X0, 0x2386000
	024 Move X0, [X0+2584]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+2278], W8
	028 Move X0, [X23]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X23]
	034 Move X8, [X0+184]
	035 Move X23, [X8+16]
	036 Compare X23, 0
	037 JumpIfEqual {73}
	038 Move X10, 0x2386000
	039 Move X8, [X23]
	040 Move X10, [X10+2584]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X10]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move W2, 85
	052 Move X0, X23
	053 Call 0x1C5D788
	054 Move W9, [X10]
	055 Add W9, W9, 85
	056 Add X8, X8, W9
	057 Add X0, X8, 312
	058 Move X6, [X0]
	059 Move X5, [X0+8]
	060 Move X0, X23
	061 Move X1, X22
	062 Move X2, X21
	063 Move X3, X20
	064 Move X4, X19
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X24, [X31+16]
	070 Move X23, [X31+24]
	071 Move X30, [X31+64]
	072 CallNoReturn X6
	073 Call 0x1C17F20

Method: System.Threading.Tasks.Task UnlinkSteamAsync(Nakama.ISession session, System.String token, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D70258 BL 0x1C16F10
	0x01D7025C ADRP X8, 0x2383000
	0x01D70260 LDR X8, [X8 + 0x718]
	0x01D70264 MOV X22, X0
	0x01D70268 LDR X1, [X8]
	0x01D7026C BL 0x2AA4804
	0x01D70270 CBZ X22, 0x1D70394
	0x01D70274 ADRP X8, 0x2385000
	0x01D70278 LDR X8, [X8 + 0xC80]
	0x01D7027C ADRP X9, 0x2383000
	0x01D70280 LDR X9, [X9 + 0x710]
	0x01D70284 LDR X1, [X8]
	0x01D70288 LDR X3, [X9]
	0x01D7028C MOV X0, X22
	0x01D70290 MOV X2, X21
	0x01D70294 BL 0x2AA5098
	0x01D70298 ADRP X8, 0x2383000
	0x01D7029C LDR X8, [X8 + 0x788]
	0x01D702A0 LDR X0, [X8]
	0x01D702A4 LDR W8, [X0 + 0xE0]
	0x01D702A8 CBNZ W8, 0x1D702B0
	0x01D702AC BL 0x1C16DFC
	0x01D702B0 ADRP X8, 0x2385000
	0x01D702B4 LDR X8, [X8 + 0xC70]
	0x01D702B8 ADRP X9, 0x2385000
	0x01D702BC ADRP X10, 0x2385000
	0x01D702C0 LDR X9, [X9 + 0xA78]
	0x01D702C4 LDR X10, [X10 + 0xC78]
	0x01D702C8 LDR X1, [X8]
	0x01D702CC LDR X3, [X9]
	0x01D702D0 LDR X4, [X10]
	0x01D702D4 MOVZ W0, 0x40
	0x01D702D8 MOVZ W5, 0x8C
	0x01D702DC MOV X2, X22
	0x01D702E0 MOV X6, X31
	0x01D702E4 BL 0x35C25CC
	0x01D702E8 ADRP X8, 0x2383000
	0x01D702EC LDR X8, [X8 + 0xDF8]
	0x01D702F0 STUR W31, [X31 + 0x5B]
	0x01D702F4 STR W31, [X31 + 0x58]
	0x01D702F8 LDR X0, [X8]
	0x01D702FC LDR W8, [X0 + 0xE0]
	0x01D70300 CBNZ W8, 0x1D70308
	0x01D70304 BL 0x1C16DFC
	0x01D70308 ADRP X8, 0x2385000
	0x01D7030C LDR X8, [X8 + 0xC50]
	0x01D70310 LDR X1, [X8]
	0x01D70314 MOV X0, X20
	0x01D70318 BL 0x21B0650
	0x01D7031C LDP X30, X8, [X31 + 0x60]
	0x01D70320 LDR V0, [X31 + 0x1]
	0x01D70324 LDR W10, [X31 + 0x58]
	0x01D70328 LDUR W11, [X31 + 0x5B]
	0x01D7032C AND W9, W24, 0x1
	0x01D70330 STP W0, W31, [X19]
	0x01D70334 STUR V0, [X19 + 0x8]
	0x01D70338 STRB W9, [X19 + 0x28]
	0x01D7033C STP X8, X23, [X19 + 0x18]
	0x01D70340 STR W11, [X19 + 0x2C]
	0x01D70344 STUR W10, [X19 + 0x29]
	0x01D70348 LDP X20, X19, [X31 + 0x90]
	0x01D7034C LDP X22, X21, [X31 + 0x80]
	0x01D70350 LDP X24, X23, [X31 + 0x70]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x2669000
	009 Move X23, 0x2384000
	010 Move W8, [X24+2279]
	011 Move X23, [X23+1624]
	012 Move X19, X4
	013 Move X20, X3
	014 Move X21, X2
	015 Move X22, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x2384000
	021 Move X0, [X0+1624]
	022 Call 0x1C17CF4
	023 Move X0, 0x2386000
	024 Move X0, [X0+2584]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+2279], W8
	028 Move X0, [X23]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X23]
	034 Move X8, [X0+184]
	035 Move X23, [X8+16]
	036 Compare X23, 0
	037 JumpIfEqual {73}
	038 Move X10, 0x2386000
	039 Move X8, [X23]
	040 Move X10, [X10+2584]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X10]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move W2, 86
	052 Move X0, X23
	053 Call 0x1C5D788
	054 Move W9, [X10]
	055 Add W9, W9, 86
	056 Add X8, X8, W9
	057 Add X0, X8, 312
	058 Move X6, [X0]
	059 Move X5, [X0+8]
	060 Move X0, X23
	061 Move X1, X22
	062 Move X2, X21
	063 Move X3, X20
	064 Move X4, X19
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X24, [X31+16]
	070 Move X23, [X31+24]
	071 Move X30, [X31+64]
	072 CallNoReturn X6
	073 Call 0x1C17F20

Method: System.Threading.Tasks.Task UpdateAccountAsync(Nakama.ISession session, System.String username, System.String displayName = null, System.String avatarUrl = null, System.String langTag = null, System.String location = null, System.String timezone = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D70354 ADD X31, X31, 0xA0
	0x01D70358 RET
	0x01D7035C BL 0x1C16F20
	0x01D70360 MOV X0, X20
	0x01D70364 BL 0x19903C0
	0x01D70368 MOV X0, X20
	0x01D7036C MOV X1, X31
	0x01D70370 BL 0x33F04D8
	0x01D70374 MOV X19, X0
	0x01D70378 ADRP X0, 0x2385000
	0x01D7037C LDR X0, [X0 + 0xA98]
	0x01D70380 BL 0x1C16D08
	0x01D70384 MOV X1, X0
	0x01D70388 MOV X0, X19
	0x01D7038C BL 0x1C16DEC
	0x01D70390 BL 0x1C16F20
	0x01D70394 BL 0x1C16F20
	0x01D70398 B 0x1D703C0
	0x01D7039C B 0x1D703C0
	0x01D703A0 B 0x1D703C0
	0x01D703A4 B 0x1D703C0
	0x01D703A8 B 0x1D703C0
	0x01D703AC B 0x1D703C0
	0x01D703B0 B 0x1D703C0
	0x01D703B4 B 0x1D703C0
	0x01D703B8 B 0x1D703C0
	0x01D703BC B 0x1D703C0
	0x01D703C0 MOV X19, X0
	0x01D703C4 CMP W1, 0x1
	0x01D703C8 B.NE 0x1D70470
	0x01D703CC MOV X0, X19
	0x01D703D0 BL 0x3EB1AD0
	0x01D703D4 MOV X19, X0
	0x01D703D8 ADRP X0, 0x2383000
	0x01D703DC LDR X0, [X0 + 0x7D0]
	0x01D703E0 BL 0x1C16D08
	0x01D703E4 LDR X8, [X19]
	0x01D703E8 LDR X1, [X8]
	0x01D703EC BL 0x1C17270
	0x01D703F0 TBZ X0, 0x0, 0x1D70448
	0x01D703F4 LDR X19, [X19]
	0x01D703F8 BL 0x3EB1AE0
	0x01D703FC ADRP X0, 0x2383000
	0x01D70400 LDR X0, [X0 + 0x7D0]
	0x01D70404 BL 0x1C16D08
	0x01D70408 BL 0x1C16F10
	0x01D7040C MOV X20, X0
	0x01D70410 ADRP X0, 0x2385000
	0x01D70414 LDR X0, [X0 + 0xC90]
	0x01D70418 BL 0x1C16D08
	0x01D7041C MOV X1, X0
	0x01D70420 MOV X0, X20
	0x01D70424 MOV X2, X19
	0x01D70428 MOV X3, X31
	0x01D7042C BL 0x33B2CA0
	0x01D70430 ADRP X0, 0x2385000
	0x01D70434 LDR X0, [X0 + 0xA98]
	0x01D70438 BL 0x1C16D08
	0x01D7043C MOV X1, X0
	0x01D70440 MOV X0, X20
	0x01D70444 BL 0x1C16DEC
	0x01D70448 MOVZ W0, 0x8
	0x01D7044C BL 0x3EB1AF0
	0x01D70450 LDR X8, [X19]
	0x01D70454 STR X8, [X0]
	0x01D70458 ADRP X1, 0x2144000
	0x01D7045C ADD X1, X1, 0xE58
	0x01D70460 MOV X2, X31
	0x01D70464 BL 0x3EB1B00
	0x01D70468 MOV X19, X0
	0x01D7046C BL 0x3EB1AE0
	0x01D70470 MOV X0, X19
	0x01D70474 BL 0x1D2C690
	0x01D70478 BL 0x1990590
	0x01D7047C SUB X31, X31, 0x30
	0x01D70480 STP X30, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X29, 0x2669000
	014 Move X26, 0x2384000
	015 Move W8, [X29+2280]
	016 Move X27, [X31+96]
	017 Move X28, [X31+104]
	018 Move X26, [X26+1624]
	019 Move X19, X7
	020 Move X20, X6
	021 Move X21, X5
	022 Move X22, X4
	023 Move X23, X3
	024 Move X24, X2
	025 Move X25, X1
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {38}
	030 Move X0, 0x2384000
	031 Move X0, [X0+1624]
	032 Call 0x1C17CF4
	033 Move X0, 0x2386000
	034 Move X0, [X0+2584]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X29+2280], W8
	038 Move X0, [X26]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X26]
	044 Move X8, [X0+184]
	045 Move X26, [X8+16]
	046 Compare X26, 0
	047 JumpIfEqual {94}
	048 Move X10, 0x2386000
	049 Move X8, [X26]
	050 Move X10, [X10+2584]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X1, [X10]
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move W2, 87
	062 Move X0, X26
	063 Call 0x1C5D788
	064 Move W9, [X10]
	065 Add W9, W9, 87
	066 Add X8, X8, W9
	067 Add X0, X8, 312
	068 Move X9, [X0]
	069 Move X8, [X0+8]
	070 Move [X31+96], X27
	071 Move X0, X26
	072 Move X1, X25
	073 Move [X31+104], X28
	074 Move [X31+112], X8
	075 Move X2, X24
	076 Move X3, X23
	077 Move X4, X22
	078 Move X5, X21
	079 Move X6, X20
	080 Move X7, X19
	081 Move X20, [X31+80]
	082 Move X19, [X31+88]
	083 Move X22, [X31+64]
	084 Move X21, [X31+72]
	085 Move X24, [X31+48]
	086 Move X23, [X31+56]
	087 Move X26, [X31+32]
	088 Move X25, [X31+40]
	089 Move X28, [X31+16]
	090 Move X27, [X31+24]
	091 Move X29, [X31+96]
	092 Move X30, [X31+104]
	093 CallNoReturn X9
	094 Call 0x1C17F20

Method: System.Threading.Tasks.Task UpdateGroupAsync(Nakama.ISession session, System.String groupId, System.String name, System.Boolean open, System.String description = null, System.String avatarUrl = null, System.String langTag = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D70484 STP X20, X19, [X31 + 0x20]
	0x01D70488 ADRP X20, 0x2668000
	0x01D7048C LDRB W8, [X20 + 0x8F6]
	0x01D70490 MOV X19, X1
	0x01D70494 TBNZ X8, 0x0, 0x1D7050C
	0x01D70498 ADRP X0, 0x2385000
	0x01D7049C LDR X0, [X0 + 0xC98]
	0x01D704A0 BL 0x1C16CF4
	0x01D704A4 ADRP X0, 0x2383000
	0x01D704A8 LDR X0, [X0 + 0xDF8]
	0x01D704AC BL 0x1C16CF4
	0x01D704B0 ADRP X0, 0x2385000
	0x01D704B4 LDR X0, [X0 + 0xC58]
	0x01D704B8 BL 0x1C16CF4
	0x01D704BC ADRP X0, 0x2385000
	0x01D704C0 LDR X0, [X0 + 0xCA0]
	0x01D704C4 BL 0x1C16CF4
	0x01D704C8 ADRP X0, 0x2383000
	0x01D704CC LDR X0, [X0 + 0x788]
	0x01D704D0 BL 0x1C16CF4
	0x01D704D4 ADRP X0, 0x2385000
	0x01D704D8 LDR X0, [X0 + 0xC68]
	0x01D704DC BL 0x1C16CF4
	0x01D704E0 ADRP X0, 0x2385000
	0x01D704E4 LDR X0, [X0 + 0xCA8]
	0x01D704E8 BL 0x1C16CF4
	0x01D704EC ADRP X0, 0x2385000
	0x01D704F0 LDR X0, [X0 + 0xA78]
	0x01D704F4 BL 0x1C16CF4
	0x01D704F8 ADRP X0, 0x2385000
	0x01D704FC LDR X0, [X0 + 0xCB0]
	0x01D70500 BL 0x1C16CF4
	0x01D70504 MOVZ W8, 0x1
	0x01D70508 STRB W8, [X20 + 0x8F6]
	0x01D7050C STR W31, [X31 + 0xC]
	0x01D70510 CBZ X19, 0x1D7068C
	0x01D70514 MOV X0, X19
	0x01D70518 MOV X1, X31
	0x01D7051C BL 0x33F0514
	0x01D70520 TBZ X0, 0x0, 0x1D70598
	0x01D70524 MOV X0, X19
	0x01D70528 MOV X1, X31
	0x01D7052C BL 0x33F04D8
	0x01D70530 ADRP X8, 0x2383000
	0x01D70534 LDR X8, [X8 + 0x788]
	0x01D70538 MOV X19, X0
	0x01D7053C LDR X8, [X8]
	0x01D70540 LDR W9, [X8 + 0xE0]
	0x01D70544 CBNZ W9, 0x1D70550
	0x01D70548 MOV X0, X8
	0x01D7054C BL 0x1C16DFC
	0x01D70550 ADRP X8, 0x2385000
	0x01D70554 ADRP X9, 0x2385000
	0x01D70558 ADRP X10, 0x2385000
	0x01D7055C LDR X8, [X8 + 0xCB0]
	0x01D70560 LDR X9, [X9 + 0xA78]
	0x01D70564 LDR X10, [X10 + 0xCA8]
	0x01D70568 MOVZ W0, 0x40
	0x01D7056C LDR X1, [X8]
	0x01D70570 LDR X4, [X9]
	0x01D70574 LDR X5, [X10]
	0x01D70578 MOVZ W6, 0x118
	0x01D7057C MOV X2, X19
	0x01D70580 MOV X3, X31
	0x01D70584 MOV X7, X31
	0x01D70588 BL 0x35C2674
	0x01D7058C MOV X8, X31
	0x01D70590 MOVZ X9, 0x3
	0x01D70594 B 0x1D70678
	0x01D70598 ADRP X8, 0x2385000
	0x01D7059C LDR X8, [X8 + 0xC68]
	0x01D705A0 LDR X1, [X8]
	0x01D705A4 MOV X0, X19
	0x01D705A8 BL 0x269F34C
	0x01D705AC MOV X19, X0
	0x01D705B0 CBZ X0, 0x1D70690

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X29, 0x2669000
	014 Move X26, 0x2384000
	015 Move W8, [X29+2281]
	016 Move X27, [X31+96]
	017 Move X28, [X31+104]
	018 Move X26, [X26+1624]
	019 Move X19, X7
	020 Move X20, X6
	021 Move X21, X5
	022 Move W24, W4
	023 Move X22, X3
	024 Move X23, X2
	025 Move X25, X1
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {38}
	030 Move X0, 0x2384000
	031 Move X0, [X0+1624]
	032 Call 0x1C17CF4
	033 Move X0, 0x2386000
	034 Move X0, [X0+2584]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X29+2281], W8
	038 Move X0, [X26]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X26]
	044 Move X8, [X0+184]
	045 Move X26, [X8+16]
	046 Compare X26, 0
	047 JumpIfEqual {94}
	048 Move X10, 0x2386000
	049 Move X8, [X26]
	050 Move X10, [X10+2584]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X1, [X10]
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move W2, 88
	062 Move X0, X26
	063 Call 0x1C5D788
	064 Move W9, [X10]
	065 Add W9, W9, 88
	066 Add X8, X8, W9
	067 Add X0, X8, 312
	068 Move X9, [X0]
	069 Move X8, [X0+8]
	070 And W4, W24, 1
	071 Move [X31+96], X27
	072 Move X0, X26
	073 Move [X31+104], X28
	074 Move [X31+112], X8
	075 Move X1, X25
	076 Move X2, X23
	077 Move X3, X22
	078 Move X5, X21
	079 Move X6, X20
	080 Move X7, X19
	081 Move X20, [X31+80]
	082 Move X19, [X31+88]
	083 Move X22, [X31+64]
	084 Move X21, [X31+72]
	085 Move X24, [X31+48]
	086 Move X23, [X31+56]
	087 Move X26, [X31+32]
	088 Move X25, [X31+40]
	089 Move X28, [X31+16]
	090 Move X27, [X31+24]
	091 Move X29, [X31+96]
	092 Move X30, [X31+104]
	093 CallNoReturn X9
	094 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiValidatePurchaseResponse> ValidatePurchaseAppleAsync(Nakama.ISession session, System.String receipt, System.Boolean persist = True, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D705B4 ADRP X10, 0x2385000
	0x01D705B8 LDR X8, [X19]
	0x01D705BC LDR X10, [X10 + 0xC58]
	0x01D705C0 LDRH W9, [X8 + 0x12E]
	0x01D705C4 LDR X1, [X10]
	0x01D705C8 CBZ X9, 0x1D705EC
	0x01D705CC LDR X10, [X8 + 0xB0]
	0x01D705D0 ADD X10, X10, 0x8
	0x01D705D4 LDUR X11, [X10 - 0x8]
	0x01D705D8 CMP X11, X1
	0x01D705DC B.EQ 0x1D705FC
	0x01D705E0 SUBS X9, X9, 0x1
	0x01D705E4 ADD X10, X10, 0x10
	0x01D705E8 B.NE 0x1D705D4
	0x01D705EC MOVZ W2, 0x2
	0x01D705F0 MOV X0, X19
	0x01D705F4 BL 0x1C5C788
	0x01D705F8 B 0x1D7060C
	0x01D705FC LDR W9, [X10]
	0x01D70600 ADD W9, W9, 0x2
	0x01D70604 ADD X8, X8, W9, 0x4, SXTW
	0x01D70608 ADD X0, X8, 0x138
	0x01D7060C LDP X8, X1, [X0]
	0x01D70610 MOV X0, X19
	0x01D70614 BLR X8
	0x01D70618 ADRP X8, 0x2385000
	0x01D7061C LDR X8, [X8 + 0xCA0]
	0x01D70620 LDR X1, [X8]
	0x01D70624 BL 0x220FE44
	0x01D70628 ADRP X8, 0x2383000
	0x01D7062C LDR X8, [X8 + 0xDF8]
	0x01D70630 MOV X19, X0
	0x01D70634 MOV X20, X1
	0x01D70638 LDR X0, [X8]
	0x01D7063C LDR W8, [X0 + 0xE0]
	0x01D70640 CBNZ W8, 0x1D70648
	0x01D70644 BL 0x1C16DFC
	0x01D70648 ADRP X8, 0x2385000
	0x01D7064C LDR X8, [X8 + 0xC98]
	0x01D70650 LDR X2, [X8]
	0x01D70654 ADD X1, X31, 0xC
	0x01D70658 MOV X0, X20
	0x01D7065C BL 0x21B0A58
	0x01D70660 LDR W9, [X31 + 0xC]
	0x01D70664 ANDS W31, W0, 0x1
	0x01D70668 MOVZ X10, 0x1
	0x01D7066C AND X8, X19, 0x1
	0x01D70670 UBFM X9, X9, 0x20, 0x1F
	0x01D70674 CSEL X9, X9, X10, NE
	0x01D70678 LDP X20, X19, [X31 + 0x20]
	0x01D7067C LDP X30, X21, [X31 + 0x10]
	0x01D70680 ORR X0, X9, X8, 0x0
	0x01D70684 ADD X31, X31, 0x30
	0x01D70688 RET
	0x01D7068C BL 0x1C16F20
	0x01D70690 BL 0x1C16F20
	0x01D70694 B 0x1D706A4
	0x01D70698 B 0x1D706A4
	0x01D7069C B 0x1D706A4
	0x01D706A0 B 0x1D706A4
	0x01D706A4 MOV X19, X0
	0x01D706A8 CMP W1, 0x1
	0x01D706AC B.NE 0x1D7077C
	0x01D706B0 MOV X0, X19
	0x01D706B4 BL 0x3EB1AD0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x2669000
	010 Move X24, 0x2384000
	011 Move W8, [X25+2282]
	012 Move X24, [X24+1624]
	013 Move X19, X5
	014 Move X20, X4
	015 Move W23, W3
	016 Move X21, X2
	017 Move X22, X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x2384000
	023 Move X0, [X0+1624]
	024 Call 0x1C17CF4
	025 Move X0, 0x2386000
	026 Move X0, [X0+2584]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+2282], W8
	030 Move X0, [X24]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X24]
	036 Move X8, [X0+184]
	037 Move X24, [X8+16]
	038 Compare X24, 0
	039 JumpIfEqual {77}
	040 Move X10, 0x2386000
	041 Move X8, [X24]
	042 Move X10, [X10+2584]
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move X1, [X10]
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move W2, 89
	054 Move X0, X24
	055 Call 0x1C5D788
	056 Move W9, [X10]
	057 Add W9, W9, 89
	058 Add X8, X8, W9
	059 Add X0, X8, 312
	060 Move X7, [X0]
	061 Move X6, [X0+8]
	062 And W3, W23, 1
	063 Move X0, X24
	064 Move X1, X22
	065 Move X2, X21
	066 Move X4, X20
	067 Move X5, X19
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X30, [X31+64]
	075 Move X25, [X31+72]
	076 CallNoReturn X7
	077 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiValidatePurchaseResponse> ValidatePurchaseFacebookInstantAsync(Nakama.ISession session, System.String signedRequest, System.Boolean persist = True, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D706B8 MOV X19, X0
	0x01D706BC ADRP X0, 0x2383000
	0x01D706C0 LDR X0, [X0 + 0x7D0]
	0x01D706C4 BL 0x1C16D08
	0x01D706C8 LDR X8, [X19]
	0x01D706CC LDR X1, [X8]
	0x01D706D0 BL 0x1C17270
	0x01D706D4 TBZ X0, 0x0, 0x1D70754
	0x01D706D8 LDR X19, [X19]
	0x01D706DC BL 0x3EB1AE0
	0x01D706E0 ADRP X0, 0x2383000
	0x01D706E4 LDR X0, [X0 + 0x788]
	0x01D706E8 BL 0x1C16D08
	0x01D706EC LDR W8, [X0 + 0xE0]
	0x01D706F0 CBNZ W8, 0x1D706F8
	0x01D706F4 BL 0x1C16DFC
	0x01D706F8 ADRP X0, 0x2385000
	0x01D706FC LDR X0, [X0 + 0xCB8]
	0x01D70700 BL 0x1C16D08
	0x01D70704 MOV X20, X0
	0x01D70708 ADRP X0, 0x2385000
	0x01D7070C LDR X0, [X0 + 0xA78]
	0x01D70710 BL 0x1C16D08
	0x01D70714 MOV X21, X0
	0x01D70718 ADRP X0, 0x2385000
	0x01D7071C LDR X0, [X0 + 0xCA8]
	0x01D70720 BL 0x1C16D08
	0x01D70724 MOV X5, X0
	0x01D70728 MOVZ W0, 0x40
	0x01D7072C MOVZ W6, 0x127
	0x01D70730 MOV X1, X20
	0x01D70734 MOV X2, X19
	0x01D70738 MOV X3, X31
	0x01D7073C MOV X4, X21
	0x01D70740 MOV X7, X31
	0x01D70744 BL 0x35C2674
	0x01D70748 MOV X8, X31
	0x01D7074C MOVZ X9, 0x2
	0x01D70750 B 0x1D70678
	0x01D70754 MOVZ W0, 0x8
	0x01D70758 BL 0x3EB1AF0
	0x01D7075C LDR X8, [X19]
	0x01D70760 STR X8, [X0]
	0x01D70764 ADRP X1, 0x2144000
	0x01D70768 ADD X1, X1, 0xE58
	0x01D7076C MOV X2, X31
	0x01D70770 BL 0x3EB1B00
	0x01D70774 MOV X19, X0
	0x01D70778 BL 0x3EB1AE0
	0x01D7077C MOV X0, X19
	0x01D70780 BL 0x1D2C690
	0x01D70784 BL 0x1990590
	0x01D70788 SUB X31, X31, 0x30
	0x01D7078C STP X30, X21, [X31 + 0x10]
	0x01D70790 STP X20, X19, [X31 + 0x20]
	0x01D70794 ADRP X20, 0x2668000
	0x01D70798 LDRB W8, [X20 + 0x8F7]
	0x01D7079C MOV X19, X1
	0x01D707A0 TBNZ X8, 0x0, 0x1D70818
	0x01D707A4 ADRP X0, 0x2385000
	0x01D707A8 LDR X0, [X0 + 0xCC0]
	0x01D707AC BL 0x1C16CF4
	0x01D707B0 ADRP X0, 0x2383000
	0x01D707B4 LDR X0, [X0 + 0xDF8]
	0x01D707B8 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x2669000
	010 Move X24, 0x2384000
	011 Move W8, [X25+2283]
	012 Move X24, [X24+1624]
	013 Move X19, X5
	014 Move X20, X4
	015 Move W23, W3
	016 Move X21, X2
	017 Move X22, X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x2384000
	023 Move X0, [X0+1624]
	024 Call 0x1C17CF4
	025 Move X0, 0x2386000
	026 Move X0, [X0+2584]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+2283], W8
	030 Move X0, [X24]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X24]
	036 Move X8, [X0+184]
	037 Move X24, [X8+16]
	038 Compare X24, 0
	039 JumpIfEqual {77}
	040 Move X10, 0x2386000
	041 Move X8, [X24]
	042 Move X10, [X10+2584]
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move X1, [X10]
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move W2, 90
	054 Move X0, X24
	055 Call 0x1C5D788
	056 Move W9, [X10]
	057 Add W9, W9, 90
	058 Add X8, X8, W9
	059 Add X0, X8, 312
	060 Move X7, [X0]
	061 Move X6, [X0+8]
	062 And W3, W23, 1
	063 Move X0, X24
	064 Move X1, X22
	065 Move X2, X21
	066 Move X4, X20
	067 Move X5, X19
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X30, [X31+64]
	075 Move X25, [X31+72]
	076 CallNoReturn X7
	077 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiValidatePurchaseResponse> ValidatePurchaseGoogleAsync(Nakama.ISession session, System.String receipt, System.Boolean persist = True, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D707BC ADRP X0, 0x2385000
	0x01D707C0 LDR X0, [X0 + 0xC58]
	0x01D707C4 BL 0x1C16CF4
	0x01D707C8 ADRP X0, 0x2385000
	0x01D707CC LDR X0, [X0 + 0xCC8]
	0x01D707D0 BL 0x1C16CF4
	0x01D707D4 ADRP X0, 0x2383000
	0x01D707D8 LDR X0, [X0 + 0x788]
	0x01D707DC BL 0x1C16CF4
	0x01D707E0 ADRP X0, 0x2385000
	0x01D707E4 LDR X0, [X0 + 0xC68]
	0x01D707E8 BL 0x1C16CF4
	0x01D707EC ADRP X0, 0x2385000
	0x01D707F0 LDR X0, [X0 + 0xCD0]
	0x01D707F4 BL 0x1C16CF4
	0x01D707F8 ADRP X0, 0x2385000
	0x01D707FC LDR X0, [X0 + 0xA78]
	0x01D70800 BL 0x1C16CF4
	0x01D70804 ADRP X0, 0x2385000
	0x01D70808 LDR X0, [X0 + 0xCD8]
	0x01D7080C BL 0x1C16CF4
	0x01D70810 MOVZ W8, 0x1
	0x01D70814 STRB W8, [X20 + 0x8F7]
	0x01D70818 STR W31, [X31 + 0xC]
	0x01D7081C CBZ X19, 0x1D70998
	0x01D70820 MOV X0, X19
	0x01D70824 MOV X1, X31
	0x01D70828 BL 0x33F0514
	0x01D7082C TBZ X0, 0x0, 0x1D708A4
	0x01D70830 MOV X0, X19
	0x01D70834 MOV X1, X31
	0x01D70838 BL 0x33F04D8
	0x01D7083C ADRP X8, 0x2383000
	0x01D70840 LDR X8, [X8 + 0x788]
	0x01D70844 MOV X19, X0
	0x01D70848 LDR X8, [X8]
	0x01D7084C LDR W9, [X8 + 0xE0]
	0x01D70850 CBNZ W9, 0x1D7085C
	0x01D70854 MOV X0, X8
	0x01D70858 BL 0x1C16DFC
	0x01D7085C ADRP X8, 0x2385000
	0x01D70860 ADRP X9, 0x2385000
	0x01D70864 ADRP X10, 0x2385000
	0x01D70868 LDR X8, [X8 + 0xCD0]
	0x01D7086C LDR X9, [X9 + 0xA78]
	0x01D70870 LDR X10, [X10 + 0xCD8]
	0x01D70874 MOVZ W0, 0x40
	0x01D70878 LDR X1, [X8]
	0x01D7087C LDR X4, [X9]
	0x01D70880 LDR X5, [X10]
	0x01D70884 MOVZ W6, 0x15B
	0x01D70888 MOV X2, X19
	0x01D7088C MOV X3, X31
	0x01D70890 MOV X7, X31
	0x01D70894 BL 0x35C2674
	0x01D70898 MOV X8, X31
	0x01D7089C MOVZ X9, 0x3
	0x01D708A0 B 0x1D70984
	0x01D708A4 ADRP X8, 0x2385000
	0x01D708A8 LDR X8, [X8 + 0xC68]
	0x01D708AC LDR X1, [X8]
	0x01D708B0 MOV X0, X19
	0x01D708B4 BL 0x269F34C
	0x01D708B8 MOV X19, X0
	0x01D708BC CBZ X0, 0x1D7099C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x2669000
	010 Move X24, 0x2384000
	011 Move W8, [X25+2284]
	012 Move X24, [X24+1624]
	013 Move X19, X5
	014 Move X20, X4
	015 Move W23, W3
	016 Move X21, X2
	017 Move X22, X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x2384000
	023 Move X0, [X0+1624]
	024 Call 0x1C17CF4
	025 Move X0, 0x2386000
	026 Move X0, [X0+2584]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+2284], W8
	030 Move X0, [X24]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X24]
	036 Move X8, [X0+184]
	037 Move X24, [X8+16]
	038 Compare X24, 0
	039 JumpIfEqual {77}
	040 Move X10, 0x2386000
	041 Move X8, [X24]
	042 Move X10, [X10+2584]
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move X1, [X10]
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move W2, 91
	054 Move X0, X24
	055 Call 0x1C5D788
	056 Move W9, [X10]
	057 Add W9, W9, 91
	058 Add X8, X8, W9
	059 Add X0, X8, 312
	060 Move X7, [X0]
	061 Move X6, [X0+8]
	062 And W3, W23, 1
	063 Move X0, X24
	064 Move X1, X22
	065 Move X2, X21
	066 Move X4, X20
	067 Move X5, X19
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X30, [X31+64]
	075 Move X25, [X31+72]
	076 CallNoReturn X7
	077 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiValidatePurchaseResponse> ValidatePurchaseHuaweiAsync(Nakama.ISession session, System.String receipt, System.String signature, System.Boolean persist = True, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D708C0 ADRP X10, 0x2385000
	0x01D708C4 LDR X8, [X19]
	0x01D708C8 LDR X10, [X10 + 0xC58]
	0x01D708CC LDRH W9, [X8 + 0x12E]
	0x01D708D0 LDR X1, [X10]
	0x01D708D4 CBZ X9, 0x1D708F8
	0x01D708D8 LDR X10, [X8 + 0xB0]
	0x01D708DC ADD X10, X10, 0x8
	0x01D708E0 LDUR X11, [X10 - 0x8]
	0x01D708E4 CMP X11, X1
	0x01D708E8 B.EQ 0x1D70908
	0x01D708EC SUBS X9, X9, 0x1
	0x01D708F0 ADD X10, X10, 0x10
	0x01D708F4 B.NE 0x1D708E0
	0x01D708F8 MOVZ W2, 0x2
	0x01D708FC MOV X0, X19
	0x01D70900 BL 0x1C5C788
	0x01D70904 B 0x1D70918
	0x01D70908 LDR W9, [X10]
	0x01D7090C ADD W9, W9, 0x2
	0x01D70910 ADD X8, X8, W9, 0x4, SXTW
	0x01D70914 ADD X0, X8, 0x138
	0x01D70918 LDP X8, X1, [X0]
	0x01D7091C MOV X0, X19
	0x01D70920 BLR X8
	0x01D70924 ADRP X8, 0x2385000
	0x01D70928 LDR X8, [X8 + 0xCC8]
	0x01D7092C LDR X1, [X8]
	0x01D70930 BL 0x220F104
	0x01D70934 ADRP X8, 0x2383000
	0x01D70938 LDR X8, [X8 + 0xDF8]
	0x01D7093C MOV X19, X0
	0x01D70940 MOV X20, X1
	0x01D70944 LDR X0, [X8]
	0x01D70948 LDR W8, [X0 + 0xE0]
	0x01D7094C CBNZ W8, 0x1D70954
	0x01D70950 BL 0x1C16DFC
	0x01D70954 ADRP X8, 0x2385000
	0x01D70958 LDR X8, [X8 + 0xCC0]
	0x01D7095C LDR X2, [X8]
	0x01D70960 ADD X1, X31, 0xC
	0x01D70964 MOV X0, X20
	0x01D70968 BL 0x21B0A58
	0x01D7096C LDR W9, [X31 + 0xC]
	0x01D70970 ANDS W31, W0, 0x1
	0x01D70974 MOVZ X10, 0x1
	0x01D70978 AND X8, X19, 0x1
	0x01D7097C UBFM X9, X9, 0x20, 0x1F
	0x01D70980 CSEL X9, X9, X10, NE
	0x01D70984 LDP X20, X19, [X31 + 0x20]
	0x01D70988 LDP X30, X21, [X31 + 0x10]
	0x01D7098C ORR X0, X9, X8, 0x0
	0x01D70990 ADD X31, X31, 0x30
	0x01D70994 RET
	0x01D70998 BL 0x1C16F20
	0x01D7099C BL 0x1C16F20
	0x01D709A0 B 0x1D709B0
	0x01D709A4 B 0x1D709B0
	0x01D709A8 B 0x1D709B0
	0x01D709AC B 0x1D709B0
	0x01D709B0 MOV X19, X0
	0x01D709B4 CMP W1, 0x1
	0x01D709B8 B.NE 0x1D70A88
	0x01D709BC MOV X0, X19
	0x01D709C0 BL 0x3EB1AD0
	0x01D709C4 MOV X19, X0
	0x01D709C8 ADRP X0, 0x2383000
	0x01D709CC LDR X0, [X0 + 0x7D0]
	0x01D709D0 BL 0x1C16D08

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x2669000
	011 Move X25, 0x2384000
	012 Move W8, [X26+2285]
	013 Move X25, [X25+1624]
	014 Move X19, X6
	015 Move X20, X5
	016 Move W23, W4
	017 Move X21, X3
	018 Move X22, X2
	019 Move X24, X1
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x2384000
	025 Move X0, [X0+1624]
	026 Call 0x1C17CF4
	027 Move X0, 0x2386000
	028 Move X0, [X0+2584]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X26+2285], W8
	032 Move X0, [X25]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X25]
	038 Move X8, [X0+184]
	039 Move X25, [X8+16]
	040 Compare X25, 0
	041 JumpIfEqual {81}
	042 Move X10, 0x2386000
	043 Move X8, [X25]
	044 Move X10, [X10+2584]
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Move X1, [X10]
	047 Compare X9, 0
	048 JumpIfEqual {55}
	049 Move X10, [X8+176]
	050 Add X10, X10, 8
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Subtract X9, X9, 1
	054 Add X10, X10, 16
	055 Move W2, 92
	056 Move X0, X25
	057 Call 0x1C5D788
	058 Move W9, [X10]
	059 Add W9, W9, 92
	060 Add X8, X8, W9
	061 Add X0, X8, 312
	062 Move X8, [X0]
	063 Move X7, [X0+8]
	064 And W4, W23, 1
	065 Move X0, X25
	066 Move X1, X24
	067 Move X2, X22
	068 Move X3, X21
	069 Move X5, X20
	070 Move X6, X19
	071 Move X20, [X31+64]
	072 Move X19, [X31+72]
	073 Move X22, [X31+48]
	074 Move X21, [X31+56]
	075 Move X24, [X31+32]
	076 Move X23, [X31+40]
	077 Move X26, [X31+16]
	078 Move X25, [X31+24]
	079 Move X30, [X31+80]
	080 CallNoReturn X8
	081 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiValidateSubscriptionResponse> ValidateSubscriptionAppleAsync(Nakama.ISession session, System.String receipt, System.Boolean persist = True, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D709D4 LDR X8, [X19]
	0x01D709D8 LDR X1, [X8]
	0x01D709DC BL 0x1C17270
	0x01D709E0 TBZ X0, 0x0, 0x1D70A60
	0x01D709E4 LDR X19, [X19]
	0x01D709E8 BL 0x3EB1AE0
	0x01D709EC ADRP X0, 0x2383000
	0x01D709F0 LDR X0, [X0 + 0x788]
	0x01D709F4 BL 0x1C16D08
	0x01D709F8 LDR W8, [X0 + 0xE0]
	0x01D709FC CBNZ W8, 0x1D70A04
	0x01D70A00 BL 0x1C16DFC
	0x01D70A04 ADRP X0, 0x2385000
	0x01D70A08 LDR X0, [X0 + 0xCE0]
	0x01D70A0C BL 0x1C16D08
	0x01D70A10 MOV X20, X0
	0x01D70A14 ADRP X0, 0x2385000
	0x01D70A18 LDR X0, [X0 + 0xA78]
	0x01D70A1C BL 0x1C16D08
	0x01D70A20 MOV X21, X0
	0x01D70A24 ADRP X0, 0x2385000
	0x01D70A28 LDR X0, [X0 + 0xCD8]
	0x01D70A2C BL 0x1C16D08
	0x01D70A30 MOV X5, X0
	0x01D70A34 MOVZ W0, 0x40
	0x01D70A38 MOVZ W6, 0x16A
	0x01D70A3C MOV X1, X20
	0x01D70A40 MOV X2, X19
	0x01D70A44 MOV X3, X31
	0x01D70A48 MOV X4, X21
	0x01D70A4C MOV X7, X31
	0x01D70A50 BL 0x35C2674
	0x01D70A54 MOV X8, X31
	0x01D70A58 MOVZ X9, 0x2
	0x01D70A5C B 0x1D70984
	0x01D70A60 MOVZ W0, 0x8
	0x01D70A64 BL 0x3EB1AF0
	0x01D70A68 LDR X8, [X19]
	0x01D70A6C STR X8, [X0]
	0x01D70A70 ADRP X1, 0x2144000
	0x01D70A74 ADD X1, X1, 0xE58
	0x01D70A78 MOV X2, X31
	0x01D70A7C BL 0x3EB1B00
	0x01D70A80 MOV X19, X0
	0x01D70A84 BL 0x3EB1AE0
	0x01D70A88 MOV X0, X19
	0x01D70A8C BL 0x1D2C690
	0x01D70A90 BL 0x1990590
	0x01D70A94 SUB X31, X31, 0x60
	0x01D70A98 STP X30, X23, [X31 + 0x30]
	0x01D70A9C STP X22, X21, [X31 + 0x40]
	0x01D70AA0 STP X20, X19, [X31 + 0x50]
	0x01D70AA4 ADRP X21, 0x2668000
	0x01D70AA8 LDRB W9, [X21 + 0x8F8]
	0x01D70AAC MOV X20, X1
	0x01D70AB0 MOV X19, X8
	0x01D70AB4 TBNZ X9, 0x0, 0x1D70B2C
	0x01D70AB8 ADRP X0, 0x2385000
	0x01D70ABC LDR X0, [X0 + 0xCE8]
	0x01D70AC0 BL 0x1C16CF4
	0x01D70AC4 ADRP X0, 0x2383000
	0x01D70AC8 LDR X0, [X0 + 0xDF8]
	0x01D70ACC BL 0x1C16CF4
	0x01D70AD0 ADRP X0, 0x2385000
	0x01D70AD4 LDR X0, [X0 + 0xC58]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x2669000
	010 Move X24, 0x2384000
	011 Move W8, [X25+2286]
	012 Move X24, [X24+1624]
	013 Move X19, X5
	014 Move X20, X4
	015 Move W23, W3
	016 Move X21, X2
	017 Move X22, X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x2384000
	023 Move X0, [X0+1624]
	024 Call 0x1C17CF4
	025 Move X0, 0x2386000
	026 Move X0, [X0+2584]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+2286], W8
	030 Move X0, [X24]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X24]
	036 Move X8, [X0+184]
	037 Move X24, [X8+16]
	038 Compare X24, 0
	039 JumpIfEqual {77}
	040 Move X10, 0x2386000
	041 Move X8, [X24]
	042 Move X10, [X10+2584]
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move X1, [X10]
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move W2, 93
	054 Move X0, X24
	055 Call 0x1C5D788
	056 Move W9, [X10]
	057 Add W9, W9, 93
	058 Add X8, X8, W9
	059 Add X0, X8, 312
	060 Move X7, [X0]
	061 Move X6, [X0+8]
	062 And W3, W23, 1
	063 Move X0, X24
	064 Move X1, X22
	065 Move X2, X21
	066 Move X4, X20
	067 Move X5, X19
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X30, [X31+64]
	075 Move X25, [X31+72]
	076 CallNoReturn X7
	077 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiValidateSubscriptionResponse> ValidateSubscriptionGoogleAsync(Nakama.ISession session, System.String receipt, System.Boolean persist = True, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D70AD8 BL 0x1C16CF4
	0x01D70ADC ADRP X0, 0x2385000
	0x01D70AE0 LDR X0, [X0 + 0xCF0]
	0x01D70AE4 BL 0x1C16CF4
	0x01D70AE8 ADRP X0, 0x2383000
	0x01D70AEC LDR X0, [X0 + 0x788]
	0x01D70AF0 BL 0x1C16CF4
	0x01D70AF4 ADRP X0, 0x2385000
	0x01D70AF8 LDR X0, [X0 + 0xC68]
	0x01D70AFC BL 0x1C16CF4
	0x01D70B00 ADRP X0, 0x2385000
	0x01D70B04 LDR X0, [X0 + 0xCF8]
	0x01D70B08 BL 0x1C16CF4
	0x01D70B0C ADRP X0, 0x2385000
	0x01D70B10 LDR X0, [X0 + 0xD00]
	0x01D70B14 BL 0x1C16CF4
	0x01D70B18 ADRP X0, 0x2385000
	0x01D70B1C LDR X0, [X0 + 0xA78]
	0x01D70B20 BL 0x1C16CF4
	0x01D70B24 MOVZ W8, 0x1
	0x01D70B28 STRB W8, [X21 + 0x8F8]
	0x01D70B2C STR W31, [X31 + 0x28]
	0x01D70B30 STRH W31, [X31 + 0x2C]
	0x01D70B34 STRB W31, [X31 + 0x2E]
	0x01D70B38 CBZ X20, 0x1D70CE8
	0x01D70B3C MOV X0, X20
	0x01D70B40 MOV X1, X31
	0x01D70B44 BL 0x33F0514
	0x01D70B48 TBZ X0, 0x0, 0x1D70BD8
	0x01D70B4C MOV X0, X20
	0x01D70B50 MOV X1, X31
	0x01D70B54 BL 0x33F04D8
	0x01D70B58 ADRP X8, 0x2383000
	0x01D70B5C LDR X8, [X8 + 0x788]
	0x01D70B60 MOV X20, X0
	0x01D70B64 LDR X8, [X8]
	0x01D70B68 LDR W9, [X8 + 0xE0]
	0x01D70B6C CBNZ W9, 0x1D70B78
	0x01D70B70 MOV X0, X8
	0x01D70B74 BL 0x1C16DFC
	0x01D70B78 ADRP X8, 0x2385000
	0x01D70B7C ADRP X9, 0x2385000
	0x01D70B80 ADRP X10, 0x2385000
	0x01D70B84 LDR X8, [X8 + 0xCF8]
	0x01D70B88 LDR X9, [X9 + 0xA78]
	0x01D70B8C LDR X10, [X10 + 0xD00]
	0x01D70B90 MOVZ W0, 0x40
	0x01D70B94 LDR X1, [X8]
	0x01D70B98 LDR X4, [X9]
	0x01D70B9C LDR X5, [X10]
	0x01D70BA0 MOVZ W6, 0x1F2
	0x01D70BA4 MOV X2, X20
	0x01D70BA8 MOV X3, X31
	0x01D70BAC MOV X7, X31
	0x01D70BB0 BL 0x35C2674
	0x01D70BB4 LDRB W8, [X31 + 0x2E]
	0x01D70BB8 LDRH W9, [X31 + 0x2C]
	0x01D70BBC MOVZ W10, 0x1
	0x01D70BC0 STRB W31, [X19]
	0x01D70BC4 STR W10, [X19 + 0x4]
	0x01D70BC8 STRB W8, [X19 + 0x3]
	0x01D70BCC STURH W9, [X19 + 0x1]
	0x01D70BD0 STP X31, X31, [X19 + 0x8]
	0x01D70BD4 B 0x1D70CD4
	0x01D70BD8 ADRP X8, 0x2385000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x2669000
	010 Move X24, 0x2384000
	011 Move W8, [X25+2287]
	012 Move X24, [X24+1624]
	013 Move X19, X5
	014 Move X20, X4
	015 Move W23, W3
	016 Move X21, X2
	017 Move X22, X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x2384000
	023 Move X0, [X0+1624]
	024 Call 0x1C17CF4
	025 Move X0, 0x2386000
	026 Move X0, [X0+2584]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+2287], W8
	030 Move X0, [X24]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X24]
	036 Move X8, [X0+184]
	037 Move X24, [X8+16]
	038 Compare X24, 0
	039 JumpIfEqual {77}
	040 Move X10, 0x2386000
	041 Move X8, [X24]
	042 Move X10, [X10+2584]
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move X1, [X10]
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move W2, 94
	054 Move X0, X24
	055 Call 0x1C5D788
	056 Move W9, [X10]
	057 Add W9, W9, 94
	058 Add X8, X8, W9
	059 Add X0, X8, 312
	060 Move X7, [X0]
	061 Move X6, [X0+8]
	062 And W3, W23, 1
	063 Move X0, X24
	064 Move X1, X22
	065 Move X2, X21
	066 Move X4, X20
	067 Move X5, X19
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X30, [X31+64]
	075 Move X25, [X31+72]
	076 CallNoReturn X7
	077 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiLeaderboardRecord> WriteLeaderboardRecordAsync(Nakama.ISession session, System.String leaderboardId, System.Int64 score, System.Int64 subScore = 0, System.String metadata = null, Nakama.ApiOperator apiOperator = 0, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D70BDC LDR X8, [X8 + 0xC68]
	0x01D70BE0 LDR X1, [X8]
	0x01D70BE4 MOV X0, X20
	0x01D70BE8 BL 0x269F34C
	0x01D70BEC MOV X20, X0
	0x01D70BF0 CBZ X0, 0x1D70CEC
	0x01D70BF4 ADRP X10, 0x2385000
	0x01D70BF8 LDR X8, [X20]
	0x01D70BFC LDR X10, [X10 + 0xC58]
	0x01D70C00 LDRH W9, [X8 + 0x12E]
	0x01D70C04 LDR X1, [X10]
	0x01D70C08 CBZ X9, 0x1D70C2C
	0x01D70C0C LDR X10, [X8 + 0xB0]
	0x01D70C10 ADD X10, X10, 0x8
	0x01D70C14 LDUR X11, [X10 - 0x8]
	0x01D70C18 CMP X11, X1
	0x01D70C1C B.EQ 0x1D70C3C
	0x01D70C20 SUBS X9, X9, 0x1
	0x01D70C24 ADD X10, X10, 0x10
	0x01D70C28 B.NE 0x1D70C14
	0x01D70C2C MOVZ W2, 0x2
	0x01D70C30 MOV X0, X20
	0x01D70C34 BL 0x1C5C788
	0x01D70C38 B 0x1D70C4C
	0x01D70C3C LDR W9, [X10]
	0x01D70C40 ADD W9, W9, 0x2
	0x01D70C44 ADD X8, X8, W9, 0x4, SXTW
	0x01D70C48 ADD X0, X8, 0x138
	0x01D70C4C LDP X8, X1, [X0]
	0x01D70C50 MOV X0, X20
	0x01D70C54 BLR X8
	0x01D70C58 ADRP X8, 0x2385000
	0x01D70C5C LDR X8, [X8 + 0xCF0]
	0x01D70C60 LDR X1, [X8]
	0x01D70C64 ADD X8, X31, 0x8
	0x01D70C68 BL 0x220F7A8
	0x01D70C6C ADRP X8, 0x2383000
	0x01D70C70 LDR X8, [X8 + 0xDF8]
	0x01D70C74 LDRB W23, [X31 + 0x8]
	0x01D70C78 LDP X20, X21, [X31 + 0x10]
	0x01D70C7C LDR X22, [X31 + 0x20]
	0x01D70C80 LDR X0, [X8]
	0x01D70C84 LDR W8, [X0 + 0xE0]
	0x01D70C88 CBNZ W8, 0x1D70C90
	0x01D70C8C BL 0x1C16DFC
	0x01D70C90 ADRP X8, 0x2385000
	0x01D70C94 LDR X8, [X8 + 0xCE8]
	0x01D70C98 LDR X2, [X8]
	0x01D70C9C ADD X1, X31, 0x28
	0x01D70CA0 MOV X0, X20
	0x01D70CA4 BL 0x21B0A58
	0x01D70CA8 LDR W9, [X31 + 0x28]
	0x01D70CAC LDRB W10, [X31 + 0x2E]
	0x01D70CB0 LDRH W11, [X31 + 0x2C]
	0x01D70CB4 AND W8, W23, 0x1
	0x01D70CB8 ANDS W31, W0, 0x1
	0x01D70CBC STRB W8, [X19]
	0x01D70CC0 CSINC W8, W9, W31, NE
	0x01D70CC4 STRB W10, [X19 + 0x3]
	0x01D70CC8 STURH W11, [X19 + 0x1]
	0x01D70CCC STR W8, [X19 + 0x4]
	0x01D70CD0 STP X21, X22, [X19 + 0x8]
	0x01D70CD4 LDP X20, X19, [X31 + 0x50]
	0x01D70CD8 LDP X22, X21, [X31 + 0x40]
	0x01D70CDC LDP X30, X23, [X31 + 0x30]
	0x01D70CE0 ADD X31, X31, 0x60
	0x01D70CE4 RET
	0x01D70CE8 BL 0x1C16F20
	0x01D70CEC BL 0x1C16F20
	0x01D70CF0 B 0x1D70D00
	0x01D70CF4 B 0x1D70D00
	0x01D70CF8 B 0x1D70D00
	0x01D70CFC B 0x1D70D00
	0x01D70D00 MOV X20, X0
	0x01D70D04 CMP W1, 0x1

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X28, 0x2669000
	013 Move X26, 0x2384000
	014 Move W8, [X28+2288]
	015 Move X27, [X31+96]
	016 Move X26, [X26+1624]
	017 Move X19, X7
	018 Move W20, W6
	019 Move X21, X5
	020 Move X22, X4
	021 Move X23, X3
	022 Move X24, X2
	023 Move X25, X1
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {36}
	028 Move X0, 0x2384000
	029 Move X0, [X0+1624]
	030 Call 0x1C17CF4
	031 Move X0, 0x2386000
	032 Move X0, [X0+2584]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X28+2288], W8
	036 Move X0, [X26]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X26]
	042 Move X8, [X0+184]
	043 Move X26, [X8+16]
	044 Compare X26, 0
	045 JumpIfEqual {90}
	046 Move X10, 0x2386000
	047 Move X8, [X26]
	048 Move X10, [X10+2584]
	049 NotImplemented "Instruction LDRH not yet implemented."
	050 Move X1, [X10]
	051 Compare X9, 0
	052 JumpIfEqual {59}
	053 Move X10, [X8+176]
	054 Add X10, X10, 8
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Subtract X9, X9, 1
	058 Add X10, X10, 16
	059 Move W2, 95
	060 Move X0, X26
	061 Call 0x1C5D788
	062 Move W9, [X10]
	063 Add W9, W9, 95
	064 Add X8, X8, W9
	065 Add X0, X8, 312
	066 Move X9, [X0]
	067 Move X8, [X0+8]
	068 Move X0, X26
	069 Move X1, X25
	070 Move X2, X24
	071 Move [X31+96], X27
	072 Move [X31+104], X8
	073 Move X3, X23
	074 Move X4, X22
	075 Move X5, X21
	076 Move W6, W20
	077 Move X7, X19
	078 Move X20, [X31+80]
	079 Move X19, [X31+88]
	080 Move X22, [X31+64]
	081 Move X21, [X31+72]
	082 Move X24, [X31+48]
	083 Move X23, [X31+56]
	084 Move X26, [X31+32]
	085 Move X25, [X31+40]
	086 Move X28, [X31+16]
	087 Move X27, [X31+24]
	088 Move X30, [X31+96]
	089 CallNoReturn X9
	090 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiStorageObjectAcks> WriteStorageObjectsAsync(Nakama.ISession session, Nakama.IApiWriteStorageObject[] objects, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D70D08 B.NE 0x1D70DE0
	0x01D70D0C MOV X0, X20
	0x01D70D10 BL 0x3EB1AD0
	0x01D70D14 MOV X20, X0
	0x01D70D18 ADRP X0, 0x2383000
	0x01D70D1C LDR X0, [X0 + 0x7D0]
	0x01D70D20 BL 0x1C16D08
	0x01D70D24 LDR X8, [X20]
	0x01D70D28 LDR X1, [X8]
	0x01D70D2C BL 0x1C17270
	0x01D70D30 TBZ X0, 0x0, 0x1D70DB8
	0x01D70D34 LDR X20, [X20]
	0x01D70D38 BL 0x3EB1AE0
	0x01D70D3C ADRP X0, 0x2383000
	0x01D70D40 LDR X0, [X0 + 0x788]
	0x01D70D44 BL 0x1C16D08
	0x01D70D48 LDR W8, [X0 + 0xE0]
	0x01D70D4C CBNZ W8, 0x1D70D54
	0x01D70D50 BL 0x1C16DFC
	0x01D70D54 ADRP X0, 0x2385000
	0x01D70D58 LDR X0, [X0 + 0xD08]
	0x01D70D5C BL 0x1C16D08
	0x01D70D60 MOV X21, X0
	0x01D70D64 ADRP X0, 0x2385000
	0x01D70D68 LDR X0, [X0 + 0xA78]
	0x01D70D6C BL 0x1C16D08
	0x01D70D70 MOV X22, X0
	0x01D70D74 ADRP X0, 0x2385000
	0x01D70D78 LDR X0, [X0 + 0xD00]
	0x01D70D7C BL 0x1C16D08
	0x01D70D80 MOV X5, X0
	0x01D70D84 MOVZ W0, 0x40
	0x01D70D88 MOVZ W6, 0x203
	0x01D70D8C MOV X1, X21
	0x01D70D90 MOV X2, X20
	0x01D70D94 MOV X3, X31
	0x01D70D98 MOV X4, X22
	0x01D70D9C MOV X7, X31
	0x01D70DA0 BL 0x35C2674
	0x01D70DA4 LDRB W8, [X31 + 0x2E]
	0x01D70DA8 LDRH W9, [X31 + 0x2C]
	0x01D70DAC STRB W31, [X19]
	0x01D70DB0 MOVZ W10, 0x2
	0x01D70DB4 B 0x1D70BC4
	0x01D70DB8 MOVZ W0, 0x8
	0x01D70DBC BL 0x3EB1AF0
	0x01D70DC0 LDR X8, [X20]
	0x01D70DC4 STR X8, [X0]
	0x01D70DC8 ADRP X1, 0x2144000
	0x01D70DCC ADD X1, X1, 0xE58
	0x01D70DD0 MOV X2, X31
	0x01D70DD4 BL 0x3EB1B00
	0x01D70DD8 MOV X20, X0
	0x01D70DDC BL 0x3EB1AE0
	0x01D70DE0 MOV X0, X20
	0x01D70DE4 BL 0x1D2C690
	0x01D70DE8 BL 0x1990590
	0x01D70DEC STP X30, X21, [X31 - 0x20]!
	0x01D70DF0 STP X20, X19, [X31 + 0x10]
	0x01D70DF4 ADRP X20, 0x2668000
	0x01D70DF8 LDRB W8, [X20 + 0x8F9]
	0x01D70DFC MOV X19, X1
	0x01D70E00 TBNZ X8, 0x0, 0x1D70E60

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x2669000
	009 Move X23, 0x2384000
	010 Move W8, [X24+2289]
	011 Move X23, [X23+1624]
	012 Move X19, X4
	013 Move X20, X3
	014 Move X21, X2
	015 Move X22, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x2384000
	021 Move X0, [X0+1624]
	022 Call 0x1C17CF4
	023 Move X0, 0x2386000
	024 Move X0, [X0+2584]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+2289], W8
	028 Move X0, [X23]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X23]
	034 Move X8, [X0+184]
	035 Move X23, [X8+16]
	036 Compare X23, 0
	037 JumpIfEqual {73}
	038 Move X10, 0x2386000
	039 Move X8, [X23]
	040 Move X10, [X10+2584]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X10]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move W2, 96
	052 Move X0, X23
	053 Call 0x1C5D788
	054 Move W9, [X10]
	055 Add W9, W9, 96
	056 Add X8, X8, W9
	057 Add X0, X8, 312
	058 Move X6, [X0]
	059 Move X5, [X0+8]
	060 Move X0, X23
	061 Move X1, X22
	062 Move X2, X21
	063 Move X3, X20
	064 Move X4, X19
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X24, [X31+16]
	070 Move X23, [X31+24]
	071 Move X30, [X31+64]
	072 CallNoReturn X6
	073 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiLeaderboardRecord> WriteTournamentRecordAsync(Nakama.ISession session, System.String tournamentId, System.Int64 score, System.Int64 subScore = 0, System.String metadata = null, Nakama.ApiOperator apiOperator = 0, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x01D70E04 ADRP X0, 0x2385000
	0x01D70E08 LDR X0, [X0 + 0xC58]
	0x01D70E0C BL 0x1C16CF4
	0x01D70E10 ADRP X0, 0x2385000
	0x01D70E14 LDR X0, [X0 + 0xD10]
	0x01D70E18 BL 0x1C16CF4
	0x01D70E1C ADRP X0, 0x2383000
	0x01D70E20 LDR X0, [X0 + 0x788]
	0x01D70E24 BL 0x1C16CF4
	0x01D70E28 ADRP X0, 0x2385000
	0x01D70E2C LDR X0, [X0 + 0xC68]
	0x01D70E30 BL 0x1C16CF4
	0x01D70E34 ADRP X0, 0x2385000
	0x01D70E38 LDR X0, [X0 + 0xD18]
	0x01D70E3C BL 0x1C16CF4
	0x01D70E40 ADRP X0, 0x2385000
	0x01D70E44 LDR X0, [X0 + 0xA78]
	0x01D70E48 BL 0x1C16CF4
	0x01D70E4C ADRP X0, 0x2385000
	0x01D70E50 LDR X0, [X0 + 0xD20]
	0x01D70E54 BL 0x1C16CF4
	0x01D70E58 MOVZ W8, 0x1
	0x01D70E5C STRB W8, [X20 + 0x8F9]
	0x01D70E60 CBZ X19, 0x1D70F84
	0x01D70E64 MOV X0, X19
	0x01D70E68 MOV X1, X31
	0x01D70E6C BL 0x33F0514
	0x01D70E70 TBZ X0, 0x0, 0x1D70EE8
	0x01D70E74 MOV X0, X19
	0x01D70E78 MOV X1, X31
	0x01D70E7C BL 0x33F04D8
	0x01D70E80 ADRP X8, 0x2383000
	0x01D70E84 LDR X8, [X8 + 0x788]
	0x01D70E88 MOV X19, X0
	0x01D70E8C LDR X8, [X8]
	0x01D70E90 LDR W9, [X8 + 0xE0]
	0x01D70E94 CBNZ W9, 0x1D70EA0
	0x01D70E98 MOV X0, X8
	0x01D70E9C BL 0x1C16DFC
	0x01D70EA0 ADRP X8, 0x2385000
	0x01D70EA4 ADRP X9, 0x2385000
	0x01D70EA8 ADRP X10, 0x2385000
	0x01D70EAC LDR X8, [X8 + 0xD20]
	0x01D70EB0 LDR X9, [X9 + 0xA78]
	0x01D70EB4 LDR X10, [X10 + 0xD18]
	0x01D70EB8 MOVZ W0, 0x40
	0x01D70EBC LDR X1, [X8]
	0x01D70EC0 LDR X4, [X9]
	0x01D70EC4 LDR X5, [X10]
	0x01D70EC8 MOVZ W6, 0x245
	0x01D70ECC MOV X2, X19
	0x01D70ED0 MOV X3, X31
	0x01D70ED4 MOV X7, X31
	0x01D70ED8 BL 0x35C2674
	0x01D70EDC MOV X0, X31
	0x01D70EE0 MOV X1, X31
	0x01D70EE4 B 0x1D70F78
	0x01D70EE8 ADRP X8, 0x2385000
	0x01D70EEC LDR X8, [X8 + 0xC68]
	0x01D70EF0 LDR X1, [X8]
	0x01D70EF4 MOV X0, X19
	0x01D70EF8 BL 0x269F34C
	0x01D70EFC MOV X19, X0
	0x01D70F00 CBZ X0, 0x1D70F88
	0x01D70F04 ADRP X10, 0x2385000
	0x01D70F08 LDR X8, [X19]
	0x01D70F0C LDR X10, [X10 + 0xC58]
	0x01D70F10 LDRH W9, [X8 + 0x12E]
	0x01D70F14 LDR X1, [X10]
	0x01D70F18 CBZ X9, 0x1D70F3C
	0x01D70F1C LDR X10, [X8 + 0xB0]
	0x01D70F20 ADD X10, X10, 0x8
	0x01D70F24 LDUR X11, [X10 - 0x8]
	0x01D70F28 CMP X11, X1
	0x01D70F2C B.EQ 0x1D70F4C

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X28, 0x2669000
	013 Move X26, 0x2384000
	014 Move W8, [X28+2290]
	015 Move X27, [X31+96]
	016 Move X26, [X26+1624]
	017 Move X19, X7
	018 Move W20, W6
	019 Move X21, X5
	020 Move X22, X4
	021 Move X23, X3
	022 Move X24, X2
	023 Move X25, X1
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {36}
	028 Move X0, 0x2384000
	029 Move X0, [X0+1624]
	030 Call 0x1C17CF4
	031 Move X0, 0x2386000
	032 Move X0, [X0+2584]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X28+2290], W8
	036 Move X0, [X26]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X26]
	042 Move X8, [X0+184]
	043 Move X26, [X8+16]
	044 Compare X26, 0
	045 JumpIfEqual {90}
	046 Move X10, 0x2386000
	047 Move X8, [X26]
	048 Move X10, [X10+2584]
	049 NotImplemented "Instruction LDRH not yet implemented."
	050 Move X1, [X10]
	051 Compare X9, 0
	052 JumpIfEqual {59}
	053 Move X10, [X8+176]
	054 Add X10, X10, 8
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Subtract X9, X9, 1
	058 Add X10, X10, 16
	059 Move W2, 97
	060 Move X0, X26
	061 Call 0x1C5D788
	062 Move W9, [X10]
	063 Add W9, W9, 97
	064 Add X8, X8, W9
	065 Add X0, X8, 312
	066 Move X9, [X0]
	067 Move X8, [X0+8]
	068 Move X0, X26
	069 Move X1, X25
	070 Move X2, X24
	071 Move [X31+96], X27
	072 Move [X31+104], X8
	073 Move X3, X23
	074 Move X4, X22
	075 Move X5, X21
	076 Move W6, W20
	077 Move X7, X19
	078 Move X20, [X31+80]
	079 Move X19, [X31+88]
	080 Move X22, [X31+64]
	081 Move X21, [X31+72]
	082 Move X24, [X31+48]
	083 Move X23, [X31+56]
	084 Move X26, [X31+32]
	085 Move X25, [X31+40]
	086 Move X28, [X31+16]
	087 Move X27, [X31+24]
	088 Move X30, [X31+96]
	089 CallNoReturn X9
	090 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01D70F30 SUBS X9, X9, 0x1
	0x01D70F34 ADD X10, X10, 0x10

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x01D70F38 B.NE 0x1D70F24
	0x01D70F3C MOVZ W2, 0x2
	0x01D70F40 MOV X0, X19
	0x01D70F44 BL 0x1C5C788
	0x01D70F48 B 0x1D70F5C
	0x01D70F4C LDR W9, [X10]
	0x01D70F50 ADD W9, W9, 0x2
	0x01D70F54 ADD X8, X8, W9, 0x4, SXTW
	0x01D70F58 ADD X0, X8, 0x138
	0x01D70F5C LDP X8, X1, [X0]
	0x01D70F60 MOV X0, X19
	0x01D70F64 BLR X8
	0x01D70F68 ADRP X8, 0x2385000
	0x01D70F6C LDR X8, [X8 + 0xD10]
	0x01D70F70 LDR X1, [X8]
	0x01D70F74 BL 0x2210190
	0x01D70F78 LDP X20, X19, [X31 + 0x10]
	0x01D70F7C LDP X30, X21, [X31], #0x20
	0x01D70F80 RET
	0x01D70F84 BL 0x1C16F20
	0x01D70F88 BL 0x1C16F20
	0x01D70F8C B 0x1D70F94
	0x01D70F90 B 0x1D70F94
	0x01D70F94 MOV X19, X0
	0x01D70F98 CMP W1, 0x1
	0x01D70F9C B.NE 0x1D7105C
	0x01D70FA0 MOV X0, X19
	0x01D70FA4 BL 0x3EB1AD0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x2669000
	006 Move X21, 0x2386000
	007 Move X20, 0x2384000
	008 Move W8, [X19+2291]
	009 Move X21, [X21+2640]
	010 Move X20, [X20+1624]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x2384000
	016 Move X0, [X0+1624]
	017 Call 0x1C17CF4
	018 Move X0, 0x2386000
	019 Move X0, [X0+2640]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+2291], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X19, X0
	027 Call CancellationTokenSource..ctor, X0
	028 Move X8, [X20]
	029 Move X8, [X8+184]
	030 Move [X8+24], X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

