Type: AnimalCompany.API.AnimalCompanyAPI/<GetAvatarsAsync>d__31

Method: System.Void MoveNext()

Disassembly:
	0x01D738DC LDP X8, X1, [X0]
	0x01D738E0 MOV X0, X20
	0x01D738E4 BLR X8
	0x01D738E8 MOV X20, X0
	0x01D738EC CBZ X0, 0x1D73BD4
	0x01D738F0 ADRP X10, 0x2382000
	0x01D738F4 LDR X8, [X20]
	0x01D738F8 LDR X10, [X10 + 0xD78]
	0x01D738FC LDRH W9, [X8 + 0x12E]
	0x01D73900 LDR X1, [X10]
	0x01D73904 CBZ X9, 0x1D73928
	0x01D73908 LDR X10, [X8 + 0xB0]
	0x01D7390C ADD X10, X10, 0x8
	0x01D73910 LDUR X11, [X10 - 0x8]
	0x01D73914 CMP X11, X1
	0x01D73918 B.EQ 0x1D73938
	0x01D7391C SUBS X9, X9, 0x1
	0x01D73920 ADD X10, X10, 0x10
	0x01D73924 B.NE 0x1D73910
	0x01D73928 MOV X0, X20
	0x01D7392C MOV W2, W31
	0x01D73930 BL 0x1C5C788
	0x01D73934 B 0x1D73944
	0x01D73938 LDRSW X9, [X10]
	0x01D7393C ADD X8, X8, X9, 0x4, LSL
	0x01D73940 ADD X0, X8, 0x138
	0x01D73944 LDP X8, X1, [X0]
	0x01D73948 MOV X0, X20
	0x01D7394C BLR X8
	0x01D73950 MOV X20, X0
	0x01D73954 CBZ X0, 0x1D73BD8
	0x01D73958 ADRP X10, 0x2380000
	0x01D7395C LDR X8, [X20]
	0x01D73960 LDR X10, [X10 + 0xE18]
	0x01D73964 LDRH W9, [X8 + 0x12E]
	0x01D73968 LDR X1, [X10]
	0x01D7396C CBZ X9, 0x1D73990
	0x01D73970 LDR X10, [X8 + 0xB0]
	0x01D73974 ADD X10, X10, 0x8
	0x01D73978 LDUR X11, [X10 - 0x8]
	0x01D7397C CMP X11, X1
	0x01D73980 B.EQ 0x1D739A0
	0x01D73984 SUBS X9, X9, 0x1
	0x01D73988 ADD X10, X10, 0x10
	0x01D7398C B.NE 0x1D73978
	0x01D73990 MOV X0, X20
	0x01D73994 MOV W2, W31
	0x01D73998 BL 0x1C5C788
	0x01D7399C B 0x1D739AC
	0x01D739A0 LDRSW X9, [X10]
	0x01D739A4 ADD X8, X8, X9, 0x4, LSL
	0x01D739A8 ADD X0, X8, 0x138
	0x01D739AC LDP X8, X1, [X0]
	0x01D739B0 MOV X0, X20
	0x01D739B4 BLR X8
	0x01D739B8 TBZ X0, 0x0, 0x1D73A04
	0x01D739BC ADRP X10, 0x2382000
	0x01D739C0 LDR X8, [X20]
	0x01D739C4 LDR X10, [X10 + 0xD80]
	0x01D739C8 LDRH W9, [X8 + 0x12E]
	0x01D739CC LDR X1, [X10]
	0x01D739D0 CBZ X9, 0x1D739F4
	0x01D739D4 LDR X10, [X8 + 0xB0]
	0x01D739D8 ADD X10, X10, 0x8
	0x01D739DC LDUR X11, [X10 - 0x8]
	0x01D739E0 CMP X11, X1
	0x01D739E4 B.EQ 0x1D73A18
	0x01D739E8 SUBS X9, X9, 0x1
	0x01D739EC ADD X10, X10, 0x10
	0x01D739F0 B.NE 0x1D739DC
	0x01D739F4 MOV X0, X20
	0x01D739F8 MOV W2, W31
	0x01D739FC BL 0x1C5C788
	0x01D73A00 B 0x1D73A24
	0x01D73A04 MOV X23, X31
	0x01D73A08 MOV X21, X31
	0x01D73A0C MOVZ W22, 0x8
	0x01D73A10 TBNZ X26, 0x1F, 0x1D73ABC
	0x01D73A14 B 0x1D73B20
	0x01D73A18 LDRSW X9, [X10]
	0x01D73A1C ADD X8, X8, X9, 0x4, LSL
	0x01D73A20 ADD X0, X8, 0x138
	0x01D73A24 LDP X8, X1, [X0]
	0x01D73A28 MOV X0, X20
	0x01D73A2C BLR X8
	0x01D73A30 MOV X21, X0
	0x01D73A34 CBZ X0, 0x1D73C08
	0x01D73A38 ADRP X10, 0x2382000
	0x01D73A3C LDR X8, [X21]
	0x01D73A40 LDR X10, [X10 + 0xD70]
	0x01D73A44 LDRH W9, [X8 + 0x12E]
	0x01D73A48 LDR X1, [X10]
	0x01D73A4C CBZ X9, 0x1D73A70
	0x01D73A50 LDR X10, [X8 + 0xB0]
	0x01D73A54 ADD X10, X10, 0x8
	0x01D73A58 LDUR X11, [X10 - 0x8]
	0x01D73A5C CMP X11, X1
	0x01D73A60 B.EQ 0x1D73A80
	0x01D73A64 SUBS X9, X9, 0x1
	0x01D73A68 ADD X10, X10, 0x10
	0x01D73A6C B.NE 0x1D73A58
	0x01D73A70 MOVZ W2, 0x7
	0x01D73A74 MOV X0, X21
	0x01D73A78 BL 0x1C5C788
	0x01D73A7C B 0x1D73A90
	0x01D73A80 LDR W9, [X10]
	0x01D73A84 ADD W9, W9, 0x7
	0x01D73A88 ADD X8, X8, W9, 0x4, SXTW
	0x01D73A8C ADD X0, X8, 0x138
	0x01D73A90 LDP X8, X1, [X0]
	0x01D73A94 MOV X0, X21
	0x01D73A98 BLR X8
	0x01D73A9C ADRP X8, 0x2382000
	0x01D73AA0 LDR X8, [X8 + 0xEC8]
	0x01D73AA4 LDR X1, [X8]
	0x01D73AA8 BL 0x220EDBC
	0x01D73AAC MOV X21, X0
	0x01D73AB0 MOV X23, X31
	0x01D73AB4 MOVZ W22, 0x7
	0x01D73AB8 TBZ X26, 0x1F, 0x1D73B20
	0x01D73ABC CBZ X20, 0x1D73B20
	0x01D73AC0 ADRP X10, 0x2380000
	0x01D73AC4 LDR X8, [X20]
	0x01D73AC8 LDR X10, [X10 + 0xE00]
	0x01D73ACC LDRH W9, [X8 + 0x12E]
	0x01D73AD0 LDR X1, [X10]
	0x01D73AD4 CBZ X9, 0x1D73AF8
	0x01D73AD8 LDR X10, [X8 + 0xB0]
	0x01D73ADC ADD X10, X10, 0x8
	0x01D73AE0 LDUR X11, [X10 - 0x8]
	0x01D73AE4 CMP X11, X1
	0x01D73AE8 B.EQ 0x1D73B08
	0x01D73AEC SUBS X9, X9, 0x1
	0x01D73AF0 ADD X10, X10, 0x10
	0x01D73AF4 B.NE 0x1D73AE0
	0x01D73AF8 MOV X0, X20
	0x01D73AFC MOV W2, W31
	0x01D73B00 BL 0x1C5C788
	0x01D73B04 B 0x1D73B14
	0x01D73B08 LDRSW X9, [X10]
	0x01D73B0C ADD X8, X8, X9, 0x4, LSL
	0x01D73B10 ADD X0, X8, 0x138
	0x01D73B14 LDP X8, X1, [X0]
	0x01D73B18 MOV X0, X20
	0x01D73B1C BLR X8
	0x01D73B20 CBNZ X23, 0x1D73BDC
	0x01D73B24 CBZ W22, 0x1D73B38
	0x01D73B28 CMP W22, 0x7
	0x01D73B2C B.EQ 0x1D73B88
	0x01D73B30 CMP W22, 0x8
	0x01D73B34 B.NE 0x1D73BB8
	0x01D73B38 ADRP X8, 0x2380000
	0x01D73B3C LDR X8, [X8 + 0x788]
	0x01D73B40 LDR X0, [X8]
	0x01D73B44 LDR W8, [X0 + 0xE0]
	0x01D73B48 CBNZ W8, 0x1D73B50
	0x01D73B4C BL 0x1C16DFC
	0x01D73B50 ADRP X8, 0x2382000
	0x01D73B54 LDR X8, [X8 + 0xEE8]
	0x01D73B58 ADRP X9, 0x2382000
	0x01D73B5C ADRP X10, 0x2382000
	0x01D73B60 LDR X9, [X9 + 0xA78]
	0x01D73B64 LDR X10, [X10 + 0xED0]
	0x01D73B68 LDR X1, [X8]
	0x01D73B6C LDR X3, [X9]
	0x01D73B70 LDR X4, [X10]
	0x01D73B74 MOVZ W0, 0x40
	0x01D73B78 MOVZ W5, 0xD6
	0x01D73B7C MOV X2, X31
	0x01D73B80 MOV X6, X31
	0x01D73B84 BL 0x35C25CC
	0x01D73B88 MOVN W8, 0x1
	0x01D73B8C STR W8, [X19], #0x8
	0x01D73B90 LDR X0, [X25]
	0x01D73B94 ADRP X20, 0x2382000
	0x01D73B98 LDR W8, [X0 + 0xE0]
	0x01D73B9C LDR X20, [X20 + 0xEC0]
	0x01D73BA0 CBNZ W8, 0x1D73BA8
	0x01D73BA4 BL 0x1C16DFC
	0x01D73BA8 LDR X2, [X20]
	0x01D73BAC MOV X0, X19
	0x01D73BB0 MOV X1, X21
	0x01D73BB4 BL 0x24DE5FC
	0x01D73BB8 LDP X20, X19, [X31 + 0x40]
	0x01D73BBC LDP X22, X21, [X31 + 0x30]
	0x01D73BC0 LDP X24, X23, [X31 + 0x20]
	0x01D73BC4 LDP X26, X25, [X31 + 0x10]
	0x01D73BC8 LDR X30, [X31], #0x50
	0x01D73BCC RET
	0x01D73BD0 BL 0x1C16F20
	0x01D73BD4 BL 0x1C16F20
	0x01D73BD8 BL 0x1C16F20
	0x01D73BDC MOV X0, X23
	0x01D73BE0 BL 0x1C16F18
	0x01D73BE4 BL 0x1C16F20
	0x01D73BE8 BL 0x1C16F20
	0x01D73BEC BL 0x1C16F20
	0x01D73BF0 BL 0x1C16F44
	0x01D73BF4 MOV X1, X31
	0x01D73BF8 BL 0x1C16DEC
	0x01D73BFC BL 0x1C16F28
	0x01D73C00 BL 0x1C16F20
	0x01D73C04 BL 0x1C16F20
	0x01D73C08 BL 0x1C16F20
	0x01D73C0C B 0x1D73C48
	0x01D73C10 B 0x1D73C48
	0x01D73C14 B 0x1D73E10
	0x01D73C18 B 0x1D73C48
	0x01D73C1C B 0x1D73C48
	0x01D73C20 B 0x1D73E10
	0x01D73C24 B 0x1D73E10
	0x01D73C28 B 0x1D73E10
	0x01D73C2C B 0x1D73E10
	0x01D73C30 B 0x1D73E10
	0x01D73C34 B 0x1D73E10
	0x01D73C38 B 0x1D73C48
	0x01D73C3C B 0x1D73D10
	0x01D73C40 B 0x1D73E10
	0x01D73C44 B 0x1D73E10
	0x01D73C48 MOV X21, X1
	0x01D73C4C MOV X22, X0
	0x01D73C50 CMP W21, 0x1
	0x01D73C54 B.NE 0x1D73C78
	0x01D73C58 MOV X0, X22
	0x01D73C5C BL 0x3EB1AD0
	0x01D73C60 LDR X23, [X0]
	0x01D73C64 BL 0x3EB1AE0
	0x01D73C68 MOV X21, X31
	0x01D73C6C MOV W22, W31
	0x01D73C70 TBNZ X26, 0x1F, 0x1D73ABC
	0x01D73C74 B 0x1D73B20
	0x01D73C78 MOV X23, X31
	0x01D73C7C TBZ X26, 0x1F, 0x1D73CE4
	0x01D73C80 CBZ X20, 0x1D73CE4
	0x01D73C84 ADRP X10, 0x2380000
	0x01D73C88 LDR X8, [X20]
	0x01D73C8C LDR X10, [X10 + 0xE00]
	0x01D73C90 LDRH W9, [X8 + 0x12E]
	0x01D73C94 LDR X1, [X10]
	0x01D73C98 CBZ X9, 0x1D73CBC
	0x01D73C9C LDR X10, [X8 + 0xB0]
	0x01D73CA0 ADD X10, X10, 0x8
	0x01D73CA4 LDUR X11, [X10 - 0x8]
	0x01D73CA8 CMP X11, X1
	0x01D73CAC B.EQ 0x1D73CCC
	0x01D73CB0 SUBS X9, X9, 0x1
	0x01D73CB4 ADD X10, X10, 0x10
	0x01D73CB8 B.NE 0x1D73CA4
	0x01D73CBC MOV X0, X20
	0x01D73CC0 MOV W2, W31
	0x01D73CC4 BL 0x1C5C788
	0x01D73CC8 B 0x1D73CD8
	0x01D73CCC LDRSW X9, [X10]
	0x01D73CD0 ADD X8, X8, X9, 0x4, LSL
	0x01D73CD4 ADD X0, X8, 0x138
	0x01D73CD8 LDP X8, X1, [X0]
	0x01D73CDC MOV X0, X20
	0x01D73CE0 BLR X8
	0x01D73CE4 CBZ X23, 0x1D73D18
	0x01D73CE8 MOV X0, X23
	0x01D73CEC BL 0x1C16F18
	0x01D73CF0 MOV X21, X1
	0x01D73CF4 MOV X22, X0
	0x01D73CF8 TBNZ X26, 0x1F, 0x1D73C80
	0x01D73CFC B 0x1D73CE4
	0x01D73D00 B 0x1D73D10
	0x01D73D04 B 0x1D73E10
	0x01D73D08 B 0x1D73D10
	0x01D73D0C B 0x1D73E10
	0x01D73D10 MOV X21, X1
	0x01D73D14 MOV X22, X0
	0x01D73D18 CMP W21, 0x1
	0x01D73D1C B.NE 0x1D73E18
	0x01D73D20 MOV X0, X22
	0x01D73D24 BL 0x3EB1AD0
	0x01D73D28 MOV X20, X0
	0x01D73D2C ADRP X0, 0x2380000
	0x01D73D30 LDR X0, [X0 + 0x7D0]
	0x01D73D34 BL 0x1C16D08
	0x01D73D38 LDR X8, [X20]
	0x01D73D3C LDR X1, [X8]
	0x01D73D40 BL 0x1C17270
	0x01D73D44 TBZ X0, 0x0, 0x1D73DD0
	0x01D73D48 LDR X20, [X20]
	0x01D73D4C BL 0x3EB1AE0
	0x01D73D50 ADRP X0, 0x2380000
	0x01D73D54 LDR X0, [X0 + 0x788]
	0x01D73D58 BL 0x1C16D08
	0x01D73D5C LDR W8, [X0 + 0xE0]
	0x01D73D60 CBNZ W8, 0x1D73D68
	0x01D73D64 BL 0x1C16DFC
	0x01D73D68 ADRP X0, 0x2382000
	0x01D73D6C LDR X0, [X0 + 0xEF0]
	0x01D73D70 BL 0x1C16D08
	0x01D73D74 MOV X21, X0
	0x01D73D78 ADRP X0, 0x2382000
	0x01D73D7C LDR X0, [X0 + 0xA78]
	0x01D73D80 BL 0x1C16D08
	0x01D73D84 MOV X22, X0
	0x01D73D88 ADRP X0, 0x2382000
	0x01D73D8C LDR X0, [X0 + 0xED0]
	0x01D73D90 BL 0x1C16D08
	0x01D73D94 MOV X5, X0
	0x01D73D98 MOVZ W0, 0x40
	0x01D73D9C MOVZ W6, 0xD2
	0x01D73DA0 MOV X1, X21
	0x01D73DA4 MOV X2, X20
	0x01D73DA8 MOV X3, X31
	0x01D73DAC MOV X4, X22
	0x01D73DB0 MOV X7, X31
	0x01D73DB4 BL 0x35C2674
	0x01D73DB8 ADRP X0, 0x2382000
	0x01D73DBC LDR X0, [X0 + 0xEF8]
	0x01D73DC0 BL 0x1C16D08
	0x01D73DC4 MOV X1, X0
	0x01D73DC8 MOV X0, X20
	0x01D73DCC BL 0x1C16DEC
	0x01D73DD0 MOVZ W0, 0x8
	0x01D73DD4 BL 0x3EB1AF0
	0x01D73DD8 LDR X8, [X20]
	0x01D73DDC STR X8, [X0]
	0x01D73DE0 ADRP X1, 0x2141000
	0x01D73DE4 ADD X1, X1, 0xE58
	0x01D73DE8 MOV X2, X31
	0x01D73DEC BL 0x3EB1B00
	0x01D73DF0 B 0x1D73EB0
	0x01D73DF4 B 0x1D73E10
	0x01D73DF8 B 0x1D73E10
	0x01D73DFC B 0x1D73E10
	0x01D73E00 MOV X21, X1
	0x01D73E04 MOV X22, X0
	0x01D73E08 BL 0x3EB1AE0
	0x01D73E0C B 0x1D73E18
	0x01D73E10 MOV X21, X1
	0x01D73E14 MOV X22, X0
	0x01D73E18 CMP W21, 0x1
	0x01D73E1C B.NE 0x1D73EB8
	0x01D73E20 MOV X0, X22
	0x01D73E24 BL 0x3EB1AD0
	0x01D73E28 MOV X20, X0
	0x01D73E2C ADRP X0, 0x2380000
	0x01D73E30 LDR X0, [X0 + 0x7D0]
	0x01D73E34 BL 0x1C16D08
	0x01D73E38 LDR X8, [X20]
	0x01D73E3C LDR X1, [X8]
	0x01D73E40 BL 0x1C17270
	0x01D73E44 TBZ X0, 0x0, 0x1D73E90
	0x01D73E48 LDR X20, [X20]
	0x01D73E4C BL 0x3EB1AE0
	0x01D73E50 MOVN W8, 0x1
	0x01D73E54 STR W8, [X19], #0x8
	0x01D73E58 ADRP X0, 0x2382000
	0x01D73E5C LDR X0, [X0 + 0xAB0]
	0x01D73E60 BL 0x1C16D08
	0x01D73E64 LDR W8, [X0 + 0xE0]
	0x01D73E68 CBNZ W8, 0x1D73E70
	0x01D73E6C BL 0x1C16DFC
	0x01D73E70 ADRP X0, 0x2382000
	0x01D73E74 LDR X0, [X0 + 0xF00]
	0x01D73E78 BL 0x1C16D08
	0x01D73E7C MOV X2, X0
	0x01D73E80 MOV X0, X19
	0x01D73E84 MOV X1, X20
	0x01D73E88 BL 0x24DE814
	0x01D73E8C B 0x1D73BB8
	0x01D73E90 MOVZ W0, 0x8
	0x01D73E94 BL 0x3EB1AF0
	0x01D73E98 LDR X8, [X20]
	0x01D73E9C STR X8, [X0]
	0x01D73EA0 ADRP X1, 0x2141000
	0x01D73EA4 ADD X1, X1, 0xE58
	0x01D73EA8 MOV X2, X31
	0x01D73EAC BL 0x3EB1B00
	0x01D73EB0 MOV X22, X0
	0x01D73EB4 BL 0x3EB1AE0
	0x01D73EB8 MOV X0, X22
	0x01D73EBC BL 0x1D2C690
	0x01D73EC0 BL 0x1990590
	0x01D73EC4 STR X30, [X31 - 0x30]!
	0x01D73EC8 STP X22, X21, [X31 + 0x10]
	0x01D73ECC STP X20, X19, [X31 + 0x20]
	0x01D73ED0 ADRP X22, 0x2665000
	0x01D73ED4 ADRP X21, 0x2382000
	0x01D73ED8 LDRB W8, [X22 + 0x902]
	0x01D73EDC LDR X21, [X21 + 0xAB0]
	0x01D73EE0 MOV X19, X1
	0x01D73EE4 MOV X20, X0
	0x01D73EE8 TBNZ X8, 0x0, 0x1D73F0C
	0x01D73EEC ADRP X0, 0x2382000
	0x01D73EF0 LDR X0, [X0 + 0xF08]
	0x01D73EF4 BL 0x1C16CF4
	0x01D73EF8 ADRP X0, 0x2382000
	0x01D73EFC LDR X0, [X0 + 0xAB0]
	0x01D73F00 BL 0x1C16CF4
	0x01D73F04 MOVZ W8, 0x1
	0x01D73F08 STRB W8, [X22 + 0x902]
	0x01D73F0C LDR X0, [X21]
	0x01D73F10 ADRP X21, 0x2382000
	0x01D73F14 LDR W8, [X0 + 0xE0]
	0x01D73F18 LDR X21, [X21 + 0xF08]
	0x01D73F1C CBNZ W8, 0x1D73F24
	0x01D73F20 BL 0x1C16DFC
	0x01D73F24 LDR X2, [X21]
	0x01D73F28 ADD X0, X20, 0x8
	0x01D73F2C MOV X1, X19
	0x01D73F30 LDP X20, X19, [X31 + 0x20]
	0x01D73F34 LDP X22, X21, [X31 + 0x10]
	0x01D73F38 LDR X30, [X31], #0x30
	0x01D73F3C B 0x24DE574
	0x01D73F40 SUB X31, X31, 0x130
	0x01D73F44 STP X29, X30, [X31 + 0xD0]
	0x01D73F48 STP X28, X27, [X31 + 0xE0]
	0x01D73F4C STP X26, X25, [X31 + 0xF0]
	0x01D73F50 STP X24, X23, [X31 + 0x100]
	0x01D73F54 STP X22, X21, [X31 + 0x110]
	0x01D73F58 STP X20, X19, [X31 + 0x120]
	0x01D73F5C ADRP X20, 0x2665000
	0x01D73F60 LDRB W8, [X20 + 0x903]
	0x01D73F64 MOV X19, X0
	0x01D73F68 TBNZ X8, 0x0, 0x1D74064
	0x01D73F6C ADRP X0, 0x2380000
	0x01D73F70 LDR X0, [X0 + 0x658]
	0x01D73F74 BL 0x1C16CF4
	0x01D73F78 ADRP X0, 0x2382000
	0x01D73F7C LDR X0, [X0 + 0xF10]
	0x01D73F80 BL 0x1C16CF4
	0x01D73F84 ADRP X0, 0x2382000
	0x01D73F88 LDR X0, [X0 + 0xF18]
	0x01D73F8C BL 0x1C16CF4
	0x01D73F90 ADRP X0, 0x2382000
	0x01D73F94 LDR X0, [X0 + 0xB60]
	0x01D73F98 BL 0x1C16CF4
	0x01D73F9C ADRP X0, 0x2382000
	0x01D73FA0 LDR X0, [X0 + 0xD68]
	0x01D73FA4 BL 0x1C16CF4
	0x01D73FA8 ADRP X0, 0x2382000
	0x01D73FAC LDR X0, [X0 + 0xD70]
	0x01D73FB0 BL 0x1C16CF4
	0x01D73FB4 ADRP X0, 0x2382000
	0x01D73FB8 LDR X0, [X0 + 0xA18]
	0x01D73FBC BL 0x1C16CF4
	0x01D73FC0 ADRP X0, 0x2380000
	0x01D73FC4 LDR X0, [X0 + 0xE00]
	0x01D73FC8 BL 0x1C16CF4
	0x01D73FCC ADRP X0, 0x2382000
	0x01D73FD0 LDR X0, [X0 + 0xD78]
	0x01D73FD4 BL 0x1C16CF4
	0x01D73FD8 ADRP X0, 0x2382000
	0x01D73FDC LDR X0, [X0 + 0xD80]
	0x01D73FE0 BL 0x1C16CF4
	0x01D73FE4 ADRP X0, 0x2380000
	0x01D73FE8 LDR X0, [X0 + 0xE18]
	0x01D73FEC BL 0x1C16CF4
	0x01D73FF0 ADRP X0, 0x2382000
	0x01D73FF4 LDR X0, [X0 + 0xF20]
	0x01D73FF8 BL 0x1C16CF4
	0x01D73FFC ADRP X0, 0x2382000
	0x01D74000 LDR X0, [X0 + 0xF28]
	0x01D74004 BL 0x1C16CF4
	0x01D74008 ADRP X0, 0x2381000
	0x01D7400C LDR X0, [X0 + 0xF30]
	0x01D74010 BL 0x1C16CF4
	0x01D74014 ADRP X0, 0x2381000
	0x01D74018 LDR X0, [X0 + 0xF38]
	0x01D7401C BL 0x1C16CF4
	0x01D74020 ADRP X0, 0x2381000
	0x01D74024 LDR X0, [X0 + 0xF40]
	0x01D74028 BL 0x1C16CF4
	0x01D7402C ADRP X0, 0x2381000
	0x01D74030 LDR X0, [X0 + 0xDB0]
	0x01D74034 BL 0x1C16CF4
	0x01D74038 ADRP X0, 0x2381000
	0x01D7403C LDR X0, [X0 + 0xDB8]
	0x01D74040 BL 0x1C16CF4
	0x01D74044 ADRP X0, 0x2381000
	0x01D74048 LDR X0, [X0 + 0xDC0]
	0x01D7404C BL 0x1C16CF4
	0x01D74050 ADRP X0, 0x2381000
	0x01D74054 LDR X0, [X0 + 0xF48]
	0x01D74058 BL 0x1C16CF4
	0x01D7405C MOVZ W8, 0x1
	0x01D74060 STRB W8, [X20 + 0x903]
	0x01D74064 STR X31, [X31 + 0x48]
	0x01D74068 LDR W24, [X19]
	0x01D7406C CBZ W24, 0x1D740F0
	0x01D74070 ADRP X20, 0x237F000
	0x01D74074 LDR X20, [X20 + 0x658]
	0x01D74078 LDR X0, [X20]
	0x01D7407C LDR W8, [X0 + 0xE0]
	0x01D74080 CBNZ W8, 0x1D7408C
	0x01D74084 BL 0x1C16DFC
	0x01D74088 LDR X0, [X20]
	0x01D7408C LDR X8, [X0 + 0xB8]
	0x01D74090 LDR X20, [X8 + 0x10]
	0x01D74094 CBZ X20, 0x1D745E4
	0x01D74098 ADRP X9, 0x2381000
	0x01D7409C ADRP X10, 0x2381000
	0x01D740A0 LDR X9, [X9 + 0xA18]
	0x01D740A4 LDR X8, [X20]
	0x01D740A8 LDR X10, [X10 + 0xF48]
	0x01D740AC LDR X21, [X19 + 0x20]
	0x01D740B0 LDR X1, [X9]
	0x01D740B4 LDRH W9, [X8 + 0x12E]
	0x01D740B8 LDR X22, [X10]
	0x01D740BC CBZ X9, 0x1D740E0
	0x01D740C0 LDR X10, [X8 + 0xB0]
	0x01D740C4 ADD X10, X10, 0x8
	0x01D740C8 LDUR X11, [X10 - 0x8]
	0x01D740CC CMP X11, X1
	0x01D740D0 B.EQ 0x1D74108
	0x01D740D4 SUBS X9, X9, 0x1
	0x01D740D8 ADD X10, X10, 0x10
	0x01D740DC B.NE 0x1D740C8
	0x01D740E0 MOVZ W2, 0x3E
	0x01D740E4 MOV X0, X20
	0x01D740E8 BL 0x1C5C788
	0x01D740EC B 0x1D74118
	0x01D740F0 LDR X8, [X19 + 0x28]
	0x01D740F4 MOVN W24, 0x0
	0x01D740F8 STR X8, [X31 + 0x48]
	0x01D740FC STR X31, [X19 + 0x28]
	0x01D74100 STR W24, [X19]
	0x01D74104 B 0x1D7416C
	0x01D74108 LDR W9, [X10]
	0x01D7410C ADD W9, W9, 0x3E
	0x01D74110 ADD X8, X8, W9, 0x4, SXTW
	0x01D74114 ADD X0, X8, 0x138
	0x01D74118 LDP X8, X7, [X0]
	0x01D7411C MOVZ W3, 0x32
	0x01D74120 MOV X0, X20
	0x01D74124 MOV X1, X21
	0x01D74128 MOV X2, X22
	0x01D7412C MOV X4, X31
	0x01D74130 MOV X5, X31
	0x01D74134 MOV X6, X31
	0x01D74138 BLR X8
	0x01D7413C CBZ X0, 0x1D745E8
	0x01D74140 ADRP X8, 0x2381000
	0x01D74144 LDR X8, [X8 + 0xDC0]
	0x01D74148 LDR X1, [X8]
	0x01D7414C BL 0x269F5D0
	0x01D74150 ADRP X8, 0x2381000
	0x01D74154 LDR X8, [X8 + 0xDB8]
	0x01D74158 STR X0, [X31 + 0x48]
	0x01D7415C LDR X1, [X8]
	0x01D74160 ADD X0, X31, 0x48
	0x01D74164 BL 0x2677430
	0x01D74168 TBZ X0, 0x0, 0x1D741F4
	0x01D7416C ADRP X8, 0x2381000
	0x01D74170 LDR X8, [X8 + 0xDB0]
	0x01D74174 ADD X0, X31, 0x48
	0x01D74178 LDR X1, [X8]
	0x01D7417C BL 0x2677474
	0x01D74180 ADRP X8, 0x2381000
	0x01D74184 LDR X8, [X8 + 0xF40]
	0x01D74188 MOV X21, X0
	0x01D7418C LDR X0, [X8]
	0x01D74190 BL 0x1C16F10
	0x01D74194 ADRP X8, 0x2381000
	0x01D74198 LDR X8, [X8 + 0xF38]
	0x01D7419C MOV X20, X0
	0x01D741A0 LDR X1, [X8]
	0x01D741A4 BL 0x2F52280
	0x01D741A8 CBZ X21, 0x1D745D0
	0x01D741AC ADRP X10, 0x2381000
	0x01D741B0 LDR X8, [X21]
	0x01D741B4 LDR X10, [X10 + 0xD68]
	0x01D741B8 LDRH W9, [X8 + 0x12E]
	0x01D741BC LDR X1, [X10]
	0x01D741C0 CBZ X9, 0x1D741E4
	0x01D741C4 LDR X10, [X8 + 0xB0]
	0x01D741C8 ADD X10, X10, 0x8
	0x01D741CC LDUR X11, [X10 - 0x8]
	0x01D741D0 CMP X11, X1
	0x01D741D4 B.EQ 0x1D74238
	0x01D741D8 SUBS X9, X9, 0x1
	0x01D741DC ADD X10, X10, 0x10
	0x01D741E0 B.NE 0x1D741CC
	0x01D741E4 MOVZ W2, 0x1
	0x01D741E8 MOV X0, X21
	0x01D741EC BL 0x1C5C788
	0x01D741F0 B 0x1D74248
	0x01D741F4 STR W31, [X19]
	0x01D741F8 LDR X8, [X31 + 0x48]
	0x01D741FC STR X8, [X19 + 0x28]
	0x01D74200 ADRP X8, 0x2381000
	0x01D74204 LDR X8, [X8 + 0xB60]
	0x01D74208 LDR X0, [X8]
	0x01D7420C LDR W8, [X0 + 0xE0]
	0x01D74210 CBNZ W8, 0x1D74218
	0x01D74214 BL 0x1C16DFC
	0x01D74218 ADRP X8, 0x2381000
	0x01D7421C LDR X8, [X8 + 0xF10]
	0x01D74220 ADD X0, X19, 0x8
	0x01D74224 LDR X3, [X8]
	0x01D74228 ADD X1, X31, 0x48
	0x01D7422C MOV X2, X19
	0x01D74230 BL 0x1FB1644
	0x01D74234 B 0x1D745A4
	0x01D74238 LDR W9, [X10]
	0x01D7423C ADD W9, W9, 0x1
	0x01D74240 ADD X8, X8, W9, 0x4, SXTW
	0x01D74244 ADD X0, X8, 0x138
	0x01D74248 LDP X8, X1, [X0]
	0x01D7424C MOV X0, X21
	0x01D74250 BLR X8
	0x01D74254 MOV X21, X0
	0x01D74258 CBZ X0, 0x1D745D4
	0x01D7425C ADRP X10, 0x2381000
	0x01D74260 LDR X8, [X21]
	0x01D74264 LDR X10, [X10 + 0xD78]
	0x01D74268 LDRH W9, [X8 + 0x12E]
	0x01D7426C LDR X1, [X10]
	0x01D74270 CBZ X9, 0x1D74294
	0x01D74274 LDR X10, [X8 + 0xB0]
	0x01D74278 ADD X10, X10, 0x8
	0x01D7427C LDUR X11, [X10 - 0x8]
	0x01D74280 CMP X11, X1
	0x01D74284 B.EQ 0x1D742A4
	0x01D74288 SUBS X9, X9, 0x1
	0x01D7428C ADD X10, X10, 0x10
	0x01D74290 B.NE 0x1D7427C
	0x01D74294 MOV X0, X21
	0x01D74298 MOV W2, W31
	0x01D7429C BL 0x1C5C788
	0x01D742A0 B 0x1D742B0
	0x01D742A4 LDRSW X9, [X10]
	0x01D742A8 ADD X8, X8, X9, 0x4, LSL
	0x01D742AC ADD X0, X8, 0x138
	0x01D742B0 LDP X8, X1, [X0]
	0x01D742B4 MOV X0, X21
	0x01D742B8 BLR X8
	0x01D742BC MOV X21, X0
	0x01D742C0 CBZ X0, 0x1D745D8
	0x01D742C4 ADRP X23, 0x237F000
	0x01D742C8 ADRP X25, 0x2381000
	0x01D742CC ADRP X26, 0x2381000
	0x01D742D0 ADRP X27, 0x2381000
	0x01D742D4 ADRP X28, 0x2381000
	0x01D742D8 LDR X23, [X23 + 0xE18]
	0x01D742DC LDR X25, [X25 + 0xD80]
	0x01D742E0 LDR X26, [X26 + 0xD70]
	0x01D742E4 LDR X27, [X27 + 0xF20]
	0x01D742E8 LDR X28, [X28 + 0xF28]
	0x01D742EC MOVZ W29, 0x38
	0x01D742F0 LDR X8, [X21]
	0x01D742F4 LDR X1, [X23]
	0x01D742F8 LDRH W9, [X8 + 0x12E]
	0x01D742FC CBZ X9, 0x1D74320
	0x01D74300 LDR X10, [X8 + 0xB0]
	0x01D74304 ADD X10, X10, 0x8
	0x01D74308 LDUR X11, [X10 - 0x8]
	0x01D7430C CMP X11, X1
	0x01D74310 B.EQ 0x1D74330
	0x01D74314 SUBS X9, X9, 0x1
	0x01D74318 ADD X10, X10, 0x10
	0x01D7431C B.NE 0x1D74308
	0x01D74320 MOV X0, X21
	0x01D74324 MOV W2, W31
	0x01D74328 BL 0x1C5C788
	0x01D7432C B 0x1D7433C
	0x01D74330 LDRSW X9, [X10]
	0x01D74334 ADD X8, X8, X9, 0x4, LSL
	0x01D74338 ADD X0, X8, 0x138
	0x01D7433C LDP X8, X1, [X0]
	0x01D74340 MOV X0, X21
	0x01D74344 BLR X8
	0x01D74348 TBZ X0, 0x0, 0x1D744D0
	0x01D7434C LDR X8, [X21]
	0x01D74350 LDR X1, [X25]
	0x01D74354 LDRH W9, [X8 + 0x12E]
	0x01D74358 CBZ X9, 0x1D7437C
	0x01D7435C LDR X10, [X8 + 0xB0]
	0x01D74360 ADD X10, X10, 0x8
	0x01D74364 LDUR X11, [X10 - 0x8]
	0x01D74368 CMP X11, X1
	0x01D7436C B.EQ 0x1D7438C
	0x01D74370 SUBS X9, X9, 0x1
	0x01D74374 ADD X10, X10, 0x10
	0x01D74378 B.NE 0x1D74364
	0x01D7437C MOV X0, X21
	0x01D74380 MOV W2, W31
	0x01D74384 BL 0x1C5C788
	0x01D74388 B 0x1D74398
	0x01D7438C LDRSW X9, [X10]
	0x01D74390 ADD X8, X8, X9, 0x4, LSL
	0x01D74394 ADD X0, X8, 0x138
	0x01D74398 LDP X8, X1, [X0]
	0x01D7439C MOV X0, X21
	0x01D743A0 BLR X8
	0x01D743A4 MOV X22, X0
	0x01D743A8 CBZ X0, 0x1D745C8
	0x01D743AC LDR X8, [X22]
	0x01D743B0 LDR X1, [X26]
	0x01D743B4 LDRH W9, [X8 + 0x12E]
	0x01D743B8 CBZ X9, 0x1D743DC
	0x01D743BC LDR X10, [X8 + 0xB0]
	0x01D743C0 ADD X10, X10, 0x8
	0x01D743C4 LDUR X11, [X10 - 0x8]
	0x01D743C8 CMP X11, X1
	0x01D743CC B.EQ 0x1D743EC
	0x01D743D0 SUBS X9, X9, 0x1
	0x01D743D4 ADD X10, X10, 0x10
	0x01D743D8 B.NE 0x1D743C4
	0x01D743DC MOVZ W2, 0x7
	0x01D743E0 MOV X0, X22
	0x01D743E4 BL 0x1C5C788
	0x01D743E8 B 0x1D743FC
	0x01D743EC LDR W9, [X10]
	0x01D743F0 ADD W9, W9, 0x7
	0x01D743F4 ADD X8, X8, W9, 0x4, SXTW
	0x01D743F8 ADD X0, X8, 0x138
	0x01D743FC LDP X8, X1, [X0]
	0x01D74400 MOV X0, X22
	0x01D74404 BLR X8
	0x01D74408 LDR X1, [X27]
	0x01D7440C ADD X8, X31, 0x90
	0x01D74410 BL 0x220E028
	0x01D74414 LDP V0, V1, [X31 + 0x90]
	0x01D74418 LDR V2, [X31 + 0xB]
	0x01D7441C LDR X8, [X31 + 0xC0]
	0x01D74420 STP V0, V1, [X31 + 0x10]
	0x01D74424 STR V2, [X31 + 0x3]
	0x01D74428 STR X8, [X31 + 0x40]
	0x01D7442C CBZ X20, 0x1D745CC
	0x01D74430 LDP V0, V1, [X31 + 0x10]
	0x01D74434 LDR V2, [X31 + 0x3]
	0x01D74438 LDR X8, [X31 + 0x40]
	0x01D7443C LDR X10, [X28]
	0x01D74440 STP V0, V1, [X31 + 0x50]
	0x01D74444 STR V2, [X31 + 0x7]
	0x01D74448 STR X8, [X31 + 0x80]
	0x01D7444C LDR W9, [X20 + 0x1C]
	0x01D74450 LDR X8, [X20 + 0x10]
	0x01D74454 ADD W9, W9, 0x1
	0x01D74458 STR W9, [X20 + 0x1C]
	0x01D7445C CBZ X8, 0x1D745C4
	0x01D74460 LDRSW X9, [X20 + 0x18]
	0x01D74464 LDR W11, [X8 + 0x18]
	0x01D74468 CMP W9, W11
	0x01D7446C B.CS 0x1D7449C
	0x01D74470 ADD W10, W9, 0x1
	0x01D74474 STR W10, [X20 + 0x18]
	0x01D74478 LDP V2, V0, [X31 + 0x60]
	0x01D7447C LDR X10, [X31 + 0x80]
	0x01D74480 LDR V1, [X31 + 0x5]

ISIL:
	001 Subtract X31, X31, 368
	002 Move [X31+272], X29
	003 Move [X31+280], X30
	004 Move [X31+288], X28
	005 Move [X31+296], X27
	006 Move [X31+304], X26
	007 Move [X31+312], X25
	008 Move [X31+320], X24
	009 Move [X31+328], X23
	010 Move [X31+336], X22
	011 Move [X31+344], X21
	012 Move [X31+352], X20
	013 Move [X31+360], X19
	014 Move X20, 0x2666000
	015 Move W8, [X20+2303]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {104}
	021 Move X0, 0x2381000
	022 Move X0, [X0+1624]
	023 Call 0x1C17CF4
	024 Move X0, 0x2383000
	025 Move X0, [X0+3664]
	026 Call 0x1C17CF4
	027 Move X0, 0x2383000
	028 Move X0, [X0+3672]
	029 Call 0x1C17CF4
	030 Move X0, 0x2383000
	031 Move X0, [X0+2768]
	032 Call 0x1C17CF4
	033 Move X0, 0x2383000
	034 Move X0, [X0+3440]
	035 Call 0x1C17CF4
	036 Move X0, 0x2383000
	037 Move X0, [X0+3584]
	038 Call 0x1C17CF4
	039 Move X0, 0x2383000
	040 Move X0, [X0+2584]
	041 Call 0x1C17CF4
	042 Move X0, 0x2381000
	043 Move X0, [X0+3584]
	044 Call 0x1C17CF4
	045 Move X0, 0x2383000
	046 Move X0, [X0+3448]
	047 Call 0x1C17CF4
	048 Move X0, 0x2383000
	049 Move X0, [X0+3456]
	050 Call 0x1C17CF4
	051 Move X0, 0x2381000
	052 Move X0, [X0+3608]
	053 Call 0x1C17CF4
	054 Move X0, 0x2383000
	055 Move X0, [X0+3680]
	056 Call 0x1C17CF4
	057 Move X0, 0x2383000
	058 Move X0, [X0+3688]
	059 Call 0x1C17CF4
	060 Move X0, 0x2382000
	061 Move X0, [X0+440]
	062 Call 0x1C17CF4
	063 Move X0, 0x2383000
	064 Move X0, [X0+3696]
	065 Call 0x1C17CF4
	066 Move X0, 0x2383000
	067 Move X0, [X0+3704]
	068 Call 0x1C17CF4
	069 Move X0, 0x2383000
	070 Move X0, [X0+3712]
	071 Call 0x1C17CF4
	072 Move X0, 0x2382000
	073 Move X0, [X0+448]
	074 Call 0x1C17CF4
	075 Move X0, 0x2383000
	076 Move X0, [X0+3720]
	077 Call 0x1C17CF4
	078 Move X0, 0x2382000
	079 Move X0, [X0+464]
	080 Call 0x1C17CF4
	081 Move X0, 0x2383000
	082 Move X0, [X0+3592]
	083 Call 0x1C17CF4
	084 Move X0, 0x2383000
	085 Move X0, [X0+3600]
	086 Call 0x1C17CF4
	087 Move X0, 0x2383000
	088 Move X0, [X0+3608]
	089 Call 0x1C17CF4
	090 Move X0, 0x2383000
	091 Move X0, [X0+3616]
	092 Call 0x1C17CF4
	093 Move X0, 0x2383000
	094 Move X0, [X0+3624]
	095 Call 0x1C17CF4
	096 Move X0, 0x2383000
	097 Move X0, [X0+3728]
	098 Call 0x1C17CF4
	099 Move X0, 0x2383000
	100 Move X0, [X0+1200]
	101 Call 0x1C17CF4
	102 Move W8, 1
	103 Move [X20+2303], W8
	104 Move [X31+104], X31
	105 Move W9, [X19]
	106 Compare W9, 0
	107 JumpIfEqual {196}
	108 Move X8, [X19+32]
	109 Compare X8, 0
	110 JumpIfEqual {600}
	111 Move [X31+20], W9
	112 Move X9, 0x2383000
	113 Move X9, [X9+3592]
	114 Move W1, [X8+24]
	115 Move X0, [X9]
	116 Call 0x1C17D6C
	117 Move X8, [X19+32]
	118 Compare X8, 0
	119 JumpIfEqual {170}
	120 Move X26, 0x2383000
	121 Move X27, 0x2383000
	122 Move X28, 0x2383000
	123 Move X22, 0x2381000
	124 Move X25, 0x2383000
	125 Move X24, 0x2383000
	126 Move X26, [X26+3600]
	127 Move X27, [X27+3728]
	128 Move X28, [X28+1200]
	129 Move X22, [X22+1624]
	130 Move X25, [X25+2584]
	131 Move X24, [X24+3624]
	132 Move X20, X0
	133 Move W29, 4
	134 NotImplemented "Instruction LDRSW not yet implemented."
	135 Subtract X23, X29, 4
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X0, [X26]
	138 Call 0x1C17F10
	139 Move X21, X0
	140 Move X1, X31
	141 Call StorageObjectId..ctor, X0
	142 Compare X21, 0
	143 JumpIfEqual {593}
	144 Move X9, [X27]
	145 Move X8, [X28]
	146 Move [X21+16], X9
	147 Move [X21+24], X8
	148 Move X8, [X19+32]
	149 Compare X8, 0
	150 JumpIfEqual {590}
	151 Move W9, [X8+24]
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move X8, [X8]
	154 Move [X21+40], X8
	155 Compare X20, 0
	156 JumpIfEqual {591}
	157 Move X8, [X20]
	158 Move X1, [X8+64]
	159 Move X0, X21
	160 Call 0x1C17E00
	161 Compare X0, 0
	162 JumpIfEqual {587}
	163 Move W8, [X20+24]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move [X20], X21
	166 Move X8, [X19+32]
	167 Add X29, X29, 1
	168 Compare X8, 0
	169 JumpIfNotEqual {134}
	170 Call 0x1C17F20
	171 Move X0, [X22]
	172 Move W8, [X0+224]
	173 Compare W8, 0
	174 JumpIfNotEqual {177}
	175 Call 0x1C17DFC
	176 Move X0, [X22]
	177 Move X8, [X0+184]
	178 Move X21, [X8+16]
	179 Compare X21, 0
	180 JumpIfEqual {601}
	181 Move X8, [X21]
	182 Move X22, [X19+40]
	183 Move X1, [X25]
	184 NotImplemented "Instruction LDRH not yet implemented."
	185 Compare X9, 0
	186 JumpIfEqual {193}
	187 Move X10, [X8+176]
	188 Add X10, X10, 8
	189 NotImplemented "Instruction LDUR not yet implemented."
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Subtract X9, X9, 1
	192 Add X10, X10, 16
	193 Move W2, 71
	194 Move X0, X21
	195 Call 0x1C5D788
	196 Move X8, [X19+48]
	197 Move TEMP, 0
	198 Not TEMP
	199 Move W9, TEMP
	200 Move [X31+104], X8
	201 Move TEMP, 0
	202 Not TEMP
	203 Move W8, TEMP
	204 Move [X19+48], X31
	205 Move [X31+20], W8
	206 Move [X19], W9
	207 Move W9, [X10]
	208 Add W9, W9, 71
	209 Add X8, X8, W9
	210 Add X0, X8, 312
	211 Move X8, [X0]
	212 Move X5, [X0+8]
	213 Move X0, X21
	214 Move X1, X22
	215 Move X2, X20
	216 Move X3, X31
	217 Move X4, X31
	218 NotImplemented "Instruction BLR not yet implemented."
	219 Compare X0, 0
	220 JumpIfEqual {602}
	221 Move X1, [X24]
	222 Call Task`1<Object>.GetAwaiter, X0
	223 Move X8, 0x2383000
	224 Move X8, [X8+3616]
	225 Move [X31+104], X0
	226 Move X1, [X8]
	227 Add X0, X31, 104
	228 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	229 Move TEMP, X0
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfNotEqual {275}
	233 Move X8, 0x2383000
	234 Move X8, [X8+3608]
	235 Add X0, X31, 104
	236 Move X1, [X8]
	237 Call TaskAwaiter`1<Object>.GetResult, X0
	238 Move X8, 0x2382000
	239 Move X8, [X8+464]
	240 Move X22, X0
	241 Move X0, [X8]
	242 Call 0x1C17F10
	243 Move X8, 0x2382000
	244 Move X8, [X8+448]
	245 Move X20, X0
	246 Move X1, [X8]
	247 Call List`1<Object>..ctor, X0
	248 Move X8, 0x2383000
	249 Move X8, [X8+3720]
	250 Move X0, [X8]
	251 Call 0x1C17F10
	252 Move X8, 0x2383000
	253 Move X8, [X8+3712]
	254 Move X21, X0
	255 Move X1, [X8]
	256 Call List`1<ApiUserAvatar>..ctor, X0
	257 Compare X22, 0
	258 JumpIfEqual {595}
	259 Move X10, 0x2383000
	260 Move X8, [X22]
	261 Move X10, [X10+3584]
	262 NotImplemented "Instruction LDRH not yet implemented."
	263 Move X1, [X10]
	264 Compare X9, 0
	265 JumpIfEqual {272}
	266 Move X10, [X8+176]
	267 Add X10, X10, 8
	268 NotImplemented "Instruction LDUR not yet implemented."
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Subtract X9, X9, 1
	271 Add X10, X10, 16
	272 Move X0, X22
	273 Move W2, W31
	274 Call 0x1C5D788
	275 Move [X19], W31
	276 Move X8, [X31+104]
	277 Move [X19+48], X8
	278 Move X8, 0x2383000
	279 Move X8, [X8+2768]
	280 Move X0, [X8]
	281 Move W8, [X0+224]
	282 Compare W8, 0
	283 JumpIfNotEqual {285}
	284 Call 0x1C17DFC
	285 Move X8, 0x2383000
	286 Move X8, [X8+3664]
	287 Add X0, X19, 8
	288 Move X3, [X8]
	289 Add X1, X31, 104
	290 Move X2, X19
	291 Call AsyncTaskMethodBuilder`1<GetAvatarsResponse>.AwaitUnsafeOnCompleted, X0, X1, X2
	292 NotImplemented "Instruction LDRSW not yet implemented."
	293 Add X8, X8, X9
	294 Add X0, X8, 312
	295 Move X8, [X0]
	296 Move X1, [X0+8]
	297 Move X0, X22
	298 NotImplemented "Instruction BLR not yet implemented."
	299 Move X22, X0
	300 Compare X0, 0
	301 JumpIfEqual {596}
	302 Move X10, 0x2383000
	303 Move X8, [X22]
	304 Move X10, [X10+3448]
	305 NotImplemented "Instruction LDRH not yet implemented."
	306 Move X1, [X10]
	307 Compare X9, 0
	308 JumpIfEqual {315}
	309 Move X10, [X8+176]
	310 Add X10, X10, 8
	311 NotImplemented "Instruction LDUR not yet implemented."
	312 NotImplemented "Instruction CMP not yet implemented."
	313 Subtract X9, X9, 1
	314 Add X10, X10, 16
	315 Move X0, X22
	316 Move W2, W31
	317 Call 0x1C5D788
	318 NotImplemented "Instruction LDRSW not yet implemented."
	319 Add X8, X8, X9
	320 Add X0, X8, 312
	321 Move X8, [X0]
	322 Move X1, [X0+8]
	323 Move X0, X22
	324 NotImplemented "Instruction BLR not yet implemented."
	325 Move X22, X0
	326 Compare X0, 0
	327 JumpIfEqual {597}
	328 Move X24, 0x2381000
	329 Move X25, 0x2383000
	330 Move X27, 0x2383000
	331 Move X28, 0x2382000
	332 Move X29, 0x2383000
	333 Move X26, 0x2383000
	334 Move X24, [X24+3608]
	335 Move X25, [X25+3456]
	336 Move X27, [X27+3440]
	337 Move X28, [X28+440]
	338 Move X29, [X29+3680]
	339 Move X26, [X26+3688]
	340 Move X8, [X22]
	341 Move X1, [X24]
	342 NotImplemented "Instruction LDRH not yet implemented."
	343 Compare X9, 0
	344 JumpIfEqual {351}
	345 Move X10, [X8+176]
	346 Add X10, X10, 8
	347 NotImplemented "Instruction LDUR not yet implemented."
	348 NotImplemented "Instruction CMP not yet implemented."
	349 Subtract X9, X9, 1
	350 Add X10, X10, 16
	351 Move X0, X22
	352 Move W2, W31
	353 Call 0x1C5D788
	354 NotImplemented "Instruction LDRSW not yet implemented."
	355 Add X8, X8, X9
	356 Add X0, X8, 312
	357 Move X8, [X0]
	358 Move X1, [X0+8]
	359 Move X0, X22
	360 NotImplemented "Instruction BLR not yet implemented."
	361 Move TEMP, X0
	362 And TEMP, TEMP, 1
	363 Compare TEMP, 1
	364 JumpIfNotEqual {497}
	365 Move X8, [X22]
	366 Move X1, [X25]
	367 NotImplemented "Instruction LDRH not yet implemented."
	368 Compare X9, 0
	369 JumpIfEqual {376}
	370 Move X10, [X8+176]
	371 Add X10, X10, 8
	372 NotImplemented "Instruction LDUR not yet implemented."
	373 NotImplemented "Instruction CMP not yet implemented."
	374 Subtract X9, X9, 1
	375 Add X10, X10, 16
	376 Move X0, X22
	377 Move W2, W31
	378 Call 0x1C5D788
	379 NotImplemented "Instruction LDRSW not yet implemented."
	380 Add X8, X8, X9
	381 Add X0, X8, 312
	382 Move X8, [X0]
	383 Move X1, [X0+8]
	384 Move X0, X22
	385 NotImplemented "Instruction BLR not yet implemented."
	386 Move X23, X0
	387 Compare X0, 0
	388 JumpIfEqual {585}
	389 Move X8, [X23]
	390 Move X1, [X27]
	391 NotImplemented "Instruction LDRH not yet implemented."
	392 Compare X9, 0
	393 JumpIfEqual {400}
	394 Move X10, [X8+176]
	395 Add X10, X10, 8
	396 NotImplemented "Instruction LDUR not yet implemented."
	397 NotImplemented "Instruction CMP not yet implemented."
	398 Subtract X9, X9, 1
	399 Add X10, X10, 16
	400 Move W2, 6
	401 Move X0, X23
	402 Call 0x1C5D788
	403 Move W9, [X10]
	404 Add W9, W9, 6
	405 Add X8, X8, W9
	406 Add X0, X8, 312
	407 Move X8, [X0]
	408 Move X1, [X0+8]
	409 Move X0, X23
	410 NotImplemented "Instruction BLR not yet implemented."
	411 Move X1, X0
	412 Compare X20, 0
	413 JumpIfEqual {586}
	414 Move W10, [X20+28]
	415 Move X8, [X20+16]
	416 Move X9, [X28]
	417 Add W10, W10, 1
	418 Move [X20+28], W10
	419 Compare X8, 0
	420 JumpIfEqual {583}
	421 NotImplemented "Instruction LDRSW not yet implemented."
	422 Move W11, [X8+24]
	423 NotImplemented "Instruction CMP not yet implemented."
	424 Add W9, W10, 1
	425 Add X8, X8, X10
	426 Move [X20+24], W9
	427 Move [X8+32], X1
	428 Move X8, [X9+32]
	429 Move X8, [X8+192]
	430 Move X2, [X8+112]
	431 Move X0, X20
	432 Call List`1<Object>.AddWithResize, X0, X1
	433 Move X8, [X23]
	434 Move X1, [X27]
	435 NotImplemented "Instruction LDRH not yet implemented."
	436 Compare X9, 0
	437 JumpIfEqual {444}
	438 Move X10, [X8+176]
	439 Add X10, X10, 8
	440 NotImplemented "Instruction LDUR not yet implemented."
	441 NotImplemented "Instruction CMP not yet implemented."
	442 Subtract X9, X9, 1
	443 Add X10, X10, 16
	444 Move W2, 7
	445 Move X0, X23
	446 Call 0x1C5D788
	447 Move W9, [X10]
	448 Add W9, W9, 7
	449 Add X8, X8, W9
	450 Add X0, X8, 312
	451 Move X8, [X0]
	452 Move X1, [X0+8]
	453 Move X0, X23
	454 NotImplemented "Instruction BLR not yet implemented."
	455 Move X1, [X29]
	456 Add X8, X31, 192
	457 Call JsonParser.FromJson, X0
	458 Add X0, X31, 24
	459 Add X1, X31, 192
	460 Move W2, 80
	461 Call 0x3EB2AC0
	462 Compare X21, 0
	463 JumpIfEqual {584}
	464 Move X23, [X26]
	465 Add X0, X31, 112
	466 Add X1, X31, 24
	467 Move W2, 80
	468 Call 0x3EB2AC0
	469 Move W9, [X21+28]
	470 Move X8, [X21+16]
	471 Add W9, W9, 1
	472 Move [X21+28], W9
	473 Compare X8, 0
	474 JumpIfEqual {582}
	475 NotImplemented "Instruction LDRSW not yet implemented."
	476 Move W10, [X8+24]
	477 NotImplemented "Instruction CMP not yet implemented."
	478 Move W11, 80
	479 NotImplemented "Instruction MADD not yet implemented."
	480 Add W10, W9, 1
	481 Add X0, X8, 32
	482 Add X1, X31, 112
	483 Move W2, 80
	484 Move [X21+24], W10
	485 Call 0x3EB2AC0
	486 Move X8, [X23+32]
	487 Add X0, X31, 192
	488 Add X1, X31, 112
	489 Move W2, 80
	490 Move X8, [X8+192]
	491 Move X23, [X8+112]
	492 Call 0x3EB2AC0
	493 Add X1, X31, 192
	494 Move X0, X21
	495 Move X2, X23
	496 Call List`1<ApiUserAvatar>.AddWithResize, X0, X1
	497 Move X25, X31
	498 Move W23, 9
	499 Move W8, [X31+20]
	500 Move TEMP, X8
	501 And TEMP, TEMP, -2147483648
	502 Compare TEMP, -2147483648
	503 JumpIfNotEqual {529}
	504 Compare X22, 0
	505 JumpIfEqual {529}
	506 Move X10, 0x2380000
	507 Move X8, [X22]
	508 Move X10, [X10+3584]
	509 NotImplemented "Instruction LDRH not yet implemented."
	510 Move X1, [X10]
	511 Compare X9, 0
	512 JumpIfEqual {519}
	513 Move X10, [X8+176]
	514 Add X10, X10, 8
	515 NotImplemented "Instruction LDUR not yet implemented."
	516 NotImplemented "Instruction CMP not yet implemented."
	517 Subtract X9, X9, 1
	518 Add X10, X10, 16
	519 Move X0, X22
	520 Move W2, W31
	521 Call 0x1C5D788
	522 NotImplemented "Instruction LDRSW not yet implemented."
	523 Add X8, X8, X9
	524 Add X0, X8, 312
	525 Move X8, [X0]
	526 Move X1, [X0+8]
	527 Move X0, X22
	528 NotImplemented "Instruction BLR not yet implemented."
	529 Compare X25, 0
	530 JumpIfNotEqual {598}
	531 Compare W23, 0
	532 JumpIfEqual {534}
	533 NotImplemented "Instruction CMP not yet implemented."
	534 Compare X20, 0
	535 JumpIfEqual {603}
	536 Move X8, 0x2382000
	537 Move X8, [X8+3704]
	538 Move X1, [X8]
	539 Move X0, X20
	540 Call List`1<Object>.ToArray, X0
	541 Compare X21, 0
	542 JumpIfEqual {604}
	543 Move X8, 0x2382000
	544 Move X8, [X8+3696]
	545 Move X20, X0
	546 Move X1, [X8]
	547 Move X0, X21
	548 Call List`1<ApiUserAvatar>.ToArray, X0
	549 Move TEMP, 1
	550 Not TEMP
	551 Move W8, TEMP
	552 Move [X19+8], W8
	553 Move X8, 0x2382000
	554 Move X8, [X8+2768]
	555 Move X21, X0
	556 Move X0, [X8]
	557 Move W8, [X0+224]
	558 Compare W8, 0
	559 JumpIfNotEqual {561}
	560 Call 0x1C17DFC
	561 Move X8, 0x2382000
	562 Move X8, [X8+3672]
	563 Move X0, X19
	564 Move X1, X20
	565 Move X2, X21
	566 Move X3, [X8]
	567 Call AsyncTaskMethodBuilder`1<GetAvatarsResponse>.SetResult, X0, X1
	568 Move X20, [X31+352]
	569 Move X19, [X31+360]
	570 Move X22, [X31+336]
	571 Move X21, [X31+344]
	572 Move X24, [X31+320]
	573 Move X23, [X31+328]
	574 Move X26, [X31+304]
	575 Move X25, [X31+312]
	576 Move X28, [X31+288]
	577 Move X27, [X31+296]
	578 Move X29, [X31+272]
	579 Move X30, [X31+280]
	580 Add X31, X31, 368
	581 Return 
	582 Call 0x1C17F20
	583 Call 0x1C17F20
	584 Call 0x1C17F20
	585 Call 0x1C17F20
	586 Call 0x1C17F20
	587 Call 0x1C17F44
	588 Move X1, X31
	589 Call 0x1C17DEC
	590 Call 0x1C17F20
	591 Call 0x1C17F20
	592 Call 0x1C17F28
	593 Call 0x1C17F20
	594 Call 0x1C17F28
	595 Call 0x1C17F20
	596 Call 0x1C17F20
	597 Call 0x1C17F20
	598 Move X0, X25
	599 Call 0x1C17F18
	600 Call 0x1C17F20
	601 Call 0x1C17F20
	602 Call 0x1C17F20
	603 Call 0x1C17F20
	604 Call 0x1C17F20
	605 Move X23, X1
	606 Move X24, X0
	607 Move X23, X1
	608 Move X24, X0
	609 NotImplemented "Instruction CMP not yet implemented."
	610 Move X0, X24
	611 Call 0x3EB2AD0
	612 Move X25, [X0]
	613 Call 0x3EB2AE0
	614 Move W23, W31
	615 Move X25, X31
	616 Move W8, [X31+20]
	617 Move TEMP, X8
	618 And TEMP, TEMP, -2147483648
	619 Compare TEMP, -2147483648
	620 JumpIfNotEqual {646}
	621 Compare X22, 0
	622 JumpIfEqual {646}
	623 Move X10, 0x2380000
	624 Move X8, [X22]
	625 Move X10, [X10+3584]
	626 NotImplemented "Instruction LDRH not yet implemented."
	627 Move X1, [X10]
	628 Compare X9, 0
	629 JumpIfEqual {636}
	630 Move X10, [X8+176]
	631 Add X10, X10, 8
	632 NotImplemented "Instruction LDUR not yet implemented."
	633 NotImplemented "Instruction CMP not yet implemented."
	634 Subtract X9, X9, 1
	635 Add X10, X10, 16
	636 Move X0, X22
	637 Move W2, W31
	638 Call 0x1C5D788
	639 NotImplemented "Instruction LDRSW not yet implemented."
	640 Add X8, X8, X9
	641 Add X0, X8, 312
	642 Move X8, [X0]
	643 Move X1, [X0+8]
	644 Move X0, X22
	645 NotImplemented "Instruction BLR not yet implemented."
	646 Compare X25, 0
	647 JumpIfNotEqual {691}
	648 NotImplemented "Instruction CMP not yet implemented."
	649 Move X0, X24
	650 Call 0x3EB2AD0
	651 Move X22, X0
	652 Move X0, 0x2380000
	653 Move X0, [X0+2000]
	654 Call 0x1C17D08
	655 Move X8, [X22]
	656 Move X1, [X8]
	657 Call 0x1C18270
	658 Move TEMP, X0
	659 And TEMP, TEMP, 1
	660 Compare TEMP, 1
	661 JumpIfNotEqual {693}
	662 Move X22, [X22]
	663 Call 0x3EB2AE0
	664 Move X0, 0x2380000
	665 Move X0, [X0+1928]
	666 Call 0x1C17D08
	667 Move W8, [X0+224]
	668 Compare W8, 0
	669 JumpIfNotEqual {671}
	670 Call 0x1C17DFC
	671 Move X0, 0x2382000
	672 Move X0, [X0+3736]
	673 Call 0x1C17D08
	674 Move X23, X0
	675 Move X0, 0x2382000
	676 Move X0, [X0+2680]
	677 Call 0x1C17D08
	678 Move X24, X0
	679 Move X0, 0x2382000
	680 Move X0, [X0+3744]
	681 Call 0x1C17D08
	682 Move X5, X0
	683 Move W0, 64
	684 Move W6, 253
	685 Move X1, X23
	686 Move X2, X22
	687 Move X3, X31
	688 Move X4, X24
	689 Move X7, X31
	690 Call Log.Error, X0, X1, X2, X3, X4, X5, X6
	691 Move X0, X25
	692 Call 0x1C17F18
	693 Move W0, 8
	694 Call 0x3EB2AF0
	695 Move X8, [X22]
	696 Move [X0], X8
	697 Move X1, 0x2141000
	698 Add X1, X1, 3672
	699 Move X2, X31
	700 Call 0x3EB2B00
	701 Move X23, X1
	702 Move X24, X0
	703 Move X23, X1
	704 Move X24, X0
	705 Call 0x3EB2AE0
	706 Move X23, X1
	707 Move X24, X0
	708 NotImplemented "Instruction CMP not yet implemented."
	709 Move X0, X24
	710 Call 0x3EB2AD0
	711 Move X20, X0
	712 Move X0, 0x2380000
	713 Move X0, [X0+2000]
	714 Call 0x1C17D08
	715 Move X8, [X20]
	716 Move X1, [X8]
	717 Call 0x1C18270
	718 Move TEMP, X0
	719 And TEMP, TEMP, 1
	720 Compare TEMP, 1
	721 JumpIfNotEqual {742}
	722 Move X20, [X20]
	723 Call 0x3EB2AE0
	724 Move TEMP, 1
	725 Not TEMP
	726 Move W8, TEMP
	727 Move [X19+8], W8
	728 Move X0, 0x2382000
	729 Move X0, [X0+2768]
	730 Call 0x1C17D08
	731 Move W8, [X0+224]
	732 Compare W8, 0
	733 JumpIfNotEqual {735}
	734 Call 0x1C17DFC
	735 Move X0, 0x2382000
	736 Move X0, [X0+3752]
	737 Call 0x1C17D08
	738 Move X2, X0
	739 Move X0, X19
	740 Move X1, X20
	741 Call AsyncTaskMethodBuilder`1<GetAvatarsResponse>.SetException, X0, X1
	742 Move W0, 8
	743 Call 0x3EB2AF0
	744 Move X8, [X20]
	745 Move [X0], X8
	746 Move X1, 0x2141000
	747 Add X1, X1, 3672
	748 Move X2, X31
	749 Call 0x3EB2B00
	750 Move X24, X0
	751 Call 0x3EB2AE0
	752 Move X0, X24
	753 Call 0x1D2D690
	754 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x01D74484 NOP
	0x01D74488 MADD X8, X9, X29, X8
	0x01D7448C STP V2, V0, [X8 + 0x30]
	0x01D74490 STR X10, [X8 + 0x50]
	0x01D74494 STR V1, [X8 + 0x2]
	0x01D74498 B 0x1D742F0
	0x01D7449C LDR X8, [X10 + 0x20]
	0x01D744A0 LDP V0, V1, [X31 + 0x50]
	0x01D744A4 LDR V2, [X31 + 0x7]
	0x01D744A8 LDR X9, [X31 + 0x80]
	0x01D744AC LDR X8, [X8 + 0xC0]
	0x01D744B0 LDR X2, [X8 + 0x70]
	0x01D744B4 STP V0, V1, [X31 + 0x90]
	0x01D744B8 STR V2, [X31 + 0xB]
	0x01D744BC STR X9, [X31 + 0xC0]
	0x01D744C0 ADD X1, X31, 0x90
	0x01D744C4 MOV X0, X20
	0x01D744C8 BL 0x2F52B6C
	0x01D744CC B 0x1D742F0
	0x01D744D0 MOV X23, X31
	0x01D744D4 MOVZ W22, 0x7
	0x01D744D8 TBZ X24, 0x1F, 0x1D74540
	0x01D744DC CBZ X21, 0x1D74540
	0x01D744E0 ADRP X10, 0x237F000
	0x01D744E4 LDR X8, [X21]
	0x01D744E8 LDR X10, [X10 + 0xE00]
	0x01D744EC LDRH W9, [X8 + 0x12E]
	0x01D744F0 LDR X1, [X10]
	0x01D744F4 CBZ X9, 0x1D74518
	0x01D744F8 LDR X10, [X8 + 0xB0]
	0x01D744FC ADD X10, X10, 0x8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2665000
	007 Move X21, 0x2382000
	008 Move W8, [X22+2304]
	009 Move X21, [X21+2768]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x2382000
	017 Move X0, [X0+3760]
	018 Call 0x1C17CF4
	019 Move X0, 0x2382000
	020 Move X0, [X0+2768]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2304], W8
	024 Move X0, [X21]
	025 Move X21, 0x2382000
	026 Move W8, [X0+224]
	027 Move X21, [X21+3760]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<GetAvatarsResponse>.SetStateMachine, X0, X1
	040 Return 

