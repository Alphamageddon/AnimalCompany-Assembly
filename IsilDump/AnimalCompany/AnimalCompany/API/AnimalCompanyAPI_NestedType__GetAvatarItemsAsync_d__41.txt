Type: AnimalCompany.API.AnimalCompanyAPI/<GetAvatarItemsAsync>d__41

Method: System.Void MoveNext()

Disassembly:
	0x01D72374 CBZ X9, 0x1D72398
	0x01D72378 LDR X10, [X8 + 0xB0]
	0x01D7237C ADD X10, X10, 0x8
	0x01D72380 LDUR X11, [X10 - 0x8]
	0x01D72384 CMP X11, X1
	0x01D72388 B.EQ 0x1D723A8
	0x01D7238C SUBS X9, X9, 0x1
	0x01D72390 ADD X10, X10, 0x10
	0x01D72394 B.NE 0x1D72380
	0x01D72398 MOVZ W2, 0x7
	0x01D7239C MOV X0, X22
	0x01D723A0 BL 0x1C5C788
	0x01D723A4 B 0x1D723B8
	0x01D723A8 LDR W9, [X10]
	0x01D723AC ADD W9, W9, 0x7
	0x01D723B0 ADD X8, X8, W9, 0x4, SXTW
	0x01D723B4 ADD X0, X8, 0x138
	0x01D723B8 LDP X8, X1, [X0]
	0x01D723BC MOV X0, X22
	0x01D723C0 BLR X8
	0x01D723C4 LDR X1, [X27]
	0x01D723C8 ADD X8, X31, 0x90
	0x01D723CC BL 0x220DCD0
	0x01D723D0 LDP V0, V1, [X31 + 0x90]
	0x01D723D4 LDR V2, [X31 + 0xB]
	0x01D723D8 STP V0, V1, [X31 + 0x20]
	0x01D723DC STR V2, [X31 + 0x4]
	0x01D723E0 CBZ X20, 0x1D7254C
	0x01D723E4 LDP V0, V1, [X31 + 0x20]
	0x01D723E8 LDR V2, [X31 + 0x4]
	0x01D723EC LDR X10, [X28]
	0x01D723F0 STP V0, V1, [X31 + 0x60]
	0x01D723F4 STR V2, [X31 + 0x8]
	0x01D723F8 LDR W9, [X20 + 0x1C]
	0x01D723FC LDR X8, [X20 + 0x10]
	0x01D72400 ADD W9, W9, 0x1
	0x01D72404 STR W9, [X20 + 0x1C]
	0x01D72408 CBZ X8, 0x1D72544
	0x01D7240C LDRSW X9, [X20 + 0x18]
	0x01D72410 LDR W11, [X8 + 0x18]
	0x01D72414 CMP W9, W11
	0x01D72418 B.CS 0x1D72440
	0x01D7241C ADD W10, W9, 0x1
	0x01D72420 STR W10, [X20 + 0x18]
	0x01D72424 LDP V1, V0, [X31 + 0x70]
	0x01D72428 LDR V2, [X31 + 0x6]
	0x01D7242C NOP
	0x01D72430 MADD X8, X9, X29, X8
	0x01D72434 STP V1, V0, [X8 + 0x30]
	0x01D72438 STR V2, [X8 + 0x2]
	0x01D7243C B 0x1D722AC
	0x01D72440 LDR X8, [X10 + 0x20]
	0x01D72444 LDP V0, V1, [X31 + 0x60]
	0x01D72448 LDR V2, [X31 + 0x8]
	0x01D7244C LDR X8, [X8 + 0xC0]
	0x01D72450 LDR X2, [X8 + 0x70]
	0x01D72454 STP V0, V1, [X31 + 0x90]
	0x01D72458 STR V2, [X31 + 0xB]
	0x01D7245C ADD X1, X31, 0x90
	0x01D72460 MOV X0, X20
	0x01D72464 BL 0x2F4F9DC
	0x01D72468 B 0x1D722AC
	0x01D7246C MOV X22, X31
	0x01D72470 MOVZ W24, 0x9
	0x01D72474 TBZ X23, 0x1F, 0x1D724DC
	0x01D72478 CBZ X21, 0x1D724DC
	0x01D7247C ADRP X10, 0x2381000
	0x01D72480 LDR X8, [X21]
	0x01D72484 LDR X10, [X10 + 0xE00]
	0x01D72488 LDRH W9, [X8 + 0x12E]
	0x01D7248C LDR X1, [X10]
	0x01D72490 CBZ X9, 0x1D724B4
	0x01D72494 LDR X10, [X8 + 0xB0]
	0x01D72498 ADD X10, X10, 0x8
	0x01D7249C LDUR X11, [X10 - 0x8]
	0x01D724A0 CMP X11, X1
	0x01D724A4 B.EQ 0x1D724C4
	0x01D724A8 SUBS X9, X9, 0x1
	0x01D724AC ADD X10, X10, 0x10
	0x01D724B0 B.NE 0x1D7249C
	0x01D724B4 MOV X0, X21
	0x01D724B8 MOV W2, W31
	0x01D724BC BL 0x1C5C788
	0x01D724C0 B 0x1D724D0
	0x01D724C4 LDRSW X9, [X10]
	0x01D724C8 ADD X8, X8, X9, 0x4, LSL
	0x01D724CC ADD X0, X8, 0x138
	0x01D724D0 LDP X8, X1, [X0]
	0x01D724D4 MOV X0, X21
	0x01D724D8 BLR X8
	0x01D724DC CBNZ X22, 0x1D7257C
	0x01D724E0 CBZ W24, 0x1D724EC
	0x01D724E4 CMP W24, 0x9
	0x01D724E8 B.NE 0x1D72524
	0x01D724EC MOVN W8, 0x1
	0x01D724F0 STR W8, [X19], #0x8
	0x01D724F4 ADRP X8, 0x2383000
	0x01D724F8 LDR X8, [X8 + 0xBA0]
	0x01D724FC LDR X0, [X8]
	0x01D72500 LDR W8, [X0 + 0xE0]
	0x01D72504 CBNZ W8, 0x1D7250C
	0x01D72508 BL 0x1C16DFC
	0x01D7250C ADRP X8, 0x2383000
	0x01D72510 LDR X8, [X8 + 0xDF8]
	0x01D72514 MOV X0, X19
	0x01D72518 MOV X1, X20
	0x01D7251C LDR X2, [X8]
	0x01D72520 BL 0x26322B0
	0x01D72524 LDP X20, X19, [X31 + 0x110]
	0x01D72528 LDP X22, X21, [X31 + 0x100]
	0x01D7252C LDP X24, X23, [X31 + 0xF0]
	0x01D72530 LDP X26, X25, [X31 + 0xE0]
	0x01D72534 LDP X28, X27, [X31 + 0xD0]
	0x01D72538 LDP X29, X30, [X31 + 0xC0]
	0x01D7253C ADD X31, X31, 0x120
	0x01D72540 RET
	0x01D72544 BL 0x1C16F20
	0x01D72548 BL 0x1C16F20
	0x01D7254C BL 0x1C16F20
	0x01D72550 BL 0x1C16F44
	0x01D72554 MOV X1, X31
	0x01D72558 BL 0x1C16DEC
	0x01D7255C BL 0x1C16F20
	0x01D72560 BL 0x1C16F20
	0x01D72564 BL 0x1C16F28
	0x01D72568 BL 0x1C16F20
	0x01D7256C BL 0x1C16F28
	0x01D72570 BL 0x1C16F20
	0x01D72574 BL 0x1C16F20
	0x01D72578 BL 0x1C16F20
	0x01D7257C MOV X0, X22
	0x01D72580 BL 0x1C16F18
	0x01D72584 BL 0x1C16F20
	0x01D72588 BL 0x1C16F20
	0x01D7258C BL 0x1C16F20
	0x01D72590 B 0x1D727A4
	0x01D72594 B 0x1D727A4
	0x01D72598 B 0x1D727A4
	0x01D7259C B 0x1D727A4
	0x01D725A0 B 0x1D727A4
	0x01D725A4 B 0x1D727A4
	0x01D725A8 B 0x1D727A4
	0x01D725AC B 0x1D72600
	0x01D725B0 B 0x1D725C8
	0x01D725B4 B 0x1D727A4
	0x01D725B8 B 0x1D725C8
	0x01D725BC B 0x1D725C8
	0x01D725C0 B 0x1D727A4
	0x01D725C4 B 0x1D727A4
	0x01D725C8 STP X1, X0, [X31 + 0x10]
	0x01D725CC B 0x1D72694
	0x01D725D0 B 0x1D72600
	0x01D725D4 B 0x1D727A4
	0x01D725D8 B 0x1D727A4
	0x01D725DC B 0x1D727A4
	0x01D725E0 B 0x1D727A4
	0x01D725E4 B 0x1D727A4
	0x01D725E8 B 0x1D72600
	0x01D725EC B 0x1D72600
	0x01D725F0 B 0x1D72600
	0x01D725F4 B 0x1D72600
	0x01D725F8 B 0x1D72600
	0x01D725FC B 0x1D727A4
	0x01D72600 CMP W1, 0x1
	0x01D72604 B.NE 0x1D72620
	0x01D72608 BL 0x3EB1AD0
	0x01D7260C LDR X22, [X0]
	0x01D72610 BL 0x3EB1AE0
	0x01D72614 MOV W24, W31
	0x01D72618 TBNZ X23, 0x1F, 0x1D72478
	0x01D7261C B 0x1D724DC
	0x01D72620 STP X1, X0, [X31 + 0x10]
	0x01D72624 MOV X22, X31
	0x01D72628 TBZ X23, 0x1F, 0x1D72690
	0x01D7262C CBZ X21, 0x1D72690
	0x01D72630 ADRP X10, 0x2381000
	0x01D72634 LDR X8, [X21]
	0x01D72638 LDR X10, [X10 + 0xE00]
	0x01D7263C LDRH W9, [X8 + 0x12E]
	0x01D72640 LDR X1, [X10]
	0x01D72644 CBZ X9, 0x1D72668
	0x01D72648 LDR X10, [X8 + 0xB0]
	0x01D7264C ADD X10, X10, 0x8
	0x01D72650 LDUR X11, [X10 - 0x8]
	0x01D72654 CMP X11, X1
	0x01D72658 B.EQ 0x1D72678
	0x01D7265C SUBS X9, X9, 0x1
	0x01D72660 ADD X10, X10, 0x10
	0x01D72664 B.NE 0x1D72650
	0x01D72668 MOV X0, X21
	0x01D7266C MOV W2, W31
	0x01D72670 BL 0x1C5C788
	0x01D72674 B 0x1D72684
	0x01D72678 LDRSW X9, [X10]
	0x01D7267C ADD X8, X8, X9, 0x4, LSL
	0x01D72680 ADD X0, X8, 0x138
	0x01D72684 LDP X8, X1, [X0]
	0x01D72688 MOV X0, X21
	0x01D7268C BLR X8
	0x01D72690 CBNZ X22, 0x1D72744
	0x01D72694 LDR X8, [X31 + 0x10]
	0x01D72698 CMP W8, 0x1
	0x01D7269C B.NE 0x1D7273C
	0x01D726A0 LDR X0, [X31 + 0x18]
	0x01D726A4 BL 0x3EB1AD0
	0x01D726A8 MOV X21, X0
	0x01D726AC ADRP X0, 0x2381000
	0x01D726B0 LDR X0, [X0 + 0x7D0]
	0x01D726B4 BL 0x1C16D08
	0x01D726B8 LDR X8, [X21]
	0x01D726BC LDR X1, [X8]
	0x01D726C0 BL 0x1C17270
	0x01D726C4 TBZ X0, 0x0, 0x1D7274C
	0x01D726C8 LDR X21, [X21]
	0x01D726CC BL 0x3EB1AE0
	0x01D726D0 ADRP X0, 0x2381000
	0x01D726D4 LDR X0, [X0 + 0x788]
	0x01D726D8 BL 0x1C16D08
	0x01D726DC LDR W8, [X0 + 0xE0]
	0x01D726E0 CBNZ W8, 0x1D726E8
	0x01D726E4 BL 0x1C16DFC
	0x01D726E8 ADRP X0, 0x2383000
	0x01D726EC LDR X0, [X0 + 0xDD0]
	0x01D726F0 BL 0x1C16D08
	0x01D726F4 MOV X22, X0
	0x01D726F8 ADRP X0, 0x2383000
	0x01D726FC LDR X0, [X0 + 0xA78]
	0x01D72700 BL 0x1C16D08
	0x01D72704 MOV X23, X0
	0x01D72708 ADRP X0, 0x2383000
	0x01D7270C LDR X0, [X0 + 0xDD8]
	0x01D72710 BL 0x1C16D08
	0x01D72714 MOV X5, X0
	0x01D72718 MOVZ W0, 0x40
	0x01D7271C MOVZ W6, 0x1DC
	0x01D72720 MOV X1, X22
	0x01D72724 MOV X2, X21
	0x01D72728 MOV X3, X31
	0x01D7272C MOV X4, X23
	0x01D72730 MOV X7, X31
	0x01D72734 BL 0x35C2674
	0x01D72738 B 0x1D724EC
	0x01D7273C LDR X9, [X31 + 0x18]
	0x01D72740 B 0x1D727AC
	0x01D72744 MOV X0, X22
	0x01D72748 BL 0x1C16F18
	0x01D7274C MOVZ W0, 0x8
	0x01D72750 BL 0x3EB1AF0
	0x01D72754 LDR X8, [X21]
	0x01D72758 STR X8, [X0]
	0x01D7275C ADRP X1, 0x2142000
	0x01D72760 ADD X1, X1, 0xE58
	0x01D72764 MOV X2, X31
	0x01D72768 BL 0x3EB1B00
	0x01D7276C B 0x1D7284C
	0x01D72770 MOV X20, X1
	0x01D72774 MOV X21, X0
	0x01D72778 B 0x1D72794
	0x01D7277C STP X1, X0, [X31 + 0x10]
	0x01D72780 TBNZ X23, 0x1F, 0x1D7262C
	0x01D72784 B 0x1D72690
	0x01D72788 MOV X20, X1
	0x01D7278C MOV X21, X0
	0x01D72790 BL 0x3EB1AE0
	0x01D72794 MOV X8, X20
	0x01D72798 MOV X9, X21
	0x01D7279C B 0x1D727AC
	0x01D727A0 B 0x1D727A4
	0x01D727A4 MOV X8, X1
	0x01D727A8 MOV X9, X0
	0x01D727AC CMP W8, 0x1
	0x01D727B0 B.NE 0x1D72824
	0x01D727B4 MOV X0, X9
	0x01D727B8 BL 0x3EB1AD0
	0x01D727BC MOV X20, X0
	0x01D727C0 ADRP X0, 0x2381000
	0x01D727C4 LDR X0, [X0 + 0x7D0]
	0x01D727C8 BL 0x1C16D08
	0x01D727CC LDR X8, [X20]
	0x01D727D0 LDR X1, [X8]
	0x01D727D4 BL 0x1C17270
	0x01D727D8 TBZ X0, 0x0, 0x1D7282C
	0x01D727DC LDR X20, [X20]
	0x01D727E0 BL 0x3EB1AE0
	0x01D727E4 MOVN W8, 0x1
	0x01D727E8 STR W8, [X19], #0x8
	0x01D727EC ADRP X0, 0x2383000
	0x01D727F0 LDR X0, [X0 + 0xBA0]
	0x01D727F4 BL 0x1C16D08
	0x01D727F8 LDR W8, [X0 + 0xE0]
	0x01D727FC CBNZ W8, 0x1D72804
	0x01D72800 BL 0x1C16DFC
	0x01D72804 ADRP X0, 0x2383000
	0x01D72808 LDR X0, [X0 + 0xE40]
	0x01D7280C BL 0x1C16D08
	0x01D72810 MOV X2, X0
	0x01D72814 MOV X0, X19
	0x01D72818 MOV X1, X20
	0x01D7281C BL 0x26324C8
	0x01D72820 B 0x1D72524
	0x01D72824 MOV X19, X9
	0x01D72828 B 0x1D72854
	0x01D7282C MOVZ W0, 0x8
	0x01D72830 BL 0x3EB1AF0
	0x01D72834 LDR X8, [X20]
	0x01D72838 STR X8, [X0]
	0x01D7283C ADRP X1, 0x2142000
	0x01D72840 ADD X1, X1, 0xE58
	0x01D72844 MOV X2, X31
	0x01D72848 BL 0x3EB1B00
	0x01D7284C MOV X19, X0
	0x01D72850 BL 0x3EB1AE0
	0x01D72854 MOV X0, X19
	0x01D72858 BL 0x1D2C690
	0x01D7285C BL 0x1990590
	0x01D72860 STR X30, [X31 - 0x30]!
	0x01D72864 STP X22, X21, [X31 + 0x10]
	0x01D72868 STP X20, X19, [X31 + 0x20]
	0x01D7286C ADRP X22, 0x2666000
	0x01D72870 ADRP X21, 0x2383000
	0x01D72874 LDRB W8, [X22 + 0x8FE]
	0x01D72878 LDR X21, [X21 + 0xBA0]
	0x01D7287C MOV X19, X1
	0x01D72880 MOV X20, X0
	0x01D72884 TBNZ X8, 0x0, 0x1D728A8
	0x01D72888 ADRP X0, 0x2383000
	0x01D7288C LDR X0, [X0 + 0xE48]
	0x01D72890 BL 0x1C16CF4
	0x01D72894 ADRP X0, 0x2383000
	0x01D72898 LDR X0, [X0 + 0xBA0]
	0x01D7289C BL 0x1C16CF4
	0x01D728A0 MOVZ W8, 0x1
	0x01D728A4 STRB W8, [X22 + 0x8FE]
	0x01D728A8 LDR X0, [X21]
	0x01D728AC ADRP X21, 0x2383000
	0x01D728B0 LDR W8, [X0 + 0xE0]
	0x01D728B4 LDR X21, [X21 + 0xE48]
	0x01D728B8 CBNZ W8, 0x1D728C0
	0x01D728BC BL 0x1C16DFC
	0x01D728C0 LDR X2, [X21]
	0x01D728C4 ADD X0, X20, 0x8
	0x01D728C8 MOV X1, X19
	0x01D728CC LDP X20, X19, [X31 + 0x20]
	0x01D728D0 LDP X22, X21, [X31 + 0x10]
	0x01D728D4 LDR X30, [X31], #0x30
	0x01D728D8 B 0x2632228
	0x01D728DC SUB X31, X31, 0x170
	0x01D728E0 STP X29, X30, [X31 + 0x110]
	0x01D728E4 STP X28, X27, [X31 + 0x120]
	0x01D728E8 STP X26, X25, [X31 + 0x130]
	0x01D728EC STP X24, X23, [X31 + 0x140]
	0x01D728F0 STP X22, X21, [X31 + 0x150]
	0x01D728F4 STP X20, X19, [X31 + 0x160]
	0x01D728F8 ADRP X20, 0x2666000
	0x01D728FC LDRB W8, [X20 + 0x8FF]
	0x01D72900 MOV X19, X0
	0x01D72904 TBNZ X8, 0x0, 0x1D72A54
	0x01D72908 ADRP X0, 0x2381000
	0x01D7290C LDR X0, [X0 + 0x658]
	0x01D72910 BL 0x1C16CF4
	0x01D72914 ADRP X0, 0x2383000
	0x01D72918 LDR X0, [X0 + 0xE50]
	0x01D7291C BL 0x1C16CF4
	0x01D72920 ADRP X0, 0x2383000
	0x01D72924 LDR X0, [X0 + 0xE58]
	0x01D72928 BL 0x1C16CF4
	0x01D7292C ADRP X0, 0x2383000
	0x01D72930 LDR X0, [X0 + 0xAD0]
	0x01D72934 BL 0x1C16CF4
	0x01D72938 ADRP X0, 0x2383000
	0x01D7293C LDR X0, [X0 + 0xD70]
	0x01D72940 BL 0x1C16CF4
	0x01D72944 ADRP X0, 0x2383000
	0x01D72948 LDR X0, [X0 + 0xE00]
	0x01D7294C BL 0x1C16CF4
	0x01D72950 ADRP X0, 0x2383000
	0x01D72954 LDR X0, [X0 + 0xA18]
	0x01D72958 BL 0x1C16CF4
	0x01D7295C ADRP X0, 0x2381000
	0x01D72960 LDR X0, [X0 + 0xE00]
	0x01D72964 BL 0x1C16CF4
	0x01D72968 ADRP X0, 0x2383000
	0x01D7296C LDR X0, [X0 + 0xD78]
	0x01D72970 BL 0x1C16CF4
	0x01D72974 ADRP X0, 0x2383000
	0x01D72978 LDR X0, [X0 + 0xD80]
	0x01D7297C BL 0x1C16CF4
	0x01D72980 ADRP X0, 0x2381000
	0x01D72984 LDR X0, [X0 + 0xE18]
	0x01D72988 BL 0x1C16CF4
	0x01D7298C ADRP X0, 0x2383000
	0x01D72990 LDR X0, [X0 + 0xE60]
	0x01D72994 BL 0x1C16CF4
	0x01D72998 ADRP X0, 0x2383000
	0x01D7299C LDR X0, [X0 + 0xE68]
	0x01D729A0 BL 0x1C16CF4
	0x01D729A4 ADRP X0, 0x2382000
	0x01D729A8 LDR X0, [X0 + 0x1B8]
	0x01D729AC BL 0x1C16CF4
	0x01D729B0 ADRP X0, 0x2383000
	0x01D729B4 LDR X0, [X0 + 0xE70]
	0x01D729B8 BL 0x1C16CF4
	0x01D729BC ADRP X0, 0x2383000
	0x01D729C0 LDR X0, [X0 + 0xE78]
	0x01D729C4 BL 0x1C16CF4
	0x01D729C8 ADRP X0, 0x2383000
	0x01D729CC LDR X0, [X0 + 0xE80]
	0x01D729D0 BL 0x1C16CF4
	0x01D729D4 ADRP X0, 0x2382000
	0x01D729D8 LDR X0, [X0 + 0x1C0]
	0x01D729DC BL 0x1C16CF4
	0x01D729E0 ADRP X0, 0x2383000
	0x01D729E4 LDR X0, [X0 + 0xE88]
	0x01D729E8 BL 0x1C16CF4
	0x01D729EC ADRP X0, 0x2382000
	0x01D729F0 LDR X0, [X0 + 0x1D0]
	0x01D729F4 BL 0x1C16CF4
	0x01D729F8 ADRP X0, 0x2383000
	0x01D729FC LDR X0, [X0 + 0xE08]
	0x01D72A00 BL 0x1C16CF4
	0x01D72A04 ADRP X0, 0x2383000
	0x01D72A08 LDR X0, [X0 + 0xE10]
	0x01D72A0C BL 0x1C16CF4
	0x01D72A10 ADRP X0, 0x2383000
	0x01D72A14 LDR X0, [X0 + 0xE18]
	0x01D72A18 BL 0x1C16CF4
	0x01D72A1C ADRP X0, 0x2383000
	0x01D72A20 LDR X0, [X0 + 0xE20]
	0x01D72A24 BL 0x1C16CF4
	0x01D72A28 ADRP X0, 0x2383000
	0x01D72A2C LDR X0, [X0 + 0xE28]
	0x01D72A30 BL 0x1C16CF4
	0x01D72A34 ADRP X0, 0x2383000
	0x01D72A38 LDR X0, [X0 + 0xE90]
	0x01D72A3C BL 0x1C16CF4
	0x01D72A40 ADRP X0, 0x2383000
	0x01D72A44 LDR X0, [X0 + 0x4B0]
	0x01D72A48 BL 0x1C16CF4
	0x01D72A4C MOVZ W8, 0x1
	0x01D72A50 STRB W8, [X20 + 0x8FF]
	0x01D72A54 STR X31, [X31 + 0x68]
	0x01D72A58 LDR W9, [X19]
	0x01D72A5C CBZ W9, 0x1D72BAC
	0x01D72A60 LDR X8, [X19 + 0x20]
	0x01D72A64 CBZ X8, 0x1D731A0
	0x01D72A68 STR W9, [X31 + 0x14]
	0x01D72A6C ADRP X9, 0x2383000
	0x01D72A70 LDR X9, [X9 + 0xE08]
	0x01D72A74 LDR W1, [X8 + 0x18]
	0x01D72A78 LDR X0, [X9]
	0x01D72A7C BL 0x1C16D6C
	0x01D72A80 LDR X8, [X19 + 0x20]
	0x01D72A84 CBZ X8, 0x1D72B44
	0x01D72A88 ADRP X26, 0x2383000
	0x01D72A8C ADRP X27, 0x2383000
	0x01D72A90 ADRP X28, 0x2383000
	0x01D72A94 ADRP X22, 0x2381000
	0x01D72A98 ADRP X25, 0x2383000
	0x01D72A9C ADRP X24, 0x2383000
	0x01D72AA0 LDR X26, [X26 + 0xE10]
	0x01D72AA4 LDR X27, [X27 + 0xE90]
	0x01D72AA8 LDR X28, [X28 + 0x4B0]
	0x01D72AAC LDR X22, [X22 + 0x658]
	0x01D72AB0 LDR X25, [X25 + 0xA18]
	0x01D72AB4 LDR X24, [X24 + 0xE28]
	0x01D72AB8 MOV X20, X0
	0x01D72ABC MOVZ W29, 0x4
	0x01D72AC0 LDRSW X8, [X8 + 0x18]
	0x01D72AC4 SUB X23, X29, 0x4
	0x01D72AC8 CMP X23, X8
	0x01D72ACC B.GE 0x1D72B48
	0x01D72AD0 LDR X0, [X26]
	0x01D72AD4 BL 0x1C16F10
	0x01D72AD8 MOV X21, X0
	0x01D72ADC MOV X1, X31
	0x01D72AE0 BL 0x3484838
	0x01D72AE4 CBZ X21, 0x1D73184
	0x01D72AE8 LDR X9, [X27]
	0x01D72AEC LDR X8, [X28]
	0x01D72AF0 STP X9, X8, [X21 + 0x10]
	0x01D72AF4 LDR X8, [X19 + 0x20]
	0x01D72AF8 CBZ X8, 0x1D73178
	0x01D72AFC LDR W9, [X8 + 0x18]
	0x01D72B00 CMP X23, X9
	0x01D72B04 B.CS 0x1D73180
	0x01D72B08 LDR X8, [X8, X29, LSL #3]
	0x01D72B0C STR X8, [X21 + 0x28]
	0x01D72B10 CBZ X20, 0x1D7317C
	0x01D72B14 LDR X8, [X20]
	0x01D72B18 LDR X1, [X8 + 0x40]
	0x01D72B1C MOV X0, X21
	0x01D72B20 BL 0x1C16E00
	0x01D72B24 CBZ X0, 0x1D7316C
	0x01D72B28 LDR W8, [X20 + 0x18]
	0x01D72B2C CMP X23, X8
	0x01D72B30 B.CS 0x1D73188
	0x01D72B34 STR X21, [X20, X29, LSL #3]
	0x01D72B38 LDR X8, [X19 + 0x20]
	0x01D72B3C ADD X29, X29, 0x1
	0x01D72B40 CBNZ X8, 0x1D72AC0
	0x01D72B44 BL 0x1C16F20
	0x01D72B48 LDR X0, [X22]
	0x01D72B4C LDR W8, [X0 + 0xE0]
	0x01D72B50 CBNZ W8, 0x1D72B5C
	0x01D72B54 BL 0x1C16DFC
	0x01D72B58 LDR X0, [X22]
	0x01D72B5C LDR X8, [X0 + 0xB8]
	0x01D72B60 LDR X21, [X8 + 0x10]
	0x01D72B64 CBZ X21, 0x1D731A4
	0x01D72B68 LDR X8, [X21]
	0x01D72B6C LDR X22, [X19 + 0x28]
	0x01D72B70 LDR X1, [X25]
	0x01D72B74 LDRH W9, [X8 + 0x12E]
	0x01D72B78 CBZ X9, 0x1D72B9C
	0x01D72B7C LDR X10, [X8 + 0xB0]
	0x01D72B80 ADD X10, X10, 0x8
	0x01D72B84 LDUR X11, [X10 - 0x8]
	0x01D72B88 CMP X11, X1
	0x01D72B8C B.EQ 0x1D72BCC
	0x01D72B90 SUBS X9, X9, 0x1
	0x01D72B94 ADD X10, X10, 0x10
	0x01D72B98 B.NE 0x1D72B84
	0x01D72B9C MOVZ W2, 0x47
	0x01D72BA0 MOV X0, X21
	0x01D72BA4 BL 0x1C5C788
	0x01D72BA8 B 0x1D72BDC
	0x01D72BAC LDR X8, [X19 + 0x30]
	0x01D72BB0 MOVN W9, 0x0
	0x01D72BB4 STR X8, [X31 + 0x68]
	0x01D72BB8 MOVN W8, 0x0
	0x01D72BBC STR X31, [X19 + 0x30]
	0x01D72BC0 STR W8, [X31 + 0x14]
	0x01D72BC4 STR W9, [X19]
	0x01D72BC8 B 0x1D72C20
	0x01D72BCC LDR W9, [X10]
	0x01D72BD0 ADD W9, W9, 0x47
	0x01D72BD4 ADD X8, X8, W9, 0x4, SXTW
	0x01D72BD8 ADD X0, X8, 0x138
	0x01D72BDC LDP X8, X5, [X0]
	0x01D72BE0 MOV X0, X21
	0x01D72BE4 MOV X1, X22
	0x01D72BE8 MOV X2, X20
	0x01D72BEC MOV X3, X31
	0x01D72BF0 MOV X4, X31
	0x01D72BF4 BLR X8
	0x01D72BF8 CBZ X0, 0x1D731A8
	0x01D72BFC LDR X1, [X24]
	0x01D72C00 BL 0x269F5D0
	0x01D72C04 ADRP X8, 0x2383000
	0x01D72C08 LDR X8, [X8 + 0xE20]
	0x01D72C0C STR X0, [X31 + 0x68]
	0x01D72C10 LDR X1, [X8]
	0x01D72C14 ADD X0, X31, 0x68
	0x01D72C18 BL 0x2677430
	0x01D72C1C TBZ X0, 0x0, 0x1D72CCC
	0x01D72C20 ADRP X8, 0x2383000
	0x01D72C24 LDR X8, [X8 + 0xE18]
	0x01D72C28 ADD X0, X31, 0x68
	0x01D72C2C LDR X1, [X8]
	0x01D72C30 BL 0x2677474
	0x01D72C34 ADRP X8, 0x2382000
	0x01D72C38 LDR X8, [X8 + 0x1D0]
	0x01D72C3C MOV X22, X0
	0x01D72C40 LDR X0, [X8]
	0x01D72C44 BL 0x1C16F10
	0x01D72C48 ADRP X8, 0x2382000
	0x01D72C4C LDR X8, [X8 + 0x1C0]
	0x01D72C50 MOV X20, X0
	0x01D72C54 LDR X1, [X8]
	0x01D72C58 BL 0x301B7C4
	0x01D72C5C ADRP X8, 0x2383000
	0x01D72C60 LDR X8, [X8 + 0xE88]
	0x01D72C64 LDR X0, [X8]
	0x01D72C68 BL 0x1C16F10
	0x01D72C6C ADRP X8, 0x2383000
	0x01D72C70 LDR X8, [X8 + 0xE80]
	0x01D72C74 MOV X21, X0
	0x01D72C78 LDR X1, [X8]
	0x01D72C7C BL 0x2F55650
	0x01D72C80 CBZ X22, 0x1D7318C
	0x01D72C84 ADRP X10, 0x2383000
	0x01D72C88 LDR X8, [X22]
	0x01D72C8C LDR X10, [X10 + 0xE00]
	0x01D72C90 LDRH W9, [X8 + 0x12E]
	0x01D72C94 LDR X1, [X10]
	0x01D72C98 CBZ X9, 0x1D72CBC
	0x01D72C9C LDR X10, [X8 + 0xB0]
	0x01D72CA0 ADD X10, X10, 0x8
	0x01D72CA4 LDUR X11, [X10 - 0x8]
	0x01D72CA8 CMP X11, X1
	0x01D72CAC B.EQ 0x1D72D10
	0x01D72CB0 SUBS X9, X9, 0x1
	0x01D72CB4 ADD X10, X10, 0x10
	0x01D72CB8 B.NE 0x1D72CA4
	0x01D72CBC MOV X0, X22
	0x01D72CC0 MOV W2, W31
	0x01D72CC4 BL 0x1C5C788
	0x01D72CC8 B 0x1D72D1C
	0x01D72CCC STR W31, [X19]
	0x01D72CD0 LDR X8, [X31 + 0x68]
	0x01D72CD4 STR X8, [X19 + 0x30]
	0x01D72CD8 ADRP X8, 0x2383000
	0x01D72CDC LDR X8, [X8 + 0xAD0]
	0x01D72CE0 LDR X0, [X8]
	0x01D72CE4 LDR W8, [X0 + 0xE0]
	0x01D72CE8 CBNZ W8, 0x1D72CF0
	0x01D72CEC BL 0x1C16DFC
	0x01D72CF0 ADRP X8, 0x2383000
	0x01D72CF4 LDR X8, [X8 + 0xE50]
	0x01D72CF8 ADD X0, X19, 0x8
	0x01D72CFC LDR X3, [X8]
	0x01D72D00 ADD X1, X31, 0x68
	0x01D72D04 MOV X2, X19
	0x01D72D08 BL 0x212BB70
	0x01D72D0C B 0x1D73138
	0x01D72D10 LDRSW X9, [X10]
	0x01D72D14 ADD X8, X8, X9, 0x4, LSL
	0x01D72D18 ADD X0, X8, 0x138
	0x01D72D1C LDP X8, X1, [X0]
	0x01D72D20 MOV X0, X22
	0x01D72D24 BLR X8
	0x01D72D28 MOV X22, X0
	0x01D72D2C CBZ X0, 0x1D73190
	0x01D72D30 ADRP X10, 0x2383000
	0x01D72D34 LDR X8, [X22]
	0x01D72D38 LDR X10, [X10 + 0xD78]
	0x01D72D3C LDRH W9, [X8 + 0x12E]
	0x01D72D40 LDR X1, [X10]
	0x01D72D44 CBZ X9, 0x1D72D68
	0x01D72D48 LDR X10, [X8 + 0xB0]
	0x01D72D4C ADD X10, X10, 0x8
	0x01D72D50 LDUR X11, [X10 - 0x8]
	0x01D72D54 CMP X11, X1
	0x01D72D58 B.EQ 0x1D72D78
	0x01D72D5C SUBS X9, X9, 0x1
	0x01D72D60 ADD X10, X10, 0x10
	0x01D72D64 B.NE 0x1D72D50
	0x01D72D68 MOV X0, X22
	0x01D72D6C MOV W2, W31
	0x01D72D70 BL 0x1C5C788
	0x01D72D74 B 0x1D72D84
	0x01D72D78 LDRSW X9, [X10]
	0x01D72D7C ADD X8, X8, X9, 0x4, LSL
	0x01D72D80 ADD X0, X8, 0x138
	0x01D72D84 LDP X8, X1, [X0]
	0x01D72D88 MOV X0, X22
	0x01D72D8C BLR X8
	0x01D72D90 MOV X22, X0
	0x01D72D94 CBZ X0, 0x1D73194
	0x01D72D98 ADRP X24, 0x2381000
	0x01D72D9C ADRP X25, 0x2383000
	0x01D72DA0 ADRP X27, 0x2383000
	0x01D72DA4 ADRP X28, 0x2382000
	0x01D72DA8 ADRP X29, 0x2383000
	0x01D72DAC ADRP X26, 0x2383000

ISIL:
	001 Subtract X31, X31, 336
	002 Move [X31+240], X29
	003 Move [X31+248], X30
	004 Move [X31+256], X28
	005 Move [X31+264], X27
	006 Move [X31+272], X26
	007 Move [X31+280], X25
	008 Move [X31+288], X24
	009 Move [X31+296], X23
	010 Move [X31+304], X22
	011 Move [X31+312], X21
	012 Move [X31+320], X20
	013 Move [X31+328], X19
	014 Move X20, 0x2667000
	015 Move W8, [X20+2299]
	016 Move [X31+24], X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {83}
	021 Move X0, 0x2382000
	022 Move X0, [X0+1624]
	023 Call 0x1C17CF4
	024 Move X0, 0x2384000
	025 Move X0, [X0+3416]
	026 Call 0x1C17CF4
	027 Move X0, 0x2384000
	028 Move X0, [X0+3424]
	029 Call 0x1C17CF4
	030 Move X0, 0x2384000
	031 Move X0, [X0+2944]
	032 Call 0x1C17CF4
	033 Move X0, 0x2384000
	034 Move X0, [X0+3432]
	035 Call 0x1C17CF4
	036 Move X0, 0x2384000
	037 Move X0, [X0+3440]
	038 Call 0x1C17CF4
	039 Move X0, 0x2384000
	040 Move X0, [X0+2584]
	041 Call 0x1C17CF4
	042 Move X0, 0x2382000
	043 Move X0, [X0+3584]
	044 Call 0x1C17CF4
	045 Move X0, 0x2384000
	046 Move X0, [X0+3448]
	047 Call 0x1C17CF4
	048 Move X0, 0x2384000
	049 Move X0, [X0+3456]
	050 Call 0x1C17CF4
	051 Move X0, 0x2382000
	052 Move X0, [X0+3608]
	053 Call 0x1C17CF4
	054 Move X0, 0x2384000
	055 Move X0, [X0+3464]
	056 Call 0x1C17CF4
	057 Move X0, 0x2384000
	058 Move X0, [X0+3472]
	059 Call 0x1C17CF4
	060 Move X0, 0x2384000
	061 Move X0, [X0+3480]
	062 Call 0x1C17CF4
	063 Move X0, 0x2384000
	064 Move X0, [X0+3488]
	065 Call 0x1C17CF4
	066 Move X0, 0x2384000
	067 Move X0, [X0+3496]
	068 Call 0x1C17CF4
	069 Move X0, 0x2384000
	070 Move X0, [X0+3504]
	071 Call 0x1C17CF4
	072 Move X0, 0x2384000
	073 Move X0, [X0+3512]
	074 Call 0x1C17CF4
	075 Move X0, 0x2384000
	076 Move X0, [X0+3520]
	077 Call 0x1C17CF4
	078 Move X0, 0x2384000
	079 Move X0, [X0+3528]
	080 Call 0x1C17CF4
	081 Move W8, 1
	082 Move [X20+2299], W8
	083 Move X10, [X31+24]
	084 Move [X31+136], X31
	085 Move W8, [X10]
	086 Move [X31+20], W8
	087 Compare W8, 0
	088 JumpIfEqual {101}
	089 Move X8, 0x2384000
	090 Move X8, [X8+3496]
	091 Move X0, [X8]
	092 Call 0x1C17F10
	093 Move X8, 0x2384000
	094 Move X8, [X8+3488]
	095 Move X21, X0
	096 Move X1, [X8]
	097 Call List`1<ApiAvatarItem>..ctor, X0
	098 Move X8, [X31+24]
	099 Move X20, X31
	100 Move [X8+40], X21
	101 Move X8, [X10+48]
	102 Move TEMP, 0
	103 Not TEMP
	104 Move W9, TEMP
	105 Move [X31+136], X8
	106 Move TEMP, 0
	107 Not TEMP
	108 Move W8, TEMP
	109 Move [X10+48], X31
	110 Move [X31+20], W8
	111 Move [X10], W9
	112 Move X21, 0x2382000
	113 Move X21, [X21+1624]
	114 Move X0, [X21]
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfNotEqual {120}
	118 Call 0x1C17DFC
	119 Move X0, [X21]
	120 Move X8, [X0+184]
	121 Move X21, [X8+16]
	122 Compare X21, 0
	123 JumpIfEqual {392}
	124 Move X9, 0x2384000
	125 Move X10, 0x2384000
	126 Move X9, [X9+2584]
	127 Move X8, [X21]
	128 Move X10, [X10+3528]
	129 Move X11, [X31+24]
	130 Move X1, [X9]
	131 NotImplemented "Instruction LDRH not yet implemented."
	132 Move X23, [X10]
	133 Move X22, [X11+32]
	134 Compare X9, 0
	135 JumpIfEqual {142}
	136 Move X10, [X8+176]
	137 Add X10, X10, 8
	138 NotImplemented "Instruction LDUR not yet implemented."
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Subtract X9, X9, 1
	141 Add X10, X10, 16
	142 Move W2, 62
	143 Move X0, X21
	144 Call 0x1C5D788
	145 Move W9, [X10]
	146 Add W9, W9, 62
	147 Add X8, X8, W9
	148 Add X0, X8, 312
	149 Move X8, [X0]
	150 Move X7, [X0+8]
	151 Move W3, 50
	152 Move X0, X21
	153 Move X1, X22
	154 Move X2, X23
	155 Move X4, X20
	156 Move X5, X31
	157 Move X6, X31
	158 NotImplemented "Instruction BLR not yet implemented."
	159 Compare X0, 0
	160 JumpIfEqual {397}
	161 Move X8, 0x2384000
	162 Move X8, [X8+3520]
	163 Move X1, [X8]
	164 Call Task`1<Object>.GetAwaiter, X0
	165 Move X8, 0x2384000
	166 Move X8, [X8+3512]
	167 Move [X31+136], X0
	168 Move X1, [X8]
	169 Add X0, X31, 136
	170 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	171 Move TEMP, X0
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfNotEqual {374}
	175 Move X8, 0x2384000
	176 Move X8, [X8+3504]
	177 Add X0, X31, 136
	178 Move X1, [X8]
	179 Call TaskAwaiter`1<Object>.GetResult, X0
	180 Move X10, 0x2384000
	181 Move X10, [X10+3432]
	182 Move X20, X0
	183 Compare X0, 0
	184 JumpIfEqual {393}
	185 Move X8, [X20]
	186 Move X1, [X10]
	187 Move X19, X10
	188 NotImplemented "Instruction LDRH not yet implemented."
	189 Compare X9, 0
	190 JumpIfEqual {197}
	191 Move X10, [X8+176]
	192 Add X10, X10, 8
	193 NotImplemented "Instruction LDUR not yet implemented."
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Subtract X9, X9, 1
	196 Add X10, X10, 16
	197 Move W2, 1
	198 Move X0, X20
	199 Call 0x1C5D788
	200 Move W9, [X10]
	201 Add W9, W9, 1
	202 Add X8, X8, W9
	203 Add X0, X8, 312
	204 Move X8, [X0]
	205 Move X1, [X0+8]
	206 Move X0, X20
	207 NotImplemented "Instruction BLR not yet implemented."
	208 Move X21, X0
	209 Compare X0, 0
	210 JumpIfEqual {395}
	211 Move X10, 0x2384000
	212 Move X8, [X21]
	213 Move X10, [X10+3448]
	214 NotImplemented "Instruction LDRH not yet implemented."
	215 Move X1, [X10]
	216 Compare X9, 0
	217 JumpIfEqual {224}
	218 Move X10, [X8+176]
	219 Add X10, X10, 8
	220 NotImplemented "Instruction LDUR not yet implemented."
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Subtract X9, X9, 1
	223 Add X10, X10, 16
	224 Move X0, X21
	225 Move W2, W31
	226 Call 0x1C5D788
	227 NotImplemented "Instruction LDRSW not yet implemented."
	228 Add X8, X8, X9
	229 Add X0, X8, 312
	230 Move X8, [X0]
	231 Move X1, [X0+8]
	232 Move X0, X21
	233 NotImplemented "Instruction BLR not yet implemented."
	234 Move X21, X0
	235 Compare X0, 0
	236 JumpIfEqual {396}
	237 Move X24, 0x2382000
	238 Move X28, 0x2384000
	239 Move X29, 0x2384000
	240 Move X25, 0x2384000
	241 Move X27, 0x2384000
	242 Move X24, [X24+3608]
	243 Move X28, [X28+3456]
	244 Move X29, [X29+3440]
	245 Move X25, [X25+3464]
	246 Move X27, [X27+3472]
	247 Move W26, 48
	248 Move X8, [X21]
	249 Move X1, [X24]
	250 NotImplemented "Instruction LDRH not yet implemented."
	251 Compare X9, 0
	252 JumpIfEqual {259}
	253 Move X10, [X8+176]
	254 Add X10, X10, 8
	255 NotImplemented "Instruction LDUR not yet implemented."
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Subtract X9, X9, 1
	258 Add X10, X10, 16
	259 Move X0, X21
	260 Move W2, W31
	261 Call 0x1C5D788
	262 NotImplemented "Instruction LDRSW not yet implemented."
	263 Add X8, X8, X9
	264 Add X0, X8, 312
	265 Move X8, [X0]
	266 Move X1, [X0+8]
	267 Move X0, X21
	268 NotImplemented "Instruction BLR not yet implemented."
	269 Move TEMP, X0
	270 And TEMP, TEMP, 1
	271 Compare TEMP, 1
	272 JumpIfNotEqual {370}
	273 Move X8, [X21]
	274 Move X1, [X28]
	275 NotImplemented "Instruction LDRH not yet implemented."
	276 Compare X9, 0
	277 JumpIfEqual {284}
	278 Move X10, [X8+176]
	279 Add X10, X10, 8
	280 NotImplemented "Instruction LDUR not yet implemented."
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Subtract X9, X9, 1
	283 Add X10, X10, 16
	284 Move X0, X21
	285 Move W2, W31
	286 Call 0x1C5D788
	287 NotImplemented "Instruction LDRSW not yet implemented."
	288 Add X8, X8, X9
	289 Add X0, X8, 312
	290 Move X8, [X0]
	291 Move X1, [X0+8]
	292 Move X0, X21
	293 NotImplemented "Instruction BLR not yet implemented."
	294 Move X23, X0
	295 Compare X0, 0
	296 JumpIfEqual {371}
	297 Move X8, [X23]
	298 Move X9, [X31+24]
	299 Move X1, [X29]
	300 Move X22, [X9+40]
	301 NotImplemented "Instruction LDRH not yet implemented."
	302 Compare X9, 0
	303 JumpIfEqual {310}
	304 Move X10, [X8+176]
	305 Add X10, X10, 8
	306 NotImplemented "Instruction LDUR not yet implemented."
	307 NotImplemented "Instruction CMP not yet implemented."
	308 Subtract X9, X9, 1
	309 Add X10, X10, 16
	310 Move W2, 7
	311 Move X0, X23
	312 Call 0x1C5D788
	313 Move W9, [X10]
	314 Add W9, W9, 7
	315 Add X8, X8, W9
	316 Add X0, X8, 312
	317 Move X8, [X0]
	318 Move X1, [X0+8]
	319 Move X0, X23
	320 NotImplemented "Instruction BLR not yet implemented."
	321 Move X1, [X25]
	322 Add X8, X31, 32
	323 Call 0x220ECD0, X0
	324 Move V0, [X31+32]
	325 Move V1, [X31+48]
	326 Move V2, [X31+4]
	327 Move [X31+80], V0
	328 Move [X31+88], V1
	329 Move [X31+7], V2
	330 Compare X22, 0
	331 JumpIfEqual {372}
	332 Move V0, [X31+80]
	333 Move V1, [X31+96]
	334 Move V2, [X31+7]
	335 Move X10, [X27]
	336 Move [X31+144], V0
	337 Move [X31+152], V1
	338 Move [X31+11], V2
	339 Move W9, [X22+28]
	340 Move X8, [X22+16]
	341 Add W9, W9, 1
	342 Move [X22+28], W9
	343 Compare X8, 0
	344 JumpIfEqual {373}
	345 NotImplemented "Instruction LDRSW not yet implemented."
	346 Move W11, [X8+24]
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Add W10, W9, 1
	349 Move [X22+24], W10
	350 Move V1, [X31+160]
	351 Move V0, [X31+176]
	352 Move V2, [X31+9]
	353 NotImplemented "Instruction NOP not yet implemented."
	354 NotImplemented "Instruction MADD not yet implemented."
	355 Move [X8+48], V1
	356 Move [X8+56], V0
	357 Move [X8+2], V2
	358 Move X8, [X10+32]
	359 Move V0, [X31+144]
	360 Move V1, [X31+160]
	361 Move V2, [X31+11]
	362 Move X8, [X8+192]
	363 Move X2, [X8+112]
	364 Move [X31+192], V0
	365 Move [X31+200], V1
	366 Move [X31+14], V2
	367 Add X1, X31, 192
	368 Move X0, X22
	369 Call List`1<ApiAvatarItem>.AddWithResize, X0, X1
	370 Move X24, X31
	371 Call 0x1C17F20
	372 Call 0x1C17F20
	373 Call 0x1C17F20
	374 Move X19, [X31+24]
	375 Move [X19], W31
	376 Move X8, [X31+136]
	377 Move [X19+48], X8
	378 Move X8, 0x2384000
	379 Move X8, [X8+2944]
	380 Move X0, [X8]
	381 Move W8, [X0+224]
	382 Compare W8, 0
	383 JumpIfNotEqual {385}
	384 Call 0x1C17DFC
	385 Move X8, 0x2384000
	386 Move X8, [X8+3416]
	387 Add X0, X19, 8
	388 Move X3, [X8]
	389 Add X1, X31, 136
	390 Move X2, X19
	391 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	392 Call 0x1C17F20
	393 Move X19, X10
	394 Call 0x1C17F20
	395 Call 0x1C17F20
	396 Call 0x1C17F20
	397 Call 0x1C17F20
	398 Move X22, X1
	399 Move X23, X0
	400 NotImplemented "Instruction CMP not yet implemented."
	401 Move X0, X23
	402 Call 0x3EB2AD0
	403 Move X24, [X0]
	404 Call 0x3EB2AE0
	405 Move W8, [X31+20]
	406 Move TEMP, X8
	407 And TEMP, TEMP, -2147483648
	408 Compare TEMP, -2147483648
	409 JumpIfNotEqual {459}
	410 Compare X21, 0
	411 JumpIfEqual {459}
	412 Move X8, [X21]
	413 Move X10, 0x2382000
	414 NotImplemented "Instruction LDRH not yet implemented."
	415 Move X10, [X10+3584]
	416 Move X1, [X10]
	417 Compare X9, 0
	418 JumpIfEqual {425}
	419 Move X10, [X8+176]
	420 Add X10, X10, 8
	421 NotImplemented "Instruction LDUR not yet implemented."
	422 NotImplemented "Instruction CMP not yet implemented."
	423 Subtract X9, X9, 1
	424 Add X10, X10, 16
	425 Move X0, X21
	426 Move W2, W31
	427 Call 0x1C5D788
	428 Move X24, X31
	429 Move W8, [X31+20]
	430 Move TEMP, X8
	431 And TEMP, TEMP, -2147483648
	432 Compare TEMP, -2147483648
	433 JumpIfNotEqual {470}
	434 Compare X21, 0
	435 JumpIfEqual {470}
	436 Move X8, [X21]
	437 Move X10, 0x2382000
	438 NotImplemented "Instruction LDRH not yet implemented."
	439 Move X10, [X10+3584]
	440 Move X1, [X10]
	441 Compare X9, 0
	442 JumpIfEqual {449}
	443 Move X10, [X8+176]
	444 Add X10, X10, 8
	445 NotImplemented "Instruction LDUR not yet implemented."
	446 NotImplemented "Instruction CMP not yet implemented."
	447 Subtract X9, X9, 1
	448 Add X10, X10, 16
	449 Move X0, X21
	450 Move W2, W31
	451 Call 0x1C5D788
	452 NotImplemented "Instruction LDRSW not yet implemented."
	453 Add X8, X8, X9
	454 Add X0, X8, 312
	455 Move X8, [X0]
	456 Move X1, [X0+8]
	457 Move X0, X21
	458 NotImplemented "Instruction BLR not yet implemented."
	459 Compare X24, 0
	460 JumpIfEqual {515}
	461 Move X0, X24
	462 Call 0x1C17F18
	463 NotImplemented "Instruction LDRSW not yet implemented."
	464 Add X8, X8, X9
	465 Add X0, X8, 312
	466 Move X8, [X0]
	467 Move X1, [X0+8]
	468 Move X0, X21
	469 NotImplemented "Instruction BLR not yet implemented."
	470 Compare X24, 0
	471 JumpIfNotEqual {592}
	472 NotImplemented "Instruction CMP not yet implemented."
	473 Move X0, X23
	474 Call 0x3EB2AD0
	475 Move X21, X0
	476 Move X0, 0x2382000
	477 Move X0, [X0+2000]
	478 Call 0x1C17D08
	479 Move X8, [X21]
	480 Move X1, [X8]
	481 Call 0x1C18270
	482 Move TEMP, X0
	483 And TEMP, TEMP, 1
	484 Compare TEMP, 1
	485 JumpIfNotEqual {594}
	486 Move X21, [X21]
	487 Call 0x3EB2AE0
	488 Move X0, 0x2382000
	489 Move X0, [X0+1928]
	490 Call 0x1C17D08
	491 Move W8, [X0+224]
	492 Compare W8, 0
	493 JumpIfNotEqual {495}
	494 Call 0x1C17DFC
	495 Move X0, 0x2384000
	496 Move X0, [X0+3536]
	497 Call 0x1C17D08
	498 Move X22, X0
	499 Move X0, 0x2384000
	500 Move X0, [X0+2680]
	501 Call 0x1C17D08
	502 Move X23, X0
	503 Move X0, 0x2384000
	504 Move X0, [X0+3544]
	505 Call 0x1C17D08
	506 Move X5, X0
	507 Move W0, 64
	508 Move W6, 440
	509 Move X1, X22
	510 Move X2, X21
	511 Move X3, X31
	512 Move X4, X23
	513 Move X7, X31
	514 Call Log.Error, X0, X1, X2, X3, X4, X5, X6
	515 Compare X20, 0
	516 JumpIfEqual {591}
	517 Move X8, [X20]
	518 Move X1, [X19]
	519 NotImplemented "Instruction LDRH not yet implemented."
	520 Compare X9, 0
	521 JumpIfEqual {528}
	522 Move X10, [X8+176]
	523 Add X10, X10, 8
	524 NotImplemented "Instruction LDUR not yet implemented."
	525 NotImplemented "Instruction CMP not yet implemented."
	526 Subtract X9, X9, 1
	527 Add X10, X10, 16
	528 Move X0, X20
	529 Move W2, W31
	530 Call 0x1C5D788
	531 NotImplemented "Instruction LDRSW not yet implemented."
	532 Add X8, X8, X9
	533 Add X0, X8, 312
	534 Move X8, [X0]
	535 Move X1, [X0+8]
	536 Move X0, X20
	537 NotImplemented "Instruction BLR not yet implemented."
	538 Compare X0, 0
	539 JumpIfEqual {562}
	540 Move X8, [X20]
	541 Move X1, [X19]
	542 NotImplemented "Instruction LDRH not yet implemented."
	543 Compare X9, 0
	544 JumpIfEqual {551}
	545 Move X10, [X8+176]
	546 Add X10, X10, 8
	547 NotImplemented "Instruction LDUR not yet implemented."
	548 NotImplemented "Instruction CMP not yet implemented."
	549 Subtract X9, X9, 1
	550 Add X10, X10, 16
	551 Move X0, X20
	552 Move W2, W31
	553 Call 0x1C5D788
	554 NotImplemented "Instruction LDRSW not yet implemented."
	555 Add X8, X8, X9
	556 Add X0, X8, 312
	557 Move X8, [X0]
	558 Move X1, [X0+8]
	559 Move X0, X20
	560 NotImplemented "Instruction BLR not yet implemented."
	561 Move X20, X0
	562 Move X8, [X31+24]
	563 Move X0, [X8+40]
	564 Compare X0, 0
	565 JumpIfEqual {602}
	566 Move X8, 0x2384000
	567 Move X8, [X8+3480]
	568 Move X1, [X8]
	569 Call List`1<ApiAvatarItem>.ToArray, X0
	570 Move X9, [X31+24]
	571 Move TEMP, 1
	572 Not TEMP
	573 Move W8, TEMP
	574 Move X20, X0
	575 Move [X9+40], X31
	576 Move [X9], W8
	577 Move X8, 0x2384000
	578 Move X8, [X8+2944]
	579 Add X19, X9, 8
	580 Move X0, [X8]
	581 Move W8, [X0+224]
	582 Compare W8, 0
	583 JumpIfNotEqual {585}
	584 Call 0x1C17DFC
	585 Move X8, 0x2384000
	586 Move X8, [X8+3424]
	587 Move X0, X19
	588 Move X1, X20
	589 Move X2, [X8]
	590 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	591 Call 0x1C17F20
	592 Move X0, X24
	593 Call 0x1C17F18
	594 Move W0, 8
	595 Call 0x3EB2AF0
	596 Move X8, [X21]
	597 Move [X0], X8
	598 Move X1, 0x2143000
	599 Add X1, X1, 3672
	600 Move X2, X31
	601 Call 0x3EB2B00
	602 Call 0x1C17F20
	603 Move X22, X1
	604 Move X23, X0
	605 Move X22, X1
	606 Move X23, X0
	607 Move X22, X1
	608 Move X23, X0
	609 Call 0x3EB2AE0
	610 Move X22, X1
	611 Move X23, X0
	612 NotImplemented "Instruction CMP not yet implemented."
	613 Move X0, X23
	614 Call 0x3EB2AD0
	615 Move X20, X0
	616 Move X0, 0x2382000
	617 Move X0, [X0+2000]
	618 Call 0x1C17D08
	619 Move X8, [X20]
	620 Move X1, [X8]
	621 Call 0x1C18270
	622 Move TEMP, X0
	623 And TEMP, TEMP, 1
	624 Compare TEMP, 1
	625 JumpIfNotEqual {663}
	626 Move X20, [X20]
	627 Call 0x3EB2AE0
	628 Move X9, [X31+24]
	629 Move TEMP, 1
	630 Not TEMP
	631 Move W8, TEMP
	632 Move X0, 0x2384000
	633 Move [X9+40], X31
	634 Move [X9], W8
	635 Move X0, [X0+2944]
	636 Add X19, X9, 8
	637 Call 0x1C17D08
	638 Move W8, [X0+224]
	639 Compare W8, 0
	640 JumpIfNotEqual {642}
	641 Call 0x1C17DFC
	642 Move X0, 0x2384000
	643 Move X0, [X0+3552]
	644 Call 0x1C17D08
	645 Move X2, X0
	646 Move X0, X19
	647 Move X1, X20
	648 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	649 Move X20, [X31+320]
	650 Move X19, [X31+328]
	651 Move X22, [X31+304]
	652 Move X21, [X31+312]
	653 Move X24, [X31+288]
	654 Move X23, [X31+296]
	655 Move X26, [X31+272]
	656 Move X25, [X31+280]
	657 Move X28, [X31+256]
	658 Move X27, [X31+264]
	659 Move X29, [X31+240]
	660 Move X30, [X31+248]
	661 Add X31, X31, 336
	662 Return 
	663 Move W0, 8
	664 Call 0x3EB2AF0
	665 Move X8, [X20]
	666 Move [X0], X8
	667 Move X1, 0x2143000
	668 Add X1, X1, 3672
	669 Move X2, X31
	670 Call 0x3EB2B00
	671 Move X23, X0
	672 Call 0x3EB2AE0
	673 Move X0, X23
	674 Call 0x1D2D690
	675 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x01D72DB0 LDR X24, [X24 + 0xE18]
	0x01D72DB4 LDR X25, [X25 + 0xD80]
	0x01D72DB8 LDR X27, [X27 + 0xD70]
	0x01D72DBC LDR X28, [X28 + 0x1B8]
	0x01D72DC0 LDR X29, [X29 + 0xE60]
	0x01D72DC4 LDR X26, [X26 + 0xE68]
	0x01D72DC8 LDR X8, [X22]
	0x01D72DCC LDR X1, [X24]
	0x01D72DD0 LDRH W9, [X8 + 0x12E]
	0x01D72DD4 CBZ X9, 0x1D72DF8
	0x01D72DD8 LDR X10, [X8 + 0xB0]
	0x01D72DDC ADD X10, X10, 0x8
	0x01D72DE0 LDUR X11, [X10 - 0x8]
	0x01D72DE4 CMP X11, X1
	0x01D72DE8 B.EQ 0x1D72E08
	0x01D72DEC SUBS X9, X9, 0x1
	0x01D72DF0 ADD X10, X10, 0x10
	0x01D72DF4 B.NE 0x1D72DE0
	0x01D72DF8 MOV X0, X22
	0x01D72DFC MOV W2, W31
	0x01D72E00 BL 0x1C5C788
	0x01D72E04 B 0x1D72E14
	0x01D72E08 LDRSW X9, [X10]
	0x01D72E0C ADD X8, X8, X9, 0x4, LSL
	0x01D72E10 ADD X0, X8, 0x138
	0x01D72E14 LDP X8, X1, [X0]
	0x01D72E18 MOV X0, X22
	0x01D72E1C BLR X8
	0x01D72E20 TBZ X0, 0x0, 0x1D73040
	0x01D72E24 LDR X8, [X22]
	0x01D72E28 LDR X1, [X25]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2667000
	007 Move X21, 0x2384000
	008 Move W8, [X22+2300]
	009 Move X21, [X21+2944]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x2384000
	017 Move X0, [X0+3560]
	018 Call 0x1C17CF4
	019 Move X0, 0x2384000
	020 Move X0, [X0+2944]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2300], W8
	024 Move X0, [X21]
	025 Move X21, 0x2384000
	026 Move W8, [X0+224]
	027 Move X21, [X21+3560]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

