Type: AnimalCompany.API.AnimalCompanyAPI/<PurchaseAvatarItemsAsync>d__43

Method: System.Void MoveNext()

Disassembly:
	0x01D75908 BL 0x1C16CF4
	0x01D7590C ADRP X0, 0x2381000
	0x01D75910 LDR X0, [X0 + 0xF8]
	0x01D75914 BL 0x1C16CF4
	0x01D75918 ADRP X0, 0x2381000
	0x01D7591C LDR X0, [X0 + 0x100]
	0x01D75920 BL 0x1C16CF4
	0x01D75924 ADRP X0, 0x2381000
	0x01D75928 LDR X0, [X0 + 0x108]
	0x01D7592C BL 0x1C16CF4
	0x01D75930 ADRP X0, 0x2381000
	0x01D75934 LDR X0, [X0 + 0x110]
	0x01D75938 BL 0x1C16CF4
	0x01D7593C MOVZ W8, 0x1
	0x01D75940 STRB W8, [X20 + 0x90E]
	0x01D75944 SUB W8, W19, 0x1
	0x01D75948 CMP W8, 0xF
	0x01D7594C B.HI 0x1D75960
	0x01D75950 ADRP X9, 0x213F000
	0x01D75954 ADD X9, X9, 0xEA0
	0x01D75958 LDR X8, [X9, W8, SXTW]
	0x01D7595C B 0x1D75968
	0x01D75960 ADRP X8, 0x237F000
	0x01D75964 LDR X8, [X8 + 0xF60]
	0x01D75968 LDR X0, [X8]
	0x01D7596C LDP X20, X19, [X31 + 0x10]
	0x01D75970 LDR X30, [X31], #0x20
	0x01D75974 RET
	0x01D75978 CMP W0, 0x3
	0x01D7597C CSET W0, HI
	0x01D75980 RET
	0x01D75984 SUB W8, W0, 0xB
	0x01D75988 CMP W8, 0x6
	0x01D7598C CSET W0, CC
	0x01D75990 RET
	0x01D75994 LDR X0, [X0 + 0x18]
	0x01D75998 RET
	0x01D7599C STR X1, [X0 + 0x18]
	0x01D759A0 RET
	0x01D759A4 STR X30, [X31 - 0x30]!
	0x01D759A8 STP X22, X21, [X31 + 0x10]
	0x01D759AC STP X20, X19, [X31 + 0x20]
	0x01D759B0 ADRP X21, 0x2663000
	0x01D759B4 ADRP X22, 0x2381000
	0x01D759B8 ADRP X20, 0x2381000
	0x01D759BC LDRB W8, [X21 + 0x90F]
	0x01D759C0 LDR X22, [X22 + 0x118]
	0x01D759C4 LDR X20, [X20 + 0x120]
	0x01D759C8 MOV X19, X0
	0x01D759CC TBNZ X8, 0x0, 0x1D759F0
	0x01D759D0 ADRP X0, 0x2381000
	0x01D759D4 LDR X0, [X0 + 0x120]
	0x01D759D8 BL 0x1C16CF4
	0x01D759DC ADRP X0, 0x2381000
	0x01D759E0 LDR X0, [X0 + 0x118]
	0x01D759E4 BL 0x1C16CF4
	0x01D759E8 MOVZ W8, 0x1
	0x01D759EC STRB W8, [X21 + 0x90F]
	0x01D759F0 LDR X0, [X22]
	0x01D759F4 BL 0x1C16F10
	0x01D759F8 LDR X2, [X20]
	0x01D759FC MOV X1, X19
	0x01D75A00 MOV X3, X31
	0x01D75A04 MOV X20, X0
	0x01D75A08 BL 0x3484840
	0x01D75A0C MOV X0, X20
	0x01D75A10 LDP X20, X19, [X31 + 0x20]
	0x01D75A14 LDP X22, X21, [X31 + 0x10]
	0x01D75A18 LDR X30, [X31], #0x30
	0x01D75A1C RET
	0x01D75A20 LDR X0, [X0 + 0x20]
	0x01D75A24 RET
	0x01D75A28 STR X1, [X0 + 0x20]
	0x01D75A2C RET
	0x01D75A30 STR X30, [X31 - 0x30]!
	0x01D75A34 STP X22, X21, [X31 + 0x10]
	0x01D75A38 STP X20, X19, [X31 + 0x20]
	0x01D75A3C ADRP X22, 0x2663000
	0x01D75A40 ADRP X21, 0x2381000
	0x01D75A44 LDRB W8, [X22 + 0x910]
	0x01D75A48 LDR X21, [X21 + 0x128]
	0x01D75A4C MOV X19, X1
	0x01D75A50 MOV X20, X0
	0x01D75A54 TBNZ X8, 0x0, 0x1D75A6C
	0x01D75A58 ADRP X0, 0x2381000
	0x01D75A5C LDR X0, [X0 + 0x128]
	0x01D75A60 BL 0x1C16CF4
	0x01D75A64 MOVZ W8, 0x1
	0x01D75A68 STRB W8, [X22 + 0x910]
	0x01D75A6C MOV X0, X20
	0x01D75A70 MOV X1, X31
	0x01D75A74 BL 0x33BDD8C
	0x01D75A78 STR X19, [X20 + 0x10]
	0x01D75A7C LDR X0, [X21]
	0x01D75A80 LDR W8, [X0 + 0xE0]
	0x01D75A84 CBNZ W8, 0x1D75A8C
	0x01D75A88 BL 0x1C16DFC
	0x01D75A8C CBZ X19, 0x1D75AB4
	0x01D75A90 LDR X8, [X21]
	0x01D75A94 MOV X0, X19
	0x01D75A98 LDP X20, X19, [X31 + 0x20]
	0x01D75A9C LDP X22, X21, [X31 + 0x10]
	0x01D75AA0 LDR X8, [X8 + 0xB8]
	0x01D75AA4 MOV X2, X31
	0x01D75AA8 LDR X1, [X8]
	0x01D75AAC LDR X30, [X31], #0x30
	0x01D75AB0 B 0x35F9A24
	0x01D75AB4 BL 0x1C16F20
	0x01D75AB8 SUB X31, X31, 0xE0
	0x01D75ABC STP X29, X30, [X31 + 0x80]
	0x01D75AC0 STP X28, X27, [X31 + 0x90]
	0x01D75AC4 STP X26, X25, [X31 + 0xA0]
	0x01D75AC8 STP X24, X23, [X31 + 0xB0]
	0x01D75ACC STP X22, X21, [X31 + 0xC0]
	0x01D75AD0 STP X20, X19, [X31 + 0xD0]
	0x01D75AD4 ADRP X28, 0x2663000
	0x01D75AD8 ADRP X27, 0x2381000
	0x01D75ADC LDRB W8, [X28 + 0x911]
	0x01D75AE0 LDR X27, [X27 + 0x130]
	0x01D75AE4 MOV X19, X7
	0x01D75AE8 MOV X20, X6
	0x01D75AEC MOV W21, W5
	0x01D75AF0 MOV X22, X4
	0x01D75AF4 MOV X23, X3
	0x01D75AF8 MOV X24, X2
	0x01D75AFC MOV X26, X1
	0x01D75B00 MOV X25, X0
	0x01D75B04 TBNZ X8, 0x0, 0x1D75B40
	0x01D75B08 ADRP X0, 0x2381000
	0x01D75B0C LDR X0, [X0 + 0x138]
	0x01D75B10 BL 0x1C16CF4
	0x01D75B14 ADRP X0, 0x2381000
	0x01D75B18 LDR X0, [X0 + 0x140]
	0x01D75B1C BL 0x1C16CF4
	0x01D75B20 ADRP X0, 0x2381000
	0x01D75B24 LDR X0, [X0 + 0x148]
	0x01D75B28 BL 0x1C16CF4
	0x01D75B2C ADRP X0, 0x2381000
	0x01D75B30 LDR X0, [X0 + 0x130]
	0x01D75B34 BL 0x1C16CF4
	0x01D75B38 MOVZ W8, 0x1
	0x01D75B3C STRB W8, [X28 + 0x911]
	0x01D75B40 LDR X0, [X27]
	0x01D75B44 MOVI V0.2D, 0x0
	0x01D75B48 STR X31, [X31 + 0x70]
	0x01D75B4C STP V0, V0, [X31 + 0x50]
	0x01D75B50 STP V0, V0, [X31 + 0x30]
	0x01D75B54 STP V0, V0, [X31 + 0x10]
	0x01D75B58 STR V0, [X31]
	0x01D75B5C ADRP X27, 0x2381000
	0x01D75B60 ADRP X29, 0x2381000
	0x01D75B64 ADRP X28, 0x2381000
	0x01D75B68 LDR W8, [X0 + 0xE0]
	0x01D75B6C LDR X27, [X27 + 0x138]
	0x01D75B70 LDR X29, [X29 + 0x140]
	0x01D75B74 LDR X28, [X28 + 0x148]
	0x01D75B78 CBNZ W8, 0x1D75B80
	0x01D75B7C BL 0x1C16DFC
	0x01D75B80 LDR X0, [X27]
	0x01D75B84 ADD X8, X31, 0x0
	0x01D75B88 ORR X27, X8, 0xF
	0x01D75B8C MOV X8, X27
	0x01D75B90 BL 0x263221C
	0x01D75B94 LDR X2, [X29]
	0x01D75B98 MOVN W8, 0x0
	0x01D75B9C ADD X1, X31, 0x0
	0x01D75BA0 MOV X0, X27
	0x01D75BA4 STP X24, X26, [X31 + 0x20]
	0x01D75BA8 STP X23, X25, [X31 + 0x30]
	0x01D75BAC STR X22, [X31 + 0x40]
	0x01D75BB0 STR W21, [X31 + 0x48]
	0x01D75BB4 STP X20, X19, [X31 + 0x50]
	0x01D75BB8 STR W8, [X31]
	0x01D75BBC BL 0x1FCFC14
	0x01D75BC0 LDR X1, [X28]
	0x01D75BC4 MOV X0, X27
	0x01D75BC8 BL 0x2632230
	0x01D75BCC LDP X20, X19, [X31 + 0xD0]
	0x01D75BD0 LDP X22, X21, [X31 + 0xC0]
	0x01D75BD4 LDP X24, X23, [X31 + 0xB0]
	0x01D75BD8 LDP X26, X25, [X31 + 0xA0]
	0x01D75BDC LDP X28, X27, [X31 + 0x90]
	0x01D75BE0 LDP X29, X30, [X31 + 0x80]
	0x01D75BE4 ADD X31, X31, 0xE0
	0x01D75BE8 RET
	0x01D75BEC STR X30, [X31 - 0x20]!
	0x01D75BF0 STP X20, X19, [X31 + 0x10]
	0x01D75BF4 MOV X19, X1
	0x01D75BF8 MOV X1, X31
	0x01D75BFC MOV X20, X0
	0x01D75C00 BL 0x35F97CC
	0x01D75C04 MOV X0, X20
	0x01D75C08 MOV X1, X19
	0x01D75C0C LDP X20, X19, [X31 + 0x10]
	0x01D75C10 MOV X2, X31
	0x01D75C14 LDR X30, [X31], #0x20
	0x01D75C18 B 0x35F97DC
	0x01D75C1C STR X30, [X31 - 0x20]!
	0x01D75C20 STP X20, X19, [X31 + 0x10]
	0x01D75C24 ADRP X20, 0x2663000
	0x01D75C28 LDRB W8, [X20 + 0x913]
	0x01D75C2C MOV X19, X1
	0x01D75C30 TBNZ X8, 0x0, 0x1D75C48
	0x01D75C34 ADRP X0, 0x237F000
	0x01D75C38 LDR X0, [X0 + 0x6F0]
	0x01D75C3C BL 0x1C16CF4
	0x01D75C40 MOVZ W8, 0x1
	0x01D75C44 STRB W8, [X20 + 0x913]
	0x01D75C48 CBZ X19, 0x1D75C84
	0x01D75C4C ADRP X8, 0x237F000
	0x01D75C50 LDR X8, [X8 + 0x6F0]
	0x01D75C54 LDR X9, [X19]
	0x01D75C58 LDR X8, [X8]
	0x01D75C5C CMP X9, X8
	0x01D75C60 B.NE 0x1D75C84
	0x01D75C64 LDR X8, [X19 + 0x90]
	0x01D75C68 SUB X8, X8, 0x1F4
	0x01D75C6C CMP X8, 0x4
	0x01D75C70 B.HI 0x1D75C84
	0x01D75C74 MOVZ W9, 0x1D
	0x01D75C78 LSRV W8, W9, W8
	0x01D75C7C AND W0, W8, 0x1
	0x01D75C80 B 0x1D75C88
	0x01D75C84 MOV W0, W31
	0x01D75C88 LDP X20, X19, [X31 + 0x10]
	0x01D75C8C LDR X30, [X31], #0x20
	0x01D75C90 RET
	0x01D75C94 SUB X31, X31, 0x80
	0x01D75C98 STR X30, [X31 + 0x20]
	0x01D75C9C STP X28, X27, [X31 + 0x30]
	0x01D75CA0 STP X26, X25, [X31 + 0x40]
	0x01D75CA4 STP X24, X23, [X31 + 0x50]
	0x01D75CA8 STP X22, X21, [X31 + 0x60]
	0x01D75CAC STP X20, X19, [X31 + 0x70]
	0x01D75CB0 ADRP X20, 0x2663000
	0x01D75CB4 LDRB W8, [X20 + 0x914]
	0x01D75CB8 MOV X19, X0
	0x01D75CBC TBNZ X8, 0x0, 0x1D75E6C
	0x01D75CC0 ADRP X0, 0x2381000
	0x01D75CC4 LDR X0, [X0 + 0x150]
	0x01D75CC8 BL 0x1C16CF4
	0x01D75CCC ADRP X0, 0x2381000
	0x01D75CD0 LDR X0, [X0 + 0x158]
	0x01D75CD4 BL 0x1C16CF4
	0x01D75CD8 ADRP X0, 0x2381000
	0x01D75CDC LDR X0, [X0 + 0x160]
	0x01D75CE0 BL 0x1C16CF4
	0x01D75CE4 ADRP X0, 0x2381000
	0x01D75CE8 LDR X0, [X0 + 0x130]
	0x01D75CEC BL 0x1C16CF4
	0x01D75CF0 ADRP X0, 0x2381000
	0x01D75CF4 LDR X0, [X0 + 0x168]
	0x01D75CF8 BL 0x1C16CF4
	0x01D75CFC ADRP X0, 0x2380000
	0x01D75D00 LDR X0, [X0 + 0xA50]
	0x01D75D04 BL 0x1C16CF4
	0x01D75D08 ADRP X0, 0x2380000
	0x01D75D0C LDR X0, [X0 + 0x220]
	0x01D75D10 BL 0x1C16CF4
	0x01D75D14 ADRP X0, 0x2381000
	0x01D75D18 LDR X0, [X0 + 0x170]
	0x01D75D1C BL 0x1C16CF4
	0x01D75D20 ADRP X0, 0x2381000
	0x01D75D24 LDR X0, [X0 + 0x178]
	0x01D75D28 BL 0x1C16CF4
	0x01D75D2C ADRP X0, 0x2381000
	0x01D75D30 LDR X0, [X0 + 0x180]
	0x01D75D34 BL 0x1C16CF4
	0x01D75D38 ADRP X0, 0x2381000
	0x01D75D3C LDR X0, [X0 + 0x188]
	0x01D75D40 BL 0x1C16CF4
	0x01D75D44 ADRP X0, 0x237E000
	0x01D75D48 LDR X0, [X0 + 0xE00]
	0x01D75D4C BL 0x1C16CF4
	0x01D75D50 ADRP X0, 0x2381000
	0x01D75D54 LDR X0, [X0 + 0x190]
	0x01D75D58 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+104], X25
	004 Move [X31+112], X24
	005 Move [X31+120], X23
	006 Move [X31+128], X22
	007 Move [X31+136], X21
	008 Move [X31+144], X20
	009 Move [X31+152], X19
	010 Move X20, 0x2664000
	011 Move W8, [X20+2309]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0x237F000
	018 Move X0, [X0+1624]
	019 Call 0x1C17CF4
	020 Move X0, 0x2381000
	021 Move X0, [X0+3952]
	022 Call 0x1C17CF4
	023 Move X0, 0x2381000
	024 Move X0, [X0+3960]
	025 Call 0x1C17CF4
	026 Move X0, 0x2381000
	027 Move X0, [X0+3008]
	028 Call 0x1C17CF4
	029 Move X0, 0x2381000
	030 Move X0, [X0+3968]
	031 Call 0x1C17CF4
	032 Move X0, 0x2381000
	033 Move X0, [X0+2584]
	034 Call 0x1C17CF4
	035 Move X0, 0x2381000
	036 Move X0, [X0+3976]
	037 Call 0x1C17CF4
	038 Move X0, 0x2381000
	039 Move X0, [X0+3984]
	040 Call 0x1C17CF4
	041 Move X0, 0x2381000
	042 Move X0, [X0+3992]
	043 Call 0x1C17CF4
	044 Move X0, 0x2381000
	045 Move X0, [X0+4000]
	046 Call 0x1C17CF4
	047 Move X0, 0x2381000
	048 Move X0, [X0+4008]
	049 Call 0x1C17CF4
	050 Move X0, 0x2381000
	051 Move X0, [X0+4016]
	052 Call 0x1C17CF4
	053 Move X0, 0x2381000
	054 Move X0, [X0+2720]
	055 Call 0x1C17CF4
	056 Move X0, 0x2381000
	057 Move X0, [X0+4024]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+2309], W8
	061 Move [X31+24], X31
	062 Move X25, 0x2381000
	063 Move W8, [X19]
	064 Move X25, [X25+3008]
	065 Compare W8, 0
	066 JumpIfEqual {110}
	067 Move X8, 0x2381000
	068 Move X8, [X8+3976]
	069 Move X9, [X19+32]
	070 Move X0, [X8]
	071 Move [X31+64], X9
	072 Add X1, X31, 64
	073 Call 0x1C17E04
	074 Move X1, X31
	075 Call JsonWriter.ToJson, X0
	076 Move X21, 0x237F000
	077 Move X21, [X21+1624]
	078 Move X20, X0
	079 Move X0, [X21]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {85}
	083 Call 0x1C17DFC
	084 Move X0, [X21]
	085 Move X8, [X0+184]
	086 Move X21, [X8+16]
	087 Compare X21, 0
	088 JumpIfEqual {247}
	089 Move X9, 0x2381000
	090 Move X10, 0x2381000
	091 Move X9, [X9+2584]
	092 Move X10, [X10+4024]
	093 Move X8, [X21]
	094 Move X23, [X19+40]
	095 Move X22, [X19+48]
	096 Move X1, [X9]
	097 Move X24, [X10]
	098 NotImplemented "Instruction LDRH not yet implemented."
	099 Compare X9, 0
	100 JumpIfEqual {107}
	101 Move X10, [X8+176]
	102 Add X10, X10, 8
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Subtract X9, X9, 1
	106 Add X10, X10, 16
	107 Move W2, 72
	108 Move X0, X21
	109 Call 0x1C5D788
	110 Move X8, [X19+56]
	111 Move TEMP, 0
	112 Not TEMP
	113 Move W9, TEMP
	114 Move [X31+24], X8
	115 Move [X19+56], X31
	116 Move [X19], W9
	117 Move W9, [X10]
	118 Add W9, W9, 72
	119 Add X8, X8, W9
	120 Add X0, X8, 312
	121 Move X8, [X0]
	122 Move X6, [X0+8]
	123 Move X0, X21
	124 Move X1, X23
	125 Move X2, X24
	126 Move X3, X20
	127 Move X4, X31
	128 Move X5, X22
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move X23, 0x2381000
	131 Move X23, [X23+2720]
	132 Move X20, X0
	133 Move X8, [X23]
	134 Move W9, [X8+224]
	135 Compare W9, 0
	136 JumpIfNotEqual {140}
	137 Move X0, X8
	138 Call 0x1C17DFC
	139 Move X8, [X23]
	140 Move X9, [X8+184]
	141 Move X21, [X9+32]
	142 Compare X21, 0
	143 JumpIfNotEqual {166}
	144 Move W9, [X8+224]
	145 Compare W9, 0
	146 JumpIfNotEqual {150}
	147 Move X0, X8
	148 Call 0x1C17DFC
	149 Move X8, [X23]
	150 Move X9, 0x2381000
	151 Move X8, [X8+184]
	152 Move X9, [X9+3968]
	153 Move X22, [X8]
	154 Move X0, [X9]
	155 Call 0x1C17F10
	156 Move X8, 0x2381000
	157 Move X8, [X8+4016]
	158 Move X21, X0
	159 Move X2, [X8]
	160 Move X1, X22
	161 Move X3, X31
	162 Call Func`2<Object, PurchaseAvatarItemsResponse>..ctor, X0, X1, X2
	163 Move X8, [X23]
	164 Move X8, [X8+184]
	165 Move [X8+32], X21
	166 Compare X20, 0
	167 JumpIfEqual {248}
	168 Move X8, 0x2381000
	169 Move X8, [X8+4000]
	170 Move X2, [X8]
	171 Move X0, X20
	172 Move X1, X21
	173 Call Task`1<Object>.ContinueWith, X0, X1
	174 Compare X0, 0
	175 JumpIfEqual {249}
	176 Move X8, 0x2381000
	177 Move X8, [X8+4008]
	178 Move X1, [X8]
	179 Call Task`1<PurchaseAvatarItemsResponse>.GetAwaiter, X0
	180 Move X8, 0x2381000
	181 Move X8, [X8+3992]
	182 Move [X31+24], X0
	183 Move X1, [X8]
	184 Add X0, X31, 24
	185 Call TaskAwaiter`1<PurchaseAvatarItemsResponse>.get_IsCompleted, X0
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {222}
	190 Move X8, 0x2381000
	191 Move X8, [X8+3984]
	192 Move X1, [X8]
	193 Add X8, X31, 64
	194 Add X0, X31, 24
	195 Call TaskAwaiter`1<PurchaseAvatarItemsResponse>.GetResult, X0
	196 Move V0, [X31+4]
	197 Move X8, [X31+80]
	198 Move TEMP, 1
	199 Not TEMP
	200 Move W9, TEMP
	201 Move X20, 0x2381000
	202 Move [X31+2], V0
	203 Move [X31+48], X8
	204 Move [X19+8], W9
	205 Move V0, [X31+2]
	206 Move X0, [X25]
	207 Move [X31+16], X8
	208 Move [X31], V0
	209 Move W8, [X0+224]
	210 Move X20, [X20+3960]
	211 Compare W8, 0
	212 JumpIfNotEqual {214}
	213 Call 0x1C17DFC
	214 Move V0, [X31]
	215 Move X8, [X31+16]
	216 Move X2, [X20]
	217 Add X1, X31, 64
	218 Move X0, X19
	219 Move [X31+4], V0
	220 Move [X31+80], X8
	221 Call AsyncTaskMethodBuilder`1<PurchaseAvatarItemsResponse>.SetResult, X0, X1
	222 Move [X19], W31
	223 Move X8, [X31+24]
	224 Move [X19+56], X8
	225 Move X0, [X25]
	226 Move W8, [X0+224]
	227 Compare W8, 0
	228 JumpIfNotEqual {230}
	229 Call 0x1C17DFC
	230 Move X8, 0x2381000
	231 Move X8, [X8+3952]
	232 Add X0, X19, 8
	233 Move X3, [X8]
	234 Add X1, X31, 24
	235 Move X2, X19
	236 Call AsyncTaskMethodBuilder`1<PurchaseAvatarItemsResponse>.AwaitUnsafeOnCompleted, X0, X1, X2
	237 Move X20, [X31+144]
	238 Move X19, [X31+152]
	239 Move X22, [X31+128]
	240 Move X21, [X31+136]
	241 Move X24, [X31+112]
	242 Move X23, [X31+120]
	243 Move X30, [X31+96]
	244 Move X25, [X31+104]
	245 Add X31, X31, 160
	246 Return 
	247 Call 0x1C17F20
	248 Call 0x1C17F20
	249 Call 0x1C17F20
	250 Move X20, X0
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Move X0, X20
	253 Call 0x3EB2AD0
	254 Move X20, X0
	255 Move X0, 0x237F000
	256 Move X0, [X0+2000]
	257 Call 0x1C17D08
	258 Move X8, [X20]
	259 Move X1, [X8]
	260 Call 0x1C18270
	261 Move TEMP, X0
	262 And TEMP, TEMP, 1
	263 Compare TEMP, 1
	264 JumpIfNotEqual {285}
	265 Move X20, [X20]
	266 Call 0x3EB2AE0
	267 Move TEMP, 1
	268 Not TEMP
	269 Move W8, TEMP
	270 Move [X19+8], W8
	271 Move X0, 0x2381000
	272 Move X0, [X0+3008]
	273 Call 0x1C17D08
	274 Move W8, [X0+224]
	275 Compare W8, 0
	276 JumpIfNotEqual {278}
	277 Call 0x1C17DFC
	278 Move X0, 0x2381000
	279 Move X0, [X0+4032]
	280 Call 0x1C17D08
	281 Move X2, X0
	282 Move X0, X19
	283 Move X1, X20
	284 Call AsyncTaskMethodBuilder`1<PurchaseAvatarItemsResponse>.SetException, X0, X1
	285 Move W0, 8
	286 Call 0x3EB2AF0
	287 Move X8, [X20]
	288 Move [X0], X8
	289 Move X1, 0x2140000
	290 Add X1, X1, 3672
	291 Move X2, X31
	292 Call 0x3EB2B00
	293 Move X20, X0
	294 Call 0x3EB2AE0
	295 Move X0, X20
	296 Call 0x1D2D690
	297 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x01D75D5C ADRP X0, 0x2381000
	0x01D75D60 LDR X0, [X0 + 0x198]
	0x01D75D64 BL 0x1C16CF4
	0x01D75D68 ADRP X0, 0x237E000
	0x01D75D6C LDR X0, [X0 + 0xE18]
	0x01D75D70 BL 0x1C16CF4
	0x01D75D74 ADRP X0, 0x2381000
	0x01D75D78 LDR X0, [X0 + 0x1A0]
	0x01D75D7C BL 0x1C16CF4
	0x01D75D80 ADRP X0, 0x2381000
	0x01D75D84 LDR X0, [X0 + 0x1A8]
	0x01D75D88 BL 0x1C16CF4
	0x01D75D8C ADRP X0, 0x2381000
	0x01D75D90 LDR X0, [X0 + 0x1B0]
	0x01D75D94 BL 0x1C16CF4
	0x01D75D98 ADRP X0, 0x2381000
	0x01D75D9C LDR X0, [X0 + 0x1B8]
	0x01D75DA0 BL 0x1C16CF4
	0x01D75DA4 ADRP X0, 0x2381000
	0x01D75DA8 LDR X0, [X0 + 0x1C0]
	0x01D75DAC BL 0x1C16CF4
	0x01D75DB0 ADRP X0, 0x2381000
	0x01D75DB4 LDR X0, [X0 + 0x1C8]
	0x01D75DB8 BL 0x1C16CF4
	0x01D75DBC ADRP X0, 0x2381000
	0x01D75DC0 LDR X0, [X0 + 0x1D0]
	0x01D75DC4 BL 0x1C16CF4
	0x01D75DC8 ADRP X0, 0x237E000
	0x01D75DCC LDR X0, [X0 + 0x9D0]
	0x01D75DD0 BL 0x1C16CF4
	0x01D75DD4 ADRP X0, 0x2381000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2664000
	007 Move X21, 0x2381000
	008 Move W8, [X22+2310]
	009 Move X21, [X21+3008]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x2381000
	017 Move X0, [X0+4040]
	018 Call 0x1C17CF4
	019 Move X0, 0x2381000
	020 Move X0, [X0+3008]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2310], W8
	024 Move X0, [X21]
	025 Move X21, 0x2381000
	026 Move W8, [X0+224]
	027 Move X21, [X21+4040]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<PurchaseAvatarItemsResponse>.SetStateMachine, X0, X1
	040 Return 

