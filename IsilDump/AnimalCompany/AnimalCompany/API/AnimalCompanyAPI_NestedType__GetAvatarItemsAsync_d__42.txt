Type: AnimalCompany.API.AnimalCompanyAPI/<GetAvatarItemsAsync>d__42

Method: System.Void MoveNext()

Disassembly:
	0x01D72E2C LDRH W9, [X8 + 0x12E]
	0x01D72E30 CBZ X9, 0x1D72E54
	0x01D72E34 LDR X10, [X8 + 0xB0]
	0x01D72E38 ADD X10, X10, 0x8
	0x01D72E3C LDUR X11, [X10 - 0x8]
	0x01D72E40 CMP X11, X1
	0x01D72E44 B.EQ 0x1D72E64
	0x01D72E48 SUBS X9, X9, 0x1
	0x01D72E4C ADD X10, X10, 0x10
	0x01D72E50 B.NE 0x1D72E3C
	0x01D72E54 MOV X0, X22
	0x01D72E58 MOV W2, W31
	0x01D72E5C BL 0x1C5C788
	0x01D72E60 B 0x1D72E70
	0x01D72E64 LDRSW X9, [X10]
	0x01D72E68 ADD X8, X8, X9, 0x4, LSL
	0x01D72E6C ADD X0, X8, 0x138
	0x01D72E70 LDP X8, X1, [X0]
	0x01D72E74 MOV X0, X22
	0x01D72E78 BLR X8
	0x01D72E7C MOV X23, X0
	0x01D72E80 CBZ X0, 0x1D73164
	0x01D72E84 LDR X8, [X23]
	0x01D72E88 LDR X1, [X27]
	0x01D72E8C LDRH W9, [X8 + 0x12E]
	0x01D72E90 CBZ X9, 0x1D72EB4
	0x01D72E94 LDR X10, [X8 + 0xB0]
	0x01D72E98 ADD X10, X10, 0x8
	0x01D72E9C LDUR X11, [X10 - 0x8]
	0x01D72EA0 CMP X11, X1
	0x01D72EA4 B.EQ 0x1D72EC4
	0x01D72EA8 SUBS X9, X9, 0x1
	0x01D72EAC ADD X10, X10, 0x10
	0x01D72EB0 B.NE 0x1D72E9C
	0x01D72EB4 MOVZ W2, 0x6
	0x01D72EB8 MOV X0, X23
	0x01D72EBC BL 0x1C5C788
	0x01D72EC0 B 0x1D72ED4
	0x01D72EC4 LDR W9, [X10]
	0x01D72EC8 ADD W9, W9, 0x6
	0x01D72ECC ADD X8, X8, W9, 0x4, SXTW
	0x01D72ED0 ADD X0, X8, 0x138
	0x01D72ED4 LDP X8, X1, [X0]
	0x01D72ED8 MOV X0, X23
	0x01D72EDC BLR X8
	0x01D72EE0 MOV X1, X0
	0x01D72EE4 CBZ X20, 0x1D73168
	0x01D72EE8 LDR W10, [X20 + 0x1C]
	0x01D72EEC LDR X8, [X20 + 0x10]
	0x01D72EF0 LDR X9, [X28]
	0x01D72EF4 ADD W10, W10, 0x1
	0x01D72EF8 STR W10, [X20 + 0x1C]
	0x01D72EFC CBZ X8, 0x1D7315C
	0x01D72F00 LDRSW X10, [X20 + 0x18]
	0x01D72F04 LDR W11, [X8 + 0x18]
	0x01D72F08 CMP W10, W11
	0x01D72F0C B.CS 0x1D72F24
	0x01D72F10 ADD W9, W10, 0x1
	0x01D72F14 ADD X8, X8, X10, 0x3, LSL
	0x01D72F18 STR W9, [X20 + 0x18]
	0x01D72F1C STR X1, [X8 + 0x20]
	0x01D72F20 B 0x1D72F38
	0x01D72F24 LDR X8, [X9 + 0x20]
	0x01D72F28 LDR X8, [X8 + 0xC0]
	0x01D72F2C LDR X2, [X8 + 0x70]
	0x01D72F30 MOV X0, X20
	0x01D72F34 BL 0x301BF90
	0x01D72F38 LDR X8, [X23]
	0x01D72F3C LDR X1, [X27]
	0x01D72F40 LDRH W9, [X8 + 0x12E]
	0x01D72F44 CBZ X9, 0x1D72F68
	0x01D72F48 LDR X10, [X8 + 0xB0]
	0x01D72F4C ADD X10, X10, 0x8
	0x01D72F50 LDUR X11, [X10 - 0x8]
	0x01D72F54 CMP X11, X1
	0x01D72F58 B.EQ 0x1D72F78
	0x01D72F5C SUBS X9, X9, 0x1
	0x01D72F60 ADD X10, X10, 0x10
	0x01D72F64 B.NE 0x1D72F50
	0x01D72F68 MOVZ W2, 0x7
	0x01D72F6C MOV X0, X23
	0x01D72F70 BL 0x1C5C788
	0x01D72F74 B 0x1D72F88
	0x01D72F78 LDR W9, [X10]
	0x01D72F7C ADD W9, W9, 0x7
	0x01D72F80 ADD X8, X8, W9, 0x4, SXTW
	0x01D72F84 ADD X0, X8, 0x138
	0x01D72F88 LDP X8, X1, [X0]
	0x01D72F8C MOV X0, X23
	0x01D72F90 BLR X8
	0x01D72F94 LDR X1, [X29]
	0x01D72F98 ADD X8, X31, 0xC0
	0x01D72F9C BL 0x220E388
	0x01D72FA0 ADD X0, X31, 0x18
	0x01D72FA4 ADD X1, X31, 0xC0
	0x01D72FA8 MOVZ W2, 0x50
	0x01D72FAC BL 0x3EB1AC0
	0x01D72FB0 CBZ X21, 0x1D73160
	0x01D72FB4 LDR X23, [X26]
	0x01D72FB8 ADD X0, X31, 0x70
	0x01D72FBC ADD X1, X31, 0x18
	0x01D72FC0 MOVZ W2, 0x50
	0x01D72FC4 BL 0x3EB1AC0
	0x01D72FC8 LDR W9, [X21 + 0x1C]
	0x01D72FCC LDR X8, [X21 + 0x10]
	0x01D72FD0 ADD W9, W9, 0x1
	0x01D72FD4 STR W9, [X21 + 0x1C]
	0x01D72FD8 CBZ X8, 0x1D73158
	0x01D72FDC LDRSW X9, [X21 + 0x18]
	0x01D72FE0 LDR W10, [X8 + 0x18]
	0x01D72FE4 CMP W9, W10
	0x01D72FE8 B.CS 0x1D73010
	0x01D72FEC MOVZ W11, 0x50
	0x01D72FF0 MADD X8, X9, X11, X8
	0x01D72FF4 ADD W10, W9, 0x1
	0x01D72FF8 ADD X0, X8, 0x20
	0x01D72FFC ADD X1, X31, 0x70
	0x01D73000 MOVZ W2, 0x50
	0x01D73004 STR W10, [X21 + 0x18]
	0x01D73008 BL 0x3EB1AC0
	0x01D7300C B 0x1D72DC8
	0x01D73010 LDR X8, [X23 + 0x20]
	0x01D73014 ADD X0, X31, 0xC0
	0x01D73018 ADD X1, X31, 0x70
	0x01D7301C MOVZ W2, 0x50
	0x01D73020 LDR X8, [X8 + 0xC0]
	0x01D73024 LDR X23, [X8 + 0x70]
	0x01D73028 BL 0x3EB1AC0
	0x01D7302C ADD X1, X31, 0xC0
	0x01D73030 MOV X0, X21
	0x01D73034 MOV X2, X23
	0x01D73038 BL 0x2F55F10
	0x01D7303C B 0x1D72DC8
	0x01D73040 MOV X25, X31
	0x01D73044 MOVZ W23, 0x9
	0x01D73048 LDR W8, [X31 + 0x14]
	0x01D7304C TBZ X8, 0x1F, 0x1D730B4
	0x01D73050 CBZ X22, 0x1D730B4
	0x01D73054 ADRP X10, 0x2380000
	0x01D73058 LDR X8, [X22]
	0x01D7305C LDR X10, [X10 + 0xE00]
	0x01D73060 LDRH W9, [X8 + 0x12E]
	0x01D73064 LDR X1, [X10]
	0x01D73068 CBZ X9, 0x1D7308C
	0x01D7306C LDR X10, [X8 + 0xB0]
	0x01D73070 ADD X10, X10, 0x8
	0x01D73074 LDUR X11, [X10 - 0x8]
	0x01D73078 CMP X11, X1
	0x01D7307C B.EQ 0x1D7309C
	0x01D73080 SUBS X9, X9, 0x1
	0x01D73084 ADD X10, X10, 0x10
	0x01D73088 B.NE 0x1D73074
	0x01D7308C MOV X0, X22
	0x01D73090 MOV W2, W31
	0x01D73094 BL 0x1C5C788
	0x01D73098 B 0x1D730A8
	0x01D7309C LDRSW X9, [X10]
	0x01D730A0 ADD X8, X8, X9, 0x4, LSL
	0x01D730A4 ADD X0, X8, 0x138
	0x01D730A8 LDP X8, X1, [X0]
	0x01D730AC MOV X0, X22
	0x01D730B0 BLR X8
	0x01D730B4 CBNZ X25, 0x1D73198
	0x01D730B8 CBZ W23, 0x1D730C4
	0x01D730BC CMP W23, 0x9
	0x01D730C0 B.NE 0x1D73138
	0x01D730C4 CBZ X20, 0x1D731AC
	0x01D730C8 ADRP X8, 0x2382000
	0x01D730CC LDR X8, [X8 + 0xE78]
	0x01D730D0 LDR X1, [X8]
	0x01D730D4 MOV X0, X20
	0x01D730D8 BL 0x301DDC4
	0x01D730DC CBZ X21, 0x1D731B0
	0x01D730E0 ADRP X8, 0x2382000
	0x01D730E4 LDR X8, [X8 + 0xE70]
	0x01D730E8 MOV X20, X0
	0x01D730EC LDR X1, [X8]
	0x01D730F0 MOV X0, X21
	0x01D730F4 BL 0x2F58460
	0x01D730F8 MOVN W8, 0x1
	0x01D730FC STR W8, [X19], #0x8
	0x01D73100 ADRP X8, 0x2382000
	0x01D73104 LDR X8, [X8 + 0xAD0]
	0x01D73108 MOV X21, X0
	0x01D7310C LDR X0, [X8]
	0x01D73110 LDR W8, [X0 + 0xE0]
	0x01D73114 CBNZ W8, 0x1D7311C
	0x01D73118 BL 0x1C16DFC
	0x01D7311C ADRP X8, 0x2382000
	0x01D73120 LDR X8, [X8 + 0xE58]
	0x01D73124 MOV X0, X19
	0x01D73128 MOV X1, X20
	0x01D7312C MOV X2, X21
	0x01D73130 LDR X3, [X8]
	0x01D73134 BL 0x263883C
	0x01D73138 LDP X20, X19, [X31 + 0x160]
	0x01D7313C LDP X22, X21, [X31 + 0x150]
	0x01D73140 LDP X24, X23, [X31 + 0x140]
	0x01D73144 LDP X26, X25, [X31 + 0x130]
	0x01D73148 LDP X28, X27, [X31 + 0x120]
	0x01D7314C LDP X29, X30, [X31 + 0x110]
	0x01D73150 ADD X31, X31, 0x170
	0x01D73154 RET
	0x01D73158 BL 0x1C16F20
	0x01D7315C BL 0x1C16F20
	0x01D73160 BL 0x1C16F20
	0x01D73164 BL 0x1C16F20
	0x01D73168 BL 0x1C16F20
	0x01D7316C BL 0x1C16F44
	0x01D73170 MOV X1, X31
	0x01D73174 BL 0x1C16DEC
	0x01D73178 BL 0x1C16F20
	0x01D7317C BL 0x1C16F20
	0x01D73180 BL 0x1C16F28
	0x01D73184 BL 0x1C16F20
	0x01D73188 BL 0x1C16F28
	0x01D7318C BL 0x1C16F20
	0x01D73190 BL 0x1C16F20
	0x01D73194 BL 0x1C16F20
	0x01D73198 MOV X0, X25
	0x01D7319C BL 0x1C16F18
	0x01D731A0 BL 0x1C16F20
	0x01D731A4 BL 0x1C16F20
	0x01D731A8 BL 0x1C16F20
	0x01D731AC BL 0x1C16F20
	0x01D731B0 BL 0x1C16F20
	0x01D731B4 B 0x1D733D0
	0x01D731B8 B 0x1D733D0
	0x01D731BC B 0x1D733D0
	0x01D731C0 B 0x1D733D0
	0x01D731C4 B 0x1D733D0
	0x01D731C8 B 0x1D733D0
	0x01D731CC B 0x1D733D0
	0x01D731D0 B 0x1D733D0
	0x01D731D4 B 0x1D733D0
	0x01D731D8 B 0x1D733D0
	0x01D731DC B 0x1D733D0
	0x01D731E0 B 0x1D73240
	0x01D731E4 B 0x1D73200
	0x01D731E8 B 0x1D733D0
	0x01D731EC B 0x1D73200
	0x01D731F0 B 0x1D73200
	0x01D731F4 B 0x1D733D0
	0x01D731F8 B 0x1D733D0
	0x01D731FC B 0x1D733D0
	0x01D73200 MOV X23, X1
	0x01D73204 MOV X24, X0
	0x01D73208 B 0x1D732DC
	0x01D7320C B 0x1D73240
	0x01D73210 B 0x1D733D0
	0x01D73214 B 0x1D733D0
	0x01D73218 B 0x1D733D0
	0x01D7321C B 0x1D733D0
	0x01D73220 B 0x1D73240
	0x01D73224 B 0x1D73240
	0x01D73228 B 0x1D73240
	0x01D7322C B 0x1D73240
	0x01D73230 B 0x1D73240
	0x01D73234 B 0x1D733D0
	0x01D73238 B 0x1D73240
	0x01D7323C B 0x1D73240
	0x01D73240 MOV X23, X1
	0x01D73244 MOV X24, X0
	0x01D73248 CMP W23, 0x1
	0x01D7324C B.NE 0x1D73268
	0x01D73250 MOV X0, X24
	0x01D73254 BL 0x3EB1AD0
	0x01D73258 LDR X25, [X0]
	0x01D7325C BL 0x3EB1AE0
	0x01D73260 MOV W23, W31
	0x01D73264 B 0x1D73048
	0x01D73268 MOV X25, X31
	0x01D7326C LDR W8, [X31 + 0x14]
	0x01D73270 TBZ X8, 0x1F, 0x1D732D8
	0x01D73274 CBZ X22, 0x1D732D8
	0x01D73278 ADRP X10, 0x2380000
	0x01D7327C LDR X8, [X22]
	0x01D73280 LDR X10, [X10 + 0xE00]
	0x01D73284 LDRH W9, [X8 + 0x12E]
	0x01D73288 LDR X1, [X10]
	0x01D7328C CBZ X9, 0x1D732B0
	0x01D73290 LDR X10, [X8 + 0xB0]
	0x01D73294 ADD X10, X10, 0x8
	0x01D73298 LDUR X11, [X10 - 0x8]
	0x01D7329C CMP X11, X1
	0x01D732A0 B.EQ 0x1D732C0
	0x01D732A4 SUBS X9, X9, 0x1
	0x01D732A8 ADD X10, X10, 0x10
	0x01D732AC B.NE 0x1D73298
	0x01D732B0 MOV X0, X22
	0x01D732B4 MOV W2, W31
	0x01D732B8 BL 0x1C5C788
	0x01D732BC B 0x1D732CC
	0x01D732C0 LDRSW X9, [X10]
	0x01D732C4 ADD X8, X8, X9, 0x4, LSL
	0x01D732C8 ADD X0, X8, 0x138
	0x01D732CC LDP X8, X1, [X0]
	0x01D732D0 MOV X0, X22
	0x01D732D4 BLR X8
	0x01D732D8 CBNZ X25, 0x1D73380
	0x01D732DC CMP W23, 0x1
	0x01D732E0 B.NE 0x1D733D8
	0x01D732E4 MOV X0, X24
	0x01D732E8 BL 0x3EB1AD0
	0x01D732EC MOV X22, X0
	0x01D732F0 ADRP X0, 0x2380000
	0x01D732F4 LDR X0, [X0 + 0x7D0]
	0x01D732F8 BL 0x1C16D08
	0x01D732FC LDR X8, [X22]
	0x01D73300 LDR X1, [X8]
	0x01D73304 BL 0x1C17270
	0x01D73308 TBZ X0, 0x0, 0x1D73388
	0x01D7330C LDR X22, [X22]
	0x01D73310 BL 0x3EB1AE0
	0x01D73314 ADRP X0, 0x2380000
	0x01D73318 LDR X0, [X0 + 0x788]
	0x01D7331C BL 0x1C16D08
	0x01D73320 LDR W8, [X0 + 0xE0]
	0x01D73324 CBNZ W8, 0x1D7332C
	0x01D73328 BL 0x1C16DFC
	0x01D7332C ADRP X0, 0x2382000
	0x01D73330 LDR X0, [X0 + 0xE98]
	0x01D73334 BL 0x1C16D08
	0x01D73338 MOV X23, X0
	0x01D7333C ADRP X0, 0x2382000
	0x01D73340 LDR X0, [X0 + 0xA78]
	0x01D73344 BL 0x1C16D08
	0x01D73348 MOV X24, X0
	0x01D7334C ADRP X0, 0x2382000
	0x01D73350 LDR X0, [X0 + 0xEA0]
	0x01D73354 BL 0x1C16D08
	0x01D73358 MOV X5, X0
	0x01D7335C MOVZ W0, 0x40
	0x01D73360 MOVZ W6, 0xFD
	0x01D73364 MOV X1, X23
	0x01D73368 MOV X2, X22
	0x01D7336C MOV X3, X31
	0x01D73370 MOV X4, X24
	0x01D73374 MOV X7, X31
	0x01D73378 BL 0x35C2674
	0x01D7337C B 0x1D730C4
	0x01D73380 MOV X0, X25
	0x01D73384 BL 0x1C16F18
	0x01D73388 MOVZ W0, 0x8
	0x01D7338C BL 0x3EB1AF0
	0x01D73390 LDR X8, [X22]
	0x01D73394 STR X8, [X0]
	0x01D73398 ADRP X1, 0x2141000
	0x01D7339C ADD X1, X1, 0xE58
	0x01D733A0 MOV X2, X31
	0x01D733A4 BL 0x3EB1B00
	0x01D733A8 B 0x1D73470
	0x01D733AC B 0x1D733D0
	0x01D733B0 MOV X23, X1
	0x01D733B4 MOV X24, X0
	0x01D733B8 B 0x1D7326C
	0x01D733BC MOV X23, X1
	0x01D733C0 MOV X24, X0
	0x01D733C4 BL 0x3EB1AE0
	0x01D733C8 B 0x1D733D8
	0x01D733CC B 0x1D733D0
	0x01D733D0 MOV X23, X1
	0x01D733D4 MOV X24, X0
	0x01D733D8 CMP W23, 0x1
	0x01D733DC B.NE 0x1D73478
	0x01D733E0 MOV X0, X24
	0x01D733E4 BL 0x3EB1AD0
	0x01D733E8 MOV X20, X0
	0x01D733EC ADRP X0, 0x2380000
	0x01D733F0 LDR X0, [X0 + 0x7D0]
	0x01D733F4 BL 0x1C16D08
	0x01D733F8 LDR X8, [X20]
	0x01D733FC LDR X1, [X8]
	0x01D73400 BL 0x1C17270
	0x01D73404 TBZ X0, 0x0, 0x1D73450
	0x01D73408 LDR X20, [X20]
	0x01D7340C BL 0x3EB1AE0
	0x01D73410 MOVN W8, 0x1
	0x01D73414 STR W8, [X19], #0x8
	0x01D73418 ADRP X0, 0x2382000
	0x01D7341C LDR X0, [X0 + 0xAD0]
	0x01D73420 BL 0x1C16D08
	0x01D73424 LDR W8, [X0 + 0xE0]
	0x01D73428 CBNZ W8, 0x1D73430
	0x01D7342C BL 0x1C16DFC
	0x01D73430 ADRP X0, 0x2382000
	0x01D73434 LDR X0, [X0 + 0xEA8]
	0x01D73438 BL 0x1C16D08
	0x01D7343C MOV X2, X0
	0x01D73440 MOV X0, X19
	0x01D73444 MOV X1, X20
	0x01D73448 BL 0x2638A64
	0x01D7344C B 0x1D73138
	0x01D73450 MOVZ W0, 0x8
	0x01D73454 BL 0x3EB1AF0
	0x01D73458 LDR X8, [X20]
	0x01D7345C STR X8, [X0]
	0x01D73460 ADRP X1, 0x2141000
	0x01D73464 ADD X1, X1, 0xE58
	0x01D73468 MOV X2, X31
	0x01D7346C BL 0x3EB1B00
	0x01D73470 MOV X24, X0
	0x01D73474 BL 0x3EB1AE0
	0x01D73478 MOV X0, X24
	0x01D7347C BL 0x1D2C690
	0x01D73480 BL 0x1990590
	0x01D73484 STR X30, [X31 - 0x30]!
	0x01D73488 STP X22, X21, [X31 + 0x10]
	0x01D7348C STP X20, X19, [X31 + 0x20]
	0x01D73490 ADRP X22, 0x2665000
	0x01D73494 ADRP X21, 0x2382000
	0x01D73498 LDRB W8, [X22 + 0x900]
	0x01D7349C LDR X21, [X21 + 0xAD0]
	0x01D734A0 MOV X19, X1
	0x01D734A4 MOV X20, X0
	0x01D734A8 TBNZ X8, 0x0, 0x1D734CC
	0x01D734AC ADRP X0, 0x2382000
	0x01D734B0 LDR X0, [X0 + 0xEB0]
	0x01D734B4 BL 0x1C16CF4
	0x01D734B8 ADRP X0, 0x2382000
	0x01D734BC LDR X0, [X0 + 0xAD0]
	0x01D734C0 BL 0x1C16CF4
	0x01D734C4 MOVZ W8, 0x1
	0x01D734C8 STRB W8, [X22 + 0x900]
	0x01D734CC LDR X0, [X21]
	0x01D734D0 ADRP X21, 0x2382000
	0x01D734D4 LDR W8, [X0 + 0xE0]
	0x01D734D8 LDR X21, [X21 + 0xEB0]
	0x01D734DC CBNZ W8, 0x1D734E4
	0x01D734E0 BL 0x1C16DFC
	0x01D734E4 LDR X2, [X21]
	0x01D734E8 ADD X0, X20, 0x8
	0x01D734EC MOV X1, X19
	0x01D734F0 LDP X20, X19, [X31 + 0x20]
	0x01D734F4 LDP X22, X21, [X31 + 0x10]
	0x01D734F8 LDR X30, [X31], #0x30
	0x01D734FC B 0x26387B4
	0x01D73500 STR X30, [X31 - 0x50]!
	0x01D73504 STP X26, X25, [X31 + 0x10]
	0x01D73508 STP X24, X23, [X31 + 0x20]
	0x01D7350C STP X22, X21, [X31 + 0x30]
	0x01D73510 STP X20, X19, [X31 + 0x40]
	0x01D73514 ADRP X20, 0x2665000
	0x01D73518 LDRB W8, [X20 + 0x901]
	0x01D7351C MOV X19, X0
	0x01D73520 TBNZ X8, 0x0, 0x1D7364C
	0x01D73524 ADRP X0, 0x2380000
	0x01D73528 LDR X0, [X0 + 0x658]
	0x01D7352C BL 0x1C16CF4
	0x01D73530 ADRP X0, 0x2382000
	0x01D73534 LDR X0, [X0 + 0xEB8]
	0x01D73538 BL 0x1C16CF4
	0x01D7353C ADRP X0, 0x2382000
	0x01D73540 LDR X0, [X0 + 0xEC0]
	0x01D73544 BL 0x1C16CF4
	0x01D73548 ADRP X0, 0x2382000
	0x01D7354C LDR X0, [X0 + 0xAB0]
	0x01D73550 BL 0x1C16CF4
	0x01D73554 ADRP X0, 0x2382000
	0x01D73558 LDR X0, [X0 + 0xD70]
	0x01D7355C BL 0x1C16CF4
	0x01D73560 ADRP X0, 0x2382000
	0x01D73564 LDR X0, [X0 + 0xE00]
	0x01D73568 BL 0x1C16CF4
	0x01D7356C ADRP X0, 0x2382000
	0x01D73570 LDR X0, [X0 + 0xA18]
	0x01D73574 BL 0x1C16CF4
	0x01D73578 ADRP X0, 0x2380000
	0x01D7357C LDR X0, [X0 + 0xE00]
	0x01D73580 BL 0x1C16CF4
	0x01D73584 ADRP X0, 0x2382000
	0x01D73588 LDR X0, [X0 + 0xD78]
	0x01D7358C BL 0x1C16CF4
	0x01D73590 ADRP X0, 0x2382000
	0x01D73594 LDR X0, [X0 + 0xD80]
	0x01D73598 BL 0x1C16CF4
	0x01D7359C ADRP X0, 0x2380000
	0x01D735A0 LDR X0, [X0 + 0xE18]
	0x01D735A4 BL 0x1C16CF4
	0x01D735A8 ADRP X0, 0x2381000
	0x01D735AC LDR X0, [X0 + 0x818]
	0x01D735B0 BL 0x1C16CF4
	0x01D735B4 ADRP X0, 0x2382000
	0x01D735B8 LDR X0, [X0 + 0xEC8]
	0x01D735BC BL 0x1C16CF4
	0x01D735C0 ADRP X0, 0x2380000
	0x01D735C4 LDR X0, [X0 + 0x788]
	0x01D735C8 BL 0x1C16CF4
	0x01D735CC ADRP X0, 0x2382000
	0x01D735D0 LDR X0, [X0 + 0xE08]
	0x01D735D4 BL 0x1C16CF4
	0x01D735D8 ADRP X0, 0x2382000
	0x01D735DC LDR X0, [X0 + 0xE10]
	0x01D735E0 BL 0x1C16CF4
	0x01D735E4 ADRP X0, 0x2382000
	0x01D735E8 LDR X0, [X0 + 0xE18]
	0x01D735EC BL 0x1C16CF4
	0x01D735F0 ADRP X0, 0x2382000
	0x01D735F4 LDR X0, [X0 + 0xE20]
	0x01D735F8 BL 0x1C16CF4
	0x01D735FC ADRP X0, 0x2382000
	0x01D73600 LDR X0, [X0 + 0xE28]
	0x01D73604 BL 0x1C16CF4
	0x01D73608 ADRP X0, 0x2382000
	0x01D7360C LDR X0, [X0 + 0xED0]
	0x01D73610 BL 0x1C16CF4
	0x01D73614 ADRP X0, 0x2382000
	0x01D73618 LDR X0, [X0 + 0xED8]
	0x01D7361C BL 0x1C16CF4
	0x01D73620 ADRP X0, 0x2382000
	0x01D73624 LDR X0, [X0 + 0xEE0]
	0x01D73628 BL 0x1C16CF4
	0x01D7362C ADRP X0, 0x2382000
	0x01D73630 LDR X0, [X0 + 0xA78]
	0x01D73634 BL 0x1C16CF4
	0x01D73638 ADRP X0, 0x2382000
	0x01D7363C LDR X0, [X0 + 0xEE8]
	0x01D73640 BL 0x1C16CF4
	0x01D73644 MOVZ W8, 0x1
	0x01D73648 STRB W8, [X20 + 0x901]
	0x01D7364C STR X31, [X31 + 0x8]
	0x01D73650 ADRP X25, 0x2382000
	0x01D73654 LDR W26, [X19]
	0x01D73658 LDR X25, [X25 + 0xAB0]
	0x01D7365C CBZ W26, 0x1D7372C
	0x01D73660 ADRP X20, 0x2380000
	0x01D73664 LDR X20, [X20 + 0x658]
	0x01D73668 LDR X0, [X20]
	0x01D7366C LDR W8, [X0 + 0xE0]
	0x01D73670 CBNZ W8, 0x1D7367C
	0x01D73674 BL 0x1C16DFC
	0x01D73678 LDR X0, [X20]
	0x01D7367C ADRP X9, 0x2382000
	0x01D73680 LDR X8, [X0 + 0xB8]
	0x01D73684 LDR X9, [X9 + 0xE08]
	0x01D73688 LDR X20, [X19 + 0x20]
	0x01D7368C LDR X21, [X8 + 0x10]
	0x01D73690 LDR X0, [X9]
	0x01D73694 MOVZ W1, 0x1
	0x01D73698 BL 0x1C16D6C
	0x01D7369C ADRP X8, 0x2382000
	0x01D736A0 LDR X8, [X8 + 0xE10]
	0x01D736A4 MOV X22, X0
	0x01D736A8 LDR X0, [X8]
	0x01D736AC BL 0x1C16F10
	0x01D736B0 MOV X23, X0
	0x01D736B4 MOV X1, X31
	0x01D736B8 BL 0x3484838
	0x01D736BC CBZ X23, 0x1D73BE4
	0x01D736C0 ADRP X8, 0x2382000
	0x01D736C4 LDR X8, [X8 + 0xED8]
	0x01D736C8 ADRP X9, 0x2382000
	0x01D736CC LDR X10, [X8]
	0x01D736D0 LDR X9, [X9 + 0xEE0]
	0x01D736D4 LDR X8, [X9]
	0x01D736D8 STP X10, X8, [X23 + 0x10]
	0x01D736DC LDR X24, [X19 + 0x20]
	0x01D736E0 CBZ X24, 0x1D73BE8
	0x01D736E4 ADRP X10, 0x2381000
	0x01D736E8 LDR X8, [X24]
	0x01D736EC LDR X10, [X10 + 0x818]
	0x01D736F0 LDRH W9, [X8 + 0x12E]
	0x01D736F4 LDR X1, [X10]
	0x01D736F8 CBZ X9, 0x1D7371C
	0x01D736FC LDR X10, [X8 + 0xB0]
	0x01D73700 ADD X10, X10, 0x8
	0x01D73704 LDUR X11, [X10 - 0x8]
	0x01D73708 CMP X11, X1
	0x01D7370C B.EQ 0x1D73744
	0x01D73710 SUBS X9, X9, 0x1
	0x01D73714 ADD X10, X10, 0x10
	0x01D73718 B.NE 0x1D73704
	0x01D7371C MOVZ W2, 0xA
	0x01D73720 MOV X0, X24
	0x01D73724 BL 0x1C5C788
	0x01D73728 B 0x1D73754
	0x01D7372C LDR X8, [X19 + 0x28]
	0x01D73730 MOVN W26, 0x0
	0x01D73734 STR X8, [X31 + 0x8]
	0x01D73738 STR X31, [X19 + 0x28]
	0x01D7373C STR W26, [X19]
	0x01D73740 B 0x1D73830
	0x01D73744 LDR W9, [X10]
	0x01D73748 ADD W9, W9, 0xA
	0x01D7374C ADD X8, X8, W9, 0x4, SXTW
	0x01D73750 ADD X0, X8, 0x138
	0x01D73754 LDP X8, X1, [X0]
	0x01D73758 MOV X0, X24
	0x01D7375C BLR X8
	0x01D73760 STR X0, [X23 + 0x28]
	0x01D73764 CBZ X22, 0x1D73BEC
	0x01D73768 LDR X8, [X22]
	0x01D7376C LDR X1, [X8 + 0x40]
	0x01D73770 MOV X0, X23
	0x01D73774 BL 0x1C16E00
	0x01D73778 CBZ X0, 0x1D73BF0
	0x01D7377C LDR W8, [X22 + 0x18]
	0x01D73780 CBZ W8, 0x1D73BFC
	0x01D73784 STR X23, [X22 + 0x20]
	0x01D73788 CBZ X21, 0x1D73C00
	0x01D7378C ADRP X10, 0x2382000
	0x01D73790 LDR X8, [X21]
	0x01D73794 LDR X10, [X10 + 0xA18]
	0x01D73798 LDRH W9, [X8 + 0x12E]
	0x01D7379C LDR X1, [X10]
	0x01D737A0 CBZ X9, 0x1D737C4
	0x01D737A4 LDR X10, [X8 + 0xB0]
	0x01D737A8 ADD X10, X10, 0x8
	0x01D737AC LDUR X11, [X10 - 0x8]
	0x01D737B0 CMP X11, X1
	0x01D737B4 B.EQ 0x1D737D4
	0x01D737B8 SUBS X9, X9, 0x1
	0x01D737BC ADD X10, X10, 0x10
	0x01D737C0 B.NE 0x1D737AC
	0x01D737C4 MOVZ W2, 0x47
	0x01D737C8 MOV X0, X21
	0x01D737CC BL 0x1C5C788
	0x01D737D0 B 0x1D737E4
	0x01D737D4 LDR W9, [X10]
	0x01D737D8 ADD W9, W9, 0x47
	0x01D737DC ADD X8, X8, W9, 0x4, SXTW
	0x01D737E0 ADD X0, X8, 0x138
	0x01D737E4 LDP X8, X5, [X0]
	0x01D737E8 MOV X0, X21
	0x01D737EC MOV X1, X20
	0x01D737F0 MOV X2, X22
	0x01D737F4 MOV X3, X31
	0x01D737F8 MOV X4, X31
	0x01D737FC BLR X8
	0x01D73800 CBZ X0, 0x1D73C04
	0x01D73804 ADRP X8, 0x2382000
	0x01D73808 LDR X8, [X8 + 0xE28]
	0x01D7380C LDR X1, [X8]
	0x01D73810 BL 0x269F5D0
	0x01D73814 ADRP X8, 0x2382000
	0x01D73818 LDR X8, [X8 + 0xE20]
	0x01D7381C STR X0, [X31 + 0x8]
	0x01D73820 LDR X1, [X8]
	0x01D73824 ADD X0, X31, 0x8
	0x01D73828 BL 0x2677430
	0x01D7382C TBZ X0, 0x0, 0x1D73894
	0x01D73830 ADRP X8, 0x2382000
	0x01D73834 LDR X8, [X8 + 0xE18]
	0x01D73838 ADD X0, X31, 0x8
	0x01D7383C LDR X1, [X8]
	0x01D73840 BL 0x2677474
	0x01D73844 MOV X20, X0
	0x01D73848 CBZ X0, 0x1D73BD0
	0x01D7384C ADRP X10, 0x2382000
	0x01D73850 LDR X8, [X20]
	0x01D73854 LDR X10, [X10 + 0xE00]
	0x01D73858 LDRH W9, [X8 + 0x12E]
	0x01D7385C LDR X1, [X10]

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+192], X29
	003 Move [X31+200], X30
	004 Move [X31+208], X28
	005 Move [X31+216], X27
	006 Move [X31+224], X26
	007 Move [X31+232], X25
	008 Move [X31+240], X24
	009 Move [X31+248], X23
	010 Move [X31+256], X22
	011 Move [X31+264], X21
	012 Move [X31+272], X20
	013 Move [X31+280], X19
	014 Move X20, 0x2667000
	015 Move W8, [X20+2301]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {89}
	021 Move X0, 0x2382000
	022 Move X0, [X0+1624]
	023 Call 0x1C17CF4
	024 Move X0, 0x2384000
	025 Move X0, [X0+3568]
	026 Call 0x1C17CF4
	027 Move X0, 0x2384000
	028 Move X0, [X0+3576]
	029 Call 0x1C17CF4
	030 Move X0, 0x2384000
	031 Move X0, [X0+2976]
	032 Call 0x1C17CF4
	033 Move X0, 0x2384000
	034 Move X0, [X0+3440]
	035 Call 0x1C17CF4
	036 Move X0, 0x2384000
	037 Move X0, [X0+3584]
	038 Call 0x1C17CF4
	039 Move X0, 0x2384000
	040 Move X0, [X0+2584]
	041 Call 0x1C17CF4
	042 Move X0, 0x2382000
	043 Move X0, [X0+3584]
	044 Call 0x1C17CF4
	045 Move X0, 0x2384000
	046 Move X0, [X0+3448]
	047 Call 0x1C17CF4
	048 Move X0, 0x2384000
	049 Move X0, [X0+3456]
	050 Call 0x1C17CF4
	051 Move X0, 0x2382000
	052 Move X0, [X0+3608]
	053 Call 0x1C17CF4
	054 Move X0, 0x2384000
	055 Move X0, [X0+3464]
	056 Call 0x1C17CF4
	057 Move X0, 0x2384000
	058 Move X0, [X0+3472]
	059 Call 0x1C17CF4
	060 Move X0, 0x2384000
	061 Move X0, [X0+3488]
	062 Call 0x1C17CF4
	063 Move X0, 0x2384000
	064 Move X0, [X0+3496]
	065 Call 0x1C17CF4
	066 Move X0, 0x2384000
	067 Move X0, [X0+3592]
	068 Call 0x1C17CF4
	069 Move X0, 0x2384000
	070 Move X0, [X0+3600]
	071 Call 0x1C17CF4
	072 Move X0, 0x2384000
	073 Move X0, [X0+3608]
	074 Call 0x1C17CF4
	075 Move X0, 0x2384000
	076 Move X0, [X0+3616]
	077 Call 0x1C17CF4
	078 Move X0, 0x2384000
	079 Move X0, [X0+3624]
	080 Call 0x1C17CF4
	081 Move X0, 0x2384000
	082 Move X0, [X0+3632]
	083 Call 0x1C17CF4
	084 Move X0, 0x2384000
	085 Move X0, [X0+3640]
	086 Call 0x1C17CF4
	087 Move W8, 1
	088 Move [X20+2301], W8
	089 Move [X31+88], X31
	090 Move W23, [X19]
	091 Compare W23, 0
	092 JumpIfEqual {178}
	093 Move X8, [X19+32]
	094 Compare X8, 0
	095 JumpIfEqual {513}
	096 Move X9, 0x2384000
	097 Move X9, [X9+3592]
	098 Move W1, [X8+24]
	099 Move X0, [X9]
	100 Call 0x1C17D6C
	101 Move X8, [X19+32]
	102 Compare X8, 0
	103 JumpIfEqual {152}
	104 Move X27, 0x2384000
	105 Move X28, 0x2384000
	106 Move X29, 0x2384000
	107 Move X22, 0x2382000
	108 Move X26, 0x2384000
	109 Move X27, [X27+3600]
	110 Move X28, [X28+3640]
	111 Move X29, [X29+3632]
	112 Move X22, [X22+1624]
	113 Move X26, [X26+2584]
	114 Move X20, X0
	115 Move W24, 4
	116 NotImplemented "Instruction LDRSW not yet implemented."
	117 Subtract X25, X24, 4
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X0, [X27]
	120 Call 0x1C17F10
	121 Move X21, X0
	122 Move X1, X31
	123 Call StorageObjectId..ctor, X0
	124 Compare X21, 0
	125 JumpIfEqual {506}
	126 Move X8, [X28]
	127 Move [X21+16], X8
	128 Move X8, [X19+32]
	129 Compare X8, 0
	130 JumpIfEqual {503}
	131 Move W9, [X8+24]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X8, [X8]
	134 Move [X21+24], X8
	135 Move X8, [X29]
	136 Move [X21+40], X8
	137 Compare X20, 0
	138 JumpIfEqual {504}
	139 Move X8, [X20]
	140 Move X1, [X8+64]
	141 Move X0, X21
	142 Call 0x1C17E00
	143 Compare X0, 0
	144 JumpIfEqual {500}
	145 Move W8, [X20+24]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move [X20], X21
	148 Move X8, [X19+32]
	149 Add X24, X24, 1
	150 Compare X8, 0
	151 JumpIfNotEqual {116}
	152 Call 0x1C17F20
	153 Move X0, [X22]
	154 Move W8, [X0+224]
	155 Compare W8, 0
	156 JumpIfNotEqual {159}
	157 Call 0x1C17DFC
	158 Move X0, [X22]
	159 Move X8, [X0+184]
	160 Move X21, [X8+16]
	161 Compare X21, 0
	162 JumpIfEqual {514}
	163 Move X8, [X21]
	164 Move X22, [X19+40]
	165 Move X1, [X26]
	166 NotImplemented "Instruction LDRH not yet implemented."
	167 Compare X9, 0
	168 JumpIfEqual {175}
	169 Move X10, [X8+176]
	170 Add X10, X10, 8
	171 NotImplemented "Instruction LDUR not yet implemented."
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Subtract X9, X9, 1
	174 Add X10, X10, 16
	175 Move W2, 71
	176 Move X0, X21
	177 Call 0x1C5D788
	178 Move X8, [X19+48]
	179 Move TEMP, 0
	180 Not TEMP
	181 Move W23, TEMP
	182 Move [X31+88], X8
	183 Move [X19+48], X31
	184 Move [X19], W23
	185 Move W9, [X10]
	186 Add W9, W9, 71
	187 Add X8, X8, W9
	188 Add X0, X8, 312
	189 Move X8, [X0]
	190 Move X5, [X0+8]
	191 Move X0, X21
	192 Move X1, X22
	193 Move X2, X20
	194 Move X3, X31
	195 Move X4, X31
	196 NotImplemented "Instruction BLR not yet implemented."
	197 Compare X0, 0
	198 JumpIfEqual {515}
	199 Move X8, 0x2383000
	200 Move X8, [X8+3624]
	201 Move X1, [X8]
	202 Call Task`1<Object>.GetAwaiter, X0
	203 Move X8, 0x2383000
	204 Move X8, [X8+3616]
	205 Move [X31+88], X0
	206 Move X1, [X8]
	207 Add X0, X31, 88
	208 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	209 Move TEMP, X0
	210 And TEMP, TEMP, 1
	211 Compare TEMP, 1
	212 JumpIfNotEqual {246}
	213 Move X8, 0x2383000
	214 Move X8, [X8+3608]
	215 Add X0, X31, 88
	216 Move X1, [X8]
	217 Call TaskAwaiter`1<Object>.GetResult, X0
	218 Move X8, 0x2383000
	219 Move X8, [X8+3496]
	220 Move X21, X0
	221 Move X0, [X8]
	222 Call 0x1C17F10
	223 Move X8, 0x2383000
	224 Move X8, [X8+3488]
	225 Move X20, X0
	226 Move X1, [X8]
	227 Call List`1<ApiAvatarItem>..ctor, X0
	228 Compare X21, 0
	229 JumpIfEqual {508}
	230 Move X10, 0x2383000
	231 Move X8, [X21]
	232 Move X10, [X10+3584]
	233 NotImplemented "Instruction LDRH not yet implemented."
	234 Move X1, [X10]
	235 Compare X9, 0
	236 JumpIfEqual {243}
	237 Move X10, [X8+176]
	238 Add X10, X10, 8
	239 NotImplemented "Instruction LDUR not yet implemented."
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Subtract X9, X9, 1
	242 Add X10, X10, 16
	243 Move X0, X21
	244 Move W2, W31
	245 Call 0x1C5D788
	246 Move [X19], W31
	247 Move X8, [X31+88]
	248 Move [X19+48], X8
	249 Move X8, 0x2383000
	250 Move X8, [X8+2976]
	251 Move X0, [X8]
	252 Move W8, [X0+224]
	253 Compare W8, 0
	254 JumpIfNotEqual {256}
	255 Call 0x1C17DFC
	256 Move X8, 0x2383000
	257 Move X8, [X8+3568]
	258 Add X0, X19, 8
	259 Move X3, [X8]
	260 Add X1, X31, 88
	261 Move X2, X19
	262 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	263 NotImplemented "Instruction LDRSW not yet implemented."
	264 Add X8, X8, X9
	265 Add X0, X8, 312
	266 Move X8, [X0]
	267 Move X1, [X0+8]
	268 Move X0, X21
	269 NotImplemented "Instruction BLR not yet implemented."
	270 Move X21, X0
	271 Compare X0, 0
	272 JumpIfEqual {509}
	273 Move X10, 0x2383000
	274 Move X8, [X21]
	275 Move X10, [X10+3448]
	276 NotImplemented "Instruction LDRH not yet implemented."
	277 Move X1, [X10]
	278 Compare X9, 0
	279 JumpIfEqual {286}
	280 Move X10, [X8+176]
	281 Add X10, X10, 8
	282 NotImplemented "Instruction LDUR not yet implemented."
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Subtract X9, X9, 1
	285 Add X10, X10, 16
	286 Move X0, X21
	287 Move W2, W31
	288 Call 0x1C5D788
	289 NotImplemented "Instruction LDRSW not yet implemented."
	290 Add X8, X8, X9
	291 Add X0, X8, 312
	292 Move X8, [X0]
	293 Move X1, [X0+8]
	294 Move X0, X21
	295 NotImplemented "Instruction BLR not yet implemented."
	296 Move X21, X0
	297 Compare X0, 0
	298 JumpIfEqual {510}
	299 Move X24, 0x2381000
	300 Move X25, 0x2383000
	301 Move X26, 0x2383000
	302 Move X27, 0x2383000
	303 Move X28, 0x2383000
	304 Move X24, [X24+3608]
	305 Move X25, [X25+3456]
	306 Move X26, [X26+3440]
	307 Move X27, [X27+3464]
	308 Move X28, [X28+3472]
	309 Move W29, 48
	310 Move X8, [X21]
	311 Move X1, [X24]
	312 NotImplemented "Instruction LDRH not yet implemented."
	313 Compare X9, 0
	314 JumpIfEqual {321}
	315 Move X10, [X8+176]
	316 Add X10, X10, 8
	317 NotImplemented "Instruction LDUR not yet implemented."
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Subtract X9, X9, 1
	320 Add X10, X10, 16
	321 Move X0, X21
	322 Move W2, W31
	323 Call 0x1C5D788
	324 NotImplemented "Instruction LDRSW not yet implemented."
	325 Add X8, X8, X9
	326 Add X0, X8, 312
	327 Move X8, [X0]
	328 Move X1, [X0+8]
	329 Move X0, X21
	330 NotImplemented "Instruction BLR not yet implemented."
	331 Move TEMP, X0
	332 And TEMP, TEMP, 1
	333 Compare TEMP, 1
	334 JumpIfNotEqual {430}
	335 Move X8, [X21]
	336 Move X1, [X25]
	337 NotImplemented "Instruction LDRH not yet implemented."
	338 Compare X9, 0
	339 JumpIfEqual {346}
	340 Move X10, [X8+176]
	341 Add X10, X10, 8
	342 NotImplemented "Instruction LDUR not yet implemented."
	343 NotImplemented "Instruction CMP not yet implemented."
	344 Subtract X9, X9, 1
	345 Add X10, X10, 16
	346 Move X0, X21
	347 Move W2, W31
	348 Call 0x1C5D788
	349 NotImplemented "Instruction LDRSW not yet implemented."
	350 Add X8, X8, X9
	351 Add X0, X8, 312
	352 Move X8, [X0]
	353 Move X1, [X0+8]
	354 Move X0, X21
	355 NotImplemented "Instruction BLR not yet implemented."
	356 Move X22, X0
	357 Compare X0, 0
	358 JumpIfEqual {498}
	359 Move X8, [X22]
	360 Move X1, [X26]
	361 NotImplemented "Instruction LDRH not yet implemented."
	362 Compare X9, 0
	363 JumpIfEqual {370}
	364 Move X10, [X8+176]
	365 Add X10, X10, 8
	366 NotImplemented "Instruction LDUR not yet implemented."
	367 NotImplemented "Instruction CMP not yet implemented."
	368 Subtract X9, X9, 1
	369 Add X10, X10, 16
	370 Move W2, 7
	371 Move X0, X22
	372 Call 0x1C5D788
	373 Move W9, [X10]
	374 Add W9, W9, 7
	375 Add X8, X8, W9
	376 Add X0, X8, 312
	377 Move X8, [X0]
	378 Move X1, [X0+8]
	379 Move X0, X22
	380 NotImplemented "Instruction BLR not yet implemented."
	381 Move X1, [X27]
	382 Add X8, X31, 144
	383 Call 0x220ECD0, X0
	384 Move V0, [X31+144]
	385 Move V1, [X31+160]
	386 Move V2, [X31+11]
	387 Move [X31+32], V0
	388 Move [X31+40], V1
	389 Move [X31+4], V2
	390 Compare X20, 0
	391 JumpIfEqual {499}
	392 Move V0, [X31+32]
	393 Move V1, [X31+48]
	394 Move V2, [X31+4]
	395 Move X10, [X28]
	396 Move [X31+96], V0
	397 Move [X31+104], V1
	398 Move [X31+8], V2
	399 Move W9, [X20+28]
	400 Move X8, [X20+16]
	401 Add W9, W9, 1
	402 Move [X20+28], W9
	403 Compare X8, 0
	404 JumpIfEqual {497}
	405 NotImplemented "Instruction LDRSW not yet implemented."
	406 Move W11, [X8+24]
	407 NotImplemented "Instruction CMP not yet implemented."
	408 Add W10, W9, 1
	409 Move [X20+24], W10
	410 Move V1, [X31+112]
	411 Move V0, [X31+128]
	412 Move V2, [X31+6]
	413 NotImplemented "Instruction NOP not yet implemented."
	414 NotImplemented "Instruction MADD not yet implemented."
	415 Move [X8+48], V1
	416 Move [X8+56], V0
	417 Move [X8+2], V2
	418 Move X8, [X10+32]
	419 Move V0, [X31+96]
	420 Move V1, [X31+112]
	421 Move V2, [X31+8]
	422 Move X8, [X8+192]
	423 Move X2, [X8+112]
	424 Move [X31+144], V0
	425 Move [X31+152], V1
	426 Move [X31+11], V2
	427 Add X1, X31, 144
	428 Move X0, X20
	429 Call List`1<ApiAvatarItem>.AddWithResize, X0, X1
	430 Move X22, X31
	431 Move W24, 9
	432 Move TEMP, X23
	433 And TEMP, TEMP, -2147483648
	434 Compare TEMP, -2147483648
	435 JumpIfNotEqual {461}
	436 Compare X21, 0
	437 JumpIfEqual {461}
	438 Move X10, 0x2381000
	439 Move X8, [X21]
	440 Move X10, [X10+3584]
	441 NotImplemented "Instruction LDRH not yet implemented."
	442 Move X1, [X10]
	443 Compare X9, 0
	444 JumpIfEqual {451}
	445 Move X10, [X8+176]
	446 Add X10, X10, 8
	447 NotImplemented "Instruction LDUR not yet implemented."
	448 NotImplemented "Instruction CMP not yet implemented."
	449 Subtract X9, X9, 1
	450 Add X10, X10, 16
	451 Move X0, X21
	452 Move W2, W31
	453 Call 0x1C5D788
	454 NotImplemented "Instruction LDRSW not yet implemented."
	455 Add X8, X8, X9
	456 Add X0, X8, 312
	457 Move X8, [X0]
	458 Move X1, [X0+8]
	459 Move X0, X21
	460 NotImplemented "Instruction BLR not yet implemented."
	461 Compare X22, 0
	462 JumpIfNotEqual {511}
	463 Compare W24, 0
	464 JumpIfEqual {466}
	465 NotImplemented "Instruction CMP not yet implemented."
	466 Move TEMP, 1
	467 Not TEMP
	468 Move W8, TEMP
	469 Move [X19+8], W8
	470 Move X8, 0x2383000
	471 Move X8, [X8+2976]
	472 Move X0, [X8]
	473 Move W8, [X0+224]
	474 Compare W8, 0
	475 JumpIfNotEqual {477}
	476 Call 0x1C17DFC
	477 Move X8, 0x2383000
	478 Move X8, [X8+3576]
	479 Move X0, X19
	480 Move X1, X20
	481 Move X2, [X8]
	482 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	483 Move X20, [X31+272]
	484 Move X19, [X31+280]
	485 Move X22, [X31+256]
	486 Move X21, [X31+264]
	487 Move X24, [X31+240]
	488 Move X23, [X31+248]
	489 Move X26, [X31+224]
	490 Move X25, [X31+232]
	491 Move X28, [X31+208]
	492 Move X27, [X31+216]
	493 Move X29, [X31+192]
	494 Move X30, [X31+200]
	495 Add X31, X31, 288
	496 Return 
	497 Call 0x1C17F20
	498 Call 0x1C17F20
	499 Call 0x1C17F20
	500 Call 0x1C17F44
	501 Move X1, X31
	502 Call 0x1C17DEC
	503 Call 0x1C17F20
	504 Call 0x1C17F20
	505 Call 0x1C17F28
	506 Call 0x1C17F20
	507 Call 0x1C17F28
	508 Call 0x1C17F20
	509 Call 0x1C17F20
	510 Call 0x1C17F20
	511 Move X0, X22
	512 Call 0x1C17F18
	513 Call 0x1C17F20
	514 Call 0x1C17F20
	515 Call 0x1C17F20
	516 Move [X31+16], X1
	517 Move [X31+24], X0
	518 NotImplemented "Instruction CMP not yet implemented."
	519 Call 0x3EB2AD0
	520 Move X22, [X0]
	521 Call 0x3EB2AE0
	522 Move W24, W31
	523 Move TEMP, X23
	524 And TEMP, TEMP, -2147483648
	525 Compare TEMP, -2147483648
	526 JumpIfEqual {436}
	527 Move [X31+16], X1
	528 Move [X31+24], X0
	529 Move X22, X31
	530 Move TEMP, X23
	531 And TEMP, TEMP, -2147483648
	532 Compare TEMP, -2147483648
	533 JumpIfNotEqual {559}
	534 Compare X21, 0
	535 JumpIfEqual {559}
	536 Move X10, 0x2381000
	537 Move X8, [X21]
	538 Move X10, [X10+3584]
	539 NotImplemented "Instruction LDRH not yet implemented."
	540 Move X1, [X10]
	541 Compare X9, 0
	542 JumpIfEqual {549}
	543 Move X10, [X8+176]
	544 Add X10, X10, 8
	545 NotImplemented "Instruction LDUR not yet implemented."
	546 NotImplemented "Instruction CMP not yet implemented."
	547 Subtract X9, X9, 1
	548 Add X10, X10, 16
	549 Move X0, X21
	550 Move W2, W31
	551 Call 0x1C5D788
	552 NotImplemented "Instruction LDRSW not yet implemented."
	553 Add X8, X8, X9
	554 Add X0, X8, 312
	555 Move X8, [X0]
	556 Move X1, [X0+8]
	557 Move X0, X21
	558 NotImplemented "Instruction BLR not yet implemented."
	559 Compare X22, 0
	560 JumpIfNotEqual {606}
	561 Move X8, [X31+16]
	562 NotImplemented "Instruction CMP not yet implemented."
	563 Move X0, [X31+24]
	564 Call 0x3EB2AD0
	565 Move X21, X0
	566 Move X0, 0x2381000
	567 Move X0, [X0+2000]
	568 Call 0x1C17D08
	569 Move X8, [X21]
	570 Move X1, [X8]
	571 Call 0x1C18270
	572 Move TEMP, X0
	573 And TEMP, TEMP, 1
	574 Compare TEMP, 1
	575 JumpIfNotEqual {608}
	576 Move X21, [X21]
	577 Call 0x3EB2AE0
	578 Move X0, 0x2381000
	579 Move X0, [X0+1928]
	580 Call 0x1C17D08
	581 Move W8, [X0+224]
	582 Compare W8, 0
	583 JumpIfNotEqual {585}
	584 Call 0x1C17DFC
	585 Move X0, 0x2383000
	586 Move X0, [X0+3536]
	587 Call 0x1C17D08
	588 Move X22, X0
	589 Move X0, 0x2383000
	590 Move X0, [X0+2680]
	591 Call 0x1C17D08
	592 Move X23, X0
	593 Move X0, 0x2383000
	594 Move X0, [X0+3544]
	595 Call 0x1C17D08
	596 Move X5, X0
	597 Move W0, 64
	598 Move W6, 476
	599 Move X1, X22
	600 Move X2, X21
	601 Move X3, X31
	602 Move X4, X23
	603 Move X7, X31
	604 Call Log.Error, X0, X1, X2, X3, X4, X5, X6
	605 Move X9, [X31+24]
	606 Move X0, X22
	607 Call 0x1C17F18
	608 Move W0, 8
	609 Call 0x3EB2AF0
	610 Move X8, [X21]
	611 Move [X0], X8
	612 Move X1, 0x2142000
	613 Add X1, X1, 3672
	614 Move X2, X31
	615 Call 0x3EB2B00
	616 Move X20, X1
	617 Move X21, X0
	618 Move [X31+16], X1
	619 Move [X31+24], X0
	620 Move TEMP, X23
	621 And TEMP, TEMP, -2147483648
	622 Compare TEMP, -2147483648
	623 JumpIfEqual {534}
	624 Move X20, X1
	625 Move X21, X0
	626 Call 0x3EB2AE0
	627 Move X8, X20
	628 Move X9, X21
	629 Move X8, X1
	630 Move X9, X0
	631 NotImplemented "Instruction CMP not yet implemented."
	632 Move X0, X9
	633 Call 0x3EB2AD0
	634 Move X20, X0
	635 Move X0, 0x2381000
	636 Move X0, [X0+2000]
	637 Call 0x1C17D08
	638 Move X8, [X20]
	639 Move X1, [X8]
	640 Call 0x1C18270
	641 Move TEMP, X0
	642 And TEMP, TEMP, 1
	643 Compare TEMP, 1
	644 JumpIfNotEqual {666}
	645 Move X20, [X20]
	646 Call 0x3EB2AE0
	647 Move TEMP, 1
	648 Not TEMP
	649 Move W8, TEMP
	650 Move [X19+8], W8
	651 Move X0, 0x2383000
	652 Move X0, [X0+2976]
	653 Call 0x1C17D08
	654 Move W8, [X0+224]
	655 Compare W8, 0
	656 JumpIfNotEqual {658}
	657 Call 0x1C17DFC
	658 Move X0, 0x2383000
	659 Move X0, [X0+3648]
	660 Call 0x1C17D08
	661 Move X2, X0
	662 Move X0, X19
	663 Move X1, X20
	664 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	665 Move X19, X9
	666 Move W0, 8
	667 Call 0x3EB2AF0
	668 Move X8, [X20]
	669 Move [X0], X8
	670 Move X1, 0x2142000
	671 Add X1, X1, 3672
	672 Move X2, X31
	673 Call 0x3EB2B00
	674 Move X19, X0
	675 Call 0x3EB2AE0
	676 Move X0, X19
	677 Call 0x1D2D690
	678 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x01D73860 CBZ X9, 0x1D73884
	0x01D73864 LDR X10, [X8 + 0xB0]
	0x01D73868 ADD X10, X10, 0x8
	0x01D7386C LDUR X11, [X10 - 0x8]
	0x01D73870 CMP X11, X1
	0x01D73874 B.EQ 0x1D738D0
	0x01D73878 SUBS X9, X9, 0x1
	0x01D7387C ADD X10, X10, 0x10
	0x01D73880 B.NE 0x1D7386C
	0x01D73884 MOV X0, X20
	0x01D73888 MOV W2, W31
	0x01D7388C BL 0x1C5C788
	0x01D73890 B 0x1D738DC
	0x01D73894 STR W31, [X19]
	0x01D73898 LDR X8, [X31 + 0x8]
	0x01D7389C STR X8, [X19 + 0x28]
	0x01D738A0 LDR X0, [X25]
	0x01D738A4 LDR W8, [X0 + 0xE0]
	0x01D738A8 CBNZ W8, 0x1D738B0
	0x01D738AC BL 0x1C16DFC
	0x01D738B0 ADRP X8, 0x2382000
	0x01D738B4 LDR X8, [X8 + 0xEB8]
	0x01D738B8 ADD X0, X19, 0x8
	0x01D738BC LDR X3, [X8]
	0x01D738C0 ADD X1, X31, 0x8
	0x01D738C4 MOV X2, X19
	0x01D738C8 BL 0x1FAA100
	0x01D738CC B 0x1D73BB8
	0x01D738D0 LDRSW X9, [X10]
	0x01D738D4 ADD X8, X8, X9, 0x4, LSL
	0x01D738D8 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2666000
	007 Move X21, 0x2383000
	008 Move W8, [X22+2302]
	009 Move X21, [X21+2976]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x2383000
	017 Move X0, [X0+3656]
	018 Call 0x1C17CF4
	019 Move X0, 0x2383000
	020 Move X0, [X0+2976]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2302], W8
	024 Move X0, [X21]
	025 Move X21, 0x2383000
	026 Move W8, [X0+224]
	027 Move X21, [X21+3656]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

