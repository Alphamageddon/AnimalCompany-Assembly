Type: AnimalCompany.API.AnimalCompanyAPI/<GetInventoryAsync>d__29

Method: System.Void MoveNext()

Disassembly:
	0x01D74500 LDUR X11, [X10 - 0x8]
	0x01D74504 CMP X11, X1
	0x01D74508 B.EQ 0x1D74528
	0x01D7450C SUBS X9, X9, 0x1
	0x01D74510 ADD X10, X10, 0x10
	0x01D74514 B.NE 0x1D74500
	0x01D74518 MOV X0, X21
	0x01D7451C MOV W2, W31
	0x01D74520 BL 0x1C5C788
	0x01D74524 B 0x1D74534
	0x01D74528 LDRSW X9, [X10]
	0x01D7452C ADD X8, X8, X9, 0x4, LSL
	0x01D74530 ADD X0, X8, 0x138
	0x01D74534 LDP X8, X1, [X0]
	0x01D74538 MOV X0, X21
	0x01D7453C BLR X8
	0x01D74540 CBNZ X23, 0x1D745DC
	0x01D74544 CBZ W22, 0x1D74550
	0x01D74548 CMP W22, 0x7
	0x01D7454C B.NE 0x1D745A4
	0x01D74550 CBZ X20, 0x1D745EC
	0x01D74554 ADRP X8, 0x2381000
	0x01D74558 LDR X8, [X8 + 0xF30]
	0x01D7455C LDR X1, [X8]
	0x01D74560 MOV X0, X20
	0x01D74564 BL 0x2F55124
	0x01D74568 MOVN W8, 0x1
	0x01D7456C STR W8, [X19], #0x8
	0x01D74570 ADRP X8, 0x2381000
	0x01D74574 LDR X8, [X8 + 0xB60]
	0x01D74578 MOV X20, X0
	0x01D7457C LDR X0, [X8]
	0x01D74580 LDR W8, [X0 + 0xE0]
	0x01D74584 CBNZ W8, 0x1D7458C
	0x01D74588 BL 0x1C16DFC
	0x01D7458C ADRP X8, 0x2381000
	0x01D74590 LDR X8, [X8 + 0xF18]
	0x01D74594 MOV X0, X19
	0x01D74598 MOV X1, X20
	0x01D7459C LDR X2, [X8]
	0x01D745A0 BL 0x26322B0
	0x01D745A4 LDP X20, X19, [X31 + 0x120]
	0x01D745A8 LDP X22, X21, [X31 + 0x110]
	0x01D745AC LDP X24, X23, [X31 + 0x100]
	0x01D745B0 LDP X26, X25, [X31 + 0xF0]
	0x01D745B4 LDP X28, X27, [X31 + 0xE0]
	0x01D745B8 LDP X29, X30, [X31 + 0xD0]
	0x01D745BC ADD X31, X31, 0x130
	0x01D745C0 RET
	0x01D745C4 BL 0x1C16F20
	0x01D745C8 BL 0x1C16F20
	0x01D745CC BL 0x1C16F20
	0x01D745D0 BL 0x1C16F20
	0x01D745D4 BL 0x1C16F20
	0x01D745D8 BL 0x1C16F20
	0x01D745DC MOV X0, X23
	0x01D745E0 BL 0x1C16F18
	0x01D745E4 BL 0x1C16F20
	0x01D745E8 BL 0x1C16F20
	0x01D745EC BL 0x1C16F20
	0x01D745F0 B 0x1D74624
	0x01D745F4 B 0x1D74624
	0x01D745F8 B 0x1D74624
	0x01D745FC B 0x1D74624
	0x01D74600 B 0x1D74624
	0x01D74604 B 0x1D74624
	0x01D74608 B 0x1D74624
	0x01D7460C B 0x1D74654
	0x01D74610 B 0x1D74630
	0x01D74614 B 0x1D74624
	0x01D74618 B 0x1D74630
	0x01D7461C B 0x1D74630
	0x01D74620 B 0x1D74624
	0x01D74624 MOV X22, X1
	0x01D74628 STR X0, [X31 + 0x8]
	0x01D7462C B 0x1D747DC
	0x01D74630 MOV X22, X1
	0x01D74634 STR X0, [X31 + 0x8]
	0x01D74638 B 0x1D746EC
	0x01D7463C B 0x1D74654
	0x01D74640 B 0x1D74654
	0x01D74644 B 0x1D74654
	0x01D74648 B 0x1D74654
	0x01D7464C B 0x1D74654
	0x01D74650 B 0x1D74654
	0x01D74654 MOV X22, X1
	0x01D74658 CMP W22, 0x1
	0x01D7465C B.NE 0x1D74678
	0x01D74660 BL 0x3EB1AD0
	0x01D74664 LDR X23, [X0]
	0x01D74668 BL 0x3EB1AE0
	0x01D7466C MOV W22, W31
	0x01D74670 TBNZ X24, 0x1F, 0x1D744DC
	0x01D74674 B 0x1D74540
	0x01D74678 STR X0, [X31 + 0x8]
	0x01D7467C MOV X23, X31
	0x01D74680 TBZ X24, 0x1F, 0x1D746E8
	0x01D74684 CBZ X21, 0x1D746E8
	0x01D74688 ADRP X10, 0x237F000
	0x01D7468C LDR X8, [X21]
	0x01D74690 LDR X10, [X10 + 0xE00]
	0x01D74694 LDRH W9, [X8 + 0x12E]
	0x01D74698 LDR X1, [X10]
	0x01D7469C CBZ X9, 0x1D746C0
	0x01D746A0 LDR X10, [X8 + 0xB0]
	0x01D746A4 ADD X10, X10, 0x8
	0x01D746A8 LDUR X11, [X10 - 0x8]
	0x01D746AC CMP X11, X1
	0x01D746B0 B.EQ 0x1D746D0
	0x01D746B4 SUBS X9, X9, 0x1
	0x01D746B8 ADD X10, X10, 0x10
	0x01D746BC B.NE 0x1D746A8
	0x01D746C0 MOV X0, X21
	0x01D746C4 MOV W2, W31
	0x01D746C8 BL 0x1C5C788
	0x01D746CC B 0x1D746DC
	0x01D746D0 LDRSW X9, [X10]
	0x01D746D4 ADD X8, X8, X9, 0x4, LSL
	0x01D746D8 ADD X0, X8, 0x138
	0x01D746DC LDP X8, X1, [X0]
	0x01D746E0 MOV X0, X21
	0x01D746E4 BLR X8
	0x01D746E8 CBNZ X23, 0x1D74790
	0x01D746EC CMP W22, 0x1
	0x01D746F0 B.NE 0x1D747DC
	0x01D746F4 LDR X0, [X31 + 0x8]
	0x01D746F8 BL 0x3EB1AD0
	0x01D746FC MOV X21, X0
	0x01D74700 ADRP X0, 0x237F000
	0x01D74704 LDR X0, [X0 + 0x7D0]
	0x01D74708 BL 0x1C16D08
	0x01D7470C LDR X8, [X21]
	0x01D74710 LDR X1, [X8]
	0x01D74714 BL 0x1C17270
	0x01D74718 TBZ X0, 0x0, 0x1D74798
	0x01D7471C LDR X21, [X21]
	0x01D74720 BL 0x3EB1AE0
	0x01D74724 ADRP X0, 0x237F000
	0x01D74728 LDR X0, [X0 + 0x788]
	0x01D7472C BL 0x1C16D08
	0x01D74730 LDR W8, [X0 + 0xE0]
	0x01D74734 CBNZ W8, 0x1D7473C
	0x01D74738 BL 0x1C16DFC
	0x01D7473C ADRP X0, 0x2381000
	0x01D74740 LDR X0, [X0 + 0xF50]
	0x01D74744 BL 0x1C16D08
	0x01D74748 MOV X22, X0
	0x01D7474C ADRP X0, 0x2381000
	0x01D74750 LDR X0, [X0 + 0xA78]
	0x01D74754 BL 0x1C16D08
	0x01D74758 MOV X23, X0
	0x01D7475C ADRP X0, 0x2381000
	0x01D74760 LDR X0, [X0 + 0xF58]
	0x01D74764 BL 0x1C16D08
	0x01D74768 MOV X5, X0
	0x01D7476C MOVZ W0, 0x40
	0x01D74770 MOVZ W6, 0x19C
	0x01D74774 MOV X1, X22
	0x01D74778 MOV X2, X21
	0x01D7477C MOV X3, X31
	0x01D74780 MOV X4, X23
	0x01D74784 MOV X7, X31
	0x01D74788 BL 0x35C2674
	0x01D7478C B 0x1D74550
	0x01D74790 MOV X0, X23
	0x01D74794 BL 0x1C16F18
	0x01D74798 MOVZ W0, 0x8
	0x01D7479C BL 0x3EB1AF0
	0x01D747A0 LDR X8, [X21]
	0x01D747A4 STR X8, [X0]
	0x01D747A8 ADRP X1, 0x2140000
	0x01D747AC ADD X1, X1, 0xE58
	0x01D747B0 MOV X2, X31
	0x01D747B4 BL 0x3EB1B00
	0x01D747B8 B 0x1D74874
	0x01D747BC B 0x1D74624
	0x01D747C0 MOV X22, X1
	0x01D747C4 STR X0, [X31 + 0x8]
	0x01D747C8 TBNZ X24, 0x1F, 0x1D74684
	0x01D747CC B 0x1D746E8
	0x01D747D0 MOV X22, X1
	0x01D747D4 STR X0, [X31 + 0x8]
	0x01D747D8 BL 0x3EB1AE0
	0x01D747DC CMP W22, 0x1
	0x01D747E0 B.NE 0x1D7487C
	0x01D747E4 LDR X0, [X31 + 0x8]
	0x01D747E8 BL 0x3EB1AD0
	0x01D747EC MOV X20, X0
	0x01D747F0 ADRP X0, 0x237F000
	0x01D747F4 LDR X0, [X0 + 0x7D0]
	0x01D747F8 BL 0x1C16D08
	0x01D747FC LDR X8, [X20]
	0x01D74800 LDR X1, [X8]
	0x01D74804 BL 0x1C17270
	0x01D74808 TBZ X0, 0x0, 0x1D74854
	0x01D7480C LDR X20, [X20]
	0x01D74810 BL 0x3EB1AE0
	0x01D74814 MOVN W8, 0x1
	0x01D74818 STR W8, [X19], #0x8
	0x01D7481C ADRP X0, 0x2381000
	0x01D74820 LDR X0, [X0 + 0xB60]
	0x01D74824 BL 0x1C16D08
	0x01D74828 LDR W8, [X0 + 0xE0]
	0x01D7482C CBNZ W8, 0x1D74834
	0x01D74830 BL 0x1C16DFC
	0x01D74834 ADRP X0, 0x2381000
	0x01D74838 LDR X0, [X0 + 0xF60]
	0x01D7483C BL 0x1C16D08
	0x01D74840 MOV X2, X0
	0x01D74844 MOV X0, X19
	0x01D74848 MOV X1, X20
	0x01D7484C BL 0x26324C8
	0x01D74850 B 0x1D745A4
	0x01D74854 MOVZ W0, 0x8
	0x01D74858 BL 0x3EB1AF0
	0x01D7485C LDR X8, [X20]
	0x01D74860 STR X8, [X0]
	0x01D74864 ADRP X1, 0x2140000
	0x01D74868 ADD X1, X1, 0xE58
	0x01D7486C MOV X2, X31
	0x01D74870 BL 0x3EB1B00
	0x01D74874 STR X0, [X31 + 0x8]
	0x01D74878 BL 0x3EB1AE0
	0x01D7487C LDR X0, [X31 + 0x8]
	0x01D74880 BL 0x1D2C690
	0x01D74884 BL 0x1990590
	0x01D74888 B 0x1D74624
	0x01D7488C STR X30, [X31 - 0x30]!
	0x01D74890 STP X22, X21, [X31 + 0x10]
	0x01D74894 STP X20, X19, [X31 + 0x20]
	0x01D74898 ADRP X22, 0x2664000
	0x01D7489C ADRP X21, 0x2381000
	0x01D748A0 LDRB W8, [X22 + 0x904]
	0x01D748A4 LDR X21, [X21 + 0xB60]
	0x01D748A8 MOV X19, X1
	0x01D748AC MOV X20, X0
	0x01D748B0 TBNZ X8, 0x0, 0x1D748D4
	0x01D748B4 ADRP X0, 0x2381000
	0x01D748B8 LDR X0, [X0 + 0xF68]
	0x01D748BC BL 0x1C16CF4
	0x01D748C0 ADRP X0, 0x2381000
	0x01D748C4 LDR X0, [X0 + 0xB60]
	0x01D748C8 BL 0x1C16CF4
	0x01D748CC MOVZ W8, 0x1
	0x01D748D0 STRB W8, [X22 + 0x904]
	0x01D748D4 LDR X0, [X21]
	0x01D748D8 ADRP X21, 0x2381000
	0x01D748DC LDR W8, [X0 + 0xE0]
	0x01D748E0 LDR X21, [X21 + 0xF68]
	0x01D748E4 CBNZ W8, 0x1D748EC
	0x01D748E8 BL 0x1C16DFC
	0x01D748EC LDR X2, [X21]
	0x01D748F0 ADD X0, X20, 0x8
	0x01D748F4 MOV X1, X19
	0x01D748F8 LDP X20, X19, [X31 + 0x20]
	0x01D748FC LDP X22, X21, [X31 + 0x10]
	0x01D74900 LDR X30, [X31], #0x30
	0x01D74904 B 0x2632228
	0x01D74908 SUB X31, X31, 0xA0
	0x01D7490C STP X30, X25, [X31 + 0x60]
	0x01D74910 STP X24, X23, [X31 + 0x70]
	0x01D74914 STP X22, X21, [X31 + 0x80]
	0x01D74918 STP X20, X19, [X31 + 0x90]
	0x01D7491C ADRP X20, 0x2664000
	0x01D74920 LDRB W8, [X20 + 0x905]
	0x01D74924 MOV X19, X0
	0x01D74928 TBNZ X8, 0x0, 0x1D749DC
	0x01D7492C ADRP X0, 0x237F000
	0x01D74930 LDR X0, [X0 + 0x658]
	0x01D74934 BL 0x1C16CF4
	0x01D74938 ADRP X0, 0x2381000
	0x01D7493C LDR X0, [X0 + 0xF70]
	0x01D74940 BL 0x1C16CF4
	0x01D74944 ADRP X0, 0x2381000
	0x01D74948 LDR X0, [X0 + 0xF78]
	0x01D7494C BL 0x1C16CF4
	0x01D74950 ADRP X0, 0x2381000
	0x01D74954 LDR X0, [X0 + 0xBC0]
	0x01D74958 BL 0x1C16CF4
	0x01D7495C ADRP X0, 0x2381000
	0x01D74960 LDR X0, [X0 + 0xF80]
	0x01D74964 BL 0x1C16CF4
	0x01D74968 ADRP X0, 0x2381000
	0x01D7496C LDR X0, [X0 + 0xA18]
	0x01D74970 BL 0x1C16CF4
	0x01D74974 ADRP X0, 0x2381000
	0x01D74978 LDR X0, [X0 + 0xF88]
	0x01D7497C BL 0x1C16CF4
	0x01D74980 ADRP X0, 0x2381000
	0x01D74984 LDR X0, [X0 + 0xF90]
	0x01D74988 BL 0x1C16CF4
	0x01D7498C ADRP X0, 0x2381000
	0x01D74990 LDR X0, [X0 + 0xF98]
	0x01D74994 BL 0x1C16CF4
	0x01D74998 ADRP X0, 0x2381000
	0x01D7499C LDR X0, [X0 + 0xFA0]
	0x01D749A0 BL 0x1C16CF4
	0x01D749A4 ADRP X0, 0x2381000
	0x01D749A8 LDR X0, [X0 + 0xFA8]
	0x01D749AC BL 0x1C16CF4
	0x01D749B0 ADRP X0, 0x2381000
	0x01D749B4 LDR X0, [X0 + 0xFB0]
	0x01D749B8 BL 0x1C16CF4
	0x01D749BC ADRP X0, 0x2381000
	0x01D749C0 LDR X0, [X0 + 0xAA0]
	0x01D749C4 BL 0x1C16CF4
	0x01D749C8 ADRP X0, 0x2381000
	0x01D749CC LDR X0, [X0 + 0xFB8]
	0x01D749D0 BL 0x1C16CF4
	0x01D749D4 MOVZ W8, 0x1
	0x01D749D8 STRB W8, [X20 + 0x905]
	0x01D749DC STR X31, [X31 + 0x18]
	0x01D749E0 ADRP X25, 0x2381000
	0x01D749E4 LDR W8, [X19]
	0x01D749E8 LDR X25, [X25 + 0xBC0]
	0x01D749EC CBZ W8, 0x1D74A98
	0x01D749F0 ADRP X8, 0x2381000
	0x01D749F4 LDR X8, [X8 + 0xF88]
	0x01D749F8 LDR X9, [X19 + 0x20]
	0x01D749FC LDR X0, [X8]
	0x01D74A00 STR X9, [X31 + 0x40]
	0x01D74A04 ADD X1, X31, 0x40
	0x01D74A08 BL 0x1C16E04
	0x01D74A0C MOV X1, X31
	0x01D74A10 BL 0x3483BE4
	0x01D74A14 ADRP X21, 0x237F000
	0x01D74A18 LDR X21, [X21 + 0x658]
	0x01D74A1C MOV X20, X0
	0x01D74A20 LDR X0, [X21]
	0x01D74A24 LDR W8, [X0 + 0xE0]
	0x01D74A28 CBNZ W8, 0x1D74A34
	0x01D74A2C BL 0x1C16DFC
	0x01D74A30 LDR X0, [X21]
	0x01D74A34 LDR X8, [X0 + 0xB8]
	0x01D74A38 LDR X21, [X8 + 0x10]
	0x01D74A3C CBZ X21, 0x1D74C78
	0x01D74A40 ADRP X9, 0x2381000
	0x01D74A44 ADRP X10, 0x2381000
	0x01D74A48 LDR X9, [X9 + 0xA18]
	0x01D74A4C LDR X10, [X10 + 0xFB8]
	0x01D74A50 LDR X8, [X21]
	0x01D74A54 LDP X23, X22, [X19 + 0x28]
	0x01D74A58 LDR X1, [X9]
	0x01D74A5C LDR X24, [X10]
	0x01D74A60 LDRH W9, [X8 + 0x12E]
	0x01D74A64 CBZ X9, 0x1D74A88
	0x01D74A68 LDR X10, [X8 + 0xB0]
	0x01D74A6C ADD X10, X10, 0x8
	0x01D74A70 LDUR X11, [X10 - 0x8]
	0x01D74A74 CMP X11, X1
	0x01D74A78 B.EQ 0x1D74AB0
	0x01D74A7C SUBS X9, X9, 0x1
	0x01D74A80 ADD X10, X10, 0x10
	0x01D74A84 B.NE 0x1D74A70
	0x01D74A88 MOVZ W2, 0x48
	0x01D74A8C MOV X0, X21
	0x01D74A90 BL 0x1C5C788
	0x01D74A94 B 0x1D74AC0
	0x01D74A98 LDR X8, [X19 + 0x38]
	0x01D74A9C MOVN W9, 0x0
	0x01D74AA0 STR X8, [X31 + 0x18]
	0x01D74AA4 STR X31, [X19 + 0x38]
	0x01D74AA8 STR W9, [X19]
	0x01D74AAC B 0x1D74BB0
	0x01D74AB0 LDR W9, [X10]
	0x01D74AB4 ADD W9, W9, 0x48
	0x01D74AB8 ADD X8, X8, W9, 0x4, SXTW
	0x01D74ABC ADD X0, X8, 0x138
	0x01D74AC0 LDP X8, X6, [X0]
	0x01D74AC4 MOV X0, X21
	0x01D74AC8 MOV X1, X23
	0x01D74ACC MOV X2, X24
	0x01D74AD0 MOV X3, X20
	0x01D74AD4 MOV X4, X31
	0x01D74AD8 MOV X5, X22
	0x01D74ADC BLR X8
	0x01D74AE0 ADRP X23, 0x2381000
	0x01D74AE4 LDR X23, [X23 + 0xAA0]
	0x01D74AE8 MOV X20, X0
	0x01D74AEC LDR X8, [X23]
	0x01D74AF0 LDR W9, [X8 + 0xE0]
	0x01D74AF4 CBNZ W9, 0x1D74B04
	0x01D74AF8 MOV X0, X8
	0x01D74AFC BL 0x1C16DFC
	0x01D74B00 LDR X8, [X23]
	0x01D74B04 LDR X9, [X8 + 0xB8]
	0x01D74B08 LDR X21, [X9 + 0x20]
	0x01D74B0C CBNZ X21, 0x1D74B64
	0x01D74B10 LDR W9, [X8 + 0xE0]
	0x01D74B14 CBNZ W9, 0x1D74B24
	0x01D74B18 MOV X0, X8
	0x01D74B1C BL 0x1C16DFC
	0x01D74B20 LDR X8, [X23]
	0x01D74B24 ADRP X9, 0x2381000
	0x01D74B28 LDR X8, [X8 + 0xB8]
	0x01D74B2C LDR X9, [X9 + 0xF80]
	0x01D74B30 LDR X22, [X8]
	0x01D74B34 LDR X0, [X9]
	0x01D74B38 BL 0x1C16F10
	0x01D74B3C ADRP X8, 0x2381000
	0x01D74B40 LDR X8, [X8 + 0xFB0]
	0x01D74B44 MOV X21, X0
	0x01D74B48 LDR X2, [X8]
	0x01D74B4C MOV X1, X22
	0x01D74B50 MOV X3, X31
	0x01D74B54 BL 0x2D31B18
	0x01D74B58 LDR X8, [X23]
	0x01D74B5C LDR X8, [X8 + 0xB8]
	0x01D74B60 STR X21, [X8 + 0x20]
	0x01D74B64 CBZ X20, 0x1D74C7C
	0x01D74B68 ADRP X8, 0x2381000
	0x01D74B6C LDR X8, [X8 + 0xFA0]
	0x01D74B70 LDR X2, [X8]
	0x01D74B74 MOV X0, X20
	0x01D74B78 MOV X1, X21
	0x01D74B7C BL 0x2138998
	0x01D74B80 CBZ X0, 0x1D74C80
	0x01D74B84 ADRP X8, 0x2381000
	0x01D74B88 LDR X8, [X8 + 0xFA8]
	0x01D74B8C LDR X1, [X8]
	0x01D74B90 BL 0x26AAA50
	0x01D74B94 ADRP X8, 0x2381000
	0x01D74B98 LDR X8, [X8 + 0xF98]
	0x01D74B9C STR X0, [X31 + 0x18]
	0x01D74BA0 LDR X1, [X8]
	0x01D74BA4 ADD X0, X31, 0x18
	0x01D74BA8 BL 0x2677DF0
	0x01D74BAC TBZ X0, 0x0, 0x1D74C28
	0x01D74BB0 ADRP X8, 0x2381000
	0x01D74BB4 LDR X8, [X8 + 0xF90]
	0x01D74BB8 LDR X1, [X8]
	0x01D74BBC ADD X8, X31, 0x40
	0x01D74BC0 ADD X0, X31, 0x18
	0x01D74BC4 BL 0x2677E34
	0x01D74BC8 LDR V0, [X31 + 0x4]
	0x01D74BCC LDR X8, [X31 + 0x50]
	0x01D74BD0 MOVN W9, 0x1
	0x01D74BD4 ADRP X20, 0x2381000
	0x01D74BD8 STR V0, [X31 + 0x2]
	0x01D74BDC STR X8, [X31 + 0x30]
	0x01D74BE0 STR W9, [X19], #0x8
	0x01D74BE4 LDR V0, [X31 + 0x2]
	0x01D74BE8 LDR X0, [X25]
	0x01D74BEC STR X8, [X31 + 0x10]
	0x01D74BF0 STR V0, [X31]
	0x01D74BF4 LDR W8, [X0 + 0xE0]
	0x01D74BF8 LDR X20, [X20 + 0xF78]
	0x01D74BFC CBNZ W8, 0x1D74C04
	0x01D74C00 BL 0x1C16DFC
	0x01D74C04 LDR V0, [X31]
	0x01D74C08 LDR X8, [X31 + 0x10]
	0x01D74C0C LDR X2, [X20]
	0x01D74C10 ADD X1, X31, 0x40
	0x01D74C14 MOV X0, X19
	0x01D74C18 STR V0, [X31 + 0x4]
	0x01D74C1C STR X8, [X31 + 0x50]
	0x01D74C20 BL 0x2639940
	0x01D74C24 B 0x1D74C60
	0x01D74C28 STR W31, [X19]
	0x01D74C2C LDR X8, [X31 + 0x18]
	0x01D74C30 STR X8, [X19 + 0x38]
	0x01D74C34 LDR X0, [X25]
	0x01D74C38 LDR W8, [X0 + 0xE0]
	0x01D74C3C CBNZ W8, 0x1D74C44
	0x01D74C40 BL 0x1C16DFC
	0x01D74C44 ADRP X8, 0x2381000
	0x01D74C48 LDR X8, [X8 + 0xF70]
	0x01D74C4C ADD X0, X19, 0x8
	0x01D74C50 LDR X3, [X8]
	0x01D74C54 ADD X1, X31, 0x18
	0x01D74C58 MOV X2, X19
	0x01D74C5C BL 0x212BE8C
	0x01D74C60 LDP X20, X19, [X31 + 0x90]
	0x01D74C64 LDP X22, X21, [X31 + 0x80]
	0x01D74C68 LDP X24, X23, [X31 + 0x70]
	0x01D74C6C LDP X30, X25, [X31 + 0x60]
	0x01D74C70 ADD X31, X31, 0xA0
	0x01D74C74 RET
	0x01D74C78 BL 0x1C16F20
	0x01D74C7C BL 0x1C16F20
	0x01D74C80 BL 0x1C16F20
	0x01D74C84 B 0x1D74CAC
	0x01D74C88 B 0x1D74CAC
	0x01D74C8C B 0x1D74CAC
	0x01D74C90 B 0x1D74CAC
	0x01D74C94 B 0x1D74CAC
	0x01D74C98 B 0x1D74CAC
	0x01D74C9C B 0x1D74CAC
	0x01D74CA0 B 0x1D74CAC
	0x01D74CA4 B 0x1D74CAC
	0x01D74CA8 B 0x1D74CAC
	0x01D74CAC MOV X20, X0
	0x01D74CB0 CMP W1, 0x1
	0x01D74CB4 B.NE 0x1D74D50
	0x01D74CB8 MOV X0, X20
	0x01D74CBC BL 0x3EB1AD0
	0x01D74CC0 MOV X20, X0
	0x01D74CC4 ADRP X0, 0x237F000
	0x01D74CC8 LDR X0, [X0 + 0x7D0]
	0x01D74CCC BL 0x1C16D08
	0x01D74CD0 LDR X8, [X20]
	0x01D74CD4 LDR X1, [X8]
	0x01D74CD8 BL 0x1C17270
	0x01D74CDC TBZ X0, 0x0, 0x1D74D28
	0x01D74CE0 LDR X20, [X20]
	0x01D74CE4 BL 0x3EB1AE0
	0x01D74CE8 MOVN W8, 0x1
	0x01D74CEC STR W8, [X19], #0x8
	0x01D74CF0 ADRP X0, 0x2381000
	0x01D74CF4 LDR X0, [X0 + 0xBC0]
	0x01D74CF8 BL 0x1C16D08
	0x01D74CFC LDR W8, [X0 + 0xE0]
	0x01D74D00 CBNZ W8, 0x1D74D08
	0x01D74D04 BL 0x1C16DFC
	0x01D74D08 ADRP X0, 0x2381000
	0x01D74D0C LDR X0, [X0 + 0xFC0]
	0x01D74D10 BL 0x1C16D08
	0x01D74D14 MOV X2, X0
	0x01D74D18 MOV X0, X19
	0x01D74D1C MOV X1, X20
	0x01D74D20 BL 0x2639BDC
	0x01D74D24 B 0x1D74C60
	0x01D74D28 MOVZ W0, 0x8
	0x01D74D2C BL 0x3EB1AF0
	0x01D74D30 LDR X8, [X20]
	0x01D74D34 STR X8, [X0]
	0x01D74D38 ADRP X1, 0x2140000
	0x01D74D3C ADD X1, X1, 0xE58
	0x01D74D40 MOV X2, X31
	0x01D74D44 BL 0x3EB1B00
	0x01D74D48 MOV X20, X0
	0x01D74D4C BL 0x3EB1AE0
	0x01D74D50 MOV X0, X20
	0x01D74D54 BL 0x1D2C690
	0x01D74D58 BL 0x1990590
	0x01D74D5C STR X30, [X31 - 0x30]!
	0x01D74D60 STP X22, X21, [X31 + 0x10]
	0x01D74D64 STP X20, X19, [X31 + 0x20]
	0x01D74D68 ADRP X22, 0x2664000
	0x01D74D6C ADRP X21, 0x2381000
	0x01D74D70 LDRB W8, [X22 + 0x906]
	0x01D74D74 LDR X21, [X21 + 0xBC0]
	0x01D74D78 MOV X19, X1
	0x01D74D7C MOV X20, X0
	0x01D74D80 TBNZ X8, 0x0, 0x1D74DA4
	0x01D74D84 ADRP X0, 0x2381000
	0x01D74D88 LDR X0, [X0 + 0xFC8]
	0x01D74D8C BL 0x1C16CF4
	0x01D74D90 ADRP X0, 0x2381000
	0x01D74D94 LDR X0, [X0 + 0xBC0]
	0x01D74D98 BL 0x1C16CF4
	0x01D74D9C MOVZ W8, 0x1
	0x01D74DA0 STRB W8, [X22 + 0x906]
	0x01D74DA4 LDR X0, [X21]
	0x01D74DA8 ADRP X21, 0x2381000
	0x01D74DAC LDR W8, [X0 + 0xE0]
	0x01D74DB0 LDR X21, [X21 + 0xFC8]
	0x01D74DB4 CBNZ W8, 0x1D74DBC
	0x01D74DB8 BL 0x1C16DFC
	0x01D74DBC LDR X2, [X21]
	0x01D74DC0 ADD X0, X20, 0x8
	0x01D74DC4 MOV X1, X19
	0x01D74DC8 LDP X20, X19, [X31 + 0x20]
	0x01D74DCC LDP X22, X21, [X31 + 0x10]
	0x01D74DD0 LDR X30, [X31], #0x30
	0x01D74DD4 B 0x26398B8
	0x01D74DD8 SUB X31, X31, 0x40
	0x01D74DDC STP X30, X23, [X31 + 0x10]
	0x01D74DE0 STP X22, X21, [X31 + 0x20]
	0x01D74DE4 STP X20, X19, [X31 + 0x30]
	0x01D74DE8 ADRP X20, 0x2664000
	0x01D74DEC LDRB W8, [X20 + 0x907]
	0x01D74DF0 MOV X19, X0
	0x01D74DF4 TBNZ X8, 0x0, 0x1D74E6C
	0x01D74DF8 ADRP X0, 0x237F000
	0x01D74DFC LDR X0, [X0 + 0x658]
	0x01D74E00 BL 0x1C16CF4
	0x01D74E04 ADRP X0, 0x2381000
	0x01D74E08 LDR X0, [X0 + 0xFD0]
	0x01D74E0C BL 0x1C16CF4
	0x01D74E10 ADRP X0, 0x2381000
	0x01D74E14 LDR X0, [X0 + 0xFD8]
	0x01D74E18 BL 0x1C16CF4
	0x01D74E1C ADRP X0, 0x2381000
	0x01D74E20 LDR X0, [X0 + 0xA18]
	0x01D74E24 BL 0x1C16CF4
	0x01D74E28 ADRP X0, 0x237F000
	0x01D74E2C LDR X0, [X0 + 0x5A8]
	0x01D74E30 BL 0x1C16CF4
	0x01D74E34 ADRP X0, 0x2380000
	0x01D74E38 LDR X0, [X0 + 0x830]
	0x01D74E3C BL 0x1C16CF4
	0x01D74E40 ADRP X0, 0x2380000
	0x01D74E44 LDR X0, [X0 + 0x838]
	0x01D74E48 BL 0x1C16CF4
	0x01D74E4C ADRP X0, 0x2380000
	0x01D74E50 LDR X0, [X0 + 0x840]
	0x01D74E54 BL 0x1C16CF4
	0x01D74E58 ADRP X0, 0x2380000
	0x01D74E5C LDR X0, [X0 + 0x7B8]
	0x01D74E60 BL 0x1C16CF4
	0x01D74E64 MOVZ W8, 0x1
	0x01D74E68 STRB W8, [X20 + 0x907]
	0x01D74E6C STP X31, X31, [X31]
	0x01D74E70 LDR W8, [X19]
	0x01D74E74 CBZ W8, 0x1D74E98
	0x01D74E78 CMP W8, 0x1
	0x01D74E7C B.NE 0x1D74EB0
	0x01D74E80 LDR X8, [X19 + 0x40]
	0x01D74E84 MOVN W9, 0x0
	0x01D74E88 STR X8, [X31]
	0x01D74E8C STR X31, [X19 + 0x40]
	0x01D74E90 STR W9, [X19]
	0x01D74E94 B 0x1D75078
	0x01D74E98 LDR X8, [X19 + 0x38]
	0x01D74E9C MOVN W9, 0x0
	0x01D74EA0 STR X8, [X31 + 0x8]
	0x01D74EA4 STR X31, [X19 + 0x38]
	0x01D74EA8 STR W9, [X19]
	0x01D74EAC B 0x1D74F30
	0x01D74EB0 ADRP X8, 0x237F000
	0x01D74EB4 LDR X8, [X8 + 0x5A8]
	0x01D74EB8 LDR W20, [X19 + 0x28]
	0x01D74EBC LDR X0, [X8]
	0x01D74EC0 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x2665000
	011 Move W8, [X20+2305]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {91}
	017 Move X0, 0x2380000
	018 Move X0, [X0+1624]
	019 Call 0x1C17CF4
	020 Move X0, 0x2382000
	021 Move X0, [X0+3768]
	022 Call 0x1C17CF4
	023 Move X0, 0x2382000
	024 Move X0, [X0+3776]
	025 Call 0x1C17CF4
	026 Move X0, 0x2382000
	027 Move X0, [X0+2736]
	028 Call 0x1C17CF4
	029 Move X0, 0x2382000
	030 Move X0, [X0+3440]
	031 Call 0x1C17CF4
	032 Move X0, 0x2382000
	033 Move X0, [X0+3584]
	034 Call 0x1C17CF4
	035 Move X0, 0x2382000
	036 Move X0, [X0+2584]
	037 Call 0x1C17CF4
	038 Move X0, 0x2380000
	039 Move X0, [X0+3584]
	040 Call 0x1C17CF4
	041 Move X0, 0x2382000
	042 Move X0, [X0+3448]
	043 Call 0x1C17CF4
	044 Move X0, 0x2382000
	045 Move X0, [X0+3456]
	046 Call 0x1C17CF4
	047 Move X0, 0x2380000
	048 Move X0, [X0+3608]
	049 Call 0x1C17CF4
	050 Move X0, 0x2381000
	051 Move X0, [X0+2072]
	052 Call 0x1C17CF4
	053 Move X0, 0x2382000
	054 Move X0, [X0+3784]
	055 Call 0x1C17CF4
	056 Move X0, 0x2380000
	057 Move X0, [X0+1928]
	058 Call 0x1C17CF4
	059 Move X0, 0x2382000
	060 Move X0, [X0+3592]
	061 Call 0x1C17CF4
	062 Move X0, 0x2382000
	063 Move X0, [X0+3600]
	064 Call 0x1C17CF4
	065 Move X0, 0x2382000
	066 Move X0, [X0+3608]
	067 Call 0x1C17CF4
	068 Move X0, 0x2382000
	069 Move X0, [X0+3616]
	070 Call 0x1C17CF4
	071 Move X0, 0x2382000
	072 Move X0, [X0+3624]
	073 Call 0x1C17CF4
	074 Move X0, 0x2382000
	075 Move X0, [X0+3792]
	076 Call 0x1C17CF4
	077 Move X0, 0x2382000
	078 Move X0, [X0+3800]
	079 Call 0x1C17CF4
	080 Move X0, 0x2382000
	081 Move X0, [X0+3808]
	082 Call 0x1C17CF4
	083 Move X0, 0x2382000
	084 Move X0, [X0+2680]
	085 Call 0x1C17CF4
	086 Move X0, 0x2382000
	087 Move X0, [X0+3816]
	088 Call 0x1C17CF4
	089 Move W8, 1
	090 Move [X20+2305], W8
	091 Move [X31+8], X31
	092 Move X25, 0x2382000
	093 Move W26, [X19]
	094 Move X25, [X25+2736]
	095 Compare W26, 0
	096 JumpIfEqual {150}
	097 Move X20, 0x2380000
	098 Move X20, [X20+1624]
	099 Move X0, [X20]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {105}
	103 Call 0x1C17DFC
	104 Move X0, [X20]
	105 Move X9, 0x2382000
	106 Move X8, [X0+184]
	107 Move X9, [X9+3592]
	108 Move X20, [X19+32]
	109 Move X21, [X8+16]
	110 Move X0, [X9]
	111 Move W1, 1
	112 Call 0x1C17D6C
	113 Move X8, 0x2382000
	114 Move X8, [X8+3600]
	115 Move X22, X0
	116 Move X0, [X8]
	117 Call 0x1C17F10
	118 Move X23, X0
	119 Move X1, X31
	120 Call StorageObjectId..ctor, X0
	121 Compare X23, 0
	122 JumpIfEqual {476}
	123 Move X8, 0x2382000
	124 Move X8, [X8+3800]
	125 Move X9, 0x2382000
	126 Move X10, [X8]
	127 Move X9, [X9+3808]
	128 Move X8, [X9]
	129 Move [X23+16], X10
	130 Move [X23+24], X8
	131 Move X24, [X19+32]
	132 Compare X24, 0
	133 JumpIfEqual {477}
	134 Move X10, 0x2381000
	135 Move X8, [X24]
	136 Move X10, [X10+2072]
	137 NotImplemented "Instruction LDRH not yet implemented."
	138 Move X1, [X10]
	139 Compare X9, 0
	140 JumpIfEqual {147}
	141 Move X10, [X8+176]
	142 Add X10, X10, 8
	143 NotImplemented "Instruction LDUR not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Subtract X9, X9, 1
	146 Add X10, X10, 16
	147 Move W2, 10
	148 Move X0, X24
	149 Call 0x1C5D788
	150 Move X8, [X19+40]
	151 Move TEMP, 0
	152 Not TEMP
	153 Move W26, TEMP
	154 Move [X31+8], X8
	155 Move [X19+40], X31
	156 Move [X19], W26
	157 Move W9, [X10]
	158 Add W9, W9, 10
	159 Add X8, X8, W9
	160 Add X0, X8, 312
	161 Move X8, [X0]
	162 Move X1, [X0+8]
	163 Move X0, X24
	164 NotImplemented "Instruction BLR not yet implemented."
	165 Move [X23+40], X0
	166 Compare X22, 0
	167 JumpIfEqual {478}
	168 Move X8, [X22]
	169 Move X1, [X8+64]
	170 Move X0, X23
	171 Call 0x1C17E00
	172 Compare X0, 0
	173 JumpIfEqual {479}
	174 Move W8, [X22+24]
	175 Compare W8, 0
	176 JumpIfEqual {482}
	177 Move [X22+32], X23
	178 Compare X21, 0
	179 JumpIfEqual {483}
	180 Move X10, 0x2382000
	181 Move X8, [X21]
	182 Move X10, [X10+2584]
	183 NotImplemented "Instruction LDRH not yet implemented."
	184 Move X1, [X10]
	185 Compare X9, 0
	186 JumpIfEqual {193}
	187 Move X10, [X8+176]
	188 Add X10, X10, 8
	189 NotImplemented "Instruction LDUR not yet implemented."
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Subtract X9, X9, 1
	192 Add X10, X10, 16
	193 Move W2, 71
	194 Move X0, X21
	195 Call 0x1C5D788
	196 Move W9, [X10]
	197 Add W9, W9, 71
	198 Add X8, X8, W9
	199 Add X0, X8, 312
	200 Move X8, [X0]
	201 Move X5, [X0+8]
	202 Move X0, X21
	203 Move X1, X20
	204 Move X2, X22
	205 Move X3, X31
	206 Move X4, X31
	207 NotImplemented "Instruction BLR not yet implemented."
	208 Compare X0, 0
	209 JumpIfEqual {484}
	210 Move X8, 0x2382000
	211 Move X8, [X8+3624]
	212 Move X1, [X8]
	213 Call Task`1<Object>.GetAwaiter, X0
	214 Move X8, 0x2382000
	215 Move X8, [X8+3616]
	216 Move [X31+8], X0
	217 Move X1, [X8]
	218 Add X0, X31, 8
	219 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	220 Move TEMP, X0
	221 And TEMP, TEMP, 1
	222 Compare TEMP, 1
	223 JumpIfNotEqual {248}
	224 Move X8, 0x2382000
	225 Move X8, [X8+3608]
	226 Add X0, X31, 8
	227 Move X1, [X8]
	228 Call TaskAwaiter`1<Object>.GetResult, X0
	229 Move X20, X0
	230 Compare X0, 0
	231 JumpIfEqual {471}
	232 Move X10, 0x2382000
	233 Move X8, [X20]
	234 Move X10, [X10+3584]
	235 NotImplemented "Instruction LDRH not yet implemented."
	236 Move X1, [X10]
	237 Compare X9, 0
	238 JumpIfEqual {245}
	239 Move X10, [X8+176]
	240 Add X10, X10, 8
	241 NotImplemented "Instruction LDUR not yet implemented."
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Subtract X9, X9, 1
	244 Add X10, X10, 16
	245 Move X0, X20
	246 Move W2, W31
	247 Call 0x1C5D788
	248 Move [X19], W31
	249 Move X8, [X31+8]
	250 Move [X19+40], X8
	251 Move X0, [X25]
	252 Move W8, [X0+224]
	253 Compare W8, 0
	254 JumpIfNotEqual {256}
	255 Call 0x1C17DFC
	256 Move X8, 0x2382000
	257 Move X8, [X8+3768]
	258 Add X0, X19, 8
	259 Move X3, [X8]
	260 Add X1, X31, 8
	261 Move X2, X19
	262 Call AsyncTaskMethodBuilder`1<ApiUserInventory>.AwaitUnsafeOnCompleted, X0, X1, X2
	263 NotImplemented "Instruction LDRSW not yet implemented."
	264 Add X8, X8, X9
	265 Add X0, X8, 312
	266 Move X8, [X0]
	267 Move X1, [X0+8]
	268 Move X0, X20
	269 NotImplemented "Instruction BLR not yet implemented."
	270 Move X20, X0
	271 Compare X0, 0
	272 JumpIfEqual {472}
	273 Move X10, 0x2382000
	274 Move X8, [X20]
	275 Move X10, [X10+3448]
	276 NotImplemented "Instruction LDRH not yet implemented."
	277 Move X1, [X10]
	278 Compare X9, 0
	279 JumpIfEqual {286}
	280 Move X10, [X8+176]
	281 Add X10, X10, 8
	282 NotImplemented "Instruction LDUR not yet implemented."
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Subtract X9, X9, 1
	285 Add X10, X10, 16
	286 Move X0, X20
	287 Move W2, W31
	288 Call 0x1C5D788
	289 NotImplemented "Instruction LDRSW not yet implemented."
	290 Add X8, X8, X9
	291 Add X0, X8, 312
	292 Move X8, [X0]
	293 Move X1, [X0+8]
	294 Move X0, X20
	295 NotImplemented "Instruction BLR not yet implemented."
	296 Move X20, X0
	297 Compare X0, 0
	298 JumpIfEqual {473}
	299 Move X10, 0x2380000
	300 Move X8, [X20]
	301 Move X10, [X10+3608]
	302 NotImplemented "Instruction LDRH not yet implemented."
	303 Move X1, [X10]
	304 Compare X9, 0
	305 JumpIfEqual {312}
	306 Move X10, [X8+176]
	307 Add X10, X10, 8
	308 NotImplemented "Instruction LDUR not yet implemented."
	309 NotImplemented "Instruction CMP not yet implemented."
	310 Subtract X9, X9, 1
	311 Add X10, X10, 16
	312 Move X0, X20
	313 Move W2, W31
	314 Call 0x1C5D788
	315 NotImplemented "Instruction LDRSW not yet implemented."
	316 Add X8, X8, X9
	317 Add X0, X8, 312
	318 Move X8, [X0]
	319 Move X1, [X0+8]
	320 Move X0, X20
	321 NotImplemented "Instruction BLR not yet implemented."
	322 Move TEMP, X0
	323 And TEMP, TEMP, 1
	324 Compare TEMP, 1
	325 JumpIfNotEqual {342}
	326 Move X10, 0x2382000
	327 Move X8, [X20]
	328 Move X10, [X10+3456]
	329 NotImplemented "Instruction LDRH not yet implemented."
	330 Move X1, [X10]
	331 Compare X9, 0
	332 JumpIfEqual {339}
	333 Move X10, [X8+176]
	334 Add X10, X10, 8
	335 NotImplemented "Instruction LDUR not yet implemented."
	336 NotImplemented "Instruction CMP not yet implemented."
	337 Subtract X9, X9, 1
	338 Add X10, X10, 16
	339 Move X0, X20
	340 Move W2, W31
	341 Call 0x1C5D788
	342 Move X23, X31
	343 Move X21, X31
	344 Move W22, 8
	345 Move TEMP, X26
	346 And TEMP, TEMP, -2147483648
	347 Compare TEMP, -2147483648
	348 JumpIfEqual {394}
	349 NotImplemented "Instruction LDRSW not yet implemented."
	350 Add X8, X8, X9
	351 Add X0, X8, 312
	352 Move X8, [X0]
	353 Move X1, [X0+8]
	354 Move X0, X20
	355 NotImplemented "Instruction BLR not yet implemented."
	356 Move X21, X0
	357 Compare X0, 0
	358 JumpIfEqual {485}
	359 Move X10, 0x2382000
	360 Move X8, [X21]
	361 Move X10, [X10+3440]
	362 NotImplemented "Instruction LDRH not yet implemented."
	363 Move X1, [X10]
	364 Compare X9, 0
	365 JumpIfEqual {372}
	366 Move X10, [X8+176]
	367 Add X10, X10, 8
	368 NotImplemented "Instruction LDUR not yet implemented."
	369 NotImplemented "Instruction CMP not yet implemented."
	370 Subtract X9, X9, 1
	371 Add X10, X10, 16
	372 Move W2, 7
	373 Move X0, X21
	374 Call 0x1C5D788
	375 Move W9, [X10]
	376 Add W9, W9, 7
	377 Add X8, X8, W9
	378 Add X0, X8, 312
	379 Move X8, [X0]
	380 Move X1, [X0+8]
	381 Move X0, X21
	382 NotImplemented "Instruction BLR not yet implemented."
	383 Move X8, 0x2382000
	384 Move X8, [X8+3784]
	385 Move X1, [X8]
	386 Call JsonParser.FromJson, X0
	387 Move X21, X0
	388 Move X23, X31
	389 Move W22, 7
	390 Move TEMP, X26
	391 And TEMP, TEMP, -2147483648
	392 Compare TEMP, -2147483648
	393 JumpIfNotEqual {419}
	394 Compare X20, 0
	395 JumpIfEqual {419}
	396 Move X10, 0x2380000
	397 Move X8, [X20]
	398 Move X10, [X10+3584]
	399 NotImplemented "Instruction LDRH not yet implemented."
	400 Move X1, [X10]
	401 Compare X9, 0
	402 JumpIfEqual {409}
	403 Move X10, [X8+176]
	404 Add X10, X10, 8
	405 NotImplemented "Instruction LDUR not yet implemented."
	406 NotImplemented "Instruction CMP not yet implemented."
	407 Subtract X9, X9, 1
	408 Add X10, X10, 16
	409 Move X0, X20
	410 Move W2, W31
	411 Call 0x1C5D788
	412 NotImplemented "Instruction LDRSW not yet implemented."
	413 Add X8, X8, X9
	414 Add X0, X8, 312
	415 Move X8, [X0]
	416 Move X1, [X0+8]
	417 Move X0, X20
	418 NotImplemented "Instruction BLR not yet implemented."
	419 Compare X23, 0
	420 JumpIfNotEqual {474}
	421 Compare W22, 0
	422 JumpIfEqual {425}
	423 NotImplemented "Instruction CMP not yet implemented."
	424 NotImplemented "Instruction CMP not yet implemented."
	425 Move X8, 0x2380000
	426 Move X8, [X8+1928]
	427 Move X0, [X8]
	428 Move W8, [X0+224]
	429 Compare W8, 0
	430 JumpIfNotEqual {432}
	431 Call 0x1C17DFC
	432 Move X8, 0x2382000
	433 Move X8, [X8+3816]
	434 Move X9, 0x2382000
	435 Move X10, 0x2382000
	436 Move X9, [X9+2680]
	437 Move X10, [X10+3792]
	438 Move X1, [X8]
	439 Move X3, [X9]
	440 Move X4, [X10]
	441 Move W0, 64
	442 Move W5, 214
	443 Move X2, X31
	444 Move X6, X31
	445 Call Log.Error, X0, X1, X2, X3, X4, X5
	446 Move TEMP, 1
	447 Not TEMP
	448 Move W8, TEMP
	449 Move [X19+8], W8
	450 Move X0, [X25]
	451 Move X20, 0x2382000
	452 Move W8, [X0+224]
	453 Move X20, [X20+3776]
	454 Compare W8, 0
	455 JumpIfNotEqual {457}
	456 Call 0x1C17DFC
	457 Move X2, [X20]
	458 Move X0, X19
	459 Move X1, X21
	460 Call AsyncTaskMethodBuilder`1<ApiUserInventory>.SetResult, X0, X1
	461 Move X20, [X31+64]
	462 Move X19, [X31+72]
	463 Move X22, [X31+48]
	464 Move X21, [X31+56]
	465 Move X24, [X31+32]
	466 Move X23, [X31+40]
	467 Move X26, [X31+16]
	468 Move X25, [X31+24]
	469 Move X30, [X31+80]
	470 Return 
	471 Call 0x1C17F20
	472 Call 0x1C17F20
	473 Call 0x1C17F20
	474 Move X0, X23
	475 Call 0x1C17F18
	476 Call 0x1C17F20
	477 Call 0x1C17F20
	478 Call 0x1C17F20
	479 Call 0x1C17F44
	480 Move X1, X31
	481 Call 0x1C17DEC
	482 Call 0x1C17F28
	483 Call 0x1C17F20
	484 Call 0x1C17F20
	485 Call 0x1C17F20
	486 Move X21, X1
	487 Move X22, X0
	488 NotImplemented "Instruction CMP not yet implemented."
	489 Move X0, X22
	490 Call 0x3EB2AD0
	491 Move X23, [X0]
	492 Call 0x3EB2AE0
	493 Move X21, X31
	494 Move W22, W31
	495 Move TEMP, X26
	496 And TEMP, TEMP, -2147483648
	497 Compare TEMP, -2147483648
	498 JumpIfEqual {394}
	499 Move X23, X31
	500 Move TEMP, X26
	501 And TEMP, TEMP, -2147483648
	502 Compare TEMP, -2147483648
	503 JumpIfNotEqual {529}
	504 Compare X20, 0
	505 JumpIfEqual {529}
	506 Move X10, 0x2380000
	507 Move X8, [X20]
	508 Move X10, [X10+3584]
	509 NotImplemented "Instruction LDRH not yet implemented."
	510 Move X1, [X10]
	511 Compare X9, 0
	512 JumpIfEqual {519}
	513 Move X10, [X8+176]
	514 Add X10, X10, 8
	515 NotImplemented "Instruction LDUR not yet implemented."
	516 NotImplemented "Instruction CMP not yet implemented."
	517 Subtract X9, X9, 1
	518 Add X10, X10, 16
	519 Move X0, X20
	520 Move W2, W31
	521 Call 0x1C5D788
	522 NotImplemented "Instruction LDRSW not yet implemented."
	523 Add X8, X8, X9
	524 Add X0, X8, 312
	525 Move X8, [X0]
	526 Move X1, [X0+8]
	527 Move X0, X20
	528 NotImplemented "Instruction BLR not yet implemented."
	529 Compare X23, 0
	530 JumpIfEqual {541}
	531 Move X0, X23
	532 Call 0x1C17F18
	533 Move X21, X1
	534 Move X22, X0
	535 Move TEMP, X26
	536 And TEMP, TEMP, -2147483648
	537 Compare TEMP, -2147483648
	538 JumpIfEqual {504}
	539 Move X21, X1
	540 Move X22, X0
	541 NotImplemented "Instruction CMP not yet implemented."
	542 Move X0, X22
	543 Call 0x3EB2AD0
	544 Move X20, X0
	545 Move X0, 0x2380000
	546 Move X0, [X0+2000]
	547 Call 0x1C17D08
	548 Move X8, [X20]
	549 Move X1, [X8]
	550 Call 0x1C18270
	551 Move TEMP, X0
	552 And TEMP, TEMP, 1
	553 Compare TEMP, 1
	554 JumpIfNotEqual {590}
	555 Move X20, [X20]
	556 Call 0x3EB2AE0
	557 Move X0, 0x2380000
	558 Move X0, [X0+1928]
	559 Call 0x1C17D08
	560 Move W8, [X0+224]
	561 Compare W8, 0
	562 JumpIfNotEqual {564}
	563 Call 0x1C17DFC
	564 Move X0, 0x2382000
	565 Move X0, [X0+3824]
	566 Call 0x1C17D08
	567 Move X21, X0
	568 Move X0, 0x2382000
	569 Move X0, [X0+2680]
	570 Call 0x1C17D08
	571 Move X22, X0
	572 Move X0, 0x2382000
	573 Move X0, [X0+3792]
	574 Call 0x1C17D08
	575 Move X5, X0
	576 Move W0, 64
	577 Move W6, 210
	578 Move X1, X21
	579 Move X2, X20
	580 Move X3, X31
	581 Move X4, X22
	582 Move X7, X31
	583 Call Log.Error, X0, X1, X2, X3, X4, X5, X6
	584 Move X0, 0x2382000
	585 Move X0, [X0+3832]
	586 Call 0x1C17D08
	587 Move X1, X0
	588 Move X0, X20
	589 Call 0x1C17DEC
	590 Move W0, 8
	591 Call 0x3EB2AF0
	592 Move X8, [X20]
	593 Move [X0], X8
	594 Move X1, 0x2141000
	595 Add X1, X1, 3672
	596 Move X2, X31
	597 Call 0x3EB2B00
	598 Move X21, X1
	599 Move X22, X0
	600 Call 0x3EB2AE0
	601 Move X21, X1
	602 Move X22, X0
	603 NotImplemented "Instruction CMP not yet implemented."
	604 Move X0, X22
	605 Call 0x3EB2AD0
	606 Move X20, X0
	607 Move X0, 0x2380000
	608 Move X0, [X0+2000]
	609 Call 0x1C17D08
	610 Move X8, [X20]
	611 Move X1, [X8]
	612 Call 0x1C18270
	613 Move TEMP, X0
	614 And TEMP, TEMP, 1
	615 Compare TEMP, 1
	616 JumpIfNotEqual {637}
	617 Move X20, [X20]
	618 Call 0x3EB2AE0
	619 Move TEMP, 1
	620 Not TEMP
	621 Move W8, TEMP
	622 Move [X19+8], W8
	623 Move X0, 0x2382000
	624 Move X0, [X0+2736]
	625 Call 0x1C17D08
	626 Move W8, [X0+224]
	627 Compare W8, 0
	628 JumpIfNotEqual {630}
	629 Call 0x1C17DFC
	630 Move X0, 0x2382000
	631 Move X0, [X0+3840]
	632 Call 0x1C17D08
	633 Move X2, X0
	634 Move X0, X19
	635 Move X1, X20
	636 Call AsyncTaskMethodBuilder`1<ApiUserInventory>.SetException, X0, X1
	637 Move W0, 8
	638 Call 0x3EB2AF0
	639 Move X8, [X20]
	640 Move [X0], X8
	641 Move X1, 0x2141000
	642 Add X1, X1, 3672
	643 Move X2, X31
	644 Call 0x3EB2B00
	645 Move X22, X0
	646 Call 0x3EB2AE0
	647 Move X0, X22
	648 Call 0x1D2D690
	649 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x01D74EC4 CBNZ W8, 0x1D74ECC
	0x01D74EC8 BL 0x1C16DFC
	0x01D74ECC MOVZ W8, 0x3E8
	0x01D74ED0 MUL W1, W20, W8
	0x01D74ED4 MOVZ W0, 0x64
	0x01D74ED8 MOV X2, X31
	0x01D74EDC BL 0x337EDF0
	0x01D74EE0 ADRP X8, 0x2380000
	0x01D74EE4 LDR X8, [X8 + 0x7B8]
	0x01D74EE8 MOV W20, W0
	0x01D74EEC LDR X21, [X19 + 0x30]
	0x01D74EF0 LDR X0, [X8]
	0x01D74EF4 LDR W8, [X0 + 0xE0]
	0x01D74EF8 CBNZ W8, 0x1D74F00
	0x01D74EFC BL 0x1C16DFC
	0x01D74F00 MOV W0, W20
	0x01D74F04 MOV X1, X21
	0x01D74F08 MOV X2, X31
	0x01D74F0C BL 0x33F503C
	0x01D74F10 CBZ X0, 0x1D750EC
	0x01D74F14 MOV X1, X31
	0x01D74F18 BL 0x33ED394
	0x01D74F1C STR X0, [X31 + 0x8]
	0x01D74F20 ADD X0, X31, 0x8
	0x01D74F24 MOV X1, X31
	0x01D74F28 BL 0x32C3A80
	0x01D74F2C TBZ X0, 0x0, 0x1D74FF0
	0x01D74F30 ADD X0, X31, 0x8
	0x01D74F34 MOV X1, X31
	0x01D74F38 BL 0x32C3B4C
	0x01D74F3C ADRP X22, 0x237F000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2665000
	007 Move X21, 0x2382000
	008 Move W8, [X22+2306]
	009 Move X21, [X21+2736]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x2382000
	017 Move X0, [X0+3848]
	018 Call 0x1C17CF4
	019 Move X0, 0x2382000
	020 Move X0, [X0+2736]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2306], W8
	024 Move X0, [X21]
	025 Move X21, 0x2382000
	026 Move W8, [X0+224]
	027 Move X21, [X21+3848]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<ApiUserInventory>.SetStateMachine, X0, X1
	040 Return 

