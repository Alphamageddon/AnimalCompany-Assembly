Type: AnimalCompany.API.AnimalCompanyAPI/<>c

Method: System.Void .cctor()

Disassembly:
	0x01D70FA8 MOV X19, X0
	0x01D70FAC ADRP X0, 0x2383000
	0x01D70FB0 LDR X0, [X0 + 0x7D0]
	0x01D70FB4 BL 0x1C16D08
	0x01D70FB8 LDR X8, [X19]
	0x01D70FBC LDR X1, [X8]
	0x01D70FC0 BL 0x1C17270
	0x01D70FC4 TBZ X0, 0x0, 0x1D71034
	0x01D70FC8 LDR X19, [X19]
	0x01D70FCC BL 0x3EB1AE0
	0x01D70FD0 ADRP X0, 0x2383000
	0x01D70FD4 LDR X0, [X0 + 0x788]
	0x01D70FD8 BL 0x1C16D08
	0x01D70FDC LDR W8, [X0 + 0xE0]
	0x01D70FE0 CBNZ W8, 0x1D70FE8
	0x01D70FE4 BL 0x1C16DFC
	0x01D70FE8 ADRP X0, 0x2385000
	0x01D70FEC LDR X0, [X0 + 0xD28]
	0x01D70FF0 BL 0x1C16D08
	0x01D70FF4 MOV X20, X0
	0x01D70FF8 ADRP X0, 0x2385000
	0x01D70FFC LDR X0, [X0 + 0xA78]
	0x01D71000 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x2669000
	005 Move X20, 0x2386000
	006 Move W8, [X19+2292]
	007 Move X20, [X20+2720]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2386000
	013 Move X0, [X0+2720]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2292], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x01D71004 MOV X21, X0
	0x01D71008 ADRP X0, 0x2384000

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: AnimalCompany.API.AnimalCompanyAPI/ClientBootstrapResponse <BootstrapAsync>b__25_0(System.Threading.Tasks.Task`1<Nakama.IApiRpc> task)

Disassembly:
	0x01D7100C LDR X0, [X0 + 0xD18]
	0x01D71010 BL 0x1C16D08
	0x01D71014 MOV X5, X0
	0x01D71018 MOVZ W0, 0x40
	0x01D7101C MOVZ W6, 0x250
	0x01D71020 MOV X1, X20
	0x01D71024 MOV X2, X19
	0x01D71028 MOV X3, X31
	0x01D7102C MOV X4, X21
	0x01D71030 B 0x1D70ED4
	0x01D71034 MOVZ W0, 0x8
	0x01D71038 BL 0x3EB1AF0
	0x01D7103C LDR X8, [X19]
	0x01D71040 STR X8, [X0]
	0x01D71044 ADRP X1, 0x2143000
	0x01D71048 ADD X1, X1, 0xE58
	0x01D7104C MOV X2, X31
	0x01D71050 BL 0x3EB1B00
	0x01D71054 MOV X19, X0
	0x01D71058 BL 0x3EB1AE0
	0x01D7105C MOV X0, X19
	0x01D71060 BL 0x1D2C690
	0x01D71064 BL 0x1990590
	0x01D71068 SUB X31, X31, 0x30
	0x01D7106C STP X30, X21, [X31 + 0x10]
	0x01D71070 STP X20, X19, [X31 + 0x20]
	0x01D71074 ADRP X20, 0x2667000
	0x01D71078 LDRB W8, [X20 + 0x8FA]
	0x01D7107C MOV X19, X1
	0x01D71080 TBNZ X8, 0x0, 0x1D710F8
	0x01D71084 ADRP X0, 0x2384000
	0x01D71088 LDR X0, [X0 + 0xD30]
	0x01D7108C BL 0x1C16CF4
	0x01D71090 ADRP X0, 0x2382000
	0x01D71094 LDR X0, [X0 + 0xDF8]
	0x01D71098 BL 0x1C16CF4
	0x01D7109C ADRP X0, 0x2384000
	0x01D710A0 LDR X0, [X0 + 0xC58]
	0x01D710A4 BL 0x1C16CF4
	0x01D710A8 ADRP X0, 0x2384000
	0x01D710AC LDR X0, [X0 + 0xD38]
	0x01D710B0 BL 0x1C16CF4
	0x01D710B4 ADRP X0, 0x2382000
	0x01D710B8 LDR X0, [X0 + 0x788]
	0x01D710BC BL 0x1C16CF4
	0x01D710C0 ADRP X0, 0x2384000
	0x01D710C4 LDR X0, [X0 + 0xC68]
	0x01D710C8 BL 0x1C16CF4
	0x01D710CC ADRP X0, 0x2384000
	0x01D710D0 LDR X0, [X0 + 0xD40]
	0x01D710D4 BL 0x1C16CF4
	0x01D710D8 ADRP X0, 0x2384000
	0x01D710DC LDR X0, [X0 + 0xA78]
	0x01D710E0 BL 0x1C16CF4
	0x01D710E4 ADRP X0, 0x2384000
	0x01D710E8 LDR X0, [X0 + 0xD48]
	0x01D710EC BL 0x1C16CF4
	0x01D710F0 MOVZ W8, 0x1
	0x01D710F4 STRB W8, [X20 + 0x8FA]
	0x01D710F8 STR W31, [X31 + 0xC]
	0x01D710FC CBZ X19, 0x1D71278
	0x01D71100 MOV X0, X19
	0x01D71104 MOV X1, X31
	0x01D71108 BL 0x33F0514
	0x01D7110C TBZ X0, 0x0, 0x1D71184
	0x01D71110 MOV X0, X19
	0x01D71114 MOV X1, X31
	0x01D71118 BL 0x33F04D8
	0x01D7111C ADRP X8, 0x2382000
	0x01D71120 LDR X8, [X8 + 0x788]
	0x01D71124 MOV X19, X0
	0x01D71128 LDR X8, [X8]
	0x01D7112C LDR W9, [X8 + 0xE0]
	0x01D71130 CBNZ W9, 0x1D7113C
	0x01D71134 MOV X0, X8
	0x01D71138 BL 0x1C16DFC
	0x01D7113C ADRP X8, 0x2384000
	0x01D71140 ADRP X9, 0x2384000
	0x01D71144 ADRP X10, 0x2384000
	0x01D71148 LDR X8, [X8 + 0xD40]
	0x01D7114C LDR X9, [X9 + 0xA78]
	0x01D71150 LDR X10, [X10 + 0xD48]
	0x01D71154 MOVZ W0, 0x40
	0x01D71158 LDR X1, [X8]
	0x01D7115C LDR X4, [X9]
	0x01D71160 LDR X5, [X10]
	0x01D71164 MOVZ W6, 0x26A
	0x01D71168 MOV X2, X19
	0x01D7116C MOV X3, X31
	0x01D71170 MOV X7, X31
	0x01D71174 BL 0x35C2674
	0x01D71178 MOV X8, X31
	0x01D7117C MOVZ X9, 0x1
	0x01D71180 B 0x1D71264
	0x01D71184 ADRP X8, 0x2384000
	0x01D71188 LDR X8, [X8 + 0xC68]
	0x01D7118C LDR X1, [X8]
	0x01D71190 MOV X0, X19
	0x01D71194 BL 0x269F34C
	0x01D71198 MOV X19, X0
	0x01D7119C CBZ X0, 0x1D7127C
	0x01D711A0 ADRP X10, 0x2384000
	0x01D711A4 LDR X8, [X19]
	0x01D711A8 LDR X10, [X10 + 0xC58]
	0x01D711AC LDRH W9, [X8 + 0x12E]
	0x01D711B0 LDR X1, [X10]
	0x01D711B4 CBZ X9, 0x1D711D8
	0x01D711B8 LDR X10, [X8 + 0xB0]
	0x01D711BC ADD X10, X10, 0x8
	0x01D711C0 LDUR X11, [X10 - 0x8]
	0x01D711C4 CMP X11, X1
	0x01D711C8 B.EQ 0x1D711E8
	0x01D711CC SUBS X9, X9, 0x1
	0x01D711D0 ADD X10, X10, 0x10
	0x01D711D4 B.NE 0x1D711C0
	0x01D711D8 MOVZ W2, 0x2
	0x01D711DC MOV X0, X19
	0x01D711E0 BL 0x1C5C788
	0x01D711E4 B 0x1D711F8
	0x01D711E8 LDR W9, [X10]
	0x01D711EC ADD W9, W9, 0x2
	0x01D711F0 ADD X8, X8, W9, 0x4, SXTW
	0x01D711F4 ADD X0, X8, 0x138
	0x01D711F8 LDP X8, X1, [X0]
	0x01D711FC MOV X0, X19
	0x01D71200 BLR X8
	0x01D71204 ADRP X8, 0x2384000
	0x01D71208 LDR X8, [X8 + 0xD38]
	0x01D7120C LDR X1, [X8]
	0x01D71210 BL 0x220FAF8
	0x01D71214 ADRP X8, 0x2382000
	0x01D71218 LDR X8, [X8 + 0xDF8]
	0x01D7121C MOV X19, X0
	0x01D71220 MOV X20, X1
	0x01D71224 LDR X0, [X8]
	0x01D71228 LDR W8, [X0 + 0xE0]
	0x01D7122C CBNZ W8, 0x1D71234
	0x01D71230 BL 0x1C16DFC
	0x01D71234 ADRP X8, 0x2384000
	0x01D71238 LDR X8, [X8 + 0xD30]
	0x01D7123C LDR X2, [X8]
	0x01D71240 ADD X1, X31, 0xC
	0x01D71244 MOV X0, X20
	0x01D71248 BL 0x21B0A58
	0x01D7124C LDR W9, [X31 + 0xC]
	0x01D71250 ANDS W31, W0, 0x1
	0x01D71254 MOVZ X10, 0x1
	0x01D71258 AND X8, X19, 0x1
	0x01D7125C UBFM X9, X9, 0x20, 0x1F
	0x01D71260 CSEL X9, X9, X10, NE
	0x01D71264 LDP X20, X19, [X31 + 0x20]
	0x01D71268 LDP X30, X21, [X31 + 0x10]
	0x01D7126C ORR X0, X9, X8, 0x0
	0x01D71270 ADD X31, X31, 0x30
	0x01D71274 RET
	0x01D71278 BL 0x1C16F20
	0x01D7127C BL 0x1C16F20
	0x01D71280 B 0x1D71290
	0x01D71284 B 0x1D71290
	0x01D71288 B 0x1D71290
	0x01D7128C B 0x1D71290
	0x01D71290 MOV X19, X0
	0x01D71294 CMP W1, 0x1
	0x01D71298 B.NE 0x1D71368
	0x01D7129C MOV X0, X19
	0x01D712A0 BL 0x3EB1AD0
	0x01D712A4 MOV X19, X0
	0x01D712A8 ADRP X0, 0x2382000
	0x01D712AC LDR X0, [X0 + 0x7D0]
	0x01D712B0 BL 0x1C16D08
	0x01D712B4 LDR X8, [X19]
	0x01D712B8 LDR X1, [X8]
	0x01D712BC BL 0x1C17270
	0x01D712C0 TBZ X0, 0x0, 0x1D71340
	0x01D712C4 LDR X19, [X19]
	0x01D712C8 BL 0x3EB1AE0
	0x01D712CC ADRP X0, 0x2382000
	0x01D712D0 LDR X0, [X0 + 0x788]
	0x01D712D4 BL 0x1C16D08
	0x01D712D8 LDR W8, [X0 + 0xE0]
	0x01D712DC CBNZ W8, 0x1D712E4
	0x01D712E0 BL 0x1C16DFC
	0x01D712E4 ADRP X0, 0x2384000
	0x01D712E8 LDR X0, [X0 + 0xD50]
	0x01D712EC BL 0x1C16D08
	0x01D712F0 MOV X20, X0
	0x01D712F4 ADRP X0, 0x2384000
	0x01D712F8 LDR X0, [X0 + 0xA78]
	0x01D712FC BL 0x1C16D08
	0x01D71300 MOV X21, X0
	0x01D71304 ADRP X0, 0x2384000
	0x01D71308 LDR X0, [X0 + 0xD48]
	0x01D7130C BL 0x1C16D08
	0x01D71310 MOV X5, X0
	0x01D71314 MOVZ W0, 0x40
	0x01D71318 MOVZ W6, 0x279
	0x01D7131C MOV X1, X20
	0x01D71320 MOV X2, X19
	0x01D71324 MOV X3, X31
	0x01D71328 MOV X4, X21
	0x01D7132C MOV X7, X31
	0x01D71330 BL 0x35C2674
	0x01D71334 MOV X8, X31
	0x01D71338 MOVZ X9, 0x2
	0x01D7133C B 0x1D71264
	0x01D71340 MOVZ W0, 0x8
	0x01D71344 BL 0x3EB1AF0
	0x01D71348 LDR X8, [X19]
	0x01D7134C STR X8, [X0]
	0x01D71350 ADRP X1, 0x2143000
	0x01D71354 ADD X1, X1, 0xE58
	0x01D71358 MOV X2, X31
	0x01D7135C BL 0x3EB1B00
	0x01D71360 MOV X19, X0
	0x01D71364 BL 0x3EB1AE0
	0x01D71368 MOV X0, X19
	0x01D7136C BL 0x1D2C690
	0x01D71370 BL 0x1990590
	0x01D71374 SUB X31, X31, 0x150
	0x01D71378 STP X29, X30, [X31 + 0xF0]
	0x01D7137C STP X28, X27, [X31 + 0x100]
	0x01D71380 STP X26, X25, [X31 + 0x110]
	0x01D71384 STP X24, X23, [X31 + 0x120]
	0x01D71388 STP X22, X21, [X31 + 0x130]
	0x01D7138C STP X20, X19, [X31 + 0x140]
	0x01D71390 ADRP X20, 0x2667000
	0x01D71394 LDRB W8, [X20 + 0x8FB]
	0x01D71398 STR X0, [X31 + 0x18]
	0x01D7139C TBNZ X8, 0x0, 0x1D71498
	0x01D713A0 ADRP X0, 0x2382000
	0x01D713A4 LDR X0, [X0 + 0x658]
	0x01D713A8 BL 0x1C16CF4
	0x01D713AC ADRP X0, 0x2384000
	0x01D713B0 LDR X0, [X0 + 0xD58]
	0x01D713B4 BL 0x1C16CF4
	0x01D713B8 ADRP X0, 0x2384000
	0x01D713BC LDR X0, [X0 + 0xD60]
	0x01D713C0 BL 0x1C16CF4
	0x01D713C4 ADRP X0, 0x2384000
	0x01D713C8 LDR X0, [X0 + 0xB80]
	0x01D713CC BL 0x1C16CF4
	0x01D713D0 ADRP X0, 0x2384000
	0x01D713D4 LDR X0, [X0 + 0xD68]
	0x01D713D8 BL 0x1C16CF4
	0x01D713DC ADRP X0, 0x2384000
	0x01D713E0 LDR X0, [X0 + 0xD70]
	0x01D713E4 BL 0x1C16CF4
	0x01D713E8 ADRP X0, 0x2384000
	0x01D713EC LDR X0, [X0 + 0xA18]
	0x01D713F0 BL 0x1C16CF4
	0x01D713F4 ADRP X0, 0x2382000
	0x01D713F8 LDR X0, [X0 + 0xE00]
	0x01D713FC BL 0x1C16CF4
	0x01D71400 ADRP X0, 0x2384000
	0x01D71404 LDR X0, [X0 + 0xD78]
	0x01D71408 BL 0x1C16CF4
	0x01D7140C ADRP X0, 0x2384000
	0x01D71410 LDR X0, [X0 + 0xD80]
	0x01D71414 BL 0x1C16CF4
	0x01D71418 ADRP X0, 0x2382000
	0x01D7141C LDR X0, [X0 + 0xE18]
	0x01D71420 BL 0x1C16CF4
	0x01D71424 ADRP X0, 0x2384000
	0x01D71428 LDR X0, [X0 + 0xD88]
	0x01D7142C BL 0x1C16CF4
	0x01D71430 ADRP X0, 0x2384000
	0x01D71434 LDR X0, [X0 + 0xD90]
	0x01D71438 BL 0x1C16CF4
	0x01D7143C ADRP X0, 0x2384000
	0x01D71440 LDR X0, [X0 + 0xD98]
	0x01D71444 BL 0x1C16CF4
	0x01D71448 ADRP X0, 0x2384000
	0x01D7144C LDR X0, [X0 + 0xDA0]
	0x01D71450 BL 0x1C16CF4
	0x01D71454 ADRP X0, 0x2384000
	0x01D71458 LDR X0, [X0 + 0xDA8]
	0x01D7145C BL 0x1C16CF4
	0x01D71460 ADRP X0, 0x2384000
	0x01D71464 LDR X0, [X0 + 0xDB0]
	0x01D71468 BL 0x1C16CF4
	0x01D7146C ADRP X0, 0x2384000
	0x01D71470 LDR X0, [X0 + 0xDB8]
	0x01D71474 BL 0x1C16CF4
	0x01D71478 ADRP X0, 0x2384000

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+112], X24
	004 Move [X31+120], X23
	005 Move [X31+128], X22
	006 Move [X31+136], X21
	007 Move [X31+144], X20
	008 Move [X31+152], X19
	009 Move X21, 0x2668000
	010 Move W9, [X21+2293]
	011 Move X20, X1
	012 Move X19, X8
	013 Move TEMP, X9
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {67}
	017 Move X0, 0x2385000
	018 Move X0, [X0+3144]
	019 Call 0x1C17CF4
	020 Move X0, 0x2384000
	021 Move X0, [X0+2544]
	022 Call 0x1C17CF4
	023 Move X0, 0x2383000
	024 Move X0, [X0+1808]
	025 Call 0x1C17CF4
	026 Move X0, 0x2383000
	027 Move X0, [X0+1816]
	028 Call 0x1C17CF4
	029 Move X0, 0x2383000
	030 Move X0, [X0+1824]
	031 Call 0x1C17CF4
	032 Move X0, 0x2385000
	033 Move X0, [X0+3152]
	034 Call 0x1C17CF4
	035 Move X0, 0x2383000
	036 Move X0, [X0+3576]
	037 Call 0x1C17CF4
	038 Move X0, 0x2385000
	039 Move X0, [X0+3160]
	040 Call 0x1C17CF4
	041 Move X0, 0x2385000
	042 Move X0, [X0+3168]
	043 Call 0x1C17CF4
	044 Move X0, 0x2383000
	045 Move X0, [X0+1928]
	046 Call 0x1C17CF4
	047 Move X0, 0x2385000
	048 Move X0, [X0+3176]
	049 Call 0x1C17CF4
	050 Move X0, 0x2385000
	051 Move X0, [X0+3184]
	052 Call 0x1C17CF4
	053 Move X0, 0x2385000
	054 Move X0, [X0+3192]
	055 Call 0x1C17CF4
	056 Move X0, 0x2385000
	057 Move X0, [X0+3200]
	058 Call 0x1C17CF4
	059 Move X0, 0x2385000
	060 Move X0, [X0+3208]
	061 Call 0x1C17CF4
	062 Move X0, 0x2385000
	063 Move X0, [X0+2680]
	064 Call 0x1C17CF4
	065 Move W8, 1
	066 Move [X21+2293], W8
	067 Move [X31+104], X31
	068 Move [X31+91], W31
	069 Move [X31+88], W31
	070 Compare X20, 0
	071 JumpIfEqual {238}
	072 Move X0, X20
	073 Move X1, X31
	074 Call Task.get_IsFaulted, X0
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {239}
	079 Move X8, 0x2385000
	080 Move X8, [X8+3176]
	081 Move X1, [X8]
	082 Move X0, X20
	083 Call Task`1<Object>.get_Result, X0
	084 Move X20, X0
	085 Compare X0, 0
	086 JumpIfEqual {251}
	087 Move X10, 0x2385000
	088 Move X8, [X20]
	089 Move X10, [X10+3160]
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Move X1, [X10]
	092 Compare X9, 0
	093 JumpIfEqual {100}
	094 Move X10, [X8+176]
	095 Add X10, X10, 8
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract X9, X9, 1
	099 Add X10, X10, 16
	100 Move W2, 2
	101 Move X0, X20
	102 Call 0x1C5D788
	103 Move W9, [X10]
	104 Add W9, W9, 2
	105 Add X8, X8, W9
	106 Add X0, X8, 312
	107 Move X8, [X0]
	108 Move X1, [X0+8]
	109 Move X0, X20
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Move X8, 0x2385000
	112 Move X8, [X8+3168]
	113 Move X1, [X8]
	114 Add X8, X31, 40
	115 Call JsonParser.FromJson, X0
	116 Move X8, 0x2384000
	117 Move X8, [X8+2544]
	118 Move X20, [X31+40]
	119 NotImplemented "Instruction LDUR not yet implemented."
	120 Move X21, [X31+64]
	121 Move X23, [X31+72]
	122 Move X0, [X8]
	123 Move X24, [X31+80]
	124 Move [X31+1], V0
	125 Move W8, [X0+224]
	126 Compare W8, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 Add X0, X31, 104
	130 Move W1, 2024
	131 Move W2, 10
	132 Move W3, 3
	133 Move W4, 15
	134 Move W7, 1
	135 Move W5, W31
	136 Move W6, W31
	137 Move [X31], X31
	138 Call DateTime..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	139 Move X8, 0x2385000
	140 Move X8, [X8+3144]
	141 Move X0, [X8]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1C17DFC
	146 Move X0, X31
	147 Call CultureInfo.get_InvariantCulture
	148 Move X8, 0x2385000
	149 Move X8, [X8+3208]
	150 Move X2, X0
	151 Move X1, [X8]
	152 Add X4, X31, 104
	153 Move W3, 16
	154 Move X0, X21
	155 Move X5, X31
	156 Call DateTime.TryParseExact, X0, X1, X2, X3, X4
	157 Move TEMP, X0
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfEqual {202}
	161 Move X8, 0x2383000
	162 Move X8, [X8+1824]
	163 Move X0, [X8]
	164 Call 0x1C17F10
	165 Move X8, 0x2383000
	166 Move X8, [X8+1816]
	167 Move X22, X0
	168 Move X1, [X8]
	169 Call Dictionary`2<Object, Object>..ctor, X0
	170 Compare X22, 0
	171 JumpIfEqual {252}
	172 Move X8, 0x2385000
	173 Move X8, [X8+3200]
	174 Move X9, 0x2383000
	175 Move X9, [X9+1808]
	176 Move X1, [X8]
	177 Move X3, [X9]
	178 Move X0, X22
	179 Move X2, X21
	180 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	181 Move X8, 0x2383000
	182 Move X8, [X8+1928]
	183 Move X0, [X8]
	184 Move W8, [X0+224]
	185 Compare W8, 0
	186 JumpIfNotEqual {188}
	187 Call 0x1C17DFC
	188 Move X8, 0x2385000
	189 Move X8, [X8+3184]
	190 Move X9, 0x2385000
	191 Move X10, 0x2385000
	192 Move X9, [X9+2680]
	193 Move X10, [X10+3192]
	194 Move X1, [X8]
	195 Move X3, [X9]
	196 Move X4, [X10]
	197 Move W0, 64
	198 Move W5, 140
	199 Move X2, X22
	200 Move X6, X31
	201 Call Log.Error, X0, X1, X2, X3, X4, X5
	202 Move X8, 0x2383000
	203 Move X8, [X8+3576]
	204 Move [X31+91], W31
	205 Move [X31+88], W31
	206 Move X0, [X8]
	207 Move W8, [X0+224]
	208 Compare W8, 0
	209 JumpIfNotEqual {211}
	210 Call 0x1C17DFC
	211 Move X8, 0x2385000
	212 Move X8, [X8+3152]
	213 Move X1, [X8]
	214 Move X0, X20
	215 Call 0x21B1650, X0
	216 Move X30, [X31+96]
	217 Move X8, [X31+104]
	218 Move V0, [X31+1]
	219 Move W10, [X31+88]
	220 NotImplemented "Instruction LDUR not yet implemented."
	221 And W9, W24, 1
	222 Move [X19], W0
	223 Move [X19+4], W31
	224 Move [X19+8], V0
	225 Move [X19+40], W9
	226 Move [X19+24], X8
	227 Move [X19+32], X23
	228 Move [X19+44], W11
	229 Move [X19+41], W10
	230 Move X20, [X31+144]
	231 Move X19, [X31+152]
	232 Move X22, [X31+128]
	233 Move X21, [X31+136]
	234 Move X24, [X31+112]
	235 Move X23, [X31+120]
	236 Add X31, X31, 160
	237 Return X0
	238 Call 0x1C17F20
	239 Move X0, X20
	240 Call 0x19913C0
	241 Move X0, X20
	242 Move X1, X31
	243 Call Task.get_Exception, X0
	244 Move X19, X0
	245 Move X0, 0x2385000
	246 Move X0, [X0+2712]
	247 Call 0x1C17D08
	248 Move X1, X0
	249 Move X0, X19
	250 Call 0x1C17DEC
	251 Call 0x1C17F20
	252 Call 0x1C17F20
	253 Move X19, X0
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Move X0, X19
	256 Call 0x3EB2AD0
	257 Move X19, X0
	258 Move X0, 0x2383000
	259 Move X0, [X0+2000]
	260 Call 0x1C17D08
	261 Move X8, [X19]
	262 Move X1, [X8]
	263 Call 0x1C18270
	264 Move TEMP, X0
	265 And TEMP, TEMP, 1
	266 Compare TEMP, 1
	267 JumpIfNotEqual {289}
	268 Move X19, [X19]
	269 Call 0x3EB2AE0
	270 Move X0, 0x2383000
	271 Move X0, [X0+2000]
	272 Call 0x1C17D08
	273 Call 0x1C17F10
	274 Move X20, X0
	275 Move X0, 0x2385000
	276 Move X0, [X0+3216]
	277 Call 0x1C17D08
	278 Move X1, X0
	279 Move X0, X20
	280 Move X2, X19
	281 Move X3, X31
	282 Call Exception..ctor, X0, X1, X2
	283 Move X0, 0x2385000
	284 Move X0, [X0+2712]
	285 Call 0x1C17D08
	286 Move X1, X0
	287 Move X0, X20
	288 Call 0x1C17DEC
	289 Move W0, 8
	290 Call 0x3EB2AF0
	291 Move X8, [X19]
	292 Move [X0], X8
	293 Move X1, 0x2144000
	294 Add X1, X1, 3672
	295 Move X2, X31
	296 Call 0x3EB2B00
	297 Move X19, X0
	298 Call 0x3EB2AE0
	299 Move X0, X19
	300 Call 0x1D2D690
	301 Call 0x1991590

Method: AnimalCompany.API.AnimalCompanyAPI/UpdateAvatarResponse <UpdateAvatarAsync>b__33_0(System.Threading.Tasks.Task`1<Nakama.IApiRpc> task)

Disassembly:
	0x01D7147C LDR X0, [X0 + 0xDC0]
	0x01D71480 BL 0x1C16CF4
	0x01D71484 ADRP X0, 0x2384000
	0x01D71488 LDR X0, [X0 + 0xDC8]
	0x01D7148C BL 0x1C16CF4
	0x01D71490 MOVZ W8, 0x1
	0x01D71494 STRB W8, [X20 + 0x8FB]
	0x01D71498 LDR X10, [X31 + 0x18]
	0x01D7149C STR X31, [X31 + 0x88]
	0x01D714A0 LDR W8, [X10]
	0x01D714A4 STR W8, [X31 + 0x14]
	0x01D714A8 CBZ W8, 0x1D714E0
	0x01D714AC ADRP X8, 0x2384000
	0x01D714B0 LDR X8, [X8 + 0xDA8]
	0x01D714B4 LDR X0, [X8]
	0x01D714B8 BL 0x1C16F10
	0x01D714BC ADRP X8, 0x2384000
	0x01D714C0 LDR X8, [X8 + 0xDA0]
	0x01D714C4 MOV X21, X0
	0x01D714C8 LDR X1, [X8]
	0x01D714CC BL 0x2F4F138
	0x01D714D0 LDR X8, [X31 + 0x18]
	0x01D714D4 MOV X20, X31
	0x01D714D8 STR X21, [X8 + 0x28]
	0x01D714DC B 0x1D71504
	0x01D714E0 LDR X8, [X10 + 0x30]
	0x01D714E4 MOVN W9, 0x0
	0x01D714E8 STR X8, [X31 + 0x88]
	0x01D714EC MOVN W8, 0x0
	0x01D714F0 STR X31, [X10 + 0x30]
	0x01D714F4 STR W8, [X31 + 0x14]
	0x01D714F8 STR W9, [X10]
	0x01D714FC B 0x1D715EC
	0x01D71500 B 0x1D71CD4
	0x01D71504 ADRP X21, 0x2382000
	0x01D71508 LDR X21, [X21 + 0x658]
	0x01D7150C LDR X0, [X21]
	0x01D71510 LDR W8, [X0 + 0xE0]
	0x01D71514 CBNZ W8, 0x1D71520
	0x01D71518 BL 0x1C16DFC
	0x01D7151C LDR X0, [X21]
	0x01D71520 LDR X8, [X0 + 0xB8]
	0x01D71524 LDR X21, [X8 + 0x10]
	0x01D71528 CBZ X21, 0x1D71930
	0x01D7152C ADRP X9, 0x2384000
	0x01D71530 ADRP X10, 0x2384000
	0x01D71534 LDR X9, [X9 + 0xA18]
	0x01D71538 LDR X8, [X21]
	0x01D7153C LDR X10, [X10 + 0xDC8]
	0x01D71540 LDR X11, [X31 + 0x18]
	0x01D71544 LDR X1, [X9]
	0x01D71548 LDRH W9, [X8 + 0x12E]
	0x01D7154C LDR X23, [X10]
	0x01D71550 LDR X22, [X11 + 0x20]
	0x01D71554 CBZ X9, 0x1D71578
	0x01D71558 LDR X10, [X8 + 0xB0]
	0x01D7155C ADD X10, X10, 0x8
	0x01D71560 LDUR X11, [X10 - 0x8]
	0x01D71564 CMP X11, X1
	0x01D71568 B.EQ 0x1D71588
	0x01D7156C SUBS X9, X9, 0x1
	0x01D71570 ADD X10, X10, 0x10
	0x01D71574 B.NE 0x1D71560
	0x01D71578 MOVZ W2, 0x3E
	0x01D7157C MOV X0, X21
	0x01D71580 BL 0x1C5C788
	0x01D71584 B 0x1D71598
	0x01D71588 LDR W9, [X10]
	0x01D7158C ADD W9, W9, 0x3E
	0x01D71590 ADD X8, X8, W9, 0x4, SXTW
	0x01D71594 ADD X0, X8, 0x138
	0x01D71598 LDP X8, X7, [X0]
	0x01D7159C MOVZ W3, 0x32
	0x01D715A0 MOV X0, X21
	0x01D715A4 MOV X1, X22
	0x01D715A8 MOV X2, X23
	0x01D715AC MOV X4, X20
	0x01D715B0 MOV X5, X31
	0x01D715B4 MOV X6, X31
	0x01D715B8 BLR X8
	0x01D715BC CBZ X0, 0x1D71944
	0x01D715C0 ADRP X8, 0x2384000
	0x01D715C4 LDR X8, [X8 + 0xDC0]
	0x01D715C8 LDR X1, [X8]
	0x01D715CC BL 0x269F5D0
	0x01D715D0 ADRP X8, 0x2384000
	0x01D715D4 LDR X8, [X8 + 0xDB8]
	0x01D715D8 STR X0, [X31 + 0x88]
	0x01D715DC LDR X1, [X8]
	0x01D715E0 ADD X0, X31, 0x88
	0x01D715E4 BL 0x2677430
	0x01D715E8 TBZ X0, 0x0, 0x1D718E8
	0x01D715EC ADRP X8, 0x2384000
	0x01D715F0 LDR X8, [X8 + 0xDB0]
	0x01D715F4 ADD X0, X31, 0x88
	0x01D715F8 LDR X1, [X8]
	0x01D715FC BL 0x2677474
	0x01D71600 ADRP X10, 0x2384000
	0x01D71604 LDR X10, [X10 + 0xD68]
	0x01D71608 MOV X20, X0
	0x01D7160C CBZ X0, 0x1D71934
	0x01D71610 LDR X8, [X20]
	0x01D71614 LDR X1, [X10]
	0x01D71618 MOV X19, X10
	0x01D7161C LDRH W9, [X8 + 0x12E]
	0x01D71620 CBZ X9, 0x1D71644
	0x01D71624 LDR X10, [X8 + 0xB0]
	0x01D71628 ADD X10, X10, 0x8
	0x01D7162C LDUR X11, [X10 - 0x8]
	0x01D71630 CMP X11, X1
	0x01D71634 B.EQ 0x1D71654
	0x01D71638 SUBS X9, X9, 0x1
	0x01D7163C ADD X10, X10, 0x10
	0x01D71640 B.NE 0x1D7162C
	0x01D71644 MOVZ W2, 0x1
	0x01D71648 MOV X0, X20
	0x01D7164C BL 0x1C5C788
	0x01D71650 B 0x1D71664
	0x01D71654 LDR W9, [X10]
	0x01D71658 ADD W9, W9, 0x1
	0x01D7165C ADD X8, X8, W9, 0x4, SXTW
	0x01D71660 ADD X0, X8, 0x138
	0x01D71664 LDP X8, X1, [X0]
	0x01D71668 MOV X0, X20
	0x01D7166C BLR X8
	0x01D71670 MOV X21, X0
	0x01D71674 CBZ X0, 0x1D7193C
	0x01D71678 ADRP X10, 0x2384000
	0x01D7167C LDR X8, [X21]
	0x01D71680 LDR X10, [X10 + 0xD78]
	0x01D71684 LDRH W9, [X8 + 0x12E]
	0x01D71688 LDR X1, [X10]
	0x01D7168C CBZ X9, 0x1D716B0
	0x01D71690 LDR X10, [X8 + 0xB0]
	0x01D71694 ADD X10, X10, 0x8
	0x01D71698 LDUR X11, [X10 - 0x8]
	0x01D7169C CMP X11, X1
	0x01D716A0 B.EQ 0x1D716C0
	0x01D716A4 SUBS X9, X9, 0x1
	0x01D716A8 ADD X10, X10, 0x10
	0x01D716AC B.NE 0x1D71698
	0x01D716B0 MOV X0, X21
	0x01D716B4 MOV W2, W31
	0x01D716B8 BL 0x1C5C788
	0x01D716BC B 0x1D716CC
	0x01D716C0 LDRSW X9, [X10]
	0x01D716C4 ADD X8, X8, X9, 0x4, LSL
	0x01D716C8 ADD X0, X8, 0x138
	0x01D716CC LDP X8, X1, [X0]
	0x01D716D0 MOV X0, X21
	0x01D716D4 BLR X8
	0x01D716D8 MOV X21, X0
	0x01D716DC CBZ X0, 0x1D71940
	0x01D716E0 ADRP X24, 0x2382000
	0x01D716E4 ADRP X28, 0x2384000
	0x01D716E8 ADRP X29, 0x2384000
	0x01D716EC ADRP X25, 0x2384000
	0x01D716F0 ADRP X27, 0x2384000
	0x01D716F4 LDR X24, [X24 + 0xE18]
	0x01D716F8 LDR X28, [X28 + 0xD80]
	0x01D716FC LDR X29, [X29 + 0xD70]
	0x01D71700 LDR X25, [X25 + 0xD88]
	0x01D71704 LDR X27, [X27 + 0xD90]
	0x01D71708 MOVZ W26, 0x30
	0x01D7170C LDR X8, [X21]
	0x01D71710 LDR X1, [X24]
	0x01D71714 LDRH W9, [X8 + 0x12E]
	0x01D71718 CBZ X9, 0x1D7173C
	0x01D7171C LDR X10, [X8 + 0xB0]
	0x01D71720 ADD X10, X10, 0x8
	0x01D71724 LDUR X11, [X10 - 0x8]
	0x01D71728 CMP X11, X1
	0x01D7172C B.EQ 0x1D7174C
	0x01D71730 SUBS X9, X9, 0x1
	0x01D71734 ADD X10, X10, 0x10
	0x01D71738 B.NE 0x1D71724
	0x01D7173C MOV X0, X21
	0x01D71740 MOV W2, W31
	0x01D71744 BL 0x1C5C788
	0x01D71748 B 0x1D71758
	0x01D7174C LDRSW X9, [X10]
	0x01D71750 ADD X8, X8, X9, 0x4, LSL
	0x01D71754 ADD X0, X8, 0x138
	0x01D71758 LDP X8, X1, [X0]
	0x01D7175C MOV X0, X21
	0x01D71760 BLR X8
	0x01D71764 TBZ X0, 0x0, 0x1D718D4
	0x01D71768 LDR X8, [X21]
	0x01D7176C LDR X1, [X28]
	0x01D71770 LDRH W9, [X8 + 0x12E]
	0x01D71774 CBZ X9, 0x1D71798
	0x01D71778 LDR X10, [X8 + 0xB0]
	0x01D7177C ADD X10, X10, 0x8
	0x01D71780 LDUR X11, [X10 - 0x8]
	0x01D71784 CMP X11, X1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2668000
	007 Move W8, [X20+2294]
	008 Move X19, X1
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {42}
	013 Move X0, 0x2385000
	014 Move X0, [X0+3224]
	015 Call 0x1C17CF4
	016 Move X0, 0x2383000
	017 Move X0, [X0+3576]
	018 Call 0x1C17CF4
	019 Move X0, 0x2385000
	020 Move X0, [X0+3160]
	021 Call 0x1C17CF4
	022 Move X0, 0x2385000
	023 Move X0, [X0+3232]
	024 Call 0x1C17CF4
	025 Move X0, 0x2383000
	026 Move X0, [X0+1928]
	027 Call 0x1C17CF4
	028 Move X0, 0x2385000
	029 Move X0, [X0+3176]
	030 Call 0x1C17CF4
	031 Move X0, 0x2385000
	032 Move X0, [X0+3240]
	033 Call 0x1C17CF4
	034 Move X0, 0x2385000
	035 Move X0, [X0+2680]
	036 Call 0x1C17CF4
	037 Move X0, 0x2385000
	038 Move X0, [X0+3248]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X20+2294], W8
	042 Move [X31+12], W31
	043 Compare X19, 0
	044 JumpIfEqual {147}
	045 Move X0, X19
	046 Move X1, X31
	047 Call Task.get_IsFaulted, X0
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {81}
	052 Move X0, X19
	053 Move X1, X31
	054 Call Task.get_Exception, X0
	055 Move X8, 0x2383000
	056 Move X8, [X8+1928]
	057 Move X19, X0
	058 Move X8, [X8]
	059 Move W9, [X8+224]
	060 Compare W9, 0
	061 JumpIfNotEqual {64}
	062 Move X0, X8
	063 Call 0x1C17DFC
	064 Move X8, 0x2385000
	065 Move X9, 0x2385000
	066 Move X10, 0x2385000
	067 Move X8, [X8+3248]
	068 Move X9, [X9+2680]
	069 Move X10, [X10+3240]
	070 Move W0, 64
	071 Move X1, [X8]
	072 Move X4, [X9]
	073 Move X5, [X10]
	074 Move W6, 280
	075 Move X2, X19
	076 Move X3, X31
	077 Move X7, X31
	078 Call Log.Error, X0, X1, X2, X3, X4, X5, X6
	079 Move X8, X31
	080 Move X9, 3
	081 Move X8, 0x2385000
	082 Move X8, [X8+3176]
	083 Move X1, [X8]
	084 Move X0, X19
	085 Call Task`1<Object>.get_Result, X0
	086 Move X19, X0
	087 Compare X0, 0
	088 JumpIfEqual {148}
	089 Move X10, 0x2385000
	090 Move X8, [X19]
	091 Move X10, [X10+3160]
	092 NotImplemented "Instruction LDRH not yet implemented."
	093 Move X1, [X10]
	094 Compare X9, 0
	095 JumpIfEqual {102}
	096 Move X10, [X8+176]
	097 Add X10, X10, 8
	098 NotImplemented "Instruction LDUR not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Subtract X9, X9, 1
	101 Add X10, X10, 16
	102 Move W2, 2
	103 Move X0, X19
	104 Call 0x1C5D788
	105 Move W9, [X10]
	106 Add W9, W9, 2
	107 Add X8, X8, W9
	108 Add X0, X8, 312
	109 Move X8, [X0]
	110 Move X1, [X0+8]
	111 Move X0, X19
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Move X8, 0x2385000
	114 Move X8, [X8+3232]
	115 Move X1, [X8]
	116 Call JsonParser.FromJson, X0
	117 Move X8, 0x2383000
	118 Move X8, [X8+3576]
	119 Move X19, X0
	120 Move X20, X1
	121 Move X0, [X8]
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfNotEqual {126}
	125 Call 0x1C17DFC
	126 Move X8, 0x2385000
	127 Move X8, [X8+3224]
	128 Move X2, [X8]
	129 Add X1, X31, 12
	130 Move X0, X20
	131 Call 0x21B1A58, X0, X1
	132 Move W9, [X31+12]
	133 And W31, W0, 1
	134 Move X10, 1
	135 And X8, X19, 1
	136 Move X9, X9
	137 ShiftRight X9, 32
	138 And X9, X9, 0x7FFFFFFF
	139 NotImplemented "Instruction CSEL not yet implemented."
	140 Move X20, [X31+32]
	141 Move X19, [X31+40]
	142 Move X30, [X31+16]
	143 Move X21, [X31+24]
	144 Or X0, X9, X8
	145 Add X31, X31, 48
	146 Return X0
	147 Call 0x1C17F20
	148 Call 0x1C17F20
	149 Move X19, X0
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X0, X19
	152 Call 0x3EB2AD0
	153 Move X19, X0
	154 Move X0, 0x2383000
	155 Move X0, [X0+2000]
	156 Call 0x1C17D08
	157 Move X8, [X19]
	158 Move X1, [X8]
	159 Call 0x1C18270
	160 Move TEMP, X0
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfNotEqual {195}
	164 Move X19, [X19]
	165 Call 0x3EB2AE0
	166 Move X0, 0x2383000
	167 Move X0, [X0+1928]
	168 Call 0x1C17D08
	169 Move W8, [X0+224]
	170 Compare W8, 0
	171 JumpIfNotEqual {173}
	172 Call 0x1C17DFC
	173 Move X0, 0x2385000
	174 Move X0, [X0+3256]
	175 Call 0x1C17D08
	176 Move X20, X0
	177 Move X0, 0x2385000
	178 Move X0, [X0+2680]
	179 Call 0x1C17D08
	180 Move X21, X0
	181 Move X0, 0x2385000
	182 Move X0, [X0+3240]
	183 Call 0x1C17D08
	184 Move X5, X0
	185 Move W0, 64
	186 Move W6, 295
	187 Move X1, X20
	188 Move X2, X19
	189 Move X3, X31
	190 Move X4, X21
	191 Move X7, X31
	192 Call Log.Error, X0, X1, X2, X3, X4, X5, X6
	193 Move X8, X31
	194 Move X9, 2
	195 Move W0, 8
	196 Call 0x3EB2AF0
	197 Move X8, [X19]
	198 Move [X0], X8
	199 Move X1, 0x2144000
	200 Add X1, X1, 3672
	201 Move X2, X31
	202 Call 0x3EB2B00
	203 Move X19, X0
	204 Call 0x3EB2AE0
	205 Move X0, X19
	206 Call 0x1D2D690
	207 Call 0x1991590

Method: AnimalCompany.API.AnimalCompanyAPI/ClaimRewardResponse <ClaimRewardAsync>b__37_0(System.Threading.Tasks.Task`1<Nakama.IApiRpc> task)

Disassembly:
	0x01D71788 B.EQ 0x1D717A8
	0x01D7178C SUBS X9, X9, 0x1
	0x01D71790 ADD X10, X10, 0x10
	0x01D71794 B.NE 0x1D71780
	0x01D71798 MOV X0, X21
	0x01D7179C MOV W2, W31
	0x01D717A0 BL 0x1C5C788
	0x01D717A4 B 0x1D717B4
	0x01D717A8 LDRSW X9, [X10]
	0x01D717AC ADD X8, X8, X9, 0x4, LSL
	0x01D717B0 ADD X0, X8, 0x138
	0x01D717B4 LDP X8, X1, [X0]
	0x01D717B8 MOV X0, X21
	0x01D717BC BLR X8
	0x01D717C0 MOV X23, X0
	0x01D717C4 CBZ X0, 0x1D718DC
	0x01D717C8 LDR X8, [X23]
	0x01D717CC LDR X9, [X31 + 0x18]
	0x01D717D0 LDR X1, [X29]
	0x01D717D4 LDR X22, [X9 + 0x28]
	0x01D717D8 LDRH W9, [X8 + 0x12E]
	0x01D717DC CBZ X9, 0x1D71800
	0x01D717E0 LDR X10, [X8 + 0xB0]
	0x01D717E4 ADD X10, X10, 0x8
	0x01D717E8 LDUR X11, [X10 - 0x8]
	0x01D717EC CMP X11, X1
	0x01D717F0 B.EQ 0x1D71810
	0x01D717F4 SUBS X9, X9, 0x1
	0x01D717F8 ADD X10, X10, 0x10
	0x01D717FC B.NE 0x1D717E8
	0x01D71800 MOVZ W2, 0x7
	0x01D71804 MOV X0, X23
	0x01D71808 BL 0x1C5C788
	0x01D7180C B 0x1D71820
	0x01D71810 LDR W9, [X10]
	0x01D71814 ADD W9, W9, 0x7
	0x01D71818 ADD X8, X8, W9, 0x4, SXTW
	0x01D7181C ADD X0, X8, 0x138
	0x01D71820 LDP X8, X1, [X0]
	0x01D71824 MOV X0, X23
	0x01D71828 BLR X8
	0x01D7182C LDR X1, [X25]
	0x01D71830 ADD X8, X31, 0x20
	0x01D71834 BL 0x220DCD0
	0x01D71838 LDP V0, V1, [X31 + 0x20]
	0x01D7183C LDR V2, [X31 + 0x4]
	0x01D71840 STP V0, V1, [X31 + 0x50]
	0x01D71844 STR V2, [X31 + 0x7]
	0x01D71848 CBZ X22, 0x1D718E0
	0x01D7184C LDP V0, V1, [X31 + 0x50]
	0x01D71850 LDR V2, [X31 + 0x7]
	0x01D71854 LDR X10, [X27]
	0x01D71858 STP V0, V1, [X31 + 0x90]
	0x01D7185C STR V2, [X31 + 0xB]
	0x01D71860 LDR W9, [X22 + 0x1C]
	0x01D71864 LDR X8, [X22 + 0x10]
	0x01D71868 ADD W9, W9, 0x1
	0x01D7186C STR W9, [X22 + 0x1C]
	0x01D71870 CBZ X8, 0x1D718E4
	0x01D71874 LDRSW X9, [X22 + 0x18]
	0x01D71878 LDR W11, [X8 + 0x18]
	0x01D7187C CMP W9, W11
	0x01D71880 B.CS 0x1D718A8
	0x01D71884 ADD W10, W9, 0x1
	0x01D71888 STR W10, [X22 + 0x18]
	0x01D7188C LDP V1, V0, [X31 + 0xA0]
	0x01D71890 LDR V2, [X31 + 0x9]
	0x01D71894 NOP
	0x01D71898 MADD X8, X9, X26, X8
	0x01D7189C STP V1, V0, [X8 + 0x30]
	0x01D718A0 STR V2, [X8 + 0x2]
	0x01D718A4 B 0x1D7170C
	0x01D718A8 LDR X8, [X10 + 0x20]
	0x01D718AC LDP V0, V1, [X31 + 0x90]
	0x01D718B0 LDR V2, [X31 + 0xB]
	0x01D718B4 LDR X8, [X8 + 0xC0]
	0x01D718B8 LDR X2, [X8 + 0x70]
	0x01D718BC STP V0, V1, [X31 + 0xC0]
	0x01D718C0 STR V2, [X31 + 0xE]
	0x01D718C4 ADD X1, X31, 0xC0
	0x01D718C8 MOV X0, X22
	0x01D718CC BL 0x2F4F9DC
	0x01D718D0 B 0x1D7170C
	0x01D718D4 MOV X24, X31
	0x01D718D8 B 0x1D719AC
	0x01D718DC BL 0x1C16F20
	0x01D718E0 BL 0x1C16F20
	0x01D718E4 BL 0x1C16F20
	0x01D718E8 LDR X19, [X31 + 0x18]
	0x01D718EC STR W31, [X19]
	0x01D718F0 LDR X8, [X31 + 0x88]
	0x01D718F4 STR X8, [X19 + 0x30]
	0x01D718F8 ADRP X8, 0x2384000
	0x01D718FC LDR X8, [X8 + 0xB80]
	0x01D71900 LDR X0, [X8]
	0x01D71904 LDR W8, [X0 + 0xE0]
	0x01D71908 CBNZ W8, 0x1D71910
	0x01D7190C BL 0x1C16DFC
	0x01D71910 ADRP X8, 0x2384000
	0x01D71914 LDR X8, [X8 + 0xD58]
	0x01D71918 ADD X0, X19, 0x8
	0x01D7191C LDR X3, [X8]
	0x01D71920 ADD X1, X31, 0x88
	0x01D71924 MOV X2, X19
	0x01D71928 BL 0x1FB120C
	0x01D7192C B 0x1D71D5C
	0x01D71930 BL 0x1C16F20
	0x01D71934 MOV X19, X10
	0x01D71938 BL 0x1C16F20
	0x01D7193C BL 0x1C16F20
	0x01D71940 BL 0x1C16F20
	0x01D71944 BL 0x1C16F20
	0x01D71948 B 0x1D71CD4
	0x01D7194C B 0x1D71CD4
	0x01D71950 B 0x1D71CD4
	0x01D71954 B 0x1D7198C
	0x01D71958 B 0x1D71CD4
	0x01D7195C B 0x1D71CB0
	0x01D71960 B 0x1D71CD4
	0x01D71964 B 0x1D71CD4
	0x01D71968 B 0x1D71CB0
	0x01D7196C B 0x1D71CB0
	0x01D71970 B 0x1D71CD4
	0x01D71974 B 0x1D7198C
	0x01D71978 B 0x1D7198C
	0x01D7197C B 0x1D7198C
	0x01D71980 B 0x1D7198C
	0x01D71984 B 0x1D7198C
	0x01D71988 B 0x1D7198C
	0x01D7198C MOV X22, X1
	0x01D71990 MOV X23, X0
	0x01D71994 CMP W22, 0x1
	0x01D71998 B.NE 0x1D71A00
	0x01D7199C MOV X0, X23
	0x01D719A0 BL 0x3EB1AD0
	0x01D719A4 LDR X24, [X0]
	0x01D719A8 BL 0x3EB1AE0
	0x01D719AC LDR W8, [X31 + 0x14]
	0x01D719B0 TBZ X8, 0x1F, 0x1D71A70
	0x01D719B4 CBZ X21, 0x1D71A70
	0x01D719B8 LDR X8, [X21]
	0x01D719BC ADRP X10, 0x2382000
	0x01D719C0 LDRH W9, [X8 + 0x12E]
	0x01D719C4 LDR X10, [X10 + 0xE00]
	0x01D719C8 LDR X1, [X10]
	0x01D719CC CBZ X9, 0x1D719F0
	0x01D719D0 LDR X10, [X8 + 0xB0]
	0x01D719D4 ADD X10, X10, 0x8
	0x01D719D8 LDUR X11, [X10 - 0x8]
	0x01D719DC CMP X11, X1
	0x01D719E0 B.EQ 0x1D71A58
	0x01D719E4 SUBS X9, X9, 0x1
	0x01D719E8 ADD X10, X10, 0x10
	0x01D719EC B.NE 0x1D719D8
	0x01D719F0 MOV X0, X21
	0x01D719F4 MOV W2, W31
	0x01D719F8 BL 0x1C5C788
	0x01D719FC B 0x1D71A64
	0x01D71A00 MOV X24, X31
	0x01D71A04 LDR W8, [X31 + 0x14]
	0x01D71A08 TBZ X8, 0x1F, 0x1D71A94
	0x01D71A0C CBZ X21, 0x1D71A94
	0x01D71A10 LDR X8, [X21]
	0x01D71A14 ADRP X10, 0x2382000
	0x01D71A18 LDRH W9, [X8 + 0x12E]
	0x01D71A1C LDR X10, [X10 + 0xE00]
	0x01D71A20 LDR X1, [X10]
	0x01D71A24 CBZ X9, 0x1D71A48
	0x01D71A28 LDR X10, [X8 + 0xB0]
	0x01D71A2C ADD X10, X10, 0x8
	0x01D71A30 LDUR X11, [X10 - 0x8]
	0x01D71A34 CMP X11, X1
	0x01D71A38 B.EQ 0x1D71A7C
	0x01D71A3C SUBS X9, X9, 0x1
	0x01D71A40 ADD X10, X10, 0x10
	0x01D71A44 B.NE 0x1D71A30
	0x01D71A48 MOV X0, X21
	0x01D71A4C MOV W2, W31
	0x01D71A50 BL 0x1C5C788
	0x01D71A54 B 0x1D71A88
	0x01D71A58 LDRSW X9, [X10]
	0x01D71A5C ADD X8, X8, X9, 0x4, LSL
	0x01D71A60 ADD X0, X8, 0x138
	0x01D71A64 LDP X8, X1, [X0]
	0x01D71A68 MOV X0, X21
	0x01D71A6C BLR X8
	0x01D71A70 CBZ X24, 0x1D71B38
	0x01D71A74 MOV X0, X24
	0x01D71A78 BL 0x1C16F18
	0x01D71A7C LDRSW X9, [X10]
	0x01D71A80 ADD X8, X8, X9, 0x4, LSL
	0x01D71A84 ADD X0, X8, 0x138
	0x01D71A88 LDP X8, X1, [X0]
	0x01D71A8C MOV X0, X21
	0x01D71A90 BLR X8

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2668000
	007 Move W8, [X20+2295]
	008 Move X19, X1
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {42}
	013 Move X0, 0x2385000
	014 Move X0, [X0+3264]
	015 Call 0x1C17CF4
	016 Move X0, 0x2383000
	017 Move X0, [X0+3576]
	018 Call 0x1C17CF4
	019 Move X0, 0x2385000
	020 Move X0, [X0+3160]
	021 Call 0x1C17CF4
	022 Move X0, 0x2385000
	023 Move X0, [X0+3272]
	024 Call 0x1C17CF4
	025 Move X0, 0x2383000
	026 Move X0, [X0+1928]
	027 Call 0x1C17CF4
	028 Move X0, 0x2385000
	029 Move X0, [X0+3176]
	030 Call 0x1C17CF4
	031 Move X0, 0x2385000
	032 Move X0, [X0+3280]
	033 Call 0x1C17CF4
	034 Move X0, 0x2385000
	035 Move X0, [X0+2680]
	036 Call 0x1C17CF4
	037 Move X0, 0x2385000
	038 Move X0, [X0+3288]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X20+2295], W8
	042 Move [X31+12], W31
	043 Compare X19, 0
	044 JumpIfEqual {147}
	045 Move X0, X19
	046 Move X1, X31
	047 Call Task.get_IsFaulted, X0
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {81}
	052 Move X0, X19
	053 Move X1, X31
	054 Call Task.get_Exception, X0
	055 Move X8, 0x2383000
	056 Move X8, [X8+1928]
	057 Move X19, X0
	058 Move X8, [X8]
	059 Move W9, [X8+224]
	060 Compare W9, 0
	061 JumpIfNotEqual {64}
	062 Move X0, X8
	063 Call 0x1C17DFC
	064 Move X8, 0x2385000
	065 Move X9, 0x2385000
	066 Move X10, 0x2385000
	067 Move X8, [X8+3280]
	068 Move X9, [X9+2680]
	069 Move X10, [X10+3288]
	070 Move W0, 64
	071 Move X1, [X8]
	072 Move X4, [X9]
	073 Move X5, [X10]
	074 Move W6, 347
	075 Move X2, X19
	076 Move X3, X31
	077 Move X7, X31
	078 Call Log.Error, X0, X1, X2, X3, X4, X5, X6
	079 Move X8, X31
	080 Move X9, 3
	081 Move X8, 0x2385000
	082 Move X8, [X8+3176]
	083 Move X1, [X8]
	084 Move X0, X19
	085 Call Task`1<Object>.get_Result, X0
	086 Move X19, X0
	087 Compare X0, 0
	088 JumpIfEqual {148}
	089 Move X10, 0x2385000
	090 Move X8, [X19]
	091 Move X10, [X10+3160]
	092 NotImplemented "Instruction LDRH not yet implemented."
	093 Move X1, [X10]
	094 Compare X9, 0
	095 JumpIfEqual {102}
	096 Move X10, [X8+176]
	097 Add X10, X10, 8
	098 NotImplemented "Instruction LDUR not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Subtract X9, X9, 1
	101 Add X10, X10, 16
	102 Move W2, 2
	103 Move X0, X19
	104 Call 0x1C5D788
	105 Move W9, [X10]
	106 Add W9, W9, 2
	107 Add X8, X8, W9
	108 Add X0, X8, 312
	109 Move X8, [X0]
	110 Move X1, [X0+8]
	111 Move X0, X19
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Move X8, 0x2385000
	114 Move X8, [X8+3272]
	115 Move X1, [X8]
	116 Call JsonParser.FromJson, X0
	117 Move X8, 0x2383000
	118 Move X8, [X8+3576]
	119 Move X19, X0
	120 Move X20, X1
	121 Move X0, [X8]
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfNotEqual {126}
	125 Call 0x1C17DFC
	126 Move X8, 0x2385000
	127 Move X8, [X8+3264]
	128 Move X2, [X8]
	129 Add X1, X31, 12
	130 Move X0, X20
	131 Call 0x21B1A58, X0, X1
	132 Move W9, [X31+12]
	133 And W31, W0, 1
	134 Move X10, 1
	135 And X8, X19, 1
	136 Move X9, X9
	137 ShiftRight X9, 32
	138 And X9, X9, 0x7FFFFFFF
	139 NotImplemented "Instruction CSEL not yet implemented."
	140 Move X20, [X31+32]
	141 Move X19, [X31+40]
	142 Move X30, [X31+16]
	143 Move X21, [X31+24]
	144 Or X0, X9, X8
	145 Add X31, X31, 48
	146 Return X0
	147 Call 0x1C17F20
	148 Call 0x1C17F20
	149 Move X19, X0
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X0, X19
	152 Call 0x3EB2AD0
	153 Move X19, X0
	154 Move X0, 0x2383000
	155 Move X0, [X0+2000]
	156 Call 0x1C17D08
	157 Move X8, [X19]
	158 Move X1, [X8]
	159 Call 0x1C18270
	160 Move TEMP, X0
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfNotEqual {195}
	164 Move X19, [X19]
	165 Call 0x3EB2AE0
	166 Move X0, 0x2383000
	167 Move X0, [X0+1928]
	168 Call 0x1C17D08
	169 Move W8, [X0+224]
	170 Compare W8, 0
	171 JumpIfNotEqual {173}
	172 Call 0x1C17DFC
	173 Move X0, 0x2385000
	174 Move X0, [X0+3296]
	175 Call 0x1C17D08
	176 Move X20, X0
	177 Move X0, 0x2385000
	178 Move X0, [X0+2680]
	179 Call 0x1C17D08
	180 Move X21, X0
	181 Move X0, 0x2385000
	182 Move X0, [X0+3288]
	183 Call 0x1C17D08
	184 Move X5, X0
	185 Move W0, 64
	186 Move W6, 362
	187 Move X1, X20
	188 Move X2, X19
	189 Move X3, X31
	190 Move X4, X21
	191 Move X7, X31
	192 Call Log.Error, X0, X1, X2, X3, X4, X5, X6
	193 Move X8, X31
	194 Move X9, 2
	195 Move W0, 8
	196 Call 0x3EB2AF0
	197 Move X8, [X19]
	198 Move [X0], X8
	199 Move X1, 0x2144000
	200 Add X1, X1, 3672
	201 Move X2, X31
	202 Call 0x3EB2B00
	203 Move X19, X0
	204 Call 0x3EB2AE0
	205 Move X0, X19
	206 Call 0x1D2D690
	207 Call 0x1991590

Method: AnimalCompany.API.AnimalCompanyAPI/PurchaseAvatarItemsResponse <PurchaseAvatarItemsAsync>b__43_0(System.Threading.Tasks.Task`1<Nakama.IApiRpc> task)

Disassembly:
	0x01D71A94 CBNZ X24, 0x1D71C64
	0x01D71A98 CMP W22, 0x1
	0x01D71A9C B.NE 0x1D71CDC
	0x01D71AA0 MOV X0, X23
	0x01D71AA4 BL 0x3EB1AD0
	0x01D71AA8 MOV X21, X0
	0x01D71AAC ADRP X0, 0x2382000
	0x01D71AB0 LDR X0, [X0 + 0x7D0]
	0x01D71AB4 BL 0x1C16D08
	0x01D71AB8 LDR X8, [X21]
	0x01D71ABC LDR X1, [X8]
	0x01D71AC0 BL 0x1C17270
	0x01D71AC4 TBZ X0, 0x0, 0x1D71C6C
	0x01D71AC8 LDR X21, [X21]
	0x01D71ACC BL 0x3EB1AE0
	0x01D71AD0 ADRP X0, 0x2382000
	0x01D71AD4 LDR X0, [X0 + 0x788]
	0x01D71AD8 BL 0x1C16D08
	0x01D71ADC LDR W8, [X0 + 0xE0]
	0x01D71AE0 CBNZ W8, 0x1D71AE8
	0x01D71AE4 BL 0x1C16DFC
	0x01D71AE8 ADRP X0, 0x2384000
	0x01D71AEC LDR X0, [X0 + 0xDD0]
	0x01D71AF0 BL 0x1C16D08
	0x01D71AF4 MOV X22, X0
	0x01D71AF8 ADRP X0, 0x2384000
	0x01D71AFC LDR X0, [X0 + 0xA78]
	0x01D71B00 BL 0x1C16D08
	0x01D71B04 MOV X23, X0
	0x01D71B08 ADRP X0, 0x2384000
	0x01D71B0C LDR X0, [X0 + 0xDD8]
	0x01D71B10 BL 0x1C16D08
	0x01D71B14 MOV X5, X0
	0x01D71B18 MOVZ W0, 0x40
	0x01D71B1C MOVZ W6, 0x1B8
	0x01D71B20 MOV X1, X22
	0x01D71B24 MOV X2, X21
	0x01D71B28 MOV X3, X31
	0x01D71B2C MOV X4, X23
	0x01D71B30 MOV X7, X31
	0x01D71B34 BL 0x35C2674
	0x01D71B38 CBZ X20, 0x1D71C60
	0x01D71B3C LDR X8, [X20]
	0x01D71B40 LDR X1, [X19]
	0x01D71B44 LDRH W9, [X8 + 0x12E]
	0x01D71B48 CBZ X9, 0x1D71B6C
	0x01D71B4C LDR X10, [X8 + 0xB0]
	0x01D71B50 ADD X10, X10, 0x8
	0x01D71B54 LDUR X11, [X10 - 0x8]
	0x01D71B58 CMP X11, X1
	0x01D71B5C B.EQ 0x1D71B7C
	0x01D71B60 SUBS X9, X9, 0x1
	0x01D71B64 ADD X10, X10, 0x10
	0x01D71B68 B.NE 0x1D71B54
	0x01D71B6C MOV X0, X20
	0x01D71B70 MOV W2, W31
	0x01D71B74 BL 0x1C5C788
	0x01D71B78 B 0x1D71B88
	0x01D71B7C LDRSW X9, [X10]
	0x01D71B80 ADD X8, X8, X9, 0x4, LSL
	0x01D71B84 ADD X0, X8, 0x138
	0x01D71B88 LDP X8, X1, [X0]
	0x01D71B8C MOV X0, X20
	0x01D71B90 BLR X8
	0x01D71B94 CBZ X0, 0x1D71BF8
	0x01D71B98 LDR X8, [X20]
	0x01D71B9C LDR X1, [X19]
	0x01D71BA0 LDRH W9, [X8 + 0x12E]
	0x01D71BA4 CBZ X9, 0x1D71BC8
	0x01D71BA8 LDR X10, [X8 + 0xB0]
	0x01D71BAC ADD X10, X10, 0x8
	0x01D71BB0 LDUR X11, [X10 - 0x8]
	0x01D71BB4 CMP X11, X1
	0x01D71BB8 B.EQ 0x1D71BD8
	0x01D71BBC SUBS X9, X9, 0x1
	0x01D71BC0 ADD X10, X10, 0x10
	0x01D71BC4 B.NE 0x1D71BB0
	0x01D71BC8 MOV X0, X20
	0x01D71BCC MOV W2, W31
	0x01D71BD0 BL 0x1C5C788
	0x01D71BD4 B 0x1D71BE4
	0x01D71BD8 LDRSW X9, [X10]
	0x01D71BDC ADD X8, X8, X9, 0x4, LSL
	0x01D71BE0 ADD X0, X8, 0x138
	0x01D71BE4 LDP X8, X1, [X0]
	0x01D71BE8 MOV X0, X20
	0x01D71BEC BLR X8
	0x01D71BF0 MOV X20, X0
	0x01D71BF4 B 0x1D71504
	0x01D71BF8 LDR X8, [X31 + 0x18]
	0x01D71BFC LDR X0, [X8 + 0x28]
	0x01D71C00 CBZ X0, 0x1D71C90
	0x01D71C04 ADRP X8, 0x2384000
	0x01D71C08 LDR X8, [X8 + 0xD98]
	0x01D71C0C LDR X1, [X8]
	0x01D71C10 BL 0x2F51D78
	0x01D71C14 LDR X9, [X31 + 0x18]
	0x01D71C18 MOVN W8, 0x1
	0x01D71C1C MOV X20, X0
	0x01D71C20 STR X31, [X9 + 0x28]
	0x01D71C24 STR W8, [X9]
	0x01D71C28 ADRP X8, 0x2384000
	0x01D71C2C LDR X8, [X8 + 0xB80]
	0x01D71C30 ADD X19, X9, 0x8
	0x01D71C34 LDR X0, [X8]
	0x01D71C38 LDR W8, [X0 + 0xE0]
	0x01D71C3C CBNZ W8, 0x1D71C44
	0x01D71C40 BL 0x1C16DFC
	0x01D71C44 ADRP X8, 0x2384000
	0x01D71C48 LDR X8, [X8 + 0xD60]
	0x01D71C4C MOV X0, X19
	0x01D71C50 MOV X1, X20
	0x01D71C54 LDR X2, [X8]
	0x01D71C58 BL 0x26322B0
	0x01D71C5C B 0x1D71D5C
	0x01D71C60 BL 0x1C16F20
	0x01D71C64 MOV X0, X24
	0x01D71C68 BL 0x1C16F18
	0x01D71C6C MOVZ W0, 0x8
	0x01D71C70 BL 0x3EB1AF0
	0x01D71C74 LDR X8, [X21]
	0x01D71C78 STR X8, [X0]
	0x01D71C7C ADRP X1, 0x2143000
	0x01D71C80 ADD X1, X1, 0xE58
	0x01D71C84 MOV X2, X31
	0x01D71C88 BL 0x3EB1B00
	0x01D71C8C B 0x1D71D9C
	0x01D71C90 BL 0x1C16F20
	0x01D71C94 B 0x1D71CD4
	0x01D71C98 B 0x1D71CD4
	0x01D71C9C B 0x1D71CD4
	0x01D71CA0 MOV X22, X1
	0x01D71CA4 MOV X23, X0
	0x01D71CA8 B 0x1D71A04
	0x01D71CAC B 0x1D71CD4
	0x01D71CB0 MOV X22, X1
	0x01D71CB4 MOV X23, X0
	0x01D71CB8 B 0x1D71A98
	0x01D71CBC MOV X22, X1
	0x01D71CC0 MOV X23, X0
	0x01D71CC4 BL 0x3EB1AE0
	0x01D71CC8 B 0x1D71CDC
	0x01D71CCC B 0x1D71CD4
	0x01D71CD0 B 0x1D71CD4
	0x01D71CD4 MOV X22, X1
	0x01D71CD8 MOV X23, X0
	0x01D71CDC CMP W22, 0x1
	0x01D71CE0 B.NE 0x1D71DA4
	0x01D71CE4 MOV X0, X23
	0x01D71CE8 BL 0x3EB1AD0
	0x01D71CEC MOV X20, X0
	0x01D71CF0 ADRP X0, 0x2382000
	0x01D71CF4 LDR X0, [X0 + 0x7D0]
	0x01D71CF8 BL 0x1C16D08
	0x01D71CFC LDR X8, [X20]
	0x01D71D00 LDR X1, [X8]
	0x01D71D04 BL 0x1C17270
	0x01D71D08 TBZ X0, 0x0, 0x1D71D7C
	0x01D71D0C LDR X20, [X20]
	0x01D71D10 BL 0x3EB1AE0
	0x01D71D14 LDR X9, [X31 + 0x18]
	0x01D71D18 MOVN W8, 0x1
	0x01D71D1C ADRP X0, 0x2384000
	0x01D71D20 STR X31, [X9 + 0x28]
	0x01D71D24 STR W8, [X9]
	0x01D71D28 LDR X0, [X0 + 0xB80]
	0x01D71D2C ADD X19, X9, 0x8
	0x01D71D30 BL 0x1C16D08
	0x01D71D34 LDR W8, [X0 + 0xE0]
	0x01D71D38 CBNZ W8, 0x1D71D40
	0x01D71D3C BL 0x1C16DFC
	0x01D71D40 ADRP X0, 0x2384000
	0x01D71D44 LDR X0, [X0 + 0xDE0]
	0x01D71D48 BL 0x1C16D08
	0x01D71D4C MOV X2, X0
	0x01D71D50 MOV X0, X19
	0x01D71D54 MOV X1, X20
	0x01D71D58 BL 0x26324C8
	0x01D71D5C LDP X20, X19, [X31 + 0x140]
	0x01D71D60 LDP X22, X21, [X31 + 0x130]
	0x01D71D64 LDP X24, X23, [X31 + 0x120]
	0x01D71D68 LDP X26, X25, [X31 + 0x110]
	0x01D71D6C LDP X28, X27, [X31 + 0x100]
	0x01D71D70 LDP X29, X30, [X31 + 0xF0]
	0x01D71D74 ADD X31, X31, 0x150
	0x01D71D78 RET
	0x01D71D7C MOVZ W0, 0x8
	0x01D71D80 BL 0x3EB1AF0
	0x01D71D84 LDR X8, [X20]
	0x01D71D88 STR X8, [X0]
	0x01D71D8C ADRP X1, 0x2143000
	0x01D71D90 ADD X1, X1, 0xE58
	0x01D71D94 MOV X2, X31
	0x01D71D98 BL 0x3EB1B00
	0x01D71D9C MOV X23, X0
	0x01D71DA0 BL 0x3EB1AE0
	0x01D71DA4 MOV X0, X23
	0x01D71DA8 BL 0x1D2C690
	0x01D71DAC BL 0x1990590
	0x01D71DB0 STR X30, [X31 - 0x30]!
	0x01D71DB4 STP X22, X21, [X31 + 0x10]
	0x01D71DB8 STP X20, X19, [X31 + 0x20]
	0x01D71DBC ADRP X22, 0x2667000
	0x01D71DC0 ADRP X21, 0x2384000
	0x01D71DC4 LDRB W8, [X22 + 0x8FC]
	0x01D71DC8 LDR X21, [X21 + 0xB80]
	0x01D71DCC MOV X19, X1
	0x01D71DD0 MOV X20, X0
	0x01D71DD4 TBNZ X8, 0x0, 0x1D71DF8
	0x01D71DD8 ADRP X0, 0x2384000
	0x01D71DDC LDR X0, [X0 + 0xDE8]
	0x01D71DE0 BL 0x1C16CF4
	0x01D71DE4 ADRP X0, 0x2384000
	0x01D71DE8 LDR X0, [X0 + 0xB80]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X21, 0x2668000
	009 Move W9, [X21+2296]
	010 Move X20, X1
	011 Move X19, X8
	012 Move TEMP, X9
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {45}
	016 Move X0, 0x2385000
	017 Move X0, [X0+3304]
	018 Call 0x1C17CF4
	019 Move X0, 0x2383000
	020 Move X0, [X0+3576]
	021 Call 0x1C17CF4
	022 Move X0, 0x2385000
	023 Move X0, [X0+3160]
	024 Call 0x1C17CF4
	025 Move X0, 0x2385000
	026 Move X0, [X0+3312]
	027 Call 0x1C17CF4
	028 Move X0, 0x2383000
	029 Move X0, [X0+1928]
	030 Call 0x1C17CF4
	031 Move X0, 0x2385000
	032 Move X0, [X0+3176]
	033 Call 0x1C17CF4
	034 Move X0, 0x2385000
	035 Move X0, [X0+3320]
	036 Call 0x1C17CF4
	037 Move X0, 0x2385000
	038 Move X0, [X0+3328]
	039 Call 0x1C17CF4
	040 Move X0, 0x2385000
	041 Move X0, [X0+2680]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X21+2296], W8
	045 Move [X31+40], W31
	046 NotImplemented "Instruction STRH not yet implemented."
	047 Move [X31+46], W31
	048 Compare X20, 0
	049 JumpIfEqual {167}
	050 Move X0, X20
	051 Move X1, X31
	052 Call Task.get_IsFaulted, X0
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {93}
	057 Move X0, X20
	058 Move X1, X31
	059 Call Task.get_Exception, X0
	060 Move X8, 0x2383000
	061 Move X8, [X8+1928]
	062 Move X20, X0
	063 Move X8, [X8]
	064 Move W9, [X8+224]
	065 Compare W9, 0
	066 JumpIfNotEqual {69}
	067 Move X0, X8
	068 Call 0x1C17DFC
	069 Move X8, 0x2385000
	070 Move X9, 0x2385000
	071 Move X10, 0x2385000
	072 Move X8, [X8+3320]
	073 Move X9, [X9+2680]
	074 Move X10, [X10+3328]
	075 Move W0, 64
	076 Move X1, [X8]
	077 Move X4, [X9]
	078 Move X5, [X10]
	079 Move W6, 498
	080 Move X2, X20
	081 Move X3, X31
	082 Move X7, X31
	083 Call Log.Error, X0, X1, X2, X3, X4, X5, X6
	084 Move W8, [X31+46]
	085 NotImplemented "Instruction LDRH not yet implemented."
	086 Move W10, 1
	087 Move [X19], W31
	088 Move [X19+4], W10
	089 Move [X19+3], W8
	090 NotImplemented "Instruction STURH not yet implemented."
	091 Move [X19+8], X31
	092 Move [X19+16], X31
	093 Move X8, 0x2385000
	094 Move X8, [X8+3176]
	095 Move X1, [X8]
	096 Move X0, X20
	097 Call Task`1<Object>.get_Result, X0
	098 Move X20, X0
	099 Compare X0, 0
	100 JumpIfEqual {168}
	101 Move X10, 0x2385000
	102 Move X8, [X20]
	103 Move X10, [X10+3160]
	104 NotImplemented "Instruction LDRH not yet implemented."
	105 Move X1, [X10]
	106 Compare X9, 0
	107 JumpIfEqual {114}
	108 Move X10, [X8+176]
	109 Add X10, X10, 8
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Subtract X9, X9, 1
	113 Add X10, X10, 16
	114 Move W2, 2
	115 Move X0, X20
	116 Call 0x1C5D788
	117 Move W9, [X10]
	118 Add W9, W9, 2
	119 Add X8, X8, W9
	120 Add X0, X8, 312
	121 Move X8, [X0]
	122 Move X1, [X0+8]
	123 Move X0, X20
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Move X8, 0x2385000
	126 Move X8, [X8+3312]
	127 Move X1, [X8]
	128 Add X8, X31, 8
	129 Call JsonParser.FromJson, X0
	130 Move X8, 0x2383000
	131 Move X8, [X8+3576]
	132 Move W23, [X31+8]
	133 Move X20, [X31+16]
	134 Move X21, [X31+24]
	135 Move X22, [X31+32]
	136 Move X0, [X8]
	137 Move W8, [X0+224]
	138 Compare W8, 0
	139 JumpIfNotEqual {141}
	140 Call 0x1C17DFC
	141 Move X8, 0x2385000
	142 Move X8, [X8+3304]
	143 Move X2, [X8]
	144 Add X1, X31, 40
	145 Move X0, X20
	146 Call 0x21B1A58, X0, X1
	147 Move W9, [X31+40]
	148 Move W10, [X31+46]
	149 NotImplemented "Instruction LDRH not yet implemented."
	150 And W8, W23, 1
	151 And W31, W0, 1
	152 Move [X19], W8
	153 NotImplemented "Instruction CSINC not yet implemented."
	154 Move [X19+3], W10
	155 NotImplemented "Instruction STURH not yet implemented."
	156 Move [X19+4], W8
	157 Move [X19+8], X21
	158 Move [X19+16], X22
	159 Move X20, [X31+80]
	160 Move X19, [X31+88]
	161 Move X22, [X31+64]
	162 Move X21, [X31+72]
	163 Move X30, [X31+48]
	164 Move X23, [X31+56]
	165 Add X31, X31, 96
	166 Return X0
	167 Call 0x1C17F20
	168 Call 0x1C17F20
	169 Move X20, X0
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move X0, X20
	172 Call 0x3EB2AD0
	173 Move X20, X0
	174 Move X0, 0x2383000
	175 Move X0, [X0+2000]
	176 Call 0x1C17D08
	177 Move X8, [X20]
	178 Move X1, [X8]
	179 Call 0x1C18270
	180 Move TEMP, X0
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfNotEqual {217}
	184 Move X20, [X20]
	185 Call 0x3EB2AE0
	186 Move X0, 0x2383000
	187 Move X0, [X0+1928]
	188 Call 0x1C17D08
	189 Move W8, [X0+224]
	190 Compare W8, 0
	191 JumpIfNotEqual {193}
	192 Call 0x1C17DFC
	193 Move X0, 0x2385000
	194 Move X0, [X0+3336]
	195 Call 0x1C17D08
	196 Move X21, X0
	197 Move X0, 0x2385000
	198 Move X0, [X0+2680]
	199 Call 0x1C17D08
	200 Move X22, X0
	201 Move X0, 0x2385000
	202 Move X0, [X0+3328]
	203 Call 0x1C17D08
	204 Move X5, X0
	205 Move W0, 64
	206 Move W6, 515
	207 Move X1, X21
	208 Move X2, X20
	209 Move X3, X31
	210 Move X4, X22
	211 Move X7, X31
	212 Call Log.Error, X0, X1, X2, X3, X4, X5, X6
	213 Move W8, [X31+46]
	214 NotImplemented "Instruction LDRH not yet implemented."
	215 Move [X19], W31
	216 Move W10, 2
	217 Move W0, 8
	218 Call 0x3EB2AF0
	219 Move X8, [X20]
	220 Move [X0], X8
	221 Move X1, 0x2144000
	222 Add X1, X1, 3672
	223 Move X2, X31
	224 Call 0x3EB2B00
	225 Move X20, X0
	226 Call 0x3EB2AE0
	227 Move X0, X20
	228 Call 0x1D2D690
	229 Call 0x1991590

Method: AnimalCompany.API.AnimalCompanyAPI/ValidatePurchaseMetaQuestResponse <ValidatePurchaseMetaQuestAsync>b__47_0(System.Threading.Tasks.Task`1<Nakama.IApiRpc> task)

Disassembly:
	0x01D71DEC BL 0x1C16CF4
	0x01D71DF0 MOVZ W8, 0x1
	0x01D71DF4 STRB W8, [X22 + 0x8FC]
	0x01D71DF8 LDR X0, [X21]
	0x01D71DFC ADRP X21, 0x2384000
	0x01D71E00 LDR W8, [X0 + 0xE0]
	0x01D71E04 LDR X21, [X21 + 0xDE8]
	0x01D71E08 CBNZ W8, 0x1D71E10
	0x01D71E0C BL 0x1C16DFC
	0x01D71E10 LDR X2, [X21]
	0x01D71E14 ADD X0, X20, 0x8
	0x01D71E18 MOV X1, X19
	0x01D71E1C LDP X20, X19, [X31 + 0x20]
	0x01D71E20 LDP X22, X21, [X31 + 0x10]
	0x01D71E24 LDR X30, [X31], #0x30
	0x01D71E28 B 0x2632228
	0x01D71E2C SUB X31, X31, 0x120
	0x01D71E30 STP X29, X30, [X31 + 0xC0]
	0x01D71E34 STP X28, X27, [X31 + 0xD0]
	0x01D71E38 STP X26, X25, [X31 + 0xE0]
	0x01D71E3C STP X24, X23, [X31 + 0xF0]
	0x01D71E40 STP X22, X21, [X31 + 0x100]
	0x01D71E44 STP X20, X19, [X31 + 0x110]
	0x01D71E48 ADRP X20, 0x2667000
	0x01D71E4C LDRB W8, [X20 + 0x8FD]
	0x01D71E50 MOV X19, X0
	0x01D71E54 TBNZ X8, 0x0, 0x1D71F68
	0x01D71E58 ADRP X0, 0x2382000
	0x01D71E5C LDR X0, [X0 + 0x658]
	0x01D71E60 BL 0x1C16CF4
	0x01D71E64 ADRP X0, 0x2384000
	0x01D71E68 LDR X0, [X0 + 0xDF0]
	0x01D71E6C BL 0x1C16CF4
	0x01D71E70 ADRP X0, 0x2384000
	0x01D71E74 LDR X0, [X0 + 0xDF8]
	0x01D71E78 BL 0x1C16CF4
	0x01D71E7C ADRP X0, 0x2384000
	0x01D71E80 LDR X0, [X0 + 0xBA0]
	0x01D71E84 BL 0x1C16CF4
	0x01D71E88 ADRP X0, 0x2384000
	0x01D71E8C LDR X0, [X0 + 0xD70]
	0x01D71E90 BL 0x1C16CF4
	0x01D71E94 ADRP X0, 0x2384000
	0x01D71E98 LDR X0, [X0 + 0xE00]
	0x01D71E9C BL 0x1C16CF4
	0x01D71EA0 ADRP X0, 0x2384000
	0x01D71EA4 LDR X0, [X0 + 0xA18]
	0x01D71EA8 BL 0x1C16CF4
	0x01D71EAC ADRP X0, 0x2382000
	0x01D71EB0 LDR X0, [X0 + 0xE00]
	0x01D71EB4 BL 0x1C16CF4
	0x01D71EB8 ADRP X0, 0x2384000
	0x01D71EBC LDR X0, [X0 + 0xD78]
	0x01D71EC0 BL 0x1C16CF4
	0x01D71EC4 ADRP X0, 0x2384000
	0x01D71EC8 LDR X0, [X0 + 0xD80]
	0x01D71ECC BL 0x1C16CF4
	0x01D71ED0 ADRP X0, 0x2382000
	0x01D71ED4 LDR X0, [X0 + 0xE18]
	0x01D71ED8 BL 0x1C16CF4
	0x01D71EDC ADRP X0, 0x2384000
	0x01D71EE0 LDR X0, [X0 + 0xD88]
	0x01D71EE4 BL 0x1C16CF4
	0x01D71EE8 ADRP X0, 0x2384000
	0x01D71EEC LDR X0, [X0 + 0xD90]
	0x01D71EF0 BL 0x1C16CF4
	0x01D71EF4 ADRP X0, 0x2384000
	0x01D71EF8 LDR X0, [X0 + 0xDA0]
	0x01D71EFC BL 0x1C16CF4
	0x01D71F00 ADRP X0, 0x2384000
	0x01D71F04 LDR X0, [X0 + 0xDA8]
	0x01D71F08 BL 0x1C16CF4
	0x01D71F0C ADRP X0, 0x2384000
	0x01D71F10 LDR X0, [X0 + 0xE08]
	0x01D71F14 BL 0x1C16CF4
	0x01D71F18 ADRP X0, 0x2384000
	0x01D71F1C LDR X0, [X0 + 0xE10]
	0x01D71F20 BL 0x1C16CF4
	0x01D71F24 ADRP X0, 0x2384000
	0x01D71F28 LDR X0, [X0 + 0xE18]
	0x01D71F2C BL 0x1C16CF4
	0x01D71F30 ADRP X0, 0x2384000
	0x01D71F34 LDR X0, [X0 + 0xE20]
	0x01D71F38 BL 0x1C16CF4
	0x01D71F3C ADRP X0, 0x2384000
	0x01D71F40 LDR X0, [X0 + 0xE28]
	0x01D71F44 BL 0x1C16CF4
	0x01D71F48 ADRP X0, 0x2384000
	0x01D71F4C LDR X0, [X0 + 0xE30]
	0x01D71F50 BL 0x1C16CF4
	0x01D71F54 ADRP X0, 0x2384000
	0x01D71F58 LDR X0, [X0 + 0xE38]
	0x01D71F5C BL 0x1C16CF4
	0x01D71F60 MOVZ W8, 0x1
	0x01D71F64 STRB W8, [X20 + 0x8FD]
	0x01D71F68 STR X31, [X31 + 0x58]
	0x01D71F6C LDR W23, [X19]
	0x01D71F70 CBZ W23, 0x1D720B8
	0x01D71F74 LDR X8, [X19 + 0x20]
	0x01D71F78 CBZ X8, 0x1D72584
	0x01D71F7C ADRP X9, 0x2384000
	0x01D71F80 LDR X9, [X9 + 0xE08]
	0x01D71F84 LDR W1, [X8 + 0x18]
	0x01D71F88 LDR X0, [X9]
	0x01D71F8C BL 0x1C16D6C
	0x01D71F90 LDR X8, [X19 + 0x20]
	0x01D71F94 CBZ X8, 0x1D72050
	0x01D71F98 ADRP X27, 0x2384000
	0x01D71F9C ADRP X28, 0x2384000
	0x01D71FA0 ADRP X29, 0x2384000
	0x01D71FA4 ADRP X22, 0x2382000
	0x01D71FA8 ADRP X26, 0x2384000
	0x01D71FAC LDR X27, [X27 + 0xE10]
	0x01D71FB0 LDR X28, [X28 + 0xE38]
	0x01D71FB4 LDR X29, [X29 + 0xE30]
	0x01D71FB8 LDR X22, [X22 + 0x658]
	0x01D71FBC LDR X26, [X26 + 0xA18]
	0x01D71FC0 MOV X20, X0
	0x01D71FC4 MOVZ W24, 0x4
	0x01D71FC8 LDRSW X8, [X8 + 0x18]
	0x01D71FCC SUB X25, X24, 0x4
	0x01D71FD0 CMP X25, X8
	0x01D71FD4 B.GE 0x1D72054
	0x01D71FD8 LDR X0, [X27]
	0x01D71FDC BL 0x1C16F10
	0x01D71FE0 MOV X21, X0
	0x01D71FE4 MOV X1, X31
	0x01D71FE8 BL 0x3484838
	0x01D71FEC CBZ X21, 0x1D72568
	0x01D71FF0 LDR X8, [X28]
	0x01D71FF4 STR X8, [X21 + 0x10]
	0x01D71FF8 LDR X8, [X19 + 0x20]
	0x01D71FFC CBZ X8, 0x1D7255C
	0x01D72000 LDR W9, [X8 + 0x18]
	0x01D72004 CMP X25, X9
	0x01D72008 B.CS 0x1D72564
	0x01D7200C LDR X8, [X8, X24, LSL #3]
	0x01D72010 STR X8, [X21 + 0x18]
	0x01D72014 LDR X8, [X29]
	0x01D72018 STR X8, [X21 + 0x28]
	0x01D7201C CBZ X20, 0x1D72560
	0x01D72020 LDR X8, [X20]
	0x01D72024 LDR X1, [X8 + 0x40]
	0x01D72028 MOV X0, X21
	0x01D7202C BL 0x1C16E00
	0x01D72030 CBZ X0, 0x1D72550
	0x01D72034 LDR W8, [X20 + 0x18]
	0x01D72038 CMP X25, X8
	0x01D7203C B.CS 0x1D7256C
	0x01D72040 STR X21, [X20, X24, LSL #3]
	0x01D72044 LDR X8, [X19 + 0x20]
	0x01D72048 ADD X24, X24, 0x1
	0x01D7204C CBNZ X8, 0x1D71FC8
	0x01D72050 BL 0x1C16F20
	0x01D72054 LDR X0, [X22]
	0x01D72058 LDR W8, [X0 + 0xE0]
	0x01D7205C CBNZ W8, 0x1D72068
	0x01D72060 BL 0x1C16DFC
	0x01D72064 LDR X0, [X22]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2668000
	006 Move W8, [X20+2297]
	007 Move X19, X1
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {35}
	012 Move X0, 0x2385000
	013 Move X0, [X0+3160]
	014 Call 0x1C17CF4
	015 Move X0, 0x2385000
	016 Move X0, [X0+3344]
	017 Call 0x1C17CF4
	018 Move X0, 0x2383000
	019 Move X0, [X0+1928]
	020 Call 0x1C17CF4
	021 Move X0, 0x2385000
	022 Move X0, [X0+3176]
	023 Call 0x1C17CF4
	024 Move X0, 0x2385000
	025 Move X0, [X0+3352]
	026 Call 0x1C17CF4
	027 Move X0, 0x2385000
	028 Move X0, [X0+2680]
	029 Call 0x1C17CF4
	030 Move X0, 0x2385000
	031 Move X0, [X0+3360]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+2297], W8
	035 Compare X19, 0
	036 JumpIfEqual {114}
	037 Move X0, X19
	038 Move X1, X31
	039 Call Task.get_IsFaulted, X0
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {73}
	044 Move X0, X19
	045 Move X1, X31
	046 Call Task.get_Exception, X0
	047 Move X8, 0x2383000
	048 Move X8, [X8+1928]
	049 Move X19, X0
	050 Move X8, [X8]
	051 Move W9, [X8+224]
	052 Compare W9, 0
	053 JumpIfNotEqual {56}
	054 Move X0, X8
	055 Call 0x1C17DFC
	056 Move X8, 0x2385000
	057 Move X9, 0x2385000
	058 Move X10, 0x2385000
	059 Move X8, [X8+3360]
	060 Move X9, [X9+2680]
	061 Move X10, [X10+3352]
	062 Move W0, 64
	063 Move X1, [X8]
	064 Move X4, [X9]
	065 Move X5, [X10]
	066 Move W6, 581
	067 Move X2, X19
	068 Move X3, X31
	069 Move X7, X31
	070 Call Log.Error, X0, X1, X2, X3, X4, X5, X6
	071 Move X0, X31
	072 Move X1, X31
	073 Move X8, 0x2385000
	074 Move X8, [X8+3176]
	075 Move X1, [X8]
	076 Move X0, X19
	077 Call Task`1<Object>.get_Result, X0
	078 Move X19, X0
	079 Compare X0, 0
	080 JumpIfEqual {115}
	081 Move X10, 0x2385000
	082 Move X8, [X19]
	083 Move X10, [X10+3160]
	084 NotImplemented "Instruction LDRH not yet implemented."
	085 Move X1, [X10]
	086 Compare X9, 0
	087 JumpIfEqual {94}
	088 Move X10, [X8+176]
	089 Add X10, X10, 8
	090 NotImplemented "Instruction LDUR not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Subtract X9, X9, 1
	093 Add X10, X10, 16
	094 Move W2, 2
	095 Move X0, X19
	096 Call 0x1C5D788
	097 Move W9, [X10]
	098 Add W9, W9, 2
	099 Add X8, X8, W9
	100 Add X0, X8, 312
	101 Move X8, [X0]
	102 Move X1, [X0+8]
	103 Move X0, X19
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Move X8, 0x2385000
	106 Move X8, [X8+3344]
	107 Move X1, [X8]
	108 Call JsonParser.FromJson, X0
	109 Move X20, [X31+16]
	110 Move X19, [X31+24]
	111 Move X30, [X31+32]
	112 Move X21, [X31+40]
	113 Return X0
	114 Call 0x1C17F20
	115 Call 0x1C17F20
	116 Move X19, X0
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X0, X19
	119 Call 0x3EB2AD0
	120 Move X19, X0
	121 Move X0, 0x2383000
	122 Move X0, [X0+2000]
	123 Call 0x1C17D08
	124 Move X8, [X19]
	125 Move X1, [X8]
	126 Call 0x1C18270
	127 Move TEMP, X0
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfNotEqual {158}
	131 Move X19, [X19]
	132 Call 0x3EB2AE0
	133 Move X0, 0x2383000
	134 Move X0, [X0+1928]
	135 Call 0x1C17D08
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {140}
	139 Call 0x1C17DFC
	140 Move X0, 0x2385000
	141 Move X0, [X0+3368]
	142 Call 0x1C17D08
	143 Move X20, X0
	144 Move X0, 0x2385000
	145 Move X0, [X0+2680]
	146 Call 0x1C17D08
	147 Move X21, X0
	148 Move X0, 0x2384000
	149 Move X0, [X0+3352]
	150 Call 0x1C17D08
	151 Move X5, X0
	152 Move W0, 64
	153 Move W6, 592
	154 Move X1, X20
	155 Move X2, X19
	156 Move X3, X31
	157 Move X4, X21
	158 Move W0, 8
	159 Call 0x3EB2AF0
	160 Move X8, [X19]
	161 Move [X0], X8
	162 Move X1, 0x2143000
	163 Add X1, X1, 3672
	164 Move X2, X31
	165 Call 0x3EB2B00
	166 Move X19, X0
	167 Call 0x3EB2AE0
	168 Move X0, X19
	169 Call 0x1D2D690
	170 Call 0x1991590

Method: AnimalCompany.API.AnimalCompanyAPI/RedeemPromoCodeResponse <RedeemPromoCodeAsync>b__49_0(System.Threading.Tasks.Task`1<Nakama.IApiRpc> task)

Disassembly:
	0x01D72068 LDR X8, [X0 + 0xB8]
	0x01D7206C LDR X21, [X8 + 0x10]
	0x01D72070 CBZ X21, 0x1D72588
	0x01D72074 LDR X8, [X21]
	0x01D72078 LDR X22, [X19 + 0x28]
	0x01D7207C LDR X1, [X26]
	0x01D72080 LDRH W9, [X8 + 0x12E]
	0x01D72084 CBZ X9, 0x1D720A8
	0x01D72088 LDR X10, [X8 + 0xB0]
	0x01D7208C ADD X10, X10, 0x8
	0x01D72090 LDUR X11, [X10 - 0x8]
	0x01D72094 CMP X11, X1
	0x01D72098 B.EQ 0x1D720D0
	0x01D7209C SUBS X9, X9, 0x1
	0x01D720A0 ADD X10, X10, 0x10
	0x01D720A4 B.NE 0x1D72090
	0x01D720A8 MOVZ W2, 0x47
	0x01D720AC MOV X0, X21
	0x01D720B0 BL 0x1C5C788
	0x01D720B4 B 0x1D720E0
	0x01D720B8 LDR X8, [X19 + 0x30]
	0x01D720BC MOVN W23, 0x0
	0x01D720C0 STR X8, [X31 + 0x58]
	0x01D720C4 STR X31, [X19 + 0x30]
	0x01D720C8 STR W23, [X19]
	0x01D720CC B 0x1D7212C
	0x01D720D0 LDR W9, [X10]
	0x01D720D4 ADD W9, W9, 0x47
	0x01D720D8 ADD X8, X8, W9, 0x4, SXTW
	0x01D720DC ADD X0, X8, 0x138
	0x01D720E0 LDP X8, X5, [X0]
	0x01D720E4 MOV X0, X21
	0x01D720E8 MOV X1, X22
	0x01D720EC MOV X2, X20
	0x01D720F0 MOV X3, X31
	0x01D720F4 MOV X4, X31
	0x01D720F8 BLR X8
	0x01D720FC CBZ X0, 0x1D7258C
	0x01D72100 ADRP X8, 0x2383000
	0x01D72104 LDR X8, [X8 + 0xE28]
	0x01D72108 LDR X1, [X8]
	0x01D7210C BL 0x269F5D0
	0x01D72110 ADRP X8, 0x2383000
	0x01D72114 LDR X8, [X8 + 0xE20]
	0x01D72118 STR X0, [X31 + 0x58]
	0x01D7211C LDR X1, [X8]
	0x01D72120 ADD X0, X31, 0x58
	0x01D72124 BL 0x2677430
	0x01D72128 TBZ X0, 0x0, 0x1D721B4
	0x01D7212C ADRP X8, 0x2383000
	0x01D72130 LDR X8, [X8 + 0xE18]
	0x01D72134 ADD X0, X31, 0x58
	0x01D72138 LDR X1, [X8]
	0x01D7213C BL 0x2677474
	0x01D72140 ADRP X8, 0x2383000
	0x01D72144 LDR X8, [X8 + 0xDA8]
	0x01D72148 MOV X21, X0
	0x01D7214C LDR X0, [X8]
	0x01D72150 BL 0x1C16F10
	0x01D72154 ADRP X8, 0x2383000
	0x01D72158 LDR X8, [X8 + 0xDA0]
	0x01D7215C MOV X20, X0
	0x01D72160 LDR X1, [X8]
	0x01D72164 BL 0x2F4F138
	0x01D72168 CBZ X21, 0x1D72570
	0x01D7216C ADRP X10, 0x2383000
	0x01D72170 LDR X8, [X21]
	0x01D72174 LDR X10, [X10 + 0xE00]
	0x01D72178 LDRH W9, [X8 + 0x12E]
	0x01D7217C LDR X1, [X10]
	0x01D72180 CBZ X9, 0x1D721A4
	0x01D72184 LDR X10, [X8 + 0xB0]
	0x01D72188 ADD X10, X10, 0x8
	0x01D7218C LDUR X11, [X10 - 0x8]
	0x01D72190 CMP X11, X1
	0x01D72194 B.EQ 0x1D721F8
	0x01D72198 SUBS X9, X9, 0x1
	0x01D7219C ADD X10, X10, 0x10
	0x01D721A0 B.NE 0x1D7218C
	0x01D721A4 MOV X0, X21
	0x01D721A8 MOV W2, W31
	0x01D721AC BL 0x1C5C788
	0x01D721B0 B 0x1D72204
	0x01D721B4 STR W31, [X19]
	0x01D721B8 LDR X8, [X31 + 0x58]
	0x01D721BC STR X8, [X19 + 0x30]
	0x01D721C0 ADRP X8, 0x2383000
	0x01D721C4 LDR X8, [X8 + 0xBA0]
	0x01D721C8 LDR X0, [X8]
	0x01D721CC LDR W8, [X0 + 0xE0]
	0x01D721D0 CBNZ W8, 0x1D721D8
	0x01D721D4 BL 0x1C16DFC
	0x01D721D8 ADRP X8, 0x2383000
	0x01D721DC LDR X8, [X8 + 0xDF0]
	0x01D721E0 ADD X0, X19, 0x8
	0x01D721E4 LDR X3, [X8]
	0x01D721E8 ADD X1, X31, 0x58
	0x01D721EC MOV X2, X19
	0x01D721F0 BL 0x1FB1428
	0x01D721F4 B 0x1D72524
	0x01D721F8 LDRSW X9, [X10]
	0x01D721FC ADD X8, X8, X9, 0x4, LSL
	0x01D72200 ADD X0, X8, 0x138
	0x01D72204 LDP X8, X1, [X0]
	0x01D72208 MOV X0, X21
	0x01D7220C BLR X8
	0x01D72210 MOV X21, X0
	0x01D72214 CBZ X0, 0x1D72574
	0x01D72218 ADRP X10, 0x2383000
	0x01D7221C LDR X8, [X21]
	0x01D72220 LDR X10, [X10 + 0xD78]
	0x01D72224 LDRH W9, [X8 + 0x12E]
	0x01D72228 LDR X1, [X10]
	0x01D7222C CBZ X9, 0x1D72250
	0x01D72230 LDR X10, [X8 + 0xB0]
	0x01D72234 ADD X10, X10, 0x8
	0x01D72238 LDUR X11, [X10 - 0x8]
	0x01D7223C CMP X11, X1
	0x01D72240 B.EQ 0x1D72260
	0x01D72244 SUBS X9, X9, 0x1
	0x01D72248 ADD X10, X10, 0x10
	0x01D7224C B.NE 0x1D72238
	0x01D72250 MOV X0, X21
	0x01D72254 MOV W2, W31
	0x01D72258 BL 0x1C5C788
	0x01D7225C B 0x1D7226C
	0x01D72260 LDRSW X9, [X10]
	0x01D72264 ADD X8, X8, X9, 0x4, LSL
	0x01D72268 ADD X0, X8, 0x138
	0x01D7226C LDP X8, X1, [X0]
	0x01D72270 MOV X0, X21
	0x01D72274 BLR X8
	0x01D72278 MOV X21, X0
	0x01D7227C CBZ X0, 0x1D72578
	0x01D72280 ADRP X24, 0x2381000
	0x01D72284 ADRP X25, 0x2383000
	0x01D72288 ADRP X26, 0x2383000
	0x01D7228C ADRP X27, 0x2383000
	0x01D72290 ADRP X28, 0x2383000
	0x01D72294 LDR X24, [X24 + 0xE18]
	0x01D72298 LDR X25, [X25 + 0xD80]
	0x01D7229C LDR X26, [X26 + 0xD70]
	0x01D722A0 LDR X27, [X27 + 0xD88]
	0x01D722A4 LDR X28, [X28 + 0xD90]
	0x01D722A8 MOVZ W29, 0x30
	0x01D722AC LDR X8, [X21]
	0x01D722B0 LDR X1, [X24]
	0x01D722B4 LDRH W9, [X8 + 0x12E]
	0x01D722B8 CBZ X9, 0x1D722DC
	0x01D722BC LDR X10, [X8 + 0xB0]
	0x01D722C0 ADD X10, X10, 0x8
	0x01D722C4 LDUR X11, [X10 - 0x8]
	0x01D722C8 CMP X11, X1
	0x01D722CC B.EQ 0x1D722EC
	0x01D722D0 SUBS X9, X9, 0x1
	0x01D722D4 ADD X10, X10, 0x10
	0x01D722D8 B.NE 0x1D722C4
	0x01D722DC MOV X0, X21
	0x01D722E0 MOV W2, W31
	0x01D722E4 BL 0x1C5C788
	0x01D722E8 B 0x1D722F8
	0x01D722EC LDRSW X9, [X10]
	0x01D722F0 ADD X8, X8, X9, 0x4, LSL
	0x01D722F4 ADD X0, X8, 0x138
	0x01D722F8 LDP X8, X1, [X0]
	0x01D722FC MOV X0, X21
	0x01D72300 BLR X8
	0x01D72304 TBZ X0, 0x0, 0x1D7246C
	0x01D72308 LDR X8, [X21]
	0x01D7230C LDR X1, [X25]
	0x01D72310 LDRH W9, [X8 + 0x12E]
	0x01D72314 CBZ X9, 0x1D72338
	0x01D72318 LDR X10, [X8 + 0xB0]
	0x01D7231C ADD X10, X10, 0x8
	0x01D72320 LDUR X11, [X10 - 0x8]
	0x01D72324 CMP X11, X1
	0x01D72328 B.EQ 0x1D72348
	0x01D7232C SUBS X9, X9, 0x1
	0x01D72330 ADD X10, X10, 0x10
	0x01D72334 B.NE 0x1D72320
	0x01D72338 MOV X0, X21
	0x01D7233C MOV W2, W31
	0x01D72340 BL 0x1C5C788
	0x01D72344 B 0x1D72354
	0x01D72348 LDRSW X9, [X10]
	0x01D7234C ADD X8, X8, X9, 0x4, LSL
	0x01D72350 ADD X0, X8, 0x138
	0x01D72354 LDP X8, X1, [X0]
	0x01D72358 MOV X0, X21
	0x01D7235C BLR X8
	0x01D72360 MOV X22, X0
	0x01D72364 CBZ X0, 0x1D72548
	0x01D72368 LDR X8, [X22]
	0x01D7236C LDR X1, [X26]
	0x01D72370 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2667000
	007 Move W8, [X20+2298]
	008 Move X19, X1
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {42}
	013 Move X0, 0x2384000
	014 Move X0, [X0+3376]
	015 Call 0x1C17CF4
	016 Move X0, 0x2382000
	017 Move X0, [X0+3576]
	018 Call 0x1C17CF4
	019 Move X0, 0x2384000
	020 Move X0, [X0+3160]
	021 Call 0x1C17CF4
	022 Move X0, 0x2384000
	023 Move X0, [X0+3384]
	024 Call 0x1C17CF4
	025 Move X0, 0x2382000
	026 Move X0, [X0+1928]
	027 Call 0x1C17CF4
	028 Move X0, 0x2384000
	029 Move X0, [X0+3176]
	030 Call 0x1C17CF4
	031 Move X0, 0x2384000
	032 Move X0, [X0+3392]
	033 Call 0x1C17CF4
	034 Move X0, 0x2384000
	035 Move X0, [X0+2680]
	036 Call 0x1C17CF4
	037 Move X0, 0x2384000
	038 Move X0, [X0+3400]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X20+2298], W8
	042 Move [X31+12], W31
	043 Compare X19, 0
	044 JumpIfEqual {147}
	045 Move X0, X19
	046 Move X1, X31
	047 Call Task.get_IsFaulted, X0
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {81}
	052 Move X0, X19
	053 Move X1, X31
	054 Call Task.get_Exception, X0
	055 Move X8, 0x2382000
	056 Move X8, [X8+1928]
	057 Move X19, X0
	058 Move X8, [X8]
	059 Move W9, [X8+224]
	060 Compare W9, 0
	061 JumpIfNotEqual {64}
	062 Move X0, X8
	063 Call 0x1C17DFC
	064 Move X8, 0x2384000
	065 Move X9, 0x2384000
	066 Move X10, 0x2384000
	067 Move X8, [X8+3392]
	068 Move X9, [X9+2680]
	069 Move X10, [X10+3400]
	070 Move W0, 64
	071 Move X1, [X8]
	072 Move X4, [X9]
	073 Move X5, [X10]
	074 Move W6, 618
	075 Move X2, X19
	076 Move X3, X31
	077 Move X7, X31
	078 Call Log.Error, X0, X1, X2, X3, X4, X5, X6
	079 Move X8, X31
	080 Move X9, 1
	081 Move X8, 0x2384000
	082 Move X8, [X8+3176]
	083 Move X1, [X8]
	084 Move X0, X19
	085 Call Task`1<Object>.get_Result, X0
	086 Move X19, X0
	087 Compare X0, 0
	088 JumpIfEqual {148}
	089 Move X10, 0x2384000
	090 Move X8, [X19]
	091 Move X10, [X10+3160]
	092 NotImplemented "Instruction LDRH not yet implemented."
	093 Move X1, [X10]
	094 Compare X9, 0
	095 JumpIfEqual {102}
	096 Move X10, [X8+176]
	097 Add X10, X10, 8
	098 NotImplemented "Instruction LDUR not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Subtract X9, X9, 1
	101 Add X10, X10, 16
	102 Move W2, 2
	103 Move X0, X19
	104 Call 0x1C5D788
	105 Move W9, [X10]
	106 Add W9, W9, 2
	107 Add X8, X8, W9
	108 Add X0, X8, 312
	109 Move X8, [X0]
	110 Move X1, [X0+8]
	111 Move X0, X19
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Move X8, 0x2384000
	114 Move X8, [X8+3384]
	115 Move X1, [X8]
	116 Call JsonParser.FromJson, X0
	117 Move X8, 0x2382000
	118 Move X8, [X8+3576]
	119 Move X19, X0
	120 Move X20, X1
	121 Move X0, [X8]
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfNotEqual {126}
	125 Call 0x1C17DFC
	126 Move X8, 0x2384000
	127 Move X8, [X8+3376]
	128 Move X2, [X8]
	129 Add X1, X31, 12
	130 Move X0, X20
	131 Call 0x21B1A58, X0, X1
	132 Move W9, [X31+12]
	133 And W31, W0, 1
	134 Move X10, 1
	135 And X8, X19, 1
	136 Move X9, X9
	137 ShiftRight X9, 32
	138 And X9, X9, 0x7FFFFFFF
	139 NotImplemented "Instruction CSEL not yet implemented."
	140 Move X20, [X31+32]
	141 Move X19, [X31+40]
	142 Move X30, [X31+16]
	143 Move X21, [X31+24]
	144 Or X0, X9, X8
	145 Add X31, X31, 48
	146 Return X0
	147 Call 0x1C17F20
	148 Call 0x1C17F20
	149 Move X19, X0
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X0, X19
	152 Call 0x3EB2AD0
	153 Move X19, X0
	154 Move X0, 0x2382000
	155 Move X0, [X0+2000]
	156 Call 0x1C17D08
	157 Move X8, [X19]
	158 Move X1, [X8]
	159 Call 0x1C18270
	160 Move TEMP, X0
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfNotEqual {195}
	164 Move X19, [X19]
	165 Call 0x3EB2AE0
	166 Move X0, 0x2382000
	167 Move X0, [X0+1928]
	168 Call 0x1C17D08
	169 Move W8, [X0+224]
	170 Compare W8, 0
	171 JumpIfNotEqual {173}
	172 Call 0x1C17DFC
	173 Move X0, 0x2384000
	174 Move X0, [X0+3408]
	175 Call 0x1C17D08
	176 Move X20, X0
	177 Move X0, 0x2384000
	178 Move X0, [X0+2680]
	179 Call 0x1C17D08
	180 Move X21, X0
	181 Move X0, 0x2384000
	182 Move X0, [X0+3400]
	183 Call 0x1C17D08
	184 Move X5, X0
	185 Move W0, 64
	186 Move W6, 633
	187 Move X1, X20
	188 Move X2, X19
	189 Move X3, X31
	190 Move X4, X21
	191 Move X7, X31
	192 Call Log.Error, X0, X1, X2, X3, X4, X5, X6
	193 Move X8, X31
	194 Move X9, 2
	195 Move W0, 8
	196 Call 0x3EB2AF0
	197 Move X8, [X19]
	198 Move [X0], X8
	199 Move X1, 0x2143000
	200 Add X1, X1, 3672
	201 Move X2, X31
	202 Call 0x3EB2B00
	203 Move X19, X0
	204 Call 0x3EB2AE0
	205 Move X0, X19
	206 Call 0x1D2D690
	207 Call 0x1991590

