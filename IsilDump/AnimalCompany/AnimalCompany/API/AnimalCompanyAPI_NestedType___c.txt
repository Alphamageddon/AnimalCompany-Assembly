Type: AnimalCompany.API.AnimalCompanyAPI/<>c

Method: System.Void .cctor()

Disassembly:
	0x01D12BE4 LDR X9, [X19]
	0x01D12BE8 LDR X8, [X8]
	0x01D12BEC CMP X9, X8
	0x01D12BF0 B.NE 0x1D12C14
	0x01D12BF4 LDR X8, [X19 + 0x90]
	0x01D12BF8 SUB X8, X8, 0x1F4
	0x01D12BFC CMP X8, 0x4
	0x01D12C00 B.HI 0x1D12C14
	0x01D12C04 MOVZ W9, 0x1D
	0x01D12C08 LSRV W8, W9, W8
	0x01D12C0C AND W0, W8, 0x1
	0x01D12C10 B 0x1D12C18
	0x01D12C14 MOV W0, W31
	0x01D12C18 LDP X20, X19, [X31 + 0x10]
	0x01D12C1C LDR X30, [X31], #0x20
	0x01D12C20 RET
	0x01D12C24 SUB X31, X31, 0x80
	0x01D12C28 STR X30, [X31 + 0x20]
	0x01D12C2C STP X28, X27, [X31 + 0x30]
	0x01D12C30 STP X26, X25, [X31 + 0x40]
	0x01D12C34 STP X24, X23, [X31 + 0x50]
	0x01D12C38 STP X22, X21, [X31 + 0x60]
	0x01D12C3C STP X20, X19, [X31 + 0x70]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x2512000
	005 Move X20, 0x2240000
	006 Move W8, [X19+2005]
	007 Move X20, [X20+584]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2240000
	013 Move X0, [X0+584]
	014 Call 0x1B6F7F0
	015 Move W8, 1
	016 Move [X19+2005], W8
	017 Move X0, [X20]
	018 Call 0x1B6FA0C
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x01D12C40 ADRP X20, 0x2511000
	0x01D12C44 LDRB W8, [X20 + 0x7E3]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: AnimalCompany.API.AnimalCompanyAPI/ClientBootstrapResponse <BootstrapAsync>b__24_0(System.Threading.Tasks.Task`1<Nakama.IApiRpc> task)

Disassembly:
	0x01D12C48 MOV X19, X0
	0x01D12C4C TBNZ X8, 0x0, 0x1D12DFC
	0x01D12C50 ADRP X0, 0x223F000
	0x01D12C54 LDR X0, [X0 + 0x3A0]
	0x01D12C58 BL 0x1B6E7F0
	0x01D12C5C ADRP X0, 0x223F000
	0x01D12C60 LDR X0, [X0 + 0x3A8]
	0x01D12C64 BL 0x1B6E7F0
	0x01D12C68 ADRP X0, 0x223F000
	0x01D12C6C LDR X0, [X0 + 0x3B0]
	0x01D12C70 BL 0x1B6E7F0
	0x01D12C74 ADRP X0, 0x223F000
	0x01D12C78 LDR X0, [X0 + 0x380]
	0x01D12C7C BL 0x1B6E7F0
	0x01D12C80 ADRP X0, 0x223F000
	0x01D12C84 LDR X0, [X0 + 0x3B8]
	0x01D12C88 BL 0x1B6E7F0
	0x01D12C8C ADRP X0, 0x223F000
	0x01D12C90 LDR X0, [X0 + 0x200]
	0x01D12C94 BL 0x1B6E7F0
	0x01D12C98 ADRP X0, 0x223F000
	0x01D12C9C LDR X0, [X0 + 0x3C0]
	0x01D12CA0 BL 0x1B6E7F0
	0x01D12CA4 ADRP X0, 0x223F000
	0x01D12CA8 LDR X0, [X0 + 0x3C8]
	0x01D12CAC BL 0x1B6E7F0
	0x01D12CB0 ADRP X0, 0x223F000
	0x01D12CB4 LDR X0, [X0 + 0x3D0]
	0x01D12CB8 BL 0x1B6E7F0
	0x01D12CBC ADRP X0, 0x223F000
	0x01D12CC0 LDR X0, [X0 + 0x3D8]
	0x01D12CC4 BL 0x1B6E7F0
	0x01D12CC8 ADRP X0, 0x223F000
	0x01D12CCC LDR X0, [X0 + 0x3E0]
	0x01D12CD0 BL 0x1B6E7F0
	0x01D12CD4 ADRP X0, 0x223C000
	0x01D12CD8 LDR X0, [X0 + 0x470]
	0x01D12CDC BL 0x1B6E7F0
	0x01D12CE0 ADRP X0, 0x223F000
	0x01D12CE4 LDR X0, [X0 + 0x3E8]
	0x01D12CE8 BL 0x1B6E7F0
	0x01D12CEC ADRP X0, 0x223F000
	0x01D12CF0 LDR X0, [X0 + 0x3F0]
	0x01D12CF4 BL 0x1B6E7F0
	0x01D12CF8 ADRP X0, 0x223C000
	0x01D12CFC LDR X0, [X0 + 0x478]
	0x01D12D00 BL 0x1B6E7F0
	0x01D12D04 ADRP X0, 0x223F000
	0x01D12D08 LDR X0, [X0 + 0x3F8]
	0x01D12D0C BL 0x1B6E7F0
	0x01D12D10 ADRP X0, 0x223F000
	0x01D12D14 LDR X0, [X0 + 0x400]
	0x01D12D18 BL 0x1B6E7F0
	0x01D12D1C ADRP X0, 0x223F000
	0x01D12D20 LDR X0, [X0 + 0x408]
	0x01D12D24 BL 0x1B6E7F0
	0x01D12D28 ADRP X0, 0x223D000
	0x01D12D2C LDR X0, [X0 + 0x6D8]
	0x01D12D30 BL 0x1B6E7F0
	0x01D12D34 ADRP X0, 0x223F000
	0x01D12D38 LDR X0, [X0 + 0x410]
	0x01D12D3C BL 0x1B6E7F0
	0x01D12D40 ADRP X0, 0x223F000
	0x01D12D44 LDR X0, [X0 + 0x418]
	0x01D12D48 BL 0x1B6E7F0
	0x01D12D4C ADRP X0, 0x223F000
	0x01D12D50 LDR X0, [X0 + 0x420]
	0x01D12D54 BL 0x1B6E7F0
	0x01D12D58 ADRP X0, 0x223B000
	0x01D12D5C LDR X0, [X0 + 0x860]
	0x01D12D60 BL 0x1B6E7F0
	0x01D12D64 ADRP X0, 0x223F000
	0x01D12D68 LDR X0, [X0 + 0x428]
	0x01D12D6C BL 0x1B6E7F0
	0x01D12D70 ADRP X0, 0x223F000
	0x01D12D74 LDR X0, [X0 + 0x430]
	0x01D12D78 BL 0x1B6E7F0
	0x01D12D7C ADRP X0, 0x223F000
	0x01D12D80 LDR X0, [X0 + 0x438]
	0x01D12D84 BL 0x1B6E7F0
	0x01D12D88 ADRP X0, 0x223F000
	0x01D12D8C LDR X0, [X0 + 0x440]
	0x01D12D90 BL 0x1B6E7F0
	0x01D12D94 ADRP X0, 0x223F000
	0x01D12D98 LDR X0, [X0 + 0x448]
	0x01D12D9C BL 0x1B6E7F0
	0x01D12DA0 ADRP X0, 0x223F000
	0x01D12DA4 LDR X0, [X0 + 0x450]
	0x01D12DA8 BL 0x1B6E7F0
	0x01D12DAC ADRP X0, 0x223D000
	0x01D12DB0 LDR X0, [X0 + 0x9A0]
	0x01D12DB4 BL 0x1B6E7F0
	0x01D12DB8 ADRP X0, 0x223F000
	0x01D12DBC LDR X0, [X0 + 0x458]
	0x01D12DC0 BL 0x1B6E7F0
	0x01D12DC4 ADRP X0, 0x223F000
	0x01D12DC8 LDR X0, [X0 + 0x460]
	0x01D12DCC BL 0x1B6E7F0
	0x01D12DD0 ADRP X0, 0x223F000
	0x01D12DD4 LDR X0, [X0 + 0x468]
	0x01D12DD8 BL 0x1B6E7F0
	0x01D12DDC ADRP X0, 0x223F000
	0x01D12DE0 LDR X0, [X0 + 0x470]
	0x01D12DE4 BL 0x1B6E7F0
	0x01D12DE8 ADRP X0, 0x223F000
	0x01D12DEC LDR X0, [X0 + 0x478]
	0x01D12DF0 BL 0x1B6E7F0
	0x01D12DF4 MOVZ W8, 0x1
	0x01D12DF8 STRB W8, [X20 + 0x7E3]
	0x01D12DFC STR X31, [X31 + 0x28]
	0x01D12E00 STR X31, [X31 + 0x18]
	0x01D12E04 ADRP X27, 0x223F000
	0x01D12E08 LDR W25, [X19]
	0x01D12E0C LDR X20, [X19 + 0x38]
	0x01D12E10 LDR X27, [X27 + 0x380]
	0x01D12E14 CBZ W25, 0x1D12E38
	0x01D12E18 CMP W25, 0x1
	0x01D12E1C B.NE 0x1D12E50
	0x01D12E20 LDR X8, [X19 + 0x70]
	0x01D12E24 MOVN W9, 0x0
	0x01D12E28 STR X8, [X31 + 0x18]
	0x01D12E2C STR X31, [X19 + 0x70]
	0x01D12E30 STR W9, [X19]
	0x01D12E34 B 0x1D133EC
	0x01D12E38 LDR X8, [X19 + 0x68]
	0x01D12E3C MOVN W9, 0x0
	0x01D12E40 STR X8, [X31 + 0x28]
	0x01D12E44 STR X31, [X19 + 0x68]
	0x01D12E48 STR W9, [X19]
	0x01D12E4C B 0x1D13390
	0x01D12E50 ADRP X8, 0x223F000
	0x01D12E54 LDR X8, [X8 + 0x3D8]
	0x01D12E58 LDR X0, [X8]
	0x01D12E5C BL 0x1B6EA0C
	0x01D12E60 MOV X21, X0
	0x01D12E64 MOV X1, X31
	0x01D12E68 BL 0x34650E4
	0x01D12E6C CBZ X21, 0x1D136C0
	0x01D12E70 LDR X1, [X19 + 0x20]
	0x01D12E74 MOV X0, X21
	0x01D12E78 MOV X2, X31
	0x01D12E7C BL 0x34601F8
	0x01D12E80 ADRP X8, 0x223F000
	0x01D12E84 LDR X23, [X19 + 0x28]
	0x01D12E88 LDR X8, [X8 + 0x3D0]
	0x01D12E8C LDR X0, [X8]
	0x01D12E90 BL 0x1B6EA0C
	0x01D12E94 MOV X22, X0
	0x01D12E98 MOV X1, X23
	0x01D12E9C MOV X2, X31
	0x01D12EA0 BL 0x3464B54
	0x01D12EA4 MOV X0, X21
	0x01D12EA8 MOV X1, X22

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0x2512000
	007 Move W9, [X21+2006]
	008 Move X20, X1
	009 Move X19, X8
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x2240000
	015 Move X0, [X0+624]
	016 Call 0x1B6F7F0
	017 Move X0, 0x2240000
	018 Move X0, [X0+632]
	019 Call 0x1B6F7F0
	020 Move X0, 0x2240000
	021 Move X0, [X0+640]
	022 Call 0x1B6F7F0
	023 Move X0, 0x2240000
	024 Move X0, [X0+648]
	025 Call 0x1B6F7F0
	026 Move X0, 0x2240000
	027 Move X0, [X0+656]
	028 Call 0x1B6F7F0
	029 Move W8, 1
	030 Move [X21+2006], W8
	031 Compare X20, 0
	032 JumpIfEqual {102}
	033 Move X0, X20
	034 Move X1, X31
	035 Call Task.get_IsFaulted, X0
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {103}
	040 Move X8, 0x2240000
	041 Move X8, [X8+656]
	042 Move X1, [X8]
	043 Move X0, X20
	044 Call Task`1<Object>.get_Result, X0
	045 Move X20, X0
	046 Compare X0, 0
	047 JumpIfEqual {115}
	048 Move X10, 0x2240000
	049 Move X8, [X20]
	050 Move X10, [X10+640]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X1, [X10]
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move W2, 2
	062 Move X0, X20
	063 Call 0x1BB5284
	064 Move W9, [X10]
	065 Add W9, W9, 2
	066 Add X8, X8, W9
	067 Add X0, X8, 312
	068 Move X8, [X0]
	069 Move X1, [X0+8]
	070 Move X0, X20
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X8, 0x2240000
	073 Move X8, [X8+648]
	074 Move X1, [X8]
	075 Add X8, X31, 24
	076 Call JsonParser.FromJson, X0
	077 Move X8, 0x2240000
	078 Move X8, [X8+632]
	079 Move X20, [X31+24]
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 Move X0, [X8]
	082 Move [X31], V0
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1B6F8F8
	087 Move X8, 0x2240000
	088 Move X8, [X8+624]
	089 Move X1, [X8]
	090 Move X0, X20
	091 Call 0x209DC80, X0
	092 Move V0, [X31]
	093 Move [X19], W0
	094 Move [X19+4], W31
	095 Move X30, [X31+48]
	096 Move X21, [X31+56]
	097 Move [X19+8], V0
	098 Move X20, [X31+64]
	099 Move X19, [X31+72]
	100 Add X31, X31, 80
	101 Return X0
	102 Call 0x1B6FA1C
	103 Move X0, X20
	104 Call 0x18F54E0
	105 Move X0, X20
	106 Move X1, X31
	107 Call Task.get_Exception, X0
	108 Move X19, X0
	109 Move X0, 0x2240000
	110 Move X0, [X0+576]
	111 Call 0x1B6F804
	112 Move X1, X0
	113 Move X0, X19
	114 Call 0x1B6F8E8
	115 Call 0x1B6FA1C
	116 Move X19, X0
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X0, X19
	119 Call 0x3D1A840
	120 Move X19, X0
	121 Move X0, 0x223C000
	122 Move X0, [X0+1648]
	123 Call 0x1B6F804
	124 Move X8, [X19]
	125 Move X1, [X8]
	126 Call 0x1B6FD6C
	127 Move TEMP, X0
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfNotEqual {152}
	131 Move X19, [X19]
	132 Call 0x3D1A850
	133 Move X0, 0x223C000
	134 Move X0, [X0+1648]
	135 Call 0x1B6F804
	136 Call 0x1B6FA0C
	137 Move X20, X0
	138 Move X0, 0x2240000
	139 Move X0, [X0+664]
	140 Call 0x1B6F804
	141 Move X1, X0
	142 Move X0, X20
	143 Move X2, X19
	144 Move X3, X31
	145 Call Exception..ctor, X0, X1, X2
	146 Move X0, 0x2240000
	147 Move X0, [X0+576]
	148 Call 0x1B6F804
	149 Move X1, X0
	150 Move X0, X20
	151 Call 0x1B6F8E8
	152 Move W0, 8
	153 Call 0x3D1A860
	154 Move X8, [X19]
	155 Move [X0], X8
	156 Move X1, 0x200B000
	157 Add X1, X1, 3032
	158 Move X2, X31
	159 Call 0x3D1A870
	160 Move X19, X0
	161 Call 0x3D1A850
	162 Move X0, X19
	163 Call 0x1C8518C
	164 Call 0x18F56A8

