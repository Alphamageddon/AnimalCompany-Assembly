Type: AnimalCompany.API.AnimalCompanyAPI/<RefreshAPISession>d__24

Method: System.Void MoveNext()

Disassembly:
	0x01D75DD8 LDR X0, [X0 + 0x1D8]
	0x01D75DDC BL 0x1C16CF4
	0x01D75DE0 ADRP X0, 0x2381000
	0x01D75DE4 LDR X0, [X0 + 0x1E0]
	0x01D75DE8 BL 0x1C16CF4
	0x01D75DEC ADRP X0, 0x2381000
	0x01D75DF0 LDR X0, [X0 + 0x1E8]
	0x01D75DF4 BL 0x1C16CF4
	0x01D75DF8 ADRP X0, 0x2381000
	0x01D75DFC LDR X0, [X0 + 0x1F0]
	0x01D75E00 BL 0x1C16CF4
	0x01D75E04 ADRP X0, 0x2381000
	0x01D75E08 LDR X0, [X0 + 0x1F8]
	0x01D75E0C BL 0x1C16CF4
	0x01D75E10 ADRP X0, 0x2381000
	0x01D75E14 LDR X0, [X0 + 0x200]
	0x01D75E18 BL 0x1C16CF4
	0x01D75E1C ADRP X0, 0x2380000
	0x01D75E20 LDR X0, [X0 + 0x570]
	0x01D75E24 BL 0x1C16CF4
	0x01D75E28 ADRP X0, 0x2381000
	0x01D75E2C LDR X0, [X0 + 0x208]
	0x01D75E30 BL 0x1C16CF4
	0x01D75E34 ADRP X0, 0x2381000
	0x01D75E38 LDR X0, [X0 + 0x210]
	0x01D75E3C BL 0x1C16CF4
	0x01D75E40 ADRP X0, 0x2381000
	0x01D75E44 LDR X0, [X0 + 0x218]
	0x01D75E48 BL 0x1C16CF4
	0x01D75E4C ADRP X0, 0x2381000
	0x01D75E50 LDR X0, [X0 + 0x220]
	0x01D75E54 BL 0x1C16CF4
	0x01D75E58 ADRP X0, 0x2381000
	0x01D75E5C LDR X0, [X0 + 0x228]
	0x01D75E60 BL 0x1C16CF4
	0x01D75E64 MOVZ W8, 0x1
	0x01D75E68 STRB W8, [X20 + 0x914]
	0x01D75E6C STR X31, [X31 + 0x28]
	0x01D75E70 STR X31, [X31 + 0x18]
	0x01D75E74 ADRP X27, 0x2381000
	0x01D75E78 LDR W25, [X19]
	0x01D75E7C LDR X20, [X19 + 0x38]
	0x01D75E80 LDR X27, [X27 + 0x130]
	0x01D75E84 CBZ W25, 0x1D75EA8
	0x01D75E88 CMP W25, 0x1
	0x01D75E8C B.NE 0x1D75EC0
	0x01D75E90 LDR X8, [X19 + 0x70]
	0x01D75E94 MOVN W9, 0x0
	0x01D75E98 STR X8, [X31 + 0x18]
	0x01D75E9C STR X31, [X19 + 0x70]
	0x01D75EA0 STR W9, [X19]
	0x01D75EA4 B 0x1D7645C
	0x01D75EA8 LDR X8, [X19 + 0x68]
	0x01D75EAC MOVN W9, 0x0
	0x01D75EB0 STR X8, [X31 + 0x28]
	0x01D75EB4 STR X31, [X19 + 0x68]
	0x01D75EB8 STR W9, [X19]
	0x01D75EBC B 0x1D76400
	0x01D75EC0 ADRP X8, 0x2381000
	0x01D75EC4 LDR X8, [X8 + 0x180]
	0x01D75EC8 LDR X0, [X8]
	0x01D75ECC BL 0x1C16F10
	0x01D75ED0 MOV X21, X0
	0x01D75ED4 MOV X1, X31
	0x01D75ED8 BL 0x35FBED4
	0x01D75EDC CBZ X21, 0x1D76730
	0x01D75EE0 LDR X1, [X19 + 0x20]
	0x01D75EE4 MOV X0, X21
	0x01D75EE8 MOV X2, X31
	0x01D75EEC BL 0x35F6FE8
	0x01D75EF0 ADRP X8, 0x2381000
	0x01D75EF4 LDR X23, [X19 + 0x28]
	0x01D75EF8 LDR X8, [X8 + 0x178]
	0x01D75EFC LDR X0, [X8]
	0x01D75F00 BL 0x1C16F10
	0x01D75F04 MOV X22, X0
	0x01D75F08 MOV X1, X23
	0x01D75F0C MOV X2, X31
	0x01D75F10 BL 0x35FB944
	0x01D75F14 MOV X0, X21
	0x01D75F18 MOV X1, X22
	0x01D75F1C MOV X2, X31
	0x01D75F20 BL 0x35FBFE8
	0x01D75F24 MOV X0, X21
	0x01D75F28 MOV X1, X31
	0x01D75F2C BL 0x35F6748
	0x01D75F30 CBZ X0, 0x1D76734
	0x01D75F34 MOV X1, X31
	0x01D75F38 BL 0x3604634
	0x01D75F3C ADRP X8, 0x2381000
	0x01D75F40 LDR X8, [X8 + 0x1C0]
	0x01D75F44 MOV X22, X0
	0x01D75F48 LDR X0, [X8]
	0x01D75F4C BL 0x1C16F10
	0x01D75F50 ADRP X8, 0x2381000
	0x01D75F54 LDR X8, [X8 + 0x208]
	0x01D75F58 MOV X23, X0
	0x01D75F5C LDR X1, [X8]
	0x01D75F60 MOV X2, X31
	0x01D75F64 BL 0x3605BA4
	0x01D75F68 CBZ X22, 0x1D76738
	0x01D75F6C ADRP X8, 0x2381000
	0x01D75F70 LDR X8, [X8 + 0x170]
	0x01D75F74 LDR X2, [X8]
	0x01D75F78 MOV X0, X22
	0x01D75F7C MOV X1, X23
	0x01D75F80 BL 0x2DE064C
	0x01D75F84 LDR X22, [X19 + 0x30]
	0x01D75F88 CBZ X22, 0x1D7673C
	0x01D75F8C ADRP X10, 0x2381000
	0x01D75F90 LDR X8, [X22]
	0x01D75F94 LDR X10, [X10 + 0x190]
	0x01D75F98 LDRH W9, [X8 + 0x12E]
	0x01D75F9C LDR X1, [X10]
	0x01D75FA0 CBZ X9, 0x1D75FC4
	0x01D75FA4 LDR X10, [X8 + 0xB0]
	0x01D75FA8 ADD X10, X10, 0x8
	0x01D75FAC LDUR X11, [X10 - 0x8]
	0x01D75FB0 CMP X11, X1
	0x01D75FB4 B.EQ 0x1D75FD4
	0x01D75FB8 SUBS X9, X9, 0x1
	0x01D75FBC ADD X10, X10, 0x10
	0x01D75FC0 B.NE 0x1D75FAC
	0x01D75FC4 MOV X0, X22
	0x01D75FC8 MOV W2, W31
	0x01D75FCC BL 0x1C5C788
	0x01D75FD0 B 0x1D75FE0
	0x01D75FD4 LDRSW X9, [X10]
	0x01D75FD8 ADD X8, X8, X9, 0x4, LSL
	0x01D75FDC ADD X0, X8, 0x138
	0x01D75FE0 LDP X8, X1, [X0]
	0x01D75FE4 MOV X0, X22
	0x01D75FE8 BLR X8
	0x01D75FEC MOV X23, X0
	0x01D75FF0 CBZ X0, 0x1D76740
	0x01D75FF4 ADRP X26, 0x237E000
	0x01D75FF8 ADRP X28, 0x2381000
	0x01D75FFC LDR X26, [X26 + 0xE18]
	0x01D76000 B 0x3EB17B4
	0x01D76004 LDR X8, [X23]
	0x01D76008 LDR X1, [X26]
	0x01D7600C LDRH W9, [X8 + 0x12E]
	0x01D76010 CBZ X9, 0x1D76034
	0x01D76014 LDR X10, [X8 + 0xB0]
	0x01D76018 ADD X10, X10, 0x8
	0x01D7601C LDUR X11, [X10 - 0x8]
	0x01D76020 CMP X11, X1
	0x01D76024 B.EQ 0x1D76044
	0x01D76028 SUBS X9, X9, 0x1
	0x01D7602C ADD X10, X10, 0x10
	0x01D76030 B.NE 0x1D7601C
	0x01D76034 MOV X0, X23
	0x01D76038 MOV W2, W31
	0x01D7603C BL 0x1C5C788
	0x01D76040 B 0x1D76050
	0x01D76044 LDRSW X9, [X10]
	0x01D76048 ADD X8, X8, X9, 0x4, LSL
	0x01D7604C ADD X0, X8, 0x138
	0x01D76050 LDP X8, X1, [X0]
	0x01D76054 MOV X0, X23
	0x01D76058 BLR X8
	0x01D7605C TBZ X0, 0x0, 0x1D760E4
	0x01D76060 LDR X8, [X23]
	0x01D76064 LDR X1, [X28]
	0x01D76068 LDRH W9, [X8 + 0x12E]
	0x01D7606C CBZ X9, 0x1D76090
	0x01D76070 LDR X10, [X8 + 0xB0]
	0x01D76074 ADD X10, X10, 0x8
	0x01D76078 LDUR X11, [X10 - 0x8]
	0x01D7607C CMP X11, X1
	0x01D76080 B.EQ 0x1D760A0
	0x01D76084 SUBS X9, X9, 0x1
	0x01D76088 ADD X10, X10, 0x10
	0x01D7608C B.NE 0x1D76078
	0x01D76090 MOV X0, X23
	0x01D76094 MOV W2, W31
	0x01D76098 BL 0x1C5C788
	0x01D7609C B 0x1D760AC
	0x01D760A0 LDRSW X9, [X10]
	0x01D760A4 ADD X8, X8, X9, 0x4, LSL
	0x01D760A8 ADD X0, X8, 0x138
	0x01D760AC LDP X8, X1, [X0]
	0x01D760B0 MOV X0, X23
	0x01D760B4 BLR X8
	0x01D760B8 MOV X22, X0
	0x01D760BC MOV X24, X1
	0x01D760C0 MOV X0, X21
	0x01D760C4 MOV X1, X31
	0x01D760C8 BL 0x35F6748
	0x01D760CC CBZ X0, 0x1D766A0
	0x01D760D0 MOV X1, X22
	0x01D760D4 MOV X2, X24
	0x01D760D8 MOV X3, X31
	0x01D760DC BL 0x36031D0
	0x01D760E0 B 0x1D76004
	0x01D760E4 MOV X24, X31
	0x01D760E8 MOVZ W22, 0x6
	0x01D760EC TBZ X25, 0x1F, 0x1D76154
	0x01D760F0 CBZ X23, 0x1D76154
	0x01D760F4 ADRP X10, 0x237D000
	0x01D760F8 LDR X8, [X23]
	0x01D760FC LDR X10, [X10 + 0xE00]
	0x01D76100 LDRH W9, [X8 + 0x12E]
	0x01D76104 LDR X1, [X10]
	0x01D76108 CBZ X9, 0x1D7612C
	0x01D7610C LDR X10, [X8 + 0xB0]
	0x01D76110 ADD X10, X10, 0x8
	0x01D76114 LDUR X11, [X10 - 0x8]
	0x01D76118 CMP X11, X1
	0x01D7611C B.EQ 0x1D7613C
	0x01D76120 SUBS X9, X9, 0x1
	0x01D76124 ADD X10, X10, 0x10
	0x01D76128 B.NE 0x1D76114
	0x01D7612C MOV X0, X23
	0x01D76130 MOV W2, W31
	0x01D76134 BL 0x1C5C788
	0x01D76138 B 0x1D76148
	0x01D7613C LDRSW X9, [X10]
	0x01D76140 ADD X8, X8, X9, 0x4, LSL
	0x01D76144 ADD X0, X8, 0x138
	0x01D76148 LDP X8, X1, [X0]
	0x01D7614C MOV X0, X23
	0x01D76150 BLR X8
	0x01D76154 CBNZ X24, 0x1D76744
	0x01D76158 CMP W22, 0x6
	0x01D7615C B.EQ 0x1D76164
	0x01D76160 CBNZ W22, 0x1D76680
	0x01D76164 CBZ X20, 0x1D7674C
	0x01D76168 LDR X0, [X20 + 0x20]
	0x01D7616C MOV X1, X31
	0x01D76170 BL 0x32277A8
	0x01D76174 TBNZ X0, 0x0, 0x1D761A0
	0x01D76178 MOV X0, X21
	0x01D7617C MOV X1, X31
	0x01D76180 BL 0x35F6748
	0x01D76184 CBZ X0, 0x1D767DC
	0x01D76188 ADRP X8, 0x2380000
	0x01D7618C LDR X2, [X20 + 0x20]
	0x01D76190 LDR X8, [X8 + 0x228]
	0x01D76194 LDR X1, [X8]
	0x01D76198 MOV X3, X31
	0x01D7619C BL 0x36031D0
	0x01D761A0 LDR X22, [X19 + 0x40]
	0x01D761A4 CBZ X22, 0x1D761CC
	0x01D761A8 ADRP X8, 0x2380000
	0x01D761AC LDR X8, [X8 + 0x168]
	0x01D761B0 LDR X0, [X8]
	0x01D761B4 BL 0x1C16F10
	0x01D761B8 MOV X23, X0
	0x01D761BC MOV X1, X22
	0x01D761C0 MOV X2, X31
	0x01D761C4 BL 0x35F9710
	0x01D761C8 STR X23, [X21 + 0x38]
	0x01D761CC ADRP X24, 0x237F000
	0x01D761D0 LDR X24, [X24 + 0xA50]
	0x01D761D4 LDR X0, [X24]
	0x01D761D8 BL 0x1C16F10
	0x01D761DC MOV X23, X0
	0x01D761E0 MOV X1, X31
	0x01D761E4 BL 0x33DFA8C
	0x01D761E8 CBZ X23, 0x1D76750
	0x01D761EC MOV X0, X23
	0x01D761F0 MOV X1, X31
	0x01D761F4 BL 0x33DFA08
	0x01D761F8 ADRP X8, 0x237F000
	0x01D761FC LDR X8, [X8 + 0x570]
	0x01D76200 MOV X22, X0
	0x01D76204 LDR W25, [X19 + 0x48]
	0x01D76208 LDR X0, [X8]
	0x01D7620C LDR W8, [X0 + 0xE0]
	0x01D76210 CBNZ W8, 0x1D76218
	0x01D76214 BL 0x1C16DFC
	0x01D76218 SCVTF D0, W25
	0x01D7621C MOV X0, X31
	0x01D76220 BL 0x3394754
	0x01D76224 MOV X1, X0
	0x01D76228 MOV X0, X23
	0x01D7622C MOV X2, X31
	0x01D76230 BL 0x33DFDEC
	0x01D76234 MOV X0, X19
	0x01D76238 LDRB W8, [X0 + 0x50]!
	0x01D7623C CBZ W8, 0x1D7627C
	0x01D76240 ADRP X8, 0x2380000
	0x01D76244 LDR X8, [X8 + 0x1D0]
	0x01D76248 LDR X1, [X8]
	0x01D7624C BL 0x242E380
	0x01D76250 MOV X23, X0
	0x01D76254 LDR X0, [X24]
	0x01D76258 LDR W8, [X0 + 0xE0]
	0x01D7625C CBNZ W8, 0x1D76264
	0x01D76260 BL 0x1C16DFC
	0x01D76264 MOV X0, X22
	0x01D76268 MOV X1, X23
	0x01D7626C MOV X2, X31
	0x01D76270 BL 0x33E0A98
	0x01D76274 MOV X23, X0
	0x01D76278 B 0x1D76280
	0x01D7627C MOV X23, X31
	0x01D76280 LDR X24, [X20 + 0x18]
	0x01D76284 CBZ X24, 0x1D7639C
	0x01D76288 ADRP X8, 0x237D000
	0x01D7628C LDR X8, [X8 + 0x9D0]
	0x01D76290 LDR X0, [X8]
	0x01D76294 MOVZ W1, 0x3
	0x01D76298 BL 0x1C16D6C
	0x01D7629C MOV X25, X0
	0x01D762A0 CBZ X0, 0x1D767CC
	0x01D762A4 LDR X26, [X19 + 0x28]
	0x01D762A8 CBZ X26, 0x1D762C0
	0x01D762AC LDR X8, [X25]
	0x01D762B0 LDR X1, [X8 + 0x40]
	0x01D762B4 MOV X0, X26
	0x01D762B8 BL 0x1C16E00
	0x01D762BC CBZ X0, 0x1D767E0
	0x01D762C0 LDR W8, [X25 + 0x18]
	0x01D762C4 CBZ W8, 0x1D767D0
	0x01D762C8 STR X26, [X25 + 0x20]
	0x01D762CC LDR X26, [X19 + 0x20]
	0x01D762D0 CBZ X26, 0x1D762EC
	0x01D762D4 LDR X8, [X25]
	0x01D762D8 LDR X1, [X8 + 0x40]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x2664000
	009 Move W8, [X20+2311]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {44}
	015 Move X0, 0x237F000
	016 Move X0, [X0+1624]
	017 Call 0x1C17CF4
	018 Move X0, 0x2381000
	019 Move X0, [X0+4048]
	020 Call 0x1C17CF4
	021 Move X0, 0x2381000
	022 Move X0, [X0+4056]
	023 Call 0x1C17CF4
	024 Move X0, 0x2381000
	025 Move X0, [X0+2584]
	026 Call 0x1C17CF4
	027 Move X0, 0x237F000
	028 Move X0, [X0+1448]
	029 Call 0x1C17CF4
	030 Move X0, 0x2380000
	031 Move X0, [X0+2096]
	032 Call 0x1C17CF4
	033 Move X0, 0x2380000
	034 Move X0, [X0+2104]
	035 Call 0x1C17CF4
	036 Move X0, 0x2380000
	037 Move X0, [X0+2112]
	038 Call 0x1C17CF4
	039 Move X0, 0x2380000
	040 Move X0, [X0+1976]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X20+2311], W8
	044 Move [X31], X31
	045 Move [X31+8], X31
	046 Move W8, [X19]
	047 Compare W8, 0
	048 JumpIfEqual {57}
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X8, [X19+64]
	051 Move TEMP, 0
	052 Not TEMP
	053 Move W9, TEMP
	054 Move [X31], X8
	055 Move [X19+64], X31
	056 Move [X19], W9
	057 Move X8, [X19+56]
	058 Move TEMP, 0
	059 Not TEMP
	060 Move W9, TEMP
	061 Move [X31+8], X8
	062 Move [X19+56], X31
	063 Move [X19], W9
	064 Move X8, 0x237F000
	065 Move X8, [X8+1448]
	066 Move W20, [X19+40]
	067 Move X0, [X8]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move W8, 1000
	073 Multiply W1, W20, W8
	074 Move W0, 100
	075 Move X2, X31
	076 Call Math.Max, X0, X1
	077 Move X8, 0x2380000
	078 Move X8, [X8+1976]
	079 Move W20, W0
	080 Move X21, [X19+48]
	081 Move X0, [X8]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Move W0, W20
	087 Move X1, X21
	088 Move X2, X31
	089 Call Task.Delay, X0, X1
	090 Compare X0, 0
	091 JumpIfEqual {223}
	092 Move X1, X31
	093 Call Task.GetAwaiter, X0
	094 Move [X31+8], X0
	095 Add X0, X31, 8
	096 Move X1, X31
	097 Call TaskAwaiter.get_IsCompleted, X0
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {152}
	102 Add X0, X31, 8
	103 Move X1, X31
	104 Call TaskAwaiter.GetResult, X0
	105 Move X22, 0x237F000
	106 Move X22, [X22+1624]
	107 Move X0, [X22]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {113}
	111 Call 0x1C17DFC
	112 Move X0, [X22]
	113 Move X8, [X0+184]
	114 Move X23, 0x2664000
	115 Move W9, [X23+1929]
	116 Move X20, [X8+16]
	117 Compare W9, 0
	118 JumpIfNotEqual {126}
	119 Move X21, 0x237F000
	120 Move X21, [X21+1624]
	121 Move X0, X21
	122 Call 0x1C17CF4
	123 Move X0, [X21]
	124 Move W8, 1
	125 Move [X23+1929], W8
	126 Move W8, [X0+224]
	127 Compare W8, 0
	128 JumpIfNotEqual {131}
	129 Call 0x1C17DFC
	130 Move X0, [X22]
	131 Compare X20, 0
	132 JumpIfEqual {221}
	133 Move X10, 0x2381000
	134 Move X9, [X0+184]
	135 Move X8, [X20]
	136 Move X21, [X19+48]
	137 Move X10, [X10+2584]
	138 Move X22, [X9+32]
	139 NotImplemented "Instruction LDRH not yet implemented."
	140 Move X1, [X10]
	141 Compare X9, 0
	142 JumpIfEqual {149}
	143 Move X10, [X8+176]
	144 Add X10, X10, 8
	145 NotImplemented "Instruction LDUR not yet implemented."
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Subtract X9, X9, 1
	148 Add X10, X10, 16
	149 Move W2, 78
	150 Move X0, X20
	151 Call 0x1C5D788
	152 Move [X19], W31
	153 Move X8, [X31+8]
	154 Add X0, X19, 8
	155 Move [X19+56], X8
	156 Move X8, 0x2380000
	157 Move X8, [X8+4056]
	158 Move X3, [X8]
	159 Add X1, X31, 8
	160 Move X2, X19
	161 Call AsyncVoidMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	162 Move W9, [X10]
	163 Add W9, W9, 78
	164 Add X8, X8, W9
	165 Add X0, X8, 312
	166 Move X8, [X0]
	167 Move X5, [X0+8]
	168 Move X0, X20
	169 Move X1, X22
	170 Move X2, X31
	171 Move X3, X31
	172 Move X4, X21
	173 NotImplemented "Instruction BLR not yet implemented."
	174 Compare X0, 0
	175 JumpIfEqual {222}
	176 Move X8, 0x237F000
	177 Move X8, [X8+2112]
	178 Move X1, [X8]
	179 Call Task`1<Object>.GetAwaiter, X0
	180 Move X8, 0x237F000
	181 Move X8, [X8+2104]
	182 Move [X31], X0
	183 Move X1, [X8]
	184 Add X0, X31, 0
	185 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {202}
	190 Move X8, 0x237F000
	191 Move X8, [X8+2096]
	192 Add X0, X31, 0
	193 Move X1, [X8]
	194 Call TaskAwaiter`1<Object>.GetResult, X0
	195 Move TEMP, 1
	196 Not TEMP
	197 Move W8, TEMP
	198 Move [X19+8], W8
	199 Move X0, X19
	200 Move X1, X31
	201 Call AsyncVoidMethodBuilder.SetResult, X0
	202 Move W8, 1
	203 Move [X19], W8
	204 Move X8, [X31]
	205 Add X0, X19, 8
	206 Move [X19+64], X8
	207 Move X8, 0x2380000
	208 Move X8, [X8+4048]
	209 Move X3, [X8]
	210 Add X1, X31, 0
	211 Move X2, X19
	212 Call AsyncVoidMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	213 Move X20, [X31+48]
	214 Move X19, [X31+56]
	215 Move X22, [X31+32]
	216 Move X21, [X31+40]
	217 Move X30, [X31+16]
	218 Move X23, [X31+24]
	219 Add X31, X31, 64
	220 Return 
	221 Call 0x1C17F20
	222 Call 0x1C17F20
	223 Call 0x1C17F20
	224 Move X20, X0
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move X0, X20
	227 Call 0x3EB2AD0
	228 Move X20, X0
	229 Move X0, 0x237E000
	230 Move X0, [X0+2000]
	231 Call 0x1C17D08
	232 Move X8, [X20]
	233 Move X1, [X8]
	234 Call 0x1C18270
	235 Move TEMP, X0
	236 And TEMP, TEMP, 1
	237 Compare TEMP, 1
	238 JumpIfNotEqual {281}
	239 Move X20, [X20]
	240 Call 0x3EB2AE0
	241 Move X0, 0x237F000
	242 Move X0, [X0+2208]
	243 Call 0x1C17D08
	244 Compare X20, 0
	245 JumpIfEqual {254}
	246 Move X8, [X20]
	247 Move W9, [X0+304]
	248 Move W10, [X8+304]
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Move X8, [X8+200]
	251 Add X8, X8, X9
	252 NotImplemented "Instruction LDUR not yet implemented."
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Move X0, 0x237E000
	255 Move X0, [X0+1928]
	256 Call 0x1C17D08
	257 Move W8, [X0+224]
	258 Compare W8, 0
	259 JumpIfNotEqual {261}
	260 Call 0x1C17DFC
	261 Move X0, 0x2380000
	262 Move X0, [X0+4064]
	263 Call 0x1C17D08
	264 Move X21, X0
	265 Move X0, 0x2380000
	266 Move X0, [X0+2680]
	267 Call 0x1C17D08
	268 Move X22, X0
	269 Move X0, 0x2380000
	270 Move X0, [X0+4072]
	271 Call 0x1C17D08
	272 Move X5, X0
	273 Move W0, 64
	274 Move W6, 118
	275 Move X1, X21
	276 Move X2, X20
	277 Move X3, X31
	278 Move X4, X22
	279 Move X7, X31
	280 Call Log.Error, X0, X1, X2, X3, X4, X5, X6
	281 Move W0, 8
	282 Call 0x3EB2AF0
	283 Move X8, [X20]
	284 Move [X0], X8
	285 Move X1, 0x213F000
	286 Add X1, X1, 3672
	287 Move X2, X31
	288 Call 0x3EB2B00
	289 Move X20, X0
	290 Move X21, X1
	291 Move X20, X0
	292 Call 0x3EB2AE0
	293 Move W1, W21
	294 Move X20, X0
	295 Move W8, 1
	296 NotImplemented "Instruction CMP not yet implemented."
	297 Move X0, X20
	298 Call 0x3EB2AD0
	299 Move X20, X0
	300 Move X0, 0x237E000
	301 Move X0, [X0+2000]
	302 Call 0x1C17D08
	303 Move X8, [X20]
	304 Move X1, [X8]
	305 Call 0x1C18270
	306 Move TEMP, X0
	307 And TEMP, TEMP, 1
	308 Compare TEMP, 1
	309 JumpIfNotEqual {320}
	310 Move X20, [X20]
	311 Call 0x3EB2AE0
	312 Move TEMP, 1
	313 Not TEMP
	314 Move W8, TEMP
	315 Move [X19+8], W8
	316 Move X0, X19
	317 Move X1, X20
	318 Move X2, X31
	319 Call AsyncVoidMethodBuilder.SetException, X0, X1
	320 Move W0, 8
	321 Call 0x3EB2AF0
	322 Move X8, [X20]
	323 Move [X0], X8
	324 Move X1, 0x213F000
	325 Add X1, X1, 3672
	326 Move X2, X31
	327 Call 0x3EB2B00
	328 Move X20, X0
	329 Call 0x3EB2AE0
	330 Move X0, X20
	331 Call 0x1D2D690
	332 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x01D762DC MOV X0, X26
	0x01D762E0 BL 0x1C16E00
	0x01D762E4 CBZ X0, 0x1D767EC

ISIL:
	001 Add X0, X0, 8
	002 Move X2, X31
	003 Call AsyncVoidMethodBuilder.SetStateMachine, X0, X1
	004 Return 

