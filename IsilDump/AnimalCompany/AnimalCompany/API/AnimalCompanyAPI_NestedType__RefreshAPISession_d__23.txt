Type: AnimalCompany.API.AnimalCompanyAPI/<RefreshAPISession>d__23

Method: System.Void MoveNext()

Disassembly:
	0x01D12EAC MOV X2, X31
	0x01D12EB0 BL 0x34651F8
	0x01D12EB4 MOV X0, X21
	0x01D12EB8 MOV X1, X31
	0x01D12EBC BL 0x345F958
	0x01D12EC0 CBZ X0, 0x1D136C4
	0x01D12EC4 MOV X1, X31
	0x01D12EC8 BL 0x346D844
	0x01D12ECC ADRP X8, 0x223F000
	0x01D12ED0 LDR X8, [X8 + 0x410]
	0x01D12ED4 MOV X22, X0
	0x01D12ED8 LDR X0, [X8]
	0x01D12EDC BL 0x1B6EA0C
	0x01D12EE0 ADRP X8, 0x223F000
	0x01D12EE4 LDR X8, [X8 + 0x458]
	0x01D12EE8 MOV X23, X0
	0x01D12EEC LDR X1, [X8]
	0x01D12EF0 MOV X2, X31
	0x01D12EF4 BL 0x346EDB4
	0x01D12EF8 CBZ X22, 0x1D136C8
	0x01D12EFC ADRP X8, 0x223F000
	0x01D12F00 LDR X8, [X8 + 0x3C8]
	0x01D12F04 LDR X2, [X8]
	0x01D12F08 MOV X0, X22
	0x01D12F0C MOV X1, X23
	0x01D12F10 BL 0x2C18688
	0x01D12F14 LDR X22, [X19 + 0x30]
	0x01D12F18 CBZ X22, 0x1D136CC
	0x01D12F1C ADRP X10, 0x223F000
	0x01D12F20 LDR X8, [X22]
	0x01D12F24 LDR X10, [X10 + 0x3E8]
	0x01D12F28 LDRH W9, [X8 + 0x12E]
	0x01D12F2C LDR X1, [X10]
	0x01D12F30 CBZ X9, 0x1D12F54
	0x01D12F34 LDR X10, [X8 + 0xB0]
	0x01D12F38 ADD X10, X10, 0x8
	0x01D12F3C LDUR X11, [X10 - 0x8]
	0x01D12F40 CMP X11, X1
	0x01D12F44 B.EQ 0x1D12F64
	0x01D12F48 SUBS X9, X9, 0x1
	0x01D12F4C ADD X10, X10, 0x10
	0x01D12F50 B.NE 0x1D12F3C
	0x01D12F54 MOV X0, X22
	0x01D12F58 MOV W2, W31
	0x01D12F5C BL 0x1BB4284
	0x01D12F60 B 0x1D12F70
	0x01D12F64 LDRSW X9, [X10]
	0x01D12F68 ADD X8, X8, X9, 0x4, LSL
	0x01D12F6C ADD X0, X8, 0x138
	0x01D12F70 LDP X8, X1, [X0]
	0x01D12F74 MOV X0, X22
	0x01D12F78 BLR X8
	0x01D12F7C MOV X23, X0
	0x01D12F80 CBZ X0, 0x1D136D0
	0x01D12F84 ADRP X26, 0x223C000
	0x01D12F88 ADRP X28, 0x223F000
	0x01D12F8C LDR X26, [X26 + 0x478]
	0x01D12F90 LDR X28, [X28 + 0x3F0]
	0x01D12F94 LDR X8, [X23]
	0x01D12F98 LDR X1, [X26]
	0x01D12F9C LDRH W9, [X8 + 0x12E]
	0x01D12FA0 CBZ X9, 0x1D12FC4
	0x01D12FA4 LDR X10, [X8 + 0xB0]
	0x01D12FA8 ADD X10, X10, 0x8
	0x01D12FAC LDUR X11, [X10 - 0x8]
	0x01D12FB0 CMP X11, X1
	0x01D12FB4 B.EQ 0x1D12FD4
	0x01D12FB8 SUBS X9, X9, 0x1
	0x01D12FBC ADD X10, X10, 0x10
	0x01D12FC0 B.NE 0x1D12FAC
	0x01D12FC4 MOV X0, X23
	0x01D12FC8 MOV W2, W31
	0x01D12FCC BL 0x1BB4284
	0x01D12FD0 B 0x1D12FE0
	0x01D12FD4 LDRSW X9, [X10]
	0x01D12FD8 ADD X8, X8, X9, 0x4, LSL
	0x01D12FDC ADD X0, X8, 0x138
	0x01D12FE0 LDP X8, X1, [X0]
	0x01D12FE4 MOV X0, X23
	0x01D12FE8 BLR X8
	0x01D12FEC TBZ X0, 0x0, 0x1D13074
	0x01D12FF0 LDR X8, [X23]
	0x01D12FF4 LDR X1, [X28]
	0x01D12FF8 LDRH W9, [X8 + 0x12E]
	0x01D12FFC CBZ X9, 0x1D13020
	0x01D13000 LDR X10, [X8 + 0xB0]
	0x01D13004 ADD X10, X10, 0x8
	0x01D13008 LDUR X11, [X10 - 0x8]
	0x01D1300C CMP X11, X1
	0x01D13010 B.EQ 0x1D13030
	0x01D13014 SUBS X9, X9, 0x1
	0x01D13018 ADD X10, X10, 0x10
	0x01D1301C B.NE 0x1D13008
	0x01D13020 MOV X0, X23
	0x01D13024 MOV W2, W31
	0x01D13028 BL 0x1BB4284
	0x01D1302C B 0x1D1303C
	0x01D13030 LDRSW X9, [X10]
	0x01D13034 ADD X8, X8, X9, 0x4, LSL
	0x01D13038 ADD X0, X8, 0x138
	0x01D1303C LDP X8, X1, [X0]
	0x01D13040 MOV X0, X23
	0x01D13044 BLR X8
	0x01D13048 MOV X22, X0
	0x01D1304C MOV X24, X1
	0x01D13050 MOV X0, X21
	0x01D13054 MOV X1, X31
	0x01D13058 BL 0x345F958
	0x01D1305C CBZ X0, 0x1D13630
	0x01D13060 MOV X1, X22
	0x01D13064 MOV X2, X24
	0x01D13068 MOV X3, X31
	0x01D1306C BL 0x346C3E0
	0x01D13070 B 0x1D12F94
	0x01D13074 MOV X24, X31
	0x01D13078 MOVZ W22, 0x6
	0x01D1307C TBZ X25, 0x1F, 0x1D130E4
	0x01D13080 CBZ X23, 0x1D130E4
	0x01D13084 ADRP X10, 0x223B000
	0x01D13088 LDR X8, [X23]
	0x01D1308C LDR X10, [X10 + 0x470]
	0x01D13090 LDRH W9, [X8 + 0x12E]
	0x01D13094 LDR X1, [X10]
	0x01D13098 CBZ X9, 0x1D130BC
	0x01D1309C LDR X10, [X8 + 0xB0]
	0x01D130A0 ADD X10, X10, 0x8
	0x01D130A4 LDUR X11, [X10 - 0x8]
	0x01D130A8 CMP X11, X1
	0x01D130AC B.EQ 0x1D130CC
	0x01D130B0 SUBS X9, X9, 0x1
	0x01D130B4 ADD X10, X10, 0x10
	0x01D130B8 B.NE 0x1D130A4
	0x01D130BC MOV X0, X23
	0x01D130C0 MOV W2, W31
	0x01D130C4 BL 0x1BB4284
	0x01D130C8 B 0x1D130D8
	0x01D130CC LDRSW X9, [X10]
	0x01D130D0 ADD X8, X8, X9, 0x4, LSL
	0x01D130D4 ADD X0, X8, 0x138
	0x01D130D8 LDP X8, X1, [X0]
	0x01D130DC MOV X0, X23
	0x01D130E0 BLR X8
	0x01D130E4 CBNZ X24, 0x1D136D4
	0x01D130E8 CMP W22, 0x6
	0x01D130EC B.EQ 0x1D130F4
	0x01D130F0 CBNZ W22, 0x1D13610
	0x01D130F4 CBZ X20, 0x1D136DC
	0x01D130F8 LDR X0, [X20 + 0x20]
	0x01D130FC MOV X1, X31
	0x01D13100 BL 0x30905F0
	0x01D13104 TBNZ X0, 0x0, 0x1D13130
	0x01D13108 MOV X0, X21
	0x01D1310C MOV X1, X31
	0x01D13110 BL 0x345F958
	0x01D13114 CBZ X0, 0x1D1376C
	0x01D13118 ADRP X8, 0x223E000
	0x01D1311C LDR X2, [X20 + 0x20]
	0x01D13120 LDR X8, [X8 + 0x478]
	0x01D13124 LDR X1, [X8]
	0x01D13128 MOV X3, X31
	0x01D1312C BL 0x346C3E0
	0x01D13130 LDR X22, [X19 + 0x40]
	0x01D13134 CBZ X22, 0x1D1315C
	0x01D13138 ADRP X8, 0x223E000
	0x01D1313C LDR X8, [X8 + 0x3B8]
	0x01D13140 LDR X0, [X8]
	0x01D13144 BL 0x1B6EA0C
	0x01D13148 MOV X23, X0
	0x01D1314C MOV X1, X22
	0x01D13150 MOV X2, X31
	0x01D13154 BL 0x3462920
	0x01D13158 STR X23, [X21 + 0x38]
	0x01D1315C ADRP X24, 0x223E000
	0x01D13160 LDR X24, [X24 + 0x200]
	0x01D13164 LDR X0, [X24]
	0x01D13168 BL 0x1B6EA0C
	0x01D1316C MOV X23, X0
	0x01D13170 MOV X1, X31
	0x01D13174 BL 0x32493F8
	0x01D13178 CBZ X23, 0x1D136E0
	0x01D1317C MOV X0, X23
	0x01D13180 MOV X1, X31
	0x01D13184 BL 0x3249374
	0x01D13188 ADRP X8, 0x223C000
	0x01D1318C LDR X8, [X8 + 0x9A0]
	0x01D13190 MOV X22, X0
	0x01D13194 LDR W25, [X19 + 0x48]
	0x01D13198 LDR X0, [X8]
	0x01D1319C LDR W8, [X0 + 0xE0]
	0x01D131A0 CBNZ W8, 0x1D131A8
	0x01D131A4 BL 0x1B6E8F8
	0x01D131A8 SCVTF D0, W25
	0x01D131AC MOV X0, X31
	0x01D131B0 BL 0x31FDEAC
	0x01D131B4 MOV X1, X0
	0x01D131B8 MOV X0, X23
	0x01D131BC MOV X2, X31
	0x01D131C0 BL 0x3249758
	0x01D131C4 MOV X0, X19
	0x01D131C8 LDRB W8, [X0 + 0x50]!
	0x01D131CC CBZ W8, 0x1D1320C
	0x01D131D0 ADRP X8, 0x223E000
	0x01D131D4 LDR X8, [X8 + 0x420]
	0x01D131D8 LDR X1, [X8]
	0x01D131DC BL 0x22D0BB4
	0x01D131E0 MOV X23, X0
	0x01D131E4 LDR X0, [X24]
	0x01D131E8 LDR W8, [X0 + 0xE0]
	0x01D131EC CBNZ W8, 0x1D131F4
	0x01D131F0 BL 0x1B6E8F8
	0x01D131F4 MOV X0, X22
	0x01D131F8 MOV X1, X23
	0x01D131FC MOV X2, X31
	0x01D13200 BL 0x324A404
	0x01D13204 MOV X23, X0
	0x01D13208 B 0x1D13210
	0x01D1320C MOV X23, X31
	0x01D13210 LDR X24, [X20 + 0x18]
	0x01D13214 CBZ X24, 0x1D1332C
	0x01D13218 ADRP X8, 0x223A000
	0x01D1321C LDR X8, [X8 + 0x860]
	0x01D13220 LDR X0, [X8]
	0x01D13224 MOVZ W1, 0x3
	0x01D13228 BL 0x1B6E868
	0x01D1322C MOV X25, X0
	0x01D13230 CBZ X0, 0x1D1375C
	0x01D13234 LDR X26, [X19 + 0x28]
	0x01D13238 CBZ X26, 0x1D13250
	0x01D1323C LDR X8, [X25]
	0x01D13240 LDR X1, [X8 + 0x40]
	0x01D13244 MOV X0, X26
	0x01D13248 BL 0x1B6E8FC
	0x01D1324C CBZ X0, 0x1D13770
	0x01D13250 LDR W8, [X25 + 0x18]
	0x01D13254 CBZ W8, 0x1D13760
	0x01D13258 STR X26, [X25 + 0x20]
	0x01D1325C LDR X26, [X19 + 0x20]
	0x01D13260 CBZ X26, 0x1D1327C
	0x01D13264 LDR X8, [X25]
	0x01D13268 LDR X1, [X8 + 0x40]
	0x01D1326C MOV X0, X26
	0x01D13270 BL 0x1B6E8FC
	0x01D13274 CBZ X0, 0x1D1377C
	0x01D13278 LDR W8, [X25 + 0x18]
	0x01D1327C CMP W8, 0x1
	0x01D13280 B.LS 0x1D13764
	0x01D13284 STR X26, [X25 + 0x28]
	0x01D13288 LDR X26, [X19 + 0x40]
	0x01D1328C CBZ X26, 0x1D132A8
	0x01D13290 LDR X8, [X25]
	0x01D13294 LDR X1, [X8 + 0x40]
	0x01D13298 MOV X0, X26
	0x01D1329C BL 0x1B6E8FC
	0x01D132A0 CBZ X0, 0x1D13788
	0x01D132A4 LDR W8, [X25 + 0x18]
	0x01D132A8 CMP W8, 0x2
	0x01D132AC B.LS 0x1D13768
	0x01D132B0 STR X26, [X25 + 0x30]
	0x01D132B4 ADRP X9, 0x223E000
	0x01D132B8 LDR X8, [X24]
	0x01D132BC LDR X9, [X9 + 0x3F8]
	0x01D132C0 ADRP X10, 0x223E000
	0x01D132C4 LDR X1, [X9]
	0x01D132C8 LDR X10, [X10 + 0x460]
	0x01D132CC LDRH W9, [X8 + 0x12E]
	0x01D132D0 LDR X26, [X10]
	0x01D132D4 CBZ X9, 0x1D132F8
	0x01D132D8 LDR X10, [X8 + 0xB0]
	0x01D132DC ADD X10, X10, 0x8
	0x01D132E0 LDUR X11, [X10 - 0x8]
	0x01D132E4 CMP X11, X1
	0x01D132E8 B.EQ 0x1D13308
	0x01D132EC SUBS X9, X9, 0x1
	0x01D132F0 ADD X10, X10, 0x10
	0x01D132F4 B.NE 0x1D132E0
	0x01D132F8 MOVZ W2, 0x2
	0x01D132FC MOV X0, X24
	0x01D13300 BL 0x1BB4284
	0x01D13304 B 0x1D13318
	0x01D13308 LDR W9, [X10]
	0x01D1330C ADD W9, W9, 0x2
	0x01D13310 ADD X8, X8, W9, 0x4, SXTW
	0x01D13314 ADD X0, X8, 0x138
	0x01D13318 LDP X8, X3, [X0]
	0x01D1331C MOV X0, X24
	0x01D13320 MOV X1, X26
	0x01D13324 MOV X2, X25
	0x01D13328 BLR X8
	0x01D1332C LDR X24, [X20 + 0x10]
	0x01D13330 CBZ X23, 0x1D13344
	0x01D13334 MOV X0, X23
	0x01D13338 MOV X1, X31
	0x01D1333C BL 0x3249374
	0x01D13340 MOV X22, X0
	0x01D13344 CBZ X24, 0x1D136E4
	0x01D13348 LDR X8, [X24]
	0x01D1334C LDP X9, X3, [X8 + 0x198]
	0x01D13350 MOV X0, X24
	0x01D13354 MOV X1, X21
	0x01D13358 MOV X2, X22
	0x01D1335C BLR X9
	0x01D13360 CBZ X0, 0x1D136E8
	0x01D13364 ADRP X8, 0x223E000
	0x01D13368 LDR X8, [X8 + 0x450]
	0x01D1336C LDR X1, [X8]
	0x01D13370 BL 0x24F9364
	0x01D13374 ADRP X8, 0x223E000
	0x01D13378 LDR X8, [X8 + 0x438]
	0x01D1337C STR X0, [X31 + 0x28]
	0x01D13380 LDR X1, [X8]
	0x01D13384 ADD X0, X31, 0x28
	0x01D13388 BL 0x24D89E0
	0x01D1338C TBZ X0, 0x0, 0x1D13560
	0x01D13390 ADRP X8, 0x223E000
	0x01D13394 LDR X8, [X8 + 0x428]
	0x01D13398 ADD X0, X31, 0x28
	0x01D1339C LDR X1, [X8]
	0x01D133A0 BL 0x24D8A24
	0x01D133A4 STR X0, [X19 + 0x60]
	0x01D133A8 CBZ X0, 0x1D1369C
	0x01D133AC LDR X0, [X0 + 0x38]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x2512000
	009 Move W8, [X20+2007]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {44}
	015 Move X0, 0x223C000
	016 Move X0, [X0+1272]
	017 Call 0x1B6F7F0
	018 Move X0, 0x2240000
	019 Move X0, [X0+672]
	020 Call 0x1B6F7F0
	021 Move X0, 0x2240000
	022 Move X0, [X0+680]
	023 Call 0x1B6F7F0
	024 Move X0, 0x2240000
	025 Move X0, [X0+456]
	026 Call 0x1B6F7F0
	027 Move X0, 0x223C000
	028 Move X0, [X0+1160]
	029 Call 0x1B6F7F0
	030 Move X0, 0x223C000
	031 Move X0, [X0+3728]
	032 Call 0x1B6F7F0
	033 Move X0, 0x223C000
	034 Move X0, [X0+3736]
	035 Call 0x1B6F7F0
	036 Move X0, 0x223C000
	037 Move X0, [X0+3744]
	038 Call 0x1B6F7F0
	039 Move X0, 0x223C000
	040 Move X0, [X0+3680]
	041 Call 0x1B6F7F0
	042 Move W8, 1
	043 Move [X20+2007], W8
	044 Move [X31], X31
	045 Move [X31+8], X31
	046 Move W8, [X19]
	047 Compare W8, 0
	048 JumpIfEqual {57}
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X8, [X19+64]
	051 Move TEMP, 0
	052 Not TEMP
	053 Move W9, TEMP
	054 Move [X31], X8
	055 Move [X19+64], X31
	056 Move [X19], W9
	057 Move X8, [X19+56]
	058 Move TEMP, 0
	059 Not TEMP
	060 Move W9, TEMP
	061 Move [X31+8], X8
	062 Move [X19+56], X31
	063 Move [X19], W9
	064 Move X8, 0x223C000
	065 Move X8, [X8+1160]
	066 Move W20, [X19+40]
	067 Move X0, [X8]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1B6F8F8
	072 Move W8, 1000
	073 Multiply W1, W20, W8
	074 Move W0, 100
	075 Move X2, X31
	076 Call Math.Max, X0, X1
	077 Move X8, 0x223C000
	078 Move X8, [X8+3680]
	079 Move W20, W0
	080 Move X21, [X19+48]
	081 Move X0, [X8]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1B6F8F8
	086 Move W0, W20
	087 Move X1, X21
	088 Move X2, X31
	089 Call Task.Delay, X0, X1
	090 Compare X0, 0
	091 JumpIfEqual {223}
	092 Move X1, X31
	093 Call Task.GetAwaiter, X0
	094 Move [X31+8], X0
	095 Add X0, X31, 8
	096 Move X1, X31
	097 Call TaskAwaiter.get_IsCompleted, X0
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {152}
	102 Add X0, X31, 8
	103 Move X1, X31
	104 Call TaskAwaiter.GetResult, X0
	105 Move X22, 0x223B000
	106 Move X22, [X22+1272]
	107 Move X0, [X22]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {113}
	111 Call 0x1B6F8F8
	112 Move X0, [X22]
	113 Move X8, [X0+184]
	114 Move X23, 0x2511000
	115 Move W9, [X23+1093]
	116 Move X20, [X8+16]
	117 Compare W9, 0
	118 JumpIfNotEqual {126}
	119 Move X21, 0x223B000
	120 Move X21, [X21+1272]
	121 Move X0, X21
	122 Call 0x1B6F7F0
	123 Move X0, [X21]
	124 Move W8, 1
	125 Move [X23+1093], W8
	126 Move W8, [X0+224]
	127 Compare W8, 0
	128 JumpIfNotEqual {131}
	129 Call 0x1B6F8F8
	130 Move X0, [X22]
	131 Compare X20, 0
	132 JumpIfEqual {221}
	133 Move X10, 0x223F000
	134 Move X9, [X0+184]
	135 Move X8, [X20]
	136 Move X21, [X19+48]
	137 Move X10, [X10+456]
	138 Move X22, [X9+32]
	139 NotImplemented "Instruction LDRH not yet implemented."
	140 Move X1, [X10]
	141 Compare X9, 0
	142 JumpIfEqual {149}
	143 Move X10, [X8+176]
	144 Add X10, X10, 8
	145 NotImplemented "Instruction LDUR not yet implemented."
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Subtract X9, X9, 1
	148 Add X10, X10, 16
	149 Move W2, 78
	150 Move X0, X20
	151 Call 0x1BB5284
	152 Move [X19], W31
	153 Move X8, [X31+8]
	154 Add X0, X19, 8
	155 Move [X19+56], X8
	156 Move X8, 0x223F000
	157 Move X8, [X8+680]
	158 Move X3, [X8]
	159 Add X1, X31, 8
	160 Move X2, X19
	161 Call AsyncVoidMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	162 Move W9, [X10]
	163 Add W9, W9, 78
	164 Add X8, X8, W9
	165 Add X0, X8, 312
	166 Move X8, [X0]
	167 Move X5, [X0+8]
	168 Move X0, X20
	169 Move X1, X22
	170 Move X2, X31
	171 Move X3, X31
	172 Move X4, X21
	173 NotImplemented "Instruction BLR not yet implemented."
	174 Compare X0, 0
	175 JumpIfEqual {222}
	176 Move X8, 0x223B000
	177 Move X8, [X8+3744]
	178 Move X1, [X8]
	179 Call Task`1<Object>.GetAwaiter, X0
	180 Move X8, 0x223B000
	181 Move X8, [X8+3736]
	182 Move [X31], X0
	183 Move X1, [X8]
	184 Add X0, X31, 0
	185 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {202}
	190 Move X8, 0x223B000
	191 Move X8, [X8+3728]
	192 Add X0, X31, 0
	193 Move X1, [X8]
	194 Call TaskAwaiter`1<Object>.GetResult, X0
	195 Move TEMP, 1
	196 Not TEMP
	197 Move W8, TEMP
	198 Move [X19+8], W8
	199 Move X0, X19
	200 Move X1, X31
	201 Call AsyncVoidMethodBuilder.SetResult, X0
	202 Move W8, 1
	203 Move [X19], W8
	204 Move X8, [X31]
	205 Add X0, X19, 8
	206 Move [X19+64], X8
	207 Move X8, 0x223F000
	208 Move X8, [X8+672]
	209 Move X3, [X8]
	210 Add X1, X31, 0
	211 Move X2, X19
	212 Call AsyncVoidMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	213 Move X20, [X31+48]
	214 Move X19, [X31+56]
	215 Move X22, [X31+32]
	216 Move X21, [X31+40]
	217 Move X30, [X31+16]
	218 Move X23, [X31+24]
	219 Add X31, X31, 64
	220 Return 
	221 Call 0x1B6FA1C
	222 Call 0x1B6FA1C
	223 Call 0x1B6FA1C
	224 Move X20, X0
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move X0, X20
	227 Call 0x3D1A840
	228 Move X20, X0
	229 Move X0, 0x223B000
	230 Move X0, [X0+1648]
	231 Call 0x1B6F804
	232 Move X8, [X20]
	233 Move X1, [X8]
	234 Call 0x1B6FD6C
	235 Move TEMP, X0
	236 And TEMP, TEMP, 1
	237 Compare TEMP, 1
	238 JumpIfNotEqual {281}
	239 Move X20, [X20]
	240 Call 0x3D1A850
	241 Move X0, 0x223B000
	242 Move X0, [X0+3784]
	243 Call 0x1B6F804
	244 Compare X20, 0
	245 JumpIfEqual {254}
	246 Move X8, [X20]
	247 Move W9, [X0+304]
	248 Move W10, [X8+304]
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Move X8, [X8+200]
	251 Add X8, X8, X9
	252 NotImplemented "Instruction LDUR not yet implemented."
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Move X0, 0x223B000
	255 Move X0, [X0+1576]
	256 Call 0x1B6F804
	257 Move W8, [X0+224]
	258 Compare W8, 0
	259 JumpIfNotEqual {261}
	260 Call 0x1B6F8F8
	261 Move X0, 0x223F000
	262 Move X0, [X0+688]
	263 Call 0x1B6F804
	264 Move X21, X0
	265 Move X0, 0x223F000
	266 Move X0, [X0+544]
	267 Call 0x1B6F804
	268 Move X22, X0
	269 Move X0, 0x223F000
	270 Move X0, [X0+696]
	271 Call 0x1B6F804
	272 Move X5, X0
	273 Move W0, 64
	274 Move W6, 107
	275 Move X1, X21
	276 Move X2, X20
	277 Move X3, X31
	278 Move X4, X22
	279 Move X7, X31
	280 Call Log.Error, X0, X1, X2, X3, X4, X5, X6
	281 Move W0, 8
	282 Call 0x3D1A860
	283 Move X8, [X20]
	284 Move [X0], X8
	285 Move X1, 0x200A000
	286 Add X1, X1, 3032
	287 Move X2, X31
	288 Call 0x3D1A870
	289 Move X20, X0
	290 Move X21, X1
	291 Move X20, X0
	292 Call 0x3D1A850
	293 Move W1, W21
	294 Move X20, X0
	295 Move W8, 1
	296 NotImplemented "Instruction CMP not yet implemented."
	297 Move X0, X20
	298 Call 0x3D1A840
	299 Move X20, X0
	300 Move X0, 0x223B000
	301 Move X0, [X0+1648]
	302 Call 0x1B6F804
	303 Move X8, [X20]
	304 Move X1, [X8]
	305 Call 0x1B6FD6C
	306 Move TEMP, X0
	307 And TEMP, TEMP, 1
	308 Compare TEMP, 1
	309 JumpIfNotEqual {320}
	310 Move X20, [X20]
	311 Call 0x3D1A850
	312 Move TEMP, 1
	313 Not TEMP
	314 Move W8, TEMP
	315 Move [X19+8], W8
	316 Move X0, X19
	317 Move X1, X20
	318 Move X2, X31
	319 Call AsyncVoidMethodBuilder.SetException, X0, X1
	320 Move W0, 8
	321 Call 0x3D1A860
	322 Move X8, [X20]
	323 Move [X0], X8
	324 Move X1, 0x200A000
	325 Add X1, X1, 3032
	326 Move X2, X31
	327 Call 0x3D1A870
	328 Move X20, X0
	329 Call 0x3D1A850
	330 Move X0, X20
	331 Call 0x1C8518C
	332 Call 0x18F56A8

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x01D133B0 CBZ X0, 0x1D136A0
	0x01D133B4 MOV X1, X31
	0x01D133B8 BL 0x3463E38

ISIL:
	001 Add X0, X0, 8
	002 Move X2, X31
	003 Call AsyncVoidMethodBuilder.SetStateMachine, X0, X1
	004 Return 

