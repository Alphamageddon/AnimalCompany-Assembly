Type: AnimalCompany.KillPlayerTrigger

Method: System.Void Update()

Disassembly:
	0x01CF32D8 LDRB W9, [X22 + 0x456]
	0x01CF32DC LDR X8, [X21]
	0x01CF32E0 LDR X8, [X8 + 0xB8]
	0x01CF32E4 LDR V9, [X8]
	0x01CF32E8 LDR V8, [X8 + 0x8]
	0x01CF32EC CBNZ W9, 0x1CF3308
	0x01CF32F0 MOV X0, X21
	0x01CF32F4 BL 0x1B6E7F0
	0x01CF32F8 LDR X8, [X21]
	0x01CF32FC MOVZ W9, 0x1
	0x01CF3300 STRB W9, [X22 + 0x456]
	0x01CF3304 LDR X8, [X8 + 0xB8]
	0x01CF3308 CBZ X20, 0x1CF338C
	0x01CF330C ADRP X9, 0xFFFFFFFFFEDB6000
	0x01CF3310 LDR V0, [X8 + 0x14]
	0x01CF3314 LDUR V2, [X8 + 0xC]
	0x01CF3318 LDR V3, [X9 + 0xB68]
	0x01CF331C MOVZ W8, 0x4000
	0x01CF3320 MOVK W8, 0x461C0000
	0x01CF3324 UNIMPLEMENTED
	0x01CF3328 FMOV S1, 0.5
	0x00000000 INVALID
	0x01CF3330 MOVI V4.2S, 0x3F, 0x18
	0x01CF3334 FMUL S0, S0, S3
	0x00000000 INVALID
	0x01CF333C FMUL S0, S0, S1
	0x01CF3340 ADD X1, X31, 0x8
	0x01CF3344 MOV X0, X20
	0x01CF3348 MOV X2, X31
	0x01CF334C STR D9, [X31 + 0x8]
	0x01CF3350 STR S8, [X31 + 0x10]
	0x01CF3354 STUR D2, [X31 + 0x14]
	0x01CF3358 STR S0, [X31 + 0x1C]
	0x01CF335C BL 0x3A800A8
	0x01CF3360 LDR X0, [X19 + 0x20]
	0x01CF3364 CBZ X0, 0x1CF338C
	0x01CF3368 MOV X1, X20
	0x01CF336C MOV X2, X31
	0x01CF3370 BL 0x3A7F5EC
	0x01CF3374 LDP X20, X19, [X31 + 0x50]
	0x01CF3378 LDP X22, X21, [X31 + 0x40]
	0x01CF337C LDR X30, [X31 + 0x30]
	0x01CF3380 LDP D9, D8, [X31 + 0x20]
	0x01CF3384 ADD X31, X31, 0x60
	0x01CF3388 RET
	0x01CF338C BL 0x1B6EA1C
	0x01CF3390 MOV X1, X31
	0x01CF3394 B 0x3A9EEE4
	0x01CF3398 STP X30, X21, [X31 - 0x20]!
	0x01CF339C STP X20, X19, [X31 + 0x10]
	0x01CF33A0 ADRP X20, 0x2530000
	0x01CF33A4 ADRP X21, 0x225D000
	0x01CF33A8 LDRB W8, [X20 + 0x6D8]
	0x01CF33AC LDR X21, [X21 + 0x6B8]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2531000
	006 Move W8, [X20+1734]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x225E000
	013 Move X0, [X0+1552]
	014 Call 0x1B6F7F0
	015 Move W8, 1
	016 Move [X20+1734], W8
	017 Move W8, [X19+40]
	018 Compare W8, 0
	019 JumpIfEqual {27}
	020 Move V8, [X19+48]
	021 Move X0, X31
	022 Call Time.get_deltaTime
	023 Move V1, [X19+44]
	024 Add S0, S8, S0
	025 Move [X19+48], S0
	026 NotImplemented "Instruction FCMP not yet implemented."
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+8]
	030 Move V8, [X31+32]
	031 Return 
	032 Move [X19+48], W31
	033 Move [X19+40], W31
	034 Move X20, 0x2531000
	035 Move W8, [X20+1289]
	036 Compare W8, 0
	037 JumpIfNotEqual {43}
	038 Move X0, 0x225C000
	039 Move X0, [X0+2688]
	040 Call 0x1B6F7F0
	041 Move W8, 1
	042 Move [X20+1289], W8
	043 Move X8, 0x225C000
	044 Move X8, [X8+2688]
	045 Move X8, [X8]
	046 Move X8, [X8+184]
	047 Move X8, [X8]
	048 Compare X8, 0
	049 JumpIfEqual {64}
	050 Move X0, [X8+32]
	051 Compare X0, 0
	052 JumpIfEqual {64}
	053 Move X8, 0x225E000
	054 Move X1, [X19+32]
	055 Move X8, [X8+1552]
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+8]
	059 Move X3, X31
	060 Move X2, [X8]
	061 Move V8, [X31+32]
	062 Call PlayerController.PlayerDie, X0, X1, X2
	063 Return 
	064 Call 0x1B6FA1C

Method: System.Void OnTriggerEnter(UnityEngine.Collider other)

Disassembly:
	0x01CF33B0 MOV X19, X0
	0x01CF33B4 TBNZ X8, 0x0, 0x1CF33CC
	0x01CF33B8 ADRP X0, 0x225D000
	0x01CF33BC LDR X0, [X0 + 0x6B8]
	0x01CF33C0 BL 0x1B6E7F0
	0x01CF33C4 MOVZ W8, 0x1
	0x01CF33C8 STRB W8, [X20 + 0x6D8]
	0x01CF33CC LDR X8, [X21]
	0x01CF33D0 MOV X0, X19
	0x01CF33D4 MOV X1, X31
	0x01CF33D8 STR X8, [X19 + 0x20]
	0x01CF33DC LDP X20, X19, [X31 + 0x10]
	0x01CF33E0 LDP X30, X21, [X31], #0x20
	0x01CF33E4 B 0x3A9EEE4
	0x01CF33E8 STP X30, X23, [X31 - 0x30]!
	0x01CF33EC STP X22, X21, [X31 + 0x10]
	0x01CF33F0 STP X20, X19, [X31 + 0x20]
	0x01CF33F4 ADRP X21, 0x2530000
	0x01CF33F8 ADRP X20, 0x225D000
	0x01CF33FC LDRB W8, [X21 + 0x6D9]
	0x01CF3400 LDR X20, [X20 + 0x6C0]
	0x01CF3404 MOV X19, X0
	0x01CF3408 TBNZ X8, 0x0, 0x1CF3444
	0x01CF340C ADRP X0, 0x225B000
	0x01CF3410 LDR X0, [X0 + 0x168]
	0x01CF3414 BL 0x1B6E7F0
	0x01CF3418 ADRP X0, 0x225A000
	0x01CF341C LDR X0, [X0 + 0xF78]
	0x01CF3420 BL 0x1B6E7F0
	0x01CF3424 ADRP X0, 0x225D000
	0x01CF3428 LDR X0, [X0 + 0x6C8]
	0x01CF342C BL 0x1B6E7F0
	0x01CF3430 ADRP X0, 0x225D000
	0x01CF3434 LDR X0, [X0 + 0x6C0]
	0x01CF3438 BL 0x1B6E7F0
	0x01CF343C MOVZ W8, 0x1
	0x01CF3440 STRB W8, [X21 + 0x6D9]
	0x01CF3444 LDR X8, [X20]
	0x01CF3448 ADRP X20, 0x2530000
	0x01CF344C ADRP X22, 0x225A000
	0x01CF3450 LDR X8, [X8 + 0xB8]
	0x01CF3454 STR X19, [X8]
	0x01CF3458 LDRB W8, [X20 + 0x508]
	0x01CF345C LDR X22, [X22 + 0xF78]
	0x01CF3460 CBNZ W8, 0x1CF3478
	0x01CF3464 ADRP X0, 0x225A000
	0x01CF3468 LDR X0, [X0 + 0xF78]
	0x01CF346C BL 0x1B6E7F0
	0x01CF3470 MOVZ W8, 0x1
	0x01CF3474 STRB W8, [X20 + 0x508]
	0x01CF3478 LDR X8, [X22]
	0x01CF347C LDR X8, [X8 + 0xB8]
	0x01CF3480 LDR X9, [X8 + 0x40]
	0x01CF3484 CBZ X9, 0x1CF348C
	0x01CF3488 LDR X9, [X9 + 0x98]
	0x01CF348C CBZ X19, 0x1CF3534
	0x01CF3490 ADRP X23, 0x225B000
	0x01CF3494 LDR X23, [X23 + 0x168]
	0x01CF3498 STR X9, [X19 + 0x48]
	0x01CF349C ADRP X21, 0x225D000
	0x01CF34A0 LDR X20, [X8 + 0x18]
	0x01CF34A4 LDR X0, [X23]
	0x01CF34A8 LDR X21, [X21 + 0x6C8]
	0x01CF34AC BL 0x1B6EA0C
	0x01CF34B0 LDR X2, [X21]
	0x01CF34B4 MOV X1, X19
	0x01CF34B8 MOV X3, X31
	0x01CF34BC MOV X21, X0
	0x01CF34C0 BL 0x27EC49C
	0x01CF34C4 MOV X0, X20
	0x01CF34C8 MOV X1, X21
	0x01CF34CC MOV X2, X31
	0x01CF34D0 BL 0x322A750
	0x01CF34D4 CBZ X0, 0x1CF3518
	0x01CF34D8 LDR X20, [X23]
	0x01CF34DC MOV X19, X0
	0x01CF34E0 MOV X1, X20
	0x01CF34E4 BL 0x1B6E8FC
	0x01CF34E8 CBZ X0, 0x1CF350C
	0x01CF34EC LDR X8, [X22]
	0x01CF34F0 LDR X8, [X8 + 0xB8]
	0x01CF34F4 STR X0, [X8 + 0x18]
	0x01CF34F8 LDR X20, [X23]
	0x01CF34FC MOV X0, X19
	0x01CF3500 MOV X1, X20
	0x01CF3504 BL 0x1B6E8FC
	0x01CF3508 CBNZ X0, 0x1CF3524
	0x01CF350C MOV X0, X19
	0x01CF3510 MOV X1, X20
	0x01CF3514 BL 0x1B6ECDC
	0x01CF3518 LDR X8, [X22]
	0x01CF351C LDR X8, [X8 + 0xB8]
	0x01CF3520 STR X31, [X8 + 0x18]
	0x01CF3524 LDP X20, X19, [X31 + 0x20]
	0x01CF3528 LDP X22, X21, [X31 + 0x10]
	0x01CF352C LDP X30, X23, [X31], #0x30
	0x01CF3530 RET
	0x01CF3534 BL 0x1B6EA1C
	0x01CF3538 STR X1, [X0 + 0x48]
	0x01CF353C RET
	0x01CF3540 STR D14, [X31 - 0x50]!
	0x01CF3544 STP D13, D12, [X31 + 0x8]
	0x01CF3548 STP D11, D10, [X31 + 0x18]
	0x01CF354C STP D9, D8, [X31 + 0x28]
	0x01CF3550 STR X30, [X31 + 0x38]
	0x01CF3554 STP X20, X19, [X31 + 0x40]
	0x01CF3558 ADRP X20, 0x2530000
	0x01CF355C LDRB W8, [X20 + 0x508]
	0x01CF3560 MOV V8.16B, V6.16B
	0x01CF3564 MOV V9.16B, V5.16B
	0x01CF3568 MOV V10.16B, V4.16B
	0x01CF356C MOV V11.16B, V3.16B
	0x01CF3570 MOV V12.16B, V2.16B
	0x01CF3574 MOV V13.16B, V1.16B
	0x01CF3578 MOV V14.16B, V0.16B
	0x01CF357C MOV W19, W0
	0x01CF3580 CBNZ W8, 0x1CF3598
	0x01CF3584 ADRP X0, 0x225A000
	0x01CF3588 LDR X0, [X0 + 0xF78]
	0x01CF358C BL 0x1B6E7F0
	0x01CF3590 MOVZ W8, 0x1
	0x01CF3594 STRB W8, [X20 + 0x508]
	0x01CF3598 ADRP X8, 0x225A000
	0x01CF359C LDR X8, [X8 + 0xF78]
	0x01CF35A0 LDR X8, [X8]
	0x01CF35A4 LDR X8, [X8 + 0xB8]
	0x01CF35A8 LDR X8, [X8 + 0x40]
	0x01CF35AC CBZ X8, 0x1CF35F0
	0x01CF35B0 LDR X0, [X8 + 0x98]
	0x01CF35B4 MOV W1, W19
	0x01CF35B8 MOV V1.16B, V13.16B
	0x01CF35BC MOV V2.16B, V12.16B
	0x01CF35C0 MOV V3.16B, V11.16B
	0x01CF35C4 MOV V4.16B, V10.16B
	0x01CF35C8 MOV V5.16B, V9.16B
	0x01CF35CC MOV V6.16B, V8.16B
	0x01CF35D0 LDP X20, X19, [X31 + 0x40]
	0x01CF35D4 LDR X30, [X31 + 0x38]
	0x01CF35D8 LDP D9, D8, [X31 + 0x28]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0x2531000
	007 Move W8, [X21+1735]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {37}
	014 Move X0, 0x225D000
	015 Move X0, [X0+3160]
	016 Call 0x1B6F7F0
	017 Move X0, 0x225C000
	018 Move X0, [X0+2584]
	019 Call 0x1B6F7F0
	020 Move X0, 0x225C000
	021 Move X0, [X0+2592]
	022 Call 0x1B6F7F0
	023 Move X0, 0x225C000
	024 Move X0, [X0+2600]
	025 Call 0x1B6F7F0
	026 Move X0, 0x225C000
	027 Move X0, [X0+2608]
	028 Call 0x1B6F7F0
	029 Move X0, 0x225C000
	030 Move X0, [X0+1056]
	031 Call 0x1B6F7F0
	032 Move X0, 0x225D000
	033 Move X0, [X0+2432]
	034 Call 0x1B6F7F0
	035 Move W8, 1
	036 Move [X21+1735], W8
	037 Move [X31+32], X31
	038 Move [X31+40], X31
	039 Move [X31+8], X31
	040 Move [X31+16], X31
	041 Move [X31+24], X31
	042 Compare X19, 0
	043 JumpIfEqual {136}
	044 Move X8, 0x225D000
	045 Move X8, [X8+2432]
	046 Move X0, X19
	047 Move X2, X31
	048 Move X1, [X8]
	049 Call Component.CompareTag, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {57}
	054 Move W8, 1
	055 Move [X20+40], W8
	056 Move [X20+48], W31
	057 Add X1, X31, 40
	058 Move X0, X19
	059 Call TriggerUtilities.TryGetItemFromCollider, X0, X1
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {129}
	064 Move X19, [X31+40]
	065 Compare X19, 0
	066 JumpIfEqual {136}
	067 Move X8, 0x225C000
	068 Move X8, [X8+1056]
	069 Move X0, X19
	070 Move X2, X31
	071 Move X1, [X8]
	072 Call Component.CompareTag, X0, X1
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {126}
	077 Move X8, 0x225D000
	078 Move X8, [X8+3160]
	079 Add X1, X31, 32
	080 Move X0, X19
	081 Move X2, [X8]
	082 Call 0x2091EE4, X0, X1
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {126}
	087 Move X0, [X31+32]
	088 Compare X0, 0
	089 JumpIfEqual {136}
	090 Move X1, X31
	091 Call InventoryBag.GetContainedItems, X0
	092 Move X8, [X31+32]
	093 Compare X8, 0
	094 JumpIfEqual {136}
	095 Move X20, X0
	096 Move X0, X8
	097 Move X1, X31
	098 Call InventoryBag.EmptyContents, X0
	099 Compare X20, 0
	100 JumpIfEqual {136}
	101 Move X8, 0x225C000
	102 Move X8, [X8+2608]
	103 Move X0, X20
	104 Move X1, [X8]
	105 Add X8, X31, 8
	106 Call List`1<Object>.GetEnumerator, X0
	107 Move X20, 0x225C000
	108 Move X20, [X20+2592]
	109 Move X1, [X20]
	110 Add X0, X31, 8
	111 Call Enumerator<Object>.MoveNext, X0
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {121}
	116 Move X0, [X31+24]
	117 Compare X0, 0
	118 JumpIfEqual {135}
	119 Move X1, X31
	120 Call GrabbableItem.RespawnOrDespawn, X0
	121 Move X8, 0x225C000
	122 Move X8, [X8+2584]
	123 Add X0, X31, 8
	124 Move X1, [X8]
	125 Call Enumerator<Object>.Dispose, X0
	126 Move X0, X19
	127 Move X1, X31
	128 Call GrabbableItem.RespawnOrDespawn, X0
	129 Move X20, [X31+64]
	130 Move X19, [X31+72]
	131 Move X30, [X31+48]
	132 Move X21, [X31+56]
	133 Add X31, X31, 80
	134 Return 
	135 Call 0x1B6FA1C
	136 Call 0x1B6FA1C
	137 Move X20, X0
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X0, X20
	140 Call 0x3D1A840
	141 Move X21, [X0]
	142 Call 0x3D1A850
	143 Move X8, 0x225C000
	144 Move X8, [X8+2584]
	145 Add X0, X31, 8
	146 Move X1, [X8]
	147 Call Enumerator<Object>.Dispose, X0
	148 Compare X21, 0
	149 JumpIfEqual {126}
	150 Move X0, X21
	151 Call 0x1B6FA14
	152 Move X21, X31
	153 Move X20, X0
	154 Move X8, 0x225C000
	155 Move X8, [X8+2584]
	156 Move X1, [X8]
	157 Add X0, X31, 8
	158 Call Enumerator<Object>.Dispose, X0
	159 Compare X21, 0
	160 JumpIfNotEqual {163}
	161 Move X0, X20
	162 Call 0x1C8518C
	163 Move X0, X21
	164 Call 0x1B6FA14
	165 Call 0x18F56A8

Method: System.Void OnTriggerExit(UnityEngine.Collider other)

Disassembly:
	0x01CF36C4 LDR X8, [X8 + 0x6C0]
	0x01CF36C8 LDR X8, [X8]
	0x01CF36CC LDR X8, [X8 + 0xB8]
	0x01CF36D0 LDR X8, [X8]
	0x01CF36D4 CBZ X8, 0x1CF3844
	0x01CF36D8 LDR X0, [X8 + 0x50]
	0x01CF36DC CBZ X0, 0x1CF3844
	0x01CF36E0 ADRP X8, 0x225D000
	0x01CF36E4 LDR X8, [X8 + 0x6D0]
	0x01CF36E8 ADD X2, X31, 0x8
	0x01CF36EC MOV W1, W19
	0x01CF36F0 LDR X3, [X8]
	0x01CF36F4 BL 0x2470894
	0x01CF36F8 TBZ X0, 0x0, 0x1CF377C
	0x01CF36FC LDR X0, [X31 + 0x8]
	0x01CF3700 CBZ X0, 0x1CF3844
	0x01CF3704 MOV X1, X31
	0x01CF3708 BL 0x3A9B084
	0x01CF370C CBZ X0, 0x1CF3844
	0x01CF3710 MOV V0.16B, V14.16B
	0x01CF3714 MOV V1.16B, V13.16B
	0x01CF3718 MOV V2.16B, V12.16B
	0x01CF371C MOV X1, X31
	0x01CF3720 BL 0x3AA76F8
	0x01CF3724 LDR X0, [X31 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2531000
	006 Move W8, [X21+1736]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x225D000
	014 Move X0, [X0+2432]
	015 Call 0x1B6F7F0
	016 Move W8, 1
	017 Move [X21+1736], W8
	018 Compare X20, 0
	019 JumpIfEqual {36}
	020 Move X8, 0x225D000
	021 Move X8, [X8+2432]
	022 Move X0, X20
	023 Move X2, X31
	024 Move X1, [X8]
	025 Call Component.CompareTag, X0, X1
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {31}
	030 Move [X19+40], W31
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 
	036 Call 0x1B6FA1C

Method: System.Void .ctor()

Disassembly:
	0x01CF3728 CBZ X0, 0x1CF3844
	0x01CF372C MOV X1, X31
	0x01CF3730 BL 0x3A9B084
	0x01CF3734 CBZ X0, 0x1CF3844
	0x01CF3738 MOV V0.16B, V11.16B

ISIL:
	001 Move W8, 0xD70A
	002 NotImplemented "Instruction MOVK not yet implemented."
	003 Move X1, X31
	004 Move [X0+44], W8
	005 Call MonoBehaviour..ctor, X0
	006 Return 

