Type: AnimalCompany.KillPlayerTrigger

Method: System.Void Update()

Disassembly:
	0x01E03718 MOV X19, X0
	0x01E0371C BL 0x2AA4804
	0x01E03720 LDR X8, [X20]
	0x01E03724 LDP X22, X21, [X31 + 0x10]
	0x01E03728 LDR X8, [X8 + 0xB8]
	0x01E0372C STR X19, [X8]
	0x01E03730 LDP X20, X19, [X31 + 0x20]
	0x01E03734 LDR X30, [X31], #0x30
	0x01E03738 RET
	0x01E0373C STP X30, X21, [X31 - 0x20]!
	0x01E03740 STP X20, X19, [X31 + 0x10]
	0x01E03744 ADRP X21, 0x25D5000
	0x01E03748 ADRP X20, 0x22F6000
	0x01E0374C LDRB W8, [X21 + 0xD83]
	0x01E03750 LDR X20, [X20 + 0x7C0]
	0x01E03754 MOV X19, X0
	0x01E03758 TBNZ X8, 0x0, 0x1E0377C
	0x01E0375C ADRP X0, 0x22F6000
	0x01E03760 LDR X0, [X0 + 0x818]
	0x01E03764 BL 0x1C16CF4
	0x01E03768 ADRP X0, 0x22F6000
	0x01E0376C LDR X0, [X0 + 0x7C0]
	0x01E03770 BL 0x1C16CF4
	0x01E03774 MOVZ W8, 0x1
	0x01E03778 STRB W8, [X21 + 0xD83]
	0x01E0377C LDR X0, [X20]
	0x01E03780 LDR W8, [X0 + 0xE0]
	0x01E03784 CBNZ W8, 0x1E03790
	0x01E03788 BL 0x1C16DFC
	0x01E0378C LDR X0, [X20]
	0x01E03790 LDR X8, [X0 + 0xB8]
	0x01E03794 LDR X0, [X8]
	0x01E03798 CBZ X0, 0x1E03804
	0x01E0379C ADRP X9, 0x22F6000
	0x01E037A0 LDR X9, [X9 + 0x818]
	0x01E037A4 LDR W10, [X0 + 0x1C]
	0x01E037A8 LDR X8, [X0 + 0x10]
	0x01E037AC LDR X9, [X9]
	0x01E037B0 ADD W10, W10, 0x1
	0x01E037B4 STR W10, [X0 + 0x1C]
	0x01E037B8 CBZ X8, 0x1E03804
	0x01E037BC LDRSW X10, [X0 + 0x18]
	0x01E037C0 LDR W11, [X8 + 0x18]
	0x01E037C4 CMP W10, W11
	0x01E037C8 B.CS 0x1E037E8
	0x01E037CC ADD W9, W10, 0x1
	0x01E037D0 ADD X8, X8, X10, 0x3, LSL
	0x01E037D4 STR W9, [X0 + 0x18]
	0x01E037D8 STR X19, [X8 + 0x20]
	0x01E037DC LDP X20, X19, [X31 + 0x10]
	0x01E037E0 LDP X30, X21, [X31], #0x20
	0x01E037E4 RET
	0x01E037E8 LDR X8, [X9 + 0x20]
	0x01E037EC MOV X1, X19

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x25D6000
	006 Move W8, [X20+3445]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22F7000
	013 Move X0, [X0+1928]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3445], W8
	017 Move W8, [X19+40]
	018 Compare W8, 0
	019 JumpIfEqual {27}
	020 Move V8, [X19+48]
	021 Move X0, X31
	022 Call Time.get_deltaTime
	023 Move V1, [X19+44]
	024 Add S0, S8, S0
	025 Move [X19+48], S0
	026 NotImplemented "Instruction FCMP not yet implemented."
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+8]
	030 Move V8, [X31+32]
	031 Return 
	032 Move [X19+48], W31
	033 Move [X19+40], W31
	034 Move X20, 0x25D6000
	035 Move W8, [X20+1938]
	036 Compare W8, 0
	037 JumpIfNotEqual {43}
	038 Move X0, 0x22F2000
	039 Move X0, [X0+1440]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X20+1938], W8
	043 Move X8, 0x22F2000
	044 Move X8, [X8+1440]
	045 Move X8, [X8]
	046 Move X8, [X8+184]
	047 Move X8, [X8]
	048 Compare X8, 0
	049 JumpIfEqual {64}
	050 Move X0, [X8+32]
	051 Compare X0, 0
	052 JumpIfEqual {64}
	053 Move X8, 0x22F7000
	054 Move X1, [X19+32]
	055 Move X8, [X8+1928]
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+8]
	059 Move X3, X31
	060 Move X2, [X8]
	061 Move V8, [X31+32]
	062 Call PlayerController.PlayerDie, X0, X1, X2
	063 Return 
	064 Call 0x1C17F20

Method: System.Void OnTriggerEnter(UnityEngine.Collider other)

Disassembly:
	0x01E037F0 LDP X20, X19, [X31 + 0x10]
	0x01E037F4 LDR X8, [X8 + 0xC0]
	0x01E037F8 LDR X2, [X8 + 0x70]
	0x01E037FC LDP X30, X21, [X31], #0x20
	0x01E03800 B 0x301BF90
	0x01E03804 BL 0x1C16F20
	0x01E03808 STP X30, X21, [X31 - 0x20]!
	0x01E0380C STP X20, X19, [X31 + 0x10]
	0x01E03810 ADRP X21, 0x25D5000
	0x01E03814 ADRP X20, 0x22F6000
	0x01E03818 LDRB W8, [X21 + 0xD84]
	0x01E0381C LDR X20, [X20 + 0x7C0]
	0x01E03820 MOV X19, X0
	0x01E03824 TBNZ X8, 0x0, 0x1E03848
	0x01E03828 ADRP X0, 0x22F6000
	0x01E0382C LDR X0, [X0 + 0x820]
	0x01E03830 BL 0x1C16CF4
	0x01E03834 ADRP X0, 0x22F6000
	0x01E03838 LDR X0, [X0 + 0x7C0]
	0x01E0383C BL 0x1C16CF4
	0x01E03840 MOVZ W8, 0x1
	0x01E03844 STRB W8, [X21 + 0xD84]
	0x01E03848 LDR X0, [X20]
	0x01E0384C LDR W8, [X0 + 0xE0]
	0x01E03850 CBNZ W8, 0x1E0385C
	0x01E03854 BL 0x1C16DFC
	0x01E03858 LDR X0, [X20]
	0x01E0385C LDR X8, [X0 + 0xB8]
	0x01E03860 LDR X0, [X8]
	0x01E03864 CBZ X0, 0x1E03884
	0x01E03868 ADRP X8, 0x22F6000
	0x01E0386C LDR X8, [X8 + 0x820]
	0x01E03870 MOV X1, X19
	0x01E03874 LDP X20, X19, [X31 + 0x10]
	0x01E03878 LDR X2, [X8]
	0x01E0387C LDP X30, X21, [X31], #0x20
	0x01E03880 B 0x301D7A8
	0x01E03884 BL 0x1C16F20
	0x01E03888 STR X30, [X31 - 0x30]!
	0x01E0388C STP X22, X21, [X31 + 0x10]
	0x01E03890 STP X20, X19, [X31 + 0x20]
	0x01E03894 ADRP X21, 0x25D5000
	0x01E03898 ADRP X22, 0x22F6000
	0x01E0389C ADRP X19, 0x22F6000
	0x01E038A0 ADRP X20, 0x22F6000
	0x01E038A4 LDRB W8, [X21 + 0xD86]
	0x01E038A8 LDR X22, [X22 + 0x828]
	0x01E038AC LDR X19, [X19 + 0x830]
	0x01E038B0 LDR X20, [X20 + 0x7C0]
	0x01E038B4 TBNZ X8, 0x0, 0x1E038E4
	0x01E038B8 ADRP X0, 0x22F6000
	0x01E038BC LDR X0, [X0 + 0x830]
	0x01E038C0 BL 0x1C16CF4
	0x01E038C4 ADRP X0, 0x22F6000
	0x01E038C8 LDR X0, [X0 + 0x828]
	0x01E038CC BL 0x1C16CF4
	0x01E038D0 ADRP X0, 0x22F6000
	0x01E038D4 LDR X0, [X0 + 0x7C0]
	0x01E038D8 BL 0x1C16CF4
	0x01E038DC MOVZ W8, 0x1
	0x01E038E0 STRB W8, [X21 + 0xD86]
	0x01E038E4 LDR X0, [X22]
	0x01E038E8 BL 0x1C16F10
	0x01E038EC LDR X1, [X19]
	0x01E038F0 MOV X19, X0
	0x01E038F4 BL 0x301B7C4
	0x01E038F8 LDR X8, [X20]
	0x01E038FC LDP X22, X21, [X31 + 0x10]
	0x01E03900 MOVZ W9, 0x40A00000
	0x01E03904 LDR X8, [X8 + 0xB8]
	0x01E03908 STR X19, [X8]
	0x01E0390C LDR X8, [X20]
	0x01E03910 LDP X20, X19, [X31 + 0x20]
	0x01E03914 LDR X8, [X8 + 0xB8]
	0x01E03918 STR W9, [X8 + 0x8]
	0x01E0391C LDR X30, [X31], #0x30
	0x01E03920 RET
	0x01E03924 STR X30, [X31 - 0x20]!
	0x01E03928 STP X20, X19, [X31 + 0x10]
	0x01E0392C ADRP X19, 0x25D5000
	0x01E03930 ADRP X20, 0x22F6000
	0x01E03934 LDRB W8, [X19 + 0xD87]
	0x01E03938 LDR X20, [X20 + 0x7C0]
	0x01E0393C TBNZ X8, 0x0, 0x1E03954
	0x01E03940 ADRP X0, 0x22F6000
	0x01E03944 LDR X0, [X0 + 0x7C0]
	0x01E03948 BL 0x1C16CF4
	0x01E0394C MOVZ W8, 0x1
	0x01E03950 STRB W8, [X19 + 0xD87]
	0x01E03954 LDR X0, [X20]
	0x01E03958 LDR W8, [X0 + 0xE0]
	0x01E0395C CBNZ W8, 0x1E03964
	0x01E03960 BL 0x1C16DFC
	0x01E03964 LDP X20, X19, [X31 + 0x10]
	0x01E03968 LDR X30, [X31], #0x20
	0x01E0396C B 0x1E032F0
	0x01E03970 ADRP X8, 0xFFFFFFFFFECE8000
	0x01E03974 LDR V0, [X8 + 0xA7]
	0x01E03978 MOVZ W8, 0x3333
	0x01E0397C MOVK W8, 0x3F730000
	0x01E03980 MOV X1, X31
	0x01E03984 STR W8, [X0 + 0x18]
	0x01E03988 STR V0, [X0 + 0x3]
	0x01E0398C B 0x3C36D2C
	0x01E03990 MOV X1, X31
	0x01E03994 B 0x33BDD8C
	0x01E03998 SUB X31, X31, 0x60
	0x01E0399C STP X30, X21, [X31 + 0x40]
	0x01E039A0 STP X20, X19, [X31 + 0x50]
	0x01E039A4 ADRP X20, 0x25D5000
	0x01E039A8 LDRB W8, [X20 + 0xD88]
	0x01E039AC MOV X19, X0
	0x01E039B0 TBNZ X8, 0x0, 0x1E039EC
	0x01E039B4 ADRP X0, 0x22F6000
	0x01E039B8 LDR X0, [X0 + 0x838]
	0x01E039BC BL 0x1C16CF4
	0x01E039C0 ADRP X0, 0x22F6000
	0x01E039C4 LDR X0, [X0 + 0x840]
	0x01E039C8 BL 0x1C16CF4
	0x01E039CC ADRP X0, 0x22F6000
	0x01E039D0 LDR X0, [X0 + 0x848]
	0x01E039D4 BL 0x1C16CF4
	0x01E039D8 ADRP X0, 0x22F6000
	0x01E039DC LDR X0, [X0 + 0x850]
	0x01E039E0 BL 0x1C16CF4
	0x01E039E4 MOVZ W8, 0x1
	0x01E039E8 STRB W8, [X20 + 0xD88]
	0x01E039EC STP X31, X31, [X31 + 0x20]
	0x01E039F0 STR X31, [X31 + 0x30]
	0x01E039F4 LDR X0, [X19 + 0x20]
	0x01E039F8 CBZ X0, 0x1E03AB4
	0x01E039FC ADRP X8, 0x22F6000
	0x01E03A00 LDR X8, [X8 + 0x850]
	0x01E03A04 ADRP X20, 0x22F6000
	0x01E03A08 ADRP X21, 0x22F6000
	0x01E03A0C LDR X1, [X8]
	0x01E03A10 LDR X20, [X20 + 0x840]
	0x01E03A14 LDR X21, [X21 + 0x838]
	0x01E03A18 ADD X8, X31, 0x8
	0x01E03A1C BL 0x301CB58
	0x01E03A20 LDUR V0, [X31 + 0x8]
	0x01E03A24 LDR X8, [X31 + 0x18]
	0x01E03A28 STR V0, [X31 + 0x2]
	0x01E03A2C STR X8, [X31 + 0x30]
	0x01E03A30 LDR X1, [X20]
	0x01E03A34 ADD X0, X31, 0x20
	0x01E03A38 BL 0x2BC4350
	0x01E03A3C TBZ X0, 0x0, 0x1E03A6C
	0x01E03A40 LDR X8, [X31 + 0x30]
	0x01E03A44 CBZ X8, 0x1E03AAC
	0x01E03A48 LDR X0, [X8 + 0x20]
	0x01E03A4C CBZ X0, 0x1E03AB0
	0x01E03A50 MOV X1, X31
	0x01E03A54 BL 0x3C32ECC
	0x01E03A58 CBZ X0, 0x1E03AA8
	0x01E03A5C MOV W1, W31
	0x01E03A60 MOV X2, X31
	0x01E03A64 BL 0x3C357B4
	0x01E03A68 B 0x1E03A30
	0x01E03A6C LDR X1, [X21]
	0x01E03A70 ADD X0, X31, 0x20
	0x01E03A74 BL 0x2BC434C
	0x01E03A78 LDR X0, [X19 + 0x28]
	0x01E03A7C CBZ X0, 0x1E03AB4
	0x01E03A80 MOV X1, X31
	0x01E03A84 BL 0x3C32ECC
	0x01E03A88 CBZ X0, 0x1E03AB4
	0x01E03A8C MOV W1, W31
	0x01E03A90 MOV X2, X31
	0x01E03A94 BL 0x3C357B4
	0x01E03A98 LDP X20, X19, [X31 + 0x50]
	0x01E03A9C LDP X30, X21, [X31 + 0x40]
	0x01E03AA0 ADD X31, X31, 0x60
	0x01E03AA4 RET
	0x01E03AA8 BL 0x1C16F20
	0x01E03AAC BL 0x1C16F20
	0x01E03AB0 BL 0x1C16F20
	0x01E03AB4 BL 0x1C16F20
	0x01E03AB8 B 0x1E03AC8
	0x01E03ABC B 0x1E03AC8
	0x01E03AC0 B 0x1E03AC8
	0x01E03AC4 B 0x1E03AC8
	0x01E03AC8 CMP W1, 0x1
	0x01E03ACC B.NE 0x1E03AF4
	0x01E03AD0 BL 0x3EB1AD0
	0x01E03AD4 LDR X20, [X0]
	0x01E03AD8 BL 0x3EB1AE0
	0x01E03ADC LDR X1, [X21]
	0x01E03AE0 ADD X0, X31, 0x20
	0x01E03AE4 BL 0x2BC434C
	0x01E03AE8 CBZ X20, 0x1E03A78
	0x01E03AEC MOV X0, X20
	0x01E03AF0 BL 0x1C16F18
	0x01E03AF4 MOV X19, X0
	0x01E03AF8 MOV X20, X31
	0x01E03AFC B 0x1E03B04
	0x01E03B00 MOV X19, X0
	0x01E03B04 LDR X1, [X21]
	0x01E03B08 ADD X0, X31, 0x20
	0x01E03B0C BL 0x2BC434C
	0x01E03B10 CBNZ X20, 0x1E03B1C
	0x01E03B14 MOV X0, X19
	0x01E03B18 BL 0x1D2C690
	0x01E03B1C MOV X0, X20
	0x01E03B20 BL 0x1C16F18
	0x01E03B24 BL 0x1990590
	0x01E03B28 SUB X31, X31, 0x80
	0x01E03B2C STP D15, D14, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], D13
	003 Move [X31+56], D12
	004 Move [X31+64], D11
	005 Move [X31+72], D10
	006 Move [X31+80], D9
	007 Move [X31+88], D8
	008 Move [X31+96], X30
	009 Move [X31+104], X21
	010 Move [X31+112], X20
	011 Move [X31+120], X19
	012 Move X21, 0x25D6000
	013 Move W8, [X21+3446]
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {49}
	020 Move X0, 0x22F6000
	021 Move X0, [X0+2680]
	022 Call 0x1C17CF4
	023 Move X0, 0x22F7000
	024 Move X0, [X0+1936]
	025 Call 0x1C17CF4
	026 Move X0, 0x22F5000
	027 Move X0, [X0+1088]
	028 Call 0x1C17CF4
	029 Move X0, 0x22F5000
	030 Move X0, [X0+1096]
	031 Call 0x1C17CF4
	032 Move X0, 0x22F5000
	033 Move X0, [X0+1104]
	034 Call 0x1C17CF4
	035 Move X0, 0x22F5000
	036 Move X0, [X0+1112]
	037 Call 0x1C17CF4
	038 Move X0, 0x22F7000
	039 Move X0, [X0+1928]
	040 Call 0x1C17CF4
	041 Move X0, 0x22F4000
	042 Move X0, [X0+3440]
	043 Call 0x1C17CF4
	044 Move X0, 0x22F3000
	045 Move X0, [X0+1896]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X21+3446], W8
	049 Move [X31+32], X31
	050 Move [X31+40], X31
	051 Move [X31+8], X31
	052 Move [X31+16], X31
	053 Move [X31+24], X31
	054 Move [X31], X31
	055 Compare X20, 0
	056 JumpIfEqual {220}
	057 Move X8, 0x22F3000
	058 Move X8, [X8+1896]
	059 Move X0, X20
	060 Move X2, X31
	061 Move X1, [X8]
	062 Call Component.CompareTag, X0, X1
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {70}
	067 Move W8, 1
	068 Move [X19+40], W8
	069 Move [X19+48], W31
	070 Add X1, X31, 40
	071 Move X0, X20
	072 Call TriggerUtilities.TryGetItemFromCollider, X0, X1
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {134}
	077 Move X19, [X31+40]
	078 Compare X19, 0
	079 JumpIfEqual {220}
	080 Move X8, 0x22F4000
	081 Move X8, [X8+3440]
	082 Move X0, X19
	083 Move X2, X31
	084 Move X1, [X8]
	085 Call Component.CompareTag, X0, X1
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {204}
	090 Move X8, 0x22F6000
	091 Move X8, [X8+2680]
	092 Add X1, X31, 32
	093 Move X0, X19
	094 Move X2, [X8]
	095 Call 0x21A5990, X0, X1
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {204}
	100 Move X0, [X31+32]
	101 Compare X0, 0
	102 JumpIfEqual {220}
	103 Move X1, X31
	104 Call InventoryBag.GetContainedItems, X0
	105 Move X8, [X31+32]
	106 Compare X8, 0
	107 JumpIfEqual {220}
	108 Move X20, X0
	109 Move X0, X8
	110 Move X1, X31
	111 Call InventoryBag.EmptyContents, X0
	112 Compare X20, 0
	113 JumpIfEqual {220}
	114 Move X8, 0x22F5000
	115 Move X8, [X8+1112]
	116 Move X0, X20
	117 Move X1, [X8]
	118 Add X8, X31, 8
	119 Call List`1<Object>.GetEnumerator, X0
	120 Move X20, 0x22F5000
	121 Move X20, [X20+1096]
	122 Move X1, [X20]
	123 Add X0, X31, 8
	124 Call Enumerator<Object>.MoveNext, X0
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {199}
	129 Move X0, [X31+24]
	130 Compare X0, 0
	131 JumpIfEqual {219}
	132 Move X1, X31
	133 Call GrabbableItem.RespawnOrDespawn, X0
	134 Move X0, X20
	135 Move X1, X31
	136 Call Collider.get_attachedRigidbody, X0
	137 Compare X0, 0
	138 JumpIfEqual {207}
	139 Move X8, 0x22F7000
	140 Move X8, [X8+1936]
	141 Add X1, X31, 0
	142 Move X2, [X8]
	143 Call 0x21A5990, X0, X1
	144 Move TEMP, X0
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfNotEqual {207}
	148 Move X20, [X31]
	149 Move X0, X19
	150 Move X1, X31
	151 Call Component.get_transform, X0
	152 Compare X0, 0
	153 JumpIfEqual {220}
	154 Move X1, X31
	155 Call Transform.get_position, X0
	156 Move X19, 0x25D6000
	157 Move W8, [X19+1923]
	158 Move V8, V0
	159 Move V9, V1
	160 Move V10, V2
	161 Compare W8, 0
	162 JumpIfNotEqual {168}
	163 Move X0, 0x22F1000
	164 Move X0, [X0+1440]
	165 Call 0x1C17CF4
	166 Move W8, 1
	167 Move [X19+1923], W8
	168 Move X8, 0x22F1000
	169 Move X8, [X8+1440]
	170 Move X0, X31
	171 Move X8, [X8]
	172 Move X8, [X8+184]
	173 Move S11, [X8]
	174 Move S12, [X8+4]
	175 Move V13, [X8+8]
	176 Call NetworkBehaviourId.get_None
	177 Compare X20, 0
	178 JumpIfEqual {220}
	179 Move X9, 0x22F7000
	180 Move X8, [X20]
	181 Move X9, [X9+1928]
	182 Move X5, X0
	183 Move TEMP, 0x80000000
	184 Not TEMP
	185 Move W1, TEMP
	186 Move X6, [X8+1008]
	187 Move X4, [X9]
	188 Move X9, [X8+1000]
	189 Move X0, X20
	190 Move V0, V8
	191 Move V1, V9
	192 Move V2, V10
	193 Move X2, X31
	194 Move X3, X31
	195 Move V3, V11
	196 Move V4, V12
	197 Move V5, V13
	198 NotImplemented "Instruction BLR not yet implemented."
	199 Move X8, 0x22F5000
	200 Move X8, [X8+1088]
	201 Add X0, X31, 8
	202 Move X1, [X8]
	203 Call Enumerator<Object>.Dispose, X0
	204 Move X0, X19
	205 Move X1, X31
	206 Call GrabbableItem.RespawnOrDespawn, X0
	207 Move X20, [X31+112]
	208 Move X19, [X31+120]
	209 Move X30, [X31+96]
	210 Move X21, [X31+104]
	211 Move D9, [X31+80]
	212 Move D8, [X31+88]
	213 Move D11, [X31+64]
	214 Move D10, [X31+72]
	215 Move D13, [X31+48]
	216 Move D12, [X31+56]
	217 Add X31, X31, 128
	218 Return 
	219 Call 0x1C17F20
	220 Call 0x1C17F20
	221 Move X20, X0
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Move X0, X20
	224 Call 0x3EB2AD0
	225 Move X21, [X0]
	226 Call 0x3EB2AE0
	227 Move X8, 0x22F5000
	228 Move X8, [X8+1088]
	229 Add X0, X31, 8
	230 Move X1, [X8]
	231 Call Enumerator<Object>.Dispose, X0
	232 Compare X21, 0
	233 JumpIfEqual {204}
	234 Move X0, X21
	235 Call 0x1C17F18
	236 Move X21, X31
	237 Move X20, X0
	238 Move X8, 0x22F5000
	239 Move X8, [X8+1088]
	240 Move X1, [X8]
	241 Add X0, X31, 8
	242 Call Enumerator<Object>.Dispose, X0
	243 Compare X21, 0
	244 JumpIfNotEqual {247}
	245 Move X0, X20
	246 Call 0x1D2D690
	247 Move X0, X21
	248 Call 0x1C17F18
	249 Call 0x1991590

Method: System.Void OnTriggerExit(UnityEngine.Collider other)

Disassembly:
	0x01E03C18 LDR X8, [X21]
	0x01E03C1C LDR X8, [X8 + 0xB8]
	0x01E03C20 LDP S8, S9, [X8]
	0x01E03C24 LDR V10, [X8 + 0x8]
	0x01E03C28 MOV X0, X19
	0x01E03C2C MOV X1, X31
	0x01E03C30 BL 0x3C32E90
	0x01E03C34 CBZ X0, 0x1E03E80
	0x01E03C38 MOV X1, X31
	0x01E03C3C BL 0x3C3F58C
	0x01E03C40 MOV X0, X31
	0x01E03C44 MOV V11.16B, V0.16B
	0x01E03C48 MOV V12.16B, V1.16B
	0x01E03C4C MOV V13.16B, V2.16B
	0x01E03C50 BL 0x3C047F8
	0x01E03C54 CBZ X0, 0x1E03E80
	0x01E03C58 MOV X1, X31
	0x01E03C5C STP S14, S10, [X31 + 0x8]
	0x01E03C60 MOV V10.16B, V9.16B
	0x01E03C64 MOV V9.16B, V8.16B
	0x01E03C68 BL 0x3C32E90
	0x01E03C6C CBZ X0, 0x1E03E80
	0x01E03C70 MOV X1, X31
	0x01E03C74 BL 0x3C3F58C
	0x01E03C78 LDRB W8, [X22 + 0x785]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x25D6000
	006 Move W8, [X21+3447]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x22F3000
	014 Move X0, [X0+1896]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3447], W8
	018 Compare X20, 0
	019 JumpIfEqual {36}
	020 Move X8, 0x22F3000
	021 Move X8, [X8+1896]
	022 Move X0, X20
	023 Move X2, X31
	024 Move X1, [X8]
	025 Call Component.CompareTag, X0, X1
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {31}
	030 Move [X19+40], W31
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 
	036 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01E03C7C MOV V14.16B, V0.16B
	0x01E03C80 MOV V15.16B, V1.16B
	0x01E03C84 MOV V8.16B, V2.16B
	0x01E03C88 CBNZ W8, 0x1E03CA0
	0x01E03C8C ADRP X0, 0x22F0000

ISIL:
	001 Move W8, 0xD70A
	002 NotImplemented "Instruction MOVK not yet implemented."
	003 Move X1, X31
	004 Move [X0+44], W8
	005 Call MonoBehaviour..ctor, X0
	006 Return 

