Type: AnimalCompany.HandGrenade

Method: Fusion.TickTimer get_life()

Disassembly:
	0x01D98278 TBNZ X0, 0x0, 0x1D9831C
	0x01D9827C MOVZ W1, 0x1
	0x01D98280 MOV X0, X19
	0x01D98284 BL 0x1D97520
	0x01D98288 LDR X0, [X19 + 0x38]
	0x01D9828C ANDS W31, W20, 0x1
	0x01D98290 FMOV S0, 5
	0x01D98294 FMOV S1, 1
	0x01D98298 FCSEL S0, S1, S0, NE
	0x01D9829C MOV X1, X31
	0x01D982A0 BL 0x1E91E68
	0x01D982A4 AND X1, X0, 0x0
	0x01D982A8 MOV X0, X19
	0x01D982AC BL 0x1D972D8
	0x01D982B0 MOV X0, X19
	0x01D982B4 MOV W1, W31
	0x01D982B8 BL 0x1D97398
	0x01D982BC LDR X0, [X19 + 0x38]
	0x01D982C0 FMOV S0, 20
	0x01D982C4 MOV X1, X31
	0x01D982C8 BL 0x1E91E68
	0x01D982CC AND X1, X0, 0x0
	0x01D982D0 MOV X0, X19
	0x01D982D4 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move W0, [X8]
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0
	010 Move X0, 0x235C000
	011 Move X0, [X0+1456]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0x235F000
	016 Move X0, [X0+3672]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x235F000
	023 Move X0, [X0+3680]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: System.Void set_life(Fusion.TickTimer value)

Disassembly:
	0x01D982D8 LDP X30, X21, [X31], #0x20
	0x01D982DC B 0x1D97458
	0x01D982E0 ADRP X21, 0x235E000
	0x01D982E4 LDR X21, [X21 + 0xA78]
	0x01D982E8 LDR X0, [X21]
	0x01D982EC LDR W8, [X0 + 0xE0]
	0x01D982F0 CBNZ W8, 0x1D982F8
	0x01D982F4 BL 0x1C16DFC
	0x01D982F8 MOV X0, X19
	0x01D982FC MOV X1, X31
	0x01D98300 BL 0x1E77B08
	0x01D98304 LDR X0, [X19 + 0x38]
	0x01D98308 CBZ X0, 0x1D98414
	0x01D9830C MOV X1, X31
	0x01D98310 BL 0x1E9E538
	0x01D98314 CMP W0, 0x4
	0x01D98318 B.NE 0x1D98328
	0x01D9831C LDP X20, X19, [X31 + 0x10]
	0x01D98320 LDP X30, X21, [X31], #0x20
	0x01D98324 RET
	0x01D98328 LDR X0, [X19 + 0x40]
	0x01D9832C CBZ X0, 0x1D98414
	0x01D98330 MOV X1, X31
	0x01D98334 BL 0x1E94078

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move [X8], W1
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 
	010 Move X0, 0x235C000
	011 Move X0, [X0+1456]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0x235F000
	016 Move X0, [X0+3672]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x235F000
	023 Move X0, [X0+3688]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: System.Int32 get_pausedRemainingTicks()

Disassembly:
	0x01D98338 ANDS W31, W0, 0x7
	0x01D9833C B.EQ 0x1D98394
	0x01D98340 TBNZ X0, 0x0, 0x1D98270
	0x01D98344 LDR X8, [X19 + 0x38]
	0x01D98348 CBZ X8, 0x1D98414
	0x01D9834C LDR X0, [X8 + 0x50]
	0x01D98350 CBZ X0, 0x1D98414
	0x01D98354 MOV X1, X31
	0x01D98358 BL 0x1EC4D00
	0x01D9835C TBZ X0, 0x0, 0x1D9831C
	0x01D98360 LDR X8, [X19 + 0x38]
	0x01D98364 CBZ X8, 0x1D98414
	0x01D98368 LDR X0, [X8 + 0x50]
	0x01D9836C MOVZ W1, 0xC
	0x01D98370 MOV X2, X31
	0x01D98374 BL 0x1ED9318
	0x01D98378 LDR X8, [X19 + 0x40]
	0x01D9837C CBZ X8, 0x1D98414
	0x01D98380 LDR X8, [X8 + 0x20]
	0x01D98384 MOV X21, X0
	0x01D98388 CBZ X8, 0x1D983CC
	0x01D9838C LDR W0, [X8]
	0x01D98390 B 0x1D983D0
	0x01D98394 LDR X0, [X21]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move W0, [X8+4]
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0
	010 Move X0, 0x235C000
	011 Move X0, [X0+1456]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0x235F000
	016 Move X0, [X0+3696]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x235F000
	023 Move X0, [X0+3704]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: System.Void set_pausedRemainingTicks(System.Int32 value)

Disassembly:
	0x01D98398 LDR X19, [X19 + 0x40]
	0x01D9839C LDR W8, [X0 + 0xE0]
	0x01D983A0 CBNZ W8, 0x1D983A8
	0x01D983A4 BL 0x1C16DFC
	0x01D983A8 ADRP X8, 0x235E000
	0x01D983AC LDR X8, [X8 + 0xF18]
	0x01D983B0 MOV X1, X19
	0x01D983B4 LDP X20, X19, [X31 + 0x10]
	0x01D983B8 MOVZ W2, 0x7
	0x01D983BC LDR X0, [X8]
	0x01D983C0 MOV X3, X31
	0x01D983C4 LDP X30, X21, [X31], #0x20
	0x01D983C8 B 0x1E77B00
	0x01D983CC MOV X0, X31
	0x01D983D0 LDR W1, [X19 + 0x68]
	0x01D983D4 MOVZ W2, 0x2
	0x01D983D8 MOV X3, X31
	0x01D983DC BL 0x1E9C23C
	0x01D983E0 AND W8, W20, 0x1
	0x01D983E4 STUR X0, [X21 + 0x1C]
	0x01D983E8 STR W8, [X21 + 0x24]
	0x01D983EC CBZ X21, 0x1D98414
	0x01D983F0 MOVZ W8, 0x60
	0x01D983F4 STR W8, [X21 + 0xC]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move [X8+4], W1
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 
	010 Move X0, 0x235C000
	011 Move X0, [X0+1456]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0x235F000
	016 Move X0, [X0+3696]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x235F000
	023 Move X0, [X0+3712]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: Fusion.TickTimer get_timerPins()

Disassembly:
	0x01D983F8 LDR X0, [X19 + 0x38]
	0x01D983FC CBZ X0, 0x1D98414
	0x01D98400 LDP X20, X19, [X31 + 0x10]
	0x01D98404 MOV X1, X21
	0x01D98408 MOV X2, X31
	0x01D9840C LDP X30, X21, [X31], #0x20
	0x01D98410 B 0x1EA1E24
	0x01D98414 BL 0x1C16F20
	0x01D98418 B 0x1D97E18
	0x01D9841C STR X30, [X31 - 0x20]!
	0x01D98420 STP X20, X19, [X31 + 0x10]
	0x01D98424 ADRP X20, 0x2640000
	0x01D98428 LDRB W8, [X20 + 0xA2C]
	0x01D9842C MOV X19, X0
	0x01D98430 TBNZ X8, 0x0, 0x1D98448
	0x01D98434 ADRP X0, 0x235B000
	0x01D98438 LDR X0, [X0 + 0x598]
	0x01D9843C BL 0x1C16CF4
	0x01D98440 MOVZ W8, 0x1
	0x01D98444 STRB W8, [X20 + 0xA2C]
	0x01D98448 MOV X0, X19
	0x01D9844C BL 0x1D974B8
	0x01D98450 TBNZ X0, 0x0, 0x1D984C4
	0x01D98454 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move W0, [X8+8]
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0
	010 Move X0, 0x235C000
	011 Move X0, [X0+1456]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0x235F000
	016 Move X0, [X0+3720]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x235F000
	023 Move X0, [X0+3728]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: System.Void set_timerPins(Fusion.TickTimer value)

Disassembly:
	0x01D98458 MOV W1, W31
	0x01D9845C BL 0x1D98228
	0x01D98460 ADRP X8, 0x235B000
	0x01D98464 LDR X8, [X8 + 0x598]
	0x01D98468 LDR X20, [X19 + 0x98]
	0x01D9846C LDR X0, [X8]
	0x01D98470 LDR W8, [X0 + 0xE0]
	0x01D98474 CBNZ W8, 0x1D9847C
	0x01D98478 BL 0x1C16DFC
	0x01D9847C MOV X0, X20
	0x01D98480 MOV X1, X31
	0x01D98484 MOV X2, X31
	0x01D98488 BL 0x3C354F8
	0x01D9848C TBZ X0, 0x0, 0x1D984C4
	0x01D98490 LDR X20, [X19 + 0x98]
	0x01D98494 MOV X0, X19
	0x01D98498 MOV X1, X31
	0x01D9849C BL 0x3C32E90
	0x01D984A0 CBZ X0, 0x1D984D0
	0x01D984A4 MOV X1, X31
	0x01D984A8 BL 0x3C3F58C
	0x01D984AC MOV X0, X20
	0x01D984B0 LDP X20, X19, [X31 + 0x10]
	0x01D984B4 FMOV S3, 1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move [X8+8], W1
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 
	010 Move X0, 0x235C000
	011 Move X0, [X0+1456]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0x235F000
	016 Move X0, [X0+3720]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x235F000
	023 Move X0, [X0+3736]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: System.Boolean get_isPinPulled()

Disassembly:
	0x01D984B8 MOV X1, X31
	0x01D984BC LDR X30, [X31], #0x20
	0x01D984C0 B 0x1DD1B94
	0x01D984C4 LDP X20, X19, [X31 + 0x10]
	0x01D984C8 LDR X30, [X31], #0x20
	0x01D984CC RET
	0x01D984D0 BL 0x1C16F20
	0x01D984D4 STP X30, X19, [X31 - 0x10]!
	0x01D984D8 MOV X19, X0
	0x01D984DC BL 0x1D97584
	0x01D984E0 TBNZ X0, 0x0, 0x1D984F0
	0x01D984E4 MOV X0, X19
	0x01D984E8 BL 0x1D974B8
	0x01D984EC TBZ X0, 0x0, 0x1D98564
	0x01D984F0 MOV X0, X19
	0x01D984F4 MOV W1, W31
	0x01D984F8 BL 0x1D97520
	0x01D984FC MOV X0, X19
	0x01D98500 MOV W1, W31
	0x01D98504 BL 0x1D975EC
	0x01D98508 LDR X0, [X19 + 0x80]
	0x01D9850C CBZ X0, 0x1D9856C
	0x01D98510 MOV W1, W31
	0x01D98514 MOV X2, X31
	0x01D98518 BL 0x1D89D60
	0x01D9851C MOV X0, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {12}
	006 Move W8, [X8+12]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return X0
	012 Move X0, 0x235C000
	013 Move X0, [X0+1456]
	014 Call 0x1C17D08
	015 Call 0x1C17F10
	016 Move X19, X0
	017 Move X0, 0x235F000
	018 Move X0, [X0+3744]
	019 Call 0x1C17D08
	020 Move X1, X0
	021 Move X0, X19
	022 Move X2, X31
	023 Call InvalidOperationException..ctor, X0, X1
	024 Move X0, 0x235F000
	025 Move X0, [X0+3752]
	026 Call 0x1C17D08
	027 Move X1, X0
	028 Move X0, X19
	029 Call 0x1C17DEC

Method: System.Void set_isPinPulled(System.Boolean value)

Disassembly:
	0x01D98520 BL 0x1E91B08
	0x01D98524 AND X1, X0, 0x0
	0x01D98528 MOV X0, X19
	0x01D9852C BL 0x1D972D8
	0x01D98530 MOV X0, X19
	0x01D98534 MOV W1, W31
	0x01D98538 BL 0x1D97398
	0x01D9853C MOV X0, X31
	0x01D98540 BL 0x1E91B08
	0x01D98544 AND X1, X0, 0x0
	0x01D98548 MOV X0, X19
	0x01D9854C BL 0x1D97458
	0x01D98550 MOV X0, X19
	0x01D98554 BL 0x1D97B50
	0x01D98558 MOV X0, X19
	0x01D9855C LDP X30, X19, [X31], #0x10
	0x01D98560 B 0x1D97BAC
	0x01D98564 LDP X30, X19, [X31], #0x10
	0x01D98568 RET
	0x01D9856C BL 0x1C16F20
	0x01D98570 STP X30, X19, [X31 - 0x10]!
	0x01D98574 MOV X19, X0
	0x01D98578 BL 0x1D97584
	0x01D9857C TBNZ X0, 0x0, 0x1D985B0
	0x01D98580 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {11}
	006 And W9, W1, 1
	007 Move [X8+12], W9
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return 
	011 Move X0, 0x235C000
	012 Move X0, [X0+1456]
	013 Call 0x1C17D08
	014 Call 0x1C17F10
	015 Move X19, X0
	016 Move X0, 0x235F000
	017 Move X0, [X0+3744]
	018 Call 0x1C17D08
	019 Move X1, X0
	020 Move X0, X19
	021 Move X2, X31
	022 Call InvalidOperationException..ctor, X0, X1
	023 Move X0, 0x235F000
	024 Move X0, [X0+3760]
	025 Call 0x1C17D08
	026 Move X1, X0
	027 Move X0, X19
	028 Call 0x1C17DEC

Method: System.Boolean get_isExploded()

Disassembly:
	0x01D98584 BL 0x1D974B8
	0x01D98588 TBNZ X0, 0x0, 0x1D985B0
	0x01D9858C MOV X0, X31
	0x01D98590 BL 0x3C30A30
	0x01D98594 FMOV S1, 0.5
	0x01D98598 FCMP S0, S1
	0x01D9859C B.LE 0x1D985B0
	0x01D985A0 MOV X0, X19
	0x01D985A4 MOV W1, W31
	0x01D985A8 LDP X30, X19, [X31], #0x10
	0x01D985AC B 0x1D98228
	0x01D985B0 LDP X30, X19, [X31], #0x10
	0x01D985B4 RET
	0x01D985B8 STR D10, [X31 - 0x30]!
	0x01D985BC STP D9, D8, [X31 + 0x8]
	0x01D985C0 STR X30, [X31 + 0x18]
	0x01D985C4 STP X20, X19, [X31 + 0x20]
	0x01D985C8 ADRP X20, 0x2640000
	0x01D985CC LDRB W8, [X20 + 0x784]
	0x01D985D0 MOV V8.16B, V2.16B
	0x01D985D4 MOV V9.16B, V1.16B
	0x01D985D8 MOV V10.16B, V0.16B
	0x01D985DC MOV X19, X0
	0x01D985E0 CBNZ W8, 0x1D985F8
	0x01D985E4 ADRP X0, 0x235B000
	0x01D985E8 LDR X0, [X0 + 0x5A8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {12}
	006 Move W8, [X8+16]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return X0
	012 Move X0, 0x235C000
	013 Move X0, [X0+1456]
	014 Call 0x1C17D08
	015 Call 0x1C17F10
	016 Move X19, X0
	017 Move X0, 0x235F000
	018 Move X0, [X0+3768]
	019 Call 0x1C17D08
	020 Move X1, X0
	021 Move X0, X19
	022 Move X2, X31
	023 Call InvalidOperationException..ctor, X0, X1
	024 Move X0, 0x235F000
	025 Move X0, [X0+3776]
	026 Call 0x1C17D08
	027 Move X1, X0
	028 Move X0, X19
	029 Call 0x1C17DEC

Method: System.Void set_isExploded(System.Boolean value)

Disassembly:
	0x01D985EC BL 0x1C16CF4
	0x01D985F0 MOVZ W8, 0x1
	0x01D985F4 STRB W8, [X20 + 0x784]
	0x01D985F8 ADRP X8, 0x235B000
	0x01D985FC LDR X8, [X8 + 0x5A8]
	0x01D98600 LDR X0, [X8]
	0x01D98604 LDR W8, [X0 + 0xE0]
	0x01D98608 CBNZ W8, 0x1D98610
	0x01D9860C BL 0x1C16DFC
	0x01D98610 FMUL S0, S10, S10
	0x01D98614 FMUL S1, S9, S9
	0x01D98618 FMUL S2, S8, S8
	0x01D9861C FADD S0, S0, S1
	0x01D98620 FADD S0, S2, S0
	0x01D98624 FSQRT S0, S0
	0x01D98628 FMOV S1, 20
	0x01D9862C FCMP S0, S1
	0x01D98630 B.LE 0x1D9864C
	0x01D98634 MOV X0, X19
	0x01D98638 BL 0x1D97584
	0x01D9863C TBNZ X0, 0x0, 0x1D9864C
	0x01D98640 MOV X0, X19
	0x01D98644 BL 0x1D974B8
	0x01D98648 TBZ X0, 0x0, 0x1D98660
	0x01D9864C LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {11}
	006 And W9, W1, 1
	007 Move [X8+16], W9
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return 
	011 Move X0, 0x235C000
	012 Move X0, [X0+1456]
	013 Call 0x1C17D08
	014 Call 0x1C17F10
	015 Move X19, X0
	016 Move X0, 0x235F000
	017 Move X0, [X0+3768]
	018 Call 0x1C17D08
	019 Move X1, X0
	020 Move X0, X19
	021 Move X2, X31
	022 Call InvalidOperationException..ctor, X0, X1
	023 Move X0, 0x235F000
	024 Move X0, [X0+3784]
	025 Call 0x1C17D08
	026 Move X1, X0
	027 Move X0, X19
	028 Call 0x1C17DEC

Method: System.Void Awake()

Disassembly:
	0x01D98650 LDR X30, [X31 + 0x18]
	0x01D98654 LDP D9, D8, [X31 + 0x8]
	0x01D98658 LDR V10, [X31], #0x30
	0x01D9865C RET
	0x01D98660 MOV X0, X19
	0x01D98664 LDP X20, X19, [X31 + 0x20]
	0x01D98668 LDR X30, [X31 + 0x18]
	0x01D9866C LDP D9, D8, [X31 + 0x8]
	0x01D98670 MOV W1, W31
	0x01D98674 LDR V10, [X31], #0x30
	0x01D98678 B 0x1D98228
	0x01D9867C STR D10, [X31 - 0x40]!
	0x01D98680 STP D9, D8, [X31 + 0x8]
	0x01D98684 STR X30, [X31 + 0x18]
	0x01D98688 STP X22, X21, [X31 + 0x20]
	0x01D9868C STP X20, X19, [X31 + 0x30]
	0x01D98690 ADRP X22, 0x2640000
	0x01D98694 ADRP X21, 0x235E000
	0x01D98698 LDRB W8, [X22 + 0xA2D]
	0x01D9869C LDR X21, [X21 + 0xF20]
	0x01D986A0 MOV X20, X1
	0x01D986A4 MOV X19, X0
	0x01D986A8 TBNZ X8, 0x0, 0x1D986CC
	0x01D986AC ADRP X0, 0x235E000
	0x01D986B0 LDR X0, [X0 + 0xF20]
	0x01D986B4 BL 0x1C16CF4
	0x01D986B8 ADRP X0, 0x235B000
	0x01D986BC LDR X0, [X0 + 0x598]
	0x01D986C0 BL 0x1C16CF4
	0x01D986C4 MOVZ W8, 0x1
	0x01D986C8 STRB W8, [X22 + 0xA2D]
	0x01D986CC LDR X0, [X21]
	0x01D986D0 LDR W8, [X0 + 0xE0]
	0x01D986D4 CBNZ W8, 0x1D986E0
	0x01D986D8 BL 0x1C16DFC
	0x01D986DC LDR X0, [X21]
	0x01D986E0 CBZ X20, 0x1D9883C
	0x01D986E4 LDR X8, [X0 + 0xB8]
	0x01D986E8 MOV X0, X20
	0x01D986EC MOV X1, X31
	0x01D986F0 LDR W21, [X8]
	0x01D986F4 BL 0x3C8A29C
	0x01D986F8 CBZ X0, 0x1D9883C
	0x01D986FC MOV X1, X31
	0x01D98700 BL 0x3C35734
	0x01D98704 MOV W1, W0
	0x01D98708 MOV X0, X21
	0x01D9870C MOV X2, X31
	0x01D98710 BL 0x3B23FA4
	0x01D98714 TBZ X0, 0x0, 0x1D98808
	0x01D98718 ADRP X8, 0x235B000
	0x01D9871C LDR X8, [X8 + 0x598]
	0x01D98720 LDR X21, [X19 + 0x38]
	0x01D98724 LDR X0, [X8]
	0x01D98728 LDR W8, [X0 + 0xE0]
	0x01D9872C CBNZ W8, 0x1D98734
	0x01D98730 BL 0x1C16DFC
	0x01D98734 MOV X0, X21
	0x01D98738 MOV X1, X31
	0x01D9873C MOV X2, X31
	0x01D98740 BL 0x3C3883C
	0x01D98744 TBNZ X0, 0x0, 0x1D98808
	0x01D98748 LDR X0, [X19 + 0x38]
	0x01D9874C CBZ X0, 0x1D9883C
	0x01D98750 LDR X1, [X19 + 0x40]
	0x01D98754 MOV X2, X31
	0x01D98758 BL 0x1EA1A20
	0x01D9875C TBZ X0, 0x0, 0x1D98808
	0x01D98760 LDR X0, [X19 + 0x40]
	0x01D98764 CBZ X0, 0x1D98808
	0x01D98768 LDRB W8, [X0 + 0x60]
	0x01D9876C TBNZ X8, 0x1, 0x1D98808
	0x01D98770 MOV X1, X31
	0x01D98774 BL 0x1E93668
	0x01D98778 TBZ X0, 0x0, 0x1D98808
	0x01D9877C MOV X0, X19
	0x01D98780 BL 0x1D97584
	0x01D98784 TBNZ X0, 0x0, 0x1D98808
	0x01D98788 MOV X0, X19
	0x01D9878C BL 0x1D974B8
	0x01D98790 TBZ X0, 0x0, 0x1D98808
	0x01D98794 MOV X0, X20
	0x01D98798 MOV X1, X31
	0x01D9879C BL 0x3C89FC0
	0x01D987A0 ADRP X20, 0x2640000
	0x01D987A4 LDRB W8, [X20 + 0x784]
	0x01D987A8 MOV V8.16B, V0.16B
	0x01D987AC MOV V9.16B, V1.16B
	0x01D987B0 MOV V10.16B, V2.16B
	0x01D987B4 CBNZ W8, 0x1D987CC
	0x01D987B8 ADRP X0, 0x235B000
	0x01D987BC LDR X0, [X0 + 0x5A8]
	0x01D987C0 BL 0x1C16CF4
	0x01D987C4 MOVZ W8, 0x1
	0x01D987C8 STRB W8, [X20 + 0x784]
	0x01D987CC ADRP X8, 0x235B000
	0x01D987D0 LDR X8, [X8 + 0x5A8]
	0x01D987D4 LDR X0, [X8]
	0x01D987D8 LDR W8, [X0 + 0xE0]
	0x01D987DC CBNZ W8, 0x1D987E4
	0x01D987E0 BL 0x1C16DFC
	0x01D987E4 FMUL S0, S8, S8
	0x01D987E8 FMUL S1, S9, S9
	0x01D987EC FMUL S2, S10, S10
	0x01D987F0 FADD S0, S0, S1
	0x01D987F4 FADD S0, S2, S0
	0x01D987F8 FSQRT S0, S0
	0x01D987FC FMOV S1, 25
	0x01D98800 FCMP S0, S1
	0x01D98804 B.GE 0x1D98820
	0x01D98808 LDP X20, X19, [X31 + 0x30]
	0x01D9880C LDP X22, X21, [X31 + 0x20]
	0x01D98810 LDR X30, [X31 + 0x18]
	0x01D98814 LDP D9, D8, [X31 + 0x8]
	0x01D98818 LDR V10, [X31], #0x40
	0x01D9881C RET
	0x01D98820 MOV X0, X19
	0x01D98824 LDP X20, X19, [X31 + 0x30]
	0x01D98828 LDP X22, X21, [X31 + 0x20]
	0x01D9882C LDR X30, [X31 + 0x18]
	0x01D98830 LDP D9, D8, [X31 + 0x8]
	0x01D98834 LDR V10, [X31], #0x40
	0x01D98838 B 0x1D97E18
	0x01D9883C BL 0x1C16F20
	0x01D98840 STP X30, X21, [X31 - 0x20]!
	0x01D98844 STP X20, X19, [X31 + 0x10]
	0x01D98848 ADRP X20, 0x2640000
	0x01D9884C LDRB W8, [X20 + 0xA2E]
	0x01D98850 MOV X19, X1
	0x01D98854 TBNZ X8, 0x0, 0x1D98890
	0x01D98858 ADRP X0, 0x235E000
	0x01D9885C LDR X0, [X0 + 0xF28]
	0x01D98860 BL 0x1C16CF4
	0x01D98864 ADRP X0, 0x235E000
	0x01D98868 LDR X0, [X0 + 0xF30]
	0x01D9886C BL 0x1C16CF4
	0x01D98870 ADRP X0, 0x235E000
	0x01D98874 LDR X0, [X0 + 0xF38]
	0x01D98878 BL 0x1C16CF4
	0x01D9887C ADRP X0, 0x235B000
	0x01D98880 LDR X0, [X0 + 0x598]
	0x01D98884 BL 0x1C16CF4
	0x01D98888 MOVZ W8, 0x1
	0x01D9888C STRB W8, [X20 + 0xA2E]
	0x01D98890 CBZ X19, 0x1D98980
	0x01D98894 ADRP X8, 0x235E000
	0x01D98898 LDR X8, [X8 + 0xF30]
	0x01D9889C MOV X0, X19
	0x01D988A0 LDR X1, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2641000
	008 Move W8, [X20+2597]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0x235F000
	015 Move X0, [X0+3792]
	016 Call 0x1C17CF4
	017 Move X0, 0x235D000
	018 Move X0, [X0+3696]
	019 Call 0x1C17CF4
	020 Move X0, 0x235F000
	021 Move X0, [X0+3800]
	022 Call 0x1C17CF4
	023 Move X0, 0x235F000
	024 Move X0, [X0+3808]
	025 Call 0x1C17CF4
	026 Move X0, 0x235F000
	027 Move X0, [X0+3816]
	028 Call 0x1C17CF4
	029 Move X0, 0x235F000
	030 Move X0, [X0+3824]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+2597], W8
	034 Move X23, [X19+128]
	035 Compare X23, 0
	036 JumpIfEqual {160}
	037 Move X22, 0x235D000
	038 Move X22, [X22+3696]
	039 Move X21, 0x235F000
	040 Move X20, [X23+464]
	041 Move X0, [X22]
	042 Move X21, [X21+3824]
	043 Call 0x1C17F10
	044 Move X2, [X21]
	045 Move X1, X19
	046 Move X3, X31
	047 Move X21, X0
	048 Call Action..ctor, X0, X1, X2
	049 Move X0, X20
	050 Move X1, X21
	051 Move X2, X31
	052 Call Delegate.Combine, X0, X1
	053 Move X1, [X22]
	054 Compare X0, 0
	055 JumpIfEqual {61}
	056 Move X8, [X0]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move [X23+464], X0
	059 Move X8, [X0]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move [X23+464], X0
	062 Move X23, [X19+128]
	063 Compare X23, 0
	064 JumpIfEqual {160}
	065 Move X21, 0x235F000
	066 Move X20, [X23+480]
	067 Move X21, [X21+3816]
	068 Move X0, X1
	069 Call 0x1C17F10
	070 Move X2, [X21]
	071 Move X1, X19
	072 Move X3, X31
	073 Move X21, X0
	074 Call Action..ctor, X0, X1, X2
	075 Move X0, X20
	076 Move X1, X21
	077 Move X2, X31
	078 Call Delegate.Combine, X0, X1
	079 Move X1, [X22]
	080 Compare X0, 0
	081 JumpIfEqual {87}
	082 Move X8, [X0]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move [X23+480], X0
	085 Move X8, [X0]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move [X23+480], X0
	088 Move X23, [X19+128]
	089 Compare X23, 0
	090 JumpIfEqual {160}
	091 Move X21, 0x235F000
	092 Move X20, [X23+504]
	093 Move X21, [X21+3800]
	094 Move X0, X1
	095 Call 0x1C17F10
	096 Move X2, [X21]
	097 Move X1, X19
	098 Move X3, X31
	099 Move X21, X0
	100 Call Action..ctor, X0, X1, X2
	101 Move X0, X20
	102 Move X1, X21
	103 Move X2, X31
	104 Call Delegate.Combine, X0, X1
	105 Compare X0, 0
	106 JumpIfEqual {114}
	107 Move X1, [X22]
	108 Move X8, [X0]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move [X23+504], X0
	111 Move X8, [X0]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Call 0x1C181E0
	114 Move [X23+504], X0
	115 Move X22, [X19+128]
	116 Compare X22, 0
	117 JumpIfEqual {160}
	118 Move X23, 0x235F000
	119 Move X23, [X23+3792]
	120 Move X21, 0x235F000
	121 Move X20, [X22+536]
	122 Move X0, [X23]
	123 Move X21, [X21+3808]
	124 Call 0x1C17F10
	125 Move X2, [X21]
	126 Move X1, X19
	127 Move X3, X31
	128 Move X21, X0
	129 Call Action`1<Vector3>..ctor, X0, X1, X2
	130 Move X0, X20
	131 Move X1, X21
	132 Move X2, X31
	133 Call Delegate.Combine, X0, X1
	134 Compare X0, 0
	135 JumpIfEqual {152}
	136 Move X20, [X23]
	137 Move X19, X0
	138 Move X1, X20
	139 Call 0x1C17E00
	140 Compare X0, 0
	141 JumpIfEqual {149}
	142 Move [X22+536], X0
	143 Move X20, [X23]
	144 Move X0, X19
	145 Move X1, X20
	146 Call 0x1C17E00
	147 Compare X0, 0
	148 JumpIfNotEqual {153}
	149 Move X0, X19
	150 Move X1, X20
	151 Call 0x1C181E0
	152 Move [X22+536], X31
	153 Move X20, [X31+32]
	154 Move X19, [X31+40]
	155 Move X22, [X31+16]
	156 Move X21, [X31+24]
	157 Move X30, [X31+48]
	158 Move X23, [X31+56]
	159 Return 
	160 Call 0x1C17F20

Method: System.Void OnDestroy()

Disassembly:
	0x01D988A4 BL 0x21E5548
	0x01D988A8 CBZ X0, 0x1D98980
	0x01D988AC ADRP X20, 0x235E000
	0x01D988B0 ADRP X21, 0x235B000
	0x01D988B4 LDR X20, [X20 + 0xF38]
	0x01D988B8 LDR X21, [X21 + 0x598]
	0x01D988BC MOVZ W1, 0x1
	0x01D988C0 MOV X2, X31
	0x01D988C4 BL 0x3C8F748
	0x01D988C8 LDR X1, [X20]
	0x01D988CC MOV X0, X19
	0x01D988D0 BL 0x21E52E4
	0x01D988D4 LDR X8, [X21]
	0x01D988D8 MOV X20, X0
	0x01D988DC LDR W9, [X8 + 0xE0]
	0x01D988E0 CBNZ W9, 0x1D988EC
	0x01D988E4 MOV X0, X8
	0x01D988E8 BL 0x1C16DFC
	0x01D988EC MOV X0, X20
	0x01D988F0 MOV X1, X31
	0x01D988F4 MOV X2, X31
	0x01D988F8 BL 0x3C3883C
	0x01D988FC TBZ X0, 0x0, 0x1D9891C
	0x01D98900 ADRP X8, 0x235E000
	0x01D98904 LDR X8, [X8 + 0xF28]
	0x01D98908 MOV X0, X19
	0x01D9890C LDR X1, [X8]
	0x01D98910 BL 0x21E51FC
	0x01D98914 MOV X20, X0
	0x01D98918 B 0x1D98930
	0x01D9891C CBZ X20, 0x1D98980
	0x01D98920 MOV X0, X20
	0x01D98924 MOV W1, W31
	0x01D98928 MOV X2, X31
	0x01D9892C BL 0x3C8ED2C
	0x01D98930 MOV X0, X19
	0x01D98934 MOV X1, X31
	0x01D98938 BL 0x3C356F8
	0x01D9893C CBZ X0, 0x1D98980
	0x01D98940 MOV X1, X31
	0x01D98944 MOV X2, X31
	0x01D98948 BL 0x3C3FD20
	0x01D9894C MOV X0, X19
	0x01D98950 MOV X1, X31
	0x01D98954 BL 0x3C356F8
	0x01D98958 CBZ X0, 0x1D98980
	0x01D9895C MOV X1, X31
	0x01D98960 BL 0x3C3FA04
	0x01D98964 CBZ X20, 0x1D98980
	0x01D98968 MOV X0, X20
	0x01D9896C LDP X20, X19, [X31 + 0x10]
	0x01D98970 MOVZ W1, 0x1
	0x01D98974 MOV X2, X31
	0x01D98978 LDP X30, X21, [X31], #0x20
	0x01D9897C B 0x3C8F3C4
	0x01D98980 BL 0x1C16F20
	0x01D98984 STR X30, [X31 - 0x40]!
	0x01D98988 STP X24, X23, [X31 + 0x10]
	0x01D9898C STP X22, X21, [X31 + 0x20]
	0x01D98990 STP X20, X19, [X31 + 0x30]
	0x01D98994 ADRP X22, 0x2640000
	0x01D98998 ADRP X21, 0x235B000
	0x01D9899C LDRB W8, [X22 + 0xA2F]
	0x01D989A0 LDR X21, [X21 + 0x598]
	0x01D989A4 MOV X19, X1
	0x01D989A8 MOV X20, X0
	0x01D989AC TBNZ X8, 0x0, 0x1D989DC
	0x01D989B0 ADRP X0, 0x235E000
	0x01D989B4 LDR X0, [X0 + 0xF30]
	0x01D989B8 BL 0x1C16CF4
	0x01D989BC ADRP X0, 0x235E000
	0x01D989C0 LDR X0, [X0 + 0xF40]
	0x01D989C4 BL 0x1C16CF4
	0x01D989C8 ADRP X0, 0x235B000
	0x01D989CC LDR X0, [X0 + 0x598]
	0x01D989D0 BL 0x1C16CF4
	0x01D989D4 MOVZ W8, 0x1
	0x01D989D8 STRB W8, [X22 + 0xA2F]
	0x01D989DC LDR X0, [X21]
	0x01D989E0 STR X31, [X31 + 0x8]
	0x01D989E4 LDR W8, [X0 + 0xE0]
	0x01D989E8 CBNZ W8, 0x1D989F0
	0x01D989EC BL 0x1C16DFC
	0x01D989F0 MOV X0, X19
	0x01D989F4 MOV X1, X31
	0x01D989F8 MOV X2, X31
	0x01D989FC BL 0x3C3883C
	0x01D98A00 TBNZ X0, 0x0, 0x1D98BA4
	0x01D98A04 CBZ X19, 0x1D98BB8
	0x01D98A08 MOV X0, X19
	0x01D98A0C MOV X1, X31
	0x01D98A10 BL 0x3C357F8
	0x01D98A14 TBNZ X0, 0x0, 0x1D98A28
	0x01D98A18 MOVZ W1, 0x1
	0x01D98A1C MOV X0, X19
	0x01D98A20 MOV X2, X31
	0x01D98A24 BL 0x3C357B4
	0x01D98A28 ADRP X8, 0x235E000
	0x01D98A2C LDR X8, [X8 + 0xF40]
	0x01D98A30 ADD X1, X31, 0x8
	0x01D98A34 MOV X0, X19
	0x01D98A38 LDR X2, [X8]
	0x01D98A3C BL 0x21E6600
	0x01D98A40 ADRP X22, 0x235B000
	0x01D98A44 LDR X22, [X22 + 0x5A0]
	0x01D98A48 ADRP X23, 0x2640000
	0x01D98A4C TBZ X0, 0x0, 0x1D98AA4
	0x01D98A50 LDR X0, [X31 + 0x8]
	0x01D98A54 CBZ X0, 0x1D98BB8
	0x01D98A58 MOVZ W1, 0x1
	0x01D98A5C MOV X2, X31
	0x01D98A60 MOVZ W24, 0x1
	0x01D98A64 BL 0x3C8ED2C
	0x01D98A68 LDRB W8, [X23 + 0x783]
	0x01D98A6C LDR X21, [X31 + 0x8]
	0x01D98A70 CBNZ W8, 0x1D98A84
	0x01D98A74 ADRP X0, 0x235B000
	0x01D98A78 LDR X0, [X0 + 0x5A0]
	0x01D98A7C BL 0x1C16CF4
	0x01D98A80 STRB W24, [X23 + 0x783]
	0x01D98A84 CBZ X21, 0x1D98BB8
	0x01D98A88 LDR X8, [X22]
	0x01D98A8C MOV X0, X21
	0x01D98A90 MOV X1, X31
	0x01D98A94 LDR X8, [X8 + 0xB8]
	0x01D98A98 LDP S1, S2, [X8 + 0x4]
	0x01D98A9C LDR V0, [X8]
	0x01D98AA0 BL 0x3C8E908
	0x01D98AA4 MOV X0, X19
	0x01D98AA8 MOV X1, X31
	0x01D98AAC BL 0x3C356F8
	0x01D98AB0 LDR X8, [X20 + 0xA8]
	0x01D98AB4 CBZ X8, 0x1D98BB8
	0x01D98AB8 MOV X20, X0
	0x01D98ABC MOV X0, X8
	0x01D98AC0 MOV X1, X31
	0x01D98AC4 BL 0x3C356F8
	0x01D98AC8 CBZ X20, 0x1D98BB8
	0x01D98ACC MOV X1, X0
	0x01D98AD0 MOV X0, X20
	0x01D98AD4 MOV X2, X31
	0x01D98AD8 BL 0x3C3FD20
	0x01D98ADC MOV X0, X19
	0x01D98AE0 MOV X1, X31
	0x01D98AE4 BL 0x3C356F8
	0x01D98AE8 LDRB W8, [X23 + 0x783]
	0x01D98AEC MOV X20, X0
	0x01D98AF0 CBNZ W8, 0x1D98B08
	0x01D98AF4 ADRP X0, 0x235B000
	0x01D98AF8 LDR X0, [X0 + 0x5A0]
	0x01D98AFC BL 0x1C16CF4
	0x01D98B00 MOVZ W8, 0x1
	0x01D98B04 STRB W8, [X23 + 0x783]
	0x01D98B08 CBZ X20, 0x1D98BB8
	0x01D98B0C LDR X8, [X22]
	0x01D98B10 MOV X0, X20
	0x01D98B14 MOV X1, X31
	0x01D98B18 LDR X8, [X8 + 0xB8]
	0x01D98B1C LDP S1, S2, [X8 + 0x4]
	0x01D98B20 LDR V0, [X8]
	0x01D98B24 BL 0x3C3EC04
	0x01D98B28 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2641000
	008 Move X21, 0x235F000
	009 Move W8, [X20+2598]
	010 Move X21, [X21+2680]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0x235F000
	017 Move X0, [X0+3792]
	018 Call 0x1C17CF4
	019 Move X0, 0x235D000
	020 Move X0, [X0+3696]
	021 Call 0x1C17CF4
	022 Move X0, 0x235F000
	023 Move X0, [X0+3800]
	024 Call 0x1C17CF4
	025 Move X0, 0x235F000
	026 Move X0, [X0+3808]
	027 Call 0x1C17CF4
	028 Move X0, 0x235F000
	029 Move X0, [X0+3816]
	030 Call 0x1C17CF4
	031 Move X0, 0x235F000
	032 Move X0, [X0+3824]
	033 Call 0x1C17CF4
	034 Move X0, 0x235F000
	035 Move X0, [X0+2680]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+2598], W8
	039 Move X0, [X21]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Compare X19, 0
	045 JumpIfEqual {175}
	046 Move W8, [X19+48]
	047 Move X23, [X19+128]
	048 Or W8, W8, 8
	049 Move [X19+48], W8
	050 Compare X23, 0
	051 JumpIfEqual {175}
	052 Move X22, 0x235D000
	053 Move X22, [X22+3696]
	054 Move X21, 0x235F000
	055 Move X20, [X23+464]
	056 Move X0, [X22]
	057 Move X21, [X21+3824]
	058 Call 0x1C17F10
	059 Move X2, [X21]
	060 Move X1, X19
	061 Move X3, X31
	062 Move X21, X0
	063 Call Action..ctor, X0, X1, X2
	064 Move X0, X20
	065 Move X1, X21
	066 Move X2, X31
	067 Call Delegate.Remove, X0, X1
	068 Move X1, [X22]
	069 Compare X0, 0
	070 JumpIfEqual {76}
	071 Move X8, [X0]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move [X23+464], X0
	074 Move X8, [X0]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move [X23+464], X0
	077 Move X23, [X19+128]
	078 Compare X23, 0
	079 JumpIfEqual {175}
	080 Move X21, 0x235F000
	081 Move X20, [X23+480]
	082 Move X21, [X21+3816]
	083 Move X0, X1
	084 Call 0x1C17F10
	085 Move X2, [X21]
	086 Move X1, X19
	087 Move X3, X31
	088 Move X21, X0
	089 Call Action..ctor, X0, X1, X2
	090 Move X0, X20
	091 Move X1, X21
	092 Move X2, X31
	093 Call Delegate.Remove, X0, X1
	094 Move X1, [X22]
	095 Compare X0, 0
	096 JumpIfEqual {102}
	097 Move X8, [X0]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move [X23+480], X0
	100 Move X8, [X0]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move [X23+480], X0
	103 Move X23, [X19+128]
	104 Compare X23, 0
	105 JumpIfEqual {175}
	106 Move X21, 0x235F000
	107 Move X20, [X23+504]
	108 Move X21, [X21+3800]
	109 Move X0, X1
	110 Call 0x1C17F10
	111 Move X2, [X21]
	112 Move X1, X19
	113 Move X3, X31
	114 Move X21, X0
	115 Call Action..ctor, X0, X1, X2
	116 Move X0, X20
	117 Move X1, X21
	118 Move X2, X31
	119 Call Delegate.Remove, X0, X1
	120 Compare X0, 0
	121 JumpIfEqual {129}
	122 Move X1, [X22]
	123 Move X8, [X0]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move [X23+504], X0
	126 Move X8, [X0]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Call 0x1C181E0
	129 Move [X23+504], X0
	130 Move X22, [X19+128]
	131 Compare X22, 0
	132 JumpIfEqual {175}
	133 Move X23, 0x235F000
	134 Move X23, [X23+3792]
	135 Move X21, 0x235F000
	136 Move X20, [X22+536]
	137 Move X0, [X23]
	138 Move X21, [X21+3808]
	139 Call 0x1C17F10
	140 Move X2, [X21]
	141 Move X1, X19
	142 Move X3, X31
	143 Move X21, X0
	144 Call Action`1<Vector3>..ctor, X0, X1, X2
	145 Move X0, X20
	146 Move X1, X21
	147 Move X2, X31
	148 Call Delegate.Remove, X0, X1
	149 Compare X0, 0
	150 JumpIfEqual {167}
	151 Move X20, [X23]
	152 Move X19, X0
	153 Move X1, X20
	154 Call 0x1C17E00
	155 Compare X0, 0
	156 JumpIfEqual {164}
	157 Move [X22+536], X0
	158 Move X20, [X23]
	159 Move X0, X19
	160 Move X1, X20
	161 Call 0x1C17E00
	162 Compare X0, 0
	163 JumpIfNotEqual {168}
	164 Move X0, X19
	165 Move X1, X20
	166 Call 0x1C181E0
	167 Move [X22+536], X31
	168 Move X20, [X31+32]
	169 Move X19, [X31+40]
	170 Move X22, [X31+16]
	171 Move X21, [X31+24]
	172 Move X30, [X31+48]
	173 Move X23, [X31+56]
	174 Return 
	175 Call 0x1C17F20

Method: System.Void Spawned()

Disassembly:
	0x01D98B2C MOV X1, X31
	0x01D98B30 BL 0x3C356F8
	0x01D98B34 ADRP X21, 0x2640000
	0x01D98B38 LDRB W8, [X21 + 0x793]
	0x01D98B3C MOV X20, X0
	0x01D98B40 CBNZ W8, 0x1D98B58
	0x01D98B44 ADRP X0, 0x235C000
	0x01D98B48 LDR X0, [X0 + 0x5A8]
	0x01D98B4C BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call NetworkBehaviour.Spawned, X0
	006 Move X0, X19
	007 Call HandGrenade.HandleIsExplodedChanged, X0
	008 Move X0, X19
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Call HandGrenade.HandleIsPinPulledChanged, X0
	012 Return 

Method: System.Void Despawned(Fusion.NetworkRunner runner, System.Boolean hasState)

Disassembly:
	0x01D98BE8 RET
	0x01D98BEC CMP W20, 0x14
	0x01D98BF0 MOV X0, X19
	0x01D98BF4 LDP X20, X19, [X31 + 0x10]
	0x01D98BF8 CSET W1, GT
	0x01D98BFC LDR X30, [X31], #0x20
	0x01D98C00 B 0x1D98228
	0x01D98C04 MOV X1, X31
	0x01D98C08 B 0x1E74F04
	0x01D98C0C STP X30, X21, [X31 - 0x20]!
	0x01D98C10 STP X20, X19, [X31 + 0x10]
	0x01D98C14 ADRP X19, 0x2640000
	0x01D98C18 ADRP X20, 0x235B000
	0x01D98C1C LDRB W8, [X19 + 0xA30]
	0x01D98C20 LDR X20, [X20 + 0x5D8]
	0x01D98C24 TBNZ X8, 0x0, 0x1D98C48
	0x01D98C28 ADRP X0, 0x235E000
	0x01D98C2C LDR X0, [X0 + 0xF20]
	0x01D98C30 BL 0x1C16CF4
	0x01D98C34 ADRP X0, 0x235B000
	0x01D98C38 LDR X0, [X0 + 0x5D8]
	0x01D98C3C BL 0x1C16CF4
	0x01D98C40 MOVZ W8, 0x1
	0x01D98C44 STRB W8, [X19 + 0xA30]
	0x01D98C48 LDR X0, [X20]
	0x01D98C4C ADRP X21, 0x235E000
	0x01D98C50 LDR W8, [X0 + 0xE0]
	0x01D98C54 LDR X21, [X21 + 0xF20]
	0x01D98C58 CBNZ W8, 0x1D98C64
	0x01D98C5C BL 0x1C16DFC
	0x01D98C60 LDR X0, [X20]
	0x01D98C64 LDR X8, [X0 + 0xB8]
	0x01D98C68 MOV X1, X31
	0x01D98C6C LDR W0, [X8]
	0x01D98C70 BL 0x3C35CB8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x2641000
	008 Move X22, 0x235C000
	009 Move W8, [X23+2599]
	010 Move X22, [X22+1432]
	011 Move W20, W2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x235C000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+2599], W8
	023 Move X0, [X22]
	024 Move X22, [X21+136]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X22
	030 Move X1, X31
	031 Call Object.Destroy, X0
	032 Move X0, [X21+144]
	033 Move X1, X31
	034 Call Object.Destroy, X0
	035 And W2, W20, 1
	036 Move X0, X21
	037 Move X1, X19
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X3, X31
	043 Move X30, [X31+48]
	044 Move X23, [X31+56]
	045 Call NetworkBehaviour.Despawned, X0, X1, X2
	046 Return 

Method: System.Void FixedUpdateNetwork()

Disassembly:
	0x01D98C74 LDR X8, [X20]
	0x01D98C78 MOV W19, W0
	0x01D98C7C MOV X1, X31
	0x01D98C80 LDR X8, [X8 + 0xB8]
	0x01D98C84 LDR W8, [X8 + 0x4]
	0x01D98C88 MOV X0, X8
	0x01D98C8C BL 0x3C35CB8
	0x01D98C90 LDR X8, [X20]
	0x01D98C94 MOV W20, W0
	0x01D98C98 MOV X1, X31
	0x01D98C9C LDR X8, [X8 + 0xB8]
	0x01D98CA0 LDR W8, [X8 + 0x28]
	0x01D98CA4 MOV X0, X8
	0x01D98CA8 BL 0x3C35CB8
	0x01D98CAC ORR W8, W20, W19, 0x0
	0x01D98CB0 ORR W0, W8, W0, 0x0
	0x01D98CB4 MOV X1, X31
	0x01D98CB8 BL 0x3C35CBC
	0x01D98CBC LDR X8, [X21]
	0x01D98CC0 LDP X20, X19, [X31 + 0x10]
	0x01D98CC4 LDR X8, [X8 + 0xB8]
	0x01D98CC8 STR W0, [X8]
	0x01D98CCC LDP X30, X21, [X31], #0x20
	0x01D98CD0 RET
	0x01D98CD4 STP X30, X19, [X31 - 0x10]!
	0x01D98CD8 LDR W1, [X0 + 0xC0]
	0x01D98CDC MOV X19, X0
	0x01D98CE0 BL 0x1D972D8
	0x01D98CE4 LDR W1, [X19 + 0xC4]
	0x01D98CE8 MOV X0, X19
	0x01D98CEC BL 0x1D97398
	0x01D98CF0 LDR W1, [X19 + 0xC8]
	0x01D98CF4 MOV X0, X19
	0x01D98CF8 BL 0x1D97458
	0x01D98CFC LDRB W1, [X19 + 0xCC]
	0x01D98D00 MOV X0, X19
	0x01D98D04 BL 0x1D97520
	0x01D98D08 LDRB W1, [X19 + 0xCD]
	0x01D98D0C MOV X0, X19
	0x01D98D10 LDP X30, X19, [X31], #0x10
	0x01D98D14 B 0x1D975EC
	0x01D98D18 STP X30, X19, [X31 - 0x10]!
	0x01D98D1C MOV X19, X0
	0x01D98D20 BL 0x1D97278
	0x01D98D24 STR W0, [X19 + 0xC0]
	0x01D98D28 MOV X0, X19
	0x01D98D2C BL 0x1D97338
	0x01D98D30 STR W0, [X19 + 0xC4]
	0x01D98D34 MOV X0, X19
	0x01D98D38 BL 0x1D973F8
	0x01D98D3C STR W0, [X19 + 0xC8]
	0x01D98D40 MOV X0, X19
	0x01D98D44 BL 0x1D974B8
	0x01D98D48 AND W8, W0, 0x1
	0x01D98D4C MOV X0, X19
	0x01D98D50 STRB W8, [X19 + 0xCC]
	0x01D98D54 BL 0x1D97584
	0x01D98D58 AND W8, W0, 0x1
	0x01D98D5C STRB W8, [X19 + 0xCD]
	0x01D98D60 LDP X30, X19, [X31], #0x10
	0x01D98D64 RET
	0x01D98D68 STR X30, [X31 - 0x20]!
	0x01D98D6C STP X20, X19, [X31 + 0x10]
	0x01D98D70 ADRP X20, 0x2640000
	0x01D98D74 LDRB W8, [X20 + 0xA31]
	0x01D98D78 MOV X19, X0
	0x01D98D7C TBNZ X8, 0x0, 0x1D98D94
	0x01D98D80 ADRP X0, 0x235E000
	0x01D98D84 LDR X0, [X0 + 0xF20]
	0x01D98D88 BL 0x1C16CF4
	0x01D98D8C MOVZ W8, 0x1
	0x01D98D90 STRB W8, [X20 + 0xA31]
	0x01D98D94 CBZ X19, 0x1D98DEC
	0x01D98D98 ADRP X9, 0x235E000
	0x01D98D9C LDR X9, [X9 + 0xF20]
	0x01D98DA0 MOVZ W8, 0x1
	0x01D98DA4 STRB W8, [X19 + 0x58]
	0x01D98DA8 LDR X8, [X19]
	0x01D98DAC LDR X1, [X9]
	0x01D98DB0 LDRB W10, [X8 + 0x130]
	0x01D98DB4 LDRB W9, [X1 + 0x130]
	0x01D98DB8 CMP W10, W9
	0x01D98DBC B.CC 0x1D98DE4
	0x01D98DC0 LDR X8, [X8 + 0xC8]
	0x01D98DC4 ADD X8, X8, X9, 0x3, LSL
	0x01D98DC8 LDUR X8, [X8 - 0x8]
	0x01D98DCC CMP X8, X1
	0x01D98DD0 B.NE 0x1D98DE4
	0x01D98DD4 MOV X0, X19
	0x01D98DD8 LDP X20, X19, [X31 + 0x10]
	0x01D98DDC LDR X30, [X31], #0x20
	0x01D98DE0 B 0x1D980A4
	0x01D98DE4 MOV X0, X19
	0x01D98DE8 BL 0x1C171E0
	0x01D98DEC BL 0x1C16F20
	0x01D98DF0 STP X30, X21, [X31 - 0x20]!
	0x01D98DF4 STP X20, X19, [X31 + 0x10]
	0x01D98DF8 ADRP X21, 0x2640000
	0x01D98DFC LDRB W8, [X21 + 0xA32]
	0x01D98E00 MOV X20, X1
	0x01D98E04 MOV X19, X0
	0x01D98E08 TBNZ X8, 0x0, 0x1D98E20
	0x01D98E0C ADRP X0, 0x235E000
	0x01D98E10 LDR X0, [X0 + 0xF20]
	0x01D98E14 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x2641000
	006 Move W8, [X20+2600]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x235F000
	013 Move X0, [X0+3832]
	014 Call 0x1C17CF4
	015 Move X0, 0x235F000
	016 Move X0, [X0+3840]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2600], W8
	020 Move X0, X19
	021 Move X1, X31
	022 Move [X31+8], X31
	023 Move [X31], W31
	024 Call NetworkBehaviour.FixedUpdateNetwork, X0
	025 Move X0, [X19+64]
	026 Compare X0, 0
	027 JumpIfEqual {123}
	028 Move W8, [X0+96]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 2
	031 Compare TEMP, 2
	032 JumpIfEqual {123}
	033 Move X1, X31
	034 Call NetworkObject.get_HasStateAuthority, X0
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {123}
	039 Move X0, X19
	040 Call HandGrenade.get_isPinPulled, X0
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {123}
	045 Move X0, [X19+128]
	046 Compare X0, 0
	047 JumpIfEqual {128}
	048 Move X1, X31
	049 Call GrabbableItem.get_backpackId, X0
	050 Move [X31+24], X0
	051 Add X0, X31, 24
	052 Move X1, X31
	053 Call NetworkBehaviourId.get_IsValid, X0
	054 Move W20, W0
	055 Move X0, X19
	056 Call HandGrenade.get_pausedRemainingTicks, X0
	057 Move TEMP, X20
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {80}
	061 Compare W0, 0
	062 JumpIfNotEqual {107}
	063 Move X0, X19
	064 Call HandGrenade.get_life, X0
	065 Move [X31], W0
	066 Move X1, [X19+56]
	067 Add X0, X31, 0
	068 Move X2, X31
	069 Call TickTimer.RemainingTicks, X0, X1
	070 And W31, W0, 255
	071 Move [X31+8], X0
	072 Move X8, 0x235F000
	073 Move X8, [X8+3840]
	074 Add X0, X31, 8
	075 Move X1, [X8]
	076 Call Nullable`1<Int32>.get_Value, X0
	077 Move W1, W0
	078 Move X0, X19
	079 Call HandGrenade.set_pausedRemainingTicks, X0, X1
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X20, [X19+56]
	082 Move X0, X19
	083 Call HandGrenade.get_pausedRemainingTicks, X0
	084 Move W1, W0
	085 Move X0, X20
	086 Move X2, X31
	087 Call TickTimer.CreateFromTicks, X0, X1
	088 And X1, X0, 0
	089 Move X0, X19
	090 Call HandGrenade.set_life, X0, X1
	091 Move X0, X19
	092 Move W1, W31
	093 Call HandGrenade.set_pausedRemainingTicks, X0, X1
	094 Move X0, X19
	095 Call HandGrenade.get_life, X0
	096 Move [X31], W0
	097 Move X1, [X19+56]
	098 Add X0, X31, 0
	099 Move X2, X31
	100 Call TickTimer.Expired, X0, X1
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {107}
	105 Move X0, X19
	106 Call HandGrenade.ExplodeInternal, X0
	107 Move X0, X19
	108 Call HandGrenade.get_timerPins, X0
	109 Move [X31], W0
	110 Move X1, [X19+56]
	111 Add X0, X31, 0
	112 Move X2, X31
	113 Call TickTimer.Expired, X0, X1
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfNotEqual {123}
	118 Move X0, X31
	119 Call TickTimer.get_None
	120 And X1, X0, 0
	121 Move X0, X19
	122 Call HandGrenade.set_timerPins, X0, X1
	123 Move X20, [X31+32]
	124 Move X19, [X31+40]
	125 Move X30, [X31+16]
	126 Add X31, X31, 48
	127 Return 
	128 Call 0x1C17F20

Method: System.Void RPC_Explode()

Disassembly:
	0x01D990A4 LDR X24, [X24 + 0xF48]
	0x01D990A8 MOV X1, X19
	0x01D990AC MOV X3, X31
	0x01D990B0 MOV X21, X0
	0x01D990B4 LDR X2, [X24]
	0x01D990B8 BL 0x3314368
	0x01D990BC MOV X0, X20
	0x01D990C0 MOV X1, X21
	0x01D990C4 MOV X2, X31
	0x01D990C8 BL 0x33C0DE4
	0x01D990CC LDR X1, [X23]
	0x01D990D0 CBZ X0, 0x1D9915C
	0x01D990D4 LDR X8, [X0]
	0x01D990D8 CMP X8, X1
	0x01D990DC B.NE 0x1D991C4
	0x01D990E0 LDR X8, [X22]
	0x01D990E4 LDR X8, [X8 + 0xB8]
	0x01D990E8 STR X0, [X8 + 0x68]
	0x01D990EC LDR X9, [X0]
	0x01D990F0 CMP X9, X1
	0x01D990F4 B.EQ 0x1D99168
	0x01D990F8 B 0x1D991C4
	0x01D990FC LDR X8, [X22]
	0x01D99100 LDR X8, [X8 + 0xB8]
	0x01D99104 STR X0, [X8 + 0x78]
	0x01D99108 LDR X20, [X8 + 0x58]
	0x01D9910C MOV X0, X1
	0x01D99110 BL 0x1C16F10
	0x01D99114 LDR X2, [X24]
	0x01D99118 MOV X1, X19
	0x01D9911C MOV X3, X31
	0x01D99120 MOV X21, X0
	0x01D99124 BL 0x3314368
	0x01D99128 MOV X0, X20
	0x01D9912C MOV X1, X21
	0x01D99130 MOV X2, X31
	0x01D99134 BL 0x33C0DE4
	0x01D99138 CBZ X0, 0x1D991C8
	0x01D9913C LDR X1, [X23]
	0x01D99140 LDR X8, [X0]
	0x01D99144 CMP X8, X1
	0x01D99148 B.NE 0x1D991C4
	0x01D9914C LDR X8, [X22]
	0x01D99150 LDR X8, [X8 + 0xB8]
	0x01D99154 STR X0, [X8 + 0x58]
	0x01D99158 B 0x1D991B8
	0x01D9915C LDR X8, [X22]
	0x01D99160 LDR X8, [X8 + 0xB8]
	0x01D99164 STR X0, [X8 + 0x68]
	0x01D99168 LDR X20, [X8 + 0x48]
	0x01D9916C MOV X0, X1
	0x01D99170 BL 0x1C16F10
	0x01D99174 LDR X2, [X24]
	0x01D99178 MOV X1, X19
	0x01D9917C MOV X3, X31
	0x01D99180 MOV X21, X0
	0x01D99184 BL 0x3314368
	0x01D99188 MOV X0, X20
	0x01D9918C MOV X1, X21
	0x01D99190 MOV X2, X31
	0x01D99194 BL 0x33C0DE4
	0x01D99198 CBZ X0, 0x1D991D8
	0x01D9919C LDR X1, [X23]
	0x01D991A0 LDR X8, [X0]
	0x01D991A4 CMP X8, X1
	0x01D991A8 B.NE 0x1D991C4
	0x01D991AC LDR X8, [X22]
	0x01D991B0 LDR X8, [X8 + 0xB8]
	0x01D991B4 STR X0, [X8 + 0x48]
	0x01D991B8 LDR X8, [X0]
	0x01D991BC CMP X8, X1
	0x01D991C0 B.EQ 0x1D991E4
	0x01D991C4 BL 0x1C171E0
	0x01D991C8 LDR X8, [X22]
	0x01D991CC LDR X8, [X8 + 0xB8]
	0x01D991D0 STR X0, [X8 + 0x58]
	0x01D991D4 B 0x1D991E4
	0x01D991D8 LDR X8, [X22]
	0x01D991DC LDR X8, [X8 + 0xB8]
	0x01D991E0 STR X0, [X8 + 0x48]
	0x01D991E4 LDP X20, X19, [X31 + 0x30]
	0x01D991E8 LDP X22, X21, [X31 + 0x20]
	0x01D991EC LDP X24, X23, [X31 + 0x10]
	0x01D991F0 LDR X30, [X31], #0x40
	0x01D991F4 RET
	0x01D991F8 STP X30, X25, [X31 - 0x40]!
	0x01D991FC STP X24, X23, [X31 + 0x10]
	0x01D99200 STP X22, X21, [X31 + 0x20]
	0x01D99204 STP X20, X19, [X31 + 0x30]
	0x01D99208 ADRP X24, 0x263F000
	0x01D9920C ADRP X22, 0x235D000
	0x01D99210 ADRP X23, 0x235B000
	0x01D99214 ADRP X25, 0x235D000
	0x01D99218 LDRB W8, [X24 + 0xA34]
	0x01D9921C LDR X22, [X22 + 0xD98]
	0x01D99220 LDR X23, [X23 + 0xE70]
	0x01D99224 LDR X25, [X25 + 0xF50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2640000
	005 Move W8, [X20+2601]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x235E000
	012 Move X0, [X0+2680]
	013 Call 0x1C17CF4
	014 Move X0, 0x235E000
	015 Move X0, [X0+3856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2601], W8
	019 Move W8, [X19+88]
	020 Compare W8, 0
	021 JumpIfEqual {29}
	022 Move [X19+88], W31
	023 Move X0, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Call HandGrenade.ExplodeInternal, X0
	028 Return 
	029 Move X20, 0x235E000
	030 Move X20, [X20+2680]
	031 Move X0, [X20]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X19
	037 Move X1, X31
	038 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	039 Move X0, [X19+56]
	040 Compare X0, 0
	041 JumpIfEqual {123}
	042 Move X1, X31
	043 Call NetworkRunner.get_Stage, X0
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Return 
	049 Move X0, [X19+64]
	050 Compare X0, 0
	051 JumpIfEqual {123}
	052 Move X1, X31
	053 Call NetworkObject.GetLocalAuthorityMask, X0
	054 And W31, W0, 7
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {23}
	059 Move X8, [X19+56]
	060 Compare X8, 0
	061 JumpIfEqual {123}
	062 Move X0, [X8+80]
	063 Compare X0, 0
	064 JumpIfEqual {123}
	065 Move X1, X31
	066 Call Simulation.HasAnyActiveConnections, X0
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {45}
	071 Move X8, [X19+56]
	072 Compare X8, 0
	073 JumpIfEqual {123}
	074 Move X0, [X8+80]
	075 Move W1, 8
	076 Move X2, X31
	077 Call SimulationMessage.Allocate, X0, X1
	078 Move X8, [X19+64]
	079 Compare X8, 0
	080 JumpIfEqual {123}
	081 Move X8, [X8+32]
	082 Move X20, X0
	083 Compare X8, 0
	084 JumpIfEqual {103}
	085 Move W0, [X8]
	086 Move X0, [X20]
	087 Move X19, [X19+64]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Move X8, 0x235E000
	093 Move X8, [X8+3856]
	094 Move X1, X19
	095 Move X20, [X31+16]
	096 Move X19, [X31+24]
	097 Move W2, 7
	098 Move X0, [X8]
	099 Move X3, X31
	100 Move X30, [X31+32]
	101 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	102 Return 
	103 Move X0, X31
	104 Move W1, [X19+104]
	105 Move W2, 1
	106 Move X3, X31
	107 Call RpcHeader.Create, X0, X1, X2
	108 Move [X20+28], X0
	109 Compare X20, 0
	110 JumpIfEqual {123}
	111 Move W8, 64
	112 Move [X20+12], W8
	113 Move X0, [X19+56]
	114 Compare X0, 0
	115 JumpIfEqual {123}
	116 Move X1, X20
	117 Move X20, [X31+16]
	118 Move X19, [X31+24]
	119 Move X2, X31
	120 Move X30, [X31+32]
	121 Call NetworkRunner.SendRpc, X0, X1
	122 Return 
	123 Call 0x1C17F20

Method: System.Void ExplodeInternal()

Disassembly:
	0x01D98E18 MOVZ W8, 0x1
	0x01D98E1C STRB W8, [X21 + 0xA32]
	0x01D98E20 CBZ X19, 0x1D98E84
	0x01D98E24 ADRP X10, 0x235E000
	0x01D98E28 LDR X10, [X10 + 0xF20]
	0x01D98E2C MOVZ W9, 0x1
	0x01D98E30 LDR W8, [X20 + 0x24]
	0x01D98E34 STRB W9, [X19 + 0x58]
	0x01D98E38 LDR X9, [X19]
	0x01D98E3C LDR X1, [X10]
	0x01D98E40 LDRB W11, [X9 + 0x130]
	0x01D98E44 LDRB W10, [X1 + 0x130]
	0x01D98E48 CMP W11, W10
	0x01D98E4C B.CC 0x1D98E7C
	0x01D98E50 LDR X9, [X9 + 0xC8]
	0x01D98E54 ADD X9, X9, X10, 0x3, LSL
	0x01D98E58 LDUR X9, [X9 - 0x8]
	0x01D98E5C CMP X9, X1
	0x01D98E60 B.NE 0x1D98E7C
	0x01D98E64 MOV X0, X19
	0x01D98E68 LDP X20, X19, [X31 + 0x10]
	0x01D98E6C CMP W8, 0x0
	0x01D98E70 CSET W1, NE
	0x01D98E74 LDP X30, X21, [X31], #0x20
	0x01D98E78 B 0x1D98228
	0x01D98E7C MOV X0, X19
	0x01D98E80 BL 0x1C171E0
	0x01D98E84 BL 0x1C16F20
	0x01D98E88 LDR W0, [X0 + 0x80]
	0x01D98E8C RET
	0x01D98E90 LDR X0, [X0 + 0x88]
	0x01D98E94 RET
	0x01D98E98 STR X30, [X31 - 0x40]!
	0x01D98E9C STP X24, X23, [X31 + 0x10]
	0x01D98EA0 STP X22, X21, [X31 + 0x20]
	0x01D98EA4 STP X20, X19, [X31 + 0x30]
	0x01D98EA8 ADRP X20, 0x2640000
	0x01D98EAC LDRB W8, [X20 + 0xA33]
	0x01D98EB0 MOV X19, X0
	0x01D98EB4 TBNZ X8, 0x0, 0x1D98EF0
	0x01D98EB8 ADRP X0, 0x235C000
	0x01D98EBC LDR X0, [X0 + 0xE70]
	0x01D98EC0 BL 0x1C16CF4
	0x01D98EC4 ADRP X0, 0x235E000
	0x01D98EC8 LDR X0, [X0 + 0xF48]
	0x01D98ECC BL 0x1C16CF4
	0x01D98ED0 ADRP X0, 0x235E000
	0x01D98ED4 LDR X0, [X0 + 0xF50]
	0x01D98ED8 BL 0x1C16CF4
	0x01D98EDC ADRP X0, 0x235E000
	0x01D98EE0 LDR X0, [X0 + 0xD98]
	0x01D98EE4 BL 0x1C16CF4
	0x01D98EE8 MOVZ W8, 0x1
	0x01D98EEC STRB W8, [X20 + 0xA33]
	0x01D98EF0 MOV X0, X19
	0x01D98EF4 MOV X1, X31
	0x01D98EF8 BL 0x1E73F88
	0x01D98EFC LDR X0, [X19 + 0x40]
	0x01D98F00 CBZ X0, 0x1D991E4
	0x01D98F04 LDRB W8, [X0 + 0x60]
	0x01D98F08 TBNZ X8, 0x1, 0x1D991E4
	0x01D98F0C MOV X1, X31
	0x01D98F10 BL 0x1E93588
	0x01D98F14 TBZ X0, 0x0, 0x1D991E4
	0x01D98F18 ADRP X22, 0x235E000
	0x01D98F1C LDR X22, [X22 + 0xD98]
	0x01D98F20 LDR W9, [X19 + 0x80]
	0x01D98F24 LDR X8, [X22]
	0x01D98F28 CMP W9, 0x1
	0x01D98F2C LDR X8, [X8 + 0xB8]
	0x01D98F30 B.NE 0x1D98FA4
	0x01D98F34 ADRP X23, 0x235C000
	0x01D98F38 LDR X20, [X8 + 0x98]
	0x01D98F3C LDR X23, [X23 + 0xE70]
	0x01D98F40 LDR X0, [X23]
	0x01D98F44 BL 0x1C16F10
	0x01D98F48 ADRP X8, 0x235E000
	0x01D98F4C LDR X8, [X8 + 0xF50]
	0x01D98F50 MOV X1, X19
	0x01D98F54 MOV X3, X31
	0x01D98F58 MOV X21, X0
	0x01D98F5C LDR X2, [X8]
	0x01D98F60 BL 0x3314368
	0x01D98F64 MOV X0, X20
	0x01D98F68 MOV X1, X21
	0x01D98F6C MOV X2, X31
	0x01D98F70 BL 0x33C0DE4
	0x01D98F74 LDR X1, [X23]
	0x01D98F78 CBZ X0, 0x1D99014
	0x01D98F7C LDR X8, [X0]
	0x01D98F80 CMP X8, X1
	0x01D98F84 B.NE 0x1D991C4
	0x01D98F88 LDR X8, [X22]
	0x01D98F8C LDR X8, [X8 + 0xB8]
	0x01D98F90 STR X0, [X8 + 0x98]
	0x01D98F94 LDR X9, [X0]
	0x01D98F98 CMP X9, X1
	0x01D98F9C B.EQ 0x1D99020
	0x01D98FA0 B 0x1D991C4
	0x01D98FA4 ADRP X23, 0x235C000
	0x01D98FA8 LDR X20, [X8 + 0x88]
	0x01D98FAC LDR X23, [X23 + 0xE70]
	0x01D98FB0 LDR X0, [X23]
	0x01D98FB4 BL 0x1C16F10
	0x01D98FB8 ADRP X8, 0x235E000
	0x01D98FBC LDR X8, [X8 + 0xF50]
	0x01D98FC0 MOV X1, X19
	0x01D98FC4 MOV X3, X31
	0x01D98FC8 MOV X21, X0
	0x01D98FCC LDR X2, [X8]
	0x01D98FD0 BL 0x3314368
	0x01D98FD4 MOV X0, X20
	0x01D98FD8 MOV X1, X21
	0x01D98FDC MOV X2, X31
	0x01D98FE0 BL 0x33C0DE4
	0x01D98FE4 LDR X1, [X23]
	0x01D98FE8 CBZ X0, 0x1D99088
	0x01D98FEC LDR X8, [X0]
	0x01D98FF0 CMP X8, X1
	0x01D98FF4 B.NE 0x1D991C4
	0x01D98FF8 LDR X8, [X22]
	0x01D98FFC LDR X8, [X8 + 0xB8]
	0x01D99000 STR X0, [X8 + 0x88]
	0x01D99004 LDR X9, [X0]
	0x01D99008 CMP X9, X1
	0x01D9900C B.EQ 0x1D99094
	0x01D99010 B 0x1D991C4
	0x01D99014 LDR X8, [X22]
	0x01D99018 LDR X8, [X8 + 0xB8]
	0x01D9901C STR X0, [X8 + 0x98]
	0x01D99020 LDR X20, [X8 + 0x78]
	0x01D99024 MOV X0, X1
	0x01D99028 BL 0x1C16F10
	0x01D9902C ADRP X24, 0x235D000
	0x01D99030 LDR X24, [X24 + 0xF48]
	0x01D99034 MOV X1, X19
	0x01D99038 MOV X3, X31
	0x01D9903C MOV X21, X0
	0x01D99040 LDR X2, [X24]
	0x01D99044 BL 0x3314368
	0x01D99048 MOV X0, X20
	0x01D9904C MOV X1, X21
	0x01D99050 MOV X2, X31
	0x01D99054 BL 0x33C0DE4
	0x01D99058 LDR X1, [X23]
	0x01D9905C CBZ X0, 0x1D990FC
	0x01D99060 LDR X8, [X0]
	0x01D99064 CMP X8, X1
	0x01D99068 B.NE 0x1D991C4
	0x01D9906C LDR X8, [X22]
	0x01D99070 LDR X8, [X8 + 0xB8]
	0x01D99074 STR X0, [X8 + 0x78]
	0x01D99078 LDR X9, [X0]
	0x01D9907C CMP X9, X1
	0x01D99080 B.EQ 0x1D99108
	0x01D99084 B 0x1D991C4
	0x01D99088 LDR X8, [X22]
	0x01D9908C LDR X8, [X8 + 0xB8]
	0x01D99090 STR X0, [X8 + 0x88]
	0x01D99094 LDR X20, [X8 + 0x68]
	0x01D99098 MOV X0, X1
	0x01D9909C BL 0x1C16F10
	0x01D990A0 ADRP X24, 0x235D000

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], D14
	003 Move [X31+120], D13
	004 Move [X31+128], D12
	005 Move [X31+136], D11
	006 Move [X31+144], D10
	007 Move [X31+152], D9
	008 Move [X31+160], D8
	009 Move [X31+168], X30
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X20, 0x2641000
	015 Move W8, [X20+2602]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0x235F000
	022 Move X0, [X0+3848]
	023 Call 0x1C17CF4
	024 Move X0, 0x235F000
	025 Move X0, [X0+2904]
	026 Call 0x1C17CF4
	027 Move X0, 0x235F000
	028 Move X0, [X0+2912]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+2602], W8
	032 Move X0, X19
	033 Call HandGrenade.get_isExploded, X0
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {182}
	038 Move W1, 1
	039 Move X0, X19
	040 Call HandGrenade.set_isExploded, X0, X1
	041 Move X0, [X19+128]
	042 Compare X0, 0
	043 JumpIfEqual {196}
	044 Move W1, 1
	045 Move X2, X31
	046 Call GrabbableItem.SetIsHidden, X0, X1
	047 Move X0, X31
	048 Call TickTimer.get_None
	049 And X1, X0, 0
	050 Move X0, X19
	051 Call HandGrenade.set_life, X0, X1
	052 Move X0, X19
	053 Move W1, W31
	054 Call HandGrenade.set_pausedRemainingTicks, X0, X1
	055 Move X20, [X19+56]
	056 Move X21, [X19+160]
	057 Move X0, X19
	058 Move X1, X31
	059 Call Component.get_transform, X0
	060 Compare X0, 0
	061 JumpIfEqual {196}
	062 Move X1, X31
	063 Call Transform.get_position, X0
	064 Move X8, 0x235F000
	065 Move X8, [X8+2904]
	066 Add X0, X31, 64
	067 Move [X31+64], X31
	068 Move [X31+72], X31
	069 Move X1, [X8]
	070 Call Nullable`1<Vector3>..ctor, X0, X1
	071 Move X22, 0x2641000
	072 Move W8, [X22+1939]
	073 Compare W8, 0
	074 JumpIfNotEqual {80}
	075 Move X0, 0x235D000
	076 Move X0, [X0+1448]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X22+1939], W8
	080 Move X8, 0x235D000
	081 Move X8, [X8+1448]
	082 Move X9, 0x235F000
	083 Add X0, X31, 40
	084 Move X8, [X8]
	085 Move X8, [X8+184]
	086 Move X9, [X9+2912]
	087 Move S0, [X8]
	088 Move S1, [X8+4]
	089 Move S2, [X8+8]
	090 Move S3, [X8+12]
	091 Move X1, [X9]
	092 Move [X31+40], X31
	093 Move [X31+48], X31
	094 Move [X31+56], W31
	095 Call Nullable`1<Quaternion>..ctor, X0, X1
	096 Compare X20, 0
	097 JumpIfEqual {196}
	098 Move X8, 0x235F000
	099 Move X2, [X31+64]
	100 Move X3, [X31+72]
	101 Move X8, [X8+3848]
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 Move W9, [X31+56]
	104 Add X4, X31, 80
	105 Move X8, [X8]
	106 Move X0, X20
	107 Move X1, X21
	108 Move X5, X31
	109 Move X6, X31
	110 Move W7, W31
	111 Move [X31+5], V0
	112 Move [X31+96], W9
	113 Move [X31], X8
	114 Call 0x222C8DC, X0, X1, X2, X3, X4, X5, X6
	115 Move X0, X19
	116 Call HandGrenade.HandleIsExplodedChanged, X0
	117 Move X20, [X19+128]
	118 Move X0, X19
	119 Move X1, X31
	120 Call Component.get_transform, X0
	121 Compare X0, 0
	122 JumpIfEqual {196}
	123 Move X1, X31
	124 Call Transform.get_position, X0
	125 Move X0, X19
	126 Move X1, X31
	127 Move V8, V0
	128 Move V9, V1
	129 Move V10, V2
	130 Call Component.get_transform, X0
	131 Compare X0, 0
	132 JumpIfEqual {196}
	133 Move X1, X31
	134 Call Transform.get_rotation, X0
	135 Move X21, 0x2641000
	136 Move W8, [X21+1923]
	137 Move V11, V0
	138 Move V12, V1
	139 Move V13, V2
	140 Move V14, V3
	141 Compare W8, 0
	142 JumpIfNotEqual {148}
	143 Move X0, 0x235C000
	144 Move X0, [X0+1440]
	145 Call 0x1C17CF4
	146 Move W8, 1
	147 Move [X21+1923], W8
	148 Compare X20, 0
	149 JumpIfEqual {196}
	150 Move X8, 0x235B000
	151 Move X8, [X8+1440]
	152 Move X0, X20
	153 Move V3, V11
	154 Move V4, V12
	155 Move X8, [X8]
	156 Move V5, V13
	157 Move V6, V14
	158 Move W1, W31
	159 Move X8, [X8+184]
	160 Move W2, W31
	161 Move X3, X31
	162 Move S1, [X8+4]
	163 Move S0, [X8+8]
	164 Move V2, [X8]
	165 Move [X31+20], S1
	166 Move [X31+28], S0
	167 Move [X31+16], S2
	168 Move [X31+4], S1
	169 Move [X31+12], S0
	170 Move [X31], S2
	171 Move V0, V8
	172 Move V1, V9
	173 Move V2, V10
	174 Call GrabbableItem.Release, X0, X1, X2, X3, X4, X5, X6
	175 Move X0, [X19+128]
	176 Compare X0, 0
	177 JumpIfEqual {196}
	178 Move S0, 5
	179 Move W1, 2
	180 Move X2, X31
	181 Call GrabbableItem.StartTimeoutTimer, X0, X1, V0
	182 Move X20, [X31+192]
	183 Move X19, [X31+200]
	184 Move X22, [X31+176]
	185 Move X21, [X31+184]
	186 Move X30, [X31+168]
	187 Move D9, [X31+152]
	188 Move D8, [X31+160]
	189 Move D11, [X31+136]
	190 Move D10, [X31+144]
	191 Move D13, [X31+120]
	192 Move D12, [X31+128]
	193 Move V14, [X31+112]
	194 Add X31, X31, 208
	195 Return 
	196 Call 0x1C17F20

Method: System.Void RPC_Use(System.Boolean shortTimer = False)

Disassembly:
	0x01D99228 MOV W21, W2
	0x01D9922C MOV X20, X1
	0x01D99230 MOV X19, X0
	0x01D99234 TBNZ X8, 0x0, 0x1D99270
	0x01D99238 ADRP X0, 0x235B000
	0x01D9923C LDR X0, [X0 + 0xE70]
	0x01D99240 BL 0x1C16CF4
	0x01D99244 ADRP X0, 0x235D000
	0x01D99248 LDR X0, [X0 + 0xF48]
	0x01D9924C BL 0x1C16CF4
	0x01D99250 ADRP X0, 0x235D000
	0x01D99254 LDR X0, [X0 + 0xF50]
	0x01D99258 BL 0x1C16CF4
	0x01D9925C ADRP X0, 0x235D000
	0x01D99260 LDR X0, [X0 + 0xD98]
	0x01D99264 BL 0x1C16CF4
	0x01D99268 MOVZ W8, 0x1
	0x01D9926C STRB W8, [X24 + 0xA34]
	0x01D99270 AND W2, W21, 0x1
	0x01D99274 MOV X0, X19
	0x01D99278 MOV X1, X20
	0x01D9927C MOV X3, X31
	0x01D99280 BL 0x1E73F8C
	0x01D99284 LDR X8, [X22]
	0x01D99288 LDR X0, [X23]
	0x01D9928C LDR X8, [X8 + 0xB8]
	0x01D99290 LDR X20, [X8 + 0x98]
	0x01D99294 BL 0x1C16F10
	0x01D99298 LDR X2, [X25]
	0x01D9929C MOV X1, X19
	0x01D992A0 MOV X3, X31
	0x01D992A4 MOV X21, X0
	0x01D992A8 BL 0x3314368
	0x01D992AC MOV X0, X20
	0x01D992B0 MOV X1, X21
	0x01D992B4 MOV X2, X31
	0x01D992B8 BL 0x33C0FDC
	0x01D992BC LDR X1, [X23]
	0x01D992C0 CBZ X0, 0x1D992EC
	0x01D992C4 LDR X8, [X0]
	0x01D992C8 CMP X8, X1
	0x01D992CC B.NE 0x1D9950C
	0x01D992D0 LDR X8, [X22]
	0x01D992D4 LDR X8, [X8 + 0xB8]
	0x01D992D8 STR X0, [X8 + 0x98]
	0x01D992DC LDR X9, [X0]
	0x01D992E0 CMP X9, X1
	0x01D992E4 B.EQ 0x1D992F8
	0x01D992E8 B 0x1D9950C
	0x01D992EC LDR X8, [X22]
	0x01D992F0 LDR X8, [X8 + 0xB8]
	0x01D992F4 STR X0, [X8 + 0x98]
	0x01D992F8 ADRP X24, 0x235D000
	0x01D992FC LDR X20, [X8 + 0x78]
	0x01D99300 LDR X24, [X24 + 0xF48]
	0x01D99304 MOV X0, X1
	0x01D99308 BL 0x1C16F10
	0x01D9930C LDR X2, [X24]
	0x01D99310 MOV X1, X19
	0x01D99314 MOV X3, X31
	0x01D99318 MOV X21, X0
	0x01D9931C BL 0x3314368
	0x01D99320 MOV X0, X20
	0x01D99324 MOV X1, X21
	0x01D99328 MOV X2, X31
	0x01D9932C BL 0x33C0FDC
	0x01D99330 LDR X1, [X23]
	0x01D99334 CBZ X0, 0x1D99360
	0x01D99338 LDR X8, [X0]
	0x01D9933C CMP X8, X1
	0x01D99340 B.NE 0x1D9950C
	0x01D99344 LDR X8, [X22]
	0x01D99348 LDR X8, [X8 + 0xB8]
	0x01D9934C STR X0, [X8 + 0x78]
	0x01D99350 LDR X9, [X0]
	0x01D99354 CMP X9, X1
	0x01D99358 B.EQ 0x1D9936C
	0x01D9935C B 0x1D9950C
	0x01D99360 LDR X8, [X22]
	0x01D99364 LDR X8, [X8 + 0xB8]
	0x01D99368 STR X0, [X8 + 0x78]
	0x01D9936C LDR X20, [X8 + 0x58]
	0x01D99370 MOV X0, X1
	0x01D99374 BL 0x1C16F10
	0x01D99378 LDR X2, [X24]
	0x01D9937C MOV X1, X19
	0x01D99380 MOV X3, X31
	0x01D99384 MOV X21, X0
	0x01D99388 BL 0x3314368
	0x01D9938C MOV X0, X20
	0x01D99390 MOV X1, X21
	0x01D99394 MOV X2, X31
	0x01D99398 BL 0x33C0FDC
	0x01D9939C LDR X1, [X23]
	0x01D993A0 CBZ X0, 0x1D993CC
	0x01D993A4 LDR X8, [X0]
	0x01D993A8 CMP X8, X1
	0x01D993AC B.NE 0x1D9950C
	0x01D993B0 LDR X8, [X22]
	0x01D993B4 LDR X8, [X8 + 0xB8]
	0x01D993B8 STR X0, [X8 + 0x58]
	0x01D993BC LDR X9, [X0]
	0x01D993C0 CMP X9, X1
	0x01D993C4 B.EQ 0x1D993D8
	0x01D993C8 B 0x1D9950C
	0x01D993CC LDR X8, [X22]
	0x01D993D0 LDR X8, [X8 + 0xB8]
	0x01D993D4 STR X0, [X8 + 0x58]
	0x01D993D8 LDR X20, [X8 + 0x88]
	0x01D993DC MOV X0, X1
	0x01D993E0 BL 0x1C16F10
	0x01D993E4 LDR X2, [X25]
	0x01D993E8 MOV X1, X19
	0x01D993EC MOV X3, X31
	0x01D993F0 MOV X21, X0
	0x01D993F4 BL 0x3314368
	0x01D993F8 MOV X0, X20
	0x01D993FC MOV X1, X21
	0x01D99400 MOV X2, X31
	0x01D99404 BL 0x33C0FDC
	0x01D99408 LDR X1, [X23]
	0x01D9940C CBZ X0, 0x1D99438
	0x01D99410 LDR X8, [X0]
	0x01D99414 CMP X8, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2640000
	006 Move W8, [X21+2603]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x235E000
	014 Move X0, [X0+2680]
	015 Call 0x1C17CF4
	016 Move X0, 0x235E000
	017 Move X0, [X0+3864]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2603], W8
	021 Move W8, [X19+88]
	022 Compare W8, 0
	023 JumpIfEqual {59}
	024 Move [X19+88], W31
	025 Move X0, X19
	026 Call HandGrenade.get_isPinPulled, X0
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {75}
	031 Move W1, 1
	032 Move X0, X19
	033 Call HandGrenade.set_isPinPulled, X0, X1
	034 Move X0, [X19+56]
	035 And W31, W20, 1
	036 Move S0, 5
	037 Move S1, 1
	038 NotImplemented "Instruction FCSEL not yet implemented."
	039 Move X1, X31
	040 Call TickTimer.CreateFromSeconds, X0, V0
	041 And X1, X0, 0
	042 Move X0, X19
	043 Call HandGrenade.set_life, X0, X1
	044 Move X0, X19
	045 Move W1, W31
	046 Call HandGrenade.set_pausedRemainingTicks, X0, X1
	047 Move X0, [X19+56]
	048 Move S0, 20
	049 Move X1, X31
	050 Call TickTimer.CreateFromSeconds, X0, V0
	051 And X1, X0, 0
	052 Move X0, X19
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Call HandGrenade.set_timerPins, X0, X1
	058 Return 
	059 Move X21, 0x235E000
	060 Move X21, [X21+2680]
	061 Move X0, [X21]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, X19
	067 Move X1, X31
	068 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	069 Move X0, [X19+56]
	070 Compare X0, 0
	071 JumpIfEqual {158}
	072 Move X1, X31
	073 Call NetworkRunner.get_Stage, X0
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X20, [X31+16]
	076 Move X19, [X31+24]
	077 Move X30, [X31+32]
	078 Move X21, [X31+40]
	079 Return 
	080 Move X0, [X19+64]
	081 Compare X0, 0
	082 JumpIfEqual {158}
	083 Move X1, X31
	084 Call NetworkObject.GetLocalAuthorityMask, X0
	085 And W31, W0, 7
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfEqual {25}
	090 Move X8, [X19+56]
	091 Compare X8, 0
	092 JumpIfEqual {158}
	093 Move X0, [X8+80]
	094 Compare X0, 0
	095 JumpIfEqual {158}
	096 Move X1, X31
	097 Call Simulation.HasAnyActiveConnections, X0
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {75}
	102 Move X8, [X19+56]
	103 Compare X8, 0
	104 JumpIfEqual {158}
	105 Move X0, [X8+80]
	106 Move W1, 12
	107 Move X2, X31
	108 Call SimulationMessage.Allocate, X0, X1
	109 Move X8, [X19+64]
	110 Compare X8, 0
	111 JumpIfEqual {158}
	112 Move X8, [X8+32]
	113 Move X21, X0
	114 Compare X8, 0
	115 JumpIfEqual {135}
	116 Move W0, [X8]
	117 Move X0, [X21]
	118 Move X19, [X19+64]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {123}
	122 Call 0x1C17DFC
	123 Move X8, 0x235E000
	124 Move X8, [X8+3864]
	125 Move X1, X19
	126 Move X20, [X31+16]
	127 Move X19, [X31+24]
	128 Move W2, 7
	129 Move X0, [X8]
	130 Move X3, X31
	131 Move X30, [X31+32]
	132 Move X21, [X31+40]
	133 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	134 Return 
	135 Move X0, X31
	136 Move W1, [X19+104]
	137 Move W2, 2
	138 Move X3, X31
	139 Call RpcHeader.Create, X0, X1, X2
	140 And W8, W20, 1
	141 Move [X21+28], X0
	142 Move [X21+36], W8
	143 Compare X21, 0
	144 JumpIfEqual {158}
	145 Move W8, 96
	146 Move [X21+12], W8
	147 Move X0, [X19+56]
	148 Compare X0, 0
	149 JumpIfEqual {158}
	150 Move X20, [X31+16]
	151 Move X19, [X31+24]
	152 Move X1, X21
	153 Move X2, X31
	154 Move X30, [X31+32]
	155 Move X21, [X31+40]
	156 Call NetworkRunner.SendRpc, X0, X1
	157 Return 
	158 Call 0x1C17F20

Method: System.Void ForceExplode()

Disassembly:
	0x01D99418 B.NE 0x1D9950C

ISIL:
	001 Call HandGrenade.ExplodeInternal, X0
	002 Return 

Method: System.Void HandleToggleUse()

Disassembly:
	0x01D9941C LDR X8, [X22]
	0x01D99420 LDR X8, [X8 + 0xB8]
	0x01D99424 STR X0, [X8 + 0x88]
	0x01D99428 LDR X9, [X0]
	0x01D9942C CMP X9, X1
	0x01D99430 B.EQ 0x1D99444
	0x01D99434 B 0x1D9950C
	0x01D99438 LDR X8, [X22]
	0x01D9943C LDR X8, [X8 + 0xB8]
	0x01D99440 STR X0, [X8 + 0x88]
	0x01D99444 LDR X20, [X8 + 0x68]
	0x01D99448 MOV X0, X1
	0x01D9944C BL 0x1C16F10
	0x01D99450 LDR X2, [X24]
	0x01D99454 MOV X1, X19
	0x01D99458 MOV X3, X31
	0x01D9945C MOV X21, X0
	0x01D99460 BL 0x3314368
	0x01D99464 MOV X0, X20
	0x01D99468 MOV X1, X21
	0x01D9946C MOV X2, X31
	0x01D99470 BL 0x33C0FDC
	0x01D99474 LDR X1, [X23]
	0x01D99478 CBZ X0, 0x1D994A4
	0x01D9947C LDR X8, [X0]
	0x01D99480 CMP X8, X1
	0x01D99484 B.NE 0x1D9950C
	0x01D99488 LDR X8, [X22]
	0x01D9948C LDR X8, [X8 + 0xB8]
	0x01D99490 STR X0, [X8 + 0x68]
	0x01D99494 LDR X9, [X0]
	0x01D99498 CMP X9, X1
	0x01D9949C B.EQ 0x1D994B0
	0x01D994A0 B 0x1D9950C
	0x01D994A4 LDR X8, [X22]
	0x01D994A8 LDR X8, [X8 + 0xB8]
	0x01D994AC STR X0, [X8 + 0x68]
	0x01D994B0 LDR X20, [X8 + 0x48]
	0x01D994B4 MOV X0, X1
	0x01D994B8 BL 0x1C16F10
	0x01D994BC LDR X2, [X24]
	0x01D994C0 MOV X1, X19
	0x01D994C4 MOV X3, X31
	0x01D994C8 MOV X21, X0
	0x01D994CC BL 0x3314368
	0x01D994D0 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2640000
	005 Move W8, [X20+2604]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x235B000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2604], W8
	016 Move X0, X19
	017 Call HandGrenade.get_isPinPulled, X0
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {57}
	022 Move X0, X19
	023 Move W1, W31
	024 Call HandGrenade.RPC_Use, X0, X1
	025 Move X8, 0x235B000
	026 Move X8, [X8+1432]
	027 Move X20, [X19+152]
	028 Move X0, [X8]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X20
	034 Move X1, X31
	035 Move X2, X31
	036 Call Object.op_Inequality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {57}
	041 Move X20, [X19+152]
	042 Move X0, X19
	043 Move X1, X31
	044 Call Component.get_transform, X0
	045 Compare X0, 0
	046 JumpIfEqual {61}
	047 Move X1, X31
	048 Call Transform.get_position, X0
	049 Move X0, X20
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move S3, 1
	053 Move X1, X31
	054 Move X30, [X31+32]
	055 Call SFXManager.PlaySFX, X0, X1, V0
	056 Return 
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X30, [X31+32]
	060 Return 
	061 Call 0x1C17F20

Method: System.Void HandleRespawned()

Disassembly:
	0x01D994D4 MOV X1, X21
	0x01D994D8 MOV X2, X31
	0x01D994DC BL 0x33C0FDC
	0x01D994E0 CBZ X0, 0x1D99510
	0x01D994E4 LDR X1, [X23]
	0x01D994E8 LDR X8, [X0]
	0x01D994EC CMP X8, X1
	0x01D994F0 B.NE 0x1D9950C
	0x01D994F4 LDR X8, [X22]
	0x01D994F8 LDR X8, [X8 + 0xB8]
	0x01D994FC STR X0, [X8 + 0x48]
	0x01D99500 LDR X8, [X0]
	0x01D99504 CMP X8, X1
	0x01D99508 B.EQ 0x1D9951C
	0x01D9950C BL 0x1C171E0
	0x01D99510 LDR X8, [X22]
	0x01D99514 LDR X8, [X8 + 0xB8]
	0x01D99518 STR X0, [X8 + 0x48]
	0x01D9951C LDP X20, X19, [X31 + 0x30]
	0x01D99520 LDP X22, X21, [X31 + 0x20]
	0x01D99524 LDP X24, X23, [X31 + 0x10]
	0x01D99528 LDP X30, X25, [X31], #0x40
	0x01D9952C RET
	0x01D99530 STR X30, [X31 - 0x30]!
	0x01D99534 STP X22, X21, [X31 + 0x10]
	0x01D99538 STP X20, X19, [X31 + 0x20]
	0x01D9953C ADRP X21, 0x263F000
	0x01D99540 ADRP X22, 0x235D000
	0x01D99544 ADRP X20, 0x235D000
	0x01D99548 LDRB W8, [X21 + 0xA35]
	0x01D9954C LDR X22, [X22 + 0xF58]
	0x01D99550 LDR X20, [X20 + 0xF60]
	0x01D99554 MOV X19, X0
	0x01D99558 TBNZ X8, 0x0, 0x1D9957C
	0x01D9955C ADRP X0, 0x235D000
	0x01D99560 LDR X0, [X0 + 0xF60]
	0x01D99564 BL 0x1C16CF4
	0x01D99568 ADRP X0, 0x235D000
	0x01D9956C LDR X0, [X0 + 0xF58]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call HandGrenade.get_isExploded, X0
	005 Move TEMP, X0
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfEqual {15}
	009 Move X0, X19
	010 Call HandGrenade.get_isPinPulled, X0
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {47}
	015 Move X0, X19
	016 Move W1, W31
	017 Call HandGrenade.set_isPinPulled, X0, X1
	018 Move X0, X19
	019 Move W1, W31
	020 Call HandGrenade.set_isExploded, X0, X1
	021 Move X0, [X19+128]
	022 Compare X0, 0
	023 JumpIfEqual {50}
	024 Move W1, W31
	025 Move X2, X31
	026 Call GrabbableItem.SetIsHidden, X0, X1
	027 Move X0, X31
	028 Call TickTimer.get_None
	029 And X1, X0, 0
	030 Move X0, X19
	031 Call HandGrenade.set_life, X0, X1
	032 Move X0, X19
	033 Move W1, W31
	034 Call HandGrenade.set_pausedRemainingTicks, X0, X1
	035 Move X0, X31
	036 Call TickTimer.get_None
	037 And X1, X0, 0
	038 Move X0, X19
	039 Call HandGrenade.set_timerPins, X0, X1
	040 Move X0, X19
	041 Call HandGrenade.HandleIsExplodedChanged, X0
	042 Move X0, X19
	043 Move X30, [X31+16]
	044 Move X19, [X31+24]
	045 Call HandGrenade.HandleIsPinPulledChanged, X0
	046 Return 
	047 Move X30, [X31+16]
	048 Move X19, [X31+24]
	049 Return 
	050 Call 0x1C17F20

Method: System.Void HandleDroppedFromDeath()

Disassembly:
	0x01D99570 BL 0x1C16CF4
	0x01D99574 MOVZ W8, 0x1
	0x01D99578 STRB W8, [X21 + 0xA35]
	0x01D9957C LDR X1, [X22]
	0x01D99580 MOV X0, X19
	0x01D99584 BL 0x21A3894
	0x01D99588 STR X0, [X19 + 0x88]
	0x01D9958C LDR X1, [X20]
	0x01D99590 MOV X0, X19
	0x01D99594 BL 0x21A3F50
	0x01D99598 STR X0, [X19 + 0x90]
	0x01D9959C LDP X20, X19, [X31 + 0x20]
	0x01D995A0 LDP X22, X21, [X31 + 0x10]
	0x01D995A4 LDR X30, [X31], #0x30
	0x01D995A8 RET
	0x01D995AC B 0x1D995B0
	0x01D995B0 SUB X31, X31, 0x20
	0x01D995B4 STP X30, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call HandGrenade.get_isExploded, X0
	005 Move TEMP, X0
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfEqual {25}
	009 Move X0, X19
	010 Call HandGrenade.get_isPinPulled, X0
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {25}
	015 Move X0, X31
	016 Call Random.get_value
	017 Move S1, 0.5
	018 NotImplemented "Instruction FCMP not yet implemented."
	019 Move X0, X19
	020 Move W1, W31
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Call HandGrenade.RPC_Use, X0, X1
	024 Return 
	025 Move X30, [X31+16]
	026 Move X19, [X31+24]
	027 Return 

Method: System.Void HandleGrabReleased(UnityEngine.Vector3 velocity)

Disassembly:
	0x01D995B8 MOV X19, X0
	0x01D995BC LDR X0, [X0 + 0x88]
	0x01D995C0 CBZ X0, 0x1D9963C
	0x01D995C4 MOV X1, X31
	0x01D995C8 BL 0x1D880C4
	0x01D995CC STR X0, [X31 + 0x8]
	0x01D995D0 ADD X0, X31, 0x8
	0x01D995D4 MOV X1, X31
	0x01D995D8 BL 0x1E74DE4
	0x01D995DC TBZ X0, 0x0, 0x1D99628
	0x01D995E0 MOV X0, X19
	0x01D995E4 BL 0x1D997E8
	0x01D995E8 TBNZ X0, 0x0, 0x1D99630
	0x01D995EC ADRP X8, 0xFFFFFFFFFED51000
	0x01D995F0 ADRP X9, 0xFFFFFFFFFED51000
	0x01D995F4 LDR W0, [X19 + 0x80]
	0x01D995F8 LDR V0, [X8 + 0x44C]
	0x01D995FC LDR V1, [X9 + 0x2C8]
	0x01D99600 MOV X1, X31
	0x01D99604 BL 0x1DC2324
	0x01D99608 LDR X0, [X19 + 0x88]
	0x01D9960C CBZ X0, 0x1D9963C
	0x01D99610 LDP S0, S1, [X0 + 0xA8]
	0x01D99614 LDR V2, [X0 + 0xB0]
	0x01D99618 MOV W1, W31
	0x01D9961C MOV X2, X31
	0x01D99620 BL 0x1D89FD0
	0x01D99624 B 0x1D99630
	0x01D99628 MOV X0, X19
	0x01D9962C BL 0x1D99C00
	0x01D99630 LDP X30, X19, [X31 + 0x10]
	0x01D99634 ADD X31, X31, 0x20
	0x01D99638 RET
	0x01D9963C BL 0x1C16F20
	0x01D99640 STR D10, [X31 - 0x30]!
	0x01D99644 STP D9, D8, [X31 + 0x8]
	0x01D99648 STR X30, [X31 + 0x18]
	0x01D9964C STP X20, X19, [X31 + 0x20]
	0x01D99650 ADRP X20, 0x263F000
	0x01D99654 LDRB W8, [X20 + 0xA36]
	0x01D99658 MOV X19, X0
	0x01D9965C TBNZ X8, 0x0, 0x1D99674
	0x01D99660 ADRP X0, 0x235C000
	0x01D99664 LDR X0, [X0 + 0x7C8]
	0x01D99668 BL 0x1C16CF4
	0x01D9966C MOVZ W8, 0x1
	0x01D99670 STRB W8, [X20 + 0xA36]
	0x01D99674 MOV X0, X19
	0x01D99678 MOV X1, X31

ISIL:
	001 Move [X31-48], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2640000
	008 Move W8, [X20+1924]
	009 Move V8, V2
	010 Move V9, V1
	011 Move V10, V0
	012 Move X19, X0
	013 Compare W8, 0
	014 JumpIfNotEqual {20}
	015 Move X0, 0x235B000
	016 Move X0, [X0+1448]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1924], W8
	020 Move X8, 0x235B000
	021 Move X8, [X8+1448]
	022 Move X0, [X8]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Multiply S0, S10, S10
	028 Multiply S1, S9, S9
	029 Multiply S2, S8, S8
	030 Add S0, S0, S1
	031 Add S0, S2, S0
	032 NotImplemented "Instruction FSQRT not yet implemented."
	033 Move S1, 20
	034 NotImplemented "Instruction FCMP not yet implemented."
	035 Move X0, X19
	036 Call HandGrenade.get_isExploded, X0
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {47}
	041 Move X0, X19
	042 Call HandGrenade.get_isPinPulled, X0
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {54}
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X30, [X31+24]
	050 Move D9, [X31+8]
	051 Move D8, [X31+16]
	052 Move V10, [X31+48]
	053 Return 
	054 Move X0, X19
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X30, [X31+24]
	058 Move D9, [X31+8]
	059 Move D8, [X31+16]
	060 Move W1, W31
	061 Move V10, [X31+48]
	062 Call HandGrenade.RPC_Use, X0, X1
	063 Return 

Method: System.Void OnCollisionEnter(UnityEngine.Collision collision)

Disassembly:
	0x01D9967C BL 0x3C32E90
	0x01D99680 CBZ X0, 0x1D99744
	0x01D99684 ADRP X19, 0x235C000
	0x01D99688 LDR X19, [X19 + 0x7C8]
	0x01D9968C MOV X1, X31
	0x01D99690 BL 0x3C3F58C
	0x01D99694 LDR X0, [X19]
	0x01D99698 MOV V8.16B, V0.16B
	0x01D9969C MOV V9.16B, V1.16B
	0x01D996A0 MOV V10.16B, V2.16B
	0x01D996A4 LDR W8, [X0 + 0xE0]
	0x01D996A8 CBNZ W8, 0x1D996B0
	0x01D996AC BL 0x1C16DFC
	0x01D996B0 ADRP X20, 0x263F000
	0x01D996B4 LDRB W8, [X20 + 0x85D]
	0x01D996B8 CBNZ W8, 0x1D996D0
	0x01D996BC ADRP X0, 0x235C000
	0x01D996C0 LDR X0, [X0 + 0x7C8]
	0x01D996C4 BL 0x1C16CF4
	0x01D996C8 MOVZ W8, 0x1
	0x01D996CC STRB W8, [X20 + 0x85D]
	0x01D996D0 LDR X0, [X19]
	0x01D996D4 LDR W8, [X0 + 0xE0]
	0x01D996D8 CBNZ W8, 0x1D996E4
	0x01D996DC BL 0x1C16DFC
	0x01D996E0 LDR X0, [X19]
	0x01D996E4 LDR X8, [X0 + 0xB8]
	0x01D996E8 LDR X0, [X8]
	0x01D996EC CBZ X0, 0x1D99744
	0x01D996F0 MOV X1, X31
	0x01D996F4 BL 0x1DBFE4C
	0x01D996F8 CBZ X0, 0x1D99744
	0x01D996FC MOV X1, X31
	0x01D99700 BL 0x3C3F58C
	0x01D99704 FSUB S0, S8, S0
	0x01D99708 FSUB S1, S9, S1
	0x01D9970C FSUB S2, S10, S2
	0x01D99710 FMUL S0, S0, S0
	0x01D99714 FMUL S1, S1, S1
	0x01D99718 FMUL S2, S2, S2
	0x01D9971C FADD S0, S0, S1
	0x01D99720 LDP X20, X19, [X31 + 0x20]
	0x01D99724 LDR X30, [X31 + 0x18]
	0x01D99728 LDP D9, D8, [X31 + 0x8]
	0x01D9972C FADD S0, S2, S0
	0x01D99730 FMOV S1, 0.25
	0x01D99734 FCMP S0, S1
	0x01D99738 CSET W0, MI
	0x01D9973C LDR V10, [X31], #0x30
	0x01D99740 RET
	0x01D99744 BL 0x1C16F20
	0x01D99748 SUB X31, X31, 0x30
	0x01D9974C STP X30, X21, [X31 + 0x10]
	0x01D99750 STP X20, X19, [X31 + 0x20]
	0x01D99754 CBZ X1, 0x1D997E4
	0x01D99758 MOV X19, X1
	0x01D9975C MOV X21, X0
	0x01D99760 MOV X0, X1
	0x01D99764 MOV X1, X31
	0x01D99768 BL 0x1D880C4
	0x01D9976C STR X0, [X31 + 0x8]
	0x01D99770 ADD X0, X31, 0x8
	0x01D99774 MOV X1, X31
	0x01D99778 BL 0x1E74DE4
	0x01D9977C MOV W20, W0
	0x01D99780 TBNZ X0, 0x0, 0x1D997CC
	0x01D99784 LDR X0, [X21 + 0x88]
	0x01D99788 CBZ X0, 0x1D997E4
	0x01D9978C MOV X1, X31
	0x01D99790 BL 0x1D880C4
	0x01D99794 LDR X8, [X21 + 0x88]
	0x01D99798 CBZ X8, 0x1D997E4
	0x01D9979C MOV X21, X0
	0x01D997A0 MOV X0, X8
	0x01D997A4 MOV X1, X31
	0x01D997A8 BL 0x1D89E1C
	0x01D997AC MOVZ W2, 0x1
	0x01D997B0 MOV X0, X19
	0x01D997B4 MOV X1, X21
	0x01D997B8 MOV W3, W31
	0x01D997BC MOV X4, X31
	0x01D997C0 MOV X5, X31
	0x01D997C4 MOV X6, X31
	0x01D997C8 BL 0x1D88C7C
	0x01D997CC ORN W8, W31, W20, 0x0
	0x01D997D0 LDP X20, X19, [X31 + 0x20]
	0x01D997D4 LDP X30, X21, [X31 + 0x10]
	0x01D997D8 AND W0, W8, 0x1
	0x01D997DC ADD X31, X31, 0x30
	0x01D997E0 RET
	0x01D997E4 BL 0x1C16F20
	0x01D997E8 STR D10, [X31 - 0x70]!
	0x01D997EC STP D9, D8, [X31 + 0x10]
	0x01D997F0 STP X30, X27, [X31 + 0x20]
	0x01D997F4 STP X26, X25, [X31 + 0x30]
	0x01D997F8 STP X24, X23, [X31 + 0x40]
	0x01D997FC STP X22, X21, [X31 + 0x50]
	0x01D99800 STP X20, X19, [X31 + 0x60]
	0x01D99804 ADRP X20, 0x263F000
	0x01D99808 LDRB W8, [X20 + 0xA37]
	0x01D9980C MOV X19, X0
	0x01D99810 TBNZ X8, 0x0, 0x1D99864
	0x01D99814 ADRP X0, 0x235D000
	0x01D99818 LDR X0, [X0 + 0xA70]
	0x01D9981C BL 0x1C16CF4
	0x01D99820 ADRP X0, 0x235D000
	0x01D99824 LDR X0, [X0 + 0xF58]
	0x01D99828 BL 0x1C16CF4
	0x01D9982C ADRP X0, 0x235A000
	0x01D99830 LDR X0, [X0 + 0x5D8]
	0x01D99834 BL 0x1C16CF4
	0x01D99838 ADRP X0, 0x235A000
	0x01D9983C LDR X0, [X0 + 0x598]

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x2640000
	010 Move X21, 0x235E000
	011 Move W8, [X22+2605]
	012 Move X21, [X21+3872]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x235E000
	020 Move X0, [X0+3872]
	021 Call 0x1C17CF4
	022 Move X0, 0x235B000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+2605], W8
	027 Move X0, [X21]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X21]
	033 Compare X20, 0
	034 JumpIfEqual {154}
	035 Move X8, [X0+184]
	036 Move X0, X20
	037 Move X1, X31
	038 Move W21, [X8]
	039 Call Collision.get_gameObject, X0
	040 Compare X0, 0
	041 JumpIfEqual {154}
	042 Move X1, X31
	043 Call GameObject.get_layer, X0
	044 Move W1, W0
	045 Move X0, X21
	046 Move X2, X31
	047 Call LayerMaskExtensions.Contains, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {134}
	052 Move X8, 0x235B000
	053 Move X8, [X8+1432]
	054 Move X21, [X19+56]
	055 Move X0, [X8]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X21
	061 Move X1, X31
	062 Move X2, X31
	063 Call Object.op_Equality, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {134}
	068 Move X0, [X19+56]
	069 Compare X0, 0
	070 JumpIfEqual {154}
	071 Move X1, [X19+64]
	072 Move X2, X31
	073 Call NetworkRunner.Exists, X0, X1
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {134}
	078 Move X0, [X19+64]
	079 Compare X0, 0
	080 JumpIfEqual {134}
	081 Move W8, [X0+96]
	082 Move TEMP, X8
	083 And TEMP, TEMP, 2
	084 Compare TEMP, 2
	085 JumpIfEqual {134}
	086 Move X1, X31
	087 Call NetworkObject.get_HasStateAuthority, X0
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {134}
	092 Move X0, X19
	093 Call HandGrenade.get_isExploded, X0
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfEqual {134}
	098 Move X0, X19
	099 Call HandGrenade.get_isPinPulled, X0
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfNotEqual {134}
	104 Move X0, X20
	105 Move X1, X31
	106 Call Collision.get_relativeVelocity, X0
	107 Move X20, 0x2640000
	108 Move W8, [X20+1924]
	109 Move V8, V0
	110 Move V9, V1
	111 Move V10, V2
	112 Compare W8, 0
	113 JumpIfNotEqual {119}
	114 Move X0, 0x235B000
	115 Move X0, [X0+1448]
	116 Call 0x1C17CF4
	117 Move W8, 1
	118 Move [X20+1924], W8
	119 Move X8, 0x235B000
	120 Move X8, [X8+1448]
	121 Move X0, [X8]
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfNotEqual {126}
	125 Call 0x1C17DFC
	126 Multiply S0, S8, S8
	127 Multiply S1, S9, S9
	128 Multiply S2, S10, S10
	129 Add S0, S0, S1
	130 Add S0, S2, S0
	131 NotImplemented "Instruction FSQRT not yet implemented."
	132 Move S1, 25
	133 NotImplemented "Instruction FCMP not yet implemented."
	134 Move X20, [X31+48]
	135 Move X19, [X31+56]
	136 Move X22, [X31+32]
	137 Move X21, [X31+40]
	138 Move X30, [X31+24]
	139 Move D9, [X31+8]
	140 Move D8, [X31+16]
	141 Move V10, [X31+64]
	142 Return 
	143 Move X0, X19
	144 Move X20, [X31+48]
	145 Move X19, [X31+56]
	146 Move X22, [X31+32]
	147 Move X21, [X31+40]
	148 Move X30, [X31+24]
	149 Move D9, [X31+8]
	150 Move D8, [X31+16]
	151 Move V10, [X31+64]
	152 Call HandGrenade.ExplodeInternal, X0
	153 Return 
	154 Call 0x1C17F20

Method: System.Void AddRigibodyAndForce(UnityEngine.GameObject go)

Disassembly:
	0x01D99840 BL 0x1C16CF4
	0x01D99844 ADRP X0, 0x235A000
	0x01D99848 LDR X0, [X0 + 0x5F8]
	0x01D9984C BL 0x1C16CF4
	0x01D99850 ADRP X0, 0x235C000
	0x01D99854 LDR X0, [X0 + 0x7C8]
	0x01D99858 BL 0x1C16CF4
	0x01D9985C MOVZ W8, 0x1
	0x01D99860 STRB W8, [X20 + 0xA37]
	0x01D99864 STR X31, [X31 + 0x8]
	0x01D99868 LDR X0, [X19 + 0x40]
	0x01D9986C CBZ X0, 0x1D99B6C
	0x01D99870 LDRB W8, [X0 + 0x60]
	0x01D99874 TBNZ X8, 0x1, 0x1D99B6C
	0x01D99878 MOV X1, X31
	0x01D9987C BL 0x1E93588
	0x01D99880 TBZ X0, 0x0, 0x1D99B6C
	0x01D99884 LDR X8, [X19 + 0x88]
	0x01D99888 CBZ X8, 0x1D99BF8
	0x01D9988C ADRP X24, 0x235A000
	0x01D99890 LDR X24, [X24 + 0x598]
	0x01D99894 LDR X20, [X8 + 0xC0]
	0x01D99898 LDR X0, [X24]
	0x01D9989C LDR W9, [X0 + 0xE0]
	0x01D998A0 CBNZ W9, 0x1D998A8
	0x01D998A4 BL 0x1C16DFC
	0x01D998A8 MOV X0, X20
	0x01D998AC MOV X1, X31
	0x01D998B0 MOV X2, X31
	0x01D998B4 BL 0x3C354F8
	0x01D998B8 TBZ X0, 0x0, 0x1D99B6C
	0x01D998BC LDR X8, [X19 + 0x88]
	0x01D998C0 CBZ X8, 0x1D99BF8
	0x01D998C4 LDR X8, [X8 + 0xC0]
	0x01D998C8 CBZ X8, 0x1D99BF8
	0x01D998CC LDRB W8, [X8 + 0x8C]
	0x01D998D0 CBZ W8, 0x1D99990
	0x01D998D4 MOV X0, X19
	0x01D998D8 MOV X1, X31
	0x01D998DC BL 0x3C32E90
	0x01D998E0 CBZ X0, 0x1D99BF8
	0x01D998E4 MOV X1, X31
	0x01D998E8 BL 0x3C3F58C
	0x01D998EC ADRP X20, 0x235C000
	0x01D998F0 LDR X20, [X20 + 0x7C8]
	0x01D998F4 LDR X0, [X20]
	0x01D998F8 LDR W8, [X0 + 0xE0]
	0x01D998FC CBNZ W8, 0x1D99904
	0x01D99900 BL 0x1C16DFC
	0x01D99904 ADRP X21, 0x263F000
	0x01D99908 LDRB W8, [X21 + 0x85D]
	0x01D9990C CBNZ W8, 0x1D99924
	0x01D99910 ADRP X0, 0x235C000
	0x01D99914 LDR X0, [X0 + 0x7C8]
	0x01D99918 BL 0x1C16CF4
	0x01D9991C MOVZ W8, 0x1
	0x01D99920 STRB W8, [X21 + 0x85D]
	0x01D99924 LDR X0, [X20]
	0x01D99928 LDR W8, [X0 + 0xE0]
	0x01D9992C CBNZ W8, 0x1D99938
	0x01D99930 BL 0x1C16DFC
	0x01D99934 LDR X0, [X20]
	0x01D99938 LDR X8, [X0 + 0xB8]
	0x01D9993C LDR X0, [X8]
	0x01D99940 CBZ X0, 0x1D99BF8
	0x01D99944 MOV X1, X31
	0x01D99948 BL 0x1DBFE4C
	0x01D9994C CBZ X0, 0x1D99BF8
	0x01D99950 MOV X1, X31
	0x01D99954 BL 0x3C3F58C
	0x01D99958 MOV X0, X19
	0x01D9995C BL 0x1D99640
	0x01D99960 TBZ X0, 0x0, 0x1D99990
	0x01D99964 LDR X8, [X19 + 0x90]
	0x01D99968 CBZ X8, 0x1D99BF8
	0x01D9996C LDR X0, [X8 + 0x1A0]
	0x01D99970 CBZ X0, 0x1D99BF8
	0x01D99974 MOV X1, X31
	0x01D99978 BL 0x1D880C4
	0x01D9997C STR X0, [X31 + 0x8]
	0x01D99980 ADD X0, X31, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2640000
	006 Move W8, [X20+2606]
	007 Move X19, X1
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0x235E000
	013 Move X0, [X0+3880]
	014 Call 0x1C17CF4
	015 Move X0, 0x235E000
	016 Move X0, [X0+3888]
	017 Call 0x1C17CF4
	018 Move X0, 0x235E000
	019 Move X0, [X0+3896]
	020 Call 0x1C17CF4
	021 Move X0, 0x235B000
	022 Move X0, [X0+1432]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+2606], W8
	026 Compare X19, 0
	027 JumpIfEqual {98}
	028 Move X8, 0x235E000
	029 Move X8, [X8+3888]
	030 Move X0, X19
	031 Move X1, [X8]
	032 Call 0x21E6548, X0
	033 Compare X0, 0
	034 JumpIfEqual {98}
	035 Move X20, 0x235E000
	036 Move X21, 0x235B000
	037 Move X20, [X20+3896]
	038 Move X21, [X21+1432]
	039 Move W1, 1
	040 Move X2, X31
	041 Call Collider.set_enabled, X0, X1
	042 Move X1, [X20]
	043 Move X0, X19
	044 Call 0x21E62E4, X0
	045 Move X8, [X21]
	046 Move X20, X0
	047 Move W9, [X8+224]
	048 Compare W9, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Move X0, X20
	053 Move X1, X31
	054 Move X2, X31
	055 Call Object.op_Equality, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {66}
	060 Move X8, 0x235E000
	061 Move X8, [X8+3880]
	062 Move X0, X19
	063 Move X1, [X8]
	064 Call 0x21E61FC, X0
	065 Move X20, X0
	066 Compare X20, 0
	067 JumpIfEqual {98}
	068 Move X0, X20
	069 Move W1, W31
	070 Move X2, X31
	071 Call Rigidbody.set_isKinematic, X0, X1
	072 Move X0, X19
	073 Move X1, X31
	074 Call GameObject.get_transform, X0
	075 Compare X0, 0
	076 JumpIfEqual {98}
	077 Move X1, X31
	078 Move X2, X31
	079 Call Transform.set_parent, X0, X1
	080 Move X0, X19
	081 Move X1, X31
	082 Call GameObject.get_transform, X0
	083 Compare X0, 0
	084 JumpIfEqual {98}
	085 Move X1, X31
	086 Call Transform.get_forward, X0
	087 Compare X20, 0
	088 JumpIfEqual {98}
	089 Move X0, X20
	090 Move X20, [X31+16]
	091 Move X19, [X31+24]
	092 Move W1, 1
	093 Move X2, X31
	094 Move X30, [X31+32]
	095 Move X21, [X31+40]
	096 Call Rigidbody.AddForce, X0, X1, X2
	097 Return 
	098 Call 0x1C17F20

Method: System.Void RemoveRigidbody(UnityEngine.GameObject go)

Disassembly:
	0x01D99984 MOV X1, X31
	0x01D99988 BL 0x1E74DE4
	0x01D9998C TBZ X0, 0x0, 0x1D99B94
	0x01D99990 LDR X8, [X19 + 0x88]
	0x01D99994 CBZ X8, 0x1D99BF8
	0x01D99998 LDR X0, [X8 + 0xC0]
	0x01D9999C CBZ X0, 0x1D99BF8
	0x01D999A0 MOV X1, X31
	0x01D999A4 BL 0x1D8EEB8
	0x01D999A8 TBZ X0, 0x0, 0x1D99B6C
	0x01D999AC MOV X0, X19
	0x01D999B0 MOV X1, X31
	0x01D999B4 BL 0x3C32E90
	0x01D999B8 CBZ X0, 0x1D99BF8
	0x01D999BC MOV X1, X31
	0x01D999C0 BL 0x3C3F58C
	0x01D999C4 ADRP X20, 0x235A000
	0x01D999C8 LDR X20, [X20 + 0x5D8]
	0x01D999CC MOV V8.16B, V0.16B
	0x01D999D0 MOV V9.16B, V1.16B
	0x01D999D4 MOV V10.16B, V2.16B
	0x01D999D8 LDR X0, [X20]
	0x01D999DC LDR W8, [X0 + 0xE0]
	0x01D999E0 CBNZ W8, 0x1D999EC
	0x01D999E4 BL 0x1C16DFC
	0x01D999E8 LDR X0, [X20]
	0x01D999EC LDR X8, [X0 + 0xB8]
	0x01D999F0 MOV X1, X31
	0x01D999F4 LDR W0, [X8 + 0x10]
	0x01D999F8 BL 0x3C35CB8
	0x01D999FC LDR X8, [X20]
	0x01D99A00 MOV W20, W0
	0x01D99A04 MOV X1, X31
	0x01D99A08 LDR X8, [X8 + 0xB8]
	0x01D99A0C LDR W8, [X8 + 0x14]
	0x01D99A10 MOV X0, X8
	0x01D99A14 BL 0x3C35CB8
	0x01D99A18 ADRP X8, 0x235A000
	0x01D99A1C LDR X8, [X8 + 0x5F8]
	0x01D99A20 MOV W21, W0
	0x01D99A24 LDR X8, [X8]
	0x01D99A28 LDR W9, [X8 + 0xE0]
	0x01D99A2C CBNZ W9, 0x1D99A38
	0x01D99A30 MOV X0, X8
	0x01D99A34 BL 0x1C16DFC
	0x01D99A38 ADRP X8, 0xFFFFFFFFFED51000
	0x01D99A3C LDR V3, [X8 + 0x35C]
	0x01D99A40 ORR W0, W21, W20, 0x0
	0x01D99A44 MOVZ W1, 0x2
	0x01D99A48 MOV V0.16B, V8.16B
	0x01D99A4C MOV V1.16B, V9.16B
	0x01D99A50 MOV V2.16B, V10.16B
	0x01D99A54 MOV X2, X31
	0x01D99A58 BL 0x3C8CFF4
	0x01D99A5C CBZ X0, 0x1D99BF8
	0x01D99A60 LDR W8, [X0 + 0x18]
	0x01D99A64 MOV X20, X0
	0x01D99A68 CMP W8, 0x1
	0x01D99A6C B.LT 0x1D99B6C
	0x01D99A70 ADRP X26, 0x235D000
	0x01D99A74 ADRP X27, 0x235D000
	0x01D99A78 LDR X26, [X26 + 0xF58]
	0x01D99A7C LDR X27, [X27 + 0xA70]
	0x01D99A80 MOV W25, W31
	0x01D99A84 CMP W25, W8
	0x01D99A88 B.CS 0x1D99BFC
	0x01D99A8C ADD X8, X20, W25, 0x3, SXTW
	0x01D99A90 LDR X0, [X8 + 0x20]
	0x01D99A94 CBZ X0, 0x1D99BF8
	0x01D99A98 LDR X1, [X26]
	0x01D99A9C BL 0x21A3894
	0x01D99AA0 LDR X8, [X24]
	0x01D99AA4 MOV X21, X0
	0x01D99AA8 LDR W9, [X8 + 0xE0]
	0x01D99AAC CBNZ W9, 0x1D99AB8
	0x01D99AB0 MOV X0, X8
	0x01D99AB4 BL 0x1C16DFC
	0x01D99AB8 MOV X0, X21
	0x01D99ABC MOV X1, X31
	0x01D99AC0 MOV X2, X31
	0x01D99AC4 BL 0x3C354F8
	0x01D99AC8 TBZ X0, 0x0, 0x1D99B54
	0x01D99ACC LDR X0, [X24]
	0x01D99AD0 LDR X22, [X19 + 0x88]
	0x01D99AD4 LDR W8, [X0 + 0xE0]
	0x01D99AD8 CBNZ W8, 0x1D99AE0
	0x01D99ADC BL 0x1C16DFC
	0x01D99AE0 MOV X0, X21
	0x01D99AE4 MOV X1, X22
	0x01D99AE8 MOV X2, X31
	0x01D99AEC BL 0x3C354F8
	0x01D99AF0 TBZ X0, 0x0, 0x1D99B54
	0x01D99AF4 CBZ X21, 0x1D99BF8
	0x01D99AF8 LDR W8, [X21 + 0x80]
	0x01D99AFC CMP W8, 0x3
	0x01D99B00 B.NE 0x1D99B44
	0x01D99B04 LDR X1, [X27]
	0x01D99B08 MOV X0, X21
	0x01D99B0C BL 0x21A3F50
	0x01D99B10 LDR X8, [X19 + 0x88]
	0x01D99B14 CBZ X8, 0x1D99BF8
	0x01D99B18 MOV X22, X0
	0x01D99B1C LDR X0, [X24]
	0x01D99B20 LDR X23, [X8 + 0xC0]
	0x01D99B24 LDR W9, [X0 + 0xE0]
	0x01D99B28 CBNZ W9, 0x1D99B30
	0x01D99B2C BL 0x1C16DFC
	0x01D99B30 MOV X0, X22
	0x01D99B34 MOV X1, X23
	0x01D99B38 MOV X2, X31
	0x01D99B3C BL 0x3C3883C
	0x01D99B40 TBNZ X0, 0x0, 0x1D99B54
	0x01D99B44 MOV X0, X19
	0x01D99B48 MOV X1, X21
	0x01D99B4C BL 0x1D99748
	0x01D99B50 TBNZ X0, 0x0, 0x1D99BF0
	0x01D99B54 LDR W8, [X20 + 0x18]
	0x01D99B58 ADD W25, W25, 0x1
	0x01D99B5C MOV W21, W31
	0x01D99B60 CMP W25, W8
	0x01D99B64 B.LT 0x1D99A84
	0x01D99B68 B 0x1D99B70
	0x01D99B6C MOV W21, W31
	0x01D99B70 MOV W0, W21
	0x01D99B74 LDP X20, X19, [X31 + 0x60]
	0x01D99B78 LDP X22, X21, [X31 + 0x50]
	0x01D99B7C LDP X24, X23, [X31 + 0x40]
	0x01D99B80 LDP X26, X25, [X31 + 0x30]
	0x01D99B84 LDP X30, X27, [X31 + 0x20]
	0x01D99B88 LDP D9, D8, [X31 + 0x10]
	0x01D99B8C LDR V10, [X31], #0x70
	0x01D99B90 RET
	0x01D99B94 LDR X0, [X19 + 0x88]
	0x01D99B98 CBZ X0, 0x1D99BF8
	0x01D99B9C MOV X1, X31
	0x01D99BA0 BL 0x1D880C4
	0x01D99BA4 LDR X8, [X19 + 0x88]
	0x01D99BA8 CBZ X8, 0x1D99BF8
	0x01D99BAC MOV X20, X0
	0x01D99BB0 MOV X0, X8
	0x01D99BB4 MOV X1, X31
	0x01D99BB8 BL 0x1D89E1C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x2640000
	009 Move X21, 0x235B000
	010 Move W8, [X22+2607]
	011 Move X21, [X21+1432]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x235E000
	019 Move X0, [X0+3888]
	020 Call 0x1C17CF4
	021 Move X0, 0x235E000
	022 Move X0, [X0+3904]
	023 Call 0x1C17CF4
	024 Move X0, 0x235B000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+2607], W8
	029 Move X0, [X21]
	030 Move [X31+8], X31
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X19
	036 Move X1, X31
	037 Move X2, X31
	038 Call Object.op_Equality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {168}
	043 Compare X19, 0
	044 JumpIfEqual {176}
	045 Move X0, X19
	046 Move X1, X31
	047 Call GameObject.get_activeSelf, X0
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {56}
	052 Move W1, 1
	053 Move X0, X19
	054 Move X2, X31
	055 Call GameObject.SetActive, X0, X1
	056 Move X8, 0x235E000
	057 Move X8, [X8+3904]
	058 Add X1, X31, 8
	059 Move X0, X19
	060 Move X2, [X8]
	061 Call 0x21E7600, X0, X1
	062 Move X22, 0x235B000
	063 Move X22, [X22+1440]
	064 Move X23, 0x2640000
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {94}
	069 Move X0, [X31+8]
	070 Compare X0, 0
	071 JumpIfEqual {176}
	072 Move W1, 1
	073 Move X2, X31
	074 Move W24, 1
	075 Call Rigidbody.set_isKinematic, X0, X1
	076 Move W8, [X23+1923]
	077 Move X21, [X31+8]
	078 Compare W8, 0
	079 JumpIfNotEqual {84}
	080 Move X0, 0x235B000
	081 Move X0, [X0+1440]
	082 Call 0x1C17CF4
	083 Move [X23+1923], W24
	084 Compare X21, 0
	085 JumpIfEqual {176}
	086 Move X8, [X22]
	087 Move X0, X21
	088 Move X1, X31
	089 Move X8, [X8+184]
	090 Move S1, [X8+4]
	091 Move S2, [X8+8]
	092 Move V0, [X8]
	093 Call Rigidbody.set_velocity, X0, X1
	094 Move X0, X19
	095 Move X1, X31
	096 Call GameObject.get_transform, X0
	097 Move X8, [X20+168]
	098 Compare X8, 0
	099 JumpIfEqual {176}
	100 Move X20, X0
	101 Move X0, X8
	102 Move X1, X31
	103 Call GameObject.get_transform, X0
	104 Compare X20, 0
	105 JumpIfEqual {176}
	106 Move X1, X0
	107 Move X0, X20
	108 Move X2, X31
	109 Call Transform.set_parent, X0, X1
	110 Move X0, X19
	111 Move X1, X31
	112 Call GameObject.get_transform, X0
	113 Move W8, [X23+1923]
	114 Move X20, X0
	115 Compare W8, 0
	116 JumpIfNotEqual {122}
	117 Move X0, 0x235B000
	118 Move X0, [X0+1440]
	119 Call 0x1C17CF4
	120 Move W8, 1
	121 Move [X23+1923], W8
	122 Compare X20, 0
	123 JumpIfEqual {176}
	124 Move X8, [X22]
	125 Move X0, X20
	126 Move X1, X31
	127 Move X8, [X8+184]
	128 Move S1, [X8+4]
	129 Move S2, [X8+8]
	130 Move V0, [X8]
	131 Call Transform.set_localPosition, X0, X1
	132 Move X0, X19
	133 Move X1, X31
	134 Call GameObject.get_transform, X0
	135 Move X21, 0x2640000
	136 Move W8, [X21+1939]
	137 Move X20, X0
	138 Compare W8, 0
	139 JumpIfNotEqual {145}
	140 Move X0, 0x235C000
	141 Move X0, [X0+1448]
	142 Call 0x1C17CF4
	143 Move W8, 1
	144 Move [X21+1939], W8
	145 Compare X20, 0
	146 JumpIfEqual {176}
	147 Move X8, 0x235C000
	148 Move X8, [X8+1448]
	149 Move X0, X20
	150 Move X1, X31
	151 Move X8, [X8]
	152 Move X8, [X8+184]
	153 Move S2, [X8+8]
	154 Move S3, [X8+12]
	155 Move S0, [X8]
	156 Move S1, [X8+4]
	157 Call Transform.set_localRotation, X0, X1
	158 Move X8, 0x235E000
	159 Move X8, [X8+3888]
	160 Move X0, X19
	161 Move X1, [X8]
	162 Call 0x21E6548, X0
	163 Compare X0, 0
	164 JumpIfEqual {176}
	165 Move W1, W31
	166 Move X2, X31
	167 Call Collider.set_enabled, X0, X1
	168 Move X20, [X31+48]
	169 Move X19, [X31+56]
	170 Move X22, [X31+32]
	171 Move X21, [X31+40]
	172 Move X24, [X31+16]
	173 Move X23, [X31+24]
	174 Move X30, [X31+64]
	175 Return 
	176 Call 0x1C17F20

Method: System.Void HandleIsPinPulledChanged()

Disassembly:
	0x01D98BAC LDP X24, X23, [X31 + 0x10]
	0x01D98BB0 LDR X30, [X31], #0x40
	0x01D98BB4 RET
	0x01D98BB8 BL 0x1C16F20
	0x01D98BBC STR X30, [X31 - 0x20]!
	0x01D98BC0 STP X20, X19, [X31 + 0x10]
	0x01D98BC4 MOV W20, W1
	0x01D98BC8 MOV X19, X0
	0x01D98BCC BL 0x1D97584
	0x01D98BD0 TBNZ X0, 0x0, 0x1D98BE0
	0x01D98BD4 MOV X0, X19
	0x01D98BD8 BL 0x1D974B8
	0x01D98BDC TBZ X0, 0x0, 0x1D98BEC
	0x01D98BE0 LDP X20, X19, [X31 + 0x10]
	0x01D98BE4 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call HandGrenade.get_isPinPulled, X0
	005 Move X1, [X19+136]
	006 Move TEMP, X0
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfNotEqual {16}
	010 Call HandGrenade.AddRigibodyAndForce, X0, X1
	011 Move X1, [X19+144]
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Call HandGrenade.AddRigibodyAndForce, X0, X1
	015 Return 
	016 Move X0, X19
	017 Call HandGrenade.RemoveRigidbody, X0, X1
	018 Move X1, [X19+144]
	019 Move X0, X19
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 Call HandGrenade.RemoveRigidbody, X0, X1
	023 Return 

Method: System.Void HandleIsExplodedChanged()

Disassembly:
	0x01D98B50 MOVZ W8, 0x1
	0x01D98B54 STRB W8, [X21 + 0x793]
	0x01D98B58 CBZ X20, 0x1D98BB8
	0x01D98B5C ADRP X8, 0x235C000
	0x01D98B60 LDR X8, [X8 + 0x5A8]
	0x01D98B64 MOV X0, X20
	0x01D98B68 MOV X1, X31
	0x01D98B6C LDR X8, [X8]
	0x01D98B70 LDR X8, [X8 + 0xB8]
	0x01D98B74 LDP S2, S3, [X8 + 0x8]
	0x01D98B78 LDP S0, S1, [X8]
	0x01D98B7C BL 0x3C3F8B8
	0x01D98B80 ADRP X8, 0x235E000
	0x01D98B84 LDR X8, [X8 + 0xF30]
	0x01D98B88 MOV X0, X19
	0x01D98B8C LDR X1, [X8]
	0x01D98B90 BL 0x21E5548
	0x01D98B94 CBZ X0, 0x1D98BB8
	0x01D98B98 MOV W1, W31
	0x01D98B9C MOV X2, X31
	0x01D98BA0 BL 0x3C8F748
	0x01D98BA4 LDP X20, X19, [X31 + 0x30]
	0x01D98BA8 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, [X0+144]
	005 Move X19, X0
	006 Call HandGrenade.get_isExploded, X0
	007 Compare X20, 0
	008 JumpIfEqual {28}
	009 NotImplemented "Instruction ORN not yet implemented."
	010 And W1, W8, 1
	011 Move X0, X20
	012 Move X2, X31
	013 Call GameObject.SetActive, X0, X1
	014 Move X20, [X19+136]
	015 Move X0, X19
	016 Call HandGrenade.get_isExploded, X0
	017 Compare X20, 0
	018 JumpIfEqual {28}
	019 NotImplemented "Instruction ORN not yet implemented."
	020 Move X0, X20
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 And W1, W8, 1
	024 Move X2, X31
	025 Move X30, [X31+32]
	026 Call GameObject.SetActive, X0, X1
	027 Return 
	028 Call 0x1C17F20

Method: System.Void Hit(System.Int32 damage, UnityEngine.Vector3 position, AnimalCompany.RandomSFX hitSound, AnimalCompany.RandomSFX killSound, UnityEngine.Vector3 force, System.String hitName, Fusion.NetworkBehaviourId source)

Disassembly:
	0x01D99BBC LDR X8, [X19 + 0x90]
	0x01D99BC0 CBZ X8, 0x1D99BF8
	0x01D99BC4 LDR X0, [X8 + 0x1A0]
	0x01D99BC8 CBZ X0, 0x1D99BF8
	0x01D99BCC MOVZ W2, 0x1
	0x01D99BD0 MOV X1, X20
	0x01D99BD4 MOV W3, W31
	0x01D99BD8 MOV X4, X31
	0x01D99BDC MOV X5, X31
	0x01D99BE0 MOV X6, X31
	0x01D99BE4 MOVZ W21, 0x1
	0x01D99BE8 BL 0x1D88C7C
	0x01D99BEC B 0x1D99B70
	0x01D99BF0 MOVZ W21, 0x1
	0x01D99BF4 B 0x1D99B70
	0x01D99BF8 BL 0x1C16F20
	0x01D99BFC BL 0x1C16F28
	0x01D99C00 STR D10, [X31 - 0x60]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, W1
	005 Move X19, X0
	006 Call HandGrenade.get_isExploded, X0
	007 Move TEMP, X0
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {17}
	011 Move X0, X19
	012 Call HandGrenade.get_isPinPulled, X0
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {21}
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Return 
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X0, X19
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 NotImplemented "Instruction CSET not yet implemented."
	026 Move X30, [X31+32]
	027 Call HandGrenade.RPC_Use, X0, X1
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x01D99C04 STP D9, D8, [X31 + 0x10]
	0x01D99C08 STP X30, X25, [X31 + 0x20]

ISIL:
	001 Move X1, X31
	002 Call NetworkBehaviour..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x01D99C0C STP X24, X23, [X31 + 0x30]
	0x01D99C10 STP X22, X21, [X31 + 0x40]
	0x01D99C14 STP X20, X19, [X31 + 0x50]
	0x01D99C18 ADRP X20, 0x263F000
	0x01D99C1C LDRB W8, [X20 + 0xA38]
	0x01D99C20 MOV X19, X0
	0x01D99C24 TBNZ X8, 0x0, 0x1D99C78
	0x01D99C28 ADRP X0, 0x235D000
	0x01D99C2C LDR X0, [X0 + 0xF68]
	0x01D99C30 BL 0x1C16CF4
	0x01D99C34 ADRP X0, 0x235D000
	0x01D99C38 LDR X0, [X0 + 0xF70]
	0x01D99C3C BL 0x1C16CF4
	0x01D99C40 ADRP X0, 0x235D000
	0x01D99C44 LDR X0, [X0 + 0xBB8]
	0x01D99C48 BL 0x1C16CF4
	0x01D99C4C ADRP X0, 0x235D000
	0x01D99C50 LDR X0, [X0 + 0xF78]
	0x01D99C54 BL 0x1C16CF4
	0x01D99C58 ADRP X0, 0x235A000
	0x01D99C5C LDR X0, [X0 + 0x598]
	0x01D99C60 BL 0x1C16CF4
	0x01D99C64 ADRP X0, 0x235A000
	0x01D99C68 LDR X0, [X0 + 0x5F8]
	0x01D99C6C BL 0x1C16CF4
	0x01D99C70 MOVZ W8, 0x1
	0x01D99C74 STRB W8, [X20 + 0xA38]
	0x01D99C78 MOV X0, X19
	0x01D99C7C STR X31, [X31 + 0x8]
	0x01D99C80 BL 0x1D99640
	0x01D99C84 TBZ X0, 0x0, 0x1D99D1C
	0x01D99C88 LDR X8, [X19 + 0x90]
	0x01D99C8C CBZ X8, 0x1D99F28
	0x01D99C90 LDR X0, [X8 + 0x1A0]
	0x01D99C94 CBZ X0, 0x1D99F28
	0x01D99C98 MOV X1, X31
	0x01D99C9C BL 0x1D880C4
	0x01D99CA0 STR X0, [X31 + 0x8]
	0x01D99CA4 ADD X0, X31, 0x8
	0x01D99CA8 MOV X1, X31
	0x01D99CAC BL 0x1E74DE4
	0x01D99CB0 TBZ X0, 0x0, 0x1D99D1C
	0x01D99CB4 LDR X8, [X19 + 0x90]
	0x01D99CB8 CBZ X8, 0x1D99F28
	0x01D99CBC LDR X0, [X8 + 0x1A0]
	0x01D99CC0 CBZ X0, 0x1D99F28
	0x01D99CC4 MOV X1, X31
	0x01D99CC8 BL 0x1D880C4
	0x01D99CCC LDR X8, [X19 + 0x90]
	0x01D99CD0 CBZ X8, 0x1D99F28

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x2640000
	006 Move X20, 0x235B000
	007 Move W8, [X19+2608]
	008 Move X20, [X20+1496]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x235E000
	014 Move X0, [X0+3872]
	015 Call 0x1C17CF4
	016 Move X0, 0x235B000
	017 Move X0, [X0+1496]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+2608], W8
	021 Move X0, [X20]
	022 Move X21, 0x235E000
	023 Move W8, [X0+224]
	024 Move X21, [X21+3872]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X20]
	029 Move X8, [X0+184]
	030 Move X1, X31
	031 Move W0, [X8]
	032 Call LayerMask.op_Implicit, X0
	033 Move X8, [X20]
	034 Move W19, W0
	035 Move X1, X31
	036 Move X8, [X8+184]
	037 Move W8, [X8+4]
	038 Move X0, X8
	039 Call LayerMask.op_Implicit, X0
	040 Move X8, [X20]
	041 Move W20, W0
	042 Move X1, X31
	043 Move X8, [X8+184]
	044 Move W8, [X8+40]
	045 Move X0, X8
	046 Call LayerMask.op_Implicit, X0
	047 Or W8, W20, W19
	048 Or W0, W8, W0
	049 Move X1, X31
	050 Call LayerMask.op_Implicit, X0
	051 Move X8, [X21]
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X8, [X8+184]
	055 Move [X8], W0
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Return 

Method: System.Void CopyBackingFieldsToState(System.Boolean param_0)

Disassembly:
	0x01D99CD4 MOV X20, X0
	0x01D99CD8 LDR X0, [X8 + 0x1A0]
	0x01D99CDC CBZ X0, 0x1D99F28
	0x01D99CE0 MOV X1, X31
	0x01D99CE4 BL 0x1D89E1C
	0x01D99CE8 ADRP X8, 0xFFFFFFFFFED51000
	0x01D99CEC ADRP X9, 0xFFFFFFFFFED51000
	0x01D99CF0 LDR W0, [X19 + 0x80]
	0x01D99CF4 LDR V0, [X8 + 0x44C]
	0x01D99CF8 LDR V1, [X9 + 0x2C8]
	0x01D99CFC MOV X1, X31
	0x01D99D00 BL 0x1DC2324
	0x01D99D04 LDR X0, [X19 + 0x88]
	0x01D99D08 CBZ X0, 0x1D99F28
	0x01D99D0C MOVZ W2, 0x1
	0x01D99D10 MOVZ W3, 0x1
	0x01D99D14 MOV X1, X20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W1, [X0+192]
	004 Move X19, X0
	005 Call HandGrenade.set_life, X0, X1
	006 Move W1, [X19+196]
	007 Move X0, X19
	008 Call HandGrenade.set_pausedRemainingTicks, X0, X1
	009 Move W1, [X19+200]
	010 Move X0, X19
	011 Call HandGrenade.set_timerPins, X0, X1
	012 Move W1, [X19+204]
	013 Move X0, X19
	014 Call HandGrenade.set_isPinPulled, X0, X1
	015 Move W1, [X19+205]
	016 Move X0, X19
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Call HandGrenade.set_isExploded, X0, X1
	020 Return 

Method: System.Void CopyStateToBackingFields()

Disassembly:
	0x01D99D18 B 0x1D99EFC
	0x01D99D1C MOV X0, X19
	0x01D99D20 MOV X1, X31
	0x01D99D24 BL 0x3C32E90
	0x01D99D28 CBZ X0, 0x1D99F28
	0x01D99D2C ADRP X20, 0x235A000
	0x01D99D30 ADRP X23, 0x235D000
	0x01D99D34 ADRP X21, 0x235D000
	0x01D99D38 ADRP X22, 0x235D000
	0x01D99D3C LDR X20, [X20 + 0x5F8]
	0x01D99D40 LDR X23, [X23 + 0xF70]
	0x01D99D44 LDR X21, [X21 + 0xF78]
	0x01D99D48 LDR X22, [X22 + 0xF68]
	0x01D99D4C MOV X1, X31
	0x01D99D50 BL 0x3C3F58C
	0x01D99D54 LDR W0, [X19 + 0x84]
	0x01D99D58 MOV X1, X31
	0x01D99D5C MOV V8.16B, V0.16B
	0x01D99D60 MOV V9.16B, V1.16B
	0x01D99D64 MOV V10.16B, V2.16B

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call HandGrenade.get_life, X0
	005 Move [X19+192], W0
	006 Move X0, X19
	007 Call HandGrenade.get_pausedRemainingTicks, X0
	008 Move [X19+196], W0
	009 Move X0, X19
	010 Call HandGrenade.get_timerPins, X0
	011 Move [X19+200], W0
	012 Move X0, X19
	013 Call HandGrenade.get_isPinPulled, X0
	014 And W8, W0, 1
	015 Move X0, X19
	016 Move [X19+204], W8
	017 Call HandGrenade.get_isExploded, X0
	018 And W8, W0, 1
	019 Move [X19+205], W8
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 Return 

Method: System.Void RPC_Explode@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01D99D68 BL 0x3C35CB8
	0x01D99D6C LDR X8, [X20]
	0x01D99D70 MOV W20, W0
	0x01D99D74 LDR W9, [X8 + 0xE0]
	0x01D99D78 CBNZ W9, 0x1D99D84
	0x01D99D7C MOV X0, X8
	0x01D99D80 BL 0x1C16DFC
	0x01D99D84 FMOV S3, 0.5
	0x01D99D88 MOVZ W1, 0x1
	0x01D99D8C MOV V0.16B, V8.16B
	0x01D99D90 MOV V1.16B, V9.16B
	0x01D99D94 MOV V2.16B, V10.16B
	0x01D99D98 MOV W0, W20
	0x01D99D9C MOV X2, X31
	0x01D99DA0 BL 0x3C8CFF4
	0x01D99DA4 LDR X8, [X23]
	0x01D99DA8 MOV X20, X0
	0x01D99DAC MOV X0, X8
	0x01D99DB0 BL 0x1C16F10
	0x01D99DB4 LDR X2, [X21]
	0x01D99DB8 MOV X1, X19
	0x01D99DBC MOV X3, X31
	0x01D99DC0 MOV X21, X0
	0x01D99DC4 BL 0x295A080
	0x01D99DC8 LDR X2, [X22]
	0x01D99DCC MOV X0, X20
	0x01D99DD0 MOV X1, X21
	0x01D99DD4 BL 0x2157D70
	0x01D99DD8 CBZ X20, 0x1D99F28
	0x01D99DDC LDR W8, [X20 + 0x18]
	0x01D99DE0 CMP W8, 0x1
	0x01D99DE4 B.LT 0x1D99F0C
	0x01D99DE8 ADRP X24, 0x235A000
	0x01D99DEC ADRP X25, 0x235D000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2640000
	005 Move W8, [X20+2609]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x235E000
	012 Move X0, [X0+3872]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2609], W8
	016 Compare X19, 0
	017 JumpIfEqual {39}
	018 Move X9, 0x235E000
	019 Move X9, [X9+3872]
	020 Move W8, 1
	021 Move [X19+88], W8
	022 Move X8, [X19]
	023 Move X1, [X9]
	024 Move W10, [X8+304]
	025 Move W9, [X1+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, [X8+200]
	028 Add X8, X8, X9
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Call HandGrenade.RPC_Explode, X0
	036 Return 
	037 Move X0, X19
	038 Call 0x1C181E0
	039 Call 0x1C17F20

Method: System.Void RPC_Use@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01D99DF0 LDR X24, [X24 + 0x598]
	0x01D99DF4 LDR X25, [X25 + 0xBB8]
	0x01D99DF8 MOV W23, W31
	0x01D99DFC CMP W23, W8
	0x01D99E00 B.CS 0x1D99F2C
	0x01D99E04 ADD X8, X20, W23, 0x3, SXTW
	0x01D99E08 LDR X21, [X8 + 0x20]
	0x01D99E0C CBZ X21, 0x1D99F28
	0x01D99E10 MOV X0, X21
	0x01D99E14 MOV X1, X31
	0x01D99E18 BL 0x3C8E82C
	0x01D99E1C LDR X8, [X24]
	0x01D99E20 MOV X22, X0
	0x01D99E24 LDR W9, [X8 + 0xE0]
	0x01D99E28 CBNZ W9, 0x1D99E34
	0x01D99E2C MOV X0, X8
	0x01D99E30 BL 0x1C16DFC
	0x01D99E34 MOV X0, X22
	0x01D99E38 MOV X1, X31
	0x01D99E3C MOV X2, X31
	0x01D99E40 BL 0x3C354F8
	0x01D99E44 TBZ X0, 0x0, 0x1D99E5C
	0x01D99E48 MOV X0, X21
	0x01D99E4C MOV X1, X31
	0x01D99E50 BL 0x3C8E82C
	0x01D99E54 CBZ X0, 0x1D99F28
	0x01D99E58 MOV X21, X0
	0x01D99E5C LDR X1, [X25]
	0x01D99E60 MOV X0, X21
	0x01D99E64 BL 0x21A3894
	0x01D99E68 LDR X8, [X24]
	0x01D99E6C MOV X21, X0
	0x01D99E70 LDR W9, [X8 + 0xE0]
	0x01D99E74 CBNZ W9, 0x1D99E80
	0x01D99E78 MOV X0, X8
	0x01D99E7C BL 0x1C16DFC
	0x01D99E80 MOV X0, X21
	0x01D99E84 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2640000
	006 Move W8, [X21+2610]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x235E000
	014 Move X0, [X0+3872]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2610], W8
	018 Compare X19, 0
	019 JumpIfEqual {45}
	020 Move X10, 0x235E000
	021 Move X10, [X10+3872]
	022 Move W9, 1
	023 Move W8, [X20+36]
	024 Move [X19+88], W9
	025 Move X9, [X19]
	026 Move X1, [X10]
	027 Move W11, [X9+304]
	028 Move W10, [X1+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X9, [X9+200]
	031 Add X9, X9, X10
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CSET not yet implemented."
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Call HandGrenade.RPC_Use, X0, X1
	042 Return 
	043 Move X0, X19
	044 Call 0x1C181E0
	045 Call 0x1C17F20

