Type: AnimalCompany.UserAvatarsCacheManager/<>c

Method: System.Void .cctor()

Disassembly:
	0x01D51C2C CBZ X0, 0x1D52024
	0x01D51C30 LDR X8, [X21]
	0x01D51C34 LDR X22, [X20 + 0xD8]
	0x01D51C38 LDR X1, [X27]
	0x01D51C3C LDRH W9, [X8 + 0x12E]
	0x01D51C40 CBZ X9, 0x1D51C64
	0x01D51C44 LDR X10, [X8 + 0xB0]
	0x01D51C48 ADD X10, X10, 0x8
	0x01D51C4C LDUR X11, [X10 - 0x8]
	0x01D51C50 CMP X11, X1
	0x01D51C54 B.EQ 0x1D51C74
	0x01D51C58 SUBS X9, X9, 0x1
	0x01D51C5C ADD X10, X10, 0x10
	0x01D51C60 B.NE 0x1D51C4C
	0x01D51C64 MOVZ W2, 0x9
	0x01D51C68 MOV X0, X21
	0x01D51C6C BL 0x1C5C788
	0x01D51C70 B 0x1D51C84
	0x01D51C74 LDR W9, [X10]
	0x01D51C78 ADD W9, W9, 0x9
	0x01D51C7C ADD X8, X8, W9, 0x4, SXTW
	0x01D51C80 ADD X0, X8, 0x138
	0x01D51C84 LDP X8, X1, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x2688000
	005 Move X20, 0x23A4000
	006 Move W8, [X19+1978]
	007 Move X20, [X20+3096]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x23A4000
	013 Move X0, [X0+3096]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1978], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x01D51C88 MOV X0, X21
	0x01D51C8C BLR X8

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean <FetchPlayerAvatarData>b__7_0(System.String userID)

Disassembly:
	0x01D51C90 MOV X1, X0
	0x01D51C94 CBZ X22, 0x1D52018
	0x01D51C98 LDR X2, [X28]
	0x01D51C9C MOV X0, X22
	0x01D51CA0 BL 0x2609E58
	0x01D51CA4 MOV X22, X0
	0x01D51CA8 CBZ X0, 0x1D5201C
	0x01D51CAC LDR X8, [X21]
	0x01D51CB0 LDR X23, [X22 + 0x50]
	0x01D51CB4 LDR X1, [X27]
	0x01D51CB8 LDRH W9, [X8 + 0x12E]
	0x01D51CBC CBZ X9, 0x1D51CE0
	0x01D51CC0 LDR X10, [X8 + 0xB0]
	0x01D51CC4 ADD X10, X10, 0x8
	0x01D51CC8 LDUR X11, [X10 - 0x8]
	0x01D51CCC CMP X11, X1
	0x01D51CD0 B.EQ 0x1D51CF0
	0x01D51CD4 SUBS X9, X9, 0x1
	0x01D51CD8 ADD X10, X10, 0x10
	0x01D51CDC B.NE 0x1D51CC8
	0x01D51CE0 MOVZ W2, 0x9
	0x01D51CE4 MOV X0, X21
	0x01D51CE8 BL 0x1C5C788
	0x01D51CEC B 0x1D51D00
	0x01D51CF0 LDR W9, [X10]
	0x01D51CF4 ADD W9, W9, 0x9
	0x01D51CF8 ADD X8, X8, W9, 0x4, SXTW
	0x01D51CFC ADD X0, X8, 0x138
	0x01D51D00 LDP X8, X1, [X0]
	0x01D51D04 MOV X0, X21
	0x01D51D08 BLR X8
	0x01D51D0C MOV X1, X0
	0x01D51D10 CBZ X23, 0x1D52014
	0x01D51D14 LDR X2, [X29]
	0x01D51D18 MOV X0, X23
	0x01D51D1C BL 0x265C3F4
	0x01D51D20 LDR X8, [X21]
	0x01D51D24 LDR X23, [X22 + 0x58]
	0x01D51D28 LDR X1, [X27]
	0x01D51D2C LDRH W9, [X8 + 0x12E]
	0x01D51D30 CBZ X9, 0x1D51D54
	0x01D51D34 LDR X10, [X8 + 0xB0]
	0x01D51D38 ADD X10, X10, 0x8
	0x01D51D3C LDUR X11, [X10 - 0x8]
	0x01D51D40 CMP X11, X1
	0x01D51D44 B.EQ 0x1D51D64
	0x01D51D48 SUBS X9, X9, 0x1
	0x01D51D4C ADD X10, X10, 0x10
	0x01D51D50 B.NE 0x1D51D3C
	0x01D51D54 MOVZ W2, 0x11
	0x01D51D58 MOV X0, X21
	0x01D51D5C BL 0x1C5C788
	0x01D51D60 B 0x1D51D74
	0x01D51D64 LDR W9, [X10]
	0x01D51D68 ADD W9, W9, 0x11
	0x01D51D6C ADD X8, X8, W9, 0x4, SXTW
	0x01D51D70 ADD X0, X8, 0x138
	0x01D51D74 LDP X8, X1, [X0]
	0x01D51D78 MOV X0, X21
	0x01D51D7C BLR X8
	0x01D51D80 MOV X1, X0
	0x01D51D84 CBZ X23, 0x1D52028
	0x01D51D88 LDR X2, [X29]
	0x01D51D8C MOV X0, X23
	0x01D51D90 BL 0x265C3F4
	0x01D51D94 LDR X8, [X21]
	0x01D51D98 LDR X23, [X22 + 0x60]
	0x01D51D9C LDR X1, [X27]
	0x01D51DA0 LDRH W9, [X8 + 0x12E]
	0x01D51DA4 CBZ X9, 0x1D51DC8
	0x01D51DA8 LDR X10, [X8 + 0xB0]
	0x01D51DAC ADD X10, X10, 0x8
	0x01D51DB0 LDUR X11, [X10 - 0x8]
	0x01D51DB4 CMP X11, X1
	0x01D51DB8 B.EQ 0x1D51DD8
	0x01D51DBC SUBS X9, X9, 0x1
	0x01D51DC0 ADD X10, X10, 0x10
	0x01D51DC4 B.NE 0x1D51DB0
	0x01D51DC8 MOVZ W2, 0x3
	0x01D51DCC MOV X0, X21
	0x01D51DD0 BL 0x1C5C788
	0x01D51DD4 B 0x1D51DE8
	0x01D51DD8 LDR W9, [X10]
	0x01D51DDC ADD W9, W9, 0x3
	0x01D51DE0 ADD X8, X8, W9, 0x4, SXTW
	0x01D51DE4 ADD X0, X8, 0x138

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2688000
	007 Move X20, 0x23A3000
	008 Move W8, [X21+1979]
	009 Move X20, [X20+1608]
	010 Move X19, X1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x23A3000
	016 Move X0, [X0+1608]
	017 Call 0x1C17CF4
	018 Move X0, 0x23A4000
	019 Move X0, [X0+3128]
	020 Call 0x1C17CF4
	021 Move X0, 0x23A3000
	022 Move X0, [X0+3528]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+1979], W8
	026 Move X0, [X20]
	027 Move [X31+8], X31
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X21, 0x2688000
	033 Move W8, [X21+1927]
	034 Compare W8, 0
	035 JumpIfNotEqual {41}
	036 Move X0, 0x23A3000
	037 Move X0, [X0+1608]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+1927], W8
	041 Move X0, [X20]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X20]
	047 Move X8, [X0+184]
	048 Move X8, [X8]
	049 Compare X8, 0
	050 JumpIfEqual {106}
	051 Move X8, [X8+184]
	052 Compare X8, 0
	053 JumpIfEqual {106}
	054 Move X8, [X8+80]
	055 Compare X8, 0
	056 JumpIfEqual {106}
	057 Move X1, [X8+80]
	058 Move X0, X19
	059 Move X2, X31
	060 Call String.op_Inequality, X0, X1
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {98}
	065 Move X0, [X20]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move W8, [X21+1927]
	071 Compare W8, 0
	072 JumpIfNotEqual {78}
	073 Move X0, 0x23A3000
	074 Move X0, [X0+1608]
	075 Call 0x1C17CF4
	076 Move W8, 1
	077 Move [X21+1927], W8
	078 Move X0, [X20]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {84}
	082 Call 0x1C17DFC
	083 Move X0, [X20]
	084 Move X8, [X0+184]
	085 Move X8, [X8]
	086 Compare X8, 0
	087 JumpIfEqual {106}
	088 Move X0, [X8+208]
	089 Compare X0, 0
	090 JumpIfEqual {106}
	091 Move X8, 0x23A4000
	092 Move X8, [X8+3128]
	093 Add X2, X31, 8
	094 Move X1, X19
	095 Move X3, [X8]
	096 Call StateDictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	097 Xor W8, W0, 1
	098 Move W8, W31
	099 Move X20, [X31+32]
	100 Move X19, [X31+40]
	101 Move X30, [X31+16]
	102 Move X21, [X31+24]
	103 And W0, W8, 1
	104 Add X31, X31, 48
	105 Return X0
	106 Call 0x1C17F20

Method: System.String <FetchPlayerAvatarData>b__7_3(System.Collections.Generic.KeyValuePair`2<System.String, AnimalCompany.UserAvatarState> kvp)

Disassembly:
	0x01D51DE8 LDP X8, X1, [X0]
	0x01D51DEC MOV X0, X21
	0x01D51DF0 BLR X8
	0x01D51DF4 MOV X1, X0
	0x01D51DF8 CBZ X23, 0x1D5202C
	0x01D51DFC LDR X2, [X29]
	0x01D51E00 MOV X0, X23
	0x01D51E04 BL 0x265C3F4
	0x01D51E08 LDR X8, [X21]
	0x01D51E0C LDR X1, [X27]
	0x01D51E10 LDRH W9, [X8 + 0x12E]
	0x01D51E14 CBZ X9, 0x1D51E38
	0x01D51E18 LDR X10, [X8 + 0xB0]
	0x01D51E1C ADD X10, X10, 0x8
	0x01D51E20 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2688000
	005 Move W8, [X20+1980]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x23A4000
	012 Move X0, [X0+3136]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1980], W8
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Return X0

Method: System.Boolean <ShouldFetch>b__8_0(System.String userID)

Disassembly:
	0x01D51E24 CMP X11, X1
	0x01D51E28 B.EQ 0x1D51E48
	0x01D51E2C SUBS X9, X9, 0x1
	0x01D51E30 ADD X10, X10, 0x10
	0x01D51E34 B.NE 0x1D51E20
	0x01D51E38 MOVZ W2, 0x3
	0x01D51E3C MOV X0, X21
	0x01D51E40 BL 0x1C5C788
	0x01D51E44 B 0x1D51E58
	0x01D51E48 LDR W9, [X10]
	0x01D51E4C ADD W9, W9, 0x3
	0x01D51E50 ADD X8, X8, W9, 0x4, SXTW
	0x01D51E54 ADD X0, X8, 0x138
	0x01D51E58 LDP X8, X1, [X0]
	0x01D51E5C MOV X0, X21
	0x01D51E60 BLR X8
	0x01D51E64 MOV X1, X31
	0x01D51E68 BL 0x32277A8
	0x01D51E6C TBZ X0, 0x0, 0x1D51EE4
	0x01D51E70 LDR X8, [X21]
	0x01D51E74 LDR X23, [X22 + 0x60]
	0x01D51E78 LDR X1, [X27]
	0x01D51E7C LDRH W9, [X8 + 0x12E]
	0x01D51E80 CBZ X9, 0x1D51EA4
	0x01D51E84 LDR X10, [X8 + 0xB0]
	0x01D51E88 ADD X10, X10, 0x8
	0x01D51E8C LDUR X11, [X10 - 0x8]
	0x01D51E90 CMP X11, X1
	0x01D51E94 B.EQ 0x1D51EB4
	0x01D51E98 SUBS X9, X9, 0x1
	0x01D51E9C ADD X10, X10, 0x10
	0x01D51EA0 B.NE 0x1D51E8C
	0x01D51EA4 MOVZ W2, 0x11
	0x01D51EA8 MOV X0, X21
	0x01D51EAC BL 0x1C5C788
	0x01D51EB0 B 0x1D51EC4
	0x01D51EB4 LDR W9, [X10]
	0x01D51EB8 ADD W9, W9, 0x11
	0x01D51EBC ADD X8, X8, W9, 0x4, SXTW
	0x01D51EC0 ADD X0, X8, 0x138
	0x01D51EC4 LDP X8, X1, [X0]
	0x01D51EC8 MOV X0, X21
	0x01D51ECC BLR X8
	0x01D51ED0 MOV X1, X0
	0x01D51ED4 CBZ X23, 0x1D52038
	0x01D51ED8 LDR X2, [X29]
	0x01D51EDC MOV X0, X23
	0x01D51EE0 BL 0x265C3F4
	0x01D51EE4 LDR X8, [X21]
	0x01D51EE8 LDR X23, [X22 + 0x68]
	0x01D51EEC LDR X1, [X27]
	0x01D51EF0 LDRH W9, [X8 + 0x12E]
	0x01D51EF4 CBZ X9, 0x1D51F18
	0x01D51EF8 LDR X10, [X8 + 0xB0]
	0x01D51EFC ADD X10, X10, 0x8
	0x01D51F00 LDUR X11, [X10 - 0x8]
	0x01D51F04 CMP X11, X1
	0x01D51F08 B.EQ 0x1D51F28
	0x01D51F0C SUBS X9, X9, 0x1
	0x01D51F10 ADD X10, X10, 0x10
	0x01D51F14 B.NE 0x1D51F00
	0x01D51F18 MOVZ W2, 0x1
	0x01D51F1C MOV X0, X21
	0x01D51F20 BL 0x1C5C788
	0x01D51F24 B 0x1D51F38
	0x01D51F28 LDR W9, [X10]
	0x01D51F2C ADD W9, W9, 0x1
	0x01D51F30 ADD X8, X8, W9, 0x4, SXTW
	0x01D51F34 ADD X0, X8, 0x138
	0x01D51F38 LDP X8, X1, [X0]
	0x01D51F3C MOV X0, X21
	0x01D51F40 BLR X8
	0x01D51F44 MOV X1, X0
	0x01D51F48 CBZ X23, 0x1D52030
	0x01D51F4C LDR X2, [X29]
	0x01D51F50 MOV X0, X23
	0x01D51F54 BL 0x265C3F4
	0x01D51F58 LDR X0, [X24]
	0x01D51F5C LDR X21, [X22 + 0x48]
	0x01D51F60 LDR W8, [X0 + 0xE0]
	0x01D51F64 CBNZ W8, 0x1D51F6C
	0x01D51F68 BL 0x1C16DFC
	0x01D51F6C MOV X0, X31
	0x01D51F70 BL 0x3361584

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2688000
	006 Move X20, 0x23A3000
	007 Move W8, [X21+1981]
	008 Move X20, [X20+1608]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x23A3000
	015 Move X0, [X0+1608]
	016 Call 0x1C17CF4
	017 Move X0, 0x23A4000
	018 Move X0, [X0+3144]
	019 Call 0x1C17CF4
	020 Move X0, 0x23A4000
	021 Move X0, [X0+504]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1981], W8
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X21, 0x2688000
	031 Move W8, [X21+1927]
	032 Compare W8, 0
	033 JumpIfNotEqual {39}
	034 Move X0, 0x23A3000
	035 Move X0, [X0+1608]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+1927], W8
	039 Move X0, [X20]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {45}
	043 Call 0x1C17DFC
	044 Move X0, [X20]
	045 Move X8, [X0+184]
	046 Move X8, [X8]
	047 Compare X8, 0
	048 JumpIfEqual {107}
	049 Move X0, [X8+208]
	050 Compare X0, 0
	051 JumpIfEqual {107}
	052 Move X8, 0x23A4000
	053 Move X8, [X8+3144]
	054 Move X1, X19
	055 Move X2, [X8]
	056 Call StateDictionary`2<Object, Object>.ContainsKey, X0, X1
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {67}
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move W0, W31
	064 Move X30, [X31+32]
	065 Move X21, [X31+40]
	066 Return X0
	067 Move X0, [X20]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move W8, [X21+1927]
	073 Compare W8, 0
	074 JumpIfNotEqual {80}
	075 Move X0, 0x23A3000
	076 Move X0, [X0+1608]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X21+1927], W8
	080 Move X0, [X20]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {86}
	084 Call 0x1C17DFC
	085 Move X0, [X20]
	086 Move X8, [X0+184]
	087 Move X8, [X8]
	088 Compare X8, 0
	089 JumpIfEqual {107}
	090 Move X8, [X8+184]
	091 Compare X8, 0
	092 JumpIfEqual {107}
	093 Move X0, [X8+80]
	094 Move X8, 0x23A4000
	095 Move X8, [X8+504]
	096 Move X1, [X8]
	097 Call StatePrimitive`1<Object>.op_Implicit, X0
	098 Move X1, X0
	099 Move X0, X19
	100 Move X20, [X31+16]
	101 Move X19, [X31+24]
	102 Move X2, X31
	103 Move X30, [X31+32]
	104 Move X21, [X31+40]
	105 Call String.op_Inequality, X0, X1
	106 Return X0
	107 Call 0x1C17F20

