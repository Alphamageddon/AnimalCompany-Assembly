Type: AnimalCompany.PlayerView/<PlayerHitCoroutine>d__77

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01CC6650 ADD X8, X21, W22, 0x3, SXTW
	0x01CC6654 LDR X20, [X8 + 0x20]
	0x01CC6658 CBZ X20, 0x1CC67E4
	0x01CC665C MOV X0, X20
	0x01CC6660 MOV X1, X31
	0x01CC6664 BL 0x3A7BCC8
	0x01CC6668 CBZ X0, 0x1CC67E4
	0x01CC666C LDR X1, [X23]
	0x01CC6670 MOV X2, X31
	0x01CC6674 BL 0x3A7D6E8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01CC7598 BL 0x1CC8404

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01CC759C MOV X0, X19
	0x01CC75A0 BL 0x1CC69B4
	0x01CC75A4 STR W0, [X19 + 0xB4]
	0x01CC75A8 LDP X20, X19, [X31 + 0x20]
	0x01CC75AC LDP X22, X21, [X31 + 0x10]
	0x01CC75B0 LDR X30, [X31], #0x30
	0x01CC75B4 RET
	0x01CC75B8 BL 0x1B6EA1C
	0x01CC75BC STP D15, D14, [X31 - 0x70]!
	0x01CC75C0 STP D13, D12, [X31 + 0x10]
	0x01CC75C4 STP D11, D10, [X31 + 0x20]
	0x01CC75C8 STP D9, D8, [X31 + 0x30]
	0x01CC75CC STR X30, [X31 + 0x40]
	0x01CC75D0 STP X22, X21, [X31 + 0x50]
	0x01CC75D4 STP X20, X19, [X31 + 0x60]
	0x01CC75D8 ADRP X20, 0x255C000
	0x01CC75DC LDRB W8, [X20 + 0x562]
	0x01CC75E0 MOV X19, X0
	0x01CC75E4 TBNZ X8, 0x0, 0x1CC7608
	0x01CC75E8 ADRP X0, 0x2286000
	0x01CC75EC LDR X0, [X0 + 0x478]
	0x01CC75F0 BL 0x1B6E7F0
	0x01CC75F4 ADRP X0, 0x2287000
	0x01CC75F8 LDR X0, [X0 + 0x198]
	0x01CC75FC BL 0x1B6E7F0
	0x01CC7600 MOVZ W8, 0x1
	0x01CC7604 STRB W8, [X20 + 0x562]
	0x01CC7608 MOV X0, X19
	0x01CC760C BL 0x1CC6B4C
	0x01CC7610 TBZ X0, 0x0, 0x1CC7A44
	0x01CC7614 MOV X0, X31
	0x01CC7618 BL 0x3AA47CC
	0x01CC761C LDR V1, [X19 + 0xD0]
	0x01CC7620 FSUB S0, S0, S1
	0x01CC7624 FMOV S1, 1
	0x01CC7628 FCMP S0, S1
	0x01CC762C B.LE 0x1CC7754
	0x01CC7630 LDR X8, [X19 + 0x80]
	0x01CC7634 CBZ X8, 0x1CC7A8C
	0x01CC7638 LDR X0, [X8 + 0x88]
	0x01CC763C CBZ X0, 0x1CC7A8C
	0x01CC7640 MOV X1, X31
	0x01CC7644 BL 0x3AA7658
	0x01CC7648 LDR X8, [X19 + 0x80]
	0x01CC764C CBZ X8, 0x1CC7A8C
	0x01CC7650 LDR X0, [X8 + 0x88]
	0x01CC7654 CBZ X0, 0x1CC7A8C
	0x01CC7658 MOV X1, X31
	0x01CC765C MOV V9.16B, V2.16B
	0x01CC7660 MOV V10.16B, V1.16B
	0x01CC7664 STR S0, [X31 + 0x4C]
	0x01CC7668 BL 0x3AA7A54
	0x01CC766C MOV X0, X19
	0x01CC7670 MOV X1, X31
	0x01CC7674 MOV V11.16B, V0.16B
	0x01CC7678 MOV V12.16B, V1.16B
	0x01CC767C MOV V13.16B, V2.16B
	0x01CC7680 BL 0x3A9B084
	0x01CC7684 CBZ X0, 0x1CC7A8C
	0x01CC7688 MOV X1, X31
	0x01CC768C BL 0x3AA7658
	0x01CC7690 LDR X0, [X19 + 0x80]
	0x01CC7694 CBZ X0, 0x1CC7A8C
	0x01CC7698 MOV X1, X31
	0x01CC769C MOV V14.16B, V0.16B
	0x01CC76A0 MOV V15.16B, V1.16B
	0x01CC76A4 MOV V8.16B, V2.16B
	0x01CC76A8 BL 0x1CB47E0
	0x01CC76AC TBZ X0, 0x0, 0x1CC76D8
	0x01CC76B0 MOV X0, X19
	0x01CC76B4 BL 0x1CC6834
	0x01CC76B8 TBNZ X0, 0x1F, 0x1CC7754
	0x01CC76BC MOVN W1, 0x0
	0x01CC76C0 MOV X0, X19
	0x01CC76C4 BL 0x1CC7A90
	0x01CC76C8 MOV X0, X31
	0x01CC76CC BL 0x3AA47CC
	0x01CC76D0 STR S0, [X19 + 0xD0]
	0x01CC76D4 B 0x1CC7754
	0x01CC76D8 ADRP X8, 0xFFFFFFFFFEDE2000
	0x01CC76DC LDR V0, [X8 + 0xAB0]
	0x01CC76E0 LDR V4, [X31 + 0x4C]
	0x01CC76E4 ADRP X8, 0xFFFFFFFFFEDE2000
	0x01CC76E8 LDR V3, [X8 + 0xD08]
	0x01CC76EC FMUL S1, S13, S0
	0x01CC76F0 FMUL S2, S12, S0
	0x01CC76F4 FMUL S0, S11, S0
	0x01CC76F8 FSUB S2, S10, S2
	0x01CC76FC FSUB S0, S4, S0
	0x01CC7700 FSUB S1, S9, S1
	0x01CC7704 FSUB S0, S0, S14
	0x01CC7708 FSUB S2, S2, S15
	0x01CC770C FSUB S1, S1, S8
	0x01CC7710 FMUL S0, S0, S0
	0x01CC7714 FMUL S2, S2, S2
	0x01CC7718 FADD S0, S0, S2
	0x01CC771C FMUL S1, S1, S1
	0x01CC7720 FADD S8, S1, S0
	0x01CC7724 FCMP S8, S3
	0x01CC7728 B.MI 0x1CC7748
	0x01CC772C MOV X0, X19
	0x01CC7730 BL 0x1CC6834
	0x01CC7734 ADRP X8, 0xFFFFFFFFFEDE2000
	0x01CC7738 LDR V0, [X8 + 0x960]
	0x01CC773C FCMP S8, S0
	0x01CC7740 B.PL 0x1CC76B0
	0x01CC7744 TBNZ X0, 0x1F, 0x1CC76B0
	0x01CC7748 MOV X0, X19
	0x01CC774C BL 0x1CC6834
	0x01CC7750 TBNZ X0, 0x1F, 0x1CC7A64
	0x01CC7754 ADRP X21, 0x2287000
	0x01CC7758 LDR X21, [X21 + 0x198]
	0x01CC775C LDR X0, [X21]
	0x01CC7760 LDR W8, [X0 + 0xE0]
	0x01CC7764 CBNZ W8, 0x1CC776C
	0x01CC7768 BL 0x1B6E8F8
	0x01CC776C ADRP X22, 0x255C000
	0x01CC7770 LDRB W8, [X22 + 0x44F]
	0x01CC7774 CBNZ W8, 0x1CC778C
	0x01CC7778 ADRP X0, 0x2287000
	0x01CC777C LDR X0, [X0 + 0x198]
	0x01CC7780 BL 0x1B6E7F0
	0x01CC7784 MOVZ W8, 0x1
	0x01CC7788 STRB W8, [X22 + 0x44F]
	0x01CC778C LDR X0, [X21]
	0x01CC7790 LDR W8, [X0 + 0xE0]
	0x01CC7794 CBNZ W8, 0x1CC77A0
	0x01CC7798 BL 0x1B6E8F8
	0x01CC779C LDR X0, [X21]
	0x01CC77A0 LDR X8, [X0 + 0xB8]
	0x01CC77A4 LDR X8, [X8]
	0x01CC77A8 CBZ X8, 0x1CC7A8C
	0x01CC77AC LDR X0, [X8 + 0x58]
	0x01CC77B0 CBZ X0, 0x1CC7A8C
	0x01CC77B4 MOV X1, X31
	0x01CC77B8 BL 0x3AA7658
	0x01CC77BC LDR X0, [X19 + 0xA0]
	0x01CC77C0 CBZ X0, 0x1CC7A8C
	0x01CC77C4 MOV X1, X31
	0x01CC77C8 MOV V8.16B, V0.16B
	0x01CC77CC MOV V9.16B, V1.16B
	0x01CC77D0 MOV V10.16B, V2.16B
	0x01CC77D4 BL 0x3A9B084
	0x01CC77D8 CBZ X0, 0x1CC7A8C
	0x01CC77DC MOV X1, X31
	0x01CC77E0 BL 0x3AA7658
	0x01CC77E4 ADRP X20, 0x255C000
	0x01CC77E8 LDRB W8, [X20 + 0x440]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x255D000
	009 Move W8, [X20+1373]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x2289000
	016 Move X0, [X0+904]
	017 Call 0x1B6F7F0
	018 Move X0, 0x2288000
	019 Move X0, [X0+744]
	020 Call 0x1B6F7F0
	021 Move X0, 0x2289000
	022 Move X0, [X0+1104]
	023 Call 0x1B6F7F0
	024 Move W8, 1
	025 Move [X20+1373], W8
	026 Move W8, [X19+16]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Compare W8, 0
	029 JumpIfNotEqual {155}
	030 Move X8, [X19+32]
	031 Move TEMP, 0
	032 Not TEMP
	033 Move W9, TEMP
	034 Move [X19+16], W9
	035 Compare X8, 0
	036 JumpIfEqual {164}
	037 Move W9, [X8+80]
	038 Move W10, 96
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W9, 88
	041 NotImplemented "Instruction CSEL not yet implemented."
	042 Move X21, [X8]
	043 Move [X19+40], X21
	044 Compare X21, 0
	045 JumpIfEqual {164}
	046 Move W8, [X21+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X23, 0x2289000
	049 Move X24, 0x2289000
	050 Move X23, [X23+1104]
	051 Move X24, [X24+904]
	052 Move W22, W31
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Add X8, X21, W22
	055 Move X20, [X8+32]
	056 Compare X20, 0
	057 JumpIfEqual {164}
	058 Move X0, X20
	059 Move X1, X31
	060 Call Renderer.get_material, X0
	061 Compare X0, 0
	062 JumpIfEqual {164}
	063 Move X1, [X23]
	064 Move X2, X31
	065 Call Material.EnableKeyword, X0, X1
	066 Move X0, X20
	067 Move X1, X31
	068 Call Renderer.get_material, X0
	069 Move X8, [X24]
	070 Move X20, X0
	071 Move W9, [X8+224]
	072 Compare W9, 0
	073 JumpIfNotEqual {76}
	074 Move X0, X8
	075 Call 0x1B6F8F8
	076 Compare X20, 0
	077 JumpIfEqual {164}
	078 Move X8, [X24]
	079 Move S0, 1
	080 Move S1, W31
	081 Move S2, W31
	082 Move X8, [X8+184]
	083 Move S3, 1
	084 Move X0, X20
	085 Move X2, X31
	086 Move W1, [X8+48]
	087 Call Material.SetColor, X0, X1, X2
	088 Move W8, [X21+24]
	089 Add W22, W22, 1
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X8, 0x2288000
	092 Move X8, [X8+744]
	093 Move X0, [X8]
	094 Call 0x1B6FA0C
	095 Move X8, -18993152
	096 Move V0, [X8+2736]
	097 Move X1, X31
	098 Move X20, X0
	099 Call WaitForSeconds..ctor, X0, V0
	100 Move W0, 1
	101 Move [X19+24], X20
	102 Move [X19+16], W0
	103 Move X20, [X19+40]
	104 Move TEMP, 0
	105 Not TEMP
	106 Move W8, TEMP
	107 Move [X19+16], W8
	108 Compare X20, 0
	109 JumpIfEqual {164}
	110 Move W8, [X20+24]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X22, 0x2289000
	113 Move X23, 0x2289000
	114 Move X22, [X22+1104]
	115 Move X23, [X23+904]
	116 Move W21, W31
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Add X8, X20, W21
	119 Move X19, [X8+32]
	120 Compare X19, 0
	121 JumpIfEqual {164}
	122 Move X0, X19
	123 Move X1, X31
	124 Call Renderer.get_material, X0
	125 Compare X0, 0
	126 JumpIfEqual {164}
	127 Move X1, [X22]
	128 Move X2, X31
	129 Call Material.DisableKeyword, X0, X1
	130 Move X0, X19
	131 Move X1, X31
	132 Call Renderer.get_material, X0
	133 Move X8, [X23]
	134 Move X19, X0
	135 Move W9, [X8+224]
	136 Compare W9, 0
	137 JumpIfNotEqual {140}
	138 Move X0, X8
	139 Call 0x1B6F8F8
	140 Compare X19, 0
	141 JumpIfEqual {164}
	142 Move X8, [X23]
	143 Move S0, W31
	144 Move S1, W31
	145 Move S2, W31
	146 Move X8, [X8+184]
	147 Move S3, 1
	148 Move X0, X19
	149 Move X2, X31
	150 Move W1, [X8+48]
	151 Call Material.SetColor, X0, X1, X2
	152 Move W8, [X20+24]
	153 Add W21, W21, 1
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move W0, W31
	156 Move X20, [X31+48]
	157 Move X19, [X31+56]
	158 Move X22, [X31+32]
	159 Move X21, [X31+40]
	160 Move X24, [X31+16]
	161 Move X23, [X31+24]
	162 Move X30, [X31+64]
	163 Return X0
	164 Call 0x1B6FA1C
	165 Call 0x1B6FA24

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x01CC77EC MOV V11.16B, V0.16B
	0x01CC77F0 MOV V12.16B, V1.16B

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01CC77F4 MOV V13.16B, V2.16B
	0x01CC77F8 CBNZ W8, 0x1CC7810
	0x01CC77FC ADRP X0, 0x2286000
	0x01CC7800 LDR X0, [X0 + 0x488]
	0x01CC7804 BL 0x1B6E7F0
	0x01CC7808 MOVZ W8, 0x1
	0x01CC780C STRB W8, [X20 + 0x440]
	0x01CC7810 ADRP X8, 0x2286000
	0x01CC7814 LDR X8, [X8 + 0x488]
	0x01CC7818 LDR X0, [X8]
	0x01CC781C LDR W8, [X0 + 0xE0]
	0x01CC7820 CBNZ W8, 0x1CC7828
	0x01CC7824 BL 0x1B6E8F8
	0x01CC7828 LDR X0, [X19 + 0xA0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x2287000
	004 Move X0, [X0+2448]
	005 Call 0x1B6F804
	006 Call 0x1B6FA0C
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2289000
	011 Move X0, [X0+1112]
	012 Call 0x1B6F804
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1B6F8E8

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01CC782C CBZ X0, 0x1CC7A8C
	0x01CC7830 MOV X1, X31

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

