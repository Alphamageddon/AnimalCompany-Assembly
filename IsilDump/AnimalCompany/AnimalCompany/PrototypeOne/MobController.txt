Type: AnimalCompany.PrototypeOne.MobController

Method: AnimalCompany.PrototypeOne.MobController/MobMoveStatus get_MoveStatus()

Disassembly:
	0x01E17688 BL 0x3BE1AC4
	0x01E1768C LDR X8, [X19 + 0x118]
	0x01E17690 CBZ X8, 0x1E17810
	0x01E17694 LDRSW X9, [X19 + 0x120]
	0x01E17698 LDR W10, [X8 + 0x18]
	0x01E1769C CMP W9, W10
	0x01E176A0 B.CS 0x1E17814
	0x01E176A4 ADD X8, X8, X9, 0x3, LSL
	0x01E176A8 LDR X0, [X8 + 0x20]
	0x01E176AC CBZ X0, 0x1E17810
	0x01E176B0 LDR X20, [X19 + 0x90]
	0x01E176B4 MOV X1, X31
	0x01E176B8 BL 0x3C3F58C
	0x01E176BC CBZ X20, 0x1E17810
	0x01E176C0 MOV X0, X20
	0x01E176C4 MOV X1, X31
	0x01E176C8 BL 0x3BE13F8
	0x01E176CC LDR V11, [X19 + 0xF8]
	0x01E176D0 MOV X0, X19
	0x01E176D4 MOV X1, X31
	0x01E176D8 BL 0x3C32E90
	0x01E176DC CBZ X0, 0x1E17810
	0x01E176E0 MOV X1, X31
	0x01E176E4 BL 0x3C3F58C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move W0, [X8]
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0
	010 Move X0, 0x22DD000
	011 Move X0, [X0+1456]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0x22E4000
	016 Move X0, [X0+928]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x22E4000
	023 Move X0, [X0+936]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: System.Void set_MoveStatus(AnimalCompany.PrototypeOne.MobController/MobMoveStatus value)

Disassembly:
	0x01E176E8 LDP S12, S13, [X19 + 0xEC]
	0x01E176EC LDRB W8, [X21 + 0x85C]
	0x01E176F0 LDR V14, [X19 + 0xF4]
	0x01E176F4 MOV V8.16B, V0.16B
	0x01E176F8 MOV V9.16B, V1.16B
	0x01E176FC MOV V10.16B, V2.16B
	0x01E17700 CBNZ W8, 0x1E17718
	0x01E17704 ADRP X0, 0x22DC000
	0x01E17708 LDR X0, [X0 + 0x5A8]
	0x01E1770C BL 0x1C16CF4
	0x01E17710 MOVZ W8, 0x1
	0x01E17714 STRB W8, [X21 + 0x85C]
	0x01E17718 LDR X0, [X22]
	0x01E1771C FSUB S12, S8, S12
	0x01E17720 FSUB S9, S9, S13
	0x01E17724 FSUB S8, S10, S14
	0x01E17728 LDR W8, [X0 + 0xE0]
	0x01E1772C CBNZ W8, 0x1E17734
	0x01E17730 BL 0x1C16DFC
	0x01E17734 FMUL S0, S12, S12
	0x01E17738 FMUL S1, S9, S9
	0x01E1773C FADD S0, S0, S1
	0x01E17740 FMUL S1, S8, S8
	0x01E17744 FADD S0, S1, S0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move [X8], W1
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 
	010 Move X0, 0x22DD000
	011 Move X0, [X0+1456]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0x22E4000
	016 Move X0, [X0+928]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x22E4000
	023 Move X0, [X0+944]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: System.Void Awake()

Disassembly:
	0x01E17748 FSQRT S0, S0
	0x01E1774C FADD S0, S11, S0
	0x01E17750 MOV X0, X19
	0x01E17754 MOV X1, X31
	0x01E17758 STR S0, [X19 + 0xF8]
	0x01E1775C BL 0x3C32E90
	0x01E17760 CBZ X0, 0x1E17810
	0x01E17764 MOV X1, X31
	0x01E17768 BL 0x3C3F58C
	0x01E1776C LDR V3, [X19 + 0xF8]
	0x01E17770 LDR V4, [X19 + 0xDC]
	0x01E17774 STP S0, S1, [X19 + 0xEC]
	0x01E17778 STR S2, [X19 + 0xF4]
	0x01E1777C FCMP S3, S4
	0x01E17780 B.LT 0x1E177F0
	0x01E17784 LDR X0, [X19 + 0x98]
	0x01E17788 CBZ X0, 0x1E17810
	0x01E1778C MOV W1, W31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+152]
	005 Move [X19+128], W31
	006 Compare X0, 0
	007 JumpIfEqual {23}
	008 Move W1, W31
	009 Call MobView.SetWalk, X0, X1
	010 Move X0, X19
	011 Move X1, X31
	012 Call Component.get_transform, X0
	013 Compare X0, 0
	014 JumpIfEqual {23}
	015 Move X1, X31
	016 Call Transform.get_position, X0
	017 Move [X19+236], S0
	018 Move [X19+244], S1
	019 Move [X19+244], S2
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 Return 
	023 Call 0x1C17F20

Method: System.Void FixedUpdateNetwork()

Disassembly:
	0x01E17810 BL 0x1C16F20
	0x01E17814 BL 0x1C16F28
	0x01E17818 SUB X31, X31, 0x80
	0x01E1781C STR D14, [X31 + 0x10]
	0x01E17820 STP D13, D12, [X31 + 0x20]
	0x01E17824 STP D11, D10, [X31 + 0x30]
	0x01E17828 STP D9, D8, [X31 + 0x40]
	0x01E1782C STP X30, X23, [X31 + 0x50]
	0x01E17830 STP X22, X21, [X31 + 0x60]
	0x01E17834 STP X20, X19, [X31 + 0x70]
	0x01E17838 ADRP X21, 0x25C1000
	0x01E1783C ADRP X20, 0x22DC000
	0x01E17840 LDRB W8, [X21 + 0xE06]
	0x01E17844 LDR X20, [X20 + 0x598]
	0x01E17848 MOV X19, X0
	0x01E1784C TBNZ X8, 0x0, 0x1E17870
	0x01E17850 ADRP X0, 0x22DC000
	0x01E17854 LDR X0, [X0 + 0x598]
	0x01E17858 BL 0x1C16CF4
	0x01E1785C ADRP X0, 0x22E3000
	0x01E17860 LDR X0, [X0 + 0x3C0]
	0x01E17864 BL 0x1C16CF4
	0x01E17868 MOVZ W8, 0x1
	0x01E1786C STRB W8, [X21 + 0xE06]
	0x01E17870 LDR X0, [X20]
	0x01E17874 LDR X20, [X19 + 0x108]
	0x01E17878 LDR W8, [X0 + 0xE0]
	0x01E1787C CBNZ W8, 0x1E17884
	0x01E17880 BL 0x1C16DFC
	0x01E17884 MOV X0, X20
	0x01E17888 MOV X1, X31
	0x01E1788C MOV X2, X31
	0x01E17890 BL 0x3C3883C
	0x01E17894 TBNZ X0, 0x0, 0x1E178AC
	0x01E17898 LDR X0, [X19 + 0x108]
	0x01E1789C CBZ X0, 0x1E17DBC
	0x01E178A0 MOV X1, X31
	0x01E178A4 BL 0x1DAEC64
	0x01E178A8 TBZ X0, 0x0, 0x1E178EC
	0x01E178AC MOV X0, X19
	0x01E178B0 MOV W1, W31
	0x01E178B4 STR X31, [X19 + 0x108]
	0x01E178B8 BL 0x1E166E8
	0x01E178BC MOVZ W8, 0x1
	0x01E178C0 STR W8, [X19 + 0x80]
	0x01E178C4 STR W31, [X19 + 0xC4]
	0x01E178C8 LDP X20, X19, [X31 + 0x70]
	0x01E178CC LDP X22, X21, [X31 + 0x60]
	0x01E178D0 LDP X30, X23, [X31 + 0x50]
	0x01E178D4 LDP D9, D8, [X31 + 0x40]
	0x01E178D8 LDP D11, D10, [X31 + 0x30]
	0x01E178DC LDP D13, D12, [X31 + 0x20]
	0x01E178E0 LDR V14, [X31 + 0x10]
	0x01E178E4 ADD X31, X31, 0x80
	0x01E178E8 RET
	0x01E178EC MOV X0, X19
	0x01E178F0 MOV X1, X31
	0x01E178F4 BL 0x3C32E90
	0x01E178F8 CBZ X0, 0x1E17DBC
	0x01E178FC MOV X1, X31
	0x01E17900 BL 0x3C3F58C
	0x01E17904 MOV X0, X31
	0x01E17908 BL 0x1DC0890
	0x01E1790C LDR X0, [X19 + 0x108]
	0x01E17910 CBZ X0, 0x1E17DBC
	0x01E17914 MOV X1, X31
	0x01E17918 MOV V8.16B, V0.16B
	0x01E1791C MOV V9.16B, V1.16B
	0x01E17920 MOV V10.16B, V2.16B
	0x01E17924 BL 0x3C32E90
	0x01E17928 CBZ X0, 0x1E17DBC
	0x01E1792C MOV X1, X31
	0x01E17930 BL 0x3C3F58C
	0x01E17934 MOV X0, X31
	0x01E17938 BL 0x1DC0890
	0x01E1793C ADRP X22, 0x25C1000
	0x01E17940 LDRB W8, [X22 + 0x85C]
	0x01E17944 MOV V11.16B, V0.16B
	0x01E17948 MOV V12.16B, V1.16B
	0x01E1794C MOV V13.16B, V2.16B
	0x01E17950 CBNZ W8, 0x1E17968
	0x01E17954 ADRP X0, 0x22DC000
	0x01E17958 LDR X0, [X0 + 0x5A8]
	0x01E1795C BL 0x1C16CF4
	0x01E17960 MOVZ W8, 0x1
	0x01E17964 STRB W8, [X22 + 0x85C]
	0x01E17968 ADRP X23, 0x22DC000
	0x01E1796C LDR X23, [X23 + 0x5A8]
	0x01E17970 FSUB S11, S8, S11
	0x01E17974 FSUB S9, S9, S12
	0x01E17978 FSUB S8, S10, S13
	0x01E1797C LDR X0, [X23]
	0x01E17980 LDR W8, [X0 + 0xE0]
	0x01E17984 CBNZ W8, 0x1E1798C
	0x01E17988 BL 0x1C16DFC
	0x01E1798C FMUL S0, S11, S11
	0x01E17990 FMUL S1, S9, S9
	0x01E17994 FMUL S2, S8, S8
	0x01E17998 FADD S0, S0, S1
	0x01E1799C FADD S0, S2, S0
	0x01E179A0 FSQRT S0, S0
	0x01E179A4 FMOV S1, 0.5
	0x01E179A8 FCMP S0, S1
	0x01E179AC B.PL 0x1E17AC8
	0x01E179B0 MOV X0, X19
	0x01E179B4 BL 0x1E16688
	0x01E179B8 CBZ W0, 0x1E17A1C
	0x01E179BC LDR X0, [X19 + 0x98]
	0x01E179C0 CBZ X0, 0x1E17DBC
	0x01E179C4 MOV W1, W31
	0x01E179C8 BL 0x1E16790
	0x01E179CC MOV X0, X19
	0x01E179D0 MOV W1, W31
	0x01E179D4 BL 0x1E166E8
	0x01E179D8 MOV X0, X31
	0x01E179DC STR W31, [X19 + 0xFC]
	0x01E179E0 BL 0x3C3C6C4
	0x01E179E4 LDR X20, [X19 + 0x90]
	0x01E179E8 FMOV S1, -1
	0x01E179EC FADD S0, S0, S1
	0x01E179F0 STR S0, [X19 + 0x100]
	0x01E179F4 CBZ X20, 0x1E17DBC
	0x01E179F8 MOV X0, X20
	0x01E179FC MOV X1, X31
	0x01E17A00 BL 0x3C32E90
	0x01E17A04 CBZ X0, 0x1E17DBC
	0x01E17A08 MOV X1, X31
	0x01E17A0C BL 0x3C3F58C
	0x01E17A10 MOV X0, X20
	0x01E17A14 MOV X1, X31
	0x01E17A18 BL 0x3BE13F8
	0x01E17A1C LDR W8, [X19 + 0xC4]
	0x01E17A20 MOVZ W9, 0xCC
	0x01E17A24 LDR V8, [X19 + 0xD0]
	0x01E17A28 CMP W8, 0x0
	0x01E17A2C MOVZ W8, 0xC8
	0x01E17A30 CSEL X8, X8, X9, EQ
	0x01E17A34 LDR V0, [X19, X8, LSL]
	0x01E17A38 FCMP S8, S0
	0x01E17A3C B.LE 0x1E17A74
	0x01E17A40 LDR X20, [X19 + 0x108]
	0x01E17A44 LDR W21, [X19 + 0xC0]
	0x01E17A48 MOV X0, X19
	0x01E17A4C MOV X1, X31
	0x01E17A50 STR W31, [X19 + 0xD0]
	0x01E17A54 BL 0x3C32E90
	0x01E17A58 LDR X8, [X19 + 0x40]
	0x01E17A5C MOV X2, X0
	0x01E17A60 CBZ X8, 0x1E17A88
	0x01E17A64 LDR X8, [X8 + 0x20]
	0x01E17A68 CBZ X8, 0x1E17A88
	0x01E17A6C LDR W7, [X8]
	0x01E17A70 B 0x1E17A8C
	0x01E17A74 MOV X0, X31
	0x01E17A78 BL 0x3C3C714
	0x01E17A7C FADD S0, S8, S0
	0x01E17A80 STR S0, [X19 + 0xD0]
	0x01E17A84 B 0x1E17AC8
	0x01E17A88 MOV X7, X31
	0x01E17A8C CBZ X20, 0x1E17DBC
	0x01E17A90 ADRP X9, 0x22E3000
	0x01E17A94 LDP X3, X4, [X19 + 0x128]
	0x01E17A98 LDR W8, [X19 + 0x68]
	0x01E17A9C LDR X9, [X9 + 0x3C0]
	0x01E17AA0 MOV X0, X20
	0x01E17AA4 MOV W1, W21
	0x01E17AA8 BFM X7, X8, 0x20, 0x1F
	0x01E17AAC LDR X6, [X9]
	0x01E17AB0 MOV W5, W31
	0x01E17AB4 STR X31, [X31]
	0x01E17AB8 BL 0x1DB7850
	0x01E17ABC LDR W8, [X19 + 0xC4]
	0x01E17AC0 ADD W8, W8, 0x1
	0x01E17AC4 STR W8, [X19 + 0xC4]
	0x01E17AC8 MOV X0, X19
	0x01E17ACC BL 0x1E16688
	0x01E17AD0 CBNZ W0, 0x1E17B1C
	0x01E17AD4 MOV X0, X31
	0x01E17AD8 BL 0x3C3C6C4
	0x01E17ADC LDR V1, [X19 + 0x100]
	0x01E17AE0 LDR V2, [X19 + 0xE4]
	0x01E17AE4 FSUB S0, S0, S1
	0x01E17AE8 FCMP S0, S2
	0x01E17AEC B.LT 0x1E17B1C
	0x01E17AF0 LDR X0, [X19 + 0x98]
	0x01E17AF4 CBZ X0, 0x1E17DBC
	0x01E17AF8 MOVZ W1, 0x1
	0x01E17AFC BL 0x1E16790
	0x01E17B00 LDR X0, [X19 + 0x98]
	0x01E17B04 CBZ X0, 0x1E17DBC
	0x01E17B08 LDR V0, [X19 + 0xD8]
	0x01E17B0C BL 0x1E17DC0
	0x01E17B10 MOVZ W1, 0x2
	0x01E17B14 MOV X0, X19
	0x01E17B18 BL 0x1E166E8
	0x01E17B1C MOV X0, X19
	0x01E17B20 BL 0x1E16688
	0x01E17B24 CBZ W0, 0x1E178C8
	0x01E17B28 LDR X0, [X19 + 0x108]
	0x01E17B2C CBZ X0, 0x1E17DBC
	0x01E17B30 MOV X1, X31
	0x01E17B34 BL 0x3C32E90
	0x01E17B38 CBZ X0, 0x1E17DBC
	0x01E17B3C MOV X1, X31
	0x01E17B40 BL 0x3C3F58C
	0x01E17B44 MOV X0, X19
	0x01E17B48 MOV X1, X31
	0x01E17B4C MOV V8.16B, V0.16B
	0x01E17B50 MOV V9.16B, V1.16B
	0x01E17B54 MOV V10.16B, V2.16B
	0x01E17B58 BL 0x3C32E90
	0x01E17B5C CBZ X0, 0x1E17DBC
	0x01E17B60 MOV X1, X31
	0x01E17B64 BL 0x3C3F58C
	0x01E17B68 FSUB S0, S8, S0
	0x01E17B6C FSUB S1, S9, S1
	0x01E17B70 FSUB S2, S10, S2
	0x01E17B74 MOV X0, X31
	0x01E17B78 BL 0x1DC0890
	0x01E17B7C ADRP X20, 0x25C1000
	0x01E17B80 LDRB W8, [X20 + 0x785]
	0x01E17B84 MOV V8.16B, V0.16B
	0x01E17B88 MOV V9.16B, V1.16B
	0x01E17B8C MOV V10.16B, V2.16B
	0x01E17B90 CBNZ W8, 0x1E17BA8
	0x01E17B94 ADRP X0, 0x22DC000
	0x01E17B98 LDR X0, [X0 + 0x5A8]
	0x01E17B9C BL 0x1C16CF4
	0x01E17BA0 MOVZ W8, 0x1
	0x01E17BA4 STRB W8, [X20 + 0x785]
	0x01E17BA8 LDR X0, [X23]
	0x01E17BAC LDR W8, [X0 + 0xE0]
	0x01E17BB0 CBNZ W8, 0x1E17BB8
	0x01E17BB4 BL 0x1C16DFC
	0x01E17BB8 FMUL S0, S8, S8
	0x01E17BBC FMUL S1, S9, S9
	0x01E17BC0 ADRP X8, 0xFFFFFFFFFECD3000
	0x01E17BC4 FADD S0, S0, S1
	0x01E17BC8 LDR V1, [X8 + 0x17C]
	0x01E17BCC FMUL S2, S10, S10
	0x01E17BD0 FADD S0, S2, S0
	0x01E17BD4 FSQRT S0, S0
	0x01E17BD8 FCMP S0, S1
	0x01E17BDC B.LE 0x1E17BF0
	0x01E17BE0 FDIV S8, S8, S0
	0x01E17BE4 FDIV S9, S9, S0
	0x01E17BE8 FDIV S10, S10, S0
	0x01E17BEC B 0x1E17C28
	0x01E17BF0 ADRP X20, 0x25C1000
	0x01E17BF4 LDRB W8, [X20 + 0x783]
	0x01E17BF8 CBNZ W8, 0x1E17C10
	0x01E17BFC ADRP X0, 0x22DC000
	0x01E17C00 LDR X0, [X0 + 0x5A0]
	0x01E17C04 BL 0x1C16CF4
	0x01E17C08 MOVZ W8, 0x1
	0x01E17C0C STRB W8, [X20 + 0x783]
	0x01E17C10 ADRP X8, 0x22DC000
	0x01E17C14 LDR X8, [X8 + 0x5A0]
	0x01E17C18 LDR X8, [X8]
	0x01E17C1C LDR X8, [X8 + 0xB8]
	0x01E17C20 LDP S8, S9, [X8]
	0x01E17C24 LDR V10, [X8 + 0x8]
	0x01E17C28 MOV X0, X19
	0x01E17C2C MOV X1, X31
	0x01E17C30 BL 0x3C32E90
	0x01E17C34 MOV X20, X0
	0x01E17C38 MOV V0.16B, V8.16B
	0x01E17C3C MOV V1.16B, V9.16B
	0x01E17C40 MOV V2.16B, V10.16B
	0x01E17C44 MOV X0, X31
	0x01E17C48 BL 0x3C2A8C4
	0x01E17C4C CBZ X20, 0x1E17DBC
	0x01E17C50 MOV X0, X20
	0x01E17C54 MOV X1, X31
	0x01E17C58 BL 0x3C3F7AC
	0x01E17C5C LDR X0, [X19 + 0x108]
	0x01E17C60 CBZ X0, 0x1E17DBC
	0x01E17C64 LDR X20, [X19 + 0x90]
	0x01E17C68 MOV X1, X31
	0x01E17C6C BL 0x3C32E90
	0x01E17C70 CBZ X0, 0x1E17DBC
	0x01E17C74 MOV X1, X31
	0x01E17C78 BL 0x3C3F58C
	0x01E17C7C CBZ X20, 0x1E17DBC
	0x01E17C80 MOV X0, X20
	0x01E17C84 MOV X1, X31
	0x01E17C88 BL 0x3BE13F8
	0x01E17C8C LDR V11, [X19 + 0xFC]
	0x01E17C90 MOV X0, X19
	0x01E17C94 MOV X1, X31
	0x01E17C98 BL 0x3C32E90
	0x01E17C9C CBZ X0, 0x1E17DBC
	0x01E17CA0 MOV X1, X31
	0x01E17CA4 BL 0x3C3F58C
	0x01E17CA8 LDP S12, S13, [X19 + 0xEC]
	0x01E17CAC LDRB W8, [X22 + 0x85C]
	0x01E17CB0 LDR V14, [X19 + 0xF4]
	0x01E17CB4 MOV V8.16B, V0.16B
	0x01E17CB8 MOV V9.16B, V1.16B
	0x01E17CBC MOV V10.16B, V2.16B
	0x01E17CC0 CBNZ W8, 0x1E17CD8
	0x01E17CC4 ADRP X0, 0x22DC000
	0x01E17CC8 LDR X0, [X0 + 0x5A8]
	0x01E17CCC BL 0x1C16CF4
	0x01E17CD0 MOVZ W8, 0x1
	0x01E17CD4 STRB W8, [X22 + 0x85C]
	0x01E17CD8 LDR X0, [X23]
	0x01E17CDC FSUB S12, S8, S12
	0x01E17CE0 FSUB S9, S9, S13
	0x01E17CE4 FSUB S8, S10, S14
	0x01E17CE8 LDR W8, [X0 + 0xE0]
	0x01E17CEC CBNZ W8, 0x1E17CF4
	0x01E17CF0 BL 0x1C16DFC
	0x01E17CF4 FMUL S0, S12, S12
	0x01E17CF8 FMUL S1, S9, S9
	0x01E17CFC FADD S0, S0, S1
	0x01E17D00 FMUL S1, S8, S8
	0x01E17D04 FADD S0, S1, S0
	0x01E17D08 FSQRT S0, S0
	0x01E17D0C FADD S0, S11, S0
	0x01E17D10 MOV X0, X19
	0x01E17D14 MOV X1, X31
	0x01E17D18 STR S0, [X19 + 0xFC]
	0x01E17D1C BL 0x3C32E90
	0x01E17D20 CBZ X0, 0x1E17DBC
	0x01E17D24 MOV X1, X31
	0x01E17D28 BL 0x3C3F58C
	0x01E17D2C LDR V3, [X19 + 0xFC]
	0x01E17D30 LDR V4, [X19 + 0xE0]
	0x01E17D34 STP S0, S1, [X19 + 0xEC]
	0x01E17D38 STR S2, [X19 + 0xF4]
	0x01E17D3C FCMP S3, S4
	0x01E17D40 B.LT 0x1E178C8
	0x01E17D44 LDR X0, [X19 + 0x98]
	0x01E17D48 CBZ X0, 0x1E17DBC
	0x01E17D4C MOV W1, W31
	0x01E17D50 BL 0x1E16790
	0x01E17D54 MOV X0, X19
	0x01E17D58 MOV W1, W31
	0x01E17D5C BL 0x1E166E8
	0x01E17D60 MOV X0, X31
	0x01E17D64 STR W31, [X19 + 0xFC]
	0x01E17D68 BL 0x3C3C6C4
	0x01E17D6C LDR X20, [X19 + 0x90]
	0x01E17D70 STR S0, [X19 + 0x100]
	0x01E17D74 CBZ X20, 0x1E17DBC
	0x01E17D78 MOV X0, X20
	0x01E17D7C MOV X1, X31
	0x01E17D80 BL 0x3C32E90
	0x01E17D84 CBZ X0, 0x1E17DBC
	0x01E17D88 MOV X1, X31
	0x01E17D8C BL 0x3C3F58C
	0x01E17D90 MOV X0, X20
	0x01E17D94 LDP X20, X19, [X31 + 0x70]
	0x01E17D98 LDP X22, X21, [X31 + 0x60]
	0x01E17D9C LDP X30, X23, [X31 + 0x50]
	0x01E17DA0 LDP D9, D8, [X31 + 0x40]
	0x01E17DA4 LDP D11, D10, [X31 + 0x30]
	0x01E17DA8 LDP D13, D12, [X31 + 0x20]
	0x01E17DAC LDR V14, [X31 + 0x10]
	0x01E17DB0 MOV X1, X31
	0x01E17DB4 ADD X31, X31, 0x80
	0x01E17DB8 B 0x3BE13F8
	0x01E17DBC BL 0x1C16F20
	0x01E17DC0 STR D8, [X31 - 0x30]!
	0x01E17DC4 STP X30, X21, [X31 + 0x10]
	0x01E17DC8 STP X20, X19, [X31 + 0x20]
	0x01E17DCC ADRP X21, 0x25C1000
	0x01E17DD0 ADRP X20, 0x22E3000
	0x01E17DD4 LDRB W8, [X21 + 0xE17]
	0x01E17DD8 LDR X20, [X20 + 0x3B8]
	0x01E17DDC MOV V8.16B, V0.16B
	0x01E17DE0 MOV X19, X0
	0x01E17DE4 TBNZ X8, 0x0, 0x1E17DFC
	0x01E17DE8 ADRP X0, 0x22E3000
	0x01E17DEC LDR X0, [X0 + 0x3B8]
	0x01E17DF0 BL 0x1C16CF4
	0x01E17DF4 MOVZ W8, 0x1
	0x01E17DF8 STRB W8, [X21 + 0xE17]
	0x01E17DFC LDR X0, [X20]
	0x01E17E00 LDR X19, [X19 + 0x20]
	0x01E17E04 LDR W8, [X0 + 0xE0]
	0x01E17E08 CBNZ W8, 0x1E17E10
	0x01E17E0C BL 0x1C16DFC
	0x01E17E10 CBZ X19, 0x1E17E3C
	0x01E17E14 LDR X8, [X20]
	0x01E17E18 MOV X0, X19
	0x01E17E1C LDP X20, X19, [X31 + 0x20]
	0x01E17E20 LDP X30, X21, [X31 + 0x10]
	0x01E17E24 LDR X8, [X8 + 0xB8]
	0x01E17E28 MOV V0.16B, V8.16B
	0x01E17E2C MOV X2, X31
	0x01E17E30 LDR W1, [X8 + 0x4]
	0x01E17E34 LDR V8, [X31], #0x30
	0x01E17E38 B 0x3BF5EE0
	0x01E17E3C BL 0x1C16F20
	0x01E17E40 STP X30, X19, [X31 - 0x10]!
	0x01E17E44 MOV X19, X0
	0x01E17E48 BL 0x1E16688
	0x01E17E4C CMP W0, 0x2
	0x01E17E50 B.EQ 0x1E17E7C
	0x01E17E54 CMP W0, 0x1
	0x01E17E58 B.EQ 0x1E17E8C
	0x01E17E5C CBNZ W0, 0x1E17EA0
	0x01E17E60 LDR X8, [X19 + 0x98]
	0x01E17E64 CBZ X8, 0x1E17EA8
	0x01E17E68 LDR X0, [X8 + 0x30]
	0x01E17E6C CBZ X0, 0x1E17EA8
	0x01E17E70 MOV X1, X31
	0x01E17E74 LDP X30, X19, [X31], #0x10
	0x01E17E78 B 0x3BFCC04
	0x01E17E7C LDR X0, [X19 + 0x98]
	0x01E17E80 CBZ X0, 0x1E17EA8
	0x01E17E84 LDR X1, [X0 + 0x48]
	0x01E17E88 B 0x1E17E98
	0x01E17E8C LDR X0, [X19 + 0x98]
	0x01E17E90 CBZ X0, 0x1E17EA8
	0x01E17E94 LDR X1, [X0 + 0x40]
	0x01E17E98 LDP X30, X19, [X31], #0x10
	0x01E17E9C B 0x1E1A194
	0x01E17EA0 LDP X30, X19, [X31], #0x10
	0x01E17EA4 RET
	0x01E17EA8 BL 0x1C16F20
	0x01E17EAC STR X30, [X31 - 0x10]!
	0x01E17EB0 LDR X0, [X0 + 0x30]
	0x01E17EB4 CBZ X0, 0x1E17EC4
	0x01E17EB8 MOV X1, X31
	0x01E17EBC LDR X30, [X31], #0x10
	0x01E17EC0 B 0x3BFCC04
	0x01E17EC4 BL 0x1C16F20
	0x01E17EC8 LDR X1, [X0 + 0x40]
	0x01E17ECC B 0x1E1A194
	0x01E17ED0 LDR X1, [X0 + 0x48]
	0x01E17ED4 B 0x1E1A194
	0x01E17ED8 STR D10, [X31 - 0x30]!
	0x01E17EDC STP D9, D8, [X31 + 0x10]
	0x01E17EE0 STP X30, X19, [X31 + 0x20]
	0x01E17EE4 MOV X19, X0
	0x01E17EE8 FMOV S0, 1
	0x01E17EEC FMOV S1, W31
	0x01E17EF0 FMOV S2, W31
	0x01E17EF4 FMOV S3, 1
	0x01E17EF8 MOV X0, X31
	0x01E17EFC BL 0x3C0D030
	0x01E17F00 LDR X0, [X19 + 0xA0]
	0x01E17F04 CBZ X0, 0x1E17FA8
	0x01E17F08 MOV X1, X31
	0x01E17F0C BL 0x3C3F58C
	0x01E17F10 LDR X0, [X19 + 0xA0]
	0x01E17F14 CBZ X0, 0x1E17FA8
	0x01E17F18 MOV X1, X31
	0x01E17F1C MOV V8.16B, V0.16B
	0x01E17F20 MOV V9.16B, V1.16B
	0x01E17F24 MOV V10.16B, V2.16B
	0x01E17F28 BL 0x3C3FA04
	0x01E17F2C LDR V3, [X19 + 0xB8]
	0x01E17F30 FMOV S4, 0.75
	0x01E17F34 MOV X0, X31
	0x01E17F38 FMUL S0, S0, S3
	0x01E17F3C FMUL S1, S1, S3
	0x01E17F40 FMUL S2, S2, S3
	0x01E17F44 FMUL S0, S0, S4
	0x01E17F48 FMUL S1, S1, S4
	0x01E17F4C FMUL S2, S2, S4
	0x01E17F50 FADD S0, S8, S0
	0x01E17F54 FADD S1, S9, S1
	0x01E17F58 FADD S2, S10, S2
	0x01E17F5C BL 0x3C0CB98
	0x01E17F60 ADRP X8, 0xFFFFFFFFFECD2000
	0x01E17F64 ADRP X9, 0xFFFFFFFFFECD3000
	0x01E17F68 LDR V1, [X8 + 0xF90]
	0x01E17F6C LDR V2, [X9 + 0x30]
	0x01E17F70 FMOV S0, 1
	0x01E17F74 FMOV S3, 1
	0x01E17F78 MOV X0, X31
	0x01E17F7C BL 0x3C0D030
	0x01E17F80 LDR X0, [X19 + 0xA8]
	0x01E17F84 CBZ X0, 0x1E17FA8
	0x01E17F88 MOV X1, X31
	0x01E17F8C BL 0x3C3F58C
	0x01E17F90 LDR V3, [X19 + 0xBC]
	0x01E17F94 LDP X30, X19, [X31 + 0x20]
	0x01E17F98 LDP D9, D8, [X31 + 0x10]
	0x01E17F9C MOV X0, X31
	0x01E17FA0 LDR V10, [X31], #0x30
	0x01E17FA4 B 0x3C0CB98
	0x01E17FA8 BL 0x1C16F20
	0x01E17FAC STP X30, X19, [X31 - 0x10]!
	0x01E17FB0 LDR X8, [X0 + 0x38]
	0x01E17FB4 CBZ X8, 0x1E18010
	0x01E17FB8 LDR W8, [X8 + 0x188]
	0x01E17FBC CMP W8, 0x2
	0x01E17FC0 B.NE 0x1E18008
	0x01E17FC4 MOV X19, X0
	0x01E17FC8 LDR X0, [X0 + 0x40]
	0x01E17FCC CBZ X0, 0x1E18008
	0x01E17FD0 LDRB W8, [X0 + 0x60]
	0x01E17FD4 TBNZ X8, 0x1, 0x1E18008
	0x01E17FD8 MOV X1, X31
	0x01E17FDC BL 0x1E93668
	0x01E17FE0 TBZ X0, 0x0, 0x1E18008
	0x01E17FE4 MOV X0, X19
	0x01E17FE8 MOV W1, W31
	0x01E17FEC BL 0x1E166E8
	0x01E17FF0 LDR X0, [X19 + 0x98]
	0x01E17FF4 STR W31, [X19 + 0x80]
	0x01E17FF8 CBZ X0, 0x1E18010
	0x01E17FFC MOV W1, W31
	0x01E18000 LDP X30, X19, [X31], #0x10
	0x01E18004 B 0x1E16790
	0x01E18008 LDP X30, X19, [X31], #0x10
	0x01E1800C RET
	0x01E18010 BL 0x1C16F20
	0x01E18014 STR X30, [X31 - 0x30]!
	0x01E18018 STP X22, X21, [X31 + 0x10]
	0x01E1801C STP X20, X19, [X31 + 0x20]
	0x01E18020 ADRP X22, 0x25C0000
	0x01E18024 ADRP X21, 0x22E0000
	0x01E18028 ADRP X20, 0x22E1000
	0x01E1802C LDRB W8, [X22 + 0xE07]
	0x01E18030 LDR X21, [X21 + 0xEE8]
	0x01E18034 LDR X20, [X20 + 0x480]
	0x01E18038 MOV X19, X0
	0x01E1803C TBNZ X8, 0x0, 0x1E18060
	0x01E18040 ADRP X0, 0x22E1000
	0x01E18044 LDR X0, [X0 + 0x480]
	0x01E18048 BL 0x1C16CF4
	0x01E1804C ADRP X0, 0x22E0000
	0x01E18050 LDR X0, [X0 + 0xEE8]
	0x01E18054 BL 0x1C16CF4
	0x01E18058 MOVZ W8, 0x1
	0x01E1805C STRB W8, [X22 + 0xE07]
	0x01E18060 ADRP X8, 0xFFFFFFFFFECD5000
	0x01E18064 ADRP X10, 0xFFFFFFFFFECD5000
	0x01E18068 ADRP X11, 0xFFFFFFFFFECD2000
	0x01E1806C LDR V0, [X8 + 0x6C8]
	0x01E18070 LDR V1, [X10 + 0x888]
	0x01E18074 LDR V2, [X11 + 0xD5]
	0x01E18078 MOVZ W9, 0x32
	0x01E1807C MOVZ W12, 0x40A00000
	0x01E18080 STR W9, [X19 + 0xC0]
	0x01E18084 STR D0, [X19 + 0xB8]
	0x01E18088 STR D1, [X19 + 0xC8]
	0x01E1808C STUR V2, [X19 + 0xD4]
	0x01E18090 STR W12, [X19 + 0xE4]
	0x01E18094 LDR X0, [X21]
	0x01E18098 BL 0x1C16F10
	0x01E1809C LDR X1, [X20]
	0x01E180A0 MOV X20, X0
	0x01E180A4 BL 0x301B7C4
	0x01E180A8 STR X20, [X19 + 0x110]
	0x01E180AC MOV X0, X19
	0x01E180B0 LDP X20, X19, [X31 + 0x20]
	0x01E180B4 LDP X22, X21, [X31 + 0x10]
	0x01E180B8 MOV X1, X31
	0x01E180BC LDR X30, [X31], #0x30
	0x01E180C0 B 0x1E74F04
	0x01E180C4 LDR W1, [X0 + 0xE8]
	0x01E180C8 B 0x1E166E8
	0x01E180CC STP X30, X19, [X31 - 0x10]!
	0x01E180D0 MOV X19, X0
	0x01E180D4 BL 0x1E16688
	0x01E180D8 STR W0, [X19 + 0xE8]
	0x01E180DC LDP X30, X19, [X31], #0x10
	0x01E180E0 RET
	0x01E180E4 STP X30, X19, [X31 - 0x10]!
	0x01E180E8 LDR X8, [X0 + 0x50]
	0x01E180EC CBZ X8, 0x1E180FC
	0x01E180F0 LDR W0, [X8]
	0x01E180F4 LDP X30, X19, [X31], #0x10
	0x01E180F8 RET
	0x01E180FC ADRP X0, 0x22DB000
	0x01E18100 LDR X0, [X0 + 0x5B0]
	0x01E18104 BL 0x1C16D08
	0x01E18108 BL 0x1C16F10
	0x01E1810C MOV X19, X0
	0x01E18110 ADRP X0, 0x22E2000
	0x01E18114 LDR X0, [X0 + 0x3C8]
	0x01E18118 BL 0x1C16D08
	0x01E1811C MOV X1, X0
	0x01E18120 MOV X0, X19
	0x01E18124 MOV X2, X31
	0x01E18128 BL 0x337DF1C
	0x01E1812C ADRP X0, 0x22E2000
	0x01E18130 LDR X0, [X0 + 0x3D0]
	0x01E18134 BL 0x1C16D08
	0x01E18138 MOV X1, X0
	0x01E1813C MOV X0, X19
	0x01E18140 BL 0x1C16DEC
	0x01E18144 STP X30, X19, [X31 - 0x10]!
	0x01E18148 LDR X8, [X0 + 0x50]
	0x01E1814C CBZ X8, 0x1E1815C
	0x01E18150 STR W1, [X8]
	0x01E18154 LDP X30, X19, [X31], #0x10
	0x01E18158 RET
	0x01E1815C ADRP X0, 0x22DB000
	0x01E18160 LDR X0, [X0 + 0x5B0]
	0x01E18164 BL 0x1C16D08
	0x01E18168 BL 0x1C16F10
	0x01E1816C MOV X19, X0
	0x01E18170 ADRP X0, 0x22E2000
	0x01E18174 LDR X0, [X0 + 0x3C8]
	0x01E18178 BL 0x1C16D08
	0x01E1817C MOV X1, X0
	0x01E18180 MOV X0, X19
	0x01E18184 MOV X2, X31
	0x01E18188 BL 0x337DF1C
	0x01E1818C ADRP X0, 0x22E2000
	0x01E18190 LDR X0, [X0 + 0x3D8]
	0x01E18194 BL 0x1C16D08
	0x01E18198 MOV X1, X0
	0x01E1819C MOV X0, X19
	0x01E181A0 BL 0x1C16DEC
	0x01E181A4 STP X30, X19, [X31 - 0x10]!
	0x01E181A8 MOV X19, X0
	0x01E181AC LDR X0, [X0 + 0x98]
	0x01E181B0 STR W31, [X19 + 0x80]
	0x01E181B4 CBZ X0, 0x1E181E8
	0x01E181B8 MOV W1, W31
	0x01E181BC BL 0x1E16790
	0x01E181C0 MOV X0, X19
	0x01E181C4 MOV X1, X31
	0x01E181C8 BL 0x3C32E90
	0x01E181CC CBZ X0, 0x1E181E8
	0x01E181D0 MOV X1, X31
	0x01E181D4 BL 0x3C3F58C
	0x01E181D8 STP S0, S1, [X19 + 0xE0]
	0x01E181DC STR S2, [X19 + 0xE8]
	0x01E181E0 LDP X30, X19, [X31], #0x10
	0x01E181E4 RET
	0x01E181E8 BL 0x1C16F20
	0x01E181EC SUB X31, X31, 0x70
	0x01E181F0 STP D11, D10, [X31 + 0x10]
	0x01E181F4 STP D9, D8, [X31 + 0x20]
	0x01E181F8 STR X30, [X31 + 0x30]
	0x01E181FC STP X24, X23, [X31 + 0x40]
	0x01E18200 STP X22, X21, [X31 + 0x50]
	0x01E18204 STP X20, X19, [X31 + 0x60]
	0x01E18208 ADRP X20, 0x25C0000
	0x01E1820C LDRB W8, [X20 + 0xE08]
	0x01E18210 MOV X19, X0
	0x01E18214 TBNZ X8, 0x0, 0x1E18238
	0x01E18218 ADRP X0, 0x22E0000
	0x01E1821C LDR X0, [X0 + 0x5C0]
	0x01E18220 BL 0x1C16CF4
	0x01E18224 ADRP X0, 0x22DB000
	0x01E18228 LDR X0, [X0 + 0x5F8]
	0x01E1822C BL 0x1C16CF4
	0x01E18230 MOVZ W8, 0x1
	0x01E18234 STRB W8, [X20 + 0xE08]
	0x01E18238 STR X31, [X31 + 0x38]
	0x01E1823C STR X31, [X31 + 0x8]
	0x01E18240 LDR X0, [X19 + 0x40]
	0x01E18244 CBZ X0, 0x1E185AC
	0x01E18248 MOV X1, X31
	0x01E1824C BL 0x1E93668
	0x01E18250 TBZ X0, 0x0, 0x1E1858C
	0x01E18254 LDR W8, [X19 + 0x80]
	0x01E18258 CBZ W8, 0x1E183E4
	0x01E1825C SUB W9, W8, 0x1
	0x01E18260 CMP W9, 0x1
	0x01E18264 B.HI 0x1E18560
	0x01E18268 LDR X0, [X19 + 0xA0]
	0x01E1826C CBZ X0, 0x1E185AC
	0x01E18270 MOV X1, X31
	0x01E18274 BL 0x3C3F58C
	0x01E18278 LDR W0, [X19 + 0xB0]
	0x01E1827C LDR V10, [X19 + 0xB4]
	0x01E18280 MOV X1, X31
	0x01E18284 MOV V8.16B, V0.16B
	0x01E18288 MOV V9.16B, V1.16B
	0x01E1828C MOV V11.16B, V2.16B
	0x01E18290 BL 0x3C35CB8
	0x01E18294 ADRP X8, 0x22DB000
	0x01E18298 LDR X8, [X8 + 0x5F8]
	0x01E1829C MOV W20, W0
	0x01E182A0 LDR X8, [X8]
	0x01E182A4 LDR W9, [X8 + 0xE0]
	0x01E182A8 CBNZ W9, 0x1E182B4
	0x01E182AC MOV X0, X8
	0x01E182B0 BL 0x1C16DFC
	0x01E182B4 MOV V0.16B, V8.16B
	0x01E182B8 MOV V1.16B, V9.16B
	0x01E182BC MOV V2.16B, V11.16B
	0x01E182C0 MOV V3.16B, V10.16B
	0x01E182C4 MOV W0, W20
	0x01E182C8 MOV X1, X31
	0x01E182CC BL 0x3C8D090
	0x01E182D0 CBZ X0, 0x1E185AC
	0x01E182D4 LDR X8, [X0 + 0x18]
	0x01E182D8 MOV X20, X0
	0x01E182DC CBZ X8, 0x1E184C0
	0x01E182E0 CMP W8, 0x1
	0x01E182E4 B.LT 0x1E18558
	0x01E182E8 ADRP X9, 0xFFFFFFFFFECD2000
	0x01E182EC ADRP X23, 0x22E0000
	0x01E182F0 LDR V8, [X9 + 0x30C]
	0x01E182F4 LDR X23, [X23 + 0x5C0]
	0x01E182F8 MOV X21, X31
	0x01E182FC ADD X22, X20, 0x20
	0x01E18300 MOVZ W24, 0x2
	0x01E18304 CMP W21, W8
	0x01E18308 B.CS 0x1E185B0
	0x01E1830C LDR X0, [X22, X21, LSL #3]
	0x01E18310 CBZ X0, 0x1E185AC
	0x01E18314 MOV X1, X31
	0x01E18318 BL 0x3C32ECC
	0x01E1831C CBZ X0, 0x1E185AC
	0x01E18320 LDR X2, [X23]
	0x01E18324 ADD X1, X31, 0x8
	0x01E18328 BL 0x21E6600
	0x01E1832C TBZ X0, 0x0, 0x1E183D0
	0x01E18330 LDR X0, [X31 + 0x8]
	0x01E18334 STR X0, [X19 + 0xF8]
	0x01E18338 CBZ X0, 0x1E185AC
	0x01E1833C LDR V0, [X0 + 0x174]
	0x01E18340 FCMP S0, S8
	0x01E18344 B.LE 0x1E183D0
	0x01E18348 MOV X1, X31
	0x01E1834C BL 0x3C32E90
	0x01E18350 CBZ X0, 0x1E185AC
	0x01E18354 MOV X1, X31
	0x01E18358 BL 0x3C3F58C
	0x01E1835C LDR X0, [X19 + 0x98]
	0x01E18360 STR S0, [X19 + 0x100]
	0x01E18364 STR S1, [X19 + 0x104]
	0x01E18368 STR S2, [X19 + 0x108]
	0x01E1836C STR W24, [X19 + 0x80]
	0x01E18370 STR X31, [X19 + 0xF0]
	0x01E18374 CBZ X0, 0x1E185AC
	0x01E18378 MOVZ W1, 0x1
	0x01E1837C BL 0x1E16790
	0x01E18380 MOVZ W1, 0x2
	0x01E18384 MOV X0, X19
	0x01E18388 BL 0x1E18144
	0x01E1838C LDR X0, [X19 + 0x90]
	0x01E18390 CBZ X0, 0x1E185AC
	0x01E18394 MOVZ W1, 0x1
	0x01E18398 MOV X2, X31
	0x01E1839C BL 0x3BE1AC4
	0x01E183A0 LDR X0, [X19 + 0x90]
	0x01E183A4 CBZ X0, 0x1E185AC
	0x01E183A8 LDR V0, [X19 + 0xD0]
	0x01E183AC MOV X1, X31
	0x01E183B0 BL 0x3BE19E8
	0x01E183B4 LDR X0, [X19 + 0x90]
	0x01E183B8 CBZ X0, 0x1E185AC
	0x01E183BC LDR V2, [X19 + 0x108]
	0x01E183C0 LDR V1, [X19 + 0x104]
	0x01E183C4 LDR V0, [X19 + 0x100]
	0x01E183C8 MOV X1, X31
	0x01E183CC BL 0x3BE13F8
	0x01E183D0 LDR W8, [X20 + 0x18]
	0x01E183D4 ADD X21, X21, 0x1
	0x01E183D8 CMP W21, W8
	0x01E183DC B.LT 0x1E18304
	0x01E183E0 B 0x1E18558
	0x01E183E4 LDR X0, [X19 + 0xA8]
	0x01E183E8 CBZ X0, 0x1E185AC
	0x01E183EC MOV X1, X31
	0x01E183F0 BL 0x3C3F58C
	0x01E183F4 LDR W0, [X19 + 0xB0]
	0x01E183F8 LDR V10, [X19 + 0xB8]
	0x01E183FC MOV X1, X31
	0x01E18400 MOV V8.16B, V0.16B
	0x01E18404 MOV V9.16B, V1.16B
	0x01E18408 MOV V11.16B, V2.16B
	0x01E1840C BL 0x3C35CB8
	0x01E18410 ADRP X8, 0x22DB000
	0x01E18414 LDR X8, [X8 + 0x5F8]
	0x01E18418 MOV W20, W0
	0x01E1841C LDR X8, [X8]
	0x01E18420 LDR W9, [X8 + 0xE0]
	0x01E18424 CBNZ W9, 0x1E18430
	0x01E18428 MOV X0, X8
	0x01E1842C BL 0x1C16DFC
	0x01E18430 MOV V0.16B, V8.16B
	0x01E18434 MOV V1.16B, V9.16B
	0x01E18438 MOV V2.16B, V11.16B

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+128], D15
	003 Move [X31+136], D14
	004 Move [X31+144], D13
	005 Move [X31+152], D12
	006 Move [X31+160], D11
	007 Move [X31+168], D10
	008 Move [X31+176], D9
	009 Move [X31+184], D8
	010 Move [X31+192], X29
	011 Move [X31+200], X30
	012 Move [X31+208], X28
	013 Move [X31+216], X27
	014 Move [X31+224], X26
	015 Move [X31+232], X25
	016 Move [X31+240], X24
	017 Move [X31+248], X23
	018 Move [X31+256], X22
	019 Move [X31+264], X21
	020 Move [X31+272], X20
	021 Move [X31+280], X19
	022 Move X20, 0x25C2000
	023 Move W8, [X20+3589]
	024 Move X19, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {64}
	029 Move X0, 0x22E3000
	030 Move X0, [X0+328]
	031 Call 0x1C17CF4
	032 Move X0, 0x22E2000
	033 Move X0, [X0+3104]
	034 Call 0x1C17CF4
	035 Move X0, 0x22E2000
	036 Move X0, [X0+3112]
	037 Call 0x1C17CF4
	038 Move X0, 0x22E2000
	039 Move X0, [X0+3120]
	040 Call 0x1C17CF4
	041 Move X0, 0x22E3000
	042 Move X0, [X0+336]
	043 Call 0x1C17CF4
	044 Move X0, 0x22E3000
	045 Move X0, [X0+344]
	046 Call 0x1C17CF4
	047 Move X0, 0x22E2000
	048 Move X0, [X0+3128]
	049 Call 0x1C17CF4
	050 Move X0, 0x22E2000
	051 Move X0, [X0+3248]
	052 Call 0x1C17CF4
	053 Move X0, 0x22DD000
	054 Move X0, [X0+1432]
	055 Call 0x1C17CF4
	056 Move X0, 0x22DD000
	057 Move X0, [X0+1528]
	058 Call 0x1C17CF4
	059 Move X0, 0x22DF000
	060 Move X0, [X0+2480]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X20+3589], W8
	064 NotImplemented "Instruction MOVI not yet implemented."
	065 Move X0, X19
	066 Move X1, X31
	067 Move [X31+112], X31
	068 Move [X31+120], X31
	069 Move [X31+96], X31
	070 Move [X31+104], X31
	071 Move [X31+76], V0
	072 Move [X31+48], V0
	073 Move [X31+56], V0
	074 Call NetworkBehaviour.FixedUpdateNetwork, X0
	075 Move X0, [X19+64]
	076 Compare X0, 0
	077 JumpIfEqual {772}
	078 Move X1, X31
	079 Call NetworkObject.get_HasStateAuthority, X0
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {750}
	084 Move W8, [X19+128]
	085 Compare W8, 0
	086 JumpIfEqual {628}
	087 Subtract W9, W8, 1
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X0, [X19+160]
	090 Compare X0, 0
	091 JumpIfEqual {772}
	092 Move X1, X31
	093 Call Transform.get_position, X0
	094 Move X0, [X19+160]
	095 Compare X0, 0
	096 JumpIfEqual {772}
	097 Move X1, X31
	098 Move V9, V0
	099 Move V10, V1
	100 Move V11, V2
	101 Call Transform.get_forward, X0
	102 Move V8, [X19+184]
	103 Move W0, [X19+176]
	104 Move S3, 0.75
	105 Move X1, X31
	106 Multiply S0, S0, S8
	107 Multiply S1, S1, S8
	108 Multiply S2, S2, S8
	109 Multiply S0, S0, S3
	110 Multiply S1, S1, S3
	111 Multiply S2, S2, S3
	112 Add S9, S9, S0
	113 Add S10, S10, S1
	114 Add S11, S11, S2
	115 Call LayerMask.op_Implicit, X0
	116 Move X26, 0x22DD000
	117 Move X26, [X26+1528]
	118 Move W20, W0
	119 Move X8, [X26]
	120 Move W9, [X8+224]
	121 Compare W9, 0
	122 JumpIfNotEqual {125}
	123 Move X0, X8
	124 Call 0x1C17DFC
	125 Move W1, 2
	126 Move V0, V9
	127 Move V1, V10
	128 Move V2, V11
	129 Move V3, V8
	130 Move W0, W20
	131 Move X2, X31
	132 Call Physics.OverlapSphere, X0, V0, X1, X2
	133 Compare X0, 0
	134 JumpIfEqual {772}
	135 Move X8, [X0+24]
	136 Move X20, X0
	137 Compare X8, 0
	138 JumpIfEqual {669}
	139 Move X9, [X19+272]
	140 Compare X9, 0
	141 JumpIfEqual {772}
	142 Move W2, [X9+24]
	143 Move W10, [X9+28]
	144 Add W10, W10, 1
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move [X9+24], W31
	147 Move [X9+28], W10
	148 Move X0, [X9+16]
	149 Move W1, W31
	150 Move X3, X31
	151 Call Array.Clear, X0, X1, X2
	152 Move X8, [X20+24]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move X25, 0x22E3000
	155 Move X27, 0x22DD000
	156 Move X28, 0x22E3000
	157 Move X25, [X25+328]
	158 Move X27, [X27+1432]
	159 Move X28, [X28+336]
	160 Move X23, X31
	161 Add X24, X20, 32
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move X0, [X24]
	164 Compare X0, 0
	165 JumpIfEqual {772}
	166 Move X2, [X25]
	167 Add X1, X31, 120
	168 Call 0x21A5990, X0, X1
	169 Move TEMP, X0
	170 And TEMP, TEMP, 1
	171 Compare TEMP, 1
	172 JumpIfNotEqual {210}
	173 Move X0, [X27]
	174 Move X21, [X31+120]
	175 Move X22, [X19+264]
	176 Move W8, [X0+224]
	177 Compare W8, 0
	178 JumpIfNotEqual {180}
	179 Call 0x1C17DFC
	180 Move X0, X21
	181 Move X1, X22
	182 Move X2, X31
	183 Call Object.op_Equality, X0, X1
	184 Move TEMP, X0
	185 And TEMP, TEMP, 1
	186 Compare TEMP, 1
	187 JumpIfEqual {213}
	188 Move X0, [X19+272]
	189 Compare X0, 0
	190 JumpIfEqual {772}
	191 Move W10, [X0+28]
	192 Move X1, [X31+120]
	193 Move X8, [X0+16]
	194 Move X9, [X28]
	195 Add W10, W10, 1
	196 Move [X0+28], W10
	197 Compare X8, 0
	198 JumpIfEqual {772}
	199 NotImplemented "Instruction LDRSW not yet implemented."
	200 Move W11, [X8+24]
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Add W9, W10, 1
	203 Add X8, X8, X10
	204 Move [X0+24], W9
	205 Move [X8+32], X1
	206 Move X8, [X9+32]
	207 Move X8, [X8+192]
	208 Move X2, [X8+112]
	209 Call List`1<Object>.AddWithResize, X0, X1
	210 Move W8, [X20+24]
	211 Add X23, X23, 1
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Move X25, 0x22DD000
	214 Move X25, [X25+1432]
	215 Move X20, [X19+264]
	216 Move X0, [X25]
	217 Move W8, [X0+224]
	218 Compare W8, 0
	219 JumpIfNotEqual {221}
	220 Call 0x1C17DFC
	221 Move X0, X20
	222 Move X1, X31
	223 Move X2, X31
	224 Call Object.op_Equality, X0, X1
	225 Move TEMP, X0
	226 And TEMP, TEMP, 1
	227 Compare TEMP, 1
	228 JumpIfNotEqual {702}
	229 Move X0, [X19+272]
	230 Compare X0, 0
	231 JumpIfEqual {772}
	232 Move W8, [X0+24]
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Move X8, 0x22E2000
	235 Move X8, [X8+3128]
	236 Move X1, [X8]
	237 Add X8, X31, 24
	238 Call List`1<Object>.GetEnumerator, X0
	239 Move X9, -20103168
	240 Move V1, [X9+380]
	241 Move X27, 0x22E2000
	242 Move X20, 0x22DD000
	243 Move X9, -20103168
	244 NotImplemented "Instruction LDUR not yet implemented."
	245 Move X8, [X31+40]
	246 Move X27, [X27+3112]
	247 Move X20, [X20+1448]
	248 Move [X31+8], S1
	249 Move V1, [X9+1100]
	250 Move X28, 0x25C2000
	251 Move [X31+6], V0
	252 Move [X31+112], X8
	253 Move [X31+12], S1
	254 Move X1, [X27]
	255 Add X0, X31, 96
	256 Call Enumerator<Object>.MoveNext, X0
	257 Move TEMP, X0
	258 And TEMP, TEMP, 1
	259 Compare TEMP, 1
	260 JumpIfNotEqual {697}
	261 Move X22, [X31+112]
	262 Compare X22, 0
	263 JumpIfEqual {779}
	264 Move X0, X22
	265 Move X1, X31
	266 Call Component.get_transform, X0
	267 Compare X0, 0
	268 JumpIfEqual {780}
	269 Move X1, X31
	270 Call Transform.get_position, X0
	271 Move [X31+20], S0
	272 Move X0, [X19+160]
	273 Compare X0, 0
	274 JumpIfEqual {777}
	275 Move V9, V1
	276 Move V10, V2
	277 Move X1, X31
	278 Call Transform.get_position, X0
	279 Move W8, [X28+1924]
	280 Move V11, V0
	281 Move V12, V1
	282 Move V13, V2
	283 Compare W8, 0
	284 JumpIfNotEqual {289}
	285 Move X0, X20
	286 Call 0x1C17CF4
	287 Move W8, 1
	288 Move [X28+1924], W8
	289 Move X0, [X20]
	290 Move W8, [X0+224]
	291 Compare W8, 0
	292 JumpIfNotEqual {294}
	293 Call 0x1C17DFC
	294 Move X0, [X19+160]
	295 Compare X0, 0
	296 JumpIfEqual {778}
	297 Move X1, X31
	298 Call Transform.get_position, X0
	299 Move W0, [X19+180]
	300 Move V14, V0
	301 Move V15, V1
	302 Move V8, V2
	303 Move X1, X31
	304 Call LayerMask.op_Implicit, X0
	305 Move W23, W0
	306 Move X0, [X26]
	307 Move W8, [X0+224]
	308 Compare W8, 0
	309 JumpIfNotEqual {311}
	310 Call 0x1C17DFC
	311 Move V0, [X31+20]
	312 Subtract S1, S9, S12
	313 Subtract S2, S10, S13
	314 Multiply S4, S1, S1
	315 Subtract S0, S0, S11
	316 Multiply S3, S0, S0
	317 Multiply S5, S2, S2
	318 Add S3, S3, S4
	319 Add S3, S5, S3
	320 NotImplemented "Instruction FSQRT not yet implemented."
	321 NotImplemented "Instruction FDIV not yet implemented."
	322 NotImplemented "Instruction FDIV not yet implemented."
	323 NotImplemented "Instruction FDIV not yet implemented."
	324 Add X0, X31, 48
	325 Move V0, V14
	326 Move V1, V15
	327 Move V2, V8
	328 Move V3, V9
	329 Move V4, V10
	330 Move V5, V11
	331 Move W1, W23
	332 Move X2, X31
	333 Move [X31+16], S6
	334 Call Physics.Raycast, X0, X1, X2, V0, X3
	335 Move TEMP, X0
	336 And TEMP, TEMP, 1
	337 Compare TEMP, 1
	338 JumpIfNotEqual {696}
	339 Move X0, [X25]
	340 Move X23, [X19+264]
	341 Move W8, [X0+224]
	342 Compare W8, 0
	343 JumpIfNotEqual {345}
	344 Call 0x1C17DFC
	345 Move X0, X23
	346 Move X1, X31
	347 Move X2, X31
	348 Call Object.op_Equality, X0, X1
	349 Move TEMP, X0
	350 And TEMP, TEMP, 1
	351 Compare TEMP, 1
	352 JumpIfNotEqual {614}
	353 Move X8, 0x25C2000
	354 Move W8, [X8+1926]
	355 Compare W8, 0
	356 JumpIfNotEqual {363}
	357 Move X0, 0x22DD000
	358 Move X0, [X0+1440]
	359 Call 0x1C17CF4
	360 Move W8, 1
	361 Move X9, 0x25C2000
	362 Move [X9+1926], W8
	363 Move X8, 0x22DD000
	364 Move X8, [X8+1440]
	365 Move X9, 0x25C2000
	366 Move W9, [X9+1925]
	367 Move X8, [X8]
	368 Move X8, [X8+184]
	369 Move S8, [X8+24]
	370 Move S12, [X8+28]
	371 Move V13, [X8+32]
	372 Compare W9, 0
	373 JumpIfNotEqual {379}
	374 Move X0, X20
	375 Call 0x1C17CF4
	376 Move W8, 1
	377 Move X9, 0x25C2000
	378 Move [X9+1925], W8
	379 Move X0, [X20]
	380 Move W8, [X0+224]
	381 Compare W8, 0
	382 JumpIfNotEqual {384}
	383 Call 0x1C17DFC
	384 Multiply S0, S10, S13
	385 Multiply S1, S11, S12
	386 Multiply S3, S11, S8
	387 Multiply S4, S9, S13
	388 Multiply S5, S9, S12
	389 Multiply S6, S10, S8
	390 Subtract S2, S0, S1
	391 Subtract S1, S3, S4
	392 Subtract S0, S5, S6
	393 Multiply S3, S2, S2
	394 Multiply S4, S1, S1
	395 Add S3, S3, S4
	396 Multiply S4, S0, S0
	397 Add S3, S4, S3
	398 Move V4, [X31+8]
	399 NotImplemented "Instruction FSQRT not yet implemented."
	400 NotImplemented "Instruction FCMP not yet implemented."
	401 NotImplemented "Instruction FDIV not yet implemented."
	402 NotImplemented "Instruction FDIV not yet implemented."
	403 NotImplemented "Instruction FDIV not yet implemented."
	404 Move X8, 0x25C2000
	405 Move W8, [X8+1923]
	406 Compare W8, 0
	407 JumpIfNotEqual {414}
	408 Move X0, 0x22DD000
	409 Move X0, [X0+1440]
	410 Call 0x1C17CF4
	411 Move W8, 1
	412 Move X9, 0x25C2000
	413 Move [X9+1923], W8
	414 Move X8, 0x22DD000
	415 Move X8, [X8+1440]
	416 Move X8, [X8]
	417 Move X8, [X8+184]
	418 Move S11, [X8]
	419 Move S14, [X8+4]
	420 Move V13, [X8+8]
	421 Move X8, 0x22DF000
	422 Move X8, [X8+2480]
	423 Move X0, [X8]
	424 Move W1, 4
	425 Call 0x1C17D6C
	426 Move X23, X0
	427 Move X0, X22
	428 Move X1, X31
	429 Call Component.get_transform, X0
	430 Compare X0, 0
	431 JumpIfEqual {786}
	432 Move X1, X31
	433 Call Transform.get_position, X0
	434 Move X0, [X19+160]
	435 Compare X0, 0
	436 JumpIfEqual {787}
	437 Move V8, V0
	438 Move V9, V1
	439 Move V10, V2
	440 Move X1, X31
	441 Call Transform.get_up, X0
	442 Compare X23, 0
	443 JumpIfEqual {782}
	444 Move W8, [X23+24]
	445 Compare W8, 0
	446 JumpIfEqual {789}
	447 Move S3, 0.5
	448 Multiply S15, S11, S3
	449 Multiply S12, S14, S3
	450 Multiply S5, S13, S3
	451 Move V3, [X31+12]
	452 Add S4, S12, S9
	453 Move [X31+20], S5
	454 Add S5, S5, S10
	455 Multiply S0, S0, S3
	456 Multiply S1, S1, S3
	457 Multiply S2, S2, S3
	458 Add S3, S15, S8
	459 Add S0, S3, S0
	460 Add S1, S4, S1
	461 Add S2, S5, S2
	462 Move [X23+32], S0
	463 Move [X23+40], S1
	464 Move [X23+40], S2
	465 Move X0, X22
	466 Move X1, X31
	467 Call Component.get_transform, X0
	468 Compare X0, 0
	469 JumpIfEqual {788}
	470 Move X1, X31
	471 Call Transform.get_position, X0
	472 Move X0, [X19+160]
	473 Compare X0, 0
	474 JumpIfEqual {785}
	475 Move V8, V0
	476 Move V9, V1
	477 Move V10, V2
	478 Move X1, X31
	479 Call Transform.get_up, X0
	480 Move W8, [X23+24]
	481 NotImplemented "Instruction CMP not yet implemented."
	482 Move V4, V14
	483 Move S3, -0.5
	484 Multiply S14, S11, S3
	485 Multiply S11, S4, S3
	486 Multiply S13, S13, S3
	487 Move V3, [X31+12]
	488 Add S4, S11, S9
	489 Add S5, S13, S10
	490 Multiply S2, S2, S3
	491 Multiply S1, S1, S3
	492 Multiply S0, S0, S3
	493 Add S3, S14, S8
	494 Add S2, S5, S2
	495 Add S1, S4, S1
	496 Add S0, S3, S0
	497 Move [X23+44], S0
	498 Move [X23+52], S1
	499 Move [X23+52], S2
	500 Move X0, X22
	501 Move X1, X31
	502 Call Component.get_transform, X0
	503 Compare X0, 0
	504 JumpIfEqual {791}
	505 Move X1, X31
	506 Call Transform.get_position, X0
	507 Move X0, [X19+160]
	508 Compare X0, 0
	509 JumpIfEqual {783}
	510 Move V8, V0
	511 Move V9, V1
	512 Move V10, V2
	513 Move X1, X31
	514 Call Transform.get_up, X0
	515 Move W8, [X23+24]
	516 NotImplemented "Instruction CMP not yet implemented."
	517 Move V5, [X31+20]
	518 Move V6, [X31+12]
	519 Add S3, S15, S8
	520 Add S4, S12, S9
	521 Add S5, S5, S10
	522 Multiply S2, S2, S6
	523 Multiply S1, S1, S6
	524 Multiply S0, S0, S6
	525 Subtract S2, S5, S2
	526 Subtract S1, S4, S1
	527 Subtract S0, S3, S0
	528 Move [X23+56], S0
	529 Move [X23+64], S1
	530 Move [X23+64], S2
	531 Move X0, X22
	532 Move X1, X31
	533 Call Component.get_transform, X0
	534 Compare X0, 0
	535 JumpIfEqual {784}
	536 Move X1, X31
	537 Call Transform.get_position, X0
	538 Move X0, [X19+160]
	539 Compare X0, 0
	540 JumpIfEqual {790}
	541 Move V8, V0
	542 Move V9, V1
	543 Move V10, V2
	544 Move X1, X31
	545 Call Transform.get_up, X0
	546 Move X8, [X23+24]
	547 NotImplemented "Instruction CMP not yet implemented."
	548 Move V6, [X31+12]
	549 Add S3, S14, S8
	550 Add S4, S11, S9
	551 Add S5, S13, S10
	552 Multiply S2, S2, S6
	553 Multiply S1, S1, S6
	554 Multiply S0, S0, S6
	555 NotImplemented "Instruction CMP not yet implemented."
	556 Subtract S2, S5, S2
	557 Subtract S1, S4, S1
	558 Subtract S0, S3, S0
	559 Move [X23+68], S0
	560 Move [X23+76], S1
	561 Move [X23+76], S2
	562 Move X29, X31
	563 And X8, X8, 0
	564 Add X21, X23, 40
	565 NotImplemented "Instruction CMP not yet implemented."
	566 Move X0, [X19+160]
	567 Compare X0, 0
	568 JumpIfEqual {775}
	569 Move S15, [X21-8]
	570 Move S12, [X21-4]
	571 Move V9, [X21]
	572 Move X1, X31
	573 Call Transform.get_position, X0
	574 Move [X31+20], S0
	575 Move X0, [X19+160]
	576 Compare X0, 0
	577 JumpIfEqual {774}
	578 Move V10, V1
	579 Move V11, V2
	580 Move X1, X31
	581 Call Transform.get_position, X0
	582 Move W0, [X19+180]
	583 Move V8, V0
	584 Move V13, V1
	585 Move V14, V2
	586 Move X1, X31
	587 Call LayerMask.op_Implicit, X0
	588 Move W24, W0
	589 Move X0, [X26]
	590 Move W8, [X0+224]
	591 Compare W8, 0
	592 JumpIfNotEqual {594}
	593 Call 0x1C17DFC
	594 Subtract S3, S15, S8
	595 Subtract S4, S12, S13
	596 Subtract S5, S9, S14
	597 Move S6, [X31+16]
	598 Move S0, [X31+20]
	599 Add X0, X31, 48
	600 Move V1, V10
	601 Move V2, V11
	602 Move W1, W24
	603 Move X2, X31
	604 Call Physics.Raycast, X0, X1, X2, V0, X3
	605 Move TEMP, X0
	606 And TEMP, TEMP, 1
	607 Compare TEMP, 1
	608 JumpIfNotEqual {613}
	609 Move W8, [X23+24]
	610 Add X29, X29, 1
	611 Add X21, X21, 12
	612 NotImplemented "Instruction CMP not yet implemented."
	613 Move [X19+264], X22
	614 Move X0, [X25]
	615 Move X22, [X19+264]
	616 Move W8, [X0+224]
	617 Compare W8, 0
	618 JumpIfNotEqual {620}
	619 Call 0x1C17DFC
	620 Move X0, X22
	621 Move X1, X31
	622 Move X2, X31
	623 Call Object.op_Inequality, X0, X1
	624 Move TEMP, X0
	625 And TEMP, TEMP, 1
	626 Compare TEMP, 1
	627 JumpIfNotEqual {254}
	628 Move X0, [X19+168]
	629 Compare X0, 0
	630 JumpIfEqual {772}
	631 Move X1, X31
	632 Call Transform.get_position, X0
	633 Move W0, [X19+176]
	634 Move V10, [X19+188]
	635 Move X1, X31
	636 Move V8, V0
	637 Move V9, V1
	638 Move V11, V2
	639 Call LayerMask.op_Implicit, X0
	640 Move X8, 0x22DC000
	641 Move X8, [X8+1528]
	642 Move W20, W0
	643 Move X8, [X8]
	644 Move W9, [X8+224]
	645 Compare W9, 0
	646 JumpIfNotEqual {649}
	647 Move X0, X8
	648 Call 0x1C17DFC
	649 Move V0, V8
	650 Move V1, V9
	651 Move V2, V11
	652 Move V3, V10
	653 Move W0, W20
	654 Move X1, X31
	655 Call Physics.OverlapSphere, X0, V0, X1
	656 Compare X0, 0
	657 JumpIfEqual {772}
	658 Move X8, [X0+24]
	659 Compare X8, 0
	660 JumpIfEqual {741}
	661 Move W8, [X19+128]
	662 NotImplemented "Instruction CMP not yet implemented."
	663 Move X0, [X19+152]
	664 Move W8, 1
	665 Move [X19+128], W8
	666 Compare X0, 0
	667 JumpIfEqual {772}
	668 Call MobView.PlaySoundNotice, X0
	669 Move W8, [X19+128]
	670 Move [X19+264], X31
	671 NotImplemented "Instruction CMP not yet implemented."
	672 Move X8, [X19+280]
	673 Move W9, 1
	674 Move [X19+128], W9
	675 Compare X8, 0
	676 JumpIfEqual {772}
	677 NotImplemented "Instruction LDRSW not yet implemented."
	678 Move W10, [X8+24]
	679 NotImplemented "Instruction CMP not yet implemented."
	680 Add X8, X8, X9
	681 Move X0, [X8+32]
	682 Compare X0, 0
	683 JumpIfEqual {772}
	684 Move X20, [X19+144]
	685 Move X1, X31
	686 Call Transform.get_position, X0
	687 Compare X20, 0
	688 JumpIfEqual {772}
	689 Move X0, X20
	690 Move X1, X31
	691 Call NavMeshAgent.SetDestination, X0, X1
	692 Move X0, [X19+144]
	693 Compare X0, 0
	694 JumpIfEqual {772}
	695 Move V0, [X19+212]
	696 Move [X19+264], X22
	697 Move X8, 0x22E1000
	698 Move X8, [X8+3104]
	699 Add X0, X31, 96
	700 Move X1, [X8]
	701 Call Enumerator<Object>.Dispose, X0
	702 Move X0, [X25]
	703 Move X20, [X19+264]
	704 Move W8, [X0+224]
	705 Compare W8, 0
	706 JumpIfNotEqual {708}
	707 Call 0x1C17DFC
	708 Move X0, X20
	709 Move X1, X31
	710 Move X2, X31
	711 Call Object.op_Inequality, X0, X1
	712 Move TEMP, X0
	713 And TEMP, TEMP, 1
	714 Compare TEMP, 1
	715 JumpIfNotEqual {741}
	716 Move W8, [X19+128]
	717 NotImplemented "Instruction CMP not yet implemented."
	718 Move W8, 2
	719 Move X0, X31
	720 Move [X19+196], W31
	721 Move [X19+128], W8
	722 Move [X19+252], W31
	723 Call Time.get_time
	724 Move V1, [X19+228]
	725 Move X0, [X19+152]
	726 Subtract S0, S0, S1
	727 Move [X19+256], S0
	728 Compare X0, 0
	729 JumpIfEqual {772}
	730 Move W1, W31
	731 Call MobView.SetWalk, X0, X1
	732 Move X0, X19
	733 Move W1, W31
	734 Call MobController.set_MoveStatus, X0, X1
	735 Move X0, [X19+144]
	736 Compare X0, 0
	737 JumpIfEqual {772}
	738 Move V0, [X19+216]
	739 Move X1, X31
	740 Call NavMeshAgent.set_speed, X0, V0
	741 Move W8, [X19+128]
	742 Compare W8, 0
	743 JumpIfEqual {746}
	744 NotImplemented "Instruction CMP not yet implemented."
	745 NotImplemented "Instruction CMP not yet implemented."
	746 Move X0, X19
	747 Call MobController.UpdatePatrol, X0
	748 Move X0, X19
	749 Call MobController.UpdateAttack, X0
	750 Move X20, [X31+272]
	751 Move X19, [X31+280]
	752 Move X22, [X31+256]
	753 Move X21, [X31+264]
	754 Move X24, [X31+240]
	755 Move X23, [X31+248]
	756 Move X26, [X31+224]
	757 Move X25, [X31+232]
	758 Move X28, [X31+208]
	759 Move X27, [X31+216]
	760 Move X29, [X31+192]
	761 Move X30, [X31+200]
	762 Move D9, [X31+176]
	763 Move D8, [X31+184]
	764 Move D11, [X31+160]
	765 Move D10, [X31+168]
	766 Move D13, [X31+144]
	767 Move D12, [X31+152]
	768 Move D15, [X31+128]
	769 Move D14, [X31+136]
	770 Add X31, X31, 288
	771 Return 
	772 Call 0x1C17F20
	773 Call 0x1C17F28
	774 Call 0x1C17F20
	775 Call 0x1C17F20
	776 Call 0x1C17F28
	777 Call 0x1C17F20
	778 Call 0x1C17F20
	779 Call 0x1C17F20
	780 Call 0x1C17F20
	781 Call 0x1C17F28
	782 Call 0x1C17F20
	783 Call 0x1C17F20
	784 Call 0x1C17F20
	785 Call 0x1C17F20
	786 Call 0x1C17F20
	787 Call 0x1C17F20
	788 Call 0x1C17F20
	789 Call 0x1C17F28
	790 Call 0x1C17F20
	791 Call 0x1C17F20
	792 Call 0x1C17F28
	793 Call 0x1C17F28
	794 Move X20, X0
	795 NotImplemented "Instruction CMP not yet implemented."
	796 Move X0, X20
	797 Call 0x3EB2AD0
	798 Move X21, [X0]
	799 Call 0x3EB2AE0
	800 Move X8, 0x22E1000
	801 Move X8, [X8+3104]
	802 Add X0, X31, 96
	803 Move X1, [X8]
	804 Call Enumerator<Object>.Dispose, X0
	805 Compare X21, 0
	806 JumpIfEqual {702}
	807 Move X0, X21
	808 Call 0x1C17F18
	809 Move X21, X31
	810 Move X20, X0
	811 Move X8, 0x22E1000
	812 Move X8, [X8+3104]
	813 Move X1, [X8]
	814 Add X0, X31, 96
	815 Call Enumerator<Object>.Dispose, X0
	816 Compare X21, 0
	817 JumpIfNotEqual {820}
	818 Move X0, X20
	819 Call 0x1D2D690
	820 Move X0, X21
	821 Call 0x1C17F18
	822 Call 0x1991590

Method: System.Void UpdatePatrol()

Disassembly:
	0x01E1847C ADD X22, X20, 0x20
	0x01E18480 CMP W21, W8
	0x01E18484 B.CS 0x1E185B0
	0x01E18488 LDR X0, [X22, X21, LSL #3]
	0x01E1848C CBZ X0, 0x1E185AC
	0x01E18490 MOV X1, X31
	0x01E18494 BL 0x3C32ECC
	0x01E18498 CBZ X0, 0x1E185AC
	0x01E1849C LDR X2, [X23]
	0x01E184A0 ADD X1, X31, 0x38
	0x01E184A4 BL 0x21E6600
	0x01E184A8 TBNZ X0, 0x0, 0x1E1853C
	0x01E184AC LDR W8, [X20 + 0x18]
	0x01E184B0 ADD X21, X21, 0x1
	0x01E184B4 CMP W21, W8
	0x01E184B8 B.LT 0x1E18480
	0x01E184BC B 0x1E18558
	0x01E184C0 LDR W8, [X19 + 0x80]
	0x01E184C4 STR X31, [X19 + 0xF8]
	0x01E184C8 CMP W8, 0x2
	0x01E184CC B.NE 0x1E1855C
	0x01E184D0 LDR X0, [X19 + 0x98]
	0x01E184D4 MOVZ W8, 0x1
	0x01E184D8 STR W8, [X19 + 0x80]
	0x01E184DC STR X31, [X19 + 0xF0]
	0x01E184E0 CBZ X0, 0x1E185AC
	0x01E184E4 MOV W1, W31
	0x01E184E8 BL 0x1E16790
	0x01E184EC MOV X0, X19
	0x01E184F0 MOV W1, W31
	0x01E184F4 BL 0x1E18144
	0x01E184F8 LDR X0, [X19 + 0x90]
	0x01E184FC CBZ X0, 0x1E185AC
	0x01E18500 LDR V0, [X19 + 0xD0]
	0x01E18504 MOV X1, X31
	0x01E18508 BL 0x3BE19E8
	0x01E1850C LDR X20, [X19 + 0x90]
	0x01E18510 MOV X0, X19
	0x01E18514 MOV X1, X31
	0x01E18518 BL 0x3C32E90
	0x01E1851C CBZ X0, 0x1E185AC
	0x01E18520 MOV X1, X31
	0x01E18524 BL 0x3C3F58C
	0x01E18528 CBZ X20, 0x1E185AC
	0x01E1852C MOV X0, X20
	0x01E18530 MOV X1, X31
	0x01E18534 BL 0x3BE13F8
	0x01E18538 B 0x1E18558
	0x01E1853C LDR X8, [X31 + 0x38]
	0x01E18540 LDR X0, [X19 + 0x98]
	0x01E18544 MOVZ W9, 0x1
	0x01E18548 STR W9, [X19 + 0x80]
	0x01E1854C STR X8, [X19 + 0xF8]
	0x01E18550 CBZ X0, 0x1E185AC
	0x01E18554 BL 0x1E1743C
	0x01E18558 LDR W8, [X19 + 0x80]
	0x01E1855C CBZ W8, 0x1E18570
	0x01E18560 CMP W8, 0x2
	0x01E18564 B.EQ 0x1E1857C
	0x01E18568 CMP W8, 0x1
	0x01E1856C B.NE 0x1E18584
	0x01E18570 MOV X0, X19
	0x01E18574 BL 0x1E185B4
	0x01E18578 B 0x1E18584
	0x01E1857C MOV X0, X19
	0x01E18580 BL 0x1E18944
	0x01E18584 MOV X0, X19
	0x01E18588 BL 0x1E18E74
	0x01E1858C LDP X20, X19, [X31 + 0x60]
	0x01E18590 LDP X22, X21, [X31 + 0x50]
	0x01E18594 LDP X24, X23, [X31 + 0x40]
	0x01E18598 LDR X30, [X31 + 0x30]
	0x01E1859C LDP D9, D8, [X31 + 0x20]
	0x01E185A0 LDP D11, D10, [X31 + 0x10]
	0x01E185A4 ADD X31, X31, 0x70
	0x01E185A8 RET
	0x01E185AC BL 0x1C16F20
	0x01E185B0 BL 0x1C16F28
	0x01E185B4 STR D14, [X31 - 0x60]!
	0x01E185B8 STP D13, D12, [X31 + 0x8]
	0x01E185BC STP D11, D10, [X31 + 0x18]
	0x01E185C0 STP D9, D8, [X31 + 0x28]
	0x01E185C4 STR X30, [X31 + 0x38]
	0x01E185C8 STP X22, X21, [X31 + 0x40]
	0x01E185CC STP X20, X19, [X31 + 0x50]
	0x01E185D0 LDR X8, [X0 + 0x110]
	0x01E185D4 CBZ X8, 0x1E1893C
	0x01E185D8 LDR X8, [X8 + 0x18]
	0x01E185DC CBZ X8, 0x1E1891C
	0x01E185E0 MOV X19, X0
	0x01E185E4 LDR X0, [X0 + 0x90]
	0x01E185E8 CBZ X0, 0x1E1893C
	0x01E185EC MOV X1, X31
	0x01E185F0 BL 0x3C32E90
	0x01E185F4 CBZ X0, 0x1E1893C
	0x01E185F8 MOV X1, X31
	0x01E185FC BL 0x3C3F58C
	0x01E18600 MOV X0, X31
	0x01E18604 BL 0x1DC0890
	0x01E18608 LDR X8, [X19 + 0x110]
	0x01E1860C CBZ X8, 0x1E1893C
	0x01E18610 LDRSW X9, [X19 + 0x118]
	0x01E18614 LDR W10, [X8 + 0x18]
	0x01E18618 CMP W9, W10
	0x01E1861C B.CS 0x1E18940
	0x01E18620 ADD X8, X8, X9, 0x3, LSL
	0x01E18624 LDR X0, [X8 + 0x20]
	0x01E18628 CBZ X0, 0x1E1893C
	0x01E1862C MOV X1, X31
	0x01E18630 MOV V8.16B, V0.16B
	0x01E18634 MOV V9.16B, V1.16B
	0x01E18638 MOV V10.16B, V2.16B
	0x01E1863C BL 0x3C3F58C
	0x01E18640 MOV X0, X31
	0x01E18644 BL 0x1DC0890
	0x01E18648 ADRP X21, 0x25C0000
	0x01E1864C LDRB W8, [X21 + 0x85C]
	0x01E18650 MOV V11.16B, V0.16B
	0x01E18654 MOV V12.16B, V1.16B
	0x01E18658 MOV V13.16B, V2.16B
	0x01E1865C CBNZ W8, 0x1E18674
	0x01E18660 ADRP X0, 0x22DB000
	0x01E18664 LDR X0, [X0 + 0x5A8]
	0x01E18668 BL 0x1C16CF4
	0x01E1866C MOVZ W8, 0x1
	0x01E18670 STRB W8, [X21 + 0x85C]
	0x01E18674 ADRP X22, 0x22DB000
	0x01E18678 LDR X22, [X22 + 0x5A8]
	0x01E1867C FSUB S11, S8, S11
	0x01E18680 FSUB S9, S9, S12
	0x01E18684 FSUB S8, S10, S13
	0x01E18688 LDR X0, [X22]
	0x01E1868C LDR W8, [X0 + 0xE0]
	0x01E18690 CBNZ W8, 0x1E18698
	0x01E18694 BL 0x1C16DFC
	0x01E18698 FMUL S0, S11, S11
	0x01E1869C FMUL S1, S9, S9
	0x01E186A0 ADRP X8, 0xFFFFFFFFFECD2000
	0x01E186A4 FADD S0, S0, S1
	0x01E186A8 LDR V1, [X8 + 0xBC]
	0x01E186AC FMUL S2, S8, S8
	0x01E186B0 FADD S0, S2, S0
	0x01E186B4 FSQRT S0, S0
	0x01E186B8 FCMP S0, S1
	0x01E186BC B.PL 0x1E18750
	0x01E186C0 LDR W8, [X19 + 0x118]
	0x01E186C4 LDR X9, [X19 + 0x110]
	0x01E186C8 ADD W8, W8, 0x1
	0x01E186CC STR W8, [X19 + 0x118]
	0x01E186D0 CBZ X9, 0x1E1893C
	0x01E186D4 LDR W9, [X9 + 0x18]
	0x01E186D8 CMP W8, W9
	0x01E186DC B.LT 0x1E186E4
	0x01E186E0 STR W31, [X19 + 0x118]
	0x01E186E4 LDR X0, [X19 + 0x98]
	0x01E186E8 CBZ X0, 0x1E1893C
	0x01E186EC MOV W1, W31
	0x01E186F0 BL 0x1E16790
	0x01E186F4 MOV X0, X19
	0x01E186F8 MOV W1, W31
	0x01E186FC BL 0x1E18144
	0x01E18700 LDR X0, [X19 + 0x90]
	0x01E18704 CBZ X0, 0x1E1893C
	0x01E18708 MOVZ W1, 0x1
	0x01E1870C MOV X2, X31
	0x01E18710 BL 0x3BE1AC4
	0x01E18714 LDR X20, [X19 + 0x90]
	0x01E18718 CBZ X20, 0x1E1893C
	0x01E1871C MOV X0, X20
	0x01E18720 MOV X1, X31
	0x01E18724 BL 0x3C32E90
	0x01E18728 CBZ X0, 0x1E1893C
	0x01E1872C MOV X1, X31
	0x01E18730 BL 0x3C3F58C
	0x01E18734 MOV X0, X20
	0x01E18738 MOV X1, X31
	0x01E1873C BL 0x3BE13F8
	0x01E18740 LDR V8, [X19 + 0xDC]
	0x01E18744 STR W31, [X19 + 0xEC]
	0x01E18748 STR S8, [X19 + 0xF4]
	0x01E1874C B 0x1E18754
	0x01E18750 LDR V8, [X19 + 0xF4]
	0x01E18754 FCMP S8, 0x0
	0x01E18758 B.LE 0x1E1876C
	0x01E1875C MOV X0, X31
	0x01E18760 BL 0x3C3C714
	0x01E18764 FSUB S0, S8, S0
	0x01E18768 B 0x1E18918
	0x01E1876C LDR X0, [X19 + 0x98]
	0x01E18770 CBZ X0, 0x1E1893C
	0x01E18774 BL 0x1E1905C
	0x01E18778 TBNZ X0, 0x0, 0x1E187FC
	0x01E1877C LDR X0, [X19 + 0x98]
	0x01E18780 CBZ X0, 0x1E1893C
	0x01E18784 MOVZ W1, 0x1
	0x01E18788 BL 0x1E16790
	0x01E1878C LDR X0, [X19 + 0x98]
	0x01E18790 CBZ X0, 0x1E1893C
	0x01E18794 LDR V0, [X19 + 0xCC]
	0x01E18798 BL 0x1E17DC0
	0x01E1879C MOVZ W1, 0x1
	0x01E187A0 MOV X0, X19
	0x01E187A4 BL 0x1E18144
	0x01E187A8 LDR X0, [X19 + 0x90]
	0x01E187AC CBZ X0, 0x1E1893C
	0x01E187B0 MOVZ W1, 0x1
	0x01E187B4 MOV X2, X31
	0x01E187B8 BL 0x3BE1AC4
	0x01E187BC LDR X8, [X19 + 0x110]
	0x01E187C0 CBZ X8, 0x1E1893C
	0x01E187C4 LDRSW X9, [X19 + 0x118]
	0x01E187C8 LDR W10, [X8 + 0x18]
	0x01E187CC CMP W9, W10
	0x01E187D0 B.CS 0x1E18940
	0x01E187D4 ADD X8, X8, X9, 0x3, LSL
	0x01E187D8 LDR X0, [X8 + 0x20]
	0x01E187DC CBZ X0, 0x1E1893C
	0x01E187E0 LDR X20, [X19 + 0x90]
	0x01E187E4 MOV X1, X31
	0x01E187E8 BL 0x3C3F58C
	0x01E187EC CBZ X20, 0x1E1893C
	0x01E187F0 MOV X0, X20
	0x01E187F4 MOV X1, X31
	0x01E187F8 BL 0x3BE13F8
	0x01E187FC LDR V11, [X19 + 0xEC]
	0x01E18800 MOV X0, X19
	0x01E18804 MOV X1, X31
	0x01E18808 BL 0x3C32E90
	0x01E1880C CBZ X0, 0x1E1893C
	0x01E18810 MOV X1, X31
	0x01E18814 BL 0x3C3F58C

ISIL:
	001 Move [X31-96], D14
	002 Move [X31+8], D13
	003 Move [X31+16], D12
	004 Move [X31+24], D11
	005 Move [X31+32], D10
	006 Move [X31+40], D9
	007 Move [X31+48], D8
	008 Move [X31+56], X30
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X8, [X0+280]
	014 Compare X8, 0
	015 JumpIfEqual {264}
	016 Move X8, [X8+24]
	017 Compare X8, 0
	018 JumpIfEqual {251}
	019 Move X19, X0
	020 Move X0, [X0+144]
	021 Compare X0, 0
	022 JumpIfEqual {264}
	023 Move X1, X31
	024 Call Component.get_transform, X0
	025 Compare X0, 0
	026 JumpIfEqual {264}
	027 Move X1, X31
	028 Call Transform.get_position, X0
	029 Move X0, X31
	030 Call Extensions.Flatten, X0
	031 Move X8, [X19+280]
	032 Compare X8, 0
	033 JumpIfEqual {264}
	034 NotImplemented "Instruction LDRSW not yet implemented."
	035 Move W10, [X8+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Add X8, X8, X9
	038 Move X0, [X8+32]
	039 Compare X0, 0
	040 JumpIfEqual {264}
	041 Move X1, X31
	042 Move V8, V0
	043 Move V9, V1
	044 Move V10, V2
	045 Call Transform.get_position, X0
	046 Move X0, X31
	047 Call Extensions.Flatten, X0
	048 Move X21, 0x25C1000
	049 Move W8, [X21+2140]
	050 Move V11, V0
	051 Move V12, V1
	052 Move V13, V2
	053 Compare W8, 0
	054 JumpIfNotEqual {60}
	055 Move X0, 0x22DC000
	056 Move X0, [X0+1448]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X21+2140], W8
	060 Move X22, 0x22DC000
	061 Move X22, [X22+1448]
	062 Subtract S11, S8, S11
	063 Subtract S9, S9, S12
	064 Subtract S8, S10, S13
	065 Move X0, [X22]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Multiply S0, S11, S11
	071 Multiply S1, S9, S9
	072 Move X8, -20107264
	073 Add S0, S0, S1
	074 Move V1, [X8+1100]
	075 Multiply S2, S8, S8
	076 Add S0, S2, S0
	077 NotImplemented "Instruction FSQRT not yet implemented."
	078 NotImplemented "Instruction FCMP not yet implemented."
	079 Move W8, [X19+288]
	080 Move X9, [X19+280]
	081 Add W8, W8, 1
	082 Move [X19+288], W8
	083 Compare X9, 0
	084 JumpIfEqual {264}
	085 Move W9, [X9+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move [X19+288], W31
	088 Move X0, [X19+152]
	089 Compare X0, 0
	090 JumpIfEqual {264}
	091 Move W1, W31
	092 Call MobView.SetWalk, X0, X1
	093 Move X0, X19
	094 Move W1, W31
	095 Call MobController.set_MoveStatus, X0, X1
	096 Move X0, [X19+144]
	097 Compare X0, 0
	098 JumpIfEqual {264}
	099 Move W1, W31
	100 Move X2, X31
	101 Call NavMeshAgent.set_updateRotation, X0, X1
	102 Move X20, [X19+144]
	103 Compare X20, 0
	104 JumpIfEqual {264}
	105 Move X0, X20
	106 Move X1, X31
	107 Call Component.get_transform, X0
	108 Compare X0, 0
	109 JumpIfEqual {264}
	110 Move X1, X31
	111 Call Transform.get_position, X0
	112 Move X0, X20
	113 Move X1, X31
	114 Call NavMeshAgent.SetDestination, X0, X1
	115 Move X0, X31
	116 Move [X19+248], W31
	117 Call Time.get_time
	118 Move V1, [X19+228]
	119 Subtract S0, S0, S1
	120 Move [X19+256], S0
	121 Move X0, X31
	122 Call Time.get_time
	123 Move V1, [X19+256]
	124 Move V2, [X19+228]
	125 Subtract S0, S0, S1
	126 NotImplemented "Instruction FCMP not yet implemented."
	127 Move X0, X19
	128 Call MobController.get_MoveStatus, X0
	129 Compare W0, 0
	130 JumpIfNotEqual {169}
	131 Move X0, [X19+152]
	132 Move [X19+196], W31
	133 Compare X0, 0
	134 JumpIfEqual {264}
	135 Move W1, 1
	136 Call MobView.SetWalk, X0, X1
	137 Move X0, [X19+152]
	138 Compare X0, 0
	139 JumpIfEqual {264}
	140 Move V0, [X19+212]
	141 Call MobView.SetWalkSpeed, X0, V0
	142 Move W1, 1
	143 Move X0, X19
	144 Call MobController.set_MoveStatus, X0, X1
	145 Move X0, [X19+144]
	146 Compare X0, 0
	147 JumpIfEqual {264}
	148 Move W1, 1
	149 Move X2, X31
	150 Call NavMeshAgent.set_updateRotation, X0, X1
	151 Move X8, [X19+280]
	152 Compare X8, 0
	153 JumpIfEqual {264}
	154 NotImplemented "Instruction LDRSW not yet implemented."
	155 Move W10, [X8+24]
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Add X8, X8, X9
	158 Move X0, [X8+32]
	159 Compare X0, 0
	160 JumpIfEqual {264}
	161 Move X20, [X19+144]
	162 Move X1, X31
	163 Call Transform.get_position, X0
	164 Compare X20, 0
	165 JumpIfEqual {264}
	166 Move X0, X20
	167 Move X1, X31
	168 Call NavMeshAgent.SetDestination, X0, X1
	169 Move V11, [X19+248]
	170 Move X0, X19
	171 Move X1, X31
	172 Call Component.get_transform, X0
	173 Compare X0, 0
	174 JumpIfEqual {264}
	175 Move X1, X31
	176 Call Transform.get_position, X0
	177 Move S12, [X19+236]
	178 Move S13, [X19+240]
	179 Move W8, [X21+2140]
	180 Move V14, [X19+244]
	181 Move V8, V0
	182 Move V9, V1
	183 Move V10, V2
	184 Compare W8, 0
	185 JumpIfNotEqual {191}
	186 Move X0, 0x22DC000
	187 Move X0, [X0+1448]
	188 Call 0x1C17CF4
	189 Move W8, 1
	190 Move [X21+2140], W8
	191 Move X0, [X22]
	192 Subtract S12, S8, S12
	193 Subtract S9, S9, S13
	194 Subtract S8, S10, S14
	195 Move W8, [X0+224]
	196 Compare W8, 0
	197 JumpIfNotEqual {199}
	198 Call 0x1C17DFC
	199 Multiply S0, S12, S12
	200 Multiply S1, S9, S9
	201 Add S0, S0, S1
	202 Multiply S1, S8, S8
	203 Add S0, S1, S0
	204 NotImplemented "Instruction FSQRT not yet implemented."
	205 Add S0, S11, S0
	206 Move X0, X19
	207 Move X1, X31
	208 Move [X19+248], S0
	209 Call Component.get_transform, X0
	210 Compare X0, 0
	211 JumpIfEqual {264}
	212 Move X1, X31
	213 Call Transform.get_position, X0
	214 Move V3, [X19+248]
	215 Move V4, [X19+220]
	216 Move [X19+236], S0
	217 Move [X19+244], S1
	218 Move [X19+244], S2
	219 NotImplemented "Instruction FCMP not yet implemented."
	220 Move X0, [X19+152]
	221 Compare X0, 0
	222 JumpIfEqual {264}
	223 Move W1, W31
	224 Call MobView.SetWalk, X0, X1
	225 Move X0, X19
	226 Move W1, W31
	227 Call MobController.set_MoveStatus, X0, X1
	228 Move X0, [X19+144]
	229 Compare X0, 0
	230 JumpIfEqual {264}
	231 Move W1, W31
	232 Move X2, X31
	233 Call NavMeshAgent.set_updateRotation, X0, X1
	234 Move X20, [X19+144]
	235 Compare X20, 0
	236 JumpIfEqual {264}
	237 Move X0, X20
	238 Move X1, X31
	239 Call Component.get_transform, X0
	240 Compare X0, 0
	241 JumpIfEqual {264}
	242 Move X1, X31
	243 Call Transform.get_position, X0
	244 Move X0, X20
	245 Move X1, X31
	246 Call NavMeshAgent.SetDestination, X0, X1
	247 Move X0, X31
	248 Move [X19+248], W31
	249 Call Time.get_time
	250 Move [X19+256], S0
	251 Move X20, [X31+80]
	252 Move X19, [X31+88]
	253 Move X22, [X31+64]
	254 Move X21, [X31+72]
	255 Move X30, [X31+56]
	256 Move D9, [X31+40]
	257 Move D8, [X31+48]
	258 Move D11, [X31+24]
	259 Move D10, [X31+32]
	260 Move D13, [X31+8]
	261 Move D12, [X31+16]
	262 Move V14, [X31+96]
	263 Return 
	264 Call 0x1C17F20
	265 Call 0x1C17F28

Method: System.Void UpdateAttack()

Disassembly:
	0x01E18818 LDP S12, S13, [X19 + 0xE0]
	0x01E1881C LDRB W8, [X21 + 0x85C]
	0x01E18820 LDR V14, [X19 + 0xE8]
	0x01E18824 MOV V8.16B, V0.16B
	0x01E18828 MOV V9.16B, V1.16B
	0x01E1882C MOV V10.16B, V2.16B
	0x01E18830 CBNZ W8, 0x1E18848
	0x01E18834 ADRP X0, 0x22DB000
	0x01E18838 LDR X0, [X0 + 0x5A8]
	0x01E1883C BL 0x1C16CF4
	0x01E18840 MOVZ W8, 0x1
	0x01E18844 STRB W8, [X21 + 0x85C]
	0x01E18848 LDR X0, [X22]
	0x01E1884C FSUB S12, S8, S12
	0x01E18850 FSUB S9, S9, S13
	0x01E18854 FSUB S8, S10, S14
	0x01E18858 LDR W8, [X0 + 0xE0]
	0x01E1885C CBNZ W8, 0x1E18864
	0x01E18860 BL 0x1C16DFC
	0x01E18864 FMUL S0, S12, S12
	0x01E18868 FMUL S1, S9, S9
	0x01E1886C FADD S0, S0, S1
	0x01E18870 FMUL S1, S8, S8
	0x01E18874 FADD S0, S1, S0
	0x01E18878 FSQRT S0, S0
	0x01E1887C FADD S0, S11, S0
	0x01E18880 MOV X0, X19
	0x01E18884 MOV X1, X31
	0x01E18888 STR S0, [X19 + 0xEC]
	0x01E1888C BL 0x3C32E90
	0x01E18890 CBZ X0, 0x1E1893C
	0x01E18894 MOV X1, X31
	0x01E18898 BL 0x3C3F58C
	0x01E1889C LDR V3, [X19 + 0xEC]
	0x01E188A0 LDR V4, [X19 + 0xD4]
	0x01E188A4 STP S0, S1, [X19 + 0xE0]
	0x01E188A8 STR S2, [X19 + 0xE8]
	0x01E188AC FCMP S3, S4
	0x01E188B0 B.LT 0x1E1891C
	0x01E188B4 LDR X0, [X19 + 0x98]
	0x01E188B8 CBZ X0, 0x1E1893C
	0x01E188BC MOV W1, W31
	0x01E188C0 BL 0x1E16790
	0x01E188C4 MOV X0, X19
	0x01E188C8 MOV W1, W31
	0x01E188CC BL 0x1E18144
	0x01E188D0 LDR X0, [X19 + 0x90]
	0x01E188D4 CBZ X0, 0x1E1893C
	0x01E188D8 MOVZ W1, 0x1
	0x01E188DC MOV X2, X31
	0x01E188E0 BL 0x3BE1AC4
	0x01E188E4 LDR X20, [X19 + 0x90]
	0x01E188E8 CBZ X20, 0x1E1893C
	0x01E188EC MOV X0, X20
	0x01E188F0 MOV X1, X31
	0x01E188F4 BL 0x3C32E90
	0x01E188F8 CBZ X0, 0x1E1893C
	0x01E188FC MOV X1, X31
	0x01E18900 BL 0x3C3F58C
	0x01E18904 MOV X0, X20
	0x01E18908 MOV X1, X31
	0x01E1890C BL 0x3BE13F8
	0x01E18910 LDR V0, [X19 + 0xDC]
	0x01E18914 STR W31, [X19 + 0xEC]
	0x01E18918 STR S0, [X19 + 0xF4]
	0x01E1891C LDP X20, X19, [X31 + 0x50]
	0x01E18920 LDP X22, X21, [X31 + 0x40]
	0x01E18924 LDR X30, [X31 + 0x38]
	0x01E18928 LDP D9, D8, [X31 + 0x28]
	0x01E1892C LDP D11, D10, [X31 + 0x18]
	0x01E18930 LDP D13, D12, [X31 + 0x8]
	0x01E18934 LDR V14, [X31], #0x60
	0x01E18938 RET
	0x01E1893C BL 0x1C16F20
	0x01E18940 BL 0x1C16F28
	0x01E18944 STP D15, D14, [X31 - 0x70]!
	0x01E18948 STP D13, D12, [X31 + 0x10]
	0x01E1894C STP D11, D10, [X31 + 0x20]
	0x01E18950 STP D9, D8, [X31 + 0x30]
	0x01E18954 STR X30, [X31 + 0x40]
	0x01E18958 STP X22, X21, [X31 + 0x50]
	0x01E1895C STP X20, X19, [X31 + 0x60]
	0x01E18960 ADRP X21, 0x25C0000
	0x01E18964 ADRP X20, 0x22DB000
	0x01E18968 LDRB W8, [X21 + 0xE09]
	0x01E1896C LDR X20, [X20 + 0x598]
	0x01E18970 MOV X19, X0
	0x01E18974 TBNZ X8, 0x0, 0x1E1898C
	0x01E18978 ADRP X0, 0x22DB000
	0x01E1897C LDR X0, [X0 + 0x598]
	0x01E18980 BL 0x1C16CF4
	0x01E18984 MOVZ W8, 0x1
	0x01E18988 STRB W8, [X21 + 0xE09]
	0x01E1898C LDR X0, [X20]
	0x01E18990 LDR X20, [X19 + 0xF8]
	0x01E18994 LDR W8, [X0 + 0xE0]
	0x01E18998 CBNZ W8, 0x1E189A0
	0x01E1899C BL 0x1C16DFC
	0x01E189A0 MOV X0, X20
	0x01E189A4 MOV X1, X31
	0x01E189A8 MOV X2, X31
	0x01E189AC BL 0x3C3883C
	0x01E189B0 TBZ X0, 0x0, 0x1E189C0
	0x01E189B4 MOVZ W8, 0x1
	0x01E189B8 STR W8, [X19 + 0x80]
	0x01E189BC B 0x1E18E50
	0x01E189C0 LDR V8, [X19 + 0xF4]
	0x01E189C4 FCMP S8, 0x0
	0x01E189C8 B.PL 0x1E18B90
	0x01E189CC MOV X0, X19
	0x01E189D0 MOV X1, X31
	0x01E189D4 BL 0x3C32E90
	0x01E189D8 CBZ X0, 0x1E18E70
	0x01E189DC MOV X1, X31
	0x01E189E0 BL 0x3C3F58C
	0x01E189E4 MOV X0, X31
	0x01E189E8 BL 0x1DC0890
	0x01E189EC LDR V3, [X19 + 0x108]
	0x01E189F0 MOV V8.16B, V0.16B
	0x01E189F4 MOV V9.16B, V1.16B
	0x01E189F8 LDR V0, [X19 + 0x100]
	0x01E189FC LDR V1, [X19 + 0x104]
	0x01E18A00 MOV V10.16B, V2.16B
	0x01E18A04 MOV V2.16B, V3.16B
	0x01E18A08 MOV X0, X31
	0x01E18A0C BL 0x1DC0890
	0x01E18A10 ADRP X21, 0x25C0000
	0x01E18A14 LDRB W8, [X21 + 0x85C]
	0x01E18A18 MOV V11.16B, V0.16B
	0x01E18A1C MOV V12.16B, V1.16B
	0x01E18A20 MOV V13.16B, V2.16B
	0x01E18A24 CBNZ W8, 0x1E18A3C
	0x01E18A28 ADRP X0, 0x22DB000
	0x01E18A2C LDR X0, [X0 + 0x5A8]
	0x01E18A30 BL 0x1C16CF4
	0x01E18A34 MOVZ W8, 0x1
	0x01E18A38 STRB W8, [X21 + 0x85C]
	0x01E18A3C ADRP X22, 0x22DB000
	0x01E18A40 LDR X22, [X22 + 0x5A8]
	0x01E18A44 FSUB S11, S8, S11
	0x01E18A48 FSUB S9, S9, S12
	0x01E18A4C FSUB S8, S10, S13
	0x01E18A50 LDR X0, [X22]
	0x01E18A54 LDR W8, [X0 + 0xE0]
	0x01E18A58 CBNZ W8, 0x1E18A60
	0x01E18A5C BL 0x1C16DFC
	0x01E18A60 ADRP X8, 0xFFFFFFFFFECD2000
	0x01E18A64 FMUL S0, S11, S11
	0x01E18A68 FMUL S1, S9, S9
	0x01E18A6C LDR V14, [X8 + 0xBC]
	0x01E18A70 FADD S0, S0, S1
	0x01E18A74 FMUL S1, S8, S8
	0x01E18A78 FADD S0, S1, S0
	0x01E18A7C FSQRT S0, S0
	0x01E18A80 FCMP S0, S14
	0x01E18A84 B.PL 0x1E18AA8
	0x01E18A88 LDR X0, [X19 + 0x90]
	0x01E18A8C CBZ X0, 0x1E18E70
	0x01E18A90 MOVZ W1, 0x1
	0x01E18A94 MOV X2, X31
	0x01E18A98 MOVZ W20, 0x1
	0x01E18A9C BL 0x3BE1AC4
	0x01E18AA0 STP W31, W31, [X19 + 0xEC]
	0x01E18AA4 STR W20, [X19 + 0x80]
	0x01E18AA8 LDR X0, [X19 + 0x98]
	0x01E18AAC CBZ X0, 0x1E18E70
	0x01E18AB0 BL 0x1E1905C
	0x01E18AB4 TBNZ X0, 0x0, 0x1E18AE4
	0x01E18AB8 LDR X0, [X19 + 0x98]
	0x01E18ABC CBZ X0, 0x1E18E70
	0x01E18AC0 MOVZ W1, 0x1
	0x01E18AC4 BL 0x1E16790
	0x01E18AC8 LDR X0, [X19 + 0x98]
	0x01E18ACC CBZ X0, 0x1E18E70
	0x01E18AD0 LDR V0, [X19 + 0xD0]
	0x01E18AD4 BL 0x1E17DC0
	0x01E18AD8 MOVZ W1, 0x2
	0x01E18ADC MOV X0, X19
	0x01E18AE0 BL 0x1E18144
	0x01E18AE4 LDR V8, [X19 + 0x100]
	0x01E18AE8 LDR V9, [X19 + 0x104]
	0x01E18AEC LDR V10, [X19 + 0x108]
	0x01E18AF0 MOV X0, X19
	0x01E18AF4 MOV X1, X31
	0x01E18AF8 BL 0x3C32E90
	0x01E18AFC CBZ X0, 0x1E18E70
	0x01E18B00 MOV X1, X31
	0x01E18B04 BL 0x3C3F58C
	0x01E18B08 FSUB S0, S8, S0
	0x01E18B0C FSUB S1, S9, S1
	0x01E18B10 FSUB S2, S10, S2
	0x01E18B14 MOV X0, X31
	0x01E18B18 BL 0x1DC0890
	0x01E18B1C ADRP X20, 0x25C0000
	0x01E18B20 LDRB W8, [X20 + 0x785]
	0x01E18B24 MOV V8.16B, V0.16B
	0x01E18B28 MOV V9.16B, V1.16B
	0x01E18B2C MOV V10.16B, V2.16B
	0x01E18B30 CBNZ W8, 0x1E18B48
	0x01E18B34 ADRP X0, 0x22DB000
	0x01E18B38 LDR X0, [X0 + 0x5A8]
	0x01E18B3C BL 0x1C16CF4
	0x01E18B40 MOVZ W8, 0x1
	0x01E18B44 STRB W8, [X20 + 0x785]
	0x01E18B48 LDR X0, [X22]
	0x01E18B4C LDR W8, [X0 + 0xE0]
	0x01E18B50 CBNZ W8, 0x1E18B58
	0x01E18B54 BL 0x1C16DFC
	0x01E18B58 FMUL S0, S8, S8
	0x01E18B5C FMUL S1, S9, S9
	0x01E18B60 ADRP X8, 0xFFFFFFFFFECD2000
	0x01E18B64 FADD S0, S0, S1
	0x01E18B68 LDR V1, [X8 + 0x17C]
	0x01E18B6C FMUL S2, S10, S10
	0x01E18B70 FADD S0, S2, S0
	0x01E18B74 FSQRT S0, S0
	0x01E18B78 FCMP S0, S1
	0x01E18B7C B.LE 0x1E18BA4
	0x01E18B80 FDIV S8, S8, S0
	0x01E18B84 FDIV S9, S9, S0
	0x01E18B88 FDIV S10, S10, S0
	0x01E18B8C B 0x1E18BDC
	0x01E18B90 MOV X0, X31
	0x01E18B94 BL 0x3C3C714
	0x01E18B98 FSUB S0, S8, S0
	0x01E18B9C STR S0, [X19 + 0xF4]
	0x01E18BA0 B 0x1E18E50
	0x01E18BA4 ADRP X20, 0x25C0000
	0x01E18BA8 LDRB W8, [X20 + 0x783]
	0x01E18BAC CBNZ W8, 0x1E18BC4
	0x01E18BB0 ADRP X0, 0x22DB000
	0x01E18BB4 LDR X0, [X0 + 0x5A0]
	0x01E18BB8 BL 0x1C16CF4
	0x01E18BBC MOVZ W8, 0x1
	0x01E18BC0 STRB W8, [X20 + 0x783]
	0x01E18BC4 ADRP X8, 0x22DB000
	0x01E18BC8 LDR X8, [X8 + 0x5A0]
	0x01E18BCC LDR X8, [X8]
	0x01E18BD0 LDR X8, [X8 + 0xB8]
	0x01E18BD4 LDP S8, S9, [X8]
	0x01E18BD8 LDR V10, [X8 + 0x8]
	0x01E18BDC MOV X0, X19
	0x01E18BE0 MOV X1, X31
	0x01E18BE4 BL 0x3C32E90
	0x01E18BE8 MOV X20, X0
	0x01E18BEC MOV V0.16B, V8.16B
	0x01E18BF0 MOV V1.16B, V9.16B
	0x01E18BF4 MOV V2.16B, V10.16B
	0x01E18BF8 MOV X0, X31
	0x01E18BFC BL 0x3C2A8C4
	0x01E18C00 CBZ X20, 0x1E18E70
	0x01E18C04 MOV X0, X20
	0x01E18C08 MOV X1, X31
	0x01E18C0C BL 0x3C3F7AC
	0x01E18C10 LDR X0, [X19 + 0x90]
	0x01E18C14 CBZ X0, 0x1E18E70
	0x01E18C18 LDR V2, [X19 + 0x108]
	0x01E18C1C LDR V1, [X19 + 0x104]
	0x01E18C20 LDR V0, [X19 + 0x100]
	0x01E18C24 MOV X1, X31
	0x01E18C28 BL 0x3BE13F8
	0x01E18C2C LDR V11, [X19 + 0xF0]
	0x01E18C30 MOV X0, X19
	0x01E18C34 MOV X1, X31
	0x01E18C38 BL 0x3C32E90
	0x01E18C3C CBZ X0, 0x1E18E70
	0x01E18C40 MOV X1, X31
	0x01E18C44 BL 0x3C3F58C
	0x01E18C48 LDP S12, S13, [X19 + 0xE0]
	0x01E18C4C LDRB W8, [X21 + 0x85C]
	0x01E18C50 LDR V15, [X19 + 0xE8]
	0x01E18C54 MOV V8.16B, V0.16B
	0x01E18C58 MOV V9.16B, V1.16B
	0x01E18C5C MOV V10.16B, V2.16B
	0x01E18C60 CBNZ W8, 0x1E18C78
	0x01E18C64 ADRP X0, 0x22DB000
	0x01E18C68 LDR X0, [X0 + 0x5A8]
	0x01E18C6C BL 0x1C16CF4
	0x01E18C70 MOVZ W8, 0x1
	0x01E18C74 STRB W8, [X21 + 0x85C]
	0x01E18C78 LDR X0, [X22]
	0x01E18C7C FSUB S12, S8, S12
	0x01E18C80 FSUB S9, S9, S13
	0x01E18C84 FSUB S8, S10, S15
	0x01E18C88 LDR W8, [X0 + 0xE0]
	0x01E18C8C CBNZ W8, 0x1E18C94
	0x01E18C90 BL 0x1C16DFC
	0x01E18C94 FMUL S0, S12, S12
	0x01E18C98 FMUL S1, S9, S9
	0x01E18C9C FADD S0, S0, S1
	0x01E18CA0 FMUL S1, S8, S8
	0x01E18CA4 FADD S0, S1, S0
	0x01E18CA8 FSQRT S0, S0
	0x01E18CAC FADD S0, S11, S0
	0x01E18CB0 MOV X0, X19
	0x01E18CB4 MOV X1, X31
	0x01E18CB8 STR S0, [X19 + 0xF0]
	0x01E18CBC BL 0x3C32E90
	0x01E18CC0 CBZ X0, 0x1E18E70
	0x01E18CC4 MOV X1, X31
	0x01E18CC8 BL 0x3C3F58C
	0x01E18CCC LDR V3, [X19 + 0xF0]
	0x01E18CD0 LDR V4, [X19 + 0xD8]
	0x01E18CD4 STP S0, S1, [X19 + 0xE0]
	0x01E18CD8 STR S2, [X19 + 0xE8]
	0x01E18CDC FCMP S3, S4
	0x01E18CE0 B.LT 0x1E18D38
	0x01E18CE4 LDR X0, [X19 + 0x98]
	0x01E18CE8 CBZ X0, 0x1E18E70
	0x01E18CEC MOV W1, W31
	0x01E18CF0 BL 0x1E16790
	0x01E18CF4 MOV X0, X19
	0x01E18CF8 MOV W1, W31
	0x01E18CFC BL 0x1E18144
	0x01E18D00 LDR V0, [X19 + 0xDC]
	0x01E18D04 LDR X20, [X19 + 0x90]
	0x01E18D08 STR W31, [X19 + 0xF0]
	0x01E18D0C STR S0, [X19 + 0xF4]
	0x01E18D10 CBZ X20, 0x1E18E70
	0x01E18D14 MOV X0, X20
	0x01E18D18 MOV X1, X31
	0x01E18D1C BL 0x3C32E90
	0x01E18D20 CBZ X0, 0x1E18E70
	0x01E18D24 MOV X1, X31
	0x01E18D28 BL 0x3C3F58C
	0x01E18D2C MOV X0, X20
	0x01E18D30 MOV X1, X31
	0x01E18D34 BL 0x3BE13F8
	0x01E18D38 MOV X0, X19
	0x01E18D3C MOV X1, X31
	0x01E18D40 BL 0x3C32E90
	0x01E18D44 CBZ X0, 0x1E18E70
	0x01E18D48 MOV X1, X31
	0x01E18D4C BL 0x3C3F58C
	0x01E18D50 MOV X0, X31
	0x01E18D54 BL 0x1DC0890
	0x01E18D58 LDR V3, [X19 + 0x108]
	0x01E18D5C MOV V8.16B, V0.16B
	0x01E18D60 MOV V9.16B, V1.16B
	0x01E18D64 LDR V0, [X19 + 0x100]
	0x01E18D68 LDR V1, [X19 + 0x104]
	0x01E18D6C MOV V10.16B, V2.16B
	0x01E18D70 MOV V2.16B, V3.16B
	0x01E18D74 MOV X0, X31
	0x01E18D78 BL 0x1DC0890
	0x01E18D7C LDRB W8, [X21 + 0x85C]
	0x01E18D80 MOV V11.16B, V0.16B
	0x01E18D84 MOV V12.16B, V1.16B
	0x01E18D88 MOV V13.16B, V2.16B
	0x01E18D8C CBNZ W8, 0x1E18DA4
	0x01E18D90 ADRP X0, 0x22DB000
	0x01E18D94 LDR X0, [X0 + 0x5A8]
	0x01E18D98 BL 0x1C16CF4
	0x01E18D9C MOVZ W8, 0x1
	0x01E18DA0 STRB W8, [X21 + 0x85C]
	0x01E18DA4 LDR X0, [X22]
	0x01E18DA8 FSUB S11, S8, S11
	0x01E18DAC FSUB S9, S9, S12
	0x01E18DB0 FSUB S8, S10, S13
	0x01E18DB4 LDR W8, [X0 + 0xE0]
	0x01E18DB8 CBNZ W8, 0x1E18DC0
	0x01E18DBC BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+16], D14
	003 Move [X31+32], D13
	004 Move [X31+40], D12
	005 Move [X31+48], D11
	006 Move [X31+56], D10
	007 Move [X31+64], D9
	008 Move [X31+72], D8
	009 Move [X31+80], X30
	010 Move [X31+88], X23
	011 Move [X31+96], X22
	012 Move [X31+104], X21
	013 Move [X31+112], X20
	014 Move [X31+120], X19
	015 Move X21, 0x25C1000
	016 Move X20, 0x22DC000
	017 Move W8, [X21+3590]
	018 Move X20, [X20+1432]
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x22DC000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move X0, 0x22E3000
	028 Move X0, [X0+960]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+3590], W8
	032 Move X0, [X20]
	033 Move X20, [X19+264]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X20
	039 Move X1, X31
	040 Move X2, X31
	041 Call Object.op_Equality, X0, X1
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {55}
	046 Move X0, [X19+264]
	047 Compare X0, 0
	048 JumpIfEqual {421}
	049 Move X1, X31
	050 Call NetPlayer.get_isDie, X0
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {77}
	055 Move X0, X19
	056 Move W1, W31
	057 Move [X19+264], X31
	058 Call MobController.set_MoveStatus, X0, X1
	059 Move W8, 1
	060 Move [X19+128], W8
	061 Move [X19+196], W31
	062 Move X20, [X31+112]
	063 Move X19, [X31+120]
	064 Move X22, [X31+96]
	065 Move X21, [X31+104]
	066 Move X30, [X31+80]
	067 Move X23, [X31+88]
	068 Move D9, [X31+64]
	069 Move D8, [X31+72]
	070 Move D11, [X31+48]
	071 Move D10, [X31+56]
	072 Move D13, [X31+32]
	073 Move D12, [X31+40]
	074 Move V14, [X31+16]
	075 Add X31, X31, 128
	076 Return 
	077 Move X0, X19
	078 Move X1, X31
	079 Call Component.get_transform, X0
	080 Compare X0, 0
	081 JumpIfEqual {421}
	082 Move X1, X31
	083 Call Transform.get_position, X0
	084 Move X0, X31
	085 Call Extensions.Flatten, X0
	086 Move X0, [X19+264]
	087 Compare X0, 0
	088 JumpIfEqual {421}
	089 Move X1, X31
	090 Move V8, V0
	091 Move V9, V1
	092 Move V10, V2
	093 Call Component.get_transform, X0
	094 Compare X0, 0
	095 JumpIfEqual {421}
	096 Move X1, X31
	097 Call Transform.get_position, X0
	098 Move X0, X31
	099 Call Extensions.Flatten, X0
	100 Move X22, 0x25C1000
	101 Move W8, [X22+2140]
	102 Move V11, V0
	103 Move V12, V1
	104 Move V13, V2
	105 Compare W8, 0
	106 JumpIfNotEqual {112}
	107 Move X0, 0x22DC000
	108 Move X0, [X0+1448]
	109 Call 0x1C17CF4
	110 Move W8, 1
	111 Move [X22+2140], W8
	112 Move X23, 0x22DC000
	113 Move X23, [X23+1448]
	114 Subtract S11, S8, S11
	115 Subtract S9, S9, S12
	116 Subtract S8, S10, S13
	117 Move X0, [X23]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Multiply S0, S11, S11
	123 Multiply S1, S9, S9
	124 Multiply S2, S8, S8
	125 Add S0, S0, S1
	126 Add S0, S2, S0
	127 NotImplemented "Instruction FSQRT not yet implemented."
	128 Move S1, 0.5
	129 NotImplemented "Instruction FCMP not yet implemented."
	130 Move X0, X19
	131 Call MobController.get_MoveStatus, X0
	132 Compare W0, 0
	133 JumpIfEqual {161}
	134 Move X0, [X19+152]
	135 Compare X0, 0
	136 JumpIfEqual {421}
	137 Move W1, W31
	138 Call MobView.SetWalk, X0, X1
	139 Move X0, X19
	140 Move W1, W31
	141 Call MobController.set_MoveStatus, X0, X1
	142 Move X0, X31
	143 Move [X19+252], W31
	144 Call Time.get_time
	145 Move X20, [X19+144]
	146 Move S1, -1
	147 Add S0, S0, S1
	148 Move [X19+256], S0
	149 Compare X20, 0
	150 JumpIfEqual {421}
	151 Move X0, X20
	152 Move X1, X31
	153 Call Component.get_transform, X0
	154 Compare X0, 0
	155 JumpIfEqual {421}
	156 Move X1, X31
	157 Call Transform.get_position, X0
	158 Move X0, X20
	159 Move X1, X31
	160 Call NavMeshAgent.SetDestination, X0, X1
	161 Move W8, [X19+196]
	162 Move W9, 204
	163 Move V8, [X19+208]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move W8, 200
	166 NotImplemented "Instruction CSEL not yet implemented."
	167 Move V0, [X19]
	168 NotImplemented "Instruction FCMP not yet implemented."
	169 Move X20, [X19+264]
	170 Move W21, [X19+192]
	171 Move X0, X19
	172 Move X1, X31
	173 Move [X19+208], W31
	174 Call Component.get_transform, X0
	175 Move X8, [X19+64]
	176 Move X2, X0
	177 Compare X8, 0
	178 JumpIfEqual {187}
	179 Move X8, [X8+32]
	180 Compare X8, 0
	181 JumpIfEqual {187}
	182 Move W7, [X8]
	183 Move X0, X31
	184 Call Time.get_deltaTime
	185 Add S0, S8, S0
	186 Move [X19+208], S0
	187 Move X7, X31
	188 Compare X20, 0
	189 JumpIfEqual {421}
	190 Move X9, 0x22E3000
	191 Move X3, [X19+296]
	192 Move X4, [X19+304]
	193 Move W8, [X19+104]
	194 Move X9, [X9+960]
	195 Move X0, X20
	196 Move W1, W21
	197 NotImplemented "Instruction BFM not yet implemented."
	198 Move X6, [X9]
	199 Move W5, W31
	200 Move [X31], X31
	201 Call NetPlayer.PlayerHit, X0, X1, X2, X3, X4, X5, X6, X7
	202 Move W8, [X19+196]
	203 Add W8, W8, 1
	204 Move [X19+196], W8
	205 Move X0, X19
	206 Call MobController.get_MoveStatus, X0
	207 Compare W0, 0
	208 JumpIfNotEqual {228}
	209 Move X0, X31
	210 Call Time.get_time
	211 Move V1, [X19+256]
	212 Move V2, [X19+228]
	213 Subtract S0, S0, S1
	214 NotImplemented "Instruction FCMP not yet implemented."
	215 Move X0, [X19+152]
	216 Compare X0, 0
	217 JumpIfEqual {421}
	218 Move W1, 1
	219 Call MobView.SetWalk, X0, X1
	220 Move X0, [X19+152]
	221 Compare X0, 0
	222 JumpIfEqual {421}
	223 Move V0, [X19+216]
	224 Call MobView.SetWalkSpeed, X0, V0
	225 Move W1, 2
	226 Move X0, X19
	227 Call MobController.set_MoveStatus, X0, X1
	228 Move X0, X19
	229 Call MobController.get_MoveStatus, X0
	230 Compare W0, 0
	231 JumpIfEqual {62}
	232 Move X0, [X19+264]
	233 Compare X0, 0
	234 JumpIfEqual {421}
	235 Move X1, X31
	236 Call Component.get_transform, X0
	237 Compare X0, 0
	238 JumpIfEqual {421}
	239 Move X1, X31
	240 Call Transform.get_position, X0
	241 Move X0, X19
	242 Move X1, X31
	243 Move V8, V0
	244 Move V9, V1
	245 Move V10, V2
	246 Call Component.get_transform, X0
	247 Compare X0, 0
	248 JumpIfEqual {421}
	249 Move X1, X31
	250 Call Transform.get_position, X0
	251 Subtract S0, S8, S0
	252 Subtract S1, S9, S1
	253 Subtract S2, S10, S2
	254 Move X0, X31
	255 Call Extensions.Flatten, X0
	256 Move X20, 0x25C1000
	257 Move W8, [X20+1925]
	258 Move V8, V0
	259 Move V9, V1
	260 Move V10, V2
	261 Compare W8, 0
	262 JumpIfNotEqual {268}
	263 Move X0, 0x22DC000
	264 Move X0, [X0+1448]
	265 Call 0x1C17CF4
	266 Move W8, 1
	267 Move [X20+1925], W8
	268 Move X0, [X23]
	269 Move W8, [X0+224]
	270 Compare W8, 0
	271 JumpIfNotEqual {273}
	272 Call 0x1C17DFC
	273 Multiply S0, S8, S8
	274 Multiply S1, S9, S9
	275 Move X8, -20107264
	276 Add S0, S0, S1
	277 Move V1, [X8+380]
	278 Multiply S2, S10, S10
	279 Add S0, S2, S0
	280 NotImplemented "Instruction FSQRT not yet implemented."
	281 NotImplemented "Instruction FCMP not yet implemented."
	282 NotImplemented "Instruction FDIV not yet implemented."
	283 NotImplemented "Instruction FDIV not yet implemented."
	284 NotImplemented "Instruction FDIV not yet implemented."
	285 Move X20, 0x25C1000
	286 Move W8, [X20+1923]
	287 Compare W8, 0
	288 JumpIfNotEqual {294}
	289 Move X0, 0x22DC000
	290 Move X0, [X0+1440]
	291 Call 0x1C17CF4
	292 Move W8, 1
	293 Move [X20+1923], W8
	294 Move X8, 0x22DC000
	295 Move X8, [X8+1440]
	296 Move X8, [X8]
	297 Move X8, [X8+184]
	298 Move S8, [X8]
	299 Move S9, [X8+4]
	300 Move V10, [X8+8]
	301 Move X0, X19
	302 Move X1, X31
	303 Call Component.get_transform, X0
	304 Move X20, X0
	305 Move V0, V8
	306 Move V1, V9
	307 Move V2, V10
	308 Move X0, X31
	309 Call Quaternion.LookRotation, X0
	310 Compare X20, 0
	311 JumpIfEqual {421}
	312 Move X0, X20
	313 Move X1, X31
	314 Call Transform.set_rotation, X0, X1
	315 Move X0, [X19+264]
	316 Compare X0, 0
	317 JumpIfEqual {421}
	318 Move X20, [X19+144]
	319 Move X1, X31
	320 Call Component.get_transform, X0
	321 Compare X0, 0
	322 JumpIfEqual {421}
	323 Move X1, X31
	324 Call Transform.get_position, X0
	325 Compare X20, 0
	326 JumpIfEqual {421}
	327 Move X0, X20
	328 Move X1, X31
	329 Call NavMeshAgent.SetDestination, X0, X1
	330 Move V11, [X19+252]
	331 Move X0, X19
	332 Move X1, X31
	333 Call Component.get_transform, X0
	334 Compare X0, 0
	335 JumpIfEqual {421}
	336 Move X1, X31
	337 Call Transform.get_position, X0
	338 Move S12, [X19+236]
	339 Move S13, [X19+240]
	340 Move W8, [X22+2140]
	341 Move V14, [X19+244]
	342 Move V8, V0
	343 Move V9, V1
	344 Move V10, V2
	345 Compare W8, 0
	346 JumpIfNotEqual {352}
	347 Move X0, 0x22DC000
	348 Move X0, [X0+1448]
	349 Call 0x1C17CF4
	350 Move W8, 1
	351 Move [X22+2140], W8
	352 Move X0, [X23]
	353 Subtract S12, S8, S12
	354 Subtract S9, S9, S13
	355 Subtract S8, S10, S14
	356 Move W8, [X0+224]
	357 Compare W8, 0
	358 JumpIfNotEqual {360}
	359 Call 0x1C17DFC
	360 Multiply S0, S12, S12
	361 Multiply S1, S9, S9
	362 Add S0, S0, S1
	363 Multiply S1, S8, S8
	364 Add S0, S1, S0
	365 NotImplemented "Instruction FSQRT not yet implemented."
	366 Add S0, S11, S0
	367 Move X0, X19
	368 Move X1, X31
	369 Move [X19+252], S0
	370 Call Component.get_transform, X0
	371 Compare X0, 0
	372 JumpIfEqual {421}
	373 Move X1, X31
	374 Call Transform.get_position, X0
	375 Move V3, [X19+252]
	376 Move V4, [X19+224]
	377 Move [X19+236], S0
	378 Move [X19+244], S1
	379 Move [X19+244], S2
	380 NotImplemented "Instruction FCMP not yet implemented."
	381 Move X0, [X19+152]
	382 Compare X0, 0
	383 JumpIfEqual {421}
	384 Move W1, W31
	385 Call MobView.SetWalk, X0, X1
	386 Move X0, X19
	387 Move W1, W31
	388 Call MobController.set_MoveStatus, X0, X1
	389 Move X0, X31
	390 Move [X19+252], W31
	391 Call Time.get_time
	392 Move X20, [X19+144]
	393 Move [X19+256], S0
	394 Compare X20, 0
	395 JumpIfEqual {421}
	396 Move X0, X20
	397 Move X1, X31
	398 Call Component.get_transform, X0
	399 Compare X0, 0
	400 JumpIfEqual {421}
	401 Move X1, X31
	402 Call Transform.get_position, X0
	403 Move X0, X20
	404 Move X20, [X31+112]
	405 Move X19, [X31+120]
	406 Move X22, [X31+96]
	407 Move X21, [X31+104]
	408 Move X30, [X31+80]
	409 Move X23, [X31+88]
	410 Move D9, [X31+64]
	411 Move D8, [X31+72]
	412 Move D11, [X31+48]
	413 Move D10, [X31+56]
	414 Move D13, [X31+32]
	415 Move D12, [X31+40]
	416 Move V14, [X31+16]
	417 Move X1, X31
	418 Add X31, X31, 128
	419 Call NavMeshAgent.SetDestination, X0, X1
	420 Return 
	421 Call 0x1C17F20

Method: System.Void HandleMoveStatusChanged()

Disassembly:
	0x01E18E40 LDP D13, D12, [X31 + 0x10]
	0x01E18E44 MOV X1, X31
	0x01E18E48 LDP D15, D14, [X31], #0x70
	0x01E18E4C B 0x3BE13F8
	0x01E18E50 LDP X20, X19, [X31 + 0x60]
	0x01E18E54 LDP X22, X21, [X31 + 0x50]
	0x01E18E58 LDR X30, [X31 + 0x40]
	0x01E18E5C LDP D9, D8, [X31 + 0x30]
	0x01E18E60 LDP D11, D10, [X31 + 0x20]
	0x01E18E64 LDP D13, D12, [X31 + 0x10]
	0x01E18E68 LDP D15, D14, [X31], #0x70
	0x01E18E6C RET
	0x01E18E70 BL 0x1C16F20
	0x01E18E74 STP D13, D12, [X31 - 0x50]!
	0x01E18E78 STP D11, D10, [X31 + 0x10]
	0x01E18E7C STP D9, D8, [X31 + 0x20]
	0x01E18E80 STP X30, X21, [X31 + 0x30]
	0x01E18E84 STP X20, X19, [X31 + 0x40]
	0x01E18E88 ADRP X21, 0x25C0000
	0x01E18E8C ADRP X20, 0x22DB000
	0x01E18E90 LDRB W8, [X21 + 0xE0A]
	0x01E18E94 LDR X20, [X20 + 0x598]
	0x01E18E98 MOV X19, X0
	0x01E18E9C TBNZ X8, 0x0, 0x1E18EC0
	0x01E18EA0 ADRP X0, 0x22DB000
	0x01E18EA4 LDR X0, [X0 + 0x598]
	0x01E18EA8 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call MobController.get_MoveStatus, X0
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Compare W0, 0
	008 JumpIfNotEqual {32}
	009 Move X8, [X19+152]
	010 Compare X8, 0
	011 JumpIfEqual {35}
	012 Move X0, [X8+48]
	013 Compare X0, 0
	014 JumpIfEqual {35}
	015 Move X1, X31
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Call AudioSource.Stop, X0
	019 Return 
	020 Move X0, [X19+152]
	021 Compare X0, 0
	022 JumpIfEqual {35}
	023 Move X1, [X0+72]
	024 Move X0, [X19+152]
	025 Compare X0, 0
	026 JumpIfEqual {35}
	027 Move X1, [X0+64]
	028 Move X30, [X31+16]
	029 Move X19, [X31+24]
	030 Call MobView.PlaySound, X0, X1
	031 Return 
	032 Move X30, [X31+16]
	033 Move X19, [X31+24]
	034 Return 
	035 Call 0x1C17F20

Method: System.Void OnDrawGizmos()

Disassembly:
	0x01E18ED8 MOV X1, X31
	0x01E18EDC MOV X2, X31
	0x01E18EE0 BL 0x3C3883C
	0x01E18EE4 TBNZ X0, 0x0, 0x1E18FFC
	0x01E18EE8 MOV X0, X19
	0x01E18EEC MOV X1, X31
	0x01E18EF0 BL 0x3C32E90
	0x01E18EF4 CBZ X0, 0x1E19058
	0x01E18EF8 MOV X1, X31
	0x01E18EFC BL 0x3C3F58C
	0x01E18F00 MOV X0, X31
	0x01E18F04 BL 0x1DC0890
	0x01E18F08 LDR X0, [X19 + 0xF8]
	0x01E18F0C CBZ X0, 0x1E19058
	0x01E18F10 MOV X1, X31
	0x01E18F14 MOV V8.16B, V0.16B
	0x01E18F18 MOV V9.16B, V1.16B
	0x01E18F1C MOV V10.16B, V2.16B
	0x01E18F20 BL 0x3C32E90
	0x01E18F24 CBZ X0, 0x1E19058
	0x01E18F28 MOV X1, X31
	0x01E18F2C BL 0x3C3F58C
	0x01E18F30 MOV X0, X31
	0x01E18F34 BL 0x1DC0890
	0x01E18F38 ADRP X20, 0x25C0000
	0x01E18F3C LDRB W8, [X20 + 0x85C]
	0x01E18F40 MOV V11.16B, V0.16B
	0x01E18F44 MOV V12.16B, V1.16B
	0x01E18F48 MOV V13.16B, V2.16B
	0x01E18F4C CBNZ W8, 0x1E18F64
	0x01E18F50 ADRP X0, 0x22DB000
	0x01E18F54 LDR X0, [X0 + 0x5A8]
	0x01E18F58 BL 0x1C16CF4
	0x01E18F5C MOVZ W8, 0x1
	0x01E18F60 STRB W8, [X20 + 0x85C]
	0x01E18F64 ADRP X8, 0x22DB000
	0x01E18F68 LDR X8, [X8 + 0x5A8]
	0x01E18F6C FSUB S11, S8, S11
	0x01E18F70 FSUB S9, S9, S12
	0x01E18F74 FSUB S8, S10, S13
	0x01E18F78 LDR X0, [X8]
	0x01E18F7C LDR W8, [X0 + 0xE0]
	0x01E18F80 CBNZ W8, 0x1E18F88
	0x01E18F84 BL 0x1C16DFC
	0x01E18F88 FMUL S0, S11, S11
	0x01E18F8C FMUL S1, S9, S9
	0x01E18F90 LDR V2, [X19 + 0xBC]
	0x01E18F94 FADD S0, S0, S1
	0x01E18F98 FMUL S1, S8, S8
	0x01E18F9C FADD S0, S1, S0
	0x01E18FA0 FSQRT S0, S0
	0x01E18FA4 FCMP S0, S2
	0x01E18FA8 B.PL 0x1E18FFC

ISIL:
	001 Move [X31-48], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Move S0, 1
	008 Move S1, W31
	009 Move S2, W31
	010 Move S3, 1
	011 Move X0, X31
	012 Call Gizmos.set_color, X0
	013 Move X0, [X19+160]
	014 Compare X0, 0
	015 JumpIfEqual {61}
	016 Move X1, X31
	017 Call Transform.get_position, X0
	018 Move X0, [X19+160]
	019 Compare X0, 0
	020 JumpIfEqual {61}
	021 Move X1, X31
	022 Move V8, V0
	023 Move V9, V1
	024 Move V10, V2
	025 Call Transform.get_forward, X0
	026 Move V3, [X19+184]
	027 Move S4, 0.75
	028 Move X0, X31
	029 Multiply S0, S0, S3
	030 Multiply S1, S1, S3
	031 Multiply S2, S2, S3
	032 Multiply S0, S0, S4
	033 Multiply S1, S1, S4
	034 Multiply S2, S2, S4
	035 Add S0, S8, S0
	036 Add S1, S9, S1
	037 Add S2, S10, S2
	038 Call Gizmos.DrawWireSphere, X0, V0
	039 Move X8, -20111360
	040 Move X9, -20107264
	041 Move V1, [X8+3984]
	042 Move V2, [X9+48]
	043 Move S0, 1
	044 Move S3, 1
	045 Move X0, X31
	046 Call Gizmos.set_color, X0
	047 Move X0, [X19+168]
	048 Compare X0, 0
	049 JumpIfEqual {61}
	050 Move X1, X31
	051 Call Transform.get_position, X0
	052 Move V3, [X19+188]
	053 Move X30, [X31+32]
	054 Move X19, [X31+40]
	055 Move D9, [X31+16]
	056 Move D8, [X31+24]
	057 Move X0, X31
	058 Move V10, [X31+48]
	059 Call Gizmos.DrawWireSphere, X0, V0
	060 Return 
	061 Call 0x1C17F20

Method: System.Void StateAuthorityChanged()

Disassembly:
	0x01E18FAC LDP S0, S8, [X19 + 0xC4]
	0x01E18FB0 FCMP S8, S0
	0x01E18FB4 B.LE 0x1E18FEC
	0x01E18FB8 LDR X20, [X19 + 0xF8]
	0x01E18FBC LDR W21, [X19 + 0xC0]
	0x01E18FC0 MOV X0, X19
	0x01E18FC4 MOV X1, X31
	0x01E18FC8 STR W31, [X19 + 0xC8]
	0x01E18FCC BL 0x3C32E90
	0x01E18FD0 LDR X8, [X19 + 0x40]
	0x01E18FD4 MOV X2, X0
	0x01E18FD8 CBZ X8, 0x1E19014
	0x01E18FDC LDR X8, [X8 + 0x20]
	0x01E18FE0 CBZ X8, 0x1E19014
	0x01E18FE4 LDR W6, [X8]
	0x01E18FE8 B 0x1E19018
	0x01E18FEC MOV X0, X31
	0x01E18FF0 BL 0x3C3C714
	0x01E18FF4 FADD S0, S8, S0
	0x01E18FF8 STR S0, [X19 + 0xC8]
	0x01E18FFC LDP X20, X19, [X31 + 0x40]
	0x01E19000 LDP X30, X21, [X31 + 0x30]
	0x01E19004 LDP D9, D8, [X31 + 0x20]
	0x01E19008 LDP D11, D10, [X31 + 0x10]
	0x01E1900C LDP D13, D12, [X31], #0x50
	0x01E19010 RET

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+56]
	004 Compare X8, 0
	005 JumpIfEqual {38}
	006 Move W8, [X8+392]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X19, X0
	009 Move X0, [X0+64]
	010 Compare X0, 0
	011 JumpIfEqual {35}
	012 Move W8, [X0+96]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 2
	015 Compare TEMP, 2
	016 JumpIfEqual {35}
	017 Move X1, X31
	018 Call NetworkObject.get_HasStateAuthority, X0
	019 Move TEMP, X0
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfNotEqual {35}
	023 Move X0, X19
	024 Move W1, W31
	025 Call MobController.set_MoveStatus, X0, X1
	026 Move X0, [X19+152]
	027 Move [X19+128], W31
	028 Compare X0, 0
	029 JumpIfEqual {38}
	030 Move W1, W31
	031 Move X30, [X31+16]
	032 Move X19, [X31+24]
	033 Call MobView.SetWalk, X0, X1
	034 Return 
	035 Move X30, [X31+16]
	036 Move X19, [X31+24]
	037 Return 
	038 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01E19014 MOV X6, X31
	0x01E19018 CBZ X20, 0x1E19058
	0x01E1901C ADRP X9, 0x22E1000
	0x01E19020 LDP X3, X4, [X19 + 0x120]
	0x01E19024 LDR W8, [X19 + 0x68]
	0x01E19028 LDR X9, [X9 + 0x3E0]
	0x01E1902C MOV X0, X20
	0x01E19030 MOV W1, W21
	0x01E19034 LDP X20, X19, [X31 + 0x40]
	0x01E19038 LDR X5, [X9]
	0x01E1903C LDP X30, X21, [X31 + 0x30]
	0x01E19040 LDP D9, D8, [X31 + 0x20]
	0x01E19044 LDP D11, D10, [X31 + 0x10]
	0x01E19048 BFM X6, X8, 0x20, 0x1F
	0x01E1904C MOV X7, X31
	0x01E19050 LDP D13, D12, [X31], #0x50
	0x01E19054 B 0x1DB7644
	0x01E19058 BL 0x1C16F20
	0x01E1905C STP X30, X21, [X31 - 0x20]!
	0x01E19060 STP X20, X19, [X31 + 0x10]
	0x01E19064 ADRP X21, 0x25BF000
	0x01E19068 ADRP X20, 0x22E1000
	0x01E1906C LDRB W8, [X21 + 0xE15]
	0x01E19070 LDR X20, [X20 + 0x3B8]
	0x01E19074 MOV X19, X0
	0x01E19078 TBNZ X8, 0x0, 0x1E19090
	0x01E1907C ADRP X0, 0x22E1000
	0x01E19080 LDR X0, [X0 + 0x3B8]
	0x01E19084 BL 0x1C16CF4
	0x01E19088 MOVZ W8, 0x1
	0x01E1908C STRB W8, [X21 + 0xE15]
	0x01E19090 LDR X0, [X20]
	0x01E19094 LDR X19, [X19 + 0x20]
	0x01E19098 LDR W8, [X0 + 0xE0]
	0x01E1909C CBNZ W8, 0x1E190A4
	0x01E190A0 BL 0x1C16DFC
	0x01E190A4 CBZ X19, 0x1E190C8
	0x01E190A8 LDR X8, [X20]
	0x01E190AC MOV X0, X19
	0x01E190B0 LDP X20, X19, [X31 + 0x10]
	0x01E190B4 MOV X2, X31
	0x01E190B8 LDR X8, [X8 + 0xB8]
	0x01E190BC LDR W1, [X8]
	0x01E190C0 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x25C0000
	007 Move X21, 0x22E0000
	008 Move X20, 0x22E1000
	009 Move W8, [X22+3591]
	010 Move X21, [X21+3816]
	011 Move X20, [X20+1152]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x22E1000
	018 Move X0, [X0+1152]
	019 Call 0x1C17CF4
	020 Move X0, 0x22E0000
	021 Move X0, [X0+3816]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3591], W8
	025 Move X8, -20099072
	026 Move X10, -20099072
	027 Move X11, -20111360
	028 Move V0, [X8+1736]
	029 Move V1, [X10+2184]
	030 Move V2, [X11+213]
	031 Move W9, 50
	032 Move W12, 0x40A00000
	033 Move [X19+192], W9
	034 Move [X19+184], D0
	035 Move [X19+200], D1
	036 Move [X19+212], V2
	037 Move [X19+228], W12
	038 Move X0, [X21]
	039 Call 0x1C17F10
	040 Move X1, [X20]
	041 Move X20, X0
	042 Call List`1<Object>..ctor, X0
	043 Move [X19+272], X20
	044 Move X0, X19
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X1, X31
	050 Move X30, [X31+48]
	051 Call NetworkBehaviour..ctor, X0
	052 Return 

Method: System.Void CopyBackingFieldsToState(System.Boolean param_0)

Disassembly:
	0x01E190C4 B 0x3BF5F88
	0x01E190C8 BL 0x1C16F20

ISIL:
	001 Move W1, [X0+232]
	002 Call MobController.set_MoveStatus, X0, X1
	003 Return 

Method: System.Void CopyStateToBackingFields()

Disassembly:
	0x01E190CC STP X30, X19, [X31 - 0x10]!
	0x01E190D0 MOV X19, X0
	0x01E190D4 BL 0x1E180E4
	0x01E190D8 CMP W0, 0x2
	0x01E190DC B.EQ 0x1E19108
	0x01E190E0 CMP W0, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call MobController.get_MoveStatus, X0
	005 Move [X19+232], W0
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Return 

