Type: AnimalCompany.NetSessionState

Method: SpatialSys.ObservableState.StatePrimitive`1<System.Boolean> get_isConnected()

Disassembly:
	0x01CBBF4C LDR X0, [X22]
	0x01CBBF50 LDR X20, [X19 + 0xA0]

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Void set_isConnected(SpatialSys.ObservableState.StatePrimitive`1<System.Boolean> value)

Disassembly:
	0x01CBBF54 LDR W8, [X0 + 0xE0]
	0x01CBBF58 CBNZ W8, 0x1CBBF60

ISIL:
	001 Move [X0+72], X1
	002 Return 

Method: SpatialSys.ObservableState.StatePrimitive`1<System.String> get_roomCode()

Disassembly:
	0x01CBBF5C BL 0x1B6E8F8
	0x01CBBF60 MOV X0, X20

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.Void set_roomCode(SpatialSys.ObservableState.StatePrimitive`1<System.String> value)

Disassembly:
	0x01CBBF64 MOV X1, X31
	0x01CBBF68 MOV X2, X31

ISIL:
	001 Move [X0+80], X1
	002 Return 

Method: System.Void PostInitialize()

Disassembly:
	0x01CBBF6C BL 0x3A9D6EC
	0x01CBBF70 TBZ X0, 0x0, 0x1CBBFA0
	0x01CBBF74 LDR X8, [X19 + 0xA0]
	0x01CBBF78 CBZ X8, 0x1CBC0A4
	0x01CBBF7C LDR X0, [X8 + 0x48]
	0x01CBBF80 CBZ X0, 0x1CBC0A4
	0x01CBBF84 MOV X1, X31
	0x01CBBF88 BL 0x339EE3C
	0x01CBBF8C TBZ X0, 0x0, 0x1CBBFA0
	0x01CBBF90 LDR X0, [X19 + 0xA0]
	0x01CBBF94 CBZ X0, 0x1CBC0A4
	0x01CBBF98 MOV X1, X31
	0x01CBBF9C BL 0x33DAED0
	0x01CBBFA0 LDR X0, [X22]
	0x01CBBFA4 ADRP X21, 0x2294000
	0x01CBBFA8 LDR X20, [X19 + 0x68]
	0x01CBBFAC LDR W8, [X0 + 0xE0]
	0x01CBBFB0 LDR X21, [X21 + 0xB8]
	0x01CBBFB4 CBNZ W8, 0x1CBBFBC
	0x01CBBFB8 BL 0x1B6E8F8
	0x01CBBFBC LDR X1, [X21]
	0x01CBBFC0 MOV X0, X20
	0x01CBBFC4 BL 0x2114D24
	0x01CBBFC8 STR X0, [X19 + 0x90]
	0x01CBBFCC CBZ X0, 0x1CBC0A4
	0x01CBBFD0 ADRP X8, 0x2294000
	0x01CBBFD4 LDR X8, [X8 + 0xA8]
	0x01CBBFD8 LDR X1, [X8]
	0x01CBBFDC BL 0x20CEEF0
	0x01CBBFE0 STR X0, [X19 + 0x98]
	0x01CBBFE4 CBZ X0, 0x1CBC0A4
	0x01CBBFE8 MOVZ W1, 0x1
	0x01CBBFEC MOV X2, X31
	0x01CBBFF0 BL 0x1D86F8C
	0x01CBBFF4 LDR X0, [X23]
	0x01CBBFF8 LDR X20, [X19 + 0x98]
	0x01CBBFFC MOVZ W1, 0x1
	0x01CBC000 BL 0x1B6E868
	0x01CBC004 CBZ X0, 0x1CBC0A4
	0x01CBC008 LDR X8, [X0]
	0x01CBC00C MOV X21, X0
	0x01CBC010 MOV X0, X19
	0x01CBC014 LDR X1, [X8 + 0x40]
	0x01CBC018 BL 0x1B6E8FC
	0x01CBC01C CBZ X0, 0x1CBC0A8
	0x01CBC020 LDR W8, [X21 + 0x18]
	0x01CBC024 CBZ W8, 0x1CBC0B4
	0x01CBC028 STR X19, [X21 + 0x20]
	0x01CBC02C CBZ X20, 0x1CBC0A4
	0x01CBC030 MOV X0, X20
	0x01CBC034 MOV X1, X21
	0x01CBC038 MOV X2, X31
	0x01CBC03C BL 0x1D8AA0C
	0x01CBC040 LDR X0, [X19 + 0x90]
	0x01CBC044 CBZ X0, 0x1CBC0A4
	0x01CBC048 ADRP X8, 0x2293000
	0x01CBC04C LDR X8, [X8 + 0xA0]
	0x01CBC050 ADRP X20, 0x2291000
	0x01CBC054 LDR X1, [X8]
	0x01CBC058 LDR X20, [X20 + 0xF78]
	0x01CBC05C BL 0x20CEEF0
	0x01CBC060 STR X0, [X19 + 0xA0]
	0x01CBC064 LDR X8, [X20]
	0x01CBC068 LDR X8, [X8 + 0xB8]
	0x01CBC06C LDR X8, [X8 + 0x18]
	0x01CBC070 CBZ X8, 0x1CBC094

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2569000
	008 Move X23, 0x2293000
	009 Move X21, 0x2295000
	010 Move X22, 0x2293000
	011 Move W8, [X20+1308]
	012 Move X23, [X23+2960]
	013 Move X21, [X21+48]
	014 Move X22, [X22+2976]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x2293000
	021 Move X0, [X0+2976]
	022 Call 0x1B6F7F0
	023 Move X0, 0x2295000
	024 Move X0, [X0+48]
	025 Call 0x1B6F7F0
	026 Move X0, 0x2293000
	027 Move X0, [X0+2960]
	028 Call 0x1B6F7F0
	029 Move X0, 0x2295000
	030 Move X0, [X0+56]
	031 Call 0x1B6F7F0
	032 Move W8, 1
	033 Move [X20+1308], W8
	034 Move X0, [X23]
	035 Move X20, [X19+72]
	036 Call 0x1B6FA0C
	037 Move X2, [X21]
	038 Move X1, X19
	039 Move X3, X31
	040 Move X21, X0
	041 Call ObserverDelegate..ctor, X0, X1, X2
	042 Move X0, [X22]
	043 Move W1, 1
	044 Call 0x1B6F868
	045 Compare X0, 0
	046 JumpIfEqual {77}
	047 Move X19, [X19+80]
	048 Move X22, X0
	049 Compare X19, 0
	050 JumpIfEqual {57}
	051 Move X8, [X22]
	052 Move X0, X19
	053 Move X1, [X8+64]
	054 Call 0x1B6F8FC
	055 Compare X0, 0
	056 JumpIfEqual {79}
	057 Move W8, [X22+24]
	058 Compare W8, 0
	059 JumpIfEqual {78}
	060 Move [X22+32], X19
	061 Compare X20, 0
	062 JumpIfEqual {77}
	063 Move X8, 0x2294000
	064 Move X8, [X8+56]
	065 Move X0, X20
	066 Move X1, X21
	067 Move X2, X22
	068 Move X3, [X8]
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X30, [X31+48]
	074 Move X23, [X31+56]
	075 Call 0x24BC794, X0, X1, X2
	076 Return 
	077 Call 0x1B6FA1C
	078 Call 0x1B6FA24
	079 Call 0x1B6FA40
	080 Move X1, X31
	081 Call 0x1B6F8E8

Method: System.Void .ctor()

Disassembly:
	0x01CBC074 LDR X1, [X19 + 0x98]
	0x01CBC078 LDR X3, [X8 + 0x18]

ISIL:
	001 Move X1, X31
	002 Call StateObject..ctor, X0
	003 Return 

Method: System.Void <PostInitialize>b__8_0(SpatialSys.ObservableState.StateChangedEventArgs args)

Disassembly:
	0x01CBC07C LDR X0, [X8 + 0x40]
	0x01CBC080 LDR X2, [X8 + 0x28]
	0x01CBC084 LDP X20, X19, [X31 + 0x20]
	0x01CBC088 LDP X22, X21, [X31 + 0x10]
	0x01CBC08C LDP X30, X23, [X31], #0x30
	0x01CBC090 BR X3
	0x01CBC094 LDP X20, X19, [X31 + 0x20]
	0x01CBC098 LDP X22, X21, [X31 + 0x10]
	0x01CBC09C LDP X30, X23, [X31], #0x30
	0x01CBC0A0 RET
	0x01CBC0A4 BL 0x1B6EA1C
	0x01CBC0A8 BL 0x1B6EA40
	0x01CBC0AC MOV X1, X31
	0x01CBC0B0 BL 0x1B6E8E8
	0x01CBC0B4 BL 0x1B6EA24
	0x01CBC0B8 STP X30, X23, [X31 - 0x30]!
	0x01CBC0BC STP X22, X21, [X31 + 0x10]
	0x01CBC0C0 STP X20, X19, [X31 + 0x20]
	0x01CBC0C4 ADRP X22, 0x2567000
	0x01CBC0C8 ADRP X23, 0x2293000
	0x01CBC0CC LDRB W8, [X22 + 0x526]
	0x01CBC0D0 LDR X23, [X23 + 0xC0]
	0x01CBC0D4 MOV X19, X2
	0x01CBC0D8 MOV W20, W1
	0x01CBC0DC MOV X21, X0
	0x01CBC0E0 TBNZ X8, 0x0, 0x1CBC0F8
	0x01CBC0E4 ADRP X0, 0x2293000
	0x01CBC0E8 LDR X0, [X0 + 0xC0]
	0x01CBC0EC BL 0x1B6E7F0
	0x01CBC0F0 MOVZ W8, 0x1
	0x01CBC0F4 STRB W8, [X22 + 0x526]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2568000
	005 Move W8, [X20+1309]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x2292000
	012 Move X0, [X0+3000]
	013 Call 0x1B6F7F0
	014 Move X0, 0x2293000
	015 Move X0, [X0+128]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X20+1309], W8
	019 Move X8, [X19+80]
	020 Compare X8, 0
	021 JumpIfEqual {39}
	022 Move X0, [X8+80]
	023 Move X19, [X19+72]
	024 Move X1, X31
	025 Call String.IsNullOrEmpty, X0
	026 Compare X19, 0
	027 JumpIfEqual {39}
	028 Move X8, 0x2293000
	029 Move X8, [X8+128]
	030 Move X2, [X8]
	031 NotImplemented "Instruction ORN not yet implemented."
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 And W1, W8, 1
	036 Move X30, [X31+32]
	037 Call 0x24BA6A4, X0, X1
	038 Return 
	039 Call 0x1B6FA1C

