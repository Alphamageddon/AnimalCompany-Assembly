Type: AnimalCompany.ProductsManager

Method: System.Void Awake()

Disassembly:
	0x01D478A0 MOV X3, X31
	0x01D478A4 MOV X20, X0
	0x01D478A8 LDR X2, [X8]
	0x01D478AC BL 0x2695248
	0x01D478B0 LDR X8, [X22]
	0x01D478B4 LDR X8, [X8 + 0xB8]
	0x01D478B8 STR X20, [X8 + 0x8]
	0x01D478BC ADRP X8, 0x23AD000
	0x01D478C0 LDR X8, [X8 + 0x620]
	0x01D478C4 MOV X0, X20
	0x01D478C8 MOV W1, W31
	0x01D478CC MOV X2, X31
	0x01D478D0 LDR X3, [X8]
	0x01D478D4 BL 0x21A2BE8
	0x01D478D8 STR X0, [X19 + 0x38]
	0x01D478DC STR X0, [X19 + 0x18]
	0x01D478E0 MOVZ W0, 0x1
	0x01D478E4 STR W0, [X19 + 0x10]
	0x01D478E8 B 0x1D47924
	0x01D478EC MOVZ W8, 0x3
	0x01D478F0 STR X31, [X19 + 0x18]
	0x01D478F4 B 0x1D4791C
	0x01D478F8 LDR W8, [X19 + 0x30]
	0x01D478FC MOV W0, W31
	0x01D47900 MOV X1, X31
	0x01D47904 ADD W8, W8, 0xA
	0x01D47908 SCVTF S0, W8
	0x01D4790C STR W8, [X19 + 0x30]
	0x01D47910 BL 0x35BB1E4
	0x01D47914 STR X0, [X19 + 0x18]
	0x01D47918 MOVZ W8, 0x2
	0x01D4791C STR W8, [X19 + 0x10]
	0x01D47920 MOVZ W0, 0x1
	0x01D47924 LDP X20, X19, [X31 + 0x30]
	0x01D47928 LDP X22, X21, [X31 + 0x20]
	0x01D4792C LDP X24, X23, [X31 + 0x10]
	0x01D47930 LDR X30, [X31], #0x40

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2692000
	007 Move X22, 0x23AE000
	008 Move X21, 0x23AD000
	009 Move W8, [X20+1898]
	010 Move X22, [X22+1464]
	011 Move X21, [X21+1608]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x23AD000
	018 Move X0, [X0+1608]
	019 Call 0x1C17CF4
	020 Move X0, 0x23AE000
	021 Move X0, [X0+1464]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+1898], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X2, X31
	029 Move X20, X0
	030 Call CustomCoroutineCommand..ctor, X0, X1
	031 Move X0, [X21]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X20
	037 Move W1, W31
	038 Call App.ScheduleCommand, X0, X1
	039 Move [X19+32], X0
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Return 

Method: System.Void OnDestroy()

Disassembly:
	0x01D47940 MOV X1, X31
	0x01D47944 BL 0x1C16DEC
	0x01D47948 BL 0x1C16F28
	0x01D4794C LDR X0, [X0 + 0x18]
	0x01D47950 RET
	0x01D47954 STP X30, X19, [X31 - 0x10]!
	0x01D47958 ADRP X0, 0x23AC000

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call CommandHandle.Cancel, X0
	008 Return 
	009 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01D4795C LDR X0, [X0 + 0xB40]
	0x01D47960 BL 0x1C16D08
	0x01D47964 BL 0x1C16F10
	0x01D47968 MOV X1, X31
	0x01D4796C MOV X19, X0
	0x01D47970 BL 0x3380310
	0x01D47974 ADRP X0, 0x23AD000
	0x01D47978 LDR X0, [X0 + 0x690]
	0x01D4797C BL 0x1C16D08
	0x01D47980 MOV X1, X0
	0x01D47984 MOV X0, X19
	0x01D47988 BL 0x1C16DEC
	0x01D4798C LDR X0, [X0 + 0x18]
	0x01D47990 RET
	0x01D47994 LDR X0, [X0 + 0x48]
	0x01D47998 RET
	0x01D4799C STR X1, [X0 + 0x48]
	0x01D479A0 RET
	0x01D479A4 MOV X1, X31
	0x01D479A8 B 0x35CD9D4
	0x01D479AC LDR X0, [X0 + 0x48]
	0x01D479B0 RET
	0x01D479B4 STR X1, [X0 + 0x48]
	0x01D479B8 RET
	0x01D479BC LDR X0, [X0 + 0x50]
	0x01D479C0 RET
	0x01D479C4 STR X1, [X0 + 0x50]
	0x01D479C8 RET
	0x01D479CC LDR X0, [X0 + 0x58]
	0x01D479D0 RET
	0x01D479D4 STR X1, [X0 + 0x58]
	0x01D479D8 RET
	0x01D479DC LDR X0, [X0 + 0x60]
	0x01D479E0 RET
	0x01D479E4 STR X1, [X0 + 0x60]
	0x01D479E8 RET
	0x01D479EC LDR X0, [X0 + 0x68]
	0x01D479F0 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2692000
	006 Move X20, 0x23AD000
	007 Move W8, [X21+1899]
	008 Move X20, [X20+2200]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x23AD000
	015 Move X0, [X0+2200]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1899], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X21, 0x2692000
	025 Move W8, [X21+1931]
	026 Compare W8, 0
	027 JumpIfNotEqual {33}
	028 Move X0, 0x23AD000
	029 Move X0, [X0+2200]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+1931], W8
	033 Move X0, [X20]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X20]
	039 Move X8, [X0+184]
	040 Move X0, X19
	041 Move X1, X31
	042 Move X8, [X8]
	043 Move [X19+32], X8
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Call MonoBehaviour..ctor, X0
	049 Return 

