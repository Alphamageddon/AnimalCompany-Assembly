Type: AnimalCompany.MobSpawnData

Method: System.Collections.Generic.List`1<UnityEngine.GameObject> GetMobsToSpawn()

Disassembly:
	0x01CED6F8 STP X30, X19, [X31 + 0x20]
	0x01CED6FC LDR X0, [X0 + 0xD0]

ISIL:
	001 Move W1, [X0+24]

Method: System.Collections.Generic.List`1<UnityEngine.GameObject> GetMobsToSpawn(System.Int32 count)

Disassembly:
	0x01CED700 CBZ X0, 0x1CED780
	0x01CED704 MOV X1, X31
	0x01CED708 BL 0x3AA7658
	0x01CED70C ADRP X19, 0x2536000
	0x01CED710 LDRB W8, [X19 + 0x442]
	0x01CED714 MOV V8.16B, V0.16B
	0x01CED718 MOV V9.16B, V1.16B
	0x01CED71C MOV V10.16B, V2.16B
	0x01CED720 CBNZ W8, 0x1CED738
	0x01CED724 ADRP X0, 0x2260000
	0x01CED728 LDR X0, [X0 + 0x480]
	0x01CED72C BL 0x1B6E7F0
	0x01CED730 MOVZ W8, 0x1
	0x01CED734 STRB W8, [X19 + 0x442]
	0x01CED738 ADRP X8, 0x2260000
	0x01CED73C LDR X8, [X8 + 0x480]
	0x01CED740 ADRP X9, 0xFFFFFFFFFEDBC000
	0x01CED744 LDR V0, [X9 + 0xE20]
	0x01CED748 LDP X30, X19, [X31 + 0x20]
	0x01CED74C LDR X8, [X8]
	0x01CED750 LDR X8, [X8 + 0xB8]
	0x01CED754 LDP S1, S2, [X8 + 0x18]
	0x01CED758 LDR V3, [X8 + 0x20]
	0x01CED75C FMUL S1, S1, S0
	0x01CED760 FMUL S2, S2, S0
	0x01CED764 FMUL S3, S3, S0
	0x01CED768 FADD S0, S8, S1
	0x01CED76C FADD S1, S9, S2
	0x01CED770 LDP D9, D8, [X31 + 0x10]
	0x01CED774 FADD S2, S10, S3
	0x01CED778 LDR V10, [X31], #0x30
	0x01CED77C RET
	0x01CED780 BL 0x1B6EA1C
	0x01CED784 STR X30, [X31 - 0x10]!
	0x01CED788 LDR X8, [X0 + 0xB8]
	0x01CED78C CBZ X8, 0x1CED7A4
	0x01CED790 LDR V0, [X8 + 0x4C]
	0x01CED794 FMOV S1, 0.5
	0x01CED798 FMUL S0, S0, S1
	0x01CED79C LDR X30, [X31], #0x10
	0x01CED7A0 RET
	0x01CED7A4 BL 0x1B6EA1C
	0x01CED7A8 STP X30, X19, [X31 - 0x10]!
	0x01CED7AC LDR X19, [X0 + 0x1A8]
	0x01CED7B0 BL 0x1CED3E4
	0x01CED7B4 CBZ X19, 0x1CED7C8
	0x01CED7B8 AND W1, W0, 0x1
	0x01CED7BC MOV X0, X19
	0x01CED7C0 LDP X30, X19, [X31], #0x10
	0x01CED7C4 B 0x1CED7CC
	0x01CED7C8 BL 0x1B6EA1C
	0x01CED7CC STR X30, [X31 - 0x30]!
	0x01CED7D0 STP X22, X21, [X31 + 0x10]
	0x01CED7D4 STP X20, X19, [X31 + 0x20]
	0x01CED7D8 ADRP X21, 0x2536000
	0x01CED7DC LDRB W8, [X21 + 0x6A4]
	0x01CED7E0 MOV W20, W1
	0x01CED7E4 MOV X19, X0
	0x01CED7E8 TBNZ X8, 0x0, 0x1CED800
	0x01CED7EC ADRP X0, 0x2263000
	0x01CED7F0 LDR X0, [X0 + 0x4B0]
	0x01CED7F4 BL 0x1B6E7F0
	0x01CED7F8 MOVZ W8, 0x1
	0x01CED7FC STRB W8, [X21 + 0x6A4]
	0x01CED800 LDR X0, [X19 + 0xA8]
	0x01CED804 TBZ X20, 0x0, 0x1CED81C
	0x01CED808 ADD X8, X19, 0x88
	0x01CED80C ADD X9, X19, 0x8C
	0x01CED810 ADD X10, X19, 0x90
	0x01CED814 ADD X11, X19, 0x94
	0x01CED818 B 0x1CED82C
	0x01CED81C ADD X8, X19, 0x98
	0x01CED820 ADD X9, X19, 0x9C
	0x01CED824 ADD X10, X19, 0xA0
	0x01CED828 ADD X11, X19, 0xA4
	0x01CED82C CBZ X0, 0x1CED900
	0x01CED830 LDR V3, [X11]
	0x01CED834 LDR V2, [X10]
	0x01CED838 LDR V1, [X9]
	0x01CED83C LDR V0, [X8]
	0x01CED840 MOV X1, X31
	0x01CED844 BL 0x3A7F088
	0x01CED848 LDR X0, [X19 + 0xB0]
	0x01CED84C CBZ X0, 0x1CED900
	0x01CED850 ADRP X22, 0x2263000
	0x01CED854 LDR X22, [X22 + 0x4B0]
	0x01CED858 MOV X1, X31
	0x01CED85C BL 0x3A7BCC8
	0x01CED860 LDR X8, [X22]
	0x01CED864 MOV X21, X0
	0x01CED868 LDR W9, [X8 + 0xE0]
	0x01CED86C CBNZ W9, 0x1CED878
	0x01CED870 MOV X0, X8
	0x01CED874 BL 0x1B6E8F8
	0x01CED878 CBZ X21, 0x1CED900
	0x01CED87C LDR X8, [X22]
	0x01CED880 ANDS W31, W20, 0x1
	0x01CED884 FMOV S0, W31
	0x01CED888 FMOV S1, 1
	0x01CED88C LDR X8, [X8 + 0xB8]
	0x01CED890 FCSEL S0, S1, S0, NE
	0x01CED894 MOV X0, X21
	0x01CED898 MOV X2, X31
	0x01CED89C LDR W1, [X8]
	0x01CED8A0 BL 0x3A7E584
	0x01CED8A4 TBZ X20, 0x0, 0x1CED8D4
	0x01CED8A8 LDR X0, [X19 + 0xE0]
	0x01CED8AC CBZ X0, 0x1CED900
	0x01CED8B0 MOV X1, X31
	0x01CED8B4 BL 0x3A65954
	0x01CED8B8 LDR X0, [X19 + 0xE8]
	0x01CED8BC CBZ X0, 0x1CED900
	0x01CED8C0 LDP X20, X19, [X31 + 0x20]
	0x01CED8C4 LDP X22, X21, [X31 + 0x10]
	0x01CED8C8 MOV X1, X31
	0x01CED8CC LDR X30, [X31], #0x30
	0x01CED8D0 B 0x3A65954
	0x01CED8D4 LDR X0, [X19 + 0xF0]
	0x01CED8D8 CBZ X0, 0x1CED900
	0x01CED8DC MOV X1, X31
	0x01CED8E0 BL 0x3A65954
	0x01CED8E4 LDR X0, [X19 + 0xE8]
	0x01CED8E8 CBZ X0, 0x1CED900
	0x01CED8EC LDP X20, X19, [X31 + 0x20]
	0x01CED8F0 LDP X22, X21, [X31 + 0x10]
	0x01CED8F4 MOV X1, X31
	0x01CED8F8 LDR X30, [X31], #0x30
	0x01CED8FC B 0x3A65A98
	0x01CED900 BL 0x1B6EA1C
	0x01CED904 STR X30, [X31 - 0x20]!
	0x01CED908 STP X20, X19, [X31 + 0x10]
	0x01CED90C MOV X19, X0
	0x01CED910 BL 0x1CED25C
	0x01CED914 SUB W8, W0, 0x1
	0x01CED918 CMP W8, 0x3
	0x01CED91C B.HI 0x1CED9AC
	0x01CED920 ADRP X9, 0xFFFFFFFFFEDFF000
	0x01CED924 ADD X9, X9, 0x95D
	0x01CED928 ADR X10, 0x10
	0x01CED92C LDRB W11, [X9, X8, LSL]
	0x01CED930 ADD X10, X10, X11, 0x2, LSL
	0x01CED934 BR X10
	0x01CED938 LDR X0, [X19 + 0xC0]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x2537000
	011 Move X23, 0x2264000
	012 Move X21, 0x2264000
	013 Move X25, 0x2264000
	014 Move W8, [X22+1685]
	015 Move X23, [X23+968]
	016 Move X21, [X21+976]
	017 Move X25, [X25+984]
	018 Move W19, W1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {47}
	024 Move X0, 0x2264000
	025 Move X0, [X0+992]
	026 Call 0x1B6F7F0
	027 Move X0, 0x2264000
	028 Move X0, [X0+1000]
	029 Call 0x1B6F7F0
	030 Move X0, 0x2264000
	031 Move X0, [X0+1008]
	032 Call 0x1B6F7F0
	033 Move X0, 0x2264000
	034 Move X0, [X0+976]
	035 Call 0x1B6F7F0
	036 Move X0, 0x2264000
	037 Move X0, [X0+968]
	038 Call 0x1B6F7F0
	039 Move X0, 0x2264000
	040 Move X0, [X0+1016]
	041 Call 0x1B6F7F0
	042 Move X0, 0x2264000
	043 Move X0, [X0+984]
	044 Call 0x1B6F7F0
	045 Move W8, 1
	046 Move [X22+1685], W8
	047 Move X0, [X23]
	048 Call 0x1B6FA0C
	049 Move X1, [X21]
	050 Move X21, X0
	051 Call List`1<Object>..ctor, X0
	052 Move X0, [X25]
	053 Move X22, [X20+32]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {59}
	057 Call 0x1B6F8F8
	058 Move X0, [X25]
	059 Move X8, [X0+184]
	060 Move X26, 0x2264000
	061 Move X23, [X8+8]
	062 Move X26, [X26+992]
	063 Compare X23, 0
	064 JumpIfNotEqual {86}
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {70}
	068 Call 0x1B6F8F8
	069 Move X0, [X25]
	070 Move X9, 0x2264000
	071 Move X8, [X0+184]
	072 Move X9, [X9+1000]
	073 Move X24, [X8]
	074 Move X0, [X9]
	075 Call 0x1B6FA0C
	076 Move X8, 0x2264000
	077 Move X8, [X8+1016]
	078 Move X1, X24
	079 Move X3, X31
	080 Move X23, X0
	081 Move X2, [X8]
	082 Call Func`2<Object, Int32>..ctor, X0, X1, X2
	083 Move X8, [X25]
	084 Move X8, [X8+184]
	085 Move [X8+8], X23
	086 Move X2, [X26]
	087 Move X0, X22
	088 Move X1, X23
	089 Call Enumerable.Sum, X0, X1
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X24, 0x2264000
	092 Move X24, [X24+1008]
	093 Move W23, W31
	094 Add W22, W0, 1
	095 Move W0, W31
	096 Move W1, W22
	097 Move X2, X31
	098 Call Random.Range, X0, X1
	099 Move X8, [X20+32]
	100 Compare X8, 0
	101 JumpIfEqual {151}
	102 Move W9, [X8+24]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move W10, W31
	105 Move W11, W31
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Add X12, X8, W10
	108 Move X12, [X12+32]
	109 Compare X12, 0
	110 JumpIfEqual {151}
	111 Move W13, [X12+24]
	112 Add W11, W13, W11
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Add W10, W10, 1
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Compare X21, 0
	117 JumpIfEqual {151}
	118 Move W10, [X21+28]
	119 Move X1, [X12+16]
	120 Move X8, [X21+16]
	121 Move X9, [X24]
	122 Add W10, W10, 1
	123 Move [X21+28], W10
	124 Compare X8, 0
	125 JumpIfEqual {151}
	126 NotImplemented "Instruction LDRSW not yet implemented."
	127 Move W11, [X8+24]
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Add W9, W10, 1
	130 Add X8, X8, X10
	131 Move [X21+24], W9
	132 Move [X8+32], X1
	133 Move X8, [X9+32]
	134 Move X0, X21
	135 Move X8, [X8+192]
	136 Move X2, [X8+112]
	137 Call List`1<Object>.AddWithResize, X0, X1
	138 Add W23, W23, 1
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X0, X21
	141 Move X20, [X31+64]
	142 Move X19, [X31+72]
	143 Move X22, [X31+48]
	144 Move X21, [X31+56]
	145 Move X24, [X31+32]
	146 Move X23, [X31+40]
	147 Move X26, [X31+16]
	148 Move X25, [X31+24]
	149 Move X30, [X31+80]
	150 Return X0
	151 Call 0x1B6FA1C
	152 Call 0x1B6FA24

Method: System.Collections.Generic.List`1<UnityEngine.GameObject> GetMobsToSpawnGuaranteeEveryMonster(System.Int32 count)

Disassembly:
	0x01CED93C CBZ X0, 0x1CEDA50
	0x01CED940 LDR X8, [X0]
	0x01CED944 LDP X9, X1, [X8 + 0x1B8]
	0x01CED948 BLR X9
	0x01CED94C LDR X0, [X19 + 0x1A8]
	0x01CED950 CBZ X0, 0x1CEDA50
	0x01CED954 BL 0x1CEDA54
	0x01CED958 B 0x1CED9AC
	0x01CED95C LDR X0, [X19 + 0xC0]
	0x01CED960 CBZ X0, 0x1CEDA50
	0x01CED964 LDR X8, [X0]
	0x01CED968 LDP X9, X1, [X8 + 0x1E8]
	0x01CED96C BLR X9
	0x01CED970 LDR X0, [X19 + 0x1A8]
	0x01CED974 CBZ X0, 0x1CEDA50
	0x01CED978 BL 0x1CEDA98
	0x01CED97C B 0x1CED9AC
	0x01CED980 LDR X0, [X19 + 0xC0]
	0x01CED984 CBZ X0, 0x1CEDA50
	0x01CED988 LDR X8, [X0]
	0x01CED98C LDP X9, X1, [X8 + 0x1D8]
	0x01CED990 B 0x1CED9A4
	0x01CED994 LDR X0, [X19 + 0xC0]
	0x01CED998 CBZ X0, 0x1CEDA50
	0x01CED99C LDR X8, [X0]
	0x01CED9A0 LDP X9, X1, [X8 + 0x1C8]
	0x01CED9A4 FMOV S0, 1
	0x01CED9A8 BLR X9
	0x01CED9AC LDR X20, [X19 + 0x1A8]
	0x01CED9B0 MOV X0, X19
	0x01CED9B4 BL 0x1CED25C
	0x01CED9B8 CBZ X20, 0x1CEDA50
	0x01CED9BC CMP W0, 0x3
	0x01CED9C0 CSET W1, EQ
	0x01CED9C4 MOV X0, X20
	0x01CED9C8 BL 0x1CEDADC
	0x01CED9CC LDR X20, [X19 + 0x1A8]
	0x01CED9D0 MOV X0, X19
	0x01CED9D4 BL 0x1CED25C
	0x01CED9D8 CBZ X20, 0x1CEDA50
	0x01CED9DC CMP W0, 0x4
	0x01CED9E0 CSET W1, EQ
	0x01CED9E4 MOV X0, X20
	0x01CED9E8 BL 0x1CEDB48
	0x01CED9EC LDR X20, [X19 + 0x1A8]
	0x01CED9F0 MOV X0, X19
	0x01CED9F4 BL 0x1CED25C
	0x01CED9F8 CBZ X20, 0x1CEDA50
	0x01CED9FC CMP W0, 0x1
	0x01CEDA00 CSET W1, NE
	0x01CEDA04 MOV X0, X20
	0x01CEDA08 STRB W1, [X20 + 0x100]
	0x01CEDA0C BL 0x1CEF8C4
	0x01CEDA10 LDR X20, [X19 + 0x1A8]
	0x01CEDA14 MOV X0, X19
	0x01CEDA18 BL 0x1CED25C
	0x01CEDA1C CMP W0, 0x2
	0x01CEDA20 B.NE 0x1CEDA2C
	0x01CEDA24 MOVZ W1, 0x1
	0x01CEDA28 B 0x1CEDA3C
	0x01CEDA2C MOV X0, X19
	0x01CEDA30 BL 0x1CED25C
	0x01CEDA34 CMP W0, 0x3
	0x01CEDA38 CSET W1, EQ
	0x01CEDA3C CBZ X20, 0x1CEDA50
	0x01CEDA40 MOV X0, X20
	0x01CEDA44 LDP X20, X19, [X31 + 0x10]
	0x01CEDA48 LDR X30, [X31], #0x20
	0x01CEDA4C B 0x1CEDBC0
	0x01CEDA50 BL 0x1B6EA1C
	0x01CEDA54 STP X30, X19, [X31 - 0x10]!
	0x01CEDA58 MOV X19, X0
	0x01CEDA5C LDR X0, [X0 + 0xC0]
	0x01CEDA60 CBZ X0, 0x1CEDA94
	0x01CEDA64 MOV X1, X31
	0x01CEDA68 BL 0x3A65B14
	0x01CEDA6C TBZ X0, 0x0, 0x1CEDA80
	0x01CEDA70 LDR X0, [X19 + 0xC0]
	0x01CEDA74 CBZ X0, 0x1CEDA94
	0x01CEDA78 MOV X1, X31
	0x01CEDA7C BL 0x3A65A98
	0x01CEDA80 LDR X0, [X19 + 0xC0]
	0x01CEDA84 CBZ X0, 0x1CEDA94
	0x01CEDA88 MOV X1, X31
	0x01CEDA8C LDP X30, X19, [X31], #0x10
	0x01CEDA90 B 0x3A65954
	0x01CEDA94 BL 0x1B6EA1C
	0x01CEDA98 STP X30, X19, [X31 - 0x10]!
	0x01CEDA9C MOV X19, X0
	0x01CEDAA0 LDR X0, [X0 + 0xB8]
	0x01CEDAA4 CBZ X0, 0x1CEDAD8
	0x01CEDAA8 MOV X1, X31
	0x01CEDAAC BL 0x3A65B14
	0x01CEDAB0 TBZ X0, 0x0, 0x1CEDAC4
	0x01CEDAB4 LDR X0, [X19 + 0xB8]
	0x01CEDAB8 CBZ X0, 0x1CEDAD8
	0x01CEDABC MOV X1, X31
	0x01CEDAC0 BL 0x3A65A98
	0x01CEDAC4 LDR X0, [X19 + 0xB8]
	0x01CEDAC8 CBZ X0, 0x1CEDAD8
	0x01CEDACC MOV X1, X31
	0x01CEDAD0 LDP X30, X19, [X31], #0x10
	0x01CEDAD4 B 0x3A65954
	0x01CEDAD8 BL 0x1B6EA1C
	0x01CEDADC STR X30, [X31 - 0x20]!
	0x01CEDAE0 STP X20, X19, [X31 + 0x10]
	0x01CEDAE4 MOV X19, X0
	0x01CEDAE8 LDR X0, [X0 + 0xC8]
	0x01CEDAEC CBZ X0, 0x1CEDB44
	0x01CEDAF0 MOV W20, W1
	0x01CEDAF4 MOV X1, X31
	0x01CEDAF8 BL 0x3A65B14
	0x01CEDAFC TBZ X20, 0x0, 0x1CEDB1C
	0x01CEDB00 TBNZ X0, 0x0, 0x1CEDB38
	0x01CEDB04 LDR X0, [X19 + 0xC8]
	0x01CEDB08 CBZ X0, 0x1CEDB44
	0x01CEDB0C LDP X20, X19, [X31 + 0x10]
	0x01CEDB10 MOV X1, X31
	0x01CEDB14 LDR X30, [X31], #0x20
	0x01CEDB18 B 0x3A65954
	0x01CEDB1C TBZ X0, 0x0, 0x1CEDB38
	0x01CEDB20 LDR X0, [X19 + 0xC8]
	0x01CEDB24 CBZ X0, 0x1CEDB44
	0x01CEDB28 LDP X20, X19, [X31 + 0x10]
	0x01CEDB2C MOV X1, X31
	0x01CEDB30 LDR X30, [X31], #0x20
	0x01CEDB34 B 0x3A65A98
	0x01CEDB38 LDP X20, X19, [X31 + 0x10]
	0x01CEDB3C LDR X30, [X31], #0x20
	0x01CEDB40 RET
	0x01CEDB44 BL 0x1B6EA1C
	0x01CEDB48 STR X30, [X31 - 0x20]!
	0x01CEDB4C STP X20, X19, [X31 + 0x10]
	0x01CEDB50 MOV X19, X0
	0x01CEDB54 LDR X0, [X0 + 0xD0]
	0x01CEDB58 CBZ X0, 0x1CEDBB0
	0x01CEDB5C MOV W20, W1
	0x01CEDB60 MOV X1, X31
	0x01CEDB64 BL 0x3A65B14
	0x01CEDB68 TBZ X20, 0x0, 0x1CEDB88
	0x01CEDB6C TBNZ X0, 0x0, 0x1CEDBA4
	0x01CEDB70 LDR X0, [X19 + 0xD0]
	0x01CEDB74 CBZ X0, 0x1CEDBB0
	0x01CEDB78 LDP X20, X19, [X31 + 0x10]
	0x01CEDB7C MOV X1, X31
	0x01CEDB80 LDR X30, [X31], #0x20
	0x01CEDB84 B 0x3A65954
	0x01CEDB88 TBZ X0, 0x0, 0x1CEDBA4
	0x01CEDB8C LDR X0, [X19 + 0xD0]
	0x01CEDB90 CBZ X0, 0x1CEDBB0
	0x01CEDB94 LDP X20, X19, [X31 + 0x10]
	0x01CEDB98 MOV X1, X31
	0x01CEDB9C LDR X30, [X31], #0x20
	0x01CEDBA0 B 0x3A65A98
	0x01CEDBA4 LDP X20, X19, [X31 + 0x10]
	0x01CEDBA8 LDR X30, [X31], #0x20
	0x01CEDBAC RET
	0x01CEDBB0 BL 0x1B6EA1C
	0x01CEDBB4 AND W1, W1, 0x1
	0x01CEDBB8 STRB W1, [X0 + 0x100]
	0x01CEDBBC B 0x1CEF8C4
	0x01CEDBC0 STP X30, X21, [X31 - 0x20]!
	0x01CEDBC4 STP X20, X19, [X31 + 0x10]
	0x01CEDBC8 ADRP X21, 0x2536000
	0x01CEDBCC LDRB W8, [X21 + 0x6A5]
	0x01CEDBD0 MOV W19, W1
	0x01CEDBD4 MOV X20, X0
	0x01CEDBD8 TBNZ X8, 0x0, 0x1CEDBF0
	0x01CEDBDC ADRP X0, 0x2263000
	0x01CEDBE0 LDR X0, [X0 + 0x4B0]
	0x01CEDBE4 BL 0x1B6E7F0
	0x01CEDBE8 MOVZ W8, 0x1
	0x01CEDBEC STRB W8, [X21 + 0x6A5]
	0x01CEDBF0 LDR X0, [X20 + 0xB0]
	0x01CEDBF4 CBZ X0, 0x1CEDC54
	0x01CEDBF8 ADRP X21, 0x2263000
	0x01CEDBFC LDR X21, [X21 + 0x4B0]
	0x01CEDC00 MOV X1, X31
	0x01CEDC04 BL 0x3A7BCC8
	0x01CEDC08 LDR X8, [X21]
	0x01CEDC0C MOV X20, X0
	0x01CEDC10 LDR W9, [X8 + 0xE0]
	0x01CEDC14 CBNZ W9, 0x1CEDC20
	0x01CEDC18 MOV X0, X8
	0x01CEDC1C BL 0x1B6E8F8
	0x01CEDC20 CBZ X20, 0x1CEDC54
	0x01CEDC24 LDR X8, [X21]
	0x01CEDC28 ANDS W31, W19, 0x1
	0x01CEDC2C MOV X0, X20
	0x01CEDC30 LDP X20, X19, [X31 + 0x10]
	0x01CEDC34 LDR X8, [X8 + 0xB8]
	0x01CEDC38 FMOV S0, W31
	0x01CEDC3C FMOV S1, 1
	0x01CEDC40 FCSEL S0, S1, S0, NE
	0x01CEDC44 LDR W1, [X8 + 0x4]
	0x01CEDC48 MOV X2, X31
	0x01CEDC4C LDP X30, X21, [X31], #0x20
	0x01CEDC50 B 0x3A7E584
	0x01CEDC54 BL 0x1B6EA1C
	0x01CEDC58 STP X30, X19, [X31 - 0x10]!
	0x01CEDC5C MOV X19, X0
	0x01CEDC60 BL 0x1CE54EC
	0x01CEDC64 LDR X0, [X19 + 0x40]
	0x01CEDC68 CBZ X0, 0x1CEDCC4
	0x01CEDC6C MOV X1, X31
	0x01CEDC70 BL 0x1D9E780
	0x01CEDC74 TBZ X0, 0x0, 0x1CEDCB8
	0x01CEDC78 MOV X0, X19
	0x01CEDC7C MOV X1, X31
	0x01CEDC80 BL 0x3A9B084
	0x01CEDC84 CBZ X0, 0x1CEDCC4
	0x01CEDC88 MOV X1, X31
	0x01CEDC8C BL 0x3AA7658
	0x01CEDC90 MOV X0, X19
	0x01CEDC94 BL 0x1CED380
	0x01CEDC98 LDR X8, [X19]
	0x01CEDC9C MOV X0, X19
	0x01CEDCA0 MOV X1, X31
	0x01CEDCA4 LDR X9, [X8 + 0x338]
	0x01CEDCA8 LDR X2, [X8 + 0x340]
	0x01CEDCAC BLR X9
	0x01CEDCB0 MOV X0, X19
	0x01CEDCB4 BL 0x1CEDCDC
	0x01CEDCB8 MOV X0, X19
	0x01CEDCBC LDP X30, X19, [X31], #0x10
	0x01CEDCC0 B 0x1CED904
	0x01CEDCC4 BL 0x1B6EA1C
	0x01CEDCC8 LDR X8, [X0]
	0x01CEDCCC MOV X1, X31
	0x01CEDCD0 LDR X3, [X8 + 0x338]
	0x01CEDCD4 LDR X2, [X8 + 0x340]
	0x01CEDCD8 BR X3
	0x01CEDCDC STR X30, [X31 - 0x20]!
	0x01CEDCE0 STP X20, X19, [X31 + 0x10]
	0x01CEDCE4 ADRP X20, 0x2536000
	0x01CEDCE8 LDRB W8, [X20 + 0x69A]
	0x01CEDCEC MOV X19, X0
	0x01CEDCF0 TBNZ X8, 0x0, 0x1CEDD08
	0x01CEDCF4 ADRP X0, 0x2263000
	0x01CEDCF8 LDR X0, [X0 + 0x4B8]
	0x01CEDCFC BL 0x1B6E7F0

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0x2537000
	014 Move X23, 0x2264000
	015 Move X21, 0x2264000
	016 Move W8, [X22+1686]
	017 Move X23, [X23+968]
	018 Move X21, [X21+976]
	019 Move W19, W1
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {54}
	025 Move X0, 0x2264000
	026 Move X0, [X0+1024]
	027 Call 0x1B6F7F0
	028 Move X0, 0x2264000
	029 Move X0, [X0+992]
	030 Call 0x1B6F7F0
	031 Move X0, 0x2264000
	032 Move X0, [X0+1000]
	033 Call 0x1B6F7F0
	034 Move X0, 0x2264000
	035 Move X0, [X0+1008]
	036 Call 0x1B6F7F0
	037 Move X0, 0x2264000
	038 Move X0, [X0+976]
	039 Call 0x1B6F7F0
	040 Move X0, 0x2264000
	041 Move X0, [X0+968]
	042 Call 0x1B6F7F0
	043 Move X0, 0x2264000
	044 Move X0, [X0+1032]
	045 Call 0x1B6F7F0
	046 Move X0, 0x2264000
	047 Move X0, [X0+1040]
	048 Call 0x1B6F7F0
	049 Move X0, 0x2264000
	050 Move X0, [X0+984]
	051 Call 0x1B6F7F0
	052 Move W8, 1
	053 Move [X22+1686], W8
	054 Move X0, [X23]
	055 Call 0x1B6FA0C
	056 Move X1, [X21]
	057 Move X21, X0
	058 Call List`1<Object>..ctor, X0
	059 Move X8, [X20+32]
	060 Compare X8, 0
	061 JumpIfEqual {261}
	062 Move X9, 0x2264000
	063 Move X9, [X9+1024]
	064 Move W1, [X8+24]
	065 Move X26, 0x2264000
	066 Move X0, [X9]
	067 Move X26, [X26+984]
	068 Call 0x1B6F868
	069 Move X8, [X26]
	070 Move X23, [X20+32]
	071 Move X22, X0
	072 Move W9, [X8+224]
	073 Compare W9, 0
	074 JumpIfNotEqual {78}
	075 Move X0, X8
	076 Call 0x1B6F8F8
	077 Move X8, [X26]
	078 Move X9, [X8+184]
	079 Move X27, 0x2264000
	080 Move X24, [X9+16]
	081 Move X27, [X27+992]
	082 Compare X24, 0
	083 JumpIfNotEqual {106}
	084 Move W9, [X8+224]
	085 Compare W9, 0
	086 JumpIfNotEqual {90}
	087 Move X0, X8
	088 Call 0x1B6F8F8
	089 Move X8, [X26]
	090 Move X8, [X8+184]
	091 Move X25, [X8]
	092 Move X8, 0x2264000
	093 Move X8, [X8+1000]
	094 Move X0, [X8]
	095 Call 0x1B6FA0C
	096 Move X8, 0x2264000
	097 Move X8, [X8+1032]
	098 Move X1, X25
	099 Move X3, X31
	100 Move X24, X0
	101 Move X2, [X8]
	102 Call Func`2<Object, Int32>..ctor, X0, X1, X2
	103 Move X8, [X26]
	104 Move X8, [X8+184]
	105 Move [X8+16], X24
	106 Move X2, [X27]
	107 Move X0, X23
	108 Move X1, X24
	109 Call Enumerable.Sum, X0, X1
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X23, [X20+32]
	112 Move W24, W0
	113 Move W25, W31
	114 Move W29, W31
	115 Add X28, X22, 32
	116 Compare X23, 0
	117 JumpIfEqual {261}
	118 Move W8, [X23+24]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Compare X22, 0
	121 JumpIfEqual {261}
	122 Move W8, [X22+24]
	123 Move X9, X8
	124 ShiftRight X9, 32
	125 And X9, X9, 0x7FFFFFFF
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X9, X31
	128 Move X10, W8
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move [X28], W31
	131 Add X9, X9, 1
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X0, [X26]
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {139}
	137 Call 0x1B6F8F8
	138 Move X0, [X26]
	139 Move X8, [X0+184]
	140 Move X24, [X8+24]
	141 Compare X24, 0
	142 JumpIfNotEqual {164}
	143 Move W8, [X0+224]
	144 Compare W8, 0
	145 JumpIfNotEqual {148}
	146 Call 0x1B6F8F8
	147 Move X0, [X26]
	148 Move X8, [X0+184]
	149 Move X25, [X8]
	150 Move X8, 0x2264000
	151 Move X8, [X8+1000]
	152 Move X0, [X8]
	153 Call 0x1B6FA0C
	154 Move X8, 0x2264000
	155 Move X8, [X8+1040]
	156 Move X1, X25
	157 Move X3, X31
	158 Move X24, X0
	159 Move X2, [X8]
	160 Call Func`2<Object, Int32>..ctor, X0, X1, X2
	161 Move X8, [X26]
	162 Move X8, [X8+184]
	163 Move [X8+24], X24
	164 Move X8, 0x2264000
	165 Move X8, [X8+992]
	166 Move X0, X23
	167 Move X1, X24
	168 Move X2, [X8]
	169 Call Enumerable.Sum, X0, X1
	170 Move W24, W0
	171 Move W25, W31
	172 Add W1, W24, 1
	173 Move W0, W31
	174 Move X2, X31
	175 Call Random.Range, X0, X1
	176 Move X23, [X20+32]
	177 Compare X23, 0
	178 JumpIfEqual {261}
	179 Move W9, [X23+24]
	180 Move X8, X9
	181 ShiftRight X8, 32
	182 And X8, X8, 0x7FFFFFFF
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move W10, W31
	185 Move X27, X31
	186 Move X11, W9
	187 Compare X22, 0
	188 JumpIfEqual {261}
	189 Move W8, [X22+24]
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move W12, [X28]
	192 Compare W12, 0
	193 JumpIfNotEqual {202}
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Add X12, X23, X27
	196 Move X12, [X12+32]
	197 Compare X12, 0
	198 JumpIfEqual {261}
	199 Move W13, [X12+24]
	200 Add W10, W13, W10
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Add X27, X27, 1
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Compare X21, 0
	205 JumpIfEqual {261}
	206 Move X10, 0x2264000
	207 Move X1, [X12+16]
	208 Move W11, [X21+28]
	209 Move X9, [X21+16]
	210 Move X10, [X10+1008]
	211 Add W11, W11, 1
	212 Move X10, [X10]
	213 Move [X21+28], W11
	214 Compare X9, 0
	215 JumpIfEqual {261}
	216 NotImplemented "Instruction LDRSW not yet implemented."
	217 Move W12, [X9+24]
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Add W10, W11, 1
	220 Add X9, X9, X11
	221 Move [X21+24], W10
	222 Move [X9+32], X1
	223 Move X8, [X10+32]
	224 Move X0, X21
	225 Move X8, [X8+192]
	226 Move X2, [X8+112]
	227 Call List`1<Object>.AddWithResize, X0, X1
	228 Move X8, [X22+24]
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move W8, 1
	231 Move [X28], W8
	232 Move X23, [X20+32]
	233 Compare X23, 0
	234 JumpIfEqual {261}
	235 Move W8, [X23+24]
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Add X8, X23, X27
	238 Move X8, [X8+32]
	239 Compare X8, 0
	240 JumpIfEqual {261}
	241 Move W8, [X8+24]
	242 Add W25, W25, 1
	243 Subtract W24, W24, W8
	244 Add W29, W29, 1
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Move X0, X21
	247 Move X20, [X31+80]
	248 Move X19, [X31+88]
	249 Move X22, [X31+64]
	250 Move X21, [X31+72]
	251 Move X24, [X31+48]
	252 Move X23, [X31+56]
	253 Move X26, [X31+32]
	254 Move X25, [X31+40]
	255 Move X28, [X31+16]
	256 Move X27, [X31+24]
	257 Move X29, [X31+96]
	258 Move X30, [X31+104]
	259 Return X0
	260 Call 0x1B6FA24
	261 Call 0x1B6FA1C

Method: System.Void .ctor()

Disassembly:
	0x01CEDD00 MOVZ W8, 0x1
	0x01CEDD04 STRB W8, [X20 + 0x69A]
	0x01CEDD08 MOVZ W1, 0x1
	0x01CEDD0C MOV X0, X19
	0x01CEDD10 BL 0x1CED2BC

ISIL:
	001 Move X8, -19132416
	002 Move V0, [X8+2792]
	003 Move X1, X31
	004 Move [X0+24], D0
	005 Call ScriptableObject..ctor, X0
	006 Return 

