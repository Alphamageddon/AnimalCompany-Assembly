Type: AnimalCompany.NetworkVFX

Method: System.Void Awake()

Disassembly:
	0x01CF43E8 STR W31, [X0 + 0x84]
	0x01CF43EC B 0x3A9EFE0
	0x01CF43F0 MOV X1, X31
	0x01CF43F4 B 0x3036524
	0x01CF43F8 STP X30, X21, [X31 - 0x20]!
	0x01CF43FC STP X20, X19, [X31 + 0x10]
	0x01CF4400 ADRP X21, 0x252F000
	0x01CF4404 ADRP X20, 0x225C000
	0x01CF4408 LDRB W8, [X21 + 0x6E5]
	0x01CF440C LDR X20, [X20 + 0x718]
	0x01CF4410 MOV X19, X0
	0x01CF4414 TBNZ X8, 0x0, 0x1CF442C
	0x01CF4418 ADRP X0, 0x225C000
	0x01CF441C LDR X0, [X0 + 0x718]
	0x01CF4420 BL 0x1B6E7F0
	0x01CF4424 MOVZ W8, 0x1
	0x01CF4428 STRB W8, [X21 + 0x6E5]
	0x01CF442C LDR X0, [X19 + 0x28]!
	0x01CF4430 MOV X1, X31
	0x01CF4434 BL 0x30905F0
	0x01CF4438 ANDS W31, W0, 0x1
	0x01CF443C CSEL X8, X20, X19, NE
	0x01CF4440 LDR X0, [X8]
	0x01CF4444 LDP X20, X19, [X31 + 0x10]
	0x01CF4448 LDP X30, X21, [X31], #0x20
	0x01CF444C RET
	0x01CF4450 STR X30, [X31 - 0x20]!
	0x01CF4454 STP X20, X19, [X31 + 0x10]
	0x01CF4458 ADRP X20, 0x252F000
	0x01CF445C ADRP X19, 0x225C000
	0x01CF4460 LDRB W8, [X20 + 0x6E6]
	0x01CF4464 LDR X19, [X19 + 0x720]
	0x01CF4468 TBNZ X8, 0x0, 0x1CF4480
	0x01CF446C ADRP X0, 0x225C000
	0x01CF4470 LDR X0, [X0 + 0x720]
	0x01CF4474 BL 0x1B6E7F0
	0x01CF4478 MOVZ W8, 0x1
	0x01CF447C STRB W8, [X20 + 0x6E6]
	0x01CF4480 LDR X0, [X19]
	0x01CF4484 LDR W8, [X0 + 0xE0]
	0x01CF4488 CBNZ W8, 0x1CF4494
	0x01CF448C BL 0x1B6E8F8
	0x01CF4490 LDR X0, [X19]
	0x01CF4494 LDR X8, [X0 + 0xB8]
	0x01CF4498 LDP X20, X19, [X31 + 0x10]
	0x01CF449C LDR X0, [X8 + 0x10]
	0x01CF44A0 LDR X30, [X31], #0x20
	0x01CF44A4 RET
	0x01CF44A8 STP D15, D14, [X31 - 0xA0]!
	0x01CF44AC STP D13, D12, [X31 + 0x10]
	0x01CF44B0 STP D11, D10, [X31 + 0x20]
	0x01CF44B4 STP D9, D8, [X31 + 0x30]
	0x01CF44B8 STP X29, X30, [X31 + 0x40]
	0x01CF44BC STP X28, X27, [X31 + 0x50]
	0x01CF44C0 STP X26, X25, [X31 + 0x60]
	0x01CF44C4 STP X24, X23, [X31 + 0x70]
	0x01CF44C8 STP X22, X21, [X31 + 0x80]
	0x01CF44CC STP X20, X19, [X31 + 0x90]
	0x01CF44D0 SUB X31, X31, 0x1D0
	0x01CF44D4 STR X8, [X31 + 0x28]
	0x01CF44D8 ADRP X22, 0x252F000
	0x01CF44DC ADRP X19, 0x225C000
	0x01CF44E0 LDRB W8, [X22 + 0x6E7]
	0x01CF44E4 LDR X19, [X19 + 0x728]
	0x01CF44E8 MOV X20, X2
	0x01CF44EC MOV X25, X1
	0x01CF44F0 MOV X21, X0
	0x01CF44F4 ADD X23, X31, 0x168
	0x01CF44F8 TBNZ X8, 0x0, 0x1CF4690
	0x01CF44FC ADRP X0, 0x225C000
	0x01CF4500 LDR X0, [X0 + 0x730]
	0x01CF4504 BL 0x1B6E7F0
	0x01CF4508 ADRP X0, 0x225C000
	0x01CF450C LDR X0, [X0 + 0x738]
	0x01CF4510 BL 0x1B6E7F0
	0x01CF4514 ADRP X0, 0x225C000
	0x01CF4518 LDR X0, [X0 + 0x740]
	0x01CF451C BL 0x1B6E7F0
	0x01CF4520 ADRP X0, 0x225C000
	0x01CF4524 LDR X0, [X0 + 0x748]
	0x01CF4528 BL 0x1B6E7F0
	0x01CF452C ADRP X0, 0x225C000
	0x01CF4530 LDR X0, [X0 + 0x750]
	0x01CF4534 BL 0x1B6E7F0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x2530000
	008 Move X20, 0x225D000
	009 Move W8, [X21+1753]
	010 Move X20, [X20+1728]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x225B000
	017 Move X0, [X0+360]
	018 Call 0x1B6F7F0
	019 Move X0, 0x225A000
	020 Move X0, [X0+3960]
	021 Call 0x1B6F7F0
	022 Move X0, 0x225D000
	023 Move X0, [X0+1736]
	024 Call 0x1B6F7F0
	025 Move X0, 0x225D000
	026 Move X0, [X0+1728]
	027 Call 0x1B6F7F0
	028 Move W8, 1
	029 Move [X21+1753], W8
	030 Move X8, [X20]
	031 Move X20, 0x2530000
	032 Move X22, 0x225A000
	033 Move X8, [X8+184]
	034 Move [X8], X19
	035 Move W8, [X20+1288]
	036 Move X22, [X22+3960]
	037 Compare W8, 0
	038 JumpIfNotEqual {44}
	039 Move X0, 0x225A000
	040 Move X0, [X0+3960]
	041 Call 0x1B6F7F0
	042 Move W8, 1
	043 Move [X20+1288], W8
	044 Move X8, [X22]
	045 Move X8, [X8+184]
	046 Move X9, [X8+64]
	047 Compare X9, 0
	048 JumpIfEqual {50}
	049 Move X9, [X9+152]
	050 Compare X19, 0
	051 JumpIfEqual {99}
	052 Move X23, 0x225B000
	053 Move X23, [X23+360]
	054 Move [X19+72], X9
	055 Move X21, 0x225D000
	056 Move X20, [X8+24]
	057 Move X0, [X23]
	058 Move X21, [X21+1736]
	059 Call 0x1B6FA0C
	060 Move X2, [X21]
	061 Move X1, X19
	062 Move X3, X31
	063 Move X21, X0
	064 Call Action`1<Object>..ctor, X0, X1, X2
	065 Move X0, X20
	066 Move X1, X21
	067 Move X2, X31
	068 Call Delegate.Combine, X0, X1
	069 Compare X0, 0
	070 JumpIfEqual {89}
	071 Move X20, [X23]
	072 Move X19, X0
	073 Move X1, X20
	074 Call 0x1B6F8FC
	075 Compare X0, 0
	076 JumpIfEqual {86}
	077 Move X8, [X22]
	078 Move X8, [X8+184]
	079 Move [X8+24], X0
	080 Move X20, [X23]
	081 Move X0, X19
	082 Move X1, X20
	083 Call 0x1B6F8FC
	084 Compare X0, 0
	085 JumpIfNotEqual {92}
	086 Move X0, X19
	087 Move X1, X20
	088 Call 0x1B6FCDC
	089 Move X8, [X22]
	090 Move X8, [X8+184]
	091 Move [X8+24], X31
	092 Move X20, [X31+32]
	093 Move X19, [X31+40]
	094 Move X22, [X31+16]
	095 Move X21, [X31+24]
	096 Move X30, [X31+48]
	097 Move X23, [X31+56]
	098 Return 
	099 Call 0x1B6FA1C

Method: System.Void HandleNewRunner(Fusion.NetworkRunner runner)

Disassembly:
	0x01CF4538 ADRP X0, 0x225C000
	0x01CF453C LDR X0, [X0 + 0x758]

ISIL:
	001 Move [X0+72], X1
	002 Return 

Method: System.Void PlayVFX(AnimalCompany.NetworkVFXType type, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)

Disassembly:
	0x01CF4540 BL 0x1B6E7F0
	0x01CF4544 ADRP X0, 0x225C000
	0x01CF4548 LDR X0, [X0 + 0x760]
	0x01CF454C BL 0x1B6E7F0
	0x01CF4550 ADRP X0, 0x225C000
	0x01CF4554 LDR X0, [X0 + 0x768]
	0x01CF4558 BL 0x1B6E7F0
	0x01CF455C ADRP X0, 0x225C000
	0x01CF4560 LDR X0, [X0 + 0x770]
	0x01CF4564 BL 0x1B6E7F0
	0x01CF4568 ADRP X0, 0x2259000
	0x01CF456C LDR X0, [X0 + 0x8E0]
	0x01CF4570 BL 0x1B6E7F0
	0x01CF4574 ADRP X0, 0x225C000
	0x01CF4578 LDR X0, [X0 + 0x778]
	0x01CF457C BL 0x1B6E7F0
	0x01CF4580 ADRP X0, 0x225C000
	0x01CF4584 LDR X0, [X0 + 0x780]
	0x01CF4588 BL 0x1B6E7F0
	0x01CF458C ADRP X0, 0x225C000
	0x01CF4590 LDR X0, [X0 + 0x788]
	0x01CF4594 BL 0x1B6E7F0
	0x01CF4598 ADRP X0, 0x225C000
	0x01CF459C LDR X0, [X0 + 0x790]
	0x01CF45A0 BL 0x1B6E7F0
	0x01CF45A4 ADRP X0, 0x225C000
	0x01CF45A8 LDR X0, [X0 + 0x798]
	0x01CF45AC BL 0x1B6E7F0
	0x01CF45B0 ADRP X0, 0x225C000
	0x01CF45B4 LDR X0, [X0 + 0x7A0]
	0x01CF45B8 BL 0x1B6E7F0
	0x01CF45BC ADRP X0, 0x225C000
	0x01CF45C0 LDR X0, [X0 + 0x7A8]
	0x01CF45C4 BL 0x1B6E7F0
	0x01CF45C8 ADRP X0, 0x225C000
	0x01CF45CC LDR X0, [X0 + 0x7B0]
	0x01CF45D0 BL 0x1B6E7F0
	0x01CF45D4 ADRP X0, 0x225C000
	0x01CF45D8 LDR X0, [X0 + 0x7B8]
	0x01CF45DC BL 0x1B6E7F0
	0x01CF45E0 ADRP X0, 0x225C000
	0x01CF45E4 LDR X0, [X0 + 0x7C0]
	0x01CF45E8 BL 0x1B6E7F0
	0x01CF45EC ADRP X0, 0x225C000
	0x01CF45F0 LDR X0, [X0 + 0x7C8]

ISIL:
	001 Move [X31-80], D14
	002 Move [X31+8], D13
	003 Move [X31+16], D12
	004 Move [X31+24], D11
	005 Move [X31+32], D10
	006 Move [X31+40], D9
	007 Move [X31+48], D8
	008 Move [X31+56], X30
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x2530000
	012 Move W8, [X20+1288]
	013 Move V8, V6
	014 Move V9, V5
	015 Move V10, V4
	016 Move V11, V3
	017 Move V12, V2
	018 Move V13, V1
	019 Move V14, V0
	020 Move W19, W0
	021 Compare W8, 0
	022 JumpIfNotEqual {28}
	023 Move X0, 0x225A000
	024 Move X0, [X0+3960]
	025 Call 0x1B6F7F0
	026 Move W8, 1
	027 Move [X20+1288], W8
	028 Move X8, 0x225A000
	029 Move X8, [X8+3960]
	030 Move X8, [X8]
	031 Move X8, [X8+184]
	032 Move X8, [X8+64]
	033 Compare X8, 0
	034 JumpIfEqual {54}
	035 Move X0, [X8+152]
	036 Move W1, W19
	037 Move V1, V13
	038 Move V2, V12
	039 Move V3, V11
	040 Move V4, V10
	041 Move V5, V9
	042 Move V6, V8
	043 Move X20, [X31+64]
	044 Move X19, [X31+72]
	045 Move X30, [X31+56]
	046 Move D9, [X31+40]
	047 Move D8, [X31+48]
	048 Move D11, [X31+24]
	049 Move D10, [X31+32]
	050 Move D13, [X31+8]
	051 Move D12, [X31+16]
	052 Move V0, V14
	053 Move V14, [X31+80]
	054 Call 0x1B6FA1C

Method: System.Void RPC_PlayVFX(Fusion.NetworkRunner runner, AnimalCompany.NetworkVFXType type, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)

Disassembly:
	0x01CF45F4 BL 0x1B6E7F0
	0x01CF45F8 ADRP X0, 0x225C000
	0x01CF45FC LDR X0, [X0 + 0x7D0]
	0x01CF4600 BL 0x1B6E7F0
	0x01CF4604 ADRP X0, 0x225C000
	0x01CF4608 LDR X0, [X0 + 0x7D8]
	0x01CF460C BL 0x1B6E7F0
	0x01CF4610 ADRP X0, 0x225C000
	0x01CF4614 LDR X0, [X0 + 0x7E0]
	0x01CF4618 BL 0x1B6E7F0
	0x01CF461C ADRP X0, 0x225C000
	0x01CF4620 LDR X0, [X0 + 0x7E8]
	0x01CF4624 BL 0x1B6E7F0
	0x01CF4628 ADRP X0, 0x225C000
	0x01CF462C LDR X0, [X0 + 0x7F0]
	0x01CF4630 BL 0x1B6E7F0
	0x01CF4634 ADRP X0, 0x225C000
	0x01CF4638 LDR X0, [X0 + 0x7F8]
	0x01CF463C BL 0x1B6E7F0
	0x01CF4640 ADRP X0, 0x225C000
	0x01CF4644 LDR X0, [X0 + 0x728]
	0x01CF4648 BL 0x1B6E7F0
	0x01CF464C ADRP X0, 0x225C000
	0x01CF4650 LDR X0, [X0 + 0x800]
	0x01CF4654 BL 0x1B6E7F0
	0x01CF4658 ADRP X0, 0x2259000
	0x01CF465C LDR X0, [X0 + 0x478]
	0x01CF4660 BL 0x1B6E7F0
	0x01CF4664 ADRP X0, 0x225C000
	0x01CF4668 LDR X0, [X0 + 0x808]
	0x01CF466C BL 0x1B6E7F0
	0x01CF4670 ADRP X0, 0x2259000
	0x01CF4674 LDR X0, [X0 + 0xC08]
	0x01CF4678 BL 0x1B6E7F0
	0x01CF467C ADRP X0, 0x225C000
	0x01CF4680 LDR X0, [X0 + 0x810]
	0x01CF4684 BL 0x1B6E7F0
	0x01CF4688 MOVZ W8, 0x1
	0x01CF468C STRB W8, [X22 + 0x6E7]
	0x01CF4690 LDR X0, [X19]
	0x01CF4694 MOVI V0.2D, 0x0
	0x01CF4698 STP X31, X31, [X31 + 0x150]
	0x01CF469C STR X31, [X31 + 0x160]
	0x01CF46A0 STR X31, [X31 + 0x140]
	0x01CF46A4 STP X31, X31, [X31 + 0x100]
	0x01CF46A8 STR X31, [X31 + 0x110]
	0x01CF46AC STP X31, X31, [X31 + 0xE0]
	0x01CF46B0 STP V0, V0, [X31 + 0x120]
	0x01CF46B4 STR X31, [X31 + 0xF0]
	0x01CF46B8 STR W31, [X31 + 0x168]
	0x01CF46BC STUR W31, [X23 + 0x3]
	0x01CF46C0 BL 0x1B6EA0C
	0x01CF46C4 MOV X1, X31
	0x01CF46C8 MOV X19, X0
	0x01CF46CC BL 0x1CFCEA0
	0x01CF46D0 CBZ X19, 0x1CF53B8
	0x01CF46D4 ADRP X8, 0x225C000
	0x01CF46D8 LDR X8, [X8 + 0x7F0]
	0x01CF46DC STR X21, [X19 + 0x10]
	0x01CF46E0 STR X19, [X31 + 0x30]
	0x01CF46E4 ADRP X19, 0x225C000
	0x01CF46E8 LDR X0, [X8]
	0x01CF46EC LDR X19, [X19 + 0x7D0]
	0x01CF46F0 BL 0x1B6EA0C
	0x01CF46F4 LDR X1, [X19]
	0x01CF46F8 MOV X23, X0
	0x01CF46FC BL 0x2ED296C
	0x01CF4700 LDR X0, [X21 + 0x30]
	0x01CF4704 STR X23, [X21 + 0x40]
	0x01CF4708 CBZ X0, 0x1CF53B8
	0x01CF470C ADRP X8, 0x225C000
	0x01CF4710 LDR X8, [X8 + 0x7A8]
	0x01CF4714 ADRP X27, 0x225C000
	0x01CF4718 ADRP X28, 0x225C000
	0x01CF471C ADRP X29, 0x225C000
	0x01CF4720 ADRP X26, 0x225C000
	0x01CF4724 ADRP X22, 0x225C000
	0x01CF4728 LDR X27, [X27 + 0x748]
	0x01CF472C LDR X28, [X28 + 0x7A0]
	0x01CF4730 LDR X29, [X29 + 0x758]
	0x01CF4734 LDR X26, [X26 + 0x798]
	0x01CF4738 LDR X22, [X22 + 0x738]
	0x01CF473C LDR X1, [X8]
	0x01CF4740 ADD X8, X31, 0xB0
	0x01CF4744 BL 0x2E470E0
	0x01CF4748 LDR V0, [X31 + 0xB]
	0x01CF474C LDR X8, [X31 + 0xC0]
	0x01CF4750 ADD X9, X31, 0x120
	0x01CF4754 ADD X23, X9, 0x10
	0x01CF4758 MOVZ W19, 0x18
	0x01CF475C STR V0, [X31 + 0x15]
	0x01CF4760 STR X8, [X31 + 0x160]
	0x01CF4764 LDR X1, [X27]
	0x01CF4768 ADD X0, X31, 0x150
	0x01CF476C BL 0x2A14F30
	0x01CF4770 TBZ X0, 0x0, 0x1CF4894
	0x01CF4774 LDR X8, [X31 + 0x160]
	0x01CF4778 CBZ X8, 0x1CF53F8
	0x01CF477C LDR X0, [X8 + 0x18]
	0x01CF4780 CBZ X0, 0x1CF53FC
	0x01CF4784 LDR X1, [X28]
	0x01CF4788 ADD X8, X31, 0xB0
	0x01CF478C BL 0x2ED40B0
	0x01CF4790 LDP V0, V1, [X31 + 0xB0]
	0x01CF4794 LDR X8, [X31 + 0xD0]
	0x01CF4798 STP V0, V1, [X31 + 0x120]
	0x01CF479C STR X8, [X31 + 0x140]
	0x01CF47A0 LDR X1, [X29]
	0x01CF47A4 ADD X0, X31, 0x120
	0x01CF47A8 BL 0x2A22528
	0x01CF47AC TBZ X0, 0x0, 0x1CF484C
	0x01CF47B0 LDR X0, [X21 + 0x40]
	0x01CF47B4 LDR X8, [X23 + 0x10]
	0x01CF47B8 LDR V0, [X23]
	0x01CF47BC STR X8, [X31 + 0xC0]
	0x01CF47C0 STR V0, [X31 + 0xB]
	0x01CF47C4 CBZ X0, 0x1CF4864
	0x01CF47C8 LDR V0, [X31 + 0xB]
	0x01CF47CC LDR X8, [X31 + 0xC0]
	0x01CF47D0 LDR X10, [X26]
	0x01CF47D4 STR V0, [X31 + 0x17]
	0x01CF47D8 STR X8, [X31 + 0x180]
	0x01CF47DC LDR W9, [X0 + 0x1C]
	0x01CF47E0 LDR X8, [X0 + 0x10]
	0x01CF47E4 ADD W9, W9, 0x1
	0x01CF47E8 STR W9, [X0 + 0x1C]
	0x01CF47EC CBZ X8, 0x1CF486C
	0x01CF47F0 LDRSW X9, [X0 + 0x18]
	0x01CF47F4 LDR W11, [X8 + 0x18]
	0x01CF47F8 CMP W9, W11
	0x01CF47FC B.CS 0x1CF4824
	0x01CF4800 ADD W10, W9, 0x1
	0x01CF4804 STR W10, [X0 + 0x18]
	0x01CF4808 LDR X10, [X31 + 0x180]
	0x01CF480C LDR V0, [X31 + 0x17]
	0x01CF4810 NOP
	0x01CF4814 MADD X8, X9, X19, X8
	0x01CF4818 STR X10, [X8 + 0x30]
	0x01CF481C STR V0, [X8 + 0x2]
	0x01CF4820 B 0x1CF47A0
	0x01CF4824 LDR X8, [X10 + 0x20]
	0x01CF4828 LDR V0, [X31 + 0x17]
	0x01CF482C LDR X9, [X31 + 0x180]
	0x01CF4830 LDR X8, [X8 + 0xC0]
	0x01CF4834 LDR X2, [X8 + 0x70]
	0x01CF4838 STR V0, [X31 + 0x19]
	0x01CF483C STR X9, [X31 + 0x1A0]
	0x01CF4840 ADD X1, X31, 0x190
	0x01CF4844 BL 0x2ED3210
	0x01CF4848 B 0x1CF47A0
	0x01CF484C MOV X24, X31
	0x01CF4850 LDR X1, [X22]
	0x01CF4854 ADD X0, X31, 0x120
	0x01CF4858 BL 0x2A22524
	0x01CF485C CBZ X24, 0x1CF4764
	0x01CF4860 B 0x1CF5400
	0x01CF4864 BL 0x1B6EA1C
	0x01CF4868 B 0x1CF5408
	0x01CF486C BL 0x1B6EA1C
	0x01CF4870 B 0x1CF5408
	0x01CF4874 B 0x1CF487C
	0x01CF4878 B 0x1CF487C
	0x01CF487C CMP W1, 0x1
	0x01CF4880 B.NE 0x1CF53BC
	0x01CF4884 BL 0x3D19840
	0x01CF4888 LDR X24, [X0]
	0x01CF488C BL 0x3D19850

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], D14
	003 Move [X31+24], D13
	004 Move [X31+32], D12
	005 Move [X31+40], D11
	006 Move [X31+48], D10
	007 Move [X31+56], D9
	008 Move [X31+64], D8
	009 Move [X31+72], X30
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0x2530000
	015 Move X22, 0x225B000
	016 Move W8, [X21+1754]
	017 Move X22, [X22+448]
	018 Move V8, V6
	019 Move V9, V5
	020 Move V10, V4
	021 Move V11, V3
	022 Move V12, V2
	023 Move V13, V1
	024 Move V14, V0
	025 Move W19, W1
	026 Move X20, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {45}
	031 Move X0, 0x225B000
	032 Move X0, [X0+448]
	033 Call 0x1B6F7F0
	034 Move X0, 0x225D000
	035 Move X0, [X0+1728]
	036 Call 0x1B6F7F0
	037 Move X0, 0x225D000
	038 Move X0, [X0+1744]
	039 Call 0x1B6F7F0
	040 Move X0, 0x225D000
	041 Move X0, [X0+1752]
	042 Call 0x1B6F7F0
	043 Move W8, 1
	044 Move [X21+1754], W8
	045 Move X0, [X22]
	046 Move [X31+8], X31
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1B6F8F8
	051 Move X0, [X22]
	052 Move X8, [X0+184]
	053 Move W9, [X8+32]
	054 Compare W9, 0
	055 JumpIfEqual {113}
	056 Move W9, [X0+224]
	057 Compare W9, 0
	058 JumpIfNotEqual {62}
	059 Call 0x1B6F8F8
	060 Move X8, [X22]
	061 Move X8, [X8+184]
	062 Move [X8+32], W31
	063 Move X8, 0x225D000
	064 Move X8, [X8+1728]
	065 Move X8, [X8]
	066 Move X8, [X8+184]
	067 Move X8, [X8]
	068 Compare X8, 0
	069 JumpIfEqual {182}
	070 Move X0, [X8+80]
	071 Compare X0, 0
	072 JumpIfEqual {182}
	073 Move X8, 0x225D000
	074 Move X8, [X8+1744]
	075 Add X2, X31, 8
	076 Move W1, W19
	077 Move X3, [X8]
	078 Call 0x2471894, X0, X1, X2
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {119}
	083 Move X0, [X31+8]
	084 Compare X0, 0
	085 JumpIfEqual {182}
	086 Move X1, X31
	087 Call Component.get_transform, X0
	088 Compare X0, 0
	089 JumpIfEqual {182}
	090 Move V0, V14
	091 Move V1, V13
	092 Move V2, V12
	093 Move X1, X31
	094 Call Transform.set_position, X0, X1
	095 Move X0, [X31+8]
	096 Compare X0, 0
	097 JumpIfEqual {182}
	098 Move X1, X31
	099 Call Component.get_transform, X0
	100 Compare X0, 0
	101 JumpIfEqual {182}
	102 Move V0, V11
	103 Move V1, V10
	104 Move V2, V9
	105 Move V3, V8
	106 Move X1, X31
	107 Call Transform.set_rotation, X0, X1
	108 Move X0, [X31+8]
	109 Compare X0, 0
	110 JumpIfEqual {182}
	111 Move X1, X31
	112 Call ParticleSystem.Play, X0
	113 Compare X20, 0
	114 JumpIfEqual {183}
	115 Move X0, X20
	116 Move X1, X31
	117 Call NetworkRunner.get_Stage, X0
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X20, [X31+96]
	120 Move X19, [X31+104]
	121 Move X22, [X31+80]
	122 Move X21, [X31+88]
	123 Move X30, [X31+72]
	124 Move D9, [X31+56]
	125 Move D8, [X31+64]
	126 Move D11, [X31+40]
	127 Move D10, [X31+48]
	128 Move D13, [X31+24]
	129 Move D12, [X31+32]
	130 Move V14, [X31+16]
	131 Add X31, X31, 112
	132 Return 
	133 Move X0, [X20+80]
	134 Compare X0, 0
	135 JumpIfEqual {182}
	136 Move X1, X31
	137 Call Simulation.HasAnyActiveConnections, X0
	138 Move TEMP, X0
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfNotEqual {63}
	142 Move X0, [X20+80]
	143 Move W1, 40
	144 Move X2, X31
	145 Call SimulationMessage.Allocate, X0, X1
	146 Move X21, X0
	147 Move W0, 1
	148 Move X1, X31
	149 Call Assert.Check, X0
	150 Move X0, [X22]
	151 Move W8, [X0+224]
	152 Compare W8, 0
	153 JumpIfNotEqual {155}
	154 Call 0x1B6F8F8
	155 Move X8, 0x225D000
	156 Move X8, [X8+1752]
	157 Move X1, X31
	158 Move X0, [X8]
	159 Call NetworkBehaviourUtils.GetRpcStaticIndexOrThrow, X0
	160 Move X1, X31
	161 Call RpcHeader.Create, X0
	162 Move [X21+28], X0
	163 Move [X21+36], W19
	164 Move [X21+40], S14
	165 Move [X21+48], S13
	166 Move [X21+48], S12
	167 Move [X21+56], S11
	168 Move [X21+56], S10
	169 Move [X21+64], S9
	170 Move [X21+64], S8
	171 Compare X21, 0
	172 JumpIfEqual {182}
	173 Move W8, [X21+20]
	174 Move W9, 320
	175 Move X0, X20
	176 Move X1, X21
	177 Or W8, W8, 4
	178 Move X2, X31
	179 Move [X21+12], W9
	180 Move [X21+20], W8
	181 Call NetworkRunner.SendRpc, X0, X1
	182 Call 0x1B6FA1C
	183 Move X0, 0x225C000
	184 Move X0, [X0+1816]
	185 Call 0x1B6F804
	186 Call 0x1B6FA0C
	187 Move X19, X0
	188 Move X0, 0x225C000
	189 Move X0, [X0+1824]
	190 Call 0x1B6F804
	191 Move X1, X0
	192 Move X0, X19
	193 Move X2, X31
	194 Call ArgumentNullException..ctor, X0, X1
	195 Move X0, 0x225D000
	196 Move X0, [X0+1760]
	197 Call 0x1B6F804
	198 Move X1, X0
	199 Move X0, X19
	200 Call 0x1B6F8E8

Method: System.Void .ctor()

Disassembly:
	0x01CF4890 B 0x1CF4850
	0x01CF4894 ADRP X8, 0x225C000
	0x01CF4898 LDR X8, [X8 + 0x740]
	0x01CF489C ADD X0, X31, 0x150
	0x01CF48A0 LDR X1, [X8]
	0x01CF48A4 BL 0x2A14F2C
	0x01CF48A8 ADRP X29, 0x2259000
	0x01CF48AC ADRP X19, 0x225C000
	0x01CF48B0 LDR X29, [X29 + 0x478]
	0x01CF48B4 LDR X19, [X19 + 0x780]
	0x01CF48B8 ADRP X8, 0x225C000
	0x01CF48BC LDR W22, [X21 + 0x38]
	0x01CF48C0 LDR X8, [X8 + 0x7F8]
	0x01CF48C4 LDR X0, [X8]
	0x01CF48C8 BL 0x1B6EA0C
	0x01CF48CC ADRP X8, 0x225C000
	0x01CF48D0 LDR X8, [X8 + 0x7C8]
	0x01CF48D4 MOV X24, X0
	0x01CF48D8 LDR X1, [X8]
	0x01CF48DC BL 0x2E45D4C
	0x01CF48E0 CBZ X24, 0x1CF53B8
	0x01CF48E4 LDR W10, [X24 + 0x1C]
	0x01CF48E8 LDR X8, [X24 + 0x10]
	0x01CF48EC LDR X9, [X19]
	0x01CF48F0 ADD W10, W10, 0x1
	0x01CF48F4 STR W10, [X24 + 0x1C]
	0x01CF48F8 CBZ X8, 0x1CF53B8
	0x01CF48FC LDRSW X10, [X24 + 0x18]
	0x01CF4900 LDR W11, [X8 + 0x18]
	0x01CF4904 CMP W10, W11
	0x01CF4908 B.CS 0x1CF4920

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2530000
	007 Move X22, 0x225D000
	008 Move X20, 0x225D000
	009 Move W8, [X21+1755]
	010 Move X22, [X22+1768]
	011 Move X20, [X20+1776]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x225D000
	018 Move X0, [X0+1776]
	019 Call 0x1B6F7F0
	020 Move X0, 0x225D000
	021 Move X0, [X0+1768]
	022 Call 0x1B6F7F0
	023 Move W8, 1
	024 Move [X21+1755], W8
	025 Move X0, [X22]
	026 Call 0x1B6FA0C
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call 0x2472580, X0
	030 Move [X19+80], X20
	031 Move X0, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+48]
	038 Call SimulationBehaviour..ctor, X0
	039 Return 

Method: System.Void RPC_PlayVFX@Invoker(Fusion.NetworkRunner runner, Fusion.SimulationMessage* message)

Disassembly:
	0x01CF490C ADD W9, W10, 0x1
	0x01CF4910 ADD X8, X8, X10, 0x3, LSL
	0x01CF4914 STR W9, [X24 + 0x18]
	0x01CF4918 STR X25, [X8 + 0x20]
	0x01CF491C B 0x1CF4938
	0x01CF4920 LDR X8, [X9 + 0x20]
	0x01CF4924 MOV X0, X24
	0x01CF4928 MOV X1, X25
	0x01CF492C LDR X8, [X8 + 0xC0]
	0x01CF4930 LDR X2, [X8 + 0x70]
	0x01CF4934 BL 0x2E46518
	0x01CF4938 ADRP X8, 0x225C000
	0x01CF493C LDR X8, [X8 + 0x7E8]
	0x01CF4940 LDR X0, [X8]
	0x01CF4944 BL 0x1B6EA0C
	0x01CF4948 ADRP X8, 0x225C000
	0x01CF494C LDR X8, [X8 + 0x7C0]
	0x01CF4950 MOV X23, X0
	0x01CF4954 LDR X1, [X8]
	0x01CF4958 BL 0x2D8CF60
	0x01CF495C MOV X0, X21
	0x01CF4960 BL 0x1CF43F8
	0x01CF4964 ADRP X8, 0x2259000
	0x01CF4968 LDR X8, [X8 + 0xC08]
	0x01CF496C ADRP X9, 0x225C000
	0x01CF4970 MOV X1, X0
	0x01CF4974 MOV X3, X31
	0x01CF4978 LDR X8, [X8]
	0x01CF497C LDR X9, [X9 + 0x808]
	0x01CF4980 MOV X0, X8
	0x01CF4984 LDR X2, [X9]
	0x01CF4988 BL 0x3090300
	0x01CF498C ADRP X8, 0x2259000
	0x01CF4990 LDR X8, [X8 + 0x8E0]
	0x01CF4994 MOV X27, X0
	0x01CF4998 LDR X8, [X8]
	0x01CF499C MOV X0, X8
	0x01CF49A0 BL 0x1B6EA0C
	0x01CF49A4 MOV X1, X27
	0x01CF49A8 MOV X2, X31
	0x01CF49AC MOV X26, X0
	0x01CF49B0 BL 0x3A9DAE4
	0x01CF49B4 CBZ X26, 0x1CF53B8
	0x01CF49B8 MOV X0, X26
	0x01CF49BC MOV X1, X31
	0x01CF49C0 BL 0x3A9D8EC
	0x01CF49C4 CBZ X0, 0x1CF53B8
	0x01CF49C8 MOV X1, X31
	0x01CF49CC MOV X26, X0
	0x01CF49D0 BL 0x3A9B084
	0x01CF49D4 CBZ X25, 0x1CF53B8
	0x01CF49D8 MOV X27, X0

ISIL:
	001 Move [X31-112], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X30
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0x2530000
	015 Move X22, 0x225B000
	016 Move W8, [X21+1756]
	017 Move X22, [X22+448]
	018 Move X20, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x225B000
	025 Move X0, [X0+448]
	026 Call 0x1B6F7F0
	027 Move W8, 1
	028 Move [X21+1756], W8
	029 Move W0, 1
	030 Move X1, X31
	031 Move W23, 1
	032 Call Assert.Check, X0
	033 Move X0, [X22]
	034 Move W21, [X20+36]
	035 Move S8, [X20+40]
	036 Move S9, [X20+44]
	037 Move S14, [X20+48]
	038 Move S13, [X20+52]
	039 Move S11, [X20+56]
	040 Move S10, [X20+60]
	041 Move W8, [X0+224]
	042 Move V12, [X20+64]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1B6F8F8
	046 Move X0, [X22]
	047 Move X8, [X0+184]
	048 Move X0, X19
	049 Move W1, W21
	050 Move V0, V8
	051 Move [X8+32], W23
	052 Move V1, V9
	053 Move V3, V13
	054 Move V4, V11
	055 Move V5, V10
	056 Move V6, V12
	057 Move X20, [X31+96]
	058 Move X19, [X31+104]
	059 Move X22, [X31+80]
	060 Move X21, [X31+88]
	061 Move X30, [X31+64]
	062 Move X23, [X31+72]
	063 Move D9, [X31+48]
	064 Move D8, [X31+56]
	065 Move D11, [X31+32]
	066 Move D10, [X31+40]
	067 Move D13, [X31+16]
	068 Move D12, [X31+24]
	069 Move V2, V14
	070 Move V14, [X31+112]
	071 Call NetworkVFX.RPC_PlayVFX, X0, X1, X2, X3
	072 Return 

