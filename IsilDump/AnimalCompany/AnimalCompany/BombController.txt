Type: AnimalCompany.BombController

Method: Fusion.TickTimer get__timerExplosion()

Disassembly:
	0x01DE6E2C MOV X0, X20
	0x01DE6E30 LDP X20, X19, [X31 + 0x20]
	0x01DE6E34 LDR X30, [X31 + 0x18]
	0x01DE6E38 LDP D9, D8, [X31 + 0x8]
	0x01DE6E3C FMOV S3, 1
	0x01DE6E40 MOV X1, X31
	0x01DE6E44 LDR V10, [X31], #0x30
	0x01DE6E48 B 0x1DC15C4
	0x01DE6E4C BL 0x1C16F20
	0x01DE6E50 BL 0x1C16F28
	0x01DE6E54 SUB X31, X31, 0x60
	0x01DE6E58 STR D14, [X31 + 0x10]
	0x01DE6E5C STP D13, D12, [X31 + 0x18]
	0x01DE6E60 STP D11, D10, [X31 + 0x28]
	0x01DE6E64 STP D9, D8, [X31 + 0x38]
	0x01DE6E68 STR X30, [X31 + 0x48]
	0x01DE6E6C STP X20, X19, [X31 + 0x50]
	0x01DE6E70 ADRP X20, 0x25F2000
	0x01DE6E74 LDRB W8, [X20 + 0xCA9]
	0x01DE6E78 MOV X19, X0
	0x01DE6E7C TBNZ X8, 0x0, 0x1DE6EA0
	0x01DE6E80 ADRP X0, 0x2312000
	0x01DE6E84 LDR X0, [X0 + 0xC40]
	0x01DE6E88 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move W0, [X8]
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0
	010 Move X0, 0x230E000
	011 Move X0, [X0+1456]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0x2313000
	016 Move X0, [X0+3440]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x2313000
	023 Move X0, [X0+3448]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: System.Void set__timerExplosion(Fusion.TickTimer value)

Disassembly:
	0x01DE6E8C ADRP X0, 0x230D000
	0x01DE6E90 LDR X0, [X0 + 0x598]
	0x01DE6E94 BL 0x1C16CF4
	0x01DE6E98 MOVZ W8, 0x1
	0x01DE6E9C STRB W8, [X20 + 0xCA9]
	0x01DE6EA0 MOV X0, X19
	0x01DE6EA4 MOV X1, X31
	0x01DE6EA8 STR X31, [X31 + 0x8]
	0x01DE6EAC BL 0x1DEA1C0
	0x01DE6EB0 LDR X0, [X19 + 0xD0]
	0x01DE6EB4 CBZ X0, 0x1DE7060
	0x01DE6EB8 MOV X1, X31
	0x01DE6EBC BL 0x3C3F58C
	0x01DE6EC0 LDR X8, [X19 + 0xC0]
	0x01DE6EC4 CBZ X8, 0x1DE7060
	0x01DE6EC8 ADRP X9, 0x2312000
	0x01DE6ECC LDR X9, [X9 + 0xC40]
	0x01DE6ED0 LDR V11, [X8 + 0x4C]
	0x01DE6ED4 MOV V8.16B, V0.16B
	0x01DE6ED8 MOV V9.16B, V1.16B
	0x01DE6EDC LDR X0, [X9]
	0x01DE6EE0 MOV V10.16B, V2.16B
	0x01DE6EE4 LDR W9, [X0 + 0xE0]
	0x01DE6EE8 CBNZ W9, 0x1DE6EF0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move [X8], W1
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 
	010 Move X0, 0x230E000
	011 Move X0, [X0+1456]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0x2313000
	016 Move X0, [X0+3440]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x2313000
	023 Move X0, [X0+3456]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: System.Void Awake()

Disassembly:
	0x01DE6EEC BL 0x1C16DFC
	0x01DE6EF0 ADRP X20, 0x230D000
	0x01DE6EF4 LDR X20, [X20 + 0x598]
	0x01DE6EF8 ADD X1, X31, 0x8
	0x01DE6EFC MOV X0, X19
	0x01DE6F00 MOV V0.16B, V8.16B
	0x01DE6F04 MOV V1.16B, V9.16B
	0x01DE6F08 MOV V2.16B, V10.16B
	0x01DE6F0C MOV V3.16B, V11.16B
	0x01DE6F10 MOV X2, X31
	0x01DE6F14 BL 0x1DE9804
	0x01DE6F18 TBZ X0, 0x0, 0x1DE6F24
	0x01DE6F1C MOV X0, X19
	0x01DE6F20 BL 0x1DE7064
	0x01DE6F24 LDR X0, [X20]
	0x01DE6F28 LDR X20, [X19 + 0x160]
	0x01DE6F2C LDR W8, [X0 + 0xE0]
	0x01DE6F30 CBNZ W8, 0x1DE6F38
	0x01DE6F34 BL 0x1C16DFC
	0x01DE6F38 MOV X0, X20
	0x01DE6F3C MOV X1, X31
	0x01DE6F40 MOV X2, X31
	0x01DE6F44 BL 0x3C3883C
	0x01DE6F48 TBZ X0, 0x0, 0x1DE7010
	0x01DE6F4C LDR X0, [X19 + 0xD0]
	0x01DE6F50 CBZ X0, 0x1DE7060
	0x01DE6F54 MOV X1, X31
	0x01DE6F58 BL 0x3C3F58C
	0x01DE6F5C MOV X0, X19
	0x01DE6F60 MOV X1, X31
	0x01DE6F64 MOV V8.16B, V0.16B
	0x01DE6F68 MOV V9.16B, V1.16B
	0x01DE6F6C MOV V10.16B, V2.16B
	0x01DE6F70 BL 0x1DEA5A0
	0x01DE6F74 MOV X0, X19
	0x01DE6F78 MOV X1, X31
	0x01DE6F7C MOV V11.16B, V0.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x25F3000
	005 Move W8, [X20+3233]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2313000
	012 Move X0, [X0+3464]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3233], W8
	016 Move X0, [X19+136]
	017 Compare X0, 0
	018 JumpIfEqual {46}
	019 Move X20, 0x2313000
	020 Move X20, [X20+3464]
	021 Move X1, X31
	022 Call Renderer.get_material, X0
	023 Move X8, [X20]
	024 Move X19, X0
	025 Move W9, [X8+224]
	026 Compare W9, 0
	027 JumpIfNotEqual {30}
	028 Move X0, X8
	029 Call 0x1C17DFC
	030 Compare X19, 0
	031 JumpIfEqual {46}
	032 Move X8, [X20]
	033 Move X0, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move S0, W31
	037 Move X8, [X8+184]
	038 Move S1, W31
	039 Move S2, W31
	040 Move S3, 1
	041 Move W1, [X8]
	042 Move X2, X31
	043 Move X30, [X31+32]
	044 Call Material.SetColor, X0, X1, X2
	045 Return 
	046 Call 0x1C17F20

Method: System.Void TriggerExplosion()

Disassembly:
	0x01DE6F80 MOV V12.16B, V1.16B

ISIL:
No ISIL was generated
Method: System.Void RPC_TriggerExplosion()

Disassembly:
	0x01DE6F84 MOV V13.16B, V2.16B
	0x01DE6F88 BL 0x1DEA4E0
	0x01DE6F8C MOV X0, X19
	0x01DE6F90 MOV X1, X31
	0x01DE6F94 MOV V14.16B, V0.16B
	0x01DE6F98 BL 0x1DEA4B8
	0x01DE6F9C FADD S0, S14, S0
	0x01DE6FA0 MOV X0, X19
	0x01DE6FA4 MOV X1, X31
	0x01DE6FA8 BL 0x1DEA540
	0x01DE6FAC MOV X0, X19
	0x01DE6FB0 MOV X1, X31
	0x01DE6FB4 BL 0x1DEA4E0
	0x01DE6FB8 LDR X0, [X19 + 0xC0]
	0x01DE6FBC CBZ X0, 0x1DE7060
	0x01DE6FC0 LDR V1, [X0 + 0x68]
	0x01DE6FC4 FCMP S0, S1
	0x01DE6FC8 B.GE 0x1DE7008
	0x01DE6FCC FSUB S0, S8, S11
	0x01DE6FD0 FSUB S1, S9, S12
	0x01DE6FD4 FSUB S2, S10, S13
	0x01DE6FD8 FMUL S0, S0, S0
	0x01DE6FDC FMUL S1, S1, S1
	0x01DE6FE0 FADD S0, S0, S1
	0x01DE6FE4 FMUL S1, S2, S2
	0x01DE6FE8 MOV X1, X31
	0x01DE6FEC FADD S8, S1, S0
	0x01DE6FF0 BL 0x1DEA4D4
	0x01DE6FF4 FCMP S8, S0
	0x01DE6FF8 B.PL 0x1DE7010
	0x01DE6FFC MOV X0, X19
	0x01DE7000 BL 0x1DE70E8
	0x01DE7004 B 0x1DE7010
	0x01DE7008 MOV X0, X19
	0x01DE700C BL 0x1DE6888
	0x01DE7010 MOV X0, X19
	0x01DE7014 BL 0x1DE64E0
	0x01DE7018 CMP W0, 0x2
	0x01DE701C B.NE 0x1DE7040
	0x01DE7020 LDR X20, [X19 + 0xE8]
	0x01DE7024 MOV X0, X19
	0x01DE7028 MOV X1, X31
	0x01DE702C BL 0x1DEA5A0
	0x01DE7030 CBZ X20, 0x1DE7060
	0x01DE7034 MOV X0, X20
	0x01DE7038 MOV X1, X31
	0x01DE703C BL 0x3BE13F8
	0x01DE7040 LDP X20, X19, [X31 + 0x50]
	0x01DE7044 LDR X30, [X31 + 0x48]
	0x01DE7048 LDP D9, D8, [X31 + 0x38]
	0x01DE704C LDP D11, D10, [X31 + 0x28]
	0x01DE7050 LDP D13, D12, [X31 + 0x18]
	0x01DE7054 LDR V14, [X31 + 0x10]
	0x01DE7058 ADD X31, X31, 0x60
	0x01DE705C RET
	0x01DE7060 BL 0x1C16F20
	0x01DE7064 STP X30, X19, [X31 - 0x10]!
	0x01DE7068 MOVZ W1, 0x3
	0x01DE706C MOV X19, X0
	0x01DE7070 BL 0x1DE6540
	0x01DE7074 FMOV S0, W31
	0x01DE7078 MOV X0, X19
	0x01DE707C BL 0x1DE6600
	0x01DE7080 LDR X9, [X19 + 0xC0]
	0x01DE7084 CBZ X9, 0x1DE70E0
	0x01DE7088 LDR X8, [X9 + 0x38]
	0x01DE708C CBZ X8, 0x1DE70E0
	0x01DE7090 LDR W10, [X8 + 0x18]
	0x01DE7094 CBZ W10, 0x1DE70E4
	0x01DE7098 LDR X10, [X9 + 0x58]
	0x01DE709C CBZ X10, 0x1DE70E0
	0x01DE70A0 LDR W11, [X10 + 0x18]
	0x01DE70A4 CBZ W11, 0x1DE70E4
	0x01DE70A8 LDR X9, [X9 + 0x60]
	0x01DE70AC CBZ X9, 0x1DE70E0
	0x01DE70B0 LDR W11, [X9 + 0x18]
	0x01DE70B4 CBZ W11, 0x1DE70E4
	0x01DE70B8 LDR X11, [X19]
	0x01DE70BC LDR V0, [X8 + 0x20]
	0x01DE70C0 LDR V1, [X10 + 0x20]
	0x01DE70C4 LDR V2, [X9 + 0x20]
	0x01DE70C8 LDR X3, [X11 + 0x2C8]
	0x01DE70CC LDR X2, [X11 + 0x2D0]
	0x01DE70D0 MOVZ W1, 0x1
	0x01DE70D4 MOV X0, X19
	0x01DE70D8 LDP X30, X19, [X31], #0x10
	0x01DE70DC BR X3
	0x01DE70E0 BL 0x1C16F20
	0x01DE70E4 BL 0x1C16F28
	0x01DE70E8 STP X30, X19, [X31 - 0x10]!
	0x01DE70EC MOVZ W1, 0x4
	0x01DE70F0 MOV X19, X0
	0x01DE70F4 BL 0x1DE6540
	0x01DE70F8 FMOV S0, W31
	0x01DE70FC MOV X0, X19
	0x01DE7100 MOV X1, X31
	0x01DE7104 BL 0x1DF38DC
	0x01DE7108 LDR X9, [X19 + 0xC0]
	0x01DE710C CBZ X9, 0x1DE7190
	0x01DE7110 LDR X8, [X9 + 0x38]
	0x01DE7114 CBZ X8, 0x1DE7190
	0x01DE7118 LDR W10, [X8 + 0x18]
	0x01DE711C CBZ W10, 0x1DE7194
	0x01DE7120 LDR X10, [X9 + 0x58]
	0x01DE7124 CBZ X10, 0x1DE7190
	0x01DE7128 LDR W11, [X10 + 0x18]
	0x01DE712C CMP W11, 0x1
	0x01DE7130 B.LS 0x1DE7194
	0x01DE7134 LDR X9, [X9 + 0x60]
	0x01DE7138 CBZ X9, 0x1DE7190
	0x01DE713C LDR W11, [X9 + 0x18]
	0x01DE7140 CMP W11, 0x1
	0x01DE7144 B.LS 0x1DE7194
	0x01DE7148 LDR X11, [X19]
	0x01DE714C LDR V0, [X8 + 0x20]
	0x01DE7150 LDR V1, [X10 + 0x24]
	0x01DE7154 LDR V2, [X9 + 0x24]
	0x01DE7158 LDR X8, [X11 + 0x2C8]
	0x01DE715C LDR X2, [X11 + 0x2D0]
	0x01DE7160 MOV X0, X19
	0x01DE7164 MOV W1, W31
	0x01DE7168 BLR X8
	0x01DE716C MOV X0, X19
	0x01DE7170 MOV X1, X31
	0x01DE7174 BL 0x1DEA5A0
	0x01DE7178 LDR X8, [X19]
	0x01DE717C MOV X0, X19
	0x01DE7180 LDR X2, [X8 + 0x378]
	0x01DE7184 LDR X1, [X8 + 0x380]
	0x01DE7188 LDP X30, X19, [X31], #0x10
	0x01DE718C BR X2
	0x01DE7190 BL 0x1C16F20
	0x01DE7194 BL 0x1C16F28
	0x01DE7198 SUB X31, X31, 0x80
	0x01DE719C STP X30, X23, [X31 + 0x50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x25F3000
	006 Move W8, [X20+3234]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x2313000
	013 Move X0, [X0+3464]
	014 Call 0x1C17CF4
	015 Move X0, 0x2311000
	016 Move X0, [X0+2680]
	017 Call 0x1C17CF4
	018 Move X0, 0x2313000
	019 Move X0, [X0+3472]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3234], W8
	023 Move W8, [X19+88]
	024 Compare W8, 0
	025 JumpIfEqual {84}
	026 Move [X19+88], W31
	027 Move X0, [X19+64]
	028 Compare X0, 0
	029 JumpIfEqual {48}
	030 Move W8, [X0+96]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 2
	033 Compare TEMP, 2
	034 JumpIfEqual {48}
	035 Move X1, X31
	036 Call NetworkObject.get_HasStateAuthority, X0
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {48}
	041 Move X0, [X19+56]
	042 Move S0, 3
	043 Move X1, X31
	044 Call TickTimer.CreateFromSeconds, X0, V0
	045 And X1, X0, 0
	046 Move X0, X19
	047 Call BombController.set__timerExplosion, X0, X1
	048 Move X0, [X19+136]
	049 Compare X0, 0
	050 JumpIfEqual {172}
	051 Move X21, 0x2312000
	052 Move X21, [X21+3464]
	053 Move X1, X31
	054 Call Renderer.get_material, X0
	055 Move X8, [X21]
	056 Move X20, X0
	057 Move W9, [X8+224]
	058 Compare W9, 0
	059 JumpIfNotEqual {63}
	060 Move X0, X8
	061 Call 0x1C17DFC
	062 Move X8, [X21]
	063 Compare X20, 0
	064 JumpIfEqual {172}
	065 Move X8, [X8+184]
	066 Move X0, X20
	067 Move X2, X31
	068 Move S2, [X8+12]
	069 Move S3, [X8+16]
	070 Move S0, [X8+4]
	071 Move S1, [X8+8]
	072 Move W1, [X8]
	073 Call Material.SetColor, X0, X1, X2
	074 Move X0, [X19+144]
	075 Compare X0, 0
	076 JumpIfEqual {172}
	077 Move X20, [X31+16]
	078 Move X19, [X31+24]
	079 Move X1, X31
	080 Move X30, [X31+32]
	081 Move X21, [X31+40]
	082 Call AudioSource.Play, X0
	083 Return 
	084 Move X20, 0x2310000
	085 Move X20, [X20+2680]
	086 Move X0, [X20]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Move X0, X19
	092 Move X1, X31
	093 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	094 Move X0, [X19+56]
	095 Compare X0, 0
	096 JumpIfEqual {172}
	097 Move X1, X31
	098 Call NetworkRunner.get_Stage, X0
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X20, [X31+16]
	101 Move X19, [X31+24]
	102 Move X30, [X31+32]
	103 Move X21, [X31+40]
	104 Return 
	105 Move X0, [X19+64]
	106 Compare X0, 0
	107 JumpIfEqual {172}
	108 Move X1, X31
	109 Call NetworkObject.GetLocalAuthorityMask, X0
	110 And W31, W0, 7
	111 Move X8, [X19+56]
	112 Compare X8, 0
	113 JumpIfEqual {172}
	114 Move X0, [X8+80]
	115 Compare X0, 0
	116 JumpIfEqual {172}
	117 Move X1, X31
	118 Call Simulation.HasAnyActiveConnections, X0
	119 Move TEMP, X0
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfNotEqual {27}
	123 Move X8, [X19+56]
	124 Compare X8, 0
	125 JumpIfEqual {172}
	126 Move X0, [X8+80]
	127 Move W1, 8
	128 Move X2, X31
	129 Call SimulationMessage.Allocate, X0, X1
	130 Move X8, [X19+64]
	131 Compare X8, 0
	132 JumpIfEqual {172}
	133 Move X8, [X8+32]
	134 Move X20, X0
	135 Compare X8, 0
	136 JumpIfEqual {156}
	137 Move W0, [X8]
	138 Move X0, [X20]
	139 Move X19, [X19+64]
	140 Move W8, [X0+224]
	141 Compare W8, 0
	142 JumpIfNotEqual {144}
	143 Call 0x1C17DFC
	144 Move X8, 0x2312000
	145 Move X8, [X8+3472]
	146 Move X1, X19
	147 Move X20, [X31+16]
	148 Move X19, [X31+24]
	149 Move W2, 7
	150 Move X0, [X8]
	151 Move X3, X31
	152 Move X30, [X31+32]
	153 Move X21, [X31+40]
	154 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	155 Return 
	156 Move X0, X31
	157 Move W1, [X19+104]
	158 Move W2, 1
	159 Move X3, X31
	160 Call RpcHeader.Create, X0, X1, X2
	161 Move [X20+28], X0
	162 Compare X20, 0
	163 JumpIfEqual {172}
	164 Move W8, 64
	165 Move [X20+12], W8
	166 Move X0, [X19+56]
	167 Compare X0, 0
	168 JumpIfEqual {172}
	169 Move X1, X20
	170 Move X2, X31
	171 Call NetworkRunner.SendRpc, X0, X1
	172 Call 0x1C17F20

Method: System.Void FixedUpdateNetwork()

Disassembly:
	0x01DE71A0 STP X22, X21, [X31 + 0x60]
	0x01DE71A4 STP X20, X19, [X31 + 0x70]
	0x01DE71A8 ADRP X20, 0x25F1000
	0x01DE71AC LDRB W8, [X20 + 0xCAB]
	0x01DE71B0 MOV X19, X0
	0x01DE71B4 TBNZ X8, 0x0, 0x1DE71E4
	0x01DE71B8 ADRP X0, 0x230F000
	0x01DE71BC LDR X0, [X0 + 0xF08]
	0x01DE71C0 BL 0x1C16CF4
	0x01DE71C4 ADRP X0, 0x230F000
	0x01DE71C8 LDR X0, [X0 + 0xB58]
	0x01DE71CC BL 0x1C16CF4
	0x01DE71D0 ADRP X0, 0x230F000
	0x01DE71D4 LDR X0, [X0 + 0xB60]
	0x01DE71D8 BL 0x1C16CF4
	0x01DE71DC MOVZ W8, 0x1
	0x01DE71E0 STRB W8, [X20 + 0xCAB]
	0x01DE71E4 LDR X0, [X19 + 0xD0]
	0x01DE71E8 CBZ X0, 0x1DE72D8
	0x01DE71EC ADRP X23, 0x230F000
	0x01DE71F0 ADRP X22, 0x230F000
	0x01DE71F4 LDR X20, [X19 + 0x38]
	0x01DE71F8 LDR X21, [X19 + 0x1B8]
	0x01DE71FC LDR X23, [X23 + 0xB58]
	0x01DE7200 LDR X22, [X22 + 0xB60]
	0x01DE7204 MOV X1, X31
	0x01DE7208 BL 0x3C3F58C
	0x01DE720C LDR X1, [X23]
	0x01DE7210 ADD X0, X31, 0x20
	0x01DE7214 STP X31, X31, [X31 + 0x20]
	0x01DE7218 BL 0x243BFEC
	0x01DE721C ADRP X23, 0x25F1000
	0x01DE7220 LDRB W8, [X23 + 0x793]
	0x01DE7224 CBNZ W8, 0x1DE723C
	0x01DE7228 ADRP X0, 0x230D000
	0x01DE722C LDR X0, [X0 + 0x5A8]
	0x01DE7230 BL 0x1C16CF4
	0x01DE7234 MOVZ W8, 0x1
	0x01DE7238 STRB W8, [X23 + 0x793]
	0x01DE723C ADRP X8, 0x230D000
	0x01DE7240 LDR X8, [X8 + 0x5A8]
	0x01DE7244 LDR X1, [X22]
	0x01DE7248 ADD X0, X31, 0x8
	0x01DE724C LDR X8, [X8]
	0x01DE7250 LDR X8, [X8 + 0xB8]
	0x01DE7254 LDP S0, S1, [X8]
	0x01DE7258 LDP S2, S3, [X8 + 0x8]
	0x01DE725C STP X31, X31, [X31 + 0x8]
	0x01DE7260 STR W31, [X31 + 0x18]
	0x01DE7264 BL 0x2437C9C
	0x01DE7268 CBZ X20, 0x1DE72D8
	0x01DE726C ADRP X8, 0x230F000
	0x01DE7270 LDR X8, [X8 + 0xF08]
	0x01DE7274 LDP X2, X3, [X31 + 0x20]
	0x01DE7278 LDUR V0, [X31 + 0x8]
	0x01DE727C LDR W9, [X31 + 0x18]
	0x01DE7280 LDR X8, [X8]
	0x01DE7284 ADD X4, X31, 0x30
	0x01DE7288 MOV X0, X20
	0x01DE728C MOV X1, X21
	0x01DE7290 MOV X5, X31
	0x01DE7294 MOV X6, X31
	0x01DE7298 MOV W7, W31
	0x01DE729C STR V0, [X31 + 0x3]
	0x01DE72A0 STR W9, [X31 + 0x40]
	0x01DE72A4 STR X8, [X31]
	0x01DE72A8 BL 0x222B8DC
	0x01DE72AC LDR X8, [X19]
	0x01DE72B0 MOVZ W1, 0x1
	0x01DE72B4 MOV X0, X19
	0x01DE72B8 LDR X9, [X8 + 0x318]
	0x01DE72BC LDR X2, [X8 + 0x320]
	0x01DE72C0 BLR X9
	0x01DE72C4 LDP X20, X19, [X31 + 0x70]
	0x01DE72C8 LDP X22, X21, [X31 + 0x60]
	0x01DE72CC LDP X30, X23, [X31 + 0x50]
	0x01DE72D0 ADD X31, X31, 0x80
	0x01DE72D4 RET
	0x01DE72D8 BL 0x1C16F20
	0x01DE72DC STP X30, X19, [X31 - 0x10]!
	0x01DE72E0 MOV X1, X31
	0x01DE72E4 MOV X19, X0
	0x01DE72E8 BL 0x1DE8BF8
	0x01DE72EC LDR X0, [X19 + 0x40]
	0x01DE72F0 CBZ X0, 0x1DE732C
	0x01DE72F4 MOV X1, X31
	0x01DE72F8 BL 0x1E93668
	0x01DE72FC TBZ X0, 0x0, 0x1DE7324
	0x01DE7300 MOVZ W1, 0x5
	0x01DE7304 MOV X0, X19
	0x01DE7308 BL 0x1DE6540

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+80], X30
	003 Move [X31+96], X22
	004 Move [X31+104], X21
	005 Move [X31+112], X20
	006 Move [X31+120], X19
	007 Move X20, 0x25F2000
	008 Move W8, [X20+3235]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2310000
	015 Move X0, [X0+2904]
	016 Call 0x1C17CF4
	017 Move X0, 0x2310000
	018 Move X0, [X0+2912]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3235], W8
	022 Move X0, X19
	023 Move X1, X31
	024 Call NetworkBehaviour.FixedUpdateNetwork, X0
	025 Move W8, [X19+160]
	026 Compare W8, 0
	027 JumpIfNotEqual {104}
	028 Move X0, X19
	029 Call BombController.get__timerExplosion, X0
	030 Move [X31+88], W0
	031 Move X1, [X19+56]
	032 Add X0, X31, 88
	033 Move X2, X31
	034 Call TickTimer.Expired, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {104}
	039 Move X20, [X19+56]
	040 Move X21, [X19+152]
	041 Move X0, X19
	042 Move X1, X31
	043 Call Component.get_transform, X0
	044 Compare X0, 0
	045 JumpIfEqual {111}
	046 Move X1, X31
	047 Call Transform.get_position, X0
	048 Move X8, 0x2310000
	049 Move X8, [X8+2904]
	050 Add X0, X31, 64
	051 Move [X31+64], X31
	052 Move [X31+72], X31
	053 Move X1, [X8]
	054 Call Nullable`1<Vector3>..ctor, X0, X1
	055 Move X22, 0x25F2000
	056 Move W8, [X22+1939]
	057 Compare W8, 0
	058 JumpIfNotEqual {64}
	059 Move X0, 0x230E000
	060 Move X0, [X0+1448]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X22+1939], W8
	064 Move X8, 0x230E000
	065 Move X8, [X8+1448]
	066 Move X9, 0x2310000
	067 Add X0, X31, 40
	068 Move X8, [X8]
	069 Move X8, [X8+184]
	070 Move X9, [X9+2912]
	071 Move S0, [X8]
	072 Move S1, [X8+4]
	073 Move S2, [X8+8]
	074 Move S3, [X8+12]
	075 Move X1, [X9]
	076 Move [X31+40], X31
	077 Move [X31+48], X31
	078 Move [X31+56], W31
	079 Call Nullable`1<Quaternion>..ctor, X0, X1
	080 Compare X20, 0
	081 JumpIfEqual {111}
	082 NotImplemented "Instruction LDUR not yet implemented."
	083 Move W8, [X31+56]
	084 Move X2, [X31+64]
	085 Move X3, [X31+72]
	086 Add X4, X31, 16
	087 Move X0, X20
	088 Move X1, X21
	089 Move X5, X31
	090 Move X6, X31
	091 Move W7, W31
	092 Move [X31+1], V0
	093 Move [X31+32], W8
	094 Move [X31], X31
	095 Call NetworkRunner.Spawn, X0, X1, X2, X3, X4, X5, X6
	096 Move X0, [X19+56]
	097 Compare X0, 0
	098 JumpIfEqual {111}
	099 Move X1, [X19+64]
	100 Move X2, X31
	101 Call NetworkRunner.Despawn, X0, X1
	102 Move W8, 1
	103 Move [X19+160], W8
	104 Move X20, [X31+112]
	105 Move X19, [X31+120]
	106 Move X22, [X31+96]
	107 Move X21, [X31+104]
	108 Move X30, [X31+80]
	109 Add X31, X31, 128
	110 Return 
	111 Call 0x1C17F20

Method: System.Void Hit(System.Int32 damage, UnityEngine.Vector3 hitPosition, AnimalCompany.RandomSFX hitSFX, AnimalCompany.RandomSFX deathSFX, UnityEngine.Vector3 force, System.String instigator, Fusion.NetworkBehaviourId instigatorId)

Disassembly:
	0x01DE730C LDR X0, [X19 + 0xE8]
	0x01DE7310 CBZ X0, 0x1DE732C
	0x01DE7314 MOVZ W1, 0x1
	0x01DE7318 MOV X2, X31
	0x01DE731C LDP X30, X19, [X31], #0x10
	0x01DE7320 B 0x3BE17B4
	0x01DE7324 LDP X30, X19, [X31], #0x10
	0x01DE7328 RET
	0x01DE732C BL 0x1C16F20
	0x01DE7330 STP X30, X21, [X31 - 0x20]!
	0x01DE7334 STP X20, X19, [X31 + 0x10]
	0x01DE7338 ADRP X21, 0x25F1000
	0x01DE733C ADRP X20, 0x2311000
	0x01DE7340 LDRB W8, [X21 + 0xCAC]
	0x01DE7344 LDR X20, [X20 + 0xBC0]
	0x01DE7348 MOV X19, X0
	0x01DE734C TBNZ X8, 0x0, 0x1DE7364
	0x01DE7350 ADRP X0, 0x2311000
	0x01DE7354 LDR X0, [X0 + 0xBC0]
	0x01DE7358 BL 0x1C16CF4
	0x01DE735C MOVZ W8, 0x1
	0x01DE7360 STRB W8, [X21 + 0xCAC]
	0x01DE7364 MOV X0, X19
	0x01DE7368 MOV X1, X31
	0x01DE736C BL 0x1DEA894
	0x01DE7370 LDR X0, [X20]
	0x01DE7374 LDR W8, [X0 + 0xE0]
	0x01DE7378 CBNZ W8, 0x1DE7384
	0x01DE737C BL 0x1C16DFC
	0x01DE7380 LDR X0, [X20]
	0x01DE7384 LDR X8, [X0 + 0xB8]
	0x01DE7388 MOV X0, X31
	0x01DE738C LDP S0, S1, [X8 + 0xA0]
	0x01DE7390 LDP S2, S3, [X8 + 0xA8]
	0x01DE7394 BL 0x3C0D030
	0x01DE7398 LDR X0, [X19 + 0xD0]
	0x01DE739C CBZ X0, 0x1DE7400
	0x01DE73A0 MOV X1, X31
	0x01DE73A4 BL 0x3C3F58C
	0x01DE73A8 LDR X8, [X19 + 0xC0]
	0x01DE73AC CBZ X8, 0x1DE7400
	0x01DE73B0 LDR V3, [X8 + 0x48]
	0x01DE73B4 MOV X0, X31
	0x01DE73B8 BL 0x3C0CB98

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x25F2000
	007 Move X20, 0x230D000
	008 Move W8, [X21+3236]
	009 Move X20, [X20+1432]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x230D000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+3236], W8
	020 Move X0, [X20]
	021 Move X20, [X19+56]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X31
	028 Move X2, X31
	029 Call Object.op_Inequality, X0, X1
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {56}
	034 Move X0, [X19+56]
	035 Compare X0, 0
	036 JumpIfEqual {62}
	037 Move X1, [X19+64]
	038 Move X2, X31
	039 Call NetworkRunner.Exists, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {56}
	044 Move X0, X19
	045 Call BombController.get__timerExplosion, X0
	046 Move [X31+8], W0
	047 Add X0, X31, 8
	048 Move X1, X31
	049 Call TickTimer.get_IsRunning, X0
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {56}
	054 Move X0, X19
	055 Call BombController.RPC_TriggerExplosion, X0
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X30, [X31+16]
	059 Move X21, [X31+24]
	060 Add X31, X31, 48
	061 Return 
	062 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01DE73BC LDR X8, [X20]
	0x01DE73C0 MOV X0, X31

ISIL:
	001 Move X1, X31
	002 Call NetworkBehaviour..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x01DE73C4 LDR X8, [X8 + 0xB8]
	0x01DE73C8 LDP S0, S1, [X8 + 0xB0]
	0x01DE73CC LDP S2, S3, [X8 + 0xB8]
	0x01DE73D0 BL 0x3C0D030
	0x01DE73D4 LDR X0, [X19 + 0xD0]
	0x01DE73D8 CBZ X0, 0x1DE7400
	0x01DE73DC MOV X1, X31
	0x01DE73E0 BL 0x3C3F58C
	0x01DE73E4 LDR X8, [X19 + 0xC0]
	0x01DE73E8 CBZ X8, 0x1DE7400
	0x01DE73EC LDR V3, [X8 + 0x4C]
	0x01DE73F0 LDP X20, X19, [X31 + 0x10]
	0x01DE73F4 MOV X0, X31
	0x01DE73F8 LDP X30, X21, [X31], #0x20
	0x01DE73FC B 0x3C0CB98
	0x01DE7400 BL 0x1C16F20
	0x01DE7404 STP X30, X21, [X31 - 0x20]!
	0x01DE7408 STP X20, X19, [X31 + 0x10]
	0x01DE740C ADRP X21, 0x25F1000
	0x01DE7410 ADRP X20, 0x2310000
	0x01DE7414 LDRB W8, [X21 + 0xCAD]
	0x01DE7418 LDR X20, [X20 + 0x860]
	0x01DE741C MOV X19, X0
	0x01DE7420 TBNZ X8, 0x0, 0x1DE7438
	0x01DE7424 ADRP X0, 0x2310000
	0x01DE7428 LDR X0, [X0 + 0x860]
	0x01DE742C BL 0x1C16CF4
	0x01DE7430 MOVZ W8, 0x1
	0x01DE7434 STRB W8, [X21 + 0xCAD]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x25F2000
	006 Move X21, 0x2310000
	007 Move X19, 0x2312000
	008 Move W8, [X20+3237]
	009 Move X21, [X21+3208]
	010 Move X19, [X19+3464]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x2312000
	016 Move X0, [X0+3464]
	017 Call 0x1C17CF4
	018 Move X0, 0x2310000
	019 Move X0, [X0+3208]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3237], W8
	023 Move X0, [X21]
	024 Move X1, X31
	025 Call Shader.PropertyToID, X0
	026 Move X8, [X19]
	027 Move X9, -19902464
	028 Move V0, [X9+233]
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X8, [X8+184]
	032 Move [X8], W0
	033 Move [X8+4], V0
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return 

Method: System.Void CopyBackingFieldsToState(System.Boolean param_0)

Disassembly:
	0x01DE7438 FMOV V0.2S, 0x0
	0x01DE743C STR D0, [X19 + 0x1C0]

ISIL:
	001 Move W1, [X0+128]
	002 Call BombController.set__timerExplosion, X0, X1
	003 Return 

Method: System.Void CopyStateToBackingFields()

Disassembly:
	0x01DE7440 LDR X0, [X20]
	0x01DE7444 LDR W8, [X0 + 0xE0]
	0x01DE7448 CBNZ W8, 0x1DE7450
	0x01DE744C BL 0x1C16DFC
	0x01DE7450 MOV X0, X19
	0x01DE7454 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call BombController.get__timerExplosion, X0
	005 Move [X19+128], W0
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Return 

Method: System.Void RPC_TriggerExplosion@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01DE7458 MOV X1, X31
	0x01DE745C LDP X30, X21, [X31], #0x20
	0x01DE7460 B 0x1DEAEA0
	0x01DE7464 STP X30, X19, [X31 - 0x10]!
	0x01DE7468 AND W1, W1, 0x1
	0x01DE746C MOV X2, X31
	0x01DE7470 MOV X19, X0
	0x01DE7474 BL 0x1DEB2A4
	0x01DE7478 LDR W1, [X19 + 0x1A4]
	0x01DE747C MOV X0, X19
	0x01DE7480 BL 0x1DE6540
	0x01DE7484 LDR V0, [X19 + 0x1A8]
	0x01DE7488 MOV X0, X19
	0x01DE748C LDP X30, X19, [X31], #0x10
	0x01DE7490 B 0x1DE6600
	0x01DE7494 STP X30, X19, [X31 - 0x10]!
	0x01DE7498 MOV X1, X31
	0x01DE749C MOV X19, X0
	0x01DE74A0 BL 0x1DEB39C
	0x01DE74A4 MOV X0, X19
	0x01DE74A8 BL 0x1DE64E0
	0x01DE74AC STR W0, [X19 + 0x1A4]
	0x01DE74B0 MOV X0, X19
	0x01DE74B4 BL 0x1DE65A0
	0x01DE74B8 STR S0, [X19 + 0x1A8]
	0x01DE74BC LDP X30, X19, [X31], #0x10
	0x01DE74C0 RET
	0x01DE74C4 STR X30, [X31 - 0x30]!
	0x01DE74C8 STP X22, X21, [X31 + 0x10]
	0x01DE74CC STP X20, X19, [X31 + 0x20]
	0x01DE74D0 ADRP X22, 0x25F1000
	0x01DE74D4 LDRB W8, [X22 + 0xCAE]
	0x01DE74D8 MOV W20, W1
	0x01DE74DC MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x25F2000
	005 Move W8, [X20+3238]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2312000
	012 Move X0, [X0+3464]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3238], W8
	016 Compare X19, 0
	017 JumpIfEqual {39}
	018 Move X9, 0x2312000
	019 Move X9, [X9+3464]
	020 Move W8, 1
	021 Move [X19+88], W8
	022 Move X8, [X19]
	023 Move X1, [X9]
	024 Move W10, [X8+304]
	025 Move W9, [X1+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, [X8+200]
	028 Add X8, X8, X9
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Call BombController.RPC_TriggerExplosion, X0
	036 Return 
	037 Move X0, X19
	038 Call 0x1C181E0
	039 Call 0x1C17F20

