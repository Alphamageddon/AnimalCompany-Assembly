Type: AnimalCompany.UpdateAvatarItemsAction

Method: System.Void .ctor(System.Collections.Generic.IEnumerable`1<AnimalCompany.API.ApiAvatarItem> items)

Disassembly:
	0x01D3B728 LDP X22, X21, [X31 + 0x10]
	0x01D3B72C MOV X3, X31
	0x01D3B730 LDP X30, X23, [X31], #0x30
	0x01D3B734 B 0x35C55C8
	0x01D3B738 LDRB W0, [X0 + 0x10]
	0x01D3B73C RET
	0x01D3B740 AND W8, W1, 0x1
	0x01D3B744 STRB W8, [X0 + 0x10]
	0x01D3B748 RET
	0x01D3B74C STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+24], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void Execute(AnimalCompany.AppState state)

Disassembly:
	0x01D3B750 LDR X8, [X0]
	0x01D3B754 AND W1, W1, 0x1
	0x01D3B758 MOV X19, X0
	0x01D3B75C LDP X9, X2, [X8 + 0x188]
	0x01D3B760 BLR X9
	0x01D3B764 MOV X0, X19
	0x01D3B768 LDP X30, X19, [X31], #0x10
	0x01D3B76C RET
	0x01D3B770 STR X30, [X31 - 0x40]!
	0x01D3B774 STP X24, X23, [X31 + 0x10]
	0x01D3B778 STP X22, X21, [X31 + 0x20]
	0x01D3B77C STP X20, X19, [X31 + 0x30]
	0x01D3B780 ADRP X20, 0x269D000
	0x01D3B784 LDRB W8, [X20 + 0x712]
	0x01D3B788 MOV X19, X0
	0x01D3B78C TBNZ X8, 0x0, 0x1D3B7EC
	0x01D3B790 ADRP X0, 0x23B8000
	0x01D3B794 LDR X0, [X0 + 0xEA8]
	0x01D3B798 BL 0x1C16CF4
	0x01D3B79C ADRP X0, 0x23B8000
	0x01D3B7A0 LDR X0, [X0 + 0xEB0]
	0x01D3B7A4 BL 0x1C16CF4
	0x01D3B7A8 ADRP X0, 0x23B8000
	0x01D3B7AC LDR X0, [X0 + 0xEB8]
	0x01D3B7B0 BL 0x1C16CF4
	0x01D3B7B4 ADRP X0, 0x23B8000
	0x01D3B7B8 LDR X0, [X0 + 0xEC0]
	0x01D3B7BC BL 0x1C16CF4
	0x01D3B7C0 ADRP X0, 0x23B8000
	0x01D3B7C4 LDR X0, [X0 + 0x838]
	0x01D3B7C8 BL 0x1C16CF4
	0x01D3B7CC ADRP X0, 0x23B8000
	0x01D3B7D0 LDR X0, [X0 + 0xEC8]
	0x01D3B7D4 BL 0x1C16CF4
	0x01D3B7D8 ADRP X0, 0x23B8000
	0x01D3B7DC LDR X0, [X0 + 0x848]
	0x01D3B7E0 BL 0x1C16CF4
	0x01D3B7E4 MOVZ W8, 0x1
	0x01D3B7E8 STRB W8, [X20 + 0x712]
	0x01D3B7EC MOV X0, X19
	0x01D3B7F0 MOV X1, X31
	0x01D3B7F4 BL 0x33BE520
	0x01D3B7F8 CBZ X0, 0x1D3B8F4
	0x01D3B7FC LDR X8, [X0]
	0x01D3B800 ADRP X21, 0x23B8000
	0x01D3B804 LDR X21, [X21 + 0xEC0]
	0x01D3B808 ADRP X22, 0x23B8000
	0x01D3B80C LDR X9, [X8 + 0x688]
	0x01D3B810 LDR X2, [X8 + 0x690]
	0x01D3B814 ADRP X23, 0x23B8000
	0x01D3B818 ADRP X24, 0x23B8000
	0x01D3B81C LDR X22, [X22 + 0xEA8]
	0x01D3B820 LDR X23, [X23 + 0xEB0]
	0x01D3B824 LDR X24, [X24 + 0xEB8]
	0x01D3B828 MOVZ W1, 0x24
	0x01D3B82C MOV X20, X0
	0x01D3B830 BLR X9
	0x01D3B834 LDR X8, [X21]
	0x01D3B838 MOV X21, X0
	0x01D3B83C MOV X0, X8
	0x01D3B840 BL 0x1C16F10
	0x01D3B844 LDR X2, [X22]
	0x01D3B848 MOV X1, X19
	0x01D3B84C MOV X3, X31
	0x01D3B850 MOV X22, X0
	0x01D3B854 BL 0x2D30578
	0x01D3B858 LDR X2, [X23]
	0x01D3B85C MOV X0, X21
	0x01D3B860 MOV X1, X22
	0x01D3B864 BL 0x21CF224
	0x01D3B868 LDR X1, [X24]
	0x01D3B86C BL 0x21D577C
	0x01D3B870 CBZ X0, 0x1D3B8F4
	0x01D3B874 LDR X21, [X0 + 0x18]
	0x01D3B878 MOV X19, X0
	0x01D3B87C MOV X0, X20
	0x01D3B880 BL 0x1D35CD4
	0x01D3B884 MOV X20, X0
	0x01D3B888 CBZ X21, 0x1D3B8DC
	0x01D3B88C ADRP X8, 0x23B8000
	0x01D3B890 LDR X8, [X8 + 0x838]
	0x01D3B894 ADRP X21, 0x23B8000
	0x01D3B898 ADRP X22, 0x23B8000
	0x01D3B89C MOV X1, X19
	0x01D3B8A0 LDR X0, [X8]
	0x01D3B8A4 LDR X21, [X21 + 0xEC8]
	0x01D3B8A8 LDR X22, [X22 + 0x848]
	0x01D3B8AC MOV X2, X31
	0x01D3B8B0 BL 0x3227FF8
	0x01D3B8B4 LDR X1, [X21]
	0x01D3B8B8 LDR X3, [X22]
	0x01D3B8BC MOV X2, X0
	0x01D3B8C0 MOV X0, X20
	0x01D3B8C4 LDP X20, X19, [X31 + 0x30]
	0x01D3B8C8 LDP X22, X21, [X31 + 0x20]
	0x01D3B8CC LDP X24, X23, [X31 + 0x10]
	0x01D3B8D0 MOV X4, X31
	0x01D3B8D4 LDR X30, [X31], #0x40
	0x01D3B8D8 B 0x32277C4
	0x01D3B8DC MOV X0, X20
	0x01D3B8E0 LDP X20, X19, [X31 + 0x30]
	0x01D3B8E4 LDP X22, X21, [X31 + 0x20]
	0x01D3B8E8 LDP X24, X23, [X31 + 0x10]
	0x01D3B8EC LDR X30, [X31], #0x40
	0x01D3B8F0 RET
	0x01D3B8F4 BL 0x1C16F20
	0x01D3B8F8 STR X30, [X31 - 0x20]!
	0x01D3B8FC STP X20, X19, [X31 + 0x10]
	0x01D3B900 ADRP X20, 0x269D000
	0x01D3B904 LDRB W8, [X20 + 0x713]
	0x01D3B908 MOV X19, X0
	0x01D3B90C TBNZ X8, 0x0, 0x1D3B948
	0x01D3B910 ADRP X0, 0x23B8000
	0x01D3B914 LDR X0, [X0 + 0xED0]
	0x01D3B918 BL 0x1C16CF4
	0x01D3B91C ADRP X0, 0x23B8000
	0x01D3B920 LDR X0, [X0 + 0xED8]
	0x01D3B924 BL 0x1C16CF4
	0x01D3B928 ADRP X0, 0x23B8000
	0x01D3B92C LDR X0, [X0 + 0xEE0]
	0x01D3B930 BL 0x1C16CF4
	0x01D3B934 ADRP X0, 0x23B8000
	0x01D3B938 LDR X0, [X0 + 0xEE8]
	0x01D3B93C BL 0x1C16CF4
	0x01D3B940 MOVZ W8, 0x1
	0x01D3B944 STRB W8, [X20 + 0x713]
	0x01D3B948 CBZ X19, 0x1D3B9F8
	0x01D3B94C LDR X8, [X19]
	0x01D3B950 MOV X0, X19
	0x01D3B954 LDP X9, X1, [X8 + 0x1A8]
	0x01D3B958 BLR X9
	0x01D3B95C CBZ X0, 0x1D3B9F8
	0x01D3B960 ADRP X8, 0x23B8000
	0x01D3B964 LDR X8, [X8 + 0xED0]
	0x01D3B968 MOVZ W2, 0x5
	0x01D3B96C MOV X3, X31
	0x01D3B970 MOV X19, X0
	0x01D3B974 LDR X1, [X8]
	0x01D3B978 BL 0x322BD40
	0x01D3B97C TBZ X0, 0x1F, 0x1D3B9C0
	0x01D3B980 ADRP X8, 0x23B8000
	0x01D3B984 LDR X8, [X8 + 0xEE0]
	0x01D3B988 MOVZ W2, 0x5
	0x01D3B98C MOV X0, X19
	0x01D3B990 MOV X3, X31
	0x01D3B994 LDR X1, [X8]
	0x01D3B998 BL 0x322BD40
	0x01D3B99C TBZ X0, 0x1F, 0x1D3B9C0
	0x01D3B9A0 ADRP X8, 0x23B8000
	0x01D3B9A4 LDR X8, [X8 + 0xEE8]
	0x01D3B9A8 MOVZ W2, 0x5
	0x01D3B9AC MOV X0, X19
	0x01D3B9B0 MOV X3, X31
	0x01D3B9B4 LDR X1, [X8]
	0x01D3B9B8 BL 0x322BD40
	0x01D3B9BC TBNZ X0, 0x1F, 0x1D3B9D0
	0x01D3B9C0 MOVZ W0, 0x1
	0x01D3B9C4 LDP X20, X19, [X31 + 0x10]
	0x01D3B9C8 LDR X30, [X31], #0x20
	0x01D3B9CC RET
	0x01D3B9D0 ADRP X8, 0x23B8000
	0x01D3B9D4 LDR X8, [X8 + 0xED8]
	0x01D3B9D8 MOVZ W2, 0x5
	0x01D3B9DC MOV X0, X19
	0x01D3B9E0 MOV X3, X31
	0x01D3B9E4 LDR X1, [X8]
	0x01D3B9E8 BL 0x322BD40
	0x01D3B9EC ORN W8, W31, W0, 0x0
	0x01D3B9F0 UBFM W0, W8, 0x1F, 0x1F
	0x01D3B9F4 B 0x1D3B9C4
	0x01D3B9F8 BL 0x1C16F20
	0x01D3B9FC STR X30, [X31 - 0x40]!
	0x01D3BA00 STP X24, X23, [X31 + 0x10]
	0x01D3BA04 STP X22, X21, [X31 + 0x20]
	0x01D3BA08 STP X20, X19, [X31 + 0x30]
	0x01D3BA0C ADRP X21, 0x269D000
	0x01D3BA10 LDRB W8, [X21 + 0x715]
	0x01D3BA14 MOV X19, X1
	0x01D3BA18 MOV X20, X0
	0x01D3BA1C TBNZ X8, 0x0, 0x1D3BA88
	0x01D3BA20 ADRP X0, 0x23B8000
	0x01D3BA24 LDR X0, [X0 + 0xEF0]
	0x01D3BA28 BL 0x1C16CF4
	0x01D3BA2C ADRP X0, 0x23B8000
	0x01D3BA30 LDR X0, [X0 + 0xAC8]
	0x01D3BA34 BL 0x1C16CF4
	0x01D3BA38 ADRP X0, 0x23B8000
	0x01D3BA3C LDR X0, [X0 + 0xEF8]
	0x01D3BA40 BL 0x1C16CF4
	0x01D3BA44 ADRP X0, 0x23B8000
	0x01D3BA48 LDR X0, [X0 + 0xF00]
	0x01D3BA4C BL 0x1C16CF4
	0x01D3BA50 ADRP X0, 0x23B8000
	0x01D3BA54 LDR X0, [X0 + 0x838]
	0x01D3BA58 BL 0x1C16CF4
	0x01D3BA5C ADRP X0, 0x23B8000
	0x01D3BA60 LDR X0, [X0 + 0xF08]
	0x01D3BA64 BL 0x1C16CF4
	0x01D3BA68 ADRP X0, 0x23B8000
	0x01D3BA6C LDR X0, [X0 + 0xF10]
	0x01D3BA70 BL 0x1C16CF4
	0x01D3BA74 ADRP X0, 0x23B8000
	0x01D3BA78 LDR X0, [X0 + 0x848]
	0x01D3BA7C BL 0x1C16CF4
	0x01D3BA80 MOVZ W8, 0x1
	0x01D3BA84 STRB W8, [X21 + 0x715]
	0x01D3BA88 CBZ X19, 0x1D3BD10
	0x01D3BA8C LDR X8, [X19]
	0x01D3BA90 MOV X0, X19
	0x01D3BA94 LDR X9, [X8 + 0x258]
	0x01D3BA98 LDR X1, [X8 + 0x260]
	0x01D3BA9C BLR X9
	0x01D3BAA0 MOV X21, X0
	0x01D3BAA4 MOV X0, X19
	0x01D3BAA8 BL 0x1D3B8F8
	0x01D3BAAC TBZ X0, 0x0, 0x1D3BADC
	0x01D3BAB0 LDR X8, [X19]
	0x01D3BAB4 MOV X0, X19
	0x01D3BAB8 LDP X9, X1, [X8 + 0x1A8]
	0x01D3BABC BLR X9
	0x01D3BAC0 CBZ X0, 0x1D3BD10
	0x01D3BAC4 MOVZ W1, 0x5F
	0x01D3BAC8 MOV X2, X31
	0x01D3BACC BL 0x322BBDC
	0x01D3BAD0 ADRP X8, 0x23B8000
	0x01D3BAD4 LDR X8, [X8 + 0xF08]
	0x01D3BAD8 B 0x1D3BB6C
	0x01D3BADC CBZ X21, 0x1D3BD10
	0x01D3BAE0 MOV X0, X21
	0x01D3BAE4 MOV X1, X31
	0x01D3BAE8 BL 0x3396BF8
	0x01D3BAEC TBZ X0, 0x0, 0x1D3BB88
	0x01D3BAF0 LDR X8, [X19]
	0x01D3BAF4 MOV X0, X19
	0x01D3BAF8 MOV X1, X20
	0x01D3BAFC LDR X9, [X8 + 0x2C8]
	0x01D3BB00 LDR X2, [X8 + 0x2D0]
	0x01D3BB04 BLR X9
	0x01D3BB08 CBZ X0, 0x1D3BB44
	0x01D3BB0C ADRP X8, 0x23B8000
	0x01D3BB10 LDR X8, [X8 + 0xEF0]
	0x01D3BB14 LDR X9, [X0]
	0x01D3BB18 MOV X20, X0
	0x01D3BB1C LDR X8, [X8]
	0x01D3BB20 LDRB W11, [X9 + 0x130]
	0x01D3BB24 LDRB W10, [X8 + 0x130]
	0x01D3BB28 CMP W11, W10
	0x01D3BB2C B.CC 0x1D3BB44
	0x01D3BB30 LDR X9, [X9 + 0xC8]
	0x01D3BB34 ADD X9, X9, X10, 0x3, LSL
	0x01D3BB38 LDUR X9, [X9 - 0x8]
	0x01D3BB3C CMP X9, X8
	0x01D3BB40 B.EQ 0x1D3BBF4
	0x01D3BB44 LDR X8, [X19]
	0x01D3BB48 MOV X0, X19
	0x01D3BB4C LDP X9, X1, [X8 + 0x1A8]
	0x01D3BB50 BLR X9
	0x01D3BB54 CBZ X0, 0x1D3BD10
	0x01D3BB58 MOVZ W1, 0x5F
	0x01D3BB5C MOV X2, X31
	0x01D3BB60 BL 0x322BBDC
	0x01D3BB64 ADRP X8, 0x23B8000
	0x01D3BB68 LDR X8, [X8 + 0xF00]
	0x01D3BB6C LDR X1, [X8]
	0x01D3BB70 LDP X20, X19, [X31 + 0x30]
	0x01D3BB74 LDP X22, X21, [X31 + 0x20]
	0x01D3BB78 LDP X24, X23, [X31 + 0x10]
	0x01D3BB7C MOV X2, X31
	0x01D3BB80 LDR X30, [X31], #0x40
	0x01D3BB84 B 0x321B938
	0x01D3BB88 LDR X8, [X19]
	0x01D3BB8C MOV X0, X19
	0x01D3BB90 LDP X9, X1, [X8 + 0x1A8]
	0x01D3BB94 BLR X9
	0x01D3BB98 CBZ X0, 0x1D3BD10
	0x01D3BB9C MOVZ W1, 0x5F
	0x01D3BBA0 MOV X2, X31
	0x01D3BBA4 BL 0x322BBDC
	0x01D3BBA8 LDR X8, [X19]
	0x01D3BBAC MOV X21, X0
	0x01D3BBB0 MOV X0, X19
	0x01D3BBB4 MOV X1, X20
	0x01D3BBB8 LDR X9, [X8 + 0x2C8]
	0x01D3BBBC LDR X2, [X8 + 0x2D0]
	0x01D3BBC0 BLR X9
	0x01D3BBC4 ADRP X8, 0x23B8000
	0x01D3BBC8 LDR X8, [X8 + 0xEF8]
	0x01D3BBCC MOV X1, X21
	0x01D3BBD0 LDP X20, X19, [X31 + 0x30]
	0x01D3BBD4 LDP X22, X21, [X31 + 0x20]
	0x01D3BBD8 LDR X8, [X8]
	0x01D3BBDC LDP X24, X23, [X31 + 0x10]
	0x01D3BBE0 MOV X2, X0
	0x01D3BBE4 MOV X3, X31
	0x01D3BBE8 MOV X0, X8
	0x01D3BBEC LDR X30, [X31], #0x40
	0x01D3BBF0 B 0x3227BD4
	0x01D3BBF4 MOV X0, X20
	0x01D3BBF8 MOV X1, X31
	0x01D3BBFC BL 0x3395B7C
	0x01D3BC00 ADRP X8, 0x23B8000
	0x01D3BC04 LDR X8, [X8 + 0xAC8]
	0x01D3BC08 MOV W1, W0
	0x01D3BC0C LDR X8, [X8]
	0x01D3BC10 MOV X0, X8
	0x01D3BC14 BL 0x1C16D6C
	0x01D3BC18 MOV X21, X0
	0x01D3BC1C MOV X0, X20
	0x01D3BC20 MOV X1, X31
	0x01D3BC24 BL 0x3395B7C
	0x01D3BC28 CMP W0, 0x1
	0x01D3BC2C B.LT 0x1D3BC98
	0x01D3BC30 MOV X22, X31
	0x01D3BC34 MOV X23, X31
	0x01D3BC38 ADD X24, X21, 0x20
	0x01D3BC3C MOV X0, X20
	0x01D3BC40 MOV W1, W22
	0x01D3BC44 MOV X2, X31
	0x01D3BC48 BL 0x3395BDC
	0x01D3BC4C CMP X0, 0x0
	0x01D3BC50 CSEL X23, X23, X0, EQ
	0x01D3BC54 CBZ X0, 0x1D3BC6C
	0x01D3BC58 CBZ X23, 0x1D3BD10
	0x01D3BC5C LDR X8, [X23]
	0x01D3BC60 MOV X0, X23
	0x01D3BC64 LDP X9, X1, [X8 + 0x168]
	0x01D3BC68 BLR X9
	0x01D3BC6C CBZ X21, 0x1D3BD10
	0x01D3BC70 LDR W8, [X21 + 0x18]
	0x01D3BC74 CMP X22, X8
	0x01D3BC78 B.CS 0x1D3BD14
	0x01D3BC7C STR X0, [X24, X22, LSL #3]
	0x01D3BC80 MOV X0, X20
	0x01D3BC84 MOV X1, X31
	0x01D3BC88 ADD X22, X22, 0x1
	0x01D3BC8C BL 0x3395B7C
	0x01D3BC90 CMP X22, W0, SXTW

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X21, 0x269E000
	015 Move W8, [X21+1797]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {60}
	022 Move X0, 0x23B9000
	023 Move X0, [X0+3568]
	024 Call 0x1C17CF4
	025 Move X0, 0x23B9000
	026 Move X0, [X0+3576]
	027 Call 0x1C17CF4
	028 Move X0, 0x23B9000
	029 Move X0, [X0+3584]
	030 Call 0x1C17CF4
	031 Move X0, 0x23B9000
	032 Move X0, [X0+3592]
	033 Call 0x1C17CF4
	034 Move X0, 0x23B9000
	035 Move X0, [X0+3600]
	036 Call 0x1C17CF4
	037 Move X0, 0x23B9000
	038 Move X0, [X0+3608]
	039 Call 0x1C17CF4
	040 Move X0, 0x23B9000
	041 Move X0, [X0+3616]
	042 Call 0x1C17CF4
	043 Move X0, 0x23B9000
	044 Move X0, [X0+3624]
	045 Call 0x1C17CF4
	046 Move X0, 0x23B9000
	047 Move X0, [X0+3632]
	048 Call 0x1C17CF4
	049 Move X0, 0x23B9000
	050 Move X0, [X0+3640]
	051 Call 0x1C17CF4
	052 Move X0, 0x23B9000
	053 Move X0, [X0+3648]
	054 Call 0x1C17CF4
	055 Move X0, 0x23B9000
	056 Move X0, [X0+2304]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X21+1797], W8
	060 Move X19, [X19+24]
	061 Compare X19, 0
	062 JumpIfEqual {297}
	063 Move X10, 0x23B9000
	064 Move X8, [X19]
	065 Move X10, [X10+3592]
	066 NotImplemented "Instruction LDRH not yet implemented."
	067 Move X1, [X10]
	068 Compare X9, 0
	069 JumpIfEqual {76}
	070 Move X10, [X8+176]
	071 Add X10, X10, 8
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Subtract X9, X9, 1
	075 Add X10, X10, 16
	076 Move X0, X19
	077 Move W2, W31
	078 Call 0x1C5D788
	079 NotImplemented "Instruction LDRSW not yet implemented."
	080 Add X8, X8, X9
	081 Add X0, X8, 312
	082 Move X8, [X0]
	083 Move X1, [X0+8]
	084 Move X0, X19
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move [X31+8], X0
	087 Compare X0, 0
	088 JumpIfEqual {298}
	089 Move X25, 0x23B9000
	090 Move X19, 0x23B9000
	091 Move X25, [X25+3632]
	092 Move X19, [X19+3624]
	093 Move X22, X0
	094 Move [X31], X20
	095 Move X8, [X22]
	096 Move X10, 0x23B9000
	097 NotImplemented "Instruction LDRH not yet implemented."
	098 Move X10, [X10+3608]
	099 Move X1, [X10]
	100 Compare X9, 0
	101 JumpIfEqual {108}
	102 Move X10, [X8+176]
	103 Add X10, X10, 8
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Subtract X9, X9, 1
	107 Add X10, X10, 16
	108 Move X0, X22
	109 Move W2, W31
	110 Call 0x1C5D788
	111 NotImplemented "Instruction LDRSW not yet implemented."
	112 Add X8, X8, X9
	113 Add X0, X8, 312
	114 Move X8, [X0]
	115 Move X1, [X0+8]
	116 Move X0, X22
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Move TEMP, X0
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfNotEqual {243}
	122 Move X8, [X22]
	123 Move X10, 0x23B9000
	124 NotImplemented "Instruction LDRH not yet implemented."
	125 Move X10, [X10+3600]
	126 Move X1, [X10]
	127 Compare X9, 0
	128 JumpIfEqual {135}
	129 Move X10, [X8+176]
	130 Add X10, X10, 8
	131 NotImplemented "Instruction LDUR not yet implemented."
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Subtract X9, X9, 1
	134 Add X10, X10, 16
	135 Move X0, X22
	136 Move W2, W31
	137 Call 0x1C5D788
	138 NotImplemented "Instruction LDRSW not yet implemented."
	139 Add X8, X8, X9
	140 Add X0, X8, 312
	141 Move X9, [X0]
	142 Move X1, [X0+8]
	143 Add X8, X31, 16
	144 Move X0, X22
	145 NotImplemented "Instruction BLR not yet implemented."
	146 Compare X20, 0
	147 JumpIfEqual {289}
	148 Move X8, [X20+200]
	149 Compare X8, 0
	150 JumpIfEqual {290}
	151 Move X0, [X8+80]
	152 Compare X0, 0
	153 JumpIfEqual {286}
	154 Move X8, 0x23B9000
	155 Move X20, X25
	156 Move X27, [X31+16]
	157 Move X26, [X31+24]
	158 Move X25, [X31+32]
	159 Move W28, [X31+40]
	160 Move W29, [X31+41]
	161 Move W24, [X31+44]
	162 Move X22, [X31+48]
	163 Move X21, [X31+56]
	164 Move X8, [X8+3616]
	165 Move X2, [X8]
	166 Move X1, X27
	167 Call StateDictionary`2<Object, Object>.GetOrAddValue, X0, X1
	168 Move X23, X0
	169 Compare X0, 0
	170 JumpIfEqual {287}
	171 Move X0, [X23+72]
	172 Compare X0, 0
	173 JumpIfEqual {285}
	174 Move X8, 0x23B9000
	175 Move X8, [X8+2304]
	176 Move X2, [X8]
	177 Move X1, X27
	178 Call StatePrimitive`1<Object>.set_value, X0, X1
	179 Move X0, [X23+80]
	180 Compare X0, 0
	181 JumpIfEqual {291}
	182 Move X8, 0x23B9000
	183 Move X8, [X8+2304]
	184 Move X2, [X8]
	185 Move X1, X26
	186 Call StatePrimitive`1<Object>.set_value, X0, X1
	187 Move X8, 0x23B9000
	188 Move X8, [X8+3576]
	189 Move X26, [X23+88]
	190 Move X0, [X8]
	191 Move W8, [X0+224]
	192 Compare W8, 0
	193 JumpIfNotEqual {195}
	194 Call 0x1C17DFC
	195 Move X8, 0x23B9000
	196 Move X8, [X8+3568]
	197 Move X1, [X8]
	198 Move X0, X25
	199 Call 0x21B1650, X0
	200 Move W1, W0
	201 Compare X26, 0
	202 JumpIfEqual {292}
	203 Move X8, 0x23B9000
	204 Move X8, [X8+3640]
	205 Move X2, [X8]
	206 Move X0, X26
	207 Call StatePrimitive`1<Int32Enum>.set_value, X0, X1
	208 Move X0, [X23+96]
	209 Compare X0, 0
	210 JumpIfEqual {288}
	211 Move X2, [X20]
	212 Move X25, X20
	213 And W1, W28, 1
	214 Call 0x26528D0, X0, X1
	215 Move X0, [X23+104]
	216 Compare X0, 0
	217 JumpIfEqual {294}
	218 Move X2, [X25]
	219 And W1, W29, 1
	220 Call 0x26528D0, X0, X1
	221 Move X0, [X23+112]
	222 Compare X0, 0
	223 JumpIfEqual {293}
	224 Move X8, 0x23B9000
	225 Move X8, [X8+3648]
	226 Move X2, [X8]
	227 Move W1, W24
	228 Call StatePrimitive`1<Int32>.set_value, X0, X1
	229 Move X0, [X23+120]
	230 Compare X0, 0
	231 JumpIfEqual {296}
	232 Move X2, [X19]
	233 Move X1, X22
	234 Call StatePrimitiveSet`1<Object>.AssignValues, X0, X1
	235 Move X0, [X23+128]
	236 Compare X0, 0
	237 JumpIfEqual {295}
	238 Move X2, [X19]
	239 Move X22, [X31+8]
	240 Move X1, X21
	241 Call StatePrimitiveSet`1<Object>.AssignValues, X0, X1
	242 Move X20, [X31]
	243 Move X21, X31
	244 Compare X22, 0
	245 JumpIfEqual {269}
	246 Move X8, [X22]
	247 Move X10, 0x23B9000
	248 NotImplemented "Instruction LDRH not yet implemented."
	249 Move X10, [X10+3584]
	250 Move X1, [X10]
	251 Compare X9, 0
	252 JumpIfEqual {259}
	253 Move X10, [X8+176]
	254 Add X10, X10, 8
	255 NotImplemented "Instruction LDUR not yet implemented."
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Subtract X9, X9, 1
	258 Add X10, X10, 16
	259 Move X0, X22
	260 Move W2, W31
	261 Call 0x1C5D788
	262 NotImplemented "Instruction LDRSW not yet implemented."
	263 Add X8, X8, X9
	264 Add X0, X8, 312
	265 Move X8, [X0]
	266 Move X1, [X0+8]
	267 Move X0, X22
	268 NotImplemented "Instruction BLR not yet implemented."
	269 Compare X21, 0
	270 JumpIfNotEqual {299}
	271 Move X20, [X31+144]
	272 Move X19, [X31+152]
	273 Move X22, [X31+128]
	274 Move X21, [X31+136]
	275 Move X24, [X31+112]
	276 Move X23, [X31+120]
	277 Move X26, [X31+96]
	278 Move X25, [X31+104]
	279 Move X28, [X31+80]
	280 Move X27, [X31+88]
	281 Move X29, [X31+64]
	282 Move X30, [X31+72]
	283 Add X31, X31, 160
	284 Return 
	285 Call 0x1C17F20
	286 Call 0x1C17F20
	287 Call 0x1C17F20
	288 Call 0x1C17F20
	289 Call 0x1C17F20
	290 Call 0x1C17F20
	291 Call 0x1C17F20
	292 Call 0x1C17F20
	293 Call 0x1C17F20
	294 Call 0x1C17F20
	295 Call 0x1C17F20
	296 Call 0x1C17F20
	297 Call 0x1C17F20
	298 Call 0x1C17F20
	299 Move X0, X21
	300 Call 0x1C17F18
	301 Move X22, [X31+8]
	302 Move X20, X0
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Move X0, X20
	305 Call 0x3EB2AD0
	306 Move X21, [X0]
	307 Call 0x3EB2AE0
	308 Move X21, X31
	309 Move X20, X0
	310 Move X8, [X31+8]
	311 Compare X8, 0
	312 JumpIfEqual {337}
	313 Move X8, [X31+8]
	314 Move X10, 0x23B9000
	315 Move X8, [X8]
	316 NotImplemented "Instruction LDRH not yet implemented."
	317 Move X10, [X10+3584]
	318 Move X1, [X10]
	319 Compare X9, 0
	320 JumpIfEqual {327}
	321 Move X10, [X8+176]
	322 Add X10, X10, 8
	323 NotImplemented "Instruction LDUR not yet implemented."
	324 NotImplemented "Instruction CMP not yet implemented."
	325 Subtract X9, X9, 1
	326 Add X10, X10, 16
	327 Move X0, [X31+8]
	328 Move W2, W31
	329 Call 0x1C5D788
	330 NotImplemented "Instruction LDRSW not yet implemented."
	331 Add X8, X8, X9
	332 Add X0, X8, 312
	333 Move X8, [X0]
	334 Move X1, [X0+8]
	335 Move X0, [X31+8]
	336 NotImplemented "Instruction BLR not yet implemented."
	337 Compare X21, 0
	338 JumpIfNotEqual {341}
	339 Move X0, X20
	340 Call 0x1D2D690
	341 Move X0, X21
	342 Call 0x1C17F18
	343 Call 0x1991590

