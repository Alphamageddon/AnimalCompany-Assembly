Type: AnimalCompany.UserAvatarState/<get_itemIDs>d__48

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01D4FBA8 BL 0x1C16CF4
	0x01D4FBAC ADRP X0, 0x23A4000
	0x01D4FBB0 LDR X0, [X0 + 0x958]
	0x01D4FBB4 BL 0x1C16CF4
	0x01D4FBB8 ADRP X0, 0x23A4000
	0x01D4FBBC LDR X0, [X0 + 0x788]
	0x01D4FBC0 BL 0x1C16CF4
	0x01D4FBC4 ADRP X0, 0x23A5000
	0x01D4FBC8 LDR X0, [X0 + 0xB50]
	0x01D4FBCC BL 0x1C16CF4
	0x01D4FBD0 ADRP X0, 0x23A5000
	0x01D4FBD4 LDR X0, [X0 + 0xB70]
	0x01D4FBD8 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X20+16], W19
	010 Call Environment.get_CurrentManagedThreadId
	011 Move [X20+32], W0
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01D4FC8C BL 0x1C16DFC
	0x01D4FC90 ADRP X23, 0x2689000
	0x01D4FC94 LDRB W8, [X23 + 0x787]
	0x01D4FC98 CBNZ W8, 0x1D4FCB0
	0x01D4FC9C ADRP X0, 0x23A4000
	0x01D4FCA0 LDR X0, [X0 + 0x648]
	0x01D4FCA4 BL 0x1C16CF4

ISIL:
	001 Move W8, [X0+16]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Add W31, W8, 3
	004 Call <get_itemIDs>d__48.<>m__Finally1, X0
	005 Return 
	006 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01D4FCA8 MOVZ W8, 0x1
	0x01D4FCAC STRB W8, [X23 + 0x787]
	0x01D4FCB0 LDR X0, [X22]
	0x01D4FCB4 LDR W8, [X0 + 0xE0]
	0x01D4FCB8 CBNZ W8, 0x1D4FCC4
	0x01D4FCBC BL 0x1C16DFC
	0x01D4FCC0 LDR X0, [X22]
	0x01D4FCC4 LDR X8, [X0 + 0xB8]
	0x01D4FCC8 LDR X8, [X8]
	0x01D4FCCC CBZ X8, 0x1D4FFAC
	0x01D4FCD0 LDR X8, [X8 + 0xB8]
	0x01D4FCD4 CBZ X8, 0x1D4FFAC
	0x01D4FCD8 LDR X8, [X8 + 0x80]
	0x01D4FCDC CBZ X8, 0x1D4FFAC
	0x01D4FCE0 LDR X8, [X8 + 0x48]
	0x01D4FCE4 CBZ X8, 0x1D4FFAC
	0x01D4FCE8 LDR W8, [X8 + 0x4C]
	0x01D4FCEC STR W8, [X19 + 0x28]
	0x01D4FCF0 CBZ X20, 0x1D4FFAC
	0x01D4FCF4 CBZ X21, 0x1D4FFAC
	0x01D4FCF8 LDR W9, [X20 + 0x28]
	0x01D4FCFC SUB W8, W8, W9
	0x01D4FD00 STR W8, [X21 + 0x10]
	0x01D4FD04 ADRP X8, 0x23A5000
	0x01D4FD08 LDR X8, [X8 + 0xB70]
	0x01D4FD0C LDR X0, [X8]
	0x01D4FD10 BL 0x1C16F10
	0x01D4FD14 ADRP X8, 0x23A5000
	0x01D4FD18 LDR X8, [X8 + 0xB78]
	0x01D4FD1C MOV X1, X21
	0x01D4FD20 MOV X3, X31
	0x01D4FD24 MOV X20, X0
	0x01D4FD28 LDR X2, [X8]
	0x01D4FD2C BL 0x2695248
	0x01D4FD30 ADRP X8, 0x23A5000
	0x01D4FD34 ADRP X9, 0x23A5000
	0x01D4FD38 LDR X8, [X8 + 0xB90]
	0x01D4FD3C LDR X9, [X9 + 0xB68]
	0x01D4FD40 MOV X1, X20
	0x01D4FD44 MOV W2, W31
	0x01D4FD48 LDR X0, [X8]
	0x01D4FD4C LDR X4, [X9]
	0x01D4FD50 MOV X3, X31
	0x01D4FD54 BL 0x21A3304
	0x01D4FD58 STR X0, [X19 + 0x30]
	0x01D4FD5C CBZ X0, 0x1D4FFAC
	0x01D4FD60 STRB W31, [X0 + 0x14]
	0x01D4FD64 STR X0, [X19 + 0x18]
	0x01D4FD68 MOVZ W0, 0x1
	0x01D4FD6C STR W0, [X19 + 0x10]
	0x01D4FD70 B 0x1D4FF9C
	0x01D4FD74 MOVN W8, 0x0
	0x01D4FD78 STR W8, [X19 + 0x10]
	0x01D4FD7C CBZ X20, 0x1D4FFAC
	0x01D4FD80 ADRP X21, 0x23A4000
	0x01D4FD84 LDR X21, [X21 + 0x648]
	0x01D4FD88 LDR W19, [X20 + 0x28]
	0x01D4FD8C LDR X0, [X21]
	0x01D4FD90 LDR W8, [X0 + 0xE0]
	0x01D4FD94 CBNZ W8, 0x1D4FD9C
	0x01D4FD98 BL 0x1C16DFC
	0x01D4FD9C ADRP X22, 0x2689000
	0x01D4FDA0 LDRB W8, [X22 + 0x787]
	0x01D4FDA4 CBNZ W8, 0x1D4FDBC
	0x01D4FDA8 ADRP X0, 0x23A4000
	0x01D4FDAC LDR X0, [X0 + 0x648]
	0x01D4FDB0 BL 0x1C16CF4
	0x01D4FDB4 MOVZ W8, 0x1
	0x01D4FDB8 STRB W8, [X22 + 0x787]
	0x01D4FDBC LDR X0, [X21]
	0x01D4FDC0 LDR W8, [X0 + 0xE0]
	0x01D4FDC4 CBNZ W8, 0x1D4FDD0
	0x01D4FDC8 BL 0x1C16DFC
	0x01D4FDCC LDR X0, [X21]
	0x01D4FDD0 LDR X8, [X0 + 0xB8]
	0x01D4FDD4 LDR X8, [X8]
	0x01D4FDD8 CBZ X8, 0x1D4FFAC
	0x01D4FDDC LDR X8, [X8 + 0xB8]
	0x01D4FDE0 CBZ X8, 0x1D4FFAC
	0x01D4FDE4 LDR X8, [X8 + 0x80]
	0x01D4FDE8 CBZ X8, 0x1D4FFAC
	0x01D4FDEC LDR X8, [X8 + 0x48]
	0x01D4FDF0 CBZ X8, 0x1D4FFAC
	0x01D4FDF4 LDR W8, [X8 + 0x4C]
	0x01D4FDF8 CMP W19, W8
	0x01D4FDFC B.EQ 0x1D4FF64
	0x01D4FE00 ADRP X8, 0x23A4000
	0x01D4FE04 LDR X8, [X8 + 0x958]
	0x01D4FE08 LDR X0, [X8]
	0x01D4FE0C BL 0x1C16F10
	0x01D4FE10 ADRP X8, 0x23A5000
	0x01D4FE14 LDR X8, [X8 + 0xB58]
	0x01D4FE18 MOV X1, X20
	0x01D4FE1C MOV X3, X31
	0x01D4FE20 MOV X19, X0
	0x01D4FE24 LDR X2, [X8]
	0x01D4FE28 BL 0x35BC6F0
	0x01D4FE2C MOV X0, X19
	0x01D4FE30 MOV W1, W31
	0x01D4FE34 MOV X2, X31
	0x01D4FE38 BL 0x35BBFC4
	0x01D4FE3C LDR X8, [X21]
	0x01D4FE40 MOV X19, X0
	0x01D4FE44 LDR W9, [X8 + 0xE0]
	0x01D4FE48 CBNZ W9, 0x1D4FE54
	0x01D4FE4C MOV X0, X8
	0x01D4FE50 BL 0x1C16DFC
	0x01D4FE54 MOV X0, X19
	0x01D4FE58 MOV W1, W31
	0x01D4FE5C MOV X2, X31
	0x01D4FE60 BL 0x1D35D6C
	0x01D4FE64 MOV X8, X0
	0x01D4FE68 MOV W0, W31
	0x01D4FE6C STR X8, [X20 + 0x20]
	0x01D4FE70 B 0x1D4FF9C
	0x01D4FE74 LDR X0, [X19 + 0x30]
	0x01D4FE78 MOVN W8, 0x0
	0x01D4FE7C STR W8, [X19 + 0x10]
	0x01D4FE80 CBZ X0, 0x1D4FFAC
	0x01D4FE84 MOV X1, X31
	0x01D4FE88 BL 0x35BA460
	0x01D4FE8C TBZ X0, 0x0, 0x1D4FF6C
	0x01D4FE90 LDR X8, [X19 + 0x30]
	0x01D4FE94 CBZ X8, 0x1D4FFAC
	0x01D4FE98 LDR X8, [X8 + 0x18]
	0x01D4FE9C CBZ X8, 0x1D4FFAC
	0x01D4FEA0 LDR X8, [X8 + 0x28]
	0x01D4FEA4 CBZ X8, 0x1D4FF64
	0x01D4FEA8 ADRP X9, 0x23A5000
	0x01D4FEAC LDR X9, [X9 + 0x6F0]
	0x01D4FEB0 LDR X10, [X8]
	0x01D4FEB4 LDR X9, [X9]
	0x01D4FEB8 CMP X10, X9
	0x01D4FEBC B.NE 0x1D4FF64
	0x01D4FEC0 LDR X8, [X8 + 0x90]
	0x01D4FEC4 CMP X8, 0x191
	0x01D4FEC8 B.NE 0x1D4FF64
	0x01D4FECC ADRP X8, 0x23A4000
	0x01D4FED0 LDR X8, [X8 + 0x788]
	0x01D4FED4 LDR X0, [X8]
	0x01D4FED8 LDR W8, [X0 + 0xE0]
	0x01D4FEDC CBNZ W8, 0x1D4FEE4
	0x01D4FEE0 BL 0x1C16DFC
	0x01D4FEE4 ADRP X8, 0x23A5000
	0x01D4FEE8 ADRP X9, 0x23A5000
	0x01D4FEEC ADRP X10, 0x23A5000
	0x01D4FEF0 LDR X8, [X8 + 0xB88]
	0x01D4FEF4 LDR X9, [X9 + 0xB98]
	0x01D4FEF8 LDR X10, [X10 + 0xBA0]
	0x01D4FEFC MOVZ W4, 0x44
	0x01D4FF00 LDR X0, [X8]
	0x01D4FF04 LDR X2, [X9]
	0x01D4FF08 LDR X3, [X10]
	0x01D4FF0C MOV X1, X31
	0x01D4FF10 MOV X5, X31
	0x01D4FF14 BL 0x35C2344
	0x01D4FF18 ADRP X8, 0x23A4000
	0x01D4FF1C LDR X8, [X8 + 0x648]
	0x01D4FF20 LDR X0, [X8]
	0x01D4FF24 LDR W8, [X0 + 0xE0]
	0x01D4FF28 CBNZ W8, 0x1D4FF30
	0x01D4FF2C BL 0x1C16DFC
	0x01D4FF30 MOV X0, X31
	0x01D4FF34 BL 0x1D32AF4
	0x01D4FF38 MOV X19, X0
	0x01D4FF3C MOV X0, X31
	0x01D4FF40 BL 0x1D32B7C
	0x01D4FF44 CBZ X19, 0x1D4FFAC
	0x01D4FF48 MOV X1, X0
	0x01D4FF4C MOV X0, X19
	0x01D4FF50 MOV X2, X31
	0x01D4FF54 MOV X3, X31
	0x01D4FF58 MOV X4, X31
	0x01D4FF5C MOV X5, X31
	0x01D4FF60 BL 0x1D6EA3C
	0x01D4FF64 MOV W0, W31
	0x01D4FF68 B 0x1D4FF9C
	0x01D4FF6C CBZ X20, 0x1D4FFAC
	0x01D4FF70 LDR W8, [X19 + 0x28]
	0x01D4FF74 MOV W0, W31
	0x01D4FF78 MOV X1, X31
	0x01D4FF7C STR W8, [X20 + 0x28]
	0x01D4FF80 MOVZ W8, 0x42700000
	0x01D4FF84 FMOV S0, W8
	0x01D4FF88 BL 0x35BB1E4
	0x01D4FF8C MOVZ W8, 0x2
	0x01D4FF90 STR X0, [X19 + 0x18]
	0x01D4FF94 STR W8, [X19 + 0x10]
	0x01D4FF98 MOVZ W0, 0x1
	0x01D4FF9C LDP X20, X19, [X31 + 0x20]
	0x01D4FFA0 LDP X22, X21, [X31 + 0x10]
	0x01D4FFA4 LDP X30, X23, [X31], #0x30
	0x01D4FFA8 RET
	0x01D4FFAC BL 0x1C16F20
	0x01D4FFB0 LDR X0, [X0 + 0x18]
	0x01D4FFB4 RET
	0x01D4FFB8 STP X30, X19, [X31 - 0x10]!
	0x01D4FFBC ADRP X0, 0x23A4000
	0x01D4FFC0 LDR X0, [X0 + 0xB40]
	0x01D4FFC4 BL 0x1C16D08
	0x01D4FFC8 BL 0x1C16F10
	0x01D4FFCC MOV X1, X31
	0x01D4FFD0 MOV X19, X0
	0x01D4FFD4 BL 0x3380310
	0x01D4FFD8 ADRP X0, 0x23A5000
	0x01D4FFDC LDR X0, [X0 + 0xBA8]
	0x01D4FFE0 BL 0x1C16D08
	0x01D4FFE4 MOV X1, X0
	0x01D4FFE8 MOV X0, X19
	0x01D4FFEC BL 0x1C16DEC
	0x01D4FFF0 LDR X0, [X0 + 0x18]
	0x01D4FFF4 RET
	0x01D4FFF8 STP X30, X21, [X31 - 0x20]!
	0x01D4FFFC STP X20, X19, [X31 + 0x10]
	0x01D50000 MOV X20, X1
	0x01D50004 MOV X1, X31
	0x01D50008 MOV X19, X2
	0x01D5000C MOV X21, X0
	0x01D50010 BL 0x1D36B98
	0x01D50014 STP X20, X19, [X21 + 0x18]
	0x01D50018 LDP X20, X19, [X31 + 0x10]
	0x01D5001C LDP X30, X21, [X31], #0x20
	0x01D50020 RET
	0x01D50024 SUB X31, X31, 0xE0
	0x01D50028 STP X30, X25, [X31 + 0xA0]
	0x01D5002C STP X24, X23, [X31 + 0xB0]
	0x01D50030 STP X22, X21, [X31 + 0xC0]
	0x01D50034 STP X20, X19, [X31 + 0xD0]
	0x01D50038 ADRP X21, 0x2688000
	0x01D5003C LDRB W8, [X21 + 0x7B1]
	0x01D50040 MOV X19, X1
	0x01D50044 MOV X20, X0
	0x01D50048 TBNZ X8, 0x0, 0x1D50060
	0x01D5004C ADRP X0, 0x23A4000
	0x01D50050 LDR X0, [X0 + 0xBB0]
	0x01D50054 BL 0x1C16CF4
	0x01D50058 MOVZ W8, 0x1
	0x01D5005C STRB W8, [X21 + 0x7B1]
	0x01D50060 LDR X8, [X20 + 0x20]
	0x01D50064 CBZ X8, 0x1D50114
	0x01D50068 ADRP X24, 0x23A4000
	0x01D5006C LDR X24, [X24 + 0xBB0]
	0x01D50070 MOV X23, X31
	0x01D50074 MOVZ W25, 0x20
	0x01D50078 LDRSW X8, [X8 + 0x18]
	0x01D5007C CMP X23, X8
	0x01D50080 B.GE 0x1D50118
	0x01D50084 LDR X8, [X20 + 0x18]
	0x01D50088 CBZ X8, 0x1D50114
	0x01D5008C LDR W9, [X8 + 0x18]
	0x01D50090 CMP X23, X9
	0x01D50094 B.CS 0x1D50130
	0x01D50098 CBZ X19, 0x1D50114
	0x01D5009C LDR X0, [X19 + 0xD0]
	0x01D500A0 CBZ X0, 0x1D50114
	0x01D500A4 ADD X8, X8, X23, 0x3, LSL
	0x01D500A8 LDR X21, [X8 + 0x20]
	0x01D500AC LDR X2, [X24]
	0x01D500B0 MOV X1, X21
	0x01D500B4 BL 0x2609E58
	0x01D500B8 LDR X8, [X20 + 0x20]
	0x01D500BC CBZ X8, 0x1D50114
	0x01D500C0 LDR W9, [X8 + 0x18]
	0x01D500C4 CMP X23, X9
	0x01D500C8 B.CS 0x1D50130
	0x01D500CC MOV X22, X0
	0x01D500D0 ADD X1, X8, X25
	0x01D500D4 ADD X0, X31, 0x50
	0x01D500D8 MOVZ W2, 0x50
	0x01D500DC BL 0x3EB1AC0
	0x01D500E0 CBZ X22, 0x1D50114
	0x01D500E4 ADD X0, X31, 0x0
	0x01D500E8 ADD X1, X31, 0x50
	0x01D500EC MOVZ W2, 0x50
	0x01D500F0 ADD X23, X23, 0x1
	0x01D500F4 ADD X25, X25, 0x50
	0x01D500F8 BL 0x3EB1AC0
	0x01D500FC ADD X1, X31, 0x0
	0x01D50100 MOV X0, X22
	0x01D50104 MOV X2, X21
	0x01D50108 BL 0x1D4BB78
	0x01D5010C LDR X8, [X20 + 0x20]
	0x01D50110 CBNZ X8, 0x1D50078
	0x01D50114 BL 0x1C16F20
	0x01D50118 LDP X20, X19, [X31 + 0xD0]
	0x01D5011C LDP X22, X21, [X31 + 0xC0]
	0x01D50120 LDP X24, X23, [X31 + 0xB0]
	0x01D50124 LDP X30, X25, [X31 + 0xA0]
	0x01D50128 ADD X31, X31, 0xE0
	0x01D5012C RET
	0x01D50130 BL 0x1C16F28
	0x01D50134 STR X30, [X31 - 0x20]!
	0x01D50138 STP X20, X19, [X31 + 0x10]
	0x01D5013C MOV X19, X1
	0x01D50140 MOV X1, X31
	0x01D50144 MOV X20, X0
	0x01D50148 BL 0x1D36B98
	0x01D5014C STR X19, [X20 + 0x18]
	0x01D50150 LDP X20, X19, [X31 + 0x10]
	0x01D50154 LDR X30, [X31], #0x20
	0x01D50158 RET
	0x01D5015C STP X30, X23, [X31 - 0x30]!
	0x01D50160 STP X22, X21, [X31 + 0x10]
	0x01D50164 STP X20, X19, [X31 + 0x20]
	0x01D50168 ADRP X21, 0x2688000
	0x01D5016C LDRB W8, [X21 + 0x7B2]
	0x01D50170 MOV X19, X1
	0x01D50174 MOV X20, X0
	0x01D50178 TBNZ X8, 0x0, 0x1D50190
	0x01D5017C ADRP X0, 0x23A4000
	0x01D50180 LDR X0, [X0 + 0xBB8]
	0x01D50184 BL 0x1C16CF4
	0x01D50188 MOVZ W8, 0x1
	0x01D5018C STRB W8, [X21 + 0x7B2]
	0x01D50190 LDR X20, [X20 + 0x18]
	0x01D50194 CBZ X20, 0x1D501F8
	0x01D50198 LDR X8, [X20 + 0x18]
	0x01D5019C CMP W8, 0x1
	0x01D501A0 B.LT 0x1D501E8
	0x01D501A4 ADRP X22, 0x23A4000
	0x01D501A8 LDR X22, [X22 + 0xBB8]
	0x01D501AC MOV X21, X31
	0x01D501B0 AND X8, X8, 0x0
	0x01D501B4 ADD X23, X20, 0x20
	0x01D501B8 CMP X21, W8, UXTW
	0x01D501BC B.CS 0x1D501FC
	0x01D501C0 CBZ X19, 0x1D501F8
	0x01D501C4 LDR X0, [X19 + 0xD0]
	0x01D501C8 CBZ X0, 0x1D501F8
	0x01D501CC LDR X1, [X23, X21, LSL #3]
	0x01D501D0 LDR X2, [X22]
	0x01D501D4 BL 0x26099B0
	0x01D501D8 LDR W8, [X20 + 0x18]
	0x01D501DC ADD X21, X21, 0x1
	0x01D501E0 CMP X21, W8, SXTW
	0x01D501E4 B.LT 0x1D501B8
	0x01D501E8 LDP X20, X19, [X31 + 0x20]
	0x01D501EC LDP X22, X21, [X31 + 0x10]
	0x01D501F0 LDP X30, X23, [X31], #0x30
	0x01D501F4 RET
	0x01D501F8 BL 0x1C16F20
	0x01D501FC BL 0x1C16F28
	0x01D50200 STP X30, X23, [X31 - 0x30]!
	0x01D50204 STP X22, X21, [X31 + 0x10]
	0x01D50208 STP X20, X19, [X31 + 0x20]
	0x01D5020C ADRP X19, 0x2688000
	0x01D50210 ADRP X21, 0x23A4000
	0x01D50214 ADRP X22, 0x23A3000
	0x01D50218 LDRB W8, [X19 + 0x7B3]
	0x01D5021C LDR X21, [X21 + 0xBC0]
	0x01D50220 LDR X22, [X22 + 0x598]
	0x01D50224 MOV X20, X0
	0x01D50228 TBNZ X8, 0x0, 0x1D5027C
	0x01D5022C ADRP X0, 0x23A3000
	0x01D50230 LDR X0, [X0 + 0x648]
	0x01D50234 BL 0x1C16CF4
	0x01D50238 ADRP X0, 0x23A3000
	0x01D5023C LDR X0, [X0 + 0xDB0]
	0x01D50240 BL 0x1C16CF4
	0x01D50244 ADRP X0, 0x23A3000
	0x01D50248 LDR X0, [X0 + 0x598]
	0x01D5024C BL 0x1C16CF4
	0x01D50250 ADRP X0, 0x23A3000
	0x01D50254 LDR X0, [X0 + 0xDA0]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X19, 0x268A000
	007 Move W8, [X19+1958]
	008 Move X20, X0
	009 Move [X31+24], X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x23A6000
	015 Move X0, [X0+2736]
	016 Call 0x1C17CF4
	017 Move X0, 0x23A6000
	018 Move X0, [X0+2744]
	019 Call 0x1C17CF4
	020 Move X0, 0x23A5000
	021 Move X0, [X0+3608]
	022 Call 0x1C17CF4
	023 Move X0, 0x23A5000
	024 Move X0, [X0+3528]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X19+1958], W8
	028 Add X8, X31, 24
	029 Move [X31+8], X31
	030 Move [X31+16], X8
	031 Move W8, [X20+16]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X19, [X20+40]
	034 Move X9, -19009536
	035 Add X9, X9, 2314
	036 NotImplemented "Instruction ADR not yet implemented."
	037 Move W11, [X9]
	038 Add X10, X10, X11
	039 CallNoReturn X10
	040 Move TEMP, 0
	041 Not TEMP
	042 Move W8, TEMP
	043 Move [X20+16], W8
	044 Compare X19, 0
	045 JumpIfEqual {360}
	046 Move X8, [X19+88]
	047 Compare X8, 0
	048 JumpIfEqual {364}
	049 Move X0, [X8+80]
	050 Move X1, X31
	051 Call String.IsNullOrEmpty, X0
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {84}
	056 Move X8, [X19+88]
	057 Compare X8, 0
	058 JumpIfEqual {372}
	059 Move X8, [X8+80]
	060 Move X9, [X31+24]
	061 Move W0, 1
	062 Move [X9+24], X8
	063 Move [X9+16], W0
	064 Move TEMP, 0
	065 Not TEMP
	066 Move W8, TEMP
	067 Move [X20+16], W8
	068 Compare X19, 0
	069 JumpIfNotEqual {116}
	070 Call 0x1C17F20
	071 Move TEMP, 0
	072 Not TEMP
	073 Move W8, TEMP
	074 Move [X20+16], W8
	075 Compare X19, 0
	076 JumpIfNotEqual {209}
	077 Call 0x1C17F20
	078 Move TEMP, 0
	079 Not TEMP
	080 Move W8, TEMP
	081 Move [X20+16], W8
	082 Compare X19, 0
	083 JumpIfEqual {358}
	084 Move X8, [X19+96]
	085 Compare X8, 0
	086 JumpIfEqual {357}
	087 Move X0, [X8+80]
	088 Move X1, X31
	089 Call String.IsNullOrEmpty, X0
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {106}
	094 Move X8, [X19+96]
	095 Compare X8, 0
	096 JumpIfEqual {371}
	097 Move X8, [X8+80]
	098 Move X9, [X31+24]
	099 Move W10, 2
	100 Move TEMP, 0
	101 Not TEMP
	102 Move W8, TEMP
	103 Move [X20+16], W8
	104 Compare X19, 0
	105 JumpIfEqual {359}
	106 Move X8, [X19+104]
	107 Compare X8, 0
	108 JumpIfEqual {356}
	109 Move X0, [X8+80]
	110 Move X1, X31
	111 Call String.IsNullOrEmpty, X0
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {240}
	116 Move X8, [X19+112]
	117 Compare X8, 0
	118 JumpIfEqual {355}
	119 Move X0, [X8+80]
	120 Move X1, X31
	121 Call String.IsNullOrEmpty, X0
	122 Move TEMP, X0
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfEqual {145}
	126 Move X8, [X19+112]
	127 Compare X8, 0
	128 JumpIfEqual {369}
	129 Move X8, [X8+80]
	130 Move X9, [X31+24]
	131 Move W10, 4
	132 Move TEMP, 0
	133 Not TEMP
	134 Move W8, TEMP
	135 Move [X20+16], W8
	136 Compare X19, 0
	137 JumpIfNotEqual {177}
	138 Call 0x1C17F20
	139 Move TEMP, 0
	140 Not TEMP
	141 Move W8, TEMP
	142 Move [X20+16], W8
	143 Compare X19, 0
	144 JumpIfEqual {361}
	145 Move X8, [X19+120]
	146 Compare X8, 0
	147 JumpIfEqual {354}
	148 Move X0, [X8+80]
	149 Move X1, X31
	150 Call String.IsNullOrEmpty, X0
	151 Move TEMP, X0
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfEqual {167}
	155 Move X8, [X19+120]
	156 Compare X8, 0
	157 JumpIfEqual {368}
	158 Move X8, [X8+80]
	159 Move X9, [X31+24]
	160 Move W10, 5
	161 Move TEMP, 0
	162 Not TEMP
	163 Move W8, TEMP
	164 Move [X20+16], W8
	165 Compare X19, 0
	166 JumpIfEqual {362}
	167 Move X8, [X19+128]
	168 Compare X8, 0
	169 JumpIfEqual {353}
	170 Move X0, [X8+80]
	171 Move X1, X31
	172 Call String.IsNullOrEmpty, X0
	173 Move TEMP, X0
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 JumpIfNotEqual {234}
	177 Move X8, [X19+136]
	178 Compare X8, 0
	179 JumpIfEqual {352}
	180 Move X0, [X8+80]
	181 Move X1, X31
	182 Call String.IsNullOrEmpty, X0
	183 Move TEMP, X0
	184 And TEMP, TEMP, 1
	185 Compare TEMP, 1
	186 JumpIfEqual {199}
	187 Move X8, [X19+136]
	188 Compare X8, 0
	189 JumpIfEqual {366}
	190 Move X8, [X8+80]
	191 Move X9, [X31+24]
	192 Move W10, 7
	193 Move TEMP, 0
	194 Not TEMP
	195 Move W8, TEMP
	196 Move [X20+16], W8
	197 Compare X19, 0
	198 JumpIfEqual {363}
	199 Move X8, [X19+144]
	200 Compare X8, 0
	201 JumpIfEqual {351}
	202 Move X0, [X8+80]
	203 Move X1, X31
	204 Call String.IsNullOrEmpty, X0
	205 Move TEMP, X0
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfNotEqual {228}
	209 Move X19, [X19+152]
	210 Compare X19, 0
	211 JumpIfEqual {350}
	212 Move X10, 0x23A6000
	213 Move X8, [X19]
	214 Move X10, [X10+2736]
	215 NotImplemented "Instruction LDRH not yet implemented."
	216 Move X1, [X10]
	217 Compare X9, 0
	218 JumpIfEqual {225}
	219 Move X10, [X8+176]
	220 Add X10, X10, 8
	221 NotImplemented "Instruction LDUR not yet implemented."
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Subtract X9, X9, 1
	224 Add X10, X10, 16
	225 Move X0, X19
	226 Move W2, W31
	227 Call 0x1C5D788
	228 Move X8, [X19+144]
	229 Compare X8, 0
	230 JumpIfEqual {365}
	231 Move X8, [X8+80]
	232 Move X9, [X31+24]
	233 Move W10, 8
	234 Move X8, [X19+128]
	235 Compare X8, 0
	236 JumpIfEqual {367}
	237 Move X8, [X8+80]
	238 Move X9, [X31+24]
	239 Move W10, 6
	240 Move X8, [X19+104]
	241 Compare X8, 0
	242 JumpIfEqual {370}
	243 Move X8, [X8+80]
	244 Move X9, [X31+24]
	245 Move W10, 3
	246 NotImplemented "Instruction LDRSW not yet implemented."
	247 Add X8, X8, X9
	248 Add X0, X8, 312
	249 Move X8, [X0]
	250 Move X1, [X0+8]
	251 Move X0, X19
	252 NotImplemented "Instruction BLR not yet implemented."
	253 Move X20, [X31+24]
	254 Move [X20+48], X0
	255 Move X19, [X20+48]
	256 Move TEMP, 2
	257 Not TEMP
	258 Move W8, TEMP
	259 Move [X20+16], W8
	260 Compare X19, 0
	261 JumpIfEqual {331}
	262 Move X20, 0x23A5000
	263 Move X21, 0x23A6000
	264 Move X20, [X20+3608]
	265 Move X21, [X21+2744]
	266 Move X8, [X19]
	267 Move X1, [X20]
	268 NotImplemented "Instruction LDRH not yet implemented."
	269 Compare X9, 0
	270 JumpIfEqual {277}
	271 Move X10, [X8+176]
	272 Add X10, X10, 8
	273 NotImplemented "Instruction LDUR not yet implemented."
	274 NotImplemented "Instruction CMP not yet implemented."
	275 Subtract X9, X9, 1
	276 Add X10, X10, 16
	277 Move X0, X19
	278 Move W2, W31
	279 Call 0x1C5D788
	280 NotImplemented "Instruction LDRSW not yet implemented."
	281 Add X8, X8, X9
	282 Add X0, X8, 312
	283 Move X8, [X0]
	284 Move X1, [X0+8]
	285 Move X0, X19
	286 NotImplemented "Instruction BLR not yet implemented."
	287 Move W8, W0
	288 Move X0, [X31+24]
	289 Move TEMP, X8
	290 And TEMP, TEMP, 1
	291 Compare TEMP, 1
	292 JumpIfNotEqual {332}
	293 Move X19, [X0+48]
	294 Compare X19, 0
	295 JumpIfEqual {348}
	296 Move X8, [X19]
	297 Move X1, [X21]
	298 NotImplemented "Instruction LDRH not yet implemented."
	299 Compare X9, 0
	300 JumpIfEqual {307}
	301 Move X10, [X8+176]
	302 Add X10, X10, 8
	303 NotImplemented "Instruction LDUR not yet implemented."
	304 NotImplemented "Instruction CMP not yet implemented."
	305 Subtract X9, X9, 1
	306 Add X10, X10, 16
	307 Move X0, X19
	308 Move W2, W31
	309 Call 0x1C5D788
	310 NotImplemented "Instruction LDRSW not yet implemented."
	311 Add X8, X8, X9
	312 Add X0, X8, 312
	313 Move X8, [X0]
	314 Move X1, [X0+8]
	315 Move X0, X19
	316 NotImplemented "Instruction BLR not yet implemented."
	317 Move X19, X0
	318 Compare X0, 0
	319 JumpIfEqual {349}
	320 Move X0, [X19+80]
	321 Move X1, X31
	322 Call String.IsNullOrEmpty, X0
	323 Move TEMP, X0
	324 And TEMP, TEMP, 1
	325 Compare TEMP, 1
	326 JumpIfNotEqual {336}
	327 Move X8, [X31+24]
	328 Move X19, [X8+48]
	329 Compare X19, 0
	330 JumpIfNotEqual {266}
	331 Call 0x1C17F20
	332 Call <get_itemIDs>d__48.<>m__Finally1, X0
	333 Move X8, [X31+24]
	334 Move W0, W31
	335 Move [X8+48], X31
	336 Move X8, [X19+80]
	337 Move X9, [X31+24]
	338 Move W10, 9
	339 Move [X9+24], X8
	340 Move [X9+16], W10
	341 Move W0, 1
	342 Move X20, [X31+48]
	343 Move X19, [X31+56]
	344 Move X30, [X31+32]
	345 Move X21, [X31+40]
	346 Add X31, X31, 64
	347 Return X0
	348 Call 0x1C17F20
	349 Call 0x1C17F20
	350 Call 0x1C17F20
	351 Call 0x1C17F20
	352 Call 0x1C17F20
	353 Call 0x1C17F20
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Call 0x1C17F20
	363 Call 0x1C17F20
	364 Call 0x1C17F20
	365 Call 0x1C17F20
	366 Call 0x1C17F20
	367 Call 0x1C17F20
	368 Call 0x1C17F20
	369 Call 0x1C17F20
	370 Call 0x1C17F20
	371 Call 0x1C17F20
	372 Call 0x1C17F20
	373 NotImplemented "Instruction CMP not yet implemented."
	374 Call 0x3EB2AD0
	375 Move X19, [X0]
	376 Move [X31+8], X19
	377 Call 0x3EB2AE0
	378 Compare X19, 0
	379 JumpIfNotEqual {381}
	380 Move W0, W31
	381 Add X8, X31, 8
	382 Add X0, X8, 8
	383 Call 0x1991808
	384 Move X0, X19
	385 Call 0x1C17F18
	386 Compare X19, 0
	387 JumpIfNotEqual {389}
	388 Call 0x1D2D690
	389 Move X0, [X31+24]
	390 Move W8, [X0+16]
	391 NotImplemented "Instruction CMP not yet implemented."
	392 Add W31, W8, 3
	393 Call <get_itemIDs>d__48.<>m__Finally1, X0
	394 Move X0, X19
	395 Call 0x1C17F18
	396 Call 0x1991590

Method: System.Void <>m__Finally1()

Disassembly:
	0x01D50258 BL 0x1C16CF4
	0x01D5025C ADRP X0, 0x23A4000
	0x01D50260 LDR X0, [X0 + 0xBC8]
	0x01D50264 BL 0x1C16CF4
	0x01D50268 ADRP X0, 0x23A4000
	0x01D5026C LDR X0, [X0 + 0xBC0]
	0x01D50270 BL 0x1C16CF4
	0x01D50274 MOVZ W8, 0x1
	0x01D50278 STRB W8, [X19 + 0x7B3]
	0x01D5027C LDR X8, [X21]
	0x01D50280 LDR X0, [X22]
	0x01D50284 LDR X8, [X8 + 0xB8]
	0x01D50288 LDR W9, [X0 + 0xE0]
	0x01D5028C LDR X19, [X8]
	0x01D50290 CBNZ W9, 0x1D50298
	0x01D50294 BL 0x1C16DFC
	0x01D50298 MOV X0, X19
	0x01D5029C MOV X1, X31
	0x01D502A0 MOV X2, X31
	0x01D502A4 BL 0x3C354F8
	0x01D502A8 TBZ X0, 0x0, 0x1D502D4
	0x01D502AC LDR X0, [X22]
	0x01D502B0 LDR W8, [X0 + 0xE0]
	0x01D502B4 CBNZ W8, 0x1D502BC
	0x01D502B8 BL 0x1C16DFC
	0x01D502BC MOV X0, X20
	0x01D502C0 LDP X20, X19, [X31 + 0x20]
	0x01D502C4 LDP X22, X21, [X31 + 0x10]
	0x01D502C8 MOV X1, X31
	0x01D502CC LDP X30, X23, [X31], #0x30
	0x01D502D0 B 0x3C394A8
	0x01D502D4 LDR X8, [X21]
	0x01D502D8 LDR X8, [X8 + 0xB8]
	0x01D502DC STR X20, [X8]
	0x01D502E0 ADRP X8, 0x23A3000
	0x01D502E4 LDR X8, [X8 + 0xDA0]
	0x01D502E8 LDR X0, [X8]
	0x01D502EC BL 0x1C16F10
	0x01D502F0 ADRP X8, 0x23A4000
	0x01D502F4 LDR X8, [X8 + 0xBC8]
	0x01D502F8 MOV X1, X20
	0x01D502FC MOV X3, X31
	0x01D50300 MOV X19, X0
	0x01D50304 LDR X2, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x2689000
	005 Move W8, [X19+1959]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x23A4000
	012 Move X0, [X0+3584]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X19+1959], W8
	016 Move X19, [X20+48]
	017 Move TEMP, 0
	018 Not TEMP
	019 Move W8, TEMP
	020 Move [X20+16], W8
	021 Compare X19, 0
	022 JumpIfEqual {39}
	023 Move X10, 0x23A4000
	024 Move X8, [X19]
	025 Move X10, [X10+3584]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X10]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move X0, X19
	037 Move W2, W31
	038 Call 0x1C5D788
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return 
	043 NotImplemented "Instruction LDRSW not yet implemented."
	044 Add X8, X8, X9
	045 Add X0, X8, 312
	046 Move X2, [X0]
	047 Move X1, [X0+8]
	048 Move X0, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 CallNoReturn X2

Method: System.String System.Collections.Generic.IEnumerator<System.String>.get_Current()

Disassembly:
	0x01D50308 BL 0x35C52F0
	0x01D5030C ADRP X8, 0x23A3000

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01D50310 LDR X8, [X8 + 0xDB0]
	0x01D50314 MOVZ W1, 0x3
	0x01D50318 LDR X0, [X8]
	0x01D5031C BL 0x1C16D6C
	0x01D50320 ADRP X22, 0x23A3000
	0x01D50324 LDR X22, [X22 + 0x648]
	0x01D50328 MOV X20, X0
	0x01D5032C LDR X8, [X22]
	0x01D50330 LDR W9, [X8 + 0xE0]
	0x01D50334 CBNZ W9, 0x1D50340
	0x01D50338 MOV X0, X8
	0x01D5033C BL 0x1C16DFC
	0x01D50340 ADRP X23, 0x2688000
	0x01D50344 LDRB W8, [X23 + 0x787]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x23A4000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x23A5000
	011 Move X0, [X0+2872]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01D50348 CBNZ W8, 0x1D50360
	0x01D5034C ADRP X0, 0x23A3000

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Collections.Generic.IEnumerator`1<System.String> System.Collections.Generic.IEnumerable<System.String>.GetEnumerator()

Disassembly:
	0x01D50350 LDR X0, [X0 + 0x648]
	0x01D50354 BL 0x1C16CF4
	0x01D50358 MOVZ W8, 0x1
	0x01D5035C STRB W8, [X23 + 0x787]
	0x01D50360 LDR X0, [X22]
	0x01D50364 LDR W8, [X0 + 0xE0]
	0x01D50368 CBNZ W8, 0x1D50374
	0x01D5036C BL 0x1C16DFC
	0x01D50370 LDR X0, [X22]
	0x01D50374 LDR X8, [X0 + 0xB8]
	0x01D50378 LDR X8, [X8]
	0x01D5037C CBZ X8, 0x1D504B8
	0x01D50380 LDR X8, [X8 + 0xE0]
	0x01D50384 CBZ X8, 0x1D504B8
	0x01D50388 CBZ X20, 0x1D504B8
	0x01D5038C LDR X21, [X8 + 0x48]
	0x01D50390 CBZ X21, 0x1D503A8
	0x01D50394 LDR X8, [X20]
	0x01D50398 MOV X0, X21
	0x01D5039C LDR X1, [X8 + 0x40]
	0x01D503A0 BL 0x1C16E00
	0x01D503A4 CBZ X0, 0x1D504C0
	0x01D503A8 LDR W8, [X20 + 0x18]
	0x01D503AC CBZ W8, 0x1D504BC
	0x01D503B0 STR X21, [X20 + 0x20]
	0x01D503B4 LDRB W8, [X23 + 0x787]
	0x01D503B8 CBNZ W8, 0x1D503D0
	0x01D503BC ADRP X0, 0x23A3000
	0x01D503C0 LDR X0, [X0 + 0x648]
	0x01D503C4 BL 0x1C16CF4
	0x01D503C8 MOVZ W8, 0x1
	0x01D503CC STRB W8, [X23 + 0x787]
	0x01D503D0 LDR X0, [X22]
	0x01D503D4 LDR W8, [X0 + 0xE0]
	0x01D503D8 CBNZ W8, 0x1D503E4
	0x01D503DC BL 0x1C16DFC
	0x01D503E0 LDR X0, [X22]
	0x01D503E4 LDR X8, [X0 + 0xB8]
	0x01D503E8 LDR X8, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2689000
	005 Move W8, [X20+1960]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x23A5000
	012 Move X0, [X0+2864]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1960], W8
	016 Move W8, [X19+16]
	017 Add W31, W8, 2
	018 Move W20, [X19+32]
	019 Move X0, X31
	020 Call Environment.get_CurrentManagedThreadId
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move [X19+16], W31
	023 Move X8, 0x23A5000
	024 Move X8, [X8+2864]
	025 Move X0, [X8]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X20, X0
	029 Call Object..ctor, X0
	030 Move X0, X31
	031 Move [X20+16], W31
	032 Call Environment.get_CurrentManagedThreadId
	033 Move [X20+32], W0
	034 Move X8, [X19+40]
	035 Move X19, X20
	036 Move [X20+40], X8
	037 Move X0, X19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x01D503EC CBZ X8, 0x1D504B8

ISIL:
	001 Call <get_itemIDs>d__48.System.Collections.Generic.IEnumerable<System.String>.GetEnumerator, X0
	002 Return X0

