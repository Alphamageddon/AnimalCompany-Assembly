Type: AnimalCompany.PlayerWatchView/<SetMoneyTextAnimationCoroutine>d__44

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01CCAEC8 LDP X22, X21, [X31 + 0x20]
	0x01CCAECC LDP X24, X23, [X31 + 0x10]
	0x01CCAED0 MOV X1, X31
	0x01CCAED4 LDR X30, [X31], #0x40
	0x01CCAED8 B 0x3A64440
	0x01CCAEDC BL 0x1B6EA1C
	0x01CCAEE0 STR X30, [X31 - 0x30]!
	0x01CCAEE4 STP X22, X21, [X31 + 0x10]
	0x01CCAEE8 STP X20, X19, [X31 + 0x20]
	0x01CCAEEC ADRP X20, 0x2559000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01CCB0C0 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01CCB0C4 LDP X22, X21, [X31 + 0x10]
	0x01CCB0C8 LDR X30, [X31], #0x30
	0x01CCB0CC BR X2
	0x01CCB0D0 BL 0x1B6EA1C
	0x01CCB0D4 LDRB W0, [X0 + 0x40]
	0x01CCB0D8 RET
	0x01CCB0DC STP X30, X21, [X31 - 0x20]!
	0x01CCB0E0 STP X20, X19, [X31 + 0x10]
	0x01CCB0E4 ADRP X21, 0x2558000
	0x01CCB0E8 ADRP X20, 0x2284000
	0x01CCB0EC LDRB W8, [X21 + 0x588]
	0x01CCB0F0 LDR X20, [X20 + 0x598]
	0x01CCB0F4 MOV X19, X0
	0x01CCB0F8 TBNZ X8, 0x0, 0x1CCB110
	0x01CCB0FC ADRP X0, 0x2284000
	0x01CCB100 LDR X0, [X0 + 0x598]
	0x01CCB104 BL 0x1B6E7F0
	0x01CCB108 MOVZ W8, 0x1
	0x01CCB10C STRB W8, [X21 + 0x588]
	0x01CCB110 LDR X0, [X20]
	0x01CCB114 LDR W8, [X0 + 0xE0]
	0x01CCB118 CBNZ W8, 0x1CCB124
	0x01CCB11C BL 0x1B6E8F8
	0x01CCB120 LDR X0, [X20]
	0x01CCB124 LDR X8, [X0 + 0xB8]
	0x01CCB128 MOV X0, X19
	0x01CCB12C MOV X1, X31
	0x01CCB130 LDR V0, [X8]
	0x01CCB134 MOVZ W8, 0x1
	0x01CCB138 STRB W8, [X19 + 0x40]
	0x01CCB13C STR V0, [X19 + 0x3]
	0x01CCB140 LDP X20, X19, [X31 + 0x10]
	0x01CCB144 LDP X30, X21, [X31], #0x20
	0x01CCB148 B 0x33DDC04
	0x01CCB14C STP X30, X19, [X31 - 0x10]!
	0x01CCB150 MOV X19, X0
	0x01CCB154 LDR X0, [X0 + 0x28]
	0x01CCB158 CBNZ X0, 0x1CCB174
	0x01CCB15C BL 0x3A6640C
	0x01CCB160 CBZ X0, 0x1CCB194
	0x01CCB164 LDR W8, [X0 + 0x18]
	0x01CCB168 CBZ W8, 0x1CCB198
	0x01CCB16C LDR X0, [X0 + 0x20]
	0x01CCB170 STR X0, [X19 + 0x28]
	0x01CCB174 MOVZ W1, 0x1
	0x01CCB178 MOVZ W2, 0x3E7
	0x01CCB17C MOVZ W3, 0xAC44
	0x01CCB180 MOV X4, X31
	0x01CCB184 BL 0x3A661FC
	0x01CCB188 STR X0, [X19 + 0x30]
	0x01CCB18C LDP X30, X19, [X31], #0x10
	0x01CCB190 RET
	0x01CCB194 BL 0x1B6EA1C
	0x01CCB198 BL 0x1B6EA24
	0x01CCB19C LDR X0, [X0 + 0x28]
	0x01CCB1A0 MOV X1, X31
	0x01CCB1A4 B 0x3A66390
	0x01CCB1A8 STR D8, [X31 - 0x30]!
	0x01CCB1AC STP X30, X21, [X31 + 0x10]
	0x01CCB1B0 STP X20, X19, [X31 + 0x20]
	0x01CCB1B4 ADRP X21, 0x2558000
	0x01CCB1B8 ADRP X20, 0x2283000
	0x01CCB1BC LDRB W8, [X21 + 0x589]
	0x01CCB1C0 LDR X20, [X20 + 0xFC0]
	0x01CCB1C4 MOV X19, X0
	0x01CCB1C8 TBNZ X8, 0x0, 0x1CCB1E0
	0x01CCB1CC ADRP X0, 0x2283000
	0x01CCB1D0 LDR X0, [X0 + 0xFC0]
	0x01CCB1D4 BL 0x1B6E7F0
	0x01CCB1D8 MOVZ W8, 0x1
	0x01CCB1DC STRB W8, [X21 + 0x589]
	0x01CCB1E0 LDR W1, [X19 + 0x38]
	0x01CCB1E4 LDR X0, [X20]
	0x01CCB1E8 BL 0x1B6E868
	0x01CCB1EC MOV X20, X0
	0x01CCB1F0 MOV X0, X31
	0x01CCB1F4 MOV X1, X31
	0x01CCB1F8 BL 0x3A664B4
	0x01CCB1FC LDR W8, [X19 + 0x38]
	0x01CCB200 FMOV S8, W31
	0x01CCB204 ORN W8, W31, W8, 0x0
	0x01CCB208 ADDS W2, W0, W8
	0x01CCB20C B.MI 0x1CCB268
	0x01CCB210 LDR X0, [X19 + 0x30]
	0x01CCB214 CBZ X0, 0x1CCB280
	0x01CCB218 MOV X1, X20
	0x01CCB21C MOV X3, X31
	0x01CCB220 BL 0x3A64CF4
	0x01CCB224 LDRSW X8, [X19 + 0x38]
	0x01CCB228 CMP W8, 0x1
	0x01CCB22C B.LT 0x1CCB268
	0x01CCB230 CBZ X20, 0x1CCB280
	0x01CCB234 LDR W10, [X20 + 0x18]
	0x01CCB238 MOV X9, X31
	0x01CCB23C ADD X11, X20, 0x20
	0x01CCB240 FMOV S8, W31
	0x01CCB244 CMP X9, X10
	0x01CCB248 B.CS 0x1CCB27C
	0x01CCB24C LDR V0, [X11, X9, LSL #2]
	0x01CCB250 ADD X9, X9, 0x1
	0x01CCB254 FMUL S0, S0, S0
	0x01CCB258 FCMP S8, S0
	0x01CCB25C FCSEL S8, S0, S8, MI
	0x01CCB260 CMP X9, X8
	0x01CCB264 B.LT 0x1CCB244
	0x01CCB268 LDP X20, X19, [X31 + 0x20]
	0x01CCB26C LDP X30, X21, [X31 + 0x10]
	0x01CCB270 MOV V0.16B, V8.16B
	0x01CCB274 LDR V8, [X31], #0x30
	0x01CCB278 RET
	0x01CCB27C BL 0x1B6EA24
	0x01CCB280 BL 0x1B6EA1C
	0x01CCB284 STP X30, X21, [X31 - 0x20]!
	0x01CCB288 STP X20, X19, [X31 + 0x10]
	0x01CCB28C ADRP X21, 0x2558000
	0x01CCB290 ADRP X20, 0x2284000
	0x01CCB294 LDRB W8, [X21 + 0x58A]
	0x01CCB298 LDR X20, [X20 + 0x678]
	0x01CCB29C MOV X19, X0
	0x01CCB2A0 TBNZ X8, 0x0, 0x1CCB2B8
	0x01CCB2A4 ADRP X0, 0x2284000
	0x01CCB2A8 LDR X0, [X0 + 0x678]
	0x01CCB2AC BL 0x1B6E7F0
	0x01CCB2B0 MOVZ W8, 0x1
	0x01CCB2B4 STRB W8, [X21 + 0x58A]
	0x01CCB2B8 MOV X0, X19
	0x01CCB2BC BL 0x1CCB1A8
	0x01CCB2C0 LDR X8, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2559000
	007 Move W8, [X20+1401]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x2285000
	014 Move X0, [X0+1304]
	015 Call 0x1B6F7F0
	016 Move X0, 0x2285000
	017 Move X0, [X0+1544]
	018 Call 0x1B6F7F0
	019 Move W8, 1
	020 Move [X20+1401], W8
	021 Move W8, [X19+16]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X20, [X19+32]
	024 Move X9, -18735104
	025 Add X9, X9, 2333
	026 NotImplemented "Instruction ADR not yet implemented."
	027 Move W11, [X9]
	028 Add X10, X10, X11
	029 CallNoReturn X10
	030 Move TEMP, 0
	031 Not TEMP
	032 Move W8, TEMP
	033 Move [X19+16], W8
	034 Compare X20, 0
	035 JumpIfEqual {147}
	036 Move X0, [X20+72]
	037 Compare X0, 0
	038 JumpIfEqual {147}
	039 Move X1, X31
	040 Call AudioSource.Play, X0
	041 Move W1, 1
	042 Move X0, X20
	043 Call PlayerWatchView.SetLED, X0, X1
	044 Move W1, [X19+40]
	045 Move W8, [X19+44]
	046 Move [X19+48], W31
	047 Subtract W21, W1, W8
	048 Call PlayerWatchView.GetMoneyText, X0, X1
	049 Move X22, 0x2285000
	050 Move X22, [X22+1304]
	051 Move X1, X0
	052 Move X2, X31
	053 Move X8, [X22]
	054 Move X0, X8
	055 Call String.Concat, X0, X1
	056 Move [X19+56], X0
	057 Move X8, 0x2285000
	058 Move X8, [X8+1544]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move W1, W21
	061 NotImplemented "Instruction CSEL not yet implemented."
	062 Move X22, [X8]
	063 Call PlayerWatchView.GetMoneyText, X0, X1
	064 Move X1, X0
	065 Move X0, X22
	066 Move X2, X31
	067 Call String.Concat, X0, X1
	068 Move [X19+64], X0
	069 Move X1, X0
	070 Move X0, [X20+48]
	071 Compare X0, 0
	072 JumpIfEqual {147}
	073 Move X8, [X0]
	074 Move X9, [X8+1368]
	075 Move X2, [X8+1376]
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move TEMP, 0
	078 Not TEMP
	079 Move W8, TEMP
	080 Move [X19+16], W8
	081 Compare X20, 0
	082 JumpIfEqual {147}
	083 Move X0, [X20+48]
	084 Compare X0, 0
	085 JumpIfEqual {147}
	086 Move W1, W31
	087 Move X2, X31
	088 Call Behaviour.set_enabled, X0, X1
	089 Move X8, [X20+200]
	090 Move W9, 2
	091 Move [X19+16], W9
	092 Move W0, 1
	093 Move [X19+24], X8
	094 Move TEMP, 0
	095 Not TEMP
	096 Move W8, TEMP
	097 Move [X19+16], W8
	098 Compare X20, 0
	099 JumpIfEqual {147}
	100 Move X0, [X20+48]
	101 Compare X0, 0
	102 JumpIfEqual {147}
	103 Move W1, 1
	104 Move X2, X31
	105 Call Behaviour.set_enabled, X0, X1
	106 Move X0, [X20+48]
	107 Compare X0, 0
	108 JumpIfEqual {147}
	109 Move W8, [X19+48]
	110 Move X9, [X0]
	111 Move W10, 64
	112 Move W11, 56
	113 And W31, W8, 1
	114 NotImplemented "Instruction CSEL not yet implemented."
	115 Move X8, [X9+1368]
	116 Move X1, [X19]
	117 Move X2, [X9+1376]
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move W8, [X19+48]
	120 Add W8, W8, 1
	121 Move [X19+48], W8
	122 Move W8, [X19+48]
	123 Move X9, [X20+208]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move [X19+24], X9
	126 Move W0, 1
	127 Move [X19+16], W0
	128 Move TEMP, 0
	129 Not TEMP
	130 Move W8, TEMP
	131 Move [X19+16], W8
	132 Compare X20, 0
	133 JumpIfEqual {147}
	134 Move X0, X20
	135 Move W1, W31
	136 Call PlayerWatchView.SetLED, X0, X1
	137 Move W0, W31
	138 Move W8, 3
	139 Move [X19+16], W8
	140 Move W0, 1
	141 Move X20, [X31+32]
	142 Move X19, [X31+40]
	143 Move X22, [X31+16]
	144 Move X21, [X31+24]
	145 Move X30, [X31+48]
	146 Return X0
	147 Call 0x1B6FA1C

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x01CCB2C4 LDR X8, [X8 + 0xB8]
	0x01CCB2C8 STR S0, [X8]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01CCB2CC LDR X0, [X19 + 0x20]
	0x01CCB2D0 CBZ X0, 0x1CCB2E8
	0x01CCB2D4 LDR V1, [X19 + 0x3C]
	0x01CCB2D8 LDP X20, X19, [X31 + 0x10]
	0x01CCB2DC FMUL S0, S0, S1
	0x01CCB2E0 LDP X30, X21, [X31], #0x20
	0x01CCB2E4 B 0x1CBA280
	0x01CCB2E8 BL 0x1B6EA1C
	0x01CCB2EC STP X30, X19, [X31 - 0x10]!
	0x01CCB2F0 MOV X19, X0
	0x01CCB2F4 BL 0x1CCB14C
	0x01CCB2F8 MOVZ W8, 0x1
	0x01CCB2FC STRB W8, [X19 + 0x40]
	0x01CCB300 LDP X30, X19, [X31], #0x10

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x2283000
	004 Move X0, [X0+2448]
	005 Call 0x1B6F804
	006 Call 0x1B6FA0C
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2285000
	011 Move X0, [X0+1552]
	012 Call 0x1B6F804
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1B6F8E8

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01CCB304 RET
	0x01CCB308 LDR X0, [X0 + 0x28]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

