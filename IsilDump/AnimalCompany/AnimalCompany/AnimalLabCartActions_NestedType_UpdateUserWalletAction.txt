Type: AnimalCompany.AnimalLabCartActions/UpdateUserWalletAction

Method: System.Void .ctor(System.Int32 softCurrency, System.Int32 hardCurrency)

Disassembly:
	0x01D59E94 BL 0x1D36B98
	0x01D59E98 STUR D8, [X21 + 0x14]
	0x01D59E9C CBZ X20, 0x1D59FAC
	0x01D59EA0 LDR X8, [X20]
	0x01D59EA4 MOV X0, X21
	0x01D59EA8 LDR X1, [X8 + 0x40]
	0x01D59EAC BL 0x1C16E00
	0x01D59EB0 CBZ X0, 0x1D59FB0
	0x01D59EB4 LDR W8, [X20 + 0x18]
	0x01D59EB8 CBZ W8, 0x1D59FBC
	0x01D59EBC MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W20, W1
	006 Move X1, X31
	007 Move W19, W2
	008 Move X21, X0
	009 Call BaseAction..ctor, X0
	010 Move [X21+20], W20
	011 Move [X21+24], W19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return 

Method: System.Void Execute(AnimalCompany.AppState state)

Disassembly:
	0x01D59EC0 MOV X1, X31
	0x01D59EC4 STR X21, [X20 + 0x20]
	0x01D59EC8 BL 0x1D351C4
	0x01D59ECC STR X31, [X19 + 0x38]
	0x01D59ED0 ADRP X8, 0x239C000
	0x01D59ED4 LDR X20, [X19 + 0x20]
	0x01D59ED8 LDR X8, [X8 + 0x300]
	0x01D59EDC LDR X0, [X8]
	0x01D59EE0 BL 0x1C16F10
	0x01D59EE4 ADRP X8, 0x239C000
	0x01D59EE8 LDR X8, [X8 + 0x338]
	0x01D59EEC MOV X1, X20
	0x01D59EF0 MOV X3, X31
	0x01D59EF4 MOV X21, X0
	0x01D59EF8 LDR X2, [X8]
	0x01D59EFC BL 0x2695A98
	0x01D59F00 ADRP X8, 0x239C000
	0x01D59F04 LDR X8, [X8 + 0x2B0]
	0x01D59F08 MOV X0, X21
	0x01D59F0C MOV W1, W31
	0x01D59F10 MOV X2, X31
	0x01D59F14 LDR X3, [X8]
	0x01D59F18 BL 0x21A309C
	0x01D59F1C MOVZ W8, 0x2
	0x01D59F20 STR X0, [X19 + 0x30]
	0x01D59F24 STR X0, [X19 + 0x18]
	0x01D59F28 STR W8, [X19 + 0x10]
	0x01D59F2C MOVZ W0, 0x1
	0x01D59F30 B 0x1D59F88
	0x01D59F34 ADRP X8, 0x239A000
	0x01D59F38 LDR X8, [X8 + 0x788]
	0x01D59F3C LDR X0, [X8]
	0x01D59F40 LDR W8, [X0 + 0xE0]
	0x01D59F44 CBNZ W8, 0x1D59F4C
	0x01D59F48 BL 0x1C16DFC
	0x01D59F4C ADRP X8, 0x239C000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2680000
	006 Move W8, [X21+2043]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x239B000
	014 Move X0, [X0+3648]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2043], W8
	018 Compare X20, 0
	019 JumpIfEqual {51}
	020 Move X8, [X20+184]
	021 Compare X8, 0
	022 JumpIfEqual {51}
	023 Move X8, [X8+128]
	024 Compare X8, 0
	025 JumpIfEqual {51}
	026 Move X0, [X8+72]
	027 Compare X0, 0
	028 JumpIfEqual {51}
	029 Move X21, 0x239B000
	030 Move X21, [X21+3648]
	031 Move W1, [X19+20]
	032 Move X2, [X21]
	033 Call StatePrimitive`1<Int32>.set_value, X0, X1
	034 Move X8, [X20+184]
	035 Compare X8, 0
	036 JumpIfEqual {51}
	037 Move X8, [X8+128]
	038 Compare X8, 0
	039 JumpIfEqual {51}
	040 Move X0, [X8+80]
	041 Compare X0, 0
	042 JumpIfEqual {51}
	043 Move W1, [X19+24]
	044 Move X2, [X21]
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Call StatePrimitive`1<Int32>.set_value, X0, X1
	050 Return 
	051 Call 0x1C17F20

