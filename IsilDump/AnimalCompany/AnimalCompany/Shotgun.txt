Type: AnimalCompany.Shotgun

Method: System.Int32 get__ammoLeft()

Disassembly:
	0x01DA4BEC LDR X0, [X0 + 0x3B8]
	0x01DA4BF0 BL 0x1C16CF4
	0x01DA4BF4 ADRP X0, 0x2351000
	0x01DA4BF8 LDR X0, [X0 + 0x9A0]
	0x01DA4BFC BL 0x1C16CF4
	0x01DA4C00 ADRP X0, 0x234F000
	0x01DA4C04 LDR X0, [X0 + 0x598]
	0x01DA4C08 BL 0x1C16CF4
	0x01DA4C0C ADRP X0, 0x234F000
	0x01DA4C10 LDR X0, [X0 + 0x5F8]
	0x01DA4C14 BL 0x1C16CF4
	0x01DA4C18 MOVZ W8, 0x1
	0x01DA4C1C STRB W8, [X22 + 0xA8B]
	0x01DA4C20 MOVI V0.2D, 0x0
	0x01DA4C24 MOV X0, X20
	0x01DA4C28 MOV X1, X31
	0x01DA4C2C STUR V0, [X31 + 0x3C]
	0x01DA4C30 STP V0, V0, [X31 + 0x20]
	0x01DA4C34 STR X31, [X31 + 0x98]
	0x01DA4C38 BL 0x3C32E90
	0x01DA4C3C CBZ X0, 0x1DA504C
	0x01DA4C40 MOV X1, X31
	0x01DA4C44 BL 0x3C3FA04
	0x01DA4C48 MOV X0, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move W0, [X8]
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0
	010 Move X0, 0x2350000
	011 Move X0, [X0+1456]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0x2354000
	016 Move X0, [X0+760]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x2354000
	023 Move X0, [X0+768]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: System.Void set__ammoLeft(System.Int32 value)

Disassembly:
	0x01DA4C4C MOV V8.16B, V0.16B
	0x01DA4C50 MOV V9.16B, V1.16B
	0x01DA4C54 MOV V10.16B, V2.16B
	0x01DA4C58 BL 0x3C30A30
	0x01DA4C5C MOV X0, X31
	0x01DA4C60 MOV V11.16B, V0.16B
	0x01DA4C64 BL 0x3C30A30
	0x01DA4C68 MOV X0, X20
	0x01DA4C6C MOV X1, X31
	0x01DA4C70 MOV V12.16B, V0.16B
	0x01DA4C74 BL 0x3C32E90
	0x01DA4C78 CBZ X0, 0x1DA504C
	0x01DA4C7C MOV X1, X31
	0x01DA4C80 BL 0x3C3F90C
	0x01DA4C84 MOV X0, X20
	0x01DA4C88 MOV X1, X31
	0x01DA4C8C MOV V13.16B, V0.16B
	0x01DA4C90 MOV V14.16B, V1.16B
	0x01DA4C94 MOV V15.16B, V2.16B
	0x01DA4C98 BL 0x3C32E90
	0x01DA4C9C CBZ X0, 0x1DA504C
	0x01DA4CA0 MOV X1, X31
	0x01DA4CA4 BL 0x3C3F988
	0x01DA4CA8 CBZ X21, 0x1DA504C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move [X8], W1
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 
	010 Move X0, 0x2350000
	011 Move X0, [X0+1456]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0x2354000
	016 Move X0, [X0+760]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x2354000
	023 Move X0, [X0+776]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: Fusion.TickTimer get_reloadTimer()

Disassembly:
	0x01DA4CAC ADRP X9, 0x2353000
	0x01DA4CB0 LDR X9, [X9 + 0x3B8]
	0x01DA4CB4 LDR W10, [X21 + 0x1C]
	0x01DA4CB8 LDR X8, [X21 + 0x10]
	0x01DA4CBC LDR X9, [X9]
	0x01DA4CC0 ADD W10, W10, 0x1
	0x01DA4CC4 STR W10, [X21 + 0x1C]
	0x01DA4CC8 CBZ X8, 0x1DA504C
	0x01DA4CCC ADRP X11, 0xFFFFFFFFFED46000
	0x01DA4CD0 LDR V3, [X11 + 0x2C8]
	0x01DA4CD4 FMOV S4, -0.5
	0x01DA4CD8 LDRSW X10, [X21 + 0x18]
	0x01DA4CDC LDR W11, [X8 + 0x18]
	0x01DA4CE0 FADD S5, S11, S4
	0x01DA4CE4 FADD S4, S12, S4
	0x01DA4CE8 FMUL S5, S5, S3
	0x01DA4CEC FMUL S3, S4, S3
	0x01DA4CF0 FMUL S4, S5, S15
	0x01DA4CF4 FMUL S6, S5, S14
	0x01DA4CF8 FMUL S5, S5, S13
	0x01DA4CFC FMUL S0, S3, S0
	0x01DA4D00 FMUL S1, S3, S1
	0x01DA4D04 FMUL S2, S3, S2
	0x01DA4D08 FADD S0, S5, S0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move W0, [X8+4]
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0
	010 Move X0, 0x2350000
	011 Move X0, [X0+1456]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0x2354000
	016 Move X0, [X0+784]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x2354000
	023 Move X0, [X0+792]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: System.Void set_reloadTimer(Fusion.TickTimer value)

Disassembly:
	0x01DA4D0C FADD S1, S6, S1
	0x01DA4D10 FADD S2, S4, S2
	0x01DA4D14 CMP W10, W11
	0x01DA4D18 FADD S8, S8, S0
	0x01DA4D1C FADD S9, S9, S1
	0x01DA4D20 FADD S10, S10, S2
	0x01DA4D24 B.CS 0x1DA4D44
	0x01DA4D28 MOVZ W11, 0xC
	0x01DA4D2C ADD W9, W10, 0x1
	0x01DA4D30 MADD X8, X10, X11, X8
	0x01DA4D34 STR W9, [X21 + 0x18]
	0x01DA4D38 STP S8, S9, [X8 + 0x20]
	0x01DA4D3C STR S10, [X8 + 0x28]
	0x01DA4D40 B 0x1DA4D64
	0x01DA4D44 LDR X8, [X9 + 0x20]
	0x01DA4D48 MOV X0, X21
	0x01DA4D4C MOV V0.16B, V8.16B
	0x01DA4D50 MOV V1.16B, V9.16B
	0x01DA4D54 LDR X8, [X8 + 0xC0]
	0x01DA4D58 MOV V2.16B, V10.16B
	0x01DA4D5C LDR X1, [X8 + 0x70]
	0x01DA4D60 BL 0x30CC1B4
	0x01DA4D64 LDR X0, [X20 + 0x88]
	0x01DA4D68 CBZ X0, 0x1DA504C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move [X8+4], W1
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 
	010 Move X0, 0x2350000
	011 Move X0, [X0+1456]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0x2354000
	016 Move X0, [X0+784]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x2354000
	023 Move X0, [X0+800]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: System.Void Awake()

Disassembly:
	0x01DA4D6C ADRP X21, 0x234F000
	0x01DA4D70 LDR X21, [X21 + 0xA28]
	0x01DA4D74 MOV X1, X31
	0x01DA4D78 BL 0x3C3F58C
	0x01DA4D7C LDR X0, [X21]
	0x01DA4D80 MOV V11.16B, V0.16B
	0x01DA4D84 MOV V12.16B, V1.16B
	0x01DA4D88 MOV V13.16B, V2.16B
	0x01DA4D8C LDR W8, [X0 + 0xE0]
	0x01DA4D90 CBNZ W8, 0x1DA4D98
	0x01DA4D94 BL 0x1C16DFC
	0x01DA4D98 MOVZ W8, 0x40A00000
	0x01DA4D9C MOVZ X9, 0x3F800000
	0x01DA4DA0 MOVZ W10, 0x3F800000
	0x01DA4DA4 MOV V0.16B, V11.16B
	0x01DA4DA8 MOV V1.16B, V12.16B
	0x01DA4DAC MOV V2.16B, V13.16B
	0x01DA4DB0 MOV V3.16B, V8.16B
	0x01DA4DB4 MOV V4.16B, V9.16B
	0x01DA4DB8 MOV V5.16B, V10.16B
	0x01DA4DBC MOV X0, X31
	0x01DA4DC0 STR W8, [X31 + 0x10]
	0x01DA4DC4 STP X10, X9, [X31]
	0x01DA4DC8 BL 0x3C05E00
	0x01DA4DCC LDR X0, [X20 + 0x88]
	0x01DA4DD0 CBZ X0, 0x1DA504C
	0x01DA4DD4 ADRP X21, 0x234F000
	0x01DA4DD8 LDR X21, [X21 + 0x5F8]
	0x01DA4DDC MOV X1, X31
	0x01DA4DE0 BL 0x3C3F58C
	0x01DA4DE4 ADD X0, X20, 0xA8
	0x01DA4DE8 MOV X1, X31
	0x01DA4DEC MOV V11.16B, V0.16B
	0x01DA4DF0 MOV V12.16B, V1.16B
	0x01DA4DF4 MOV V13.16B, V2.16B
	0x01DA4DF8 BL 0x3C35CC4
	0x01DA4DFC LDR X8, [X21]
	0x01DA4E00 MOV W20, W0
	0x01DA4E04 LDR W9, [X8 + 0xE0]
	0x01DA4E08 CBNZ W9, 0x1DA4E14
	0x01DA4E0C MOV X0, X8
	0x01DA4E10 BL 0x1C16DFC
	0x01DA4E14 ADD X0, X31, 0x20
	0x01DA4E18 FMOV S6, 20
	0x01DA4E1C MOVZ W2, 0x2
	0x01DA4E20 MOV V0.16B, V11.16B
	0x01DA4E24 MOV V1.16B, V12.16B
	0x01DA4E28 MOV V2.16B, V13.16B
	0x01DA4E2C MOV V3.16B, V8.16B
	0x01DA4E30 MOV V4.16B, V9.16B
	0x01DA4E34 MOV V5.16B, V10.16B
	0x01DA4E38 MOV W1, W20
	0x01DA4E3C MOV X3, X31
	0x01DA4E40 BL 0x3C8AEC8
	0x01DA4E44 TBZ X0, 0x0, 0x1DA5028
	0x01DA4E48 ADD X0, X31, 0x20
	0x01DA4E4C MOV X1, X31
	0x01DA4E50 BL 0x3C8E5C0
	0x01DA4E54 CBZ X0, 0x1DA504C
	0x01DA4E58 ADRP X8, 0x2353000
	0x01DA4E5C LDR X8, [X8 + 0x398]
	0x01DA4E60 LDR X1, [X8]
	0x01DA4E64 BL 0x21A3F50
	0x01DA4E68 CBZ X0, 0x1DA4F84
	0x01DA4E6C ADRP X8, 0x2351000
	0x01DA4E70 LDR X8, [X8 + 0x9A0]
	0x01DA4E74 LDR X9, [X0]
	0x01DA4E78 MOV X20, X0
	0x01DA4E7C LDR X8, [X8]
	0x01DA4E80 LDRB W11, [X9 + 0x130]
	0x01DA4E84 LDRB W10, [X8 + 0x130]
	0x01DA4E88 CMP W11, W10
	0x01DA4E8C B.CC 0x1DA4EB4
	0x01DA4E90 LDR X9, [X9 + 0xC8]
	0x01DA4E94 ADD X9, X9, X10, 0x3, LSL
	0x01DA4E98 LDUR X9, [X9 - 0x8]
	0x01DA4E9C CMP X9, X8
	0x01DA4EA0 B.NE 0x1DA4EB4
	0x01DA4EA4 MOV X0, X20
	0x01DA4EA8 MOV X1, X31
	0x01DA4EAC BL 0x1DAECCC
	0x01DA4EB0 TBNZ X0, 0x0, 0x1DA4F84
	0x01DA4EB4 CBZ X19, 0x1DA504C
	0x01DA4EB8 ADRP X8, 0x2353000
	0x01DA4EBC LDR X8, [X8 + 0x3A8]
	0x01DA4EC0 ADD X2, X31, 0x98
	0x01DA4EC4 MOV X0, X19
	0x01DA4EC8 MOV X1, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2635000
	008 Move X21, 0x2353000
	009 Move W8, [X20+2693]
	010 Move X21, [X21+2968]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x2351000
	017 Move X0, [X0+3696]
	018 Call 0x1C17CF4
	019 Move X0, 0x2353000
	020 Move X0, [X0+2968]
	021 Call 0x1C17CF4
	022 Move X0, 0x2354000
	023 Move X0, [X0+808]
	024 Call 0x1C17CF4
	025 Move X0, 0x2354000
	026 Move X0, [X0+816]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+2693], W8
	030 Move X1, [X21]
	031 Move X0, X19
	032 Call 0x21A4894, X0
	033 Move X23, [X19+128]
	034 Move [X19+208], X0
	035 Compare X23, 0
	036 JumpIfEqual {96}
	037 Move X22, 0x2351000
	038 Move X22, [X22+3696]
	039 Move X21, 0x2354000
	040 Move X20, [X23+472]
	041 Move X0, [X22]
	042 Move X21, [X21+816]
	043 Call 0x1C17F10
	044 Move X2, [X21]
	045 Move X1, X19
	046 Move X3, X31
	047 Move X21, X0
	048 Call Action..ctor, X0, X1, X2
	049 Move X0, X20
	050 Move X1, X21
	051 Move X2, X31
	052 Call Delegate.Combine, X0, X1
	053 Move X1, [X22]
	054 Compare X0, 0
	055 JumpIfEqual {61}
	056 Move X8, [X0]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move [X23+472], X0
	059 Move X8, [X0]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move [X23+472], X0
	062 Move X23, [X19+128]
	063 Compare X23, 0
	064 JumpIfEqual {96}
	065 Move X21, 0x2354000
	066 Move X20, [X23+480]
	067 Move X21, [X21+808]
	068 Move X0, X1
	069 Call 0x1C17F10
	070 Move X2, [X21]
	071 Move X1, X19
	072 Move X3, X31
	073 Move X21, X0
	074 Call Action..ctor, X0, X1, X2
	075 Move X0, X20
	076 Move X1, X21
	077 Move X2, X31
	078 Call Delegate.Combine, X0, X1
	079 Compare X0, 0
	080 JumpIfEqual {88}
	081 Move X1, [X22]
	082 Move X8, [X0]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move [X23+480], X0
	085 Move X8, [X0]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Call 0x1C181E0
	088 Move [X23+480], X0
	089 Move X20, [X31+32]
	090 Move X19, [X31+40]
	091 Move X22, [X31+16]
	092 Move X21, [X31+24]
	093 Move X30, [X31+48]
	094 Move X23, [X31+56]
	095 Return 
	096 Call 0x1C17F20

Method: System.Void OnDestroy()

Disassembly:
	0x01DA4ECC LDR X3, [X8]
	0x01DA4ED0 BL 0x2AA6B2C
	0x01DA4ED4 TBNZ X0, 0x0, 0x1DA4F14
	0x01DA4ED8 ADRP X8, 0x2353000
	0x01DA4EDC LDR X8, [X8 + 0x3B0]
	0x01DA4EE0 LDR X0, [X8]
	0x01DA4EE4 BL 0x1C16F10
	0x01DA4EE8 MOV X1, X31
	0x01DA4EEC MOV X21, X0
	0x01DA4EF0 BL 0x33BDD8C
	0x01DA4EF4 ADRP X8, 0x2353000
	0x01DA4EF8 LDR X8, [X8 + 0x3A0]
	0x01DA4EFC MOV X0, X19
	0x01DA4F00 MOV X1, X20
	0x01DA4F04 MOV X2, X21
	0x01DA4F08 LDR X3, [X8]
	0x01DA4F0C STR X21, [X31 + 0x98]
	0x01DA4F10 BL 0x2AA5098
	0x01DA4F14 LDR X19, [X31 + 0x98]
	0x01DA4F18 CBZ X19, 0x1DA504C
	0x01DA4F1C LDP S0, S1, [X19 + 0x20]
	0x01DA4F20 LDR W8, [X19 + 0x10]
	0x01DA4F24 LDR V2, [X19 + 0x28]
	0x01DA4F28 LDUR V3, [X19 + 0x14]
	0x01DA4F2C LDR V4, [X19 + 0x1C]
	0x01DA4F30 FADD S0, S8, S0
	0x01DA4F34 FADD S1, S9, S1
	0x01DA4F38 STP S0, S1, [X19 + 0x20]
	0x01DA4F3C MOVI V11.2S, 0x3F, 0x18
	0x01DA4F40 FADD S0, S10, S2
	0x01DA4F44 FMOV S12, 0.5
	0x01DA4F48 ADD W8, W8, 0xA
	0x01DA4F4C ADD X0, X31, 0x20
	0x01DA4F50 MOV X1, X31
	0x01DA4F54 STR S0, [X19 + 0x28]
	0x00000000 INVALID
	0x01DA4F5C STR W8, [X19 + 0x10]
	0x01DA4F60 FMUL S14, S4, S12
	0x01DA4F64 BL 0x3C8E66C
	0x01DA4F68 FMUL S2, S2, S12
	0x01DA4F6C MOV V0.S[1], V1.S[0]
	0x00000000 INVALID
	0x01DA4F74 FADD S1, S14, S2
	0x01DA4F78 FADD V0.2S, V13.2S, V0.2S
	0x01DA4F7C STUR D0, [X19 + 0x14]
	0x01DA4F80 STR S1, [X19 + 0x1C]
	0x01DA4F84 ADD X0, X31, 0x20
	0x01DA4F88 MOV X1, X31
	0x01DA4F8C BL 0x3C8E5C0
	0x01DA4F90 CBZ X0, 0x1DA504C
	0x01DA4F94 MOV X1, X31
	0x01DA4F98 BL 0x3C8E82C
	0x01DA4F9C ADRP X8, 0x234F000
	0x01DA4FA0 LDR X8, [X8 + 0x598]
	0x01DA4FA4 MOV X19, X0
	0x01DA4FA8 LDR X8, [X8]
	0x01DA4FAC LDR W9, [X8 + 0xE0]
	0x01DA4FB0 CBNZ W9, 0x1DA4FBC
	0x01DA4FB4 MOV X0, X8
	0x01DA4FB8 BL 0x1C16DFC
	0x01DA4FBC MOV X0, X19
	0x01DA4FC0 MOV X1, X31
	0x01DA4FC4 MOV X2, X31
	0x01DA4FC8 BL 0x3C354F8
	0x01DA4FCC TBZ X0, 0x0, 0x1DA5028
	0x01DA4FD0 ADD X0, X31, 0x20
	0x01DA4FD4 MOV X1, X31
	0x01DA4FD8 BL 0x3C8E5C0
	0x01DA4FDC CBZ X0, 0x1DA504C
	0x01DA4FE0 MOV X1, X31
	0x01DA4FE4 BL 0x3C8E82C
	0x01DA4FE8 MOV X19, X0
	0x01DA4FEC ADD X0, X31, 0x20
	0x01DA4FF0 MOV X1, X31
	0x01DA4FF4 BL 0x3C8E66C
	0x01DA4FF8 CBZ X19, 0x1DA504C
	0x01DA4FFC MOVZ W8, 0x42480000
	0x01DA5000 MOV V3.16B, V0.16B
	0x01DA5004 FMOV S0, W8
	0x01DA5008 MOV V4.16B, V1.16B
	0x01DA500C MOV V5.16B, V2.16B
	0x01DA5010 FMUL S2, S10, S0
	0x01DA5014 FMUL S1, S9, S0
	0x01DA5018 FMUL S0, S8, S0
	0x01DA501C MOV X0, X19
	0x01DA5020 MOV X1, X31
	0x01DA5024 BL 0x3C8F5E8
	0x01DA5028 LDP X20, X19, [X31 + 0xB0]
	0x01DA502C LDP X22, X21, [X31 + 0xA0]
	0x01DA5030 LDR X30, [X31 + 0x90]
	0x01DA5034 LDP D9, D8, [X31 + 0x80]
	0x01DA5038 LDP D11, D10, [X31 + 0x70]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2635000
	008 Move X21, 0x2353000
	009 Move W8, [X20+2694]
	010 Move X21, [X21+2680]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x2351000
	017 Move X0, [X0+3696]
	018 Call 0x1C17CF4
	019 Move X0, 0x2353000
	020 Move X0, [X0+2680]
	021 Call 0x1C17CF4
	022 Move X0, 0x2354000
	023 Move X0, [X0+808]
	024 Call 0x1C17CF4
	025 Move X0, 0x2354000
	026 Move X0, [X0+816]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+2694], W8
	030 Move X0, [X21]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Compare X19, 0
	036 JumpIfEqual {102}
	037 Move W8, [X19+48]
	038 Move X23, [X19+128]
	039 Or W8, W8, 8
	040 Move [X19+48], W8
	041 Compare X23, 0
	042 JumpIfEqual {102}
	043 Move X22, 0x2351000
	044 Move X22, [X22+3696]
	045 Move X21, 0x2354000
	046 Move X20, [X23+472]
	047 Move X0, [X22]
	048 Move X21, [X21+816]
	049 Call 0x1C17F10
	050 Move X2, [X21]
	051 Move X1, X19
	052 Move X3, X31
	053 Move X21, X0
	054 Call Action..ctor, X0, X1, X2
	055 Move X0, X20
	056 Move X1, X21
	057 Move X2, X31
	058 Call Delegate.Remove, X0, X1
	059 Move X1, [X22]
	060 Compare X0, 0
	061 JumpIfEqual {67}
	062 Move X8, [X0]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move [X23+472], X0
	065 Move X8, [X0]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move [X23+472], X0
	068 Move X23, [X19+128]
	069 Compare X23, 0
	070 JumpIfEqual {102}
	071 Move X21, 0x2354000
	072 Move X20, [X23+480]
	073 Move X21, [X21+808]
	074 Move X0, X1
	075 Call 0x1C17F10
	076 Move X2, [X21]
	077 Move X1, X19
	078 Move X3, X31
	079 Move X21, X0
	080 Call Action..ctor, X0, X1, X2
	081 Move X0, X20
	082 Move X1, X21
	083 Move X2, X31
	084 Call Delegate.Remove, X0, X1
	085 Compare X0, 0
	086 JumpIfEqual {94}
	087 Move X1, [X22]
	088 Move X8, [X0]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move [X23+480], X0
	091 Move X8, [X0]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Call 0x1C181E0
	094 Move [X23+480], X0
	095 Move X20, [X31+32]
	096 Move X19, [X31+40]
	097 Move X22, [X31+16]
	098 Move X21, [X31+24]
	099 Move X30, [X31+48]
	100 Move X23, [X31+56]
	101 Return 
	102 Call 0x1C17F20

Method: System.Void Spawned()

Disassembly:
	0x01DA503C LDP D13, D12, [X31 + 0x60]
	0x01DA5040 LDP D15, D14, [X31 + 0x50]
	0x01DA5044 ADD X31, X31, 0xC0
	0x01DA5048 RET
	0x01DA504C BL 0x1C16F20
	0x01DA5050 MOV X1, X31
	0x01DA5054 B 0x33BDD8C
	0x01DA5058 STR X30, [X31 - 0x20]!
	0x01DA505C STP X20, X19, [X31 + 0x10]
	0x01DA5060 ADRP X20, 0x2633000
	0x01DA5064 LDRB W8, [X20 + 0xA8C]
	0x01DA5068 MOV X19, X0
	0x01DA506C TBNZ X8, 0x0, 0x1DA5084
	0x01DA5070 ADRP X0, 0x234E000
	0x01DA5074 LDR X0, [X0 + 0x598]
	0x01DA5078 BL 0x1C16CF4
	0x01DA507C MOVZ W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call NetworkBehaviour.Spawned, X0
	006 Move X0, [X19+64]
	007 Compare X0, 0
	008 JumpIfEqual {26}
	009 Move W8, [X0+96]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 2
	012 Compare TEMP, 2
	013 JumpIfEqual {26}
	014 Move X1, X31
	015 Call NetworkObject.get_HasStateAuthority, X0
	016 Move TEMP, X0
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfNotEqual {26}
	020 Move W1, 2
	021 Move X0, X19
	022 Move X30, [X31+16]
	023 Move X19, [X31+24]
	024 Call Shotgun.set__ammoLeft, X0, X1
	025 Return 
	026 Move X30, [X31+16]
	027 Move X19, [X31+24]
	028 Return 

Method: System.Void RPC_Shoot()

Disassembly:
	0x01DA5080 STRB W8, [X20 + 0xA8C]
	0x01DA5084 MOV X0, X19
	0x01DA5088 BL 0x1DA3BEC
	0x01DA508C CMP W0, 0x1
	0x01DA5090 B.LT 0x1DA50A4
	0x01DA5094 MOV X0, X19
	0x01DA5098 LDP X20, X19, [X31 + 0x10]
	0x01DA509C LDR X30, [X31], #0x20
	0x01DA50A0 B 0x1DA4080
	0x01DA50A4 ADRP X8, 0x234E000
	0x01DA50A8 LDR X8, [X8 + 0x598]
	0x01DA50AC LDR X20, [X19 + 0x98]
	0x01DA50B0 LDR X0, [X8]
	0x01DA50B4 LDR W8, [X0 + 0xE0]
	0x01DA50B8 CBNZ W8, 0x1DA50C0
	0x01DA50BC BL 0x1C16DFC
	0x01DA50C0 MOV X0, X20
	0x01DA50C4 MOV X1, X31
	0x01DA50C8 MOV X2, X31
	0x01DA50CC BL 0x3C354F8
	0x01DA50D0 TBZ X0, 0x0, 0x1DA5108
	0x01DA50D4 LDR X20, [X19 + 0x98]
	0x01DA50D8 MOV X0, X19
	0x01DA50DC MOV X1, X31
	0x01DA50E0 BL 0x3C32E90
	0x01DA50E4 CBZ X0, 0x1DA5114
	0x01DA50E8 MOV X1, X31
	0x01DA50EC BL 0x3C3F58C
	0x01DA50F0 MOV X0, X20
	0x01DA50F4 LDP X20, X19, [X31 + 0x10]
	0x01DA50F8 FMOV S3, 1
	0x01DA50FC MOV X1, X31
	0x01DA5100 LDR X30, [X31], #0x20
	0x01DA5104 B 0x1DC15C4
	0x01DA5108 LDP X20, X19, [X31 + 0x10]
	0x01DA510C LDR X30, [X31], #0x20
	0x01DA5110 RET
	0x01DA5114 BL 0x1C16F20
	0x01DA5118 MOVZ W1, 0x2
	0x01DA511C B 0x1DA3C4C
	0x01DA5120 STR X30, [X31 - 0x30]!
	0x01DA5124 STP X22, X21, [X31 + 0x10]
	0x01DA5128 STP X20, X19, [X31 + 0x20]
	0x01DA512C ADRP X21, 0x2633000
	0x01DA5130 ADRP X22, 0x2352000
	0x01DA5134 ADRP X20, 0x2352000
	0x01DA5138 LDRB W8, [X21 + 0xA8D]
	0x01DA513C LDR X22, [X22 + 0x3C0]
	0x01DA5140 LDR X20, [X20 + 0x3C8]
	0x01DA5144 MOV X19, X0
	0x01DA5148 TBNZ X8, 0x0, 0x1DA516C
	0x01DA514C ADRP X0, 0x2352000
	0x01DA5150 LDR X0, [X0 + 0x3C8]
	0x01DA5154 BL 0x1C16CF4
	0x01DA5158 ADRP X0, 0x2352000
	0x01DA515C LDR X0, [X0 + 0x3C0]
	0x01DA5160 BL 0x1C16CF4
	0x01DA5164 MOVZ W8, 0x1
	0x01DA5168 STRB W8, [X21 + 0xA8D]
	0x01DA516C LDR X0, [X22]
	0x01DA5170 BL 0x1C16F10
	0x01DA5174 LDR X2, [X20]
	0x01DA5178 MOVZ W1, 0x13
	0x01DA517C MOV X20, X0
	0x01DA5180 BL 0x30CB9E8
	0x01DA5184 MOVZ W8, 0x2
	0x01DA5188 STR X20, [X19 + 0xC0]
	0x01DA518C STR W8, [X19 + 0xC8]
	0x01DA5190 MOV X0, X19
	0x01DA5194 LDP X20, X19, [X31 + 0x20]
	0x01DA5198 LDP X22, X21, [X31 + 0x10]
	0x01DA519C MOV X1, X31
	0x01DA51A0 LDR X30, [X31], #0x30
	0x01DA51A4 B 0x1E74F04
	0x01DA51A8 STP X30, X19, [X31 - 0x10]!
	0x01DA51AC LDR W1, [X0 + 0xC8]
	0x01DA51B0 MOV X19, X0
	0x01DA51B4 BL 0x1DA3C4C
	0x01DA51B8 LDR W1, [X19 + 0xCC]
	0x01DA51BC MOV X0, X19
	0x01DA51C0 LDP X30, X19, [X31], #0x10
	0x01DA51C4 B 0x1DA3D0C
	0x01DA51C8 STP X30, X19, [X31 - 0x10]!
	0x01DA51CC MOV X19, X0
	0x01DA51D0 BL 0x1DA3BEC
	0x01DA51D4 STR W0, [X19 + 0xC8]
	0x01DA51D8 MOV X0, X19
	0x01DA51DC BL 0x1DA3CAC
	0x01DA51E0 STR W0, [X19 + 0xCC]
	0x01DA51E4 LDP X30, X19, [X31], #0x10
	0x01DA51E8 RET
	0x01DA51EC STR X30, [X31 - 0x20]!
	0x01DA51F0 STP X20, X19, [X31 + 0x10]
	0x01DA51F4 ADRP X20, 0x2633000
	0x01DA51F8 LDRB W8, [X20 + 0xA8E]
	0x01DA51FC MOV X19, X0
	0x01DA5200 TBNZ X8, 0x0, 0x1DA5218

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2634000
	005 Move W8, [X20+2695]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x2352000
	012 Move X0, [X0+2680]
	013 Call 0x1C17CF4
	014 Move X0, 0x2353000
	015 Move X0, [X0+824]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2695], W8
	019 Move W8, [X19+88]
	020 Compare W8, 0
	021 JumpIfEqual {27}
	022 Move [X19+88], W31
	023 Move X0, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Move X20, 0x2352000
	028 Move X20, [X20+2680]
	029 Move X0, [X20]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X31
	036 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	037 Move X0, [X19+56]
	038 Compare X0, 0
	039 JumpIfEqual {121}
	040 Move X1, X31
	041 Call NetworkRunner.get_Stage, X0
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Return 
	047 Move X0, [X19+64]
	048 Compare X0, 0
	049 JumpIfEqual {121}
	050 Move X1, X31
	051 Call NetworkObject.GetLocalAuthorityMask, X0
	052 And W31, W0, 7
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {23}
	057 Move X8, [X19+56]
	058 Compare X8, 0
	059 JumpIfEqual {121}
	060 Move X0, [X8+80]
	061 Compare X0, 0
	062 JumpIfEqual {121}
	063 Move X1, X31
	064 Call Simulation.HasAnyActiveConnections, X0
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {43}
	069 Move X8, [X19+56]
	070 Compare X8, 0
	071 JumpIfEqual {121}
	072 Move X0, [X8+80]
	073 Move W1, 8
	074 Move X2, X31
	075 Call SimulationMessage.Allocate, X0, X1
	076 Move X8, [X19+64]
	077 Compare X8, 0
	078 JumpIfEqual {121}
	079 Move X8, [X8+32]
	080 Move X20, X0
	081 Compare X8, 0
	082 JumpIfEqual {101}
	083 Move W0, [X8]
	084 Move X0, [X20]
	085 Move X19, [X19+64]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X8, 0x2353000
	091 Move X8, [X8+824]
	092 Move X1, X19
	093 Move X20, [X31+16]
	094 Move X19, [X31+24]
	095 Move W2, 7
	096 Move X0, [X8]
	097 Move X3, X31
	098 Move X30, [X31+32]
	099 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	100 Return 
	101 Move X0, X31
	102 Move W1, [X19+104]
	103 Move W2, 1
	104 Move X3, X31
	105 Call RpcHeader.Create, X0, X1, X2
	106 Move [X20+28], X0
	107 Compare X20, 0
	108 JumpIfEqual {121}
	109 Move W8, 64
	110 Move [X20+12], W8
	111 Move X0, [X19+56]
	112 Compare X0, 0
	113 JumpIfEqual {121}
	114 Move X1, X20
	115 Move X20, [X31+16]
	116 Move X19, [X31+24]
	117 Move X2, X31
	118 Move X30, [X31+32]
	119 Call NetworkRunner.SendRpc, X0, X1
	120 Return 
	121 Call 0x1C17F20

Method: System.Void RPC_MuzzleFlash()

Disassembly:
	0x01DA578C ADRP X20, 0x234E000
	0x01DA5790 LDR X21, [X21 + 0x5D8]
	0x01DA5794 LDR X20, [X20 + 0x5F8]
	0x01DA5798 MOV X1, X31
	0x01DA579C BL 0x3C3F58C
	0x01DA57A0 LDR X0, [X21]
	0x01DA57A4 LDR V10, [X19 + 0x90]
	0x01DA57A8 MOV V8.16B, V0.16B
	0x01DA57AC MOV V9.16B, V1.16B
	0x01DA57B0 LDR W8, [X0 + 0xE0]
	0x01DA57B4 MOV V11.16B, V2.16B
	0x01DA57B8 CBNZ W8, 0x1DA57C4
	0x01DA57BC BL 0x1C16DFC
	0x01DA57C0 LDR X0, [X21]
	0x01DA57C4 LDR X8, [X0 + 0xB8]
	0x01DA57C8 MOV X1, X31
	0x01DA57CC LDR W0, [X8 + 0x48]
	0x01DA57D0 BL 0x3C35CB8
	0x01DA57D4 LDR X8, [X20]
	0x01DA57D8 MOV W20, W0
	0x01DA57DC LDR W9, [X8 + 0xE0]
	0x01DA57E0 CBNZ W9, 0x1DA57EC
	0x01DA57E4 MOV X0, X8
	0x01DA57E8 BL 0x1C16DFC
	0x01DA57EC MOV V0.16B, V8.16B
	0x01DA57F0 MOV V1.16B, V9.16B
	0x01DA57F4 MOV V2.16B, V11.16B
	0x01DA57F8 MOV V3.16B, V10.16B
	0x01DA57FC MOV W0, W20
	0x01DA5800 MOV X1, X31
	0x01DA5804 BL 0x3C8D090
	0x01DA5808 LDR X8, [X19 + 0x98]
	0x01DA580C CBZ X8, 0x1DA5A24
	0x01DA5810 LDP W2, W9, [X8 + 0x18]
	0x01DA5814 MOV X20, X0
	0x01DA5818 ADD W9, W9, 0x1
	0x01DA581C CMP W2, 0x1
	0x01DA5820 STP W31, W9, [X8 + 0x18]
	0x01DA5824 B.LT 0x1DA5838
	0x01DA5828 LDR X0, [X8 + 0x10]
	0x01DA582C MOV W1, W31
	0x01DA5830 MOV X3, X31
	0x01DA5834 BL 0x339FA34
	0x01DA5838 CBZ X20, 0x1DA5A24
	0x01DA583C LDR W8, [X20 + 0x18]
	0x01DA5840 CMP W8, 0x1
	0x01DA5844 B.LT 0x1DA59F8
	0x01DA5848 ADRP X24, 0x234E000
	0x01DA584C ADRP X25, 0x234E000
	0x01DA5850 ADRP X26, 0x234E000
	0x01DA5854 ADRP X27, 0x234E000
	0x01DA5858 ADRP X28, 0x2352000
	0x01DA585C LDR X24, [X24 + 0xA28]
	0x01DA5860 LDR X25, [X25 + 0x5F0]
	0x01DA5864 LDR X26, [X26 + 0x5E0]
	0x01DA5868 LDR X27, [X27 + 0x5D0]
	0x01DA586C LDR X28, [X28 + 0x400]
	0x01DA5870 MOV W23, W31
	0x01DA5874 CMP W23, W8
	0x01DA5878 B.CS 0x1DA5A28
	0x01DA587C ADD X8, X20, W23, 0x3, SXTW
	0x01DA5880 LDR X21, [X8 + 0x20]
	0x01DA5884 CBZ X21, 0x1DA5A24
	0x01DA5888 MOV X0, X21
	0x01DA588C MOV X1, X31
	0x01DA5890 BL 0x3C389D4
	0x01DA5894 LDR X8, [X24]
	0x01DA5898 MOV X22, X0
	0x01DA589C LDR W9, [X8 + 0xE0]
	0x01DA58A0 CBNZ W9, 0x1DA58AC
	0x01DA58A4 MOV X0, X8
	0x01DA58A8 BL 0x1C16DFC
	0x01DA58AC MOV X0, X22
	0x01DA58B0 MOV X1, X31
	0x01DA58B4 BL 0x3C0649C
	0x01DA58B8 ADD X1, X31, 0x8
	0x01DA58BC MOV X0, X21
	0x01DA58C0 MOV X2, X31
	0x01DA58C4 BL 0x1E02E94
	0x01DA58C8 TBZ X0, 0x0, 0x1DA59E8
	0x01DA58CC LDR X0, [X19 + 0x98]
	0x01DA58D0 CBZ X0, 0x1DA5A24
	0x01DA58D4 LDR X1, [X31 + 0x8]
	0x01DA58D8 LDR X2, [X25]
	0x01DA58DC BL 0x301C318
	0x01DA58E0 TBNZ X0, 0x0, 0x1DA59E8
	0x01DA58E4 LDR X0, [X19 + 0x98]
	0x01DA58E8 CBZ X0, 0x1DA5A24
	0x01DA58EC LDR W10, [X0 + 0x1C]
	0x01DA58F0 LDR X1, [X31 + 0x8]
	0x01DA58F4 LDR X8, [X0 + 0x10]
	0x01DA58F8 LDR X9, [X26]
	0x01DA58FC ADD W10, W10, 0x1
	0x01DA5900 STR W10, [X0 + 0x1C]
	0x01DA5904 CBZ X8, 0x1DA5A24
	0x01DA5908 LDRSW X10, [X0 + 0x18]
	0x01DA590C LDR W11, [X8 + 0x18]
	0x01DA5910 CMP W10, W11
	0x01DA5914 B.CS 0x1DA592C
	0x01DA5918 ADD W9, W10, 0x1
	0x01DA591C ADD X8, X8, X10, 0x3, LSL
	0x01DA5920 STR W9, [X0 + 0x18]
	0x01DA5924 STR X1, [X8 + 0x20]
	0x01DA5928 B 0x1DA593C
	0x01DA592C LDR X8, [X9 + 0x20]
	0x01DA5930 LDR X8, [X8 + 0xC0]
	0x01DA5934 LDR X2, [X8 + 0x70]
	0x01DA5938 BL 0x301BF90
	0x01DA593C LDR X21, [X31 + 0x8]
	0x01DA5940 MOV X0, X19
	0x01DA5944 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2634000
	006 Move W8, [X20+2696]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x2352000
	013 Move X0, [X0+2680]
	014 Call 0x1C17CF4
	015 Move X0, 0x2353000
	016 Move X0, [X0+904]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2696], W8
	020 Move W8, [X19+88]
	021 Compare W8, 0
	022 JumpIfEqual {47}
	023 Move [X19+88], W31
	024 Move X0, [X19+176]
	025 Compare X0, 0
	026 JumpIfEqual {140}
	027 Move W1, 1
	028 Move X2, X31
	029 Call GameObject.SetActive, X0, X1
	030 Move X0, [X19+184]
	031 Move W8, 5
	032 Move [X19+216], W8
	033 Compare X0, 0
	034 JumpIfEqual {140}
	035 Move X8, -19636224
	036 Move X2, [X19+192]
	037 Move X1, [X19+136]
	038 Move V0, [X8+712]
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move S1, 20
	042 Move X3, X31
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Call RayMeshController.Play, X0, X1, X2, V0, V1
	046 Return 
	047 Move X21, 0x2352000
	048 Move X21, [X21+2680]
	049 Move X0, [X21]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, X19
	055 Move X1, X31
	056 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	057 Move X0, [X19+56]
	058 Compare X0, 0
	059 JumpIfEqual {140}
	060 Move X1, X31
	061 Call NetworkRunner.get_Stage, X0
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X30, [X31+32]
	066 Move X21, [X31+40]
	067 Return 
	068 Move X0, [X19+64]
	069 Compare X0, 0
	070 JumpIfEqual {140}
	071 Move X1, X31
	072 Call NetworkObject.GetLocalAuthorityMask, X0
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfEqual {95}
	077 Move X0, [X21]
	078 Move X19, [X19+64]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move X8, 0x2353000
	084 Move X8, [X8+904]
	085 Move X1, X19
	086 Move X20, [X31+16]
	087 Move X19, [X31+24]
	088 Move W2, 1
	089 Move X0, [X8]
	090 Move X3, X31
	091 Move X30, [X31+32]
	092 Move X21, [X31+40]
	093 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	094 Return 
	095 Move X8, [X19+56]
	096 Compare X8, 0
	097 JumpIfEqual {140}
	098 Move W20, W0
	099 Move X0, [X8+80]
	100 Compare X0, 0
	101 JumpIfEqual {140}
	102 Move X1, X31
	103 Call Simulation.HasAnyActiveConnections, X0
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {139}
	108 Move X8, [X19+56]
	109 Compare X8, 0
	110 JumpIfEqual {140}
	111 Move X0, [X8+80]
	112 Move W1, 8
	113 Move X2, X31
	114 Call SimulationMessage.Allocate, X0, X1
	115 Move X8, [X19+64]
	116 Compare X8, 0
	117 JumpIfEqual {140}
	118 Move X8, [X8+32]
	119 Move X21, X0
	120 Compare X8, 0
	121 JumpIfEqual {123}
	122 Move W0, [X8]
	123 Move X0, X31
	124 Move W1, [X19+104]
	125 Move W2, 2
	126 Move X3, X31
	127 Call RpcHeader.Create, X0, X1, X2
	128 Move [X21+28], X0
	129 Compare X21, 0
	130 JumpIfEqual {140}
	131 Move W8, 64
	132 Move [X21+12], W8
	133 Move X0, [X19+56]
	134 Compare X0, 0
	135 JumpIfEqual {140}
	136 Move X1, X21
	137 Move X2, X31
	138 Call NetworkRunner.SendRpc, X0, X1
	139 And W31, W20, 7
	140 Call 0x1C17F20

Method: System.Void RPC_Reload()

Disassembly:
	0x01DA5948 BL 0x3C32E90
	0x01DA594C CBZ X0, 0x1DA5A24
	0x01DA5950 MOV X1, X31
	0x01DA5954 BL 0x3C3F58C
	0x01DA5958 CBZ X21, 0x1DA5A24
	0x01DA595C LDR X8, [X21]
	0x01DA5960 LDP S12, S11, [X19 + 0x90]
	0x01DA5964 LDR X1, [X27]
	0x01DA5968 LDR X22, [X28]
	0x01DA596C LDRH W9, [X8 + 0x12E]
	0x01DA5970 MOV V8.16B, V0.16B
	0x01DA5974 MOV V9.16B, V1.16B
	0x01DA5978 MOV V10.16B, V2.16B
	0x01DA597C CBZ X9, 0x1DA59A0
	0x01DA5980 LDR X10, [X8 + 0xB0]
	0x01DA5984 ADD X10, X10, 0x8
	0x01DA5988 LDUR X11, [X10 - 0x8]
	0x01DA598C CMP X11, X1
	0x01DA5990 B.EQ 0x1DA59B0
	0x01DA5994 SUBS X9, X9, 0x1
	0x01DA5998 ADD X10, X10, 0x10
	0x01DA599C B.NE 0x1DA5988
	0x01DA59A0 MOV X0, X21
	0x01DA59A4 MOV W2, W31
	0x01DA59A8 BL 0x1C5C788
	0x01DA59AC B 0x1DA59BC
	0x01DA59B0 LDRSW X9, [X10]
	0x01DA59B4 ADD X8, X8, X9, 0x4, LSL
	0x01DA59B8 ADD X0, X8, 0x138
	0x01DA59BC LDP X8, X4, [X0]
	0x01DA59C0 MOV X0, X21
	0x01DA59C4 MOV V0.16B, V8.16B
	0x01DA59C8 MOV V1.16B, V9.16B
	0x01DA59CC MOV V2.16B, V10.16B
	0x01DA59D0 MOV V3.16B, V12.16B
	0x01DA59D4 MOV V4.16B, V11.16B
	0x01DA59D8 MOV X1, X22
	0x01DA59DC MOV X2, X31
	0x01DA59E0 MOV W3, W31
	0x01DA59E4 BLR X8
	0x01DA59E8 LDR W8, [X20 + 0x18]
	0x01DA59EC ADD W23, W23, 0x1
	0x01DA59F0 CMP W23, W8
	0x01DA59F4 B.LT 0x1DA5874
	0x01DA59F8 LDP X20, X19, [X31 + 0x80]
	0x01DA59FC LDP X22, X21, [X31 + 0x70]
	0x01DA5A00 LDP X24, X23, [X31 + 0x60]
	0x01DA5A04 LDP X26, X25, [X31 + 0x50]
	0x01DA5A08 LDP X28, X27, [X31 + 0x40]
	0x01DA5A0C LDR X30, [X31 + 0x38]
	0x01DA5A10 LDP D9, D8, [X31 + 0x28]
	0x01DA5A14 LDP D11, D10, [X31 + 0x18]
	0x01DA5A18 LDR V12, [X31 + 0x10]
	0x01DA5A1C ADD X31, X31, 0x90
	0x01DA5A20 RET
	0x01DA5A24 BL 0x1C16F20
	0x01DA5A28 BL 0x1C16F28
	0x01DA5A2C STP X30, X19, [X31 - 0x10]!
	0x01DA5A30 MOV X19, X0
	0x01DA5A34 FMOV S0, W31
	0x01DA5A38 FMOV S1, W31
	0x01DA5A3C FMOV S2, 1
	0x01DA5A40 FMOV S3, 1
	0x01DA5A44 MOV X0, X31
	0x01DA5A48 BL 0x3C0D030
	0x01DA5A4C MOV X0, X19
	0x01DA5A50 MOV X1, X31
	0x01DA5A54 BL 0x3C32E90
	0x01DA5A58 CBZ X0, 0x1DA5A74
	0x01DA5A5C MOV X1, X31
	0x01DA5A60 BL 0x3C3F58C
	0x01DA5A64 LDR V3, [X19 + 0x90]
	0x01DA5A68 MOV X0, X31
	0x01DA5A6C LDP X30, X19, [X31], #0x10
	0x01DA5A70 B 0x3C0CB98
	0x01DA5A74 BL 0x1C16F20
	0x01DA5A78 STR X30, [X31 - 0x30]!
	0x01DA5A7C STP X22, X21, [X31 + 0x10]
	0x01DA5A80 STP X20, X19, [X31 + 0x20]
	0x01DA5A84 ADRP X22, 0x2633000
	0x01DA5A88 ADRP X21, 0x234E000
	0x01DA5A8C ADRP X20, 0x234E000
	0x01DA5A90 LDRB W8, [X22 + 0xA97]
	0x01DA5A94 LDR X21, [X21 + 0x608]
	0x01DA5A98 LDR X20, [X20 + 0x610]
	0x01DA5A9C MOV X19, X0
	0x01DA5AA0 TBNZ X8, 0x0, 0x1DA5AC4
	0x01DA5AA4 ADRP X0, 0x234E000
	0x01DA5AA8 LDR X0, [X0 + 0x610]
	0x01DA5AAC BL 0x1C16CF4
	0x01DA5AB0 ADRP X0, 0x234E000
	0x01DA5AB4 LDR X0, [X0 + 0x608]
	0x01DA5AB8 BL 0x1C16CF4
	0x01DA5ABC MOVZ W8, 0x1
	0x01DA5AC0 STRB W8, [X22 + 0xA97]
	0x01DA5AC4 ADRP X8, 0xFFFFFFFFFED48000
	0x01DA5AC8 LDR V0, [X8 + 0x9E0]
	0x01DA5ACC STR D0, [X19 + 0x90]
	0x01DA5AD0 LDR X0, [X21]
	0x01DA5AD4 BL 0x1C16F10
	0x01DA5AD8 LDR X1, [X20]
	0x01DA5ADC MOV X20, X0
	0x01DA5AE0 BL 0x301B7C4
	0x01DA5AE4 STR X20, [X19 + 0x98]
	0x01DA5AE8 MOV X0, X19
	0x01DA5AEC LDP X20, X19, [X31 + 0x20]
	0x01DA5AF0 LDP X22, X21, [X31 + 0x10]
	0x01DA5AF4 MOV X1, X31
	0x01DA5AF8 LDR X30, [X31], #0x30
	0x01DA5AFC B 0x1E74F04
	0x01DA5B00 B 0x1DA56A8
	0x01DA5B04 RET
	0x01DA5B08 RET
	0x01DA5B0C STP X30, X19, [X31 - 0x10]!
	0x01DA5B10 LDR X8, [X0 + 0x50]
	0x01DA5B14 CBZ X8, 0x1DA5B24
	0x01DA5B18 LDR V0, [X8]
	0x01DA5B1C LDP X30, X19, [X31], #0x10
	0x01DA5B20 RET
	0x01DA5B24 ADRP X0, 0x234E000
	0x01DA5B28 LDR X0, [X0 + 0x5B0]
	0x01DA5B2C BL 0x1C16D08
	0x01DA5B30 BL 0x1C16F10
	0x01DA5B34 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2634000
	005 Move W8, [X20+2697]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x2352000
	012 Move X0, [X0+2680]
	013 Call 0x1C17CF4
	014 Move X0, 0x234F000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x2353000
	018 Move X0, [X0+912]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2697], W8
	022 Move W8, [X19+88]
	023 Compare W8, 0
	024 JumpIfEqual {61}
	025 Move [X19+88], W31
	026 Move X20, 0x234F000
	027 Move X20, [X20+1432]
	028 Move W1, 2
	029 Move X0, X19
	030 Call Shotgun.set__ammoLeft, X0, X1
	031 Move X0, [X20]
	032 Move X20, [X19+160]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X20
	038 Move X1, X31
	039 Move X2, X31
	040 Call Object.op_Inequality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {77}
	045 Move X20, [X19+160]
	046 Move X0, X19
	047 Move X1, X31
	048 Call Component.get_transform, X0
	049 Compare X0, 0
	050 JumpIfEqual {155}
	051 Move X1, X31
	052 Call Transform.get_position, X0
	053 Move X0, X20
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move S3, 1
	057 Move X1, X31
	058 Move X30, [X31+32]
	059 Call SFXManager.PlaySFXAsRPC, X0, X1, V0
	060 Return 
	061 Move X20, 0x2352000
	062 Move X20, [X20+2680]
	063 Move X0, [X20]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X0, X19
	069 Move X1, X31
	070 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	071 Move X0, [X19+56]
	072 Compare X0, 0
	073 JumpIfEqual {155}
	074 Move X1, X31
	075 Call NetworkRunner.get_Stage, X0
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X20, [X31+16]
	078 Move X19, [X31+24]
	079 Move X30, [X31+32]
	080 Return 
	081 Move X0, [X19+64]
	082 Compare X0, 0
	083 JumpIfEqual {155}
	084 Move X1, X31
	085 Call NetworkObject.GetLocalAuthorityMask, X0
	086 And W31, W0, 7
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {26}
	091 Move X8, [X19+56]
	092 Compare X8, 0
	093 JumpIfEqual {155}
	094 Move X0, [X8+80]
	095 Compare X0, 0
	096 JumpIfEqual {155}
	097 Move X1, X31
	098 Call Simulation.HasAnyActiveConnections, X0
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {77}
	103 Move X8, [X19+56]
	104 Compare X8, 0
	105 JumpIfEqual {155}
	106 Move X0, [X8+80]
	107 Move W1, 8
	108 Move X2, X31
	109 Call SimulationMessage.Allocate, X0, X1
	110 Move X8, [X19+64]
	111 Compare X8, 0
	112 JumpIfEqual {155}
	113 Move X8, [X8+32]
	114 Move X20, X0
	115 Compare X8, 0
	116 JumpIfEqual {135}
	117 Move W0, [X8]
	118 Move X0, [X20]
	119 Move X19, [X19+64]
	120 Move W8, [X0+224]
	121 Compare W8, 0
	122 JumpIfNotEqual {124}
	123 Call 0x1C17DFC
	124 Move X8, 0x2353000
	125 Move X8, [X8+912]
	126 Move X1, X19
	127 Move X20, [X31+16]
	128 Move X19, [X31+24]
	129 Move W2, 7
	130 Move X0, [X8]
	131 Move X3, X31
	132 Move X30, [X31+32]
	133 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	134 Return 
	135 Move X0, X31
	136 Move W1, [X19+104]
	137 Move W2, 3
	138 Move X3, X31
	139 Call RpcHeader.Create, X0, X1, X2
	140 Move [X20+28], X0
	141 Compare X20, 0
	142 JumpIfEqual {155}
	143 Move W8, 64
	144 Move [X20+12], W8
	145 Move X0, [X19+56]
	146 Compare X0, 0
	147 JumpIfEqual {155}
	148 Move X1, X20
	149 Move X20, [X31+16]
	150 Move X19, [X31+24]
	151 Move X2, X31
	152 Move X30, [X31+32]
	153 Call NetworkRunner.SendRpc, X0, X1
	154 Return 
	155 Call 0x1C17F20

Method: System.Void Reload()

Disassembly:
	0x01DA4A4C RET

ISIL:
	001 Call Shotgun.RPC_Reload, X0
	002 Return 

Method: System.Void Update()

Disassembly:
	0x01DA5B38 ADRP X0, 0x2352000
	0x01DA5B3C LDR X0, [X0 + 0x408]
	0x01DA5B40 BL 0x1C16D08
	0x01DA5B44 MOV X1, X0
	0x01DA5B48 MOV X0, X19
	0x01DA5B4C MOV X2, X31
	0x01DA5B50 BL 0x337DF1C
	0x01DA5B54 ADRP X0, 0x2352000
	0x01DA5B58 LDR X0, [X0 + 0x410]
	0x01DA5B5C BL 0x1C16D08
	0x01DA5B60 MOV X1, X0
	0x01DA5B64 MOV X0, X19
	0x01DA5B68 BL 0x1C16DEC
	0x01DA5B6C STP X30, X19, [X31 - 0x10]!
	0x01DA5B70 LDR X8, [X0 + 0x50]

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+216]
	003 Subtract W8, W8, 1
	004 Move [X0+216], W8
	005 Move X0, [X0+176]
	006 Compare X0, 0
	007 JumpIfEqual {15}
	008 Move W1, W31
	009 Move X2, X31
	010 Move X30, [X31+16]
	011 Call GameObject.SetActive, X0, X1
	012 Return 
	013 Move X30, [X31+16]
	014 Return 
	015 Call 0x1C17F20

Method: System.Void ShootInternal()

Disassembly:
	0x01DA5204 ADRP X0, 0x2352000
	0x01DA5208 LDR X0, [X0 + 0x3D0]
	0x01DA520C BL 0x1C16CF4
	0x01DA5210 MOVZ W8, 0x1
	0x01DA5214 STRB W8, [X20 + 0xA8E]
	0x01DA5218 CBZ X19, 0x1DA5270
	0x01DA521C ADRP X9, 0x2352000
	0x01DA5220 LDR X9, [X9 + 0x3D0]
	0x01DA5224 MOVZ W8, 0x1
	0x01DA5228 STRB W8, [X19 + 0x58]
	0x01DA522C LDR X8, [X19]
	0x01DA5230 LDR X1, [X9]
	0x01DA5234 LDRB W10, [X8 + 0x130]
	0x01DA5238 LDRB W9, [X1 + 0x130]
	0x01DA523C CMP W10, W9
	0x01DA5240 B.CC 0x1DA5268
	0x01DA5244 LDR X8, [X8 + 0xC8]
	0x01DA5248 ADD X8, X8, X9, 0x3, LSL
	0x01DA524C LDUR X8, [X8 - 0x8]
	0x01DA5250 CMP X8, X1
	0x01DA5254 B.NE 0x1DA5268
	0x01DA5258 MOV X0, X19
	0x01DA525C LDP X20, X19, [X31 + 0x10]
	0x01DA5260 LDR X30, [X31], #0x20
	0x01DA5264 B 0x1DA4080
	0x01DA5268 MOV X0, X19
	0x01DA526C BL 0x1C171E0
	0x01DA5270 BL 0x1C16F20
	0x01DA5274 STR X30, [X31 - 0x20]!
	0x01DA5278 STP X20, X19, [X31 + 0x10]
	0x01DA527C ADRP X20, 0x2633000
	0x01DA5280 LDRB W8, [X20 + 0xA8F]
	0x01DA5284 MOV X19, X0
	0x01DA5288 TBNZ X8, 0x0, 0x1DA52A0
	0x01DA528C ADRP X0, 0x2352000
	0x01DA5290 LDR X0, [X0 + 0x3D0]
	0x01DA5294 BL 0x1C16CF4
	0x01DA5298 MOVZ W8, 0x1
	0x01DA529C STRB W8, [X20 + 0xA8F]
	0x01DA52A0 CBZ X19, 0x1DA52F8
	0x01DA52A4 ADRP X9, 0x2352000
	0x01DA52A8 LDR X9, [X9 + 0x3D0]
	0x01DA52AC MOVZ W8, 0x1
	0x01DA52B0 STRB W8, [X19 + 0x58]
	0x01DA52B4 LDR X8, [X19]
	0x01DA52B8 LDR X1, [X9]
	0x01DA52BC LDRB W10, [X8 + 0x130]
	0x01DA52C0 LDRB W9, [X1 + 0x130]
	0x01DA52C4 CMP W10, W9
	0x01DA52C8 B.CC 0x1DA52F0
	0x01DA52CC LDR X8, [X8 + 0xC8]
	0x01DA52D0 ADD X8, X8, X9, 0x3, LSL
	0x01DA52D4 LDUR X8, [X8 - 0x8]
	0x01DA52D8 CMP X8, X1
	0x01DA52DC B.NE 0x1DA52F0
	0x01DA52E0 MOV X0, X19
	0x01DA52E4 LDP X20, X19, [X31 + 0x10]
	0x01DA52E8 LDR X30, [X31], #0x20
	0x01DA52EC B 0x1DA478C
	0x01DA52F0 MOV X0, X19
	0x01DA52F4 BL 0x1C171E0
	0x01DA52F8 BL 0x1C16F20
	0x01DA52FC STR X30, [X31 - 0x20]!
	0x01DA5300 STP X20, X19, [X31 + 0x10]
	0x01DA5304 ADRP X20, 0x2633000
	0x01DA5308 LDRB W8, [X20 + 0xA90]
	0x01DA530C MOV X19, X0
	0x01DA5310 TBNZ X8, 0x0, 0x1DA5328
	0x01DA5314 ADRP X0, 0x2352000
	0x01DA5318 LDR X0, [X0 + 0x3D0]
	0x01DA531C BL 0x1C16CF4
	0x01DA5320 MOVZ W8, 0x1
	0x01DA5324 STRB W8, [X20 + 0xA90]
	0x01DA5328 CBZ X19, 0x1DA5380
	0x01DA532C ADRP X9, 0x2352000
	0x01DA5330 LDR X9, [X9 + 0x3D0]
	0x01DA5334 MOVZ W8, 0x1
	0x01DA5338 STRB W8, [X19 + 0x58]
	0x01DA533C LDR X8, [X19]
	0x01DA5340 LDR X1, [X9]
	0x01DA5344 LDRB W10, [X8 + 0x130]
	0x01DA5348 LDRB W9, [X1 + 0x130]
	0x01DA534C CMP W10, W9
	0x01DA5350 B.CC 0x1DA5378
	0x01DA5354 LDR X8, [X8 + 0xC8]
	0x01DA5358 ADD X8, X8, X9, 0x3, LSL
	0x01DA535C LDUR X8, [X8 - 0x8]
	0x01DA5360 CMP X8, X1
	0x01DA5364 B.NE 0x1DA5378
	0x01DA5368 MOV X0, X19
	0x01DA536C LDP X20, X19, [X31 + 0x10]
	0x01DA5370 LDR X30, [X31], #0x20
	0x01DA5374 B 0x1DA4948
	0x01DA5378 MOV X0, X19
	0x01DA537C BL 0x1C171E0
	0x01DA5380 BL 0x1C16F20
	0x01DA5384 STP X30, X19, [X31 - 0x10]!
	0x01DA5388 AND W2, W2, 0x1
	0x01DA538C MOV X3, X31
	0x01DA5390 MOV X19, X0
	0x01DA5394 BL 0x1E73F8C
	0x01DA5398 LDR X8, [X19 + 0x80]
	0x01DA539C CBZ X8, 0x1DA53B8
	0x01DA53A0 LDR X3, [X8 + 0x18]
	0x01DA53A4 LDR X0, [X8 + 0x40]
	0x01DA53A8 LDR X2, [X8 + 0x28]
	0x01DA53AC MOV X1, X19
	0x01DA53B0 LDP X30, X19, [X31], #0x10
	0x01DA53B4 BR X3
	0x01DA53B8 LDP X30, X19, [X31], #0x10
	0x01DA53BC RET
	0x01DA53C0 MOV X1, X31
	0x01DA53C4 B 0x1E74F04
	0x01DA53C8 RET
	0x01DA53CC RET
	0x01DA53D0 STP X30, X21, [X31 - 0x20]!
	0x01DA53D4 STP X20, X19, [X31 + 0x10]
	0x01DA53D8 ADRP X20, 0x2633000
	0x01DA53DC ADRP X21, 0x2351000
	0x01DA53E0 LDRB W8, [X20 + 0xA92]
	0x01DA53E4 LDR X21, [X21 + 0xBB8]
	0x01DA53E8 MOV X19, X0
	0x01DA53EC TBNZ X8, 0x0, 0x1DA5404
	0x01DA53F0 ADRP X0, 0x2351000
	0x01DA53F4 LDR X0, [X0 + 0xBB8]
	0x01DA53F8 BL 0x1C16CF4
	0x01DA53FC MOVZ W8, 0x1
	0x01DA5400 STRB W8, [X20 + 0xA92]
	0x01DA5404 LDR X1, [X21]
	0x01DA5408 MOV X0, X19
	0x01DA540C BL 0x21A3894
	0x01DA5410 STR X0, [X19 + 0x80]
	0x01DA5414 LDP X20, X19, [X31 + 0x10]
	0x01DA5418 LDP X30, X21, [X31], #0x20
	0x01DA541C RET
	0x01DA5420 MOV X1, X31
	0x01DA5424 B 0x1E74F04
	0x01DA5428 RET
	0x01DA542C RET
	0x01DA5430 LDR X0, [X0 + 0x80]
	0x01DA5434 RET
	0x01DA5438 STP X30, X23, [X31 - 0x30]!
	0x01DA543C STP X22, X21, [X31 + 0x10]
	0x01DA5440 STP X20, X19, [X31 + 0x20]
	0x01DA5444 ADRP X20, 0x2633000
	0x01DA5448 LDRB W8, [X20 + 0xA94]
	0x01DA544C MOV X19, X0
	0x01DA5450 TBNZ X8, 0x0, 0x1DA54A4
	0x01DA5454 ADRP X0, 0x2352000
	0x01DA5458 LDR X0, [X0 + 0x3D8]
	0x01DA545C BL 0x1C16CF4
	0x01DA5460 ADRP X0, 0x234F000
	0x01DA5464 LDR X0, [X0 + 0xE70]
	0x01DA5468 BL 0x1C16CF4
	0x01DA546C ADRP X0, 0x2352000
	0x01DA5470 LDR X0, [X0 + 0x3E0]
	0x01DA5474 BL 0x1C16CF4
	0x01DA5478 ADRP X0, 0x2352000
	0x01DA547C LDR X0, [X0 + 0x3E8]
	0x01DA5480 BL 0x1C16CF4
	0x01DA5484 ADRP X0, 0x2352000
	0x01DA5488 LDR X0, [X0 + 0x3F0]
	0x01DA548C BL 0x1C16CF4
	0x01DA5490 ADRP X0, 0x2352000
	0x01DA5494 LDR X0, [X0 + 0x3F8]
	0x01DA5498 BL 0x1C16CF4
	0x01DA549C MOVZ W8, 0x1
	0x01DA54A0 STRB W8, [X20 + 0xA94]
	0x01DA54A4 LDR X22, [X19 + 0x80]
	0x01DA54A8 CBZ X22, 0x1DA55AC
	0x01DA54AC ADRP X23, 0x234F000
	0x01DA54B0 LDR X23, [X23 + 0xE70]
	0x01DA54B4 ADRP X21, 0x2352000
	0x01DA54B8 LDR X20, [X22 + 0x1D0]
	0x01DA54BC LDR X0, [X23]
	0x01DA54C0 LDR X21, [X21 + 0x3E8]
	0x01DA54C4 BL 0x1C16F10
	0x01DA54C8 LDR X2, [X21]
	0x01DA54CC MOV X1, X19
	0x01DA54D0 MOV X3, X31
	0x01DA54D4 MOV X21, X0
	0x01DA54D8 BL 0x3314368
	0x01DA54DC MOV X0, X20
	0x01DA54E0 MOV X1, X21
	0x01DA54E4 MOV X2, X31
	0x01DA54E8 BL 0x33C0DE4
	0x01DA54EC CBZ X0, 0x1DA5514
	0x01DA54F0 LDR X1, [X23]
	0x01DA54F4 LDR X8, [X0]
	0x01DA54F8 CMP X8, X1
	0x01DA54FC B.NE 0x1DA5510
	0x01DA5500 STR X0, [X22 + 0x1D0]
	0x01DA5504 LDR X8, [X0]
	0x01DA5508 CMP X8, X1
	0x01DA550C B.EQ 0x1DA5518
	0x01DA5510 BL 0x1C171E0
	0x01DA5514 STR X0, [X22 + 0x1D0]
	0x01DA5518 ADRP X8, 0x2352000
	0x01DA551C LDR X8, [X8 + 0x3E0]
	0x01DA5520 ADRP X20, 0x2352000
	0x01DA5524 ADRP X21, 0x2352000
	0x01DA5528 ADRP X22, 0x2352000
	0x01DA552C LDR X0, [X8]
	0x01DA5530 LDR X20, [X20 + 0x3F8]
	0x01DA5534 LDR X21, [X21 + 0x3D8]
	0x01DA5538 LDR X22, [X22 + 0x3F0]
	0x01DA553C BL 0x1C16F10
	0x01DA5540 LDR X3, [X20]
	0x01DA5544 MOV X1, X31
	0x01DA5548 MOV W2, W31
	0x01DA554C MOV X4, X31
	0x01DA5550 MOV X5, X31
	0x01DA5554 MOV X6, X31
	0x01DA5558 MOV X7, X31
	0x01DA555C MOV X20, X0
	0x01DA5560 BL 0x3734C54
	0x01DA5564 LDR X0, [X21]
	0x01DA5568 BL 0x1C16F10
	0x01DA556C LDR X2, [X22]
	0x01DA5570 MOV X1, X19
	0x01DA5574 MOV X3, X31
	0x01DA5578 MOV X21, X0
	0x01DA557C BL 0x2A719B8
	0x01DA5580 CBZ X20, 0x1DA55AC
	0x01DA5584 MOV X0, X20
	0x01DA5588 MOV X1, X21
	0x01DA558C MOV X2, X31
	0x01DA5590 BL 0x3734A04
	0x01DA5594 MOV X0, X20
	0x01DA5598 LDP X20, X19, [X31 + 0x20]
	0x01DA559C LDP X22, X21, [X31 + 0x10]
	0x01DA55A0 MOV X1, X31
	0x01DA55A4 LDP X30, X23, [X31], #0x30
	0x01DA55A8 B 0x37350C8
	0x01DA55AC BL 0x1C16F20
	0x01DA55B0 STP X30, X23, [X31 - 0x30]!
	0x01DA55B4 STP X22, X21, [X31 + 0x10]
	0x01DA55B8 STP X20, X19, [X31 + 0x20]
	0x01DA55BC ADRP X20, 0x2633000
	0x01DA55C0 ADRP X21, 0x2351000
	0x01DA55C4 LDRB W8, [X20 + 0xA95]
	0x01DA55C8 LDR X21, [X21 + 0xA78]
	0x01DA55CC MOV X19, X0
	0x01DA55D0 TBNZ X8, 0x0, 0x1DA5600
	0x01DA55D4 ADRP X0, 0x234F000
	0x01DA55D8 LDR X0, [X0 + 0xE70]
	0x01DA55DC BL 0x1C16CF4
	0x01DA55E0 ADRP X0, 0x2351000
	0x01DA55E4 LDR X0, [X0 + 0xA78]
	0x01DA55E8 BL 0x1C16CF4
	0x01DA55EC ADRP X0, 0x2352000
	0x01DA55F0 LDR X0, [X0 + 0x3E8]
	0x01DA55F4 BL 0x1C16CF4
	0x01DA55F8 MOVZ W8, 0x1
	0x01DA55FC STRB W8, [X20 + 0xA95]
	0x01DA5600 LDR X0, [X21]
	0x01DA5604 LDR W8, [X0 + 0xE0]
	0x01DA5608 CBNZ W8, 0x1DA5610
	0x01DA560C BL 0x1C16DFC
	0x01DA5610 CBZ X19, 0x1DA56A4
	0x01DA5614 LDR W8, [X19 + 0x30]
	0x01DA5618 LDR X22, [X19 + 0x80]
	0x01DA561C ORR W8, W8, 0x8
	0x01DA5620 STR W8, [X19 + 0x30]
	0x01DA5624 CBZ X22, 0x1DA56A4
	0x01DA5628 ADRP X23, 0x234F000
	0x01DA562C LDR X23, [X23 + 0xE70]
	0x01DA5630 ADRP X21, 0x2352000
	0x01DA5634 LDR X20, [X22 + 0x1D0]
	0x01DA5638 LDR X0, [X23]
	0x01DA563C LDR X21, [X21 + 0x3E8]
	0x01DA5640 BL 0x1C16F10
	0x01DA5644 LDR X2, [X21]
	0x01DA5648 MOV X1, X19
	0x01DA564C MOV X3, X31
	0x01DA5650 MOV X21, X0
	0x01DA5654 BL 0x3314368
	0x01DA5658 MOV X0, X20
	0x01DA565C MOV X1, X21
	0x01DA5660 MOV X2, X31
	0x01DA5664 BL 0x33C0FDC
	0x01DA5668 CBZ X0, 0x1DA5690
	0x01DA566C LDR X1, [X23]
	0x01DA5670 LDR X8, [X0]
	0x01DA5674 CMP X8, X1
	0x01DA5678 B.NE 0x1DA568C
	0x01DA567C STR X0, [X22 + 0x1D0]
	0x01DA5680 LDR X8, [X0]
	0x01DA5684 CMP X8, X1
	0x01DA5688 B.EQ 0x1DA5694
	0x01DA568C BL 0x1C171E0
	0x01DA5690 STR X0, [X22 + 0x1D0]
	0x01DA5694 LDP X20, X19, [X31 + 0x20]
	0x01DA5698 LDP X22, X21, [X31 + 0x10]
	0x01DA569C LDP X30, X23, [X31], #0x30
	0x01DA56A0 RET
	0x01DA56A4 BL 0x1C16F20
	0x01DA56A8 SUB X31, X31, 0x90
	0x01DA56AC STR D12, [X31 + 0x10]
	0x01DA56B0 STP D11, D10, [X31 + 0x18]
	0x01DA56B4 STP D9, D8, [X31 + 0x28]
	0x01DA56B8 STR X30, [X31 + 0x38]
	0x01DA56BC STP X28, X27, [X31 + 0x40]
	0x01DA56C0 STP X26, X25, [X31 + 0x50]
	0x01DA56C4 STP X24, X23, [X31 + 0x60]
	0x01DA56C8 STP X22, X21, [X31 + 0x70]
	0x01DA56CC STP X20, X19, [X31 + 0x80]
	0x01DA56D0 ADRP X20, 0x2633000
	0x01DA56D4 LDRB W8, [X20 + 0xA96]
	0x01DA56D8 MOV X19, X0
	0x01DA56DC TBNZ X8, 0x0, 0x1DA5748
	0x01DA56E0 ADRP X0, 0x234E000
	0x01DA56E4 LDR X0, [X0 + 0xA28]
	0x01DA56E8 BL 0x1C16CF4
	0x01DA56EC ADRP X0, 0x234E000
	0x01DA56F0 LDR X0, [X0 + 0x5D0]
	0x01DA56F4 BL 0x1C16CF4
	0x01DA56F8 ADRP X0, 0x234E000
	0x01DA56FC LDR X0, [X0 + 0x5D8]
	0x01DA5700 BL 0x1C16CF4
	0x01DA5704 ADRP X0, 0x234E000
	0x01DA5708 LDR X0, [X0 + 0x5E0]
	0x01DA570C BL 0x1C16CF4
	0x01DA5710 ADRP X0, 0x234E000
	0x01DA5714 LDR X0, [X0 + 0x5E8]
	0x01DA5718 BL 0x1C16CF4
	0x01DA571C ADRP X0, 0x234E000
	0x01DA5720 LDR X0, [X0 + 0x5F0]
	0x01DA5724 BL 0x1C16CF4
	0x01DA5728 ADRP X0, 0x234E000
	0x01DA572C LDR X0, [X0 + 0x5F8]
	0x01DA5730 BL 0x1C16CF4
	0x01DA5734 ADRP X0, 0x2352000
	0x01DA5738 LDR X0, [X0 + 0x400]
	0x01DA573C BL 0x1C16CF4
	0x01DA5740 MOVZ W8, 0x1
	0x01DA5744 STRB W8, [X20 + 0xA96]
	0x01DA5748 STR X31, [X31 + 0x8]
	0x01DA574C LDR X20, [X19 + 0x88]
	0x01DA5750 MOV X0, X19
	0x01DA5754 MOV X1, X31
	0x01DA5758 BL 0x3C32E90
	0x01DA575C CBZ X0, 0x1DA5A24
	0x01DA5760 MOV X1, X31
	0x01DA5764 BL 0x3C3F58C
	0x01DA5768 FMOV S3, 1
	0x01DA576C MOV X0, X20
	0x01DA5770 MOV X1, X31
	0x01DA5774 BL 0x1DD1B94
	0x01DA5778 MOV X0, X19
	0x01DA577C MOV X1, X31
	0x01DA5780 BL 0x3C32E90
	0x01DA5784 CBZ X0, 0x1DA5A24
	0x01DA5788 ADRP X21, 0x234E000

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+96], D13
	003 Move [X31+104], D12
	004 Move [X31+112], D11
	005 Move [X31+120], D10
	006 Move [X31+128], D9
	007 Move [X31+136], D8
	008 Move [X31+144], X30
	009 Move [X31+160], X26
	010 Move [X31+168], X25
	011 Move [X31+176], X24
	012 Move [X31+184], X23
	013 Move [X31+192], X22
	014 Move [X31+200], X21
	015 Move [X31+208], X20
	016 Move [X31+216], X19
	017 Move X20, 0x2634000
	018 Move W8, [X20+2698]
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {59}
	024 Move X0, 0x2353000
	025 Move X0, [X0+832]
	026 Call 0x1C17CF4
	027 Move X0, 0x2353000
	028 Move X0, [X0+840]
	029 Call 0x1C17CF4
	030 Move X0, 0x2353000
	031 Move X0, [X0+848]
	032 Call 0x1C17CF4
	033 Move X0, 0x2353000
	034 Move X0, [X0+856]
	035 Call 0x1C17CF4
	036 Move X0, 0x2353000
	037 Move X0, [X0+864]
	038 Call 0x1C17CF4
	039 Move X0, 0x2353000
	040 Move X0, [X0+872]
	041 Call 0x1C17CF4
	042 Move X0, 0x2352000
	043 Move X0, [X0+3056]
	044 Call 0x1C17CF4
	045 Move X0, 0x2353000
	046 Move X0, [X0+880]
	047 Call 0x1C17CF4
	048 Move X0, 0x2353000
	049 Move X0, [X0+888]
	050 Call 0x1C17CF4
	051 Move X0, 0x2353000
	052 Move X0, [X0+896]
	053 Call 0x1C17CF4
	054 Move X0, 0x234F000
	055 Move X0, [X0+1432]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X20+2698], W8
	059 NotImplemented "Instruction MOVI not yet implemented."
	060 Move X0, X19
	061 Move [X31+80], X31
	062 Move [X31+48], V0
	063 Move [X31+56], V0
	064 Call Shotgun.get_reloadTimer, X0
	065 Move [X31+152], W0
	066 Move X1, [X19+56]
	067 Add X0, X31, 152
	068 Move X2, X31
	069 Call TickTimer.ExpiredOrNotRunning, X0, X1
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {345}
	074 Move X8, 0x2353000
	075 Move X8, [X8+848]
	076 Move X0, [X8]
	077 Call 0x1C17F10
	078 Move X8, 0x2353000
	079 Move X8, [X8+840]
	080 Move X20, X0
	081 Move X1, [X8]
	082 Call Dictionary`2<Object, Object>..ctor, X0
	083 Move X2, [X19+192]
	084 Compare X2, 0
	085 JumpIfEqual {366}
	086 Move W8, [X2+28]
	087 Move X0, X19
	088 Move X1, X20
	089 Add W8, W8, 1
	090 Move [X2+24], W31
	091 Move [X2+28], W8
	092 Call Shotgun.ShootRandomRay, X0, X1, X2
	093 Move W21, 18
	094 Move X2, [X19+192]
	095 Move X0, X19
	096 Move X1, X20
	097 Call Shotgun.ShootRandomRay, X0, X1, X2
	098 Subtract W21, W21, 1
	099 Compare X20, 0
	100 JumpIfEqual {366}
	101 Move X8, 0x2353000
	102 Move X8, [X8+832]
	103 Move X0, X20
	104 Move X1, [X8]
	105 Add X8, X31, 8
	106 Call Dictionary`2<Object, Object>.GetEnumerator, X0
	107 NotImplemented "Instruction LDUR not yet implemented."
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 Move X8, [X31+40]
	110 Move X24, 0x2353000
	111 Move X24, [X24+864]
	112 Move [X31+48], V0
	113 Move [X31+56], V1
	114 Move [X31+80], X8
	115 Move X25, 0x2352000
	116 Move X25, [X25+3056]
	117 Move X1, [X24]
	118 Add X0, X31, 48
	119 Call Enumerator<Object, Object>.MoveNext, X0
	120 Move TEMP, X0
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfNotEqual {186}
	124 Move X8, [X31+72]
	125 Compare X8, 0
	126 JumpIfEqual {364}
	127 Move X9, [X19+128]
	128 Compare X9, 0
	129 JumpIfEqual {365}
	130 Move X9, [X9+128]
	131 Compare X9, 0
	132 JumpIfEqual {362}
	133 Move X10, [X19+64]
	134 Compare X10, 0
	135 JumpIfEqual {140}
	136 Move X10, [X10+32]
	137 Compare X10, 0
	138 JumpIfEqual {140}
	139 Move W20, [X10]
	140 Move X20, X31
	141 Move X21, [X31+64]
	142 Compare X21, 0
	143 JumpIfEqual {363}
	144 Move X10, [X21]
	145 Move W22, [X8+16]
	146 Move S9, [X8+20]
	147 Move S10, [X8+24]
	148 Move S11, [X8+28]
	149 Move S8, [X8+32]
	150 Move S13, [X8+36]
	151 Move S12, [X8+40]
	152 Move X23, [X9+24]
	153 Move W26, [X19+104]
	154 NotImplemented "Instruction LDRH not yet implemented."
	155 Move X1, [X25]
	156 Compare X8, 0
	157 JumpIfEqual {164}
	158 Move X9, [X10+176]
	159 Add X9, X9, 8
	160 NotImplemented "Instruction LDUR not yet implemented."
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Subtract X8, X8, 1
	163 Add X9, X9, 16
	164 Move X0, X21
	165 Move W2, W31
	166 Call 0x1C5D788
	167 NotImplemented "Instruction LDRSW not yet implemented."
	168 Add X8, X10, X8
	169 Add X0, X8, 312
	170 Move X8, [X0]
	171 Move X6, [X0+8]
	172 NotImplemented "Instruction BFM not yet implemented."
	173 Move X0, X21
	174 Move W1, W22
	175 Move V0, V9
	176 Move V1, V10
	177 Move V2, V11
	178 Move X2, X31
	179 Move X3, X31
	180 Move V3, V8
	181 Move V4, V13
	182 Move V5, V12
	183 Move X4, X23
	184 Move X5, X20
	185 NotImplemented "Instruction BLR not yet implemented."
	186 Move X8, 0x2353000
	187 Move X8, [X8+856]
	188 Add X0, X31, 48
	189 Move X1, [X8]
	190 Call Enumerator<Object, Object>.Dispose, X0
	191 Move X8, 0x234F000
	192 Move X8, [X8+1432]
	193 Move X20, [X19+144]
	194 Move X0, [X8]
	195 Move W8, [X0+224]
	196 Compare W8, 0
	197 JumpIfNotEqual {199}
	198 Call 0x1C17DFC
	199 Move X0, X20
	200 Move X1, X31
	201 Move X2, X31
	202 Call Object.op_Inequality, X0, X1
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfNotEqual {219}
	207 Move X20, [X19+144]
	208 Move X0, X19
	209 Move X1, X31
	210 Call Component.get_transform, X0
	211 Compare X0, 0
	212 JumpIfEqual {366}
	213 Move X1, X31
	214 Call Transform.get_position, X0
	215 Move S3, 1
	216 Move X0, X20
	217 Move X1, X31
	218 Call SFXManager.PlaySFXAsRPC, X0, X1, V0
	219 Move X0, X19
	220 Move X1, X31
	221 Call Component.get_transform, X0
	222 Compare X0, 0
	223 JumpIfEqual {366}
	224 Move X1, X31
	225 Call Transform.get_forward, X0
	226 Move X20, 0x2634000
	227 Move W8, [X20+1926]
	228 Move V8, V0
	229 Move V9, V1
	230 Move V10, V2
	231 Compare W8, 0
	232 JumpIfNotEqual {238}
	233 Move X0, 0x234F000
	234 Move X0, [X0+1440]
	235 Call 0x1C17CF4
	236 Move W8, 1
	237 Move [X20+1926], W8
	238 Move X20, 0x234F000
	239 Move X20, [X20+1440]
	240 Move X9, -19636224
	241 Move X21, 0x2634000
	242 Move V0, [X9+188]
	243 Move X8, [X20]
	244 Move W9, [X21+1925]
	245 Move X8, [X8+184]
	246 Move S1, [X8+24]
	247 Move S2, [X8+28]
	248 Move V3, [X8+32]
	249 Multiply S11, S1, S0
	250 Multiply S12, S2, S0
	251 Multiply S13, S3, S0
	252 Compare W9, 0
	253 JumpIfNotEqual {259}
	254 Move X0, 0x234F000
	255 Move X0, [X0+1448]
	256 Call 0x1C17CF4
	257 Move W8, 1
	258 Move [X21+1925], W8
	259 Move X8, 0x234F000
	260 Move X8, [X8+1448]
	261 Subtract S11, S11, S8
	262 Subtract S9, S12, S9
	263 Subtract S8, S13, S10
	264 Move X0, [X8]
	265 Move W8, [X0+224]
	266 Compare W8, 0
	267 JumpIfNotEqual {269}
	268 Call 0x1C17DFC
	269 Multiply S0, S11, S11
	270 Multiply S1, S9, S9
	271 Move X8, -19636224
	272 Add S0, S0, S1
	273 Move V1, [X8+380]
	274 Multiply S2, S8, S8
	275 Add S0, S2, S0
	276 NotImplemented "Instruction FSQRT not yet implemented."
	277 NotImplemented "Instruction FCMP not yet implemented."
	278 NotImplemented "Instruction FDIV not yet implemented."
	279 NotImplemented "Instruction FDIV not yet implemented."
	280 NotImplemented "Instruction FDIV not yet implemented."
	281 Move X21, 0x2634000
	282 Move W8, [X21+1923]
	283 Compare W8, 0
	284 JumpIfNotEqual {290}
	285 Move X0, 0x234F000
	286 Move X0, [X0+1440]
	287 Call 0x1C17CF4
	288 Move W8, 1
	289 Move [X21+1923], W8
	290 Move X8, [X20]
	291 Move X8, [X8+184]
	292 Move S0, [X8]
	293 Move S1, [X8+4]
	294 Move V2, [X8+8]
	295 Move X0, [X19+128]
	296 Compare X0, 0
	297 JumpIfEqual {366}
	298 Move S3, 9
	299 Multiply S2, S2, S3
	300 Multiply S1, S1, S3
	301 Multiply S0, S0, S3
	302 Move X1, X31
	303 Call GrabbableItem.AddExternalForce, X0, X1
	304 Move X0, X19
	305 Call Shotgun.get__ammoLeft, X0
	306 Subtract W1, W0, 1
	307 Move X0, X19
	308 Call Shotgun.set__ammoLeft, X0, X1
	309 Move X0, [X19+56]
	310 Move S0, 1
	311 Move X1, X31
	312 Call TickTimer.CreateFromSeconds, X0, V0
	313 And X1, X0, 0
	314 Move X0, X19
	315 Call Shotgun.set_reloadTimer, X0, X1
	316 Move X0, [X19+136]
	317 Compare X0, 0
	318 JumpIfEqual {366}
	319 Move X1, X31
	320 Call Transform.get_position, X0
	321 Move X0, [X19+136]
	322 Compare X0, 0
	323 JumpIfEqual {366}
	324 Move X1, X31
	325 Move V8, V0
	326 Move V9, V1
	327 Move V10, V2
	328 Call Transform.get_rotation, X0
	329 Move V4, V0
	330 Move V5, V1
	331 Move V6, V2
	332 Move V7, V3
	333 Move W0, W31
	334 Move V0, V8
	335 Move V1, V9
	336 Move V2, V10
	337 Move V3, V4
	338 Move V4, V5
	339 Move V5, V6
	340 Move V6, V7
	341 Move X1, X31
	342 Call NetworkVFX.PlayVFX, X0, X1, X2
	343 Move X0, X19
	344 Call Shotgun.RPC_MuzzleFlash, X0
	345 Move X20, [X31+208]
	346 Move X19, [X31+216]
	347 Move X22, [X31+192]
	348 Move X21, [X31+200]
	349 Move X24, [X31+176]
	350 Move X23, [X31+184]
	351 Move X26, [X31+160]
	352 Move X25, [X31+168]
	353 Move X30, [X31+144]
	354 Move D9, [X31+128]
	355 Move D8, [X31+136]
	356 Move D11, [X31+112]
	357 Move D10, [X31+120]
	358 Move D13, [X31+96]
	359 Move D12, [X31+104]
	360 Add X31, X31, 224
	361 Return 
	362 Call 0x1C17F20
	363 Call 0x1C17F20
	364 Call 0x1C17F20
	365 Call 0x1C17F20
	366 Call 0x1C17F20
	367 Move X20, X0
	368 NotImplemented "Instruction CMP not yet implemented."
	369 Move X0, X20
	370 Call 0x3EB2AD0
	371 Move X21, [X0]
	372 Call 0x3EB2AE0
	373 Move X8, 0x2353000
	374 Move X8, [X8+856]
	375 Add X0, X31, 48
	376 Move X1, [X8]
	377 Call Enumerator<Object, Object>.Dispose, X0
	378 Compare X21, 0
	379 JumpIfEqual {191}
	380 Move X0, X21
	381 Call 0x1C17F18
	382 Move X21, X31
	383 Move X20, X0
	384 Move X8, 0x2353000
	385 Move X8, [X8+856]
	386 Move X1, [X8]
	387 Add X0, X31, 48
	388 Call Enumerator<Object, Object>.Dispose, X0
	389 Compare X21, 0
	390 JumpIfNotEqual {393}
	391 Move X0, X20
	392 Call 0x1D2D690
	393 Move X0, X21
	394 Call 0x1C17F18
	395 Call 0x1991590

Method: System.Void ShootRandomRay(System.Collections.Generic.Dictionary`2<AnimalCompany.IDamageable, AnimalCompany.Shotgun/HitDamage> damageToApply, System.Collections.Generic.List`1<UnityEngine.Vector3> rayDirections)

Disassembly:
	0x01DA5B74 CBZ X8, 0x1DA5B84
	0x01DA5B78 STR S0, [X8]
	0x01DA5B7C LDP X30, X19, [X31], #0x10
	0x01DA5B80 RET
	0x01DA5B84 ADRP X0, 0x234E000
	0x01DA5B88 LDR X0, [X0 + 0x5B0]
	0x01DA5B8C BL 0x1C16D08
	0x01DA5B90 BL 0x1C16F10
	0x01DA5B94 MOV X19, X0
	0x01DA5B98 ADRP X0, 0x2352000
	0x01DA5B9C LDR X0, [X0 + 0x408]
	0x01DA5BA0 BL 0x1C16D08
	0x01DA5BA4 MOV X1, X0
	0x01DA5BA8 MOV X0, X19
	0x01DA5BAC MOV X2, X31
	0x01DA5BB0 BL 0x337DF1C
	0x01DA5BB4 ADRP X0, 0x2352000
	0x01DA5BB8 LDR X0, [X0 + 0x418]
	0x01DA5BBC BL 0x1C16D08
	0x01DA5BC0 MOV X1, X0
	0x01DA5BC4 MOV X0, X19
	0x01DA5BC8 BL 0x1C16DEC
	0x01DA5BCC STP X30, X19, [X31 - 0x10]!
	0x01DA5BD0 LDR X8, [X0 + 0x50]
	0x01DA5BD4 CBZ X8, 0x1DA5BE4
	0x01DA5BD8 LDR W0, [X8 + 0x4]
	0x01DA5BDC LDP X30, X19, [X31], #0x10
	0x01DA5BE0 RET
	0x01DA5BE4 ADRP X0, 0x234E000
	0x01DA5BE8 LDR X0, [X0 + 0x5B0]
	0x01DA5BEC BL 0x1C16D08
	0x01DA5BF0 BL 0x1C16F10
	0x01DA5BF4 MOV X19, X0
	0x01DA5BF8 ADRP X0, 0x2352000
	0x01DA5BFC LDR X0, [X0 + 0x420]
	0x01DA5C00 BL 0x1C16D08
	0x01DA5C04 MOV X1, X0
	0x01DA5C08 MOV X0, X19
	0x01DA5C0C MOV X2, X31
	0x01DA5C10 BL 0x337DF1C
	0x01DA5C14 ADRP X0, 0x2352000
	0x01DA5C18 LDR X0, [X0 + 0x428]
	0x01DA5C1C BL 0x1C16D08
	0x01DA5C20 MOV X1, X0
	0x01DA5C24 MOV X0, X19
	0x01DA5C28 BL 0x1C16DEC
	0x01DA5C2C STP X30, X19, [X31 - 0x10]!
	0x01DA5C30 LDR X8, [X0 + 0x50]
	0x01DA5C34 CBZ X8, 0x1DA5C44
	0x01DA5C38 STR W1, [X8 + 0x4]
	0x01DA5C3C LDP X30, X19, [X31], #0x10
	0x01DA5C40 RET
	0x01DA5C44 ADRP X0, 0x234E000
	0x01DA5C48 LDR X0, [X0 + 0x5B0]
	0x01DA5C4C BL 0x1C16D08
	0x01DA5C50 BL 0x1C16F10
	0x01DA5C54 MOV X19, X0
	0x01DA5C58 ADRP X0, 0x2352000
	0x01DA5C5C LDR X0, [X0 + 0x420]
	0x01DA5C60 BL 0x1C16D08
	0x01DA5C64 MOV X1, X0
	0x01DA5C68 MOV X0, X19
	0x01DA5C6C MOV X2, X31
	0x01DA5C70 BL 0x337DF1C
	0x01DA5C74 ADRP X0, 0x2352000
	0x01DA5C78 LDR X0, [X0 + 0x430]
	0x01DA5C7C BL 0x1C16D08
	0x01DA5C80 MOV X1, X0
	0x01DA5C84 MOV X0, X19
	0x01DA5C88 BL 0x1C16DEC
	0x01DA5C8C STP X30, X23, [X31 - 0x30]!
	0x01DA5C90 STP X22, X21, [X31 + 0x10]
	0x01DA5C94 STP X20, X19, [X31 + 0x20]
	0x01DA5C98 ADRP X20, 0x2633000
	0x01DA5C9C LDRB W8, [X20 + 0xA98]
	0x01DA5CA0 MOV X19, X0
	0x01DA5CA4 TBNZ X8, 0x0, 0x1DA5CC8
	0x01DA5CA8 ADRP X0, 0x2351000
	0x01DA5CAC LDR X0, [X0 + 0x478]
	0x01DA5CB0 BL 0x1C16CF4
	0x01DA5CB4 ADRP X0, 0x2352000
	0x01DA5CB8 LDR X0, [X0 + 0x438]
	0x01DA5CBC BL 0x1C16CF4
	0x01DA5CC0 MOVZ W8, 0x1
	0x01DA5CC4 STRB W8, [X20 + 0xA98]
	0x01DA5CC8 LDR X22, [X19 + 0xD0]
	0x01DA5CCC CBZ X22, 0x1DA5D60
	0x01DA5CD0 ADRP X23, 0x2351000
	0x01DA5CD4 LDR X23, [X23 + 0x478]
	0x01DA5CD8 ADRP X21, 0x2352000
	0x01DA5CDC LDR X20, [X22 + 0x20]
	0x01DA5CE0 LDR X0, [X23]
	0x01DA5CE4 LDR X21, [X21 + 0x438]
	0x01DA5CE8 BL 0x1C16F10
	0x01DA5CEC LDR X2, [X21]
	0x01DA5CF0 MOV X1, X19
	0x01DA5CF4 MOV X3, X31
	0x01DA5CF8 MOV X21, X0
	0x01DA5CFC BL 0x2A76254
	0x01DA5D00 MOV X0, X20
	0x01DA5D04 MOV X1, X21
	0x01DA5D08 MOV X2, X31
	0x01DA5D0C BL 0x33C0DE4
	0x01DA5D10 CBZ X0, 0x1DA5D4C
	0x01DA5D14 LDR X20, [X23]
	0x01DA5D18 MOV X19, X0
	0x01DA5D1C MOV X1, X20
	0x01DA5D20 BL 0x1C16E00
	0x01DA5D24 CBZ X0, 0x1DA5D40
	0x01DA5D28 STR X0, [X22 + 0x20]
	0x01DA5D2C LDR X20, [X23]
	0x01DA5D30 MOV X0, X19
	0x01DA5D34 MOV X1, X20
	0x01DA5D38 BL 0x1C16E00
	0x01DA5D3C CBNZ X0, 0x1DA5D50
	0x01DA5D40 MOV X0, X19
	0x01DA5D44 MOV X1, X20
	0x01DA5D48 BL 0x1C171E0
	0x01DA5D4C STR X31, [X22 + 0x20]
	0x01DA5D50 LDP X20, X19, [X31 + 0x20]
	0x01DA5D54 LDP X22, X21, [X31 + 0x10]
	0x01DA5D58 LDP X30, X23, [X31], #0x30
	0x01DA5D5C RET
	0x01DA5D60 BL 0x1C16F20
	0x01DA5D64 STR D8, [X31 - 0x20]!
	0x01DA5D68 STR X30, [X31 + 0x8]
	0x01DA5D6C STP X20, X19, [X31 + 0x10]
	0x01DA5D70 MOV X20, X0
	0x01DA5D74 BL 0x1DA5BCC
	0x01DA5D78 LDR X19, [X20 + 0xB8]
	0x01DA5D7C CMP W0, 0x1
	0x01DA5D80 B.NE 0x1DA5DB4
	0x01DA5D84 LDR V8, [X20 + 0xC0]
	0x01DA5D88 MOV X0, X20
	0x01DA5D8C BL 0x1DA5B0C
	0x01DA5D90 CBZ X19, 0x1DA5DD4
	0x01DA5D94 FMOV S1, 1
	0x01DA5D98 FCMP S0, 0x0
	0x01DA5D9C FMIN S0, S0, S1
	0x01DA5DA0 FMOV S1, W31
	0x01DA5DA4 FCSEL S0, S0, S1, PL
	0x01DA5DA8 FMUL S0, S8, S0
	0x01DA5DAC FADD S0, S0, S1
	0x01DA5DB0 B 0x1DA5DBC
	0x01DA5DB4 FMOV S0, W31
	0x01DA5DB8 CBZ X19, 0x1DA5DD4
	0x01DA5DBC MOV X0, X19
	0x01DA5DC0 LDP X20, X19, [X31 + 0x10]
	0x01DA5DC4 LDR X30, [X31 + 0x8]
	0x01DA5DC8 MOV X1, X31
	0x01DA5DCC LDR V8, [X31], #0x20
	0x01DA5DD0 B 0x3C16928
	0x01DA5DD4 BL 0x1C16F20
	0x01DA5DD8 STR D8, [X31 - 0x20]!
	0x01DA5DDC STR X30, [X31 + 0x8]
	0x01DA5DE0 STP X20, X19, [X31 + 0x10]
	0x01DA5DE4 MOV X1, X31
	0x01DA5DE8 MOV X19, X0
	0x01DA5DEC BL 0x1E73D04
	0x01DA5DF0 LDR X0, [X19 + 0x40]
	0x01DA5DF4 CBZ X0, 0x1DA5F24
	0x01DA5DF8 MOV X1, X31
	0x01DA5DFC BL 0x1E93668
	0x01DA5E00 TBZ X0, 0x0, 0x1DA5EB4
	0x01DA5E04 MOV X0, X19
	0x01DA5E08 BL 0x1DA5BCC
	0x01DA5E0C CMP W0, 0x2
	0x01DA5E10 B.EQ 0x1DA5E78
	0x01DA5E14 CMP W0, 0x1
	0x01DA5E18 B.NE 0x1DA5EB4
	0x01DA5E1C MOV X0, X19
	0x01DA5E20 BL 0x1DA5B0C
	0x01DA5E24 MOV X0, X31
	0x01DA5E28 MOV V8.16B, V0.16B
	0x01DA5E2C BL 0x3C3C7DC
	0x01DA5E30 LDR V1, [X19 + 0x84]
	0x01DA5E34 MOV X0, X19
	0x01DA5E38 FDIV S0, S0, S1
	0x01DA5E3C FADD S0, S8, S0
	0x01DA5E40 BL 0x1DA5B6C
	0x01DA5E44 MOV X0, X19
	0x01DA5E48 BL 0x1DA5B0C
	0x01DA5E4C FMOV S1, 1
	0x01DA5E50 FCMP S0, S1
	0x01DA5E54 B.LT 0x1DA5EB4
	0x01DA5E58 MOVZ W1, 0x2
	0x01DA5E5C MOV X0, X19
	0x01DA5E60 BL 0x1DA5C2C
	0x01DA5E64 MOV X0, X19
	0x01DA5E68 BL 0x1DA5F28
	0x01DA5E6C MOV X0, X19
	0x01DA5E70 BL 0x1DA637C
	0x01DA5E74 B 0x1DA5F0C
	0x01DA5E78 MOV X0, X19
	0x01DA5E7C BL 0x1DA5B0C
	0x01DA5E80 MOV X0, X31
	0x01DA5E84 MOV V8.16B, V0.16B
	0x01DA5E88 BL 0x3C3C7DC
	0x01DA5E8C LDR V1, [X19 + 0x88]
	0x01DA5E90 MOV X0, X19
	0x01DA5E94 FDIV S0, S0, S1
	0x01DA5E98 FADD S0, S8, S0
	0x01DA5E9C BL 0x1DA5B6C
	0x01DA5EA0 MOV X0, X19
	0x01DA5EA4 BL 0x1DA5B0C
	0x01DA5EA8 FMOV S1, 1
	0x01DA5EAC FCMP S0, S1
	0x01DA5EB0 B.GE 0x1DA5EC4
	0x01DA5EB4 LDP X20, X19, [X31 + 0x10]
	0x01DA5EB8 LDR X30, [X31 + 0x8]
	0x01DA5EBC LDR V8, [X31], #0x20
	0x01DA5EC0 RET
	0x01DA5EC4 MOV X0, X19
	0x01DA5EC8 MOV W1, W31
	0x01DA5ECC BL 0x1DA5C2C
	0x01DA5ED0 LDR X20, [X19 + 0xA8]
	0x01DA5ED4 MOV X0, X19
	0x01DA5ED8 MOV X1, X31
	0x01DA5EDC BL 0x3C32E90
	0x01DA5EE0 CBZ X0, 0x1DA5F24
	0x01DA5EE4 MOV X1, X31
	0x01DA5EE8 BL 0x3C3F58C
	0x01DA5EEC CBZ X20, 0x1DA5F24
	0x01DA5EF0 FMOV S3, 1
	0x01DA5EF4 MOVZ W1, 0x1
	0x01DA5EF8 MOV X0, X20
	0x01DA5EFC MOV X2, X31
	0x01DA5F00 BL 0x1DD0FA8
	0x01DA5F04 MOV X0, X19
	0x01DA5F08 BL 0x1DA698C
	0x01DA5F0C MOV X0, X19
	0x01DA5F10 LDP X20, X19, [X31 + 0x10]
	0x01DA5F14 LDR X30, [X31 + 0x8]
	0x01DA5F18 FMOV S0, W31
	0x01DA5F1C LDR V8, [X31], #0x20
	0x01DA5F20 B 0x1DA5B6C
	0x01DA5F24 BL 0x1C16F20
	0x01DA5F28 SUB X31, X31, 0xB0
	0x01DA5F2C STR D12, [X31 + 0x40]
	0x01DA5F30 STP D11, D10, [X31 + 0x50]
	0x01DA5F34 STP D9, D8, [X31 + 0x60]
	0x01DA5F38 STP X30, X25, [X31 + 0x70]
	0x01DA5F3C STP X24, X23, [X31 + 0x80]
	0x01DA5F40 STP X22, X21, [X31 + 0x90]
	0x01DA5F44 STP X20, X19, [X31 + 0xA0]
	0x01DA5F48 ADRP X20, 0x2633000
	0x01DA5F4C LDRB W8, [X20 + 0xA9B]
	0x01DA5F50 MOV X19, X0
	0x01DA5F54 TBNZ X8, 0x0, 0x1DA5FE4
	0x01DA5F58 ADRP X0, 0x2351000
	0x01DA5F5C LDR X0, [X0 + 0xBB8]
	0x01DA5F60 BL 0x1C16CF4
	0x01DA5F64 ADRP X0, 0x2352000
	0x01DA5F68 LDR X0, [X0 + 0x440]
	0x01DA5F6C BL 0x1C16CF4
	0x01DA5F70 ADRP X0, 0x2352000
	0x01DA5F74 LDR X0, [X0 + 0x448]
	0x01DA5F78 BL 0x1C16CF4
	0x01DA5F7C ADRP X0, 0x2352000
	0x01DA5F80 LDR X0, [X0 + 0x450]
	0x01DA5F84 BL 0x1C16CF4
	0x01DA5F88 ADRP X0, 0x2352000
	0x01DA5F8C LDR X0, [X0 + 0x90]
	0x01DA5F90 BL 0x1C16CF4
	0x01DA5F94 ADRP X0, 0x2352000
	0x01DA5F98 LDR X0, [X0 + 0x458]
	0x01DA5F9C BL 0x1C16CF4
	0x01DA5FA0 ADRP X0, 0x2352000
	0x01DA5FA4 LDR X0, [X0 + 0x88]
	0x01DA5FA8 BL 0x1C16CF4
	0x01DA5FAC ADRP X0, 0x2352000
	0x01DA5FB0 LDR X0, [X0 + 0x80]
	0x01DA5FB4 BL 0x1C16CF4
	0x01DA5FB8 ADRP X0, 0x234E000
	0x01DA5FBC LDR X0, [X0 + 0x598]
	0x01DA5FC0 BL 0x1C16CF4
	0x01DA5FC4 ADRP X0, 0x234E000
	0x01DA5FC8 LDR X0, [X0 + 0x5F8]
	0x01DA5FCC BL 0x1C16CF4
	0x01DA5FD0 ADRP X0, 0x2350000
	0x01DA5FD4 LDR X0, [X0 + 0x310]
	0x01DA5FD8 BL 0x1C16CF4
	0x01DA5FDC MOVZ W8, 0x1
	0x01DA5FE0 STRB W8, [X20 + 0xA9B]
	0x01DA5FE4 MOV X0, X19
	0x01DA5FE8 MOV X1, X31
	0x01DA5FEC STR X31, [X31 + 0x48]
	0x01DA5FF0 STP X31, X31, [X31 + 0x20]
	0x01DA5FF4 STR X31, [X31 + 0x30]
	0x01DA5FF8 STR X31, [X31 + 0x18]
	0x01DA5FFC BL 0x3C32E90
	0x01DA6000 CBZ X0, 0x1DA62CC
	0x01DA6004 ADRP X22, 0x234D000
	0x01DA6008 ADRP X20, 0x2351000
	0x01DA600C ADRP X21, 0x2351000
	0x01DA6010 LDR X22, [X22 + 0x5F8]
	0x01DA6014 LDR X20, [X20 + 0x80]
	0x01DA6018 LDR X21, [X21 + 0x88]
	0x01DA601C MOV X1, X31
	0x01DA6020 BL 0x3C3F58C
	0x01DA6024 LDR X0, [X22]
	0x01DA6028 LDR V10, [X19 + 0x80]
	0x01DA602C MOV V8.16B, V0.16B
	0x01DA6030 MOV V9.16B, V1.16B
	0x01DA6034 LDR W8, [X0 + 0xE0]
	0x01DA6038 MOV V11.16B, V2.16B
	0x01DA603C CBNZ W8, 0x1DA6044
	0x01DA6040 BL 0x1C16DFC
	0x01DA6044 MOV V0.16B, V8.16B
	0x01DA6048 MOV V1.16B, V9.16B
	0x01DA604C MOV V2.16B, V11.16B

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+80], D15
	003 Move [X31+88], D14
	004 Move [X31+96], D13
	005 Move [X31+104], D12
	006 Move [X31+112], D11
	007 Move [X31+120], D10
	008 Move [X31+128], D9
	009 Move [X31+136], D8
	010 Move [X31+144], X30
	011 Move [X31+160], X22
	012 Move [X31+168], X21
	013 Move [X31+176], X20
	014 Move [X31+184], X19
	015 Move X22, 0x2634000
	016 Move W8, [X22+2699]
	017 Move X21, X2
	018 Move X19, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {53}
	024 Move X0, 0x2353000
	025 Move X0, [X0+920]
	026 Call 0x1C17CF4
	027 Move X0, 0x234F000
	028 Move X0, [X0+2600]
	029 Call 0x1C17CF4
	030 Move X0, 0x2353000
	031 Move X0, [X0+928]
	032 Call 0x1C17CF4
	033 Move X0, 0x2353000
	034 Move X0, [X0+936]
	035 Call 0x1C17CF4
	036 Move X0, 0x2353000
	037 Move X0, [X0+944]
	038 Call 0x1C17CF4
	039 Move X0, 0x2353000
	040 Move X0, [X0+952]
	041 Call 0x1C17CF4
	042 Move X0, 0x2351000
	043 Move X0, [X0+2464]
	044 Call 0x1C17CF4
	045 Move X0, 0x234F000
	046 Move X0, [X0+1432]
	047 Call 0x1C17CF4
	048 Move X0, 0x234F000
	049 Move X0, [X0+1528]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X22+2699], W8
	053 NotImplemented "Instruction MOVI not yet implemented."
	054 Move X0, X20
	055 Move X1, X31
	056 Move [X31+60], V0
	057 Move [X31+32], V0
	058 Move [X31+40], V0
	059 Move [X31+152], X31
	060 Call Component.get_transform, X0
	061 Compare X0, 0
	062 JumpIfEqual {356}
	063 Move X1, X31
	064 Call Transform.get_forward, X0
	065 Move X0, X31
	066 Move V8, V0
	067 Move V9, V1
	068 Move V10, V2
	069 Call Random.get_value
	070 Move X0, X31
	071 Move V11, V0
	072 Call Random.get_value
	073 Move X0, X20
	074 Move X1, X31
	075 Move V12, V0
	076 Call Component.get_transform, X0
	077 Compare X0, 0
	078 JumpIfEqual {356}
	079 Move X1, X31
	080 Call Transform.get_right, X0
	081 Move X0, X20
	082 Move X1, X31
	083 Move V13, V0
	084 Move V14, V1
	085 Move V15, V2
	086 Call Component.get_transform, X0
	087 Compare X0, 0
	088 JumpIfEqual {356}
	089 Move X1, X31
	090 Call Transform.get_up, X0
	091 Compare X21, 0
	092 JumpIfEqual {356}
	093 Move X9, 0x2353000
	094 Move X9, [X9+952]
	095 Move W10, [X21+28]
	096 Move X8, [X21+16]
	097 Move X9, [X9]
	098 Add W10, W10, 1
	099 Move [X21+28], W10
	100 Compare X8, 0
	101 JumpIfEqual {356}
	102 Move X11, -19636224
	103 Move V3, [X11+712]
	104 Move S4, -0.5
	105 NotImplemented "Instruction LDRSW not yet implemented."
	106 Move W11, [X8+24]
	107 Add S5, S11, S4
	108 Add S4, S12, S4
	109 Multiply S5, S5, S3
	110 Multiply S3, S4, S3
	111 Multiply S4, S5, S15
	112 Multiply S6, S5, S14
	113 Multiply S5, S5, S13
	114 Multiply S0, S3, S0
	115 Multiply S1, S3, S1
	116 Multiply S2, S3, S2
	117 Add S0, S5, S0
	118 Add S1, S6, S1
	119 Add S2, S4, S2
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Add S8, S8, S0
	122 Add S9, S9, S1
	123 Add S10, S10, S2
	124 Move W11, 12
	125 Add W9, W10, 1
	126 NotImplemented "Instruction MADD not yet implemented."
	127 Move [X21+24], W9
	128 Move [X8+32], S8
	129 Move [X8+40], S9
	130 Move [X8+40], S10
	131 Move X8, [X9+32]
	132 Move X0, X21
	133 Move V0, V8
	134 Move V1, V9
	135 Move X8, [X8+192]
	136 Move V2, V10
	137 Move X1, [X8+112]
	138 Call List`1<Vector3>.AddWithResize, X0, X1
	139 Move X0, [X20+136]
	140 Compare X0, 0
	141 JumpIfEqual {356}
	142 Move X21, 0x234F000
	143 Move X21, [X21+2600]
	144 Move X1, X31
	145 Call Transform.get_position, X0
	146 Move X0, [X21]
	147 Move V11, V0
	148 Move V12, V1
	149 Move V13, V2
	150 Move W8, [X0+224]
	151 Compare W8, 0
	152 JumpIfNotEqual {154}
	153 Call 0x1C17DFC
	154 Move W8, 0x40A00000
	155 Move X9, 0x3F800000
	156 Move W10, 0x3F800000
	157 Move V0, V11
	158 Move V1, V12
	159 Move V2, V13
	160 Move V3, V8
	161 Move V4, V9
	162 Move V5, V10
	163 Move X0, X31
	164 Move [X31+16], W8
	165 Move [X31], X10
	166 Move [X31+8], X9
	167 Call Debug.DrawRay, X0, X1, X2, V0
	168 Move X0, [X20+136]
	169 Compare X0, 0
	170 JumpIfEqual {356}
	171 Move X21, 0x234F000
	172 Move X21, [X21+1528]
	173 Move X1, X31
	174 Call Transform.get_position, X0
	175 Add X0, X20, 168
	176 Move X1, X31
	177 Move V11, V0
	178 Move V12, V1
	179 Move V13, V2
	180 Call LayerMask.get_value, X0
	181 Move X8, [X21]
	182 Move W20, W0
	183 Move W9, [X8+224]
	184 Compare W9, 0
	185 JumpIfNotEqual {188}
	186 Move X0, X8
	187 Call 0x1C17DFC
	188 Add X0, X31, 32
	189 Move S6, 20
	190 Move W2, 2
	191 Move V0, V11
	192 Move V1, V12
	193 Move V2, V13
	194 Move V3, V8
	195 Move V4, V9
	196 Move V5, V10
	197 Move W1, W20
	198 Move X3, X31
	199 Call Physics.Raycast, X0, X1, X2, V0, X3, X4
	200 Move TEMP, X0
	201 And TEMP, TEMP, 1
	202 Compare TEMP, 1
	203 JumpIfNotEqual {341}
	204 Add X0, X31, 32
	205 Move X1, X31
	206 Call RaycastHit.get_collider, X0
	207 Compare X0, 0
	208 JumpIfEqual {356}
	209 Move X8, 0x2353000
	210 Move X8, [X8+920]
	211 Move X1, [X8]
	212 Call 0x21A4F50, X0
	213 Compare X0, 0
	214 JumpIfEqual {293}
	215 Move X8, 0x2351000
	216 Move X8, [X8+2464]
	217 Move X9, [X0]
	218 Move X20, X0
	219 Move X8, [X8]
	220 Move W11, [X9+304]
	221 Move W10, [X8+304]
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Move X9, [X9+200]
	224 Add X9, X9, X10
	225 NotImplemented "Instruction LDUR not yet implemented."
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Move X0, X20
	228 Move X1, X31
	229 Call NetPlayer.get_IsMine, X0
	230 Move TEMP, X0
	231 And TEMP, TEMP, 1
	232 Compare TEMP, 1
	233 JumpIfEqual {293}
	234 Compare X19, 0
	235 JumpIfEqual {356}
	236 Move X8, 0x2353000
	237 Move X8, [X8+936]
	238 Add X2, X31, 152
	239 Move X0, X19
	240 Move X1, X20
	241 Move X3, [X8]
	242 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	243 Move TEMP, X0
	244 And TEMP, TEMP, 1
	245 Compare TEMP, 1
	246 JumpIfEqual {262}
	247 Move X8, 0x2353000
	248 Move X8, [X8+944]
	249 Move X0, [X8]
	250 Call 0x1C17F10
	251 Move X1, X31
	252 Move X21, X0
	253 Call Object..ctor, X0
	254 Move X8, 0x2353000
	255 Move X8, [X8+928]
	256 Move X0, X19
	257 Move X1, X20
	258 Move X2, X21
	259 Move X3, [X8]
	260 Move [X31+152], X21
	261 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	262 Move X19, [X31+152]
	263 Compare X19, 0
	264 JumpIfEqual {356}
	265 Move S0, [X19+32]
	266 Move S1, [X19+36]
	267 Move W8, [X19+16]
	268 Move V2, [X19+40]
	269 NotImplemented "Instruction LDUR not yet implemented."
	270 Move V4, [X19+28]
	271 Add S0, S8, S0
	272 Add S1, S9, S1
	273 Move [X19+32], S0
	274 Move [X19+40], S1
	275 NotImplemented "Instruction MOVI not yet implemented."
	276 Add S0, S10, S2
	277 Move S12, 0.5
	278 Add W8, W8, 10
	279 Add X0, X31, 32
	280 Move X1, X31
	281 Move [X19+40], S0
	282 NotImplemented "Instruction INVALID not yet implemented."
	283 Move [X19+16], W8
	284 Multiply S14, S4, S12
	285 Call RaycastHit.get_point, X0
	286 Multiply S2, S2, S12
	287 Move V0.S[1], V1.S[0]
	288 NotImplemented "Instruction INVALID not yet implemented."
	289 Add S1, S14, S2
	290 Add V0, V13, V0
	291 Move [X19+20], D0
	292 Move [X19+28], S1
	293 Add X0, X31, 32
	294 Move X1, X31
	295 Call RaycastHit.get_collider, X0
	296 Compare X0, 0
	297 JumpIfEqual {356}
	298 Move X1, X31
	299 Call Collider.get_attachedRigidbody, X0
	300 Move X8, 0x234F000
	301 Move X8, [X8+1432]
	302 Move X19, X0
	303 Move X8, [X8]
	304 Move W9, [X8+224]
	305 Compare W9, 0
	306 JumpIfNotEqual {309}
	307 Move X0, X8
	308 Call 0x1C17DFC
	309 Move X0, X19
	310 Move X1, X31
	311 Move X2, X31
	312 Call Object.op_Inequality, X0, X1
	313 Move TEMP, X0
	314 And TEMP, TEMP, 1
	315 Compare TEMP, 1
	316 JumpIfNotEqual {341}
	317 Add X0, X31, 32
	318 Move X1, X31
	319 Call RaycastHit.get_collider, X0
	320 Compare X0, 0
	321 JumpIfEqual {356}
	322 Move X1, X31
	323 Call Collider.get_attachedRigidbody, X0
	324 Move X19, X0
	325 Add X0, X31, 32
	326 Move X1, X31
	327 Call RaycastHit.get_point, X0
	328 Compare X19, 0
	329 JumpIfEqual {356}
	330 Move W8, 0x42480000
	331 Move V3, V0
	332 Move S0, W8
	333 Move V4, V1
	334 Move V5, V2
	335 Multiply S2, S10, S0
	336 Multiply S1, S9, S0
	337 Multiply S0, S8, S0
	338 Move X0, X19
	339 Move X1, X31
	340 Call Rigidbody.AddForceAtPosition, X0, X1, X2
	341 Move X20, [X31+176]
	342 Move X19, [X31+184]
	343 Move X22, [X31+160]
	344 Move X21, [X31+168]
	345 Move X30, [X31+144]
	346 Move D9, [X31+128]
	347 Move D8, [X31+136]
	348 Move D11, [X31+112]
	349 Move D10, [X31+120]
	350 Move D13, [X31+96]
	351 Move D12, [X31+104]
	352 Move D15, [X31+80]
	353 Move D14, [X31+88]
	354 Add X31, X31, 192
	355 Return 
	356 Call 0x1C17F20

Method: System.Void HandleUse()

Disassembly:
	0x01DA6058 BL 0x3C8D118
	0x01DA605C LDR X8, [X20]
	0x01DA6060 MOV X20, X0
	0x01DA6064 MOV X0, X8
	0x01DA6068 BL 0x1C16F10
	0x01DA606C LDR X1, [X21]
	0x01DA6070 MOV X19, X0
	0x01DA6074 BL 0x301B7C4
	0x01DA6078 CBZ X20, 0x1DA62CC
	0x01DA607C LDR W8, [X20 + 0x18]
	0x01DA6080 CMP W8, 0x1
	0x01DA6084 B.LT 0x1DA6190
	0x01DA6088 ADRP X23, 0x234D000
	0x01DA608C ADRP X24, 0x2350000
	0x01DA6090 ADRP X25, 0x2351000
	0x01DA6094 LDR X23, [X23 + 0x598]
	0x01DA6098 LDR X24, [X24 + 0xBB8]
	0x01DA609C LDR X25, [X25 + 0x90]
	0x01DA60A0 MOV W22, W31
	0x01DA60A4 CMP W22, W8
	0x01DA60A8 B.CS 0x1DA62D0
	0x01DA60AC ADD X8, X20, W22, 0x3, SXTW
	0x01DA60B0 LDR X0, [X8 + 0x20]
	0x01DA60B4 CBZ X0, 0x1DA62CC
	0x01DA60B8 MOV X1, X31
	0x01DA60BC BL 0x3C8E82C
	0x01DA60C0 LDR X8, [X23]
	0x01DA60C4 MOV X21, X0
	0x01DA60C8 LDR W9, [X8 + 0xE0]
	0x01DA60CC CBNZ W9, 0x1DA60D8
	0x01DA60D0 MOV X0, X8
	0x01DA60D4 BL 0x1C16DFC
	0x01DA60D8 MOV X0, X21
	0x01DA60DC MOV X1, X31
	0x01DA60E0 MOV X2, X31
	0x01DA60E4 BL 0x3C3883C
	0x01DA60E8 TBNZ X0, 0x0, 0x1DA6180
	0x01DA60EC CBZ X21, 0x1DA62CC
	0x01DA60F0 LDR X1, [X24]
	0x01DA60F4 MOV X0, X21
	0x01DA60F8 BL 0x21A3894
	0x01DA60FC LDR X8, [X23]
	0x01DA6100 MOV X21, X0
	0x01DA6104 LDR W9, [X8 + 0xE0]
	0x01DA6108 CBNZ W9, 0x1DA6114
	0x01DA610C MOV X0, X8
	0x01DA6110 BL 0x1C16DFC
	0x01DA6114 MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2633000
	005 Move W8, [X20+2700]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x234E000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2700], W8
	016 Move X0, X19
	017 Call Shotgun.get__ammoLeft, X0
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X0, X19
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Call Shotgun.RPC_Shoot, X0
	024 Return 
	025 Move X8, 0x234E000
	026 Move X8, [X8+1432]
	027 Move X20, [X19+152]
	028 Move X0, [X8]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X20
	034 Move X1, X31
	035 Move X2, X31
	036 Call Object.op_Inequality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {57}
	041 Move X20, [X19+152]
	042 Move X0, X19
	043 Move X1, X31
	044 Call Component.get_transform, X0
	045 Compare X0, 0
	046 JumpIfEqual {61}
	047 Move X1, X31
	048 Call Transform.get_position, X0
	049 Move X0, X20
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move S3, 1
	053 Move X1, X31
	054 Move X30, [X31+32]
	055 Call SFXManager.PlaySFXAsRPC, X0, X1, V0
	056 Return 
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X30, [X31+32]
	060 Return 
	061 Call 0x1C17F20

Method: System.Void HandleRespawned()

Disassembly:
	0x01DA6118 MOV X1, X31
	0x01DA611C MOV X2, X31

ISIL:
	001 Move W1, 2
	002 Call Shotgun.set__ammoLeft, X0, X1
	003 Return 

Method: System.Void .ctor()

Disassembly:
	0x01DA6120 BL 0x3C354F8
	0x01DA6124 TBZ X0, 0x0, 0x1DA6180
	0x01DA6128 CBZ X19, 0x1DA62CC
	0x01DA612C LDR W10, [X19 + 0x1C]
	0x01DA6130 LDR X8, [X19 + 0x10]
	0x01DA6134 LDR X9, [X25]
	0x01DA6138 ADD W10, W10, 0x1
	0x01DA613C STR W10, [X19 + 0x1C]
	0x01DA6140 CBZ X8, 0x1DA62CC
	0x01DA6144 LDRSW X10, [X19 + 0x18]
	0x01DA6148 LDR W11, [X8 + 0x18]
	0x01DA614C CMP W10, W11
	0x01DA6150 B.CS 0x1DA6168
	0x01DA6154 ADD W9, W10, 0x1
	0x01DA6158 ADD X8, X8, X10, 0x3, LSL
	0x01DA615C STR W9, [X19 + 0x18]
	0x01DA6160 STR X21, [X8 + 0x20]
	0x01DA6164 B 0x1DA6180
	0x01DA6168 LDR X8, [X9 + 0x20]
	0x01DA616C MOV X0, X19
	0x01DA6170 MOV X1, X21
	0x01DA6174 LDR X8, [X8 + 0xC0]
	0x01DA6178 LDR X2, [X8 + 0x70]
	0x01DA617C BL 0x301BF90
	0x01DA6180 LDR W8, [X20 + 0x18]
	0x01DA6184 ADD W22, W22, 0x1
	0x01DA6188 CMP W22, W8
	0x01DA618C B.LT 0x1DA60A4
	0x01DA6190 ADRP X8, 0x234F000
	0x01DA6194 LDR X8, [X8 + 0x310]
	0x01DA6198 LDR X0, [X8]
	0x01DA619C LDR W8, [X0 + 0xE0]
	0x01DA61A0 CBNZ W8, 0x1DA61A8
	0x01DA61A4 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2633000
	007 Move X22, 0x2352000
	008 Move X20, 0x2352000
	009 Move W8, [X21+2701]
	010 Move X22, [X22+960]
	011 Move X20, [X20+968]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2352000
	018 Move X0, [X0+968]
	019 Call 0x1C17CF4
	020 Move X0, 0x2352000
	021 Move X0, [X0+960]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2701], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X2, [X20]
	028 Move W1, 19
	029 Move X20, X0
	030 Call List`1<Vector3>..ctor, X0, X1
	031 Move W8, 2
	032 Move [X19+192], X20
	033 Move [X19+200], W8
	034 Move X0, X19
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X1, X31
	040 Move X30, [X31+48]
	041 Call NetworkBehaviour..ctor, X0
	042 Return 

Method: System.Void CopyBackingFieldsToState(System.Boolean param_0)

Disassembly:
	0x01DA61A8 ADD X1, X31, 0x48
	0x01DA61AC MOVZ W0, 0x1
	0x01DA61B0 BL 0x1DA6E5C
	0x01DA61B4 TBZ X0, 0x0, 0x1DA62A8
	0x01DA61B8 CBZ X19, 0x1DA62CC
	0x01DA61BC ADRP X8, 0x2351000
	0x01DA61C0 LDR X8, [X8 + 0x458]
	0x01DA61C4 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W1, [X0+200]
	004 Move X19, X0
	005 Call Shotgun.set__ammoLeft, X0, X1
	006 Move W1, [X19+204]
	007 Move X0, X19
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Call Shotgun.set_reloadTimer, X0, X1
	011 Return 

Method: System.Void CopyStateToBackingFields()

Disassembly:
	0x01DA61C8 LDR X1, [X8]
	0x01DA61CC ADD X8, X31, 0x0
	0x01DA61D0 BL 0x301CB58
	0x01DA61D4 LDR V0, [X31]
	0x01DA61D8 LDR X8, [X31 + 0x10]
	0x01DA61DC ADRP X20, 0x2351000
	0x01DA61E0 LDR X20, [X20 + 0x448]
	0x01DA61E4 STR V0, [X31 + 0x2]
	0x01DA61E8 STR X8, [X31 + 0x30]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call Shotgun.get__ammoLeft, X0
	005 Move [X19+200], W0
	006 Move X0, X19
	007 Call Shotgun.get_reloadTimer, X0
	008 Move [X19+204], W0
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return 

Method: System.Void RPC_Shoot@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01DA61EC FMOV S12, W31
	0x01DA61F0 LDR X1, [X20]
	0x01DA61F4 ADD X0, X31, 0x20
	0x01DA61F8 BL 0x2BC4350
	0x01DA61FC TBZ X0, 0x0, 0x1DA6294
	0x01DA6200 LDR X19, [X31 + 0x30]
	0x01DA6204 CBZ X19, 0x1DA62D4
	0x01DA6208 MOV X0, X19
	0x01DA620C MOV X1, X31
	0x01DA6210 BL 0x1D896B8
	0x01DA6214 STR X0, [X31 + 0x18]
	0x01DA6218 ADD X0, X31, 0x18
	0x01DA621C MOV X1, X31
	0x01DA6220 BL 0x1E74DE4
	0x01DA6224 TBNZ X0, 0x0, 0x1DA61F0
	0x01DA6228 LDR X0, [X31 + 0x48]
	0x01DA622C CBZ X0, 0x1DA62D8
	0x01DA6230 MOV X1, X31
	0x01DA6234 BL 0x3C32E90
	0x01DA6238 CBZ X0, 0x1DA62DC
	0x01DA623C MOV X1, X31
	0x01DA6240 BL 0x3C3F58C
	0x01DA6244 MOV V8.16B, V0.16B
	0x01DA6248 MOV V9.16B, V1.16B
	0x01DA624C MOV V10.16B, V2.16B
	0x01DA6250 FMOV S0, -0.5
	0x01DA6254 FMOV S1, 0.5
	0x01DA6258 MOV X0, X31
	0x01DA625C BL 0x3C30968
	0x01DA6260 MOV V11.16B, V0.16B
	0x01DA6264 FMOV S0, -0.5
	0x01DA6268 FMOV S1, 0.5
	0x01DA626C MOV X0, X31
	0x01DA6270 BL 0x3C30968

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2633000
	005 Move W8, [X20+2702]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2352000
	012 Move X0, [X0+976]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2702], W8
	016 Compare X19, 0
	017 JumpIfEqual {39}
	018 Move X9, 0x2352000
	019 Move X9, [X9+976]
	020 Move W8, 1
	021 Move [X19+88], W8
	022 Move X8, [X19]
	023 Move X1, [X9]
	024 Move W10, [X8+304]
	025 Move W9, [X1+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, [X8+200]
	028 Add X8, X8, X9
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Call Shotgun.RPC_Shoot, X0
	036 Return 
	037 Move X0, X19
	038 Call 0x1C181E0
	039 Call 0x1C17F20

Method: System.Void RPC_MuzzleFlash@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01DA6274 FADD S3, S8, S11
	0x01DA6278 FADD S1, S9, S12
	0x01DA627C FADD S2, S10, S0
	0x01DA6280 MOV X0, X19
	0x01DA6284 MOV V0.16B, V3.16B
	0x01DA6288 MOV X1, X31
	0x01DA628C BL 0x1D96778
	0x01DA6290 B 0x1DA61F0
	0x01DA6294 ADRP X8, 0x2351000
	0x01DA6298 LDR X8, [X8 + 0x440]
	0x01DA629C ADD X0, X31, 0x20
	0x01DA62A0 LDR X1, [X8]
	0x01DA62A4 BL 0x2BC434C
	0x01DA62A8 LDP X20, X19, [X31 + 0xA0]
	0x01DA62AC LDP X22, X21, [X31 + 0x90]
	0x01DA62B0 LDP X24, X23, [X31 + 0x80]
	0x01DA62B4 LDP X30, X25, [X31 + 0x70]
	0x01DA62B8 LDP D9, D8, [X31 + 0x60]
	0x01DA62BC LDP D11, D10, [X31 + 0x50]
	0x01DA62C0 LDR V12, [X31 + 0x40]
	0x01DA62C4 ADD X31, X31, 0xB0
	0x01DA62C8 RET
	0x01DA62CC BL 0x1C16F20
	0x01DA62D0 BL 0x1C16F28
	0x01DA62D4 BL 0x1C16F20
	0x01DA62D8 BL 0x1C16F20
	0x01DA62DC BL 0x1C16F20
	0x01DA62E0 B 0x1DA6308
	0x01DA62E4 B 0x1DA6308
	0x01DA62E8 B 0x1DA6308
	0x01DA62EC B 0x1DA6308
	0x01DA62F0 B 0x1DA6308
	0x01DA62F4 B 0x1DA6308
	0x01DA62F8 B 0x1DA6308

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2633000
	005 Move W8, [X20+2703]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2352000
	012 Move X0, [X0+976]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2703], W8
	016 Compare X19, 0
	017 JumpIfEqual {39}
	018 Move X9, 0x2352000
	019 Move X9, [X9+976]
	020 Move W8, 1
	021 Move [X19+88], W8
	022 Move X8, [X19]
	023 Move X1, [X9]
	024 Move W10, [X8+304]
	025 Move W9, [X1+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, [X8+200]
	028 Add X8, X8, X9
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Call Shotgun.RPC_MuzzleFlash, X0
	036 Return 
	037 Move X0, X19
	038 Call 0x1C181E0
	039 Call 0x1C17F20

Method: System.Void RPC_Reload@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01DA62FC B 0x1DA6308
	0x01DA6300 B 0x1DA6308
	0x01DA6304 B 0x1DA6308
	0x01DA6308 MOV X19, X0
	0x01DA630C CMP W1, 0x1
	0x01DA6310 B.NE 0x1DA6344
	0x01DA6314 MOV X0, X19
	0x01DA6318 BL 0x3EB1AD0
	0x01DA631C LDR X20, [X0]
	0x01DA6320 BL 0x3EB1AE0
	0x01DA6324 ADRP X8, 0x2351000
	0x01DA6328 LDR X8, [X8 + 0x440]
	0x01DA632C ADD X0, X31, 0x20
	0x01DA6330 LDR X1, [X8]
	0x01DA6334 BL 0x2BC434C
	0x01DA6338 CBZ X20, 0x1DA62A8
	0x01DA633C MOV X0, X20
	0x01DA6340 BL 0x1C16F18
	0x01DA6344 MOV X20, X31
	0x01DA6348 B 0x1DA6350
	0x01DA634C MOV X19, X0
	0x01DA6350 ADRP X8, 0x2351000
	0x01DA6354 LDR X8, [X8 + 0x440]
	0x01DA6358 LDR X1, [X8]
	0x01DA635C ADD X0, X31, 0x20
	0x01DA6360 BL 0x2BC434C
	0x01DA6364 CBNZ X20, 0x1DA6370
	0x01DA6368 MOV X0, X19
	0x01DA636C BL 0x1D2C690
	0x01DA6370 MOV X0, X20
	0x01DA6374 BL 0x1C16F18
	0x01DA6378 BL 0x1990590
	0x01DA637C SUB X31, X31, 0xB0
	0x01DA6380 STR D14, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2633000
	005 Move W8, [X20+2704]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2352000
	012 Move X0, [X0+976]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2704], W8
	016 Compare X19, 0
	017 JumpIfEqual {39}
	018 Move X9, 0x2352000
	019 Move X9, [X9+976]
	020 Move W8, 1
	021 Move [X19+88], W8
	022 Move X8, [X19]
	023 Move X1, [X9]
	024 Move W10, [X8+304]
	025 Move W9, [X1+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, [X8+200]
	028 Add X8, X8, X9
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Call Shotgun.RPC_Reload, X0
	036 Return 
	037 Move X0, X19
	038 Call 0x1C181E0
	039 Call 0x1C17F20

