Type: AnimalCompany.Shotgun

Method: System.Int32 get__ammoLeft()

Disassembly:
	0x01CAE5C4 BL 0x3A98D98
	0x01CAE5C8 MOV X0, X20
	0x01CAE5CC MOV X1, X31
	0x01CAE5D0 MOV V12.16B, V0.16B
	0x01CAE5D4 BL 0x3A9B084
	0x01CAE5D8 CBZ X0, 0x1CAE93C
	0x01CAE5DC MOV X1, X31
	0x01CAE5E0 BL 0x3AA79D8
	0x01CAE5E4 MOV X0, X20
	0x01CAE5E8 MOV X1, X31
	0x01CAE5EC MOV V13.16B, V0.16B
	0x01CAE5F0 MOV V14.16B, V1.16B
	0x01CAE5F4 MOV V15.16B, V2.16B
	0x01CAE5F8 BL 0x3A9B084
	0x01CAE5FC CBZ X0, 0x1CAE93C
	0x01CAE600 MOV X1, X31
	0x01CAE604 BL 0x3AA7A54
	0x01CAE608 LDR X0, [X20 + 0x88]
	0x01CAE60C CBZ X0, 0x1CAE93C
	0x01CAE610 ADRP X8, 0xFFFFFFFFFEDFB000
	0x01CAE614 LDR V4, [X8 + 0xCA4]
	0x01CAE618 FMOV S3, -0.5
	0x01CAE61C FADD S5, S11, S3
	0x01CAE620 FADD S3, S12, S3

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move W0, [X8]
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0
	010 Move X0, 0x22A0000
	011 Move X0, [X0+1168]
	012 Call 0x1B6F804
	013 Call 0x1B6FA0C
	014 Move X19, X0
	015 Move X0, 0x22A1000
	016 Move X0, [X0+2344]
	017 Call 0x1B6F804
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x22A1000
	023 Move X0, [X0+2352]
	024 Call 0x1B6F804
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1B6F8E8

Method: System.Void set__ammoLeft(System.Int32 value)

Disassembly:
	0x01CAE624 ADRP X21, 0x229F000
	0x01CAE628 LDR X21, [X21 + 0x8B8]
	0x01CAE62C FMUL S5, S5, S4
	0x01CAE630 FMUL S3, S3, S4
	0x01CAE634 FMUL S4, S5, S15
	0x01CAE638 FMUL S6, S5, S14
	0x01CAE63C FMUL S5, S5, S13
	0x01CAE640 FMUL S0, S3, S0
	0x01CAE644 FMUL S1, S3, S1
	0x01CAE648 FMUL S2, S3, S2
	0x01CAE64C FADD S0, S5, S0
	0x01CAE650 FADD S1, S6, S1
	0x01CAE654 FADD S2, S4, S2
	0x01CAE658 MOV X1, X31
	0x01CAE65C FADD S8, S8, S0
	0x01CAE660 FADD S9, S9, S1
	0x01CAE664 FADD S10, S10, S2
	0x01CAE668 BL 0x3AA7658
	0x01CAE66C LDR X0, [X21]
	0x01CAE670 MOV V11.16B, V0.16B
	0x01CAE674 MOV V12.16B, V1.16B
	0x01CAE678 MOV V13.16B, V2.16B
	0x01CAE67C LDR W8, [X0 + 0xE0]
	0x01CAE680 CBNZ W8, 0x1CAE688

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move [X8], W1
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 
	010 Move X0, 0x22A0000
	011 Move X0, [X0+1168]
	012 Call 0x1B6F804
	013 Call 0x1B6FA0C
	014 Move X19, X0
	015 Move X0, 0x22A1000
	016 Move X0, [X0+2344]
	017 Call 0x1B6F804
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x22A1000
	023 Move X0, [X0+2360]
	024 Call 0x1B6F804
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1B6F8E8

Method: Fusion.TickTimer get_reloadTimer()

Disassembly:
	0x01CAE684 BL 0x1B6E8F8
	0x01CAE688 MOVZ W8, 0x40A00000
	0x01CAE68C MOVZ X9, 0x3F800000
	0x01CAE690 MOVZ W10, 0x3F800000
	0x01CAE694 MOV V0.16B, V11.16B
	0x01CAE698 MOV V1.16B, V12.16B
	0x01CAE69C MOV V2.16B, V13.16B
	0x01CAE6A0 MOV V3.16B, V8.16B
	0x01CAE6A4 MOV V4.16B, V9.16B
	0x01CAE6A8 MOV V5.16B, V10.16B
	0x01CAE6AC MOV X0, X31
	0x01CAE6B0 STR W8, [X31 + 0x10]
	0x01CAE6B4 STP X10, X9, [X31]
	0x01CAE6B8 BL 0x3A6E9F4
	0x01CAE6BC LDR X0, [X20 + 0x88]
	0x01CAE6C0 CBZ X0, 0x1CAE93C
	0x01CAE6C4 ADRP X21, 0x229F000
	0x01CAE6C8 LDR X21, [X21 + 0x4C0]
	0x01CAE6CC MOV X1, X31
	0x01CAE6D0 BL 0x3AA7658
	0x01CAE6D4 ADD X0, X20, 0xA8
	0x01CAE6D8 MOV X1, X31
	0x01CAE6DC MOV V11.16B, V0.16B
	0x01CAE6E0 MOV V12.16B, V1.16B

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move W0, [X8+4]
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0
	010 Move X0, 0x22A0000
	011 Move X0, [X0+1168]
	012 Call 0x1B6F804
	013 Call 0x1B6FA0C
	014 Move X19, X0
	015 Move X0, 0x22A1000
	016 Move X0, [X0+2368]
	017 Call 0x1B6F804
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x22A1000
	023 Move X0, [X0+2376]
	024 Call 0x1B6F804
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1B6F8E8

Method: System.Void set_reloadTimer(Fusion.TickTimer value)

Disassembly:
	0x01CAE6E4 MOV V13.16B, V2.16B
	0x01CAE6E8 BL 0x3A9DE74
	0x01CAE6EC LDR X8, [X21]
	0x01CAE6F0 MOV W20, W0
	0x01CAE6F4 LDR W9, [X8 + 0xE0]
	0x01CAE6F8 CBNZ W9, 0x1CAE704
	0x01CAE6FC MOV X0, X8
	0x01CAE700 BL 0x1B6E8F8
	0x01CAE704 ADD X0, X31, 0x20
	0x01CAE708 FMOV S6, 20
	0x01CAE70C MOVZ W2, 0x2
	0x01CAE710 MOV V0.16B, V11.16B
	0x01CAE714 MOV V1.16B, V12.16B
	0x01CAE718 MOV V2.16B, V13.16B
	0x01CAE71C MOV V3.16B, V8.16B
	0x01CAE720 MOV V4.16B, V9.16B
	0x01CAE724 MOV V5.16B, V10.16B
	0x01CAE728 MOV W1, W20
	0x01CAE72C MOV X3, X31
	0x01CAE730 BL 0x3AF2F94
	0x01CAE734 TBZ X0, 0x0, 0x1CAE91C
	0x01CAE738 ADD X0, X31, 0x20
	0x01CAE73C MOV X1, X31
	0x01CAE740 BL 0x3AF61C4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move [X8+4], W1
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 
	010 Move X0, 0x22A0000
	011 Move X0, [X0+1168]
	012 Call 0x1B6F804
	013 Call 0x1B6FA0C
	014 Move X19, X0
	015 Move X0, 0x22A1000
	016 Move X0, [X0+2368]
	017 Call 0x1B6F804
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x22A1000
	023 Move X0, [X0+2384]
	024 Call 0x1B6F804
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1B6F8E8

Method: System.Void Awake()

Disassembly:
	0x01CAE744 CBZ X0, 0x1CAE93C
	0x01CAE748 ADRP X8, 0x229F000
	0x01CAE74C LDR X8, [X8 + 0x4B0]
	0x01CAE750 LDR X1, [X8]
	0x01CAE754 BL 0x20904A4
	0x01CAE758 CBZ X0, 0x1CAE878
	0x01CAE75C ADRP X8, 0x22A0000
	0x01CAE760 LDR X8, [X8 + 0x2A8]
	0x01CAE764 LDR X9, [X0]
	0x01CAE768 MOV X20, X0
	0x01CAE76C LDR X8, [X8]
	0x01CAE770 LDRB W11, [X9 + 0x130]
	0x01CAE774 LDRB W10, [X8 + 0x130]
	0x01CAE778 CMP W11, W10
	0x01CAE77C B.CC 0x1CAE7A8
	0x01CAE780 LDR X9, [X9 + 0xC8]
	0x01CAE784 ADD X9, X9, X10, 0x3, LSL
	0x01CAE788 LDUR X9, [X9 - 0x8]
	0x01CAE78C CMP X9, X8
	0x01CAE790 B.NE 0x1CAE7A8
	0x01CAE794 LDR X0, [X20 + 0x40]
	0x01CAE798 CBZ X0, 0x1CAE93C
	0x01CAE79C MOV X1, X31
	0x01CAE7A0 BL 0x1D9E6A0
	0x01CAE7A4 TBNZ X0, 0x0, 0x1CAE878
	0x01CAE7A8 CBZ X19, 0x1CAE93C
	0x01CAE7AC ADRP X8, 0x22A0000
	0x01CAE7B0 LDR X8, [X8 + 0x9C8]
	0x01CAE7B4 ADD X2, X31, 0x18
	0x01CAE7B8 MOV X0, X19
	0x01CAE7BC MOV X1, X20
	0x01CAE7C0 LDR X3, [X8]
	0x01CAE7C4 BL 0x28FBD3C
	0x01CAE7C8 TBNZ X0, 0x0, 0x1CAE808
	0x01CAE7CC ADRP X8, 0x22A0000
	0x01CAE7D0 LDR X8, [X8 + 0x9D0]
	0x01CAE7D4 LDR X0, [X8]
	0x01CAE7D8 BL 0x1B6EA0C
	0x01CAE7DC MOV X1, X31
	0x01CAE7E0 MOV X21, X0
	0x01CAE7E4 BL 0x32276F8
	0x01CAE7E8 ADRP X8, 0x22A0000
	0x01CAE7EC LDR X8, [X8 + 0x9C0]
	0x01CAE7F0 MOV X0, X19
	0x01CAE7F4 MOV X1, X20
	0x01CAE7F8 MOV X2, X21
	0x01CAE7FC LDR X3, [X8]
	0x01CAE800 STR X21, [X31 + 0x18]
	0x01CAE804 BL 0x28FA2A8
	0x01CAE808 LDR X19, [X31 + 0x18]
	0x01CAE80C CBZ X19, 0x1CAE93C
	0x01CAE810 LDP S0, S1, [X19 + 0x20]
	0x01CAE814 LDR W8, [X19 + 0x10]
	0x01CAE818 LDR V2, [X19 + 0x28]
	0x01CAE81C LDUR V3, [X19 + 0x14]
	0x01CAE820 LDR V4, [X19 + 0x1C]
	0x01CAE824 FADD S0, S8, S0
	0x01CAE828 FADD S1, S9, S1
	0x01CAE82C STP S0, S1, [X19 + 0x20]
	0x01CAE830 MOVI V11.2S, 0x3F, 0x18
	0x01CAE834 FADD S0, S10, S2
	0x01CAE838 FMOV S12, 0.5
	0x01CAE83C ADD W8, W8, 0xA
	0x01CAE840 ADD X0, X31, 0x20
	0x01CAE844 MOV X1, X31
	0x01CAE848 STR S0, [X19 + 0x28]
	0x00000000 INVALID
	0x01CAE850 STR W8, [X19 + 0x10]
	0x01CAE854 FMUL S14, S4, S12
	0x01CAE858 BL 0x3AF6270
	0x01CAE85C FMUL S2, S2, S12
	0x01CAE860 MOV V0.S[1], V1.S[0]
	0x00000000 INVALID
	0x01CAE868 FADD S1, S14, S2
	0x01CAE86C FADD V0.2S, V13.2S, V0.2S
	0x01CAE870 STUR D0, [X19 + 0x14]
	0x01CAE874 STR S1, [X19 + 0x1C]
	0x01CAE878 ADD X0, X31, 0x20
	0x01CAE87C MOV X1, X31
	0x01CAE880 BL 0x3AF61C4
	0x01CAE884 CBZ X0, 0x1CAE93C
	0x01CAE888 MOV X1, X31
	0x01CAE88C BL 0x3AF6430
	0x01CAE890 ADRP X8, 0x229F000
	0x01CAE894 LDR X8, [X8 + 0x478]
	0x01CAE898 MOV X19, X0
	0x01CAE89C LDR X8, [X8]
	0x01CAE8A0 LDR W9, [X8 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2576000
	008 Move X21, 0x22A1000
	009 Move W8, [X20+1184]
	010 Move X21, [X21+664]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x22A1000
	017 Move X0, [X0+368]
	018 Call 0x1B6F7F0
	019 Move X0, 0x22A1000
	020 Move X0, [X0+664]
	021 Call 0x1B6F7F0
	022 Move X0, 0x22A1000
	023 Move X0, [X0+2392]
	024 Call 0x1B6F7F0
	025 Move X0, 0x22A1000
	026 Move X0, [X0+2400]
	027 Call 0x1B6F7F0
	028 Move W8, 1
	029 Move [X20+1184], W8
	030 Move X1, [X21]
	031 Move X0, X19
	032 Call 0x2090DE8, X0
	033 Move X23, [X19+128]
	034 Move [X19+192], X0
	035 Compare X23, 0
	036 JumpIfEqual {96}
	037 Move X22, 0x22A1000
	038 Move X22, [X22+368]
	039 Move X21, 0x22A1000
	040 Move X20, [X23+408]
	041 Move X0, [X22]
	042 Move X21, [X21+2400]
	043 Call 0x1B6FA0C
	044 Move X2, [X21]
	045 Move X1, X19
	046 Move X3, X31
	047 Move X21, X0
	048 Call Action..ctor, X0, X1, X2
	049 Move X0, X20
	050 Move X1, X21
	051 Move X2, X31
	052 Call Delegate.Combine, X0, X1
	053 Move X1, [X22]
	054 Compare X0, 0
	055 JumpIfEqual {61}
	056 Move X8, [X0]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move [X23+408], X0
	059 Move X8, [X0]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move [X23+408], X0
	062 Move X23, [X19+128]
	063 Compare X23, 0
	064 JumpIfEqual {96}
	065 Move X21, 0x22A1000
	066 Move X20, [X23+416]
	067 Move X21, [X21+2392]
	068 Move X0, X1
	069 Call 0x1B6FA0C
	070 Move X2, [X21]
	071 Move X1, X19
	072 Move X3, X31
	073 Move X21, X0
	074 Call Action..ctor, X0, X1, X2
	075 Move X0, X20
	076 Move X1, X21
	077 Move X2, X31
	078 Call Delegate.Combine, X0, X1
	079 Compare X0, 0
	080 JumpIfEqual {88}
	081 Move X1, [X22]
	082 Move X8, [X0]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move [X23+416], X0
	085 Move X8, [X0]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Call 0x1B6FCDC
	088 Move [X23+416], X0
	089 Move X20, [X31+32]
	090 Move X19, [X31+40]
	091 Move X22, [X31+16]
	092 Move X21, [X31+24]
	093 Move X30, [X31+48]
	094 Move X23, [X31+56]
	095 Return 
	096 Call 0x1B6FA1C

Method: System.Void OnDestroy()

Disassembly:
	0x01CAE8A4 CBNZ W9, 0x1CAE8B0
	0x01CAE8A8 MOV X0, X8
	0x01CAE8AC BL 0x1B6E8F8
	0x01CAE8B0 MOV X0, X19
	0x01CAE8B4 MOV X1, X31
	0x01CAE8B8 MOV X2, X31
	0x01CAE8BC BL 0x3A9D6EC
	0x01CAE8C0 TBZ X0, 0x0, 0x1CAE91C
	0x01CAE8C4 ADD X0, X31, 0x20
	0x01CAE8C8 MOV X1, X31
	0x01CAE8CC BL 0x3AF61C4
	0x01CAE8D0 CBZ X0, 0x1CAE93C
	0x01CAE8D4 MOV X1, X31
	0x01CAE8D8 BL 0x3AF6430
	0x01CAE8DC MOV X19, X0
	0x01CAE8E0 ADD X0, X31, 0x20
	0x01CAE8E4 MOV X1, X31
	0x01CAE8E8 BL 0x3AF6270
	0x01CAE8EC CBZ X19, 0x1CAE93C
	0x01CAE8F0 MOVZ W8, 0x42480000
	0x01CAE8F4 MOV V3.16B, V0.16B
	0x01CAE8F8 FMOV S0, W8
	0x01CAE8FC MOV V4.16B, V1.16B
	0x01CAE900 MOV V5.16B, V2.16B
	0x01CAE904 FMUL S2, S10, S0
	0x01CAE908 FMUL S1, S9, S0
	0x01CAE90C FMUL S0, S8, S0
	0x01CAE910 MOV X0, X19
	0x01CAE914 MOV X1, X31
	0x01CAE918 BL 0x3AF71EC
	0x01CAE91C LDP X20, X19, [X31 + 0xA0]
	0x01CAE920 LDP X30, X21, [X31 + 0x90]
	0x01CAE924 LDP D9, D8, [X31 + 0x80]
	0x01CAE928 LDP D11, D10, [X31 + 0x70]
	0x01CAE92C LDP D13, D12, [X31 + 0x60]
	0x01CAE930 LDP D15, D14, [X31 + 0x50]
	0x01CAE934 ADD X31, X31, 0xB0
	0x01CAE938 RET
	0x01CAE93C BL 0x1B6EA1C
	0x01CAE940 STR X30, [X31 - 0x10]!
	0x01CAE944 LDR X0, [X0 + 0x40]
	0x01CAE948 CBZ X0, 0x1CAE958
	0x01CAE94C MOV X1, X31
	0x01CAE950 LDR X30, [X31], #0x10
	0x01CAE954 B 0x1D9E6A0
	0x01CAE958 BL 0x1B6EA1C
	0x01CAE95C MOV X1, X31
	0x01CAE960 B 0x32276F8
	0x01CAE964 STR X30, [X31 - 0x20]!
	0x01CAE968 STP X20, X19, [X31 + 0x10]
	0x01CAE96C ADRP X20, 0x2575000
	0x01CAE970 LDRB W8, [X20 + 0x4A7]
	0x01CAE974 MOV X19, X0
	0x01CAE978 TBNZ X8, 0x0, 0x1CAE990
	0x01CAE97C ADRP X0, 0x229F000
	0x01CAE980 LDR X0, [X0 + 0x478]
	0x01CAE984 BL 0x1B6E7F0
	0x01CAE988 MOVZ W8, 0x1
	0x01CAE98C STRB W8, [X20 + 0x4A7]
	0x01CAE990 MOV X0, X19
	0x01CAE994 BL 0x1CAD5C4
	0x01CAE998 CMP W0, 0x1
	0x01CAE99C B.LT 0x1CAE9B0
	0x01CAE9A0 MOV X0, X19
	0x01CAE9A4 LDP X20, X19, [X31 + 0x10]
	0x01CAE9A8 LDR X30, [X31], #0x20
	0x01CAE9AC B 0x1CADA58
	0x01CAE9B0 ADRP X8, 0x229F000
	0x01CAE9B4 LDR X8, [X8 + 0x478]
	0x01CAE9B8 LDR X20, [X19 + 0x98]
	0x01CAE9BC LDR X0, [X8]
	0x01CAE9C0 LDR W8, [X0 + 0xE0]
	0x01CAE9C4 CBNZ W8, 0x1CAE9CC
	0x01CAE9C8 BL 0x1B6E8F8
	0x01CAE9CC MOV X0, X20
	0x01CAE9D0 MOV X1, X31
	0x01CAE9D4 MOV X2, X31
	0x01CAE9D8 BL 0x3A9D6EC
	0x01CAE9DC TBZ X0, 0x0, 0x1CAEA14
	0x01CAE9E0 LDR X20, [X19 + 0x98]
	0x01CAE9E4 MOV X0, X19
	0x01CAE9E8 MOV X1, X31
	0x01CAE9EC BL 0x3A9B084
	0x01CAE9F0 CBZ X0, 0x1CAEA20
	0x01CAE9F4 MOV X1, X31
	0x01CAE9F8 BL 0x3AA7658
	0x01CAE9FC MOV X0, X20
	0x01CAEA00 LDP X20, X19, [X31 + 0x10]
	0x01CAEA04 FMOV S3, 1
	0x01CAEA08 MOV X1, X31
	0x01CAEA0C LDR X30, [X31], #0x20
	0x01CAEA10 B 0x1CC181C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2576000
	008 Move X21, 0x22A1000
	009 Move W8, [X20+1185]
	010 Move X21, [X21+448]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x22A1000
	017 Move X0, [X0+368]
	018 Call 0x1B6F7F0
	019 Move X0, 0x22A1000
	020 Move X0, [X0+448]
	021 Call 0x1B6F7F0
	022 Move X0, 0x22A1000
	023 Move X0, [X0+2392]
	024 Call 0x1B6F7F0
	025 Move X0, 0x22A1000
	026 Move X0, [X0+2400]
	027 Call 0x1B6F7F0
	028 Move W8, 1
	029 Move [X20+1185], W8
	030 Move X0, [X21]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1B6F8F8
	035 Compare X19, 0
	036 JumpIfEqual {102}
	037 Move W8, [X19+48]
	038 Move X23, [X19+128]
	039 Or W8, W8, 8
	040 Move [X19+48], W8
	041 Compare X23, 0
	042 JumpIfEqual {102}
	043 Move X22, 0x22A1000
	044 Move X22, [X22+368]
	045 Move X21, 0x22A1000
	046 Move X20, [X23+408]
	047 Move X0, [X22]
	048 Move X21, [X21+2400]
	049 Call 0x1B6FA0C
	050 Move X2, [X21]
	051 Move X1, X19
	052 Move X3, X31
	053 Move X21, X0
	054 Call Action..ctor, X0, X1, X2
	055 Move X0, X20
	056 Move X1, X21
	057 Move X2, X31
	058 Call Delegate.Remove, X0, X1
	059 Move X1, [X22]
	060 Compare X0, 0
	061 JumpIfEqual {67}
	062 Move X8, [X0]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move [X23+408], X0
	065 Move X8, [X0]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move [X23+408], X0
	068 Move X23, [X19+128]
	069 Compare X23, 0
	070 JumpIfEqual {102}
	071 Move X21, 0x22A1000
	072 Move X20, [X23+416]
	073 Move X21, [X21+2392]
	074 Move X0, X1
	075 Call 0x1B6FA0C
	076 Move X2, [X21]
	077 Move X1, X19
	078 Move X3, X31
	079 Move X21, X0
	080 Call Action..ctor, X0, X1, X2
	081 Move X0, X20
	082 Move X1, X21
	083 Move X2, X31
	084 Call Delegate.Remove, X0, X1
	085 Compare X0, 0
	086 JumpIfEqual {94}
	087 Move X1, [X22]
	088 Move X8, [X0]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move [X23+416], X0
	091 Move X8, [X0]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Call 0x1B6FCDC
	094 Move [X23+416], X0
	095 Move X20, [X31+32]
	096 Move X19, [X31+40]
	097 Move X22, [X31+16]
	098 Move X21, [X31+24]
	099 Move X30, [X31+48]
	100 Move X23, [X31+56]
	101 Return 
	102 Call 0x1B6FA1C

Method: System.Void Spawned()

Disassembly:
	0x01CAEA14 LDP X20, X19, [X31 + 0x10]
	0x01CAEA18 LDR X30, [X31], #0x20
	0x01CAEA1C RET
	0x01CAEA20 BL 0x1B6EA1C
	0x01CAEA24 MOVZ W1, 0x2
	0x01CAEA28 B 0x1CAD624
	0x01CAEA2C MOVZ W8, 0x2
	0x01CAEA30 MOV X1, X31
	0x01CAEA34 STR W8, [X0 + 0xB8]
	0x01CAEA38 B 0x1D661D8
	0x01CAEA3C STP X30, X19, [X31 - 0x10]!
	0x01CAEA40 LDR W1, [X0 + 0xB8]
	0x01CAEA44 MOV X19, X0
	0x01CAEA48 BL 0x1CAD624
	0x01CAEA4C LDR W1, [X19 + 0xBC]
	0x01CAEA50 MOV X0, X19
	0x01CAEA54 LDP X30, X19, [X31], #0x10

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call NetworkBehaviour.Spawned, X0
	006 Move X0, [X19+64]
	007 Compare X0, 0
	008 JumpIfEqual {26}
	009 Move W8, [X0+96]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 2
	012 Compare TEMP, 2
	013 JumpIfEqual {26}
	014 Move X1, X31
	015 Call NetworkObject.get_HasStateAuthority, X0
	016 Move TEMP, X0
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfNotEqual {26}
	020 Move W1, 2
	021 Move X0, X19
	022 Move X30, [X31+16]
	023 Move X19, [X31+24]
	024 Call Shotgun.set__ammoLeft, X0, X1
	025 Return 
	026 Move X30, [X31+16]
	027 Move X19, [X31+24]
	028 Return 

Method: System.Void RPC_Shoot()

Disassembly:
	0x01CAEA58 B 0x1CAD6E4
	0x01CAEA5C STP X30, X19, [X31 - 0x10]!
	0x01CAEA60 MOV X19, X0
	0x01CAEA64 BL 0x1CAD5C4
	0x01CAEA68 STR W0, [X19 + 0xB8]
	0x01CAEA6C MOV X0, X19
	0x01CAEA70 BL 0x1CAD684
	0x01CAEA74 STR W0, [X19 + 0xBC]
	0x01CAEA78 LDP X30, X19, [X31], #0x10
	0x01CAEA7C RET
	0x01CAEA80 STR X30, [X31 - 0x20]!
	0x01CAEA84 STP X20, X19, [X31 + 0x10]
	0x01CAEA88 ADRP X20, 0x2575000
	0x01CAEA8C LDRB W8, [X20 + 0x4A8]
	0x01CAEA90 MOV X19, X0
	0x01CAEA94 TBNZ X8, 0x0, 0x1CAEAAC
	0x01CAEA98 ADRP X0, 0x22A0000
	0x01CAEA9C LDR X0, [X0 + 0x9D8]
	0x01CAEAA0 BL 0x1B6E7F0
	0x01CAEAA4 MOVZ W8, 0x1
	0x01CAEAA8 STRB W8, [X20 + 0x4A8]
	0x01CAEAAC MOVZ W0, 0x1
	0x01CAEAB0 MOV X1, X31
	0x01CAEAB4 MOVZ W20, 0x1
	0x01CAEAB8 BL 0x1D29EBC
	0x01CAEABC CBZ X19, 0x1CAEB10
	0x01CAEAC0 ADRP X9, 0x22A0000
	0x01CAEAC4 LDR X9, [X9 + 0x9D8]
	0x01CAEAC8 STRB W20, [X19 + 0x58]
	0x01CAEACC LDR X8, [X19]
	0x01CAEAD0 LDR X1, [X9]
	0x01CAEAD4 LDRB W10, [X8 + 0x130]
	0x01CAEAD8 LDRB W9, [X1 + 0x130]
	0x01CAEADC CMP W10, W9
	0x01CAEAE0 B.CC 0x1CAEB08
	0x01CAEAE4 LDR X8, [X8 + 0xC8]
	0x01CAEAE8 ADD X8, X8, X9, 0x3, LSL
	0x01CAEAEC LDUR X8, [X8 - 0x8]
	0x01CAEAF0 CMP X8, X1
	0x01CAEAF4 B.NE 0x1CAEB08
	0x01CAEAF8 MOV X0, X19
	0x01CAEAFC LDP X20, X19, [X31 + 0x10]
	0x01CAEB00 LDR X30, [X31], #0x20
	0x01CAEB04 B 0x1CADA58
	0x01CAEB08 MOV X0, X19
	0x01CAEB0C BL 0x1B6ECDC
	0x01CAEB10 BL 0x1B6EA1C
	0x01CAEB14 STR X30, [X31 - 0x20]!
	0x01CAEB18 STP X20, X19, [X31 + 0x10]
	0x01CAEB1C ADRP X20, 0x2575000
	0x01CAEB20 LDRB W8, [X20 + 0x4A9]
	0x01CAEB24 MOV X19, X0
	0x01CAEB28 TBNZ X8, 0x0, 0x1CAEB40
	0x01CAEB2C ADRP X0, 0x22A0000
	0x01CAEB30 LDR X0, [X0 + 0x9D8]
	0x01CAEB34 BL 0x1B6E7F0
	0x01CAEB38 MOVZ W8, 0x1
	0x01CAEB3C STRB W8, [X20 + 0x4A9]
	0x01CAEB40 MOVZ W0, 0x1
	0x01CAEB44 MOV X1, X31
	0x01CAEB48 MOVZ W20, 0x1
	0x01CAEB4C BL 0x1D29EBC
	0x01CAEB50 CBZ X19, 0x1CAEBA4
	0x01CAEB54 ADRP X9, 0x22A0000
	0x01CAEB58 LDR X9, [X9 + 0x9D8]
	0x01CAEB5C STRB W20, [X19 + 0x58]
	0x01CAEB60 LDR X8, [X19]
	0x01CAEB64 LDR X1, [X9]
	0x01CAEB68 LDRB W10, [X8 + 0x130]
	0x01CAEB6C LDRB W9, [X1 + 0x130]
	0x01CAEB70 CMP W10, W9
	0x01CAEB74 B.CC 0x1CAEB9C
	0x01CAEB78 LDR X8, [X8 + 0xC8]
	0x01CAEB7C ADD X8, X8, X9, 0x3, LSL
	0x01CAEB80 LDUR X8, [X8 - 0x8]
	0x01CAEB84 CMP X8, X1
	0x01CAEB88 B.NE 0x1CAEB9C
	0x01CAEB8C MOV X0, X19
	0x01CAEB90 LDP X20, X19, [X31 + 0x10]
	0x01CAEB94 LDR X30, [X31], #0x20
	0x01CAEB98 B 0x1CAE110
	0x01CAEB9C MOV X0, X19
	0x01CAEBA0 BL 0x1B6ECDC
	0x01CAEBA4 BL 0x1B6EA1C
	0x01CAEBA8 STR X30, [X31 - 0x20]!
	0x01CAEBAC STP X20, X19, [X31 + 0x10]
	0x01CAEBB0 ADRP X20, 0x2575000
	0x01CAEBB4 LDRB W8, [X20 + 0x4AA]
	0x01CAEBB8 MOV X19, X0
	0x01CAEBBC TBNZ X8, 0x0, 0x1CAEBD4
	0x01CAEBC0 ADRP X0, 0x22A0000
	0x01CAEBC4 LDR X0, [X0 + 0x9D8]
	0x01CAEBC8 BL 0x1B6E7F0
	0x01CAEBCC MOVZ W8, 0x1
	0x01CAEBD0 STRB W8, [X20 + 0x4AA]
	0x01CAEBD4 MOVZ W0, 0x1
	0x01CAEBD8 MOV X1, X31
	0x01CAEBDC MOVZ W20, 0x1
	0x01CAEBE0 BL 0x1D29EBC
	0x01CAEBE4 CBZ X19, 0x1CAEC38

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2576000
	005 Move W8, [X20+1186]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x22A1000
	012 Move X0, [X0+448]
	013 Call 0x1B6F7F0
	014 Move X0, 0x22A1000
	015 Move X0, [X0+2408]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X20+1186], W8
	019 Move W8, [X19+88]
	020 Compare W8, 0
	021 JumpIfEqual {27}
	022 Move [X19+88], W31
	023 Move X0, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Move X20, 0x22A1000
	028 Move X20, [X20+448]
	029 Move X0, [X20]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1B6F8F8
	034 Move X0, X19
	035 Move X1, X31
	036 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	037 Move X0, [X19+56]
	038 Compare X0, 0
	039 JumpIfEqual {124}
	040 Move X1, X31
	041 Call NetworkRunner.get_Stage, X0
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Return 
	047 Move X0, [X19+64]
	048 Compare X0, 0
	049 JumpIfEqual {124}
	050 Move X1, X31
	051 Call NetworkObject.GetLocalAuthorityMask, X0
	052 And W31, W0, 7
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {23}
	057 Move X8, [X19+56]
	058 Compare X8, 0
	059 JumpIfEqual {124}
	060 Move X0, [X8+80]
	061 Compare X0, 0
	062 JumpIfEqual {124}
	063 Move X1, X31
	064 Call Simulation.HasAnyActiveConnections, X0
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {43}
	069 Move X8, [X19+56]
	070 Compare X8, 0
	071 JumpIfEqual {124}
	072 Move X0, [X8+80]
	073 Move W1, 8
	074 Move X2, X31
	075 Call SimulationMessage.Allocate, X0, X1
	076 Move X20, X0
	077 Move W0, 1
	078 Move X1, X31
	079 Call Assert.Check, X0
	080 Move X8, [X19+64]
	081 Compare X8, 0
	082 JumpIfEqual {124}
	083 Move X8, [X8+32]
	084 Compare X8, 0
	085 JumpIfEqual {104}
	086 Move W0, [X8]
	087 Move X0, [X20]
	088 Move X19, [X19+64]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1B6F8F8
	093 Move X8, 0x22A1000
	094 Move X8, [X8+2408]
	095 Move X1, X19
	096 Move X20, [X31+16]
	097 Move X19, [X31+24]
	098 Move W2, 7
	099 Move X0, [X8]
	100 Move X3, X31
	101 Move X30, [X31+32]
	102 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	103 Return 
	104 Move X0, X31
	105 Move W1, [X19+104]
	106 Move W2, 1
	107 Move X3, X31
	108 Call RpcHeader.Create, X0, X1, X2
	109 Move [X20+28], X0
	110 Compare X20, 0
	111 JumpIfEqual {124}
	112 Move W8, 64
	113 Move [X20+12], W8
	114 Move X0, [X19+56]
	115 Compare X0, 0
	116 JumpIfEqual {124}
	117 Move X1, X20
	118 Move X20, [X31+16]
	119 Move X19, [X31+24]
	120 Move X2, X31
	121 Move X30, [X31+32]
	122 Call NetworkRunner.SendRpc, X0, X1
	123 Return 
	124 Call 0x1B6FA1C

Method: System.Void RPC_MuzzleFlash()

Disassembly:
	0x01CAF110 STRB W8, [X20 + 0x4AE]
	0x01CAF114 MOV X0, X19
	0x01CAF118 MOV X1, X31
	0x01CAF11C STR X31, [X31 + 0x48]
	0x01CAF120 STP X31, X31, [X31 + 0x20]
	0x01CAF124 STR X31, [X31 + 0x30]
	0x01CAF128 STR X31, [X31 + 0x18]
	0x01CAF12C BL 0x3A9B084
	0x01CAF130 CBZ X0, 0x1CAF3FC
	0x01CAF134 ADRP X22, 0x229E000
	0x01CAF138 ADRP X20, 0x229F000
	0x01CAF13C ADRP X21, 0x229F000
	0x01CAF140 LDR X22, [X22 + 0x4C0]
	0x01CAF144 LDR X20, [X20 + 0x6F0]
	0x01CAF148 LDR X21, [X21 + 0x6F8]
	0x01CAF14C MOV X1, X31
	0x01CAF150 BL 0x3AA7658
	0x01CAF154 LDR X0, [X22]
	0x01CAF158 LDR V10, [X19 + 0x80]
	0x01CAF15C MOV V8.16B, V0.16B
	0x01CAF160 MOV V9.16B, V1.16B
	0x01CAF164 LDR W8, [X0 + 0xE0]
	0x01CAF168 MOV V11.16B, V2.16B
	0x01CAF16C CBNZ W8, 0x1CAF174
	0x01CAF170 BL 0x1B6E8F8
	0x01CAF174 MOV V0.16B, V8.16B
	0x01CAF178 MOV V1.16B, V9.16B
	0x01CAF17C MOV V2.16B, V11.16B
	0x01CAF180 MOV V3.16B, V10.16B
	0x01CAF184 MOV X0, X31
	0x01CAF188 BL 0x3AF5374
	0x01CAF18C LDR X8, [X20]
	0x01CAF190 MOV X20, X0
	0x01CAF194 MOV X0, X8
	0x01CAF198 BL 0x1B6EA0C
	0x01CAF19C LDR X1, [X21]
	0x01CAF1A0 MOV X19, X0
	0x01CAF1A4 BL 0x2E45D4C
	0x01CAF1A8 CBZ X20, 0x1CAF3FC
	0x01CAF1AC LDR W8, [X20 + 0x18]
	0x01CAF1B0 CMP W8, 0x1
	0x01CAF1B4 B.LT 0x1CAF2C0
	0x01CAF1B8 ADRP X23, 0x229E000
	0x01CAF1BC ADRP X24, 0x229F000
	0x01CAF1C0 ADRP X25, 0x229F000
	0x01CAF1C4 LDR X23, [X23 + 0x478]
	0x01CAF1C8 LDR X24, [X24 + 0x268]
	0x01CAF1CC LDR X25, [X25 + 0x700]
	0x01CAF1D0 MOV W22, W31
	0x01CAF1D4 CMP W22, W8
	0x01CAF1D8 B.CS 0x1CAF400
	0x01CAF1DC ADD X8, X20, W22, 0x3, SXTW
	0x01CAF1E0 LDR X0, [X8 + 0x20]
	0x01CAF1E4 CBZ X0, 0x1CAF3FC
	0x01CAF1E8 MOV X1, X31
	0x01CAF1EC BL 0x3AF6430
	0x01CAF1F0 LDR X8, [X23]
	0x01CAF1F4 MOV X21, X0
	0x01CAF1F8 LDR W9, [X8 + 0xE0]
	0x01CAF1FC CBNZ W9, 0x1CAF208
	0x01CAF200 MOV X0, X8
	0x01CAF204 BL 0x1B6E8F8
	0x01CAF208 MOV X0, X21
	0x01CAF20C MOV X1, X31
	0x01CAF210 MOV X2, X31
	0x01CAF214 BL 0x3AA0AF0
	0x01CAF218 TBNZ X0, 0x0, 0x1CAF2B0
	0x01CAF21C CBZ X21, 0x1CAF3FC
	0x01CAF220 LDR X1, [X24]
	0x01CAF224 MOV X0, X21
	0x01CAF228 BL 0x208FDE8
	0x01CAF22C LDR X8, [X23]
	0x01CAF230 MOV X21, X0
	0x01CAF234 LDR W9, [X8 + 0xE0]
	0x01CAF238 CBNZ W9, 0x1CAF244
	0x01CAF23C MOV X0, X8
	0x01CAF240 BL 0x1B6E8F8
	0x01CAF244 MOV X0, X21
	0x01CAF248 MOV X1, X31
	0x01CAF24C MOV X2, X31
	0x01CAF250 BL 0x3A9D6EC
	0x01CAF254 TBZ X0, 0x0, 0x1CAF2B0
	0x01CAF258 CBZ X19, 0x1CAF3FC
	0x01CAF25C LDR W10, [X19 + 0x1C]
	0x01CAF260 LDR X8, [X19 + 0x10]
	0x01CAF264 LDR X9, [X25]
	0x01CAF268 ADD W10, W10, 0x1
	0x01CAF26C STR W10, [X19 + 0x1C]
	0x01CAF270 CBZ X8, 0x1CAF3FC
	0x01CAF274 LDRSW X10, [X19 + 0x18]
	0x01CAF278 LDR W11, [X8 + 0x18]
	0x01CAF27C CMP W10, W11
	0x01CAF280 B.CS 0x1CAF298
	0x01CAF284 ADD W9, W10, 0x1
	0x01CAF288 ADD X8, X8, X10, 0x3, LSL
	0x01CAF28C STR W9, [X19 + 0x18]
	0x01CAF290 STR X21, [X8 + 0x20]
	0x01CAF294 B 0x1CAF2B0
	0x01CAF298 LDR X8, [X9 + 0x20]
	0x01CAF29C MOV X0, X19
	0x01CAF2A0 MOV X1, X21
	0x01CAF2A4 LDR X8, [X8 + 0xC0]
	0x01CAF2A8 LDR X2, [X8 + 0x70]
	0x01CAF2AC BL 0x2E46518

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2575000
	006 Move W8, [X20+1187]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x22A0000
	013 Move X0, [X0+448]
	014 Call 0x1B6F7F0
	015 Move X0, 0x22A0000
	016 Move X0, [X0+2480]
	017 Call 0x1B6F7F0
	018 Move W8, 1
	019 Move [X20+1187], W8
	020 Move W8, [X19+88]
	021 Compare W8, 0
	022 JumpIfEqual {32}
	023 Move [X19+88], W31
	024 Move X0, [X19+176]
	025 Compare X0, 0
	026 JumpIfEqual {128}
	027 Move W1, 1
	028 Move X2, X31
	029 Call GameObject.SetActive, X0, X1
	030 Move W8, 5
	031 Move [X19+200], W8
	032 Move X21, 0x22A0000
	033 Move X21, [X21+448]
	034 Move X0, [X21]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1B6F8F8
	039 Move X0, X19
	040 Move X1, X31
	041 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	042 Move X0, [X19+56]
	043 Compare X0, 0
	044 JumpIfEqual {128}
	045 Move X1, X31
	046 Call NetworkRunner.get_Stage, X0
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Return 
	053 Move X0, [X19+64]
	054 Compare X0, 0
	055 JumpIfEqual {128}
	056 Move X1, X31
	057 Call NetworkObject.GetLocalAuthorityMask, X0
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {80}
	062 Move X0, [X21]
	063 Move X19, [X19+64]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1B6F8F8
	068 Move X8, 0x22A0000
	069 Move X8, [X8+2480]
	070 Move X1, X19
	071 Move X20, [X31+16]
	072 Move X19, [X31+24]
	073 Move W2, 1
	074 Move X0, [X8]
	075 Move X3, X31
	076 Move X30, [X31+32]
	077 Move X21, [X31+40]
	078 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	079 Return 
	080 Move X8, [X19+56]
	081 Compare X8, 0
	082 JumpIfEqual {128}
	083 Move W20, W0
	084 Move X0, [X8+80]
	085 Compare X0, 0
	086 JumpIfEqual {128}
	087 Move X1, X31
	088 Call Simulation.HasAnyActiveConnections, X0
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {127}
	093 Move X8, [X19+56]
	094 Compare X8, 0
	095 JumpIfEqual {128}
	096 Move X0, [X8+80]
	097 Move W1, 8
	098 Move X2, X31
	099 Call SimulationMessage.Allocate, X0, X1
	100 Move X21, X0
	101 Move W0, 1
	102 Move X1, X31
	103 Call Assert.Check, X0
	104 Move X8, [X19+64]
	105 Compare X8, 0
	106 JumpIfEqual {128}
	107 Move X8, [X8+32]
	108 Compare X8, 0
	109 JumpIfEqual {111}
	110 Move W0, [X8]
	111 Move X0, X31
	112 Move W1, [X19+104]
	113 Move W2, 2
	114 Move X3, X31
	115 Call RpcHeader.Create, X0, X1, X2
	116 Move [X21+28], X0
	117 Compare X21, 0
	118 JumpIfEqual {128}
	119 Move W8, 64
	120 Move [X21+12], W8
	121 Move X0, [X19+56]
	122 Compare X0, 0
	123 JumpIfEqual {128}
	124 Move X1, X21
	125 Move X2, X31
	126 Call NetworkRunner.SendRpc, X0, X1
	127 And W31, W20, 7
	128 Call 0x1B6FA1C

Method: System.Void RPC_Reload()

Disassembly:
	0x01CAF2B0 LDR W8, [X20 + 0x18]
	0x01CAF2B4 ADD W22, W22, 0x1
	0x01CAF2B8 CMP W22, W8
	0x01CAF2BC B.LT 0x1CAF1D4
	0x01CAF2C0 ADRP X8, 0x229F000
	0x01CAF2C4 LDR X8, [X8 + 0xA38]
	0x01CAF2C8 LDR X0, [X8]
	0x01CAF2CC LDR W8, [X0 + 0xE0]
	0x01CAF2D0 CBNZ W8, 0x1CAF2D8
	0x01CAF2D4 BL 0x1B6E8F8
	0x01CAF2D8 ADD X1, X31, 0x48
	0x01CAF2DC MOVZ W0, 0x1
	0x01CAF2E0 BL 0x1CAFFBC
	0x01CAF2E4 TBZ X0, 0x0, 0x1CAF3D8
	0x01CAF2E8 CBZ X19, 0x1CAF3FC
	0x01CAF2EC ADRP X8, 0x229F000
	0x01CAF2F0 LDR X8, [X8 + 0xA30]
	0x01CAF2F4 MOV X0, X19
	0x01CAF2F8 LDR X1, [X8]
	0x01CAF2FC ADD X8, X31, 0x0
	0x01CAF300 BL 0x2E470E0
	0x01CAF304 LDR V0, [X31]
	0x01CAF308 LDR X8, [X31 + 0x10]
	0x01CAF30C ADRP X20, 0x229F000
	0x01CAF310 LDR X20, [X20 + 0xA20]
	0x01CAF314 STR V0, [X31 + 0x2]
	0x01CAF318 STR X8, [X31 + 0x30]
	0x01CAF31C FMOV S12, W31
	0x01CAF320 LDR X1, [X20]
	0x01CAF324 ADD X0, X31, 0x20
	0x01CAF328 BL 0x2A14F30
	0x01CAF32C TBZ X0, 0x0, 0x1CAF3C4
	0x01CAF330 LDR X19, [X31 + 0x30]
	0x01CAF334 CBZ X19, 0x1CAF404
	0x01CAF338 MOV X0, X19
	0x01CAF33C MOV X1, X31
	0x01CAF340 BL 0x1C99A60
	0x01CAF344 STR X0, [X31 + 0x18]
	0x01CAF348 ADD X0, X31, 0x18
	0x01CAF34C MOV X1, X31
	0x01CAF350 BL 0x1D680F0
	0x01CAF354 TBNZ X0, 0x0, 0x1CAF320
	0x01CAF358 LDR X0, [X31 + 0x48]
	0x01CAF35C CBZ X0, 0x1CAF408
	0x01CAF360 MOV X1, X31
	0x01CAF364 BL 0x3A9B084
	0x01CAF368 CBZ X0, 0x1CAF40C
	0x01CAF36C MOV X1, X31
	0x01CAF370 BL 0x3AA7658
	0x01CAF374 MOV V8.16B, V0.16B
	0x01CAF378 MOV V9.16B, V1.16B
	0x01CAF37C MOV V10.16B, V2.16B
	0x01CAF380 FMOV S0, -0.5
	0x01CAF384 FMOV S1, 0.5
	0x01CAF388 MOV X0, X31
	0x01CAF38C BL 0x3A98CD0
	0x01CAF390 MOV V11.16B, V0.16B
	0x01CAF394 FMOV S0, -0.5
	0x01CAF398 FMOV S1, 0.5
	0x01CAF39C MOV X0, X31
	0x01CAF3A0 BL 0x3A98CD0
	0x01CAF3A4 FADD S3, S8, S11
	0x01CAF3A8 FADD S1, S9, S12
	0x01CAF3AC FADD S2, S10, S0
	0x01CAF3B0 MOV X0, X19
	0x01CAF3B4 MOV V0.16B, V3.16B
	0x01CAF3B8 MOV X1, X31
	0x01CAF3BC BL 0x1CA49C8
	0x01CAF3C0 B 0x1CAF320
	0x01CAF3C4 ADRP X8, 0x229F000
	0x01CAF3C8 LDR X8, [X8 + 0xA18]
	0x01CAF3CC ADD X0, X31, 0x20
	0x01CAF3D0 LDR X1, [X8]
	0x01CAF3D4 BL 0x2A14F2C
	0x01CAF3D8 LDP X20, X19, [X31 + 0xA0]
	0x01CAF3DC LDP X22, X21, [X31 + 0x90]
	0x01CAF3E0 LDP X24, X23, [X31 + 0x80]
	0x01CAF3E4 LDP X30, X25, [X31 + 0x70]
	0x01CAF3E8 LDP D9, D8, [X31 + 0x60]
	0x01CAF3EC LDP D11, D10, [X31 + 0x50]
	0x01CAF3F0 LDR V12, [X31 + 0x40]
	0x01CAF3F4 ADD X31, X31, 0xB0
	0x01CAF3F8 RET
	0x01CAF3FC BL 0x1B6EA1C
	0x01CAF400 BL 0x1B6EA24
	0x01CAF404 BL 0x1B6EA1C
	0x01CAF408 BL 0x1B6EA1C
	0x01CAF40C BL 0x1B6EA1C
	0x01CAF410 B 0x1CAF438
	0x01CAF414 B 0x1CAF438
	0x01CAF418 B 0x1CAF438
	0x01CAF41C B 0x1CAF438
	0x01CAF420 B 0x1CAF438
	0x01CAF424 B 0x1CAF438
	0x01CAF428 B 0x1CAF438
	0x01CAF42C B 0x1CAF438
	0x01CAF430 B 0x1CAF438
	0x01CAF434 B 0x1CAF438
	0x01CAF438 MOV X19, X0
	0x01CAF43C CMP W1, 0x1
	0x01CAF440 B.NE 0x1CAF474
	0x01CAF444 MOV X0, X19
	0x01CAF448 BL 0x3D19840
	0x01CAF44C LDR X20, [X0]
	0x01CAF450 BL 0x3D19850
	0x01CAF454 ADRP X8, 0x229F000
	0x01CAF458 LDR X8, [X8 + 0xA18]
	0x01CAF45C ADD X0, X31, 0x20
	0x01CAF460 LDR X1, [X8]
	0x01CAF464 BL 0x2A14F2C
	0x01CAF468 CBZ X20, 0x1CAF3D8
	0x01CAF46C MOV X0, X20
	0x01CAF470 BL 0x1B6EA14
	0x01CAF474 MOV X20, X31
	0x01CAF478 B 0x1CAF480
	0x01CAF47C MOV X19, X0
	0x01CAF480 ADRP X8, 0x229F000
	0x01CAF484 LDR X8, [X8 + 0xA18]
	0x01CAF488 LDR X1, [X8]
	0x01CAF48C ADD X0, X31, 0x20
	0x01CAF490 BL 0x2A14F2C
	0x01CAF494 CBNZ X20, 0x1CAF4A0
	0x01CAF498 MOV X0, X19
	0x01CAF49C BL 0x1C8418C
	0x01CAF4A0 MOV X0, X20
	0x01CAF4A4 BL 0x1B6EA14
	0x01CAF4A8 BL 0x18F46A8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2575000
	005 Move W8, [X20+1188]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x22A0000
	012 Move X0, [X0+448]
	013 Call 0x1B6F7F0
	014 Move X0, 0x229F000
	015 Move X0, [X0+1144]
	016 Call 0x1B6F7F0
	017 Move X0, 0x22A0000
	018 Move X0, [X0+2488]
	019 Call 0x1B6F7F0
	020 Move W8, 1
	021 Move [X20+1188], W8
	022 Move W8, [X19+88]
	023 Compare W8, 0
	024 JumpIfEqual {61}
	025 Move [X19+88], W31
	026 Move X20, 0x229F000
	027 Move X20, [X20+1144]
	028 Move W1, 2
	029 Move X0, X19
	030 Call Shotgun.set__ammoLeft, X0, X1
	031 Move X0, [X20]
	032 Move X20, [X19+160]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1B6F8F8
	037 Move X0, X20
	038 Move X1, X31
	039 Move X2, X31
	040 Call Object.op_Inequality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {77}
	045 Move X20, [X19+160]
	046 Move X0, X19
	047 Move X1, X31
	048 Call Component.get_transform, X0
	049 Compare X0, 0
	050 JumpIfEqual {158}
	051 Move X1, X31
	052 Call Transform.get_position, X0
	053 Move X0, X20
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move S3, 1
	057 Move X1, X31
	058 Move X30, [X31+32]
	059 Call SFXManager.PlaySFXAsRPC, X0, X1, V0
	060 Return 
	061 Move X20, 0x22A0000
	062 Move X20, [X20+448]
	063 Move X0, [X20]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1B6F8F8
	068 Move X0, X19
	069 Move X1, X31
	070 Call NetworkBehaviourUtils.ThrowIfBehaviourNotInitialized, X0
	071 Move X0, [X19+56]
	072 Compare X0, 0
	073 JumpIfEqual {158}
	074 Move X1, X31
	075 Call NetworkRunner.get_Stage, X0
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X20, [X31+16]
	078 Move X19, [X31+24]
	079 Move X30, [X31+32]
	080 Return 
	081 Move X0, [X19+64]
	082 Compare X0, 0
	083 JumpIfEqual {158}
	084 Move X1, X31
	085 Call NetworkObject.GetLocalAuthorityMask, X0
	086 And W31, W0, 7
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {26}
	091 Move X8, [X19+56]
	092 Compare X8, 0
	093 JumpIfEqual {158}
	094 Move X0, [X8+80]
	095 Compare X0, 0
	096 JumpIfEqual {158}
	097 Move X1, X31
	098 Call Simulation.HasAnyActiveConnections, X0
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {77}
	103 Move X8, [X19+56]
	104 Compare X8, 0
	105 JumpIfEqual {158}
	106 Move X0, [X8+80]
	107 Move W1, 8
	108 Move X2, X31
	109 Call SimulationMessage.Allocate, X0, X1
	110 Move X20, X0
	111 Move W0, 1
	112 Move X1, X31
	113 Call Assert.Check, X0
	114 Move X8, [X19+64]
	115 Compare X8, 0
	116 JumpIfEqual {158}
	117 Move X8, [X8+32]
	118 Compare X8, 0
	119 JumpIfEqual {138}
	120 Move W0, [X8]
	121 Move X0, [X20]
	122 Move X19, [X19+64]
	123 Move W8, [X0+224]
	124 Compare W8, 0
	125 JumpIfNotEqual {127}
	126 Call 0x1B6F8F8
	127 Move X8, 0x22A0000
	128 Move X8, [X8+2488]
	129 Move X1, X19
	130 Move X20, [X31+16]
	131 Move X19, [X31+24]
	132 Move W2, 7
	133 Move X0, [X8]
	134 Move X3, X31
	135 Move X30, [X31+32]
	136 Call NetworkBehaviourUtils.NotifyLocalSimulationNotAllowedToSendRpc, X0, X1, X2
	137 Return 
	138 Move X0, X31
	139 Move W1, [X19+104]
	140 Move W2, 3
	141 Move X3, X31
	142 Call RpcHeader.Create, X0, X1, X2
	143 Move [X20+28], X0
	144 Compare X20, 0
	145 JumpIfEqual {158}
	146 Move W8, 64
	147 Move [X20+12], W8
	148 Move X0, [X19+56]
	149 Compare X0, 0
	150 JumpIfEqual {158}
	151 Move X1, X20
	152 Move X20, [X31+16]
	153 Move X19, [X31+24]
	154 Move X2, X31
	155 Move X30, [X31+32]
	156 Call NetworkRunner.SendRpc, X0, X1
	157 Return 
	158 Call 0x1B6FA1C

Method: System.Void Reload()

Disassembly:
	0x01CAE424 CBZ X8, 0x1CAE468

ISIL:
	001 Call Shotgun.RPC_Reload, X0
	002 Return 

Method: System.Void Update()

Disassembly:
	0x01CAF4AC SUB X31, X31, 0xB0
	0x01CAF4B0 STR D14, [X31 + 0x10]
	0x01CAF4B4 STP D13, D12, [X31 + 0x20]
	0x01CAF4B8 STP D11, D10, [X31 + 0x30]
	0x01CAF4BC STP D9, D8, [X31 + 0x40]
	0x01CAF4C0 STP X29, X30, [X31 + 0x50]
	0x01CAF4C4 STP X28, X27, [X31 + 0x60]
	0x01CAF4C8 STP X26, X25, [X31 + 0x70]
	0x01CAF4CC STP X24, X23, [X31 + 0x80]
	0x01CAF4D0 STP X22, X21, [X31 + 0x90]
	0x01CAF4D4 STP X20, X19, [X31 + 0xA0]
	0x01CAF4D8 ADRP X20, 0x2574000
	0x01CAF4DC LDRB W8, [X20 + 0x4AF]
	0x01CAF4E0 MOV X19, X0
	0x01CAF4E4 TBNZ X8, 0x0, 0x1CAF5B0

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+200]
	003 Subtract W8, W8, 1
	004 Move [X0+200], W8
	005 Move X0, [X0+176]
	006 Compare X0, 0
	007 JumpIfEqual {15}
	008 Move W1, W31
	009 Move X2, X31
	010 Move X30, [X31+16]
	011 Call GameObject.SetActive, X0, X1
	012 Return 
	013 Move X30, [X31+16]
	014 Return 
	015 Call 0x1B6FA1C

Method: System.Void ShootInternal()

Disassembly:
	0x01CAEBE8 ADRP X9, 0x22A0000
	0x01CAEBEC LDR X9, [X9 + 0x9D8]
	0x01CAEBF0 STRB W20, [X19 + 0x58]
	0x01CAEBF4 LDR X8, [X19]
	0x01CAEBF8 LDR X1, [X9]
	0x01CAEBFC LDRB W10, [X8 + 0x130]
	0x01CAEC00 LDRB W9, [X1 + 0x130]
	0x01CAEC04 CMP W10, W9
	0x01CAEC08 B.CC 0x1CAEC30
	0x01CAEC0C LDR X8, [X8 + 0xC8]
	0x01CAEC10 ADD X8, X8, X9, 0x3, LSL
	0x01CAEC14 LDUR X8, [X8 - 0x8]
	0x01CAEC18 CMP X8, X1
	0x01CAEC1C B.NE 0x1CAEC30
	0x01CAEC20 MOV X0, X19
	0x01CAEC24 LDP X20, X19, [X31 + 0x10]
	0x01CAEC28 LDR X30, [X31], #0x20
	0x01CAEC2C B 0x1CAE2B0
	0x01CAEC30 MOV X0, X19
	0x01CAEC34 BL 0x1B6ECDC
	0x01CAEC38 BL 0x1B6EA1C
	0x01CAEC3C STP X30, X19, [X31 - 0x10]!
	0x01CAEC40 LDR X8, [X0 + 0x50]
	0x01CAEC44 CBZ X8, 0x1CAEC54
	0x01CAEC48 LDR V0, [X8]
	0x01CAEC4C LDP X30, X19, [X31], #0x10
	0x01CAEC50 RET
	0x01CAEC54 ADRP X0, 0x229F000
	0x01CAEC58 LDR X0, [X0 + 0x490]
	0x01CAEC5C BL 0x1B6E804
	0x01CAEC60 BL 0x1B6EA0C
	0x01CAEC64 MOV X19, X0
	0x01CAEC68 ADRP X0, 0x22A0000
	0x01CAEC6C LDR X0, [X0 + 0x9E0]
	0x01CAEC70 BL 0x1B6E804
	0x01CAEC74 MOV X1, X0
	0x01CAEC78 MOV X0, X19
	0x01CAEC7C MOV X2, X31
	0x01CAEC80 BL 0x31E7550
	0x01CAEC84 ADRP X0, 0x22A0000
	0x01CAEC88 LDR X0, [X0 + 0x9E8]
	0x01CAEC8C BL 0x1B6E804
	0x01CAEC90 MOV X1, X0
	0x01CAEC94 MOV X0, X19
	0x01CAEC98 BL 0x1B6E8E8
	0x01CAEC9C STP X30, X19, [X31 - 0x10]!
	0x01CAECA0 LDR X8, [X0 + 0x50]
	0x01CAECA4 CBZ X8, 0x1CAECB4
	0x01CAECA8 STR S0, [X8]
	0x01CAECAC LDP X30, X19, [X31], #0x10
	0x01CAECB0 RET
	0x01CAECB4 ADRP X0, 0x229F000
	0x01CAECB8 LDR X0, [X0 + 0x490]
	0x01CAECBC BL 0x1B6E804
	0x01CAECC0 BL 0x1B6EA0C
	0x01CAECC4 MOV X19, X0
	0x01CAECC8 ADRP X0, 0x22A0000
	0x01CAECCC LDR X0, [X0 + 0x9E0]
	0x01CAECD0 BL 0x1B6E804
	0x01CAECD4 MOV X1, X0
	0x01CAECD8 MOV X0, X19
	0x01CAECDC MOV X2, X31
	0x01CAECE0 BL 0x31E7550
	0x01CAECE4 ADRP X0, 0x22A0000
	0x01CAECE8 LDR X0, [X0 + 0x9F0]
	0x01CAECEC BL 0x1B6E804
	0x01CAECF0 MOV X1, X0
	0x01CAECF4 MOV X0, X19
	0x01CAECF8 BL 0x1B6E8E8
	0x01CAECFC STP X30, X19, [X31 - 0x10]!
	0x01CAED00 LDR X8, [X0 + 0x50]
	0x01CAED04 CBZ X8, 0x1CAED14
	0x01CAED08 LDR W0, [X8 + 0x4]
	0x01CAED0C LDP X30, X19, [X31], #0x10
	0x01CAED10 RET
	0x01CAED14 ADRP X0, 0x229F000
	0x01CAED18 LDR X0, [X0 + 0x490]
	0x01CAED1C BL 0x1B6E804
	0x01CAED20 BL 0x1B6EA0C
	0x01CAED24 MOV X19, X0
	0x01CAED28 ADRP X0, 0x22A0000
	0x01CAED2C LDR X0, [X0 + 0x9F8]
	0x01CAED30 BL 0x1B6E804
	0x01CAED34 MOV X1, X0
	0x01CAED38 MOV X0, X19
	0x01CAED3C MOV X2, X31
	0x01CAED40 BL 0x31E7550
	0x01CAED44 ADRP X0, 0x22A0000
	0x01CAED48 LDR X0, [X0 + 0xA00]
	0x01CAED4C BL 0x1B6E804
	0x01CAED50 MOV X1, X0
	0x01CAED54 MOV X0, X19
	0x01CAED58 BL 0x1B6E8E8
	0x01CAED5C STP X30, X19, [X31 - 0x10]!
	0x01CAED60 LDR X8, [X0 + 0x50]
	0x01CAED64 CBZ X8, 0x1CAED74
	0x01CAED68 STR W1, [X8 + 0x4]
	0x01CAED6C LDP X30, X19, [X31], #0x10
	0x01CAED70 RET
	0x01CAED74 ADRP X0, 0x229F000
	0x01CAED78 LDR X0, [X0 + 0x490]
	0x01CAED7C BL 0x1B6E804
	0x01CAED80 BL 0x1B6EA0C
	0x01CAED84 MOV X19, X0
	0x01CAED88 ADRP X0, 0x22A0000
	0x01CAED8C LDR X0, [X0 + 0x9F8]
	0x01CAED90 BL 0x1B6E804
	0x01CAED94 MOV X1, X0
	0x01CAED98 MOV X0, X19
	0x01CAED9C MOV X2, X31
	0x01CAEDA0 BL 0x31E7550
	0x01CAEDA4 ADRP X0, 0x22A0000
	0x01CAEDA8 LDR X0, [X0 + 0xA08]
	0x01CAEDAC BL 0x1B6E804
	0x01CAEDB0 MOV X1, X0
	0x01CAEDB4 MOV X0, X19
	0x01CAEDB8 BL 0x1B6E8E8
	0x01CAEDBC STP X30, X23, [X31 - 0x30]!
	0x01CAEDC0 STP X22, X21, [X31 + 0x10]
	0x01CAEDC4 STP X20, X19, [X31 + 0x20]
	0x01CAEDC8 ADRP X20, 0x2575000
	0x01CAEDCC LDRB W8, [X20 + 0x4AB]
	0x01CAEDD0 MOV X19, X0
	0x01CAEDD4 TBNZ X8, 0x0, 0x1CAEDF8
	0x01CAEDD8 ADRP X0, 0x22A0000
	0x01CAEDDC LDR X0, [X0 + 0x740]
	0x01CAEDE0 BL 0x1B6E7F0
	0x01CAEDE4 ADRP X0, 0x22A0000
	0x01CAEDE8 LDR X0, [X0 + 0xA10]
	0x01CAEDEC BL 0x1B6E7F0
	0x01CAEDF0 MOVZ W8, 0x1
	0x01CAEDF4 STRB W8, [X20 + 0x4AB]
	0x01CAEDF8 LDR X22, [X19 + 0xD0]
	0x01CAEDFC CBZ X22, 0x1CAEE90
	0x01CAEE00 ADRP X23, 0x22A0000
	0x01CAEE04 LDR X23, [X23 + 0x740]
	0x01CAEE08 ADRP X21, 0x22A0000
	0x01CAEE0C LDR X20, [X22 + 0x20]
	0x01CAEE10 LDR X0, [X23]
	0x01CAEE14 LDR X21, [X21 + 0xA10]
	0x01CAEE18 BL 0x1B6EA0C
	0x01CAEE1C LDR X2, [X21]
	0x01CAEE20 MOV X1, X19
	0x01CAEE24 MOV X3, X31
	0x01CAEE28 MOV X21, X0
	0x01CAEE2C BL 0x28D58F8
	0x01CAEE30 MOV X0, X20
	0x01CAEE34 MOV X1, X21
	0x01CAEE38 MOV X2, X31
	0x01CAEE3C BL 0x322A750
	0x01CAEE40 CBZ X0, 0x1CAEE7C
	0x01CAEE44 LDR X20, [X23]
	0x01CAEE48 MOV X19, X0
	0x01CAEE4C MOV X1, X20
	0x01CAEE50 BL 0x1B6E8FC
	0x01CAEE54 CBZ X0, 0x1CAEE70
	0x01CAEE58 STR X0, [X22 + 0x20]
	0x01CAEE5C LDR X20, [X23]
	0x01CAEE60 MOV X0, X19
	0x01CAEE64 MOV X1, X20
	0x01CAEE68 BL 0x1B6E8FC
	0x01CAEE6C CBNZ X0, 0x1CAEE80
	0x01CAEE70 MOV X0, X19
	0x01CAEE74 MOV X1, X20
	0x01CAEE78 BL 0x1B6ECDC
	0x01CAEE7C STR X31, [X22 + 0x20]
	0x01CAEE80 LDP X20, X19, [X31 + 0x20]
	0x01CAEE84 LDP X22, X21, [X31 + 0x10]
	0x01CAEE88 LDP X30, X23, [X31], #0x30
	0x01CAEE8C RET
	0x01CAEE90 BL 0x1B6EA1C
	0x01CAEE94 STR D8, [X31 - 0x20]!
	0x01CAEE98 STR X30, [X31 + 0x8]
	0x01CAEE9C STP X20, X19, [X31 + 0x10]
	0x01CAEEA0 MOV X20, X0
	0x01CAEEA4 BL 0x1CAECFC
	0x01CAEEA8 LDR X19, [X20 + 0xB8]
	0x01CAEEAC CMP W0, 0x1
	0x01CAEEB0 B.NE 0x1CAEEE4
	0x01CAEEB4 LDR V8, [X20 + 0xC0]
	0x01CAEEB8 MOV X0, X20
	0x01CAEEBC BL 0x1CAEC3C
	0x01CAEEC0 CBZ X19, 0x1CAEF04
	0x01CAEEC4 FMOV S1, 1
	0x01CAEEC8 FCMP S0, 0x0
	0x01CAEECC FMIN S0, S0, S1
	0x01CAEED0 FMOV S1, W31
	0x01CAEED4 FCSEL S0, S0, S1, PL
	0x01CAEED8 FMUL S0, S8, S0
	0x01CAEEDC FADD S0, S0, S1
	0x01CAEEE0 B 0x1CAEEEC
	0x01CAEEE4 FMOV S0, W31
	0x01CAEEE8 CBZ X19, 0x1CAEF04
	0x01CAEEEC MOV X0, X19
	0x01CAEEF0 LDP X20, X19, [X31 + 0x10]
	0x01CAEEF4 LDR X30, [X31 + 0x8]
	0x01CAEEF8 MOV X1, X31
	0x01CAEEFC LDR V8, [X31], #0x20
	0x01CAEF00 B 0x3A7F1D4
	0x01CAEF04 BL 0x1B6EA1C
	0x01CAEF08 STR D8, [X31 - 0x20]!
	0x01CAEF0C STR X30, [X31 + 0x8]
	0x01CAEF10 STP X20, X19, [X31 + 0x10]
	0x01CAEF14 MOV X1, X31
	0x01CAEF18 MOV X19, X0
	0x01CAEF1C BL 0x1D65000
	0x01CAEF20 LDR X0, [X19 + 0x40]
	0x01CAEF24 CBZ X0, 0x1CAF054
	0x01CAEF28 MOV X1, X31
	0x01CAEF2C BL 0x1D9E780
	0x01CAEF30 TBZ X0, 0x0, 0x1CAEFE4
	0x01CAEF34 MOV X0, X19
	0x01CAEF38 BL 0x1CAECFC
	0x01CAEF3C CMP W0, 0x2
	0x01CAEF40 B.EQ 0x1CAEFA8
	0x01CAEF44 CMP W0, 0x1
	0x01CAEF48 B.NE 0x1CAEFE4
	0x01CAEF4C MOV X0, X19
	0x01CAEF50 BL 0x1CAEC3C
	0x01CAEF54 MOV X0, X31
	0x01CAEF58 MOV V8.16B, V0.16B
	0x01CAEF5C BL 0x3AA48E4
	0x01CAEF60 LDR V1, [X19 + 0x84]
	0x01CAEF64 MOV X0, X19
	0x01CAEF68 FDIV S0, S0, S1
	0x01CAEF6C FADD S0, S8, S0
	0x01CAEF70 BL 0x1CAEC9C
	0x01CAEF74 MOV X0, X19
	0x01CAEF78 BL 0x1CAEC3C
	0x01CAEF7C FMOV S1, 1
	0x01CAEF80 FCMP S0, S1
	0x01CAEF84 B.LT 0x1CAEFE4
	0x01CAEF88 MOVZ W1, 0x2
	0x01CAEF8C MOV X0, X19
	0x01CAEF90 BL 0x1CAED5C
	0x01CAEF94 MOV X0, X19
	0x01CAEF98 BL 0x1CAF058
	0x01CAEF9C MOV X0, X19
	0x01CAEFA0 BL 0x1CAF4AC
	0x01CAEFA4 B 0x1CAF03C
	0x01CAEFA8 MOV X0, X19
	0x01CAEFAC BL 0x1CAEC3C
	0x01CAEFB0 MOV X0, X31
	0x01CAEFB4 MOV V8.16B, V0.16B
	0x01CAEFB8 BL 0x3AA48E4
	0x01CAEFBC LDR V1, [X19 + 0x88]
	0x01CAEFC0 MOV X0, X19
	0x01CAEFC4 FDIV S0, S0, S1
	0x01CAEFC8 FADD S0, S8, S0
	0x01CAEFCC BL 0x1CAEC9C
	0x01CAEFD0 MOV X0, X19
	0x01CAEFD4 BL 0x1CAEC3C
	0x01CAEFD8 FMOV S1, 1
	0x01CAEFDC FCMP S0, S1
	0x01CAEFE0 B.GE 0x1CAEFF4
	0x01CAEFE4 LDP X20, X19, [X31 + 0x10]
	0x01CAEFE8 LDR X30, [X31 + 0x8]
	0x01CAEFEC LDR V8, [X31], #0x20
	0x01CAEFF0 RET
	0x01CAEFF4 MOV X0, X19
	0x01CAEFF8 MOV W1, W31
	0x01CAEFFC BL 0x1CAED5C
	0x01CAF000 LDR X20, [X19 + 0xA8]
	0x01CAF004 MOV X0, X19
	0x01CAF008 MOV X1, X31
	0x01CAF00C BL 0x3A9B084
	0x01CAF010 CBZ X0, 0x1CAF054
	0x01CAF014 MOV X1, X31
	0x01CAF018 BL 0x3AA7658
	0x01CAF01C CBZ X20, 0x1CAF054
	0x01CAF020 FMOV S3, 1
	0x01CAF024 MOVZ W1, 0x1
	0x01CAF028 MOV X0, X20
	0x01CAF02C MOV X2, X31
	0x01CAF030 BL 0x1CC35DC
	0x01CAF034 MOV X0, X19
	0x01CAF038 BL 0x1CAFAC8
	0x01CAF03C MOV X0, X19
	0x01CAF040 LDP X20, X19, [X31 + 0x10]
	0x01CAF044 LDR X30, [X31 + 0x8]
	0x01CAF048 FMOV S0, W31
	0x01CAF04C LDR V8, [X31], #0x20
	0x01CAF050 B 0x1CAEC9C
	0x01CAF054 BL 0x1B6EA1C
	0x01CAF058 SUB X31, X31, 0xB0
	0x01CAF05C STR D12, [X31 + 0x40]
	0x01CAF060 STP D11, D10, [X31 + 0x50]
	0x01CAF064 STP D9, D8, [X31 + 0x60]
	0x01CAF068 STP X30, X25, [X31 + 0x70]
	0x01CAF06C STP X24, X23, [X31 + 0x80]
	0x01CAF070 STP X22, X21, [X31 + 0x90]
	0x01CAF074 STP X20, X19, [X31 + 0xA0]
	0x01CAF078 ADRP X20, 0x2574000
	0x01CAF07C LDRB W8, [X20 + 0x4AE]
	0x01CAF080 MOV X19, X0
	0x01CAF084 TBNZ X8, 0x0, 0x1CAF114
	0x01CAF088 ADRP X0, 0x229F000
	0x01CAF08C LDR X0, [X0 + 0x268]
	0x01CAF090 BL 0x1B6E7F0
	0x01CAF094 ADRP X0, 0x229F000
	0x01CAF098 LDR X0, [X0 + 0xA18]
	0x01CAF09C BL 0x1B6E7F0
	0x01CAF0A0 ADRP X0, 0x229F000
	0x01CAF0A4 LDR X0, [X0 + 0xA20]
	0x01CAF0A8 BL 0x1B6E7F0
	0x01CAF0AC ADRP X0, 0x229F000
	0x01CAF0B0 LDR X0, [X0 + 0xA28]
	0x01CAF0B4 BL 0x1B6E7F0
	0x01CAF0B8 ADRP X0, 0x229F000
	0x01CAF0BC LDR X0, [X0 + 0x700]
	0x01CAF0C0 BL 0x1B6E7F0
	0x01CAF0C4 ADRP X0, 0x229F000
	0x01CAF0C8 LDR X0, [X0 + 0xA30]
	0x01CAF0CC BL 0x1B6E7F0
	0x01CAF0D0 ADRP X0, 0x229F000
	0x01CAF0D4 LDR X0, [X0 + 0x6F8]
	0x01CAF0D8 BL 0x1B6E7F0
	0x01CAF0DC ADRP X0, 0x229F000
	0x01CAF0E0 LDR X0, [X0 + 0x6F0]
	0x01CAF0E4 BL 0x1B6E7F0
	0x01CAF0E8 ADRP X0, 0x229E000
	0x01CAF0EC LDR X0, [X0 + 0x478]
	0x01CAF0F0 BL 0x1B6E7F0
	0x01CAF0F4 ADRP X0, 0x229E000
	0x01CAF0F8 LDR X0, [X0 + 0x4C0]
	0x01CAF0FC BL 0x1B6E7F0
	0x01CAF100 ADRP X0, 0x229F000
	0x01CAF104 LDR X0, [X0 + 0xA38]
	0x01CAF108 BL 0x1B6E7F0
	0x01CAF10C MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+96], D13
	003 Move [X31+104], D12
	004 Move [X31+112], D11
	005 Move [X31+120], D10
	006 Move [X31+128], D9
	007 Move [X31+136], D8
	008 Move [X31+144], X30
	009 Move [X31+160], X24
	010 Move [X31+168], X23
	011 Move [X31+176], X22
	012 Move [X31+184], X21
	013 Move [X31+192], X20
	014 Move [X31+200], X19
	015 Move X20, 0x2576000
	016 Move W8, [X20+1189]
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {54}
	022 Move X0, 0x22A1000
	023 Move X0, [X0+2416]
	024 Call 0x1B6F7F0
	025 Move X0, 0x22A1000
	026 Move X0, [X0+2424]
	027 Call 0x1B6F7F0
	028 Move X0, 0x22A1000
	029 Move X0, [X0+2432]
	030 Call 0x1B6F7F0
	031 Move X0, 0x22A1000
	032 Move X0, [X0+2440]
	033 Call 0x1B6F7F0
	034 Move X0, 0x22A1000
	035 Move X0, [X0+2448]
	036 Call 0x1B6F7F0
	037 Move X0, 0x22A1000
	038 Move X0, [X0+2456]
	039 Call 0x1B6F7F0
	040 Move X0, 0x22A0000
	041 Move X0, [X0+1208]
	042 Call 0x1B6F7F0
	043 Move X0, 0x22A1000
	044 Move X0, [X0+2464]
	045 Call 0x1B6F7F0
	046 Move X0, 0x22A1000
	047 Move X0, [X0+2472]
	048 Call 0x1B6F7F0
	049 Move X0, 0x22A0000
	050 Move X0, [X0+1144]
	051 Call 0x1B6F7F0
	052 Move W8, 1
	053 Move [X20+1189], W8
	054 NotImplemented "Instruction MOVI not yet implemented."
	055 Move X0, X19
	056 Move [X31+80], X31
	057 Move [X31+48], V0
	058 Move [X31+56], V0
	059 Call Shotgun.get_reloadTimer, X0
	060 Move [X31+152], W0
	061 Move X1, [X19+56]
	062 Add X0, X31, 152
	063 Move X2, X31
	064 Call TickTimer.ExpiredOrNotRunning, X0, X1
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {318}
	069 Move X8, 0x22A1000
	070 Move X8, [X8+2432]
	071 Move X0, [X8]
	072 Call 0x1B6FA0C
	073 Move X8, 0x22A1000
	074 Move X8, [X8+2424]
	075 Move X20, X0
	076 Move X1, [X8]
	077 Call Dictionary`2<Object, Object>..ctor, X0
	078 Move W21, 19
	079 Move X0, X19
	080 Move X1, X20
	081 Call Shotgun.ShootRandomRay, X0, X1
	082 Subtract W21, W21, 1
	083 Compare X20, 0
	084 JumpIfEqual {337}
	085 Move X8, 0x22A1000
	086 Move X8, [X8+2416]
	087 Move X0, X20
	088 Move X1, [X8]
	089 Add X8, X31, 8
	090 Call Dictionary`2<Object, Object>.GetEnumerator, X0
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 Move X8, [X31+40]
	094 Move X23, 0x22A1000
	095 Move X23, [X23+2448]
	096 Move [X31+48], V0
	097 Move [X31+56], V1
	098 Move [X31+80], X8
	099 Move X24, 0x22A0000
	100 Move X24, [X24+1208]
	101 Move X1, [X23]
	102 Add X0, X31, 48
	103 Call Enumerator<Object, Object>.MoveNext, X0
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {159}
	108 Move X9, [X31+72]
	109 Compare X9, 0
	110 JumpIfEqual {335}
	111 Move X8, [X19+128]
	112 Compare X8, 0
	113 JumpIfEqual {336}
	114 Move X10, [X8+128]
	115 Compare X10, 0
	116 JumpIfEqual {333}
	117 Move X20, [X31+64]
	118 Compare X20, 0
	119 JumpIfEqual {334}
	120 Move X8, [X20]
	121 Move W21, [X9+16]
	122 Move S9, [X9+20]
	123 Move S10, [X9+24]
	124 Move S11, [X9+28]
	125 Move S8, [X9+32]
	126 Move S13, [X9+36]
	127 Move S12, [X9+40]
	128 Move X22, [X10+24]
	129 NotImplemented "Instruction LDRH not yet implemented."
	130 Move X1, [X24]
	131 Compare X9, 0
	132 JumpIfEqual {139}
	133 Move X10, [X8+176]
	134 Add X10, X10, 8
	135 NotImplemented "Instruction LDUR not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Subtract X9, X9, 1
	138 Add X10, X10, 16
	139 Move X0, X20
	140 Move W2, W31
	141 Call 0x1BB5284
	142 NotImplemented "Instruction LDRSW not yet implemented."
	143 Add X8, X8, X9
	144 Add X0, X8, 312
	145 Move X8, [X0]
	146 Move X5, [X0+8]
	147 Move X0, X20
	148 Move W1, W21
	149 Move V0, V9
	150 Move V1, V10
	151 Move V2, V11
	152 Move X2, X31
	153 Move X3, X31
	154 Move V3, V8
	155 Move V4, V13
	156 Move V5, V12
	157 Move X4, X22
	158 NotImplemented "Instruction BLR not yet implemented."
	159 Move X8, 0x22A1000
	160 Move X8, [X8+2440]
	161 Add X0, X31, 48
	162 Move X1, [X8]
	163 Call Enumerator<Object, Object>.Dispose, X0
	164 Move X8, 0x22A0000
	165 Move X8, [X8+1144]
	166 Move X20, [X19+144]
	167 Move X0, [X8]
	168 Move W8, [X0+224]
	169 Compare W8, 0
	170 JumpIfNotEqual {172}
	171 Call 0x1B6F8F8
	172 Move X0, X20
	173 Move X1, X31
	174 Move X2, X31
	175 Call Object.op_Inequality, X0, X1
	176 Move TEMP, X0
	177 And TEMP, TEMP, 1
	178 Compare TEMP, 1
	179 JumpIfNotEqual {192}
	180 Move X20, [X19+144]
	181 Move X0, X19
	182 Move X1, X31
	183 Call Component.get_transform, X0
	184 Compare X0, 0
	185 JumpIfEqual {337}
	186 Move X1, X31
	187 Call Transform.get_position, X0
	188 Move S3, 1
	189 Move X0, X20
	190 Move X1, X31
	191 Call SFXManager.PlaySFXAsRPC, X0, X1, V0
	192 Move X0, X19
	193 Move X1, X31
	194 Call Component.get_transform, X0
	195 Compare X0, 0
	196 JumpIfEqual {337}
	197 Move X1, X31
	198 Call Transform.get_forward, X0
	199 Move X20, 0x2576000
	200 Move W8, [X20+1090]
	201 Move V8, V0
	202 Move V9, V1
	203 Move V10, V2
	204 Compare W8, 0
	205 JumpIfNotEqual {211}
	206 Move X0, 0x22A0000
	207 Move X0, [X0+1152]
	208 Call 0x1B6F7F0
	209 Move W8, 1
	210 Move [X20+1090], W8
	211 Move X20, 0x22A0000
	212 Move X20, [X20+1152]
	213 Move X9, -18890752
	214 Move X21, 0x2576000
	215 Move V0, [X9+2736]
	216 Move X8, [X20]
	217 Move W9, [X21+1089]
	218 Move X8, [X8+184]
	219 Move S1, [X8+24]
	220 Move S2, [X8+28]
	221 Move V3, [X8+32]
	222 Multiply S11, S1, S0
	223 Multiply S12, S2, S0
	224 Multiply S13, S3, S0
	225 Compare W9, 0
	226 JumpIfNotEqual {232}
	227 Move X0, 0x22A0000
	228 Move X0, [X0+1160]
	229 Call 0x1B6F7F0
	230 Move W8, 1
	231 Move [X21+1089], W8
	232 Move X8, 0x22A0000
	233 Move X8, [X8+1160]
	234 Subtract S11, S11, S8
	235 Subtract S9, S12, S9
	236 Subtract S8, S13, S10
	237 Move X0, [X8]
	238 Move W8, [X0+224]
	239 Compare W8, 0
	240 JumpIfNotEqual {242}
	241 Call 0x1B6F8F8
	242 Multiply S0, S11, S11
	243 Multiply S1, S9, S9
	244 Move X8, -18890752
	245 Add S0, S0, S1
	246 Move V1, [X8+2916]
	247 Multiply S2, S8, S8
	248 Add S0, S2, S0
	249 NotImplemented "Instruction FSQRT not yet implemented."
	250 NotImplemented "Instruction FCMP not yet implemented."
	251 NotImplemented "Instruction FDIV not yet implemented."
	252 NotImplemented "Instruction FDIV not yet implemented."
	253 NotImplemented "Instruction FDIV not yet implemented."
	254 Move X21, 0x2576000
	255 Move W8, [X21+1087]
	256 Compare W8, 0
	257 JumpIfNotEqual {263}
	258 Move X0, 0x22A0000
	259 Move X0, [X0+1152]
	260 Call 0x1B6F7F0
	261 Move W8, 1
	262 Move [X21+1087], W8
	263 Move X8, [X20]
	264 Move X8, [X8+184]
	265 Move S0, [X8]
	266 Move S1, [X8+4]
	267 Move V2, [X8+8]
	268 Move X0, [X19+128]
	269 Compare X0, 0
	270 JumpIfEqual {337}
	271 Move S3, 9
	272 Multiply S2, S2, S3
	273 Multiply S1, S1, S3
	274 Multiply S0, S0, S3
	275 Move X1, X31
	276 Call GrabbableItem.AddExternalForce, X0, X1
	277 Move X0, X19
	278 Call Shotgun.get__ammoLeft, X0
	279 Subtract W1, W0, 1
	280 Move X0, X19
	281 Call Shotgun.set__ammoLeft, X0, X1
	282 Move X0, [X19+56]
	283 Move S0, 1
	284 Move X1, X31
	285 Call TickTimer.CreateFromSeconds, X0, V0
	286 And X1, X0, 0
	287 Move X0, X19
	288 Call Shotgun.set_reloadTimer, X0, X1
	289 Move X0, [X19+136]
	290 Compare X0, 0
	291 JumpIfEqual {337}
	292 Move X1, X31
	293 Call Transform.get_position, X0
	294 Move X0, [X19+136]
	295 Compare X0, 0
	296 JumpIfEqual {337}
	297 Move X1, X31
	298 Move V8, V0
	299 Move V9, V1
	300 Move V10, V2
	301 Call Transform.get_rotation, X0
	302 Move V4, V0
	303 Move V5, V1
	304 Move V6, V2
	305 Move V7, V3
	306 Move W0, W31
	307 Move V0, V8
	308 Move V1, V9
	309 Move V2, V10
	310 Move V3, V4
	311 Move V4, V5
	312 Move V5, V6
	313 Move V6, V7
	314 Move X1, X31
	315 Call NetworkVFX.PlayVFX, X0, X1, X2
	316 Move X0, X19
	317 Call Shotgun.RPC_MuzzleFlash, X0
	318 Move X20, [X31+192]
	319 Move X19, [X31+200]
	320 Move X22, [X31+176]
	321 Move X21, [X31+184]
	322 Move X24, [X31+160]
	323 Move X23, [X31+168]
	324 Move X30, [X31+144]
	325 Move D9, [X31+128]
	326 Move D8, [X31+136]
	327 Move D11, [X31+112]
	328 Move D10, [X31+120]
	329 Move D13, [X31+96]
	330 Move D12, [X31+104]
	331 Add X31, X31, 208
	332 Return 
	333 Call 0x1B6FA1C
	334 Call 0x1B6FA1C
	335 Call 0x1B6FA1C
	336 Call 0x1B6FA1C
	337 Call 0x1B6FA1C
	338 Move X20, X0
	339 NotImplemented "Instruction CMP not yet implemented."
	340 Move X0, X20
	341 Call 0x3D1A840
	342 Move X21, [X0]
	343 Call 0x3D1A850
	344 Move X8, 0x22A0000
	345 Move X8, [X8+2440]
	346 Add X0, X31, 48
	347 Move X1, [X8]
	348 Call Enumerator<Object, Object>.Dispose, X0
	349 Compare X21, 0
	350 JumpIfEqual {164}
	351 Move X0, X21
	352 Call 0x1B6FA14
	353 Move X21, X31
	354 Move X20, X0
	355 Move X8, 0x22A0000
	356 Move X8, [X8+2440]
	357 Move X1, [X8]
	358 Add X0, X31, 48
	359 Call Enumerator<Object, Object>.Dispose, X0
	360 Compare X21, 0
	361 JumpIfNotEqual {364}
	362 Move X0, X20
	363 Call 0x1C8518C
	364 Move X0, X21
	365 Call 0x1B6FA14
	366 Call 0x18F56A8

Method: System.Void ShootRandomRay(System.Collections.Generic.Dictionary`2<AnimalCompany.IDamageable, AnimalCompany.Shotgun/HitDamage> damageToApply)

Disassembly:
	0x01CAF4E8 ADRP X0, 0x229E000
	0x01CAF4EC LDR X0, [X0 + 0x5B0]
	0x01CAF4F0 BL 0x1B6E7F0
	0x01CAF4F4 ADRP X0, 0x229E000
	0x01CAF4F8 LDR X0, [X0 + 0x5B8]
	0x01CAF4FC BL 0x1B6E7F0
	0x01CAF500 ADRP X0, 0x229E000
	0x01CAF504 LDR X0, [X0 + 0x5C0]
	0x01CAF508 BL 0x1B6E7F0
	0x01CAF50C ADRP X0, 0x229E000
	0x01CAF510 LDR X0, [X0 + 0x628]
	0x01CAF514 BL 0x1B6E7F0
	0x01CAF518 ADRP X0, 0x229F000
	0x01CAF51C LDR X0, [X0 + 0x1C0]
	0x01CAF520 BL 0x1B6E7F0
	0x01CAF524 ADRP X0, 0x229E000
	0x01CAF528 LDR X0, [X0 + 0x918]
	0x01CAF52C BL 0x1B6E7F0
	0x01CAF530 ADRP X0, 0x229F000
	0x01CAF534 LDR X0, [X0 + 0xA38]
	0x01CAF538 BL 0x1B6E7F0
	0x01CAF53C ADRP X0, 0x229E000
	0x01CAF540 LDR X0, [X0 + 0x480]
	0x01CAF544 BL 0x1B6E7F0
	0x01CAF548 ADRP X0, 0x229F000
	0x01CAF54C LDR X0, [X0 + 0xA40]
	0x01CAF550 BL 0x1B6E7F0
	0x01CAF554 ADRP X0, 0x229F000
	0x01CAF558 LDR X0, [X0 + 0xA48]
	0x01CAF55C BL 0x1B6E7F0
	0x01CAF560 ADRP X0, 0x229F000
	0x01CAF564 LDR X0, [X0 + 0xA50]
	0x01CAF568 BL 0x1B6E7F0
	0x01CAF56C ADRP X0, 0x229F000
	0x01CAF570 LDR X0, [X0 + 0xA58]
	0x01CAF574 BL 0x1B6E7F0
	0x01CAF578 ADRP X0, 0x229F000
	0x01CAF57C LDR X0, [X0 + 0xA60]
	0x01CAF580 BL 0x1B6E7F0
	0x01CAF584 ADRP X0, 0x229F000
	0x01CAF588 LDR X0, [X0 + 0xA68]
	0x01CAF58C BL 0x1B6E7F0
	0x01CAF590 ADRP X0, 0x229F000
	0x01CAF594 LDR X0, [X0 + 0xA70]
	0x01CAF598 BL 0x1B6E7F0
	0x01CAF59C ADRP X0, 0x229F000
	0x01CAF5A0 LDR X0, [X0 + 0xA78]
	0x01CAF5A4 BL 0x1B6E7F0
	0x01CAF5A8 MOVZ W8, 0x1
	0x01CAF5AC STRB W8, [X20 + 0x4AF]
	0x01CAF5B0 STR X31, [X31 + 0x18]
	0x01CAF5B4 LDRB W8, [X19 + 0x58]
	0x01CAF5B8 CBZ W8, 0x1CAF934
	0x01CAF5BC STRB W31, [X19 + 0x58]
	0x01CAF5C0 LDR X0, [X19 + 0xB0]
	0x01CAF5C4 CBZ X0, 0x1CAFAC4
	0x01CAF5C8 LDR X20, [X19 + 0xA0]
	0x01CAF5CC MOV X1, X31
	0x01CAF5D0 BL 0x3AA7658
	0x01CAF5D4 CBZ X20, 0x1CAFAC4
	0x01CAF5D8 FMOV S3, 1
	0x01CAF5DC MOV X0, X20
	0x01CAF5E0 MOV W1, W31
	0x01CAF5E4 MOV X2, X31
	0x01CAF5E8 BL 0x1CC35DC
	0x01CAF5EC MOV X0, X31
	0x01CAF5F0 BL 0x3A6D510
	0x01CAF5F4 CBZ X0, 0x1CAFAC4
	0x01CAF5F8 MOV X1, X31
	0x01CAF5FC BL 0x3A9B084
	0x01CAF600 CBZ X0, 0x1CAFAC4
	0x01CAF604 ADRP X20, 0x229E000
	0x01CAF608 ADRP X21, 0x229E000
	0x01CAF60C LDR X20, [X20 + 0x5C0]
	0x01CAF610 LDR X21, [X21 + 0x5B8]
	0x01CAF614 MOV X1, X31
	0x01CAF618 BL 0x3AA7658
	0x01CAF61C LDR X0, [X20]
	0x01CAF620 MOV V8.16B, V0.16B
	0x01CAF624 MOV V9.16B, V1.16B
	0x01CAF628 MOV V10.16B, V2.16B
	0x01CAF62C BL 0x1B6EA0C
	0x01CAF630 LDR X1, [X21]
	0x01CAF634 MOV X20, X0
	0x01CAF638 BL 0x28F9A14
	0x01CAF63C MOV X0, X19
	0x01CAF640 MOV X1, X31
	0x01CAF644 BL 0x3A9B084
	0x01CAF648 CBZ X0, 0x1CAFAC4
	0x01CAF64C MOV X1, X31
	0x01CAF650 BL 0x3AA7658
	0x01CAF654 ADRP X25, 0x2574000
	0x01CAF658 LDRB W8, [X25 + 0x506]
	0x01CAF65C MOV V11.16B, V0.16B
	0x01CAF660 MOV V12.16B, V1.16B
	0x01CAF664 MOV V13.16B, V2.16B
	0x01CAF668 CBNZ W8, 0x1CAF680
	0x01CAF66C ADRP X0, 0x229E000
	0x01CAF670 LDR X0, [X0 + 0x488]
	0x01CAF674 BL 0x1B6E7F0
	0x01CAF678 MOVZ W8, 0x1
	0x01CAF67C STRB W8, [X25 + 0x506]
	0x01CAF680 ADRP X26, 0x229E000
	0x01CAF684 LDR X26, [X26 + 0x488]
	0x01CAF688 ADRP X21, 0x229E000
	0x01CAF68C FSUB S14, S8, S11
	0x01CAF690 FSUB S12, S9, S12
	0x01CAF694 LDR X0, [X26]
	0x01CAF698 FSUB S11, S10, S13
	0x01CAF69C LDR W8, [X0 + 0xE0]
	0x01CAF6A0 LDR X21, [X21 + 0x918]
	0x01CAF6A4 CBNZ W8, 0x1CAF6AC
	0x01CAF6A8 BL 0x1B6E8F8
	0x01CAF6AC FMUL S0, S14, S14
	0x01CAF6B0 FMUL S1, S12, S12
	0x01CAF6B4 LDR X0, [X21]
	0x01CAF6B8 FMUL S2, S11, S11
	0x01CAF6BC FADD S0, S0, S1
	0x01CAF6C0 FADD S0, S2, S0
	0x01CAF6C4 FSQRT S0, S0
	0x01CAF6C8 ADD X1, X31, 0xC
	0x01CAF6CC STR S0, [X31 + 0xC]
	0x01CAF6D0 BL 0x1B6E900
	0x01CAF6D4 CBZ X20, 0x1CAFAC4
	0x01CAF6D8 ADRP X8, 0x229F000
	0x01CAF6DC ADRP X28, 0x229E000
	0x01CAF6E0 LDR X8, [X8 + 0xA60]
	0x01CAF6E4 LDR X28, [X28 + 0x5B0]
	0x01CAF6E8 ADRP X24, 0x229E000
	0x01CAF6EC ADRP X29, 0x229F000
	0x01CAF6F0 ADRP X23, 0x229E000
	0x01CAF6F4 LDR X24, [X24 + 0x480]
	0x01CAF6F8 LDR X29, [X29 + 0xA50]
	0x01CAF6FC LDR X23, [X23 + 0x628]
	0x01CAF700 LDR X1, [X8]
	0x01CAF704 LDR X3, [X28]
	0x01CAF708 ADRP X27, 0x229F000
	0x01CAF70C ADRP X22, 0x229F000
	0x01CAF710 ADRP X21, 0x229F000
	0x01CAF714 LDR X27, [X27 + 0xA78]
	0x01CAF718 LDR X22, [X22 + 0xA48]
	0x01CAF71C LDR X21, [X21 + 0xA70]
	0x01CAF720 MOV X2, X0
	0x01CAF724 MOV X0, X20
	0x01CAF728 BL 0x28FA2A8
	0x01CAF72C LDR X0, [X24]
	0x01CAF730 ADD X1, X31, 0x0
	0x01CAF734 STP S8, S9, [X31]
	0x01CAF738 STR S10, [X31 + 0x8]
	0x01CAF73C BL 0x1B6E900
	0x01CAF740 LDR X1, [X29]
	0x01CAF744 LDR X3, [X28]
	0x01CAF748 MOV X2, X0
	0x01CAF74C MOV X0, X20
	0x01CAF750 BL 0x28FA2A8
	0x01CAF754 LDR X0, [X23]
	0x01CAF758 LDR W8, [X0 + 0xE0]
	0x01CAF75C CBNZ W8, 0x1CAF764
	0x01CAF760 BL 0x1B6E8F8
	0x01CAF764 LDR X1, [X27]
	0x01CAF768 LDR X3, [X22]
	0x01CAF76C LDR X4, [X21]
	0x01CAF770 MOVZ W0, 0x20
	0x01CAF774 MOVZ W5, 0x98
	0x01CAF778 MOV X2, X20
	0x01CAF77C MOV X6, X31
	0x01CAF780 BL 0x342B224
	0x01CAF784 MOV X0, X19
	0x01CAF788 MOV X1, X31
	0x01CAF78C BL 0x3A9B084
	0x01CAF790 CBZ X0, 0x1CAFAC4
	0x01CAF794 MOV X1, X31
	0x01CAF798 BL 0x3AA7658
	0x01CAF79C LDRB W8, [X25 + 0x506]
	0x01CAF7A0 MOV V11.16B, V0.16B
	0x01CAF7A4 MOV V12.16B, V1.16B
	0x01CAF7A8 MOV V13.16B, V2.16B
	0x01CAF7AC CBNZ W8, 0x1CAF7C4
	0x01CAF7B0 ADRP X0, 0x229E000
	0x01CAF7B4 LDR X0, [X0 + 0x488]
	0x01CAF7B8 BL 0x1B6E7F0
	0x01CAF7BC MOVZ W8, 0x1
	0x01CAF7C0 STRB W8, [X25 + 0x506]
	0x01CAF7C4 LDR X0, [X26]
	0x01CAF7C8 FSUB S11, S8, S11
	0x01CAF7CC FSUB S9, S9, S12
	0x01CAF7D0 FSUB S8, S10, S13
	0x01CAF7D4 LDR W8, [X0 + 0xE0]
	0x01CAF7D8 CBNZ W8, 0x1CAF7E0
	0x01CAF7DC BL 0x1B6E8F8
	0x01CAF7E0 FMUL S0, S11, S11
	0x01CAF7E4 FMUL S1, S9, S9
	0x01CAF7E8 LDR V2, [X19 + 0x80]
	0x01CAF7EC FADD S0, S0, S1
	0x01CAF7F0 FMUL S1, S8, S8
	0x01CAF7F4 FADD S0, S1, S0
	0x01CAF7F8 FSQRT S0, S0
	0x01CAF7FC FCMP S0, S2
	0x01CAF800 B.PL 0x1CAF9F0
	0x01CAF804 ADRP X8, 0x229F000
	0x01CAF808 LDR X8, [X8 + 0xA38]
	0x01CAF80C LDR X0, [X8]
	0x01CAF810 LDR W8, [X0 + 0xE0]
	0x01CAF814 CBNZ W8, 0x1CAF81C
	0x01CAF818 BL 0x1B6E8F8
	0x01CAF81C ADD X1, X31, 0x18
	0x01CAF820 MOVZ W0, 0x1
	0x01CAF824 BL 0x1CAFFBC
	0x01CAF828 TBZ X0, 0x0, 0x1CAF9B8
	0x01CAF82C LDR X0, [X31 + 0x18]
	0x01CAF830 CBZ X0, 0x1CAFAC4
	0x01CAF834 MOV X1, X31
	0x01CAF838 BL 0x3AA7658
	0x01CAF83C LDR X0, [X24]
	0x01CAF840 ADD X1, X31, 0x0
	0x01CAF844 STP S0, S1, [X31]
	0x01CAF848 STR S2, [X31 + 0x8]
	0x01CAF84C BL 0x1B6E900
	0x01CAF850 ADRP X8, 0x229F000
	0x01CAF854 LDR X8, [X8 + 0xA58]
	0x01CAF858 MOV X1, X0
	0x01CAF85C MOV X2, X31
	0x01CAF860 LDR X8, [X8]
	0x01CAF864 MOV X0, X8
	0x01CAF868 BL 0x3087E18
	0x01CAF86C LDR X8, [X23]
	0x01CAF870 MOV X20, X0
	0x01CAF874 LDR W9, [X8 + 0xE0]
	0x01CAF878 CBNZ W9, 0x1CAF884
	0x01CAF87C MOV X0, X8
	0x01CAF880 BL 0x1B6E8F8
	0x01CAF884 LDR X3, [X22]
	0x01CAF888 LDR X4, [X21]
	0x01CAF88C MOVZ W0, 0x20
	0x01CAF890 MOVZ W5, 0xA1
	0x01CAF894 MOV X1, X20
	0x01CAF898 MOV X2, X31
	0x01CAF89C MOV X6, X31
	0x01CAF8A0 BL 0x342B224
	0x01CAF8A4 ADRP X20, 0x2574000
	0x01CAF8A8 LDRB W8, [X20 + 0x509]
	0x01CAF8AC CBNZ W8, 0x1CAF8C4
	0x01CAF8B0 ADRP X0, 0x229F000
	0x01CAF8B4 LDR X0, [X0 + 0xA80]
	0x01CAF8B8 BL 0x1B6E7F0
	0x01CAF8BC MOVZ W8, 0x1
	0x01CAF8C0 STRB W8, [X20 + 0x509]
	0x01CAF8C4 ADRP X8, 0x229F000
	0x01CAF8C8 LDR X8, [X8 + 0xA80]
	0x01CAF8CC LDR X8, [X8]
	0x01CAF8D0 LDR X8, [X8 + 0xB8]
	0x01CAF8D4 LDR X8, [X8]
	0x01CAF8D8 CBZ X8, 0x1CAFAC4
	0x01CAF8DC LDR X0, [X31 + 0x18]
	0x01CAF8E0 CBZ X0, 0x1CAFAC4
	0x01CAF8E4 LDR X20, [X8 + 0x20]
	0x01CAF8E8 MOV X1, X31
	0x01CAF8EC BL 0x3AA7658
	0x01CAF8F0 CBZ X20, 0x1CAFAC4
	0x01CAF8F4 MOV X0, X20
	0x01CAF8F8 MOV W1, W31
	0x01CAF8FC MOV X2, X31
	0x01CAF900 BL 0x1CC2578
	0x01CAF904 LDR X0, [X31 + 0x18]
	0x01CAF908 CBZ X0, 0x1CAFAC4
	0x01CAF90C LDR X19, [X19 + 0xA0]
	0x01CAF910 MOV X1, X31
	0x01CAF914 BL 0x3AA7658
	0x01CAF918 CBZ X19, 0x1CAFAC4
	0x01CAF91C FMOV S3, 1
	0x01CAF920 MOV X0, X19
	0x01CAF924 MOV W1, W31
	0x01CAF928 MOV X2, X31
	0x01CAF92C BL 0x1CC35DC
	0x01CAF930 B 0x1CAF9F0
	0x01CAF934 ADRP X21, 0x229F000
	0x01CAF938 LDR X21, [X21 + 0x1C0]
	0x01CAF93C LDR X0, [X21]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], D15
	003 Move [X31+88], D14
	004 Move [X31+96], D13
	005 Move [X31+104], D12
	006 Move [X31+112], D11
	007 Move [X31+120], D10
	008 Move [X31+128], D9
	009 Move [X31+136], D8
	010 Move [X31+144], X30
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X21, 0x2575000
	015 Move W8, [X21+1190]
	016 Move X19, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {48}
	022 Move X0, 0x229F000
	023 Move X0, [X0+1200]
	024 Call 0x1B6F7F0
	025 Move X0, 0x229F000
	026 Move X0, [X0+2232]
	027 Call 0x1B6F7F0
	028 Move X0, 0x22A0000
	029 Move X0, [X0+2496]
	030 Call 0x1B6F7F0
	031 Move X0, 0x22A0000
	032 Move X0, [X0+2504]
	033 Call 0x1B6F7F0
	034 Move X0, 0x22A0000
	035 Move X0, [X0+2512]
	036 Call 0x1B6F7F0
	037 Move X0, 0x22A0000
	038 Move X0, [X0+680]
	039 Call 0x1B6F7F0
	040 Move X0, 0x229F000
	041 Move X0, [X0+1144]
	042 Call 0x1B6F7F0
	043 Move X0, 0x229F000
	044 Move X0, [X0+1216]
	045 Call 0x1B6F7F0
	046 Move W8, 1
	047 Move [X21+1190], W8
	048 NotImplemented "Instruction MOVI not yet implemented."
	049 Move X0, X20
	050 Move X1, X31
	051 Move [X31+60], V0
	052 Move [X31+32], V0
	053 Move [X31+40], V0
	054 Move [X31+24], X31
	055 Call Component.get_transform, X0
	056 Compare X0, 0
	057 JumpIfEqual {323}
	058 Move X1, X31
	059 Call Transform.get_forward, X0
	060 Move X0, X31
	061 Move V8, V0
	062 Move V9, V1
	063 Move V10, V2
	064 Call Random.get_value
	065 Move X0, X31
	066 Move V11, V0
	067 Call Random.get_value
	068 Move X0, X20
	069 Move X1, X31
	070 Move V12, V0
	071 Call Component.get_transform, X0
	072 Compare X0, 0
	073 JumpIfEqual {323}
	074 Move X1, X31
	075 Call Transform.get_right, X0
	076 Move X0, X20
	077 Move X1, X31
	078 Move V13, V0
	079 Move V14, V1
	080 Move V15, V2
	081 Call Component.get_transform, X0
	082 Compare X0, 0
	083 JumpIfEqual {323}
	084 Move X1, X31
	085 Call Transform.get_up, X0
	086 Move X0, [X20+136]
	087 Compare X0, 0
	088 JumpIfEqual {323}
	089 Move X8, -18894848
	090 Move V4, [X8+3236]
	091 Move S3, -0.5
	092 Add S5, S11, S3
	093 Add S3, S12, S3
	094 Move X21, 0x229F000
	095 Move X21, [X21+2232]
	096 Multiply S5, S5, S4
	097 Multiply S3, S3, S4
	098 Multiply S4, S5, S15
	099 Multiply S6, S5, S14
	100 Multiply S5, S5, S13
	101 Multiply S0, S3, S0
	102 Multiply S1, S3, S1
	103 Multiply S2, S3, S2
	104 Add S0, S5, S0
	105 Add S1, S6, S1
	106 Add S2, S4, S2
	107 Move X1, X31
	108 Add S8, S8, S0
	109 Add S9, S9, S1
	110 Add S10, S10, S2
	111 Call Transform.get_position, X0
	112 Move X0, [X21]
	113 Move V11, V0
	114 Move V12, V1
	115 Move V13, V2
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {120}
	119 Call 0x1B6F8F8
	120 Move W8, 0x40A00000
	121 Move X9, 0x3F800000
	122 Move W10, 0x3F800000
	123 Move V0, V11
	124 Move V1, V12
	125 Move V2, V13
	126 Move V3, V8
	127 Move V4, V9
	128 Move V5, V10
	129 Move X0, X31
	130 Move [X31+16], W8
	131 Move [X31], X10
	132 Move [X31+8], X9
	133 Call Debug.DrawRay, X0, X1, X2, V0
	134 Move X0, [X20+136]
	135 Compare X0, 0
	136 JumpIfEqual {323}
	137 Move X21, 0x229F000
	138 Move X21, [X21+1216]
	139 Move X1, X31
	140 Call Transform.get_position, X0
	141 Add X0, X20, 168
	142 Move X1, X31
	143 Move V11, V0
	144 Move V12, V1
	145 Move V13, V2
	146 Call LayerMask.get_value, X0
	147 Move X8, [X21]
	148 Move W20, W0
	149 Move W9, [X8+224]
	150 Compare W9, 0
	151 JumpIfNotEqual {154}
	152 Move X0, X8
	153 Call 0x1B6F8F8
	154 Add X0, X31, 32
	155 Move S6, 20
	156 Move W2, 2
	157 Move V0, V11
	158 Move V1, V12
	159 Move V2, V13
	160 Move V3, V8
	161 Move V4, V9
	162 Move V5, V10
	163 Move W1, W20
	164 Move X3, X31
	165 Call Physics.Raycast, X0, X1, X2, V0, X3, X4
	166 Move TEMP, X0
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfNotEqual {309}
	170 Add X0, X31, 32
	171 Move X1, X31
	172 Call RaycastHit.get_collider, X0
	173 Compare X0, 0
	174 JumpIfEqual {323}
	175 Move X8, 0x229F000
	176 Move X8, [X8+1200]
	177 Move X1, [X8]
	178 Call 0x20914A4, X0
	179 Compare X0, 0
	180 JumpIfEqual {261}
	181 Move X8, 0x22A0000
	182 Move X8, [X8+680]
	183 Move X9, [X0]
	184 Move X20, X0
	185 Move X8, [X8]
	186 Move W11, [X9+304]
	187 Move W10, [X8+304]
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X9, [X9+200]
	190 Add X9, X9, X10
	191 NotImplemented "Instruction LDUR not yet implemented."
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move X0, [X20+64]
	194 Compare X0, 0
	195 JumpIfEqual {323}
	196 Move X1, X31
	197 Call NetworkObject.get_HasInputAuthority, X0
	198 Move TEMP, X0
	199 And TEMP, TEMP, 1
	200 Compare TEMP, 1
	201 JumpIfEqual {261}
	202 Compare X19, 0
	203 JumpIfEqual {323}
	204 Move X8, 0x22A0000
	205 Move X8, [X8+2504]
	206 Add X2, X31, 24
	207 Move X0, X19
	208 Move X1, X20
	209 Move X3, [X8]
	210 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	211 Move TEMP, X0
	212 And TEMP, TEMP, 1
	213 Compare TEMP, 1
	214 JumpIfEqual {230}
	215 Move X8, 0x22A0000
	216 Move X8, [X8+2512]
	217 Move X0, [X8]
	218 Call 0x1B6FA0C
	219 Move X1, X31
	220 Move X21, X0
	221 Call Object..ctor, X0
	222 Move X8, 0x22A0000
	223 Move X8, [X8+2496]
	224 Move X0, X19
	225 Move X1, X20
	226 Move X2, X21
	227 Move X3, [X8]
	228 Move [X31+24], X21
	229 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	230 Move X19, [X31+24]
	231 Compare X19, 0
	232 JumpIfEqual {323}
	233 Move S0, [X19+32]
	234 Move S1, [X19+36]
	235 Move W8, [X19+16]
	236 Move V2, [X19+40]
	237 NotImplemented "Instruction LDUR not yet implemented."
	238 Move V4, [X19+28]
	239 Add S0, S8, S0
	240 Add S1, S9, S1
	241 Move [X19+32], S0
	242 Move [X19+40], S1
	243 NotImplemented "Instruction MOVI not yet implemented."
	244 Add S0, S10, S2
	245 Move S12, 0.5
	246 Add W8, W8, 10
	247 Add X0, X31, 32
	248 Move X1, X31
	249 Move [X19+40], S0
	250 NotImplemented "Instruction INVALID not yet implemented."
	251 Move [X19+16], W8
	252 Multiply S14, S4, S12
	253 Call RaycastHit.get_point, X0
	254 Multiply S2, S2, S12
	255 Move V0.S[1], V1.S[0]
	256 NotImplemented "Instruction INVALID not yet implemented."
	257 Add S1, S14, S2
	258 Add V0, V13, V0
	259 Move [X19+20], D0
	260 Move [X19+28], S1
	261 Add X0, X31, 32
	262 Move X1, X31
	263 Call RaycastHit.get_collider, X0
	264 Compare X0, 0
	265 JumpIfEqual {323}
	266 Move X1, X31
	267 Call Collider.get_attachedRigidbody, X0
	268 Move X8, 0x229F000
	269 Move X8, [X8+1144]
	270 Move X19, X0
	271 Move X8, [X8]
	272 Move W9, [X8+224]
	273 Compare W9, 0
	274 JumpIfNotEqual {277}
	275 Move X0, X8
	276 Call 0x1B6F8F8
	277 Move X0, X19
	278 Move X1, X31
	279 Move X2, X31
	280 Call Object.op_Inequality, X0, X1
	281 Move TEMP, X0
	282 And TEMP, TEMP, 1
	283 Compare TEMP, 1
	284 JumpIfNotEqual {309}
	285 Add X0, X31, 32
	286 Move X1, X31
	287 Call RaycastHit.get_collider, X0
	288 Compare X0, 0
	289 JumpIfEqual {323}
	290 Move X1, X31
	291 Call Collider.get_attachedRigidbody, X0
	292 Move X19, X0
	293 Add X0, X31, 32
	294 Move X1, X31
	295 Call RaycastHit.get_point, X0
	296 Compare X19, 0
	297 JumpIfEqual {323}
	298 Move W8, 0x42480000
	299 Move V3, V0
	300 Move S0, W8
	301 Move V4, V1
	302 Move V5, V2
	303 Multiply S2, S10, S0
	304 Multiply S1, S9, S0
	305 Multiply S0, S8, S0
	306 Move X0, X19
	307 Move X1, X31
	308 Call Rigidbody.AddForceAtPosition, X0, X1, X2
	309 Move X20, [X31+160]
	310 Move X19, [X31+168]
	311 Move X30, [X31+144]
	312 Move X21, [X31+152]
	313 Move D9, [X31+128]
	314 Move D8, [X31+136]
	315 Move D11, [X31+112]
	316 Move D10, [X31+120]
	317 Move D13, [X31+96]
	318 Move D12, [X31+104]
	319 Move D15, [X31+80]
	320 Move D14, [X31+88]
	321 Add X31, X31, 176
	322 Return 
	323 Call 0x1B6FA1C

Method: System.Void HandleUse()

Disassembly:
	0x01CAF964 BL 0x1D87040
	0x01CAF968 CMP W0, 0x4
	0x01CAF96C B.EQ 0x1CAF9F0
	0x01CAF970 LDR X0, [X19 + 0x40]
	0x01CAF974 CBZ X0, 0x1CAFAC4
	0x01CAF978 MOV X1, X31
	0x01CAF97C BL 0x1D9F538
	0x01CAF980 TBNZ X0, 0x0, 0x1CAFA20
	0x01CAF984 LDR X0, [X21]
	0x01CAF988 LDR X19, [X19 + 0x40]
	0x01CAF98C LDR W8, [X0 + 0xE0]
	0x01CAF990 CBNZ W8, 0x1CAF998
	0x01CAF994 BL 0x1B6E8F8
	0x01CAF998 ADRP X8, 0x229F000
	0x01CAF99C LDR X8, [X8 + 0xA40]
	0x01CAF9A0 MOVZ W2, 0x1
	0x01CAF9A4 MOV X1, X19
	0x01CAF9A8 MOV X3, X31
	0x01CAF9AC LDR X0, [X8]
	0x01CAF9B0 BL 0x1D69640
	0x01CAF9B4 B 0x1CAF9F0
	0x01CAF9B8 LDR X0, [X23]
	0x01CAF9BC LDR W8, [X0 + 0xE0]
	0x01CAF9C0 CBNZ W8, 0x1CAF9C8
	0x01CAF9C4 BL 0x1B6E8F8
	0x01CAF9C8 ADRP X8, 0x229F000
	0x01CAF9CC LDR X8, [X8 + 0xA68]
	0x01CAF9D0 LDR X3, [X22]
	0x01CAF9D4 LDR X4, [X21]
	0x01CAF9D8 MOVZ W0, 0x20
	0x01CAF9DC LDR X1, [X8]
	0x01CAF9E0 MOVZ W5, 0xA7
	0x01CAF9E4 MOV X2, X31
	0x01CAF9E8 MOV X6, X31
	0x01CAF9EC BL 0x342B7DC
	0x01CAF9F0 LDP X20, X19, [X31 + 0xA0]
	0x01CAF9F4 LDP X22, X21, [X31 + 0x90]
	0x01CAF9F8 LDP X24, X23, [X31 + 0x80]
	0x01CAF9FC LDP X26, X25, [X31 + 0x70]
	0x01CAFA00 LDP X28, X27, [X31 + 0x60]
	0x01CAFA04 LDP X29, X30, [X31 + 0x50]
	0x01CAFA08 LDP D9, D8, [X31 + 0x40]
	0x01CAFA0C LDP D11, D10, [X31 + 0x30]
	0x01CAFA10 LDP D13, D12, [X31 + 0x20]
	0x01CAFA14 LDR V14, [X31 + 0x10]
	0x01CAFA18 ADD X31, X31, 0xB0
	0x01CAFA1C RET
	0x01CAFA20 LDR X8, [X19 + 0x38]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2575000
	005 Move W8, [X20+1191]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x229F000
	012 Move X0, [X0+1144]
	013 Call 0x1B6F7F0
	014 Move W8, 1
	015 Move [X20+1191], W8
	016 Move X0, X19
	017 Call Shotgun.get__ammoLeft, X0
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X0, X19
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Call Shotgun.RPC_Shoot, X0
	024 Return 
	025 Move X8, 0x229F000
	026 Move X8, [X8+1144]
	027 Move X20, [X19+152]
	028 Move X0, [X8]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1B6F8F8
	033 Move X0, X20
	034 Move X1, X31
	035 Move X2, X31
	036 Call Object.op_Inequality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {57}
	041 Move X20, [X19+152]
	042 Move X0, X19
	043 Move X1, X31
	044 Call Component.get_transform, X0
	045 Compare X0, 0
	046 JumpIfEqual {61}
	047 Move X1, X31
	048 Call Transform.get_position, X0
	049 Move X0, X20
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move S3, 1
	053 Move X1, X31
	054 Move X30, [X31+32]
	055 Call SFXManager.PlaySFXAsRPC, X0, X1, V0
	056 Return 
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X30, [X31+32]
	060 Return 
	061 Call 0x1B6FA1C

Method: System.Void HandleRespawned()

Disassembly:
	0x01CAFA24 CBZ X8, 0x1CAFAC4
	0x01CAFA28 MOV W20, W0

ISIL:
	001 Move W1, 2
	002 Call Shotgun.set__ammoLeft, X0, X1
	003 Return 

Method: System.Void .ctor()

Disassembly:
	0x01CAFA2C LDR X0, [X8 + 0x50]
	0x01CAFA30 CBZ X0, 0x1CAFAC4
	0x01CAFA34 MOV X1, X31
	0x01CAFA38 BL 0x1DBEFE4

ISIL:
	001 Move W8, 2
	002 Move X1, X31
	003 Move [X0+184], W8
	004 Call NetworkBehaviour..ctor, X0
	005 Return 

Method: System.Void CopyBackingFieldsToState(System.Boolean param_0)

Disassembly:
	0x01CAFA3C TBZ X0, 0x0, 0x1CAFAB8
	0x01CAFA40 LDR X8, [X19 + 0x38]
	0x01CAFA44 CBZ X8, 0x1CAFAC4
	0x01CAFA48 LDR X0, [X8 + 0x50]
	0x01CAFA4C MOVZ W1, 0x8
	0x01CAFA50 MOV X2, X31
	0x01CAFA54 BL 0x1DD601C
	0x01CAFA58 MOV X21, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W1, [X0+184]
	004 Move X19, X0
	005 Call Shotgun.set__ammoLeft, X0, X1
	006 Move W1, [X19+188]
	007 Move X0, X19
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Call Shotgun.set_reloadTimer, X0, X1
	011 Return 

Method: System.Void CopyStateToBackingFields()

Disassembly:
	0x01CAFA5C MOVZ W0, 0x1
	0x01CAFA60 MOV X1, X31
	0x01CAFA64 BL 0x1D29EBC
	0x01CAFA68 LDR X8, [X19 + 0x40]
	0x01CAFA6C CBZ X8, 0x1CAFAC4
	0x01CAFA70 LDR X8, [X8 + 0x20]
	0x01CAFA74 CBZ X8, 0x1CAFA80
	0x01CAFA78 LDR W0, [X8]
	0x01CAFA7C B 0x1CAFA84

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call Shotgun.get__ammoLeft, X0
	005 Move [X19+184], W0
	006 Move X0, X19
	007 Call Shotgun.get_reloadTimer, X0
	008 Move [X19+188], W0
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return 

Method: System.Void RPC_Shoot@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01CAFA80 MOV X0, X31
	0x01CAFA84 LDR W1, [X19 + 0x68]
	0x01CAFA88 MOVZ W2, 0x3
	0x01CAFA8C MOV X3, X31
	0x01CAFA90 BL 0x1DA8258
	0x01CAFA94 STUR X0, [X21 + 0x1C]
	0x01CAFA98 CBZ X21, 0x1CAFAC4
	0x01CAFA9C MOVZ W8, 0x40
	0x01CAFAA0 STR W8, [X21 + 0xC]
	0x01CAFAA4 LDR X0, [X19 + 0x38]
	0x01CAFAA8 CBZ X0, 0x1CAFAC4
	0x01CAFAAC MOV X1, X21
	0x01CAFAB0 MOV X2, X31
	0x01CAFAB4 BL 0x1D8A710
	0x01CAFAB8 ANDS W31, W20, 0x7
	0x01CAFABC B.NE 0x1CAF5C0
	0x01CAFAC0 B 0x1CAF9F0
	0x01CAFAC4 BL 0x1B6EA1C
	0x01CAFAC8 STR X30, [X31 - 0x20]!
	0x01CAFACC STP X20, X19, [X31 + 0x10]
	0x01CAFAD0 ADRP X20, 0x2574000
	0x01CAFAD4 LDRB W8, [X20 + 0x4B0]
	0x01CAFAD8 MOV X19, X0
	0x01CAFADC TBNZ X8, 0x0, 0x1CAFB00
	0x01CAFAE0 ADRP X0, 0x229F000
	0x01CAFAE4 LDR X0, [X0 + 0x1C0]
	0x01CAFAE8 BL 0x1B6E7F0
	0x01CAFAEC ADRP X0, 0x229F000
	0x01CAFAF0 LDR X0, [X0 + 0xA88]
	0x01CAFAF4 BL 0x1B6E7F0
	0x01CAFAF8 MOVZ W8, 0x1
	0x01CAFAFC STRB W8, [X20 + 0x4B0]
	0x01CAFB00 LDRB W8, [X19 + 0x58]
	0x01CAFB04 CBZ W8, 0x1CAFB10
	0x01CAFB08 STRB W31, [X19 + 0x58]
	0x01CAFB0C B 0x1CAFB4C
	0x01CAFB10 ADRP X20, 0x229F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2575000
	005 Move W8, [X20+1192]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x22A0000
	012 Move X0, [X0+2520]
	013 Call 0x1B6F7F0
	014 Move W8, 1
	015 Move [X20+1192], W8
	016 Move W0, 1
	017 Move X1, X31
	018 Move W20, 1
	019 Call Assert.Check, X0
	020 Compare X19, 0
	021 JumpIfEqual {42}
	022 Move X9, 0x22A0000
	023 Move X9, [X9+2520]
	024 Move [X19+88], W20
	025 Move X8, [X19]
	026 Move X1, [X9]
	027 Move W10, [X8+304]
	028 Move W9, [X1+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, [X8+200]
	031 Add X8, X8, X9
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Call Shotgun.RPC_Shoot, X0
	039 Return 
	040 Move X0, X19
	041 Call 0x1B6FCDC
	042 Call 0x1B6FA1C

Method: System.Void RPC_MuzzleFlash@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01CAFB14 LDR X20, [X20 + 0x1C0]
	0x01CAFB18 LDR X0, [X20]
	0x01CAFB1C LDR W8, [X0 + 0xE0]
	0x01CAFB20 CBNZ W8, 0x1CAFB28
	0x01CAFB24 BL 0x1B6E8F8
	0x01CAFB28 MOV X0, X19
	0x01CAFB2C MOV X1, X31
	0x01CAFB30 BL 0x1D697C8
	0x01CAFB34 LDR X0, [X19 + 0x38]
	0x01CAFB38 CBZ X0, 0x1CAFC40
	0x01CAFB3C MOV X1, X31
	0x01CAFB40 BL 0x1D87040
	0x01CAFB44 CMP W0, 0x4
	0x01CAFB48 B.NE 0x1CAFB58
	0x01CAFB4C LDP X20, X19, [X31 + 0x10]
	0x01CAFB50 LDR X30, [X31], #0x20
	0x01CAFB54 RET
	0x01CAFB58 LDR X0, [X19 + 0x40]
	0x01CAFB5C CBZ X0, 0x1CAFC40
	0x01CAFB60 MOV X1, X31
	0x01CAFB64 BL 0x1D9F538
	0x01CAFB68 TBNZ X0, 0x0, 0x1CAFBA4
	0x01CAFB6C LDR X0, [X20]
	0x01CAFB70 LDR X19, [X19 + 0x40]
	0x01CAFB74 LDR W8, [X0 + 0xE0]
	0x01CAFB78 CBNZ W8, 0x1CAFB80
	0x01CAFB7C BL 0x1B6E8F8
	0x01CAFB80 ADRP X8, 0x229F000
	0x01CAFB84 LDR X8, [X8 + 0xA88]
	0x01CAFB88 MOV X1, X19
	0x01CAFB8C LDP X20, X19, [X31 + 0x10]
	0x01CAFB90 MOVZ W2, 0x1
	0x01CAFB94 LDR X0, [X8]
	0x01CAFB98 MOV X3, X31
	0x01CAFB9C LDR X30, [X31], #0x20
	0x01CAFBA0 B 0x1D69640
	0x01CAFBA4 LDR X8, [X19 + 0x38]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2575000
	005 Move W8, [X20+1193]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x22A0000
	012 Move X0, [X0+2520]
	013 Call 0x1B6F7F0
	014 Move W8, 1
	015 Move [X20+1193], W8
	016 Move W0, 1
	017 Move X1, X31
	018 Move W20, 1
	019 Call Assert.Check, X0
	020 Compare X19, 0
	021 JumpIfEqual {42}
	022 Move X9, 0x22A0000
	023 Move X9, [X9+2520]
	024 Move [X19+88], W20
	025 Move X8, [X19]
	026 Move X1, [X9]
	027 Move W10, [X8+304]
	028 Move W9, [X1+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, [X8+200]
	031 Add X8, X8, X9
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Call Shotgun.RPC_MuzzleFlash, X0
	039 Return 
	040 Move X0, X19
	041 Call 0x1B6FCDC
	042 Call 0x1B6FA1C

Method: System.Void RPC_Reload@Invoker(Fusion.NetworkBehaviour behaviour, Fusion.SimulationMessage* message)

Disassembly:
	0x01CAFBA8 CBZ X8, 0x1CAFC40
	0x01CAFBAC LDR X0, [X8 + 0x50]
	0x01CAFBB0 CBZ X0, 0x1CAFC40
	0x01CAFBB4 MOV X1, X31
	0x01CAFBB8 BL 0x1DBEFE4
	0x01CAFBBC TBZ X0, 0x0, 0x1CAFB4C
	0x01CAFBC0 LDR X8, [X19 + 0x38]
	0x01CAFBC4 CBZ X8, 0x1CAFC40
	0x01CAFBC8 LDR X0, [X8 + 0x50]
	0x01CAFBCC MOVZ W1, 0x8
	0x01CAFBD0 MOV X2, X31
	0x01CAFBD4 BL 0x1DD601C
	0x01CAFBD8 MOV X20, X0
	0x01CAFBDC MOVZ W0, 0x1
	0x01CAFBE0 MOV X1, X31
	0x01CAFBE4 BL 0x1D29EBC
	0x01CAFBE8 LDR X8, [X19 + 0x40]
	0x01CAFBEC CBZ X8, 0x1CAFC40
	0x01CAFBF0 LDR X8, [X8 + 0x20]
	0x01CAFBF4 CBZ X8, 0x1CAFC00
	0x01CAFBF8 LDR W0, [X8]
	0x01CAFBFC B 0x1CAFC04
	0x01CAFC00 MOV X0, X31
	0x01CAFC04 LDR W1, [X19 + 0x68]
	0x01CAFC08 MOVZ W2, 0x4
	0x01CAFC0C MOV X3, X31
	0x01CAFC10 BL 0x1DA8258
	0x01CAFC14 STUR X0, [X20 + 0x1C]
	0x01CAFC18 CBZ X20, 0x1CAFC40
	0x01CAFC1C MOVZ W8, 0x40
	0x01CAFC20 STR W8, [X20 + 0xC]
	0x01CAFC24 LDR X0, [X19 + 0x38]
	0x01CAFC28 CBZ X0, 0x1CAFC40
	0x01CAFC2C MOV X1, X20
	0x01CAFC30 LDP X20, X19, [X31 + 0x10]
	0x01CAFC34 MOV X2, X31
	0x01CAFC38 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2575000
	005 Move W8, [X20+1194]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x22A0000
	012 Move X0, [X0+2520]
	013 Call 0x1B6F7F0
	014 Move W8, 1
	015 Move [X20+1194], W8
	016 Move W0, 1
	017 Move X1, X31
	018 Move W20, 1
	019 Call Assert.Check, X0
	020 Compare X19, 0
	021 JumpIfEqual {42}
	022 Move X9, 0x22A0000
	023 Move X9, [X9+2520]
	024 Move [X19+88], W20
	025 Move X8, [X19]
	026 Move X1, [X9]
	027 Move W10, [X8+304]
	028 Move W9, [X1+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, [X8+200]
	031 Add X8, X8, X9
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Call Shotgun.RPC_Reload, X0
	039 Return 
	040 Move X0, X19
	041 Call 0x1B6FCDC
	042 Call 0x1B6FA1C

