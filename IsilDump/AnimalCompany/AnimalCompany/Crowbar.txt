Type: AnimalCompany.Crowbar

Method: System.Void Awake()

Disassembly:
	0x01C9DB0C BL 0x1B6EA0C
	0x01C9DB10 LDR X2, [X21]
	0x01C9DB14 MOV X1, X19
	0x01C9DB18 MOV X3, X31
	0x01C9DB1C MOV X21, X0
	0x01C9DB20 BL 0x317DB24
	0x01C9DB24 MOV X0, X20
	0x01C9DB28 MOV X1, X21
	0x01C9DB2C MOV X2, X31
	0x01C9DB30 BL 0x322A948
	0x01C9DB34 LDR X1, [X22]
	0x01C9DB38 CBZ X0, 0x1C9DB5C
	0x01C9DB3C LDR X8, [X0]
	0x01C9DB40 CMP X8, X1
	0x01C9DB44 B.NE 0x1C9DBC4
	0x01C9DB48 STR X0, [X23 + 0x190]
	0x01C9DB4C LDR X8, [X0]
	0x01C9DB50 CMP X8, X1
	0x01C9DB54 B.EQ 0x1C9DB60
	0x01C9DB58 B 0x1C9DBC4
	0x01C9DB5C STR X0, [X23 + 0x190]
	0x01C9DB60 LDR X23, [X19 + 0x80]
	0x01C9DB64 CBZ X23, 0x1C9DBDC
	0x01C9DB68 ADRP X21, 0x22B1000
	0x01C9DB6C LDR X20, [X23 + 0x1A8]
	0x01C9DB70 LDR X21, [X21 + 0x310]
	0x01C9DB74 MOV X0, X1
	0x01C9DB78 BL 0x1B6EA0C
	0x01C9DB7C LDR X2, [X21]
	0x01C9DB80 MOV X1, X19
	0x01C9DB84 MOV X3, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2587000
	007 Move X22, 0x22B2000
	008 Move X20, 0x22B2000
	009 Move W8, [X21+1025]
	010 Move X22, [X22+664]
	011 Move X20, [X20+616]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x22B2000
	018 Move X0, [X0+616]
	019 Call 0x1B6F7F0
	020 Move X0, 0x22B2000
	021 Move X0, [X0+664]
	022 Call 0x1B6F7F0
	023 Move W8, 1
	024 Move [X21+1025], W8
	025 Move X1, [X22]
	026 Move X0, X19
	027 Call 0x2090DE8, X0
	028 Move [X19+136], X0
	029 Move X1, [X20]
	030 Move X0, X19
	031 Call 0x2090DE8, X0
	032 Move [X19+144], X0
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return 

Method: System.Void OnCollisionEnter(UnityEngine.Collision collision)

Disassembly:
	0x01C9DB88 MOV X21, X0
	0x01C9DB8C BL 0x317DB24
	0x01C9DB90 MOV X0, X20
	0x01C9DB94 MOV X1, X21
	0x01C9DB98 MOV X2, X31
	0x01C9DB9C BL 0x322A948
	0x01C9DBA0 CBZ X0, 0x1C9DBC8
	0x01C9DBA4 LDR X1, [X22]
	0x01C9DBA8 LDR X8, [X0]
	0x01C9DBAC CMP X8, X1
	0x01C9DBB0 B.NE 0x1C9DBC4
	0x01C9DBB4 STR X0, [X23 + 0x1A8]
	0x01C9DBB8 LDR X8, [X0]
	0x01C9DBBC CMP X8, X1
	0x01C9DBC0 B.EQ 0x1C9DBCC
	0x01C9DBC4 BL 0x1B6ECDC
	0x01C9DBC8 STR X0, [X23 + 0x1A8]
	0x01C9DBCC LDP X20, X19, [X31 + 0x20]
	0x01C9DBD0 LDP X22, X21, [X31 + 0x10]
	0x01C9DBD4 LDP X30, X23, [X31], #0x30
	0x01C9DBD8 RET
	0x01C9DBDC BL 0x1B6EA1C
	0x01C9DBE0 STP X30, X19, [X31 - 0x10]!
	0x01C9DBE4 MOV X1, X31
	0x01C9DBE8 MOV X19, X0
	0x01C9DBEC BL 0x1D65284
	0x01C9DBF0 MOV X0, X19
	0x01C9DBF4 LDP X30, X19, [X31], #0x10
	0x01C9DBF8 B 0x1C9DBFC
	0x01C9DBFC STR X30, [X31 - 0x30]!
	0x01C9DC00 STP X22, X21, [X31 + 0x10]
	0x01C9DC04 STP X20, X19, [X31 + 0x20]
	0x01C9DC08 ADRP X20, 0x2586000
	0x01C9DC0C LDRB W8, [X20 + 0x40B]
	0x01C9DC10 MOV X19, X0
	0x01C9DC14 TBNZ X8, 0x0, 0x1C9DC2C
	0x01C9DC18 ADRP X0, 0x22B1000
	0x01C9DC1C LDR X0, [X0 + 0x320]
	0x01C9DC20 BL 0x1B6E7F0
	0x01C9DC24 MOVZ W8, 0x1
	0x01C9DC28 STRB W8, [X20 + 0x40B]
	0x01C9DC2C LDR X20, [X19 + 0x98]
	0x01C9DC30 MOV X0, X19
	0x01C9DC34 BL 0x1C9D868
	0x01C9DC38 CBZ X20, 0x1C9DD40
	0x01C9DC3C AND W1, W0, 0x1
	0x01C9DC40 MOV X0, X20
	0x01C9DC44 MOV X2, X31
	0x01C9DC48 BL 0x3A9A604
	0x01C9DC4C LDR X20, [X19 + 0x90]
	0x01C9DC50 MOV X0, X19
	0x01C9DC54 BL 0x1C9D868
	0x01C9DC58 CBZ X20, 0x1C9DD40
	0x01C9DC5C AND W1, W0, 0x1
	0x01C9DC60 MOV X0, X20
	0x01C9DC64 MOV X2, X31
	0x01C9DC68 BL 0x3A7B8E0
	0x01C9DC6C LDR X0, [X19 + 0x88]
	0x01C9DC70 CBZ X0, 0x1C9DD40
	0x01C9DC74 MOV X1, X31
	0x01C9DC78 BL 0x3A7BC88
	0x01C9DC7C CBZ X0, 0x1C9DD40
	0x01C9DC80 LDR W9, [X0 + 0x18]
	0x01C9DC84 MOV X8, X0
	0x01C9DC88 CBZ W9, 0x1C9DD44
	0x01C9DC8C ADRP X22, 0x22B1000
	0x01C9DC90 LDR X22, [X22 + 0x320]
	0x01C9DC94 LDR X20, [X8 + 0x20]
	0x01C9DC98 LDR X0, [X22]
	0x01C9DC9C LDR W9, [X0 + 0xE0]
	0x01C9DCA0 CBNZ W9, 0x1C9DCAC
	0x01C9DCA4 BL 0x1B6E8F8
	0x01C9DCA8 LDR X0, [X22]
	0x01C9DCAC LDR X8, [X0 + 0xB8]
	0x01C9DCB0 MOV X0, X19
	0x01C9DCB4 LDR W21, [X8]
	0x01C9DCB8 BL 0x1C9D868
	0x01C9DCBC TBZ X0, 0x0, 0x1C9DCE4
	0x01C9DCC0 LDR X0, [X22]
	0x01C9DCC4 LDR W8, [X0 + 0xE0]
	0x01C9DCC8 CBNZ W8, 0x1C9DCD4
	0x01C9DCCC BL 0x1B6E8F8
	0x01C9DCD0 LDR X0, [X22]
	0x01C9DCD4 LDR X8, [X0 + 0xB8]
	0x01C9DCD8 LDP S0, S1, [X8 + 0x4]
	0x01C9DCDC LDP S2, S3, [X8 + 0xC]
	0x01C9DCE0 B 0x1C9DCF4
	0x01C9DCE4 FMOV S2, W31
	0x01C9DCE8 FMOV S3, 1
	0x01C9DCEC FMOV S1, W31
	0x01C9DCF0 FMOV S0, W31
	0x01C9DCF4 CBZ X20, 0x1C9DD40
	0x01C9DCF8 MOV X0, X20
	0x01C9DCFC MOV W1, W21
	0x01C9DD00 MOV X2, X31
	0x01C9DD04 BL 0x3A7D234
	0x01C9DD08 LDR X20, [X19 + 0xA0]
	0x01C9DD0C MOV X0, X19
	0x01C9DD10 MOV X1, X31
	0x01C9DD14 BL 0x3A9B084
	0x01C9DD18 CBZ X0, 0x1C9DD40
	0x01C9DD1C MOV X1, X31
	0x01C9DD20 BL 0x3AA7658
	0x01C9DD24 MOV X0, X20
	0x01C9DD28 LDP X20, X19, [X31 + 0x20]
	0x01C9DD2C LDP X22, X21, [X31 + 0x10]
	0x01C9DD30 FMOV S3, 1
	0x01C9DD34 MOV X1, X31
	0x01C9DD38 LDR X30, [X31], #0x30
	0x01C9DD3C B 0x1CCD9CC
	0x01C9DD40 BL 0x1B6EA1C
	0x01C9DD44 BL 0x1B6EA24
	0x01C9DD48 STR X30, [X31 - 0x20]!
	0x01C9DD4C STP X20, X19, [X31 + 0x10]
	0x01C9DD50 ADRP X20, 0x2586000
	0x01C9DD54 LDRB W8, [X20 + 0x40A]
	0x01C9DD58 MOV X19, X0
	0x01C9DD5C TBNZ X8, 0x0, 0x1C9DD80
	0x01C9DD60 ADRP X0, 0x22B1000
	0x01C9DD64 LDR X0, [X0 + 0x1C0]
	0x01C9DD68 BL 0x1B6E7F0
	0x01C9DD6C ADRP X0, 0x22B1000
	0x01C9DD70 LDR X0, [X0 + 0x328]
	0x01C9DD74 BL 0x1B6E7F0
	0x01C9DD78 MOVZ W8, 0x1
	0x01C9DD7C STRB W8, [X20 + 0x40A]
	0x01C9DD80 LDRB W8, [X19 + 0x58]
	0x01C9DD84 CBZ W8, 0x1C9DDAC
	0x01C9DD88 STRB W31, [X19 + 0x58]
	0x01C9DD8C MOV X0, X19
	0x01C9DD90 BL 0x1C9D868
	0x01C9DD94 ORN W8, W31, W0, 0x0
	0x01C9DD98 MOV X0, X19
	0x01C9DD9C LDP X20, X19, [X31 + 0x10]
	0x01C9DDA0 AND W1, W8, 0x1
	0x01C9DDA4 LDR X30, [X31], #0x20
	0x01C9DDA8 B 0x1C9D8D0
	0x01C9DDAC ADRP X20, 0x22B1000
	0x01C9DDB0 LDR X20, [X20 + 0x1C0]
	0x01C9DDB4 LDR X0, [X20]
	0x01C9DDB8 LDR W8, [X0 + 0xE0]
	0x01C9DDBC CBNZ W8, 0x1C9DDC4
	0x01C9DDC0 BL 0x1B6E8F8
	0x01C9DDC4 MOV X0, X19
	0x01C9DDC8 MOV X1, X31
	0x01C9DDCC BL 0x1D697C8
	0x01C9DDD0 LDR X0, [X19 + 0x38]
	0x01C9DDD4 CBZ X0, 0x1C9DEE4
	0x01C9DDD8 MOV X1, X31
	0x01C9DDDC BL 0x1D87040
	0x01C9DDE0 CMP W0, 0x4
	0x01C9DDE4 B.NE 0x1C9DDF4
	0x01C9DDE8 LDP X20, X19, [X31 + 0x10]
	0x01C9DDEC LDR X30, [X31], #0x20
	0x01C9DDF0 RET
	0x01C9DDF4 LDR X0, [X19 + 0x40]
	0x01C9DDF8 CBZ X0, 0x1C9DEE4
	0x01C9DDFC MOV X1, X31
	0x01C9DE00 BL 0x1D9F538
	0x01C9DE04 ANDS W31, W0, 0x7
	0x01C9DE08 B.EQ 0x1C9DE6C
	0x01C9DE0C TBNZ X0, 0x0, 0x1C9DD8C
	0x01C9DE10 LDR X8, [X19 + 0x38]
	0x01C9DE14 CBZ X8, 0x1C9DEE4
	0x01C9DE18 LDR X0, [X8 + 0x50]
	0x01C9DE1C CBZ X0, 0x1C9DEE4
	0x01C9DE20 MOV X1, X31
	0x01C9DE24 BL 0x1DBEFE4
	0x01C9DE28 TBZ X0, 0x0, 0x1C9DDE8
	0x01C9DE2C LDR X8, [X19 + 0x38]
	0x01C9DE30 CBZ X8, 0x1C9DEE4
	0x01C9DE34 LDR X0, [X8 + 0x50]
	0x01C9DE38 MOVZ W1, 0x8
	0x01C9DE3C MOV X2, X31
	0x01C9DE40 BL 0x1DD601C
	0x01C9DE44 MOV X20, X0
	0x01C9DE48 MOVZ W0, 0x1
	0x01C9DE4C MOV X1, X31
	0x01C9DE50 BL 0x1D29EBC
	0x01C9DE54 LDR X8, [X19 + 0x40]
	0x01C9DE58 CBZ X8, 0x1C9DEE4
	0x01C9DE5C LDR X8, [X8 + 0x20]
	0x01C9DE60 CBZ X8, 0x1C9DEA4
	0x01C9DE64 LDR W0, [X8]
	0x01C9DE68 B 0x1C9DEA8
	0x01C9DE6C LDR X0, [X20]
	0x01C9DE70 LDR X19, [X19 + 0x40]
	0x01C9DE74 LDR W8, [X0 + 0xE0]
	0x01C9DE78 CBNZ W8, 0x1C9DE80
	0x01C9DE7C BL 0x1B6E8F8
	0x01C9DE80 ADRP X8, 0x22B1000
	0x01C9DE84 LDR X8, [X8 + 0x328]
	0x01C9DE88 MOV X1, X19
	0x01C9DE8C LDP X20, X19, [X31 + 0x10]
	0x01C9DE90 MOVZ W2, 0x7
	0x01C9DE94 LDR X0, [X8]
	0x01C9DE98 MOV X3, X31
	0x01C9DE9C LDR X30, [X31], #0x20
	0x01C9DEA0 B 0x1D69640
	0x01C9DEA4 MOV X0, X31
	0x01C9DEA8 LDR W1, [X19 + 0x68]
	0x01C9DEAC MOVZ W2, 0x1
	0x01C9DEB0 MOV X3, X31
	0x01C9DEB4 BL 0x1DA8258
	0x01C9DEB8 STUR X0, [X20 + 0x1C]
	0x01C9DEBC CBZ X20, 0x1C9DEE4
	0x01C9DEC0 MOVZ W8, 0x40
	0x01C9DEC4 STR W8, [X20 + 0xC]

ISIL:
	001 Move [X31-96], D14
	002 Move [X31+8], D13
	003 Move [X31+16], D12
	004 Move [X31+24], D11
	005 Move [X31+32], D10
	006 Move [X31+40], D9
	007 Move [X31+48], D8
	008 Move [X31+56], X30
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0x2587000
	014 Move W8, [X21+1026]
	015 Move X20, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0x22B2000
	022 Move X0, [X0+672]
	023 Call 0x1B6F7F0
	024 Move X0, 0x22B1000
	025 Move X0, [X0+1208]
	026 Call 0x1B6F7F0
	027 Move X0, 0x22B2000
	028 Move X0, [X0+680]
	029 Call 0x1B6F7F0
	030 Move X0, 0x22B1000
	031 Move X0, [X0+1144]
	032 Call 0x1B6F7F0
	033 Move W8, 1
	034 Move [X21+1026], W8
	035 Move X0, [X19+64]
	036 Compare X0, 0
	037 JumpIfEqual {224}
	038 Move W8, [X0+96]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 2
	041 Compare TEMP, 2
	042 JumpIfEqual {224}
	043 Move X1, X31
	044 Call NetworkObject.get_HasStateAuthority, X0
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {224}
	049 Move X0, X31
	050 Call Time.get_time
	051 Move V1, [X19+152]
	052 Subtract S0, S0, S1
	053 Move S1, 0.5
	054 NotImplemented "Instruction FCMP not yet implemented."
	055 Compare X20, 0
	056 JumpIfEqual {237}
	057 Move X0, X20
	058 Move X1, X31
	059 Call Collision.get_contacts, X0
	060 Compare X0, 0
	061 JumpIfEqual {237}
	062 Move W8, [X0+24]
	063 Compare W8, 0
	064 JumpIfEqual {238}
	065 Add X0, X0, 32
	066 Move X1, X31
	067 Call ContactPoint.get_point, X0
	068 Move X0, X20
	069 Move X1, X31
	070 Move V8, V0
	071 Move V9, V1
	072 Move V10, V2
	073 Call Collision.get_gameObject, X0
	074 Compare X0, 0
	075 JumpIfEqual {237}
	076 Move X8, 0x22B2000
	077 Move X8, [X8+672]
	078 Move X1, [X8]
	079 Call 0x20D04D0, X0
	080 Compare X0, 0
	081 JumpIfEqual {146}
	082 Move X8, 0x22B2000
	083 Move X8, [X8+680]
	084 Move X9, [X0]
	085 Move X21, X0
	086 Move X8, [X8]
	087 Move W11, [X9+304]
	088 Move W10, [X8+304]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X9, [X9+200]
	091 Add X9, X9, X10
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X0, X21
	095 Move X1, X31
	096 Call NetPlayer.get_IsMine, X0
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfEqual {224}
	101 Move X0, X20
	102 Move X1, X31
	103 Call Collision.get_relativeVelocity, X0
	104 Move V11, V0
	105 Move V12, V1
	106 Multiply S0, S0, S0
	107 Multiply S1, S1, S1
	108 Move V14, V2
	109 Multiply S2, S2, S2
	110 Add S0, S0, S1
	111 Move W8, 0x42480000
	112 Add S0, S2, S0
	113 Move S1, W8
	114 NotImplemented "Instruction FCMP not yet implemented."
	115 Move X0, [X19+136]
	116 Compare X0, 0
	117 JumpIfEqual {237}
	118 Move X1, X31
	119 Call Rigidbody.get_mass, X0
	120 Move X8, [X19+144]
	121 Compare X8, 0
	122 JumpIfEqual {237}
	123 Move X9, [X8+128]
	124 Compare X9, 0
	125 JumpIfEqual {237}
	126 Move X10, 0x22B1000
	127 Move X8, [X21]
	128 Move X22, [X9+24]
	129 Move X10, [X10+1208]
	130 Multiply S13, S11, S0
	131 NotImplemented "Instruction LDRH not yet implemented."
	132 Multiply S12, S12, S0
	133 Move X1, [X10]
	134 Multiply S11, S14, S0
	135 Compare X9, 0
	136 JumpIfEqual {143}
	137 Move X10, [X8+176]
	138 Add X10, X10, 8
	139 NotImplemented "Instruction LDUR not yet implemented."
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Subtract X9, X9, 1
	142 Add X10, X10, 16
	143 Move X0, X21
	144 Move W2, W31
	145 Call 0x1BB5284
	146 Move X0, X20
	147 Move X1, X31
	148 Call Collision.get_rigidbody, X0
	149 Move X8, 0x22B1000
	150 Move X8, [X8+1144]
	151 Move X21, X0
	152 Move X8, [X8]
	153 Move W9, [X8+224]
	154 Compare W9, 0
	155 JumpIfNotEqual {158}
	156 Move X0, X8
	157 Call 0x1B6F8F8
	158 Move X0, X21
	159 Move X1, X31
	160 Move X2, X31
	161 Call Object.op_Inequality, X0, X1
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfNotEqual {224}
	166 Move X0, X20
	167 Move X1, X31
	168 Call Collision.get_rigidbody, X0
	169 Move X21, X0
	170 Move X0, X20
	171 Move X1, X31
	172 Call Collision.get_relativeVelocity, X0
	173 Compare X21, 0
	174 JumpIfEqual {237}
	175 Move S3, 20
	176 Multiply S2, S2, S3
	177 Multiply S1, S1, S3
	178 Multiply S0, S0, S3
	179 Move X0, X21
	180 Move V3, V8
	181 Move V4, V9
	182 Move V5, V10
	183 Move X1, X31
	184 Call Rigidbody.AddForceAtPosition, X0, X1, X2
	185 NotImplemented "Instruction LDRSW not yet implemented."
	186 Add X8, X8, X9
	187 Add X0, X8, 312
	188 Move X8, [X0]
	189 Move X5, [X0+8]
	190 Move W1, 15
	191 Move X0, X21
	192 Move V0, V8
	193 Move V1, V9
	194 Move V2, V10
	195 Move X2, X31
	196 Move X3, X31
	197 Move V3, V13
	198 Move V4, V12
	199 Move V5, V11
	200 Move X4, X22
	201 NotImplemented "Instruction BLR not yet implemented."
	202 Move X0, X20
	203 Move X1, X31
	204 Call Collision.get_relativeVelocity, X0
	205 Multiply S0, S0, S0
	206 Multiply S1, S1, S1
	207 Multiply S2, S2, S2
	208 Move W8, 0x43480000
	209 Move X0, [X19+128]
	210 Add S0, S0, S1
	211 Move S1, W8
	212 Add S0, S2, S0
	213 NotImplemented "Instruction FDIV not yet implemented."
	214 Move S1, 1
	215 NotImplemented "Instruction FMIN not yet implemented."
	216 Move V0, V8
	217 Move V1, V9
	218 Move V2, V10
	219 Move X1, X31
	220 Call SFXManager.PlaySFXAsRPC, X0, X1, V0
	221 Move X0, X31
	222 Call Time.get_fixedTime
	223 Move [X19+152], S0
	224 Move X20, [X31+80]
	225 Move X19, [X31+88]
	226 Move X22, [X31+64]
	227 Move X21, [X31+72]
	228 Move X30, [X31+56]
	229 Move D9, [X31+40]
	230 Move D8, [X31+48]
	231 Move D11, [X31+24]
	232 Move D10, [X31+32]
	233 Move D13, [X31+8]
	234 Move D12, [X31+16]
	235 Move V14, [X31+96]
	236 Return 
	237 Call 0x1B6FA1C
	238 Call 0x1B6FA24

Method: System.Void OnTriggerEnter(UnityEngine.Collider other)

Disassembly:
	0x01C9DEC8 LDR X0, [X19 + 0x38]
	0x01C9DECC CBZ X0, 0x1C9DEE4
	0x01C9DED0 MOV X1, X20
	0x01C9DED4 LDP X20, X19, [X31 + 0x10]
	0x01C9DED8 MOV X2, X31
	0x01C9DEDC LDR X30, [X31], #0x20
	0x01C9DEE0 B 0x1D8A710
	0x01C9DEE4 BL 0x1B6EA1C
	0x01C9DEE8 B 0x1C9DD48
	0x01C9DEEC SUB X31, X31, 0x20
	0x01C9DEF0 STP X30, X19, [X31 + 0x10]
	0x01C9DEF4 MOV X19, X0
	0x01C9DEF8 LDR X0, [X0 + 0x40]
	0x01C9DEFC CBZ X0, 0x1C9DF54
	0x01C9DF00 LDRB W8, [X0 + 0x60]
	0x01C9DF04 TBNZ X8, 0x1, 0x1C9DF54
	0x01C9DF08 MOV X1, X31
	0x01C9DF0C BL 0x1D9E780
	0x01C9DF10 TBZ X0, 0x0, 0x1C9DF54
	0x01C9DF14 MOV X0, X19
	0x01C9DF18 BL 0x1C9D868
	0x01C9DF1C TBZ X0, 0x0, 0x1C9DF54
	0x01C9DF20 LDR X0, [X19 + 0x80]
	0x01C9DF24 CBZ X0, 0x1C9DF60
	0x01C9DF28 BL 0x1C9DF64
	0x01C9DF2C STR X0, [X31 + 0x8]
	0x01C9DF30 ADD X0, X31, 0x8
	0x01C9DF34 MOV X1, X31
	0x01C9DF38 BL 0x1D680F0
	0x01C9DF3C TBZ X0, 0x0, 0x1C9DF54
	0x01C9DF40 MOV X0, X19
	0x01C9DF44 MOV W1, W31
	0x01C9DF48 BL 0x1C9D8D0
	0x01C9DF4C MOV X0, X19
	0x01C9DF50 BL 0x1C9DBFC
	0x01C9DF54 LDP X30, X19, [X31 + 0x10]
	0x01C9DF58 ADD X31, X31, 0x20
	0x01C9DF5C RET
	0x01C9DF60 BL 0x1B6EA1C
	0x01C9DF64 STP X30, X19, [X31 - 0x10]!
	0x01C9DF68 LDR X8, [X0 + 0x50]
	0x01C9DF6C CBZ X8, 0x1C9DF7C
	0x01C9DF70 LDR X0, [X8 + 0x8]
	0x01C9DF74 LDP X30, X19, [X31], #0x10
	0x01C9DF78 RET
	0x01C9DF7C ADRP X0, 0x22B0000
	0x01C9DF80 LDR X0, [X0 + 0x490]
	0x01C9DF84 BL 0x1B6E804
	0x01C9DF88 BL 0x1B6EA0C
	0x01C9DF8C MOV X19, X0
	0x01C9DF90 ADRP X0, 0x22B1000
	0x01C9DF94 LDR X0, [X0 + 0x330]
	0x01C9DF98 BL 0x1B6E804
	0x01C9DF9C MOV X1, X0
	0x01C9DFA0 MOV X0, X19
	0x01C9DFA4 MOV X2, X31
	0x01C9DFA8 BL 0x31E7550
	0x01C9DFAC ADRP X0, 0x22B1000
	0x01C9DFB0 LDR X0, [X0 + 0x338]
	0x01C9DFB4 BL 0x1B6E804
	0x01C9DFB8 MOV X1, X0
	0x01C9DFBC MOV X0, X19
	0x01C9DFC0 BL 0x1B6E8E8
	0x01C9DFC4 MOV X1, X31
	0x01C9DFC8 B 0x1D661D8
	0x01C9DFCC STP X30, X21, [X31 - 0x20]!
	0x01C9DFD0 STP X20, X19, [X31 + 0x10]
	0x01C9DFD4 ADRP X20, 0x2586000
	0x01C9DFD8 ADRP X21, 0x22B1000
	0x01C9DFDC ADRP X19, 0x22B1000
	0x01C9DFE0 LDRB W8, [X20 + 0x40C]
	0x01C9DFE4 LDR X21, [X21 + 0x340]
	0x01C9DFE8 LDR X19, [X19 + 0x320]
	0x01C9DFEC TBNZ X8, 0x0, 0x1C9E010
	0x01C9DFF0 ADRP X0, 0x22B1000
	0x01C9DFF4 LDR X0, [X0 + 0x320]
	0x01C9DFF8 BL 0x1B6E7F0
	0x01C9DFFC ADRP X0, 0x22B1000
	0x01C9E000 LDR X0, [X0 + 0x340]
	0x01C9E004 BL 0x1B6E7F0
	0x01C9E008 MOVZ W8, 0x1
	0x01C9E00C STRB W8, [X20 + 0x40C]
	0x01C9E010 LDR X0, [X21]
	0x01C9E014 MOV X1, X31
	0x01C9E018 BL 0x3A7AE20
	0x01C9E01C LDR X8, [X19]
	0x01C9E020 ADRP X9, 0xFFFFFFFFFEE0C000
	0x01C9E024 LDR V0, [X9 + 0x6E]
	0x01C9E028 LDP X20, X19, [X31 + 0x10]
	0x01C9E02C LDR X8, [X8 + 0xB8]
	0x01C9E030 STR W0, [X8]
	0x01C9E034 STUR V0, [X8 + 0x4]
	0x01C9E038 LDP X30, X21, [X31], #0x20
	0x01C9E03C RET
	0x01C9E040 LDRB W1, [X0 + 0xA8]
	0x01C9E044 B 0x1C9D8D0
	0x01C9E048 STP X30, X19, [X31 - 0x10]!
	0x01C9E04C MOV X19, X0
	0x01C9E050 BL 0x1C9D868
	0x01C9E054 AND W8, W0, 0x1
	0x01C9E058 STRB W8, [X19 + 0xA8]
	0x01C9E05C LDP X30, X19, [X31], #0x10
	0x01C9E060 RET
	0x01C9E064 STR X30, [X31 - 0x20]!
	0x01C9E068 STP X20, X19, [X31 + 0x10]
	0x01C9E06C ADRP X20, 0x2585000
	0x01C9E070 LDRB W8, [X20 + 0x40D]
	0x01C9E074 MOV X19, X0
	0x01C9E078 TBNZ X8, 0x0, 0x1C9E090
	0x01C9E07C ADRP X0, 0x22B0000
	0x01C9E080 LDR X0, [X0 + 0x320]
	0x01C9E084 BL 0x1B6E7F0
	0x01C9E088 MOVZ W8, 0x1
	0x01C9E08C STRB W8, [X20 + 0x40D]
	0x01C9E090 MOVZ W0, 0x1
	0x01C9E094 MOV X1, X31
	0x01C9E098 MOVZ W20, 0x1
	0x01C9E09C BL 0x1D29EBC
	0x01C9E0A0 CBZ X19, 0x1C9E0F4
	0x01C9E0A4 ADRP X9, 0x22B0000
	0x01C9E0A8 LDR X9, [X9 + 0x320]
	0x01C9E0AC STRB W20, [X19 + 0x58]
	0x01C9E0B0 LDR X8, [X19]
	0x01C9E0B4 LDR X1, [X9]
	0x01C9E0B8 LDRB W10, [X8 + 0x130]
	0x01C9E0BC LDRB W9, [X1 + 0x130]
	0x01C9E0C0 CMP W10, W9
	0x01C9E0C4 B.CC 0x1C9E0EC
	0x01C9E0C8 LDR X8, [X8 + 0xC8]
	0x01C9E0CC ADD X8, X8, X9, 0x3, LSL
	0x01C9E0D0 LDUR X8, [X8 - 0x8]
	0x01C9E0D4 CMP X8, X1
	0x01C9E0D8 B.NE 0x1C9E0EC
	0x01C9E0DC MOV X0, X19
	0x01C9E0E0 LDP X20, X19, [X31 + 0x10]
	0x01C9E0E4 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-80], D13
	002 Move [X31-72], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0x2587000
	012 Move W8, [X21+1027]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x22B2000
	020 Move X0, [X0+688]
	021 Call 0x1B6F7F0
	022 Move X0, 0x22B1000
	023 Move X0, [X0+1144]
	024 Call 0x1B6F7F0
	025 Move W8, 1
	026 Move [X21+1027], W8
	027 Move X0, [X19+64]
	028 Compare X0, 0
	029 JumpIfEqual {160}
	030 Move W8, [X0+96]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 2
	033 Compare TEMP, 2
	034 JumpIfEqual {160}
	035 Move X1, X31
	036 Call NetworkObject.get_HasStateAuthority, X0
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {160}
	041 Move X0, X31
	042 Call Time.get_time
	043 Move V1, [X19+152]
	044 Subtract S0, S0, S1
	045 Move S1, 0.5
	046 NotImplemented "Instruction FCMP not yet implemented."
	047 Compare X20, 0
	048 JumpIfEqual {171}
	049 Move X8, 0x22B2000
	050 Move X8, [X8+688]
	051 Move X0, X20
	052 Move X1, [X8]
	053 Call 0x2090DE8, X0
	054 Move X8, 0x22B1000
	055 Move X8, [X8+1144]
	056 Move X20, X0
	057 Move X8, [X8]
	058 Move W9, [X8+224]
	059 Compare W9, 0
	060 JumpIfNotEqual {63}
	061 Move X0, X8
	062 Call 0x1B6F8F8
	063 Move X0, X20
	064 Move X1, X31
	065 Move X2, X31
	066 Call Object.op_Inequality, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {160}
	071 Compare X20, 0
	072 JumpIfEqual {171}
	073 Move X0, X20
	074 Move X1, X31
	075 Call NetPlayer.get_IsMine, X0
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {160}
	080 Move X0, X19
	081 Move X1, X31
	082 Call Component.get_transform, X0
	083 Compare X0, 0
	084 JumpIfEqual {171}
	085 Move X1, X31
	086 Call Transform.get_position, X0
	087 Move X0, [X19+136]
	088 Compare X0, 0
	089 JumpIfEqual {171}
	090 Move X1, X31
	091 Move V8, V0
	092 Move V9, V1
	093 Move V10, V2
	094 Call Rigidbody.get_velocity, X0
	095 Move X0, [X19+136]
	096 Compare X0, 0
	097 JumpIfEqual {171}
	098 Move X1, X31
	099 Move V13, V0
	100 Move V11, V1
	101 Move V12, V2
	102 Call Rigidbody.get_mass, X0
	103 Move X8, [X19+144]
	104 Compare X8, 0
	105 JumpIfEqual {171}
	106 Move X8, [X8+128]
	107 Compare X8, 0
	108 JumpIfEqual {171}
	109 Move X9, -18825216
	110 Move V2, [X9+3336]
	111 Move X4, [X8+24]
	112 Multiply S1, S13, S0
	113 Multiply S4, S11, S0
	114 Multiply S0, S12, S0
	115 Multiply S3, S1, S2
	116 Multiply S4, S4, S2
	117 Multiply S5, S0, S2
	118 Move W1, 15
	119 Move X0, X20
	120 Move V0, V8
	121 Move V1, V9
	122 Move V2, V10
	123 Move X2, X31
	124 Move X3, X31
	125 Move X5, X31
	126 Call NetPlayer.Hit, X0, X1, X2, X3, X4, X5, X6
	127 Move X0, [X19+136]
	128 Compare X0, 0
	129 JumpIfEqual {171}
	130 Move X1, X31
	131 Call Rigidbody.get_velocity, X0
	132 Move X20, [X19+128]
	133 Move X0, X19
	134 Move X1, X31
	135 Move V8, V0
	136 Move V9, V1
	137 Move V10, V2
	138 Call Component.get_transform, X0
	139 Compare X0, 0
	140 JumpIfEqual {171}
	141 Multiply S0, S8, S8
	142 Multiply S1, S9, S9
	143 Multiply S2, S10, S10
	144 Move W8, 0x42C80000
	145 Add S0, S0, S1
	146 Move S1, W8
	147 Add S0, S2, S0
	148 NotImplemented "Instruction FDIV not yet implemented."
	149 Move S1, 1
	150 Move X1, X31
	151 NotImplemented "Instruction FMIN not yet implemented."
	152 Call Transform.get_position, X0
	153 Move X0, X20
	154 Move V3, V8
	155 Move X1, X31
	156 Call SFXManager.PlaySFXAsRPC, X0, X1, V0
	157 Move X0, X31
	158 Call Time.get_fixedTime
	159 Move [X19+152], S0
	160 Move X20, [X31+64]
	161 Move X19, [X31+72]
	162 Move X30, [X31+48]
	163 Move X21, [X31+56]
	164 Move D9, [X31+32]
	165 Move D8, [X31+40]
	166 Move D11, [X31+16]
	167 Move D10, [X31+24]
	168 Move D13, [X31+80]
	169 Move D12, [X31+88]
	170 Return 
	171 Call 0x1B6FA1C

Method: System.Void .ctor()

Disassembly:
	0x01C9E0E8 B 0x1C9DD48
	0x01C9E0EC MOV X0, X19

ISIL:
	001 Move X1, X31
	002 Call NetworkBehaviour..ctor, X0
	003 Return 

Method: System.Void CopyBackingFieldsToState(System.Boolean param_0)

Disassembly:
	0x01C9E0F0 BL 0x1B6ECDC

ISIL:
	001 Return 

Method: System.Void CopyStateToBackingFields()

Disassembly:
	0x01C9E0F4 BL 0x1B6EA1C

ISIL:
	001 Return 

