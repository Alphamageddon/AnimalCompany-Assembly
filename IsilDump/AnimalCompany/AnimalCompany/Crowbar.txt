Type: AnimalCompany.Crowbar

Method: System.Void Awake()

Disassembly:
	0x01D8E1B0 LDR X8, [X0]
	0x01D8E1B4 CMP X8, X1
	0x01D8E1B8 B.NE 0x1D8E1CC
	0x01D8E1BC STR X0, [X23 + 0x1E8]
	0x01D8E1C0 LDR X8, [X0]
	0x01D8E1C4 CMP X8, X1
	0x01D8E1C8 B.EQ 0x1D8E1D4
	0x01D8E1CC BL 0x1C171E0
	0x01D8E1D0 STR X0, [X23 + 0x1E8]
	0x01D8E1D4 LDP X20, X19, [X31 + 0x20]
	0x01D8E1D8 LDP X22, X21, [X31 + 0x10]
	0x01D8E1DC LDP X30, X23, [X31], #0x30
	0x01D8E1E0 RET
	0x01D8E1E4 BL 0x1C16F20
	0x01D8E1E8 STP X30, X23, [X31 - 0x30]!
	0x01D8E1EC STP X22, X21, [X31 + 0x10]
	0x01D8E1F0 STP X20, X19, [X31 + 0x20]
	0x01D8E1F4 ADRP X20, 0x264A000
	0x01D8E1F8 ADRP X21, 0x2368000
	0x01D8E1FC LDRB W8, [X20 + 0x9E4]
	0x01D8E200 LDR X21, [X21 + 0xA78]
	0x01D8E204 MOV X19, X0
	0x01D8E208 TBNZ X8, 0x0, 0x1D8E244
	0x01D8E20C ADRP X0, 0x2366000
	0x01D8E210 LDR X0, [X0 + 0xE70]
	0x01D8E214 BL 0x1C16CF4
	0x01D8E218 ADRP X0, 0x2368000
	0x01D8E21C LDR X0, [X0 + 0xC58]
	0x01D8E220 BL 0x1C16CF4
	0x01D8E224 ADRP X0, 0x2368000
	0x01D8E228 LDR X0, [X0 + 0xC60]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x264B000
	007 Move X22, 0x2369000
	008 Move X20, 0x2369000
	009 Move W8, [X21+2524]
	010 Move X22, [X22+2968]
	011 Move X20, [X20+3000]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2369000
	018 Move X0, [X0+3000]
	019 Call 0x1C17CF4
	020 Move X0, 0x2369000
	021 Move X0, [X0+2968]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2524], W8
	025 Move X1, [X22]
	026 Move X0, X19
	027 Call 0x21A4894, X0
	028 Move [X19+136], X0
	029 Move X1, [X20]
	030 Move X0, X19
	031 Call 0x21A4894, X0
	032 Move [X19+144], X0
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return 

Method: System.Void OnCollisionEnter(UnityEngine.Collision collision)

Disassembly:
	0x01D8E22C BL 0x1C16CF4
	0x01D8E230 ADRP X0, 0x2368000
	0x01D8E234 LDR X0, [X0 + 0xA78]
	0x01D8E238 BL 0x1C16CF4
	0x01D8E23C MOVZ W8, 0x1
	0x01D8E240 STRB W8, [X20 + 0x9E4]
	0x01D8E244 LDR X0, [X21]
	0x01D8E248 LDR W8, [X0 + 0xE0]
	0x01D8E24C CBNZ W8, 0x1D8E254
	0x01D8E250 BL 0x1C16DFC
	0x01D8E254 CBZ X19, 0x1D8E354
	0x01D8E258 LDR W8, [X19 + 0x30]
	0x01D8E25C LDR X23, [X19 + 0x80]
	0x01D8E260 ORR W8, W8, 0x8
	0x01D8E264 STR W8, [X19 + 0x30]
	0x01D8E268 CBZ X23, 0x1D8E354
	0x01D8E26C ADRP X22, 0x2366000
	0x01D8E270 LDR X22, [X22 + 0xE70]
	0x01D8E274 ADRP X21, 0x2368000
	0x01D8E278 LDR X20, [X23 + 0x1D0]
	0x01D8E27C LDR X0, [X22]
	0x01D8E280 LDR X21, [X21 + 0xC60]
	0x01D8E284 BL 0x1C16F10
	0x01D8E288 LDR X2, [X21]
	0x01D8E28C MOV X1, X19
	0x01D8E290 MOV X3, X31
	0x01D8E294 MOV X21, X0
	0x01D8E298 BL 0x3314368
	0x01D8E29C MOV X0, X20
	0x01D8E2A0 MOV X1, X21
	0x01D8E2A4 MOV X2, X31
	0x01D8E2A8 BL 0x33C0FDC
	0x01D8E2AC LDR X1, [X22]
	0x01D8E2B0 CBZ X0, 0x1D8E2D4
	0x01D8E2B4 LDR X8, [X0]
	0x01D8E2B8 CMP X8, X1
	0x01D8E2BC B.NE 0x1D8E33C
	0x01D8E2C0 STR X0, [X23 + 0x1D0]
	0x01D8E2C4 LDR X8, [X0]
	0x01D8E2C8 CMP X8, X1
	0x01D8E2CC B.EQ 0x1D8E2D8
	0x01D8E2D0 B 0x1D8E33C
	0x01D8E2D4 STR X0, [X23 + 0x1D0]
	0x01D8E2D8 LDR X23, [X19 + 0x80]
	0x01D8E2DC CBZ X23, 0x1D8E354
	0x01D8E2E0 ADRP X21, 0x2368000
	0x01D8E2E4 LDR X20, [X23 + 0x1E8]
	0x01D8E2E8 LDR X21, [X21 + 0xC58]
	0x01D8E2EC MOV X0, X1
	0x01D8E2F0 BL 0x1C16F10
	0x01D8E2F4 LDR X2, [X21]
	0x01D8E2F8 MOV X1, X19
	0x01D8E2FC MOV X3, X31
	0x01D8E300 MOV X21, X0
	0x01D8E304 BL 0x3314368
	0x01D8E308 MOV X0, X20
	0x01D8E30C MOV X1, X21
	0x01D8E310 MOV X2, X31
	0x01D8E314 BL 0x33C0FDC
	0x01D8E318 CBZ X0, 0x1D8E340
	0x01D8E31C LDR X1, [X22]
	0x01D8E320 LDR X8, [X0]
	0x01D8E324 CMP X8, X1
	0x01D8E328 B.NE 0x1D8E33C
	0x01D8E32C STR X0, [X23 + 0x1E8]
	0x01D8E330 LDR X8, [X0]
	0x01D8E334 CMP X8, X1
	0x01D8E338 B.EQ 0x1D8E344
	0x01D8E33C BL 0x1C171E0
	0x01D8E340 STR X0, [X23 + 0x1E8]
	0x01D8E344 LDP X20, X19, [X31 + 0x20]
	0x01D8E348 LDP X22, X21, [X31 + 0x10]
	0x01D8E34C LDP X30, X23, [X31], #0x30
	0x01D8E350 RET
	0x01D8E354 BL 0x1C16F20
	0x01D8E358 STP X30, X19, [X31 - 0x10]!
	0x01D8E35C MOV X1, X31
	0x01D8E360 MOV X19, X0
	0x01D8E364 BL 0x1E73F88
	0x01D8E368 MOV X0, X19
	0x01D8E36C LDP X30, X19, [X31], #0x10
	0x01D8E370 B 0x1D8E374
	0x01D8E374 STR X30, [X31 - 0x30]!
	0x01D8E378 STP X22, X21, [X31 + 0x10]
	0x01D8E37C STP X20, X19, [X31 + 0x20]
	0x01D8E380 ADRP X20, 0x264A000
	0x01D8E384 LDRB W8, [X20 + 0x9E6]
	0x01D8E388 MOV X19, X0
	0x01D8E38C TBNZ X8, 0x0, 0x1D8E3A4
	0x01D8E390 ADRP X0, 0x2368000
	0x01D8E394 LDR X0, [X0 + 0xC68]
	0x01D8E398 BL 0x1C16CF4
	0x01D8E39C MOVZ W8, 0x1
	0x01D8E3A0 STRB W8, [X20 + 0x9E6]
	0x01D8E3A4 LDR X20, [X19 + 0x98]
	0x01D8E3A8 MOV X0, X19
	0x01D8E3AC BL 0x1D8DFE0
	0x01D8E3B0 CBZ X20, 0x1D8E4E0
	0x01D8E3B4 AND W1, W0, 0x1
	0x01D8E3B8 MOV X0, X20
	0x01D8E3BC MOV X2, X31
	0x01D8E3C0 BL 0x3C32410
	0x01D8E3C4 LDR X8, [X19 + 0xA0]
	0x01D8E3C8 CBZ X8, 0x1D8E4E0
	0x01D8E3CC LDR X20, [X8 + 0x30]
	0x01D8E3D0 MOV X0, X19
	0x01D8E3D4 BL 0x1D8DFE0
	0x01D8E3D8 CBZ X20, 0x1D8E4E0
	0x01D8E3DC AND W1, W0, 0x1
	0x01D8E3E0 MOV X0, X20
	0x01D8E3E4 MOV X2, X31
	0x01D8E3E8 BL 0x3C8F748
	0x01D8E3EC LDR X20, [X19 + 0x90]
	0x01D8E3F0 MOV X0, X19
	0x01D8E3F4 BL 0x1D8DFE0
	0x01D8E3F8 CBZ X20, 0x1D8E4E0
	0x01D8E3FC AND W1, W0, 0x1
	0x01D8E400 MOV X0, X20
	0x01D8E404 MOV X2, X31
	0x01D8E408 BL 0x3C13034
	0x01D8E40C LDR X0, [X19 + 0x88]
	0x01D8E410 CBZ X0, 0x1D8E4E0
	0x01D8E414 MOV X1, X31
	0x01D8E418 BL 0x3C133DC
	0x01D8E41C CBZ X0, 0x1D8E4E0
	0x01D8E420 LDR W9, [X0 + 0x18]
	0x01D8E424 MOV X8, X0
	0x01D8E428 CBZ W9, 0x1D8E4E4
	0x01D8E42C ADRP X22, 0x2368000
	0x01D8E430 LDR X22, [X22 + 0xC68]
	0x01D8E434 LDR X20, [X8 + 0x20]
	0x01D8E438 LDR X0, [X22]
	0x01D8E43C LDR W9, [X0 + 0xE0]
	0x01D8E440 CBNZ W9, 0x1D8E44C
	0x01D8E444 BL 0x1C16DFC
	0x01D8E448 LDR X0, [X22]
	0x01D8E44C LDR X8, [X0 + 0xB8]
	0x01D8E450 MOV X0, X19
	0x01D8E454 LDR W21, [X8]
	0x01D8E458 BL 0x1D8DFE0
	0x01D8E45C TBZ X0, 0x0, 0x1D8E484
	0x01D8E460 LDR X0, [X22]
	0x01D8E464 LDR W8, [X0 + 0xE0]
	0x01D8E468 CBNZ W8, 0x1D8E474
	0x01D8E46C BL 0x1C16DFC
	0x01D8E470 LDR X0, [X22]
	0x01D8E474 LDR X8, [X0 + 0xB8]
	0x01D8E478 LDP S0, S1, [X8 + 0x4]
	0x01D8E47C LDP S2, S3, [X8 + 0xC]
	0x01D8E480 B 0x1D8E494
	0x01D8E484 FMOV S2, W31
	0x01D8E488 FMOV S3, 1
	0x01D8E48C FMOV S1, W31
	0x01D8E490 FMOV S0, W31
	0x01D8E494 CBZ X20, 0x1D8E4E0
	0x01D8E498 MOV X0, X20
	0x01D8E49C MOV W1, W21
	0x01D8E4A0 MOV X2, X31
	0x01D8E4A4 BL 0x3C14988
	0x01D8E4A8 LDR X20, [X19 + 0xA8]
	0x01D8E4AC MOV X0, X19
	0x01D8E4B0 MOV X1, X31
	0x01D8E4B4 BL 0x3C32E90
	0x01D8E4B8 CBZ X0, 0x1D8E4E0
	0x01D8E4BC MOV X1, X31
	0x01D8E4C0 BL 0x3C3F58C
	0x01D8E4C4 MOV X0, X20
	0x01D8E4C8 LDP X20, X19, [X31 + 0x20]
	0x01D8E4CC LDP X22, X21, [X31 + 0x10]
	0x01D8E4D0 FMOV S3, 1
	0x01D8E4D4 MOV X1, X31
	0x01D8E4D8 LDR X30, [X31], #0x30
	0x01D8E4DC B 0x1DD1B94
	0x01D8E4E0 BL 0x1C16F20
	0x01D8E4E4 BL 0x1C16F28
	0x01D8E4E8 STR X30, [X31 - 0x20]!
	0x01D8E4EC STP X20, X19, [X31 + 0x10]
	0x01D8E4F0 ADRP X20, 0x264A000
	0x01D8E4F4 LDRB W8, [X20 + 0x9E5]
	0x01D8E4F8 MOV X19, X0
	0x01D8E4FC TBNZ X8, 0x0, 0x1D8E520
	0x01D8E500 ADRP X0, 0x2368000
	0x01D8E504 LDR X0, [X0 + 0xA78]
	0x01D8E508 BL 0x1C16CF4
	0x01D8E50C ADRP X0, 0x2368000
	0x01D8E510 LDR X0, [X0 + 0xC70]
	0x01D8E514 BL 0x1C16CF4
	0x01D8E518 MOVZ W8, 0x1
	0x01D8E51C STRB W8, [X20 + 0x9E5]
	0x01D8E520 LDRB W8, [X19 + 0x58]
	0x01D8E524 CBZ W8, 0x1D8E54C
	0x01D8E528 STRB W31, [X19 + 0x58]
	0x01D8E52C MOV X0, X19
	0x01D8E530 BL 0x1D8DFE0
	0x01D8E534 ORN W8, W31, W0, 0x0
	0x01D8E538 MOV X0, X19
	0x01D8E53C LDP X20, X19, [X31 + 0x10]
	0x01D8E540 AND W1, W8, 0x1
	0x01D8E544 LDR X30, [X31], #0x20
	0x01D8E548 B 0x1D8E048
	0x01D8E54C ADRP X20, 0x2368000
	0x01D8E550 LDR X20, [X20 + 0xA78]
	0x01D8E554 LDR X0, [X20]
	0x01D8E558 LDR W8, [X0 + 0xE0]
	0x01D8E55C CBNZ W8, 0x1D8E564
	0x01D8E560 BL 0x1C16DFC
	0x01D8E564 MOV X0, X19
	0x01D8E568 MOV X1, X31
	0x01D8E56C BL 0x1E77B08
	0x01D8E570 LDR X0, [X19 + 0x38]
	0x01D8E574 CBZ X0, 0x1D8E678
	0x01D8E578 MOV X1, X31
	0x01D8E57C BL 0x1E9E538
	0x01D8E580 CMP W0, 0x4
	0x01D8E584 B.NE 0x1D8E594
	0x01D8E588 LDP X20, X19, [X31 + 0x10]
	0x01D8E58C LDR X30, [X31], #0x20
	0x01D8E590 RET
	0x01D8E594 LDR X0, [X19 + 0x40]
	0x01D8E598 CBZ X0, 0x1D8E678
	0x01D8E59C MOV X1, X31
	0x01D8E5A0 BL 0x1E94078
	0x01D8E5A4 ANDS W31, W0, 0x7
	0x01D8E5A8 B.EQ 0x1D8E600
	0x01D8E5AC TBNZ X0, 0x0, 0x1D8E52C
	0x01D8E5B0 LDR X8, [X19 + 0x38]
	0x01D8E5B4 CBZ X8, 0x1D8E678
	0x01D8E5B8 LDR X0, [X8 + 0x50]
	0x01D8E5BC CBZ X0, 0x1D8E678
	0x01D8E5C0 MOV X1, X31
	0x01D8E5C4 BL 0x1EC4D00
	0x01D8E5C8 TBZ X0, 0x0, 0x1D8E588
	0x01D8E5CC LDR X8, [X19 + 0x38]
	0x01D8E5D0 CBZ X8, 0x1D8E678

ISIL:
	001 Move [X31-112], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X30
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0x264B000
	015 Move X22, 0x2366000
	016 Move W8, [X21+2525]
	017 Move X22, [X22+1432]
	018 Move X20, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0x2369000
	025 Move X0, [X0+3048]
	026 Call 0x1C17CF4
	027 Move X0, 0x2369000
	028 Move X0, [X0+3056]
	029 Call 0x1C17CF4
	030 Move X0, 0x2368000
	031 Move X0, [X0+2464]
	032 Call 0x1C17CF4
	033 Move X0, 0x2366000
	034 Move X0, [X0+1432]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+2525], W8
	038 Move X0, [X22]
	039 Move X21, [X19+56]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X21
	045 Move X1, X31
	046 Move X2, X31
	047 Call Object.op_Equality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {260}
	052 Move X0, [X19+56]
	053 Compare X0, 0
	054 JumpIfEqual {274}
	055 Move X1, [X19+64]
	056 Move X2, X31
	057 Call NetworkRunner.Exists, X0, X1
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {260}
	062 Move X0, [X19+64]
	063 Compare X0, 0
	064 JumpIfEqual {260}
	065 Move W8, [X0+96]
	066 Move TEMP, X8
	067 And TEMP, TEMP, 2
	068 Compare TEMP, 2
	069 JumpIfEqual {260}
	070 Move X1, X31
	071 Call NetworkObject.get_HasStateAuthority, X0
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {260}
	076 Move X0, X31
	077 Call Time.get_time
	078 Move V1, [X19+152]
	079 Subtract S0, S0, S1
	080 Move S1, 0.5
	081 NotImplemented "Instruction FCMP not yet implemented."
	082 Compare X20, 0
	083 JumpIfEqual {274}
	084 Move X0, X20
	085 Move X1, X31
	086 Call Collision.get_contacts, X0
	087 Compare X0, 0
	088 JumpIfEqual {274}
	089 Move W8, [X0+24]
	090 Compare W8, 0
	091 JumpIfEqual {275}
	092 Add X0, X0, 32
	093 Move X1, X31
	094 Call ContactPoint.get_point, X0
	095 Move X0, X20
	096 Move X1, X31
	097 Move V8, V0
	098 Move V9, V1
	099 Move V10, V2
	100 Call Collision.get_gameObject, X0
	101 Compare X0, 0
	102 JumpIfEqual {274}
	103 Move X8, 0x2369000
	104 Move X8, [X8+3048]
	105 Move X1, [X8]
	106 Call 0x21E68C4, X0
	107 Compare X0, 0
	108 JumpIfEqual {161}
	109 Move X8, 0x2368000
	110 Move X8, [X8+2464]
	111 Move X9, [X0]
	112 Move X21, X0
	113 Move X8, [X8]
	114 Move W11, [X9+304]
	115 Move W10, [X8+304]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X9, [X9+200]
	118 Add X9, X9, X10
	119 NotImplemented "Instruction LDUR not yet implemented."
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X0, X21
	122 Move X1, X31
	123 Call NetPlayer.get_IsMine, X0
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfEqual {260}
	128 Move X0, X20
	129 Move X1, X31
	130 Call Collision.get_relativeVelocity, X0
	131 Move V13, V0
	132 Move V11, V1
	133 Multiply S0, S0, S0
	134 Multiply S1, S1, S1
	135 Move V12, V2
	136 Multiply S2, S2, S2
	137 Add S0, S0, S1
	138 Move W8, 0x42480000
	139 Add S0, S2, S0
	140 Move S1, W8
	141 NotImplemented "Instruction FCMP not yet implemented."
	142 Move X0, [X19+136]
	143 Compare X0, 0
	144 JumpIfEqual {274}
	145 Move X1, X31
	146 Call Rigidbody.get_mass, X0
	147 Move X8, [X19+144]
	148 Compare X8, 0
	149 JumpIfEqual {274}
	150 Move X8, [X8+128]
	151 Compare X8, 0
	152 JumpIfEqual {274}
	153 Move X9, [X19+64]
	154 Move X22, [X8+24]
	155 Compare X9, 0
	156 JumpIfEqual {198}
	157 Move X8, [X9+32]
	158 Compare X8, 0
	159 JumpIfEqual {198}
	160 Move W23, [X8]
	161 Move X0, X20
	162 Move X1, X31
	163 Call Collision.get_rigidbody, X0
	164 Move X8, [X22]
	165 Move X21, X0
	166 Move W9, [X8+224]
	167 Compare W9, 0
	168 JumpIfNotEqual {171}
	169 Move X0, X8
	170 Call 0x1C17DFC
	171 Move X0, X21
	172 Move X1, X31
	173 Move X2, X31
	174 Call Object.op_Inequality, X0, X1
	175 Move TEMP, X0
	176 And TEMP, TEMP, 1
	177 Compare TEMP, 1
	178 JumpIfNotEqual {260}
	179 Move X0, X20
	180 Move X1, X31
	181 Call Collision.get_rigidbody, X0
	182 Move X21, X0
	183 Move X0, X20
	184 Move X1, X31
	185 Call Collision.get_relativeVelocity, X0
	186 Compare X21, 0
	187 JumpIfEqual {274}
	188 Move S3, 20
	189 Multiply S2, S2, S3
	190 Multiply S1, S1, S3
	191 Multiply S0, S0, S3
	192 Move X0, X21
	193 Move V3, V8
	194 Move V4, V9
	195 Move V5, V10
	196 Move X1, X31
	197 Call Rigidbody.AddForceAtPosition, X0, X1, X2
	198 Move X23, X31
	199 Move X11, 0x2369000
	200 Move X8, [X21]
	201 Move W10, [X19+104]
	202 Move X11, [X11+3056]
	203 Multiply S13, S13, S0
	204 NotImplemented "Instruction LDRH not yet implemented."
	205 Multiply S14, S11, S0
	206 Move X1, [X11]
	207 Multiply S11, S12, S0
	208 NotImplemented "Instruction BFM not yet implemented."
	209 Compare X9, 0
	210 JumpIfEqual {217}
	211 Move X10, [X8+176]
	212 Add X10, X10, 8
	213 NotImplemented "Instruction LDUR not yet implemented."
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Subtract X9, X9, 1
	216 Add X10, X10, 16
	217 Move X0, X21
	218 Move W2, W31
	219 Call 0x1C5D788
	220 NotImplemented "Instruction LDRSW not yet implemented."
	221 Add X8, X8, X9
	222 Add X0, X8, 312
	223 Move X8, [X0]
	224 Move X6, [X0+8]
	225 Move W1, 15
	226 Move X0, X21
	227 Move V0, V8
	228 Move V1, V9
	229 Move V2, V10
	230 Move X2, X31
	231 Move X3, X31
	232 Move V3, V13
	233 Move V4, V14
	234 Move V5, V11
	235 Move X4, X22
	236 Move X5, X23
	237 NotImplemented "Instruction BLR not yet implemented."
	238 Move X0, X20
	239 Move X1, X31
	240 Call Collision.get_relativeVelocity, X0
	241 Multiply S0, S0, S0
	242 Multiply S1, S1, S1
	243 Multiply S2, S2, S2
	244 Move W8, 0x43480000
	245 Move X0, [X19+128]
	246 Add S0, S0, S1
	247 Move S1, W8
	248 Add S0, S2, S0
	249 NotImplemented "Instruction FDIV not yet implemented."
	250 Move S1, 1
	251 NotImplemented "Instruction FMIN not yet implemented."
	252 Move V0, V8
	253 Move V1, V9
	254 Move V2, V10
	255 Move X1, X31
	256 Call SFXManager.PlaySFXAsRPC, X0, X1, V0
	257 Move X0, X31
	258 Call Time.get_fixedTime
	259 Move [X19+152], S0
	260 Move X20, [X31+96]
	261 Move X19, [X31+104]
	262 Move X22, [X31+80]
	263 Move X21, [X31+88]
	264 Move X30, [X31+64]
	265 Move X23, [X31+72]
	266 Move D9, [X31+48]
	267 Move D8, [X31+56]
	268 Move D11, [X31+32]
	269 Move D10, [X31+40]
	270 Move D13, [X31+16]
	271 Move D12, [X31+24]
	272 Move V14, [X31+112]
	273 Return 
	274 Call 0x1C17F20
	275 Call 0x1C17F28

Method: System.Void OnTriggerEnter(UnityEngine.Collider other)

Disassembly:
	0x01D8E5D4 LDR X0, [X8 + 0x50]
	0x01D8E5D8 MOVZ W1, 0x8
	0x01D8E5DC MOV X2, X31
	0x01D8E5E0 BL 0x1ED9318
	0x01D8E5E4 LDR X8, [X19 + 0x40]
	0x01D8E5E8 CBZ X8, 0x1D8E678
	0x01D8E5EC LDR X8, [X8 + 0x20]
	0x01D8E5F0 MOV X20, X0
	0x01D8E5F4 CBZ X8, 0x1D8E638
	0x01D8E5F8 LDR W0, [X8]
	0x01D8E5FC B 0x1D8E63C
	0x01D8E600 LDR X0, [X20]
	0x01D8E604 LDR X19, [X19 + 0x40]
	0x01D8E608 LDR W8, [X0 + 0xE0]
	0x01D8E60C CBNZ W8, 0x1D8E614
	0x01D8E610 BL 0x1C16DFC
	0x01D8E614 ADRP X8, 0x2368000
	0x01D8E618 LDR X8, [X8 + 0xC70]
	0x01D8E61C MOV X1, X19
	0x01D8E620 LDP X20, X19, [X31 + 0x10]
	0x01D8E624 MOVZ W2, 0x7
	0x01D8E628 LDR X0, [X8]
	0x01D8E62C MOV X3, X31
	0x01D8E630 LDR X30, [X31], #0x20
	0x01D8E634 B 0x1E77B00
	0x01D8E638 MOV X0, X31
	0x01D8E63C LDR W1, [X19 + 0x68]
	0x01D8E640 MOVZ W2, 0x1
	0x01D8E644 MOV X3, X31
	0x01D8E648 BL 0x1E9C23C
	0x01D8E64C STUR X0, [X20 + 0x1C]
	0x01D8E650 CBZ X20, 0x1D8E678
	0x01D8E654 MOVZ W8, 0x40
	0x01D8E658 STR W8, [X20 + 0xC]
	0x01D8E65C LDR X0, [X19 + 0x38]
	0x01D8E660 CBZ X0, 0x1D8E678
	0x01D8E664 MOV X1, X20
	0x01D8E668 LDP X20, X19, [X31 + 0x10]
	0x01D8E66C MOV X2, X31
	0x01D8E670 LDR X30, [X31], #0x20
	0x01D8E674 B 0x1EA1E24
	0x01D8E678 BL 0x1C16F20
	0x01D8E67C B 0x1D8E4E8
	0x01D8E680 SUB X31, X31, 0x20
	0x01D8E684 STP X30, X19, [X31 + 0x10]
	0x01D8E688 MOV X19, X0
	0x01D8E68C LDR X0, [X0 + 0x40]
	0x01D8E690 CBZ X0, 0x1D8E6E8
	0x01D8E694 LDRB W8, [X0 + 0x60]
	0x01D8E698 TBNZ X8, 0x1, 0x1D8E6E8
	0x01D8E69C MOV X1, X31
	0x01D8E6A0 BL 0x1E93668
	0x01D8E6A4 TBZ X0, 0x0, 0x1D8E6E8
	0x01D8E6A8 MOV X0, X19
	0x01D8E6AC BL 0x1D8DFE0
	0x01D8E6B0 TBZ X0, 0x0, 0x1D8E6E8
	0x01D8E6B4 LDR X0, [X19 + 0x80]
	0x01D8E6B8 CBZ X0, 0x1D8E6F4
	0x01D8E6BC BL 0x1D8E6F8
	0x01D8E6C0 STR X0, [X31 + 0x8]
	0x01D8E6C4 ADD X0, X31, 0x8
	0x01D8E6C8 MOV X1, X31
	0x01D8E6CC BL 0x1E74DE4
	0x01D8E6D0 TBZ X0, 0x0, 0x1D8E6E8
	0x01D8E6D4 MOV X0, X19
	0x01D8E6D8 MOV W1, W31
	0x01D8E6DC BL 0x1D8E048
	0x01D8E6E0 MOV X0, X19
	0x01D8E6E4 BL 0x1D8E374
	0x01D8E6E8 LDP X30, X19, [X31 + 0x10]
	0x01D8E6EC ADD X31, X31, 0x20
	0x01D8E6F0 RET
	0x01D8E6F4 BL 0x1C16F20
	0x01D8E6F8 STP X30, X19, [X31 - 0x10]!
	0x01D8E6FC LDR X8, [X0 + 0x50]
	0x01D8E700 CBZ X8, 0x1D8E710
	0x01D8E704 LDR X0, [X8 + 0x8]
	0x01D8E708 LDP X30, X19, [X31], #0x10
	0x01D8E70C RET
	0x01D8E710 ADRP X0, 0x2365000
	0x01D8E714 LDR X0, [X0 + 0x5B0]
	0x01D8E718 BL 0x1C16D08
	0x01D8E71C BL 0x1C16F10
	0x01D8E720 MOV X19, X0
	0x01D8E724 ADRP X0, 0x2368000
	0x01D8E728 LDR X0, [X0 + 0xC78]
	0x01D8E72C BL 0x1C16D08
	0x01D8E730 MOV X1, X0
	0x01D8E734 MOV X0, X19
	0x01D8E738 MOV X2, X31
	0x01D8E73C BL 0x337DF1C
	0x01D8E740 ADRP X0, 0x2368000
	0x01D8E744 LDR X0, [X0 + 0xC80]
	0x01D8E748 BL 0x1C16D08
	0x01D8E74C MOV X1, X0
	0x01D8E750 MOV X0, X19
	0x01D8E754 BL 0x1C16DEC
	0x01D8E758 MOV X1, X31
	0x01D8E75C B 0x1E74F04
	0x01D8E760 STP X30, X21, [X31 - 0x20]!
	0x01D8E764 STP X20, X19, [X31 + 0x10]
	0x01D8E768 ADRP X20, 0x264A000
	0x01D8E76C ADRP X21, 0x2368000
	0x01D8E770 ADRP X19, 0x2368000
	0x01D8E774 LDRB W8, [X20 + 0x9E7]
	0x01D8E778 LDR X21, [X21 + 0xC88]
	0x01D8E77C LDR X19, [X19 + 0xC68]
	0x01D8E780 TBNZ X8, 0x0, 0x1D8E7A4
	0x01D8E784 ADRP X0, 0x2368000
	0x01D8E788 LDR X0, [X0 + 0xC68]
	0x01D8E78C BL 0x1C16CF4
	0x01D8E790 ADRP X0, 0x2368000
	0x01D8E794 LDR X0, [X0 + 0xC88]
	0x01D8E798 BL 0x1C16CF4
	0x01D8E79C MOVZ W8, 0x1
	0x01D8E7A0 STRB W8, [X20 + 0x9E7]
	0x01D8E7A4 LDR X0, [X21]
	0x01D8E7A8 MOV X1, X31
	0x01D8E7AC BL 0x3C124EC
	0x01D8E7B0 LDR X8, [X19]
	0x01D8E7B4 ADRP X9, 0xFFFFFFFFFED5C000
	0x01D8E7B8 LDR V0, [X9 + 0xD4]
	0x01D8E7BC LDP X20, X19, [X31 + 0x10]
	0x01D8E7C0 LDR X8, [X8 + 0xB8]
	0x01D8E7C4 STR W0, [X8]
	0x01D8E7C8 STUR V0, [X8 + 0x4]
	0x01D8E7CC LDP X30, X21, [X31], #0x20
	0x01D8E7D0 RET
	0x01D8E7D4 LDRB W1, [X0 + 0xB0]
	0x01D8E7D8 B 0x1D8E048
	0x01D8E7DC STP X30, X19, [X31 - 0x10]!
	0x01D8E7E0 MOV X19, X0
	0x01D8E7E4 BL 0x1D8DFE0
	0x01D8E7E8 AND W8, W0, 0x1
	0x01D8E7EC STRB W8, [X19 + 0xB0]
	0x01D8E7F0 LDP X30, X19, [X31], #0x10
	0x01D8E7F4 RET
	0x01D8E7F8 STR X30, [X31 - 0x20]!
	0x01D8E7FC STP X20, X19, [X31 + 0x10]
	0x01D8E800 ADRP X20, 0x264A000
	0x01D8E804 LDRB W8, [X20 + 0x9E8]
	0x01D8E808 MOV X19, X0
	0x01D8E80C TBNZ X8, 0x0, 0x1D8E824
	0x01D8E810 ADRP X0, 0x2368000
	0x01D8E814 LDR X0, [X0 + 0xC68]
	0x01D8E818 BL 0x1C16CF4
	0x01D8E81C MOVZ W8, 0x1
	0x01D8E820 STRB W8, [X20 + 0x9E8]
	0x01D8E824 CBZ X19, 0x1D8E87C
	0x01D8E828 ADRP X9, 0x2368000
	0x01D8E82C LDR X9, [X9 + 0xC68]
	0x01D8E830 MOVZ W8, 0x1
	0x01D8E834 STRB W8, [X19 + 0x58]
	0x01D8E838 LDR X8, [X19]
	0x01D8E83C LDR X1, [X9]
	0x01D8E840 LDRB W10, [X8 + 0x130]
	0x01D8E844 LDRB W9, [X1 + 0x130]
	0x01D8E848 CMP W10, W9
	0x01D8E84C B.CC 0x1D8E874
	0x01D8E850 LDR X8, [X8 + 0xC8]
	0x01D8E854 ADD X8, X8, X9, 0x3, LSL
	0x01D8E858 LDUR X8, [X8 - 0x8]
	0x01D8E85C CMP X8, X1

ISIL:
	001 Move [X31-96], D13
	002 Move [X31-88], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x264B000
	013 Move X22, 0x2366000
	014 Move W8, [X21+2526]
	015 Move X22, [X22+1432]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x2369000
	023 Move X0, [X0+3064]
	024 Call 0x1C17CF4
	025 Move X0, 0x2366000
	026 Move X0, [X0+1432]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+2526], W8
	030 Move X0, [X22]
	031 Move X21, [X19+56]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X21
	037 Move X1, X31
	038 Move X2, X31
	039 Call Object.op_Equality, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {195}
	044 Move X0, [X19+56]
	045 Compare X0, 0
	046 JumpIfEqual {207}
	047 Move X1, [X19+64]
	048 Move X2, X31
	049 Call NetworkRunner.Exists, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {195}
	054 Move X0, [X19+64]
	055 Compare X0, 0
	056 JumpIfEqual {195}
	057 Move W8, [X0+96]
	058 Move TEMP, X8
	059 And TEMP, TEMP, 2
	060 Compare TEMP, 2
	061 JumpIfEqual {195}
	062 Move X1, X31
	063 Call NetworkObject.get_HasStateAuthority, X0
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {195}
	068 Move X0, X31
	069 Call Time.get_time
	070 Move V1, [X19+152]
	071 Subtract S0, S0, S1
	072 Move S1, 0.5
	073 NotImplemented "Instruction FCMP not yet implemented."
	074 Compare X20, 0
	075 JumpIfEqual {207}
	076 Move X8, 0x2369000
	077 Move X8, [X8+3064]
	078 Move X0, X20
	079 Move X1, [X8]
	080 Call 0x21A4894, X0
	081 Move X8, [X22]
	082 Move X20, X0
	083 Move W9, [X8+224]
	084 Compare W9, 0
	085 JumpIfNotEqual {88}
	086 Move X0, X8
	087 Call 0x1C17DFC
	088 Move X0, X20
	089 Move X1, X31
	090 Move X2, X31
	091 Call Object.op_Inequality, X0, X1
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {195}
	096 Compare X20, 0
	097 JumpIfEqual {207}
	098 Move X0, X20
	099 Move X1, X31
	100 Call NetPlayer.get_IsMine, X0
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {195}
	105 Move X0, X19
	106 Move X1, X31
	107 Call Component.get_transform, X0
	108 Compare X0, 0
	109 JumpIfEqual {207}
	110 Move X1, X31
	111 Call Transform.get_position, X0
	112 Move X0, [X19+136]
	113 Compare X0, 0
	114 JumpIfEqual {207}
	115 Move X1, X31
	116 Move V8, V0
	117 Move V9, V1
	118 Move V10, V2
	119 Call Rigidbody.get_velocity, X0
	120 Move X0, [X19+136]
	121 Compare X0, 0
	122 JumpIfEqual {207}
	123 Move X1, X31
	124 Move V12, V0
	125 Move V13, V1
	126 Move V11, V2
	127 Call Rigidbody.get_mass, X0
	128 Move X8, [X19+144]
	129 Compare X8, 0
	130 JumpIfEqual {207}
	131 Move X8, [X8+128]
	132 Compare X8, 0
	133 JumpIfEqual {207}
	134 Move X9, -19542016
	135 Move V5, [X9+816]
	136 Move X9, [X19+64]
	137 Move X4, [X8+24]
	138 Multiply S1, S12, S0
	139 Multiply S2, S13, S0
	140 Multiply S0, S11, S0
	141 Multiply S3, S1, S5
	142 Multiply S4, S2, S5
	143 Multiply S5, S0, S5
	144 Compare X9, 0
	145 JumpIfEqual {150}
	146 Move X8, [X9+32]
	147 Compare X8, 0
	148 JumpIfEqual {150}
	149 Move W5, [X8]
	150 Move X5, X31
	151 Move W8, [X19+104]
	152 Move W1, 15
	153 Move X0, X20
	154 Move V0, V8
	155 NotImplemented "Instruction BFM not yet implemented."
	156 Move V1, V9
	157 Move V2, V10
	158 Move X2, X31
	159 Move X3, X31
	160 Move X6, X31
	161 Call NetPlayer.Hit, X0, X1, X2, X3, X4, X5, X6, X7
	162 Move X0, [X19+136]
	163 Compare X0, 0
	164 JumpIfEqual {207}
	165 Move X1, X31
	166 Call Rigidbody.get_velocity, X0
	167 Move X20, [X19+128]
	168 Move X0, X19
	169 Move X1, X31
	170 Move V8, V0
	171 Move V9, V1
	172 Move V10, V2
	173 Call Component.get_transform, X0
	174 Compare X0, 0
	175 JumpIfEqual {207}
	176 Multiply S0, S8, S8
	177 Multiply S1, S9, S9
	178 Multiply S2, S10, S10
	179 Move W8, 0x42C80000
	180 Add S0, S0, S1
	181 Move S1, W8
	182 Add S0, S2, S0
	183 NotImplemented "Instruction FDIV not yet implemented."
	184 Move S1, 1
	185 Move X1, X31
	186 NotImplemented "Instruction FMIN not yet implemented."
	187 Call Transform.get_position, X0
	188 Move X0, X20
	189 Move V3, V8
	190 Move X1, X31
	191 Call SFXManager.PlaySFXAsRPC, X0, X1, V0
	192 Move X0, X31
	193 Call Time.get_fixedTime
	194 Move [X19+152], S0
	195 Move X20, [X31+80]
	196 Move X19, [X31+88]
	197 Move X22, [X31+64]
	198 Move X21, [X31+72]
	199 Move X30, [X31+48]
	200 Move D9, [X31+32]
	201 Move D8, [X31+40]
	202 Move D11, [X31+16]
	203 Move D10, [X31+24]
	204 Move D13, [X31+96]
	205 Move D12, [X31+104]
	206 Return 
	207 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01D8E860 B.NE 0x1D8E874
	0x01D8E864 MOV X0, X19

ISIL:
	001 Move X1, X31
	002 Call NetworkBehaviour..ctor, X0
	003 Return 

Method: System.Void CopyBackingFieldsToState(System.Boolean param_0)

Disassembly:
	0x01D8E868 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Return 

Method: System.Void CopyStateToBackingFields()

Disassembly:
	0x01D8E86C LDR X30, [X31], #0x20

ISIL:
	001 Return 

