Type: AnimalCompany.ChangeMeshBounds

Method: System.Void ChangeBounds()

Disassembly:
	0x01CF4220 LDR V5, [X8 + 0x10]
	0x01CF4224 FMOV S6, W31
	0x01CF4228 MOV V0.S[3], V3.S[0]
	0x01CF422C FSUB V3.4S, V7.4S, V0.4S
	0x01CF4230 FMIN S4, S5, S4
	0x01CF4234 FCMP S5, 0x0
	0x01CF4238 FCSEL S1, S4, S6, PL
	0x00000000 INVALID
	0x01CF4240 FADD V0.4S, V0.4S, V1.4S
	0x01CF4244 MOV S1, V0.S[1]
	0x01CF4248 MOV S2, V0.S[2]
	0x01CF424C MOV S3, V0.S[3]
	0x01CF4250 MOV X0, X20
	0x01CF4254 MOV X1, X31
	0x01CF4258 BL 0x3A7F088
	0x01CF425C LDR X20, [X19 + 0x28]
	0x01CF4260 CBZ X20, 0x1CF4328
	0x01CF4264 MOV X0, X20
	0x01CF4268 MOV X1, X31
	0x01CF426C BL 0x3A7F198
	0x01CF4270 LDR X8, [X19 + 0x20]
	0x01CF4274 CBZ X8, 0x1CF4328
	0x01CF4278 LDR X9, [X21]
	0x01CF427C LDR V2, [X8 + 0x6C]
	0x01CF4280 FMOV S3, 1
	0x01CF4284 FMOV S4, W31
	0x01CF4288 LDR X9, [X9 + 0xB8]
	0x01CF428C FSUB S2, S2, S0
	0x01CF4290 MOV X0, X20
	0x01CF4294 MOV X1, X31
	0x01CF4298 LDR V1, [X9 + 0x10]
	0x01CF429C FMIN S3, S1, S3
	0x01CF42A0 FCMP S1, 0x0
	0x01CF42A4 FCSEL S1, S3, S4, PL
	0x01CF42A8 FMUL S1, S2, S1
	0x01CF42AC FADD S0, S0, S1
	0x01CF42B0 BL 0x3A7F1D4
	0x01CF42B4 LDR X8, [X19 + 0x20]
	0x01CF42B8 CBZ X8, 0x1CF4328
	0x01CF42BC LDR X0, [X21]
	0x01CF42C0 LDR V8, [X19 + 0x30]
	0x01CF42C4 LDR V9, [X8 + 0x70]
	0x01CF42C8 LDR W9, [X0 + 0xE0]
	0x01CF42CC CBNZ W9, 0x1CF42D8
	0x01CF42D0 BL 0x1B6E8F8
	0x01CF42D4 LDR X0, [X21]
	0x01CF42D8 LDR X8, [X0 + 0xB8]
	0x01CF42DC FSUB S1, S9, S8
	0x01CF42E0 LDP X22, X21, [X31 + 0x70]
	0x01CF42E4 LDP X30, X23, [X31 + 0x60]
	0x01CF42E8 LDR V0, [X8 + 0x10]
	0x01CF42EC MOV X1, X31
	0x01CF42F0 FMUL S0, S1, S0
	0x01CF42F4 FADD S0, S8, S0
	0x01CF42F8 STR S0, [X19 + 0x30]
	0x01CF42FC LDR W0, [X8]
	0x01CF4300 LDP X20, X19, [X31 + 0x80]
	0x01CF4304 LDP D9, D8, [X31 + 0x50]
	0x01CF4308 ADD X31, X31, 0x90
	0x01CF430C B 0x3A7CB7C
	0x01CF4310 LDP X20, X19, [X31 + 0x80]
	0x01CF4314 LDP X22, X21, [X31 + 0x70]
	0x01CF4318 LDP X30, X23, [X31 + 0x60]
	0x01CF431C LDP D9, D8, [X31 + 0x50]
	0x01CF4320 ADD X31, X31, 0x90
	0x01CF4324 RET
	0x01CF4328 BL 0x1B6EA1C
	0x01CF432C MOV X1, X31
	0x01CF4330 B 0x3A9EEE4
	0x01CF4334 STP X30, X21, [X31 - 0x20]!
	0x01CF4338 STP X20, X19, [X31 + 0x10]
	0x01CF433C ADRP X20, 0x252F000
	0x01CF4340 ADRP X21, 0x225C000
	0x01CF4344 ADRP X19, 0x225B000
	0x01CF4348 LDRB W8, [X20 + 0x6E4]
	0x01CF434C LDR X21, [X21 + 0x710]
	0x01CF4350 LDR X19, [X19 + 0x320]
	0x01CF4354 TBNZ X8, 0x0, 0x1CF4378
	0x01CF4358 ADRP X0, 0x225B000
	0x01CF435C LDR X0, [X0 + 0x320]
	0x01CF4360 BL 0x1B6E7F0
	0x01CF4364 ADRP X0, 0x225C000
	0x01CF4368 LDR X0, [X0 + 0x710]
	0x01CF436C BL 0x1B6E7F0
	0x01CF4370 MOVZ W8, 0x1
	0x01CF4374 STRB W8, [X20 + 0x6E4]
	0x01CF4378 LDR X0, [X21]
	0x01CF437C MOV X1, X31
	0x01CF4380 BL 0x3A7AE20
	0x01CF4384 LDR X8, [X19]
	0x01CF4388 LDP X20, X19, [X31 + 0x10]
	0x01CF438C LDR X8, [X8 + 0xB8]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], D9
	003 Move [X31+40], D8
	004 Move [X31+48], X30
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X20, 0x2530000
	010 Move W8, [X20+1751]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x225D000
	017 Move X0, [X0+1712]
	018 Call 0x1B6F7F0
	019 Move X0, 0x225A000
	020 Move X0, [X0+1144]
	021 Call 0x1B6F7F0
	022 Move W8, 1
	023 Move [X20+1751], W8
	024 Move X0, [X19+32]
	025 Compare X0, 0
	026 JumpIfEqual {107}
	027 Move X20, 0x225A000
	028 Move X21, 0x225D000
	029 Move X20, [X20+1144]
	030 Move X21, [X21+1712]
	031 Move X1, X31
	032 Call MeshFilter.get_sharedMesh, X0
	033 Move X8, [X20]
	034 Move X20, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1B6F8F8
	040 Move X1, [X21]
	041 Move X0, X20
	042 Call 0x2115D24, X0
	043 Move X21, 0x2530000
	044 Move W8, [X21+1087]
	045 Move X20, X0
	046 Compare W8, 0
	047 JumpIfNotEqual {53}
	048 Move X0, 0x225A000
	049 Move X0, [X0+1152]
	050 Call 0x1B6F7F0
	051 Move W8, 1
	052 Move [X21+1087], W8
	053 Move X21, 0x225A000
	054 Move X21, [X21+1152]
	055 Move X22, 0x2530000
	056 Move W9, [X22+1110]
	057 Move X8, [X21]
	058 Move X8, [X8+184]
	059 Move V9, [X8]
	060 Move V8, [X8+8]
	061 Compare W9, 0
	062 JumpIfNotEqual {69}
	063 Move X0, X21
	064 Call 0x1B6F7F0
	065 Move X8, [X21]
	066 Move W9, 1
	067 Move [X22+1110], W9
	068 Move X8, [X8+184]
	069 Compare X20, 0
	070 JumpIfEqual {107}
	071 Move X9, -19177472
	072 Move V0, [X8+20]
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 Move V3, [X9+2920]
	075 Move W8, 0x4000
	076 NotImplemented "Instruction MOVK not yet implemented."
	077 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	078 Move S1, 0.5
	079 NotImplemented "Instruction INVALID not yet implemented."
	080 NotImplemented "Instruction MOVI not yet implemented."
	081 Multiply S0, S0, S3
	082 NotImplemented "Instruction INVALID not yet implemented."
	083 Multiply S0, S0, S1
	084 Add X1, X31, 8
	085 Move X0, X20
	086 Move X2, X31
	087 Move [X31+8], D9
	088 Move [X31+16], S8
	089 Move [X31+20], D2
	090 Move [X31+28], S0
	091 Call Mesh.set_bounds, X0, X1
	092 Move X0, [X19+32]
	093 Compare X0, 0
	094 JumpIfEqual {107}
	095 Move X1, X20
	096 Move X2, X31
	097 Call MeshFilter.set_sharedMesh, X0, X1
	098 Move X20, [X31+80]
	099 Move X19, [X31+88]
	100 Move X22, [X31+64]
	101 Move X21, [X31+72]
	102 Move X30, [X31+48]
	103 Move D9, [X31+32]
	104 Move D8, [X31+40]
	105 Add X31, X31, 96
	106 Return 
	107 Call 0x1B6FA1C

Method: System.Void .ctor()

Disassembly:
	0x01CF4390 STR W0, [X8]
	0x01CF4394 STR W31, [X8 + 0x10]

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

