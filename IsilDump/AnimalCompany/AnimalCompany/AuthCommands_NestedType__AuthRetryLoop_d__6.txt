Type: AnimalCompany.AuthCommands/<AuthRetryLoop>d__6

Method: System.Void MoveNext()

Disassembly:
	0x01C94830 ADRP X20, 0x22B9000
	0x01C94834 LDR X20, [X20 + 0xF78]
	0x01C94838 MOV X0, X20
	0x01C9483C BL 0x1B6E7F0
	0x01C94840 LDR X9, [X20]
	0x01C94844 MOVZ W8, 0x1
	0x01C94848 STRB W8, [X21 + 0x44D]
	0x01C9484C LDR X8, [X19 + 0x20]
	0x01C94850 LDR X9, [X9 + 0xB8]
	0x01C94854 STRB W31, [X9 + 0x48]
	0x01C94858 CBNZ X8, 0x1C949E0
	0x01C9485C BL 0x1B6EA1C
	0x01C94860 ADRP X20, 0x22B9000
	0x01C94864 LDR X20, [X20 + 0xF78]
	0x01C94868 MOV X0, X20
	0x01C9486C BL 0x1B6E7F0
	0x01C94870 LDR X9, [X20]
	0x01C94874 MOVZ W10, 0x1
	0x01C94878 STRB W10, [X21 + 0x44D]
	0x01C9487C LDR X8, [X19 + 0x20]
	0x01C94880 LDR X9, [X9 + 0xB8]
	0x01C94884 STRB W10, [X9 + 0x48]
	0x01C94888 CBZ X8, 0x1C948F8
	0x01C9488C STRB W31, [X8 + 0x38]
	0x01C94890 STR X31, [X8 + 0x30]
	0x01C94894 MOV X0, X31
	0x01C94898 BL 0x33479B4
	0x01C9489C ADRP X8, 0x22B9000
	0x01C948A0 LDR X22, [X19 + 0x20]
	0x01C948A4 LDR X8, [X8 + 0xF00]
	0x01C948A8 MOV X20, X0
	0x01C948AC LDR X0, [X8]
	0x01C948B0 BL 0x1B6EA0C
	0x01C948B4 ADRP X8, 0x22B9000
	0x01C948B8 LDR X8, [X8 + 0xF38]
	0x01C948BC MOV X21, X0
	0x01C948C0 LDR X2, [X8]
	0x01C948C4 MOV X1, X22
	0x01C948C8 MOV X3, X31
	0x01C948CC BL 0x274F724
	0x01C948D0 CBZ X20, 0x1C948F4
	0x01C948D4 ADRP X8, 0x22B9000
	0x01C948D8 LDR X8, [X8 + 0xF28]
	0x01C948DC LDR X2, [X8]
	0x01C948E0 MOV X0, X20
	0x01C948E4 MOV X1, X21
	0x01C948E8 BL 0x2460764
	0x01C948EC B 0x1C94A60
	0x01C948F0 BL 0x1B6EA1C
	0x01C948F4 BL 0x1B6EA1C
	0x01C948F8 BL 0x1B6EA1C
	0x01C948FC B 0x1C94928
	0x01C94900 B 0x1C94928
	0x01C94904 B 0x1C94928
	0x01C94908 B 0x1C94928
	0x01C9490C B 0x1C94928
	0x01C94910 B 0x1C94928
	0x01C94914 B 0x1C94928
	0x01C94918 B 0x1C94928
	0x01C9491C B 0x1C94928
	0x01C94920 B 0x1C94928
	0x01C94924 B 0x1C94928
	0x01C94928 MOV X20, X1
	0x01C9492C MOV X21, X0
	0x01C94930 CMP W20, 0x1
	0x01C94934 B.NE 0x1C949D8
	0x01C94938 MOV X0, X21
	0x01C9493C BL 0x3D19840
	0x01C94940 MOV X20, X0
	0x01C94944 ADRP X0, 0x22B9000
	0x01C94948 LDR X0, [X0 + 0x670]
	0x01C9494C BL 0x1B6E804
	0x01C94950 LDR X8, [X20]
	0x01C94954 LDR X1, [X8]
	0x01C94958 BL 0x1B6ED6C
	0x01C9495C TBZ X0, 0x0, 0x1C949AC
	0x01C94960 LDR X20, [X20]
	0x01C94964 BL 0x3D19850
	0x01C94968 MOVN W8, 0x1
	0x01C9496C STR X31, [X19 + 0x20]
	0x01C94970 STR W8, [X19], #0x8
	0x01C94974 ADRP X0, 0x22B9000
	0x01C94978 LDR X0, [X0 + 0xD20]
	0x01C9497C BL 0x1B6E804
	0x01C94980 LDR W8, [X0 + 0xE0]
	0x01C94984 CBNZ W8, 0x1C9498C
	0x01C94988 BL 0x1B6E8F8
	0x01C9498C ADRP X0, 0x22B9000
	0x01C94990 LDR X0, [X0 + 0xE78]
	0x01C94994 BL 0x1B6E804
	0x01C94998 MOV X2, X0
	0x01C9499C MOV X0, X19
	0x01C949A0 MOV X1, X20
	0x01C949A4 BL 0x23D0774
	0x01C949A8 B 0x1C94BB8
	0x01C949AC MOVZ W0, 0x8
	0x01C949B0 BL 0x3D19860
	0x01C949B4 LDR X8, [X20]
	0x01C949B8 STR X8, [X0]
	0x01C949BC ADRP X1, 0x2088000
	0x01C949C0 ADD X1, X1, 0xBD8
	0x01C949C4 MOV X2, X31
	0x01C949C8 BL 0x3D19870
	0x01C949CC B 0x1C95424
	0x01C949D0 MOV X21, X0
	0x01C949D4 BL 0x3D19850
	0x01C949D8 MOV X0, X21
	0x01C949DC BL 0x1C8418C
	0x01C949E0 LDR X21, [X8 + 0x10]
	0x01C949E4 LDR W9, [X8 + 0x24]
	0x01C949E8 LDUR X10, [X8 + 0x1C]
	0x01C949EC LDR W20, [X8 + 0x18]
	0x01C949F0 B 0x1C94B54
	0x01C949F4 LDR X0, [X27]
	0x01C949F8 LDR W8, [X0 + 0xE0]
	0x01C949FC CBNZ W8, 0x1C94A04
	0x01C94A00 BL 0x1B6E8F8
	0x01C94A04 MOV X0, X31
	0x01C94A08 BL 0x325C828
	0x01C94A0C STRB W0, [X31 + 0x30]
	0x01C94A10 ADD X0, X31, 0x30
	0x01C94A14 MOV X1, X31
	0x01C94A18 BL 0x312E3C4
	0x01C94A1C MOV X8, X0
	0x01C94A20 LDR X0, [X23]
	0x01C94A24 STRB W8, [X31 + 0x38]
	0x01C94A28 LDR W8, [X0 + 0xE0]
	0x01C94A2C CBNZ W8, 0x1C94A34
	0x01C94A30 BL 0x1B6E8F8
	0x01C94A34 ADD X0, X31, 0x38
	0x01C94A38 MOV X1, X31
	0x01C94A3C BL 0x312E3CC
	0x01C94A40 TBZ X0, 0x0, 0x1C94ADC
	0x01C94A44 LDR X0, [X23]
	0x01C94A48 LDR W8, [X0 + 0xE0]
	0x01C94A4C CBNZ W8, 0x1C94A54
	0x01C94A50 BL 0x1B6E8F8
	0x01C94A54 ADD X0, X31, 0x38
	0x01C94A58 MOV X1, X31
	0x01C94A5C BL 0x312E780
	0x01C94A60 LDR X8, [X19 + 0x20]
	0x01C94A64 CBZ X8, 0x1C94B1C
	0x01C94A68 LDRB W9, [X8 + 0x38]
	0x01C94A6C CBZ W9, 0x1C949F4
	0x01C94A70 LDR W20, [X8 + 0x18]
	0x01C94A74 CBNZ W20, 0x1C94B48
	0x01C94A78 STRB W31, [X8 + 0x48]
	0x01C94A7C STR X31, [X8 + 0x40]
	0x01C94A80 MOV X0, X31
	0x01C94A84 BL 0x3347EFC
	0x01C94A88 ADRP X8, 0x22B9000
	0x01C94A8C LDR X22, [X19 + 0x20]
	0x01C94A90 LDR X8, [X8 + 0xEF8]
	0x01C94A94 MOV X20, X0
	0x01C94A98 LDR X0, [X8]
	0x01C94A9C BL 0x1B6EA0C
	0x01C94AA0 ADRP X8, 0x22B9000
	0x01C94AA4 LDR X8, [X8 + 0xF40]
	0x01C94AA8 MOV X21, X0
	0x01C94AAC LDR X2, [X8]
	0x01C94AB0 MOV X1, X22
	0x01C94AB4 MOV X3, X31
	0x01C94AB8 BL 0x274F724
	0x01C94ABC CBZ X20, 0x1C94B20
	0x01C94AC0 ADRP X8, 0x22B9000
	0x01C94AC4 LDR X8, [X8 + 0xF20]
	0x01C94AC8 LDR X2, [X8]
	0x01C94ACC MOV X0, X20
	0x01C94AD0 MOV X1, X21
	0x01C94AD4 BL 0x2460764
	0x01C94AD8 B 0x1C94C54
	0x01C94ADC MOVZ W8, 0x1
	0x01C94AE0 STR W8, [X19]
	0x01C94AE4 LDRB W8, [X31 + 0x38]
	0x01C94AE8 STRB W8, [X19 + 0x28]
	0x01C94AEC LDR X0, [X25]
	0x01C94AF0 LDR W8, [X0 + 0xE0]
	0x01C94AF4 CBNZ W8, 0x1C94AFC
	0x01C94AF8 BL 0x1B6E8F8
	0x01C94AFC ADRP X8, 0x22B9000
	0x01C94B00 LDR X8, [X8 + 0xEF0]
	0x01C94B04 ADD X0, X19, 0x8
	0x01C94B08 LDR X3, [X8]
	0x01C94B0C ADD X1, X31, 0x38
	0x01C94B10 MOV X2, X19
	0x01C94B14 BL 0x201FD88
	0x01C94B18 B 0x1C94BB8
	0x01C94B1C BL 0x1B6EA1C
	0x01C94B20 BL 0x1B6EA1C
	0x01C94B24 B 0x1C94928
	0x01C94B28 B 0x1C94928
	0x01C94B2C B 0x1C94928
	0x01C94B30 B 0x1C94928
	0x01C94B34 B 0x1C94928
	0x01C94B38 B 0x1C94928
	0x01C94B3C B 0x1C94928
	0x01C94B40 B 0x1C94928
	0x01C94B44 B 0x1C94928
	0x01C94B48 LDR W9, [X8 + 0x24]
	0x01C94B4C LDUR X10, [X8 + 0x1C]
	0x01C94B50 LDR X21, [X8 + 0x10]
	0x01C94B54 STR W9, [X31 + 0x70]
	0x01C94B58 STR X10, [X31 + 0x68]
	0x01C94B5C MOVN W8, 0x1
	0x01C94B60 STR X31, [X19 + 0x20]
	0x01C94B64 STR W8, [X19], #0x8
	0x01C94B68 LDR X8, [X31 + 0x68]
	0x01C94B6C LDR W9, [X31 + 0x70]
	0x01C94B70 LDR X0, [X25]
	0x01C94B74 ADRP X22, 0x22B9000
	0x01C94B78 STR X8, [X31 + 0x58]
	0x01C94B7C STR W9, [X31 + 0x60]
	0x01C94B80 LDR W8, [X0 + 0xE0]
	0x01C94B84 LDR X22, [X22 + 0xE40]
	0x01C94B88 CBNZ W8, 0x1C94B90
	0x01C94B8C BL 0x1B6E8F8
	0x01C94B90 LDR X2, [X22]
	0x01C94B94 LDR X8, [X31 + 0x58]
	0x01C94B98 LDR W9, [X31 + 0x60]
	0x01C94B9C ADD X1, X31, 0x40
	0x01C94BA0 MOV X0, X19
	0x01C94BA4 STR X21, [X31 + 0x40]
	0x01C94BA8 STR W20, [X31 + 0x48]
	0x01C94BAC STUR X8, [X31 + 0x4C]
	0x01C94BB0 STR W9, [X31 + 0x54]
	0x01C94BB4 BL 0x23D04D8
	0x01C94BB8 LDR X8, [X24 + 0x28]
	0x01C94BBC LDR X9, [X31 + 0x78]
	0x01C94BC0 CMP X8, X9
	0x01C94BC4 B.NE 0x1C94BE4
	0x01C94BC8 LDP X20, X19, [X31 + 0xC0]
	0x01C94BCC LDP X22, X21, [X31 + 0xB0]
	0x01C94BD0 LDP X24, X23, [X31 + 0xA0]
	0x01C94BD4 LDP X26, X25, [X31 + 0x90]
	0x01C94BD8 LDP X30, X27, [X31 + 0x80]
	0x01C94BDC ADD X31, X31, 0xD0
	0x01C94BE0 RET
	0x01C94BE4 BL 0x3D19880
	0x01C94BE8 LDR X0, [X27]
	0x01C94BEC LDR W8, [X0 + 0xE0]
	0x01C94BF0 CBNZ W8, 0x1C94BF8
	0x01C94BF4 BL 0x1B6E8F8
	0x01C94BF8 MOV X0, X31
	0x01C94BFC BL 0x325C828
	0x01C94C00 STRB W0, [X31 + 0x30]
	0x01C94C04 ADD X0, X31, 0x30
	0x01C94C08 MOV X1, X31
	0x01C94C0C BL 0x312E3C4
	0x01C94C10 MOV X8, X0
	0x01C94C14 LDR X0, [X23]
	0x01C94C18 STRB W8, [X31 + 0x38]
	0x01C94C1C LDR W8, [X0 + 0xE0]
	0x01C94C20 CBNZ W8, 0x1C94C28
	0x01C94C24 BL 0x1B6E8F8
	0x01C94C28 ADD X0, X31, 0x38
	0x01C94C2C MOV X1, X31
	0x01C94C30 BL 0x312E3CC
	0x01C94C34 TBZ X0, 0x0, 0x1C94CE4
	0x01C94C38 LDR X0, [X23]
	0x01C94C3C LDR W8, [X0 + 0xE0]
	0x01C94C40 CBNZ W8, 0x1C94C48
	0x01C94C44 BL 0x1B6E8F8
	0x01C94C48 ADD X0, X31, 0x38
	0x01C94C4C MOV X1, X31
	0x01C94C50 BL 0x312E780
	0x01C94C54 LDR X8, [X19 + 0x20]
	0x01C94C58 CBZ X8, 0x1C94FB4
	0x01C94C5C LDRB W9, [X8 + 0x48]
	0x01C94C60 CBZ W9, 0x1C94BE8
	0x01C94C64 LDR W20, [X8 + 0x18]
	0x01C94C68 CBNZ W20, 0x1C94B48
	0x01C94C6C CMP W26, 0x3
	0x01C94C70 B.NE 0x1C94D74
	0x01C94C74 LDR X8, [X19 + 0x30]
	0x01C94C78 MOVN W26, 0x0
	0x01C94C7C STR X8, [X31 + 0x28]
	0x01C94C80 STR X31, [X19 + 0x30]
	0x01C94C84 STR W26, [X19]
	0x01C94C88 ADRP X8, 0x22B9000
	0x01C94C8C LDR X8, [X8 + 0xE90]
	0x01C94C90 ADD X0, X31, 0x28
	0x01C94C94 LDR X1, [X8]
	0x01C94C98 BL 0x24D8A24
	0x01C94C9C LDR X8, [X19 + 0x20]
	0x01C94CA0 CBZ X8, 0x1C94FB8
	0x01C94CA4 STR X0, [X8 + 0x10]
	0x01C94CA8 LDR W20, [X8 + 0x18]
	0x01C94CAC CBNZ W20, 0x1C94B48
	0x01C94CB0 CMP W26, 0x4
	0x01C94CB4 B.NE 0x1C94D24
	0x01C94CB8 LDR X8, [X19 + 0x38]
	0x01C94CBC MOVN W9, 0x0
	0x01C94CC0 STR X8, [X31 + 0x20]
	0x01C94CC4 STR X31, [X19 + 0x38]
	0x01C94CC8 STR W9, [X19]
	0x01C94CCC ADD X0, X31, 0x20
	0x01C94CD0 MOV X1, X31
	0x01C94CD4 BL 0x312C934
	0x01C94CD8 LDR X8, [X19 + 0x20]
	0x01C94CDC CBNZ X8, 0x1C949E0
	0x01C94CE0 BL 0x1B6EA1C

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+128], X30
	003 Move [X31+144], X22
	004 Move [X31+152], X21
	005 Move [X31+160], X20
	006 Move [X31+168], X19
	007 Move X20, 0x2590000
	008 Move W8, [X20+975]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {55}
	014 Move X0, 0x22BA000
	015 Move X0, [X0+3632]
	016 Call 0x1B6F7F0
	017 Move X0, 0x22BA000
	018 Move X0, [X0+3640]
	019 Call 0x1B6F7F0
	020 Move X0, 0x22BA000
	021 Move X0, [X0+3648]
	022 Call 0x1B6F7F0
	023 Move X0, 0x22BA000
	024 Move X0, [X0+3360]
	025 Call 0x1B6F7F0
	026 Move X0, 0x22BA000
	027 Move X0, [X0+1528]
	028 Call 0x1B6F7F0
	029 Move X0, 0x22BA000
	030 Move X0, [X0+1576]
	031 Call 0x1B6F7F0
	032 Move X0, 0x22BA000
	033 Move X0, [X0+3656]
	034 Call 0x1B6F7F0
	035 Move X0, 0x22BA000
	036 Move X0, [X0+3664]
	037 Call 0x1B6F7F0
	038 Move X0, 0x22BA000
	039 Move X0, [X0+3672]
	040 Call 0x1B6F7F0
	041 Move X0, 0x22BA000
	042 Move X0, [X0+3680]
	043 Call 0x1B6F7F0
	044 Move X0, 0x22BA000
	045 Move X0, [X0+3688]
	046 Call 0x1B6F7F0
	047 Move X0, 0x22BA000
	048 Move X0, [X0+3696]
	049 Call 0x1B6F7F0
	050 Move X0, 0x22BA000
	051 Move X0, [X0+3560]
	052 Call 0x1B6F7F0
	053 Move W8, 1
	054 Move [X20+975], W8
	055 Move [X31+136], X31
	056 Move [X31+24], X31
	057 Move X21, 0x22BA000
	058 Move W8, [X19]
	059 Move X21, [X21+3360]
	060 Compare W8, 0
	061 JumpIfEqual {70}
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X8, [X19+88]
	064 Move TEMP, 0
	065 Not TEMP
	066 Move W9, TEMP
	067 Move [X31+24], X8
	068 Move [X19+88], X31
	069 Move [X19], W9
	070 Move X8, [X19+80]
	071 Move TEMP, 0
	072 Not TEMP
	073 Move W9, TEMP
	074 Move [X31+136], X8
	075 Move [X19+80], X31
	076 Move [X19], W9
	077 Move W9, 0x1388
	078 Move [X19+56], X31
	079 Move [X19+64], X31
	080 Move [X19+48], X31
	081 Move W8, 1
	082 Move [X19+40], W9
	083 Move X8, [X19+32]
	084 Compare X8, 0
	085 JumpIfEqual {266}
	086 Move X0, [X8+64]
	087 Move X1, [X8+40]
	088 Move X9, [X8+24]
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Compare X0, 0
	091 JumpIfEqual {265}
	092 Move X8, 0x22BA000
	093 Move X8, [X8+3672]
	094 Move X1, [X8]
	095 Call Task`1<AuthResult>.GetAwaiter, X0
	096 Move X8, 0x22BA000
	097 Move X8, [X8+3664]
	098 Move [X31+136], X0
	099 Move X1, [X8]
	100 Add X0, X31, 136
	101 Call TaskAwaiter`1<AuthResult>.get_IsCompleted, X0
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {227}
	106 Move X8, 0x22BA000
	107 Move X8, [X8+3656]
	108 Move X1, [X8]
	109 Add X8, X31, 96
	110 Add X0, X31, 136
	111 Call TaskAwaiter`1<AuthResult>.GetResult, X0
	112 Move V0, [X31+6]
	113 Move X8, [X31+112]
	114 Move [X31+2], V0
	115 Move [X31+48], X8
	116 Move [X19+3], V0
	117 Move X9, [X19+48]
	118 Move [X19+64], X8
	119 Compare X9, 0
	120 JumpIfNotEqual {196}
	121 Move X22, 0x22BA000
	122 Move X22, [X22+1528]
	123 Move W8, [X19+72]
	124 Move X0, [X22]
	125 Move [X31+96], W8
	126 Add X1, X31, 96
	127 Call 0x1B6F900
	128 Move X20, X0
	129 Move W8, [X19+40]
	130 Move X0, [X22]
	131 Move [X31], W8
	132 Add X1, X31, 0
	133 Call 0x1B6F900
	134 Move X8, 0x22BA000
	135 Move X8, [X8+3696]
	136 Move X2, X0
	137 Move X0, [X8]
	138 Move X1, X20
	139 Move X3, X31
	140 Call String.Format, X0, X1, X2
	141 Move X8, 0x22BA000
	142 Move X8, [X8+1576]
	143 Move X20, X0
	144 Move X0, [X8]
	145 Move W8, [X0+224]
	146 Compare W8, 0
	147 JumpIfNotEqual {149}
	148 Call 0x1B6F8F8
	149 Move X8, 0x22BA000
	150 Move X9, 0x22BA000
	151 Move X8, [X8+3560]
	152 Move X9, [X9+3688]
	153 Move X3, [X8]
	154 Move X4, [X9]
	155 Move W0, 2048
	156 Move W5, 160
	157 Move X1, X20
	158 Move X2, X31
	159 Move X6, X31
	160 Call Log.Error, X0, X1, X2, X3, X4, X5
	161 Move X8, 0x22BA000
	162 Move X8, [X8+3680]
	163 Move W20, [X19+40]
	164 Move X0, [X8]
	165 Move W8, [X0+224]
	166 Compare W8, 0
	167 JumpIfNotEqual {169}
	168 Call 0x1B6F8F8
	169 Move W0, W20
	170 Move X1, X31
	171 Call Task.Delay, X0
	172 Compare X0, 0
	173 JumpIfEqual {267}
	174 Move X1, X31
	175 Call Task.GetAwaiter, X0
	176 Move [X31+24], X0
	177 Add X0, X31, 24
	178 Move X1, X31
	179 Call TaskAwaiter.get_IsCompleted, X0
	180 Move TEMP, X0
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfNotEqual {242}
	184 Add X0, X31, 24
	185 Move X1, X31
	186 Call TaskAwaiter.GetResult, X0
	187 Move W8, [X19+40]
	188 Move W9, [X19+72]
	189 Move W10, W8
	190 ShiftRight W10, 31
	191 And W10, W10, 0x3FFFFFFF
	192 Add W8, W9, 1
	193 Move [X19+40], W10
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move [X19+72], W8
	196 Add X8, X19, 48
	197 Move X9, [X8+16]
	198 Move V0, [X8]
	199 Move TEMP, 1
	200 Not TEMP
	201 Move W10, TEMP
	202 Move X20, 0x22BA000
	203 Move [X31+80], X9
	204 Move [X31+4], V0
	205 Move [X19+8], W10
	206 Move [X8], X31
	207 Move [X8+8], X31
	208 Move [X8+16], X31
	209 Move V0, [X31+4]
	210 Move X0, [X21]
	211 Move X8, X9
	212 Move [X31+16], X8
	213 Move [X31], V0
	214 Move W8, [X0+224]
	215 Move X20, [X20+3648]
	216 Compare W8, 0
	217 JumpIfNotEqual {219}
	218 Call 0x1B6F8F8
	219 Move V0, [X31]
	220 Move X8, [X31+16]
	221 Move X2, [X20]
	222 Add X1, X31, 96
	223 Move X0, X19
	224 Move [X31+6], V0
	225 Move [X31+112], X8
	226 Call AsyncTaskMethodBuilder`1<AuthResult>.SetResult, X0, X1
	227 Move [X19], W31
	228 Move X8, [X31+136]
	229 Move [X19+80], X8
	230 Move X0, [X21]
	231 Move W8, [X0+224]
	232 Compare W8, 0
	233 JumpIfNotEqual {235}
	234 Call 0x1B6F8F8
	235 Move X8, 0x22BA000
	236 Move X8, [X8+3632]
	237 Add X0, X19, 8
	238 Move X3, [X8]
	239 Add X1, X31, 136
	240 Move X2, X19
	241 Call AsyncTaskMethodBuilder`1<AuthResult>.AwaitUnsafeOnCompleted, X0, X1, X2
	242 Move W8, 1
	243 Move [X19], W8
	244 Move X8, [X31+24]
	245 Move [X19+88], X8
	246 Move X0, [X21]
	247 Move W8, [X0+224]
	248 Compare W8, 0
	249 JumpIfNotEqual {251}
	250 Call 0x1B6F8F8
	251 Move X8, 0x22BA000
	252 Move X8, [X8+3640]
	253 Add X0, X19, 8
	254 Move X3, [X8]
	255 Add X1, X31, 24
	256 Move X2, X19
	257 Call AsyncTaskMethodBuilder`1<AuthResult>.AwaitUnsafeOnCompleted, X0, X1, X2
	258 Move X20, [X31+160]
	259 Move X19, [X31+168]
	260 Move X22, [X31+144]
	261 Move X21, [X31+152]
	262 Move X30, [X31+128]
	263 Add X31, X31, 176
	264 Return 
	265 Call 0x1B6FA1C
	266 Call 0x1B6FA1C
	267 Call 0x1B6FA1C
	268 Move X20, X0
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Move X0, X20
	271 Call 0x3D1A840
	272 Move X20, X0
	273 Move X0, 0x22BA000
	274 Move X0, [X0+1648]
	275 Call 0x1B6F804
	276 Move X8, [X20]
	277 Move X1, [X8]
	278 Call 0x1B6FD6C
	279 Move TEMP, X0
	280 And TEMP, TEMP, 1
	281 Compare TEMP, 1
	282 JumpIfNotEqual {306}
	283 Move X20, [X20]
	284 Call 0x3D1A850
	285 Move TEMP, 1
	286 Not TEMP
	287 Move W8, TEMP
	288 Move [X19+56], X31
	289 Move [X19+64], X31
	290 Move [X19+48], X31
	291 Move [X19+8], W8
	292 Move X0, 0x22BA000
	293 Move X0, [X0+3360]
	294 Call 0x1B6F804
	295 Move W8, [X0+224]
	296 Compare W8, 0
	297 JumpIfNotEqual {299}
	298 Call 0x1B6F8F8
	299 Move X0, 0x22BA000
	300 Move X0, [X0+3704]
	301 Call 0x1B6F804
	302 Move X2, X0
	303 Move X0, X19
	304 Move X1, X20
	305 Call AsyncTaskMethodBuilder`1<AuthResult>.SetException, X0, X1
	306 Move W0, 8
	307 Call 0x3D1A860
	308 Move X8, [X20]
	309 Move [X0], X8
	310 Move X1, 0x2089000
	311 Add X1, X1, 3032
	312 Move X2, X31
	313 Call 0x3D1A870
	314 Move X20, X0
	315 Call 0x3D1A850
	316 Move X0, X20
	317 Call 0x1C8518C
	318 Call 0x18F56A8

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x01C94CE4 MOVZ W8, 0x2
	0x01C94CE8 STR W8, [X19]
	0x01C94CEC LDRB W8, [X31 + 0x38]
	0x01C94CF0 STRB W8, [X19 + 0x28]
	0x01C94CF4 LDR X0, [X25]
	0x01C94CF8 LDR W8, [X0 + 0xE0]
	0x01C94CFC CBNZ W8, 0x1C94D04
	0x01C94D00 BL 0x1B6E8F8
	0x01C94D04 ADRP X8, 0x22B9000
	0x01C94D08 LDR X8, [X8 + 0xEF0]
	0x01C94D0C ADD X0, X19, 0x8
	0x01C94D10 LDR X3, [X8]
	0x01C94D14 ADD X1, X31, 0x38
	0x01C94D18 MOV X2, X19
	0x01C94D1C BL 0x201FD88
	0x01C94D20 B 0x1C94BB8
	0x01C94D24 LDR X20, [X8 + 0x10]
	0x01C94D28 CBZ X20, 0x1C94FBC
	0x01C94D2C ADRP X10, 0x22B9000
	0x01C94D30 LDR X8, [X20]
	0x01C94D34 LDR X10, [X10 + 0xF18]
	0x01C94D38 LDRH W9, [X8 + 0x12E]
	0x01C94D3C LDR X1, [X10]
	0x01C94D40 CBZ X9, 0x1C94D64
	0x01C94D44 LDR X10, [X8 + 0xB0]
	0x01C94D48 ADD X10, X10, 0x8
	0x01C94D4C LDUR X11, [X10 - 0x8]
	0x01C94D50 CMP X11, X1
	0x01C94D54 B.EQ 0x1C94EE0
	0x01C94D58 SUBS X9, X9, 0x1
	0x01C94D5C ADD X10, X10, 0x10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2590000
	007 Move X21, 0x22BA000
	008 Move W8, [X22+976]
	009 Move X21, [X21+3360]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x22BA000
	017 Move X0, [X0+3712]
	018 Call 0x1B6F7F0
	019 Move X0, 0x22BA000
	020 Move X0, [X0+3360]
	021 Call 0x1B6F7F0
	022 Move W8, 1
	023 Move [X22+976], W8
	024 Move X0, [X21]
	025 Move X21, 0x22BA000
	026 Move W8, [X0+224]
	027 Move X21, [X21+3712]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1B6F8F8
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<AuthResult>.SetStateMachine, X0, X1
	040 Return 

