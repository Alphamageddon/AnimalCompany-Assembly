Type: AnimalCompany.AuthCommands/<AuthRetryLoop>d__6

Method: System.Void MoveNext()

Disassembly:
	0x01D49C00 ADRP X8, 0x23AB000
	0x01D49C04 LDR X8, [X8 + 0x870]
	0x01D49C08 LDR X3, [X27]
	0x01D49C0C LDR X1, [X8]
	0x01D49C10 MOV X0, X23
	0x01D49C14 BL 0x2AA5098
	0x01D49C18 MOV X0, X23
	0x01D49C1C BL 0x1D47C0C
	0x01D49C20 CBZ X20, 0x1D49DB4
	0x01D49C24 MOV X4, X0
	0x01D49C28 MOVZ W3, 0x1
	0x01D49C2C MOV X0, X20
	0x01D49C30 MOV X1, X21
	0x01D49C34 MOV X2, X22
	0x01D49C38 MOV X5, X31
	0x01D49C3C MOV X6, X31
	0x01D49C40 MOV X7, X31
	0x01D49C44 BL 0x1D6A8EC
	0x01D49C48 CBZ X0, 0x1D49DB8
	0x01D49C4C ADRP X8, 0x23AB000
	0x01D49C50 LDR X8, [X8 + 0x840]
	0x01D49C54 LDR X1, [X8]
	0x01D49C58 BL 0x269F5D0
	0x01D49C5C ADRP X8, 0x23AB000
	0x01D49C60 LDR X8, [X8 + 0x838]
	0x01D49C64 STR X0, [X31 + 0x28]
	0x01D49C68 LDR X1, [X8]
	0x01D49C6C ADD X0, X31, 0x28
	0x01D49C70 BL 0x2677430
	0x01D49C74 TBNZ X0, 0x0, 0x1D49A50
	0x01D49C78 MOVZ W8, 0x3
	0x01D49C7C STR W8, [X19]
	0x01D49C80 LDR X8, [X31 + 0x28]
	0x01D49C84 STR X8, [X19 + 0x30]
	0x01D49C88 LDR X0, [X25]
	0x01D49C8C LDR W8, [X0 + 0xE0]
	0x01D49C90 CBNZ W8, 0x1D49C98
	0x01D49C94 BL 0x1C16DFC
	0x01D49C98 ADRP X8, 0x23AB000
	0x01D49C9C LDR X8, [X8 + 0x7E0]
	0x01D49CA0 ADD X0, X19, 0x8
	0x01D49CA4 LDR X3, [X8]
	0x01D49CA8 ADD X1, X31, 0x28
	0x01D49CAC MOV X2, X19
	0x01D49CB0 BL 0x212C1A0
	0x01D49CB4 B 0x1D49730
	0x01D49CB8 LDR W9, [X10]
	0x01D49CBC ADD W9, W9, 0x1
	0x01D49CC0 ADD X8, X8, W9, 0x4, SXTW
	0x01D49CC4 ADD X0, X8, 0x138
	0x01D49CC8 LDP X8, X1, [X0]
	0x01D49CCC MOV X0, X20
	0x01D49CD0 BLR X8
	0x01D49CD4 TBZ X0, 0x0, 0x1D49AA0
	0x01D49CD8 ADRP X8, 0x23AA000
	0x01D49CDC LDR X8, [X8 + 0x648]
	0x01D49CE0 LDR X0, [X8]
	0x01D49CE4 LDR W8, [X0 + 0xE0]
	0x01D49CE8 CBNZ W8, 0x1D49CF0
	0x01D49CEC BL 0x1C16DFC
	0x01D49CF0 BL 0x1D32AF4
	0x01D49CF4 LDR X8, [X19 + 0x20]
	0x01D49CF8 CBZ X8, 0x1D49DBC
	0x01D49CFC LDR X9, [X8 + 0x30]
	0x01D49D00 CBZ X9, 0x1D49DC0
	0x01D49D04 CBZ X0, 0x1D49DC4
	0x01D49D08 LDR X1, [X8 + 0x10]
	0x01D49D0C LDR X3, [X9 + 0x10]
	0x01D49D10 LDP X4, X2, [X9 + 0x20]
	0x01D49D14 MOV X5, X31
	0x01D49D18 MOV X6, X31
	0x01D49D1C MOV X7, X31
	0x01D49D20 STP X31, X31, [X31]
	0x01D49D24 STR X31, [X31 + 0x10]
	0x01D49D28 BL 0x1D6F354
	0x01D49D2C CBZ X0, 0x1D49DC8
	0x01D49D30 MOV X1, X31
	0x01D49D34 BL 0x33ED394
	0x01D49D38 STR X0, [X31 + 0x20]
	0x01D49D3C ADD X0, X31, 0x20
	0x01D49D40 MOV X1, X31
	0x01D49D44 BL 0x32C3A80
	0x01D49D48 TBNZ X0, 0x0, 0x1D49A94
	0x01D49D4C MOVZ W8, 0x4
	0x01D49D50 STR W8, [X19]
	0x01D49D54 LDR X8, [X31 + 0x20]
	0x01D49D58 STR X8, [X19 + 0x38]
	0x01D49D5C LDR X0, [X25]
	0x01D49D60 LDR W8, [X0 + 0xE0]
	0x01D49D64 CBNZ W8, 0x1D49D6C
	0x01D49D68 BL 0x1C16DFC
	0x01D49D6C ADRP X8, 0x23AB000
	0x01D49D70 LDR X8, [X8 + 0x7E8]
	0x01D49D74 ADD X0, X19, 0x8
	0x01D49D78 LDR X3, [X8]
	0x01D49D7C ADD X1, X31, 0x20
	0x01D49D80 MOV X2, X19
	0x01D49D84 BL 0x212C7DC
	0x01D49D88 B 0x1D49730
	0x01D49D8C BL 0x1C16F20
	0x01D49D90 BL 0x1C16F20
	0x01D49D94 BL 0x1C16F20
	0x01D49D98 BL 0x1C16F20
	0x01D49D9C BL 0x1C16F20
	0x01D49DA0 BL 0x1C16F20
	0x01D49DA4 BL 0x1C16F20
	0x01D49DA8 BL 0x1C16F20
	0x01D49DAC BL 0x1C16F20
	0x01D49DB0 BL 0x1C16F20
	0x01D49DB4 BL 0x1C16F20
	0x01D49DB8 BL 0x1C16F20
	0x01D49DBC BL 0x1C16F20
	0x01D49DC0 BL 0x1C16F20
	0x01D49DC4 BL 0x1C16F20
	0x01D49DC8 BL 0x1C16F20
	0x01D49DCC B 0x1D49E4C
	0x01D49DD0 B 0x1D4A084
	0x01D49DD4 MOV X20, X1
	0x01D49DD8 MOV X21, X0
	0x01D49DDC MOVZ W26, 0x3
	0x01D49DE0 B 0x1D49E54
	0x01D49DE4 B 0x1D4A084
	0x01D49DE8 B 0x1D4A084
	0x01D49DEC B 0x1D4A084
	0x01D49DF0 B 0x1D4A084
	0x01D49DF4 B 0x1D4A084
	0x01D49DF8 B 0x1D4A084
	0x01D49DFC B 0x1D49E4C
	0x01D49E00 B 0x1D49E4C
	0x01D49E04 B 0x1D49E4C
	0x01D49E08 B 0x1D49E4C
	0x01D49E0C B 0x1D49E4C
	0x01D49E10 B 0x1D49E4C
	0x01D49E14 B 0x1D49E4C
	0x01D49E18 B 0x1D49E4C
	0x01D49E1C B 0x1D49E4C
	0x01D49E20 B 0x1D49E4C
	0x01D49E24 B 0x1D49E4C
	0x01D49E28 B 0x1D49E4C
	0x01D49E2C B 0x1D4A084
	0x01D49E30 B 0x1D4A084
	0x01D49E34 B 0x1D49E4C
	0x01D49E38 B 0x1D49E4C
	0x01D49E3C B 0x1D49E4C
	0x01D49E40 B 0x1D4A084
	0x01D49E44 B 0x1D49608
	0x01D49E48 B 0x1D49E4C
	0x01D49E4C MOV X20, X1
	0x01D49E50 MOV X21, X0
	0x01D49E54 CMP W20, 0x1
	0x01D49E58 B.NE 0x1D49610
	0x01D49E5C MOV X0, X21
	0x01D49E60 BL 0x3EB1AD0
	0x01D49E64 MOV X20, X0
	0x01D49E68 ADRP X0, 0x23AA000
	0x01D49E6C LDR X0, [X0 + 0x7D0]
	0x01D49E70 BL 0x1C16D08
	0x01D49E74 LDR X8, [X20]
	0x01D49E78 LDR X1, [X8]
	0x01D49E7C BL 0x1C17270
	0x01D49E80 TBZ X0, 0x0, 0x1D4A014
	0x01D49E84 LDR X20, [X20]
	0x01D49E88 BL 0x3EB1AE0
	0x01D49E8C ADRP X0, 0x23AB000
	0x01D49E90 LDR X0, [X0 + 0x8A0]
	0x01D49E94 BL 0x1C16D08
	0x01D49E98 CBZ X20, 0x1D49EC4
	0x01D49E9C LDR X8, [X20]
	0x01D49EA0 LDRB W9, [X0 + 0x130]
	0x01D49EA4 LDRB W10, [X8 + 0x130]
	0x01D49EA8 CMP W10, W9
	0x01D49EAC B.CC 0x1D49EC4
	0x01D49EB0 LDR X8, [X8 + 0xC8]
	0x01D49EB4 ADD X8, X8, X9, 0x3, LSL
	0x01D49EB8 LDUR X8, [X8 - 0x8]
	0x01D49EBC CMP X8, X0
	0x01D49EC0 B.EQ 0x1D49FAC
	0x01D49EC4 LDR X8, [X19 + 0x20]
	0x01D49EC8 CBZ X8, 0x1D4A038
	0x01D49ECC ADD X1, X8, 0x10
	0x01D49ED0 MOV X0, X20
	0x01D49ED4 BL 0x1D47F54
	0x01D49ED8 TBNZ X0, 0x0, 0x1D49F20
	0x01D49EDC LDR X22, [X19 + 0x20]
	0x01D49EE0 CBZ X22, 0x1D4A040
	0x01D49EE4 MOVZ W8, 0x7
	0x01D49EE8 STR W8, [X22 + 0x18]
	0x01D49EEC CBZ X20, 0x1D4A044
	0x01D49EF0 LDR X8, [X20]
	0x01D49EF4 LDP X9, X1, [X8 + 0x188]
	0x01D49EF8 MOV X0, X20
	0x01D49EFC BLR X9
	0x01D49F00 MOV X21, X0
	0x01D49F04 ADRP X0, 0x23AB000
	0x01D49F08 LDR X0, [X0 + 0x8A8]
	0x01D49F0C BL 0x1C16D08
	0x01D49F10 MOV X1, X21
	0x01D49F14 MOV X2, X31
	0x01D49F18 BL 0x321B938
	0x01D49F1C STR X0, [X22 + 0x20]
	0x01D49F20 LDR X8, [X19 + 0x20]
	0x01D49F24 CBZ X8, 0x1D4A03C
	0x01D49F28 LDR W9, [X8 + 0x18]
	0x01D49F2C CBZ W9, 0x1D49A70
	0x01D49F30 CMP W9, 0xC
	0x01D49F34 B.EQ 0x1D49A70
	0x01D49F38 ADRP X0, 0x23AA000
	0x01D49F3C LDR X0, [X0 + 0x788]
	0x01D49F40 BL 0x1C16D08
	0x01D49F44 LDR W8, [X0 + 0xE0]
	0x01D49F48 CBNZ W8, 0x1D49F50
	0x01D49F4C BL 0x1C16DFC
	0x01D49F50 ADRP X0, 0x23AB000
	0x01D49F54 LDR X0, [X0 + 0x8B0]
	0x01D49F58 BL 0x1C16D08
	0x01D49F5C MOV X21, X0
	0x01D49F60 ADRP X0, 0x23AB000
	0x01D49F64 LDR X0, [X0 + 0x718]
	0x01D49F68 BL 0x1C16D08
	0x01D49F6C MOV X22, X0
	0x01D49F70 ADRP X0, 0x23AB000
	0x01D49F74 LDR X0, [X0 + 0x740]
	0x01D49F78 BL 0x1C16D08
	0x01D49F7C MOV X5, X0
	0x01D49F80 MOVZ W0, 0x800
	0x01D49F84 MOVZ W6, 0x148
	0x01D49F88 MOV X1, X21
	0x01D49F8C MOV X2, X20
	0x01D49F90 MOV X3, X31
	0x01D49F94 MOV X4, X22
	0x01D49F98 MOV X7, X31
	0x01D49F9C BL 0x35C2674
	0x01D49FA0 LDR X8, [X19 + 0x20]
	0x01D49FA4 CBNZ X8, 0x1D49A70
	0x01D49FA8 BL 0x1C16F20
	0x01D49FAC ADRP X0, 0x23AA000
	0x01D49FB0 LDR X0, [X0 + 0x788]
	0x01D49FB4 BL 0x1C16D08
	0x01D49FB8 LDR W8, [X0 + 0xE0]
	0x01D49FBC CBNZ W8, 0x1D49FC4
	0x01D49FC0 BL 0x1C16DFC
	0x01D49FC4 ADRP X0, 0x23AB000
	0x01D49FC8 LDR X0, [X0 + 0x8B8]
	0x01D49FCC BL 0x1C16D08
	0x01D49FD0 MOV X20, X0
	0x01D49FD4 ADRP X0, 0x23AB000
	0x01D49FD8 LDR X0, [X0 + 0x718]
	0x01D49FDC BL 0x1C16D08
	0x01D49FE0 MOV X21, X0
	0x01D49FE4 ADRP X0, 0x23AB000
	0x01D49FE8 LDR X0, [X0 + 0x740]
	0x01D49FEC BL 0x1C16D08
	0x01D49FF0 MOV X4, X0
	0x01D49FF4 MOVZ W0, 0x800
	0x01D49FF8 MOVZ W5, 0x13E
	0x01D49FFC MOV X1, X20
	0x01D4A000 MOV X2, X31
	0x01D4A004 MOV X3, X21
	0x01D4A008 MOV X6, X31
	0x01D4A00C BL 0x35C2014
	0x01D4A010 B 0x1D4A1CC
	0x01D4A014 MOVZ W0, 0x8
	0x01D4A018 BL 0x3EB1AF0
	0x01D4A01C LDR X8, [X20]
	0x01D4A020 STR X8, [X0]
	0x01D4A024 ADRP X1, 0x216A000
	0x01D4A028 ADD X1, X1, 0xE58
	0x01D4A02C MOV X2, X31
	0x01D4A030 BL 0x3EB1B00
	0x01D4A034 B 0x1D4A200
	0x01D4A038 BL 0x1C16F20
	0x01D4A03C BL 0x1C16F20
	0x01D4A040 BL 0x1C16F20
	0x01D4A044 BL 0x1C16F20
	0x01D4A048 B 0x1D49608
	0x01D4A04C B 0x1D49608
	0x01D4A050 B 0x1D49608
	0x01D4A054 B 0x1D49608
	0x01D4A058 B 0x1D49608
	0x01D4A05C B 0x1D49608
	0x01D4A060 B 0x1D49608
	0x01D4A064 B 0x1D49608
	0x01D4A068 B 0x1D49608
	0x01D4A06C B 0x1D49608
	0x01D4A070 B 0x1D49608
	0x01D4A074 MOV X20, X1
	0x01D4A078 MOV X21, X0
	0x01D4A07C BL 0x3EB1AE0
	0x01D4A080 B 0x1D49610
	0x01D4A084 MOV X20, X1
	0x01D4A088 MOV X21, X0
	0x01D4A08C CMP W20, 0x1
	0x01D4A090 B.NE 0x1D49610
	0x01D4A094 MOV X0, X21
	0x01D4A098 BL 0x3EB1AD0
	0x01D4A09C MOV X20, X0
	0x01D4A0A0 ADRP X0, 0x23A9000
	0x01D4A0A4 LDR X0, [X0 + 0x7D0]
	0x01D4A0A8 BL 0x1C16D08
	0x01D4A0AC LDR X8, [X20]
	0x01D4A0B0 LDR X1, [X8]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+128], X30
	003 Move [X31+144], X22
	004 Move [X31+152], X21
	005 Move [X31+160], X20
	006 Move [X31+168], X19
	007 Move X20, 0x2690000
	008 Move W8, [X20+1917]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {55}
	014 Move X0, 0x23AC000
	015 Move X0, [X0+1928]
	016 Call 0x1C17CF4
	017 Move X0, 0x23AC000
	018 Move X0, [X0+1936]
	019 Call 0x1C17CF4
	020 Move X0, 0x23AC000
	021 Move X0, [X0+1944]
	022 Call 0x1C17CF4
	023 Move X0, 0x23AC000
	024 Move X0, [X0+1688]
	025 Call 0x1C17CF4
	026 Move X0, 0x23AB000
	027 Move X0, [X0+1880]
	028 Call 0x1C17CF4
	029 Move X0, 0x23AB000
	030 Move X0, [X0+1928]
	031 Call 0x1C17CF4
	032 Move X0, 0x23AC000
	033 Move X0, [X0+1952]
	034 Call 0x1C17CF4
	035 Move X0, 0x23AC000
	036 Move X0, [X0+1960]
	037 Call 0x1C17CF4
	038 Move X0, 0x23AC000
	039 Move X0, [X0+1968]
	040 Call 0x1C17CF4
	041 Move X0, 0x23AC000
	042 Move X0, [X0+1976]
	043 Call 0x1C17CF4
	044 Move X0, 0x23AC000
	045 Move X0, [X0+1816]
	046 Call 0x1C17CF4
	047 Move X0, 0x23AC000
	048 Move X0, [X0+1984]
	049 Call 0x1C17CF4
	050 Move X0, 0x23AC000
	051 Move X0, [X0+1992]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X20+1917], W8
	055 Move [X31+136], X31
	056 Move [X31+24], X31
	057 Move X21, 0x23AC000
	058 Move W8, [X19]
	059 Move X21, [X21+1688]
	060 Compare W8, 0
	061 JumpIfEqual {70}
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X8, [X19+88]
	064 Move TEMP, 0
	065 Not TEMP
	066 Move W9, TEMP
	067 Move [X31+24], X8
	068 Move [X19+88], X31
	069 Move [X19], W9
	070 Move X8, [X19+80]
	071 Move TEMP, 0
	072 Not TEMP
	073 Move W9, TEMP
	074 Move [X31+136], X8
	075 Move [X19+80], X31
	076 Move [X19], W9
	077 Move W9, 0x1388
	078 Move [X19+56], X31
	079 Move [X19+64], X31
	080 Move [X19+48], X31
	081 Move W8, 1
	082 Move [X19+40], W9
	083 Move X8, [X19+32]
	084 Compare X8, 0
	085 JumpIfEqual {266}
	086 Move X0, [X8+64]
	087 Move X1, [X8+40]
	088 Move X9, [X8+24]
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Compare X0, 0
	091 JumpIfEqual {265}
	092 Move X8, 0x23AC000
	093 Move X8, [X8+1968]
	094 Move X1, [X8]
	095 Call Task`1<AuthResult>.GetAwaiter, X0
	096 Move X8, 0x23AC000
	097 Move X8, [X8+1960]
	098 Move [X31+136], X0
	099 Move X1, [X8]
	100 Add X0, X31, 136
	101 Call TaskAwaiter`1<AuthResult>.get_IsCompleted, X0
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {227}
	106 Move X8, 0x23AC000
	107 Move X8, [X8+1952]
	108 Move X1, [X8]
	109 Add X8, X31, 96
	110 Add X0, X31, 136
	111 Call TaskAwaiter`1<AuthResult>.GetResult, X0
	112 Move V0, [X31+6]
	113 Move X8, [X31+112]
	114 Move [X31+2], V0
	115 Move [X31+48], X8
	116 Move [X19+3], V0
	117 Move X9, [X19+48]
	118 Move [X19+64], X8
	119 Compare X9, 0
	120 JumpIfNotEqual {196}
	121 Move X22, 0x23AB000
	122 Move X22, [X22+1880]
	123 Move W8, [X19+72]
	124 Move X0, [X22]
	125 Move [X31+96], W8
	126 Add X1, X31, 96
	127 Call 0x1C17E04
	128 Move X20, X0
	129 Move W8, [X19+40]
	130 Move X0, [X22]
	131 Move [X31], W8
	132 Add X1, X31, 0
	133 Call 0x1C17E04
	134 Move X8, 0x23AC000
	135 Move X8, [X8+1992]
	136 Move X2, X0
	137 Move X0, [X8]
	138 Move X1, X20
	139 Move X3, X31
	140 Call String.Format, X0, X1, X2
	141 Move X8, 0x23AB000
	142 Move X8, [X8+1928]
	143 Move X20, X0
	144 Move X0, [X8]
	145 Move W8, [X0+224]
	146 Compare W8, 0
	147 JumpIfNotEqual {149}
	148 Call 0x1C17DFC
	149 Move X8, 0x23AC000
	150 Move X9, 0x23AC000
	151 Move X8, [X8+1816]
	152 Move X9, [X9+1984]
	153 Move X3, [X8]
	154 Move X4, [X9]
	155 Move W0, 2048
	156 Move W5, 185
	157 Move X1, X20
	158 Move X2, X31
	159 Move X6, X31
	160 Call Log.Error, X0, X1, X2, X3, X4, X5
	161 Move X8, 0x23AC000
	162 Move X8, [X8+1976]
	163 Move W20, [X19+40]
	164 Move X0, [X8]
	165 Move W8, [X0+224]
	166 Compare W8, 0
	167 JumpIfNotEqual {169}
	168 Call 0x1C17DFC
	169 Move W0, W20
	170 Move X1, X31
	171 Call Task.Delay, X0
	172 Compare X0, 0
	173 JumpIfEqual {267}
	174 Move X1, X31
	175 Call Task.GetAwaiter, X0
	176 Move [X31+24], X0
	177 Add X0, X31, 24
	178 Move X1, X31
	179 Call TaskAwaiter.get_IsCompleted, X0
	180 Move TEMP, X0
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfNotEqual {242}
	184 Add X0, X31, 24
	185 Move X1, X31
	186 Call TaskAwaiter.GetResult, X0
	187 Move W8, [X19+40]
	188 Move W9, [X19+72]
	189 Move W10, W8
	190 ShiftRight W10, 31
	191 And W10, W10, 0x3FFFFFFF
	192 Add W8, W9, 1
	193 Move [X19+40], W10
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move [X19+72], W8
	196 Add X8, X19, 48
	197 Move X9, [X8+16]
	198 Move V0, [X8]
	199 Move TEMP, 1
	200 Not TEMP
	201 Move W10, TEMP
	202 Move X20, 0x23AC000
	203 Move [X31+80], X9
	204 Move [X31+4], V0
	205 Move [X19+8], W10
	206 Move [X8], X31
	207 Move [X8+8], X31
	208 Move [X8+16], X31
	209 Move V0, [X31+4]
	210 Move X0, [X21]
	211 Move X8, X9
	212 Move [X31+16], X8
	213 Move [X31], V0
	214 Move W8, [X0+224]
	215 Move X20, [X20+1944]
	216 Compare W8, 0
	217 JumpIfNotEqual {219}
	218 Call 0x1C17DFC
	219 Move V0, [X31]
	220 Move X8, [X31+16]
	221 Move X2, [X20]
	222 Add X1, X31, 96
	223 Move X0, X19
	224 Move [X31+6], V0
	225 Move [X31+112], X8
	226 Call AsyncTaskMethodBuilder`1<AuthResult>.SetResult, X0, X1
	227 Move [X19], W31
	228 Move X8, [X31+136]
	229 Move [X19+80], X8
	230 Move X0, [X21]
	231 Move W8, [X0+224]
	232 Compare W8, 0
	233 JumpIfNotEqual {235}
	234 Call 0x1C17DFC
	235 Move X8, 0x23AC000
	236 Move X8, [X8+1928]
	237 Add X0, X19, 8
	238 Move X3, [X8]
	239 Add X1, X31, 136
	240 Move X2, X19
	241 Call AsyncTaskMethodBuilder`1<AuthResult>.AwaitUnsafeOnCompleted, X0, X1, X2
	242 Move W8, 1
	243 Move [X19], W8
	244 Move X8, [X31+24]
	245 Move [X19+88], X8
	246 Move X0, [X21]
	247 Move W8, [X0+224]
	248 Compare W8, 0
	249 JumpIfNotEqual {251}
	250 Call 0x1C17DFC
	251 Move X8, 0x23AC000
	252 Move X8, [X8+1936]
	253 Add X0, X19, 8
	254 Move X3, [X8]
	255 Add X1, X31, 24
	256 Move X2, X19
	257 Call AsyncTaskMethodBuilder`1<AuthResult>.AwaitUnsafeOnCompleted, X0, X1, X2
	258 Move X20, [X31+160]
	259 Move X19, [X31+168]
	260 Move X22, [X31+144]
	261 Move X21, [X31+152]
	262 Move X30, [X31+128]
	263 Add X31, X31, 176
	264 Return 
	265 Call 0x1C17F20
	266 Call 0x1C17F20
	267 Call 0x1C17F20
	268 Move X20, X0
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Move X0, X20
	271 Call 0x3EB2AD0
	272 Move X20, X0
	273 Move X0, 0x23AA000
	274 Move X0, [X0+2000]
	275 Call 0x1C17D08
	276 Move X8, [X20]
	277 Move X1, [X8]
	278 Call 0x1C18270
	279 Move TEMP, X0
	280 And TEMP, TEMP, 1
	281 Compare TEMP, 1
	282 JumpIfNotEqual {306}
	283 Move X20, [X20]
	284 Call 0x3EB2AE0
	285 Move TEMP, 1
	286 Not TEMP
	287 Move W8, TEMP
	288 Move [X19+56], X31
	289 Move [X19+64], X31
	290 Move [X19+48], X31
	291 Move [X19+8], W8
	292 Move X0, 0x23AB000
	293 Move X0, [X0+1688]
	294 Call 0x1C17D08
	295 Move W8, [X0+224]
	296 Compare W8, 0
	297 JumpIfNotEqual {299}
	298 Call 0x1C17DFC
	299 Move X0, 0x23AB000
	300 Move X0, [X0+2000]
	301 Call 0x1C17D08
	302 Move X2, X0
	303 Move X0, X19
	304 Move X1, X20
	305 Call AsyncTaskMethodBuilder`1<AuthResult>.SetException, X0, X1
	306 Move W0, 8
	307 Call 0x3EB2AF0
	308 Move X8, [X20]
	309 Move [X0], X8
	310 Move X1, 0x216B000
	311 Add X1, X1, 3672
	312 Move X2, X31
	313 Call 0x3EB2B00
	314 Move X20, X0
	315 Call 0x3EB2AE0
	316 Move X0, X20
	317 Call 0x1D2D690
	318 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x01D4A0B4 BL 0x1C17270
	0x01D4A0B8 TBZ X0, 0x0, 0x1D4A1E0
	0x01D4A0BC LDR X20, [X20]
	0x01D4A0C0 BL 0x3EB1AE0
	0x01D4A0C4 ADRP X0, 0x23AA000
	0x01D4A0C8 LDR X0, [X0 + 0x8A0]
	0x01D4A0CC BL 0x1C16D08
	0x01D4A0D0 CBZ X20, 0x1D4A0FC
	0x01D4A0D4 LDR X8, [X20]
	0x01D4A0D8 LDRB W9, [X0 + 0x130]
	0x01D4A0DC LDRB W10, [X8 + 0x130]
	0x01D4A0E0 CMP W10, W9
	0x01D4A0E4 B.CC 0x1D4A0FC
	0x01D4A0E8 LDR X8, [X8 + 0xC8]
	0x01D4A0EC ADD X8, X8, X9, 0x3, LSL
	0x01D4A0F0 LDUR X8, [X8 - 0x8]
	0x01D4A0F4 CMP X8, X0
	0x01D4A0F8 B.EQ 0x1D4A168
	0x01D4A0FC ADRP X0, 0x23A9000
	0x01D4A100 LDR X0, [X0 + 0x788]
	0x01D4A104 BL 0x1C16D08
	0x01D4A108 LDR W8, [X0 + 0xE0]
	0x01D4A10C CBNZ W8, 0x1D4A114
	0x01D4A110 BL 0x1C16DFC
	0x01D4A114 ADRP X0, 0x23AA000
	0x01D4A118 LDR X0, [X0 + 0x8C0]
	0x01D4A11C BL 0x1C16D08
	0x01D4A120 MOV X21, X0
	0x01D4A124 ADRP X0, 0x23AA000
	0x01D4A128 LDR X0, [X0 + 0x718]
	0x01D4A12C BL 0x1C16D08

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x268F000
	007 Move X21, 0x23AB000
	008 Move W8, [X22+1918]
	009 Move X21, [X21+1688]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x23AB000
	017 Move X0, [X0+2008]
	018 Call 0x1C17CF4
	019 Move X0, 0x23AB000
	020 Move X0, [X0+1688]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1918], W8
	024 Move X0, [X21]
	025 Move X21, 0x23AB000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2008]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<AuthResult>.SetStateMachine, X0, X1
	040 Return 

