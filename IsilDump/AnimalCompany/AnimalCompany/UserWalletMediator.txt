Type: AnimalCompany.UserWalletMediator

Method: System.Void Awake()

Disassembly:
	0x01C98588 FMUL S0, S0, S3
	0x01C9858C FSUB S2, S10, S1
	0x01C98590 FSUB S1, S9, S4
	0x01C98594 FSUB S0, S8, S0
	0x01C98598 BL 0x3AA76F8
	0x01C9859C MOVZ W0, 0x64
	0x01C985A0 MOV X1, X31
	0x01C985A4 BL 0x3AECD78
	0x01C985A8 TBNZ X0, 0x0, 0x1C985BC
	0x01C985AC MOVZ W0, 0x113
	0x01C985B0 MOV X1, X31
	0x01C985B4 BL 0x3AECD78
	0x01C985B8 TBZ X0, 0x0, 0x1C98654
	0x01C985BC MOV X0, X19
	0x01C985C0 MOV X1, X31
	0x01C985C4 BL 0x3A9B084
	0x01C985C8 MOV X20, X0
	0x01C985CC MOV X0, X19
	0x01C985D0 MOV X1, X31
	0x01C985D4 BL 0x3A9B084
	0x01C985D8 CBZ X0, 0x1C98C84
	0x01C985DC MOV X1, X31
	0x01C985E0 BL 0x3AA7658
	0x01C985E4 MOV X0, X19
	0x01C985E8 MOV X1, X31
	0x01C985EC MOV V8.16B, V0.16B
	0x01C985F0 MOV V9.16B, V1.16B
	0x01C985F4 MOV V10.16B, V2.16B
	0x01C985F8 BL 0x3A9B084
	0x01C985FC CBZ X0, 0x1C98C84
	0x01C98600 MOV X1, X31
	0x01C98604 BL 0x3AA79D8
	0x01C98608 MOV X0, X31
	0x01C9860C MOV V11.16B, V0.16B
	0x01C98610 MOV V12.16B, V1.16B
	0x01C98614 MOV V13.16B, V2.16B
	0x01C98618 BL 0x3AA481C
	0x01C9861C CBZ X20, 0x1C98C84
	0x01C98620 LDR V3, [X31 + 0x2]
	0x01C98624 MOV X0, X20
	0x01C98628 MOV X1, X31
	0x01C9862C FMUL S1, S3, S13
	0x01C98630 FMUL S2, S3, S12
	0x01C98634 FMUL S3, S3, S11
	0x01C98638 FMUL S1, S0, S1
	0x01C9863C FMUL S4, S0, S2
	0x01C98640 FMUL S0, S0, S3
	0x01C98644 FADD S2, S10, S1
	0x01C98648 FADD S1, S9, S4
	0x01C9864C FADD S0, S8, S0
	0x01C98650 BL 0x3AA76F8
	0x01C98654 MOVZ W0, 0x77
	0x01C98658 MOV X1, X31
	0x01C9865C BL 0x3AECD78
	0x01C98660 TBNZ X0, 0x0, 0x1C98674
	0x01C98664 MOVZ W0, 0x111
	0x01C98668 MOV X1, X31
	0x01C9866C BL 0x3AECD78
	0x01C98670 TBZ X0, 0x0, 0x1C9870C
	0x01C98674 MOV X0, X19
	0x01C98678 MOV X1, X31
	0x01C9867C BL 0x3A9B084
	0x01C98680 MOV X20, X0
	0x01C98684 MOV X0, X19
	0x01C98688 MOV X1, X31
	0x01C9868C BL 0x3A9B084
	0x01C98690 CBZ X0, 0x1C98C84
	0x01C98694 MOV X1, X31
	0x01C98698 BL 0x3AA7658
	0x01C9869C MOV X0, X19
	0x01C986A0 MOV X1, X31
	0x01C986A4 MOV V8.16B, V0.16B
	0x01C986A8 MOV V9.16B, V1.16B
	0x01C986AC MOV V10.16B, V2.16B
	0x01C986B0 BL 0x3A9B084
	0x01C986B4 CBZ X0, 0x1C98C84
	0x01C986B8 MOV X1, X31
	0x01C986BC BL 0x3AA7AD0
	0x01C986C0 MOV X0, X31
	0x01C986C4 MOV V11.16B, V0.16B
	0x01C986C8 MOV V12.16B, V1.16B
	0x01C986CC MOV V13.16B, V2.16B
	0x01C986D0 BL 0x3AA481C
	0x01C986D4 CBZ X20, 0x1C98C84
	0x01C986D8 LDR V3, [X31 + 0x2]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x258C000
	009 Move X24, 0x22B6000
	010 Move X19, 0x22B7000
	011 Move X22, 0x22B6000
	012 Move X21, 0x22B6000
	013 Move W8, [X23+985]
	014 Move X24, [X24+2960]
	015 Move X19, [X19+200]
	016 Move X22, [X22+2976]
	017 Move X21, [X21+1256]
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x22B6000
	024 Move X0, [X0+1256]
	025 Call 0x1B6F7F0
	026 Move X0, 0x22B6000
	027 Move X0, [X0+2976]
	028 Call 0x1B6F7F0
	029 Move X0, 0x22B6000
	030 Move X0, [X0+2960]
	031 Call 0x1B6F7F0
	032 Move X0, 0x22B7000
	033 Move X0, [X0+200]
	034 Call 0x1B6F7F0
	035 Move W8, 1
	036 Move [X23+985], W8
	037 Move X0, [X24]
	038 Call 0x1B6FA0C
	039 Move X2, [X19]
	040 Move X1, X20
	041 Move X3, X31
	042 Move X19, X0
	043 Call ObserverDelegate..ctor, X0, X1, X2
	044 Move X0, [X22]
	045 Move W1, 1
	046 Call 0x1B6F868
	047 Move X8, [X21]
	048 Move X20, X0
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1B6F8F8
	054 Move X22, 0x258C000
	055 Move W8, [X22+1091]
	056 Compare W8, 0
	057 JumpIfNotEqual {63}
	058 Move X0, 0x22B6000
	059 Move X0, [X0+1256]
	060 Call 0x1B6F7F0
	061 Move W8, 1
	062 Move [X22+1091], W8
	063 Move X0, [X21]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {69}
	067 Call 0x1B6F8F8
	068 Move X0, [X21]
	069 Move X8, [X0+184]
	070 Move X8, [X8]
	071 Compare X8, 0
	072 JumpIfEqual {99}
	073 Compare X20, 0
	074 JumpIfEqual {99}
	075 Move X21, [X8+152]
	076 Compare X21, 0
	077 JumpIfEqual {84}
	078 Move X8, [X20]
	079 Move X0, X21
	080 Move X1, [X8+64]
	081 Call 0x1B6F8FC
	082 Compare X0, 0
	083 JumpIfEqual {101}
	084 Move W8, [X20+24]
	085 Compare W8, 0
	086 JumpIfEqual {100}
	087 Move [X20+32], X21
	088 Move X0, X19
	089 Move X1, X20
	090 Move X20, [X31+48]
	091 Move X19, [X31+56]
	092 Move X22, [X31+32]
	093 Move X21, [X31+40]
	094 Move X24, [X31+16]
	095 Move X23, [X31+24]
	096 Move X30, [X31+64]
	097 Call App.RegisterObserver, X0, X1
	098 Return 
	099 Call 0x1B6FA1C
	100 Call 0x1B6FA24
	101 Call 0x1B6FA40
	102 Move X1, X31
	103 Call 0x1B6F8E8

Method: System.Void OnDestroy()

Disassembly:
	0x01C986DC MOV X0, X20
	0x01C986E0 MOV X1, X31
	0x01C986E4 FMUL S1, S3, S13
	0x01C986E8 FMUL S2, S3, S12
	0x01C986EC FMUL S3, S3, S11
	0x01C986F0 FMUL S1, S0, S1
	0x01C986F4 FMUL S4, S0, S2
	0x01C986F8 FMUL S0, S0, S3
	0x01C986FC FADD S2, S10, S1
	0x01C98700 FADD S1, S9, S4
	0x01C98704 FADD S0, S8, S0
	0x01C98708 BL 0x3AA76F8
	0x01C9870C MOVZ W0, 0x73
	0x01C98710 MOV X1, X31
	0x01C98714 BL 0x3AECD78
	0x01C98718 TBNZ X0, 0x0, 0x1C9872C
	0x01C9871C MOVZ W0, 0x112
	0x01C98720 MOV X1, X31
	0x01C98724 BL 0x3AECD78
	0x01C98728 TBZ X0, 0x0, 0x1C987C4
	0x01C9872C MOV X0, X19
	0x01C98730 MOV X1, X31
	0x01C98734 BL 0x3A9B084
	0x01C98738 MOV X20, X0
	0x01C9873C MOV X0, X19
	0x01C98740 MOV X1, X31
	0x01C98744 BL 0x3A9B084
	0x01C98748 CBZ X0, 0x1C98C84
	0x01C9874C MOV X1, X31
	0x01C98750 BL 0x3AA7658
	0x01C98754 MOV X0, X19
	0x01C98758 MOV X1, X31
	0x01C9875C MOV V8.16B, V0.16B
	0x01C98760 MOV V9.16B, V1.16B
	0x01C98764 MOV V10.16B, V2.16B
	0x01C98768 BL 0x3A9B084
	0x01C9876C CBZ X0, 0x1C98C84
	0x01C98770 MOV X1, X31
	0x01C98774 BL 0x3AA7AD0
	0x01C98778 MOV X0, X31
	0x01C9877C MOV V11.16B, V0.16B
	0x01C98780 MOV V12.16B, V1.16B
	0x01C98784 MOV V13.16B, V2.16B
	0x01C98788 BL 0x3AA481C
	0x01C9878C CBZ X20, 0x1C98C84
	0x01C98790 LDR V3, [X31 + 0x2]
	0x01C98794 MOV X0, X20
	0x01C98798 MOV X1, X31
	0x01C9879C FMUL S1, S3, S13
	0x01C987A0 FMUL S2, S3, S12
	0x01C987A4 FMUL S3, S3, S11
	0x01C987A8 FMUL S1, S0, S1
	0x01C987AC FMUL S4, S0, S2
	0x01C987B0 FMUL S0, S0, S3
	0x01C987B4 FSUB S2, S10, S1
	0x01C987B8 FSUB S1, S9, S4
	0x01C987BC FSUB S0, S8, S0
	0x01C987C0 BL 0x3AA76F8
	0x01C987C4 MOVZ W0, 0x71

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x258C000
	008 Move W8, [X20+986]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x22B6000
	015 Move X0, [X0+1256]
	016 Call 0x1B6F7F0
	017 Move X0, 0x22B6000
	018 Move X0, [X0+2960]
	019 Call 0x1B6F7F0
	020 Move X0, 0x22B7000
	021 Move X0, [X0+200]
	022 Call 0x1B6F7F0
	023 Move X0, 0x22B7000
	024 Move X0, [X0+208]
	025 Call 0x1B6F7F0
	026 Move W8, 1
	027 Move [X20+986], W8
	028 Move X0, [X19+32]
	029 Compare X0, 0
	030 JumpIfEqual {71}
	031 Move X22, 0x22B6000
	032 Move X20, 0x22B7000
	033 Move X23, 0x22B6000
	034 Move X21, 0x22B7000
	035 Move X22, [X22+2960]
	036 Move X20, [X20+200]
	037 Move X23, [X23+1256]
	038 Move X21, [X21+208]
	039 Move X1, X31
	040 Call CommandHandle.Cancel, X0
	041 Move X0, [X22]
	042 Call 0x1B6FA0C
	043 Move X2, [X20]
	044 Move X1, X19
	045 Move X3, X31
	046 Move X20, X0
	047 Call ObserverDelegate..ctor, X0, X1, X2
	048 Move X0, [X23]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1B6F8F8
	053 Move X0, X20
	054 Call App.DeregisterObserver, X0
	055 Move X0, [X22]
	056 Call 0x1B6FA0C
	057 Move X2, [X21]
	058 Move X1, X19
	059 Move X3, X31
	060 Move X20, X0
	061 Call ObserverDelegate..ctor, X0, X1, X2
	062 Move X0, X20
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X30, [X31+48]
	068 Move X23, [X31+56]
	069 Call App.DeregisterObserver, X0
	070 Return 
	071 Call 0x1B6FA1C

Method: System.Void HandleUserLoggedInChanged(SpatialSys.ObservableState.StateChangedEventArgs args)

Disassembly:
	0x01C987C8 MOV X1, X31
	0x01C987CC BL 0x3AECD78
	0x01C987D0 TBZ X0, 0x0, 0x1C9886C
	0x01C987D4 MOV X0, X19
	0x01C987D8 MOV X1, X31
	0x01C987DC BL 0x3A9B084
	0x01C987E0 MOV X20, X0
	0x01C987E4 MOV X0, X19
	0x01C987E8 MOV X1, X31
	0x01C987EC BL 0x3A9B084
	0x01C987F0 CBZ X0, 0x1C98C84
	0x01C987F4 MOV X1, X31
	0x01C987F8 BL 0x3AA7658
	0x01C987FC MOV X0, X19
	0x01C98800 MOV X1, X31
	0x01C98804 MOV V8.16B, V0.16B
	0x01C98808 MOV V9.16B, V1.16B
	0x01C9880C MOV V10.16B, V2.16B
	0x01C98810 BL 0x3A9B084
	0x01C98814 CBZ X0, 0x1C98C84
	0x01C98818 MOV X1, X31
	0x01C9881C BL 0x3AA7A54
	0x01C98820 MOV X0, X31
	0x01C98824 MOV V11.16B, V0.16B
	0x01C98828 MOV V12.16B, V1.16B
	0x01C9882C MOV V13.16B, V2.16B
	0x01C98830 BL 0x3AA481C
	0x01C98834 CBZ X20, 0x1C98C84
	0x01C98838 LDR V3, [X31 + 0x2]
	0x01C9883C MOV X0, X20
	0x01C98840 MOV X1, X31
	0x01C98844 FMUL S1, S3, S13
	0x01C98848 FMUL S2, S3, S12
	0x01C9884C FMUL S3, S3, S11
	0x01C98850 FMUL S1, S0, S1
	0x01C98854 FMUL S4, S0, S2
	0x01C98858 FMUL S0, S0, S3
	0x01C9885C FADD S2, S10, S1
	0x01C98860 FADD S1, S9, S4
	0x01C98864 FADD S0, S8, S0
	0x01C98868 BL 0x3AA76F8
	0x01C9886C MOVZ W0, 0x65
	0x01C98870 MOV X1, X31
	0x01C98874 BL 0x3AECD78
	0x01C98878 TBZ X0, 0x0, 0x1C98914
	0x01C9887C MOV X0, X19
	0x01C98880 MOV X1, X31
	0x01C98884 BL 0x3A9B084
	0x01C98888 MOV X20, X0
	0x01C9888C MOV X0, X19
	0x01C98890 MOV X1, X31
	0x01C98894 BL 0x3A9B084
	0x01C98898 CBZ X0, 0x1C98C84
	0x01C9889C MOV X1, X31
	0x01C988A0 BL 0x3AA7658
	0x01C988A4 MOV X0, X19
	0x01C988A8 MOV X1, X31
	0x01C988AC MOV V8.16B, V0.16B
	0x01C988B0 MOV V9.16B, V1.16B
	0x01C988B4 MOV V10.16B, V2.16B
	0x01C988B8 BL 0x3A9B084
	0x01C988BC CBZ X0, 0x1C98C84
	0x01C988C0 MOV X1, X31
	0x01C988C4 BL 0x3AA7A54
	0x01C988C8 MOV X0, X31
	0x01C988CC MOV V11.16B, V0.16B
	0x01C988D0 MOV V12.16B, V1.16B
	0x01C988D4 MOV V13.16B, V2.16B
	0x01C988D8 BL 0x3AA481C
	0x01C988DC CBZ X20, 0x1C98C84
	0x01C988E0 LDR V3, [X31 + 0x2]
	0x01C988E4 MOV X0, X20
	0x01C988E8 MOV X1, X31
	0x01C988EC FMUL S1, S3, S13
	0x01C988F0 FMUL S2, S3, S12
	0x01C988F4 FMUL S3, S3, S11
	0x01C988F8 FMUL S1, S0, S1
	0x01C988FC FMUL S4, S0, S2
	0x01C98900 FMUL S0, S0, S3
	0x01C98904 FSUB S2, S10, S1
	0x01C98908 FSUB S1, S9, S4
	0x01C9890C FSUB S0, S8, S0
	0x01C98910 BL 0x3AA76F8
	0x01C98914 MOVZ W0, 0x72
	0x01C98918 MOV X1, X31
	0x01C9891C BL 0x3AECD78
	0x01C98920 ADRP X22, 0x22B5000
	0x01C98924 LDR X22, [X22 + 0x480]
	0x01C98928 ADRP X23, 0x258B000
	0x01C9892C TBNZ X0, 0x0, 0x1C98940
	0x01C98930 MOVZ W0, 0x118
	0x01C98934 MOV X1, X31
	0x01C98938 BL 0x3AECD78
	0x01C9893C TBZ X0, 0x0, 0x1C989E0
	0x01C98940 MOV X0, X19
	0x01C98944 MOV X1, X31
	0x01C98948 BL 0x3A9B084
	0x01C9894C MOV X20, X0
	0x01C98950 MOV X0, X19
	0x01C98954 MOV X1, X31
	0x01C98958 BL 0x3A9B084
	0x01C9895C CBZ X0, 0x1C98C84
	0x01C98960 MOV X1, X31
	0x01C98964 BL 0x3AA7658
	0x01C98968 LDRB W8, [X23 + 0x442]
	0x01C9896C MOV V8.16B, V0.16B
	0x01C98970 MOV V9.16B, V1.16B
	0x01C98974 MOV V10.16B, V2.16B
	0x01C98978 CBNZ W8, 0x1C98990
	0x01C9897C ADRP X0, 0x22B5000
	0x01C98980 LDR X0, [X0 + 0x480]
	0x01C98984 BL 0x1B6E7F0
	0x01C98988 MOVZ W8, 0x1
	0x01C9898C STRB W8, [X23 + 0x442]
	0x01C98990 LDR X8, [X22]
	0x01C98994 MOV X0, X31
	0x01C98998 LDR X8, [X8 + 0xB8]
	0x01C9899C LDP S11, S12, [X8 + 0x18]
	0x01C989A0 LDR V13, [X8 + 0x20]
	0x01C989A4 BL 0x3AA481C
	0x01C989A8 CBZ X20, 0x1C98C84
	0x01C989AC LDR V3, [X31 + 0x2]
	0x01C989B0 MOV X0, X20
	0x01C989B4 MOV X1, X31
	0x01C989B8 FMUL S1, S3, S13
	0x01C989BC FMUL S2, S3, S12
	0x01C989C0 FMUL S3, S3, S11
	0x01C989C4 FMUL S1, S1, S0
	0x01C989C8 FMUL S4, S2, S0
	0x01C989CC FMUL S0, S3, S0
	0x01C989D0 FADD S2, S10, S1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x258C000
	009 Move X23, 0x22B6000
	010 Move X22, 0x22B7000
	011 Move X21, 0x22B6000
	012 Move W8, [X20+987]
	013 Move X23, [X23+2960]
	014 Move X22, [X22+208]
	015 Move X21, [X21+1256]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move X0, 0x22B6000
	022 Move X0, [X0+1256]
	023 Call 0x1B6F7F0
	024 Move X0, 0x22B6000
	025 Move X0, [X0+2976]
	026 Call 0x1B6F7F0
	027 Move X0, 0x22B6000
	028 Move X0, [X0+2960]
	029 Call 0x1B6F7F0
	030 Move X0, 0x22B6000
	031 Move X0, [X0+3328]
	032 Call 0x1B6F7F0
	033 Move X0, 0x22B7000
	034 Move X0, [X0+208]
	035 Call 0x1B6F7F0
	036 Move W8, 1
	037 Move [X20+987], W8
	038 Move X0, [X23]
	039 Call 0x1B6FA0C
	040 Move X2, [X22]
	041 Move X1, X19
	042 Move X3, X31
	043 Move X20, X0
	044 Call ObserverDelegate..ctor, X0, X1, X2
	045 Move X0, [X21]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1B6F8F8
	050 Move X0, X20
	051 Call App.DeregisterObserver, X0
	052 Move X24, 0x258C000
	053 Move W8, [X24+1091]
	054 Compare W8, 0
	055 JumpIfNotEqual {61}
	056 Move X0, 0x22B6000
	057 Move X0, [X0+1256]
	058 Call 0x1B6F7F0
	059 Move W8, 1
	060 Move [X24+1091], W8
	061 Move X0, [X21]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {67}
	065 Call 0x1B6F8F8
	066 Move X0, [X21]
	067 Move X8, [X0+184]
	068 Move X8, [X8]
	069 Compare X8, 0
	070 JumpIfEqual {157}
	071 Move X9, 0x22B6000
	072 Move X9, [X9+3328]
	073 Move X0, [X8+152]
	074 Move X1, [X9]
	075 Call 0x24BA848, X0
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {149}
	080 Move X0, [X23]
	081 Call 0x1B6FA0C
	082 Move X2, [X22]
	083 Move X1, X19
	084 Move X3, X31
	085 Move X20, X0
	086 Call ObserverDelegate..ctor, X0, X1, X2
	087 Move X8, 0x22B6000
	088 Move X8, [X8+2976]
	089 Move W1, 1
	090 Move X0, [X8]
	091 Call 0x1B6F868
	092 Move X8, [X21]
	093 Move X19, X0
	094 Move W9, [X8+224]
	095 Compare W9, 0
	096 JumpIfNotEqual {99}
	097 Move X0, X8
	098 Call 0x1B6F8F8
	099 Move W8, [X24+1091]
	100 Compare W8, 0
	101 JumpIfNotEqual {107}
	102 Move X0, 0x22B6000
	103 Move X0, [X0+1256]
	104 Call 0x1B6F7F0
	105 Move W8, 1
	106 Move [X24+1091], W8
	107 Move X0, [X21]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {113}
	111 Call 0x1B6F8F8
	112 Move X0, [X21]
	113 Move X8, [X0+184]
	114 Move X8, [X8]
	115 Compare X8, 0
	116 JumpIfEqual {157}
	117 Move X8, [X8+168]
	118 Compare X8, 0
	119 JumpIfEqual {157}
	120 Move X8, [X8+104]
	121 Compare X8, 0
	122 JumpIfEqual {157}
	123 Compare X19, 0
	124 JumpIfEqual {157}
	125 Move X21, [X8+72]
	126 Compare X21, 0
	127 JumpIfEqual {134}
	128 Move X8, [X19]
	129 Move X0, X21
	130 Move X1, [X8+64]
	131 Call 0x1B6F8FC
	132 Compare X0, 0
	133 JumpIfEqual {159}
	134 Move W8, [X19+24]
	135 Compare W8, 0
	136 JumpIfEqual {158}
	137 Move [X19+32], X21
	138 Move X0, X20
	139 Move X1, X19
	140 Move X20, [X31+48]
	141 Move X19, [X31+56]
	142 Move X22, [X31+32]
	143 Move X21, [X31+40]
	144 Move X24, [X31+16]
	145 Move X23, [X31+24]
	146 Move X30, [X31+64]
	147 Call App.RegisterObserver, X0, X1
	148 Return 
	149 Move X20, [X31+48]
	150 Move X19, [X31+56]
	151 Move X22, [X31+32]
	152 Move X21, [X31+40]
	153 Move X24, [X31+16]
	154 Move X23, [X31+24]
	155 Move X30, [X31+64]
	156 Return 
	157 Call 0x1B6FA1C
	158 Call 0x1B6FA24
	159 Call 0x1B6FA40
	160 Move X1, X31
	161 Call 0x1B6F8E8

Method: System.Void HandleUserSoftCurrencyChanged(SpatialSys.ObservableState.StateChangedEventArgs args)

Disassembly:
	0x01C989D4 FADD S1, S9, S4
	0x01C989D8 FADD S0, S8, S0
	0x01C989DC BL 0x3AA76F8
	0x01C989E0 MOVZ W0, 0x66
	0x01C989E4 MOV X1, X31
	0x01C989E8 BL 0x3AECD78
	0x01C989EC TBNZ X0, 0x0, 0x1C98A00
	0x01C989F0 MOVZ W0, 0x119
	0x01C989F4 MOV X1, X31
	0x01C989F8 BL 0x3AECD78
	0x01C989FC TBZ X0, 0x0, 0x1C98AA0
	0x01C98A00 MOV X0, X19
	0x01C98A04 MOV X1, X31
	0x01C98A08 BL 0x3A9B084
	0x01C98A0C MOV X20, X0
	0x01C98A10 MOV X0, X19
	0x01C98A14 MOV X1, X31
	0x01C98A18 BL 0x3A9B084
	0x01C98A1C CBZ X0, 0x1C98C84
	0x01C98A20 MOV X1, X31
	0x01C98A24 BL 0x3AA7658
	0x01C98A28 LDRB W8, [X23 + 0x442]
	0x01C98A2C MOV V8.16B, V2.16B
	0x01C98A30 STR D0, [X31 + 0x10]
	0x01C98A34 STR D1, [X31]
	0x01C98A38 CBNZ W8, 0x1C98A50
	0x01C98A3C ADRP X0, 0x22B5000
	0x01C98A40 LDR X0, [X0 + 0x480]
	0x01C98A44 BL 0x1B6E7F0
	0x01C98A48 MOVZ W8, 0x1
	0x01C98A4C STRB W8, [X23 + 0x442]
	0x01C98A50 LDR X8, [X22]
	0x01C98A54 MOV X0, X31
	0x01C98A58 LDR X8, [X8 + 0xB8]
	0x01C98A5C LDR V9, [X8 + 0x18]
	0x01C98A60 LDR V10, [X8 + 0x20]
	0x01C98A64 BL 0x3AA481C
	0x01C98A68 CBZ X20, 0x1C98C84
	0x01C98A6C LDP V3, V2, [X31 + 0x10]
	0x01C98A70 LDR V4, [X31]
	0x01C98A74 MOV X0, X20
	0x01C98A78 MOV X1, X31
	0x01C98A7C FMUL S1, S2, S10
	0x00000000 INVALID
	0x01C98A84 MOV V3.S[1], V4.S[0]
	0x01C98A88 FMUL S1, S1, S0
	0x00000000 INVALID
	0x01C98A90 FSUB V0.2S, V3.2S, V0.2S
	0x01C98A94 FSUB S2, S8, S1
	0x01C98A98 MOV S1, V0.S[1]
	0x01C98A9C BL 0x3AA76F8
	0x01C98AA0 LDRB W8, [X19 + 0x40]
	0x01C98AA4 CBZ W8, 0x1C98B44
	0x01C98AA8 MOV X0, X19
	0x01C98AAC MOV X1, X31
	0x01C98AB0 BL 0x3A9B084
	0x01C98AB4 CBZ X0, 0x1C98C84
	0x01C98AB8 ADRP X20, 0x22B6000
	0x01C98ABC LDR X20, [X20 + 0x140]
	0x01C98AC0 MOV X1, X31
	0x01C98AC4 BL 0x3AA78CC
	0x01C98AC8 LDR X0, [X20]
	0x01C98ACC MOV X1, X31
	0x01C98AD0 MOV V8.16B, V1.16B
	0x01C98AD4 BL 0x3AEC88C
	0x01C98AD8 LDR V12, [X19 + 0x34]
	0x01C98ADC MOV X0, X19
	0x01C98AE0 MOV X1, X31
	0x01C98AE4 MOV V9.16B, V0.16B
	0x01C98AE8 BL 0x3A9B084
	0x01C98AEC CBZ X0, 0x1C98C84
	0x01C98AF0 ADRP X20, 0x22B6000
	0x01C98AF4 LDR X20, [X20 + 0x138]
	0x01C98AF8 MOV X1, X31
	0x01C98AFC BL 0x3AA78CC
	0x01C98B00 LDR X0, [X20]
	0x01C98B04 MOV X1, X31
	0x01C98B08 MOV V10.16B, V0.16B
	0x01C98B0C BL 0x3AEC88C
	0x01C98B10 LDR V13, [X19 + 0x34]
	0x01C98B14 MOV X0, X19
	0x01C98B18 MOV X1, X31
	0x01C98B1C MOV V11.16B, V0.16B
	0x01C98B20 BL 0x3A9B084
	0x01C98B24 CBZ X0, 0x1C98C84
	0x01C98B28 FMUL S0, S9, S12
	0x01C98B2C FMUL S2, S11, S13
	0x01C98B30 FADD S1, S8, S0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x258C000
	006 Move W8, [X21+988]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x22B6000
	014 Move X0, [X0+1256]
	015 Call 0x1B6F7F0
	016 Move X0, 0x22B6000
	017 Move X0, [X0+2024]
	018 Call 0x1B6F7F0
	019 Move X0, 0x22B7000
	020 Move X0, [X0+216]
	021 Call 0x1B6F7F0
	022 Move X0, 0x22B7000
	023 Move X0, [X0+224]
	024 Call 0x1B6F7F0
	025 Move W8, 1
	026 Move [X21+988], W8
	027 Move X21, 0x22B6000
	028 Move X21, [X21+1256]
	029 And W31, W20, 255
	030 Move X0, [X21]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1B6F8F8
	035 Move X20, 0x258C000
	036 Move W8, [X20+1091]
	037 Compare W8, 0
	038 JumpIfNotEqual {44}
	039 Move X0, 0x22B6000
	040 Move X0, [X0+1256]
	041 Call 0x1B6F7F0
	042 Move W8, 1
	043 Move [X20+1091], W8
	044 Move X0, [X21]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1B6F8F8
	049 Move X0, [X21]
	050 Move X8, [X0+184]
	051 Move X8, [X8]
	052 Compare X8, 0
	053 JumpIfEqual {105}
	054 Move X8, [X8+168]
	055 Compare X8, 0
	056 JumpIfEqual {105}
	057 Move X8, [X8+104]
	058 Compare X8, 0
	059 JumpIfEqual {105}
	060 Move X8, [X8+72]
	061 Compare X8, 0
	062 JumpIfEqual {105}
	063 Move W8, [X8+76]
	064 Move [X19+40], W8
	065 Move X0, [X19+32]
	066 Compare X0, 0
	067 JumpIfEqual {105}
	068 Move X1, X31
	069 Call CommandHandle.get_hasFinalized, X0
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {100}
	074 Move X8, 0x22B6000
	075 Move X8, [X8+2024]
	076 Move X0, [X8]
	077 Call 0x1B6FA0C
	078 Move X8, 0x22B7000
	079 Move X8, [X8+224]
	080 Move X1, X19
	081 Move X3, X31
	082 Move X20, X0
	083 Move X2, [X8]
	084 Call CoroutineGenerator..ctor, X0, X1, X2
	085 Move X0, X20
	086 Move W1, W31
	087 Move X2, X31
	088 Call Commands.Coroutine, X0, X1
	089 Move X8, [X21]
	090 Move X20, X0
	091 Move W9, [X8+224]
	092 Compare W9, 0
	093 JumpIfNotEqual {96}
	094 Move X0, X8
	095 Call 0x1B6F8F8
	096 Move X0, X20
	097 Move W1, W31
	098 Call App.ExecuteCommand, X0, X1
	099 Move [X19+32], X0
	100 Move X20, [X31+16]
	101 Move X19, [X31+24]
	102 Move X30, [X31+32]
	103 Move X21, [X31+40]
	104 Return 
	105 Call 0x1B6FA1C

Method: System.Collections.Generic.IEnumerator`1<SpatialSys.CommandLib.Command> SaveSoftCurrencyCommand()

Disassembly:
	0x01C98B34 FSUB S0, S10, S2
	0x01C98B38 FMOV S2, W31
	0x01C98B3C MOV X1, X31
	0x01C98B40 BL 0x3AA7954
	0x01C98B44 ADRP X8, 0x22B6000
	0x01C98B48 LDR X8, [X8 + 0x148]
	0x01C98B4C MOV X1, X31
	0x01C98B50 LDR X0, [X8]
	0x01C98B54 BL 0x3AEC88C
	0x01C98B58 FCMP S0, 0x0
	0x01C98B5C B.EQ 0x1C98BF8
	0x01C98B60 CMP W21, 0x0
	0x01C98B64 MOVZ W8, 0x3C
	0x01C98B68 MOVZ W9, 0x38
	0x01C98B6C CSEL X8, X9, X8, EQ
	0x01C98B70 LDR V12, [X19, X8, LSL]
	0x01C98B74 MOV X0, X19
	0x01C98B78 MOV X1, X31
	0x01C98B7C MOV V8.16B, V0.16B
	0x01C98B80 BL 0x3A9B084
	0x01C98B84 MOV X20, X0
	0x01C98B88 MOV X0, X19
	0x01C98B8C MOV X1, X31
	0x01C98B90 BL 0x3A9B084

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x258C000
	006 Move X21, 0x22B7000
	007 Move W8, [X20+989]
	008 Move X21, [X21+232]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22B7000
	015 Move X0, [X0+232]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X20+989], W8
	019 Move X0, [X21]
	020 Call 0x1B6FA0C
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move [X20+16], W31
	025 Move [X20+32], X19
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Void .ctor()

Disassembly:
	0x01C98BBC MOV X1, X31
	0x01C98BC0 BL 0x3AA7AD0
	0x01C98BC4 CBZ X20, 0x1C98C84
	0x01C98BC8 FMUL S2, S8, S2
	0x01C98BCC FMUL S1, S8, S1
	0x01C98BD0 FMUL S0, S8, S0
	0x01C98BD4 FMUL S2, S12, S2
	0x01C98BD8 FMUL S1, S12, S1
	0x01C98BDC FMUL S0, S12, S0
	0x01C98BE0 FADD S2, S11, S2
	0x01C98BE4 FADD S1, S10, S1
	0x01C98BE8 FADD S0, S9, S0
	0x01C98BEC MOV X0, X20
	0x01C98BF0 MOV X1, X31
	0x01C98BF4 BL 0x3AA76F8
	0x01C98BF8 MOVZ W0, 0x144
	0x01C98BFC MOV X1, X31
	0x01C98C00 BL 0x3AECDF0
	0x01C98C04 MOV W20, W0
	0x01C98C08 TBZ X0, 0x0, 0x1C98C14
	0x01C98C0C MOVZ W21, 0x1
	0x01C98C10 B 0x1C98C28
	0x01C98C14 MOVZ W0, 0x144
	0x01C98C18 MOV X1, X31
	0x01C98C1C BL 0x3AECDB4
	0x01C98C20 TBZ X0, 0x0, 0x1C98C64
	0x01C98C24 MOV W21, W31
	0x01C98C28 ORN W8, W31, W20, 0x0
	0x01C98C2C AND W0, W8, 0x1
	0x01C98C30 MOV X1, X31
	0x01C98C34 STRB W21, [X19 + 0x40]
	0x01C98C38 BL 0x3A8CE2C
	0x01C98C3C MOV W0, W21
	0x01C98C40 LDP X20, X19, [X31 + 0x80]
	0x01C98C44 LDP X22, X21, [X31 + 0x70]
	0x01C98C48 LDP X30, X23, [X31 + 0x60]
	0x01C98C4C LDP D9, D8, [X31 + 0x50]
	0x01C98C50 LDP D11, D10, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x258C000
	006 Move X20, 0x22B6000
	007 Move W8, [X21+990]
	008 Move X20, [X20+1848]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22B6000
	015 Move X0, [X0+1848]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X21+990], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1B6F8F8
	024 Move X21, 0x258C000
	025 Move W8, [X21+1095]
	026 Compare W8, 0
	027 JumpIfNotEqual {33}
	028 Move X0, 0x22B6000
	029 Move X0, [X0+1848]
	030 Call 0x1B6F7F0
	031 Move W8, 1
	032 Move [X21+1095], W8
	033 Move X0, [X20]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1B6F8F8
	038 Move X0, [X20]
	039 Move X8, [X0+184]
	040 Move X0, X19
	041 Move X1, X31
	042 Move X8, [X8]
	043 Move [X19+32], X8
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Call MonoBehaviour..ctor, X0
	049 Return 

