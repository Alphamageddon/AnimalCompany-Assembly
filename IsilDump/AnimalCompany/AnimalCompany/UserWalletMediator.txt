Type: AnimalCompany.UserWalletMediator

Method: System.Void Awake()

Disassembly:
	0x01D503F0 LDR X8, [X8 + 0xE0]
	0x01D503F4 CBZ X8, 0x1D504B8
	0x01D503F8 LDR X21, [X8 + 0x70]
	0x01D503FC CBZ X21, 0x1D50414
	0x01D50400 LDR X8, [X20]
	0x01D50404 MOV X0, X21
	0x01D50408 LDR X1, [X8 + 0x40]
	0x01D5040C BL 0x1C16E00
	0x01D50410 CBZ X0, 0x1D504C0
	0x01D50414 LDR W8, [X20 + 0x18]
	0x01D50418 CMP W8, 0x1
	0x01D5041C B.LS 0x1D504BC
	0x01D50420 STR X21, [X20 + 0x28]
	0x01D50424 LDRB W8, [X23 + 0x787]
	0x01D50428 CBNZ W8, 0x1D50440
	0x01D5042C ADRP X0, 0x23A3000
	0x01D50430 LDR X0, [X0 + 0x648]
	0x01D50434 BL 0x1C16CF4
	0x01D50438 MOVZ W8, 0x1
	0x01D5043C STRB W8, [X23 + 0x787]
	0x01D50440 LDR X0, [X22]
	0x01D50444 LDR W8, [X0 + 0xE0]
	0x01D50448 CBNZ W8, 0x1D50454
	0x01D5044C BL 0x1C16DFC
	0x01D50450 LDR X0, [X22]
	0x01D50454 LDR X8, [X0 + 0xB8]
	0x01D50458 LDR X8, [X8]
	0x01D5045C CBZ X8, 0x1D504B8
	0x01D50460 LDR X8, [X8 + 0xB8]
	0x01D50464 CBZ X8, 0x1D504B8
	0x01D50468 LDR X8, [X8 + 0xA0]
	0x01D5046C CBZ X8, 0x1D504B8
	0x01D50470 LDR X21, [X8 + 0x48]
	0x01D50474 CBZ X21, 0x1D5048C
	0x01D50478 LDR X8, [X20]
	0x01D5047C MOV X0, X21
	0x01D50480 LDR X1, [X8 + 0x40]
	0x01D50484 BL 0x1C16E00
	0x01D50488 CBZ X0, 0x1D504C0
	0x01D5048C LDR W8, [X20 + 0x18]
	0x01D50490 CMP W8, 0x2
	0x01D50494 B.LS 0x1D504BC
	0x01D50498 STR X21, [X20 + 0x30]
	0x01D5049C MOV X0, X19
	0x01D504A0 MOV X1, X20
	0x01D504A4 LDP X20, X19, [X31 + 0x20]
	0x01D504A8 LDP X22, X21, [X31 + 0x10]
	0x01D504AC MOV X2, X31
	0x01D504B0 LDP X30, X23, [X31], #0x30
	0x01D504B4 B 0x1D365C0
	0x01D504B8 BL 0x1C16F20
	0x01D504BC BL 0x1C16F28
	0x01D504C0 BL 0x1C16F44
	0x01D504C4 MOV X1, X31
	0x01D504C8 BL 0x1C16DEC
	0x01D504CC STR X30, [X31 - 0x30]!
	0x01D504D0 STP X22, X21, [X31 + 0x10]
	0x01D504D4 STP X20, X19, [X31 + 0x20]
	0x01D504D8 ADRP X21, 0x2688000
	0x01D504DC ADRP X22, 0x23A4000
	0x01D504E0 ADRP X20, 0x23A3000
	0x01D504E4 LDRB W8, [X21 + 0x7B4]
	0x01D504E8 LDR X22, [X22 + 0xBC0]
	0x01D504EC LDR X20, [X20 + 0x598]
	0x01D504F0 MOV X19, X0
	0x01D504F4 TBNZ X8, 0x0, 0x1D5053C
	0x01D504F8 ADRP X0, 0x23A3000
	0x01D504FC LDR X0, [X0 + 0x648]
	0x01D50500 BL 0x1C16CF4
	0x01D50504 ADRP X0, 0x23A3000
	0x01D50508 LDR X0, [X0 + 0x598]
	0x01D5050C BL 0x1C16CF4
	0x01D50510 ADRP X0, 0x23A3000
	0x01D50514 LDR X0, [X0 + 0xDA0]
	0x01D50518 BL 0x1C16CF4
	0x01D5051C ADRP X0, 0x23A4000
	0x01D50520 LDR X0, [X0 + 0xBC8]
	0x01D50524 BL 0x1C16CF4
	0x01D50528 ADRP X0, 0x23A4000
	0x01D5052C LDR X0, [X0 + 0xBC0]
	0x01D50530 BL 0x1C16CF4
	0x01D50534 MOVZ W8, 0x1
	0x01D50538 STRB W8, [X21 + 0x7B4]
	0x01D5053C LDR X8, [X22]
	0x01D50540 LDR X0, [X20]
	0x01D50544 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x2689000
	009 Move X24, 0x23A4000
	010 Move X19, 0x23A5000
	011 Move X22, 0x23A4000
	012 Move X21, 0x23A4000
	013 Move W8, [X23+1961]
	014 Move X24, [X24+3488]
	015 Move X19, [X19+2880]
	016 Move X22, [X22+3504]
	017 Move X21, [X21+1608]
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x23A4000
	024 Move X0, [X0+1608]
	025 Call 0x1C17CF4
	026 Move X0, 0x23A4000
	027 Move X0, [X0+3504]
	028 Call 0x1C17CF4
	029 Move X0, 0x23A4000
	030 Move X0, [X0+3488]
	031 Call 0x1C17CF4
	032 Move X0, 0x23A5000
	033 Move X0, [X0+2880]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+1961], W8
	037 Move X0, [X24]
	038 Call 0x1C17F10
	039 Move X2, [X19]
	040 Move X1, X20
	041 Move X3, X31
	042 Move X19, X0
	043 Call ObserverDelegate..ctor, X0, X1, X2
	044 Move X0, [X22]
	045 Move W1, 1
	046 Call 0x1C17D6C
	047 Move X8, [X21]
	048 Move X20, X0
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Move X22, 0x2689000
	055 Move W8, [X22+1927]
	056 Compare W8, 0
	057 JumpIfNotEqual {63}
	058 Move X0, 0x23A4000
	059 Move X0, [X0+1608]
	060 Call 0x1C17CF4
	061 Move W8, 1
	062 Move [X22+1927], W8
	063 Move X0, [X21]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {69}
	067 Call 0x1C17DFC
	068 Move X0, [X21]
	069 Move X8, [X0+184]
	070 Move X8, [X8]
	071 Compare X8, 0
	072 JumpIfEqual {100}
	073 Compare X20, 0
	074 JumpIfEqual {100}
	075 Move X21, [X8+176]
	076 Compare X21, 0
	077 JumpIfEqual {84}
	078 Move X8, [X20]
	079 Move X0, X21
	080 Move X1, [X8+64]
	081 Call 0x1C17E00
	082 Compare X0, 0
	083 JumpIfEqual {102}
	084 Move W8, [X20+24]
	085 Compare W8, 0
	086 JumpIfEqual {101}
	087 Move [X20+32], X21
	088 Move X0, X19
	089 Move X1, X20
	090 Move X20, [X31+48]
	091 Move X19, [X31+56]
	092 Move X22, [X31+32]
	093 Move X21, [X31+40]
	094 Move X24, [X31+16]
	095 Move X23, [X31+24]
	096 Move X2, X31
	097 Move X30, [X31+64]
	098 Call App.RegisterObserver, X0, X1
	099 Return 
	100 Call 0x1C17F20
	101 Call 0x1C17F28
	102 Call 0x1C17F44
	103 Move X1, X31
	104 Call 0x1C17DEC

Method: System.Void OnDestroy()

Disassembly:
	0x01D50548 LDR W9, [X0 + 0xE0]
	0x01D5054C LDR X20, [X8]
	0x01D50550 CBNZ W9, 0x1D50558
	0x01D50554 BL 0x1C16DFC
	0x01D50558 MOV X0, X20
	0x01D5055C MOV X1, X19
	0x01D50560 MOV X2, X31
	0x01D50564 BL 0x3C354F8
	0x01D50568 TBZ X0, 0x0, 0x1D5057C
	0x01D5056C LDP X20, X19, [X31 + 0x20]
	0x01D50570 LDP X22, X21, [X31 + 0x10]
	0x01D50574 LDR X30, [X31], #0x30
	0x01D50578 RET
	0x01D5057C ADRP X8, 0x23A3000
	0x01D50580 LDR X8, [X8 + 0xDA0]
	0x01D50584 LDR X0, [X8]
	0x01D50588 BL 0x1C16F10
	0x01D5058C ADRP X8, 0x23A4000
	0x01D50590 LDR X8, [X8 + 0xBC8]
	0x01D50594 MOV X1, X19
	0x01D50598 MOV X3, X31
	0x01D5059C MOV X20, X0
	0x01D505A0 LDR X2, [X8]
	0x01D505A4 BL 0x35C52F0
	0x01D505A8 ADRP X8, 0x23A3000
	0x01D505AC LDR X8, [X8 + 0x648]
	0x01D505B0 LDR X0, [X8]
	0x01D505B4 LDR W8, [X0 + 0xE0]
	0x01D505B8 CBNZ W8, 0x1D505C0
	0x01D505BC BL 0x1C16DFC
	0x01D505C0 MOV X0, X20
	0x01D505C4 MOV X1, X31
	0x01D505C8 BL 0x1D36978
	0x01D505CC LDR X0, [X19 + 0x20]
	0x01D505D0 CBZ X0, 0x1D505E8
	0x01D505D4 LDP X20, X19, [X31 + 0x20]
	0x01D505D8 LDP X22, X21, [X31 + 0x10]
	0x01D505DC MOV X1, X31
	0x01D505E0 LDR X30, [X31], #0x30
	0x01D505E4 B 0x35B9B84
	0x01D505E8 BL 0x1C16F20
	0x01D505EC STR X30, [X31 - 0x20]!
	0x01D505F0 STP X20, X19, [X31 + 0x10]
	0x01D505F4 ADRP X20, 0x2688000
	0x01D505F8 LDRB W8, [X20 + 0x7B5]
	0x01D505FC MOV X19, X0
	0x01D50600 TBNZ X8, 0x0, 0x1D50630
	0x01D50604 ADRP X0, 0x23A3000
	0x01D50608 LDR X0, [X0 + 0x648]
	0x01D5060C BL 0x1C16CF4
	0x01D50610 ADRP X0, 0x23A3000
	0x01D50614 LDR X0, [X0 + 0x958]
	0x01D50618 BL 0x1C16CF4
	0x01D5061C ADRP X0, 0x23A4000
	0x01D50620 LDR X0, [X0 + 0xBD0]
	0x01D50624 BL 0x1C16CF4
	0x01D50628 MOVZ W8, 0x1
	0x01D5062C STRB W8, [X20 + 0x7B5]
	0x01D50630 LDR X0, [X19 + 0x20]
	0x01D50634 CBZ X0, 0x1D506C0
	0x01D50638 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2689000
	008 Move W8, [X20+1962]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x23A4000
	015 Move X0, [X0+1608]
	016 Call 0x1C17CF4
	017 Move X0, 0x23A4000
	018 Move X0, [X0+3488]
	019 Call 0x1C17CF4
	020 Move X0, 0x23A5000
	021 Move X0, [X0+2880]
	022 Call 0x1C17CF4
	023 Move X0, 0x23A5000
	024 Move X0, [X0+2888]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+1962], W8
	028 Move X0, [X19+32]
	029 Compare X0, 0
	030 JumpIfEqual {73}
	031 Move X22, 0x23A4000
	032 Move X20, 0x23A5000
	033 Move X23, 0x23A4000
	034 Move X21, 0x23A5000
	035 Move X22, [X22+3488]
	036 Move X20, [X20+2880]
	037 Move X23, [X23+1608]
	038 Move X21, [X21+2888]
	039 Move X1, X31
	040 Call CommandHandle.Cancel, X0
	041 Move X0, [X22]
	042 Call 0x1C17F10
	043 Move X2, [X20]
	044 Move X1, X19
	045 Move X3, X31
	046 Move X20, X0
	047 Call ObserverDelegate..ctor, X0, X1, X2
	048 Move X0, [X23]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, X20
	054 Move X1, X31
	055 Call App.DeregisterObserver, X0
	056 Move X0, [X22]
	057 Call 0x1C17F10
	058 Move X2, [X21]
	059 Move X1, X19
	060 Move X3, X31
	061 Move X20, X0
	062 Call ObserverDelegate..ctor, X0, X1, X2
	063 Move X0, X20
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X1, X31
	069 Move X30, [X31+48]
	070 Move X23, [X31+56]
	071 Call App.DeregisterObserver, X0
	072 Return 
	073 Call 0x1C17F20

Method: System.Void HandleUserLoggedInChanged(SpatialSys.ObservableState.StateChangedEventArgs args)

Disassembly:
	0x01D5063C BL 0x35B9A1C
	0x01D50640 TBZ X0, 0x0, 0x1D506B4
	0x01D50644 ADRP X8, 0x23A3000
	0x01D50648 LDR X8, [X8 + 0x958]
	0x01D5064C LDR X0, [X8]
	0x01D50650 BL 0x1C16F10
	0x01D50654 ADRP X8, 0x23A4000
	0x01D50658 LDR X8, [X8 + 0xBD0]
	0x01D5065C MOV X1, X19
	0x01D50660 MOV X3, X31
	0x01D50664 MOV X20, X0
	0x01D50668 LDR X2, [X8]
	0x01D5066C BL 0x35BC6F0
	0x01D50670 MOV X0, X20
	0x01D50674 MOV W1, W31
	0x01D50678 MOV X2, X31
	0x01D5067C BL 0x35BBFC4
	0x01D50680 ADRP X8, 0x23A3000
	0x01D50684 LDR X8, [X8 + 0x648]
	0x01D50688 MOV X20, X0
	0x01D5068C LDR X8, [X8]
	0x01D50690 LDR W9, [X8 + 0xE0]
	0x01D50694 CBNZ W9, 0x1D506A0
	0x01D50698 MOV X0, X8
	0x01D5069C BL 0x1C16DFC
	0x01D506A0 MOV X0, X20
	0x01D506A4 MOV W1, W31
	0x01D506A8 MOV X2, X31
	0x01D506AC BL 0x1D3610C
	0x01D506B0 STR X0, [X19 + 0x20]
	0x01D506B4 LDP X20, X19, [X31 + 0x10]
	0x01D506B8 LDR X30, [X31], #0x20
	0x01D506BC RET
	0x01D506C0 BL 0x1C16F20
	0x01D506C4 STP X30, X21, [X31 - 0x20]!
	0x01D506C8 STP X20, X19, [X31 + 0x10]
	0x01D506CC ADRP X20, 0x2688000
	0x01D506D0 ADRP X21, 0x23A4000
	0x01D506D4 LDRB W8, [X20 + 0x7B6]
	0x01D506D8 LDR X21, [X21 + 0xBD8]
	0x01D506DC MOV X19, X0
	0x01D506E0 TBNZ X8, 0x0, 0x1D506F8
	0x01D506E4 ADRP X0, 0x23A4000
	0x01D506E8 LDR X0, [X0 + 0xBD8]
	0x01D506EC BL 0x1C16CF4
	0x01D506F0 MOVZ W8, 0x1
	0x01D506F4 STRB W8, [X20 + 0x7B6]
	0x01D506F8 LDR X0, [X21]
	0x01D506FC BL 0x1C16F10
	0x01D50700 MOV X1, X31
	0x01D50704 MOV X20, X0
	0x01D50708 BL 0x33BDD8C
	0x01D5070C STR W31, [X20 + 0x10]
	0x01D50710 STR X19, [X20 + 0x20]
	0x01D50714 MOV X0, X20
	0x01D50718 LDP X20, X19, [X31 + 0x10]
	0x01D5071C LDP X30, X21, [X31], #0x20
	0x01D50720 RET
	0x01D50724 STR X30, [X31 - 0x20]!
	0x01D50728 STP X20, X19, [X31 + 0x10]
	0x01D5072C MOV W19, W1
	0x01D50730 MOV X1, X31
	0x01D50734 MOV X20, X0
	0x01D50738 BL 0x33BDD8C
	0x01D5073C STR W19, [X20 + 0x10]
	0x01D50740 LDP X20, X19, [X31 + 0x10]
	0x01D50744 LDR X30, [X31], #0x20
	0x01D50748 RET
	0x01D5074C STR X30, [X31 - 0x30]!
	0x01D50750 STP X22, X21, [X31 + 0x10]
	0x01D50754 STP X20, X19, [X31 + 0x20]
	0x01D50758 ADRP X21, 0x2688000
	0x01D5075C ADRP X20, 0x23A3000
	0x01D50760 LDRB W8, [X21 + 0x7B7]
	0x01D50764 LDR X20, [X20 + 0x648]
	0x01D50768 MOV X19, X0
	0x01D5076C TBNZ X8, 0x0, 0x1D507E4
	0x01D50770 ADRP X0, 0x23A3000
	0x01D50774 LDR X0, [X0 + 0x648]
	0x01D50778 BL 0x1C16CF4
	0x01D5077C ADRP X0, 0x23A4000
	0x01D50780 LDR X0, [X0 + 0xBE0]
	0x01D50784 BL 0x1C16CF4
	0x01D50788 ADRP X0, 0x23A4000
	0x01D5078C LDR X0, [X0 + 0xBE8]
	0x01D50790 BL 0x1C16CF4
	0x01D50794 ADRP X0, 0x23A4000
	0x01D50798 LDR X0, [X0 + 0xBF0]
	0x01D5079C BL 0x1C16CF4
	0x01D507A0 ADRP X0, 0x23A4000
	0x01D507A4 LDR X0, [X0 + 0xBF8]
	0x01D507A8 BL 0x1C16CF4
	0x01D507AC ADRP X0, 0x23A4000
	0x01D507B0 LDR X0, [X0 + 0xC00]
	0x01D507B4 BL 0x1C16CF4
	0x01D507B8 ADRP X0, 0x23A4000
	0x01D507BC LDR X0, [X0 + 0xC08]
	0x01D507C0 BL 0x1C16CF4
	0x01D507C4 ADRP X0, 0x23A4000
	0x01D507C8 LDR X0, [X0 + 0xC10]
	0x01D507CC BL 0x1C16CF4
	0x01D507D0 ADRP X0, 0x23A4000
	0x01D507D4 LDR X0, [X0 + 0xC18]
	0x01D507D8 BL 0x1C16CF4
	0x01D507DC MOVZ W8, 0x1
	0x01D507E0 STRB W8, [X21 + 0x7B7]
	0x01D507E4 LDR X0, [X20]
	0x01D507E8 LDR W8, [X0 + 0xE0]
	0x01D507EC CBNZ W8, 0x1D507F4
	0x01D507F0 BL 0x1C16DFC
	0x01D507F4 ADRP X22, 0x2688000
	0x01D507F8 LDRB W8, [X22 + 0x787]
	0x01D507FC CBNZ W8, 0x1D50814
	0x01D50800 ADRP X0, 0x23A3000
	0x01D50804 LDR X0, [X0 + 0x648]
	0x01D50808 BL 0x1C16CF4
	0x01D5080C MOVZ W8, 0x1
	0x01D50810 STRB W8, [X22 + 0x787]
	0x01D50814 LDR X0, [X20]
	0x01D50818 LDR W8, [X0 + 0xE0]
	0x01D5081C CBNZ W8, 0x1D50828
	0x01D50820 BL 0x1C16DFC
	0x01D50824 LDR X0, [X20]
	0x01D50828 LDR X8, [X0 + 0xB8]
	0x01D5082C LDR X8, [X8]
	0x01D50830 CBZ X8, 0x1D50990
	0x01D50834 LDR X8, [X8 + 0xE0]
	0x01D50838 CBZ X8, 0x1D50990
	0x01D5083C LDRB W9, [X22 + 0x787]
	0x01D50840 LDR X21, [X8 + 0x70]
	0x01D50844 CBNZ W9, 0x1D5085C
	0x01D50848 MOV X0, X20
	0x01D5084C BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x2689000
	009 Move X23, 0x23A4000
	010 Move X22, 0x23A5000
	011 Move X21, 0x23A4000
	012 Move W8, [X20+1963]
	013 Move X23, [X23+3488]
	014 Move X22, [X22+2888]
	015 Move X21, [X21+1608]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move X0, 0x23A4000
	022 Move X0, [X0+1608]
	023 Call 0x1C17CF4
	024 Move X0, 0x23A4000
	025 Move X0, [X0+3504]
	026 Call 0x1C17CF4
	027 Move X0, 0x23A4000
	028 Move X0, [X0+3488]
	029 Call 0x1C17CF4
	030 Move X0, 0x23A5000
	031 Move X0, [X0+376]
	032 Call 0x1C17CF4
	033 Move X0, 0x23A5000
	034 Move X0, [X0+2888]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X20+1963], W8
	038 Move X0, [X23]
	039 Call 0x1C17F10
	040 Move X2, [X22]
	041 Move X1, X19
	042 Move X3, X31
	043 Move X20, X0
	044 Call ObserverDelegate..ctor, X0, X1, X2
	045 Move X0, [X21]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, X20
	051 Move X1, X31
	052 Call App.DeregisterObserver, X0
	053 Move X24, 0x2689000
	054 Move W8, [X24+1927]
	055 Compare W8, 0
	056 JumpIfNotEqual {62}
	057 Move X0, 0x23A4000
	058 Move X0, [X0+1608]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X24+1927], W8
	062 Move X0, [X21]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {68}
	066 Call 0x1C17DFC
	067 Move X0, [X21]
	068 Move X8, [X0+184]
	069 Move X8, [X8]
	070 Compare X8, 0
	071 JumpIfEqual {159}
	072 Move X9, 0x23A5000
	073 Move X9, [X9+376]
	074 Move X0, [X8+176]
	075 Move X1, [X9]
	076 Call 0x2652A74, X0
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {151}
	081 Move X0, [X23]
	082 Call 0x1C17F10
	083 Move X2, [X22]
	084 Move X1, X19
	085 Move X3, X31
	086 Move X20, X0
	087 Call ObserverDelegate..ctor, X0, X1, X2
	088 Move X8, 0x23A4000
	089 Move X8, [X8+3504]
	090 Move W1, 1
	091 Move X0, [X8]
	092 Call 0x1C17D6C
	093 Move X8, [X21]
	094 Move X19, X0
	095 Move W9, [X8+224]
	096 Compare W9, 0
	097 JumpIfNotEqual {100}
	098 Move X0, X8
	099 Call 0x1C17DFC
	100 Move W8, [X24+1927]
	101 Compare W8, 0
	102 JumpIfNotEqual {108}
	103 Move X0, 0x23A4000
	104 Move X0, [X0+1608]
	105 Call 0x1C17CF4
	106 Move W8, 1
	107 Move [X24+1927], W8
	108 Move X0, [X21]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {114}
	112 Call 0x1C17DFC
	113 Move X0, [X21]
	114 Move X8, [X0+184]
	115 Move X8, [X8]
	116 Compare X8, 0
	117 JumpIfEqual {159}
	118 Move X8, [X8+184]
	119 Compare X8, 0
	120 JumpIfEqual {159}
	121 Move X8, [X8+128]
	122 Compare X8, 0
	123 JumpIfEqual {159}
	124 Compare X19, 0
	125 JumpIfEqual {159}
	126 Move X21, [X8+72]
	127 Compare X21, 0
	128 JumpIfEqual {135}
	129 Move X8, [X19]
	130 Move X0, X21
	131 Move X1, [X8+64]
	132 Call 0x1C17E00
	133 Compare X0, 0
	134 JumpIfEqual {161}
	135 Move W8, [X19+24]
	136 Compare W8, 0
	137 JumpIfEqual {160}
	138 Move [X19+32], X21
	139 Move X0, X20
	140 Move X1, X19
	141 Move X20, [X31+48]
	142 Move X19, [X31+56]
	143 Move X22, [X31+32]
	144 Move X21, [X31+40]
	145 Move X24, [X31+16]
	146 Move X23, [X31+24]
	147 Move X2, X31
	148 Move X30, [X31+64]
	149 Call App.RegisterObserver, X0, X1
	150 Return 
	151 Move X20, [X31+48]
	152 Move X19, [X31+56]
	153 Move X22, [X31+32]
	154 Move X21, [X31+40]
	155 Move X24, [X31+16]
	156 Move X23, [X31+24]
	157 Move X30, [X31+64]
	158 Return 
	159 Call 0x1C17F20
	160 Call 0x1C17F28
	161 Call 0x1C17F44
	162 Move X1, X31
	163 Call 0x1C17DEC

Method: System.Void HandleUserSoftCurrencyChanged(SpatialSys.ObservableState.StateChangedEventArgs args)

Disassembly:
	0x01D50850 LDR X0, [X20]
	0x01D50854 MOVZ W8, 0x1
	0x01D50858 STRB W8, [X22 + 0x787]
	0x01D5085C LDR W8, [X0 + 0xE0]
	0x01D50860 CBNZ W8, 0x1D5086C
	0x01D50864 BL 0x1C16DFC
	0x01D50868 LDR X0, [X20]
	0x01D5086C LDR X8, [X0 + 0xB8]
	0x01D50870 LDR X8, [X8]
	0x01D50874 CBZ X8, 0x1D50990
	0x01D50878 LDR X8, [X8 + 0xB8]
	0x01D5087C CBZ X8, 0x1D50990
	0x01D50880 LDR X8, [X8 + 0xA0]
	0x01D50884 CBZ X8, 0x1D50990
	0x01D50888 LDR X0, [X8 + 0x48]
	0x01D5088C CBZ X0, 0x1D50990
	0x01D50890 ADRP X8, 0x23A4000
	0x01D50894 LDR X8, [X8 + 0xC08]
	0x01D50898 ADRP X20, 0x23A4000
	0x01D5089C ADRP X22, 0x23A4000
	0x01D508A0 LDR X1, [X8]
	0x01D508A4 LDR X20, [X20 + 0xBE8]
	0x01D508A8 LDR X22, [X22 + 0xBF0]
	0x01D508AC BL 0x260877C
	0x01D508B0 LDR X2, [X20]
	0x01D508B4 MOV X1, X0
	0x01D508B8 MOV X0, X21
	0x01D508BC BL 0x21BA09C
	0x01D508C0 LDR X1, [X22]
	0x01D508C4 BL 0x21C0360
	0x01D508C8 LDR X8, [X19 + 0x28]
	0x01D508CC CBZ X8, 0x1D50990
	0x01D508D0 LDR W8, [X8 + 0x20]
	0x01D508D4 CMP W8, 0x0
	0x01D508D8 B.LE 0x1D508F0
	0x01D508DC LDP X20, X19, [X31 + 0x20]
	0x01D508E0 LDP X22, X21, [X31 + 0x10]
	0x01D508E4 MOVZ W0, 0x1
	0x01D508E8 LDR X30, [X31], #0x30
	0x01D508EC RET
	0x01D508F0 ADRP X22, 0x23A4000
	0x01D508F4 LDR X22, [X22 + 0xC18]
	0x01D508F8 MOV X19, X0
	0x01D508FC LDR X0, [X22]
	0x01D50900 LDR W8, [X0 + 0xE0]
	0x01D50904 CBNZ W8, 0x1D50910
	0x01D50908 BL 0x1C16DFC
	0x01D5090C LDR X0, [X22]
	0x01D50910 LDR X8, [X0 + 0xB8]
	0x01D50914 LDR X20, [X8 + 0x18]
	0x01D50918 CBNZ X20, 0x1D5096C
	0x01D5091C LDR W8, [X0 + 0xE0]
	0x01D50920 CBNZ W8, 0x1D5092C
	0x01D50924 BL 0x1C16DFC
	0x01D50928 LDR X0, [X22]
	0x01D5092C ADRP X9, 0x23A4000
	0x01D50930 LDR X8, [X0 + 0xB8]
	0x01D50934 LDR X9, [X9 + 0xBF8]
	0x01D50938 LDR X21, [X8]
	0x01D5093C LDR X0, [X9]
	0x01D50940 BL 0x1C16F10
	0x01D50944 ADRP X8, 0x23A4000
	0x01D50948 LDR X8, [X8 + 0xC10]
	0x01D5094C MOV X1, X21
	0x01D50950 MOV X3, X31
	0x01D50954 MOV X20, X0
	0x01D50958 LDR X2, [X8]
	0x01D5095C BL 0x2D2F428
	0x01D50960 LDR X8, [X22]
	0x01D50964 LDR X8, [X8 + 0xB8]
	0x01D50968 STR X20, [X8 + 0x18]
	0x01D5096C ADRP X8, 0x23A4000
	0x01D50970 LDR X8, [X8 + 0xBE0]
	0x01D50974 MOV X0, X19
	0x01D50978 MOV X1, X20
	0x01D5097C LDP X20, X19, [X31 + 0x20]
	0x01D50980 LDR X2, [X8]
	0x01D50984 LDP X22, X21, [X31 + 0x10]
	0x01D50988 LDR X30, [X31], #0x30
	0x01D5098C B 0x21B36AC
	0x01D50990 BL 0x1C16F20
	0x01D50994 STR X30, [X31 - 0x30]!
	0x01D50998 STP X22, X21, [X31 + 0x10]
	0x01D5099C STP X20, X19, [X31 + 0x20]
	0x01D509A0 ADRP X22, 0x2688000
	0x01D509A4 ADRP X21, 0x23A4000
	0x01D509A8 ADRP X20, 0x23A3000
	0x01D509AC LDRB W8, [X22 + 0x7B8]
	0x01D509B0 LDR X21, [X21 + 0xBC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2689000
	006 Move W8, [X21+1964]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x23A4000
	014 Move X0, [X0+1608]
	015 Call 0x1C17CF4
	016 Move X0, 0x23A4000
	017 Move X0, [X0+2392]
	018 Call 0x1C17CF4
	019 Move X0, 0x23A5000
	020 Move X0, [X0+2896]
	021 Call 0x1C17CF4
	022 Move X0, 0x23A5000
	023 Move X0, [X0+2904]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+1964], W8
	027 Move X21, 0x23A4000
	028 Move X21, [X21+1608]
	029 And W31, W20, 255
	030 Move X0, [X21]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X20, 0x2689000
	036 Move W8, [X20+1927]
	037 Compare W8, 0
	038 JumpIfNotEqual {44}
	039 Move X0, 0x23A4000
	040 Move X0, [X0+1608]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X20+1927], W8
	044 Move X0, [X21]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X21]
	050 Move X8, [X0+184]
	051 Move X8, [X8]
	052 Compare X8, 0
	053 JumpIfEqual {106}
	054 Move X8, [X8+184]
	055 Compare X8, 0
	056 JumpIfEqual {106}
	057 Move X8, [X8+128]
	058 Compare X8, 0
	059 JumpIfEqual {106}
	060 Move X8, [X8+72]
	061 Compare X8, 0
	062 JumpIfEqual {106}
	063 Move W8, [X8+76]
	064 Move [X19+40], W8
	065 Move X0, [X19+32]
	066 Compare X0, 0
	067 JumpIfEqual {106}
	068 Move X1, X31
	069 Call CommandHandle.get_hasFinalized, X0
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {101}
	074 Move X8, 0x23A4000
	075 Move X8, [X8+2392]
	076 Move X0, [X8]
	077 Call 0x1C17F10
	078 Move X8, 0x23A5000
	079 Move X8, [X8+2904]
	080 Move X1, X19
	081 Move X3, X31
	082 Move X20, X0
	083 Move X2, [X8]
	084 Call CoroutineGenerator..ctor, X0, X1, X2
	085 Move X0, X20
	086 Move W1, W31
	087 Move X2, X31
	088 Call Commands.Coroutine, X0, X1
	089 Move X8, [X21]
	090 Move X20, X0
	091 Move W9, [X8+224]
	092 Compare W9, 0
	093 JumpIfNotEqual {96}
	094 Move X0, X8
	095 Call 0x1C17DFC
	096 Move X0, X20
	097 Move W1, W31
	098 Move X2, X31
	099 Call App.ExecuteCommand, X0, X1
	100 Move [X19+32], X0
	101 Move X20, [X31+16]
	102 Move X19, [X31+24]
	103 Move X30, [X31+32]
	104 Move X21, [X31+40]
	105 Return 
	106 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerator`1<SpatialSys.CommandLib.Command> SaveSoftCurrencyCommand()

Disassembly:
	0x01D509B4 LDR X20, [X20 + 0x598]
	0x01D509B8 MOV X19, X0
	0x01D509BC TBNZ X8, 0x0, 0x1D50A10
	0x01D509C0 ADRP X0, 0x23A3000
	0x01D509C4 LDR X0, [X0 + 0x648]
	0x01D509C8 BL 0x1C16CF4
	0x01D509CC ADRP X0, 0x23A3000
	0x01D509D0 LDR X0, [X0 + 0x958]
	0x01D509D4 BL 0x1C16CF4
	0x01D509D8 ADRP X0, 0x23A4000
	0x01D509DC LDR X0, [X0 + 0xC20]
	0x01D509E0 BL 0x1C16CF4
	0x01D509E4 ADRP X0, 0x23A3000
	0x01D509E8 LDR X0, [X0 + 0x598]
	0x01D509EC BL 0x1C16CF4
	0x01D509F0 ADRP X0, 0x23A4000
	0x01D509F4 LDR X0, [X0 + 0xBD0]
	0x01D509F8 BL 0x1C16CF4
	0x01D509FC ADRP X0, 0x23A4000
	0x01D50A00 LDR X0, [X0 + 0xBC0]
	0x01D50A04 BL 0x1C16CF4
	0x01D50A08 MOVZ W8, 0x1
	0x01D50A0C STRB W8, [X22 + 0x7B8]
	0x01D50A10 LDR X8, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2689000
	006 Move X21, 0x23A5000
	007 Move W8, [X20+1965]
	008 Move X21, [X21+2912]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x23A5000
	015 Move X0, [X0+2912]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1965], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move [X20+16], W31
	025 Move [X20+32], X19
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Void .ctor()

Disassembly:
	0x01D50A3C TBNZ X0, 0x0, 0x1D50B38
	0x01D50A40 MOV X0, X19
	0x01D50A44 MOV X1, X31
	0x01D50A48 BL 0x32277A8
	0x01D50A4C TBNZ X0, 0x0, 0x1D50B38
	0x01D50A50 LDR X8, [X21]
	0x01D50A54 LDR X8, [X8 + 0xB8]
	0x01D50A58 LDR X8, [X8]
	0x01D50A5C CBZ X8, 0x1D50B48
	0x01D50A60 LDR X0, [X8 + 0x28]
	0x01D50A64 CBZ X0, 0x1D50B48
	0x01D50A68 ADRP X8, 0x23A4000
	0x01D50A6C LDR X8, [X8 + 0xC20]
	0x01D50A70 MOV X1, X19
	0x01D50A74 LDR X2, [X8]
	0x01D50A78 BL 0x2DBEF30
	0x01D50A7C LDR X8, [X21]
	0x01D50A80 LDR X8, [X8 + 0xB8]
	0x01D50A84 LDR X8, [X8]
	0x01D50A88 CBZ X8, 0x1D50B48
	0x01D50A8C LDR X0, [X8 + 0x20]
	0x01D50A90 CBZ X0, 0x1D50B48
	0x01D50A94 MOV X1, X31
	0x01D50A98 BL 0x35B9A1C
	0x01D50A9C TBZ X0, 0x0, 0x1D50B38
	0x01D50AA0 LDR X8, [X21]
	0x01D50AA4 LDR X8, [X8 + 0xB8]
	0x01D50AA8 LDR X0, [X8]
	0x01D50AAC CBZ X0, 0x1D50B48
	0x01D50AB0 BL 0x1D5074C
	0x01D50AB4 TBZ X0, 0x0, 0x1D50B38
	0x01D50AB8 LDR X8, [X21]
	0x01D50ABC ADRP X9, 0x23A3000
	0x01D50AC0 LDR X8, [X8 + 0xB8]
	0x01D50AC4 LDR X9, [X9 + 0x958]
	0x01D50AC8 LDR X19, [X8]
	0x01D50ACC LDR X0, [X9]
	0x01D50AD0 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2689000
	006 Move X20, 0x23A4000
	007 Move W8, [X21+1966]
	008 Move X20, [X20+2200]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x23A4000
	015 Move X0, [X0+2200]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1966], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X21, 0x2689000
	025 Move W8, [X21+1931]
	026 Compare W8, 0
	027 JumpIfNotEqual {33}
	028 Move X0, 0x23A4000
	029 Move X0, [X0+2200]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+1931], W8
	033 Move X0, [X20]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X20]
	039 Move X8, [X0+184]
	040 Move X0, X19
	041 Move X1, X31
	042 Move X8, [X8]
	043 Move [X19+32], X8
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Call MonoBehaviour..ctor, X0
	049 Return 

