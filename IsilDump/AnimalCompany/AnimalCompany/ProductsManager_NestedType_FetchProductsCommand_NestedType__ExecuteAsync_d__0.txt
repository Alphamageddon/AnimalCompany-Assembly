Type: AnimalCompany.ProductsManager/FetchProductsCommand/<ExecuteAsync>d__0

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01D47A54 MOV X19, X0
	0x01D47A58 TBNZ X8, 0x0, 0x1D47A94
	0x01D47A5C ADRP X0, 0x23AD000
	0x01D47A60 LDR X0, [X0 + 0x6A0]
	0x01D47A64 BL 0x1C16CF4
	0x01D47A68 ADRP X0, 0x23AD000
	0x01D47A6C LDR X0, [X0 + 0x6A8]
	0x01D47A70 BL 0x1C16CF4
	0x01D47A74 ADRP X0, 0x23AD000
	0x01D47A78 LDR X0, [X0 + 0x6B0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01D48374 LDR X0, [X26]

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01D48378 LDR W8, [X0 + 0xE0]
	0x01D4837C CBNZ W8, 0x1D48384
	0x01D48380 BL 0x1C16DFC
	0x01D48384 ADRP X8, 0x23AC000
	0x01D48388 LDR X8, [X8 + 0x728]
	0x01D4838C LDR X3, [X25]
	0x01D48390 LDR X4, [X24]
	0x01D48394 MOVZ W0, 0x800
	0x01D48398 LDR X1, [X8]
	0x01D4839C MOVZ W5, 0xD7
	0x01D483A0 MOV X2, X31
	0x01D483A4 MOV X6, X31
	0x01D483A8 BL 0x35C2158
	0x01D483AC B 0x1D48534
	0x01D483B0 MOV X1, X31
	0x01D483B4 MOV X0, X8
	0x01D483B8 MOV X2, X31
	0x01D483BC BL 0x321B938
	0x01D483C0 ADRP X8, 0x23AB000
	0x01D483C4 LDR X8, [X8 + 0x720]
	0x01D483C8 MOV X21, X0
	0x01D483CC LDR X8, [X8]
	0x01D483D0 MOV X0, X8
	0x01D483D4 BL 0x1C16F10
	0x01D483D8 ADRP X8, 0x23AB000
	0x01D483DC LDR X8, [X8 + 0x718]
	0x01D483E0 MOV X22, X0
	0x01D483E4 LDR X1, [X8]
	0x01D483E8 BL 0x2AA4804
	0x01D483EC LDR X8, [X20]
	0x01D483F0 MOV X0, X20
	0x01D483F4 LDP X9, X1, [X8 + 0x178]
	0x01D483F8 BLR X9
	0x01D483FC ADRP X8, 0x23AC000
	0x01D48400 LDR X8, [X8 + 0x738]
	0x01D48404 LDR X23, [X8]
	0x01D48408 CBZ X0, 0x1D48430
	0x01D4840C ADRP X8, 0x23AC000
	0x01D48410 LDR W1, [X0 + 0x10]
	0x01D48414 LDR X8, [X8 + 0x470]
	0x01D48418 ADD X0, X31, 0x8
	0x01D4841C STR X31, [X31 + 0x8]
	0x01D48420 LDR X2, [X8]
	0x01D48424 BL 0x24341FC
	0x01D48428 LDR X8, [X31 + 0x8]
	0x01D4842C B 0x1D48434
	0x01D48430 MOV X8, X31
	0x01D48434 ADRP X27, 0x23AC000
	0x01D48438 LDR X27, [X27 + 0x478]
	0x01D4843C ADD X1, X31, 0x8
	0x01D48440 STR X8, [X31 + 0x8]
	0x01D48444 LDR X0, [X27]
	0x01D48448 BL 0x1C16E04
	0x01D4844C CBZ X22, 0x1D4855C
	0x01D48450 ADRP X28, 0x23AB000
	0x01D48454 LDR X28, [X28 + 0x710]
	0x01D48458 MOV X2, X0
	0x01D4845C MOV X0, X22
	0x01D48460 MOV X1, X23
	0x01D48464 LDR X3, [X28]
	0x01D48468 BL 0x2AA5098
	0x01D4846C LDR X8, [X20]
	0x01D48470 MOV X0, X20
	0x01D48474 LDP X9, X1, [X8 + 0x178]
	0x01D48478 BLR X9
	0x01D4847C ADRP X8, 0x23AC000
	0x01D48480 LDR X8, [X8 + 0x730]
	0x01D48484 LDR X23, [X8]
	0x01D48488 CBZ X0, 0x1D484B0
	0x01D4848C ADRP X8, 0x23AC000
	0x01D48490 LDR W1, [X0 + 0x14]
	0x01D48494 LDR X8, [X8 + 0x470]
	0x01D48498 ADD X0, X31, 0x8
	0x01D4849C STR X31, [X31 + 0x8]
	0x01D484A0 LDR X2, [X8]
	0x01D484A4 BL 0x24341FC
	0x01D484A8 LDR X8, [X31 + 0x8]
	0x01D484AC B 0x1D484B4
	0x01D484B0 MOV X8, X31
	0x01D484B4 LDR X0, [X27]
	0x01D484B8 ADD X1, X31, 0x8
	0x01D484BC STR X8, [X31 + 0x8]
	0x01D484C0 BL 0x1C16E04
	0x01D484C4 LDR X3, [X28]
	0x01D484C8 MOV X2, X0
	0x01D484CC MOV X0, X22
	0x01D484D0 MOV X1, X23
	0x01D484D4 BL 0x2AA5098
	0x01D484D8 LDR X0, [X26]
	0x01D484DC LDR W8, [X0 + 0xE0]
	0x01D484E0 CBNZ W8, 0x1D484E8
	0x01D484E4 BL 0x1C16DFC
	0x01D484E8 LDR X3, [X25]
	0x01D484EC LDR X4, [X24]
	0x01D484F0 MOVZ W0, 0x800
	0x01D484F4 MOVZ W5, 0xCE
	0x01D484F8 MOV X1, X21
	0x01D484FC MOV X2, X22
	0x01D48500 MOV X6, X31
	0x01D48504 BL 0x35C25CC
	0x01D48508 MOVZ W8, 0x4
	0x01D4850C STR W8, [X19 + 0x18]
	0x01D48510 LDR X8, [X20]
	0x01D48514 MOV X0, X20
	0x01D48518 LDP X9, X1, [X8 + 0x178]
	0x01D4851C BLR X9
	0x01D48520 CBZ X0, 0x1D4852C
	0x01D48524 LDR X8, [X0 + 0x18]
	0x01D48528 B 0x1D48530
	0x01D4852C MOV X8, X31
	0x01D48530 STR X8, [X19 + 0x20]
	0x01D48534 MOVZ W8, 0x1
	0x01D48538 STRB W8, [X19 + 0x28]
	0x01D4853C LDP X20, X19, [X31 + 0x60]
	0x01D48540 LDP X22, X21, [X31 + 0x50]
	0x01D48544 LDP X24, X23, [X31 + 0x40]
	0x01D48548 LDP X26, X25, [X31 + 0x30]
	0x01D4854C LDP X28, X27, [X31 + 0x20]
	0x01D48550 LDR X30, [X31 + 0x10]
	0x01D48554 ADD X31, X31, 0x70
	0x01D48558 RET
	0x01D4855C BL 0x1C16F20
	0x01D48560 SUB X31, X31, 0x50
	0x01D48564 STP X30, X25, [X31 + 0x10]
	0x01D48568 STP X24, X23, [X31 + 0x20]
	0x01D4856C STP X22, X21, [X31 + 0x30]
	0x01D48570 STP X20, X19, [X31 + 0x40]
	0x01D48574 ADRP X21, 0x2690000
	0x01D48578 LDRB W8, [X21 + 0x77B]
	0x01D4857C MOV X20, X1
	0x01D48580 MOV X19, X0
	0x01D48584 TBNZ X8, 0x0, 0x1D48638
	0x01D48588 ADRP X0, 0x23AB000
	0x01D4858C LDR X0, [X0 + 0x710]
	0x01D48590 BL 0x1C16CF4
	0x01D48594 ADRP X0, 0x23AB000
	0x01D48598 LDR X0, [X0 + 0x718]
	0x01D4859C BL 0x1C16CF4
	0x01D485A0 ADRP X0, 0x23AB000
	0x01D485A4 LDR X0, [X0 + 0x720]
	0x01D485A8 BL 0x1C16CF4
	0x01D485AC ADRP X0, 0x23AB000
	0x01D485B0 LDR X0, [X0 + 0x788]
	0x01D485B4 BL 0x1C16CF4
	0x01D485B8 ADRP X0, 0x23AC000
	0x01D485BC LDR X0, [X0 + 0x750]
	0x01D485C0 BL 0x1C16CF4
	0x01D485C4 ADRP X0, 0x23AC000
	0x01D485C8 LDR X0, [X0 + 0x470]
	0x01D485CC BL 0x1C16CF4
	0x01D485D0 ADRP X0, 0x23AC000
	0x01D485D4 LDR X0, [X0 + 0x478]
	0x01D485D8 BL 0x1C16CF4
	0x01D485DC ADRP X0, 0x23AC000
	0x01D485E0 LDR X0, [X0 + 0x758]
	0x01D485E4 BL 0x1C16CF4
	0x01D485E8 ADRP X0, 0x23AC000
	0x01D485EC LDR X0, [X0 + 0x718]
	0x01D485F0 BL 0x1C16CF4
	0x01D485F4 ADRP X0, 0x23AC000
	0x01D485F8 LDR X0, [X0 + 0x730]
	0x01D485FC BL 0x1C16CF4
	0x01D48600 ADRP X0, 0x23AC000
	0x01D48604 LDR X0, [X0 + 0x760]
	0x01D48608 BL 0x1C16CF4
	0x01D4860C ADRP X0, 0x23AC000
	0x01D48610 LDR X0, [X0 + 0x738]
	0x01D48614 BL 0x1C16CF4
	0x01D48618 ADRP X0, 0x23AC000
	0x01D4861C LDR X0, [X0 + 0x740]
	0x01D48620 BL 0x1C16CF4
	0x01D48624 ADRP X0, 0x23AC000
	0x01D48628 LDR X0, [X0 + 0x768]
	0x01D4862C BL 0x1C16CF4
	0x01D48630 MOVZ W8, 0x1
	0x01D48634 STRB W8, [X21 + 0x77B]
	0x01D48638 CBZ X20, 0x1D488D0
	0x01D4863C MOV X0, X20
	0x01D48640 MOV X1, X31
	0x01D48644 BL 0x34D072C
	0x01D48648 TBZ X0, 0x0, 0x1D48674
	0x01D4864C LDR X8, [X20]
	0x01D48650 MOV X0, X20
	0x01D48654 LDP X9, X1, [X8 + 0x178]
	0x01D48658 BLR X9
	0x01D4865C ADRP X8, 0x23AC000
	0x01D48660 LDR X8, [X8 + 0x768]
	0x01D48664 LDR X8, [X8]
	0x01D48668 CBZ X0, 0x1D48714
	0x01D4866C LDR X1, [X0 + 0x18]
	0x01D48670 B 0x1D48718
	0x01D48674 LDR X8, [X20 + 0x28]
	0x01D48678 STR X8, [X19 + 0x30]
	0x01D4867C CBZ X8, 0x1D488D0
	0x01D48680 ADRP X9, 0x23AC000
	0x01D48684 LDR X8, [X8 + 0x18]
	0x01D48688 LDR X9, [X9 + 0x758]
	0x01D4868C ADD X1, X31, 0x8
	0x01D48690 STR X8, [X31 + 0x8]
	0x01D48694 LDR X0, [X9]
	0x01D48698 BL 0x1C16E04
	0x01D4869C LDR X8, [X19 + 0x30]
	0x01D486A0 CBZ X8, 0x1D488D0
	0x01D486A4 LDR X2, [X8 + 0x28]
	0x01D486A8 ADRP X8, 0x23AC000
	0x01D486AC LDR X8, [X8 + 0x760]
	0x01D486B0 MOV X1, X0
	0x01D486B4 MOV X3, X31
	0x01D486B8 LDR X0, [X8]
	0x01D486BC BL 0x3227BD4
	0x01D486C0 ADRP X8, 0x23AB000
	0x01D486C4 LDR X8, [X8 + 0x788]
	0x01D486C8 MOV X20, X0
	0x01D486CC LDR X8, [X8]
	0x01D486D0 LDR W9, [X8 + 0xE0]
	0x01D486D4 CBNZ W9, 0x1D486E0
	0x01D486D8 MOV X0, X8
	0x01D486DC BL 0x1C16DFC
	0x01D486E0 ADRP X8, 0x23AC000
	0x01D486E4 ADRP X9, 0x23AC000
	0x01D486E8 LDR X8, [X8 + 0x718]
	0x01D486EC LDR X9, [X9 + 0x740]
	0x01D486F0 MOVZ W0, 0x800
	0x01D486F4 MOVZ W5, 0xF7
	0x01D486F8 LDR X3, [X8]
	0x01D486FC LDR X4, [X9]
	0x01D48700 MOV X1, X20
	0x01D48704 MOV X2, X31
	0x01D48708 MOV X6, X31
	0x01D4870C BL 0x35C2014
	0x01D48710 B 0x1D488B0
	0x01D48714 MOV X1, X31
	0x01D48718 MOV X0, X8
	0x01D4871C MOV X2, X31
	0x01D48720 BL 0x321B938
	0x01D48724 ADRP X8, 0x23AB000
	0x01D48728 LDR X8, [X8 + 0x720]
	0x01D4872C MOV X21, X0
	0x01D48730 LDR X8, [X8]
	0x01D48734 MOV X0, X8
	0x01D48738 BL 0x1C16F10
	0x01D4873C ADRP X8, 0x23AB000
	0x01D48740 LDR X8, [X8 + 0x718]
	0x01D48744 MOV X22, X0
	0x01D48748 LDR X1, [X8]
	0x01D4874C BL 0x2AA4804
	0x01D48750 LDR X8, [X20]
	0x01D48754 MOV X0, X20
	0x01D48758 LDP X9, X1, [X8 + 0x178]
	0x01D4875C BLR X9
	0x01D48760 ADRP X8, 0x23AC000
	0x01D48764 LDR X8, [X8 + 0x738]
	0x01D48768 LDR X23, [X8]
	0x01D4876C CBZ X0, 0x1D48794
	0x01D48770 ADRP X8, 0x23AC000
	0x01D48774 LDR W1, [X0 + 0x10]
	0x01D48778 LDR X8, [X8 + 0x470]
	0x01D4877C ADD X0, X31, 0x8
	0x01D48780 STR X31, [X31 + 0x8]
	0x01D48784 LDR X2, [X8]
	0x01D48788 BL 0x24341FC
	0x01D4878C LDR X8, [X31 + 0x8]
	0x01D48790 B 0x1D48798
	0x01D48794 MOV X8, X31
	0x01D48798 ADRP X24, 0x23AC000
	0x01D4879C LDR X24, [X24 + 0x478]
	0x01D487A0 ADD X1, X31, 0x8
	0x01D487A4 STR X8, [X31 + 0x8]
	0x01D487A8 LDR X0, [X24]
	0x01D487AC BL 0x1C16E04
	0x01D487B0 CBZ X22, 0x1D488D0
	0x01D487B4 ADRP X25, 0x23AB000
	0x01D487B8 LDR X25, [X25 + 0x710]
	0x01D487BC MOV X2, X0
	0x01D487C0 MOV X0, X22
	0x01D487C4 MOV X1, X23
	0x01D487C8 LDR X3, [X25]
	0x01D487CC BL 0x2AA5098
	0x01D487D0 LDR X8, [X20]
	0x01D487D4 MOV X0, X20
	0x01D487D8 LDP X9, X1, [X8 + 0x178]
	0x01D487DC BLR X9
	0x01D487E0 ADRP X8, 0x23AC000
	0x01D487E4 LDR X8, [X8 + 0x730]
	0x01D487E8 LDR X23, [X8]
	0x01D487EC CBZ X0, 0x1D48814
	0x01D487F0 ADRP X8, 0x23AC000
	0x01D487F4 LDR W1, [X0 + 0x14]
	0x01D487F8 LDR X8, [X8 + 0x470]
	0x01D487FC ADD X0, X31, 0x8
	0x01D48800 STR X31, [X31 + 0x8]
	0x01D48804 LDR X2, [X8]
	0x01D48808 BL 0x24341FC
	0x01D4880C LDR X8, [X31 + 0x8]
	0x01D48810 B 0x1D48818
	0x01D48814 MOV X8, X31
	0x01D48818 LDR X0, [X24]
	0x01D4881C ADD X1, X31, 0x8
	0x01D48820 STR X8, [X31 + 0x8]
	0x01D48824 BL 0x1C16E04
	0x01D48828 LDR X3, [X25]
	0x01D4882C MOV X2, X0
	0x01D48830 MOV X0, X22
	0x01D48834 MOV X1, X23
	0x01D48838 BL 0x2AA5098
	0x01D4883C ADRP X8, 0x23AB000
	0x01D48840 LDR X8, [X8 + 0x788]
	0x01D48844 LDR X0, [X8]
	0x01D48848 LDR W8, [X0 + 0xE0]
	0x01D4884C CBNZ W8, 0x1D48854
	0x01D48850 BL 0x1C16DFC
	0x01D48854 ADRP X8, 0x23AC000
	0x01D48858 ADRP X9, 0x23AC000
	0x01D4885C LDR X8, [X8 + 0x718]
	0x01D48860 LDR X9, [X9 + 0x740]
	0x01D48864 MOVZ W0, 0x800
	0x01D48868 MOVZ W5, 0xED
	0x01D4886C LDR X3, [X8]
	0x01D48870 LDR X4, [X9]
	0x01D48874 MOV X1, X21
	0x01D48878 MOV X2, X22
	0x01D4887C MOV X6, X31
	0x01D48880 BL 0x35C25CC
	0x01D48884 MOVZ W8, 0x5
	0x01D48888 STR W8, [X19 + 0x18]
	0x01D4888C LDR X8, [X20]
	0x01D48890 MOV X0, X20
	0x01D48894 LDP X9, X1, [X8 + 0x178]
	0x01D48898 BLR X9
	0x01D4889C CBZ X0, 0x1D488A8
	0x01D488A0 LDR X8, [X0 + 0x18]
	0x01D488A4 B 0x1D488AC
	0x01D488A8 MOV X8, X31
	0x01D488AC STR X8, [X19 + 0x20]
	0x01D488B0 MOVZ W8, 0x1
	0x01D488B4 STRB W8, [X19 + 0x38]
	0x01D488B8 LDP X20, X19, [X31 + 0x40]
	0x01D488BC LDP X22, X21, [X31 + 0x30]
	0x01D488C0 LDP X24, X23, [X31 + 0x20]
	0x01D488C4 LDP X30, X25, [X31 + 0x10]
	0x01D488C8 ADD X31, X31, 0x50
	0x01D488CC RET
	0x01D488D0 BL 0x1C16F20
	0x01D488D4 SUB X31, X31, 0x50
	0x01D488D8 STP X30, X25, [X31 + 0x10]
	0x01D488DC STP X24, X23, [X31 + 0x20]
	0x01D488E0 STP X22, X21, [X31 + 0x30]
	0x01D488E4 STP X20, X19, [X31 + 0x40]
	0x01D488E8 ADRP X21, 0x2690000
	0x01D488EC LDRB W8, [X21 + 0x77C]
	0x01D488F0 MOV X20, X1
	0x01D488F4 MOV X19, X0
	0x01D488F8 TBNZ X8, 0x0, 0x1D489A0
	0x01D488FC ADRP X0, 0x23AB000
	0x01D48900 LDR X0, [X0 + 0x710]
	0x01D48904 BL 0x1C16CF4
	0x01D48908 ADRP X0, 0x23AB000
	0x01D4890C LDR X0, [X0 + 0x718]
	0x01D48910 BL 0x1C16CF4
	0x01D48914 ADRP X0, 0x23AB000
	0x01D48918 LDR X0, [X0 + 0x720]
	0x01D4891C BL 0x1C16CF4
	0x01D48920 ADRP X0, 0x23AB000
	0x01D48924 LDR X0, [X0 + 0x788]
	0x01D48928 BL 0x1C16CF4
	0x01D4892C ADRP X0, 0x23AC000
	0x01D48930 LDR X0, [X0 + 0x770]
	0x01D48934 BL 0x1C16CF4
	0x01D48938 ADRP X0, 0x23AC000
	0x01D4893C LDR X0, [X0 + 0x470]
	0x01D48940 BL 0x1C16CF4
	0x01D48944 ADRP X0, 0x23AC000
	0x01D48948 LDR X0, [X0 + 0x478]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x2691000
	009 Move W8, [X20+1905]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {77}
	015 Move X0, 0x23AC000
	016 Move X0, [X0+1608]
	017 Call 0x1C17CF4
	018 Move X0, 0x23AC000
	019 Move X0, [X0+2416]
	020 Call 0x1C17CF4
	021 Move X0, 0x23AC000
	022 Move X0, [X0+2736]
	023 Call 0x1C17CF4
	024 Move X0, 0x23AD000
	025 Move X0, [X0+1560]
	026 Call 0x1C17CF4
	027 Move X0, 0x23AD000
	028 Move X0, [X0+1568]
	029 Call 0x1C17CF4
	030 Move X0, 0x23AD000
	031 Move X0, [X0+1576]
	032 Call 0x1C17CF4
	033 Move X0, 0x23AD000
	034 Move X0, [X0+1584]
	035 Call 0x1C17CF4
	036 Move X0, 0x23AC000
	037 Move X0, [X0+3768]
	038 Call 0x1C17CF4
	039 Move X0, 0x23AD000
	040 Move X0, [X0+1592]
	041 Call 0x1C17CF4
	042 Move X0, 0x23AD000
	043 Move X0, [X0+1600]
	044 Call 0x1C17CF4
	045 Move X0, 0x23AD000
	046 Move X0, [X0+1608]
	047 Call 0x1C17CF4
	048 Move X0, 0x23AD000
	049 Move X0, [X0+1616]
	050 Call 0x1C17CF4
	051 Move X0, 0x23AD000
	052 Move X0, [X0+1624]
	053 Call 0x1C17CF4
	054 Move X0, 0x23AD000
	055 Move X0, [X0+1632]
	056 Call 0x1C17CF4
	057 Move X0, 0x23AD000
	058 Move X0, [X0+1640]
	059 Call 0x1C17CF4
	060 Move X0, 0x23AD000
	061 Move X0, [X0+1648]
	062 Call 0x1C17CF4
	063 Move X0, 0x23AD000
	064 Move X0, [X0+1656]
	065 Call 0x1C17CF4
	066 Move X0, 0x23AD000
	067 Move X0, [X0+1480]
	068 Call 0x1C17CF4
	069 Move X0, 0x23AD000
	070 Move X0, [X0+1664]
	071 Call 0x1C17CF4
	072 Move X0, 0x23AD000
	073 Move X0, [X0+1672]
	074 Call 0x1C17CF4
	075 Move W8, 1
	076 Move [X20+1905], W8
	077 Move W8, [X19+16]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X20, [X19+32]
	080 Move X9, -19238912
	081 Add X9, X9, 1494
	082 NotImplemented "Instruction ADR not yet implemented."
	083 Move W11, [X9]
	084 Add X10, X10, X11
	085 CallNoReturn X10
	086 Move TEMP, 0
	087 Not TEMP
	088 Move W8, TEMP
	089 Move [X19+16], W8
	090 Move X8, 0x23AD000
	091 Move X8, [X8+1656]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X1, X31
	095 Move X21, X0
	096 Call Object..ctor, X0
	097 Move [X19+40], X21
	098 Compare X21, 0
	099 JumpIfEqual {418}
	100 Move X8, [X19+32]
	101 Move W9, 50
	102 Move [X21+24], X8
	103 Move [X19+48], W9
	104 Move X8, [X19+56]
	105 Move TEMP, 0
	106 Not TEMP
	107 Move W9, TEMP
	108 Move [X19+16], W9
	109 Compare X8, 0
	110 JumpIfEqual {418}
	111 Move X0, [X8+88]
	112 Compare X0, 0
	113 JumpIfEqual {399}
	114 Move X8, [X0+24]
	115 Compare X8, 0
	116 JumpIfEqual {399}
	117 Move X8, 0x23AD000
	118 Move X8, [X8+1584]
	119 Move X1, [X8]
	120 Call 0x21D611C, X0
	121 Move X8, 0x23AC000
	122 Move X8, [X8+2736]
	123 Move W1, 1
	124 Move X0, [X8]
	125 Call 0x1C17D6C
	126 Move X8, [X19+56]
	127 Compare X8, 0
	128 JumpIfEqual {418}
	129 Move X22, [X8+88]
	130 Move X8, 0x23AD000
	131 Move X8, [X8+1672]
	132 Move X20, X0
	133 Move X0, [X8]
	134 Call 0x1C17F10
	135 Move X1, X31
	136 Move X21, X0
	137 Call Object..ctor, X0
	138 Move [X21+24], X22
	139 Compare X20, 0
	140 JumpIfEqual {418}
	141 Move X8, [X20]
	142 Move X0, X21
	143 Move X1, [X8+64]
	144 Call 0x1C17E00
	145 Compare X0, 0
	146 JumpIfEqual {419}
	147 Move W8, [X20+24]
	148 Compare W8, 0
	149 JumpIfEqual {422}
	150 Move [X20+32], X21
	151 Move X8, 0x23AC000
	152 Move X8, [X8+1608]
	153 Move X0, [X8]
	154 Move W8, [X0+224]
	155 Compare W8, 0
	156 JumpIfNotEqual {158}
	157 Call 0x1C17DFC
	158 Move X0, X20
	159 Call App.ExecuteAction, X0
	160 Move TEMP, 0
	161 Not TEMP
	162 Move W8, TEMP
	163 Move [X19+16], W8
	164 Move [X19+56], X31
	165 Compare X20, 0
	166 JumpIfEqual {418}
	167 Move X0, X20
	168 Move X1, X31
	169 Call Command.get_hasFinalized, X0
	170 Move TEMP, X0
	171 And TEMP, TEMP, 1
	172 Compare TEMP, 1
	173 JumpIfNotEqual {353}
	174 Move X8, 0x23AC000
	175 Move X8, [X8+2416]
	176 Move X0, [X8]
	177 Move W8, [X0+224]
	178 Compare W8, 0
	179 JumpIfNotEqual {181}
	180 Call 0x1C17DFC
	181 Move X0, X31
	182 Call Application.get_isEditor
	183 Move TEMP, X0
	184 And TEMP, TEMP, 1
	185 Compare TEMP, 1
	186 JumpIfEqual {352}
	187 Move X23, [X19+40]
	188 Compare X23, 0
	189 JumpIfEqual {418}
	190 Move [X23+40], W31
	191 Move X20, 0x23AC000
	192 Move X20, [X20+1608]
	193 Move X0, [X20]
	194 Move W8, [X0+224]
	195 Compare W8, 0
	196 JumpIfNotEqual {198}
	197 Call 0x1C17DFC
	198 Move X21, 0x2691000
	199 Move W8, [X21+1927]
	200 Compare W8, 0
	201 JumpIfNotEqual {207}
	202 Move X0, 0x23AC000
	203 Move X0, [X0+1608]
	204 Call 0x1C17CF4
	205 Move W8, 1
	206 Move [X21+1927], W8
	207 Move X0, [X20]
	208 Move W8, [X0+224]
	209 Compare W8, 0
	210 JumpIfNotEqual {213}
	211 Call 0x1C17DFC
	212 Move X0, [X20]
	213 Move X8, [X0+184]
	214 Move X8, [X8]
	215 Compare X8, 0
	216 JumpIfEqual {418}
	217 Move X8, [X8+192]
	218 Compare X8, 0
	219 JumpIfEqual {418}
	220 Move X0, [X8+72]
	221 Compare X0, 0
	222 JumpIfEqual {418}
	223 Move X8, 0x23AD000
	224 Move X8, [X8+1608]
	225 Move X1, [X8]
	226 Call StateDictionary`2<Object, Object>.get_Values, X0
	227 Move X24, 0x23AD000
	228 Move X24, [X24+1480]
	229 Move X20, X0
	230 Move X8, [X24]
	231 Move W9, [X8+224]
	232 Compare W9, 0
	233 JumpIfNotEqual {237}
	234 Move X0, X8
	235 Call 0x1C17DFC
	236 Move X8, [X24]
	237 Move X9, [X8+184]
	238 Move X21, [X9+16]
	239 Compare X21, 0
	240 JumpIfNotEqual {263}
	241 Move W9, [X8+224]
	242 Compare W9, 0
	243 JumpIfNotEqual {247}
	244 Move X0, X8
	245 Call 0x1C17DFC
	246 Move X8, [X24]
	247 Move X9, 0x23AD000
	248 Move X8, [X8+184]
	249 Move X9, [X9+1592]
	250 Move X22, [X8]
	251 Move X0, [X9]
	252 Call 0x1C17F10
	253 Move X8, 0x23AD000
	254 Move X8, [X8+1632]
	255 Move X1, X22
	256 Move X3, X31
	257 Move X21, X0
	258 Move X2, [X8]
	259 Call Func`2<Object, Object>..ctor, X0, X1, X2
	260 Move X8, [X24]
	261 Move X8, [X8+184]
	262 Move [X8+16], X21
	263 Move X8, 0x23AD000
	264 Move X8, [X8+1576]
	265 Move X0, X20
	266 Move X1, X21
	267 Move X2, [X8]
	268 Call Enumerable.Select, X0, X1
	269 Move X8, 0x23AC000
	270 Move X8, [X8+3768]
	271 Move X1, [X8]
	272 Call Enumerable.ToArray, X0
	273 Move [X23+16], X0
	274 Move X8, [X19+40]
	275 Compare X8, 0
	276 JumpIfEqual {418}
	277 Move X0, [X8+16]
	278 Move X1, X31
	279 Move [X8+32], X31
	280 Call IAP.GetProductsBySKU, X0
	281 Move X8, 0x23AD000
	282 Move X22, [X19+40]
	283 Move X8, [X8+1560]
	284 Move X20, X0
	285 Move X8, [X8]
	286 Move X0, X8
	287 Call 0x1C17F10
	288 Move X8, 0x23AD000
	289 Move X8, [X8+1648]
	290 Move X1, X22
	291 Move X3, X31
	292 Move X21, X0
	293 Move X2, [X8]
	294 Call Callback<Object>..ctor, X0, X1, X2
	295 Compare X20, 0
	296 JumpIfEqual {418}
	297 Move X8, 0x23AD000
	298 Move X8, [X8+1600]
	299 Move X0, X20
	300 Move X1, X21
	301 Move X2, [X8]
	302 Call Request`1<Object>.OnComplete, X0, X1
	303 Move TEMP, 0
	304 Not TEMP
	305 Move W8, TEMP
	306 Move [X19+16], W8
	307 Move X8, [X19+40]
	308 Compare X8, 0
	309 JumpIfEqual {418}
	310 Move W8, [X8+40]
	311 Compare W8, 0
	312 JumpIfEqual {397}
	313 Move X8, 0x23AC000
	314 Move X8, [X8+2736]
	315 Move W1, 1
	316 Move X0, [X8]
	317 Call 0x1C17D6C
	318 Move X8, [X19+40]
	319 Compare X8, 0
	320 JumpIfEqual {418}
	321 Move X21, [X8+32]
	322 Move X8, 0x23AD000
	323 Move X8, [X8+1664]
	324 Move X19, X0
	325 Move X0, [X8]
	326 Call 0x1C17F10
	327 Move X1, X31
	328 Move X20, X0
	329 Call Object..ctor, X0
	330 Move [X20+24], X21
	331 Compare X19, 0
	332 JumpIfEqual {418}
	333 Move X8, [X19]
	334 Move X0, X20
	335 Move X1, [X8+64]
	336 Call 0x1C17E00
	337 Compare X0, 0
	338 JumpIfEqual {419}
	339 Move W8, [X19+24]
	340 Compare W8, 0
	341 JumpIfEqual {422}
	342 Move [X19+32], X20
	343 Move X8, 0x23AC000
	344 Move X8, [X8+1608]
	345 Move X0, [X8]
	346 Move W8, [X0+224]
	347 Compare W8, 0
	348 JumpIfNotEqual {350}
	349 Call 0x1C17DFC
	350 Move X0, X19
	351 Call App.ExecuteAction, X0
	352 Move W0, W31
	353 Move X22, 0x23AD000
	354 Move X22, [X22+1480]
	355 Move X0, [X22]
	356 Move W8, [X0+224]
	357 Compare W8, 0
	358 JumpIfNotEqual {361}
	359 Call 0x1C17DFC
	360 Move X0, [X22]
	361 Move X8, [X0+184]
	362 Move X20, [X8+8]
	363 Compare X20, 0
	364 JumpIfNotEqual {386}
	365 Move W8, [X0+224]
	366 Compare W8, 0
	367 JumpIfNotEqual {370}
	368 Call 0x1C17DFC
	369 Move X0, [X22]
	370 Move X9, 0x23AD000
	371 Move X8, [X0+184]
	372 Move X9, [X9+1624]
	373 Move X21, [X8]
	374 Move X0, [X9]
	375 Call 0x1C17F10
	376 Move X8, 0x23AD000
	377 Move X8, [X8+1640]
	378 Move X1, X21
	379 Move X3, X31
	380 Move X20, X0
	381 Move X2, [X8]
	382 Call TaskGenerator`1<Object>..ctor, X0, X1, X2
	383 Move X8, [X22]
	384 Move X8, [X8+184]
	385 Move [X8+8], X20
	386 Move X8, 0x23AD000
	387 Move X8, [X8+1568]
	388 Move X0, X20
	389 Move W1, W31
	390 Move X2, X31
	391 Move X3, [X8]
	392 Call 0x21A3BE8, X0, X1, X2
	393 Move [X19+56], X0
	394 Move [X19+24], X0
	395 Move W0, 1
	396 Move [X19+16], W0
	397 Move W8, 3
	398 Move [X19+24], X31
	399 Move W8, [X19+48]
	400 Move W0, W31
	401 Move X1, X31
	402 Add W8, W8, 10
	403 NotImplemented "Instruction SCVTF not yet implemented."
	404 Move [X19+48], W8
	405 Call Commands.WaitForSeconds, V0, X0
	406 Move [X19+24], X0
	407 Move W8, 2
	408 Move [X19+16], W8
	409 Move W0, 1
	410 Move X20, [X31+48]
	411 Move X19, [X31+56]
	412 Move X22, [X31+32]
	413 Move X21, [X31+40]
	414 Move X24, [X31+16]
	415 Move X23, [X31+24]
	416 Move X30, [X31+64]
	417 Return X0
	418 Call 0x1C17F20
	419 Call 0x1C17F44
	420 Move X1, X31
	421 Call 0x1C17DEC
	422 Call 0x1C17F28

Method: SpatialSys.CommandLib.Command System.Collections.Generic.IEnumerator<SpatialSys.CommandLib.Command>.get_Current()

Disassembly:
	0x01D4894C BL 0x1C16CF4
	0x01D48950 ADRP X0, 0x23AC000

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01D48954 LDR X0, [X0 + 0x718]
	0x01D48958 BL 0x1C16CF4
	0x01D4895C ADRP X0, 0x23AC000
	0x01D48960 LDR X0, [X0 + 0x730]
	0x01D48964 BL 0x1C16CF4
	0x01D48968 ADRP X0, 0x23AC000
	0x01D4896C LDR X0, [X0 + 0x738]
	0x01D48970 BL 0x1C16CF4
	0x01D48974 ADRP X0, 0x23AC000
	0x01D48978 LDR X0, [X0 + 0x740]
	0x01D4897C BL 0x1C16CF4
	0x01D48980 ADRP X0, 0x23AC000
	0x01D48984 LDR X0, [X0 + 0x778]
	0x01D48988 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x23AC000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x23AD000
	011 Move X0, [X0+1680]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01D4898C ADRP X0, 0x23AC000
	0x01D48990 LDR X0, [X0 + 0x780]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

