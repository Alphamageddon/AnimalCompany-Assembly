Type: AnimalCompany.RandomSFX

Method: UnityEngine.AudioClip GetRandomClip()

Disassembly:
	0x01DD2ABC MOV X1, X31
	0x01DD2AC0 BL 0x1EC4D00
	0x01DD2AC4 TBZ X0, 0x0, 0x1DD297C
	0x01DD2AC8 LDR X0, [X20 + 0x50]
	0x01DD2ACC MOV W1, W21
	0x01DD2AD0 MOV X2, X31
	0x01DD2AD4 BL 0x1ED9318
	0x01DD2AD8 LDR X8, [X22]
	0x01DD2ADC MOV X21, X0
	0x01DD2AE0 ADD X22, X0, 0x1C
	0x01DD2AE4 LDR W9, [X8 + 0xE0]
	0x01DD2AE8 CBNZ W9, 0x1DD2AF4
	0x01DD2AEC MOV X0, X8
	0x01DD2AF0 BL 0x1C16DFC
	0x01DD2AF4 ADRP X8, 0x2326000
	0x01DD2AF8 LDR X8, [X8 + 0x6A0]
	0x01DD2AFC MOV X1, X31
	0x01DD2B00 LDR X0, [X8]
	0x01DD2B04 BL 0x1E778CC
	0x01DD2B08 MOV X1, X31
	0x01DD2B0C BL 0x1E9C24C
	0x01DD2B10 STUR X0, [X21 + 0x1C]
	0x01DD2B14 ADD X0, X21, 0x24
	0x01DD2B18 MOV X1, X19
	0x01DD2B1C MOV X2, X31
	0x01DD2B20 BL 0x1E8DCF8
	0x01DD2B24 ADD W8, W0, 0xB
	0x01DD2B28 SXTW X8, W8
	0x01DD2B2C AND X8, X8, 0xFFFFFFFF
	0x01DD2B30 ADD X9, X22, X8
	0x01DD2B34 ADD W10, W8, 0xC
	0x01DD2B38 STP S11, S10, [X9]
	0x01DD2B3C STR S9, [X9 + 0x8]
	0x01DD2B40 STR S8, [X22, W10, SXTW]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2607000
	005 Move W8, [X20+3068]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x2327000
	012 Move X0, [X0+1512]
	013 Call 0x1C17CF4
	014 Move X0, 0x2327000
	015 Move X0, [X0+1520]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3068], W8
	019 Move X19, [X19+24]
	020 Compare X19, 0
	021 JumpIfEqual {43}
	022 Move W1, [X19+24]
	023 Compare W1, 0
	024 JumpIfEqual {38}
	025 Move X20, 0x2327000
	026 Move X20, [X20+1520]
	027 Move W0, W31
	028 Move X2, X31
	029 Call Random.Range, X0, X1
	030 Move X2, [X20]
	031 Move W1, W0
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Call List`1<Object>.get_Item, X0, X1
	037 Return X0
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X0, X31
	041 Move X30, [X31+32]
	042 Return X0
	043 Call 0x1C17F20

Method: System.Int32 GetRandomIndex()

Disassembly:
	0x01DD2B44 CBZ X21, 0x1DD2BF8
	0x01DD2B48 LDR W9, [X21 + 0x14]
	0x01DD2B4C UBFM W8, W8, 0x1D, 0x1C
	0x01DD2B50 ADD W8, W8, 0x80
	0x01DD2B54 STR W8, [X21 + 0xC]
	0x01DD2B58 ORR W8, W9, 0x4
	0x01DD2B5C MOV X0, X20
	0x01DD2B60 MOV X1, X21
	0x01DD2B64 MOV X2, X31
	0x01DD2B68 STR W8, [X21 + 0x14]
	0x01DD2B6C BL 0x1EA1E24
	0x01DD2B70 B 0x1DD297C
	0x01DD2B74 LDR X0, [X22]
	0x01DD2B78 LDR W8, [X0 + 0xE0]
	0x01DD2B7C CBNZ W8, 0x1DD2B84
	0x01DD2B80 BL 0x1C16DFC
	0x01DD2B84 ADRP X8, 0x2326000
	0x01DD2B88 LDR X8, [X8 + 0x6A0]
	0x01DD2B8C MOV W1, W21
	0x01DD2B90 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2607000
	005 Move W8, [X20+3069]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2327000
	012 Move X0, [X0+1512]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3069], W8
	016 Move X8, [X19+24]
	017 Compare X8, 0
	018 JumpIfEqual {27}
	019 Move W1, [X8+24]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move W0, W31
	023 Move X2, X31
	024 Move X30, [X31+32]
	025 Call Random.Range, X0, X1
	026 Return X0
	027 Call 0x1C17F20

Method: System.Void Play(UnityEngine.Vector3 position, System.Single volume, AnimalCompany.SFXPlayMode playMode = 1)

Disassembly:
	0x01DD1FA8 BL 0x1C16DEC
	0x01DD1FAC STP X30, X21, [X31 - 0x20]!
	0x01DD1FB0 STP X20, X19, [X31 + 0x10]
	0x01DD1FB4 ADRP X19, 0x2607000
	0x01DD1FB8 ADRP X20, 0x2322000
	0x01DD1FBC LDRB W8, [X19 + 0xC02]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Compare W1, 0
	003 JumpIfNotEqual {8}
	004 Call SFXManager.PlaySFX, X0, X1, V0
	005 Return 
	006 Call SFXManager.PlaySFXAsRPC, X0, X1, V0
	007 Return 
	008 Return 

Method: System.Void .ctor()

Disassembly:
	0x01DD2C64 MOVZ W8, 0x1
	0x01DD2C68 STRB W8, [X20 + 0xC0A]
	0x01DD2C6C LDR X0, [X21]
	0x01DD2C70 BL 0x1C16F10
	0x01DD2C74 MOV X1, X31
	0x01DD2C78 MOV X20, X0
	0x01DD2C7C BL 0x33BDD8C
	0x01DD2C80 STR W31, [X20 + 0x10]
	0x01DD2C84 STR X19, [X20 + 0x28]
	0x01DD2C88 STR S8, [X20 + 0x20]
	0x01DD2C8C MOV X0, X20
	0x01DD2C90 LDP X20, X19, [X31 + 0x20]
	0x01DD2C94 LDP X30, X21, [X31 + 0x10]
	0x01DD2C98 LDR V8, [X31], #0x30
	0x01DD2C9C RET
	0x01DD2CA0 STR X30, [X31 - 0x20]!
	0x01DD2CA4 STP X20, X19, [X31 + 0x10]
	0x01DD2CA8 MOV W19, W1
	0x01DD2CAC MOV X1, X31
	0x01DD2CB0 MOV X20, X0
	0x01DD2CB4 BL 0x33BDD8C
	0x01DD2CB8 STR W19, [X20 + 0x10]
	0x01DD2CBC LDP X20, X19, [X31 + 0x10]
	0x01DD2CC0 LDR X30, [X31], #0x20
	0x01DD2CC4 RET
	0x01DD2CC8 STR X30, [X31 - 0x40]!
	0x01DD2CCC STP X24, X23, [X31 + 0x10]
	0x01DD2CD0 STP X22, X21, [X31 + 0x20]
	0x01DD2CD4 STP X20, X19, [X31 + 0x30]
	0x01DD2CD8 ADRP X23, 0x2606000
	0x01DD2CDC ADRP X24, 0x2326000
	0x01DD2CE0 ADRP X20, 0x2326000
	0x01DD2CE4 ADRP X22, 0x2326000
	0x01DD2CE8 ADRP X21, 0x2326000
	0x01DD2CEC LDRB W8, [X23 + 0xC0B]
	0x01DD2CF0 LDR X24, [X24 + 0x6B8]
	0x01DD2CF4 LDR X20, [X20 + 0x6C0]
	0x01DD2CF8 LDR X22, [X22 + 0x6C8]
	0x01DD2CFC LDR X21, [X21 + 0x6D0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2607000
	007 Move X22, 0x2327000
	008 Move X20, 0x2327000
	009 Move W8, [X21+3070]
	010 Move X22, [X22+1544]
	011 Move X20, [X20+1552]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2327000
	018 Move X0, [X0+1552]
	019 Call 0x1C17CF4
	020 Move X0, 0x2327000
	021 Move X0, [X0+1544]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3070], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call List`1<Object>..ctor, X0
	030 Move X8, -19808256
	031 Move V0, [X8+2432]
	032 Move X9, 0x41F00000
	033 Move W8, 0x3F800000
	034 NotImplemented "Instruction MOVK not yet implemented."
	035 Move [X19+24], X20
	036 Move [X19+32], W8
	037 Move [X19+36], D0
	038 Move [X19+48], X9
	039 Move X0, X19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X1, X31
	045 Move X30, [X31+48]
	046 Call ScriptableObject..ctor, X0
	047 Return 

