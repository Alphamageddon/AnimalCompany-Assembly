Type: AnimalCompany.RandomSFX

Method: UnityEngine.AudioClip GetRandomClip()

Disassembly:
	0x01CCE944 ADRP X21, 0x2281000
	0x01CCE948 LDR X21, [X21 + 0x358]
	0x01CCE94C LDR X8, [X21]
	0x01CCE950 LDR X8, [X8 + 0xB8]
	0x01CCE954 LDR X8, [X8]
	0x01CCE958 CBZ X8, 0x1CCE9CC
	0x01CCE95C MOV X20, X0
	0x01CCE960 MOV X0, X8
	0x01CCE964 MOV X1, X31
	0x01CCE968 BL 0x3A9B0C0
	0x01CCE96C CBZ X0, 0x1CCE9CC
	0x01CCE970 MOV X1, X31
	0x01CCE974 BL 0x3A9D8EC
	0x01CCE978 CBZ X20, 0x1CCE9CC
	0x01CCE97C MOV X1, X0
	0x01CCE980 MOV X0, X20
	0x01CCE984 MOV X2, X31
	0x01CCE988 BL 0x3AA7DEC
	0x01CCE98C LDR X8, [X21]
	0x01CCE990 LDR X8, [X8 + 0xB8]
	0x01CCE994 LDR X8, [X8]
	0x01CCE998 CBZ X8, 0x1CCE9CC
	0x01CCE99C LDR X0, [X8 + 0x50]
	0x01CCE9A0 CBZ X0, 0x1CCE9CC
	0x01CCE9A4 ADRP X8, 0x2281000
	0x01CCE9A8 LDR X1, [X19 + 0x28]
	0x01CCE9AC LDR X8, [X8 + 0x808]
	0x01CCE9B0 LDR X2, [X8]
	0x01CCE9B4 BL 0x2368A00
	0x01CCE9B8 MOV W0, W31
	0x01CCE9BC LDP X20, X19, [X31 + 0x20]
	0x01CCE9C0 LDP X30, X21, [X31 + 0x10]
	0x01CCE9C4 LDR V8, [X31], #0x30
	0x01CCE9C8 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2556000
	005 Move W8, [X20+1447]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x2282000
	012 Move X0, [X0+2008]
	013 Call 0x1B6F7F0
	014 Move X0, 0x2282000
	015 Move X0, [X0+2016]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X20+1447], W8
	019 Move X19, [X19+24]
	020 Compare X19, 0
	021 JumpIfEqual {43}
	022 Move W1, [X19+24]
	023 Compare W1, 0
	024 JumpIfEqual {38}
	025 Move X20, 0x2282000
	026 Move X20, [X20+2016]
	027 Move W0, W31
	028 Move X2, X31
	029 Call Random.Range, X0, X1
	030 Move X2, [X20]
	031 Move W1, W0
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Call List`1<Object>.get_Item, X0, X1
	037 Return X0
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X0, X31
	041 Move X30, [X31+32]
	042 Return X0
	043 Call 0x1B6FA1C

Method: System.Void Play(UnityEngine.Vector3 position, System.Single volume, AnimalCompany.SFXPlayMode playMode = 1)

Disassembly:
	0x01CC45DC MOVZ W8, 0x2
	0x01CC45E0 STR X20, [X19 + 0x18]
	0x01CC45E4 STR W8, [X19 + 0x10]
	0x01CC45E8 B 0x1CC479C
	0x01CC45EC LDR X0, [X20 + 0x20]
	0x01CC45F0 CBZ X0, 0x1CC47D8

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Compare W1, 0
	003 JumpIfNotEqual {8}
	004 Call SFXManager.PlaySFX, X0, X1, V0
	005 Return 
	006 Call SFXManager.PlaySFXAsRPC, X0, X1, V0
	007 Return 
	008 Return 

Method: System.Void .ctor()

Disassembly:
	0x01CCEA9C B 0x3A9EEE4
	0x01CCEAA0 RET
	0x01CCEAA4 STR X30, [X31 - 0x30]!
	0x01CCEAA8 STP X22, X21, [X31 + 0x10]
	0x01CCEAAC STP X20, X19, [X31 + 0x20]
	0x01CCEAB0 ADRP X20, 0x2555000
	0x01CCEAB4 LDRB W8, [X20 + 0x5B6]
	0x01CCEAB8 MOV X19, X0
	0x01CCEABC TBNZ X8, 0x0, 0x1CCEAEC
	0x01CCEAC0 ADRP X0, 0x227F000
	0x01CCEAC4 LDR X0, [X0 + 0x9A0]
	0x01CCEAC8 BL 0x1B6E7F0
	0x01CCEACC ADRP X0, 0x2280000
	0x01CCEAD0 LDR X0, [X0 + 0x2E8]
	0x01CCEAD4 BL 0x1B6E7F0
	0x01CCEAD8 ADRP X0, 0x2281000
	0x01CCEADC LDR X0, [X0 + 0x890]
	0x01CCEAE0 BL 0x1B6E7F0
	0x01CCEAE4 MOVZ W8, 0x1
	0x01CCEAE8 STRB W8, [X20 + 0x5B6]
	0x01CCEAEC LDR W21, [X19 + 0x10]
	0x01CCEAF0 CMP W21, 0x1
	0x01CCEAF4 B.HI 0x1CCEB58
	0x01CCEAF8 ADRP X8, 0x227F000
	0x01CCEAFC LDR X8, [X8 + 0x9A0]
	0x01CCEB00 MOVN W9, 0x0
	0x01CCEB04 STR W9, [X19 + 0x10]
	0x01CCEB08 ADRP X22, 0x2281000
	0x01CCEB0C LDR X0, [X8]
	0x01CCEB10 ADRP X20, 0x2280000
	0x01CCEB14 LDR W8, [X0 + 0xE0]
	0x01CCEB18 LDR X22, [X22 + 0x890]
	0x01CCEB1C LDR X20, [X20 + 0x2E8]
	0x01CCEB20 CBNZ W8, 0x1CCEB28
	0x01CCEB24 BL 0x1B6E8F8
	0x01CCEB28 LDR X0, [X22]
	0x01CCEB2C BL 0x1CCEB70
	0x01CCEB30 LDR X0, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2556000
	007 Move X22, 0x2282000
	008 Move X20, 0x2282000
	009 Move W8, [X21+1448]
	010 Move X22, [X22+2040]
	011 Move X20, [X20+2048]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2282000
	018 Move X0, [X0+2048]
	019 Call 0x1B6F7F0
	020 Move X0, 0x2282000
	021 Move X0, [X0+2040]
	022 Call 0x1B6F7F0
	023 Move W8, 1
	024 Move [X21+1448], W8
	025 Move X0, [X22]
	026 Call 0x1B6FA0C
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call List`1<Object>..ctor, X0
	030 Move X8, -19005440
	031 Move V0, [X8+576]
	032 Move W8, 0x3F800000
	033 Move W9, 0x41F00000
	034 Move [X19+24], X20
	035 Move [X19+32], W8
	036 Move [X19+36], D0
	037 Move [X19+48], W9
	038 Move X0, X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X1, X31
	044 Move X30, [X31+48]
	045 Call ScriptableObject..ctor, X0
	046 Return 

