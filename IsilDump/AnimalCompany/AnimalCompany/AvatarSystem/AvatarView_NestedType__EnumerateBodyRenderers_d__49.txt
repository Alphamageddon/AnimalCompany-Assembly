Type: AnimalCompany.AvatarSystem.AvatarView/<EnumerateBodyRenderers>d__49

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01D65938 MOV X20, X0
	0x01D6593C LDR W9, [X8 + 0xE0]
	0x01D65940 CBNZ W9, 0x1D6594C
	0x01D65944 MOV X0, X8
	0x01D65948 BL 0x1C16DFC
	0x01D6594C MOV X0, X20
	0x01D65950 MOV X1, X31
	0x01D65954 MOV X2, X31
	0x01D65958 BL 0x3C354F8
	0x01D6595C TBZ X0, 0x0, 0x1D6599C
	0x01D65960 LDR X0, [X21]
	0x01D65964 LDR X19, [X19 + 0x28]
	0x01D65968 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X20+16], W19
	010 Call Environment.get_CurrentManagedThreadId
	011 Move [X20+32], W0
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01D6596C CBNZ W8, 0x1D65974

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01D65970 BL 0x1C16DFC
	0x01D65974 MOV X0, X31
	0x01D65978 BL 0x1DB1DCC
	0x01D6597C CBZ X0, 0x1D659A8
	0x01D65980 CBZ X19, 0x1D659A8
	0x01D65984 LDR V0, [X0 + 0x174]
	0x01D65988 MOV X0, X19
	0x01D6598C LDP X20, X19, [X31 + 0x10]
	0x01D65990 MOV X1, X31
	0x01D65994 LDP X30, X21, [X31], #0x20
	0x01D65998 B 0x1DC85EC
	0x01D6599C LDP X20, X19, [X31 + 0x10]
	0x01D659A0 LDP X30, X21, [X31], #0x20
	0x01D659A4 RET
	0x01D659A8 BL 0x1C16F20
	0x01D659AC STP D9, D8, [X31 - 0x20]!
	0x01D659B0 STR X30, [X31 + 0x10]
	0x01D659B4 MOV X0, X31
	0x01D659B8 BL 0x3C30A30
	0x01D659BC MOV X0, X31
	0x01D659C0 MOV V8.16B, V0.16B
	0x01D659C4 BL 0x3C30A30
	0x01D659C8 MOV X0, X31
	0x01D659CC MOV V9.16B, V0.16B
	0x01D659D0 BL 0x3C30A30
	0x01D659D4 LDR X30, [X31 + 0x10]
	0x01D659D8 FMOV S3, 1
	0x01D659DC MOV V2.16B, V0.16B
	0x01D659E0 MOV V0.16B, V8.16B
	0x01D659E4 MOV V1.16B, V9.16B
	0x01D659E8 LDP D9, D8, [X31], #0x20
	0x01D659EC RET
	0x01D659F0 MOV X1, X31
	0x01D659F4 B 0x3C36C30
	0x01D659F8 MOV X1, X31
	0x01D659FC B 0x33BDD8C
	0x01D65A00 SUB X31, X31, 0x150
	0x01D65A04 STP D15, D14, [X31 + 0xB0]
	0x01D65A08 STP D13, D12, [X31 + 0xC0]
	0x01D65A0C STP D11, D10, [X31 + 0xD0]
	0x01D65A10 STP D9, D8, [X31 + 0xE0]
	0x01D65A14 STP X29, X30, [X31 + 0xF0]
	0x01D65A18 STP X28, X27, [X31 + 0x100]
	0x01D65A1C STP X26, X25, [X31 + 0x110]
	0x01D65A20 STP X24, X23, [X31 + 0x120]
	0x01D65A24 STP X22, X21, [X31 + 0x130]
	0x01D65A28 STP X20, X19, [X31 + 0x140]
	0x01D65A2C ADRP X21, 0x2673000
	0x01D65A30 ADRP X24, 0x2390000
	0x01D65A34 LDRB W8, [X21 + 0x86E]
	0x01D65A38 LDR X24, [X24 + 0x9A8]
	0x01D65A3C MOV X19, X5
	0x01D65A40 MOV X29, X4
	0x01D65A44 MOV X22, X3
	0x01D65A48 MOV X28, X2
	0x01D65A4C MOV X23, X1
	0x01D65A50 MOV X20, X0
	0x01D65A54 TBNZ X8, 0x0, 0x1D65A90
	0x01D65A58 ADRP X0, 0x2390000
	0x01D65A5C LDR X0, [X0 + 0x9A8]
	0x01D65A60 BL 0x1C16CF4
	0x01D65A64 ADRP X0, 0x238F000
	0x01D65A68 LDR X0, [X0 + 0xE58]
	0x01D65A6C BL 0x1C16CF4
	0x01D65A70 ADRP X0, 0x238E000
	0x01D65A74 LDR X0, [X0 + 0x638]
	0x01D65A78 BL 0x1C16CF4
	0x01D65A7C ADRP X0, 0x2390000
	0x01D65A80 LDR X0, [X0 + 0x9B0]
	0x01D65A84 BL 0x1C16CF4
	0x01D65A88 MOVZ W8, 0x1
	0x01D65A8C STRB W8, [X21 + 0x86E]
	0x01D65A90 LDR X0, [X24]
	0x01D65A94 BL 0x1C16F10
	0x01D65A98 MOV X1, X31
	0x01D65A9C STR X0, [X31 + 0x20]
	0x01D65AA0 BL 0x33BDD8C
	0x01D65AA4 CBZ X19, 0x1D663E0
	0x01D65AA8 ADRP X21, 0x2390000
	0x01D65AAC LDR X21, [X21 + 0x9B0]
	0x01D65AB0 LDR W1, [X19 + 0x18]
	0x01D65AB4 ADRP X24, 0x238F000
	0x01D65AB8 LDR X0, [X21]
	0x01D65ABC LDR X24, [X24 + 0xE58]
	0x01D65AC0 BL 0x1C16D6C
	0x01D65AC4 LDR X8, [X24]
	0x01D65AC8 LDR W1, [X19 + 0x18]
	0x01D65ACC MOV X25, X0
	0x01D65AD0 MOV X0, X8
	0x01D65AD4 BL 0x1C16D6C
	0x01D65AD8 LDR X8, [X21]
	0x01D65ADC LDR W1, [X19 + 0x18]
	0x01D65AE0 MOV X26, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2674000
	006 Move W8, [X20+2148]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x238F000
	013 Move X0, [X0+1432]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2148], W8
	017 Move W8, [X19+16]
	018 Move X21, 0x238F000
	019 Move X21, [X21+1432]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Compare W8, 0
	023 JumpIfNotEqual {43}
	024 Move X8, [X19+40]
	025 Move TEMP, 0
	026 Not TEMP
	027 Move W9, TEMP
	028 Move [X19+16], W9
	029 Compare X8, 0
	030 JumpIfEqual {110}
	031 Move X8, [X8+104]
	032 Move W9, W31
	033 Move [X19+56], W31
	034 Move [X19+48], X8
	035 Move TEMP, 0
	036 Not TEMP
	037 Move W8, TEMP
	038 Move [X19+16], W8
	039 Move TEMP, 0
	040 Not TEMP
	041 Move W8, TEMP
	042 Move [X19+16], W8
	043 Move W0, W31
	044 Add X8, X8, W9
	045 Move X8, [X8+32]
	046 Move [X19+64], X8
	047 Compare X8, 0
	048 JumpIfEqual {110}
	049 Move X0, [X21]
	050 Move X20, [X8+40]
	051 Move W9, [X0+224]
	052 Compare W9, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X20
	056 Move X1, X31
	057 Move X2, X31
	058 Call Object.op_Inequality, X0, X1
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {98}
	063 Move X8, [X19+64]
	064 Compare X8, 0
	065 JumpIfEqual {110}
	066 Move X0, [X21]
	067 Move X20, [X8+32]
	068 Move W9, [X0+224]
	069 Compare W9, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X0, X20
	073 Move X1, X31
	074 Move X2, X31
	075 Call Object.op_Inequality, X0, X1
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {91}
	080 Move W9, [X19+56]
	081 Move X8, [X19+48]
	082 Move [X19+64], X31
	083 Add W9, W9, 1
	084 Move [X19+56], W9
	085 Compare X8, 0
	086 JumpIfEqual {110}
	087 Move W10, [X8+24]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move W0, W31
	090 Move [X19+48], X31
	091 Move X8, [X19+64]
	092 Compare X8, 0
	093 JumpIfEqual {110}
	094 Move X8, [X8+32]
	095 Move W9, 2
	096 Move [X19+16], W9
	097 Move W0, 1
	098 Move X8, [X19+64]
	099 Compare X8, 0
	100 JumpIfEqual {110}
	101 Move X8, [X8+40]
	102 Move W0, 1
	103 Move [X19+16], W0
	104 Move [X19+24], X8
	105 Move X20, [X31+16]
	106 Move X19, [X31+24]
	107 Move X30, [X31+32]
	108 Move X21, [X31+40]
	109 Return X0
	110 Call 0x1C17F20
	111 Call 0x1C17F28

Method: UnityEngine.Renderer System.Collections.Generic.IEnumerator<UnityEngine.Renderer>.get_Current()

Disassembly:
	0x01D65AE4 MOV X0, X8
	0x01D65AE8 BL 0x1C16D6C

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01D65AEC LDR X8, [X19 + 0x18]
	0x01D65AF0 MOV X27, X0
	0x01D65AF4 CMP W8, 0x1
	0x01D65AF8 B.LT 0x1D65B44
	0x01D65AFC MOV X21, X31
	0x01D65B00 AND X8, X8, 0x0
	0x01D65B04 ADD X24, X19, 0x28
	0x01D65B08 CMP X21, W8, UXTW
	0x01D65B0C B.CS 0x1D663DC
	0x01D65B10 LDP S0, S1, [X24 - 0x8]
	0x01D65B14 LDR V2, [X24]
	0x01D65B18 MOV X0, X20
	0x01D65B1C MOV X1, X31
	0x01D65B20 BL 0x3C28278

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x238F000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2391000
	011 Move X0, [X0+2168]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01D65B24 LDR W8, [X19 + 0x18]
	0x01D65B28 CMP X21, X8

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Collections.Generic.IEnumerator`1<UnityEngine.Renderer> System.Collections.Generic.IEnumerable<UnityEngine.Renderer>.GetEnumerator()

Disassembly:
	0x01D65B2C B.CS 0x1D663DC
	0x01D65B30 ADD X21, X21, 0x1
	0x01D65B34 STP S0, S1, [X24 - 0x8]
	0x01D65B38 STR S2, [X24], #0xC
	0x01D65B3C CMP X21, W8, SXTW
	0x01D65B40 B.LT 0x1D65B08
	0x01D65B44 STR X28, [X31 + 0x18]
	0x01D65B48 CBZ X27, 0x1D663E0
	0x01D65B4C ADRP X8, 0x238E000
	0x01D65B50 LDR X8, [X8 + 0x638]
	0x01D65B54 LDR W1, [X27 + 0x18]
	0x01D65B58 LDR X0, [X8]
	0x01D65B5C BL 0x1C16D6C
	0x01D65B60 CBZ X0, 0x1D663E0
	0x01D65B64 LDR W8, [X0 + 0x18]
	0x01D65B68 MOV X28, X0
	0x01D65B6C STR X29, [X31 + 0x10]
	0x01D65B70 UBFM X9, X8, 0x20, 0x1F
	0x01D65B74 CMP X9, 0x1
	0x01D65B78 B.LT 0x1D65BA4
	0x01D65B7C MOV X9, X31
	0x01D65B80 SXTW X10, W8
	0x01D65B84 ADD X11, X28, 0x20
	0x01D65B88 MOVN W12, 0x80800000
	0x01D65B8C CMP X9, X8
	0x01D65B90 B.CS 0x1D663DC
	0x01D65B94 STR W12, [X11, X9, LSL #2]
	0x01D65B98 ADD X9, X9, 0x1
	0x01D65B9C CMP X10, X9
	0x01D65BA0 B.NE 0x1D65B8C
	0x01D65BA4 CBZ X22, 0x1D663E0
	0x01D65BA8 LDR W8, [X22 + 0x18]
	0x01D65BAC CMP W8, 0x1
	0x01D65BB0 B.LT 0x1D66380
	0x01D65BB4 ADD X10, X19, 0x28
	0x01D65BB8 ADD X9, X25, 0x28
	0x01D65BBC STP X9, X10, [X31 + 0x30]
	0x01D65BC0 ADD X9, X27, 0x28
	0x01D65BC4 STR X9, [X31 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2674000
	005 Move W8, [X20+2149]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2391000
	012 Move X0, [X0+2176]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2149], W8
	016 Move W8, [X19+16]
	017 Add W31, W8, 2
	018 Move W20, [X19+32]
	019 Move X0, X31
	020 Call Environment.get_CurrentManagedThreadId
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move [X19+16], W31
	023 Move X8, 0x2391000
	024 Move X8, [X8+2176]
	025 Move X0, [X8]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X20, X0
	029 Call Object..ctor, X0
	030 Move X0, X31
	031 Move [X20+16], W31
	032 Call Environment.get_CurrentManagedThreadId
	033 Move [X20+32], W0
	034 Move X8, [X19+40]
	035 Move X19, X20
	036 Move [X20+40], X8
	037 Move X0, X19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x01D65BC8 ADRP X29, 0x238E000

ISIL:
	001 Call <EnumerateBodyRenderers>d__49.System.Collections.Generic.IEnumerable<UnityEngine.Renderer>.GetEnumerator, X0
	002 Return X0

