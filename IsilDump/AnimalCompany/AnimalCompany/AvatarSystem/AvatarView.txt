Type: AnimalCompany.AvatarSystem.AvatarView

Method: System.Collections.Generic.IEnumerable`1<UnityEngine.Material> get_materials()

Disassembly:
	0x01E1F71C LDR X3, [X27]

ISIL:
No ISIL was generated
Method: System.Collections.Generic.IEnumerable`1<UnityEngine.Renderer> get_bodyRenderers()

Disassembly:
	0x01E1F788 LDR W8, [X0 + 0xE0]

ISIL:
No ISIL was generated
Method: UnityEngine.SkinnedMeshRenderer get_headRenderer()

Disassembly:
	0x01E1F7F4 LDRB W8, [X31 + 0x18]
	0x01E1F7F8 AND W8, W20, W8, 0x0
	0x01E1F7FC TBZ X8, 0x0, 0x1E1F8FC
	0x01E1F800 TBZ X20, 0x0, 0x1E1F8EC
	0x01E1F804 LDR X21, [X19 + 0x80]
	0x01E1F808 CBNZ X21, 0x1E1F838
	0x01E1F80C ADRP X8, 0x22D5000
	0x01E1F810 LDR X8, [X8 + 0xE08]
	0x01E1F814 LDR X0, [X8]
	0x01E1F818 BL 0x1C16F10
	0x01E1F81C ADRP X8, 0x22DB000
	0x01E1F820 LDR X8, [X8 + 0x688]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+104]
	003 Compare X8, 0
	004 JumpIfEqual {14}
	005 Move W9, [X8+24]
	006 Compare W9, 0
	007 JumpIfEqual {15}
	008 Move X8, [X8+32]
	009 Compare X8, 0
	010 JumpIfEqual {14}
	011 Move X0, [X8+40]
	012 Move X30, [X31+16]
	013 Return X0
	014 Call 0x1C17F20
	015 Call 0x1C17F28

Method: UnityEngine.Transform get_eyeLeft()

Disassembly:
	0x01E1F824 MOV X21, X0
	0x01E1F828 LDR X1, [X8]
	0x01E1F82C BL 0x2DA9EF4
	0x01E1F830 STR X21, [X19 + 0x80]
	0x01E1F834 CBZ X21, 0x1E1F924
	0x01E1F838 ADRP X8, 0x22DB000
	0x01E1F83C LDR X8, [X8 + 0x678]
	0x01E1F840 MOV X0, X21
	0x01E1F844 LDR X1, [X8]
	0x01E1F848 BL 0x2DAA53C
	0x01E1F84C LDR X22, [X19 + 0x70]
	0x01E1F850 CBZ X22, 0x1E1F924
	0x01E1F854 LDR W8, [X22 + 0x18]
	0x01E1F858 CMP W8, 0x1
	0x01E1F85C B.LT 0x1E1F8EC
	0x01E1F860 ADRP X24, 0x22D4000
	0x01E1F864 ADRP X25, 0x22DB000
	0x01E1F868 LDR X24, [X24 + 0x598]
	0x01E1F86C LDR X25, [X25 + 0x680]
	0x01E1F870 MOV W23, W31
	0x01E1F874 CMP W23, W8
	0x01E1F878 B.CS 0x1E1F928
	0x01E1F87C ADD X8, X22, W23, 0x3, SXTW
	0x01E1F880 LDR X26, [X8 + 0x20]
	0x01E1F884 CBZ X26, 0x1E1F924
	0x01E1F888 LDR X0, [X24]
	0x01E1F88C LDR X21, [X26 + 0x20]
	0x01E1F890 LDR W8, [X0 + 0xE0]
	0x01E1F894 CBNZ W8, 0x1E1F89C
	0x01E1F898 BL 0x1C16DFC
	0x01E1F89C MOV X0, X21
	0x01E1F8A0 MOV X1, X31
	0x01E1F8A4 MOV X2, X31
	0x01E1F8A8 BL 0x3C354F8
	0x01E1F8AC TBZ X0, 0x0, 0x1E1F8DC
	0x01E1F8B0 LDR X8, [X26 + 0x20]
	0x01E1F8B4 CBZ X8, 0x1E1F924
	0x01E1F8B8 LDRB W9, [X8 + 0x20]
	0x01E1F8BC CBZ W9, 0x1E1F8DC
	0x01E1F8C0 LDR X8, [X8 + 0x60]
	0x01E1F8C4 CBZ X8, 0x1E1F924
	0x01E1F8C8 LDR X0, [X19 + 0x80]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x25BA000
	005 Move W8, [X20+3621]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x22D5000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3621], W8
	016 Move X8, [X19+104]
	017 Compare X8, 0
	018 JumpIfEqual {54}
	019 Move W9, [X8+24]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X20, [X8+40]
	022 Compare X20, 0
	023 JumpIfEqual {54}
	024 Move X8, 0x22D5000
	025 Move X8, [X8+1432]
	026 Move X19, [X20+24]
	027 Move X0, [X8]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X19
	033 Move X1, X31
	034 Move X2, X31
	035 Call Object.op_Inequality, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {49}
	040 Move X0, [X20+24]
	041 Compare X0, 0
	042 JumpIfEqual {54}
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X1, X31
	046 Move X30, [X31+32]
	047 Call GameObject.get_transform, X0
	048 Return X0
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X0, X31
	052 Move X30, [X31+32]
	053 Return X0
	054 Call 0x1C17F20
	055 Call 0x1C17F28

Method: UnityEngine.Transform get_eyeRight()

Disassembly:
	0x01E1F8CC CBZ X0, 0x1E1F924
	0x01E1F8D0 LDR X1, [X8 + 0x30]
	0x01E1F8D4 LDR X2, [X25]
	0x01E1F8D8 BL 0x2DAB04C
	0x01E1F8DC LDR W8, [X22 + 0x18]
	0x01E1F8E0 ADD W23, W23, 0x1
	0x01E1F8E4 CMP W23, W8
	0x01E1F8E8 B.LT 0x1E1F874
	0x01E1F8EC LDR X2, [X19 + 0x80]
	0x01E1F8F0 AND W1, W20, 0x1
	0x01E1F8F4 MOV X0, X19
	0x01E1F8F8 BL 0x1E223E8
	0x01E1F8FC LDRB W1, [X19 + 0x44]
	0x01E1F900 MOV X0, X19
	0x01E1F904 BL 0x1E1EB4C
	0x01E1F908 LDP X20, X19, [X31 + 0x60]
	0x01E1F90C LDP X22, X21, [X31 + 0x50]
	0x01E1F910 LDP X24, X23, [X31 + 0x40]
	0x01E1F914 LDP X26, X25, [X31 + 0x30]
	0x01E1F918 LDP X30, X27, [X31 + 0x20]
	0x01E1F91C ADD X31, X31, 0x70
	0x01E1F920 RET
	0x01E1F924 BL 0x1C16F20
	0x01E1F928 BL 0x1C16F28
	0x01E1F92C STP X29, X30, [X31 - 0x60]!
	0x01E1F930 STP X28, X27, [X31 + 0x10]
	0x01E1F934 STP X26, X25, [X31 + 0x20]
	0x01E1F938 STP X24, X23, [X31 + 0x30]
	0x01E1F93C STP X22, X21, [X31 + 0x40]
	0x01E1F940 STP X20, X19, [X31 + 0x50]
	0x01E1F944 ADRP X20, 0x25B9000
	0x01E1F948 LDRB W8, [X20 + 0xE2D]
	0x01E1F94C MOV X19, X0
	0x01E1F950 TBNZ X8, 0x0, 0x1E1FA4C
	0x01E1F954 ADRP X0, 0x22DB000
	0x01E1F958 LDR X0, [X0 + 0x6B8]
	0x01E1F95C BL 0x1C16CF4
	0x01E1F960 ADRP X0, 0x22DB000
	0x01E1F964 LDR X0, [X0 + 0x6C0]
	0x01E1F968 BL 0x1C16CF4
	0x01E1F96C ADRP X0, 0x22DB000
	0x01E1F970 LDR X0, [X0 + 0x6C8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x25BA000
	005 Move W8, [X20+3622]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x22D5000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3622], W8
	016 Move X8, [X19+104]
	017 Compare X8, 0
	018 JumpIfEqual {54}
	019 Move W9, [X8+24]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X20, [X8+48]
	022 Compare X20, 0
	023 JumpIfEqual {54}
	024 Move X8, 0x22D5000
	025 Move X8, [X8+1432]
	026 Move X19, [X20+24]
	027 Move X0, [X8]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X19
	033 Move X1, X31
	034 Move X2, X31
	035 Call Object.op_Inequality, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {49}
	040 Move X0, [X20+24]
	041 Compare X0, 0
	042 JumpIfEqual {54}
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X1, X31
	046 Move X30, [X31+32]
	047 Call GameObject.get_transform, X0
	048 Return X0
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X0, X31
	052 Move X30, [X31+32]
	053 Return X0
	054 Call 0x1C17F20
	055 Call 0x1C17F28

Method: UnityEngine.Material get_eyeLeftMaterial()

Disassembly:
	0x01E1F974 BL 0x1C16CF4
	0x01E1F978 ADRP X0, 0x22DB000
	0x01E1F97C LDR X0, [X0 + 0x6D0]
	0x01E1F980 BL 0x1C16CF4
	0x01E1F984 ADRP X0, 0x22DB000
	0x01E1F988 LDR X0, [X0 + 0x6D8]
	0x01E1F98C BL 0x1C16CF4
	0x01E1F990 ADRP X0, 0x22DB000
	0x01E1F994 LDR X0, [X0 + 0x6E0]
	0x01E1F998 BL 0x1C16CF4
	0x01E1F99C ADRP X0, 0x22DB000
	0x01E1F9A0 LDR X0, [X0 + 0x6E8]
	0x01E1F9A4 BL 0x1C16CF4
	0x01E1F9A8 ADRP X0, 0x22D4000
	0x01E1F9AC LDR X0, [X0 + 0xDF8]
	0x01E1F9B0 BL 0x1C16CF4
	0x01E1F9B4 ADRP X0, 0x22DB000
	0x01E1F9B8 LDR X0, [X0 + 0x6F0]
	0x01E1F9BC BL 0x1C16CF4
	0x01E1F9C0 ADRP X0, 0x22DB000
	0x01E1F9C4 LDR X0, [X0 + 0x6F8]
	0x01E1F9C8 BL 0x1C16CF4
	0x01E1F9CC ADRP X0, 0x22D4000
	0x01E1F9D0 LDR X0, [X0 + 0xA58]
	0x01E1F9D4 BL 0x1C16CF4
	0x01E1F9D8 ADRP X0, 0x22D8000
	0x01E1F9DC LDR X0, [X0 + 0xCA0]
	0x01E1F9E0 BL 0x1C16CF4
	0x01E1F9E4 ADRP X0, 0x22DB000
	0x01E1F9E8 LDR X0, [X0 + 0x700]
	0x01E1F9EC BL 0x1C16CF4
	0x01E1F9F0 ADRP X0, 0x22DB000
	0x01E1F9F4 LDR X0, [X0 + 0x708]
	0x01E1F9F8 BL 0x1C16CF4
	0x01E1F9FC ADRP X0, 0x22D4000
	0x01E1FA00 LDR X0, [X0 + 0x6C0]
	0x01E1FA04 BL 0x1C16CF4
	0x01E1FA08 ADRP X0, 0x22D6000
	0x01E1FA0C LDR X0, [X0 + 0x9B0]
	0x01E1FA10 BL 0x1C16CF4
	0x01E1FA14 ADRP X0, 0x22DB000
	0x01E1FA18 LDR X0, [X0 + 0x710]
	0x01E1FA1C BL 0x1C16CF4
	0x01E1FA20 ADRP X0, 0x22DB000
	0x01E1FA24 LDR X0, [X0 + 0x718]
	0x01E1FA28 BL 0x1C16CF4
	0x01E1FA2C ADRP X0, 0x22DB000
	0x01E1FA30 LDR X0, [X0 + 0x720]
	0x01E1FA34 BL 0x1C16CF4
	0x01E1FA38 ADRP X0, 0x22DB000
	0x01E1FA3C LDR X0, [X0 + 0x728]
	0x01E1FA40 BL 0x1C16CF4
	0x01E1FA44 MOVZ W8, 0x1
	0x01E1FA48 STRB W8, [X20 + 0xE2D]
	0x01E1FA4C LDR X8, [X19 + 0x28]
	0x01E1FA50 CBZ X8, 0x1E200AC
	0x01E1FA54 LDR X8, [X8 + 0x20]
	0x01E1FA58 CBZ X8, 0x1E200AC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x25BA000
	005 Move W8, [X20+3623]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x22DC000
	012 Move X0, [X0+1520]
	013 Call 0x1C17CF4
	014 Move X0, 0x22D6000
	015 Move X0, [X0+1136]
	016 Call 0x1C17CF4
	017 Move X0, 0x22D8000
	018 Move X0, [X0+3832]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3623], W8
	022 Move X8, [X19+104]
	023 Compare X8, 0
	024 JumpIfEqual {66}
	025 Move W9, [X8+24]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, [X8+40]
	028 Compare X8, 0
	029 JumpIfEqual {61}
	030 Move X8, [X8+48]
	031 Compare X8, 0
	032 JumpIfEqual {61}
	033 Move [X31+8], X31
	034 Move X9, 0x22D6000
	035 Move X9, [X9+1136]
	036 Move W1, [X8+24]
	037 Add X0, X31, 8
	038 Move X2, [X9]
	039 Call Nullable`1<Int32>..ctor, X0, X1
	040 Move W8, [X31+8]
	041 Move X0, X31
	042 Compare W8, 0
	043 JumpIfEqual {62}
	044 Move W8, [X31+12]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X8, [X19+104]
	047 Compare X8, 0
	048 JumpIfEqual {66}
	049 Move W9, [X8+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X8, [X8+40]
	052 Compare X8, 0
	053 JumpIfEqual {66}
	054 Move X8, [X8+48]
	055 Compare X8, 0
	056 JumpIfEqual {66}
	057 Move W9, [X8+24]
	058 Compare W9, 0
	059 JumpIfEqual {67}
	060 Move X0, [X8+32]
	061 Move X0, X31
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X30, [X31+32]
	065 Return X0
	066 Call 0x1C17F20
	067 Call 0x1C17F28

Method: UnityEngine.Material get_eyeRightMaterial()

Disassembly:
	0x01E1FA5C ADRP X9, 0x22DB000
	0x01E1FA60 LDR X9, [X9 + 0x6D0]
	0x01E1FA64 LDR W1, [X8 + 0x18]
	0x01E1FA68 LDR X0, [X9]
	0x01E1FA6C BL 0x1C16D6C
	0x01E1FA70 LDR X8, [X19 + 0x28]
	0x01E1FA74 STR X0, [X19 + 0x50]
	0x01E1FA78 CBZ X8, 0x1E200AC
	0x01E1FA7C ADRP X26, 0x22DB000
	0x01E1FA80 ADRP X22, 0x22D6000
	0x01E1FA84 ADRP X29, 0x22D4000
	0x01E1FA88 ADRP X25, 0x22DB000
	0x01E1FA8C ADRP X28, 0x22DB000
	0x01E1FA90 ADRP X23, 0x22DB000
	0x01E1FA94 LDR X26, [X26 + 0x6D8]
	0x01E1FA98 LDR X22, [X22 + 0x9B0]
	0x01E1FA9C LDR X29, [X29 + 0xA58]
	0x01E1FAA0 LDR X25, [X25 + 0x720]
	0x01E1FAA4 LDR X28, [X28 + 0x6E8]
	0x01E1FAA8 LDR X23, [X23 + 0x6C0]
	0x01E1FAAC MOVZ W21, 0x4
	0x01E1FAB0 LDR X8, [X8 + 0x20]
	0x01E1FAB4 CBZ X8, 0x1E200AC
	0x01E1FAB8 LDRSW X8, [X8 + 0x18]
	0x01E1FABC SUB X24, X21, 0x4
	0x01E1FAC0 CMP X24, X8
	0x01E1FAC4 B.GE 0x1E1FB90
	0x01E1FAC8 LDR X0, [X26]
	0x01E1FACC LDR X27, [X19 + 0x50]
	0x01E1FAD0 BL 0x1C16F10
	0x01E1FAD4 MOV X1, X31
	0x01E1FAD8 MOV X20, X0
	0x01E1FADC BL 0x1D64F08
	0x01E1FAE0 CBZ X20, 0x1E200AC
	0x01E1FAE4 ADD X8, X24, 0x1
	0x01E1FAE8 STR W8, [X20 + 0x10]
	0x01E1FAEC LDR X9, [X19 + 0x28]
	0x01E1FAF0 CBZ X9, 0x1E200AC
	0x01E1FAF4 LDR X9, [X9 + 0x20]
	0x01E1FAF8 CBZ X9, 0x1E200AC
	0x01E1FAFC LDR W10, [X9 + 0x18]
	0x01E1FB00 SUB X24, X8, 0x1
	0x01E1FB04 CMP X24, X10
	0x01E1FB08 B.CS 0x1E200D4
	0x01E1FB0C LDR X0, [X9, X21, LSL #3]
	0x01E1FB10 CBZ X0, 0x1E200AC
	0x01E1FB14 MOV X1, X31
	0x01E1FB18 BL 0x3C3F58C
	0x01E1FB1C STP S0, S1, [X20 + 0x14]
	0x01E1FB20 STR S2, [X20 + 0x1C]
	0x01E1FB24 LDR X8, [X19 + 0x28]
	0x01E1FB28 CBZ X8, 0x1E200AC
	0x01E1FB2C LDR X8, [X8 + 0x20]
	0x01E1FB30 CBZ X8, 0x1E200AC
	0x01E1FB34 LDR W9, [X8 + 0x18]
	0x01E1FB38 CMP X24, X9
	0x01E1FB3C B.CS 0x1E200D4
	0x01E1FB40 LDR X0, [X8, X21, LSL #3]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x25BA000
	005 Move W8, [X20+3624]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x22DC000
	012 Move X0, [X0+1520]
	013 Call 0x1C17CF4
	014 Move X0, 0x22D6000
	015 Move X0, [X0+1136]
	016 Call 0x1C17CF4
	017 Move X0, 0x22D8000
	018 Move X0, [X0+3832]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3624], W8
	022 Move X8, [X19+104]
	023 Compare X8, 0
	024 JumpIfEqual {66}
	025 Move W9, [X8+24]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, [X8+48]
	028 Compare X8, 0
	029 JumpIfEqual {61}
	030 Move X8, [X8+48]
	031 Compare X8, 0
	032 JumpIfEqual {61}
	033 Move [X31+8], X31
	034 Move X9, 0x22D6000
	035 Move X9, [X9+1136]
	036 Move W1, [X8+24]
	037 Add X0, X31, 8
	038 Move X2, [X9]
	039 Call Nullable`1<Int32>..ctor, X0, X1
	040 Move W8, [X31+8]
	041 Move X0, X31
	042 Compare W8, 0
	043 JumpIfEqual {62}
	044 Move W8, [X31+12]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X8, [X19+104]
	047 Compare X8, 0
	048 JumpIfEqual {66}
	049 Move W9, [X8+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X8, [X8+48]
	052 Compare X8, 0
	053 JumpIfEqual {66}
	054 Move X8, [X8+48]
	055 Compare X8, 0
	056 JumpIfEqual {66}
	057 Move W9, [X8+24]
	058 Compare W9, 0
	059 JumpIfEqual {67}
	060 Move X0, [X8+32]
	061 Move X0, X31
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X30, [X31+32]
	065 Return X0
	066 Call 0x1C17F20
	067 Call 0x1C17F28

Method: AnimalCompany.AvatarSystem.AvatarArmature get_armature()

Disassembly:
	0x01E1FB44 CBZ X0, 0x1E200AC
	0x01E1FB48 MOV X1, X31

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void SetIsLocalAvatar(System.Boolean isLocalAvatar)

Disassembly:
	0x01E1FB4C BL 0x3C3DEB4
	0x01E1FB50 STP S0, S1, [X20 + 0x20]
	0x01E1FB54 STP S2, S3, [X20 + 0x28]
	0x01E1FB58 CBZ X27, 0x1E200AC
	0x01E1FB5C LDR X8, [X27]
	0x01E1FB60 MOV X0, X20
	0x01E1FB64 LDR X1, [X8 + 0x40]
	0x01E1FB68 BL 0x1C16E00
	0x01E1FB6C CBZ X0, 0x1E200D8
	0x01E1FB70 LDR W8, [X27 + 0x18]
	0x01E1FB74 CMP X24, X8
	0x01E1FB78 B.CS 0x1E200D4
	0x01E1FB7C STR X20, [X27, X21, LSL #3]
	0x01E1FB80 LDR X8, [X19 + 0x28]
	0x01E1FB84 ADD X21, X21, 0x1
	0x01E1FB88 CBNZ X8, 0x1E1FAB0
	0x01E1FB8C B 0x1E200AC
	0x01E1FB90 LDR X8, [X19 + 0x20]
	0x01E1FB94 CBZ X8, 0x1E200AC
	0x01E1FB98 LDR X8, [X8 + 0x18]
	0x01E1FB9C CBZ X8, 0x1E200AC
	0x01E1FBA0 LDR X0, [X22]
	0x01E1FBA4 LDR W1, [X8 + 0x18]
	0x01E1FBA8 BL 0x1C16D6C
	0x01E1FBAC LDR X8, [X19 + 0x20]
	0x01E1FBB0 STR X0, [X19 + 0x58]
	0x01E1FBB4 CBZ X8, 0x1E200AC
	0x01E1FBB8 MOV X1, X0
	0x01E1FBBC LDR X0, [X8 + 0x18]
	0x01E1FBC0 CBZ X0, 0x1E200AC
	0x01E1FBC4 LDR W2, [X0 + 0x18]
	0x01E1FBC8 MOV X3, X31
	0x01E1FBCC BL 0x33A0C7C
	0x01E1FBD0 LDRB W8, [X19 + 0x30]
	0x01E1FBD4 CBZ W8, 0x1E1FDBC
	0x01E1FBD8 ADRP X8, 0x22DB000
	0x01E1FBDC LDR X8, [X8 + 0x700]
	0x01E1FBE0 LDR X0, [X8]
	0x01E1FBE4 BL 0x1C16F10
	0x01E1FBE8 MOV X1, X31
	0x01E1FBEC MOV X20, X0
	0x01E1FBF0 BL 0x3C17028
	0x01E1FBF4 STR X20, [X19 + 0x48]
	0x01E1FBF8 CBZ X20, 0x1E200AC
	0x01E1FBFC ADRP X8, 0x22DB000
	0x01E1FC00 LDR X8, [X8 + 0x728]
	0x01E1FC04 MOV X0, X20
	0x01E1FC08 MOV X2, X31
	0x01E1FC0C LDR X1, [X8]
	0x01E1FC10 BL 0x3C38A84
	0x01E1FC14 LDR X0, [X19 + 0x48]
	0x01E1FC18 CBZ X0, 0x1E200AC
	0x01E1FC1C LDR X1, [X19 + 0x58]
	0x01E1FC20 MOV X2, X31
	0x01E1FC24 BL 0x3C17F08
	0x01E1FC28 LDR X0, [X19 + 0x48]
	0x01E1FC2C CBZ X0, 0x1E200AC
	0x01E1FC30 MOV W1, W31
	0x01E1FC34 MOV X2, X31
	0x01E1FC38 BL 0x3C170A8
	0x01E1FC3C LDR X8, [X19 + 0x20]
	0x01E1FC40 CBZ X8, 0x1E200AC
	0x01E1FC44 LDR X0, [X19 + 0x48]
	0x01E1FC48 CBZ X0, 0x1E200AC
	0x01E1FC4C LDR X1, [X8 + 0x20]
	0x01E1FC50 MOV W2, W31
	0x01E1FC54 MOV W3, W31
	0x01E1FC58 MOV X4, X31
	0x01E1FC5C BL 0x3C19784
	0x01E1FC60 LDR X0, [X19 + 0x48]
	0x01E1FC64 CBZ X0, 0x1E200AC
	0x01E1FC68 MOV X1, X31
	0x01E1FC6C BL 0x3C19CD4
	0x01E1FC70 LDR X0, [X19 + 0x48]
	0x01E1FC74 CBZ X0, 0x1E200AC
	0x01E1FC78 MOV W1, W31
	0x01E1FC7C MOV X2, X31
	0x01E1FC80 BL 0x3C1A03C
	0x01E1FC84 LDR X0, [X29]
	0x01E1FC88 BL 0x1C16F10
	0x01E1FC8C ADRP X8, 0x22DB000
	0x01E1FC90 LDR X8, [X8 + 0x710]
	0x01E1FC94 MOV X2, X31
	0x01E1FC98 MOV X20, X0
	0x01E1FC9C LDR X1, [X8]
	0x01E1FCA0 BL 0x3C35934
	0x01E1FCA4 CBZ X20, 0x1E200AC
	0x01E1FCA8 MOV X0, X20
	0x01E1FCAC MOV X1, X31
	0x01E1FCB0 BL 0x3C356F8
	0x01E1FCB4 MOV X21, X0
	0x01E1FCB8 MOV X0, X19
	0x01E1FCBC MOV X1, X31
	0x01E1FCC0 BL 0x3C32E90
	0x01E1FCC4 CBZ X21, 0x1E200AC
	0x01E1FCC8 MOV X1, X0
	0x01E1FCCC MOV X0, X21
	0x01E1FCD0 MOV W2, W31
	0x01E1FCD4 MOV X3, X31
	0x01E1FCD8 BL 0x3C3FEB8
	0x01E1FCDC MOV X0, X20
	0x01E1FCE0 MOV X1, X31
	0x01E1FCE4 BL 0x3C356F8
	0x01E1FCE8 CBZ X0, 0x1E200AC
	0x01E1FCEC ADRP X8, 0xFFFFFFFFFECCB000
	0x01E1FCF0 LDR V0, [X8 + 0x18]
	0x01E1FCF4 FMOV S1, W31
	0x01E1FCF8 FMOV S2, W31
	0x01E1FCFC MOV X1, X31
	0x01E1FD00 BL 0x3C3F888
	0x01E1FD04 ADRP X8, 0x22DB000
	0x01E1FD08 LDR X8, [X8 + 0x6F0]
	0x01E1FD0C MOV X0, X20
	0x01E1FD10 LDR X1, [X8]
	0x01E1FD14 BL 0x21E51FC
	0x01E1FD18 CBZ X0, 0x1E200AC
	0x01E1FD1C LDR X1, [X19 + 0x48]
	0x01E1FD20 MOV X2, X31
	0x01E1FD24 BL 0x3C16D40
	0x01E1FD28 ADRP X8, 0x22DB000
	0x01E1FD2C LDR X8, [X8 + 0x6F8]
	0x01E1FD30 MOV X0, X20
	0x01E1FD34 LDR X1, [X8]
	0x01E1FD38 BL 0x21E51FC
	0x01E1FD3C ADRP X8, 0x22DB000
	0x01E1FD40 LDR X8, [X8 + 0x718]
	0x01E1FD44 MOV X20, X0
	0x01E1FD48 MOV X1, X31
	0x01E1FD4C LDR X8, [X8]
	0x01E1FD50 MOV X0, X8

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x25BA000
	011 Move W8, [X21+3625]
	012 Move X19, X0
	013 And W20, W1, 1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x22D5000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+3625], W8
	023 Move X22, [X19+104]
	024 Move [X19+68], W20
	025 Compare X22, 0
	026 JumpIfEqual {84}
	027 Move W8, [X22+24]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X25, 0x22D5000
	030 Move X25, [X25+1432]
	031 Move X23, X31
	032 Add X24, X22, 32
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X20, [X24]
	035 Compare X20, 0
	036 JumpIfEqual {150}
	037 Move W8, [X20+16]
	038 Subtract W8, W8, 5
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X26, X20
	041 Move W8, [X19+68]
	042 Add X26, X26, 40
	043 Move X21, [X26]
	044 Move [X26+24], W8
	045 Move X0, [X25]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, X21
	051 Move X1, X31
	052 Move X2, X31
	053 Call Object.op_Inequality, X0, X1
	054 Move W8, W0
	055 Move X0, [X25]
	056 Add X9, X20, 32
	057 And W31, W8, 1
	058 NotImplemented "Instruction CSEL not yet implemented."
	059 Move W9, [X0+224]
	060 Move X21, [X8]
	061 Compare W9, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, X21
	065 Move X1, X31
	066 Move X2, X31
	067 Call Object.op_Inequality, X0, X1
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {81}
	072 Move X0, X20
	073 Move X1, X31
	074 Call BodyPartInstance.get_rendererEnabled, X0
	075 Compare X21, 0
	076 JumpIfEqual {150}
	077 And W1, W0, 1
	078 Move X0, X21
	079 Move X2, X31
	080 Call Renderer.set_enabled, X0, X1
	081 Move W8, [X22+24]
	082 Add X23, X23, 1
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X21, [X19+112]
	085 Compare X21, 0
	086 JumpIfEqual {140}
	087 Move W8, [X21+24]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X24, 0x22D5000
	090 Move X24, [X24+1432]
	091 Move X22, X31
	092 Add X23, X21, 32
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X25, [X23]
	095 Compare X25, 0
	096 JumpIfEqual {150}
	097 Move W8, [X25+16]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X26, X25
	100 Add X26, X26, 64
	101 Move X20, [X26]
	102 Move X0, [X24]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 Move X0, X20
	108 Move X1, X31
	109 Move X2, X31
	110 Call Object.op_Inequality, X0, X1
	111 Move W8, W0
	112 Move X0, [X24]
	113 Add X9, X25, 56
	114 And W31, W8, 1
	115 NotImplemented "Instruction CSEL not yet implemented."
	116 Move W9, [X0+224]
	117 Move X20, [X8]
	118 Compare W9, 0
	119 JumpIfNotEqual {121}
	120 Call 0x1C17DFC
	121 Move X0, X20
	122 Move X1, X31
	123 Move X2, X31
	124 Call Object.op_Inequality, X0, X1
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {137}
	129 Compare X20, 0
	130 JumpIfEqual {150}
	131 Move W8, [X19+68]
	132 Move X0, X20
	133 Move X2, X31
	134 NotImplemented "Instruction CMP not yet implemented."
	135 NotImplemented "Instruction CSET not yet implemented."
	136 Call Renderer.set_enabled, X0, X1
	137 Move W8, [X21+24]
	138 Add X22, X22, 1
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X20, [X31+64]
	141 Move X19, [X31+72]
	142 Move X22, [X31+48]
	143 Move X21, [X31+56]
	144 Move X24, [X31+32]
	145 Move X23, [X31+40]
	146 Move X26, [X31+16]
	147 Move X25, [X31+24]
	148 Move X30, [X31+80]
	149 Return 
	150 Call 0x1C17F20
	151 Call 0x1C17F28

Method: System.Void SetIsHeadOnly(System.Boolean isHeadOnly)

Disassembly:
	0x01E1FD54 BL 0x3C13E40
	0x01E1FD58 ADRP X8, 0x22D8000
	0x01E1FD5C LDR X8, [X8 + 0xCA0]
	0x01E1FD60 MOV X22, X0
	0x01E1FD64 LDR X8, [X8]
	0x01E1FD68 MOV X0, X8
	0x01E1FD6C BL 0x1C16F10
	0x01E1FD70 MOV X1, X22
	0x01E1FD74 MOV X2, X31
	0x01E1FD78 MOV X21, X0
	0x01E1FD7C BL 0x3C1454C
	0x01E1FD80 CBZ X21, 0x1E200AC
	0x01E1FD84 ADRP X8, 0xFFFFFFFFFECCA000
	0x01E1FD88 ADRP X9, 0xFFFFFFFFFECCB000
	0x01E1FD8C LDR V1, [X8 + 0xF90]
	0x01E1FD90 LDR V2, [X9 + 0x30]
	0x01E1FD94 FMOV S0, 1
	0x01E1FD98 FMOV S3, 1
	0x01E1FD9C MOV X0, X21
	0x01E1FDA0 MOV X1, X31
	0x01E1FDA4 BL 0x3C148B4
	0x01E1FDA8 CBZ X20, 0x1E200AC
	0x01E1FDAC MOV X0, X20
	0x01E1FDB0 MOV X1, X21
	0x01E1FDB4 MOV X2, X31
	0x01E1FDB8 BL 0x3C134D8
	0x01E1FDBC LDR X8, [X19 + 0x20]
	0x01E1FDC0 CBZ X8, 0x1E200AC
	0x01E1FDC4 LDR X8, [X8 + 0x28]
	0x01E1FDC8 CBZ X8, 0x1E200AC
	0x01E1FDCC ADRP X9, 0x22DB000
	0x01E1FDD0 LDR X9, [X9 + 0x708]
	0x01E1FDD4 LDR W1, [X8 + 0x18]
	0x01E1FDD8 LDR X0, [X9]
	0x01E1FDDC BL 0x1C16D6C
	0x01E1FDE0 LDR X8, [X19 + 0x20]
	0x01E1FDE4 STR X0, [X19 + 0x60]
	0x01E1FDE8 CBZ X8, 0x1E200AC
	0x01E1FDEC MOVZ W22, 0x4
	0x01E1FDF0 LDR X8, [X8 + 0x28]
	0x01E1FDF4 CBZ X8, 0x1E200AC
	0x01E1FDF8 LDR W9, [X8 + 0x18]
	0x01E1FDFC SUB X24, X22, 0x4
	0x01E1FE00 CMP W24, W9
	0x01E1FE04 B.GE 0x1E1FF10
	0x01E1FE08 CMP W24, W9
	0x01E1FE0C B.CS 0x1E200D4
	0x01E1FE10 LDR X26, [X8, X22, LSL #3]
	0x01E1FE14 CBZ X26, 0x1E200AC
	0x01E1FE18 LDR X1, [X26 + 0x10]
	0x01E1FE1C LDR X0, [X25]
	0x01E1FE20 MOV X2, X31
	0x01E1FE24 BL 0x321B938
	0x01E1FE28 LDR X8, [X29]
	0x01E1FE2C MOV X21, X0
	0x01E1FE30 MOV X0, X8
	0x01E1FE34 BL 0x1C16F10
	0x01E1FE38 MOV X1, X21
	0x01E1FE3C MOV X2, X31
	0x01E1FE40 MOV X20, X0
	0x01E1FE44 BL 0x3C35934
	0x01E1FE48 CBZ X20, 0x1E200AC
	0x01E1FE4C MOV X0, X20
	0x01E1FE50 MOV X1, X31
	0x01E1FE54 BL 0x3C356F8
	0x01E1FE58 MOV X21, X0
	0x01E1FE5C MOV X0, X19
	0x01E1FE60 MOV X1, X31
	0x01E1FE64 BL 0x3C32E90
	0x01E1FE68 CBZ X21, 0x1E200AC
	0x01E1FE6C MOV X1, X0
	0x01E1FE70 MOV X0, X21
	0x01E1FE74 MOV W2, W31
	0x01E1FE78 MOV X3, X31
	0x01E1FE7C BL 0x3C3FEB8
	0x01E1FE80 MOV X0, X20
	0x01E1FE84 MOV X1, X31
	0x01E1FE88 BL 0x3C356F8
	0x01E1FE8C CBZ X0, 0x1E200AC
	0x01E1FE90 LDP S1, S2, [X26 + 0x20]
	0x01E1FE94 LDR V0, [X26 + 0x1C]
	0x01E1FE98 MOV X1, X31
	0x01E1FE9C BL 0x3C3EC04
	0x01E1FEA0 MOV X0, X20
	0x01E1FEA4 MOV X1, X31
	0x01E1FEA8 BL 0x3C356F8
	0x01E1FEAC CBZ X0, 0x1E200AC
	0x01E1FEB0 LDP S2, S3, [X26 + 0x30]
	0x01E1FEB4 LDP S0, S1, [X26 + 0x28]
	0x01E1FEB8 MOV X1, X31
	0x01E1FEBC BL 0x3C3F8B8
	0x01E1FEC0 LDR X21, [X19 + 0x60]
	0x01E1FEC4 MOV X0, X20
	0x01E1FEC8 MOV X1, X31
	0x01E1FECC BL 0x3C356F8
	0x01E1FED0 CBZ X21, 0x1E200AC
	0x01E1FED4 MOV X20, X0
	0x01E1FED8 CBZ X0, 0x1E1FEF0
	0x01E1FEDC LDR X8, [X21]
	0x01E1FEE0 MOV X0, X20
	0x01E1FEE4 LDR X1, [X8 + 0x40]
	0x01E1FEE8 BL 0x1C16E00
	0x01E1FEEC CBZ X0, 0x1E200D8
	0x01E1FEF0 LDR W8, [X21 + 0x18]
	0x01E1FEF4 CMP W24, W8
	0x01E1FEF8 B.CS 0x1E200D4
	0x01E1FEFC STR X20, [X21, X22, LSL #3]
	0x01E1FF00 LDR X8, [X19 + 0x20]
	0x01E1FF04 ADD X22, X22, 0x1
	0x01E1FF08 CBNZ X8, 0x1E1FDF0
	0x01E1FF0C B 0x1E200AC
	0x01E1FF10 ADRP X8, 0x22DB000
	0x01E1FF14 LDR X8, [X8 + 0x6E0]
	0x01E1FF18 MOVZ W1, 0x8
	0x01E1FF1C LDR X0, [X8]
	0x01E1FF20 BL 0x1C16D6C
	0x01E1FF24 STR X0, [X19 + 0x68]
	0x01E1FF28 CBZ X0, 0x1E200AC
	0x01E1FF2C MOV X20, X0
	0x01E1FF30 MOV X22, X31
	0x01E1FF34 LDR W8, [X20 + 0x18]
	0x01E1FF38 CMP W22, W8
	0x01E1FF3C B.GE 0x1E1FFB8
	0x01E1FF40 LDR X0, [X28]
	0x01E1FF44 BL 0x1C16F10
	0x01E1FF48 MOV X1, X31
	0x01E1FF4C MOV X21, X0
	0x01E1FF50 BL 0x1D64630
	0x01E1FF54 CBZ X21, 0x1E200AC
	0x01E1FF58 ADD X24, X22, 0x1

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x25BA000
	011 Move W8, [X21+3626]
	012 Move X19, X0
	013 And W20, W1, 1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x22D5000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+3626], W8
	023 Move X22, [X19+104]
	024 Move [X19+160], W20
	025 Compare X22, 0
	026 JumpIfEqual {84}
	027 Move W8, [X22+24]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X25, 0x22D5000
	030 Move X25, [X25+1432]
	031 Move X23, X31
	032 Add X24, X22, 32
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X20, [X24]
	035 Compare X20, 0
	036 JumpIfEqual {150}
	037 Move W8, [X20+16]
	038 Subtract W8, W8, 4
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X26, X20
	041 Move W8, [X19+160]
	042 Add X26, X26, 40
	043 Move X21, [X26]
	044 Move [X26+24], W8
	045 Move X0, [X25]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, X21
	051 Move X1, X31
	052 Move X2, X31
	053 Call Object.op_Inequality, X0, X1
	054 Move W8, W0
	055 Move X0, [X25]
	056 Add X9, X20, 32
	057 And W31, W8, 1
	058 NotImplemented "Instruction CSEL not yet implemented."
	059 Move W9, [X0+224]
	060 Move X21, [X8]
	061 Compare W9, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, X21
	065 Move X1, X31
	066 Move X2, X31
	067 Call Object.op_Inequality, X0, X1
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {81}
	072 Move X0, X20
	073 Move X1, X31
	074 Call BodyPartInstance.get_rendererEnabled, X0
	075 Compare X21, 0
	076 JumpIfEqual {150}
	077 And W1, W0, 1
	078 Move X0, X21
	079 Move X2, X31
	080 Call Renderer.set_enabled, X0, X1
	081 Move W8, [X22+24]
	082 Add X23, X23, 1
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X21, [X19+112]
	085 Compare X21, 0
	086 JumpIfEqual {140}
	087 Move W8, [X21+24]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X24, 0x22D5000
	090 Move X24, [X24+1432]
	091 Move X22, X31
	092 Add X23, X21, 32
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X25, [X23]
	095 Compare X25, 0
	096 JumpIfEqual {150}
	097 Move W8, [X25+16]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X26, X25
	100 Add X26, X26, 64
	101 Move X20, [X26]
	102 Move X0, [X24]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 Move X0, X20
	108 Move X1, X31
	109 Move X2, X31
	110 Call Object.op_Inequality, X0, X1
	111 Move W8, W0
	112 Move X0, [X24]
	113 Add X9, X25, 56
	114 And W31, W8, 1
	115 NotImplemented "Instruction CSEL not yet implemented."
	116 Move W9, [X0+224]
	117 Move X20, [X8]
	118 Compare W9, 0
	119 JumpIfNotEqual {121}
	120 Call 0x1C17DFC
	121 Move X0, X20
	122 Move X1, X31
	123 Move X2, X31
	124 Call Object.op_Inequality, X0, X1
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {137}
	129 Compare X20, 0
	130 JumpIfEqual {150}
	131 Move W8, [X19+160]
	132 Move X0, X20
	133 Move X2, X31
	134 NotImplemented "Instruction CMP not yet implemented."
	135 NotImplemented "Instruction CSET not yet implemented."
	136 Call Renderer.set_enabled, X0, X1
	137 Move W8, [X21+24]
	138 Add X22, X22, 1
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X20, [X31+64]
	141 Move X19, [X31+72]
	142 Move X22, [X31+48]
	143 Move X21, [X31+56]
	144 Move X24, [X31+32]
	145 Move X23, [X31+40]
	146 Move X26, [X31+16]
	147 Move X25, [X31+24]
	148 Move X30, [X31+80]
	149 Return 
	150 Call 0x1C17F20
	151 Call 0x1C17F28

Method: System.Void SetColor(UnityEngine.Color color)

Disassembly:
	0x01E1FF5C SUB W8, W24, 0x2
	0x01E1FF60 CMP W8, 0x1
	0x01E1FF64 CSET W8, HI
	0x01E1FF68 CMP W24, 0x8
	0x01E1FF6C CSET W9, NE
	0x01E1FF70 AND W8, W8, W9, 0x0
	0x01E1FF74 STR W24, [X21 + 0x10]
	0x01E1FF78 STRB W8, [X21 + 0x41]
	0x01E1FF7C LDR X8, [X20]
	0x01E1FF80 MOV X0, X21
	0x01E1FF84 LDR X1, [X8 + 0x40]
	0x01E1FF88 BL 0x1C16E00
	0x01E1FF8C CBZ X0, 0x1E200D8
	0x01E1FF90 LDR W9, [X20 + 0x18]
	0x01E1FF94 SUB X8, X24, 0x1
	0x01E1FF98 CMP W8, W9
	0x01E1FF9C B.CS 0x1E200D4
	0x01E1FFA0 ADD X9, X20, X22, 0x3, LSL
	0x01E1FFA4 STR X21, [X9 + 0x20]
	0x01E1FFA8 LDR X20, [X19 + 0x68]
	0x01E1FFAC ADD X22, X8, 0x1
	0x01E1FFB0 CBNZ X20, 0x1E1FF34
	0x01E1FFB4 B 0x1E200AC
	0x01E1FFB8 ADRP X8, 0x22D4000
	0x01E1FFBC LDR X8, [X8 + 0x6C0]
	0x01E1FFC0 ADRP X9, 0x22DB000
	0x01E1FFC4 LDR X0, [X8]
	0x01E1FFC8 LDR W8, [X0 + 0xE0]
	0x01E1FFCC LDR X9, [X9 + 0x6C8]
	0x01E1FFD0 LDR X20, [X9]
	0x01E1FFD4 CBNZ W8, 0x1E1FFDC
	0x01E1FFD8 BL 0x1C16DFC
	0x01E1FFDC MOV X0, X20
	0x01E1FFE0 MOV X1, X31
	0x01E1FFE4 BL 0x338C698
	0x01E1FFE8 ADRP X8, 0x22D4000
	0x01E1FFEC LDR X8, [X8 + 0xDF8]
	0x01E1FFF0 MOV X20, X0
	0x01E1FFF4 LDR X8, [X8]
	0x01E1FFF8 LDR W9, [X8 + 0xE0]
	0x01E1FFFC CBNZ W9, 0x1E20008
	0x01E20000 MOV X0, X8
	0x01E20004 BL 0x1C16DFC
	0x01E20008 MOV X0, X20
	0x01E2000C MOV X1, X31
	0x01E20010 BL 0x33B02B8
	0x01E20014 CBZ X0, 0x1E200AC
	0x01E20018 MOV X1, X31
	0x01E2001C BL 0x3395B7C
	0x01E20020 ADRP X8, 0x22DA000
	0x01E20024 LDR X8, [X8 + 0x6B8]
	0x01E20028 SUB W1, W0, 0x1
	0x01E2002C LDR X8, [X8]
	0x01E20030 MOV X0, X8
	0x01E20034 BL 0x1C16D6C
	0x01E20038 STR X0, [X19 + 0x70]
	0x01E2003C CBZ X0, 0x1E200AC
	0x01E20040 MOV X20, X0
	0x01E20044 MOV X22, X31
	0x01E20048 LDRSW X8, [X20 + 0x18]
	0x01E2004C CMP X22, X8
	0x01E20050 B.GE 0x1E200B0
	0x01E20054 LDR X0, [X23]
	0x01E20058 BL 0x1C16F10
	0x01E2005C MOV X1, X31
	0x01E20060 MOV X21, X0
	0x01E20064 BL 0x1D646AC
	0x01E20068 CBZ X21, 0x1E200AC
	0x01E2006C ADD X24, X22, 0x1
	0x01E20070 STR W24, [X21 + 0x10]
	0x01E20074 LDR X8, [X20]
	0x01E20078 MOV X0, X21
	0x01E2007C LDR X1, [X8 + 0x40]
	0x01E20080 BL 0x1C16E00
	0x01E20084 CBZ X0, 0x1E200D8
	0x01E20088 LDR W9, [X20 + 0x18]
	0x01E2008C SUB X8, X24, 0x1
	0x01E20090 CMP X8, X9
	0x01E20094 B.CS 0x1E200D4
	0x01E20098 ADD X9, X20, X22, 0x3, LSL
	0x01E2009C STR X21, [X9 + 0x20]
	0x01E200A0 LDR X20, [X19 + 0x70]
	0x01E200A4 ADD X22, X8, 0x1
	0x01E200A8 CBNZ X20, 0x1E20048
	0x01E200AC BL 0x1C16F20
	0x01E200B0 MOVZ W8, 0x1
	0x01E200B4 STRB W8, [X19 + 0x45]
	0x01E200B8 LDP X20, X19, [X31 + 0x50]
	0x01E200BC LDP X22, X21, [X31 + 0x40]
	0x01E200C0 LDP X24, X23, [X31 + 0x30]
	0x01E200C4 LDP X26, X25, [X31 + 0x20]
	0x01E200C8 LDP X28, X27, [X31 + 0x10]
	0x01E200CC LDP X29, X30, [X31], #0x60
	0x01E200D0 RET
	0x01E200D4 BL 0x1C16F28

ISIL:
	001 Move [X31-112], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0x25BA000
	015 Move W8, [X20+3627]
	016 Move V8, V2
	017 Move V9, V1
	018 Move V10, V0
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x22D9000
	025 Move X0, [X0+544]
	026 Call 0x1C17CF4
	027 Move X0, 0x22D7000
	028 Move X0, [X0+2184]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+3627], W8
	032 Move X8, -20135936
	033 Move V0, [X8+536]
	034 Move W9, [X19+69]
	035 Move W8, 0x3F800000
	036 Move [X19+64], W8
	037 NotImplemented "Instruction FMAXNM not yet implemented."
	038 NotImplemented "Instruction FMAXNM not yet implemented."
	039 NotImplemented "Instruction FMAXNM not yet implemented."
	040 Move [X19+52], S1
	041 Move [X19+60], S2
	042 Move [X19+60], S0
	043 Compare W9, 0
	044 JumpIfEqual {101}
	045 Move X21, [X19+104]
	046 Compare X21, 0
	047 JumpIfEqual {115}
	048 Move W8, [X21+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X23, 0x22D7000
	051 Move X24, 0x22D9000
	052 Move X23, [X23+2184]
	053 Call 0x3EB27CC
	054 Return 
	055 Move W22, W31
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Add X8, X21, W22
	058 Move X8, [X8+32]
	059 Compare X8, 0
	060 JumpIfEqual {115}
	061 Move W9, [X8+16]
	062 And W9, W9, 0xFFFFFFFE
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X25, [X8+48]
	065 Compare X25, 0
	066 JumpIfEqual {98}
	067 Move W8, [X25+24]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X26, X31
	070 Add X27, X25, 32
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X20, [X27]
	073 Compare X20, 0
	074 JumpIfEqual {115}
	075 Move X0, X20
	076 Move X1, X31
	077 Call Object.get_name, X0
	078 Compare X0, 0
	079 JumpIfEqual {115}
	080 Move X1, [X23]
	081 Move X2, X31
	082 Call String.Contains, X0, X1
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {95}
	087 Move S0, [X19+52]
	088 Move S1, [X19+56]
	089 Move S2, [X19+60]
	090 Move S3, [X19+64]
	091 Move X1, [X24]
	092 Move X0, X20
	093 Move X2, X31
	094 Call Material.SetColor, X0, X1, X2
	095 Move W8, [X25+24]
	096 Add X26, X26, 1
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move W8, [X21+24]
	099 Add W22, W22, 1
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X20, [X31+96]
	102 Move X19, [X31+104]
	103 Move X22, [X31+80]
	104 Move X21, [X31+88]
	105 Move X24, [X31+64]
	106 Move X23, [X31+72]
	107 Move X26, [X31+48]
	108 Move X25, [X31+56]
	109 Move X30, [X31+32]
	110 Move X27, [X31+40]
	111 Move D9, [X31+16]
	112 Move D8, [X31+24]
	113 Move V10, [X31+112]
	114 Return 
	115 Call 0x1C17F20
	116 Call 0x1C17F28

Method: System.Void UpdateAvatar(AnimalCompany.UserAvatarState avatarState)

Disassembly:
	0x01E200D8 BL 0x1C16F44
	0x01E200DC MOV X1, X31
	0x01E200E0 BL 0x1C16DEC
	0x01E200E4 SUB X31, X31, 0x1A0
	0x01E200E8 STR D14, [X31 + 0x100]
	0x01E200EC STP D13, D12, [X31 + 0x110]
	0x01E200F0 STP D11, D10, [X31 + 0x120]
	0x01E200F4 STP D9, D8, [X31 + 0x130]
	0x01E200F8 STP X29, X30, [X31 + 0x140]
	0x01E200FC STP X28, X27, [X31 + 0x150]
	0x01E20100 STP X26, X25, [X31 + 0x160]
	0x01E20104 STP X24, X23, [X31 + 0x170]
	0x01E20108 STP X22, X21, [X31 + 0x180]
	0x01E2010C STP X20, X19, [X31 + 0x190]
	0x01E20110 ADRP X25, 0x25B8000
	0x01E20114 LDRB W8, [X25 + 0xE2E]
	0x01E20118 MOV W22, W5
	0x01E2011C MOV X27, X4
	0x01E20120 MOV X23, X3
	0x01E20124 MOV X21, X2
	0x01E20128 MOV W24, W1
	0x01E2012C MOV X19, X0
	0x01E20130 TBNZ X8, 0x0, 0x1E2031C
	0x01E20134 ADRP X0, 0x22DA000
	0x01E20138 LDR X0, [X0 + 0x730]
	0x01E2013C BL 0x1C16CF4
	0x01E20140 ADRP X0, 0x22DA000
	0x01E20144 LDR X0, [X0 + 0x738]
	0x01E20148 BL 0x1C16CF4
	0x01E2014C ADRP X0, 0x22DA000
	0x01E20150 LDR X0, [X0 + 0x4F0]
	0x01E20154 BL 0x1C16CF4
	0x01E20158 ADRP X0, 0x22DA000
	0x01E2015C LDR X0, [X0 + 0x740]
	0x01E20160 BL 0x1C16CF4
	0x01E20164 ADRP X0, 0x22D3000
	0x01E20168 LDR X0, [X0 + 0xA28]
	0x01E2016C BL 0x1C16CF4
	0x01E20170 ADRP X0, 0x22D3000
	0x01E20174 LDR X0, [X0 + 0x710]
	0x01E20178 BL 0x1C16CF4
	0x01E2017C ADRP X0, 0x22DA000
	0x01E20180 LDR X0, [X0 + 0x748]
	0x01E20184 BL 0x1C16CF4
	0x01E20188 ADRP X0, 0x22DA000
	0x01E2018C LDR X0, [X0 + 0x750]
	0x01E20190 BL 0x1C16CF4
	0x01E20194 ADRP X0, 0x22DA000
	0x01E20198 LDR X0, [X0 + 0x758]
	0x01E2019C BL 0x1C16CF4
	0x01E201A0 ADRP X0, 0x22D3000
	0x01E201A4 LDR X0, [X0 + 0x718]
	0x01E201A8 BL 0x1C16CF4
	0x01E201AC ADRP X0, 0x22DA000
	0x01E201B0 LDR X0, [X0 + 0x760]
	0x01E201B4 BL 0x1C16CF4
	0x01E201B8 ADRP X0, 0x22DA000
	0x01E201BC LDR X0, [X0 + 0x768]
	0x01E201C0 BL 0x1C16CF4
	0x01E201C4 ADRP X0, 0x22D3000
	0x01E201C8 LDR X0, [X0 + 0x720]
	0x01E201CC BL 0x1C16CF4
	0x01E201D0 ADRP X0, 0x22DA000
	0x01E201D4 LDR X0, [X0 + 0x770]
	0x01E201D8 BL 0x1C16CF4
	0x01E201DC ADRP X0, 0x22DA000
	0x01E201E0 LDR X0, [X0 + 0x6F0]
	0x01E201E4 BL 0x1C16CF4
	0x01E201E8 ADRP X0, 0x22DA000
	0x01E201EC LDR X0, [X0 + 0x6F8]
	0x01E201F0 BL 0x1C16CF4
	0x01E201F4 ADRP X0, 0x22DA000
	0x01E201F8 LDR X0, [X0 + 0x778]
	0x01E201FC BL 0x1C16CF4
	0x01E20200 ADRP X0, 0x22D5000
	0x01E20204 LDR X0, [X0 + 0x168]
	0x01E20208 BL 0x1C16CF4
	0x01E2020C ADRP X0, 0x22DA000
	0x01E20210 LDR X0, [X0 + 0x780]
	0x01E20214 BL 0x1C16CF4
	0x01E20218 ADRP X0, 0x22DA000
	0x01E2021C LDR X0, [X0 + 0x788]
	0x01E20220 BL 0x1C16CF4
	0x01E20224 ADRP X0, 0x22D3000
	0x01E20228 LDR X0, [X0 + 0xA58]
	0x01E2022C BL 0x1C16CF4
	0x01E20230 ADRP X0, 0x22D3000
	0x01E20234 LDR X0, [X0 + 0x758]
	0x01E20238 BL 0x1C16CF4
	0x01E2023C ADRP X0, 0x22DA000
	0x01E20240 LDR X0, [X0 + 0x790]
	0x01E20244 BL 0x1C16CF4
	0x01E20248 ADRP X0, 0x22DA000
	0x01E2024C LDR X0, [X0 + 0x798]
	0x01E20250 BL 0x1C16CF4
	0x01E20254 ADRP X0, 0x22D3000
	0x01E20258 LDR X0, [X0 + 0x788]
	0x01E2025C BL 0x1C16CF4
	0x01E20260 ADRP X0, 0x22DA000
	0x01E20264 LDR X0, [X0 + 0x7A0]
	0x01E20268 BL 0x1C16CF4
	0x01E2026C ADRP X0, 0x22DA000
	0x01E20270 LDR X0, [X0 + 0x7A8]
	0x01E20274 BL 0x1C16CF4
	0x01E20278 ADRP X0, 0x22D3000
	0x01E2027C LDR X0, [X0 + 0x598]
	0x01E20280 BL 0x1C16CF4
	0x01E20284 ADRP X0, 0x22DA000
	0x01E20288 LDR X0, [X0 + 0x708]
	0x01E2028C BL 0x1C16CF4
	0x01E20290 ADRP X0, 0x22DA000
	0x01E20294 LDR X0, [X0 + 0x7B0]
	0x01E20298 BL 0x1C16CF4
	0x01E2029C ADRP X0, 0x22D7000
	0x01E202A0 LDR X0, [X0 + 0x220]
	0x01E202A4 BL 0x1C16CF4
	0x01E202A8 ADRP X0, 0x22DA000
	0x01E202AC LDR X0, [X0 + 0x7B8]
	0x01E202B0 BL 0x1C16CF4
	0x01E202B4 ADRP X0, 0x22DA000
	0x01E202B8 LDR X0, [X0 + 0x7C0]
	0x01E202BC BL 0x1C16CF4
	0x01E202C0 ADRP X0, 0x22DA000
	0x01E202C4 LDR X0, [X0 + 0x7C8]
	0x01E202C8 BL 0x1C16CF4
	0x01E202CC ADRP X0, 0x22D5000
	0x01E202D0 LDR X0, [X0 + 0x888]
	0x01E202D4 BL 0x1C16CF4
	0x01E202D8 ADRP X0, 0x22DA000
	0x01E202DC LDR X0, [X0 + 0x7D0]
	0x01E202E0 BL 0x1C16CF4
	0x01E202E4 ADRP X0, 0x22DA000
	0x01E202E8 LDR X0, [X0 + 0x7D8]
	0x01E202EC BL 0x1C16CF4
	0x01E202F0 ADRP X0, 0x22DA000
	0x01E202F4 LDR X0, [X0 + 0x7E0]
	0x01E202F8 BL 0x1C16CF4
	0x01E202FC ADRP X0, 0x22DA000
	0x01E20300 LDR X0, [X0 + 0x7E8]
	0x01E20304 BL 0x1C16CF4
	0x01E20308 ADRP X0, 0x22DA000
	0x01E2030C LDR X0, [X0 + 0x7F0]
	0x01E20310 BL 0x1C16CF4
	0x01E20314 MOVZ W8, 0x1
	0x01E20318 STRB W8, [X25 + 0xE2E]
	0x01E2031C STP X31, X31, [X31 + 0xE8]
	0x01E20320 STR X31, [X31 + 0x108]
	0x01E20324 STP X31, X31, [X31 + 0xD8]
	0x01E20328 STR X31, [X31 + 0xD0]
	0x01E2032C STR W24, [X31 + 0xF0]
	0x01E20330 STR X19, [X31 + 0xF8]
	0x01E20334 LDR X8, [X19 + 0x68]
	0x01E20338 CBZ X8, 0x1E21354
	0x01E2033C LDR W10, [X8 + 0x18]
	0x01E20340 SUB W9, W24, 0x1
	0x01E20344 CMP W9, W10
	0x01E20348 B.CS 0x1E21670
	0x01E2034C ADD X8, X8, W9, 0x3, SXTW
	0x01E20350 LDR X8, [X8 + 0x20]
	0x01E20354 MOV X0, X21
	0x01E20358 MOV X1, X31
	0x01E2035C STR X31, [X31 + 0x108]
	0x01E20360 STR X8, [X31 + 0xE8]
	0x01E20364 BL 0x32277A8
	0x01E20368 TBZ X0, 0x0, 0x1E20374
	0x01E2036C MOV X24, X31
	0x01E20370 B 0x1E203A4
	0x01E20374 LDR X0, [X19 + 0x20]
	0x01E20378 CBZ X0, 0x1E21354
	0x01E2037C MOV X1, X31
	0x01E20380 BL 0x1D64F18
	0x01E20384 CBZ X0, 0x1E21354
	0x01E20388 ADRP X8, 0x22DA000
	0x01E2038C LDR X8, [X8 + 0x758]
	0x01E20390 ADD X2, X31, 0x108
	0x01E20394 MOV X1, X21
	0x01E20398 LDR X3, [X8]
	0x01E2039C BL 0x2AA6B2C
	0x01E203A0 LDR X24, [X31 + 0x108]
	0x01E203A4 ADRP X26, 0x22D3000
	0x01E203A8 LDR X26, [X26 + 0x598]
	0x01E203AC LDR X0, [X26]
	0x01E203B0 LDR W8, [X0 + 0xE0]
	0x01E203B4 CBNZ W8, 0x1E203BC
	0x01E203B8 BL 0x1C16DFC
	0x01E203BC MOV X0, X24
	0x01E203C0 MOV X1, X31
	0x01E203C4 MOV X2, X31
	0x01E203C8 BL 0x3C3883C
	0x01E203CC TBZ X0, 0x0, 0x1E20448
	0x01E203D0 ADRP X20, 0x22DA000
	0x01E203D4 LDR X20, [X20 + 0x4F0]
	0x01E203D8 LDR X0, [X20]
	0x01E203DC LDR W8, [X0 + 0xE0]
	0x01E203E0 CBNZ W8, 0x1E203EC
	0x01E203E4 BL 0x1C16DFC
	0x01E203E8 LDR X0, [X20]
	0x01E203EC LDR X8, [X0 + 0xB8]
	0x01E203F0 LDR X0, [X8]
	0x01E203F4 CBZ X0, 0x1E21354
	0x01E203F8 ADRP X8, 0x22DA000
	0x01E203FC LDR W1, [X31 + 0xF0]
	0x01E20400 LDR X8, [X8 + 0x760]
	0x01E20404 LDR X2, [X8]
	0x01E20408 BL 0x2A44D78
	0x01E2040C MOV X1, X31
	0x01E20410 MOV X21, X0
	0x01E20414 BL 0x32277A8
	0x01E20418 TBNZ X0, 0x0, 0x1E20448
	0x01E2041C LDR X0, [X19 + 0x20]
	0x01E20420 CBZ X0, 0x1E21354
	0x01E20424 MOV X1, X31
	0x01E20428 BL 0x1D64F18
	0x01E2042C CBZ X0, 0x1E21354
	0x01E20430 ADRP X8, 0x22DA000
	0x01E20434 LDR X8, [X8 + 0x758]
	0x01E20438 ADD X2, X31, 0x108
	0x01E2043C MOV X1, X21
	0x01E20440 LDR X3, [X8]
	0x01E20444 BL 0x2AA6B2C
	0x01E20448 LDR X8, [X31 + 0xE8]
	0x01E2044C CBZ X8, 0x1E21354
	0x01E20450 LDR X0, [X26]
	0x01E20454 LDR X24, [X31 + 0x108]
	0x01E20458 LDR X25, [X8 + 0x38]
	0x01E2045C LDR W9, [X0 + 0xE0]
	0x01E20460 CBNZ W9, 0x1E20468
	0x01E20464 BL 0x1C16DFC
	0x01E20468 MOV X0, X24
	0x01E2046C MOV X1, X25
	0x01E20470 MOV X2, X31
	0x01E20474 BL 0x3C354F8
	0x01E20478 TBZ X0, 0x0, 0x1E20484
	0x01E2047C MOVZ W8, 0x1
	0x01E20480 STRB W8, [X23]
	0x01E20484 LDR X0, [X26]
	0x01E20488 LDR W20, [X31 + 0xF0]
	0x01E2048C LDR X23, [X31 + 0x108]
	0x01E20490 LDR W8, [X0 + 0xE0]
	0x01E20494 CBNZ W8, 0x1E2049C
	0x01E20498 BL 0x1C16DFC
	0x01E2049C MOV X0, X23
	0x01E204A0 MOV X1, X31
	0x01E204A4 MOV X2, X31
	0x01E204A8 BL 0x3C354F8
	0x01E204AC TBZ X0, 0x0, 0x1E204D0
	0x01E204B0 LDR X23, [X31 + 0x108]
	0x01E204B4 CMP W20, 0x2
	0x01E204B8 B.NE 0x1E205E8
	0x01E204BC CBZ X23, 0x1E21354
	0x01E204C0 LDR W8, [X23 + 0x1C]
	0x01E204C4 CMP W8, 0x3
	0x01E204C8 B.EQ 0x1E204D4
	0x01E204CC B 0x1E205FC
	0x01E204D0 LDR X23, [X31 + 0x108]
	0x01E204D4 LDR X0, [X26]
	0x01E204D8 LDR W8, [X0 + 0xE0]
	0x01E204DC CBNZ W8, 0x1E204E4
	0x01E204E0 BL 0x1C16DFC
	0x01E204E4 MOV X0, X23
	0x01E204E8 MOV X1, X31
	0x01E204EC MOV X2, X31
	0x01E204F0 BL 0x3C3883C
	0x01E204F4 LDR X8, [X31 + 0xE8]
	0x01E204F8 CBZ X8, 0x1E21354
	0x01E204FC TBZ X0, 0x0, 0x1E20564
	0x01E20500 LDR X0, [X26]
	0x01E20504 LDR X21, [X8 + 0x18]
	0x01E20508 LDR W9, [X0 + 0xE0]
	0x01E2050C CBNZ W9, 0x1E20514
	0x01E20510 BL 0x1C16DFC
	0x01E20514 MOV X0, X21
	0x01E20518 MOV X1, X31
	0x01E2051C MOV X2, X31
	0x01E20520 BL 0x3C354F8
	0x01E20524 LDR X8, [X31 + 0xE8]
	0x01E20528 TBZ X0, 0x0, 0x1E2070C
	0x01E2052C CBZ X8, 0x1E21354
	0x01E20530 LDR X0, [X26]
	0x01E20534 LDR X21, [X8 + 0x18]
	0x01E20538 LDR W9, [X0 + 0xE0]
	0x01E2053C CBNZ W9, 0x1E20544
	0x01E20540 BL 0x1C16DFC
	0x01E20544 MOV X0, X21
	0x01E20548 MOV X1, X31
	0x01E2054C BL 0x3C394A8
	0x01E20550 LDR X8, [X31 + 0xE8]
	0x01E20554 CBZ X8, 0x1E21354
	0x01E20558 STP X31, X31, [X8 + 0x18]
	0x01E2055C STR X31, [X8 + 0x28]
	0x01E20560 B 0x1E20710
	0x01E20564 LDR X0, [X26]
	0x01E20568 LDR X23, [X8 + 0x38]
	0x01E2056C LDR X24, [X31 + 0x108]
	0x01E20570 LDR W8, [X0 + 0xE0]
	0x01E20574 CBNZ W8, 0x1E2057C
	0x01E20578 BL 0x1C16DFC
	0x01E2057C MOV X0, X23
	0x01E20580 MOV X1, X24
	0x01E20584 MOV X2, X31
	0x01E20588 BL 0x3C3883C
	0x01E2058C TBZ X0, 0x0, 0x1E20788
	0x01E20590 TBZ X22, 0x0, 0x1E21604
	0x01E20594 ADRP X20, 0x22DA000
	0x01E20598 LDR X20, [X20 + 0x4F0]
	0x01E2059C LDR X0, [X20]
	0x01E205A0 LDR W8, [X0 + 0xE0]
	0x01E205A4 CBNZ W8, 0x1E205B0
	0x01E205A8 BL 0x1C16DFC
	0x01E205AC LDR X0, [X20]
	0x01E205B0 LDR X8, [X0 + 0xB8]
	0x01E205B4 LDR X0, [X8 + 0x28]
	0x01E205B8 CBZ X0, 0x1E21354
	0x01E205BC ADRP X8, 0x22DA000
	0x01E205C0 LDR W1, [X31 + 0xF0]
	0x01E205C4 LDR X8, [X8 + 0x748]
	0x01E205C8 LDR X2, [X8]
	0x01E205CC BL 0x2A4500C
	0x01E205D0 TBZ X0, 0x0, 0x1E21604
	0x01E205D4 LDR W1, [X31 + 0xF0]
	0x01E205D8 LDR X2, [X31 + 0x108]
	0x01E205DC MOV X0, X19
	0x01E205E0 BL 0x1E23338
	0x01E205E4 B 0x1E21604
	0x01E205E8 CBZ X23, 0x1E21354
	0x01E205EC LDR W8, [X31 + 0xF0]
	0x01E205F0 LDR W9, [X23 + 0x1C]
	0x01E205F4 CMP W8, W9
	0x01E205F8 B.EQ 0x1E204D4
	0x01E205FC ADRP X8, 0x22D3000
	0x01E20600 LDR X8, [X8 + 0x720]
	0x01E20604 LDR X0, [X8]
	0x01E20608 BL 0x1C16F10
	0x01E2060C ADRP X8, 0x22D3000
	0x01E20610 LDR X8, [X8 + 0x718]
	0x01E20614 MOV X19, X0
	0x01E20618 LDR X1, [X8]
	0x01E2061C BL 0x2AA4804
	0x01E20620 ADRP X22, 0x22DA000
	0x01E20624 LDR W8, [X31 + 0xF0]
	0x01E20628 LDR X22, [X22 + 0x738]
	0x01E2062C ADD X1, X31, 0x90
	0x01E20630 STR W8, [X31 + 0x90]
	0x01E20634 LDR X0, [X22]
	0x01E20638 BL 0x1C16E04
	0x01E2063C CBZ X19, 0x1E21354
	0x01E20640 ADRP X8, 0x22DA000
	0x01E20644 ADRP X20, 0x22D3000
	0x01E20648 LDR X8, [X8 + 0x7C0]
	0x01E2064C LDR X20, [X20 + 0x710]
	0x01E20650 MOV X2, X0
	0x01E20654 MOV X0, X19
	0x01E20658 LDR X1, [X8]
	0x01E2065C LDR X3, [X20]
	0x01E20660 BL 0x2AA5098
	0x01E20664 LDR X8, [X31 + 0x108]
	0x01E20668 CBZ X8, 0x1E21354
	0x01E2066C LDR W8, [X8 + 0x1C]
	0x01E20670 LDR X0, [X22]
	0x01E20674 ADD X1, X31, 0x50
	0x01E20678 STR W8, [X31 + 0x50]
	0x01E2067C BL 0x1C16E04
	0x01E20680 ADRP X8, 0x22DA000
	0x01E20684 LDR X8, [X8 + 0x7C8]
	0x01E20688 LDR X3, [X20]
	0x01E2068C MOV X2, X0
	0x01E20690 MOV X0, X19
	0x01E20694 LDR X1, [X8]
	0x01E20698 BL 0x2AA5098
	0x01E2069C ADRP X8, 0x22DA000
	0x01E206A0 LDR X8, [X8 + 0x7D0]
	0x01E206A4 LDR X3, [X20]
	0x01E206A8 MOV X0, X19
	0x01E206AC MOV X2, X21
	0x01E206B0 LDR X1, [X8]
	0x01E206B4 BL 0x2AA5098
	0x01E206B8 ADRP X8, 0x22D3000
	0x01E206BC LDR X8, [X8 + 0x788]
	0x01E206C0 LDR X0, [X8]
	0x01E206C4 LDR W8, [X0 + 0xE0]
	0x01E206C8 CBNZ W8, 0x1E206D0
	0x01E206CC BL 0x1C16DFC
	0x01E206D0 ADRP X8, 0x22DA000
	0x01E206D4 ADRP X9, 0x22DA000
	0x01E206D8 ADRP X10, 0x22DA000
	0x01E206DC LDR X8, [X8 + 0x7B8]
	0x01E206E0 LDR X9, [X9 + 0x7F0]
	0x01E206E4 LDR X10, [X10 + 0x7E0]
	0x01E206E8 MOVZ W0, 0x2000
	0x01E206EC LDR X1, [X8]
	0x01E206F0 LDR X3, [X9]
	0x01E206F4 LDR X4, [X10]
	0x01E206F8 MOVZ W5, 0x174
	0x01E206FC MOV X2, X19
	0x01E20700 MOV X6, X31
	0x01E20704 BL 0x35C25CC
	0x01E20708 B 0x1E21604
	0x01E2070C CBZ X8, 0x1E21354
	0x01E20710 ADD X1, X31, 0xE8
	0x01E20714 MOV X0, X19
	0x01E20718 STP X31, X31, [X8 + 0x30]
	0x01E2071C BL 0x1E22EEC
	0x01E20720 ADRP X20, 0x22DA000
	0x01E20724 LDR X20, [X20 + 0x4F0]
	0x01E20728 LDR X0, [X20]
	0x01E2072C LDR W8, [X0 + 0xE0]
	0x01E20730 CBNZ W8, 0x1E2073C
	0x01E20734 BL 0x1C16DFC
	0x01E20738 LDR X0, [X20]
	0x01E2073C LDR X8, [X0 + 0xB8]
	0x01E20740 LDR X0, [X8 + 0x20]
	0x01E20744 CBZ X0, 0x1E21354
	0x01E20748 ADRP X8, 0x22DA000
	0x01E2074C LDR W1, [X31 + 0xF0]
	0x01E20750 LDR X8, [X8 + 0x748]
	0x01E20754 LDR X2, [X8]
	0x01E20758 BL 0x2A4500C
	0x01E2075C TBZ X0, 0x0, 0x1E21604
	0x01E20760 MOVZ W8, 0x1
	0x01E20764 STRB W8, [X27]
	0x01E20768 LDR X8, [X19 + 0x20]
	0x01E2076C CBZ X8, 0x1E21354
	0x01E20770 LDR X1, [X8 + 0x18]
	0x01E20774 LDR W2, [X31 + 0xF0]
	0x01E20778 MOV X0, X19
	0x01E2077C MOV X3, X31
	0x01E20780 BL 0x1E2311C
	0x01E20784 B 0x1E21604
	0x01E20788 ADD X1, X31, 0xE8
	0x01E2078C MOV X0, X19
	0x01E20790 BL 0x1E22EEC
	0x01E20794 LDR X8, [X31 + 0xE8]
	0x01E20798 CBZ X8, 0x1E21354
	0x01E2079C LDR X9, [X31 + 0x108]
	0x01E207A0 LDR X22, [X8 + 0x18]
	0x01E207A4 STR X9, [X8 + 0x38]
	0x01E207A8 LDR X0, [X26]
	0x01E207AC LDR W9, [X0 + 0xE0]
	0x01E207B0 CBNZ W9, 0x1E207B8
	0x01E207B4 BL 0x1C16DFC
	0x01E207B8 MOV X0, X22
	0x01E207BC MOV X1, X31
	0x01E207C0 MOV X2, X31
	0x01E207C4 BL 0x3C3883C
	0x01E207C8 TBZ X0, 0x0, 0x1E208F0
	0x01E207CC ADRP X8, 0x22DA000
	0x01E207D0 LDR X8, [X8 + 0x738]
	0x01E207D4 LDR W9, [X31 + 0xF0]
	0x01E207D8 LDR X20, [X31 + 0xE8]
	0x01E207DC MOVN X10, 0x0
	0x01E207E0 LDR X8, [X8]
	0x01E207E4 ADD X0, X31, 0x90
	0x01E207E8 MOV X1, X31
	0x01E207EC STR W9, [X31 + 0xA0]
	0x01E207F0 STP X8, X10, [X31 + 0x90]
	0x01E207F4 BL 0x33B162C
	0x01E207F8 ADRP X8, 0x22D3000
	0x01E207FC LDR X8, [X8 + 0xA58]
	0x01E20800 MOV X23, X0
	0x01E20804 LDR X8, [X8]
	0x01E20808 MOV X0, X8
	0x01E2080C BL 0x1C16F10
	0x01E20810 MOV X1, X23
	0x01E20814 MOV X2, X31
	0x01E20818 MOV X22, X0
	0x01E2081C BL 0x3C35934
	0x01E20820 CBZ X20, 0x1E21354
	0x01E20824 STR X22, [X20 + 0x18]
	0x01E20828 LDR X8, [X31 + 0xE8]
	0x01E2082C CBZ X8, 0x1E21354
	0x01E20830 LDR X0, [X8 + 0x18]
	0x01E20834 CBZ X0, 0x1E21354
	0x01E20838 MOV X1, X31
	0x01E2083C BL 0x3C356F8
	0x01E20840 MOV X22, X0
	0x01E20844 MOV X0, X19
	0x01E20848 MOV X1, X31
	0x01E2084C BL 0x3C32E90
	0x01E20850 CBZ X22, 0x1E21354
	0x01E20854 MOV X1, X0
	0x01E20858 MOV X0, X22
	0x01E2085C MOV W2, W31
	0x01E20860 MOV X3, X31
	0x01E20864 BL 0x3C3FEB8
	0x01E20868 LDR X8, [X31 + 0xE8]
	0x01E2086C CBZ X8, 0x1E21354
	0x01E20870 LDR X0, [X8 + 0x18]
	0x01E20874 CBZ X0, 0x1E21354
	0x01E20878 LDRB W8, [X19 + 0x44]
	0x01E2087C MOVZ W9, 0x6
	0x01E20880 MOV X2, X31
	0x01E20884 CMP W8, 0x0
	0x01E20888 MOVZ W8, 0x8
	0x01E2088C CSEL W1, W8, W9, EQ
	0x01E20890 BL 0x3C35770
	0x01E20894 LDR X8, [X31 + 0xE8]
	0x01E20898 CBZ X8, 0x1E21354
	0x01E2089C LDR X0, [X8 + 0x18]
	0x01E208A0 CBZ X0, 0x1E21354
	0x01E208A4 LDR W8, [X31 + 0xF0]
	0x01E208A8 AND W8, W8, 0xFFFFFFFE
	0x01E208AC CMP W8, 0x2
	0x01E208B0 B.NE 0x1E208E0
	0x01E208B4 ADRP X8, 0x22DA000
	0x01E208B8 LDR X8, [X8 + 0x6F0]
	0x01E208BC LDR X1, [X8]
	0x01E208C0 BL 0x21E51FC
	0x01E208C4 LDR X8, [X31 + 0xE8]
	0x01E208C8 CBZ X8, 0x1E21354
	0x01E208CC LDR X0, [X8 + 0x18]
	0x01E208D0 CBZ X0, 0x1E21354
	0x01E208D4 ADRP X8, 0x22DA000
	0x01E208D8 LDR X8, [X8 + 0x6F8]
	0x01E208DC B 0x1E208E8
	0x01E208E0 ADRP X8, 0x22DA000
	0x01E208E4 LDR X8, [X8 + 0x778]
	0x01E208E8 LDR X1, [X8]
	0x01E208EC BL 0x21E51FC
	0x01E208F0 LDR X8, [X31 + 0xE8]
	0x01E208F4 CBZ X8, 0x1E21354
	0x01E208F8 ADRP X23, 0x22DA000
	0x01E208FC LDR X22, [X8 + 0x18]
	0x01E20900 LDR W8, [X31 + 0xF0]
	0x01E20904 LDR X23, [X23 + 0x738]
	0x01E20908 ADD X1, X31, 0x90
	0x01E2090C STR W8, [X31 + 0x90]
	0x01E20910 LDR X0, [X23]
	0x01E20914 BL 0x1C16E04
	0x01E20918 ADRP X8, 0x22DA000
	0x01E2091C LDR X8, [X8 + 0x7D8]
	0x01E20920 MOV X1, X0
	0x01E20924 MOV X2, X21
	0x01E20928 MOV X3, X31

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X21, 0x25B9000
	013 Move W8, [X21+3628]
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {106}
	020 Move X0, 0x22DB000
	021 Move X0, [X0+1528]
	022 Call 0x1C17CF4
	023 Move X0, 0x22DB000
	024 Move X0, [X0+1536]
	025 Call 0x1C17CF4
	026 Move X0, 0x22DB000
	027 Move X0, [X0+1544]
	028 Call 0x1C17CF4
	029 Move X0, 0x22DB000
	030 Move X0, [X0+1552]
	031 Call 0x1C17CF4
	032 Move X0, 0x22DB000
	033 Move X0, [X0+1560]
	034 Call 0x1C17CF4
	035 Move X0, 0x22DB000
	036 Move X0, [X0+1568]
	037 Call 0x1C17CF4
	038 Move X0, 0x22DB000
	039 Move X0, [X0+1576]
	040 Call 0x1C17CF4
	041 Move X0, 0x22DB000
	042 Move X0, [X0+1584]
	043 Call 0x1C17CF4
	044 Move X0, 0x22DB000
	045 Move X0, [X0+1592]
	046 Call 0x1C17CF4
	047 Move X0, 0x22DB000
	048 Move X0, [X0+1600]
	049 Call 0x1C17CF4
	050 Move X0, 0x22DB000
	051 Move X0, [X0+1608]
	052 Call 0x1C17CF4
	053 Move X0, 0x22DB000
	054 Move X0, [X0+1616]
	055 Call 0x1C17CF4
	056 Move X0, 0x22DB000
	057 Move X0, [X0+1624]
	058 Call 0x1C17CF4
	059 Move X0, 0x22DB000
	060 Move X0, [X0+1632]
	061 Call 0x1C17CF4
	062 Move X0, 0x22DB000
	063 Move X0, [X0+1640]
	064 Call 0x1C17CF4
	065 Move X0, 0x22DB000
	066 Move X0, [X0+1648]
	067 Call 0x1C17CF4
	068 Move X0, 0x22DB000
	069 Move X0, [X0+1656]
	070 Call 0x1C17CF4
	071 Move X0, 0x22DB000
	072 Move X0, [X0+1664]
	073 Call 0x1C17CF4
	074 Move X0, 0x22DB000
	075 Move X0, [X0+1672]
	076 Call 0x1C17CF4
	077 Move X0, 0x22D5000
	078 Move X0, [X0+3592]
	079 Call 0x1C17CF4
	080 Move X0, 0x22D4000
	081 Move X0, [X0+1432]
	082 Call 0x1C17CF4
	083 Move X0, 0x22D5000
	084 Move X0, [X0+504]
	085 Call 0x1C17CF4
	086 Move X0, 0x22DB000
	087 Move X0, [X0+1680]
	088 Call 0x1C17CF4
	089 Move X0, 0x22DB000
	090 Move X0, [X0+1688]
	091 Call 0x1C17CF4
	092 Move X0, 0x22DB000
	093 Move X0, [X0+1696]
	094 Call 0x1C17CF4
	095 Move X0, 0x22DB000
	096 Move X0, [X0+1704]
	097 Call 0x1C17CF4
	098 Move X0, 0x22DB000
	099 Move X0, [X0+1712]
	100 Call 0x1C17CF4
	101 Move X0, 0x22D6000
	102 Move X0, [X0+2144]
	103 Call 0x1C17CF4
	104 Move W8, 1
	105 Move [X21+3628], W8
	106 Move [X31+8], X31
	107 Move W8, [X19+69]
	108 Compare W8, 0
	109 JumpIfEqual {112}
	110 Compare X20, 0
	111 JumpIfNotEqual {116}
	112 Move X0, X19
	113 Call AvatarView.InitInternal, X0
	114 Compare X20, 0
	115 JumpIfEqual {570}
	116 Move X22, 0x22D5000
	117 Move X22, [X22+504]
	118 Move [X31+28], W31
	119 Move [X31+24], W31
	120 Move X0, [X20+112]
	121 Move X1, [X22]
	122 Call StatePrimitive`1<Object>.op_Implicit, X0
	123 Move X2, X0
	124 Add X3, X31, 24
	125 Add X4, X31, 28
	126 Move W1, 4
	127 Move X0, X19
	128 Move W5, W31
	129 Call AvatarView.UpdateBodyPart, X0, X1, X2, X3, X4, X5
	130 Move X0, [X20+96]
	131 Move X1, [X22]
	132 Move W21, [X31+28]
	133 Call StatePrimitive`1<Object>.op_Implicit, X0
	134 Move X2, X0
	135 Add X3, X31, 24
	136 Add X4, X31, 28
	137 Move W1, 2
	138 Move X0, X19
	139 Move W5, W21
	140 Call AvatarView.UpdateBodyPart, X0, X1, X2, X3, X4, X5
	141 Move X0, [X20+104]
	142 Move X1, [X22]
	143 Call StatePrimitive`1<Object>.op_Implicit, X0
	144 Move X2, X0
	145 Add X3, X31, 24
	146 Add X4, X31, 28
	147 Move W1, 3
	148 Move X0, X19
	149 Move W5, W21
	150 Call AvatarView.UpdateBodyPart, X0, X1, X2, X3, X4, X5
	151 Move X0, [X20+88]
	152 Move X1, [X22]
	153 Call StatePrimitive`1<Object>.op_Implicit, X0
	154 Move X2, X0
	155 Add X3, X31, 24
	156 Add X4, X31, 28
	157 Move W1, 1
	158 Move X0, X19
	159 Move W5, W21
	160 Call AvatarView.UpdateBodyPart, X0, X1, X2, X3, X4, X5
	161 Move X0, [X20+120]
	162 Move X1, [X22]
	163 Call StatePrimitive`1<Object>.op_Implicit, X0
	164 Move X2, X0
	165 Add X3, X31, 24
	166 Add X4, X31, 28
	167 Move W1, 5
	168 Move X0, X19
	169 Move W5, W21
	170 Call AvatarView.UpdateBodyPart, X0, X1, X2, X3, X4, X5
	171 Move X0, [X20+128]
	172 Move X1, [X22]
	173 Call StatePrimitive`1<Object>.op_Implicit, X0
	174 Move X2, X0
	175 Add X3, X31, 24
	176 Add X4, X31, 28
	177 Move W1, 6
	178 Move X0, X19
	179 Move W5, W21
	180 Call AvatarView.UpdateBodyPart, X0, X1, X2, X3, X4, X5
	181 Move X0, [X20+136]
	182 Move X1, [X22]
	183 Call StatePrimitive`1<Object>.op_Implicit, X0
	184 Move X2, X0
	185 Add X3, X31, 24
	186 Add X4, X31, 28
	187 Move W1, 7
	188 Move X0, X19
	189 Move W5, W21
	190 Call AvatarView.UpdateBodyPart, X0, X1, X2, X3, X4, X5
	191 Move X0, [X20+144]
	192 Move X1, [X22]
	193 Call StatePrimitive`1<Object>.op_Implicit, X0
	194 Move X2, X0
	195 Add X3, X31, 24
	196 Add X4, X31, 28
	197 Move W1, 8
	198 Move X0, X19
	199 Move W5, W21
	200 Call AvatarView.UpdateBodyPart, X0, X1, X2, X3, X4, X5
	201 Move W25, [X31+28]
	202 Compare W25, 0
	203 JumpIfEqual {219}
	204 Move W8, [X19+48]
	205 Compare W8, 0
	206 JumpIfEqual {219}
	207 Move X0, [X19+72]
	208 Compare X0, 0
	209 JumpIfEqual {582}
	210 Move X1, [X19+88]
	211 Move X2, X31
	212 Call Mesh.set_vertices, X0, X1
	213 Move X0, [X19+72]
	214 Compare X0, 0
	215 JumpIfEqual {582}
	216 Move W1, W31
	217 Move X2, X31
	218 Call Mesh.UploadMeshData, X0, X1
	219 Move X8, 0x22DB000
	220 Move X8, [X8+1624]
	221 Move X21, 0x22DB000
	222 Move X22, 0x22DB000
	223 Move X23, 0x22DB000
	224 Move X21, [X21+1528]
	225 Move X22, [X22+1592]
	226 Move X23, [X23+1600]
	227 Move [X31+20], W31
	228 Move X0, [X8]
	229 Move X26, 0x22DB000
	230 Move X27, 0x22DB000
	231 Move X24, 0x22D6000
	232 Move X20, [X20+152]
	233 Move X26, [X26+1536]
	234 Move X27, [X27+1568]
	235 Move X24, [X24+2144]
	236 Call 0x1C17F10
	237 Move X2, [X21]
	238 Move X1, X19
	239 Move X3, X31
	240 Move X21, X0
	241 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	242 Move X2, [X22]
	243 Move X0, X20
	244 Move X1, X21
	245 Call Enumerable.Where, X0, X1
	246 Move X8, [X23]
	247 Move X20, X0
	248 Move X0, X8
	249 Call 0x1C17F10
	250 Move X2, [X26]
	251 Move X1, X19
	252 Move X3, X31
	253 Move X21, X0
	254 Call Func`2<Object, Object>..ctor, X0, X1, X2
	255 Move X2, [X27]
	256 Move X0, X20
	257 Move X1, X21
	258 Call Enumerable.Select, X0, X1
	259 Move X8, [X24]
	260 Move X20, X0
	261 Move W9, [X8+224]
	262 Compare W9, 0
	263 JumpIfNotEqual {267}
	264 Move X0, X8
	265 Call 0x1C17DFC
	266 Move X8, [X24]
	267 Move X9, [X8+184]
	268 Move X23, 0x22DB000
	269 Move X21, [X9+8]
	270 Move X23, [X23+1584]
	271 Compare X21, 0
	272 JumpIfNotEqual {295}
	273 Move W9, [X8+224]
	274 Compare W9, 0
	275 JumpIfNotEqual {279}
	276 Move X0, X8
	277 Call 0x1C17DFC
	278 Move X8, [X24]
	279 Move X9, 0x22DB000
	280 Move X8, [X8+184]
	281 Move X9, [X9+1616]
	282 Move X22, [X8]
	283 Move X0, [X9]
	284 Call 0x1C17F10
	285 Move X8, 0x22DB000
	286 Move X8, [X8+1680]
	287 Move X1, X22
	288 Move X3, X31
	289 Move X21, X0
	290 Move X2, [X8]
	291 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	292 Move X8, [X24]
	293 Move X8, [X8+184]
	294 Move [X8+8], X21
	295 Move X2, [X23]
	296 Move X0, X20
	297 Move X1, X21
	298 Call Enumerable.Where, X0, X1
	299 Move X8, [X24]
	300 Move X20, X0
	301 Move W9, [X8+224]
	302 Compare W9, 0
	303 JumpIfNotEqual {307}
	304 Move X0, X8
	305 Call 0x1C17DFC
	306 Move X8, [X24]
	307 Move X9, [X8+184]
	308 Move X23, 0x22DB000
	309 Move X21, [X9+16]
	310 Move X23, [X23+1560]
	311 Compare X21, 0
	312 JumpIfNotEqual {335}
	313 Move W9, [X8+224]
	314 Compare W9, 0
	315 JumpIfNotEqual {319}
	316 Move X0, X8
	317 Call 0x1C17DFC
	318 Move X8, [X24]
	319 Move X9, 0x22DB000
	320 Move X8, [X8+184]
	321 Move X9, [X9+1608]
	322 Move X22, [X8]
	323 Move X0, [X9]
	324 Call 0x1C17F10
	325 Move X8, 0x22DB000
	326 Move X8, [X8+1688]
	327 Move X1, X22
	328 Move X3, X31
	329 Move X21, X0
	330 Move X2, [X8]
	331 Call Func`2<Object, Int32Enum>..ctor, X0, X1, X2
	332 Move X8, [X24]
	333 Move X8, [X8+184]
	334 Move [X8+16], X21
	335 Move X2, [X23]
	336 Move X0, X20
	337 Move X1, X21
	338 Call 0x21C6F1C, X0, X1
	339 Move X8, [X24]
	340 Move X20, X0
	341 Move W9, [X8+224]
	342 Compare W9, 0
	343 JumpIfNotEqual {347}
	344 Move X0, X8
	345 Call 0x1C17DFC
	346 Move X8, [X24]
	347 Move X9, [X8+184]
	348 Move X21, [X9+24]
	349 Compare X21, 0
	350 JumpIfNotEqual {373}
	351 Move W9, [X8+224]
	352 Compare W9, 0
	353 JumpIfNotEqual {357}
	354 Move X0, X8
	355 Call 0x1C17DFC
	356 Move X8, [X24]
	357 Move X9, 0x22DB000
	358 Move X8, [X8+184]
	359 Move X9, [X9+1648]
	360 Move X22, [X8]
	361 Move X0, [X9]
	362 Call 0x1C17F10
	363 Move X8, 0x22DB000
	364 Move X8, [X8+1696]
	365 Move X1, X22
	366 Move X3, X31
	367 Move X21, X0
	368 Move X2, [X8]
	369 Call Func`2<Object, Int32Enum>..ctor, X0, X1, X2
	370 Move X8, [X24]
	371 Move X9, [X8+184]
	372 Move [X9+24], X21
	373 Move W9, [X8+224]
	374 Compare W9, 0
	375 JumpIfNotEqual {379}
	376 Move X0, X8
	377 Call 0x1C17DFC
	378 Move X8, [X24]
	379 Move X9, [X8+184]
	380 Move X26, 0x22DB000
	381 Move X22, [X9+32]
	382 Move X26, [X26+1576]
	383 Compare X22, 0
	384 JumpIfNotEqual {407}
	385 Move W9, [X8+224]
	386 Compare W9, 0
	387 JumpIfNotEqual {391}
	388 Move X0, X8
	389 Call 0x1C17DFC
	390 Move X8, [X24]
	391 Move X9, 0x22DB000
	392 Move X8, [X8+184]
	393 Move X9, [X9+1640]
	394 Move X23, [X8]
	395 Move X0, [X9]
	396 Call 0x1C17F10
	397 Move X8, 0x22DB000
	398 Move X8, [X8+1704]
	399 Move X1, X23
	400 Move X3, X31
	401 Move X22, X0
	402 Move X2, [X8]
	403 Call Func`2<Object, Object>..ctor, X0, X1, X2
	404 Move X8, [X24]
	405 Move X8, [X8+184]
	406 Move [X8+32], X22
	407 Move X3, [X26]
	408 Move X0, X20
	409 Move X1, X21
	410 Move X2, X22
	411 Call Enumerable.ToDictionary, X0, X1, X2
	412 Move X23, [X19+112]
	413 Compare X23, 0
	414 JumpIfEqual {582}
	415 Move W8, [X23+24]
	416 NotImplemented "Instruction CMP not yet implemented."
	417 Move X27, 0x22DB000
	418 Move X27, [X27+1544]
	419 Move X20, X0
	420 Move W26, W31
	421 NotImplemented "Instruction CMP not yet implemented."
	422 Add X8, X23, W26
	423 Move X21, [X8+32]
	424 Compare X21, 0
	425 JumpIfEqual {582}
	426 Compare X20, 0
	427 JumpIfEqual {582}
	428 Move W1, [X21+16]
	429 Move X3, [X27]
	430 NotImplemented "Instruction CMP not yet implemented."
	431 Add X2, X31, 8
	432 Move X0, X20
	433 NotImplemented "Instruction CSET not yet implemented."
	434 Call Dictionary`2<Int32Enum, Object>.TryGetValue, X0, X1, X2
	435 Move X2, [X31+8]
	436 Add X4, X31, 20
	437 Move X0, X19
	438 Move X1, X21
	439 Move W3, W22
	440 Call AvatarView.UpdateAccessory, X0, X1, X2, X3, X4
	441 Move W8, [X23+24]
	442 Add W26, W26, 1
	443 NotImplemented "Instruction CMP not yet implemented."
	444 Move X0, [X24]
	445 Move X20, [X19+112]
	446 Move W8, [X0+224]
	447 Compare W8, 0
	448 JumpIfNotEqual {451}
	449 Call 0x1C17DFC
	450 Move X0, [X24]
	451 Move X8, [X0+184]
	452 Move X23, 0x22DB000
	453 Move X21, [X8+40]
	454 Move X23, [X23+1552]
	455 Compare X21, 0
	456 JumpIfNotEqual {478}
	457 Move W8, [X0+224]
	458 Compare W8, 0
	459 JumpIfNotEqual {462}
	460 Call 0x1C17DFC
	461 Move X0, [X24]
	462 Move X9, 0x22DB000
	463 Move X8, [X0+184]
	464 Move X9, [X9+1632]
	465 Move X22, [X8]
	466 Move X0, [X9]
	467 Call 0x1C17F10
	468 Move X8, 0x22DB000
	469 Move X8, [X8+1712]
	470 Move X1, X22
	471 Move X3, X31
	472 Move X21, X0
	473 Move X2, [X8]
	474 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	475 Move X8, [X24]
	476 Move X8, [X8+184]
	477 Move [X8+40], X21
	478 Move X2, [X23]
	479 Move X0, X20
	480 Move X1, X21
	481 Call Enumerable.Any, X0, X1
	482 Move W8, [X31+20]
	483 Move W20, W0
	484 Compare W8, 0
	485 JumpIfNotEqual {492}
	486 Move W8, [X31+24]
	487 And W8, W20, W8
	488 Move TEMP, X8
	489 And TEMP, TEMP, 1
	490 Compare TEMP, 1
	491 JumpIfNotEqual {567}
	492 Move TEMP, X20
	493 And TEMP, TEMP, 1
	494 Compare TEMP, 1
	495 JumpIfNotEqual {563}
	496 Move X21, [X19+128]
	497 Compare X21, 0
	498 JumpIfNotEqual {511}
	499 Move X8, 0x22D5000
	500 Move X8, [X8+3592]
	501 Move X0, [X8]
	502 Call 0x1C17F10
	503 Move X8, 0x22DB000
	504 Move X8, [X8+1672]
	505 Move X21, X0
	506 Move X1, [X8]
	507 Call HashSet`1<Int32>..ctor, X0
	508 Move [X19+128], X21
	509 Compare X21, 0
	510 JumpIfEqual {582}
	511 Move X8, 0x22DB000
	512 Move X8, [X8+1656]
	513 Move X0, X21
	514 Move X1, [X8]
	515 Call HashSet`1<Int32>.Clear, X0
	516 Move X22, [X19+112]
	517 Compare X22, 0
	518 JumpIfEqual {582}
	519 Move W8, [X22+24]
	520 NotImplemented "Instruction CMP not yet implemented."
	521 Move X24, 0x22D4000
	522 Move X25, 0x22DB000
	523 Move X24, [X24+1432]
	524 Move X25, [X25+1664]
	525 Move W23, W31
	526 NotImplemented "Instruction CMP not yet implemented."
	527 Add X8, X22, W23
	528 Move X26, [X8+32]
	529 Compare X26, 0
	530 JumpIfEqual {582}
	531 Move X0, [X24]
	532 Move X21, [X26+32]
	533 Move W8, [X0+224]
	534 Compare W8, 0
	535 JumpIfNotEqual {537}
	536 Call 0x1C17DFC
	537 Move X0, X21
	538 Move X1, X31
	539 Move X2, X31
	540 Call Object.op_Inequality, X0, X1
	541 Move TEMP, X0
	542 And TEMP, TEMP, 1
	543 Compare TEMP, 1
	544 JumpIfNotEqual {560}
	545 Move X8, [X26+32]
	546 Compare X8, 0
	547 JumpIfEqual {582}
	548 Move W9, [X8+32]
	549 Compare W9, 0
	550 JumpIfEqual {560}
	551 Move X8, [X8+96]
	552 Compare X8, 0
	553 JumpIfEqual {582}
	554 Move X0, [X19+128]
	555 Compare X0, 0
	556 JumpIfEqual {582}
	557 Move X1, [X8+48]
	558 Move X2, [X25]
	559 Call HashSet`1<Int32>.UnionWith, X0, X1
	560 Move W8, [X22+24]
	561 Add W23, W23, 1
	562 NotImplemented "Instruction CMP not yet implemented."
	563 Move X2, [X19+128]
	564 And W1, W20, 1
	565 Move X0, X19
	566 Call AvatarView.UpdateBodyPartCulling, X0, X1, X2
	567 Move W1, [X19+68]
	568 Move X0, X19
	569 Call AvatarView.SetIsLocalAvatar, X0, X1
	570 Move X20, [X31+96]
	571 Move X19, [X31+104]
	572 Move X22, [X31+80]
	573 Move X21, [X31+88]
	574 Move X24, [X31+64]
	575 Move X23, [X31+72]
	576 Move X26, [X31+48]
	577 Move X25, [X31+56]
	578 Move X30, [X31+32]
	579 Move X27, [X31+40]
	580 Add X31, X31, 112
	581 Return 
	582 Call 0x1C17F20
	583 Call 0x1C17F28

Method: System.Boolean TryGetCageVertexAtIndex(System.Int32 index, out UnityEngine.Vector3 cageVertex)

Disassembly:
	0x01E23E50 LDR X0, [X22]
	0x01E23E54 LDR W8, [X0 + 0xE0]
	0x01E23E58 CBNZ W8, 0x1E23E60
	0x01E23E5C BL 0x1C16DFC
	0x01E23E60 MOV X0, X20
	0x01E23E64 MOV X1, X31
	0x01E23E68 MOV X2, X31
	0x01E23E6C BL 0x3C3883C
	0x01E23E70 TBZ X0, 0x0, 0x1E23EC0
	0x01E23E74 MOV X0, X31
	0x01E23E78 BL 0x3C047F8
	0x01E23E7C LDR X8, [X22]
	0x01E23E80 MOV X21, X0
	0x01E23E84 LDR W9, [X8 + 0xE0]
	0x01E23E88 CBNZ W9, 0x1E23E94
	0x01E23E8C MOV X0, X8
	0x01E23E90 BL 0x1C16DFC
	0x01E23E94 MOV X0, X21
	0x01E23E98 MOV X1, X31
	0x01E23E9C MOV X2, X31
	0x01E23EA0 BL 0x3C354F8
	0x01E23EA4 TBZ X0, 0x0, 0x1E23EC0
	0x01E23EA8 MOV X0, X31
	0x01E23EAC BL 0x3C047F8
	0x01E23EB0 CBZ X0, 0x1E23F80
	0x01E23EB4 MOV X1, X31
	0x01E23EB8 BL 0x3C32E90
	0x01E23EBC MOV X20, X0
	0x01E23EC0 LDR X0, [X22]
	0x01E23EC4 LDR W8, [X0 + 0xE0]
	0x01E23EC8 CBNZ W8, 0x1E23ED0
	0x01E23ECC BL 0x1C16DFC
	0x01E23ED0 MOV X0, X20
	0x01E23ED4 MOV X1, X31
	0x01E23ED8 MOV X2, X31
	0x01E23EDC BL 0x3C354F8
	0x01E23EE0 TBZ X0, 0x0, 0x1E23F68
	0x01E23EE4 CBZ X20, 0x1E23F80
	0x01E23EE8 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+88]
	005 Move X19, X2
	006 Compare X8, 0
	007 JumpIfEqual {17}
	008 Move W9, [X8+24]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X9, W1
	012 Move W10, 12
	013 NotImplemented "Instruction MADD not yet implemented."
	014 Add X8, X9, 32
	015 Add X9, X9, 40
	016 Move W0, 1
	017 Move X20, 0x25B6000
	018 Move W8, [X20+1923]
	019 Compare W8, 0
	020 JumpIfNotEqual {26}
	021 Move X0, 0x22D1000
	022 Move X0, [X0+1440]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1923], W8
	026 Move X8, 0x22D1000
	027 Move X8, [X8+1440]
	028 Move W0, W31
	029 Move X8, [X8]
	030 Move X8, [X8+184]
	031 Add X9, X8, 8
	032 Move V0, [X8]
	033 Move V1, [X9]
	034 Move [X19], D0
	035 Move [X19+8], S1
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Return X0
	040 Call 0x1C17F28

Method: System.Void InitInternal()

Disassembly:
	0x01E2092C LDR X8, [X8]
	0x01E20930 MOV X0, X8
	0x01E20934 BL 0x3227BD4
	0x01E20938 CBZ X22, 0x1E21354
	0x01E2093C MOV X1, X0
	0x01E20940 MOV X0, X22
	0x01E20944 MOV X2, X31
	0x01E20948 BL 0x3C38A84
	0x01E2094C LDR X8, [X31 + 0x108]
	0x01E20950 CBZ X8, 0x1E21354
	0x01E20954 LDR X20, [X8 + 0x68]
	0x01E20958 CBZ X20, 0x1E21354
	0x01E2095C LDR W8, [X20 + 0x18]
	0x01E20960 CMP W8, 0x1
	0x01E20964 B.LT 0x1E209E0
	0x01E20968 MOV W22, W31
	0x01E2096C CMP W22, W8
	0x01E20970 B.CS 0x1E21670
	0x01E20974 ADD X8, X20, W22, 0x3, SXTW
	0x01E20978 LDR X24, [X8 + 0x20]
	0x01E2097C CBZ X24, 0x1E21354
	0x01E20980 LDR X8, [X19 + 0x60]
	0x01E20984 CBZ X8, 0x1E21354
	0x01E20988 LDR W9, [X24 + 0x18]
	0x01E2098C LDR W10, [X8 + 0x18]
	0x01E20990 SUB W9, W9, 0x1
	0x01E20994 CMP W9, W10
	0x01E20998 B.CS 0x1E21670
	0x01E2099C ADD X8, X8, W9, 0x3, SXTW
	0x01E209A0 LDR X21, [X8 + 0x20]
	0x01E209A4 CBZ X21, 0x1E21354
	0x01E209A8 LDP S1, S2, [X24 + 0x20]
	0x01E209AC LDR V0, [X24 + 0x1C]
	0x01E209B0 MOV X0, X21
	0x01E209B4 MOV X1, X31
	0x01E209B8 BL 0x3C3EC04
	0x01E209BC LDP S0, S1, [X24 + 0x28]
	0x01E209C0 LDP S2, S3, [X24 + 0x30]
	0x01E209C4 MOV X0, X21
	0x01E209C8 MOV X1, X31
	0x01E209CC BL 0x3C3F8B8
	0x01E209D0 LDR W8, [X20 + 0x18]
	0x01E209D4 ADD W22, W22, 0x1
	0x01E209D8 CMP W22, W8
	0x01E209DC B.LT 0x1E2096C
	0x01E209E0 ADRP X20, 0x22DA000
	0x01E209E4 LDR X20, [X20 + 0x740]
	0x01E209E8 LDR X0, [X20]
	0x01E209EC LDR W8, [X0 + 0xE0]
	0x01E209F0 CBNZ W8, 0x1E209FC
	0x01E209F4 BL 0x1C16DFC
	0x01E209F8 LDR X0, [X20]
	0x01E209FC LDR X8, [X0 + 0xB8]
	0x01E20A00 LDR X0, [X8]
	0x01E20A04 CBZ X0, 0x1E21354
	0x01E20A08 ADRP X8, 0x22DA000
	0x01E20A0C LDR W1, [X31 + 0xF0]
	0x01E20A10 LDR X8, [X8 + 0x750]
	0x01E20A14 LDR X2, [X8]
	0x01E20A18 BL 0x2A38F40
	0x01E20A1C TBZ X0, 0x0, 0x1E20A6C
	0x01E20A20 LDR X0, [X20]
	0x01E20A24 LDR W8, [X0 + 0xE0]
	0x01E20A28 CBNZ W8, 0x1E20A34
	0x01E20A2C BL 0x1C16DFC
	0x01E20A30 LDR X0, [X20]
	0x01E20A34 LDR X8, [X0 + 0xB8]
	0x01E20A38 LDR X0, [X8]
	0x01E20A3C CBZ X0, 0x1E21354
	0x01E20A40 ADRP X8, 0x22DA000
	0x01E20A44 LDR W1, [X31 + 0xF0]
	0x01E20A48 LDR X8, [X8 + 0x768]
	0x01E20A4C LDR X2, [X8]
	0x01E20A50 ADD X8, X31, 0x90
	0x01E20A54 BL 0x2A38B68
	0x01E20A58 LDR V0, [X31 + 0x9]
	0x01E20A5C LDR X8, [X31 + 0xA0]
	0x01E20A60 STR V0, [X31 + 0xD]
	0x01E20A64 STR X8, [X31 + 0xE0]
	0x01E20A68 B 0x1E20AD0
	0x01E20A6C LDR W8, [X31 + 0xF0]
	0x01E20A70 LDR X0, [X23]
	0x01E20A74 ADD X1, X31, 0x90
	0x01E20A78 STR W8, [X31 + 0x90]
	0x01E20A7C BL 0x1C16E04
	0x01E20A80 ADRP X8, 0x22DA000
	0x01E20A84 LDR X8, [X8 + 0x7E8]
	0x01E20A88 MOV X1, X0
	0x01E20A8C MOV X2, X31
	0x01E20A90 LDR X8, [X8]
	0x01E20A94 MOV X0, X8
	0x01E20A98 BL 0x321EFD0
	0x01E20A9C ADRP X8, 0x22D3000
	0x01E20AA0 LDR X8, [X8 + 0xA28]
	0x01E20AA4 MOV X21, X0
	0x01E20AA8 LDR X8, [X8]
	0x01E20AAC LDR W9, [X8 + 0xE0]
	0x01E20AB0 CBNZ W9, 0x1E20ABC
	0x01E20AB4 MOV X0, X8
	0x01E20AB8 BL 0x1C16DFC
	0x01E20ABC MOV X0, X21
	0x01E20AC0 MOV X1, X31
	0x01E20AC4 BL 0x3C06A04
	0x01E20AC8 STP X31, X31, [X31 + 0xD0]
	0x01E20ACC STR X31, [X31 + 0xE0]
	0x01E20AD0 LDR X8, [X31 + 0xE8]
	0x01E20AD4 CBZ X8, 0x1E21354
	0x01E20AD8 LDR X0, [X8 + 0x18]
	0x01E20ADC CBZ X0, 0x1E21354
	0x01E20AE0 LDR W20, [X31 + 0xF0]
	0x01E20AE4 MOV X1, X31
	0x01E20AE8 BL 0x3C356F8
	0x01E20AEC LDR X8, [X31 + 0x108]
	0x01E20AF0 CBZ X8, 0x1E21354
	0x01E20AF4 AND W9, W20, 0xFFFFFFFE
	0x01E20AF8 CMP W9, 0x2
	0x01E20AFC B.NE 0x1E20D64
	0x01E20B00 CBZ X0, 0x1E21354
	0x01E20B04 LDP S2, S3, [X8 + 0x34]
	0x01E20B08 LDP S0, S1, [X8 + 0x2C]
	0x01E20B0C MOV X1, X31
	0x01E20B10 BL 0x3C3F8B8
	0x01E20B14 LDR W8, [X31 + 0xF0]
	0x01E20B18 CMP W8, 0x2
	0x01E20B1C B.NE 0x1E20CB8
	0x01E20B20 LDR X8, [X31 + 0xE8]
	0x01E20B24 CBZ X8, 0x1E21354
	0x01E20B28 LDR X0, [X8 + 0x18]
	0x01E20B2C CBZ X0, 0x1E21354
	0x01E20B30 MOV X1, X31
	0x01E20B34 BL 0x3C356F8
	0x01E20B38 CBZ X0, 0x1E21354
	0x01E20B3C FMOV S0, -1
	0x01E20B40 FMOV S1, 1
	0x01E20B44 FMOV S2, 1
	0x01E20B48 MOV X1, X31
	0x01E20B4C BL 0x3C3FC4C
	0x01E20B50 LDR X8, [X31 + 0xE8]
	0x01E20B54 CBZ X8, 0x1E21354
	0x01E20B58 LDR X0, [X8 + 0x18]
	0x01E20B5C CBZ X0, 0x1E21354
	0x01E20B60 MOV X1, X31
	0x01E20B64 BL 0x3C356F8
	0x01E20B68 CBZ X0, 0x1E21354
	0x01E20B6C MOV X1, X31
	0x01E20B70 BL 0x3C3F830
	0x01E20B74 ADRP X20, 0x25B8000
	0x01E20B78 LDRB W8, [X20 + 0x786]
	0x01E20B7C MOV V8.16B, V0.16B
	0x01E20B80 MOV V9.16B, V1.16B
	0x01E20B84 MOV V10.16B, V2.16B
	0x01E20B88 MOV V11.16B, V3.16B
	0x01E20B8C CBNZ W8, 0x1E20BA4
	0x01E20B90 ADRP X0, 0x22D3000
	0x01E20B94 LDR X0, [X0 + 0x5A0]
	0x01E20B98 BL 0x1C16CF4
	0x01E20B9C MOVZ W8, 0x1
	0x01E20BA0 STRB W8, [X20 + 0x786]
	0x01E20BA4 ADRP X20, 0x22D3000
	0x01E20BA8 LDR X20, [X20 + 0x5A0]
	0x01E20BAC MOV V0.16B, V8.16B
	0x01E20BB0 MOV V1.16B, V9.16B
	0x01E20BB4 MOV V2.16B, V10.16B
	0x01E20BB8 LDR X8, [X20]
	0x01E20BBC MOV V3.16B, V11.16B
	0x01E20BC0 MOV X0, X31
	0x01E20BC4 LDR X8, [X8 + 0xB8]
	0x01E20BC8 LDP S4, S5, [X8 + 0x18]
	0x01E20BCC LDR V6, [X8 + 0x20]
	0x01E20BD0 BL 0x3C2A9FC
	0x01E20BD4 LDR X8, [X31 + 0xE8]
	0x01E20BD8 CBZ X8, 0x1E21354
	0x01E20BDC LDR X0, [X8 + 0x18]
	0x01E20BE0 CBZ X0, 0x1E21354
	0x01E20BE4 MOV X1, X31
	0x01E20BE8 MOV V10.16B, V0.16B
	0x01E20BEC MOV V8.16B, V1.16B
	0x01E20BF0 MOV V9.16B, V2.16B
	0x01E20BF4 BL 0x3C356F8
	0x01E20BF8 CBZ X0, 0x1E21354
	0x01E20BFC MOV X1, X31
	0x01E20C00 BL 0x3C3F830
	0x01E20C04 ADRP X21, 0x25B8000
	0x01E20C08 LDRB W8, [X21 + 0xA1F]
	0x01E20C0C MOV V11.16B, V0.16B
	0x01E20C10 MOV V12.16B, V1.16B
	0x01E20C14 MOV V13.16B, V2.16B
	0x01E20C18 MOV V14.16B, V3.16B
	0x01E20C1C CBNZ W8, 0x1E20C34
	0x01E20C20 ADRP X0, 0x22D3000
	0x01E20C24 LDR X0, [X0 + 0x5A0]
	0x01E20C28 BL 0x1C16CF4
	0x01E20C2C MOVZ W8, 0x1
	0x01E20C30 STRB W8, [X21 + 0xA1F]
	0x01E20C34 LDR X8, [X20]
	0x01E20C38 MOV V0.16B, V11.16B
	0x01E20C3C MOV V1.16B, V12.16B
	0x01E20C40 MOV V2.16B, V13.16B
	0x01E20C44 LDR X8, [X8 + 0xB8]
	0x01E20C48 MOV V3.16B, V14.16B
	0x01E20C4C MOV X0, X31
	0x01E20C50 LDP S4, S5, [X8 + 0x48]
	0x01E20C54 LDR V6, [X8 + 0x50]
	0x01E20C58 BL 0x3C2A9FC
	0x01E20C5C LDR X8, [X31 + 0xE8]
	0x01E20C60 CBZ X8, 0x1E21354
	0x01E20C64 LDR X0, [X8 + 0x18]
	0x01E20C68 CBZ X0, 0x1E21354
	0x01E20C6C MOV X1, X31
	0x01E20C70 MOV V11.16B, V0.16B
	0x01E20C74 MOV V12.16B, V1.16B
	0x01E20C78 MOV V13.16B, V2.16B
	0x01E20C7C FNEG S10, S10
	0x01E20C80 BL 0x3C356F8
	0x01E20C84 MOV X20, X0
	0x01E20C88 MOV V0.16B, V11.16B
	0x01E20C8C MOV V1.16B, V12.16B
	0x01E20C90 MOV V2.16B, V13.16B
	0x01E20C94 MOV V3.16B, V10.16B
	0x01E20C98 MOV V4.16B, V8.16B
	0x01E20C9C MOV V5.16B, V9.16B
	0x01E20CA0 MOV X0, X31
	0x01E20CA4 BL 0x3C2A810
	0x01E20CA8 CBZ X20, 0x1E21354
	0x01E20CAC MOV X0, X20
	0x01E20CB0 MOV X1, X31
	0x01E20CB4 BL 0x3C3F8B8
	0x01E20CB8 LDR X8, [X31 + 0xE8]
	0x01E20CBC CBZ X8, 0x1E21354
	0x01E20CC0 LDR X0, [X8 + 0x18]
	0x01E20CC4 CBZ X0, 0x1E21354
	0x01E20CC8 ADRP X8, 0x22D5000
	0x01E20CCC LDR X8, [X8 + 0x168]
	0x01E20CD0 LDR X1, [X8]
	0x01E20CD4 BL 0x21E52E4
	0x01E20CD8 LDR X8, [X31 + 0x108]
	0x01E20CDC CBZ X8, 0x1E21354
	0x01E20CE0 CBZ X0, 0x1E21354
	0x01E20CE4 LDR X1, [X8 + 0x40]
	0x01E20CE8 MOV X2, X31
	0x01E20CEC BL 0x3C16D40
	0x01E20CF0 LDR X8, [X31 + 0xE8]
	0x01E20CF4 CBZ X8, 0x1E21354
	0x01E20CF8 LDR X0, [X8 + 0x18]
	0x01E20CFC CBZ X0, 0x1E21354
	0x01E20D00 ADRP X8, 0x22DA000
	0x01E20D04 LDR X8, [X8 + 0x780]
	0x01E20D08 LDR X1, [X8]
	0x01E20D0C BL 0x21E52E4
	0x01E20D10 LDR X8, [X31 + 0xE8]
	0x01E20D14 CBZ X8, 0x1E21354
	0x01E20D18 STR X0, [X8 + 0x20]
	0x01E20D1C LDR X9, [X31 + 0x108]
	0x01E20D20 MOV X20, X0
	0x01E20D24 CBZ X9, 0x1E21354
	0x01E20D28 LDR X1, [X9 + 0x48]
	0x01E20D2C STR X1, [X8 + 0x30]
	0x01E20D30 CBZ X20, 0x1E21354
	0x01E20D34 MOV X0, X20
	0x01E20D38 MOV X2, X31
	0x01E20D3C BL 0x3C13558
	0x01E20D40 LDR V0, [X31 + 0xD]
	0x01E20D44 LDR X8, [X31 + 0xE0]
	0x01E20D48 ADD X1, X31, 0xB0
	0x01E20D4C MOV X0, X20
	0x01E20D50 MOV X2, X31
	0x01E20D54 STR V0, [X31 + 0xB]
	0x01E20D58 STR X8, [X31 + 0xC0]
	0x01E20D5C BL 0x3C12AD4
	0x01E20D60 B 0x1E214EC
	0x01E20D64 CBZ X0, 0x1E21354
	0x01E20D68 LDP S1, S2, [X8 + 0x24]
	0x01E20D6C LDR V0, [X8 + 0x20]
	0x01E20D70 MOV X1, X31
	0x01E20D74 BL 0x3C3EC04
	0x01E20D78 LDR X8, [X31 + 0xE8]
	0x01E20D7C CBZ X8, 0x1E21354
	0x01E20D80 LDR X0, [X8 + 0x18]
	0x01E20D84 CBZ X0, 0x1E21354
	0x01E20D88 MOV X1, X31
	0x01E20D8C BL 0x3C356F8
	0x01E20D90 LDR X8, [X31 + 0x108]
	0x01E20D94 CBZ X8, 0x1E21354
	0x01E20D98 CBZ X0, 0x1E21354
	0x01E20D9C LDP S2, S3, [X8 + 0x34]
	0x01E20DA0 LDP S0, S1, [X8 + 0x2C]
	0x01E20DA4 MOV X1, X31
	0x01E20DA8 BL 0x3C3F8B8
	0x01E20DAC LDR X8, [X31 + 0xE8]
	0x01E20DB0 CBZ X8, 0x1E21354
	0x01E20DB4 LDR X0, [X8 + 0x18]
	0x01E20DB8 CBZ X0, 0x1E21354
	0x01E20DBC ADRP X8, 0x22DA000
	0x01E20DC0 LDR X8, [X8 + 0x788]
	0x01E20DC4 LDR X1, [X8]
	0x01E20DC8 BL 0x21E52E4
	0x01E20DCC LDR X8, [X31 + 0x108]
	0x01E20DD0 CBZ X8, 0x1E21354
	0x01E20DD4 MOV X21, X0
	0x01E20DD8 CBZ X0, 0x1E21354
	0x01E20DDC LDR X1, [X8 + 0x40]
	0x01E20DE0 MOV X0, X21
	0x01E20DE4 MOV X2, X31
	0x01E20DE8 BL 0x3C16EC8
	0x01E20DEC LDR X8, [X31 + 0xE8]
	0x01E20DF0 CBZ X8, 0x1E21354
	0x01E20DF4 STR X21, [X8 + 0x28]
	0x01E20DF8 LDR X8, [X31 + 0x108]
	0x01E20DFC CBZ X8, 0x1E21354
	0x01E20E00 LDR X8, [X8 + 0x48]
	0x01E20E04 STR X27, [X31 + 0x8]
	0x01E20E08 CBZ X8, 0x1E21354
	0x01E20E0C ADRP X9, 0x22DA000
	0x01E20E10 LDR X9, [X9 + 0x7A0]
	0x01E20E14 LDR W1, [X8 + 0x18]
	0x01E20E18 LDR X0, [X9]
	0x01E20E1C BL 0x1C16D6C
	0x01E20E20 LDR X8, [X31 + 0x108]
	0x01E20E24 CBZ X8, 0x1E21354
	0x01E20E28 ADRP X25, 0x22D5000
	0x01E20E2C ADRP X27, 0x22DA000
	0x01E20E30 ADRP X28, 0x22D7000
	0x01E20E34 ADRP X29, 0x22DA000
	0x01E20E38 LDR X25, [X25 + 0x888]
	0x01E20E3C LDR X27, [X27 + 0x7A8]
	0x01E20E40 LDR X28, [X28 + 0x220]
	0x01E20E44 LDR X29, [X29 + 0x798]
	0x01E20E48 MOV X22, X0
	0x01E20E4C MOVZ W24, 0x4
	0x01E20E50 LDR X8, [X8 + 0x48]
	0x01E20E54 CBZ X8, 0x1E21354
	0x01E20E58 LDR W9, [X8 + 0x18]
	0x01E20E5C SUB X20, X24, 0x4
	0x01E20E60 CMP W20, W9
	0x01E20E64 B.GE 0x1E20FC4
	0x01E20E68 CMP W20, W9
	0x01E20E6C B.CS 0x1E21670
	0x01E20E70 LDR X0, [X8, X24, LSL #3]
	0x01E20E74 CBZ X0, 0x1E21354
	0x01E20E78 MOV X1, X31
	0x01E20E7C BL 0x3C389D4
	0x01E20E80 CBZ X0, 0x1E21354
	0x01E20E84 LDR X1, [X25]
	0x01E20E88 MOV X2, X31
	0x01E20E8C BL 0x322BD1C
	0x01E20E90 LDR X8, [X31 + 0x108]
	0x01E20E94 CBZ X8, 0x1E21354
	0x01E20E98 LDR X8, [X8 + 0x48]
	0x01E20E9C CBZ X8, 0x1E21354
	0x01E20EA0 LDR W9, [X8 + 0x18]
	0x01E20EA4 CMP W20, W9
	0x01E20EA8 B.CS 0x1E21670
	0x01E20EAC LDR X23, [X8, X24, LSL #3]
	0x01E20EB0 TBZ X0, 0x0, 0x1E20F74
	0x01E20EB4 LDR X0, [X26]
	0x01E20EB8 LDR W8, [X0 + 0xE0]
	0x01E20EBC CBNZ W8, 0x1E20EC4
	0x01E20EC0 BL 0x1C16DFC
	0x01E20EC4 LDR X1, [X27]
	0x01E20EC8 MOV X0, X23
	0x01E20ECC BL 0x222D35C
	0x01E20ED0 CBZ X22, 0x1E21354
	0x01E20ED4 MOV X23, X0
	0x01E20ED8 CBZ X0, 0x1E21640
	0x01E20EDC LDR X8, [X22]
	0x01E20EE0 MOV X0, X23
	0x01E20EE4 LDR X1, [X8 + 0x40]
	0x01E20EE8 BL 0x1C16E00
	0x01E20EEC CBZ X0, 0x1E21634
	0x01E20EF0 LDR W8, [X22 + 0x18]
	0x01E20EF4 CMP W20, W8
	0x01E20EF8 B.CS 0x1E21670
	0x01E20EFC STR X23, [X22, X24, LSL #3]
	0x01E20F00 LDP S2, S3, [X19 + 0x3C]
	0x01E20F04 LDP S0, S1, [X19 + 0x34]
	0x01E20F08 LDR X1, [X28]
	0x01E20F0C MOV X0, X23
	0x01E20F10 MOV X2, X31
	0x01E20F14 BL 0x3C1498C
	0x01E20F18 LDR X8, [X31 + 0xE8]
	0x01E20F1C CBZ X8, 0x1E21354
	0x01E20F20 LDR W9, [X22 + 0x18]
	0x01E20F24 CMP W20, W9
	0x01E20F28 B.CS 0x1E21670
	0x01E20F2C LDR X0, [X8 + 0x48]
	0x01E20F30 CBZ X0, 0x1E21354
	0x01E20F34 LDR W10, [X0 + 0x1C]
	0x01E20F38 LDR X1, [X22, X24, LSL #3]
	0x01E20F3C LDR X8, [X0 + 0x10]
	0x01E20F40 LDR X9, [X29]
	0x01E20F44 ADD W10, W10, 0x1
	0x01E20F48 STR W10, [X0 + 0x1C]
	0x01E20F4C CBZ X8, 0x1E21354
	0x01E20F50 LDRSW X10, [X0 + 0x18]
	0x01E20F54 LDR W11, [X8 + 0x18]
	0x01E20F58 CMP W10, W11
	0x01E20F5C B.CS 0x1E20FA4
	0x01E20F60 ADD W9, W10, 0x1
	0x01E20F64 ADD X8, X8, X10, 0x3, LSL
	0x01E20F68 STR W9, [X0 + 0x18]
	0x01E20F6C STR X1, [X8 + 0x20]
	0x01E20F70 B 0x1E20FB4
	0x01E20F74 CBZ X22, 0x1E21354
	0x01E20F78 CBZ X23, 0x1E20F90
	0x01E20F7C LDR X8, [X22]
	0x01E20F80 MOV X0, X23
	0x01E20F84 LDR X1, [X8 + 0x40]
	0x01E20F88 BL 0x1C16E00
	0x01E20F8C CBZ X0, 0x1E21634
	0x01E20F90 LDR W8, [X22 + 0x18]
	0x01E20F94 CMP W20, W8
	0x01E20F98 B.CS 0x1E21670
	0x01E20F9C STR X23, [X22, X24, LSL #3]
	0x01E20FA0 B 0x1E20FB4
	0x01E20FA4 LDR X8, [X9 + 0x20]
	0x01E20FA8 LDR X8, [X8 + 0xC0]
	0x01E20FAC LDR X2, [X8 + 0x70]
	0x01E20FB0 BL 0x301BF90
	0x01E20FB4 LDR X8, [X31 + 0x108]
	0x01E20FB8 ADD X24, X24, 0x1
	0x01E20FBC CBNZ X8, 0x1E20E50
	0x01E20FC0 B 0x1E21354
	0x01E20FC4 LDR X8, [X31 + 0xE8]
	0x01E20FC8 CBZ X8, 0x1E21354
	0x01E20FCC MOV X0, X21
	0x01E20FD0 MOV X1, X22
	0x01E20FD4 MOV X2, X31
	0x01E20FD8 STR X22, [X8 + 0x30]
	0x01E20FDC BL 0x3C13558
	0x01E20FE0 LDR X8, [X31 + 0x108]
	0x01E20FE4 LDR X27, [X31 + 0x8]
	0x01E20FE8 CBZ X8, 0x1E21354
	0x01E20FEC LDR W9, [X31 + 0xF0]
	0x01E20FF0 CMP W9, 0x8
	0x01E20FF4 B.NE 0x1E211B4
	0x01E20FF8 LDR X8, [X8 + 0x88]
	0x01E20FFC CBZ X8, 0x1E21354
	0x01E21000 ADRP X9, 0x22D9000
	0x01E21004 LDR X9, [X9 + 0x708]
	0x01E21008 LDR W1, [X8 + 0x18]
	0x01E2100C LDR X0, [X9]
	0x01E21010 BL 0x1C16D6C
	0x01E21014 LDR X8, [X31 + 0x108]
	0x01E21018 CBZ X8, 0x1E21354
	0x01E2101C ADRP X28, 0x22D2000
	0x01E21020 ADRP X29, 0x22D9000
	0x01E21024 ADRP X25, 0x22D2000
	0x01E21028 LDR X28, [X28 + 0x758]
	0x01E2102C LDR X29, [X29 + 0x7B0]
	0x01E21030 LDR X25, [X25 + 0xA58]
	0x01E21034 MOV X22, X0
	0x01E21038 MOV X27, X31
	0x01E2103C LDR X8, [X8 + 0x88]
	0x01E21040 CBZ X8, 0x1E21354
	0x01E21044 LDR X1, [X8 + 0x18]
	0x01E21048 CMP X27, W1, SXTW
	0x01E2104C B.GE 0x1E212B4
	0x01E21050 LDR X0, [X28]
	0x01E21054 ADD X20, X27, 0x1
	0x01E21058 ADD X1, X31, 0x90
	0x01E2105C STR W20, [X31 + 0x90]
	0x01E21060 BL 0x1C16E04
	0x01E21064 LDR X8, [X29]
	0x01E21068 MOV X1, X0
	0x01E2106C MOV X2, X31
	0x01E21070 MOV X0, X8
	0x01E21074 BL 0x321EFD0
	0x01E21078 LDR X8, [X25]
	0x01E2107C MOV X24, X0
	0x01E21080 MOV X0, X8
	0x01E21084 BL 0x1C16F10
	0x01E21088 MOV X1, X24
	0x01E2108C MOV X2, X31
	0x01E21090 MOV X23, X0
	0x01E21094 BL 0x3C35934
	0x01E21098 CBZ X23, 0x1E21354
	0x01E2109C MOV X0, X23
	0x01E210A0 MOV X1, X31
	0x01E210A4 BL 0x3C356F8
	0x01E210A8 SUBS X24, X20, 0x1
	0x01E210AC MOV X23, X0
	0x01E210B0 B.EQ 0x1E210D8
	0x01E210B4 CBZ X22, 0x1E21354
	0x01E210B8 LDR W8, [X22 + 0x18]
	0x01E210BC SUB W9, W27, 0x1
	0x01E210C0 CMP W9, W8
	0x01E210C4 B.CS 0x1E21670
	0x01E210C8 CBZ X23, 0x1E21354
	0x01E210CC ADD X8, X22, X27, 0x3, LSL
	0x01E210D0 LDR X1, [X8 + 0x18]
	0x01E210D4 B 0x1E210F0
	0x01E210D8 LDR X0, [X19 + 0x28]
	0x01E210DC CBZ X0, 0x1E21354
	0x01E210E0 MOVZ W1, 0x2

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0x25B9000
	014 Move W8, [X20+3629]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {82}
	020 Move X0, 0x22DB000
	021 Move X0, [X0+1720]
	022 Call 0x1C17CF4
	023 Move X0, 0x22DB000
	024 Move X0, [X0+1728]
	025 Call 0x1C17CF4
	026 Move X0, 0x22DB000
	027 Move X0, [X0+1736]
	028 Call 0x1C17CF4
	029 Move X0, 0x22DB000
	030 Move X0, [X0+1744]
	031 Call 0x1C17CF4
	032 Move X0, 0x22DB000
	033 Move X0, [X0+1752]
	034 Call 0x1C17CF4
	035 Move X0, 0x22DB000
	036 Move X0, [X0+1760]
	037 Call 0x1C17CF4
	038 Move X0, 0x22DB000
	039 Move X0, [X0+1768]
	040 Call 0x1C17CF4
	041 Move X0, 0x22D4000
	042 Move X0, [X0+3576]
	043 Call 0x1C17CF4
	044 Move X0, 0x22DB000
	045 Move X0, [X0+1776]
	046 Call 0x1C17CF4
	047 Move X0, 0x22DB000
	048 Move X0, [X0+1784]
	049 Call 0x1C17CF4
	050 Move X0, 0x22D4000
	051 Move X0, [X0+2648]
	052 Call 0x1C17CF4
	053 Move X0, 0x22D8000
	054 Move X0, [X0+3232]
	055 Call 0x1C17CF4
	056 Move X0, 0x22DB000
	057 Move X0, [X0+1792]
	058 Call 0x1C17CF4
	059 Move X0, 0x22DB000
	060 Move X0, [X0+1800]
	061 Call 0x1C17CF4
	062 Move X0, 0x22D4000
	063 Move X0, [X0+1728]
	064 Call 0x1C17CF4
	065 Move X0, 0x22D6000
	066 Move X0, [X0+2480]
	067 Call 0x1C17CF4
	068 Move X0, 0x22DB000
	069 Move X0, [X0+1808]
	070 Call 0x1C17CF4
	071 Move X0, 0x22DB000
	072 Move X0, [X0+1816]
	073 Call 0x1C17CF4
	074 Move X0, 0x22DB000
	075 Move X0, [X0+1824]
	076 Call 0x1C17CF4
	077 Move X0, 0x22DB000
	078 Move X0, [X0+1832]
	079 Call 0x1C17CF4
	080 Move W8, 1
	081 Move [X20+3629], W8
	082 Move X8, [X19+40]
	083 Compare X8, 0
	084 JumpIfEqual {538}
	085 Move X8, [X8+32]
	086 Compare X8, 0
	087 JumpIfEqual {538}
	088 Move X9, 0x22DB000
	089 Move X9, [X9+1744]
	090 Move W1, [X8+24]
	091 Move X0, [X9]
	092 Call 0x1C17D6C
	093 Move X8, [X19+40]
	094 Move [X19+80], X0
	095 Compare X8, 0
	096 JumpIfEqual {538}
	097 Move X26, 0x22DB000
	098 Move X22, 0x22D6000
	099 Move X29, 0x22D4000
	100 Move X25, 0x22DB000
	101 Move X28, 0x22DB000
	102 Move X23, 0x22DB000
	103 Move X26, [X26+1752]
	104 Move X22, [X22+2480]
	105 Move X29, [X29+2648]
	106 Move X25, [X25+1824]
	107 Move X28, [X28+1768]
	108 Move X23, [X23+1728]
	109 Move W21, 4
	110 Move X8, [X8+32]
	111 Compare X8, 0
	112 JumpIfEqual {538}
	113 NotImplemented "Instruction LDRSW not yet implemented."
	114 Subtract X24, X21, 4
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X0, [X26]
	117 Move X27, [X19+80]
	118 Call 0x1C17F10
	119 Move X1, X31
	120 Move X20, X0
	121 Call AvatarBodyBoneData..ctor, X0
	122 Compare X20, 0
	123 JumpIfEqual {538}
	124 Add X8, X24, 1
	125 Move [X20+16], W8
	126 Move X9, [X19+40]
	127 Compare X9, 0
	128 JumpIfEqual {538}
	129 Move X9, [X9+32]
	130 Compare X9, 0
	131 JumpIfEqual {538}
	132 Move W10, [X9+24]
	133 Subtract X24, X8, 1
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X0, [X9]
	136 Compare X0, 0
	137 JumpIfEqual {538}
	138 Move X1, X31
	139 Call Transform.get_position, X0
	140 Move [X20+20], S0
	141 Move [X20+28], S1
	142 Move [X20+28], S2
	143 Move X8, [X19+40]
	144 Compare X8, 0
	145 JumpIfEqual {538}
	146 Move X8, [X8+32]
	147 Compare X8, 0
	148 JumpIfEqual {538}
	149 Move W9, [X8+24]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X0, [X8]
	152 Compare X0, 0
	153 JumpIfEqual {538}
	154 Move X1, X31
	155 Call Transform.get_rotation, X0
	156 Move [X20+32], S0
	157 Move [X20+40], S1
	158 Move [X20+40], S2
	159 Move [X20+48], S3
	160 Compare X27, 0
	161 JumpIfEqual {538}
	162 Move X8, [X27]
	163 Move X0, X20
	164 Move X1, [X8+64]
	165 Call 0x1C17E00
	166 Compare X0, 0
	167 JumpIfEqual {555}
	168 Move W8, [X27+24]
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move [X27], X20
	171 Move X8, [X19+40]
	172 Add X21, X21, 1
	173 Compare X8, 0
	174 JumpIfNotEqual {110}
	175 Move X8, [X19+32]
	176 Compare X8, 0
	177 JumpIfEqual {538}
	178 Move X8, [X8+24]
	179 Compare X8, 0
	180 JumpIfEqual {538}
	181 Move X0, [X22]
	182 Move W1, [X8+24]
	183 Call 0x1C17D6C
	184 Move X8, [X19+32]
	185 Move [X19+88], X0
	186 Compare X8, 0
	187 JumpIfEqual {538}
	188 Move X1, X0
	189 Move X0, [X8+24]
	190 Compare X0, 0
	191 JumpIfEqual {538}
	192 Move W2, [X0+24]
	193 Move X3, X31
	194 Call Array.Copy, X0, X1, X2
	195 Move W8, [X19+48]
	196 Compare W8, 0
	197 JumpIfEqual {332}
	198 Move X8, 0x22DB000
	199 Move X8, [X8+1792]
	200 Move X0, [X8]
	201 Call 0x1C17F10
	202 Move X1, X31
	203 Move X20, X0
	204 Call Mesh..ctor, X0
	205 Move [X19+72], X20
	206 Compare X20, 0
	207 JumpIfEqual {538}
	208 Move X8, 0x22DB000
	209 Move X8, [X8+1832]
	210 Move X0, X20
	211 Move X2, X31
	212 Move X1, [X8]
	213 Call Object.set_name, X0, X1
	214 Move X0, [X19+72]
	215 Compare X0, 0
	216 JumpIfEqual {538}
	217 Move X1, [X19+88]
	218 Move X2, X31
	219 Call Mesh.set_vertices, X0, X1
	220 Move X0, [X19+72]
	221 Compare X0, 0
	222 JumpIfEqual {538}
	223 Move W1, W31
	224 Move X2, X31
	225 Call Mesh.set_indexFormat, X0, X1
	226 Move X8, [X19+32]
	227 Compare X8, 0
	228 JumpIfEqual {538}
	229 Move X0, [X19+72]
	230 Compare X0, 0
	231 JumpIfEqual {538}
	232 Move X1, [X8+32]
	233 Move W2, W31
	234 Move W3, W31
	235 Move X4, X31
	236 Call Mesh.SetIndices, X0, X1, X2, X3
	237 Move X0, [X19+72]
	238 Compare X0, 0
	239 JumpIfEqual {538}
	240 Move X1, X31
	241 Call Mesh.RecalculateBounds, X0
	242 Move X0, [X19+72]
	243 Compare X0, 0
	244 JumpIfEqual {538}
	245 Move W1, W31
	246 Move X2, X31
	247 Call Mesh.UploadMeshData, X0, X1
	248 Move X0, [X29]
	249 Call 0x1C17F10
	250 Move X8, 0x22DB000
	251 Move X8, [X8+1808]
	252 Move X2, X31
	253 Move X20, X0
	254 Move X1, [X8]
	255 Call GameObject..ctor, X0, X1
	256 Compare X20, 0
	257 JumpIfEqual {538}
	258 Move X0, X20
	259 Move X1, X31
	260 Call GameObject.get_transform, X0
	261 Move X21, X0
	262 Move X0, X19
	263 Move X1, X31
	264 Call Component.get_transform, X0
	265 Compare X21, 0
	266 JumpIfEqual {538}
	267 Move X1, X0
	268 Move X0, X21
	269 Move W2, W31
	270 Move X3, X31
	271 Call Transform.SetParent, X0, X1, X2
	272 Move X0, X20
	273 Move X1, X31
	274 Call GameObject.get_transform, X0
	275 Compare X0, 0
	276 JumpIfEqual {538}
	277 Move X8, -20140032
	278 Move V0, [X8+24]
	279 Move S1, W31
	280 Move S2, W31
	281 Move X1, X31
	282 Call Transform.set_localEulerAngles, X0, X1
	283 Move X8, 0x22DB000
	284 Move X8, [X8+1776]
	285 Move X0, X20
	286 Move X1, [X8]
	287 Call 0x21E61FC, X0
	288 Compare X0, 0
	289 JumpIfEqual {538}
	290 Move X1, [X19+72]
	291 Move X2, X31
	292 Call MeshFilter.set_sharedMesh, X0, X1
	293 Move X8, 0x22DB000
	294 Move X8, [X8+1784]
	295 Move X0, X20
	296 Move X1, [X8]
	297 Call 0x21E61FC, X0
	298 Move X8, 0x22DB000
	299 Move X8, [X8+1816]
	300 Move X20, X0
	301 Move X1, X31
	302 Move X8, [X8]
	303 Move X0, X8
	304 Call Shader.Find, X0
	305 Move X8, 0x22D8000
	306 Move X8, [X8+3232]
	307 Move X22, X0
	308 Move X8, [X8]
	309 Move X0, X8
	310 Call 0x1C17F10
	311 Move X1, X22
	312 Move X2, X31
	313 Move X21, X0
	314 Call Material..ctor, X0, X1
	315 Compare X21, 0
	316 JumpIfEqual {538}
	317 Move X8, -20144128
	318 Move X9, -20140032
	319 Move V1, [X8+3984]
	320 Move V2, [X9+48]
	321 Move S0, 1
	322 Move S3, 1
	323 Move X0, X21
	324 Move X1, X31
	325 Call Material.set_color, X0, X1
	326 Compare X20, 0
	327 JumpIfEqual {538}
	328 Move X0, X20
	329 Move X1, X21
	330 Move X2, X31
	331 Call Renderer.set_sharedMaterial, X0, X1
	332 Move X8, [X19+32]
	333 Compare X8, 0
	334 JumpIfEqual {538}
	335 Move X8, [X8+40]
	336 Compare X8, 0
	337 JumpIfEqual {538}
	338 Move X9, 0x22DB000
	339 Move X9, [X9+1800]
	340 Move W1, [X8+24]
	341 Move X0, [X9]
	342 Call 0x1C17D6C
	343 Move X8, [X19+32]
	344 Move [X19+96], X0
	345 Compare X8, 0
	346 JumpIfEqual {538}
	347 Move W22, 4
	348 Move X8, [X8+40]
	349 Compare X8, 0
	350 JumpIfEqual {538}
	351 Move W9, [X8+24]
	352 Subtract X24, X22, 4
	353 NotImplemented "Instruction CMP not yet implemented."
	354 NotImplemented "Instruction CMP not yet implemented."
	355 Move X26, [X8]
	356 Compare X26, 0
	357 JumpIfEqual {538}
	358 Move X1, [X26+16]
	359 Move X0, [X25]
	360 Move X2, X31
	361 Call String.Concat, X0, X1
	362 Move X8, [X29]
	363 Move X21, X0
	364 Move X0, X8
	365 Call 0x1C17F10
	366 Move X1, X21
	367 Move X2, X31
	368 Move X20, X0
	369 Call GameObject..ctor, X0, X1
	370 Compare X20, 0
	371 JumpIfEqual {538}
	372 Move X0, X20
	373 Move X1, X31
	374 Call GameObject.get_transform, X0
	375 Move X21, X0
	376 Move X0, X19
	377 Move X1, X31
	378 Call Component.get_transform, X0
	379 Compare X21, 0
	380 JumpIfEqual {538}
	381 Move X1, X0
	382 Move X0, X21
	383 Move W2, W31
	384 Move X3, X31
	385 Call Transform.SetParent, X0, X1, X2
	386 Move X0, X20
	387 Move X1, X31
	388 Call GameObject.get_transform, X0
	389 Compare X0, 0
	390 JumpIfEqual {538}
	391 Move S1, [X26+32]
	392 Move S2, [X26+36]
	393 Move V0, [X26+28]
	394 Move X1, X31
	395 Call Transform.set_localPosition, X0, X1
	396 Move X0, X20
	397 Move X1, X31
	398 Call GameObject.get_transform, X0
	399 Compare X0, 0
	400 JumpIfEqual {538}
	401 Move S2, [X26+48]
	402 Move S3, [X26+52]
	403 Move S0, [X26+40]
	404 Move S1, [X26+44]
	405 Move X1, X31
	406 Call Transform.set_localRotation, X0, X1
	407 Move X21, [X19+96]
	408 Move X0, X20
	409 Move X1, X31
	410 Call GameObject.get_transform, X0
	411 Compare X21, 0
	412 JumpIfEqual {538}
	413 Move X20, X0
	414 Compare X0, 0
	415 JumpIfEqual {422}
	416 Move X8, [X21]
	417 Move X0, X20
	418 Move X1, [X8+64]
	419 Call 0x1C17E00
	420 Compare X0, 0
	421 JumpIfEqual {555}
	422 Move W8, [X21+24]
	423 NotImplemented "Instruction CMP not yet implemented."
	424 Move [X21], X20
	425 Move X8, [X19+32]
	426 Add X22, X22, 1
	427 Compare X8, 0
	428 JumpIfNotEqual {348}
	429 Move X8, 0x22DB000
	430 Move X8, [X8+1760]
	431 Move W1, 8
	432 Move X0, [X8]
	433 Call 0x1C17D6C
	434 Move [X19+104], X0
	435 Compare X0, 0
	436 JumpIfEqual {538}
	437 Move X20, X0
	438 Move X22, X31
	439 Move W8, [X20+24]
	440 NotImplemented "Instruction CMP not yet implemented."
	441 Move X0, [X28]
	442 Call 0x1C17F10
	443 Move X1, X31
	444 Move X21, X0
	445 Call BodyPartInstance..ctor, X0
	446 Compare X21, 0
	447 JumpIfEqual {538}
	448 Add X24, X22, 1
	449 Subtract W8, W24, 2
	450 NotImplemented "Instruction CMP not yet implemented."
	451 NotImplemented "Instruction CSET not yet implemented."
	452 NotImplemented "Instruction CMP not yet implemented."
	453 NotImplemented "Instruction CSET not yet implemented."
	454 And W8, W8, W9
	455 Move [X21+16], W24
	456 Move [X21+65], W8
	457 Move X8, [X20]
	458 Move X0, X21
	459 Move X1, [X8+64]
	460 Call 0x1C17E00
	461 Compare X0, 0
	462 JumpIfEqual {555}
	463 Move W9, [X20+24]
	464 Subtract X8, X24, 1
	465 NotImplemented "Instruction CMP not yet implemented."
	466 Add X9, X20, X22
	467 Move [X9+32], X21
	468 Move X20, [X19+104]
	469 Add X22, X8, 1
	470 Compare X20, 0
	471 JumpIfNotEqual {439}
	472 Move X8, 0x22D4000
	473 Move X8, [X8+1728]
	474 Move X9, 0x22DB000
	475 Move X0, [X8]
	476 Move W8, [X0+224]
	477 Move X9, [X9+1736]
	478 Move X20, [X9]
	479 Compare W8, 0
	480 JumpIfNotEqual {482}
	481 Call 0x1C17DFC
	482 Move X0, X20
	483 Move X1, X31
	484 Call Type.GetTypeFromHandle, X0
	485 Move X8, 0x22D4000
	486 Move X8, [X8+3576]
	487 Move X20, X0
	488 Move X8, [X8]
	489 Move W9, [X8+224]
	490 Compare W9, 0
	491 JumpIfNotEqual {494}
	492 Move X0, X8
	493 Call 0x1C17DFC
	494 Move X0, X20
	495 Move X1, X31
	496 Call Enum.GetValues, X0
	497 Compare X0, 0
	498 JumpIfEqual {538}
	499 Move X1, X31
	500 Call Array.get_Length, X0
	501 Move X8, 0x22DA000
	502 Move X8, [X8+1720]
	503 Subtract W1, W0, 1
	504 Move X8, [X8]
	505 Move X0, X8
	506 Call 0x1C17D6C
	507 Move [X19+112], X0
	508 Compare X0, 0
	509 JumpIfEqual {538}
	510 Move X20, X0
	511 Move X22, X31
	512 NotImplemented "Instruction LDRSW not yet implemented."
	513 NotImplemented "Instruction CMP not yet implemented."
	514 Move X0, [X23]
	515 Call 0x1C17F10
	516 Move X1, X31
	517 Move X21, X0
	518 Call AccessoryInstance..ctor, X0
	519 Compare X21, 0
	520 JumpIfEqual {538}
	521 Add X24, X22, 1
	522 Move [X21+16], W24
	523 Move X8, [X20]
	524 Move X0, X21
	525 Move X1, [X8+64]
	526 Call 0x1C17E00
	527 Compare X0, 0
	528 JumpIfEqual {555}
	529 Move W9, [X20+24]
	530 Subtract X8, X24, 1
	531 NotImplemented "Instruction CMP not yet implemented."
	532 Add X9, X20, X22
	533 Move [X9+32], X21
	534 Move X20, [X19+112]
	535 Add X22, X8, 1
	536 Compare X20, 0
	537 JumpIfNotEqual {512}
	538 Call 0x1C17F20
	539 Move W8, 1
	540 Move [X19+69], W8
	541 Move X20, [X31+80]
	542 Move X19, [X31+88]
	543 Move X22, [X31+64]
	544 Move X21, [X31+72]
	545 Move X24, [X31+48]
	546 Move X23, [X31+56]
	547 Move X26, [X31+32]
	548 Move X25, [X31+40]
	549 Move X28, [X31+16]
	550 Move X27, [X31+24]
	551 Move X29, [X31+96]
	552 Move X30, [X31+104]
	553 Return 
	554 Call 0x1C17F28
	555 Call 0x1C17F44
	556 Move X1, X31
	557 Call 0x1C17DEC

Method: System.Void UpdateBodyPart(AnimalCompany.AvatarSystem.AvatarRawBodyPartType partType, System.String itemID, ref System.Boolean bodyPartChanged, ref System.Boolean cageChanged, System.Boolean torsoCageChanged)

Disassembly:
	0x01E210E4 BL 0x1E1DBB0
	0x01E210E8 CBZ X23, 0x1E21354
	0x01E210EC MOV X1, X0
	0x01E210F0 MOV X0, X23
	0x01E210F4 MOV W2, W31
	0x01E210F8 MOV X3, X31
	0x01E210FC BL 0x3C3FEB8
	0x01E21100 LDR X8, [X31 + 0x108]
	0x01E21104 CBZ X8, 0x1E21354
	0x01E21108 LDR X8, [X8 + 0x88]
	0x01E2110C CBZ X8, 0x1E21354
	0x01E21110 LDR W9, [X8 + 0x18]
	0x01E21114 CMP X24, X9
	0x01E21118 B.CS 0x1E21670
	0x01E2111C ADD X8, X8, X27, 0x3, LSL
	0x01E21120 LDR X8, [X8 + 0x20]
	0x01E21124 CBZ X8, 0x1E21354
	0x01E21128 LDP S1, S2, [X8 + 0x18]
	0x01E2112C LDR V0, [X8 + 0x14]
	0x01E21130 MOV X0, X23
	0x01E21134 MOV X1, X31
	0x01E21138 BL 0x3C3EC04
	0x01E2113C LDR X8, [X31 + 0x108]
	0x01E21140 CBZ X8, 0x1E21354
	0x01E21144 LDR X8, [X8 + 0x88]
	0x01E21148 CBZ X8, 0x1E21354
	0x01E2114C LDR W9, [X8 + 0x18]
	0x01E21150 CMP X24, X9
	0x01E21154 B.CS 0x1E21670
	0x01E21158 ADD X8, X8, X27, 0x3, LSL
	0x01E2115C LDR X8, [X8 + 0x20]
	0x01E21160 CBZ X8, 0x1E21354
	0x01E21164 LDP S0, S1, [X8 + 0x20]
	0x01E21168 LDP S2, S3, [X8 + 0x28]
	0x01E2116C MOV X0, X23
	0x01E21170 MOV X1, X31
	0x01E21174 BL 0x3C3F8B8
	0x01E21178 CBZ X22, 0x1E21354
	0x01E2117C LDR X8, [X22]
	0x01E21180 MOV X0, X23
	0x01E21184 LDR X1, [X8 + 0x40]
	0x01E21188 BL 0x1C16E00
	0x01E2118C CBZ X0, 0x1E21634
	0x01E21190 LDR W8, [X22 + 0x18]
	0x01E21194 CMP X24, X8
	0x01E21198 B.CS 0x1E21670
	0x01E2119C ADD X8, X22, X27, 0x3, LSL
	0x01E211A0 STR X23, [X8 + 0x20]
	0x01E211A4 LDR X8, [X31 + 0x108]
	0x01E211A8 ADD X27, X24, 0x1
	0x01E211AC CBNZ X8, 0x1E2103C
	0x01E211B0 B 0x1E21354
	0x01E211B4 LDR X8, [X8 + 0x50]
	0x01E211B8 CBZ X8, 0x1E21354
	0x01E211BC ADRP X9, 0x22D9000
	0x01E211C0 LDR X9, [X9 + 0x708]
	0x01E211C4 LDR W1, [X8 + 0x18]
	0x01E211C8 LDR X0, [X9]
	0x01E211CC BL 0x1C16D6C
	0x01E211D0 LDR X8, [X31 + 0x108]
	0x01E211D4 CBZ X8, 0x1E21354
	0x01E211D8 MOV X22, X0
	0x01E211DC MOVZ W20, 0x4
	0x01E211E0 LDR X8, [X8 + 0x50]
	0x01E211E4 CBZ X8, 0x1E21354
	0x01E211E8 LDR W9, [X8 + 0x18]
	0x01E211EC SUB X25, X20, 0x4
	0x01E211F0 CMP W25, W9
	0x01E211F4 B.GE 0x1E21280
	0x01E211F8 CMP W25, W9
	0x01E211FC B.CS 0x1E21670
	0x01E21200 LDR X24, [X8, X20, LSL #3]
	0x01E21204 CBZ X24, 0x1E21354
	0x01E21208 LDR X0, [X19 + 0x28]
	0x01E2120C CBZ X0, 0x1E21354
	0x01E21210 LDR W1, [X24 + 0x10]
	0x01E21214 BL 0x1E1DBB0
	0x01E21218 CBZ X22, 0x1E21354
	0x01E2121C MOV X23, X0
	0x01E21220 CBZ X0, 0x1E21658
	0x01E21224 LDR X8, [X22]
	0x01E21228 MOV X0, X23
	0x01E2122C LDR X1, [X8 + 0x40]
	0x01E21230 BL 0x1C16E00
	0x01E21234 CBZ X0, 0x1E21634
	0x01E21238 LDR W8, [X22 + 0x18]
	0x01E2123C CMP W25, W8
	0x01E21240 B.CS 0x1E21670
	0x01E21244 STR X23, [X22, X20, LSL #3]
	0x01E21248 LDP S1, S2, [X24 + 0x18]
	0x01E2124C LDR V0, [X24 + 0x14]
	0x01E21250 MOV X0, X23
	0x01E21254 MOV X1, X31
	0x01E21258 BL 0x3C3EC04
	0x01E2125C LDP S0, S1, [X24 + 0x20]
	0x01E21260 LDP S2, S3, [X24 + 0x28]
	0x01E21264 MOV X0, X23
	0x01E21268 MOV X1, X31
	0x01E2126C BL 0x3C3F8B8
	0x01E21270 LDR X8, [X31 + 0x108]
	0x01E21274 ADD X20, X20, 0x1
	0x01E21278 CBNZ X8, 0x1E211E0
	0x01E2127C B 0x1E21354
	0x01E21280 MOV X0, X21
	0x01E21284 MOV X1, X22
	0x01E21288 MOV X2, X31
	0x01E2128C BL 0x3C16E48
	0x01E21290 LDR X0, [X19 + 0x28]
	0x01E21294 CBZ X0, 0x1E21354
	0x01E21298 MOVZ W1, 0x1
	0x01E2129C BL 0x1E1DBB0
	0x01E212A0 MOV X1, X0
	0x01E212A4 MOV X0, X21
	0x01E212A8 MOV X2, X31
	0x01E212AC BL 0x3C16E04
	0x01E212B0 B 0x1E214A8
	0x01E212B4 ADRP X8, 0x22D9000
	0x01E212B8 LDR X8, [X8 + 0x708]
	0x01E212BC LDR X0, [X8]
	0x01E212C0 BL 0x1C16D6C
	0x01E212C4 LDR X8, [X31 + 0x108]
	0x01E212C8 LDR X27, [X31 + 0x8]
	0x01E212CC CBZ X8, 0x1E21354
	0x01E212D0 MOV X23, X0
	0x01E212D4 MOVZ W20, 0x4
	0x01E212D8 LDR X8, [X8 + 0x88]
	0x01E212DC CBZ X8, 0x1E21354
	0x01E212E0 LDR W9, [X8 + 0x18]
	0x01E212E4 SUB X25, X20, 0x4
	0x01E212E8 CMP W25, W9
	0x01E212EC B.GE 0x1E21358
	0x01E212F0 CMP W25, W9
	0x01E212F4 B.CS 0x1E21670
	0x01E212F8 LDR X8, [X8, X20, LSL #3]
	0x01E212FC CBZ X8, 0x1E21354
	0x01E21300 CBZ X22, 0x1E21354
	0x01E21304 LDRSW X8, [X8 + 0x10]
	0x01E21308 LDR W9, [X22 + 0x18]
	0x01E2130C CMP W8, W9
	0x01E21310 B.CS 0x1E21670
	0x01E21314 CBZ X23, 0x1E21354
	0x01E21318 ADD X8, X22, X8, 0x3, LSL
	0x01E2131C LDR X24, [X8 + 0x20]
	0x01E21320 CBZ X24, 0x1E21338
	0x01E21324 LDR X8, [X23]
	0x01E21328 MOV X0, X24
	0x01E2132C LDR X1, [X8 + 0x40]
	0x01E21330 BL 0x1C16E00
	0x01E21334 CBZ X0, 0x1E21634
	0x01E21338 LDR W8, [X23 + 0x18]
	0x01E2133C CMP W25, W8
	0x01E21340 B.CS 0x1E21670
	0x01E21344 STR X24, [X23, X20, LSL #3]
	0x01E21348 LDR X8, [X31 + 0x108]
	0x01E2134C ADD X20, X20, 0x1
	0x01E21350 CBNZ X8, 0x1E212D8
	0x01E21354 BL 0x1C16F20
	0x01E21358 MOV X0, X21
	0x01E2135C MOV X1, X23
	0x01E21360 MOV X2, X31
	0x01E21364 BL 0x3C16E48
	0x01E21368 CBZ X22, 0x1E21354
	0x01E2136C LDR W8, [X22 + 0x18]
	0x01E21370 CBZ W8, 0x1E21670
	0x01E21374 LDR X1, [X22 + 0x20]
	0x01E21378 MOV X0, X21
	0x01E2137C MOV X2, X31
	0x01E21380 BL 0x3C16E04
	0x01E21384 LDR W8, [X22 + 0x18]
	0x01E21388 CBZ W8, 0x1E21670
	0x01E2138C LDR X0, [X22 + 0x20]
	0x01E21390 STR X0, [X19 + 0x78]
	0x01E21394 CBZ X0, 0x1E21354
	0x01E21398 MOV X1, X31
	0x01E2139C BL 0x3C32ECC
	0x01E213A0 CBZ X0, 0x1E21354
	0x01E213A4 ADRP X8, 0x22D9000
	0x01E213A8 LDR X8, [X8 + 0x770]
	0x01E213AC LDR X1, [X8]
	0x01E213B0 BL 0x21E51FC
	0x01E213B4 CBZ X0, 0x1E21354
	0x01E213B8 LDR X8, [X19 + 0x78]
	0x01E213BC MOV X22, X0
	0x01E213C0 MOVZ W1, 0x2
	0x01E213C4 STR X8, [X0 + 0x20]
	0x01E213C8 ADRP X8, 0x22D9000
	0x01E213CC LDR X8, [X8 + 0x790]
	0x01E213D0 LDR X0, [X8]
	0x01E213D4 BL 0x1C16D6C
	0x01E213D8 MOV X23, X0
	0x01E213DC ADD X0, X31, 0x90
	0x01E213E0 FMOV S0, W31
	0x01E213E4 FMOV S1, 1
	0x01E213E8 FMOV S2, W31
	0x01E213EC FMOV S3, W31
	0x01E213F0 MOV X1, X31
	0x01E213F4 STP X31, X31, [X31 + 0x90]
	0x01E213F8 STR W31, [X31 + 0xA8]
	0x01E213FC STR X31, [X31 + 0xA0]
	0x01E21400 BL 0x3C00A84
	0x01E21404 CBZ X23, 0x1E21354
	0x01E21408 LDR V0, [X31 + 0x9]
	0x01E2140C LDUR V1, [X31 + 0x9C]
	0x01E21410 STR V0, [X31 + 0x7]
	0x01E21414 STUR V1, [X31 + 0x7C]
	0x01E21418 LDR W8, [X23 + 0x18]
	0x01E2141C CBZ W8, 0x1E21670
	0x01E21420 LDUR V0, [X31 + 0x7C]
	0x01E21424 LDR V1, [X31 + 0x7]
	0x01E21428 ADD X0, X31, 0x50
	0x01E2142C FMOV S2, 1
	0x01E21430 STUR V0, [X23 + 0x2C]
	0x01E21434 STR V1, [X23 + 0x2]
	0x01E21438 FMOV S0, 1
	0x01E2143C FMOV S1, 0.5
	0x01E21440 FMOV S3, W31
	0x01E21444 MOV X1, X31
	0x01E21448 STP X31, X31, [X31 + 0x50]
	0x01E2144C STR W31, [X31 + 0x68]
	0x01E21450 STR X31, [X31 + 0x60]
	0x01E21454 BL 0x3C00A84
	0x01E21458 LDUR V0, [X31 + 0x5C]
	0x01E2145C LDR V1, [X31 + 0x5]
	0x01E21460 STUR V0, [X31 + 0x3C]
	0x01E21464 STR V1, [X31 + 0x3]
	0x01E21468 LDR W8, [X23 + 0x18]
	0x01E2146C CMP W8, 0x1
	0x01E21470 B.LS 0x1E21670
	0x01E21474 LDUR V0, [X31 + 0x3C]
	0x01E21478 LDR V1, [X31 + 0x3]
	0x01E2147C ADRP X8, 0x22D9000
	0x01E21480 STUR V0, [X23 + 0x48]
	0x01E21484 STUR V1, [X23 + 0x3C]
	0x01E21488 LDR X8, [X8 + 0x730]
	0x01E2148C LDR X0, [X8]
	0x01E21490 BL 0x1C16F10
	0x01E21494 MOV X1, X23
	0x01E21498 MOV X2, X31
	0x01E2149C MOV X24, X0
	0x01E214A0 BL 0x3C013D4
	0x01E214A4 STR X24, [X22 + 0x50]
	0x01E214A8 LDR V0, [X31 + 0xD]
	0x01E214AC LDR X8, [X31 + 0xE0]
	0x01E214B0 ADD X1, X31, 0x10
	0x01E214B4 MOV X0, X21
	0x01E214B8 MOV X2, X31
	0x01E214BC STR V0, [X31 + 0x1]
	0x01E214C0 STR X8, [X31 + 0x20]
	0x01E214C4 BL 0x3C12AD4
	0x01E214C8 LDR X8, [X19 + 0x20]
	0x01E214CC CBZ X8, 0x1E21354
	0x01E214D0 LDR X1, [X8 + 0x18]
	0x01E214D4 LDR W2, [X31 + 0xF0]
	0x01E214D8 LDR X3, [X31 + 0x108]
	0x01E214DC MOV X0, X19
	0x01E214E0 BL 0x1E2311C
	0x01E214E4 MOVZ W8, 0x1
	0x01E214E8 STRB W8, [X27]
	0x01E214EC LDR W8, [X31 + 0xF0]
	0x01E214F0 CMP W8, 0x4
	0x01E214F4 B.EQ 0x1E215A4
	0x01E214F8 CMP W8, 0x1
	0x01E214FC B.NE 0x1E21604
	0x01E21500 LDR X8, [X19 + 0x68]
	0x01E21504 CBZ X8, 0x1E21354
	0x01E21508 LDR W9, [X8 + 0x18]
	0x01E2150C CMP W9, 0x2
	0x01E21510 B.LS 0x1E21670
	0x01E21514 LDR X8, [X8 + 0x30]
	0x01E21518 CBZ X8, 0x1E21354
	0x01E2151C LDR X0, [X8 + 0x18]
	0x01E21520 CBZ X0, 0x1E21354
	0x01E21524 MOV X1, X31
	0x01E21528 BL 0x3C356F8
	0x01E2152C LDR X8, [X31 + 0xE8]
	0x01E21530 CBZ X8, 0x1E21354
	0x01E21534 LDR X8, [X8 + 0x38]
	0x01E21538 CBZ X8, 0x1E21354
	0x01E2153C CBZ X0, 0x1E21354
	0x01E21540 LDP S1, S2, [X8 + 0x80]
	0x01E21544 LDR V0, [X8 + 0x7C]
	0x01E21548 MOV X1, X31
	0x01E2154C BL 0x3C3EC04
	0x01E21550 LDR X8, [X19 + 0x68]
	0x01E21554 CBZ X8, 0x1E21354
	0x01E21558 LDR W9, [X8 + 0x18]
	0x01E2155C CMP W9, 0x1
	0x01E21560 B.LS 0x1E21670
	0x01E21564 LDR X8, [X8 + 0x28]
	0x01E21568 CBZ X8, 0x1E21354
	0x01E2156C LDR X0, [X8 + 0x18]
	0x01E21570 CBZ X0, 0x1E21354
	0x01E21574 MOV X1, X31
	0x01E21578 BL 0x3C356F8
	0x01E2157C LDR X8, [X31 + 0xE8]
	0x01E21580 CBZ X8, 0x1E21354
	0x01E21584 LDR X8, [X8 + 0x38]
	0x01E21588 CBZ X8, 0x1E21354
	0x01E2158C CBZ X0, 0x1E21354
	0x01E21590 LDP S1, S2, [X8 + 0x74]
	0x01E21594 LDR V0, [X8 + 0x70]
	0x01E21598 MOV X1, X31
	0x01E2159C BL 0x3C3EC04
	0x01E215A0 B 0x1E21604
	0x01E215A4 LDR X0, [X26]
	0x01E215A8 LDR X20, [X19 + 0x78]
	0x01E215AC LDR W8, [X0 + 0xE0]
	0x01E215B0 CBNZ W8, 0x1E215B8
	0x01E215B4 BL 0x1C16DFC
	0x01E215B8 MOV X0, X20
	0x01E215BC MOV X1, X31
	0x01E215C0 MOV X2, X31
	0x01E215C4 BL 0x3C354F8
	0x01E215C8 TBZ X0, 0x0, 0x1E21604
	0x01E215CC LDR X8, [X19 + 0x60]
	0x01E215D0 CBZ X8, 0x1E21354
	0x01E215D4 LDR W9, [X8 + 0x18]
	0x01E215D8 CMP W9, 0xA
	0x01E215DC B.LS 0x1E21670
	0x01E215E0 LDR X0, [X8 + 0x70]
	0x01E215E4 CBZ X0, 0x1E21354
	0x01E215E8 LDR X19, [X19 + 0x78]
	0x01E215EC MOV X1, X31
	0x01E215F0 BL 0x3C3F58C
	0x01E215F4 CBZ X19, 0x1E21354
	0x01E215F8 MOV X0, X19
	0x01E215FC MOV X1, X31
	0x01E21600 BL 0x3C3F62C
	0x01E21604 LDP X20, X19, [X31 + 0x190]
	0x01E21608 LDP X22, X21, [X31 + 0x180]
	0x01E2160C LDP X24, X23, [X31 + 0x170]
	0x01E21610 LDP X26, X25, [X31 + 0x160]
	0x01E21614 LDP X28, X27, [X31 + 0x150]
	0x01E21618 LDP X29, X30, [X31 + 0x140]
	0x01E2161C LDP D9, D8, [X31 + 0x130]
	0x01E21620 LDP D11, D10, [X31 + 0x120]
	0x01E21624 LDP D13, D12, [X31 + 0x110]
	0x01E21628 LDR V14, [X31 + 0x100]
	0x01E2162C ADD X31, X31, 0x1A0
	0x01E21630 RET
	0x01E21634 BL 0x1C16F44
	0x01E21638 MOV X1, X31
	0x01E2163C BL 0x1C16DEC
	0x01E21640 LDR W8, [X22 + 0x18]
	0x01E21644 SUB W9, W24, 0x4
	0x01E21648 CMP W9, W8
	0x01E2164C B.CS 0x1E21670
	0x01E21650 STR X23, [X22, X24, LSL #3]
	0x01E21654 BL 0x1C16F20
	0x01E21658 LDR W8, [X22 + 0x18]
	0x01E2165C SUB W9, W20, 0x4
	0x01E21660 CMP W9, W8
	0x01E21664 B.CS 0x1E21670
	0x01E21668 STR X23, [X22, X20, LSL #3]
	0x01E2166C BL 0x1C16F20
	0x01E21670 BL 0x1C16F28
	0x01E21674 SUB X31, X31, 0xF0
	0x01E21678 STP D15, D14, [X31 + 0x50]
	0x01E2167C STP D13, D12, [X31 + 0x60]
	0x01E21680 STP D11, D10, [X31 + 0x70]
	0x01E21684 STP D9, D8, [X31 + 0x80]
	0x01E21688 STP X29, X30, [X31 + 0x90]
	0x01E2168C STP X28, X27, [X31 + 0xA0]
	0x01E21690 STP X26, X25, [X31 + 0xB0]
	0x01E21694 STP X24, X23, [X31 + 0xC0]
	0x01E21698 STP X22, X21, [X31 + 0xD0]
	0x01E2169C STP X20, X19, [X31 + 0xE0]
	0x01E216A0 ADRP X23, 0x25B7000
	0x01E216A4 LDRB W8, [X23 + 0xE2F]
	0x01E216A8 MOV X24, X4
	0x01E216AC MOV W22, W3
	0x01E216B0 MOV X21, X2
	0x01E216B4 MOV X19, X1
	0x01E216B8 MOV X20, X0
	0x01E216BC TBNZ X8, 0x0, 0x1E21794
	0x01E216C0 ADRP X0, 0x22D9000
	0x01E216C4 LDR X0, [X0 + 0x7F8]
	0x01E216C8 BL 0x1C16CF4
	0x01E216CC ADRP X0, 0x22D9000
	0x01E216D0 LDR X0, [X0 + 0x800]
	0x01E216D4 BL 0x1C16CF4
	0x01E216D8 ADRP X0, 0x22D9000
	0x01E216DC LDR X0, [X0 + 0x808]
	0x01E216E0 BL 0x1C16CF4
	0x01E216E4 ADRP X0, 0x22D9000
	0x01E216E8 LDR X0, [X0 + 0x810]
	0x01E216EC BL 0x1C16CF4
	0x01E216F0 ADRP X0, 0x22D9000
	0x01E216F4 LDR X0, [X0 + 0x6F0]
	0x01E216F8 BL 0x1C16CF4
	0x01E216FC ADRP X0, 0x22D9000
	0x01E21700 LDR X0, [X0 + 0x6F8]
	0x01E21704 BL 0x1C16CF4
	0x01E21708 ADRP X0, 0x22D9000
	0x01E2170C LDR X0, [X0 + 0x778]
	0x01E21710 BL 0x1C16CF4
	0x01E21714 ADRP X0, 0x22D2000
	0x01E21718 LDR X0, [X0 + 0xA58]
	0x01E2171C BL 0x1C16CF4
	0x01E21720 ADRP X0, 0x22D9000
	0x01E21724 LDR X0, [X0 + 0x798]
	0x01E21728 BL 0x1C16CF4
	0x01E2172C ADRP X0, 0x22D9000
	0x01E21730 LDR X0, [X0 + 0x818]
	0x01E21734 BL 0x1C16CF4
	0x01E21738 ADRP X0, 0x22D9000
	0x01E2173C LDR X0, [X0 + 0x820]
	0x01E21740 BL 0x1C16CF4
	0x01E21744 ADRP X0, 0x22D9000
	0x01E21748 LDR X0, [X0 + 0x7A8]
	0x01E2174C BL 0x1C16CF4
	0x01E21750 ADRP X0, 0x22D3000
	0x01E21754 LDR X0, [X0 + 0xE38]
	0x01E21758 BL 0x1C16CF4
	0x01E2175C ADRP X0, 0x22D2000
	0x01E21760 LDR X0, [X0 + 0x598]
	0x01E21764 BL 0x1C16CF4
	0x01E21768 ADRP X0, 0x22D9000
	0x01E2176C LDR X0, [X0 + 0x708]
	0x01E21770 BL 0x1C16CF4
	0x01E21774 ADRP X0, 0x22D6000
	0x01E21778 LDR X0, [X0 + 0x110]
	0x01E2177C BL 0x1C16CF4
	0x01E21780 ADRP X0, 0x22D9000
	0x01E21784 LDR X0, [X0 + 0x828]
	0x01E21788 BL 0x1C16CF4
	0x01E2178C MOVZ W8, 0x1
	0x01E21790 STRB W8, [X23 + 0xE2F]
	0x01E21794 STP X31, X31, [X31 + 0x30]
	0x01E21798 STR X31, [X31 + 0x40]
	0x01E2179C CBZ X19, 0x1E21DA4
	0x01E217A0 ADRP X27, 0x22D2000
	0x01E217A4 LDR X27, [X27 + 0x598]
	0x01E217A8 LDR X23, [X19 + 0x20]
	0x01E217AC LDR X0, [X27]
	0x01E217B0 LDR W8, [X0 + 0xE0]
	0x01E217B4 CBNZ W8, 0x1E217BC
	0x01E217B8 BL 0x1C16DFC
	0x01E217BC MOV X0, X21
	0x01E217C0 MOV X1, X23
	0x01E217C4 MOV X2, X31
	0x01E217C8 BL 0x3C354F8
	0x01E217CC LDR X8, [X19 + 0x20]
	0x01E217D0 MOV W23, W0
	0x01E217D4 CBZ X8, 0x1E217DC
	0x01E217D8 LDRB W8, [X8 + 0x20]
	0x01E217DC CBZ X21, 0x1E217EC
	0x01E217E0 LDRB W9, [X21 + 0x20]
	0x01E217E4 CBNZ W8, 0x1E217F4
	0x01E217E8 B 0x1E21800
	0x01E217EC MOV W9, W31
	0x01E217F0 CBZ W8, 0x1E21800
	0x01E217F4 CBNZ W9, 0x1E21800
	0x01E217F8 MOVZ W8, 0x1
	0x01E217FC STRB W8, [X24]
	0x01E21800 LDR X0, [X27]
	0x01E21804 LDR W8, [X0 + 0xE0]
	0x01E21808 CBNZ W8, 0x1E21810
	0x01E2180C BL 0x1C16DFC
	0x01E21810 MOV X0, X21
	0x01E21814 MOV X1, X31
	0x01E21818 MOV X2, X31
	0x01E2181C BL 0x3C3883C
	0x01E21820 TBZ X0, 0x0, 0x1E218DC
	0x01E21824 LDR X0, [X27]
	0x01E21828 LDR X20, [X19 + 0x18]
	0x01E2182C LDR W8, [X0 + 0xE0]
	0x01E21830 CBNZ W8, 0x1E21838
	0x01E21834 BL 0x1C16DFC
	0x01E21838 MOV X0, X20
	0x01E2183C MOV X1, X31
	0x01E21840 MOV X2, X31
	0x01E21844 BL 0x3C354F8
	0x01E21848 TBZ X0, 0x0, 0x1E21870
	0x01E2184C LDR X0, [X27]
	0x01E21850 LDR X20, [X19 + 0x18]
	0x01E21854 LDR W8, [X0 + 0xE0]
	0x01E21858 CBNZ W8, 0x1E21860
	0x01E2185C BL 0x1C16DFC
	0x01E21860 MOV X0, X20
	0x01E21864 MOV X1, X31
	0x01E21868 BL 0x3C394A8
	0x01E2186C STR X31, [X19 + 0x18]
	0x01E21870 LDR X0, [X19 + 0x48]
	0x01E21874 STR X31, [X19 + 0x20]
	0x01E21878 CBZ X0, 0x1E21DA4
	0x01E2187C ADRP X8, 0x22D9000
	0x01E21880 LDR X8, [X8 + 0x820]
	0x01E21884 LDR X1, [X8]
	0x01E21888 ADD X8, X31, 0x18
	0x01E2188C BL 0x301CB58
	0x01E21890 LDUR V0, [X31 + 0x18]
	0x01E21894 LDR X8, [X31 + 0x28]
	0x01E21898 ADRP X21, 0x22D9000
	0x01E2189C STR V0, [X31 + 0x3]
	0x01E218A0 STR X8, [X31 + 0x40]
	0x01E218A4 LDR X21, [X21 + 0x808]
	0x01E218A8 LDR X1, [X21]
	0x01E218AC ADD X0, X31, 0x30
	0x01E218B0 BL 0x2BC4350
	0x01E218B4 TBZ X0, 0x0, 0x1E21A8C
	0x01E218B8 LDR X0, [X27]
	0x01E218BC LDR X20, [X31 + 0x40]
	0x01E218C0 LDR W8, [X0 + 0xE0]
	0x01E218C4 CBNZ W8, 0x1E218CC
	0x01E218C8 BL 0x1C16DFC
	0x01E218CC MOV X0, X20
	0x01E218D0 MOV X1, X31
	0x01E218D4 BL 0x3C394A8
	0x01E218D8 B 0x1E218A8
	0x01E218DC TBZ X23, 0x0, 0x1E21934
	0x01E218E0 LDR X0, [X27]
	0x01E218E4 LDR X25, [X19 + 0x18]
	0x01E218E8 LDR W8, [X0 + 0xE0]
	0x01E218EC CBNZ W8, 0x1E218F4
	0x01E218F0 BL 0x1C16DFC
	0x01E218F4 MOV X0, X25
	0x01E218F8 MOV X1, X31
	0x01E218FC MOV X2, X31
	0x01E21900 BL 0x3C354F8
	0x01E21904 TBZ X0, 0x0, 0x1E21934
	0x01E21908 LDR X0, [X27]
	0x01E2190C LDR X25, [X19 + 0x18]
	0x01E21910 LDR W8, [X0 + 0xE0]
	0x01E21914 CBNZ W8, 0x1E2191C
	0x01E21918 BL 0x1C16DFC
	0x01E2191C MOV X0, X25
	0x01E21920 MOV X1, X31
	0x01E21924 BL 0x3C394A8
	0x01E21928 STR X31, [X19 + 0x18]
	0x01E2192C STP X31, X31, [X19 + 0x38]
	0x01E21930 STR X31, [X19 + 0x30]
	0x01E21934 STR X21, [X19 + 0x20]
	0x01E21938 LDR X0, [X27]
	0x01E2193C LDR X25, [X19 + 0x18]
	0x01E21940 LDR W8, [X0 + 0xE0]
	0x01E21944 CBNZ W8, 0x1E2194C
	0x01E21948 BL 0x1C16DFC
	0x01E2194C MOV X0, X25
	0x01E21950 MOV X1, X31
	0x01E21954 MOV X2, X31
	0x01E21958 BL 0x3C3883C
	0x01E2195C TBZ X0, 0x0, 0x1E21A20
	0x01E21960 ADRP X9, 0x22D9000
	0x01E21964 LDR W8, [X19 + 0x10]
	0x01E21968 LDR X9, [X9 + 0x7F8]
	0x01E2196C ADD X1, X31, 0x18
	0x01E21970 STR W8, [X31 + 0x18]
	0x01E21974 LDR X0, [X9]
	0x01E21978 BL 0x1C16E04
	0x01E2197C ADRP X8, 0x22D6000
	0x01E21980 LDR X8, [X8 + 0x110]
	0x01E21984 MOV X1, X0
	0x01E21988 MOV X2, X31
	0x01E2198C LDR X8, [X8]
	0x01E21990 MOV X0, X8
	0x01E21994 BL 0x321EFD0
	0x01E21998 ADRP X8, 0x22D2000
	0x01E2199C LDR X8, [X8 + 0xA58]
	0x01E219A0 MOV X26, X0
	0x01E219A4 LDR X8, [X8]
	0x01E219A8 MOV X0, X8
	0x01E219AC BL 0x1C16F10
	0x01E219B0 MOV X1, X26
	0x01E219B4 MOV X2, X31
	0x01E219B8 MOV X25, X0
	0x01E219BC BL 0x3C35934
	0x01E219C0 STR X25, [X19 + 0x18]
	0x01E219C4 CBZ X25, 0x1E21DA4
	0x01E219C8 MOV X0, X25
	0x01E219CC MOV X1, X31
	0x01E219D0 BL 0x3C356F8
	0x01E219D4 MOV X25, X0
	0x01E219D8 MOV X0, X20
	0x01E219DC MOV X1, X31
	0x01E219E0 BL 0x3C32E90
	0x01E219E4 CBZ X25, 0x1E21DA4
	0x01E219E8 MOV X1, X0
	0x01E219EC MOV X0, X25
	0x01E219F0 MOV W2, W31
	0x01E219F4 MOV X3, X31
	0x01E219F8 BL 0x3C3FEB8
	0x01E219FC LDR X0, [X19 + 0x18]
	0x01E21A00 CBZ X0, 0x1E21DA4
	0x01E21A04 LDRB W8, [X20 + 0x44]
	0x01E21A08 MOVZ W9, 0x6
	0x01E21A0C MOV X2, X31
	0x01E21A10 CMP W8, 0x0
	0x01E21A14 MOVZ W8, 0x8
	0x01E21A18 CSEL W1, W8, W9, EQ
	0x01E21A1C BL 0x3C35770
	0x01E21A20 TBZ X23, 0x0, 0x1E21B10
	0x01E21A24 LDR X0, [X19 + 0x48]
	0x01E21A28 CBZ X0, 0x1E21DA4
	0x01E21A2C ADRP X8, 0x22D9000
	0x01E21A30 LDR X8, [X8 + 0x820]
	0x01E21A34 LDR X1, [X8]
	0x01E21A38 ADD X8, X31, 0x18
	0x01E21A3C BL 0x301CB58
	0x01E21A40 LDUR V0, [X31 + 0x18]
	0x01E21A44 LDR X8, [X31 + 0x28]
	0x01E21A48 ADRP X26, 0x22D9000
	0x01E21A4C STR V0, [X31 + 0x3]
	0x01E21A50 STR X8, [X31 + 0x40]
	0x01E21A54 LDR X26, [X26 + 0x808]
	0x01E21A58 LDR X1, [X26]
	0x01E21A5C ADD X0, X31, 0x30
	0x01E21A60 BL 0x2BC4350
	0x01E21A64 TBZ X0, 0x0, 0x1E21AD0
	0x01E21A68 LDR X0, [X27]
	0x01E21A6C LDR X25, [X31 + 0x40]
	0x01E21A70 LDR W8, [X0 + 0xE0]
	0x01E21A74 CBNZ W8, 0x1E21A7C
	0x01E21A78 BL 0x1C16DFC
	0x01E21A7C MOV X0, X25
	0x01E21A80 MOV X1, X31
	0x01E21A84 BL 0x3C394A8
	0x01E21A88 B 0x1E21A58
	0x01E21A8C ADRP X8, 0x22D9000
	0x01E21A90 LDR X8, [X8 + 0x800]
	0x01E21A94 ADD X0, X31, 0x30
	0x01E21A98 LDR X1, [X8]
	0x01E21A9C BL 0x2BC434C
	0x01E21AA0 LDR X8, [X19 + 0x48]
	0x01E21AA4 CBZ X8, 0x1E21DA4
	0x01E21AA8 LDP W2, W9, [X8 + 0x18]
	0x01E21AAC ADD W9, W9, 0x1
	0x01E21AB0 CMP W2, 0x1
	0x01E21AB4 STP W31, W9, [X8 + 0x18]
	0x01E21AB8 B.LT 0x1E222C4
	0x01E21ABC LDR X0, [X8 + 0x10]
	0x01E21AC0 MOV W1, W31
	0x01E21AC4 MOV X3, X31
	0x01E21AC8 BL 0x339FA34
	0x01E21ACC B 0x1E222C4
	0x01E21AD0 ADRP X8, 0x22D9000
	0x01E21AD4 LDR X8, [X8 + 0x800]
	0x01E21AD8 ADD X0, X31, 0x30
	0x01E21ADC LDR X1, [X8]
	0x01E21AE0 BL 0x2BC434C
	0x01E21AE4 LDR X8, [X19 + 0x48]
	0x01E21AE8 CBZ X8, 0x1E21DA4
	0x01E21AEC LDP W2, W9, [X8 + 0x18]
	0x01E21AF0 ADD W9, W9, 0x1
	0x01E21AF4 CMP W2, 0x1
	0x01E21AF8 STP W31, W9, [X8 + 0x18]
	0x01E21AFC B.LT 0x1E21B10
	0x01E21B00 LDR X0, [X8 + 0x10]
	0x01E21B04 MOV W1, W31
	0x01E21B08 MOV X3, X31
	0x01E21B0C BL 0x339FA34
	0x01E21B10 ADRP X9, 0x22D9000
	0x01E21B14 LDR X25, [X19 + 0x18]
	0x01E21B18 LDR W8, [X19 + 0x10]
	0x01E21B1C LDR X9, [X9 + 0x7F8]
	0x01E21B20 ADD X1, X31, 0x18
	0x01E21B24 STR W8, [X31 + 0x18]
	0x01E21B28 LDR X0, [X9]
	0x01E21B2C BL 0x1C16E04
	0x01E21B30 CBZ X21, 0x1E21DA4
	0x01E21B34 MOV X26, X0
	0x01E21B38 MOV X0, X21
	0x01E21B3C MOV X1, X31
	0x01E21B40 BL 0x3C389D4
	0x01E21B44 ADRP X8, 0x22D9000
	0x01E21B48 LDR X8, [X8 + 0x828]
	0x01E21B4C MOV X2, X0
	0x01E21B50 MOV X1, X26
	0x01E21B54 MOV X3, X31
	0x01E21B58 LDR X8, [X8]
	0x01E21B5C MOV X0, X8
	0x01E21B60 BL 0x3227BD4
	0x01E21B64 CBZ X25, 0x1E21DA4
	0x01E21B68 MOV X1, X0
	0x01E21B6C MOV X0, X25
	0x01E21B70 MOV X2, X31
	0x01E21B74 BL 0x3C38A84
	0x01E21B78 LDR X0, [X19 + 0x18]
	0x01E21B7C CBZ X0, 0x1E21DA4
	0x01E21B80 MOV X1, X31
	0x01E21B84 BL 0x3C356F8
	0x01E21B88 CBZ X0, 0x1E21DA4
	0x01E21B8C LDP S1, S2, [X21 + 0x28]
	0x01E21B90 LDR V0, [X21 + 0x24]
	0x01E21B94 MOV X1, X31
	0x01E21B98 BL 0x3C3EC04
	0x01E21B9C LDR X0, [X19 + 0x18]
	0x01E21BA0 CBZ X0, 0x1E21DA4
	0x01E21BA4 MOV X1, X31
	0x01E21BA8 BL 0x3C356F8
	0x01E21BAC CBZ X0, 0x1E21DA4
	0x01E21BB0 LDP S2, S3, [X21 + 0x38]
	0x01E21BB4 LDP S0, S1, [X21 + 0x30]
	0x01E21BB8 MOV X1, X31
	0x01E21BBC BL 0x3C3F8B8
	0x01E21BC0 TBZ X23, 0x0, 0x1E21C40
	0x01E21BC4 LDR X0, [X27]
	0x01E21BC8 LDR X25, [X21 + 0x48]
	0x01E21BCC LDR W8, [X0 + 0xE0]
	0x01E21BD0 CBNZ W8, 0x1E21BD8
	0x01E21BD4 BL 0x1C16DFC
	0x01E21BD8 ADRP X8, 0x22D9000
	0x01E21BDC LDR X8, [X8 + 0x7A8]
	0x01E21BE0 MOV X0, X25
	0x01E21BE4 LDR X1, [X8]
	0x01E21BE8 BL 0x222D35C
	0x01E21BEC LDR X8, [X19 + 0x48]
	0x01E21BF0 STR X0, [X19 + 0x28]
	0x01E21BF4 CBZ X8, 0x1E21DA4
	0x01E21BF8 ADRP X26, 0x22D9000
	0x01E21BFC LDR X26, [X26 + 0x798]
	0x01E21C00 LDR W11, [X8 + 0x1C]
	0x01E21C04 LDR X9, [X8 + 0x10]
	0x01E21C08 LDR X10, [X26]
	0x01E21C0C ADD W11, W11, 0x1
	0x01E21C10 STR W11, [X8 + 0x1C]
	0x01E21C14 CBZ X9, 0x1E21DA4
	0x01E21C18 LDRSW X11, [X8 + 0x18]
	0x01E21C1C LDR W12, [X9 + 0x18]
	0x01E21C20 MOV X1, X0
	0x01E21C24 CMP W11, W12
	0x01E21C28 B.CS 0x1E21C4C
	0x01E21C2C ADD W10, W11, 0x1
	0x01E21C30 ADD X9, X9, X11, 0x3, LSL
	0x01E21C34 STR W10, [X8 + 0x18]
	0x01E21C38 STR X1, [X9 + 0x20]
	0x01E21C3C B 0x1E21C60
	0x01E21C40 LDRB W8, [X21 + 0x20]
	0x01E21C44 CBNZ W8, 0x1E22234
	0x01E21C48 B 0x1E21DA8
	0x01E21C4C LDR X9, [X10 + 0x20]
	0x01E21C50 MOV X0, X8
	0x01E21C54 LDR X9, [X9 + 0xC0]
	0x01E21C58 LDR X2, [X9 + 0x70]
	0x01E21C5C BL 0x301BF90
	0x01E21C60 LDRB W8, [X21 + 0x20]
	0x01E21C64 CBZ W8, 0x1E21DA8
	0x01E21C68 MOVZ W8, 0x1
	0x01E21C6C STRB W8, [X24]
	0x01E21C70 LDR X0, [X27]
	0x01E21C74 LDR X24, [X19 + 0x38]
	0x01E21C78 LDR W8, [X0 + 0xE0]
	0x01E21C7C CBNZ W8, 0x1E21C84
	0x01E21C80 BL 0x1C16DFC
	0x01E21C84 MOV X0, X24
	0x01E21C88 MOV X1, X31
	0x01E21C8C MOV X2, X31
	0x01E21C90 BL 0x3C354F8
	0x01E21C94 TBZ X0, 0x0, 0x1E21CCC
	0x01E21C98 LDR X0, [X27]
	0x01E21C9C LDR X24, [X19 + 0x38]
	0x01E21CA0 LDR W8, [X0 + 0xE0]
	0x01E21CA4 CBNZ W8, 0x1E21CAC
	0x01E21CA8 BL 0x1C16DFC
	0x01E21CAC MOV X0, X24
	0x01E21CB0 MOV X1, X31
	0x01E21CB4 BL 0x3C394A8
	0x01E21CB8 LDR X0, [X19 + 0x30]
	0x01E21CBC MOV X1, X31
	0x01E21CC0 STR X31, [X19 + 0x38]
	0x01E21CC4 BL 0x3C394A8
	0x01E21CC8 STR X31, [X19 + 0x30]
	0x01E21CCC LDR X0, [X27]
	0x01E21CD0 LDR X24, [X19 + 0x40]
	0x01E21CD4 LDR W8, [X0 + 0xE0]
	0x01E21CD8 CBNZ W8, 0x1E21CE0
	0x01E21CDC BL 0x1C16DFC
	0x01E21CE0 MOV X0, X24
	0x01E21CE4 MOV X1, X31
	0x01E21CE8 MOV X2, X31
	0x01E21CEC BL 0x3C3883C
	0x01E21CF0 TBZ X0, 0x0, 0x1E22174
	0x01E21CF4 LDR X0, [X19 + 0x18]
	0x01E21CF8 CBZ X0, 0x1E21DA4
	0x01E21CFC ADRP X8, 0x22D9000
	0x01E21D00 LDR X8, [X8 + 0x778]
	0x01E21D04 LDR X1, [X8]
	0x01E21D08 BL 0x21E51FC
	0x01E21D0C STR X0, [X19 + 0x40]
	0x01E21D10 LDR X8, [X21 + 0x68]
	0x01E21D14 CBZ X8, 0x1E21DA4
	0x01E21D18 ADRP X9, 0x22D9000
	0x01E21D1C LDR X9, [X9 + 0x708]
	0x01E21D20 LDR W1, [X8 + 0x18]
	0x01E21D24 LDR X0, [X9]
	0x01E21D28 BL 0x1C16D6C
	0x01E21D2C LDR X8, [X21 + 0x68]
	0x01E21D30 CBZ X8, 0x1E21DA4
	0x01E21D34 MOV X24, X0
	0x01E21D38 MOV X28, X31
	0x01E21D3C ADD X29, X0, 0x20
	0x01E21D40 LDR W9, [X8 + 0x18]
	0x01E21D44 CMP X28, W9, SXTW
	0x01E21D48 B.GE 0x1E22138
	0x01E21D4C CMP X28, X9
	0x01E21D50 B.CS 0x1E222F4
	0x01E21D54 LDR X0, [X20 + 0x28]
	0x01E21D58 CBZ X0, 0x1E21DA4
	0x01E21D5C ADD X8, X8, X28, 0x2, LSL
	0x01E21D60 LDR W1, [X8 + 0x20]
	0x01E21D64 BL 0x1E1DBB0
	0x01E21D68 CBZ X24, 0x1E21DA4
	0x01E21D6C MOV X25, X0
	0x01E21D70 CBZ X0, 0x1E21D88
	0x01E21D74 LDR X8, [X24]
	0x01E21D78 MOV X0, X25
	0x01E21D7C LDR X1, [X8 + 0x40]
	0x01E21D80 BL 0x1C16E00
	0x01E21D84 CBZ X0, 0x1E222F8
	0x01E21D88 LDR W8, [X24 + 0x18]
	0x01E21D8C CMP X28, X8
	0x01E21D90 B.CS 0x1E222F4
	0x01E21D94 STR X25, [X29, X28, LSL #3]
	0x01E21D98 LDR X8, [X21 + 0x68]
	0x01E21D9C ADD X28, X28, 0x1
	0x01E21DA0 CBNZ X8, 0x1E21D40
	0x01E21DA4 BL 0x1C16F20
	0x01E21DA8 LDR X0, [X27]
	0x01E21DAC LDR X22, [X19 + 0x40]
	0x01E21DB0 LDR W8, [X0 + 0xE0]
	0x01E21DB4 CBNZ W8, 0x1E21DBC
	0x01E21DB8 BL 0x1C16DFC
	0x01E21DBC MOV X0, X22
	0x01E21DC0 MOV X1, X31
	0x01E21DC4 MOV X2, X31
	0x01E21DC8 BL 0x3C354F8
	0x01E21DCC TBZ X0, 0x0, 0x1E21DF4
	0x01E21DD0 LDR X0, [X27]
	0x01E21DD4 LDR X22, [X19 + 0x40]
	0x01E21DD8 LDR W8, [X0 + 0xE0]
	0x01E21DDC CBNZ W8, 0x1E21DE4
	0x01E21DE0 BL 0x1C16DFC
	0x01E21DE4 MOV X0, X22
	0x01E21DE8 MOV X1, X31
	0x01E21DEC BL 0x3C394A8
	0x01E21DF0 STR X31, [X19 + 0x40]
	0x01E21DF4 LDR X0, [X27]
	0x01E21DF8 LDR X22, [X19 + 0x38]
	0x01E21DFC LDR W8, [X0 + 0xE0]
	0x01E21E00 CBNZ W8, 0x1E21E08
	0x01E21E04 BL 0x1C16DFC
	0x01E21E08 MOV X0, X22
	0x01E21E0C MOV X1, X31
	0x01E21E10 MOV X2, X31
	0x01E21E14 BL 0x3C3883C
	0x01E21E18 TBZ X0, 0x0, 0x1E21E5C
	0x01E21E1C LDR X0, [X19 + 0x18]
	0x01E21E20 CBZ X0, 0x1E21DA4
	0x01E21E24 ADRP X8, 0x22D9000
	0x01E21E28 LDR X8, [X8 + 0x6F0]
	0x01E21E2C LDR X1, [X8]
	0x01E21E30 BL 0x21E51FC
	0x01E21E34 LDR X8, [X19 + 0x18]
	0x01E21E38 STR X0, [X19 + 0x30]
	0x01E21E3C CBZ X8, 0x1E21DA4
	0x01E21E40 ADRP X9, 0x22D9000
	0x01E21E44 LDR X9, [X9 + 0x6F8]
	0x01E21E48 MOV X0, X8
	0x01E21E4C LDR X1, [X9]
	0x01E21E50 BL 0x21E51FC
	0x01E21E54 STR X0, [X19 + 0x38]
	0x01E21E58 B 0x1E21E60
	0x01E21E5C LDR X0, [X19 + 0x38]
	0x01E21E60 CBZ X0, 0x1E21DA4
	0x01E21E64 LDR X1, [X19 + 0x28]
	0x01E21E68 MOV X2, X31
	0x01E21E6C BL 0x3C134D8
	0x01E21E70 LDR X0, [X19 + 0x30]
	0x01E21E74 CBZ X0, 0x1E21DA4
	0x01E21E78 LDR X1, [X21 + 0x40]
	0x01E21E7C MOV X2, X31
	0x01E21E80 BL 0x3C16D40
	0x01E21E84 LDR X8, [X21 + 0x50]
	0x01E21E88 CBZ X8, 0x1E21DA4
	0x01E21E8C LDR X9, [X20 + 0x60]
	0x01E21E90 CBZ X9, 0x1E21DA4
	0x01E21E94 LDR W10, [X8 + 0x18]
	0x01E21E98 LDR W11, [X9 + 0x18]
	0x01E21E9C SUB W10, W10, 0x1
	0x01E21EA0 CMP W10, W11
	0x01E21EA4 B.CS 0x1E222F4
	0x01E21EA8 ADD X9, X9, W10, 0x3, SXTW
	0x01E21EAC LDR X0, [X9 + 0x20]
	0x01E21EB0 CBZ X0, 0x1E21DA4
	0x01E21EB4 LDP S11, S12, [X8 + 0x1C]
	0x01E21EB8 LDR V13, [X8 + 0x24]
	0x01E21EBC MOV X1, X31
	0x01E21EC0 BL 0x3C3EB78
	0x01E21EC4 LDR X0, [X19 + 0x18]
	0x01E21EC8 CBZ X0, 0x1E21DA4
	0x01E21ECC MOV X1, X31
	0x01E21ED0 MOV V8.16B, V0.16B
	0x01E21ED4 MOV V9.16B, V1.16B
	0x01E21ED8 MOV V10.16B, V2.16B
	0x01E21EDC BL 0x3C356F8
	0x01E21EE0 CBZ X0, 0x1E21DA4
	0x01E21EE4 MOV X1, X31
	0x01E21EE8 MOV X22, X0
	0x01E21EEC BL 0x3C3EB78
	0x01E21EF0 FSUB S3, S8, S11
	0x01E21EF4 FSUB S4, S9, S12
	0x01E21EF8 FSUB S5, S10, S13
	0x01E21EFC FADD S0, S3, S0
	0x01E21F00 FADD S1, S4, S1
	0x01E21F04 FADD S2, S5, S2
	0x01E21F08 MOV X0, X22
	0x01E21F0C MOV X1, X31
	0x01E21F10 BL 0x3C3EC04
	0x01E21F14 MOV X0, X20
	0x01E21F18 MOV X1, X31
	0x01E21F1C BL 0x3C32E90
	0x01E21F20 CBZ X0, 0x1E21DA4
	0x01E21F24 MOV X1, X31
	0x01E21F28 BL 0x3C3DEB4
	0x01E21F2C LDR X8, [X21 + 0x50]
	0x01E21F30 CBZ X8, 0x1E21DA4
	0x01E21F34 LDR X9, [X20 + 0x60]
	0x01E21F38 CBZ X9, 0x1E21DA4
	0x01E21F3C LDR W10, [X8 + 0x18]
	0x01E21F40 LDR W11, [X9 + 0x18]
	0x01E21F44 SUB W10, W10, 0x1
	0x01E21F48 CMP W10, W11
	0x01E21F4C B.CS 0x1E222F4
	0x01E21F50 ADD X9, X9, W10, 0x3, SXTW
	0x01E21F54 LDR X0, [X9 + 0x20]
	0x01E21F58 CBZ X0, 0x1E21DA4
	0x01E21F5C LDP S10, S9, [X8 + 0x28]
	0x01E21F60 LDP S8, S11, [X8 + 0x30]
	0x01E21F64 MOV X1, X31
	0x01E21F68 MOV V14.16B, V0.16B
	0x01E21F6C MOV V13.16B, V1.16B
	0x01E21F70 MOV V12.16B, V2.16B
	0x01E21F74 MOV V15.16B, V3.16B
	0x01E21F78 BL 0x3C3DEB4
	0x01E21F7C LDR X0, [X19 + 0x18]
	0x01E21F80 STP S0, S1, [X31 + 0xC]
	0x01E21F84 STR S2, [X31 + 0x14]
	0x01E21F88 STR S3, [X31 + 0x8]
	0x01E21F8C CBZ X0, 0x1E21DA4
	0x01E21F90 MOV X1, X31
	0x01E21F94 BL 0x3C356F8
	0x01E21F98 CBZ X0, 0x1E21DA4
	0x01E21F9C FMUL S0, S15, S10
	0x01E21FA0 FMUL S1, S14, S11
	0x01E21FA4 FMUL S4, S15, S9
	0x01E21FA8 FMUL S5, S13, S11
	0x01E21FAC FMUL S17, S14, S10
	0x01E21FB0 FMUL S20, S15, S8
	0x01E21FB4 FMUL S21, S15, S11
	0x01E21FB8 FMUL S22, S12, S11
	0x01E21FBC FMUL S2, S13, S8
	0x01E21FC0 FMUL S6, S12, S10
	0x01E21FC4 FMUL S16, S14, S9
	0x01E21FC8 FMUL S19, S13, S9
	0x01E21FCC FADD S0, S0, S1
	0x01E21FD0 FADD S1, S4, S5
	0x01E21FD4 FADD S4, S20, S22
	0x01E21FD8 FSUB S5, S21, S17
	0x01E21FDC FMUL S3, S12, S9
	0x01E21FE0 FMUL S7, S14, S8
	0x01E21FE4 FMUL S18, S13, S10
	0x01E21FE8 FMUL S23, S12, S8
	0x01E21FEC FADD S0, S2, S0
	0x01E21FF0 FADD S1, S6, S1
	0x01E21FF4 FADD S2, S16, S4
	0x01E21FF8 FSUB S4, S5, S19
	0x01E21FFC MOV X1, X31
	0x01E22000 MOV X19, X0
	0x01E22004 FSUB S15, S0, S3
	0x01E22008 FSUB S8, S1, S7
	0x01E2200C FSUB S9, S2, S18
	0x01E22010 FSUB S10, S4, S23
	0x01E22014 BL 0x3C3DEB4
	0x01E22018 MOV V11.16B, V0.16B
	0x01E2201C MOV V13.16B, V1.16B
	0x01E22020 MOV V12.16B, V2.16B
	0x01E22024 MOV V14.16B, V3.16B
	0x01E22028 MOV V0.16B, V15.16B
	0x01E2202C MOV V1.16B, V8.16B
	0x01E22030 MOV V2.16B, V9.16B
	0x01E22034 MOV V3.16B, V10.16B
	0x01E22038 MOV X0, X31
	0x01E2203C BL 0x3C2A260
	0x01E22040 LDP S23, S21, [X31 + 0x8]
	0x01E22044 LDP S22, S24, [X31 + 0x10]
	0x01E22048 MOV X0, X19
	0x01E2204C MOV X1, X31
	0x01E22050 FMUL S4, S21, S3
	0x01E22054 FMUL S5, S23, S0
	0x01E22058 FMUL S6, S24, S1
	0x01E2205C FMUL S7, S22, S2
	0x01E22060 FMUL S16, S22, S3
	0x01E22064 FMUL S17, S23, S1
	0x01E22068 FMUL S18, S21, S2
	0x01E2206C FMUL S19, S24, S0
	0x01E22070 FMUL S20, S22, S0
	0x01E22074 FMUL S0, S21, S0
	0x01E22078 FMUL S21, S21, S1
	0x01E2207C FMUL S1, S22, S1
	0x01E22080 FMUL S22, S24, S3
	0x01E22084 FMUL S3, S23, S3
	0x01E22088 FMUL S23, S23, S2
	0x01E2208C FADD S4, S4, S5
	0x01E22090 FADD S5, S16, S17
	0x01E22094 FADD S16, S22, S23
	0x01E22098 FSUB S0, S3, S0
	0x01E2209C FMUL S2, S24, S2
	0x01E220A0 FADD S3, S6, S4
	0x01E220A4 FADD S4, S18, S5
	0x01E220A8 FADD S5, S20, S16
	0x01E220AC FSUB S0, S0, S1
	0x01E220B0 FSUB S1, S3, S7
	0x01E220B4 FSUB S3, S4, S19
	0x01E220B8 FSUB S4, S5, S21
	0x01E220BC FSUB S0, S0, S2
	0x01E220C0 FMUL S2, S14, S1
	0x01E220C4 FMUL S5, S11, S0
	0x01E220C8 FMUL S7, S12, S3
	0x01E220CC FMUL S16, S14, S3
	0x01E220D0 FMUL S17, S13, S0
	0x01E220D4 FMUL S18, S12, S1
	0x01E220D8 FMUL S20, S11, S3
	0x01E220DC FMUL S21, S11, S1
	0x01E220E0 FMUL S22, S13, S1
	0x01E220E4 FMUL S1, S13, S3
	0x01E220E8 FMUL S3, S14, S4
	0x01E220EC FMUL S23, S14, S0
	0x01E220F0 FMUL S0, S12, S0
	0x01E220F4 FMUL S6, S13, S4
	0x01E220F8 FADD S2, S2, S5
	0x01E220FC FADD S5, S16, S17
	0x01E22100 FADD S0, S3, S0
	0x01E22104 FSUB S3, S23, S21
	0x01E22108 FMUL S19, S11, S4
	0x01E2210C FMUL S4, S12, S4
	0x01E22110 FADD S2, S6, S2
	0x01E22114 FADD S5, S18, S5
	0x01E22118 FADD S6, S20, S0
	0x01E2211C FSUB S3, S3, S1
	0x01E22120 FSUB S0, S2, S7
	0x01E22124 FSUB S1, S5, S19
	0x01E22128 FSUB S2, S6, S22
	0x01E2212C FSUB S3, S3, S4
	0x01E22130 BL 0x3C3F7AC
	0x01E22134 B 0x1E222C4
	0x01E22138 LDR X0, [X19 + 0x40]
	0x01E2213C CBZ X0, 0x1E21DA4
	0x01E22140 MOV X1, X24
	0x01E22144 MOV X2, X31
	0x01E22148 BL 0x3C16E48
	0x01E2214C LDR X0, [X20 + 0x28]
	0x01E22150 CBZ X0, 0x1E21DA4
	0x01E22154 LDR X24, [X19 + 0x40]
	0x01E22158 MOVZ W1, 0x1
	0x01E2215C BL 0x1E1DBB0
	0x01E22160 CBZ X24, 0x1E21DA4
	0x01E22164 MOV X1, X0
	0x01E22168 MOV X0, X24
	0x01E2216C MOV X2, X31
	0x01E22170 BL 0x3C16E04
	0x01E22174 LDR X0, [X19 + 0x40]
	0x01E22178 CBZ X0, 0x1E21DA4
	0x01E2217C LDR X1, [X19 + 0x28]
	0x01E22180 MOV X2, X31
	0x01E22184 BL 0x3C134D8
	0x01E22188 LDR X0, [X27]
	0x01E2218C LDR X24, [X19 + 0x40]
	0x01E22190 LDR X25, [X21 + 0x40]
	0x01E22194 LDR W8, [X0 + 0xE0]
	0x01E22198 CBNZ W8, 0x1E221A0
	0x01E2219C BL 0x1C16DFC
	0x01E221A0 ADRP X8, 0x22D2000
	0x01E221A4 LDR X8, [X8 + 0xE38]
	0x01E221A8 MOV X0, X25
	0x01E221AC LDR X1, [X8]
	0x01E221B0 BL 0x222D35C
	0x01E221B4 CBZ X24, 0x1E21DA4
	0x01E221B8 MOV X1, X0
	0x01E221BC MOV X0, X24
	0x01E221C0 MOV X2, X31
	0x01E221C4 BL 0x3C16EC8
	0x01E221C8 LDR X0, [X19 + 0x40]
	0x01E221CC CBZ X0, 0x1E21DA4
	0x01E221D0 LDR X24, [X19 + 0x48]
	0x01E221D4 MOV X1, X31
	0x01E221D8 BL 0x3C16E8C
	0x01E221DC CBZ X24, 0x1E21DA4
	0x01E221E0 LDR W10, [X24 + 0x1C]
	0x01E221E4 LDR X8, [X24 + 0x10]
	0x01E221E8 LDR X9, [X26]
	0x01E221EC ADD W10, W10, 0x1
	0x01E221F0 STR W10, [X24 + 0x1C]
	0x01E221F4 CBZ X8, 0x1E21DA4
	0x01E221F8 LDRSW X10, [X24 + 0x18]
	0x01E221FC LDR W11, [X8 + 0x18]
	0x01E22200 MOV X1, X0
	0x01E22204 CMP W10, W11
	0x01E22208 B.CS 0x1E22220
	0x01E2220C ADD W9, W10, 0x1
	0x01E22210 ADD X8, X8, X10, 0x3, LSL
	0x01E22214 STR W9, [X24 + 0x18]
	0x01E22218 STR X1, [X8 + 0x20]
	0x01E2221C B 0x1E22234
	0x01E22220 LDR X8, [X9 + 0x20]
	0x01E22224 MOV X0, X24
	0x01E22228 LDR X8, [X8 + 0xC0]
	0x01E2222C LDR X2, [X8 + 0x70]
	0x01E22230 BL 0x301BF90
	0x01E22234 ORR W8, W23, W22, 0x0
	0x01E22238 TBZ X8, 0x0, 0x1E222C4
	0x01E2223C LDR X0, [X19 + 0x40]
	0x01E22240 CBZ X0, 0x1E21DA4
	0x01E22244 MOV X1, X31
	0x01E22248 BL 0x3C16E8C
	0x01E2224C LDR X8, [X21 + 0x40]
	0x01E22250 CBZ X8, 0x1E21DA4
	0x01E22254 MOV X22, X0
	0x01E22258 MOV X0, X8
	0x01E2225C MOV X1, X31
	0x01E22260 BL 0x3C17EBC
	0x01E22264 CBZ X22, 0x1E21DA4
	0x01E22268 MOV X1, X0
	0x01E2226C MOV X0, X22
	0x01E22270 MOV X2, X31
	0x01E22274 BL 0x3C17F08
	0x01E22278 LDR X9, [X21 + 0x58]
	0x01E2227C CBZ X9, 0x1E21DA4
	0x01E22280 LDR X8, [X20 + 0x20]
	0x01E22284 CBZ X8, 0x1E21DA4
	0x01E22288 LDR X0, [X19 + 0x40]
	0x01E2228C CBZ X0, 0x1E21DA4
	0x01E22290 LDR X19, [X21 + 0x60]
	0x01E22294 LDR X21, [X9 + 0x20]
	0x01E22298 LDR X20, [X20 + 0x58]
	0x01E2229C LDR X22, [X8 + 0x20]
	0x01E222A0 MOV X1, X31
	0x01E222A4 BL 0x3C16E8C
	0x01E222A8 MOV X4, X0
	0x01E222AC MOV X0, X19
	0x01E222B0 MOV X1, X21
	0x01E222B4 MOV X2, X20
	0x01E222B8 MOV X3, X22
	0x01E222BC MOV X5, X31
	0x01E222C0 BL 0x1D668C8
	0x01E222C4 LDP X20, X19, [X31 + 0xE0]
	0x01E222C8 LDP X22, X21, [X31 + 0xD0]
	0x01E222CC LDP X24, X23, [X31 + 0xC0]
	0x01E222D0 LDP X26, X25, [X31 + 0xB0]
	0x01E222D4 LDP X28, X27, [X31 + 0xA0]
	0x01E222D8 LDP X29, X30, [X31 + 0x90]
	0x01E222DC LDP D9, D8, [X31 + 0x80]
	0x01E222E0 LDP D11, D10, [X31 + 0x70]
	0x01E222E4 LDP D13, D12, [X31 + 0x60]
	0x01E222E8 LDP D15, D14, [X31 + 0x50]
	0x01E222EC ADD X31, X31, 0xF0
	0x01E222F0 RET
	0x01E222F4 BL 0x1C16F28
	0x01E222F8 BL 0x1C16F44
	0x01E222FC MOV X1, X31
	0x01E22300 BL 0x1C16DEC
	0x01E22304 B 0x1E22308
	0x01E22308 MOV X25, X0
	0x01E2230C CMP W1, 0x1
	0x01E22310 B.NE 0x1E22344
	0x01E22314 MOV X0, X25
	0x01E22318 BL 0x3EB1AD0
	0x01E2231C LDR X26, [X0]
	0x01E22320 BL 0x3EB1AE0
	0x01E22324 ADRP X8, 0x22D8000
	0x01E22328 LDR X8, [X8 + 0x800]
	0x01E2232C ADD X0, X31, 0x30
	0x01E22330 LDR X1, [X8]
	0x01E22334 BL 0x2BC434C
	0x01E22338 CBZ X26, 0x1E21AE4
	0x01E2233C MOV X0, X26
	0x01E22340 BL 0x1C16F18
	0x01E22344 MOV X26, X31
	0x01E22348 B 0x1E22350
	0x01E2234C MOV X25, X0
	0x01E22350 ADRP X8, 0x22D8000
	0x01E22354 LDR X8, [X8 + 0x800]
	0x01E22358 LDR X1, [X8]
	0x01E2235C ADD X0, X31, 0x30
	0x01E22360 BL 0x2BC434C
	0x01E22364 CBZ X26, 0x1E223D4
	0x01E22368 MOV X0, X26
	0x01E2236C BL 0x1C16F18
	0x01E22370 B 0x1E22374
	0x01E22374 MOV X25, X0
	0x01E22378 CMP W1, 0x1
	0x01E2237C B.NE 0x1E223B0
	0x01E22380 MOV X0, X25
	0x01E22384 BL 0x3EB1AD0
	0x01E22388 LDR X20, [X0]
	0x01E2238C BL 0x3EB1AE0
	0x01E22390 ADRP X8, 0x22D8000
	0x01E22394 LDR X8, [X8 + 0x800]
	0x01E22398 ADD X0, X31, 0x30
	0x01E2239C LDR X1, [X8]
	0x01E223A0 BL 0x2BC434C
	0x01E223A4 CBZ X20, 0x1E21AA0
	0x01E223A8 MOV X0, X20
	0x01E223AC BL 0x1C16F18
	0x01E223B0 MOV X20, X31
	0x01E223B4 B 0x1E223BC
	0x01E223B8 MOV X25, X0
	0x01E223BC ADRP X8, 0x22D8000
	0x01E223C0 LDR X8, [X8 + 0x800]
	0x01E223C4 LDR X1, [X8]
	0x01E223C8 ADD X0, X31, 0x30
	0x01E223CC BL 0x2BC434C
	0x01E223D0 CBNZ X20, 0x1E223DC
	0x01E223D4 MOV X0, X25
	0x01E223D8 BL 0x1D2C690
	0x01E223DC MOV X0, X20
	0x01E223E0 BL 0x1C16F18
	0x01E223E4 BL 0x1990590
	0x01E223E8 SUB X31, X31, 0xE0
	0x01E223EC STP D9, D8, [X31 + 0x70]
	0x01E223F0 STP X29, X30, [X31 + 0x80]
	0x01E223F4 STP X28, X27, [X31 + 0x90]
	0x01E223F8 STP X26, X25, [X31 + 0xA0]
	0x01E223FC STP X24, X23, [X31 + 0xB0]
	0x01E22400 STP X22, X21, [X31 + 0xC0]
	0x01E22404 STP X20, X19, [X31 + 0xD0]
	0x01E22408 ADRP X19, 0x25B6000
	0x01E2240C LDRB W8, [X19 + 0xE30]
	0x01E22410 MOV W21, W1
	0x01E22414 STP X2, X0, [X31 + 0x20]
	0x01E22418 TBNZ X8, 0x0, 0x1E22514
	0x01E2241C ADRP X0, 0x22D8000
	0x01E22420 LDR X0, [X0 + 0x830]
	0x01E22424 BL 0x1C16CF4
	0x01E22428 ADRP X0, 0x22D8000
	0x01E2242C LDR X0, [X0 + 0x838]
	0x01E22430 BL 0x1C16CF4
	0x01E22434 ADRP X0, 0x22D8000
	0x01E22438 LDR X0, [X0 + 0x840]
	0x01E2243C BL 0x1C16CF4
	0x01E22440 ADRP X0, 0x22D3000
	0x01E22444 LDR X0, [X0 + 0x9D8]
	0x01E22448 BL 0x1C16CF4
	0x01E2244C ADRP X0, 0x22D8000
	0x01E22450 LDR X0, [X0 + 0x678]
	0x01E22454 BL 0x1C16CF4
	0x01E22458 ADRP X0, 0x22D2000
	0x01E2245C LDR X0, [X0 + 0xDF8]
	0x01E22460 BL 0x1C16CF4
	0x01E22464 ADRP X0, 0x22D8000
	0x01E22468 LDR X0, [X0 + 0x848]
	0x01E2246C BL 0x1C16CF4
	0x01E22470 ADRP X0, 0x22D3000
	0x01E22474 LDR X0, [X0 + 0x9E0]
	0x01E22478 BL 0x1C16CF4
	0x01E2247C ADRP X0, 0x22D8000
	0x01E22480 LDR X0, [X0 + 0x850]
	0x01E22484 BL 0x1C16CF4
	0x01E22488 ADRP X0, 0x22D2000
	0x01E2248C LDR X0, [X0 + 0xE08]
	0x01E22490 BL 0x1C16CF4
	0x01E22494 ADRP X0, 0x22D2000
	0x01E22498 LDR X0, [X0 + 0xE10]
	0x01E2249C BL 0x1C16CF4
	0x01E224A0 ADRP X0, 0x22D8000
	0x01E224A4 LDR X0, [X0 + 0x798]
	0x01E224A8 BL 0x1C16CF4
	0x01E224AC ADRP X0, 0x22D8000
	0x01E224B0 LDR X0, [X0 + 0x858]
	0x01E224B4 BL 0x1C16CF4
	0x01E224B8 ADRP X0, 0x22D8000
	0x01E224BC LDR X0, [X0 + 0x860]
	0x01E224C0 BL 0x1C16CF4
	0x01E224C4 ADRP X0, 0x22D2000
	0x01E224C8 LDR X0, [X0 + 0xE18]
	0x01E224CC BL 0x1C16CF4
	0x01E224D0 ADRP X0, 0x22D2000
	0x01E224D4 LDR X0, [X0 + 0xE20]
	0x01E224D8 BL 0x1C16CF4
	0x01E224DC ADRP X0, 0x22D2000
	0x01E224E0 LDR X0, [X0 + 0xE28]
	0x01E224E4 BL 0x1C16CF4
	0x01E224E8 ADRP X0, 0x22D2000
	0x01E224EC LDR X0, [X0 + 0xE30]
	0x01E224F0 BL 0x1C16CF4
	0x01E224F4 ADRP X0, 0x22D2000
	0x01E224F8 LDR X0, [X0 + 0xE38]
	0x01E224FC BL 0x1C16CF4
	0x01E22500 ADRP X0, 0x22D1000
	0x01E22504 LDR X0, [X0 + 0x598]
	0x01E22508 BL 0x1C16CF4
	0x01E2250C MOVZ W8, 0x1
	0x01E22510 STRB W8, [X19 + 0xE30]
	0x01E22514 LDR X8, [X31 + 0x28]
	0x01E22518 STP X31, X31, [X31 + 0x50]
	0x01E2251C STR X31, [X31 + 0x60]
	0x01E22520 LDR X20, [X8 + 0x68]
	0x01E22524 STR X20, [X31 + 0x18]
	0x01E22528 TBZ X21, 0x0, 0x1E22CF0
	0x01E2252C CBZ X20, 0x1E22E10
	0x01E22530 LDR W8, [X20 + 0x18]
	0x01E22534 CMP W8, 0x1
	0x01E22538 B.LT 0x1E22DEC
	0x01E2253C ADRP X21, 0x22D8000
	0x01E22540 ADRP X9, 0xFFFFFFFFFECC7000
	0x01E22544 LDR X21, [X21 + 0x838]
	0x01E22548 LDR V8, [X9 + 0xFC8]
	0x01E2254C MOVZ W9, 0x5C29
	0x01E22550 MOVK W9, 0xBC8F0000
	0x01E22554 MOV W10, W31
	0x01E22558 UNIMPLEMENTED
	0x01E2255C CMP W10, W8
	0x01E22560 B.CS 0x1E22E14
	0x01E22564 ADD X8, X20, W10, 0x3, SXTW
	0x01E22568 LDR X22, [X8 + 0x20]
	0x01E2256C CBZ X22, 0x1E22E10
	0x01E22570 LDRB W8, [X22 + 0x41]
	0x01E22574 CBZ W8, 0x1E22C64
	0x01E22578 LDRB W8, [X22 + 0x40]
	0x01E2257C CBNZ W8, 0x1E22C64
	0x01E22580 LDR X8, [X22 + 0x38]
	0x01E22584 CBZ X8, 0x1E22E10
	0x01E22588 LDR X0, [X8 + 0x40]
	0x01E2258C STR W10, [X31 + 0xC]
	0x01E22590 CBZ X0, 0x1E22E10
	0x01E22594 LDR X20, [X8 + 0x60]
	0x01E22598 MOV X1, X31
	0x01E2259C BL 0x3C18F3C
	0x01E225A0 LDR X19, [X31 + 0x28]
	0x01E225A4 STR X0, [X31 + 0x30]
	0x01E225A8 LDR X23, [X19 + 0x88]
	0x01E225AC CBNZ X23, 0x1E225EC
	0x01E225B0 LDR X19, [X31 + 0x30]
	0x01E225B4 CBZ X19, 0x1E22E10
	0x01E225B8 ADRP X8, 0x22D2000
	0x01E225BC LDR X8, [X8 + 0xE30]
	0x01E225C0 LDR X0, [X8]
	0x01E225C4 BL 0x1C16F10
	0x01E225C8 ADRP X8, 0x22D2000
	0x01E225CC LDR W1, [X19 + 0x18]
	0x01E225D0 LDR X8, [X8 + 0xE20]
	0x01E225D4 MOV X23, X0
	0x01E225D8 LDR X2, [X8]
	0x01E225DC BL 0x2FDBF80
	0x01E225E0 LDR X19, [X31 + 0x28]
	0x01E225E4 STR X23, [X19 + 0x88]
	0x01E225E8 CBZ X23, 0x1E22E10
	0x01E225EC LDR W8, [X23 + 0x1C]
	0x01E225F0 ADD W8, W8, 0x1
	0x01E225F4 STP W31, W8, [X23 + 0x18]
	0x01E225F8 LDR X23, [X19 + 0x90]
	0x01E225FC CBZ X23, 0x1E22608
	0x01E22600 STR X23, [X19 + 0x90]
	0x01E22604 B 0x1E22638
	0x01E22608 ADRP X8, 0x22D2000
	0x01E2260C LDR X8, [X8 + 0xE08]
	0x01E22610 LDR X0, [X8]
	0x01E22614 BL 0x1C16F10
	0x01E22618 ADRP X8, 0x22D3000
	0x01E2261C LDR X8, [X8 + 0x9E0]
	0x01E22620 MOVZ W1, 0x40
	0x01E22624 MOV X23, X0
	0x01E22628 LDR X2, [X8]
	0x01E2262C BL 0x2DA9F8C
	0x01E22630 STR X23, [X19 + 0x90]
	0x01E22634 CBZ X23, 0x1E22E10
	0x01E22638 STR X22, [X31 + 0x10]
	0x01E2263C ADRP X8, 0x22D8000
	0x01E22640 LDR X8, [X8 + 0x678]
	0x01E22644 MOV X0, X23
	0x01E22648 LDR X1, [X8]
	0x01E2264C BL 0x2DAA53C
	0x01E22650 LDR X8, [X31 + 0x30]
	0x01E22654 CBZ X8, 0x1E22E10
	0x01E22658 LDR X24, [X8 + 0x18]
	0x01E2265C CMP W24, 0x1
	0x01E22660 B.LT 0x1E22908
	0x01E22664 MOVZ W21, 0x2
	0x01E22668 SUB W8, W21, 0x2
	0x01E2266C CMP W8, W24
	0x01E22670 B.CS 0x1E22E14

ISIL:
	001 Subtract X31, X31, 416
	002 Move [X31+256], D14
	003 Move [X31+272], D13
	004 Move [X31+280], D12
	005 Move [X31+288], D11
	006 Move [X31+296], D10
	007 Move [X31+304], D9
	008 Move [X31+312], D8
	009 Move [X31+320], X29
	010 Move [X31+328], X30
	011 Move [X31+336], X28
	012 Move [X31+344], X27
	013 Move [X31+352], X26
	014 Move [X31+360], X25
	015 Move [X31+368], X24
	016 Move [X31+376], X23
	017 Move [X31+384], X22
	018 Move [X31+392], X21
	019 Move [X31+400], X20
	020 Move [X31+408], X19
	021 Move X25, 0x25B8000
	022 Move W8, [X25+3630]
	023 Move W22, W5
	024 Move X27, X4
	025 Move X23, X3
	026 Move X21, X2
	027 Move W24, W1
	028 Move X19, X0
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {155}
	033 Move X0, 0x22DA000
	034 Move X0, [X0+1840]
	035 Call 0x1C17CF4
	036 Move X0, 0x22DA000
	037 Move X0, [X0+1848]
	038 Call 0x1C17CF4
	039 Move X0, 0x22DA000
	040 Move X0, [X0+1264]
	041 Call 0x1C17CF4
	042 Move X0, 0x22DA000
	043 Move X0, [X0+1856]
	044 Call 0x1C17CF4
	045 Move X0, 0x22D3000
	046 Move X0, [X0+2600]
	047 Call 0x1C17CF4
	048 Move X0, 0x22D3000
	049 Move X0, [X0+1808]
	050 Call 0x1C17CF4
	051 Move X0, 0x22DA000
	052 Move X0, [X0+1864]
	053 Call 0x1C17CF4
	054 Move X0, 0x22DA000
	055 Move X0, [X0+1872]
	056 Call 0x1C17CF4
	057 Move X0, 0x22DA000
	058 Move X0, [X0+1880]
	059 Call 0x1C17CF4
	060 Move X0, 0x22D3000
	061 Move X0, [X0+1816]
	062 Call 0x1C17CF4
	063 Move X0, 0x22DA000
	064 Move X0, [X0+1888]
	065 Call 0x1C17CF4
	066 Move X0, 0x22DA000
	067 Move X0, [X0+1896]
	068 Call 0x1C17CF4
	069 Move X0, 0x22D3000
	070 Move X0, [X0+1824]
	071 Call 0x1C17CF4
	072 Move X0, 0x22DA000
	073 Move X0, [X0+1904]
	074 Call 0x1C17CF4
	075 Move X0, 0x22DA000
	076 Move X0, [X0+1776]
	077 Call 0x1C17CF4
	078 Move X0, 0x22DA000
	079 Move X0, [X0+1784]
	080 Call 0x1C17CF4
	081 Move X0, 0x22DA000
	082 Move X0, [X0+1912]
	083 Call 0x1C17CF4
	084 Move X0, 0x22D5000
	085 Move X0, [X0+360]
	086 Call 0x1C17CF4
	087 Move X0, 0x22DA000
	088 Move X0, [X0+1920]
	089 Call 0x1C17CF4
	090 Move X0, 0x22DA000
	091 Move X0, [X0+1928]
	092 Call 0x1C17CF4
	093 Move X0, 0x22D3000
	094 Move X0, [X0+2648]
	095 Call 0x1C17CF4
	096 Move X0, 0x22D3000
	097 Move X0, [X0+1880]
	098 Call 0x1C17CF4
	099 Move X0, 0x22DA000
	100 Move X0, [X0+1936]
	101 Call 0x1C17CF4
	102 Move X0, 0x22DA000
	103 Move X0, [X0+1944]
	104 Call 0x1C17CF4
	105 Move X0, 0x22D3000
	106 Move X0, [X0+1928]
	107 Call 0x1C17CF4
	108 Move X0, 0x22DA000
	109 Move X0, [X0+1952]
	110 Call 0x1C17CF4
	111 Move X0, 0x22DA000
	112 Move X0, [X0+1960]
	113 Call 0x1C17CF4
	114 Move X0, 0x22D3000
	115 Move X0, [X0+1432]
	116 Call 0x1C17CF4
	117 Move X0, 0x22DA000
	118 Move X0, [X0+1800]
	119 Call 0x1C17CF4
	120 Move X0, 0x22DA000
	121 Move X0, [X0+1968]
	122 Call 0x1C17CF4
	123 Move X0, 0x22D7000
	124 Move X0, [X0+544]
	125 Call 0x1C17CF4
	126 Move X0, 0x22DA000
	127 Move X0, [X0+1976]
	128 Call 0x1C17CF4
	129 Move X0, 0x22DA000
	130 Move X0, [X0+1984]
	131 Call 0x1C17CF4
	132 Move X0, 0x22DA000
	133 Move X0, [X0+1992]
	134 Call 0x1C17CF4
	135 Move X0, 0x22D5000
	136 Move X0, [X0+2184]
	137 Call 0x1C17CF4
	138 Move X0, 0x22DA000
	139 Move X0, [X0+2000]
	140 Call 0x1C17CF4
	141 Move X0, 0x22DA000
	142 Move X0, [X0+2008]
	143 Call 0x1C17CF4
	144 Move X0, 0x22DA000
	145 Move X0, [X0+2016]
	146 Call 0x1C17CF4
	147 Move X0, 0x22DA000
	148 Move X0, [X0+2024]
	149 Call 0x1C17CF4
	150 Move X0, 0x22DA000
	151 Move X0, [X0+2032]
	152 Call 0x1C17CF4
	153 Move W8, 1
	154 Move [X25+3630], W8
	155 Move [X31+232], X31
	156 Move [X31+240], X31
	157 Move [X31+264], X31
	158 Move [X31+216], X31
	159 Move [X31+224], X31
	160 Move [X31+208], X31
	161 Move [X31+240], W24
	162 Move [X31+248], X19
	163 Move X8, [X19+104]
	164 Compare X8, 0
	165 JumpIfEqual {1359}
	166 Move W10, [X8+24]
	167 Subtract W9, W24, 1
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Add X8, X8, W9
	170 Move X8, [X8+32]
	171 Move X0, X21
	172 Move X1, X31
	173 Move [X31+264], X31
	174 Move [X31+232], X8
	175 Call String.IsNullOrEmpty, X0
	176 Move TEMP, X0
	177 And TEMP, TEMP, 1
	178 Compare TEMP, 1
	179 JumpIfNotEqual {181}
	180 Move X24, X31
	181 Move X0, [X19+32]
	182 Compare X0, 0
	183 JumpIfEqual {1359}
	184 Move X1, X31
	185 Call AvatarSystemCatalog.get_bodyPartsLookup, X0
	186 Compare X0, 0
	187 JumpIfEqual {1359}
	188 Move X8, 0x22DA000
	189 Move X8, [X8+1880]
	190 Add X2, X31, 264
	191 Move X1, X21
	192 Move X3, [X8]
	193 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	194 Move X24, [X31+264]
	195 Move X26, 0x22D3000
	196 Move X26, [X26+1432]
	197 Move X0, [X26]
	198 Move W8, [X0+224]
	199 Compare W8, 0
	200 JumpIfNotEqual {202}
	201 Call 0x1C17DFC
	202 Move X0, X24
	203 Move X1, X31
	204 Move X2, X31
	205 Call Object.op_Equality, X0, X1
	206 Move TEMP, X0
	207 And TEMP, TEMP, 1
	208 Compare TEMP, 1
	209 JumpIfNotEqual {247}
	210 Move X20, 0x22DA000
	211 Move X20, [X20+1264]
	212 Move X0, [X20]
	213 Move W8, [X0+224]
	214 Compare W8, 0
	215 JumpIfNotEqual {218}
	216 Call 0x1C17DFC
	217 Move X0, [X20]
	218 Move X8, [X0+184]
	219 Move X0, [X8]
	220 Compare X0, 0
	221 JumpIfEqual {1359}
	222 Move X8, 0x22DA000
	223 Move W1, [X31+240]
	224 Move X8, [X8+1888]
	225 Move X2, [X8]
	226 Call Dictionary`2<Int32Enum, Object>.get_Item, X0, X1
	227 Move X1, X31
	228 Move X21, X0
	229 Call String.IsNullOrEmpty, X0
	230 Move TEMP, X0
	231 And TEMP, TEMP, 1
	232 Compare TEMP, 1
	233 JumpIfEqual {247}
	234 Move X0, [X19+32]
	235 Compare X0, 0
	236 JumpIfEqual {1359}
	237 Move X1, X31
	238 Call AvatarSystemCatalog.get_bodyPartsLookup, X0
	239 Compare X0, 0
	240 JumpIfEqual {1359}
	241 Move X8, 0x22DA000
	242 Move X8, [X8+1880]
	243 Add X2, X31, 264
	244 Move X1, X21
	245 Move X3, [X8]
	246 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	247 Move X8, [X31+232]
	248 Compare X8, 0
	249 JumpIfEqual {1359}
	250 Move X0, [X26]
	251 Move X24, [X31+264]
	252 Move X25, [X8+56]
	253 Move W9, [X0+224]
	254 Compare W9, 0
	255 JumpIfNotEqual {257}
	256 Call 0x1C17DFC
	257 Move X0, X24
	258 Move X1, X25
	259 Move X2, X31
	260 Call Object.op_Inequality, X0, X1
	261 Move TEMP, X0
	262 And TEMP, TEMP, 1
	263 Compare TEMP, 1
	264 JumpIfNotEqual {267}
	265 Move W8, 1
	266 Move [X23], W8
	267 Move X0, [X26]
	268 Move W20, [X31+240]
	269 Move X23, [X31+264]
	270 Move W8, [X0+224]
	271 Compare W8, 0
	272 JumpIfNotEqual {274}
	273 Call 0x1C17DFC
	274 Move X0, X23
	275 Move X1, X31
	276 Move X2, X31
	277 Call Object.op_Inequality, X0, X1
	278 Move TEMP, X0
	279 And TEMP, TEMP, 1
	280 Compare TEMP, 1
	281 JumpIfNotEqual {288}
	282 Move X23, [X31+264]
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Compare X23, 0
	285 JumpIfEqual {1359}
	286 Move W8, [X23+28]
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Move X23, [X31+264]
	289 Move X0, [X26]
	290 Move W8, [X0+224]
	291 Compare W8, 0
	292 JumpIfNotEqual {294}
	293 Call 0x1C17DFC
	294 Move X0, X23
	295 Move X1, X31
	296 Move X2, X31
	297 Call Object.op_Equality, X0, X1
	298 Move X8, [X31+232]
	299 Compare X8, 0
	300 JumpIfEqual {1359}
	301 Move TEMP, X0
	302 And TEMP, TEMP, 1
	303 Compare TEMP, 1
	304 JumpIfNotEqual {337}
	305 Move X0, [X26]
	306 Move X21, [X8+24]
	307 Move W9, [X0+224]
	308 Compare W9, 0
	309 JumpIfNotEqual {311}
	310 Call 0x1C17DFC
	311 Move X0, X21
	312 Move X1, X31
	313 Move X2, X31
	314 Call Object.op_Inequality, X0, X1
	315 Move X8, [X31+232]
	316 Move TEMP, X0
	317 And TEMP, TEMP, 1
	318 Compare TEMP, 1
	319 JumpIfNotEqual {456}
	320 Compare X8, 0
	321 JumpIfEqual {1359}
	322 Move X0, [X26]
	323 Move X21, [X8+24]
	324 Move W9, [X0+224]
	325 Compare W9, 0
	326 JumpIfNotEqual {328}
	327 Call 0x1C17DFC
	328 Move X0, X21
	329 Move X1, X31
	330 Call Object.Destroy, X0
	331 Move X8, [X31+232]
	332 Compare X8, 0
	333 JumpIfEqual {1359}
	334 Move [X8+24], X31
	335 Move [X8+32], X31
	336 Move [X8+40], X31
	337 Move X0, [X26]
	338 Move X23, [X8+56]
	339 Move X24, [X31+264]
	340 Move W8, [X0+224]
	341 Compare W8, 0
	342 JumpIfNotEqual {344}
	343 Call 0x1C17DFC
	344 Move X0, X23
	345 Move X1, X24
	346 Move X2, X31
	347 Call Object.op_Equality, X0, X1
	348 Move TEMP, X0
	349 And TEMP, TEMP, 1
	350 Compare TEMP, 1
	351 JumpIfNotEqual {494}
	352 Move TEMP, X22
	353 And TEMP, TEMP, 1
	354 Compare TEMP, 1
	355 JumpIfNotEqual {1556}
	356 Move X20, 0x22DA000
	357 Move X20, [X20+1264]
	358 Move X0, [X20]
	359 Move W8, [X0+224]
	360 Compare W8, 0
	361 JumpIfNotEqual {364}
	362 Call 0x1C17DFC
	363 Move X0, [X20]
	364 Move X8, [X0+184]
	365 Move X0, [X8+40]
	366 Compare X0, 0
	367 JumpIfEqual {1359}
	368 Move X8, 0x22DA000
	369 Move W1, [X31+240]
	370 Move X8, [X8+1864]
	371 Move X2, [X8]
	372 Call Dictionary`2<Int32Enum, Object>.ContainsKey, X0, X1
	373 Move TEMP, X0
	374 And TEMP, TEMP, 1
	375 Compare TEMP, 1
	376 JumpIfNotEqual {1556}
	377 Move W1, [X31+240]
	378 Move X2, [X31+264]
	379 Move X0, X19
	380 Call AvatarView.UpdateCageMeshBoundaryForBodyPart, X0, X1, X2
	381 Compare X23, 0
	382 JumpIfEqual {1359}
	383 Move W8, [X31+240]
	384 Move W9, [X23+28]
	385 NotImplemented "Instruction CMP not yet implemented."
	386 Move X8, 0x22D3000
	387 Move X8, [X8+1824]
	388 Move X0, [X8]
	389 Call 0x1C17F10
	390 Move X8, 0x22D3000
	391 Move X8, [X8+1816]
	392 Move X19, X0
	393 Move X1, [X8]
	394 Call Dictionary`2<Object, Object>..ctor, X0
	395 Move X22, 0x22DA000
	396 Move W8, [X31+240]
	397 Move X22, [X22+1848]
	398 Add X1, X31, 144
	399 Move [X31+144], W8
	400 Move X0, [X22]
	401 Call 0x1C17E04
	402 Compare X19, 0
	403 JumpIfEqual {1359}
	404 Move X8, 0x22DA000
	405 Move X20, 0x22D3000
	406 Move X8, [X8+1984]
	407 Move X20, [X20+1808]
	408 Move X2, X0
	409 Move X0, X19
	410 Move X1, [X8]
	411 Move X3, [X20]
	412 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	413 Move X8, [X31+264]
	414 Compare X8, 0
	415 JumpIfEqual {1359}
	416 Move W8, [X8+28]
	417 Move X0, [X22]
	418 Add X1, X31, 80
	419 Move [X31+80], W8
	420 Call 0x1C17E04
	421 Move X8, 0x22DA000
	422 Move X8, [X8+1992]
	423 Move X3, [X20]
	424 Move X2, X0
	425 Move X0, X19
	426 Move X1, [X8]
	427 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	428 Move X8, 0x22DA000
	429 Move X8, [X8+2000]
	430 Move X3, [X20]
	431 Move X0, X19
	432 Move X2, X21
	433 Move X1, [X8]
	434 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	435 Move X8, 0x22D3000
	436 Move X8, [X8+1928]
	437 Move X0, [X8]
	438 Move W8, [X0+224]
	439 Compare W8, 0
	440 JumpIfNotEqual {442}
	441 Call 0x1C17DFC
	442 Move X8, 0x22DA000
	443 Move X9, 0x22DA000
	444 Move X10, 0x22DA000
	445 Move X8, [X8+1976]
	446 Move X9, [X9+2032]
	447 Move X10, [X10+2016]
	448 Move W0, 0x2000
	449 Move X1, [X8]
	450 Move X3, [X9]
	451 Move X4, [X10]
	452 Move W5, 372
	453 Move X2, X19
	454 Move X6, X31
	455 Call Log.Error, X0, X1, X2, X3, X4, X5
	456 Compare X8, 0
	457 JumpIfEqual {1359}
	458 Add X1, X31, 232
	459 Move X0, X19
	460 Move [X8+48], X31
	461 Move [X8+56], X31
	462 Call AvatarView.<UpdateBodyPart>g__Clear|43_0, X0, X1
	463 Move X20, 0x22DA000
	464 Move X20, [X20+1264]
	465 Move X0, [X20]
	466 Move W8, [X0+224]
	467 Compare W8, 0
	468 JumpIfNotEqual {471}
	469 Call 0x1C17DFC
	470 Move X0, [X20]
	471 Move X8, [X0+184]
	472 Move X0, [X8+32]
	473 Compare X0, 0
	474 JumpIfEqual {1359}
	475 Move X8, 0x22DA000
	476 Move W1, [X31+240]
	477 Move X8, [X8+1864]
	478 Move X2, [X8]
	479 Call Dictionary`2<Int32Enum, Object>.ContainsKey, X0, X1
	480 Move TEMP, X0
	481 And TEMP, TEMP, 1
	482 Compare TEMP, 1
	483 JumpIfNotEqual {1556}
	484 Move W8, 1
	485 Move [X27], W8
	486 Move X8, [X19+32]
	487 Compare X8, 0
	488 JumpIfEqual {1359}
	489 Move X1, [X8+24]
	490 Move W2, [X31+240]
	491 Move X0, X19
	492 Move X3, X31
	493 Call AvatarView.UpdateCageMeshForBodyPart, X0, X1, X2, X3
	494 Add X1, X31, 232
	495 Move X0, X19
	496 Call AvatarView.<UpdateBodyPart>g__Clear|43_0, X0, X1
	497 Move X8, [X31+232]
	498 Compare X8, 0
	499 JumpIfEqual {1359}
	500 Move X9, [X31+264]
	501 Move X22, [X8+24]
	502 Move [X8+56], X9
	503 Move X0, [X26]
	504 Move W9, [X0+224]
	505 Compare W9, 0
	506 JumpIfNotEqual {508}
	507 Call 0x1C17DFC
	508 Move X0, X22
	509 Move X1, X31
	510 Move X2, X31
	511 Call Object.op_Equality, X0, X1
	512 Move TEMP, X0
	513 And TEMP, TEMP, 1
	514 Compare TEMP, 1
	515 JumpIfNotEqual {600}
	516 Move X8, 0x22DA000
	517 Move X8, [X8+1848]
	518 Move W9, [X31+240]
	519 Move X20, [X31+232]
	520 Move TEMP, 0
	521 Not TEMP
	522 Move X10, TEMP
	523 Move X8, [X8]
	524 Add X0, X31, 144
	525 Move X1, X31
	526 Move [X31+160], W9
	527 Move [X31+144], X8
	528 Move [X31+152], X10
	529 Call Enum.ToString, X0
	530 Move X8, 0x22D3000
	531 Move X8, [X8+2648]
	532 Move X23, X0
	533 Move X8, [X8]
	534 Move X0, X8
	535 Call 0x1C17F10
	536 Move X1, X23
	537 Move X2, X31
	538 Move X22, X0
	539 Call GameObject..ctor, X0, X1
	540 Compare X20, 0
	541 JumpIfEqual {1359}
	542 Move [X20+24], X22
	543 Move X8, [X31+232]
	544 Compare X8, 0
	545 JumpIfEqual {1359}
	546 Move X0, [X8+24]
	547 Compare X0, 0
	548 JumpIfEqual {1359}
	549 Move X1, X31
	550 Call GameObject.get_transform, X0
	551 Move X22, X0
	552 Move X0, X19
	553 Move X1, X31
	554 Call Component.get_transform, X0
	555 Compare X22, 0
	556 JumpIfEqual {1359}
	557 Move X1, X0
	558 Move X0, X22
	559 Move W2, W31
	560 Move X3, X31
	561 Call Transform.SetParent, X0, X1, X2
	562 Move X8, [X31+232]
	563 Compare X8, 0
	564 JumpIfEqual {1359}
	565 Move X0, [X8+24]
	566 Compare X0, 0
	567 JumpIfEqual {1359}
	568 Move W8, [X19+68]
	569 Move W9, 6
	570 Move X2, X31
	571 NotImplemented "Instruction CMP not yet implemented."
	572 Move W8, 8
	573 NotImplemented "Instruction CSEL not yet implemented."
	574 Call GameObject.set_layer, X0, X1
	575 Move X8, [X31+232]
	576 Compare X8, 0
	577 JumpIfEqual {1359}
	578 Move X0, [X8+24]
	579 Compare X0, 0
	580 JumpIfEqual {1359}
	581 Move W8, [X31+240]
	582 And W8, W8, 0xFFFFFFFE
	583 NotImplemented "Instruction CMP not yet implemented."
	584 Move X8, 0x22DA000
	585 Move X8, [X8+1776]
	586 Move X1, [X8]
	587 Call 0x21E61FC, X0
	588 Move X8, [X31+232]
	589 Compare X8, 0
	590 JumpIfEqual {1359}
	591 Move X0, [X8+24]
	592 Compare X0, 0
	593 JumpIfEqual {1359}
	594 Move X8, 0x22DA000
	595 Move X8, [X8+1784]
	596 Move X8, 0x22DA000
	597 Move X8, [X8+1912]
	598 Move X1, [X8]
	599 Call 0x21E61FC, X0
	600 Move X8, [X31+232]
	601 Compare X8, 0
	602 JumpIfEqual {1359}
	603 Move X23, 0x22DA000
	604 Move X22, [X8+24]
	605 Move W8, [X31+240]
	606 Move X23, [X23+1848]
	607 Add X1, X31, 144
	608 Move [X31+144], W8
	609 Move X0, [X23]
	610 Call 0x1C17E04
	611 Move X8, 0x22DA000
	612 Move X8, [X8+2008]
	613 Move X1, X0
	614 Move X2, X21
	615 Move X3, X31
	616 Move X8, [X8]
	617 Move X0, X8
	618 Call String.Format, X0, X1, X2
	619 Compare X22, 0
	620 JumpIfEqual {1359}
	621 Move X1, X0
	622 Move X0, X22
	623 Move X2, X31
	624 Call Object.set_name, X0, X1
	625 Move X8, [X31+264]
	626 Compare X8, 0
	627 JumpIfEqual {1359}
	628 Move X20, [X8+104]
	629 Compare X20, 0
	630 JumpIfEqual {1359}
	631 Move W8, [X20+24]
	632 NotImplemented "Instruction CMP not yet implemented."
	633 Move W22, W31
	634 NotImplemented "Instruction CMP not yet implemented."
	635 Add X8, X20, W22
	636 Move X24, [X8+32]
	637 Compare X24, 0
	638 JumpIfEqual {1359}
	639 Move X8, [X19+96]
	640 Compare X8, 0
	641 JumpIfEqual {1359}
	642 Move W9, [X24+24]
	643 Move W10, [X8+24]
	644 Subtract W9, W9, 1
	645 NotImplemented "Instruction CMP not yet implemented."
	646 Add X8, X8, W9
	647 Move X21, [X8+32]
	648 Compare X21, 0
	649 JumpIfEqual {1359}
	650 Move S1, [X24+32]
	651 Move S2, [X24+36]
	652 Move V0, [X24+28]
	653 Move X0, X21
	654 Move X1, X31
	655 Call Transform.set_localPosition, X0, X1
	656 Move S0, [X24+40]
	657 Move S1, [X24+44]
	658 Move S2, [X24+48]
	659 Move S3, [X24+52]
	660 Move X0, X21
	661 Move X1, X31
	662 Call Transform.set_localRotation, X0, X1
	663 Move W8, [X20+24]
	664 Add W22, W22, 1
	665 NotImplemented "Instruction CMP not yet implemented."
	666 Move X20, 0x22DA000
	667 Move X20, [X20+1856]
	668 Move X0, [X20]
	669 Move W8, [X0+224]
	670 Compare W8, 0
	671 JumpIfNotEqual {674}
	672 Call 0x1C17DFC
	673 Move X0, [X20]
	674 Move X8, [X0+184]
	675 Move X0, [X8]
	676 Compare X0, 0
	677 JumpIfEqual {1359}
	678 Move X8, 0x22DA000
	679 Move W1, [X31+240]
	680 Move X8, [X8+1872]
	681 Move X2, [X8]
	682 Call Dictionary`2<Int32Enum, Bounds>.ContainsKey, X0, X1
	683 Move TEMP, X0
	684 And TEMP, TEMP, 1
	685 Compare TEMP, 1
	686 JumpIfNotEqual {707}
	687 Move X0, [X20]
	688 Move W8, [X0+224]
	689 Compare W8, 0
	690 JumpIfNotEqual {693}
	691 Call 0x1C17DFC
	692 Move X0, [X20]
	693 Move X8, [X0+184]
	694 Move X0, [X8]
	695 Compare X0, 0
	696 JumpIfEqual {1359}
	697 Move X8, 0x22DA000
	698 Move W1, [X31+240]
	699 Move X8, [X8+1896]
	700 Move X2, [X8]
	701 Add X8, X31, 144
	702 Call Dictionary`2<Int32Enum, Bounds>.get_Item, X0, X1
	703 Move V0, [X31+9]
	704 Move X8, [X31+160]
	705 Move [X31+13], V0
	706 Move [X31+224], X8
	707 Move W8, [X31+240]
	708 Move X0, [X23]
	709 Add X1, X31, 144
	710 Move [X31+144], W8
	711 Call 0x1C17E04
	712 Move X8, 0x22DA000
	713 Move X8, [X8+2024]
	714 Move X1, X0
	715 Move X2, X31
	716 Move X8, [X8]
	717 Move X0, X8
	718 Call String.Format, X0, X1
	719 Move X8, 0x22D3000
	720 Move X8, [X8+2600]
	721 Move X21, X0
	722 Move X8, [X8]
	723 Move W9, [X8+224]
	724 Compare W9, 0
	725 JumpIfNotEqual {728}
	726 Move X0, X8
	727 Call 0x1C17DFC
	728 Move X0, X21
	729 Move X1, X31
	730 Call Debug.LogWarning, X0
	731 Move [X31+208], X31
	732 Move [X31+216], X31
	733 Move [X31+224], X31
	734 Move X8, [X31+232]
	735 Compare X8, 0
	736 JumpIfEqual {1359}
	737 Move X0, [X8+24]
	738 Compare X0, 0
	739 JumpIfEqual {1359}
	740 Move W20, [X31+240]
	741 Move X1, X31
	742 Call GameObject.get_transform, X0
	743 Move X8, [X31+264]
	744 Compare X8, 0
	745 JumpIfEqual {1359}
	746 And W9, W20, 0xFFFFFFFE
	747 NotImplemented "Instruction CMP not yet implemented."
	748 Compare X0, 0
	749 JumpIfEqual {1359}
	750 Move S2, [X8+52]
	751 Move S3, [X8+56]
	752 Move S0, [X8+44]
	753 Move S1, [X8+48]
	754 Move X1, X31
	755 Call Transform.set_localRotation, X0, X1
	756 Move W8, [X31+240]
	757 NotImplemented "Instruction CMP not yet implemented."
	758 Move X8, [X31+232]
	759 Compare X8, 0
	760 JumpIfEqual {1359}
	761 Move X0, [X8+24]
	762 Compare X0, 0
	763 JumpIfEqual {1359}
	764 Move X1, X31
	765 Call GameObject.get_transform, X0
	766 Compare X0, 0
	767 JumpIfEqual {1359}
	768 Move S0, -1
	769 Move S1, 1
	770 Move S2, 1
	771 Move X1, X31
	772 Call Transform.set_localScale, X0, X1
	773 Move X8, [X31+232]
	774 Compare X8, 0
	775 JumpIfEqual {1359}
	776 Move X0, [X8+24]
	777 Compare X0, 0
	778 JumpIfEqual {1359}
	779 Move X1, X31
	780 Call GameObject.get_transform, X0
	781 Compare X0, 0
	782 JumpIfEqual {1359}
	783 Move X1, X31
	784 Call Transform.get_localRotation, X0
	785 Move X20, 0x25B8000
	786 Move W8, [X20+1926]
	787 Move V8, V0
	788 Move V9, V1
	789 Move V10, V2
	790 Move V11, V3
	791 Compare W8, 0
	792 JumpIfNotEqual {798}
	793 Move X0, 0x22D3000
	794 Move X0, [X0+1440]
	795 Call 0x1C17CF4
	796 Move W8, 1
	797 Move [X20+1926], W8
	798 Move X20, 0x22D3000
	799 Move X20, [X20+1440]
	800 Move V0, V8
	801 Move V1, V9
	802 Move V2, V10
	803 Move X8, [X20]
	804 Move V3, V11
	805 Move X0, X31
	806 Move X8, [X8+184]
	807 Move S4, [X8+24]
	808 Move S5, [X8+28]
	809 Move V6, [X8+32]
	810 Call Quaternion.op_Multiply, X0, X1
	811 Move X8, [X31+232]
	812 Compare X8, 0
	813 JumpIfEqual {1359}
	814 Move X0, [X8+24]
	815 Compare X0, 0
	816 JumpIfEqual {1359}
	817 Move X1, X31
	818 Move V10, V0
	819 Move V8, V1
	820 Move V9, V2
	821 Call GameObject.get_transform, X0
	822 Compare X0, 0
	823 JumpIfEqual {1359}
	824 Move X1, X31
	825 Call Transform.get_localRotation, X0
	826 Move X21, 0x25B8000
	827 Move W8, [X21+2591]
	828 Move V11, V0
	829 Move V12, V1
	830 Move V13, V2
	831 Move V14, V3
	832 Compare W8, 0
	833 JumpIfNotEqual {839}
	834 Move X0, 0x22D3000
	835 Move X0, [X0+1440]
	836 Call 0x1C17CF4
	837 Move W8, 1
	838 Move [X21+2591], W8
	839 Move X8, [X20]
	840 Move V0, V11
	841 Move V1, V12
	842 Move V2, V13
	843 Move X8, [X8+184]
	844 Move V3, V14
	845 Move X0, X31
	846 Move S4, [X8+72]
	847 Move S5, [X8+76]
	848 Move V6, [X8+80]
	849 Call Quaternion.op_Multiply, X0, X1
	850 Move X8, [X31+232]
	851 Compare X8, 0
	852 JumpIfEqual {1359}
	853 Move X0, [X8+24]
	854 Compare X0, 0
	855 JumpIfEqual {1359}
	856 Move X1, X31
	857 Move V11, V0
	858 Move V12, V1
	859 Move V13, V2
	860 NotImplemented "Instruction FNEG not yet implemented."
	861 Call GameObject.get_transform, X0
	862 Move X20, X0
	863 Move V0, V11
	864 Move V1, V12
	865 Move V2, V13
	866 Move V3, V10
	867 Move V4, V8
	868 Move V5, V9
	869 Move X0, X31
	870 Call Quaternion.LookRotation, X0, X1
	871 Compare X20, 0
	872 JumpIfEqual {1359}
	873 Move X0, X20
	874 Move X1, X31
	875 Call Transform.set_localRotation, X0, X1
	876 Move X8, [X31+232]
	877 Compare X8, 0
	878 JumpIfEqual {1359}
	879 Move X0, [X8+24]
	880 Compare X0, 0
	881 JumpIfEqual {1359}
	882 Move X8, 0x22D5000
	883 Move X8, [X8+360]
	884 Move X1, [X8]
	885 Call 0x21E62E4, X0
	886 Move X8, [X31+264]
	887 Compare X8, 0
	888 JumpIfEqual {1359}
	889 Compare X0, 0
	890 JumpIfEqual {1359}
	891 Move X1, [X8+64]
	892 Move X2, X31
	893 Call MeshFilter.set_sharedMesh, X0, X1
	894 Move X8, [X31+232]
	895 Compare X8, 0
	896 JumpIfEqual {1359}
	897 Move X0, [X8+24]
	898 Compare X0, 0
	899 JumpIfEqual {1359}
	900 Move X8, 0x22DA000
	901 Move X8, [X8+1920]
	902 Move X1, [X8]
	903 Call 0x21E62E4, X0
	904 Move X8, [X31+232]
	905 Compare X8, 0
	906 JumpIfEqual {1359}
	907 Move [X8+32], X0
	908 Move X9, [X31+264]
	909 Move X20, X0
	910 Compare X9, 0
	911 JumpIfEqual {1359}
	912 Move X1, [X9+72]
	913 Move [X8+48], X1
	914 Compare X20, 0
	915 JumpIfEqual {1359}
	916 Move X0, X20
	917 Move X2, X31
	918 Call Renderer.set_sharedMaterials, X0, X1
	919 Move V0, [X31+13]
	920 Move X8, [X31+224]
	921 Add X1, X31, 176
	922 Move X0, X20
	923 Move X2, X31
	924 Move [X31+11], V0
	925 Move [X31+192], X8
	926 Call Renderer.set_localBounds, X0, X1
	927 Compare X0, 0
	928 JumpIfEqual {1359}
	929 Move S1, [X8+36]
	930 Move S2, [X8+40]
	931 Move V0, [X8+32]
	932 Move X1, X31
	933 Call Transform.set_localPosition, X0, X1
	934 Move X8, [X31+232]
	935 Compare X8, 0
	936 JumpIfEqual {1359}
	937 Move X0, [X8+24]
	938 Compare X0, 0
	939 JumpIfEqual {1359}
	940 Move X1, X31
	941 Call GameObject.get_transform, X0
	942 Move X8, [X31+264]
	943 Compare X8, 0
	944 JumpIfEqual {1359}
	945 Compare X0, 0
	946 JumpIfEqual {1359}
	947 Move S2, [X8+52]
	948 Move S3, [X8+56]
	949 Move S0, [X8+44]
	950 Move S1, [X8+48]
	951 Move X1, X31
	952 Call Transform.set_localRotation, X0, X1
	953 Move X8, [X31+232]
	954 Compare X8, 0
	955 JumpIfEqual {1359}
	956 Move X0, [X8+24]
	957 Compare X0, 0
	958 JumpIfEqual {1359}
	959 Move X8, 0x22DA000
	960 Move X8, [X8+1928]
	961 Move X1, [X8]
	962 Call 0x21E62E4, X0
	963 Move X8, [X31+264]
	964 Compare X8, 0
	965 JumpIfEqual {1359}
	966 Move X21, X0
	967 Compare X0, 0
	968 JumpIfEqual {1359}
	969 Move X1, [X8+64]
	970 Move X0, X21
	971 Move X2, X31
	972 Call SkinnedMeshRenderer.set_sharedMesh, X0, X1
	973 Move X8, [X31+232]
	974 Compare X8, 0
	975 JumpIfEqual {1359}
	976 Move [X8+40], X21
	977 Move X8, [X31+264]
	978 Compare X8, 0
	979 JumpIfEqual {1359}
	980 Move X8, [X8+72]
	981 Move [X31+8], X27
	982 Compare X8, 0
	983 JumpIfEqual {1359}
	984 Move X9, 0x22DA000
	985 Move X9, [X9+1952]
	986 Move W1, [X8+24]
	987 Move X0, [X9]
	988 Call 0x1C17D6C
	989 Move X8, [X31+264]
	990 Compare X8, 0
	991 JumpIfEqual {1359}
	992 Move X25, 0x22D5000
	993 Move X27, 0x22DA000
	994 Move X28, 0x22D7000
	995 Move X29, 0x22DA000
	996 Move X25, [X25+2184]
	997 Move X27, [X27+1960]
	998 Move X28, [X28+544]
	999 Move X29, [X29+1944]
	1000 Move X22, X0
	1001 Move W24, 4
	1002 Move X8, [X8+72]
	1003 Compare X8, 0
	1004 JumpIfEqual {1359}
	1005 Move W9, [X8+24]
	1006 Subtract X20, X24, 4
	1007 NotImplemented "Instruction CMP not yet implemented."
	1008 NotImplemented "Instruction CMP not yet implemented."
	1009 Move X0, [X8]
	1010 Compare X0, 0
	1011 JumpIfEqual {1359}
	1012 Move X1, X31
	1013 Call Object.get_name, X0
	1014 Compare X0, 0
	1015 JumpIfEqual {1359}
	1016 Move X1, [X25]
	1017 Move X2, X31
	1018 Call String.Contains, X0, X1
	1019 Move X8, [X31+264]
	1020 Compare X8, 0
	1021 JumpIfEqual {1359}
	1022 Move X8, [X8+72]
	1023 Compare X8, 0
	1024 JumpIfEqual {1359}
	1025 Move W9, [X8+24]
	1026 NotImplemented "Instruction CMP not yet implemented."
	1027 Move X23, [X8]
	1028 Move TEMP, X0
	1029 And TEMP, TEMP, 1
	1030 Compare TEMP, 1
	1031 JumpIfNotEqual {1085}
	1032 Move X0, [X26]
	1033 Move W8, [X0+224]
	1034 Compare W8, 0
	1035 JumpIfNotEqual {1037}
	1036 Call 0x1C17DFC
	1037 Move X1, [X27]
	1038 Move X0, X23
	1039 Call 0x222E35C, X0
	1040 Compare X22, 0
	1041 JumpIfEqual {1359}
	1042 Move X23, X0
	1043 Compare X0, 0
	1044 JumpIfEqual {1580}
	1045 Move X8, [X22]
	1046 Move X0, X23
	1047 Move X1, [X8+64]
	1048 Call 0x1C17E00
	1049 Compare X0, 0
	1050 JumpIfEqual {1577}
	1051 Move W8, [X22+24]
	1052 NotImplemented "Instruction CMP not yet implemented."
	1053 Move [X22], X23
	1054 Move S2, [X19+60]
	1055 Move S3, [X19+64]
	1056 Move S0, [X19+52]
	1057 Move S1, [X19+56]
	1058 Move X1, [X28]
	1059 Move X0, X23
	1060 Move X2, X31
	1061 Call Material.SetColor, X0, X1, X2
	1062 Move X8, [X31+232]
	1063 Compare X8, 0
	1064 JumpIfEqual {1359}
	1065 Move W9, [X22+24]
	1066 NotImplemented "Instruction CMP not yet implemented."
	1067 Move X0, [X8+72]
	1068 Compare X0, 0
	1069 JumpIfEqual {1359}
	1070 Move W10, [X0+28]
	1071 Move X1, [X22]
	1072 Move X8, [X0+16]
	1073 Move X9, [X29]
	1074 Add W10, W10, 1
	1075 Move [X0+28], W10
	1076 Compare X8, 0
	1077 JumpIfEqual {1359}
	1078 NotImplemented "Instruction LDRSW not yet implemented."
	1079 Move W11, [X8+24]
	1080 NotImplemented "Instruction CMP not yet implemented."
	1081 Add W9, W10, 1
	1082 Add X8, X8, X10
	1083 Move [X0+24], W9
	1084 Move [X8+32], X1
	1085 Compare X22, 0
	1086 JumpIfEqual {1359}
	1087 Compare X23, 0
	1088 JumpIfEqual {1095}
	1089 Move X8, [X22]
	1090 Move X0, X23
	1091 Move X1, [X8+64]
	1092 Call 0x1C17E00
	1093 Compare X0, 0
	1094 JumpIfEqual {1577}
	1095 Move W8, [X22+24]
	1096 NotImplemented "Instruction CMP not yet implemented."
	1097 Move [X22], X23
	1098 Move X8, [X9+32]
	1099 Move X8, [X8+192]
	1100 Move X2, [X8+112]
	1101 Call List`1<Object>.AddWithResize, X0, X1
	1102 Move X8, [X31+264]
	1103 Add X24, X24, 1
	1104 Compare X8, 0
	1105 JumpIfNotEqual {1002}
	1106 Move X8, [X31+232]
	1107 Compare X8, 0
	1108 JumpIfEqual {1359}
	1109 Move X0, X21
	1110 Move X1, X22
	1111 Move X2, X31
	1112 Move [X8+48], X22
	1113 Call Renderer.set_sharedMaterials, X0, X1
	1114 Move X8, [X31+264]
	1115 Move X27, [X31+8]
	1116 Compare X8, 0
	1117 JumpIfEqual {1359}
	1118 Move W9, [X31+240]
	1119 NotImplemented "Instruction CMP not yet implemented."
	1120 Move X8, [X8+136]
	1121 Compare X8, 0
	1122 JumpIfEqual {1359}
	1123 Move X9, 0x22D9000
	1124 Move X9, [X9+1800]
	1125 Move W1, [X8+24]
	1126 Move X0, [X9]
	1127 Call 0x1C17D6C
	1128 Move X8, [X31+264]
	1129 Compare X8, 0
	1130 JumpIfEqual {1359}
	1131 Move X28, 0x22D2000
	1132 Move X29, 0x22D9000
	1133 Move X25, 0x22D2000
	1134 Move X28, [X28+1880]
	1135 Move X29, [X29+1968]
	1136 Move X25, [X25+2648]
	1137 Move X22, X0
	1138 Move X27, X31
	1139 Move X8, [X8+136]
	1140 Compare X8, 0
	1141 JumpIfEqual {1359}
	1142 Move X1, [X8+24]
	1143 NotImplemented "Instruction CMP not yet implemented."
	1144 Move X0, [X28]
	1145 Add X20, X27, 1
	1146 Add X1, X31, 144
	1147 Move [X31+144], W20
	1148 Call 0x1C17E04
	1149 Move X8, [X29]
	1150 Move X1, X0
	1151 Move X2, X31
	1152 Move X0, X8
	1153 Call String.Format, X0, X1
	1154 Move X8, [X25]
	1155 Move X24, X0
	1156 Move X0, X8
	1157 Call 0x1C17F10
	1158 Move X1, X24
	1159 Move X2, X31
	1160 Move X23, X0
	1161 Call GameObject..ctor, X0, X1
	1162 Compare X23, 0
	1163 JumpIfEqual {1359}
	1164 Move X0, X23
	1165 Move X1, X31
	1166 Call GameObject.get_transform, X0
	1167 Subtract X24, X20, 1
	1168 Move X23, X0
	1169 Compare X22, 0
	1170 JumpIfEqual {1359}
	1171 Move W8, [X22+24]
	1172 Subtract W9, W27, 1
	1173 NotImplemented "Instruction CMP not yet implemented."
	1174 Compare X23, 0
	1175 JumpIfEqual {1359}
	1176 Add X8, X22, X27
	1177 Move X1, [X8+24]
	1178 Move X0, [X19+40]
	1179 Compare X0, 0
	1180 JumpIfEqual {1359}
	1181 Move W1, 2
	1182 Call AvatarArmature.GetBone, X0, X1
	1183 Compare X23, 0
	1184 JumpIfEqual {1359}
	1185 Move X1, X0
	1186 Move X0, X23
	1187 Move W2, W31
	1188 Move X3, X31
	1189 Call Transform.SetParent, X0, X1, X2
	1190 Move X8, [X31+264]
	1191 Compare X8, 0
	1192 JumpIfEqual {1359}
	1193 Move X8, [X8+136]
	1194 Compare X8, 0
	1195 JumpIfEqual {1359}
	1196 Move W9, [X8+24]
	1197 NotImplemented "Instruction CMP not yet implemented."
	1198 Add X8, X8, X27
	1199 Move X8, [X8+32]
	1200 Compare X8, 0
	1201 JumpIfEqual {1359}
	1202 Move S1, [X8+24]
	1203 Move S2, [X8+28]
	1204 Move V0, [X8+20]
	1205 Move X0, X23
	1206 Move X1, X31
	1207 Call Transform.set_localPosition, X0, X1
	1208 Move X8, [X31+264]
	1209 Compare X8, 0
	1210 JumpIfEqual {1359}
	1211 Move X8, [X8+136]
	1212 Compare X8, 0
	1213 JumpIfEqual {1359}
	1214 Move W9, [X8+24]
	1215 NotImplemented "Instruction CMP not yet implemented."
	1216 Add X8, X8, X27
	1217 Move X8, [X8+32]
	1218 Compare X8, 0
	1219 JumpIfEqual {1359}
	1220 Move S0, [X8+32]
	1221 Move S1, [X8+36]
	1222 Move S2, [X8+40]
	1223 Move S3, [X8+44]
	1224 Move X0, X23
	1225 Move X1, X31
	1226 Call Transform.set_localRotation, X0, X1
	1227 Compare X22, 0
	1228 JumpIfEqual {1359}
	1229 Move X8, [X22]
	1230 Move X0, X23
	1231 Move X1, [X8+64]
	1232 Call 0x1C17E00
	1233 Compare X0, 0
	1234 JumpIfEqual {1577}
	1235 Move W8, [X22+24]
	1236 NotImplemented "Instruction CMP not yet implemented."
	1237 Add X8, X22, X27
	1238 Move [X8+32], X23
	1239 Move X8, [X31+264]
	1240 Add X27, X24, 1
	1241 Compare X8, 0
	1242 JumpIfNotEqual {1139}
	1243 Move X8, [X8+80]
	1244 Compare X8, 0
	1245 JumpIfEqual {1359}
	1246 Move X9, 0x22D9000
	1247 Move X9, [X9+1800]
	1248 Move W1, [X8+24]
	1249 Move X0, [X9]
	1250 Call 0x1C17D6C
	1251 Move X8, [X31+264]
	1252 Compare X8, 0
	1253 JumpIfEqual {1359}
	1254 Move X22, X0
	1255 Move W20, 4
	1256 Move X8, [X8+80]
	1257 Compare X8, 0
	1258 JumpIfEqual {1359}
	1259 Move W9, [X8+24]
	1260 Subtract X25, X20, 4
	1261 NotImplemented "Instruction CMP not yet implemented."
	1262 NotImplemented "Instruction CMP not yet implemented."
	1263 Move X24, [X8]
	1264 Compare X24, 0
	1265 JumpIfEqual {1359}
	1266 Move X0, [X19+40]
	1267 Compare X0, 0
	1268 JumpIfEqual {1359}
	1269 Move W1, [X24+16]
	1270 Call AvatarArmature.GetBone, X0, X1
	1271 Compare X22, 0
	1272 JumpIfEqual {1359}
	1273 Move X23, X0
	1274 Compare X0, 0
	1275 JumpIfEqual {1585}
	1276 Move X8, [X22]
	1277 Move X0, X23
	1278 Move X1, [X8+64]
	1279 Call 0x1C17E00
	1280 Compare X0, 0
	1281 JumpIfEqual {1577}
	1282 Move W8, [X22+24]
	1283 NotImplemented "Instruction CMP not yet implemented."
	1284 Move [X22], X23
	1285 Move S1, [X24+24]
	1286 Move S2, [X24+28]
	1287 Move V0, [X24+20]
	1288 Move X0, X23
	1289 Move X1, X31
	1290 Call Transform.set_localPosition, X0, X1
	1291 Move S0, [X24+32]
	1292 Move S1, [X24+36]
	1293 Move S2, [X24+40]
	1294 Move S3, [X24+44]
	1295 Move X0, X23
	1296 Move X1, X31
	1297 Call Transform.set_localRotation, X0, X1
	1298 Move X8, [X31+264]
	1299 Add X20, X20, 1
	1300 Compare X8, 0
	1301 JumpIfNotEqual {1256}
	1302 Move X0, X21
	1303 Move X1, X22
	1304 Move X2, X31
	1305 Call SkinnedMeshRenderer.set_bones, X0, X1
	1306 Move X0, [X19+40]
	1307 Compare X0, 0
	1308 JumpIfEqual {1359}
	1309 Move W1, 1
	1310 Call AvatarArmature.GetBone, X0, X1
	1311 Move X1, X0
	1312 Move X0, X21
	1313 Move X2, X31
	1314 Call SkinnedMeshRenderer.set_rootBone, X0, X1
	1315 Move X8, 0x22D9000
	1316 Move X8, [X8+1800]
	1317 Move X0, [X8]
	1318 Call 0x1C17D6C
	1319 Move X8, [X31+264]
	1320 Move X27, [X31+8]
	1321 Compare X8, 0
	1322 JumpIfEqual {1359}
	1323 Move X23, X0
	1324 Move W20, 4
	1325 Move X8, [X8+136]
	1326 Compare X8, 0
	1327 JumpIfEqual {1359}
	1328 Move W9, [X8+24]
	1329 Subtract X25, X20, 4
	1330 NotImplemented "Instruction CMP not yet implemented."
	1331 NotImplemented "Instruction CMP not yet implemented."
	1332 Move X8, [X8]
	1333 Compare X8, 0
	1334 JumpIfEqual {1359}
	1335 Compare X22, 0
	1336 JumpIfEqual {1359}
	1337 NotImplemented "Instruction LDRSW not yet implemented."
	1338 Move W9, [X22+24]
	1339 NotImplemented "Instruction CMP not yet implemented."
	1340 Compare X23, 0
	1341 JumpIfEqual {1359}
	1342 Add X8, X22, X8
	1343 Move X24, [X8+32]
	1344 Compare X24, 0
	1345 JumpIfEqual {1352}
	1346 Move X8, [X23]
	1347 Move X0, X24
	1348 Move X1, [X8+64]
	1349 Call 0x1C17E00
	1350 Compare X0, 0
	1351 JumpIfEqual {1577}
	1352 Move W8, [X23+24]
	1353 NotImplemented "Instruction CMP not yet implemented."
	1354 Move [X23], X24
	1355 Move X8, [X31+264]
	1356 Add X20, X20, 1
	1357 Compare X8, 0
	1358 JumpIfNotEqual {1325}
	1359 Call 0x1C17F20
	1360 Move X0, X21
	1361 Move X1, X23
	1362 Move X2, X31
	1363 Call SkinnedMeshRenderer.set_bones, X0, X1
	1364 Compare X22, 0
	1365 JumpIfEqual {1359}
	1366 Move W8, [X22+24]
	1367 Compare W8, 0
	1368 JumpIfEqual {1590}
	1369 Move X1, [X22+32]
	1370 Move X0, X21
	1371 Move X2, X31
	1372 Call SkinnedMeshRenderer.set_rootBone, X0, X1
	1373 Move W8, [X22+24]
	1374 Compare W8, 0
	1375 JumpIfEqual {1590}
	1376 Move X0, [X22+32]
	1377 Move [X19+120], X0
	1378 Compare X0, 0
	1379 JumpIfEqual {1359}
	1380 Move X1, X31
	1381 Call Component.get_gameObject, X0
	1382 Compare X0, 0
	1383 JumpIfEqual {1359}
	1384 Move X8, 0x22D9000
	1385 Move X8, [X8+1904]
	1386 Move X1, [X8]
	1387 Call 0x21E61FC, X0
	1388 Compare X0, 0
	1389 JumpIfEqual {1359}
	1390 Move X8, [X19+120]
	1391 Move X22, X0
	1392 Move W1, 2
	1393 Move [X0+32], X8
	1394 Move X8, 0x22D9000
	1395 Move X8, [X8+1936]
	1396 Move X0, [X8]
	1397 Call 0x1C17D6C
	1398 Move X23, X0
	1399 Add X0, X31, 144
	1400 Move S0, W31
	1401 Move S1, 1
	1402 Move S2, W31
	1403 Move S3, W31
	1404 Move X1, X31
	1405 Move [X31+144], X31
	1406 Move [X31+152], X31
	1407 Move [X31+168], W31
	1408 Move [X31+160], X31
	1409 Call Keyframe..ctor, X0, V0, V1, V2, V3
	1410 Compare X23, 0
	1411 JumpIfEqual {1359}
	1412 Move V0, [X31+9]
	1413 NotImplemented "Instruction LDUR not yet implemented."
	1414 Move [X31+7], V0
	1415 Move [X31+124], V1
	1416 Move W8, [X23+24]
	1417 Compare W8, 0
	1418 JumpIfEqual {1590}
	1419 NotImplemented "Instruction LDUR not yet implemented."
	1420 Move V1, [X31+7]
	1421 Add X0, X31, 80
	1422 Move S2, 1
	1423 Move [X23+44], V0
	1424 Move [X23+2], V1
	1425 Move S0, 1
	1426 Move S1, 0.5
	1427 Move S3, W31
	1428 Move X1, X31
	1429 Move [X31+80], X31
	1430 Move [X31+88], X31
	1431 Move [X31+104], W31
	1432 Move [X31+96], X31
	1433 Call Keyframe..ctor, X0, V0, V1, V2, V3
	1434 NotImplemented "Instruction LDUR not yet implemented."
	1435 Move V1, [X31+5]
	1436 Move [X31+60], V0
	1437 Move [X31+3], V1
	1438 Move W8, [X23+24]
	1439 NotImplemented "Instruction CMP not yet implemented."
	1440 NotImplemented "Instruction LDUR not yet implemented."
	1441 Move V1, [X31+3]
	1442 Move X8, 0x22D9000
	1443 Move [X23+72], V0
	1444 Move [X23+60], V1
	1445 Move X8, [X8+1840]
	1446 Move X0, [X8]
	1447 Call 0x1C17F10
	1448 Move X1, X23
	1449 Move X2, X31
	1450 Move X24, X0
	1451 Call AnimationCurve..ctor, X0, X1
	1452 Move [X22+80], X24
	1453 Move V0, [X31+13]
	1454 Move X8, [X31+224]
	1455 Add X1, X31, 16
	1456 Move X0, X21
	1457 Move X2, X31
	1458 Move [X31+1], V0
	1459 Move [X31+32], X8
	1460 Call Renderer.set_localBounds, X0, X1
	1461 Move X8, [X19+32]
	1462 Compare X8, 0
	1463 JumpIfEqual {1359}
	1464 Move X1, [X8+24]
	1465 Move W2, [X31+240]
	1466 Move X3, [X31+264]
	1467 Move X0, X19
	1468 Call AvatarView.UpdateCageMeshForBodyPart, X0, X1, X2, X3
	1469 Move W8, 1
	1470 Move [X27], W8
	1471 Move W8, [X31+240]
	1472 NotImplemented "Instruction CMP not yet implemented."
	1473 NotImplemented "Instruction CMP not yet implemented."
	1474 Move X8, [X19+104]
	1475 Compare X8, 0
	1476 JumpIfEqual {1359}
	1477 Move W9, [X8+24]
	1478 NotImplemented "Instruction CMP not yet implemented."
	1479 Move X8, [X8+48]
	1480 Compare X8, 0
	1481 JumpIfEqual {1359}
	1482 Move X0, [X8+24]
	1483 Compare X0, 0
	1484 JumpIfEqual {1359}
	1485 Move X1, X31
	1486 Call GameObject.get_transform, X0
	1487 Move X8, [X31+232]
	1488 Compare X8, 0
	1489 JumpIfEqual {1359}
	1490 Move X8, [X8+56]
	1491 Compare X8, 0
	1492 JumpIfEqual {1359}
	1493 Compare X0, 0
	1494 JumpIfEqual {1359}
	1495 Move S1, [X8+128]
	1496 Move S2, [X8+132]
	1497 Move V0, [X8+124]
	1498 Move X1, X31
	1499 Call Transform.set_localPosition, X0, X1
	1500 Move X8, [X19+104]
	1501 Compare X8, 0
	1502 JumpIfEqual {1359}
	1503 Move W9, [X8+24]
	1504 NotImplemented "Instruction CMP not yet implemented."
	1505 Move X8, [X8+40]
	1506 Compare X8, 0
	1507 JumpIfEqual {1359}
	1508 Move X0, [X8+24]
	1509 Compare X0, 0
	1510 JumpIfEqual {1359}
	1511 Move X1, X31
	1512 Call GameObject.get_transform, X0
	1513 Move X8, [X31+232]
	1514 Compare X8, 0
	1515 JumpIfEqual {1359}
	1516 Move X8, [X8+56]
	1517 Compare X8, 0
	1518 JumpIfEqual {1359}
	1519 Compare X0, 0
	1520 JumpIfEqual {1359}
	1521 Move S1, [X8+116]
	1522 Move S2, [X8+120]
	1523 Move V0, [X8+112]
	1524 Move X1, X31
	1525 Call Transform.set_localPosition, X0, X1
	1526 Move X0, [X26]
	1527 Move X20, [X19+120]
	1528 Move W8, [X0+224]
	1529 Compare W8, 0
	1530 JumpIfNotEqual {1532}
	1531 Call 0x1C17DFC
	1532 Move X0, X20
	1533 Move X1, X31
	1534 Move X2, X31
	1535 Call Object.op_Inequality, X0, X1
	1536 Move TEMP, X0
	1537 And TEMP, TEMP, 1
	1538 Compare TEMP, 1
	1539 JumpIfNotEqual {1556}
	1540 Move X8, [X19+96]
	1541 Compare X8, 0
	1542 JumpIfEqual {1359}
	1543 Move W9, [X8+24]
	1544 NotImplemented "Instruction CMP not yet implemented."
	1545 Move X0, [X8+112]
	1546 Compare X0, 0
	1547 JumpIfEqual {1359}
	1548 Move X19, [X19+120]
	1549 Move X1, X31
	1550 Call Transform.get_position, X0
	1551 Compare X19, 0
	1552 JumpIfEqual {1359}
	1553 Move X0, X19
	1554 Move X1, X31
	1555 Call Transform.set_position, X0, X1
	1556 Move X20, [X31+400]
	1557 Move X19, [X31+408]
	1558 Move X22, [X31+384]
	1559 Move X21, [X31+392]
	1560 Move X24, [X31+368]
	1561 Move X23, [X31+376]
	1562 Move X26, [X31+352]
	1563 Move X25, [X31+360]
	1564 Move X28, [X31+336]
	1565 Move X27, [X31+344]
	1566 Move X29, [X31+320]
	1567 Move X30, [X31+328]
	1568 Move D9, [X31+304]
	1569 Move D8, [X31+312]
	1570 Move D11, [X31+288]
	1571 Move D10, [X31+296]
	1572 Move D13, [X31+272]
	1573 Move D12, [X31+280]
	1574 Move V14, [X31+256]
	1575 Add X31, X31, 416
	1576 Return 
	1577 Call 0x1C17F44
	1578 Move X1, X31
	1579 Call 0x1C17DEC
	1580 Move W8, [X22+24]
	1581 Subtract W9, W24, 4
	1582 NotImplemented "Instruction CMP not yet implemented."
	1583 Move [X22], X23
	1584 Call 0x1C17F20
	1585 Move W8, [X22+24]
	1586 Subtract W9, W20, 4
	1587 NotImplemented "Instruction CMP not yet implemented."
	1588 Move [X22], X23
	1589 Call 0x1C17F20
	1590 Call 0x1C17F28

Method: System.Void UpdateAccessory(AnimalCompany.AvatarSystem.AvatarView/AccessoryInstance accessoryInstance, AnimalCompany.AvatarAccessoryData accessoryData, System.Boolean cageChanged, ref System.Boolean fittedAccessoryChanged)

Disassembly:
	0x01E22674 ADD W9, W8, 0x1
	0x01E22678 CMP W9, W24
	0x01E2267C B.CS 0x1E22E14
	0x01E22680 ADD W19, W9, 0x1
	0x01E22684 CMP W19, W24
	0x01E22688 B.CS 0x1E22E14
	0x01E2268C CBZ X20, 0x1E22E10
	0x01E22690 LDR X10, [X31 + 0x30]
	0x01E22694 ADD X8, X10, W8, 0x2, SXTW
	0x01E22698 LDR W25, [X8 + 0x20]
	0x01E2269C LDR W8, [X20 + 0x18]
	0x01E226A0 CMP W25, W8
	0x01E226A4 B.CS 0x1E22E14
	0x01E226A8 SUB W9, W21, 0x1
	0x01E226AC ADD X9, X10, W9, 0x2, SXTW
	0x01E226B0 LDR W24, [X9 + 0x20]
	0x01E226B4 CMP W24, W8
	0x01E226B8 B.CS 0x1E22E14
	0x01E226BC ADD X9, X10, W21, 0x2, SXTW
	0x01E226C0 LDR W23, [X9 + 0x20]
	0x01E226C4 CMP W23, W8
	0x01E226C8 B.CS 0x1E22E14
	0x01E226CC LDR X22, [X31 + 0x20]
	0x01E226D0 CBZ X22, 0x1E22E10
	0x01E226D4 SXTW X8, W25
	0x01E226D8 SXTW X9, W24
	0x01E226DC SXTW X10, W23
	0x01E226E0 ADD X8, X20, X8, 0x2, LSL
	0x01E226E4 ADD X9, X20, X9, 0x2, LSL
	0x01E226E8 ADD X10, X20, X10, 0x2, LSL
	0x01E226EC ADRP X27, 0x22D2000
	0x01E226F0 LDR W1, [X8 + 0x20]
	0x01E226F4 LDR W26, [X9 + 0x20]
	0x01E226F8 LDR W29, [X10 + 0x20]
	0x01E226FC LDR X27, [X27 + 0xDF8]
	0x01E22700 MOV X0, X22
	0x01E22704 LDR X2, [X27]
	0x01E22708 BL 0x2DAA59C
	0x01E2270C LDR X2, [X27]
	0x01E22710 MOV W28, W0
	0x01E22714 MOV X0, X22
	0x01E22718 MOV W1, W26
	0x01E2271C BL 0x2DAA59C
	0x01E22720 LDR X2, [X27]
	0x01E22724 MOV W27, W0
	0x01E22728 MOV X0, X22
	0x01E2272C MOV W1, W29
	0x01E22730 BL 0x2DAA59C
	0x01E22734 MOV W26, W0
	0x01E22738 TBZ X28, 0x0, 0x1E22744
	0x01E2273C TBZ X27, 0x0, 0x1E22744
	0x01E22740 TBNZ X26, 0x0, 0x1E228E8
	0x01E22744 LDR X8, [X31 + 0x28]
	0x01E22748 LDR X0, [X8 + 0x88]
	0x01E2274C CBZ X0, 0x1E22E10
	0x01E22750 ADRP X9, 0x22D2000
	0x01E22754 LDR W10, [X0 + 0x1C]
	0x01E22758 LDR X8, [X0 + 0x10]
	0x01E2275C LDR X9, [X9 + 0xE10]
	0x01E22760 ADD W10, W10, 0x1
	0x01E22764 LDR X9, [X9]
	0x01E22768 STR W10, [X0 + 0x1C]
	0x01E2276C CBZ X8, 0x1E22E10
	0x01E22770 LDRSW X10, [X0 + 0x18]
	0x01E22774 LDR W11, [X8 + 0x18]
	0x01E22778 CMP W10, W11
	0x01E2277C B.CS 0x1E22794
	0x01E22780 ADD W9, W10, 0x1
	0x01E22784 ADD X8, X8, X10, 0x2, LSL
	0x01E22788 STR W9, [X0 + 0x18]
	0x01E2278C STR W25, [X8 + 0x20]
	0x01E22790 B 0x1E227B4
	0x01E22794 LDR X8, [X9 + 0x20]
	0x01E22798 MOV W1, W25
	0x01E2279C LDR X8, [X8 + 0xC0]
	0x01E227A0 LDR X2, [X8 + 0x70]
	0x01E227A4 BL 0x2FDC70C
	0x01E227A8 LDR X8, [X31 + 0x28]
	0x01E227AC LDR X0, [X8 + 0x88]
	0x01E227B0 CBZ X0, 0x1E22E10
	0x01E227B4 ADRP X9, 0x22D2000
	0x01E227B8 LDR W10, [X0 + 0x1C]
	0x01E227BC LDR X8, [X0 + 0x10]
	0x01E227C0 LDR X9, [X9 + 0xE10]
	0x01E227C4 ADD W10, W10, 0x1
	0x01E227C8 LDR X9, [X9]
	0x01E227CC STR W10, [X0 + 0x1C]
	0x01E227D0 CBZ X8, 0x1E22E10
	0x01E227D4 LDRSW X10, [X0 + 0x18]
	0x01E227D8 LDR W11, [X8 + 0x18]
	0x01E227DC CMP W10, W11
	0x01E227E0 B.CS 0x1E227F8
	0x01E227E4 ADD W9, W10, 0x1
	0x01E227E8 ADD X8, X8, X10, 0x2, LSL
	0x01E227EC STR W9, [X0 + 0x18]
	0x01E227F0 STR W24, [X8 + 0x20]
	0x01E227F4 B 0x1E22818
	0x01E227F8 LDR X8, [X9 + 0x20]
	0x01E227FC MOV W1, W24
	0x01E22800 LDR X8, [X8 + 0xC0]
	0x01E22804 LDR X2, [X8 + 0x70]
	0x01E22808 BL 0x2FDC70C
	0x01E2280C LDR X8, [X31 + 0x28]
	0x01E22810 LDR X0, [X8 + 0x88]
	0x01E22814 CBZ X0, 0x1E22E10
	0x01E22818 ADRP X9, 0x22D2000
	0x01E2281C LDR W10, [X0 + 0x1C]
	0x01E22820 LDR X8, [X0 + 0x10]
	0x01E22824 LDR X9, [X9 + 0xE10]
	0x01E22828 ADD W10, W10, 0x1
	0x01E2282C LDR X9, [X9]
	0x01E22830 STR W10, [X0 + 0x1C]
	0x01E22834 CBZ X8, 0x1E22E10
	0x01E22838 LDRSW X10, [X0 + 0x18]
	0x01E2283C LDR W11, [X8 + 0x18]
	0x01E22840 CMP W10, W11
	0x01E22844 B.CS 0x1E22868
	0x01E22848 ADD W9, W10, 0x1
	0x01E2284C ADD X8, X8, X10, 0x2, LSL
	0x01E22850 STR W9, [X0 + 0x18]
	0x01E22854 STR W23, [X8 + 0x20]
	0x01E22858 TBNZ X28, 0x0, 0x1E22880
	0x01E2285C TBNZ X27, 0x0, 0x1E228A4
	0x01E22860 TBNZ X26, 0x0, 0x1E228C8
	0x01E22864 B 0x1E228E8
	0x01E22868 LDR X8, [X9 + 0x20]
	0x01E2286C MOV W1, W23
	0x01E22870 LDR X8, [X8 + 0xC0]
	0x01E22874 LDR X2, [X8 + 0x70]
	0x01E22878 BL 0x2FDC70C
	0x01E2287C TBZ X28, 0x0, 0x1E2285C
	0x01E22880 LDR X8, [X31 + 0x28]
	0x01E22884 LDR X0, [X8 + 0x90]
	0x01E22888 CBZ X0, 0x1E22E10
	0x01E2288C ADRP X8, 0x22D3000
	0x01E22890 LDR X8, [X8 + 0x9D8]
	0x01E22894 MOV W1, W25
	0x01E22898 LDR X2, [X8]
	0x01E2289C BL 0x2DAB03C
	0x01E228A0 TBZ X27, 0x0, 0x1E22860
	0x01E228A4 LDR X8, [X31 + 0x28]
	0x01E228A8 LDR X0, [X8 + 0x90]
	0x01E228AC CBZ X0, 0x1E22E10
	0x01E228B0 ADRP X8, 0x22D3000
	0x01E228B4 LDR X8, [X8 + 0x9D8]
	0x01E228B8 MOV W1, W24
	0x01E228BC LDR X2, [X8]
	0x01E228C0 BL 0x2DAB03C
	0x01E228C4 TBZ X26, 0x0, 0x1E228E8
	0x01E228C8 LDR X8, [X31 + 0x28]
	0x01E228CC LDR X0, [X8 + 0x90]
	0x01E228D0 CBZ X0, 0x1E22E10
	0x01E228D4 ADRP X8, 0x22D3000
	0x01E228D8 LDR X8, [X8 + 0x9D8]
	0x01E228DC MOV W1, W23
	0x01E228E0 LDR X2, [X8]
	0x01E228E4 BL 0x2DAB03C
	0x01E228E8 LDR X8, [X31 + 0x30]
	0x01E228EC ADD W21, W21, 0x3
	0x01E228F0 LDR X24, [X8 + 0x18]
	0x01E228F4 ADD W8, W19, 0x1
	0x01E228F8 CMP W8, W24
	0x01E228FC B.LT 0x1E22668
	0x01E22900 ADRP X21, 0x22D8000
	0x01E22904 LDR X21, [X21 + 0x838]
	0x01E22908 LDR X8, [X31 + 0x28]
	0x01E2290C LDR X20, [X31 + 0x18]
	0x01E22910 LDR X8, [X8 + 0x88]
	0x01E22914 CBZ X8, 0x1E22E10
	0x01E22918 LDR W19, [X8 + 0x18]
	0x01E2291C CBZ W19, 0x1E22A14
	0x01E22920 LDR X22, [X31 + 0x10]
	0x01E22924 LDR X0, [X22 + 0x28]
	0x01E22928 CBZ X0, 0x1E22E10
	0x01E2292C MOV X1, X31
	0x01E22930 BL 0x3C16E8C
	0x01E22934 LDR X8, [X22 + 0x38]
	0x01E22938 CBZ X8, 0x1E22E10
	0x01E2293C ADRP X9, 0x22D1000
	0x01E22940 LDR X9, [X9 + 0x598]
	0x01E22944 MOV X22, X0
	0x01E22948 LDR X23, [X8 + 0x40]
	0x01E2294C LDR X0, [X9]
	0x01E22950 LDR W9, [X0 + 0xE0]
	0x01E22954 CBNZ W9, 0x1E2295C
	0x01E22958 BL 0x1C16DFC
	0x01E2295C MOV X0, X22
	0x01E22960 MOV X1, X23
	0x01E22964 CMP W19, W24
	0x01E22968 B.NE 0x1E22A28
	0x01E2296C MOV X2, X31
	0x01E22970 BL 0x3C354F8
	0x01E22974 LDR X19, [X31 + 0x10]
	0x01E22978 TBZ X0, 0x0, 0x1E22A04
	0x01E2297C LDR X8, [X19 + 0x38]
	0x01E22980 CBZ X8, 0x1E22E10
	0x01E22984 LDR X0, [X19 + 0x28]
	0x01E22988 CBZ X0, 0x1E22E10
	0x01E2298C LDR X1, [X8 + 0x40]
	0x01E22990 MOV X2, X31
	0x01E22994 BL 0x3C16EC8
	0x01E22998 ADRP X8, 0x22D1000
	0x01E2299C LDR X8, [X8 + 0x598]
	0x01E229A0 LDR X0, [X8]
	0x01E229A4 LDR W8, [X0 + 0xE0]
	0x01E229A8 CBNZ W8, 0x1E229B0
	0x01E229AC BL 0x1C16DFC
	0x01E229B0 MOV X0, X22
	0x01E229B4 MOV X1, X31
	0x01E229B8 MOV X2, X31
	0x01E229BC BL 0x3C354F8
	0x01E229C0 TBZ X0, 0x0, 0x1E22A04
	0x01E229C4 LDR X0, [X19 + 0x48]
	0x01E229C8 CBZ X0, 0x1E22E10
	0x01E229CC ADRP X8, 0x22D8000
	0x01E229D0 LDR X8, [X8 + 0x860]
	0x01E229D4 MOV X1, X22
	0x01E229D8 LDR X2, [X8]
	0x01E229DC BL 0x301D7A8
	0x01E229E0 ADRP X8, 0x22D1000
	0x01E229E4 LDR X8, [X8 + 0x598]
	0x01E229E8 LDR X0, [X8]
	0x01E229EC LDR W8, [X0 + 0xE0]
	0x01E229F0 CBNZ W8, 0x1E229F8
	0x01E229F4 BL 0x1C16DFC
	0x01E229F8 MOV X0, X22
	0x01E229FC MOV X1, X31
	0x01E22A00 BL 0x3C394A8
	0x01E22A04 LDR X22, [X19 + 0x28]
	0x01E22A08 STRB W31, [X19 + 0x42]
	0x01E22A0C MOV X0, X19
	0x01E22A10 B 0x1E22C44
	0x01E22A14 LDR X0, [X31 + 0x10]
	0x01E22A18 MOVZ W8, 0x1
	0x01E22A1C LDR X22, [X0 + 0x28]
	0x01E22A20 STRB W8, [X0 + 0x42]
	0x01E22A24 B 0x1E22C44
	0x01E22A28 MOV X2, X31
	0x01E22A2C BL 0x3C3883C
	0x01E22A30 LDR X23, [X31 + 0x10]
	0x01E22A34 MOVZ W19, 0xC
	0x01E22A38 TBZ X0, 0x0, 0x1E22AE4
	0x01E22A3C ADRP X8, 0x22D1000
	0x01E22A40 LDR X8, [X8 + 0x598]
	0x01E22A44 LDR X0, [X8]
	0x01E22A48 LDR W8, [X0 + 0xE0]
	0x01E22A4C CBNZ W8, 0x1E22A54
	0x01E22A50 BL 0x1C16DFC
	0x01E22A54 ADRP X8, 0x22D2000
	0x01E22A58 LDR X8, [X8 + 0xE38]
	0x01E22A5C MOV X0, X22
	0x01E22A60 LDR X1, [X8]
	0x01E22A64 BL 0x222D35C
	0x01E22A68 LDR X8, [X23 + 0x48]
	0x01E22A6C CBZ X8, 0x1E22E10
	0x01E22A70 ADRP X10, 0x22D8000
	0x01E22A74 LDR W11, [X8 + 0x1C]
	0x01E22A78 LDR X9, [X8 + 0x10]
	0x01E22A7C LDR X10, [X10 + 0x798]
	0x01E22A80 ADD W11, W11, 0x1
	0x01E22A84 LDR X10, [X10]
	0x01E22A88 STR W11, [X8 + 0x1C]
	0x01E22A8C CBZ X9, 0x1E22E10
	0x01E22A90 LDRSW X11, [X8 + 0x18]
	0x01E22A94 LDR W12, [X9 + 0x18]
	0x01E22A98 MOV X22, X0
	0x01E22A9C CMP W11, W12
	0x01E22AA0 B.CS 0x1E22AB8
	0x01E22AA4 ADD W10, W11, 0x1
	0x01E22AA8 ADD X9, X9, X11, 0x3, LSL
	0x01E22AAC STR W10, [X8 + 0x18]
	0x01E22AB0 STR X22, [X9 + 0x20]
	0x01E22AB4 B 0x1E22AD0
	0x01E22AB8 LDR X9, [X10 + 0x20]
	0x01E22ABC MOV X0, X8
	0x01E22AC0 MOV X1, X22
	0x01E22AC4 LDR X9, [X9 + 0xC0]
	0x01E22AC8 LDR X2, [X9 + 0x70]
	0x01E22ACC BL 0x301BF90
	0x01E22AD0 LDR X0, [X23 + 0x28]
	0x01E22AD4 CBZ X0, 0x1E22E10
	0x01E22AD8 MOV X1, X22
	0x01E22ADC MOV X2, X31
	0x01E22AE0 BL 0x3C16EC8
	0x01E22AE4 LDR X8, [X31 + 0x28]
	0x01E22AE8 LDR X8, [X8 + 0x90]
	0x01E22AEC CBZ X8, 0x1E22E10
	0x01E22AF0 LDR W8, [X8 + 0x20]
	0x01E22AF4 CMP W8, 0x1
	0x01E22AF8 B.LT 0x1E22BF0
	0x01E22AFC LDR X8, [X23 + 0x38]
	0x01E22B00 CBZ X8, 0x1E22E10
	0x01E22B04 LDR X0, [X8 + 0x40]
	0x01E22B08 CBZ X0, 0x1E22E10
	0x01E22B0C MOV X1, X31
	0x01E22B10 BL 0x3C17EBC
	0x01E22B14 CBZ X22, 0x1E22E10
	0x01E22B18 MOV X23, X0
	0x01E22B1C MOV X0, X22
	0x01E22B20 MOV X1, X31
	0x01E22B24 BL 0x3C18014
	0x01E22B28 LDR X8, [X31 + 0x28]
	0x01E22B2C LDR X9, [X8 + 0x90]
	0x01E22B30 CBZ X9, 0x1E22E10
	0x01E22B34 ADRP X8, 0x22D8000
	0x01E22B38 LDR X8, [X8 + 0x848]
	0x01E22B3C MOV X24, X0
	0x01E22B40 MOV X0, X9
	0x01E22B44 LDR X1, [X8]
	0x01E22B48 ADD X8, X31, 0x38
	0x01E22B4C BL 0x2DAAA30
	0x01E22B50 LDUR V0, [X31 + 0x38]
	0x01E22B54 LDR X8, [X31 + 0x48]
	0x01E22B58 STR V0, [X31 + 0x5]
	0x01E22B5C STR X8, [X31 + 0x60]
	0x01E22B60 LDR X1, [X21]
	0x01E22B64 ADD X0, X31, 0x50
	0x01E22B68 BL 0x2BBDA6C
	0x01E22B6C TBZ X0, 0x0, 0x1E22BC8
	0x01E22B70 CBZ X24, 0x1E22C88
	0x01E22B74 LDRSW X8, [X31 + 0x60]
	0x01E22B78 LDR W9, [X24 + 0x18]
	0x01E22B7C CMP W8, W9
	0x01E22B80 B.CS 0x1E22C80
	0x01E22B84 CBZ X23, 0x1E22C90
	0x01E22B88 LDR W9, [X23 + 0x18]
	0x01E22B8C CMP W8, W9
	0x01E22B90 B.CS 0x1E22C78
	0x01E22B94 ADD X9, X24, X8, 0x4, LSL
	0x01E22B98 MADD X8, X8, X19, X23
	0x01E22B9C LDR V0, [X9 + 0x20]
	0x01E22BA0 LDR V1, [X9 + 0x28]
	0x01E22BA4 LDR V2, [X8 + 0x20]
	0x01E22BA8 LDR V3, [X8 + 0x28]
	0x00000000 INVALID
	0x01E22BB0 FMUL S1, S1, S8
	0x01E22BB4 FADD V0.2S, V2.2S, V0.2S
	0x01E22BB8 FSUB S1, S3, S1
	0x01E22BBC STR D0, [X8 + 0x20]
	0x01E22BC0 STR S1, [X8 + 0x28]
	0x01E22BC4 B 0x1E22B60
	0x01E22BC8 ADRP X8, 0x22D8000
	0x01E22BCC LDR X8, [X8 + 0x830]
	0x01E22BD0 ADD X0, X31, 0x50
	0x01E22BD4 LDR X1, [X8]
	0x01E22BD8 BL 0x2BBDA68
	0x01E22BDC MOV X0, X22
	0x01E22BE0 MOV X1, X23
	0x01E22BE4 MOV X2, X31
	0x01E22BE8 BL 0x3C17F08
	0x01E22BEC LDR X23, [X31 + 0x10]
	0x01E22BF0 LDR X8, [X31 + 0x28]
	0x01E22BF4 LDR X0, [X8 + 0x88]
	0x01E22BF8 CBZ X0, 0x1E22E10
	0x01E22BFC ADRP X8, 0x22D2000
	0x01E22C00 LDR X8, [X8 + 0xE18]
	0x01E22C04 LDR X1, [X8]
	0x01E22C08 BL 0x2FDE4C8
	0x01E22C0C CBZ X22, 0x1E22E10
	0x01E22C10 MOV X1, X0
	0x01E22C14 MOV X0, X22
	0x01E22C18 MOV W2, W31
	0x01E22C1C MOV W3, W31
	0x01E22C20 MOV X4, X31
	0x01E22C24 BL 0x3C19784
	0x01E22C28 MOV X0, X22
	0x01E22C2C MOV W1, W31
	0x01E22C30 MOV X2, X31
	0x01E22C34 BL 0x3C1A03C
	0x01E22C38 LDR X22, [X23 + 0x28]
	0x01E22C3C STRB W31, [X23 + 0x42]
	0x01E22C40 MOV X0, X23
	0x01E22C44 MOV X1, X31
	0x01E22C48 BL 0x1D64610
	0x01E22C4C CBZ X22, 0x1E22E10
	0x01E22C50 AND W1, W0, 0x1
	0x01E22C54 MOV X0, X22
	0x01E22C58 MOV X2, X31
	0x01E22C5C BL 0x3C13034
	0x01E22C60 LDR W10, [X31 + 0xC]
	0x01E22C64 LDR W8, [X20 + 0x18]
	0x01E22C68 ADD W10, W10, 0x1
	0x01E22C6C CMP W10, W8
	0x01E22C70 B.LT 0x1E2255C
	0x01E22C74 B 0x1E22DEC
	0x01E22C78 BL 0x1C16F28
	0x01E22C7C B 0x1E22E18
	0x01E22C80 BL 0x1C16F28
	0x01E22C84 B 0x1E22E18
	0x01E22C88 BL 0x1C16F20
	0x01E22C8C B 0x1E22E18
	0x01E22C90 BL 0x1C16F20
	0x01E22C94 B 0x1E22E18
	0x01E22C98 B 0x1E22CA8
	0x01E22C9C B 0x1E22CA8
	0x01E22CA0 B 0x1E22CA8
	0x01E22CA4 B 0x1E22CA8
	0x01E22CA8 MOV X24, X0
	0x01E22CAC CMP W1, 0x1
	0x01E22CB0 B.NE 0x1E22E18
	0x01E22CB4 MOV X0, X24
	0x01E22CB8 BL 0x3EB1AD0
	0x01E22CBC LDR X25, [X0]
	0x01E22CC0 BL 0x3EB1AE0
	0x01E22CC4 ADRP X8, 0x22D8000
	0x01E22CC8 LDR X8, [X8 + 0x830]
	0x01E22CCC ADD X0, X31, 0x50
	0x01E22CD0 LDR X1, [X8]
	0x01E22CD4 BL 0x2BBDA68
	0x01E22CD8 ADRP X21, 0x22D8000
	0x01E22CDC LDR X20, [X31 + 0x18]
	0x01E22CE0 LDR X21, [X21 + 0x838]
	0x01E22CE4 CBZ X25, 0x1E22BDC
	0x01E22CE8 MOV X0, X25
	0x01E22CEC BL 0x1C16F18
	0x01E22CF0 CBZ X20, 0x1E22E10
	0x01E22CF4 LDR W8, [X20 + 0x18]
	0x01E22CF8 CMP W8, 0x1
	0x01E22CFC B.LT 0x1E22DEC
	0x01E22D00 ADRP X22, 0x22D1000
	0x01E22D04 ADRP X23, 0x22D8000
	0x01E22D08 LDR X22, [X22 + 0x598]
	0x01E22D0C LDR X23, [X23 + 0x860]
	0x01E22D10 MOV W21, W31
	0x01E22D14 CMP W21, W8
	0x01E22D18 B.CS 0x1E22E14
	0x01E22D1C ADD X8, X20, W21, 0x3, SXTW
	0x01E22D20 LDR X24, [X8 + 0x20]
	0x01E22D24 CBZ X24, 0x1E22E10
	0x01E22D28 LDRB W8, [X24 + 0x41]
	0x01E22D2C CBZ W8, 0x1E22DDC
	0x01E22D30 LDR X0, [X24 + 0x28]
	0x01E22D34 CBZ X0, 0x1E22E10
	0x01E22D38 MOV X1, X31
	0x01E22D3C BL 0x3C16E8C
	0x01E22D40 LDR X8, [X24 + 0x38]
	0x01E22D44 CBZ X8, 0x1E22E10
	0x01E22D48 MOV X19, X0
	0x01E22D4C LDR X0, [X22]
	0x01E22D50 LDR X20, [X8 + 0x40]
	0x01E22D54 LDR W9, [X0 + 0xE0]
	0x01E22D58 CBNZ W9, 0x1E22D60
	0x01E22D5C BL 0x1C16DFC
	0x01E22D60 MOV X0, X19
	0x01E22D64 MOV X1, X20
	0x01E22D68 MOV X2, X31
	0x01E22D6C BL 0x3C354F8
	0x01E22D70 LDR X8, [X24 + 0x38]
	0x01E22D74 CBZ X8, 0x1E22E10
	0x01E22D78 MOV W20, W0
	0x01E22D7C LDR X0, [X24 + 0x28]
	0x01E22D80 CBZ X0, 0x1E22E10
	0x01E22D84 LDR X1, [X8 + 0x40]
	0x01E22D88 MOV X2, X31
	0x01E22D8C BL 0x3C16EC8
	0x01E22D90 MOV X0, X19
	0x01E22D94 MOV X1, X31
	0x01E22D98 MOV X2, X31
	0x01E22D9C BL 0x3C354F8
	0x01E22DA0 AND W8, W20, W0, 0x0
	0x01E22DA4 LDR X20, [X31 + 0x18]
	0x01E22DA8 TBZ X8, 0x0, 0x1E22DDC
	0x01E22DAC LDR X0, [X24 + 0x48]
	0x01E22DB0 CBZ X0, 0x1E22E10
	0x01E22DB4 LDR X2, [X23]
	0x01E22DB8 MOV X1, X19
	0x01E22DBC BL 0x301D7A8
	0x01E22DC0 LDR X0, [X22]
	0x01E22DC4 LDR W8, [X0 + 0xE0]
	0x01E22DC8 CBNZ W8, 0x1E22DD0
	0x01E22DCC BL 0x1C16DFC
	0x01E22DD0 MOV X0, X19
	0x01E22DD4 MOV X1, X31
	0x01E22DD8 BL 0x3C394A8
	0x01E22DDC LDR W8, [X20 + 0x18]
	0x01E22DE0 ADD W21, W21, 0x1
	0x01E22DE4 CMP W21, W8
	0x01E22DE8 B.LT 0x1E22D14
	0x01E22DEC LDP X20, X19, [X31 + 0xD0]
	0x01E22DF0 LDP X22, X21, [X31 + 0xC0]
	0x01E22DF4 LDP X24, X23, [X31 + 0xB0]
	0x01E22DF8 LDP X26, X25, [X31 + 0xA0]
	0x01E22DFC LDP X28, X27, [X31 + 0x90]
	0x01E22E00 LDP X29, X30, [X31 + 0x80]
	0x01E22E04 LDP D9, D8, [X31 + 0x70]
	0x01E22E08 ADD X31, X31, 0xE0
	0x01E22E0C RET
	0x01E22E10 BL 0x1C16F20
	0x01E22E14 BL 0x1C16F28
	0x01E22E18 MOV X25, X31
	0x01E22E1C B 0x1E22E24
	0x01E22E20 MOV X24, X0
	0x01E22E24 ADRP X8, 0x22D8000
	0x01E22E28 LDR X8, [X8 + 0x830]
	0x01E22E2C LDR X1, [X8]
	0x01E22E30 ADD X0, X31, 0x50
	0x01E22E34 BL 0x2BBDA68
	0x01E22E38 CBNZ X25, 0x1E22E44
	0x01E22E3C MOV X0, X24
	0x01E22E40 BL 0x1D2C690
	0x01E22E44 MOV X0, X25
	0x01E22E48 BL 0x1C16F18
	0x01E22E4C BL 0x1990590
	0x01E22E50 STR X30, [X31 - 0x20]!
	0x01E22E54 STP X20, X19, [X31 + 0x10]
	0x01E22E58 LDR X8, [X0 + 0x58]
	0x01E22E5C MOV X19, X2
	0x01E22E60 CBZ X8, 0x1E22E94
	0x01E22E64 LDR W9, [X8 + 0x18]
	0x01E22E68 CMP W9, W1
	0x01E22E6C B.LE 0x1E22E94
	0x01E22E70 CMP W9, W1
	0x01E22E74 B.LS 0x1E22EE8
	0x01E22E78 SXTW X9, W1
	0x01E22E7C MOVZ W10, 0xC
	0x01E22E80 MADD X9, X9, X10, X8
	0x01E22E84 ADD X8, X9, 0x20
	0x01E22E88 ADD X9, X9, 0x28
	0x01E22E8C MOVZ W0, 0x1
	0x01E22E90 B 0x1E22ECC
	0x01E22E94 ADRP X20, 0x25B6000
	0x01E22E98 LDRB W8, [X20 + 0x783]
	0x01E22E9C CBNZ W8, 0x1E22EB4
	0x01E22EA0 ADRP X0, 0x22D1000
	0x01E22EA4 LDR X0, [X0 + 0x5A0]
	0x01E22EA8 BL 0x1C16CF4
	0x01E22EAC MOVZ W8, 0x1
	0x01E22EB0 STRB W8, [X20 + 0x783]
	0x01E22EB4 ADRP X8, 0x22D1000
	0x01E22EB8 LDR X8, [X8 + 0x5A0]
	0x01E22EBC MOV W0, W31
	0x01E22EC0 LDR X8, [X8]
	0x01E22EC4 LDR X8, [X8 + 0xB8]
	0x01E22EC8 ADD X9, X8, 0x8
	0x01E22ECC LDR V0, [X8]
	0x01E22ED0 LDR V1, [X9]
	0x01E22ED4 STR D0, [X19]
	0x01E22ED8 STR S1, [X19 + 0x8]
	0x01E22EDC LDP X20, X19, [X31 + 0x10]
	0x01E22EE0 LDR X30, [X31], #0x20
	0x01E22EE4 RET
	0x01E22EE8 BL 0x1C16F28
	0x01E22EEC SUB X31, X31, 0x80
	0x01E22EF0 STR X30, [X31 + 0x40]
	0x01E22EF4 STP X24, X23, [X31 + 0x50]
	0x01E22EF8 STP X22, X21, [X31 + 0x60]
	0x01E22EFC STP X20, X19, [X31 + 0x70]
	0x01E22F00 ADRP X21, 0x25B6000
	0x01E22F04 LDRB W8, [X21 + 0xE38]
	0x01E22F08 MOV X20, X1
	0x01E22F0C MOV X19, X0
	0x01E22F10 TBNZ X8, 0x0, 0x1E22F64
	0x01E22F14 ADRP X0, 0x22D8000
	0x01E22F18 LDR X0, [X0 + 0x800]
	0x01E22F1C BL 0x1C16CF4
	0x01E22F20 ADRP X0, 0x22D8000
	0x01E22F24 LDR X0, [X0 + 0x808]
	0x01E22F28 BL 0x1C16CF4
	0x01E22F2C ADRP X0, 0x22D8000
	0x01E22F30 LDR X0, [X0 + 0x810]
	0x01E22F34 BL 0x1C16CF4
	0x01E22F38 ADRP X0, 0x22D8000
	0x01E22F3C LDR X0, [X0 + 0x818]
	0x01E22F40 BL 0x1C16CF4
	0x01E22F44 ADRP X0, 0x22D8000
	0x01E22F48 LDR X0, [X0 + 0x820]
	0x01E22F4C BL 0x1C16CF4
	0x01E22F50 ADRP X0, 0x22D1000
	0x01E22F54 LDR X0, [X0 + 0x598]
	0x01E22F58 BL 0x1C16CF4
	0x01E22F5C MOVZ W8, 0x1
	0x01E22F60 STRB W8, [X21 + 0xE38]
	0x01E22F64 STP X31, X31, [X31 + 0x20]
	0x01E22F68 STR X31, [X31 + 0x30]
	0x01E22F6C LDR X8, [X20]
	0x01E22F70 CBZ X8, 0x1E230B0
	0x01E22F74 LDR X0, [X8 + 0x48]
	0x01E22F78 CBZ X0, 0x1E230B0
	0x01E22F7C ADRP X8, 0x22D8000
	0x01E22F80 LDR X8, [X8 + 0x820]
	0x01E22F84 ADRP X22, 0x22D8000
	0x01E22F88 ADRP X23, 0x22D1000
	0x01E22F8C ADRP X24, 0x22D8000
	0x01E22F90 LDR X1, [X8]
	0x01E22F94 LDR X22, [X22 + 0x808]
	0x01E22F98 LDR X23, [X23 + 0x598]
	0x01E22F9C LDR X24, [X24 + 0x800]
	0x01E22FA0 ADD X8, X31, 0x8
	0x01E22FA4 BL 0x301CB58
	0x01E22FA8 LDUR V0, [X31 + 0x8]
	0x01E22FAC LDR X8, [X31 + 0x18]
	0x01E22FB0 STR V0, [X31 + 0x2]
	0x01E22FB4 STR X8, [X31 + 0x30]
	0x01E22FB8 LDR X1, [X22]
	0x01E22FBC ADD X0, X31, 0x20
	0x01E22FC0 BL 0x2BC4350
	0x01E22FC4 TBZ X0, 0x0, 0x1E22FEC
	0x01E22FC8 LDR X0, [X23]
	0x01E22FCC LDR X21, [X31 + 0x30]
	0x01E22FD0 LDR W8, [X0 + 0xE0]
	0x01E22FD4 CBNZ W8, 0x1E22FDC
	0x01E22FD8 BL 0x1C16DFC
	0x01E22FDC MOV X0, X21
	0x01E22FE0 MOV X1, X31
	0x01E22FE4 BL 0x3C394A8
	0x01E22FE8 B 0x1E22FB8
	0x01E22FEC LDR X1, [X24]
	0x01E22FF0 ADD X0, X31, 0x20
	0x01E22FF4 BL 0x2BC434C
	0x01E22FF8 LDR X8, [X20]
	0x01E22FFC CBZ X8, 0x1E230B0
	0x01E23000 LDR X8, [X8 + 0x48]
	0x01E23004 CBZ X8, 0x1E230B0
	0x01E23008 LDP W2, W9, [X8 + 0x18]
	0x01E2300C ADD W9, W9, 0x1
	0x01E23010 CMP W2, 0x1
	0x01E23014 STP W31, W9, [X8 + 0x18]
	0x01E23018 B.LT 0x1E2302C
	0x01E2301C LDR X0, [X8 + 0x10]
	0x01E23020 MOV W1, W31
	0x01E23024 MOV X3, X31
	0x01E23028 BL 0x339FA34
	0x01E2302C LDR W8, [X20 + 0x8]
	0x01E23030 CMP W8, 0x8
	0x01E23034 B.NE 0x1E23098
	0x01E23038 LDR X0, [X23]
	0x01E2303C LDR X20, [X19 + 0x78]
	0x01E23040 LDR W8, [X0 + 0xE0]
	0x01E23044 CBNZ W8, 0x1E2304C
	0x01E23048 BL 0x1C16DFC
	0x01E2304C MOV X0, X20
	0x01E23050 MOV X1, X31
	0x01E23054 MOV X2, X31
	0x01E23058 BL 0x3C354F8
	0x01E2305C TBZ X0, 0x0, 0x1E23098
	0x01E23060 LDR X0, [X19 + 0x78]
	0x01E23064 CBZ X0, 0x1E230B0
	0x01E23068 MOV X1, X31
	0x01E2306C BL 0x3C32ECC
	0x01E23070 LDR X8, [X23]
	0x01E23074 MOV X20, X0
	0x01E23078 LDR W9, [X8 + 0xE0]
	0x01E2307C CBNZ W9, 0x1E23088
	0x01E23080 MOV X0, X8
	0x01E23084 BL 0x1C16DFC
	0x01E23088 MOV X0, X20
	0x01E2308C MOV X1, X31
	0x01E23090 BL 0x3C394A8
	0x01E23094 STR X31, [X19 + 0x78]
	0x01E23098 LDP X20, X19, [X31 + 0x70]
	0x01E2309C LDP X22, X21, [X31 + 0x60]
	0x01E230A0 LDP X24, X23, [X31 + 0x50]
	0x01E230A4 LDR X30, [X31 + 0x40]
	0x01E230A8 ADD X31, X31, 0x80
	0x01E230AC RET
	0x01E230B0 BL 0x1C16F20
	0x01E230B4 B 0x1E230B8
	0x01E230B8 MOV X22, X0
	0x01E230BC CMP W1, 0x1
	0x01E230C0 B.NE 0x1E230EC
	0x01E230C4 MOV X0, X22
	0x01E230C8 BL 0x3EB1AD0
	0x01E230CC LDR X21, [X0]
	0x01E230D0 BL 0x3EB1AE0
	0x01E230D4 LDR X1, [X24]
	0x01E230D8 ADD X0, X31, 0x20
	0x01E230DC BL 0x2BC434C
	0x01E230E0 CBZ X21, 0x1E22FF8
	0x01E230E4 MOV X0, X21
	0x01E230E8 BL 0x1C16F18
	0x01E230EC MOV X21, X31
	0x01E230F0 B 0x1E230F8
	0x01E230F4 MOV X22, X0
	0x01E230F8 LDR X1, [X24]
	0x01E230FC ADD X0, X31, 0x20
	0x01E23100 BL 0x2BC434C
	0x01E23104 CBNZ X21, 0x1E23110
	0x01E23108 MOV X0, X22
	0x01E2310C BL 0x1D2C690
	0x01E23110 MOV X0, X21
	0x01E23114 BL 0x1C16F18
	0x01E23118 BL 0x1990590
	0x01E2311C STR X30, [X31 - 0x40]!
	0x01E23120 STP X24, X23, [X31 + 0x10]
	0x01E23124 STP X22, X21, [X31 + 0x20]
	0x01E23128 STP X20, X19, [X31 + 0x30]
	0x01E2312C ADRP X24, 0x25B5000
	0x01E23130 ADRP X23, 0x22D7000
	0x01E23134 LDRB W8, [X24 + 0xE31]
	0x01E23138 LDR X23, [X23 + 0x4F0]
	0x01E2313C MOV X21, X3
	0x01E23140 MOV W19, W2
	0x01E23144 MOV X22, X1
	0x01E23148 MOV X20, X0
	0x01E2314C TBNZ X8, 0x0, 0x1E2317C
	0x01E23150 ADRP X0, 0x22D7000
	0x01E23154 LDR X0, [X0 + 0x4F0]
	0x01E23158 BL 0x1C16CF4
	0x01E2315C ADRP X0, 0x22D7000
	0x01E23160 LDR X0, [X0 + 0x868]
	0x01E23164 BL 0x1C16CF4
	0x01E23168 ADRP X0, 0x22D0000
	0x01E2316C LDR X0, [X0 + 0x598]
	0x01E23170 BL 0x1C16CF4
	0x01E23174 MOVZ W8, 0x1
	0x01E23178 STRB W8, [X24 + 0xE31]
	0x01E2317C LDR X0, [X23]
	0x01E23180 STR X31, [X31 + 0x8]
	0x01E23184 LDR W8, [X0 + 0xE0]
	0x01E23188 CBNZ W8, 0x1E23194
	0x01E2318C BL 0x1C16DFC
	0x01E23190 LDR X0, [X23]
	0x01E23194 LDR X8, [X0 + 0xB8]
	0x01E23198 LDR X0, [X8 + 0x20]
	0x01E2319C CBZ X0, 0x1E232F0
	0x01E231A0 ADRP X8, 0x22D7000
	0x01E231A4 LDR X8, [X8 + 0x868]
	0x01E231A8 ADD X2, X31, 0x8
	0x01E231AC MOV W1, W19
	0x01E231B0 LDR X3, [X8]
	0x01E231B4 BL 0x2A46818
	0x01E231B8 TBZ X0, 0x0, 0x1E23320
	0x01E231BC ADRP X8, 0x22D0000
	0x01E231C0 LDR X8, [X8 + 0x598]
	0x01E231C4 LDR X0, [X8]
	0x01E231C8 LDR W8, [X0 + 0xE0]
	0x01E231CC CBNZ W8, 0x1E231D4
	0x01E231D0 BL 0x1C16DFC
	0x01E231D4 MOV X0, X21
	0x01E231D8 MOV X1, X31
	0x01E231DC MOV X2, X31
	0x01E231E0 BL 0x3C3883C
	0x01E231E4 LDR X8, [X31 + 0x8]
	0x01E231E8 TBZ X0, 0x0, 0x1E23264
	0x01E231EC CBZ X8, 0x1E232F0
	0x01E231F0 MOV X9, X31
	0x01E231F4 MOVZ W10, 0xC
	0x01E231F8 LDR W11, [X8 + 0x18]
	0x01E231FC CMP W9, W11
	0x01E23200 B.GE 0x1E23304
	0x01E23204 CMP W9, W11
	0x01E23208 B.CS 0x1E23334
	0x01E2320C CBZ X22, 0x1E232F0
	0x01E23210 ADD X8, X8, X9, 0x2, LSL
	0x01E23214 LDRSW X8, [X8 + 0x20]
	0x01E23218 LDR W11, [X22 + 0x18]
	0x01E2321C CMP W8, W11
	0x01E23220 B.CS 0x1E23334
	0x01E23224 LDR X11, [X20 + 0x58]
	0x01E23228 CBZ X11, 0x1E232F0
	0x01E2322C LDR W12, [X11 + 0x18]
	0x01E23230 CMP W8, W12
	0x01E23234 B.CS 0x1E23334
	0x01E23238 MADD X12, X8, X10, X22
	0x01E2323C LDR V0, [X12 + 0x20]
	0x01E23240 LDR V1, [X12 + 0x28]
	0x01E23244 NOP
	0x01E23248 MADD X8, X8, X10, X11
	0x01E2324C ADD X9, X9, 0x1
	0x01E23250 STR D0, [X8 + 0x20]
	0x01E23254 STR S1, [X8 + 0x28]
	0x01E23258 LDR X8, [X31 + 0x8]
	0x01E2325C CBNZ X8, 0x1E231F8
	0x01E23260 B 0x1E232F0
	0x01E23264 CBZ X8, 0x1E232F0
	0x01E23268 MOV X9, X31
	0x01E2326C MOV X11, X31
	0x01E23270 MOVZ W10, 0xC
	0x01E23274 LDR W12, [X8 + 0x18]
	0x01E23278 CMP W11, W12
	0x01E2327C B.GE 0x1E232F4
	0x01E23280 CMP W11, W12
	0x01E23284 B.CS 0x1E23334
	0x01E23288 CBZ X21, 0x1E232F0
	0x01E2328C LDR X13, [X21 + 0x58]
	0x01E23290 CBZ X13, 0x1E232F0
	0x01E23294 LDR W14, [X13 + 0x18]
	0x01E23298 ADD X12, X11, 0x1
	0x01E2329C SUB W15, W12, 0x1
	0x01E232A0 CMP W15, W14
	0x01E232A4 B.CS 0x1E23334
	0x01E232A8 LDR X14, [X20 + 0x58]
	0x01E232AC CBZ X14, 0x1E232F0
	0x01E232B0 ADD X8, X8, X11, 0x2, LSL
	0x01E232B4 LDRSW X8, [X8 + 0x20]
	0x01E232B8 LDR W11, [X14 + 0x18]
	0x01E232BC CMP W8, W11
	0x01E232C0 B.CS 0x1E23334
	0x01E232C4 ADD X11, X13, X9
	0x01E232C8 LDR V0, [X11 + 0x20]
	0x01E232CC LDR V1, [X11 + 0x28]
	0x01E232D0 NOP
	0x01E232D4 MADD X8, X8, X10, X14
	0x01E232D8 ADD X9, X9, 0xC
	0x01E232DC STR D0, [X8 + 0x20]
	0x01E232E0 STR S1, [X8 + 0x28]
	0x01E232E4 LDR X8, [X31 + 0x8]
	0x01E232E8 MOV X11, X12
	0x01E232EC CBNZ X8, 0x1E23274
	0x01E232F0 BL 0x1C16F20
	0x01E232F4 MOV X0, X20
	0x01E232F8 MOV W1, W19
	0x01E232FC MOV X2, X21
	0x01E23300 BL 0x1E23338
	0x01E23304 LDR X8, [X20 + 0x98]
	0x01E23308 CBZ X8, 0x1E23320
	0x01E2330C LDR X9, [X8 + 0x18]
	0x01E23310 LDR X0, [X8 + 0x40]
	0x01E23314 LDR X2, [X8 + 0x28]
	0x01E23318 MOV W1, W19
	0x01E2331C BLR X9
	0x01E23320 LDP X20, X19, [X31 + 0x30]
	0x01E23324 LDP X22, X21, [X31 + 0x20]
	0x01E23328 LDP X24, X23, [X31 + 0x10]
	0x01E2332C LDR X30, [X31], #0x40
	0x01E23330 RET
	0x01E23334 BL 0x1C16F28
	0x01E23338 STR X30, [X31 - 0x40]!
	0x01E2333C STP X24, X23, [X31 + 0x10]
	0x01E23340 STP X22, X21, [X31 + 0x20]
	0x01E23344 STP X20, X19, [X31 + 0x30]
	0x01E23348 ADRP X23, 0x25B5000
	0x01E2334C ADRP X21, 0x22D7000
	0x01E23350 LDRB W8, [X23 + 0xE32]
	0x01E23354 LDR X21, [X21 + 0x4F0]
	0x01E23358 MOV X19, X2
	0x01E2335C MOV W22, W1
	0x01E23360 MOV X20, X0
	0x01E23364 TBNZ X8, 0x0, 0x1E23394
	0x01E23368 ADRP X0, 0x22D7000
	0x01E2336C LDR X0, [X0 + 0x4F0]
	0x01E23370 BL 0x1C16CF4
	0x01E23374 ADRP X0, 0x22D7000
	0x01E23378 LDR X0, [X0 + 0x868]
	0x01E2337C BL 0x1C16CF4
	0x01E23380 ADRP X0, 0x22D7000
	0x01E23384 LDR X0, [X0 + 0x870]
	0x01E23388 BL 0x1C16CF4
	0x01E2338C MOVZ W8, 0x1
	0x01E23390 STRB W8, [X23 + 0xE32]
	0x01E23394 LDR X0, [X21]
	0x01E23398 STR X31, [X31 + 0x8]
	0x01E2339C LDR W8, [X0 + 0xE0]
	0x01E233A0 CBNZ W8, 0x1E233AC
	0x01E233A4 BL 0x1C16DFC
	0x01E233A8 LDR X0, [X21]
	0x01E233AC LDR X8, [X0 + 0xB8]
	0x01E233B0 LDR X0, [X8 + 0x28]
	0x01E233B4 CBZ X0, 0x1E2353C
	0x01E233B8 ADRP X8, 0x22D7000
	0x01E233BC LDR X8, [X8 + 0x868]
	0x01E233C0 ADD X2, X31, 0x8
	0x01E233C4 MOV W1, W22
	0x01E233C8 LDR X3, [X8]
	0x01E233CC BL 0x2A46818
	0x01E233D0 TBZ X0, 0x0, 0x1E23540
	0x01E233D4 LDR X8, [X20 + 0x68]
	0x01E233D8 CBZ X8, 0x1E2353C
	0x01E233DC LDR W9, [X8 + 0x18]
	0x01E233E0 CMP W9, 0x3
	0x01E233E4 B.LS 0x1E23554

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+80], D15
	003 Move [X31+88], D14
	004 Move [X31+96], D13
	005 Move [X31+104], D12
	006 Move [X31+112], D11
	007 Move [X31+120], D10
	008 Move [X31+128], D9
	009 Move [X31+136], D8
	010 Move [X31+144], X29
	011 Move [X31+152], X30
	012 Move [X31+160], X28
	013 Move [X31+168], X27
	014 Move [X31+176], X26
	015 Move [X31+184], X25
	016 Move [X31+192], X24
	017 Move [X31+200], X23
	018 Move [X31+208], X22
	019 Move [X31+216], X21
	020 Move [X31+224], X20
	021 Move [X31+232], X19
	022 Move X23, 0x25B7000
	023 Move W8, [X23+3631]
	024 Move X24, X4
	025 Move W22, W3
	026 Move X21, X2
	027 Move X19, X1
	028 Move X20, X0
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {86}
	033 Move X0, 0x22D9000
	034 Move X0, [X0+2040]
	035 Call 0x1C17CF4
	036 Move X0, 0x22D9000
	037 Move X0, [X0+2048]
	038 Call 0x1C17CF4
	039 Move X0, 0x22D9000
	040 Move X0, [X0+2056]
	041 Call 0x1C17CF4
	042 Move X0, 0x22D9000
	043 Move X0, [X0+2064]
	044 Call 0x1C17CF4
	045 Move X0, 0x22D9000
	046 Move X0, [X0+1776]
	047 Call 0x1C17CF4
	048 Move X0, 0x22D9000
	049 Move X0, [X0+1784]
	050 Call 0x1C17CF4
	051 Move X0, 0x22D9000
	052 Move X0, [X0+1912]
	053 Call 0x1C17CF4
	054 Move X0, 0x22D2000
	055 Move X0, [X0+2648]
	056 Call 0x1C17CF4
	057 Move X0, 0x22D9000
	058 Move X0, [X0+1944]
	059 Call 0x1C17CF4
	060 Move X0, 0x22D9000
	061 Move X0, [X0+2072]
	062 Call 0x1C17CF4
	063 Move X0, 0x22D9000
	064 Move X0, [X0+2080]
	065 Call 0x1C17CF4
	066 Move X0, 0x22D9000
	067 Move X0, [X0+1960]
	068 Call 0x1C17CF4
	069 Move X0, 0x22D3000
	070 Move X0, [X0+3640]
	071 Call 0x1C17CF4
	072 Move X0, 0x22D2000
	073 Move X0, [X0+1432]
	074 Call 0x1C17CF4
	075 Move X0, 0x22D9000
	076 Move X0, [X0+1800]
	077 Call 0x1C17CF4
	078 Move X0, 0x22D6000
	079 Move X0, [X0+272]
	080 Call 0x1C17CF4
	081 Move X0, 0x22D9000
	082 Move X0, [X0+2088]
	083 Call 0x1C17CF4
	084 Move W8, 1
	085 Move [X23+3631], W8
	086 Move [X31+48], X31
	087 Move [X31+56], X31
	088 Move [X31+64], X31
	089 Compare X19, 0
	090 JumpIfEqual {548}
	091 Move X27, 0x22D2000
	092 Move X27, [X27+1432]
	093 Move X23, [X19+32]
	094 Move X0, [X27]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X0, X21
	100 Move X1, X23
	101 Move X2, X31
	102 Call Object.op_Inequality, X0, X1
	103 Move X8, [X19+32]
	104 Move W23, W0
	105 Compare X8, 0
	106 JumpIfEqual {108}
	107 Move W8, [X8+32]
	108 Compare X21, 0
	109 JumpIfEqual {113}
	110 Move W9, [X21+32]
	111 Compare W8, 0
	112 JumpIfNotEqual {116}
	113 Move W9, W31
	114 Compare W8, 0
	115 JumpIfEqual {120}
	116 Compare W9, 0
	117 JumpIfNotEqual {120}
	118 Move W8, 1
	119 Move [X24], W8
	120 Move X0, [X27]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Move X0, X21
	126 Move X1, X31
	127 Move X2, X31
	128 Call Object.op_Equality, X0, X1
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfNotEqual {188}
	133 Move X0, [X27]
	134 Move X20, [X19+24]
	135 Move W8, [X0+224]
	136 Compare W8, 0
	137 JumpIfNotEqual {139}
	138 Call 0x1C17DFC
	139 Move X0, X20
	140 Move X1, X31
	141 Move X2, X31
	142 Call Object.op_Inequality, X0, X1
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfNotEqual {157}
	147 Move X0, [X27]
	148 Move X20, [X19+24]
	149 Move W8, [X0+224]
	150 Compare W8, 0
	151 JumpIfNotEqual {153}
	152 Call 0x1C17DFC
	153 Move X0, X20
	154 Move X1, X31
	155 Call Object.Destroy, X0
	156 Move [X19+24], X31
	157 Move X0, [X19+72]
	158 Move [X19+32], X31
	159 Compare X0, 0
	160 JumpIfEqual {548}
	161 Move X8, 0x22D9000
	162 Move X8, [X8+2080]
	163 Move X1, [X8]
	164 Add X8, X31, 24
	165 Call List`1<Object>.GetEnumerator, X0
	166 NotImplemented "Instruction LDUR not yet implemented."
	167 Move X8, [X31+40]
	168 Move X21, 0x22D9000
	169 Move [X31+3], V0
	170 Move [X31+64], X8
	171 Move X21, [X21+2056]
	172 Move X1, [X21]
	173 Add X0, X31, 48
	174 Call Enumerator<Object>.MoveNext, X0
	175 Move TEMP, X0
	176 And TEMP, TEMP, 1
	177 Compare TEMP, 1
	178 JumpIfNotEqual {319}
	179 Move X0, [X27]
	180 Move X20, [X31+64]
	181 Move W8, [X0+224]
	182 Compare W8, 0
	183 JumpIfNotEqual {185}
	184 Call 0x1C17DFC
	185 Move X0, X20
	186 Move X1, X31
	187 Call Object.Destroy, X0
	188 Move TEMP, X23
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfNotEqual {219}
	192 Move X0, [X27]
	193 Move X25, [X19+24]
	194 Move W8, [X0+224]
	195 Compare W8, 0
	196 JumpIfNotEqual {198}
	197 Call 0x1C17DFC
	198 Move X0, X25
	199 Move X1, X31
	200 Move X2, X31
	201 Call Object.op_Inequality, X0, X1
	202 Move TEMP, X0
	203 And TEMP, TEMP, 1
	204 Compare TEMP, 1
	205 JumpIfNotEqual {219}
	206 Move X0, [X27]
	207 Move X25, [X19+24]
	208 Move W8, [X0+224]
	209 Compare W8, 0
	210 JumpIfNotEqual {212}
	211 Call 0x1C17DFC
	212 Move X0, X25
	213 Move X1, X31
	214 Call Object.Destroy, X0
	215 Move [X19+24], X31
	216 Move [X19+56], X31
	217 Move [X19+64], X31
	218 Move [X19+48], X31
	219 Move [X19+32], X21
	220 Move X0, [X27]
	221 Move X25, [X19+24]
	222 Move W8, [X0+224]
	223 Compare W8, 0
	224 JumpIfNotEqual {226}
	225 Call 0x1C17DFC
	226 Move X0, X25
	227 Move X1, X31
	228 Move X2, X31
	229 Call Object.op_Equality, X0, X1
	230 Move TEMP, X0
	231 And TEMP, TEMP, 1
	232 Compare TEMP, 1
	233 JumpIfNotEqual {285}
	234 Move X9, 0x22D9000
	235 Move W8, [X19+16]
	236 Move X9, [X9+2040]
	237 Add X1, X31, 24
	238 Move [X31+24], W8
	239 Move X0, [X9]
	240 Call 0x1C17E04
	241 Move X8, 0x22D6000
	242 Move X8, [X8+272]
	243 Move X1, X0
	244 Move X2, X31
	245 Move X8, [X8]
	246 Move X0, X8
	247 Call String.Format, X0, X1
	248 Move X8, 0x22D2000
	249 Move X8, [X8+2648]
	250 Move X26, X0
	251 Move X8, [X8]
	252 Move X0, X8
	253 Call 0x1C17F10
	254 Move X1, X26
	255 Move X2, X31
	256 Move X25, X0
	257 Call GameObject..ctor, X0, X1
	258 Move [X19+24], X25
	259 Compare X25, 0
	260 JumpIfEqual {548}
	261 Move X0, X25
	262 Move X1, X31
	263 Call GameObject.get_transform, X0
	264 Move X25, X0
	265 Move X0, X20
	266 Move X1, X31
	267 Call Component.get_transform, X0
	268 Compare X25, 0
	269 JumpIfEqual {548}
	270 Move X1, X0
	271 Move X0, X25
	272 Move W2, W31
	273 Move X3, X31
	274 Call Transform.SetParent, X0, X1, X2
	275 Move X0, [X19+24]
	276 Compare X0, 0
	277 JumpIfEqual {548}
	278 Move W8, [X20+68]
	279 Move W9, 6
	280 Move X2, X31
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Move W8, 8
	283 NotImplemented "Instruction CSEL not yet implemented."
	284 Call GameObject.set_layer, X0, X1
	285 Move TEMP, X23
	286 And TEMP, TEMP, 1
	287 Compare TEMP, 1
	288 JumpIfNotEqual {355}
	289 Move X0, [X19+72]
	290 Compare X0, 0
	291 JumpIfEqual {548}
	292 Move X8, 0x22D9000
	293 Move X8, [X8+2080]
	294 Move X1, [X8]
	295 Add X8, X31, 24
	296 Call List`1<Object>.GetEnumerator, X0
	297 NotImplemented "Instruction LDUR not yet implemented."
	298 Move X8, [X31+40]
	299 Move X26, 0x22D9000
	300 Move [X31+3], V0
	301 Move [X31+64], X8
	302 Move X26, [X26+2056]
	303 Move X1, [X26]
	304 Add X0, X31, 48
	305 Call Enumerator<Object>.MoveNext, X0
	306 Move TEMP, X0
	307 And TEMP, TEMP, 1
	308 Compare TEMP, 1
	309 JumpIfNotEqual {337}
	310 Move X0, [X27]
	311 Move X25, [X31+64]
	312 Move W8, [X0+224]
	313 Compare W8, 0
	314 JumpIfNotEqual {316}
	315 Call 0x1C17DFC
	316 Move X0, X25
	317 Move X1, X31
	318 Call Object.Destroy, X0
	319 Move X8, 0x22D9000
	320 Move X8, [X8+2048]
	321 Add X0, X31, 48
	322 Move X1, [X8]
	323 Call Enumerator<Object>.Dispose, X0
	324 Move X8, [X19+72]
	325 Compare X8, 0
	326 JumpIfEqual {548}
	327 Move W2, [X8+24]
	328 Move W9, [X8+28]
	329 Add W9, W9, 1
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Move [X8+24], W31
	332 Move [X8+28], W9
	333 Move X0, [X8+16]
	334 Move W1, W31
	335 Move X3, X31
	336 Call Array.Clear, X0, X1, X2
	337 Move X8, 0x22D9000
	338 Move X8, [X8+2048]
	339 Add X0, X31, 48
	340 Move X1, [X8]
	341 Call Enumerator<Object>.Dispose, X0
	342 Move X8, [X19+72]
	343 Compare X8, 0
	344 JumpIfEqual {548}
	345 Move W2, [X8+24]
	346 Move W9, [X8+28]
	347 Add W9, W9, 1
	348 NotImplemented "Instruction CMP not yet implemented."
	349 Move [X8+24], W31
	350 Move [X8+28], W9
	351 Move X0, [X8+16]
	352 Move W1, W31
	353 Move X3, X31
	354 Call Array.Clear, X0, X1, X2
	355 Move X9, 0x22D9000
	356 Move X25, [X19+24]
	357 Move W8, [X19+16]
	358 Move X9, [X9+2040]
	359 Add X1, X31, 24
	360 Move [X31+24], W8
	361 Move X0, [X9]
	362 Call 0x1C17E04
	363 Compare X21, 0
	364 JumpIfEqual {548}
	365 Move X26, X0
	366 Move X0, X21
	367 Move X1, X31
	368 Call Object.get_name, X0
	369 Move X8, 0x22D9000
	370 Move X8, [X8+2088]
	371 Move X2, X0
	372 Move X1, X26
	373 Move X3, X31
	374 Move X8, [X8]
	375 Move X0, X8
	376 Call String.Format, X0, X1, X2
	377 Compare X25, 0
	378 JumpIfEqual {548}
	379 Move X1, X0
	380 Move X0, X25
	381 Move X2, X31
	382 Call Object.set_name, X0, X1
	383 Move X0, [X19+24]
	384 Compare X0, 0
	385 JumpIfEqual {548}
	386 Move X1, X31
	387 Call GameObject.get_transform, X0
	388 Compare X0, 0
	389 JumpIfEqual {548}
	390 Move S1, [X21+40]
	391 Move S2, [X21+44]
	392 Move V0, [X21+36]
	393 Move X1, X31
	394 Call Transform.set_localPosition, X0, X1
	395 Move X0, [X19+24]
	396 Compare X0, 0
	397 JumpIfEqual {548}
	398 Move X1, X31
	399 Call GameObject.get_transform, X0
	400 Compare X0, 0
	401 JumpIfEqual {548}
	402 Move S2, [X21+56]
	403 Move S3, [X21+60]
	404 Move S0, [X21+48]
	405 Move S1, [X21+52]
	406 Move X1, X31
	407 Call Transform.set_localRotation, X0, X1
	408 Move TEMP, X23
	409 And TEMP, TEMP, 1
	410 Compare TEMP, 1
	411 JumpIfNotEqual {444}
	412 Move X0, [X27]
	413 Move X25, [X21+72]
	414 Move W8, [X0+224]
	415 Compare W8, 0
	416 JumpIfNotEqual {418}
	417 Call 0x1C17DFC
	418 Move X8, 0x22D9000
	419 Move X8, [X8+1960]
	420 Move X0, X25
	421 Move X1, [X8]
	422 Call 0x222E35C, X0
	423 Move X8, [X19+72]
	424 Move [X19+40], X0
	425 Compare X8, 0
	426 JumpIfEqual {548}
	427 Move X26, 0x22D9000
	428 Move X26, [X26+1944]
	429 Move W11, [X8+28]
	430 Move X9, [X8+16]
	431 Move X10, [X26]
	432 Add W11, W11, 1
	433 Move [X8+28], W11
	434 Compare X9, 0
	435 JumpIfEqual {548}
	436 NotImplemented "Instruction LDRSW not yet implemented."
	437 Move W12, [X9+24]
	438 Move X1, X0
	439 NotImplemented "Instruction CMP not yet implemented."
	440 Add W10, W11, 1
	441 Add X9, X9, X11
	442 Move [X8+24], W10
	443 Move [X9+32], X1
	444 Move W8, [X21+32]
	445 Compare W8, 0
	446 JumpIfNotEqual {873}
	447 Move X9, [X10+32]
	448 Move X0, X8
	449 Move X9, [X9+192]
	450 Move X2, [X9+112]
	451 Call List`1<Object>.AddWithResize, X0, X1
	452 Move W8, [X21+32]
	453 Compare W8, 0
	454 JumpIfEqual {549}
	455 Move W8, 1
	456 Move [X24], W8
	457 Move X0, [X27]
	458 Move X24, [X19+56]
	459 Move W8, [X0+224]
	460 Compare W8, 0
	461 JumpIfNotEqual {463}
	462 Call 0x1C17DFC
	463 Move X0, X24
	464 Move X1, X31
	465 Move X2, X31
	466 Call Object.op_Inequality, X0, X1
	467 Move TEMP, X0
	468 And TEMP, TEMP, 1
	469 Compare TEMP, 1
	470 JumpIfNotEqual {485}
	471 Move X0, [X27]
	472 Move X24, [X19+56]
	473 Move W8, [X0+224]
	474 Compare W8, 0
	475 JumpIfNotEqual {477}
	476 Call 0x1C17DFC
	477 Move X0, X24
	478 Move X1, X31
	479 Call Object.Destroy, X0
	480 Move X0, [X19+48]
	481 Move X1, X31
	482 Move [X19+56], X31
	483 Call Object.Destroy, X0
	484 Move [X19+48], X31
	485 Move X0, [X27]
	486 Move X24, [X19+64]
	487 Move W8, [X0+224]
	488 Compare W8, 0
	489 JumpIfNotEqual {491}
	490 Call 0x1C17DFC
	491 Move X0, X24
	492 Move X1, X31
	493 Move X2, X31
	494 Call Object.op_Equality, X0, X1
	495 Move TEMP, X0
	496 And TEMP, TEMP, 1
	497 Compare TEMP, 1
	498 JumpIfNotEqual {821}
	499 Move X0, [X19+24]
	500 Compare X0, 0
	501 JumpIfEqual {548}
	502 Move X8, 0x22D9000
	503 Move X8, [X8+1912]
	504 Move X1, [X8]
	505 Call 0x21E61FC, X0
	506 Move [X19+64], X0
	507 Move X8, [X21+104]
	508 Compare X8, 0
	509 JumpIfEqual {548}
	510 Move X9, 0x22D9000
	511 Move X9, [X9+1800]
	512 Move W1, [X8+24]
	513 Move X0, [X9]
	514 Call 0x1C17D6C
	515 Move X8, [X21+104]
	516 Compare X8, 0
	517 JumpIfEqual {548}
	518 Move X24, X0
	519 Move X28, X31
	520 Add X29, X0, 32
	521 Move W9, [X8+24]
	522 NotImplemented "Instruction CMP not yet implemented."
	523 NotImplemented "Instruction CMP not yet implemented."
	524 Move X0, [X20+40]
	525 Compare X0, 0
	526 JumpIfEqual {548}
	527 Add X8, X8, X28
	528 Move W1, [X8+32]
	529 Call AvatarArmature.GetBone, X0, X1
	530 Compare X24, 0
	531 JumpIfEqual {548}
	532 Move X25, X0
	533 Compare X0, 0
	534 JumpIfEqual {541}
	535 Move X8, [X24]
	536 Move X0, X25
	537 Move X1, [X8+64]
	538 Call 0x1C17E00
	539 Compare X0, 0
	540 JumpIfEqual {941}
	541 Move W8, [X24+24]
	542 NotImplemented "Instruction CMP not yet implemented."
	543 Move [X29], X25
	544 Move X8, [X21+104]
	545 Add X28, X28, 1
	546 Compare X8, 0
	547 JumpIfNotEqual {521}
	548 Call 0x1C17F20
	549 Move X0, [X27]
	550 Move X22, [X19+64]
	551 Move W8, [X0+224]
	552 Compare W8, 0
	553 JumpIfNotEqual {555}
	554 Call 0x1C17DFC
	555 Move X0, X22
	556 Move X1, X31
	557 Move X2, X31
	558 Call Object.op_Inequality, X0, X1
	559 Move TEMP, X0
	560 And TEMP, TEMP, 1
	561 Compare TEMP, 1
	562 JumpIfNotEqual {573}
	563 Move X0, [X27]
	564 Move X22, [X19+64]
	565 Move W8, [X0+224]
	566 Compare W8, 0
	567 JumpIfNotEqual {569}
	568 Call 0x1C17DFC
	569 Move X0, X22
	570 Move X1, X31
	571 Call Object.Destroy, X0
	572 Move [X19+64], X31
	573 Move X0, [X27]
	574 Move X22, [X19+56]
	575 Move W8, [X0+224]
	576 Compare W8, 0
	577 JumpIfNotEqual {579}
	578 Call 0x1C17DFC
	579 Move X0, X22
	580 Move X1, X31
	581 Move X2, X31
	582 Call Object.op_Equality, X0, X1
	583 Move TEMP, X0
	584 And TEMP, TEMP, 1
	585 Compare TEMP, 1
	586 JumpIfNotEqual {604}
	587 Move X0, [X19+24]
	588 Compare X0, 0
	589 JumpIfEqual {548}
	590 Move X8, 0x22D9000
	591 Move X8, [X8+1776]
	592 Move X1, [X8]
	593 Call 0x21E61FC, X0
	594 Move X8, [X19+24]
	595 Move [X19+48], X0
	596 Compare X8, 0
	597 JumpIfEqual {548}
	598 Move X9, 0x22D9000
	599 Move X9, [X9+1784]
	600 Move X0, X8
	601 Move X1, [X9]
	602 Call 0x21E61FC, X0
	603 Move [X19+56], X0
	604 Move X0, [X19+56]
	605 Compare X0, 0
	606 JumpIfEqual {548}
	607 Move X1, [X19+40]
	608 Move X2, X31
	609 Call Renderer.set_sharedMaterial, X0, X1
	610 Move X0, [X19+48]
	611 Compare X0, 0
	612 JumpIfEqual {548}
	613 Move X1, [X21+64]
	614 Move X2, X31
	615 Call MeshFilter.set_sharedMesh, X0, X1
	616 Move X8, [X21+80]
	617 Compare X8, 0
	618 JumpIfEqual {548}
	619 Move X9, [X20+96]
	620 Compare X9, 0
	621 JumpIfEqual {548}
	622 Move W10, [X8+24]
	623 Move W11, [X9+24]
	624 Subtract W10, W10, 1
	625 NotImplemented "Instruction CMP not yet implemented."
	626 Add X9, X9, W10
	627 Move X0, [X9+32]
	628 Compare X0, 0
	629 JumpIfEqual {548}
	630 Move S11, [X8+28]
	631 Move S12, [X8+32]
	632 Move V13, [X8+36]
	633 Move X1, X31
	634 Call Transform.get_localPosition, X0
	635 Move X0, [X19+24]
	636 Compare X0, 0
	637 JumpIfEqual {548}
	638 Move X1, X31
	639 Move V8, V0
	640 Move V9, V1
	641 Move V10, V2
	642 Call GameObject.get_transform, X0
	643 Compare X0, 0
	644 JumpIfEqual {548}
	645 Move X1, X31
	646 Move X22, X0
	647 Call Transform.get_localPosition, X0
	648 Subtract S3, S8, S11
	649 Subtract S4, S9, S12
	650 Subtract S5, S10, S13
	651 Add S0, S3, S0
	652 Add S1, S4, S1
	653 Add S2, S5, S2
	654 Move X0, X22
	655 Move X1, X31
	656 Call Transform.set_localPosition, X0, X1
	657 Move X0, X20
	658 Move X1, X31
	659 Call Component.get_transform, X0
	660 Compare X0, 0
	661 JumpIfEqual {548}
	662 Move X1, X31
	663 Call Transform.get_rotation, X0
	664 Move X8, [X21+80]
	665 Compare X8, 0
	666 JumpIfEqual {548}
	667 Move X9, [X20+96]
	668 Compare X9, 0
	669 JumpIfEqual {548}
	670 Move W10, [X8+24]
	671 Move W11, [X9+24]
	672 Subtract W10, W10, 1
	673 NotImplemented "Instruction CMP not yet implemented."
	674 Add X9, X9, W10
	675 Move X0, [X9+32]
	676 Compare X0, 0
	677 JumpIfEqual {548}
	678 Move S10, [X8+40]
	679 Move S9, [X8+44]
	680 Move S8, [X8+48]
	681 Move S11, [X8+52]
	682 Move X1, X31
	683 Move V14, V0
	684 Move V13, V1
	685 Move V12, V2
	686 Move V15, V3
	687 Call Transform.get_rotation, X0
	688 Move X0, [X19+24]
	689 Move [X31+12], S0
	690 Move [X31+20], S1
	691 Move [X31+20], S2
	692 Move [X31+8], S3
	693 Compare X0, 0
	694 JumpIfEqual {548}
	695 Move X1, X31
	696 Call GameObject.get_transform, X0
	697 Compare X0, 0
	698 JumpIfEqual {548}
	699 Multiply S0, S15, S10
	700 Multiply S1, S14, S11
	701 Multiply S4, S15, S9
	702 Multiply S5, S13, S11
	703 Multiply S17, S14, S10
	704 Multiply S20, S15, S8
	705 Multiply S21, S15, S11
	706 Multiply S22, S12, S11
	707 Multiply S2, S13, S8
	708 Multiply S6, S12, S10
	709 Multiply S16, S14, S9
	710 Multiply S19, S13, S9
	711 Add S0, S0, S1
	712 Add S1, S4, S5
	713 Add S4, S20, S22
	714 Subtract S5, S21, S17
	715 Multiply S3, S12, S9
	716 Multiply S7, S14, S8
	717 Multiply S18, S13, S10
	718 Multiply S23, S12, S8
	719 Add S0, S2, S0
	720 Add S1, S6, S1
	721 Add S2, S16, S4
	722 Subtract S4, S5, S19
	723 Move X1, X31
	724 Move X19, X0
	725 Subtract S15, S0, S3
	726 Subtract S8, S1, S7
	727 Subtract S9, S2, S18
	728 Subtract S10, S4, S23
	729 Call Transform.get_rotation, X0
	730 Move V11, V0
	731 Move V13, V1
	732 Move V12, V2
	733 Move V14, V3
	734 Move V0, V15
	735 Move V1, V8
	736 Move V2, V9
	737 Move V3, V10
	738 Move X0, X31
	739 Call Quaternion.Inverse, X0
	740 Move S23, [X31+8]
	741 Move S21, [X31+12]
	742 Move S22, [X31+16]
	743 Move S24, [X31+20]
	744 Move X0, X19
	745 Move X1, X31
	746 Multiply S4, S21, S3
	747 Multiply S5, S23, S0
	748 Multiply S6, S24, S1
	749 Multiply S7, S22, S2
	750 Multiply S16, S22, S3
	751 Multiply S17, S23, S1
	752 Multiply S18, S21, S2
	753 Multiply S19, S24, S0
	754 Multiply S20, S22, S0
	755 Multiply S0, S21, S0
	756 Multiply S21, S21, S1
	757 Multiply S1, S22, S1
	758 Multiply S22, S24, S3
	759 Multiply S3, S23, S3
	760 Multiply S23, S23, S2
	761 Add S4, S4, S5
	762 Add S5, S16, S17
	763 Add S16, S22, S23
	764 Subtract S0, S3, S0
	765 Multiply S2, S24, S2
	766 Add S3, S6, S4
	767 Add S4, S18, S5
	768 Add S5, S20, S16
	769 Subtract S0, S0, S1
	770 Subtract S1, S3, S7
	771 Subtract S3, S4, S19
	772 Subtract S4, S5, S21
	773 Subtract S0, S0, S2
	774 Multiply S2, S14, S1
	775 Multiply S5, S11, S0
	776 Multiply S7, S12, S3
	777 Multiply S16, S14, S3
	778 Multiply S17, S13, S0
	779 Multiply S18, S12, S1
	780 Multiply S20, S11, S3
	781 Multiply S21, S11, S1
	782 Multiply S22, S13, S1
	783 Multiply S1, S13, S3
	784 Multiply S3, S14, S4
	785 Multiply S23, S14, S0
	786 Multiply S0, S12, S0
	787 Multiply S6, S13, S4
	788 Add S2, S2, S5
	789 Add S5, S16, S17
	790 Add S0, S3, S0
	791 Subtract S3, S23, S21
	792 Multiply S19, S11, S4
	793 Multiply S4, S12, S4
	794 Add S2, S6, S2
	795 Add S5, S18, S5
	796 Add S6, S20, S0
	797 Subtract S3, S3, S1
	798 Subtract S0, S2, S7
	799 Subtract S1, S5, S19
	800 Subtract S2, S6, S22
	801 Subtract S3, S3, S4
	802 Call Transform.set_rotation, X0, X1
	803 Move X0, [X19+64]
	804 Compare X0, 0
	805 JumpIfEqual {548}
	806 Move X1, X24
	807 Move X2, X31
	808 Call SkinnedMeshRenderer.set_bones, X0, X1
	809 Move X0, [X20+40]
	810 Compare X0, 0
	811 JumpIfEqual {548}
	812 Move X24, [X19+64]
	813 Move W1, 1
	814 Call AvatarArmature.GetBone, X0, X1
	815 Compare X24, 0
	816 JumpIfEqual {548}
	817 Move X1, X0
	818 Move X0, X24
	819 Move X2, X31
	820 Call SkinnedMeshRenderer.set_rootBone, X0, X1
	821 Move X0, [X19+64]
	822 Compare X0, 0
	823 JumpIfEqual {548}
	824 Move X1, [X19+40]
	825 Move X2, X31
	826 Call Renderer.set_sharedMaterial, X0, X1
	827 Move X0, [X27]
	828 Move X24, [X19+64]
	829 Move X25, [X21+64]
	830 Move W8, [X0+224]
	831 Compare W8, 0
	832 JumpIfNotEqual {834}
	833 Call 0x1C17DFC
	834 Move X8, 0x22D2000
	835 Move X8, [X8+3640]
	836 Move X0, X25
	837 Move X1, [X8]
	838 Call 0x222E35C, X0
	839 Compare X24, 0
	840 JumpIfEqual {548}
	841 Move X1, X0
	842 Move X0, X24
	843 Move X2, X31
	844 Call SkinnedMeshRenderer.set_sharedMesh, X0, X1
	845 Move X0, [X19+64]
	846 Compare X0, 0
	847 JumpIfEqual {548}
	848 Move X24, [X19+72]
	849 Move X1, X31
	850 Call SkinnedMeshRenderer.get_sharedMesh, X0
	851 Compare X24, 0
	852 JumpIfEqual {548}
	853 Move W10, [X24+28]
	854 Move X8, [X24+16]
	855 Move X9, [X26]
	856 Add W10, W10, 1
	857 Move [X24+28], W10
	858 Compare X8, 0
	859 JumpIfEqual {548}
	860 NotImplemented "Instruction LDRSW not yet implemented."
	861 Move W11, [X8+24]
	862 Move X1, X0
	863 NotImplemented "Instruction CMP not yet implemented."
	864 Add W9, W10, 1
	865 Add X8, X8, X10
	866 Move [X24+24], W9
	867 Move [X8+32], X1
	868 Move X8, [X9+32]
	869 Move X0, X24
	870 Move X8, [X8+192]
	871 Move X2, [X8+112]
	872 Call List`1<Object>.AddWithResize, X0, X1
	873 Or W8, W23, W22
	874 Move TEMP, X8
	875 And TEMP, TEMP, 1
	876 Compare TEMP, 1
	877 JumpIfNotEqual {918}
	878 Move X0, [X19+64]
	879 Compare X0, 0
	880 JumpIfEqual {548}
	881 Move X1, X31
	882 Call SkinnedMeshRenderer.get_sharedMesh, X0
	883 Move X8, [X21+64]
	884 Compare X8, 0
	885 JumpIfEqual {548}
	886 Move X22, X0
	887 Move X0, X8
	888 Move X1, X31
	889 Call Mesh.get_vertices, X0
	890 Compare X22, 0
	891 JumpIfEqual {548}
	892 Move X1, X0
	893 Move X0, X22
	894 Move X2, X31
	895 Call Mesh.set_vertices, X0, X1
	896 Move X9, [X21+88]
	897 Compare X9, 0
	898 JumpIfEqual {548}
	899 Move X8, [X20+32]
	900 Compare X8, 0
	901 JumpIfEqual {548}
	902 Move X0, [X19+64]
	903 Compare X0, 0
	904 JumpIfEqual {548}
	905 Move X19, [X21+96]
	906 Move X21, [X9+32]
	907 Move X20, [X20+88]
	908 Move X22, [X8+32]
	909 Move X1, X31
	910 Call SkinnedMeshRenderer.get_sharedMesh, X0
	911 Move X4, X0
	912 Move X0, X19
	913 Move X1, X21
	914 Move X2, X20
	915 Move X3, X22
	916 Move X5, X31
	917 Call GarmentRefit.Refit, X0, X1, X2, X3, X4
	918 Move X20, [X31+224]
	919 Move X19, [X31+232]
	920 Move X22, [X31+208]
	921 Move X21, [X31+216]
	922 Move X24, [X31+192]
	923 Move X23, [X31+200]
	924 Move X26, [X31+176]
	925 Move X25, [X31+184]
	926 Move X28, [X31+160]
	927 Move X27, [X31+168]
	928 Move X29, [X31+144]
	929 Move X30, [X31+152]
	930 Move D9, [X31+128]
	931 Move D8, [X31+136]
	932 Move D11, [X31+112]
	933 Move D10, [X31+120]
	934 Move D13, [X31+96]
	935 Move D12, [X31+104]
	936 Move D15, [X31+80]
	937 Move D14, [X31+88]
	938 Add X31, X31, 240
	939 Return 
	940 Call 0x1C17F28
	941 Call 0x1C17F44
	942 Move X1, X31
	943 Call 0x1C17DEC
	944 Move X25, X0
	945 NotImplemented "Instruction CMP not yet implemented."
	946 Move X0, X25
	947 Call 0x3EB2AD0
	948 Move X26, [X0]
	949 Call 0x3EB2AE0
	950 Move X8, 0x22D8000
	951 Move X8, [X8+2048]
	952 Add X0, X31, 48
	953 Move X1, [X8]
	954 Call Enumerator<Object>.Dispose, X0
	955 Compare X26, 0
	956 JumpIfEqual {342}
	957 Move X0, X26
	958 Call 0x1C17F18
	959 Move X26, X31
	960 Move X25, X0
	961 Move X8, 0x22D8000
	962 Move X8, [X8+2048]
	963 Move X1, [X8]
	964 Add X0, X31, 48
	965 Call Enumerator<Object>.Dispose, X0
	966 Compare X26, 0
	967 JumpIfEqual {994}
	968 Move X0, X26
	969 Call 0x1C17F18
	970 Move X25, X0
	971 NotImplemented "Instruction CMP not yet implemented."
	972 Move X0, X25
	973 Call 0x3EB2AD0
	974 Move X20, [X0]
	975 Call 0x3EB2AE0
	976 Move X8, 0x22D8000
	977 Move X8, [X8+2048]
	978 Add X0, X31, 48
	979 Move X1, [X8]
	980 Call Enumerator<Object>.Dispose, X0
	981 Compare X20, 0
	982 JumpIfEqual {324}
	983 Move X0, X20
	984 Call 0x1C17F18
	985 Move X20, X31
	986 Move X25, X0
	987 Move X8, 0x22D8000
	988 Move X8, [X8+2048]
	989 Move X1, [X8]
	990 Add X0, X31, 48
	991 Call Enumerator<Object>.Dispose, X0
	992 Compare X20, 0
	993 JumpIfNotEqual {996}
	994 Move X0, X25
	995 Call 0x1D2D690
	996 Move X0, X20
	997 Call 0x1C17F18
	998 Call 0x1991590

Method: System.Void UpdateBodyPartCulling(System.Boolean fittedAccessoryActive, System.Collections.Generic.HashSet`1<System.Int32> cageTrisOccludedByAccessory)

Disassembly:
	0x01E233E8 LDR X0, [X21]
	0x01E233EC LDR X23, [X8 + 0x38]
	0x01E233F0 LDR W9, [X0 + 0xE0]
	0x01E233F4 CBNZ W9, 0x1E23400
	0x01E233F8 BL 0x1C16DFC
	0x01E233FC LDR X0, [X21]
	0x01E23400 LDR X8, [X0 + 0xB8]
	0x01E23404 LDR X0, [X8 + 0x20]
	0x01E23408 CBZ X0, 0x1E2353C
	0x01E2340C ADRP X24, 0x22D7000
	0x01E23410 LDR X24, [X24 + 0x870]
	0x01E23414 MOV W1, W22
	0x01E23418 LDR X2, [X24]
	0x01E2341C BL 0x2A44D78
	0x01E23420 LDR X8, [X21]
	0x01E23424 LDR X8, [X8 + 0xB8]
	0x01E23428 LDR X8, [X8 + 0x30]
	0x01E2342C CBZ X8, 0x1E2353C
	0x01E23430 LDR X2, [X24]
	0x01E23434 MOV X21, X0
	0x01E23438 MOV X0, X8
	0x01E2343C MOV W1, W22
	0x01E23440 BL 0x2A44D78
	0x01E23444 LDR X10, [X31 + 0x8]
	0x01E23448 CBZ X10, 0x1E2353C
	0x01E2344C MOVZ W8, 0x8
	0x01E23450 MOVZ W9, 0xC
	0x01E23454 MOVI V0.2S, 0x3F, 0x18
	0x01E23458 FMOV S1, 0.5
	0x01E2345C LDR W13, [X10 + 0x18]
	0x01E23460 SUB X14, X8, 0x8
	0x01E23464 CMP W14, W13
	0x01E23468 B.GE 0x1E23540
	0x01E2346C CBZ X23, 0x1E2353C
	0x01E23470 LDR X11, [X23 + 0x38]
	0x01E23474 CBZ X11, 0x1E2353C
	0x01E23478 CBZ X0, 0x1E2353C
	0x01E2347C LDR W12, [X0 + 0x18]
	0x01E23480 CMP W14, W12
	0x01E23484 B.CS 0x1E23554
	0x01E23488 LDR X11, [X11 + 0x58]
	0x01E2348C CBZ X11, 0x1E2353C
	0x01E23490 LDRSW X12, [X0, X8, LSL #2]
	0x01E23494 LDR W15, [X11 + 0x18]
	0x01E23498 CMP W12, W15
	0x01E2349C B.CS 0x1E23554
	0x01E234A0 CBZ X19, 0x1E2353C
	0x01E234A4 CMP W14, W13
	0x01E234A8 B.CS 0x1E23554
	0x01E234AC LDR X13, [X19 + 0x58]
	0x01E234B0 CBZ X13, 0x1E2353C
	0x01E234B4 LDRSW X10, [X10, X8, LSL #2]
	0x01E234B8 LDR W14, [X13 + 0x18]
	0x01E234BC CMP W10, W14
	0x01E234C0 B.CS 0x1E23554
	0x01E234C4 CBZ X21, 0x1E2353C
	0x01E234C8 LDR W14, [X21 + 0x18]
	0x01E234CC CMP W10, W14
	0x01E234D0 B.CS 0x1E23554
	0x01E234D4 LDR X14, [X20 + 0x58]
	0x01E234D8 CBZ X14, 0x1E2353C
	0x01E234DC ADD X15, X21, X10, 0x2, LSL
	0x01E234E0 LDRSW X15, [X15 + 0x20]
	0x01E234E4 LDR W16, [X14 + 0x18]
	0x01E234E8 CMP W15, W16
	0x01E234EC B.CS 0x1E23554
	0x01E234F0 MADD X11, X12, X9, X11
	0x01E234F4 MADD X10, X10, X9, X13
	0x01E234F8 LDR V2, [X11 + 0x20]
	0x01E234FC LDR V3, [X11 + 0x28]
	0x01E23500 LDR V4, [X10 + 0x20]
	0x01E23504 LDR V5, [X10 + 0x28]
	0x01E23508 NOP
	0x01E2350C MADD X10, X15, X9, X14
	0x01E23510 ADD X8, X8, 0x1
	0x01E23514 FSUB V4.2S, V4.2S, V2.2S
	0x01E23518 FSUB S5, S5, S3
	0x00000000 INVALID
	0x01E23520 FMUL S5, S5, S1
	0x01E23524 FADD V2.2S, V2.2S, V4.2S
	0x01E23528 FADD S3, S3, S5
	0x01E2352C STR D2, [X10 + 0x20]
	0x01E23530 STR S3, [X10 + 0x28]
	0x01E23534 LDR X10, [X31 + 0x8]
	0x01E23538 CBNZ X10, 0x1E2345C
	0x01E2353C BL 0x1C16F20
	0x01E23540 LDP X20, X19, [X31 + 0x30]
	0x01E23544 LDP X22, X21, [X31 + 0x20]
	0x01E23548 LDP X24, X23, [X31 + 0x10]
	0x01E2354C LDR X30, [X31], #0x40
	0x01E23550 RET
	0x01E23554 BL 0x1C16F28
	0x01E23558 MOV X1, X31
	0x01E2355C B 0x3C36C30
	0x01E23560 SUB X31, X31, 0x50
	0x01E23564 STP D9, D8, [X31 + 0x20]
	0x01E23568 STP X30, X21, [X31 + 0x30]
	0x01E2356C STP X20, X19, [X31 + 0x40]
	0x01E23570 ADRP X20, 0x25B5000
	0x01E23574 ADRP X21, 0x22D7000
	0x01E23578 ADRP X19, 0x22D7000
	0x01E2357C LDRB W8, [X20 + 0xE35]
	0x01E23580 LDR X21, [X21 + 0x878]
	0x01E23584 LDR X19, [X19 + 0x880]
	0x01E23588 TBNZ X8, 0x0, 0x1E235C4
	0x01E2358C ADRP X0, 0x22D7000
	0x01E23590 LDR X0, [X0 + 0x740]
	0x01E23594 BL 0x1C16CF4
	0x01E23598 ADRP X0, 0x22D7000
	0x01E2359C LDR X0, [X0 + 0x888]
	0x01E235A0 BL 0x1C16CF4
	0x01E235A4 ADRP X0, 0x22D7000
	0x01E235A8 LDR X0, [X0 + 0x880]
	0x01E235AC BL 0x1C16CF4
	0x01E235B0 ADRP X0, 0x22D7000
	0x01E235B4 LDR X0, [X0 + 0x878]
	0x01E235B8 BL 0x1C16CF4
	0x01E235BC MOVZ W8, 0x1
	0x01E235C0 STRB W8, [X20 + 0xE35]
	0x01E235C4 LDR X0, [X21]
	0x01E235C8 BL 0x1C16F10
	0x01E235CC LDR X1, [X19]
	0x01E235D0 MOV X19, X0
	0x01E235D4 BL 0x2A3830C
	0x01E235D8 ADRP X20, 0x25B5000
	0x01E235DC LDRB W8, [X20 + 0x783]
	0x01E235E0 CBNZ W8, 0x1E235F8
	0x01E235E4 ADRP X0, 0x22D0000
	0x01E235E8 LDR X0, [X0 + 0x5A0]
	0x01E235EC BL 0x1C16CF4
	0x01E235F0 MOVZ W8, 0x1
	0x01E235F4 STRB W8, [X20 + 0x783]
	0x01E235F8 ADRP X20, 0x22D0000
	0x01E235FC LDR X20, [X20 + 0x5A0]
	0x01E23600 ADRP X21, 0x25B5000
	0x01E23604 LDRB W9, [X21 + 0x85B]
	0x01E23608 LDR X8, [X20]
	0x01E2360C LDR X8, [X8 + 0xB8]
	0x01E23610 LDR V9, [X8]
	0x01E23614 LDR V8, [X8 + 0x8]
	0x01E23618 CBNZ W9, 0x1E23634
	0x01E2361C MOV X0, X20
	0x01E23620 BL 0x1C16CF4
	0x01E23624 LDR X8, [X20]
	0x01E23628 MOVZ W9, 0x1
	0x01E2362C STRB W9, [X21 + 0x85B]
	0x01E23630 LDR X8, [X8 + 0xB8]
	0x01E23634 CBZ X19, 0x1E237F8
	0x01E23638 ADRP X21, 0x22D7000
	0x01E2363C LDR X21, [X21 + 0x888]
	0x01E23640 ADRP X20, 0x22D7000
	0x01E23644 LDR X20, [X20 + 0x740]
	0x01E23648 LDR V0, [X8 + 0x14]
	0x01E2364C LDUR V2, [X8 + 0xC]
	0x01E23650 LDR X3, [X21]
	0x01E23654 FMOV S1, 0.5
	0x01E23658 MOVI V3.2S, 0x3F, 0x18
	0x01E2365C FMUL S0, S0, S1
	0x00000000 INVALID
	0x01E23664 ADD X2, X31, 0x0
	0x01E23668 MOV X0, X19
	0x01E2366C MOV W1, W31
	0x01E23670 STR D9, [X31]
	0x01E23674 STR S8, [X31 + 0x8]
	0x01E23678 STUR D1, [X31 + 0xC]
	0x01E2367C STR S0, [X31 + 0x14]
	0x01E23680 BL 0x2A38C4C
	0x01E23684 ADRP X8, 0xFFFFFFFFFECC8000
	0x01E23688 ADRP X9, 0xFFFFFFFFFECCA000
	0x01E2368C LDR V0, [X8 + 0xA8]
	0x01E23690 LDR V1, [X9 + 0x9F0]
	0x01E23694 LDR X3, [X21]
	0x01E23698 ADD X2, X31, 0x0
	0x01E2369C MOVZ W1, 0x1
	0x01E236A0 MOV X0, X19
	0x01E236A4 STR V0, [X31]
	0x01E236A8 STR D1, [X31 + 0x10]
	0x01E236AC BL 0x2A38C4C
	0x01E236B0 ADRP X8, 0xFFFFFFFFFECC9000
	0x01E236B4 LDR V0, [X8 + 0x7A]
	0x01E236B8 LDR X3, [X21]
	0x01E236BC MOVZ W8, 0xC28F
	0x01E236C0 MOVK W8, 0x3C750000
	0x01E236C4 UNIMPLEMENTED
	0x01E236C8 ADD X2, X31, 0x0
	0x01E236CC MOVZ W1, 0x2
	0x01E236D0 MOV X0, X19
	0x01E236D4 STR V0, [X31]
	0x01E236D8 STR D8, [X31 + 0x10]
	0x01E236DC BL 0x2A38C4C
	0x01E236E0 ADRP X8, 0xFFFFFFFFFECCA000
	0x01E236E4 LDR V0, [X8 + 0xA]
	0x01E236E8 LDR X3, [X21]
	0x01E236EC ADD X2, X31, 0x0
	0x01E236F0 MOVZ W1, 0x3
	0x01E236F4 MOV X0, X19
	0x01E236F8 STR V0, [X31]
	0x01E236FC STR D8, [X31 + 0x10]
	0x01E23700 BL 0x2A38C4C
	0x01E23704 ADRP X8, 0xFFFFFFFFFECC7000
	0x01E23708 ADRP X9, 0xFFFFFFFFFECCA000
	0x01E2370C LDR V0, [X8 + 0x91]
	0x01E23710 LDR V1, [X9 + 0x6D8]
	0x01E23714 LDR X3, [X21]
	0x01E23718 ADD X2, X31, 0x0
	0x01E2371C MOVZ W1, 0x4
	0x01E23720 MOV X0, X19
	0x01E23724 STR V0, [X31]
	0x01E23728 STR D1, [X31 + 0x10]
	0x01E2372C BL 0x2A38C4C
	0x01E23730 ADRP X8, 0xFFFFFFFFFECC9000
	0x01E23734 ADRP X9, 0xFFFFFFFFFECCB000
	0x01E23738 LDR V0, [X8 + 0x51]
	0x01E2373C LDR V8, [X9 + 0x140]
	0x01E23740 LDR X3, [X21]
	0x01E23744 ADD X2, X31, 0x0
	0x01E23748 MOVZ W1, 0x5
	0x01E2374C MOV X0, X19
	0x01E23750 STR V0, [X31]
	0x01E23754 STR D8, [X31 + 0x10]
	0x01E23758 BL 0x2A38C4C
	0x01E2375C ADRP X8, 0xFFFFFFFFFECC9000
	0x01E23760 LDR V0, [X8]
	0x01E23764 LDR X3, [X21]
	0x01E23768 ADD X2, X31, 0x0
	0x01E2376C MOVZ W1, 0x6
	0x01E23770 MOV X0, X19
	0x01E23774 STR V0, [X31]
	0x01E23778 STR D8, [X31 + 0x10]
	0x01E2377C BL 0x2A38C4C
	0x01E23780 ADRP X8, 0xFFFFFFFFFECC9000
	0x01E23784 ADRP X9, 0xFFFFFFFFFECCA000
	0x01E23788 LDR V0, [X8 + 0x97]
	0x01E2378C LDR V1, [X9 + 0xC28]
	0x01E23790 LDR X3, [X21]
	0x01E23794 ADD X2, X31, 0x0
	0x01E23798 MOVZ W1, 0x7
	0x01E2379C MOV X0, X19
	0x01E237A0 STR V0, [X31]
	0x01E237A4 STR D1, [X31 + 0x10]
	0x01E237A8 BL 0x2A38C4C
	0x01E237AC ADRP X8, 0xFFFFFFFFFECC9000
	0x01E237B0 ADRP X9, 0xFFFFFFFFFECCA000
	0x01E237B4 LDR V0, [X8 + 0x98]
	0x01E237B8 LDR V1, [X9 + 0xE40]
	0x01E237BC LDR X3, [X21]
	0x01E237C0 ADD X2, X31, 0x0
	0x01E237C4 MOVZ W1, 0x8
	0x01E237C8 MOV X0, X19
	0x01E237CC STR V0, [X31]
	0x01E237D0 STR D1, [X31 + 0x10]
	0x01E237D4 BL 0x2A38C4C
	0x01E237D8 LDR X8, [X20]
	0x01E237DC LDP X30, X21, [X31 + 0x30]
	0x01E237E0 LDP D9, D8, [X31 + 0x20]
	0x01E237E4 LDR X8, [X8 + 0xB8]
	0x01E237E8 STR X19, [X8]
	0x01E237EC LDP X20, X19, [X31 + 0x40]
	0x01E237F0 ADD X31, X31, 0x50
	0x01E237F4 RET
	0x01E237F8 BL 0x1C16F20
	0x01E237FC STR X30, [X31 - 0x30]!
	0x01E23800 STP X22, X21, [X31 + 0x10]
	0x01E23804 STP X20, X19, [X31 + 0x20]
	0x01E23808 ADRP X22, 0x25B5000
	0x01E2380C ADRP X21, 0x22D1000
	0x01E23810 LDRB W8, [X22 + 0xE36]
	0x01E23814 LDR X21, [X21 + 0x1F8]
	0x01E23818 MOV X19, X1
	0x01E2381C MOV X20, X0
	0x01E23820 TBNZ X8, 0x0, 0x1E23844
	0x01E23824 ADRP X0, 0x22D7000
	0x01E23828 LDR X0, [X0 + 0x890]
	0x01E2382C BL 0x1C16CF4
	0x01E23830 ADRP X0, 0x22D1000
	0x01E23834 LDR X0, [X0 + 0x1F8]
	0x01E23838 BL 0x1C16CF4
	0x01E2383C MOVZ W8, 0x1
	0x01E23840 STRB W8, [X22 + 0xE36]
	0x01E23844 LDR X1, [X21]
	0x01E23848 MOV X0, X19
	0x01E2384C BL 0x265C594
	0x01E23850 MOV X1, X31
	0x01E23854 BL 0x32277A8
	0x01E23858 TBZ X0, 0x0, 0x1E23870
	0x01E2385C LDP X20, X19, [X31 + 0x20]
	0x01E23860 LDP X22, X21, [X31 + 0x10]
	0x01E23864 MOV W0, W31
	0x01E23868 LDR X30, [X31], #0x30
	0x01E2386C RET
	0x01E23870 LDR X0, [X20 + 0x20]
	0x01E23874 CBZ X0, 0x1E238B8
	0x01E23878 MOV X1, X31
	0x01E2387C BL 0x1D65020
	0x01E23880 LDR X1, [X21]
	0x01E23884 MOV X20, X0
	0x01E23888 MOV X0, X19
	0x01E2388C BL 0x265C594
	0x01E23890 CBZ X20, 0x1E238B8
	0x01E23894 ADRP X8, 0x22D7000
	0x01E23898 LDR X8, [X8 + 0x890]
	0x01E2389C MOV X1, X0
	0x01E238A0 MOV X0, X20
	0x01E238A4 LDP X20, X19, [X31 + 0x20]
	0x01E238A8 LDR X2, [X8]
	0x01E238AC LDP X22, X21, [X31 + 0x10]
	0x01E238B0 LDR X30, [X31], #0x30
	0x01E238B4 B 0x2AA528C
	0x01E238B8 BL 0x1C16F20
	0x01E238BC STP X30, X21, [X31 - 0x20]!
	0x01E238C0 STP X20, X19, [X31 + 0x10]
	0x01E238C4 ADRP X21, 0x25B5000
	0x01E238C8 LDRB W8, [X21 + 0xE37]
	0x01E238CC MOV X19, X1
	0x01E238D0 MOV X20, X0
	0x01E238D4 TBNZ X8, 0x0, 0x1E238F8
	0x01E238D8 ADRP X0, 0x22D7000
	0x01E238DC LDR X0, [X0 + 0x898]
	0x01E238E0 BL 0x1C16CF4
	0x01E238E4 ADRP X0, 0x22D1000
	0x01E238E8 LDR X0, [X0 + 0x1F8]
	0x01E238EC BL 0x1C16CF4
	0x01E238F0 MOVZ W8, 0x1
	0x01E238F4 STRB W8, [X21 + 0xE37]
	0x01E238F8 LDR X0, [X20 + 0x20]
	0x01E238FC CBZ X0, 0x1E23944
	0x01E23900 ADRP X20, 0x22D1000
	0x01E23904 LDR X20, [X20 + 0x1F8]
	0x01E23908 MOV X1, X31
	0x01E2390C BL 0x1D65020
	0x01E23910 LDR X1, [X20]
	0x01E23914 MOV X20, X0
	0x01E23918 MOV X0, X19
	0x01E2391C BL 0x265C594
	0x01E23920 CBZ X20, 0x1E23944
	0x01E23924 ADRP X8, 0x22D7000
	0x01E23928 LDR X8, [X8 + 0x898]
	0x01E2392C MOV X1, X0
	0x01E23930 MOV X0, X20
	0x01E23934 LDP X20, X19, [X31 + 0x10]
	0x01E23938 LDR X2, [X8]
	0x01E2393C LDP X30, X21, [X31], #0x20
	0x01E23940 B 0x2AA5018
	0x01E23944 BL 0x1C16F20
	0x01E23948 B 0x1E2394C
	0x01E2394C STP X29, X30, [X31 - 0x60]!
	0x01E23950 STP X28, X27, [X31 + 0x10]
	0x01E23954 STP X26, X25, [X31 + 0x20]
	0x01E23958 STP X24, X23, [X31 + 0x30]
	0x01E2395C STP X22, X21, [X31 + 0x40]
	0x01E23960 STP X20, X19, [X31 + 0x50]
	0x01E23964 ADRP X20, 0x25B5000
	0x01E23968 LDRB W8, [X20 + 0xE43]
	0x01E2396C MOV X19, X0
	0x01E23970 TBNZ X8, 0x0, 0x1E239F4
	0x01E23974 ADRP X0, 0x22D7000
	0x01E23978 LDR X0, [X0 + 0x8A0]
	0x01E2397C BL 0x1C16CF4
	0x01E23980 ADRP X0, 0x22D7000
	0x01E23984 LDR X0, [X0 + 0x8A8]
	0x01E23988 BL 0x1C16CF4
	0x01E2398C ADRP X0, 0x22D7000
	0x01E23990 LDR X0, [X0 + 0x8B0]
	0x01E23994 BL 0x1C16CF4
	0x01E23998 ADRP X0, 0x22D7000
	0x01E2399C LDR X0, [X0 + 0x8B8]
	0x01E239A0 BL 0x1C16CF4
	0x01E239A4 ADRP X0, 0x22D7000
	0x01E239A8 LDR X0, [X0 + 0x8C0]
	0x01E239AC BL 0x1C16CF4
	0x01E239B0 ADRP X0, 0x22D7000
	0x01E239B4 LDR X0, [X0 + 0x8C8]
	0x01E239B8 BL 0x1C16CF4
	0x01E239BC ADRP X0, 0x22D0000
	0x01E239C0 LDR X0, [X0 + 0x598]
	0x01E239C4 BL 0x1C16CF4
	0x01E239C8 ADRP X0, 0x22D7000
	0x01E239CC LDR X0, [X0 + 0x8D0]
	0x01E239D0 BL 0x1C16CF4
	0x01E239D4 ADRP X0, 0x22D7000
	0x01E239D8 LDR X0, [X0 + 0x8D8]
	0x01E239DC BL 0x1C16CF4
	0x01E239E0 ADRP X0, 0x22D7000
	0x01E239E4 LDR X0, [X0 + 0x8E0]
	0x01E239E8 BL 0x1C16CF4
	0x01E239EC MOVZ W8, 0x1
	0x01E239F0 STRB W8, [X20 + 0xE43]
	0x01E239F4 LDR X8, [X19 + 0x120]
	0x01E239F8 CBZ X8, 0x1E23C1C
	0x01E239FC LDP W2, W9, [X8 + 0x18]
	0x01E23A00 ADRP X24, 0x22D0000
	0x01E23A04 LDR X24, [X24 + 0x598]
	0x01E23A08 ADD W9, W9, 0x1
	0x01E23A0C CMP W2, 0x1
	0x01E23A10 STP W31, W9, [X8 + 0x18]
	0x01E23A14 B.LT 0x1E23A28
	0x01E23A18 LDR X0, [X8 + 0x10]
	0x01E23A1C MOV W1, W31
	0x01E23A20 MOV X3, X31
	0x01E23A24 BL 0x339FA34
	0x01E23A28 LDR X0, [X24]
	0x01E23A2C LDR X20, [X19 + 0x20]
	0x01E23A30 LDR W8, [X0 + 0xE0]
	0x01E23A34 CBNZ W8, 0x1E23A3C
	0x01E23A38 BL 0x1C16DFC
	0x01E23A3C MOV X0, X20
	0x01E23A40 MOV X1, X31
	0x01E23A44 MOV X2, X31
	0x01E23A48 BL 0x3C354F8
	0x01E23A4C TBZ X0, 0x0, 0x1E23A5C
	0x01E23A50 LDR X1, [X19 + 0x20]
	0x01E23A54 MOV X0, X19
	0x01E23A58 BL 0x1E250D8
	0x01E23A5C LDR X8, [X19 + 0x28]
	0x01E23A60 CBZ X8, 0x1E23B48
	0x01E23A64 ADRP X25, 0x22D7000
	0x01E23A68 ADRP X26, 0x22D7000
	0x01E23A6C ADRP X27, 0x22D7000
	0x01E23A70 ADRP X28, 0x22D7000
	0x01E23A74 ADRP X29, 0x22D7000
	0x01E23A78 LDR X25, [X25 + 0x8E0]
	0x01E23A7C LDR X26, [X26 + 0x8C0]
	0x01E23A80 LDR X27, [X27 + 0x8D0]
	0x01E23A84 LDR X28, [X28 + 0x8D8]
	0x01E23A88 LDR X29, [X29 + 0x8A8]
	0x01E23A8C MOV W20, W31
	0x01E23A90 LDR W8, [X8 + 0x18]
	0x01E23A94 CMP W20, W8
	0x01E23A98 B.GE 0x1E23B48
	0x01E23A9C LDR X0, [X25]
	0x01E23AA0 BL 0x1C16F10
	0x01E23AA4 MOV X1, X31
	0x01E23AA8 MOV X21, X0
	0x01E23AAC BL 0x33BDD8C
	0x01E23AB0 LDR X0, [X19 + 0x28]
	0x01E23AB4 CBZ X0, 0x1E23C1C
	0x01E23AB8 LDR X2, [X26]
	0x01E23ABC MOV W1, W20
	0x01E23AC0 BL 0x301BCCC
	0x01E23AC4 CBZ X21, 0x1E23C1C
	0x01E23AC8 STR X0, [X21 + 0x10]
	0x01E23ACC MOV X22, X0
	0x01E23AD0 LDR X0, [X24]
	0x01E23AD4 LDR W8, [X0 + 0xE0]
	0x01E23AD8 CBNZ W8, 0x1E23AE0
	0x01E23ADC BL 0x1C16DFC
	0x01E23AE0 MOV X0, X22
	0x01E23AE4 MOV X1, X31
	0x01E23AE8 MOV X2, X31
	0x01E23AEC BL 0x3C3883C
	0x01E23AF0 TBNZ X0, 0x0, 0x1E23B38
	0x01E23AF4 LDR X0, [X27]
	0x01E23AF8 LDR X22, [X19 + 0x120]
	0x01E23AFC BL 0x1C16F10
	0x01E23B00 LDR X2, [X28]
	0x01E23B04 MOV X1, X21
	0x01E23B08 MOV X3, X31
	0x01E23B0C MOV X23, X0
	0x01E23B10 BL 0x24AD1FC
	0x01E23B14 CBZ X22, 0x1E23C1C
	0x01E23B18 LDR X2, [X29]
	0x01E23B1C MOV X0, X22
	0x01E23B20 MOV X1, X23
	0x01E23B24 BL 0x301C5B4
	0x01E23B28 TBNZ X0, 0x0, 0x1E23B38
	0x01E23B2C LDR X1, [X21 + 0x10]
	0x01E23B30 MOV X0, X19
	0x01E23B34 BL 0x1E250D8
	0x01E23B38 LDR X8, [X19 + 0x28]
	0x01E23B3C ADD W20, W20, 0x1
	0x01E23B40 CBNZ X8, 0x1E23A90
	0x01E23B44 B 0x1E23C1C
	0x01E23B48 MOV X0, X19
	0x01E23B4C MOV X1, X31
	0x01E23B50 BL 0x3C32E90
	0x01E23B54 CBZ X0, 0x1E23C1C
	0x01E23B58 MOV X1, X31
	0x01E23B5C BL 0x3C40EA8
	0x01E23B60 FABS S0, S0
	0x01E23B64 MOV X0, X19
	0x01E23B68 MOV X1, X31
	0x01E23B6C STR S0, [X19 + 0x108]
	0x01E23B70 BL 0x3C32E90
	0x01E23B74 CBZ X0, 0x1E23C1C
	0x01E23B78 MOV X1, X31
	0x01E23B7C BL 0x3C3F58C
	0x01E23B80 STP S0, S1, [X19 + 0xFC]
	0x01E23B84 STR S2, [X19 + 0x104]
	0x01E23B88 ADRP X20, 0x25B5000
	0x01E23B8C LDRB W8, [X20 + 0x783]
	0x01E23B90 CBNZ W8, 0x1E23BA8
	0x01E23B94 ADRP X0, 0x22D0000
	0x01E23B98 LDR X0, [X0 + 0x5A0]
	0x01E23B9C BL 0x1C16CF4
	0x01E23BA0 MOVZ W8, 0x1
	0x01E23BA4 STRB W8, [X20 + 0x783]
	0x01E23BA8 ADRP X8, 0x22D0000
	0x01E23BAC LDR X8, [X8 + 0x5A0]
	0x01E23BB0 LDR X0, [X19 + 0x120]
	0x01E23BB4 LDR X8, [X8]
	0x01E23BB8 LDR X8, [X8 + 0xB8]
	0x01E23BBC LDR V0, [X8]
	0x01E23BC0 LDR V1, [X8 + 0x8]
	0x01E23BC4 STR D0, [X19 + 0xF0]
	0x01E23BC8 STR S1, [X19 + 0xF8]
	0x01E23BCC CBZ X0, 0x1E23C1C
	0x01E23BD0 ADRP X21, 0x22D7000
	0x01E23BD4 LDR X21, [X21 + 0x8C8]
	0x01E23BD8 MOV W20, W31
	0x01E23BDC LDR W8, [X0 + 0x18]
	0x01E23BE0 CMP W20, W8
	0x01E23BE4 B.GE 0x1E23C20
	0x01E23BE8 LDR X2, [X21]
	0x01E23BEC MOV W1, W20
	0x01E23BF0 BL 0x301BCCC
	0x01E23BF4 CBZ X0, 0x1E23C1C
	0x01E23BF8 LDR X2, [X0 + 0x10]
	0x01E23BFC MOV X1, X0
	0x01E23C00 FMOV S0, W31
	0x01E23C04 MOVN W3, 0x0
	0x01E23C08 MOV X0, X19
	0x01E23C0C BL 0x1E25228
	0x01E23C10 LDR X0, [X19 + 0x120]
	0x01E23C14 ADD W20, W20, 0x1
	0x01E23C18 CBNZ X0, 0x1E23BDC
	0x01E23C1C BL 0x1C16F20
	0x01E23C20 MOV X0, X19
	0x01E23C24 LDP X20, X19, [X31 + 0x50]
	0x01E23C28 LDP X22, X21, [X31 + 0x40]
	0x01E23C2C LDP X24, X23, [X31 + 0x30]
	0x01E23C30 LDP X26, X25, [X31 + 0x20]
	0x01E23C34 LDP X28, X27, [X31 + 0x10]
	0x01E23C38 LDP X29, X30, [X31], #0x60
	0x01E23C3C B 0x1E24C4C
	0x01E23C40 LDR W8, [X0 + 0x34]
	0x01E23C44 CMP W8, 0x1
	0x01E23C48 B.NE 0x1E23C50
	0x01E23C4C B 0x1E23C54
	0x01E23C50 RET
	0x01E23C54 STP X30, X19, [X31 - 0x10]!
	0x01E23C58 LDR V0, [X0 + 0x110]
	0x01E23C5C MOV X19, X0
	0x01E23C60 FCMP S0, 0x0
	0x01E23C64 B.LE 0x1E23C80
	0x01E23C68 LDRB W8, [X19 + 0xDC]
	0x01E23C6C CBZ W8, 0x1E23C78
	0x01E23C70 LDRB W8, [X19 + 0x114]
	0x01E23C74 CBNZ W8, 0x1E23C80
	0x01E23C78 MOV X0, X19
	0x01E23C7C BL 0x1E24608
	0x01E23C80 LDR W8, [X19 + 0x118]
	0x01E23C84 ADD W8, W8, 0x1
	0x01E23C88 STR W8, [X19 + 0x118]
	0x01E23C8C LDP X30, X19, [X31], #0x10
	0x01E23C90 RET
	0x01E23C94 STR X30, [X31 - 0x20]!
	0x01E23C98 STP X20, X19, [X31 + 0x10]
	0x01E23C9C ADRP X20, 0x25B5000
	0x01E23CA0 LDRB W8, [X20 + 0xE3A]
	0x01E23CA4 MOV X19, X0
	0x01E23CA8 TBNZ X8, 0x0, 0x1E23CC0
	0x01E23CAC ADRP X0, 0x22D7000
	0x01E23CB0 LDR X0, [X0 + 0x8E8]
	0x01E23CB4 BL 0x1C16CF4
	0x01E23CB8 MOVZ W8, 0x1
	0x01E23CBC STRB W8, [X20 + 0xE3A]
	0x01E23CC0 LDR W8, [X19 + 0x34]
	0x01E23CC4 ADRP X20, 0x22D7000
	0x01E23CC8 LDR X20, [X20 + 0x8E8]
	0x01E23CCC CMP W8, 0x1
	0x01E23CD0 B.EQ 0x1E23CDC
	0x01E23CD4 MOV X0, X19
	0x01E23CD8 BL 0x1E23C54
	0x01E23CDC LDR X8, [X20]
	0x01E23CE0 LDP X20, X19, [X31 + 0x10]
	0x01E23CE4 LDR X8, [X8 + 0xB8]
	0x01E23CE8 LDR W9, [X8]
	0x01E23CEC ADD W9, W9, 0x1
	0x01E23CF0 STR W9, [X8]
	0x01E23CF4 LDR X30, [X31], #0x20
	0x01E23CF8 RET
	0x01E23CFC STR X30, [X31 - 0x20]!
	0x01E23D00 STP X20, X19, [X31 + 0x10]
	0x01E23D04 ADRP X20, 0x25B5000
	0x01E23D08 LDRB W8, [X20 + 0xE3B]
	0x01E23D0C MOV X19, X0
	0x01E23D10 TBNZ X8, 0x0, 0x1E23D28
	0x01E23D14 ADRP X0, 0x22D7000
	0x01E23D18 LDR X0, [X0 + 0x8E8]
	0x01E23D1C BL 0x1C16CF4
	0x01E23D20 MOVZ W8, 0x1
	0x01E23D24 STRB W8, [X20 + 0xE3B]
	0x01E23D28 LDR W8, [X19 + 0x118]
	0x01E23D2C CBZ W8, 0x1E23DA4
	0x01E23D30 ADRP X8, 0x22D7000
	0x01E23D34 LDR X8, [X8 + 0x8E8]
	0x01E23D38 LDR X8, [X8]
	0x01E23D3C LDR X8, [X8 + 0xB8]
	0x01E23D40 LDR W9, [X8]
	0x01E23D44 CMP W9, 0x1
	0x01E23D48 B.LT 0x1E23D58
	0x01E23D4C LDR W9, [X8 + 0x4]
	0x01E23D50 ADD W9, W9, 0x1
	0x01E23D54 STP W31, W9, [X8]
	0x01E23D58 LDR V0, [X19 + 0xC0]
	0x01E23D5C MOV X0, X19
	0x01E23D60 BL 0x1E23DB0
	0x01E23D64 MOV X0, X19
	0x01E23D68 BL 0x1E23E04
	0x01E23D6C LDR V0, [X19 + 0x110]
	0x01E23D70 FCMP S0, 0x0
	0x01E23D74 B.LE 0x1E23DA0
	0x01E23D78 LDRB W8, [X19 + 0xDC]
	0x01E23D7C CBZ W8, 0x1E23D88
	0x01E23D80 LDRB W8, [X19 + 0x114]
	0x01E23D84 CBNZ W8, 0x1E23DA0
	0x01E23D88 MOV X0, X19
	0x01E23D8C BL 0x1E23FB8
	0x01E23D90 MOV X0, X19
	0x01E23D94 BL 0x1E243EC
	0x01E23D98 MOV X0, X19
	0x01E23D9C BL 0x1E2450C
	0x01E23DA0 STR W31, [X19 + 0x118]
	0x01E23DA4 LDP X20, X19, [X31 + 0x10]
	0x01E23DA8 LDR X30, [X31], #0x20
	0x01E23DAC RET
	0x01E23DB0 STR D8, [X31 - 0x20]!
	0x01E23DB4 STP X30, X19, [X31 + 0x10]
	0x01E23DB8 LDR V1, [X0 + 0x110]
	0x01E23DBC FCMP S1, S0
	0x01E23DC0 B.EQ 0x1E23DF8
	0x01E23DC4 MOV X19, X0
	0x01E23DC8 MOV V8.16B, V0.16B
	0x01E23DCC FCMP S0, 0x0
	0x01E23DD0 B.NE 0x1E23DE0
	0x01E23DD4 MOV X0, X19
	0x01E23DD8 BL 0x1E24608
	0x01E23DDC B 0x1E23DF0
	0x01E23DE0 FCMP S1, 0x0
	0x01E23DE4 B.NE 0x1E23DF0
	0x01E23DE8 MOV X0, X19
	0x01E23DEC BL 0x1E24690
	0x01E23DF0 STR S8, [X19 + 0xC0]
	0x01E23DF4 STR S8, [X19 + 0x110]
	0x01E23DF8 LDP X30, X19, [X31 + 0x10]
	0x01E23DFC LDR V8, [X31], #0x20
	0x01E23E00 RET
	0x01E23E04 STR D10, [X31 - 0x40]!
	0x01E23E08 STP D9, D8, [X31 + 0x8]
	0x01E23E0C STR X30, [X31 + 0x18]
	0x01E23E10 STP X22, X21, [X31 + 0x20]
	0x01E23E14 STP X20, X19, [X31 + 0x30]
	0x01E23E18 ADRP X20, 0x25B5000
	0x01E23E1C LDRB W8, [X20 + 0xE3D]
	0x01E23E20 MOV X19, X0
	0x01E23E24 TBNZ X8, 0x0, 0x1E23E3C
	0x01E23E28 ADRP X0, 0x22D0000
	0x01E23E2C LDR X0, [X0 + 0x598]
	0x01E23E30 BL 0x1C16CF4
	0x01E23E34 MOVZ W8, 0x1
	0x01E23E38 STRB W8, [X20 + 0xE3D]
	0x01E23E3C LDRB W8, [X19 + 0xDC]
	0x01E23E40 CBZ W8, 0x1E23F68
	0x01E23E44 ADRP X22, 0x22D0000
	0x01E23E48 LDR X22, [X22 + 0x598]
	0x01E23E4C LDR X20, [X19 + 0xE0]

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+112], D9
	003 Move [X31+120], D8
	004 Move [X31+128], X29
	005 Move [X31+136], X30
	006 Move [X31+144], X28
	007 Move [X31+152], X27
	008 Move [X31+160], X26
	009 Move [X31+168], X25
	010 Move [X31+176], X24
	011 Move [X31+184], X23
	012 Move [X31+192], X22
	013 Move [X31+200], X21
	014 Move [X31+208], X20
	015 Move [X31+216], X19
	016 Move X19, 0x25B6000
	017 Move W8, [X19+3632]
	018 Move W21, W1
	019 Move [X31+32], X2
	020 Move [X31+40], X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {87}
	025 Move X0, 0x22D8000
	026 Move X0, [X0+2096]
	027 Call 0x1C17CF4
	028 Move X0, 0x22D8000
	029 Move X0, [X0+2104]
	030 Call 0x1C17CF4
	031 Move X0, 0x22D8000
	032 Move X0, [X0+2112]
	033 Call 0x1C17CF4
	034 Move X0, 0x22D3000
	035 Move X0, [X0+2520]
	036 Call 0x1C17CF4
	037 Move X0, 0x22D8000
	038 Move X0, [X0+1656]
	039 Call 0x1C17CF4
	040 Move X0, 0x22D2000
	041 Move X0, [X0+3576]
	042 Call 0x1C17CF4
	043 Move X0, 0x22D8000
	044 Move X0, [X0+2120]
	045 Call 0x1C17CF4
	046 Move X0, 0x22D3000
	047 Move X0, [X0+2528]
	048 Call 0x1C17CF4
	049 Move X0, 0x22D8000
	050 Move X0, [X0+2128]
	051 Call 0x1C17CF4
	052 Move X0, 0x22D2000
	053 Move X0, [X0+3592]
	054 Call 0x1C17CF4
	055 Move X0, 0x22D2000
	056 Move X0, [X0+3600]
	057 Call 0x1C17CF4
	058 Move X0, 0x22D8000
	059 Move X0, [X0+1944]
	060 Call 0x1C17CF4
	061 Move X0, 0x22D8000
	062 Move X0, [X0+2136]
	063 Call 0x1C17CF4
	064 Move X0, 0x22D8000
	065 Move X0, [X0+2144]
	066 Call 0x1C17CF4
	067 Move X0, 0x22D2000
	068 Move X0, [X0+3608]
	069 Call 0x1C17CF4
	070 Move X0, 0x22D2000
	071 Move X0, [X0+3616]
	072 Call 0x1C17CF4
	073 Move X0, 0x22D2000
	074 Move X0, [X0+3624]
	075 Call 0x1C17CF4
	076 Move X0, 0x22D2000
	077 Move X0, [X0+3632]
	078 Call 0x1C17CF4
	079 Move X0, 0x22D2000
	080 Move X0, [X0+3640]
	081 Call 0x1C17CF4
	082 Move X0, 0x22D1000
	083 Move X0, [X0+1432]
	084 Call 0x1C17CF4
	085 Move W8, 1
	086 Move [X19+3632], W8
	087 Move X8, [X31+40]
	088 Move [X31+80], X31
	089 Move [X31+88], X31
	090 Move [X31+96], X31
	091 Move X20, [X8+104]
	092 Move [X31+24], X20
	093 Move TEMP, X21
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {645}
	097 Compare X20, 0
	098 JumpIfEqual {734}
	099 Move W8, [X20+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X21, 0x22D8000
	102 Move X9, -20156416
	103 Move X21, [X21+2104]
	104 Move V8, [X9+4040]
	105 Move W9, 0x5C29
	106 NotImplemented "Instruction MOVK not yet implemented."
	107 Move W10, W31
	108 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Add X8, X20, W10
	111 Move X22, [X8+32]
	112 Compare X22, 0
	113 JumpIfEqual {734}
	114 Move W8, [X22+65]
	115 Compare W8, 0
	116 JumpIfEqual {620}
	117 Move W8, [X22+64]
	118 Compare W8, 0
	119 JumpIfNotEqual {620}
	120 Move X8, [X22+56]
	121 Compare X8, 0
	122 JumpIfEqual {734}
	123 Move X0, [X8+64]
	124 Move [X31+12], W10
	125 Compare X0, 0
	126 JumpIfEqual {734}
	127 Move X20, [X8+96]
	128 Move X1, X31
	129 Call Mesh.get_triangles, X0
	130 Move X19, [X31+40]
	131 Move [X31+48], X0
	132 Move X23, [X19+136]
	133 Compare X23, 0
	134 JumpIfNotEqual {152}
	135 Move X19, [X31+48]
	136 Compare X19, 0
	137 JumpIfEqual {734}
	138 Move X8, 0x22D2000
	139 Move X8, [X8+3632]
	140 Move X0, [X8]
	141 Call 0x1C17F10
	142 Move X8, 0x22D2000
	143 Move W1, [X19+24]
	144 Move X8, [X8+3616]
	145 Move X23, X0
	146 Move X2, [X8]
	147 Call List`1<Int32>..ctor, X0, X1
	148 Move X19, [X31+40]
	149 Move [X19+136], X23
	150 Compare X23, 0
	151 JumpIfEqual {734}
	152 Move W8, [X23+28]
	153 Add W8, W8, 1
	154 Move [X23+24], W31
	155 Move [X23+28], W8
	156 Move X23, [X19+144]
	157 Compare X23, 0
	158 JumpIfEqual {160}
	159 Move [X19+144], X23
	160 Move X8, 0x22D2000
	161 Move X8, [X8+3592]
	162 Move X0, [X8]
	163 Call 0x1C17F10
	164 Move X8, 0x22D3000
	165 Move X8, [X8+2528]
	166 Move W1, 64
	167 Move X23, X0
	168 Move X2, [X8]
	169 Call HashSet`1<Int32>..ctor, X0, X1
	170 Move [X19+144], X23
	171 Compare X23, 0
	172 JumpIfEqual {734}
	173 Move [X31+16], X22
	174 Move X8, 0x22D8000
	175 Move X8, [X8+1656]
	176 Move X0, X23
	177 Move X1, [X8]
	178 Call HashSet`1<Int32>.Clear, X0
	179 Move X8, [X31+48]
	180 Compare X8, 0
	181 JumpIfEqual {734}
	182 Move X24, [X8+24]
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move W21, 2
	185 Subtract W8, W21, 2
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Add W9, W8, 1
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Add W19, W9, 1
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Compare X20, 0
	192 JumpIfEqual {734}
	193 Move X10, [X31+48]
	194 Add X8, X10, W8
	195 Move W25, [X8+32]
	196 Move W8, [X20+24]
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Subtract W9, W21, 1
	199 Add X9, X10, W9
	200 Move W24, [X9+32]
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Add X9, X10, W21
	203 Move W23, [X9+32]
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Move X22, [X31+32]
	206 Compare X22, 0
	207 JumpIfEqual {734}
	208 Move X8, W25
	209 Move X9, W24
	210 Move X10, W23
	211 Add X8, X20, X8
	212 Add X9, X20, X9
	213 Add X10, X20, X10
	214 Move X27, 0x22D2000
	215 Move W1, [X8+32]
	216 Move W26, [X9+32]
	217 Move W29, [X10+32]
	218 Move X27, [X27+3576]
	219 Move X0, X22
	220 Move X2, [X27]
	221 Call HashSet`1<Int32>.Contains, X0, X1
	222 Move X2, [X27]
	223 Move W28, W0
	224 Move X0, X22
	225 Move W1, W26
	226 Call HashSet`1<Int32>.Contains, X0, X1
	227 Move X2, [X27]
	228 Move W27, W0
	229 Move X0, X22
	230 Move W1, W29
	231 Call HashSet`1<Int32>.Contains, X0, X1
	232 Move W26, W0
	233 Move TEMP, X28
	234 And TEMP, TEMP, 1
	235 Compare TEMP, 1
	236 JumpIfNotEqual {245}
	237 Move TEMP, X27
	238 And TEMP, TEMP, 1
	239 Compare TEMP, 1
	240 JumpIfNotEqual {245}
	241 Move TEMP, X26
	242 And TEMP, TEMP, 1
	243 Compare TEMP, 1
	244 JumpIfEqual {371}
	245 Move X8, [X31+40]
	246 Move X0, [X8+136]
	247 Compare X0, 0
	248 JumpIfEqual {734}
	249 Move X9, 0x22D2000
	250 Move W10, [X0+28]
	251 Move X8, [X0+16]
	252 Move X9, [X9+3600]
	253 Add W10, W10, 1
	254 Move X9, [X9]
	255 Move [X0+28], W10
	256 Compare X8, 0
	257 JumpIfEqual {734}
	258 NotImplemented "Instruction LDRSW not yet implemented."
	259 Move W11, [X8+24]
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Add W9, W10, 1
	262 Add X8, X8, X10
	263 Move [X0+24], W9
	264 Move [X8+32], W25
	265 Move X8, [X9+32]
	266 Move W1, W25
	267 Move X8, [X8+192]
	268 Move X2, [X8+112]
	269 Call List`1<Int32>.AddWithResize, X0, X1
	270 Move X8, [X31+40]
	271 Move X0, [X8+136]
	272 Compare X0, 0
	273 JumpIfEqual {734}
	274 Move X9, 0x22D2000
	275 Move W10, [X0+28]
	276 Move X8, [X0+16]
	277 Move X9, [X9+3600]
	278 Add W10, W10, 1
	279 Move X9, [X9]
	280 Move [X0+28], W10
	281 Compare X8, 0
	282 JumpIfEqual {734}
	283 NotImplemented "Instruction LDRSW not yet implemented."
	284 Move W11, [X8+24]
	285 NotImplemented "Instruction CMP not yet implemented."
	286 Add W9, W10, 1
	287 Add X8, X8, X10
	288 Move [X0+24], W9
	289 Move [X8+32], W24
	290 Move X8, [X9+32]
	291 Move W1, W24
	292 Move X8, [X8+192]
	293 Move X2, [X8+112]
	294 Call List`1<Int32>.AddWithResize, X0, X1
	295 Move X8, [X31+40]
	296 Move X0, [X8+136]
	297 Compare X0, 0
	298 JumpIfEqual {734}
	299 Move X9, 0x22D2000
	300 Move W10, [X0+28]
	301 Move X8, [X0+16]
	302 Move X9, [X9+3600]
	303 Add W10, W10, 1
	304 Move X9, [X9]
	305 Move [X0+28], W10
	306 Compare X8, 0
	307 JumpIfEqual {734}
	308 NotImplemented "Instruction LDRSW not yet implemented."
	309 Move W11, [X8+24]
	310 NotImplemented "Instruction CMP not yet implemented."
	311 Add W9, W10, 1
	312 Add X8, X8, X10
	313 Move [X0+24], W9
	314 Move [X8+32], W23
	315 Move TEMP, X28
	316 And TEMP, TEMP, 1
	317 Compare TEMP, 1
	318 JumpIfEqual {336}
	319 Move TEMP, X27
	320 And TEMP, TEMP, 1
	321 Compare TEMP, 1
	322 JumpIfEqual {349}
	323 Move TEMP, X26
	324 And TEMP, TEMP, 1
	325 Compare TEMP, 1
	326 JumpIfEqual {362}
	327 Move X8, [X9+32]
	328 Move W1, W23
	329 Move X8, [X8+192]
	330 Move X2, [X8+112]
	331 Call List`1<Int32>.AddWithResize, X0, X1
	332 Move TEMP, X28
	333 And TEMP, TEMP, 1
	334 Compare TEMP, 1
	335 JumpIfNotEqual {319}
	336 Move X8, [X31+40]
	337 Move X0, [X8+144]
	338 Compare X0, 0
	339 JumpIfEqual {734}
	340 Move X8, 0x22D3000
	341 Move X8, [X8+2520]
	342 Move W1, W25
	343 Move X2, [X8]
	344 Call HashSet`1<Int32>.Add, X0, X1
	345 Move TEMP, X27
	346 And TEMP, TEMP, 1
	347 Compare TEMP, 1
	348 JumpIfNotEqual {323}
	349 Move X8, [X31+40]
	350 Move X0, [X8+144]
	351 Compare X0, 0
	352 JumpIfEqual {734}
	353 Move X8, 0x22D3000
	354 Move X8, [X8+2520]
	355 Move W1, W24
	356 Move X2, [X8]
	357 Call HashSet`1<Int32>.Add, X0, X1
	358 Move TEMP, X26
	359 And TEMP, TEMP, 1
	360 Compare TEMP, 1
	361 JumpIfNotEqual {371}
	362 Move X8, [X31+40]
	363 Move X0, [X8+144]
	364 Compare X0, 0
	365 JumpIfEqual {734}
	366 Move X8, 0x22D3000
	367 Move X8, [X8+2520]
	368 Move W1, W23
	369 Move X2, [X8]
	370 Call HashSet`1<Int32>.Add, X0, X1
	371 Move X8, [X31+48]
	372 Add W21, W21, 3
	373 Move X24, [X8+24]
	374 Add W8, W19, 1
	375 NotImplemented "Instruction CMP not yet implemented."
	376 Move X21, 0x22D8000
	377 Move X21, [X21+2104]
	378 Move X8, [X31+40]
	379 Move X20, [X31+24]
	380 Move X8, [X8+136]
	381 Compare X8, 0
	382 JumpIfEqual {734}
	383 Move W19, [X8+24]
	384 Compare W19, 0
	385 JumpIfEqual {459}
	386 Move X22, [X31+16]
	387 Move X0, [X22+40]
	388 Compare X0, 0
	389 JumpIfEqual {734}
	390 Move X1, X31
	391 Call SkinnedMeshRenderer.get_sharedMesh, X0
	392 Move X8, [X22+56]
	393 Compare X8, 0
	394 JumpIfEqual {734}
	395 Move X9, 0x22D1000
	396 Move X9, [X9+1432]
	397 Move X22, X0
	398 Move X23, [X8+64]
	399 Move X0, [X9]
	400 Move W9, [X0+224]
	401 Compare W9, 0
	402 JumpIfNotEqual {404}
	403 Call 0x1C17DFC
	404 Move X0, X22
	405 Move X1, X23
	406 NotImplemented "Instruction CMP not yet implemented."
	407 Move X2, X31
	408 Call Object.op_Inequality, X0, X1
	409 Move X19, [X31+16]
	410 Move TEMP, X0
	411 And TEMP, TEMP, 1
	412 Compare TEMP, 1
	413 JumpIfNotEqual {456}
	414 Move X8, [X19+56]
	415 Compare X8, 0
	416 JumpIfEqual {734}
	417 Move X0, [X19+40]
	418 Compare X0, 0
	419 JumpIfEqual {734}
	420 Move X1, [X8+64]
	421 Move X2, X31
	422 Call SkinnedMeshRenderer.set_sharedMesh, X0, X1
	423 Move X8, 0x22D1000
	424 Move X8, [X8+1432]
	425 Move X0, [X8]
	426 Move W8, [X0+224]
	427 Compare W8, 0
	428 JumpIfNotEqual {430}
	429 Call 0x1C17DFC
	430 Move X0, X22
	431 Move X1, X31
	432 Move X2, X31
	433 Call Object.op_Inequality, X0, X1
	434 Move TEMP, X0
	435 And TEMP, TEMP, 1
	436 Compare TEMP, 1
	437 JumpIfNotEqual {456}
	438 Move X0, [X19+72]
	439 Compare X0, 0
	440 JumpIfEqual {734}
	441 Move X8, 0x22D8000
	442 Move X8, [X8+2144]
	443 Move X1, X22
	444 Move X2, [X8]
	445 Call List`1<Object>.Remove, X0, X1
	446 Move X8, 0x22D1000
	447 Move X8, [X8+1432]
	448 Move X0, [X8]
	449 Move W8, [X0+224]
	450 Compare W8, 0
	451 JumpIfNotEqual {453}
	452 Call 0x1C17DFC
	453 Move X0, X22
	454 Move X1, X31
	455 Call Object.Destroy, X0
	456 Move X22, [X19+40]
	457 Move [X19+66], W31
	458 Move X0, X19
	459 Move X0, [X31+16]
	460 Move W8, 1
	461 Move X22, [X0+40]
	462 Move [X0+66], W8
	463 Move X2, X31
	464 Call Object.op_Equality, X0, X1
	465 Move X23, [X31+16]
	466 Move W19, 12
	467 Move TEMP, X0
	468 And TEMP, TEMP, 1
	469 Compare TEMP, 1
	470 JumpIfNotEqual {515}
	471 Move X8, 0x22D1000
	472 Move X8, [X8+1432]
	473 Move X0, [X8]
	474 Move W8, [X0+224]
	475 Compare W8, 0
	476 JumpIfNotEqual {478}
	477 Call 0x1C17DFC
	478 Move X8, 0x22D2000
	479 Move X8, [X8+3640]
	480 Move X0, X22
	481 Move X1, [X8]
	482 Call 0x222E35C, X0
	483 Move X8, [X23+72]
	484 Compare X8, 0
	485 JumpIfEqual {734}
	486 Move X10, 0x22D8000
	487 Move W11, [X8+28]
	488 Move X9, [X8+16]
	489 Move X10, [X10+1944]
	490 Add W11, W11, 1
	491 Move X10, [X10]
	492 Move [X8+28], W11
	493 Compare X9, 0
	494 JumpIfEqual {734}
	495 NotImplemented "Instruction LDRSW not yet implemented."
	496 Move W12, [X9+24]
	497 Move X22, X0
	498 NotImplemented "Instruction CMP not yet implemented."
	499 Add W10, W11, 1
	500 Add X9, X9, X11
	501 Move [X8+24], W10
	502 Move [X9+32], X22
	503 Move X9, [X10+32]
	504 Move X0, X8
	505 Move X1, X22
	506 Move X9, [X9+192]
	507 Move X2, [X9+112]
	508 Call List`1<Object>.AddWithResize, X0, X1
	509 Move X0, [X23+40]
	510 Compare X0, 0
	511 JumpIfEqual {734}
	512 Move X1, X22
	513 Move X2, X31
	514 Call SkinnedMeshRenderer.set_sharedMesh, X0, X1
	515 Move X8, [X31+40]
	516 Move X8, [X8+144]
	517 Compare X8, 0
	518 JumpIfEqual {734}
	519 Move W8, [X8+32]
	520 NotImplemented "Instruction CMP not yet implemented."
	521 Move X8, [X23+56]
	522 Compare X8, 0
	523 JumpIfEqual {734}
	524 Move X0, [X8+64]
	525 Compare X0, 0
	526 JumpIfEqual {734}
	527 Move X1, X31
	528 Call Mesh.get_vertices, X0
	529 Compare X22, 0
	530 JumpIfEqual {734}
	531 Move X23, X0
	532 Move X0, X22
	533 Move X1, X31
	534 Call Mesh.get_tangents, X0
	535 Move X8, [X31+40]
	536 Move X9, [X8+144]
	537 Compare X9, 0
	538 JumpIfEqual {734}
	539 Move X8, 0x22D8000
	540 Move X8, [X8+2120]
	541 Move X24, X0
	542 Move X0, X9
	543 Move X1, [X8]
	544 Add X8, X31, 56
	545 Call HashSet`1<Int32>.GetEnumerator, X0
	546 NotImplemented "Instruction LDUR not yet implemented."
	547 Move X8, [X31+72]
	548 Move [X31+5], V0
	549 Move [X31+96], X8
	550 Move X1, [X21]
	551 Add X0, X31, 80
	552 Call Enumerator<Int32>.MoveNext, X0
	553 Move TEMP, X0
	554 And TEMP, TEMP, 1
	555 Compare TEMP, 1
	556 JumpIfNotEqual {578}
	557 Compare X24, 0
	558 JumpIfEqual {625}
	559 NotImplemented "Instruction LDRSW not yet implemented."
	560 Move W9, [X24+24]
	561 NotImplemented "Instruction CMP not yet implemented."
	562 Compare X23, 0
	563 JumpIfEqual {626}
	564 Move W9, [X23+24]
	565 NotImplemented "Instruction CMP not yet implemented."
	566 Add X9, X24, X8
	567 NotImplemented "Instruction MADD not yet implemented."
	568 Move V0, [X9+32]
	569 Move V1, [X9+40]
	570 Move V2, [X8+32]
	571 Move V3, [X8+40]
	572 NotImplemented "Instruction INVALID not yet implemented."
	573 Multiply S1, S1, S8
	574 Add V0, V2, V0
	575 Subtract S1, S3, S1
	576 Move [X8+32], D0
	577 Move [X8+40], S1
	578 Move X8, 0x22D8000
	579 Move X8, [X8+2096]
	580 Add X0, X31, 80
	581 Move X1, [X8]
	582 Call Enumerator<Int32>.Dispose, X0
	583 Move X0, X22
	584 Move X1, X23
	585 Move X2, X31
	586 Call Mesh.set_vertices, X0, X1
	587 Move X23, [X31+16]
	588 Move X8, [X31+40]
	589 Move X0, [X8+136]
	590 Compare X0, 0
	591 JumpIfEqual {734}
	592 Move X8, 0x22D2000
	593 Move X8, [X8+3608]
	594 Move X1, [X8]
	595 Call List`1<Int32>.ToArray, X0
	596 Compare X22, 0
	597 JumpIfEqual {734}
	598 Move X1, X0
	599 Move X0, X22
	600 Move W2, W31
	601 Move W3, W31
	602 Move X4, X31
	603 Call Mesh.SetIndices, X0, X1, X2, X3
	604 Move X0, X22
	605 Move W1, W31
	606 Move X2, X31
	607 Call Mesh.UploadMeshData, X0, X1
	608 Move X22, [X23+40]
	609 Move [X23+66], W31
	610 Move X0, X23
	611 Move X1, X31
	612 Call BodyPartInstance.get_rendererEnabled, X0
	613 Compare X22, 0
	614 JumpIfEqual {734}
	615 And W1, W0, 1
	616 Move X0, X22
	617 Move X2, X31
	618 Call Renderer.set_enabled, X0, X1
	619 Move W10, [X31+12]
	620 Move W8, [X20+24]
	621 Add W10, W10, 1
	622 NotImplemented "Instruction CMP not yet implemented."
	623 Call 0x1C17F28
	624 Call 0x1C17F28
	625 Call 0x1C17F20
	626 Call 0x1C17F20
	627 Move X24, X0
	628 NotImplemented "Instruction CMP not yet implemented."
	629 Move X0, X24
	630 Call 0x3EB2AD0
	631 Move X25, [X0]
	632 Call 0x3EB2AE0
	633 Move X8, 0x22D8000
	634 Move X8, [X8+2096]
	635 Add X0, X31, 80
	636 Move X1, [X8]
	637 Call Enumerator<Int32>.Dispose, X0
	638 Move X21, 0x22D8000
	639 Move X20, [X31+24]
	640 Move X21, [X21+2104]
	641 Compare X25, 0
	642 JumpIfEqual {583}
	643 Move X0, X25
	644 Call 0x1C17F18
	645 Compare X20, 0
	646 JumpIfEqual {734}
	647 Move W8, [X20+24]
	648 NotImplemented "Instruction CMP not yet implemented."
	649 Move X22, 0x22D1000
	650 Move X23, 0x22D8000
	651 Move X22, [X22+1432]
	652 Move X23, [X23+2144]
	653 Move W21, W31
	654 NotImplemented "Instruction CMP not yet implemented."
	655 Add X8, X20, W21
	656 Move X24, [X8+32]
	657 Compare X24, 0
	658 JumpIfEqual {734}
	659 Move W8, [X24+65]
	660 Compare W8, 0
	661 JumpIfEqual {715}
	662 Move X0, [X24+40]
	663 Compare X0, 0
	664 JumpIfEqual {734}
	665 Move X1, X31
	666 Call SkinnedMeshRenderer.get_sharedMesh, X0
	667 Move X8, [X24+56]
	668 Compare X8, 0
	669 JumpIfEqual {734}
	670 Move X19, X0
	671 Move X0, [X22]
	672 Move X20, [X8+64]
	673 Move W9, [X0+224]
	674 Compare W9, 0
	675 JumpIfNotEqual {677}
	676 Call 0x1C17DFC
	677 Move X0, X19
	678 Move X1, X20
	679 Move X2, X31
	680 Call Object.op_Inequality, X0, X1
	681 Move X8, [X24+56]
	682 Compare X8, 0
	683 JumpIfEqual {734}
	684 Move W20, W0
	685 Move X0, [X24+40]
	686 Compare X0, 0
	687 JumpIfEqual {734}
	688 Move X1, [X8+64]
	689 Move X2, X31
	690 Call SkinnedMeshRenderer.set_sharedMesh, X0, X1
	691 Move X0, X19
	692 Move X1, X31
	693 Move X2, X31
	694 Call Object.op_Inequality, X0, X1
	695 And W8, W20, W0
	696 Move X20, [X31+24]
	697 Move TEMP, X8
	698 And TEMP, TEMP, 1
	699 Compare TEMP, 1
	700 JumpIfNotEqual {715}
	701 Move X0, [X24+72]
	702 Compare X0, 0
	703 JumpIfEqual {734}
	704 Move X2, [X23]
	705 Move X1, X19
	706 Call List`1<Object>.Remove, X0, X1
	707 Move X0, [X22]
	708 Move W8, [X0+224]
	709 Compare W8, 0
	710 JumpIfNotEqual {712}
	711 Call 0x1C17DFC
	712 Move X0, X19
	713 Move X1, X31
	714 Call Object.Destroy, X0
	715 Move W8, [X20+24]
	716 Add W21, W21, 1
	717 NotImplemented "Instruction CMP not yet implemented."
	718 Move X20, [X31+208]
	719 Move X19, [X31+216]
	720 Move X22, [X31+192]
	721 Move X21, [X31+200]
	722 Move X24, [X31+176]
	723 Move X23, [X31+184]
	724 Move X26, [X31+160]
	725 Move X25, [X31+168]
	726 Move X28, [X31+144]
	727 Move X27, [X31+152]
	728 Move X29, [X31+128]
	729 Move X30, [X31+136]
	730 Move D9, [X31+112]
	731 Move D8, [X31+120]
	732 Add X31, X31, 224
	733 Return 
	734 Call 0x1C17F20
	735 Call 0x1C17F28
	736 Move X25, X31
	737 Move X24, X0
	738 Move X8, 0x22D8000
	739 Move X8, [X8+2096]
	740 Move X1, [X8]
	741 Add X0, X31, 80
	742 Call Enumerator<Int32>.Dispose, X0
	743 Compare X25, 0
	744 JumpIfNotEqual {747}
	745 Move X0, X24
	746 Call 0x1D2D690
	747 Move X0, X25
	748 Call 0x1C17F18
	749 Call 0x1991590

Method: System.Void UpdateCageMeshForBodyPart(UnityEngine.Vector3[] baseCageMeshVertices, AnimalCompany.AvatarSystem.AvatarRawBodyPartType partType, AnimalCompany.AvatarSystem.AvatarBodyPartData data)

Disassembly:
	0x01E2411C STR S1, [X19 + 0xF8]
	0x01E24120 BL 0x3C32E90
	0x01E24124 CBZ X0, 0x1E243C8
	0x01E24128 MOV X1, X31
	0x01E2412C BL 0x3C3F58C
	0x01E24130 LDR X0, [X19 + 0x120]
	0x01E24134 STP S0, S1, [X19 + 0xFC]
	0x01E24138 STR S2, [X19 + 0x104]
	0x01E2413C CBZ X0, 0x1E243C8
	0x01E24140 ADRP X26, 0x22D6000
	0x01E24144 ADRP X27, 0x22D6000
	0x01E24148 ADRP X24, 0x22D6000
	0x01E2414C ADRP X25, 0x22CF000
	0x01E24150 ADRP X28, 0x22D6000
	0x01E24154 ADRP X29, 0x22D6000
	0x01E24158 LDR X26, [X26 + 0x8C8]
	0x01E2415C LDR X27, [X27 + 0x920]
	0x01E24160 LDR X24, [X24 + 0x918]
	0x01E24164 LDR X25, [X25 + 0x598]
	0x01E24168 LDR X28, [X28 + 0x8F0]
	0x01E2416C LDR X29, [X29 + 0x8E8]
	0x01E24170 MOV W20, W31
	0x01E24174 LDR W8, [X0 + 0x18]
	0x01E24178 CMP W20, W8
	0x01E2417C B.GE 0x1E2426C
	0x01E24180 LDR X2, [X26]
	0x01E24184 MOV W1, W20
	0x01E24188 BL 0x301BCCC
	0x01E2418C CBZ X0, 0x1E243C8
	0x01E24190 MOV X21, X0
	0x01E24194 LDR X0, [X0 + 0x10]
	0x01E24198 CBZ X0, 0x1E243C8
	0x01E2419C LDP S1, S2, [X21 + 0x1C]
	0x01E241A0 LDR V0, [X21 + 0x18]
	0x01E241A4 MOV X1, X31
	0x01E241A8 BL 0x3C40610
	0x01E241AC LDR X0, [X21 + 0x68]
	0x01E241B0 STP S0, S1, [X21 + 0x70]
	0x01E241B4 STR S2, [X21 + 0x78]
	0x01E241B8 CBZ X0, 0x1E243C8
	0x01E241BC MOV W22, W31
	0x01E241C0 LDR W8, [X0 + 0x18]
	0x01E241C4 CMP W22, W8
	0x01E241C8 B.GE 0x1E2425C
	0x01E241CC LDR X2, [X27]
	0x01E241D0 MOV W1, W22
	0x01E241D4 BL 0x301BCCC
	0x01E241D8 CBZ X0, 0x1E243C8
	0x01E241DC LDRB W8, [X0 + 0x3D]
	0x01E241E0 MOV X23, X0
	0x01E241E4 CBZ W8, 0x1E2424C
	0x01E241E8 LDR X0, [X23 + 0x10]
	0x01E241EC CBZ X0, 0x1E243C8
	0x01E241F0 MOV X1, X31
	0x01E241F4 BL 0x3C3F58C
	0x01E241F8 LDR X0, [X23 + 0x10]
	0x01E241FC STP S0, S1, [X23 + 0x80]
	0x01E24200 STR S2, [X23 + 0x88]
	0x01E24204 CBZ X0, 0x1E243C8
	0x01E24208 MOV X1, X31
	0x01E2420C BL 0x3C3EB78
	0x01E24210 LDR X0, [X23 + 0x10]
	0x01E24214 STP S0, S1, [X23 + 0x8C]
	0x01E24218 STR S2, [X23 + 0x94]
	0x01E2421C CBZ X0, 0x1E243C8
	0x01E24220 ADD X8, X31, 0x0
	0x01E24224 MOV X1, X31
	0x01E24228 BL 0x3C3F1C8
	0x01E2422C LDP V1, V0, [X31 + 0x20]
	0x01E24230 LDP V3, V2, [X31]
	0x01E24234 STP V1, V0, [X31 + 0x60]
	0x01E24238 STP V3, V2, [X31 + 0x40]
	0x01E2423C STUR V0, [X23 + 0xC8]
	0x01E24240 STUR V1, [X23 + 0xB8]
	0x01E24244 STUR V2, [X23 + 0xA8]
	0x01E24248 STUR V3, [X23 + 0x98]
	0x01E2424C LDR X0, [X21 + 0x68]
	0x01E24250 ADD W22, W22, 0x1
	0x01E24254 CBNZ X0, 0x1E241C0
	0x01E24258 B 0x1E243C8
	0x01E2425C LDR X0, [X19 + 0x120]
	0x01E24260 ADD W20, W20, 0x1
	0x01E24264 CBNZ X0, 0x1E24174
	0x01E24268 B 0x1E243C8
	0x01E2426C LDR X8, [X19 + 0x130]
	0x01E24270 CBZ X8, 0x1E24298
	0x01E24274 LDP W2, W9, [X8 + 0x18]
	0x01E24278 ADD W9, W9, 0x1
	0x01E2427C CMP W2, 0x1
	0x01E24280 STP W31, W9, [X8 + 0x18]
	0x01E24284 B.LT 0x1E24298
	0x01E24288 LDR X0, [X8 + 0x10]
	0x01E2428C MOV W1, W31
	0x01E24290 MOV X3, X31
	0x01E24294 BL 0x339FA34
	0x01E24298 ADRP X23, 0x22D6000
	0x01E2429C ADRP X26, 0x22D6000
	0x01E242A0 LDR X0, [X19 + 0xC8]
	0x01E242A4 LDR X23, [X23 + 0x928]
	0x01E242A8 LDR X26, [X26 + 0x900]
	0x01E242AC CBZ X0, 0x1E243CC
	0x01E242B0 MOV W20, W31
	0x01E242B4 LDR W8, [X0 + 0x18]
	0x01E242B8 CMP W20, W8
	0x01E242BC B.GE 0x1E243CC
	0x01E242C0 LDR X2, [X24]
	0x01E242C4 MOV W1, W20
	0x01E242C8 BL 0x301BCCC
	0x01E242CC LDR X8, [X25]
	0x01E242D0 MOV X21, X0
	0x01E242D4 LDR W9, [X8 + 0xE0]
	0x01E242D8 CBNZ W9, 0x1E242E4
	0x01E242DC MOV X0, X8
	0x01E242E0 BL 0x1C16DFC
	0x01E242E4 MOV X0, X21
	0x01E242E8 MOV X1, X31
	0x01E242EC MOV X2, X31
	0x01E242F0 BL 0x3C354F8
	0x01E242F4 TBZ X0, 0x0, 0x1E243BC
	0x01E242F8 CBZ X21, 0x1E243C8
	0x01E242FC MOV X0, X21
	0x01E24300 MOV X1, X31
	0x01E24304 BL 0x3C323D4
	0x01E24308 TBZ X0, 0x0, 0x1E243BC
	0x01E2430C LDR X22, [X19 + 0x130]
	0x01E24310 CBNZ X22, 0x1E24330
	0x01E24314 LDR X0, [X23]
	0x01E24318 BL 0x1C16F10
	0x01E2431C LDR X1, [X26]
	0x01E24320 MOV X22, X0
	0x01E24324 BL 0x301B7C4
	0x01E24328 STR X22, [X19 + 0x130]
	0x01E2432C CBZ X22, 0x1E243C8
	0x01E24330 LDR W10, [X22 + 0x1C]
	0x01E24334 LDR X8, [X22 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x25B5000
	009 Move X23, 0x22D7000
	010 Move W8, [X24+3633]
	011 Move X23, [X23+1264]
	012 Move X21, X3
	013 Move W19, W2
	014 Move X22, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x22D7000
	021 Move X0, [X0+1264]
	022 Call 0x1C17CF4
	023 Move X0, 0x22D7000
	024 Move X0, [X0+2152]
	025 Call 0x1C17CF4
	026 Move X0, 0x22D0000
	027 Move X0, [X0+1432]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X24+3633], W8
	031 Move X0, [X23]
	032 Move [X31+8], X31
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X23]
	038 Move X8, [X0+184]
	039 Move X0, [X8+32]
	040 Compare X0, 0
	041 JumpIfEqual {133}
	042 Move X8, 0x22D7000
	043 Move X8, [X8+2152]
	044 Add X2, X31, 8
	045 Move W1, W19
	046 Move X3, [X8]
	047 Call Dictionary`2<Int32Enum, Object>.TryGetValue, X0, X1, X2
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {146}
	052 Move X8, 0x22D0000
	053 Move X8, [X8+1432]
	054 Move X0, [X8]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, X21
	060 Move X1, X31
	061 Move X2, X31
	062 Call Object.op_Equality, X0, X1
	063 Move X8, [X31+8]
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {97}
	068 Compare X8, 0
	069 JumpIfEqual {133}
	070 Move X9, X31
	071 Move W10, 12
	072 Move W11, [X8+24]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Compare X22, 0
	076 JumpIfEqual {133}
	077 Add X8, X8, X9
	078 NotImplemented "Instruction LDRSW not yet implemented."
	079 Move W11, [X22+24]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X11, [X20+88]
	082 Compare X11, 0
	083 JumpIfEqual {133}
	084 Move W12, [X11+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 NotImplemented "Instruction MADD not yet implemented."
	087 Move V0, [X12+32]
	088 Move V1, [X12+40]
	089 NotImplemented "Instruction NOP not yet implemented."
	090 NotImplemented "Instruction MADD not yet implemented."
	091 Add X9, X9, 1
	092 Move [X8+32], D0
	093 Move [X8+40], S1
	094 Move X8, [X31+8]
	095 Compare X8, 0
	096 JumpIfNotEqual {72}
	097 Compare X8, 0
	098 JumpIfEqual {133}
	099 Move X9, X31
	100 Move X11, X31
	101 Move W10, 12
	102 Move W12, [X8+24]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Compare X21, 0
	106 JumpIfEqual {133}
	107 Move X13, [X21+88]
	108 Compare X13, 0
	109 JumpIfEqual {133}
	110 Move W14, [X13+24]
	111 Add X12, X11, 1
	112 Subtract W15, W12, 1
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X14, [X20+88]
	115 Compare X14, 0
	116 JumpIfEqual {133}
	117 Add X8, X8, X11
	118 NotImplemented "Instruction LDRSW not yet implemented."
	119 Move W11, [X14+24]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Add X11, X13, X9
	122 Move V0, [X11+32]
	123 Move V1, [X11+40]
	124 NotImplemented "Instruction NOP not yet implemented."
	125 NotImplemented "Instruction MADD not yet implemented."
	126 Add X9, X9, 12
	127 Move [X8+32], D0
	128 Move [X8+40], S1
	129 Move X8, [X31+8]
	130 Move X11, X12
	131 Compare X8, 0
	132 JumpIfNotEqual {102}
	133 Call 0x1C17F20
	134 Move X0, X20
	135 Move W1, W19
	136 Move X2, X21
	137 Call AvatarView.UpdateCageMeshBoundaryForBodyPart, X0, X1, X2
	138 Move X8, [X20+152]
	139 Compare X8, 0
	140 JumpIfEqual {146}
	141 Move X9, [X8+24]
	142 Move X0, [X8+64]
	143 Move X2, [X8+40]
	144 Move W1, W19
	145 NotImplemented "Instruction BLR not yet implemented."
	146 Move X20, [X31+48]
	147 Move X19, [X31+56]
	148 Move X22, [X31+32]
	149 Move X21, [X31+40]
	150 Move X24, [X31+16]
	151 Move X23, [X31+24]
	152 Move X30, [X31+64]
	153 Return 
	154 Call 0x1C17F28

Method: System.Void UpdateCageMeshBoundaryForBodyPart(AnimalCompany.AvatarSystem.AvatarRawBodyPartType partType, AnimalCompany.AvatarSystem.AvatarBodyPartData data)

Disassembly:
	0x01E24338 LDR X9, [X28]
	0x01E2433C ADD W10, W10, 0x1
	0x01E24340 STR W10, [X22 + 0x1C]
	0x01E24344 CBZ X8, 0x1E243C8
	0x01E24348 LDRSW X10, [X22 + 0x18]
	0x01E2434C LDR W11, [X8 + 0x18]
	0x01E24350 CMP W10, W11
	0x01E24354 B.CS 0x1E2436C
	0x01E24358 ADD W9, W10, 0x1
	0x01E2435C ADD X8, X8, X10, 0x3, LSL
	0x01E24360 STR W9, [X22 + 0x18]
	0x01E24364 STR X21, [X8 + 0x20]
	0x01E24368 B 0x1E24384
	0x01E2436C LDR X8, [X9 + 0x20]
	0x01E24370 MOV X0, X22
	0x01E24374 MOV X1, X21
	0x01E24378 LDR X8, [X8 + 0xC0]
	0x01E2437C LDR X2, [X8 + 0x70]
	0x01E24380 BL 0x301BF90
	0x01E24384 LDR X8, [X29]
	0x01E24388 LDR W9, [X21 + 0x34]
	0x01E2438C LDR X8, [X8 + 0xB8]
	0x01E24390 LDR W8, [X8 + 0x4]
	0x01E24394 CMP W9, W8
	0x01E24398 B.EQ 0x1E243BC
	0x01E2439C LDR X8, [X21]
	0x01E243A0 MOV X0, X21
	0x01E243A4 LDP X9, X1, [X8 + 0x188]
	0x01E243A8 BLR X9
	0x01E243AC LDR X8, [X29]
	0x01E243B0 LDR X8, [X8 + 0xB8]
	0x01E243B4 LDR W8, [X8 + 0x4]
	0x01E243B8 STR W8, [X21 + 0x34]
	0x01E243BC LDR X0, [X19 + 0xC8]
	0x01E243C0 ADD W20, W20, 0x1
	0x01E243C4 CBNZ X0, 0x1E242B4
	0x01E243C8 BL 0x1C16F20
	0x01E243CC LDP X20, X19, [X31 + 0xD0]
	0x01E243D0 LDP X22, X21, [X31 + 0xC0]
	0x01E243D4 LDP X24, X23, [X31 + 0xB0]
	0x01E243D8 LDP X26, X25, [X31 + 0xA0]
	0x01E243DC LDP X28, X27, [X31 + 0x90]
	0x01E243E0 LDP X29, X30, [X31 + 0x80]
	0x01E243E4 ADD X31, X31, 0xE0
	0x01E243E8 RET
	0x01E243EC STR D8, [X31 - 0x30]!
	0x01E243F0 STP X30, X21, [X31 + 0x10]
	0x01E243F4 STP X20, X19, [X31 + 0x20]
	0x01E243F8 ADRP X20, 0x25B4000
	0x01E243FC LDRB W8, [X20 + 0xE42]
	0x01E24400 MOV X19, X0
	0x01E24404 TBNZ X8, 0x0, 0x1E2441C
	0x01E24408 ADRP X0, 0x22D6000
	0x01E2440C LDR X0, [X0 + 0x8B0]
	0x01E24410 BL 0x1C16CF4
	0x01E24414 MOVZ W8, 0x1
	0x01E24418 STRB W8, [X20 + 0xE42]
	0x01E2441C LDR X8, [X19 + 0x120]
	0x01E24420 CBZ X8, 0x1E24508
	0x01E24424 LDR W8, [X8 + 0x18]
	0x01E24428 CMP W8, 0x1
	0x01E2442C B.LT 0x1E244D4
	0x01E24430 LDR W8, [X19 + 0x34]
	0x01E24434 LDR V1, [X19 + 0x128]
	0x01E24438 LDR V0, [X19 + 0x30]
	0x01E2443C CMP W8, 0x3
	0x01E24440 B.NE 0x1E24454
	0x01E24444 FCMP S0, 0x0
	0x01E24448 B.LE 0x1E244A0
	0x01E2444C FMUL S8, S1, S0
	0x01E24450 B 0x1E244A4
	0x01E24454 FCMP S0, 0x0
	0x01E24458 B.LE 0x1E244A0
	0x01E2445C LDR V2, [X19 + 0x10C]
	0x01E24460 FMOV S3, 1
	0x01E24464 MOV W8, W31
	0x01E24468 FDIV S0, S3, S0
	0x01E2446C FADD S1, S1, S2
	0x01E24470 STR S1, [X19 + 0x10C]
	0x01E24474 FCMP S1, S0
	0x01E24478 B.LT 0x1E244E4
	0x01E2447C SUB W8, W8, 0x1
	0x01E24480 FSUB S1, S1, S0
	0x01E24484 ADDS W31, W8, 0x3
	0x01E24488 STR S1, [X19 + 0x10C]
	0x01E2448C B.NE 0x1E24474
	0x01E24490 STR W31, [X19 + 0x10C]
	0x01E24494 FMOV S8, 1
	0x01E24498 MOVZ W21, 0x3
	0x01E2449C B 0x1E244A8
	0x01E244A0 FMOV S8, 1
	0x01E244A4 MOVZ W21, 0x1
	0x01E244A8 MOV W20, W31
	0x01E244AC MOV X0, X19
	0x01E244B0 MOV V0.16B, V8.16B
	0x01E244B4 MOV W1, W20
	0x01E244B8 BL 0x1E24F04
	0x01E244BC MOV X0, X19
	0x01E244C0 MOV V0.16B, V8.16B
	0x01E244C4 BL 0x1E24FB0
	0x01E244C8 ADD W20, W20, 0x1
	0x01E244CC CMP W21, W20
	0x01E244D0 B.NE 0x1E244AC
	0x01E244D4 LDP X20, X19, [X31 + 0x20]
	0x01E244D8 LDP X30, X21, [X31 + 0x10]
	0x01E244DC LDR V8, [X31], #0x30
	0x01E244E0 RET
	0x01E244E4 CBZ W8, 0x1E244F4
	0x01E244E8 SUB W21, W31, W8
	0x01E244EC FMOV S8, 1
	0x01E244F0 B 0x1E244A8
	0x01E244F4 MOV X0, X19
	0x01E244F8 LDP X20, X19, [X31 + 0x20]
	0x01E244FC LDP X30, X21, [X31 + 0x10]
	0x01E24500 LDR V8, [X31], #0x30
	0x01E24504 B 0x1E2504C
	0x01E24508 BL 0x1C16F20
	0x01E2450C SUB X31, X31, 0x30
	0x01E24510 STP X30, X21, [X31 + 0x10]
	0x01E24514 STP X20, X19, [X31 + 0x20]
	0x01E24518 ADRP X20, 0x25B4000
	0x01E2451C LDRB W8, [X20 + 0xE52]
	0x01E24520 MOV X19, X0
	0x01E24524 TBNZ X8, 0x0, 0x1E24548
	0x01E24528 ADRP X0, 0x22D6000
	0x01E2452C LDR X0, [X0 + 0x8B0]
	0x01E24530 BL 0x1C16CF4
	0x01E24534 ADRP X0, 0x22D6000
	0x01E24538 LDR X0, [X0 + 0x8C8]
	0x01E2453C BL 0x1C16CF4
	0x01E24540 MOVZ W8, 0x1
	0x01E24544 STRB W8, [X20 + 0xE52]
	0x01E24548 ADRP X20, 0x25B4000
	0x01E2454C LDRB W8, [X20 + 0xB70]
	0x01E24550 CBNZ W8, 0x1E24568
	0x01E24554 ADRP X0, 0x22CF000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x25B5000
	009 Move X21, 0x22D7000
	010 Move W8, [X23+3634]
	011 Move X21, [X21+1264]
	012 Move X19, X2
	013 Move W22, W1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x22D7000
	020 Move X0, [X0+1264]
	021 Call 0x1C17CF4
	022 Move X0, 0x22D7000
	023 Move X0, [X0+2152]
	024 Call 0x1C17CF4
	025 Move X0, 0x22D7000
	026 Move X0, [X0+2160]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X23+3634], W8
	030 Move X0, [X21]
	031 Move [X31+8], X31
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X21]
	037 Move X8, [X0+184]
	038 Move X0, [X8+40]
	039 Compare X0, 0
	040 JumpIfEqual {147}
	041 Move X8, 0x22D7000
	042 Move X8, [X8+2152]
	043 Add X2, X31, 8
	044 Move W1, W22
	045 Move X3, [X8]
	046 Call Dictionary`2<Int32Enum, Object>.TryGetValue, X0, X1, X2
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {148}
	051 Move X8, [X20+104]
	052 Compare X8, 0
	053 JumpIfEqual {147}
	054 Move W9, [X8+24]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X0, [X21]
	057 Move X23, [X8+56]
	058 Move W9, [X0+224]
	059 Compare W9, 0
	060 JumpIfNotEqual {63}
	061 Call 0x1C17DFC
	062 Move X0, [X21]
	063 Move X8, [X0+184]
	064 Move X0, [X8+32]
	065 Compare X0, 0
	066 JumpIfEqual {147}
	067 Move X24, 0x22D7000
	068 Move X24, [X24+2160]
	069 Move W1, W22
	070 Move X2, [X24]
	071 Call Dictionary`2<Int32Enum, Object>.get_Item, X0, X1
	072 Move X8, [X21]
	073 Move X8, [X8+184]
	074 Move X8, [X8+48]
	075 Compare X8, 0
	076 JumpIfEqual {147}
	077 Move X2, [X24]
	078 Move X21, X0
	079 Move X0, X8
	080 Move W1, W22
	081 Call Dictionary`2<Int32Enum, Object>.get_Item, X0, X1
	082 Move X10, [X31+8]
	083 Compare X10, 0
	084 JumpIfEqual {147}
	085 Move W8, 8
	086 Move W9, 12
	087 NotImplemented "Instruction MOVI not yet implemented."
	088 Move S1, 0.5
	089 Move W13, [X10+24]
	090 Subtract X14, X8, 8
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Compare X23, 0
	093 JumpIfEqual {147}
	094 Move X11, [X23+56]
	095 Compare X11, 0
	096 JumpIfEqual {147}
	097 Compare X0, 0
	098 JumpIfEqual {147}
	099 Move W12, [X0+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X11, [X11+88]
	102 Compare X11, 0
	103 JumpIfEqual {147}
	104 NotImplemented "Instruction LDRSW not yet implemented."
	105 Move W15, [X11+24]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Compare X19, 0
	108 JumpIfEqual {147}
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X13, [X19+88]
	111 Compare X13, 0
	112 JumpIfEqual {147}
	113 NotImplemented "Instruction LDRSW not yet implemented."
	114 Move W14, [X13+24]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Compare X21, 0
	117 JumpIfEqual {147}
	118 Move W14, [X21+24]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X14, [X20+88]
	121 Compare X14, 0
	122 JumpIfEqual {147}
	123 Add X15, X21, X10
	124 NotImplemented "Instruction LDRSW not yet implemented."
	125 Move W16, [X14+24]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 NotImplemented "Instruction MADD not yet implemented."
	128 NotImplemented "Instruction MADD not yet implemented."
	129 Move V2, [X11+32]
	130 Move V3, [X11+40]
	131 Move V4, [X10+32]
	132 Move V5, [X10+40]
	133 NotImplemented "Instruction NOP not yet implemented."
	134 NotImplemented "Instruction MADD not yet implemented."
	135 Add X8, X8, 1
	136 Subtract V4, V4, V2
	137 Subtract S5, S5, S3
	138 NotImplemented "Instruction INVALID not yet implemented."
	139 Multiply S5, S5, S1
	140 Add V2, V2, V4
	141 Add S3, S3, S5
	142 Move [X10+32], D2
	143 Move [X10+40], S3
	144 Move X10, [X31+8]
	145 Compare X10, 0
	146 JumpIfNotEqual {89}
	147 Call 0x1C17F20
	148 Move X20, [X31+48]
	149 Move X19, [X31+56]
	150 Move X22, [X31+32]
	151 Move X21, [X31+40]
	152 Move X24, [X31+16]
	153 Move X23, [X31+24]
	154 Move X30, [X31+64]
	155 Return 
	156 Call 0x1C17F28

Method: System.Collections.Generic.IEnumerable`1<UnityEngine.Material> EnumerateRenderedMaterials()

Disassembly:
	0x01E1F720 CMP W25, 0x0
	0x01E1F724 ADD X2, X31, 0x8
	0x01E1F728 MOV X0, X20
	0x01E1F72C CSET W22, NE
	0x01E1F730 BL 0x2A46818
	0x01E1F734 LDR X2, [X31 + 0x8]
	0x01E1F738 ADD X4, X31, 0x14
	0x01E1F73C MOV X0, X19
	0x01E1F740 MOV X1, X21
	0x01E1F744 MOV W3, W22
	0x01E1F748 BL 0x1E21674
	0x01E1F74C LDR W8, [X23 + 0x18]
	0x01E1F750 ADD W26, W26, 0x1
	0x01E1F754 CMP W26, W8
	0x01E1F758 B.LT 0x1E1F700
	0x01E1F75C LDR X0, [X24]
	0x01E1F760 LDR X20, [X19 + 0x70]
	0x01E1F764 LDR W8, [X0 + 0xE0]
	0x01E1F768 CBNZ W8, 0x1E1F774
	0x01E1F76C BL 0x1C16DFC
	0x01E1F770 LDR X0, [X24]
	0x01E1F774 LDR X8, [X0 + 0xB8]
	0x01E1F778 ADRP X23, 0x22DB000
	0x01E1F77C LDR X21, [X8 + 0x28]
	0x01E1F780 LDR X23, [X23 + 0x610]
	0x01E1F784 CBNZ X21, 0x1E1F7D8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x25BA000
	006 Move X21, 0x22D7000
	007 Move W8, [X20+3635]
	008 Move X21, [X21+2200]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22D7000
	015 Move X0, [X0+2200]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3635], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move TEMP, 1
	022 Not TEMP
	023 Move W1, TEMP
	024 Move X2, X31
	025 Move X20, X0
	026 Call <EnumerateRenderedMaterials>d__48..ctor, X0, X1
	027 Compare X20, 0
	028 JumpIfEqual {36}
	029 Move [X20+40], X19
	030 Move X0, X20
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0
	036 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<UnityEngine.Renderer> EnumerateBodyRenderers()

Disassembly:
	0x01E1F78C CBNZ W8, 0x1E1F798
	0x01E1F790 BL 0x1C16DFC
	0x01E1F794 LDR X0, [X24]
	0x01E1F798 ADRP X9, 0x22DB000
	0x01E1F79C LDR X8, [X0 + 0xB8]
	0x01E1F7A0 LDR X9, [X9 + 0x660]
	0x01E1F7A4 LDR X22, [X8]
	0x01E1F7A8 LDR X0, [X9]
	0x01E1F7AC BL 0x1C16F10
	0x01E1F7B0 ADRP X8, 0x22DB000
	0x01E1F7B4 LDR X8, [X8 + 0x6B0]
	0x01E1F7B8 MOV X1, X22
	0x01E1F7BC MOV X3, X31
	0x01E1F7C0 MOV X21, X0
	0x01E1F7C4 LDR X2, [X8]
	0x01E1F7C8 BL 0x2D2F428
	0x01E1F7CC LDR X8, [X24]
	0x01E1F7D0 LDR X8, [X8 + 0xB8]
	0x01E1F7D4 STR X21, [X8 + 0x28]
	0x01E1F7D8 LDR X2, [X23]
	0x01E1F7DC MOV X0, X20
	0x01E1F7E0 MOV X1, X21
	0x01E1F7E4 BL 0x21B36AC
	0x01E1F7E8 LDRB W8, [X31 + 0x14]
	0x01E1F7EC MOV W20, W0
	0x01E1F7F0 CBNZ W8, 0x1E1F800

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x25BA000
	006 Move X21, 0x22D7000
	007 Move W8, [X20+3636]
	008 Move X21, [X21+2176]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22D7000
	015 Move X0, [X0+2176]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3636], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move TEMP, 1
	022 Not TEMP
	023 Move W1, TEMP
	024 Move X2, X31
	025 Move X20, X0
	026 Call <EnumerateBodyRenderers>d__49..ctor, X0, X1
	027 Compare X20, 0
	028 JumpIfEqual {36}
	029 Move [X20+40], X19
	030 Move X0, X20
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0
	036 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01E24558 LDR X0, [X0 + 0x5A0]
	0x01E2455C BL 0x1C16CF4

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x01E24560 MOVZ W8, 0x1
	0x01E24564 STRB W8, [X20 + 0xB70]
	0x01E24568 ADRP X20, 0x25B4000
	0x01E2456C LDRB W8, [X20 + 0x786]
	0x01E24570 CBNZ W8, 0x1E24588
	0x01E24574 ADRP X0, 0x22CF000
	0x01E24578 LDR X0, [X0 + 0x5A0]
	0x01E2457C BL 0x1C16CF4
	0x01E24580 MOVZ W8, 0x1
	0x01E24584 STRB W8, [X20 + 0x786]
	0x01E24588 ADRP X20, 0x25B4000
	0x01E2458C LDRB W8, [X20 + 0xA1F]
	0x01E24590 CBNZ W8, 0x1E245A8
	0x01E24594 ADRP X0, 0x22CF000
	0x01E24598 LDR X0, [X0 + 0x5A0]
	0x01E2459C BL 0x1C16CF4
	0x01E245A0 MOVZ W8, 0x1
	0x01E245A4 STRB W8, [X20 + 0xA1F]
	0x01E245A8 LDR X0, [X19 + 0x120]
	0x01E245AC CBZ X0, 0x1E245F4
	0x01E245B0 ADRP X21, 0x22D6000
	0x01E245B4 LDR X21, [X21 + 0x8C8]
	0x01E245B8 MOV W20, W31
	0x01E245BC LDR W8, [X0 + 0x18]
	0x01E245C0 CMP W20, W8
	0x01E245C4 B.GE 0x1E245F8
	0x01E245C8 LDR X2, [X21]
	0x01E245CC MOV W1, W20
	0x01E245D0 BL 0x301BCCC
	0x01E245D4 MOV X1, X0
	0x01E245D8 MOV W2, W31
	0x01E245DC MOV W3, W31
	0x01E245E0 MOV W4, W31
	0x01E245E4 BL 0x1E26C00
	0x01E245E8 LDR X0, [X19 + 0x120]
	0x01E245EC ADD W20, W20, 0x1
	0x01E245F0 CBNZ X0, 0x1E245BC
	0x01E245F4 BL 0x1C16F20
	0x01E245F8 LDP X20, X19, [X31 + 0x20]
	0x01E245FC LDP X30, X21, [X31 + 0x10]
	0x01E24600 ADD X31, X31, 0x30
	0x01E24604 RET
	0x01E24608 STP X30, X21, [X31 - 0x20]!
	0x01E2460C STP X20, X19, [X31 + 0x10]
	0x01E24610 ADRP X20, 0x25B4000
	0x01E24614 LDRB W8, [X20 + 0xE48]
	0x01E24618 MOV X19, X0
	0x01E2461C TBNZ X8, 0x0, 0x1E24640
	0x01E24620 ADRP X0, 0x22D6000
	0x01E24624 LDR X0, [X0 + 0x8B0]
	0x01E24628 BL 0x1C16CF4
	0x01E2462C ADRP X0, 0x22D6000
	0x01E24630 LDR X0, [X0 + 0x8C8]
	0x01E24634 BL 0x1C16CF4
	0x01E24638 MOVZ W8, 0x1
	0x01E2463C STRB W8, [X20 + 0xE48]
	0x01E24640 LDR X0, [X19 + 0x120]
	0x01E24644 CBZ X0, 0x1E24680
	0x01E24648 ADRP X21, 0x22D6000
	0x01E2464C LDR X21, [X21 + 0x8C8]
	0x01E24650 MOV W20, W31
	0x01E24654 LDR W8, [X0 + 0x18]
	0x01E24658 CMP W20, W8
	0x01E2465C B.GE 0x1E24684
	0x01E24660 LDR X2, [X21]
	0x01E24664 MOV W1, W20
	0x01E24668 BL 0x301BCCC
	0x01E2466C MOV X1, X0
	0x01E24670 BL 0x1E25CCC
	0x01E24674 LDR X0, [X19 + 0x120]
	0x01E24678 ADD W20, W20, 0x1
	0x01E2467C CBNZ X0, 0x1E24654
	0x01E24680 BL 0x1C16F20
	0x01E24684 LDP X20, X19, [X31 + 0x10]
	0x01E24688 LDP X30, X21, [X31], #0x20
	0x01E2468C RET
	0x01E24690 STP X30, X21, [X31 - 0x20]!
	0x01E24694 STP X20, X19, [X31 + 0x10]
	0x01E24698 ADRP X20, 0x25B4000
	0x01E2469C LDRB W8, [X20 + 0xE4A]
	0x01E246A0 MOV X19, X0
	0x01E246A4 TBNZ X8, 0x0, 0x1E246C8
	0x01E246A8 ADRP X0, 0x22D6000
	0x01E246AC LDR X0, [X0 + 0x8B0]
	0x01E246B0 BL 0x1C16CF4
	0x01E246B4 ADRP X0, 0x22D6000
	0x01E246B8 LDR X0, [X0 + 0x8C8]
	0x01E246BC BL 0x1C16CF4
	0x01E246C0 MOVZ W8, 0x1
	0x01E246C4 STRB W8, [X20 + 0xE4A]
	0x01E246C8 LDR X0, [X19 + 0x120]
	0x01E246CC CBZ X0, 0x1E24708
	0x01E246D0 ADRP X21, 0x22D6000
	0x01E246D4 LDR X21, [X21 + 0x8C8]
	0x01E246D8 MOV W20, W31
	0x01E246DC LDR W8, [X0 + 0x18]
	0x01E246E0 CMP W20, W8
	0x01E246E4 B.GE 0x1E2470C
	0x01E246E8 LDR X2, [X21]
	0x01E246EC MOV W1, W20
	0x01E246F0 BL 0x301BCCC
	0x01E246F4 MOV X1, X0
	0x01E246F8 BL 0x1E25D98
	0x01E246FC LDR X0, [X19 + 0x120]
	0x01E24700 ADD W20, W20, 0x1
	0x01E24704 CBNZ X0, 0x1E246DC
	0x01E24708 BL 0x1C16F20
	0x01E2470C MOV X0, X19
	0x01E24710 MOV X1, X31
	0x01E24714 BL 0x3C32E90
	0x01E24718 CBZ X0, 0x1E24708
	0x01E2471C MOV X1, X31
	0x01E24720 BL 0x3C3F58C
	0x01E24724 STP S0, S1, [X19 + 0xFC]
	0x01E24728 STR S2, [X19 + 0x104]
	0x01E2472C LDP X20, X19, [X31 + 0x10]
	0x01E24730 LDP X30, X21, [X31], #0x20
	0x01E24734 RET
	0x01E24738 B 0x1E24690
	0x01E2473C B 0x1E24608
	0x01E24740 STP X30, X21, [X31 - 0x20]!
	0x01E24744 STP X20, X19, [X31 + 0x10]
	0x01E24748 ADRP X21, 0x25B4000
	0x01E2474C ADRP X20, 0x22CF000
	0x01E24750 LDRB W8, [X21 + 0xE3E]
	0x01E24754 LDR X20, [X20 + 0x970]
	0x01E24758 MOV X19, X0
	0x01E2475C TBNZ X8, 0x0, 0x1E24774
	0x01E24760 ADRP X0, 0x22CF000
	0x01E24764 LDR X0, [X0 + 0x970]
	0x01E24768 BL 0x1C16CF4
	0x01E2476C MOVZ W8, 0x1
	0x01E24770 STRB W8, [X21 + 0xE3E]
	0x01E24774 LDR V0, [X19 + 0x30]
	0x01E24778 FMOV S1, W31
	0x01E2477C LDR V2, [X19 + 0x38]
	0x01E24780 LDR V4, [X19 + 0x48]
	0x01E24784 FMAXNM S0, S0, S1
	0x01E24788 STR S0, [X19 + 0x30]
	0x01E2478C LDR V0, [X19 + 0x58]
	0x01E24790 FMOV S3, 1
	0x01E24794 FCMP S2, 0x0
	0x01E24798 FMIN S2, S2, S3
	0x01E2479C FCSEL S2, S2, S1, PL
	0x01E247A0 FCMP S4, 0x0
	0x01E247A4 FMIN S4, S4, S3
	0x01E247A8 STR S2, [X19 + 0x38]
	0x01E247AC LDR V2, [X19 + 0x68]
	0x01E247B0 FCSEL S4, S4, S1, PL
	0x01E247B4 FCMP S0, 0x0
	0x01E247B8 FMIN S0, S0, S3
	0x01E247BC STR S4, [X19 + 0x48]
	0x01E247C0 LDR V4, [X19 + 0x78]
	0x01E247C4 FCSEL S0, S0, S1, PL
	0x01E247C8 STR S0, [X19 + 0x58]
	0x01E247CC LDR V0, [X19 + 0x88]
	0x01E247D0 FCMP S2, 0x0
	0x01E247D4 FMIN S2, S2, S3
	0x01E247D8 FMIN S3, S4, S3
	0x01E247DC FCSEL S2, S2, S1, PL
	0x01E247E0 FCMP S4, 0x0
	0x01E247E4 FMAXNM S0, S0, S1
	0x01E247E8 FCSEL S1, S3, S1, PL
	0x01E247EC STR S2, [X19 + 0x68]
	0x01E247F0 STR S1, [X19 + 0x78]
	0x01E247F4 STR S0, [X19 + 0x88]
	0x01E247F8 LDR X0, [X20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], D9
	003 Move [X31+40], D8
	004 Move [X31+48], X30
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X20, 0x25B5000
	009 Move X21, 0x22D7000
	010 Move X19, 0x22D7000
	011 Move W8, [X20+3637]
	012 Move X21, [X21+2168]
	013 Move X19, [X19+2176]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x22D7000
	019 Move X0, [X0+1856]
	020 Call 0x1C17CF4
	021 Move X0, 0x22D7000
	022 Move X0, [X0+2184]
	023 Call 0x1C17CF4
	024 Move X0, 0x22D7000
	025 Move X0, [X0+2176]
	026 Call 0x1C17CF4
	027 Move X0, 0x22D7000
	028 Move X0, [X0+2168]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+3637], W8
	032 Move X0, [X21]
	033 Call 0x1C17F10
	034 Move X1, [X19]
	035 Move X19, X0
	036 Call Dictionary`2<Int32Enum, Bounds>..ctor, X0
	037 Move X20, 0x25B5000
	038 Move W8, [X20+1923]
	039 Compare W8, 0
	040 JumpIfNotEqual {46}
	041 Move X0, 0x22D0000
	042 Move X0, [X0+1440]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X20+1923], W8
	046 Move X20, 0x22D0000
	047 Move X20, [X20+1440]
	048 Move X21, 0x25B5000
	049 Move W9, [X21+2139]
	050 Move X8, [X20]
	051 Move X8, [X8+184]
	052 Move V9, [X8]
	053 Move V8, [X8+8]
	054 Compare W9, 0
	055 JumpIfNotEqual {62}
	056 Move X0, X20
	057 Call 0x1C17CF4
	058 Move X8, [X20]
	059 Move W9, 1
	060 Move [X21+2139], W9
	061 Move X8, [X8+184]
	062 Compare X19, 0
	063 JumpIfEqual {179}
	064 Move X21, 0x22D7000
	065 Move X21, [X21+2184]
	066 Move X20, 0x22D7000
	067 Move X20, [X20+1856]
	068 Move V0, [X8+20]
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 Move X3, [X21]
	071 Move S1, 0.5
	072 NotImplemented "Instruction MOVI not yet implemented."
	073 Multiply S0, S0, S1
	074 NotImplemented "Instruction INVALID not yet implemented."
	075 Add X2, X31, 0
	076 Move X0, X19
	077 Move W1, W31
	078 Move [X31], D9
	079 Move [X31+8], S8
	080 Move [X31+12], D1
	081 Move [X31+20], S0
	082 Call Dictionary`2<Int32Enum, Bounds>.Add, X0, X1, X2
	083 Move X8, -20152320
	084 Move X9, -20144128
	085 Move V0, [X8+168]
	086 Move V1, [X9+2544]
	087 Move X3, [X21]
	088 Add X2, X31, 0
	089 Move W1, 1
	090 Move X0, X19
	091 Move [X31], V0
	092 Move [X31+16], D1
	093 Call Dictionary`2<Int32Enum, Bounds>.Add, X0, X1, X2
	094 Move X8, -20148224
	095 Move V0, [X8+122]
	096 Move X3, [X21]
	097 Move W8, 0xC28F
	098 NotImplemented "Instruction MOVK not yet implemented."
	099 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	100 Add X2, X31, 0
	101 Move W1, 2
	102 Move X0, X19
	103 Move [X31], V0
	104 Move [X31+16], D8
	105 Call Dictionary`2<Int32Enum, Bounds>.Add, X0, X1, X2
	106 Move X8, -20144128
	107 Move V0, [X8+10]
	108 Move X3, [X21]
	109 Add X2, X31, 0
	110 Move W1, 3
	111 Move X0, X19
	112 Move [X31], V0
	113 Move [X31+16], D8
	114 Call Dictionary`2<Int32Enum, Bounds>.Add, X0, X1, X2
	115 Move X8, -20156416
	116 Move X9, -20144128
	117 Move V0, [X8+145]
	118 Move V1, [X9+1752]
	119 Move X3, [X21]
	120 Add X2, X31, 0
	121 Move W1, 4
	122 Move X0, X19
	123 Move [X31], V0
	124 Move [X31+16], D1
	125 Call Dictionary`2<Int32Enum, Bounds>.Add, X0, X1, X2
	126 Move X8, -20148224
	127 Move X9, -20140032
	128 Move V0, [X8+81]
	129 Move V8, [X9+320]
	130 Move X3, [X21]
	131 Add X2, X31, 0
	132 Move W1, 5
	133 Move X0, X19
	134 Move [X31], V0
	135 Move [X31+16], D8
	136 Call Dictionary`2<Int32Enum, Bounds>.Add, X0, X1, X2
	137 Move X8, -20148224
	138 Move V0, [X8]
	139 Move X3, [X21]
	140 Add X2, X31, 0
	141 Move W1, 6
	142 Move X0, X19
	143 Move [X31], V0
	144 Move [X31+16], D8
	145 Call Dictionary`2<Int32Enum, Bounds>.Add, X0, X1, X2
	146 Move X8, -20148224
	147 Move X9, -20144128
	148 Move V0, [X8+151]
	149 Move V1, [X9+3112]
	150 Move X3, [X21]
	151 Add X2, X31, 0
	152 Move W1, 7
	153 Move X0, X19
	154 Move [X31], V0
	155 Move [X31+16], D1
	156 Call Dictionary`2<Int32Enum, Bounds>.Add, X0, X1, X2
	157 Move X8, -20148224
	158 Move X9, -20144128
	159 Move V0, [X8+152]
	160 Move V1, [X9+3648]
	161 Move X3, [X21]
	162 Add X2, X31, 0
	163 Move W1, 8
	164 Move X0, X19
	165 Move [X31], V0
	166 Move [X31+16], D1
	167 Call Dictionary`2<Int32Enum, Bounds>.Add, X0, X1, X2
	168 Move X8, [X20]
	169 Move X30, [X31+48]
	170 Move X21, [X31+56]
	171 Move D9, [X31+32]
	172 Move D8, [X31+40]
	173 Move X8, [X8+184]
	174 Move [X8], X19
	175 Move X20, [X31+64]
	176 Move X19, [X31+72]
	177 Add X31, X31, 80
	178 Return 
	179 Call 0x1C17F20

Method: System.Boolean <UpdateAvatar>b__40_0(SpatialSys.ObservableState.StatePrimitive`1<System.String> itemID)

Disassembly:
	0x01E247FC LDR W8, [X0 + 0xE0]
	0x01E24800 CBNZ W8, 0x1E24808
	0x01E24804 BL 0x1C16DFC
	0x01E24808 MOV X0, X31
	0x01E2480C BL 0x3C03278
	0x01E24810 TBZ X0, 0x0, 0x1E24854
	0x01E24814 LDR X0, [X20]
	0x01E24818 LDR W8, [X0 + 0xE0]
	0x01E2481C CBNZ W8, 0x1E24824
	0x01E24820 BL 0x1C16DFC
	0x01E24824 MOV X0, X31
	0x01E24828 BL 0x3C018E4
	0x01E2482C TBZ X0, 0x0, 0x1E24854
	0x01E24830 MOV X0, X19
	0x01E24834 BL 0x1E24870
	0x01E24838 TBZ X0, 0x0, 0x1E24860
	0x01E2483C MOV X0, X19
	0x01E24840 BL 0x1E24608
	0x01E24844 MOV X0, X19
	0x01E24848 LDP X20, X19, [X31 + 0x10]
	0x01E2484C LDP X30, X21, [X31], #0x20
	0x01E24850 B 0x1E2394C
	0x01E24854 LDP X20, X19, [X31 + 0x10]
	0x01E24858 LDP X30, X21, [X31], #0x20
	0x01E2485C RET
	0x01E24860 MOV X0, X19
	0x01E24864 LDP X20, X19, [X31 + 0x10]
	0x01E24868 LDP X30, X21, [X31], #0x20
	0x01E2486C B 0x1E24C4C
	0x01E24870 SUB X31, X31, 0x90
	0x01E24874 STR X30, [X31 + 0x40]
	0x01E24878 STP X26, X25, [X31 + 0x50]
	0x01E2487C STP X24, X23, [X31 + 0x60]
	0x01E24880 STP X22, X21, [X31 + 0x70]
	0x01E24884 STP X20, X19, [X31 + 0x80]
	0x01E24888 ADRP X22, 0x25B4000
	0x01E2488C ADRP X21, 0x22D6000
	0x01E24890 ADRP X20, 0x22D6000
	0x01E24894 ADRP X24, 0x22CF000
	0x01E24898 LDRB W8, [X22 + 0xE3F]
	0x01E2489C LDR X21, [X21 + 0x930]
	0x01E248A0 LDR X20, [X20 + 0x938]
	0x01E248A4 LDR X24, [X24 + 0x598]
	0x01E248A8 MOV X19, X0
	0x01E248AC TBNZ X8, 0x0, 0x1E24954
	0x01E248B0 ADRP X0, 0x22D6000
	0x01E248B4 LDR X0, [X0 + 0x940]
	0x01E248B8 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x25B5000
	007 Move X21, 0x22D1000
	008 Move W8, [X22+3638]
	009 Move X21, [X21+504]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x22D7000
	017 Move X0, [X0+2192]
	018 Call 0x1C17CF4
	019 Move X0, 0x22D1000
	020 Move X0, [X0+504]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3638], W8
	024 Move X1, [X21]
	025 Move X0, X19
	026 Call StatePrimitive`1<Object>.op_Implicit, X0
	027 Move X1, X31
	028 Call String.IsNullOrEmpty, X0
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {40}
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move W0, W31
	038 Move X30, [X31+48]
	039 Return X0
	040 Move X0, [X20+32]
	041 Compare X0, 0
	042 JumpIfEqual {63}
	043 Move X1, X31
	044 Call AvatarSystemCatalog.get_accessoriesLookup, X0
	045 Move X1, [X21]
	046 Move X20, X0
	047 Move X0, X19
	048 Call StatePrimitive`1<Object>.op_Implicit, X0
	049 Compare X20, 0
	050 JumpIfEqual {63}
	051 Move X8, 0x22D7000
	052 Move X8, [X8+2192]
	053 Move X1, X0
	054 Move X0, X20
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X2, [X8]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X30, [X31+48]
	061 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	062 Return X0
	063 Call 0x1C17F20

Method: AnimalCompany.AvatarAccessoryData <UpdateAvatar>b__40_1(SpatialSys.ObservableState.StatePrimitive`1<System.String> itemID)

Disassembly:
	0x01E248BC ADRP X0, 0x22D6000
	0x01E248C0 LDR X0, [X0 + 0x948]
	0x01E248C4 BL 0x1C16CF4
	0x01E248C8 ADRP X0, 0x22D6000
	0x01E248CC LDR X0, [X0 + 0x950]
	0x01E248D0 BL 0x1C16CF4
	0x01E248D4 ADRP X0, 0x22D6000
	0x01E248D8 LDR X0, [X0 + 0x958]
	0x01E248DC BL 0x1C16CF4
	0x01E248E0 ADRP X0, 0x22D6000
	0x01E248E4 LDR X0, [X0 + 0x960]
	0x01E248E8 BL 0x1C16CF4
	0x01E248EC ADRP X0, 0x22D6000
	0x01E248F0 LDR X0, [X0 + 0x968]
	0x01E248F4 BL 0x1C16CF4
	0x01E248F8 ADRP X0, 0x22D6000
	0x01E248FC LDR X0, [X0 + 0x938]
	0x01E24900 BL 0x1C16CF4
	0x01E24904 ADRP X0, 0x22D6000
	0x01E24908 LDR X0, [X0 + 0x8B0]
	0x01E2490C BL 0x1C16CF4
	0x01E24910 ADRP X0, 0x22D6000
	0x01E24914 LDR X0, [X0 + 0x8B8]
	0x01E24918 BL 0x1C16CF4
	0x01E2491C ADRP X0, 0x22D6000
	0x01E24920 LDR X0, [X0 + 0x8C0]
	0x01E24924 BL 0x1C16CF4
	0x01E24928 ADRP X0, 0x22D6000
	0x01E2492C LDR X0, [X0 + 0x8C8]
	0x01E24930 BL 0x1C16CF4
	0x01E24934 ADRP X0, 0x22D6000
	0x01E24938 LDR X0, [X0 + 0x930]
	0x01E2493C BL 0x1C16CF4
	0x01E24940 ADRP X0, 0x22CF000
	0x01E24944 LDR X0, [X0 + 0x598]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x25B5000
	006 Move W8, [X21+3639]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x22D7000
	014 Move X0, [X0+2200]
	015 Call 0x1C17CF4
	016 Move X0, 0x22D1000
	017 Move X0, [X0+504]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3639], W8
	021 Move X0, [X20+32]
	022 Compare X0, 0
	023 JumpIfEqual {45}
	024 Move X20, 0x22D1000
	025 Move X20, [X20+504]
	026 Move X1, X31
	027 Call AvatarSystemCatalog.get_accessoriesLookup, X0
	028 Move X1, [X20]
	029 Move X20, X0
	030 Move X0, X19
	031 Call StatePrimitive`1<Object>.op_Implicit, X0
	032 Compare X20, 0
	033 JumpIfEqual {45}
	034 Move X8, 0x22D7000
	035 Move X8, [X8+2200]
	036 Move X1, X0
	037 Move X0, X20
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X2, [X8]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	044 Return X0
	045 Call 0x1C17F20

Method: System.Void <UpdateBodyPart>g__Clear|43_0(ref AnimalCompany.AvatarSystem.AvatarView/<>c__DisplayClass43_0 param_0)

Disassembly:
	0x01E23EEC MOV X1, X31
	0x01E23EF0 BL 0x3C3F58C
	0x01E23EF4 MOV X0, X19
	0x01E23EF8 MOV X1, X31
	0x01E23EFC MOV V8.16B, V0.16B
	0x01E23F00 MOV V9.16B, V1.16B
	0x01E23F04 MOV V10.16B, V2.16B
	0x01E23F08 BL 0x3C32E90
	0x01E23F0C CBZ X0, 0x1E23F80
	0x01E23F10 MOV X1, X31
	0x01E23F14 BL 0x3C3F58C
	0x01E23F18 LDR V3, [X19 + 0xE8]
	0x01E23F1C FSUB S0, S8, S0
	0x01E23F20 FSUB S1, S9, S1
	0x01E23F24 FSUB S2, S10, S2
	0x01E23F28 FMUL S0, S0, S0
	0x01E23F2C FMUL S1, S1, S1
	0x01E23F30 FMUL S2, S2, S2
	0x01E23F34 FADD S0, S0, S1
	0x01E23F38 LDRB W8, [X19 + 0x114]
	0x01E23F3C FADD S0, S2, S0
	0x01E23F40 FMUL S1, S3, S3
	0x01E23F44 FCMP S0, S1
	0x01E23F48 CSET W20, GT
	0x01E23F4C CMP W8, W20
	0x01E23F50 B.EQ 0x1E23F68
	0x01E23F54 FCMP S0, S1
	0x01E23F58 B.GT 0x1E23F64
	0x01E23F5C MOV X0, X19
	0x01E23F60 BL 0x1E24690
	0x01E23F64 STRB W20, [X19 + 0x114]
	0x01E23F68 LDP X20, X19, [X31 + 0x30]
	0x01E23F6C LDP X22, X21, [X31 + 0x20]
	0x01E23F70 LDR X30, [X31 + 0x18]
	0x01E23F74 LDP D9, D8, [X31 + 0x8]
	0x01E23F78 LDR V10, [X31], #0x40
	0x01E23F7C RET
	0x01E23F80 BL 0x1C16F20
	0x01E23F84 LDR V0, [X0 + 0x110]
	0x01E23F88 FCMP S0, 0x0
	0x01E23F8C B.LE 0x1E23FA8
	0x01E23F90 LDRB W8, [X0 + 0xDC]
	0x01E23F94 CBZ W8, 0x1E23FB0
	0x01E23F98 LDRB W8, [X0 + 0x114]
	0x01E23F9C CMP W8, 0x0
	0x01E23FA0 CSET W0, EQ
	0x01E23FA4 RET
	0x01E23FA8 MOV W0, W31
	0x01E23FAC RET
	0x01E23FB0 MOVZ W0, 0x1
	0x01E23FB4 RET
	0x01E23FB8 SUB X31, X31, 0xE0
	0x01E23FBC STP X29, X30, [X31 + 0x80]
	0x01E23FC0 STP X28, X27, [X31 + 0x90]
	0x01E23FC4 STP X26, X25, [X31 + 0xA0]
	0x01E23FC8 STP X24, X23, [X31 + 0xB0]
	0x01E23FCC STP X22, X21, [X31 + 0xC0]
	0x01E23FD0 STP X20, X19, [X31 + 0xD0]
	0x01E23FD4 ADRP X20, 0x25B5000
	0x01E23FD8 LDRB W8, [X20 + 0xE3C]
	0x01E23FDC MOV X19, X0
	0x01E23FE0 TBNZ X8, 0x0, 0x1E2407C
	0x01E23FE4 ADRP X0, 0x22D7000
	0x01E23FE8 LDR X0, [X0 + 0x8E8]
	0x01E23FEC BL 0x1C16CF4
	0x01E23FF0 ADRP X0, 0x22D7000
	0x01E23FF4 LDR X0, [X0 + 0x8F0]
	0x01E23FF8 BL 0x1C16CF4
	0x01E23FFC ADRP X0, 0x22D7000
	0x01E24000 LDR X0, [X0 + 0x8F8]
	0x01E24004 BL 0x1C16CF4
	0x01E24008 ADRP X0, 0x22D6000
	0x01E2400C LDR X0, [X0 + 0x900]
	0x01E24010 BL 0x1C16CF4
	0x01E24014 ADRP X0, 0x22D6000
	0x01E24018 LDR X0, [X0 + 0x908]
	0x01E2401C BL 0x1C16CF4
	0x01E24020 ADRP X0, 0x22D6000
	0x01E24024 LDR X0, [X0 + 0x8B0]
	0x01E24028 BL 0x1C16CF4
	0x01E2402C ADRP X0, 0x22D6000
	0x01E24030 LDR X0, [X0 + 0x910]
	0x01E24034 BL 0x1C16CF4
	0x01E24038 ADRP X0, 0x22D6000
	0x01E2403C LDR X0, [X0 + 0x918]
	0x01E24040 BL 0x1C16CF4
	0x01E24044 ADRP X0, 0x22D6000
	0x01E24048 LDR X0, [X0 + 0x920]
	0x01E2404C BL 0x1C16CF4
	0x01E24050 ADRP X0, 0x22D6000
	0x01E24054 LDR X0, [X0 + 0x8C8]
	0x01E24058 BL 0x1C16CF4
	0x01E2405C ADRP X0, 0x22D6000
	0x01E24060 LDR X0, [X0 + 0x928]
	0x01E24064 BL 0x1C16CF4
	0x01E24068 ADRP X0, 0x22CF000
	0x01E2406C LDR X0, [X0 + 0x598]
	0x01E24070 BL 0x1C16CF4
	0x01E24074 MOVZ W8, 0x1
	0x01E24078 STRB W8, [X20 + 0xE3C]
	0x01E2407C MOV X0, X31
	0x01E24080 BL 0x3C3C714
	0x01E24084 LDR W8, [X19 + 0x34]
	0x01E24088 STR S0, [X19 + 0x128]
	0x01E2408C CMP W8, 0x1
	0x01E24090 B.EQ 0x1E240A8
	0x01E24094 CMP W8, 0x2
	0x01E24098 B.NE 0x1E240C0
	0x01E2409C MOV X0, X31
	0x01E240A0 BL 0x3C3C7B4
	0x01E240A4 B 0x1E240BC
	0x01E240A8 MOV X0, X31
	0x01E240AC BL 0x3C3C7DC
	0x01E240B0 LDR V1, [X19 + 0x118]
	0x01E240B4 SCVTF S1, S1
	0x01E240B8 FMUL S0, S0, S1
	0x01E240BC STR S0, [X19 + 0x128]
	0x01E240C0 MOV X0, X19
	0x01E240C4 MOV X1, X31
	0x01E240C8 BL 0x3C32E90
	0x01E240CC CBZ X0, 0x1E243C8
	0x01E240D0 MOV X1, X31
	0x01E240D4 BL 0x3C40EA8
	0x01E240D8 FABS S0, S0
	0x01E240DC MOV X0, X19
	0x01E240E0 MOV X1, X31
	0x01E240E4 STR S0, [X19 + 0x108]
	0x01E240E8 BL 0x3C32E90
	0x01E240EC CBZ X0, 0x1E243C8
	0x01E240F0 MOV X1, X31
	0x01E240F4 BL 0x3C3F58C
	0x01E240F8 MOV X8, X19
	0x01E240FC LDR V3, [X8 + 0xFC]!
	0x01E24100 MOV X0, X19
	0x01E24104 MOV V0.S[1], V1.S[0]
	0x01E24108 MOV X1, X31
	0x01E2410C LDR V4, [X8 + 0x8]
	0x01E24110 FSUB V0.2S, V0.2S, V3.2S
	0x01E24114 STR D0, [X19 + 0xF0]
	0x01E24118 FSUB S1, S2, S4

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X21, 0x25B6000
	010 Move W8, [X21+3640]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0x22D8000
	018 Move X0, [X0+2048]
	019 Call 0x1C17CF4
	020 Move X0, 0x22D8000
	021 Move X0, [X0+2056]
	022 Call 0x1C17CF4
	023 Move X0, 0x22D8000
	024 Move X0, [X0+2064]
	025 Call 0x1C17CF4
	026 Move X0, 0x22D8000
	027 Move X0, [X0+2072]
	028 Call 0x1C17CF4
	029 Move X0, 0x22D8000
	030 Move X0, [X0+2080]
	031 Call 0x1C17CF4
	032 Move X0, 0x22D1000
	033 Move X0, [X0+1432]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+3640], W8
	037 Move [X31+32], X31
	038 Move [X31+40], X31
	039 Move [X31+48], X31
	040 Move X8, [X20]
	041 Compare X8, 0
	042 JumpIfEqual {137}
	043 Move X0, [X8+72]
	044 Compare X0, 0
	045 JumpIfEqual {137}
	046 Move X8, 0x22D8000
	047 Move X8, [X8+2080]
	048 Move X22, 0x22D8000
	049 Move X23, 0x22D1000
	050 Move X24, 0x22D8000
	051 Move X1, [X8]
	052 Move X22, [X22+2056]
	053 Move X23, [X23+1432]
	054 Move X24, [X24+2048]
	055 Add X8, X31, 8
	056 Call List`1<Object>.GetEnumerator, X0
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 Move X8, [X31+24]
	059 Move [X31+2], V0
	060 Move [X31+48], X8
	061 Move X1, [X22]
	062 Add X0, X31, 32
	063 Call Enumerator<Object>.MoveNext, X0
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {77}
	068 Move X0, [X23]
	069 Move X21, [X31+48]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X0, X21
	075 Move X1, X31
	076 Call Object.Destroy, X0
	077 Move X1, [X24]
	078 Add X0, X31, 32
	079 Call Enumerator<Object>.Dispose, X0
	080 Move X8, [X20]
	081 Compare X8, 0
	082 JumpIfEqual {137}
	083 Move X8, [X8+72]
	084 Compare X8, 0
	085 JumpIfEqual {137}
	086 Move W2, [X8+24]
	087 Move W9, [X8+28]
	088 Add W9, W9, 1
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move [X8+24], W31
	091 Move [X8+28], W9
	092 Move X0, [X8+16]
	093 Move W1, W31
	094 Move X3, X31
	095 Call Array.Clear, X0, X1, X2
	096 Move W8, [X20+8]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X0, [X23]
	099 Move X20, [X19+120]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 Move X0, X20
	105 Move X1, X31
	106 Move X2, X31
	107 Call Object.op_Inequality, X0, X1
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfNotEqual {128}
	112 Move X0, [X19+120]
	113 Compare X0, 0
	114 JumpIfEqual {137}
	115 Move X1, X31
	116 Call Component.get_gameObject, X0
	117 Move X8, [X23]
	118 Move X20, X0
	119 Move W9, [X8+224]
	120 Compare W9, 0
	121 JumpIfNotEqual {124}
	122 Move X0, X8
	123 Call 0x1C17DFC
	124 Move X0, X20
	125 Move X1, X31
	126 Call Object.Destroy, X0
	127 Move [X19+120], X31
	128 Move X20, [X31+112]
	129 Move X19, [X31+120]
	130 Move X22, [X31+96]
	131 Move X21, [X31+104]
	132 Move X24, [X31+80]
	133 Move X23, [X31+88]
	134 Move X30, [X31+64]
	135 Add X31, X31, 128
	136 Return 
	137 Call 0x1C17F20
	138 Move X22, X0
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X0, X22
	141 Call 0x3EB2AD0
	142 Move X21, [X0]
	143 Call 0x3EB2AE0
	144 Move X1, [X24]
	145 Add X0, X31, 32
	146 Call Enumerator<Object>.Dispose, X0
	147 Compare X21, 0
	148 JumpIfEqual {80}
	149 Move X0, X21
	150 Call 0x1C17F18
	151 Move X21, X31
	152 Move X22, X0
	153 Move X1, [X24]
	154 Add X0, X31, 32
	155 Call Enumerator<Object>.Dispose, X0
	156 Compare X21, 0
	157 JumpIfNotEqual {160}
	158 Move X0, X22
	159 Call 0x1D2D690
	160 Move X0, X21
	161 Call 0x1C17F18
	162 Call 0x1991590

