Type: AnimalCompany.DoodEditorManager

Method: System.Void Awake()

Disassembly:
	0x01D61458 B.EQ 0x1D61478
	0x01D6145C SUBS X9, X9, 0x1
	0x01D61460 ADD X10, X10, 0x10
	0x01D61464 B.NE 0x1D61450
	0x01D61468 MOV X0, X21
	0x01D6146C MOV W2, W31
	0x01D61470 BL 0x1C5C788
	0x01D61474 B 0x1D61484
	0x01D61478 LDRSW X9, [X10]
	0x01D6147C ADD X8, X8, X9, 0x4, LSL
	0x01D61480 ADD X0, X8, 0x138
	0x01D61484 LDP X8, X1, [X0]
	0x01D61488 MOV X0, X21
	0x01D6148C BLR X8
	0x01D61490 MOV W23, W0
	0x01D61494 TBZ X0, 0x0, 0x1D61580
	0x01D61498 LDR X8, [X21]
	0x01D6149C LDR X1, [X26]
	0x01D614A0 LDRH W9, [X8 + 0x12E]
	0x01D614A4 CBZ X9, 0x1D614C8
	0x01D614A8 LDR X10, [X8 + 0xB0]
	0x01D614AC ADD X10, X10, 0x8
	0x01D614B0 LDUR X11, [X10 - 0x8]
	0x01D614B4 CMP X11, X1
	0x01D614B8 B.EQ 0x1D614D8
	0x01D614BC SUBS X9, X9, 0x1
	0x01D614C0 ADD X10, X10, 0x10
	0x01D614C4 B.NE 0x1D614B0
	0x01D614C8 MOV X0, X21
	0x01D614CC MOV W2, W31
	0x01D614D0 BL 0x1C5C788
	0x01D614D4 B 0x1D614E4
	0x01D614D8 LDRSW X9, [X10]
	0x01D614DC ADD X8, X8, X9, 0x4, LSL
	0x01D614E0 ADD X0, X8, 0x138
	0x01D614E4 LDP X8, X1, [X0]
	0x01D614E8 MOV X0, X21
	0x01D614EC BLR X8
	0x01D614F0 MOV X22, X0
	0x01D614F4 LDR X0, [X20]
	0x01D614F8 LDR W8, [X0 + 0xE0]
	0x01D614FC CBNZ W8, 0x1D61504
	0x01D61500 BL 0x1C16DFC
	0x01D61504 LDRB W8, [X24 + 0x787]
	0x01D61508 CBNZ W8, 0x1D61518
	0x01D6150C MOV X0, X20
	0x01D61510 BL 0x1C16CF4
	0x01D61514 STRB W27, [X24 + 0x787]
	0x01D61518 LDR X0, [X20]
	0x01D6151C LDR W8, [X0 + 0xE0]
	0x01D61520 CBNZ W8, 0x1D6152C
	0x01D61524 BL 0x1C16DFC
	0x01D61528 LDR X0, [X20]
	0x01D6152C LDR X8, [X0 + 0xB8]
	0x01D61530 LDR X8, [X8]
	0x01D61534 CBZ X8, 0x1D61B6C
	0x01D61538 LDR X8, [X8 + 0xC8]
	0x01D6153C CBZ X8, 0x1D61B70
	0x01D61540 CBZ X22, 0x1D61B64
	0x01D61544 LDR X0, [X8 + 0x50]
	0x01D61548 CBZ X0, 0x1D61B68
	0x01D6154C LDR X1, [X22 + 0x50]
	0x01D61550 LDR X3, [X28]
	0x01D61554 ADD X2, X31, 0x8
	0x01D61558 BL 0x2609E34
	0x01D6155C TBZ X0, 0x0, 0x1D61438
	0x01D61560 LDR X8, [X31 + 0x8]
	0x01D61564 CBZ X8, 0x1D61B74
	0x01D61568 LDR X0, [X8 + 0x58]
	0x01D6156C LDR X1, [X29]
	0x01D61570 BL 0x265A3C4
	0x01D61574 LDR W8, [X19 + 0x8C]
	0x01D61578 CMP W0, W8
	0x01D6157C B.NE 0x1D61438
	0x01D61580 MOV X22, X31
	0x01D61584 EOR W20, W23, 0x1
	0x01D61588 MOVZ W23, 0x5
	0x01D6158C CBZ X21, 0x1D61600
	0x01D61590 ADRP X10, 0x2392000
	0x01D61594 LDR X8, [X21]
	0x01D61598 LDR X10, [X10 + 0xE00]
	0x01D6159C LDRH W9, [X8 + 0x12E]
	0x01D615A0 LDR X1, [X10]
	0x01D615A4 CBZ X9, 0x1D615C8
	0x01D615A8 LDR X10, [X8 + 0xB0]
	0x01D615AC ADD X10, X10, 0x8
	0x01D615B0 LDUR X11, [X10 - 0x8]
	0x01D615B4 CMP X11, X1
	0x01D615B8 B.EQ 0x1D615E8
	0x01D615BC SUBS X9, X9, 0x1
	0x01D615C0 ADD X10, X10, 0x10
	0x01D615C4 B.NE 0x1D615B0
	0x01D615C8 MOV X0, X21
	0x01D615CC MOV W2, W31
	0x01D615D0 BL 0x1C5C788
	0x01D615D4 B 0x1D615F4
	0x01D615D8 LDR X0, [X19 + 0x48]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2678000
	008 Move W8, [X20+2106]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x2395000
	015 Move X0, [X0+1744]
	016 Call 0x1C17CF4
	017 Move X0, 0x2395000
	018 Move X0, [X0+1752]
	019 Call 0x1C17CF4
	020 Move X0, 0x2395000
	021 Move X0, [X0+1760]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+2106], W8
	025 Move W8, 1
	026 Move X0, X19
	027 Move [X19+152], W8
	028 Call DoodEditorManager.LoadItemsForCategory, X0
	029 Move X0, [X19+56]
	030 Compare X0, 0
	031 JumpIfEqual {115}
	032 Move X1, X31
	033 Call ItemScroller.ResetScroll, X0
	034 Move X23, [X19+72]
	035 Compare X23, 0
	036 JumpIfEqual {115}
	037 Move X22, 0x2395000
	038 Move X22, [X22+1744]
	039 Move X21, 0x2395000
	040 Move X20, [X23+32]
	041 Move X0, [X22]
	042 Move X21, [X21+1752]
	043 Call 0x1C17F10
	044 Move X2, [X21]
	045 Move X1, X19
	046 Move X3, X31
	047 Move X21, X0
	048 Call Action`1<Object>..ctor, X0, X1, X2
	049 Move X0, X20
	050 Move X1, X21
	051 Move X2, X31
	052 Call Delegate.Combine, X0, X1
	053 Compare X0, 0
	054 JumpIfEqual {68}
	055 Move X21, [X22]
	056 Move X20, X0
	057 Move X1, X21
	058 Call 0x1C17E00
	059 Compare X0, 0
	060 JumpIfEqual {101}
	061 Move [X23+32], X0
	062 Move X21, [X22]
	063 Move X0, X20
	064 Move X1, X21
	065 Call 0x1C17E00
	066 Compare X0, 0
	067 JumpIfNotEqual {69}
	068 Move [X23+32], X31
	069 Move X23, [X19+72]
	070 Compare X23, 0
	071 JumpIfEqual {115}
	072 Move X0, [X22]
	073 Move X21, 0x2395000
	074 Move X20, [X23+40]
	075 Move X21, [X21+1760]
	076 Call 0x1C17F10
	077 Move X2, [X21]
	078 Move X1, X19
	079 Move X3, X31
	080 Move X21, X0
	081 Call Action`1<Object>..ctor, X0, X1, X2
	082 Move X0, X20
	083 Move X1, X21
	084 Move X2, X31
	085 Call Delegate.Combine, X0, X1
	086 Compare X0, 0
	087 JumpIfEqual {104}
	088 Move X21, [X22]
	089 Move X20, X0
	090 Move X1, X21
	091 Call 0x1C17E00
	092 Compare X0, 0
	093 JumpIfEqual {101}
	094 Move [X23+40], X0
	095 Move X21, [X22]
	096 Move X0, X20
	097 Move X1, X21
	098 Call 0x1C17E00
	099 Compare X0, 0
	100 JumpIfNotEqual {105}
	101 Move X0, X20
	102 Move X1, X21
	103 Call 0x1C181E0
	104 Move [X23+40], X31
	105 Move X0, X19
	106 Move X20, [X31+32]
	107 Move X19, [X31+40]
	108 Move X22, [X31+16]
	109 Move X21, [X31+24]
	110 Move W1, W31
	111 Move X30, [X31+48]
	112 Move X23, [X31+56]
	113 Call DoodEditorManager.TurnOff, X0, X1
	114 Return 
	115 Call 0x1C17F20

Method: System.Void OnEnable()

Disassembly:
	0x01D61B9C BL 0x1C16F18
	0x01D61BA0 BL 0x1C16F20
	0x01D61BA4 BL 0x1C16F20
	0x01D61BA8 BL 0x1C16F20
	0x01D61BAC BL 0x1C16F20
	0x01D61BB0 BL 0x1C16F20
	0x01D61BB4 BL 0x1C16F20
	0x01D61BB8 BL 0x1C16F20
	0x01D61BBC BL 0x1C16F20
	0x01D61BC0 BL 0x1C16F20
	0x01D61BC4 B 0x1D61C18
	0x01D61BC8 B 0x1D61CD8
	0x01D61BCC B 0x1D61CD8
	0x01D61BD0 B 0x1D61CD8
	0x01D61BD4 B 0x1D61CD8
	0x01D61BD8 B 0x1D61CD8
	0x01D61BDC B 0x1D61CD8
	0x01D61BE0 B 0x1D61CD8
	0x01D61BE4 B 0x1D61CD8
	0x01D61BE8 B 0x1D61CD8
	0x01D61BEC B 0x1D61CD8
	0x01D61BF0 B 0x1D61CD8
	0x01D61BF4 B 0x1D61DA0
	0x01D61BF8 B 0x1D61C18
	0x01D61BFC B 0x1D61C18
	0x01D61C00 B 0x1D61C18
	0x01D61C04 B 0x1D61C18
	0x01D61C08 B 0x1D61CD8
	0x01D61C0C B 0x1D61CD8
	0x01D61C10 B 0x1D61CD8
	0x01D61C14 B 0x1D61C18
	0x01D61C18 MOV X20, X0
	0x01D61C1C CMP W1, 0x1
	0x01D61C20 B.NE 0x1D61C44
	0x01D61C24 MOV X0, X20
	0x01D61C28 BL 0x3EB1AD0
	0x01D61C2C LDR X22, [X0]
	0x01D61C30 BL 0x3EB1AE0
	0x01D61C34 MOV W23, W31
	0x01D61C38 MOV W20, W31
	0x01D61C3C CBNZ X21, 0x1D61AF4
	0x01D61C40 B 0x1D61B54
	0x01D61C44 MOV X22, X31
	0x01D61C48 B 0x1D61C50
	0x01D61C4C MOV X20, X0
	0x01D61C50 CBZ X21, 0x1D61CB4
	0x01D61C54 ADRP X10, 0x2392000
	0x01D61C58 LDR X8, [X21]
	0x01D61C5C LDR X10, [X10 + 0xE00]
	0x01D61C60 LDRH W9, [X8 + 0x12E]
	0x01D61C64 LDR X1, [X10]
	0x01D61C68 CBZ X9, 0x1D61C8C
	0x01D61C6C LDR X10, [X8 + 0xB0]
	0x01D61C70 ADD X10, X10, 0x8
	0x01D61C74 LDUR X11, [X10 - 0x8]
	0x01D61C78 CMP X11, X1
	0x01D61C7C B.EQ 0x1D61C9C
	0x01D61C80 SUBS X9, X9, 0x1
	0x01D61C84 ADD X10, X10, 0x10
	0x01D61C88 B.NE 0x1D61C74
	0x01D61C8C MOV X0, X21
	0x01D61C90 MOV W2, W31
	0x01D61C94 BL 0x1C5C788
	0x01D61C98 B 0x1D61CA8
	0x01D61C9C LDRSW X9, [X10]
	0x01D61CA0 ADD X8, X8, X9, 0x4, LSL
	0x01D61CA4 ADD X0, X8, 0x138
	0x01D61CA8 LDP X8, X1, [X0]
	0x01D61CAC MOV X0, X21
	0x01D61CB0 BLR X8
	0x01D61CB4 CBZ X22, 0x1D61E40
	0x01D61CB8 MOV X0, X22
	0x01D61CBC BL 0x1C16F18
	0x01D61CC0 B 0x1D61CD8
	0x01D61CC4 B 0x1D61CD8
	0x01D61CC8 B 0x1D61CD8
	0x01D61CCC B 0x1D61CD8
	0x01D61CD0 B 0x1D61CD8
	0x01D61CD4 B 0x1D61CD8
	0x01D61CD8 MOV X20, X0
	0x01D61CDC CMP W1, 0x1
	0x01D61CE0 B.NE 0x1D61D00
	0x01D61CE4 MOV X0, X20
	0x01D61CE8 BL 0x3EB1AD0
	0x01D61CEC LDR X22, [X0]
	0x01D61CF0 BL 0x3EB1AE0
	0x01D61CF4 MOV W20, W31
	0x01D61CF8 CBNZ X21, 0x1D6193C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x2678000
	009 Move X24, 0x2393000
	010 Move X19, 0x2395000
	011 Move X22, 0x2393000
	012 Move X21, 0x2393000
	013 Move W8, [X23+2107]
	014 Move X24, [X24+3488]
	015 Move X19, [X19+1872]
	016 Move X22, [X22+3504]
	017 Move X21, [X21+1608]
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x2393000
	024 Move X0, [X0+1608]
	025 Call 0x1C17CF4
	026 Move X0, 0x2395000
	027 Move X0, [X0+1872]
	028 Call 0x1C17CF4
	029 Move X0, 0x2393000
	030 Move X0, [X0+3504]
	031 Call 0x1C17CF4
	032 Move X0, 0x2393000
	033 Move X0, [X0+3488]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+2107], W8
	037 Move X0, [X24]
	038 Call 0x1C17F10
	039 Move X2, [X19]
	040 Move X1, X20
	041 Move X3, X31
	042 Move X19, X0
	043 Call ObserverDelegate..ctor, X0, X1, X2
	044 Move X0, [X22]
	045 Move W1, 1
	046 Call 0x1C17D6C
	047 Move X8, [X21]
	048 Move X20, X0
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Move X22, 0x2678000
	055 Move W8, [X22+1927]
	056 Compare W8, 0
	057 JumpIfNotEqual {63}
	058 Move X0, 0x2393000
	059 Move X0, [X0+1608]
	060 Call 0x1C17CF4
	061 Move W8, 1
	062 Move [X22+1927], W8
	063 Move X0, [X21]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {69}
	067 Call 0x1C17DFC
	068 Move X0, [X21]
	069 Move X8, [X0+184]
	070 Move X8, [X8]
	071 Compare X8, 0
	072 JumpIfEqual {103}
	073 Move X8, [X8+200]
	074 Compare X8, 0
	075 JumpIfEqual {103}
	076 Compare X20, 0
	077 JumpIfEqual {103}
	078 Move X21, [X8+72]
	079 Compare X21, 0
	080 JumpIfEqual {87}
	081 Move X8, [X20]
	082 Move X0, X21
	083 Move X1, [X8+64]
	084 Call 0x1C17E00
	085 Compare X0, 0
	086 JumpIfEqual {105}
	087 Move W8, [X20+24]
	088 Compare W8, 0
	089 JumpIfEqual {104}
	090 Move [X20+32], X21
	091 Move X0, X19
	092 Move X1, X20
	093 Move X20, [X31+48]
	094 Move X19, [X31+56]
	095 Move X22, [X31+32]
	096 Move X21, [X31+40]
	097 Move X24, [X31+16]
	098 Move X23, [X31+24]
	099 Move X2, X31
	100 Move X30, [X31+64]
	101 Call App.RegisterObserver, X0, X1
	102 Return 
	103 Call 0x1C17F20
	104 Call 0x1C17F28
	105 Call 0x1C17F44
	106 Move X1, X31
	107 Call 0x1C17DEC

Method: System.Void OnDisable()

Disassembly:
	0x01D61CFC B 0x1D6199C
	0x01D61D00 MOV X22, X31
	0x01D61D04 B 0x1D61D0C
	0x01D61D08 MOV X20, X0
	0x01D61D0C CBZ X21, 0x1D61D70
	0x01D61D10 ADRP X10, 0x2392000
	0x01D61D14 LDR X8, [X21]
	0x01D61D18 LDR X10, [X10 + 0xE00]
	0x01D61D1C LDRH W9, [X8 + 0x12E]
	0x01D61D20 LDR X1, [X10]
	0x01D61D24 CBZ X9, 0x1D61D48
	0x01D61D28 LDR X10, [X8 + 0xB0]
	0x01D61D2C ADD X10, X10, 0x8
	0x01D61D30 LDUR X11, [X10 - 0x8]
	0x01D61D34 CMP X11, X1
	0x01D61D38 B.EQ 0x1D61D58
	0x01D61D3C SUBS X9, X9, 0x1
	0x01D61D40 ADD X10, X10, 0x10
	0x01D61D44 B.NE 0x1D61D30
	0x01D61D48 MOV X0, X21
	0x01D61D4C MOV W2, W31
	0x01D61D50 BL 0x1C5C788
	0x01D61D54 B 0x1D61D64
	0x01D61D58 LDRSW X9, [X10]
	0x01D61D5C ADD X8, X8, X9, 0x4, LSL
	0x01D61D60 ADD X0, X8, 0x138
	0x01D61D64 LDP X8, X1, [X0]
	0x01D61D68 MOV X0, X21
	0x01D61D6C BLR X8
	0x01D61D70 CBZ X22, 0x1D61E40
	0x01D61D74 MOV X0, X22
	0x01D61D78 BL 0x1C16F18
	0x01D61D7C B 0x1D61DA0
	0x01D61D80 B 0x1D61DA0
	0x01D61D84 B 0x1D61DA0
	0x01D61D88 B 0x1D61DA0
	0x01D61D8C B 0x1D61DA0
	0x01D61D90 B 0x1D61DA0
	0x01D61D94 B 0x1D61DA0
	0x01D61D98 B 0x1D61DA0
	0x01D61D9C B 0x1D61DA0
	0x01D61DA0 MOV X20, X0
	0x01D61DA4 CMP W1, 0x1
	0x01D61DA8 B.NE 0x1D61DCC
	0x01D61DAC MOV X0, X20
	0x01D61DB0 BL 0x3EB1AD0
	0x01D61DB4 LDR X22, [X0]
	0x01D61DB8 BL 0x3EB1AE0
	0x01D61DBC MOV W23, W31
	0x01D61DC0 MOVZ W20, 0x1
	0x01D61DC4 CBNZ X21, 0x1D61590
	0x01D61DC8 B 0x1D61600
	0x01D61DCC MOV X22, X31
	0x01D61DD0 B 0x1D61DD8
	0x01D61DD4 MOV X20, X0
	0x01D61DD8 CBZ X21, 0x1D61E3C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x2678000
	008 Move X21, 0x2393000
	009 Move X20, 0x2395000
	010 Move X22, 0x2393000
	011 Move W8, [X23+2108]
	012 Move X21, [X21+3488]
	013 Move X20, [X20+1872]
	014 Move X22, [X22+1608]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x2393000
	021 Move X0, [X0+1608]
	022 Call 0x1C17CF4
	023 Move X0, 0x2395000
	024 Move X0, [X0+1872]
	025 Call 0x1C17CF4
	026 Move X0, 0x2395000
	027 Move X0, [X0+1880]
	028 Call 0x1C17CF4
	029 Move X0, 0x2393000
	030 Move X0, [X0+3488]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+2108], W8
	034 Move X0, [X21]
	035 Move X23, 0x2395000
	036 Move X23, [X23+1880]
	037 Call 0x1C17F10
	038 Move X2, [X20]
	039 Move X1, X19
	040 Move X3, X31
	041 Move X20, X0
	042 Call ObserverDelegate..ctor, X0, X1, X2
	043 Move X0, [X22]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X20
	049 Move X1, X31
	050 Call App.DeregisterObserver, X0
	051 Move X0, [X21]
	052 Call 0x1C17F10
	053 Move X2, [X23]
	054 Move X1, X19
	055 Move X3, X31
	056 Move X20, X0
	057 Call ObserverDelegate..ctor, X0, X1, X2
	058 Move X0, X20
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X1, X31
	064 Move X30, [X31+48]
	065 Move X23, [X31+56]
	066 Call App.DeregisterObserver, X0
	067 Return 

Method: System.Void HandleSystemsReadyChanged(SpatialSys.ObservableState.StateChangedEventArgs args)

Disassembly:
	0x01D61DDC ADRP X10, 0x2392000
	0x01D61DE0 LDR X8, [X21]
	0x01D61DE4 LDR X10, [X10 + 0xE00]
	0x01D61DE8 LDRH W9, [X8 + 0x12E]
	0x01D61DEC LDR X1, [X10]
	0x01D61DF0 CBZ X9, 0x1D61E14
	0x01D61DF4 LDR X10, [X8 + 0xB0]
	0x01D61DF8 ADD X10, X10, 0x8
	0x01D61DFC LDUR X11, [X10 - 0x8]
	0x01D61E00 CMP X11, X1
	0x01D61E04 B.EQ 0x1D61E24
	0x01D61E08 SUBS X9, X9, 0x1
	0x01D61E0C ADD X10, X10, 0x10
	0x01D61E10 B.NE 0x1D61DFC
	0x01D61E14 MOV X0, X21
	0x01D61E18 MOV W2, W31
	0x01D61E1C BL 0x1C5C788
	0x01D61E20 B 0x1D61E30
	0x01D61E24 LDRSW X9, [X10]
	0x01D61E28 ADD X8, X8, X9, 0x4, LSL
	0x01D61E2C ADD X0, X8, 0x138
	0x01D61E30 LDP X8, X1, [X0]
	0x01D61E34 MOV X0, X21
	0x01D61E38 BLR X8
	0x01D61E3C CBNZ X22, 0x1D61E48
	0x01D61E40 MOV X0, X20
	0x01D61E44 BL 0x1D2C690
	0x01D61E48 MOV X0, X22
	0x01D61E4C BL 0x1C16F18
	0x01D61E50 BL 0x1990590
	0x01D61E54 STP X30, X21, [X31 - 0x20]!
	0x01D61E58 STP X20, X19, [X31 + 0x10]
	0x01D61E5C ADRP X21, 0x2677000
	0x01D61E60 LDRB W8, [X21 + 0x83F]
	0x01D61E64 MOV X20, X1
	0x01D61E68 MOV X19, X0
	0x01D61E6C TBNZ X8, 0x0, 0x1D61E84
	0x01D61E70 ADRP X0, 0x2394000
	0x01D61E74 LDR X0, [X0 + 0x768]
	0x01D61E78 BL 0x1C16CF4
	0x01D61E7C MOVZ W8, 0x1
	0x01D61E80 STRB W8, [X21 + 0x83F]
	0x01D61E84 CBZ X20, 0x1D61EB8
	0x01D61E88 ADRP X8, 0x2394000
	0x01D61E8C LDR X8, [X8 + 0x768]
	0x01D61E90 MOV X0, X20
	0x01D61E94 MOV X2, X31
	0x01D61E98 LDR X1, [X8]
	0x01D61E9C BL 0x3C33420
	0x01D61EA0 TBZ X0, 0x0, 0x1D61EAC
	0x01D61EA4 MOVZ W8, 0x1
	0x01D61EA8 STRB W8, [X19 + 0x90]
	0x01D61EAC LDP X20, X19, [X31 + 0x10]
	0x01D61EB0 LDP X30, X21, [X31], #0x20
	0x01D61EB4 RET
	0x01D61EB8 BL 0x1C16F20
	0x01D61EBC STP X30, X21, [X31 - 0x20]!
	0x01D61EC0 STP X20, X19, [X31 + 0x10]
	0x01D61EC4 ADRP X21, 0x2677000
	0x01D61EC8 LDRB W8, [X21 + 0x840]
	0x01D61ECC MOV X20, X1
	0x01D61ED0 MOV X19, X0
	0x01D61ED4 TBNZ X8, 0x0, 0x1D61EEC
	0x01D61ED8 ADRP X0, 0x2394000
	0x01D61EDC LDR X0, [X0 + 0x768]
	0x01D61EE0 BL 0x1C16CF4
	0x01D61EE4 MOVZ W8, 0x1
	0x01D61EE8 STRB W8, [X21 + 0x840]
	0x01D61EEC CBZ X20, 0x1D61F1C
	0x01D61EF0 ADRP X8, 0x2394000
	0x01D61EF4 LDR X8, [X8 + 0x768]
	0x01D61EF8 MOV X0, X20
	0x01D61EFC MOV X2, X31
	0x01D61F00 LDR X1, [X8]
	0x01D61F04 BL 0x3C33420
	0x01D61F08 TBZ X0, 0x0, 0x1D61F10
	0x01D61F0C STRB W31, [X19 + 0x90]
	0x01D61F10 LDP X20, X19, [X31 + 0x10]
	0x01D61F14 LDP X30, X21, [X31], #0x20
	0x01D61F18 RET
	0x01D61F1C BL 0x1C16F20
	0x01D61F20 STR D8, [X31 - 0x20]!
	0x01D61F24 STP X30, X19, [X31 + 0x10]
	0x01D61F28 LDRB W9, [X0 + 0x90]
	0x01D61F2C LDRB W8, [X0 + 0x91]
	0x01D61F30 MOV X19, X0
	0x01D61F34 CBZ W9, 0x1D61F6C
	0x01D61F38 CBNZ W8, 0x1D61F8C
	0x01D61F3C LDR V8, [X19 + 0x94]
	0x01D61F40 MOV X0, X31
	0x01D61F44 BL 0x3C3C714
	0x01D61F48 FADD S0, S8, S0
	0x01D61F4C FMOV S1, 0.25
	0x01D61F50 FCMP S0, S1
	0x01D61F54 STR S0, [X19 + 0x94]
	0x01D61F58 B.LT 0x1D61F8C
	0x01D61F5C MOV X0, X19
	0x01D61F60 LDP X30, X19, [X31 + 0x10]
	0x01D61F64 LDR V8, [X31], #0x20
	0x01D61F68 B 0x1D61FAC
	0x01D61F6C CBZ W8, 0x1D61F8C
	0x01D61F70 LDR V8, [X19 + 0x94]
	0x01D61F74 MOV X0, X31
	0x01D61F78 BL 0x3C3C714
	0x01D61F7C FSUB S0, S8, S0
	0x01D61F80 FCMP S0, 0x0
	0x01D61F84 STR S0, [X19 + 0x94]
	0x01D61F88 B.LS 0x1D61F98
	0x01D61F8C LDP X30, X19, [X31 + 0x10]
	0x01D61F90 LDR V8, [X31], #0x20
	0x01D61F94 RET
	0x01D61F98 MOV X0, X19
	0x01D61F9C LDP X30, X19, [X31 + 0x10]
	0x01D61FA0 MOVZ W1, 0x1
	0x01D61FA4 LDR V8, [X31], #0x20
	0x01D61FA8 B 0x1D60950
	0x01D61FAC STR X30, [X31 - 0x30]!
	0x01D61FB0 STP X22, X21, [X31 + 0x10]
	0x01D61FB4 STP X20, X19, [X31 + 0x20]
	0x01D61FB8 ADRP X20, 0x2677000
	0x01D61FBC LDRB W8, [X20 + 0x841]
	0x01D61FC0 MOV X19, X0
	0x01D61FC4 TBNZ X8, 0x0, 0x1D62000
	0x01D61FC8 ADRP X0, 0x2394000
	0x01D61FCC LDR X0, [X0 + 0x5B0]
	0x01D61FD0 BL 0x1C16CF4
	0x01D61FD4 ADRP X0, 0x2394000
	0x01D61FD8 LDR X0, [X0 + 0x738]
	0x01D61FDC BL 0x1C16CF4
	0x01D61FE0 ADRP X0, 0x2394000
	0x01D61FE4 LDR X0, [X0 + 0x748]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x2678000
	009 Move X23, 0x2393000
	010 Move X22, 0x2395000
	011 Move X21, 0x2393000
	012 Move W8, [X20+2109]
	013 Move X23, [X23+3488]
	014 Move X22, [X22+1880]
	015 Move X21, [X21+1608]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move X0, 0x2393000
	022 Move X0, [X0+1608]
	023 Call 0x1C17CF4
	024 Move X0, 0x2395000
	025 Move X0, [X0+1880]
	026 Call 0x1C17CF4
	027 Move X0, 0x2393000
	028 Move X0, [X0+3504]
	029 Call 0x1C17CF4
	030 Move X0, 0x2393000
	031 Move X0, [X0+3488]
	032 Call 0x1C17CF4
	033 Move X0, 0x2394000
	034 Move X0, [X0+3768]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X20+2109], W8
	038 Move X0, [X23]
	039 Call 0x1C17F10
	040 Move X2, [X22]
	041 Move X1, X19
	042 Move X3, X31
	043 Move X20, X0
	044 Call ObserverDelegate..ctor, X0, X1, X2
	045 Move X0, [X21]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, X20
	051 Move X1, X31
	052 Call App.DeregisterObserver, X0
	053 Move X24, 0x2678000
	054 Move W8, [X24+1927]
	055 Compare W8, 0
	056 JumpIfNotEqual {62}
	057 Move X0, 0x2393000
	058 Move X0, [X0+1608]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X24+1927], W8
	062 Move X0, [X21]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {68}
	066 Call 0x1C17DFC
	067 Move X0, [X21]
	068 Move X8, [X0+184]
	069 Move X8, [X8]
	070 Compare X8, 0
	071 JumpIfEqual {156}
	072 Move X8, [X8+200]
	073 Compare X8, 0
	074 JumpIfEqual {156}
	075 Move X8, [X8+72]
	076 Compare X8, 0
	077 JumpIfEqual {156}
	078 Move W8, [X8+76]
	079 Compare W8, 0
	080 JumpIfEqual {148}
	081 Move X0, [X23]
	082 Move X23, 0x2393000
	083 Move X23, [X23+3504]
	084 Call 0x1C17F10
	085 Move X2, [X22]
	086 Move X1, X19
	087 Move X3, X31
	088 Move X20, X0
	089 Call ObserverDelegate..ctor, X0, X1, X2
	090 Move X0, [X23]
	091 Move W1, 1
	092 Call 0x1C17D6C
	093 Move X8, [X21]
	094 Move X19, X0
	095 Move W9, [X8+224]
	096 Compare W9, 0
	097 JumpIfNotEqual {100}
	098 Move X0, X8
	099 Call 0x1C17DFC
	100 Move W8, [X24+1927]
	101 Compare W8, 0
	102 JumpIfNotEqual {108}
	103 Move X0, 0x2393000
	104 Move X0, [X0+1608]
	105 Call 0x1C17CF4
	106 Move W8, 1
	107 Move [X24+1927], W8
	108 Move X0, [X21]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {114}
	112 Call 0x1C17DFC
	113 Move X0, [X21]
	114 Move X8, [X0+184]
	115 Move X8, [X8]
	116 Compare X8, 0
	117 JumpIfEqual {156}
	118 Move X8, [X8+184]
	119 Compare X8, 0
	120 JumpIfEqual {156}
	121 Compare X19, 0
	122 JumpIfEqual {156}
	123 Move X21, [X8+120]
	124 Compare X21, 0
	125 JumpIfEqual {132}
	126 Move X8, [X19]
	127 Move X0, X21
	128 Move X1, [X8+64]
	129 Call 0x1C17E00
	130 Compare X0, 0
	131 JumpIfEqual {158}
	132 Move W8, [X19+24]
	133 Compare W8, 0
	134 JumpIfEqual {157}
	135 Move [X19+32], X21
	136 Move X0, X20
	137 Move X1, X19
	138 Move X20, [X31+48]
	139 Move X19, [X31+56]
	140 Move X22, [X31+32]
	141 Move X21, [X31+40]
	142 Move X24, [X31+16]
	143 Move X23, [X31+24]
	144 Move X2, X31
	145 Move X30, [X31+64]
	146 Call App.RegisterObserver, X0, X1
	147 Return 
	148 Move X20, [X31+48]
	149 Move X19, [X31+56]
	150 Move X22, [X31+32]
	151 Move X21, [X31+40]
	152 Move X24, [X31+16]
	153 Move X23, [X31+24]
	154 Move X30, [X31+64]
	155 Return 
	156 Call 0x1C17F20
	157 Call 0x1C17F28
	158 Call 0x1C17F44
	159 Move X1, X31
	160 Call 0x1C17DEC

Method: System.Void OnDraftAvatarChanged(SpatialSys.ObservableState.StateChangedEventArgs args)

Disassembly:
	0x01D61FE8 BL 0x1C16CF4
	0x01D61FEC ADRP X0, 0x2394000
	0x01D61FF0 LDR X0, [X0 + 0x5A8]
	0x01D61FF4 BL 0x1C16CF4
	0x01D61FF8 MOVZ W8, 0x1
	0x01D61FFC STRB W8, [X20 + 0x841]
	0x01D62000 LDR X0, [X19 + 0x78]
	0x01D62004 MOVZ W8, 0x1
	0x01D62008 STRB W8, [X19 + 0x91]
	0x01D6200C CBZ X0, 0x1D621C8
	0x01D62010 ADRP X20, 0x2393000
	0x01D62014 LDR X20, [X20 + 0x5A8]
	0x01D62018 MOV X1, X31
	0x01D6201C BL 0x3BFCAC0
	0x01D62020 LDR X0, [X20]
	0x01D62024 LDR W20, [X19 + 0x58]
	0x01D62028 LDR W8, [X0 + 0xE0]
	0x01D6202C CBNZ W8, 0x1D62034
	0x01D62030 BL 0x1C16DFC
	0x01D62034 MOV W0, W20
	0x01D62038 MOV X1, X31
	0x01D6203C BL 0x31AD670
	0x01D62040 LDR W0, [X19 + 0x68]
	0x01D62044 MOV X1, X31
	0x01D62048 BL 0x31AD670
	0x01D6204C LDR X0, [X19 + 0x50]
	0x01D62050 CBZ X0, 0x1D621C8
	0x01D62054 MOV X1, X31
	0x01D62058 BL 0x3C32ECC
	0x01D6205C CBZ X0, 0x1D621C8
	0x01D62060 MOVZ W1, 0x1
	0x01D62064 MOV X2, X31
	0x01D62068 BL 0x3C357B4
	0x01D6206C ADRP X8, 0xFFFFFFFFFED88000
	0x01D62070 LDR V2, [X8 + 0x30C]
	0x01D62074 FMOV S0, W31
	0x01D62078 FMOV S1, 1
	0x01D6207C MOV X0, X31
	0x01D62080 BL 0x31B22EC
	0x01D62084 CBZ X0, 0x1D621C8
	0x01D62088 ADRP X22, 0x2393000
	0x01D6208C ADRP X21, 0x2393000
	0x01D62090 LDR X22, [X22 + 0x5B0]
	0x01D62094 LDR X21, [X21 + 0x738]
	0x01D62098 MOV X1, X31
	0x01D6209C BL 0x31C541C
	0x01D620A0 LDR X8, [X22]
	0x01D620A4 MOV X20, X0
	0x01D620A8 MOV X0, X8
	0x01D620AC BL 0x1C16F10
	0x01D620B0 LDR X2, [X21]
	0x01D620B4 MOV X1, X19
	0x01D620B8 MOV X3, X31
	0x01D620BC MOV X21, X0
	0x01D620C0 BL 0x2A6DA40
	0x01D620C4 CBZ X20, 0x1D621C8
	0x01D620C8 MOV X0, X20
	0x01D620CC MOV X1, X21
	0x01D620D0 MOV X2, X31
	0x01D620D4 BL 0x31C8070
	0x01D620D8 CBZ X0, 0x1D621C8
	0x01D620DC MOV X1, X31
	0x01D620E0 BL 0x31BFBD4
	0x01D620E4 STR W0, [X19 + 0x68]
	0x01D620E8 FMOV S0, W31
	0x01D620EC FMOV S1, 1
	0x01D620F0 FMOV S2, 0.75
	0x01D620F4 MOV X0, X31
	0x01D620F8 BL 0x31B22EC
	0x01D620FC CBZ X0, 0x1D621C8
	0x01D62100 ADRP X21, 0x2393000
	0x01D62104 LDR X21, [X21 + 0x748]
	0x01D62108 MOV X1, X31
	0x01D6210C BL 0x31C5CE0
	0x01D62110 LDR X8, [X22]
	0x01D62114 MOV X20, X0
	0x01D62118 MOV X0, X8
	0x01D6211C BL 0x1C16F10
	0x01D62120 LDR X2, [X21]
	0x01D62124 MOV X1, X19
	0x01D62128 MOV X3, X31
	0x01D6212C MOV X21, X0
	0x01D62130 BL 0x2A6DA40
	0x01D62134 CBZ X20, 0x1D621C8
	0x01D62138 MOV X0, X20
	0x01D6213C MOV X1, X21
	0x01D62140 MOV X2, X31
	0x01D62144 BL 0x31C8070
	0x01D62148 CBZ X0, 0x1D621C8
	0x01D6214C MOV X1, X31
	0x01D62150 BL 0x31BFBD4
	0x01D62154 LDR X20, [X19 + 0x88]
	0x01D62158 STR W0, [X19 + 0x58]
	0x01D6215C CBZ X20, 0x1D621C8
	0x01D62160 LDR W8, [X20 + 0x18]
	0x01D62164 CMP W8, 0x1
	0x01D62168 B.LT 0x1D621A0
	0x01D6216C MOV W21, W31
	0x01D62170 CMP W21, W8
	0x01D62174 B.CS 0x1D621CC
	0x01D62178 ADD X8, X20, W21, 0x3, SXTW

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X20, 0x2678000
	008 Move W8, [X20+2110]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x2394000
	015 Move X0, [X0+1776]
	016 Call 0x1C17CF4
	017 Move X0, 0x2394000
	018 Move X0, [X0+1784]
	019 Call 0x1C17CF4
	020 Move X0, 0x2394000
	021 Move X0, [X0+1792]
	022 Call 0x1C17CF4
	023 Move X0, 0x2394000
	024 Move X0, [X0+1800]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+2110], W8
	028 Move [X31+32], X31
	029 Move [X31+40], X31
	030 Move [X31+48], X31
	031 Move X0, [X19+176]
	032 Compare X0, 0
	033 JumpIfEqual {89}
	034 Move X8, 0x2394000
	035 Move X8, [X8+1800]
	036 Move X22, 0x2394000
	037 Move X21, 0x2394000
	038 Move X1, [X8]
	039 Move X22, [X22+1784]
	040 Move X21, [X21+1776]
	041 Add X8, X31, 8
	042 Call List`1<Object>.GetEnumerator, X0
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 Move X8, [X31+24]
	045 Move [X31+2], V0
	046 Move [X31+48], X8
	047 Move X1, [X22]
	048 Add X0, X31, 32
	049 Call Enumerator<Object>.MoveNext, X0
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {70}
	054 Move X20, [X31+48]
	055 Compare X20, 0
	056 JumpIfEqual {87}
	057 Move X0, X20
	058 Move X1, X31
	059 Call Component.get_gameObject, X0
	060 Compare X0, 0
	061 JumpIfEqual {88}
	062 Move X1, X31
	063 Call GameObject.get_activeSelf, X0
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {47}
	068 Move X0, X20
	069 Call ItemController.UpdateIsEquipped, X0
	070 Move X1, [X21]
	071 Add X0, X31, 32
	072 Call Enumerator<Object>.Dispose, X0
	073 Move X19, [X19+64]
	074 Compare X19, 0
	075 JumpIfEqual {80}
	076 Call AvatarItemUtil.GetItemsToPurchaseForDraftAvatar
	077 Move [X19+128], X0
	078 Move X0, X19
	079 Call AnimalLabCartManager.UpdateCartUI, X0
	080 Move X20, [X31+96]
	081 Move X19, [X31+104]
	082 Move X22, [X31+80]
	083 Move X21, [X31+88]
	084 Move X30, [X31+64]
	085 Add X31, X31, 112
	086 Return 
	087 Call 0x1C17F20
	088 Call 0x1C17F20
	089 Call 0x1C17F20
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Call 0x3EB2AD0
	092 Move X20, [X0]
	093 Call 0x3EB2AE0
	094 Move X1, [X21]
	095 Add X0, X31, 32
	096 Call Enumerator<Object>.Dispose, X0
	097 Compare X20, 0
	098 JumpIfEqual {73}
	099 Move X0, X20
	100 Call 0x1C17F18
	101 Move X19, X0
	102 Move X20, X31
	103 Move X19, X0
	104 Move X1, [X21]
	105 Add X0, X31, 32
	106 Call Enumerator<Object>.Dispose, X0
	107 Compare X20, 0
	108 JumpIfNotEqual {111}
	109 Move X0, X19
	110 Call 0x1D2D690
	111 Move X0, X20
	112 Call 0x1C17F18
	113 Call 0x1991590

Method: System.Void TriggerEnter(UnityEngine.Collider other)

Disassembly:
	0x01D62E54 LDR X30, [X31 + 0x88]
	0x01D62E58 LDP D9, D8, [X31 + 0x78]
	0x01D62E5C LDP D11, D10, [X31 + 0x68]
	0x01D62E60 LDP D13, D12, [X31 + 0x58]
	0x01D62E64 LDR V14, [X31 + 0x50]
	0x01D62E68 ADD X31, X31, 0xD0
	0x01D62E6C RET
	0x01D62E70 BL 0x1C16F20
	0x01D62E74 BL 0x1C16F28
	0x01D62E78 STP X30, X25, [X31 - 0x40]!
	0x01D62E7C STP X24, X23, [X31 + 0x10]
	0x01D62E80 STP X22, X21, [X31 + 0x20]
	0x01D62E84 STP X20, X19, [X31 + 0x30]
	0x01D62E88 ADRP X24, 0x2676000
	0x01D62E8C ADRP X25, 0x2393000
	0x01D62E90 ADRP X23, 0x2393000
	0x01D62E94 ADRP X20, 0x2393000
	0x01D62E98 ADRP X22, 0x2393000
	0x01D62E9C ADRP X21, 0x2393000
	0x01D62EA0 LDRB W8, [X24 + 0x846]
	0x01D62EA4 LDR X25, [X25 + 0x7B0]
	0x01D62EA8 LDR X23, [X23 + 0x6C0]
	0x01D62EAC LDR X20, [X20 + 0x6C8]
	0x01D62EB0 LDR X22, [X22 + 0x7B8]
	0x01D62EB4 LDR X21, [X21 + 0x7C0]
	0x01D62EB8 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2677000
	006 Move W8, [X21+2111]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2394000
	014 Move X0, [X0+1896]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2111], W8
	018 Compare X20, 0
	019 JumpIfEqual {37}
	020 Move X8, 0x2394000
	021 Move X8, [X8+1896]
	022 Move X0, X20
	023 Move X2, X31
	024 Move X1, [X8]
	025 Call Component.CompareTag, X0, X1
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {32}
	030 Move W8, 1
	031 Move [X19+144], W8
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return 
	037 Call 0x1C17F20

Method: System.Void TriggerExit(UnityEngine.Collider other)

Disassembly:
	0x01D62EBC TBNZ X8, 0x0, 0x1D62F04
	0x01D62EC0 ADRP X0, 0x2393000
	0x01D62EC4 LDR X0, [X0 + 0x7B0]
	0x01D62EC8 BL 0x1C16CF4
	0x01D62ECC ADRP X0, 0x2393000
	0x01D62ED0 LDR X0, [X0 + 0x6C8]
	0x01D62ED4 BL 0x1C16CF4
	0x01D62ED8 ADRP X0, 0x2393000
	0x01D62EDC LDR X0, [X0 + 0x7C0]
	0x01D62EE0 BL 0x1C16CF4
	0x01D62EE4 ADRP X0, 0x2393000
	0x01D62EE8 LDR X0, [X0 + 0x6C0]
	0x01D62EEC BL 0x1C16CF4
	0x01D62EF0 ADRP X0, 0x2393000
	0x01D62EF4 LDR X0, [X0 + 0x7B8]
	0x01D62EF8 BL 0x1C16CF4
	0x01D62EFC MOVZ W8, 0x1
	0x01D62F00 STRB W8, [X24 + 0x846]
	0x01D62F04 LDR X0, [X25]
	0x01D62F08 MOV W1, W31
	0x01D62F0C BL 0x1C16D6C
	0x01D62F10 STR X0, [X19 + 0x88]
	0x01D62F14 LDR X0, [X23]
	0x01D62F18 BL 0x1C16F10
	0x01D62F1C LDR X1, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2677000
	006 Move W8, [X21+2112]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2394000
	014 Move X0, [X0+1896]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2112], W8
	018 Compare X20, 0
	019 JumpIfEqual {36}
	020 Move X8, 0x2394000
	021 Move X8, [X8+1896]
	022 Move X0, X20
	023 Move X2, X31
	024 Move X1, [X8]
	025 Call Component.CompareTag, X0, X1
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {31}
	030 Move [X19+144], W31
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 
	036 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x01D62F20 MOV X20, X0
	0x01D62F24 BL 0x301B7C4
	0x01D62F28 STR X20, [X19 + 0xA0]
	0x01D62F2C LDR X0, [X22]
	0x01D62F30 BL 0x1C16F10
	0x01D62F34 LDR X1, [X21]
	0x01D62F38 MOV X20, X0
	0x01D62F3C BL 0x301B7C4
	0x01D62F40 STR X20, [X19 + 0xB0]
	0x01D62F44 MOV X0, X19
	0x01D62F48 LDP X20, X19, [X31 + 0x30]
	0x01D62F4C LDP X22, X21, [X31 + 0x20]
	0x01D62F50 LDP X24, X23, [X31 + 0x10]
	0x01D62F54 MOV X1, X31
	0x01D62F58 LDP X30, X25, [X31], #0x40
	0x01D62F5C B 0x3C36C30
	0x01D62F60 STR X30, [X31 - 0x10]!
	0x01D62F64 LDR X0, [X0 + 0x50]
	0x01D62F68 CBZ X0, 0x1D62F88
	0x01D62F6C MOV X1, X31
	0x01D62F70 BL 0x3C32ECC
	0x01D62F74 CBZ X0, 0x1D62F88
	0x01D62F78 MOV W1, W31
	0x01D62F7C MOV X2, X31
	0x01D62F80 LDR X30, [X31], #0x10
	0x01D62F84 B 0x3C357B4
	0x01D62F88 BL 0x1C16F20
	0x01D62F8C STP X30, X21, [X31 - 0x20]!
	0x01D62F90 STP X20, X19, [X31 + 0x10]
	0x01D62F94 ADRP X21, 0x2676000
	0x01D62F98 ADRP X20, 0x2391000
	0x01D62F9C LDRB W8, [X21 + 0x847]
	0x01D62FA0 LDR X20, [X20 + 0x598]
	0x01D62FA4 MOV X19, X0
	0x01D62FA8 TBNZ X8, 0x0, 0x1D62FCC

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move W9, [X0+144]
	005 Move W8, [X0+145]
	006 Move X19, X0
	007 Compare W9, 0
	008 JumpIfEqual {22}
	009 Compare W8, 0
	010 JumpIfNotEqual {30}
	011 Move V8, [X19+148]
	012 Move X0, X31
	013 Call Time.get_deltaTime
	014 Add S0, S8, S0
	015 Move S1, 0.25
	016 NotImplemented "Instruction FCMP not yet implemented."
	017 Move [X19+148], S0
	018 Move X0, X19
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Move V8, [X31+32]
	022 Compare W8, 0
	023 JumpIfEqual {30}
	024 Move V8, [X19+148]
	025 Move X0, X31
	026 Call Time.get_deltaTime
	027 Subtract S0, S8, S0
	028 NotImplemented "Instruction FCMP not yet implemented."
	029 Move [X19+148], S0
	030 Move X30, [X31+16]
	031 Move X19, [X31+24]
	032 Move V8, [X31+32]
	033 Return 
	034 Move X0, X19
	035 Move X30, [X31+16]
	036 Move X19, [X31+24]
	037 Move W1, 1
	038 Move V8, [X31+32]
	039 Call DoodEditorManager.TurnOff, X0, X1
	040 Return 

Method: System.Void TurnOn()

Disassembly:
	0x01D62FAC ADRP X0, 0x2391000
	0x01D62FB0 LDR X0, [X0 + 0x598]
	0x01D62FB4 BL 0x1C16CF4
	0x01D62FB8 ADRP X0, 0x2393000
	0x01D62FBC LDR X0, [X0 + 0x7C8]
	0x01D62FC0 BL 0x1C16CF4
	0x01D62FC4 MOVZ W8, 0x1
	0x01D62FC8 STRB W8, [X21 + 0x847]
	0x01D62FCC LDR X0, [X20]
	0x01D62FD0 LDR X20, [X19 + 0x30]
	0x01D62FD4 LDR W8, [X0 + 0xE0]
	0x01D62FD8 CBNZ W8, 0x1D62FE0
	0x01D62FDC BL 0x1C16DFC
	0x01D62FE0 MOV X0, X20
	0x01D62FE4 MOV X1, X31
	0x01D62FE8 MOV X2, X31
	0x01D62FEC BL 0x3C3883C
	0x01D62FF0 TBZ X0, 0x0, 0x1D63080
	0x01D62FF4 ADRP X20, 0x2393000
	0x01D62FF8 LDR X20, [X20 + 0x7C8]
	0x01D62FFC LDR X0, [X20]
	0x01D63000 LDR W8, [X0 + 0xE0]
	0x01D63004 CBNZ W8, 0x1D6300C
	0x01D63008 BL 0x1C16DFC
	0x01D6300C ADRP X21, 0x2675000
	0x01D63010 LDRB W8, [X21 + 0x85D]
	0x01D63014 CBNZ W8, 0x1D6302C
	0x01D63018 ADRP X0, 0x2392000
	0x01D6301C LDR X0, [X0 + 0x7C8]
	0x01D63020 BL 0x1C16CF4
	0x01D63024 MOVZ W8, 0x1
	0x01D63028 STRB W8, [X21 + 0x85D]
	0x01D6302C LDR X0, [X20]
	0x01D63030 LDR W8, [X0 + 0xE0]
	0x01D63034 CBNZ W8, 0x1D63040
	0x01D63038 BL 0x1C16DFC
	0x01D6303C LDR X0, [X20]
	0x01D63040 LDR X8, [X0 + 0xB8]
	0x01D63044 LDR X9, [X8]
	0x01D63048 CMP X9, 0x0
	0x01D6304C CSEL X8, X31, X19, EQ
	0x01D63050 CBZ X9, 0x1D6306C
	0x01D63054 LDR X9, [X9 + 0x38]
	0x01D63058 CBZ X9, 0x1D63074
	0x01D6305C LDR X9, [X9 + 0xA8]
	0x01D63060 CBZ X9, 0x1D63078
	0x01D63064 LDR X9, [X9 + 0x28]
	0x01D63068 B 0x1D63078
	0x01D6306C MOV X8, X19
	0x01D63070 B 0x1D6307C
	0x01D63074 MOV X8, X19
	0x01D63078 CBZ X8, 0x1D63090
	0x01D6307C STR X9, [X8 + 0x30]
	0x01D63080 LDR X0, [X19 + 0x30]
	0x01D63084 LDP X20, X19, [X31 + 0x10]
	0x01D63088 LDP X30, X21, [X31], #0x20
	0x01D6308C RET
	0x01D63090 BL 0x1C16F20
	0x01D63094 STR X30, [X31 - 0x40]!
	0x01D63098 STP X24, X23, [X31 + 0x10]
	0x01D6309C STP X22, X21, [X31 + 0x20]
	0x01D630A0 STP X20, X19, [X31 + 0x30]
	0x01D630A4 ADRP X23, 0x2675000
	0x01D630A8 ADRP X24, 0x2390000
	0x01D630AC ADRP X19, 0x2392000
	0x01D630B0 ADRP X22, 0x2390000
	0x01D630B4 ADRP X21, 0x2390000
	0x01D630B8 LDRB W8, [X23 + 0x848]
	0x01D630BC LDR X24, [X24 + 0xDA0]
	0x01D630C0 LDR X19, [X19 + 0x7D0]
	0x01D630C4 LDR X22, [X22 + 0xDB0]
	0x01D630C8 LDR X21, [X21 + 0x648]
	0x01D630CC MOV X20, X0
	0x01D630D0 TBNZ X8, 0x0, 0x1D6310C
	0x01D630D4 ADRP X0, 0x2390000
	0x01D630D8 LDR X0, [X0 + 0x648]
	0x01D630DC BL 0x1C16CF4
	0x01D630E0 ADRP X0, 0x2392000
	0x01D630E4 LDR X0, [X0 + 0x7D0]
	0x01D630E8 BL 0x1C16CF4
	0x01D630EC ADRP X0, 0x2390000
	0x01D630F0 LDR X0, [X0 + 0xDB0]
	0x01D630F4 BL 0x1C16CF4
	0x01D630F8 ADRP X0, 0x2390000
	0x01D630FC LDR X0, [X0 + 0xDA0]
	0x01D63100 BL 0x1C16CF4
	0x01D63104 MOVZ W8, 0x1
	0x01D63108 STRB W8, [X23 + 0x848]
	0x01D6310C LDR X0, [X24]
	0x01D63110 BL 0x1C16F10
	0x01D63114 LDR X2, [X19]
	0x01D63118 MOV X1, X20
	0x01D6311C MOV X3, X31
	0x01D63120 MOV X19, X0
	0x01D63124 BL 0x35C52F0
	0x01D63128 LDR X0, [X22]
	0x01D6312C MOVZ W1, 0x1
	0x01D63130 BL 0x1C16D6C
	0x01D63134 LDR X8, [X21]
	0x01D63138 MOV X20, X0
	0x01D6313C LDR W9, [X8 + 0xE0]
	0x01D63140 CBNZ W9, 0x1D6314C
	0x01D63144 MOV X0, X8
	0x01D63148 BL 0x1C16DFC
	0x01D6314C ADRP X22, 0x2675000
	0x01D63150 LDRB W8, [X22 + 0x787]
	0x01D63154 CBNZ W8, 0x1D6316C
	0x01D63158 ADRP X0, 0x2390000
	0x01D6315C LDR X0, [X0 + 0x648]
	0x01D63160 BL 0x1C16CF4
	0x01D63164 MOVZ W8, 0x1
	0x01D63168 STRB W8, [X22 + 0x787]
	0x01D6316C LDR X0, [X21]
	0x01D63170 LDR W8, [X0 + 0xE0]
	0x01D63174 CBNZ W8, 0x1D63180
	0x01D63178 BL 0x1C16DFC
	0x01D6317C LDR X0, [X21]
	0x01D63180 LDR X8, [X0 + 0xB8]
	0x01D63184 LDR X8, [X8]
	0x01D63188 CBZ X8, 0x1D631E0
	0x01D6318C LDR X8, [X8 + 0xB8]
	0x01D63190 CBZ X8, 0x1D631E0
	0x01D63194 CBZ X20, 0x1D631E0
	0x01D63198 LDR X21, [X8 + 0x78]
	0x01D6319C CBZ X21, 0x1D631B4
	0x01D631A0 LDR X8, [X20]
	0x01D631A4 MOV X0, X21
	0x01D631A8 LDR X1, [X8 + 0x40]
	0x01D631AC BL 0x1C16E00
	0x01D631B0 CBZ X0, 0x1D631E8
	0x01D631B4 LDR W8, [X20 + 0x18]
	0x01D631B8 CBZ W8, 0x1D631E4
	0x01D631BC STR X21, [X20 + 0x20]
	0x01D631C0 MOV X0, X19
	0x01D631C4 MOV X1, X20
	0x01D631C8 LDP X20, X19, [X31 + 0x30]
	0x01D631CC LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2677000
	007 Move W8, [X20+2113]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x2394000
	014 Move X0, [X0+1456]
	015 Call 0x1C17CF4
	016 Move X0, 0x2394000
	017 Move X0, [X0+1848]
	018 Call 0x1C17CF4
	019 Move X0, 0x2394000
	020 Move X0, [X0+1864]
	021 Call 0x1C17CF4
	022 Move X0, 0x2394000
	023 Move X0, [X0+1448]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+2113], W8
	027 Move X0, [X19+120]
	028 Move W8, 1
	029 Move [X19+145], W8
	030 Compare X0, 0
	031 JumpIfEqual {154}
	032 Move X20, 0x2393000
	033 Move X20, [X20+1448]
	034 Move X1, X31
	035 Call AudioSource.Play, X0
	036 Move X0, [X20]
	037 Move W20, [X19+88]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move W0, W20
	043 Move X1, X31
	044 Call LeanTween.cancel, X0
	045 Move W0, [X19+104]
	046 Move X1, X31
	047 Call LeanTween.cancel, X0
	048 Move X0, [X19+80]
	049 Compare X0, 0
	050 JumpIfEqual {154}
	051 Move X1, X31
	052 Call Component.get_gameObject, X0
	053 Compare X0, 0
	054 JumpIfEqual {154}
	055 Move W1, 1
	056 Move X2, X31
	057 Call GameObject.SetActive, X0, X1
	058 Move X8, -19365888
	059 Move V2, [X8+780]
	060 Move S0, W31
	061 Move S1, 1
	062 Move X0, X31
	063 Call LeanTween.value, V0, V1, V2
	064 Compare X0, 0
	065 JumpIfEqual {154}
	066 Move X22, 0x2393000
	067 Move X21, 0x2393000
	068 Move X22, [X22+1456]
	069 Move X21, [X21+1848]
	070 Move X1, X31
	071 Call LTDescr.setEaseInCubic, X0
	072 Move X8, [X22]
	073 Move X20, X0
	074 Move X0, X8
	075 Call 0x1C17F10
	076 Move X2, [X21]
	077 Move X1, X19
	078 Move X3, X31
	079 Move X21, X0
	080 Call Action`1<Single>..ctor, X0, X1, X2
	081 Compare X20, 0
	082 JumpIfEqual {154}
	083 Move X0, X20
	084 Move X1, X21
	085 Move X2, X31
	086 Call LTDescr.setOnUpdate, X0, X1
	087 Compare X0, 0
	088 JumpIfEqual {154}
	089 Move X1, X31
	090 Call LTDescr.get_id, X0
	091 Move [X19+104], W0
	092 Move S0, W31
	093 Move S1, 1
	094 Move S2, 0.75
	095 Move X0, X31
	096 Call LeanTween.value, V0, V1, V2
	097 Compare X0, 0
	098 JumpIfEqual {154}
	099 Move X21, 0x2393000
	100 Move X21, [X21+1864]
	101 Move X1, X31
	102 Call LTDescr.setEaseInOutCirc, X0
	103 Move X8, [X22]
	104 Move X20, X0
	105 Move X0, X8
	106 Call 0x1C17F10
	107 Move X2, [X21]
	108 Move X1, X19
	109 Move X3, X31
	110 Move X21, X0
	111 Call Action`1<Single>..ctor, X0, X1, X2
	112 Compare X20, 0
	113 JumpIfEqual {154}
	114 Move X0, X20
	115 Move X1, X21
	116 Move X2, X31
	117 Call LTDescr.setOnUpdate, X0, X1
	118 Compare X0, 0
	119 JumpIfEqual {154}
	120 Move X1, X31
	121 Call LTDescr.get_id, X0
	122 Move X20, [X19+136]
	123 Move [X19+88], W0
	124 Compare X20, 0
	125 JumpIfEqual {154}
	126 Move W8, [X20+24]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move W21, W31
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Add X8, X20, W21
	131 Move X0, [X8+32]
	132 Compare X0, 0
	133 JumpIfEqual {154}
	134 Move W1, 1
	135 Move X2, X31
	136 Call GameObject.SetActive, X0, X1
	137 Move W8, [X20+24]
	138 Add W21, W21, 1
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X0, [X19+48]
	141 Compare X0, 0
	142 JumpIfEqual {154}
	143 Move X1, [X19+168]
	144 Call CategoryScroller.FocusOnCategory, X0, X1
	145 Move X1, [X19+168]
	146 Move X0, X19
	147 Move X20, [X31+32]
	148 Move X19, [X31+40]
	149 Move X22, [X31+16]
	150 Move X21, [X31+24]
	151 Move X30, [X31+48]
	152 Call DoodEditorManager.SelectCategory, X0, X1
	153 Return 
	154 Call 0x1C17F20
	155 Call 0x1C17F28

Method: System.Void TurnOff(System.Boolean playSound = True)

Disassembly:
	0x01D61950 CBZ X9, 0x1D61974
	0x01D61954 LDR X10, [X8 + 0xB0]
	0x01D61958 ADD X10, X10, 0x8
	0x01D6195C LDUR X11, [X10 - 0x8]
	0x01D61960 CMP X11, X1
	0x01D61964 B.EQ 0x1D61984
	0x01D61968 SUBS X9, X9, 0x1
	0x01D6196C ADD X10, X10, 0x10
	0x01D61970 B.NE 0x1D6195C
	0x01D61974 MOV X0, X21
	0x01D61978 MOV W2, W31
	0x01D6197C BL 0x1C5C788
	0x01D61980 B 0x1D61990
	0x01D61984 LDRSW X9, [X10]
	0x01D61988 ADD X8, X8, X9, 0x4, LSL
	0x01D6198C ADD X0, X8, 0x138
	0x01D61990 LDP X8, X1, [X0]
	0x01D61994 MOV X0, X21
	0x01D61998 BLR X8
	0x01D6199C CBNZ X22, 0x1D61B98
	0x01D619A0 CMP W20, 0x12
	0x01D619A4 B.EQ 0x1D619AC
	0x01D619A8 CBNZ W20, 0x1D61624
	0x01D619AC LDR X0, [X19 + 0x48]
	0x01D619B0 CBZ X0, 0x1D61B78
	0x01D619B4 MOVZ W1, 0x1
	0x01D619B8 B 0x1D6161C
	0x01D619BC LDRSW X9, [X10]
	0x01D619C0 ADD X8, X8, X9, 0x4, LSL
	0x01D619C4 ADD X0, X8, 0x138
	0x01D619C8 LDP X8, X1, [X0]
	0x01D619CC MOV X0, X20
	0x01D619D0 BLR X8
	0x01D619D4 MOV X21, X0
	0x01D619D8 CBZ X0, 0x1D61BBC
	0x01D619DC ADRP X23, 0x2392000
	0x01D619E0 ADRP X24, 0x2393000
	0x01D619E4 ADRP X25, 0x2393000
	0x01D619E8 LDR X23, [X23 + 0xE18]
	0x01D619EC LDR X24, [X24 + 0xAB8]
	0x01D619F0 LDR X25, [X25 + 0x1F8]
	0x01D619F4 LDR X8, [X21]
	0x01D619F8 LDR X1, [X23]
	0x01D619FC LDRH W9, [X8 + 0x12E]
	0x01D61A00 CBZ X9, 0x1D61A24
	0x01D61A04 LDR X10, [X8 + 0xB0]
	0x01D61A08 ADD X10, X10, 0x8
	0x01D61A0C LDUR X11, [X10 - 0x8]
	0x01D61A10 CMP X11, X1
	0x01D61A14 B.EQ 0x1D61A34
	0x01D61A18 SUBS X9, X9, 0x1
	0x01D61A1C ADD X10, X10, 0x10
	0x01D61A20 B.NE 0x1D61A0C
	0x01D61A24 MOV X0, X21
	0x01D61A28 MOV W2, W31
	0x01D61A2C BL 0x1C5C788
	0x01D61A30 B 0x1D61A40
	0x01D61A34 LDRSW X9, [X10]
	0x01D61A38 ADD X8, X8, X9, 0x4, LSL
	0x01D61A3C ADD X0, X8, 0x138
	0x01D61A40 LDP X8, X1, [X0]
	0x01D61A44 MOV X0, X21
	0x01D61A48 BLR X8
	0x01D61A4C MOV W20, W0
	0x01D61A50 TBZ X0, 0x0, 0x1D61AE4
	0x01D61A54 LDR X8, [X21]
	0x01D61A58 LDR X1, [X24]
	0x01D61A5C LDRH W9, [X8 + 0x12E]
	0x01D61A60 CBZ X9, 0x1D61A84
	0x01D61A64 LDR X10, [X8 + 0xB0]
	0x01D61A68 ADD X10, X10, 0x8
	0x01D61A6C LDUR X11, [X10 - 0x8]
	0x01D61A70 CMP X11, X1
	0x01D61A74 B.EQ 0x1D61A94
	0x01D61A78 SUBS X9, X9, 0x1
	0x01D61A7C ADD X10, X10, 0x10
	0x01D61A80 B.NE 0x1D61A6C
	0x01D61A84 MOV X0, X21
	0x01D61A88 MOV W2, W31
	0x01D61A8C BL 0x1C5C788
	0x01D61A90 B 0x1D61AA0
	0x01D61A94 LDRSW X9, [X10]
	0x01D61A98 ADD X8, X8, X9, 0x4, LSL
	0x01D61A9C ADD X0, X8, 0x138
	0x01D61AA0 LDP X8, X1, [X0]
	0x01D61AA4 MOV X0, X21
	0x01D61AA8 BLR X8
	0x01D61AAC CBZ X0, 0x1D61B90
	0x01D61AB0 LDR X8, [X19 + 0x80]
	0x01D61AB4 CBZ X8, 0x1D61B94
	0x01D61AB8 LDR X22, [X0 + 0x50]
	0x01D61ABC LDR X0, [X8 + 0x48]
	0x01D61AC0 LDR X1, [X25]
	0x01D61AC4 BL 0x265C594
	0x01D61AC8 MOV X1, X0
	0x01D61ACC MOV X0, X22
	0x01D61AD0 MOV X2, X31
	0x01D61AD4 BL 0x321BA08
	0x01D61AD8 TBZ X0, 0x0, 0x1D619F4
	0x01D61ADC MOV X22, X31
	0x01D61AE0 B 0x1D61AEC
	0x01D61AE4 MOV X22, X31
	0x01D61AE8 MOV W20, W31
	0x01D61AEC MOVZ W23, 0xB
	0x01D61AF0 CBZ X21, 0x1D61B54
	0x01D61AF4 ADRP X10, 0x2392000
	0x01D61AF8 LDR X8, [X21]
	0x01D61AFC LDR X10, [X10 + 0xE00]
	0x01D61B00 LDRH W9, [X8 + 0x12E]
	0x01D61B04 LDR X1, [X10]
	0x01D61B08 CBZ X9, 0x1D61B2C
	0x01D61B0C LDR X10, [X8 + 0xB0]
	0x01D61B10 ADD X10, X10, 0x8
	0x01D61B14 LDUR X11, [X10 - 0x8]
	0x01D61B18 CMP X11, X1
	0x01D61B1C B.EQ 0x1D61B3C
	0x01D61B20 SUBS X9, X9, 0x1
	0x01D61B24 ADD X10, X10, 0x10
	0x01D61B28 B.NE 0x1D61B14
	0x01D61B2C MOV X0, X21
	0x01D61B30 MOV W2, W31
	0x01D61B34 BL 0x1C5C788
	0x01D61B38 B 0x1D61B48
	0x01D61B3C LDRSW X9, [X10]
	0x01D61B40 ADD X8, X8, X9, 0x4, LSL
	0x01D61B44 ADD X0, X8, 0x138
	0x01D61B48 LDP X8, X1, [X0]
	0x01D61B4C MOV X0, X21
	0x01D61B50 BLR X8
	0x01D61B54 CBNZ X22, 0x1D61B98
	0x01D61B58 CMP W23, 0xB
	0x01D61B5C B.NE 0x1D6160C
	0x01D61B60 B 0x1D61610
	0x01D61B64 BL 0x1C16F20
	0x01D61B68 BL 0x1C16F20
	0x01D61B6C BL 0x1C16F20
	0x01D61B70 BL 0x1C16F20
	0x01D61B74 BL 0x1C16F20
	0x01D61B78 BL 0x1C16F20
	0x01D61B7C BL 0x1C16F20
	0x01D61B80 BL 0x1C16F20
	0x01D61B84 BL 0x1C16F20
	0x01D61B88 BL 0x1C16F20
	0x01D61B8C BL 0x1C16F20
	0x01D61B90 BL 0x1C16F20
	0x01D61B94 BL 0x1C16F20
	0x01D61B98 MOV X0, X22

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x2678000
	008 Move W8, [X21+2114]
	009 Move W20, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0x2395000
	016 Move X0, [X0+1456]
	017 Call 0x1C17CF4
	018 Move X0, 0x2394000
	019 Move X0, [X0+3696]
	020 Call 0x1C17CF4
	021 Move X0, 0x2395000
	022 Move X0, [X0+1848]
	023 Call 0x1C17CF4
	024 Move X0, 0x2395000
	025 Move X0, [X0+1856]
	026 Call 0x1C17CF4
	027 Move X0, 0x2395000
	028 Move X0, [X0+1864]
	029 Call 0x1C17CF4
	030 Move X0, 0x2395000
	031 Move X0, [X0+1448]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+2114], W8
	035 Move [X19+145], W31
	036 Move TEMP, X20
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {45}
	040 Move X0, [X19+128]
	041 Compare X0, 0
	042 JumpIfEqual {166}
	043 Move X1, X31
	044 Call AudioSource.Play, X0
	045 Move X8, 0x2395000
	046 Move X8, [X8+1448]
	047 Move W20, [X19+88]
	048 Move X0, [X8]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move W0, W20
	054 Move X1, X31
	055 Call LeanTween.cancel, X0
	056 Move W0, [X19+104]
	057 Move X1, X31
	058 Call LeanTween.cancel, X0
	059 Move S0, 1
	060 Move S1, W31
	061 Move S2, 0.75
	062 Move X0, X31
	063 Call LeanTween.value, V0, V1, V2
	064 Compare X0, 0
	065 JumpIfEqual {166}
	066 Move X22, 0x2395000
	067 Move X21, 0x2395000
	068 Move X22, [X22+1456]
	069 Move X21, [X21+1848]
	070 Move X1, X31
	071 Call LTDescr.setEaseInOutCubic, X0
	072 Move X8, [X22]
	073 Move X20, X0
	074 Move X0, X8
	075 Call 0x1C17F10
	076 Move X2, [X21]
	077 Move X1, X19
	078 Move X3, X31
	079 Move X21, X0
	080 Call Action`1<Single>..ctor, X0, X1, X2
	081 Compare X20, 0
	082 JumpIfEqual {166}
	083 Move X0, X20
	084 Move X1, X21
	085 Move X2, X31
	086 Call LTDescr.setOnUpdate, X0, X1
	087 Compare X0, 0
	088 JumpIfEqual {166}
	089 Move X1, X31
	090 Call LTDescr.get_id, X0
	091 Move [X19+104], W0
	092 Move S0, 1
	093 Move S1, W31
	094 Move S2, 0.5
	095 Move X0, X31
	096 Call LeanTween.value, V0, V1, V2
	097 Compare X0, 0
	098 JumpIfEqual {166}
	099 Move X21, 0x2395000
	100 Move X21, [X21+1864]
	101 Move X1, X31
	102 Call LTDescr.setEaseInCubic, X0
	103 Move X8, [X22]
	104 Move X20, X0
	105 Move X0, X8
	106 Call 0x1C17F10
	107 Move X2, [X21]
	108 Move X1, X19
	109 Move X3, X31
	110 Move X21, X0
	111 Call Action`1<Single>..ctor, X0, X1, X2
	112 Compare X20, 0
	113 JumpIfEqual {166}
	114 Move X22, 0x2394000
	115 Move X23, 0x2395000
	116 Move X22, [X22+3696]
	117 Move X23, [X23+1856]
	118 Move X0, X20
	119 Move X1, X21
	120 Move X2, X31
	121 Call LTDescr.setOnUpdate, X0, X1
	122 Move X8, [X22]
	123 Move X20, X0
	124 Move X0, X8
	125 Call 0x1C17F10
	126 Move X2, [X23]
	127 Move X1, X19
	128 Move X3, X31
	129 Move X21, X0
	130 Call Action..ctor, X0, X1, X2
	131 Compare X20, 0
	132 JumpIfEqual {166}
	133 Move X0, X20
	134 Move X1, X21
	135 Move X2, X31
	136 Call LTDescr.setOnComplete, X0, X1
	137 Compare X0, 0
	138 JumpIfEqual {166}
	139 Move X1, X31
	140 Call LTDescr.get_id, X0
	141 Move X20, [X19+136]
	142 Move [X19+88], W0
	143 Compare X20, 0
	144 JumpIfEqual {166}
	145 Move W8, [X20+24]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move W19, W31
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Add X8, X20, W19
	150 Move X0, [X8+32]
	151 Compare X0, 0
	152 JumpIfEqual {166}
	153 Move W1, W31
	154 Move X2, X31
	155 Call GameObject.SetActive, X0, X1
	156 Move W8, [X20+24]
	157 Add W19, W19, 1
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move X20, [X31+32]
	160 Move X19, [X31+40]
	161 Move X22, [X31+16]
	162 Move X21, [X31+24]
	163 Move X30, [X31+48]
	164 Move X23, [X31+56]
	165 Return 
	166 Call 0x1C17F20
	167 Call 0x1C17F28

Method: System.Void PlaceholderTween(System.Single f)

Disassembly:
	0x01D631D0 LDP X24, X23, [X31 + 0x10]
	0x01D631D4 MOV X2, X31
	0x01D631D8 LDR X30, [X31], #0x40
	0x01D631DC B 0x1D363F0
	0x01D631E0 BL 0x1C16F20
	0x01D631E4 BL 0x1C16F28
	0x01D631E8 BL 0x1C16F44
	0x01D631EC MOV X1, X31
	0x01D631F0 BL 0x1C16DEC
	0x01D631F4 STP X30, X23, [X31 - 0x30]!
	0x01D631F8 STP X22, X21, [X31 + 0x10]
	0x01D631FC STP X20, X19, [X31 + 0x20]
	0x01D63200 ADRP X22, 0x2675000
	0x01D63204 ADRP X23, 0x2390000
	0x01D63208 ADRP X20, 0x2392000
	0x01D6320C ADRP X21, 0x2390000
	0x01D63210 LDRB W8, [X22 + 0x849]
	0x01D63214 LDR X23, [X23 + 0xDA0]
	0x01D63218 LDR X20, [X20 + 0x7D0]
	0x01D6321C LDR X21, [X21 + 0x648]
	0x01D63220 MOV X19, X0
	0x01D63224 TBNZ X8, 0x0, 0x1D63254
	0x01D63228 ADRP X0, 0x2390000
	0x01D6322C LDR X0, [X0 + 0x648]
	0x01D63230 BL 0x1C16CF4
	0x01D63234 ADRP X0, 0x2392000
	0x01D63238 LDR X0, [X0 + 0x7D0]
	0x01D6323C BL 0x1C16CF4
	0x01D63240 ADRP X0, 0x2390000
	0x01D63244 LDR X0, [X0 + 0xDA0]
	0x01D63248 BL 0x1C16CF4
	0x01D6324C MOVZ W8, 0x1
	0x01D63250 STRB W8, [X22 + 0x849]
	0x01D63254 LDR X0, [X23]
	0x01D63258 BL 0x1C16F10
	0x01D6325C LDR X2, [X20]
	0x01D63260 MOV X1, X19
	0x01D63264 MOV X3, X31
	0x01D63268 MOV X20, X0
	0x01D6326C BL 0x35C52F0
	0x01D63270 LDR X0, [X21]
	0x01D63274 LDR W8, [X0 + 0xE0]
	0x01D63278 CBNZ W8, 0x1D63280
	0x01D6327C BL 0x1C16DFC
	0x01D63280 MOV X0, X20
	0x01D63284 LDP X20, X19, [X31 + 0x20]
	0x01D63288 LDP X22, X21, [X31 + 0x10]
	0x01D6328C MOV X1, X31
	0x01D63290 LDP X30, X23, [X31], #0x30
	0x01D63294 B 0x1D36978
	0x01D63298 STR X30, [X31 - 0x30]!
	0x01D6329C STP X22, X21, [X31 + 0x10]
	0x01D632A0 STP X20, X19, [X31 + 0x20]
	0x01D632A4 ADRP X20, 0x2675000
	0x01D632A8 ADRP X21, 0x2390000
	0x01D632AC LDRB W8, [X20 + 0x84A]
	0x01D632B0 LDR X21, [X21 + 0x648]
	0x01D632B4 MOV X19, X0
	0x01D632B8 TBNZ X8, 0x0, 0x1D632DC
	0x01D632BC ADRP X0, 0x2390000
	0x01D632C0 LDR X0, [X0 + 0x648]
	0x01D632C4 BL 0x1C16CF4
	0x01D632C8 ADRP X0, 0x2392000
	0x01D632CC LDR X0, [X0 + 0x7D8]
	0x01D632D0 BL 0x1C16CF4
	0x01D632D4 MOVZ W8, 0x1
	0x01D632D8 STRB W8, [X20 + 0x84A]
	0x01D632DC LDR X0, [X21]
	0x01D632E0 LDR X20, [X19 + 0x20]
	0x01D632E4 LDR W8, [X0 + 0xE0]
	0x01D632E8 CBNZ W8, 0x1D632F0
	0x01D632EC BL 0x1C16DFC
	0x01D632F0 ADRP X22, 0x2675000
	0x01D632F4 LDRB W8, [X22 + 0x787]
	0x01D632F8 CBNZ W8, 0x1D63310
	0x01D632FC ADRP X0, 0x2390000
	0x01D63300 LDR X0, [X0 + 0x648]
	0x01D63304 BL 0x1C16CF4
	0x01D63308 MOVZ W8, 0x1
	0x01D6330C STRB W8, [X22 + 0x787]
	0x01D63310 LDR X0, [X21]
	0x01D63314 LDR W8, [X0 + 0xE0]
	0x01D63318 CBNZ W8, 0x1D63324
	0x01D6331C BL 0x1C16DFC
	0x01D63320 LDR X0, [X21]
	0x01D63324 LDR X8, [X0 + 0xB8]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], D8
	003 Move [X31+32], X30
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X19, X0
	008 Move X0, [X0+96]
	009 Compare X0, 0
	010 JumpIfEqual {101}
	011 Move V8, V0
	012 Move S0, 1
	013 Subtract S0, S0, S8
	014 Move X1, X31
	015 Call CanvasGroup.set_alpha, X0, V0
	016 Move X0, [X19+96]
	017 Compare X0, 0
	018 JumpIfEqual {101}
	019 Move X1, X31
	020 Call Component.get_transform, X0
	021 Move X21, 0x2676000
	022 Move W8, [X21+2139]
	023 Move X20, X0
	024 Compare W8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, 0x2391000
	027 Move X0, [X0+1440]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+2139], W8
	031 Move S0, 1
	032 NotImplemented "Instruction FCMP not yet implemented."
	033 NotImplemented "Instruction FMIN not yet implemented."
	034 Move S1, W31
	035 NotImplemented "Instruction FCSEL not yet implemented."
	036 Compare X20, 0
	037 JumpIfEqual {101}
	038 Move X8, 0x2391000
	039 Move X8, [X8+1440]
	040 Move S2, 1.5
	041 Move V3, 0
	042 Move X0, X20
	043 Move X8, [X8]
	044 Move X1, X31
	045 Move [X31], V4
	046 Move X8, [X8+184]
	047 Move V0, [X8+20]
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Subtract S2, S2, S0
	050 Subtract V3, V3, V1
	051 Multiply S2, S4, S2
	052 NotImplemented "Instruction INVALID not yet implemented."
	053 Add S2, S0, S2
	054 Add V0, V1, V3
	055 Move S1, V0.S[1]
	056 Call Transform.set_localScale, X0, X1
	057 Move X0, [X19+96]
	058 Compare X0, 0
	059 JumpIfEqual {101}
	060 Move X1, X31
	061 Call Component.get_transform, X0
	062 Move X8, [X19+96]
	063 Compare X8, 0
	064 JumpIfEqual {101}
	065 Move X20, X0
	066 Move X0, X8
	067 Move X1, X31
	068 Call Component.get_transform, X0
	069 Compare X0, 0
	070 JumpIfEqual {101}
	071 Move X1, X31
	072 Call Transform.get_localPosition, X0
	073 Move X0, [X19+96]
	074 Compare X0, 0
	075 JumpIfEqual {101}
	076 Move X1, X31
	077 Move V8, V0
	078 Call Component.get_transform, X0
	079 Compare X0, 0
	080 JumpIfEqual {101}
	081 Move X1, X31
	082 Call Transform.get_localPosition, X0
	083 Compare X20, 0
	084 JumpIfEqual {101}
	085 Move V2, [X31]
	086 Move S0, -1.5
	087 Move X0, X20
	088 Move X20, [X31+48]
	089 Move X19, [X31+56]
	090 Multiply S0, S2, S0
	091 Move S2, W31
	092 Add S2, S0, S2
	093 Move V0, V8
	094 Move X30, [X31+32]
	095 Move X21, [X31+40]
	096 Move V8, [X31+16]
	097 Move X1, X31
	098 Add X31, X31, 64
	099 Call Transform.set_localPosition, X0, X1
	100 Return 
	101 Call 0x1C17F20

Method: System.Void UITween(System.Single f)

Disassembly:
	0x01D63328 LDR X8, [X8]
	0x01D6332C CBZ X8, 0x1D633CC
	0x01D63330 LDR X8, [X8 + 0xB8]
	0x01D63334 CBZ X8, 0x1D633CC
	0x01D63338 CBZ X20, 0x1D633CC
	0x01D6333C LDR X1, [X8 + 0x78]
	0x01D63340 MOV X0, X20
	0x01D63344 MOV X2, X31
	0x01D63348 BL 0x1E1F0D8
	0x01D6334C LDRB W8, [X22 + 0x787]
	0x01D63350 LDR X19, [X19 + 0x20]
	0x01D63354 CBNZ W8, 0x1D6336C
	0x01D63358 ADRP X0, 0x2390000
	0x01D6335C LDR X0, [X0 + 0x648]
	0x01D63360 BL 0x1C16CF4
	0x01D63364 MOVZ W8, 0x1
	0x01D63368 STRB W8, [X22 + 0x787]
	0x01D6336C LDR X0, [X21]
	0x01D63370 LDR W8, [X0 + 0xE0]
	0x01D63374 CBNZ W8, 0x1D63380
	0x01D63378 BL 0x1C16DFC
	0x01D6337C LDR X0, [X21]

ISIL:
	001 Move [X31-16], D8
	002 Move [X31+8], X30
	003 Move X0, [X0+80]
	004 Compare X0, 0
	005 JumpIfEqual {25}
	006 Move X1, X31
	007 Move V8, V0
	008 Call Component.get_transform, X0
	009 Compare X0, 0
	010 JumpIfEqual {25}
	011 Move S1, 1
	012 Move S2, 5
	013 NotImplemented "Instruction FMIN not yet implemented."
	014 Move X30, [X31+8]
	015 Multiply S1, S1, S2
	016 NotImplemented "Instruction FCMP not yet implemented."
	017 Subtract S1, S2, S1
	018 Move S0, W31
	019 NotImplemented "Instruction FCSEL not yet implemented."
	020 Move S1, W31
	021 Move X1, X31
	022 Move V8, [X31+16]
	023 Call Transform.set_localPosition, X0, X1
	024 Return 
	025 Call 0x1C17F20

Method: System.Void SelectCategory(AnimalCompany.CategoryController categoryController)

Disassembly:
	0x01D607E8 MOV X2, X31
	0x01D607EC BL 0x3C357B4
	0x01D607F0 LDR X0, [X19 + 0xB0]
	0x01D607F4 CBZ X0, 0x1D608DC
	0x01D607F8 LDR X2, [X24]
	0x01D607FC MOV W1, W22
	0x01D60800 BL 0x301BCCC
	0x01D60804 LDR X2, [X25]
	0x01D60808 MOV X22, X0
	0x01D6080C MOV X0, X20
	0x01D60810 MOV W1, W21
	0x01D60814 BL 0x301BCCC
	0x01D60818 CBZ X22, 0x1D608DC
	0x01D6081C LDR W2, [X19 + 0x98]
	0x01D60820 MOV X1, X0
	0x01D60824 MOV X0, X22
	0x01D60828 MOV W3, W31
	0x01D6082C BL 0x1D626C4
	0x01D60830 LDR W8, [X20 + 0x18]
	0x01D60834 ADD W21, W21, 0x1
	0x01D60838 ADD W0, W8, W23
	0x01D6083C ADD W8, W23, W21
	0x01D60840 CMP W8, W0
	0x01D60844 B.LT 0x1D607B0
	0x01D60848 B 0x1D608C4
	0x01D6084C ADRP X8, 0x2395000
	0x01D60850 LDR X8, [X8 + 0x6E8]
	0x01D60854 MOVN X9, 0x0
	0x01D60858 ADD X0, X31, 0x8
	0x01D6085C MOV X1, X31
	0x01D60860 LDR X8, [X8]
	0x01D60864 STP X8, X9, [X31 + 0x8]
	0x01D60868 LDR W8, [X19 + 0x98]
	0x01D6086C STR W8, [X31 + 0x18]
	0x01D60870 BL 0x33B162C
	0x01D60874 ADRP X8, 0x2395000
	0x01D60878 LDR X8, [X8 + 0x730]
	0x01D6087C MOV X1, X0
	0x01D60880 MOV X2, X31
	0x01D60884 LDR X8, [X8]
	0x01D60888 MOV X0, X8
	0x01D6088C BL 0x321B938
	0x01D60890 ADRP X8, 0x2393000
	0x01D60894 LDR X8, [X8 + 0xA28]
	0x01D60898 MOV X19, X0
	0x01D6089C LDR X8, [X8]
	0x01D608A0 LDR W9, [X8 + 0xE0]
	0x01D608A4 CBNZ W9, 0x1D608B0
	0x01D608A8 MOV X0, X8
	0x01D608AC BL 0x1C16DFC
	0x01D608B0 MOV X0, X19
	0x01D608B4 MOV X1, X31
	0x01D608B8 BL 0x3C06A04
	0x01D608BC LDR W8, [X20 + 0x18]
	0x01D608C0 ADD W0, W8, W23
	0x01D608C4 LDP X20, X19, [X31 + 0x70]
	0x01D608C8 LDP X22, X21, [X31 + 0x60]
	0x01D608CC LDP X24, X23, [X31 + 0x50]
	0x01D608D0 LDP X30, X25, [X31 + 0x40]
	0x01D608D4 ADD X31, X31, 0x80
	0x01D608D8 RET
	0x01D608DC BL 0x1C16F20
	0x01D608E0 BL 0x1C16F20
	0x01D608E4 B 0x1D608EC
	0x01D608E8 B 0x1D608EC
	0x01D608EC MOV X20, X0
	0x01D608F0 CMP W1, 0x1
	0x01D608F4 B.NE 0x1D60920
	0x01D608F8 MOV X0, X20
	0x01D608FC BL 0x3EB1AD0
	0x01D60900 LDR X21, [X0]
	0x01D60904 BL 0x3EB1AE0
	0x01D60908 LDR X1, [X22]
	0x01D6090C ADD X0, X31, 0x20
	0x01D60910 BL 0x2BC434C
	0x01D60914 CBZ X21, 0x1D606FC
	0x01D60918 MOV X0, X21
	0x01D6091C BL 0x1C16F18
	0x01D60920 MOV X21, X31
	0x01D60924 B 0x1D6092C
	0x01D60928 MOV X20, X0
	0x01D6092C LDR X1, [X22]
	0x01D60930 ADD X0, X31, 0x20
	0x01D60934 BL 0x2BC434C
	0x01D60938 CBNZ X21, 0x1D60944
	0x01D6093C MOV X0, X20
	0x01D60940 BL 0x1D2C690
	0x01D60944 MOV X0, X21
	0x01D60948 BL 0x1C16F18
	0x01D6094C BL 0x1990590
	0x01D60950 STP X30, X23, [X31 - 0x30]!
	0x01D60954 STP X22, X21, [X31 + 0x10]
	0x01D60958 STP X20, X19, [X31 + 0x20]
	0x01D6095C ADRP X21, 0x2678000
	0x01D60960 LDRB W8, [X21 + 0x842]
	0x01D60964 MOV W20, W1
	0x01D60968 MOV X19, X0
	0x01D6096C TBNZ X8, 0x0, 0x1D609C0
	0x01D60970 ADRP X0, 0x2395000
	0x01D60974 LDR X0, [X0 + 0x5B0]
	0x01D60978 BL 0x1C16CF4
	0x01D6097C ADRP X0, 0x2394000
	0x01D60980 LDR X0, [X0 + 0xE70]
	0x01D60984 BL 0x1C16CF4
	0x01D60988 ADRP X0, 0x2395000
	0x01D6098C LDR X0, [X0 + 0x738]
	0x01D60990 BL 0x1C16CF4
	0x01D60994 ADRP X0, 0x2395000
	0x01D60998 LDR X0, [X0 + 0x740]
	0x01D6099C BL 0x1C16CF4
	0x01D609A0 ADRP X0, 0x2395000
	0x01D609A4 LDR X0, [X0 + 0x748]
	0x01D609A8 BL 0x1C16CF4
	0x01D609AC ADRP X0, 0x2395000
	0x01D609B0 LDR X0, [X0 + 0x5A8]
	0x01D609B4 BL 0x1C16CF4
	0x01D609B8 MOVZ W8, 0x1
	0x01D609BC STRB W8, [X21 + 0x842]
	0x01D609C0 STRB W31, [X19 + 0x91]
	0x01D609C4 TBZ X20, 0x0, 0x1D609D8
	0x01D609C8 LDR X0, [X19 + 0x80]
	0x01D609CC CBZ X0, 0x1D60B94
	0x01D609D0 MOV X1, X31
	0x01D609D4 BL 0x3BFCAC0
	0x01D609D8 ADRP X8, 0x2395000
	0x01D609DC LDR X8, [X8 + 0x5A8]
	0x01D609E0 LDR W20, [X19 + 0x58]
	0x01D609E4 LDR X0, [X8]
	0x01D609E8 LDR W8, [X0 + 0xE0]
	0x01D609EC CBNZ W8, 0x1D609F4
	0x01D609F0 BL 0x1C16DFC
	0x01D609F4 MOV W0, W20
	0x01D609F8 MOV X1, X31
	0x01D609FC BL 0x31AD670
	0x01D60A00 LDR W0, [X19 + 0x68]
	0x01D60A04 MOV X1, X31
	0x01D60A08 BL 0x31AD670
	0x01D60A0C FMOV S0, 1
	0x01D60A10 FMOV S1, W31
	0x01D60A14 FMOV S2, 0.75
	0x01D60A18 MOV X0, X31
	0x01D60A1C BL 0x31B22EC
	0x01D60A20 CBZ X0, 0x1D60B94
	0x01D60A24 ADRP X22, 0x2395000
	0x01D60A28 ADRP X21, 0x2395000
	0x01D60A2C LDR X22, [X22 + 0x5B0]
	0x01D60A30 LDR X21, [X21 + 0x738]
	0x01D60A34 MOV X1, X31
	0x01D60A38 BL 0x31C5524
	0x01D60A3C LDR X8, [X22]
	0x01D60A40 MOV X20, X0
	0x01D60A44 MOV X0, X8
	0x01D60A48 BL 0x1C16F10
	0x01D60A4C LDR X2, [X21]
	0x01D60A50 MOV X1, X19
	0x01D60A54 MOV X3, X31
	0x01D60A58 MOV X21, X0
	0x01D60A5C BL 0x2A6DA40
	0x01D60A60 CBZ X20, 0x1D60B94
	0x01D60A64 MOV X0, X20
	0x01D60A68 MOV X1, X21
	0x01D60A6C MOV X2, X31
	0x01D60A70 BL 0x31C8070
	0x01D60A74 CBZ X0, 0x1D60B94

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X21, 0x2679000
	010 Move W8, [X21+2115]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0x2396000
	018 Move X0, [X0+1672]
	019 Call 0x1C17CF4
	020 Move X0, 0x2396000
	021 Move X0, [X0+1680]
	022 Call 0x1C17CF4
	023 Move X0, 0x2396000
	024 Move X0, [X0+1688]
	025 Call 0x1C17CF4
	026 Move X0, 0x2396000
	027 Move X0, [X0+1696]
	028 Call 0x1C17CF4
	029 Move X0, 0x2394000
	030 Move X0, [X0+1432]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+2115], W8
	034 Move [X31+32], X31
	035 Move [X31+40], X31
	036 Move [X31+48], X31
	037 Compare X20, 0
	038 JumpIfEqual {160}
	039 Move W8, [X20+40]
	040 Move X0, [X19+160]
	041 Move [X19+152], W8
	042 Compare X0, 0
	043 JumpIfEqual {160}
	044 Move X8, 0x2396000
	045 Move X8, [X8+1696]
	046 Move X23, 0x2396000
	047 Move X24, 0x2394000
	048 Move X22, 0x2396000
	049 Move X1, [X8]
	050 Move X23, [X23+1680]
	051 Move X24, [X24+1432]
	052 Move X22, [X22+1672]
	053 Add X8, X31, 8
	054 Call List`1<Object>.GetEnumerator, X0
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 Move X8, [X31+24]
	057 Move [X31+2], V0
	058 Move [X31+48], X8
	059 Move X1, [X23]
	060 Add X0, X31, 32
	061 Call Enumerator<Object>.MoveNext, X0
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {81}
	066 Move X0, [X24]
	067 Move X21, [X31+48]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X0, X21
	073 Move X1, X20
	074 Move X2, X31
	075 Call Object.op_Equality, X0, X1
	076 Compare X21, 0
	077 JumpIfEqual {159}
	078 And W1, W0, 1
	079 Move X0, X21
	080 Call CategoryController.SetIsSelectedVisual, X0, X1
	081 Move X1, [X22]
	082 Add X0, X31, 32
	083 Call Enumerator<Object>.Dispose, X0
	084 Move X0, [X19+32]
	085 Compare X0, 0
	086 JumpIfEqual {160}
	087 Move W8, [X20+40]
	088 Compare W8, 0
	089 JumpIfEqual {115}
	090 Move W1, 1
	091 Move X2, X31
	092 Call GameObject.SetActive, X0, X1
	093 Move X0, [X19+40]
	094 Compare X0, 0
	095 JumpIfEqual {160}
	096 Move W1, W31
	097 Move X2, X31
	098 Call GameObject.SetActive, X0, X1
	099 Move X0, X19
	100 Call DoodEditorManager.LoadItemsForCategory, X0
	101 Move X8, [X19+112]
	102 Compare X8, 0
	103 JumpIfEqual {160}
	104 Move W21, W0
	105 Move X0, X8
	106 Move X1, X31
	107 Call Component.get_gameObject, X0
	108 Compare X0, 0
	109 JumpIfEqual {160}
	110 Compare W21, 0
	111 JumpIfEqual {134}
	112 Move W1, W31
	113 Move X2, X31
	114 Call GameObject.SetActive, X0, X1
	115 Move W1, W31
	116 Move X2, X31
	117 Call GameObject.SetActive, X0, X1
	118 Move X0, [X19+40]
	119 Compare X0, 0
	120 JumpIfEqual {160}
	121 Move W1, 1
	122 Move X2, X31
	123 Call GameObject.SetActive, X0, X1
	124 Move X0, [X19+112]
	125 Compare X0, 0
	126 JumpIfEqual {160}
	127 Move X1, X31
	128 Call Component.get_gameObject, X0
	129 Compare X0, 0
	130 JumpIfEqual {160}
	131 Move W1, W31
	132 Move X2, X31
	133 Call GameObject.SetActive, X0, X1
	134 Move W1, 1
	135 Move X2, X31
	136 Call GameObject.SetActive, X0, X1
	137 Move X0, [X19+112]
	138 Compare X0, 0
	139 JumpIfEqual {160}
	140 Move X8, [X0]
	141 Move X1, [X20+136]
	142 Move X9, [X8+1368]
	143 Move X2, [X8+1376]
	144 NotImplemented "Instruction BLR not yet implemented."
	145 Move X0, [X19+56]
	146 Compare X0, 0
	147 JumpIfEqual {160}
	148 Move X1, X31
	149 Call ItemScroller.ResetScroll, X0
	150 Move X20, [X31+112]
	151 Move X19, [X31+120]
	152 Move X22, [X31+96]
	153 Move X21, [X31+104]
	154 Move X24, [X31+80]
	155 Move X23, [X31+88]
	156 Move X30, [X31+64]
	157 Add X31, X31, 128
	158 Return 
	159 Call 0x1C17F20
	160 Call 0x1C17F20
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Call 0x3EB2AD0
	163 Move X8, [X0]
	164 Move [X31+72], X8
	165 Call 0x3EB2AE0
	166 Move X1, [X22]
	167 Add X0, X31, 32
	168 Call Enumerator<Object>.Dispose, X0
	169 Move X0, [X31+72]
	170 Compare X0, 0
	171 JumpIfEqual {84}
	172 Call 0x1C17F18
	173 Move X19, X0
	174 Move [X31+72], X31
	175 Move X19, X0
	176 Move X1, [X22]
	177 Add X0, X31, 32
	178 Call Enumerator<Object>.Dispose, X0
	179 Move X8, [X31+72]
	180 Compare X8, 0
	181 JumpIfNotEqual {184}
	182 Move X0, X19
	183 Call 0x1D2D690
	184 Move X0, [X31+72]
	185 Call 0x1C17F18
	186 Call 0x1991590

Method: System.Int32 LoadItemsForCategory()

Disassembly:
	0x01D615DC CBZ X0, 0x1D61B78
	0x01D615E0 MOV W1, W31
	0x01D615E4 B 0x1D6161C
	0x01D615E8 LDRSW X9, [X10]
	0x01D615EC ADD X8, X8, X9, 0x4, LSL
	0x01D615F0 ADD X0, X8, 0x138
	0x01D615F4 LDP X8, X1, [X0]
	0x01D615F8 MOV X0, X21
	0x01D615FC BLR X8
	0x01D61600 CBNZ X22, 0x1D61B98
	0x01D61604 CMP W23, 0x5
	0x01D61608 B.EQ 0x1D61610
	0x01D6160C CBNZ W23, 0x1D61624
	0x01D61610 LDR X0, [X19 + 0x48]
	0x01D61614 CBZ X0, 0x1D61B78
	0x01D61618 AND W1, W20, 0x1
	0x01D6161C MOV X2, X31
	0x01D61620 BL 0x3C357B4
	0x01D61624 LDP X20, X19, [X31 + 0x60]
	0x01D61628 LDP X22, X21, [X31 + 0x50]
	0x01D6162C LDP X24, X23, [X31 + 0x40]
	0x01D61630 LDP X26, X25, [X31 + 0x30]
	0x01D61634 LDP X28, X27, [X31 + 0x20]
	0x01D61638 LDP X29, X30, [X31 + 0x10]
	0x01D6163C ADD X31, X31, 0x70
	0x01D61640 RET
	0x01D61644 LDR X21, [X8 + 0x80]
	0x01D61648 CBZ X21, 0x1D61B78
	0x01D6164C ADRP X10, 0x2392000
	0x01D61650 LDR X8, [X21]
	0x01D61654 LDR X10, [X10 + 0xF70]
	0x01D61658 LDRH W9, [X8 + 0x12E]
	0x01D6165C LDR X1, [X10]
	0x01D61660 CBZ X9, 0x1D61684
	0x01D61664 LDR X10, [X8 + 0xB0]
	0x01D61668 ADD X10, X10, 0x8
	0x01D6166C LDUR X11, [X10 - 0x8]
	0x01D61670 CMP X11, X1
	0x01D61674 B.EQ 0x1D616F0
	0x01D61678 SUBS X9, X9, 0x1
	0x01D6167C ADD X10, X10, 0x10
	0x01D61680 B.NE 0x1D6166C
	0x01D61684 MOV X0, X21
	0x01D61688 MOV W2, W31
	0x01D6168C BL 0x1C5C788
	0x01D61690 B 0x1D616FC
	0x01D61694 LDR X21, [X19 + 0x80]
	0x01D61698 CBZ X21, 0x1D61B78
	0x01D6169C LDR X8, [X21 + 0x58]
	0x01D616A0 CBZ X8, 0x1D61B78
	0x01D616A4 CBZ X0, 0x1D61B78
	0x01D616A8 LDR W1, [X8 + 0x4C]
	0x01D616AC BL 0x1D4E604
	0x01D616B0 CBZ X0, 0x1D616DC
	0x01D616B4 ADRP X8, 0x2393000
	0x01D616B8 LDR X20, [X0 + 0x50]
	0x01D616BC LDR X0, [X21 + 0x48]
	0x01D616C0 LDR X8, [X8 + 0x1F8]
	0x01D616C4 LDR X1, [X8]
	0x01D616C8 BL 0x265C594
	0x01D616CC MOV X1, X0
	0x01D616D0 MOV X0, X20
	0x01D616D4 MOV X2, X31
	0x01D616D8 BL 0x321BA08
	0x01D616DC LDR X8, [X19 + 0x48]
	0x01D616E0 CBZ X8, 0x1D61B78
	0x01D616E4 AND W1, W0, 0x1
	0x01D616E8 MOV X0, X8
	0x01D616EC B 0x1D6161C
	0x01D616F0 LDRSW X9, [X10]
	0x01D616F4 ADD X8, X8, X9, 0x4, LSL
	0x01D616F8 ADD X0, X8, 0x138
	0x01D616FC LDP X8, X1, [X0]
	0x01D61700 MOV X0, X21
	0x01D61704 BLR X8
	0x01D61708 MOV X21, X0
	0x01D6170C CBZ X0, 0x1D61BB8
	0x01D61710 ADRP X23, 0x2392000
	0x01D61714 ADRP X24, 0x2392000
	0x01D61718 ADRP X27, 0x2393000
	0x01D6171C ADRP X28, 0x2393000
	0x01D61720 LDR X23, [X23 + 0xE18]
	0x01D61724 LDR X24, [X24 + 0xF78]
	0x01D61728 LDR X27, [X27 + 0xAC0]
	0x01D6172C LDR X28, [X28 + 0x1F8]
	0x01D61730 ADRP X25, 0x2677000
	0x01D61734 MOVZ W26, 0x1
	0x01D61738 LDR X8, [X21]
	0x01D6173C LDR X1, [X23]
	0x01D61740 LDRH W9, [X8 + 0x12E]
	0x01D61744 CBZ X9, 0x1D61768
	0x01D61748 LDR X10, [X8 + 0xB0]
	0x01D6174C ADD X10, X10, 0x8
	0x01D61750 LDUR X11, [X10 - 0x8]
	0x01D61754 CMP X11, X1
	0x01D61758 B.EQ 0x1D61778
	0x01D6175C SUBS X9, X9, 0x1
	0x01D61760 ADD X10, X10, 0x10
	0x01D61764 B.NE 0x1D61750
	0x01D61768 MOV X0, X21
	0x01D6176C MOV W2, W31
	0x01D61770 BL 0x1C5C788
	0x01D61774 B 0x1D61784
	0x01D61778 LDRSW X9, [X10]
	0x01D6177C ADD X8, X8, X9, 0x4, LSL
	0x01D61780 ADD X0, X8, 0x138
	0x01D61784 LDP X8, X1, [X0]
	0x01D61788 MOV X0, X21
	0x01D6178C BLR X8
	0x01D61790 TBZ X0, 0x0, 0x1D61930
	0x01D61794 LDR X8, [X21]
	0x01D61798 LDR X1, [X24]
	0x01D6179C LDRH W9, [X8 + 0x12E]
	0x01D617A0 CBZ X9, 0x1D617C4
	0x01D617A4 LDR X10, [X8 + 0xB0]
	0x01D617A8 ADD X10, X10, 0x8
	0x01D617AC LDUR X11, [X10 - 0x8]
	0x01D617B0 CMP X11, X1
	0x01D617B4 B.EQ 0x1D617D4
	0x01D617B8 SUBS X9, X9, 0x1
	0x01D617BC ADD X10, X10, 0x10
	0x01D617C0 B.NE 0x1D617AC
	0x01D617C4 MOV X0, X21
	0x01D617C8 MOV W2, W31
	0x01D617CC BL 0x1C5C788
	0x01D617D0 B 0x1D617E0
	0x01D617D4 LDRSW X9, [X10]
	0x01D617D8 ADD X8, X8, X9, 0x4, LSL
	0x01D617DC ADD X0, X8, 0x138
	0x01D617E0 LDP X8, X1, [X0]
	0x01D617E4 MOV X0, X21
	0x01D617E8 BLR X8
	0x01D617EC MOV X22, X0
	0x01D617F0 LDR X0, [X20]
	0x01D617F4 LDR W8, [X0 + 0xE0]
	0x01D617F8 CBNZ W8, 0x1D61800
	0x01D617FC BL 0x1C16DFC
	0x01D61800 LDRB W8, [X25 + 0x787]
	0x01D61804 CBNZ W8, 0x1D61814
	0x01D61808 MOV X0, X20
	0x01D6180C BL 0x1C16CF4
	0x01D61810 STRB W26, [X25 + 0x787]
	0x01D61814 LDR X0, [X20]
	0x01D61818 LDR W8, [X0 + 0xE0]
	0x01D6181C CBNZ W8, 0x1D61828
	0x01D61820 BL 0x1C16DFC
	0x01D61824 LDR X0, [X20]
	0x01D61828 LDR X8, [X0 + 0xB8]
	0x01D6182C LDR X8, [X8]
	0x01D61830 CBZ X8, 0x1D61B80
	0x01D61834 LDR X8, [X8 + 0xC8]
	0x01D61838 CBZ X8, 0x1D61B84
	0x01D6183C LDR X0, [X8 + 0x50]
	0x01D61840 CBZ X0, 0x1D61B7C
	0x01D61844 LDR X3, [X27]
	0x01D61848 ADD X2, X31, 0x0
	0x01D6184C MOV X1, X22
	0x01D61850 BL 0x2609E34
	0x01D61854 TBZ X0, 0x0, 0x1D61738
	0x01D61858 LDR X8, [X31]
	0x01D6185C CBZ X8, 0x1D61B8C
	0x01D61860 LDR X8, [X8 + 0x58]
	0x01D61864 CBZ X8, 0x1D61B88
	0x01D61868 LDR W0, [X8 + 0x4C]
	0x01D6186C MOV X1, X31
	0x01D61870 BL 0x1D75978
	0x01D61874 TBZ X0, 0x0, 0x1D61738
	0x01D61878 LDR X0, [X20]
	0x01D6187C LDR W8, [X0 + 0xE0]
	0x01D61880 CBNZ W8, 0x1D61888
	0x01D61884 BL 0x1C16DFC
	0x01D61888 LDRB W8, [X25 + 0x787]
	0x01D6188C CBNZ W8, 0x1D6189C
	0x01D61890 MOV X0, X20
	0x01D61894 BL 0x1C16CF4
	0x01D61898 STRB W26, [X25 + 0x787]
	0x01D6189C LDR X0, [X20]
	0x01D618A0 LDR W8, [X0 + 0xE0]
	0x01D618A4 CBNZ W8, 0x1D618B0
	0x01D618A8 BL 0x1C16DFC
	0x01D618AC LDR X0, [X20]
	0x01D618B0 LDR X8, [X0 + 0xB8]
	0x01D618B4 LDR X8, [X8]
	0x01D618B8 CBZ X8, 0x1D61BA4
	0x01D618BC LDR X8, [X8 + 0xB8]
	0x01D618C0 CBZ X8, 0x1D61BA8
	0x01D618C4 LDR X29, [X31]
	0x01D618C8 CBZ X29, 0x1D61BB0
	0x01D618CC LDR X9, [X29 + 0x58]
	0x01D618D0 CBZ X9, 0x1D61BB4
	0x01D618D4 LDR X0, [X8 + 0x78]
	0x01D618D8 CBZ X0, 0x1D61BAC
	0x01D618DC LDR W1, [X9 + 0x4C]
	0x01D618E0 BL 0x1D4E604
	0x01D618E4 CBZ X0, 0x1D6190C
	0x01D618E8 LDR X22, [X0 + 0x50]
	0x01D618EC LDR X0, [X29 + 0x48]
	0x01D618F0 LDR X1, [X28]
	0x01D618F4 BL 0x265C594
	0x01D618F8 MOV X1, X0
	0x01D618FC MOV X0, X22
	0x01D61900 MOV X2, X31
	0x01D61904 BL 0x3226EF8
	0x01D61908 TBZ X0, 0x0, 0x1D61738
	0x01D6190C LDR X0, [X19 + 0x48]
	0x01D61910 CBZ X0, 0x1D61BC0
	0x01D61914 MOV W1, W31
	0x01D61918 MOV X2, X31
	0x01D6191C BL 0x3C357B4
	0x01D61920 MOV X22, X31
	0x01D61924 MOVZ W20, 0x11
	0x01D61928 CBNZ X21, 0x1D6193C
	0x01D6192C B 0x1D6199C
	0x01D61930 MOV X22, X31
	0x01D61934 MOVZ W20, 0x12
	0x01D61938 CBZ X21, 0x1D6199C
	0x01D6193C ADRP X10, 0x2392000
	0x01D61940 LDR X8, [X21]
	0x01D61944 LDR X10, [X10 + 0xE00]
	0x01D61948 LDRH W9, [X8 + 0x12E]
	0x01D6194C LDR X1, [X10]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X20, 0x2678000
	011 Move W8, [X20+2116]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {52}
	017 Move X0, 0x2395000
	018 Move X0, [X0+1768]
	019 Call 0x1C17CF4
	020 Move X0, 0x2393000
	021 Move X0, [X0+2600]
	022 Call 0x1C17CF4
	023 Move X0, 0x2395000
	024 Move X0, [X0+1776]
	025 Call 0x1C17CF4
	026 Move X0, 0x2395000
	027 Move X0, [X0+1784]
	028 Call 0x1C17CF4
	029 Move X0, 0x2395000
	030 Move X0, [X0+1792]
	031 Call 0x1C17CF4
	032 Move X0, 0x2395000
	033 Move X0, [X0+1800]
	034 Call 0x1C17CF4
	035 Move X0, 0x2395000
	036 Move X0, [X0+1808]
	037 Call 0x1C17CF4
	038 Move X0, 0x2395000
	039 Move X0, [X0+1816]
	040 Call 0x1C17CF4
	041 Move X0, 0x2395000
	042 Move X0, [X0+1824]
	043 Call 0x1C17CF4
	044 Move X0, 0x2395000
	045 Move X0, [X0+1832]
	046 Call 0x1C17CF4
	047 Move X0, 0x2395000
	048 Move X0, [X0+1840]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X20+2116], W8
	052 Move [X31+32], X31
	053 Move [X31+40], X31
	054 Move [X31+48], X31
	055 Move X0, [X19+176]
	056 Compare X0, 0
	057 JumpIfEqual {222}
	058 Move X8, 0x2395000
	059 Move X8, [X8+1800]
	060 Move X20, 0x2395000
	061 Move X22, 0x2395000
	062 Move X1, [X8]
	063 Move X20, [X20+1784]
	064 Move X22, [X22+1776]
	065 Add X8, X31, 8
	066 Call List`1<Object>.GetEnumerator, X0
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 Move X8, [X31+24]
	069 Move [X31+2], V0
	070 Move [X31+48], X8
	071 Move X1, [X20]
	072 Add X0, X31, 32
	073 Call Enumerator<Object>.MoveNext, X0
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {82}
	078 Move X0, [X31+48]
	079 Compare X0, 0
	080 JumpIfEqual {223}
	081 Call ItemController.ClearItem, X0
	082 Move X1, [X22]
	083 Add X0, X31, 32
	084 Call Enumerator<Object>.Dispose, X0
	085 Move W1, [X19+152]
	086 Call DoodEditorManager.GetItemsForCategory, X0, X1
	087 Move W8, [X19+152]
	088 Move X20, X0
	089 Move X1, X31
	090 Move W0, W8
	091 Call ApiAvatarItemTypeUtil.IsAccesory, X0
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {126}
	096 Move X0, [X19+176]
	097 Compare X0, 0
	098 JumpIfEqual {222}
	099 Move X21, 0x2395000
	100 Move X21, [X21+1824]
	101 Move W1, W31
	102 Move X2, [X21]
	103 Call List`1<Object>.get_Item, X0, X1
	104 Compare X0, 0
	105 JumpIfEqual {222}
	106 Move X1, X31
	107 Call Component.get_gameObject, X0
	108 Compare X0, 0
	109 JumpIfEqual {222}
	110 Move W1, 1
	111 Move X2, X31
	112 Call GameObject.SetActive, X0, X1
	113 Move X0, [X19+176]
	114 Compare X0, 0
	115 JumpIfEqual {222}
	116 Move X2, [X21]
	117 Move W1, W31
	118 Call List`1<Object>.get_Item, X0, X1
	119 Compare X0, 0
	120 JumpIfEqual {222}
	121 Move W2, [X19+152]
	122 Move W3, 1
	123 Move X1, X31
	124 Move W23, 1
	125 Call ItemController.SetItem, X0, X1, X2, X3
	126 Move W23, W31
	127 Compare X20, 0
	128 JumpIfEqual {222}
	129 Move W8, [X20+24]
	130 Add W0, W8, W23
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X24, 0x2395000
	133 Move X25, 0x2395000
	134 Move X24, [X24+1824]
	135 Move X25, [X25+1832]
	136 Move W21, W31
	137 Move X0, [X19+176]
	138 Compare X0, 0
	139 JumpIfEqual {222}
	140 Move W8, [X0+24]
	141 Add W22, W23, W21
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move X2, [X24]
	144 Move W1, W22
	145 Call List`1<Object>.get_Item, X0, X1
	146 Compare X0, 0
	147 JumpIfEqual {222}
	148 Move X1, X31
	149 Call Component.get_gameObject, X0
	150 Compare X0, 0
	151 JumpIfEqual {222}
	152 Move W1, 1
	153 Move X2, X31
	154 Call GameObject.SetActive, X0, X1
	155 Move X0, [X19+176]
	156 Compare X0, 0
	157 JumpIfEqual {222}
	158 Move X2, [X24]
	159 Move W1, W22
	160 Call List`1<Object>.get_Item, X0, X1
	161 Move X2, [X25]
	162 Move X22, X0
	163 Move X0, X20
	164 Move W1, W21
	165 Call List`1<Object>.get_Item, X0, X1
	166 Compare X22, 0
	167 JumpIfEqual {222}
	168 Move W2, [X19+152]
	169 Move X1, X0
	170 Move X0, X22
	171 Move W3, W31
	172 Call ItemController.SetItem, X0, X1, X2, X3
	173 Move W8, [X20+24]
	174 Add W21, W21, 1
	175 Add W0, W8, W23
	176 Add W8, W23, W21
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move X8, 0x2395000
	179 Move X8, [X8+1768]
	180 Move TEMP, 0
	181 Not TEMP
	182 Move X9, TEMP
	183 Add X0, X31, 8
	184 Move X1, X31
	185 Move X8, [X8]
	186 Move [X31+8], X8
	187 Move [X31+16], X9
	188 Move W8, [X19+152]
	189 Move [X31+24], W8
	190 Call Enum.ToString, X0
	191 Move X8, 0x2395000
	192 Move X8, [X8+1840]
	193 Move X1, X0
	194 Move X2, X31
	195 Move X8, [X8]
	196 Move X0, X8
	197 Call String.Concat, X0, X1
	198 Move X8, 0x2393000
	199 Move X8, [X8+2600]
	200 Move X19, X0
	201 Move X8, [X8]
	202 Move W9, [X8+224]
	203 Compare W9, 0
	204 JumpIfNotEqual {207}
	205 Move X0, X8
	206 Call 0x1C17DFC
	207 Move X0, X19
	208 Move X1, X31
	209 Call Debug.LogWarning, X0
	210 Move W8, [X20+24]
	211 Add W0, W8, W23
	212 Move X20, [X31+112]
	213 Move X19, [X31+120]
	214 Move X22, [X31+96]
	215 Move X21, [X31+104]
	216 Move X24, [X31+80]
	217 Move X23, [X31+88]
	218 Move X30, [X31+64]
	219 Move X25, [X31+72]
	220 Add X31, X31, 128
	221 Return X0
	222 Call 0x1C17F20
	223 Call 0x1C17F20
	224 Move X20, X0
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move X0, X20
	227 Call 0x3EB2AD0
	228 Move X21, [X0]
	229 Call 0x3EB2AE0
	230 Move X1, [X22]
	231 Add X0, X31, 32
	232 Call Enumerator<Object>.Dispose, X0
	233 Compare X21, 0
	234 JumpIfEqual {85}
	235 Move X0, X21
	236 Call 0x1C17F18
	237 Move X21, X31
	238 Move X20, X0
	239 Move X1, [X22]
	240 Add X0, X31, 32
	241 Call Enumerator<Object>.Dispose, X0
	242 Compare X21, 0
	243 JumpIfNotEqual {246}
	244 Move X0, X20
	245 Call 0x1D2D690
	246 Move X0, X21
	247 Call 0x1C17F18
	248 Call 0x1991590

Method: System.Collections.Generic.List`1<AnimalCompany.AvatarItemState> GetItemsForCategory(AnimalCompany.API.ApiAvatarItemType category)

Disassembly:
	0x01D633B0 CBZ X19, 0x1D633CC
	0x01D633B4 MOV X0, X19
	0x01D633B8 LDP X20, X19, [X31 + 0x20]
	0x01D633BC LDP X22, X21, [X31 + 0x10]
	0x01D633C0 MOV X1, X31
	0x01D633C4 LDR X30, [X31], #0x30
	0x01D633C8 B 0x1E1EF5C
	0x01D633CC BL 0x1C16F20
	0x01D633D0 STR X30, [X31 - 0x30]!
	0x01D633D4 STP X22, X21, [X31 + 0x10]
	0x01D633D8 STP X20, X19, [X31 + 0x20]
	0x01D633DC ADRP X21, 0x2675000
	0x01D633E0 ADRP X20, 0x2390000
	0x01D633E4 LDRB W8, [X21 + 0x84B]
	0x01D633E8 LDR X20, [X20 + 0x598]
	0x01D633EC MOV X19, X0
	0x01D633F0 TBNZ X8, 0x0, 0x1D63438
	0x01D633F4 ADRP X0, 0x2390000
	0x01D633F8 LDR X0, [X0 + 0x788]
	0x01D633FC BL 0x1C16CF4
	0x01D63400 ADRP X0, 0x2390000
	0x01D63404 LDR X0, [X0 + 0x598]
	0x01D63408 BL 0x1C16CF4
	0x01D6340C ADRP X0, 0x2392000
	0x01D63410 LDR X0, [X0 + 0x7E0]
	0x01D63414 BL 0x1C16CF4
	0x01D63418 ADRP X0, 0x2392000
	0x01D6341C LDR X0, [X0 + 0x7E8]
	0x01D63420 BL 0x1C16CF4
	0x01D63424 ADRP X0, 0x2392000
	0x01D63428 LDR X0, [X0 + 0x7F0]
	0x01D6342C BL 0x1C16CF4
	0x01D63430 MOVZ W8, 0x1
	0x01D63434 STRB W8, [X21 + 0x84B]
	0x01D63438 MOV X0, X19
	0x01D6343C BL 0x1D62F8C
	0x01D63440 LDR X8, [X20]
	0x01D63444 MOV X20, X0
	0x01D63448 LDR W9, [X8 + 0xE0]
	0x01D6344C CBNZ W9, 0x1D63458
	0x01D63450 MOV X0, X8
	0x01D63454 BL 0x1C16DFC
	0x01D63458 MOV X0, X20
	0x01D6345C MOV X1, X31
	0x01D63460 MOV X2, X31
	0x01D63464 BL 0x3C3883C
	0x01D63468 TBZ X0, 0x0, 0x1D634C8
	0x01D6346C ADRP X8, 0x2390000
	0x01D63470 LDR X8, [X8 + 0x788]
	0x01D63474 LDR X0, [X8]
	0x01D63478 LDR W8, [X0 + 0xE0]
	0x01D6347C CBNZ W8, 0x1D63484
	0x01D63480 BL 0x1C16DFC
	0x01D63484 ADRP X8, 0x2392000
	0x01D63488 ADRP X9, 0x2392000
	0x01D6348C ADRP X10, 0x2392000
	0x01D63490 LDR X8, [X8 + 0x7F0]
	0x01D63494 LDR X9, [X9 + 0x7E8]
	0x01D63498 LDR X10, [X10 + 0x7E0]
	0x01D6349C LDP X20, X19, [X31 + 0x20]
	0x01D634A0 LDR X1, [X8]
	0x01D634A4 LDR X3, [X9]
	0x01D634A8 LDR X4, [X10]
	0x01D634AC LDP X22, X21, [X31 + 0x10]
	0x01D634B0 MOVZ W0, 0x20
	0x01D634B4 MOVZ W5, 0x32
	0x01D634B8 MOV X2, X31
	0x01D634BC MOV X6, X31
	0x01D634C0 LDR X30, [X31], #0x30
	0x01D634C4 B 0x35C229C
	0x01D634C8 MOV X0, X19
	0x01D634CC BL 0x1D62F8C
	0x01D634D0 CBZ X0, 0x1D635D8
	0x01D634D4 MOVZ W21, 0x4
	0x01D634D8 LDR X8, [X0 + 0x20]
	0x01D634DC CBZ X8, 0x1D635D8
	0x01D634E0 LDR W8, [X8 + 0x18]
	0x01D634E4 SUB X22, X21, 0x4
	0x01D634E8 CMP W22, W8
	0x01D634EC B.GE 0x1D635DC
	0x01D634F0 LDR X8, [X19 + 0x28]
	0x01D634F4 CBZ X8, 0x1D635D8
	0x01D634F8 LDR X8, [X8 + 0x20]
	0x01D634FC CBZ X8, 0x1D635D8
	0x01D63500 LDR W9, [X8 + 0x18]
	0x01D63504 CMP W22, W9
	0x01D63508 B.CS 0x1D635EC
	0x01D6350C LDR X20, [X8, X21, LSL #3]
	0x01D63510 MOV X0, X19
	0x01D63514 BL 0x1D62F8C
	0x01D63518 CBZ X0, 0x1D635D8
	0x01D6351C LDR X8, [X0 + 0x20]
	0x01D63520 CBZ X8, 0x1D635D8
	0x01D63524 LDR W9, [X8 + 0x18]
	0x01D63528 CMP W22, W9
	0x01D6352C B.CS 0x1D635EC
	0x01D63530 LDR X0, [X8, X21, LSL #3]
	0x01D63534 CBZ X0, 0x1D635D8
	0x01D63538 MOV X1, X31
	0x01D6353C BL 0x3C3EB78
	0x01D63540 CBZ X20, 0x1D635D8
	0x01D63544 MOV X0, X20
	0x01D63548 MOV X1, X31
	0x01D6354C BL 0x3C3EC04
	0x01D63550 MOV X0, X19
	0x01D63554 BL 0x1D62F8C
	0x01D63558 CBZ X0, 0x1D635D8
	0x01D6355C LDR X8, [X0 + 0x20]
	0x01D63560 CBZ X8, 0x1D635D8
	0x01D63564 LDR W9, [X8 + 0x18]
	0x01D63568 CMP W22, W9
	0x01D6356C B.CS 0x1D635EC
	0x01D63570 LDR X0, [X8, X21, LSL #3]
	0x01D63574 CBZ X0, 0x1D635D8
	0x01D63578 MOV X1, X31
	0x01D6357C BL 0x3C3F830
	0x01D63580 MOV X0, X20
	0x01D63584 MOV X1, X31
	0x01D63588 BL 0x3C3F8B8
	0x01D6358C MOV X0, X19
	0x01D63590 BL 0x1D62F8C
	0x01D63594 CBZ X0, 0x1D635D8
	0x01D63598 LDR X8, [X0 + 0x20]
	0x01D6359C CBZ X8, 0x1D635D8
	0x01D635A0 LDR W9, [X8 + 0x18]
	0x01D635A4 CMP W22, W9
	0x01D635A8 B.CS 0x1D635EC
	0x01D635AC LDR X0, [X8, X21, LSL #3]
	0x01D635B0 CBZ X0, 0x1D635D8
	0x01D635B4 MOV X1, X31
	0x01D635B8 BL 0x3C3FBAC
	0x01D635BC MOV X0, X20
	0x01D635C0 MOV X1, X31
	0x01D635C4 BL 0x3C3FC4C
	0x01D635C8 MOV X0, X19
	0x01D635CC BL 0x1D62F8C
	0x01D635D0 ADD X21, X21, 0x1
	0x01D635D4 CBNZ X0, 0x1D634D8
	0x01D635D8 BL 0x1C16F20
	0x01D635DC LDP X20, X19, [X31 + 0x20]
	0x01D635E0 LDP X22, X21, [X31 + 0x10]
	0x01D635E4 LDR X30, [X31], #0x30
	0x01D635E8 RET
	0x01D635EC BL 0x1C16F28
	0x01D635F0 MOV X1, X31
	0x01D635F4 B 0x3C36C30
	0x01D635F8 STP X30, X23, [X31 - 0x30]!
	0x01D635FC STP X22, X21, [X31 + 0x10]
	0x01D63600 STP X20, X19, [X31 + 0x20]
	0x01D63604 ADRP X20, 0x2675000
	0x01D63608 LDRB W8, [X20 + 0x84C]
	0x01D6360C MOV X19, X0
	0x01D63610 TBNZ X8, 0x0, 0x1D63640
	0x01D63614 ADRP X0, 0x2392000
	0x01D63618 LDR X0, [X0 + 0x6D0]
	0x01D6361C BL 0x1C16CF4
	0x01D63620 ADRP X0, 0x2392000
	0x01D63624 LDR X0, [X0 + 0x7F8]
	0x01D63628 BL 0x1C16CF4
	0x01D6362C ADRP X0, 0x2392000
	0x01D63630 LDR X0, [X0 + 0x800]
	0x01D63634 BL 0x1C16CF4
	0x01D63638 MOVZ W8, 0x1
	0x01D6363C STRB W8, [X20 + 0x84C]
	0x01D63640 LDR X23, [X19 + 0x28]
	0x01D63644 CBZ X23, 0x1D63758
	0x01D63648 ADRP X22, 0x2392000
	0x01D6364C LDR X22, [X22 + 0x6D0]
	0x01D63650 ADRP X21, 0x2392000
	0x01D63654 LDR X20, [X23 + 0x20]
	0x01D63658 LDR X0, [X22]
	0x01D6365C LDR X21, [X21 + 0x7F8]
	0x01D63660 BL 0x1C16F10
	0x01D63664 LDR X2, [X21]
	0x01D63668 MOV X1, X19
	0x01D6366C MOV X3, X31
	0x01D63670 MOV X21, X0
	0x01D63674 BL 0x2A6B948
	0x01D63678 MOV X0, X20
	0x01D6367C MOV X1, X21
	0x01D63680 MOV X2, X31
	0x01D63684 BL 0x33C0DE4
	0x01D63688 CBZ X0, 0x1D636C4
	0x01D6368C LDR X21, [X22]
	0x01D63690 MOV X20, X0
	0x01D63694 MOV X1, X21
	0x01D63698 BL 0x1C16E00
	0x01D6369C CBZ X0, 0x1D636B8
	0x01D636A0 STR X0, [X23 + 0x20]
	0x01D636A4 LDR X21, [X22]
	0x01D636A8 MOV X0, X20
	0x01D636AC MOV X1, X21
	0x01D636B0 BL 0x1C16E00
	0x01D636B4 CBNZ X0, 0x1D636C8
	0x01D636B8 MOV X0, X20
	0x01D636BC MOV X1, X21
	0x01D636C0 BL 0x1C171E0

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X23, 0x2676000
	011 Move X22, 0x2393000
	012 Move X19, 0x2393000
	013 Move X21, 0x2391000
	014 Move W8, [X23+2117]
	015 Move X22, [X22+1904]
	016 Move X19, [X19+1912]
	017 Move X21, [X21+1608]
	018 Move W20, W1
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {61}
	023 Move X0, 0x2391000
	024 Move X0, [X0+1608]
	025 Call 0x1C17CF4
	026 Move X0, 0x2393000
	027 Move X0, [X0+1624]
	028 Call 0x1C17CF4
	029 Move X0, 0x2393000
	030 Move X0, [X0+1632]
	031 Call 0x1C17CF4
	032 Move X0, 0x2393000
	033 Move X0, [X0+1640]
	034 Call 0x1C17CF4
	035 Move X0, 0x2393000
	036 Move X0, [X0+1920]
	037 Call 0x1C17CF4
	038 Move X0, 0x2393000
	039 Move X0, [X0+1912]
	040 Call 0x1C17CF4
	041 Move X0, 0x2393000
	042 Move X0, [X0+1904]
	043 Call 0x1C17CF4
	044 Move X0, 0x2393000
	045 Move X0, [X0+1512]
	046 Call 0x1C17CF4
	047 Move X0, 0x2392000
	048 Move X0, [X0+3768]
	049 Call 0x1C17CF4
	050 Move X0, 0x2392000
	051 Move X0, [X0+2776]
	052 Call 0x1C17CF4
	053 Move X0, 0x2392000
	054 Move X0, [X0+504]
	055 Call 0x1C17CF4
	056 Move X0, 0x2393000
	057 Move X0, [X0+1648]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X23+2117], W8
	061 Move X0, [X22]
	062 Move [X31+32], X31
	063 Move [X31+40], X31
	064 Move [X31+48], X31
	065 Call 0x1C17F10
	066 Move X1, [X19]
	067 Move X19, X0
	068 Call List`1<Object>..ctor, X0
	069 Move X0, [X21]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X22, 0x2676000
	075 Move W8, [X22+1927]
	076 Compare W8, 0
	077 JumpIfNotEqual {83}
	078 Move X0, 0x2391000
	079 Move X0, [X0+1608]
	080 Call 0x1C17CF4
	081 Move W8, 1
	082 Move [X22+1927], W8
	083 Move X0, [X21]
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {89}
	087 Call 0x1C17DFC
	088 Move X0, [X21]
	089 Move X8, [X0+184]
	090 Move X8, [X8]
	091 Compare X8, 0
	092 JumpIfEqual {192}
	093 Move X8, [X8+200]
	094 Compare X8, 0
	095 JumpIfEqual {192}
	096 Move X0, [X8+80]
	097 Compare X0, 0
	098 JumpIfEqual {192}
	099 Move X8, 0x2393000
	100 Move X8, [X8+1512]
	101 Move X1, [X8]
	102 Call StateDictionary`2<Object, Object>.get_Values, X0
	103 Compare X0, 0
	104 JumpIfEqual {192}
	105 Move X8, 0x2393000
	106 Move X8, [X8+1648]
	107 Move X23, 0x2393000
	108 Move X23, [X23+1632]
	109 Move X24, 0x2392000
	110 Move X1, [X8]
	111 Move X25, 0x2393000
	112 Move X22, 0x2393000
	113 Move X24, [X24+504]
	114 Move X25, [X25+1920]
	115 Move X22, [X22+1624]
	116 Add X8, X31, 8
	117 Call ValueCollection<Object, Object>.GetEnumerator, X0
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 Move X8, [X31+24]
	120 Move [X31+2], V0
	121 Move [X31+48], X8
	122 Move X1, [X23]
	123 Add X0, X31, 32
	124 Call Enumerator<Object, Object>.MoveNext, X0
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {173}
	129 Move X21, [X31+48]
	130 Compare X21, 0
	131 JumpIfEqual {187}
	132 Move X8, [X21+88]
	133 Compare X8, 0
	134 JumpIfEqual {188}
	135 Move W8, [X8+76]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X8, [X21+96]
	138 Compare X8, 0
	139 JumpIfEqual {189}
	140 Move W8, [X8+76]
	141 Compare W8, 0
	142 JumpIfNotEqual {151}
	143 Move X0, [X21+72]
	144 Move X1, [X24]
	145 Call StatePrimitive`1<Object>.op_Implicit, X0
	146 Call AvatarItemUtil.IsItemOwned, X0
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfNotEqual {122}
	151 Compare X19, 0
	152 JumpIfEqual {191}
	153 Move W10, [X19+28]
	154 Move X8, [X19+16]
	155 Move X9, [X25]
	156 Add W10, W10, 1
	157 Move [X19+28], W10
	158 Compare X8, 0
	159 JumpIfEqual {190}
	160 NotImplemented "Instruction LDRSW not yet implemented."
	161 Move W11, [X8+24]
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Add W9, W10, 1
	164 Add X8, X8, X10
	165 Move [X19+24], W9
	166 Move [X8+32], X21
	167 Move X8, [X9+32]
	168 Move X8, [X8+192]
	169 Move X2, [X8+112]
	170 Move X0, X19
	171 Move X1, X21
	172 Call List`1<Object>.AddWithResize, X0, X1
	173 Move X1, [X22]
	174 Add X0, X31, 32
	175 Call Enumerator<Object, Object>.Dispose, X0
	176 Move X0, X19
	177 Move X20, [X31+112]
	178 Move X19, [X31+120]
	179 Move X22, [X31+96]
	180 Move X21, [X31+104]
	181 Move X24, [X31+80]
	182 Move X23, [X31+88]
	183 Move X30, [X31+64]
	184 Move X25, [X31+72]
	185 Add X31, X31, 128
	186 Return X0
	187 Call 0x1C17F20
	188 Call 0x1C17F20
	189 Call 0x1C17F20
	190 Call 0x1C17F20
	191 Call 0x1C17F20
	192 Call 0x1C17F20
	193 Move X20, X0
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move X0, X20
	196 Call 0x3EB2AD0
	197 Move X21, [X0]
	198 Call 0x3EB2AE0
	199 Move X1, [X22]
	200 Add X0, X31, 32
	201 Call Enumerator<Object, Object>.Dispose, X0
	202 Compare X21, 0
	203 JumpIfEqual {176}
	204 Move X0, X21
	205 Call 0x1C17F18
	206 Move X21, X31
	207 Move X20, X0
	208 Move X1, [X22]
	209 Add X0, X31, 32
	210 Call Enumerator<Object, Object>.Dispose, X0
	211 Compare X21, 0
	212 JumpIfNotEqual {215}
	213 Move X0, X20
	214 Call 0x1D2D690
	215 Move X0, X21
	216 Call 0x1C17F18
	217 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x01D63E78 B.LT 0x1D63DC8
	0x01D63E7C LDP X20, X19, [X31 + 0x40]
	0x01D63E80 LDP X22, X21, [X31 + 0x30]
	0x01D63E84 LDP X24, X23, [X31 + 0x20]
	0x01D63E88 LDR X30, [X31 + 0x10]
	0x01D63E8C ADD X31, X31, 0x50
	0x01D63E90 RET
	0x01D63E94 BL 0x1C16F20
	0x01D63E98 BL 0x1C16F28
	0x01D63E9C STP X30, X21, [X31 - 0x20]!
	0x01D63EA0 STP X20, X19, [X31 + 0x10]
	0x01D63EA4 ADRP X21, 0x2675000
	0x01D63EA8 LDRB W8, [X21 + 0x852]
	0x01D63EAC MOV X20, X1
	0x01D63EB0 MOV X19, X0
	0x01D63EB4 TBNZ X8, 0x0, 0x1D63EFC
	0x01D63EB8 ADRP X0, 0x2390000
	0x01D63EBC LDR X0, [X0 + 0x648]
	0x01D63EC0 BL 0x1C16CF4
	0x01D63EC4 ADRP X0, 0x2390000
	0x01D63EC8 LDR X0, [X0 + 0x788]
	0x01D63ECC BL 0x1C16CF4
	0x01D63ED0 ADRP X0, 0x2392000
	0x01D63ED4 LDR X0, [X0 + 0x830]
	0x01D63ED8 BL 0x1C16CF4
	0x01D63EDC ADRP X0, 0x2392000
	0x01D63EE0 LDR X0, [X0 + 0x550]
	0x01D63EE4 BL 0x1C16CF4
	0x01D63EE8 ADRP X0, 0x2392000
	0x01D63EEC LDR X0, [X0 + 0x558]
	0x01D63EF0 BL 0x1C16CF4
	0x01D63EF4 MOVZ W8, 0x1
	0x01D63EF8 STRB W8, [X21 + 0x852]
	0x01D63EFC LDR X0, [X19 + 0x28]
	0x01D63F00 CBZ X0, 0x1D63FB4
	0x01D63F04 MOV X1, X31
	0x01D63F08 BL 0x35B9A1C
	0x01D63F0C TBZ X0, 0x0, 0x1D63F60
	0x01D63F10 CBZ X20, 0x1D63FB4
	0x01D63F14 LDR X0, [X20 + 0x20]
	0x01D63F18 MOV X1, X31
	0x01D63F1C BL 0x1D45388
	0x01D63F20 ADRP X8, 0x2390000
	0x01D63F24 LDR X8, [X8 + 0x648]
	0x01D63F28 MOV X20, X0
	0x01D63F2C LDR X8, [X8]
	0x01D63F30 LDR W9, [X8 + 0xE0]
	0x01D63F34 CBNZ W9, 0x1D63F40
	0x01D63F38 MOV X0, X8
	0x01D63F3C BL 0x1C16DFC
	0x01D63F40 MOV X0, X20
	0x01D63F44 MOV W1, W31
	0x01D63F48 MOV X2, X31
	0x01D63F4C BL 0x1D35D6C
	0x01D63F50 STR X0, [X19 + 0x28]
	0x01D63F54 LDP X20, X19, [X31 + 0x10]
	0x01D63F58 LDP X30, X21, [X31], #0x20
	0x01D63F5C RET

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0x2676000
	010 Move X25, 0x2393000
	011 Move X23, 0x2393000
	012 Move X20, 0x2393000
	013 Move X22, 0x2393000
	014 Move X21, 0x2393000
	015 Move W8, [X24+2118]
	016 Move X25, [X25+1968]
	017 Move X23, [X23+1728]
	018 Move X20, [X20+1736]
	019 Move X22, [X22+1976]
	020 Move X21, [X21+1984]
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {43}
	026 Move X0, 0x2393000
	027 Move X0, [X0+1968]
	028 Call 0x1C17CF4
	029 Move X0, 0x2393000
	030 Move X0, [X0+1736]
	031 Call 0x1C17CF4
	032 Move X0, 0x2393000
	033 Move X0, [X0+1984]
	034 Call 0x1C17CF4
	035 Move X0, 0x2393000
	036 Move X0, [X0+1728]
	037 Call 0x1C17CF4
	038 Move X0, 0x2393000
	039 Move X0, [X0+1976]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X24+2118], W8
	043 Move X0, [X25]
	044 Move W1, W31
	045 Call 0x1C17D6C
	046 Move [X19+136], X0
	047 Move X0, [X23]
	048 Call 0x1C17F10
	049 Move X1, [X20]
	050 Move X20, X0
	051 Call List`1<Object>..ctor, X0
	052 Move [X19+160], X20
	053 Move X0, [X22]
	054 Call 0x1C17F10
	055 Move X1, [X21]
	056 Move X20, X0
	057 Call List`1<Object>..ctor, X0
	058 Move [X19+176], X20
	059 Move X0, X19
	060 Move X20, [X31+48]
	061 Move X19, [X31+56]
	062 Move X22, [X31+32]
	063 Move X21, [X31+40]
	064 Move X24, [X31+16]
	065 Move X23, [X31+24]
	066 Move X1, X31
	067 Move X30, [X31+64]
	068 Move X25, [X31+72]
	069 Call MonoBehaviour..ctor, X0
	070 Return 

Method: System.Void <TurnOff>b__31_0()

Disassembly:
	0x01D63F60 ADRP X8, 0x2390000
	0x01D63F64 LDR X8, [X8 + 0x788]
	0x01D63F68 LDR X0, [X8]
	0x01D63F6C LDR W8, [X0 + 0xE0]
	0x01D63F70 CBNZ W8, 0x1D63F78
	0x01D63F74 BL 0x1C16DFC
	0x01D63F78 ADRP X8, 0x2392000
	0x01D63F7C ADRP X9, 0x2392000
	0x01D63F80 ADRP X10, 0x2392000
	0x01D63F84 LDR X8, [X8 + 0x550]
	0x01D63F88 LDR X9, [X9 + 0x830]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+80]
	003 Compare X0, 0
	004 JumpIfEqual {14}
	005 Move X1, X31
	006 Call Component.get_gameObject, X0
	007 Compare X0, 0
	008 JumpIfEqual {14}
	009 Move W1, W31
	010 Move X2, X31
	011 Move X30, [X31+16]
	012 Call GameObject.SetActive, X0, X1
	013 Return 
	014 Call 0x1C17F20

