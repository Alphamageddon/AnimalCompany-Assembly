Type: AnimalCompany.ItemSellingMachineView/<ShowValueTextCoroutine>d__40

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01CD87AC MOV W21, W31
	0x01CD87B0 CMP W21, W8
	0x01CD87B4 B.CS 0x1CD8A30
	0x01CD87B8 ADD X8, X20, W21, 0x3, SXTW
	0x01CD87BC LDR X0, [X8 + 0x20]
	0x01CD87C0 CBZ X0, 0x1CD8A2C
	0x01CD87C4 MOV W1, W31
	0x01CD87C8 MOV X2, X31
	0x01CD87CC BL 0x3A9A604
	0x01CD87D0 LDR W8, [X20 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01CD9648 BL 0x1CE8C04

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01CD964C TBZ X0, 0x0, 0x1CD96CC
	0x01CD9650 LDR X0, [X31 + 0xA8]
	0x01CD9654 CBZ X0, 0x1CD9EF4
	0x01CD9658 ADRP X8, 0x2276000
	0x01CD965C LDR X8, [X8 + 0xDC0]
	0x01CD9660 LDR X1, [X8]
	0x01CD9664 ADD X8, X31, 0x20
	0x01CD9668 BL 0x2E470E0
	0x01CD966C ADRP X9, 0x2276000
	0x01CD9670 LDR V0, [X31 + 0x2]
	0x01CD9674 LDR X8, [X31 + 0x30]
	0x01CD9678 LDR X9, [X9 + 0xDB0]
	0x01CD967C STR V0, [X31 + 0x4]
	0x01CD9680 STR X8, [X31 + 0x50]
	0x01CD9684 LDR X1, [X9]
	0x01CD9688 ADD X0, X31, 0x40
	0x01CD968C BL 0x2A14F30
	0x01CD9690 TBZ X0, 0x0, 0x1CD96B8
	0x01CD9694 LDR X1, [X31 + 0x50]
	0x01CD9698 MOV X0, X19
	0x01CD969C BL 0x1CDAB50
	0x01CD96A0 ADRP X8, 0x2276000
	0x01CD96A4 LDR X8, [X8 + 0xDA8]
	0x01CD96A8 ADD X0, X31, 0x40
	0x01CD96AC LDR X1, [X8]
	0x01CD96B0 BL 0x2A14F2C
	0x01CD96B4 B 0x1CD9ECC
	0x01CD96B8 ADRP X8, 0x2276000
	0x01CD96BC LDR X8, [X8 + 0xDA8]
	0x01CD96C0 ADD X0, X31, 0x40
	0x01CD96C4 LDR X1, [X8]
	0x01CD96C8 BL 0x2A14F2C
	0x01CD96CC ADRP X21, 0x2274000
	0x01CD96D0 LDR X21, [X21 + 0x478]
	0x01CD96D4 LDR X20, [X19 + 0x178]
	0x01CD96D8 LDR X0, [X21]
	0x01CD96DC LDR W8, [X0 + 0xE0]
	0x01CD96E0 CBNZ W8, 0x1CD96E8
	0x01CD96E4 BL 0x1B6E8F8
	0x01CD96E8 MOV X0, X20
	0x01CD96EC MOV X1, X31
	0x01CD96F0 MOV X2, X31
	0x01CD96F4 BL 0x3A9D6EC
	0x01CD96F8 FMOV S11, 1
	0x01CD96FC TBZ X0, 0x0, 0x1CD9934
	0x01CD9700 LDR X0, [X19 + 0xD0]
	0x01CD9704 CBZ X0, 0x1CD9EF4
	0x01CD9708 MOV X1, X31
	0x01CD970C BL 0x3AA7658
	0x01CD9710 LDR X0, [X19 + 0x178]
	0x01CD9714 CBZ X0, 0x1CD9EF4
	0x01CD9718 MOV X1, X31
	0x01CD971C MOV V8.16B, V0.16B
	0x01CD9720 MOV V9.16B, V1.16B
	0x01CD9724 MOV V10.16B, V2.16B
	0x01CD9728 BL 0x3A9B084
	0x01CD972C CBZ X0, 0x1CD9EF4
	0x01CD9730 MOV X1, X31
	0x01CD9734 BL 0x3AA7658
	0x01CD9738 ADRP X20, 0x254A000
	0x01CD973C LDRB W8, [X20 + 0x440]
	0x01CD9740 MOV V11.16B, V0.16B
	0x01CD9744 MOV V12.16B, V1.16B
	0x01CD9748 MOV V13.16B, V2.16B
	0x01CD974C CBNZ W8, 0x1CD9764
	0x01CD9750 ADRP X0, 0x2274000
	0x01CD9754 LDR X0, [X0 + 0x488]
	0x01CD9758 BL 0x1B6E7F0
	0x01CD975C MOVZ W8, 0x1
	0x01CD9760 STRB W8, [X20 + 0x440]
	0x01CD9764 ADRP X20, 0x2274000
	0x01CD9768 LDR X20, [X20 + 0x488]
	0x01CD976C LDR X0, [X20]
	0x01CD9770 LDR W8, [X0 + 0xE0]
	0x01CD9774 CBNZ W8, 0x1CD977C
	0x01CD9778 BL 0x1B6E8F8
	0x01CD977C LDR X8, [X19 + 0x178]
	0x01CD9780 CBZ X8, 0x1CD9EF4
	0x01CD9784 LDR X0, [X8 + 0x80]
	0x01CD9788 CBZ X0, 0x1CD9EF4
	0x01CD978C FSUB S8, S8, S11
	0x01CD9790 FSUB S9, S9, S12
	0x01CD9794 FSUB S10, S10, S13
	0x01CD9798 FMUL S0, S8, S8
	0x01CD979C FMUL S1, S9, S9
	0x01CD97A0 FADD S0, S0, S1
	0x01CD97A4 FMUL S1, S10, S10
	0x01CD97A8 FADD S0, S1, S0
	0x01CD97AC MOV X1, X31
	0x01CD97B0 FSQRT S11, S0
	0x01CD97B4 BL 0x1C9CA04
	0x01CD97B8 TBZ X0, 0x0, 0x1CD9934
	0x01CD97BC LDR X0, [X19 + 0x178]
	0x01CD97C0 CBZ X0, 0x1CD9EF4
	0x01CD97C4 MOV X1, X31
	0x01CD97C8 BL 0x3A9B084
	0x01CD97CC CBZ X0, 0x1CD9EF4
	0x01CD97D0 MOV X1, X31
	0x01CD97D4 FDIV S13, S8, S11
	0x01CD97D8 FDIV S14, S9, S11
	0x01CD97DC FDIV S12, S10, S11
	0x01CD97E0 BL 0x3AA7AD0
	0x01CD97E4 ADRP X22, 0x254A000
	0x01CD97E8 LDRB W8, [X22 + 0x457]
	0x01CD97EC MOV V8.16B, V0.16B
	0x01CD97F0 MOV V9.16B, V1.16B
	0x01CD97F4 MOV V10.16B, V2.16B
	0x01CD97F8 CBNZ W8, 0x1CD9810
	0x01CD97FC ADRP X0, 0x2274000
	0x01CD9800 LDR X0, [X0 + 0x488]
	0x01CD9804 BL 0x1B6E7F0
	0x01CD9808 MOVZ W8, 0x1
	0x01CD980C STRB W8, [X22 + 0x457]
	0x01CD9810 LDR X0, [X20]
	0x01CD9814 FMUL S0, S13, S13
	0x01CD9818 FMUL S1, S14, S14
	0x01CD981C FADD S0, S0, S1
	0x01CD9820 FMUL S1, S12, S12
	0x01CD9824 LDR W8, [X0 + 0xE0]
	0x01CD9828 FADD S15, S1, S0
	0x01CD982C FMUL S0, S8, S8
	0x01CD9830 FMUL S1, S9, S9
	0x01CD9834 FADD S0, S0, S1
	0x01CD9838 FMUL S1, S10, S10
	0x01CD983C STR S13, [X31 + 0x1C]
	0x01CD9840 MOV V13.16B, V12.16B
	0x01CD9844 FADD S12, S1, S0
	0x01CD9848 CBNZ W8, 0x1CD9850
	0x01CD984C BL 0x1B6E8F8
	0x01CD9850 ADRP X8, 0xFFFFFFFFFEDD0000
	0x01CD9854 LDR V1, [X8 + 0x9E4]
	0x01CD9858 FMUL S0, S15, S12
	0x01CD985C FSQRT S0, S0
	0x01CD9860 FMOV S15, W31
	0x01CD9864 FCMP S0, S1
	0x01CD9868 B.MI 0x1CD98C4
	0x01CD986C LDR V1, [X31 + 0x1C]
	0x01CD9870 LDR X0, [X20]
	0x01CD9874 FMUL S2, S14, S9
	0x01CD9878 FMUL S3, S13, S10
	0x01CD987C FMUL S1, S1, S8
	0x01CD9880 FADD S1, S1, S2
	0x01CD9884 FADD S1, S3, S1
	0x01CD9888 LDR W8, [X0 + 0xE0]
	0x01CD988C FDIV S0, S1, S0
	0x01CD9890 FMOV S1, 1
	0x01CD9894 FMOV S2, -1
	0x01CD9898 FMIN S1, S0, S1
	0x01CD989C FCMP S0, S2
	0x01CD98A0 FCSEL S8, S1, S2, PL
	0x01CD98A4 CBNZ W8, 0x1CD98AC
	0x01CD98A8 BL 0x1B6E8F8
	0x01CD98AC FCVT S0, S8
	0x01CD98B0 BL 0x3D19890
	0x01CD98B4 ADRP X8, 0xFFFFFFFFFEDD0000
	0x01CD98B8 LDR V1, [X8 + 0xE1C]
	0x00000000 INVALID
	0x01CD98C0 FMUL S15, S0, S1
	0x01CD98C4 LDR X8, [X19 + 0x178]
	0x01CD98C8 CBZ X8, 0x1CD9EF4
	0x01CD98CC LDR X0, [X8 + 0x98]
	0x01CD98D0 CBZ X0, 0x1CD9EF4
	0x01CD98D4 MOV X1, X31
	0x01CD98D8 BL 0x3A7F310
	0x01CD98DC FCMP S11, S0
	0x01CD98E0 B.PL 0x1CD9934
	0x01CD98E4 LDR X8, [X19 + 0x178]
	0x01CD98E8 CBZ X8, 0x1CD9EF4
	0x01CD98EC LDR X0, [X8 + 0x98]
	0x01CD98F0 CBZ X0, 0x1CD9EF4
	0x01CD98F4 MOV X1, X31
	0x01CD98F8 BL 0x3A7EF74
	0x01CD98FC FMOV S1, 0.5
	0x01CD9900 FMUL S0, S0, S1
	0x01CD9904 FCMP S15, S0
	0x01CD9908 B.PL 0x1CD9934
	0x01CD990C LDR X0, [X19 + 0x178]
	0x01CD9910 CBZ X0, 0x1CD9EF4
	0x01CD9914 MOV X1, X31
	0x01CD9918 BL 0x3A9B084
	0x01CD991C CBZ X0, 0x1CD9EF4
	0x01CD9920 MOV X1, X31
	0x01CD9924 BL 0x3AA7658
	0x01CD9928 MOV X0, X19
	0x01CD992C BL 0x1CDAC08
	0x01CD9930 B 0x1CD9ECC
	0x01CD9934 LDR X0, [X21]
	0x01CD9938 LDR X20, [X19 + 0x178]
	0x01CD993C LDR W8, [X0 + 0xE0]
	0x01CD9940 CBNZ W8, 0x1CD9948
	0x01CD9944 BL 0x1B6E8F8
	0x01CD9948 MOV X0, X20
	0x01CD994C MOV X1, X31
	0x01CD9950 MOV X2, X31
	0x01CD9954 BL 0x3A9D6EC
	0x01CD9958 TBZ X0, 0x0, 0x1CD9980
	0x01CD995C LDR X8, [X19 + 0xB8]
	0x01CD9960 CBZ X8, 0x1CD9EF4
	0x01CD9964 LDR X8, [X8 + 0x78]
	0x01CD9968 CBZ X8, 0x1CD9EF4
	0x01CD996C LDR W9, [X8 + 0x18]
	0x01CD9970 CBZ W9, 0x1CD9EF8
	0x01CD9974 LDR V0, [X8 + 0x20]
	0x01CD9978 FCMP S11, S0
	0x01CD997C B.MI 0x1CD9A3C
	0x01CD9980 LDR X0, [X19 + 0xD0]
	0x01CD9984 CBZ X0, 0x1CD9EF4
	0x01CD9988 MOV X1, X31
	0x01CD998C BL 0x3AA7658
	0x01CD9990 LDR X0, [X19 + 0xD0]
	0x01CD9994 CBZ X0, 0x1CD9EF4
	0x01CD9998 MOV X1, X31
	0x01CD999C MOV V8.16B, V0.16B
	0x01CD99A0 MOV V9.16B, V1.16B
	0x01CD99A4 MOV V10.16B, V2.16B
	0x01CD99A8 BL 0x3AA7AD0
	0x01CD99AC LDR X8, [X19 + 0xB8]
	0x01CD99B0 CBZ X8, 0x1CD9EF4
	0x01CD99B4 LDR V6, [X8 + 0x80]
	0x01CD99B8 MOV V3.16B, V0.16B
	0x01CD99BC MOV V4.16B, V1.16B
	0x01CD99C0 MOV V5.16B, V2.16B
	0x01CD99C4 ADD X0, X31, 0x38
	0x01CD99C8 MOV V0.16B, V8.16B
	0x01CD99CC MOV V1.16B, V9.16B
	0x01CD99D0 MOV V2.16B, V10.16B
	0x01CD99D4 MOV X1, X31
	0x01CD99D8 BL 0x1CE92BC
	0x01CD99DC TBZ X0, 0x0, 0x1CD9A24
	0x01CD99E0 LDR X8, [X19]
	0x01CD99E4 LDR X1, [X31 + 0x38]
	0x01CD99E8 MOV X0, X19
	0x01CD99EC LDR X9, [X8 + 0x398]
	0x01CD99F0 LDR X2, [X8 + 0x3A0]
	0x01CD99F4 BLR X9
	0x01CD99F8 LDR X0, [X31 + 0x38]
	0x01CD99FC CBZ X0, 0x1CD9EF4
	0x01CD9A00 MOV X1, X31
	0x01CD9A04 BL 0x3A9B084
	0x01CD9A08 CBZ X0, 0x1CD9EF4
	0x01CD9A0C MOV X1, X31
	0x01CD9A10 BL 0x3AA7658
	0x01CD9A14 MOV X0, X19
	0x01CD9A18 MOV X1, X31
	0x01CD9A1C BL 0x1CE4C60
	0x01CD9A20 B 0x1CD9A3C
	0x01CD9A24 LDR X8, [X19]
	0x01CD9A28 MOV X0, X19
	0x01CD9A2C MOV X1, X31
	0x01CD9A30 LDR X9, [X8 + 0x398]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x254B000
	011 Move W8, [X20+1552]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x2277000
	018 Move X0, [X0+1304]
	019 Call 0x1B6F7F0
	020 Move X0, 0x2277000
	021 Move X0, [X0+816]
	022 Call 0x1B6F7F0
	023 Move X0, 0x2275000
	024 Move X0, [X0+2072]
	025 Call 0x1B6F7F0
	026 Move W8, 1
	027 Move [X20+1552], W8
	028 Move W8, [X19+16]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X22, [X19+32]
	031 Move X9, -18792448
	032 Add X9, X9, 2342
	033 NotImplemented "Instruction ADR not yet implemented."
	034 Move W11, [X9]
	035 Add X10, X10, X11
	036 CallNoReturn X10
	037 Move TEMP, 0
	038 Not TEMP
	039 Move W8, TEMP
	040 Move [X19+16], W8
	041 Compare X22, 0
	042 JumpIfEqual {258}
	043 Move X20, [X22+120]
	044 Compare X20, 0
	045 JumpIfEqual {258}
	046 Move W8, [X20+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move W21, W31
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Add X8, X20, W21
	051 Move X0, [X8+32]
	052 Compare X0, 0
	053 JumpIfEqual {258}
	054 Move W1, 1
	055 Move X2, X31
	056 Call Behaviour.set_enabled, X0, X1
	057 Move W8, [X20+24]
	058 Add W21, W21, 1
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X8, 0x2275000
	061 Move X8, [X8+2072]
	062 Move S8, W31
	063 Move X8, [X8]
	064 Move [X19+56], W31
	065 Move [X19+48], X8
	066 Move W8, 2
	067 Move [X19+24], X31
	068 Move [X19+16], W8
	069 Move V8, [X19+56]
	070 Move S0, 1
	071 Move TEMP, 0
	072 Not TEMP
	073 Move W8, TEMP
	074 Move [X19+16], W8
	075 NotImplemented "Instruction FCMP not yet implemented."
	076 Move X0, X31
	077 Call Time.get_deltaTime
	078 Move S1, 0.5
	079 Multiply S0, S0, S1
	080 Add S0, S8, S0
	081 Move S8, 1
	082 NotImplemented "Instruction FCMP not yet implemented."
	083 Move [X19+56], S0
	084 Move W8, [X19+40]
	085 Move TEMP, 0
	086 Not TEMP
	087 Move W8, TEMP
	088 Move [X19+16], W8
	089 Compare X22, 0
	090 JumpIfEqual {258}
	091 Move X20, [X22+120]
	092 Compare X20, 0
	093 JumpIfEqual {258}
	094 Move W8, [X20+24]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move W21, W31
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Add X8, X20, W21
	099 Move X0, [X8+32]
	100 Compare X0, 0
	101 JumpIfEqual {258}
	102 Move W1, W31
	103 Move X2, X31
	104 Call Behaviour.set_enabled, X0, X1
	105 Move W8, [X20+24]
	106 Add W21, W21, 1
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X8, [X22+160]
	109 Move W9, 4
	110 Move TEMP, 0
	111 Not TEMP
	112 Move W8, TEMP
	113 Move [X19+16], W8
	114 Compare X22, 0
	115 JumpIfEqual {258}
	116 Move W3, [X19+64]
	117 Move W1, 1
	118 Move W2, 5
	119 Call ItemSellingMachineView.GetRandomValue, X0, X1, X2, X3
	120 Move X1, [X19+48]
	121 Move W2, W0
	122 Move [X19+64], W0
	123 Call ItemSellingMachineView.GetRepeatString, X0, X1, X2
	124 Move X23, [X22+120]
	125 Compare X23, 0
	126 JumpIfEqual {258}
	127 Move W8, [X23+24]
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X20, X0
	130 Move W24, W31
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Add X8, X23, W24
	133 Move X21, [X8+32]
	134 Compare X21, 0
	135 JumpIfEqual {258}
	136 Move W1, 1
	137 Move X0, X21
	138 Move X2, X31
	139 Call Behaviour.set_enabled, X0, X1
	140 Move X8, [X21]
	141 Move X0, X21
	142 Move X1, X20
	143 Move X9, [X8+1368]
	144 Move X2, [X8+1376]
	145 NotImplemented "Instruction BLR not yet implemented."
	146 Move W8, [X23+24]
	147 Add W24, W24, 1
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move W8, [X19+60]
	150 Add W8, W8, 1
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move [X19+60], W8
	153 Move X8, [X22+176]
	154 Move W9, 5
	155 Move TEMP, 0
	156 Not TEMP
	157 Move W8, TEMP
	158 Move [X19+16], W8
	159 Compare X22, 0
	160 JumpIfEqual {258}
	161 Move X19, [X22+120]
	162 Compare X19, 0
	163 JumpIfEqual {258}
	164 Move W8, [X19+24]
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move W20, W31
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Add X8, X19, W20
	169 Move X0, [X8+32]
	170 Compare X0, 0
	171 JumpIfEqual {258}
	172 Move W1, W31
	173 Move X2, X31
	174 Call Behaviour.set_enabled, X0, X1
	175 Move W8, [X19+24]
	176 Add W20, W20, 1
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move W0, W31
	179 Subtract S0, S8, S0
	180 Move S1, 6
	181 Call 0x3D1A8E0
	182 Move W8, [X19+40]
	183 Subtract S0, S8, S0
	184 Move S1, W31
	185 NotImplemented "Instruction FMIN not yet implemented."
	186 NotImplemented "Instruction FCMP not yet implemented."
	187 NotImplemented "Instruction FCSEL not yet implemented."
	188 NotImplemented "Instruction SCVTF not yet implemented."
	189 Move W9, 0x7F800000
	190 Multiply S0, S0, S2
	191 Move S2, W9
	192 Add S0, S0, S1
	193 NotImplemented "Instruction FCVTZS not yet implemented."
	194 NotImplemented "Instruction FCMP not yet implemented."
	195 Move W10, 0x80000000
	196 NotImplemented "Instruction CSEL not yet implemented."
	197 NotImplemented "Instruction CMP not yet implemented."
	198 NotImplemented "Instruction CSEL not yet implemented."
	199 Move X9, 0x2277000
	200 Move X9, [X9+816]
	201 Add X0, X31, 12
	202 Move X2, X31
	203 Move [X31+12], W8
	204 Move X1, [X9]
	205 Call Int32.ToString, X0, X1
	206 Move X8, 0x2277000
	207 Move X8, [X8+1304]
	208 Move X1, X0
	209 Move X2, X31
	210 Move X8, [X8]
	211 Move X0, X8
	212 Call String.Concat, X0, X1
	213 Move [X19+48], X0
	214 Compare X22, 0
	215 JumpIfEqual {258}
	216 Move X20, [X22+120]
	217 Compare X20, 0
	218 JumpIfEqual {258}
	219 Move W8, [X20+24]
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Move W21, W31
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Add X8, X20, W21
	224 Move X0, [X8+32]
	225 Compare X0, 0
	226 JumpIfEqual {258}
	227 Move X8, [X0]
	228 Move X1, [X19+48]
	229 Move X9, [X8+1368]
	230 Move X2, [X8+1376]
	231 NotImplemented "Instruction BLR not yet implemented."
	232 Move W8, [X20+24]
	233 Add W21, W21, 1
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Move W0, 1
	236 Move [X19+24], X31
	237 Move [X19+16], W0
	238 Move X8, -19054592
	239 Move V0, [X8+3856]
	240 Move [X19+60], D0
	241 Compare X22, 0
	242 JumpIfEqual {258}
	243 Move X8, [X22+168]
	244 Move W9, 3
	245 Move [X19+16], W9
	246 Move [X19+24], X8
	247 Move W0, 1
	248 Move X20, [X31+64]
	249 Move X19, [X31+72]
	250 Move X22, [X31+48]
	251 Move X21, [X31+56]
	252 Move X24, [X31+32]
	253 Move X23, [X31+40]
	254 Move X30, [X31+24]
	255 Move V8, [X31+16]
	256 Add X31, X31, 80
	257 Return X0
	258 Call 0x1B6FA1C
	259 Call 0x1B6FA24

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x01CD9A34 LDR X2, [X8 + 0x3A0]
	0x01CD9A38 BLR X9

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01CD9A3C MOV X0, X19
	0x01CD9A40 BL 0x1CD8D54
	0x01CD9A44 CMP W0, 0x2
	0x01CD9A48 B.NE 0x1CD9ECC
	0x01CD9A4C LDR X0, [X19 + 0xC8]
	0x01CD9A50 CBZ X0, 0x1CD9EF4
	0x01CD9A54 MOV X1, X31
	0x01CD9A58 BL 0x3A4A9E4
	0x01CD9A5C TBZ X0, 0x0, 0x1CD9B24
	0x01CD9A60 MOV X0, X19
	0x01CD9A64 MOV X1, X31
	0x01CD9A68 BL 0x1CE4BFC
	0x01CD9A6C MOV X0, X19
	0x01CD9A70 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x2275000
	004 Move X0, [X0+2448]
	005 Call 0x1B6F804
	006 Call 0x1B6FA0C
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2277000
	011 Move X0, [X0+3392]
	012 Call 0x1B6F804
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1B6F8E8

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01CD9A74 MOV V8.16B, V0.16B
	0x01CD9A78 MOV V9.16B, V1.16B

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

