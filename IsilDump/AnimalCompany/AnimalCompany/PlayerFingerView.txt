Type: AnimalCompany.PlayerFingerView

Method: System.Single get__smoothingSpeed()

Disassembly:
	0x01DC83C8 STP X30, X21, [X31 - 0x20]!
	0x01DC83CC STP X20, X19, [X31 + 0x10]
	0x01DC83D0 ADRP X20, 0x2610000
	0x01DC83D4 ADRP X21, 0x2330000
	0x01DC83D8 LDRB W8, [X20 + 0xBA6]
	0x01DC83DC LDR X21, [X21 + 0x230]
	0x01DC83E0 MOV X19, X0

ISIL:
	001 Move W8, [X0+32]
	002 Move W9, 0x420C0000
	003 Move S0, W9
	004 Move S1, 25
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction FCSEL not yet implemented."
	007 Return V0

Method: System.Void Update()

Disassembly:
	0x01DC83E4 TBNZ X8, 0x0, 0x1DC83FC
	0x01DC83E8 ADRP X0, 0x2330000
	0x01DC83EC LDR X0, [X0 + 0x230]
	0x01DC83F0 BL 0x1C16CF4
	0x01DC83F4 MOVZ W8, 0x1
	0x01DC83F8 STRB W8, [X20 + 0xBA6]
	0x01DC83FC LDR X0, [X21]
	0x01DC8400 BL 0x1C16F10
	0x01DC8404 MOV X1, X31
	0x01DC8408 MOV X20, X0
	0x01DC840C BL 0x33BDD8C
	0x01DC8410 STR W31, [X20 + 0x10]
	0x01DC8414 STR X19, [X20 + 0x20]
	0x01DC8418 MOV X0, X20
	0x01DC841C LDP X20, X19, [X31 + 0x10]
	0x01DC8420 LDP X30, X21, [X31], #0x20
	0x01DC8424 RET
	0x01DC8428 STR X30, [X31 - 0x20]!
	0x01DC842C STP X20, X19, [X31 + 0x10]
	0x01DC8430 MOV W19, W1
	0x01DC8434 MOV X1, X31
	0x01DC8438 MOV X20, X0
	0x01DC843C BL 0x33BDD8C
	0x01DC8440 STR W19, [X20 + 0x10]
	0x01DC8444 LDP X20, X19, [X31 + 0x10]
	0x01DC8448 LDR X30, [X31], #0x20
	0x01DC844C RET
	0x01DC8450 STR D8, [X31 - 0x30]!
	0x01DC8454 STP X30, X21, [X31 + 0x10]
	0x01DC8458 STP X20, X19, [X31 + 0x20]
	0x01DC845C ADRP X20, 0x2610000
	0x01DC8460 LDRB W8, [X20 + 0xBA7]
	0x01DC8464 MOV X19, X0
	0x01DC8468 TBNZ X8, 0x0, 0x1DC8480
	0x01DC846C ADRP X0, 0x2330000
	0x01DC8470 LDR X0, [X0 + 0x238]
	0x01DC8474 BL 0x1C16CF4
	0x01DC8478 MOVZ W8, 0x1
	0x01DC847C STRB W8, [X20 + 0xBA7]
	0x01DC8480 LDR X0, [X19 + 0x150]
	0x01DC8484 CBZ X0, 0x1DC85A8
	0x01DC8488 MOV X1, X31
	0x01DC848C BL 0x3C3F58C
	0x01DC8490 LDR X0, [X19 + 0x158]
	0x01DC8494 STR S0, [X19 + 0x190]
	0x01DC8498 STR S1, [X19 + 0x194]
	0x01DC849C STR S2, [X19 + 0x198]
	0x01DC84A0 CBZ X0, 0x1DC85A8
	0x01DC84A4 MOV X1, X31
	0x01DC84A8 BL 0x3C3F58C
	0x01DC84AC LDR X0, [X19 + 0x150]
	0x01DC84B0 STR S0, [X19 + 0x19C]
	0x01DC84B4 STR S1, [X19 + 0x1A0]
	0x01DC84B8 STR S2, [X19 + 0x1A4]
	0x01DC84BC CBZ X0, 0x1DC85A8
	0x01DC84C0 LDR X20, [X19 + 0x170]
	0x01DC84C4 MOV X1, X31
	0x01DC84C8 BL 0x3C3F58C
	0x01DC84CC CBZ X20, 0x1DC85A8
	0x01DC84D0 MOV X0, X20
	0x01DC84D4 MOV X1, X31
	0x01DC84D8 BL 0x3C40B58
	0x01DC84DC LDR X0, [X19 + 0x158]
	0x01DC84E0 STR S0, [X19 + 0x178]
	0x01DC84E4 STR S1, [X19 + 0x17C]
	0x01DC84E8 STR S2, [X19 + 0x180]
	0x01DC84EC CBZ X0, 0x1DC85A8
	0x01DC84F0 LDR X20, [X19 + 0x170]
	0x01DC84F4 MOV X1, X31
	0x01DC84F8 BL 0x3C3F58C
	0x01DC84FC CBZ X20, 0x1DC85A8
	0x01DC8500 ADRP X21, 0x2330000
	0x01DC8504 LDR X21, [X21 + 0x238]
	0x01DC8508 MOV X0, X20
	0x01DC850C MOV X1, X31
	0x01DC8510 BL 0x3C40B58
	0x01DC8514 MOVZ W8, 0x3F800000
	0x01DC8518 STR S0, [X19 + 0x184]
	0x01DC851C STR S1, [X19 + 0x188]
	0x01DC8520 STR S2, [X19 + 0x18C]
	0x01DC8524 STR W8, [X19 + 0x144]
	0x01DC8528 LDR X0, [X21]
	0x01DC852C LDR W8, [X0 + 0xE0]
	0x01DC8530 CBNZ W8, 0x1DC853C
	0x01DC8534 BL 0x1C16DFC
	0x01DC8538 LDR X0, [X21]
	0x01DC853C LDR X8, [X0 + 0xB8]
	0x01DC8540 ADRP X9, 0xFFFFFFFFFED22000
	0x01DC8544 LDR V8, [X9 + 0x104]
	0x01DC8548 MOV X0, X31
	0x01DC854C LDP S0, S1, [X8 + 0x20]
	0x01DC8550 LDR V2, [X8 + 0x28]
	0x01DC8554 FMUL S0, S0, S8
	0x01DC8558 FMUL S1, S1, S8
	0x01DC855C FMUL S2, S2, S8
	0x01DC8560 BL 0x3C2A574
	0x01DC8564 STP S0, S1, [X19 + 0x20]
	0x01DC8568 STP S2, S3, [X19 + 0x28]
	0x01DC856C LDR X8, [X21]
	0x01DC8570 MOV X0, X31
	0x01DC8574 LDR X8, [X8 + 0xB8]
	0x01DC8578 LDP S0, S1, [X8 + 0x2C]
	0x01DC857C LDR V2, [X8 + 0x34]
	0x01DC8580 FMUL S0, S0, S8
	0x01DC8584 FMUL S1, S1, S8
	0x01DC8588 FMUL S2, S2, S8
	0x01DC858C BL 0x3C2A574
	0x01DC8590 STP S0, S1, [X19 + 0x30]
	0x01DC8594 STP S2, S3, [X19 + 0x38]
	0x01DC8598 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, [X0+60]
	007 Move X19, X0
	008 Move X20, -19779584
	009 Compare W8, 0
	010 JumpIfEqual {40}
	011 Move V8, [X19+48]
	012 Move V9, [X19+36]
	013 Move X0, X31
	014 Call Time.get_deltaTime
	015 Move W8, [X19+32]
	016 Move W9, 0x420C0000
	017 Move S1, W9
	018 Move S2, 25
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction FCSEL not yet implemented."
	021 Move S2, 1
	022 Multiply S0, S0, S1
	023 Move S3, W31
	024 NotImplemented "Instruction FMIN not yet implemented."
	025 NotImplemented "Instruction FCMP not yet implemented."
	026 Move V1, [X19+36]
	027 Subtract S4, S9, S8
	028 NotImplemented "Instruction FCSEL not yet implemented."
	029 Move V2, [X20+1036]
	030 Multiply S0, S4, S0
	031 Add S0, S8, S0
	032 NotImplemented "Instruction FABD not yet implemented."
	033 NotImplemented "Instruction FCMP not yet implemented."
	034 Move [X19+48], S0
	035 Move V0, V1
	036 Move [X19+48], S1
	037 Move [X19+60], W31
	038 Move X0, X19
	039 Call PlayerFingerView.ApplyThumbValues, X0, V0
	040 Move W8, [X19+32]
	041 Compare W8, 0
	042 JumpIfEqual {113}
	043 Move W8, [X19+61]
	044 Compare W8, 0
	045 JumpIfEqual {75}
	046 Move V8, [X19+52]
	047 Move V9, [X19+40]
	048 Move X0, X31
	049 Call Time.get_deltaTime
	050 Move W8, [X19+32]
	051 Move W9, 0x420C0000
	052 Move S1, W9
	053 Move S2, 25
	054 NotImplemented "Instruction CMP not yet implemented."
	055 NotImplemented "Instruction FCSEL not yet implemented."
	056 Move S2, 1
	057 Multiply S0, S0, S1
	058 Move S3, W31
	059 NotImplemented "Instruction FMIN not yet implemented."
	060 NotImplemented "Instruction FCMP not yet implemented."
	061 Move V1, [X19+40]
	062 Subtract S4, S9, S8
	063 NotImplemented "Instruction FCSEL not yet implemented."
	064 Move V2, [X20+1036]
	065 Multiply S0, S4, S0
	066 Add S0, S8, S0
	067 NotImplemented "Instruction FABD not yet implemented."
	068 NotImplemented "Instruction FCMP not yet implemented."
	069 Move [X19+52], S0
	070 Move V0, V1
	071 Move [X19+52], S1
	072 Move [X19+61], W31
	073 Move X0, X19
	074 Call PlayerFingerView.ApplyIndexValues, X0, V0
	075 Move W8, [X19+62]
	076 Compare W8, 0
	077 JumpIfEqual {113}
	078 Move V8, [X19+56]
	079 Move V9, [X19+44]
	080 Move X0, X31
	081 Call Time.get_deltaTime
	082 Move W8, [X19+32]
	083 Move W9, 0x420C0000
	084 Move S1, W9
	085 Move S2, 25
	086 NotImplemented "Instruction CMP not yet implemented."
	087 NotImplemented "Instruction FCSEL not yet implemented."
	088 Move S2, 1
	089 Multiply S0, S0, S1
	090 Move S3, W31
	091 NotImplemented "Instruction FMIN not yet implemented."
	092 NotImplemented "Instruction FCMP not yet implemented."
	093 Move V1, [X19+44]
	094 Subtract S4, S9, S8
	095 NotImplemented "Instruction FCSEL not yet implemented."
	096 Move V2, [X20+1036]
	097 Multiply S0, S4, S0
	098 Add S0, S8, S0
	099 NotImplemented "Instruction FABD not yet implemented."
	100 NotImplemented "Instruction FCMP not yet implemented."
	101 Move [X19+56], S0
	102 Move V0, V1
	103 Move [X19+56], S1
	104 Move [X19+62], W31
	105 Move X0, X19
	106 Move X20, [X31+32]
	107 Move X19, [X31+40]
	108 Move X30, [X31+16]
	109 Move D9, [X31+48]
	110 Move D8, [X31+56]
	111 Call PlayerFingerView.ApplyMiddleValues, X0, V0
	112 Return 
	113 Move X20, [X31+32]
	114 Move X19, [X31+40]
	115 Move X30, [X31+16]
	116 Move D9, [X31+48]
	117 Move D8, [X31+56]
	118 Return 

Method: System.Void SetThumbValues(System.Single value)

Disassembly:
	0x01DC8C88 FMUL S24, S0, S7
	0x01DC8C8C FMUL S0, S0, S4
	0x01DC8C90 FMUL S4, S1, S4
	0x01DC8C94 FMUL S1, S1, S7
	0x01DC8C98 FMUL S7, S3, S6
	0x01DC8C9C FMUL S3, S3, S5
	0x01DC8CA0 FMUL S5, S2, S5
	0x01DC8CA4 FMUL S6, S2, S6
	0x01DC8CA8 FADD S2, S16, S17
	0x01DC8CAC FADD S16, S20, S21
	0x01DC8CB0 FADD S5, S7, S5
	0x01DC8CB4 FSUB S0, S3, S0
	0x01DC8CB8 FADD S2, S18, S2
	0x01DC8CBC FADD S3, S22, S16
	0x01DC8CC0 FADD S5, S24, S5
	0x01DC8CC4 FSUB S7, S0, S1
	0x01DC8CC8 FSUB S0, S2, S19
	0x01DC8CCC FSUB S1, S3, S23
	0x01DC8CD0 FSUB S2, S5, S4
	0x01DC8CD4 FSUB S3, S7, S6
	0x01DC8CD8 ADD X31, X31, 0xA0
	0x01DC8CDC B 0x3C3F7AC
	0x01DC8CE0 BL 0x1C16F20
	0x01DC8CE4 LDR W8, [X0 + 0xE0]
	0x01DC8CE8 CMP W8, 0x1
	0x01DC8CEC B.NE 0x1DC8CF4
	0x01DC8CF0 B 0x1DC8CF8
	0x01DC8CF4 RET
	0x01DC8CF8 SUB X31, X31, 0xA0
	0x01DC8CFC STP D15, D14, [X31 + 0x20]
	0x01DC8D00 STP D13, D12, [X31 + 0x30]
	0x01DC8D04 STP D11, D10, [X31 + 0x40]
	0x01DC8D08 STP D9, D8, [X31 + 0x50]
	0x01DC8D0C STP X30, X25, [X31 + 0x60]
	0x01DC8D10 STP X24, X23, [X31 + 0x70]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2611000
	007 Move X20, 0x232C000
	008 Move W8, [X21+2979]
	009 Move X20, [X20+2416]
	010 Move V8, V0
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x232C000
	017 Move X0, [X0+2416]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2979], W8
	021 Move W8, 1
	022 Move [X19+60], W8
	023 Move [X19+36], S8
	024 Move X0, [X20]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X31
	030 Call Application.get_isPlaying
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {41}
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X30, [X31+16]
	038 Move X21, [X31+24]
	039 Move V8, [X31+48]
	040 Return 
	041 Move X0, X19
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X30, [X31+16]
	045 Move X21, [X31+24]
	046 Move V0, V8
	047 Move V8, [X31+48]
	048 Call PlayerFingerView.ApplyThumbValues, X0, V0
	049 Return 

Method: System.Void ApplyThumbValues(System.Single value)

Disassembly:
	0x01DC859C LDP X30, X21, [X31 + 0x10]
	0x01DC85A0 LDR V8, [X31], #0x30
	0x01DC85A4 RET
	0x01DC85A8 BL 0x1C16F20
	0x01DC85AC STP X30, X19, [X31 - 0x10]!
	0x01DC85B0 LDR W8, [X0 + 0xE0]
	0x01DC85B4 MOV X19, X0
	0x01DC85B8 CBNZ W8, 0x1DC85CC
	0x01DC85BC LDRB W8, [X19 + 0x1C1]
	0x01DC85C0 CBNZ W8, 0x1DC85CC
	0x01DC85C4 MOV X0, X19
	0x01DC85C8 BL 0x1DC2808
	0x01DC85CC LDRB W8, [X19 + 0x1C0]
	0x01DC85D0 CBZ W8, 0x1DC85E0
	0x01DC85D4 LDR V0, [X19 + 0x1C4]
	0x01DC85D8 MOV X0, X19
	0x01DC85DC BL 0x1DC85EC
	0x01DC85E0 MOV X0, X19
	0x01DC85E4 LDP X30, X19, [X31], #0x10
	0x01DC85E8 B 0x1DC88BC
	0x01DC85EC STR D12, [X31 - 0x50]!
	0x01DC85F0 STP D11, D10, [X31 + 0x8]
	0x01DC85F4 STP D9, D8, [X31 + 0x18]
	0x01DC85F8 STR X30, [X31 + 0x28]
	0x01DC85FC STP X22, X21, [X31 + 0x30]
	0x01DC8600 STP X20, X19, [X31 + 0x40]
	0x01DC8604 ADRP X20, 0x2610000
	0x01DC8608 LDRB W8, [X20 + 0xBAB]
	0x01DC860C MOV V8.16B, V0.16B
	0x01DC8610 MOV X19, X0
	0x01DC8614 TBNZ X8, 0x0, 0x1DC8638
	0x01DC8618 ADRP X0, 0x232B000
	0x01DC861C LDR X0, [X0 + 0x598]
	0x01DC8620 BL 0x1C16CF4
	0x01DC8624 ADRP X0, 0x2330000
	0x01DC8628 LDR X0, [X0 + 0x238]
	0x01DC862C BL 0x1C16CF4
	0x01DC8630 MOVZ W8, 0x1
	0x01DC8634 STRB W8, [X20 + 0xBAB]
	0x01DC8638 LDRB W8, [X19 + 0x1C8]
	0x01DC863C CBNZ W8, 0x1DC889C
	0x01DC8640 FMOV S9, 1
	0x01DC8644 FCMP S8, 0x0
	0x01DC8648 FMOV S10, W31
	0x01DC864C FMIN S4, S8, S9
	0x01DC8650 FMOV S0, -0.5
	0x01DC8654 LDR V2, [X19 + 0x12C]
	0x01DC8658 FCSEL S4, S4, S10, PL
	0x01DC865C LDR V1, [X19 + 0x140]
	0x01DC8660 FADD S0, S4, S0
	0x01DC8664 FADD S0, S0, S0
	0x01DC8668 LDR V11, [X19 + 0x13C]
	0x01DC866C FCMP S0, 0x0
	0x01DC8670 FMIN S0, S0, S9
	0x01DC8674 LDR V3, [X19 + 0x128]
	0x01DC8678 FMIN S5, S2, S9
	0x01DC867C FCSEL S8, S0, S10, PL
	0x01DC8680 FCMP S2, 0x0
	0x01DC8684 FSUB S0, S10, S1
	0x01DC8688 FCSEL S2, S5, S10, PL
	0x01DC868C FMUL S0, S0, S2
	0x01DC8690 FADD S0, S1, S0
	0x01DC8694 FSUB S1, S4, S11
	0x01DC8698 FMUL S1, S1, S3
	0x01DC869C FADD S12, S1, S0
	0x01DC86A0 MOV X0, X31
	0x01DC86A4 STR S12, [X19 + 0x140]
	0x01DC86A8 BL 0x3C3C714
	0x01DC86AC FMUL S0, S0, S12
	0x01DC86B0 FADD S0, S11, S0
	0x01DC86B4 STR S0, [X19 + 0x13C]
	0x01DC86B8 FMUL S0, S0, S0
	0x01DC86BC FMUL S1, S0, S0
	0x01DC86C0 FADD S0, S0, S0
	0x01DC86C4 FMOV S2, 3
	0x01DC86C8 FSUB S0, S2, S0
	0x01DC86CC MOV X0, X31
	0x01DC86D0 FMUL S11, S1, S0

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X0+64]
	009 Compare X8, 0
	010 JumpIfEqual {77}
	011 Move S1, 1
	012 NotImplemented "Instruction FCMP not yet implemented."
	013 Move S2, W31
	014 NotImplemented "Instruction FMIN not yet implemented."
	015 Move X19, X0
	016 Move X21, X31
	017 NotImplemented "Instruction FCSEL not yet implemented."
	018 Move W22, 0xC3B40000
	019 Move W9, [X8+24]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Add X8, X8, X21
	023 Move X20, [X8+32]
	024 Compare X20, 0
	025 JumpIfEqual {77}
	026 Move X0, X20
	027 Move X1, X31
	028 Call Transform.get_localEulerAngles, X0
	029 Move X8, [X19+64]
	030 Compare X8, 0
	031 JumpIfEqual {77}
	032 Move W9, [X8+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Add X8, X8, X21
	035 Move X0, [X8+32]
	036 Compare X0, 0
	037 JumpIfEqual {77}
	038 Move X1, X31
	039 Move V8, V0
	040 Call Transform.get_localEulerAngles, X0
	041 Move X8, [X19+112]
	042 Compare X8, 0
	043 JumpIfEqual {77}
	044 Move W9, [X8+24]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X9, [X19+152]
	047 Compare X9, 0
	048 JumpIfEqual {77}
	049 Move W10, [X9+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add X8, X8, X21
	052 Add X9, X9, X21
	053 Move V0, [X8+32]
	054 Move V2, [X9+32]
	055 Move S3, W22
	056 Move X0, X20
	057 Add S4, S0, S3
	058 NotImplemented "Instruction FCMP not yet implemented."
	059 Add S3, S2, S3
	060 NotImplemented "Instruction FCSEL not yet implemented."
	061 NotImplemented "Instruction FCSEL not yet implemented."
	062 NotImplemented "Instruction FABD not yet implemented."
	063 NotImplemented "Instruction FABD not yet implemented."
	064 NotImplemented "Instruction FCMP not yet implemented."
	065 NotImplemented "Instruction FCSEL not yet implemented."
	066 NotImplemented "Instruction FCSEL not yet implemented."
	067 Subtract S2, S2, S0
	068 Multiply S2, S9, S2
	069 Add S2, S0, S2
	070 Move V0, V8
	071 Move X1, X31
	072 Call Transform.set_localEulerAngles, X0, X1
	073 Move X8, [X19+64]
	074 Add X21, X21, 1
	075 Compare X8, 0
	076 JumpIfNotEqual {19}
	077 Call 0x1C17F20
	078 Move X20, [X31+48]
	079 Move X19, [X31+56]
	080 Move X22, [X31+32]
	081 Move X21, [X31+40]
	082 Move X30, [X31+16]
	083 Move D9, [X31+64]
	084 Move D8, [X31+72]
	085 Return 
	086 Call 0x1C17F28

Method: System.Void SetIndexValues(System.Single value)

Disassembly:
	0x01DC8D68 STRB W8, [X21 + 0x783]
	0x01DC8D6C ADRP X22, 0x232B000
	0x01DC8D70 LDR X22, [X22 + 0x5A0]
	0x01DC8D74 MOVZ W10, 0xCCCD
	0x01DC8D78 MOVK W10, 0x3E4C0000
	0x01DC8D7C UNIMPLEMENTED
	0x01DC8D80 LDR X8, [X22]

ISIL:
	001 Move W8, [X0+32]
	002 Compare W8, 0
	003 JumpIfEqual {8}
	004 Move W8, 1
	005 Move [X0+61], W8
	006 Move [X0+40], S0
	007 Return 
	008 Call PlayerFingerView.ApplyIndexValues, X0, V0
	009 Return 

Method: System.Void ApplyIndexValues(System.Single value)

Disassembly:
	0x01DC86D4 BL 0x3C3C6C4
	0x01DC86D8 LDR V1, [X19 + 0x130]
	0x01DC86DC FMUL S0, S0, S1
	0x01DC86E0 BL 0x3EB1B70
	0x01DC86E4 LDR V1, [X19 + 0x134]
	0x01DC86E8 FMUL S0, S8, S0
	0x01DC86EC LDR X0, [X19 + 0xA8]
	0x01DC86F0 FSUB S2, S9, S1
	0x01DC86F4 FMUL S0, S1, S0
	0x01DC86F8 FMUL S1, S2, S11
	0x01DC86FC FADD S0, S0, S1
	0x01DC8700 FMIN S1, S0, S9
	0x01DC8704 FCMP S0, 0x0
	0x01DC8708 FCSEL S8, S1, S10, PL
	0x01DC870C CBZ X0, 0x1DC88B8
	0x01DC8710 MOV X1, X31
	0x01DC8714 BL 0x1E1E7F4
	0x01DC8718 ADRP X21, 0x232B000
	0x01DC871C LDR X21, [X21 + 0x598]
	0x01DC8720 MOV X20, X0
	0x01DC8724 LDR X8, [X21]
	0x01DC8728 LDR W9, [X8 + 0xE0]
	0x01DC872C CBNZ W9, 0x1DC8738
	0x01DC8730 MOV X0, X8
	0x01DC8734 BL 0x1C16DFC
	0x01DC8738 MOV X0, X20
	0x01DC873C MOV X1, X31
	0x01DC8740 MOV X2, X31
	0x01DC8744 BL 0x3C354F8
	0x01DC8748 TBZ X0, 0x0, 0x1DC876C
	0x01DC874C CBZ X20, 0x1DC88B8
	0x01DC8750 MOVZ W8, 0x42C80000
	0x01DC8754 FMOV S0, W8
	0x01DC8758 FMUL S0, S8, S0
	0x01DC875C MOV X0, X20
	0x01DC8760 MOV W1, W31
	0x01DC8764 MOV X2, X31
	0x01DC8768 BL 0x3C16F50
	0x01DC876C LDR X0, [X19 + 0xA8]
	0x01DC8770 CBZ X0, 0x1DC88B8
	0x01DC8774 MOV X1, X31
	0x01DC8778 BL 0x1E1E974
	0x01DC877C LDR X8, [X21]
	0x01DC8780 MOV X20, X0
	0x01DC8784 LDR W9, [X8 + 0xE0]
	0x01DC8788 CBNZ W9, 0x1DC8794
	0x01DC878C MOV X0, X8
	0x01DC8790 BL 0x1C16DFC
	0x01DC8794 MOV X0, X20
	0x01DC8798 MOV X1, X31
	0x01DC879C MOV X2, X31
	0x01DC87A0 BL 0x3C354F8
	0x01DC87A4 TBZ X0, 0x0, 0x1DC87F8
	0x01DC87A8 LDR X0, [X19 + 0xA8]
	0x01DC87AC CBZ X0, 0x1DC88B8
	0x01DC87B0 MOV X1, X31
	0x01DC87B4 BL 0x1E1E974
	0x01DC87B8 ADRP X22, 0x2330000
	0x01DC87BC LDR X22, [X22 + 0x238]
	0x01DC87C0 MOV X20, X0
	0x01DC87C4 LDR X8, [X22]
	0x01DC87C8 LDR W9, [X8 + 0xE0]
	0x01DC87CC CBNZ W9, 0x1DC87D8
	0x01DC87D0 MOV X0, X8
	0x01DC87D4 BL 0x1C16DFC
	0x01DC87D8 CBZ X20, 0x1DC88B8
	0x01DC87DC LDR X8, [X22]
	0x01DC87E0 MOV X0, X20
	0x01DC87E4 MOV V0.16B, V8.16B
	0x01DC87E8 MOV X2, X31
	0x01DC87EC LDR X8, [X8 + 0xB8]
	0x01DC87F0 LDR W1, [X8 + 0x3C]
	0x01DC87F4 BL 0x3C15CD8
	0x01DC87F8 LDR X0, [X19 + 0xA8]
	0x01DC87FC CBZ X0, 0x1DC88B8
	0x01DC8800 MOV X1, X31
	0x01DC8804 BL 0x1E1EA5C
	0x01DC8808 LDR X8, [X21]

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X0+72]
	009 Compare X8, 0
	010 JumpIfEqual {77}
	011 Move S1, 1
	012 NotImplemented "Instruction FCMP not yet implemented."
	013 Move S2, W31
	014 NotImplemented "Instruction FMIN not yet implemented."
	015 Move X19, X0
	016 Move X21, X31
	017 NotImplemented "Instruction FCSEL not yet implemented."
	018 Move W22, 0xC3B40000
	019 Move W9, [X8+24]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Add X8, X8, X21
	023 Move X20, [X8+32]
	024 Compare X20, 0
	025 JumpIfEqual {77}
	026 Move X0, X20
	027 Move X1, X31
	028 Call Transform.get_localEulerAngles, X0
	029 Move X8, [X19+72]
	030 Compare X8, 0
	031 JumpIfEqual {77}
	032 Move W9, [X8+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Add X8, X8, X21
	035 Move X0, [X8+32]
	036 Compare X0, 0
	037 JumpIfEqual {77}
	038 Move X1, X31
	039 Move V8, V0
	040 Call Transform.get_localEulerAngles, X0
	041 Move X8, [X19+120]
	042 Compare X8, 0
	043 JumpIfEqual {77}
	044 Move W9, [X8+24]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X9, [X19+160]
	047 Compare X9, 0
	048 JumpIfEqual {77}
	049 Move W10, [X9+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add X8, X8, X21
	052 Add X9, X9, X21
	053 Move V0, [X8+32]
	054 Move V2, [X9+32]
	055 Move S3, W22
	056 Move X0, X20
	057 Add S4, S0, S3
	058 NotImplemented "Instruction FCMP not yet implemented."
	059 Add S3, S2, S3
	060 NotImplemented "Instruction FCSEL not yet implemented."
	061 NotImplemented "Instruction FCSEL not yet implemented."
	062 NotImplemented "Instruction FABD not yet implemented."
	063 NotImplemented "Instruction FABD not yet implemented."
	064 NotImplemented "Instruction FCMP not yet implemented."
	065 NotImplemented "Instruction FCSEL not yet implemented."
	066 NotImplemented "Instruction FCSEL not yet implemented."
	067 Subtract S2, S2, S0
	068 Multiply S2, S9, S2
	069 Add S2, S0, S2
	070 Move V0, V8
	071 Move X1, X31
	072 Call Transform.set_localEulerAngles, X0, X1
	073 Move X8, [X19+72]
	074 Add X21, X21, 1
	075 Compare X8, 0
	076 JumpIfNotEqual {19}
	077 Call 0x1C17F20
	078 Move X20, [X31+48]
	079 Move X19, [X31+56]
	080 Move X22, [X31+32]
	081 Move X21, [X31+40]
	082 Move X30, [X31+16]
	083 Move D9, [X31+64]
	084 Move D8, [X31+72]
	085 Return 
	086 Call 0x1C17F28

Method: System.Void SetMiddleValues(System.Single value)

Disassembly:
	0x01DC8D84 LDR V4, [X19 + 0x10C]
	0x01DC8D88 LDR X9, [X8 + 0xB8]
	0x01DC8D8C LDR V1, [X9]
	0x01DC8D90 LDR V2, [X9 + 0x8]
	0x01DC8D94 ADRP X9, 0xFFFFFFFFFED22000
	0x01DC8D98 LDR V3, [X9 + 0x35C]
	0x01DC8D9C FSUB V1.2S, V1.2S, V8.2S

ISIL:
	001 Move W8, [X0+32]
	002 Compare W8, 0
	003 JumpIfEqual {8}
	004 Move W8, 1
	005 Move [X0+62], W8
	006 Move [X0+44], S0
	007 Return 
	008 Call PlayerFingerView.ApplyMiddleValues, X0, V0
	009 Return 

Method: System.Void ApplyMiddleValues(System.Single value)

Disassembly:
	0x01DC880C MOV X20, X0
	0x01DC8810 LDR W9, [X8 + 0xE0]
	0x01DC8814 CBNZ W9, 0x1DC8820
	0x01DC8818 MOV X0, X8
	0x01DC881C BL 0x1C16DFC
	0x01DC8820 MOV X0, X20
	0x01DC8824 MOV X1, X31
	0x01DC8828 MOV X2, X31
	0x01DC882C BL 0x3C354F8
	0x01DC8830 TBZ X0, 0x0, 0x1DC889C
	0x01DC8834 LDR X0, [X19 + 0xA8]
	0x01DC8838 CBZ X0, 0x1DC88B8
	0x01DC883C MOV X1, X31
	0x01DC8840 BL 0x1E1EA5C
	0x01DC8844 ADRP X20, 0x2330000
	0x01DC8848 LDR X20, [X20 + 0x238]
	0x01DC884C MOV X19, X0
	0x01DC8850 LDR X8, [X20]
	0x01DC8854 LDR W9, [X8 + 0xE0]
	0x01DC8858 CBNZ W9, 0x1DC8864
	0x01DC885C MOV X0, X8
	0x01DC8860 BL 0x1C16DFC
	0x01DC8864 CBZ X19, 0x1DC88B8
	0x01DC8868 LDR X8, [X20]
	0x01DC886C MOV X0, X19
	0x01DC8870 MOV V0.16B, V8.16B
	0x01DC8874 LDP X20, X19, [X31 + 0x40]
	0x01DC8878 LDR X8, [X8 + 0xB8]
	0x01DC887C LDP X22, X21, [X31 + 0x30]
	0x01DC8880 LDR X30, [X31 + 0x28]
	0x01DC8884 LDP D9, D8, [X31 + 0x18]
	0x01DC8888 LDR W1, [X8 + 0x3C]
	0x01DC888C LDP D11, D10, [X31 + 0x8]
	0x01DC8890 MOV X2, X31
	0x01DC8894 LDR V12, [X31], #0x50
	0x01DC8898 B 0x3C15CD8
	0x01DC889C LDP X20, X19, [X31 + 0x40]
	0x01DC88A0 LDP X22, X21, [X31 + 0x30]
	0x01DC88A4 LDR X30, [X31 + 0x28]
	0x01DC88A8 LDP D9, D8, [X31 + 0x18]
	0x01DC88AC LDP D11, D10, [X31 + 0x8]
	0x01DC88B0 LDR V12, [X31], #0x50
	0x01DC88B4 RET
	0x01DC88B8 BL 0x1C16F20
	0x01DC88BC SUB X31, X31, 0xA0
	0x01DC88C0 STP D13, D12, [X31 + 0x40]
	0x01DC88C4 STP D11, D10, [X31 + 0x50]
	0x01DC88C8 STP D9, D8, [X31 + 0x60]
	0x01DC88CC STP X30, X23, [X31 + 0x70]
	0x01DC88D0 STP X22, X21, [X31 + 0x80]
	0x01DC88D4 STP X20, X19, [X31 + 0x90]
	0x01DC88D8 ADRP X20, 0x2610000
	0x01DC88DC LDRB W8, [X20 + 0xBAA]
	0x01DC88E0 MOV X19, X0
	0x01DC88E4 TBNZ X8, 0x0, 0x1DC88FC
	0x01DC88E8 ADRP X0, 0x2330000
	0x01DC88EC LDR X0, [X0 + 0x238]
	0x01DC88F0 BL 0x1C16CF4
	0x01DC88F4 MOVZ W8, 0x1
	0x01DC88F8 STRB W8, [X20 + 0xBAA]
	0x01DC88FC ADRP X21, 0x2610000
	0x01DC8900 LDR V8, [X19 + 0x1A8]
	0x01DC8904 LDRB W8, [X21 + 0x783]
	0x01DC8908 LDR V9, [X19 + 0x1B0]
	0x01DC890C ADD X20, X19, 0x19C
	0x01DC8910 CBNZ W8, 0x1DC8928
	0x01DC8914 ADRP X0, 0x232B000
	0x01DC8918 LDR X0, [X0 + 0x5A0]
	0x01DC891C BL 0x1C16CF4
	0x01DC8920 MOVZ W8, 0x1
	0x01DC8924 STRB W8, [X21 + 0x783]
	0x01DC8928 ADRP X21, 0x232B000
	0x01DC892C LDR X21, [X21 + 0x5A0]
	0x01DC8930 LDR V0, [X19 + 0x14C]
	0x01DC8934 FMOV S1, 1
	0x01DC8938 FMOV S3, W31
	0x01DC893C LDR X8, [X21]
	0x01DC8940 FMIN S1, S0, S1
	0x01DC8944 FCMP S0, 0x0
	0x01DC8948 FCSEL S1, S1, S3, PL
	0x01DC894C LDR X9, [X8 + 0xB8]
	0x01DC8950 LDR V3, [X19 + 0x1BC]
	0x01DC8954 LDR V0, [X9]
	0x01DC8958 LDR V2, [X9 + 0x8]
	0x01DC895C FSUB V0.2S, V0.2S, V8.2S
	0x01DC8960 FSUB S2, S2, S9
	0x00000000 INVALID
	0x01DC8968 FMUL S2, S2, S1
	0x01DC896C FADD V0.2S, V8.2S, V0.2S
	0x01DC8970 FADD S2, S9, S2
	0x01DC8974 STR D0, [X19 + 0x1A8]
	0x01DC8978 STR S2, [X19 + 0x1B0]
	0x01DC897C LDR X8, [X8 + 0xB8]
	0x01DC8980 LDR V0, [X20 + 0x18]
	0x01DC8984 LDR V2, [X8]
	0x01DC8988 LDR V4, [X8 + 0x8]
	0x01DC898C FSUB V2.2S, V2.2S, V0.2S
	0x00000000 INVALID
	0x01DC8994 FADD V0.2S, V0.2S, V2.2S
	0x01DC8998 STR D0, [X20 + 0x18]
	0x01DC899C LDR X0, [X19 + 0x170]
	0x01DC89A0 FSUB S0, S4, S3
	0x01DC89A4 FMUL S0, S0, S1
	0x01DC89A8 FADD S0, S3, S0
	0x01DC89AC STR S0, [X19 + 0x1BC]
	0x01DC89B0 CBZ X0, 0x1DC8CE0
	0x01DC89B4 LDR V2, [X19 + 0x180]
	0x01DC89B8 LDR V1, [X19 + 0x17C]
	0x01DC89BC LDR V0, [X19 + 0x178]
	0x01DC89C0 MOV X1, X31
	0x01DC89C4 BL 0x3C3DE4C
	0x01DC89C8 LDR X0, [X19 + 0x170]
	0x01DC89CC STR D0, [X31 + 0x30]
	0x01DC89D0 STR D1, [X31 + 0x10]
	0x01DC89D4 STR D2, [X31 + 0x20]
	0x01DC89D8 CBZ X0, 0x1DC8CE0
	0x01DC89DC LDR V2, [X19 + 0x18C]
	0x01DC89E0 LDR V1, [X19 + 0x188]
	0x01DC89E4 LDR V0, [X19 + 0x184]
	0x01DC89E8 MOV X1, X31
	0x01DC89EC BL 0x3C3DE4C
	0x01DC89F0 LDR V7, [X31 + 0x3]
	0x01DC89F4 LDR V17, [X31 + 0x1]
	0x01DC89F8 LDR V16, [X19 + 0x19]
	0x01DC89FC LDR V6, [X19 + 0x1A0]
	0x01DC8A00 LDR V3, [X19 + 0x148]
	0x01DC8A04 MOV V7.S[1], V17.S[0]
	0x01DC8A08 LDR V17, [X31 + 0x2]
	0x01DC8A0C LDUR V4, [X20 + 0xC]
	0x01DC8A10 LDR V5, [X19 + 0x1B8]
	0x01DC8A14 MOV V1.S[1], V2.S[0]
	0x01DC8A18 MOV V7.S[2], V17.S[0]
	0x01DC8A1C MOV V7.S[3], V0.S[0]
	0x01DC8A20 FSUB V0.4S, V7.4S, V16.4S
	0x01DC8A24 FSUB V1.2S, V1.2S, V6.2S
	0x00000000 INVALID
	0x00000000 INVALID
	0x01DC8A30 FADD V2.4S, V4.4S, V0.4S
	0x01DC8A34 FADD V0.2S, V5.2S, V1.2S
	0x01DC8A38 MOV X0, X31
	0x01DC8A3C ADD X22, X19, 0x190
	0x01DC8A40 STR V16, [X31]
	0x01DC8A44 STR V2, [X31 + 0x3]
	0x01DC8A48 STUR V2, [X20 + 0xC]
	0x01DC8A4C STR D0, [X19 + 0x1B8]
	0x01DC8A50 BL 0x3C3C714
	0x01DC8A54 LDR V2, [X31 + 0x3]
	0x01DC8A58 LDR V3, [X31]
	0x01DC8A5C MOV X0, X31
	0x00000000 INVALID
	0x01DC8A64 FMUL S0, S0, V2.S[2]
	0x01DC8A68 MOV S2, V3.S[2]
	0x01DC8A6C FADD V1.2S, V3.2S, V1.2S
	0x01DC8A70 FADD S0, S2, S0
	0x01DC8A74 STR D1, [X19 + 0x190]
	0x01DC8A78 STR S0, [X22 + 0x8]
	0x01DC8A7C LDR V8, [X20]
	0x01DC8A80 LDR V9, [X19 + 0x1A4]
	0x01DC8A84 LDR V10, [X20 + 0x18]
	0x01DC8A88 LDR V11, [X19 + 0x1BC]
	0x01DC8A8C BL 0x3C3C714
	0x00000000 INVALID
	0x01DC8A94 FADD V1.2S, V8.2S, V1.2S
	0x01DC8A98 STR D1, [X20]
	0x01DC8A9C LDR X20, [X19 + 0x160]
	0x01DC8AA0 FMUL S0, S11, S0
	0x01DC8AA4 FADD S0, S9, S0
	0x01DC8AA8 STR S0, [X19 + 0x1A4]
	0x01DC8AAC CBZ X20, 0x1DC8CE0
	0x01DC8AB0 ADRP X22, 0x2330000
	0x01DC8AB4 LDR V8, [X19 + 0x198]
	0x01DC8AB8 LDR V9, [X19 + 0x194]
	0x01DC8ABC LDR V10, [X19 + 0x190]
	0x01DC8AC0 LDR X22, [X22 + 0x238]
	0x01DC8AC4 MOV X0, X20
	0x01DC8AC8 MOV X1, X31
	0x01DC8ACC BL 0x3C3F58C
	0x01DC8AD0 ADRP X23, 0x2610000
	0x01DC8AD4 LDRB W8, [X23 + 0x786]
	0x01DC8AD8 FSUB S10, S10, S0
	0x01DC8ADC FSUB S9, S9, S1
	0x01DC8AE0 FSUB S8, S8, S2
	0x01DC8AE4 CBNZ W8, 0x1DC8AFC
	0x01DC8AE8 ADRP X0, 0x232B000
	0x01DC8AEC LDR X0, [X0 + 0x5A0]
	0x01DC8AF0 BL 0x1C16CF4
	0x01DC8AF4 MOVZ W8, 0x1
	0x01DC8AF8 STRB W8, [X23 + 0x786]
	0x01DC8AFC LDR X8, [X21]
	0x01DC8B00 MOV V0.16B, V10.16B
	0x01DC8B04 MOV V1.16B, V9.16B
	0x01DC8B08 MOV V2.16B, V8.16B
	0x01DC8B0C LDR X8, [X8 + 0xB8]
	0x01DC8B10 MOV X0, X31
	0x01DC8B14 LDP S3, S4, [X8 + 0x18]
	0x01DC8B18 LDR V5, [X8 + 0x20]
	0x01DC8B1C BL 0x3C2A810
	0x01DC8B20 LDR X0, [X22]
	0x01DC8B24 MOV V10.16B, V0.16B
	0x01DC8B28 MOV V9.16B, V1.16B
	0x01DC8B2C MOV V8.16B, V2.16B
	0x01DC8B30 LDR W8, [X0 + 0xE0]
	0x01DC8B34 MOV V11.16B, V3.16B
	0x01DC8B38 CBNZ W8, 0x1DC8B44
	0x01DC8B3C BL 0x1C16DFC
	0x01DC8B40 LDR X0, [X22]
	0x01DC8B44 LDR X8, [X0 + 0xB8]
	0x01DC8B48 MOV X0, X20
	0x01DC8B4C MOV X1, X31
	0x01DC8B50 LDP S0, S3, [X8]
	0x01DC8B54 LDP S2, S1, [X8 + 0x8]
	0x01DC8B58 FMUL S4, S11, S0
	0x01DC8B5C FMUL S5, S10, S1
	0x01DC8B60 FMUL S7, S8, S3
	0x01DC8B64 FMUL S16, S11, S3
	0x01DC8B68 FMUL S17, S9, S1
	0x01DC8B6C FMUL S18, S8, S0
	0x01DC8B70 FMUL S20, S10, S3
	0x01DC8B74 FMUL S21, S10, S0
	0x01DC8B78 FMUL S22, S9, S0
	0x01DC8B7C FMUL S0, S9, S3
	0x01DC8B80 FMUL S3, S11, S2
	0x01DC8B84 FMUL S23, S11, S1
	0x01DC8B88 FMUL S1, S8, S1
	0x01DC8B8C FMUL S6, S9, S2
	0x01DC8B90 FMUL S19, S10, S2
	0x01DC8B94 FMUL S24, S8, S2
	0x01DC8B98 FADD S2, S4, S5
	0x01DC8B9C FADD S4, S16, S17
	0x01DC8BA0 FADD S1, S3, S1
	0x01DC8BA4 FSUB S3, S23, S21
	0x01DC8BA8 FADD S2, S6, S2
	0x01DC8BAC FADD S4, S18, S4
	0x01DC8BB0 FADD S5, S20, S1
	0x01DC8BB4 FSUB S3, S3, S0
	0x01DC8BB8 FSUB S0, S2, S7
	0x01DC8BBC FSUB S1, S4, S19
	0x01DC8BC0 FSUB S2, S5, S22
	0x01DC8BC4 FSUB S3, S3, S24
	0x01DC8BC8 BL 0x3C3F7AC
	0x01DC8BCC LDR X20, [X19 + 0x168]
	0x01DC8BD0 CBZ X20, 0x1DC8CE0
	0x01DC8BD4 LDR V11, [X19 + 0x1A4]
	0x01DC8BD8 LDR V12, [X19 + 0x1A0]
	0x01DC8BDC LDR V13, [X19 + 0x19C]
	0x01DC8BE0 MOV X0, X20
	0x01DC8BE4 MOV X1, X31
	0x01DC8BE8 BL 0x3C3F58C
	0x01DC8BEC LDRB W8, [X23 + 0x786]
	0x01DC8BF0 MOV V8.16B, V0.16B
	0x01DC8BF4 MOV V9.16B, V1.16B
	0x01DC8BF8 MOV V10.16B, V2.16B
	0x01DC8BFC CBNZ W8, 0x1DC8C14
	0x01DC8C00 ADRP X0, 0x232B000
	0x01DC8C04 LDR X0, [X0 + 0x5A0]
	0x01DC8C08 BL 0x1C16CF4
	0x01DC8C0C MOVZ W8, 0x1
	0x01DC8C10 STRB W8, [X23 + 0x786]
	0x01DC8C14 LDR X8, [X21]
	0x01DC8C18 FSUB S2, S11, S10
	0x01DC8C1C FSUB S1, S12, S9
	0x01DC8C20 FSUB S0, S13, S8
	0x01DC8C24 LDR X8, [X8 + 0xB8]
	0x01DC8C28 MOV X0, X31
	0x01DC8C2C LDP S3, S4, [X8 + 0x18]
	0x01DC8C30 LDR V5, [X8 + 0x20]
	0x01DC8C34 BL 0x3C2A810
	0x01DC8C38 LDR X8, [X22]
	0x01DC8C3C MOV X0, X20
	0x01DC8C40 LDP X20, X19, [X31 + 0x90]
	0x01DC8C44 LDP X22, X21, [X31 + 0x80]
	0x01DC8C48 LDR X8, [X8 + 0xB8]
	0x01DC8C4C LDP X30, X23, [X31 + 0x70]
	0x01DC8C50 LDP D9, D8, [X31 + 0x60]
	0x01DC8C54 LDP D11, D10, [X31 + 0x50]
	0x01DC8C58 LDP S4, S7, [X8 + 0x10]
	0x01DC8C5C LDP S6, S5, [X8 + 0x18]
	0x01DC8C60 LDP D13, D12, [X31 + 0x40]
	0x01DC8C64 MOV X1, X31
	0x01DC8C68 FMUL S16, S3, S4
	0x01DC8C6C FMUL S17, S0, S5
	0x01DC8C70 FMUL S18, S1, S6
	0x01DC8C74 FMUL S19, S2, S7
	0x01DC8C78 FMUL S20, S3, S7
	0x01DC8C7C FMUL S21, S1, S5
	0x01DC8C80 FMUL S22, S2, S4
	0x01DC8C84 FMUL S23, S0, S6

ISIL:
	001 Move [X31-80], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x2611000
	011 Move W8, [X20+2980]
	012 Move V8, V0
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x232C000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+2980], W8
	023 Move X8, [X19+80]
	024 Compare X8, 0
	025 JumpIfEqual {117}
	026 Move X9, [X8+24]
	027 Compare X9, 0
	028 JumpIfEqual {117}
	029 Move S0, 1
	030 NotImplemented "Instruction FCMP not yet implemented."
	031 Move S1, W31
	032 NotImplemented "Instruction FMIN not yet implemented."
	033 NotImplemented "Instruction FCSEL not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X22, 0x232C000
	036 Move X22, [X22+1432]
	037 Move X21, X31
	038 Move W23, 0xC3B40000
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X0, [X22]
	041 Add X8, X8, X21
	042 Move X20, [X8+32]
	043 Move W9, [X0+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X20
	048 Move X1, X31
	049 Move X2, X31
	050 Call Object.op_Equality, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {111}
	055 Move X8, [X19+80]
	056 Compare X8, 0
	057 JumpIfEqual {315}
	058 Move W9, [X8+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Add X8, X8, X21
	061 Move X20, [X8+32]
	062 Compare X20, 0
	063 JumpIfEqual {315}
	064 Move X0, X20
	065 Move X1, X31
	066 Call Transform.get_localEulerAngles, X0
	067 Move X8, [X19+80]
	068 Compare X8, 0
	069 JumpIfEqual {315}
	070 Move W9, [X8+24]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Add X8, X8, X21
	073 Move X0, [X8+32]
	074 Compare X0, 0
	075 JumpIfEqual {315}
	076 Move X1, X31
	077 Move V9, V0
	078 Call Transform.get_localEulerAngles, X0
	079 Move X8, [X19+128]
	080 Compare X8, 0
	081 JumpIfEqual {315}
	082 Move W9, [X8+24]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X9, [X19+168]
	085 Compare X9, 0
	086 JumpIfEqual {315}
	087 Move W10, [X9+24]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Add X8, X8, X21
	090 Add X9, X9, X21
	091 Move V0, [X8+32]
	092 Move V2, [X9+32]
	093 Move S3, W23
	094 Move X0, X20
	095 Add S4, S0, S3
	096 NotImplemented "Instruction FCMP not yet implemented."
	097 Add S3, S2, S3
	098 NotImplemented "Instruction FCSEL not yet implemented."
	099 NotImplemented "Instruction FCSEL not yet implemented."
	100 NotImplemented "Instruction FABD not yet implemented."
	101 NotImplemented "Instruction FABD not yet implemented."
	102 NotImplemented "Instruction FCMP not yet implemented."
	103 NotImplemented "Instruction FCSEL not yet implemented."
	104 NotImplemented "Instruction FCSEL not yet implemented."
	105 Subtract S2, S2, S0
	106 Multiply S2, S10, S2
	107 Add S2, S0, S2
	108 Move V0, V9
	109 Move X1, X31
	110 Call Transform.set_localEulerAngles, X0, X1
	111 Move X8, [X19+80]
	112 Compare X8, 0
	113 JumpIfEqual {315}
	114 Move W9, [X8+24]
	115 Add X21, X21, 1
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X8, [X19+88]
	118 Compare X8, 0
	119 JumpIfEqual {211}
	120 Move X9, [X8+24]
	121 Compare X9, 0
	122 JumpIfEqual {211}
	123 Move S0, 1
	124 NotImplemented "Instruction FCMP not yet implemented."
	125 Move S1, W31
	126 NotImplemented "Instruction FMIN not yet implemented."
	127 NotImplemented "Instruction FCSEL not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X22, 0x232C000
	130 Move X22, [X22+1432]
	131 Move X21, X31
	132 Move W23, 0xC3B40000
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X0, [X22]
	135 Add X8, X8, X21
	136 Move X20, [X8+32]
	137 Move W9, [X0+224]
	138 Compare W9, 0
	139 JumpIfNotEqual {141}
	140 Call 0x1C17DFC
	141 Move X0, X20
	142 Move X1, X31
	143 Move X2, X31
	144 Call Object.op_Equality, X0, X1
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {205}
	149 Move X8, [X19+88]
	150 Compare X8, 0
	151 JumpIfEqual {315}
	152 Move W9, [X8+24]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Add X8, X8, X21
	155 Move X20, [X8+32]
	156 Compare X20, 0
	157 JumpIfEqual {315}
	158 Move X0, X20
	159 Move X1, X31
	160 Call Transform.get_localEulerAngles, X0
	161 Move X8, [X19+88]
	162 Compare X8, 0
	163 JumpIfEqual {315}
	164 Move W9, [X8+24]
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Add X8, X8, X21
	167 Move X0, [X8+32]
	168 Compare X0, 0
	169 JumpIfEqual {315}
	170 Move X1, X31
	171 Move V9, V0
	172 Call Transform.get_localEulerAngles, X0
	173 Move X8, [X19+136]
	174 Compare X8, 0
	175 JumpIfEqual {315}
	176 Move W9, [X8+24]
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move X9, [X19+176]
	179 Compare X9, 0
	180 JumpIfEqual {315}
	181 Move W10, [X9+24]
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Add X8, X8, X21
	184 Add X9, X9, X21
	185 Move V0, [X8+32]
	186 Move V2, [X9+32]
	187 Move S3, W23
	188 Move X0, X20
	189 Add S4, S0, S3
	190 NotImplemented "Instruction FCMP not yet implemented."
	191 Add S3, S2, S3
	192 NotImplemented "Instruction FCSEL not yet implemented."
	193 NotImplemented "Instruction FCSEL not yet implemented."
	194 NotImplemented "Instruction FABD not yet implemented."
	195 NotImplemented "Instruction FABD not yet implemented."
	196 NotImplemented "Instruction FCMP not yet implemented."
	197 NotImplemented "Instruction FCSEL not yet implemented."
	198 NotImplemented "Instruction FCSEL not yet implemented."
	199 Subtract S2, S2, S0
	200 Multiply S2, S10, S2
	201 Add S2, S0, S2
	202 Move V0, V9
	203 Move X1, X31
	204 Call Transform.set_localEulerAngles, X0, X1
	205 Move X8, [X19+88]
	206 Compare X8, 0
	207 JumpIfEqual {315}
	208 Move W9, [X8+24]
	209 Add X21, X21, 1
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Move X8, [X19+96]
	212 Compare X8, 0
	213 JumpIfEqual {305}
	214 Move X9, [X8+24]
	215 Compare X9, 0
	216 JumpIfEqual {305}
	217 Move S0, 1
	218 NotImplemented "Instruction FCMP not yet implemented."
	219 Move S1, W31
	220 NotImplemented "Instruction FMIN not yet implemented."
	221 NotImplemented "Instruction FCSEL not yet implemented."
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Move X22, 0x232C000
	224 Move X22, [X22+1432]
	225 Move X21, X31
	226 Move W23, 0xC3B40000
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move X0, [X22]
	229 Add X8, X8, X21
	230 Move X20, [X8+32]
	231 Move W9, [X0+224]
	232 Compare W9, 0
	233 JumpIfNotEqual {235}
	234 Call 0x1C17DFC
	235 Move X0, X20
	236 Move X1, X31
	237 Move X2, X31
	238 Call Object.op_Equality, X0, X1
	239 Move TEMP, X0
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfEqual {299}
	243 Move X8, [X19+96]
	244 Compare X8, 0
	245 JumpIfEqual {315}
	246 Move W9, [X8+24]
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Add X8, X8, X21
	249 Move X20, [X8+32]
	250 Compare X20, 0
	251 JumpIfEqual {315}
	252 Move X0, X20
	253 Move X1, X31
	254 Call Transform.get_localEulerAngles, X0
	255 Move X8, [X19+96]
	256 Compare X8, 0
	257 JumpIfEqual {315}
	258 Move W9, [X8+24]
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Add X8, X8, X21
	261 Move X0, [X8+32]
	262 Compare X0, 0
	263 JumpIfEqual {315}
	264 Move X1, X31
	265 Move V8, V0
	266 Call Transform.get_localEulerAngles, X0
	267 Move X8, [X19+144]
	268 Compare X8, 0
	269 JumpIfEqual {315}
	270 Move W9, [X8+24]
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Move X9, [X19+184]
	273 Compare X9, 0
	274 JumpIfEqual {315}
	275 Move W10, [X9+24]
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Add X8, X8, X21
	278 Add X9, X9, X21
	279 Move V0, [X8+32]
	280 Move V2, [X9+32]
	281 Move S3, W23
	282 Move X0, X20
	283 Add S4, S0, S3
	284 NotImplemented "Instruction FCMP not yet implemented."
	285 Add S3, S2, S3
	286 NotImplemented "Instruction FCSEL not yet implemented."
	287 NotImplemented "Instruction FCSEL not yet implemented."
	288 NotImplemented "Instruction FABD not yet implemented."
	289 NotImplemented "Instruction FABD not yet implemented."
	290 NotImplemented "Instruction FCMP not yet implemented."
	291 NotImplemented "Instruction FCSEL not yet implemented."
	292 NotImplemented "Instruction FCSEL not yet implemented."
	293 Subtract S2, S2, S0
	294 Multiply S2, S9, S2
	295 Add S2, S0, S2
	296 Move V0, V8
	297 Move X1, X31
	298 Call Transform.set_localEulerAngles, X0, X1
	299 Move X8, [X19+96]
	300 Compare X8, 0
	301 JumpIfEqual {315}
	302 Move W9, [X8+24]
	303 Add X21, X21, 1
	304 NotImplemented "Instruction CMP not yet implemented."
	305 Move X20, [X31+64]
	306 Move X19, [X31+72]
	307 Move X22, [X31+48]
	308 Move X21, [X31+56]
	309 Move X30, [X31+32]
	310 Move X23, [X31+40]
	311 Move D9, [X31+16]
	312 Move D8, [X31+24]
	313 Move V10, [X31+80]
	314 Return 
	315 Call 0x1C17F20
	316 Call 0x1C17F28

Method: System.Single GetInterpolatedValue(System.Single stretch, System.Single bent, System.Single value)

Disassembly:
	0x01DC8D14 STP X22, X21, [X31 + 0x80]
	0x01DC8D18 STP X20, X19, [X31 + 0x90]
	0x01DC8D1C ADRP X20, 0x2610000
	0x01DC8D20 LDRB W8, [X20 + 0xBA9]
	0x01DC8D24 MOV X19, X0
	0x01DC8D28 TBNZ X8, 0x0, 0x1DC8D40
	0x01DC8D2C ADRP X0, 0x232B000
	0x01DC8D30 LDR X0, [X0 + 0x5F8]
	0x01DC8D34 BL 0x1C16CF4
	0x01DC8D38 MOVZ W8, 0x1
	0x01DC8D3C STRB W8, [X20 + 0xBA9]
	0x01DC8D40 ADRP X21, 0x2610000
	0x01DC8D44 LDR V8, [X19 + 0xF8]
	0x01DC8D48 LDRB W8, [X21 + 0x783]
	0x01DC8D4C LDR V9, [X19 + 0x100]
	0x01DC8D50 ADD X20, X19, 0x104
	0x01DC8D54 CBNZ W8, 0x1DC8D6C
	0x01DC8D58 ADRP X0, 0x232B000
	0x01DC8D5C LDR X0, [X0 + 0x5A0]
	0x01DC8D60 BL 0x1C16CF4
	0x01DC8D64 MOVZ W8, 0x1

ISIL:
	001 Move W8, 0xC3B40000
	002 Move S4, W8
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 Add S5, S0, S4
	005 Add S4, S1, S4
	006 NotImplemented "Instruction FCSEL not yet implemented."
	007 NotImplemented "Instruction FCSEL not yet implemented."
	008 NotImplemented "Instruction FABD not yet implemented."
	009 NotImplemented "Instruction FABD not yet implemented."
	010 NotImplemented "Instruction FCMP not yet implemented."
	011 Move S3, 1
	012 Move S6, W31
	013 NotImplemented "Instruction FMIN not yet implemented."
	014 NotImplemented "Instruction FCSEL not yet implemented."
	015 NotImplemented "Instruction FCSEL not yet implemented."
	016 NotImplemented "Instruction FCMP not yet implemented."
	017 NotImplemented "Instruction FCSEL not yet implemented."
	018 Subtract S1, S1, S0
	019 Multiply S1, S2, S1
	020 Add S0, S0, S1
	021 Return V0

Method: System.Void .ctor()

Disassembly:
	0x01DC8DA0 FSUB S2, S2, S9
	0x00000000 INVALID

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

