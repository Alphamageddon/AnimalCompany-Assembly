Type: AnimalCompany.NetPlayer/<RemoteVoiceVolumeUpdater>d__132

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01DB6CE4 LDP X26, X25, [X31 + 0x50]
	0x01DB6CE8 LDP X30, X27, [X31 + 0x40]
	0x01DB6CEC LDP D9, D8, [X31 + 0x30]
	0x01DB6CF0 LDP D11, D10, [X31 + 0x20]
	0x01DB6CF4 LDP D13, D12, [X31 + 0x10]
	0x01DB6CF8 MOV X2, X31
	0x01DB6CFC LDR V14, [X31], #0x90
	0x01DB6D00 B 0x1E77AF8
	0x01DB6D04 MOV X0, X31
	0x01DB6D08 LDR W1, [X24 + 0x68]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01DB9E3C MOVI V0.2D, 0x0

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01DB9E40 STR X31, [X31 + 0x20]
	0x01DB9E44 STP V0, V0, [X31]
	0x01DB9E48 CBZ X19, 0x1DB9F14
	0x01DB9E4C LDR X8, [X19 + 0xE0]
	0x01DB9E50 CBZ X8, 0x1DB9F14
	0x01DB9E54 LDR X0, [X8 + 0x50]
	0x01DB9E58 CBZ X0, 0x1DB9F14
	0x01DB9E5C ADRP X8, 0x233A000
	0x01DB9E60 LDR X8, [X8 + 0x900]
	0x01DB9E64 LDR X1, [X20 + 0x18]
	0x01DB9E68 LDR X2, [X8]
	0x01DB9E6C BL 0x265C3F4
	0x01DB9E70 LDR X0, [X20 + 0x20]
	0x01DB9E74 CBZ X0, 0x1DB9F14
	0x01DB9E78 ADRP X8, 0x233E000
	0x01DB9E7C LDR X8, [X8 + 0xCE0]
	0x01DB9E80 ADRP X22, 0x233E000
	0x01DB9E84 ADRP X23, 0x233E000
	0x01DB9E88 ADRP X21, 0x233E000
	0x01DB9E8C LDR X1, [X8]
	0x01DB9E90 LDR X22, [X22 + 0xCF0]
	0x01DB9E94 LDR X23, [X23 + 0xD10]
	0x01DB9E98 LDR X21, [X21 + 0xCE8]
	0x01DB9E9C ADD X8, X31, 0x0
	0x01DB9EA0 BL 0x2A13AB4
	0x01DB9EA4 LDR X1, [X22]
	0x01DB9EA8 ADD X0, X31, 0x0
	0x01DB9EAC BL 0x2BF5330
	0x01DB9EB0 TBZ X0, 0x0, 0x1DB9EF0
	0x01DB9EB4 LDR W24, [X31 + 0x10]
	0x01DB9EB8 LDR X25, [X31 + 0x18]
	0x01DB9EBC LDR X0, [X23]
	0x01DB9EC0 BL 0x1C16F10
	0x01DB9EC4 MOV X20, X0
	0x01DB9EC8 MOV X1, X31
	0x01DB9ECC BL 0x1D36B98
	0x01DB9ED0 LDR X8, [X20]
	0x01DB9ED4 STR W24, [X20 + 0x14]
	0x01DB9ED8 STR X25, [X20 + 0x18]
	0x01DB9EDC LDP X9, X2, [X8 + 0x1A8]
	0x01DB9EE0 MOV X0, X20
	0x01DB9EE4 MOV X1, X19
	0x01DB9EE8 BLR X9
	0x01DB9EEC B 0x1DB9EA4
	0x01DB9EF0 LDR X1, [X21]
	0x01DB9EF4 ADD X0, X31, 0x0
	0x01DB9EF8 BL 0x2BF5448
	0x01DB9EFC LDP X20, X19, [X31 + 0x60]
	0x01DB9F00 LDP X22, X21, [X31 + 0x50]
	0x01DB9F04 LDP X24, X23, [X31 + 0x40]
	0x01DB9F08 LDP X30, X25, [X31 + 0x30]
	0x01DB9F0C ADD X31, X31, 0x70
	0x01DB9F10 RET
	0x01DB9F14 BL 0x1C16F20
	0x01DB9F18 B 0x1DB9F20
	0x01DB9F1C B 0x1DB9F20
	0x01DB9F20 MOV X19, X0
	0x01DB9F24 CMP W1, 0x1
	0x01DB9F28 B.NE 0x1DB9F54
	0x01DB9F2C MOV X0, X19
	0x01DB9F30 BL 0x3EB1AD0
	0x01DB9F34 LDR X20, [X0]
	0x01DB9F38 BL 0x3EB1AE0
	0x01DB9F3C LDR X1, [X21]
	0x01DB9F40 ADD X0, X31, 0x0
	0x01DB9F44 BL 0x2BF5448
	0x01DB9F48 CBZ X20, 0x1DB9EFC
	0x01DB9F4C MOV X0, X20
	0x01DB9F50 BL 0x1C16F18
	0x01DB9F54 MOV X20, X31
	0x01DB9F58 B 0x1DB9F60
	0x01DB9F5C MOV X19, X0
	0x01DB9F60 LDR X1, [X21]
	0x01DB9F64 ADD X0, X31, 0x0
	0x01DB9F68 BL 0x2BF5448
	0x01DB9F6C CBNZ X20, 0x1DB9F78
	0x01DB9F70 MOV X0, X19
	0x01DB9F74 BL 0x1D2C690
	0x01DB9F78 MOV X0, X20
	0x01DB9F7C BL 0x1C16F18
	0x01DB9F80 BL 0x1990590
	0x01DB9F84 STP X30, X21, [X31 - 0x20]!
	0x01DB9F88 STP X20, X19, [X31 + 0x10]
	0x01DB9F8C MOV W20, W1
	0x01DB9F90 MOV X1, X31
	0x01DB9F94 MOV X19, X2
	0x01DB9F98 MOV X21, X0
	0x01DB9F9C BL 0x1D36B98
	0x01DB9FA0 STR W20, [X21 + 0x14]
	0x01DB9FA4 STR X19, [X21 + 0x18]
	0x01DB9FA8 LDP X20, X19, [X31 + 0x10]
	0x01DB9FAC LDP X30, X21, [X31], #0x20
	0x01DB9FB0 RET
	0x01DB9FB4 STR X30, [X31 - 0x10]!
	0x01DB9FB8 CBZ X1, 0x1DB9FDC
	0x01DB9FBC LDR X0, [X1 + 0xE0]
	0x01DB9FC0 CBZ X0, 0x1DB9FDC
	0x01DB9FC4 LDR X8, [X0]
	0x01DB9FC8 MOVZ W1, 0x1
	0x01DB9FCC LDR X3, [X8 + 0x3E8]
	0x01DB9FD0 LDR X2, [X8 + 0x3F0]
	0x01DB9FD4 LDR X30, [X31], #0x10
	0x01DB9FD8 BR X3
	0x01DB9FDC BL 0x1C16F20
	0x01DB9FE0 MOV X1, X31
	0x01DB9FE4 B 0x1D36B98
	0x01DB9FE8 STP X30, X21, [X31 - 0x20]!
	0x01DB9FEC STP X20, X19, [X31 + 0x10]
	0x01DB9FF0 MOV W20, W1
	0x01DB9FF4 MOV X1, X31
	0x01DB9FF8 MOV X19, X2
	0x01DB9FFC MOV X21, X0
	0x01DBA000 BL 0x1D36B98
	0x01DBA004 STR W20, [X21 + 0x14]
	0x01DBA008 STR X19, [X21 + 0x18]
	0x01DBA00C LDP X20, X19, [X31 + 0x10]
	0x01DBA010 LDP X30, X21, [X31], #0x20
	0x01DBA014 RET
	0x01DBA018 STP X30, X21, [X31 - 0x20]!
	0x01DBA01C STP X20, X19, [X31 + 0x10]
	0x01DBA020 ADRP X21, 0x261E000
	0x01DBA024 LDRB W8, [X21 + 0xB30]
	0x01DBA028 MOV X20, X1
	0x01DBA02C MOV X19, X0
	0x01DBA030 TBNZ X8, 0x0, 0x1DBA054
	0x01DBA034 ADRP X0, 0x233D000
	0x01DBA038 LDR X0, [X0 + 0xD18]
	0x01DBA03C BL 0x1C16CF4
	0x01DBA040 ADRP X0, 0x2339000
	0x01DBA044 LDR X0, [X0 + 0x900]
	0x01DBA048 BL 0x1C16CF4
	0x01DBA04C MOVZ W8, 0x1
	0x01DBA050 STRB W8, [X21 + 0xB30]
	0x01DBA054 CBZ X20, 0x1DBA0A8
	0x01DBA058 LDR X8, [X20 + 0xE8]
	0x01DBA05C CBZ X8, 0x1DBA0A8
	0x01DBA060 LDR X0, [X8 + 0x48]
	0x01DBA064 CBZ X0, 0x1DBA0A8
	0x01DBA068 ADRP X8, 0x233D000
	0x01DBA06C LDR X8, [X8 + 0xD18]
	0x01DBA070 LDR W1, [X19 + 0x14]
	0x01DBA074 LDR X2, [X8]
	0x01DBA078 BL 0x265A224
	0x01DBA07C LDR X8, [X20 + 0xE8]
	0x01DBA080 CBZ X8, 0x1DBA0A8
	0x01DBA084 LDR X0, [X8 + 0x50]
	0x01DBA088 CBZ X0, 0x1DBA0A8
	0x01DBA08C ADRP X8, 0x2339000
	0x01DBA090 LDR X8, [X8 + 0x900]
	0x01DBA094 LDR X1, [X19 + 0x18]
	0x01DBA098 LDP X20, X19, [X31 + 0x10]
	0x01DBA09C LDR X2, [X8]
	0x01DBA0A0 LDP X30, X21, [X31], #0x20
	0x01DBA0A4 B 0x265C3F4
	0x01DBA0A8 BL 0x1C16F20
	0x01DBA0AC STR X30, [X31 - 0x40]!
	0x01DBA0B0 STP X24, X23, [X31 + 0x10]
	0x01DBA0B4 STP X22, X21, [X31 + 0x20]
	0x01DBA0B8 STP X20, X19, [X31 + 0x30]
	0x01DBA0BC ADRP X21, 0x261E000
	0x01DBA0C0 ADRP X23, 0x233D000
	0x01DBA0C4 LDRB W8, [X21 + 0xB31]
	0x01DBA0C8 LDR X23, [X23 + 0xD20]
	0x01DBA0CC MOV W19, W1
	0x01DBA0D0 MOV X20, X0
	0x01DBA0D4 TBNZ X8, 0x0, 0x1DBA110
	0x01DBA0D8 ADRP X0, 0x233D000
	0x01DBA0DC LDR X0, [X0 + 0xD28]
	0x01DBA0E0 BL 0x1C16CF4
	0x01DBA0E4 ADRP X0, 0x233D000
	0x01DBA0E8 LDR X0, [X0 + 0xD30]
	0x01DBA0EC BL 0x1C16CF4
	0x01DBA0F0 ADRP X0, 0x233D000
	0x01DBA0F4 LDR X0, [X0 + 0xD38]
	0x01DBA0F8 BL 0x1C16CF4
	0x01DBA0FC ADRP X0, 0x233D000

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2620000
	008 Move W8, [X20+2856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {37}
	014 Move X0, 0x233B000
	015 Move X0, [X0+1608]
	016 Call 0x1C17CF4
	017 Move X0, 0x233B000
	018 Move X0, [X0+2736]
	019 Call 0x1C17CF4
	020 Move X0, 0x233E000
	021 Move X0, [X0+3832]
	022 Call 0x1C17CF4
	023 Move X0, 0x233E000
	024 Move X0, [X0+3840]
	025 Call 0x1C17CF4
	026 Move X0, 0x233B000
	027 Move X0, [X0+1432]
	028 Call 0x1C17CF4
	029 Move X0, 0x233F000
	030 Move X0, [X0+3184]
	031 Call 0x1C17CF4
	032 Move X0, 0x233B000
	033 Move X0, [X0+1592]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+2856], W8
	037 Move W8, [X19+16]
	038 Move X22, [X19+32]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Compare W8, 0
	041 JumpIfNotEqual {196}
	042 Move TEMP, 0
	043 Not TEMP
	044 Move W8, TEMP
	045 Move [X19+16], W8
	046 Move X8, 0x233B000
	047 Move X8, [X8+1592]
	048 Move W1, 256
	049 Move X0, [X8]
	050 Call 0x1C17D6C
	051 Move [X19+40], X0
	052 Move TEMP, 0
	053 Not TEMP
	054 Move W8, TEMP
	055 Move [X19+16], W8
	056 Compare X22, 0
	057 JumpIfEqual {204}
	058 Move X8, 0x233B000
	059 Move X8, [X8+1432]
	060 Move X20, [X22+456]
	061 Move X0, [X8]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, X20
	067 Move X1, X31
	068 Move X2, X31
	069 Call Object.op_Inequality, X0, X1
	070 Move S8, W31
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {128}
	075 Move X0, [X22+456]
	076 Compare X0, 0
	077 JumpIfEqual {204}
	078 Move X1, X31
	079 Call AudioSource.get_isPlaying, X0
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {128}
	084 Move X0, [X22+456]
	085 Compare X0, 0
	086 JumpIfEqual {204}
	087 Move X1, X31
	088 Call AudioSource.get_clip, X0
	089 Move X8, [X22+456]
	090 Compare X8, 0
	091 JumpIfEqual {204}
	092 Move X21, [X19+40]
	093 Move X20, X0
	094 Move X0, X8
	095 Move X1, X31
	096 Call AudioSource.get_timeSamples, X0
	097 Compare X20, 0
	098 JumpIfEqual {204}
	099 Move W2, W0
	100 Move X0, X20
	101 Move X1, X21
	102 Move X3, X31
	103 Call AudioClip.GetData, X0, X1, X2
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {128}
	108 Move X11, [X19+40]
	109 Compare X11, 0
	110 JumpIfEqual {204}
	111 Move W8, [X11+24]
	112 Move X9, X8
	113 ShiftRight X9, 32
	114 And X9, X9, 0x7FFFFFFF
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X9, X31
	117 Move X10, W8
	118 Add X11, X11, 32
	119 Move S0, W31
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move V1, [X11]
	122 Add X9, X9, 1
	123 NotImplemented "Instruction FCMP not yet implemented."
	124 NotImplemented "Instruction FCSEL not yet implemented."
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move S1, 5
	127 Multiply S8, S0, S1
	128 Move X0, [X22+200]
	129 Move [X22+372], S8
	130 Compare X0, 0
	131 JumpIfEqual {204}
	132 Move V0, V8
	133 Move X1, X31
	134 Call PlayerView.UpdateVoice, X0, V0
	135 Move W8, [X22+400]
	136 Compare W8, 0
	137 JumpIfEqual {193}
	138 Move X8, 0x233A000
	139 Move X8, [X8+2736]
	140 Move W1, 1
	141 Add X21, X22, 400
	142 Move X0, [X8]
	143 Call 0x1C17D6C
	144 Move X8, 0x233D000
	145 Move X8, [X8+3840]
	146 Move X20, X0
	147 Move X0, X21
	148 Move X1, [X8]
	149 Call Nullable`1<Int32>.get_Value, X0
	150 Move X8, 0x233E000
	151 Move V8, [X22+372]
	152 Move X8, [X8+3184]
	153 Move W21, W0
	154 Move X8, [X8]
	155 Move X0, X8
	156 Call 0x1C17F10
	157 Move X1, X31
	158 Move X22, X0
	159 Call BaseAction..ctor, X0
	160 Move X8, [X22]
	161 Move [X22+20], W21
	162 Move [X22+24], S8
	163 Move W1, 1
	164 Move X9, [X8+408]
	165 Move X2, [X8+416]
	166 Move X0, X22
	167 NotImplemented "Instruction BLR not yet implemented."
	168 Compare X20, 0
	169 JumpIfEqual {204}
	170 Move X21, X0
	171 Compare X0, 0
	172 JumpIfEqual {179}
	173 Move X8, [X20]
	174 Move X0, X21
	175 Move X1, [X8+64]
	176 Call 0x1C17E00
	177 Compare X0, 0
	178 JumpIfEqual {206}
	179 Move W8, [X20+24]
	180 Compare W8, 0
	181 JumpIfEqual {205}
	182 Move [X20+32], X21
	183 Move X8, 0x233A000
	184 Move X8, [X8+1608]
	185 Move X0, [X8]
	186 Move W8, [X0+224]
	187 Compare W8, 0
	188 JumpIfNotEqual {190}
	189 Call 0x1C17DFC
	190 Move X0, X20
	191 Move X1, X31
	192 Call App.ExecuteActionOrDelay, X0
	193 Move W0, 1
	194 Move [X19+24], X31
	195 Move [X19+16], W0
	196 Move W0, W31
	197 Move X20, [X31+32]
	198 Move X19, [X31+40]
	199 Move X22, [X31+16]
	200 Move X21, [X31+24]
	201 Move X30, [X31+8]
	202 Move V8, [X31+48]
	203 Return X0
	204 Call 0x1C17F20
	205 Call 0x1C17F28
	206 Call 0x1C17F44
	207 Move X1, X31
	208 Call 0x1C17DEC

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x01DBA138 LDR W8, [X0 + 0xE0]
	0x01DBA13C CBNZ W8, 0x1DBA148

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01DBA140 BL 0x1C16DFC
	0x01DBA144 LDR X0, [X23]
	0x01DBA148 ADRP X9, 0x233D000
	0x01DBA14C LDR X8, [X0 + 0xB8]
	0x01DBA150 LDR X9, [X9 + 0xD30]
	0x01DBA154 LDR X22, [X8]
	0x01DBA158 LDR X0, [X9]
	0x01DBA15C BL 0x1C16F10
	0x01DBA160 ADRP X8, 0x233D000
	0x01DBA164 LDR X8, [X8 + 0xD38]
	0x01DBA168 MOV X1, X22
	0x01DBA16C MOV X3, X31
	0x01DBA170 MOV X21, X0
	0x01DBA174 LDR X2, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x233A000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x233E000
	011 Move X0, [X0+3192]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01DBA178 BL 0x2D30578
	0x01DBA17C LDR X8, [X23]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

