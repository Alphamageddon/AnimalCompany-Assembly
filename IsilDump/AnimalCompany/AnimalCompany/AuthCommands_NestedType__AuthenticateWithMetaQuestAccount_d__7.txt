Type: AnimalCompany.AuthCommands/<AuthenticateWithMetaQuestAccount>d__7

Method: System.Void MoveNext()

Disassembly:
	0x01D4A130 MOV X22, X0
	0x01D4A134 ADRP X0, 0x23AA000
	0x01D4A138 LDR X0, [X0 + 0x740]
	0x01D4A13C BL 0x1C16D08
	0x01D4A140 MOV X5, X0
	0x01D4A144 MOVZ W0, 0x800
	0x01D4A148 MOVZ W6, 0x163
	0x01D4A14C MOV X1, X21
	0x01D4A150 MOV X2, X20
	0x01D4A154 MOV X3, X31
	0x01D4A158 MOV X4, X22
	0x01D4A15C MOV X7, X31
	0x01D4A160 BL 0x35C2674
	0x01D4A164 B 0x1D49AA0
	0x01D4A168 ADRP X0, 0x23A9000
	0x01D4A16C LDR X0, [X0 + 0x788]
	0x01D4A170 BL 0x1C16D08
	0x01D4A174 LDR W8, [X0 + 0xE0]
	0x01D4A178 CBNZ W8, 0x1D4A180
	0x01D4A17C BL 0x1C16DFC
	0x01D4A180 ADRP X0, 0x23AA000
	0x01D4A184 LDR X0, [X0 + 0x8B8]
	0x01D4A188 BL 0x1C16D08
	0x01D4A18C MOV X20, X0
	0x01D4A190 ADRP X0, 0x23AA000
	0x01D4A194 LDR X0, [X0 + 0x718]
	0x01D4A198 BL 0x1C16D08
	0x01D4A19C MOV X21, X0
	0x01D4A1A0 ADRP X0, 0x23AA000
	0x01D4A1A4 LDR X0, [X0 + 0x740]
	0x01D4A1A8 BL 0x1C16D08
	0x01D4A1AC MOV X4, X0
	0x01D4A1B0 MOVZ W0, 0x800
	0x01D4A1B4 MOVZ W5, 0x15F
	0x01D4A1B8 MOV X1, X20
	0x01D4A1BC MOV X2, X31
	0x01D4A1C0 MOV X3, X21
	0x01D4A1C4 MOV X6, X31
	0x01D4A1C8 BL 0x35C2014
	0x01D4A1CC MOV X21, X31
	0x01D4A1D0 MOVZ W20, 0x3
	0x01D4A1D4 STR W31, [X31 + 0x70]
	0x01D4A1D8 STR X31, [X31 + 0x68]
	0x01D4A1DC B 0x1D496D4
	0x01D4A1E0 MOVZ W0, 0x8
	0x01D4A1E4 BL 0x3EB1AF0
	0x01D4A1E8 LDR X8, [X20]
	0x01D4A1EC STR X8, [X0]
	0x01D4A1F0 ADRP X1, 0x216A000
	0x01D4A1F4 ADD X1, X1, 0xE58
	0x01D4A1F8 MOV X2, X31
	0x01D4A1FC BL 0x3EB1B00
	0x01D4A200 B 0x1D49608
	0x01D4A204 B 0x1D49608
	0x01D4A208 MOV X20, X1
	0x01D4A20C MOV X21, X0
	0x01D4A210 BL 0x3EB1AE0
	0x01D4A214 B 0x1D49610
	0x01D4A218 B 0x1D49608
	0x01D4A21C BL 0x1990590
	0x01D4A220 B 0x1D49608
	0x01D4A224 B 0x1D49608
	0x01D4A228 B 0x1D49608
	0x01D4A22C B 0x1D49608
	0x01D4A230 B 0x1D49608
	0x01D4A234 B 0x1D49608
	0x01D4A238 STR X30, [X31 - 0x30]!
	0x01D4A23C STP X22, X21, [X31 + 0x10]
	0x01D4A240 STP X20, X19, [X31 + 0x20]
	0x01D4A244 ADRP X22, 0x268E000
	0x01D4A248 ADRP X21, 0x23AA000
	0x01D4A24C LDRB W8, [X22 + 0x780]
	0x01D4A250 LDR X21, [X21 + 0x698]
	0x01D4A254 MOV X19, X1
	0x01D4A258 MOV X20, X0
	0x01D4A25C TBNZ X8, 0x0, 0x1D4A280
	0x01D4A260 ADRP X0, 0x23AA000
	0x01D4A264 LDR X0, [X0 + 0x7D8]
	0x01D4A268 BL 0x1C16CF4
	0x01D4A26C ADRP X0, 0x23AA000
	0x01D4A270 LDR X0, [X0 + 0x698]
	0x01D4A274 BL 0x1C16CF4
	0x01D4A278 MOVZ W8, 0x1
	0x01D4A27C STRB W8, [X22 + 0x780]
	0x01D4A280 LDR X0, [X21]
	0x01D4A284 ADRP X21, 0x23AA000
	0x01D4A288 LDR W8, [X0 + 0xE0]
	0x01D4A28C LDR X21, [X21 + 0x7D8]
	0x01D4A290 CBNZ W8, 0x1D4A298
	0x01D4A294 BL 0x1C16DFC
	0x01D4A298 LDR X2, [X21]
	0x01D4A29C ADD X0, X20, 0x8
	0x01D4A2A0 MOV X1, X19
	0x01D4A2A4 LDP X20, X19, [X31 + 0x20]
	0x01D4A2A8 LDP X22, X21, [X31 + 0x10]
	0x01D4A2AC LDR X30, [X31], #0x30
	0x01D4A2B0 B 0x263AB04
	0x01D4A2B4 STP X29, X30, [X31 - 0x50]!
	0x01D4A2B8 STP X26, X25, [X31 + 0x10]
	0x01D4A2BC STP X24, X23, [X31 + 0x20]
	0x01D4A2C0 STP X22, X21, [X31 + 0x30]
	0x01D4A2C4 STP X20, X19, [X31 + 0x40]
	0x01D4A2C8 SUB X31, X31, 0x1D0
	0x01D4A2CC ADRP X20, 0x268E000
	0x01D4A2D0 LDRB W8, [X20 + 0x781]
	0x01D4A2D4 MOV X19, X0
	0x01D4A2D8 ADD X24, X31, 0xD0
	0x01D4A2DC TBNZ X8, 0x0, 0x1D4A498
	0x01D4A2E0 ADRP X0, 0x23A9000
	0x01D4A2E4 LDR X0, [X0 + 0x648]
	0x01D4A2E8 BL 0x1C16CF4
	0x01D4A2EC ADRP X0, 0x23A9000
	0x01D4A2F0 LDR X0, [X0 + 0x970]
	0x01D4A2F4 BL 0x1C16CF4
	0x01D4A2F8 ADRP X0, 0x23AA000
	0x01D4A2FC LDR X0, [X0 + 0x8C8]
	0x01D4A300 BL 0x1C16CF4
	0x01D4A304 ADRP X0, 0x23AA000
	0x01D4A308 LDR X0, [X0 + 0x8D0]
	0x01D4A30C BL 0x1C16CF4
	0x01D4A310 ADRP X0, 0x23AA000
	0x01D4A314 LDR X0, [X0 + 0x8D8]
	0x01D4A318 BL 0x1C16CF4
	0x01D4A31C ADRP X0, 0x23AA000
	0x01D4A320 LDR X0, [X0 + 0x8E0]
	0x01D4A324 BL 0x1C16CF4
	0x01D4A328 ADRP X0, 0x23AA000
	0x01D4A32C LDR X0, [X0 + 0x8E8]
	0x01D4A330 BL 0x1C16CF4
	0x01D4A334 ADRP X0, 0x23AA000
	0x01D4A338 LDR X0, [X0 + 0x8F0]
	0x01D4A33C BL 0x1C16CF4
	0x01D4A340 ADRP X0, 0x23A9000
	0x01D4A344 LDR X0, [X0 + 0xA68]
	0x01D4A348 BL 0x1C16CF4
	0x01D4A34C ADRP X0, 0x23AA000
	0x01D4A350 LDR X0, [X0 + 0x8F8]
	0x01D4A354 BL 0x1C16CF4
	0x01D4A358 ADRP X0, 0x23AA000
	0x01D4A35C LDR X0, [X0 + 0x900]
	0x01D4A360 BL 0x1C16CF4
	0x01D4A364 ADRP X0, 0x23AA000
	0x01D4A368 LDR X0, [X0 + 0x908]
	0x01D4A36C BL 0x1C16CF4
	0x01D4A370 ADRP X0, 0x23AA000
	0x01D4A374 LDR X0, [X0 + 0x910]
	0x01D4A378 BL 0x1C16CF4
	0x01D4A37C ADRP X0, 0x23AA000
	0x01D4A380 LDR X0, [X0 + 0x918]
	0x01D4A384 BL 0x1C16CF4
	0x01D4A388 ADRP X0, 0x23AA000
	0x01D4A38C LDR X0, [X0 + 0x818]
	0x01D4A390 BL 0x1C16CF4
	0x01D4A394 ADRP X0, 0x23A9000
	0x01D4A398 LDR X0, [X0 + 0x788]
	0x01D4A39C BL 0x1C16CF4
	0x01D4A3A0 ADRP X0, 0x23A9000
	0x01D4A3A4 LDR X0, [X0 + 0xAC8]
	0x01D4A3A8 BL 0x1C16CF4
	0x01D4A3AC ADRP X0, 0x23AA000
	0x01D4A3B0 LDR X0, [X0 + 0x920]
	0x01D4A3B4 BL 0x1C16CF4
	0x01D4A3B8 ADRP X0, 0x23AA000
	0x01D4A3BC LDR X0, [X0 + 0x928]
	0x01D4A3C0 BL 0x1C16CF4
	0x01D4A3C4 ADRP X0, 0x23AA000
	0x01D4A3C8 LDR X0, [X0 + 0x7A0]
	0x01D4A3CC BL 0x1C16CF4
	0x01D4A3D0 ADRP X0, 0x23AA000
	0x01D4A3D4 LDR X0, [X0 + 0x930]
	0x01D4A3D8 BL 0x1C16CF4
	0x01D4A3DC ADRP X0, 0x23AA000
	0x01D4A3E0 LDR X0, [X0 + 0x938]
	0x01D4A3E4 BL 0x1C16CF4
	0x01D4A3E8 ADRP X0, 0x23AA000
	0x01D4A3EC LDR X0, [X0 + 0x940]
	0x01D4A3F0 BL 0x1C16CF4
	0x01D4A3F4 ADRP X0, 0x23AA000
	0x01D4A3F8 LDR X0, [X0 + 0x948]
	0x01D4A3FC BL 0x1C16CF4
	0x01D4A400 ADRP X0, 0x23AA000
	0x01D4A404 LDR X0, [X0 + 0x7A8]
	0x01D4A408 BL 0x1C16CF4
	0x01D4A40C ADRP X0, 0x23AA000
	0x01D4A410 LDR X0, [X0 + 0x7B0]
	0x01D4A414 BL 0x1C16CF4
	0x01D4A418 ADRP X0, 0x23AA000
	0x01D4A41C LDR X0, [X0 + 0x950]
	0x01D4A420 BL 0x1C16CF4
	0x01D4A424 ADRP X0, 0x23AA000
	0x01D4A428 LDR X0, [X0 + 0x958]
	0x01D4A42C BL 0x1C16CF4
	0x01D4A430 ADRP X0, 0x23AA000
	0x01D4A434 LDR X0, [X0 + 0x960]
	0x01D4A438 BL 0x1C16CF4
	0x01D4A43C ADRP X0, 0x23AA000
	0x01D4A440 LDR X0, [X0 + 0x968]
	0x01D4A444 BL 0x1C16CF4
	0x01D4A448 ADRP X0, 0x23AA000
	0x01D4A44C LDR X0, [X0 + 0x970]
	0x01D4A450 BL 0x1C16CF4
	0x01D4A454 ADRP X0, 0x23AA000
	0x01D4A458 LDR X0, [X0 + 0x718]
	0x01D4A45C BL 0x1C16CF4
	0x01D4A460 ADRP X0, 0x23AA000
	0x01D4A464 LDR X0, [X0 + 0x978]
	0x01D4A468 BL 0x1C16CF4
	0x01D4A46C ADRP X0, 0x23AA000
	0x01D4A470 LDR X0, [X0 + 0x980]
	0x01D4A474 BL 0x1C16CF4
	0x01D4A478 ADRP X0, 0x23AA000
	0x01D4A47C LDR X0, [X0 + 0x988]
	0x01D4A480 BL 0x1C16CF4
	0x01D4A484 ADRP X0, 0x23AA000
	0x01D4A488 LDR X0, [X0 + 0x990]
	0x01D4A48C BL 0x1C16CF4
	0x01D4A490 MOVZ W8, 0x1
	0x01D4A494 STRB W8, [X20 + 0x781]
	0x01D4A498 MOVI V0.2D, 0x0
	0x01D4A49C STR X31, [X31 + 0x150]
	0x01D4A4A0 STP X31, X31, [X31 + 0xD0]
	0x01D4A4A4 STR X31, [X31 + 0xE0]
	0x01D4A4A8 STP X31, X31, [X31 + 0xC0]
	0x01D4A4AC STP X31, X31, [X31 + 0xB0]
	0x01D4A4B0 STR X31, [X31 + 0xA8]
	0x01D4A4B4 STP V0, V0, [X24 + 0x60]
	0x01D4A4B8 STP V0, V0, [X24 + 0x40]
	0x01D4A4BC STP V0, V0, [X24 + 0x20]
	0x01D4A4C0 STR W31, [X31 + 0xA0]
	0x01D4A4C4 LDR W26, [X19]
	0x01D4A4C8 ADRP X25, 0x23A9000
	0x01D4A4CC LDR X25, [X25 + 0xA68]
	0x01D4A4D0 CMP W26, 0x4
	0x01D4A4D4 B.HI 0x1D4A588
	0x01D4A4D8 ADRP X8, 0xFFFFFFFFFEDA4000
	0x01D4A4DC ADD X8, X8, 0x5E4
	0x01D4A4E0 ADR X9, 0x10
	0x01D4A4E4 LDRB W10, [X8, X26, LSL]
	0x01D4A4E8 ADD X9, X9, X10, 0x2, LSL
	0x01D4A4EC BR X9
	0x01D4A4F0 LDR X8, [X19 + 0xA8]
	0x01D4A4F4 MOVN W26, 0x0
	0x01D4A4F8 STR X8, [X31 + 0xC8]
	0x01D4A4FC STR X31, [X19 + 0xA8]
	0x01D4A500 STR W26, [X19]
	0x01D4A504 ADRP X8, 0x23AA000
	0x01D4A508 LDR X8, [X8 + 0x7A0]
	0x01D4A50C LDR X1, [X8]
	0x01D4A510 ADD X8, X31, 0x160
	0x01D4A514 ADD X0, X31, 0xC8
	0x01D4A518 BL 0x2678094
	0x01D4A51C LDR V0, [X24 + 0x9]
	0x01D4A520 LDR X8, [X31 + 0x170]
	0x01D4A524 ADRP X9, 0x23AA000
	0x01D4A528 LDR X9, [X9 + 0x988]
	0x01D4A52C STR V0, [X24]
	0x01D4A530 STR X8, [X31 + 0xE0]
	0x01D4A534 STR X8, [X19 + 0x30]
	0x01D4A538 STR V0, [X19 + 0x2]
	0x01D4A53C LDR V0, [X24]
	0x01D4A540 LDR X1, [X9]
	0x01D4A544 STR X8, [X31 + 0x80]
	0x01D4A548 STR V0, [X31 + 0x7]
	0x01D4A54C ADD X0, X31, 0x70
	0x01D4A550 BL 0x1D47D38
	0x01D4A554 B 0x1D4A5D8
	0x01D4A558 LDR X8, [X19 + 0xB8]
	0x01D4A55C MOVN W26, 0x0
	0x01D4A560 STR X8, [X31 + 0xB8]
	0x01D4A564 STR X31, [X19 + 0xB8]
	0x01D4A568 STR W26, [X19]
	0x01D4A56C B 0x1D4A838
	0x01D4A570 LDR X8, [X19 + 0xB0]
	0x01D4A574 MOVN W26, 0x0
	0x01D4A578 STR X8, [X31 + 0xC0]
	0x01D4A57C STR X31, [X19 + 0xB0]
	0x01D4A580 STR W26, [X19]
	0x01D4A584 B 0x1D4A65C
	0x01D4A588 STP X31, X31, [X19 + 0x20]
	0x01D4A58C STR X31, [X19 + 0x30]
	0x01D4A590 ADRP X8, 0x23A9000
	0x01D4A594 LDR X8, [X8 + 0x648]
	0x01D4A598 LDR X0, [X8]
	0x01D4A59C LDR W8, [X0 + 0xE0]
	0x01D4A5A0 CBNZ W8, 0x1D4A5A8
	0x01D4A5A4 BL 0x1C16DFC
	0x01D4A5A8 BL 0x1D32A4C
	0x01D4A5AC CMP W0, 0x1
	0x01D4A5B0 B.NE 0x1D4A5D8
	0x01D4A5B4 ADRP X8, 0x23A9000
	0x01D4A5B8 LDR X8, [X8 + 0x970]
	0x01D4A5BC LDR X0, [X8]
	0x01D4A5C0 LDR W8, [X0 + 0xE0]
	0x01D4A5C4 CBNZ W8, 0x1D4A5CC
	0x01D4A5C8 BL 0x1C16DFC
	0x01D4A5CC MOV X0, X31
	0x01D4A5D0 BL 0x3C03278
	0x01D4A5D4 TBZ X0, 0x0, 0x1D4AB14
	0x01D4A5D8 LDR X8, [X19 + 0x20]
	0x01D4A5DC CBZ X8, 0x1D4A700
	0x01D4A5E0 MOVI V0.2D, 0x0
	0x01D4A5E4 STR X31, [X19 + 0xA0]
	0x01D4A5E8 STR X8, [X19 + 0x38]
	0x01D4A5EC STP V0, V0, [X19 + 0x80]
	0x01D4A5F0 STP V0, V0, [X19 + 0x60]
	0x01D4A5F4 STP V0, V0, [X19 + 0x40]
	0x01D4A5F8 ADRP X8, 0x23A9000
	0x01D4A5FC LDR X8, [X8 + 0x648]
	0x01D4A600 LDR X0, [X8]
	0x01D4A604 LDR W8, [X0 + 0xE0]
	0x01D4A608 CBNZ W8, 0x1D4A610
	0x01D4A60C BL 0x1C16DFC
	0x01D4A610 BL 0x1D32AF4
	0x01D4A614 CBZ X0, 0x1D4AD38
	0x01D4A618 LDR X1, [X19 + 0x20]
	0x01D4A61C MOV X2, X31
	0x01D4A620 MOV X3, X31
	0x01D4A624 MOV X4, X31
	0x01D4A628 BL 0x1D6BCE4
	0x01D4A62C CBZ X0, 0x1D4AD3C
	0x01D4A630 ADRP X8, 0x23AA000
	0x01D4A634 LDR X8, [X8 + 0x960]
	0x01D4A638 LDR X1, [X8]
	0x01D4A63C BL 0x269F5D0
	0x01D4A640 ADRP X8, 0x23AA000
	0x01D4A644 LDR X8, [X8 + 0x940]
	0x01D4A648 STR X0, [X31 + 0xC0]
	0x01D4A64C LDR X1, [X8]
	0x01D4A650 ADD X0, X31, 0xC0
	0x01D4A654 BL 0x2677430
	0x01D4A658 TBZ X0, 0x0, 0x1D4A780
	0x01D4A65C ADRP X8, 0x23AA000
	0x01D4A660 LDR X8, [X8 + 0x920]
	0x01D4A664 ADD X0, X31, 0xC0
	0x01D4A668 LDR X1, [X8]
	0x01D4A66C BL 0x2677474
	0x01D4A670 STR X0, [X19 + 0x40]
	0x01D4A674 ADRP X8, 0x23A9000
	0x01D4A678 LDR X8, [X8 + 0x648]
	0x01D4A67C LDR X0, [X8]
	0x01D4A680 LDR W8, [X0 + 0xE0]
	0x01D4A684 CBNZ W8, 0x1D4A68C
	0x01D4A688 BL 0x1C16DFC
	0x01D4A68C BL 0x1D32AF4
	0x01D4A690 ADRP X8, 0x23A9000
	0x01D4A694 LDR X21, [X19 + 0x20]
	0x01D4A698 LDR X8, [X8 + 0xAC8]
	0x01D4A69C MOV X20, X0
	0x01D4A6A0 LDR X0, [X8]
	0x01D4A6A4 MOVZ W1, 0x1
	0x01D4A6A8 BL 0x1C16D6C
	0x01D4A6AC LDR X23, [X19 + 0x20]
	0x01D4A6B0 CBZ X23, 0x1D4AD1C
	0x01D4A6B4 ADRP X10, 0x23AA000
	0x01D4A6B8 LDR X8, [X23]
	0x01D4A6BC LDR X10, [X10 + 0x818]
	0x01D4A6C0 MOV X22, X0
	0x01D4A6C4 LDRH W9, [X8 + 0x12E]
	0x01D4A6C8 LDR X1, [X10]
	0x01D4A6CC CBZ X9, 0x1D4A6F0
	0x01D4A6D0 LDR X10, [X8 + 0xB0]
	0x01D4A6D4 ADD X10, X10, 0x8
	0x01D4A6D8 LDUR X11, [X10 - 0x8]
	0x01D4A6DC CMP X11, X1
	0x01D4A6E0 B.EQ 0x1D4A7C0
	0x01D4A6E4 SUBS X9, X9, 0x1
	0x01D4A6E8 ADD X10, X10, 0x10
	0x01D4A6EC B.NE 0x1D4A6D8
	0x01D4A6F0 MOVZ W2, 0xA
	0x01D4A6F4 MOV X0, X23
	0x01D4A6F8 BL 0x1C5C788
	0x01D4A6FC B 0x1D4A7D0
	0x01D4A700 LDR W22, [X19 + 0x28]
	0x01D4A704 CBZ W22, 0x1D4A764
	0x01D4A708 CMP W22, 0xC
	0x01D4A70C B.EQ 0x1D4A764
	0x01D4A710 ADRP X8, 0x23A9000
	0x01D4A714 LDR X8, [X8 + 0x788]
	0x01D4A718 LDR X0, [X8]
	0x01D4A71C LDR W8, [X0 + 0xE0]
	0x01D4A720 CBNZ W8, 0x1D4A728
	0x01D4A724 BL 0x1C16DFC
	0x01D4A728 ADRP X8, 0x23AA000
	0x01D4A72C LDR X8, [X8 + 0x990]
	0x01D4A730 ADRP X9, 0x23AA000
	0x01D4A734 ADRP X10, 0x23AA000
	0x01D4A738 LDR X9, [X9 + 0x718]
	0x01D4A73C LDR X10, [X10 + 0x978]
	0x01D4A740 LDR X1, [X8]
	0x01D4A744 LDR X3, [X9]
	0x01D4A748 LDR X4, [X10]
	0x01D4A74C MOVZ W0, 0x800
	0x01D4A750 MOVZ W5, 0x4B
	0x01D4A754 MOV X2, X31
	0x01D4A758 MOV X6, X31
	0x01D4A75C BL 0x35C25CC
	0x01D4A760 LDR W22, [X19 + 0x28]
	0x01D4A764 MOVI V0.2D, 0x0
	0x01D4A768 MOV W21, W31
	0x01D4A76C STR X31, [X31 + 0x150]
	0x01D4A770 STP V0, V0, [X24 + 0x60]
	0x01D4A774 STP V0, V0, [X24 + 0x40]
	0x01D4A778 STP V0, V0, [X24 + 0x20]
	0x01D4A77C B 0x1D4A8DC
	0x01D4A780 MOVZ W8, 0x1
	0x01D4A784 STR W8, [X19]
	0x01D4A788 LDR X8, [X31 + 0xC0]
	0x01D4A78C STR X8, [X19 + 0xB0]
	0x01D4A790 LDR X0, [X25]
	0x01D4A794 LDR W8, [X0 + 0xE0]
	0x01D4A798 CBNZ W8, 0x1D4A7A0
	0x01D4A79C BL 0x1C16DFC
	0x01D4A7A0 ADRP X8, 0x23AA000
	0x01D4A7A4 LDR X8, [X8 + 0x8E0]
	0x01D4A7A8 ADD X0, X19, 0x8
	0x01D4A7AC LDR X3, [X8]
	0x01D4A7B0 ADD X1, X31, 0xC0
	0x01D4A7B4 MOV X2, X19
	0x01D4A7B8 BL 0x212D044
	0x01D4A7BC B 0x1D4A938
	0x01D4A7C0 LDR W9, [X10]
	0x01D4A7C4 ADD W9, W9, 0xA
	0x01D4A7C8 ADD X8, X8, W9, 0x4, SXTW
	0x01D4A7CC ADD X0, X8, 0x138
	0x01D4A7D0 LDP X8, X1, [X0]
	0x01D4A7D4 MOV X0, X23
	0x01D4A7D8 BLR X8
	0x01D4A7DC CBZ X22, 0x1D4AD20
	0x01D4A7E0 LDR W8, [X22 + 0x18]
	0x01D4A7E4 CBZ W8, 0x1D4AD24
	0x01D4A7E8 STR X0, [X22 + 0x20]
	0x01D4A7EC CBZ X20, 0x1D4AD28
	0x01D4A7F0 MOV X0, X20
	0x01D4A7F4 MOV X1, X21
	0x01D4A7F8 MOV X2, X22
	0x01D4A7FC MOV X3, X31
	0x01D4A800 MOV X4, X31
	0x01D4A804 BL 0x1D68A20
	0x01D4A808 CBZ X0, 0x1D4AD2C
	0x01D4A80C ADRP X8, 0x23AA000
	0x01D4A810 LDR X8, [X8 + 0x950]
	0x01D4A814 LDR X1, [X8]
	0x01D4A818 BL 0x26A9E48
	0x01D4A81C ADRP X8, 0x23AA000
	0x01D4A820 LDR X8, [X8 + 0x938]
	0x01D4A824 STR X0, [X31 + 0xB8]
	0x01D4A828 LDR X1, [X8]
	0x01D4A82C ADD X0, X31, 0xB8
	0x01D4A830 BL 0x2677D5C
	0x01D4A834 TBZ X0, 0x0, 0x1D4AA6C
	0x01D4A838 ADRP X8, 0x23AA000
	0x01D4A83C LDR X8, [X8 + 0x928]
	0x01D4A840 LDR X1, [X8]
	0x01D4A844 ADD X0, X31, 0xB8
	0x01D4A848 BL 0x2677DA0
	0x01D4A84C CBZ X1, 0x1D4AD18
	0x01D4A850 LDR X8, [X1 + 0x18]
	0x01D4A854 CBZ X8, 0x1D4A86C
	0x01D4A858 CBZ W8, 0x1D4AD40
	0x01D4A85C ADD X1, X1, 0x20
	0x01D4A860 ADD X0, X19, 0x48
	0x01D4A864 MOVZ W2, 0x50
	0x01D4A868 BL 0x3EB1B30
	0x01D4A86C CMP W26, 0x3
	0x01D4A870 B.NE 0x1D4A9CC
	0x01D4A874 LDR X8, [X19 + 0xC0]
	0x01D4A878 MOVN W26, 0x0
	0x01D4A87C STR X8, [X31 + 0xB0]
	0x01D4A880 STR X31, [X19 + 0xC0]
	0x01D4A884 STR W26, [X19]
	0x01D4A888 ADRP X8, 0x23AA000
	0x01D4A88C LDR X8, [X8 + 0x930]
	0x01D4A890 LDR X1, [X8]
	0x01D4A894 ADD X0, X31, 0xB0
	0x01D4A898 BL 0x2677064
	0x01D4A89C STR X0, [X19 + 0x98]
	0x01D4A8A0 CMP W26, 0x4
	0x01D4A8A4 B.NE 0x1D4A954
	0x01D4A8A8 LDR X8, [X19 + 0xC8]
	0x01D4A8AC MOVN W9, 0x0
	0x01D4A8B0 STR X8, [X31 + 0xA8]
	0x01D4A8B4 STR X31, [X19 + 0xC8]
	0x01D4A8B8 STR W9, [X19]
	0x01D4A8BC ADD X0, X31, 0xA8
	0x01D4A8C0 MOV X1, X31
	0x01D4A8C4 BL 0x32C3B4C
	0x01D4A8C8 ADD X1, X19, 0x38
	0x01D4A8CC ADD X0, X31, 0xF0
	0x01D4A8D0 MOVZ W2, 0x68
	0x01D4A8D4 BL 0x3EB1AC0
	0x01D4A8D8 LDP W22, W21, [X19 + 0xA0]
	0x01D4A8DC ADRP X20, 0x23AA000
	0x01D4A8E0 LDR X20, [X20 + 0x8F0]
	0x01D4A8E4 MOVN W8, 0x1
	0x01D4A8E8 ADD X0, X31, 0x8
	0x01D4A8EC ADD X1, X31, 0xF0
	0x01D4A8F0 MOVZ W2, 0x68
	0x01D4A8F4 STR W8, [X19], #0x8
	0x01D4A8F8 BL 0x3EB1AC0
	0x01D4A8FC LDR X0, [X25]
	0x01D4A900 LDR W8, [X0 + 0xE0]
	0x01D4A904 CBNZ W8, 0x1D4A90C
	0x01D4A908 BL 0x1C16DFC
	0x01D4A90C LDR X20, [X20]
	0x01D4A910 ADD X0, X31, 0x160
	0x01D4A914 ADD X1, X31, 0x8
	0x01D4A918 MOVZ W2, 0x68
	0x01D4A91C BL 0x3EB1AC0
	0x01D4A920 ADD X1, X31, 0x160
	0x01D4A924 MOV X0, X19
	0x01D4A928 MOV X2, X20
	0x01D4A92C STR W22, [X31 + 0x1C8]
	0x01D4A930 STR W21, [X31 + 0x1CC]
	0x01D4A934 BL 0x263BDD8
	0x01D4A938 ADD X31, X31, 0x1D0
	0x01D4A93C LDP X20, X19, [X31 + 0x40]
	0x01D4A940 LDP X22, X21, [X31 + 0x30]
	0x01D4A944 LDP X24, X23, [X31 + 0x20]
	0x01D4A948 LDP X26, X25, [X31 + 0x10]
	0x01D4A94C LDP X29, X30, [X31], #0x50
	0x01D4A950 RET
	0x01D4A954 ADRP X8, 0x23AA000
	0x01D4A958 LDR X8, [X8 + 0x970]
	0x01D4A95C LDR X0, [X8]
	0x01D4A960 BL 0x1C16F10
	0x01D4A964 MOV X20, X0
	0x01D4A968 MOV X1, X31
	0x01D4A96C BL 0x33BDD8C
	0x01D4A970 BL 0x1D38C70
	0x01D4A974 CBZ X20, 0x1D4AD30
	0x01D4A978 STR X0, [X20 + 0x10]
	0x01D4A97C LDR X21, [X19 + 0x40]
	0x01D4A980 CBZ X21, 0x1D4AD34
	0x01D4A984 ADRP X22, 0x23AA000
	0x01D4A988 LDR X8, [X21]
	0x01D4A98C LDR X22, [X22 + 0x918]
	0x01D4A990 LDRH W9, [X8 + 0x12E]
	0x01D4A994 LDR X1, [X22]
	0x01D4A998 CBZ X9, 0x1D4A9BC
	0x01D4A99C LDR X10, [X8 + 0xB0]
	0x01D4A9A0 ADD X10, X10, 0x8
	0x01D4A9A4 LDUR X11, [X10 - 0x8]
	0x01D4A9A8 CMP X11, X1
	0x01D4A9AC B.EQ 0x1D4AAAC
	0x01D4A9B0 SUBS X9, X9, 0x1
	0x01D4A9B4 ADD X10, X10, 0x10
	0x01D4A9B8 B.NE 0x1D4A9A4
	0x01D4A9BC MOVZ W2, 0x1
	0x01D4A9C0 MOV X0, X21
	0x01D4A9C4 BL 0x1C5C788
	0x01D4A9C8 B 0x1D4AABC
	0x01D4A9CC ADRP X8, 0x23A9000
	0x01D4A9D0 LDR X8, [X8 + 0x648]
	0x01D4A9D4 LDR X0, [X8]
	0x01D4A9D8 LDR W8, [X0 + 0xE0]
	0x01D4A9DC CBNZ W8, 0x1D4A9E4
	0x01D4A9E0 BL 0x1C16DFC
	0x01D4A9E4 BL 0x1D32AF4
	0x01D4A9E8 CBZ X0, 0x1D4AD44
	0x01D4A9EC LDR X1, [X19 + 0x20]
	0x01D4A9F0 MOV X2, X31
	0x01D4A9F4 MOV X3, X31
	0x01D4A9F8 BL 0x1D68930
	0x01D4A9FC CBZ X0, 0x1D4AD48
	0x01D4AA00 ADRP X8, 0x23AA000
	0x01D4AA04 LDR X8, [X8 + 0x958]
	0x01D4AA08 LDR X1, [X8]
	0x01D4AA0C BL 0x269A598
	0x01D4AA10 ADRP X8, 0x23AA000
	0x01D4AA14 LDR X8, [X8 + 0x948]
	0x01D4AA18 STR X0, [X31 + 0xB0]
	0x01D4AA1C LDR X1, [X8]
	0x01D4AA20 ADD X0, X31, 0xB0
	0x01D4AA24 BL 0x2677020
	0x01D4AA28 TBNZ X0, 0x0, 0x1D4A888
	0x01D4AA2C MOVZ W8, 0x3
	0x01D4AA30 STR W8, [X19]
	0x01D4AA34 LDR X8, [X31 + 0xB0]
	0x01D4AA38 STR X8, [X19 + 0xC0]
	0x01D4AA3C LDR X0, [X25]
	0x01D4AA40 LDR W8, [X0 + 0xE0]
	0x01D4AA44 CBNZ W8, 0x1D4AA4C
	0x01D4AA48 BL 0x1C16DFC
	0x01D4AA4C ADRP X8, 0x23AA000
	0x01D4AA50 LDR X8, [X8 + 0x8D8]
	0x01D4AA54 ADD X0, X19, 0x8
	0x01D4AA58 LDR X3, [X8]
	0x01D4AA5C ADD X1, X31, 0xB0
	0x01D4AA60 MOV X2, X19
	0x01D4AA64 BL 0x212CE30
	0x01D4AA68 B 0x1D4A938
	0x01D4AA6C MOVZ W8, 0x2
	0x01D4AA70 STR W8, [X19]
	0x01D4AA74 LDR X8, [X31 + 0xB8]
	0x01D4AA78 STR X8, [X19 + 0xB8]
	0x01D4AA7C LDR X0, [X25]
	0x01D4AA80 LDR W8, [X0 + 0xE0]
	0x01D4AA84 CBNZ W8, 0x1D4AA8C
	0x01D4AA88 BL 0x1C16DFC
	0x01D4AA8C ADRP X8, 0x23AA000
	0x01D4AA90 LDR X8, [X8 + 0x8C8]
	0x01D4AA94 ADD X0, X19, 0x8
	0x01D4AA98 LDR X3, [X8]
	0x01D4AA9C ADD X1, X31, 0xB8
	0x01D4AAA0 MOV X2, X19
	0x01D4AAA4 BL 0x212D258
	0x01D4AAA8 B 0x1D4A938
	0x01D4AAAC LDR W9, [X10]
	0x01D4AAB0 ADD W9, W9, 0x1
	0x01D4AAB4 ADD X8, X8, W9, 0x4, SXTW
	0x01D4AAB8 ADD X0, X8, 0x138
	0x01D4AABC LDP X8, X1, [X0]
	0x01D4AAC0 MOV X0, X21
	0x01D4AAC4 BLR X8
	0x01D4AAC8 CBZ X0, 0x1D4AC70
	0x01D4AACC LDR X21, [X19 + 0x40]
	0x01D4AAD0 CBZ X21, 0x1D4AD54
	0x01D4AAD4 LDR X8, [X21]
	0x01D4AAD8 LDR X1, [X22]
	0x01D4AADC LDRH W9, [X8 + 0x12E]
	0x01D4AAE0 CBZ X9, 0x1D4AB04
	0x01D4AAE4 LDR X10, [X8 + 0xB0]
	0x01D4AAE8 ADD X10, X10, 0x8
	0x01D4AAEC LDUR X11, [X10 - 0x8]
	0x01D4AAF0 CMP X11, X1
	0x01D4AAF4 B.EQ 0x1D4ABB4
	0x01D4AAF8 SUBS X9, X9, 0x1
	0x01D4AAFC ADD X10, X10, 0x10
	0x01D4AB00 B.NE 0x1D4AAEC
	0x01D4AB04 MOVZ W2, 0x1
	0x01D4AB08 MOV X0, X21
	0x01D4AB0C BL 0x1C5C788
	0x01D4AB10 B 0x1D4ABC4
	0x01D4AB14 ADRP X8, 0x23AA000
	0x01D4AB18 LDR X8, [X8 + 0x908]
	0x01D4AB1C LDR X0, [X8]
	0x01D4AB20 BL 0x1C16F10
	0x01D4AB24 ADRP X8, 0x23AA000
	0x01D4AB28 LDR X8, [X8 + 0x8F8]
	0x01D4AB2C MOV X20, X0
	0x01D4AB30 LDR X2, [X8]
	0x01D4AB34 MOV X1, X31
	0x01D4AB38 MOV X3, X31
	0x01D4AB3C BL 0x2D27AA8
	0x01D4AB40 MOV X0, X20
	0x01D4AB44 BL 0x1D47A34
	0x01D4AB48 CBZ X0, 0x1D4AD58
	0x01D4AB4C ADRP X8, 0x23AA000
	0x01D4AB50 LDR X8, [X8 + 0x7B0]
	0x01D4AB54 LDR X1, [X8]
	0x01D4AB58 BL 0x26AD88C
	0x01D4AB5C ADRP X8, 0x23AA000
	0x01D4AB60 LDR X8, [X8 + 0x7A8]
	0x01D4AB64 STR X0, [X31 + 0xC8]
	0x01D4AB68 LDR X1, [X8]
	0x01D4AB6C ADD X0, X31, 0xC8
	0x01D4AB70 BL 0x2678050
	0x01D4AB74 TBNZ X0, 0x0, 0x1D4A504
	0x01D4AB78 STR W31, [X19]
	0x01D4AB7C LDR X8, [X31 + 0xC8]
	0x01D4AB80 STR X8, [X19 + 0xA8]
	0x01D4AB84 LDR X0, [X25]
	0x01D4AB88 LDR W8, [X0 + 0xE0]
	0x01D4AB8C CBNZ W8, 0x1D4AB94
	0x01D4AB90 BL 0x1C16DFC
	0x01D4AB94 ADRP X8, 0x23AA000
	0x01D4AB98 LDR X8, [X8 + 0x8D0]
	0x01D4AB9C ADD X0, X19, 0x8
	0x01D4ABA0 LDR X3, [X8]
	0x01D4ABA4 ADD X1, X31, 0xC8
	0x01D4ABA8 MOV X2, X19
	0x01D4ABAC BL 0x212D46C
	0x01D4ABB0 B 0x1D4A938
	0x01D4ABB4 LDR W9, [X10]
	0x01D4ABB8 ADD W9, W9, 0x1
	0x01D4ABBC ADD X8, X8, W9, 0x4, SXTW
	0x01D4ABC0 ADD X0, X8, 0x138
	0x01D4ABC4 LDP X8, X1, [X0]
	0x01D4ABC8 MOV X0, X21
	0x01D4ABCC BLR X8
	0x01D4ABD0 ADRP X8, 0x23AA000
	0x01D4ABD4 LDR X8, [X8 + 0x910]
	0x01D4ABD8 MOV X21, X0
	0x01D4ABDC LDR X0, [X8]
	0x01D4ABE0 BL 0x1C16F10
	0x01D4ABE4 ADRP X8, 0x23AA000
	0x01D4ABE8 LDR X8, [X8 + 0x968]
	0x01D4ABEC MOV X22, X0
	0x01D4ABF0 LDR X2, [X8]
	0x01D4ABF4 MOV X1, X20
	0x01D4ABF8 MOV X3, X31
	0x01D4ABFC BL 0x2D2F428
	0x01D4AC00 ADRP X8, 0x23AA000
	0x01D4AC04 LDR X8, [X8 + 0x900]
	0x01D4AC08 LDR X2, [X8]
	0x01D4AC0C MOV X0, X21
	0x01D4AC10 MOV X1, X22
	0x01D4AC14 BL 0x21B36AC
	0x01D4AC18 TBZ X0, 0x0, 0x1D4AC70
	0x01D4AC1C ADRP X8, 0x23A9000
	0x01D4AC20 LDR X8, [X8 + 0x788]
	0x01D4AC24 LDR X0, [X8]
	0x01D4AC28 LDR W8, [X0 + 0xE0]
	0x01D4AC2C CBNZ W8, 0x1D4AC34
	0x01D4AC30 BL 0x1C16DFC
	0x01D4AC34 ADRP X8, 0x23AA000
	0x01D4AC38 LDR X8, [X8 + 0x980]
	0x01D4AC3C ADRP X9, 0x23AA000
	0x01D4AC40 ADRP X10, 0x23AA000
	0x01D4AC44 LDR X9, [X9 + 0x718]
	0x01D4AC48 LDR X10, [X10 + 0x978]
	0x01D4AC4C LDR X1, [X8]
	0x01D4AC50 LDR X3, [X9]
	0x01D4AC54 LDR X4, [X10]
	0x01D4AC58 MOVZ W0, 0x800
	0x01D4AC5C MOVZ W5, 0x7D
	0x01D4AC60 MOV X2, X31
	0x01D4AC64 MOV X6, X31
	0x01D4AC68 BL 0x35C2014
	0x01D4AC6C B 0x1D4A8C8
	0x01D4AC70 ADRP X8, 0x23A9000
	0x01D4AC74 LDR X8, [X8 + 0x648]
	0x01D4AC78 LDR X0, [X8]
	0x01D4AC7C LDR W8, [X0 + 0xE0]
	0x01D4AC80 CBNZ W8, 0x1D4AC88
	0x01D4AC84 BL 0x1C16DFC
	0x01D4AC88 BL 0x1D32AF4
	0x01D4AC8C LDR X21, [X19 + 0x38]
	0x01D4AC90 MOV X20, X0
	0x01D4AC94 BL 0x1D38C70
	0x01D4AC98 CBZ X20, 0x1D4AD4C
	0x01D4AC9C MOV X2, X0
	0x01D4ACA0 MOV X0, X20
	0x01D4ACA4 MOV X1, X21
	0x01D4ACA8 MOV X3, X31
	0x01D4ACAC MOV X4, X31
	0x01D4ACB0 MOV X5, X31
	0x01D4ACB4 BL 0x1D6C7D8
	0x01D4ACB8 CBZ X0, 0x1D4AD50
	0x01D4ACBC MOV X1, X31
	0x01D4ACC0 BL 0x33ED394
	0x01D4ACC4 STR X0, [X31 + 0xA8]
	0x01D4ACC8 ADD X0, X31, 0xA8
	0x01D4ACCC MOV X1, X31
	0x01D4ACD0 BL 0x32C3A80
	0x01D4ACD4 TBNZ X0, 0x0, 0x1D4A8BC
	0x01D4ACD8 MOVZ W8, 0x4
	0x01D4ACDC STR W8, [X19]
	0x01D4ACE0 LDR X8, [X31 + 0xA8]
	0x01D4ACE4 STR X8, [X19 + 0xC8]
	0x01D4ACE8 LDR X0, [X25]
	0x01D4ACEC LDR W8, [X0 + 0xE0]
	0x01D4ACF0 CBNZ W8, 0x1D4ACF8
	0x01D4ACF4 BL 0x1C16DFC
	0x01D4ACF8 ADRP X8, 0x23AA000
	0x01D4ACFC LDR X8, [X8 + 0x8E8]
	0x01D4AD00 ADD X0, X19, 0x8
	0x01D4AD04 LDR X3, [X8]
	0x01D4AD08 ADD X1, X31, 0xA8
	0x01D4AD0C MOV X2, X19
	0x01D4AD10 BL 0x212D680
	0x01D4AD14 B 0x1D4A938
	0x01D4AD18 BL 0x1C16F20
	0x01D4AD1C BL 0x1C16F20
	0x01D4AD20 BL 0x1C16F20
	0x01D4AD24 BL 0x1C16F28
	0x01D4AD28 BL 0x1C16F20
	0x01D4AD2C BL 0x1C16F20
	0x01D4AD30 BL 0x1C16F20
	0x01D4AD34 BL 0x1C16F20
	0x01D4AD38 BL 0x1C16F20
	0x01D4AD3C BL 0x1C16F20
	0x01D4AD40 BL 0x1C16F28
	0x01D4AD44 BL 0x1C16F20
	0x01D4AD48 BL 0x1C16F20
	0x01D4AD4C BL 0x1C16F20
	0x01D4AD50 BL 0x1C16F20
	0x01D4AD54 BL 0x1C16F20
	0x01D4AD58 BL 0x1C16F20
	0x01D4AD5C B 0x1D4ADDC
	0x01D4AD60 B 0x1D4ADDC
	0x01D4AD64 B 0x1D4ADDC
	0x01D4AD68 B 0x1D4B00C
	0x01D4AD6C B 0x1D4ADDC
	0x01D4AD70 B 0x1D4AE34
	0x01D4AD74 B 0x1D4ADDC
	0x01D4AD78 B 0x1D4ADDC
	0x01D4AD7C B 0x1D4ADDC
	0x01D4AD80 B 0x1D4B128
	0x01D4AD84 B 0x1D4B314
	0x01D4AD88 MOV X20, X0
	0x01D4AD8C MOVZ W26, 0x3
	0x01D4AD90 B 0x1D4B010
	0x01D4AD94 B 0x1D4B128
	0x01D4AD98 B 0x1D4B128
	0x01D4AD9C B 0x1D4AE34
	0x01D4ADA0 B 0x1D4B128
	0x01D4ADA4 B 0x1D4B128
	0x01D4ADA8 B 0x1D4B128
	0x01D4ADAC B 0x1D4B128
	0x01D4ADB0 B 0x1D4B128
	0x01D4ADB4 B 0x1D4B00C
	0x01D4ADB8 B 0x1D4B00C
	0x01D4ADBC B 0x1D4B00C
	0x01D4ADC0 B 0x1D4B00C
	0x01D4ADC4 B 0x1D4ADDC
	0x01D4ADC8 MOV X20, X0
	0x01D4ADCC MOVZ W26, 0x2
	0x01D4ADD0 B 0x1D4B318
	0x01D4ADD4 B 0x1D4B314
	0x01D4ADD8 B 0x1D4ADDC
	0x01D4ADDC MOV X20, X0
	0x01D4ADE0 MOV W8, W1
	0x01D4ADE4 B 0x1D4B424
	0x01D4ADE8 B 0x1D4AE34
	0x01D4ADEC B 0x1D4AE34
	0x01D4ADF0 B 0x1D4AE34
	0x01D4ADF4 B 0x1D4AE34
	0x01D4ADF8 B 0x1D4B128
	0x01D4ADFC B 0x1D4B128
	0x01D4AE00 B 0x1D4B128
	0x01D4AE04 B 0x1D4B314
	0x01D4AE08 B 0x1D4B314
	0x01D4AE0C B 0x1D4B314
	0x01D4AE10 B 0x1D4B314
	0x01D4AE14 B 0x1D4B314
	0x01D4AE18 B 0x1D4B314
	0x01D4AE1C B 0x1D4AE34
	0x01D4AE20 B 0x1D4B128
	0x01D4AE24 B 0x1D4B314
	0x01D4AE28 B 0x1D4B314
	0x01D4AE2C B 0x1D4B00C
	0x01D4AE30 B 0x1D4B128
	0x01D4AE34 MOV X20, X0
	0x01D4AE38 MOV W8, W1
	0x01D4AE3C CMP W1, 0x1
	0x01D4AE40 B.NE 0x1D4B424
	0x01D4AE44 MOV X0, X20
	0x01D4AE48 BL 0x3EB1AD0
	0x01D4AE4C MOV X20, X0
	0x01D4AE50 ADRP X0, 0x23A9000
	0x01D4AE54 LDR X0, [X0 + 0x7D0]
	0x01D4AE58 BL 0x1C16D08
	0x01D4AE5C LDR X8, [X20]
	0x01D4AE60 LDR X1, [X8]
	0x01D4AE64 BL 0x1C17270
	0x01D4AE68 TBZ X0, 0x0, 0x1D4AFC8
	0x01D4AE6C LDR X8, [X20]
	0x01D4AE70 LDRSW X9, [X31 + 0xA0]
	0x01D4AE74 ADD X20, X31, 0x88
	0x01D4AE78 STR X8, [X20, X9, LSL #3]
	0x01D4AE7C ADD W8, W9, 0x1
	0x01D4AE80 STR W8, [X31 + 0xA0]
	0x01D4AE84 BL 0x3EB1AE0
	0x01D4AE88 LDR W8, [X31 + 0xA0]
	0x01D4AE8C SUB W8, W8, 0x1
	0x01D4AE90 LDR X20, [X20, W8, SXTW]
	0x01D4AE94 ADRP X0, 0x23AA000
	0x01D4AE98 LDR X0, [X0 + 0x8A0]
	0x01D4AE9C BL 0x1C16D08
	0x01D4AEA0 CBZ X20, 0x1D4AECC
	0x01D4AEA4 LDR X8, [X20]
	0x01D4AEA8 LDRB W9, [X0 + 0x130]
	0x01D4AEAC LDRB W10, [X8 + 0x130]
	0x01D4AEB0 CMP W10, W9
	0x01D4AEB4 B.CC 0x1D4AECC
	0x01D4AEB8 LDR X8, [X8 + 0xC8]
	0x01D4AEBC ADD X8, X8, X9, 0x3, LSL
	0x01D4AEC0 LDUR X8, [X8 - 0x8]
	0x01D4AEC4 CMP X8, X0
	0x01D4AEC8 B.EQ 0x1D4AF60
	0x01D4AECC ADRP X0, 0x23A9000
	0x01D4AED0 LDR X0, [X0 + 0x788]
	0x01D4AED4 BL 0x1C16D08
	0x01D4AED8 LDR W8, [X0 + 0xE0]
	0x01D4AEDC CBNZ W8, 0x1D4AEE4
	0x01D4AEE0 BL 0x1C16DFC
	0x01D4AEE4 ADRP X0, 0x23AA000
	0x01D4AEE8 LDR X0, [X0 + 0x998]
	0x01D4AEEC BL 0x1C16D08
	0x01D4AEF0 MOV X21, X0
	0x01D4AEF4 ADRP X0, 0x23AA000
	0x01D4AEF8 LDR X0, [X0 + 0x718]
	0x01D4AEFC BL 0x1C16D08
	0x01D4AF00 MOV X22, X0
	0x01D4AF04 ADRP X0, 0x23AA000
	0x01D4AF08 LDR X0, [X0 + 0x978]
	0x01D4AF0C BL 0x1C16D08
	0x01D4AF10 MOV X5, X0
	0x01D4AF14 MOVZ W0, 0x800
	0x01D4AF18 MOVZ W6, 0x5E
	0x01D4AF1C MOV X1, X21
	0x01D4AF20 MOV X2, X20
	0x01D4AF24 MOV X3, X31
	0x01D4AF28 MOV X4, X22
	0x01D4AF2C MOV X7, X31
	0x01D4AF30 BL 0x35C2674
	0x01D4AF34 LDR W8, [X31 + 0xA0]
	0x01D4AF38 MOVI V0.2D, 0x0
	0x01D4AF3C MOV W21, W31
	0x01D4AF40 STR X31, [X31 + 0x150]
	0x01D4AF44 SUB W8, W8, 0x1
	0x01D4AF48 STP V0, V0, [X24 + 0x60]
	0x01D4AF4C STP V0, V0, [X24 + 0x40]
	0x01D4AF50 STP V0, V0, [X24 + 0x20]
	0x01D4AF54 STR W8, [X31 + 0xA0]
	0x01D4AF58 MOVZ W22, 0xB
	0x01D4AF5C B 0x1D4A8DC
	0x01D4AF60 ADRP X0, 0x23A9000
	0x01D4AF64 LDR X0, [X0 + 0x788]
	0x01D4AF68 BL 0x1C16D08
	0x01D4AF6C LDR W8, [X0 + 0xE0]
	0x01D4AF70 CBNZ W8, 0x1D4AF78
	0x01D4AF74 BL 0x1C16DFC
	0x01D4AF78 ADRP X0, 0x23AA000
	0x01D4AF7C LDR X0, [X0 + 0x9A0]
	0x01D4AF80 BL 0x1C16D08
	0x01D4AF84 MOV X20, X0
	0x01D4AF88 ADRP X0, 0x23AA000
	0x01D4AF8C LDR X0, [X0 + 0x718]
	0x01D4AF90 BL 0x1C16D08
	0x01D4AF94 MOV X21, X0
	0x01D4AF98 ADRP X0, 0x23AA000
	0x01D4AF9C LDR X0, [X0 + 0x978]
	0x01D4AFA0 BL 0x1C16D08
	0x01D4AFA4 MOV X4, X0
	0x01D4AFA8 MOVZ W0, 0x800
	0x01D4AFAC MOVZ W5, 0x5A
	0x01D4AFB0 MOV X1, X20
	0x01D4AFB4 MOV X2, X31
	0x01D4AFB8 MOV X3, X21
	0x01D4AFBC MOV X6, X31
	0x01D4AFC0 BL 0x35C2014
	0x01D4AFC4 B 0x1D4B29C
	0x01D4AFC8 MOVZ W0, 0x8
	0x01D4AFCC BL 0x3EB1AF0
	0x01D4AFD0 LDR X8, [X20]
	0x01D4AFD4 STR X8, [X0]
	0x01D4AFD8 ADRP X1, 0x216A000
	0x01D4AFDC ADD X1, X1, 0xE58
	0x01D4AFE0 MOV X2, X31
	0x01D4AFE4 BL 0x3EB1B00
	0x01D4AFE8 B 0x1D4B614
	0x01D4AFEC B 0x1D4ADDC
	0x01D4AFF0 B 0x1D4ADDC
	0x01D4AFF4 MOV X21, X1
	0x01D4AFF8 MOV X20, X0
	0x01D4AFFC BL 0x3EB1AE0
	0x01D4B000 B 0x1D4B420
	0x01D4B004 B 0x1D4ADDC
	0x01D4B008 B 0x1D4B128
	0x01D4B00C MOV X20, X0
	0x01D4B010 MOV W8, W1
	0x01D4B014 CMP W1, 0x1
	0x01D4B018 B.NE 0x1D4B424
	0x01D4B01C MOV X0, X20
	0x01D4B020 BL 0x3EB1AD0
	0x01D4B024 MOV X20, X0
	0x01D4B028 ADRP X0, 0x23A8000
	0x01D4B02C LDR X0, [X0 + 0x7D0]
	0x01D4B030 BL 0x1C16D08
	0x01D4B034 LDR X8, [X20]
	0x01D4B038 LDR X1, [X8]
	0x01D4B03C BL 0x1C17270
	0x01D4B040 TBZ X0, 0x0, 0x1D4B0E4
	0x01D4B044 LDR X8, [X20]
	0x01D4B048 LDRSW X9, [X31 + 0xA0]
	0x01D4B04C ADD X20, X31, 0x88
	0x01D4B050 STR X8, [X20, X9, LSL #3]
	0x01D4B054 ADD W8, W9, 0x1
	0x01D4B058 STR W8, [X31 + 0xA0]
	0x01D4B05C BL 0x3EB1AE0
	0x01D4B060 LDR W8, [X31 + 0xA0]
	0x01D4B064 SUB W8, W8, 0x1
	0x01D4B068 LDR X20, [X20, W8, SXTW]
	0x01D4B06C ADRP X0, 0x23A8000
	0x01D4B070 LDR X0, [X0 + 0x788]
	0x01D4B074 BL 0x1C16D08
	0x01D4B078 LDR W8, [X0 + 0xE0]
	0x01D4B07C CBNZ W8, 0x1D4B084
	0x01D4B080 BL 0x1C16DFC
	0x01D4B084 ADRP X0, 0x23A9000
	0x01D4B088 LDR X0, [X0 + 0x9A8]
	0x01D4B08C BL 0x1C16D08
	0x01D4B090 MOV X21, X0
	0x01D4B094 ADRP X0, 0x23A9000
	0x01D4B098 LDR X0, [X0 + 0x718]
	0x01D4B09C BL 0x1C16D08
	0x01D4B0A0 MOV X22, X0
	0x01D4B0A4 ADRP X0, 0x23A9000
	0x01D4B0A8 LDR X0, [X0 + 0x978]
	0x01D4B0AC BL 0x1C16D08
	0x01D4B0B0 MOV X5, X0
	0x01D4B0B4 MOVZ W0, 0x800
	0x01D4B0B8 MOVZ W6, 0x73
	0x01D4B0BC MOV X1, X21
	0x01D4B0C0 MOV X2, X20
	0x01D4B0C4 MOV X3, X31
	0x01D4B0C8 MOV X4, X22
	0x01D4B0CC MOV X7, X31
	0x01D4B0D0 BL 0x35C2674
	0x01D4B0D4 LDR W8, [X31 + 0xA0]
	0x01D4B0D8 SUB W8, W8, 0x1
	0x01D4B0DC STR W8, [X31 + 0xA0]
	0x01D4B0E0 B 0x1D4A8A0
	0x01D4B0E4 MOVZ W0, 0x8
	0x01D4B0E8 BL 0x3EB1AF0
	0x01D4B0EC LDR X8, [X20]
	0x01D4B0F0 STR X8, [X0]
	0x01D4B0F4 ADRP X1, 0x2169000
	0x01D4B0F8 ADD X1, X1, 0xE58
	0x01D4B0FC MOV X2, X31
	0x01D4B100 BL 0x3EB1B00
	0x01D4B104 B 0x1D4B614
	0x01D4B108 B 0x1D4ADDC
	0x01D4B10C MOV X21, X1
	0x01D4B110 MOV X20, X0
	0x01D4B114 BL 0x3EB1AE0
	0x01D4B118 B 0x1D4B420
	0x01D4B11C B 0x1D4ADDC
	0x01D4B120 B 0x1D4B128
	0x01D4B124 B 0x1D4B314
	0x01D4B128 MOV X20, X0
	0x01D4B12C MOV W8, W1
	0x01D4B130 CMP W1, 0x1
	0x01D4B134 B.NE 0x1D4B424
	0x01D4B138 MOV X0, X20
	0x01D4B13C BL 0x3EB1AD0
	0x01D4B140 MOV X20, X0
	0x01D4B144 ADRP X0, 0x23A8000
	0x01D4B148 LDR X0, [X0 + 0x7D0]
	0x01D4B14C BL 0x1C16D08
	0x01D4B150 LDR X8, [X20]
	0x01D4B154 LDR X1, [X8]
	0x01D4B158 BL 0x1C17270
	0x01D4B15C TBZ X0, 0x0, 0x1D4B2C8
	0x01D4B160 LDR X8, [X20]
	0x01D4B164 LDRSW X9, [X31 + 0xA0]
	0x01D4B168 ADD X20, X31, 0x88
	0x01D4B16C STR X8, [X20, X9, LSL #3]
	0x01D4B170 ADD W8, W9, 0x1
	0x01D4B174 STR W8, [X31 + 0xA0]
	0x01D4B178 BL 0x3EB1AE0
	0x01D4B17C LDR W8, [X31 + 0xA0]
	0x01D4B180 SUB W8, W8, 0x1
	0x01D4B184 LDR X20, [X20, W8, SXTW]
	0x01D4B188 ADRP X0, 0x23A9000
	0x01D4B18C LDR X0, [X0 + 0x8A0]
	0x01D4B190 BL 0x1C16D08
	0x01D4B194 CBZ X20, 0x1D4B1C0
	0x01D4B198 LDR X8, [X20]
	0x01D4B19C LDRB W9, [X0 + 0x130]
	0x01D4B1A0 LDRB W10, [X8 + 0x130]
	0x01D4B1A4 CMP W10, W9
	0x01D4B1A8 B.CC 0x1D4B1C0
	0x01D4B1AC LDR X8, [X8 + 0xC8]
	0x01D4B1B0 ADD X8, X8, X9, 0x3, LSL
	0x01D4B1B4 LDUR X8, [X8 - 0x8]
	0x01D4B1B8 CMP X8, X0
	0x01D4B1BC B.EQ 0x1D4B238
	0x01D4B1C0 ADRP X0, 0x23A8000
	0x01D4B1C4 LDR X0, [X0 + 0x788]
	0x01D4B1C8 BL 0x1C16D08
	0x01D4B1CC LDR W8, [X0 + 0xE0]
	0x01D4B1D0 CBNZ W8, 0x1D4B1D8
	0x01D4B1D4 BL 0x1C16DFC
	0x01D4B1D8 ADRP X0, 0x23A9000
	0x01D4B1DC LDR X0, [X0 + 0x9B0]
	0x01D4B1E0 BL 0x1C16D08
	0x01D4B1E4 MOV X21, X0
	0x01D4B1E8 ADRP X0, 0x23A9000
	0x01D4B1EC LDR X0, [X0 + 0x718]
	0x01D4B1F0 BL 0x1C16D08
	0x01D4B1F4 MOV X22, X0
	0x01D4B1F8 ADRP X0, 0x23A9000
	0x01D4B1FC LDR X0, [X0 + 0x978]
	0x01D4B200 BL 0x1C16D08
	0x01D4B204 MOV X5, X0
	0x01D4B208 MOVZ W0, 0x800
	0x01D4B20C MOVZ W6, 0x8C
	0x01D4B210 MOV X1, X21
	0x01D4B214 MOV X2, X20
	0x01D4B218 MOV X3, X31
	0x01D4B21C MOV X4, X22
	0x01D4B220 MOV X7, X31
	0x01D4B224 BL 0x35C2674
	0x01D4B228 LDR W8, [X31 + 0xA0]
	0x01D4B22C SUB W8, W8, 0x1
	0x01D4B230 STR W8, [X31 + 0xA0]
	0x01D4B234 B 0x1D4A8C8

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], X30
	003 Move [X31+136], X27
	004 Move [X31+144], X26
	005 Move [X31+152], X25
	006 Move [X31+160], X24
	007 Move [X31+168], X23
	008 Move [X31+176], X22
	009 Move [X31+184], X21
	010 Move [X31+192], X20
	011 Move [X31+200], X19
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X24+40]
	014 Move X20, 0x268F000
	015 Move X19, X0
	016 Move [X31+120], X8
	017 Move W8, [X20+1919]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {132}
	022 Move X0, 0x23AA000
	023 Move X0, [X0+1608]
	024 Call 0x1C17CF4
	025 Move X0, 0x23AB000
	026 Move X0, [X0+2016]
	027 Call 0x1C17CF4
	028 Move X0, 0x23AB000
	029 Move X0, [X0+2024]
	030 Call 0x1C17CF4
	031 Move X0, 0x23AB000
	032 Move X0, [X0+2032]
	033 Call 0x1C17CF4
	034 Move X0, 0x23AB000
	035 Move X0, [X0+1944]
	036 Call 0x1C17CF4
	037 Move X0, 0x23AB000
	038 Move X0, [X0+1688]
	039 Call 0x1C17CF4
	040 Move X0, 0x23AB000
	041 Move X0, [X0+2040]
	042 Call 0x1C17CF4
	043 Move X0, 0x23AB000
	044 Move X0, [X0+2048]
	045 Call 0x1C17CF4
	046 Move X0, 0x23AB000
	047 Move X0, [X0+2056]
	048 Call 0x1C17CF4
	049 Move X0, 0x23AA000
	050 Move X0, [X0+1808]
	051 Call 0x1C17CF4
	052 Move X0, 0x23AB000
	053 Move X0, [X0+2064]
	054 Call 0x1C17CF4
	055 Move X0, 0x23AB000
	056 Move X0, [X0+1728]
	057 Call 0x1C17CF4
	058 Move X0, 0x23AA000
	059 Move X0, [X0+1816]
	060 Call 0x1C17CF4
	061 Move X0, 0x23AB000
	062 Move X0, [X0+1744]
	063 Call 0x1C17CF4
	064 Move X0, 0x23AA000
	065 Move X0, [X0+1824]
	066 Call 0x1C17CF4
	067 Move X0, 0x23AB000
	068 Move X0, [X0+2072]
	069 Call 0x1C17CF4
	070 Move X0, 0x23AA000
	071 Move X0, [X0+1928]
	072 Call 0x1C17CF4
	073 Move X0, 0x23AB000
	074 Move X0, [X0+2080]
	075 Call 0x1C17CF4
	076 Move X0, 0x23AB000
	077 Move X0, [X0+2088]
	078 Call 0x1C17CF4
	079 Move X0, 0x23AB000
	080 Move X0, [X0+2096]
	081 Call 0x1C17CF4
	082 Move X0, 0x23AB000
	083 Move X0, [X0+2104]
	084 Call 0x1C17CF4
	085 Move X0, 0x23AB000
	086 Move X0, [X0+2112]
	087 Call 0x1C17CF4
	088 Move X0, 0x23AB000
	089 Move X0, [X0+1976]
	090 Call 0x1C17CF4
	091 Move X0, 0x23AB000
	092 Move X0, [X0+2120]
	093 Call 0x1C17CF4
	094 Move X0, 0x23AB000
	095 Move X0, [X0+2128]
	096 Call 0x1C17CF4
	097 Move X0, 0x23AB000
	098 Move X0, [X0+2136]
	099 Call 0x1C17CF4
	100 Move X0, 0x23AB000
	101 Move X0, [X0+2144]
	102 Call 0x1C17CF4
	103 Move X0, 0x23AB000
	104 Move X0, [X0+2152]
	105 Call 0x1C17CF4
	106 Move X0, 0x23AB000
	107 Move X0, [X0+1816]
	108 Call 0x1C17CF4
	109 Move X0, 0x23AB000
	110 Move X0, [X0+2160]
	111 Call 0x1C17CF4
	112 Move X0, 0x23AB000
	113 Move X0, [X0+2168]
	114 Call 0x1C17CF4
	115 Move X0, 0x23AB000
	116 Move X0, [X0+1856]
	117 Call 0x1C17CF4
	118 Move X0, 0x23AB000
	119 Move X0, [X0+2176]
	120 Call 0x1C17CF4
	121 Move X0, 0x23AB000
	122 Move X0, [X0+2184]
	123 Call 0x1C17CF4
	124 Move X0, 0x23AB000
	125 Move X0, [X0+2192]
	126 Call 0x1C17CF4
	127 Move X0, 0x23AB000
	128 Move X0, [X0+2200]
	129 Call 0x1C17CF4
	130 Move W8, 1
	131 Move [X20+1919], W8
	132 Move [X31+112], W31
	133 Move [X31+104], X31
	134 Move [X31+56], W31
	135 Move [X31+48], W31
	136 Move [X31+32], X31
	137 Move [X31+40], X31
	138 Move W26, [X19]
	139 Move X25, 0x23AB000
	140 Move X23, 0x23AB000
	141 Move X27, 0x23AB000
	142 Move X25, [X25+1688]
	143 Move X23, [X23+2152]
	144 Move X27, [X27+1976]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X8, -19247104
	147 Add X8, X8, 1498
	148 NotImplemented "Instruction ADR not yet implemented."
	149 NotImplemented "Instruction LDRH not yet implemented."
	150 Add X9, X9, X10
	151 CallNoReturn X9
	152 Move W8, [X19+40]
	153 Move TEMP, 0
	154 Not TEMP
	155 Move W26, TEMP
	156 Move [X31+56], W8
	157 Move [X19+40], W31
	158 Move [X19], W26
	159 Move W8, [X19+40]
	160 Move TEMP, 0
	161 Not TEMP
	162 Move W26, TEMP
	163 Move [X31+56], W8
	164 Move [X19+40], W31
	165 Move [X19], W26
	166 Move W8, [X19+40]
	167 Move TEMP, 0
	168 Not TEMP
	169 Move W26, TEMP
	170 Move [X31+56], W8
	171 Move [X19+40], W31
	172 Move [X19], W26
	173 Move X8, 0x23AB000
	174 Move X8, [X8+2144]
	175 Move X0, [X8]
	176 Call 0x1C17F10
	177 Move X20, X0
	178 Move X1, X31
	179 Call Object..ctor, X0
	180 Move [X19+32], X20
	181 Move X8, 0x23AA000
	182 Move X8, [X8+1928]
	183 Move X0, [X8]
	184 Move W8, [X0+224]
	185 Compare W8, 0
	186 JumpIfNotEqual {188}
	187 Call 0x1C17DFC
	188 Move X8, 0x23AB000
	189 Move X8, [X8+2192]
	190 Move X9, 0x23AB000
	191 Move X10, 0x23AB000
	192 Move X9, [X9+1816]
	193 Move X10, [X10+1856]
	194 Move X1, [X8]
	195 Move X3, [X9]
	196 Move X4, [X10]
	197 Move W0, 2048
	198 Move W5, 197
	199 Move X2, X31
	200 Move X6, X31
	201 Call Log.Debug, X0, X1, X2, X3, X4, X5
	202 Move X8, [X19+32]
	203 Compare X8, 0
	204 JumpIfEqual {233}
	205 Move [X8+16], X31
	206 Move [X8+24], X31
	207 Move [X8+32], X31
	208 Move X8, [X19+32]
	209 Compare X8, 0
	210 JumpIfEqual {234}
	211 Move [X8+40], W31
	212 Move X0, X31
	213 Call Entitlements.IsUserEntitledToApplication
	214 Move X8, 0x23AB000
	215 Move X22, [X19+32]
	216 Move X8, [X8+2056]
	217 Move X20, X0
	218 Move X0, [X8]
	219 Call 0x1C17F10
	220 Move X8, 0x23AB000
	221 Move X8, [X8+2120]
	222 Move X21, X0
	223 Move X2, [X8]
	224 Move X1, X22
	225 Move X3, X31
	226 Call Callback..ctor, X0, X1, X2
	227 Compare X20, 0
	228 JumpIfEqual {235}
	229 Move X0, X20
	230 Move X1, X21
	231 Move X2, X31
	232 Call Request.OnComplete, X0, X1
	233 Call 0x1C17F20
	234 Call 0x1C17F20
	235 Call 0x1C17F20
	236 Move X0, [X27]
	237 Move W8, [X0+224]
	238 Compare W8, 0
	239 JumpIfNotEqual {241}
	240 Call 0x1C17DFC
	241 Move X0, X31
	242 Call Task.Yield
	243 Move [X31+48], W0
	244 Add X0, X31, 48
	245 Move X1, X31
	246 Call YieldAwaitable.GetAwaiter, X0
	247 Move X8, X0
	248 Move X0, [X23]
	249 Move [X31+56], W8
	250 Move W8, [X0+224]
	251 Compare W8, 0
	252 JumpIfNotEqual {254}
	253 Call 0x1C17DFC
	254 Add X0, X31, 56
	255 Move X1, X31
	256 Call YieldAwaiter.get_IsCompleted, X0
	257 Move TEMP, X0
	258 And TEMP, TEMP, 1
	259 Compare TEMP, 1
	260 JumpIfNotEqual {303}
	261 Move X0, [X23]
	262 Move W8, [X0+224]
	263 Compare W8, 0
	264 JumpIfNotEqual {266}
	265 Call 0x1C17DFC
	266 Add X0, X31, 56
	267 Move X1, X31
	268 Call YieldAwaiter.GetResult, X0
	269 Move X8, [X19+32]
	270 Compare X8, 0
	271 JumpIfEqual {318}
	272 Move W9, [X8+40]
	273 Compare W9, 0
	274 JumpIfEqual {236}
	275 Move W20, [X8+24]
	276 Compare W20, 0
	277 JumpIfNotEqual {369}
	278 Move [X8+56], W31
	279 Move [X8+48], X31
	280 Move X0, X31
	281 Call Users.GetLoggedInUser
	282 Move X8, 0x23AB000
	283 Move X22, [X19+32]
	284 Move X8, [X8+2048]
	285 Move X20, X0
	286 Move X0, [X8]
	287 Call 0x1C17F10
	288 Move X8, 0x23AB000
	289 Move X8, [X8+2128]
	290 Move X21, X0
	291 Move X2, [X8]
	292 Move X1, X22
	293 Move X3, X31
	294 Call Callback<Object>..ctor, X0, X1, X2
	295 Compare X20, 0
	296 JumpIfEqual {319}
	297 Move X8, 0x23AB000
	298 Move X8, [X8+2088]
	299 Move X2, [X8]
	300 Move X0, X20
	301 Move X1, X21
	302 Call Request`1<Object>.OnComplete, X0, X1
	303 Move [X19], W31
	304 Move W8, [X31+56]
	305 Move [X19+40], W8
	306 Move X0, [X25]
	307 Move W8, [X0+224]
	308 Compare W8, 0
	309 JumpIfNotEqual {311}
	310 Call 0x1C17DFC
	311 Move X8, 0x23AB000
	312 Move X8, [X8+2032]
	313 Add X0, X19, 8
	314 Move X3, [X8]
	315 Add X1, X31, 56
	316 Move X2, X19
	317 Call AsyncTaskMethodBuilder`1<AuthResult>.AwaitUnsafeOnCompleted, X0, X1, X2
	318 Call 0x1C17F20
	319 Call 0x1C17F20
	320 Move X20, X1
	321 Move X21, X0
	322 NotImplemented "Instruction CMP not yet implemented."
	323 Move X0, X21
	324 Call 0x3EB2AD0
	325 Move X20, X0
	326 Move X0, 0x23AA000
	327 Move X0, [X0+2000]
	328 Call 0x1C17D08
	329 Move X8, [X20]
	330 Move X1, [X8]
	331 Call 0x1C18270
	332 Move TEMP, X0
	333 And TEMP, TEMP, 1
	334 Compare TEMP, 1
	335 JumpIfNotEqual {357}
	336 Move X20, [X20]
	337 Call 0x3EB2AE0
	338 Move TEMP, 1
	339 Not TEMP
	340 Move W8, TEMP
	341 Move [X19+32], X31
	342 Move [X19+8], W8
	343 Move X0, 0x23AB000
	344 Move X0, [X0+1688]
	345 Call 0x1C17D08
	346 Move W8, [X0+224]
	347 Compare W8, 0
	348 JumpIfNotEqual {350}
	349 Call 0x1C17DFC
	350 Move X0, 0x23AB000
	351 Move X0, [X0+2000]
	352 Call 0x1C17D08
	353 Move X2, X0
	354 Move X0, X19
	355 Move X1, X20
	356 Call AsyncTaskMethodBuilder`1<AuthResult>.SetException, X0, X1
	357 Move W0, 8
	358 Call 0x3EB2AF0
	359 Move X8, [X20]
	360 Move [X0], X8
	361 Move X1, 0x216B000
	362 Add X1, X1, 3672
	363 Move X2, X31
	364 Call 0x3EB2B00
	365 Move X21, X0
	366 Call 0x3EB2AE0
	367 Move X0, X21
	368 Call 0x1D2D690
	369 Move W9, [X8+36]
	370 NotImplemented "Instruction LDUR not yet implemented."
	371 Move X21, [X8+16]
	372 Move [X31+112], W9
	373 Move [X31+104], X10
	374 Move TEMP, 1
	375 Not TEMP
	376 Move W8, TEMP
	377 Move [X19+32], X31
	378 Move [X19+8], W8
	379 Move X8, [X31+104]
	380 Move W9, [X31+112]
	381 Move X0, [X25]
	382 Move X22, 0x23AB000
	383 Move [X31+88], X8
	384 Move [X31+96], W9
	385 Move W8, [X0+224]
	386 Move X22, [X22+1944]
	387 Compare W8, 0
	388 JumpIfNotEqual {390}
	389 Call 0x1C17DFC
	390 Move X2, [X22]
	391 Move X8, [X31+88]
	392 Move W9, [X31+96]
	393 Add X1, X31, 64
	394 Move X0, X19
	395 Move [X31+64], X21
	396 Move [X31+72], W20
	397 Move [X31+76], X8
	398 Move [X31+84], W9
	399 Call AsyncTaskMethodBuilder`1<AuthResult>.SetResult, X0, X1
	400 Move X8, [X24+40]
	401 Move X9, [X31+120]
	402 NotImplemented "Instruction CMP not yet implemented."
	403 Move X20, [X31+192]
	404 Move X19, [X31+200]
	405 Move X22, [X31+176]
	406 Move X21, [X31+184]
	407 Move X24, [X31+160]
	408 Move X23, [X31+168]
	409 Move X26, [X31+144]
	410 Move X25, [X31+152]
	411 Move X30, [X31+128]
	412 Move X27, [X31+136]
	413 Add X31, X31, 208
	414 Return 
	415 Call 0x3EB2B20
	416 Move X0, [X27]
	417 Move W8, [X0+224]
	418 Compare W8, 0
	419 JumpIfNotEqual {421}
	420 Call 0x1C17DFC
	421 Move X0, X31
	422 Call Task.Yield
	423 Move [X31+48], W0
	424 Add X0, X31, 48
	425 Move X1, X31
	426 Call YieldAwaitable.GetAwaiter, X0
	427 Move X8, X0
	428 Move X0, [X23]
	429 Move [X31+56], W8
	430 Move W8, [X0+224]
	431 Compare W8, 0
	432 JumpIfNotEqual {434}
	433 Call 0x1C17DFC
	434 Add X0, X31, 56
	435 Move X1, X31
	436 Call YieldAwaiter.get_IsCompleted, X0
	437 Move TEMP, X0
	438 And TEMP, TEMP, 1
	439 Compare TEMP, 1
	440 JumpIfNotEqual {489}
	441 Move X0, [X23]
	442 Move W8, [X0+224]
	443 Compare W8, 0
	444 JumpIfNotEqual {446}
	445 Call 0x1C17DFC
	446 Add X0, X31, 56
	447 Move X1, X31
	448 Call YieldAwaiter.GetResult, X0
	449 Move X8, [X19+32]
	450 Compare X8, 0
	451 JumpIfEqual {561}
	452 Move W9, [X8+56]
	453 Compare W9, 0
	454 JumpIfEqual {416}
	455 Move W20, [X8+24]
	456 Compare W20, 0
	457 JumpIfNotEqual {369}
	458 Move X9, [X8+48]
	459 Compare X9, 0
	460 JumpIfEqual {464}
	461 Move X9, [X9+24]
	462 Compare X9, 0
	463 JumpIfEqual {505}
	464 Move [X8+72], W31
	465 Move [X8+64], X31
	466 Move X0, X31
	467 Call Users.GetUserProof
	468 Move X8, 0x23AB000
	469 Move X22, [X19+32]
	470 Move X8, [X8+2040]
	471 Move X20, X0
	472 Move X0, [X8]
	473 Call 0x1C17F10
	474 Move X8, 0x23AB000
	475 Move X8, [X8+2136]
	476 Move X21, X0
	477 Move X2, [X8]
	478 Move X1, X22
	479 Move X3, X31
	480 Call Callback<Object>..ctor, X0, X1, X2
	481 Compare X20, 0
	482 JumpIfEqual {562}
	483 Move X8, 0x23AB000
	484 Move X8, [X8+2080]
	485 Move X2, [X8]
	486 Move X0, X20
	487 Move X1, X21
	488 Call Request`1<Object>.OnComplete, X0, X1
	489 Move W8, 1
	490 Move [X19], W8
	491 Move W8, [X31+56]
	492 Move [X19+40], W8
	493 Move X0, [X25]
	494 Move W8, [X0+224]
	495 Compare W8, 0
	496 JumpIfNotEqual {498}
	497 Call 0x1C17DFC
	498 Move X8, 0x23AB000
	499 Move X8, [X8+2032]
	500 Add X0, X19, 8
	501 Move X3, [X8]
	502 Add X1, X31, 56
	503 Move X2, X19
	504 Call AsyncTaskMethodBuilder`1<AuthResult>.AwaitUnsafeOnCompleted, X0, X1, X2
	505 Move X8, 0x23AA000
	506 Move X8, [X8+1824]
	507 Move X0, [X8]
	508 Call 0x1C17F10
	509 Move X8, 0x23AA000
	510 Move X8, [X8+1816]
	511 Move X20, X0
	512 Move X1, [X8]
	513 Call Dictionary`2<Object, Object>..ctor, X0
	514 Move X8, [X19+32]
	515 Compare X8, 0
	516 JumpIfEqual {563}
	517 Move X8, [X8+48]
	518 Compare X8, 0
	519 JumpIfEqual {521}
	520 Move X2, [X8+40]
	521 Move X2, X31
	522 Compare X20, 0
	523 JumpIfEqual {564}
	524 Move X8, 0x23AB000
	525 Move X22, 0x23AB000
	526 Move X8, [X8+2200]
	527 Move X22, [X22+2184]
	528 Move X9, 0x23AA000
	529 Move X9, [X9+1808]
	530 Move X1, [X8]
	531 Move X21, [X22]
	532 Move X3, [X9]
	533 Move X0, X20
	534 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	535 Move X8, 0x23AA000
	536 Move X8, [X8+1928]
	537 Move X0, [X8]
	538 Move W8, [X0+224]
	539 Compare W8, 0
	540 JumpIfNotEqual {542}
	541 Call 0x1C17DFC
	542 Move X8, 0x23AB000
	543 Move X9, 0x23AB000
	544 Move X8, [X8+1816]
	545 Move X9, [X9+1856]
	546 Move X3, [X8]
	547 Move X4, [X9]
	548 Move W0, 2048
	549 Move W5, 263
	550 Move X1, X21
	551 Move X2, X20
	552 Move X6, X31
	553 Call Log.Error, X0, X1, X2, X3, X4, X5
	554 Move X8, [X19+32]
	555 Compare X8, 0
	556 JumpIfEqual {565}
	557 Move W20, 5
	558 Move [X8+24], W20
	559 Move X9, [X22]
	560 Move [X8+32], X9
	561 Call 0x1C17F20
	562 Call 0x1C17F20
	563 Call 0x1C17F20
	564 Call 0x1C17F20
	565 Call 0x1C17F20
	566 Move X0, [X27]
	567 Move W8, [X0+224]
	568 Compare W8, 0
	569 JumpIfNotEqual {571}
	570 Call 0x1C17DFC
	571 Move X0, X31
	572 Call Task.Yield
	573 Move [X31+48], W0
	574 Add X0, X31, 48
	575 Move X1, X31
	576 Call YieldAwaitable.GetAwaiter, X0
	577 Move X8, X0
	578 Move X0, [X23]
	579 Move [X31+56], W8
	580 Move W8, [X0+224]
	581 Compare W8, 0
	582 JumpIfNotEqual {584}
	583 Call 0x1C17DFC
	584 Add X0, X31, 56
	585 Move X1, X31
	586 Call YieldAwaiter.get_IsCompleted, X0
	587 Move TEMP, X0
	588 And TEMP, TEMP, 1
	589 Compare TEMP, 1
	590 JumpIfNotEqual {646}
	591 Move X0, [X23]
	592 Move W8, [X0+224]
	593 Compare W8, 0
	594 JumpIfNotEqual {596}
	595 Call 0x1C17DFC
	596 Add X0, X31, 56
	597 Move X1, X31
	598 Call YieldAwaiter.GetResult, X0
	599 Move X8, [X19+32]
	600 Compare X8, 0
	601 JumpIfEqual {851}
	602 Move W9, [X8+72]
	603 Compare W9, 0
	604 JumpIfEqual {566}
	605 Move W20, [X8+24]
	606 Compare W20, 0
	607 JumpIfNotEqual {369}
	608 NotImplemented "Instruction CMP not yet implemented."
	609 Move X8, [X19+48]
	610 Move TEMP, 0
	611 Not TEMP
	612 Move W26, TEMP
	613 Move [X31+40], X8
	614 Move [X19+48], X31
	615 Move [X19], W26
	616 Move X8, 0x23AB000
	617 Move X8, [X8+2096]
	618 Add X0, X31, 40
	619 Move X1, [X8]
	620 Call TaskAwaiter`1<Object>.GetResult, X0
	621 Move X8, [X19+32]
	622 Compare X8, 0
	623 JumpIfEqual {853}
	624 Move [X8+16], X0
	625 Move W20, [X8+24]
	626 Compare W20, 0
	627 JumpIfNotEqual {369}
	628 NotImplemented "Instruction CMP not yet implemented."
	629 Move X8, [X19+56]
	630 Move TEMP, 0
	631 Not TEMP
	632 Move W9, TEMP
	633 Move [X31+32], X8
	634 Move [X19+56], X31
	635 Move [X19], W9
	636 Add X0, X31, 32
	637 Move X1, X31
	638 Call TaskAwaiter.GetResult, X0
	639 Move X8, [X19+32]
	640 Compare X8, 0
	641 JumpIfEqual {852}
	642 Move X21, [X8+16]
	643 Move W9, [X8+36]
	644 NotImplemented "Instruction LDUR not yet implemented."
	645 Move W20, [X8+24]
	646 Move W8, 2
	647 Move [X19], W8
	648 Move W8, [X31+56]
	649 Move [X19+40], W8
	650 Move X0, [X25]
	651 Move W8, [X0+224]
	652 Compare W8, 0
	653 JumpIfNotEqual {655}
	654 Call 0x1C17DFC
	655 Move X8, 0x23AB000
	656 Move X8, [X8+2032]
	657 Add X0, X19, 8
	658 Move X3, [X8]
	659 Add X1, X31, 56
	660 Move X2, X19
	661 Call AsyncTaskMethodBuilder`1<AuthResult>.AwaitUnsafeOnCompleted, X0, X1, X2
	662 Move X20, [X8+16]
	663 Compare X20, 0
	664 JumpIfEqual {854}
	665 Move X10, 0x23AB000
	666 Move X8, [X20]
	667 Move X10, [X10+2072]
	668 NotImplemented "Instruction LDRH not yet implemented."
	669 Move X1, [X10]
	670 Compare X9, 0
	671 JumpIfEqual {678}
	672 Move X10, [X8+176]
	673 Add X10, X10, 8
	674 NotImplemented "Instruction LDUR not yet implemented."
	675 NotImplemented "Instruction CMP not yet implemented."
	676 Subtract X9, X9, 1
	677 Add X10, X10, 16
	678 Move W2, 1
	679 Move X0, X20
	680 Call 0x1C5D788
	681 Move X8, 0x23AA000
	682 Move X8, [X8+1608]
	683 Move X0, [X8]
	684 Move W8, [X0+224]
	685 Compare W8, 0
	686 JumpIfNotEqual {688}
	687 Call 0x1C17DFC
	688 Call App.get_api
	689 Move X8, [X19+32]
	690 Compare X8, 0
	691 JumpIfEqual {855}
	692 Move X8, [X8+48]
	693 Compare X8, 0
	694 JumpIfEqual {856}
	695 Move X20, X0
	696 Add X0, X8, 24
	697 Move X1, X31
	698 Call UInt64.ToString, X0
	699 Move X8, [X19+32]
	700 Compare X8, 0
	701 JumpIfEqual {857}
	702 Move X8, [X8+48]
	703 Compare X8, 0
	704 JumpIfEqual {858}
	705 Move X22, [X8+40]
	706 Move X8, 0x23AB000
	707 Move X8, [X8+1744]
	708 Move X21, X0
	709 Move X0, [X8]
	710 Call 0x1C17F10
	711 Move X8, 0x23AB000
	712 Move X8, [X8+1728]
	713 Move X23, X0
	714 Move X1, [X8]
	715 Call Dictionary`2<Object, Object>..ctor, X0
	716 Compare X23, 0
	717 JumpIfEqual {859}
	718 Move X8, 0x23AB000
	719 Move X8, [X8+2168]
	720 Move X9, 0x23AB000
	721 Move X27, 0x23AB000
	722 Move X9, [X9+2176]
	723 Move X27, [X27+2064]
	724 Move X1, [X8]
	725 Move X2, [X9]
	726 Move X3, [X27]
	727 Move X0, X23
	728 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	729 Move X8, [X19+32]
	730 Compare X8, 0
	731 JumpIfEqual {860}
	732 Move X2, [X8+64]
	733 Move X8, 0x23AB000
	734 Move X8, [X8+2160]
	735 Move X3, [X27]
	736 Move X1, [X8]
	737 Move X0, X23
	738 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	739 Move X0, X23
	740 Call AuthCommands.GetAuthVars, X0
	741 Compare X20, 0
	742 JumpIfEqual {861}
	743 Move X4, X0
	744 Move W3, 1
	745 Move X0, X20
	746 Move X1, X21
	747 Move X2, X22
	748 Move X5, X31
	749 Move X6, X31
	750 Move X7, X31
	751 Call AnimalCompanyAPI.AuthenticateCustomAsync, X0, X1, X2, X3, X4, X5, X6
	752 Compare X0, 0
	753 JumpIfEqual {862}
	754 Move X8, 0x23AB000
	755 Move X8, [X8+2112]
	756 Move X1, [X8]
	757 Call Task`1<Object>.GetAwaiter, X0
	758 Move X8, 0x23AB000
	759 Move X8, [X8+2104]
	760 Move [X31+40], X0
	761 Move X1, [X8]
	762 Add X0, X31, 40
	763 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	764 Move TEMP, X0
	765 And TEMP, TEMP, 1
	766 Compare TEMP, 1
	767 JumpIfEqual {616}
	768 Move W8, 3
	769 Move [X19], W8
	770 Move X8, [X31+40]
	771 Move [X19+48], X8
	772 Move X0, [X25]
	773 Move W8, [X0+224]
	774 Compare W8, 0
	775 JumpIfNotEqual {777}
	776 Call 0x1C17DFC
	777 Move X8, 0x23AB000
	778 Move X8, [X8+2016]
	779 Add X0, X19, 8
	780 Move X3, [X8]
	781 Add X1, X31, 40
	782 Move X2, X19
	783 Call AsyncTaskMethodBuilder`1<AuthResult>.AwaitUnsafeOnCompleted, X0, X1, X2
	784 Move W9, [X10]
	785 Add W9, W9, 1
	786 Add X8, X8, W9
	787 Add X0, X8, 312
	788 Move X8, [X0]
	789 Move X1, [X0+8]
	790 Move X0, X20
	791 NotImplemented "Instruction BLR not yet implemented."
	792 Move TEMP, X0
	793 And TEMP, TEMP, 1
	794 Compare TEMP, 1
	795 JumpIfNotEqual {639}
	796 Move X8, 0x23AA000
	797 Move X8, [X8+1608]
	798 Move X0, [X8]
	799 Move W8, [X0+224]
	800 Compare W8, 0
	801 JumpIfNotEqual {803}
	802 Call 0x1C17DFC
	803 Call App.get_api
	804 Move X8, [X19+32]
	805 Compare X8, 0
	806 JumpIfEqual {863}
	807 Move X9, [X8+48]
	808 Compare X9, 0
	809 JumpIfEqual {864}
	810 Compare X0, 0
	811 JumpIfEqual {865}
	812 Move X1, [X8+16]
	813 Move X3, [X9+16]
	814 Move X4, [X9+32]
	815 Move X2, [X9+40]
	816 Move X5, X31
	817 Move X6, X31
	818 Move X7, X31
	819 Move [X31], X31
	820 Move [X31+8], X31
	821 Move [X31+16], X31
	822 Call AnimalCompanyAPI.UpdateAccountAsync, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9
	823 Compare X0, 0
	824 JumpIfEqual {866}
	825 Move X1, X31
	826 Call Task.GetAwaiter, X0
	827 Move [X31+32], X0
	828 Add X0, X31, 32
	829 Move X1, X31
	830 Call TaskAwaiter.get_IsCompleted, X0
	831 Move TEMP, X0
	832 And TEMP, TEMP, 1
	833 Compare TEMP, 1
	834 JumpIfEqual {636}
	835 Move W8, 4
	836 Move [X19], W8
	837 Move X8, [X31+32]
	838 Move [X19+56], X8
	839 Move X0, [X25]
	840 Move W8, [X0+224]
	841 Compare W8, 0
	842 JumpIfNotEqual {844}
	843 Call 0x1C17DFC
	844 Move X8, 0x23AB000
	845 Move X8, [X8+2024]
	846 Add X0, X19, 8
	847 Move X3, [X8]
	848 Add X1, X31, 32
	849 Move X2, X19
	850 Call AsyncTaskMethodBuilder`1<AuthResult>.AwaitUnsafeOnCompleted, X0, X1, X2
	851 Call 0x1C17F20
	852 Call 0x1C17F20
	853 Call 0x1C17F20
	854 Call 0x1C17F20
	855 Call 0x1C17F20
	856 Call 0x1C17F20
	857 Call 0x1C17F20
	858 Call 0x1C17F20
	859 Call 0x1C17F20
	860 Call 0x1C17F20
	861 Call 0x1C17F20
	862 Call 0x1C17F20
	863 Call 0x1C17F20
	864 Call 0x1C17F20
	865 Call 0x1C17F20
	866 Call 0x1C17F20
	867 Move X20, X1
	868 Move X21, X0
	869 Move W26, 3
	870 Move X20, X1
	871 Move X21, X0
	872 NotImplemented "Instruction CMP not yet implemented."
	873 Move X0, X21
	874 Call 0x3EB2AD0
	875 Move X20, X0
	876 Move X0, 0x23AA000
	877 Move X0, [X0+2000]
	878 Call 0x1C17D08
	879 Move X8, [X20]
	880 Move X1, [X8]
	881 Call 0x1C18270
	882 Move TEMP, X0
	883 And TEMP, TEMP, 1
	884 Compare TEMP, 1
	885 JumpIfNotEqual {995}
	886 Move X20, [X20]
	887 Call 0x3EB2AE0
	888 Move X0, 0x23AB000
	889 Move X0, [X0+2208]
	890 Call 0x1C17D08
	891 Compare X20, 0
	892 JumpIfEqual {901}
	893 Move X8, [X20]
	894 Move W9, [X0+304]
	895 Move W10, [X8+304]
	896 NotImplemented "Instruction CMP not yet implemented."
	897 Move X8, [X8+200]
	898 Add X8, X8, X9
	899 NotImplemented "Instruction LDUR not yet implemented."
	900 NotImplemented "Instruction CMP not yet implemented."
	901 Move X8, [X19+32]
	902 Compare X8, 0
	903 JumpIfEqual {1003}
	904 Add X1, X8, 16
	905 Move X0, X20
	906 Call AuthCommands.TryParseAuthError, X0, X1
	907 Move TEMP, X0
	908 And TEMP, TEMP, 1
	909 Compare TEMP, 1
	910 JumpIfEqual {931}
	911 Move X22, [X19+32]
	912 Compare X22, 0
	913 JumpIfEqual {1005}
	914 Move W8, 7
	915 Move [X22+24], W8
	916 Compare X20, 0
	917 JumpIfEqual {1006}
	918 Move X8, [X20]
	919 Move X9, [X8+392]
	920 Move X1, [X8+400]
	921 Move X0, X20
	922 NotImplemented "Instruction BLR not yet implemented."
	923 Move X21, X0
	924 Move X0, 0x23AB000
	925 Move X0, [X0+2216]
	926 Call 0x1C17D08
	927 Move X1, X21
	928 Move X2, X31
	929 Call String.Concat, X0, X1
	930 Move [X22+32], X0
	931 Move X8, [X19+32]
	932 Compare X8, 0
	933 JumpIfEqual {1004}
	934 Move W9, [X8+24]
	935 Compare W9, 0
	936 JumpIfEqual {625}
	937 NotImplemented "Instruction CMP not yet implemented."
	938 Move X0, 0x23AA000
	939 Move X0, [X0+1928]
	940 Call 0x1C17D08
	941 Move W8, [X0+224]
	942 Compare W8, 0
	943 JumpIfNotEqual {945}
	944 Call 0x1C17DFC
	945 Move X0, 0x23AB000
	946 Move X0, [X0+2224]
	947 Call 0x1C17D08
	948 Move X21, X0
	949 Move X0, 0x23AB000
	950 Move X0, [X0+1816]
	951 Call 0x1C17D08
	952 Move X22, X0
	953 Move X0, 0x23AB000
	954 Move X0, [X0+1856]
	955 Call 0x1C17D08
	956 Move X5, X0
	957 Move W0, 2048
	958 Move W6, 328
	959 Move X1, X21
	960 Move X2, X20
	961 Move X3, X31
	962 Move X4, X22
	963 Move X7, X31
	964 Call Log.Error, X0, X1, X2, X3, X4, X5, X6
	965 Move X8, [X19+32]
	966 Compare X8, 0
	967 JumpIfNotEqual {625}
	968 Call 0x1C17F20
	969 Move X0, 0x23AA000
	970 Move X0, [X0+1928]
	971 Call 0x1C17D08
	972 Move W8, [X0+224]
	973 Compare W8, 0
	974 JumpIfNotEqual {976}
	975 Call 0x1C17DFC
	976 Move X0, 0x23AB000
	977 Move X0, [X0+2232]
	978 Call 0x1C17D08
	979 Move X20, X0
	980 Move X0, 0x23AB000
	981 Move X0, [X0+1816]
	982 Call 0x1C17D08
	983 Move X21, X0
	984 Move X0, 0x23AB000
	985 Move X0, [X0+1856]
	986 Call 0x1C17D08
	987 Move X4, X0
	988 Move W0, 2048
	989 Move W5, 318
	990 Move X1, X20
	991 Move X2, X31
	992 Move X3, X21
	993 Move X6, X31
	994 Call Log.Debug, X0, X1, X2, X3, X4, X5
	995 Move W0, 8
	996 Call 0x3EB2AF0
	997 Move X8, [X20]
	998 Move [X0], X8
	999 Move X1, 0x216A000
	1000 Add X1, X1, 3672
	1001 Move X2, X31
	1002 Call 0x3EB2B00
	1003 Call 0x1C17F20
	1004 Call 0x1C17F20
	1005 Call 0x1C17F20
	1006 Call 0x1C17F20
	1007 Move X20, X1
	1008 Move X21, X0
	1009 Call 0x3EB2AE0
	1010 Move X20, X1
	1011 Move X21, X0
	1012 NotImplemented "Instruction CMP not yet implemented."
	1013 Move X0, X21
	1014 Call 0x3EB2AD0
	1015 Move X20, X0
	1016 Move X0, 0x23A9000
	1017 Move X0, [X0+2000]
	1018 Call 0x1C17D08
	1019 Move X8, [X20]
	1020 Move X1, [X8]
	1021 Call 0x1C18270
	1022 Move TEMP, X0
	1023 And TEMP, TEMP, 1
	1024 Compare TEMP, 1
	1025 JumpIfNotEqual {1098}
	1026 Move X20, [X20]
	1027 Call 0x3EB2AE0
	1028 Move X0, 0x23AA000
	1029 Move X0, [X0+2208]
	1030 Call 0x1C17D08
	1031 Compare X20, 0
	1032 JumpIfEqual {1041}
	1033 Move X8, [X20]
	1034 Move W9, [X0+304]
	1035 Move W10, [X8+304]
	1036 NotImplemented "Instruction CMP not yet implemented."
	1037 Move X8, [X8+200]
	1038 Add X8, X8, X9
	1039 NotImplemented "Instruction LDUR not yet implemented."
	1040 NotImplemented "Instruction CMP not yet implemented."
	1041 Move X0, 0x23A9000
	1042 Move X0, [X0+1928]
	1043 Call 0x1C17D08
	1044 Move W8, [X0+224]
	1045 Compare W8, 0
	1046 JumpIfNotEqual {1048}
	1047 Call 0x1C17DFC
	1048 Move X0, 0x23AA000
	1049 Move X0, [X0+2240]
	1050 Call 0x1C17D08
	1051 Move X21, X0
	1052 Move X0, 0x23AA000
	1053 Move X0, [X0+1816]
	1054 Call 0x1C17D08
	1055 Move X22, X0
	1056 Move X0, 0x23AA000
	1057 Move X0, [X0+1856]
	1058 Call 0x1C17D08
	1059 Move X5, X0
	1060 Move W0, 2048
	1061 Move W6, 355
	1062 Move X1, X21
	1063 Move X2, X20
	1064 Move X3, X31
	1065 Move X4, X22
	1066 Move X7, X31
	1067 Call Log.Error, X0, X1, X2, X3, X4, X5, X6
	1068 Move X0, 0x23A9000
	1069 Move X0, [X0+1928]
	1070 Call 0x1C17D08
	1071 Move W8, [X0+224]
	1072 Compare W8, 0
	1073 JumpIfNotEqual {1075}
	1074 Call 0x1C17DFC
	1075 Move X0, 0x23AA000
	1076 Move X0, [X0+2232]
	1077 Call 0x1C17D08
	1078 Move X20, X0
	1079 Move X0, 0x23AA000
	1080 Move X0, [X0+1816]
	1081 Call 0x1C17D08
	1082 Move X21, X0
	1083 Move X0, 0x23AA000
	1084 Move X0, [X0+1856]
	1085 Call 0x1C17D08
	1086 Move X4, X0
	1087 Move W0, 2048
	1088 Move W5, 351
	1089 Move X1, X20
	1090 Move X2, X31
	1091 Move X3, X21
	1092 Move X6, X31
	1093 Call Log.Debug, X0, X1, X2, X3, X4, X5
	1094 Move X21, X31
	1095 Move W20, 3
	1096 Move [X31+112], W31
	1097 Move [X31+104], X31
	1098 Move W0, 8
	1099 Call 0x3EB2AF0
	1100 Move X8, [X20]
	1101 Move [X0], X8
	1102 Move X1, 0x216A000
	1103 Add X1, X1, 3672
	1104 Move X2, X31
	1105 Call 0x3EB2B00
	1106 Move X20, X1
	1107 Move X21, X0
	1108 Call 0x3EB2AE0
	1109 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x01D4B238 ADRP X0, 0x23A8000
	0x01D4B23C LDR X0, [X0 + 0x788]
	0x01D4B240 BL 0x1C16D08
	0x01D4B244 LDR W8, [X0 + 0xE0]
	0x01D4B248 CBNZ W8, 0x1D4B250
	0x01D4B24C BL 0x1C16DFC
	0x01D4B250 ADRP X0, 0x23A9000
	0x01D4B254 LDR X0, [X0 + 0x9A0]
	0x01D4B258 BL 0x1C16D08
	0x01D4B25C MOV X20, X0
	0x01D4B260 ADRP X0, 0x23A9000
	0x01D4B264 LDR X0, [X0 + 0x718]
	0x01D4B268 BL 0x1C16D08
	0x01D4B26C MOV X21, X0
	0x01D4B270 ADRP X0, 0x23A9000
	0x01D4B274 LDR X0, [X0 + 0x978]
	0x01D4B278 BL 0x1C16D08
	0x01D4B27C MOV X4, X0
	0x01D4B280 MOVZ W0, 0x800
	0x01D4B284 MOVZ W5, 0x88
	0x01D4B288 MOV X1, X20
	0x01D4B28C MOV X2, X31
	0x01D4B290 MOV X3, X21
	0x01D4B294 MOV X6, X31
	0x01D4B298 BL 0x35C2014
	0x01D4B29C LDR W8, [X31 + 0xA0]
	0x01D4B2A0 MOVI V0.2D, 0x0
	0x01D4B2A4 MOV W21, W31
	0x01D4B2A8 STR X31, [X31 + 0x150]
	0x01D4B2AC SUB W8, W8, 0x1
	0x01D4B2B0 STP V0, V0, [X24 + 0x60]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x268E000
	007 Move X21, 0x23AA000
	008 Move W8, [X22+1920]
	009 Move X21, [X21+1688]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x23AA000
	017 Move X0, [X0+2008]
	018 Call 0x1C17CF4
	019 Move X0, 0x23AA000
	020 Move X0, [X0+1688]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1920], W8
	024 Move X0, [X21]
	025 Move X21, 0x23AA000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2008]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<AuthResult>.SetStateMachine, X0, X1
	040 Return 

