Type: AnimalCompany.AuthCommands/<AuthenticateWithMetaQuestAccount>d__7

Method: System.Void MoveNext()

Disassembly:
	0x01C953E0 MOV X2, X31
	0x01C953E4 MOV X3, X21
	0x01C953E8 MOV X6, X31
	0x01C953EC BL 0x342B224
	0x01C953F0 MOV X21, X31
	0x01C953F4 MOVZ W20, 0x3
	0x01C953F8 STR W31, [X31 + 0x70]
	0x01C953FC STR X31, [X31 + 0x68]
	0x01C95400 B 0x1C94B5C
	0x01C95404 MOVZ W0, 0x8
	0x01C95408 BL 0x3D19860
	0x01C9540C LDR X8, [X20]
	0x01C95410 STR X8, [X0]
	0x01C95414 ADRP X1, 0x2087000
	0x01C95418 ADD X1, X1, 0xBD8
	0x01C9541C MOV X2, X31
	0x01C95420 BL 0x3D19870
	0x01C95424 B 0x1C94928
	0x01C95428 B 0x1C94928
	0x01C9542C MOV X20, X1
	0x01C95430 MOV X21, X0
	0x01C95434 BL 0x3D19850
	0x01C95438 B 0x1C94930
	0x01C9543C B 0x1C94928
	0x01C95440 BL 0x18F46A8
	0x01C95444 B 0x1C94928
	0x01C95448 B 0x1C94928
	0x01C9544C B 0x1C94928
	0x01C95450 B 0x1C94928
	0x01C95454 B 0x1C94928
	0x01C95458 B 0x1C94928
	0x01C9545C STR X30, [X31 - 0x30]!
	0x01C95460 STP X22, X21, [X31 + 0x10]
	0x01C95464 STP X20, X19, [X31 + 0x20]
	0x01C95468 ADRP X22, 0x258E000
	0x01C9546C ADRP X21, 0x22B8000
	0x01C95470 LDRB W8, [X22 + 0x3D4]
	0x01C95474 LDR X21, [X21 + 0xD20]
	0x01C95478 MOV X19, X1
	0x01C9547C MOV X20, X0
	0x01C95480 TBNZ X8, 0x0, 0x1C954A4
	0x01C95484 ADRP X0, 0x22B8000
	0x01C95488 LDR X0, [X0 + 0xE80]
	0x01C9548C BL 0x1B6E7F0
	0x01C95490 ADRP X0, 0x22B8000
	0x01C95494 LDR X0, [X0 + 0xD20]
	0x01C95498 BL 0x1B6E7F0
	0x01C9549C MOVZ W8, 0x1
	0x01C954A0 STRB W8, [X22 + 0x3D4]
	0x01C954A4 LDR X0, [X21]
	0x01C954A8 ADRP X21, 0x22B8000
	0x01C954AC LDR W8, [X0 + 0xE0]
	0x01C954B0 LDR X21, [X21 + 0xE80]
	0x01C954B4 CBNZ W8, 0x1C954BC
	0x01C954B8 BL 0x1B6E8F8
	0x01C954BC LDR X2, [X21]
	0x01C954C0 ADD X0, X20, 0x8
	0x01C954C4 MOV X1, X19
	0x01C954C8 LDP X20, X19, [X31 + 0x20]
	0x01C954CC LDP X22, X21, [X31 + 0x10]
	0x01C954D0 LDR X30, [X31], #0x30
	0x01C954D4 B 0x23D0450
	0x01C954D8 SUB X31, X31, 0x100
	0x01C954DC STR X30, [X31 + 0xC0]
	0x01C954E0 STP X24, X23, [X31 + 0xD0]
	0x01C954E4 STP X22, X21, [X31 + 0xE0]
	0x01C954E8 STP X20, X19, [X31 + 0xF0]
	0x01C954EC MRS X23, 0xC000
	0x01C954F0 LDR X8, [X23 + 0x28]
	0x01C954F4 ADRP X20, 0x258E000
	0x01C954F8 MOV X19, X0
	0x01C954FC STR X8, [X31 + 0xB8]
	0x01C95500 LDRB W8, [X20 + 0x3D5]
	0x01C95504 TBNZ X8, 0x0, 0x1C95654
	0x01C95508 ADRP X0, 0x22B8000
	0x01C9550C LDR X0, [X0 + 0x4E8]
	0x01C95510 BL 0x1B6E7F0
	0x01C95514 ADRP X0, 0x22B8000
	0x01C95518 LDR X0, [X0 + 0x800]
	0x01C9551C BL 0x1B6E7F0
	0x01C95520 ADRP X0, 0x22B8000
	0x01C95524 LDR X0, [X0 + 0xFA0]
	0x01C95528 BL 0x1B6E7F0
	0x01C9552C ADRP X0, 0x22B8000
	0x01C95530 LDR X0, [X0 + 0xFA8]
	0x01C95534 BL 0x1B6E7F0
	0x01C95538 ADRP X0, 0x22B8000
	0x01C9553C LDR X0, [X0 + 0xFB0]
	0x01C95540 BL 0x1B6E7F0
	0x01C95544 ADRP X0, 0x22B8000
	0x01C95548 LDR X0, [X0 + 0xFB8]
	0x01C9554C BL 0x1B6E7F0
	0x01C95550 ADRP X0, 0x22B8000
	0x01C95554 LDR X0, [X0 + 0x8F0]
	0x01C95558 BL 0x1B6E7F0
	0x01C9555C ADRP X0, 0x22B8000
	0x01C95560 LDR X0, [X0 + 0xFC0]
	0x01C95564 BL 0x1B6E7F0
	0x01C95568 ADRP X0, 0x22B8000
	0x01C9556C LDR X0, [X0 + 0xFC8]
	0x01C95570 BL 0x1B6E7F0
	0x01C95574 ADRP X0, 0x22B8000
	0x01C95578 LDR X0, [X0 + 0xFD0]
	0x01C9557C BL 0x1B6E7F0
	0x01C95580 ADRP X0, 0x22B8000
	0x01C95584 LDR X0, [X0 + 0xFD8]
	0x01C95588 BL 0x1B6E7F0
	0x01C9558C ADRP X0, 0x22B8000
	0x01C95590 LDR X0, [X0 + 0xFE0]
	0x01C95594 BL 0x1B6E7F0
	0x01C95598 ADRP X0, 0x22B8000
	0x01C9559C LDR X0, [X0 + 0x628]
	0x01C955A0 BL 0x1B6E7F0
	0x01C955A4 ADRP X0, 0x22B8000
	0x01C955A8 LDR X0, [X0 + 0xFE8]
	0x01C955AC BL 0x1B6E7F0
	0x01C955B0 ADRP X0, 0x22B8000
	0x01C955B4 LDR X0, [X0 + 0xE48]
	0x01C955B8 BL 0x1B6E7F0
	0x01C955BC ADRP X0, 0x22B8000
	0x01C955C0 LDR X0, [X0 + 0xFF0]
	0x01C955C4 BL 0x1B6E7F0
	0x01C955C8 ADRP X0, 0x22B8000
	0x01C955CC LDR X0, [X0 + 0xE50]
	0x01C955D0 BL 0x1B6E7F0
	0x01C955D4 ADRP X0, 0x22B8000
	0x01C955D8 LDR X0, [X0 + 0xE58]
	0x01C955DC BL 0x1B6E7F0
	0x01C955E0 ADRP X0, 0x22B8000
	0x01C955E4 LDR X0, [X0 + 0xFF8]
	0x01C955E8 BL 0x1B6E7F0
	0x01C955EC ADRP X0, 0x22B9000
	0x01C955F0 LDR X0, [X0]
	0x01C955F4 BL 0x1B6E7F0
	0x01C955F8 ADRP X0, 0x22B9000
	0x01C955FC LDR X0, [X0 + 0x8]
	0x01C95600 BL 0x1B6E7F0
	0x01C95604 ADRP X0, 0x22B9000
	0x01C95608 LDR X0, [X0 + 0x10]
	0x01C9560C BL 0x1B6E7F0
	0x01C95610 ADRP X0, 0x22B9000
	0x01C95614 LDR X0, [X0 + 0x18]
	0x01C95618 BL 0x1B6E7F0
	0x01C9561C ADRP X0, 0x22B9000
	0x01C95620 LDR X0, [X0 + 0x20]
	0x01C95624 BL 0x1B6E7F0
	0x01C95628 ADRP X0, 0x22B9000
	0x01C9562C LDR X0, [X0 + 0x28]
	0x01C95630 BL 0x1B6E7F0
	0x01C95634 ADRP X0, 0x22B8000
	0x01C95638 LDR X0, [X0 + 0xDE8]
	0x01C9563C BL 0x1B6E7F0
	0x01C95640 ADRP X0, 0x22B9000
	0x01C95644 LDR X0, [X0 + 0x30]
	0x01C95648 BL 0x1B6E7F0
	0x01C9564C MOVZ W8, 0x1
	0x01C95650 STRB W8, [X20 + 0x3D5]
	0x01C95654 STP X31, X31, [X31 + 0x80]
	0x01C95658 STR W31, [X31 + 0xB0]
	0x01C9565C STR X31, [X31 + 0xA8]
	0x01C95660 STP X31, X31, [X31 + 0x70]
	0x01C95664 STR X31, [X31 + 0x68]
	0x01C95668 STR W31, [X31 + 0x60]
	0x01C9566C LDR W8, [X19]
	0x01C95670 ADRP X24, 0x22B8000
	0x01C95674 LDR X24, [X24 + 0x8F0]
	0x01C95678 ADD X21, X31, 0x90
	0x01C9567C CMP W8, 0x3
	0x01C95680 B.HI 0x1C95778
	0x01C95684 ADRP X9, 0xFFFFFFFFFEE18000
	0x01C95688 ADD X9, X9, 0xE38
	0x01C9568C ADR X10, 0x10
	0x01C95690 LDRB W11, [X9, X8, LSL]
	0x01C95694 ADD X10, X10, X11, 0x2, LSL
	0x01C95698 BR X10
	0x01C9569C LDR X8, [X19 + 0x38]
	0x01C956A0 MOVN W9, 0x0
	0x01C956A4 STR X8, [X31 + 0x78]
	0x01C956A8 STR X31, [X19 + 0x38]
	0x01C956AC STR W9, [X19]
	0x01C956B0 ADRP X8, 0x22B8000
	0x01C956B4 LDR X8, [X8 + 0xE48]
	0x01C956B8 LDR X1, [X8]
	0x01C956BC ADD X8, X31, 0x90
	0x01C956C0 ADD X0, X31, 0x78
	0x01C956C4 BL 0x24D92BC
	0x01C956C8 ADRP X11, 0x22B9000
	0x01C956CC LDR X20, [X31 + 0x90]
	0x01C956D0 LDUR X8, [X21 + 0xC]
	0x01C956D4 LDR W9, [X31 + 0x98]
	0x01C956D8 LDR W10, [X31 + 0xA4]
	0x01C956DC LDR X11, [X11 + 0x20]
	0x01C956E0 STR X8, [X31 + 0xA8]
	0x01C956E4 STR X20, [X31 + 0x30]
	0x01C956E8 STR W10, [X31 + 0xB0]
	0x01C956EC LDR X1, [X11]
	0x01C956F0 STR W9, [X31 + 0x38]
	0x01C956F4 STUR X8, [X31 + 0x3C]
	0x01C956F8 STR W10, [X31 + 0x44]
	0x01C956FC ADD X0, X31, 0x30
	0x01C95700 BL 0x1C92968
	0x01C95704 CBZ X20, 0x1C957C8
	0x01C95708 ADRP X8, 0x22B8000
	0x01C9570C LDR X8, [X8 + 0x800]
	0x01C95710 LDR X0, [X8]
	0x01C95714 LDR W8, [X0 + 0xE0]
	0x01C95718 CBNZ W8, 0x1C95720
	0x01C9571C BL 0x1B6E8F8
	0x01C95720 MOV X0, X31
	0x01C95724 BL 0x3A6BF90
	0x01C95728 TBNZ X0, 0x0, 0x1C957C8
	0x01C9572C B 0x1C95854
	0x01C95730 LDR X8, [X19 + 0x40]
	0x01C95734 MOVN W9, 0x0
	0x01C95738 STR X8, [X31 + 0x70]
	0x01C9573C STR X31, [X19 + 0x40]
	0x01C95740 STR W9, [X19]
	0x01C95744 B 0x1C958C0
	0x01C95748 LDR X8, [X19 + 0x48]
	0x01C9574C MOVN W9, 0x0
	0x01C95750 STR X8, [X31 + 0x68]
	0x01C95754 STR X31, [X19 + 0x48]
	0x01C95758 STR W9, [X19]
	0x01C9575C B 0x1C95BC4
	0x01C95760 LDR X8, [X19 + 0x38]
	0x01C95764 MOVN W9, 0x0
	0x01C95768 STR X8, [X31 + 0x78]
	0x01C9576C STR X31, [X19 + 0x38]
	0x01C95770 STR W9, [X19]
	0x01C95774 B 0x1C957FC
	0x01C95778 ADRP X8, 0x22B8000
	0x01C9577C LDR X8, [X8 + 0x4E8]
	0x01C95780 STR W31, [X31 + 0xB0]
	0x01C95784 STR X31, [X31 + 0xA8]
	0x01C95788 LDR X0, [X8]
	0x01C9578C LDR W8, [X0 + 0xE0]
	0x01C95790 CBNZ W8, 0x1C95798
	0x01C95794 BL 0x1B6E8F8
	0x01C95798 BL 0x1C89638
	0x01C9579C CMP W0, 0x1
	0x01C957A0 B.NE 0x1C957C8
	0x01C957A4 ADRP X8, 0x22B8000
	0x01C957A8 LDR X8, [X8 + 0x800]
	0x01C957AC LDR X0, [X8]
	0x01C957B0 LDR W8, [X0 + 0xE0]
	0x01C957B4 CBNZ W8, 0x1C957BC
	0x01C957B8 BL 0x1B6E8F8
	0x01C957BC MOV X0, X31
	0x01C957C0 BL 0x3A6BF90
	0x01C957C4 TBZ X0, 0x0, 0x1C95C88
	0x01C957C8 BL 0x1C92754
	0x01C957CC CBZ X0, 0x1C95D30
	0x01C957D0 ADRP X8, 0x22B8000
	0x01C957D4 LDR X8, [X8 + 0xE58]
	0x01C957D8 LDR X1, [X8]
	0x01C957DC BL 0x2503108
	0x01C957E0 ADRP X8, 0x22B8000
	0x01C957E4 LDR X8, [X8 + 0xE50]
	0x01C957E8 STR X0, [X31 + 0x78]
	0x01C957EC LDR X1, [X8]
	0x01C957F0 ADD X0, X31, 0x78
	0x01C957F4 BL 0x24D9278
	0x01C957F8 TBZ X0, 0x0, 0x1C95950
	0x01C957FC ADRP X8, 0x22B8000
	0x01C95800 LDR X8, [X8 + 0xE48]
	0x01C95804 LDR X1, [X8]
	0x01C95808 ADD X8, X31, 0x90
	0x01C9580C ADD X0, X31, 0x78
	0x01C95810 BL 0x24D92BC
	0x01C95814 ADRP X10, 0x22B9000
	0x01C95818 LDR X20, [X31 + 0x90]
	0x01C9581C LDUR X8, [X21 + 0xC]
	0x01C95820 LDR W21, [X31 + 0x98]
	0x01C95824 LDR W9, [X31 + 0xA4]
	0x01C95828 LDR X10, [X10 + 0x30]
	0x01C9582C STR X8, [X31 + 0xA8]
	0x01C95830 STR X20, [X31 + 0x18]
	0x01C95834 STR W9, [X31 + 0xB0]
	0x01C95838 LDR X1, [X10]
	0x01C9583C STR W21, [X31 + 0x20]
	0x01C95840 STUR X8, [X31 + 0x24]
	0x01C95844 STR W9, [X31 + 0x2C]
	0x01C95848 ADD X0, X31, 0x18
	0x01C9584C BL 0x1C92968
	0x01C95850 CBZ X20, 0x1C959D0
	0x01C95854 STP X31, X31, [X19 + 0x28]
	0x01C95858 STR X20, [X19 + 0x20]
	0x01C9585C ADRP X8, 0x22B8000
	0x01C95860 LDR X8, [X8 + 0x4E8]
	0x01C95864 LDR X0, [X8]
	0x01C95868 LDR W8, [X0 + 0xE0]
	0x01C9586C CBNZ W8, 0x1C95874
	0x01C95870 BL 0x1B6E8F8
	0x01C95874 BL 0x1C896E0
	0x01C95878 CBZ X0, 0x1C95D34
	0x01C9587C MOV X1, X20
	0x01C95880 MOV X2, X31
	0x01C95884 MOV X3, X31
	0x01C95888 MOV X4, X31
	0x01C9588C BL 0x1D0D920
	0x01C95890 CBZ X0, 0x1C95D38
	0x01C95894 ADRP X8, 0x22B8000
	0x01C95898 LDR X8, [X8 + 0xFF8]
	0x01C9589C LDR X1, [X8]
	0x01C958A0 BL 0x24F9364
	0x01C958A4 ADRP X8, 0x22B8000
	0x01C958A8 LDR X8, [X8 + 0xFF0]
	0x01C958AC STR X0, [X31 + 0x70]
	0x01C958B0 LDR X1, [X8]
	0x01C958B4 ADD X0, X31, 0x70
	0x01C958B8 BL 0x24D89E0
	0x01C958BC TBZ X0, 0x0, 0x1C95990
	0x01C958C0 ADRP X8, 0x22B8000
	0x01C958C4 LDR X8, [X8 + 0xFE8]
	0x01C958C8 ADD X0, X31, 0x70
	0x01C958CC LDR X1, [X8]
	0x01C958D0 BL 0x24D8A24
	0x01C958D4 STR X0, [X19 + 0x28]
	0x01C958D8 ADRP X8, 0x22B9000
	0x01C958DC LDR X8, [X8 + 0x8]
	0x01C958E0 LDR X0, [X8]
	0x01C958E4 BL 0x1B6EA0C
	0x01C958E8 MOV X20, X0
	0x01C958EC MOV X1, X31
	0x01C958F0 BL 0x32276F8
	0x01C958F4 BL 0x1C8F444
	0x01C958F8 CBZ X20, 0x1C95D28
	0x01C958FC STR X0, [X20 + 0x10]
	0x01C95900 LDR X21, [X19 + 0x28]
	0x01C95904 CBZ X21, 0x1C95D2C
	0x01C95908 ADRP X22, 0x22B8000
	0x01C9590C LDR X8, [X21]
	0x01C95910 LDR X22, [X22 + 0xFE0]
	0x01C95914 LDRH W9, [X8 + 0x12E]
	0x01C95918 LDR X1, [X22]
	0x01C9591C CBZ X9, 0x1C95940
	0x01C95920 LDR X10, [X8 + 0xB0]
	0x01C95924 ADD X10, X10, 0x8
	0x01C95928 LDUR X11, [X10 - 0x8]
	0x01C9592C CMP X11, X1
	0x01C95930 B.EQ 0x1C95A38
	0x01C95934 SUBS X9, X9, 0x1
	0x01C95938 ADD X10, X10, 0x10
	0x01C9593C B.NE 0x1C95928
	0x01C95940 MOVZ W2, 0x1
	0x01C95944 MOV X0, X21
	0x01C95948 BL 0x1BB4284
	0x01C9594C B 0x1C95A48
	0x01C95950 MOVZ W8, 0x1
	0x01C95954 STR W8, [X19]
	0x01C95958 LDR X8, [X31 + 0x78]
	0x01C9595C STR X8, [X19 + 0x38]
	0x01C95960 LDR X0, [X24]
	0x01C95964 LDR W8, [X0 + 0xE0]
	0x01C95968 CBNZ W8, 0x1C95970
	0x01C9596C BL 0x1B6E8F8
	0x01C95970 ADRP X8, 0x22B8000
	0x01C95974 LDR X8, [X8 + 0xFA0]
	0x01C95978 ADD X0, X19, 0x8
	0x01C9597C LDR X3, [X8]
	0x01C95980 ADD X1, X31, 0x78
	0x01C95984 MOV X2, X19
	0x01C95988 BL 0x20204DC
	0x01C9598C B 0x1C95C20
	0x01C95990 MOVZ W8, 0x2
	0x01C95994 STR W8, [X19]
	0x01C95998 LDR X8, [X31 + 0x70]
	0x01C9599C STR X8, [X19 + 0x40]
	0x01C959A0 LDR X0, [X24]
	0x01C959A4 LDR W8, [X0 + 0xE0]
	0x01C959A8 CBNZ W8, 0x1C959B0
	0x01C959AC BL 0x1B6E8F8
	0x01C959B0 ADRP X8, 0x22B8000
	0x01C959B4 LDR X8, [X8 + 0xFA8]
	0x01C959B8 ADD X0, X19, 0x8
	0x01C959BC LDR X3, [X8]
	0x01C959C0 ADD X1, X31, 0x70
	0x01C959C4 MOV X2, X19
	0x01C959C8 BL 0x20202C8
	0x01C959CC B 0x1C95C20
	0x01C959D0 CBZ W21, 0x1C95A2C
	0x01C959D4 CMP W21, 0xC
	0x01C959D8 B.EQ 0x1C95A2C
	0x01C959DC ADRP X8, 0x22B8000
	0x01C959E0 LDR X8, [X8 + 0x628]
	0x01C959E4 LDR X0, [X8]
	0x01C959E8 LDR W8, [X0 + 0xE0]
	0x01C959EC CBNZ W8, 0x1C959F4
	0x01C959F0 BL 0x1B6E8F8
	0x01C959F4 ADRP X8, 0x22B9000
	0x01C959F8 LDR X8, [X8 + 0x28]
	0x01C959FC ADRP X9, 0x22B8000
	0x01C95A00 ADRP X10, 0x22B9000
	0x01C95A04 LDR X9, [X9 + 0xDE8]
	0x01C95A08 LDR X10, [X10 + 0x10]
	0x01C95A0C LDR X1, [X8]
	0x01C95A10 LDR X3, [X9]
	0x01C95A14 LDR X4, [X10]
	0x01C95A18 MOVZ W0, 0x800
	0x01C95A1C MOVZ W5, 0x46
	0x01C95A20 MOV X2, X31
	0x01C95A24 MOV X6, X31
	0x01C95A28 BL 0x342B7DC
	0x01C95A2C MOV W20, W31
	0x01C95A30 STP X31, X31, [X31 + 0x80]
	0x01C95A34 B 0x1C95BDC
	0x01C95A38 LDR W9, [X10]
	0x01C95A3C ADD W9, W9, 0x1
	0x01C95A40 ADD X8, X8, W9, 0x4, SXTW
	0x01C95A44 ADD X0, X8, 0x138
	0x01C95A48 LDP X8, X1, [X0]
	0x01C95A4C MOV X0, X21
	0x01C95A50 BLR X8
	0x01C95A54 CBZ X0, 0x1C95B5C
	0x01C95A58 LDR X21, [X19 + 0x28]
	0x01C95A5C CBZ X21, 0x1C95D44
	0x01C95A60 LDR X8, [X21]
	0x01C95A64 LDR X1, [X22]
	0x01C95A68 LDRH W9, [X8 + 0x12E]
	0x01C95A6C CBZ X9, 0x1C95A90
	0x01C95A70 LDR X10, [X8 + 0xB0]
	0x01C95A74 ADD X10, X10, 0x8
	0x01C95A78 LDUR X11, [X10 - 0x8]
	0x01C95A7C CMP X11, X1
	0x01C95A80 B.EQ 0x1C95AA0
	0x01C95A84 SUBS X9, X9, 0x1
	0x01C95A88 ADD X10, X10, 0x10
	0x01C95A8C B.NE 0x1C95A78
	0x01C95A90 MOVZ W2, 0x1
	0x01C95A94 MOV X0, X21
	0x01C95A98 BL 0x1BB4284
	0x01C95A9C B 0x1C95AB0
	0x01C95AA0 LDR W9, [X10]
	0x01C95AA4 ADD W9, W9, 0x1
	0x01C95AA8 ADD X8, X8, W9, 0x4, SXTW
	0x01C95AAC ADD X0, X8, 0x138
	0x01C95AB0 LDP X8, X1, [X0]
	0x01C95AB4 MOV X0, X21
	0x01C95AB8 BLR X8
	0x01C95ABC ADRP X8, 0x22B8000
	0x01C95AC0 LDR X8, [X8 + 0xFD8]
	0x01C95AC4 MOV X21, X0
	0x01C95AC8 LDR X0, [X8]
	0x01C95ACC BL 0x1B6EA0C
	0x01C95AD0 ADRP X8, 0x22B9000
	0x01C95AD4 LDR X8, [X8]
	0x01C95AD8 MOV X22, X0
	0x01C95ADC LDR X2, [X8]
	0x01C95AE0 MOV X1, X20
	0x01C95AE4 MOV X3, X31
	0x01C95AE8 BL 0x2B796E4
	0x01C95AEC ADRP X8, 0x22B8000
	0x01C95AF0 LDR X8, [X8 + 0xFC8]
	0x01C95AF4 LDR X2, [X8]
	0x01C95AF8 MOV X0, X21
	0x01C95AFC MOV X1, X22
	0x01C95B00 BL 0x209F8EC
	0x01C95B04 TBZ X0, 0x0, 0x1C95B5C
	0x01C95B08 ADRP X8, 0x22B8000
	0x01C95B0C LDR X8, [X8 + 0x628]
	0x01C95B10 LDR X0, [X8]
	0x01C95B14 LDR W8, [X0 + 0xE0]
	0x01C95B18 CBNZ W8, 0x1C95B20
	0x01C95B1C BL 0x1B6E8F8
	0x01C95B20 ADRP X8, 0x22B9000
	0x01C95B24 LDR X8, [X8 + 0x18]
	0x01C95B28 ADRP X9, 0x22B8000
	0x01C95B2C ADRP X10, 0x22B9000
	0x01C95B30 LDR X9, [X9 + 0xDE8]
	0x01C95B34 LDR X10, [X10 + 0x10]
	0x01C95B38 LDR X1, [X8]
	0x01C95B3C LDR X3, [X9]
	0x01C95B40 LDR X4, [X10]
	0x01C95B44 MOVZ W0, 0x800
	0x01C95B48 MOVZ W5, 0x64
	0x01C95B4C MOV X2, X31
	0x01C95B50 MOV X6, X31
	0x01C95B54 BL 0x342B224
	0x01C95B58 B 0x1C95BD0
	0x01C95B5C ADRP X8, 0x22B8000
	0x01C95B60 LDR X8, [X8 + 0x4E8]
	0x01C95B64 LDR X0, [X8]
	0x01C95B68 LDR W8, [X0 + 0xE0]
	0x01C95B6C CBNZ W8, 0x1C95B74
	0x01C95B70 BL 0x1B6E8F8
	0x01C95B74 BL 0x1C896E0
	0x01C95B78 LDR X21, [X19 + 0x20]
	0x01C95B7C MOV X20, X0
	0x01C95B80 BL 0x1C8F444
	0x01C95B84 CBZ X20, 0x1C95D3C
	0x01C95B88 MOV X2, X0
	0x01C95B8C MOV X0, X20
	0x01C95B90 MOV X1, X21
	0x01C95B94 MOV X3, X31
	0x01C95B98 MOV X4, X31
	0x01C95B9C MOV X5, X31
	0x01C95BA0 BL 0x1D0E414
	0x01C95BA4 CBZ X0, 0x1C95D40
	0x01C95BA8 MOV X1, X31
	0x01C95BAC BL 0x3256D00
	0x01C95BB0 STR X0, [X31 + 0x68]
	0x01C95BB4 ADD X0, X31, 0x68
	0x01C95BB8 MOV X1, X31
	0x01C95BBC BL 0x312C868
	0x01C95BC0 TBZ X0, 0x0, 0x1C95C48
	0x01C95BC4 ADD X0, X31, 0x68
	0x01C95BC8 MOV X1, X31
	0x01C95BCC BL 0x312C934
	0x01C95BD0 LDR V0, [X19 + 0x2]
	0x01C95BD4 STR V0, [X31 + 0x8]
	0x01C95BD8 LDP W21, W20, [X19 + 0x30]
	0x01C95BDC MOVN W8, 0x1
	0x01C95BE0 STR W8, [X19], #0x8
	0x01C95BE4 LDR V0, [X31 + 0x8]
	0x01C95BE8 LDR X0, [X24]
	0x01C95BEC ADRP X22, 0x22B8000
	0x01C95BF0 STR V0, [X31]
	0x01C95BF4 LDR W8, [X0 + 0xE0]
	0x01C95BF8 LDR X22, [X22 + 0xFB8]
	0x01C95BFC CBNZ W8, 0x1C95C04
	0x01C95C00 BL 0x1B6E8F8
	0x01C95C04 LDR V0, [X31]
	0x01C95C08 LDR X2, [X22]
	0x01C95C0C ADD X1, X31, 0x90
	0x01C95C10 MOV X0, X19
	0x01C95C14 STR V0, [X31 + 0x9]
	0x01C95C18 STP W21, W20, [X31 + 0xA0]
	0x01C95C1C BL 0x23D1724
	0x01C95C20 LDR X8, [X23 + 0x28]
	0x01C95C24 LDR X9, [X31 + 0xB8]
	0x01C95C28 CMP X8, X9
	0x01C95C2C B.NE 0x1C95D4C
	0x01C95C30 LDP X20, X19, [X31 + 0xF0]
	0x01C95C34 LDP X22, X21, [X31 + 0xE0]
	0x01C95C38 LDP X24, X23, [X31 + 0xD0]
	0x01C95C3C LDR X30, [X31 + 0xC0]
	0x01C95C40 ADD X31, X31, 0x100
	0x01C95C44 RET
	0x01C95C48 MOVZ W8, 0x3
	0x01C95C4C STR W8, [X19]
	0x01C95C50 LDR X8, [X31 + 0x68]
	0x01C95C54 STR X8, [X19 + 0x48]
	0x01C95C58 LDR X0, [X24]
	0x01C95C5C LDR W8, [X0 + 0xE0]
	0x01C95C60 CBNZ W8, 0x1C95C68
	0x01C95C64 BL 0x1B6E8F8
	0x01C95C68 ADRP X8, 0x22B8000
	0x01C95C6C LDR X8, [X8 + 0xFB0]
	0x01C95C70 ADD X0, X19, 0x8
	0x01C95C74 LDR X3, [X8]
	0x01C95C78 ADD X1, X31, 0x68
	0x01C95C7C MOV X2, X19
	0x01C95C80 BL 0x20206F0
	0x01C95C84 B 0x1C95C20
	0x01C95C88 ADRP X8, 0x22B8000
	0x01C95C8C LDR X8, [X8 + 0xFD0]
	0x01C95C90 LDR X0, [X8]
	0x01C95C94 BL 0x1B6EA0C
	0x01C95C98 ADRP X8, 0x22B8000
	0x01C95C9C LDR X8, [X8 + 0xFC0]
	0x01C95CA0 MOV X20, X0
	0x01C95CA4 LDR X2, [X8]
	0x01C95CA8 MOV X1, X31
	0x01C95CAC MOV X3, X31
	0x01C95CB0 BL 0x2B72024
	0x01C95CB4 MOV X0, X20
	0x01C95CB8 BL 0x1C9257C
	0x01C95CBC CBZ X0, 0x1C95D48
	0x01C95CC0 ADRP X8, 0x22B8000
	0x01C95CC4 LDR X8, [X8 + 0xE58]
	0x01C95CC8 LDR X1, [X8]
	0x01C95CCC BL 0x2503108
	0x01C95CD0 ADRP X8, 0x22B8000
	0x01C95CD4 LDR X8, [X8 + 0xE50]
	0x01C95CD8 STR X0, [X31 + 0x78]
	0x01C95CDC LDR X1, [X8]
	0x01C95CE0 ADD X0, X31, 0x78
	0x01C95CE4 BL 0x24D9278
	0x01C95CE8 TBNZ X0, 0x0, 0x1C956B0
	0x01C95CEC STR W31, [X19]
	0x01C95CF0 LDR X8, [X31 + 0x78]
	0x01C95CF4 STR X8, [X19 + 0x38]
	0x01C95CF8 LDR X0, [X24]
	0x01C95CFC LDR W8, [X0 + 0xE0]
	0x01C95D00 CBNZ W8, 0x1C95D08
	0x01C95D04 BL 0x1B6E8F8
	0x01C95D08 ADRP X8, 0x22B8000
	0x01C95D0C LDR X8, [X8 + 0xFA0]
	0x01C95D10 ADD X0, X19, 0x8
	0x01C95D14 LDR X3, [X8]
	0x01C95D18 ADD X1, X31, 0x78
	0x01C95D1C MOV X2, X19
	0x01C95D20 BL 0x20204DC
	0x01C95D24 B 0x1C95C20
	0x01C95D28 BL 0x1B6EA1C
	0x01C95D2C BL 0x1B6EA1C
	0x01C95D30 BL 0x1B6EA1C
	0x01C95D34 BL 0x1B6EA1C
	0x01C95D38 BL 0x1B6EA1C
	0x01C95D3C BL 0x1B6EA1C
	0x01C95D40 BL 0x1B6EA1C
	0x01C95D44 BL 0x1B6EA1C
	0x01C95D48 BL 0x1B6EA1C
	0x01C95D4C BL 0x3D19880
	0x01C95D50 B 0x1C95F98
	0x01C95D54 B 0x1C95F98
	0x01C95D58 B 0x1C95F98
	0x01C95D5C B 0x1C95F98
	0x01C95D60 B 0x1C95F98
	0x01C95D64 B 0x1C95F98
	0x01C95D68 B 0x1C95DE0
	0x01C95D6C B 0x1C95F98
	0x01C95D70 B 0x1C95FA4
	0x01C95D74 B 0x1C95DE0
	0x01C95D78 B 0x1C95F98
	0x01C95D7C B 0x1C95F98
	0x01C95D80 B 0x1C95FA4
	0x01C95D84 B 0x1C95FA4
	0x01C95D88 B 0x1C95F98
	0x01C95D8C B 0x1C95F98
	0x01C95D90 B 0x1C95FA4
	0x01C95D94 B 0x1C95FA4
	0x01C95D98 B 0x1C95FA4
	0x01C95D9C B 0x1C95FA4
	0x01C95DA0 B 0x1C95FA4
	0x01C95DA4 B 0x1C95DE0
	0x01C95DA8 B 0x1C95DE0
	0x01C95DAC B 0x1C95DE0
	0x01C95DB0 B 0x1C95DE0
	0x01C95DB4 B 0x1C95F98
	0x01C95DB8 B 0x1C95F98
	0x01C95DBC B 0x1C95FA4
	0x01C95DC0 B 0x1C95DE0
	0x01C95DC4 B 0x1C95F98
	0x01C95DC8 B 0x1C95F98
	0x01C95DCC B 0x1C95FA4
	0x01C95DD0 B 0x1C95FA4
	0x01C95DD4 B 0x1C95FA4
	0x01C95DD8 B 0x1C95FA4
	0x01C95DDC B 0x1C95FA4
	0x01C95DE0 MOV X20, X0
	0x01C95DE4 CMP W1, 0x1
	0x01C95DE8 B.NE 0x1C96170
	0x01C95DEC MOV X0, X20
	0x01C95DF0 BL 0x3D19840
	0x01C95DF4 MOV X20, X0
	0x01C95DF8 ADRP X0, 0x22B8000
	0x01C95DFC LDR X0, [X0 + 0x670]
	0x01C95E00 BL 0x1B6E804
	0x01C95E04 LDR X8, [X20]
	0x01C95E08 LDR X1, [X8]
	0x01C95E0C BL 0x1B6ED6C
	0x01C95E10 TBZ X0, 0x0, 0x1C95F58
	0x01C95E14 LDR X8, [X20]
	0x01C95E18 LDRSW X9, [X31 + 0x60]
	0x01C95E1C ADD X20, X31, 0x48
	0x01C95E20 STR X8, [X20, X9, LSL #3]
	0x01C95E24 ADD W8, W9, 0x1
	0x01C95E28 STR W8, [X31 + 0x60]
	0x01C95E2C BL 0x3D19850
	0x01C95E30 LDR W8, [X31 + 0x60]
	0x01C95E34 SUB W8, W8, 0x1
	0x01C95E38 LDR X20, [X20, W8, SXTW]
	0x01C95E3C ADRP X0, 0x22B8000
	0x01C95E40 LDR X0, [X0 + 0xEC8]
	0x01C95E44 BL 0x1B6E804
	0x01C95E48 CBZ X20, 0x1C95E74
	0x01C95E4C LDR X8, [X20]
	0x01C95E50 LDRB W9, [X0 + 0x130]
	0x01C95E54 LDRB W10, [X8 + 0x130]
	0x01C95E58 CMP W10, W9
	0x01C95E5C B.CC 0x1C95E74
	0x01C95E60 LDR X8, [X8 + 0xC8]
	0x01C95E64 ADD X8, X8, X9, 0x3, LSL
	0x01C95E68 LDUR X8, [X8 - 0x8]
	0x01C95E6C CMP X8, X0
	0x01C95E70 B.EQ 0x1C95EF0
	0x01C95E74 ADRP X0, 0x22B8000
	0x01C95E78 LDR X0, [X0 + 0x628]
	0x01C95E7C BL 0x1B6E804
	0x01C95E80 LDR W8, [X0 + 0xE0]
	0x01C95E84 CBNZ W8, 0x1C95E8C
	0x01C95E88 BL 0x1B6E8F8
	0x01C95E8C ADRP X0, 0x22B9000
	0x01C95E90 LDR X0, [X0 + 0x38]
	0x01C95E94 BL 0x1B6E804
	0x01C95E98 MOV X21, X0
	0x01C95E9C ADRP X0, 0x22B8000
	0x01C95EA0 LDR X0, [X0 + 0xDE8]
	0x01C95EA4 BL 0x1B6E804
	0x01C95EA8 MOV X22, X0
	0x01C95EAC ADRP X0, 0x22B9000
	0x01C95EB0 LDR X0, [X0 + 0x10]
	0x01C95EB4 BL 0x1B6E804
	0x01C95EB8 MOV X5, X0
	0x01C95EBC MOVZ W0, 0x800
	0x01C95EC0 MOVZ W6, 0x59
	0x01C95EC4 MOV X1, X21
	0x01C95EC8 MOV X2, X20
	0x01C95ECC MOV X3, X31
	0x01C95ED0 MOV X4, X22
	0x01C95ED4 MOV X7, X31
	0x01C95ED8 BL 0x342B884
	0x01C95EDC LDR W8, [X31 + 0x60]
	0x01C95EE0 MOV W20, W31
	0x01C95EE4 STP X31, X31, [X31 + 0x80]
	0x01C95EE8 MOVZ W21, 0xB
	0x01C95EEC B 0x1C96240
	0x01C95EF0 ADRP X0, 0x22B8000
	0x01C95EF4 LDR X0, [X0 + 0x628]
	0x01C95EF8 BL 0x1B6E804
	0x01C95EFC LDR W8, [X0 + 0xE0]
	0x01C95F00 CBNZ W8, 0x1C95F08
	0x01C95F04 BL 0x1B6E8F8
	0x01C95F08 ADRP X0, 0x22B9000
	0x01C95F0C LDR X0, [X0 + 0x40]
	0x01C95F10 BL 0x1B6E804
	0x01C95F14 MOV X20, X0
	0x01C95F18 ADRP X0, 0x22B8000
	0x01C95F1C LDR X0, [X0 + 0xDE8]
	0x01C95F20 BL 0x1B6E804
	0x01C95F24 MOV X21, X0
	0x01C95F28 ADRP X0, 0x22B9000
	0x01C95F2C LDR X0, [X0 + 0x10]
	0x01C95F30 BL 0x1B6E804
	0x01C95F34 MOV X4, X0
	0x01C95F38 MOVZ W0, 0x800
	0x01C95F3C MOVZ W5, 0x55
	0x01C95F40 MOV X1, X20
	0x01C95F44 MOV X2, X31
	0x01C95F48 MOV X3, X21
	0x01C95F4C MOV X6, X31
	0x01C95F50 BL 0x342B224
	0x01C95F54 B 0x1C96114
	0x01C95F58 MOVZ W0, 0x8
	0x01C95F5C BL 0x3D19860
	0x01C95F60 LDR X8, [X20]
	0x01C95F64 STR X8, [X0]
	0x01C95F68 ADRP X1, 0x2087000
	0x01C95F6C ADD X1, X1, 0xBD8
	0x01C95F70 MOV X2, X31
	0x01C95F74 BL 0x3D19870
	0x01C95F78 B 0x1C96348
	0x01C95F7C B 0x1C95F98
	0x01C95F80 B 0x1C95F98
	0x01C95F84 MOV X21, X1
	0x01C95F88 MOV X20, X0
	0x01C95F8C BL 0x3D19850
	0x01C95F90 B 0x1C96160
	0x01C95F94 B 0x1C95F98
	0x01C95F98 MOV X20, X0
	0x01C95F9C B 0x1C96170
	0x01C95FA0 B 0x1C95FA4
	0x01C95FA4 MOV X20, X0
	0x01C95FA8 CMP W1, 0x1
	0x01C95FAC B.NE 0x1C96170
	0x01C95FB0 MOV X0, X20
	0x01C95FB4 BL 0x3D19840
	0x01C95FB8 MOV X20, X0
	0x01C95FBC ADRP X0, 0x22B8000
	0x01C95FC0 LDR X0, [X0 + 0x670]
	0x01C95FC4 BL 0x1B6E804
	0x01C95FC8 LDR X8, [X20]
	0x01C95FCC LDR X1, [X8]
	0x01C95FD0 BL 0x1B6ED6C
	0x01C95FD4 TBZ X0, 0x0, 0x1C96128
	0x01C95FD8 LDR X8, [X20]
	0x01C95FDC LDRSW X9, [X31 + 0x60]
	0x01C95FE0 ADD X20, X31, 0x48
	0x01C95FE4 STR X8, [X20, X9, LSL #3]
	0x01C95FE8 ADD W8, W9, 0x1
	0x01C95FEC STR W8, [X31 + 0x60]
	0x01C95FF0 BL 0x3D19850
	0x01C95FF4 LDR W8, [X31 + 0x60]
	0x01C95FF8 SUB W8, W8, 0x1
	0x01C95FFC LDR X20, [X20, W8, SXTW]
	0x01C96000 ADRP X0, 0x22B7000
	0x01C96004 LDR X0, [X0 + 0xEC8]
	0x01C96008 BL 0x1B6E804
	0x01C9600C CBZ X20, 0x1C96038
	0x01C96010 LDR X8, [X20]
	0x01C96014 LDRB W9, [X0 + 0x130]
	0x01C96018 LDRB W10, [X8 + 0x130]
	0x01C9601C CMP W10, W9
	0x01C96020 B.CC 0x1C96038
	0x01C96024 LDR X8, [X8 + 0xC8]
	0x01C96028 ADD X8, X8, X9, 0x3, LSL
	0x01C9602C LDUR X8, [X8 - 0x8]
	0x01C96030 CMP X8, X0
	0x01C96034 B.EQ 0x1C960B0
	0x01C96038 ADRP X0, 0x22B7000
	0x01C9603C LDR X0, [X0 + 0x628]
	0x01C96040 BL 0x1B6E804
	0x01C96044 LDR W8, [X0 + 0xE0]
	0x01C96048 CBNZ W8, 0x1C96050
	0x01C9604C BL 0x1B6E8F8
	0x01C96050 ADRP X0, 0x22B8000
	0x01C96054 LDR X0, [X0 + 0x48]
	0x01C96058 BL 0x1B6E804
	0x01C9605C MOV X21, X0
	0x01C96060 ADRP X0, 0x22B7000
	0x01C96064 LDR X0, [X0 + 0xDE8]
	0x01C96068 BL 0x1B6E804
	0x01C9606C MOV X22, X0
	0x01C96070 ADRP X0, 0x22B8000
	0x01C96074 LDR X0, [X0 + 0x10]
	0x01C96078 BL 0x1B6E804
	0x01C9607C MOV X5, X0
	0x01C96080 MOVZ W0, 0x800
	0x01C96084 MOVZ W6, 0x73
	0x01C96088 MOV X1, X21
	0x01C9608C MOV X2, X20
	0x01C96090 MOV X3, X31
	0x01C96094 MOV X4, X22
	0x01C96098 MOV X7, X31
	0x01C9609C BL 0x342B884
	0x01C960A0 LDR W8, [X31 + 0x60]
	0x01C960A4 SUB W8, W8, 0x1
	0x01C960A8 STR W8, [X31 + 0x60]
	0x01C960AC B 0x1C95BD0
	0x01C960B0 ADRP X0, 0x22B7000
	0x01C960B4 LDR X0, [X0 + 0x628]
	0x01C960B8 BL 0x1B6E804
	0x01C960BC LDR W8, [X0 + 0xE0]
	0x01C960C0 CBNZ W8, 0x1C960C8
	0x01C960C4 BL 0x1B6E8F8
	0x01C960C8 ADRP X0, 0x22B8000
	0x01C960CC LDR X0, [X0 + 0x40]
	0x01C960D0 BL 0x1B6E804
	0x01C960D4 MOV X20, X0
	0x01C960D8 ADRP X0, 0x22B7000
	0x01C960DC LDR X0, [X0 + 0xDE8]
	0x01C960E0 BL 0x1B6E804
	0x01C960E4 MOV X21, X0
	0x01C960E8 ADRP X0, 0x22B8000
	0x01C960EC LDR X0, [X0 + 0x10]
	0x01C960F0 BL 0x1B6E804
	0x01C960F4 MOV X4, X0
	0x01C960F8 MOVZ W0, 0x800
	0x01C960FC MOVZ W5, 0x6F
	0x01C96100 MOV X1, X20
	0x01C96104 MOV X2, X31
	0x01C96108 MOV X3, X21
	0x01C9610C MOV X6, X31
	0x01C96110 BL 0x342B224
	0x01C96114 LDR W8, [X31 + 0x60]
	0x01C96118 MOV W20, W31
	0x01C9611C STP X31, X31, [X31 + 0x80]
	0x01C96120 MOVZ W21, 0x3
	0x01C96124 B 0x1C96240
	0x01C96128 MOVZ W0, 0x8
	0x01C9612C BL 0x3D19860
	0x01C96130 LDR X8, [X20]
	0x01C96134 STR X8, [X0]
	0x01C96138 ADRP X1, 0x2086000
	0x01C9613C ADD X1, X1, 0xBD8
	0x01C96140 MOV X2, X31
	0x01C96144 BL 0x3D19870
	0x01C96148 B 0x1C96348
	0x01C9614C B 0x1C95F98
	0x01C96150 B 0x1C95F98
	0x01C96154 MOV X21, X1
	0x01C96158 MOV X20, X0
	0x01C9615C BL 0x3D19850
	0x01C96160 MOV W1, W21
	0x01C96164 B 0x1C96170
	0x01C96168 B 0x1C95F98
	0x01C9616C MOV X20, X0
	0x01C96170 CMP W1, 0x1
	0x01C96174 B.NE 0x1C9628C
	0x01C96178 MOV X0, X20
	0x01C9617C BL 0x3D19840
	0x01C96180 MOV X20, X0
	0x01C96184 ADRP X0, 0x22B7000
	0x01C96188 LDR X0, [X0 + 0x670]
	0x01C9618C BL 0x1B6E804
	0x01C96190 LDR X8, [X20]
	0x01C96194 LDR X1, [X8]
	0x01C96198 BL 0x1B6ED6C
	0x01C9619C TBZ X0, 0x0, 0x1C9624C
	0x01C961A0 LDR X8, [X20]
	0x01C961A4 LDRSW X9, [X31 + 0x60]
	0x01C961A8 ADD X20, X31, 0x48
	0x01C961AC STR X8, [X20, X9, LSL #3]
	0x01C961B0 ADD W8, W9, 0x1
	0x01C961B4 STR W8, [X31 + 0x60]
	0x01C961B8 BL 0x3D19850
	0x01C961BC LDR W8, [X31 + 0x60]
	0x01C961C0 SUB W8, W8, 0x1
	0x01C961C4 LDR X20, [X20, W8, SXTW]
	0x01C961C8 ADRP X0, 0x22B7000
	0x01C961CC LDR X0, [X0 + 0x628]
	0x01C961D0 BL 0x1B6E804
	0x01C961D4 LDR W8, [X0 + 0xE0]
	0x01C961D8 CBNZ W8, 0x1C961E0
	0x01C961DC BL 0x1B6E8F8
	0x01C961E0 ADRP X0, 0x22B8000
	0x01C961E4 LDR X0, [X0 + 0x50]
	0x01C961E8 BL 0x1B6E804
	0x01C961EC MOV X21, X0
	0x01C961F0 ADRP X0, 0x22B7000
	0x01C961F4 LDR X0, [X0 + 0xDE8]
	0x01C961F8 BL 0x1B6E804
	0x01C961FC MOV X22, X0
	0x01C96200 ADRP X0, 0x22B8000
	0x01C96204 LDR X0, [X0 + 0x10]
	0x01C96208 BL 0x1B6E804
	0x01C9620C MOV X5, X0
	0x01C96210 MOVZ W0, 0x800
	0x01C96214 MOVZ W6, 0x7B
	0x01C96218 MOV X1, X21
	0x01C9621C MOV X2, X20
	0x01C96220 MOV X3, X31
	0x01C96224 MOV X4, X22
	0x01C96228 MOV X7, X31
	0x01C9622C BL 0x342B884
	0x01C96230 LDR W8, [X31 + 0x60]
	0x01C96234 MOV W20, W31
	0x01C96238 STP X31, X31, [X31 + 0x80]
	0x01C9623C MOVZ W21, 0x2
	0x01C96240 SUB W8, W8, 0x1
	0x01C96244 STR W8, [X31 + 0x60]
	0x01C96248 B 0x1C95BDC
	0x01C9624C MOVZ W0, 0x8
	0x01C96250 BL 0x3D19860
	0x01C96254 LDR X8, [X20]
	0x01C96258 STR X8, [X0]
	0x01C9625C ADRP X1, 0x2086000
	0x01C96260 ADD X1, X1, 0xBD8
	0x01C96264 MOV X2, X31
	0x01C96268 BL 0x3D19870
	0x01C9626C B 0x1C96348
	0x01C96270 B 0x1C96288
	0x01C96274 MOV X21, X1
	0x01C96278 MOV X20, X0
	0x01C9627C BL 0x3D19850
	0x01C96280 MOV W1, W21
	0x01C96284 B 0x1C9628C
	0x01C96288 MOV X20, X0
	0x01C9628C MOVZ W8, 0x1
	0x01C96290 CMP W1, W8
	0x01C96294 B.NE 0x1C96350
	0x01C96298 MOV X0, X20
	0x01C9629C BL 0x3D19840
	0x01C962A0 MOV X20, X0
	0x01C962A4 ADRP X0, 0x22B7000
	0x01C962A8 LDR X0, [X0 + 0x670]
	0x01C962AC BL 0x1B6E804
	0x01C962B0 LDR X8, [X20]
	0x01C962B4 LDR X1, [X8]
	0x01C962B8 BL 0x1B6ED6C
	0x01C962BC TBZ X0, 0x0, 0x1C96328
	0x01C962C0 LDR X8, [X20]
	0x01C962C4 LDRSW X9, [X31 + 0x60]
	0x01C962C8 ADD X20, X31, 0x48
	0x01C962CC STR X8, [X20, X9, LSL #3]
	0x01C962D0 ADD W8, W9, 0x1
	0x01C962D4 STR W8, [X31 + 0x60]
	0x01C962D8 BL 0x3D19850
	0x01C962DC LDR W8, [X31 + 0x60]
	0x01C962E0 ADRP X0, 0x22B7000
	0x01C962E4 SUB W8, W8, 0x1
	0x01C962E8 LDR X20, [X20, W8, SXTW]
	0x01C962EC MOVN W8, 0x1
	0x01C962F0 STR W8, [X19], #0x8
	0x01C962F4 LDR X0, [X0 + 0x8F0]
	0x01C962F8 BL 0x1B6E804
	0x01C962FC LDR W8, [X0 + 0xE0]
	0x01C96300 CBNZ W8, 0x1C96308
	0x01C96304 BL 0x1B6E8F8
	0x01C96308 ADRP X0, 0x22B8000
	0x01C9630C LDR X0, [X0 + 0x58]
	0x01C96310 BL 0x1B6E804
	0x01C96314 MOV X2, X0
	0x01C96318 MOV X0, X19
	0x01C9631C MOV X1, X20
	0x01C96320 BL 0x23D19C0
	0x01C96324 B 0x1C95C20
	0x01C96328 MOVZ W0, 0x8
	0x01C9632C BL 0x3D19860
	0x01C96330 LDR X8, [X20]
	0x01C96334 STR X8, [X0]
	0x01C96338 ADRP X1, 0x2086000
	0x01C9633C ADD X1, X1, 0xBD8
	0x01C96340 MOV X2, X31
	0x01C96344 BL 0x3D19870
	0x01C96348 MOV X20, X0
	0x01C9634C BL 0x3D19850
	0x01C96350 MOV X0, X20
	0x01C96354 BL 0x1C8418C
	0x01C96358 BL 0x18F46A8
	0x01C9635C STR X30, [X31 - 0x30]!
	0x01C96360 STP X22, X21, [X31 + 0x10]
	0x01C96364 STP X20, X19, [X31 + 0x20]
	0x01C96368 ADRP X22, 0x258D000
	0x01C9636C ADRP X21, 0x22B7000
	0x01C96370 LDRB W8, [X22 + 0x3D6]
	0x01C96374 LDR X21, [X21 + 0x8F0]
	0x01C96378 MOV X19, X1
	0x01C9637C MOV X20, X0
	0x01C96380 TBNZ X8, 0x0, 0x1C963A4
	0x01C96384 ADRP X0, 0x22B8000
	0x01C96388 LDR X0, [X0 + 0x60]
	0x01C9638C BL 0x1B6E7F0
	0x01C96390 ADRP X0, 0x22B7000
	0x01C96394 LDR X0, [X0 + 0x8F0]
	0x01C96398 BL 0x1B6E7F0
	0x01C9639C MOVZ W8, 0x1
	0x01C963A0 STRB W8, [X22 + 0x3D6]
	0x01C963A4 LDR X0, [X21]
	0x01C963A8 ADRP X21, 0x22B8000
	0x01C963AC LDR W8, [X0 + 0xE0]
	0x01C963B0 LDR X21, [X21 + 0x60]
	0x01C963B4 CBNZ W8, 0x1C963BC
	0x01C963B8 BL 0x1B6E8F8
	0x01C963BC LDR X2, [X21]
	0x01C963C0 ADD X0, X20, 0x8
	0x01C963C4 MOV X1, X19
	0x01C963C8 LDP X20, X19, [X31 + 0x20]
	0x01C963CC LDP X22, X21, [X31 + 0x10]
	0x01C963D0 LDR X30, [X31], #0x30
	0x01C963D4 B 0x23D169C
	0x01C963D8 STP X30, X25, [X31 - 0x40]!
	0x01C963DC STP X24, X23, [X31 + 0x10]
	0x01C963E0 STP X22, X21, [X31 + 0x20]
	0x01C963E4 STP X20, X19, [X31 + 0x30]
	0x01C963E8 ADRP X21, 0x258D000
	0x01C963EC LDRB W8, [X21 + 0x3D7]
	0x01C963F0 MOV X19, X1
	0x01C963F4 MOV X20, X0
	0x01C963F8 TBNZ X8, 0x0, 0x1C96488
	0x01C963FC ADRP X0, 0x22B7000
	0x01C96400 LDR X0, [X0 + 0x800]
	0x01C96404 BL 0x1B6E7F0
	0x01C96408 ADRP X0, 0x22B7000
	0x01C9640C LDR X0, [X0 + 0xFE0]
	0x01C96410 BL 0x1B6E7F0
	0x01C96414 ADRP X0, 0x22B8000
	0x01C96418 LDR X0, [X0 + 0x68]
	0x01C9641C BL 0x1B6E7F0
	0x01C96420 ADRP X0, 0x22B8000
	0x01C96424 LDR X0, [X0 + 0x70]
	0x01C96428 BL 0x1B6E7F0
	0x01C9642C ADRP X0, 0x22B8000
	0x01C96430 LDR X0, [X0 + 0x78]
	0x01C96434 BL 0x1B6E7F0
	0x01C96438 ADRP X0, 0x22B7000
	0x01C9643C LDR X0, [X0 + 0x6C0]
	0x01C96440 BL 0x1B6E7F0
	0x01C96444 ADRP X0, 0x22B7000
	0x01C96448 LDR X0, [X0 + 0xD00]
	0x01C9644C BL 0x1B6E7F0
	0x01C96450 ADRP X0, 0x22B8000
	0x01C96454 LDR X0, [X0 + 0x80]
	0x01C96458 BL 0x1B6E7F0

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], X30
	003 Move [X31+136], X27
	004 Move [X31+144], X26
	005 Move [X31+152], X25
	006 Move [X31+160], X24
	007 Move [X31+168], X23
	008 Move [X31+176], X22
	009 Move [X31+184], X21
	010 Move [X31+192], X20
	011 Move [X31+200], X19
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X24+40]
	014 Move X20, 0x258F000
	015 Move X19, X0
	016 Move [X31+120], X8
	017 Move W8, [X20+979]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {117}
	022 Move X0, 0x22B9000
	023 Move X0, [X0+1256]
	024 Call 0x1B6F7F0
	025 Move X0, 0x22B9000
	026 Move X0, [X0+3808]
	027 Call 0x1B6F7F0
	028 Move X0, 0x22B9000
	029 Move X0, [X0+3816]
	030 Call 0x1B6F7F0
	031 Move X0, 0x22B9000
	032 Move X0, [X0+3824]
	033 Call 0x1B6F7F0
	034 Move X0, 0x22B9000
	035 Move X0, [X0+3648]
	036 Call 0x1B6F7F0
	037 Move X0, 0x22B9000
	038 Move X0, [X0+3360]
	039 Call 0x1B6F7F0
	040 Move X0, 0x22B9000
	041 Move X0, [X0+3832]
	042 Call 0x1B6F7F0
	043 Move X0, 0x22B9000
	044 Move X0, [X0+3840]
	045 Call 0x1B6F7F0
	046 Move X0, 0x22B9000
	047 Move X0, [X0+3848]
	048 Call 0x1B6F7F0
	049 Move X0, 0x22B9000
	050 Move X0, [X0+3856]
	051 Call 0x1B6F7F0
	052 Move X0, 0x22B9000
	053 Move X0, [X0+3408]
	054 Call 0x1B6F7F0
	055 Move X0, 0x22B9000
	056 Move X0, [X0+3424]
	057 Call 0x1B6F7F0
	058 Move X0, 0x22B9000
	059 Move X0, [X0+3864]
	060 Call 0x1B6F7F0
	061 Move X0, 0x22B9000
	062 Move X0, [X0+1576]
	063 Call 0x1B6F7F0
	064 Move X0, 0x22B9000
	065 Move X0, [X0+3872]
	066 Call 0x1B6F7F0
	067 Move X0, 0x22B9000
	068 Move X0, [X0+3880]
	069 Call 0x1B6F7F0
	070 Move X0, 0x22B9000
	071 Move X0, [X0+3728]
	072 Call 0x1B6F7F0
	073 Move X0, 0x22B9000
	074 Move X0, [X0+3736]
	075 Call 0x1B6F7F0
	076 Move X0, 0x22B9000
	077 Move X0, [X0+3744]
	078 Call 0x1B6F7F0
	079 Move X0, 0x22B9000
	080 Move X0, [X0+3680]
	081 Call 0x1B6F7F0
	082 Move X0, 0x22B9000
	083 Move X0, [X0+3888]
	084 Call 0x1B6F7F0
	085 Move X0, 0x22B9000
	086 Move X0, [X0+3896]
	087 Call 0x1B6F7F0
	088 Move X0, 0x22B9000
	089 Move X0, [X0+3904]
	090 Call 0x1B6F7F0
	091 Move X0, 0x22B9000
	092 Move X0, [X0+3912]
	093 Call 0x1B6F7F0
	094 Move X0, 0x22B9000
	095 Move X0, [X0+3920]
	096 Call 0x1B6F7F0
	097 Move X0, 0x22B9000
	098 Move X0, [X0+3928]
	099 Call 0x1B6F7F0
	100 Move X0, 0x22B9000
	101 Move X0, [X0+3936]
	102 Call 0x1B6F7F0
	103 Move X0, 0x22B9000
	104 Move X0, [X0+3552]
	105 Call 0x1B6F7F0
	106 Move X0, 0x22B9000
	107 Move X0, [X0+3944]
	108 Call 0x1B6F7F0
	109 Move X0, 0x22B9000
	110 Move X0, [X0+3560]
	111 Call 0x1B6F7F0
	112 Move X0, 0x22B9000
	113 Move X0, [X0+3952]
	114 Call 0x1B6F7F0
	115 Move W8, 1
	116 Move [X20+979], W8
	117 Move [X31+112], W31
	118 Move [X31+104], X31
	119 Move [X31+56], W31
	120 Move [X31+48], W31
	121 Move [X31+32], X31
	122 Move [X31+40], X31
	123 Move W26, [X19]
	124 Move X25, 0x22B9000
	125 Move X23, 0x22B9000
	126 Move X27, 0x22B9000
	127 Move X25, [X25+3360]
	128 Move X23, [X23+3920]
	129 Move X27, [X27+3680]
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move X8, -18771968
	132 Add X8, X8, 3630
	133 NotImplemented "Instruction ADR not yet implemented."
	134 NotImplemented "Instruction LDRH not yet implemented."
	135 Add X9, X9, X10
	136 CallNoReturn X9
	137 Move W8, [X19+40]
	138 Move TEMP, 0
	139 Not TEMP
	140 Move W26, TEMP
	141 Move [X31+56], W8
	142 Move [X19+40], W31
	143 Move [X19], W26
	144 Move W8, [X19+40]
	145 Move TEMP, 0
	146 Not TEMP
	147 Move W26, TEMP
	148 Move [X31+56], W8
	149 Move [X19+40], W31
	150 Move [X19], W26
	151 Move W8, [X19+40]
	152 Move TEMP, 0
	153 Not TEMP
	154 Move W26, TEMP
	155 Move [X31+56], W8
	156 Move [X19+40], W31
	157 Move [X19], W26
	158 Move X8, 0x22B9000
	159 Move X8, [X8+3912]
	160 Move X0, [X8]
	161 Call 0x1B6FA0C
	162 Move X20, X0
	163 Move X1, X31
	164 Call Object..ctor, X0
	165 Move [X19+32], X20
	166 Move X8, 0x22B9000
	167 Move X8, [X8+1576]
	168 Move X0, [X8]
	169 Move W8, [X0+224]
	170 Compare W8, 0
	171 JumpIfNotEqual {173}
	172 Call 0x1B6F8F8
	173 Move X8, 0x22B9000
	174 Move X8, [X8+3952]
	175 Move X9, 0x22B9000
	176 Move X10, 0x22B9000
	177 Move X9, [X9+3560]
	178 Move X10, [X10+3552]
	179 Move X1, [X8]
	180 Move X3, [X9]
	181 Move X4, [X10]
	182 Move W0, 2048
	183 Move W5, 172
	184 Move X2, X31
	185 Move X6, X31
	186 Call Log.Debug, X0, X1, X2, X3, X4, X5
	187 Move X8, [X19+32]
	188 Compare X8, 0
	189 JumpIfEqual {218}
	190 Move [X8+16], X31
	191 Move [X8+24], X31
	192 Move [X8+32], X31
	193 Move X8, [X19+32]
	194 Compare X8, 0
	195 JumpIfEqual {219}
	196 Move [X8+40], W31
	197 Move X0, X31
	198 Call Entitlements.IsUserEntitledToApplication
	199 Move X8, 0x22B9000
	200 Move X22, [X19+32]
	201 Move X8, [X8+3848]
	202 Move X20, X0
	203 Move X0, [X8]
	204 Call 0x1B6FA0C
	205 Move X8, 0x22B9000
	206 Move X8, [X8+3888]
	207 Move X21, X0
	208 Move X2, [X8]
	209 Move X1, X22
	210 Move X3, X31
	211 Call Callback..ctor, X0, X1, X2
	212 Compare X20, 0
	213 JumpIfEqual {220}
	214 Move X0, X20
	215 Move X1, X21
	216 Move X2, X31
	217 Call Request.OnComplete, X0, X1
	218 Call 0x1B6FA1C
	219 Call 0x1B6FA1C
	220 Call 0x1B6FA1C
	221 Move X0, [X27]
	222 Move W8, [X0+224]
	223 Compare W8, 0
	224 JumpIfNotEqual {226}
	225 Call 0x1B6F8F8
	226 Move X0, X31
	227 Call Task.Yield
	228 Move [X31+48], W0
	229 Add X0, X31, 48
	230 Move X1, X31
	231 Call YieldAwaitable.GetAwaiter, X0
	232 Move X8, X0
	233 Move X0, [X23]
	234 Move [X31+56], W8
	235 Move W8, [X0+224]
	236 Compare W8, 0
	237 JumpIfNotEqual {239}
	238 Call 0x1B6F8F8
	239 Add X0, X31, 56
	240 Move X1, X31
	241 Call YieldAwaiter.get_IsCompleted, X0
	242 Move TEMP, X0
	243 And TEMP, TEMP, 1
	244 Compare TEMP, 1
	245 JumpIfNotEqual {272}
	246 Move X0, [X23]
	247 Move W8, [X0+224]
	248 Compare W8, 0
	249 JumpIfNotEqual {251}
	250 Call 0x1B6F8F8
	251 Add X0, X31, 56
	252 Move X1, X31
	253 Call YieldAwaiter.GetResult, X0
	254 Move X8, [X19+32]
	255 Compare X8, 0
	256 JumpIfEqual {345}
	257 Move W9, [X8+40]
	258 Compare W9, 0
	259 JumpIfEqual {221}
	260 Move X21, 0x258F000
	261 Move W10, [X8+24]
	262 Move W9, [X21+1101]
	263 Compare W10, 0
	264 JumpIfEqual {287}
	265 Compare W9, 0
	266 JumpIfEqual {295}
	267 Move X9, 0x22B9000
	268 Move X9, [X9+3960]
	269 Move X9, [X9]
	270 Move X9, [X9+184]
	271 Move [X9+72], W31
	272 Move [X19], W31
	273 Move W8, [X31+56]
	274 Move [X19+40], W8
	275 Move X0, [X25]
	276 Move W8, [X0+224]
	277 Compare W8, 0
	278 JumpIfNotEqual {280}
	279 Call 0x1B6F8F8
	280 Move X8, 0x22B9000
	281 Move X8, [X8+3824]
	282 Add X0, X19, 8
	283 Move X3, [X8]
	284 Add X1, X31, 56
	285 Move X2, X19
	286 Call AsyncTaskMethodBuilder`1<AuthResult>.AwaitUnsafeOnCompleted, X0, X1, X2
	287 Compare W9, 0
	288 JumpIfEqual {308}
	289 Move X9, 0x22B9000
	290 Move X9, [X9+3960]
	291 Move W10, 1
	292 Move X9, [X9]
	293 Move X9, [X9+184]
	294 Move [X9+72], W10
	295 Move X20, 0x22B9000
	296 Move X20, [X20+3960]
	297 Move X0, X20
	298 Call 0x1B6F7F0
	299 Move X9, [X20]
	300 Move W8, 1
	301 Move [X21+1101], W8
	302 Move X8, [X19+32]
	303 Move X9, [X9+184]
	304 Move [X9+72], W31
	305 Compare X8, 0
	306 JumpIfNotEqual {397}
	307 Call 0x1B6FA1C
	308 Move X20, 0x22B9000
	309 Move X20, [X20+3960]
	310 Move X0, X20
	311 Call 0x1B6F7F0
	312 Move X9, [X20]
	313 Move W10, 1
	314 Move [X21+1101], W10
	315 Move X8, [X19+32]
	316 Move X9, [X9+184]
	317 Move [X9+72], W10
	318 Compare X8, 0
	319 JumpIfEqual {347}
	320 Move [X8+56], W31
	321 Move [X8+48], X31
	322 Move X0, X31
	323 Call Users.GetLoggedInUser
	324 Move X8, 0x22B9000
	325 Move X22, [X19+32]
	326 Move X8, [X8+3840]
	327 Move X20, X0
	328 Move X0, [X8]
	329 Call 0x1B6FA0C
	330 Move X8, 0x22B9000
	331 Move X8, [X8+3896]
	332 Move X21, X0
	333 Move X2, [X8]
	334 Move X1, X22
	335 Move X3, X31
	336 Call Callback<Object>..ctor, X0, X1, X2
	337 Compare X20, 0
	338 JumpIfEqual {346}
	339 Move X8, 0x22B9000
	340 Move X8, [X8+3880]
	341 Move X2, [X8]
	342 Move X0, X20
	343 Move X1, X21
	344 Call Request`1<Object>.OnComplete, X0, X1
	345 Call 0x1B6FA1C
	346 Call 0x1B6FA1C
	347 Call 0x1B6FA1C
	348 Move X20, X1
	349 Move X21, X0
	350 NotImplemented "Instruction CMP not yet implemented."
	351 Move X0, X21
	352 Call 0x3D1A840
	353 Move X20, X0
	354 Move X0, 0x22B9000
	355 Move X0, [X0+1648]
	356 Call 0x1B6F804
	357 Move X8, [X20]
	358 Move X1, [X8]
	359 Call 0x1B6FD6C
	360 Move TEMP, X0
	361 And TEMP, TEMP, 1
	362 Compare TEMP, 1
	363 JumpIfNotEqual {385}
	364 Move X20, [X20]
	365 Call 0x3D1A850
	366 Move TEMP, 1
	367 Not TEMP
	368 Move W8, TEMP
	369 Move [X19+32], X31
	370 Move [X19+8], W8
	371 Move X0, 0x22B9000
	372 Move X0, [X0+3360]
	373 Call 0x1B6F804
	374 Move W8, [X0+224]
	375 Compare W8, 0
	376 JumpIfNotEqual {378}
	377 Call 0x1B6F8F8
	378 Move X0, 0x22B9000
	379 Move X0, [X0+3704]
	380 Call 0x1B6F804
	381 Move X2, X0
	382 Move X0, X19
	383 Move X1, X20
	384 Call AsyncTaskMethodBuilder`1<AuthResult>.SetException, X0, X1
	385 Move W0, 8
	386 Call 0x3D1A860
	387 Move X8, [X20]
	388 Move [X0], X8
	389 Move X1, 0x2088000
	390 Add X1, X1, 3032
	391 Move X2, X31
	392 Call 0x3D1A870
	393 Move X21, X0
	394 Call 0x3D1A850
	395 Move X0, X21
	396 Call 0x1C8518C
	397 Move X21, [X8+16]
	398 Move W9, [X8+36]
	399 NotImplemented "Instruction LDUR not yet implemented."
	400 Move W20, [X8+24]
	401 Move X0, [X27]
	402 Move W8, [X0+224]
	403 Compare W8, 0
	404 JumpIfNotEqual {406}
	405 Call 0x1B6F8F8
	406 Move X0, X31
	407 Call Task.Yield
	408 Move [X31+48], W0
	409 Add X0, X31, 48
	410 Move X1, X31
	411 Call YieldAwaitable.GetAwaiter, X0
	412 Move X8, X0
	413 Move X0, [X23]
	414 Move [X31+56], W8
	415 Move W8, [X0+224]
	416 Compare W8, 0
	417 JumpIfNotEqual {419}
	418 Call 0x1B6F8F8
	419 Add X0, X31, 56
	420 Move X1, X31
	421 Call YieldAwaiter.get_IsCompleted, X0
	422 Move TEMP, X0
	423 And TEMP, TEMP, 1
	424 Compare TEMP, 1
	425 JumpIfNotEqual {468}
	426 Move X0, [X23]
	427 Move W8, [X0+224]
	428 Compare W8, 0
	429 JumpIfNotEqual {431}
	430 Call 0x1B6F8F8
	431 Add X0, X31, 56
	432 Move X1, X31
	433 Call YieldAwaiter.GetResult, X0
	434 Move X8, [X19+32]
	435 Compare X8, 0
	436 JumpIfEqual {484}
	437 Move W9, [X8+56]
	438 Compare W9, 0
	439 JumpIfEqual {401}
	440 Move W20, [X8+24]
	441 Compare W20, 0
	442 JumpIfNotEqual {486}
	443 Move [X8+72], W31
	444 Move [X8+64], X31
	445 Move X0, X31
	446 Call Users.GetUserProof
	447 Move X8, 0x22B9000
	448 Move X22, [X19+32]
	449 Move X8, [X8+3832]
	450 Move X20, X0
	451 Move X0, [X8]
	452 Call 0x1B6FA0C
	453 Move X8, 0x22B9000
	454 Move X8, [X8+3904]
	455 Move X21, X0
	456 Move X2, [X8]
	457 Move X1, X22
	458 Move X3, X31
	459 Call Callback<Object>..ctor, X0, X1, X2
	460 Compare X20, 0
	461 JumpIfEqual {485}
	462 Move X8, 0x22B9000
	463 Move X8, [X8+3872]
	464 Move X2, [X8]
	465 Move X0, X20
	466 Move X1, X21
	467 Call Request`1<Object>.OnComplete, X0, X1
	468 Move W8, 1
	469 Move [X19], W8
	470 Move W8, [X31+56]
	471 Move [X19+40], W8
	472 Move X0, [X25]
	473 Move W8, [X0+224]
	474 Compare W8, 0
	475 JumpIfNotEqual {477}
	476 Call 0x1B6F8F8
	477 Move X8, 0x22B9000
	478 Move X8, [X8+3824]
	479 Add X0, X19, 8
	480 Move X3, [X8]
	481 Add X1, X31, 56
	482 Move X2, X19
	483 Call AsyncTaskMethodBuilder`1<AuthResult>.AwaitUnsafeOnCompleted, X0, X1, X2
	484 Call 0x1B6FA1C
	485 Call 0x1B6FA1C
	486 Move W9, [X8+36]
	487 NotImplemented "Instruction LDUR not yet implemented."
	488 Move X21, [X8+16]
	489 Move [X31+112], W9
	490 Move [X31+104], X10
	491 Move TEMP, 1
	492 Not TEMP
	493 Move W8, TEMP
	494 Move [X19+32], X31
	495 Move [X19+8], W8
	496 Move X8, [X31+104]
	497 Move W9, [X31+112]
	498 Move X0, [X25]
	499 Move X22, 0x22B9000
	500 Move [X31+88], X8
	501 Move [X31+96], W9
	502 Move W8, [X0+224]
	503 Move X22, [X22+3648]
	504 Compare W8, 0
	505 JumpIfNotEqual {507}
	506 Call 0x1B6F8F8
	507 Move X2, [X22]
	508 Move X8, [X31+88]
	509 Move W9, [X31+96]
	510 Add X1, X31, 64
	511 Move X0, X19
	512 Move [X31+64], X21
	513 Move [X31+72], W20
	514 Move [X31+76], X8
	515 Move [X31+84], W9
	516 Call AsyncTaskMethodBuilder`1<AuthResult>.SetResult, X0, X1
	517 Move X8, [X24+40]
	518 Move X9, [X31+120]
	519 NotImplemented "Instruction CMP not yet implemented."
	520 Move X20, [X31+192]
	521 Move X19, [X31+200]
	522 Move X22, [X31+176]
	523 Move X21, [X31+184]
	524 Move X24, [X31+160]
	525 Move X23, [X31+168]
	526 Move X26, [X31+144]
	527 Move X25, [X31+152]
	528 Move X30, [X31+128]
	529 Move X27, [X31+136]
	530 Add X31, X31, 208
	531 Return 
	532 Call 0x3D1A880
	533 Move X0, [X27]
	534 Move W8, [X0+224]
	535 Compare W8, 0
	536 JumpIfNotEqual {538}
	537 Call 0x1B6F8F8
	538 Move X0, X31
	539 Call Task.Yield
	540 Move [X31+48], W0
	541 Add X0, X31, 48
	542 Move X1, X31
	543 Call YieldAwaitable.GetAwaiter, X0
	544 Move X8, X0
	545 Move X0, [X23]
	546 Move [X31+56], W8
	547 Move W8, [X0+224]
	548 Compare W8, 0
	549 JumpIfNotEqual {551}
	550 Call 0x1B6F8F8
	551 Add X0, X31, 56
	552 Move X1, X31
	553 Call YieldAwaiter.get_IsCompleted, X0
	554 Move TEMP, X0
	555 And TEMP, TEMP, 1
	556 Compare TEMP, 1
	557 JumpIfNotEqual {610}
	558 Move X0, [X23]
	559 Move W8, [X0+224]
	560 Compare W8, 0
	561 JumpIfNotEqual {563}
	562 Call 0x1B6F8F8
	563 Add X0, X31, 56
	564 Move X1, X31
	565 Call YieldAwaiter.GetResult, X0
	566 Move X8, [X19+32]
	567 Compare X8, 0
	568 JumpIfEqual {815}
	569 Move W9, [X8+72]
	570 Compare W9, 0
	571 JumpIfEqual {533}
	572 Move W20, [X8+24]
	573 Compare W20, 0
	574 JumpIfNotEqual {486}
	575 NotImplemented "Instruction CMP not yet implemented."
	576 Move X8, [X19+48]
	577 Move TEMP, 0
	578 Not TEMP
	579 Move W26, TEMP
	580 Move [X31+40], X8
	581 Move [X19+48], X31
	582 Move [X19], W26
	583 Move X8, 0x22B9000
	584 Move X8, [X8+3728]
	585 Add X0, X31, 40
	586 Move X1, [X8]
	587 Call TaskAwaiter`1<Object>.GetResult, X0
	588 Move X8, [X19+32]
	589 Compare X8, 0
	590 JumpIfEqual {816}
	591 Move [X8+16], X0
	592 Move W20, [X8+24]
	593 Compare W20, 0
	594 JumpIfNotEqual {486}
	595 NotImplemented "Instruction CMP not yet implemented."
	596 Move X8, [X19+56]
	597 Move TEMP, 0
	598 Not TEMP
	599 Move W9, TEMP
	600 Move [X31+32], X8
	601 Move [X19+56], X31
	602 Move [X19], W9
	603 Add X0, X31, 32
	604 Move X1, X31
	605 Call TaskAwaiter.GetResult, X0
	606 Move X8, [X19+32]
	607 Compare X8, 0
	608 JumpIfNotEqual {397}
	609 Call 0x1B6FA1C
	610 Move W8, 2
	611 Move [X19], W8
	612 Move W8, [X31+56]
	613 Move [X19+40], W8
	614 Move X0, [X25]
	615 Move W8, [X0+224]
	616 Compare W8, 0
	617 JumpIfNotEqual {619}
	618 Call 0x1B6F8F8
	619 Move X8, 0x22B9000
	620 Move X8, [X8+3824]
	621 Add X0, X19, 8
	622 Move X3, [X8]
	623 Add X1, X31, 56
	624 Move X2, X19
	625 Call AsyncTaskMethodBuilder`1<AuthResult>.AwaitUnsafeOnCompleted, X0, X1, X2
	626 Move X20, [X8+16]
	627 Compare X20, 0
	628 JumpIfEqual {817}
	629 Move X10, 0x22B9000
	630 Move X8, [X20]
	631 Move X10, [X10+3864]
	632 NotImplemented "Instruction LDRH not yet implemented."
	633 Move X1, [X10]
	634 Compare X9, 0
	635 JumpIfEqual {642}
	636 Move X10, [X8+176]
	637 Add X10, X10, 8
	638 NotImplemented "Instruction LDUR not yet implemented."
	639 NotImplemented "Instruction CMP not yet implemented."
	640 Subtract X9, X9, 1
	641 Add X10, X10, 16
	642 Move W2, 1
	643 Move X0, X20
	644 Call 0x1BB5284
	645 Move X8, 0x22B9000
	646 Move X8, [X8+1256]
	647 Move X0, [X8]
	648 Move W8, [X0+224]
	649 Compare W8, 0
	650 JumpIfNotEqual {652}
	651 Call 0x1B6F8F8
	652 Call App.get_api
	653 Move X8, [X19+32]
	654 Compare X8, 0
	655 JumpIfEqual {818}
	656 Move X8, [X8+48]
	657 Compare X8, 0
	658 JumpIfEqual {819}
	659 Move X20, X0
	660 Add X0, X8, 24
	661 Move X1, X31
	662 Call UInt64.ToString, X0
	663 Move X8, [X19+32]
	664 Compare X8, 0
	665 JumpIfEqual {820}
	666 Move X8, [X8+48]
	667 Compare X8, 0
	668 JumpIfEqual {821}
	669 Move X22, [X8+40]
	670 Move X8, 0x22B9000
	671 Move X8, [X8+3424]
	672 Move X21, X0
	673 Move X0, [X8]
	674 Call 0x1B6FA0C
	675 Move X8, 0x22B9000
	676 Move X8, [X8+3408]
	677 Move X23, X0
	678 Move X1, [X8]
	679 Call Dictionary`2<Object, Object>..ctor, X0
	680 Compare X23, 0
	681 JumpIfEqual {822}
	682 Move X8, 0x22B9000
	683 Move X8, [X8+3936]
	684 Move X9, 0x22B9000
	685 Move X27, 0x22B9000
	686 Move X9, [X9+3944]
	687 Move X27, [X27+3856]
	688 Move X1, [X8]
	689 Move X2, [X9]
	690 Move X3, [X27]
	691 Move X0, X23
	692 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	693 Move X8, [X19+32]
	694 Compare X8, 0
	695 JumpIfEqual {823}
	696 Move X2, [X8+64]
	697 Move X8, 0x22B9000
	698 Move X8, [X8+3928]
	699 Move X3, [X27]
	700 Move X1, [X8]
	701 Move X0, X23
	702 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	703 Move X0, X23
	704 Call AuthCommands.GetAuthVars, X0
	705 Compare X20, 0
	706 JumpIfEqual {824}
	707 Move X4, X0
	708 Move W3, 1
	709 Move X0, X20
	710 Move X1, X21
	711 Move X2, X22
	712 Move X5, X31
	713 Move X6, X31
	714 Move X7, X31
	715 Call AnimalCompanyAPI.AuthenticateCustomAsync, X0, X1, X2, X3, X4, X5, X6
	716 Compare X0, 0
	717 JumpIfEqual {825}
	718 Move X8, 0x22B9000
	719 Move X8, [X8+3744]
	720 Move X1, [X8]
	721 Call Task`1<Object>.GetAwaiter, X0
	722 Move X8, 0x22B9000
	723 Move X8, [X8+3736]
	724 Move [X31+40], X0
	725 Move X1, [X8]
	726 Add X0, X31, 40
	727 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	728 Move TEMP, X0
	729 And TEMP, TEMP, 1
	730 Compare TEMP, 1
	731 JumpIfEqual {583}
	732 Move W8, 3
	733 Move [X19], W8
	734 Move X8, [X31+40]
	735 Move [X19+48], X8
	736 Move X0, [X25]
	737 Move W8, [X0+224]
	738 Compare W8, 0
	739 JumpIfNotEqual {741}
	740 Call 0x1B6F8F8
	741 Move X8, 0x22B9000
	742 Move X8, [X8+3808]
	743 Add X0, X19, 8
	744 Move X3, [X8]
	745 Add X1, X31, 40
	746 Move X2, X19
	747 Call AsyncTaskMethodBuilder`1<AuthResult>.AwaitUnsafeOnCompleted, X0, X1, X2
	748 Move W9, [X10]
	749 Add W9, W9, 1
	750 Add X8, X8, W9
	751 Add X0, X8, 312
	752 Move X8, [X0]
	753 Move X1, [X0+8]
	754 Move X0, X20
	755 NotImplemented "Instruction BLR not yet implemented."
	756 Move TEMP, X0
	757 And TEMP, TEMP, 1
	758 Compare TEMP, 1
	759 JumpIfNotEqual {606}
	760 Move X8, 0x22B9000
	761 Move X8, [X8+1256]
	762 Move X0, [X8]
	763 Move W8, [X0+224]
	764 Compare W8, 0
	765 JumpIfNotEqual {767}
	766 Call 0x1B6F8F8
	767 Call App.get_api
	768 Move X8, [X19+32]
	769 Compare X8, 0
	770 JumpIfEqual {826}
	771 Move X9, [X8+48]
	772 Compare X9, 0
	773 JumpIfEqual {827}
	774 Compare X0, 0
	775 JumpIfEqual {828}
	776 Move X1, [X8+16]
	777 Move X3, [X9+16]
	778 Move X4, [X9+32]
	779 Move X2, [X9+40]
	780 Move X5, X31
	781 Move X6, X31
	782 Move X7, X31
	783 Move [X31], X31
	784 Move [X31+8], X31
	785 Move [X31+16], X31
	786 Call AnimalCompanyAPI.UpdateAccountAsync, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9
	787 Compare X0, 0
	788 JumpIfEqual {829}
	789 Move X1, X31
	790 Call Task.GetAwaiter, X0
	791 Move [X31+32], X0
	792 Add X0, X31, 32
	793 Move X1, X31
	794 Call TaskAwaiter.get_IsCompleted, X0
	795 Move TEMP, X0
	796 And TEMP, TEMP, 1
	797 Compare TEMP, 1
	798 JumpIfEqual {603}
	799 Move W8, 4
	800 Move [X19], W8
	801 Move X8, [X31+32]
	802 Move [X19+56], X8
	803 Move X0, [X25]
	804 Move W8, [X0+224]
	805 Compare W8, 0
	806 JumpIfNotEqual {808}
	807 Call 0x1B6F8F8
	808 Move X8, 0x22B9000
	809 Move X8, [X8+3816]
	810 Add X0, X19, 8
	811 Move X3, [X8]
	812 Add X1, X31, 32
	813 Move X2, X19
	814 Call AsyncTaskMethodBuilder`1<AuthResult>.AwaitUnsafeOnCompleted, X0, X1, X2
	815 Call 0x1B6FA1C
	816 Call 0x1B6FA1C
	817 Call 0x1B6FA1C
	818 Call 0x1B6FA1C
	819 Call 0x1B6FA1C
	820 Call 0x1B6FA1C
	821 Call 0x1B6FA1C
	822 Call 0x1B6FA1C
	823 Call 0x1B6FA1C
	824 Call 0x1B6FA1C
	825 Call 0x1B6FA1C
	826 Call 0x1B6FA1C
	827 Call 0x1B6FA1C
	828 Call 0x1B6FA1C
	829 Call 0x1B6FA1C
	830 Move X20, X1
	831 Move X21, X0
	832 Move W26, 3
	833 Move X20, X1
	834 Move X21, X0
	835 NotImplemented "Instruction CMP not yet implemented."
	836 Move X0, X21
	837 Call 0x3D1A840
	838 Move X20, X0
	839 Move X0, 0x22B8000
	840 Move X0, [X0+1648]
	841 Call 0x1B6F804
	842 Move X8, [X20]
	843 Move X1, [X8]
	844 Call 0x1B6FD6C
	845 Move TEMP, X0
	846 And TEMP, TEMP, 1
	847 Compare TEMP, 1
	848 JumpIfNotEqual {958}
	849 Move X20, [X20]
	850 Call 0x3D1A850
	851 Move X0, 0x22B8000
	852 Move X0, [X0+3784]
	853 Call 0x1B6F804
	854 Compare X20, 0
	855 JumpIfEqual {864}
	856 Move X8, [X20]
	857 Move W9, [X0+304]
	858 Move W10, [X8+304]
	859 NotImplemented "Instruction CMP not yet implemented."
	860 Move X8, [X8+200]
	861 Add X8, X8, X9
	862 NotImplemented "Instruction LDUR not yet implemented."
	863 NotImplemented "Instruction CMP not yet implemented."
	864 Move X8, [X19+32]
	865 Compare X8, 0
	866 JumpIfEqual {966}
	867 Add X1, X8, 16
	868 Move X0, X20
	869 Call AuthCommands.TryParseAuthError, X0, X1
	870 Move TEMP, X0
	871 And TEMP, TEMP, 1
	872 Compare TEMP, 1
	873 JumpIfEqual {894}
	874 Move X22, [X19+32]
	875 Compare X22, 0
	876 JumpIfEqual {968}
	877 Move W8, 7
	878 Move [X22+24], W8
	879 Compare X20, 0
	880 JumpIfEqual {969}
	881 Move X8, [X20]
	882 Move X9, [X8+392]
	883 Move X1, [X8+400]
	884 Move X0, X20
	885 NotImplemented "Instruction BLR not yet implemented."
	886 Move X21, X0
	887 Move X0, 0x22B8000
	888 Move X0, [X0+3968]
	889 Call 0x1B6F804
	890 Move X1, X21
	891 Move X2, X31
	892 Call String.Concat, X0, X1
	893 Move [X22+32], X0
	894 Move X8, [X19+32]
	895 Compare X8, 0
	896 JumpIfEqual {967}
	897 Move W9, [X8+24]
	898 Compare W9, 0
	899 JumpIfEqual {592}
	900 NotImplemented "Instruction CMP not yet implemented."
	901 Move X0, 0x22B8000
	902 Move X0, [X0+1576]
	903 Call 0x1B6F804
	904 Move W8, [X0+224]
	905 Compare W8, 0
	906 JumpIfNotEqual {908}
	907 Call 0x1B6F8F8
	908 Move X0, 0x22B8000
	909 Move X0, [X0+3976]
	910 Call 0x1B6F804
	911 Move X21, X0
	912 Move X0, 0x22B8000
	913 Move X0, [X0+3560]
	914 Call 0x1B6F804
	915 Move X22, X0
	916 Move X0, 0x22B8000
	917 Move X0, [X0+3552]
	918 Call 0x1B6F804
	919 Move X5, X0
	920 Move W0, 2048
	921 Move W6, 295
	922 Move X1, X21
	923 Move X2, X20
	924 Move X3, X31
	925 Move X4, X22
	926 Move X7, X31
	927 Call Log.Error, X0, X1, X2, X3, X4, X5, X6
	928 Move X8, [X19+32]
	929 Compare X8, 0
	930 JumpIfNotEqual {592}
	931 Call 0x1B6FA1C
	932 Move X0, 0x22B8000
	933 Move X0, [X0+1576]
	934 Call 0x1B6F804
	935 Move W8, [X0+224]
	936 Compare W8, 0
	937 JumpIfNotEqual {939}
	938 Call 0x1B6F8F8
	939 Move X0, 0x22B8000
	940 Move X0, [X0+3984]
	941 Call 0x1B6F804
	942 Move X20, X0
	943 Move X0, 0x22B8000
	944 Move X0, [X0+3560]
	945 Call 0x1B6F804
	946 Move X21, X0
	947 Move X0, 0x22B8000
	948 Move X0, [X0+3552]
	949 Call 0x1B6F804
	950 Move X4, X0
	951 Move W0, 2048
	952 Move W5, 285
	953 Move X1, X20
	954 Move X2, X31
	955 Move X3, X21
	956 Move X6, X31
	957 Call Log.Debug, X0, X1, X2, X3, X4, X5
	958 Move W0, 8
	959 Call 0x3D1A860
	960 Move X8, [X20]
	961 Move [X0], X8
	962 Move X1, 0x2087000
	963 Add X1, X1, 3032
	964 Move X2, X31
	965 Call 0x3D1A870
	966 Call 0x1B6FA1C
	967 Call 0x1B6FA1C
	968 Call 0x1B6FA1C
	969 Call 0x1B6FA1C
	970 Move X20, X1
	971 Move X21, X0
	972 Call 0x3D1A850
	973 Move X20, X1
	974 Move X21, X0
	975 NotImplemented "Instruction CMP not yet implemented."
	976 Move X0, X21
	977 Call 0x3D1A840
	978 Move X20, X0
	979 Move X0, 0x22B8000
	980 Move X0, [X0+1648]
	981 Call 0x1B6F804
	982 Move X8, [X20]
	983 Move X1, [X8]
	984 Call 0x1B6FD6C
	985 Move TEMP, X0
	986 And TEMP, TEMP, 1
	987 Compare TEMP, 1
	988 JumpIfNotEqual {1061}
	989 Move X20, [X20]
	990 Call 0x3D1A850
	991 Move X0, 0x22B8000
	992 Move X0, [X0+3784]
	993 Call 0x1B6F804
	994 Compare X20, 0
	995 JumpIfEqual {1004}
	996 Move X8, [X20]
	997 Move W9, [X0+304]
	998 Move W10, [X8+304]
	999 NotImplemented "Instruction CMP not yet implemented."
	1000 Move X8, [X8+200]
	1001 Add X8, X8, X9
	1002 NotImplemented "Instruction LDUR not yet implemented."
	1003 NotImplemented "Instruction CMP not yet implemented."
	1004 Move X0, 0x22B8000
	1005 Move X0, [X0+1576]
	1006 Call 0x1B6F804
	1007 Move W8, [X0+224]
	1008 Compare W8, 0
	1009 JumpIfNotEqual {1011}
	1010 Call 0x1B6F8F8
	1011 Move X0, 0x22B8000
	1012 Move X0, [X0+3992]
	1013 Call 0x1B6F804
	1014 Move X21, X0
	1015 Move X0, 0x22B8000
	1016 Move X0, [X0+3560]
	1017 Call 0x1B6F804
	1018 Move X22, X0
	1019 Move X0, 0x22B8000
	1020 Move X0, [X0+3552]
	1021 Call 0x1B6F804
	1022 Move X5, X0
	1023 Move W0, 2048
	1024 Move W6, 322
	1025 Move X1, X21
	1026 Move X2, X20
	1027 Move X3, X31
	1028 Move X4, X22
	1029 Move X7, X31
	1030 Call Log.Error, X0, X1, X2, X3, X4, X5, X6
	1031 Move X0, 0x22B8000
	1032 Move X0, [X0+1576]
	1033 Call 0x1B6F804
	1034 Move W8, [X0+224]
	1035 Compare W8, 0
	1036 JumpIfNotEqual {1038}
	1037 Call 0x1B6F8F8
	1038 Move X0, 0x22B8000
	1039 Move X0, [X0+3984]
	1040 Call 0x1B6F804
	1041 Move X20, X0
	1042 Move X0, 0x22B8000
	1043 Move X0, [X0+3560]
	1044 Call 0x1B6F804
	1045 Move X21, X0
	1046 Move X0, 0x22B8000
	1047 Move X0, [X0+3552]
	1048 Call 0x1B6F804
	1049 Move X4, X0
	1050 Move W0, 2048
	1051 Move W5, 318
	1052 Move X1, X20
	1053 Move X2, X31
	1054 Move X3, X21
	1055 Move X6, X31
	1056 Call Log.Debug, X0, X1, X2, X3, X4, X5
	1057 Move X21, X31
	1058 Move W20, 3
	1059 Move [X31+112], W31
	1060 Move [X31+104], X31
	1061 Move W0, 8
	1062 Call 0x3D1A860
	1063 Move X8, [X20]
	1064 Move [X0], X8
	1065 Move X1, 0x2087000
	1066 Add X1, X1, 3032
	1067 Move X2, X31
	1068 Call 0x3D1A870
	1069 Move X20, X1
	1070 Move X21, X0
	1071 Call 0x3D1A850
	1072 Call 0x18F56A8

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x01C9645C ADRP X0, 0x22B7000
	0x01C96460 LDR X0, [X0 + 0x7B0]
	0x01C96464 BL 0x1B6E7F0
	0x01C96468 ADRP X0, 0x22B8000
	0x01C9646C LDR X0, [X0 + 0x88]
	0x01C96470 BL 0x1B6E7F0
	0x01C96474 ADRP X0, 0x22B7000
	0x01C96478 LDR X0, [X0 + 0x7A0]
	0x01C9647C BL 0x1B6E7F0
	0x01C96480 MOVZ W8, 0x1
	0x01C96484 STRB W8, [X21 + 0x3D7]
	0x01C96488 CBZ X19, 0x1C97374
	0x01C9648C LDR X9, [X19 + 0xA8]
	0x01C96490 CBZ X9, 0x1C97374
	0x01C96494 LDR X22, [X20 + 0x20]
	0x01C96498 CBZ X22, 0x1C97374
	0x01C9649C ADRP X23, 0x22B7000
	0x01C964A0 LDR X8, [X22]
	0x01C964A4 LDR X23, [X23 + 0xFE0]
	0x01C964A8 LDR X21, [X9 + 0x48]
	0x01C964AC LDRH W9, [X8 + 0x12E]
	0x01C964B0 LDR X1, [X23]
	0x01C964B4 CBZ X9, 0x1C964D8
	0x01C964B8 LDR X10, [X8 + 0xB0]
	0x01C964BC ADD X10, X10, 0x8
	0x01C964C0 LDUR X11, [X10 - 0x8]
	0x01C964C4 CMP X11, X1
	0x01C964C8 B.EQ 0x1C964E8
	0x01C964CC SUBS X9, X9, 0x1
	0x01C964D0 ADD X10, X10, 0x10
	0x01C964D4 B.NE 0x1C964C0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x258E000
	007 Move X21, 0x22B8000
	008 Move W8, [X22+980]
	009 Move X21, [X21+3360]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x22B8000
	017 Move X0, [X0+3712]
	018 Call 0x1B6F7F0
	019 Move X0, 0x22B8000
	020 Move X0, [X0+3360]
	021 Call 0x1B6F7F0
	022 Move W8, 1
	023 Move [X22+980], W8
	024 Move X0, [X21]
	025 Move X21, 0x22B8000
	026 Move W8, [X0+224]
	027 Move X21, [X21+3712]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1B6F8F8
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<AuthResult>.SetStateMachine, X0, X1
	040 Return 

