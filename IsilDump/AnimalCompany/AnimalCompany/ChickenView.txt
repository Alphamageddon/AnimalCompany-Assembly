Type: AnimalCompany.ChickenView

Method: System.Void PlayRunningSound(System.Boolean play, System.Single volume = 1)

Disassembly:
	0x01DE9218 BL 0x1C16CF4
	0x01DE921C MOVZ W8, 0x1
	0x01DE9220 STRB W8, [X21 + 0xCBA]
	0x01DE9224 LDR X0, [X20]
	0x01DE9228 STR X31, [X31 + 0x18]
	0x01DE922C STR X31, [X31 + 0x8]
	0x01DE9230 LDR X20, [X19 + 0x160]
	0x01DE9234 LDR W8, [X0 + 0xE0]
	0x01DE9238 CBNZ W8, 0x1DE9240
	0x01DE923C BL 0x1C16DFC
	0x01DE9240 MOV X0, X20
	0x01DE9244 MOV X1, X31
	0x01DE9248 MOV X2, X31
	0x01DE924C BL 0x3C3883C
	0x01DE9250 TBNZ X0, 0x0, 0x1DE9280
	0x01DE9254 LDR X0, [X19 + 0x160]
	0x01DE9258 CBZ X0, 0x1DE93B8
	0x01DE925C MOV X1, X31
	0x01DE9260 BL 0x1DAEC64
	0x01DE9264 TBZ X0, 0x0, 0x1DE92A0
	0x01DE9268 LDR X8, [X19]
	0x01DE926C MOV X0, X19
	0x01DE9270 MOV X1, X31
	0x01DE9274 LDR X9, [X8 + 0x3B8]
	0x01DE9278 LDR X2, [X8 + 0x3C0]
	0x01DE927C BLR X9
	0x01DE9280 MOV X0, X19
	0x01DE9284 BL 0x1DE8934
	0x01DE9288 LDP X20, X19, [X31 + 0x40]
	0x01DE928C LDP X30, X21, [X31 + 0x30]
	0x01DE9290 LDP D9, D8, [X31 + 0x20]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0+176]
	007 Compare X0, 0
	008 JumpIfEqual {46}
	009 Move W20, W1
	010 Move X1, X31
	011 Move V8, V0
	012 Call AudioSource.get_isPlaying, X0
	013 Move TEMP, X20
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {26}
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, [X19+176]
	022 Compare X0, 0
	023 JumpIfEqual {46}
	024 Move X1, X31
	025 Call AudioSource.Play, X0
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {35}
	030 Move X0, [X19+176]
	031 Compare X0, 0
	032 JumpIfEqual {46}
	033 Move X1, X31
	034 Call AudioSource.Stop, X0
	035 Move X0, [X19+176]
	036 Compare X0, 0
	037 JumpIfEqual {46}
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+8]
	041 Move V0, V8
	042 Move X1, X31
	043 Move V8, [X31+32]
	044 Call AudioSource.set_volume, X0, V0
	045 Return 
	046 Call 0x1C17F20

Method: System.Void SetTeethVisible(System.Boolean visible)

Disassembly:
	0x01DE91F8 ADRP X0, 0x230F000
	0x01DE91FC LDR X0, [X0 + 0xC70]
	0x01DE9200 BL 0x1C16CF4
	0x01DE9204 ADRP X0, 0x230F000
	0x01DE9208 LDR X0, [X0 + 0xC40]
	0x01DE920C BL 0x1C16CF4
	0x01DE9210 ADRP X0, 0x230A000
	0x01DE9214 LDR X0, [X0 + 0x598]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+184]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 And W1, W1, 1
	006 Move X2, X31
	007 Move X30, [X31+16]
	008 Call Renderer.set_enabled, X0, X1
	009 Return 
	010 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x01DEC450 CBZ X0, 0x1DEC538
	0x01DEC454 MOV X1, X31
	0x01DEC458 BL 0x1E94078
	0x01DEC45C ANDS W31, W0, 0x7
	0x01DEC460 B.EQ 0x1DEC4B8
	0x01DEC464 TBNZ X0, 0x0, 0x1DEC3B4
	0x01DEC468 LDR X8, [X19 + 0x38]
	0x01DEC46C CBZ X8, 0x1DEC538
	0x01DEC470 LDR X0, [X8 + 0x50]
	0x01DEC474 CBZ X0, 0x1DEC538
	0x01DEC478 MOV X1, X31
	0x01DEC47C BL 0x1EC4D00
	0x01DEC480 TBZ X0, 0x0, 0x1DEC528
	0x01DEC484 LDR X8, [X19 + 0x38]
	0x01DEC488 CBZ X8, 0x1DEC538
	0x01DEC48C LDR X0, [X8 + 0x50]
	0x01DEC490 MOVZ W1, 0x10
	0x01DEC494 MOV X2, X31
	0x01DEC498 BL 0x1ED9318
	0x01DEC49C LDR X8, [X19 + 0x40]
	0x01DEC4A0 CBZ X8, 0x1DEC538
	0x01DEC4A4 LDR X8, [X8 + 0x20]
	0x01DEC4A8 MOV X22, X0
	0x01DEC4AC CBZ X8, 0x1DEC4EC
	0x01DEC4B0 LDR W0, [X8]
	0x01DEC4B4 B 0x1DEC4F0
	0x01DEC4B8 LDR X0, [X22]
	0x01DEC4BC LDR X19, [X19 + 0x40]
	0x01DEC4C0 LDR W8, [X0 + 0xE0]
	0x01DEC4C4 CBNZ W8, 0x1DEC4CC
	0x01DEC4C8 BL 0x1C16DFC
	0x01DEC4CC ADRP X8, 0x230C000
	0x01DEC4D0 LDR X8, [X8 + 0xFE8]
	0x01DEC4D4 MOVZ W2, 0x7
	0x01DEC4D8 MOV X1, X19
	0x01DEC4DC MOV X3, X31
	0x01DEC4E0 LDR X0, [X8]
	0x01DEC4E4 BL 0x1E77B00
	0x01DEC4E8 B 0x1DEC528
	0x01DEC4EC MOV X0, X31
	0x01DEC4F0 LDR W1, [X19 + 0x68]
	0x01DEC4F4 MOVZ W2, 0x1
	0x01DEC4F8 MOV X3, X31
	0x01DEC4FC BL 0x1E9C23C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x25ED000
	005 Move W8, [X20+3265]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2308000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3265], W8
	016 Move W8, [X19+168]
	017 Compare W8, 0
	018 JumpIfEqual {55}
	019 Move W8, [X19+84]
	020 Compare W8, 0
	021 JumpIfEqual {49}
	022 Move X8, 0x2308000
	023 Move X8, [X8+1432]
	024 Move X20, [X19+192]
	025 Move X0, [X8]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X20
	031 Move X1, X31
	032 Move X2, X31
	033 Call Object.op_Inequality, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {49}
	038 Move X0, [X19+192]
	039 Compare X0, 0
	040 JumpIfEqual {59}
	041 Move X20, [X19+64]
	042 Move X1, X31
	043 Call Transform.get_position, X0
	044 Compare X20, 0
	045 JumpIfEqual {59}
	046 Move X0, X20
	047 Move X1, X31
	048 Call Transform.set_position, X0, X1
	049 Move X0, X19
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Call MobView.Update, X0
	054 Return 
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Return 
	059 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01DEC500 STUR X0, [X22 + 0x1C]
	0x01DEC504 STP W20, W21, [X22 + 0x24]
	0x01DEC508 CBZ X22, 0x1DEC538
	0x01DEC50C MOVZ W8, 0x80
	0x01DEC510 STR W8, [X22 + 0xC]
	0x01DEC514 LDR X0, [X19 + 0x38]
	0x01DEC518 CBZ X0, 0x1DEC538
	0x01DEC51C MOV X1, X22
	0x01DEC520 MOV X2, X31
	0x01DEC524 BL 0x1EA1E24
	0x01DEC528 LDP X20, X19, [X31 + 0x20]
	0x01DEC52C LDP X22, X21, [X31 + 0x10]
	0x01DEC530 LDR X30, [X31], #0x30
	0x01DEC534 RET
	0x01DEC538 BL 0x1C16F20
	0x01DEC53C SUB X31, X31, 0xA0
	0x01DEC540 STR X30, [X31 + 0x40]
	0x01DEC544 STP X28, X27, [X31 + 0x50]
	0x01DEC548 STP X26, X25, [X31 + 0x60]
	0x01DEC54C STP X24, X23, [X31 + 0x70]
	0x01DEC550 STP X22, X21, [X31 + 0x80]
	0x01DEC554 STP X20, X19, [X31 + 0x90]
	0x01DEC558 ADRP X20, 0x25EC000
	0x01DEC55C LDRB W8, [X20 + 0xCCB]
	0x01DEC560 MOV X19, X0
	0x01DEC564 TBNZ X8, 0x0, 0x1DEC594
	0x01DEC568 ADRP X0, 0x230C000
	0x01DEC56C LDR X0, [X0 + 0xFC8]
	0x01DEC570 BL 0x1C16CF4
	0x01DEC574 ADRP X0, 0x230C000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x25ED000
	006 Move X21, 0x230D000
	007 Move W8, [X20+3266]
	008 Move X21, [X21+3208]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x230D000
	015 Move X0, [X0+3208]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3266], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X8, -19910656
	025 Move V0, [X8+616]
	026 Move W8, 1
	027 Move W9, 0x3F800000
	028 Move [X19+80], W31
	029 Move [X19+84], W8
	030 Move [X19+72], D0
	031 Move [X19+128], W9
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X1, X31
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Call MonoBehaviour..ctor, X0
	039 Return 

