Type: AnimalCompany.NavMeshTest

Method: System.Void Start()

Disassembly:
	0x01CEDDD0 BL 0x1CE5C84
	0x01CEDDD4 LDR X0, [X19 + 0x40]
	0x01CEDDD8 CBZ X0, 0x1CEDE14
	0x01CEDDDC MOV X1, X31
	0x01CEDDE0 BL 0x1D9E780
	0x01CEDDE4 TBZ X0, 0x0, 0x1CEDE0C
	0x01CEDDE8 LDR X8, [X19]
	0x01CEDDEC MOV X0, X19
	0x01CEDDF0 MOV X1, X31
	0x01CEDDF4 LDR X9, [X8 + 0x338]
	0x01CEDDF8 LDR X2, [X8 + 0x340]
	0x01CEDDFC BLR X9
	0x01CEDE00 MOV X0, X19
	0x01CEDE04 LDP X30, X19, [X31], #0x10
	0x01CEDE08 B 0x1CEDCDC
	0x01CEDE0C LDP X30, X19, [X31], #0x10
	0x01CEDE10 RET
	0x01CEDE14 BL 0x1B6EA1C
	0x01CEDE18 STP X30, X19, [X31 - 0x10]!
	0x01CEDE1C MOV X19, X0
	0x01CEDE20 BL 0x1CE5B40
	0x01CEDE24 LDR X0, [X19 + 0x40]
	0x01CEDE28 CBZ X0, 0x1CEDE50
	0x01CEDE2C MOV X1, X31
	0x01CEDE30 BL 0x1D9E780
	0x01CEDE34 TBZ X0, 0x0, 0x1CEDE48
	0x01CEDE38 MOVZ W1, 0x5
	0x01CEDE3C MOV X0, X19
	0x01CEDE40 LDP X30, X19, [X31], #0x10
	0x01CEDE44 B 0x1CED2BC
	0x01CEDE48 LDP X30, X19, [X31], #0x10
	0x01CEDE4C RET
	0x01CEDE50 BL 0x1B6EA1C
	0x01CEDE54 SUB X31, X31, 0x40
	0x01CEDE58 STR X30, [X31 + 0x20]
	0x01CEDE5C STP X20, X19, [X31 + 0x30]
	0x01CEDE60 ADRP X20, 0x2536000
	0x01CEDE64 LDRB W8, [X20 + 0x699]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2537000
	006 Move X21, 0x2264000
	007 Move W8, [X20+1688]
	008 Move X21, [X21+1048]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2264000
	015 Move X0, [X0+1048]
	016 Call 0x1B6F7F0
	017 Move W8, 1
	018 Move [X20+1688], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call 0x2090DE8, X0
	022 Move [X19+48], X0
	023 Compare X0, 0
	024 JumpIfEqual {50}
	025 Move W1, 1
	026 Move X2, X31
	027 Call NavMeshAgent.set_updatePosition, X0, X1
	028 Move X0, [X19+48]
	029 Compare X0, 0
	030 JumpIfEqual {50}
	031 Move W1, 1
	032 Move X2, X31
	033 Call NavMeshAgent.set_updateRotation, X0, X1
	034 Move X0, [X19+32]
	035 Compare X0, 0
	036 JumpIfEqual {50}
	037 Move X19, [X19+48]
	038 Move X1, X31
	039 Call Transform.get_position, X0
	040 Compare X19, 0
	041 JumpIfEqual {50}
	042 Move X0, X19
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X1, X31
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Call NavMeshAgent.SetDestination, X0, X1
	049 Return 
	050 Call 0x1B6FA1C

Method: System.Void Update()

Disassembly:
	0x01CEDE68 MOV X19, X0
	0x01CEDE6C TBNZ X8, 0x0, 0x1CEDE84
	0x01CEDE70 ADRP X0, 0x2263000
	0x01CEDE74 LDR X0, [X0 + 0x4C0]
	0x01CEDE78 BL 0x1B6E7F0
	0x01CEDE7C MOVZ W8, 0x1
	0x01CEDE80 STRB W8, [X20 + 0x699]
	0x01CEDE84 MOV X0, X19
	0x01CEDE88 BL 0x1CE58BC
	0x01CEDE8C MOV X0, X19
	0x01CEDE90 BL 0x1CE4CE0
	0x01CEDE94 TBZ X0, 0x0, 0x1CEDF48
	0x01CEDE98 MOV X0, X19
	0x01CEDE9C BL 0x1CED25C
	0x01CEDEA0 SUB W8, W0, 0x1
	0x01CEDEA4 CMP W8, 0x3
	0x01CEDEA8 B.HI 0x1CEDEF0
	0x01CEDEAC ADRP X9, 0xFFFFFFFFFEDFF000
	0x01CEDEB0 ADD X9, X9, 0x961
	0x01CEDEB4 ADR X10, 0x10
	0x01CEDEB8 LDRB W11, [X9, X8, LSL]
	0x01CEDEBC ADD X10, X10, X11, 0x2, LSL
	0x01CEDEC0 BR X10
	0x01CEDEC4 MOV X0, X19
	0x01CEDEC8 BL 0x1CEDF58
	0x01CEDECC B 0x1CEDEF0
	0x01CEDED0 MOV X0, X19
	0x01CEDED4 BL 0x1CEE0B4
	0x01CEDED8 B 0x1CEDEF0
	0x01CEDEDC MOV X0, X19
	0x01CEDEE0 BL 0x1CEE118
	0x01CEDEE4 B 0x1CEDEF0
	0x01CEDEE8 MOV X0, X19
	0x01CEDEEC BL 0x1CEE8D4
	0x01CEDEF0 MOV X0, X31
	0x01CEDEF4 BL 0x1CD2434
	0x01CEDEF8 TBZ X0, 0x0, 0x1CEDF48
	0x01CEDEFC LDR X20, [X19 + 0x168]
	0x01CEDF00 CBZ X20, 0x1CEDF48
	0x01CEDF04 MOV X0, X19
	0x01CEDF08 BL 0x1CED25C
	0x01CEDF0C ADRP X8, 0x2263000
	0x01CEDF10 LDR X8, [X8 + 0x4C0]
	0x01CEDF14 MOVN X9, 0x0
	0x01CEDF18 STR W0, [X31 + 0x18]
	0x01CEDF1C ADD X0, X31, 0x8
	0x01CEDF20 LDR X8, [X8]
	0x01CEDF24 MOV X1, X31
	0x01CEDF28 STP X8, X9, [X31 + 0x8]
	0x01CEDF2C BL 0x321AF98
	0x01CEDF30 LDR X8, [X20 + 0x40]
	0x01CEDF34 LDR X9, [X20 + 0x18]
	0x01CEDF38 LDR X2, [X20 + 0x28]
	0x01CEDF3C MOV X1, X0
	0x01CEDF40 MOV X0, X8
	0x01CEDF44 BLR X9
	0x01CEDF48 LDP X20, X19, [X31 + 0x30]
	0x01CEDF4C LDR X30, [X31 + 0x20]
	0x01CEDF50 ADD X31, X31, 0x40
	0x01CEDF54 RET
	0x01CEDF58 STR D8, [X31 - 0x20]!
	0x01CEDF5C STR X30, [X31 + 0x8]
	0x01CEDF60 STP X20, X19, [X31 + 0x10]
	0x01CEDF64 ADRP X20, 0x2536000
	0x01CEDF68 LDRB W8, [X20 + 0x69B]
	0x01CEDF6C MOV X19, X0
	0x01CEDF70 TBNZ X8, 0x0, 0x1CEDF88
	0x01CEDF74 ADRP X0, 0x2263000
	0x01CEDF78 LDR X0, [X0 + 0x4B8]
	0x01CEDF7C BL 0x1B6E7F0
	0x01CEDF80 MOVZ W8, 0x1
	0x01CEDF84 STRB W8, [X20 + 0x69B]
	0x01CEDF88 MOV X0, X19
	0x01CEDF8C BL 0x1CED4B0
	0x01CEDF90 LDR X0, [X19 + 0x38]
	0x01CEDF94 CBZ X0, 0x1CEE0B0
	0x01CEDF98 MOV X1, X31
	0x01CEDF9C MOV V8.16B, V0.16B
	0x01CEDFA0 BL 0x1D87058
	0x01CEDFA4 FADD S0, S8, S0
	0x01CEDFA8 MOV X0, X19
	0x01CEDFAC BL 0x1CED510
	0x01CEDFB0 MOV X0, X19
	0x01CEDFB4 BL 0x1CED4B0
	0x01CEDFB8 MOV X0, X19
	0x01CEDFBC MOV V8.16B, V0.16B
	0x01CEDFC0 BL 0x1CED570
	0x01CEDFC4 FCMP S8, S0
	0x01CEDFC8 B.LE 0x1CEE064
	0x01CEDFCC MOV X0, X19
	0x01CEDFD0 BL 0x1CED3E4
	0x01CEDFD4 ORN W8, W31, W0, 0x0
	0x01CEDFD8 AND W1, W8, 0x1
	0x01CEDFDC MOV X0, X19
	0x01CEDFE0 BL 0x1CED44C
	0x01CEDFE4 MOV X0, X19
	0x01CEDFE8 BL 0x1CED4B0
	0x01CEDFEC MOV X0, X19
	0x01CEDFF0 MOV V8.16B, V0.16B
	0x01CEDFF4 BL 0x1CED570
	0x01CEDFF8 FSUB S0, S8, S0
	0x01CEDFFC MOV X0, X19
	0x01CEE000 BL 0x1CED510
	0x01CEE004 MOV X0, X19
	0x01CEE008 BL 0x1CED3E4
	0x01CEE00C ANDS W31, W0, 0x1
	0x01CEE010 MOVZ W8, 0x194
	0x01CEE014 MOVZ W9, 0x18C
	0x01CEE018 MOVZ W10, 0x190
	0x01CEE01C MOVZ W11, 0x188
	0x01CEE020 CSEL X8, X9, X8, NE
	0x01CEE024 CSEL X9, X11, X10, NE
	0x01CEE028 LDR V0, [X19, X9, LSL]
	0x01CEE02C LDR V1, [X19, X8, LSL]
	0x01CEE030 MOV X0, X31
	0x01CEE034 BL 0x3A98CD0
	0x01CEE038 MOV X0, X19
	0x01CEE03C BL 0x1CED5D0
	0x01CEE040 MOV X0, X19
	0x01CEE044 BL 0x1CED3E4
	0x01CEE048 TBNZ X0, 0x0, 0x1CEE064
	0x01CEE04C LDR X0, [X19 + 0x1B0]
	0x01CEE050 CBZ X0, 0x1CEE0B0
	0x01CEE054 ADRP X8, 0x2262000
	0x01CEE058 LDR X8, [X8 + 0x4B8]
	0x01CEE05C LDR X1, [X8]
	0x01CEE060 BL 0x28FA430
	0x01CEE064 MOV X0, X19
	0x01CEE068 BL 0x1CED3E4
	0x01CEE06C TBNZ X0, 0x0, 0x1CEE0A0
	0x01CEE070 MOV X0, X19
	0x01CEE074 BL 0x1CED4B0
	0x01CEE078 ADRP X8, 0xFFFFFFFFFEDBB000
	0x01CEE07C LDR V1, [X8 + 0xB00]
	0x01CEE080 FCMP S0, S1
	0x01CEE084 B.LE 0x1CEE0A0
	0x01CEE088 MOV X0, X19
	0x01CEE08C LDP X20, X19, [X31 + 0x10]
	0x01CEE090 LDR X30, [X31 + 0x8]
	0x01CEE094 MOV W1, W31
	0x01CEE098 LDR V8, [X31], #0x20
	0x01CEE09C B 0x1CEE9D0
	0x01CEE0A0 LDP X20, X19, [X31 + 0x10]
	0x01CEE0A4 LDR X30, [X31 + 0x8]
	0x01CEE0A8 LDR V8, [X31], #0x20
	0x01CEE0AC RET
	0x01CEE0B0 BL 0x1B6EA1C
	0x01CEE0B4 STR D8, [X31 - 0x20]!
	0x01CEE0B8 STP X30, X19, [X31 + 0x10]
	0x01CEE0BC MOV X19, X0
	0x01CEE0C0 BL 0x1CED630
	0x01CEE0C4 LDR X0, [X19 + 0x38]
	0x01CEE0C8 CBZ X0, 0x1CEE114
	0x01CEE0CC MOV X1, X31
	0x01CEE0D0 MOV V8.16B, V0.16B
	0x01CEE0D4 BL 0x1D87058
	0x01CEE0D8 FADD S0, S8, S0
	0x01CEE0DC MOV X0, X19
	0x01CEE0E0 BL 0x1CED690
	0x01CEE0E4 MOV X0, X19
	0x01CEE0E8 BL 0x1CED630
	0x01CEE0EC FMOV S1, 1
	0x01CEE0F0 FCMP S0, S1
	0x01CEE0F4 B.LE 0x1CEE108
	0x01CEE0F8 MOV X0, X19
	0x01CEE0FC LDP X30, X19, [X31 + 0x10]
	0x01CEE100 LDR V8, [X31], #0x20
	0x01CEE104 B 0x1CEF148
	0x01CEE108 LDP X30, X19, [X31 + 0x10]
	0x01CEE10C LDR V8, [X31], #0x20
	0x01CEE110 RET
	0x01CEE114 BL 0x1B6EA1C
	0x01CEE118 SUB X31, X31, 0xF0
	0x01CEE11C STP D15, D14, [X31 + 0x50]
	0x01CEE120 STP D13, D12, [X31 + 0x60]
	0x01CEE124 STP D11, D10, [X31 + 0x70]
	0x01CEE128 STP D9, D8, [X31 + 0x80]
	0x01CEE12C STR X30, [X31 + 0x90]
	0x01CEE130 STP X28, X27, [X31 + 0xA0]
	0x01CEE134 STP X26, X25, [X31 + 0xB0]
	0x01CEE138 STP X24, X23, [X31 + 0xC0]
	0x01CEE13C STP X22, X21, [X31 + 0xD0]
	0x01CEE140 STP X20, X19, [X31 + 0xE0]
	0x01CEE144 ADRP X20, 0x2535000
	0x01CEE148 ADRP X24, 0x225F000
	0x01CEE14C LDRB W8, [X20 + 0x69E]
	0x01CEE150 LDR X24, [X24 + 0x478]
	0x01CEE154 MOV X19, X0
	0x01CEE158 TBNZ X8, 0x0, 0x1CEE1A0
	0x01CEE15C ADRP X0, 0x2261000
	0x01CEE160 LDR X0, [X0 + 0xDA8]
	0x01CEE164 BL 0x1B6E7F0
	0x01CEE168 ADRP X0, 0x2261000
	0x01CEE16C LDR X0, [X0 + 0xDB0]
	0x01CEE170 BL 0x1B6E7F0
	0x01CEE174 ADRP X0, 0x2261000
	0x01CEE178 LDR X0, [X0 + 0xDB8]
	0x01CEE17C BL 0x1B6E7F0
	0x01CEE180 ADRP X0, 0x2261000
	0x01CEE184 LDR X0, [X0 + 0xDC0]
	0x01CEE188 BL 0x1B6E7F0
	0x01CEE18C ADRP X0, 0x225F000
	0x01CEE190 LDR X0, [X0 + 0x478]
	0x01CEE194 BL 0x1B6E7F0
	0x01CEE198 MOVZ W8, 0x1
	0x01CEE19C STRB W8, [X20 + 0x69E]
	0x01CEE1A0 LDR X0, [X24]
	0x01CEE1A4 STP X31, X31, [X31 + 0x30]
	0x01CEE1A8 STR X31, [X31 + 0x40]
	0x01CEE1AC LDR X20, [X19 + 0x140]
	0x01CEE1B0 LDR W8, [X0 + 0xE0]
	0x01CEE1B4 CBNZ W8, 0x1CEE1BC
	0x01CEE1B8 BL 0x1B6E8F8
	0x01CEE1BC MOV X0, X20
	0x01CEE1C0 MOV X1, X31
	0x01CEE1C4 MOV X2, X31
	0x01CEE1C8 BL 0x3AA0AF0
	0x01CEE1CC TBNZ X0, 0x0, 0x1CEE7E4
	0x01CEE1D0 LDR X0, [X19 + 0x140]
	0x01CEE1D4 CBZ X0, 0x1CEE81C
	0x01CEE1D8 MOV X1, X31
	0x01CEE1DC BL 0x1CB47E0
	0x01CEE1E0 TBNZ X0, 0x0, 0x1CEE7E4
	0x01CEE1E4 LDR X0, [X19 + 0x140]
	0x01CEE1E8 CBZ X0, 0x1CEE81C
	0x01CEE1EC MOV X1, X31
	0x01CEE1F0 BL 0x3A9B084
	0x01CEE1F4 CBZ X0, 0x1CEE81C
	0x01CEE1F8 MOV X1, X31
	0x01CEE1FC BL 0x3AA7658
	0x01CEE200 MOV X0, X19
	0x01CEE204 MOV X1, X31
	0x01CEE208 MOV V8.16B, V0.16B
	0x01CEE20C MOV V9.16B, V1.16B
	0x01CEE210 MOV V10.16B, V2.16B
	0x01CEE214 BL 0x3A9B084
	0x01CEE218 CBZ X0, 0x1CEE81C
	0x01CEE21C MOV X1, X31
	0x01CEE220 BL 0x3AA7658
	0x01CEE224 FSUB S0, S8, S0
	0x01CEE228 FSUB S1, S9, S1
	0x01CEE22C FSUB S2, S10, S2
	0x01CEE230 MOV X0, X31
	0x01CEE234 BL 0x1CC086C
	0x01CEE238 ADRP X25, 0x2535000
	0x01CEE23C LDRB W8, [X25 + 0x441]
	0x01CEE240 MOV V8.16B, V0.16B
	0x01CEE244 MOV V9.16B, V1.16B
	0x01CEE248 MOV V10.16B, V2.16B
	0x01CEE24C CBNZ W8, 0x1CEE264
	0x01CEE250 ADRP X0, 0x225F000

ISIL:
	001 Move [X31-96], D14
	002 Move [X31+8], D13
	003 Move [X31+16], D12
	004 Move [X31+24], D11
	005 Move [X31+32], D10
	006 Move [X31+40], D9
	007 Move [X31+48], D8
	008 Move [X31+56], X30
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X19, X0
	014 Move W0, 304
	015 Move X1, X31
	016 Call Input.GetKey, X0
	017 And W31, W0, 1
	018 Move S0, 1
	019 Move S1, 2
	020 Move X0, X31
	021 NotImplemented "Instruction FCSEL not yet implemented."
	022 Call Time.get_deltaTime
	023 Move W0, 119
	024 Move X1, X31
	025 Multiply S8, S8, S0
	026 Call Input.GetKey, X0
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {56}
	031 Move X21, 0x2537000
	032 Move W8, [X21+1295]
	033 Move X20, [X19+48]
	034 Compare W8, 0
	035 JumpIfNotEqual {41}
	036 Move X0, 0x2261000
	037 Move X0, [X0+1152]
	038 Call 0x1B6F7F0
	039 Move W8, 1
	040 Move [X21+1295], W8
	041 Compare X20, 0
	042 JumpIfEqual {305}
	043 Move X8, 0x2261000
	044 Move X8, [X8+1152]
	045 Move X0, X20
	046 Move X1, X31
	047 Move X8, [X8]
	048 Move X8, [X8+184]
	049 Move S1, [X8+76]
	050 Move S0, [X8+80]
	051 Move V3, [X8+72]
	052 Multiply S2, S8, S0
	053 Multiply S1, S8, S1
	054 Multiply S0, S8, S3
	055 Call NavMeshAgent.Move, X0, X1
	056 Move W0, 115
	057 Move X1, X31
	058 Call Input.GetKey, X0
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {88}
	063 Move X21, 0x2537000
	064 Move W8, [X21+1809]
	065 Move X20, [X19+48]
	066 Compare W8, 0
	067 JumpIfNotEqual {73}
	068 Move X0, 0x2261000
	069 Move X0, [X0+1152]
	070 Call 0x1B6F7F0
	071 Move W8, 1
	072 Move [X21+1809], W8
	073 Compare X20, 0
	074 JumpIfEqual {305}
	075 Move X8, 0x2261000
	076 Move X8, [X8+1152]
	077 Move X0, X20
	078 Move X1, X31
	079 Move X8, [X8]
	080 Move X8, [X8+184]
	081 Move S1, [X8+88]
	082 Move S0, [X8+92]
	083 Move V3, [X8+84]
	084 Multiply S2, S8, S0
	085 Multiply S1, S8, S1
	086 Multiply S0, S8, S3
	087 Call NavMeshAgent.Move, X0, X1
	088 Move W0, 97
	089 Move X1, X31
	090 Call Input.GetKey, X0
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {120}
	095 Move X21, 0x2537000
	096 Move W8, [X21+1294]
	097 Move X20, [X19+48]
	098 Compare W8, 0
	099 JumpIfNotEqual {105}
	100 Move X0, 0x2261000
	101 Move X0, [X0+1152]
	102 Call 0x1B6F7F0
	103 Move W8, 1
	104 Move [X21+1294], W8
	105 Compare X20, 0
	106 JumpIfEqual {305}
	107 Move X8, 0x2261000
	108 Move X8, [X8+1152]
	109 Move X0, X20
	110 Move X1, X31
	111 Move X8, [X8]
	112 Move X8, [X8+184]
	113 Move S1, [X8+52]
	114 Move S0, [X8+56]
	115 Move V3, [X8+48]
	116 Multiply S2, S8, S0
	117 Multiply S1, S8, S1
	118 Multiply S0, S8, S3
	119 Call NavMeshAgent.Move, X0, X1
	120 Move W0, 100
	121 Move X1, X31
	122 Call Input.GetKey, X0
	123 Move TEMP, X0
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfNotEqual {152}
	127 Move X21, 0x2537000
	128 Move W8, [X21+1297]
	129 Move X20, [X19+48]
	130 Compare W8, 0
	131 JumpIfNotEqual {137}
	132 Move X0, 0x2260000
	133 Move X0, [X0+1152]
	134 Call 0x1B6F7F0
	135 Move W8, 1
	136 Move [X21+1297], W8
	137 Compare X20, 0
	138 JumpIfEqual {305}
	139 Move X8, 0x2260000
	140 Move X8, [X8+1152]
	141 Move X0, X20
	142 Move X1, X31
	143 Move X8, [X8]
	144 Move X8, [X8+184]
	145 Move S1, [X8+64]
	146 Move S0, [X8+68]
	147 Move V3, [X8+60]
	148 Multiply S2, S8, S0
	149 Multiply S1, S8, S1
	150 Multiply S0, S8, S3
	151 Call NavMeshAgent.Move, X0, X1
	152 Move W0, 32
	153 Move X1, X31
	154 Call Input.GetKeyDown, X0
	155 Move TEMP, X0
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfNotEqual {170}
	159 Move X20, [X19+48]
	160 Compare X20, 0
	161 JumpIfEqual {305}
	162 Move X0, X20
	163 Move X1, X31
	164 Call NavMeshAgent.get_isStopped, X0
	165 NotImplemented "Instruction ORN not yet implemented."
	166 And W1, W8, 1
	167 Move X0, X20
	168 Move X2, X31
	169 Call NavMeshAgent.set_isStopped, X0, X1
	170 Move X0, X19
	171 Move X1, X31
	172 Call Component.get_transform, X0
	173 Compare X0, 0
	174 JumpIfEqual {305}
	175 Move X1, X31
	176 Call Transform.get_position, X0
	177 Move X0, [X19+32]
	178 Compare X0, 0
	179 JumpIfEqual {305}
	180 Move X1, X31
	181 Move V8, V0
	182 Move V9, V1
	183 Move V10, V2
	184 Call Transform.get_position, X0
	185 Move X21, 0x2536000
	186 Move W8, [X21+1286]
	187 Move V11, V0
	188 Move V12, V1
	189 Move V13, V2
	190 Compare W8, 0
	191 JumpIfNotEqual {197}
	192 Move X0, 0x2260000
	193 Move X0, [X0+1160]
	194 Call 0x1B6F7F0
	195 Move W8, 1
	196 Move [X21+1286], W8
	197 Move X22, 0x2260000
	198 Move X22, [X22+1160]
	199 Subtract S11, S8, S11
	200 Subtract S9, S9, S12
	201 Subtract S8, S10, S13
	202 Move X0, [X22]
	203 Move W8, [X0+224]
	204 Compare W8, 0
	205 JumpIfNotEqual {207}
	206 Call 0x1B6F8F8
	207 Move X8, -19152896
	208 Multiply S0, S11, S11
	209 Multiply S1, S9, S9
	210 Move V14, [X8+2736]
	211 Add S0, S0, S1
	212 Multiply S1, S8, S8
	213 Add S0, S1, S0
	214 NotImplemented "Instruction FSQRT not yet implemented."
	215 NotImplemented "Instruction FCMP not yet implemented."
	216 Move X0, [X19+40]
	217 Compare X0, 0
	218 JumpIfEqual {305}
	219 Move X20, [X19+48]
	220 Move X1, X31
	221 Call Transform.get_position, X0
	222 Compare X20, 0
	223 JumpIfEqual {305}
	224 Move X0, X20
	225 Move X1, X31
	226 Call NavMeshAgent.SetDestination, X0, X1
	227 Move X0, X19
	228 Move X1, X31
	229 Call Component.get_transform, X0
	230 Compare X0, 0
	231 JumpIfEqual {305}
	232 Move X1, X31
	233 Call Transform.get_position, X0
	234 Move X0, [X19+40]
	235 Compare X0, 0
	236 JumpIfEqual {305}
	237 Move X1, X31
	238 Move V8, V0
	239 Move V9, V1
	240 Move V10, V2
	241 Call Transform.get_position, X0
	242 Move W8, [X21+1286]
	243 Move V11, V0
	244 Move V12, V1
	245 Move V13, V2
	246 Compare W8, 0
	247 JumpIfNotEqual {253}
	248 Move X0, 0x2260000
	249 Move X0, [X0+1160]
	250 Call 0x1B6F7F0
	251 Move W8, 1
	252 Move [X21+1286], W8
	253 Move X0, [X22]
	254 Subtract S11, S8, S11
	255 Subtract S9, S9, S12
	256 Subtract S8, S10, S13
	257 Move W8, [X0+224]
	258 Compare W8, 0
	259 JumpIfNotEqual {261}
	260 Call 0x1B6F8F8
	261 Multiply S0, S11, S11
	262 Multiply S1, S9, S9
	263 Add S0, S0, S1
	264 Multiply S1, S8, S8
	265 Add S0, S1, S0
	266 NotImplemented "Instruction FSQRT not yet implemented."
	267 NotImplemented "Instruction FCMP not yet implemented."
	268 Move X0, [X19+32]
	269 Compare X0, 0
	270 JumpIfEqual {305}
	271 Move X19, [X19+48]
	272 Move X1, X31
	273 Call Transform.get_position, X0
	274 Compare X19, 0
	275 JumpIfEqual {305}
	276 Move X0, X19
	277 Move X20, [X31+80]
	278 Move X19, [X31+88]
	279 Move X22, [X31+64]
	280 Move X21, [X31+72]
	281 Move X30, [X31+56]
	282 Move D9, [X31+40]
	283 Move D8, [X31+48]
	284 Move D11, [X31+24]
	285 Move D10, [X31+32]
	286 Move D13, [X31+8]
	287 Move D12, [X31+16]
	288 Move X1, X31
	289 Move V14, [X31+96]
	290 Call NavMeshAgent.SetDestination, X0, X1
	291 Return 
	292 Move X20, [X31+80]
	293 Move X19, [X31+88]
	294 Move X22, [X31+64]
	295 Move X21, [X31+72]
	296 Move X30, [X31+56]
	297 Move D9, [X31+40]
	298 Move D8, [X31+48]
	299 Move D11, [X31+24]
	300 Move D10, [X31+32]
	301 Move D13, [X31+8]
	302 Move D12, [X31+16]
	303 Move V14, [X31+96]
	304 Return 
	305 Call 0x1B6FA1C

Method: System.Void .ctor()

Disassembly:
	0x01CEE254 LDR X0, [X0 + 0x488]
	0x01CEE258 BL 0x1B6E7F0

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

