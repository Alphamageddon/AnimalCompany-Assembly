Type: AnimalCompany.NavMeshTest

Method: System.Void Start()

Disassembly:
	0x01DFDF80 STP X30, X19, [X31 - 0x10]!
	0x01DFDF84 MOV X1, X31
	0x01DFDF88 MOV X19, X0
	0x01DFDF8C BL 0x1DE89FC
	0x01DFDF90 LDR X0, [X19 + 0x40]
	0x01DFDF94 CBZ X0, 0x1DFDFD0
	0x01DFDF98 MOV X1, X31
	0x01DFDF9C BL 0x1E93668
	0x01DFDFA0 TBZ X0, 0x0, 0x1DFDFC8
	0x01DFDFA4 LDR X8, [X19]
	0x01DFDFA8 MOV X0, X19
	0x01DFDFAC MOV X1, X31
	0x01DFDFB0 LDR X9, [X8 + 0x3B8]
	0x01DFDFB4 LDR X2, [X8 + 0x3C0]
	0x01DFDFB8 BLR X9
	0x01DFDFBC MOV X0, X19
	0x01DFDFC0 LDP X30, X19, [X31], #0x10
	0x01DFDFC4 B 0x1DFDE94
	0x01DFDFC8 LDP X30, X19, [X31], #0x10
	0x01DFDFCC RET
	0x01DFDFD0 BL 0x1C16F20
	0x01DFDFD4 STP X30, X19, [X31 - 0x10]!
	0x01DFDFD8 MOV X1, X31
	0x01DFDFDC MOV X19, X0
	0x01DFDFE0 BL 0x1DE8BF8
	0x01DFDFE4 LDR X0, [X19 + 0x40]
	0x01DFDFE8 CBZ X0, 0x1DFE010
	0x01DFDFEC MOV X1, X31
	0x01DFDFF0 BL 0x1E93668
	0x01DFDFF4 TBZ X0, 0x0, 0x1DFE008
	0x01DFDFF8 MOVZ W1, 0x5
	0x01DFDFFC MOV X0, X19
	0x01DFE000 LDP X30, X19, [X31], #0x10
	0x01DFE004 B 0x1DFD46C
	0x01DFE008 LDP X30, X19, [X31], #0x10
	0x01DFE00C RET
	0x01DFE010 BL 0x1C16F20
	0x01DFE014 SUB X31, X31, 0x40

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x25DC000
	006 Move X21, 0x22FD000
	007 Move W8, [X20+3397]
	008 Move X21, [X21+1424]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22FD000
	015 Move X0, [X0+1424]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3397], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call 0x21A4894, X0
	022 Move [X19+48], X0
	023 Compare X0, 0
	024 JumpIfEqual {50}
	025 Move W1, 1
	026 Move X2, X31
	027 Call NavMeshAgent.set_updatePosition, X0, X1
	028 Move X0, [X19+48]
	029 Compare X0, 0
	030 JumpIfEqual {50}
	031 Move W1, 1
	032 Move X2, X31
	033 Call NavMeshAgent.set_updateRotation, X0, X1
	034 Move X0, [X19+32]
	035 Compare X0, 0
	036 JumpIfEqual {50}
	037 Move X19, [X19+48]
	038 Move X1, X31
	039 Call Transform.get_position, X0
	040 Compare X19, 0
	041 JumpIfEqual {50}
	042 Move X0, X19
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X1, X31
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Call NavMeshAgent.SetDestination, X0, X1
	049 Return 
	050 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x01DFE018 STR X30, [X31 + 0x20]
	0x01DFE01C STP X20, X19, [X31 + 0x30]
	0x01DFE020 ADRP X20, 0x25DA000
	0x01DFE024 LDRB W8, [X20 + 0xD46]
	0x01DFE028 MOV X19, X0
	0x01DFE02C TBNZ X8, 0x0, 0x1DFE044
	0x01DFE030 ADRP X0, 0x22FB000
	0x01DFE034 LDR X0, [X0 + 0x638]
	0x01DFE038 BL 0x1C16CF4
	0x01DFE03C MOVZ W8, 0x1
	0x01DFE040 STRB W8, [X20 + 0xD46]
	0x01DFE044 MOV X0, X19
	0x01DFE048 MOV X1, X31
	0x01DFE04C BL 0x1DE9038
	0x01DFE050 MOV X0, X19
	0x01DFE054 BL 0x1DFD40C
	0x01DFE058 SUB W8, W0, 0x1
	0x01DFE05C CMP W8, 0x3
	0x01DFE060 B.HI 0x1DFE0A8
	0x01DFE064 ADRP X9, 0xFFFFFFFFFED2F000
	0x01DFE068 ADD X9, X9, 0x984
	0x01DFE06C ADR X10, 0x10
	0x01DFE070 LDRB W11, [X9, X8, LSL]
	0x01DFE074 ADD X10, X10, X11, 0x2, LSL
	0x01DFE078 BR X10
	0x01DFE07C MOV X0, X19
	0x01DFE080 BL 0x1DFE110
	0x01DFE084 B 0x1DFE0A8
	0x01DFE088 MOV X0, X19
	0x01DFE08C BL 0x1DFE268
	0x01DFE090 B 0x1DFE0A8
	0x01DFE094 MOV X0, X19
	0x01DFE098 BL 0x1DFE2C4
	0x01DFE09C B 0x1DFE0A8
	0x01DFE0A0 MOV X0, X19
	0x01DFE0A4 BL 0x1DFEAEC
	0x01DFE0A8 MOV X0, X31
	0x01DFE0AC BL 0x1DD6AE8
	0x01DFE0B0 TBZ X0, 0x0, 0x1DFE100
	0x01DFE0B4 LDR X20, [X19 + 0x198]
	0x01DFE0B8 CBZ X20, 0x1DFE100
	0x01DFE0BC MOV X0, X19
	0x01DFE0C0 BL 0x1DFD40C
	0x01DFE0C4 ADRP X8, 0x22FB000
	0x01DFE0C8 LDR X8, [X8 + 0x638]
	0x01DFE0CC MOVN X9, 0x0
	0x01DFE0D0 STR W0, [X31 + 0x18]
	0x01DFE0D4 ADD X0, X31, 0x8
	0x01DFE0D8 LDR X8, [X8]
	0x01DFE0DC MOV X1, X31
	0x01DFE0E0 STP X8, X9, [X31 + 0x8]
	0x01DFE0E4 BL 0x33B162C
	0x01DFE0E8 LDR X8, [X20 + 0x40]
	0x01DFE0EC LDR X9, [X20 + 0x18]
	0x01DFE0F0 LDR X2, [X20 + 0x28]
	0x01DFE0F4 MOV X1, X0
	0x01DFE0F8 MOV X0, X8
	0x01DFE0FC BLR X9
	0x01DFE100 LDP X20, X19, [X31 + 0x30]
	0x01DFE104 LDR X30, [X31 + 0x20]
	0x01DFE108 ADD X31, X31, 0x40
	0x01DFE10C RET
	0x01DFE110 STR D8, [X31 - 0x20]!
	0x01DFE114 STR X30, [X31 + 0x8]
	0x01DFE118 STP X20, X19, [X31 + 0x10]
	0x01DFE11C ADRP X20, 0x25DA000
	0x01DFE120 LDRB W8, [X20 + 0xD48]
	0x01DFE124 MOV X19, X0
	0x01DFE128 TBNZ X8, 0x0, 0x1DFE140
	0x01DFE12C ADRP X0, 0x22FB000
	0x01DFE130 LDR X0, [X0 + 0x630]
	0x01DFE134 BL 0x1C16CF4
	0x01DFE138 MOVZ W8, 0x1
	0x01DFE13C STRB W8, [X20 + 0xD48]
	0x01DFE140 MOV X0, X19
	0x01DFE144 BL 0x1DFD660
	0x01DFE148 MOV X0, X19
	0x01DFE14C MOV X1, X31
	0x01DFE150 MOV V8.16B, V0.16B
	0x01DFE154 BL 0x1DEA4B8
	0x01DFE158 FADD S0, S8, S0
	0x01DFE15C MOV X0, X19
	0x01DFE160 BL 0x1DFD6C0
	0x01DFE164 MOV X0, X19
	0x01DFE168 BL 0x1DFD660
	0x01DFE16C MOV X0, X19
	0x01DFE170 MOV V8.16B, V0.16B
	0x01DFE174 BL 0x1DFD720
	0x01DFE178 FCMP S8, S0
	0x01DFE17C B.LE 0x1DFE218
	0x01DFE180 MOV X0, X19
	0x01DFE184 BL 0x1DFD594
	0x01DFE188 ORN W8, W31, W0, 0x0
	0x01DFE18C AND W1, W8, 0x1
	0x01DFE190 MOV X0, X19
	0x01DFE194 BL 0x1DFD5FC
	0x01DFE198 MOV X0, X19
	0x01DFE19C BL 0x1DFD660
	0x01DFE1A0 MOV X0, X19
	0x01DFE1A4 MOV V8.16B, V0.16B
	0x01DFE1A8 BL 0x1DFD720
	0x01DFE1AC FSUB S0, S8, S0
	0x01DFE1B0 MOV X0, X19
	0x01DFE1B4 BL 0x1DFD6C0
	0x01DFE1B8 MOV X0, X19
	0x01DFE1BC BL 0x1DFD594
	0x01DFE1C0 ANDS W31, W0, 0x1
	0x01DFE1C4 MOVZ W8, 0x1C4
	0x01DFE1C8 MOVZ W9, 0x1BC
	0x01DFE1CC MOVZ W10, 0x1C0
	0x01DFE1D0 MOVZ W11, 0x1B8
	0x01DFE1D4 CSEL X8, X9, X8, NE
	0x01DFE1D8 CSEL X9, X11, X10, NE
	0x01DFE1DC LDR V0, [X19, X9, LSL]
	0x01DFE1E0 LDR V1, [X19, X8, LSL]
	0x01DFE1E4 MOV X0, X31
	0x01DFE1E8 BL 0x3C30968
	0x01DFE1EC MOV X0, X19
	0x01DFE1F0 BL 0x1DFD780
	0x01DFE1F4 MOV X0, X19
	0x01DFE1F8 BL 0x1DFD594
	0x01DFE1FC TBNZ X0, 0x0, 0x1DFE218
	0x01DFE200 LDR X0, [X19 + 0x1E0]
	0x01DFE204 CBZ X0, 0x1DFE264
	0x01DFE208 ADRP X8, 0x22FB000
	0x01DFE20C LDR X8, [X8 + 0x630]
	0x01DFE210 LDR X1, [X8]
	0x01DFE214 BL 0x2AA5220
	0x01DFE218 MOV X0, X19
	0x01DFE21C BL 0x1DFD594
	0x01DFE220 TBNZ X0, 0x0, 0x1DFE254
	0x01DFE224 MOV X0, X19
	0x01DFE228 BL 0x1DFD660
	0x01DFE22C ADRP X8, 0xFFFFFFFFFECEC000
	0x01DFE230 LDR V1, [X8 + 0x114]
	0x01DFE234 FCMP S0, S1
	0x01DFE238 B.LE 0x1DFE254
	0x01DFE23C MOV X0, X19
	0x01DFE240 LDP X20, X19, [X31 + 0x10]
	0x01DFE244 LDR X30, [X31 + 0x8]
	0x01DFE248 MOV W1, W31
	0x01DFE24C LDR V8, [X31], #0x20
	0x01DFE250 B 0x1DFEBE8
	0x01DFE254 LDP X20, X19, [X31 + 0x10]
	0x01DFE258 LDR X30, [X31 + 0x8]
	0x01DFE25C LDR V8, [X31], #0x20
	0x01DFE260 RET
	0x01DFE264 BL 0x1C16F20
	0x01DFE268 STR D8, [X31 - 0x20]!
	0x01DFE26C STP X30, X19, [X31 + 0x10]
	0x01DFE270 MOV X19, X0
	0x01DFE274 BL 0x1DFD7E0
	0x01DFE278 MOV X0, X19
	0x01DFE27C MOV X1, X31
	0x01DFE280 MOV V8.16B, V0.16B
	0x01DFE284 BL 0x1DEA4B8
	0x01DFE288 FADD S0, S8, S0
	0x01DFE28C MOV X0, X19
	0x01DFE290 BL 0x1DFD840
	0x01DFE294 MOV X0, X19
	0x01DFE298 BL 0x1DFD7E0
	0x01DFE29C FMOV S1, 1
	0x01DFE2A0 FCMP S0, S1
	0x01DFE2A4 B.LE 0x1DFE2B8
	0x01DFE2A8 MOV X0, X19
	0x01DFE2AC LDP X30, X19, [X31 + 0x10]
	0x01DFE2B0 LDR V8, [X31], #0x20
	0x01DFE2B4 B 0x1DFF3C0
	0x01DFE2B8 LDP X30, X19, [X31 + 0x10]
	0x01DFE2BC LDR V8, [X31], #0x20
	0x01DFE2C0 RET
	0x01DFE2C4 SUB X31, X31, 0xE0
	0x01DFE2C8 STP D15, D14, [X31 + 0x40]
	0x01DFE2CC STP D13, D12, [X31 + 0x50]
	0x01DFE2D0 STP D11, D10, [X31 + 0x60]
	0x01DFE2D4 STP D9, D8, [X31 + 0x70]
	0x01DFE2D8 STR X30, [X31 + 0x80]
	0x01DFE2DC STP X28, X27, [X31 + 0x90]
	0x01DFE2E0 STP X26, X25, [X31 + 0xA0]
	0x01DFE2E4 STP X24, X23, [X31 + 0xB0]
	0x01DFE2E8 STP X22, X21, [X31 + 0xC0]
	0x01DFE2EC STP X20, X19, [X31 + 0xD0]
	0x01DFE2F0 ADRP X20, 0x25DA000
	0x01DFE2F4 ADRP X24, 0x22F5000
	0x01DFE2F8 LDRB W8, [X20 + 0xD4B]
	0x01DFE2FC LDR X24, [X24 + 0x598]
	0x01DFE300 MOV X19, X0
	0x01DFE304 TBNZ X8, 0x0, 0x1DFE358
	0x01DFE308 ADRP X0, 0x22FA000
	0x01DFE30C LDR X0, [X0 + 0xC20]
	0x01DFE310 BL 0x1C16CF4
	0x01DFE314 ADRP X0, 0x22FA000
	0x01DFE318 LDR X0, [X0 + 0xC28]
	0x01DFE31C BL 0x1C16CF4
	0x01DFE320 ADRP X0, 0x22FA000
	0x01DFE324 LDR X0, [X0 + 0xC30]
	0x01DFE328 BL 0x1C16CF4
	0x01DFE32C ADRP X0, 0x22FA000
	0x01DFE330 LDR X0, [X0 + 0xC38]
	0x01DFE334 BL 0x1C16CF4
	0x01DFE338 ADRP X0, 0x22FA000
	0x01DFE33C LDR X0, [X0 + 0xC40]
	0x01DFE340 BL 0x1C16CF4
	0x01DFE344 ADRP X0, 0x22F5000
	0x01DFE348 LDR X0, [X0 + 0x598]
	0x01DFE34C BL 0x1C16CF4
	0x01DFE350 MOVZ W8, 0x1
	0x01DFE354 STRB W8, [X20 + 0xD4B]
	0x01DFE358 LDR X0, [X24]
	0x01DFE35C STP X31, X31, [X31 + 0x20]
	0x01DFE360 STR X31, [X31 + 0x30]
	0x01DFE364 LDR X20, [X19 + 0x160]
	0x01DFE368 LDR W8, [X0 + 0xE0]
	0x01DFE36C CBNZ W8, 0x1DFE374
	0x01DFE370 BL 0x1C16DFC
	0x01DFE374 MOV X0, X20
	0x01DFE378 MOV X1, X31
	0x01DFE37C MOV X2, X31
	0x01DFE380 BL 0x3C3883C
	0x01DFE384 TBNZ X0, 0x0, 0x1DFE9FC
	0x01DFE388 LDR X0, [X19 + 0x160]
	0x01DFE38C CBZ X0, 0x1DFEA34
	0x01DFE390 MOV X1, X31
	0x01DFE394 BL 0x1DAEC64
	0x01DFE398 TBNZ X0, 0x0, 0x1DFE9FC
	0x01DFE39C LDR X0, [X19 + 0x160]
	0x01DFE3A0 CBZ X0, 0x1DFEA34
	0x01DFE3A4 MOV X1, X31
	0x01DFE3A8 BL 0x3C32E90
	0x01DFE3AC CBZ X0, 0x1DFEA34
	0x01DFE3B0 MOV X1, X31
	0x01DFE3B4 BL 0x3C3F58C
	0x01DFE3B8 MOV X0, X19
	0x01DFE3BC MOV X1, X31
	0x01DFE3C0 MOV V8.16B, V0.16B
	0x01DFE3C4 MOV V9.16B, V1.16B
	0x01DFE3C8 MOV V10.16B, V2.16B
	0x01DFE3CC BL 0x3C32E90
	0x01DFE3D0 CBZ X0, 0x1DFEA34
	0x01DFE3D4 MOV X1, X31
	0x01DFE3D8 BL 0x3C3F58C
	0x01DFE3DC FSUB S0, S8, S0
	0x01DFE3E0 FSUB S1, S9, S1
	0x01DFE3E4 FSUB S2, S10, S2
	0x01DFE3E8 MOV X0, X31
	0x01DFE3EC BL 0x1DC0890
	0x01DFE3F0 ADRP X25, 0x25DA000
	0x01DFE3F4 LDRB W8, [X25 + 0x785]
	0x01DFE3F8 MOV V8.16B, V0.16B
	0x01DFE3FC MOV V9.16B, V1.16B
	0x01DFE400 MOV V10.16B, V2.16B

ISIL:
	001 Move [X31-96], D14
	002 Move [X31+8], D13
	003 Move [X31+16], D12
	004 Move [X31+24], D11
	005 Move [X31+32], D10
	006 Move [X31+40], D9
	007 Move [X31+48], D8
	008 Move [X31+56], X30
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X19, X0
	014 Move W0, 304
	015 Move X1, X31
	016 Call Input.GetKey, X0
	017 And W31, W0, 1
	018 Move S0, 1
	019 Move S1, 2
	020 Move X0, X31
	021 NotImplemented "Instruction FCSEL not yet implemented."
	022 Call Time.get_deltaTime
	023 Move W0, 119
	024 Move X1, X31
	025 Multiply S8, S8, S0
	026 Call Input.GetKey, X0
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {56}
	031 Move X21, 0x25DB000
	032 Move W8, [X21+2591]
	033 Move X20, [X19+48]
	034 Compare W8, 0
	035 JumpIfNotEqual {41}
	036 Move X0, 0x22F6000
	037 Move X0, [X0+1440]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+2591], W8
	041 Compare X20, 0
	042 JumpIfEqual {305}
	043 Move X8, 0x22F6000
	044 Move X8, [X8+1440]
	045 Move X0, X20
	046 Move X1, X31
	047 Move X8, [X8]
	048 Move X8, [X8+184]
	049 Move S1, [X8+76]
	050 Move S0, [X8+80]
	051 Move V3, [X8+72]
	052 Multiply S2, S8, S0
	053 Multiply S1, S8, S1
	054 Multiply S0, S8, S3
	055 Call NavMeshAgent.Move, X0, X1
	056 Move W0, 115
	057 Move X1, X31
	058 Call Input.GetKey, X0
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {88}
	063 Move X21, 0x25DB000
	064 Move W8, [X21+3550]
	065 Move X20, [X19+48]
	066 Compare W8, 0
	067 JumpIfNotEqual {73}
	068 Move X0, 0x22F6000
	069 Move X0, [X0+1440]
	070 Call 0x1C17CF4
	071 Move W8, 1
	072 Move [X21+3550], W8
	073 Compare X20, 0
	074 JumpIfEqual {305}
	075 Move X8, 0x22F6000
	076 Move X8, [X8+1440]
	077 Move X0, X20
	078 Move X1, X31
	079 Move X8, [X8]
	080 Move X8, [X8+184]
	081 Move S1, [X8+88]
	082 Move S0, [X8+92]
	083 Move V3, [X8+84]
	084 Multiply S2, S8, S0
	085 Multiply S1, S8, S1
	086 Multiply S0, S8, S3
	087 Call NavMeshAgent.Move, X0, X1
	088 Move W0, 97
	089 Move X1, X31
	090 Call Input.GetKey, X0
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {120}
	095 Move X21, 0x25DB000
	096 Move W8, [X21+2927]
	097 Move X20, [X19+48]
	098 Compare W8, 0
	099 JumpIfNotEqual {105}
	100 Move X0, 0x22F6000
	101 Move X0, [X0+1440]
	102 Call 0x1C17CF4
	103 Move W8, 1
	104 Move [X21+2927], W8
	105 Compare X20, 0
	106 JumpIfEqual {305}
	107 Move X8, 0x22F6000
	108 Move X8, [X8+1440]
	109 Move X0, X20
	110 Move X1, X31
	111 Move X8, [X8]
	112 Move X8, [X8+184]
	113 Move S1, [X8+52]
	114 Move S0, [X8+56]
	115 Move V3, [X8+48]
	116 Multiply S2, S8, S0
	117 Multiply S1, S8, S1
	118 Multiply S0, S8, S3
	119 Call NavMeshAgent.Move, X0, X1
	120 Move W0, 100
	121 Move X1, X31
	122 Call Input.GetKey, X0
	123 Move TEMP, X0
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfNotEqual {152}
	127 Move X21, 0x25DB000
	128 Move W8, [X21+2928]
	129 Move X20, [X19+48]
	130 Compare W8, 0
	131 JumpIfNotEqual {137}
	132 Move X0, 0x22F6000
	133 Move X0, [X0+1440]
	134 Call 0x1C17CF4
	135 Move W8, 1
	136 Move [X21+2928], W8
	137 Compare X20, 0
	138 JumpIfEqual {305}
	139 Move X8, 0x22F6000
	140 Move X8, [X8+1440]
	141 Move X0, X20
	142 Move X1, X31
	143 Move X8, [X8]
	144 Move X8, [X8+184]
	145 Move S1, [X8+64]
	146 Move S0, [X8+68]
	147 Move V3, [X8+60]
	148 Multiply S2, S8, S0
	149 Multiply S1, S8, S1
	150 Multiply S0, S8, S3
	151 Call NavMeshAgent.Move, X0, X1
	152 Move W0, 32
	153 Move X1, X31
	154 Call Input.GetKeyDown, X0
	155 Move TEMP, X0
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfNotEqual {170}
	159 Move X20, [X19+48]
	160 Compare X20, 0
	161 JumpIfEqual {305}
	162 Move X0, X20
	163 Move X1, X31
	164 Call NavMeshAgent.get_isStopped, X0
	165 NotImplemented "Instruction ORN not yet implemented."
	166 And W1, W8, 1
	167 Move X0, X20
	168 Move X2, X31
	169 Call NavMeshAgent.set_isStopped, X0, X1
	170 Move X0, X19
	171 Move X1, X31
	172 Call Component.get_transform, X0
	173 Compare X0, 0
	174 JumpIfEqual {305}
	175 Move X1, X31
	176 Call Transform.get_position, X0
	177 Move X0, [X19+32]
	178 Compare X0, 0
	179 JumpIfEqual {305}
	180 Move X1, X31
	181 Move V8, V0
	182 Move V9, V1
	183 Move V10, V2
	184 Call Transform.get_position, X0
	185 Move X21, 0x25DB000
	186 Move W8, [X21+2140]
	187 Move V11, V0
	188 Move V12, V1
	189 Move V13, V2
	190 Compare W8, 0
	191 JumpIfNotEqual {197}
	192 Move X0, 0x22F6000
	193 Move X0, [X0+1448]
	194 Call 0x1C17CF4
	195 Move W8, 1
	196 Move [X21+2140], W8
	197 Move X22, 0x22F6000
	198 Move X22, [X22+1448]
	199 Subtract S11, S8, S11
	200 Subtract S9, S9, S12
	201 Subtract S8, S10, S13
	202 Move X0, [X22]
	203 Move W8, [X0+224]
	204 Compare W8, 0
	205 JumpIfNotEqual {207}
	206 Call 0x1C17DFC
	207 Move X8, -20000768
	208 Multiply S0, S11, S11
	209 Multiply S1, S9, S9
	210 Move V14, [X8+188]
	211 Add S0, S0, S1
	212 Multiply S1, S8, S8
	213 Add S0, S1, S0
	214 NotImplemented "Instruction FSQRT not yet implemented."
	215 NotImplemented "Instruction FCMP not yet implemented."
	216 Move X0, [X19+40]
	217 Compare X0, 0
	218 JumpIfEqual {305}
	219 Move X20, [X19+48]
	220 Move X1, X31
	221 Call Transform.get_position, X0
	222 Compare X20, 0
	223 JumpIfEqual {305}
	224 Move X0, X20
	225 Move X1, X31
	226 Call NavMeshAgent.SetDestination, X0, X1
	227 Move X0, X19
	228 Move X1, X31
	229 Call Component.get_transform, X0
	230 Compare X0, 0
	231 JumpIfEqual {305}
	232 Move X1, X31
	233 Call Transform.get_position, X0
	234 Move X0, [X19+40]
	235 Compare X0, 0
	236 JumpIfEqual {305}
	237 Move X1, X31
	238 Move V8, V0
	239 Move V9, V1
	240 Move V10, V2
	241 Call Transform.get_position, X0
	242 Move W8, [X21+2140]
	243 Move V11, V0
	244 Move V12, V1
	245 Move V13, V2
	246 Compare W8, 0
	247 JumpIfNotEqual {253}
	248 Move X0, 0x22F6000
	249 Move X0, [X0+1448]
	250 Call 0x1C17CF4
	251 Move W8, 1
	252 Move [X21+2140], W8
	253 Move X0, [X22]
	254 Subtract S11, S8, S11
	255 Subtract S9, S9, S12
	256 Subtract S8, S10, S13
	257 Move W8, [X0+224]
	258 Compare W8, 0
	259 JumpIfNotEqual {261}
	260 Call 0x1C17DFC
	261 Multiply S0, S11, S11
	262 Multiply S1, S9, S9
	263 Add S0, S0, S1
	264 Multiply S1, S8, S8
	265 Add S0, S1, S0
	266 NotImplemented "Instruction FSQRT not yet implemented."
	267 NotImplemented "Instruction FCMP not yet implemented."
	268 Move X0, [X19+32]
	269 Compare X0, 0
	270 JumpIfEqual {305}
	271 Move X19, [X19+48]
	272 Move X1, X31
	273 Call Transform.get_position, X0
	274 Compare X19, 0
	275 JumpIfEqual {305}
	276 Move X0, X19
	277 Move X20, [X31+80]
	278 Move X19, [X31+88]
	279 Move X22, [X31+64]
	280 Move X21, [X31+72]
	281 Move X30, [X31+56]
	282 Move D9, [X31+40]
	283 Move D8, [X31+48]
	284 Move D11, [X31+24]
	285 Move D10, [X31+32]
	286 Move D13, [X31+8]
	287 Move D12, [X31+16]
	288 Move X1, X31
	289 Move V14, [X31+96]
	290 Call NavMeshAgent.SetDestination, X0, X1
	291 Return 
	292 Move X20, [X31+80]
	293 Move X19, [X31+88]
	294 Move X22, [X31+64]
	295 Move X21, [X31+72]
	296 Move X30, [X31+56]
	297 Move D9, [X31+40]
	298 Move D8, [X31+48]
	299 Move D11, [X31+24]
	300 Move D10, [X31+32]
	301 Move D13, [X31+8]
	302 Move D12, [X31+16]
	303 Move V14, [X31+96]
	304 Return 
	305 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01DFE404 CBNZ W8, 0x1DFE41C
	0x01DFE408 ADRP X0, 0x22F5000

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

