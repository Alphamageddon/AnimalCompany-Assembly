Type: AnimalCompany.NetHand

Method: System.Byte get_stepID()

Disassembly:
	0x01DB24AC MOV X0, X20
	0x01DB24B0 MOV X1, X31
	0x01DB24B4 BL 0x1D36978
	0x01DB24B8 LDR X0, [X21]
	0x01DB24BC BL 0x1C16F10
	0x01DB24C0 LDR X2, [X26]
	0x01DB24C4 MOV X1, X19
	0x01DB24C8 MOV X3, X31
	0x01DB24CC MOV X20, X0
	0x01DB24D0 BL 0x35C52F0
	0x01DB24D4 MOV X0, X20
	0x01DB24D8 MOV X1, X31
	0x01DB24DC BL 0x1D36978
	0x01DB24E0 LDR X0, [X21]
	0x01DB24E4 BL 0x1C16F10
	0x01DB24E8 LDR X2, [X25]
	0x01DB24EC MOV X1, X19
	0x01DB24F0 MOV X3, X31
	0x01DB24F4 MOV X20, X0
	0x01DB24F8 BL 0x35C52F0
	0x01DB24FC MOV X0, X20
	0x01DB2500 MOV X1, X31
	0x01DB2504 BL 0x1D36978
	0x01DB2508 LDR X0, [X21]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move W0, [X8]
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0
	010 Move X0, 0x2342000
	011 Move X0, [X0+1456]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0x2346000
	016 Move X0, [X0+2528]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x2346000
	023 Move X0, [X0+2536]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: System.Void set_stepID(System.Byte value)

Disassembly:
	0x01DB250C BL 0x1C16F10
	0x01DB2510 LDR X2, [X24]
	0x01DB2514 MOV X1, X19
	0x01DB2518 MOV X3, X31
	0x01DB251C MOV X20, X0
	0x01DB2520 BL 0x35C52F0
	0x01DB2524 MOV X0, X20
	0x01DB2528 MOV X1, X31
	0x01DB252C BL 0x1D36978
	0x01DB2530 LDR X0, [X21]
	0x01DB2534 BL 0x1C16F10
	0x01DB2538 LDR X2, [X23]
	0x01DB253C MOV X1, X19
	0x01DB2540 MOV X3, X31
	0x01DB2544 MOV X20, X0
	0x01DB2548 BL 0x35C52F0
	0x01DB254C MOV X0, X20
	0x01DB2550 MOV X1, X31
	0x01DB2554 BL 0x1D36978
	0x01DB2558 LDR X0, [X21]
	0x01DB255C BL 0x1C16F10
	0x01DB2560 LDR X2, [X22]
	0x01DB2564 MOV X1, X19
	0x01DB2568 MOV X3, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move [X8], W1
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 
	010 Move X0, 0x2342000
	011 Move X0, [X0+1456]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0x2346000
	016 Move X0, [X0+2528]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x2346000
	023 Move X0, [X0+2544]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: System.Byte get_volume()

Disassembly:
	0x01DB256C MOV X20, X0
	0x01DB2570 BL 0x35C52F0
	0x01DB2574 MOV X0, X20
	0x01DB2578 LDP X20, X19, [X31 + 0x40]
	0x01DB257C LDP X22, X21, [X31 + 0x30]
	0x01DB2580 LDP X24, X23, [X31 + 0x20]
	0x01DB2584 LDP X26, X25, [X31 + 0x10]
	0x01DB2588 MOV X1, X31
	0x01DB258C LDP X30, X27, [X31], #0x50
	0x01DB2590 B 0x1D36978
	0x01DB2594 BL 0x1C16F20
	0x01DB2598 STR X30, [X31 - 0x30]!
	0x01DB259C STP X22, X21, [X31 + 0x10]
	0x01DB25A0 STP X20, X19, [X31 + 0x20]
	0x01DB25A4 ADRP X22, 0x2626000
	0x01DB25A8 ADRP X21, 0x2343000
	0x01DB25AC LDRB W8, [X22 + 0xAFE]
	0x01DB25B0 LDR X21, [X21 + 0x9A0]
	0x01DB25B4 MOV X19, X1
	0x01DB25B8 MOV W20, W0
	0x01DB25BC TBNZ X8, 0x0, 0x1DB25E0
	0x01DB25C0 ADRP X0, 0x2345000
	0x01DB25C4 LDR X0, [X0 + 0xAF0]
	0x01DB25C8 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move W0, [X8+4]
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0
	010 Move X0, 0x2342000
	011 Move X0, [X0+1456]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0x2346000
	016 Move X0, [X0+2552]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x2346000
	023 Move X0, [X0+2560]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: System.Void set_volume(System.Byte value)

Disassembly:
	0x01DB25CC ADRP X0, 0x2343000
	0x01DB25D0 LDR X0, [X0 + 0x9A0]
	0x01DB25D4 BL 0x1C16CF4
	0x01DB25D8 MOVZ W8, 0x1
	0x01DB25DC STRB W8, [X22 + 0xAFE]
	0x01DB25E0 LDR X0, [X21]
	0x01DB25E4 LDR W8, [X0 + 0xE0]
	0x01DB25E8 CBNZ W8, 0x1DB25F4
	0x01DB25EC BL 0x1C16DFC
	0x01DB25F0 LDR X0, [X21]
	0x01DB25F4 LDR X8, [X0 + 0xB8]
	0x01DB25F8 LDR X0, [X8]
	0x01DB25FC CBZ X0, 0x1DB2624
	0x01DB2600 ADRP X8, 0x2345000
	0x01DB2604 LDR X8, [X8 + 0xAF0]
	0x01DB2608 MOV W1, W20
	0x01DB260C MOV X2, X19
	0x01DB2610 LDP X20, X19, [X31 + 0x20]
	0x01DB2614 LDR X3, [X8]
	0x01DB2618 LDP X22, X21, [X31 + 0x10]
	0x01DB261C LDR X30, [X31], #0x30
	0x01DB2620 B 0x2B10A7C
	0x01DB2624 BL 0x1C16F20
	0x01DB2628 SUB X31, X31, 0x70

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move [X8+4], W1
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 
	010 Move X0, 0x2342000
	011 Move X0, [X0+1456]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0x2346000
	016 Move X0, [X0+2552]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x2346000
	023 Move X0, [X0+2568]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: System.UInt16 get_sfxID()

Disassembly:
	0x01DB262C STR X30, [X31 + 0x10]
	0x01DB2630 STP X28, X27, [X31 + 0x20]
	0x01DB2634 STP X26, X25, [X31 + 0x30]
	0x01DB2638 STP X24, X23, [X31 + 0x40]
	0x01DB263C STP X22, X21, [X31 + 0x50]
	0x01DB2640 STP X20, X19, [X31 + 0x60]
	0x01DB2644 ADRP X20, 0x2626000
	0x01DB2648 LDRB W8, [X20 + 0xAFF]
	0x01DB264C MOV X19, X0
	0x01DB2650 TBNZ X8, 0x0, 0x1DB2770
	0x01DB2654 ADRP X0, 0x2341000
	0x01DB2658 LDR X0, [X0 + 0xD28]
	0x01DB265C BL 0x1C16CF4
	0x01DB2660 ADRP X0, 0x2345000
	0x01DB2664 LDR X0, [X0 + 0xAF8]
	0x01DB2668 BL 0x1C16CF4
	0x01DB266C ADRP X0, 0x2345000
	0x01DB2670 LDR X0, [X0 + 0xB00]
	0x01DB2674 BL 0x1C16CF4
	0x01DB2678 ADRP X0, 0x2344000
	0x01DB267C LDR X0, [X0 + 0xBC0]
	0x01DB2680 BL 0x1C16CF4
	0x01DB2684 ADRP X0, 0x2345000
	0x01DB2688 LDR X0, [X0 + 0xB08]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 NotImplemented "Instruction LDRH not yet implemented."
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0
	010 Move X0, 0x2342000
	011 Move X0, [X0+1456]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0x2346000
	016 Move X0, [X0+2576]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x2346000
	023 Move X0, [X0+2584]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: System.Void set_sfxID(System.UInt16 value)

Disassembly:
	0x01DB268C BL 0x1C16CF4
	0x01DB2690 ADRP X0, 0x2345000
	0x01DB2694 LDR X0, [X0 + 0xB10]
	0x01DB2698 BL 0x1C16CF4
	0x01DB269C ADRP X0, 0x2341000
	0x01DB26A0 LDR X0, [X0 + 0x648]
	0x01DB26A4 BL 0x1C16CF4
	0x01DB26A8 ADRP X0, 0x2341000
	0x01DB26AC LDR X0, [X0 + 0x958]
	0x01DB26B0 BL 0x1C16CF4
	0x01DB26B4 ADRP X0, 0x2345000
	0x01DB26B8 LDR X0, [X0 + 0xB18]
	0x01DB26BC BL 0x1C16CF4
	0x01DB26C0 ADRP X0, 0x2341000
	0x01DB26C4 LDR X0, [X0 + 0xDB0]
	0x01DB26C8 BL 0x1C16CF4
	0x01DB26CC ADRP X0, 0x2345000
	0x01DB26D0 LDR X0, [X0 + 0xB20]
	0x01DB26D4 BL 0x1C16CF4
	0x01DB26D8 ADRP X0, 0x2345000
	0x01DB26DC LDR X0, [X0 + 0xB28]
	0x01DB26E0 BL 0x1C16CF4
	0x01DB26E4 ADRP X0, 0x2345000
	0x01DB26E8 LDR X0, [X0 + 0xB30]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+80]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 NotImplemented "Instruction STRH not yet implemented."
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 
	010 Move X0, 0x2342000
	011 Move X0, [X0+1456]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0x2346000
	016 Move X0, [X0+2576]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0x2346000
	023 Move X0, [X0+2592]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: System.Void HandleStepIDChanged()

Disassembly:
	0x01DB26EC BL 0x1C16CF4
	0x01DB26F0 ADRP X0, 0x2345000
	0x01DB26F4 LDR X0, [X0 + 0xB38]
	0x01DB26F8 BL 0x1C16CF4
	0x01DB26FC ADRP X0, 0x2345000
	0x01DB2700 LDR X0, [X0 + 0xAC8]
	0x01DB2704 BL 0x1C16CF4
	0x01DB2708 ADRP X0, 0x2345000
	0x01DB270C LDR X0, [X0 + 0xAD0]
	0x01DB2710 BL 0x1C16CF4
	0x01DB2714 ADRP X0, 0x2345000
	0x01DB2718 LDR X0, [X0 + 0xB40]
	0x01DB271C BL 0x1C16CF4
	0x01DB2720 ADRP X0, 0x2345000
	0x01DB2724 LDR X0, [X0 + 0xAD8]
	0x01DB2728 BL 0x1C16CF4
	0x01DB272C ADRP X0, 0x2345000
	0x01DB2730 LDR X0, [X0 + 0xB48]
	0x01DB2734 BL 0x1C16CF4
	0x01DB2738 ADRP X0, 0x2345000
	0x01DB273C LDR X0, [X0 + 0xB50]
	0x01DB2740 BL 0x1C16CF4
	0x01DB2744 ADRP X0, 0x2343000
	0x01DB2748 LDR X0, [X0 + 0x9A0]
	0x01DB274C BL 0x1C16CF4
	0x01DB2750 ADRP X0, 0x2341000
	0x01DB2754 LDR X0, [X0 + 0xDA0]
	0x01DB2758 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, X0
	007 Call NetHand.get_volume, X0
	008 Move W20, W0
	009 Move X0, X21
	010 Call NetHand.get_sfxID, X0
	011 Move W19, W0
	012 Move X0, X21
	013 Move X1, X31
	014 Call Component.get_transform, X0
	015 Compare X0, 0
	016 JumpIfEqual {34}
	017 And W8, W20, 255
	018 Move W9, 0x437F0000
	019 NotImplemented "Instruction UCVTF not yet implemented."
	020 Move S1, W9
	021 Move X1, X31
	022 NotImplemented "Instruction FDIV not yet implemented."
	023 Call Transform.get_position, X0
	024 Move W0, W19
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X30, [X31+16]
	028 Move X21, [X31+24]
	029 Move V3, V8
	030 Move X1, X31
	031 Move V8, [X31+48]
	032 Call SFXManager.PlaySFX, X0, X1, V0
	033 Return 
	034 Call 0x1C17F20

Method: System.Void HandleStep(AnimalCompany.RandomSFX sfx, System.Single intensity)

Disassembly:
	0x01DB275C ADRP X0, 0x2343000
	0x01DB2760 LDR X0, [X0 + 0x7C8]
	0x01DB2764 BL 0x1C16CF4
	0x01DB2768 MOVZ W8, 0x1
	0x01DB276C STRB W8, [X20 + 0xAFF]
	0x01DB2770 MOVZ W2, 0x1
	0x01DB2774 MOV X0, X19
	0x01DB2778 MOV W1, W31
	0x01DB277C MOV X3, X31
	0x01DB2780 BL 0x1E73EA0
	0x01DB2784 LDR X8, [X19 + 0x40]
	0x01DB2788 STR X0, [X19 + 0x178]
	0x01DB278C CBZ X8, 0x1DB3038
	0x01DB2790 LDR X20, [X19 + 0x38]
	0x01DB2794 MOV X0, X8
	0x01DB2798 MOV X1, X31
	0x01DB279C BL 0x1E93994
	0x01DB27A0 CBZ X20, 0x1DB3038
	0x01DB27A4 AND X1, X0, 0x0
	0x01DB27A8 MOV X0, X20
	0x01DB27AC MOV X2, X31
	0x01DB27B0 BL 0x1EA176C
	0x01DB27B4 LDR X8, [X19 + 0x40]
	0x01DB27B8 STR X0, [X19 + 0x190]
	0x01DB27BC CBZ X8, 0x1DB3038
	0x01DB27C0 LDR X20, [X19 + 0x38]
	0x01DB27C4 MOV X0, X8
	0x01DB27C8 MOV X1, X31
	0x01DB27CC BL 0x1E93994
	0x01DB27D0 CBZ X20, 0x1DB3038
	0x01DB27D4 ADRP X21, 0x2341000
	0x01DB27D8 ADRP X22, 0x2345000
	0x01DB27DC ADRP X23, 0x2341000
	0x01DB27E0 LDR X21, [X21 + 0x958]
	0x01DB27E4 LDR X22, [X22 + 0xB20]
	0x01DB27E8 LDR X23, [X23 + 0x648]
	0x01DB27EC AND X1, X0, 0x0
	0x01DB27F0 MOV X0, X20
	0x01DB27F4 MOV X2, X31
	0x01DB27F8 BL 0x1EA185C
	0x01DB27FC STR X0, [X19 + 0x198]
	0x01DB2800 LDR X0, [X21]
	0x01DB2804 BL 0x1C16F10
	0x01DB2808 LDR X2, [X22]
	0x01DB280C MOV X1, X19
	0x01DB2810 MOV X3, X31
	0x01DB2814 MOV X20, X0
	0x01DB2818 BL 0x35BC6F0
	0x01DB281C MOV X0, X20
	0x01DB2820 MOV W1, W31
	0x01DB2824 MOV X2, X31
	0x01DB2828 BL 0x35BBFC4
	0x01DB282C LDR X8, [X23]
	0x01DB2830 MOV X20, X0
	0x01DB2834 LDR W9, [X8 + 0xE0]
	0x01DB2838 CBNZ W9, 0x1DB2844
	0x01DB283C MOV X0, X8
	0x01DB2840 BL 0x1C16DFC
	0x01DB2844 MOVZ W1, 0x1
	0x01DB2848 MOV X0, X20
	0x01DB284C MOV X2, X31
	0x01DB2850 BL 0x1D35D6C
	0x01DB2854 LDR X8, [X19 + 0x40]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, X1
	007 Move X19, X0
	008 Add X1, X31, 12
	009 Move X0, X8
	010 Move X2, X31
	011 Move V8, V0
	012 NotImplemented "Instruction STRH not yet implemented."
	013 Call SFXManager.TryGetSFXResourceID, X0, X1
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {67}
	018 NotImplemented "Instruction LDRH not yet implemented."
	019 Move X0, X19
	020 Call NetHand.set_sfxID, X0, X1
	021 Move W8, 0x437F0000
	022 Move X20, 0x2627000
	023 Move S0, 1
	024 Move S1, W8
	025 Move W8, [X20+2595]
	026 NotImplemented "Instruction FMIN not yet implemented."
	027 Multiply S0, S0, S1
	028 NotImplemented "Instruction FCMP not yet implemented."
	029 Move S1, W31
	030 NotImplemented "Instruction FCSEL not yet implemented."
	031 Compare W8, 0
	032 JumpIfNotEqual {38}
	033 Move X0, 0x2342000
	034 Move X0, [X0+1448]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X20+2595], W8
	038 Move X8, 0x2342000
	039 Move X8, [X8+1448]
	040 Move X0, [X8]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move W8, 0x7F800000
	046 NotImplemented "Instruction FRINTM not yet implemented."
	047 Move S1, W8
	048 NotImplemented "Instruction FCVTMS not yet implemented."
	049 NotImplemented "Instruction FCMP not yet implemented."
	050 NotImplemented "Instruction CSEL not yet implemented."
	051 Move X0, X19
	052 Call NetHand.set_volume, X0, X1
	053 Move X0, X19
	054 Call NetHand.get_stepID, X0
	055 And W8, W0, 255
	056 Move W9, 0x8081
	057 Add W8, W8, 1
	058 NotImplemented "Instruction MOVK not yet implemented."
	059 NotImplemented "Instruction UMADDL not yet implemented."
	060 Move X9, X9
	061 ShiftRight X9, 39
	062 And X9, X9, 0x7FFFFFFF
	063 Subtract W9, W9, W9
	064 Add W1, W8, W9
	065 Move X0, X19
	066 Call NetHand.set_stepID, X0, X1
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X30, [X31+24]
	070 Move V8, [X31+16]
	071 Add X31, X31, 48
	072 Return 

Method: System.Void .ctor()

Disassembly:
	0x01DB2858 STR X0, [X19 + 0x1D8]
	0x01DB285C CBZ X8, 0x1DB3038

ISIL:
	001 Move X1, X31
	002 Call NetworkBehaviour..ctor, X0
	003 Return 

Method: System.Void CopyBackingFieldsToState(System.Boolean param_0)

Disassembly:
	0x01DB2860 MOV X0, X8
	0x01DB2864 MOV X1, X31
	0x01DB2868 BL 0x1E93588
	0x01DB286C LDR X8, [X19 + 0xC8]
	0x01DB2870 TBZ X0, 0x0, 0x1DB2BF4
	0x01DB2874 CBZ X8, 0x1DB3038
	0x01DB2878 MOV X0, X8
	0x01DB287C MOV X1, X31
	0x01DB2880 BL 0x3C32ECC
	0x01DB2884 CBZ X0, 0x1DB3038
	0x01DB2888 MOV W1, W31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W1, [X0+128]
	004 Move X19, X0
	005 Call NetHand.set_stepID, X0, X1
	006 Move W1, [X19+129]
	007 Move X0, X19
	008 Call NetHand.set_volume, X0, X1
	009 NotImplemented "Instruction LDRH not yet implemented."
	010 Move X0, X19
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Call NetHand.set_sfxID, X0, X1
	014 Return 

Method: System.Void CopyStateToBackingFields()

Disassembly:
	0x01DB288C MOV X2, X31
	0x01DB2890 BL 0x3C357B4
	0x01DB2894 ADRP X25, 0x2341000
	0x01DB2898 LDR X25, [X25 + 0xDA0]
	0x01DB289C LDR X0, [X25]
	0x01DB28A0 BL 0x1C16F10
	0x01DB28A4 ADRP X8, 0x2345000
	0x01DB28A8 LDR X8, [X8 + 0xAD8]
	0x01DB28AC MOV X1, X19
	0x01DB28B0 MOV X3, X31
	0x01DB28B4 MOV X20, X0
	0x01DB28B8 LDR X2, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call NetHand.get_stepID, X0
	005 Move [X19+128], W0
	006 Move X0, X19
	007 Call NetHand.get_volume, X0
	008 Move [X19+129], W0
	009 Move X0, X19
	010 Call NetHand.get_sfxID, X0
	011 NotImplemented "Instruction STRH not yet implemented."
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return 

