Type: AnimalCompany.BansheeView

Method: System.Void SetVisible(System.Boolean visible)

Disassembly:
	0x01DE4A58 ADRP X0, 0x2314000
	0x01DE4A5C LDR X0, [X0 + 0xC30]
	0x01DE4A60 BL 0x1C16CF4
	0x01DE4A64 ADRP X0, 0x2314000
	0x01DE4A68 LDR X0, [X0 + 0xC38]
	0x01DE4A6C BL 0x1C16CF4
	0x01DE4A70 ADRP X0, 0x2314000
	0x01DE4A74 LDR X0, [X0 + 0xC40]
	0x01DE4A78 BL 0x1C16CF4
	0x01DE4A7C MOVZ W8, 0x1
	0x01DE4A80 STRB W8, [X20 + 0xC94]
	0x01DE4A84 STP X31, X31, [X31 + 0x20]
	0x01DE4A88 STR X31, [X31 + 0x30]
	0x01DE4A8C CBZ X19, 0x1DE4B80
	0x01DE4A90 ADRP X8, 0x2314000
	0x01DE4A94 LDR X8, [X8 + 0xC38]
	0x01DE4A98 ADRP X21, 0x2314000
	0x01DE4A9C ADRP X22, 0x2314000
	0x01DE4AA0 ADRP X20, 0x2314000
	0x01DE4AA4 LDR X1, [X8]
	0x01DE4AA8 LDR X21, [X21 + 0xC28]
	0x01DE4AAC LDR X22, [X22 + 0xC40]
	0x01DE4AB0 LDR X20, [X20 + 0xC20]
	0x01DE4AB4 ADD X8, X31, 0x8
	0x01DE4AB8 MOV X0, X19
	0x01DE4ABC BL 0x301CB58
	0x01DE4AC0 LDUR V0, [X31 + 0x8]
	0x01DE4AC4 LDR X8, [X31 + 0x18]
	0x01DE4AC8 STR V0, [X31 + 0x2]
	0x01DE4ACC STR X8, [X31 + 0x30]
	0x01DE4AD0 LDR X1, [X21]
	0x01DE4AD4 ADD X0, X31, 0x20
	0x01DE4AD8 BL 0x2BC4350
	0x01DE4ADC TBZ X0, 0x0, 0x1DE4B40
	0x01DE4AE0 LDR X8, [X31 + 0x30]
	0x01DE4AE4 CBZ X8, 0x1DE4B78
	0x01DE4AE8 LDR X0, [X8 + 0x90]
	0x01DE4AEC CBZ X0, 0x1DE4B7C
	0x01DE4AF0 MOV X1, X31
	0x01DE4AF4 BL 0x3C3F58C
	0x01DE4AF8 LDR X0, [X22]
	0x01DE4AFC MOV V11.16B, V0.16B
	0x01DE4B00 MOV V12.16B, V1.16B
	0x01DE4B04 MOV V13.16B, V2.16B
	0x01DE4B08 LDR W8, [X0 + 0xE0]
	0x01DE4B0C CBNZ W8, 0x1DE4B14
	0x01DE4B10 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, [X0+48]
	007 Compare X21, 0
	008 JumpIfEqual {49}
	009 Move W8, [X21+24]
	010 Move X20, X0
	011 Move W19, W1
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move W22, W31
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Add X8, X21, W22
	016 Move X0, [X8+32]
	017 Compare X0, 0
	018 JumpIfEqual {49}
	019 And W1, W19, 1
	020 Move X2, X31
	021 Call Renderer.set_enabled, X0, X1
	022 Move W8, [X21+24]
	023 Add W22, W22, 1
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X20, [X20+192]
	026 Compare X20, 0
	027 JumpIfEqual {49}
	028 Move W8, [X20+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W21, W31
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Add X8, X20, W21
	033 Move X0, [X8+32]
	034 Compare X0, 0
	035 JumpIfEqual {49}
	036 And W1, W19, 1
	037 Move X2, X31
	038 Call Collider.set_enabled, X0, X1
	039 Move W8, [X20+24]
	040 Add W21, W21, 1
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Return 
	048 Call 0x1C17F28
	049 Call 0x1C17F20

Method: System.Void SetDeath(System.Boolean isDie)

Disassembly:
	0x01DE6A48 MOV X1, X0
	0x01DE6A4C MOV X0, X8
	0x01DE6A50 BLR X9
	0x01DE6A54 LDP X20, X19, [X31 + 0x30]
	0x01DE6A58 LDR X30, [X31 + 0x20]
	0x01DE6A5C ADD X31, X31, 0x40
	0x01DE6A60 RET
	0x01DE6A64 STR D8, [X31 - 0x20]!
	0x01DE6A68 STP X30, X19, [X31 + 0x10]
	0x01DE6A6C MOV X19, X0
	0x01DE6A70 BL 0x1DE65A0
	0x01DE6A74 MOV X0, X19
	0x01DE6A78 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 And W1, W1, 1
	004 Move X2, X31
	005 Move X19, X0
	006 Call MobView.SetDeath, X0, X1
	007 Move X1, [X19+208]
	008 Compare X1, 0
	009 JumpIfEqual {14}
	010 Move X0, X19
	011 Move X2, X31
	012 Call MonoBehaviour.StopCoroutine, X0, X1
	013 Move [X19+208], X31
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Return 

Method: System.Void SetAttacking(System.Boolean isAttacking)

Disassembly:
	0x01DE4B14 MOV V0.16B, V11.16B
	0x01DE4B18 MOV V1.16B, V12.16B
	0x01DE4B1C MOV V2.16B, V13.16B
	0x01DE4B20 MOV V3.16B, V10.16B
	0x01DE4B24 MOV V4.16B, V9.16B
	0x01DE4B28 MOV V5.16B, V8.16B
	0x01DE4B2C MOV X0, X31
	0x01DE4B30 BL 0x1DF37E8
	0x01DE4B34 TBZ X0, 0x0, 0x1DE4AD0
	0x01DE4B38 MOVZ W19, 0x4
	0x01DE4B3C B 0x1DE4B44
	0x01DE4B40 MOVZ W19, 0x5
	0x01DE4B44 LDR X1, [X20]
	0x01DE4B48 ADD X0, X31, 0x20
	0x01DE4B4C BL 0x2BC434C
	0x01DE4B50 CMP W19, 0x4
	0x01DE4B54 LDP X20, X19, [X31 + 0x90]
	0x01DE4B58 LDP X22, X21, [X31 + 0x80]
	0x01DE4B5C LDR X30, [X31 + 0x70]
	0x01DE4B60 LDP D9, D8, [X31 + 0x60]
	0x01DE4B64 LDP D11, D10, [X31 + 0x50]
	0x01DE4B68 LDP D13, D12, [X31 + 0x40]
	0x01DE4B6C CSET W0, NE
	0x01DE4B70 ADD X31, X31, 0xA0
	0x01DE4B74 RET
	0x01DE4B78 BL 0x1C16F20
	0x01DE4B7C BL 0x1C16F20
	0x01DE4B80 BL 0x1C16F20
	0x01DE4B84 B 0x1DE4B98
	0x01DE4B88 B 0x1DE4B98
	0x01DE4B8C B 0x1DE4B98
	0x01DE4B90 B 0x1DE4B98
	0x01DE4B94 B 0x1DE4B98
	0x01DE4B98 MOV X19, X0
	0x01DE4B9C CMP W1, 0x1
	0x01DE4BA0 B.NE 0x1DE4BD4
	0x01DE4BA4 MOV X0, X19
	0x01DE4BA8 BL 0x3EB1AD0
	0x01DE4BAC LDR X20, [X0]
	0x01DE4BB0 BL 0x3EB1AE0
	0x01DE4BB4 ADRP X8, 0x2314000
	0x01DE4BB8 LDR X8, [X8 + 0xC20]
	0x01DE4BBC ADD X0, X31, 0x20
	0x01DE4BC0 LDR X1, [X8]
	0x01DE4BC4 BL 0x2BC434C
	0x01DE4BC8 CBNZ X20, 0x1DE4BDC
	0x01DE4BCC MOV W19, W31
	0x01DE4BD0 B 0x1DE4B50
	0x01DE4BD4 MOV X20, X31
	0x01DE4BD8 B 0x1DE4BE8
	0x01DE4BDC MOV X0, X20
	0x01DE4BE0 BL 0x1C16F18
	0x01DE4BE4 MOV X19, X0
	0x01DE4BE8 ADRP X8, 0x2314000
	0x01DE4BEC LDR X8, [X8 + 0xC20]
	0x01DE4BF0 LDR X1, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W10, [X0+216]
	006 And W9, W1, 1
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X20, [X31+16]
	009 Move X19, [X31+24]
	010 Move X30, [X31+32]
	011 Move X21, [X31+40]
	012 Return 
	013 Move W8, W1
	014 Move X1, [X0+208]
	015 Move X19, X0
	016 Move [X0+216], W9
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {30}
	021 Compare X1, 0
	022 JumpIfNotEqual {54}
	023 Move X0, X19
	024 Call BansheeView.AttackingCoroutine, X0
	025 Move X1, X0
	026 Move [X19+208], X0
	027 Move X0, X19
	028 Move X2, X31
	029 Call MonoBehaviour.StartCoroutine, X0, X1
	030 Compare X1, 0
	031 JumpIfEqual {36}
	032 Move X0, X19
	033 Move X2, X31
	034 Call MonoBehaviour.StopCoroutine, X0, X1
	035 Move [X19+208], X31
	036 Move X20, [X19+176]
	037 Compare X20, 0
	038 JumpIfEqual {65}
	039 Move W8, [X20+24]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W21, W31
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Add X8, X20, W21
	044 Move X0, [X8+32]
	045 Compare X0, 0
	046 JumpIfEqual {65}
	047 Move S0, W31
	048 Move W1, W31
	049 Move X2, X31
	050 Call SkinnedMeshRenderer.SetBlendShapeWeight, X0, X1, V0
	051 Move W8, [X20+24]
	052 Add W21, W21, 1
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X0, [X19+184]
	055 Compare X0, 0
	056 JumpIfEqual {65}
	057 Move W1, [X19+216]
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X2, X31
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Call Renderer.set_enabled, X0, X1
	064 Return 
	065 Call 0x1C17F20
	066 Call 0x1C17F28

Method: System.Collections.IEnumerator AttackingCoroutine()

Disassembly:
	0x01DE6A7C MOV V8.16B, V0.16B
	0x01DE6A80 BL 0x1DEA4B8
	0x01DE6A84 FADD S0, S8, S0
	0x01DE6A88 MOV X0, X19
	0x01DE6A8C BL 0x1DE6600
	0x01DE6A90 MOV X0, X19
	0x01DE6A94 BL 0x1DE65A0
	0x01DE6A98 LDR X8, [X19 + 0xC0]
	0x01DE6A9C CBZ X8, 0x1DE6AC8
	0x01DE6AA0 LDR V1, [X8 + 0x28]
	0x01DE6AA4 FCMP S0, S1
	0x01DE6AA8 B.GE 0x1DE6AB8
	0x01DE6AAC LDP X30, X19, [X31 + 0x10]
	0x01DE6AB0 LDR V8, [X31], #0x20
	0x01DE6AB4 RET
	0x01DE6AB8 MOV X0, X19
	0x01DE6ABC LDP X30, X19, [X31 + 0x10]
	0x01DE6AC0 LDR V8, [X31], #0x20
	0x01DE6AC4 B 0x1DE7198
	0x01DE6AC8 BL 0x1C16F20
	0x01DE6ACC STR D8, [X31 - 0x20]!
	0x01DE6AD0 STR X30, [X31 + 0x8]
	0x01DE6AD4 STP X20, X19, [X31 + 0x10]
	0x01DE6AD8 ADRP X20, 0x25F2000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x25F3000
	006 Move X21, 0x2313000
	007 Move W8, [X20+3227]
	008 Move X21, [X21+3408]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2313000
	015 Move X0, [X0+3408]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3227], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move [X20+16], W31
	025 Move [X20+32], X19
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Void Update()

Disassembly:
	0x01DE6B04 LDR X0, [X0 + 0xC40]
	0x01DE6B08 BL 0x1C16CF4
	0x01DE6B0C MOVZ W8, 0x1
	0x01DE6B10 STRB W8, [X20 + 0xCAA]
	0x01DE6B14 MOV X0, X19
	0x01DE6B18 MOV X1, X31
	0x01DE6B1C BL 0x1DF393C
	0x01DE6B20 MOV X0, X19
	0x01DE6B24 MOV X1, X31
	0x01DE6B28 MOV V8.16B, V0.16B
	0x01DE6B2C BL 0x1DEA4B8
	0x01DE6B30 FADD S0, S8, S0
	0x01DE6B34 MOV X0, X19
	0x01DE6B38 MOV X1, X31
	0x01DE6B3C BL 0x1DF38DC
	0x01DE6B40 MOV X0, X19
	0x01DE6B44 MOV X1, X31
	0x01DE6B48 BL 0x1DF393C
	0x01DE6B4C LDR X8, [X19 + 0xC0]
	0x01DE6B50 CBZ X8, 0x1DE6C54
	0x01DE6B54 LDR V1, [X8 + 0x6C]
	0x01DE6B58 FCMP S0, S1
	0x01DE6B5C B.GE 0x1DE6C20
	0x01DE6B60 ADRP X8, 0x2312000
	0x01DE6B64 LDR X8, [X8 + 0xC40]
	0x01DE6B68 ADD X20, X19, 0x178
	0x01DE6B6C LDR X0, [X8]
	0x01DE6B70 LDR W8, [X0 + 0xE0]
	0x01DE6B74 CBNZ W8, 0x1DE6B7C
	0x01DE6B78 BL 0x1C16DFC
	0x01DE6B7C MOV X0, X19
	0x01DE6B80 MOV X1, X20
	0x01DE6B84 MOV X2, X31
	0x01DE6B88 BL 0x1DEA6E8
	0x01DE6B8C TBZ X0, 0x0, 0x1DE6C34
	0x01DE6B90 LDR X20, [X20]
	0x01DE6B94 CBZ X20, 0x1DE6C54
	0x01DE6B98 LDR W1, [X20 + 0x18]
	0x01DE6B9C MOV W0, W31
	0x01DE6BA0 MOV X2, X31
	0x01DE6BA4 BL 0x3C309A8
	0x01DE6BA8 ADRP X8, 0x2312000
	0x01DE6BAC LDR X8, [X8 + 0xC70]
	0x01DE6BB0 MOV W1, W0
	0x01DE6BB4 MOV X0, X20
	0x01DE6BB8 LDR X2, [X8]
	0x01DE6BBC BL 0x301BCCC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x25F3000
	005 Move W8, [X20+3228]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x230E000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3228], W8
	016 Move W8, [X19+168]
	017 Compare W8, 0
	018 JumpIfEqual {59}
	019 Move W8, [X19+84]
	020 Compare W8, 0
	021 JumpIfEqual {52}
	022 Move W8, [X19+216]
	023 Compare W8, 0
	024 JumpIfEqual {52}
	025 Move X8, 0x230E000
	026 Move X8, [X8+1432]
	027 Move X20, [X19+200]
	028 Move X0, [X8]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X20
	034 Move X1, X31
	035 Move X2, X31
	036 Call Object.op_Inequality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {52}
	041 Move X0, [X19+200]
	042 Compare X0, 0
	043 JumpIfEqual {63}
	044 Move X20, [X19+64]
	045 Move X1, X31
	046 Call Transform.get_position, X0
	047 Compare X20, 0
	048 JumpIfEqual {63}
	049 Move X0, X20
	050 Move X1, X31
	051 Call Transform.set_position, X0, X1
	052 Move X0, X19
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X1, X31
	056 Move X30, [X31+32]
	057 Call MobView.Update, X0
	058 Return 
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Return 
	063 Call 0x1C17F20

Method: System.Void GetRenderersAndColliders()

Disassembly:
	0x01DE6BC0 LDR X8, [X19]
	0x01DE6BC4 MOV X1, X0
	0x01DE6BC8 MOV X0, X19
	0x01DE6BCC LDR X9, [X8 + 0x3B8]
	0x01DE6BD0 LDR X2, [X8 + 0x3C0]
	0x01DE6BD4 BLR X9
	0x01DE6BD8 LDR X0, [X19 + 0x160]
	0x01DE6BDC CBZ X0, 0x1DE6C54
	0x01DE6BE0 MOV X1, X31
	0x01DE6BE4 BL 0x3C32E90
	0x01DE6BE8 CBZ X0, 0x1DE6C54
	0x01DE6BEC MOV X1, X31
	0x01DE6BF0 BL 0x3C3F58C
	0x01DE6BF4 MOV X0, X19
	0x01DE6BF8 MOV X1, X31
	0x01DE6BFC BL 0x1DE9A40
	0x01DE6C00 MOV X0, X19
	0x01DE6C04 MOV X1, X31
	0x01DE6C08 BL 0x1DEA5A0
	0x01DE6C0C MOV X0, X19
	0x01DE6C10 LDP X20, X19, [X31 + 0x10]
	0x01DE6C14 LDR X30, [X31 + 0x8]
	0x01DE6C18 LDR V8, [X31], #0x20
	0x01DE6C1C B 0x1DE6D5C
	0x01DE6C20 MOV X0, X19
	0x01DE6C24 LDP X20, X19, [X31 + 0x10]
	0x01DE6C28 LDR X30, [X31 + 0x8]
	0x01DE6C2C LDR V8, [X31], #0x20
	0x01DE6C30 B 0x1DE6888
	0x01DE6C34 LDR X8, [X19]
	0x01DE6C38 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x25F3000
	007 Move X22, 0x2313000
	008 Move X20, 0x2311000
	009 Move W8, [X21+3229]
	010 Move X22, [X22+3416]
	011 Move X20, [X20+1048]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2311000
	018 Move X0, [X0+1048]
	019 Call 0x1C17CF4
	020 Move X0, 0x2313000
	021 Move X0, [X0+3416]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3229], W8
	025 Move X1, [X22]
	026 Move X0, X19
	027 Call 0x21A553C, X0
	028 Move [X19+48], X0
	029 Move X1, [X20]
	030 Move X0, X19
	031 Call 0x21A553C, X0
	032 Move [X19+192], X0
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return 

Method: System.Void .ctor()

Disassembly:
	0x01DE6C3C LDP X20, X19, [X31 + 0x10]
	0x01DE6C40 LDR X30, [X31 + 0x8]
	0x01DE6C44 LDR X2, [X8 + 0x388]
	0x01DE6C48 LDR X1, [X8 + 0x390]
	0x01DE6C4C LDR V8, [X31], #0x20
	0x01DE6C50 BR X2
	0x01DE6C54 BL 0x1C16F20
	0x01DE6C58 STP X30, X21, [X31 - 0x20]!
	0x01DE6C5C STP X20, X19, [X31 + 0x10]
	0x01DE6C60 ADRP X21, 0x25F2000
	0x01DE6C64 ADRP X20, 0x2312000
	0x01DE6C68 LDRB W8, [X21 + 0xCA8]
	0x01DE6C6C LDR X20, [X20 + 0xC40]
	0x01DE6C70 MOV X19, X0
	0x01DE6C74 TBNZ X8, 0x0, 0x1DE6CA4
	0x01DE6C78 ADRP X0, 0x2312000
	0x01DE6C7C LDR X0, [X0 + 0xCB0]
	0x01DE6C80 BL 0x1C16CF4
	0x01DE6C84 ADRP X0, 0x2312000
	0x01DE6C88 LDR X0, [X0 + 0xC70]
	0x01DE6C8C BL 0x1C16CF4
	0x01DE6C90 ADRP X0, 0x2312000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x25F3000
	006 Move X21, 0x2313000
	007 Move W8, [X20+3230]
	008 Move X21, [X21+3208]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2313000
	015 Move X0, [X0+3208]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3230], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call MobView..ctor, X0
	031 Return 

Method: System.Void .cctor()

Disassembly:
	0x01DE6C94 LDR X0, [X0 + 0xC40]
	0x01DE6C98 BL 0x1C16CF4
	0x01DE6C9C MOVZ W8, 0x1
	0x01DE6CA0 STRB W8, [X21 + 0xCA8]
	0x01DE6CA4 MOV X0, X19
	0x01DE6CA8 MOV X1, X31
	0x01DE6CAC BL 0x1DF2AA8
	0x01DE6CB0 LDR X0, [X20]
	0x01DE6CB4 ADD X20, X19, 0x178
	0x01DE6CB8 LDR W8, [X0 + 0xE0]
	0x01DE6CBC CBNZ W8, 0x1DE6CC4
	0x01DE6CC0 BL 0x1C16DFC
	0x01DE6CC4 MOV X0, X19
	0x01DE6CC8 MOV X1, X20
	0x01DE6CCC MOV X2, X31
	0x01DE6CD0 BL 0x1DEA6E8
	0x01DE6CD4 TBZ X0, 0x0, 0x1DE6D4C
	0x01DE6CD8 LDR X20, [X20]
	0x01DE6CDC CBZ X20, 0x1DE6D58
	0x01DE6CE0 LDR W1, [X20 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x25F3000
	005 Move X20, 0x2313000
	006 Move W8, [X19+3231]
	007 Move X20, [X20+3424]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2313000
	013 Move X0, [X0+3424]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3231], W8
	017 Move X8, [X20]
	018 Move X9, -19890176
	019 Move V0, [X9+3104]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X8, [X8+184]
	023 Move [X8], D0
	024 Move X30, [X31+32]
	025 Return 

