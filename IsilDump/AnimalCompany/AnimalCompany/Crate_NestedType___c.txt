Type: AnimalCompany.Crate/<>c

Method: System.Void .cctor()

Disassembly:
	0x01D8D364 BL 0x21E58C4
	0x01D8D368 CBZ X0, 0x1D8D42C
	0x01D8D36C ADRP X8, 0x2368000
	0x01D8D370 LDR X8, [X8 + 0x9A0]
	0x01D8D374 LDR X9, [X0]
	0x01D8D378 MOV X21, X0
	0x01D8D37C LDR X8, [X8]
	0x01D8D380 LDRB W11, [X9 + 0x130]
	0x01D8D384 LDRB W10, [X8 + 0x130]
	0x01D8D388 CMP W11, W10
	0x01D8D38C B.CC 0x1D8D3B4
	0x01D8D390 LDR X9, [X9 + 0xC8]
	0x01D8D394 ADD X9, X9, X10, 0x3, LSL
	0x01D8D398 LDUR X9, [X9 - 0x8]
	0x01D8D39C CMP X9, X8
	0x01D8D3A0 B.NE 0x1D8D3B4
	0x01D8D3A4 MOV X0, X21
	0x01D8D3A8 MOV X1, X31
	0x01D8D3AC BL 0x1DAECCC
	0x01D8D3B0 TBNZ X0, 0x0, 0x1D8D5AC
	0x01D8D3B4 MOV X0, X20
	0x01D8D3B8 MOV X1, X31
	0x01D8D3BC BL 0x3C89FC0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x264C000
	005 Move X20, 0x236A000
	006 Move W8, [X19+2516]
	007 Move X20, [X20+2928]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x236A000
	013 Move X0, [X0+2928]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2516], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x01D8D3C0 MOV V13.16B, V0.16B
	0x01D8D3C4 MOV V11.16B, V1.16B

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <SpawnBomb>b__26_0(Fusion.NetworkSpawnOp op)

Disassembly:
	0x01D8D3C8 FMUL S0, S0, S0
	0x01D8D3CC FMUL S1, S1, S1
	0x01D8D3D0 MOV V12.16B, V2.16B
	0x01D8D3D4 FMUL S2, S2, S2
	0x01D8D3D8 FADD S0, S0, S1
	0x01D8D3DC MOVZ W8, 0x42480000
	0x01D8D3E0 FADD S0, S2, S0
	0x01D8D3E4 FMOV S1, W8
	0x01D8D3E8 FCMP S0, S1
	0x01D8D3EC B.LE 0x1D8D5AC
	0x01D8D3F0 LDR X0, [X19 + 0x88]
	0x01D8D3F4 CBZ X0, 0x1D8D5CC
	0x01D8D3F8 MOV X1, X31
	0x01D8D3FC BL 0x3C8EBE8
	0x01D8D400 LDR X8, [X19 + 0x90]
	0x01D8D404 CBZ X8, 0x1D8D5CC
	0x01D8D408 LDR X8, [X8 + 0x80]
	0x01D8D40C CBZ X8, 0x1D8D5CC
	0x01D8D410 LDR X9, [X19 + 0x40]
	0x01D8D414 LDR X22, [X8 + 0x18]
	0x01D8D418 CBZ X9, 0x1D8D4B0
	0x01D8D41C LDR X8, [X9 + 0x20]
	0x01D8D420 CBZ X8, 0x1D8D4B0
	0x01D8D424 LDR W23, [X8]
	0x01D8D428 B 0x1D8D4B4
	0x01D8D42C MOV X0, X20
	0x01D8D430 MOV X1, X31
	0x01D8D434 BL 0x3C89FEC
	0x01D8D438 LDR X8, [X22]
	0x01D8D43C MOV X21, X0
	0x01D8D440 LDR W9, [X8 + 0xE0]
	0x01D8D444 CBNZ W9, 0x1D8D450
	0x01D8D448 MOV X0, X8
	0x01D8D44C BL 0x1C16DFC
	0x01D8D450 MOV X0, X21
	0x01D8D454 MOV X1, X31
	0x01D8D458 MOV X2, X31
	0x01D8D45C BL 0x3C354F8
	0x01D8D460 TBZ X0, 0x0, 0x1D8D5AC
	0x01D8D464 MOV X0, X20
	0x01D8D468 MOV X1, X31
	0x01D8D46C BL 0x3C89FEC
	0x01D8D470 MOV X21, X0
	0x01D8D474 MOV X0, X20
	0x01D8D478 MOV X1, X31
	0x01D8D47C BL 0x3C89FC0
	0x01D8D480 CBZ X21, 0x1D8D5CC
	0x01D8D484 FMOV S3, 20
	0x01D8D488 FMUL S2, S2, S3
	0x01D8D48C FMUL S1, S1, S3
	0x01D8D490 FMUL S0, S0, S3
	0x01D8D494 MOV X0, X21
	0x01D8D498 MOV V3.16B, V8.16B
	0x01D8D49C MOV V4.16B, V9.16B
	0x01D8D4A0 MOV V5.16B, V10.16B
	0x01D8D4A4 MOV X1, X31
	0x01D8D4A8 BL 0x3C8F5E8
	0x01D8D4AC B 0x1D8D554
	0x01D8D4B0 MOV X23, X31
	0x01D8D4B4 ADRP X11, 0x2369000
	0x01D8D4B8 LDR X8, [X21]
	0x01D8D4BC LDR W10, [X19 + 0x68]
	0x01D8D4C0 LDR X11, [X11 + 0xBF0]
	0x01D8D4C4 FMUL S13, S13, S0
	0x01D8D4C8 LDRH W9, [X8 + 0x12E]
	0x01D8D4CC FMUL S14, S11, S0
	0x01D8D4D0 LDR X1, [X11]
	0x01D8D4D4 FMUL S11, S12, S0
	0x01D8D4D8 BFM X23, X10, 0x20, 0x1F
	0x01D8D4DC CBZ X9, 0x1D8D500
	0x01D8D4E0 LDR X10, [X8 + 0xB0]
	0x01D8D4E4 ADD X10, X10, 0x8
	0x01D8D4E8 LDUR X11, [X10 - 0x8]
	0x01D8D4EC CMP X11, X1
	0x01D8D4F0 B.EQ 0x1D8D510
	0x01D8D4F4 SUBS X9, X9, 0x1
	0x01D8D4F8 ADD X10, X10, 0x10
	0x01D8D4FC B.NE 0x1D8D4E8
	0x01D8D500 MOV X0, X21
	0x01D8D504 MOV W2, W31
	0x01D8D508 BL 0x1C5C788
	0x01D8D50C B 0x1D8D51C
	0x01D8D510 LDRSW X9, [X10]
	0x01D8D514 ADD X8, X8, X9, 0x4, LSL
	0x01D8D518 ADD X0, X8, 0x138
	0x01D8D51C LDP X8, X6, [X0]
	0x01D8D520 MOVZ W1, 0xF
	0x01D8D524 MOV X0, X21
	0x01D8D528 MOV V0.16B, V8.16B
	0x01D8D52C MOV V1.16B, V9.16B
	0x01D8D530 MOV V2.16B, V10.16B
	0x01D8D534 MOV X2, X31
	0x01D8D538 MOV X3, X31
	0x01D8D53C MOV V3.16B, V13.16B
	0x01D8D540 MOV V4.16B, V14.16B
	0x01D8D544 MOV V5.16B, V11.16B
	0x01D8D548 MOV X4, X22
	0x01D8D54C MOV X5, X23
	0x01D8D550 BLR X8
	0x01D8D554 MOV X0, X20
	0x01D8D558 MOV X1, X31
	0x01D8D55C BL 0x3C89FC0
	0x01D8D560 FMUL S0, S0, S0
	0x01D8D564 FMUL S1, S1, S1
	0x01D8D568 FMUL S2, S2, S2
	0x01D8D56C MOVZ W8, 0x43480000
	0x01D8D570 LDR X0, [X19 + 0x80]
	0x01D8D574 FADD S0, S0, S1
	0x01D8D578 FMOV S1, W8
	0x01D8D57C FADD S0, S2, S0
	0x01D8D580 FDIV S0, S0, S1
	0x01D8D584 FMOV S1, 1
	0x01D8D588 FMIN S3, S0, S1
	0x01D8D58C MOV V0.16B, V8.16B
	0x01D8D590 MOV V1.16B, V9.16B
	0x01D8D594 MOV V2.16B, V10.16B
	0x01D8D598 MOV X1, X31
	0x01D8D59C BL 0x1DC15C4
	0x01D8D5A0 MOV X0, X31
	0x01D8D5A4 BL 0x3C3C73C
	0x01D8D5A8 STR S0, [X19 + 0x98]
	0x01D8D5AC LDP X20, X19, [X31 + 0x60]
	0x01D8D5B0 LDP X22, X21, [X31 + 0x50]
	0x01D8D5B4 LDP X30, X23, [X31 + 0x40]
	0x01D8D5B8 LDP D9, D8, [X31 + 0x30]
	0x01D8D5BC LDP D11, D10, [X31 + 0x20]
	0x01D8D5C0 LDP D13, D12, [X31 + 0x10]
	0x01D8D5C4 LDR V14, [X31], #0x70
	0x01D8D5C8 RET
	0x01D8D5CC BL 0x1C16F20
	0x01D8D5D0 BL 0x1C16F28
	0x01D8D5D4 STP D13, D12, [X31 - 0x60]!
	0x01D8D5D8 STP D11, D10, [X31 + 0x10]
	0x01D8D5DC STP D9, D8, [X31 + 0x20]
	0x01D8D5E0 STR X30, [X31 + 0x30]
	0x01D8D5E4 STP X22, X21, [X31 + 0x40]
	0x01D8D5E8 STP X20, X19, [X31 + 0x50]
	0x01D8D5EC ADRP X21, 0x264B000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x264C000
	007 Move W8, [X20+2517]
	008 Move X19, X1
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x236A000
	014 Move X0, [X0+2992]
	015 Call 0x1C17CF4
	016 Move X0, 0x2367000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+2517], W8
	021 Move X0, X19
	022 Move X1, X31
	023 Move [X31+8], X31
	024 Call NetworkSpawnOp.get_IsSpawned, X0
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {143}
	029 Move X21, 0x264C000
	030 Move W8, [X21+2593]
	031 Compare W8, 0
	032 JumpIfNotEqual {41}
	033 Move X0, 0x236A000
	034 Move X0, [X0+2976]
	035 Call 0x1C17CF4
	036 Move X0, 0x236A000
	037 Move X0, [X0+2984]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+2593], W8
	041 Move W8, [X19+8]
	042 Move X20, [X19+16]
	043 Compare W8, 0
	044 JumpIfEqual {49}
	045 Compare X20, 0
	046 JumpIfEqual {71}
	047 Move X8, [X20]
	048 Move W9, [X8+304]
	049 Compare X20, 0
	050 JumpIfEqual {71}
	051 Move X9, 0x236A000
	052 Move X9, [X9+2976]
	053 Move X8, [X20]
	054 Move X10, [X9]
	055 Move W9, [X8+304]
	056 Move W11, [X10+304]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X12, [X8+200]
	059 Add X11, X12, X11
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X10, 0x236A000
	063 Move X10, [X10+2984]
	064 Move X1, [X10]
	065 Move W10, [X1+304]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X8, [X8+200]
	068 Add X8, X8, X10
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, 0x2367000
	072 Move X8, [X8+1432]
	073 Move X0, [X8]
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Move X0, X20
	079 Move X1, X31
	080 Move X2, X31
	081 Call Object.op_Inequality, X0, X1
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {143}
	086 Move W8, [X21+2593]
	087 Compare W8, 0
	088 JumpIfNotEqual {97}
	089 Move X0, 0x236A000
	090 Move X0, [X0+2976]
	091 Call 0x1C17CF4
	092 Move X0, 0x236A000
	093 Move X0, [X0+2984]
	094 Call 0x1C17CF4
	095 Move W8, 1
	096 Move [X21+2593], W8
	097 Move W8, [X19+8]
	098 Move X0, [X19+16]
	099 Compare W8, 0
	100 JumpIfEqual {105}
	101 Compare X0, 0
	102 JumpIfEqual {127}
	103 Move X8, [X0]
	104 Move W9, [X8+304]
	105 Compare X0, 0
	106 JumpIfEqual {127}
	107 Move X9, 0x236A000
	108 Move X9, [X9+2976]
	109 Move X8, [X0]
	110 Move X10, [X9]
	111 Move W9, [X8+304]
	112 Move W11, [X10+304]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X12, [X8+200]
	115 Add X11, X12, X11
	116 NotImplemented "Instruction LDUR not yet implemented."
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X10, 0x236A000
	119 Move X10, [X10+2984]
	120 Move X1, [X10]
	121 Move W10, [X1+304]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X8, [X8+200]
	124 Add X8, X8, X10
	125 NotImplemented "Instruction LDUR not yet implemented."
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Compare X0, 0
	128 JumpIfEqual {153}
	129 Move X8, 0x236A000
	130 Move X8, [X8+2992]
	131 Add X1, X31, 8
	132 Move X2, [X8]
	133 Call 0x21A5990, X0, X1
	134 Move TEMP, X0
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfNotEqual {143}
	138 Move X0, [X31+8]
	139 Compare X0, 0
	140 JumpIfEqual {153}
	141 Move X1, X31
	142 Call BombController.TriggerExplosion, X0
	143 Move X20, [X31+32]
	144 Move X19, [X31+40]
	145 Move X30, [X31+16]
	146 Move X21, [X31+24]
	147 Add X31, X31, 48
	148 Return 
	149 Move X20, [X20+24]
	150 Move X0, [X0+24]
	151 Compare X0, 0
	152 JumpIfNotEqual {129}
	153 Call 0x1C17F20
	154 Move X0, X20
	155 Call 0x1C181E0

