Type: AnimalCompany.NetworkSessionManager/<ShutdownCommand>d__15

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01DBEB58 BL 0x1C16CF4
	0x01DBEB5C ADRP X0, 0x233A000
	0x01DBEB60 LDR X0, [X0 + 0x8]
	0x01DBEB64 BL 0x1C16CF4
	0x01DBEB68 MOVZ W8, 0x1
	0x01DBEB6C STRB W8, [X20 + 0xB64]
	0x01DBEB70 STR W31, [X31 + 0x8]
	0x01DBEB74 LDR W8, [X19 + 0x10]
	0x01DBEB78 CMP W8, 0x2
	0x01DBEB7C B.EQ 0x1DBEC38

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01DBF234 BL 0x3C32E90

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01DBF238 CBZ X0, 0x1DBF4B4
	0x01DBF23C ADRP X8, 0xFFFFFFFFFED2A000
	0x01DBF240 LDR V0, [X8 + 0xFB8]
	0x01DBF244 LDP S2, S7, [X31 + 0x8]
	0x01DBF248 ADRP X8, 0xFFFFFFFFFED2B000
	0x01DBF24C LDR V1, [X8 + 0xBC]
	0x01DBF250 ADRP X8, 0xFFFFFFFFFED2B000
	0x01DBF254 FMUL S2, S2, S0
	0x01DBF258 FMUL S3, S9, S0
	0x01DBF25C FMUL S0, S10, S0
	0x01DBF260 LDP S6, S5, [X31 + 0x10]
	0x01DBF264 LDP S9, S10, [X31 + 0x18]
	0x01DBF268 LDR V4, [X8 + 0x3C8]
	0x01DBF26C FMUL S11, S11, S15
	0x01DBF270 FMUL S12, S12, S15
	0x01DBF274 FMUL S13, S13, S15
	0x01DBF278 FSUB S2, S5, S2
	0x01DBF27C FMUL S5, S8, S1
	0x01DBF280 FSUB S3, S6, S3
	0x01DBF284 FMUL S6, S9, S1
	0x01DBF288 FMUL S1, S10, S1
	0x01DBF28C FSUB S0, S7, S0
	0x01DBF290 FMUL S7, S13, S4
	0x01DBF294 FADD S5, S5, S2
	0x01DBF298 FMUL S16, S12, S4
	0x01DBF29C FMUL S4, S11, S4
	0x01DBF2A0 FADD S3, S6, S3
	0x01DBF2A4 FADD S0, S1, S0
	0x01DBF2A8 FADD S2, S0, S7
	0x01DBF2AC FADD S1, S3, S16
	0x01DBF2B0 FADD S0, S5, S4
	0x01DBF2B4 MOV X1, X31
	0x01DBF2B8 MOV V15.16B, V8.16B
	0x01DBF2BC BL 0x3C3F62C
	0x01DBF2C0 LDRB W8, [X23 + 0x785]
	0x01DBF2C4 CBNZ W8, 0x1DBF2DC
	0x01DBF2C8 ADRP X0, 0x2334000
	0x01DBF2CC LDR X0, [X0 + 0x5A8]
	0x01DBF2D0 BL 0x1C16CF4
	0x01DBF2D4 MOVZ W8, 0x1
	0x01DBF2D8 STRB W8, [X23 + 0x785]
	0x01DBF2DC LDR X0, [X24]
	0x01DBF2E0 FSUB S8, S15, S11
	0x01DBF2E4 FSUB S9, S9, S12
	0x01DBF2E8 FSUB S10, S10, S13
	0x01DBF2EC LDR W8, [X0 + 0xE0]
	0x01DBF2F0 CBNZ W8, 0x1DBF2F8
	0x01DBF2F4 BL 0x1C16DFC
	0x01DBF2F8 FMUL S0, S8, S8
	0x01DBF2FC FMUL S1, S9, S9
	0x01DBF300 FADD S0, S0, S1
	0x01DBF304 FMUL S1, S10, S10
	0x01DBF308 FADD S0, S1, S0
	0x01DBF30C FSQRT S0, S0
	0x01DBF310 FCMP S0, S14
	0x01DBF314 B.LE 0x1DBF32C
	0x01DBF318 FDIV S2, S8, S0
	0x01DBF31C FDIV S1, S9, S0
	0x01DBF320 STP S1, S2, [X31 + 0x10]
	0x01DBF324 FDIV S10, S10, S0
	0x01DBF328 B 0x1DBF360
	0x01DBF32C ADRP X20, 0x2619000
	0x01DBF330 LDRB W8, [X20 + 0x783]
	0x01DBF334 CBNZ W8, 0x1DBF34C
	0x01DBF338 ADRP X0, 0x2334000
	0x01DBF33C LDR X0, [X0 + 0x5A0]
	0x01DBF340 BL 0x1C16CF4
	0x01DBF344 MOVZ W8, 0x1
	0x01DBF348 STRB W8, [X20 + 0x783]
	0x01DBF34C LDR X8, [X22]
	0x01DBF350 LDR X8, [X8 + 0xB8]
	0x01DBF354 LDR V1, [X8]
	0x01DBF358 LDP S0, S10, [X8 + 0x4]
	0x01DBF35C STP S0, S1, [X31 + 0x10]
	0x01DBF360 LDRB W8, [X25 + 0x786]
	0x01DBF364 MOV V9.16B, V14.16B
	0x01DBF368 CBNZ W8, 0x1DBF380
	0x01DBF36C ADRP X0, 0x2334000
	0x01DBF370 LDR X0, [X0 + 0x5A0]
	0x01DBF374 BL 0x1C16CF4
	0x01DBF378 MOVZ W8, 0x1
	0x01DBF37C STRB W8, [X25 + 0x786]
	0x01DBF380 LDR X8, [X22]
	0x01DBF384 LDR V0, [X31 + 0x18]
	0x01DBF388 FADD S15, S15, S15

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x261A000
	006 Move W8, [X20+2909]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x2335000
	013 Move X0, [X0+2912]
	014 Call 0x1C17CF4
	015 Move X0, 0x2339000
	016 Move X0, [X0+3936]
	017 Call 0x1C17CF4
	018 Move X0, 0x2339000
	019 Move X0, [X0+3944]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+2909], W8
	023 Move W8, [X19+16]
	024 Move W0, W31
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Compare W8, 0
	028 JumpIfNotEqual {98}
	029 Move TEMP, 0
	030 Not TEMP
	031 Move W8, TEMP
	032 Move [X19+16], W8
	033 Move X8, 0x2339000
	034 Move X21, [X19+32]
	035 Move X8, [X8+3944]
	036 Move X0, [X8]
	037 Call 0x1C17F10
	038 Move X1, X31
	039 Move X20, X0
	040 Call Object..ctor, X0
	041 Move [X19+40], X20
	042 Compare X20, 0
	043 JumpIfEqual {103}
	044 Move X8, [X19+32]
	045 Move [X20+16], X8
	046 Compare X21, 0
	047 JumpIfEqual {103}
	048 Move X0, [X21+120]
	049 Compare X0, 0
	050 JumpIfEqual {103}
	051 Move X1, X31
	052 Call CommandHandle.get_hasFinalized, X0
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {62}
	057 Move X0, [X21+120]
	058 Compare X0, 0
	059 JumpIfEqual {103}
	060 Move X1, X31
	061 Call CommandHandle.Cancel, X0
	062 Move X0, [X21+120]
	063 Move X1, X31
	064 Call Command.op_Implicit, X0
	065 Move W8, 1
	066 Move TEMP, 0
	067 Not TEMP
	068 Move W8, TEMP
	069 Move X0, [X19+40]
	070 Move TEMP, 0
	071 Not TEMP
	072 Move W8, TEMP
	073 Move [X19+16], W8
	074 Compare X0, 0
	075 JumpIfEqual {103}
	076 Move [X0+24], W31
	077 Call <>c__DisplayClass15_0.<ShutdownCommand>g__Shutdown|0, X0
	078 Move X8, 0x2335000
	079 Move X20, [X19+40]
	080 Move X8, [X8+2912]
	081 Move X0, [X8]
	082 Call 0x1C17F10
	083 Move X8, 0x2339000
	084 Move X8, [X8+3936]
	085 Move X1, X20
	086 Move X3, X31
	087 Move X21, X0
	088 Move X2, [X8]
	089 Call CommandConditionEval..ctor, X0, X1, X2
	090 Move X0, X21
	091 Move W1, W31
	092 Move X2, X31
	093 Call Commands.WaitUntil, X0, X1
	094 Move W8, 2
	095 Move [X19+24], X0
	096 Move W0, 1
	097 Move [X19+16], W8
	098 Move X20, [X31+16]
	099 Move X19, [X31+24]
	100 Move X30, [X31+32]
	101 Move X21, [X31+40]
	102 Return X0
	103 Call 0x1C17F20

Method: SpatialSys.CommandLib.Command System.Collections.Generic.IEnumerator<SpatialSys.CommandLib.Command>.get_Current()

Disassembly:
	0x01DBF38C LDR X8, [X8 + 0xB8]
	0x01DBF390 FADD S14, S0, S0

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01DBF394 LDP S0, S1, [X8 + 0x18]
	0x01DBF398 LDR V2, [X8 + 0x20]
	0x01DBF39C LDRB W8, [X23 + 0x785]
	0x01DBF3A0 FSUB S11, S0, S11
	0x01DBF3A4 LDR V0, [X31 + 0x1C]
	0x01DBF3A8 FSUB S12, S1, S12
	0x01DBF3AC FSUB S13, S2, S13
	0x01DBF3B0 FADD S8, S0, S0
	0x01DBF3B4 CBNZ W8, 0x1DBF3CC
	0x01DBF3B8 ADRP X0, 0x2334000
	0x01DBF3BC LDR X0, [X0 + 0x5A8]
	0x01DBF3C0 BL 0x1C16CF4
	0x01DBF3C4 MOVZ W8, 0x1
	0x01DBF3C8 STRB W8, [X23 + 0x785]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x2335000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2339000
	011 Move X0, [X0+3952]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01DBF3CC LDR X0, [X24]
	0x01DBF3D0 FSUB S11, S11, S15

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

